
39d53c7836acf06430e429f46866bc4c4fad4c457dc3a51c3d0a88bc4b118bbb.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a3e3
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429797
  401084:	mov    ecx,DWORD PTR ds:0x429dc3
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a3eb
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429dd3
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a3ef
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429dcf
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a3f3
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a3f7
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a3ff
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a403
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a407
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0xec5492fe
  40178d:	out    dx,eax
  40178e:	and    eax,DWORD PTR [ebx-0x107c7c7d]
  401794:	pop    esp
  401795:	add    DWORD PTR [ebx+0x3e242d2a],0x26
  40179c:	cmp    ah,BYTE PTR [eax]
  40179e:	sub    al,0x7a
  4017a0:	inc    ebx
  4017a1:	jbe    0x40181a
  4017a3:	jns    0x40181a
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x1b],ebx
  40183b:	fs ds inc edi
  40183e:	stos   DWORD PTR es:[edi],eax
  40183f:	mov    esi,0x9213c179
  401844:	pop    eax
  401845:	dec    bp
  401847:	ret    
  401848:	inc    ebp
  401849:	xchg   edi,eax
  40184a:	xor    eax,0x480950a7
  40184f:	daa    
  401850:	mov    ch,0xa2
  401852:	cmp    DWORD PTR [edi+ecx*4+0x40372395],edx
  401859:	outs   dx,BYTE PTR ds:[esi]
  40185a:	aam    0x46
  40185c:	sbb    dh,BYTE PTR [esi+0x2a]
  40185f:	and    ebp,DWORD PTR [ecx+0x64]
  401862:	sbb    eax,0x6e3ff24d
  401867:	or     BYTE PTR [ebx-0x681d9d24],dh
  40186d:	sbb    bh,dh
  40186f:	sub    ch,BYTE PTR [ecx]
  401871:	popf   
  401872:	ror    BYTE PTR [ebp+edi*4-0x42],cl
  401876:	mov    ebp,0x2318fb3e
  40187b:	aas    
  40187c:	pop    edx
  40187d:	ficom  DWORD PTR [edx+0x41]
  401880:	imul   edx,DWORD PTR [esi-0x155556c5],0xffffffdd
  401887:	mov    al,0xd2
  401889:	test   cl,al
  40188b:	fmul   QWORD PTR [ecx-0x5b]
  40188e:	lock into 
  401890:	inc    ebp
  401891:	aam    0x7f
  401893:	dec    esp
  401894:	mov    ds,esp
  401896:	ins    DWORD PTR es:[edi],dx
  401897:	retf   0xd3e2
  40189a:	xor    bl,0x15
  40189d:	xor    eax,0x2d7e51db
  4018a2:	(bad)  
  4018a4:	sbb    ebp,DWORD PTR [ebx-0x70276fac]
  4018aa:	scas   al,BYTE PTR es:[edi]
  4018ab:	mov    ah,0xef
  4018ad:	nop
  4018ae:	loopne 0x4018b4
  4018b0:	xlat   BYTE PTR ds:[ebx]
  4018b1:	pop    es
  4018b2:	sbb    DWORD PTR [esi+0x2b],esi
  4018b5:	loop   0x401906
  4018b7:	or     edx,DWORD PTR [ebx+eax*2+0x6a]
  4018bb:	and    esi,DWORD PTR [edx+0x2f839648]
  4018c1:	xchg   ebx,eax
  4018c2:	in     eax,dx
  4018c3:	cdq    
  4018c4:	add    DWORD PTR [ebp+0x3b],edi
  4018c7:	retf   0xd64b
  4018ca:	scas   eax,DWORD PTR es:[edi]
  4018cb:	fistp  DWORD PTR [eax+0x45]
  4018ce:	lea    ebp,[eax-0xb72451c]
  4018d4:	in     al,dx
  4018d5:	push   ebp
  4018d6:	xchg   ecx,eax
  4018d7:	add    eax,0x98aee593
  4018dc:	push   ebx
  4018dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018de:	ins    DWORD PTR es:[edi],dx
  4018df:	out    0x51,al
  4018e1:	popf   
  4018e2:	jae    0x401882
  4018e4:	add    ch,al
  4018e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018e7:	loope  0x4018b8
  4018e9:	add    edx,edi
  4018eb:	jbe    0x401946
  4018ed:	repnz and DWORD PTR es:[edx+0x52],esp
  4018f2:	mov    al,ds:0x632b27d3
  4018f7:	test   al,0xfe
  4018f9:	push   0xffffffb3
  4018fb:	repnz xor edi,DWORD PTR [edi+0x25]
  4018ff:	pop    ebx
  401900:	(bad)  
  401901:	mov    dh,0xc2
  401903:	adc    DWORD PTR [ebp-0x69d1a46e],edx
  401909:	out    dx,al
  40190a:	int    0xdb
  40190c:	xchg   edi,eax
  40190d:	jno    0x4018e4
  40190f:	pusha  
  401910:	icebp  
  401911:	cmp    edi,edx
  401913:	iret   
  401914:	pop    ebx
  401915:	jno    0x40192f
  401917:	fwait
  401918:	sub    eax,0x8a6bbd5a
  40191d:	mov    BYTE PTR [edx],dl
  40191f:	xor    eax,0x5f
  401922:	cmp    al,0xda
  401924:	retf   0x445a
  401927:	jmp    0x59a:0xb8c1dbf2
  40192e:	sub    al,0xaf
  401930:	adc    edx,DWORD PTR [eax+ecx*1+0x24]
  401934:	aam    0x16
  401936:	(bad)  
  401937:	xor    edi,DWORD PTR [edi-0x7c]
  40193a:	in     eax,dx
  40193b:	les    edi,FWORD PTR [esi+0x6]
  40193e:	add    al,0x5d
  401940:	mov    cl,BYTE PTR [ebx]
  401942:	stc    
  401943:	cmp    BYTE PTR [esi+0x1c],0xdf
  401947:	xor    BYTE PTR [ecx],al
  401949:	mov    esi,0xfa31f71b
  40194e:	loopne 0x4019c7
  401950:	cmp    BYTE PTR [ebx],ch
  401952:	int    0x5
  401954:	fdiv   DWORD PTR [eax+0xc]
  401957:	mov    ebx,0xa0850575
  40195c:	jo     0x401997
  40195e:	lock adc BYTE PTR [edx+ebp*1+0x11],ah
  401963:	xor    edx,ebp
  401965:	arpl   si,si
  401967:	test   al,0x98
  401969:	cld    
  40196a:	das    
  40196b:	sub    al,0x71
  40196d:	jne    0x40194d
  40196f:	mov    ?,WORD PTR [edi]
  401971:	das    
  401972:	push   ss
  401973:	ror    ecx,1
  401975:	and    dl,cl
  401977:	shl    BYTE PTR [ecx+0x46b71e01],1
  40197d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40197e:	out    dx,eax
  40197f:	ds out 0xde,al
  401982:	stos   DWORD PTR es:[edi],eax
  401983:	jp     0x4019d4
  401985:	into   
  401986:	test   eax,0x22ac91e6
  40198b:	shl    esi,1
  40198d:	mov    eax,0x52eb727c
  401992:	outs   dx,BYTE PTR ds:[esi]
  401993:	push   esp
  401994:	mov    bl,0xee
  401996:	data16 add al,0x38
  401999:	add    eax,0xad0dae12
  40199e:	inc    eax
  40199f:	sub    eax,0xe5005b7
  4019a4:	clc    
  4019a5:	push   es
  4019a6:	cmp    BYTE PTR [ebx],dl
  4019a8:	dec    esp
  4019a9:	jb     0x401935
  4019ab:	add    BYTE PTR [edi],ah
  4019ad:	test   ecx,0xda5719dc
  4019b3:	ins    DWORD PTR es:[edi],dx
  4019b4:	mov    cl,0xd2
  4019b6:	sbb    al,0xfc
  4019b8:	syscall 
  4019ba:	jbe    0x4019b2
  4019bc:	dec    eax
  4019bd:	sahf   
  4019be:	fisub  DWORD PTR [ecx+0x62]
  4019c1:	mov    ds:0x499281c2,al
  4019c6:	stos   BYTE PTR es:[edi],al
  4019c7:	or     cl,BYTE PTR [ebx]
  4019c9:	push   cs
  4019ca:	aaa    
  4019cb:	and    DWORD PTR [edx+0x12],0xd6cfd950
  4019d2:	mov    sp,0x3b83
  4019d6:	cli    
  4019d7:	ss sbb esi,0x1e
  4019db:	cli    
  4019dc:	xchg   BYTE PTR [ebx+0x75],bl
  4019df:	cmp    edx,DWORD PTR [eax]
  4019e1:	jp     0x4019af
  4019e3:	ret    
  4019e4:	sbb    DWORD PTR [esi+0x12482d1d],eax
  4019ea:	test   DWORD PTR [ecx+edi*8],edi
  4019ed:	xor    esp,DWORD PTR [ecx-0x18b69f7c]
  4019f3:	sti    
  4019f4:	or     eax,0xf4ffab33
  4019f9:	dec    esi
  4019fa:	rol    DWORD PTR [ebx],0x1c
  4019fd:	mov    ebp,0x1d7a2c29
  401a02:	mov    dh,0x12
  401a04:	jl     0x4019b4
  401a06:	push   ss
  401a07:	pop    eax
  401a08:	jno    0x4019f7
  401a0a:	jno    0x401a46
  401a0c:	xor    edx,ecx
  401a0e:	add    al,0xf5
  401a10:	std    
  401a11:	aad    0xa0
  401a13:	sub    ebx,esi
  401a15:	jmp    0x6bdc:0xdf34fcdd
  401a1c:	ins    DWORD PTR es:[edi],dx
  401a1d:	push   eax
  401a1e:	xor    al,0x9d
  401a20:	jns    0x4019e3
  401a22:	push   ss
  401a23:	scas   eax,DWORD PTR es:[edi]
  401a24:	repnz popa 
  401a26:	push   0xfffffff2
  401a28:	je     0x401a63
  401a2a:	or     BYTE PTR [ecx-0x5cd300d9],0x15
  401a31:	jmp    0xd8698b4f
  401a36:	sbb    DWORD PTR [edi+ebp*2-0x6a],eax
  401a3a:	cmp    edx,DWORD PTR [ebx-0x6]
  401a3d:	sbb    al,0xc6
  401a3f:	sub    DWORD PTR [esi],0x60bd6a29
  401a45:	fsub   DWORD PTR [esi-0x3f]
  401a48:	enter  0xf36a,0x75
  401a4c:	adc    BYTE PTR [edx+0x18e18c0c],ch
  401a52:	or     edi,DWORD PTR [esi+0xc]
  401a55:	inc    esp
  401a56:	xchg   ecx,ecx
  401a58:	add    DWORD PTR [eax],ecx
  401a5a:	bound  esp,QWORD PTR [eax]
  401a5c:	add    eax,0x6908df79
  401a61:	in     al,dx
  401a62:	(bad)  
  401a63:	pop    ebx
  401a64:	adc    eax,0x45291516
  401a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6a:	test   esp,eax
  401a6c:	iret   
  401a6d:	les    ebx,FWORD PTR [edi]
  401a6f:	scas   eax,DWORD PTR es:[edi]
  401a70:	pop    edx
  401a71:	add    DWORD PTR [eax-0x23d2332e],ebx
  401a77:	ret    0x5e3e
  401a7a:	mov    ebp,0xbf10638c
  401a7f:	outs   dx,BYTE PTR ds:[esi]
  401a80:	jle    0x401a7d
  401a82:	gs test edi,edx
  401a85:	sub    DWORD PTR [ebx+0x51948fd4],edi
  401a8b:	xor    eax,ebp
  401a8d:	sar    DWORD PTR [esi-0xd],1
  401a90:	(bad)  
  401a91:	outs   dx,BYTE PTR ds:[esi]
  401a92:	test   eax,0x3b23d056
  401a97:	pushf  
  401a98:	push   eax
  401a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a9a:	bound  eax,QWORD PTR [edx+0x10]
  401a9d:	out    dx,al
  401a9e:	retf   
  401a9f:	nop
  401aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aa1:	loopne 0x401afa
  401aa3:	mov    dh,0x39
  401aa5:	out    0xf,al
  401aa7:	push   0x68
  401aa9:	cmp    edi,DWORD PTR [edi]
  401aab:	mov    WORD PTR [edi+0x2e760dac],?
  401ab1:	cwde   
  401ab2:	fnstcw WORD PTR [edx-0x3213c39b]
  401ab8:	test   al,0xc8
  401aba:	loope  0x401ac6
  401abc:	xor    eax,0x3fa15074
  401ac1:	mov    edx,0x80011df4
  401ac6:	xor    al,0x7f
  401ac8:	int    0xcd
  401aca:	shl    BYTE PTR [edx-0x41d41a0a],cl
  401ad0:	pop    ebp
  401ad1:	mov    edx,DWORD PTR [ebx-0x61]
  401ad4:	mov    bh,0xee
  401ad6:	ror    DWORD PTR [ebp+0x2c],0x83
  401ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401adb:	and    edi,DWORD PTR [esi+0x52]
  401ade:	and    eax,0xf5de29c3
  401ae3:	xchg   DWORD PTR [edi-0x13],edx
  401ae6:	pop    es
  401ae7:	xor    BYTE PTR [ebx+ecx*2],cl
  401aea:	jno    0x401b47
  401aec:	pop    es
  401aed:	adc    BYTE PTR [esi-0x26],al
  401af0:	adc    al,0xd1
  401af2:	sbb    dl,BYTE PTR [edi]
  401af4:	int    0x76
  401af6:	add    dl,ch
  401af8:	shr    al,cl
  401afa:	retf   
  401afb:	adc    edx,ebp
  401afd:	sar    DWORD PTR [ebp+0x27],1
  401b00:	add    cl,BYTE PTR [ebx-0x6a]
  401b03:	fst    QWORD PTR [edx-0x73]
  401b06:	push   es
  401b07:	and    esp,DWORD PTR [eax-0x268c2337]
  401b0d:	and    cl,cl
  401b0f:	cwde   
  401b10:	cmp    cl,bl
  401b12:	lock push esp
  401b14:	(bad)  
  401b15:	fcomp  DWORD PTR [eax]
  401b17:	bound  ebp,QWORD PTR [ebp-0x5e]
  401b1a:	lahf   
  401b1b:	(bad)
  401b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b21:	inc    edi
  401b22:	mov    edx,DWORD PTR [ebx-0x75a3fbd7]
  401b28:	push   es
  401b29:	mov    ?,WORD PTR [eax]
  401b2b:	inc    ebp
  401b2c:	pop    eax
  401b2d:	xchg   ah,dl
  401b2f:	stc    
  401b30:	push   es
  401b31:	jns    0x401b7a
  401b33:	and    DWORD PTR [ebx-0x5e],esi
  401b36:	jl     0x401b84
  401b38:	test   eax,0xa575b224
  401b3d:	push   0x1b
  401b3f:	adc    bh,BYTE PTR [eax+0x20704c9c]
  401b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b46:	ret    
  401b47:	cld    
  401b48:	nop
  401b49:	or     dl,BYTE PTR [edx+0x42321582]
  401b4f:	ins    DWORD PTR es:[edi],dx
  401b50:	(bad)  
  401b52:	and    esp,DWORD PTR [ebp-0x54]
  401b55:	scas   eax,DWORD PTR es:[edi]
  401b56:	mov    edi,0xa3de3a8f
  401b5b:	call   0x3d438c3
  401b60:	xchg   esp,eax
  401b61:	sub    al,0xac
  401b63:	cvtps2pi mm3,QWORD PTR [ebp-0x6c]
  401b67:	cli    
  401b68:	xchg   edi,eax
  401b69:	dec    ebx
  401b6a:	dec    edi
  401b6b:	mov    ds:0xac84f788,al
  401b70:	ret    0x1b84
  401b73:	xchg   esp,eax
  401b74:	shl    DWORD PTR [eax+eiz*8],0xb9
  401b78:	fimul  DWORD PTR [ebp+0x59b27094]
  401b7e:	outs   dx,BYTE PTR ds:[esi]
  401b7f:	fild   DWORD PTR [ebx+0x2c7ff8d7]
  401b85:	jne    0x401bbe
  401b87:	loope  0x401be8
  401b89:	repz adc al,0x8d
  401b8c:	adc    edi,DWORD PTR [eax-0x1835b7a]
  401b92:	jge    0x401b16
  401b94:	popa   
  401b95:	mov    dl,0x93
  401b97:	fs mov esi,0x588af32a
  401b9d:	cmp    esp,DWORD PTR [eax-0x69]
  401ba0:	jmp    0x401b22
  401ba2:	mov    esi,0xd554faee
  401ba7:	mov    eax,ds:0xdb093faf
  401bac:	fld    DWORD PTR [edi-0x6644145c]
  401bb2:	seto   BYTE PTR [edx]
  401bb5:	mov    al,ds:0x6c44f267
  401bba:	lahf   
  401bbb:	mov    eax,ds
  401bbd:	xchg   ebx,eax
  401bbe:	pusha  
  401bbf:	lea    ecx,[esi+0x35]
  401bc2:	jnp    0x401be1
  401bc4:	dec    esi
  401bc5:	iret   
  401bc6:	(bad)  
  401bc7:	jge    0x401c0e
  401bc9:	sub    ah,BYTE PTR [eax]
  401bcb:	test   al,0x70
  401bcd:	scas   eax,DWORD PTR es:[edi]
  401bce:	(bad)  
  401bcf:	jmp    FWORD PTR [esp+eiz*8-0x43]
  401bd3:	or     al,0x71
  401bd5:	ss inc esi
  401bd7:	push   0x9e8998e8
  401bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bdd:	jbe    0x8155d7bd
  401be3:	out    dx,eax
  401be4:	xchg   esp,eax
  401be5:	mov    ch,0xfa
  401be7:	push   ebx
  401be8:	ror    BYTE PTR [edi],0xbd
  401beb:	(bad)
  401bef:	sub    ecx,DWORD PTR [ebx+0x5]
  401bf2:	push   edx
  401bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bf4:	jmp    0x94cc:0xf7236320
  401bfb:	outs   dx,DWORD PTR ds:[esi]
  401bfc:	imul   ecx,ebx,0xaa867d08
  401c02:	ins    DWORD PTR es:[edi],dx
  401c03:	ins    DWORD PTR es:[edi],dx
  401c04:	pop    ebx
  401c05:	push   esi
  401c06:	test   eax,0xb59d5d9b
  401c0b:	adc    eax,0x6337a20f
  401c10:	aaa    
  401c11:	xchg   BYTE PTR [eax+0x36210b69],ah
  401c17:	out    dx,eax
  401c18:	lods   al,BYTE PTR ds:[esi]
  401c19:	ins    BYTE PTR es:[edi],dx
  401c1a:	and    DWORD PTR [esi],edi
  401c1c:	arpl   WORD PTR [ecx-0x36d80b30],sp
  401c22:	xchg   ebp,eax
  401c23:	test   BYTE PTR [edi+eiz*1],dh
  401c26:	mov    ?,edx
  401c28:	and    eax,0x5e22a0ca
  401c2d:	dec    ecx
  401c2e:	and    BYTE PTR [eax+0x384a9703],al
  401c34:	xlat   BYTE PTR ds:[ebx]
  401c35:	call   0xd919:0xce7cb6fc
  401c3c:	push   0x30
  401c3e:	stos   DWORD PTR es:[edi],eax
  401c3f:	call   0x9096:0x4d93693e
  401c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c47:	sar    BYTE PTR [ebx-0x31],cl
  401c4a:	and    DWORD PTR [esi+0x2ec1a51b],0xffffffec
  401c51:	mov    bh,0xd
  401c53:	fisubr WORD PTR [edx-0x6e]
  401c56:	ins    DWORD PTR es:[edi],dx
  401c57:	push   ebp
  401c58:	inc    ebx
  401c59:	push   edi
  401c5a:	sub    DWORD PTR [ebx+edi*2],edi
  401c5d:	jb     0x401c7c
  401c5f:	pushf  
  401c60:	ficomp DWORD PTR [ebp+0x4ed9a652]
  401c66:	add    al,0xef
  401c68:	mov    esi,0x2238f1af
  401c6d:	aas    
  401c6e:	rol    DWORD PTR [ebp-0x28501118],1
  401c74:	jno    0x401bf8
  401c76:	sbb    dl,BYTE PTR [ecx+esi*4+0x216f7eb1]
  401c7d:	pop    ss
  401c7e:	jb     0x401cc6
  401c80:	push   cs
  401c81:	sti    
  401c82:	nop
  401c83:	and    eax,0xc17ded4d
  401c88:	jne    0x401cf9
  401c8a:	rol    DWORD PTR [esi+0x1e658db1],0x81
  401c91:	adc    eax,0xb8ef23ca
  401c96:	xchg   esp,eax
  401c97:	sub    DWORD PTR [esp+ecx*1+0x6d4b2e14],edi
  401c9e:	xor    eax,0x8526bfd9
  401ca3:	in     al,dx
  401ca4:	rcl    DWORD PTR [eax],1
  401ca6:	sub    DWORD PTR ds:0x7246cd66,esi
  401cac:	jg     0x401d1f
  401cae:	cmp    al,0x70
  401cb0:	fcmovnb st,st(7)
  401cb2:	je     0x401d18
  401cb4:	jne    0x401d20
  401cb6:	mov    WORD PTR [edx+0x6c7d52d1],?
  401cbc:	push   edi
  401cbd:	lods   eax,DWORD PTR ds:[esi]
  401cbe:	xchg   ecx,eax
  401cbf:	(bad)  
  401cc0:	push   ds
  401cc1:	shr    DWORD PTR [edx+0x52],1
  401cc4:	adc    DWORD PTR [eax+0x7461f3cc],eax
  401cca:	xchg   ecx,eax
  401ccb:	clc    
  401ccc:	fisttp QWORD PTR [bp+di]
  401ccf:	push   edi
  401cd0:	pop    esi
  401cd1:	xchg   ebp,eax
  401cd2:	outs   dx,BYTE PTR ds:[esi]
  401cd3:	push   0x3b
  401cd5:	or     al,0xb2
  401cd7:	in     al,0xec
  401cd9:	cld    
  401cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cdb:	cwde   
  401cdc:	ds mov eax,0xd354ab58
  401ce2:	movd   mm6,ebx
  401ce5:	aaa    
  401ce6:	ud2    
  401ce8:	cs int 0xc3
  401ceb:	sub    DWORD PTR [ecx-0x9],0x44
  401cef:	pop    ds
  401cf0:	call   0x8054c06
  401cf5:	pushf  
  401cf6:	mov    edi,0x7fc74510
  401cfb:	mov    esp,0xeb5bb797
  401d00:	call   0xcefbd564
  401d05:	pop    ebp
  401d06:	mov    edx,0x3c7aca1e
  401d0b:	gs in  al,0xa1
  401d0e:	loope  0x401cdc
  401d10:	or     BYTE PTR [eax],al
  401d12:	or     ecx,edi
  401d14:	nop
  401d15:	add    ch,0xb5
  401d18:	or     eax,esp
  401d1a:	retf   
  401d1b:	xchg   ebp,eax
  401d1c:	hlt    
  401d1d:	pop    ss
  401d1e:	cmc    
  401d1f:	mov    cl,0x91
  401d21:	sub    esp,DWORD PTR [ecx]
  401d23:	fcom   DWORD PTR [edx*4+0x3ad8209f]
  401d2a:	inc    edi
  401d2b:	lea    edi,[ebx+ecx*8-0x69]
  401d2f:	data16 sti 
  401d31:	into   
  401d32:	sub    BYTE PTR [ebx+ebx*4+0x3c8dac0a],ch
  401d39:	sahf   
  401d3a:	arpl   WORD PTR [esi-0xe],cx
  401d3d:	adc    al,ah
  401d3f:	(bad)  
  401d40:	icebp  
  401d41:	mov    al,ds:0x88a702
  401d46:	in     al,dx
  401d47:	add    esp,DWORD PTR [ebp+0x1e]
  401d4a:	and    ebx,DWORD PTR [ebp-0x6]
  401d4d:	xor    BYTE PTR [ecx-0x38],dh
  401d50:	or     edx,ecx
  401d52:	push   es
  401d53:	sbb    ebx,DWORD PTR [edx-0x508f4cb7]
  401d59:	ret    
  401d5a:	(bad)  
  401d5b:	xor    al,0x2c
  401d5d:	shl    DWORD PTR [esi-0x46deacfa],cl
  401d63:	fistp  QWORD PTR [edi-0x78]
  401d66:	scas   al,BYTE PTR es:[edi]
  401d67:	retf   0xd538
  401d6a:	icebp  
  401d6b:	xchg   esp,eax
  401d6c:	mov    DWORD PTR [edx+0x2c404fc1],edi
  401d72:	jecxz  0x401dcc
  401d74:	or     DWORD PTR [ecx-0x2fd2011a],0xffffffa1
  401d7b:	enter  0x6625,0x14
  401d7f:	cld    
  401d80:	hlt    
  401d81:	jg     0x401d6d
  401d83:	sbb    DWORD PTR [eax+0x42],eax
  401d86:	jns    0x401dbe
  401d88:	add    al,BYTE PTR [edx+0x2b9de380]
  401d8e:	dec    ebx
  401d8f:	cdq    
  401d90:	pop    edx
  401d91:	lea    ebx,[eax-0x12]
  401d94:	iret   
  401d95:	pop    eax
  401d96:	scas   eax,DWORD PTR es:[edi]
  401d97:	jl     0x401e16
  401d99:	cdq    
  401d9a:	mov    bh,0xfa
  401d9c:	xchg   esi,eax
  401d9d:	adc    al,0x2d
  401d9f:	sbb    BYTE PTR ds:0xb2fecf42,0x97
  401da6:	inc    ebp
  401da7:	leave  
  401da8:	jge    0x401d90
  401daa:	test   BYTE PTR [ebx],bl
  401dac:	bound  ebx,QWORD PTR [edx+0x77]
  401daf:	cmc    
  401db0:	add    eax,0xd21888a8
  401db5:	pop    ecx
  401db6:	mov    dh,0x6b
  401db8:	inc    ebp
  401db9:	jno    0x401e02
  401dbb:	ja     0x401d9f
  401dbd:	aas    
  401dbe:	xchg   BYTE PTR [ecx+0x63],ah
  401dc1:	dec    eax
  401dc2:	ret    0xab8b
  401dc5:	(bad)
  401dc9:	cwde   
  401dca:	add    ecx,esp
  401dcc:	sbb    al,BYTE PTR [esi-0x2e]
  401dcf:	jmp    0x401de1
  401dd1:	repnz xchg edi,eax
  401dd3:	mov    DWORD PTR [edx],edx
  401dd5:	push   edi
  401dd6:	icebp  
  401dd7:	sub    DWORD PTR [ecx+edx*4],ebp
  401dda:	loopne 0x401da3
  401ddc:	mov    ebp,0x22bfec6c
  401de1:	mov    ?,WORD PTR [ebp-0x51]
  401de4:	push   0x2120181b
  401de9:	nop
  401dea:	jecxz  0x401dbd
  401dec:	(bad)  
  401ded:	ror    DWORD PTR [ebp+esi*1-0x30902920],cl
  401df4:	in     al,dx
  401df5:	outs   dx,DWORD PTR ds:[esi]
  401df6:	xchg   esp,eax
  401df7:	jb     0x401d8a
  401df9:	xchg   DWORD PTR [edx-0x6bbf4baa],ebx
  401dff:	repz mov cl,0x26
  401e02:	cmp    al,0x21
  401e04:	dec    edx
  401e05:	into   
  401e06:	cmp    al,0x58
  401e08:	push   ss
  401e09:	div    BYTE PTR [ebp-0x7699215d]
  401e0f:	cwde   
  401e10:	out    0xd1,eax
  401e12:	ins    BYTE PTR es:[edi],dx
  401e13:	xchg   esp,eax
  401e14:	xor    edx,esp
  401e16:	cmp    al,0xb8
  401e18:	sub    al,0x62
  401e1a:	and    bh,BYTE PTR [ecx-0x2d]
  401e1d:	mov    dh,0x78
  401e1f:	sub    BYTE PTR [edi],dl
  401e21:	ds or  al,0xfe
  401e24:	mov    WORD PTR [ebx-0x1bea7eca],fs
  401e2a:	mov    WORD PTR [ebp-0x34fa50d],?
  401e30:	and    BYTE PTR [esi],0x5c
  401e33:	hlt    
  401e34:	ins    BYTE PTR es:[edi],dx
  401e35:	outs   dx,DWORD PTR ds:[esi]
  401e36:	leave  
  401e37:	mov    dh,0xa5
  401e39:	or     DWORD PTR [esi],ecx
  401e3b:	imul   eax,esi,0xffffffc7
  401e3e:	dec    eax
  401e3f:	nop
  401e40:	mov    ds:0x1d9ac107,eax
  401e45:	jne    0x401dce
  401e47:	sbb    BYTE PTR [ecx-0x42ddaf12],dh
  401e4d:	push   eax
  401e4e:	mov    ecx,0x64aae19e
  401e53:	ss push esp
  401e55:	cwde   
  401e56:	sahf   
  401e57:	xor    dh,BYTE PTR [eax-0x36074348]
  401e5d:	push   ebp
  401e5e:	(bad)  
  401e5f:	cmp    esi,DWORD PTR [esp+eax*2-0x4ec94125]
  401e66:	ret    0x8ebe
  401e69:	jnp    0x401ed5
  401e6b:	ins    DWORD PTR es:[edi],dx
  401e6c:	(bad)  
  401e6d:	sar    DWORD PTR [esi+0x4bc1e4a0],1
  401e73:	add    al,0xb9
  401e75:	push   ss
  401e76:	(bad)  
  401e77:	mov    ebx,0xcc1c9eb8
  401e7c:	imul   edi,DWORD PTR [ebx+ebp*1],0x8530202f
  401e83:	(bad)  
  401e84:	int    0x75
  401e86:	sahf   
  401e87:	out    dx,al
  401e88:	and    bl,BYTE PTR ds:0x59df29a7
  401e8e:	xor    BYTE PTR [ebp+0x6d2a43e2],bh
  401e94:	xchg   esi,eax
  401e95:	nop
  401e96:	fnstcw WORD PTR [ebx]
  401e98:	xor    DWORD PTR ss:[eax],ebx
  401e9b:	pop    ds
  401e9c:	and    eax,0xba46f45e
  401ea1:	shl    DWORD PTR [eax+0x2a],0xe5
  401ea5:	fs inc ecx
  401ea7:	(bad)  
  401ea8:	js     0x401ea0
  401eaa:	add    BYTE PTR cs:[eax+esi*4],0x3c
  401eaf:	xchg   ecx,eax
  401eb0:	idiv   eax
  401eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eb3:	mov    ebx,0x3b2a017d
  401eb8:	clc    
  401eb9:	sbb    ebp,eax
  401ebb:	mov    al,dh
  401ebd:	scas   eax,DWORD PTR es:[edi]
  401ebe:	push   ds
  401ebf:	add    eax,0x9e79d32b
  401ec4:	pop    eax
  401ec5:	addr16 push cs
  401ec7:	mov    ch,BYTE PTR [esi+ebp*8-0x14d13292]
  401ece:	inc    eax
  401ecf:	test   BYTE PTR [esi],0x98
  401ed2:	sub    cl,BYTE PTR [esi]
  401ed4:	out    0x2,al
  401ed6:	cmc    
  401ed7:	jl     0x401f31
  401ed9:	imul   edx,DWORD PTR [ecx],0x897b3c48
  401edf:	or     DWORD PTR [ecx-0x62088cd4],eax
  401ee5:	pop    esi
  401ee6:	pusha  
  401ee7:	xchg   edx,eax
  401ee8:	mov    ebp,0x9fd121e2
  401eed:	inc    esi
  401eee:	hlt    
  401eef:	lods   al,BYTE PTR ds:[esi]
  401ef0:	inc    ebp
  401ef1:	int3   
  401ef2:	repnz xchg esp,eax
  401ef4:	xor    DWORD PTR ss:[esi],0xffffff86
  401ef8:	jo     0x401ea2
  401efa:	or     esi,DWORD PTR [ebp+0x637f5c72]
  401f00:	xor    eax,0x8c426d47
  401f05:	into   
  401f06:	cmp    BYTE PTR [ebx+0x1f0bdc44],bl
  401f0c:	inc    edx
  401f0d:	aas    
  401f0e:	xor    ebp,DWORD PTR [eax]
  401f10:	hlt    
  401f11:	retf   0xefbf
  401f14:	mov    dh,0x20
  401f16:	xor    DWORD PTR [ecx+0x5c6e4e16],edx
  401f1c:	test   eax,0x9e8891a8
  401f21:	mov    ds:0x28afbb7b,al
  401f26:	frstor [edi-0x254c151d]
  401f2c:	in     eax,0xa2
  401f2e:	(bad)  
  401f2f:	jle    0x401f41
  401f31:	in     eax,dx
  401f32:	jns    0x401f34
  401f34:	sub    ah,BYTE PTR [eax]
  401f36:	out    0x18,al
  401f38:	lea    esp,[ebx+0x4f]
  401f3b:	mov    esi,0x8cde824e
  401f40:	mov    edi,0x221eb6d5
  401f45:	sbb    al,0x1d
  401f47:	push   es
  401f48:	or     bh,cl
  401f4a:	test   al,0x5a
  401f4c:	stos   DWORD PTR es:[edi],eax
  401f4d:	sbb    ah,BYTE PTR [edi+0x47525f98]
  401f53:	test   al,0x56
  401f55:	dec    eax
  401f56:	cmp    al,0xfd
  401f58:	push   0x40
  401f5a:	pop    eax
  401f5b:	push   es
  401f5c:	inc    edi
  401f5d:	lahf   
  401f5e:	or     DWORD PTR [eax-0x4232e3ba],edx
  401f64:	pop    ebx
  401f65:	mov    esi,DWORD PTR [ebx+0x64]
  401f68:	and    eax,0x90c6bcda
  401f6d:	shl    DWORD PTR [ecx],0xfd
  401f70:	push   ebp
  401f71:	ss inc edx
  401f73:	pop    ecx
  401f74:	jae    0x401fae
  401f76:	mov    ds:0x6b5ed2f,al
  401f7b:	popf   
  401f7c:	fwait
  401f7d:	das    
  401f7e:	pusha  
  401f7f:	add    dh,dl
  401f81:	mov    eax,ds:0x245dd289
  401f86:	mov    ch,0x9a
  401f88:	cmp    eax,0xdb0ea83e
  401f8d:	fsub   st,st(3)
  401f8f:	into   
  401f90:	xchg   BYTE PTR [edx+0x16ea413b],dh
  401f96:	mov    bh,0x68
  401f98:	nop
  401f99:	fcmovne st,st(0)
  401f9b:	stos   BYTE PTR es:[di],al
  401f9d:	dec    esp
  401f9e:	cdq    
  401f9f:	rol    DWORD PTR [ebp+0x49e912b8],cl
  401fa5:	jmp    FWORD PTR [edx]
  401fa7:	(bad)  
  401faa:	push   0x5385509f
  401faf:	aad    0xf2
  401fb1:	fcmovne st,st(4)
  401fb3:	pop    ss
  401fb4:	mov    DWORD PTR [eax],eax
  401fb6:	dec    edx
  401fb7:	mov    esi,0xaedd3ea7
  401fbc:	mov    edx,0xd894d585
  401fc1:	mov    bh,0xf7
  401fc3:	sub    BYTE PTR [edi+0x7a],al
  401fc6:	jecxz  0x402033
  401fc8:	xor    esi,DWORD PTR [edi+edx*2+0x598a4962]
  401fcf:	xor    al,0xaa
  401fd1:	hlt    
  401fd2:	dec    esp
  401fd3:	mov    eax,0x3e81a7a9
  401fd8:	mov    edx,0x749bc534
  401fdd:	call   0xb6b3:0xf9d823a2
  401fe4:	add    ch,BYTE PTR [edx+0xf4d0255]
  401fea:	int3   
  401feb:	scas   eax,DWORD PTR es:[edi]
  401fec:	dec    ebx
  401fed:	ds xchg ebx,eax
  401fef:	out    dx,eax
  401ff0:	(bad)
  401ff4:	adc    dl,bl
  401ff6:	add    DWORD PTR [edx-0x78],0xffffffbf
  401ffa:	ins    BYTE PTR es:[edi],dx
  401ffb:	iret   
  401ffc:	and    BYTE PTR [ebx+esi*1+0x7242f565],0x6d
  402004:	outs   dx,BYTE PTR ds:[esi]
  402005:	fiadd  WORD PTR [edx+0x7da86f69]
  40200b:	cmp    ebp,DWORD PTR [eax-0x53529b17]
  402011:	and    DWORD PTR [esi],esp
  402013:	mov    dh,0x93
  402015:	jb     0x401fc8
  402017:	popf   
  402018:	dec    ecx
  402019:	inc    esi
  40201a:	retf   
  40201b:	sti    
  40201c:	(bad)  
  40201d:	das    
  40201e:	push   edx
  40201f:	jecxz  0x402002
  402021:	mov    ecx,0x914807fa
  402026:	test   BYTE PTR [edi-0x24],dl
  402029:	hlt    
  40202a:	adc    ecx,DWORD PTR [esp+esi*2-0x7a73da76]
  402031:	or     ch,dh
  402033:	pop    ebx
  402034:	xor    BYTE PTR ds:[edi],dl
  402037:	or     bl,bh
  402039:	je     0x402060
  40203b:	test   eax,0x2d867dd2
  402040:	mov    cl,dl
  402042:	mov    ds:0x180364aa,eax
  402047:	add    BYTE PTR [ecx-0xb],bl
  40204a:	and    eax,0x9ba4d296
  40204f:	pop    esp
  402050:	scas   eax,DWORD PTR es:[edi]
  402051:	push   ss
  402052:	setp   dl
  402055:	pop    ds
  402056:	mov    fs,WORD PTR [edi-0x52f22558]
  40205c:	nop
  40205d:	sub    al,BYTE PTR [ecx]
  40205f:	and    DWORD PTR [eax],0x17
  402062:	stos   BYTE PTR es:[edi],al
  402063:	ins    BYTE PTR es:[edi],dx
  402064:	mov    dl,BYTE PTR [ecx+0x5dee2a5d]
  40206a:	add    al,0x88
  40206c:	mov    esp,0xf56dfd9c
  402071:	adc    bh,bl
  402073:	mov    eax,0x857006b1
  402078:	mov    al,0xa8
  40207a:	pop    ebp
  40207b:	aam    0xe8
  40207d:	add    DWORD PTR [ecx+0x1a],0x13f3a883
  402084:	std    
  402085:	pop    edi
  402086:	xchg   ebx,eax
  402087:	and    dh,bh
  402089:	push   ss
  40208a:	add    al,0x3a
  40208c:	inc    ebx
  40208d:	iret   
  40208e:	add    al,0x45
  402090:	mov    bl,0x17
  402092:	and    eax,0x529001ef
  402097:	in     eax,dx
  402098:	pusha  
  402099:	lea    esp,ds:0xc7c6ee44
  40209f:	sbb    BYTE PTR [ebx-0x2e1a8fbe],dl
  4020a5:	leave  
  4020a6:	push   edx
  4020a7:	sar    DWORD PTR [esi],cl
  4020a9:	das    
  4020aa:	dec    edi
  4020ab:	jg     0x402036
  4020ad:	add    BYTE PTR [ebx+0x4f842a81],ah
  4020b3:	xchg   ecx,eax
  4020b4:	push   0x6027e8c2
  4020b9:	arpl   WORD PTR [ebp+0x53],bx
  4020bc:	and    ebx,DWORD PTR [ebp+0x3627eacd]
  4020c2:	pushf  
  4020c3:	ins    DWORD PTR es:[edi],dx
  4020c4:	clc    
  4020c5:	ins    BYTE PTR es:[edi],dx
  4020c6:	push   cs
  4020c7:	xchg   ecx,edx
  4020c9:	dec    ecx
  4020ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020cb:	rcl    ecx,0x17
  4020ce:	js     0x402094
  4020d0:	popf   
  4020d1:	retf   0xe5c0
  4020d4:	jg     0x402098
  4020d6:	ins    DWORD PTR es:[edi],dx
  4020d7:	or     ah,BYTE PTR ss:[edx+0x2f]
  4020db:	cld    
  4020dc:	enter  0x3c23,0x8b
  4020e0:	gs mov ebp,0xe9dc47c9
  4020e6:	sbb    BYTE PTR [eax-0x439a467],cl
  4020ec:	dec    edi
  4020ed:	mov    DWORD PTR [ecx],0x9ab79354
  4020f3:	cli    
  4020f4:	outs   dx,BYTE PTR ds:[esi]
  4020f5:	jns    0x402116
  4020f7:	rcl    eax,0x56
  4020fa:	xchg   BYTE PTR [edi],dl
  4020fc:	fwait
  4020fd:	add    DWORD PTR [edx+0x618321a7],esp
  402103:	inc    esp
  402104:	fnstenv cs:[eax-0x78]
  402108:	ds mov ecx,?
  40210b:	push   ss
  40210c:	jmp    0xda83e91
  402111:	inc    ebp
  402112:	inc    ebx
  402113:	aaa    
  402114:	mov    dh,0x6e
  402116:	sub    BYTE PTR [esi],0xc9
  402119:	dec    edi
  40211a:	hlt    
  40211b:	jl     0x402123
  40211d:	clc    
  40211e:	sbb    BYTE PTR ds:0xeb5d6a6c,cl
  402124:	popa   
  402125:	aad    0x8f
  402127:	(bad)  
  402128:	xor    eax,0x55bc3110
  40212d:	inc    ecx
  40212e:	mov    ds:0x695ac486,al
  402133:	retf   
  402134:	mov    bh,0xc5
  402136:	scas   al,BYTE PTR es:[edi]
  402137:	(bad)  
  402138:	mov    BYTE PTR [esi],dl
  40213a:	shl    BYTE PTR [esi],cl
  40213c:	in     al,0x83
  40213e:	loop   0x4021ad
  402140:	fild   DWORD PTR [ecx-0x1497cfef]
  402146:	sub    cl,BYTE PTR [esi]
  402148:	sbb    bh,ah
  40214a:	and    eax,0x6617e48f
  40214f:	pop    ebp
  402150:	mov    ebx,0x115bb7e1
  402155:	hlt    
  402156:	js     0x4021a1
  402158:	mov    bl,0x62
  40215a:	pop    esi
  40215b:	add    ah,ah
  40215d:	and    cl,al
  40215f:	cdq    
  402160:	js     0x4020fc
  402162:	dec    eax
  402163:	cmc    
  402164:	sub    bh,bh
  402166:	inc    esi
  402167:	pop    ds
  402168:	push   ecx
  402169:	inc    DWORD PTR [edx-0x3fb1bdad]
  40216f:	jge    0x40214f
  402171:	imul   eax,esi,0x834648ce
  402177:	xchg   ebp,eax
  402178:	in     al,dx
  402179:	scas   eax,DWORD PTR es:[edi]
  40217a:	mov    edi,0xb58198da
  40217f:	jno    0x402170
  402181:	inc    esi
  402182:	(bad)  
  402183:	cmp    eax,0xe4effbfc
  402188:	push   cs
  402189:	popa   
  40218a:	lea    ecx,ss:[edx-0x6c]
  40218e:	ror    BYTE PTR [eax+0x701eab9f],cl
  402194:	(bad)  
  402195:	fsub   QWORD PTR [ebx-0x174dc77f]
  40219b:	mov    esp,DWORD PTR [ebp*8-0xf4f1abf]
  4021a2:	ins    DWORD PTR es:[edi],dx
  4021a3:	outs   dx,BYTE PTR ds:[esi]
  4021a4:	push   ss
  4021a5:	jg     0x4021ef
  4021a7:	push   ecx
  4021a8:	mov    al,ds:0x240b9abf
  4021ad:	sub    DWORD PTR [ebx-0x11],esp
  4021b0:	imul   esp,DWORD PTR [edi+0x6f40a1dd],0xfffffffc
  4021b7:	pop    ebx
  4021b8:	test   DWORD PTR [eax],ecx
  4021ba:	(bad)  
  4021bb:	lock imul esi,DWORD PTR [edi-0x5d],0x1a2496f2
  4021c3:	or     edi,DWORD PTR [edi+0x27ea7217]
  4021c9:	lea    edx,[edi+0x72e12b97]
  4021cf:	sub    DWORD PTR [edx-0x19],esi
  4021d2:	dec    ebx
  4021d3:	shl    BYTE PTR [eax-0x1a],0xec
  4021d7:	loopne 0x4021c6
  4021d9:	push   ecx
  4021da:	and    DWORD PTR [ebp-0x32],esi
  4021dd:	jecxz  0x402235
  4021df:	add    esp,DWORD PTR [esi+0x5cbc2714]
  4021e5:	mov    ecx,0x463d9b91
  4021ea:	xchg   ecx,eax
  4021eb:	mov    ebx,0xa028a35b
  4021f0:	mov    esp,?
  4021f2:	jno    0x4021c1
  4021f4:	and    eax,0x3fdbe278
  4021f9:	pop    ds
  4021fa:	mov    ah,0xa4
  4021fc:	and    al,0xe8
  4021fe:	cmc    
  4021ff:	aad    0x1
  402201:	or     edi,DWORD PTR [ebx-0x1e]
  402204:	inc    ebx
  402205:	repnz add esp,edx
  402208:	jge    0x40227a
  40220a:	fst    QWORD PTR [eax]
  40220c:	les    ecx,FWORD PTR [ecx+0x3b]
  40220f:	icebp  
  402210:	xor    BYTE PTR gs:0x5cb2fcd9,al
  402217:	mov    ds:0x9e9f5932,al
  40221c:	adc    al,0x98
  40221e:	imul   edx,DWORD PTR [eax+0x190ae5e7],0x4b
  402225:	int    0xa7
  402227:	cmp    eax,0xac470463
  40222c:	xchg   esp,eax
  40222d:	jne    0x402260
  40222f:	ss shl eax,1
  402232:	or     BYTE PTR [ecx+0x65],dl
  402235:	xor    al,0x69
  402237:	rol    BYTE PTR [edi+ebx*1+0x1b],cl
  40223b:	aas    
  40223c:	into   
  40223d:	sbb    eax,0x2fb72fa9
  402242:	fwait
  402243:	adc    ebx,DWORD PTR [eax+ecx*4]
  402246:	imul   ebx,DWORD PTR [ebx-0x11ee4760],0xe5cf4f83
  402250:	mov    edi,0x94193d
  402255:	add    al,0x6a
  402257:	cli    
  402258:	ins    BYTE PTR es:[edi],dx
  402259:	and    BYTE PTR [ebp+0x5d6d842c],cl
  40225f:	xchg   ecx,eax
  402260:	call   FWORD PTR [edx-0x34]
  402263:	or     BYTE PTR [ecx+0x5e],dh
  402266:	ins    DWORD PTR es:[edi],dx
  402267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402268:	jmp    0x729d:0xf2ed144a
  40226f:	inc    ebp
  402270:	xor    edi,DWORD PTR [esi-0x72]
  402273:	pop    ecx
  402274:	sti    
  402275:	or     al,0x5e
  402277:	outs   dx,DWORD PTR ds:[esi]
  402278:	or     al,0xc9
  40227a:	cld    
  40227b:	loopne 0x4022d5
  40227d:	hlt    
  40227e:	sub    BYTE PTR [ecx+ecx*2-0x433032ed],dl
  402285:	shr    esi,cl
  402287:	add    DWORD PTR [eax],edi
  402289:	inc    edx
  40228a:	(bad)  
  40228c:	loopne 0x4022e5
  40228e:	aad    0x3d
  402290:	xchg   esp,eax
  402291:	jo     0x4022b9
  402293:	retf   0x529b
  402296:	fcmovb st,st(1)
  402298:	sbb    ch,BYTE PTR [ebx+ecx*1]
  40229b:	fs xor ebx,ecx
  40229e:	push   ecx
  40229f:	xchg   edi,eax
  4022a0:	arpl   WORD PTR [edx+0x3],bx
  4022a3:	ret    0x2531
  4022a6:	mov    ch,ch
  4022a8:	(bad)  
  4022a9:	(bad)  
  4022aa:	imul   esp,DWORD PTR [esi],0xffffffab
  4022ad:	mov    ebp,ecx
  4022af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022b0:	popf   
  4022b1:	arpl   WORD PTR [edx-0x73],bp
  4022b4:	pusha  
  4022b5:	lds    ebx,FWORD PTR [esp-0x3d08d1ff]
  4022bc:	aaa    
  4022bd:	inc    edx
  4022be:	or     al,0xed
  4022c0:	add    eax,DWORD PTR [ecx+0x68]
  4022c3:	or     BYTE PTR [esi+0x12],bl
  4022c6:	imul   ebx,DWORD PTR [eax],0xe2cec701
  4022cc:	frstor [ebp+0x507ea451]
  4022d2:	pusha  
  4022d3:	repz out 0xb3,al
  4022d6:	xor    cl,BYTE PTR [edi]
  4022d8:	imul   ecx,DWORD PTR [edx],0xb0ad2a0
  4022de:	cwde   
  4022df:	popa   
  4022e0:	or     BYTE PTR [eax+0x594bc61f],0xfc
  4022e7:	dec    esi
  4022e8:	xor    BYTE PTR ds:0x9077e84b,0x62
  4022ef:	fild   DWORD PTR [ebx+0x7]
  4022f2:	fldcw  WORD PTR [eax-0x1f1bf1c0]
  4022f8:	xor    BYTE PTR [ebp+ecx*2+0x8],ch
  4022fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022fd:	mov    eax,ds:0x7d0fc333
  402302:	bound  edi,QWORD PTR [ecx-0x2]
  402305:	sar    DWORD PTR [edi-0x35],1
  402308:	scas   al,BYTE PTR es:[edi]
  402309:	divps  xmm1,XMMWORD PTR [esi]
  40230c:	into   
  40230d:	(bad)
  402311:	push   0x49
  402313:	(bad)  
  402314:	imul   ebx,DWORD PTR [edx+0x7a95cf8d],0x4
  40231b:	push   esi
  40231c:	jne    0x40235b
  40231e:	(bad)
  402321:	div    edi
  402323:	pop    ds
  402324:	push   es
  402325:	sub    eax,0x502dd3bc
  40232a:	lods   al,BYTE PTR ds:[esi]
  40232b:	mov    cl,0x9e
  40232d:	add    BYTE PTR [ecx],bh
  40232f:	(bad)  
  402330:	xlat   BYTE PTR ds:[ebx]
  402331:	push   0xffffffa9
  402333:	mov    ds:0x76461370,al
  402338:	les    ebp,FWORD PTR [ecx+edx*8]
  40233b:	mov    ds:0x26d877bd,eax
  402340:	or     ebp,edi
  402342:	scas   al,BYTE PTR es:[edi]
  402343:	mov    ds:0x8087a5bf,eax
  402348:	jo     0x402317
  40234a:	je     0x402385
  40234c:	test   BYTE PTR ds:0x3dc3cbdc,0x45
  402353:	sub    eax,0xfe46b3b5
  402358:	or     esp,DWORD PTR [ebp+eiz*8+0x1e]
  40235c:	in     eax,dx
  40235d:	imul   esi,DWORD PTR [ebx+eax*1+0x29],0xe0d29fcb
  402365:	daa    
  402366:	add    BYTE PTR [esi+0x63],dl
  402369:	or     ch,BYTE PTR [esi]
  40236b:	sbb    al,BYTE PTR [eax-0x7e]
  40236e:	imul   DWORD PTR [eax]
  402370:	sub    al,0x8e
  402372:	cmp    bl,al
  402374:	mov    BYTE PTR gs:0xdaefdaf9,dh
  40237b:	mov    al,0x69
  40237d:	je     0x402375
  40237f:	pop    edx
  402380:	inc    eax
  402381:	mov    ds:0xd9411b4b,eax
  402386:	cmp    al,0xd2
  402388:	jp     0x402391
  40238a:	out    0xd8,eax
  40238c:	inc    ebx
  40238d:	sahf   
  40238e:	sub    bl,BYTE PTR [esi+0x21a21fed]
  402394:	adc    cl,BYTE PTR [ecx]
  402396:	push   esp
  402397:	add    eax,0xe4965538
  40239c:	sbb    DWORD PTR [ebx],esi
  40239e:	or     BYTE PTR [esi-0x25a6325],0x87
  4023a5:	dec    ecx
  4023a6:	pop    esi
  4023a7:	mov    BYTE PTR [edi+0x64],dl
  4023aa:	lock add dh,BYTE PTR [edi]
  4023ad:	scas   eax,DWORD PTR es:[edi]
  4023ae:	mov    DWORD PTR [ebp+0x4ba11981],edi
  4023b4:	cmp    al,0xc2
  4023b6:	dec    edi
  4023b7:	pusha  
  4023b8:	fmul   QWORD PTR [ecx]
  4023ba:	jmp    0xb82668e7
  4023bf:	scas   eax,DWORD PTR es:[edi]
  4023c0:	ss sub eax,0xf4a1e321
  4023c6:	jns    0x4023de
  4023c8:	hlt    
  4023c9:	sub    BYTE PTR [edx],0xeb
  4023cc:	data16 rcr BYTE PTR [ecx],1
  4023cf:	imul   ecx,eax,0xffffffa8
  4023d2:	adc    eax,eax
  4023d4:	out    0xaa,al
  4023d6:	pop    esi
  4023d7:	clc    
  4023d8:	mov    ebx,0x27e99447
  4023dd:	pusha  
  4023de:	aaa    
  4023df:	sub    BYTE PTR [eax-0x429cf666],cl
  4023e5:	sub    BYTE PTR [edi+0x26],al
  4023e8:	sub    eax,DWORD PTR [esi]
  4023ea:	(bad)  
  4023eb:	in     eax,dx
  4023ec:	jg     0x402381
  4023ee:	repnz sub al,0xf0
  4023f1:	mov    eax,ds:0xde4f9797
  4023f6:	mov    ds,ebp
  4023f8:	std    
  4023f9:	pop    ss
  4023fa:	mov    ds:0x3f34dea4,al
  4023ff:	push   ds
  402400:	test   BYTE PTR [ebx],ah
  402402:	sti    
  402403:	xor    al,0x8c
  402405:	fisubr DWORD PTR ds:0x937c56e7
  40240b:	int    0x6b
  40240d:	test   bh,al
  40240f:	(bad)  
  402411:	idiv   BYTE PTR [edi-0x51f271b3]
  402417:	sahf   
  402418:	pop    ebp
  402419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40241a:	mov    edi,DWORD PTR [ebp+0x51]
  40241d:	and    eax,0xfc40c1dc
  402422:	and    BYTE PTR [edi],dh
  402424:	add    esi,DWORD PTR [edx-0x37]
  402427:	xchg   edx,eax
  402428:	sub    edi,ebx
  40242a:	jecxz  0x402476
  40242c:	push   eax
  40242d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40242e:	in     al,dx
  40242f:	(bad)  
  402430:	xor    al,BYTE PTR [edi+0x11]
  402433:	int    0x3f
  402435:	popw   es
  402437:	sub    al,0x58
  402439:	adc    eax,0xabffa631
  40243e:	push   edi
  40243f:	imul   ebx,DWORD PTR [ebp-0x775c907c],0x6d6d6135
  402449:	mov    ebp,DWORD PTR [edi+0x2ab7fb39]
  40244f:	jnp    0x4024cd
  402451:	jnp    0x402438
  402453:	in     al,0xbf
  402455:	xor    edi,DWORD PTR [ebx-0x3be5b8ec]
  40245b:	in     eax,dx
  40245c:	ds jmp 0xc653:0xa4eb04c9
  402464:	(bad)  
  402465:	aas    
  402466:	sub    eax,0x9939fa45
  40246b:	mov    cl,0x71
  40246d:	jne    0x4024d7
  40246f:	jbe    0x4024b4
  402471:	cld    
  402472:	mov    al,ds:0x5510d482
  402477:	ret    
  402478:	jns    0x40241e
  40247a:	mov    dl,BYTE PTR [ebx+0x5960009c]
  402480:	hlt    
  402481:	mov    edx,0xba531e30
  402486:	add    dl,BYTE PTR es:[esi]
  402489:	push   esi
  40248a:	pop    ds
  40248b:	and    ebx,eax
  40248d:	daa    
  40248e:	xchg   ebx,eax
  40248f:	or     al,0xd7
  402491:	sub    BYTE PTR [ecx-0x50],ch
  402494:	neg    BYTE PTR [eax-0x1322e13e]
  40249a:	mov    BYTE PTR [edi+0x67],al
  40249d:	jns    0x40243b
  40249f:	xor    DWORD PTR [ebp+0x3d],ecx
  4024a2:	xor    DWORD PTR [eax-0x51],eax
  4024a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024a6:	push   edx
  4024a7:	data16 fild QWORD PTR [edi]
  4024aa:	sbb    cl,BYTE PTR [esi-0x4]
  4024ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024ae:	xchg   DWORD PTR [ecx+0x522b055a],ebx
  4024b4:	mov    DWORD PTR ds:0x937dbf84,ebx
  4024ba:	push   esp
  4024bb:	retf   0xd9db
  4024be:	test   BYTE PTR [ebx],0xef
  4024c1:	sti    
  4024c2:	or     ebx,esi
  4024c4:	sbb    BYTE PTR [ebx+0x4e0023c8],dl
  4024ca:	test   al,0x1e
  4024cc:	es push ds
  4024ce:	mov    ch,0xe7
  4024d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024d1:	xor    eax,DWORD PTR [ebx*8-0x6cace311]
  4024d8:	and    bl,BYTE PTR [ebx-0x18af5223]
  4024de:	fisttp QWORD PTR [eax]
  4024e0:	jmp    0xdd18:0xbed1d3da
  4024e7:	cmp    cl,al
  4024e9:	leave  
  4024ea:	popf   
  4024eb:	out    dx,al
  4024ec:	aas    
  4024ed:	(bad)  
  4024ee:	in     al,0x36
  4024f0:	mov    ecx,0x964568e3
  4024f5:	mov    bl,0xa0
  4024f7:	fld    TBYTE PTR [edi-0x71]
  4024fa:	sbb    eax,0xa117de20
  4024ff:	retf   
  402500:	mov    ch,0xbc
  402502:	ss push esp
  402504:	(bad)  
  402506:	xchg   esp,eax
  402507:	xlat   BYTE PTR ds:[ebx]
  402508:	inc    ecx
  402509:	ror    BYTE PTR [ebx+esi*8+0x624408b4],cl
  402510:	psubsw mm1,QWORD PTR [eax+0x25]
  402514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402515:	das    
  402516:	xchg   ecx,eax
  402517:	cdq    
  402518:	fwait
  402519:	sti    
  40251a:	aad    0x74
  40251c:	scas   al,BYTE PTR es:[edi]
  40251d:	cwde   
  40251e:	stc    
  40251f:	inc    ebx
  402520:	in     eax,0x18
  402522:	jmp    0x32c30fd4
  402527:	pushf  
  402528:	rcr    DWORD PTR [edi],0xaa
  40252b:	dec    eax
  40252c:	push   es
  40252d:	and    al,0x57
  40252f:	xchg   ecx,eax
  402530:	mov    ebp,ss
  402532:	jl     0x40259b
  402534:	cmp    eax,0xb050303c
  402539:	xor    esp,DWORD PTR [esi]
  40253b:	xor    ebx,DWORD PTR [ebp+ecx*1+0x14bebaf2]
  402542:	sar    cl,0x46
  402545:	dec    esp
  402546:	sbb    BYTE PTR [esp+edi*4-0x8d88afe],ch
  40254d:	imul   dh
  40254f:	add    esp,DWORD PTR [ecx+ecx*4+0x67]
  402553:	(bad)  
  402554:	dec    ebp
  402555:	jne    0x402513
  402557:	dec    edx
  402558:	jnp    0x40257f
  40255a:	mov    al,0x9f
  40255c:	das    
  40255d:	push   edi
  40255e:	retf   0x3ad7
  402561:	pop    esp
  402562:	cs ins BYTE PTR es:[edi],dx
  402564:	in     al,0xa9
  402566:	or     eax,0xfde5ae61
  40256b:	aad    0xc6
  40256d:	mov    edx,0x3a3eb025
  402572:	and    eax,0xfd7ac5d1
  402577:	dec    ebx
  402578:	add    eax,0xa0fd5553
  40257d:	rcr    ebx,0xd7
  402580:	stc    
  402581:	inc    esi
  402582:	popa   
  402583:	retf   
  402584:	pop    edx
  402585:	(bad)  
  402586:	clc    
  402587:	outs   dx,DWORD PTR ds:[esi]
  402588:	or     ecx,DWORD PTR ds:0x12ad0c41
  40258e:	inc    edx
  40258f:	jp     0x402586
  402591:	jae    0x402578
  402593:	(bad)  
  402594:	stos   DWORD PTR es:[edi],eax
  402595:	std    
  402596:	xchg   ecx,eax
  402597:	push   edx
  402598:	jmp    0x292442c0
  40259d:	(bad)  
  40259f:	adc    DWORD PTR [edi],esi
  4025a1:	imul   edx,ebp,0x502080a3
  4025a7:	mov    ah,0xd4
  4025a9:	inc    ebp
  4025aa:	xchg   ebx,eax
  4025ab:	xchg   BYTE PTR gs:[esi-0x2c],bl
  4025af:	mov    bh,0x92
  4025b1:	clc    
  4025b2:	sub    BYTE PTR [ebx],cl
  4025b4:	pop    ecx
  4025b5:	xor    BYTE PTR [edx*1-0x167925db],ah
  4025bc:	cs xchg ecx,eax
  4025be:	into   
  4025bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c0:	xor    al,ch
  4025c2:	in     eax,0xaf
  4025c4:	or     bl,BYTE PTR [esi]
  4025c6:	mov    eax,ds:0x6a564a46
  4025cb:	mov    bh,0x65
  4025cd:	sbb    al,0xa7
  4025cf:	shl    BYTE PTR [eax+ebp*4],0xc1
  4025d3:	std    
  4025d4:	sub    BYTE PTR [edx*8+0x54b0dd06],bl
  4025db:	cmp    al,0xc5
  4025dd:	stos   BYTE PTR es:[edi],al
  4025de:	mov    esi,0x53342f56
  4025e3:	mov    ah,0x66
  4025e5:	and    eax,0x5ceba64c
  4025ea:	clc    
  4025eb:	test   DWORD PTR [ebp+0x7e],edx
  4025ee:	mov    ds:0x2ac6acc9,al
  4025f3:	shr    DWORD PTR ds:0xe3174eec,cl
  4025f9:	(bad)  
  4025fa:	ins    DWORD PTR es:[edi],dx
  4025fb:	pop    ebp
  4025fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025fd:	mov    dl,0xc3
  4025ff:	fptan  
  402601:	scas   eax,DWORD PTR es:[edi]
  402602:	mov    bh,0x38
  402604:	(bad)  
  402605:	jb     0x402634
  402607:	add    BYTE PTR [ebp+0x4574e6a1],al
  40260d:	shl    DWORD PTR [edx],0xa9
  402610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402611:	jmp    0xc9b0:0x7f24187a
  402618:	mov    dl,0xa3
  40261a:	dec    edi
  40261b:	add    al,0x53
  40261d:	inc    edx
  40261e:	mov    esi,0xc2b83f56
  402623:	shl    DWORD PTR [ecx-0x1756d23c],cl
  402629:	or     BYTE PTR [ecx+0x45fd4268],bl
  40262f:	mov    eax,0x7c8bdad8
  402634:	xor    BYTE PTR es:[eax+0x32],dh
  402638:	arpl   WORD PTR [edx+0x6b],si
  40263b:	xor    cl,BYTE PTR [eax+0x5dfa5257]
  402641:	xchg   ecx,eax
  402642:	loopne 0x4025c7
  402644:	or     eax,0x63cfb33c
  402649:	out    dx,al
  40264a:	fldenv [edx]
  40264c:	stc    
  40264d:	loop   0x402654
  40264f:	dec    eax
  402650:	call   0x6241cd4
  402655:	dec    ebx
  402656:	fcom   DWORD PTR [ebp-0xc784e6f]
  40265c:	adc    BYTE PTR [ecx],ch
  40265e:	pop    ebx
  40265f:	icebp  
  402660:	rcl    ch,cl
  402662:	xrelease mov DWORD PTR [esi],edi
  402665:	clc    
  402666:	push   0xbaf2fdc7
  40266b:	push   ebx
  40266c:	ffree  st(6)
  40266e:	and    esi,esp
  402670:	or     al,0x28
  402672:	enter  0xee26,0x77
  402676:	out    dx,al
  402677:	jp     0x40268f
  402679:	repz xchg edx,eax
  40267b:	cmp    DWORD PTR [ecx+0x230336ee],0x32
  402682:	mov    bh,0x38
  402684:	jle    0x4026d0
  402686:	test   DWORD PTR [esi-0x59000c73],ecx
  40268c:	fld    QWORD PTR [esi+0xc]
  40268f:	inc    ebp
  402690:	cmp    edi,DWORD PTR [ebp-0x1]
  402693:	arpl   bp,cx
  402695:	das    
  402696:	cwde   
  402697:	sbb    ch,ch
  402699:	mov    esp,0x585a512a
  40269e:	sub    DWORD PTR [edi-0x64],0x27a42751
  4026a5:	fld    TBYTE PTR [edi]
  4026a7:	ins    BYTE PTR es:[edi],dx
  4026a8:	jo     0x40263d
  4026aa:	mov    WORD PTR [ebx],gs
  4026ac:	cmc    
  4026ad:	jecxz  0x4026c1
  4026af:	into   
  4026b0:	stc    
  4026b1:	cli    
  4026b2:	inc    ebx
  4026b3:	aad    0x57
  4026b5:	ret    0x78d0
  4026b8:	push   edi
  4026b9:	test   eax,0xb7b35dad
  4026be:	adc    ecx,DWORD PTR [ebx+0x36500463]
  4026c4:	push   DWORD PTR [edi-0x6f]
  4026c7:	jns    0x4026b4
  4026c9:	push   ecx
  4026ca:	sbb    DWORD PTR ds:0x657351ac,ebx
  4026d0:	add    edx,DWORD PTR [ebp+0x2]
  4026d3:	jnp    0x4026bb
  4026d5:	jp     0x402715
  4026d7:	cmp    DWORD PTR [esi],esp
  4026d9:	xchg   esi,eax
  4026da:	inc    ecx
  4026db:	push   ebp
  4026dc:	sbb    DWORD PTR [edi+0x47075856],eax
  4026e2:	sbb    DWORD PTR [edi],0xffffffe9
  4026e5:	je     0x402741
  4026e7:	and    al,0xe6
  4026e9:	xchg   edi,eax
  4026ea:	cmovb  ebx,DWORD PTR [ebx-0x6ad9237b]
  4026f1:	adc    BYTE PTR [esp+edi*4+0x5fce521f],al
  4026f8:	and    bl,bl
  4026fa:	int3   
  4026fb:	mov    al,ds:0x44d8809a
  402700:	in     eax,dx
  402701:	dec    DWORD PTR [ecx+0x512908c7]
  402707:	or     eax,0xf6cc65a2
  40270c:	cdq    
  40270d:	cmp    ah,BYTE PTR [ebx+0x30204044]
  402713:	into   
  402714:	mov    ecx,0x4c3e16f6
  402719:	mov    edi,0x2efe03a6
  40271e:	data16 mov cl,0xd8
  402721:	scas   eax,DWORD PTR es:[edi]
  402722:	retf   0xc1b6
  402725:	inc    eax
  402726:	and    BYTE PTR [ecx-0x50],0x9f
  40272a:	pop    esi
  40272b:	in     eax,0x7f
  40272d:	pop    ss
  40272e:	punpckhdq mm2,QWORD PTR [eax+0x2d]
  402732:	push   eax
  402733:	jmp    0xde84:0x96fc061d
  40273a:	pop    esi
  40273b:	enter  0xee9e,0x5b
  40273f:	shr    BYTE PTR [ecx+eax*4-0x7b0e84d],cl
  402746:	(bad)  
  402747:	adc    eax,0x67092b3c
  40274c:	xchg   BYTE PTR [eax],bl
  40274e:	xchg   ch,ah
  402750:	and    dl,bl
  402752:	cli    
  402753:	sbb    dl,ch
  402755:	mov    ebp,DWORD PTR [esi-0x3d]
  402758:	cmc    
  402759:	mov    ch,0xbf
  40275b:	rcr    ebx,cl
  40275d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40275f:	mov    esp,0xe5a8d3c2
  402764:	enter  0xeea5,0xa9
  402768:	add    esp,DWORD PTR [edi-0x69]
  40276b:	pop    esi
  40276c:	rcl    BYTE PTR [ebx],0xff
  40276f:	dec    edx
  402770:	jge    0x4027b4
  402772:	inc    ebp
  402773:	outs   dx,DWORD PTR ds:[esi]
  402774:	sub    ah,ah
  402776:	(bad)  
  402777:	push   ebp
  402778:	int    0x51
  40277a:	gs cld 
  40277c:	rol    BYTE PTR [ebp-0x30],1
  40277f:	push   cs
  402780:	mov    edi,0x7f9cd38d
  402785:	and    al,0x84
  402787:	mov    ds:0x20f074fa,eax
  40278c:	data16 in al,0xe8
  40278f:	cli    
  402790:	add    DWORD PTR [esi+esi*2-0x6],eax
  402794:	leave  
  402795:	add    eax,0x56020db9
  40279a:	aas    
  40279b:	cmovb  edi,esi
  40279e:	leave  
  40279f:	shr    DWORD PTR [ecx+0xe],cl
  4027a2:	xchg   esi,eax
  4027a3:	sub    BYTE PTR [esi+0x6dc7d6a8],ah
  4027a9:	aas    
  4027aa:	pop    ds
  4027ab:	pop    ds
  4027ac:	idiv   DWORD PTR [ecx+0xf3aa516]
  4027b2:	push   0x7b
  4027b4:	enter  0xbe9c,0xe0
  4027b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b9:	lahf   
  4027ba:	imul   ecx,DWORD PTR [edi-0x3c],0xffffffaf
  4027be:	(bad)  
  4027c0:	push   edi
  4027c1:	sbb    eax,0x14004dd9
  4027c6:	cmp    ebx,DWORD PTR [eax+0x4b]
  4027c9:	push   edi
  4027ca:	xchg   ebp,eax
  4027cb:	sti    
  4027cc:	pop    ebx
  4027cd:	or     DWORD PTR [esi-0x54],esi
  4027d0:	in     eax,0xc0
  4027d2:	fdiv   QWORD PTR [edi-0x5f]
  4027d5:	jns    0x402780
  4027d7:	ret    
  4027d8:	xchg   ebx,eax
  4027d9:	outs   dx,DWORD PTR ds:[esi]
  4027da:	sub    esi,DWORD PTR [ebp+0x8bdd027]
  4027e0:	jno    0x402778
  4027e2:	pop    ecx
  4027e3:	jle    0x40282a
  4027e5:	(bad)  
  4027e7:	sbb    cl,BYTE PTR [edi+ebp*4]
  4027ea:	jnp    0x4027c0
  4027ec:	gs jno 0x402853
  4027ef:	jne    0x402834
  4027f1:	push   esp
  4027f2:	or     BYTE PTR [edx+0x1efd015f],bl
  4027f8:	xchg   edi,eax
  4027f9:	adc    eax,0xca073b0b
  4027fe:	jmp    0x6f2c:0x2f7595f2
  402805:	aad    0x42
  402807:	std    
  402808:	pop    ds
  402809:	rol    edx,cl
  40280b:	shl    DWORD PTR [esi+0x24bc4010],1
  402811:	repnz in eax,0x43
  402814:	adc    DWORD PTR [edx],esp
  402816:	mov    ecx,0xd71e9d5d
  40281b:	add    dh,BYTE PTR [ecx+edi*4]
  40281e:	xor    eax,0x38aac248
  402823:	sbb    eax,0xab4376ee
  402828:	mov    ecx,0x6b305cc8
  40282d:	mov    bl,0xab
  40282f:	in     eax,dx
  402830:	sar    BYTE PTR [esi+0x40],cl
  402833:	mov    esi,0x29cb0597
  402838:	cdq    
  402839:	rcl    edx,0x6c
  40283c:	outs   dx,DWORD PTR ds:[esi]
  40283d:	(bad)  
  40283e:	jns    0x402893
  402840:	cmp    DWORD PTR [ecx-0x33],ecx
  402843:	les    eax,FWORD PTR ds:0x1c15e137
  402849:	ins    DWORD PTR es:[edi],dx
  40284a:	loop   0x4028a4
  40284c:	mov    edx,0x7c58ca7b
  402851:	adc    al,0x70
  402853:	sub    BYTE PTR [ebx-0x22],ah
  402856:	into   
  402857:	jmp    0x453a35a0
  40285c:	mov    ecx,0x206e61f9
  402861:	xor    esi,DWORD PTR [ebp+ecx*2-0x44]
  402865:	add    eax,0xe56114d1
  40286a:	sbb    BYTE PTR [ebp-0xdafa68a],bh
  402870:	pushf  
  402871:	popa   
  402872:	add    BYTE PTR [ebx],al
  402874:	inc    edx
  402875:	push   ebp
  402876:	pop    edi
  402877:	popa   
  402878:	in     eax,0x84
  40287a:	pop    ds
  40287b:	loopne 0x40283b
  40287d:	lds    eax,FWORD PTR [eax]
  40287f:	cld    
  402880:	mov    bh,BYTE PTR [ebx+0x1c338428]
  402886:	imul   edi,DWORD PTR [esi],0x503f2f40
  40288c:	rsm    
  40288e:	ret    
  40288f:	push   0x61
  402891:	mov    edx,0x18b4ef5d
  402896:	push   esi
  402897:	stc    
  402898:	mov    eax,0xe068439
  40289d:	mov    BYTE PTR [ecx+0x18],dl
  4028a0:	jne    0x4028f0
  4028a2:	mov    esi,0x567cd9b2
  4028a7:	push   0x5e
  4028a9:	loop   0x4028a1
  4028ab:	stos   BYTE PTR es:[edi],al
  4028ac:	scas   eax,DWORD PTR es:[edi]
  4028ad:	and    al,0xeb
  4028af:	mov    cl,0x1c
  4028b1:	aaa    
  4028b2:	call   0xda67536b
  4028b7:	shl    DWORD PTR [ebp+0x5f11b23c],0x44
  4028be:	imul   BYTE PTR [edx+0x151ab2e5]
  4028c4:	mov    WORD PTR [edi],fs
  4028c6:	add    al,0x8e
  4028c8:	mov    ah,0x72
  4028ca:	test   eax,0xb18ee0b0
  4028cf:	(bad)  
  4028d0:	push   ebx
  4028d1:	pushf  
  4028d2:	sub    al,0x41
  4028d4:	lods   eax,DWORD PTR ds:[esi]
  4028d5:	mov    edx,0x3fc75134
  4028da:	mov    al,0x60
  4028dc:	std    
  4028dd:	es ffreep st(1)
  4028e0:	sbb    eax,0x69c68680
  4028e5:	inc    edi
  4028e6:	dec    esp
  4028e7:	xor    ax,0x8bd7
  4028eb:	addr16 iret 
  4028ed:	ins    DWORD PTR es:[edi],dx
  4028ee:	dec    esp
  4028ef:	(bad)  
  4028f0:	in     al,dx
  4028f1:	or     esp,DWORD PTR [edx]
  4028f3:	cmp    BYTE PTR [edx+0x4f],0xbb
  4028f7:	sbb    eax,0x3127962a
  4028fc:	inc    eax
  4028fd:	test   DWORD PTR [esi-0x2e59d049],edx
  402903:	add    eax,0xb1823078
  402908:	test   al,0xc3
  40290a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40290b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40290c:	sub    bh,BYTE PTR [ecx-0x6c044c90]
  402912:	or     ch,BYTE PTR [esi-0x754440d8]
  402918:	push   ecx
  402919:	bound  ebp,QWORD PTR [eax]
  40291b:	fistp  WORD PTR [ebx-0x6de28547]
  402921:	push   ebp
  402922:	dec    edi
  402923:	or     eax,0xae419be3
  402928:	xor    BYTE PTR [ecx],0xc3
  40292b:	dec    ebp
  40292c:	mov    al,0x8d
  40292e:	pcmpeqw mm6,QWORD PTR [ebx]
  402931:	psrlq  mm4,mm5
  402934:	out    dx,eax
  402935:	test   eax,0x8db8699c
  40293a:	lahf   
  40293b:	repnz add DWORD PTR [esi-0x86f8c42],eax
  402942:	es cwde 
  402944:	fstp   TBYTE PTR [ebx]
  402946:	mov    ds:0x8d5460ac,eax
  40294b:	xor    eax,0x3fa353e8
  402950:	add    DWORD PTR [edi],edi
  402952:	gs clc 
  402954:	ret    
  402955:	push   ebx
  402956:	inc    esp
  402957:	rol    DWORD PTR [ebx-0x9],0x67
  40295b:	ror    DWORD PTR [eax-0x20151952],1
  402961:	mov    bl,0x9c
  402963:	xor    al,0xd9
  402965:	mov    dh,0x54
  402967:	add    DWORD PTR [ebp-0x3c],eax
  40296a:	gs add eax,0xb6dfe583
  402970:	add    DWORD PTR [edx],eax
  402972:	shr    DWORD PTR [esi+ebx*4+0x5e9ca9d0],cl
  402979:	shl    BYTE PTR [ecx+0x58],1
  40297c:	fs xchg esi,eax
  40297e:	mov    ds:0x8a696e63,eax
  402983:	ins    DWORD PTR es:[edi],dx
  402984:	or     ecx,edx
  402986:	call   0xdbcb05a1
  40298b:	add    al,0x8e
  40298d:	pushf  
  40298e:	mov    bh,0xce
  402990:	cwde   
  402991:	sub    al,cl
  402993:	shl    DWORD PTR [ebp-0x4da54acd],1
  402999:	cli    
  40299a:	jns    0x4029eb
  40299c:	adc    cl,bh
  40299e:	rcr    DWORD PTR [ebx+0x24e94ca5],cl
  4029a4:	jno    0x4029bd
  4029a6:	adc    ah,BYTE PTR gs:0xd38ebc69
  4029ad:	jge    0x402983
  4029af:	enter  0x191d,0xa6
  4029b3:	cmp    al,0x74
  4029b5:	jmp    0x9b33:0x38b170dc
  4029bc:	ss shr BYTE PTR fs:[edi+eax*1-0x2d],1
  4029c2:	adc    BYTE PTR [ebx-0x79],0x16
  4029c6:	add    ebx,DWORD PTR [edi+0x2710e6c3]
  4029cc:	inc    edx
  4029cd:	sti    
  4029ce:	push   ecx
  4029cf:	test   DWORD PTR [ecx],edx
  4029d1:	cmovge esi,DWORD PTR [ecx-0xd3f8a49]
  4029d8:	shr    DWORD PTR [ebx+0x60],1
  4029db:	retf   
  4029dc:	mov    ds:0xc02af2dc,eax
  4029e1:	and    BYTE PTR [esi+0x7b],ah
  4029e4:	or     al,0xc8
  4029e6:	std    
  4029e7:	shl    DWORD PTR [ebx+0x1b],1
  4029ea:	mov    DWORD PTR [edx],eax
  4029ec:	and    eax,0xa1b0f447
  4029f1:	adc    esp,DWORD PTR [ecx-0x1d2b464f]
  4029f7:	dec    esp
  4029f8:	aaa    
  4029f9:	ds je  0x4029ce
  4029fc:	rcr    BYTE PTR [esi+ebp*1+0x6d],0x23
  402a01:	iret   
  402a02:	imul   ebp,DWORD PTR [edx-0x48],0x6bcaef6e
  402a09:	pop    ecx
  402a0a:	jmp    0x6ecc:0x57f9582
  402a11:	dec    esp
  402a12:	adc    eax,0xe3d73ab4
  402a17:	mov    ebx,0x40dd8c53
  402a1c:	ds xchg edi,eax
  402a1e:	xor    bh,BYTE PTR ds:0xfbdb1cfa
  402a24:	push   0x6a
  402a26:	arpl   WORD PTR [eax-0x68],si
  402a29:	and    DWORD PTR [ebx-0x3d],esp
  402a2c:	adc    bh,BYTE PTR [esi]
  402a2e:	dec    ebx
  402a2f:	mov    ebx,0x3c2b49c7
  402a34:	xchg   edx,eax
  402a35:	inc    eax
  402a36:	call   0xfd3c:0x6b4f4ee1
  402a3d:	push   cs
  402a3e:	aas    
  402a3f:	xchg   edi,eax
  402a40:	loope  0x4029cf
  402a42:	mov    cl,0xb9
  402a44:	(bad)  
  402a45:	sbb    BYTE PTR [esi-0x1d8e37d9],cl
  402a4b:	mov    ebp,0x5aa61b14
  402a50:	sbb    dl,dl
  402a52:	mov    bh,0xc2
  402a54:	aas    
  402a55:	adc    edi,DWORD PTR [esi+0x1998e50]
  402a5b:	xchg   edi,eax
  402a5c:	loop   0x4029ea
  402a5e:	mov    eax,0x4f5c9cf2
  402a63:	int    0x81
  402a65:	pop    ebp
  402a66:	call   0xb2f7149b
  402a6b:	popa   
  402a6c:	aam    0xa1
  402a6e:	dec    eax
  402a6f:	outs   dx,DWORD PTR ds:[esi]
  402a70:	lods   eax,DWORD PTR ds:[esi]
  402a71:	cli    
  402a72:	jb     0x402a1e
  402a74:	sub    eax,0xba60c1cc
  402a79:	inc    ecx
  402a7a:	inc    esi
  402a7c:	inc    eax
  402a7d:	mov    WORD PTR [edx+0x34b94a16],cs
  402a83:	test   DWORD PTR [ebx+ebx*1-0x7a],ecx
  402a87:	shl    DWORD PTR [ecx],0xed
  402a8a:	in     eax,0x74
  402a8c:	xchg   BYTE PTR [edx-0x1e],dh
  402a8f:	push   ds
  402a90:	pop    ebp
  402a91:	cs out dx,eax
  402a93:	cmp    eax,0x72ee460a
  402a98:	ja     0x402a8d
  402a9a:	mov    dl,0xb5
  402a9c:	shl    BYTE PTR [esi+ebp*1-0xc],cl
  402aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402aa1:	out    dx,eax
  402aa2:	jb     0x402a83
  402aa4:	push   esi
  402aa5:	data16 je 0x402a2b
  402aa8:	mov    esp,0x66f8c518
  402aad:	push   es
  402aae:	loopne 0x402acf
  402ab0:	and    bh,cl
  402ab2:	dec    ecx
  402ab3:	fcom   DWORD PTR [ebp+0x63]
  402ab6:	xlat   BYTE PTR ds:[ebx]
  402ab7:	sbb    edx,DWORD PTR [edx-0x5c00543d]
  402abd:	scas   al,BYTE PTR es:[edi]
  402abe:	sub    bl,BYTE PTR [esi-0x5]
  402ac1:	mov    dl,0xd5
  402ac3:	call   0x31a4cbe
  402ac8:	mov    cl,0x12
  402aca:	shl    ah,1
  402acc:	fisttp QWORD PTR [edx-0x29]
  402acf:	push   edi
  402ad0:	cmc    
  402ad1:	into   
  402ad2:	imul   ecx,DWORD PTR [ebp+0x32],0x1f94e3cf
  402ad9:	paddw  mm6,QWORD PTR [ebx]
  402adc:	aaa    
  402add:	inc    ebp
  402ade:	mov    bh,0x45
  402ae0:	xchg   DWORD PTR [esi+0x5e],ebx
  402ae3:	pop    edx
  402ae4:	jl     0x402a67
  402ae6:	dec    edx
  402ae7:	ret    
  402ae8:	sub    eax,0x37fdcfa6
  402aed:	jb     0x402b07
  402aef:	mul    DWORD PTR [ecx]
  402af1:	and    ebp,DWORD PTR [eax]
  402af3:	or     DWORD PTR [edx+edx*8-0x74],ebp
  402af7:	iret   
  402af8:	repz cmc 
  402afa:	dec    edx
  402afb:	add    al,0x48
  402afd:	inc    esi
  402afe:	or     eax,0x7aa46fa1
  402b03:	mov    edi,cs
  402b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b06:	lock scas al,BYTE PTR es:[edi]
  402b08:	mov    ebx,0x63e3966e
  402b0d:	out    0x98,al
  402b0f:	mov    ds:0x8f5f84f4,al
  402b14:	push   0xa15beb1c
  402b19:	xchg   BYTE PTR [ebx],dh
  402b1b:	inc    eax
  402b1c:	outs   dx,DWORD PTR ds:[esi]
  402b1d:	mov    dh,0xcc
  402b1f:	das    
  402b20:	sub    eax,0xd8c0186d
  402b25:	adc    eax,0x8aca6684
  402b2a:	sahf   
  402b2b:	sub    al,0xd6
  402b2d:	push   esp
  402b2e:	inc    edi
  402b2f:	inc    esi
  402b30:	lea    edx,[ebp+0x50cee4fb]
  402b36:	push   0xffffff83
  402b38:	mov    edx,esp
  402b3a:	dec    esi
  402b3b:	xor    BYTE PTR [esi-0x2e],dh
  402b3e:	cmp    bl,ah
  402b40:	push   esp
  402b41:	loope  0x402b77
  402b43:	(bad)  
  402b45:	mov    al,0x58
  402b47:	arpl   WORD PTR [ebp-0x20dd4007],dx
  402b4d:	cmp    al,0x91
  402b4f:	in     al,dx
  402b50:	cmp    al,0x7e
  402b52:	or     eax,0x4099a699
  402b57:	xchg   ebp,eax
  402b58:	mov    ebp,esi
  402b5a:	out    dx,al
  402b5b:	stos   DWORD PTR es:[edi],eax
  402b5c:	jno    0x402b38
  402b5e:	sub    bl,dl
  402b60:	adc    eax,0x371bd69e
  402b65:	ficomp DWORD PTR [ebp-0x37]
  402b68:	in     eax,dx
  402b69:	lahf   
  402b6a:	es xchg ebx,eax
  402b6c:	shl    DWORD PTR [ebx-0x36],cl
  402b6f:	xchg   esi,eax
  402b70:	pop    ebx
  402b71:	pop    ecx
  402b72:	(bad)  
  402b74:	mov    edx,0xe9a745fb
  402b79:	push   ebx
  402b7a:	aam    0xf3
  402b7c:	aam    0x15
  402b7e:	jno    0x402bd7
  402b80:	sbb    BYTE PTR [eax+0x52],dl
  402b83:	int3   
  402b84:	popf   
  402b85:	ins    BYTE PTR es:[edi],dx
  402b86:	popa   
  402b87:	(bad)  
  402b88:	xchg   ebx,eax
  402b89:	in     al,0x88
  402b8b:	std    
  402b8c:	pusha  
  402b8d:	and    eax,0xa81f5e5a
  402b92:	jg     0x402b8e
  402b94:	mov    BYTE PTR [esi+0x134d3b62],bl
  402b9a:	fsubr  QWORD PTR [ebp-0x1527355d]
  402ba0:	pop    ebx
  402ba1:	xor    dl,bl
  402ba3:	cmp    esi,ebx
  402ba5:	rol    DWORD PTR [edi],1
  402ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba8:	test   esp,edi
  402baa:	or     al,0xaa
  402bac:	(bad)  
  402bad:	xchg   esi,eax
  402bae:	mov    ebp,edx
  402bb0:	mov    dl,0xa9
  402bb2:	rcl    DWORD PTR [esi],cl
  402bb4:	out    0xc0,al
  402bb6:	add    edi,DWORD PTR [esi]
  402bb8:	mov    eax,edi
  402bba:	addr16 sub eax,0xc943404e
  402bc0:	daa    
  402bc1:	test   al,0x71
  402bc3:	xchg   DWORD PTR [edi-0x6aae8cc1],edx
  402bc9:	mov    ch,0x46
  402bcb:	add    eax,0xe075af18
  402bd0:	ins    DWORD PTR es:[edi],dx
  402bd1:	cmp    al,al
  402bd3:	ins    BYTE PTR es:[edi],dx
  402bd4:	mov    esp,ds
  402bd6:	imul   ebx,DWORD PTR [ecx+0x1144988e],0xe30b6049
  402be0:	mov    al,0x31
  402be2:	and    al,cl
  402be4:	test   BYTE PTR [eax-0xf458bf4],al
  402bea:	jmp    0x4804d9
  402bef:	cld    
  402bf0:	fcomi  st,st(2)
  402bf2:	adc    ebp,eax
  402bf4:	daa    
  402bf5:	js     0x402bc3
  402bf7:	std    
  402bf8:	(bad)  
  402bf9:	push   esp
  402bfa:	jbe    0x402ba0
  402bfc:	cmp    eax,0x6120676
  402c01:	mov    ecx,0xd95dd9b5
  402c06:	loope  0x402c70
  402c08:	bound  ebp,QWORD PTR [esi-0x45b4af42]
  402c0e:	push   edx
  402c0f:	jo     0x402c57
  402c11:	and    al,0xe6
  402c13:	jl     0x402bc8
  402c15:	pushf  
  402c16:	mov    ebp,0x51cf3a60
  402c1b:	(bad)
  402c1e:	pop    eax
  402c1f:	ins    DWORD PTR es:[edi],dx
  402c20:	shl    edx,1
  402c22:	add    esp,edi
  402c24:	mov    esp,DWORD PTR [eax]
  402c26:	add    eax,0xe79ccf3a
  402c2b:	lea    edx,[edi+esi*8-0x9d4120a]
  402c32:	daa    
  402c33:	pop    es
  402c34:	jmp    0x7f5e:0x99e67685
  402c3b:	pop    esp
  402c3c:	adc    al,0xe5
  402c3e:	shl    ecx,0x1d
  402c41:	pop    ebx
  402c42:	cmp    dh,BYTE PTR ds:0x850e82c8
  402c48:	aam    0xed
  402c4a:	loope  0x402ca9
  402c4c:	jmp    FWORD PTR [ebp+0x5e]
  402c4f:	dec    ecx
  402c50:	int3   
  402c51:	inc    BYTE PTR [edx-0x1f0d0bd2]
  402c57:	cmp    edx,DWORD PTR [edi-0x6e]
  402c5a:	mov    edx,0xa059382b
  402c5f:	pushf  
  402c60:	mov    esi,0x84b1e679
  402c65:	cld    
  402c66:	cmp    bh,BYTE PTR [edi]
  402c68:	xor    DWORD PTR [eax-0x5],0x1a
  402c6c:	mov    eax,0x95ca6648
  402c71:	cmp    BYTE PTR es:[ecx+0x1f4d65ad],bl
  402c78:	outs   dx,BYTE PTR ds:[esi]
  402c79:	push   0x17
  402c7b:	push   ebp
  402c7c:	icebp  
  402c7d:	sbb    DWORD PTR [eax],esi
  402c7f:	add    ecx,DWORD PTR [ebp-0x80]
  402c82:	mov    esi,0x3301fca4
  402c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c88:	xlat   BYTE PTR ds:[ebx]
  402c89:	xor    DWORD PTR [ecx-0x58220e84],esp
  402c8f:	add    eax,0x70a53cef
  402c94:	das    
  402c95:	pushf  
  402c96:	retf   
  402c97:	xchg   DWORD PTR [ecx+0x56f196ed],ecx
  402c9d:	mov    bl,0xed
  402c9f:	loope  0x402c31
  402ca1:	test   eax,0xa48bd534
  402ca6:	and    ah,ch
  402ca8:	push   edi
  402ca9:	lods   eax,DWORD PTR ds:[esi]
  402caa:	or     eax,0xcab99f08
  402caf:	mov    dl,0x4e
  402cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cb2:	mov    cl,0x80
  402cb4:	sahf   
  402cb5:	dec    ebx
  402cb6:	push   cs
  402cb7:	or     BYTE PTR ds:0x1e95cbd,ch
  402cbd:	or     eax,0x90d938ad
  402cc2:	inc    esp
  402cc3:	or     DWORD PTR [edi+0x71],esi
  402cc6:	mov    ds:0xbeafd124,al
  402ccb:	jnp    0x402ceb
  402ccd:	aam    0x2e
  402ccf:	add    al,0x78
  402cd1:	sbb    eax,0x9ef84aad
  402cd6:	iret   
  402cd7:	sbb    al,0x4c
  402cd9:	hlt    
  402cda:	ja     0x402c67
  402cdc:	pop    esp
  402cdd:	aas    
  402cde:	adc    al,0x29
  402ce0:	test   ah,ch
  402ce2:	outs   dx,DWORD PTR ds:[esi]
  402ce3:	inc    edi
  402ce4:	shr    BYTE PTR [edx+edi*1],cl
  402ce7:	adc    DWORD PTR [edx],eax
  402ce9:	dec    esp
  402cea:	xchg   ebp,eax
  402ceb:	jno    0x402c9b
  402ced:	cs pop edi
  402cef:	xor    eax,0x5725b488
  402cf4:	pushw  cs
  402cf6:	fldenv [eax-0x6e6111b8]
  402cfc:	scas   eax,DWORD PTR es:[edi]
  402cfd:	cmc    
  402cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cff:	lods   eax,DWORD PTR ds:[esi]
  402d00:	or     BYTE PTR [edi+0x456b8d3],0xa7
  402d07:	out    0xb3,al
  402d09:	push   ebp
  402d0a:	xchg   ebp,eax
  402d0b:	mov    bl,BYTE PTR [ecx-0x5f18ddf9]
  402d11:	(bad)  
  402d12:	fadd   st(0),st
  402d14:	outs   dx,BYTE PTR ds:[esi]
  402d15:	or     al,0x75
  402d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d18:	jne    0x402d23
  402d1a:	hlt    
  402d1b:	outs   dx,DWORD PTR ds:[esi]
  402d1c:	ret    
  402d1d:	ret    0x8574
  402d20:	jnp    0x402d76
  402d22:	inc    esi
  402d23:	inc    edi
  402d24:	cmp    eax,0x2dba68ce
  402d29:	aaa    
  402d2a:	popf   
  402d2b:	jl     0x402d64
  402d2d:	or     BYTE PTR [edx-0x5e],ah
  402d30:	popf   
  402d31:	mov    eax,0x4567f765
  402d36:	push   ss
  402d37:	les    esi,FWORD PTR [eax+0x7c4117cd]
  402d3d:	xor    al,0xf
  402d3f:	daa    
  402d40:	mov    ah,0xf7
  402d42:	mov    ebx,0xd24b7408
  402d47:	mov    ecx,0xdd855a42
  402d4c:	sbb    dl,bh
  402d4e:	push   0xa19e583b
  402d53:	sbb    BYTE PTR [eax-0x4b2346cb],cl
  402d59:	mov    eax,ds:0x4b9fd4cf
  402d5e:	mov    ebp,0x76091619
  402d63:	test   ah,bh
  402d65:	mov    eax,ds:0xbf9f611c
  402d6a:	leave  
  402d6b:	pusha  
  402d6c:	shr    BYTE PTR cs:[ebx+ebx*2],cl
  402d70:	(bad)  
  402d71:	call   0xae17b526
  402d76:	xchg   ebx,eax
  402d77:	in     eax,0xa1
  402d79:	popa   
  402d7a:	adc    DWORD PTR [ecx-0x6a],edx
  402d7d:	jno    0x402d63
  402d7f:	dec    edx
  402d80:	mov    dh,0xbc
  402d82:	jge    0x402d8f
  402d84:	outs   dx,BYTE PTR ds:[esi]
  402d85:	rol    DWORD PTR [ecx],1
  402d87:	out    dx,al
  402d88:	fdiv   QWORD PTR [ebx+0x4b]
  402d8b:	mov    edi,0x9e22b429
  402d90:	add    ebx,esi
  402d92:	jmp    0xfa7d:0x36b49066
  402d99:	jge    0x402d29
  402d9b:	sahf   
  402d9c:	ins    DWORD PTR es:[edi],dx
  402d9d:	aam    0xe5
  402d9f:	stc    
  402da0:	mov    gs,WORD PTR [edi]
  402da2:	xchg   edx,eax
  402da3:	inc    eax
  402da4:	sti    
  402da5:	loope  0x402dd3
  402da7:	fwait
  402da8:	inc    ebx
  402da9:	data16 aam 0x81
  402dac:	jmp    0x402db5
  402dae:	add    BYTE PTR [ecx+0x51],dl
  402db1:	dec    BYTE PTR [ebp+0x62]
  402db4:	push   ebp
  402db5:	fidiv  DWORD PTR [esi+0x6b27b819]
  402dbb:	ror    BYTE PTR [esi+eiz*1+0xc],cl
  402dbf:	xchg   edx,eax
  402dc0:	sbb    bl,al
  402dc2:	outs   dx,BYTE PTR ds:[esi]
  402dc3:	sub    dh,bl
  402dc5:	mov    ah,0xfe
  402dc7:	int3   
  402dc8:	mov    dl,0xe5
  402dca:	aad    0x6a
  402dcc:	mul    BYTE PTR [ebx]
  402dce:	les    edi,FWORD PTR [eax+0x5c]
  402dd1:	mov    eax,ds:0x5b58226a
  402dd6:	jmp    0x2d4703a8
  402ddb:	inc    esi
  402ddc:	push   es
  402ddd:	gs loop 0x402d85
  402de0:	retf   
  402de1:	les    esp,FWORD PTR [esi]
  402de3:	(bad)  
  402de4:	out    dx,al
  402de5:	int3   
  402de6:	loopne 0x402e58
  402de8:	sbb    bl,BYTE PTR [eax]
  402dea:	add    edi,ebx
  402dec:	cs ds std 
  402def:	jnp    0x402da7
  402df1:	push   ss
  402df2:	jae    0x402d89
  402df4:	and    ebx,DWORD PTR [edi-0x28]
  402df7:	aad    0x2d
  402df9:	popa   
  402dfa:	push   ss
  402dfb:	mov    WORD PTR [eax+0x79],cs
  402dfe:	inc    esp
  402dff:	js     0x402de8
  402e01:	sub    ah,BYTE PTR [ecx-0x516b6979]
  402e07:	add    eax,DWORD PTR [ecx-0x3]
  402e0a:	(bad)  [eax-0x72]
  402e0d:	mov    ebx,0x8a6b9f9d
  402e12:	dec    ecx
  402e13:	xchg   esi,eax
  402e14:	pop    edi
  402e15:	cwde   
  402e16:	jns    0x402e82
  402e18:	sbb    BYTE PTR [edx-0x6fe3e4a4],dh
  402e1e:	test   eax,0x7c20b7bc
  402e23:	mov    ebp,0x6ee48aa4
  402e28:	jg     0x402e6e
  402e2a:	xchg   esp,eax
  402e2b:	push   0xd87ec95c
  402e30:	scas   eax,DWORD PTR es:[edi]
  402e31:	and    eax,0x8633bb8e
  402e36:	jecxz  0x402e09
  402e38:	mov    eax,0xc16f0cfc
  402e3d:	cmc    
  402e3e:	pop    edx
  402e3f:	xchg   esp,eax
  402e40:	pop    ds
  402e41:	popf   
  402e42:	jno    0x402e24
  402e44:	sub    BYTE PTR [ebx],bh
  402e46:	jnp    0x402e28
  402e48:	call   0x33640013
  402e4d:	ins    BYTE PTR es:[edi],dx
  402e4e:	aam    0xc
  402e50:	addr16 lock pop esp
  402e53:	adc    DWORD PTR [edx+0x52],ecx
  402e56:	dec    ebp
  402e57:	push   es
  402e58:	(bad)  
  402e59:	xor    eax,0x4d48c5a7
  402e5e:	push   es
  402e5f:	ficom  DWORD PTR [eax-0x1]
  402e62:	jb     0x402e1c
  402e64:	mov    bl,0x66
  402e66:	jbe    0x402eb1
  402e68:	test   eax,0xaccd0db4
  402e6d:	or     BYTE PTR [ecx+ebp*8],0xbc
  402e71:	mov    al,ah
  402e73:	inc    ebx
  402e74:	nop
  402e75:	pavgb  mm5,QWORD PTR [edx+0x3f346f5]
  402e7c:	mov    WORD PTR [ebx-0x405ea5eb],gs
  402e82:	pop    esi
  402e83:	loopne 0x402e57
  402e85:	daa    
  402e86:	and    bh,bl
  402e88:	loopne 0x402ea4
  402e8a:	dec    esi
  402e8b:	inc    ebp
  402e8c:	test   DWORD PTR [eax-0x59],esi
  402e8f:	push   esp
  402e90:	jl     0x402eec
  402e92:	pop    ecx
  402e93:	push   cx
  402e95:	mov    al,bh
  402e97:	xlat   BYTE PTR ds:[ebx]
  402e98:	adc    al,0x56
  402e9a:	pop    es
  402e9b:	add    ebx,ebx
  402e9d:	jmp    0xa7be:0xcebb4f2c
  402ea4:	std    
  402ea5:	mov    edx,0x98e3897a
  402eaa:	js     0x402e4f
  402eac:	div    BYTE PTR [ebx-0x119a1c14]
  402eb2:	ja     0x402eee
  402eb4:	dec    edx
  402eb5:	out    dx,eax
  402eb6:	(bad)  
  402eb7:	int3   
  402eb8:	add    bl,ch
  402eba:	sub    BYTE PTR [eax*8-0x7c6523c5],dh
  402ec1:	and    DWORD PTR [esi+ecx*2+0x18],edi
  402ec5:	push   ss
  402ec6:	mov    bh,0x35
  402ec8:	sbb    al,0x6f
  402eca:	dec    ebx
  402ecb:	push   cs
  402ecc:	pop    ds
  402ecd:	test   eax,0xd07a1bcf
  402ed2:	and    ebx,ebx
  402ed4:	iret   
  402ed5:	std    
  402ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ed7:	(bad)  
  402ed8:	addr16 pushf 
  402eda:	mov    cl,0xb0
  402edc:	add    ecx,DWORD PTR [esi+0x7df98829]
  402ee2:	stos   BYTE PTR es:[edi],al
  402ee3:	inc    esp
  402ee4:	mov    esi,0x1f7a041d
  402ee9:	push   edi
  402eea:	jbe    0x402edd
  402eec:	lock repz fistp WORD PTR ds:0x2b60bed6
  402ef4:	or     DWORD PTR [ecx+0x6f],ebp
  402ef7:	pop    ebx
  402ef8:	ds mov edx,0x3fd24df0
  402efe:	into   
  402eff:	xchg   al,bh
  402f01:	in     al,dx
  402f02:	out    0xfd,al
  402f04:	mov    bl,0x1
  402f06:	adc    BYTE PTR [edi],bh
  402f08:	and    ah,BYTE PTR [eax+0x54]
  402f0b:	add    ebp,DWORD PTR [edx]
  402f0d:	sti    
  402f0e:	repnz rcl BYTE PTR ds:0x45dac1f4,1
  402f15:	jmp    0x6682:0x16115efc
  402f1c:	adc    DWORD PTR [eax-0x6e],esp
  402f1f:	and    ah,BYTE PTR [esi]
  402f21:	push   eax
  402f22:	int    0x2b
  402f24:	dec    edi
  402f25:	adc    eax,0xb4a007b4
  402f2a:	sbb    eax,0x31005f77
  402f2f:	repz call 0xc6a4c5ae
  402f35:	ficomp WORD PTR [ebx-0x4]
  402f38:	mov    cl,0xc8
  402f3a:	mov    WORD PTR [edi+0x67d97ea2],cs
  402f40:	pop    ecx
  402f41:	jo     0x402fa8
  402f43:	fs push esi
  402f45:	mov    BYTE PTR [ecx],bl
  402f47:	aam    0xc2
  402f49:	leave  
  402f4a:	jbe    0x402f3c
  402f4c:	inc    esp
  402f4d:	loop   0x402eea
  402f4f:	and    al,0x30
  402f51:	rcl    BYTE PTR [edx-0x67d17a6d],cl
  402f57:	cmp    DWORD PTR [edx-0x9edb1eb],ebx
  402f5d:	jmp    0xe737537a
  402f62:	imul   edx,DWORD PTR ds:0x1770ef75,0xffffffa2
  402f69:	cmp    al,BYTE PTR [eax-0x598fb858]
  402f6f:	and    eax,0xa4ffb912
  402f74:	pop    ebx
  402f75:	jmp    0xac99bba1
  402f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f7b:	retf   
  402f7c:	test   DWORD PTR [esi-0x6114df2e],esp
  402f82:	xchg   edi,eax
  402f83:	push   ebp
  402f84:	xchg   ebp,eax
  402f85:	test   al,0xb2
  402f87:	or     BYTE PTR [esp+eiz*8-0x51e9d9a1],al
  402f8e:	mov    es,WORD PTR [esi]
  402f90:	pop    edi
  402f91:	dec    ebx
  402f92:	in     al,0xb1
  402f94:	or     eax,DWORD PTR [esi+0x265d033a]
  402f9a:	ficomp DWORD PTR [ebp+0x3b]
  402f9d:	clc    
  402f9e:	stos   BYTE PTR es:[edi],al
  402f9f:	push   ebx
  402fa0:	ficom  DWORD PTR [edx+edi*8-0x51a79062]
  402fa7:	mov    DWORD PTR [ecx+0x2c403191],ebp
  402fad:	inc    ecx
  402fae:	xchg   edx,eax
  402faf:	addr16 iret 
  402fb1:	xor    bl,BYTE PTR [eax]
  402fb3:	fcom   QWORD PTR [edi]
  402fb5:	rcl    edi,0x4d
  402fb8:	mov    ah,0x6
  402fba:	jb     0x40300b
  402fbc:	sahf   
  402fbd:	loopne 0x402fdd
  402fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fc0:	adc    al,0x72
  402fc2:	or     dl,BYTE PTR [eax+0x4a0f10cb]
  402fc8:	jg     0x402f59
  402fca:	sbb    ch,BYTE PTR [ebx+0x53]
  402fcd:	adc    ebx,DWORD PTR [eax-0x3]
  402fd0:	inc    ebp
  402fd1:	jp     0x402fbf
  402fd3:	and    al,0x80
  402fd5:	cmp    DWORD PTR [ebx+0x6c],esi
  402fd8:	sbb    BYTE PTR [ebx],bh
  402fda:	mov    edx,edi
  402fdc:	and    BYTE PTR ss:[eax-0x5e],dh
  402fe0:	int3   
  402fe1:	out    0x5b,al
  402fe3:	sub    bl,BYTE PTR [ebx+0x20]
  402fe6:	ins    DWORD PTR es:[edi],dx
  402fe7:	pop    es
  402fe8:	jno    0x403051
  402fea:	pop    es
  402feb:	xor    edx,esi
  402fed:	icebp  
  402fee:	mov    esi,0xf6a3a4b3
  402ff3:	mov    al,0x94
  402ff5:	dec    ebx
  402ff6:	sbb    eax,0x54c7fabe
  402ffb:	xor    DWORD PTR [ebx-0x2e],0x342f4fa6
  403002:	mov    ds:0xf8db0bf3,al
  403007:	leave  
  403008:	and    DWORD PTR [eax+0x108856b],0xb88f107e
  403012:	outs   dx,DWORD PTR ds:[esi]
  403013:	mov    al,ds:0xf263fbdd
  403018:	jns    0x403092
  40301a:	mov    DWORD PTR [eax-0x47],0x4c04a955
  403021:	les    ebp,FWORD PTR [ebx+0x3e6ddb7e]
  403027:	push   ds
  403028:	loop   0x403041
  40302a:	mov    WORD PTR [ecx-0x64f2b483],es
  403030:	(bad)  
  403032:	jbe    0x402fba
  403034:	lods   al,BYTE PTR ds:[esi]
  403035:	enter  0x824d,0x5a
  403039:	repz jo 0x402fec
  40303c:	icebp  
  40303d:	or     al,0xb
  40303f:	adc    dh,BYTE PTR [edx+0x48190220]
  403045:	in     eax,dx
  403046:	adc    edi,DWORD PTR [ebx]
  403048:	add    al,0x98
  40304a:	fs loop 0x4030b3
  40304d:	mov    ebx,0xce0f2606
  403052:	lods   al,BYTE PTR ds:[esi]
  403053:	jmp    0x402fec
  403055:	jle    0x403075
  403057:	mov    dl,0x22
  403059:	data16 outs dx,BYTE PTR ds:[esi]
  40305b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40305c:	out    dx,eax
  40305d:	cli    
  40305e:	in     al,0xc5
  403060:	addr16 add eax,0x4f82a51e
  403066:	and    DWORD PTR [ebp+0x575fb023],ebp
  40306c:	add    ch,al
  40306e:	and    al,0xd3
  403070:	ins    DWORD PTR es:[edi],dx
  403071:	cld    
  403072:	jmp    0x4030d0
  403074:	cmp    edx,ebx
  403076:	mov    DWORD PTR [edi],ecx
  403078:	inc    esi
  403079:	test   BYTE PTR [esi+0x6b],0x7
  40307d:	cmp    eax,0xf0f877d1
  403082:	pop    es
  403083:	cmp    BYTE PTR [edx-0x55],dh
  403086:	push   esi
  403087:	(bad)  
  403088:	push   eax
  403089:	xchg   DWORD PTR [ebp-0x7bc34361],edi
  40308f:	mov    al,ds:0x845c3bb1
  403094:	pop    DWORD PTR [edi]
  403096:	or     edx,edx
  403098:	push   0x5a
  40309a:	stc    
  40309b:	xchg   ax,ax
  40309d:	inc    eax
  40309e:	xchg   ecx,eax
  40309f:	pop    ecx
  4030a0:	cmp    ebx,edx
  4030a2:	scas   eax,DWORD PTR es:[edi]
  4030a3:	ds adc eax,0xcb4a234e
  4030a9:	xchg   esp,eax
  4030aa:	into   
  4030ab:	(bad)  
  4030ad:	xor    BYTE PTR ds:0xc43b49,al
  4030b3:	loope  0x403085
  4030b5:	repz jo 0x4030cf
  4030b8:	jne    0x403103
  4030ba:	shl    BYTE PTR [esi-0x5c65a4c9],1
  4030c0:	outs   dx,BYTE PTR ds:[esi]
  4030c1:	mov    dl,0x49
  4030c3:	jg     0x403088
  4030c5:	xchg   DWORD PTR [edx-0x709202],edi
  4030cb:	jmp    0x40310d
  4030cd:	cmp    ah,BYTE PTR [eax-0x38]
  4030d0:	imul   esi,DWORD PTR [ebx+0x361c6269],0x26
  4030d7:	xlat   BYTE PTR es:[ebx]
  4030d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030da:	xchg   edi,eax
  4030db:	iret   
  4030dc:	mov    edi,0x9c4861c3
  4030e1:	mov    ch,0x56
  4030e3:	sbb    eax,0xa1dc747d
  4030e8:	jae    0x4030f2
  4030ea:	jge    0x40306c
  4030ec:	ret    
  4030ed:	jg     0x403118
  4030ef:	add    ah,bl
  4030f1:	xlat   BYTE PTR ds:[ebx]
  4030f2:	mov    ch,0xd8
  4030f4:	int3   
  4030f5:	pop    ecx
  4030f6:	in     eax,dx
  4030f7:	xchg   ebx,eax
  4030f8:	hlt    
  4030f9:	inc    esp
  4030fa:	dec    ecx
  4030fb:	mov    ds:0x5003cbed,eax
  403100:	stos   BYTE PTR es:[edi],al
  403101:	mov    dh,0x95
  403103:	loopne 0x4030a0
  403105:	out    dx,eax
  403106:	dec    ebp
  403107:	xor    ebx,DWORD PTR [ebx+ebx*1-0x28]
  40310b:	adc    DWORD PTR fs:[edi],esi
  40310e:	call   0xa3ad25ba
  403113:	test   BYTE PTR [edx-0x6ad4d39d],0x89
  40311a:	cdq    
  40311b:	jle    0x4030ba
  40311d:	stos   BYTE PTR es:[edi],al
  40311e:	sti    
  40311f:	(bad)  
  403120:	shl    BYTE PTR [edi-0xddc35f4],cl
  403126:	loope  0x4030e3
  403128:	scas   eax,DWORD PTR es:[edi]
  403129:	or     al,0xce
  40312b:	cmp    dl,BYTE PTR [ebx-0x1d]
  40312e:	das    
  40312f:	data16 mov ds:0x6b62119a,al
  403135:	fistp  WORD PTR [edx]
  403137:	xor    edi,DWORD PTR [ecx]
  403139:	cdq    
  40313a:	es push esp
  40313c:	js     0x4030f7
  40313e:	mov    WORD PTR [edi+edx*8+0x2c9d6383],cs
  403145:	xor    BYTE PTR [edi-0x3],cl
  403148:	mov    eax,0xfc8b4e01
  40314d:	std    
  40314e:	inc    BYTE PTR [esi-0x7efdd5c0]
  403154:	jp     0x403109
  403156:	dec    eax
  403157:	pusha  
  403158:	push   0x16
  40315a:	inc    ebx
  40315b:	jns    0x403172
  40315d:	std    
  40315e:	lock lods eax,DWORD PTR ds:[esi]
  403160:	call   0xab55:0x9190b875
  403167:	std    
  403168:	sub    al,0x30
  40316a:	adc    BYTE PTR [edi+0x45],dh
  40316d:	pop    ds
  40316e:	jge    0x4030f9
  403170:	mov    edx,0x998e712f
  403175:	ins    DWORD PTR es:[edi],dx
  403176:	icebp  
  403177:	scas   eax,DWORD PTR es:[edi]
  403178:	xchg   DWORD PTR [edi-0x29],esp
  40317b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40317c:	(bad)  
  40317d:	lods   al,BYTE PTR ds:[esi]
  40317e:	dec    esp
  40317f:	fucom  st(6)
  403181:	cs xor eax,0x45245e5
  403187:	add    esi,DWORD PTR [edx]
  403189:	cmc    
  40318a:	mul    ah
  40318c:	mov    dh,0x2e
  40318e:	stos   BYTE PTR es:[edi],al
  40318f:	jo     0x4031ba
  403191:	cmp    ecx,DWORD PTR ds:0xd103a7bd
  403197:	and    bl,BYTE PTR ds:[ecx+ebx*8]
  40319b:	or     al,BYTE PTR [esi+0x7b]
  40319e:	xor    DWORD PTR [edi],0x9f288c5a
  4031a4:	loopne 0x4031c6
  4031a6:	xchg   dh,ah
  4031a8:	sbb    esp,edx
  4031aa:	adc    al,dh
  4031ac:	xchg   ebp,eax
  4031ad:	lods   al,BYTE PTR ds:[esi]
  4031ae:	sbb    edi,DWORD PTR [ebx+0xd]
  4031b1:	pop    ebx
  4031b2:	add    BYTE PTR [edx],dl
  4031b4:	(bad)  
  4031b5:	sbb    DWORD PTR [edi-0x132b2d65],edi
  4031bb:	fucom  st(6)
  4031bd:	popf   
  4031be:	xchg   esi,eax
  4031bf:	mov    ch,0x8d
  4031c1:	test   BYTE PTR [si],al
  4031c4:	dec    DWORD PTR [eax+edi*2]
  4031c7:	mov    ch,0x64
  4031c9:	pop    ecx
  4031ca:	ret    
  4031cb:	jp     0x40316d
  4031cd:	jne    0x403167
  4031cf:	xor    ebp,esi
  4031d1:	push   esi
  4031d2:	shl    BYTE PTR [ecx+0x62],cl
  4031d5:	cmc    
  4031d6:	imul   edx,DWORD PTR [ecx+0x146ac062],0xd86f1bdc
  4031e0:	outs   dx,DWORD PTR ds:[esi]
  4031e1:	mov    esp,0x487147b5
  4031e6:	mov    BYTE PTR [ebx+0x7b],ah
  4031e9:	les    esp,FWORD PTR [ebp+0x40b0834]
  4031ef:	push   esp
  4031f0:	mov    bl,ah
  4031f2:	mov    bh,0xff
  4031f4:	(bad)  
  4031f5:	not    DWORD PTR [ebp+0x31]
  4031f8:	cmp    al,0x5
  4031fa:	mov    ebp,ecx
  4031fc:	imul   edi,esi,0x4
  4031ff:	imul   esi,DWORD PTR [edx+edx*8-0x6e],0x3e3a8117
  403207:	fdiv   st(3),st
  403209:	enter  0x15e7,0x6a
  40320d:	mov    esi,0x4c6a19b0
  403212:	lock test BYTE PTR [ecx-0x357125be],al
  403219:	clc    
  40321a:	xchg   ebp,eax
  40321b:	or     al,0x34
  40321d:	push   ecx
  40321e:	adc    esp,esp
  403220:	pop    esp
  403221:	iret   
  403222:	push   ebp
  403223:	in     eax,0xcf
  403225:	jno    0x40323a
  403227:	mov    eax,ds:0x47df5039
  40322c:	mov    ebx,0x4c6697e8
  403231:	push   ecx
  403232:	iret   
  403233:	xor    BYTE PTR [edi-0x25],cl
  403236:	clc    
  403237:	or     DWORD PTR [ebx+0x18a78fa4],edi
  40323d:	adc    eax,0x75be21ca
  403242:	mov    eax,0x39e10bbf
  403247:	sub    ebp,DWORD PTR [ebx+0x4d348dd2]
  40324d:	jge    0x4032c4
  40324f:	and    eax,0x70ee01d7
  403254:	lahf   
  403255:	call   0x23e8:0xfabbe6f0
  40325c:	mov    esp,0x8fe27457
  403261:	jle    0x4032ab
  403263:	pusha  
  403264:	mov    BYTE PTR [esi],cl
  403266:	sti    
  403267:	mov    ecx,0x369200b0
  40326c:	cld    
  40326d:	pop    esi
  40326e:	jp     0x40327a
  403270:	sub    al,ch
  403272:	inc    esi
  403273:	cmp    DWORD PTR [ecx+0x2d],esp
  403276:	mov    DWORD PTR [ebx+0x5],ebx
  403279:	mov    ah,0x72
  40327b:	xor    al,0x89
  40327d:	mov    esi,0x4722cfd1
  403282:	inc    edi
  403283:	mov    eax,ds:0x866d0277
  403288:	hlt    
  403289:	pushf  
  40328a:	in     al,0x9b
  40328c:	setp   BYTE PTR [edi+0x19b4b649]
  403293:	mov    eax,ds:0x9329c0ed
  403298:	test   cl,cl
  40329a:	add    cl,ch
  40329c:	call   0x9783:0xe7086cc7
  4032a3:	xor    DWORD PTR ds:0x676a0bf9,0xffffff8b
  4032aa:	in     eax,0xc5
  4032ac:	fsub   QWORD PTR [edi]
  4032ae:	dec    esi
  4032af:	mov    ds:0x21f0a88e,al
  4032b4:	sub    al,0xc0
  4032b6:	adc    al,0x12
  4032b8:	test   esi,eax
  4032ba:	imul   ecx,eax,0x63
  4032bd:	mov    esp,0x68778c44
  4032c2:	push   eax
  4032c3:	icebp  
  4032c4:	jle    0x4032d9
  4032c6:	sub    al,0x13
  4032c8:	test   DWORD PTR [eax],ebx
  4032ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032cb:	mov    eax,ebp
  4032cd:	pop    es
  4032ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032cf:	in     al,0xd0
  4032d1:	dec    eax
  4032d2:	lock inc ebp
  4032d4:	push   0x5209dc95
  4032d9:	imul   ebp,edx,0x0
  4032dc:	(bad)  
  4032de:	pop    esi
  4032df:	push   0x4573dfaf
  4032e4:	mov    dl,0x3
  4032e6:	popa   
  4032e7:	aad    0xf
  4032e9:	and    eax,0xf599c79b
  4032ee:	test   ebx,ecx
  4032f0:	jge    0x403311
  4032f2:	xchg   esi,esp
  4032f4:	xchg   BYTE PTR [edi+0x62c12cd2],cl
  4032fa:	xchg   edi,eax
  4032fb:	adc    ecx,DWORD PTR [eax-0xf]
  4032fe:	je     0x40337c
  403300:	push   esi
  403301:	and    bl,bh
  403303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403304:	jnp    0x403328
  403306:	xor    al,BYTE PTR [esi]
  403308:	add    ah,BYTE PTR [ebp+0x53]
  40330b:	lods   al,BYTE PTR ds:[esi]
  40330c:	ror    DWORD PTR [esi-0x5f],0x4e
  403310:	cmp    BYTE PTR [edx],dl
  403312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403313:	and    edx,DWORD PTR [ebx+0x60fd4940]
  403319:	cmp    bl,BYTE PTR [edi+0x59]
  40331c:	jbe    0x403367
  40331e:	je     0x403380
  403320:	cwde   
  403321:	pop    ecx
  403322:	mov    eax,ds:0x5341a2ca
  403327:	stos   DWORD PTR es:[edi],eax
  403328:	lods   al,BYTE PTR ds:[esi]
  403329:	mov    eax,edi
  40332b:	lods   eax,DWORD PTR ds:[esi]
  40332c:	hlt    
  40332d:	dec    ebp
  40332e:	adc    DWORD PTR [bp+di-0x2ab9],edx
  403333:	ss cs ins DWORD PTR es:[edi],dx
  403336:	(bad)  
  403337:	mov    edx,0x256755c3
  40333c:	aad    0xdc
  40333e:	jg     0x4033a8
  403340:	data16 clc 
  403342:	lahf   
  403343:	mov    edi,ebp
  403345:	push   esi
  403346:	sub    BYTE PTR [eax-0x12],dl
  403349:	dec    esi
  40334b:	into   
  40334c:	mov    bl,cl
  40334e:	mov    eax,ds:0xfcf805da
  403353:	mov    bl,BYTE PTR [edi]
  403355:	push   edx
  403356:	pop    ecx
  403357:	sbb    eax,0xa0c3fc8d
  40335c:	es push ds
  40335e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40335f:	add    dh,BYTE PTR [esp+ecx*2+0x8]
  403363:	or     DWORD PTR [ecx],0x42
  403366:	adc    dl,0xc9
  403369:	ins    BYTE PTR es:[edi],dx
  40336a:	stc    
  40336b:	add    bh,0x8f
  40336e:	mov    bh,0x2a
  403370:	cli    
  403371:	ds in  al,dx
  403373:	or     BYTE PTR ds:0xeb69dd5d,cl
  403379:	or     DWORD PTR [eax-0x355a71],ebx
  40337f:	push   esi
  403380:	pop    ss
  403381:	mov    al,0xd4
  403383:	xor    ch,ch
  403385:	pop    eax
  403386:	rcr    esi,0x9
  403389:	retf   0x2515
  40338c:	pop    ebx
  40338d:	jns    0x40334f
  40338f:	data16 ja 0x4033ea
  403392:	mov    al,ds:0x2af03097
  403397:	cmp    ebp,esp
  403399:	shl    ah,1
  40339b:	fs push 0x44
  40339e:	in     al,dx
  40339f:	call   0xe35b2a2e
  4033a4:	test   eax,0xc4045a84
  4033a9:	clc    
  4033aa:	in     eax,0xf1
  4033ac:	lock xlat BYTE PTR ds:[ebx]
  4033ae:	pop    es
  4033af:	pop    ebx
  4033b0:	lea    edi,[ebx]
  4033b2:	cdq    
  4033b3:	xchg   ecx,eax
  4033b4:	cli    
  4033b5:	test   eax,0x7f4e0208
  4033ba:	div    BYTE PTR [ecx+ebx*4+0x7c]
  4033be:	cmp    al,0x16
  4033c0:	adc    dl,BYTE PTR [ebp-0x73406c9c]
  4033c6:	xchg   ecx,eax
  4033c7:	or     al,0xc7
  4033c9:	gs cli 
  4033cb:	inc    esi
  4033cc:	lds    ebp,FWORD PTR [ecx]
  4033ce:	mov    ch,0x52
  4033d0:	ffreep st(5)
  4033d2:	and    ebp,DWORD PTR [ecx-0x4]
  4033d5:	or     edi,ecx
  4033d7:	(bad)  
  4033d8:	mov    eax,0x66fd704d
  4033dd:	call   FWORD PTR [edx+ebx*8]
  4033e0:	loop   0x40343f
  4033e2:	sub    DWORD PTR [ebx-0x3ca9583e],edi
  4033e8:	adc    BYTE PTR [esi+eax*4-0xa],bh
  4033ec:	push   eax
  4033ed:	mov    BYTE PTR [esi+ebp*2-0x74],bh
  4033f1:	xchg   ebx,eax
  4033f2:	or     eax,DWORD PTR [ebp-0x51]
  4033f5:	ficomp DWORD PTR [edi+0x50]
  4033f8:	ret    0x4e70
  4033fb:	mov    al,0x63
  4033fd:	mov    al,BYTE PTR [eax]
  4033ff:	push   ecx
  403400:	popa   
  403401:	sar    BYTE PTR [esp+ebx*1+0x387a7a7b],1
  403408:	out    dx,eax
  403409:	jmp    0x403397
  40340b:	pop    edx
  40340c:	or     BYTE PTR [ebx],ah
  40340e:	mov    ds:0x2731f381,eax
  403413:	add    bh,BYTE PTR [esp+edi*4+0x6e7deb24]
  40341a:	lea    eax,[eax+0x75]
  40341d:	push   edi
  40341e:	fwait
  40341f:	pushf  
  403420:	dec    ebx
  403421:	mov    ah,0xa4
  403423:	icebp  
  403424:	mov    ebx,DWORD PTR [edx-0x1279cb07]
  40342a:	push   ds
  40342b:	imul   esi,esp,0xd43542c1
  403431:	fwait
  403432:	imul   esi,DWORD PTR [edx+eax*1+0x45],0x5e36842b
  40343a:	add    ch,BYTE PTR [ebx+0x47]
  40343d:	nop
  40343e:	rol    bh,0x8
  403441:	shl    ebp,0x6
  403444:	mov    ch,0x72
  403446:	pop    ds
  403447:	lock lds ebx,FWORD PTR [ebp+0x4e]
  40344b:	loop   0x403432
  40344d:	adc    DWORD PTR [ecx+0x199834c7],ebp
  403453:	lea    edx,[ebx]
  403455:	and    edx,DWORD PTR [ebx+0x224df8b4]
  40345b:	dec    edx
  40345c:	pop    edx
  40345d:	xlat   BYTE PTR cs:[bx]
  403460:	ret    0xec4c
  403463:	xor    BYTE PTR ss:[ebx],ch
  403466:	addr16 jmp 0x40346b
  403469:	enter  0x2abc,0x15
  40346d:	sub    ecx,DWORD PTR [edx]
  40346f:	jbe    0x403425
  403471:	aad    0x54
  403473:	in     eax,0x3f
  403475:	xor    DWORD PTR [ebp-0x7c],0xffffff92
  403479:	clc    
  40347a:	sbb    eax,0x5dec1638
  40347f:	loope  0x4034a0
  403481:	mov    bh,0xa8
  403483:	adc    al,0x97
  403485:	push   ds
  403486:	stos   BYTE PTR es:[edi],al
  403487:	adc    eax,0xe2acf72d
  40348c:	xchg   ebx,eax
  40348d:	out    dx,al
  40348e:	mov    al,0xb1
  403490:	jmp    0x403425
  403492:	(bad)  
  403493:	xchg   esi,eax
  403494:	or     al,0x5
  403496:	push   ds
  403497:	retf   0x7f06
  40349a:	shl    BYTE PTR [esi+0x28a78245],0xbc
  4034a1:	adc    eax,0xe86b5231
  4034a6:	dec    ecx
  4034a7:	push   0xffffff8f
  4034a9:	adc    BYTE PTR [ecx-0x55bdad10],al
  4034af:	sahf   
  4034b0:	jnp    0x4034e5
  4034b2:	mov    ebx,0x52c137a2
  4034b7:	fcmovnbe st,st(1)
  4034b9:	xlat   BYTE PTR ds:[ebx]
  4034ba:	(bad)  
  4034bd:	and    bh,BYTE PTR [esi-0x29]
  4034c0:	pop    eax
  4034c1:	stos   BYTE PTR es:[edi],al
  4034c2:	sub    eax,0xaab4fedb
  4034c7:	cwde   
  4034c8:	cdq    
  4034c9:	addr16 mov al,fs:0xdeee
  4034ce:	sub    edx,ebp
  4034d0:	xchg   edi,eax
  4034d1:	stc    
  4034d2:	rol    bl,1
  4034d4:	lea    ebp,[ebp+0x57]
  4034d7:	pop    esp
  4034d8:	or     esi,edx
  4034da:	jle    0x4034a6
  4034dc:	jne    0x4034fb
  4034de:	jecxz  0x4034e5
  4034e0:	mov    edi,0x8bd59395
  4034e5:	outs   dx,DWORD PTR ds:[esi]
  4034e6:	das    
  4034e7:	in     eax,dx
  4034e8:	adc    ecx,DWORD PTR [ecx-0x3ba7c239]
  4034ee:	mov    ebx,0x699d4329
  4034f3:	mov    esp,0xb11eda95
  4034f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034f9:	adc    BYTE PTR [eax+0x43f520cb],al
  4034ff:	or     edi,DWORD PTR [edx+0x7c445ba8]
  403505:	xchg   edx,eax
  403506:	lea    esp,[esi-0x504e9157]
  40350c:	sbb    BYTE PTR [esi+edi*4+0x5a7c5ffe],cl
  403513:	arpl   WORD PTR [edi-0x54],dx
  403516:	sar    DWORD PTR [ebx+0x39e8adac],0x40
  40351d:	jmp    0x3015:0x8813e747
  403524:	loope  0x403553
  403526:	mov    al,ds:0xacb772cf
  40352b:	xchg   BYTE PTR [edi+0x2a],bl
  40352e:	xor    BYTE PTR [edi-0x7ce506c4],bh
  403534:	jnp    0x4034d9
  403536:	inc    edx
  403537:	sbb    BYTE PTR [ebp+0x6e7d3d44],cl
  40353d:	dec    edx
  40353e:	repnz (bad) 
  403540:	enter  0x6b14,0x2
  403544:	call   0xa144e22b
  403549:	sbb    eax,0xe2e9fc47
  40354e:	mov    cl,0xb5
  403550:	and    eax,DWORD PTR [ebx-0x26a7c02a]
  403556:	jbe    0x4034da
  403558:	push   edx
  403559:	sahf   
  40355a:	jge    0x403545
  40355c:	add    al,0x87
  40355e:	cmp    cl,bl
  403560:	test   BYTE PTR [ebx+esi*8-0x65],cl
  403564:	add    bh,bh
  403566:	loop   0x40358f
  403568:	jne    0x403598
  40356a:	fstp   st(4)
  40356c:	ret    
  40356d:	bound  ebp,QWORD PTR [eax-0xb]
  403570:	aaa    
  403571:	jnp    0x403583
  403573:	std    
  403574:	loop   0x403568
  403576:	sar    BYTE PTR [ebx+0x6292b4],0xfd
  40357d:	mov    ecx,esp
  40357f:	stc    
  403580:	rol    edx,cl
  403582:	mov    BYTE PTR [ecx-0x4c8e62f5],bh
  403588:	dec    esi
  403589:	or     al,0xf7
  40358b:	and    al,0x5a
  40358d:	pop    ss
  40358e:	xchg   esi,eax
  40358f:	sbb    esi,edi
  403591:	push   ds
  403592:	loopne 0x403525
  403594:	and    al,0x2e
  403596:	imul   ebx,DWORD PTR [ebx+ebx*1+0x694968d5],0x876c640
  4035a1:	idiv   BYTE PTR [esi]
  4035a3:	inc    ebx
  4035a4:	jg     0x403595
  4035a6:	in     al,dx
  4035a7:	es xor bl,BYTE PTR fs:[ebx]
  4035ab:	sub    bh,BYTE PTR [eax+ecx*2-0x4]
  4035af:	or     DWORD PTR [ebp-0x40],esi
  4035b2:	retf   0x1ab3
  4035b5:	int    0x74
  4035b7:	add    BYTE PTR [ecx-0x42],ch
  4035ba:	test   al,0x7
  4035bc:	fldpi  
  4035be:	aas    
  4035bf:	xchg   ebp,eax
  4035c0:	sub    al,0xab
  4035c2:	loopne 0x4035cb
  4035c4:	imul   ecx,DWORD PTR [esi],0xffffffd1
  4035c7:	and    al,0x56
  4035c9:	hlt    
  4035ca:	repnz cmp dl,BYTE PTR [ecx-0x625b341]
  4035d1:	jns    0x403574
  4035d3:	repz out 0x3d,eax
  4035d6:	add    ebp,edx
  4035d8:	push   eax
  4035d9:	pop    ecx
  4035da:	add    BYTE PTR [eax-0x7],dh
  4035dd:	stos   BYTE PTR es:[edi],al
  4035de:	add    al,0xaf
  4035e0:	icebp  
  4035e1:	dec    ebp
  4035e2:	xor    bl,bl
  4035e4:	cmp    eax,0xee7a774d
  4035e9:	mov    edi,0xafad6f50
  4035ee:	dec    ecx
  4035ef:	imul   ecx,esp,0xffffff95
  4035f2:	or     ebp,DWORD PTR [ebp+0x2bd0b8d3]
  4035f8:	mov    ds:0x6cbe677c,eax
  4035fd:	mov    db5,ecx
  403600:	(bad)  
  403602:	inc    eax
  403603:	lahf   
  403604:	hlt    
  403605:	mov    dh,0x47
  403607:	cmp    BYTE PTR ds:0xea0b37dc,dh
  40360d:	mov    ebx,0x48904dc6
  403612:	rcr    BYTE PTR [eax-0x42],cl
  403615:	cwde   
  403616:	or     al,0x88
  403618:	fwait
  403619:	ja     0x403662
  40361b:	push   0x9caf90f6
  403620:	cld    
  403621:	stos   DWORD PTR es:[edi],eax
  403622:	mov    ebp,0x5e8e5507
  403627:	lock aas 
  403629:	adc    al,0x4f
  40362b:	shl    BYTE PTR [edx+eax*8+0x3a7553a1],0xe2
  403633:	(bad)  
  403634:	jmp    0x403662
  403636:	sbb    eax,eax
  403638:	inc    esi
  403639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40363a:	in     al,dx
  40363b:	in     eax,0x6
  40363d:	cld    
  40363e:	stos   BYTE PTR es:[edi],al
  40363f:	leave  
  403640:	add    eax,0x8cc75529
  403645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403646:	(bad)  
  403648:	mov    ds:0xeda07b9,al
  40364d:	aad    0x30
  40364f:	outs   dx,BYTE PTR ds:[esi]
  403650:	and    ebx,DWORD PTR [edi+0x1d4444d]
  403656:	xor    al,BYTE PTR [esi+0x25]
  403659:	inc    ebx
  40365a:	mov    dh,BYTE PTR [ebp+0x60]
  40365d:	jmp    0xf136:0x5b563d74
  403664:	cmp    al,BYTE PTR [ebx]
  403666:	push   es
  403667:	push   esi
  403668:	push   ecx
  403669:	and    ah,ah
  40366b:	clc    
  40366c:	aam    0x77
  40366e:	cmp    BYTE PTR [ecx],dl
  403670:	int    0x27
  403672:	mov    dh,0xf3
  403674:	fidivr DWORD PTR [ecx-0xeba6a1b]
  40367a:	std    
  40367b:	stos   BYTE PTR es:[edi],al
  40367c:	and    al,0x5c
  40367e:	cs inc esi
  403680:	jo     0x4036ee
  403682:	pop    ss
  403683:	cmp    eax,0xaf91935f
  403688:	loope  0x403708
  40368a:	cld    
  40368b:	sar    DWORD PTR [esi+0x60],1
  40368e:	mov    WORD PTR [eax+0x36],cs
  403691:	daa    
  403692:	adc    DWORD PTR [ebp-0x6e],edx
  403695:	mov    ecx,0x9b78955e
  40369a:	aas    
  40369b:	ds add eax,0x198fde09
  4036a1:	shl    BYTE PTR [ecx],cl
  4036a3:	pop    ebp
  4036a4:	mov    esi,0x6aeec367
  4036a9:	(bad)  
  4036aa:	mov    edi,0x11bb72f7
  4036af:	ja     0x40368b
  4036b1:	nop
  4036b2:	xor    eax,0x856c0a5f
  4036b7:	sub    ebp,DWORD PTR [ebx]
  4036b9:	test   eax,0x2b988c5
  4036be:	hlt    
  4036bf:	xchg   esp,eax
  4036c0:	loope  0x40365b
  4036c2:	add    ebx,DWORD PTR [edx-0x4250f261]
  4036c8:	jno    0x40368b
  4036ca:	mov    esi,0xacb4db2b
  4036cf:	adc    al,0xcc
  4036d1:	mov    DWORD PTR [esi],edi
  4036d3:	xchg   esp,eax
  4036d4:	xor    ecx,0x8c7212f0
  4036da:	fld    st(3)
  4036dc:	pop    ebx
  4036dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036de:	mov    bl,0x24
  4036e0:	pop    ecx
  4036e1:	inc    ecx
  4036e2:	xchg   edx,eax
  4036e3:	pushf  
  4036e4:	inc    ebp
  4036e5:	in     eax,dx
  4036e6:	or     edx,DWORD PTR [edi-0x21]
  4036e9:	out    dx,eax
  4036ea:	or     cl,bh
  4036ec:	ret    0x5898
  4036ef:	jecxz  0x40376f
  4036f1:	bound  edi,QWORD PTR [edx+0x6f61bac]
  4036f7:	cmp    eax,0x7de5d217
  4036fc:	and    al,0x9d
  4036fe:	pop    ss
  4036ff:	lahf   
  403700:	inc    ebx
  403701:	and    eax,0x1a5e4ad1
  403706:	ret    0xb127
  403709:	sbb    al,0xdd
  40370b:	jb     0x403700
  40370d:	xchg   ebp,eax
  40370e:	add    DWORD PTR es:[ecx-0x5d71e43f],ebx
  403715:	pop    ebx
  403716:	adc    bh,BYTE PTR [edi-0x732a527f]
  40371c:	or     eax,edi
  40371e:	adc    ebx,ebx
  403720:	pusha  
  403721:	adc    al,al
  403723:	or     eax,0x74c5f630
  403728:	loope  0x403712
  40372a:	jmp    0xb979:0x1fceda97
  403731:	and    BYTE PTR [ebx+0x6f],dh
  403734:	add    bl,BYTE PTR [edx+edi*8+0x6]
  403738:	cs xchg esp,eax
  40373a:	cmp    eax,0x6aabe44d
  40373f:	(bad)  
  403741:	cmp    ch,dl
  403743:	aas    
  403744:	sbb    DWORD PTR [ecx+0x4f],esi
  403747:	lea    eax,[ebx-0xf878800]
  40374d:	inc    eax
  40374e:	sub    DWORD PTR [ebx+0x71],edx
  403751:	xchg   ecx,eax
  403752:	inc    esi
  403753:	fadd   QWORD PTR [eax-0x61]
  403756:	mov    dl,0x63
  403758:	jmp    0x4036f9
  40375a:	and    cl,BYTE PTR [ecx+ebx*4+0xa406495]
  403761:	jo     0x403748
  403763:	push   esi
  403764:	fdivp  st(2),st
  403766:	xor    BYTE PTR [edi-0x5c],al
  403769:	dec    ebp
  40376a:	sbb    esp,DWORD PTR [ecx]
  40376c:	push   0x305d5868
  403771:	dec    edi
  403772:	and    dl,BYTE PTR [edi+0x70]
  403775:	xchg   edi,eax
  403776:	lock mov dl,0xd
  403779:	out    0x4e,eax
  40377b:	std    
  40377c:	cmp    BYTE PTR [esi-0x1f],bh
  40377f:	xor    eax,0xbd60945c
  403784:	dec    edx
  403785:	xchg   ebx,eax
  403786:	push   esi
  403787:	pop    eax
  403788:	jg     0x4037fc
  40378a:	xchg   ah,al
  40378c:	sub    bh,BYTE PTR [ebp-0x42]
  40378f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403790:	lods   al,BYTE PTR ds:[esi]
  403791:	ds sbb bl,cl
  403794:	scas   eax,DWORD PTR es:[edi]
  403795:	ja     0x403814
  403797:	fiadd  DWORD PTR [eax+0x7]
  40379a:	or     BYTE PTR [ebp+0x484bc177],0x5a
  4037a1:	sbb    eax,0x5d5c6074
  4037a6:	je     0x403763
  4037a8:	mov    ebx,0xff2146ec
  4037ad:	out    0x15,al
  4037af:	xlat   BYTE PTR ds:[ebx]
  4037b0:	push   ebp
  4037b1:	push   es
  4037b2:	adc    al,0x44
  4037b4:	(bad)  
  4037b6:	ds sti 
  4037b8:	ds sbb al,0xc
  4037bb:	push   0xffffffa3
  4037bd:	mov    edi,0x1c7b9ffa
  4037c2:	bnd ret 
  4037c4:	(bad)  
  4037c5:	sbb    BYTE PTR [edx+ecx*8-0x78],ah
  4037c9:	and    al,0xd0
  4037cb:	xchg   DWORD PTR [esi+0x5e],ebx
  4037ce:	sti    
  4037cf:	ss inc ebp
  4037d1:	mov    dl,0x38
  4037d3:	add    al,0xaa
  4037d5:	call   0x3997b628
  4037da:	dec    ebp
  4037db:	mov    ebx,0x50e86ab2
  4037e0:	lea    ebx,[edx]
  4037e2:	mov    esi,0xa69974dd
  4037e7:	jle    0x4037e6
  4037e9:	push   edi
  4037ea:	pusha  
  4037eb:	imul   eax,esp,0x56
  4037ee:	fisttp DWORD PTR [eax+0x4e6f8226]
  4037f4:	sub    BYTE PTR [edi],0x6e
  4037f7:	sti    
  4037f8:	ins    BYTE PTR es:[edi],dx
  4037f9:	push   eax
  4037fa:	jmp    0xea48:0x99ffdd8
  403801:	imul   dl
  403803:	adc    al,0x99
  403805:	les    ebx,FWORD PTR [ebx+0x5078ca6]
  40380b:	stos   BYTE PTR es:[edi],al
  40380c:	and    ecx,esp
  40380e:	in     al,dx
  40380f:	xchg   esi,eax
  403810:	out    dx,al
  403811:	pop    ds
  403812:	outs   dx,DWORD PTR ds:[esi]
  403813:	dec    ebx
  403814:	push   ecx
  403815:	adc    ah,BYTE PTR [ebx-0xfa25c94]
  40381b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40381c:	inc    ebp
  40381d:	ins    DWORD PTR es:[edi],dx
  40381e:	dec    esp
  40381f:	es mov ecx,0xd218cac1
  403825:	inc    ecx
  403826:	xor    edi,0xffffffff
  403829:	mov    al,0x6c
  40382b:	aad    0x8b
  40382d:	jbe    0x403809
  40382f:	lea    edx,[ecx+0x2e]
  403832:	int3   
  403833:	je     0x4038a3
  403835:	dec    eax
  403836:	jmp    0x95d9d045
  40383b:	jle    0x403826
  40383d:	adc    al,0x84
  40383f:	mov    ds,esi
  403841:	xor    dl,BYTE PTR [ecx+esi*1+0xbcb4128]
  403848:	outs   dx,BYTE PTR ds:[esi]
  403849:	or     dh,dl
  40384b:	scas   al,BYTE PTR es:[edi]
  40384c:	iret   
  40384d:	bound  eax,QWORD PTR [ecx]
  40384f:	cmp    ch,BYTE PTR [ebx+0x67c33947]
  403855:	cdq    
  403856:	ds icebp 
  403858:	out    0x3,al
  40385a:	add    bl,dh
  40385c:	in     eax,0xa3
  40385e:	das    
  40385f:	mov    ebx,es
  403861:	and    ebp,esi
  403863:	jmp    0x403894
  403865:	mov    cl,0xb
  403867:	int    0xaf
  403869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40386a:	sub    al,0x19
  40386c:	adc    DWORD PTR [ecx],esi
  40386e:	push   ebp
  40386f:	mov    ecx,0x2329e70a
  403874:	inc    esi
  403875:	daa    
  403876:	sub    al,0x9a
  403878:	push   ecx
  403879:	int    0xd4
  40387b:	dec    esp
  40387c:	lahf   
  40387d:	sar    DWORD PTR [edx],cl
  40387f:	test   eax,0xc72f6850
  403884:	mov    bh,BYTE PTR ds:0x83ba8910
  40388a:	dec    esi
  40388b:	sbb    DWORD PTR [ebp-0x61],ebp
  40388e:	pop    edi
  40388f:	pop    ebx
  403890:	or     al,0x16
  403892:	je     0x40382c
  403894:	fdivr  QWORD PTR [eax+0x30]
  403897:	inc    edx
  403898:	addr16 jmp 0x4038d3
  40389b:	out    dx,eax
  40389c:	or     bh,BYTE PTR [ebx]
  40389e:	xchg   BYTE PTR [eax],bh
  4038a0:	add    esi,DWORD PTR ds:0x49cadaa4
  4038a6:	mov    al,ds:0xfea07fce
  4038ab:	pop    ss
  4038ac:	fnstcw WORD PTR [edx-0x699a88ea]
  4038b2:	jbe    0x4038c8
  4038b4:	daa    
  4038b5:	or     DWORD PTR [edx+0x1b],0xf61b44ce
  4038bc:	mov    ah,BYTE PTR [edx]
  4038be:	shl    DWORD PTR [ecx],cl
  4038c0:	out    0x28,al
  4038c2:	xor    BYTE PTR [esi-0x2acf1979],al
  4038c8:	push   esi
  4038c9:	in     eax,dx
  4038ca:	fwait
  4038cb:	add    al,0xc3
  4038cd:	mov    bl,0xd6
  4038cf:	jns    0x4038e6
  4038d1:	or     eax,0x7deb4228
  4038d6:	addr16 mov ds:0x6b1f,al
  4038da:	inc    esi
  4038db:	pop    ss
  4038dc:	or     eax,0x620dc6a5
  4038e1:	rol    DWORD PTR [esi+0x7ae0fb14],cl
  4038e7:	out    dx,al
  4038e8:	stos   BYTE PTR es:[edi],al
  4038e9:	ss icebp 
  4038eb:	inc    edi
  4038ec:	jg     0x4038ab
  4038ee:	jp     0x40390f
  4038f0:	popa   
  4038f1:	loopne 0x403882
  4038f3:	mov    cl,0xd8
  4038f5:	xchg   ecx,eax
  4038f6:	sbb    al,0x3b
  4038f8:	ins    DWORD PTR es:[edi],dx
  4038f9:	xchg   ebx,eax
  4038fa:	xor    BYTE PTR [ebx-0x5d],0x6
  4038fe:	mov    eax,0x31a97fd3
  403903:	fisub  WORD PTR [ebx]
  403905:	mov    eax,DWORD PTR [edi]
  403907:	scas   al,BYTE PTR es:[edi]
  403908:	or     edi,DWORD PTR ds:0xe4a63726
  40390e:	mov    ah,0x33
  403910:	push   ebp
  403911:	in     al,dx
  403912:	mov    ?,WORD PTR [ebp+0x7eeab269]
  403918:	xchg   edx,eax
  403919:	lea    eax,[ebp-0xa]
  40391c:	call   0x37fc:0x9079913e
  403923:	inc    ebp
  403924:	sbb    bl,BYTE PTR [edx+esi*2+0x5b]
  403928:	in     al,0xa6
  40392a:	mov    ebp,0xf51d529d
  40392f:	in     al,0xe9
  403931:	sbb    al,0x33
  403933:	inc    eax
  403934:	aad    0xf9
  403936:	xchg   edx,eax
  403937:	es iret 
  403939:	inc    ebp
  40393a:	repnz push ds
  40393c:	push   esp
  40393d:	test   eax,0x159fae4e
  403942:	add    al,0x23
  403944:	dec    esi
  403945:	int    0x12
  403947:	inc    edx
  403948:	jbe    0x40393b
  40394a:	fcmovnu st,st(0)
  40394c:	scas   eax,DWORD PTR es:[edi]
  40394d:	in     eax,0xf
  40394f:	shl    BYTE PTR [ebp+0x21],cl
  403952:	idiv   BYTE PTR [edi-0x2b2e540]
  403958:	xor    edx,DWORD PTR [edx]
  40395a:	(bad)  [eax-0x59]
  40395d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40395e:	adc    ch,0x8b
  403961:	push   esi
  403962:	outs   dx,DWORD PTR ds:[esi]
  403963:	lea    esp,[esi+ebp*1]
  403966:	adc    DWORD PTR [ebx-0x25],ebp
  403969:	or     dh,ch
  40396b:	sub    al,0x9d
  40396d:	and    DWORD PTR [ebp+0x2d],edi
  403970:	xchg   esi,eax
  403971:	loope  0x40399f
  403973:	jle    0x403907
  403975:	push   ebp
  403976:	mov    es,esp
  403978:	icebp  
  403979:	add    eax,0xc8138779
  40397e:	in     al,dx
  40397f:	xchg   cx,ax
  403981:	in     al,dx
  403982:	ds call 0x4c9372ab
  403988:	push   ebx
  403989:	mov    al,ds:0xd322ae22
  40398e:	mov    ebx,0x5202948f
  403993:	test   al,0xe9
  403995:	mov    ecx,0x12b6aaf2
  40399a:	sbb    al,0xbb
  40399c:	mov    edx,0x890ed20f
  4039a1:	ins    BYTE PTR es:[edi],dx
  4039a2:	or     DWORD PTR [ebp-0x2e0fb2d],edx
  4039a8:	outs   dx,DWORD PTR ds:[esi]
  4039a9:	idiv   BYTE PTR [eax+0x21f1fa52]
  4039af:	int    0x43
  4039b1:	and    bh,cl
  4039b3:	mov    edi,0x1c0ddec3
  4039b8:	sbb    edi,0x267862c4
  4039be:	js     0x4039ff
  4039c0:	scas   al,BYTE PTR es:[edi]
  4039c1:	inc    edx
  4039c2:	leave  
  4039c3:	mov    edx,0x3bb98437
  4039c8:	push   es
  4039c9:	mov    ebx,0xd9486c76
  4039ce:	dec    ebp
  4039cf:	rcr    ebp,0x22
  4039d2:	cmp    edx,0x84106a99
  4039d8:	jge    0x403991
  4039da:	push   cs
  4039db:	xor    al,BYTE PTR [ecx+ecx*4]
  4039de:	rep outs dx,DWORD PTR ds:[esi]
  4039e0:	popa   
  4039e1:	mov    dh,0xea
  4039e3:	push   ds
  4039e4:	ja     0x4039e9
  4039e6:	xchg   edi,eax
  4039e7:	push   esi
  4039e8:	fiadd  DWORD PTR [ecx-0x25]
  4039eb:	mov    ds:0x22ca82b8,al
  4039f0:	jmp    0x4039b4
  4039f2:	push   0x3a
  4039f4:	cli    
  4039f5:	js     0x403a2e
  4039f7:	jl     0x403a19
  4039f9:	pop    esi
  4039fa:	and    BYTE PTR [ecx],bh
  4039fc:	lock adc eax,0x90603bd2
  403a02:	inc    edi
  403a03:	scas   al,BYTE PTR es:[edi]
  403a04:	sbb    al,0x58
  403a06:	imul   ebp,DWORD PTR [edi],0x65319d96
  403a0c:	jno    0x403a00
  403a0e:	lods   al,BYTE PTR ds:[esi]
  403a0f:	icebp  
  403a10:	outs   dx,DWORD PTR ds:[esi]
  403a11:	xchg   edi,eax
  403a12:	hlt    
  403a13:	retf   
  403a14:	xchg   esi,eax
  403a15:	call   0xa1e2:0x166b5feb
  403a1c:	xchg   ebx,eax
  403a1d:	aaa    
  403a1e:	mov    WORD PTR [edi],gs
  403a20:	scas   eax,DWORD PTR es:[edi]
  403a21:	xchg   sp,ax
  403a23:	pop    dx
  403a25:	cmp    DWORD PTR [edi],ebp
  403a27:	(bad)  
  403a28:	jg     0x403a75
  403a2a:	lods   eax,DWORD PTR ds:[esi]
  403a2b:	(bad)  
  403a2d:	pop    edi
  403a2e:	cld    
  403a2f:	add    BYTE PTR [esi+0x411f828],al
  403a35:	xor    DWORD PTR [ebx-0x66],edi
  403a38:	in     al,0x3
  403a3a:	lods   eax,DWORD PTR ds:[esi]
  403a3b:	popf   
  403a3c:	add    al,0xc8
  403a3e:	dec    ecx
  403a3f:	lods   eax,DWORD PTR ds:[esi]
  403a40:	out    0xaf,eax
  403a42:	mul    esp
  403a44:	fmul   DWORD PTR [ebx+0x2f5e0e8b]
  403a4a:	push   es
  403a4b:	adc    ebx,DWORD PTR ds:0x5c02acf
  403a51:	outs   dx,DWORD PTR ds:[esi]
  403a52:	push   es
  403a53:	push   edx
  403a54:	push   es
  403a55:	(bad)  
  403a56:	mov    ch,0xd5
  403a58:	test   eax,0x4f6532be
  403a5d:	jle    0x403a9d
  403a5f:	pop    eax
  403a60:	mov    edx,0x15db494e
  403a65:	push   cs
  403a66:	xor    al,0x66
  403a68:	mov    ecx,eax
  403a6a:	push   ebp
  403a6b:	push   ebx
  403a6c:	mov    ds:0x737917c,eax
  403a71:	cs jbe 0x4039fa
  403a74:	lods   eax,DWORD PTR ds:[esi]
  403a75:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403a77:	jmp    FWORD PTR [esi]
  403a79:	jmp    0x1da6:0xd362439d
  403a80:	pop    edx
  403a81:	add    ah,ah
  403a83:	div    BYTE PTR ds:0xe4757031
  403a89:	add    DWORD PTR [ecx+0x1beaa016],0x9a686fc3
  403a93:	repz jmp 0x40bf3f34
  403a99:	sar    DWORD PTR [edx-0x3468b470],cl
  403a9f:	and    al,0xf5
  403aa1:	push   ebp
  403aa2:	stos   BYTE PTR es:[edi],al
  403aa3:	mov    ds:0x2ceb054e,al
  403aa8:	and    dl,BYTE PTR [ecx+ebp*8+0x6b]
  403aac:	cmp    edx,0xc6c8e086
  403ab2:	jecxz  0x403af7
  403ab4:	jp     0x403a71
  403ab6:	cli    
  403ab7:	inc    esp
  403ab8:	sub    edi,DWORD PTR [ebx]
  403aba:	or     BYTE PTR [ebx],cl
  403abc:	or     bl,dh
  403abe:	cmc    
  403abf:	xchg   BYTE PTR [ebp-0x2e],dl
  403ac2:	test   eax,0xebc04256
  403ac8:	imul   esi,DWORD PTR [edx-0x47963319],0x55
  403acf:	fistp  WORD PTR [ecx]
  403ad1:	arpl   WORD PTR [ebx],ax
  403ad3:	ins    DWORD PTR es:[edi],dx
  403ad4:	xchg   edi,eax
  403ad5:	inc    edi
  403ad6:	jle    0x403ab5
  403ad8:	aam    0x9e
  403ada:	inc    ebp
  403adb:	fs fsubr st(4),st
  403ade:	ret    0x3ab7
  403ae1:	cmp    BYTE PTR [ecx],ch
  403ae3:	cwde   
  403ae4:	or     eax,0x6f0f974b
  403ae9:	out    0xef,eax
  403aeb:	cwde   
  403aec:	jl     0x403a78
  403aee:	jno    0x403ae3
  403af0:	in     eax,0x15
  403af2:	cmc    
  403af3:	jne    0x403a8c
  403af5:	adc    DWORD PTR [ebp+ebp*2+0x71e51638],esp
  403afc:	inc    eax
  403afd:	push   edx
  403afe:	lahf   
  403aff:	ins    BYTE PTR es:[edi],dx
  403b00:	adc    esi,edi
  403b02:	cwde   
  403b03:	mov    esp,0xbd04d35a
  403b08:	mov    ebp,0xcb312c53
  403b0d:	les    ebp,FWORD PTR [edx-0x8]
  403b10:	and    eax,0x39896d6c
  403b15:	push   esi
  403b16:	cmp    BYTE PTR [ebx-0x5cb335ec],al
  403b1c:	mov    ecx,0xf4b3e746
  403b21:	ds jae 0x403b22
  403b24:	in     eax,dx
  403b25:	cmp    eax,0x6b3c4367
  403b2a:	mov    ebp,0xc633c72b
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429a9f
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fnsave [ebp+0x3b]
  403c9b:	in     eax,dx
  403c9c:	cmp    bh,ch
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xfffffffe
  403ca6:	xor    cl,0xd0
  403ca9:	jp     0x403c87
  403cab:	lock push edi
  403cad:	lock xor ecx,edi
  403cb0:	xchg   DWORD PTR [ebp+0x140e45ff],ecx
  403cb6:	xchg   edx,eax
  403cb7:	out    dx,eax
  403cb8:	and    BYTE PTR [ebx],bh
  403cba:	jne    0x403cd7
  403cbc:	cdq    
  403cbd:	jo     0x403cba
  403cbf:	xchg   edi,eax
  403cc0:	fwait
  403cc1:	in     al,dx
  403cc2:	cmp    eax,0xc6f29df5
  403cc7:	sbb    BYTE PTR [ecx+0x3e],ah
  403cca:	bound  eax,QWORD PTR [esi+edx*1]
  403ccd:	mov    ch,0x76
  403ccf:	sbb    ecx,DWORD PTR [eax]
  403cd1:	cdq    
  403cd2:	inc    ecx
  403cd3:	out    0x56,al
  403cd5:	sbb    DWORD PTR [edi+0x6c],0x10
  403cd9:	dec    eax
  403cda:	cld    
  403cdb:	jmp    0x403c71
  403cdd:	lods   al,BYTE PTR ds:[esi]
  403cde:	fs retf 
  403ce0:	mov    ds:0xcf7a4985,al
  403ce5:	inc    ecx
  403ce6:	idiv   DWORD PTR [ebx+esi*1-0x75]
  403cea:	xor    ah,BYTE PTR [ebx+ebx*2-0x55803843]
  403cf1:	jnp    0x403d45
  403cf3:	ins    DWORD PTR es:[edi],dx
  403cf4:	fwait
  403cf5:	arpl   WORD PTR [esi-0x16],ax
  403cf8:	mov    eax,0xbbcf96ae
  403cfd:	adc    DWORD PTR [esi-0x52],esi
  403d00:	jmp    0x403cc9
  403d02:	(bad)  
  403d03:	clc    
  403d04:	jae    0x403ca9
  403d06:	mov    edi,0xd2599108
  403d0b:	mov    esp,0xd97a487c
  403d10:	iret   
  403d11:	pop    ecx
  403d12:	cmova  esp,DWORD PTR [esi+0x5d]
  403d16:	(bad)  
  403d17:	rcr    dh,1
  403d19:	sub    ebx,DWORD PTR [edx]
  403d1b:	mov    ch,0x3
  403d1d:	fstp   TBYTE PTR [edx-0x1640dfb1]
  403d23:	and    al,0x6b
  403d25:	and    al,0x78
  403d27:	sti    
  403d28:	jge    0x403cf5
  403d2a:	sub    WORD PTR [ecx+0xd0dfeed],ax
  403d31:	ror    BYTE PTR [ebx-0x1ba7b92],1
  403d37:	out    dx,eax
  403d38:	xchg   ebx,eax
  403d39:	not    cl
  403d3b:	pop    es
  403d3c:	imul   ecx,DWORD PTR [edi],0x323b856f
  403d42:	into   
  403d43:	lods   eax,DWORD PTR ds:[esi]
  403d44:	das    
  403d45:	mov    al,ds:0xff9dc7f
  403d4a:	rol    dh,cl
  403d4c:	int3   
  403d4d:	sti    
  403d4e:	imul   DWORD PTR [ebp+esi*2+0x2f4d9e7b]
  403d55:	test   BYTE PTR [edx],dh
  403d57:	cmp    al,0x6f
  403d59:	repnz mov ss,WORD PTR [ecx-0x42950255]
  403d60:	test   BYTE PTR ds:0xf1a15d2a,dl
  403d66:	popf   
  403d67:	inc    eax
  403d68:	mov    ebx,0xf4582cb6
  403d6d:	or     al,dh
  403d6f:	mov    ah,0x55
  403d71:	stos   BYTE PTR es:[edi],al
  403d72:	(bad)  
  403d73:	inc    BYTE PTR [edx-0x1d9408ec]
  403d79:	jecxz  0x403d59
  403d7b:	mov    ch,0x11
  403d7d:	lds    eax,FWORD PTR [edi+eiz*1+0x4cd4ff43]
  403d84:	movzx  ebp,BYTE PTR ds:0x2300ca41
  403d8b:	mov    ?,edx
  403d8d:	fst    st(7)
  403d8f:	gs enter 0x75f0,0xd2
  403d94:	in     eax,dx
  403d95:	sub    BYTE PTR [ecx+0x61],0xc9
  403d99:	dec    edi
  403d9a:	in     eax,0xea
  403d9c:	arpl   sp,cx
  403d9e:	or     BYTE PTR [ebx+esi*4+0x29],0x3
  403da3:	and    ebp,DWORD PTR [eax]
  403da5:	int    0x83
  403da7:	mov    DWORD PTR [ebp+0xd],esi
  403daa:	call   ebx
  403dac:	mov    ecx,0xca6cc2f4
  403db1:	pop    eax
  403db2:	outs   dx,BYTE PTR ds:[esi]
  403db3:	ja     0x403e31
  403db5:	div    DWORD PTR [edx]
  403db7:	pop    ds
  403db8:	mov    WORD PTR [edx],fs
  403dba:	mov    edi,esi
  403dbc:	pop    es
  403dbd:	icebp  
  403dbe:	not    cl
  403dc0:	pop    eax
  403dc1:	gs push 0xcb18501b
  403dc7:	data16 das 
  403dc9:	dec    esp
  403dca:	out    dx,al
  403dcb:	clc    
  403dcc:	in     eax,dx
  403dcd:	mov    ebp,0x6f911a5f
  403dd2:	xor    edx,ebx
  403dd4:	js     0x403dcd
  403dd6:	mov    ch,0xf1
  403dd8:	add    ch,BYTE PTR ds:0x98001f4e
  403dde:	jae    0x403e1a
  403de0:	loop   0x403e2a
  403de2:	jecxz  0x403e54
  403de4:	fmul   DWORD PTR [edi]
  403de6:	cs out 0x9a,eax
  403de9:	push   edx
  403dea:	push   ds
  403deb:	xor    DWORD PTR [edi+0x6a],edi
  403dee:	xlat   BYTE PTR ds:[ebx]
  403def:	jmp    FWORD PTR [ecx-0x796ad95c]
  403df5:	stos   DWORD PTR es:[edi],eax
  403df6:	jne    0x403e01
  403df8:	mov    fs,WORD PTR [ecx-0xd9d494f]
  403dfe:	inc    ebp
  403dff:	in     eax,0xd
  403e01:	in     eax,0x37
  403e03:	xchg   edx,eax
  403e04:	lods   eax,DWORD PTR ds:[esi]
  403e05:	mov    ecx,0x3e95b0db
  403e0a:	ins    DWORD PTR es:[edi],dx
  403e0b:	xor    edi,esp
  403e0d:	adc    DWORD PTR [ecx],esp
  403e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e10:	or     cl,0x4a
  403e13:	retf   
  403e14:	ret    
  403e15:	stc    
  403e16:	mov    ebx,0x73852f70
  403e1b:	mov    eax,0xc5b065fd
  403e20:	xor    edi,ebx
  403e22:	in     eax,0x6
  403e24:	pop    ds
  403e25:	shl    DWORD PTR ds:0xb597efcb,0xaa
  403e2c:	xor    ecx,DWORD PTR [ecx]
  403e2e:	or     edi,ebp
  403e30:	es clc 
  403e32:	adc    ah,BYTE PTR ds:0x751d3940
  403e38:	mov    eax,ds:0xeb330b37
  403e3d:	sbb    al,BYTE PTR [edi+0x4c]
  403e40:	cmp    esi,DWORD PTR [edx+0x14]
  403e43:	cli    
  403e44:	inc    esp
  403e45:	xor    cl,bh
  403e47:	pop    ecx
  403e48:	(bad)  
  403e49:	clc    
  403e4a:	xor    eax,0x39edd122
  403e4f:	inc    ebx
  403e50:	push   ds
  403e51:	xchg   edx,eax
  403e52:	pop    ebx
  403e53:	adc    DWORD PTR ds:0x11890a3f,ebx
  403e5a:	addr16 cwde 
  403e5c:	push   ecx
  403e5d:	bound  eax,QWORD PTR [ecx+0x609fd834]
  403e63:	push   edi
  403e64:	and    eax,0xa60a8e87
  403e69:	jns    0x403e7b
  403e6b:	(bad)
  403e6e:	adc    dl,BYTE PTR [edi+ebp*4]
  403e71:	ret    0xd82b
  403e74:	or     eax,0x540f358f
  403e79:	dec    eax
  403e7a:	jmp    0x403eab
  403e7c:	in     eax,dx
  403e7d:	xchg   esi,eax
  403e7e:	push   ss
  403e7f:	or     eax,0xb2d6a298
  403e84:	xor    eax,0xb7839bce
  403e89:	push   ecx
  403e8a:	mov    ds:0xc6b5fa57,eax
  403e8f:	sub    ebx,eax
  403e91:	adc    BYTE PTR [ebx],0xb7
  403e94:	mov    esp,0x2a85ef51
  403e99:	pop    eax
  403e9a:	add    ecx,DWORD PTR [ecx-0x5a0a9b9b]
  403ea0:	mov    al,0x57
  403ea2:	mov    ebp,0x4723acf2
  403ea7:	out    0xff,al
  403ea9:	test   eax,0x28520be3
  403eae:	mov    ebp,0x6fa2ccca
  403eb3:	sbb    al,BYTE PTR [esi]
  403eb5:	or     esi,DWORD PTR [ebx+0x34]
  403eb8:	or     edx,DWORD PTR [edi]
  403eba:	es xor ebx,ebp
  403ebd:	fisub  WORD PTR [ebx]
  403ebf:	fadd   DWORD PTR [eax]
  403ec1:	fild   DWORD PTR [ebp+0x42]
  403ec4:	xchg   ebx,eax
  403ec5:	add    DWORD PTR [edx-0x15],0xfc6cb837
  403ecc:	jae    0x403ee4
  403ece:	ds inc sp
  403ed1:	rep lods al,BYTE PTR cs:[esi]
  403ed4:	and    ebp,ebp
  403ed6:	and    eax,0xfe2f8e95
  403edb:	mov    dh,0x1a
  403edd:	gs or  al,0x98
  403ee0:	sub    eax,0x56d50225
  403ee5:	mov    esi,0x828814ce
  403eea:	xchg   esi,eax
  403eeb:	jns    0x403eb1
  403eed:	push   0xb564a90c
  403ef2:	repz sbb al,0x19
  403ef5:	jns    0x403f12
  403ef7:	es ret 0x2543
  403efb:	mov    ebp,0xc00e07b1
  403f00:	outs   dx,BYTE PTR ds:[esi]
  403f01:	and    eax,0xc7cdc640
  403f06:	out    0x8f,eax
  403f08:	push   ds
  403f09:	mov    al,ds:0x8a367140
  403f0e:	mov    edi,0xf0a0e1e
  403f13:	retf   0x45af
  403f16:	in     eax,dx
  403f17:	jge    0x7df63876
  403f1d:	mov    ecx,0x8592b914
  403f22:	ror    bh,0x93
  403f25:	push   edi
  403f26:	jmp    0x166f4d11
  403f2b:	jmp    0xdfee:0x8c746709
  403f32:	cmp    ebx,DWORD PTR [ebp+0x75e38228]
  403f38:	je     0x403ef7
  403f3a:	or     BYTE PTR [edx],bl
  403f3c:	popf   
  403f3d:	lods   al,BYTE PTR ds:[esi]
  403f3e:	push   es
  403f3f:	shl    BYTE PTR [edi+0x7d],1
  403f42:	retf   
  403f43:	mov    al,ds:0x67a9d749
  403f48:	out    dx,al
  403f49:	sbb    dl,BYTE PTR [eax+0x245e27b1]
  403f4f:	sti    
  403f50:	adc    BYTE PTR [edi-0x7fe4c040],cl
  403f56:	imul   esi,DWORD PTR [eax+0x3a1d279c],0x873be23c
  403f60:	mov    ds:0x3e1f66eb,eax
  403f65:	sbb    eax,0xbbb2a9dd
  403f6a:	pop    ss
  403f6b:	mov    dh,0xcb
  403f6d:	ja     0x403f7b
  403f6f:	test   ch,0x24
  403f72:	cwde   
  403f73:	dec    ecx
  403f74:	outs   dx,DWORD PTR ds:[esi]
  403f75:	ss in  eax,dx
  403f77:	sahf   
  403f78:	xchg   esi,eax
  403f79:	jo     0x403f06
  403f7b:	dec    eax
  403f7c:	sub    al,0x4e
  403f7e:	repnz or al,0x3d
  403f81:	jae    0x403f47
  403f83:	aas    
  403f84:	clc    
  403f85:	mov    bh,0x67
  403f87:	dec    ecx
  403f88:	adc    DWORD PTR [esi+0x18],edi
  403f8b:	jbe    0x403f7f
  403f8d:	xchg   edx,eax
  403f8e:	pop    es
  403f8f:	loop   0x403ff0
  403f91:	mov    BYTE PTR [ecx-0x67],al
  403f94:	mov    WORD PTR [edx+0x5735f992],ss
  403f9a:	fs mul ah
  403f9d:	repnz xchg ecx,eax
  403f9f:	xor    DWORD PTR [ecx],0x24c80e91
  403fa5:	aad    0xb7
  403fa7:	jns    0x403f70
  403fa9:	mov    edx,0xefd8d937
  403fae:	pop    eax
  403faf:	test   BYTE PTR [edi+0x3c],0xd7
  403fb3:	mov    esi,0x9254ef69
  403fb8:	rcl    BYTE PTR [edi+0x44],cl
  403fbb:	mov    bh,0xb3
  403fbd:	repnz or DWORD PTR [ecx],ebx
  403fc0:	and    dl,BYTE PTR [ecx+edx*8-0x5e]
  403fc4:	sub    BYTE PTR [edi],dh
  403fc6:	sub    dh,cl
  403fc8:	dec    esp
  403fc9:	mov    ebx,0x40ff8e8e
  403fcf:	jecxz  0x403f94
  403fd1:	and    bl,bh
  403fd3:	pop    ebp
  403fd4:	std    
  403fd5:	jmp    0x403fde
  403fd7:	mov    esi,0x49382bf8
  403fdc:	xor    al,0xd0
  403fde:	shl    bl,cl
  403fe0:	sub    DWORD PTR [edx*2+0x248ec25d],ebx
  403fe7:	call   0xa3f46746
  403fec:	and    DWORD PTR [esi+0x18],ebx
  403fef:	xchg   edi,eax
  403ff0:	ins    BYTE PTR es:[edi],dx
  403ff1:	adc    al,0x64
  403ff3:	and    esi,esi
  403ff5:	(bad)  
  403ff6:	xlat   BYTE PTR ds:[ebx]
  403ff7:	inc    eax
  403ff8:	pop    eax
  403ff9:	sub    al,0x90
  403ffb:	stc    
  403ffc:	je     0x40407d
  403ffe:	adc    bh,BYTE PTR [edx-0x219c614b]
  404004:	jne    0x403ff9
  404006:	sbb    edx,DWORD PTR [ecx-0x66]
  404009:	arpl   WORD PTR [edx],ax
  40400b:	loopne 0x403f92
  40400d:	or     BYTE PTR [edi],0x6d
  404010:	and    BYTE PTR [edx+0x6f5d24eb],0xf4
  404017:	cmp    DWORD PTR [ebx],esi
  404019:	jae    0x403ffc
  40401b:	push   edx
  40401c:	jecxz  0x404056
  40401e:	xchg   ebp,eax
  40401f:	push   ebp
  404020:	pusha  
  404021:	mov    esp,0x5d9e0ca4
  404026:	fcomip st,st(4)
  404028:	adc    eax,0x852f8a87
  40402d:	loopne 0x4040a0
  40402f:	(bad)  
  404030:	into   
  404031:	mov    ds:0xed24a08d,eax
  404036:	add    edi,edx
  404038:	je     0x404092
  40403a:	sbb    DWORD PTR [esp+ebp*2-0x39952da8],eax
  404041:	test   eax,0x964bba70
  404046:	fs daa 
  404048:	or     eax,0x45fd2324
  40404d:	or     al,0x76
  40404f:	push   eax
  404050:	jecxz  0x404070
  404052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404053:	imul   edi,DWORD PTR [esi-0x58],0xffffff8f
  404057:	sbb    eax,0xbb22eba0
  40405c:	(bad)  
  40405d:	pop    ebp
  40405e:	int3   
  40405f:	stc    
  404060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404061:	cmp    ebx,ecx
  404063:	mov    dl,BYTE PTR [ebx+0x77fd5f73]
  404069:	arpl   WORD PTR [ebx-0x59],bp
  40406c:	fist   DWORD PTR [esi-0x26]
  40406f:	dec    edx
  404070:	repz and BYTE PTR [edx-0x6c433ec7],dl
  404077:	add    edx,ebx
  404079:	xchg   ebp,eax
  40407a:	push   ds
  40407b:	and    DWORD PTR [edi-0x1e],ebp
  40407e:	pop    ebx
  40407f:	std    
  404080:	out    dx,eax
  404081:	xchg   ebx,eax
  404082:	neg    DWORD PTR [esi+0x4c]
  404085:	push   cs
  404086:	cmp    al,BYTE PTR [esi-0x30]
  404089:	xchg   ebp,eax
  40408a:	jp     0x404092
  40408c:	cdq    
  40408d:	jle    0x40403e
  40408f:	sbb    bh,BYTE PTR [eax+0x7c]
  404092:	xchg   esi,eax
  404093:	repz mov bl,0xe5
  404096:	lods   al,BYTE PTR ds:[esi]
  404097:	das    
  404098:	ret    
  404099:	lods   al,BYTE PTR ds:[esi]
  40409a:	mov    esi,esi
  40409c:	adc    eax,0xdd0fd9f2
  4040a1:	xchg   ecx,eax
  4040a2:	push   0x34
  4040a4:	les    ebp,FWORD PTR [edi-0x23df9e49]
  4040aa:	vpminub ymm5,ymm5,YMMWORD PTR [ebx+0x49]
  4040af:	mov    al,ds:0xcd16525
  4040b4:	mov    edi,0x7639d7fc
  4040b9:	hlt    
  4040ba:	(bad)  
  4040bb:	sub    ebx,DWORD PTR [ebx]
  4040bd:	dec    esi
  4040be:	mov    esp,0xe9704413
  4040c3:	femms  
  4040c5:	test   eax,0x9a690e18
  4040ca:	jbe    0x404082
  4040cc:	cmp    eax,0x742dbf52
  4040d1:	add    esp,DWORD PTR [ebx-0x3c]
  4040d4:	daa    
  4040d5:	fstp   DWORD PTR [edi]
  4040d7:	out    0x2c,al
  4040d9:	hlt    
  4040da:	xchg   ebp,esp
  4040dc:	loop   0x4040ee
  4040de:	mov    bh,0x4c
  4040e0:	dec    edi
  4040e1:	adc    BYTE PTR [ecx-0x63c04450],bh
  4040e7:	sahf   
  4040e8:	inc    edx
  4040e9:	mov    ecx,DWORD PTR [ecx]
  4040eb:	add    al,0x6b
  4040ed:	pop    ss
  4040ee:	fdiv   DWORD PTR [ebp+0x72]
  4040f1:	push   es
  4040f2:	and    dh,dh
  4040f4:	call   0x931d:0x2858ef6f
  4040fb:	stos   DWORD PTR es:[edi],eax
  4040fc:	ss nop
  4040fe:	cmp    esp,ebx
  404100:	jp     0x4040ad
  404102:	push   ecx
  404103:	inc    eax
  404104:	nop
  404105:	xchg   ecx,eax
  404106:	cmp    eax,0xc516abf6
  40410b:	scas   al,BYTE PTR es:[edi]
  40410c:	cwde   
  40410d:	xchg   ebx,eax
  40410e:	dec    ecx
  40410f:	ja     0x40416a
  404111:	icebp  
  404112:	js     0x40413c
  404114:	pop    edi
  404115:	or     BYTE PTR [esi+0x2c],cl
  404118:	bound  ecx,QWORD PTR [ecx]
  40411a:	mov    ch,0x3e
  40411c:	sub    BYTE PTR [edx+0x7f],dl
  40411f:	mov    ebp,0xcc6004c9
  404124:	jg     0x40415f
  404126:	push   0xffffffd0
  404128:	fwait
  404129:	jnp    0x4040fb
  40412b:	daa    
  40412c:	aas    
  40412d:	jp     0x4041aa
  40412f:	jmp    0x90e5dc07
  404134:	xor    al,0x15
  404136:	cs pushf 
  404138:	ret    
  404139:	loopne 0x4041b6
  40413b:	push   cs
  40413c:	mov    dh,0xf9
  40413e:	dec    esi
  40413f:	push   esp
  404140:	in     al,dx
  404141:	jge    0x4040ea
  404143:	ins    BYTE PTR es:[edi],dx
  404144:	in     eax,dx
  404145:	enter  0x8bf9,0x6d
  404149:	aas    
  40414a:	sub    BYTE PTR [eax],al
  40414c:	mov    ch,0xbe
  40414e:	xchg   ecx,eax
  40414f:	push   edx
  404150:	pop    ebp
  404151:	repnz mov ebx,edx
  404154:	es jnp 0x4041cc
  404157:	ss push edx
  404159:	cmc    
  40415a:	pop    eax
  40415b:	int    0xe5
  40415d:	in     al,0x81
  40415f:	or     ebp,eax
  404161:	fild   DWORD PTR [ecx]
  404163:	nop
  404164:	add    eax,0x1d73decb
  404169:	aas    
  40416a:	nop
  40416b:	cmp    cl,dl
  40416d:	imul   edi,DWORD PTR [ebp+0x1e],0x3ed5c30f
  404174:	sub    al,0xbb
  404176:	pop    ds
  404177:	shl    BYTE PTR [edi-0x6f],1
  40417a:	(bad)  
  40417b:	ds mov dl,0xae
  40417e:	lahf   
  40417f:	scas   al,BYTE PTR es:[edi]
  404180:	inc    ebx
  404181:	jl     0x4041e8
  404183:	push   edi
  404184:	pop    ds
  404185:	cmc    
  404186:	cs and eax,0x1803bb97
  40418c:	pushf  
  40418d:	mov    DWORD PTR [ebp-0x493f5412],edx
  404193:	retf   0xad3e
  404196:	dec    ebp
  404197:	repnz mov ch,0x40
  40419a:	ins    DWORD PTR es:[edi],dx
  40419b:	and    eax,0x988f4a53
  4041a0:	pop    ecx
  4041a1:	jno    0x404167
  4041a3:	arpl   WORD PTR [eax+0x2da43b1e],cx
  4041a9:	call   0x685b:0x9fbd7703
  4041b0:	adc    DWORD PTR [edi-0x17],ebx
  4041b3:	psubsw mm1,QWORD PTR [ebp+ebp*1+0x360f7853]
  4041bb:	and    BYTE PTR [eax+0x5e],al
  4041be:	adc    eax,0xe7e5b54e
  4041c3:	(bad)  
  4041c4:	pop    eax
  4041c5:	hlt    
  4041c6:	fmul   QWORD PTR [ebp-0x5a]
  4041c9:	ja     0x404172
  4041cb:	sub    al,0xa3
  4041cd:	mov    ebp,0xd642cba9
  4041d2:	sub    dl,BYTE PTR [ebp+edx*1+0x387750a]
  4041d9:	adc    esi,ebx
  4041db:	xchg   ebx,eax
  4041dc:	out    dx,al
  4041dd:	stos   DWORD PTR es:[edi],eax
  4041de:	das    
  4041df:	into   
  4041e0:	in     al,0x44
  4041e2:	sub    edi,esi
  4041e4:	outs   dx,BYTE PTR ds:[esi]
  4041e5:	mov    dh,0xfc
  4041e7:	cdq    
  4041e8:	add    esp,DWORD PTR [esi+eiz*4+0x16]
  4041ec:	push   cs
  4041ed:	and    edi,DWORD PTR [esi+0x37]
  4041f0:	int3   
  4041f1:	js     0x40424e
  4041f3:	nop
  4041f4:	imul   ebp,DWORD PTR [edi],0xbe23691e
  4041fa:	jmp    0xae78:0x84f4d402
  404201:	out    0x73,eax
  404203:	pop    ebx
  404204:	xor    ah,BYTE PTR [ecx-0x6bc03fd7]
  40420a:	add    edi,DWORD PTR [edi+esi*1+0x7f]
  40420e:	adc    eax,0xcdc53156
  404213:	js     0x40419e
  404215:	jne    0x40419a
  404217:	or     eax,0x7cefb9cd
  40421c:	(bad)  
  40421d:	imul   ebp,DWORD PTR [ebx],0xffffffd2
  404220:	dec    edi
  404221:	out    dx,eax
  404222:	aam    0x21
  404224:	and    BYTE PTR [ebx-0x3b5b69ba],ch
  40422a:	sbb    ebp,DWORD PTR [eax-0x2e]
  40422d:	adc    eax,0x484ad4d0
  404232:	lea    ebp,[ebp+0x4a]
  404235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404236:	jb     0x404219
  404238:	fistp  WORD PTR [ebx-0x1a1db133]
  40423e:	ror    BYTE PTR [edx-0x3],1
  404241:	rcr    dh,cl
  404243:	in     al,0xe0
  404245:	sub    dl,BYTE PTR [edi]
  404247:	mov    ecx,0x4f012fa4
  40424c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40424d:	inc    esp
  40424e:	mov    bh,BYTE PTR [ebx-0x1a]
  404251:	cmp    DWORD PTR [esi+eiz*1-0x58],edx
  404255:	xchg   ebp,ecx
  404257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404258:	or     esp,DWORD PTR [ebp+edi*8+0x4f]
  40425c:	cmp    DWORD PTR [ecx-0x4a],ebp
  40425f:	outs   dx,BYTE PTR ds:[esi]
  404260:	leave  
  404261:	(bad)  
  404262:	lods   eax,DWORD PTR ds:[esi]
  404263:	push   ss
  404264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404265:	imul   edx,DWORD PTR ds:0xb3a6f2b1,0x3fe367ff
  40426f:	test   al,0xce
  404271:	shr    DWORD PTR [ebx-0x37284c85],0xea
  404278:	das    
  404279:	and    DWORD PTR [ebx+0x3f07bc29],eax
  40427f:	add    DWORD PTR [ebx],eax
  404281:	xchg   ecx,eax
  404282:	out    dx,eax
  404283:	inc    eax
  404284:	mov    DWORD PTR [eax],0x8418496c
  40428a:	adc    ch,al
  40428c:	mov    ebp,0x3a6cf706
  404291:	xor    DWORD PTR [ecx-0x33],ecx
  404294:	shl    DWORD PTR [ebx-0x7e90a3f3],1
  40429a:	mov    al,ds:0xb7ef9ead
  40429f:	outs   dx,DWORD PTR ds:[esi]
  4042a0:	inc    ebp
  4042a1:	mov    edx,0x8aa44c6f
  4042a6:	jmp    0x5ad3:0xcf92ede7
  4042ad:	sub    eax,0x1e4eff04
  4042b2:	pusha  
  4042b3:	(bad)  
  4042b4:	or     edx,DWORD PTR [ebx+0x67af0d6c]
  4042ba:	aas    
  4042bb:	mov    DWORD PTR [ecx+0x48819b78],esi
  4042c1:	add    DWORD PTR [esi+0x2e],0xc2658bf
  4042c8:	sub    BYTE PTR [edx-0x522d9c26],cl
  4042ce:	and    BYTE PTR [esi+0x9],0x25
  4042d2:	pushf  
  4042d3:	and    esi,DWORD PTR [ebp-0xacda1a1]
  4042d9:	adc    edx,eax
  4042db:	adc    ah,bh
  4042dd:	pop    es
  4042de:	popf   
  4042df:	popa   
  4042e0:	adc    edi,DWORD PTR [ecx-0x21]
  4042e3:	xor    eax,0xa477aafb
  4042e8:	or     BYTE PTR [eax+0xba457c9],0x2
  4042ef:	and    DWORD PTR [eax+0x5a],esi
  4042f2:	cmc    
  4042f3:	adc    ah,ah
  4042f5:	mov    esi,0xf96a6237
  4042fa:	in     eax,dx
  4042fb:	xor    edi,eax
  4042fd:	push   0x4e
  4042ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404300:	into   
  404301:	xchg   DWORD PTR [ecx-0x40f5c332],ecx
  404307:	hlt    
  404308:	mov    ah,0xc9
  40430a:	adc    BYTE PTR [eax+eax*8-0xea6cd4b],cl
  404311:	jae    0x40433a
  404313:	mov    al,0xbd
  404315:	sbb    al,0xee
  404317:	mov    eax,0x60a525fe
  40431c:	mov    ds:0x5ec43fa,al
  404321:	jge    0x404394
  404323:	stc    
  404324:	mov    eax,ds:0x5adebcca
  404329:	mov    al,ds:0xf771717a
  40432e:	push   edi
  40432f:	stos   DWORD PTR es:[edi],eax
  404330:	ret    0x8873
  404333:	sbb    DWORD PTR [ecx+edi*8+0x3a],0xb7fa4b0c
  40433b:	mov    ecx,0x942d9629
  404340:	push   ds
  404341:	(bad)  
  404342:	pop    dx
  404344:	sbb    DWORD PTR [ecx-0x32],eax
  404347:	mov    bl,0x3d
  404349:	cwde   
  40434a:	sbb    edx,ebp
  40434c:	cmc    
  40434d:	enter  0x8ad1,0x1a
  404351:	jmp    0xc88b9fc7
  404356:	adc    ebx,DWORD PTR [ebp-0x15e18d72]
  40435c:	push   esi
  40435d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40435e:	retf   
  40435f:	ss pop es
  404361:	or     ebx,DWORD PTR [edi]
  404363:	add    al,BYTE PTR [ecx]
  404365:	or     esp,DWORD PTR ds:0x3347178f
  40436b:	mov    cl,BYTE PTR [edi*8+0x5f8aba38]
  404372:	jo     0x404323
  404374:	and    al,0x6e
  404376:	retf   
  404377:	and    BYTE PTR [esi+0x3ee5f7d5],ah
  40437d:	mov    edx,gs
  40437f:	inc    edx
  404380:	mov    dl,ah
  404382:	xchg   ebx,eax
  404383:	stos   DWORD PTR es:[edi],eax
  404384:	les    ecx,FWORD PTR [esi]
  404386:	cdq    
  404387:	std    
  404388:	hlt    
  404389:	cmp    al,0x59
  40438b:	mov    ds:0xa0ed7188,al
  404390:	inc    esp
  404391:	clc    
  404392:	cli    
  404393:	imul   ebx
  404395:	adc    al,0x2c
  404397:	dec    edi
  404398:	adc    al,0x57
  40439a:	adc    BYTE PTR [ebx+0x7c3b6d0e],bh
  4043a0:	jne    0x404335
  4043a2:	ds cli 
  4043a4:	xor    al,BYTE PTR [ecx]
  4043a6:	add    DWORD PTR [esi],ebx
  4043a8:	sub    BYTE PTR [edx],0x45
  4043ab:	pop    ds
  4043ac:	ins    BYTE PTR es:[edi],dx
  4043ad:	xchg   esi,eax
  4043ae:	ds (bad) 
  4043b0:	ror    DWORD PTR [esp+edx*4+0x26],1
  4043b4:	xor    eax,0x482a08bc
  4043b9:	call   0xe589048e
  4043be:	mov    ds,WORD PTR [eax-0x47]
  4043c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c2:	das    
  4043c3:	sub    DWORD PTR [ebx-0x3bf39344],ebp
  4043c9:	shr    DWORD PTR [esi+0xc9fb965],0x88
  4043d0:	mov    DWORD PTR [eax+0x42],ecx
  4043d3:	inc    ecx
  4043d4:	repz xchg edx,eax
  4043d6:	jno    0x4043de
  4043d8:	jae    0x40440c
  4043da:	fisubr WORD PTR [esi-0x2f]
  4043dd:	popa   
  4043de:	stos   DWORD PTR es:[edi],eax
  4043df:	cmp    eax,0x10824ff4
  4043e4:	rol    esp,cl
  4043e6:	push   edi
  4043e7:	pop    esi
  4043e8:	mov    edx,0x88fb9c8d
  4043ed:	dec    esi
  4043ee:	add    esi,esp
  4043f0:	repz jne 0x404439
  4043f3:	aas    
  4043f4:	xchg   edi,eax
  4043f5:	dec    esp
  4043f6:	dec    ebp
  4043f7:	outs   dx,DWORD PTR ds:[esi]
  4043f8:	shr    eax,1
  4043fa:	invlpg BYTE PTR [eax-0x4234c30a]
  404401:	adc    edi,DWORD PTR [esi-0xf]
  404404:	aaa    
  404405:	jbe    0x4043c4
  404407:	inc    edi
  404408:	xchg   ecx,eax
  404409:	mov    WORD PTR [eax+0x1ab5a124],fs
  40440f:	out    0x71,al
  404411:	add    eax,0x1d13c58a
  404417:	mov    edi,DWORD PTR [ecx+eax*2-0x70]
  40441b:	xlat   BYTE PTR ds:[ebx]
  40441c:	stos   DWORD PTR es:[edi],eax
  40441d:	add    al,0x71
  40441f:	pushf  
  404420:	in     al,dx
  404421:	dec    DWORD PTR [ebp-0x457fb927]
  404427:	mov    bl,0xba
  404429:	jmp    0x9d33:0xeb578496
  404430:	rol    DWORD PTR [eax],0x94
  404433:	push   ds
  404434:	std    
  404435:	mov    ds:0x52f190fc,eax
  40443a:	(bad)  
  40443b:	mov    cl,0xf3
  40443d:	scas   al,BYTE PTR es:[edi]
  40443e:	fistp  WORD PTR [ecx-0x33c94a6c]
  404444:	(bad)  
  404445:	lock iret 
  404447:	pop    ds
  404448:	sbb    BYTE PTR [edi+0x6adba73f],0x56
  40444f:	daa    
  404450:	(bad)  
  404451:	int    0x57
  404453:	cmp    DWORD PTR [ebp+0x7b],esp
  404456:	mov    bh,0x5f
  404458:	ins    DWORD PTR es:[edi],dx
  404459:	xchg   ebx,eax
  40445a:	outs   dx,BYTE PTR ds:[esi]
  40445b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40445c:	mov    esi,0x6ec74951
  404461:	iret   
  404462:	xlat   BYTE PTR ds:[ebx]
  404463:	add    DWORD PTR [eax],edi
  404465:	daa    
  404466:	ret    0x1e80
  404469:	call   DWORD PTR [eax+0x710e36fc]
  40446f:	adc    DWORD PTR [edx],ebp
  404471:	scas   eax,DWORD PTR es:[edi]
  404472:	enter  0x7d15,0xb3
  404476:	mov    ds:0x1f61c7a9,eax
  40447b:	sub    al,0x37
  40447d:	mov    ecx,0xdd865764
  404482:	ret    0xb933
  404485:	inc    ebx
  404486:	sub    eax,0xcb758419
  40448b:	cli    
  40448c:	sub    al,BYTE PTR [eax]
  40448e:	es loop 0x4044b0
  404491:	es (bad) 
  404493:	mov    bh,0x42
  404495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404496:	xchg   esi,eax
  404497:	ja     0x4044f0
  404499:	adc    dl,BYTE PTR [esi+0x60]
  40449c:	(bad)  
  40449d:	ins    DWORD PTR es:[edi],dx
  40449e:	int    0xda
  4044a0:	inc    edi
  4044a1:	lahf   
  4044a2:	mov    ds:0xd196d0ad,al
  4044a7:	dec    ebp
  4044a8:	push   esi
  4044a9:	(bad)  
  4044aa:	lods   al,BYTE PTR ds:[esi]
  4044ab:	retf   
  4044ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ad:	mov    ebp,0x8127ca35
  4044b2:	data16 jns 0x404463
  4044b5:	(bad)  [ecx+eax*8]
  4044b8:	sub    esi,DWORD PTR [edi+0x32]
  4044bb:	mov    ebp,0x3e3bfce3
  4044c0:	cwde   
  4044c1:	jmp    0xf314649b
  4044c6:	xor    BYTE PTR [ebp-0x7e],0x93
  4044ca:	sub    al,BYTE PTR [esi-0x5c]
  4044cd:	ins    BYTE PTR es:[edi],dx
  4044ce:	gs pushf 
  4044d0:	arpl   di,si
  4044d2:	mov    esi,DWORD PTR [eax-0x6]
  4044d5:	jmp    0xa3c3cf3b
  4044da:	inc    ecx
  4044db:	out    0x69,al
  4044dd:	add    BYTE PTR [edx],bh
  4044df:	sbb    al,0xdd
  4044e1:	nop
  4044e2:	mov    ecx,0x1969802f
  4044e7:	out    dx,al
  4044e8:	ret    
  4044e9:	sbb    DWORD PTR [edx-0x4b],esp
  4044ec:	test   al,0xe8
  4044ee:	leave  
  4044ef:	jmp    0x4c29598a
  4044f4:	adc    al,0x88
  4044f6:	daa    
  4044f7:	sbb    al,BYTE PTR [edi-0x1c]
  4044fa:	shr    ecx,1
  4044fc:	(bad)  
  4044fd:	ins    BYTE PTR es:[edi],dx
  4044fe:	imul   ebp,DWORD PTR [esi-0x59],0xe18abf9b
  404505:	xchg   edx,eax
  404506:	ja     0x40450b
  404508:	sbb    BYTE PTR [esi],al
  40450a:	xchg   edi,eax
  40450b:	pop    eax
  40450c:	dec    esp
  40450d:	jno    0x404531
  40450f:	mov    bh,0x47
  404511:	loop   0x40449c
  404513:	cmp    BYTE PTR [edi],0xf1
  404516:	or     al,0x91
  404518:	add    dh,BYTE PTR [edi-0x57]
  40451b:	mov    ch,0x86
  40451d:	ret    
  40451e:	sbb    BYTE PTR [eax+0x72],cl
  404521:	pop    ebx
  404522:	and    esp,DWORD PTR [esi-0x38]
  404525:	push   ebp
  404526:	pop    es
  404527:	pop    esp
  404528:	ja     0x4044d2
  40452a:	mov    DWORD PTR [esi-0x404e6ab2],ecx
  404530:	dec    edi
  404531:	ds cmc 
  404533:	jbe    0x4044de
  404535:	test   DWORD PTR [bp+0x21],edx
  404539:	out    0x15,al
  40453b:	and    ecx,DWORD PTR [eax+0x70]
  40453e:	mov    cl,0x24
  404540:	mov    ebx,DWORD PTR [ebp+eiz*8+0x43519500]
  404547:	xchg   esi,eax
  404548:	jbe    0x4045ac
  40454a:	and    eax,0x1e20f5cc
  40454f:	mov    ebp,0xfdcad209
  404554:	ss xor eax,0x341a23de
  40455a:	jg     0x404559
  40455c:	sub    al,0x1f
  40455e:	mov    WORD PTR [edi-0x202cd048],ss
  404564:	push   ecx
  404565:	pop    esi
  404566:	mov    edx,0x15d38398
  40456b:	repnz ins BYTE PTR es:[edi],dx
  40456d:	jb     0x40455e
  40456f:	mov    DWORD PTR [ebx+0x52a49c17],ebx
  404575:	pop    eax
  404576:	xor    ch,BYTE PTR [ebp-0x7f]
  404579:	jmp    0x7dd70476
  40457e:	std    
  40457f:	jp     0x4045d9
  404581:	sub    esi,DWORD PTR [esi+0xb]
  404584:	mov    ebp,0x6765f93a
  404589:	in     al,dx
  40458a:	xchg   ebx,eax
  40458b:	jb     0x4045c1
  40458d:	aad    0x4
  40458f:	cmp    ah,ah
  404591:	adc    dh,BYTE PTR [ecx]
  404593:	xor    al,0xc5
  404595:	or     esi,DWORD PTR [edx+0x1b]
  404598:	xor    ah,cl
  40459a:	inc    esi
  40459b:	ror    ecx,cl
  40459d:	aad    0xd1
  40459f:	cli    
  4045a0:	dec    ecx
  4045a1:	cmp    BYTE PTR [eax+0x69d60553],0xeb
  4045a8:	mov    WORD PTR [edx-0x210ee7b6],gs
  4045ae:	ffree  st(4)
  4045b0:	inc    esi
  4045b1:	sub    bh,BYTE PTR [edi]
  4045b3:	mov    esi,DWORD PTR [ebx-0x24c20863]
  4045b9:	jecxz  0x404567
  4045bb:	addr16 ret 0x6f61
  4045bf:	pop    edx
  4045c0:	cmp    eax,0xf5f52220
  4045c5:	ss addr16 inc edx
  4045c8:	lahf   
  4045c9:	test   eax,0xbe05423a
  4045ce:	push   edi
  4045cf:	mov    esi,0xf04ae903
  4045d4:	lds    ebp,FWORD PTR [esi]
  4045d6:	iret   
  4045d7:	fcom   DWORD PTR [eax+0x19def43b]
  4045dd:	push   0xffffff85
  4045df:	inc    ebp
  4045e0:	sub    al,0x3b
  4045e2:	ins    BYTE PTR es:[edi],dx
  4045e3:	clc    
  4045e4:	retf   0x3e55
  4045e7:	push   0xce2a0c9f
  4045ec:	xchg   ebp,eax
  4045ed:	add    ebp,DWORD PTR [edi-0x2c]
  4045f0:	mov    bh,0x7c
  4045f2:	call   0x1d6b1734
  4045f7:	fld    QWORD PTR [edi+eax*2]
  4045fa:	add    al,ch
  4045fc:	test   DWORD PTR [edx+eax*2],ebx
  4045ff:	push   es
  404600:	inc    eax
  404601:	jne    0x404617
  404603:	and    eax,0x8f421f31
  404608:	mov    edi,0x9d5b03aa
  40460d:	mov    edi,DWORD PTR ds:0x971c4225
  404613:	sub    eax,0x90c26d1c
  404618:	fstp   st(5)
  40461a:	xchg   esi,eax
  40461b:	lods   eax,DWORD PTR ds:[esi]
  40461c:	lods   al,BYTE PTR ds:[esi]
  40461d:	push   esi
  40461e:	mov    fs:0x72404767,eax
  404624:	(bad)
  404628:	mov    al,0x1c
  40462a:	jne    0x404690
  40462c:	xchg   ebp,eax
  40462d:	lea    ebp,[ecx]
  40462f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404630:	pop    eax
  404631:	popa   
  404632:	adc    BYTE PTR [eax-0x7ffc6807],0x6f
  404639:	xor    ch,al
  40463b:	jle    0x4045f5
  40463d:	sar    ebp,cl
  40463f:	dec    ecx
  404640:	hlt    
  404641:	add    eax,0xee803c41
  404646:	mov    esp,0x49d87eb6
  40464b:	stc    
  40464c:	inc    ebx
  40464d:	adc    al,0xc7
  40464f:	xor    al,BYTE PTR [esi-0x3]
  404652:	ror    BYTE PTR [edx+eiz*1+0x65bf218b],cl
  404659:	fcomp  DWORD PTR [esi+0x6f]
  40465c:	(bad)  
  40465d:	fdiv   st,st(4)
  40465f:	jp     0x4046c3
  404661:	dec    esi
  404662:	xchg   ecx,eax
  404663:	or     al,0xb3
  404665:	(bad)  
  404666:	out    dx,al
  404667:	jmp    0xd8a4d452
  40466c:	push   edx
  40466d:	loop   0x4046c4
  40466f:	xchg   BYTE PTR [eax],bh
  404671:	mov    eax,ds:0xaf9e9aae
  404676:	mov    ecx,esi
  404678:	cmp    dl,BYTE PTR [edx]
  40467a:	scas   al,BYTE PTR es:[edi]
  40467b:	push   es
  40467c:	aam    0xc8
  40467e:	enter  0xd74c,0xfa
  404682:	mov    ah,0x87
  404684:	idiv   BYTE PTR [edx-0x214d8d81]
  40468a:	in     eax,dx
  40468b:	cmp    BYTE PTR [edi],bl
  40468d:	repz imul eax,ecx,0xbd443921
  404694:	adc    ebx,DWORD PTR [esi-0x11989fb5]
  40469a:	mov    BYTE PTR [ebp+0x49],bl
  40469d:	adc    BYTE PTR [esi+0x462255cb],dl
  4046a3:	ss icebp 
  4046a5:	ja     0x404660
  4046a7:	pop    ebp
  4046a8:	das    
  4046a9:	out    dx,eax
  4046aa:	and    al,0x22
  4046ac:	adc    eax,esi
  4046ae:	add    DWORD PTR [esi-0x2b],esp
  4046b1:	rcr    BYTE PTR [ebp-0x49],1
  4046b4:	pop    ss
  4046b5:	mov    eax,ds:0xe855505b
  4046ba:	mov    ah,0x4b
  4046bc:	pop    ds
  4046bd:	xchg   ebx,eax
  4046be:	sbb    DWORD PTR [eax],eax
  4046c0:	retf   0x3eb9
  4046c3:	dec    esi
  4046c4:	push   esp
  4046c5:	sbb    DWORD PTR [eax+0x3035b68],0x75144bb5
  4046cf:	aas    
  4046d0:	in     al,0x69
  4046d2:	add    esp,esp
  4046d4:	mov    eax,0xc3bf054d
  4046d9:	lds    eax,FWORD PTR [edx+0x37b76bf7]
  4046df:	lock or eax,0x7c2d3035
  4046e5:	fstp   QWORD PTR [esi+0x7136c0d]
  4046eb:	jle    0x4046b7
  4046ed:	jne    0x404747
  4046ef:	ds or  eax,0xed82dc42
  4046f5:	add    BYTE PTR [ebx+0x8556e79],al
  4046fb:	sub    edx,DWORD PTR [ebp+0x72]
  4046fe:	aam    0xd1
  404700:	or     DWORD PTR [esp+ecx*2-0x2],ebp
  404704:	pop    edx
  404705:	jbe    0x4046b2
  404707:	adc    DWORD PTR [edx],eax
  404709:	lea    ebx,[eax]
  40470b:	out    dx,al
  40470c:	scas   al,BYTE PTR es:[edi]
  40470d:	jg     0x40474c
  40470f:	(bad)  
  404710:	and    DWORD PTR [ecx+0x26],eax
  404713:	jp     0x404698
  404715:	je     0x40473e
  404717:	push   es
  404718:	loope  0x4046f1
  40471a:	push   0xffffffaa
  40471c:	cmc    
  40471d:	inc    ebx
  40471e:	push   ebx
  40471f:	scas   al,BYTE PTR es:[edi]
  404720:	ror    BYTE PTR [eax+edx*2+0x75],1
  404724:	aad    0xa5
  404726:	imul   edi,DWORD PTR [esi+0x2daf9b53],0x3d
  40472d:	sub    al,0xf7
  40472f:	and    DWORD PTR [edx+0xc],0x23
  404733:	outs   dx,BYTE PTR ds:[esi]
  404734:	push   0xc3558a49
  404739:	inc    esp
  40473a:	sub    BYTE PTR [esi-0x5572a2fb],0xc6
  404741:	sar    esi,1
  404743:	pop    esi
  404744:	jo     0x404719
  404746:	and    BYTE PTR [edx+ebp*4+0x502dba0],ah
  40474d:	jl     0x404724
  40474f:	jbe    0x4047a9
  404751:	enter  0x51a4,0x81
  404755:	icebp  
  404756:	jle    0x40471a
  404758:	fisubr WORD PTR ds:0x306e0a3f
  40475e:	xor    DWORD PTR [eax+0x1be8ef48],edi
  404764:	mov    cl,0xb1
  404766:	jmp    0x1fb0272d
  40476b:	test   dl,dh
  40476d:	aas    
  40476e:	fwait
  40476f:	outs   dx,BYTE PTR ds:[esi]
  404770:	pop    ebp
  404771:	push   ebp
  404772:	jbe    0x4047ca
  404774:	ds dec ebx
  404776:	xor    al,0xce
  404778:	push   ds
  404779:	add    cl,bh
  40477b:	daa    
  40477c:	loope  0x40470a
  40477e:	inc    eax
  40477f:	mov    al,BYTE PTR [eax+0x2e]
  404782:	push   esi
  404783:	mov    ah,BYTE PTR [edi]
  404785:	call   0xc1cc875f
  40478a:	cmp    BYTE PTR [ebx-0x24bf0bd2],ah
  404790:	inc    esp
  404791:	jge    0x4047b6
  404793:	cmp    DWORD PTR [eax],0xa3b5846c
  404799:	mov    ch,0xf6
  40479b:	enter  0xb860,0x92
  40479f:	dec    eax
  4047a0:	mov    ds:0x69c069e,eax
  4047a5:	jmp    0xb75dbce6
  4047aa:	mov    ch,0x14
  4047ac:	pop    edx
  4047ad:	sar    DWORD PTR [edx-0x5702ffde],1
  4047b3:	add    ebp,edx
  4047b5:	arpl   WORD PTR [ebx-0x462d34b1],di
  4047bb:	out    dx,eax
  4047bc:	add    eax,0x5fd14dd
  4047c1:	mov    WORD PTR [edi+0x57e5cd48],ss
  4047c7:	push   edi
  4047c8:	or     ebx,esi
  4047ca:	sub    esp,DWORD PTR [ebx-0x7789136b]
  4047d0:	mov    ds:0xade2010b,al
  4047d5:	and    DWORD PTR [eax-0x43e4f219],ecx
  4047db:	jnp    0x404810
  4047dd:	add    ebx,DWORD PTR [ecx-0x642c5aa9]
  4047e3:	or     esi,edx
  4047e5:	pop    ecx
  4047e6:	jae    0x40480e
  4047e8:	in     al,dx
  4047e9:	jno    0x4047f2
  4047eb:	(bad)  
  4047ec:	mov    ch,0xdf
  4047ee:	pusha  
  4047ef:	and    eax,0x2ad68b52
  4047f4:	jno    0x4047fc
  4047f6:	lds    ecx,FWORD PTR [eax+0x14b344cb]
  4047fc:	int3   
  4047fd:	jno    0x4047c7
  4047ff:	sbb    eax,0xf57be75d
  404804:	mov    dh,0xa4
  404806:	lea    esi,[ebp+0x6b]
  404809:	cmp    esp,edi
  40480b:	rcr    ah,0x4f
  40480e:	inc    eax
  40480f:	mov    bh,0x60
  404811:	lods   eax,DWORD PTR ds:[esi]
  404812:	push   ds
  404813:	rcr    BYTE PTR [edi-0x22e1bf19],0x9b
  40481a:	imul   edx,DWORD PTR [esp+ebp*2],0xde2a8307
  404821:	add    edx,eax
  404823:	aaa    
  404824:	ret    
  404825:	push   esi
  404826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404827:	jns    0x4047ea
  404829:	pop    esi
  40482a:	ret    
  40482b:	sub    al,0x49
  40482d:	fisttp QWORD PTR ds:0x37aa149e
  404833:	ins    DWORD PTR es:[edi],dx
  404834:	push   ecx
  404835:	cmp    eax,0x727ccf20
  40483a:	ins    BYTE PTR es:[edi],dx
  40483b:	pop    es
  40483c:	lods   al,BYTE PTR ds:[esi]
  40483d:	inc    edi
  40483e:	jle    0x404806
  404840:	mov    esi,0xe8e2c615
  404845:	lods   al,BYTE PTR ds:[esi]
  404846:	sub    al,0xaf
  404848:	xchg   edx,eax
  404849:	xchg   edi,eax
  40484a:	or     eax,0xc3d6639a
  40484f:	jb     0x404870
  404851:	or     cl,BYTE PTR [edx+ecx*2+0x79]
  404855:	xchg   ecx,eax
  404856:	add    eax,0x5f778f4e
  40485b:	jge    0x40484a
  40485d:	mov    ah,0x88
  40485f:	imul   edi,DWORD PTR [esi],0xc429d633
  404865:	push   edx
  404866:	mov    esp,0x9b439214
  40486b:	adc    al,0xd1
  40486d:	mov    ebx,0x71bdd930
  404872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404873:	retf   0x5b1b
  404876:	mov    ebp,0x2153f77f
  40487b:	call   0x1840:0x5368e0b4
  404882:	cld    
  404883:	add    ch,BYTE PTR [ebx+0x49f172d4]
  404889:	dec    ebp
  40488a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40488b:	xchg   esp,eax
  40488c:	mov    ebp,0xd81526c1
  404891:	inc    edi
  404892:	mov    eax,eax
  404894:	dec    edx
  404895:	fmulp  st(1),st
  404897:	nop
  404898:	lods   al,BYTE PTR ds:[esi]
  404899:	and    eax,0x4a046e5d
  40489e:	in     al,0x3b
  4048a0:	(bad)  
  4048a1:	add    DWORD PTR [esp+edi*8-0x71],ebp
  4048a5:	mov    BYTE PTR [edx+0x3c],dh
  4048a8:	mov    ebx,0xae17a7f8
  4048ad:	add    edi,DWORD PTR [esi+0x4c]
  4048b0:	cmp    eax,0x87db91ae
  4048b5:	iret   
  4048b6:	mov    eax,ds:0x6d37e1b9
  4048bb:	mov    ?,WORD PTR [edx-0x21160eb9]
  4048c1:	mov    bl,0x4c
  4048c3:	push   0xfd3fcb5b
  4048c8:	push   ebx
  4048c9:	fsub   QWORD PTR [ebx+0x4a9a6d3]
  4048cf:	sub    dh,BYTE PTR [ecx]
  4048d1:	scas   eax,DWORD PTR es:[edi]
  4048d2:	adc    cl,BYTE PTR [edx+0xa4df67a]
  4048d8:	push   ecx
  4048d9:	mov    dh,BYTE PTR [edi+esi*4+0x58c33a95]
  4048e0:	lahf   
  4048e1:	add    ebp,esp
  4048e3:	sub    dh,bh
  4048e5:	mov    eax,0x3648bab6
  4048ea:	pusha  
  4048eb:	mov    eax,ds:0x6aab034e
  4048f0:	and    al,0x1b
  4048f2:	add    dh,BYTE PTR ds:0x57a243b7
  4048f8:	add    ecx,DWORD PTR [ebx-0x5be2f898]
  4048fe:	std    
  4048ff:	pop    ebp
  404900:	jmp    FWORD PTR [edx+0x57b07b61]
  404906:	or     ch,al
  404908:	gs pop edi
  40490a:	fldln2 
  40490c:	retf   0x8b36
  40490f:	mov    ecx,0x2ff92646
  404914:	clc    
  404915:	push   eax
  404916:	je     0x404964
  404918:	pop    ecx
  404919:	cmp    DWORD PTR [ecx+edi*1+0x5b],ebp
  40491d:	aad    0xaa
  40491f:	adc    esi,DWORD PTR [ecx+0x7854c62d]
  404925:	mov    bl,0x9d
  404927:	(bad)  
  404928:	xchg   ebp,eax
  404929:	push   ds
  40492a:	adc    eax,0x2cc56d4c
  40492f:	xchg   ecx,eax
  404930:	iret   
  404931:	inc    edi
  404932:	push   0xffffff9f
  404934:	bound  ecx,QWORD PTR [ecx]
  404936:	mov    cs,WORD PTR [edi+0x78dddc45]
  40493c:	rcr    DWORD PTR [ebx+0x4d],0xb
  404940:	adc    BYTE PTR [esi],0xc4
  404943:	push   0xffffffbd
  404945:	add    ch,bl
  404947:	add    eax,0x7337391a
  40494c:	mov    ebp,0xdcc8e6c2
  404951:	sub    DWORD PTR [esp+eiz*8+0x2f],0x8d849454
  404959:	dec    eax
  40495a:	mov    edi,0xbdcc1638
  40495f:	mov    eax,0x695b9b28
  404964:	adc    dh,BYTE PTR [eax]
  404966:	popf   
  404967:	xor    eax,0x48a66f0c
  40496c:	mov    cl,0x3
  40496e:	lods   al,BYTE PTR ds:[esi]
  40496f:	imul   ecx,DWORD PTR [ecx],0xc879304a
  404975:	imul   DWORD PTR [edx]
  404977:	fcmovnb st,st(2)
  404979:	xor    eax,0x8061b839
  40497e:	hlt    
  40497f:	dec    ebx
  404980:	fdivr  DWORD PTR [edi-0x7620c710]
  404986:	pop    edi
  404987:	cld    
  404988:	pop    ebp
  404989:	out    dx,al
  40498a:	mov    dh,0xfc
  40498c:	pop    ebx
  40498d:	adc    eax,0x4b796d9b
  404992:	mov    ds:0x637a43ff,eax
  404997:	pop    ss
  404998:	sub    edi,DWORD PTR [ebp+eax*1+0x7a]
  40499c:	pop    ss
  40499d:	popa   
  40499e:	push   0xffffffa0
  4049a0:	icebp  
  4049a1:	jge    0x93ccf87d
  4049a7:	xchg   edi,eax
  4049a8:	ins    BYTE PTR es:[edi],dx
  4049a9:	shr    DWORD PTR [ebx+edx*8-0x5dfe6e86],0xf
  4049b1:	(bad)  
  4049b2:	in     eax,dx
  4049b3:	or     ah,BYTE PTR [ecx+edi*2+0x12]
  4049b7:	xor    dh,dh
  4049b9:	out    0xe4,eax
  4049bb:	mov    cl,0xe0
  4049bd:	sub    bl,BYTE PTR [edi]
  4049bf:	ja     0x404989
  4049c1:	and    esi,edx
  4049c3:	imul   ebx,DWORD PTR [ebx+0x1ce44753],0xffffffa7
  4049ca:	dec    edi
  4049cb:	add    al,0x9a
  4049cd:	loopne 0x4049ac
  4049cf:	loope  0x4049b7
  4049d1:	sub    al,ah
  4049d3:	fucomi st,st(3)
  4049d5:	punpcklwd mm0,DWORD PTR [edx+0x703be265]
  4049dc:	pop    es
  4049dd:	or     edx,ebp
  4049df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049e0:	or     eax,0xa837b90f
  4049e5:	test   cl,bh
  4049e7:	pop    edx
  4049e8:	inc    ebx
  4049e9:	inc    DWORD PTR ds:0xa70b6a6d
  4049ef:	idiv   BYTE PTR [edi+edi*4+0x77db714f]
  4049f6:	in     al,dx
  4049f7:	jmp    0x404a59
  4049f9:	out    0x2d,al
  4049fb:	mov    edi,0xdf04851a
  404a00:	ins    BYTE PTR es:[edi],dx
  404a01:	stos   DWORD PTR es:[edi],eax
  404a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a03:	hlt    
  404a04:	pop    esp
  404a05:	mov    DWORD PTR ds:[ebp+0x28],ecx
  404a09:	xor    eax,0x9874c531
  404a0e:	sub    bl,BYTE PTR [ebp+0x2819bbc3]
  404a14:	mov    ds:0xa4b7e0ca,eax
  404a19:	addr16 lock jo 0x404a0f
  404a1d:	addr16 test al,0x1b
  404a20:	out    dx,al
  404a21:	div    BYTE PTR [edx]
  404a23:	sbb    BYTE PTR [esi],ch
  404a25:	test   DWORD PTR [ebp+0x1eff9d6],eax
  404a2b:	mov    cl,0x4
  404a2d:	addr16 out 0x74,al
  404a30:	xor    DWORD PTR gs:[eax],esp
  404a33:	aaa    
  404a34:	jns    0x404a90
  404a36:	xlat   BYTE PTR ds:[ebx]
  404a37:	dec    ebx
  404a38:	xor    BYTE PTR [ebp+0x3bb17e50],bl
  404a3e:	jbe    0x404a54
  404a40:	push   esp
  404a41:	inc    esi
  404a42:	jge    0x404a34
  404a44:	pop    ebx
  404a45:	or     ebp,eax
  404a47:	dec    ebx
  404a48:	or     dl,cl
  404a4a:	mov    eax,ds:0xeeb985e8
  404a4f:	inc    ebp
  404a50:	js     0x4049d2
  404a52:	xor    eax,0x1e598a27
  404a57:	clc    
  404a58:	cld    
  404a59:	out    0xfc,al
  404a5b:	xchg   edi,eax
  404a5c:	pop    ebx
  404a5d:	aaa    
  404a5e:	aaa    
  404a5f:	add    edx,DWORD PTR [ebp-0x3cedf4ed]
  404a65:	dec    eax
  404a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a67:	aam    0x13
  404a69:	ffreep st(0)
  404a6b:	loopne 0x4049f9
  404a6d:	jp     0x404a3a
  404a6f:	cs pop ebp
  404a71:	jg     0x404aea
  404a73:	es (bad) 
  404a77:	mov    ds:0x1bd7c66b,eax
  404a7c:	push   edx
  404a7d:	pop    edi
  404a7e:	(bad)  
  404a7f:	outs   dx,BYTE PTR ds:[esi]
  404a80:	add    ebx,DWORD PTR [ebx]
  404a82:	(bad)  
  404a83:	fucomp st(1)
  404a85:	sbb    BYTE PTR [esi+0x7e],al
  404a88:	jge    0x404a48
  404a8a:	fst    DWORD PTR [eax+0x6f]
  404a8d:	mov    edi,0x9c3e397b
  404a92:	ds mov ah,0xc3
  404a95:	jb     0x404ad4
  404a97:	pushf  
  404a98:	mov    dx,0xf0ab
  404a9c:	and    BYTE PTR [ebp-0x3cd0174e],bl
  404aa2:	iret   
  404aa3:	in     al,0x71
  404aa5:	loop   0x404b1f
  404aa7:	mov    edi,0x5d87781b
  404aac:	out    0x20,al
  404aae:	scas   al,BYTE PTR es:[edi]
  404aaf:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  404ab1:	outs   dx,BYTE PTR ds:[esi]
  404ab2:	dec    esp
  404ab3:	mov    esi,0x1112a5e0
  404ab8:	pusha  
  404ab9:	shl    dl,cl
  404abb:	repz xor al,0xd2
  404abe:	sar    DWORD PTR [eax],1
  404ac0:	pop    esi
  404ac1:	test   BYTE PTR [ecx-0x70],bl
  404ac4:	in     al,dx
  404ac5:	mov    cl,0xbc
  404ac7:	loop   0x404b34
  404ac9:	imul   DWORD PTR [ebx]
  404acb:	adc    eax,0xa090449b
  404ad0:	mov    ecx,0xf6cee775
  404ad5:	jecxz  0x404b2d
  404ad7:	push   edx
  404ad8:	or     al,0x2b
  404ada:	jo     0x404a6d
  404adc:	or     edx,DWORD PTR [esi]
  404ade:	add    al,BYTE PTR [eax]
  404ae0:	push   0xfffffffb
  404ae2:	or     bh,BYTE PTR [edx-0x6c7bc032]
  404ae8:	push   edi
  404ae9:	dec    DWORD PTR [ebp-0x3]
  404aec:	shl    BYTE PTR [ebp-0x19],cl
  404aef:	fisub  DWORD PTR [edx+ecx*2+0x31]
  404af3:	pop    ss
  404af4:	dec    esp
  404af5:	sbb    BYTE PTR [eax-0x5c7c0050],bh
  404afb:	push   ebx
  404afc:	int3   
  404afd:	mov    dh,0x4d
  404aff:	mov    eax,cs:0x31794a46
  404b05:	xor    bl,bh
  404b07:	daa    
  404b08:	aas    
  404b09:	imul   BYTE PTR [esi-0x1]
  404b0c:	(bad)  
  404b0d:	test   eax,0xe708781b
  404b12:	xor    DWORD PTR [esi-0x1f6e2490],esp
  404b18:	mov    ebp,0xe0246551
  404b1d:	(bad)  
  404b1e:	pop    ebp
  404b1f:	cmp    bl,BYTE PTR [edi+ebx*1-0x15]
  404b23:	xor    esi,edx
  404b25:	jbe    0x404b31
  404b27:	push   esp
  404b28:	dec    esp
  404b29:	mov    ch,BYTE PTR [edx-0x303009fd]
  404b2f:	mov    edi,DWORD PTR [esi]
  404b31:	cli    
  404b32:	and    al,0x6
  404b34:	pop    edi
  404b35:	dec    ebp
  404b36:	mov    DWORD PTR [esi],edi
  404b38:	mov    bl,0x15
  404b3a:	xor    edi,esp
  404b3c:	push   0xa474db5d
  404b41:	or     DWORD PTR [eax-0x1e],ebx
  404b44:	aaa    
  404b45:	sar    BYTE PTR [ebx-0x562f124e],1
  404b4b:	ret    0x2add
  404b4e:	mov    DWORD PTR [edi+eax*1],ebp
  404b51:	ins    BYTE PTR es:[edi],dx
  404b52:	repnz adc BYTE PTR [eax],0xbe
  404b56:	popf   
  404b57:	mov    al,0x91
  404b59:	test   eax,edi
  404b5b:	(bad)
  404b5f:	sahf   
  404b60:	fwait
  404b61:	std    
  404b62:	xlat   BYTE PTR ds:[ebx]
  404b63:	enter  0x7d1b,0x41
  404b67:	mov    al,0xa6
  404b69:	mov    ds:0xf799d06b,al
  404b6e:	add    ecx,DWORD PTR [esi]
  404b70:	xor    DWORD PTR [ecx],ecx
  404b72:	mov    ds:0x2d130f79,al
  404b77:	dec    esi
  404b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b79:	mov    ch,0x98
  404b7b:	rcr    ebx,1
  404b7d:	je     0x404b78
  404b7f:	loope  0x404b5f
  404b81:	rol    DWORD PTR [edi-0x54],1
  404b84:	test   eax,0xf632c2b5
  404b89:	inc    ecx
  404b8a:	cs aas 
  404b8c:	stos   DWORD PTR es:[edi],eax
  404b8d:	dec    eax
  404b8e:	je     0x404b7f
  404b90:	xchg   BYTE PTR [edx],ch
  404b92:	fdivr  st,st(2)
  404b94:	clc    
  404b95:	inc    edi
  404b96:	push   ds
  404b97:	fist   DWORD PTR [esi+0x60eb786e]
  404b9d:	xchg   esp,eax
  404b9e:	mov    BYTE PTR [ecx],ah
  404ba0:	mov    edx,0x3cd7ad3b
  404ba5:	and    esp,DWORD PTR [ecx+0x67]
  404ba8:	int    0x30
  404baa:	fs dec ebp
  404bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bae:	mov    ds:0x9b7af0c1,al
  404bb3:	mov    al,0x2b
  404bb5:	xchg   edx,eax
  404bb6:	mov    ds:0x35749b88,eax
  404bbb:	add    eax,ebp
  404bbd:	sahf   
  404bbe:	pop    ebx
  404bbf:	or     edx,DWORD PTR [ebx+0x38]
  404bc2:	inc    esp
  404bc3:	adc    ebx,ebp
  404bc5:	cmp    dh,BYTE PTR [ecx-0x4ba7c01b]
  404bcb:	leave  
  404bcc:	in     eax,0x7a
  404bce:	add    BYTE PTR [edx+0x1517c704],bl
  404bd4:	push   ss
  404bd5:	cmp    ah,BYTE PTR [ecx-0x58]
  404bd8:	adc    eax,0x7afc6fff
  404bdd:	shl    DWORD PTR [ebx],cl
  404bdf:	push   ss
  404be0:	ret    
  404be1:	inc    ebx
  404be2:	sbb    BYTE PTR ds:0xa2749c96,ah
  404be8:	or     DWORD PTR [ebx+0x4f9e982d],0xcf3cbee9
  404bf2:	sub    dh,ch
  404bf4:	inc    ecx
  404bf5:	jge    0x404bd6
  404bf7:	jmp    0x74f1c409
  404bfc:	aaa    
  404bfd:	imul   ebp,DWORD PTR cs:[edx+0x48ceeaf8],0xa55a9cad
  404c08:	into   
  404c09:	jecxz  0x404c01
  404c0b:	shl    BYTE PTR [eax-0x3c6307d9],0x87
  404c12:	outs   dx,BYTE PTR ds:[esi]
  404c13:	inc    esi
  404c14:	scas   eax,DWORD PTR es:[edi]
  404c15:	jmp    0xe414d01b
  404c1a:	test   cl,al
  404c1c:	push   es
  404c1d:	div    DWORD PTR [edi+esi*4]
  404c20:	int    0x9f
  404c22:	push   ebp
  404c23:	and    esi,ecx
  404c25:	mov    dh,0xca
  404c27:	test   bh,dh
  404c29:	dec    ebp
  404c2a:	push   cs
  404c2b:	icebp  
  404c2c:	push   gs
  404c2e:	mov    edi,0xf55ea05c
  404c33:	inc    ecx
  404c34:	mov    eax,0x6750a009
  404c39:	dec    ebp
  404c3a:	sub    DWORD PTR [ebp-0x25],ebp
  404c3d:	add    al,0xf4
  404c3f:	fstp   TBYTE PTR [edi+0x353db223]
  404c45:	mov    dl,0x2c
  404c47:	mov    dh,0x98
  404c49:	push   esi
  404c4a:	pop    edx
  404c4b:	pop    ebx
  404c4c:	data16 add BYTE PTR [eax],bh
  404c4f:	sub    al,0x1f
  404c51:	cmp    eax,0x21bdfaf2
  404c56:	in     eax,0x16
  404c58:	aad    0x26
  404c5a:	aam    0x4a
  404c5c:	sar    DWORD PTR [ecx*1+0x6beceda3],cl
  404c63:	outs   dx,DWORD PTR ds:[esi]
  404c64:	gs js  0x404ca1
  404c67:	sub    BYTE PTR [eax+0x9a64ce8],bh
  404c6d:	lds    ecx,FWORD PTR [edx]
  404c6f:	adc    ah,BYTE PTR [esi+0x4e]
  404c72:	xchg   DWORD PTR [ebx],eax
  404c74:	mov    dl,0xd2
  404c76:	adc    dl,BYTE PTR [edi+0x24]
  404c79:	pop    ds
  404c7a:	inc    ebp
  404c7b:	push   ebp
  404c7c:	mov    esp,0x43c3afc6
  404c81:	scas   al,BYTE PTR es:[edi]
  404c82:	cmc    
  404c83:	pop    es
  404c84:	pop    eax
  404c85:	xchg   edi,eax
  404c86:	ss in  eax,0x94
  404c89:	outs   dx,DWORD PTR ds:[esi]
  404c8a:	mov    ds:0xa02c2839,eax
  404c8f:	xchg   edi,eax
  404c90:	fidivr DWORD PTR [ecx]
  404c92:	rcr    BYTE PTR [ecx+0x50],cl
  404c95:	mov    ss:0x3bbc2a63,eax
  404c9b:	dec    edi
  404c9c:	adc    esp,DWORD PTR [edx-0x79]
  404c9f:	add    BYTE PTR [eax],0x71
  404ca2:	push   ss
  404ca3:	pop    ecx
  404ca4:	fsubr  st,st(0)
  404ca6:	cmc    
  404ca7:	ror    DWORD PTR [ebp-0x45c21703],0xdb
  404cae:	popf   
  404caf:	cmp    al,0x7c
  404cb1:	mov    al,0x64
  404cb3:	push   0x5e7005e3
  404cb8:	sbb    DWORD PTR [esp+edi*4+0x3266ca12],ebp
  404cbf:	outs   dx,BYTE PTR ds:[esi]
  404cc0:	leave  
  404cc1:	fsubr  st,st(6)
  404cc3:	push   cs
  404cc4:	rcr    DWORD PTR [edi-0x52435cbf],cl
  404cca:	inc    edx
  404ccb:	push   ecx
  404ccc:	adc    BYTE PTR [ebx-0x38],cl
  404ccf:	jne    0x404d0e
  404cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd2:	fs std 
  404cd4:	ficomp WORD PTR [esi-0x60]
  404cd7:	inc    ecx
  404cd8:	pop    eax
  404cd9:	cwde   
  404cda:	mov    ebp,0x56744994
  404cdf:	add    dh,cl
  404ce1:	cmp    BYTE PTR [ebp+ecx*2+0x51],bl
  404ce5:	pop    edi
  404ce6:	or     DWORD PTR [eax],0xffffffc6
  404ce9:	cmp    al,0x6b
  404ceb:	dec    ebp
  404cec:	sbb    esi,esi
  404cee:	imul   esi,edx,0x11360a9a
  404cf4:	jnp    0x404d3b
  404cf6:	xor    al,0x51
  404cf8:	adc    al,0x16
  404cfa:	jns    0x404ce1
  404cfc:	retw   
  404cfe:	or     al,0xca
  404d00:	cwde   
  404d01:	xchg   BYTE PTR [esi-0x41],ch
  404d04:	das    
  404d05:	test   al,0x5
  404d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d08:	cwde   
  404d09:	cli    
  404d0a:	push   ds
  404d0b:	fdivr  st(6),st
  404d0d:	arpl   WORD PTR [ecx],dx
  404d0f:	jg     0x404c9a
  404d11:	mov    ah,0x20
  404d13:	cmp    DWORD PTR [ebp-0x57c401a5],esp
  404d19:	adc    al,0x95
  404d1b:	pusha  
  404d1c:	dec    esi
  404d1d:	out    0x35,al
  404d1f:	loopne 0x404d89
  404d21:	or     ah,BYTE PTR [ecx-0x7241bff9]
  404d27:	lds    ecx,FWORD PTR [ecx+0x76443dfc]
  404d2d:	or     ch,0x67
  404d30:	jp     0x404cd8
  404d32:	mov    cl,0xbe
  404d34:	mov    dl,0x35
  404d36:	and    al,0xa7
  404d38:	xor    DWORD PTR [edi+0x40],eax
  404d3b:	sub    eax,ecx
  404d3d:	sub    DWORD PTR [ecx],ebp
  404d3f:	sbb    BYTE PTR [ebx-0x57ba2bf6],bl
  404d45:	pop    ds
  404d46:	rcr    DWORD PTR [ebp*4-0x122863f0],0xcf
  404d4e:	int3   
  404d4f:	or     ah,ah
  404d51:	or     al,ah
  404d53:	dec    edi
  404d54:	clc    
  404d55:	aam    0x9b
  404d57:	es adc al,0xf5
  404d5a:	sbb    BYTE PTR [esi],dh
  404d5c:	jp     0x404d71
  404d5e:	push   0x2a
  404d60:	pop    ecx
  404d61:	cmp    eax,0x343cfd27
  404d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d67:	stos   BYTE PTR es:[edi],al
  404d68:	push   ebx
  404d69:	adc    al,0xc9
  404d6b:	leave  
  404d6c:	push   ebp
  404d6d:	jecxz  0x404d58
  404d6f:	pop    esp
  404d70:	mov    bh,0x80
  404d72:	add    BYTE PTR [eax],bl
  404d74:	jae    0x404d30
  404d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d77:	ins    DWORD PTR es:[edi],dx
  404d78:	xchg   esp,eax
  404d79:	mov    bh,0x98
  404d7b:	js     0x404def
  404d7d:	sar    BYTE PTR [edx+eiz*1],1
  404d80:	cmp    al,0xba
  404d82:	aas    
  404d83:	clc    
  404d84:	mov    bl,0x13
  404d86:	shr    al,cl
  404d88:	pop    ss
  404d89:	jo     0x404d31
  404d8b:	pop    ebp
  404d8c:	add    dh,BYTE PTR [esi]
  404d8e:	pusha  
  404d8f:	leave  
  404d90:	or     eax,0x68de4bef
  404d95:	ret    
  404d96:	sahf   
  404d97:	mov    dl,0xf7
  404d99:	mov    eax,ds:0x21de60b6
  404d9e:	inc    eax
  404d9f:	sub    eax,0xe795845e
  404da4:	in     eax,0x8f
  404da6:	xchg   edx,eax
  404da7:	test   al,0x51
  404da9:	loope  0x404d37
  404dab:	lock loope 0x404e20
  404dae:	xchg   esp,eax
  404daf:	in     eax,dx
  404db0:	jno    0x404dfe
  404db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404db3:	xchg   ecx,eax
  404db4:	sbb    ecx,DWORD PTR [ebp-0x36e35d2e]
  404dba:	or     dh,ch
  404dbc:	push   esi
  404dbd:	popa   
  404dbe:	comiss xmm6,DWORD PTR [ecx-0x58b9c266]
  404dc5:	mov    dl,0x82
  404dc7:	(bad)  
  404dc9:	push   ss
  404dca:	outs   dx,BYTE PTR ds:[esi]
  404dcb:	pop    eax
  404dcc:	(bad)  
  404dce:	xor    DWORD PTR [ebx+0x7e],edx
  404dd1:	je     0x404dfc
  404dd3:	out    0x55,eax
  404dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd6:	mov    bl,dh
  404dd8:	or     DWORD PTR [ebx-0x7d],ebx
  404ddb:	stos   DWORD PTR es:[edi],eax
  404ddc:	sub    eax,0x14485e48
  404de1:	fmul   DWORD PTR [esi-0xf]
  404de4:	hlt    
  404de5:	shl    DWORD PTR [eax+0x5989fc7d],cl
  404deb:	xor    al,0xc6
  404ded:	sbb    DWORD PTR [ebx+0x1713f442],edi
  404df3:	popf   
  404df4:	jne    0x404e53
  404df6:	(bad)  [ebx+0x3d18f9ec]
  404dfc:	sub    al,0x6d
  404dfe:	sbb    dl,BYTE PTR [eax]
  404e00:	sbb    BYTE PTR [esp+esi*4],bh
  404e03:	push   ebx
  404e04:	xor    eax,0x844d00b4
  404e09:	cdq    
  404e0a:	xchg   BYTE PTR [eax+ebp*8+0x19],bh
  404e0e:	popaw  
  404e10:	lock stc 
  404e12:	inc    DWORD PTR [edx]
  404e14:	ret    0xaaa4
  404e17:	push   eax
  404e18:	into   
  404e19:	dec    ebp
  404e1a:	mov    BYTE PTR [eax-0x4b],al
  404e1d:	clc    
  404e1e:	dec    ebx
  404e1f:	retf   0x81d4
  404e22:	mov    eax,0xe98e53b5
  404e27:	rcl    DWORD PTR [esi-0x5ac19f21],0x16
  404e2e:	mov    dh,0x2a
  404e30:	adc    eax,DWORD PTR [eax]
  404e32:	xor    ah,BYTE PTR [esp+edi*4-0x520ca921]
  404e39:	inc    esp
  404e3a:	jg     0x404e25
  404e3c:	call   0xc986:0xe19c685f
  404e43:	popf   
  404e44:	je     0x404def
  404e46:	pushw  0xa680
  404e4a:	fwait
  404e4b:	hlt    
  404e4c:	mov    esp,0x332b2985
  404e51:	pop    edi
  404e52:	inc    eax
  404e53:	gs inc ebx
  404e55:	mov    esp,0x785cb650
  404e5a:	mov    cl,0xa3
  404e5c:	xor    esp,ebx
  404e5e:	pop    ss
  404e5f:	stc    
  404e60:	ja     0x404e58
  404e62:	jmp    0x96ba88db
  404e67:	jne    0x404ede
  404e69:	pop    edx
  404e6a:	sbb    eax,0x31380351
  404e6f:	int3   
  404e70:	ret    0x864a
  404e73:	inc    esp
  404e74:	fucomi st,st(1)
  404e76:	pop    esi
  404e77:	xor    eax,0xfdca77eb
  404e7c:	idiv   BYTE PTR [eax-0x24c707d4]
  404e82:	mov    edx,0xed260fa5
  404e87:	pop    esp
  404e88:	out    0x4f,al
  404e8a:	mov    WORD PTR [eax],ds
  404e8c:	dec    edi
  404e8d:	pusha  
  404e8e:	(bad)  
  404e8f:	fmul   DWORD PTR [eax]
  404e91:	push   eax
  404e92:	int3   
  404e93:	test   DWORD PTR [edi-0x2b864fb9],ebp
  404e99:	sub    bh,BYTE PTR [ebx+0x50]
  404e9c:	pop    esp
  404e9d:	xchg   edx,eax
  404e9e:	ret    0xd825
  404ea1:	out    0x41,al
  404ea3:	lods   eax,DWORD PTR ds:[esi]
  404ea4:	sti    
  404ea5:	adc    eax,0xa24fea0b
  404eaa:	pushf  
  404eab:	sub    cl,0x6c
  404eae:	jb     0x404f06
  404eb0:	pop    esp
  404eb1:	or     BYTE PTR [esi+0x79db28ad],dh
  404eb7:	xor    al,0x53
  404eb9:	pushf  
  404eba:	or     DWORD PTR [esi+0x460279e2],0xc23bc34e
  404ec4:	fadd   st(0),st
  404ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec7:	mov    ebx,gs
  404ec9:	cmp    ebx,ecx
  404ecb:	(bad)  
  404ecc:	arpl   WORD PTR ss:[ebx+eax*1-0xd],cx
  404ed1:	mov    ds:0x33467049,eax
  404ed6:	call   0x5ecd:0x532a182f
  404edd:	jb     0x404ece
  404edf:	(bad)  
  404ee0:	xor    bl,BYTE PTR [edi+ebx*2-0x72472cd6]
  404ee7:	imul   eax,DWORD PTR [eax+edx*8+0x2256460e],0xdcc0fd40
  404ef2:	mov    WORD PTR [edx],cs
  404ef4:	jno    0x404ec1
  404ef6:	xor    edx,DWORD PTR [ebx+0x11]
  404ef9:	pop    esi
  404efa:	sbb    eax,0x9cea33af
  404eff:	imul   ebp,DWORD PTR [edi+0x2e],0xffffff91
  404f03:	push   esi
  404f04:	jl     0x404f20
  404f06:	sub    DWORD PTR [edx-0x53],esp
  404f09:	in     al,dx
  404f0a:	daa    
  404f0b:	adc    DWORD PTR [ebx+ecx*1+0xb],esi
  404f0f:	enter  0xa949,0x4
  404f13:	pop    ebp
  404f14:	xchg   edi,eax
  404f15:	mov    edx,es
  404f17:	ss adc edx,edi
  404f1a:	xchg   BYTE PTR [eax+0x2bdfbd2e],dl
  404f20:	and    bl,0x5a
  404f23:	dec    esp
  404f24:	adc    BYTE PTR gs:[esi-0x57],dl
  404f28:	aas    
  404f29:	sub    bl,BYTE PTR [esi-0x3d3589b]
  404f2f:	test   eax,0x978c0df1
  404f34:	inc    ebx
  404f35:	ja     0x404efe
  404f37:	ss and al,0x9a
  404f3a:	sub    dh,BYTE PTR [esi-0x43]
  404f3d:	jmp    0x8f948744
  404f42:	add    BYTE PTR [ebx+edi*2+0x2f],dl
  404f46:	paddsb mm3,QWORD PTR [edx+esi*8+0x30]
  404f4b:	mov    ds,WORD PTR [ecx+edi*2]
  404f4e:	cmp    al,0x16
  404f50:	nop
  404f51:	(bad)  
  404f52:	out    dx,al
  404f53:	sbb    eax,0x54cd5916
  404f58:	pusha  
  404f59:	shl    ebx,0x9d
  404f5c:	bound  ebx,QWORD PTR [edx+esi*1+0x3b]
  404f60:	inc    esp
  404f61:	xor    DWORD PTR [ebx-0x37eb2e01],esi
  404f67:	fst    st(0)
  404f69:	mov    cl,0xe9
  404f6b:	repz dec ebp
  404f6d:	jns    0x404fe6
  404f6f:	adc    BYTE PTR [ebp+ecx*2-0x3],cl
  404f73:	mov    al,ds:0x4acb1bdc
  404f78:	popf   
  404f79:	jns    0x404fe9
  404f7b:	push   ebx
  404f7c:	jns    0x404f9f
  404f7e:	jb     0x404fef
  404f80:	xlat   BYTE PTR es:[ebx]
  404f82:	xchg   edi,eax
  404f83:	in     eax,dx
  404f84:	data16 rcr dh,0xbd
  404f88:	sar    cl,0xa6
  404f8b:	jno    0x404f3a
  404f8d:	clc    
  404f8e:	xlat   BYTE PTR ds:[ebx]
  404f8f:	call   0x3b1b5635
  404f94:	hlt    
  404f95:	or     esi,DWORD PTR [ebx]
  404f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f98:	mov    ebx,0xc801aa0d
  404f9d:	cmc    
  404f9e:	and    al,0xda
  404fa0:	js     0x404f4d
  404fa2:	mov    ds,WORD PTR [ecx-0x65]
  404fa5:	jg     0x404f40
  404fa7:	leave  
  404fa8:	in     eax,0xa1
  404faa:	push   ecx
  404fab:	es sbb al,0xd2
  404fae:	pop    ebx
  404faf:	(bad)  
  404fb0:	xchg   ebx,eax
  404fb1:	sub    al,0x11
  404fb3:	dec    edx
  404fb4:	cwde   
  404fb5:	pushf  
  404fb6:	(bad)  
  404fb7:	mov    DWORD PTR [esi],0x9b883f23
  404fbd:	pop    esi
  404fbe:	push   edi
  404fbf:	and    ebx,esp
  404fc1:	push   ecx
  404fc2:	inc    eax
  404fc3:	pop    es
  404fc4:	cmp    DWORD PTR [edi-0x39],edx
  404fc7:	fdiv   QWORD PTR [ebp+0x6783b7a0]
  404fcd:	shl    DWORD PTR [eax+0x7afc0652],0x55
  404fd4:	ret    0xb367
  404fd7:	sub    edx,eax
  404fd9:	pop    es
  404fda:	data16 mov al,ds:0xd0cd0cb
  404fe0:	adc    edi,DWORD PTR [edx+ecx*8]
  404fe3:	and    eax,0x7a988213
  404fe8:	sbb    DWORD PTR [ebx-0x28],ecx
  404feb:	not    DWORD PTR [esi]
  404fed:	push   eax
  404fee:	xor    al,0xff
  404ff0:	mov    dh,0x99
  404ff2:	cli    
  404ff3:	push   edx
  404ff4:	mov    ecx,0x5b340a7a
  404ff9:	push   ecx
  404ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ffb:	xchg   ebx,eax
  404ffc:	mov    bl,0xf3
  404ffe:	sbb    al,0x8d
  405000:	xlat   BYTE PTR ds:[ebx]
  405001:	shl    DWORD PTR [esi+eax*4],0xb1
  405005:	ror    BYTE PTR [ebp-0x2d7f2a2d],cl
  40500b:	shl    ch,cl
  40500d:	pop    es
  40500e:	or     al,0x76
  405010:	sahf   
  405011:	xchg   esp,eax
  405012:	and    DWORD PTR fs:[eax-0xd9a0215],eax
  405019:	and    dh,BYTE PTR [edx-0x5824ff1]
  40501f:	stos   BYTE PTR es:[edi],al
  405020:	xchg   bl,bh
  405022:	dec    ecx
  405023:	sub    bh,BYTE PTR [edi+0x30]
  405026:	gs lock fadd QWORD PTR fs:[edx-0x42]
  40502c:	test   DWORD PTR [edi-0x74],ebx
  40502f:	xchg   ebp,eax
  405030:	mov    WORD PTR [edi+0x5cf180fe],gs
  405036:	cmc    
  405037:	mov    bl,0x7
  405039:	pop    es
  40503a:	pop    esi
  40503b:	mov    bh,0xf4
  40503d:	xchg   BYTE PTR [eax+ecx*1-0x393602c5],bh
  405044:	add    BYTE PTR [eax-0x7b3456a3],0x5f
  40504b:	cwde   
  40504c:	mov    ss,WORD PTR [edx+0x59d0b19]
  405052:	rcl    BYTE PTR [ebp+0x58a8c51],cl
  405058:	fwait
  405059:	jmp    0x40503d
  40505b:	xor    DWORD PTR [ecx-0x75baee35],edx
  405061:	add    eax,DWORD PTR [ebx+0x24]
  405064:	in     al,dx
  405065:	and    edx,DWORD PTR [eax+ecx*2-0x6e]
  405069:	loop   0x40508d
  40506b:	jae    0x405020
  40506d:	jno    0x405071
  40506f:	inc    ebx
  405070:	shl    BYTE PTR [ecx+0x32043105],0xbc
  405077:	lahf   
  405078:	sub    bh,bl
  40507a:	mov    ah,0xee
  40507c:	test   BYTE PTR [ecx],0xb0
  40507f:	(bad)
  405082:	mov    ebx,0x7d2780c4
  405087:	add    DWORD PTR [edi-0x16191772],esi
  40508d:	mov    bl,0x60
  40508f:	sbb    BYTE PTR [esi],0xe8
  405092:	add    BYTE PTR [eax+0x28b29f86],bl
  405098:	mov    WORD PTR [edx],cs
  40509a:	and    eax,DWORD PTR [edx]
  40509c:	sbb    eax,0x56811e7
  4050a1:	xchg   ecx,eax
  4050a2:	inc    eax
  4050a3:	xchg   esp,eax
  4050a4:	jbe    0x405070
  4050a6:	aam    0xae
  4050a8:	in     al,dx
  4050a9:	int    0xcb
  4050ab:	movlps xmm0,QWORD PTR [ebx]
  4050ae:	mov    ebp,0x7a52b24a
  4050b3:	ss das 
  4050b5:	add    al,0x1b
  4050b7:	cmp    BYTE PTR [edx+0x1f2a33b1],bh
  4050bd:	cmp    BYTE PTR [esi+0x5d],dh
  4050c0:	jns    0x405115
  4050c2:	fstp   st(4)
  4050c4:	pushf  
  4050c5:	push   es
  4050c6:	popf   
  4050c7:	mov    ch,0x32
  4050c9:	mov    esp,0xbc0fa644
  4050ce:	sti    
  4050cf:	mov    ebx,0x60bbe831
  4050d4:	jle    0x4050f4
  4050d6:	outs   dx,BYTE PTR ds:[esi]
  4050d7:	in     al,dx
  4050d8:	sbb    ebx,edi
  4050da:	push   ecx
  4050db:	das    
  4050dc:	das    
  4050dd:	fild   DWORD PTR [ebp-0x9]
  4050e0:	and    al,0xb1
  4050e2:	jecxz  0x40513b
  4050e4:	or     ch,BYTE PTR [ecx-0x17f6c22a]
  4050ea:	ds push 0x6c
  4050ed:	push   es
  4050ee:	out    dx,eax
  4050ef:	imul   ecx,DWORD PTR [ecx-0x455e44e9],0xffffffe5
  4050f6:	pop    eax
  4050f7:	popa   
  4050f8:	fwait
  4050f9:	inc    eax
  4050fa:	aam    0x32
  4050fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050fd:	adc    eax,0x601873ac
  405102:	xlat   BYTE PTR ds:[ebx]
  405103:	mov    esp,0xe9f10e08
  405108:	(bad)  
  405109:	jmp    0xe2de:0xfb7c5baa
  405110:	cs out dx,eax
  405112:	into   
  405113:	inc    eax
  405114:	jae    0x4050f4
  405116:	pop    esi
  405117:	push   ebp
  405118:	cmp    eax,0xd0f1b760
  40511d:	in     al,0x17
  40511f:	rcl    ch,0x7a
  405122:	and    eax,DWORD PTR [ebx+0x494e60ac]
  405128:	mov    dh,0x78
  40512a:	pop    esi
  40512b:	xor    cl,BYTE PTR [eax-0xac1694f]
  405131:	scas   al,BYTE PTR es:[edi]
  405132:	in     al,0x3a
  405134:	mov    al,ds:0x4702f804
  405139:	or     al,0x72
  40513b:	jb     0x4051ab
  40513d:	and    dh,ch
  40513f:	leave  
  405140:	xlat   BYTE PTR ds:[ebx]
  405141:	xor    eax,0x2e95c921
  405146:	aaa    
  405147:	call   0x5173:0xa8f3e8c
  40514e:	ret    0xe8e
  405151:	cmp    eax,0xaea06cb0
  405156:	ror    BYTE PTR [esi+0x63],cl
  405159:	inc    edi
  40515a:	xor    ebx,DWORD PTR [edx+0x23]
  40515d:	xchg   BYTE PTR [ebx+0x3a94d62],bl
  405163:	out    0x56,eax
  405165:	ins    BYTE PTR es:[edi],dx
  405166:	and    eax,0x7d28e303
  40516b:	cdq    
  40516c:	add    BYTE PTR [ebp+edx*4+0x2b],ah
  405170:	int    0xec
  405172:	pop    edx
  405173:	xlat   BYTE PTR ds:[ebx]
  405174:	je     0x4051e9
  405176:	or     esp,DWORD PTR [eax-0x310abbaa]
  40517c:	mov    ss,ebp
  40517e:	ret    0x58e5
  405181:	pop    ds
  405182:	inc    ecx
  405183:	jno    0x4051a6
  405185:	in     al,dx
  405186:	mov    bl,0x7e
  405188:	fwait
  405189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40518a:	sti    
  40518b:	jmp    DWORD PTR [ebp+0x56]
  40518e:	sbb    bl,BYTE PTR [edx+0x2f04ee51]
  405194:	xchg   ebp,eax
  405195:	outs   dx,DWORD PTR ds:[esi]
  405196:	je     0x40519e
  405198:	popf   
  405199:	out    0x57,al
  40519b:	pop    eax
  40519c:	retf   0x73ca
  40519f:	bt     DWORD PTR [ecx],esp
  4051a2:	xchg   esp,eax
  4051a3:	out    dx,eax
  4051a4:	add    DWORD PTR ds:0x19ba82a7,edi
  4051aa:	push   esi
  4051ab:	(bad)  
  4051ac:	rol    BYTE PTR [eax+0x10],1
  4051af:	sbb    DWORD PTR [ebp-0x23],0x3daa0a00
  4051b6:	repz or bh,BYTE PTR [esi]
  4051b9:	push   0x3a
  4051bb:	adc    dh,cl
  4051bd:	jbe    0x40520b
  4051bf:	test   DWORD PTR [esi-0x47],0x6084582c
  4051c6:	and    DWORD PTR [eax+0x17df6839],ebx
  4051cc:	push   0x2a
  4051ce:	cmp    ebx,0xffffffcf
  4051d1:	and    ecx,DWORD PTR [eax-0x69]
  4051d4:	xor    DWORD PTR ds:0xb862cad9,esp
  4051da:	aam    0x75
  4051dc:	ss jne 0x4051fb
  4051df:	sub    eax,0x5b36d1a1
  4051e4:	fistp  QWORD PTR [eax]
  4051e6:	cdq    
  4051e7:	jmp    0xd122:0xdf32d843
  4051ee:	dec    ebx
  4051ef:	das    
  4051f0:	xchg   esp,eax
  4051f1:	xchg   edi,eax
  4051f2:	jl     0x405231
  4051f4:	out    0x3d,al
  4051f6:	xor    DWORD PTR [esi-0x469815a7],eax
  4051fc:	dec    ebp
  4051fd:	sbb    DWORD PTR [edx],0xffffffb2
  405200:	mov    eax,0xb617945c
  405205:	xchg   eax,ebp
  405207:	jo     0x405284
  405209:	fwait
  40520a:	das    
  40520b:	loopne 0x40520d
  40520d:	cmp    dl,al
  40520f:	pop    ebp
  405210:	pop    esi
  405211:	mov    bl,0xf7
  405213:	add    eax,0xc03ec449
  405218:	cmp    DWORD PTR [eax],edx
  40521a:	nop
  40521b:	test   DWORD PTR [eax],edx
  40521d:	std    
  40521e:	mov    cs,eax
  405220:	push   edi
  405221:	es (bad) 
  405223:	clc    
  405224:	outs   dx,DWORD PTR ds:[esi]
  405225:	push   ebp
  405226:	add    bl,cl
  405228:	fwait
  405229:	pop    ebx
  40522a:	mov    ds:0xf2f409c,eax
  40522f:	pushf  
  405230:	mov    esp,0x45f1dfe6
  405235:	inc    eax
  405236:	dec    eax
  405237:	jmp    0xe90f:0xc6b11404
  40523e:	mov    edx,DWORD PTR [ebx-0x33]
  405241:	outs   dx,BYTE PTR ds:[esi]
  405242:	cmp    ebp,0x24949d07
  405248:	imul   edi,ecx,0x2b
  40524b:	lock dec esp
  40524d:	cmp    eax,0x4b8bf2b8
  405252:	pop    ss
  405253:	fmul   QWORD PTR [edi-0x7d]
  405256:	pop    ebp
  405257:	imul   DWORD PTR [ebp+0x16]
  40525a:	stos   BYTE PTR es:[edi],al
  40525b:	fwait
  40525c:	mov    dh,ch
  40525e:	push   esi
  40525f:	ds (bad) 
  405261:	(bad)
  405265:	ds inc eax
  405267:	sti    
  405268:	xor    eax,0x4c391039
  40526d:	push   0xfffffff4
  40526f:	and    BYTE PTR [eax-0x21],ch
  405272:	inc    ebx
  405274:	dec    esp
  405275:	loopne 0x40520c
  405277:	(bad)  
  405278:	ss cs mov edi,0x7d4887b8
  40527f:	sub    cl,BYTE PTR [ebp-0x2d]
  405282:	jg     0x40528d
  405284:	icebp  
  405285:	mov    edi,0xa9df68a4
  40528a:	inc    ecx
  40528b:	enter  0xb0af,0xf6
  40528f:	mov    dh,0xda
  405291:	mov    edi,0xa921dfc6
  405296:	fcom   QWORD PTR [edi+0x2e]
  405299:	das    
  40529a:	pop    ebp
  40529b:	faddp  st(7),st
  40529d:	xchg   esi,eax
  40529e:	sub    eax,0x148c20d3
  4052a3:	stos   DWORD PTR es:[edi],eax
  4052a4:	push   es
  4052a5:	inc    eax
  4052a6:	mov    DWORD PTR [ebx-0x1],esp
  4052a9:	mov    dh,0x99
  4052ab:	pop    esi
  4052ac:	mov    esp,0x64ce3a27
  4052b1:	sar    DWORD PTR [eax+0x6e],cl
  4052b4:	fnstcw WORD PTR [ecx-0x57]
  4052b7:	jmp    0x4052a5
  4052b9:	mov    eax,ds:0xb10bb34d
  4052be:	retf   
  4052bf:	sti    
  4052c0:	xor    DWORD PTR [esi+0x262ef57d],ebx
  4052c6:	inc    esp
  4052c7:	ret    0xb971
  4052ca:	dec    esp
  4052cb:	jnp    0x405265
  4052cd:	imul   eax,DWORD PTR [edx],0x1
  4052d0:	push   ecx
  4052d1:	mov    ds:0x955ed9bf,eax
  4052d6:	rcr    edx,1
  4052d8:	ds push eax
  4052da:	aam    0xc0
  4052dc:	mov    ch,0x93
  4052de:	cli    
  4052df:	fisttp DWORD PTR [esp+edi*4]
  4052e2:	pusha  
  4052e3:	gs (bad) 
  4052e5:	cmc    
  4052e6:	push   cs
  4052e7:	or     eax,0x8cbbb5bd
  4052ec:	push   edx
  4052ed:	out    0x23,eax
  4052ef:	ja     0x40528d
  4052f1:	leave  
  4052f2:	jne    0x4052b7
  4052f4:	fmulp  st(3),st
  4052f6:	xlat   BYTE PTR ds:[ebx]
  4052f7:	cmp    bl,0x66
  4052fa:	sub    dh,BYTE PTR [edx*1-0x2477e783]
  405301:	xchg   ebp,eax
  405302:	xor    esi,DWORD PTR [eax]
  405304:	shl    DWORD PTR [esi],0xb7
  405307:	sbb    al,0xa3
  405309:	jl     0x40529f
  40530b:	icebp  
  40530c:	pop    edx
  40530d:	mov    ds:0xb3c6d849,eax
  405312:	ret    
  405313:	(bad)  
  405314:	mov    edx,0x8263da00
  405319:	jmp    0x8a34:0x8bb64e1b
  405320:	(bad)  
  405321:	or     eax,0x90539d35
  405326:	test   DWORD PTR [ecx-0x5153f6a3],0x69a10bb1
  405330:	daa    
  405331:	cmp    DWORD PTR [edi-0x22212d7b],edi
  405337:	sbb    eax,0xaeb1c4e0
  40533c:	and    al,0xe6
  40533e:	cdq    
  40533f:	mov    edi,DWORD PTR [esi+0x331f0f34]
  405345:	(bad)
  405349:	add    BYTE PTR [si+0x5b],0x5
  40534e:	pop    ebp
  40534f:	lahf   
  405350:	test   DWORD PTR [ebp+0x78],eax
  405353:	fisttp QWORD PTR [eax+0x3dd6c2db]
  405359:	cmp    BYTE PTR [eax+ebx*8+0x70db8ef9],ah
  405360:	jbe    0x40531d
  405362:	xor    BYTE PTR [edi+0x106f0f33],dl
  405368:	mov    esp,ebp
  40536a:	mov    cl,0x2e
  40536c:	loop   0x405338
  40536e:	mov    ds:0x37465cd6,eax
  405373:	ins    DWORD PTR es:[edi],dx
  405374:	stc    
  405375:	repz inc esp
  405377:	cli    
  405378:	cwde   
  405379:	test   eax,0x2852e58
  40537e:	ret    
  40537f:	pop    DWORD PTR [ecx+ecx*1]
  405382:	or     bl,cl
  405384:	sbb    dh,BYTE PTR ds:0x8a4bae0e
  40538a:	push   edx
  40538b:	lahf   
  40538c:	jmp    0x40532d
  40538e:	fiadd  DWORD PTR [edi]
  405390:	mov    ds:0xeefbed7d,al
  405395:	pop    es
  405396:	dec    ecx
  405397:	pop    es
  405398:	icebp  
  405399:	daa    
  40539a:	sbb    DWORD PTR [ecx-0x35099559],esi
  4053a0:	sbb    BYTE PTR [ebp-0x64],dl
  4053a3:	rcr    BYTE PTR [ecx+0x347ba23d],1
  4053a9:	xchg   ecx,eax
  4053aa:	icebp  
  4053ab:	pusha  
  4053ac:	jmp    0x405389
  4053ae:	nop
  4053af:	cmc    
  4053b0:	inc    esi
  4053b1:	in     al,0x8e
  4053b3:	xchg   edx,eax
  4053b4:	push   0x41b2df1b
  4053b9:	push   eax
  4053ba:	dec    edx
  4053bb:	out    dx,al
  4053bc:	cli    
  4053bd:	xor    al,0x1e
  4053bf:	jnp    0x4053e8
  4053c1:	nop
  4053c2:	push   0xbd9b3cbd
  4053c7:	jns    0x4053cb
  4053c9:	ss fs scas al,BYTE PTR es:[edi]
  4053cc:	adc    BYTE PTR [ebx-0x7e],ch
  4053cf:	sub    BYTE PTR [ebp-0x29],bl
  4053d2:	scas   al,BYTE PTR es:[edi]
  4053d3:	mov    ecx,0xf699feb0
  4053d8:	or     DWORD PTR [ebp-0x4ad34bb2],edi
  4053de:	sbb    al,0x61
  4053e0:	mov    DWORD PTR [edi+0x647f7ad8],ebx
  4053e6:	sub    bh,al
  4053e8:	rol    ch,1
  4053ea:	push   ecx
  4053eb:	adc    cl,0x98
  4053ee:	pop    esi
  4053ef:	dec    esi
  4053f0:	xor    DWORD PTR [eax],ebx
  4053f2:	fdiv   QWORD PTR [edx+0x5e]
  4053f5:	in     al,dx
  4053f6:	mov    WORD PTR [eax+0x3f],?
  4053f9:	rcl    DWORD PTR [edi+ebp*8-0x16ca3e85],cl
  405400:	data16 in al,dx
  405402:	js     0x40538c
  405404:	test   DWORD PTR [edi],0x2d933faa
  40540a:	nop
  40540b:	push   cs
  40540c:	mov    edx,0xed6a0ee6
  405411:	ja     0x405429
  405413:	dec    edi
  405414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405415:	mov    ch,0xb1
  405417:	xor    al,ah
  405419:	outs   dx,DWORD PTR ds:[esi]
  40541a:	xor    al,0xff
  40541c:	retf   0xe715
  40541f:	jo     0x4053eb
  405421:	lahf   
  405422:	push   ss
  405423:	inc    edx
  405424:	mov    ebx,0x41e65809
  405429:	imul   edx,DWORD PTR [ebx],0x66
  40542c:	mov    ecx,0x2c021ea3
  405431:	adc    ebp,DWORD PTR [edi+0x6f]
  405434:	jp     0x40546b
  405436:	and    al,0x90
  405438:	nop
  405439:	sahf   
  40543a:	inc    edx
  40543b:	lahf   
  40543c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40543d:	test   BYTE PTR [edx+eiz*2+0x6a018057],dl
  405444:	mov    eax,ds:0x86e01c8b
  405449:	sar    bh,0x7b
  40544c:	push   cs
  40544d:	pop    esi
  40544e:	imul   ebx,DWORD PTR [edx+esi*2+0x2f],0x9bade42d
  405456:	enter  0x9668,0x10
  40545a:	dec    esp
  40545b:	dec    BYTE PTR [edx]
  40545d:	cmp    ebp,DWORD PTR [eax+0x3b]
  405460:	call   0x88364373
  405465:	mov    esp,0xffdee706
  40546a:	pop    esi
  40546b:	jb     0x405442
  40546d:	mov    ds:0x3cb895df,eax
  405472:	in     al,0xc9
  405474:	xchg   DWORD PTR [edx-0x6e],edx
  405477:	pop    esp
  405478:	stos   DWORD PTR es:[edi],eax
  405479:	clc    
  40547a:	mov    dl,0xd5
  40547c:	pop    edx
  40547d:	bound  edx,QWORD PTR [ebx+0x36]
  405480:	test   BYTE PTR [ecx],al
  405482:	xchg   esp,eax
  405483:	in     eax,0xe2
  405485:	push   edi
  405486:	out    dx,al
  405487:	mov    ecx,0xfa7858a6
  40548c:	sbb    eax,0xcbef483f
  405491:	scas   al,BYTE PTR es:[edi]
  405492:	mov    esp,ebp
  405494:	and    al,0xbe
  405496:	cli    
  405497:	jae    0x40542a
  405499:	daa    
  40549a:	adc    al,BYTE PTR [eax]
  40549c:	inc    ebp
  40549d:	adc    BYTE PTR [esi-0x5c],al
  4054a0:	push   ecx
  4054a1:	jmp    0x77c8:0xaf4ba268
  4054a8:	mov    DWORD PTR [ecx-0x88d53ba],edx
  4054ae:	pop    ecx
  4054af:	ret    0x300c
  4054b2:	add    DWORD PTR [ebx-0x35120df2],esp
  4054b8:	push   ds
  4054b9:	sub    esi,DWORD PTR [edi-0x6]
  4054bc:	rcr    BYTE PTR [edi+0x71aa644b],1
  4054c2:	adc    ebp,DWORD PTR [edi+0x19c98746]
  4054c8:	nop
  4054c9:	fwait
  4054ca:	adc    DWORD PTR [esi+0x71a99efe],edx
  4054d0:	int    0x1d
  4054d2:	std    
  4054d3:	call   0xdf76:0xcd6fedc7
  4054da:	aas    
  4054db:	pop    edx
  4054dc:	and    BYTE PTR [eax+0x60ace25b],al
  4054e2:	dec    ecx
  4054e3:	or     DWORD PTR [edx+0x60],0x25
  4054e7:	sti    
  4054e8:	enter  0xa4a1,0x9c
  4054ec:	add    BYTE PTR [eax+0x5e],bl
  4054ef:	xor    DWORD PTR [esi-0x4ae1c26a],ecx
  4054f5:	jmp    0x8e27:0x132b3890
  4054fc:	pusha  
  4054fd:	dec    edx
  4054fe:	add    DWORD PTR [edx+0x49d5ac2a],0xd716f5b4
  405508:	and    esp,DWORD PTR [edi+eax*1-0x55]
  40550c:	daa    
  40550d:	push   0x76
  40550f:	or     eax,0xfb9b1c76
  405514:	sub    bl,BYTE PTR [ebx+ebp*2]
  405517:	int    0x42
  405519:	in     eax,dx
  40551a:	jl     0x4054e7
  40551c:	or     cl,ah
  40551e:	mov    eax,0x5032d014
  405523:	sbb    edi,eax
  405525:	adc    eax,0x32524042
  40552a:	call   0x6ed4:0xf239ea5c
  405531:	ds push esi
  405533:	loope  0x405521
  405535:	int3   
  405536:	call   0xb07774cc
  40553b:	daa    
  40553c:	pop    edi
  40553d:	jge    0x40550a
  40553f:	xor    eax,0x1640486b
  405544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405545:	arpl   WORD PTR [eax+0x65],ax
  405548:	sub    eax,0xb4818dca
  40554d:	jmp    0x405551
  40554f:	fbld   TBYTE PTR [ecx]
  405551:	dec    esp
  405552:	stc    
  405553:	dec    esp
  405554:	ror    BYTE PTR [ebx+0x2d1d7732],cl
  40555a:	sbb    BYTE PTR [ebp-0x108648ea],cl
  405560:	jb     0x4054ee
  405562:	mov    ch,ch
  405564:	and    al,dl
  405566:	pushf  
  405567:	iret   
  405568:	and    eax,0x8a9a2ce6
  40556d:	imul   eax,DWORD PTR [edx],0xaa5c77f2
  405573:	sub    ebx,DWORD PTR [ecx+0x6edb9e04]
  405579:	push   esp
  40557a:	inc    edi
  40557b:	(bad)
  40557f:	pop    ecx
  405580:	pop    ebp
  405581:	mov    fs,WORD PTR [ebx+esi*4-0x7f]
  405585:	into   
  405586:	or     BYTE PTR [edi-0x78cf9aab],ah
  40558c:	and    DWORD PTR fs:[esi+0x57d82837],0xbb767fa0
  405597:	enter  0x4846,0x81
  40559b:	add    eax,DWORD PTR [eax+0x5e]
  40559e:	mov    dh,0x4d
  4055a0:	pop    ebx
  4055a1:	pop    edx
  4055a2:	lods   al,BYTE PTR ds:[esi]
  4055a3:	leave  
  4055a4:	mov    esi,0xa22812c
  4055a9:	sub    al,0x7e
  4055ab:	(bad)  
  4055ac:	in     al,0x1
  4055ae:	dec    edi
  4055af:	mov    cl,0x93
  4055b1:	jne    0x4055b7
  4055b3:	repnz sbb eax,esp
  4055b6:	xor    esi,DWORD PTR [edi+ebp*8-0x661f67cc]
  4055bd:	push   0xda4bcd27
  4055c2:	out    dx,al
  4055c3:	xchg   DWORD PTR [ebp+0x12281401],esp
  4055c9:	mov    WORD PTR [eax+0x74f3cb08],ss
  4055cf:	inc    eax
  4055d0:	hlt    
  4055d1:	dec    ecx
  4055d2:	inc    esp
  4055d3:	fmul   QWORD PTR [ebx-0x3b]
  4055d6:	js     0x4055d5
  4055d8:	retf   0x2d0e
  4055db:	cld    
  4055dc:	pop    edi
  4055dd:	jnp    0x4055a9
  4055df:	pop    esp
  4055e0:	jmp    0x277a:0x843ab9b5
  4055e7:	cwde   
  4055e8:	repnz push ecx
  4055ea:	mov    edi,0x14d57873
  4055ef:	fidiv  WORD PTR [eax+0x52]
  4055f2:	jae    0x4055fa
  4055f4:	lods   al,BYTE PTR ds:[esi]
  4055f5:	adc    dh,BYTE PTR [ebp+0x6a]
  4055f8:	fs jb  0x405583
  4055fb:	out    0x14,al
  4055fd:	adc    ah,0xb7
  405600:	pop    eax
  405601:	sub    eax,0x18f754bf
  405606:	xchg   DWORD PTR [edx],edx
  405608:	and    dh,ah
  40560a:	sub    eax,0x2c0cde6c
  40560f:	test   BYTE PTR cs:[ecx-0x7f],bl
  405613:	retf   0x2de2
  405616:	and    eax,0xdf7123fd
  40561b:	pop    esp
  40561c:	daa    
  40561d:	outs   dx,BYTE PTR ds:[esi]
  40561e:	xchg   BYTE PTR [eax],dl
  405620:	and    eax,0xfd886279
  405625:	mov    dh,0x52
  405627:	jg     0x40569e
  405629:	bound  esp,QWORD PTR [esi-0x7d]
  40562c:	sbb    eax,0xf3769081
  405631:	rol    BYTE PTR [edi-0x6955e05d],1
  405637:	in     eax,0x6b
  405639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40563a:	imul   esi,DWORD PTR [ebx-0x4fa3192e],0x893b2b12
  405644:	adc    al,0x62
  405646:	xchg   BYTE PTR ds:0x14610109,cl
  40564c:	es das 
  40564e:	adc    ch,bh
  405650:	(bad)
  405655:	bound  esi,QWORD PTR [ecx+0x7019c836]
  40565b:	in     eax,0xb3
  40565d:	mov    ?,edx
  40565f:	add    BYTE PTR [eax],0x43
  405662:	pop    ecx
  405663:	in     eax,0x73
  405665:	inc    ecx
  405666:	jb     0x4055fb
  405668:	xor    DWORD PTR [ecx],0x3e
  40566b:	mov    al,0xe
  40566d:	es pop ecx
  40566f:	fwait
  405670:	or     eax,0xef4699dc
  405675:	mov    ch,0x1
  405677:	xor    DWORD PTR [edx],eax
  405679:	mov    ds:0x5b143bc,eax
  40567e:	test   al,0x36
  405680:	xchg   ecx,eax
  405681:	adc    BYTE PTR [ecx],cl
  405683:	lock lods eax,DWORD PTR ds:[esi]
  405685:	push   ss
  405686:	ret    
  405687:	rcl    DWORD PTR [ecx-0x7edc572c],1
  40568d:	not    DWORD PTR [ebp+0x46]
  405690:	bound  eax,QWORD PTR [ebx-0x42]
  405693:	inc    ecx
  405694:	fistp  QWORD PTR [edx]
  405696:	dec    esp
  405697:	or     ebp,esi
  405699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40569a:	xor    edi,ebx
  40569c:	add    al,0x8a
  40569e:	jno    0x4056d6
  4056a0:	push   ebx
  4056a1:	leave  
  4056a2:	iret   
  4056a3:	push   0x4d
  4056a5:	adc    bh,BYTE PTR [ebx+0x5aa2c05]
  4056ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ac:	ficom  DWORD PTR [edi]
  4056ae:	jne    0x405651
  4056b0:	int    0x9b
  4056b2:	pop    edx
  4056b3:	test   eax,0x1c5b811
  4056b8:	or     al,0xaa
  4056ba:	loope  0x4056bf
  4056bc:	cmp    bl,cl
  4056be:	jo     0x405687
  4056c0:	and    BYTE PTR [edx],0x7e
  4056c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c4:	sub    eax,0x8ac47a0f
  4056c9:	fld1   
  4056cb:	mov    ecx,0x6bebbf4
  4056d0:	dec    ecx
  4056d1:	jo     0x405696
  4056d3:	or     DWORD PTR gs:[esi],edi
  4056d6:	push   edx
  4056d7:	call   0xf805b194
  4056dc:	ret    0x1d8a
  4056df:	std    
  4056e0:	push   esi
  4056e1:	fcom   QWORD PTR [eax+0x4080610d]
  4056e7:	mov    edi,0x75e532fd
  4056ec:	jae    0x405711
  4056ee:	push   esi
  4056ef:	sbb    ebp,DWORD PTR [eax-0x5f5d7cff]
  4056f5:	repz mov esp,0x6cae39b2
  4056fb:	xchg   edi,eax
  4056fc:	cmp    ch,bh
  4056fe:	mov    ecx,0xef395280
  405703:	or     edi,DWORD PTR [esi-0x36]
  405706:	mov    dl,0x31
  405708:	adc    ebx,ebp
  40570a:	hlt    
  40570b:	das    
  40570c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40570d:	test   DWORD PTR [ecx+edx*4+0x6e],ebx
  405711:	jmp    0xc8936324
  405716:	bound  eax,QWORD PTR [esi]
  405718:	mov    bh,0xc3
  40571a:	xchg   DWORD PTR [ebx+0x133567d6],edi
  405720:	push   esp
  405721:	and    al,0xfd
  405723:	ds cmp eax,0xe2f3a28e
  405729:	jb     0x4057a7
  40572b:	bound  ecx,QWORD PTR [esi+edx*2-0x69d1be46]
  405732:	push   es
  405733:	sahf   
  405734:	mov    ah,0x9e
  405736:	mov    WORD PTR [eax],?
  405738:	push   0x2ba5c349
  40573d:	pop    ecx
  40573e:	retf   
  40573f:	scas   eax,DWORD PTR es:[edi]
  405740:	lea    esi,[edx-0x3dcf36a3]
  405746:	mov    dh,0x72
  405748:	rcl    BYTE PTR [esi+0x41d8123d],0x43
  40574f:	mov    esi,0x273535cd
  405754:	adc    ah,BYTE PTR [esi]
  405756:	lahf   
  405757:	shr    BYTE PTR [edi+0x7f24e82a],cl
  40575d:	pusha  
  40575e:	ds adc edx,edi
  405761:	aam    0xca
  405763:	add    al,0xa4
  405765:	xchg   ecx,edi
  405767:	jbe    0x405743
  405769:	or     eax,0x98462f56
  40576e:	dec    edx
  40576f:	out    dx,al
  405770:	fld    st(7)
  405772:	enter  0x7bde,0xed
  405776:	xlat   BYTE PTR ds:[ebx]
  405777:	js     0x405760
  405779:	sub    DWORD PTR [edx],0x8311166f
  40577f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405780:	push   eax
  405781:	pop    edi
  405782:	loope  0x40575c
  405784:	sti    
  405785:	adc    eax,0x3463142a
  40578a:	or     dl,BYTE PTR [ecx-0xa8af425]
  405790:	xor    eax,0x673e10b3
  405795:	mov    esp,0x4eb97838
  40579a:	in     eax,0xaf
  40579c:	pop    esp
  40579d:	jp     0x405760
  40579f:	test   BYTE PTR [eax],dl
  4057a1:	stc    
  4057a2:	daa    
  4057a3:	pop    eax
  4057a4:	pop    es
  4057a5:	bound  ecx,QWORD PTR [ecx-0x6431f9ab]
  4057ab:	je     0x40575c
  4057ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ae:	xor    eax,0x8b01c5d0
  4057b3:	sub    eax,0xb6f749cd
  4057b8:	inc    edi
  4057b9:	retf   
  4057ba:	not    DWORD PTR [ecx-0x4b6f850d]
  4057c0:	fcom   DWORD PTR [ebx]
  4057c2:	push   cs
  4057c3:	and    ecx,DWORD PTR [edi+0x4868996f]
  4057c9:	hlt    
  4057ca:	out    dx,eax
  4057cb:	popa   
  4057cc:	dec    ecx
  4057cd:	out    dx,eax
  4057ce:	mov    DWORD PTR ds:0x56a0b21c,eax
  4057d4:	imul   ecx,DWORD PTR [esi-0x59],0xffffffac
  4057d8:	or     BYTE PTR [ebx+0x63],cl
  4057db:	scas   eax,DWORD PTR es:[edi]
  4057dc:	sbb    cl,BYTE PTR [ecx+0x62e906a4]
  4057e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057e3:	pushf  
  4057e4:	adc    al,BYTE PTR [eax]
  4057e6:	call   0xd0b8:0x7435f16e
  4057ed:	adc    eax,0xb467c76a
  4057f2:	lock fs ins BYTE PTR es:[edi],dx
  4057f5:	mov    gs,WORD PTR [ebp+eax*2+0x1ced29b2]
  4057fc:	adc    eax,0x91130eaf
  405801:	dec    edx
  405802:	sub    esp,edi
  405804:	sahf   
  405805:	pop    es
  405806:	push   ecx
  405807:	and    ah,BYTE PTR [esi-0x20]
  40580a:	test   al,0xb0
  40580c:	aad    0x9b
  40580e:	inc    ecx
  40580f:	and    ah,ah
  405811:	loope  0x40581a
  405813:	sub    al,BYTE PTR [ebx+0x59]
  405816:	ficomp WORD PTR [edx]
  405818:	retf   0x42ed
  40581b:	loop   0x4057eb
  40581d:	stos   BYTE PTR es:[edi],al
  40581e:	add    BYTE PTR [eax+0x669a8713],cl
  405824:	jno    0x4057c5
  405826:	les    ebx,FWORD PTR [esi-0x5dabc38c]
  40582c:	ds retf 
  40582e:	dec    esp
  40582f:	(bad)  
  405830:	mov    dl,0xc7
  405832:	xchg   edx,eax
  405833:	cmp    dh,BYTE PTR [edi-0x3c4d07dd]
  405839:	push   edx
  40583a:	adc    eax,DWORD PTR [eax+ebx*4-0x2a02ccbf]
  405841:	sbb    edi,DWORD PTR gs:[ebp+0x76]
  405845:	sbb    DWORD PTR fs:[esi-0x2db993b1],esp
  40584c:	sbb    BYTE PTR [edi+edi*8],ah
  40584f:	fisttp DWORD PTR [eax+0xb8d0085]
  405855:	push   esi
  405856:	fs or  al,0x4e
  405859:	adc    al,0x99
  40585b:	sub    BYTE PTR [esi-0x36],dh
  40585e:	fstp   QWORD PTR [ecx+0x41]
  405861:	not    BYTE PTR [eax]
  405863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405864:	scas   eax,DWORD PTR es:[edi]
  405865:	fxtract 
  405867:	stos   BYTE PTR es:[edi],al
  405868:	hlt    
  405869:	dec    esp
  40586a:	sub    esi,edx
  40586c:	adc    BYTE PTR [esi-0x2bd40daa],bl
  405872:	or     dl,BYTE PTR [ecx+eax*8+0x4f829a88]
  405879:	inc    eax
  40587a:	rol    cl,0x4c
  40587d:	push   eax
  40587e:	imul   edi,DWORD PTR [eax],0xfffffff9
  405881:	test   BYTE PTR [ecx+esi*8],ah
  405884:	sar    BYTE PTR [edx+0x49],0x59
  405888:	adc    DWORD PTR [edi+0x58830577],esp
  40588e:	sar    DWORD PTR ds:0xd7dd6235,cl
  405894:	sbb    dh,BYTE PTR [ebp-0x7280e32f]
  40589a:	mov    bh,0x3c
  40589c:	pop    es
  40589d:	pushf  
  40589e:	pop    edx
  40589f:	jle    0x4058ca
  4058a1:	and    eax,0x8dfcb183
  4058a6:	(bad)  
  4058a8:	shl    BYTE PTR [edx-0x5f],1
  4058ab:	mov    ?,WORD PTR [ecx-0x4e]
  4058ae:	enter  0x4011,0x8c
  4058b2:	std    
  4058b3:	push   0x36acbc4c
  4058b8:	icebp  
  4058b9:	pusha  
  4058ba:	popa   
  4058bb:	dec    ebp
  4058bc:	cmc    
  4058bd:	in     eax,0x2a
  4058bf:	rcl    bl,1
  4058c1:	test   al,0xc1
  4058c3:	scas   eax,DWORD PTR es:[edi]
  4058c4:	jmp    0x4058b6
  4058c6:	sbb    eax,0xd05c96cd
  4058cb:	adc    BYTE PTR [eax-0x59],al
  4058ce:	out    dx,al
  4058cf:	add    dh,dh
  4058d1:	fsubp  st(0),st
  4058d3:	cli    
  4058d4:	fisubr DWORD PTR [ebx-0xd5c14ea]
  4058da:	nop
  4058db:	sti    
  4058dc:	jmp    0x4058df
  4058de:	xor    ch,dh
  4058e0:	pop    edx
  4058e1:	outs   dx,DWORD PTR ds:[esi]
  4058e2:	mov    bh,al
  4058e4:	out    dx,eax
  4058e5:	push   ebp
  4058e6:	jg     0x405870
  4058e8:	sub    bl,dh
  4058ea:	inc    eax
  4058eb:	sub    dl,bl
  4058ed:	(bad)  
  4058ee:	in     eax,0xdb
  4058f0:	(bad)  
  4058f1:	loop   0x405919
  4058f3:	data16 in al,dx
  4058f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058f6:	mov    dh,0x6d
  4058f8:	int3   
  4058f9:	pop    esp
  4058fa:	lods   al,BYTE PTR ds:[esi]
  4058fb:	mov    ch,0x9c
  4058fd:	lds    edx,FWORD PTR [ebx]
  4058ff:	xchg   esp,eax
  405900:	popa   
  405901:	mov    cs,WORD PTR [ecx+0x4af75e0]
  405907:	iret   
  405908:	aas    
  405909:	dec    eax
  40590a:	dec    edi
  40590b:	test   BYTE PTR [edi+0x66c38c0d],dh
  405911:	push   ebx
  405912:	sub    esi,DWORD PTR [ebp+0x65]
  405915:	fadd   DWORD PTR fs:[ebx-0x11998221]
  40591c:	repz fdivr DWORD PTR [ebx]
  40591f:	cmp    dl,dh
  405921:	and    al,0x36
  405923:	mov    ?,WORD PTR [edx-0xc]
  405926:	out    0xff,al
  405928:	pop    es
  405929:	mov    ds:0x90706581,eax
  40592e:	scas   eax,DWORD PTR es:[edi]
  40592f:	fucomp st(1)
  405931:	shr    DWORD PTR [esi],1
  405933:	mov    fs,edx
  405935:	adc    al,0xbe
  405937:	mov    ebx,0x519a7e3d
  40593c:	test   WORD PTR ds:[ecx-0x47e66538],si
  405944:	push   ecx
  405945:	add    BYTE PTR [edi],dh
  405947:	pop    ds
  405948:	daa    
  405949:	repnz push eax
  40594b:	or     cl,BYTE PTR [ebx-0x423b07c9]
  405951:	lock je 0x4058d5
  405954:	or     BYTE PTR [eax-0x21f0d509],dl
  40595a:	mov    ah,0x97
  40595c:	or     eax,0x9851f044
  405961:	outs   dx,BYTE PTR ds:[esi]
  405962:	ror    cl,1
  405964:	jp     0x4059d1
  405966:	dec    ebx
  405967:	sbb    dh,BYTE PTR [ebx+0x30]
  40596a:	xchg   DWORD PTR [eax+0x43],ebx
  40596d:	mov    edi,ebx
  40596f:	arpl   sp,dx
  405971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405973:	popa   
  405974:	jecxz  0x4058fa
  405976:	and    eax,0xd26df85
  40597b:	daa    
  40597c:	xchg   DWORD PTR [eax+ebp*1+0x4a173e86],ecx
  405983:	push   es
  405984:	fnsave [esi-0x18]
  405987:	push   ds
  405988:	cmp    BYTE PTR [eax],ch
  40598a:	jo     0x405917
  40598c:	adc    DWORD PTR [edi-0x718f929e],edx
  405992:	popa   
  405993:	jl     0x4059f3
  405995:	sub    edi,esi
  405997:	out    dx,al
  405998:	fwait
  405999:	pop    es
  40599a:	outs   dx,DWORD PTR ds:[esi]
  40599b:	or     ebx,DWORD PTR [esi+0x51719610]
  4059a1:	jge    0x4059ac
  4059a3:	call   0xea2f30d8
  4059a8:	mov    ah,0x27
  4059aa:	pushf  
  4059ab:	outs   dx,BYTE PTR ds:[esi]
  4059ac:	data16 jmp 0x4059a1
  4059af:	jecxz  0x405a20
  4059b1:	push   ds
  4059b2:	retf   
  4059b3:	jle    0x405a30
  4059b5:	shr    DWORD PTR [ebx+0x79],cl
  4059b8:	xor    eax,0xfd4ed2a
  4059bd:	outs   dx,BYTE PTR ds:[esi]
  4059be:	gs mov ebx,eax
  4059c1:	pop    edx
  4059c2:	push   ss
  4059c3:	mov    ds:0x7051e401,al
  4059c8:	sahf   
  4059c9:	rol    DWORD PTR [esi+edx*8-0x5a8a3be1],0x8a
  4059d1:	cmp    dh,BYTE PTR [edi]
  4059d3:	push   esi
  4059d4:	push   cs
  4059d5:	sub    eax,edi
  4059d7:	fmul   QWORD PTR [esi]
  4059d9:	lock aam 0x48
  4059dc:	retf   0xccdf
  4059df:	and    cl,BYTE PTR [esi+0x517a4c56]
  4059e5:	(bad)  
  4059e6:	out    0x74,al
  4059e8:	call   DWORD PTR [ebx]
  4059ea:	or     eax,0x7f7e7182
  4059ef:	sub    al,0x51
  4059f1:	dec    edi
  4059f2:	adc    edi,esp
  4059f4:	mov    eax,0x9fc64f9a
  4059f9:	mov    cl,0x71
  4059fb:	nop
  4059fc:	jbe    0x4059fa
  4059fe:	adc    al,0xb1
  405a00:	xor    dh,BYTE PTR [ebx+0x75e95198]
  405a06:	int    0xa0
  405a08:	repz call 0xaea7:0x565ec404
  405a10:	mov    al,ds:0x347a9e48
  405a15:	dec    edi
  405a16:	inc    ecx
  405a17:	test   ecx,ebx
  405a19:	repz ss call 0xa90e0ba7
  405a20:	pop    esi
  405a21:	push   ecx
  405a22:	or     bl,BYTE PTR [edx-0x58]
  405a25:	loop   0x405a6b
  405a27:	jle    0x405a6b
  405a29:	rcr    cl,cl
  405a2b:	pop    edi
  405a2c:	sbb    WORD PTR [ebp+ebp*2+0x6772935],sp
  405a34:	enter  0xf7bc,0xe8
  405a38:	xchg   BYTE PTR [ecx+0x24],ch
  405a3b:	xchg   esi,eax
  405a3c:	shl    BYTE PTR [esi+esi*1-0x28d24656],0xd6
  405a44:	pop    ds
  405a45:	ss push ebx
  405a47:	sar    BYTE PTR [bp+0x1e],0x29
  405a4c:	rcr    esp,1
  405a4e:	push   esp
  405a4f:	add    al,0xf
  405a51:	fnstsw WORD PTR [edx+0x155c8e4]
  405a57:	call   0x3cdc0b19
  405a5c:	add    DWORD PTR [ebx],edx
  405a5e:	push   edx
  405a5f:	addr16 and al,0x5f
  405a62:	pop    ebx
  405a63:	sbb    BYTE PTR [ebp+0x4c724832],ah
  405a69:	dec    BYTE PTR [ecx]
  405a6b:	push   ebx
  405a6c:	mov    ch,0x71
  405a6e:	aam    0x44
  405a70:	imul   ebp,DWORD PTR [ebx+0x52],0x60db5a3d
  405a77:	scas   eax,DWORD PTR es:[edi]
  405a78:	aad    0x1f
  405a7a:	in     al,0x65
  405a7c:	jb     0x405a4d
  405a7e:	and    BYTE PTR [edx-0x4aaf6d79],dl
  405a84:	adc    ecx,DWORD PTR [esi]
  405a86:	fbstp  TBYTE PTR [ebx-0x5]
  405a89:	shr    DWORD PTR [ebp-0x74],1
  405a8c:	cmp    al,0x16
  405a8e:	xchg   edi,eax
  405a8f:	das    
  405a90:	mov    dl,0x22
  405a92:	dec    ebx
  405a93:	fistp  QWORD PTR [ebp-0x27]
  405a96:	cdq    
  405a97:	fwait
  405a98:	lock cld 
  405a9a:	push   edi
  405a9b:	call   0x5df1:0x7052cceb
  405aa2:	sbb    BYTE PTR [edi+0x79],dh
  405aa5:	and    esi,DWORD PTR ds:0xabd1ac3b
  405aab:	pusha  
  405aac:	push   0x3a4fd8fb
  405ab1:	pushf  
  405ab2:	por    mm6,mm2
  405ab5:	xchg   edx,eax
  405ab6:	xchg   esi,eax
  405ab7:	loope  0x405aff
  405ab9:	cli    
  405aba:	rcl    DWORD PTR [edx+edx*8+0x612ae351],cl
  405ac1:	xchg   ebp,eax
  405ac2:	mov    ?,esi
  405ac4:	ins    DWORD PTR es:[edi],dx
  405ac5:	xchg   DWORD PTR [ecx+0x4e],ebx
  405ac8:	retf   0xa7e8
  405acb:	xchg   ecx,eax
  405acc:	leave  
  405acd:	imul   eax,esp,0x3df1440b
  405ad3:	jmp    0x44e3dccd
  405ad8:	jae    0x405aee
  405ada:	pop    ebp
  405adb:	fsubr  QWORD PTR ss:[edx]
  405ade:	jnp    0x405b1f
  405ae0:	loopne 0x405ad0
  405ae2:	pop    eax
  405ae3:	cmp    ebx,DWORD PTR [eax]
  405ae5:	push   cs
  405ae6:	jne    0x405a76
  405ae8:	std    
  405ae9:	mov    edx,0x1b9a40eb
  405aee:	arpl   WORD PTR [edx],ax
  405af0:	mov    ds:0xbc17cf8,al
  405af5:	test   BYTE PTR [eax],0x7c
  405af8:	mov    bh,0x97
  405afa:	scas   al,BYTE PTR es:[edi]
  405afb:	sbb    al,0xb8
  405afd:	adc    al,0xd5
  405aff:	jmp    0xa9a524fc
  405b04:	out    0xe,eax
  405b06:	(bad)  
  405b07:	inc    esi
  405b08:	sub    al,0xa
  405b0a:	jecxz  0x405b43
  405b0c:	mov    edx,0xc9751c18
  405b11:	call   0x70c6211
  405b16:	pop    esp
  405b17:	xor    cl,bl
  405b19:	dec    ecx
  405b1a:	ror    edi,1
  405b1c:	leave  
  405b1d:	pop    edx
  405b1e:	xchg   esi,eax
  405b1f:	xor    ebx,ebp
  405b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b22:	addr16 pop esp
  405b24:	loopne 0x405b30
  405b26:	cmp    cl,ch
  405b28:	mov    cl,0xa6
  405b2a:	aad    0xce
  405b2c:	(bad)  
  405b2d:	loope  0x405ac9
  405b2f:	fdiv   DWORD PTR [ebx]
  405b31:	mov    esi,0x20fc56f2
  405b36:	mov    ebx,DWORD PTR [ecx]
  405b38:	mov    BYTE PTR [eax-0xa],bl
  405b3b:	cmp    eax,0x6c75834b
  405b40:	stos   BYTE PTR es:[edi],al
  405b41:	scas   al,BYTE PTR es:[edi]
  405b42:	sbb    bl,BYTE PTR [ecx-0x313a1341]
  405b48:	aad    0x16
  405b4a:	xor    ebp,DWORD PTR [esi-0x51d07438]
  405b50:	mov    ds,WORD PTR [esi]
  405b52:	test   BYTE PTR [edi+0x52],ch
  405b55:	inc    ebx
  405b56:	fstp   DWORD PTR [ecx]
  405b58:	fcmovbe st,st(6)
  405b5a:	jns    0x405b8c
  405b5c:	ins    DWORD PTR es:[edi],dx
  405b5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b5e:	push   esp
  405b5f:	jns    0x405b49
  405b61:	jae    0x405bd3
  405b63:	ror    DWORD PTR ss:[ebx+0x609eeb8a],cl
  405b6a:	sbb    ebp,DWORD PTR [ecx]
  405b6c:	jge    0x405b8a
  405b6e:	and    dl,BYTE PTR [ebx+eax*1+0xd]
  405b72:	mov    cl,0x0
  405b74:	mov    ds:0x88e23932,eax
  405b79:	repz int3 
  405b7b:	fs stos DWORD PTR es:[edi],eax
  405b7d:	cmc    
  405b7e:	sahf   
  405b7f:	adc    eax,0x4dd109b5
  405b84:	test   BYTE PTR [ebp-0x1409e7c4],0xb3
  405b8b:	pusha  
  405b8c:	dec    BYTE PTR [eax-0x50c121d2]
  405b92:	push   eax
  405b93:	sar    BYTE PTR [edi-0x5ca1a2a3],cl
  405b99:	or     DWORD PTR [esi],eax
  405b9b:	test   BYTE PTR ds:0x8e4995d4,ah
  405ba1:	sub    eax,0x2bd35051
  405ba6:	cmp    BYTE PTR ds:0x4af37c0e,bh
  405bac:	lods   eax,DWORD PTR ds:[esi]
  405bae:	into   
  405baf:	(bad)  
  405bb0:	(bad)  
  405bb1:	mov    bh,0x59
  405bb3:	cmp    eax,0xb73c148a
  405bb8:	mov    DWORD PTR [ebp+esi*2+0x412602e8],ebp
  405bbf:	sub    al,0x4
  405bc1:	add    DWORD PTR [ecx+0x56cc3f68],ebx
  405bc7:	mov    DWORD PTR [edx+0x0],edx
  405bca:	inc    esp
  405bcb:	mov    ds:0xcf96f3e,eax
  405bd0:	mov    eax,0x839bd32a
  405bd5:	adc    ebx,0x3c823fd3
  405bdb:	leave  
  405bdc:	xchg   edi,eax
  405bdd:	mov    ah,ch
  405bdf:	add    ch,cl
  405be1:	dec    ebp
  405be2:	cmp    DWORD PTR [ebx+0x13],esi
  405be5:	sbb    BYTE PTR [esi-0x1c83e4e4],dl
  405beb:	xchg   ecx,eax
  405bec:	lahf   
  405bed:	out    dx,al
  405bee:	mov    ?,edx
  405bf0:	test   DWORD PTR [ecx+0x1fb391d4],edx
  405bf6:	popf   
  405bf7:	inc    edi
  405bf8:	add    esi,DWORD PTR [ebx+0x49]
  405bfb:	out    dx,eax
  405bfc:	mov    eax,ds:0x3ca06acd
  405c01:	int    0xfc
  405c03:	pushf  
  405c04:	test   BYTE PTR [ecx+ecx*4+0x3a],dl
  405c08:	jns    0x405c29
  405c0a:	fld    DWORD PTR [ebx]
  405c0c:	sbb    BYTE PTR [edx],bh
  405c0e:	lea    ebp,[edx-0x1320ed85]
  405c14:	aad    0x9e
  405c16:	addr16 adc eax,0xf3d654e2
  405c1c:	lods   al,BYTE PTR ds:[esi]
  405c1d:	sahf   
  405c1e:	mov    edi,0x7c123118
  405c23:	xchg   ebp,eax
  405c24:	mov    ah,bl
  405c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c27:	cwde   
  405c28:	das    
  405c29:	(bad)  
  405c2a:	jge    0x405be3
  405c2c:	jae    0x405bc8
  405c2e:	dec    esp
  405c2f:	mov    edx,0x452bfb4e
  405c34:	sbb    eax,0x949e3b65
  405c39:	mov    ah,0x92
  405c3b:	aaa    
  405c3c:	inc    ecx
  405c3d:	push   ss
  405c3e:	fcmovnu st,st(2)
  405c40:	sub    DWORD PTR [eax-0x3e585a01],0x60f33bc5
  405c4a:	fnstcw WORD PTR [edx-0x3d]
  405c4d:	sub    eax,0x23a2f9bf
  405c52:	xchg   edi,eax
  405c53:	aam    0x77
  405c55:	mov    edi,edi
  405c57:	adc    al,0x69
  405c59:	push   cs
  405c5a:	out    0xf6,al
  405c5c:	pusha  
  405c5d:	cld    
  405c5e:	test   eax,0x830a24eb
  405c63:	fsubr  st(6),st
  405c65:	scas   al,BYTE PTR es:[edi]
  405c66:	int    0xc0
  405c68:	jle    0x405c68
  405c6a:	mov    cs,edx
  405c6c:	xchg   edi,eax
  405c6d:	xor    BYTE PTR ds:0x6ea402d6,dl
  405c73:	and    BYTE PTR [ecx-0x17],ch
  405c76:	lea    ebx,[eax-0x319cd980]
  405c7c:	mov    dh,0x6c
  405c7e:	inc    edx
  405c7f:	lods   al,BYTE PTR ds:[esi]
  405c80:	push   esi
  405c81:	dec    ebp
  405c82:	aam    0x23
  405c84:	mov    ch,0xf8
  405c86:	mov    ecx,0xd3da0cff
  405c8b:	pop    esi
  405c8c:	and    esp,DWORD PTR [ecx+0x481fb281]
  405c92:	arpl   WORD PTR [edx-0x47],bp
  405c95:	add    esi,DWORD PTR [ecx]
  405c97:	pop    esi
  405c98:	outs   dx,BYTE PTR ds:[esi]
  405c99:	mov    ebp,0xc3d752ce
  405c9e:	ret    0xf1f5
  405ca1:	or     al,BYTE PTR [esi+0x78607496]
  405ca7:	mov    bh,BYTE PTR [esi-0x40]
  405caa:	mov    ds:0x6ce4338a,al
  405caf:	loopne 0x405c70
  405cb1:	mov    cl,0x1d
  405cb3:	or     ebx,edx
  405cb5:	xor    DWORD PTR [edx+0x37abe6d3],esp
  405cbb:	cmp    ebp,DWORD PTR [eax+0x38]
  405cbe:	xor    al,0x24
  405cc0:	loope  0x405c9f
  405cc2:	mov    bl,0x1e
  405cc4:	test   al,0x8c
  405cc6:	(bad)  
  405cc7:	mov    cl,0xcb
  405cc9:	fisub  WORD PTR [ebx]
  405ccb:	adc    al,0x40
  405ccd:	xor    BYTE PTR [esi-0x4510a5fa],dh
  405cd3:	sbb    dh,BYTE PTR [ecx]
  405cd5:	jo     0x405c62
  405cd7:	aaa    
  405cd8:	and    bl,BYTE PTR [ebx]
  405cda:	push   ecx
  405cdb:	lds    esi,FWORD PTR [edi+0x3a]
  405cde:	shl    BYTE PTR [eax+ebp*1-0x66458d26],0x23
  405ce6:	test   eax,0x342903ff
  405ceb:	jmp    0x405cc4
  405ced:	or     BYTE PTR [esi],0xb6
  405cf0:	jnp    0x405cfe
  405cf2:	ret    0xf0b5
  405cf5:	imul   ecx,DWORD PTR [ebx],0x3785ad70
  405cfb:	or     al,0x44
  405cfd:	lods   eax,DWORD PTR ds:[esi]
  405cfe:	or     DWORD PTR [esi+esi*8-0x29],edi
  405d02:	popf   
  405d03:	add    ecx,DWORD PTR [ebp-0x24963d50]
  405d09:	pop    eax
  405d0a:	sub    ebp,esp
  405d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d0d:	clc    
  405d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d0f:	shr    eax,1
  405d11:	loop   0x405c95
  405d13:	daa    
  405d14:	adc    DWORD PTR [eax+0x1a],eax
  405d17:	jno    0x405d84
  405d19:	inc    ebp
  405d1a:	dec    edi
  405d1b:	xchg   edx,eax
  405d1c:	dec    esp
  405d1d:	lds    edx,FWORD PTR [esi]
  405d1f:	pop    ecx
  405d20:	cdq    
  405d21:	(bad)  
  405d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d24:	cmp    DWORD PTR [ebx],edx
  405d26:	pop    edx
  405d27:	ficom  WORD PTR [edx+0x6c]
  405d2a:	(bad)  
  405d2b:	daa    
  405d2c:	mov    edx,0xf8d2d661
  405d31:	ins    DWORD PTR es:[edi],dx
  405d32:	pop    ebp
  405d33:	dec    ebp
  405d34:	cmp    bl,BYTE PTR [ecx]
  405d36:	jns    0x405cfb
  405d38:	push   ss
  405d39:	dec    esp
  405d3a:	out    0x14,eax
  405d3c:	es and ebp,esi
  405d3f:	lea    ebx,[edi+0x46]
  405d42:	ss mov bh,0xc1
  405d45:	out    0x33,eax
  405d47:	shl    BYTE PTR [ebp-0x67],1
  405d4a:	addr16 out 0xf8,al
  405d4d:	add    al,0x61
  405d4f:	inc    ebx
  405d50:	int    0xc9
  405d52:	pushf  
  405d53:	push   0x2433aeaf
  405d58:	or     al,0xf
  405d5a:	(bad)  
  405d5b:	jne    0x405d13
  405d5d:	rol    BYTE PTR [ebp-0x5d42bf2c],1
  405d63:	xchg   ebx,eax
  405d64:	mov    edi,DWORD PTR [ebp-0x24]
  405d67:	lods   eax,DWORD PTR ds:[esi]
  405d68:	add    dh,BYTE PTR [edx-0x13b3f99b]
  405d6e:	adc    al,0xc8
  405d70:	(bad)  
  405d71:	loope  0x405d25
  405d73:	xor    bh,BYTE PTR [ecx+0x65cee489]
  405d79:	jb     0x405d1b
  405d7b:	adc    eax,0xe4cd5246
  405d80:	jno    0x405dbf
  405d82:	jle    0x405d45
  405d84:	or     dh,BYTE PTR [esi+ecx*2+0x13605b87]
  405d8b:	pop    ebp
  405d8c:	dec    ebx
  405d8d:	lods   al,BYTE PTR ds:[si]
  405d8f:	push   ebp
  405d90:	inc    edi
  405d91:	fld    DWORD PTR [esi]
  405d93:	in     al,dx
  405d94:	std    
  405d95:	push   esi
  405d96:	jecxz  0x405e01
  405d98:	adc    DWORD PTR [ebp+0xc],ebx
  405d9b:	dec    edi
  405d9c:	push   edx
  405d9d:	sbb    al,0x77
  405d9f:	ficomp DWORD PTR [eax]
  405da1:	(bad)  
  405da2:	test   ah,0x94
  405da5:	ja     0x405e01
  405da7:	and    bl,BYTE PTR [esi+0x499b9a9]
  405dad:	(bad)  
  405dae:	and    al,0x34
  405db0:	pop    ebp
  405db1:	shl    DWORD PTR [ebx],1
  405db3:	inc    ebp
  405db4:	adc    BYTE PTR [edi],ah
  405db6:	mov    ds:0xa988f43b,al
  405dbb:	mov    edx,0x97b3e766
  405dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dc1:	cmp    esp,DWORD PTR [eax-0x2b32170c]
  405dc7:	sbb    cl,BYTE PTR [eax-0x59c2068c]
  405dcd:	jle    0x405dd1
  405dcf:	push   0x5e
  405dd1:	xchg   bl,dh
  405dd3:	lods   eax,DWORD PTR ds:[esi]
  405dd4:	iret   
  405dd5:	(bad)  
  405dd7:	out    dx,al
  405dd8:	and    edi,DWORD PTR ds:0x922c3ce
  405dde:	jle    0x405df9
  405de0:	retf   
  405de1:	and    dh,ah
  405de3:	mov    eax,ds:0xce152b40
  405de8:	push   ds
  405de9:	inc    ebx
  405dea:	pop    esp
  405deb:	and    DWORD PTR [eax],ebp
  405ded:	pop    eax
  405dee:	sub    eax,0xec18a764
  405df3:	dec    ebp
  405df4:	inc    edi
  405df5:	scas   al,BYTE PTR es:[edi]
  405df6:	mov    bl,0x9c
  405df8:	add    edi,DWORD PTR [edx+esi*2-0x13]
  405dfc:	cmp    eax,0x6e684f03
  405e01:	jo     0x405e4f
  405e03:	ins    BYTE PTR es:[edi],dx
  405e04:	dec    ebx
  405e05:	dec    ecx
  405e06:	sub    al,0x3
  405e08:	cmp    BYTE PTR [ebp+0x76e89cc2],ah
  405e0e:	xor    dl,BYTE PTR [eax]
  405e10:	sbb    ch,BYTE PTR [ebp+0x35]
  405e13:	xor    cl,dh
  405e15:	xchg   esi,eax
  405e16:	mov    bp,WORD PTR [ebx-0x26fe9157]
  405e1d:	xchg   ebx,eax
  405e1e:	adc    al,0xc6
  405e20:	pop    ecx
  405e21:	add    edi,DWORD PTR [esi+0x1]
  405e24:	mov    ds:0x7efe11d,al
  405e29:	or     al,0xde
  405e2b:	cmp    al,0x46
  405e2d:	cdq    
  405e2e:	call   0xf0449573
  405e33:	sub    al,bl
  405e35:	addr16 js 0x405e9f
  405e38:	and    DWORD PTR [esi-0x4d],edx
  405e3b:	inc    ecx
  405e3c:	mov    ecx,0x6a8dc3f6
  405e41:	and    eax,0x57d3c9eb
  405e46:	sub    eax,0x8cf0cf0e
  405e4b:	inc    BYTE PTR [ebx+eiz*1]
  405e4e:	jbe    0x405e98
  405e50:	es out dx,al
  405e52:	or     edi,DWORD PTR [ebp+0x10]
  405e55:	jns    0x405e09
  405e57:	add    DWORD PTR [ecx],0x34
  405e5a:	call   0xe382b179
  405e5f:	push   esp
  405e60:	arpl   WORD PTR [ebp-0x5301ffb0],si
  405e66:	ins    BYTE PTR es:[edi],dx
  405e67:	std    
  405e68:	jp     0x405ede
  405e6a:	lods   al,BYTE PTR ds:[esi]
  405e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e6c:	ds push 0xffffff8a
  405e6f:	out    dx,al
  405e70:	jne    0x405eae
  405e72:	pop    di
  405e74:	cmp    ah,BYTE PTR [eax-0x55c62a0b]
  405e7a:	imul   BYTE PTR [esi+0x442f074a]
  405e80:	add    al,0xcc
  405e82:	into   
  405e83:	adc    eax,0xc5c773a8
  405e88:	push   cs
  405e89:	sub    DWORD PTR [ebx+eiz*1+0x29],0x2b0705c8
  405e91:	adc    cl,BYTE PTR [ecx+0xc]
  405e94:	add    edx,DWORD PTR [ebp+0x18]
  405e97:	sub    ebx,DWORD PTR [eax-0x4bc30426]
  405e9d:	sahf   
  405e9e:	imul   edi,DWORD PTR [eax-0x7b],0xf976b35d
  405ea5:	js     0x405e59
  405ea7:	adc    esi,eax
  405ea9:	jb     0x405f15
  405eab:	call   FWORD PTR [ebx]
  405ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eae:	mov    DWORD PTR [ebx],ebx
  405eb0:	inc    edi
  405eb1:	repz cs pop es
  405eb4:	cld    
  405eb5:	push   0xffffff9a
  405eb7:	sub    dl,cl
  405eb9:	stos   BYTE PTR es:[edi],al
  405eba:	mov    al,0x53
  405ebc:	(bad)  
  405ebd:	mov    ah,0xaa
  405ebf:	push   ds
  405ec0:	xor    BYTE PTR [edx-0x1d],ah
  405ec3:	stos   BYTE PTR es:[edi],al
  405ec4:	xchg   ecx,eax
  405ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ec6:	add    DWORD PTR ds:0xbfc7cbb8,eax
  405ecc:	int3   
  405ecd:	sub    eax,0x739976d2
  405ed2:	sub    dh,BYTE PTR [ebx]
  405ed4:	mov    ebp,0x8802df15
  405ed9:	sbb    bh,ch
  405edb:	mov    bl,0xb4
  405edd:	and    eax,DWORD PTR [esi]
  405edf:	fdivp  st(1),st
  405ee1:	inc    ecx
  405ee2:	aas    
  405ee3:	clc    
  405ee4:	test   al,0x66
  405ee6:	mov    dh,0x4
  405ee8:	shl    DWORD PTR [edx+ebx*2],0xb8
  405eec:	pop    edx
  405eed:	xchg   esi,eax
  405eee:	jl     0x405f0d
  405ef0:	and    ebx,esi
  405ef2:	jecxz  0x405f23
  405ef4:	ret    
  405ef5:	(bad)  
  405ef7:	pop    edx
  405ef8:	pop    es
  405ef9:	sub    bl,BYTE PTR [esi-0x13]
  405efc:	adc    dl,ch
  405efe:	data16 out dx,al
  405f00:	cmp    dl,al
  405f02:	jecxz  0x405f15
  405f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f05:	inc    ebp
  405f06:	push   0x357ec9dc
  405f0b:	rol    ecx,0xca
  405f0e:	mov    bh,0x61
  405f10:	adc    al,0x14
  405f12:	fbstp  TBYTE PTR [edi-0x77f1cdde]
  405f18:	adc    DWORD PTR ds:0xd8b585fd,0xffffffb4
  405f1f:	ss dec edx
  405f21:	adc    ebp,DWORD PTR [ebx-0x4e46c7d2]
  405f27:	jecxz  0x405fa6
  405f29:	mov    cl,0x9a
  405f2b:	or     al,0xbf
  405f2d:	fmul   DWORD PTR fs:[ebx-0x47]
  405f31:	mov    dl,0x6e
  405f33:	mov    ecx,0xb722206c
  405f38:	imul   BYTE PTR [ebp+0x78]
  405f3b:	sub    eax,0x60dc21b3
  405f40:	out    0xae,al
  405f42:	or     BYTE PTR [eax-0x5e],bh
  405f45:	(bad)  
  405f46:	fidiv  WORD PTR [esi+0x52]
  405f49:	in     eax,dx
  405f4a:	push   edx
  405f4b:	or     DWORD PTR [esi-0x714e0c62],ebx
  405f51:	test   al,0x76
  405f53:	and    ch,BYTE PTR [ecx+0x12]
  405f56:	fstp   DWORD PTR ds:0xddb0c0ba
  405f5c:	cdq    
  405f5d:	scas   al,BYTE PTR es:[edi]
  405f5e:	push   edx
  405f5f:	pop    esi
  405f60:	dec    ebx
  405f61:	xor    al,0xc1
  405f63:	pop    ds
  405f64:	or     BYTE PTR [edx-0x23511471],ah
  405f6a:	setl   BYTE PTR [ecx]
  405f6d:	fild   DWORD PTR [ebx]
  405f6f:	mov    al,ds:0x9c642fe5
  405f74:	xchg   ecx,eax
  405f75:	fcmovnu st,st(4)
  405f77:	pushf  
  405f78:	in     eax,0xed
  405f7a:	lahf   
  405f7b:	fstp   QWORD PTR [esi]
  405f7d:	push   esi
  405f7e:	and    ebp,DWORD PTR [edi-0x322001f6]
  405f84:	test   eax,0x60a7c581
  405f89:	pop    ss
  405f8a:	jmp    0x8cb323a3
  405f8f:	mov    edx,0xf43f4457
  405f94:	js     0x405fa3
  405f96:	push   ebx
  405f97:	lods   al,BYTE PTR ds:[esi]
  405f98:	rcl    bh,cl
  405f9a:	xor    al,0x9
  405f9c:	imul   ebp,DWORD PTR [esi],0x7ac96722
  405fa2:	ficomp DWORD PTR [esp+0x1e16dd5b]
  405fa9:	xchg   ecx,eax
  405faa:	xchg   esp,eax
  405fab:	xor    BYTE PTR [ebp-0x72a2f016],bh
  405fb1:	loop   0x405fc5
  405fb3:	push   ebx
  405fb4:	cmp    esp,DWORD PTR [ebp+esi*8-0x2c7d2fa8]
  405fbb:	aaa    
  405fbc:	pop    eax
  405fbd:	cmp    BYTE PTR ds:0x4ab68100,bl
  405fc3:	call   0x190f87f1
  405fc8:	cmp    DWORD PTR [edx-0x10],0x20f76bbe
  405fcf:	xchg   edi,eax
  405fd0:	sub    BYTE PTR [ecx+0x532558c3],dh
  405fd6:	daa    
  405fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd8:	adc    BYTE PTR [esi],ah
  405fda:	pop    eax
  405fdb:	pop    ebx
  405fdc:	sbb    dl,dh
  405fde:	(bad)  ds:0x452e6229
  405fe4:	dec    esp
  405fe5:	(bad)  
  405fe6:	sbb    ch,BYTE PTR [ecx+ebp*1+0x7ca4dad5]
  405fed:	dec    DWORD PTR ds:0xfa94c528
  405ff3:	loope  0x40606b
  405ff5:	and    DWORD PTR [ebp-0x15],edx
  405ff8:	clc    
  405ff9:	add    DWORD PTR [esi+0x28],esp
  405ffc:	pop    ds
  405ffd:	pop    ds
  405ffe:	scas   eax,DWORD PTR es:[edi]
  405fff:	ins    DWORD PTR es:[edi],dx
  406000:	xchg   esi,eax
  406001:	(bad)  
  406002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406003:	xlat   BYTE PTR ds:[ebx]
  406004:	jecxz  0x405fcd
  406006:	fsub   DWORD PTR [ebx-0x3cb21748]
  40600c:	ins    BYTE PTR es:[edi],dx
  40600d:	xor    al,0xec
  40600f:	dec    esp
  406010:	sbb    al,0xc3
  406013:	jmp    0x40602c
  406015:	scas   al,BYTE PTR es:[edi]
  406016:	out    dx,eax
  406017:	mov    bh,0x3f
  406019:	jle    0x406042
  40601b:	inc    ebx
  40601c:	adc    eax,0x2d196fcf
  406021:	fild   QWORD PTR [ebp+0x10fe9a2c]
  406027:	rcl    DWORD PTR [ebp+ebp*8-0x55],1
  40602b:	jmp    DWORD PTR es:[ebx+0x6d]
  40602f:	mov    esp,0xc4f1b438
  406034:	gs xor al,0x72
  406037:	jl     0x40603f
  406039:	xor    eax,esi
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	int    0xc0
  40615e:	(bad)  [edi-0x7c7cc7a5]
  406164:	out    dx,eax
  406165:	pop    esp
  406166:	add    DWORD PTR [ebx-0x6ad146de],0x69
  40616d:	sti    
  40616e:	scas   al,BYTE PTR es:[edi]
  40616f:	xchg   edx,ebp
  406171:	mov    ecx,0x41181ca6
  406176:	lock sbb ch,dh
  406179:	jmp    0xdf2d:0x28887095
  406180:	imul   ebp,DWORD PTR [ecx],0x64
  406183:	imul   ch
  406185:	push   edx
  406186:	popf   
  406187:	aaa    
  406188:	xchg   ecx,eax
  406189:	cmp    al,0xe0
  40618b:	mov    ss,WORD PTR [ecx+0x17]
  40618e:	or     eax,0xafaf3786
  406193:	and    BYTE PTR [edi*2+0x38192541],bh
  40619a:	int    0xac
  40619c:	xchg   ecx,eax
  40619d:	(bad)  
  40619e:	stc    
  40619f:	(bad)  [ecx+0x30f05fc0]
  4061a5:	outs   dx,DWORD PTR ds:[esi]
  4061a6:	addr16 mov al,0x25
  4061a9:	scas   al,BYTE PTR es:[edi]
  4061aa:	adc    ah,BYTE PTR [esi+ebp*2+0x8]
  4061ae:	gs mov esp,?
  4061b1:	fisubr WORD PTR [edx-0x42cb42c8]
  4061b7:	sbb    BYTE PTR [esi-0x1397d56c],dh
  4061bd:	gs mov dh,0xa
  4061c0:	js     0x406197
  4061c2:	jp     0x4061cc
  4061c4:	mov    ds:0x24149d50,al
  4061c9:	retf   0x17d5
  4061cc:	pop    eax
  4061cd:	sub    al,BYTE PTR [ebx]
  4061cf:	nop
  4061d0:	jp     0x406183
  4061d2:	aad    0xb
  4061d4:	aam    0xad
  4061d6:	push   esp
  4061d7:	inc    eax
  4061d8:	call   0x4ca:0x37956034
  4061df:	mov    ah,0xdb
  4061e1:	dec    ecx
  4061e2:	aas    
  4061e3:	mov    dl,0x14
  4061e5:	dec    eax
  4061e6:	pop    ebx
  4061e7:	mov    dh,0x3e
  4061e9:	aas    
  4061ea:	xor    ch,bl
  4061ec:	ror    DWORD PTR [ebp+0x17],0xdf
  4061f0:	jl     0x406229
  4061f2:	jecxz  0x4061c1
  4061f4:	xchg   DWORD PTR [ebx+0x3555c15d],edi
  4061fa:	jnp    0x4061e0
  4061fc:	inc    esi
  4061fd:	ds mov ebx,0xcb4b32d5
  406203:	mov    ds:0xa2f8b3ff,al
  406208:	adc    ebx,esi
  40620a:	or     ch,BYTE PTR [edi]
  40620c:	jg     0x4061bb
  40620e:	cmp    DWORD PTR [ecx],ebx
  406210:	and    ecx,DWORD PTR [edx]
  406212:	je     0x4061e9
  406214:	in     eax,0xd9
  406216:	mov    al,ds:0x1a4f74d1
  40621b:	and    esp,DWORD PTR [eax+0xa39092b]
  406221:	loop   0x406231
  406223:	mov    ecx,0xbac68165
  406228:	jmp    0x84539a52
  40622d:	sbb    eax,0x8c1489f8
  406232:	loop   0x406266
  406234:	pop    edx
  406235:	cli    
  406236:	xor    eax,ecx
  406238:	jbe    0x4061e7
  40623a:	aaa    
  40623b:	out    0xf,eax
  40623d:	sbb    eax,0xedb02892
  406242:	sbb    eax,0x9415b9ef
  406247:	inc    ebx
  406248:	addr16 dec esi
  40624a:	push   eax
  40624b:	fidivr DWORD PTR [ecx-0x5d]
  40624e:	inc    esp
  40624f:	dec    esi
  406250:	vcvtsi2sd xmm4,xmm1,DWORD PTR [eax+0x42]
  406255:	out    dx,al
  406256:	or     al,0x78
  406258:	ret    
  406259:	pop    ebx
  40625a:	sbb    dh,dh
  40625c:	mov    cl,BYTE PTR [eax]
  40625e:	mov    ds,WORD PTR [eax+0x2bbf2dae]
  406264:	outs   dx,BYTE PTR ds:[esi]
  406265:	and    eax,DWORD PTR [ecx-0x68b71762]
  40626b:	dec    edx
  40626c:	je     0x406235
  40626e:	mov    eax,0xa4a75ce8
  406273:	arpl   WORD PTR [esi+ebx*8],ax
  406276:	push   eax
  406277:	bound  ebp,QWORD PTR [edi+edx*8+0x31add187]
  40627e:	or     al,0x35
  406280:	mov    ebx,eax
  406282:	dec    esp
  406283:	mov    ecx,0x277ba60a
  406288:	addr16 (bad) 
  40628a:	or     DWORD PTR [ebx],ecx
  40628c:	add    eax,0xad2f9574
  406291:	jl     0x4062ed
  406293:	mov    ds:0xb7f03782,eax
  406298:	test   DWORD PTR [esi],0x67fc4710
  40629e:	mov    ch,0xe2
  4062a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062a1:	push   edx
  4062a2:	dec    edi
  4062a3:	fs xor al,0x9c
  4062a6:	xor    DWORD PTR ds:0xc5602b94,eax
  4062ac:	pop    ecx
  4062ad:	repz mov bh,0xff
  4062b0:	or     DWORD PTR [ebx+0xc4b0a5c],0xcce57411
  4062ba:	nop
  4062bb:	and    DWORD PTR [edx+0xf],esi
  4062be:	xchg   ebp,eax
  4062bf:	clc    
  4062c0:	sbb    eax,0xb4576ebe
  4062c5:	cmp    DWORD PTR [ebx+0x58],ecx
  4062c8:	repnz stos BYTE PTR es:[edi],al
  4062ca:	fisttp QWORD PTR [eax]
  4062cc:	es out 0xf2,eax
  4062cf:	aam    0x11
  4062d1:	inc    edx
  4062d2:	and    al,BYTE PTR [eax-0xca18dea]
  4062d8:	dec    esp
  4062d9:	sbb    esp,DWORD PTR [esi]
  4062db:	add    al,0xd3
  4062dd:	cmc    
  4062de:	fbstp  TBYTE PTR [ecx]
  4062e0:	xor    DWORD PTR [esi],esp
  4062e2:	mov    edx,0x3dc61865
  4062e7:	rcl    bl,cl
  4062e9:	add    esi,DWORD PTR [ecx+eiz*1-0x24]
  4062ed:	dec    ebx
  4062ee:	xchg   ecx,eax
  4062ef:	push   0x356bf27e
  4062f4:	mov    ebx,0x40131cab
  4062f9:	push   ecx
  4062fa:	sbb    al,0x48
  4062fc:	push   cs
  4062fd:	lock and BYTE PTR [edx+0x4a],bl
  406301:	mov    edi,0xe52356f2
  406306:	call   0x9dd2:0xbd112896
  40630d:	mov    esp,0x7941fc37
  406312:	mov    ds:0x3542c673,al
  406317:	xor    dh,BYTE PTR [ecx+ecx*8]
  40631a:	pop    esp
  40631b:	neg    DWORD PTR [edi+0x4b]
  40631e:	ins    BYTE PTR es:[edi],dx
  40631f:	xchg   bh,dh
  406321:	pop    es
  406322:	(bad)  
  406323:	rcl    bh,0x73
  406326:	sbb    ecx,esp
  406328:	hlt    
  406329:	inc    esp
  40632a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40632b:	loope  0x406303
  40632d:	add    DWORD PTR [esi+0x2c],0x88c1a585
  406334:	sbb    BYTE PTR [edx+0x7b2bdb48],bl
  40633a:	mov    DWORD PTR [ebx+0x2],esp
  40633d:	mov    al,0x33
  40633f:	fs push edx
  406341:	cmp    ch,al
  406343:	mov    dh,0x70
  406345:	iret   
  406346:	xor    eax,0x25b46dd4
  40634b:	pushf  
  40634c:	mov    ah,0xd1
  40634e:	retf   
  40634f:	test   al,0x2e
  406351:	mov    ?,WORD PTR [eax-0x59]
  406354:	sbb    DWORD PTR [edx+0x43],ecx
  406357:	xor    esp,edi
  406359:	add    DWORD PTR [edi-0x5c],ecx
  40635c:	fs aas 
  40635e:	inc    eax
  40635f:	and    al,0xb3
  406361:	cs cdq 
  406363:	xor    BYTE PTR [ebx],dh
  406365:	js     0x406304
  406367:	cmp    BYTE PTR [ecx-0x1cafabcf],cl
  40636d:	arpl   bp,bx
  40636f:	stos   DWORD PTR es:[edi],eax
  406370:	or     cl,BYTE PTR [edi+0xe]
  406373:	test   al,0x44
  406375:	sub    al,0x93
  406377:	add    DWORD PTR [edx+eax*1+0x1f],esi
  40637b:	push   ss
  40637c:	sub    BYTE PTR [ebp-0x68],dl
  40637f:	sbb    al,BYTE PTR [edi+0x0]
  406382:	scas   eax,DWORD PTR es:[edi]
  406383:	sbb    ah,BYTE PTR [ecx-0x1d]
  406386:	in     eax,dx
  406387:	xor    ebp,ebp
  406389:	add    eax,0xdb02281c
  40638e:	add    BYTE PTR [ebx],ah
  406390:	dec    ebx
  406391:	and    DWORD PTR ds:0x95b70d1,ecx
  406397:	mov    edx,0xc0965396
  40639c:	push   esi
  40639d:	adc    BYTE PTR [eax+0x2219f029],0xd6
  4063a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063a5:	in     al,dx
  4063a6:	sub    eax,0x28284cbc
  4063ab:	ja     0x4063f1
  4063ad:	call   0xd48d4694
  4063b2:	jb     0x40634c
  4063b4:	in     eax,dx
  4063b5:	outs   dx,DWORD PTR ds:[esi]
  4063b6:	jno    0x406418
  4063b8:	jp     0x406371
  4063ba:	push   ebx
  4063bb:	inc    BYTE PTR [edx+0x34332758]
  4063c1:	ds clc 
  4063c3:	or     ah,BYTE PTR [ebx+ecx*8-0x19479eaf]
  4063ca:	lods   al,BYTE PTR ds:[esi]
  4063cb:	xor    esp,edx
  4063cd:	lahf   
  4063ce:	push   ss
  4063cf:	pushf  
  4063d0:	stc    
  4063d1:	into   
  4063d2:	and    ecx,DWORD PTR [ecx+ecx*8-0x50]
  4063d6:	mov    WORD PTR [ecx-0x57],?
  4063d9:	pop    edx
  4063da:	mov    eax,0x2cf9ee46
  4063df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063e0:	outs   dx,DWORD PTR ds:[esi]
  4063e1:	inc    esi
  4063e2:	sti    
  4063e3:	push   esi
  4063e4:	scas   al,BYTE PTR es:[edi]
  4063e5:	sub    DWORD PTR [edx+0x74e2ee5a],ebp
  4063eb:	and    bl,BYTE PTR [eax]
  4063ed:	dec    ebx
  4063ee:	rcl    DWORD PTR [eax-0x16],0xd8
  4063f2:	xchg   DWORD PTR ds:0x8aede513,edi
  4063f8:	and    edx,DWORD PTR [ecx]
  4063fa:	cmp    al,BYTE PTR [edx+0x5b]
  4063fd:	cwde   
  4063fe:	cs dec edx
  406400:	sub    ebp,DWORD PTR [edx]
  406402:	mov    DWORD PTR [ebp+0x7ea44910],ebx
  406408:	sub    DWORD PTR [eax-0x79a16ba],edx
  40640e:	enter  0x3d43,0x12
  406412:	adc    BYTE PTR [ecx+0x17a66374],dl
  406418:	das    
  406419:	mov    al,dl
  40641b:	and    eax,0xff7d9bc8
  406420:	add    al,0xe
  406422:	cli    
  406423:	add    BYTE PTR [edi-0x4985f90c],cl
  406429:	sar    BYTE PTR [eax],0xa6
  40642c:	dec    ebp
  40642d:	(bad)  
  40642e:	xchg   esp,eax
  40642f:	push   ebp
  406430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406431:	(bad)  [edi+0x66]
  406434:	cwde   
  406435:	sbb    eax,0x4893dff8
  40643a:	in     eax,0x2d
  40643c:	leave  
  40643d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40643e:	jl     0x40649e
  406440:	adc    dl,dh
  406442:	cwde   
  406443:	pop    ebx
  406444:	(bad)  
  406445:	jns    0x406470
  406447:	xor    dh,BYTE PTR [esi-0x4a318d3]
  40644d:	ret    
  40644e:	sub    cl,dl
  406450:	xchg   edi,eax
  406451:	mov    ds:0x4ea04662,al
  406456:	dec    edi
  406457:	xor    al,0x33
  406459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40645a:	push   cs
  40645b:	mov    DWORD PTR [edi+0x5dea0947],eax
  406461:	mov    cl,0x18
  406463:	xchg   ebx,eax
  406464:	jns    0x406476
  406466:	mov    eax,ds:0xa4ec1a5a
  40646b:	test   edx,0x6098eb71
  406471:	dec    edi
  406472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406473:	inc    edi
  406474:	sbb    edx,ebp
  406476:	add    BYTE PTR [edx],al
  406478:	xchg   ecx,eax
  406479:	pop    edx
  40647a:	fwait
  40647b:	xchg   ebp,eax
  40647c:	xor    bh,BYTE PTR [esi+ebx*4+0x3f2f80c2]
  406483:	pop    esi
  406484:	lods   al,BYTE PTR ds:[esi]
  406485:	es test eax,0xd4be29e4
  40648b:	adc    al,0x8
  40648d:	shl    BYTE PTR [ebx+0x44],cl
  406490:	inc    esp
  406491:	xchg   edi,eax
  406492:	ror    BYTE PTR [ebx+0x3b3adb28],0xca
  406499:	push   ebx
  40649a:	pushf  
  40649b:	sub    al,0x1e
  40649d:	nop
  40649e:	test   eax,0x8933fb76
  4064a3:	std    
  4064a4:	jp     0x4064e0
  4064a6:	jle    0x4064c5
  4064a8:	sub    al,0xf7
  4064aa:	inc    edx
  4064ab:	add    edi,DWORD PTR [ebx+0x2a70eeb9]
  4064b1:	xor    BYTE PTR [esi+eax*2],dh
  4064b4:	outs   dx,DWORD PTR ds:[esi]
  4064b5:	bound  edi,QWORD PTR [ecx-0x63ed85b0]
  4064bb:	leave  
  4064bc:	push   ecx
  4064bd:	mov    bl,0xf7
  4064bf:	cld    
  4064c0:	inc    eax
  4064c1:	fadd   DWORD PTR [eax-0x732b2dc3]
  4064c7:	aas    
  4064c8:	ror    DWORD PTR [ecx],cl
  4064ca:	and    esp,DWORD PTR [esi-0x29]
  4064cd:	lds    esi,FWORD PTR [ebp+edx*8+0x56b8eeaf]
  4064d4:	pop    edi
  4064d5:	popf   
  4064d6:	mov    esp,0xafc9ac51
  4064db:	xchg   DWORD PTR [ebx+0x604b52af],edx
  4064e1:	mov    esi,0xd156a25a
  4064e6:	imul   BYTE PTR ds:0x5ce47521
  4064ec:	out    dx,al
  4064ed:	jge    0x406488
  4064ef:	in     eax,dx
  4064f0:	dec    ebp
  4064f1:	mov    dh,0x69
  4064f3:	adc    DWORD PTR [eax],0xb00b1a39
  4064f9:	in     eax,dx
  4064fa:	or     eax,0x3c4af327
  4064ff:	psrld  mm5,QWORD PTR [ebx+edx*2-0x1a]
  406504:	fdivr  st(1),st
  406506:	ds sbb eax,0x1277c0a4
  40650c:	push   ds
  40650d:	and    bh,bh
  40650f:	scas   al,BYTE PTR es:[edi]
  406510:	add    dl,BYTE PTR ds:0x685270ff
  406516:	ins    DWORD PTR es:[edi],dx
  406517:	fs jmp 0xc3ad0e9a
  40651d:	fwait
  40651e:	sub    eax,0x3dce091d
  406523:	loope  0x406547
  406525:	sbb    edx,0x70494e66
  40652b:	push   edx
  40652c:	inc    esp
  40652d:	cdq    
  40652e:	xlat   BYTE PTR ds:[ebx]
  40652f:	mov    ds:0x7c737cdb,al
  406534:	les    dx,DWORD PTR [ebx]
  406537:	cli    
  406538:	dec    esi
  406539:	jecxz  0x4065b5
  40653b:	and    al,BYTE PTR [ecx+0x41b74ff4]
  406541:	lods   eax,DWORD PTR ds:[esi]
  406542:	loop   0x40654a
  406544:	cmp    cl,BYTE PTR [ebx]
  406546:	lock or eax,0xdcbaff7a
  40654c:	add    eax,0xfd6095cb
  406551:	pop    esi
  406552:	push   ebp
  406553:	add    BYTE PTR [ebx-0x48],al
  406556:	mov    dh,0x37
  406558:	enter  0x1f0e,0xbb
  40655c:	or     edi,ecx
  40655e:	pop    edx
  40655f:	mov    ecx,0xd03ce4b4
  406564:	sahf   
  406565:	cmp    ch,al
  406567:	out    0x78,eax
  406569:	pop    esp
  40656a:	aad    0x33
  40656c:	rcl    ebp,1
  40656e:	add    BYTE PTR [ecx-0x7e925137],0x81
  406575:	and    dh,bh
  406577:	in     al,0x9c
  406579:	stos   BYTE PTR es:[edi],al
  40657a:	push   edx
  40657b:	outs   dx,DWORD PTR ds:[esi]
  40657c:	add    dl,ah
  40657e:	int    0x1c
  406580:	(bad)  ds:0x817f257f
  406586:	and    al,0x6
  406588:	outs   dx,BYTE PTR ds:[esi]
  406589:	xor    BYTE PTR [esi],dh
  40658b:	data16 jbe 0x406513
  40658e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40658f:	lahf   
  406590:	sbb    DWORD PTR [edi],0xa4761043
  406596:	out    dx,al
  406597:	repz xchg edi,eax
  406599:	and    edx,esp
  40659b:	lahf   
  40659c:	lea    ecx,[esi]
  40659e:	jge    0x406522
  4065a0:	fidivr WORD PTR [ebx+0xe605f23]
  4065a6:	mov    edi,0x6354594c
  4065ab:	sub    al,0x3d
  4065ad:	xchg   ecx,eax
  4065ae:	dec    ebx
  4065af:	stos   BYTE PTR es:[edi],al
  4065b0:	je     0x40655d
  4065b2:	mov    eax,0x5140df7a
  4065b7:	sti    
  4065b8:	lock aam 0xee
  4065bb:	and    al,0x6
  4065bd:	xor    dl,BYTE PTR [ecx+eax*4+0x2f]
  4065c1:	mov    ebx,0xdb7a2b6e
  4065c6:	push   cs
  4065c7:	mov    ds:0xd9219e3c,al
  4065cc:	push   eax
  4065cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ce:	ins    DWORD PTR es:[edi],dx
  4065cf:	or     edx,ebp
  4065d1:	js     0x40660f
  4065d3:	ror    BYTE PTR [esi],1
  4065d5:	adc    al,0x5
  4065d7:	shl    BYTE PTR [edx+0x2c],0x0
  4065db:	pop    esi
  4065dc:	lock adc dh,BYTE PTR [edx+eax*4+0x2d7b3448]
  4065e4:	test   ebp,ebx
  4065e6:	pop    eax
  4065e7:	mov    al,0xc2
  4065e9:	jl     0x40664a
  4065eb:	hlt    
  4065ec:	inc    esi
  4065ed:	test   BYTE PTR [edi+0x6e5ef0d9],ch
  4065f3:	das    
  4065f4:	pmulhw mm1,QWORD PTR [edi+eiz*1]
  4065f8:	cwde   
  4065f9:	mov    ah,0x35
  4065fb:	push   edi
  4065fc:	cwde   
  4065fd:	mov    bh,0x9
  4065ff:	xor    al,0xce
  406601:	ds xchg ebp,eax
  406603:	sar    DWORD PTR [edx+0x70],1
  406606:	push   ebx
  406607:	add    DWORD PTR [eax],esp
  406609:	ffree  st(2)
  40660b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40660d:	pop    ebp
  40660e:	(bad)
  406612:	push   ebp
  406613:	ds jmp 0x19a9:0xfb1dc7b
  40661b:	in     eax,0xfb
  40661d:	in     eax,0x2d
  40661f:	jecxz  0x40667b
  406621:	call   0xde78ad30
  406626:	pop    esp
  406627:	les    esp,FWORD PTR [edi-0x52]
  40662a:	pop    ebp
  40662b:	ss mov ah,al
  40662e:	repz retf 
  406630:	jg     0x40666e
  406632:	popa   
  406633:	(bad)  [ecx+0x59421c12]
  406639:	fwait
  40663a:	and    DWORD PTR [ebp+0x4e],edi
  40663d:	push   ecx
  40663e:	int3   
  40663f:	adc    dh,BYTE PTR [edi+0x358b3802]
  406645:	cs jg  0x406617
  406648:	inc    ebp
  406649:	mov    ds:0x147ad07e,al
  40664e:	les    edx,FWORD PTR [esi-0x6893a478]
  406654:	aas    
  406655:	inc    esp
  406656:	dec    esp
  406657:	sbb    DWORD PTR [eax+0x5ea0408c],0x6ade7b54
  406661:	lods   eax,DWORD PTR ds:[esi]
  406662:	pop    edx
  406663:	dec    edx
  406664:	call   0x61693b69
  406669:	fdiv   DWORD PTR [ebx+edi*2-0x7e4715a5]
  406670:	arpl   WORD PTR [ebp-0x2b],ax
  406673:	mov    DWORD PTR [edx-0x21174780],0x9a2388fb
  40667d:	jle    0x40661a
  40667f:	mov    ch,0xb4
  406681:	jmp    0x40668f
  406683:	test   BYTE PTR [esi+0x111fd894],dh
  406689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40668a:	gs push ebx
  40668c:	jne    0x406704
  40668e:	dec    eax
  40668f:	retf   0x3145
  406692:	cmp    DWORD PTR [ecx+0x1],esi
  406695:	lea    esp,[esi]
  406697:	jo     0x4066c4
  406699:	ss ja  0x4066a8
  40669c:	cld    
  40669d:	hlt    
  40669e:	ins    DWORD PTR es:[edi],dx
  40669f:	push   ss
  4066a0:	xchg   ecx,eax
  4066a1:	jae    0x406694
  4066a3:	cli    
  4066a4:	push   ss
  4066a5:	or     dh,bh
  4066a7:	(bad)  
  4066a9:	ja     0x406687
  4066ab:	es cwde 
  4066ad:	jns    0x4066e6
  4066af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b0:	sbb    esp,DWORD PTR [eax]
  4066b2:	xchg   edx,eax
  4066b3:	mov    bl,0x83
  4066b5:	xor    dl,ch
  4066b7:	mov    ds:0xedea9f,al
  4066bc:	fwait
  4066bd:	pop    es
  4066be:	or     dl,bh
  4066c0:	push   ebx
  4066c1:	adc    ebp,DWORD PTR [ebx]
  4066c3:	scas   al,BYTE PTR es:[edi]
  4066c4:	and    BYTE PTR [ebp-0x1392ba7d],dl
  4066ca:	shl    DWORD PTR [eax-0x55],1
  4066cd:	mov    eax,0x77376ac5
  4066d2:	mov    dh,BYTE PTR [ecx+0x6]
  4066d5:	jl     0x406658
  4066d7:	ror    bl,1
  4066d9:	test   BYTE PTR [esi+0x27],ch
  4066dc:	inc    ebp
  4066dd:	in     eax,dx
  4066de:	push   esi
  4066df:	add    eax,0x86d4705c
  4066e4:	cmp    ebp,DWORD PTR [eax-0x7875414d]
  4066ea:	sbb    DWORD PTR [ecx-0x24],eax
  4066ed:	push   edi
  4066ee:	pop    ss
  4066ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f1:	sub    BYTE PTR [eax-0x6b],bh
  4066f4:	(bad)  
  4066f5:	mov    ch,0xfe
  4066f7:	outs   dx,BYTE PTR ds:[esi]
  4066f8:	xor    eax,0xfe47803b
  4066fd:	shl    BYTE PTR [ebx],0xb7
  406700:	inc    edi
  406701:	adc    BYTE PTR [ecx-0x495bdb10],ah
  406707:	sub    ebx,DWORD PTR [ebp+0x62]
  40670a:	mov    dl,0xe0
  40670c:	dec    esi
  40670d:	cmc    
  40670e:	dec    esp
  40670f:	add    DWORD PTR [ebp-0x7182de1],eax
  406715:	mov    al,0x18
  406717:	repz sbb dl,BYTE PTR [esi-0x14a83546]
  40671e:	pop    ebp
  40671f:	add    ch,BYTE PTR [edi+0x24b3fb30]
  406725:	lods   eax,DWORD PTR ds:[esi]
  406726:	sub    DWORD PTR [esi],0x616f942
  40672c:	mov    cl,0xa8
  40672e:	add    ecx,DWORD PTR [edx]
  406730:	sub    edx,ebx
  406732:	fs add al,0x5a
  406735:	ss (bad) 
  406737:	sbb    DWORD PTR [ebx+esi*1+0x746b3ba6],edi
  40673e:	xchg   BYTE PTR [esi+0x6b338066],bl
  406744:	test   DWORD PTR [edi-0x36],0x54fca6f3
  40674b:	xor    esi,DWORD PTR [esp+ebx*2]
  40674e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40674f:	das    
  406750:	mov    eax,0xf29acc45
  406755:	pop    esi
  406756:	imul   ebx,DWORD PTR [ecx],0xfe09b3d5
  40675c:	adc    eax,0x8acda50b
  406761:	xchg   ebp,eax
  406762:	es (bad) 
  406764:	or     dh,dh
  406766:	xchg   DWORD PTR [edi],eax
  406768:	popa   
  406769:	jge    0x4067ca
  40676b:	pop    ecx
  40676c:	sub    al,0xf9
  40676e:	retf   0x1662
  406771:	cmp    dl,BYTE PTR [ebx+0x0]
  406774:	cs inc eax
  406776:	(bad)  
  406777:	call   0xc6a85600
  40677c:	outs   dx,BYTE PTR ds:[esi]
  40677d:	lods   eax,DWORD PTR ds:[esi]
  40677e:	lock jmp 0x406763
  406781:	mov    ds:0xe0c766f9,al
  406786:	and    edx,DWORD PTR [edi+0x143eae05]
  40678c:	arpl   ax,si
  40678e:	jg     0x40678c
  406790:	sbb    eax,DWORD PTR [edi-0x40d70c51]
  406796:	sub    DWORD PTR ds:0xafe67598,ebp
  40679c:	fwait
  40679d:	inc    BYTE PTR [esi+0x28]
  4067a0:	retf   
  4067a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a2:	mov    esi,0x2e226116
  4067a7:	cmc    
  4067a8:	or     bh,dl
  4067aa:	les    esp,FWORD PTR ds:0xa6e5a897
  4067b0:	ret    
  4067b1:	clc    
  4067b2:	dec    ebx
  4067b3:	ficom  WORD PTR [ecx+0x35]
  4067b6:	mov    bl,0x23
  4067b8:	lock sbb al,0x41
  4067bb:	add    dl,BYTE PTR [esi+0x407d9813]
  4067c1:	arpl   WORD PTR [edi],sp
  4067c3:	cmp    ah,ah
  4067c5:	xlat   BYTE PTR ds:[ebx]
  4067c6:	push   0xf
  4067c8:	push   ecx
  4067c9:	pop    es
  4067ca:	dec    eax
  4067cb:	lock test BYTE PTR [ecx],al
  4067ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067cf:	or     ebx,DWORD PTR [ecx-0x37d12fe]
  4067d5:	pop    ebx
  4067d6:	cld    
  4067d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067d8:	les    esp,FWORD PTR [edi]
  4067da:	ss leave 
  4067dc:	retf   
  4067dd:	fbld   TBYTE PTR [ecx+0x78bce3c]
  4067e3:	xchg   edx,eax
  4067e4:	sub    BYTE PTR ds:0xdc64dd35,0xd3
  4067eb:	popa   
  4067ec:	adc    DWORD PTR [ebp+0x36794909],ebp
  4067f2:	pop    ds
  4067f3:	in     al,0x2d
  4067f5:	push   0xffffffe7
  4067f7:	out    dx,eax
  4067f8:	jp     0x4067b5
  4067fa:	sbb    ah,BYTE PTR [edx+0x44]
  4067fd:	mov    ecx,0xce858d0f
  406802:	or     esp,esi
  406804:	mov    al,0x6
  406806:	lods   ax,WORD PTR ds:[esi]
  406808:	test   BYTE PTR [eax-0x11f7abc9],dh
  40680e:	inc    edx
  40680f:	daa    
  406810:	xor    BYTE PTR [eax],0xad
  406813:	inc    edx
  406814:	icebp  
  406815:	imul   ebx,DWORD PTR [edx],0xffffffeb
  406818:	hlt    
  406819:	xchg   edi,eax
  40681a:	sub    bl,BYTE PTR ds:0xb812e442
  406820:	push   edi
  406821:	push   0x156da40
  406826:	into   
  406827:	cli    
  406828:	scas   eax,DWORD PTR es:[edi]
  406829:	fcomp  DWORD PTR [edi+0x1b7d9bfc]
  40682f:	daa    
  406830:	mov    cl,0xf4
  406832:	ds enter 0xc304,0x1
  406837:	lods   eax,DWORD PTR ds:[esi]
  406838:	(bad)  [ecx+0x2]
  40683b:	sub    DWORD PTR [ecx-0x4170828b],esi
  406841:	call   FWORD PTR [edi]
  406843:	sbb    bh,BYTE PTR [esi+0x4701b066]
  406849:	sub    al,0xf3
  40684b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40684c:	sbb    DWORD PTR [ebp-0x6bbb8af1],esp
  406852:	scas   eax,DWORD PTR es:[edi]
  406853:	xor    al,0xcd
  406855:	cs push edi
  406857:	push   ecx
  406858:	sar    BYTE PTR [edi-0x71d04737],0xa9
  40685f:	or     al,al
  406861:	sub    ebp,DWORD PTR [ebp+0x29]
  406864:	push   esi
  406865:	mov    bh,0xa8
  406867:	fisttp QWORD PTR [eax+0x72ebdc2d]
  40686d:	jnp    0x4067fc
  40686f:	mov    ds:0x2408d28,eax
  406874:	gs inc ebp
  406876:	mov    ecx,0xb3250ee2
  40687b:	and    ebx,esp
  40687d:	or     BYTE PTR [ecx],ch
  40687f:	sbb    eax,0x651e5089
  406884:	stos   BYTE PTR es:[edi],al
  406885:	fst    QWORD PTR [ecx+0x68]
  406888:	xor    DWORD PTR [esi+ecx*8+0x7e9a13dc],edx
  40688f:	mov    cl,0x21
  406891:	push   0xab30e05e
  406896:	push   ecx
  406897:	cmp    al,0x36
  406899:	dec    edx
  40689a:	jo     0x4068dc
  40689c:	(bad)  
  40689e:	sbb    BYTE PTR [eax+0x2b],0x10
  4068a2:	out    dx,al
  4068a3:	mov    DWORD PTR [esi+edi*1-0x36bc28e2],esi
  4068aa:	and    eax,DWORD PTR [ecx-0x6bc87a46]
  4068b0:	mov    DWORD PTR [esi-0x35],edx
  4068b3:	adc    edi,DWORD PTR [ebp+0xa2ba5d3]
  4068b9:	inc    edx
  4068ba:	xchg   ebx,eax
  4068bb:	sub    ebx,DWORD PTR [edi-0x54919856]
  4068c1:	popa   
  4068c2:	add    al,0xc5
  4068c4:	mov    cs,WORD PTR ds:0xb4ad7301
  4068ca:	sub    al,0xdf
  4068cc:	scas   eax,DWORD PTR es:[edi]
  4068cd:	stc    
  4068ce:	jns    0x406882
  4068d0:	sub    bh,dl
  4068d2:	jb     0x406907
  4068d4:	sub    eax,0xc623e910
  4068d9:	adc    bl,BYTE PTR [edi+0x516f7eed]
  4068df:	xor    ch,al
  4068e1:	xor    DWORD PTR [eax-0x24def377],esp
  4068e7:	cld    
  4068e8:	std    
  4068e9:	rcl    BYTE PTR [ebx+0x7b2af0b9],1
  4068ef:	jne    0x40688b
  4068f1:	jae    0x40689f
  4068f3:	mov    BYTE PTR [ebp+edi*8+0x5e],al
  4068f7:	scas   al,BYTE PTR es:[edi]
  4068f8:	ret    
  4068f9:	push   ds
  4068fa:	fwait
  4068fb:	jmp    DWORD PTR [esi+0xf]
  4068fe:	inc    esi
  4068ff:	add    BYTE PTR [esi],ah
  406901:	retfw  
  406903:	test   al,0x31
  406905:	int    0xf3
  406907:	add    al,0x46
  406909:	pop    edx
  40690a:	out    dx,eax
  40690b:	mov    ecx,0x50e9ef20
  406910:	xchg   ebx,eax
  406911:	fisub  WORD PTR [edx+ebp*2]
  406915:	and    al,cl
  406917:	pop    eax
  406918:	in     eax,0xa
  40691a:	dec    BYTE PTR [eax+0x6004184]
  406920:	lds    ebx,FWORD PTR [esi-0x10]
  406923:	outs   dx,BYTE PTR ds:[esi]
  406924:	inc    edx
  406925:	sub    bl,BYTE PTR [ebp-0x7ac20201]
  40692b:	daa    
  40692c:	or     eax,0x5e7826f2
  406931:	inc    eax
  406932:	mov    ecx,eax
  406934:	hlt    
  406935:	xlat   BYTE PTR ds:[ebx]
  406936:	xchg   esi,eax
  406937:	popf   
  406938:	stos   BYTE PTR es:[edi],al
  406939:	(bad)  
  40693b:	and    esi,DWORD PTR [ecx-0x2ae029fd]
  406941:	xlat   BYTE PTR ds:[ebx]
  406942:	jp     0x40698f
  406944:	es xchg ebp,eax
  406946:	mov    bh,0x1f
  406948:	ss test eax,0x9c79502a
  40694e:	ret    0x2
  406951:	sub    eax,DWORD PTR [edi+edx*4-0x3c]
  406955:	retf   
  406956:	jne    0x4068d9
  406958:	ds je  0x4069b9
  40695b:	or     al,0x1
  40695d:	sbb    ebx,DWORD PTR [esi+0x795ae849]
  406963:	lods   al,BYTE PTR ds:[esi]
  406964:	xchg   esp,eax
  406965:	pusha  
  406966:	sahf   
  406967:	push   eax
  406968:	or     al,0x6f
  40696a:	push   ds
  40696b:	xor    BYTE PTR es:[eax+0x3c],bl
  40696f:	xlat   BYTE PTR ds:[ebx]
  406970:	loope  0x406969
  406972:	xchg   BYTE PTR [edi-0x3c],ah
  406975:	cmp    bh,BYTE PTR [ebp-0x18fdef4c]
  40697b:	xchg   esp,eax
  40697c:	mov    dh,0x97
  40697e:	int3   
  40697f:	dec    ebx
  406980:	dec    ebx
  406981:	bound  ebp,QWORD PTR [ebx+0xc2a323]
  406987:	stos   BYTE PTR es:[edi],al
  406988:	(bad)  
  40698a:	push   cs
  40698b:	cmp    bl,BYTE PTR ds:0xdc946d7
  406991:	xchg   edi,eax
  406992:	inc    eax
  406993:	stos   BYTE PTR es:[edi],al
  406994:	xlat   BYTE PTR ds:[ebx]
  406995:	or     BYTE PTR [esi-0x4c],bh
  406998:	ror    BYTE PTR [edx+0x3d2ef8ff],cl
  40699e:	sar    ebp,1
  4069a0:	push   ds
  4069a1:	je     0x40698f
  4069a3:	push   0xade9cc83
  4069a8:	add    DWORD PTR [ecx*4+0x34ecd3a1],ebp
  4069af:	or     al,0x4e
  4069b1:	and    al,0x95
  4069b3:	out    0xf0,eax
  4069b5:	sbb    al,dl
  4069b7:	dec    edi
  4069b8:	fs inc edi
  4069ba:	test   al,0xcc
  4069bc:	ffree  st(3)
  4069be:	mov    ss,WORD PTR [esi+esi*8+0x1473dfc0]
  4069c5:	sub    al,0x99
  4069c7:	stos   BYTE PTR es:[edi],al
  4069c8:	mov    dl,0x5
  4069ca:	loop   0x4069a4
  4069cc:	jnp    0x4069b0
  4069ce:	cld    
  4069cf:	mov    ds:0xd907b26,al
  4069d4:	mov    ebp,0x3ab51957
  4069d9:	jb     0x4069f9
  4069db:	jb     0x4069d7
  4069dd:	push   ds
  4069de:	adc    al,0xa6
  4069e0:	mov    dl,0x5b
  4069e2:	adc    al,0x53
  4069e4:	cld    
  4069e5:	sub    DWORD PTR [ebp-0x79],edi
  4069e8:	jp     0x4069c7
  4069ea:	push   ss
  4069eb:	sbb    cl,ch
  4069ed:	pop    esp
  4069ee:	cmp    DWORD PTR [edi],eax
  4069f0:	adc    BYTE PTR [eax+0x1179a09c],dh
  4069f6:	js     0x4069ed
  4069f8:	leave  
  4069f9:	out    0x7e,al
  4069fb:	jns    0x40699f
  4069fd:	xor    bh,ch
  4069ff:	scas   eax,DWORD PTR es:[edi]
  406a00:	cwde   
  406a01:	push   esp
  406a02:	ret    
  406a03:	pop    ebx
  406a04:	cmc    
  406a05:	leave  
  406a06:	(bad)  
  406a07:	xchg   esp,eax
  406a08:	sbb    eax,0xb1dd5a3f
  406a0d:	mov    dh,0x68
  406a0f:	or     cl,0x75
  406a12:	addr16 push cs
  406a14:	rol    DWORD PTR [eax+0x1],0xb1
  406a18:	xchg   bl,cl
  406a1a:	push   ecx
  406a1b:	into   
  406a1c:	pusha  
  406a1d:	lods   eax,DWORD PTR ds:[esi]
  406a1e:	add    eax,0x1414aba1
  406a23:	jl     0x406a32
  406a25:	pushf  
  406a26:	into   
  406a27:	mov    al,0x2f
  406a29:	int3   
  406a2a:	mov    ?,WORD PTR [edx+0xf]
  406a2d:	add    dl,al
  406a2f:	test   eax,0x963cbeef
  406a34:	lock and bh,dh
  406a37:	cmp    DWORD PTR [ebx-0x59],ecx
  406a3a:	or     BYTE PTR gs:[edx-0x7e],dh
  406a3e:	push   cs
  406a3f:	mov    eax,ds:0x202fcb5f
  406a44:	(bad)  
  406a45:	sbb    eax,0x6be234f7
  406a4a:	(bad)  
  406a4b:	adc    al,dh
  406a4d:	cs xchg ebx,eax
  406a4f:	xor    DWORD PTR [ebp+0x177d492a],ebp
  406a55:	repz cmp al,0xe4
  406a58:	mov    WORD PTR ds:0xaabd6443,?
  406a5e:	sub    BYTE PTR [edx],0x43
  406a61:	(bad)  
  406a62:	lahf   
  406a63:	dec    esp
  406a64:	(bad)  
  406a66:	cld    
  406a67:	dec    ecx
  406a68:	mov    ch,0x5a
  406a6a:	and    ebp,DWORD PTR [eax-0x737d7b4a]
  406a70:	stos   DWORD PTR es:[edi],eax
  406a71:	hlt    
  406a72:	scas   eax,DWORD PTR es:[edi]
  406a73:	pop    esi
  406a74:	inc    edi
  406a75:	(bad)  
  406a77:	imul   ecx,edi,0x7e
  406a7a:	test   al,0x2e
  406a7c:	test   BYTE PTR ds:0x22c65a63,0x8c
  406a83:	jno    0x406a87
  406a85:	jg     0x406a37
  406a87:	jge    0x406ae6
  406a89:	and    al,0x6c
  406a8b:	pushf  
  406a8c:	add    edi,esi
  406a8e:	hlt    
  406a8f:	and    al,0x8a
  406a91:	pop    edx
  406a92:	xchg   ebx,eax
  406a93:	sti    
  406a94:	sub    BYTE PTR ds:0xb9a44a07,dh
  406a9a:	cmp    BYTE PTR [ecx+0x76],dh
  406a9d:	iret   
  406a9e:	mov    esi,0xff0c42b5
  406aa3:	dec    esi
  406aa4:	mov    esi,0xbd8ce692
  406aa9:	sbb    DWORD PTR [eax+0x3b],ecx
  406aac:	add    esi,ebp
  406aae:	fild   QWORD PTR [ebp+0x1e1ff1b0]
  406ab4:	call   0xffbe5ce7
  406ab9:	sbb    BYTE PTR [edx],ah
  406abb:	xchg   BYTE PTR [ebx+0x68],dl
  406abe:	pop    ds
  406abf:	into   
  406ac0:	rcl    DWORD PTR [ebp-0x4c],1
  406ac3:	call   0x389a:0x45417c46
  406aca:	jmp    0x3cd9:0x27a7eab3
  406ad1:	leave  
  406ad2:	popa   
  406ad3:	jl     0x406abe
  406ad5:	fidiv  DWORD PTR ds:0x790e2d86
  406adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406adc:	loop   0x406a9f
  406ade:	xchg   esi,eax
  406adf:	push   0x49
  406ae1:	ficom  DWORD PTR [ecx-0x1]
  406ae4:	xchg   edx,eax
  406ae5:	inc    edi
  406ae6:	ds xchg esi,eax
  406ae9:	int3   
  406aea:	inc    edx
  406aeb:	pop    ecx
  406aec:	jge    0x406a82
  406aee:	repz loop 0x406b14
  406af1:	call   0x1bc5e4bb
  406af6:	fnstcw WORD PTR [ecx+eiz*2+0x7913ab89]
  406afd:	fwait
  406afe:	fwait
  406aff:	xor    eax,0x6e5e4aec
  406b04:	adc    DWORD PTR [ebx-0x6a],ebp
  406b07:	dec    eax
  406b08:	stos   DWORD PTR es:[edi],eax
  406b09:	retf   0x31ba
  406b0c:	into   
  406b0d:	repnz inc edi
  406b0f:	push   esp
  406b10:	enter  0x5b92,0xe1
  406b14:	mov    edx,0x62b0080e
  406b19:	push   edx
  406b1a:	push   0x21839460
  406b1f:	jns    0x406b83
  406b21:	jne    0x406ba0
  406b23:	pop    esi
  406b24:	mov    ebx,esi
  406b26:	xchg   DWORD PTR [ebp+0x77],ebp
  406b29:	sub    DWORD PTR [edi],edi
  406b2b:	out    0xf0,eax
  406b2d:	inc    eax
  406b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b2f:	mov    al,0xab
  406b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b32:	test   al,0x3e
  406b34:	xor    al,0xcc
  406b36:	retf   0x24ff
  406b39:	(bad)  [eax]
  406b3b:	dec    edi
  406b3c:	stc    
  406b3d:	pop    ebp
  406b3e:	mov    al,ds:0xd1200613
  406b43:	ret    
  406b44:	test   DWORD PTR [ebx],eax
  406b46:	add    al,0xc0
  406b48:	call   0x2c16:0xe3033227
  406b4f:	add    DWORD PTR ds:0x92294e88,ecx
  406b55:	pop    ebx
  406b56:	in     eax,0x6f
  406b58:	sub    ch,0x77
  406b5b:	imul   BYTE PTR ds:0xc60e8157
  406b61:	and    ch,BYTE PTR [ecx]
  406b63:	push   edi
  406b64:	add    ebp,ecx
  406b66:	fbstp  TBYTE PTR [ebp-0x1a274bb1]
  406b6c:	repz dec esi
  406b6e:	fisubr DWORD PTR [ebx+0x1e]
  406b71:	mov    dh,ch
  406b73:	sub    al,BYTE PTR [edx]
  406b75:	std    
  406b76:	mov    bl,0x11
  406b78:	loopne 0x406b3c
  406b7a:	xor    ch,BYTE PTR [ecx+edx*4]
  406b7d:	pop    ds
  406b7e:	fst    QWORD PTR [eax+0x15130815]
  406b84:	jecxz  0x406b0f
  406b86:	lea    eax,[ecx]
  406b88:	in     eax,0xc
  406b8a:	call   0xf03c2da2
  406b8f:	sub    BYTE PTR [eax],bl
  406b91:	cmp    BYTE PTR [ebp-0x8f3ca45],dl
  406b97:	fucomi st,st(0)
  406b99:	xchg   DWORD PTR ds:0x74b68b1b,esp
  406b9f:	add    cl,cl
  406ba1:	ins    DWORD PTR es:[edi],dx
  406ba2:	gs jecxz 0x406b62
  406ba5:	mov    eax,ds:0x57d0562e
  406baa:	loopne 0x406bec
  406bac:	shr    DWORD PTR [ecx],0xf9
  406baf:	sub    dh,ch
  406bb1:	pop    ds
  406bb2:	es ja  0x406b6f
  406bb5:	pusha  
  406bb6:	ret    
  406bb7:	imul   eax,DWORD PTR [ebp-0x2a],0x466c5925
  406bbe:	mov    ah,0xe3
  406bc0:	test   DWORD PTR [ecx+0x6a],ebx
  406bc3:	mov    esp,0xefcbd721
  406bc8:	out    dx,al
  406bc9:	mov    edi,db7
  406bcc:	mov    ebx,0xe76bca1c
  406bd1:	mov    WORD PTR [ebp+0x1d],?
  406bd4:	cmp    DWORD PTR [ebx-0x29ac6b8a],0x21aebc21
  406bde:	fst    QWORD PTR [ecx+eax*4+0x23]
  406be2:	jle    0x406c37
  406be4:	sub    eax,0x1a441e1f
  406be9:	and    al,0x60
  406beb:	cmp    al,0x3b
  406bed:	mov    ah,0xf5
  406bef:	xlat   BYTE PTR ds:[ebx]
  406bf0:	push   ss
  406bf1:	ret    0xa3f8
  406bf4:	ja     0x406c1f
  406bf6:	inc    esp
  406bf7:	jb     0x406bdb
  406bf9:	das    
  406bfa:	(bad)  
  406bfb:	mov    ebx,0x3e3177e5
  406c00:	(bad)  
  406c02:	add    al,0xd
  406c04:	cdq    
  406c05:	int3   
  406c06:	jno    0x406bbd
  406c08:	dec    edi
  406c09:	push   ss
  406c0a:	sbb    DWORD PTR [ecx],esp
  406c0c:	sub    al,0xb5
  406c0e:	inc    ebx
  406c0f:	add    esi,edi
  406c11:	xor    al,0x2b
  406c13:	jmp    0x406bbf
  406c15:	inc    esp
  406c16:	xbegin 0x64e8a586
  406c1c:	in     eax,dx
  406c1d:	dec    eax
  406c1e:	mov    eax,ds:0x2dae1083
  406c23:	sub    BYTE PTR [edi-0x35df5469],al
  406c29:	sbb    esp,DWORD PTR [ebp-0x78]
  406c2c:	js     0x406c4f
  406c2e:	bound  ecx,QWORD PTR [eax+0x20]
  406c31:	outs   dx,BYTE PTR ds:[esi]
  406c32:	idiv   esp
  406c34:	push   ebx
  406c35:	out    dx,eax
  406c36:	inc    edi
  406c37:	jno    0x406c1d
  406c39:	jle    0x406c19
  406c3b:	dec    ebp
  406c3c:	mov    ebx,DWORD PTR [edx+edx*1-0x7b4a82f0]
  406c43:	jl     0x406bd2
  406c45:	mov    ch,0xd0
  406c47:	test   al,0xd8
  406c49:	fdivr  QWORD PTR fs:[eax+0x6c]
  406c4d:	pop    ebp
  406c4e:	inc    eax
  406c4f:	lock ins DWORD PTR es:[edi],dx
  406c51:	mov    eax,ss:0x8fbdea15
  406c57:	cmp    ebp,DWORD PTR [ebp-0x11dba4a6]
  406c5d:	retf   
  406c5e:	lock or ebx,esp
  406c61:	fbstp  TBYTE PTR [edx-0xce83610]
  406c67:	mov    ah,BYTE PTR [ebx+0x1d]
  406c6a:	mov    DWORD PTR [ebp+0x7f3bc6d],edi
  406c70:	mov    ecx,0x1d35f225
  406c75:	lods   eax,DWORD PTR ds:[esi]
  406c76:	inc    ebx
  406c77:	jg     0x406cda
  406c79:	das    
  406c7a:	jge    0x406c67
  406c7c:	xchg   ecx,eax
  406c7d:	fbstp  TBYTE PTR es:[eax-0x6c3c0cfd]
  406c84:	loop   0x406ce0
  406c86:	sbb    BYTE PTR [ecx-0x1f],bh
  406c89:	(bad)  
  406c8a:	push   edx
  406c8b:	sub    ebx,DWORD PTR [ebp-0x39]
  406c8e:	pop    edi
  406c8f:	pop    edi
  406c90:	push   ecx
  406c91:	mov    al,ds:0xb288c179
  406c96:	mov    ds:0x52467742,al
  406c9b:	stos   BYTE PTR es:[di],al
  406c9d:	dec    edx
  406c9e:	sar    BYTE PTR [eax+0x3a21955f],1
  406ca4:	or     bh,dl
  406ca6:	mov    gs,WORD PTR [edi]
  406ca8:	int    0xbc
  406caa:	add    BYTE PTR [ebp-0x2c],bl
  406cad:	dec    ecx
  406cae:	cmpxchg DWORD PTR [edx],ecx
  406cb1:	stos   DWORD PTR es:[edi],eax
  406cb2:	push   ecx
  406cb3:	ror    DWORD PTR [eax-0x2f],0x5a
  406cb7:	(bad)  
  406cb8:	fisttp DWORD PTR [edx+0x376279bf]
  406cbe:	fnstsw WORD PTR [ebx+0x30]
  406cc1:	test   al,0x23
  406cc3:	fistp  WORD PTR [eax+0x4834bf40]
  406cc9:	add    bh,BYTE PTR [ecx-0x33dc5648]
  406ccf:	popf   
  406cd0:	push   ecx
  406cd1:	std    
  406cd2:	adc    al,0x95
  406cd4:	(bad)  
  406cd5:	test   al,0x61
  406cd7:	loop   0x406d13
  406cd9:	(bad)  
  406cda:	mov    cl,0xf7
  406cdc:	fistp  WORD PTR [esi]
  406cde:	pop    es
  406cdf:	adc    dh,BYTE PTR [ecx-0x53]
  406ce2:	pop    edi
  406ce3:	sub    bh,BYTE PTR [ebx]
  406ce5:	cmovno ebx,DWORD PTR [si-0x2e]
  406cea:	sahf   
  406ceb:	test   DWORD PTR [esi+0x42],eax
  406cee:	xchg   ebp,eax
  406cef:	pop    edi
  406cf0:	mov    cl,0x6e
  406cf2:	sbb    al,BYTE PTR [ebp+0x49a23519]
  406cf8:	jmp    0xbffb:0x2b936270
  406cff:	jno    0x406c90
  406d01:	xlat   BYTE PTR ds:[ebx]
  406d02:	test   DWORD PTR [edi+ebp*8],esi
  406d05:	mov    esp,0x448e401f
  406d0a:	nop
  406d0b:	mov    bl,0xcd
  406d0d:	test   esi,0xdbffd9e1
  406d13:	in     al,dx
  406d14:	or     ebp,DWORD PTR [ecx-0x1abe3004]
  406d1a:	or     DWORD PTR [ebx+0x4f1a4ee0],eax
  406d20:	cdq    
  406d21:	or     eax,DWORD PTR [ebp+0x3af41a20]
  406d27:	imul   eax,DWORD PTR [ebp+0x5c],0x2e542381
  406d2e:	mov    ebx,0x4b066ad2
  406d33:	pop    ss
  406d34:	push   ebp
  406d35:	inc    BYTE PTR [esi]
  406d37:	mov    ch,0xbe
  406d39:	xor    DWORD PTR [eax-0x40],esp
  406d3c:	loope  0x406d09
  406d3e:	sti    
  406d3f:	retf   0x6af7
  406d42:	mov    dh,0xf6
  406d44:	dec    ecx
  406d45:	out    dx,al
  406d46:	fld    QWORD PTR [ecx]
  406d48:	xchg   esi,eax
  406d49:	jmp    0x1e5e:0x8cf83177
  406d50:	mov    ds:0x4798625a,eax
  406d55:	dec    edi
  406d56:	in     al,dx
  406d57:	aam    0xa0
  406d59:	pop    edx
  406d5a:	mov    bl,0x7d
  406d5c:	jns    0x406db1
  406d5e:	fld    DWORD PTR [ecx+0x153a8f7b]
  406d64:	xchg   esp,eax
  406d65:	dec    edx
  406d66:	inc    ebx
  406d67:	test   BYTE PTR [esi-0x6ed13ac7],bh
  406d6d:	les    ebx,FWORD PTR [ebp-0x20]
  406d70:	cwde   
  406d71:	je     0x406d8c
  406d73:	test   BYTE PTR [edi+0x6b6b6f0b],0xab
  406d7a:	aaa    
  406d7b:	push   0xbf9a9dfc
  406d80:	addr16 pop esp
  406d82:	xchg   esi,eax
  406d83:	mov    ebx,0x58b3f60c
  406d88:	jp     0x406db5
  406d8a:	aas    
  406d8b:	dec    esi
  406d8c:	cmp    BYTE PTR [ebx+0xd0d577],ah
  406d92:	inc    edx
  406d93:	fidiv  WORD PTR [edx-0x1e2144c3]
  406d99:	sbb    dh,BYTE PTR [edx-0x2b]
  406d9c:	sbb    dh,cl
  406d9e:	mov    eax,ds:0x674acc0f
  406da3:	pop    edx
  406da4:	sub    edx,esi
  406da6:	mov    dl,0x51
  406da8:	div    ebp
  406daa:	push   cs
  406dab:	inc    ebp
  406dac:	mov    esi,0xd12f6812
  406db1:	xchg   esp,eax
  406db2:	push   ds
  406db3:	adc    BYTE PTR [esi+0x6539cead],cl
  406db9:	gs cli 
  406dbb:	leave  
  406dbc:	retf   
  406dbd:	mov    dl,0x98
  406dbf:	xchg   ebp,eax
  406dc0:	sbb    al,0xc
  406dc2:	test   ecx,0xe60a4962
  406dc8:	pop    es
  406dc9:	mov    ebp,0x63d45f77
  406dce:	adc    DWORD PTR [ebx-0x14],ecx
  406dd1:	scas   eax,DWORD PTR es:[edi]
  406dd2:	dec    edx
  406dd3:	retf   
  406dd4:	cwde   
  406dd5:	and    bh,cl
  406dd7:	or     bh,BYTE PTR [ecx]
  406dd9:	adc    eax,0xb732f455
  406dde:	mov    cl,0x36
  406de0:	push   ss
  406de1:	lock cmp bl,BYTE PTR [ecx+esi*1-0x59e52c74]
  406de9:	jmp    0x406e5c
  406deb:	xor    edi,DWORD PTR [edx+0x57]
  406dee:	cmc    
  406def:	hlt    
  406df0:	mov    esi,0xc040e9d4
  406df5:	fstp   DWORD PTR [edi-0x694a0eec]
  406dfb:	mov    WORD PTR [ebp+ebp*4-0x78],ds
  406dff:	add    al,0x7f
  406e01:	call   0xa72:0x39390911
  406e08:	scas   eax,DWORD PTR es:[edi]
  406e09:	xchg   edx,eax
  406e0a:	cli    
  406e0b:	data16 fld TBYTE PTR [edx+0x8970e5d]
  406e12:	imul   edi,ecx,0xffffffe8
  406e15:	xchg   ecx,eax
  406e16:	sub    eax,0xcaa20366
  406e1b:	test   eax,0x32602369
  406e20:	aad    0xbd
  406e22:	and    al,0x25
  406e24:	push   ebx
  406e25:	cmc    
  406e26:	pop    edi
  406e27:	add    al,0xbc
  406e29:	seta   BYTE PTR [edi-0x6b9742cd]
  406e30:	cli    
  406e31:	test   al,0x44
  406e33:	jmp    0x406e8b
  406e35:	aad    0x75
  406e37:	mov    esp,0xf7c62a5c
  406e3c:	aaa    
  406e3d:	xor    eax,0xa9f3b994
  406e42:	mov    bl,0xb0
  406e44:	push   esi
  406e45:	rcl    ecx,0x5d
  406e48:	loop   0x406e65
  406e4a:	ja     0x406e88
  406e4c:	out    0xf6,eax
  406e4e:	sub    eax,0xe20b8c91
  406e53:	mov    ebx,ss
  406e55:	shl    DWORD PTR [ebp-0x1111a631],1
  406e5b:	out    dx,al
  406e5c:	and    al,0xa
  406e5e:	ror    BYTE PTR [ebp+0x58e4c14a],0xb7
  406e65:	inc    edx
  406e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e67:	adc    esi,DWORD PTR [edx]
  406e69:	jb     0x406eb1
  406e6b:	sbb    eax,0xa29bab1b
  406e70:	(bad)  
  406e71:	hlt    
  406e72:	retf   
  406e73:	int3   
  406e74:	mov    edx,edi
  406e76:	mov    eax,0x4db958f6
  406e7b:	(bad)  
  406e7d:	jmp    0xe338ca13
  406e82:	adc    BYTE PTR [eax+0x7c03eccd],bh
  406e88:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  406e8a:	fwait
  406e8b:	dec    ebp
  406e8c:	rol    BYTE PTR [eax-0x3de22bcb],0xdb
  406e93:	jo     0x406eb3
  406e95:	scas   eax,DWORD PTR es:[edi]
  406e96:	sbb    eax,DWORD PTR [ebx-0x3323eb82]
  406e9c:	push   ebp
  406e9d:	aad    0x6c
  406e9f:	jmp    0x406ee0
  406ea1:	hlt    
  406ea2:	adc    BYTE PTR [ecx-0x6fc421a7],cl
  406ea8:	xchg   BYTE PTR ds:0x32bbc8ed,al
  406eae:	xchg   BYTE PTR [ecx],cl
  406eb0:	mov    cl,0xc1
  406eb2:	push   eax
  406eb3:	push   esi
  406eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb5:	xchg   ebp,eax
  406eb6:	lds    esp,FWORD PTR [ebx+0x67]
  406eb9:	outs   dx,BYTE PTR ds:[esi]
  406eba:	inc    eax
  406ebb:	push   esi
  406ebc:	or     al,0xd0
  406ebe:	icebp  
  406ebf:	stos   DWORD PTR es:[edi],eax
  406ec0:	sbb    al,0xa
  406ec2:	fisubr WORD PTR [edx+esi*4]
  406ec5:	shl    BYTE PTR [eax],1
  406ec7:	mov    DWORD PTR [edx],ebx
  406ec9:	cli    
  406eca:	sahf   
  406ecb:	popa   
  406ecc:	cmp    DWORD PTR [esi-0x352f26fe],edi
  406ed2:	push   0x4fdf9187
  406ed7:	push   0xfffffff7
  406ed9:	push   esp
  406eda:	repz mov fs,eax
  406edd:	inc    edi
  406ede:	ins    BYTE PTR es:[edi],dx
  406edf:	movd   mm4,DWORD PTR [edx-0x51]
  406ee3:	sub    al,BYTE PTR [eax+0x48]
  406ee6:	jecxz  0x406f34
  406ee8:	outs   dx,DWORD PTR ds:[esi]
  406ee9:	pop    es
  406eea:	bound  ebp,QWORD PTR [edi-0x6552526d]
  406ef0:	sbb    BYTE PTR [eax+0x5d],dl
  406ef3:	xchg   ebp,eax
  406ef4:	push   esi
  406ef5:	ror    BYTE PTR [edx+0xc00c6a8],1
  406efb:	lods   al,BYTE PTR ds:[esi]
  406efc:	mov    esp,DWORD PTR [edi]
  406efe:	pop    esp
  406eff:	scas   al,BYTE PTR es:[edi]
  406f00:	lods   al,BYTE PTR ds:[esi]
  406f01:	ss mov ecx,0x3f6d4a69
  406f07:	loope  0x406ebf
  406f09:	add    DWORD PTR [edx-0x5c],esi
  406f0c:	xchg   esp,eax
  406f0d:	mov    esp,0xb1f76b0e
  406f12:	call   0xe016:0x42058a70
  406f19:	inc    esp
  406f1a:	sbb    BYTE PTR [esi],ch
  406f1c:	sub    eax,0x36097077
  406f21:	rol    BYTE PTR [edi-0x1b],1
  406f24:	cmp    esi,edi
  406f26:	fcom   DWORD PTR [edx+0x61]
  406f29:	inc    esi
  406f2a:	fucomp st(6)
  406f2c:	push   ds
  406f2d:	fwait
  406f2e:	test   BYTE PTR [eax],al
  406f30:	ja     0x406faa
  406f32:	sub    esi,DWORD PTR [edi-0x66]
  406f35:	push   0x55b090b
  406f3a:	push   ss
  406f3b:	push   cs
  406f3c:	pusha  
  406f3d:	fdiv   QWORD PTR [ebp+0x5358c703]
  406f43:	jmp    0xfc5076b1
  406f48:	mov    cl,0xe2
  406f4a:	sar    ecx,1
  406f4c:	push   ebx
  406f4d:	ror    BYTE PTR [esi+0x8],cl
  406f50:	xlat   BYTE PTR ds:[ebx]
  406f51:	mov    bh,0xca
  406f53:	icebp  
  406f54:	nop
  406f55:	test   esp,esp
  406f57:	xchg   edx,eax
  406f58:	(bad)  
  406f59:	ins    DWORD PTR es:[edi],dx
  406f5a:	inc    ecx
  406f5b:	cmp    eax,0x9f22a4c9
  406f60:	inc    ecx
  406f61:	pop    esp
  406f62:	cmp    al,dl
  406f64:	out    0x2e,al
  406f66:	test   DWORD PTR [ebx],eax
  406f68:	push   edi
  406f69:	or     DWORD PTR [ebx+ebx*8+0x1e0597ca],ebp
  406f70:	jmp    0x406f9d
  406f72:	fprem  
  406f74:	or     edx,DWORD PTR [eax-0x2972f54b]
  406f7a:	jecxz  0x406fae
  406f7c:	(bad)  
  406f7e:	xor    DWORD PTR [eax+0x36],edx
  406f81:	sar    DWORD PTR [ecx+0x4e],0x21
  406f85:	pop    ss
  406f86:	fadd   QWORD PTR [eax]
  406f88:	xor    edi,esp
  406f8a:	mov    al,ds:0x8bf88b27
  406f8f:	jb     0x406fcb
  406f91:	mov    ch,0xdb
  406f93:	and    DWORD PTR [edx+0x2a],eax
  406f96:	mov    dl,0x9e
  406f98:	inc    ebx
  406f99:	shl    bh,0xad
  406f9c:	imul   ecx,DWORD PTR [edi+0x66ab45e2],0xffffff92
  406fa3:	pop    ebp
  406fa4:	adc    BYTE PTR [eax+0x5e56352],bh
  406faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fab:	fldenv [eax+0x6a908dd7]
  406fb1:	jne    0x407019
  406fb3:	push   ds
  406fb4:	or     al,0xdd
  406fb6:	jg     0x406fff
  406fb8:	jp     0x406fa8
  406fba:	sub    cl,BYTE PTR [ebp-0x3d]
  406fbd:	cmp    al,0xeb
  406fbf:	sbb    DWORD PTR [edx+0x7c661f4b],0x36088341
  406fc9:	into   
  406fca:	inc    ecx
  406fcb:	sub    BYTE PTR [ecx-0x38],bh
  406fce:	sub    ebx,DWORD PTR [eax+0x15]
  406fd1:	daa    
  406fd2:	mov    al,0xe6
  406fd4:	ror    DWORD PTR [ebp*1-0x7d4e0366],0xb
  406fdc:	and    dl,dh
  406fde:	inc    esp
  406fdf:	sub    al,0xf7
  406fe1:	pop    esp
  406fe2:	jg     0x406fc0
  406fe4:	mov    edi,0x5f98c711
  406fe9:	ds out dx,al
  406feb:	push   esp
  406fec:	sub    bl,BYTE PTR [edi+0x28f478c0]
  406ff2:	mov    DWORD PTR ds:0x76049780,ecx
  406ff8:	mov    ch,0x5d
  406ffa:	jmp    0x406ffb
  406ffc:	sti    
  406ffd:	into   
  406ffe:	into   
  406fff:	neg    BYTE PTR [ecx-0x5cb87c73]
  407005:	inc    esi
  407006:	sbb    ebp,DWORD PTR [edx+0x276ee7bd]
  40700c:	cmp    ch,dl
  40700e:	jb     0x40702f
  407010:	mov    cl,0xa
  407012:	arpl   WORD PTR [ecx-0x296f2d82],di
  407018:	ins    BYTE PTR es:[edi],dx
  407019:	adc    al,0xb
  40701b:	retf   
  40701c:	lock loop 0x40702e
  40701f:	mov    bl,0xcb
  407021:	call   0xc16f:0x95bbac8d
  407028:	add    cl,BYTE PTR es:[ecx-0x21]
  40702c:	sbb    eax,DWORD PTR [edx-0x3b]
  40702f:	mov    bl,0xba
  407031:	mov    DWORD PTR [eax],ebx
  407033:	fs pop edi
  407035:	adc    al,al
  407037:	repz (bad) 
  407039:	mov    dh,0x4c
  40703b:	lea    cx,ds:0xc5a37687
  407042:	popa   
  407043:	ins    DWORD PTR es:[edi],dx
  407044:	fnsave [edi-0x14be70ac]
  40704a:	push   ds
  40704b:	out    0xd7,al
  40704d:	mov    eax,0x9a50427c
  407052:	and    eax,0xa1398cee
  407057:	ss push eax
  407059:	xchg   DWORD PTR [ebx+0x3c],ebx
  40705c:	mov    bl,0x11
  40705e:	cs ins BYTE PTR es:[edi],dx
  407060:	or     DWORD PTR [edi+0x6a],ebp
  407063:	cmp    edi,DWORD PTR [esi+0x6]
  407066:	dec    edx
  407067:	cwde   
  407068:	adc    al,0xc0
  40706a:	mov    edi,edx
  40706c:	and    edx,DWORD PTR [ecx]
  40706e:	mov    WORD PTR [ebx],?
  407070:	mov    ecx,0x151d705c
  407075:	aas    
  407076:	call   0xbd31d8a3
  40707b:	int3   
  40707c:	or     ch,dl
  40707e:	call   0x25430f01
  407083:	test   DWORD PTR [eax-0x50c648b],edi
  407089:	mov    edi,0x7c62441
  40708e:	std    
  40708f:	adc    DWORD PTR [ecx-0x76],ebx
  407092:	inc    ebp
  407093:	pusha  
  407094:	cmp    ah,bl
  407096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407097:	mov    ah,0x6f
  407099:	(bad)  
  40709a:	cmp    cl,bh
  40709c:	aas    
  40709d:	stc    
  40709e:	lods   eax,DWORD PTR ds:[esi]
  40709f:	xor    BYTE PTR [eax+0x27],dh
  4070a2:	lds    edi,FWORD PTR [edx]
  4070a4:	sub    eax,0x99c83519
  4070a9:	jnp    0x4070a3
  4070ab:	test   DWORD PTR [edx-0x27936482],ebp
  4070b1:	adc    al,0xf9
  4070b3:	dec    DWORD PTR ds:0x1b91a1dd
  4070b9:	daa    
  4070ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070bb:	stc    
  4070bc:	icebp  
  4070bd:	xchg   esi,eax
  4070be:	aad    0xb4
  4070c0:	test   DWORD PTR [esi+edx*2-0x7e9c5e77],esi
  4070c7:	and    al,0x13
  4070c9:	retf   0xaf3e
  4070cc:	push   ecx
  4070cd:	je     0x407068
  4070cf:	xor    BYTE PTR [eax],0x47
  4070d2:	cwde   
  4070d3:	(bad)  
  4070d4:	cdq    
  4070d5:	pop    ebx
  4070d6:	nop
  4070d7:	call   DWORD PTR [ebp+0x44]
  4070da:	popa   
  4070db:	das    
  4070dc:	mov    ecx,0x6227ec71
  4070e1:	jmp    0x512d:0xae4b468f
  4070e8:	clc    
  4070e9:	ror    DWORD PTR [edi-0x683d2da],1
  4070ef:	or     eax,0x3907c7d6
  4070f4:	xchg   ecx,eax
  4070f5:	inc    eax
  4070f6:	arpl   WORD PTR cs:[edx+esi*4],ax
  4070fa:	mov    ah,0xe3
  4070fc:	inc    edx
  4070fd:	mov    ecx,0xe52a1915
  407102:	sbb    eax,0xc61099ae
  407107:	outs   dx,DWORD PTR ds:[esi]
  407108:	fisub  WORD PTR [eax]
  40710a:	aaa    
  40710b:	and    ecx,edx
  40710d:	cmp    esi,esp
  40710f:	mov    es,WORD PTR [edi+ebx*8+0x7a]
  407113:	sub    DWORD PTR [ebp*4-0x3fb797a1],esi
  40711a:	dec    esi
  40711b:	in     eax,0x85
  40711d:	push   0xffffffa2
  40711f:	lods   eax,DWORD PTR ds:[esi]
  407120:	pop    ebx
  407121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407122:	dec    esp
  407123:	sbb    ecx,0x6
  407126:	pop    ecx
  407127:	jno    0x4070f8
  407129:	mov    bh,0x3d
  40712b:	adc    BYTE PTR [edx-0x2bec2a1],dl
  407131:	lods   eax,DWORD PTR ds:[esi]
  407132:	xchg   esi,eax
  407133:	sbb    eax,0xc0a68ebe
  407138:	mov    ebx,DWORD PTR [ebp-0x4c]
  40713b:	push   cs
  40713c:	aaa    
  40713d:	je     0x407171
  40713f:	cmp    BYTE PTR [eax+0x3532c236],bh
  407145:	cmp    cl,BYTE PTR [edx-0x1f]
  407148:	mov    ds:0xf3b182c5,al
  40714d:	sbb    esp,DWORD PTR [edx]
  40714f:	retf   0x352d
  407152:	xchg   edi,eax
  407153:	in     al,dx
  407154:	cli    
  407155:	inc    esp
  407156:	stc    
  407157:	ret    
  407158:	fs ja  0x4071b6
  40715b:	mov    dh,0xc3
  40715d:	push   0x49f9c876
  407162:	mov    ss,edx
  407164:	and    al,cl
  407166:	mov    dh,BYTE PTR [edx]
  407168:	add    ebp,0xffffff9f
  40716b:	(bad)  
  40716c:	jg     0x4071d8
  40716e:	ins    DWORD PTR es:[edi],dx
  40716f:	xchg   edx,eax
  407170:	stc    
  407171:	mov    ds:0xaea641ed,al
  407176:	in     eax,dx
  407177:	sbb    bh,BYTE PTR [ecx]
  407179:	add    al,0x28
  40717b:	mov    ch,0x45
  40717d:	gs add eax,0x66806701
  407183:	push   es
  407184:	xchg   ecx,eax
  407185:	retf   
  407186:	sbb    eax,0x195322de
  40718b:	mov    ds:0x2c210501,al
  407190:	sub    eax,0x2a032771
  407195:	bound  esp,QWORD PTR [eax]
  407197:	pop    ds
  407198:	sub    esi,DWORD PTR [edx-0x8]
  40719b:	shr    edi,cl
  40719d:	sub    al,0xd4
  40719f:	and    DWORD PTR [edx-0x6c],0xffffff91
  4071a3:	xor    ebp,DWORD PTR [edi]
  4071a5:	faddp  st(5),st
  4071a7:	pop    eax
  4071a8:	push   esi
  4071a9:	lock sti 
  4071ab:	(bad)  
  4071ac:	xor    ah,BYTE PTR [ebx]
  4071ae:	xor    al,0xab
  4071b0:	retf   0x17ae
  4071b3:	add    dh,BYTE PTR [esp+ebx*8]
  4071b6:	lahf   
  4071b7:	cwde   
  4071b8:	xchg   esi,eax
  4071b9:	jl     0x40718c
  4071bb:	fidiv  DWORD PTR [ebx-0x21751521]
  4071c1:	push   0xc
  4071c3:	mov    DWORD PTR [esi],esp
  4071c5:	int3   
  4071c6:	xchg   DWORD PTR [ecx],edx
  4071c8:	fadd   DWORD PTR [ebp+0x76]
  4071cb:	xor    BYTE PTR [edx],al
  4071cd:	mov    BYTE PTR [edx],al
  4071cf:	out    0xb3,eax
  4071d1:	lea    edx,[edi+edi*1+0x4d]
  4071d5:	scas   eax,DWORD PTR es:[edi]
  4071d6:	int    0x16
  4071d8:	adc    edi,ebp
  4071da:	imul   ecx,DWORD PTR [ebp+0x221b9a9e],0xffffffc0
  4071e1:	mov    esp,0x76c07bb7
  4071e6:	ret    
  4071e7:	adc    DWORD PTR [ebx],ecx
  4071e9:	test   al,0xf5
  4071eb:	lds    edx,FWORD PTR [esi+eiz*1]
  4071ee:	hlt    
  4071ef:	push   ebx
  4071f0:	ins    DWORD PTR es:[edi],dx
  4071f1:	cmp    dl,bh
  4071f3:	fnstenv [edi-0x6e010cd]
  4071f9:	call   0x85565461
  4071fe:	xchg   esi,eax
  4071ff:	test   BYTE PTR [ebp-0x63],dh
  407202:	jle    0x407195
  407204:	push   cs
  407205:	jmp    0xd61c905f
  40720a:	sub    BYTE PTR [ebp-0x6f],0xe7
  40720e:	add    DWORD PTR [ecx-0x1cb3147],ebx
  407214:	xchg   ecx,eax
  407215:	lods   eax,DWORD PTR ds:[esi]
  407216:	(bad)  
  407217:	mov    dh,ah
  407219:	ins    DWORD PTR es:[edi],dx
  40721a:	xchg   BYTE PTR [eax-0x5d],bl
  40721d:	(bad)  
  40721e:	shl    DWORD PTR [edx],1
  407220:	ror    BYTE PTR [edx-0x68],cl
  407223:	add    edx,esp
  407225:	mov    WORD PTR [edi+0x2dae9759],?
  40722b:	popa   
  40722c:	sub    al,0x2b
  40722e:	xchg   esp,eax
  40722f:	lea    ecx,[ebx-0x32bab738]
  407235:	arpl   WORD PTR [edi+0x30bc9edb],ax
  40723b:	sbb    edi,DWORD PTR [esi+eiz*1-0x602f1656]
  407242:	pop    es
  407243:	lock shl BYTE PTR [ecx+ebx*1-0x41],cl
  407248:	sbb    al,0x5e
  40724a:	push   edi
  40724b:	dec    eax
  40724c:	in     al,0xc9
  40724e:	pop    ebp
  40724f:	(bad)  
  407250:	fdiv   QWORD PTR [edx+eax*2]
  407253:	cs push DWORD PTR ss:[esi+edi*8+0xb491e80]
  40725c:	sbb    al,0x80
  40725e:	fidiv  DWORD PTR [edi-0x1678e124]
  407264:	xor    bh,dl
  407266:	cmp    eax,0xc8b56f48
  40726b:	nop
  40726c:	out    0xd7,al
  40726e:	hlt    
  40726f:	es jb  0x407239
  407272:	retf   
  407273:	jmp    0x407257
  407275:	and    al,0x53
  407277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407278:	call   0x72572839
  40727d:	or     edi,DWORD PTR [ebp-0x7e7f11d0]
  407283:	scas   eax,DWORD PTR es:[edi]
  407284:	fcom   DWORD PTR [edi-0x25]
  407287:	add    ebp,DWORD PTR [ecx-0xf]
  40728a:	push   0x32fb228f
  40728f:	mov    al,ds:0xd3165635
  407294:	ja     0x40726e
  407296:	aam    0x9b
  407298:	test   eax,0x582b8c32
  40729d:	bound  esp,QWORD PTR [eax+0x3f]
  4072a0:	cli    
  4072a1:	mov    edx,0x4ed8c9ce
  4072a6:	push   ebx
  4072a7:	mov    bl,0xbb
  4072a9:	test   al,0x8b
  4072ab:	jnp    0x40732c
  4072ad:	inc    ebx
  4072ae:	in     eax,dx
  4072af:	jle    0x40724e
  4072b1:	enter  0x5320,0x14
  4072b5:	or     ecx,esi
  4072b7:	jnp    0x40731d
  4072b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ba:	pop    ds
  4072bb:	aam    0xab
  4072bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072be:	xor    BYTE PTR [edx+0x5a],dh
  4072c1:	push   ecx
  4072c2:	add    eax,0x84c7a02a
  4072c7:	je     0x4072cd
  4072c9:	or     eax,0x3d0ade6
  4072ce:	aaa    
  4072cf:	jb     0x4072b9
  4072d1:	fcmovu st,st(4)
  4072d3:	inc    esp
  4072d4:	retf   0xcb99
  4072d7:	out    0xd2,eax
  4072d9:	sahf   
  4072da:	loopne 0x407348
  4072dc:	dec    esp
  4072dd:	sub    DWORD PTR [eax-0x10],edx
  4072e0:	inc    edi
  4072e1:	add    ch,BYTE PTR [esi]
  4072e3:	dec    edx
  4072e4:	dec    ebx
  4072e5:	cmp    DWORD PTR [edx],edx
  4072e7:	ds dec ecx
  4072e9:	adc    BYTE PTR [esi],al
  4072eb:	fild   WORD PTR [edi+0x616bf91b]
  4072f1:	cli    
  4072f2:	jg     0x407369
  4072f4:	mov    ds,edi
  4072f6:	adc    bl,BYTE PTR [edi-0x50ad1834]
  4072fc:	dec    eax
  4072fd:	or     ch,ch
  4072ff:	or     al,0x3f
  407301:	xchg   ebp,eax
  407302:	loope  0x4072c2
  407304:	push   edi
  407305:	ds push ds
  407307:	cmc    
  407308:	mov    esp,DWORD PTR [ebx]
  40730a:	and    al,0xbf
  40730c:	push   es
  40730d:	sub    BYTE PTR ds:0xf75f231,al
  407313:	add    al,0x52
  407315:	rol    DWORD PTR [esi+ecx*1],0x6a
  407319:	jl     0x40738f
  40731b:	lds    ecx,FWORD PTR [eax-0x48]
  40731e:	popa   
  40731f:	inc    ecx
  407320:	test   DWORD PTR [eax+ecx*1+0x4c969fda],0xad300f53
  40732b:	repnz xlat BYTE PTR ds:[ebx]
  40732d:	lahf   
  40732e:	pop    ecx
  40732f:	mov    edi,0x3f414fac
  407334:	mov    eax,0x38ad3424
  407339:	cmp    DWORD PTR [ecx+0x1a],ebp
  40733c:	mov    edi,0x5207785d
  407341:	inc    edx
  407342:	add    ebx,edi
  407344:	xchg   esp,eax
  407345:	stc    
  407346:	and    ch,bh
  407348:	stos   BYTE PTR es:[edi],al
  407349:	jns    0x407394
  40734b:	iret   
  40734c:	daa    
  40734d:	mov    edi,0x60f893f9
  407352:	sub    eax,0x2fd479a7
  407357:	shr    DWORD PTR [ebx-0x5992724d],cl
  40735d:	pop    ss
  40735e:	jo     0x4073a4
  407360:	enter  0xefef,0x9f
  407364:	fdiv   st,st(5)
  407366:	test   BYTE PTR [esi-0x48],0x28
  40736a:	cmp    ecx,DWORD PTR ds:0xfe90b05f
  407370:	mov    ds:0xe62d4019,eax
  407375:	dec    ecx
  407376:	ss adc al,0xe2
  407379:	int3   
  40737a:	mov    edi,eax
  40737c:	out    dx,al
  40737d:	jbe    0x407367
  40737f:	xchg   esp,eax
  407380:	or     bl,ah
  407382:	mov    dl,0x47
  407384:	jmp    0x768b:0xa60adebe
  40738b:	cmc    
  40738c:	inc    DWORD PTR [edx+ebp*8]
  40738f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407390:	xchg   esp,eax
  407391:	add    bl,BYTE PTR [ebx]
  407393:	retf   0xe154
  407396:	mov    gs,WORD PTR [esi]
  407398:	ret    
  407399:	or     BYTE PTR [ebx+0x220d34aa],ah
  40739f:	out    dx,al
  4073a0:	shl    DWORD PTR [ecx],cl
  4073a2:	add    al,0x38
  4073a4:	scas   eax,DWORD PTR es:[edi]
  4073a5:	mov    dh,0x88
  4073a7:	mov    edx,0x1fdcb43b
  4073ac:	adc    DWORD PTR [ebx],0xb1cd8671
  4073b2:	inc    ebx
  4073b3:	scas   eax,DWORD PTR es:[edi]
  4073b4:	xor    DWORD PTR [esi+eiz*8+0x3b],0xa347345e
  4073bc:	retf   
  4073bd:	ins    DWORD PTR es:[edi],dx
  4073be:	sahf   
  4073bf:	mov    dl,bh
  4073c1:	test   DWORD PTR [esi+0x44],esi
  4073c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073c5:	pop    es
  4073c6:	jl     0x407419
  4073c8:	ror    BYTE PTR [ecx-0x35],0x2c
  4073cc:	and    al,0x10
  4073ce:	aad    0xfe
  4073d0:	inc    edx
  4073d1:	(bad)  
  4073d2:	scas   eax,DWORD PTR es:[edi]
  4073d3:	mov    eax,0x42395435
  4073d8:	push   esi
  4073d9:	mov    esi,0xce6f93c6
  4073de:	sahf   
  4073df:	clc    
  4073e0:	pushf  
  4073e1:	std    
  4073e2:	retf   0xc743
  4073e5:	inc    ecx
  4073e6:	fs inc ecx
  4073e8:	jl     0x407387
  4073ea:	popa   
  4073eb:	push   eax
  4073ec:	aam    0xf7
  4073ee:	adc    al,0x81
  4073f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f1:	in     eax,0x4c
  4073f3:	xor    ebx,ebp
  4073f5:	neg    DWORD PTR [ebp-0x1e]
  4073f8:	pop    ecx
  4073f9:	jnp    0x4073ee
  4073fb:	mov    al,0x2c
  4073fd:	push   ecx
  4073fe:	mov    edx,DWORD PTR [edx+esi*4-0x31ee00b5]
  407405:	jp     0x407474
  407407:	popa   
  407408:	repz retf 
  40740a:	es (bad) 
  40740c:	(bad)  
  40740d:	or     dh,BYTE PTR es:[edx-0x3b06bb86]
  407414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407415:	dec    edx
  407416:	pop    esi
  407417:	xchg   BYTE PTR [ebp+0xdb2191f],al
  40741d:	xor    DWORD PTR [esi-0x32],ecx
  407420:	bnd je 0x4073f9
  407423:	pop    ebx
  407424:	stos   BYTE PTR es:[edi],al
  407425:	mov    dh,BYTE PTR [ebx]
  407427:	sbb    DWORD PTR [edx],0x7ec6a2fc
  40742d:	xchg   DWORD PTR [ebp+0x146498ec],edx
  407433:	stos   DWORD PTR es:[edi],eax
  407434:	fild   QWORD PTR [edi]
  407436:	push   eax
  407437:	ficom  DWORD PTR [ebx+0x642def0]
  40743d:	jp     0x4073f7
  40743f:	repz (bad) 
  407441:	fmulp  st(2),st
  407443:	jae    0x407492
  407445:	clc    
  407446:	dec    edi
  407447:	sbb    al,0xcf
  407449:	bound  ecx,QWORD PTR [ebx+0x6b331f80]
  40744f:	es call 0x31f4:0x30cb71bc
  407457:	xor    eax,DWORD PTR [edi]
  407459:	dec    edx
  40745a:	aam    0x21
  40745c:	push   esp
  40745d:	mov    eax,ds:0x16097555
  407462:	rdmsr  
  407464:	test   al,0x27
  407466:	inc    edi
  407467:	sbb    ch,ah
  407469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40746a:	add    al,0x22
  40746c:	jns    0x407478
  40746e:	aas    
  40746f:	jnp    0x407467
  407471:	xchg   ebp,eax
  407472:	dec    esp
  407473:	jmp    0xa641:0x2fd15e2
  40747a:	xchg   ecx,esp
  40747c:	inc    esi
  40747d:	inc    ebx
  40747e:	inc    esp
  40747f:	iret   
  407480:	sub    BYTE PTR [ebp+0x2],cl
  407483:	xchg   edx,eax
  407484:	and    DWORD PTR [edi],edi
  407486:	sub    edx,DWORD PTR [edi+0x47]
  407489:	mov    eax,ds:0x1a6eedf4
  40748e:	test   DWORD PTR [edi-0xc316a74],0xe0128331
  407498:	and    ch,BYTE PTR [ecx+0x298cbae1]
  40749e:	out    0x27,al
  4074a0:	jb     0x40745c
  4074a2:	shr    BYTE PTR [ebx-0x38],0xcf
  4074a6:	add    DWORD PTR [edx+ebp*1+0x11],esp
  4074aa:	mov    eax,0x6051961f
  4074af:	ret    0xb43f
  4074b2:	(bad)  
  4074b3:	cwde   
  4074b4:	ret    
  4074b5:	pop    edi
  4074b6:	mov    bl,BYTE PTR [edx]
  4074b8:	sub    al,0xf2
  4074ba:	jne    0x4074f4
  4074bc:	sub    esp,eax
  4074be:	mov    al,0x89
  4074c0:	add    BYTE PTR [ebp+0x1fc603e8],dh
  4074c6:	xchg   esp,eax
  4074c7:	cli    
  4074c8:	pop    es
  4074c9:	lods   eax,DWORD PTR ds:[esi]
  4074ca:	mov    esi,0xec047649
  4074cf:	js     0x407511
  4074d1:	jge    0x40751d
  4074d3:	mov    bh,0xe5
  4074d5:	sahf   
  4074d6:	xor    edx,edx
  4074d8:	test   DWORD PTR [ecx-0x6],ebp
  4074db:	pop    es
  4074dc:	cli    
  4074dd:	push   edx
  4074de:	adc    al,0x91
  4074e0:	inc    edx
  4074e1:	xchg   DWORD PTR [eax+0x38539a90],eax
  4074e7:	shr    cl,cl
  4074e9:	lea    ebp,[ecx+edi*4-0x4b]
  4074ed:	loop   0x4074ea
  4074ef:	sbb    BYTE PTR [eax-0x6b],bh
  4074f2:	mov    edx,0xd16a53ee
  4074f7:	mov    ah,0xf5
  4074f9:	into   
  4074fa:	add    al,0x2c
  4074fc:	add    dh,BYTE PTR [eax-0x1d2a5974]
  407502:	call   0x4034:0x5e8b1e7f
  407509:	jb     0x40752e
  40750b:	stc    
  40750c:	dec    esp
  40750d:	pop    esp
  40750e:	dec    eax
  40750f:	mov    bh,0x6
  407511:	lds    edx,FWORD PTR [eax]
  407513:	in     eax,0x94
  407515:	out    0xff,al
  407517:	loopne 0x407544
  407519:	dec    edi
  40751a:	iret   
  40751b:	rcl    ch,cl
  40751d:	pop    edi
  40751f:	pop    ebp
  407520:	mov    eax,DWORD PTR [edx+0x12]
  407523:	mov    ds:0x87c740,al
  407528:	mov    al,ds:0x1071ae06
  40752d:	aam    0x51
  40752f:	fidiv  WORD PTR [ebx+0x3f4d31ef]
  407535:	jo     0x40759f
  407537:	add    al,0x48
  407539:	les    edi,FWORD PTR [ebp+0x26]
  40753c:	test   al,0xb2
  40753e:	mov    al,0x7b
  407540:	sbb    DWORD PTR [esi-0x6be7292b],eax
  407546:	loopne 0x4074e0
  407548:	mov    eax,ebp
  40754a:	pop    ebx
  40754b:	cwde   
  40754c:	enter  0xa645,0x8f
  407550:	popa   
  407551:	push   0x4b
  407553:	add    BYTE PTR [eax-0xfe607f],cl
  407559:	stc    
  40755a:	and    DWORD PTR ds:0xda9161cd,esp
  407560:	cmp    al,0x9e
  407562:	sub    BYTE PTR [edi-0x29516a59],dl
  407568:	adc    edi,DWORD PTR [ecx-0x49aeed7d]
  40756e:	mov    eax,0xc56a2997
  407573:	pop    eax
  407574:	in     eax,0xa8
  407576:	mov    ch,0xdb
  407578:	add    dh,BYTE PTR [ebx+ecx*8+0x37cb4418]
  40757f:	mov    ch,0x39
  407581:	int3   
  407582:	in     eax,dx
  407583:	mov    ah,0x43
  407585:	inc    esi
  407586:	mov    DWORD PTR [edi+edi*1+0x5aea92c3],edi
  40758d:	les    edx,FWORD PTR [ecx+0x4b]
  407590:	push   0xffffffd3
  407592:	xchg   edi,eax
  407593:	(bad)  
  407594:	xchg   esi,eax
  407595:	jae    0x4075cb
  407597:	stos   BYTE PTR es:[edi],al
  407598:	xor    eax,0x17f57d08
  40759d:	cdq    
  40759e:	dec    ecx
  40759f:	int3   
  4075a0:	add    DWORD PTR [ebp+0x14e5be25],ebx
  4075a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075a7:	pop    ecx
  4075a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075a9:	cs mov bl,0x4f
  4075ac:	leave  
  4075ad:	(bad)  
  4075ae:	jmp    0x407606
  4075b0:	aad    0x6d
  4075b2:	pop    ecx
  4075b3:	mov    ?,edx
  4075b5:	jecxz  0x407546
  4075b7:	out    0x2e,al
  4075b9:	pop    ds
  4075ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075bb:	xchg   BYTE PTR [ecx-0x55],dl
  4075be:	out    dx,al
  4075bf:	mov    al,ds:0x55947db3
  4075c4:	xor    esp,eax
  4075c6:	imul   ebx,DWORD PTR [eax+0x663d8e65],0xf5790c1b
  4075d0:	sbb    ebp,ebx
  4075d2:	dec    ebx
  4075d3:	jmp    0xee940650
  4075d8:	xlat   BYTE PTR ds:[ebx]
  4075d9:	scas   eax,DWORD PTR es:[edi]
  4075da:	(bad)  
  4075db:	fild   DWORD PTR [ecx+0x262e9328]
  4075e1:	(bad)  
  4075e2:	out    dx,eax
  4075e3:	xchg   esi,eax
  4075e4:	xor    ebx,esi
  4075e6:	xchg   ecx,eax
  4075e7:	(bad)  
  4075e8:	sbb    ecx,esi
  4075ea:	xchg   ecx,eax
  4075eb:	xchg   esi,eax
  4075ec:	pop    ebx
  4075ed:	sub    al,0x40
  4075ef:	jg     0x4075d3
  4075f1:	fcmovne st,st(6)
  4075f3:	and    edx,DWORD PTR gs:[ebx+0x59]
  4075f7:	push   esi
  4075f8:	fmul   DWORD PTR [edi]
  4075fa:	test   al,0x5c
  4075fc:	jns    0x407655
  4075fe:	jge    0x40766d
  407600:	imul   eax,DWORD PTR [edi+0x5e254e83],0x92ad845b
  40760a:	sub    eax,0xb6d3bdf2
  40760f:	call   0xb812ea3d
  407614:	lea    edx,[esi+eax*8]
  407617:	je     0x407696
  407619:	dec    eax
  40761a:	dec    ebx
  40761b:	jmp    0x1e9514e3
  407620:	add    BYTE PTR [ebp+0x7c],cl
  407623:	sub    BYTE PTR [ecx],0xa3
  407626:	or     al,0x2a
  407628:	pop    ebp
  407629:	mov    WORD PTR [eax+0x1cbad02],?
  40762f:	and    DWORD PTR [edi-0x49616f01],ebx
  407635:	bound  esp,QWORD PTR [esi-0x35]
  407638:	in     al,dx
  407639:	mov    DWORD PTR [edi+0x7017bbb8],eax
  40763f:	xchg   ebx,eax
  407640:	mov    ch,0xb7
  407642:	pusha  
  407643:	icebp  
  407644:	mov    ch,0x2
  407646:	(bad)  
  407647:	push   ebx
  407648:	push   edi
  407649:	xchg   ebx,eax
  40764a:	inc    eax
  40764b:	push   0xb1a689d
  407650:	cmp    al,0x62
  407652:	shl    esp,0x7b
  407655:	adc    dh,bl
  407657:	ss mov edx,0x568f8714
  40765d:	adc    ecx,DWORD PTR [ebx-0x7c0fc0f6]
  407663:	cmp    DWORD PTR [esi+eiz*8+0x964e9ea],esi
  40766a:	gs and eax,0x94795912
  407670:	and    DWORD PTR [ecx],esp
  407672:	scas   al,BYTE PTR es:[edi]
  407673:	cli    
  407674:	dec    esp
  407675:	int3   
  407676:	push   ebp
  407677:	fdiv   DWORD PTR [ebx]
  407679:	dec    edx
  40767a:	mov    esp,DWORD PTR [edi-0x7d]
  40767d:	adc    bl,BYTE PTR [edi-0x2fd092c6]
  407683:	xor    DWORD PTR [ecx-0x782b10cc],0xe
  40768a:	push   ebp
  40768b:	add    dl,BYTE PTR [ecx+0x30]
  40768e:	frstor [esp+ecx*2]
  407691:	(bad)  
  407692:	jmp    0x5885:0xd41fb3df
  407699:	or     edi,esi
  40769b:	sbb    eax,0xca4f2861
  4076a0:	xchg   DWORD PTR [eax+0xed1564a],ebx
  4076a6:	xor    DWORD PTR [edx+0x2],edi
  4076a9:	dec    ecx
  4076aa:	sub    DWORD PTR [eax+eax*1],0xffffffb9
  4076ae:	mov    eax,0xd90c4d79
  4076b3:	in     eax,dx
  4076b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076b5:	xchg   ecx,eax
  4076b6:	dec    ebx
  4076b7:	sbb    DWORD PTR [ecx],edx
  4076b9:	not    edx
  4076bb:	mov    ds:0xad3a7930,al
  4076c0:	ror    BYTE PTR [ebx],cl
  4076c2:	(bad)  
  4076c3:	pop    ebp
  4076c4:	ja     0x4076bf
  4076c6:	fmul   DWORD PTR [ebx-0x1e]
  4076c9:	add    BYTE PTR [ebp+0x2b],bl
  4076cc:	adc    al,0xb4
  4076ce:	inc    BYTE PTR [edx]
  4076d0:	loope  0x407652
  4076d2:	clc    
  4076d3:	inc    eax
  4076d4:	dec    ebp
  4076d5:	mov    ebp,0x5e2c6428
  4076da:	push   ebx
  4076db:	cs jp  0x4076fd
  4076de:	dec    ebp
  4076df:	int3   
  4076e0:	adc    edx,DWORD PTR [ecx+0x1c]
  4076e3:	mov    ecx,0x3811696b
  4076e8:	and    BYTE PTR [ecx-0x1db1d5f9],dh
  4076ee:	sub    al,BYTE PTR [ebx]
  4076f0:	dec    esp
  4076f1:	aaa    
  4076f2:	(bad)  
  4076f4:	je     0x40769f
  4076f6:	inc    ecx
  4076f7:	lea    esp,[ebx-0x7f]
  4076fa:	inc    edx
  4076fb:	mov    ds:0x1a46209c,al
  407700:	adc    eax,0x8762ad29
  407705:	xlat   BYTE PTR ds:[ebx]
  407706:	pop    ecx
  407707:	loope  0x40776e
  407709:	xchg   ebp,eax
  40770a:	or     dl,dh
  40770c:	inc    eax
  40770d:	push   esp
  40770e:	test   al,0x81
  407710:	cmp    BYTE PTR [ecx],dh
  407712:	jp     0x407760
  407714:	cmp    al,0xc8
  407716:	inc    BYTE PTR ds:0x2092ba4b
  40771c:	ror    edi,1
  40771e:	jge    0x407775
  407720:	or     eax,0xbe1f1b20
  407725:	mov    WORD PTR [edi],ds
  407727:	fild   WORD PTR [ebx+0x64]
  40772a:	test   eax,0x171fe5e6
  40772f:	push   0x7dff8727
  407734:	test   esi,edx
  407736:	mov    BYTE PTR [ebp+0x5c],ch
  407739:	push   esp
  40773a:	fist   WORD PTR [ecx-0x66]
  40773d:	sahf   
  40773e:	fstp   QWORD PTR [edx]
  407740:	push   0x5a
  407742:	or     eax,0x4e1290a6
  407747:	(bad)  
  407748:	shl    DWORD PTR [edi],1
  40774a:	test   DWORD PTR [eax-0x58],ebx
  40774d:	ficomp WORD PTR [edx+0x43b65fa5]
  407753:	jecxz  0x4076dd
  407755:	ins    BYTE PTR es:[edi],dx
  407756:	mov    ecx,0x193ab9e5
  40775b:	jle    0x407776
  40775d:	sub    ebp,DWORD PTR [esp+ebp*1+0x5e]
  407761:	stos   BYTE PTR es:[edi],al
  407762:	pushf  
  407763:	sbb    eax,DWORD PTR [ebx+0x65fc1d5a]
  407769:	fcom   QWORD PTR [ebx-0x6d]
  40776c:	pop    edi
  40776d:	fwait
  40776e:	xchg   DWORD PTR [ebx],edx
  407770:	sbb    bh,BYTE PTR [ecx+0x62]
  407773:	ret    
  407774:	test   DWORD PTR [edi],0xfedcee28
  40777a:	and    BYTE PTR [edi-0xe3d15db],0x46
  407781:	js     0x4077a2
  407783:	jcxz   0x407725
  407786:	or     BYTE PTR [eax-0x40],0xc5
  40778a:	and    eax,0xd24e5bde
  40778f:	cli    
  407790:	and    al,0x1a
  407792:	ins    DWORD PTR es:[edi],dx
  407793:	int3   
  407794:	adc    DWORD PTR [ecx+0x1c9a9fd7],0x441557a7
  40779e:	shr    DWORD PTR [ecx],1
  4077a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077a1:	dec    ebp
  4077a2:	jns    0x40774b
  4077a4:	stos   BYTE PTR es:[edi],al
  4077a5:	xchg   ebx,eax
  4077a6:	sub    eax,0xb6dba9ef
  4077ab:	aas    
  4077ac:	jb     0x4077d5
  4077ae:	fwait
  4077af:	shl    bl,cl
  4077b1:	repz shl DWORD PTR [ebx+ebx*8-0x2823eab6],1
  4077b9:	test   DWORD PTR [esi],edx
  4077bb:	xchg   BYTE PTR [ebx+esi*4],ch
  4077be:	fidiv  DWORD PTR [esi]
  4077c0:	add    bl,ch
  4077c2:	cmp    al,0xb4
  4077c4:	push   eax
  4077c5:	push   ebp
  4077c6:	pop    ss
  4077c7:	loop   0x4077df
  4077c9:	int3   
  4077ca:	dec    edx
  4077cb:	sbb    cl,BYTE PTR [edx+0x15]
  4077ce:	in     eax,dx
  4077cf:	loope  0x40776b
  4077d1:	xchg   bl,dh
  4077d3:	shl    DWORD PTR [eax-0x2cebd1e5],cl
  4077d9:	dec    ebp
  4077da:	sub    bl,dl
  4077dc:	out    0xbe,eax
  4077de:	dec    edx
  4077df:	cwd    
  4077e1:	and    esi,esp
  4077e3:	mov    WORD PTR [esi],fs
  4077e5:	fcom   DWORD PTR [ebp-0x22b44747]
  4077eb:	data16 xor bl,BYTE PTR [ebp-0xa9228ab]
  4077f2:	push   es
  4077f3:	scas   eax,DWORD PTR es:[edi]
  4077f4:	adc    ch,dl
  4077f6:	fistp  QWORD PTR [esi+ebx*4-0x75]
  4077fa:	dec    esi
  4077fb:	out    0x4b,eax
  4077fd:	scas   al,BYTE PTR es:[edi]
  4077fe:	add    al,0x93
  407800:	adc    DWORD PTR [ebp-0x38],ebx
  407803:	out    0x30,eax
  407805:	dec    ebp
  407806:	pop    ebp
  407807:	retf   0xfa11
  40780a:	dec    esi
  40780b:	dec    eax
  40780c:	jmp    0xde02:0x6d40279e
  407813:	out    0x60,al
  407815:	int3   
  407816:	and    DWORD PTR ds:0xacabcec4,edx
  40781c:	add    al,0x2c
  40781e:	out    dx,al
  40781f:	mov    bh,0xa4
  407822:	or     ebx,DWORD PTR [ebx+0x79e64fa6]
  407828:	add    BYTE PTR [esi-0x1],0x63
  40782c:	and    al,dh
  40782e:	jle    0x4077ca
  407830:	sbb    ebx,DWORD PTR [ebp-0x75136aa8]
  407836:	ja     0x407841
  407838:	and    esi,edx
  40783a:	out    dx,al
  40783b:	jae    0x4077fe
  40783d:	adc    edi,ecx
  40783f:	in     al,0xa0
  407841:	add    al,0x8a
  407843:	sahf   
  407844:	sbb    BYTE PTR [esi+0x39],0xf2
  407848:	ds dec edi
  40784a:	fbstp  TBYTE PTR [edi+ebp*4]
  40784d:	and    ecx,DWORD PTR [ebp-0x3d]
  407850:	test   DWORD PTR [esi],eax
  407852:	mov    ds:0xb9d95c8f,eax
  407857:	and    eax,0xe9eeddd0
  40785c:	mov    ecx,0x5f920e4c
  407861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407862:	lahf   
  407863:	scas   eax,DWORD PTR es:[edi]
  407864:	sub    dh,ah
  407866:	sar    ebp,0x84
  407869:	mov    WORD PTR [ecx-0x1c561bc],fs
  40786f:	icebp  
  407870:	daa    
  407871:	into   
  407872:	xor    ch,cl
  407874:	mov    ebx,esp
  407876:	xchg   DWORD PTR [edi+0x65],ebx
  407879:	mov    DWORD PTR [ebx+edx*1-0x15b26109],esp
  407880:	add    eax,0xc413e89c
  407885:	sahf   
  407886:	or     BYTE PTR [eax],al
  407888:	ins    DWORD PTR es:[edi],dx
  407889:	scas   al,BYTE PTR es:[edi]
  40788a:	mov    bh,0x4e
  40788c:	mov    ch,0x37
  40788e:	and    dl,dl
  407890:	sti    
  407891:	push   ebx
  407892:	mov    ds:0xdf9ad57b,al
  407897:	add    dh,BYTE PTR [eax+edx*4]
  40789a:	leave  
  40789b:	mov    DWORD PTR [edx],esp
  40789d:	xchg   esp,eax
  40789e:	sbb    eax,0x4e5db7a1
  4078a3:	sub    dl,BYTE PTR [edx+0x4f0ae3e4]
  4078a9:	nop
  4078aa:	arpl   WORD PTR [edi+edi*1+0x54],ax
  4078ae:	test   al,0x1f
  4078b0:	mov    ds:0x80c3bc55,al
  4078b5:	test   WORD PTR [esi+0x43f82060],di
  4078bc:	mov    bh,0x43
  4078be:	fsubr  QWORD PTR [ebp+edx*8-0xe0e1465]
  4078c5:	in     al,dx
  4078c6:	sbb    al,0x7
  4078c8:	pop    ecx
  4078c9:	push   esp
  4078ca:	dec    ecx
  4078cb:	xchg   eax,eax
  4078cd:	sbb    DWORD PTR [esi+eax*8-0x7c],ebx
  4078d1:	push   eax
  4078d2:	or     bl,BYTE PTR [ebp+0x63]
  4078d5:	call   0xb9e5:0xf319c54b
  4078dc:	in     eax,0xdf
  4078de:	add    BYTE PTR [eax+0x37],al
  4078e1:	xchg   edi,eax
  4078e2:	jae    0x4078fe
  4078e4:	adc    esi,DWORD PTR [eax-0x7]
  4078e7:	or     dl,BYTE PTR [edi]
  4078e9:	mov    di,0xc806
  4078ed:	into   
  4078ee:	adc    BYTE PTR [ebx+0x6f],bl
  4078f1:	cwde   
  4078f2:	xchg   edx,eax
  4078f3:	jmp    0x407937
  4078f5:	imul   BYTE PTR [edx]
  4078f7:	mov    ds:0x8c5a6990,eax
  4078fc:	fld    QWORD PTR [edi-0x701fd414]
  407902:	adc    eax,0xcd623045
  407907:	push   0xffffff87
  407909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40790a:	loop   0x407984
  40790c:	add    cl,bl
  40790e:	push   esp
  40790f:	iret   
  407910:	jae    0x4078a1
  407912:	aam    0x72
  407914:	push   ss
  407915:	nop
  407916:	cmp    eax,0xd28b19bd
  40791b:	out    0x83,eax
  40791d:	mov    edx,0xe067aa58
  407922:	adc    BYTE PTR [ebp+0x30],dl
  407925:	aas    
  407926:	add    eax,0x1422d197
  40792b:	xchg   DWORD PTR [edx+ecx*2],edi
  40792e:	mov    esp,0xa79b59b
  407933:	and    dl,ah
  407935:	xchg   ebp,eax
  407936:	and    DWORD PTR [esi],esp
  407938:	jnp    0x407976
  40793a:	test   eax,0x3e32d9c2
  40793f:	pop    es
  407940:	imul   BYTE PTR [ecx]
  407942:	jecxz  0x407986
  407944:	scas   eax,DWORD PTR es:[edi]
  407945:	out    dx,eax
  407946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407948:	stc    
  407949:	sub    DWORD PTR [ecx-0x3be8f6d4],0x6b4f28e7
  407953:	jp     0x40795e
  407955:	mov    esi,0x5d6f098
  40795a:	daa    
  40795b:	push   eax
  40795c:	mov    DWORD PTR [edx-0x35],esi
  40795f:	popf   
  407960:	mov    cl,0x31
  407962:	adc    ch,ah
  407964:	inc    esp
  407965:	inc    edi
  407966:	loop   0x40794f
  407968:	and    eax,0x957f685
  40796d:	mov    eax,0xf5138d26
  407972:	aam    0x23
  407974:	push   eax
  407975:	dec    ecx
  407976:	and    BYTE PTR [eax-0x40],ch
  407979:	sbb    eax,0x74997a81
  40797e:	sbb    esp,DWORD PTR [esi+0x21]
  407981:	xor    BYTE PTR [ebx-0x562a7baf],al
  407987:	das    
  407988:	das    
  407989:	retf   0xdf40
  40798c:	xchg   ecx,eax
  40798d:	fdiv   QWORD PTR [eax]
  40798f:	and    DWORD PTR [ebp+0x1b83a839],ecx
  407995:	adc    al,BYTE PTR [esi+0x28]
  407998:	adc    bh,BYTE PTR [ebx]
  40799a:	inc    esp
  40799b:	fst    DWORD PTR [esi-0x4f]
  40799e:	push   edx
  40799f:	mov    gs,WORD PTR [edx-0x38]
  4079a2:	or     BYTE PTR [esi-0x35],ah
  4079a5:	retf   0x59e6
  4079a8:	scas   al,BYTE PTR es:[edi]
  4079a9:	rcl    BYTE PTR [edx+eiz*4],cl
  4079ac:	pushf  
  4079ad:	cmp    edi,0x84867f38
  4079b3:	mov    bl,0x38
  4079b5:	or     al,0x3e
  4079b7:	sub    BYTE PTR [ebp+0x17d2b4b6],ch
  4079bd:	iret   
  4079be:	jno    0x40799e
  4079c0:	popa   
  4079c1:	aam    0x6c
  4079c3:	lds    edi,FWORD PTR [ecx]
  4079c5:	shr    esp,0x97
  4079c8:	ss pop ds
  4079ca:	push   cs
  4079cb:	pushf  
  4079cc:	hlt    
  4079cd:	mov    ch,0xe0
  4079cf:	(bad)  
  4079d0:	fnstsw WORD PTR [ecx]
  4079d2:	jg     0x407a4a
  4079d4:	xor    edi,DWORD PTR [ecx-0x56]
  4079d7:	push   0xffffffa7
  4079d9:	jno    0x407a35
  4079db:	sub    DWORD PTR [edi],edx
  4079dd:	adc    bl,BYTE PTR [edx-0x1c]
  4079e0:	inc    edx
  4079e1:	cwde   
  4079e2:	cmp    DWORD PTR [edx-0x6c31ea1b],edi
  4079e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079e9:	cld    
  4079ea:	jmp    0xc5f7:0x4dc55a3d
  4079f1:	iret   
  4079f2:	xor    ch,bh
  4079f4:	cmp    DWORD PTR [edi+0x9],esi
  4079f7:	jge    0x4079dd
  4079f9:	in     eax,dx
  4079fa:	es adc eax,0xb4c79ce6
  407a00:	ins    BYTE PTR es:[edi],dx
  407a01:	jmp    0x4079aa
  407a03:	iret   
  407a04:	rol    BYTE PTR [ecx-0x400e1fa8],1
  407a0a:	pop    edx
  407a0b:	mov    esi,0xce7bef13
  407a10:	jae    0x407a37
  407a12:	mov    ss,WORD PTR [edi-0x44eea58c]
  407a18:	sub    DWORD PTR [ebx-0x3baa6ac1],esp
  407a1e:	xor    bh,BYTE PTR ds:0xa5c81fed
  407a24:	nop
  407a25:	xchg   ecx,eax
  407a26:	repnz mov edi,0x12485c61
  407a2c:	xchg   ecx,eax
  407a2d:	xor    dh,cl
  407a2f:	or     DWORD PTR [edi],edi
  407a31:	int3   
  407a32:	pop    esi
  407a33:	and    BYTE PTR [ebx+0x2],ah
  407a36:	scas   eax,DWORD PTR es:[edi]
  407a37:	mov    dl,0xbe
  407a39:	loopne 0x407aac
  407a3b:	lahf   
  407a3c:	in     al,0xf5
  407a3e:	test   ah,0x97
  407a41:	pusha  
  407a42:	ror    al,cl
  407a44:	fwait
  407a45:	ins    DWORD PTR es:[edi],dx
  407a46:	push   es
  407a47:	lods   al,BYTE PTR ds:[esi]
  407a48:	or     DWORD PTR [esi],edi
  407a4a:	jp     0x4079fa
  407a4c:	dec    esi
  407a4d:	leave  
  407a4e:	gs xchg esi,eax
  407a50:	push   esi
  407a51:	daa    
  407a52:	add    eax,DWORD PTR [ecx]
  407a54:	mov    WORD PTR [eax-0x28171f39],?
  407a5a:	cmp    DWORD PTR [edi-0x318e6663],0x6cec0253
  407a64:	sbb    edi,DWORD PTR [edi-0x49883464]
  407a6a:	push   es
  407a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a6c:	es test eax,0xbd8341e
  407a72:	sub    ecx,DWORD PTR [esp+edi*8+0x4354bf67]
  407a79:	adc    DWORD PTR [ebx-0x18379de9],0x12
  407a80:	fmul   DWORD PTR [edi+0x42]
  407a83:	out    0x14,eax
  407a85:	jecxz  0x407a8d
  407a87:	sbb    BYTE PTR [edi+0x299c5aca],cl
  407a8d:	and    bh,BYTE PTR [ebx+0x3]
  407a90:	or     al,0x23
  407a92:	out    0x31,eax
  407a94:	xor    DWORD PTR [ebp-0x45],edi
  407a97:	dec    ecx
  407a98:	xor    edi,DWORD PTR [eax-0x65]
  407a9b:	jecxz  0x407b13
  407a9d:	imul   esi,DWORD PTR [edi-0x297f89e0],0xffffffbe
  407aa4:	lods   eax,DWORD PTR ds:[esi]
  407aa5:	inc    edi
  407aa6:	sub    DWORD PTR [ebx+0x2c],ebx
  407aa9:	sbb    eax,0xd9457b7b
  407aae:	jge    0x407a69
  407ab0:	pop    eax
  407ab1:	mov    al,ds:0x24683749
  407ab6:	push   0x630bd5b0
  407abb:	mul    BYTE PTR [esi-0x26]
  407abe:	xchg   edi,eax
  407abf:	ins    BYTE PTR es:[edi],dx
  407ac0:	lea    esi,[ebp-0x7d]
  407ac3:	arpl   WORD PTR [ecx+0x53],ax
  407ac6:	push   esp
  407ac7:	sbb    BYTE PTR [esp+edx*1],dh
  407aca:	push   0x7b5c16cd
  407acf:	sar    DWORD PTR [ebx+0x61],0xb8
  407ad3:	outs   dx,DWORD PTR ds:[esi]
  407ad4:	push   ss
  407ad5:	dec    ecx
  407ad6:	sbb    eax,0x6da7fca1
  407adb:	(bad)  
  407add:	mov    eax,ds:0x3cbf7f37
  407ae2:	and    edx,DWORD PTR ds:0x7cedd914
  407ae8:	ds xchg ebp,eax
  407aea:	fdiv   QWORD PTR [esi+0x28]
  407aed:	and    BYTE PTR [edx+ebp*4],0x5e
  407af1:	inc    eax
  407af2:	jp     0x407abb
  407af4:	xchg   ecx,eax
  407af5:	inc    esi
  407af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407af7:	jecxz  0x407b3e
  407af9:	ret    0x83f9
  407afc:	sbb    ch,ah
  407afe:	addr16 push eax
  407b00:	mov    ch,0xb0
  407b02:	xor    al,0x19
  407b04:	xchg   esp,eax
  407b05:	jb     0x407a88
  407b07:	pop    ds
  407b08:	add    BYTE PTR [ecx-0x8ea74df],dl
  407b0e:	xor    al,0x62
  407b10:	mov    ds:0xe0b3166,eax
  407b15:	mov    esp,0x1abebcb9
  407b1a:	sti    
  407b1b:	pop    ecx
  407b1c:	jmp    0x407add
  407b1e:	rol    DWORD PTR [edx+ecx*4-0x2c],0xb0
  407b23:	add    eax,0x79800d74
  407b28:	and    bl,dh
  407b2a:	jo     0x407b60
  407b2c:	(bad)  
  407b2d:	outs   dx,BYTE PTR ds:[esi]
  407b2e:	aas    
  407b2f:	fisubr WORD PTR [edi+0x76]
  407b32:	adc    BYTE PTR [eax+ebp*8+0x20],ch
  407b36:	sar    bh,1
  407b38:	fbstp  TBYTE PTR [esi-0x3e]
  407b3b:	mov    eax,ds:0x801acf91
  407b40:	dec    edx
  407b41:	jb     0x407b88
  407b43:	xor    DWORD PTR [eax],0x24
  407b46:	push   edx
  407b47:	data16 cmp al,0xcf
  407b4a:	sar    DWORD PTR [ebx+0x55a281fa],1
  407b50:	cmc    
  407b51:	xor    DWORD PTR [edi],ebp
  407b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b54:	mov    dl,0x9e
  407b56:	retf   
  407b57:	push   edi
  407b58:	push   ebp
  407b59:	xchg   BYTE PTR [ebx+esi*2],dl
  407b5c:	xlat   BYTE PTR ds:[ebx]
  407b5d:	xchg   DWORD PTR [edx],eax
  407b5f:	arpl   WORD PTR [ebx+eiz*8],bx
  407b62:	mov    al,ds:0xfc120e32
  407b67:	jp     0x407bd9
  407b69:	add    DWORD PTR [ebp-0x4af8abe1],ebx
  407b6f:	xchg   DWORD PTR [edi+0x5d],eax
  407b72:	addr16 (bad) 
  407b74:	loop   0x407bba
  407b76:	xor    DWORD PTR [eax+0x65ab8faa],edi
  407b7c:	dec    ebp
  407b7d:	pop    edi
  407b7e:	enter  0xf2d1,0x17
  407b82:	jbe    0x407bdd
  407b84:	jl     0x407b26
  407b86:	loop   0x407b76
  407b88:	mov    dl,0x1
  407b8a:	adc    DWORD PTR [edx-0x2b],edx
  407b8d:	loop   0x407c08
  407b8f:	sbb    al,cl
  407b91:	outs   dx,DWORD PTR ds:[esi]
  407b92:	aaa    
  407b93:	in     eax,0xb5
  407b95:	jmp    0x407bbb
  407b97:	cmp    ebp,DWORD PTR [eax+edx*1+0x4a]
  407b9b:	dec    ebp
  407b9c:	(bad)  
  407b9d:	frstor [eax-0x37915165]
  407ba3:	dec    ebp
  407ba4:	mov    dh,0xc0
  407ba6:	xor    BYTE PTR [esi-0x4c],bh
  407ba9:	sub    esp,DWORD PTR [eax-0x4c292343]
  407baf:	out    dx,al
  407bb0:	mov    esi,edi
  407bb2:	xchg   esi,eax
  407bb3:	and    al,0x7b
  407bb5:	push   eax
  407bb6:	(bad)  
  407bb7:	ror    BYTE PTR [edi-0x73],1
  407bba:	(bad)  
  407bbb:	ja     0x407c3a
  407bbd:	(bad)  
  407bbe:	pop    ecx
  407bbf:	test   al,0x3e
  407bc1:	and    bh,0x48
  407bc4:	dec    ecx
  407bc5:	shl    BYTE PTR [esi],1
  407bc7:	dec    ebx
  407bc8:	and    bh,dh
  407bca:	mov    ebx,0x462ef318
  407bcf:	mov    ebp,0x43e1c1df
  407bd5:	imul   edi,DWORD PTR [esi],0x1e
  407bd8:	repnz fst st(7)
  407bdb:	cmp    eax,edx
  407bdd:	dec    ecx
  407bde:	push   esi
  407bdf:	je     0x407b98
  407be1:	out    dx,al
  407be2:	shl    DWORD PTR [ebp-0x20],0xee
  407be6:	cmp    ebx,edi
  407be8:	dec    edi
  407be9:	adc    edx,edx
  407beb:	jbe    0x407c52
  407bed:	mov    dh,0x23
  407bef:	enter  0xb753,0x3d
  407bf3:	ror    BYTE PTR [edx-0x79],1
  407bf6:	das    
  407bf7:	jo     0x407c26
  407bf9:	adc    dh,BYTE PTR [ebp+eax*4+0xfb4ccc5]
  407c00:	jno    0x407c47
  407c02:	and    dh,0x46
  407c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c06:	jnp    0x407c7f
  407c08:	jnp    0x407c3f
  407c0a:	outs   dx,DWORD PTR ds:[esi]
  407c0b:	xchg   esi,eax
  407c0c:	sahf   
  407c0d:	inc    edx
  407c0e:	mov    ebp,0x81d15f7a
  407c13:	(bad)  
  407c14:	cmp    DWORD PTR [esi],esi
  407c16:	into   
  407c17:	jne    0x407bad
  407c19:	(bad)  
  407c1a:	mov    ebp,0xaddc5eda
  407c1f:	sbb    eax,0xd4825805
  407c24:	sbb    edi,DWORD PTR [ebx+edi*2]
  407c27:	ret    
  407c28:	mov    esi,0x504e3ba0
  407c2d:	fmul   st,st(0)
  407c2f:	sub    esp,DWORD PTR [edx-0x59e15e1e]
  407c35:	xchg   ebp,eax
  407c36:	(bad)  
  407c37:	jmp    0x8152da58
  407c3c:	in     al,dx
  407c3d:	mov    bh,0x1d
  407c3f:	xor    BYTE PTR [ebp-0x56],ah
  407c42:	mov    esi,0x704197e3
  407c47:	xor    esi,DWORD PTR [eax+0x1c1f083c]
  407c4d:	xchg   esp,eax
  407c4e:	loop   0x407be8
  407c50:	inc    esi
  407c51:	(bad)  [edx-0x2a3003c5]
  407c57:	js     0x407c84
  407c59:	jge    0x407c51
  407c5b:	pop    ss
  407c5c:	pop    eax
  407c5d:	and    al,0xf1
  407c5f:	jb     0x407bf4
  407c61:	push   di
  407c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c64:	sub    al,BYTE PTR ds:0xadd52e61
  407c6a:	add    ebp,DWORD PTR [edx]
  407c6c:	dec    ebp
  407c6d:	retf   
  407c6e:	sar    cl,1
  407c70:	inc    esi
  407c71:	mov    bl,0x5b
  407c73:	pop    ebp
  407c74:	int    0x90
  407c76:	dec    ebp
  407c77:	adc    edx,DWORD PTR [esi-0x54]
  407c7a:	fwait
  407c7b:	icebp  
  407c7c:	fidivr DWORD PTR [edx-0x78cb7e2c]
  407c82:	es push cs
  407c84:	(bad)  
  407c85:	popf   
  407c86:	jnp    0x407c28
  407c88:	dec    esi
  407c89:	cwde   
  407c8a:	xor    DWORD PTR [esi+eax*1],ecx
  407c8d:	pop    esi
  407c8e:	mov    ds:0xd6a162b1,al
  407c93:	push   cs
  407c94:	test   DWORD PTR es:[ebp+0x7d],edi
  407c98:	dec    edx
  407c99:	je     0x407ccd
  407c9b:	repnz cs push esp
  407c9e:	mov    al,ds:0xeaa768ea
  407ca3:	js     0x407ce4
  407ca5:	mov    bh,0xe5
  407ca7:	mov    ebp,0x1fa4e12a
  407cac:	jl     0x407c3b
  407cae:	mov    ds:0x5b2238ee,al
  407cb3:	out    dx,al
  407cb4:	adc    ebx,DWORD PTR [eax+ebp*1]
  407cb7:	nop
  407cb8:	xchg   ah,ah
  407cba:	inc    ebx
  407cbb:	mov    ebx,0x964ebf5
  407cc0:	xchg   esp,eax
  407cc1:	xor    al,BYTE PTR [esi-0x205ac4a8]
  407cc7:	sbb    al,0x83
  407cc9:	mov    eax,ds:0x67a90aa7
  407cce:	test   esi,ecx
  407cd0:	xor    dh,cl
  407cd2:	inc    edx
  407cd3:	int3   
  407cd4:	bound  eax,QWORD PTR [esi-0x9ae815b]
  407cda:	clc    
  407cdb:	adc    DWORD PTR [esp+edi*8+0x59],0x375983ad
  407ce3:	js     0x407d63
  407ce5:	into   
  407ce6:	js     0x407d3b
  407ce8:	lds    ebx,FWORD PTR [ecx-0x18917470]
  407cee:	arpl   WORD PTR [edx],cx
  407cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf1:	aam    0x19
  407cf3:	mov    dl,0x7c
  407cf5:	repnz rcr DWORD PTR [esi-0x39],cl
  407cf9:	cwde   
  407cfa:	inc    esi
  407cfb:	and    bh,dl
  407cfd:	adc    DWORD PTR [ebp-0x76e2b6ef],esp
  407d03:	mov    ah,0xf2
  407d05:	fldenv [eax-0x39fcd4ac]
  407d0b:	cmp    eax,0xe70a20f6
  407d10:	call   0x8702fc80
  407d15:	jmp    0x65fa:0xbdcf697d
  407d1c:	lock adc eax,esi
  407d1f:	in     al,0x20
  407d21:	rcr    DWORD PTR [ebx+0x5ca85e28],0x8b
  407d28:	popf   
  407d29:	inc    ebx
  407d2a:	push   ds
  407d2b:	into   
  407d2c:	jecxz  0x407d63
  407d2e:	sbb    esi,DWORD PTR [ebx]
  407d30:	test   BYTE PTR [edi],bl
  407d32:	xchg   ebx,eax
  407d33:	lock jae 0x407d22
  407d36:	jge    0x407cc0
  407d38:	arpl   WORD PTR [esi+0x5a],ax
  407d3b:	cmp    al,0x59
  407d3d:	mov    DWORD PTR [esi+esi*4-0x27],ecx
  407d41:	mov    DWORD PTR [edi+0x55],edx
  407d44:	cmp    eax,0xea9db118
  407d49:	dec    edi
  407d4a:	pop    ss
  407d4b:	cmc    
  407d4c:	jg     0x407d61
  407d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d4f:	movlps xmm3,QWORD PTR [edi]
  407d52:	adc    DWORD PTR [ebx],ebp
  407d54:	adc    dl,BYTE PTR [eax]
  407d56:	cli    
  407d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d58:	cs ds daa 
  407d5b:	out    dx,eax
  407d5c:	mov    al,ds:0x4d2ab38f
  407d61:	jmp    0x1a134bec
  407d66:	enter  0x1b7,0x6
  407d6a:	or     DWORD PTR ds:0x9dec26ca,eax
  407d70:	and    esi,DWORD PTR [ebx+0x64]
  407d73:	sbb    al,0x84
  407d75:	mov    dh,0x66
  407d77:	ins    DWORD PTR es:[edi],dx
  407d78:	xchg   ebp,eax
  407d79:	inc    esp
  407d7a:	retf   
  407d7b:	push   eax
  407d7c:	retf   0x45ac
  407d7f:	in     al,0xf9
  407d81:	xchg   ebx,eax
  407d82:	and    ch,al
  407d84:	jne    0x407d48
  407d86:	xchg   edi,eax
  407d87:	mov    al,ds:0xd153d38e
  407d8c:	fwait
  407d8d:	imul   esp,DWORD PTR [ebx],0x2519970
  407d93:	or     BYTE PTR [ebp-0x2d],al
  407d96:	mov    ds:0xd0187804,al
  407d9b:	sbb    dh,BYTE PTR [ebp+ebx*1-0x55]
  407d9f:	lock add eax,DWORD PTR [edi+0x1c]
  407da3:	and    BYTE PTR [eax+0x1d],dh
  407da6:	add    eax,DWORD PTR [eax+0x21]
  407da9:	(bad)  [esi+0x6377b3cf]
  407daf:	inc    esp
  407db0:	jmp    0x85f4:0x5cb7cb47
  407db7:	sub    eax,0xafccc9fd
  407dbc:	jg     0x407d78
  407dbe:	cdq    
  407dbf:	pop    ss
  407dc0:	jge    0x407daa
  407dc2:	adc    al,0x16
  407dc4:	(bad)  
  407dc5:	jb     0x407e0c
  407dc7:	push   edx
  407dc8:	arpl   WORD PTR [ebp+0x3c735875],dx
  407dce:	clc    
  407dcf:	imul   edx,DWORD PTR [edx-0x3e78d2b4],0xb16d2076
  407dd9:	popa   
  407dda:	fld    st(6)
  407ddc:	pushf  
  407ddd:	into   
  407dde:	iret   
  407ddf:	inc    edi
  407de0:	mov    ebx,0x1f599170
  407de5:	popf   
  407de6:	mov    dh,ah
  407de8:	call   0x5d05f1e6
  407ded:	and    bh,0x34
  407df0:	fimul  WORD PTR [esp+eiz*4-0x79c8b3c4]
  407df7:	pop    esp
  407df8:	outs   dx,BYTE PTR ds:[esi]
  407df9:	mov    edx,0xa9164664
  407dfe:	call   0xf951:0x5b4baff
  407e05:	jecxz  0x407de0
  407e07:	mov    eax,ds:0x15b0139
  407e0c:	cmp    eax,0xdd2dc917
  407e11:	mov    eax,0x8ba5ec09
  407e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e17:	fisttp QWORD PTR [ebx+0x765de900]
  407e1d:	cld    
  407e1e:	stos   BYTE PTR es:[edi],al
  407e1f:	xor    bh,BYTE PTR [edi+ecx*2-0x2f]
  407e23:	fidiv  DWORD PTR [edi-0x7500e12]
  407e29:	sub    ebp,esi
  407e2b:	cmp    al,cl
  407e2d:	ja     0x407e48
  407e2f:	mov    bl,0xf6
  407e31:	and    ecx,0xfffffffc
  407e34:	hlt    
  407e35:	jge    0x407e44
  407e37:	mov    bl,0x9
  407e39:	std    
  407e3a:	cwde   
  407e3b:	mov    dh,0xb5
  407e3d:	stos   BYTE PTR es:[edi],al
  407e3e:	sbb    edx,DWORD PTR [ebp+0x1a6fb318]
  407e44:	sub    DWORD PTR [edx-0x55],edi
  407e47:	out    0xdb,al
  407e49:	adc    al,0xe5
  407e4b:	pop    ebp
  407e4c:	adc    BYTE PTR [eax],ah
  407e4e:	sub    al,0x15
  407e50:	icebp  
  407e51:	push   edx
  407e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e53:	mov    cl,0xb2
  407e55:	loop   0x407ddb
  407e57:	std    
  407e58:	dec    ebp
  407e59:	mov    eax,DWORD PTR [ebp-0x7a0115ba]
  407e5f:	dec    ecx
  407e60:	lods   al,BYTE PTR ds:[esi]
  407e61:	daa    
  407e62:	jmp    0x1b18:0x7e4e7011
  407e69:	(bad)  
  407e6a:	(bad)  
  407e6b:	out    dx,al
  407e6c:	sub    DWORD PTR [eax+0x6a],ebp
  407e6f:	out    0xf9,eax
  407e71:	xlat   BYTE PTR ds:[ebx]
  407e72:	cmp    al,0x98
  407e74:	cmp    eax,0xcd9efce8
  407e79:	mov    al,ds:0xfa41b3d8
  407e7e:	jne    0x407e4f
  407e80:	cmc    
  407e81:	aaa    
  407e82:	push   ss
  407e83:	int    0xef
  407e85:	inc    ebp
  407e86:	cmp    ah,ch
  407e88:	stc    
  407e89:	dec    ebp
  407e8a:	loope  0x407ef4
  407e8c:	clc    
  407e8d:	call   0x64ce:0x4d263dd5
  407e94:	fsubp  st(7),st
  407e96:	and    ecx,DWORD PTR [ecx+0x37]
  407e99:	mov    WORD PTR [edx],fs
  407e9b:	scas   eax,DWORD PTR es:[edi]
  407e9c:	(bad)  
  407e9d:	push   ebp
  407e9e:	pushf  
  407e9f:	xchg   esi,eax
  407ea0:	rol    DWORD PTR [eax+0x18],cl
  407ea3:	cmc    
  407ea4:	popf   
  407ea5:	push   0x27
  407ea7:	jmp    0x3501:0x43803a2d
  407eae:	cmp    al,0x7d
  407eb0:	adc    BYTE PTR ds:0x4531b5b0,bh
  407eb6:	pop    edi
  407eb7:	retf   0xfd3a
  407eba:	push   esp
  407ebb:	ds mov bl,0xec
  407ebe:	jl     0x407e91
  407ec0:	fstp   DWORD PTR [esi+0x308fbbc0]
  407ec6:	adc    bl,BYTE PTR [eax]
  407ec8:	popa   
  407ec9:	or     esi,DWORD PTR [eax]
  407ecb:	inc    esp
  407ecc:	inc    edx
  407ecd:	dec    eax
  407ece:	ret    
  407ecf:	mov    BYTE PTR [ebp-0x3bbc3f3e],al
  407ed5:	scas   al,BYTE PTR es:[edi]
  407ed6:	add    al,0x11
  407ed8:	(bad)  
  407ed9:	int    0xc5
  407edb:	ja     0x407ecb
  407edd:	xor    ah,0xe6
  407ee0:	push   ds
  407ee1:	and    DWORD PTR [edx+0x69b9ae2],ebp
  407ee7:	dec    edx
  407ee8:	jne    0x407e6d
  407eea:	ret    
  407eeb:	daa    
  407eec:	ret    0x3427
  407eef:	scas   al,BYTE PTR es:[di]
  407ef1:	mov    cl,0xd6
  407ef3:	add    dh,BYTE PTR [ebx]
  407ef5:	xchg   BYTE PTR [edx+eax*4],dl
  407ef8:	cmp    al,0x54
  407efa:	mov    ecx,0xb1978d65
  407eff:	ss scas al,BYTE PTR es:[edi]
  407f01:	dec    edx
  407f02:	outs   dx,DWORD PTR ds:[esi]
  407f03:	mov    bl,BYTE PTR [edx]
  407f05:	ja     0x407e93
  407f07:	push   esp
  407f08:	jmp    0xece5:0x7d49c630
  407f0f:	sub    BYTE PTR [ebp-0xf],cl
  407f12:	std    
  407f13:	or     BYTE PTR ds:0xca0f6e05,ch
  407f19:	mov    esi,DWORD PTR [ebx+edi*8+0x1055c8da]
  407f20:	mov    edx,0xf481d4e4
  407f25:	test   eax,0x8b8bd5fd
  407f2a:	icebp  
  407f2b:	jp     0x407f6a
  407f2d:	mov    ebp,0x4eb51b57
  407f32:	cmc    
  407f33:	adc    DWORD PTR [ecx],esp
  407f35:	jbe    0x407f01
  407f37:	adc    dl,bh
  407f39:	ds adc al,0x4c
  407f3c:	jo     0x407f52
  407f3e:	pop    edx
  407f3f:	mov    bh,0x3
  407f41:	popa   
  407f42:	xor    BYTE PTR [eax+0x67],ch
  407f45:	loope  0x407f4b
  407f47:	push   esi
  407f48:	test   BYTE PTR [ebx-0x46a20a7b],dh
  407f4e:	test   al,0x50
  407f50:	jp     0x407fa8
  407f52:	sbb    ah,BYTE PTR [esi]
  407f54:	es popa 
  407f56:	arpl   WORD PTR [esi],cx
  407f58:	fcomp  QWORD PTR [eax+ebp*8+0x310899f6]
  407f5f:	jg     0x407f34
  407f61:	add    BYTE PTR [ecx-0x2e],ah
  407f64:	arpl   dx,ax
  407f66:	pop    ds
  407f67:	sahf   
  407f68:	test   eax,0x2b1fca48
  407f6d:	inc    esp
  407f6e:	push   ss
  407f6f:	lahf   
  407f70:	nop
  407f71:	sbb    BYTE PTR [esi+ecx*8-0x13],bh
  407f75:	adc    al,0x86
  407f77:	jne    0x407fb5
  407f79:	in     al,0x95
  407f7b:	es (bad) 
  407f7d:	je     0x407fd7
  407f7f:	fnstsw WORD PTR [ecx-0x72710cd2]
  407f85:	xor    ebx,esi
  407f87:	jnp    0x407f6f
  407f89:	(bad)  
  407f8a:	push   eax
  407f8b:	jge    0x407ff3
  407f8d:	or     eax,DWORD PTR [ecx+0x29e16f2d]
  407f93:	aaa    
  407f94:	retf   
  407f95:	adc    dl,al
  407f97:	sub    BYTE PTR fs:[esi-0x5c],dl
  407f9b:	sub    DWORD PTR [ecx+0x4a7c3d58],0xfd9080e9
  407fa5:	dec    ebp
  407fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa7:	adc    bl,0xda
  407faa:	clc    
  407fab:	rol    DWORD PTR ds:0x54ecd550,1
  407fb1:	push   esp
  407fb2:	sub    BYTE PTR [esi-0x2a03e4d9],ah
  407fb8:	test   al,0x24
  407fba:	add    edx,DWORD PTR [eax]
  407fbc:	xchg   DWORD PTR [eax],esi
  407fbe:	and    ecx,DWORD PTR [edx]
  407fc0:	adc    eax,0x86cde1b4
  407fc5:	lods   al,BYTE PTR ds:[esi]
  407fc6:	mov    bh,0x87
  407fc8:	in     al,0x63
  407fca:	cli    
  407fcb:	mov    bl,0xd2
  407fcd:	hlt    
  407fce:	fimul  WORD PTR [eax]
  407fd0:	add    eax,0xe18e4909
  407fd5:	cmp    al,0x2e
  407fd7:	push   ebp
  407fd8:	out    0xb,al
  407fda:	push   0xffffff81
  407fdc:	in     al,0x4d
  407fde:	push   eax
  407fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe0:	mov    eax,ds:0x2811b75e
  407fe5:	xor    al,0x7f
  407fe7:	lock dec BYTE PTR [ebx+0x1d]
  407feb:	or     BYTE PTR [esp+esi*8],ah
  407fee:	int    0xd9
  407ff0:	sbb    BYTE PTR [esi-0x2],bh
  407ff3:	cmp    BYTE PTR [edi],0x5d
  407ff6:	push   edi
  407ff7:	stos   DWORD PTR es:[edi],eax
  407ff8:	push   cs
  407ff9:	and    BYTE PTR [ecx-0x6],bl
  407ffc:	sbb    cl,BYTE PTR [ebp-0x21]
  407fff:	pop    edx
  408000:	add    BYTE PTR ds:0x65493122,bl
  408006:	repz fnsave [edi+0x2a3a4703]
  40800d:	add    ecx,esp
  40800f:	add    al,0x11
  408011:	lea    ebx,[ebx]
  408013:	mov    ah,0xd0
  408015:	pop    ss
  408016:	mov    esp,0x64e40b3a
  40801b:	jl     0x407fab
  40801d:	pushf  
  40801e:	jl     0x40809a
  408020:	inc    esp
  408021:	sar    dl,0xc5
  408024:	push   0x2d65d1f7
  408029:	loop   0x407fb0
  40802b:	aad    0xc
  40802d:	mov    cl,0x72
  40802f:	inc    edx
  408030:	inc    eax
  408031:	cwde   
  408032:	sbb    esp,ebp
  408034:	aam    0x18
  408036:	lods   al,BYTE PTR ds:[esi]
  408037:	(bad)  
  408038:	in     al,0x25
  40803a:	test   al,0xef
  40803c:	jo     0x408025
  40803e:	xor    ch,BYTE PTR [edx+0x6c]
  408041:	add    DWORD PTR [edx-0x4c],0xffffffab
  408045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408046:	clc    
  408047:	ins    BYTE PTR es:[edi],dx
  408048:	jnp    0x408091
  40804a:	out    dx,eax
  40804b:	dec    esp
  40804c:	or     eax,0xe32aff50
  408051:	mov    eax,0x31c9fb24
  408056:	es add al,0x4a
  408059:	mov    bh,0x13
  40805b:	xor    ecx,DWORD PTR ds:0x863a9127
  408061:	sbb    cl,BYTE PTR [edx]
  408063:	outs   dx,BYTE PTR ds:[esi]
  408064:	and    BYTE PTR [ecx],ch
  408066:	mov    ds:0x2c172004,eax
  40806b:	jae    0x4080ca
  40806d:	push   es
  40806e:	fwait
  40806f:	call   0xf075bf4f
  408074:	into   
  408075:	adc    BYTE PTR [ecx-0x5b],0xb2
  408079:	inc    eax
  40807a:	aam    0xa4
  40807c:	fwait
  40807d:	cli    
  40807e:	in     eax,dx
  40807f:	retf   0x352e
  408082:	test   eax,0xe07cfbf5
  408087:	mov    cs,WORD PTR [ebx]
  408089:	hlt    
  40808a:	inc    esp
  40808b:	fcomp  QWORD PTR [edi]
  40808d:	xchg   ecx,eax
  40808e:	or     eax,0x4742e6bb
  408093:	mov    edi,0xf815ee9e
  408098:	in     eax,0x64
  40809a:	mov    dh,0x35
  40809d:	and    eax,DWORD PTR [ecx]
  40809f:	or     esi,0xd6312010
  4080a5:	idiv   BYTE PTR ds:0xe8eeebf9
  4080ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080ac:	(bad)  
  4080ad:	or     bh,BYTE PTR [esi-0x24]
  4080b0:	lods   eax,DWORD PTR ds:[esi]
  4080b1:	icebp  
  4080b2:	fcomp  DWORD PTR [ebx+0x79cf6212]
  4080b8:	mov    dh,0x96
  4080ba:	pushf  
  4080bb:	sbb    DWORD PTR [ebx+0x35],0x27
  4080bf:	cmp    al,0x80
  4080c1:	xchg   edi,esi
  4080c3:	adc    esi,DWORD PTR [edi+ebp*1-0x5d]
  4080c7:	inc    ebx
  4080c8:	mov    ds,WORD PTR [ecx+0x35bda82e]
  4080ce:	xor    al,0xa2
  4080d0:	dec    ecx
  4080d1:	pop    ecx
  4080d2:	aaa    
  4080d3:	das    
  4080d4:	jns    0x4080c4
  4080d6:	es jge 0x4080b9
  4080d9:	cdq    
  4080da:	mov    edi,ss
  4080dc:	lods   eax,DWORD PTR ds:[esi]
  4080dd:	xchg   edi,eax
  4080de:	mov    ch,0x33
  4080e0:	inc    edi
  4080e1:	jl     0x408124
  4080e3:	int3   
  4080e4:	fstp   DWORD PTR ds:0x26b02771
  4080ea:	mov    eax,0x110849c6
  4080ef:	arpl   di,si
  4080f1:	in     eax,dx
  4080f2:	bnd jb 0x4080d8
  4080f5:	into   
  4080f6:	sbb    esi,eax
  4080f8:	out    dx,eax
  4080f9:	sub    eax,0x4bbdd987
  4080fe:	adc    BYTE PTR [edx],0x1e
  408101:	sar    DWORD PTR [eax+0x56ff0a58],1
  408107:	xchg   esi,eax
  408108:	xchg   esp,eax
  408109:	test   DWORD PTR [ebx],ebp
  40810b:	mov    edi,0x2aeefbb0
  408110:	loop   0x408111
  408112:	mov    bh,0x7e
  408114:	mov    ch,0xc5
  408116:	cmp    al,0x5f
  408118:	cmc    
  408119:	sbb    al,0x7
  40811b:	xchg   edx,eax
  40811c:	dec    ebx
  40811d:	push   cs
  40811e:	jo     0x40815e
  408120:	into   
  408121:	mov    dl,0x1a
  408123:	add    esi,DWORD PTR [esi+0x3c]
  408126:	dec    ebx
  408127:	mov    cl,0xf1
  408129:	sbb    edx,DWORD PTR [edx]
  40812b:	ss sahf 
  40812d:	in     al,dx
  40812e:	add    ebp,DWORD PTR [ebp-0x40b02b6b]
  408134:	push   edx
  408135:	popf   
  408136:	(bad)  
  408137:	push   eax
  408138:	mov    esi,0xe950ba3e
  40813d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40813e:	das    
  40813f:	dec    esp
  408140:	int    0x80
  408142:	ror    BYTE PTR [ebx-0x3d223cb8],0x80
  408149:	inc    esi
  40814a:	ins    DWORD PTR es:[edi],dx
  40814b:	ins    BYTE PTR es:[edi],dx
  40814c:	jg     0x408151
  40814e:	je     0x408133
  408150:	mov    es:0xa3bc25d0,eax
  408156:	xchg   esp,eax
  408157:	mov    al,ds:0x2587e917
  40815c:	call   0x4135:0x9ea5d6bc
  408163:	mov    ds:0x9fc68573,eax
  408168:	or     al,0xc7
  40816a:	hlt    
  40816b:	stc    
  40816c:	enter  0x8ffd,0x3b
  408170:	mov    al,0xa8
  408172:	inc    ebx
  408173:	js     0x4081aa
  408175:	sbb    dh,ch
  408177:	mov    al,0xed
  408179:	sbb    eax,0x68903d56
  40817e:	mov    al,ds:0x5e83868
  408183:	push   esi
  408184:	and    eax,0xd857d10a
  408189:	pop    esi
  40818a:	sbb    al,0xc4
  40818c:	mov    cl,0xa8
  40818e:	rcl    BYTE PTR [bp+di-0x66a3],1
  408193:	data16 cmc 
  408195:	jge    0x4081a2
  408197:	push   es
  408198:	outs   dx,DWORD PTR ds:[esi]
  408199:	mov    gs,ebx
  40819b:	cmp    esi,edx
  40819d:	loopne 0x408201
  40819f:	dec    ebp
  4081a0:	pop    edi
  4081a1:	popf   
  4081a2:	add    DWORD PTR [ecx-0x62],0xffffff81
  4081a6:	jecxz  0x4081ea
  4081a8:	shl    BYTE PTR [edx+ebp*2],1
  4081ab:	inc    ebp
  4081ac:	ja     0x40820a
  4081ae:	jmp    0xd1fd0fa7
  4081b3:	leave  
  4081b4:	xchg   bl,ah
  4081b6:	push   0x7
  4081b8:	and    eax,0x17a61ae
  4081bd:	retf   0x7c80
  4081c0:	push   ds
  4081c1:	push   ecx
  4081c2:	push   ds
  4081c3:	or     esi,0x3f75bea
  4081c9:	sub    bh,BYTE PTR [eax]
  4081cb:	xor    al,0x9
  4081cd:	movhps QWORD PTR [esi+edi*8],xmm5
  4081d1:	jno    0x408237
  4081d3:	bound  ecx,QWORD PTR ds:[eax]
  4081d6:	imul   DWORD PTR [esi]
  4081d8:	inc    ebx
  4081d9:	push   0xcbceb689
  4081de:	retf   
  4081df:	hlt    
  4081e0:	xor    eax,0xa17a2f7a
  4081e5:	and    BYTE PTR [ebx+0x10],0x2b
  4081e9:	pop    ebp
  4081ea:	imul   eax,DWORD PTR [edi-0xff93e49],0xffffffa1
  4081f1:	inc    ecx
  4081f2:	rol    al,0xdb
  4081f5:	jge    0x40825d
  4081f7:	loope  0x4081ff
  4081f9:	sub    eax,0xbfcfcf5d
  4081fe:	cld    
  4081ff:	and    ebp,DWORD PTR [edi+0x1b]
  408202:	aas    
  408203:	(bad)  
  408204:	stos   DWORD PTR es:[edi],eax
  408205:	cmp    ecx,edx
  408207:	push   0x4a
  408209:	fs test eax,0x3cfbe14f
  40820f:	and    esp,0xfffffff8
  408212:	punpcklbw mm3,DWORD PTR [edx]
  408215:	dec    esi
  408216:	je     0x4081b8
  408218:	cmp    al,0x9f
  40821a:	mov    bl,0x9c
  40821c:	jnp    0x40825a
  40821e:	imul   DWORD PTR [edi-0x7eae7b48]
  408224:	stos   BYTE PTR es:[edi],al
  408225:	push   ecx
  408226:	pop    ebx
  408227:	mov    ds:0x98e2e8fc,al
  40822c:	mov    al,0x9e
  40822e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40822f:	adc    BYTE PTR [edx+0xf6f92f],dh
  408235:	fstp   TBYTE PTR [eax]
  408237:	cmp    eax,0x7c7f6832
  40823c:	(bad)  
  40823d:	jg     0x408263
  40823f:	cld    
  408240:	mov    ds:0x55bec151,eax
  408245:	pushf  
  408246:	push   ebp
  408247:	jno    0x408229
  408249:	imul   ebp,DWORD PTR [edi],0xffffffa7
  40824c:	mov    ebx,0x67c5f646
  408251:	adc    DWORD PTR [esi+0x5e51deba],edx
  408257:	jo     0x4082a7
  408259:	mov    esi,0x58fe794a
  40825e:	mov    al,0xb0
  408260:	cmp    al,0x15
  408262:	and    al,0xe
  408264:	call   0x80f1:0xee03cda5
  40826b:	mov    cl,0xa8
  40826d:	fcomp  QWORD PTR [eax]
  40826f:	inc    esi
  408270:	and    bh,al
  408272:	loope  0x40821a
  408274:	je     0x4082a1
  408276:	das    
  408277:	rdmsr  
  408279:	push   0x52
  40827b:	dec    eax
  40827c:	fadd   QWORD PTR ss:[esi-0x61]
  408280:	rcl    BYTE PTR [ebp*4-0x1f39cf0b],cl
  408287:	xor    esp,DWORD PTR [eax+0xa8380b1]
  40828d:	test   ch,0x3a
  408290:	xor    esi,DWORD PTR [esi-0x1a]
  408293:	cmp    BYTE PTR [ecx],ch
  408295:	addr16 mov edi,0x617df4
  40829b:	inc    eax
  40829c:	cwde   
  40829d:	cmp    eax,DWORD PTR [eax+0x37c81f7d]
  4082a3:	rcr    BYTE PTR [ebx-0x11],0x23
  4082a7:	adc    al,0x54
  4082a9:	sahf   
  4082aa:	dec    edi
  4082ab:	and    bl,BYTE PTR [ecx-0x50]
  4082ae:	mov    eax,ds:0xec2aae5
  4082b3:	sub    BYTE PTR [eax+0x58e6b4dc],al
  4082b9:	imul   ebx,edi,0xd2351a0
  4082bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082c0:	adc    esp,edx
  4082c2:	xor    eax,0xc461ec9b
  4082c7:	lods   al,BYTE PTR ds:[esi]
  4082c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082c9:	mov    ah,0x67
  4082cb:	add    dl,BYTE PTR [edx+esi*8+0x259412d6]
  4082d2:	sbb    bl,BYTE PTR ss:[eax-0x35]
  4082d6:	ins    BYTE PTR es:[edi],dx
  4082d7:	std    
  4082d8:	in     eax,0x9f
  4082da:	push   esp
  4082db:	in     eax,0xd1
  4082dd:	inc    edi
  4082de:	inc    ebp
  4082df:	and    eax,0x4c01a452
  4082e4:	pop    es
  4082e5:	clc    
  4082e6:	lds    esi,FWORD PTR [edx]
  4082e8:	pop    esi
  4082e9:	int3   
  4082ea:	(bad)  
  4082eb:	test   DWORD PTR [ecx],0xd5c1c2fe
  4082f1:	add    ecx,DWORD PTR [eax-0x21a789bf]
  4082f7:	outs   dx,BYTE PTR ds:[esi]
  4082f8:	dec    ebp
  4082f9:	push   ebp
  4082fa:	push   0xffffffd3
  4082fc:	scas   eax,DWORD PTR es:[edi]
  4082fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082fe:	mov    dh,0x3a
  408300:	lods   al,BYTE PTR ds:[esi]
  408301:	lahf   
  408302:	dec    ecx
  408303:	cmp    al,0x85
  408305:	xor    eax,DWORD PTR [edx+0x78]
  408308:	dec    dx
  40830a:	fst    st(1)
  40830c:	ss push 0xffffffbc
  40830f:	mov    ah,0x5
  408311:	outs   dx,DWORD PTR ds:[esi]
  408312:	sub    eax,DWORD PTR [ebp-0x38577a8e]
  408318:	or     DWORD PTR [ecx+0x18d58d8f],ebp
  40831e:	cmc    
  40831f:	sahf   
  408320:	pop    esp
  408321:	test   BYTE PTR [edi-0x1c],bl
  408324:	mov    esi,DWORD PTR [eax+0x28]
  408327:	call   0xa6749e39
  40832c:	xor    edx,esi
  40832e:	adc    eax,0xabfdeb44
  408333:	js     0x4082d2
  408335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408336:	adc    DWORD PTR [eax],0xffffffef
  408339:	xor    ah,BYTE PTR [edx]
  40833b:	fsubr  QWORD PTR [eax+ebp*4+0x6258b9d3]
  408342:	int    0xb9
  408344:	mov    ebp,0x88d43f94
  408349:	int3   
  40834a:	shl    BYTE PTR [edi+0x25],0x2b
  40834e:	or     DWORD PTR [esp+edi*2],0x97746d11
  408355:	outs   dx,BYTE PTR ds:[esi]
  408356:	fcom   QWORD PTR [ebp-0x4a]
  408359:	push   ebp
  40835a:	test   ecx,eax
  40835c:	(bad)  
  40835d:	addr16 push edi
  40835f:	push   eax
  408360:	(bad)
  408363:	pop    ss
  408364:	jae    0x4083ce
  408366:	mov    bh,0x26
  408368:	je     0x408328
  40836a:	and    edi,0xb3483295
  408370:	ds inc ecx
  408372:	test   bh,cl
  408374:	lahf   
  408375:	ret    0xd835
  408378:	sbb    eax,0xcfacd2e2
  40837d:	addr16 mov bh,0x49
  408380:	add    DWORD PTR [ebp+0x1f94492a],ebp
  408386:	cmp    BYTE PTR [esi+0x18aa15d4],dl
  40838c:	push   es
  40838d:	stos   DWORD PTR es:[edi],eax
  40838e:	cwde   
  40838f:	call   0x6e11:0x8ec1e2d
  408396:	popf   
  408397:	out    dx,al
  408398:	shl    DWORD PTR [ecx],cl
  40839a:	dec    edx
  40839b:	outs   dx,BYTE PTR ds:[esi]
  40839c:	pusha  
  40839d:	pop    ecx
  40839e:	sub    DWORD PTR [eax-0x3d86d5f],0xffffffd5
  4083a5:	and    BYTE PTR [esi],bl
  4083a7:	ss cdq 
  4083a9:	jnp    0x40836d
  4083ab:	jg     0x4083bd
  4083ad:	sbb    edx,DWORD PTR [edi+0x71]
  4083b0:	dec    esp
  4083b1:	loop   0x4083a0
  4083b3:	push   edx
  4083b4:	sbb    dh,bl
  4083b6:	cld    
  4083b7:	xchg   ecx,eax
  4083b8:	jge    0x408343
  4083ba:	imul   ecx,DWORD PTR [edx],0xfffffff1
  4083bd:	jmp    0x4083ce
  4083bf:	mov    edi,0xd4fc421
  4083c4:	clc    
  4083c5:	aas    
  4083c6:	je     0x40837a
  4083c8:	xchg   ebx,eax
  4083c9:	mov    eax,ds:0x9cdb6107
  4083ce:	std    
  4083cf:	add    al,0x32
  4083d2:	stos   BYTE PTR es:[edi],al
  4083d3:	sbb    eax,0xa8bca6fe
  4083d8:	loop   0x4083f0
  4083da:	enter  0x5b85,0x3f
  4083de:	jge    0x4083ca
  4083e0:	cmp    eax,0xc8404905
  4083e5:	mov    dh,BYTE PTR [edi]
  4083e7:	popa   
  4083e8:	(bad)  
  4083ea:	sub    al,dl
  4083ec:	inc    ebx
  4083ed:	jae    0x408375
  4083ef:	xor    DWORD PTR [edx],ecx
  4083f1:	dec    edi
  4083f2:	stc    
  4083f3:	inc    edi
  4083f4:	fcomi  st,st(2)
  4083f6:	cs pop ss
  4083f8:	cwde   
  4083f9:	mov    dh,0x35
  4083fb:	test   cl,ch
  4083fd:	call   0xede8d0ec
  408402:	repz sbb bl,BYTE PTR [ecx+0x589b4fe6]
  408409:	fidiv  DWORD PTR [esi-0x24]
  40840c:	sbb    eax,0x95201337
  408411:	int    0x31
  408413:	shr    dh,0x48
  408416:	loope  0x40839c
  408418:	mov    eax,0xae605e9c
  40841d:	dec    eax
  40841e:	mov    al,0xc5
  408420:	sbb    ecx,ecx
  408422:	pop    eax
  408423:	sub    BYTE PTR [edx-0x80],bh
  408426:	mov    edi,0x9f0ad09a
  40842b:	cli    
  40842c:	call   0xe0c3:0x6f6a886e
  408433:	mov    eax,ds:0xf4128254
  408438:	jmp    0xf34bd6cf
  40843d:	sub    BYTE PTR [ebp+0x31],ah
  408440:	sahf   
  408441:	fstp   DWORD PTR ds:0xb557815c
  408447:	push   0xa9ceddeb
  40844c:	mov    al,0xcd
  40844e:	add    eax,0x4ce775cc
  408453:	xor    dh,ch
  408455:	push   edx
  408456:	data16 sbb al,bl
  408459:	or     edi,DWORD PTR ds:0x63edabe0
  40845f:	or     bl,dl
  408461:	pop    ss
  408462:	imul   DWORD PTR [edx+edi*8]
  408465:	fstp   st(4)
  408467:	fidiv  WORD PTR [edi+eax*8+0x8]
  40846b:	lods   al,BYTE PTR ds:[esi]
  40846c:	ss call 0x2c6aa624
  408472:	sbb    ah,bh
  408474:	push   eax
  408475:	stos   DWORD PTR es:[edi],eax
  408476:	sahf   
  408477:	ficom  DWORD PTR [ebx*8-0x16a955f3]
  40847e:	(bad)  
  40847f:	jne    0x408474
  408481:	daa    
  408482:	dec    edi
  408483:	data16 fdiv st,st(3)
  408486:	repz mov edx,0x8f6c81a1
  40848c:	ret    0x275c
  40848f:	dec    edx
  408490:	in     eax,0x54
  408492:	mov    BYTE PTR [eax-0x1af7219c],dh
  408498:	add    DWORD PTR [edx+0x2a25d10c],ecx
  40849e:	adc    al,0x8a
  4084a0:	iret   
  4084a1:	xchg   esp,eax
  4084a3:	and    eax,0xac43e5cc
  4084a8:	icebp  
  4084a9:	aad    0xdd
  4084ab:	ss stos BYTE PTR es:[edi],al
  4084ad:	adc    DWORD PTR [eax+0x32461957],esp
  4084b3:	ror    BYTE PTR ds:0xf886f9ba,1
  4084b9:	mov    eax,0x81334438
  4084be:	jo     0x4084e3
  4084c0:	mov    ebx,0xe1bc96e
  4084c5:	das    
  4084c6:	cmp    al,BYTE PTR [ebp+0x233daa2]
  4084cc:	jmp    0x408474
  4084ce:	mov    edx,0x6207336e
  4084d3:	jne    0x4084e5
  4084d5:	mov    dl,0xc1
  4084d7:	pushf  
  4084d8:	or     al,BYTE PTR [eax+ebx*8-0x67ed35cb]
  4084df:	test   eax,0xf17cf5e4
  4084e4:	or     DWORD PTR [esi-0x361edfd4],ebx
  4084ea:	xor    al,BYTE PTR [edx-0x28afd91c]
  4084f0:	in     al,0x62
  4084f2:	scas   al,BYTE PTR es:[edi]
  4084f3:	xor    DWORD PTR [eax+0x68],edi
  4084f6:	out    0xe,eax
  4084f8:	(bad)
  4084fc:	mov    BYTE PTR [edx+ebx*1],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a40b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a40f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a413
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a41b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a3e3
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [edx],dl
  4089f8:	mov    bh,0x8c
  4089fa:	adc    edi,eax
  4089fc:	adc    eax,0x5ce88383
  408a01:	add    DWORD PTR [ebx+0x66167005],0x4d
  408a08:	mov    dl,0x9d
  408a0a:	push   ebx
  408a0b:	push   ss
  408a0c:	inc    edi
  408a0d:	enter  0xe6a4,0x8f
  408a11:	jg     0x408a7d
  408a13:	outs   dx,BYTE PTR ds:[esi]
  408a14:	js     0x408a05
  408a16:	aas    
  408a17:	popf   
  408a18:	sbb    al,0x1
  408a1a:	pop    ecx
  408a1b:	stos   DWORD PTR es:[edi],eax
  408a1c:	xchg   edx,eax
  408a1d:	call   DWORD PTR [edi-0x42]
  408a20:	hlt    
  408a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a22:	int    0x5b
  408a24:	mov    bh,0x12
  408a26:	mov    ch,BYTE PTR [eiz*2-0xdadf781]
  408a2d:	imul   edi,DWORD PTR [eax+eiz*4],0xb46cc199
  408a34:	add    edi,DWORD PTR [eax-0x7fde9e26]
  408a3a:	sbb    dl,ah
  408a3c:	dec    edi
  408a3d:	inc    ebx
  408a3e:	jmp    0xcf730b
  408a43:	cmp    ecx,ebx
  408a45:	fcomp  DWORD PTR [eax-0xf]
  408a48:	stc    
  408a49:	sbb    DWORD PTR [ebp+ecx*4-0x66a23a3],ecx
  408a50:	int3   
  408a51:	div    DWORD PTR [ecx]
  408a53:	cwde   
  408a54:	mov    ah,0xf3
  408a56:	sub    esp,edx
  408a58:	nop
  408a59:	pop    ds
  408a5a:	xchg   edi,eax
  408a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a5c:	js     0x408acf
  408a5e:	dec    ebp
  408a5f:	cmp    al,0xcc
  408a61:	aaa    
  408a62:	sti    
  408a63:	hlt    
  408a64:	add    eax,0x44bc5013
  408a69:	jg     0x408a7a
  408a6b:	call   0xac5a2909
  408a70:	(bad)  
  408a71:	pushf  
  408a72:	xor    cl,BYTE PTR [edi]
  408a74:	and    BYTE PTR [ebp-0x17],ah
  408a77:	arpl   WORD PTR [edx+0x1a],cx
  408a7a:	jbe    0x408adf
  408a7c:	jo     0x408ae1
  408a7e:	jmp    0x408a16
  408a80:	adc    cl,ch
  408a82:	pop    eax
  408a83:	jbe    0x408a52
  408a85:	aas    
  408a86:	pop    ss
  408a87:	sbb    dh,BYTE PTR [edx-0x3c]
  408a8a:	sub    al,0x3f
  408a8c:	aas    
  408a8d:	(bad)  [edi-0x3fc56801]
  408a93:	add    eax,0x6a315116
  408a98:	pop    edi
  408a99:	lods   eax,DWORD PTR ds:[esi]
  408a9a:	test   al,0xf8
  408a9c:	sub    DWORD PTR [edi-0x14da2ac2],edx
  408aa2:	sti    
  408aa3:	pop    ds
  408aa4:	in     eax,dx
  408aa5:	in     al,0xfe
  408aa7:	sbb    al,0x50
  408aa9:	pop    esi
  408aaa:	cmp    dl,bl
  408aac:	ins    WORD PTR es:[edi],dx
  408aae:	dec    eax
  408aaf:	push   esi
  408ab0:	mov    ah,0x3d
  408ab2:	mov    ds:0xaa1d4a19,al
  408ab7:	fchs   
  408ab9:	loope  0x408a80
  408abb:	mov    es,WORD PTR [esi]
  408abd:	repnz xor al,0x1
  408ac0:	leave  
  408ac1:	mov    ah,0x40
  408ac3:	stos   DWORD PTR es:[edi],eax
  408ac4:	cmp    al,0x1d
  408ac6:	(bad)  
  408ac8:	sub    DWORD PTR [ebx-0x3eff362b],edx
  408ace:	jbe    0x408aaf
  408ad0:	mov    edi,0x186a2579
  408ad5:	sbb    BYTE PTR [ebx-0x40d9a35d],0xf
  408adc:	push   ebp
  408add:	pushf  
  408ade:	cmp    eax,0x87391121
  408ae3:	or     eax,0xae416256
  408ae8:	lods   al,BYTE PTR ds:[esi]
  408ae9:	repz mov ch,0xe9
  408aec:	int3   
  408aed:	mov    edi,0x47d27243
  408af2:	push   eax
  408af3:	xor    esp,DWORD PTR [esi+0x684e4bd8]
  408af9:	enter  0xeb0d,0x88
  408afd:	and    esi,0x5b05ea5f
  408b03:	test   eax,0x6ce3de1f
  408b08:	xor    dh,cl
  408b0a:	lahf   
  408b0b:	addr16 test eax,0x7d3ac5c0
  408b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b12:	shl    BYTE PTR [eax+0x5f977f6f],cl
  408b18:	mov    eax,ds:0xdc0f835d
  408b1d:	(bad)  
  408b1e:	pop    eax
  408b1f:	rol    BYTE PTR [ebp-0x32ae3925],1
  408b25:	fdivr  st,st(5)
  408b27:	xor    ch,BYTE PTR [esp+eiz*2+0x50179ec1]
  408b2e:	jae    0x408b7a
  408b30:	add    BYTE PTR [edi-0x38ddc951],dl
  408b36:	mov    ah,0xd7
  408b38:	fsubr  st(1),st
  408b3a:	dec    ebx
  408b3b:	mov    ch,0x31
  408b3d:	cmp    eax,0x43de6f9f
  408b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b43:	push   edx
  408b44:	outs   dx,BYTE PTR ds:[esi]
  408b45:	icebp  
  408b46:	mov    ch,0x27
  408b48:	fild   QWORD PTR [eax+0x7fadea02]
  408b4e:	call   0x7c1a9f49
  408b53:	mov    bl,0xc3
  408b55:	mov    cl,0x7b
  408b57:	in     eax,dx
  408b58:	mov    dh,BYTE PTR [ebp-0x5dfb7281]
  408b5e:	shl    DWORD PTR [esi],0x5a
  408b61:	icebp  
  408b62:	mov    edi,0x6116f75f
  408b67:	jb     0x408b6f
  408b69:	xor    ch,BYTE PTR [ebp+0x25]
  408b6c:	mov    eax,0xf7929b36
  408b71:	xchg   esi,eax
  408b72:	das    
  408b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b74:	xchg   ebx,eax
  408b75:	add    DWORD PTR ds:0x9636adbd,esi
  408b7b:	add    eax,0xaab9fa1f
  408b80:	in     al,0xfa
  408b82:	mov    DWORD PTR [ebx+0x1e],esp
  408b85:	scas   al,BYTE PTR es:[edi]
  408b86:	inc    BYTE PTR [esi-0x41]
  408b89:	fistp  DWORD PTR [edi+0x6852303e]
  408b8f:	jl     0x408b18
  408b91:	mov    dl,0x77
  408b93:	sub    BYTE PTR [esi],dh
  408b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b96:	adc    eax,0x91270274
  408b9b:	cmp    ecx,DWORD PTR [edx+0xc]
  408b9e:	pushf  
  408b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ba0:	iret   
  408ba1:	inc    ebx
  408ba2:	mov    cl,dh
  408ba4:	and    BYTE PTR [esi],ah
  408ba6:	sti    
  408ba7:	sbb    al,0x28
  408ba9:	aaa    
  408baa:	jle    0x408bff
  408bac:	jno    0x408b75
  408bae:	mul    DWORD PTR [ecx+0x58]
  408bb1:	add    esi,eax
  408bb3:	aaa    
  408bb4:	sub    eax,0xfa4b1c1a
  408bb9:	xchg   ecx,eax
  408bba:	in     eax,0x2a
  408bbc:	ds je  0x408bf9
  408bbf:	imul   BYTE PTR [eax]
  408bc1:	or     DWORD PTR [edx],ebx
  408bc3:	xchg   edi,eax
  408bc4:	scas   al,BYTE PTR es:[edi]
  408bc5:	scas   eax,DWORD PTR es:[edi]
  408bc6:	pop    ecx
  408bc7:	push   ebx
  408bc8:	iret   
  408bc9:	shl    DWORD PTR [ecx-0x3d],0xe5
  408bcd:	(bad)  
  408bce:	sbb    BYTE PTR cs:[eax],ch
  408bd1:	pusha  
  408bd2:	imul   ebx,DWORD PTR [esi+esi*4],0xffffffc1
  408bd6:	push   ebp
  408bd7:	pushf  
  408bd8:	adc    al,0xdb
  408bda:	aam    0xd6
  408bdc:	(bad)  
  408bdd:	pop    ecx
  408bde:	cmp    BYTE PTR [edi],ch
  408be0:	fcomp  QWORD PTR [eax+0x37a0397c]
  408be6:	and    eax,0x5b0eb808
  408beb:	jp     0x408c1a
  408bed:	adc    DWORD PTR [eax],0x1d
  408bf0:	mov    eax,0x7957bd7e
  408bf5:	(bad)  
  408bf6:	aam    0xda
  408bf8:	pop    esp
  408bf9:	leave  
  408bfa:	stc    
  408bfb:	push   ds
  408bfc:	and    bl,dl
  408bfe:	in     eax,0xb
  408c00:	sahf   
  408c01:	sub    esp,DWORD PTR [ebx]
  408c03:	fst    QWORD PTR ds:0xb0fe7ee1
  408c09:	fs push si
  408c0c:	lds    eax,FWORD PTR [edi-0x2a]
  408c0f:	mov    al,0xd6
  408c11:	fistp  WORD PTR [eax+eax*8-0x5118d1e7]
  408c18:	addr16 xchg edx,eax
  408c1a:	div    eax
  408c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c1d:	(bad)  
  408c1e:	imul   esp,DWORD PTR [edi-0x33],0xacabb05c
  408c25:	jecxz  0x408c8f
  408c27:	int    0x6
  408c29:	mov    eax,0xecc599bb
  408c2e:	sub    ebp,DWORD PTR [eax-0x177dd0ef]
  408c34:	pop    esp
  408c35:	xchg   edx,eax
  408c36:	cmc    
  408c37:	sti    
  408c38:	sbb    DWORD PTR [ebp-0x734cd553],ecx
  408c3e:	mov    edi,0x5f36e89a
  408c43:	popf   
  408c44:	std    
  408c45:	in     eax,dx
  408c46:	dec    ebx
  408c47:	dec    ebx
  408c48:	and    DWORD PTR [edi+0x53],0x17
  408c4c:	out    dx,al
  408c4d:	fcomp  DWORD PTR [eax+0x29ac5467]
  408c53:	test   BYTE PTR [eax-0x52],bl
  408c56:	scas   eax,DWORD PTR es:[edi]
  408c57:	cmp    esp,DWORD PTR [ecx+0x62]
  408c5a:	fmul   QWORD PTR [ebx+0x5d]
  408c5d:	push   edi
  408c5e:	ins    BYTE PTR es:[edi],dx
  408c5f:	ins    DWORD PTR es:[edi],dx
  408c60:	xchg   dl,cl
  408c62:	adc    eax,ecx
  408c64:	lahf   
  408c65:	push   eax
  408c66:	fdivr  QWORD PTR ds:0xf407d487
  408c6c:	xor    DWORD PTR [edx+esi*1],eax
  408c6f:	xor    al,0x4c
  408c71:	or     eax,0xc86e38e6
  408c76:	fs enter 0xd292,0xc9
  408c7b:	xchg   DWORD PTR [eax+ebx*1+0x4abb13da],edx
  408c82:	pop    ebx
  408c83:	mov    ecx,0xb4575d83
  408c88:	dec    ebx
  408c89:	mov    ah,BYTE PTR [edx]
  408c8b:	sbb    eax,0x53706d01
  408c90:	sub    al,BYTE PTR [eax-0x41]
  408c93:	cmp    ah,ch
  408c95:	test   BYTE PTR [ecx],ah
  408c97:	(bad)  
  408c98:	mov    esi,0xbb468f26
  408c9d:	sub    ch,BYTE PTR [edx+0x322781e5]
  408ca3:	pop    ebp
  408ca4:	cmp    eax,0xe8a8702e
  408ca9:	add    dh,ch
  408cab:	stos   WORD PTR es:[edi],ax
  408cad:	mov    al,dl
  408caf:	clc    
  408cb0:	es out 0x18,eax
  408cb3:	dec    esi
  408cb4:	mov    cl,0xa3
  408cb6:	in     eax,dx
  408cb7:	int    0x61
  408cb9:	mov    WORD PTR [edx-0x6d],cs
  408cbc:	sub    DWORD PTR [esi],eax
  408cbe:	mov    esi,0xf0719b87
  408cc3:	add    esp,DWORD PTR [ebx-0x26877322]
  408cc9:	and    DWORD PTR [ebx-0xa],0xffffff8e
  408ccd:	push   ds
  408cce:	cmp    eax,0x5f4fa2bb
  408cd3:	mov    ebx,0xefc001e3
  408cd8:	mov    esi,DWORD PTR [ebp+0x328ea2ee]
  408cde:	test   eax,0x41df062c
  408ce3:	inc    ecx
  408ce4:	xchg   esi,eax
  408ce5:	js     0x408ce4
  408ce7:	jl     0x408d12
  408ce9:	mov    dl,0x33
  408ceb:	in     al,dx
  408cec:	xchg   DWORD PTR [eax+0x56f27846],edi
  408cf2:	or     al,0xf9
  408cf4:	pop    ds
  408cf5:	imul   ebp,edx,0x10479509
  408cfb:	push   esp
  408cfc:	jg     0x408cdc
  408cfe:	retf   0xfc68
  408d01:	add    eax,DWORD PTR [edi+0x72479793]
  408d07:	mov    cs,WORD PTR [edi+0x1f]
  408d0a:	sar    BYTE PTR [eax],cl
  408d0c:	dec    esi
  408d0d:	mov    eax,ds:0xbf822a3f
  408d12:	add    BYTE PTR [edx+0x1a],al
  408d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d16:	xor    eax,0xfe837de
  408d1b:	pop    ss
  408d1c:	rcr    esp,1
  408d1e:	out    dx,al
  408d1f:	sub    DWORD PTR [esi+0x7bd8576c],edx
  408d25:	rcr    edx,cl
  408d27:	ficomp WORD PTR [edi+0x48]
  408d2a:	retf   
  408d2b:	fwait
  408d2c:	ja     0x408d07
  408d2e:	(bad)  
  408d2f:	idiv   DWORD PTR [esi]
  408d31:	out    dx,al
  408d32:	stos   BYTE PTR es:[edi],al
  408d33:	jmp    0x408db4
  408d35:	test   eax,0x946f4760
  408d3a:	out    dx,eax
  408d3b:	xor    dl,BYTE PTR [edi-0x1f]
  408d3e:	cmp    al,0xa9
  408d40:	and    al,0x41
  408d42:	xchg   ebp,eax
  408d43:	push   es
  408d44:	mov    dh,0xbd
  408d46:	push   0xa
  408d48:	in     eax,dx
  408d49:	push   ds
  408d4a:	stos   BYTE PTR es:[edi],al
  408d4b:	xlat   BYTE PTR ds:[ebx]
  408d4c:	ja     0x408d2f
  408d4e:	sub    eax,DWORD PTR [ecx-0x77]
  408d51:	sub    al,0x60
  408d53:	sbb    esp,DWORD PTR [eax+0x8]
  408d56:	scas   al,BYTE PTR es:[edi]
  408d57:	xchg   esp,eax
  408d58:	xor    esp,DWORD PTR [ecx]
  408d5a:	bound  ebp,QWORD PTR [edi+0x106f4331]
  408d60:	ror    DWORD PTR [edx-0x54ce9163],1
  408d66:	test   BYTE PTR [edx-0x6ef0e68c],bh
  408d6c:	test   DWORD PTR [ecx+0x12],0x2f58fba6
  408d73:	mov    edx,0x1af813e
  408d78:	mov    dl,0xbc
  408d7a:	daa    
  408d7b:	sub    al,0xb9
  408d7d:	jo     0x408da7
  408d7f:	push   ebp
  408d80:	div    BYTE PTR [ecx+0x44c46b2b]
  408d86:	adc    DWORD PTR [esi+0x22],eax
  408d89:	(bad)  [eax]
  408d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d8c:	lods   eax,DWORD PTR ds:[esi]
  408d8d:	add    al,0xed
  408d8f:	mov    es,WORD PTR [esi]
  408d91:	and    edi,ebx
  408d93:	mov    WORD PTR [edx-0x54],?
  408d96:	sahf   
  408d97:	adc    dl,dl
  408d99:	jmp    0xb3467eed
  408d9e:	in     eax,dx
  408d9f:	retf   0xf343
  408da2:	sub    edx,ecx
  408da4:	inc    ebx
  408da5:	xchg   edx,eax
  408da6:	pop    esi
  408da7:	test   DWORD PTR [eax],esi
  408da9:	mov    ecx,0xa83ab7ff
  408dae:	lods   al,BYTE PTR ds:[esi]
  408daf:	xor    DWORD PTR [esp+esi*4],eax
  408db2:	push   ebx
  408db3:	mov    esp,0x8a6b0c0b
  408db8:	cmp    BYTE PTR [ecx+eiz*1-0xa444324],dl
  408dbf:	jnp    0xca03ee07
  408dc5:	stc    
  408dc6:	je     0x408e32
  408dc8:	jno    0x408dfd
  408dca:	and    cl,BYTE PTR [ebx]
  408dcc:	add    ah,cl
  408dce:	pop    edi
  408dcf:	inc    edi
  408dd0:	(bad)  
  408dd1:	push   cs
  408dd2:	leave  
  408dd3:	popa   
  408dd4:	xor    al,0x44
  408dd6:	cdq    
  408dd7:	mov    al,ds:0x5a1eac82
  408ddc:	mov    bh,cl
  408dde:	sub    DWORD PTR [ecx],0x43
  408de1:	or     BYTE PTR [eax-0x5e4ae57f],bl
  408de7:	or     edx,DWORD PTR [ecx+0x27]
  408dea:	mov    cs,eax
  408dec:	lds    edi,FWORD PTR [ecx-0xe]
  408def:	out    0x28,eax
  408df1:	mov    al,BYTE PTR [esi]
  408df3:	popa   
  408df4:	div    DWORD PTR [eax+ecx*8]
  408df7:	fs scas al,BYTE PTR es:[edi]
  408df9:	jno    0x408dc9
  408dfb:	add    al,bl
  408dfd:	ror    DWORD PTR [ecx+0x50],0xce
  408e01:	mov    BYTE PTR [ecx+eax*4-0x45],bl
  408e05:	xchg   ebx,eax
  408e06:	pop    ss
  408e07:	je     0x408e4c
  408e09:	sbb    DWORD PTR [ebx],ecx
  408e0b:	xchg   ebx,eax
  408e0c:	popa   
  408e0d:	xor    ecx,0x61
  408e10:	inc    ecx
  408e11:	repnz imul ecx,eax,0x4f
  408e15:	scas   al,BYTE PTR es:[edi]
  408e16:	stc    
  408e17:	leave  
  408e18:	mov    dh,0x7b
  408e1a:	mov    ecx,0x687e3dfe
  408e1f:	push   ecx
  408e20:	rcl    BYTE PTR [esi+0x61b807b7],0x98
  408e27:	(bad)  
  408e28:	loopne 0x408dff
  408e2a:	aam    0x1b
  408e2c:	stc    
  408e2d:	sub    DWORD PTR [esi],edx
  408e2f:	cmp    edx,eax
  408e31:	cmp    ebx,DWORD PTR [eax-0x7d]
  408e34:	mov    al,0x82
  408e36:	cdq    
  408e37:	mov    dh,0x1f
  408e39:	cmp    BYTE PTR ds:0x69c2aa6c,cl
  408e3f:	arpl   di,ax
  408e41:	mov    cl,0xc8
  408e43:	jno    0x408eae
  408e45:	xchg   DWORD PTR [ebx+edi*2+0x56],edi
  408e49:	pop    ecx
  408e4a:	test   DWORD PTR [edx+0x76],edi
  408e4d:	and    edx,esi
  408e4f:	mov    esp,0xf84dbffc
  408e54:	je     0x408deb
  408e56:	in     al,0x7
  408e58:	sbb    bh,BYTE PTR [ecx]
  408e5a:	pop    esp
  408e5b:	mov    WORD PTR [ecx-0x4ef608df],?
  408e61:	mov    WORD PTR ds:0x56d1b29d,ds
  408e67:	jg     0x408e7e
  408e69:	aas    
  408e6a:	inc    eax
  408e6b:	sub    ch,dl
  408e6d:	jnp    0x408e72
  408e6f:	rdtsc  
  408e71:	out    0x70,al
  408e73:	sub    edi,esp
  408e75:	pop    ds
  408e76:	xor    DWORD PTR [edx+0x544a0472],esp
  408e7c:	rcr    DWORD PTR [edx+eax*8-0x51c2cfbb],cl
  408e83:	and    BYTE PTR [eax],dl
  408e85:	jg     0x408ec0
  408e87:	sbb    ebx,esi
  408e89:	xor    DWORD PTR [esi],ebp
  408e8b:	dec    edi
  408e8c:	mov    esi,0xc0b71200
  408e91:	pop    edx
  408e92:	mov    eax,DWORD PTR [ecx+0x3d4e2e16]
  408e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e99:	lea    ebp,[esi+0x74]
  408e9c:	imul   edx,edi,0xffffffe8
  408e9f:	push   es
  408ea0:	(bad)  {k1}{z}
  408ea5:	push   esp
  408ea6:	fsub   st(0),st
  408ea8:	retf   0x6cab
  408eab:	sbb    DWORD PTR [edi],0x6c3c2c55
  408eb1:	out    0xf,eax
  408eb3:	inc    ebp
  408eb4:	pop    esi
  408eb5:	cmp    al,0x49
  408eb7:	jle    0x408ed9
  408eb9:	mov    dl,0x8e
  408ebb:	fcmovnu st,st(3)
  408ebd:	in     eax,dx
  408ebe:	push   edx
  408ebf:	push   esp
  408ec0:	push   edx
  408ec1:	inc    edx
  408ec2:	dec    edi
  408ec3:	pop    DWORD PTR [ecx+0x350671f5]
  408ec9:	enter  0x4b1,0x64
  408ecd:	arpl   WORD PTR [edx],bx
  408ecf:	inc    ebp
  408ed0:	mov    bh,0x5b
  408ed2:	cwde   
  408ed3:	jmp    0x4a318251
  408ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ed9:	rol    DWORD PTR [edi+0x12],1
  408edc:	push   ss
  408edd:	in     al,0xf4
  408edf:	cmc    
  408ee0:	rcr    DWORD PTR [ecx+0x7ceb8ddf],1
  408ee6:	and    BYTE PTR ds:0xab4933b1,ch
  408eec:	lahf   
  408eed:	fadd   DWORD PTR [esi-0x49]
  408ef0:	enter  0xed0,0x7f
  408ef4:	scas   al,BYTE PTR es:[edi]
  408ef5:	repz ja 0x408f34
  408ef8:	stos   DWORD PTR es:[edi],eax
  408ef9:	das    
  408efa:	mov    eax,0xb7dbe2d6
  408eff:	inc    edi
  408f00:	push   ecx
  408f01:	shl    edi,0xe0
  408f04:	out    0xf4,eax
  408f06:	xchg   ecx,eax
  408f07:	imul   edi,DWORD PTR [esi],0x3
  408f0a:	and    BYTE PTR [edi-0x7360e1a2],ch
  408f10:	xor    DWORD PTR [edx-0x307a36a],ebp
  408f16:	daa    
  408f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f18:	push   0xcf6707be
  408f1d:	jns    0x408eee
  408f1f:	push   ds
  408f20:	add    BYTE PTR es:[edi+0x3a],ch
  408f24:	pop    ss
  408f25:	mov    ch,0xd4
  408f27:	pushf  
  408f28:	scas   eax,DWORD PTR es:[edi]
  408f29:	cwde   
  408f2a:	and    al,ah
  408f2c:	and    al,0x13
  408f2e:	into   
  408f2f:	mov    ch,0xd1
  408f31:	mov    al,ds:0x8ad70ec8
  408f36:	test   eax,0x31ee531f
  408f3b:	outs   dx,BYTE PTR ds:[esi]
  408f3c:	push   edi
  408f3d:	mov    ch,0x94
  408f3f:	cmp    ecx,ecx
  408f41:	inc    esi
  408f42:	nop
  408f43:	jmp    0xcb1b:0x234fd950
  408f4a:	fsubr  QWORD PTR [ebp+0x771bc9d5]
  408f50:	push   cs
  408f51:	iret   
  408f52:	and    DWORD PTR [eax],esp
  408f54:	sub    al,0x98
  408f56:	sub    eax,0x1e7e8fa0
  408f5b:	inc    ecx
  408f5c:	mov    ebp,0xe9963b45
  408f61:	push   ebx
  408f62:	enter  0xf145,0x6c
  408f66:	and    al,0x99
  408f68:	mov    edi,DWORD PTR [edi+0x54]
  408f6b:	mov    bh,0xd5
  408f6d:	adc    BYTE PTR [ebx-0x2f],dl
  408f70:	sti    
  408f71:	push   ebx
  408f72:	loopne 0x408fc3
  408f74:	(bad)  
  408f75:	and    eax,0x5ed1c10b
  408f7a:	jle    0x408f12
  408f7c:	mov    esp,DWORD PTR [edx-0x7b]
  408f7f:	stos   BYTE PTR es:[edi],al
  408f80:	fcom   DWORD PTR [edi]
  408f82:	fst    DWORD PTR [ecx]
  408f84:	call   0xf3819f3b
  408f89:	jmp    0x2e60:0x91a2c980
  408f90:	dec    ebx
  408f91:	cmc    
  408f92:	icebp  
  408f93:	stos   DWORD PTR es:[edi],eax
  408f94:	push   0x1f
  408f96:	ret    
  408f97:	std    
  408f98:	(bad)  
  408f99:	adc    BYTE PTR [eax-0x4f9336cf],dl
  408f9f:	sbb    al,0x8c
  408fa1:	push   eax
  408fa2:	pop    ebx
  408fa3:	mov    edx,0xd63d1280
  408fa8:	test   al,0xe5
  408faa:	ror    DWORD PTR [esi],1
  408fac:	ret    
  408fad:	mov    bl,BYTE PTR [edi-0x75ce492e]
  408fb3:	push   es
  408fb4:	xchg   BYTE PTR [ebx],dh
  408fb6:	(bad)  
  408fb7:	(bad)  
  408fb8:	(bad)  [edi+0x39]
  408fbb:	inc    esi
  408fbc:	nop
  408fbd:	mov    bl,0x40
  408fbf:	je     0x408feb
  408fc1:	xchg   ebp,eax
  408fc2:	cmc    
  408fc3:	pop    es
  408fc4:	fisub  DWORD PTR [eax+0x8]
  408fc7:	retf   
  408fc8:	push   0xfffffff6
  408fca:	pusha  
  408fcb:	imul   ebp,DWORD PTR [ebx+0xa],0xffffff88
  408fcf:	push   es
  408fd0:	lea    ebx,ds:0xd986cd55
  408fd6:	imul   esp,DWORD PTR [edi+ecx*1+0x5e],0x7dbc1746
  408fde:	adc    al,al
  408fe0:	fcmovnbe st,st(4)
  408fe2:	fnsetpm(287 only) 
  408fe4:	lahf   
  408fe5:	dec    ecx
  408fe6:	(bad)  
  408fe7:	adc    DWORD PTR [edx],edi
  408fe9:	(bad)  
  408fea:	arpl   WORD PTR ss:[edx-0x80],dx
  408fee:	fst    DWORD PTR [esi-0x5e]
  408ff1:	(bad)  
  408ff2:	push   ds
  408ff3:	jno    0x408ff7
  408ff5:	push   ds
  408ff6:	dec    eax
  408ff7:	xchg   edx,eax
  408ff8:	jmp    0x4424:0xd3887869
  408fff:	shl    DWORD PTR [ebx-0x35],cl
  409002:	mov    eax,ds:0xb99d1e76
  409007:	lahf   
  409008:	push   esi
  409009:	inc    ecx
  40900a:	xchg   edx,eax
  40900b:	dec    ebx
  40900c:	mov    bl,dh
  40900e:	lock jb 0x408f9f
  409011:	imul   eax,DWORD PTR [ebx],0xd337748
  409017:	mov    ah,0x5b
  409019:	jmp    0x1b99c7a
  40901e:	xor    BYTE PTR [ecx-0x20c1e3d0],cl
  409024:	lods   al,BYTE PTR ds:[esi]
  409025:	or     ch,dl
  409027:	jae    0x409032
  409029:	dec    ecx
  40902a:	test   DWORD PTR [esi+0x6a],0x38d68f5
  409031:	inc    ebp
  409032:	fwait
  409033:	(bad)  
  409034:	retf   
  409035:	add    eax,0x96e6fc16
  40903a:	jbe    0x409089
  40903c:	fdivr  QWORD PTR [edi+edx*8-0x74]
  409040:	test   BYTE PTR [eax-0x4b],al
  409043:	mov    edi,0xe1b772cc
  409048:	mov    ds:0x72d98815,al
  40904d:	lock test BYTE PTR [esi],al
  409050:	stos   BYTE PTR es:[edi],al
  409051:	pop    ecx
  409052:	repnz out 0xc5,al
  409055:	jg     0x408fde
  409057:	loope  0x40906e
  409059:	mov    dl,0xb7
  40905b:	inc    edi
  40905c:	mov    edx,0x976e2bd9
  409061:	add    eax,0xd99accf3
  409066:	jl     0x409018
  409068:	dec    edi
  409069:	pop    eax
  40906a:	sub    al,ch
  40906c:	inc    esi
  40906d:	add    dh,BYTE PTR [ebp+0xf]
  409070:	add    eax,DWORD PTR [ebx-0x64]
  409073:	inc    esp
  409074:	xchg   edx,eax
  409075:	fld    QWORD PTR [ecx]
  409077:	cdq    
  409078:	rcr    BYTE PTR [eax],cl
  40907a:	push   ebx
  40907b:	push   esi
  40907c:	ins    DWORD PTR es:[edi],dx
  40907d:	lea    edx,[edx-0xc83b7dc]
  409083:	dec    eax
  409084:	xchg   edx,eax
  409085:	clc    
  409086:	lock ins BYTE PTR es:[edi],dx
  409088:	(bad)  
  409089:	xchg   edx,eax
  40908a:	pop    ebx
  40908b:	and    eax,0x3c372e8f
  409090:	lods   al,BYTE PTR ds:[esi]
  409091:	cmp    BYTE PTR [eax+eax*8-0x5b],dh
  409095:	and    ecx,eax
  409097:	push   ecx
  409098:	or     dh,BYTE PTR [edx+ebp*4]
  40909b:	sbb    BYTE PTR [edx+0x37],bh
  40909e:	mov    al,0x3a
  4090a0:	cmovl  edx,DWORD PTR [ebp-0x3bb355a1]
  4090a7:	cmp    BYTE PTR [edi+0x76],ch
  4090aa:	bound  esp,QWORD PTR [edx-0x7a33ba08]
  4090b0:	lock inc ebx
  4090b2:	sbb    eax,0x2126b31
  4090b7:	daa    
  4090b8:	out    dx,eax
  4090b9:	call   0x2af18f24
  4090be:	pop    ss
  4090bf:	or     DWORD PTR [edi+ecx*2],edx
  4090c2:	xchg   edi,eax
  4090c3:	mov    dl,BYTE PTR [ecx-0x1]
  4090c6:	xchg   edx,eax
  4090c7:	xchg   esi,eax
  4090c8:	das    
  4090c9:	sbb    al,0xfa
  4090cb:	mov    DWORD PTR [ebx],esi
  4090cd:	(bad)  
  4090ce:	in     al,0x94
  4090d0:	stc    
  4090d1:	xchg   BYTE PTR [eax+0x37],dl
  4090d4:	push   ss
  4090d5:	push   esp
  4090d6:	daa    
  4090d7:	popf   
  4090d8:	fwait
  4090d9:	inc    esi
  4090da:	aas    
  4090db:	fidivr DWORD PTR [edi]
  4090dd:	mov    ds:0xc34cc8b0,al
  4090e2:	rcl    edi,cl
  4090e4:	mov    ds:0x5711b1,eax
  4090e9:	xchg   DWORD PTR [ecx+edx*2-0x7d],esi
  4090ed:	jnp    0x40916a
  4090ef:	xchg   BYTE PTR [ecx-0x68dc0674],al
  4090f5:	or     al,0x26
  4090f7:	xor    edx,DWORD PTR [edi]
  4090f9:	xchg   edi,eax
  4090fa:	ret    0x8dfc
  4090fd:	dec    esi
  4090fe:	aad    0x6c
  409100:	aas    
  409101:	mov    cl,cl
  409103:	popf   
  409104:	ret    0xdd71
  409107:	adc    al,0x75
  409109:	aam    0x5d
  40910b:	stos   DWORD PTR es:[edi],eax
  40910c:	mov    BYTE PTR [eax+0x1f7eb28f],ah
  409112:	out    0x0,eax
  409114:	adc    DWORD PTR [edi-0x11],edx
  409117:	rcl    BYTE PTR [edi-0x19],cl
  40911a:	jecxz  0x4090b1
  40911c:	fmul   DWORD PTR [ebx-0x7d4d49c1]
  409122:	mov    dh,0xdf
  409124:	add    eax,esp
  409126:	sub    BYTE PTR [esi+0x1b698bc1],dl
  40912c:	clc    
  40912d:	adc    eax,0x9d78be3a
  409132:	bound  ebp,QWORD PTR [edi]
  409134:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409136:	and    ebp,DWORD PTR [edx+0x18]
  409139:	inc    ebp
  40913a:	shrd   DWORD PTR [edi+0x57],edx,0xd7
  40913f:	cmp    al,0x83
  409141:	(bad)  
  409142:	and    al,0x5d
  409144:	or     DWORD PTR [ebx-0x34f1872f],eax
  40914a:	loope  0x40915d
  40914c:	popa   
  40914d:	(bad)  
  40914e:	nop
  40914f:	stc    
  409150:	ins    BYTE PTR es:[edi],dx
  409151:	(bad)  
  409152:	jge    0x409115
  409154:	xor    al,BYTE PTR [eax-0x4a]
  409157:	mov    eax,0x1d3a4102
  40915c:	mov    ds:0x1089cd5f,eax
  409161:	mov    al,ds:0xf6fd5c90
  409166:	xchg   bp,ax
  409168:	fild   DWORD PTR ds:0x237026ad
  40916e:	sub    al,0x8b
  409170:	lods   al,BYTE PTR ds:[esi]
  409171:	fwait
  409172:	xchg   cl,al
  409174:	outs   dx,BYTE PTR ds:[esi]
  409175:	xlat   BYTE PTR ds:[ebx]
  409176:	icebp  
  409177:	rol    esi,cl
  409179:	mov    ds:0xad66c3f0,al
  40917e:	add    eax,0xa03049db
  409183:	dec    esp
  409184:	mov    ch,0x10
  409186:	mov    al,0xfd
  409188:	inc    edx
  409189:	fidiv  WORD PTR [esi+eiz*4]
  40918c:	add    BYTE PTR ds:0x12a612fb,dl
  409192:	cmp    bh,bh
  409194:	jnp    0x40912c
  409196:	pop    ds
  409197:	repz cli 
  409199:	mov    ecx,0xd4923910
  40919e:	xchg   ebp,eax
  40919f:	mov    dl,0x89
  4091a1:	std    
  4091a2:	pop    ebx
  4091a3:	add    eax,0x75228d66
  4091a8:	rcl    DWORD PTR [eax],1
  4091aa:	sub    bl,ah
  4091ac:	mov    al,ds:0xefee8c7e
  4091b1:	push   esp
  4091b2:	imul   esp,DWORD PTR [ecx-0x56],0xffffffb9
  4091b6:	jmp    ebp
  4091b8:	inc    esi
  4091b9:	test   eax,0xd4f61a87
  4091be:	jno    0x4091bc
  4091c0:	lds    ebp,FWORD PTR [eax-0x28]
  4091c3:	ja     0x409183
  4091c5:	cdq    
  4091c6:	leave  
  4091c7:	das    
  4091c8:	fdiv   QWORD PTR [esi]
  4091ca:	outs   dx,DWORD PTR ds:[esi]
  4091cb:	adc    al,0xc2
  4091cd:	or     DWORD PTR [edi-0x69],esp
  4091d0:	xor    DWORD PTR [eax],0x24
  4091d3:	out    0x1e,eax
  4091d5:	enter  0x6fbb,0xd1
  4091d9:	and    BYTE PTR [esi+eax*1+0x65ddb535],0xc5
  4091e1:	repz (bad) 
  4091e3:	out    0x81,al
  4091e5:	imul   ecx,DWORD PTR [edi-0x6],0xd2762ab0
  4091ec:	sbb    dh,ah
  4091ee:	pushf  
  4091ef:	sbb    cl,BYTE PTR [esi+ebp*4-0x45]
  4091f3:	call   0x2c416c9c
  4091f8:	sub    esi,ebp
  4091fa:	ret    0xe45e
  4091fd:	sbb    ah,BYTE PTR ds:0xcabedb2c
  409203:	dec    ebp
  409204:	cmp    al,0x75
  409206:	jo     0x40921d
  409208:	imul   esi,DWORD PTR [esi-0x135c2041],0xd91cd3d2
  409212:	adc    BYTE PTR [eax-0x485a2cc5],bh
  409218:	stos   DWORD PTR es:[edi],eax
  409219:	std    
  40921a:	rcl    DWORD PTR [eax],cl
  40921c:	mov    dl,0x6c
  40921e:	xlat   BYTE PTR ds:[ebx]
  40921f:	jns    0x4091ef
  409221:	fstp   DWORD PTR [eax-0x3c]
  409224:	test   eax,0x271e5f41
  409229:	mov    bh,0xbf
  40922b:	pusha  
  40922c:	(bad)  
  40922d:	sub    DWORD PTR [esi],ebx
  40922f:	cmp    eax,0x425981dd
  409234:	xchg   ebp,eax
  409235:	es mov edi,0xbba315b2
  40923b:	int3   
  40923c:	cmp    eax,0xd49dc613
  409241:	test   BYTE PTR [edi+0x72],ah
  409244:	test   BYTE PTR ds:[esi+0x7a],bh
  409248:	jg     0x409257
  40924a:	dec    edi
  40924b:	mov    ebp,0x6f1d27a0
  409250:	enter  0xc48e,0xfc
  409254:	inc    eax
  409255:	ss aam 0x67
  409258:	aas    
  409259:	jecxz  0x409212
  40925b:	adc    ecx,eax
  40925d:	int    0xf5
  40925f:	push   ebp
  409260:	mov    ds:0x34c389bf,al
  409265:	cmp    al,0x98
  409267:	mov    edi,0x7ade2e80
  40926c:	mov    edi,0x497bd11d
  409271:	push   ds
  409272:	ret    0x3226
  409275:	adc    ebx,0x40590971
  40927b:	xor    eax,0xa760a17d
  409280:	xchg   esp,eax
  409281:	test   esp,esi
  409283:	add    bh,BYTE PTR [edx]
  409285:	mov    esi,DWORD PTR ds:0x8e107d7c
  40928b:	ins    BYTE PTR es:[edi],dx
  40928c:	jmp    0x4092b6
  40928e:	add    ebp,edx
  409290:	lods   al,BYTE PTR ds:[esi]
  409291:	jge    0x40922d
  409293:	dec    eax
  409294:	push   edi
  409295:	add    al,0x89
  409297:	sar    BYTE PTR [edx+0x68],cl
  40929a:	repz inc ecx
  40929c:	jmp    FWORD PTR [eax+0x2e]
  40929f:	fwait
  4092a0:	ja     0x409297
  4092a2:	mov    eax,0x73e873f8
  4092a7:	sub    ah,BYTE PTR [ebx]
  4092a9:	jle    0x40929c
  4092ab:	sub    eax,0xf3a28ca5
  4092b0:	xor    DWORD PTR [eax-0x1d],edx
  4092b3:	jmp    FWORD PTR [esi]
  4092b5:	sub    bh,dl
  4092b7:	nop
  4092b8:	mov    al,ds:0x725e580
  4092bd:	xchg   BYTE PTR [edx],cl
  4092bf:	imul   ebp,eax,0xf
  4092c2:	out    dx,al
  4092c3:	add    eax,0x7152b3ba
  4092c8:	cmp    al,al
  4092ca:	ja     0x40924d
  4092cc:	mov    edi,DWORD PTR [edx-0x24]
  4092cf:	cdq    
  4092d0:	add    DWORD PTR [edi-0x42],0xffffff82
  4092d4:	push   esp
  4092d5:	prefetch BYTE PTR [eax-0x1005633e]
  4092dc:	and    ch,bl
  4092de:	or     DWORD PTR [eiz*8-0x3835960d],esi
  4092e5:	mov    ecx,0xdb8407e0
  4092ea:	sar    DWORD PTR [ecx],1
  4092ec:	jecxz  0x409343
  4092ee:	mov    ds:0xa9cf0621,al
  4092f3:	mov    esp,0xf8dd5425
  4092f8:	and    al,0xc9
  4092fa:	mov    dh,0x7b
  4092fc:	or     al,0x25
  4092fe:	cmc    
  4092ff:	call   0x57152410
  409304:	test   al,0xa3
  409306:	dec    ebx
  409307:	and    al,0x8
  409309:	pop    esp
  40930a:	sti    
  40930b:	dec    esi
  40930c:	jmp    0x409312
  40930e:	pop    eax
  40930f:	xchg   ah,bl
  409311:	call   0x7173:0xb9ac1c51
  409318:	retf   0x8d73
  40931b:	mov    bl,0xe0
  40931d:	inc    eax
  40931e:	mov    BYTE PTR [edx+eax*2-0x46],ah
  409322:	stos   BYTE PTR es:[edi],al
  409323:	xchg   BYTE PTR ds:0x34f46688,bh
  409329:	ror    ch,cl
  40932b:	and    eax,0x52f4211c
  409330:	xor    eax,0xad52faf1
  409335:	sbb    ch,BYTE PTR [edi+0x35a8d4d2]
  40933b:	test   esi,0xa560d2ca
  409341:	stc    
  409342:	push   esp
  409343:	mov    ecx,edi
  409345:	xor    ch,BYTE PTR [ecx-0x2b]
  409348:	or     edx,DWORD PTR [ecx+0x35e51c13]
  40934e:	sub    bh,dl
  409350:	outs   dx,DWORD PTR ds:[esi]
  409351:	or     DWORD PTR [ecx],edi
  409353:	sub    al,BYTE PTR [ecx-0x7e]
  409356:	sbb    DWORD PTR [ecx-0x23],ebp
  409359:	fwait
  40935a:	(bad)  
  40935b:	sti    
  40935c:	ss pop edi
  40935e:	adc    BYTE PTR [ebx],0xc8
  409361:	xchg   esi,esp
  409363:	into   
  409364:	cmp    DWORD PTR [ebp+0x2b373fb3],esi
  40936a:	push   eax
  40936b:	data16 xlat BYTE PTR ds:[ebx]
  40936d:	mov    ch,0x2a
  40936f:	mov    cl,0x2
  409371:	add    DWORD PTR [esi-0x49],edi
  409374:	int    0x77
  409376:	mov    eax,ds:0x7c284e9d
  40937b:	pop    ds
  40937c:	cmp    DWORD PTR [ebx-0x21],0x6a0e2d2d
  409383:	inc    edi
  409384:	mov    edi,0xe0ba93ad
  409389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40938a:	and    DWORD PTR [esi],esi
  40938c:	add    eax,0xcc9a1e37
  409391:	mov    BYTE PTR [eax],al
  409393:	mov    ch,0xbd
  409395:	fcomip st,st(6)
  409397:	push   es
  409398:	dec    esp
  409399:	or     BYTE PTR [ecx+0x45],0xb9
  40939d:	or     BYTE PTR [esi+eax*1+0x34634566],cl
  4093a4:	aam    0x8f
  4093a6:	iret   
  4093a7:	mov    BYTE PTR [ebx-0x53],0xb5
  4093ab:	xlat   BYTE PTR ds:[ebx]
  4093ac:	popa   
  4093ad:	out    dx,al
  4093ae:	adc    al,0x5e
  4093b0:	push   0x4b420aee
  4093b5:	adc    ecx,DWORD PTR [edi]
  4093b7:	cmp    eax,0xc39c83d2
  4093bc:	retf   0xc812
  4093bf:	add    BYTE PTR [edi+eiz*8-0x24],0x68
  4093c4:	clc    
  4093c5:	jp     0x409410
  4093c7:	dec    esp
  4093c8:	(bad)  
  4093c9:	fucom  st(7)
  4093cb:	mov    dh,0x63
  4093ce:	aad    0xf5
  4093d0:	idiv   BYTE PTR [ecx+0x11]
  4093d3:	pop    eax
  4093d4:	int3   
  4093d5:	jae    0x409390
  4093d7:	leave  
  4093d8:	mov    ecx,0x28ee71fc
  4093dd:	jae    0x40938a
  4093df:	mov    fs,WORD PTR [esi]
  4093e1:	adc    eax,0x480158ef
  4093e6:	call   0x970:0xaec3c616
  4093ed:	dec    ebx
  4093ee:	idiv   ebx
  4093f0:	and    esi,esp
  4093f2:	mov    ah,0xa2
  4093f4:	cmc    
  4093f5:	xchg   ebp,eax
  4093f6:	scas   al,BYTE PTR es:[edi]
  4093f7:	popf   
  4093f8:	mov    edx,0xb7774b64
  4093fd:	cmp    eax,0x750b5e3f
  409402:	add    bl,BYTE PTR [ebp+ebp*8+0x7]
  409406:	jmp    0x4093cc
  409408:	js     0x40939e
  40940a:	in     al,0xc8
  40940c:	test   eax,0x90d71bfd
  409411:	sub    esi,DWORD PTR [ebx-0x67f048ba]
  409417:	in     eax,0x62
  409419:	jle    0x4093d8
  40941b:	mov    DWORD PTR [ebp+0x47],ebp
  40941e:	enter  0xc029,0xc5
  409422:	add    ch,dl
  409424:	leave  
  409425:	xor    DWORD PTR [ecx],eax
  409427:	ror    DWORD PTR [esi+0x5c],cl
  40942a:	js     0x4093d0
  40942c:	mov    edi,0x882d417c
  409431:	fld    st(6)
  409434:	xor    DWORD PTR [edi],esi
  409436:	sub    al,0x29
  409438:	lds    eax,FWORD PTR [esi+eiz*1]
  40943b:	je     0x409419
  40943d:	retf   0xa377
  409440:	push   esp
  409441:	mov    al,0xaf
  409443:	xchg   edi,eax
  409444:	sub    DWORD PTR [edx-0x6ef4bf39],edx
  40944a:	jae    0x40941b
  40944c:	mov    BYTE PTR [edi],dl
  40944e:	stos   BYTE PTR es:[edi],al
  40944f:	add    DWORD PTR [ebx-0x176599ae],0x177cb1ca
  409459:	fsubr  st(3),st
  40945b:	jae    0x409421
  40945d:	xchg   BYTE PTR [esi],dl
  40945f:	add    BYTE PTR ds:[ebp-0x29652133],0x61
  409467:	test   BYTE PTR [esp+edx*4-0x4e],ah
  40946b:	mov    eax,0xebd1ee7f
  409470:	fld    TBYTE PTR [edi]
  409472:	pop    ds
  409473:	sub    esi,0x425fa2be
  409479:	pop    es
  40947a:	outs   dx,DWORD PTR ds:[esi]
  40947b:	sbb    ch,BYTE PTR [edi+edi*2+0x20]
  40947f:	in     al,dx
  409480:	stos   BYTE PTR es:[edi],al
  409481:	xchg   esi,eax
  409482:	iret   
  409483:	dec    esi
  409484:	sub    edi,DWORD PTR [ecx-0x50c29dc9]
  40948a:	mov    es,edi
  40948c:	pop    edi
  40948d:	jnp    0x40946c
  40948f:	jnp    0x4094f4
  409491:	fbstp  TBYTE PTR ds:0x77e155d9
  409497:	mov    BYTE PTR ss:[edi-0x2d],bh
  40949b:	clc    
  40949c:	pop    ebx
  40949d:	mov    dl,0xfc
  40949f:	ins    BYTE PTR es:[edi],dx
  4094a0:	xor    al,0x75
  4094a2:	mov    bh,0xcc
  4094a4:	jmp    0xa3a:0xa3434e52
  4094ab:	jbe    0x4094bd
  4094ad:	popa   
  4094ae:	lahf   
  4094af:	sahf   
  4094b0:	mov    esp,0xb12cba9
  4094b5:	scas   al,BYTE PTR es:[edi]
  4094b6:	ins    DWORD PTR es:[edi],dx
  4094b7:	das    
  4094b8:	pop    ebx
  4094b9:	(bad)  
  4094ba:	jmp    0x40943e
  4094bc:	ins    BYTE PTR es:[edi],dx
  4094bd:	and    al,0xb0
  4094bf:	jbe    0x4094d4
  4094c1:	mov    edx,0x293a67be
  4094c6:	dec    BYTE PTR [edx-0x7c]
  4094c9:	adc    BYTE PTR [ecx],bh
  4094cb:	test   DWORD PTR [eax+0x149476c7],0x88e075f5
  4094d5:	dec    edx
  4094d6:	int    0x90
  4094d8:	mov    esp,0x6d99969c
  4094dd:	inc    edi
  4094de:	test   eax,0x11c3e3e0
  4094e3:	popf   
  4094e4:	mov    al,ds:0xee1ae514
  4094e9:	jmp    FWORD PTR [ebp-0x4c]
  4094ec:	lea    esi,[esi+0x1c]
  4094ef:	xor    al,BYTE PTR [ebx+ecx*8]
  4094f2:	mov    cl,0x1a
  4094f4:	lahf   
  4094f5:	ret    0xee3c
  4094f8:	in     eax,dx
  4094f9:	pushf  
  4094fa:	lods   al,BYTE PTR ds:[esi]
  4094fb:	call   0x9823411
  409500:	cli    
  409501:	test   DWORD PTR [eax-0x1d4d9144],ebp
  409507:	pop    eax
  409508:	ins    BYTE PTR es:[edi],dx
  409509:	ret    
  40950a:	std    
  40950b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40950c:	adc    cl,BYTE PTR [eax-0x74]
  40950f:	test   al,0x1e
  409511:	adc    esi,esp
  409513:	or     eax,DWORD PTR [edi-0x21fabfca]
  409519:	sub    ebx,eax
  40951b:	scas   al,BYTE PTR es:[edi]
  40951c:	pop    esp
  40951d:	int    0xe6
  40951f:	hlt    
  409520:	add    ch,BYTE PTR [ebx+0x38deb65f]
  409526:	mov    bl,bh
  409528:	mov    ds:0x5157eb8d,eax
  40952d:	ja     0x4094ea
  40952f:	jns    0x4094c3
  409531:	xor    DWORD PTR [ebx-0x5d4daf3d],ecx
  409537:	fstp   TBYTE PTR [edi]
  409539:	test   eax,0xd5268536
  40953e:	jl     0x409536
  409540:	cdq    
  409541:	fldenv [ebx+0xd]
  409544:	push   ds
  409545:	pop    edi
  409546:	out    0xbc,eax
  409548:	xor    ah,BYTE PTR [esi]
  40954a:	call   0xbcd8:0x5fca3bfa
  409551:	sub    ecx,DWORD PTR [esi]
  409553:	sbb    dh,bh
  409555:	dec    ebx
  409556:	imul   ecx,ebx,0x22f260a6
  40955c:	mov    esp,?
  40955e:	mov    edi,0x941c8180
  409563:	jo     0x4095a9
  409565:	stos   BYTE PTR es:[edi],al
  409566:	mov    ch,0x4
  409568:	sub    DWORD PTR [ebp-0x6615a541],0x6f
  40956f:	(bad)  
  409570:	fwait
  409571:	dec    ebp
  409572:	fiadd  WORD PTR [edx+0x4380e862]
  409578:	and    DWORD PTR [edx+0x2],esi
  40957b:	leave  
  40957c:	daa    
  40957d:	mov    ebx,0x56363e3d
  409582:	hlt    
  409583:	jecxz  0x409540
  409585:	sbb    al,0x65
  409587:	js     0x40950a
  409589:	jl     0x409609
  40958b:	push   ecx
  40958c:	sbb    ch,ch
  40958e:	inc    ebp
  40958f:	and    DWORD PTR [edi+ebp*2],esp
  409592:	mov    edi,0xbd986b59
  409597:	sub    ch,BYTE PTR [esi+0x2506340f]
  40959d:	xor    BYTE PTR fs:[ecx+ebp*8-0x2462504f],dh
  4095a5:	pop    edi
  4095a6:	mov    esp,0x5d7d2979
  4095ab:	lods   al,BYTE PTR ds:[esi]
  4095ac:	je     0x40957b
  4095ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095af:	jecxz  0x409569
  4095b1:	xchg   DWORD PTR [eax+0x3ba2cf2b],ecx
  4095b7:	int3   
  4095b8:	pop    ebp
  4095b9:	or     dl,BYTE PTR [ebx-0x3]
  4095bc:	scas   eax,DWORD PTR es:[edi]
  4095bd:	imul   esp,DWORD PTR [ebx],0x78678ca0
  4095c3:	loop   0x40963a
  4095c5:	fwait
  4095c6:	push   ss
  4095c7:	pop    eax
  4095c8:	push   esi
  4095c9:	sub    DWORD PTR [edi+0x54],0xffffffa5
  4095cd:	xchg   edi,eax
  4095ce:	dec    edi
  4095cf:	lock cmp DWORD PTR [esi-0x293b437a],0x31
  4095d7:	cmc    
  4095d8:	test   eax,0x8a8a2984
  4095dd:	adc    al,0x9
  4095df:	mov    BYTE PTR [edx-0x5f87ffa3],dl
  4095e5:	cmp    eax,0x47ed7c74
  4095ea:	cmp    eax,DWORD PTR [edx-0x3b68a3ad]
  4095f0:	mov    ebx,0x68e0af15
  4095f5:	cmp    eax,0x3af9c601
  4095fa:	outs   dx,DWORD PTR ds:[esi]
  4095fb:	int3   
  4095fc:	fdivr  st(5),st
  4095fe:	sub    al,BYTE PTR [esi-0x75]
  409601:	jmp    0x4095bd
  409603:	retf   
  409604:	cs (bad) 
  409606:	mov    al,ds:0x73ccecf9
  40960b:	inc    ebp
  40960c:	imul   eax,ebx,0x7b
  40960f:	and    eax,0xfcee7dac
  409614:	push   eax
  409615:	lds    ebx,FWORD PTR [esi+0x5b4c4856]
  40961b:	and    al,0xcb
  40961d:	or     ecx,DWORD PTR [edx+ecx*1-0x52]
  409621:	call   0x274c9e19
  409626:	push   cs
  409627:	or     eax,0xe1dc5dc7
  40962c:	jl     0x4096a5
  40962e:	outs   dx,BYTE PTR ds:[esi]
  40962f:	pop    esp
  409630:	push   DWORD PTR [ebx+eax*4+0x6e0cb30]
  409637:	xchg   BYTE PTR [ebx],bh
  409639:	cmp    bl,dh
  40963b:	jmp    0x794e:0xf50ec9bf
  409642:	sbb    BYTE PTR [eax-0x7f],dh
  409645:	mov    BYTE PTR [esi],bh
  409647:	or     DWORD PTR [ebp+0x15],esp
  40964a:	rcl    BYTE PTR [esi-0x9],0xa3
  40964e:	jae    0x409690
  409650:	push   cs
  409651:	lods   al,BYTE PTR ds:[esi]
  409652:	jnp    0x40969d
  409654:	stos   BYTE PTR es:[edi],al
  409655:	mov    eax,ds:0x708d4740
  40965a:	out    0x44,al
  40965c:	mov    WORD PTR gs:[edi-0x6b191db6],fs
  409663:	dec    edi
  409664:	inc    ebp
  409665:	imul   esi,ecx,0xffffffed
  409668:	retf   
  409669:	neg    DWORD PTR [eax-0x61d16292]
  40966f:	stc    
  409670:	sbb    edi,DWORD PTR [ebp-0x7d]
  409673:	xchg   esp,eax
  409674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409675:	lods   al,BYTE PTR ds:[esi]
  409676:	pop    es
  409677:	add    ch,BYTE PTR [eax+0x2bbfa42f]
  40967d:	cs icebp 
  40967f:	mov    edx,DWORD PTR [eax+0x61]
  409682:	or     DWORD PTR [eax-0x5badc306],ecx
  409688:	adc    DWORD PTR [ebx-0x19],eax
  40968b:	popa   
  40968c:	adc    DWORD PTR [eax-0x2a],0x8e3e215d
  409693:	push   0xffffffdd
  409695:	sub    ebp,edi
  409697:	or     ch,ch
  409699:	jnp    0x4096f0
  40969b:	jmp    0x4a95:0xc08b422a
  4096a2:	cld    
  4096a3:	repz sub BYTE PTR [edi-0x43f1e243],cl
  4096aa:	js     0x40967b
  4096ac:	out    0xa8,eax
  4096ae:	add    al,0x97
  4096b0:	xor    esi,DWORD PTR [ebx+0x14]
  4096b3:	cmc    
  4096b4:	fs popa 
  4096b6:	lock bound esp,QWORD PTR [edx+0x57]
  4096ba:	adc    dl,ah
  4096bc:	das    
  4096bd:	fldcw  WORD PTR [ebx+ecx*4]
  4096c0:	sub    eax,0xccf50949
  4096c5:	xor    ebp,DWORD PTR ds:0x68bd2b28
  4096cb:	cmp    BYTE PTR [edi+ebx*4+0x4a],0x70
  4096d0:	and    BYTE PTR [edi+eiz*2],dl
  4096d3:	test   al,0x74
  4096d5:	xchg   esp,eax
  4096d6:	xor    DWORD PTR [edx],0x76e85a5a
  4096dc:	into   
  4096dd:	jge    0x409670
  4096df:	ins    DWORD PTR es:[edi],dx
  4096e0:	mov    dh,0x3a
  4096e2:	popf   
  4096e3:	ins    DWORD PTR es:[edi],dx
  4096e4:	retf   0xdc41
  4096e7:	cmc    
  4096e8:	mov    ch,0x53
  4096eb:	imul   ebx,DWORD PTR [ebx],0x4c
  4096ee:	out    0x5f,eax
  4096f0:	and    BYTE PTR [ebx+0x5d],0x4a
  4096f4:	and    eax,0xbbda0371
  4096f9:	pop    es
  4096fa:	sbb    eax,0xcc38a0f
  4096ff:	in     eax,0x43
  409701:	mov    eax,0x4afc4ee7
  409706:	xchg   ebp,eax
  409707:	add    eax,0xc0e0c86c
  40970c:	sbb    bh,BYTE PTR [eax+0x29e46cb9]
  409712:	test   BYTE PTR [esi],0xb3
  409715:	sbb    esi,ecx
  409717:	sahf   
  409718:	jge    0x409732
  40971a:	repz mov ecx,0xa44e7773
  409720:	cld    
  409721:	std    
  409722:	sahf   
  409723:	repnz sbb esp,DWORD PTR [ebx-0x7722007c]
  40972a:	sub    al,0x7e
  40972c:	out    dx,al
  40972d:	sbb    al,0x83
  40972f:	sub    eax,0xefabc987
  409734:	inc    esp
  409735:	or     BYTE PTR [eax],al
  409737:	lock js 0x40972f
  40973a:	push   esi
  40973b:	and    eax,0x8e08eb6
  409740:	push   DWORD PTR [ebx-0x68]
  409743:	dec    ebx
  409744:	dec    esp
  409745:	call   0xa41d:0x3a4b43f1
  40974c:	mov    edi,0x64f9bfcd
  409751:	out    dx,eax
  409752:	or     bl,BYTE PTR [ecx+0x2f]
  409755:	call   0xe94da328
  40975a:	or     BYTE PTR [ecx+0x7b710ee9],bh
  409760:	and    DWORD PTR [ecx-0x4d],eax
  409763:	fdiv   DWORD PTR [ebp-0x2]
  409766:	scas   eax,DWORD PTR es:[edi]
  409767:	jns    0x409755
  409769:	out    dx,eax
  40976a:	pop    ebx
  40976b:	cwde   
  40976c:	(bad)  
  40976d:	lea    ebp,[eax-0x410e6a7a]
  409773:	int3   
  409774:	fadd   st(1),st
  409776:	xchg   edx,eax
  409777:	pop    edi
  409778:	mov    bl,0xc3
  40977a:	fst    QWORD PTR [edx-0x7020ae67]
  409780:	pop    esi
  409781:	adc    al,0x0
  409783:	inc    esi
  409784:	pushf  
  409785:	add    ebx,DWORD PTR [ecx-0x5249efa7]
  40978b:	mov    bh,BYTE PTR [edi+0x3a]
  40978e:	mov    ebp,0xa71e9d28
  409793:	sbb    DWORD PTR [esi+eax*2],edx
  409796:	inc    esi
  409797:	repz out dx,al
  409799:	or     DWORD PTR ds:[ebp-0x2],esp
  40979d:	cmc    
  40979e:	sub    ah,BYTE PTR ss:0xd4978920
  4097a5:	sbb    cl,BYTE PTR [esi+0x1ffc5662]
  4097ab:	mov    ebx,0x13cdfd9a
  4097b0:	out    dx,al
  4097b1:	call   0xb0b1644b
  4097b6:	jecxz  0x40982e
  4097b8:	std    
  4097b9:	mov    dl,0x95
  4097bb:	xor    dh,BYTE PTR [edi+0x53]
  4097be:	daa    
  4097bf:	jnp    0x40976e
  4097c1:	sub    al,BYTE PTR [edi]
  4097c3:	int3   
  4097c4:	lds    ecx,FWORD PTR [eax+0x7f36cda9]
  4097ca:	jg     0x4097be
  4097cc:	arpl   dx,si
  4097ce:	out    0x58,al
  4097d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097d1:	(bad)  
  4097d2:	mov    al,ds:0x75ae952d
  4097d7:	jmp    0xf0ccd323
  4097dc:	jae    0x4097da
  4097de:	mov    esp,0x9041946f
  4097e3:	mov    edi,0xca7f9dec
  4097e8:	test   eax,0x164ca3cd
  4097ed:	sub    edi,esp
  4097ef:	mov    ch,0x9
  4097f1:	sbb    al,0xf3
  4097f3:	xor    al,0x3b
  4097f5:	xor    eax,0x2b440030
  4097fa:	ror    DWORD PTR [ecx],cl
  4097fc:	xor    DWORD PTR [ecx+0x32c6d4c7],edi
  409802:	scas   eax,DWORD PTR es:[edi]
  409803:	out    dx,al
  409804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409806:	ins    DWORD PTR es:[edi],dx
  409807:	mov    ebp,0x94cc58dd
  40980c:	cdq    
  40980d:	jmp    DWORD PTR [edx-0x4c]
  409810:	and    ah,ah
  409812:	sbb    al,0xf2
  409814:	cmc    
  409815:	into   
  409816:	pop    es
  409817:	push   0x12
  409819:	xor    BYTE PTR [ebx-0x35],bh
  40981c:	pop    eax
  40981d:	fidiv  DWORD PTR [esi+0x6f16719]
  409823:	sbb    BYTE PTR [ecx-0x22ed918b],cl
  409829:	leave  
  40982a:	mov    esp,0x5ce2d9bd
  40982f:	push   ecx
  409830:	push   edi
  409831:	std    
  409832:	jne    0x40988f
  409834:	cmp    eax,0xd40eb68f
  409839:	rcl    DWORD PTR [esi+ebp*2-0x35],cl
  40983d:	div    BYTE PTR [ebx]
  40983f:	ror    edi,1
  409841:	imul   edx,DWORD PTR [eax+0x5],0x95a9f8bb
  409848:	out    dx,eax
  409849:	(bad)  
  40984a:	mov    esi,0x1890f3cf
  40984f:	jne    0x4097fb
  409851:	call   0x9c3eaf17
  409856:	retf   0x45a4
  409859:	fwait
  40985a:	arpl   WORD PTR [ebp+0x3ea1b592],di
  409860:	push   edx
  409861:	add    al,BYTE PTR [ebx+0x4]
  409864:	imul   BYTE PTR [edx-0x22]
  409867:	add    BYTE PTR [eax+0x5b],dh
  40986a:	popf   
  40986b:	repnz adc DWORD PTR [edx],esi
  40986e:	cmc    
  40986f:	(bad)  
  409870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409871:	cmp    eax,0xf4dad832
  409876:	das    
  409877:	add    edi,esi
  409879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40987a:	pop    es
  40987b:	cmp    BYTE PTR [edx-0x25d0b08],ch
  409881:	dec    esi
  409882:	les    ebx,FWORD PTR [edi+0x4e]
  409885:	into   
  409886:	cdq    
  409887:	mov    edi,0x695484bf
  40988c:	jg     0x40989b
  40988e:	out    0xfc,eax
  409890:	test   eax,0x19d4d792
  409895:	finit  
  409898:	fidivr DWORD PTR [eax+edx*2+0x6ac2b6a8]
  40989f:	sbb    edi,DWORD PTR [edx+0x5e]
  4098a2:	ss jb  0x40984a
  4098a5:	test   al,0x6b
  4098a7:	aam    0xd1
  4098a9:	sub    BYTE PTR [ecx-0x6b],ah
  4098ac:	(bad)  
  4098ad:	(bad)  
  4098ae:	jb     0x409831
  4098b0:	fcmovne st,st(6)
  4098b2:	aas    
  4098b3:	pop    ecx
  4098b4:	or     BYTE PTR [ebp+edx*8+0x4c2ac1bd],al
  4098bb:	sbb    BYTE PTR [edx+esi*4],ah
  4098be:	hlt    
  4098bf:	stos   DWORD PTR es:[edi],eax
  4098c0:	jg     0x409921
  4098c2:	repz fdiv st(7),st
  4098c5:	cli    
  4098c6:	fcomp  st(3)
  4098c8:	push   cs
  4098c9:	dec    edx
  4098ca:	cld    
  4098cb:	sbb    eax,0xfa598643
  4098d0:	jae    0x40990f
  4098d2:	mov    DWORD PTR [eax],esp
  4098d4:	pop    ds
  4098d5:	imul   esp,DWORD PTR [edx+ebx*4+0xa],0x1f
  4098da:	in     al,dx
  4098db:	pop    edi
  4098dc:	sbb    DWORD PTR [eax-0x1d],edi
  4098df:	not    BYTE PTR [ecx]
  4098e1:	or     eax,0x9749afdb
  4098e6:	and    ah,BYTE PTR [edi]
  4098e8:	dec    edi
  4098e9:	stc    
  4098ea:	out    dx,al
  4098eb:	repnz bound edx,QWORD PTR [esi]
  4098ee:	mov    ecx,0x439da767
  4098f3:	ss jbe 0x409933
  4098f6:	sbb    bh,BYTE PTR [eax+ebx*8+0x6e7a632c]
  4098fd:	out    0x80,eax
  4098ff:	mov    dh,0xbb
  409901:	arpl   WORD PTR [ecx-0x1a511c87],sp
  409907:	sti    
  409908:	sbb    bl,BYTE PTR [eax+0x6e2f9242]
  40990e:	adc    bl,bh
  409910:	outs   dx,DWORD PTR ds:[esi]
  409911:	mov    ds:0xeaa9fe7b,al
  409916:	pop    ebp
  409917:	arpl   WORD PTR [eax-0x7e],si
  40991a:	daa    
  40991b:	out    dx,al
  40991c:	sahf   
  40991d:	or     ebx,DWORD PTR [edx]
  40991f:	scas   al,BYTE PTR es:[edi]
  409920:	mov    ch,0xda
  409922:	rol    DWORD PTR [edi-0x18d2d6aa],1
  409928:	mov    eax,ds:0xcb50eff5
  40992d:	mov    ds:0x3cdedd51,eax
  409932:	dec    edx
  409933:	into   
  409934:	sbb    eax,DWORD PTR [edi-0x38]
  409937:	add    ebx,DWORD PTR [ebx+0x30]
  40993a:	sbb    ah,BYTE PTR [edx-0x33ca839b]
  409940:	cmp    al,0x5a
  409942:	sbb    cl,dl
  409944:	out    dx,al
  409945:	aaa    
  409946:	stos   BYTE PTR es:[edi],al
  409947:	or     BYTE PTR [esi-0x14ff7763],0xec
  40994e:	xchg   esi,eax
  40994f:	punpcklbw mm1,mm4
  409952:	stc    
  409953:	or     dh,BYTE PTR [ebx]
  409955:	jp     0x40991a
  409957:	cld    
  409958:	mov    ebx,0x6b2f9b08
  40995d:	pop    esp
  40995e:	and    al,ah
  409960:	inc    ebx
  409961:	sbb    eax,0x40f80b42
  409966:	into   
  409967:	inc    esp
  409968:	lea    ebx,[edi+0x18]
  40996b:	dec    edx
  40996c:	adc    DWORD PTR [ebx-0x73],ebx
  40996f:	pcmpgtd mm2,QWORD PTR [esi]
  409972:	xchg   ebp,eax
  409973:	inc    edi
  409974:	jmp    0x4099bb
  409976:	mov    WORD PTR [eax],ss
  409978:	adc    BYTE PTR fs:[ebx],ah
  40997b:	(bad)  [edi+0x71ebd5b3]
  409981:	and    DWORD PTR [esi-0x303c01a1],0xffffff83
  409988:	add    edi,DWORD PTR [esi]
  40998a:	mov    esp,0x77ba82a9
  40998f:	push   ds
  409990:	push   ds
  409991:	cmp    ch,BYTE PTR [ebp+0x4a]
  409994:	mov    eax,ds:0x8b1bf3de
  409999:	cmp    al,0x2b
  40999b:	cmp    al,0xc3
  40999d:	xchg   ebx,eax
  40999e:	jp     0x40994f
  4099a0:	arpl   WORD PTR [edx+0x42],si
  4099a3:	(bad)  
  4099a5:	enter  0xc555,0xb0
  4099a9:	fild   DWORD PTR ds:0xf69f37
  4099af:	fistp  QWORD PTR [ebx]
  4099b1:	dec    esi
  4099b2:	push   0x26
  4099b4:	es gs clc 
  4099b7:	push   cs
  4099b8:	add    al,0x0
  4099ba:	sbb    al,0xb9
  4099bc:	aam    0xfd
  4099be:	and    cl,BYTE PTR [edi-0x1e9b1c61]
  4099c4:	push   cs
  4099c5:	push   cs
  4099c6:	sub    esi,ebx
  4099c8:	mov    eax,ds:0x36823821
  4099cd:	pop    esp
  4099ce:	jbe    0x4099d8
  4099d0:	push   0x13
  4099d2:	pminsw mm7,QWORD PTR [edx]
  4099d5:	mov    al,ds:0x52f16441
  4099da:	adc    esp,DWORD PTR [edx-0x45]
  4099dd:	int    0xa
  4099df:	test   DWORD PTR [edi+esi*2-0x72],edi
  4099e3:	mov    edi,0xeb7f6db1
  4099e8:	popf   
  4099e9:	and    eax,0xb484b90a
  4099ee:	or     DWORD PTR [ebx+0x53],edx
  4099f1:	jle    0x4099e7
  4099f3:	add    al,bh
  4099f5:	rol    BYTE PTR [esi+0x61ec07d7],cl
  4099fb:	sub    DWORD PTR [esi-0x65],esi
  4099fe:	xor    al,dl
  409a00:	xchg   DWORD PTR [eax+0x25],eax
  409a03:	push   eax
  409a04:	mov    gs,WORD PTR [eax-0x20af7d38]
  409a0a:	inc    ebp
  409a0b:	sbb    dl,BYTE PTR [edx-0x1f9d2fc8]
  409a11:	out    dx,al
  409a12:	sub    eax,0x6ed07b3a
  409a17:	(bad)  
  409a18:	and    al,0xd2
  409a1a:	stos   BYTE PTR es:[edi],al
  409a1b:	mov    ebp,0x89cf2905
  409a20:	pushf  
  409a21:	sbb    cl,BYTE PTR [ebp+0x65]
  409a24:	sti    
  409a25:	xchg   esp,eax
  409a26:	jmp    0xf7d2:0x1b27503b
  409a2d:	jge    0x4099bf
  409a2f:	mov    ah,0xdb
  409a31:	push   esp
  409a32:	adc    DWORD PTR [edi],ebx
  409a34:	inc    edx
  409a35:	add    ebx,esp
  409a37:	out    0xc7,eax
  409a39:	icebp  
  409a3a:	cmp    dh,dh
  409a3c:	cwde   
  409a3d:	int    0xc5
  409a3f:	fs pop ss
  409a41:	dec    edx
  409a42:	adc    DWORD PTR [ebx-0xe],edx
  409a45:	call   0x14e5d612
  409a4a:	cs pushaw 
  409a4d:	leave  
  409a4e:	pop    es
  409a4f:	aaa    
  409a50:	mov    ebx,0x2c43d3d5
  409a55:	sbb    BYTE PTR [ebp+0xf],ah
  409a58:	aad    0x52
  409a5a:	aas    
  409a5b:	push   edi
  409a5c:	mov    edx,0x8ef1af3d
  409a61:	ja     0x409a9b
  409a63:	fisttp QWORD PTR [edx-0x437783d5]
  409a69:	pop    esi
  409a6a:	daa    
  409a6b:	arpl   WORD PTR [ecx+0x40243d65],dx
  409a71:	test   DWORD PTR [ecx-0xa6b63ac],edx
  409a77:	or     al,0x2c
  409a79:	loope  0x409a05
  409a7b:	call   0x7bdef908
  409a80:	scas   al,BYTE PTR es:[edi]
  409a81:	mov    ecx,0xb956dee1
  409a86:	cli    
  409a87:	xor    esi,ecx
  409a89:	add    DWORD PTR [eax+0x5b8a17f7],eax
  409a8f:	ds push edi
  409a91:	lods   eax,DWORD PTR ds:[esi]
  409a92:	or     bh,BYTE PTR [ebx+edi*8+0x75]
  409a96:	(bad)  
  409a97:	ds jbe 0x409a1c
  409a9a:	aad    0x4
  409a9c:	mov    bh,0xe4
  409a9e:	push   ebp
  409a9f:	lahf   
  409aa0:	and    al,0xfd
  409aa2:	aaa    
  409aa3:	loope  0x409a49
  409aa5:	test   DWORD PTR [ebx+0x594392fc],esi
  409aab:	mov    esp,0x128bbca9
  409ab0:	add    al,0xcd
  409ab2:	addr16 icebp 
  409ab4:	mov    esp,DWORD PTR [edx-0x11b78172]
  409aba:	push   ebp
  409abb:	push   esp
  409abc:	jbe    0x409a84
  409abe:	adc    al,0x76
  409ac0:	(bad)  [ecx+0xb4f5b58]
  409ac6:	cmp    BYTE PTR [esi-0x5d3b8824],dh
  409acc:	fistp  WORD PTR [ecx]
  409ace:	rcr    DWORD PTR [ecx-0x74],0xd1
  409ad2:	(bad)  [eax]
  409ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ad5:	xor    al,0xe9
  409ad7:	sti    
  409ad8:	rol    DWORD PTR [eax-0x2b],cl
  409adb:	shl    dl,1
  409add:	(bad)  
  409adf:	into   
  409ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ae1:	xlat   BYTE PTR ds:[ebx]
  409ae2:	cmp    al,0xdb
  409ae4:	add    edx,DWORD PTR [esi]
  409ae6:	outs   dx,BYTE PTR ds:[esi]
  409ae7:	or     BYTE PTR ss:[ebx-0x75],dh
  409aeb:	ja     0x409b29
  409aed:	neg    ebx
  409aef:	inc    ebx
  409af0:	jb     0x409add
  409af2:	sub    al,0xf4
  409af4:	pop    eax
  409af5:	add    BYTE PTR [edx+0x7f9a1c82],0x9f
  409afc:	mov    edi,0xc5ba31a5
  409b01:	sar    BYTE PTR [edi+0x59],0xeb
  409b05:	out    dx,eax
  409b06:	and    bh,BYTE PTR [edi-0x2fea4178]
  409b0c:	sbb    eax,0x8d597878
  409b11:	xchg   DWORD PTR [eax+0x145f6b3f],esi
  409b17:	es jecxz 0x409ae0
  409b1a:	sti    
  409b1b:	xor    BYTE PTR [esi+0x541f45c6],al
  409b21:	scas   al,BYTE PTR es:[edi]
  409b22:	mov    dl,0xe1
  409b24:	std    
  409b25:	(bad)  
  409b26:	jbe    0x409ab0
  409b28:	sub    eax,0x7547c8d5
  409b2d:	cld    
  409b2e:	outs   dx,DWORD PTR ds:[esi]
  409b2f:	outs   dx,DWORD PTR fs:[esi]
  409b31:	leave  
  409b32:	sub    al,0xb9
  409b34:	and    dl,dh
  409b36:	hlt    
  409b37:	loopne 0x409b2b
  409b39:	ins    DWORD PTR es:[edi],dx
  409b3a:	lds    edi,FWORD PTR [ecx-0x5e7407a3]
  409b40:	aam    0xa5
  409b42:	shl    cl,cl
  409b44:	adc    ecx,DWORD PTR [ecx]
  409b46:	rcl    dh,cl
  409b48:	jge    0x409b21
  409b4a:	out    dx,eax
  409b4b:	outs   dx,BYTE PTR ds:[esi]
  409b4c:	in     eax,dx
  409b4d:	add    cl,dl
  409b4f:	add    eax,0xdd07e0f0
  409b54:	cmp    al,0xd7
  409b56:	rol    BYTE PTR [ebp+0x126f8868],1
  409b5c:	test   al,0xd7
  409b5e:	shr    BYTE PTR ds:0xf3a236f6,cl
  409b64:	stos   DWORD PTR es:[edi],eax
  409b65:	fidivr DWORD PTR [eax-0x2b]
  409b68:	cwde   
  409b69:	pop    esp
  409b6a:	adc    BYTE PTR [eax],0xaa
  409b6d:	pop    ebp
  409b6e:	les    edi,FWORD PTR [edx-0x1fab5934]
  409b74:	inc    ecx
  409b75:	adc    eax,0x889e0e2f
  409b7a:	cli    
  409b7b:	or     BYTE PTR [edx+edx*1+0x14],ah
  409b7f:	shl    BYTE PTR [ebx+ebx*8-0x75],0x96
  409b84:	(bad)  
  409b85:	push   ecx
  409b86:	adc    ah,BYTE PTR [esi+0x5e]
  409b89:	imul   ecx,esp,0x30
  409b8c:	fstp   DWORD PTR cs:[eax-0xe]
  409b90:	les    ecx,FWORD PTR [esi]
  409b92:	mov    BYTE PTR [ebx+ecx*8],ch
  409b95:	scas   al,BYTE PTR es:[edi]
  409b96:	xor    esp,DWORD PTR ds:0x55b7e02f
  409b9c:	xchg   edi,eax
  409b9d:	xchg   ecx,eax
  409b9e:	data16 sbb BYTE PTR [edi+ecx*4+0x46758cf0],al
  409ba6:	fist   DWORD PTR [eax-0x9]
  409ba9:	xor    edx,DWORD PTR [ebp-0x7d]
  409bac:	jmp    0xff40e9bd
  409bb1:	repz push ds
  409bb3:	adc    edx,edi
  409bb5:	dec    esi
  409bb6:	jmp    0x409ba0
  409bb8:	aas    
  409bb9:	sbb    DWORD PTR [eax+0x64],eax
  409bbc:	xor    DWORD PTR [ebp+0x9],esp
  409bbf:	push   es
  409bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bc1:	pop    edi
  409bc2:	mov    ds:0xda9ae9c9,al
  409bc7:	xchg   edi,eax
  409bc8:	mov    bl,bh
  409bca:	dec    DWORD PTR ds:0xb373a7ec
  409bd0:	ins    BYTE PTR es:[edi],dx
  409bd1:	xlat   BYTE PTR ds:[ebx]
  409bd2:	xlat   BYTE PTR ds:[ebx]
  409bd3:	(bad)  
  409bd4:	cvtpi2ps xmm7,QWORD PTR [ebp+0x2e3c479a]
  409bdb:	mov    ds:0x14dc7a60,al
  409be0:	xchg   esi,eax
  409be1:	into   
  409be2:	(bad)  
  409be3:	fwait
  409be4:	ret    
  409be5:	(bad)  
  409be6:	bnd ja 0x409bb2
  409be9:	add    eax,0x415e93c9
  409bee:	mov    esi,DWORD PTR [ebp+ebx*1+0x10e7c622]
  409bf5:	jmp    0x9a9ed916
  409bfa:	or     edx,edx
  409bfc:	popf   
  409bfd:	xorps  xmm2,XMMWORD PTR [ebp+0x20]
  409c01:	out    dx,al
  409c02:	add    ebx,esi
  409c04:	in     eax,0xc3
  409c06:	push   ds
  409c07:	int3   
  409c08:	or     eax,0x4e223939
  409c0d:	sbb    edi,DWORD PTR [edx]
  409c0f:	outs   dx,DWORD PTR ds:[esi]
  409c10:	mov    ds:0xb7ecaecd,al
  409c15:	push   ebp
  409c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c17:	jno    0x409c42
  409c19:	and    eax,0xbc1b4b88
  409c1e:	(bad)  
  409c1f:	adc    eax,0x71a39c1e
  409c24:	mov    bh,0x73
  409c26:	push   cs
  409c27:	aaa    
  409c28:	and    eax,0xb691c19e
  409c2d:	pop    ds
  409c2e:	adc    edi,DWORD PTR [ecx+0x3a7a81ce]
  409c34:	pop    ebx
  409c35:	xor    bh,BYTE PTR [esi]
  409c37:	scas   eax,DWORD PTR es:[edi]
  409c38:	pop    eax
  409c39:	popa   
  409c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c3b:	add    BYTE PTR [edx-0x77],ah
  409c3e:	shl    DWORD PTR [edi-0x14],0x8f
  409c42:	pop    ds
  409c43:	ja     0x409c26
  409c45:	cdq    
  409c46:	push   0xffffffdf
  409c48:	ror    BYTE PTR [ebx-0x2d4d3ebf],1
  409c4e:	add    al,0xf9
  409c50:	sbb    DWORD PTR [ebx+0x36],esi
  409c53:	adc    ah,BYTE PTR [ebx+0x3e43f20a]
  409c59:	in     al,dx
  409c5a:	push   ebp
  409c5b:	cmp    DWORD PTR [ecx+0x6c30d142],ecx
  409c61:	ins    BYTE PTR es:[edi],dx
  409c62:	push   ebp
  409c63:	xor    al,0x3d
  409c65:	mov    bl,0x88
  409c68:	cwde   
  409c69:	imul   BYTE PTR [edi+0xf]
  409c6c:	test   DWORD PTR [edi],ebp
  409c6e:	add    eax,0xd8f30b43
  409c73:	sub    DWORD PTR [ebp-0x44142afb],0xffffff82
  409c7a:	(bad)  [ebx]
  409c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c7e:	mov    bh,BYTE PTR [eax]
  409c80:	sbb    ah,BYTE PTR [ecx]
  409c82:	scas   al,BYTE PTR es:[edi]
  409c83:	cmp    ah,BYTE PTR [edi+0x30]
  409c86:	daa    
  409c87:	fdivr  QWORD PTR ss:[ebp-0x29]
  409c8b:	xchg   edi,eax
  409c8c:	mov    edi,0x1a552935
  409c91:	or     BYTE PTR [eax],cl
  409c93:	out    0x36,eax
  409c95:	adc    edi,DWORD PTR [esi+0x718c9dc4]
  409c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c9c:	dec    esi
  409c9d:	es (bad) 
  409c9f:	xor    bh,BYTE PTR [esi-0x2b]
  409ca2:	jae    0x409c2a
  409ca4:	pop    esi
  409ca5:	mov    al,ds:0x28c0f9fc
  409caa:	ret    0xa03b
  409cad:	mov    DWORD PTR [ecx+0x27],ebp
  409cb0:	fdivr  QWORD PTR [esi-0x7811b8de]
  409cb6:	cmp    DWORD PTR [eax],0x6f
  409cb9:	inc    ebx
  409cba:	ds adc edx,0x4b701843
  409cc1:	mov    BYTE PTR [eax+0x28723534],bh
  409cc7:	(bad)  
  409cc8:	adc    DWORD PTR [eax-0x27e55086],ebx
  409cce:	jl     0x409d4f
  409cd0:	test   eax,0x939a8ead
  409cd5:	adc    DWORD PTR [ebp+0x505900ed],edx
  409cdb:	leave  
  409cdc:	test   BYTE PTR [eiz*2-0x4a26f94d],0xbe
  409ce4:	xchg   esp,eax
  409ce5:	mov    WORD PTR [edi+ebp*1+0x455c9274],ds
  409cec:	add    al,0xe1
  409cee:	les    ebp,FWORD PTR [edx]
  409cf0:	sbb    BYTE PTR [ebp-0x72],dh
  409cf3:	mov    edx,0x7fa5fb62
  409cf8:	sar    BYTE PTR [ebp-0x5f],0x8b
  409cfc:	int    0xc7
  409cfe:	lods   al,BYTE PTR ds:[si]
  409d00:	loopne 0x409d3e
  409d02:	mov    edx,0x760750df
  409d07:	inc    esp
  409d08:	push   ss
  409d09:	(bad)  
  409d0a:	push   eax
  409d0b:	mov    eax,ds:0xfcd55793
  409d10:	ds sub bl,ch
  409d13:	and    ebx,DWORD PTR [eax]
  409d15:	stc    
  409d16:	hlt    
  409d17:	push   esp
  409d18:	mov    al,ds:0xa0e2fbc6
  409d1d:	pop    edi
  409d1e:	fbld   TBYTE PTR [ecx-0x6f]
  409d21:	push   esp
  409d22:	iret   
  409d23:	jg     0x409cbd
  409d25:	inc    edi
  409d26:	mov    DWORD PTR [eax+0x9943da8],esi
  409d2c:	add    BYTE PTR [ecx-0x5e],ch
  409d2f:	mov    cl,0x5c
  409d31:	loope  0x409d7e
  409d33:	sbb    ecx,ecx
  409d35:	cli    
  409d36:	fdivp  st(2),st
  409d38:	xchg   DWORD PTR [ebx+0x21],ebp
  409d3b:	mov    ebx,0xb6520504
  409d40:	fisttp WORD PTR [ecx]
  409d42:	inc    ebx
  409d43:	cld    
  409d44:	cmp    DWORD PTR [esi+0x532ecc7f],0xffffffb9
  409d4b:	das    
  409d4c:	inc    esp
  409d4d:	fs mov al,0xe
  409d50:	stos   BYTE PTR es:[edi],al
  409d51:	push   0x3f69e0e6
  409d56:	mov    dl,0x49
  409d58:	into   
  409d59:	loop   0x409ce0
  409d5b:	jle    0x409cfe
  409d5d:	int3   
  409d5e:	mov    DWORD PTR [ebp-0x33],0xc41dbb93
  409d65:	pop    edi
  409d66:	ret    0x3d1c
  409d69:	mov    BYTE PTR [edi+0x3c4863bd],al
  409d6f:	adc    dh,BYTE PTR [esi+0x2]
  409d72:	and    al,0x61
  409d74:	adc    BYTE PTR [ebp-0x28e43e6b],al
  409d7a:	fnstenv [ebx-0x48]
  409d7d:	retf   
  409d7e:	stc    
  409d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d80:	jns    0x409d81
  409d82:	cld    
  409d83:	cmp    dl,BYTE PTR [esi]
  409d85:	or     al,0x40
  409d87:	cli    
  409d88:	mov    al,ds:0xbb9349d2
  409d8d:	pop    esp
  409d8e:	sar    BYTE PTR [ecx],1
  409d90:	xchg   ecx,eax
  409d91:	inc    ebx
  409d92:	jl     0x409e07
  409d94:	outs   dx,BYTE PTR ds:[esi]
  409d95:	sahf   
  409d96:	mov    ecx,eax
  409d98:	aas    
  409d99:	xor    DWORD PTR [ebx],ecx
  409d9b:	adc    edx,eax
  409d9d:	and    dh,al
  409d9f:	or     al,0xfb
  409da1:	test   al,0x4d
  409da3:	shl    BYTE PTR [edi-0x51],cl
  409da6:	jle    0x409d56
  409da8:	mov    cl,0xcd
  409daa:	and    DWORD PTR [ebp-0x73],0xffffff89
  409dae:	imul   edi,DWORD PTR [ebx+0x40],0x92c74aa6
  409db5:	(bad)  
  409db6:	mov    dh,0xc7
  409db8:	bnd jbe 0x409de4
  409dbb:	cmp    eax,0x2bbf59
  409dc0:	retf   0x4473
  409dc3:	cmp    eax,0x10e58e75
  409dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dc9:	outs   dx,BYTE PTR ds:[esi]
  409dca:	lock push 0xe2ffa222
  409dd0:	pop    ecx
  409dd1:	mov    DWORD PTR [ecx-0x60],edx
  409dd4:	ret    0x2d2a
  409dd7:	push   es
  409dd8:	pushf  
  409dd9:	pop    esp
  409dda:	fst    DWORD PTR ds:0xbe1c61b8
  409de0:	mov    ds:0xd168bdea,al
  409de5:	int3   
  409de6:	push   ss
  409de7:	pusha  
  409de8:	mov    ch,0xbb
  409dea:	aas    
  409deb:	shl    BYTE PTR [edx-0x6c305de5],1
  409df1:	psllq  mm7,QWORD PTR [ebp-0x4c397e3d]
  409df8:	dec    edi
  409df9:	shl    bl,cl
  409dfb:	cmp    eax,0xd80714ea
  409e00:	xor    DWORD PTR [ebp+0x46],edx
  409e03:	cs gs sub eax,0x9764abf2
  409e0a:	cdq    
  409e0b:	aad    0x1f
  409e0d:	or     BYTE PTR ds:0x70081019,bh
  409e13:	dec    eax
  409e14:	pop    eax
  409e15:	xor    al,0xe7
  409e17:	out    0xd3,eax
  409e19:	cmp    BYTE PTR [edi-0x7e],bl
  409e1c:	cmc    
  409e1d:	fmul   DWORD PTR [esi+ebx*4-0x1f]
  409e21:	xchg   ecx,eax
  409e22:	jno    0x409e78
  409e24:	(bad)  
  409e25:	hlt    
  409e26:	add    eax,0xd174eee0
  409e2b:	pop    esp
  409e2c:	xchg   edx,eax
  409e2d:	sub    DWORD PTR [eax+esi*1],ebp
  409e30:	sub    DWORD PTR [edi],esi
  409e32:	stos   DWORD PTR es:[edi],eax
  409e33:	xchg   esi,eax
  409e34:	lahf   
  409e35:	jno    0x409de8
  409e37:	cmp    bh,BYTE PTR [ecx]
  409e39:	and    edx,DWORD PTR [ebx+edi*2+0x7]
  409e3d:	mov    eax,0xc86c7283
  409e42:	add    edx,DWORD PTR [ebp-0x37]
  409e45:	mov    esp,DWORD PTR [edi+edx*2]
  409e48:	lods   al,BYTE PTR ds:[esi]
  409e49:	sbb    DWORD PTR [edi-0x3d33f02b],0xc5c0f97d
  409e53:	les    esp,FWORD PTR [edx-0x2c74e6ff]
  409e59:	and    al,0x9c
  409e5b:	push   edx
  409e5c:	mov    al,0xa
  409e5e:	cmp    BYTE PTR [eax-0x7e],ch
  409e61:	xor    al,0x6e
  409e63:	cs in  eax,dx
  409e65:	jmp    0x409e41
  409e67:	sbb    al,0xe9
  409e69:	icebp  
  409e6a:	pop    eax
  409e6b:	cs or  al,0xb0
  409e6e:	xchg   edi,eax
  409e6f:	das    
  409e70:	leave  
  409e71:	aad    0xf2
  409e73:	or     al,0xc3
  409e75:	cmp    ch,BYTE PTR [esi-0x48]
  409e78:	rcr    BYTE PTR [edx+ebx*2-0x6636c538],0x95
  409e80:	ret    0x4a4
  409e83:	or     DWORD PTR [edi+ebp*2+0xc],edi
  409e87:	hlt    
  409e88:	idiv   DWORD PTR [eax]
  409e8a:	pop    edx
  409e8b:	inc    ecx
  409e8c:	in     eax,0x19
  409e8e:	shr    BYTE PTR [esi-0x1da34c09],cl
  409e94:	dec    ecx
  409e95:	test   al,0xb
  409e97:	mov    ebp,0x4696a69e
  409e9c:	data16 xor BYTE PTR [ebx],bl
  409e9f:	test   eax,0x49c1dafd
  409ea4:	ins    DWORD PTR es:[edi],dx
  409ea5:	shl    BYTE PTR [eax+edx*4-0x2d],cl
  409ea9:	push   es
  409eaa:	xchg   ebp,eax
  409eab:	add    DWORD PTR [ebp+0x408c291b],edi
  409eb1:	sub    bh,BYTE PTR [ebx]
  409eb3:	xchg   edx,eax
  409eb4:	iret   
  409eb5:	(bad)  
  409eb6:	adc    dh,dh
  409eb8:	sub    DWORD PTR ds:0x5a67191f,esi
  409ebe:	les    esi,FWORD PTR [edx]
  409ec0:	push   es
  409ec1:	ins    DWORD PTR es:[edi],dx
  409ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec3:	cmp    eax,0x253e438e
  409ec8:	test   eax,0x3510fbfa
  409ecd:	mov    ch,0xa
  409ecf:	jb     0x409e8e
  409ed1:	sbb    ebx,DWORD PTR [edx]
  409ed3:	loop   0x409f3c
  409ed5:	sbb    eax,0xda1eb727
  409eda:	pop    esp
  409edb:	sbb    eax,0x4358da6a
  409ee0:	retf   
  409ee1:	jmp    0xbb6b3a19
  409ee6:	ins    BYTE PTR es:[edi],dx
  409ee7:	retf   0x8d8e
  409eea:	mov    esp,ecx
  409eec:	mov    ebp,0xe92bd07f
  409ef1:	pop    ebp
  409ef2:	or     ebp,ebp
  409ef4:	js     0x409ea8
  409ef6:	imul   ecx,DWORD PTR [eax],0xa24ee1d3
  409efc:	call   0xdfd1c7b3
  409f01:	shr    DWORD PTR gs:[eax-0x73ea2111],1
  409f08:	mov    ebp,DWORD PTR [ebp+0x5c]
  409f0b:	mov    BYTE PTR [eax+0x7a],bl
  409f0e:	mov    bl,al
  409f10:	sbb    BYTE PTR [ebx-0x2a],ah
  409f13:	push   edx
  409f14:	in     eax,0x86
  409f16:	xchg   esp,eax
  409f17:	and    ebx,DWORD PTR [esi]
  409f19:	mov    bh,0x13
  409f1b:	lods   al,BYTE PTR ds:[esi]
  409f1c:	in     al,0x51
  409f1e:	cmp    BYTE PTR [ebx+edi*8-0x2f],0xa0
  409f23:	or     dl,BYTE PTR [ecx-0x27]
  409f26:	jge    0x409f1f
  409f28:	xlat   BYTE PTR ds:[ebx]
  409f29:	push   0x3a6a1bfc
  409f2e:	lea    ebp,[ecx+0x7d33b33]
  409f34:	loopne 0x409ecd
  409f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f37:	xchg   ebp,eax
  409f38:	xchg   ecx,eax
  409f39:	dec    eax
  409f3a:	push   eax
  409f3b:	fwait
  409f3c:	iret   
  409f3d:	sub    DWORD PTR [ebx-0x6dd9bbf],esi
  409f43:	ss ins BYTE PTR es:[edi],dx
  409f45:	js     0x409ed0
  409f47:	add    ebx,DWORD PTR [eax-0x36]
  409f4a:	pop    edi
  409f4b:	fadd   DWORD PTR [ebp+0x6a]
  409f4e:	fst    QWORD PTR [edi]
  409f50:	push   esp
  409f51:	dec    edx
  409f52:	or     DWORD PTR [ebx+0x50],edx
  409f55:	push   edx
  409f56:	dec    esp
  409f57:	shl    DWORD PTR [edx-0x4ef158e8],0xcd
  409f5e:	ins    BYTE PTR es:[edi],dx
  409f5f:	aas    
  409f60:	inc    edx
  409f61:	and    eax,0xf5ae68ff
  409f66:	jge    0x409f28
  409f68:	jo     0x409f46
  409f6a:	cdq    
  409f6b:	lahf   
  409f6c:	jae    0x409f14
  409f6e:	jbe    0x409f2e
  409f70:	(bad)  
  409f71:	pop    ss
  409f72:	mov    ch,0xb7
  409f74:	jmp    0xdff839c5
  409f79:	sub    eax,0xa623b3c3
  409f7e:	stc    
  409f7f:	cs call 0xdb305e9c
  409f85:	icebp  
  409f86:	push   ds
  409f87:	lea    esi,[ebp-0x7a]
  409f8a:	sbb    eax,eax
  409f8c:	jne    0x409fb4
  409f8e:	push   esp
  409f8f:	mov    ebp,ecx
  409f91:	push   edx
  409f92:	stc    
  409f93:	retf   0x97ea
  409f96:	sbb    ebp,esi
  409f98:	cmp    BYTE PTR [eax+eiz*1+0x33ab76e8],0x2e
  409fa0:	mov    dh,0xaa
  409fa2:	push   0xff0009dc
  409fa7:	lods   eax,DWORD PTR ds:[esi]
  409fa8:	pop    es
  409fa9:	aas    
  409faa:	dec    edi
  409fab:	(bad)  
  409fac:	mov    ebx,DWORD PTR ds:[edx-0x9]
  409fb0:	cld    
  409fb1:	mov    ch,0x50
  409fb3:	stc    
  409fb4:	sbb    bh,ah
  409fb6:	jmp    0x409f53
  409fb8:	in     al,dx
  409fb9:	or     bh,0xc0
  409fbc:	repnz cdq 
  409fbe:	pop    es
  409fbf:	jle    0x409fa6
  409fc1:	add    ecx,eax
  409fc3:	pop    ebp
  409fc4:	pop    esi
  409fc5:	int3   
  409fc6:	fs sub eax,0xe1121493
  409fcc:	dec    ecx
  409fcd:	sti    
  409fce:	fwait
  409fcf:	pop    ecx
  409fd0:	adc    eax,eax
  409fd2:	es inc esi
  409fd4:	test   DWORD PTR [ebp-0x67d5a4e2],ebx
  409fda:	add    dh,al
  409fdc:	mov    ecx,0x8b499a80
  409fe1:	or     dl,BYTE PTR [eax+0x4e29b72c]
  409fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fe8:	xchg   ebx,eax
  409fe9:	mov    ecx,0xe628201c
  409fee:	repnz and eax,0xdd9f37e
  409ff4:	jmp    DWORD PTR [eax]
  409ff6:	(bad)
  409ff9:	nop
  409ffa:	inc    ebp
  409ffb:	mul    BYTE PTR [edi+0x1f]
  409ffe:	out    dx,eax
  409fff:	xchg   ebp,edi
  40a001:	cdq    
  40a002:	cmp    al,0x4d
  40a004:	call   0x89022e7a
  40a009:	inc    esp
  40a00a:	mov    ds:0x2d3f9bc8,eax
  40a00f:	in     al,0x9e
  40a011:	mov    dh,0xd8
  40a013:	in     al,0x91
  40a015:	jmp    0x40a08f
  40a017:	mov    eax,0x7a735c38
  40a01c:	ret    
  40a01d:	mov    ebx,0xb77234e4
  40a022:	in     eax,dx
  40a023:	in     al,0x11
  40a025:	in     al,0x69
  40a027:	sti    
  40a028:	add    al,0xa2
  40a02a:	aas    
  40a02b:	or     eax,0xa1d701de
  40a030:	jbe    0x40a084
  40a032:	jecxz  0x40a046
  40a034:	pop    ds
  40a035:	jnp    0x40a07c
  40a037:	retf   0xe448
  40a03a:	push   edi
  40a03b:	aam    0x75
  40a03d:	xor    ah,bl
  40a03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a040:	adc    cl,dh
  40a042:	adc    al,BYTE PTR [edx+0x4a]
  40a045:	imul   DWORD PTR [edx+0x7fa191da]
  40a04b:	pop    edi
  40a04c:	xchg   ecx,eax
  40a04d:	mov    ch,0x8e
  40a04f:	xchg   BYTE PTR [edx+edx*2-0x3434c47b],ah
  40a056:	adc    BYTE PTR [edi-0x391daac5],ch
  40a05c:	mov    ah,0xe3
  40a05e:	mov    eax,0x527eac40
  40a063:	sbb    al,0x67
  40a065:	push   eax
  40a066:	mov    ds:0x74d3c088,eax
  40a06b:	in     eax,0x5e
  40a06d:	out    dx,eax
  40a06e:	pop    ebp
  40a06f:	pop    es
  40a070:	jmp    0x40a076
  40a072:	mov    edx,0x368ec89f
  40a077:	arpl   WORD PTR [eax+ebx*4+0x12698dbd],dx
  40a07e:	pushf  
  40a07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a080:	stos   BYTE PTR es:[edi],al
  40a081:	push   eax
  40a082:	pop    esp
  40a083:	addr16 jge 0x40a086
  40a086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a087:	rcl    BYTE PTR [ebp-0x5f905341],1
  40a08d:	jbe    0x40a0e6
  40a08f:	sahf   
  40a090:	xchg   ecx,eax
  40a091:	adc    bl,ah
  40a093:	pop    ecx
  40a094:	mov    al,0x30
  40a096:	rcl    BYTE PTR [esi-0x65d7642d],1
  40a09c:	mov    edi,0xe1b6118d
  40a0a1:	jle    0x40a118
  40a0a3:	pop    edx
  40a0a4:	and    eax,0x274c28f6
  40a0a9:	sub    BYTE PTR [esi-0x8],bl
  40a0ac:	inc    edi
  40a0ad:	rcl    DWORD PTR [edx],1
  40a0af:	out    dx,al
  40a0b0:	lahf   
  40a0b1:	lods   eax,DWORD PTR ds:[esi]
  40a0b2:	lahf   
  40a0b3:	fwait
  40a0b4:	xchg   ecx,eax
  40a0b5:	std    
  40a0b6:	xchg   ecx,eax
  40a0b7:	(bad)  
  40a0b8:	les    esi,FWORD PTR [ecx+eax*8]
  40a0bb:	arpl   WORD PTR [edi-0x7fa29714],cx
  40a0c1:	mov    ebp,0x65db6317
  40a0c6:	xchg   ecx,eax
  40a0c7:	cmp    ecx,DWORD PTR [eax+0x17]
  40a0ca:	sti    
  40a0cb:	call   0x279fe14c
  40a0d0:	scas   eax,DWORD PTR es:[edi]
  40a0d1:	cmp    BYTE PTR [edi+0x21],ah
  40a0d4:	aam    0x99
  40a0d6:	cmp    dh,BYTE PTR [ecx+0x29bc7340]
  40a0dc:	pop    edx
  40a0dd:	fimul  WORD PTR [edx+ebx*8-0x1b]
  40a0e1:	push   esp
  40a0e2:	pop    ss
  40a0e3:	in     eax,0xfc
  40a0e5:	lods   eax,DWORD PTR ds:[esi]
  40a0e6:	je     0x40a095
  40a0e8:	xor    ah,bl
  40a0ea:	jg     0x40a082
  40a0ec:	dec    edx
  40a0ed:	push   0x76
  40a0ef:	dec    esp
  40a0f0:	mov    cl,BYTE PTR [eax-0x7941b32d]
  40a0f6:	aas    
  40a0f7:	fisubr DWORD PTR [eax-0x28e14a97]
  40a0fd:	inc    ecx
  40a0fe:	inc    edx
  40a0ff:	bound  ecx,QWORD PTR [esi+0x567f8b23]
  40a105:	shr    DWORD PTR [edx-0x37],1
  40a108:	sbb    al,0xc0
  40a10a:	adc    ebp,edx
  40a10c:	jl     0x40a180
  40a10e:	xchg   DWORD PTR [ebp-0xc2f222],ebx
  40a114:	adc    BYTE PTR [eax-0x650f913a],dh
  40a11a:	adc    eax,0x281ccd59
  40a11f:	daa    
  40a120:	addr16 pop eax
  40a122:	add    cl,ah
  40a124:	scas   eax,DWORD PTR es:[edi]
  40a125:	icebp  
  40a126:	xchg   esp,eax
  40a127:	shl    DWORD PTR [di-0x51fb],1
  40a12c:	adc    eax,0xa9b26bfb
  40a131:	cdq    
  40a132:	cmp    eax,0x80181ff7
  40a137:	dec    esp
  40a138:	add    BYTE PTR [edx-0x592ae7d4],al
  40a13e:	imul   esp,DWORD PTR [ebx-0x68d3c97d],0xa8db637
  40a148:	ins    DWORD PTR es:[edi],dx
  40a149:	cmp    eax,0x9672702d
  40a14e:	nop
  40a14f:	in     eax,dx
  40a150:	nop
  40a151:	and    al,BYTE PTR [ebp+0x311c1f3f]
  40a157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a158:	mov    bh,0x73
  40a15a:	sub    DWORD PTR [edi-0x3883784f],eax
  40a160:	loop   0x40a15c
  40a162:	add    al,0xb7
  40a164:	bound  esp,QWORD PTR [ecx+0x68]
  40a167:	and    bh,al
  40a169:	cmova  ecx,DWORD PTR [ebx]
  40a16c:	out    0xfd,al
  40a16e:	shr    DWORD PTR [ecx+0x3f],0xae
  40a172:	and    BYTE PTR [ebx+ebx*1+0x1a68a0f0],ah
  40a179:	test   DWORD PTR [ebp+0x3e],edi
  40a17c:	jp     0x40a1a6
  40a17e:	adc    DWORD PTR [ebx-0x6f],ebp
  40a181:	cmp    eax,0x9fa89f5
  40a186:	pusha  
  40a187:	adc    eax,0x69344ada
  40a18c:	and    ebp,edi
  40a18e:	daa    
  40a18f:	push   cs
  40a190:	ficom  WORD PTR [eax]
  40a192:	mov    dl,0xd1
  40a194:	jmp    0xeb7d107e
  40a199:	adc    BYTE PTR [ebp+0x6f32525d],0x2e
  40a1a0:	inc    edx
  40a1a1:	test   BYTE PTR [ebx],al
  40a1a3:	and    DWORD PTR [esp+esi*1+0x3c],ecx
  40a1a7:	int3   
  40a1a8:	jo     0x40a176
  40a1aa:	mov    bl,0x1d
  40a1ac:	sub    DWORD PTR [ecx+esi*8+0x6864946],0xf3d1befe
  40a1b7:	inc    ebp
  40a1b8:	aam    0x5f
  40a1ba:	push   0x76112abb
  40a1bf:	fs jmp 0xe19eb584
  40a1c5:	scas   al,BYTE PTR es:[edi]
  40a1c6:	add    DWORD PTR ds:0x4b432458,ecx
  40a1cc:	daa    
  40a1cd:	icebp  
  40a1ce:	sub    esi,edi
  40a1d0:	out    0x55,eax
  40a1d2:	dec    ecx
  40a1d3:	push   0xdb138b3d
  40a1d8:	jmp    0xb11450bb
  40a1dd:	or     al,0x21
  40a1df:	add    BYTE PTR [esi-0x542ed2cd],bl
  40a1e5:	and    DWORD PTR [ecx],esi
  40a1e7:	jbe    0x40a195
  40a1e9:	mov    eax,0x881637cc
  40a1ee:	cli    
  40a1ef:	mov    eax,fs:0xeb832423
  40a1f5:	sub    eax,0xed58038f
  40a1fa:	mov    al,ds:0x7c85cb82
  40a1ff:	ret    
  40a200:	mov    ch,0x46
  40a202:	loopne 0x40a255
  40a204:	pop    ss
  40a205:	imul   dx,dx,0xffe2
  40a209:	cmp    DWORD PTR [ecx+0x41],0xcc7507a2
  40a210:	sbb    ah,0x7d
  40a213:	push   0xf4ca66fb
  40a218:	mov    ecx,0xb21b11b7
  40a21d:	bound  ecx,QWORD PTR [edi+ebp*1+0x7f]
  40a221:	jnp    0x40a208
  40a223:	xor    dh,BYTE PTR [ecx-0x7b728f2e]
  40a229:	jbe    0x40a2a6
  40a22b:	fwait
  40a22c:	inc    eax
  40a22d:	mov    eax,0xeca00f4b
  40a232:	ins    DWORD PTR es:[edi],dx
  40a233:	pop    ds
  40a234:	leave  
  40a235:	fcmovnb st,st(3)
  40a237:	data16 shr dl,cl
  40a23a:	(bad)  
  40a23b:	pushf  
  40a23c:	mov    al,ds:0x9fb01920
  40a241:	fisub  WORD PTR [ebx+0x24]
  40a244:	mov    edx,esp
  40a246:	pop    edi
  40a247:	mov    al,0x27
  40a249:	sbb    al,0xcc
  40a24b:	adc    eax,0x6aec0ca9
  40a250:	(bad)  
  40a251:	mul    DWORD PTR [edx]
  40a253:	popf   
  40a254:	pop    edx
  40a255:	ins    DWORD PTR es:[edi],dx
  40a256:	cmp    ch,BYTE PTR [edx+0x4c]
  40a259:	into   
  40a25a:	cdq    
  40a25b:	scas   eax,DWORD PTR es:[edi]
  40a25c:	outs   dx,DWORD PTR ds:[esi]
  40a25d:	sahf   
  40a25e:	popa   
  40a25f:	daa    
  40a260:	sbb    dl,cl
  40a262:	aad    0x36
  40a264:	pop    ebx
  40a265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a266:	xchg   esi,eax
  40a267:	sbb    eax,0xadc0b84
  40a26c:	push   0x334f9b46
  40a271:	and    edx,DWORD PTR [eax-0x1d]
  40a274:	fs xor al,0x88
  40a277:	adc    bh,BYTE PTR [esi-0x6b]
  40a27a:	cwde   
  40a27b:	out    0x4a,al
  40a27d:	xor    eax,0x32651a3
  40a282:	push   ss
  40a283:	dec    ecx
  40a284:	cmp    edi,DWORD PTR [ecx+edi*4+0x67003d0c]
  40a28b:	push   ebx
  40a28c:	pop    esi
  40a28d:	fisubr WORD PTR [ecx-0x1cf85ee8]
  40a293:	jnp    0x40a2e8
  40a295:	sub    eax,0x601a15a1
  40a29a:	es je  0x40a234
  40a29d:	lea    esp,[ebp+0x13e324a9]
  40a2a3:	inc    edx
  40a2a4:	dec    edi
  40a2a5:	outs   dx,BYTE PTR ds:[esi]
  40a2a6:	push   es
  40a2a7:	or     DWORD PTR [edi-0x1332a68e],esi
  40a2ad:	push   ebp
  40a2ae:	lds    edx,FWORD PTR [ebx-0x52]
  40a2b1:	in     eax,0x1e
  40a2b3:	xor    BYTE PTR [ecx-0x83e981c],dh
  40a2b9:	test   DWORD PTR [eax-0x71],eax
  40a2bc:	pop    es
  40a2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2be:	icebp  
  40a2bf:	fs dec ebp
  40a2c1:	(bad)  
  40a2c2:	test   DWORD PTR [edx],esp
  40a2c4:	sub    eax,0xccf17473
  40a2c9:	add    al,0x3b
  40a2cb:	ins    DWORD PTR es:[edi],dx
  40a2cc:	ret    
  40a2cd:	pop    ss
  40a2ce:	push   0x791a569a
  40a2d3:	push   cs
  40a2d4:	adc    esp,ebx
  40a2d6:	test   BYTE PTR [edi+0x43],ch
  40a2d9:	jne    0x40a298
  40a2db:	not    DWORD PTR [ecx+0x77f64e0f]
  40a2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e2:	int    0x30
  40a2e4:	jge    0x40a360
  40a2e6:	lods   eax,DWORD PTR ds:[esi]
  40a2e7:	cmp    ebp,eax
  40a2e9:	xchg   esi,eax
  40a2ea:	imul   edi,esp,0xffffffc4
  40a2ed:	(bad)  
  40a2ef:	test   al,0x82
  40a2f1:	dec    edi
  40a2f2:	mov    bh,0xc8
  40a2f4:	sbb    DWORD PTR [eax],edx
  40a2f6:	mov    ch,0xc9
  40a2f8:	repnz pop ecx
  40a2fa:	scas   al,BYTE PTR es:[edi]
  40a2fb:	jle    0x40a2f8
  40a2fd:	or     cl,BYTE PTR [ecx]
  40a2ff:	pushf  
  40a300:	out    0xc,al
  40a302:	dec    ebx
  40a303:	add    eax,0xe0d1f71d
  40a308:	jns    0x40a2b1
  40a30a:	imul   ecx,esp,0x4ca872d3
  40a310:	pop    ds
  40a311:	or     cl,al
  40a313:	loopne 0x40a32a
  40a315:	outs   dx,DWORD PTR ds:[esi]
  40a316:	dec    edi
  40a317:	pop    ebx
  40a318:	arpl   WORD PTR [eax-0x19880b94],bx
  40a31e:	aad    0x6b
  40a320:	lock into 
  40a322:	cmp    dh,BYTE PTR [eax+0x4]
  40a325:	test   DWORD PTR [eax-0x8b53371],0xd87e9a95
  40a32f:	ret    0x5744
  40a332:	mov    al,0x16
  40a334:	cdq    
  40a335:	arpl   WORD PTR [edi],dx
  40a337:	or     eax,0xeed594de
  40a33c:	icebp  
  40a33d:	mov    esp,0x17fe04a3
  40a342:	fwait
  40a343:	lds    eax,FWORD PTR [esi+ebp*4]
  40a346:	stc    
  40a347:	sti    
  40a348:	mov    cl,0xb3
  40a34a:	ins    BYTE PTR es:[edi],dx
  40a34b:	inc    ebp
  40a34c:	mov    al,0x6d
  40a34e:	cmp    bl,BYTE PTR [eax-0x6]
  40a351:	or     eax,DWORD PTR [esi+0xd]
  40a354:	cmp    BYTE PTR [edx-0x309fa7f9],0x6e
  40a35b:	sub    al,0x47
  40a35d:	shl    BYTE PTR ds:0x88357875,1
  40a363:	inc    dl
  40a365:	pop    esi
  40a366:	leave  
  40a367:	je     0x40a351
  40a369:	enter  0xf7f1,0xe6
  40a36d:	icebp  
  40a36e:	sub    edx,DWORD PTR [edx+0x45]
  40a371:	inc    esp
  40a372:	in     eax,0x1e
  40a374:	push   ebx
  40a375:	sbb    DWORD PTR [esi+0xd],edx
  40a378:	retf   
  40a379:	aas    
  40a37a:	pop    ds
  40a37b:	pop    ds
  40a37c:	xchg   BYTE PTR [ecx-0x22837b7e],bh
  40a382:	xchg   edx,eax
  40a384:	loope  0x40a3a8
  40a386:	mov    cl,0xae
  40a388:	je     0x40a3ce
  40a38a:	push   ebx
  40a38b:	gs ret 0x75ad
  40a38f:	fwait
  40a390:	mov    dl,0x7
  40a392:	je     0x40a3cd
  40a394:	xchg   ecx,eax
  40a395:	data16 (bad) [ecx]
  40a398:	add    DWORD PTR [edi-0x10a7219c],edx
  40a39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a39f:	or     BYTE PTR [ebx],bl
  40a3a1:	mov    dh,0xec
  40a3a3:	fsub   DWORD PTR [ebp+0x4c]
  40a3a6:	inc    ecx
  40a3a7:	retf   0x5161
  40a3aa:	add    bh,0xe9
  40a3ad:	mov    BYTE PTR [ecx+0x1d],dl
  40a3b0:	sub    al,0x30
  40a3b2:	pop    ebp
  40a3b3:	jb     0x40a3cf
  40a3b5:	sar    DWORD PTR [esi-0x30cd88db],0x32
  40a3bc:	xchg   BYTE PTR [ebp+edx*2-0x39],al
  40a3c0:	or     esp,DWORD PTR [ebx+0x2a65e9ec]
  40a3c6:	sbb    eax,ebx
  40a3c8:	shl    BYTE PTR [esi+0x76],1
  40a3cb:	mov    dh,0x46
  40a3cd:	inc    ebx
  40a3ce:	adc    al,0x9d
  40a3d0:	sbb    DWORD PTR [eax],edi
  40a3d2:	mov    dh,0x39
  40a3d4:	mov    ebp,0x4810480e
  40a3d9:	je     0x40a3cd
  40a3db:	sbb    ah,dl
  40a3dd:	xor    cl,dh
  40a3df:	int    0x79
  40a3e1:	add    al,bl
  40a3e3:	jmp    0xef68:0xaf6324f1
  40a3ea:	(bad)  
  40a3eb:	jbe    0x40a458
  40a3ed:	retf   0x7050
  40a3f0:	ds pusha 
  40a3f2:	sti    
  40a3f3:	shl    edx,1
  40a3f5:	cmp    al,0x59
  40a3f7:	shl    BYTE PTR [ebp-0x49a40b6e],1
  40a3fd:	push   eax
  40a3fe:	out    dx,eax
  40a3ff:	inc    ecx
  40a400:	sbb    ecx,DWORD PTR [esi+0xe]
  40a403:	sub    al,0x39
  40a405:	xchg   edi,eax
  40a406:	or     DWORD PTR [ebx+ebp*8-0x11f722a4],edx
  40a40d:	or     bh,BYTE PTR [esi]
  40a40f:	shl    DWORD PTR [eax],cl
  40a411:	or     BYTE PTR [ecx-0x469d0476],cl
  40a417:	cmp    ch,al
  40a419:	dec    eax
  40a41a:	sahf   
  40a41b:	dec    ebx
  40a41c:	fst    st(6)
  40a41e:	sahf   
  40a41f:	loop   0x40a3c5
  40a421:	push   es
  40a422:	pop    esp
  40a423:	popf   
  40a424:	xlat   BYTE PTR ds:[ebx]
  40a425:	inc    ebp
  40a426:	xor    dh,BYTE PTR [ecx+esi*1]
  40a429:	out    0x3f,al
  40a42b:	bnd call 0x864ae2fa
  40a431:	shl    DWORD PTR ds:0x1d8fbda1,1
  40a437:	shr    DWORD PTR [edi],1
  40a439:	sub    edx,DWORD PTR [edi]
  40a43b:	xor    ecx,ebx
  40a43d:	into   
  40a43e:	fcom   DWORD PTR [ebx]
  40a440:	lods   eax,DWORD PTR ss:[si]
  40a443:	(bad)  
  40a444:	mov    ebp,0x4ae53936
  40a449:	sbb    DWORD PTR [ebx],edi
  40a44b:	jne    0x40a419
  40a44d:	sub    dh,al
  40a44f:	clc    
  40a450:	lock jno 0x40a41a
  40a453:	cs nop
  40a455:	cmp    dh,BYTE PTR fs:[esi-0x79]
  40a459:	cmp    ebp,esp
  40a45b:	stos   DWORD PTR es:[edi],eax
  40a45c:	add    eax,0xc0604646
  40a461:	pop    esi
  40a462:	(bad)  
  40a463:	and    eax,0xb242a569
  40a468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a469:	mov    ebp,0xf7a17dbc
  40a46e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a46f:	bound  ebx,QWORD PTR [ebp+0x10]
  40a472:	xchg   BYTE PTR [ebp+edx*8-0x7b],ah
  40a476:	clc    
  40a477:	neg    DWORD PTR [edx]
  40a479:	fld    QWORD PTR [edx]
  40a47b:	ss pop esi
  40a47d:	in     eax,0x6e
  40a47f:	ds xchg ecx,eax
  40a481:	nop
  40a482:	icebp  
  40a483:	mov    ?,WORD PTR [ebx-0x14]
  40a486:	mul    al
  40a488:	inc    ebp
  40a489:	cmp    ebx,DWORD PTR [edi-0x4f7dcb9a]
  40a48f:	push   es
  40a490:	daa    
  40a491:	mov    ds:0x7a78ff75,eax
  40a496:	ds dec edi
  40a498:	sbb    DWORD PTR [edi-0x2],esp
  40a49b:	and    DWORD PTR [ebx+0x234a4629],0xffffffe8
  40a4a2:	mov    bl,0xdf
  40a4a4:	sub    ah,al
  40a4a6:	rol    BYTE PTR [eax+0x14e5ee91],cl
  40a4ac:	mov    edi,0x154e5344
  40a4b1:	mov    esp,0xeaee189b
  40a4b6:	sbb    eax,0x1394bc30
  40a4bb:	adc    al,0xb3
  40a4bd:	and    BYTE PTR [eax],bh
  40a4bf:	xor    cl,BYTE PTR [ecx+0x7bec14a4]
  40a4c5:	jge    0x40a480
  40a4c7:	ss in  al,0x14
  40a4ca:	inc    eax
  40a4cb:	enter  0x95ef,0xcb
  40a4cf:	inc    esp
  40a4d0:	pop    edx
  40a4d1:	lahf   
  40a4d2:	xor    cl,0xb6
  40a4d5:	(bad)  
  40a4d6:	out    dx,al
  40a4d7:	jns    0x40a4d2
  40a4d9:	les    ebx,FWORD PTR [edi+eax*2-0x5321dc33]
  40a4e0:	popf   
  40a4e1:	cli    
  40a4e2:	stc    
  40a4e3:	sub    ch,BYTE PTR [edx+0x7ea63d63]
  40a4e9:	sbb    al,BYTE PTR [edx]
  40a4eb:	or     al,0x38
  40a4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4ef:	pop    edx
  40a4f1:	inc    edi
  40a4f2:	or     BYTE PTR [edx+0x44],cl
  40a4f5:	fsubrp st(2),st
  40a4f7:	adc    al,cl
  40a4f9:	push   ebx
  40a4fa:	jp     0x40a4cf
  40a4fc:	inc    eax
  40a4fd:	js     0x40a482
  40a4ff:	clc    
  40a500:	push   eax
  40a501:	mov    cl,0xc0
  40a503:	or     eax,0x5ca7020b
  40a508:	mov    ch,0xa0
  40a50a:	call   0x19ca:0x12db9e4f
  40a511:	inc    ecx
  40a512:	pop    ecx
  40a513:	inc    eax
  40a514:	xor    al,0xc9
  40a516:	je     0x40a54e
  40a518:	adc    DWORD PTR [ebp+0x54a7dbef],ebp
  40a51e:	ins    DWORD PTR es:[edi],dx
  40a51f:	cmc    
  40a520:	xor    DWORD PTR [esi],0xffffffa2
  40a523:	lock out dx,al
  40a525:	push   0x8ab324f7
  40a52a:	jmp    0x284f79f6
  40a52f:	ret    
  40a530:	stos   BYTE PTR es:[edi],al
  40a531:	jno    0x40a594
  40a533:	add    ebx,ecx
  40a535:	mov    ds:0xb48764b7,al
  40a53a:	das    
  40a53b:	lahf   
  40a53c:	sub    BYTE PTR [ebx],ch
  40a53e:	mov    ah,0x64
  40a540:	adc    DWORD PTR [ecx-0x2c],edi
  40a543:	xchg   ebp,eax
  40a544:	pop    ecx
  40a545:	and    ch,BYTE PTR [ebp+0x58]
  40a548:	inc    esi
  40a549:	cld    
  40a54a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a54d:	in     al,dx
  40a54e:	or     eax,ebx
  40a550:	cs mov ebp,0x9e1ab807
  40a556:	neg    ecx
  40a558:	fisubr WORD PTR [edi-0x5c02b503]
  40a55e:	aad    0xf1
  40a560:	dec    ebp
  40a561:	fidivr WORD PTR [ebp+0x6916cf5c]
  40a567:	xor    dh,ch
  40a569:	push   es
  40a56a:	mov    WORD PTR [eax],?
  40a56c:	inc    eax
  40a56d:	mov    BYTE PTR [ecx],dl
  40a56f:	cwde   
  40a570:	push   cs
  40a571:	dec    esi
  40a572:	cmp    al,0x28
  40a574:	cli    
  40a575:	xchg   DWORD PTR [esi+ecx*2-0x80],edx
  40a579:	popa   
  40a57a:	loope  0x40a5bb
  40a57c:	nop
  40a57d:	icebp  
  40a57e:	mov    cl,ah
  40a580:	or     eax,0x6cc482d4
  40a585:	ret    0x8917
  40a588:	mov    eax,DWORD PTR [ebp+0x46]
  40a58b:	ins    DWORD PTR es:[edi],dx
  40a58c:	out    dx,eax
  40a58d:	das    
  40a58e:	xchg   edi,eax
  40a58f:	or     esi,DWORD PTR [ebp+0x541eeb8e]
  40a595:	add    DWORD PTR [ebx-0x76ef37d5],eax
  40a59b:	(bad)
  40a59e:	lods   eax,DWORD PTR ds:[esi]
  40a59f:	(bad)  
  40a5a0:	test   eax,0x80bb8493
  40a5a5:	rcl    ebx,1
  40a5a7:	cmp    al,0x5f
  40a5a9:	and    eax,esp
  40a5ab:	iret   
  40a5ac:	lods   al,BYTE PTR ds:[esi]
  40a5ad:	rol    DWORD PTR [esi+0x5c],1
  40a5b0:	mov    edx,0x688312b8
  40a5b5:	test   esi,esp
  40a5b7:	push   ds
  40a5b8:	stos   BYTE PTR es:[edi],al
  40a5b9:	scas   eax,DWORD PTR es:[edi]
  40a5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5bb:	mov    DWORD PTR [edx+0x61],ebx
  40a5be:	gs add eax,0x3ff90f67
  40a5c4:	or     ecx,DWORD PTR [edi-0x74]
  40a5c7:	repz xchg ebp,eax
  40a5c9:	sti    
  40a5ca:	and    DWORD PTR [edx-0x10162475],ebp
  40a5d0:	dec    ebp
  40a5d1:	pop    ebx
  40a5d2:	xchg   esi,eax
  40a5d3:	mov    ecx,0x820d6f6d
  40a5d8:	cmp    dl,BYTE PTR [edx-0x74]
  40a5db:	mov    ds:0x425d2047,al
  40a5e0:	dec    esi
  40a5e1:	fist   WORD PTR [edx-0x27]
  40a5e4:	loopne 0x40a5d4
  40a5e6:	mov    esi,0xc1a1b048
  40a5eb:	das    
  40a5ec:	push   ebp
  40a5ed:	jge    0x40a63d
  40a5ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5f0:	inc    edx
  40a5f1:	enter  0x54aa,0x17
  40a5f5:	add    BYTE PTR [ebp-0x6d],0xed
  40a5f9:	loope  0x40a617
  40a5fb:	(bad)  
  40a5fc:	mov    ah,0xe9
  40a5fe:	mul    DWORD PTR [edi+esi*8+0x62]
  40a602:	or     BYTE PTR [eax+0x11],0x44
  40a606:	data16 jmp 0x40a65d
  40a609:	sub    bh,BYTE PTR [ecx-0xf4269c6]
  40a60f:	or     al,0xe9
  40a611:	lock les ebp,FWORD PTR [esi]
  40a614:	hlt    
  40a615:	addr16 add bh,bh
  40a618:	test   eax,0x1c388e6e
  40a61d:	gs into 
  40a61f:	and    eax,0x1162d809
  40a624:	scas   al,BYTE PTR es:[edi]
  40a625:	aam    0xfa
  40a627:	(bad)  
  40a628:	stc    
  40a629:	outs   dx,DWORD PTR ds:[esi]
  40a62a:	icebp  
  40a62b:	jp     0x40a673
  40a62d:	mov    al,ds:0x3266192d
  40a632:	je     0x40a696
  40a634:	(bad)  
  40a635:	jb     0x40a680
  40a637:	mov    ecx,0xab45c402
  40a63c:	nop
  40a63d:	mov    ch,BYTE PTR [edx+0x1910173]
  40a643:	clc    
  40a644:	ss jnp 0x40a628
  40a647:	xchg   esp,eax
  40a648:	mov    dl,BYTE PTR [esi+0x2a00c7cb]
  40a64e:	out    dx,al
  40a64f:	sub    DWORD PTR ds:0x58c944cc,edx
  40a655:	dec    ebp
  40a656:	mov    ecx,ebp
  40a658:	(bad)  
  40a659:	sub    al,0xa9
  40a65b:	push   ds
  40a65c:	in     al,dx
  40a65d:	and    BYTE PTR [esi-0x6f],ch
  40a660:	mov    eax,ds:0x53ac39b7
  40a665:	rcl    BYTE PTR [esi],0x81
  40a668:	and    ebx,ecx
  40a66a:	lea    edi,ds:0x6b6712b2
  40a670:	shl    dl,0x64
  40a673:	repnz out 0x85,al
  40a676:	inc    esp
  40a677:	mov    edi,0xcf17497e
  40a67c:	adc    BYTE PTR [edi-0x41b319a9],bh
  40a682:	sub    bh,ch
  40a684:	cmp    eax,0x81a874db
  40a689:	adc    BYTE PTR [ebx+0x68706213],bh
  40a68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a690:	sub    ah,BYTE PTR [ecx]
  40a692:	dec    edx
  40a693:	and    DWORD PTR [eax-0x18],0x8eff3c89
  40a69a:	jle    0x40a62c
  40a69c:	ret    0xf9b
  40a69f:	push   esi
  40a6a0:	out    dx,eax
  40a6a1:	popf   
  40a6a2:	lods   al,BYTE PTR ds:[esi]
  40a6a3:	xor    eax,0xdc6380e7
  40a6a8:	bound  ebx,QWORD PTR [eax+0x164302f8]
  40a6ae:	in     eax,dx
  40a6af:	shr    BYTE PTR [ebx-0x2d0f4e78],cl
  40a6b5:	loope  0x40a684
  40a6b7:	ja     0x40a6a3
  40a6b9:	pop    ebp
  40a6ba:	out    0x5b,al
  40a6bc:	inc    eax
  40a6bd:	xchg   ecx,eax
  40a6be:	retf   0x28c1
  40a6c1:	mov    al,ds:0x8386dc52
  40a6c6:	mov    ds:0xefd12fc,al
  40a6cb:	push   esp
  40a6cc:	ret    0xb5ce
  40a6cf:	add    DWORD PTR [eax],eax
  40a6d1:	adc    ch,ch
  40a6d3:	scas   al,BYTE PTR es:[edi]
  40a6d4:	push   ss
  40a6d5:	dec    ebx
  40a6d6:	fiadd  DWORD PTR [edi]
  40a6d8:	inc    eax
  40a6d9:	pop    edi
  40a6da:	imul   eax,DWORD PTR ds:0xf7f7bdcb,0x3d553f7d
  40a6e4:	mov    ds:0x109feeee,al
  40a6e9:	pop    edx
  40a6ea:	imul   esi,DWORD PTR [ecx],0x75
  40a6ed:	int    0x58
  40a6ef:	dec    eax
  40a6f0:	xchg   ebp,eax
  40a6f1:	or     DWORD PTR [ebx],ecx
  40a6f3:	call   0x30e8bec4
  40a6f8:	mov    eax,0x6e2e51fb
  40a6fd:	or     al,0xf5
  40a6ff:	(bad)  
  40a701:	pop    ecx
  40a702:	(bad)  
  40a703:	gs hlt 
  40a705:	ss out dx,eax
  40a707:	xchg   ebx,eax
  40a708:	cmc    
  40a709:	mov    edi,0x16d0d97c
  40a70e:	and    edi,edx
  40a710:	xor    edx,0xae8d59aa
  40a716:	xchg   ecx,eax
  40a717:	xor    eax,0xfc33018e
  40a71c:	mov    esp,DWORD PTR [ecx+0x7150389e]
  40a722:	inc    ebp
  40a723:	call   0xe33360a3
  40a728:	and    DWORD PTR [eax-0x18],0xffffffad
  40a72c:	clc    
  40a72d:	mov    ecx,0x7dc5a864
  40a732:	or     al,0x5c
  40a734:	pop    ebp
  40a735:	jecxz  0x40a705
  40a737:	outs   dx,BYTE PTR ds:[esi]
  40a738:	adc    al,0xf5
  40a73a:	dec    esi
  40a73b:	adc    ch,BYTE PTR [esi+0x6f]
  40a73e:	cs xchg edi,eax
  40a740:	sub    bh,dl
  40a742:	adc    al,0xd4
  40a744:	stos   BYTE PTR es:[edi],al
  40a745:	mov    esi,0xf0781686
  40a74a:	sbb    eax,0xc51f03d9
  40a74f:	inc    edx
  40a750:	lea    ecx,[eax-0x2e]
  40a753:	aad    0x47
  40a755:	es call 0x52cb:0x684fbd42
  40a75d:	ja     0x40a79b
  40a75f:	out    dx,al
  40a760:	dec    ecx
  40a761:	fidivr DWORD PTR [edx+0x19]
  40a764:	add    bh,BYTE PTR [edi]
  40a766:	mov    ds:0x30fd11b4,al
  40a76b:	jne    0x40a749
  40a76d:	push   esi
  40a76e:	mov    fs,WORD PTR ds:0x531196b2
  40a774:	aad    0xa6
  40a776:	mov    edx,0xf67d6f9
  40a77b:	sti    
  40a77c:	push   esp
  40a77d:	loope  0x40a77c
  40a77f:	xor    eax,0x2d3e64a7
  40a784:	aam    0x6c
  40a786:	inc    edi
  40a787:	dec    esp
  40a788:	push   edx
  40a789:	and    cl,dl
  40a78b:	iret   
  40a78c:	stc    
  40a78d:	lea    esp,[edx-0xc9a145b]
  40a793:	int3   
  40a794:	mov    esp,0x17b26099
  40a799:	popf   
  40a79a:	mov    bh,0xe
  40a79c:	ret    0xb27b
  40a79f:	adc    bl,BYTE PTR [edx]
  40a7a1:	cmp    dl,BYTE PTR [edi]
  40a7a3:	in     al,0xe6
  40a7a5:	xor    eax,0x86be8e1c
  40a7aa:	neg    DWORD PTR [edx-0x45]
  40a7ad:	push   ss
  40a7ae:	jp     0x40a7ce
  40a7b0:	xlat   BYTE PTR ds:[ebx]
  40a7b1:	mov    ch,0x5f
  40a7b3:	shl    DWORD PTR ds:0xfd9036f7,cl
  40a7b9:	sbb    eax,0x5dbf7894
  40a7be:	xchg   esp,eax
  40a7bf:	xor    edx,DWORD PTR [ebx]
  40a7c1:	fwait
  40a7c2:	ret    0x6e28
  40a7c5:	lds    edi,FWORD PTR [edx-0x7a3f71b5]
  40a7cb:	mov    al,ds:0xe420ccd9
  40a7d0:	inc    edx
  40a7d1:	sbb    eax,0xf4ad450f
  40a7d6:	and    ebp,DWORD PTR ds:0x763a38b5
  40a7dc:	test   DWORD PTR [ecx],eax
  40a7de:	cmc    
  40a7df:	mov    ds:0x3d526bf,al
  40a7e4:	test   BYTE PTR [eax],ch
  40a7e6:	mov    ecx,0x33b18751
  40a7eb:	idiv   BYTE PTR [eax+0x4f]
  40a7ee:	mov    ds:0xc79f3fab,al
  40a7f3:	push   edi
  40a7f4:	fcmovu st,st(6)
  40a7f6:	(bad)  
  40a7f7:	push   eax
  40a7f8:	inc    esi
  40a7f9:	(bad)  
  40a7fa:	push   esp
  40a7fb:	push   ebp
  40a7fc:	jne    0x40a7b3
  40a7fe:	push   es
  40a7ff:	leave  
  40a800:	inc    ebp
  40a801:	pop    esp
  40a802:	cmp    bh,dh
  40a804:	shr    DWORD PTR [eax+esi*1],0x58
  40a808:	call   0x50aaec5d
  40a80d:	daa    
  40a80e:	(bad)  
  40a80f:	les    edi,FWORD PTR [eax+0x5d]
  40a812:	sub    eax,0x524b73fd
  40a817:	dec    cl
  40a819:	pop    ecx
  40a81a:	iret   
  40a81b:	xor    DWORD PTR [esi-0x7a],edx
  40a81e:	pop    es
  40a81f:	cmc    
  40a820:	xchg   edx,eax
  40a821:	cld    
  40a822:	popf   
  40a823:	fdivp  st(4),st
  40a825:	jecxz  0x40a869
  40a827:	aaa    
  40a828:	sbb    ebp,DWORD PTR [ecx-0x811c89]
  40a82e:	stos   BYTE PTR es:[edi],al
  40a82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a830:	test   al,0x5
  40a832:	dec    esi
  40a833:	dec    esp
  40a834:	in     al,0xf5
  40a836:	adc    BYTE PTR [eax-0x6f9cd81f],0xb0
  40a83d:	fs jnp 0x40a885
  40a840:	xchg   esi,ecx
  40a842:	pop    ds
  40a843:	xadd   BYTE PTR [esi+0x26],bh
  40a847:	inc    edx
  40a848:	rol    DWORD PTR [ebx],0xf9
  40a84b:	and    ebp,esp
  40a84d:	add    al,0x95
  40a84f:	jnp    0x40a87c
  40a851:	adc    al,0x62
  40a853:	cmc    
  40a854:	test   eax,0xde47d98f
  40a859:	cs jge 0x40a852
  40a85c:	pop    es
  40a85d:	mov    ch,0x24
  40a85f:	je     0x40a833
  40a861:	adc    ah,BYTE PTR [esi*2+0x669ccc44]
  40a868:	mov    esp,0x346d03b7
  40a86d:	data16 or al,BYTE PTR [eax+0x57]
  40a871:	add    al,0x2f
  40a873:	pop    eax
  40a874:	test   eax,0x68400dc2
  40a879:	xchg   edx,eax
  40a87a:	dec    ebp
  40a87b:	out    dx,al
  40a87c:	ja     0x40a8f7
  40a87e:	popf   
  40a87f:	mov    ds:0x3942deb3,al
  40a884:	popa   
  40a885:	pop    edi
  40a886:	popf   
  40a887:	lods   al,BYTE PTR ds:[esi]
  40a888:	add    edi,DWORD PTR [eax+0x73065bb2]
  40a88e:	add    DWORD PTR [edi-0x61],eax
  40a891:	add    eax,0x80f037a7
  40a896:	(bad)  
  40a897:	retf   
  40a898:	and    esp,ebp
  40a89a:	jecxz  0x40a81e
  40a89c:	cmc    
  40a89d:	(bad)  
  40a89e:	adc    esp,DWORD PTR [ebx+0x71d5edbc]
  40a8a4:	mov    ds:0x9c77a54c,al
  40a8a9:	inc    edx
  40a8aa:	call   0xdbb2:0x6882803a
  40a8b1:	adc    BYTE PTR [edx+eiz*4+0x12],ch
  40a8b5:	test   al,0x49
  40a8b7:	dec    eax
  40a8b8:	data16 sub BYTE PTR [ebx],cl
  40a8bb:	jl     0x40a8b4
  40a8bd:	mov    eax,0x5c3f9ce
  40a8c2:	or     eax,0xfbe941e3
  40a8c7:	into   
  40a8c8:	push   esi
  40a8c9:	cmp    al,0xff
  40a8cb:	sti    
  40a8cc:	xor    al,0x7a
  40a8ce:	and    DWORD PTR [eax-0x63],eax
  40a8d1:	(bad)  
  40a8d2:	jae    0x40a8b0
  40a8d4:	cld    
  40a8d5:	xor    eax,0x6b8e60bd
  40a8da:	ror    DWORD PTR fs:[edi-0x13],1
  40a8de:	and    al,0x48
  40a8e0:	std    
  40a8e1:	imul   eax,eax,0xfffffff9
  40a8e4:	jge    0x40a8a9
  40a8e6:	dec    ebx
  40a8e7:	out    dx,al
  40a8e8:	std    
  40a8e9:	cmp    ah,BYTE PTR ds:0x423fecae
  40a8ef:	mov    eax,0xd9e88e44
  40a8f4:	dec    ebp
  40a8f5:	xor    ch,BYTE PTR [ebp+0x67d44565]
  40a8fb:	dec    ecx
  40a8fc:	inc    ecx
  40a8fd:	cdq    
  40a8fe:	mul    esp
  40a900:	xchg   ecx,eax
  40a901:	add    ebp,DWORD PTR [edi]
  40a903:	dec    esi
  40a904:	jmp    0x40a927
  40a906:	ffreep st(1)
  40a908:	xor    dh,BYTE PTR [ebp+0x2772c0a7]
  40a90e:	xor    ah,BYTE PTR [ebp-0x7d]
  40a911:	pop    edx
  40a912:	or     eax,0x2b0e09d7
  40a917:	or     BYTE PTR [ecx+0x3140d80c],dh
  40a91d:	std    
  40a91e:	pop    ebx
  40a91f:	das    
  40a920:	push   esi
  40a921:	or     eax,0x77fdbc66
  40a926:	dec    edx
  40a927:	sbb    dh,dl
  40a929:	cwde   
  40a92a:	add    DWORD PTR [edx-0x54b70584],edx
  40a930:	mov    esp,0xb1ec288c
  40a935:	adc    edx,DWORD PTR [ebp+ebp*1+0x62]
  40a939:	ret    
  40a93a:	ds mov ch,0x95
  40a93d:	jg     0x40a96d
  40a93f:	adc    ecx,esi
  40a941:	push   0xb79a4519
  40a946:	xchg   ebx,eax
  40a947:	push   ebp
  40a948:	pushf  
  40a949:	sbb    DWORD PTR [ebp-0x74],esi
  40a94c:	add    bl,cl
  40a94e:	cmp    BYTE PTR [ecx-0x2],0x61
  40a952:	adc    DWORD PTR [esp+esi*1-0x54],0xffffffff
  40a957:	cmp    eax,0x49431b2a
  40a95c:	stos   DWORD PTR es:[edi],eax
  40a95d:	dec    esi
  40a95e:	stos   DWORD PTR es:[edi],eax
  40a95f:	lock test ecx,esi
  40a962:	data16 in al,dx
  40a964:	xchg   edx,eax
  40a965:	add    BYTE PTR [edx],ch
  40a967:	mov    edi,0x3d4b406d
  40a96c:	sub    al,BYTE PTR [edx-0x2571a7df]
  40a972:	push   cs
  40a973:	jb     0x40a997
  40a975:	hlt    
  40a976:	aam    0x77
  40a978:	dec    edx
  40a979:	or     dl,BYTE PTR [ebp+edx*8-0x5e]
  40a97d:	stos   BYTE PTR es:[edi],al
  40a97e:	push   eax
  40a97f:	mov    ecx,0x8b5f00a6
  40a984:	cmp    al,0xf4
  40a986:	imul   eax,DWORD PTR [esi],0x815306ac
  40a98c:	adc    al,0x43
  40a98e:	test   al,0x7a
  40a990:	lahf   
  40a991:	sar    ebp,cl
  40a993:	jmp    0x40a93c
  40a995:	adc    BYTE PTR [ecx+0x43c9b7a3],cl
  40a99b:	sbb    bl,BYTE PTR [eax-0xedaf800]
  40a9a1:	xor    eax,0x45ea3a0c
  40a9a6:	xchg   BYTE PTR [eax],bl
  40a9a8:	mov    cl,0x41
  40a9aa:	call   0xe37431ab
  40a9af:	xchg   esp,eax
  40a9b0:	jg     0x40a9d8
  40a9b2:	inc    ecx
  40a9b3:	aam    0xd1
  40a9b5:	ja     0x40aa36
  40a9b7:	lock sub dh,dl
  40a9ba:	(bad)  
  40a9bc:	mov    bh,dl
  40a9be:	push   ecx
  40a9bf:	mov    dh,BYTE PTR [eax-0x518bba5f]
  40a9c5:	push   ebp
  40a9c6:	xchg   edx,eax
  40a9c7:	sbb    eax,0x12c57ff9
  40a9cc:	mov    BYTE PTR [ebx],dl
  40a9ce:	adc    DWORD PTR [ecx+0x61fce256],edx
  40a9d4:	sub    bl,BYTE PTR [edx-0x45db2312]
  40a9da:	xor    ah,ah
  40a9dc:	push   esi
  40a9dd:	outs   dx,BYTE PTR ds:[esi]
  40a9de:	and    al,0x59
  40a9e0:	cld    
  40a9e1:	pop    eax
  40a9e2:	retf   0x4801
  40a9e5:	hlt    
  40a9e6:	jecxz  0x40a9f3
  40a9e8:	mov    WORD PTR [edx+edx*2],fs
  40a9eb:	push   ss
  40a9ec:	les    edi,FWORD PTR [esi]
  40a9ee:	jbe    0x40aa32
  40a9f0:	and    ebx,DWORD PTR ds:[edi]
  40a9f3:	clc    
  40a9f4:	outs   dx,BYTE PTR ds:[esi]
  40a9f5:	cmp    eax,DWORD PTR ds:0x89c77cac
  40a9fb:	outs   dx,DWORD PTR ds:[esi]
  40a9fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9fd:	enter  0x36da,0x3d
  40aa01:	out    dx,al
  40aa02:	push   es
  40aa03:	es in  eax,0x84
  40aa06:	xchg   esi,eax
  40aa07:	adc    ah,BYTE PTR [edi-0x26431d2f]
  40aa0d:	test   BYTE PTR [ecx+0xb],0x1d
  40aa11:	ret    0x5a54
  40aa14:	clc    
  40aa15:	dec    ebx
  40aa16:	jp     0x40a9cb
  40aa18:	jle    0x40aa0e
  40aa1a:	popf   
  40aa1b:	and    BYTE PTR [edi-0x7ff25dbd],dh
  40aa21:	mov    bh,0xe9
  40aa23:	add    eax,0xffdf00c0
  40aa28:	test   DWORD PTR [ebx+0x78],esp
  40aa2b:	add    BYTE PTR [eax+0x67],dl
  40aa2e:	push   edx
  40aa2f:	dec    edx
  40aa30:	add    DWORD PTR [edx],eax
  40aa32:	sub    DWORD PTR [ecx-0xf],ebp
  40aa35:	dec    esi
  40aa36:	pop    ss
  40aa37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa38:	pop    ss
  40aa39:	mov    dh,0xb4
  40aa3b:	and    dh,0xe1
  40aa3e:	mov    ah,0x67
  40aa40:	in     al,0x82
  40aa42:	sti    
  40aa43:	dec    esi
  40aa44:	aaa    
  40aa45:	inc    ebp
  40aa46:	shl    BYTE PTR [edx],cl
  40aa48:	dec    ebp
  40aa49:	sub    esi,esp
  40aa4b:	stos   BYTE PTR es:[edi],al
  40aa4c:	ins    DWORD PTR es:[edi],dx
  40aa4d:	mov    al,ds:0x7fb8d017
  40aa52:	adc    BYTE PTR [ebp+0x3b],ah
  40aa55:	mov    al,0x5d
  40aa57:	gs xchg ebp,eax
  40aa59:	mov    eax,ds:0xda40d4ac
  40aa5e:	xor    cl,BYTE PTR [edx-0x143492bf]
  40aa64:	jge    0x40aaab
  40aa66:	adc    eax,0x2feb4ed6
  40aa6b:	mov    ds:0xbeaa55f4,al
  40aa70:	stc    
  40aa71:	(bad)  
  40aa74:	ret    
  40aa75:	sub    bh,cl
  40aa77:	add    BYTE PTR [esi],al
  40aa79:	(bad)  
  40aa7a:	xchg   edi,eax
  40aa7b:	adc    DWORD PTR ds:0xd7cb9770,edx
  40aa81:	inc    esi
  40aa82:	je     0x40aabe
  40aa84:	hlt    
  40aa85:	(bad)  
  40aa86:	xchg   al,ah
  40aa88:	mov    bl,0x4
  40aa8a:	sub    ecx,DWORD PTR [ecx-0xc2a4e12]
  40aa90:	repz mov edx,0xd6cc1e7e
  40aa96:	in     al,0x81
  40aa98:	mov    al,0x63
  40aa9a:	xchg   esp,eax
  40aa9b:	add    ch,bh
  40aa9d:	cmp    bl,cl
  40aa9f:	pop    ds
  40aaa0:	out    0x45,al
  40aaa2:	xchg   ebx,eax
  40aaa3:	jno    0x40aaab
  40aaa5:	xor    esi,ebp
  40aaa7:	leave  
  40aaa8:	mov    dl,0x5e
  40aaaa:	lock pop esi
  40aaac:	xchg   ebp,eax
  40aaad:	inc    ebp
  40aaae:	adc    ch,BYTE PTR [edi+ebp*2-0x7d5d8a78]
  40aab5:	mov    bh,0xfe
  40aab7:	pop    ebp
  40aab8:	pop    ss
  40aab9:	jo     0x40ab24
  40aabb:	sub    al,0x19
  40aabd:	bound  ebp,QWORD PTR [eax+edx*2+0x1cee49a1]
  40aac4:	mov    dh,0xca
  40aac6:	add    ebp,DWORD PTR [edi]
  40aac8:	push   cs
  40aac9:	lea    eax,[edi]
  40aacb:	div    BYTE PTR [eax+esi*4]
  40aace:	jge    0x40aa85
  40aad0:	inc    edi
  40aad1:	mov    edx,?
  40aad3:	mov    DWORD PTR [ecx+0x7e],ebp
  40aad6:	jne    0x40ab27
  40aad8:	xor    al,0x75
  40aada:	arpl   WORD PTR [edx+0x79e521ac],ax
  40aae0:	pop    esp
  40aae1:	repz sbb DWORD PTR [ecx+0x5f],0xb3d6223c
  40aae9:	sbb    ebx,0x8173a775
  40aaef:	clc    
  40aaf0:	sub    al,0xec
  40aaf2:	aas    
  40aaf3:	lods   al,BYTE PTR ds:[esi]
  40aaf4:	mov    ds:0xc8f3764d,eax
  40aaf9:	mov    al,0x58
  40aafb:	pop    es
  40aafc:	retf   0xc88
  40aaff:	sbb    BYTE PTR gs:[edi*4+0x40451f97],0x63
  40ab08:	arpl   WORD PTR [ebp-0x63],si
  40ab0b:	std    
  40ab0c:	pop    ss
  40ab0d:	mov    cl,0x64
  40ab0f:	mov    BYTE PTR [ecx+edx*2-0x42c0d36e],bl
  40ab16:	jb     0x40aaf2
  40ab18:	adc    al,0x3f
  40ab1a:	xchg   BYTE PTR [ebp-0x1329cd66],ah
  40ab20:	ds mov dl,0xd9
  40ab23:	inc    edx
  40ab24:	sub    eax,0x64b6833b
  40ab29:	ret    
  40ab2a:	sahf   
  40ab2b:	pop    ebx
  40ab2c:	aam    0x84
  40ab2e:	lea    esp,[edx-0x39]
  40ab31:	mov    BYTE PTR [esi+edi*8-0xc],al
  40ab35:	outs   dx,DWORD PTR ds:[esi]
  40ab36:	dec    esi
  40ab37:	sub    eax,0x75dc34d0
  40ab3c:	adc    BYTE PTR [edi-0x5b480cc7],dh
  40ab42:	jne    0x40ab7f
  40ab44:	sub    ch,al
  40ab46:	xor    dl,dl
  40ab48:	cs iret 
  40ab4a:	(bad)  
  40ab4b:	push   ds
  40ab4c:	adc    al,0x48
  40ab4e:	push   es
  40ab4f:	jecxz  0x40ab63
  40ab51:	and    ah,dh
  40ab53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab54:	adc    eax,0xefb2bf43
  40ab59:	xor    edx,DWORD PTR [ebx-0x58dc6947]
  40ab5f:	push   cs
  40ab60:	xchg   esp,eax
  40ab61:	in     eax,dx
  40ab62:	pop    ebx
  40ab63:	pusha  
  40ab64:	out    dx,eax
  40ab65:	adc    ecx,DWORD PTR [edi+ecx*8-0x76539aee]
  40ab6c:	imul   edi,DWORD PTR [edx-0x50bc8ef],0x4c
  40ab73:	cmp    ch,BYTE PTR ss:[ecx]
  40ab76:	mov    ebx,?
  40ab78:	dec    esp
  40ab79:	sbb    al,0x17
  40ab7b:	aas    
  40ab7c:	mov    edi,0xf8cf34aa
  40ab81:	lock cmp al,0x26
  40ab84:	aad    0x4a
  40ab86:	add    DWORD PTR [ebx],0x22
  40ab89:	popf   
  40ab8a:	add    dh,ch
  40ab8c:	xor    eax,0xfae06027
  40ab91:	and    DWORD PTR [edx-0x7e],ebp
  40ab94:	shl    BYTE PTR [edx-0x61a093a8],cl
  40ab9a:	addr16 (bad) 
  40ab9c:	retf   
  40ab9d:	add    eax,0x3c1c48db
  40aba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aba3:	jbe    0x40abbc
  40aba5:	aam    0xcd
  40aba7:	push   ds
  40aba8:	jmp    0x881752e1
  40abad:	sbb    edx,DWORD PTR [edx]
  40abaf:	or     eax,0xe81a08a8
  40abb4:	jg     0x40ab37
  40abb6:	sar    DWORD PTR [ebx-0x6f86741b],0x8c
  40abbd:	mov    DWORD PTR [ebx-0x40],eax
  40abc0:	mov    eax,DWORD PTR gs:[edx]
  40abc3:	inc    esp
  40abc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abc5:	lods   al,BYTE PTR ds:[esi]
  40abc6:	mov    ah,dh
  40abc8:	lods   eax,DWORD PTR ds:[esi]
  40abc9:	cmc    
  40abca:	dec    esi
  40abcb:	and    cl,BYTE PTR [ebp*8-0x76cdfe8c]
  40abd2:	mov    edi,0x264d9946
  40abd7:	and    DWORD PTR [ebx],ebx
  40abd9:	scas   al,BYTE PTR es:[edi]
  40abda:	mov    al,0x95
  40abdc:	les    esi,FWORD PTR [edi]
  40abde:	xor    eax,0x99bbd867
  40abe3:	push   ss
  40abe4:	loop   0x40ac01
  40abe6:	test   edi,0xf70f1bf9
  40abec:	jne    0x40aba0
  40abee:	and    eax,0x5727ce6
  40abf3:	aam    0x63
  40abf5:	pop    ebp
  40abf6:	adc    al,0xe4
  40abf8:	push   ss
  40abf9:	iret   
  40abfa:	inc    edx
  40abfb:	add    esi,DWORD PTR [eax*8+0x2b2e6fad]
  40ac02:	ror    DWORD PTR [edi-0x1d],0x97
  40ac06:	add    edi,0xe5e8ba36
  40ac0c:	cmp    al,BYTE PTR [edx]
  40ac0e:	lock or ebx,esp
  40ac11:	aam    0x94
  40ac13:	iret   
  40ac14:	popa   
  40ac15:	aad    0x7c
  40ac17:	mov    ds:0xbf7c9c53,eax
  40ac1c:	stc    
  40ac1d:	cwde   
  40ac1e:	xchg   edx,eax
  40ac1f:	push   ecx
  40ac20:	pop    ss
  40ac21:	dec    edx
  40ac22:	aaa    
  40ac23:	pop    edi
  40ac24:	ins    DWORD PTR es:[edi],dx
  40ac25:	pushf  
  40ac26:	and    eax,0xd65b920f
  40ac2b:	aaa    
  40ac2c:	mov    bh,0x60
  40ac2e:	cmc    
  40ac2f:	aad    0x58
  40ac31:	mov    al,ds:0xd1849a44
  40ac36:	add    al,0x69
  40ac38:	dec    edx
  40ac39:	fucom  st(6)
  40ac3b:	cmp    ebp,ecx
  40ac3d:	adc    ecx,eax
  40ac3f:	loope  0x40ac1f
  40ac41:	xchg   BYTE PTR [edx+edi*2+0x2d453a2f],bh
  40ac48:	aad    0xaa
  40ac4a:	xchg   esp,eax
  40ac4b:	lds    edx,FWORD PTR [ebx]
  40ac4d:	inc    eax
  40ac4e:	daa    
  40ac4f:	lods   eax,DWORD PTR ds:[esi]
  40ac50:	push   0x4a
  40ac52:	test   eax,0x2cc0276a
  40ac57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac58:	adc    ecx,ebx
  40ac5a:	mov    ebp,0xe0caea2a
  40ac5f:	retf   0xc801
  40ac62:	leave  
  40ac63:	loop   0x40ac8e
  40ac65:	sub    dl,BYTE PTR [edi+0x74]
  40ac68:	xchg   ebx,eax
  40ac69:	mov    esi,0x70c30221
  40ac6e:	test   BYTE PTR [esi-0x2610c103],dh
  40ac74:	mov    DWORD PTR [edi+0x57],eax
  40ac77:	xchg   ecx,eax
  40ac78:	xchg   edi,eax
  40ac79:	sbb    eax,0xbf286419
  40ac7e:	mov    al,0xa0
  40ac80:	and    BYTE PTR [ebp+edi*2+0x71ec179],0xdc
  40ac88:	imul   ebp,DWORD PTR [esi+0xd],0x83a7aba
  40ac8f:	or     DWORD PTR [esi],edi
  40ac91:	into   
  40ac92:	adc    ch,BYTE PTR [ebx]
  40ac94:	mov    esp,0x1cf5f0dd
  40ac99:	ret    0xc5d1
  40ac9c:	scas   al,BYTE PTR es:[edi]
  40ac9d:	jle    0x40ad19
  40ac9f:	jo     0x40ad19
  40aca1:	xchg   ecx,eax
  40aca2:	and    edx,DWORD PTR ds:[esp+edx*8-0x36]
  40aca7:	cmc    
  40aca8:	inc    esi
  40aca9:	ss mov eax,0x3b63ae1d
  40acaf:	cli    
  40acb0:	mov    ?,WORD PTR [ebp+0x43]
  40acb3:	inc    edx
  40acb4:	sub    eax,0xd887b780
  40acb9:	xchg   ecx,eax
  40acba:	xchg   esi,eax
  40acbb:	fld    QWORD PTR ds:0x78ec444
  40acc1:	repz inc ebx
  40acc3:	mov    edx,0xd44fe1d3
  40acc8:	aas    
  40acc9:	and    eax,0x4d3309e
  40acce:	push   ebp
  40accf:	mov    dh,0x3b
  40acd1:	cli    
  40acd2:	stc    
  40acd3:	jne    0x40ad4b
  40acd5:	(bad)
  40acd8:	aam    0xe3
  40acda:	xor    eax,0x6403722e
  40acdf:	ja     0x40acd4
  40ace1:	pop    ss
  40ace2:	lea    ecx,ds:0x17d9f30b
  40ace8:	xchg   esp,eax
  40ace9:	sub    BYTE PTR [edx],ah
  40aceb:	pop    gs
  40aced:	sub    bh,BYTE PTR [edi-0x6]
  40acf0:	inc    edi
  40acf1:	mov    ecx,DWORD PTR [ebp+edx*2+0x75]
  40acf5:	mov    edi,DWORD PTR [ebx-0x5d9d80a]
  40acfb:	inc    ebx
  40acfc:	js     0x40acae
  40acfe:	or     al,0x65
  40ad00:	mov    esp,0xa0e452be
  40ad05:	mov    ch,0x48
  40ad07:	pop    edx
  40ad08:	icebp  
  40ad09:	out    dx,eax
  40ad0a:	jns    0x40ad0b
  40ad0c:	lock pop sp
  40ad0f:	int3   
  40ad10:	mov    esi,0xfb5f291f
  40ad15:	call   0xcec7:0xd8b520cd
  40ad1c:	or     eax,0x1dc54ba9
  40ad21:	in     eax,0x22
  40ad23:	xchg   esp,eax
  40ad24:	(bad)  
  40ad25:	ja     0x40acfc
  40ad27:	adc    al,bl
  40ad29:	push   ss
  40ad2a:	gs jecxz 0x40ad98
  40ad2d:	data16 xlat BYTE PTR ds:[ebx]
  40ad2f:	add    edi,DWORD PTR [eax]
  40ad31:	or     eax,0x9fb3cbb4
  40ad36:	imul   edi,DWORD PTR [ecx],0xf89231aa
  40ad3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad3d:	jae    0x40ad5f
  40ad3f:	lods   al,BYTE PTR ds:[esi]
  40ad40:	push   ds
  40ad41:	jmp    0x900eb8fb
  40ad46:	push   cs
  40ad47:	mov    bl,0xe4
  40ad49:	mov    BYTE PTR ds:0xa2ee565c,bl
  40ad4f:	shl    BYTE PTR [esp+edx*1],0x83
  40ad53:	pop    ds
  40ad54:	jb     0x40ad96
  40ad56:	out    0x8d,al
  40ad58:	sti    
  40ad59:	push   edi
  40ad5a:	imul   ecx,DWORD PTR [edx-0x5b],0x65f19308
  40ad61:	xchg   ecx,eax
  40ad62:	int    0x58
  40ad64:	jnp    0x40ad83
  40ad66:	and    ah,BYTE PTR [esi+0x79886677]
  40ad6c:	retf   0x892f
  40ad6f:	and    al,0x61
  40ad71:	pop    es
  40ad72:	inc    edi
  40ad73:	clc    
  40ad74:	pop    ebp
  40ad75:	sar    DWORD PTR [ecx+esi*4],1
  40ad78:	inc    edi
  40ad79:	js     0x40ad82
  40ad7b:	inc    edx
  40ad7c:	rol    ah,0x32
  40ad7f:	stc    
  40ad80:	dec    ecx
  40ad81:	cld    
  40ad82:	push   eax
  40ad83:	test   al,0x66
  40ad85:	jg     0x40ad47
  40ad87:	outs   dx,BYTE PTR ds:[esi]
  40ad88:	dec    ecx
  40ad89:	push   edi
  40ad8a:	aam    0x70
  40ad8c:	pop    ebx
  40ad8d:	jbe    0x40ad27
  40ad8f:	inc    edx
  40ad90:	jne    0x40ae0f
  40ad92:	jns    0x40ada2
  40ad94:	int3   
  40ad95:	pushf  
  40ad96:	loop   0x40ad2f
  40ad98:	and    eax,0xec458bba
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a3eb
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a3ef
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi+0x53d6cbc3]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x7c
  40aed6:	pop    edi
  40aed7:	add    ebx,DWORD PTR [ebx+eax*1]
  40aeda:	mov    dh,BYTE PTR [ebp+0x37f2a1e0]
  40aee0:	pop    ss
  40aee1:	pop    ss
  40aee2:	lds    ebp,FWORD PTR [eax]
  40aee4:	push   ss
  40aee5:	(bad)  
  40aee6:	ins    BYTE PTR es:[edi],dx
  40aee7:	jl     0x40ae9a
  40aee9:	inc    ebx
  40aeea:	jp     0x40aee6
  40aeec:	xor    bh,BYTE PTR gs:[edi+0x43]
  40aef0:	mov    esp,0x2085a1f4
  40aef5:	(bad)  [ebx]
  40aef7:	or     ebx,ecx
  40aef9:	imul   edi,DWORD PTR cs:0xbe0b8478,0xbdfad7be
  40af04:	sar    BYTE PTR [ebx+0x2a],cl
  40af07:	pop    edx
  40af08:	xchg   ecx,eax
  40af09:	pop    esi
  40af0a:	lahf   
  40af0b:	int    0x17
  40af0d:	pop    esi
  40af0e:	gs push ebx
  40af10:	pusha  
  40af11:	js     0x40af35
  40af13:	test   eax,0x83926810
  40af18:	pop    eax
  40af19:	(bad)  
  40af1a:	adc    ecx,DWORD PTR [edx]
  40af1c:	out    0xe3,al
  40af1e:	aaa    
  40af1f:	lock push eax
  40af21:	mov    ah,0xbd
  40af23:	jmp    0x23be:0xb1050287
  40af2a:	inc    edx
  40af2b:	xlat   BYTE PTR ds:[ebx]
  40af2c:	jle    0x40aed4
  40af2e:	inc    esi
  40af2f:	or     BYTE PTR [esi+eiz*1],cl
  40af32:	adc    ebx,edi
  40af34:	sbb    eax,0x365e5a94
  40af39:	faddp  st(4),st
  40af3b:	push   0x46
  40af3d:	mov    eax,0xcdae9bd1
  40af42:	jle    0x40af19
  40af44:	dec    ecx
  40af45:	mov    bl,0xb4
  40af47:	ins    BYTE PTR es:[edi],dx
  40af48:	xchg   edi,eax
  40af49:	inc    edx
  40af4a:	inc    ecx
  40af4b:	dec    ebx
  40af4c:	addr16 adc esp,edi
  40af4f:	rol    BYTE PTR [ebx-0x1e],1
  40af52:	inc    esp
  40af53:	add    BYTE PTR [ebx+0x74],al
  40af56:	jnp    0x40aeda
  40af58:	dec    ecx
  40af59:	mov    ds:0x52b26adb,eax
  40af5e:	jns    0x40af06
  40af60:	dec    edi
  40af61:	(bad)  
  40af62:	jg     0x40afcd
  40af64:	cmp    al,BYTE PTR [edi-0x4267d4f7]
  40af6a:	jb     0x40afbe
  40af6c:	sbb    esi,edi
  40af6e:	jns    0x40af5d
  40af70:	ret    0x3412
  40af73:	(bad)  
  40af74:	mov    edx,0xf54c4044
  40af79:	cmp    eax,0x13142a1f
  40af7e:	packuswb mm5,QWORD PTR [ebx+eiz*4]
  40af82:	int3   
  40af83:	xlat   BYTE PTR ds:[ebx]
  40af84:	call   0xd6cf129c
  40af89:	ins    BYTE PTR es:[edi],dx
  40af8a:	cld    
  40af8b:	push   ss
  40af8c:	cwde   
  40af8d:	ja     0x40afd3
  40af8f:	inc    eax
  40af90:	cld    
  40af91:	sbb    ecx,DWORD PTR [eax-0x79]
  40af94:	das    
  40af95:	xchg   ebp,eax
  40af96:	mov    ebp,DWORD PTR [edx+0x5c1544bf]
  40af9c:	pop    ss
  40af9d:	popf   
  40af9e:	mov    ah,0x12
  40afa0:	int3   
  40afa1:	retf   0xe56c
  40afa4:	dec    edi
  40afa5:	pop    ebp
  40afa6:	xchg   ebp,eax
  40afa7:	xor    BYTE PTR [eax-0x9],cl
  40afaa:	out    0x10,eax
  40afac:	pushf  
  40afad:	mov    edx,0x151e7b23
  40afb2:	cmp    eax,0x7fdca8ad
  40afb7:	inc    edi
  40afb8:	pop    ebx
  40afb9:	das    
  40afba:	jmp    0x9006a2d9
  40afbf:	inc    esp
  40afc0:	inc    ecx
  40afc1:	and    eax,0x9a7ad906
  40afc6:	add    ax,bx
  40afc9:	cmp    DWORD PTR [ebx+0x6545209c],esi
  40afcf:	fmul   DWORD PTR [edi]
  40afd1:	clc    
  40afd2:	and    eax,DWORD PTR [ecx+ebp*4+0x32]
  40afd6:	into   
  40afd7:	mov    bl,BYTE PTR [ebx]
  40afd9:	imul   edi,DWORD PTR [ebx*4+0x48bf7d6],0xa872fd08
  40afe4:	dec    esi
  40afe5:	xchg   ecx,eax
  40afe6:	scas   al,BYTE PTR es:[edi]
  40afe7:	push   ecx
  40afe8:	fstp   TBYTE PTR [esi-0x12]
  40afeb:	cmp    eax,DWORD PTR [edi-0x5]
  40afee:	sbb    BYTE PTR [edx+0x509dd25c],bl
  40aff4:	pop    es
  40aff5:	in     eax,dx
  40aff6:	mov    DWORD PTR [eax],edx
  40aff8:	mov    ah,0xaf
  40affa:	cmp    ebp,0xe98aede6
  40b000:	inc    ecx
  40b001:	in     eax,0xf0
  40b003:	je     0x40b01a
  40b005:	cmp    BYTE PTR [ebx],ch
  40b007:	xchg   DWORD PTR fs:[ecx+0x6cd6401c],esp
  40b00e:	jnp    0x40b015
  40b010:	ret    
  40b011:	fwait
  40b012:	sar    BYTE PTR [ebx],0x41
  40b015:	rcr    al,0x6f
  40b018:	xor    eax,0x6d045624
  40b01d:	xor    al,BYTE PTR [ebx+edi*4-0x1a]
  40b021:	in     eax,dx
  40b022:	and    al,0xe
  40b024:	xor    esp,DWORD PTR [ebx+0x10]
  40b027:	scas   eax,DWORD PTR es:[edi]
  40b028:	xlat   BYTE PTR ds:[ebx]
  40b029:	out    0xd2,al
  40b02b:	aam    0xc2
  40b02d:	test   al,0x41
  40b02f:	sahf   
  40b030:	fwait
  40b031:	dec    eax
  40b032:	dec    ecx
  40b033:	cs adc al,bh
  40b036:	jle    0x40b012
  40b038:	pop    esp
  40b039:	or     ch,BYTE PTR [ebx]
  40b03b:	add    al,0xf2
  40b03d:	mov    dh,0xdf
  40b03f:	push   ebx
  40b040:	(bad)  
  40b041:	arpl   cx,cx
  40b043:	or     BYTE PTR [ebp+0x8],bl
  40b046:	es retf 0x5f07
  40b04a:	mov    edi,0xeb6d64c2
  40b04f:	sub    edx,ecx
  40b051:	sbb    bl,BYTE PTR [eax]
  40b053:	outs   dx,DWORD PTR ds:[esi]
  40b054:	sbb    al,0x9b
  40b056:	ss icebp 
  40b058:	pop    edx
  40b059:	sub    DWORD PTR [edi-0x44],esi
  40b05c:	mov    DWORD PTR ds:0x87387474,ebp
  40b062:	sub    ecx,ebp
  40b064:	push   ss
  40b065:	push   0xffffffda
  40b067:	shl    DWORD PTR [ebp+0x7b22251],0xab
  40b06e:	lock add edx,DWORD PTR [edx+0x1e17726e]
  40b075:	add    eax,0x26308516
  40b07a:	cmp    al,0xff
  40b07c:	mov    esp,DWORD PTR [edi]
  40b07e:	pop    ecx
  40b07f:	adc    dl,BYTE PTR [edx+0x5a]
  40b082:	cmp    BYTE PTR [edx-0x313f4196],bh
  40b088:	repnz dec ebp
  40b08a:	jle    0x40b0a5
  40b08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b08d:	fstp   QWORD PTR [esi-0x68]
  40b090:	push   0xc4074e4c
  40b095:	int3   
  40b096:	test   BYTE PTR [ebx-0x42],ah
  40b099:	mov    bh,0x33
  40b09b:	inc    esp
  40b09c:	call   0xa5824ab7
  40b0a1:	sbb    BYTE PTR [edx+0x6],cl
  40b0a4:	bnd jge 0x40b100
  40b0a7:	or     ch,BYTE PTR [eax-0x38]
  40b0aa:	mov    dh,0x9c
  40b0ac:	pusha  
  40b0ad:	lods   eax,DWORD PTR ds:[esi]
  40b0ae:	retf   
  40b0af:	out    0x97,al
  40b0b1:	jbe    0x40b0ac
  40b0b3:	adc    DWORD PTR [ecx],edx
  40b0b5:	call   0xf6e1386a
  40b0ba:	enter  0xeffc,0x35
  40b0be:	hlt    
  40b0bf:	mov    eax,ds:0x1b3d5158
  40b0c4:	pushf  
  40b0c5:	cmc    
  40b0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0c7:	nop
  40b0c8:	push   ebp
  40b0c9:	(bad)  
  40b0cb:	cmp    edx,ebx
  40b0cd:	dec    edi
  40b0ce:	add    eax,DWORD PTR [esi+0x2da7a1a2]
  40b0d4:	sbb    dl,al
  40b0d6:	test   BYTE PTR [edx-0x31c6f406],ah
  40b0dc:	or     eax,0xbb47cec7
  40b0e1:	pop    ebx
  40b0e2:	clc    
  40b0e3:	cmp    BYTE PTR [esi],al
  40b0e5:	xor    bh,0xec
  40b0e8:	dec    esp
  40b0e9:	aas    
  40b0ea:	inc    edx
  40b0eb:	sar    dl,0x56
  40b0ee:	outs   dx,BYTE PTR ss:[esi]
  40b0f0:	fwait
  40b0f1:	call   0x78ff:0x5115684d
  40b0f8:	mov    esp,0xafff68ac
  40b0fd:	jb     0x40b096
  40b0ff:	sub    DWORD PTR [ebx-0x55],esp
  40b102:	adc    DWORD PTR [esi-0x74],ebx
  40b105:	dec    eax
  40b106:	xor    DWORD PTR [esi+0x7a159f97],edi
  40b10c:	mov    dl,0x1
  40b10e:	retf   0x2836
  40b111:	inc    ebx
  40b112:	pop    ss
  40b113:	cmp    ecx,esi
  40b115:	mov    dh,0x7b
  40b117:	pshufw mm2,QWORD PTR [ebp-0x52],0x67
  40b11c:	in     al,0x2b
  40b11e:	dec    ecx
  40b11f:	fnstenv [ecx-0x77]
  40b122:	inc    edi
  40b123:	int3   
  40b124:	push   0xfffffff7
  40b126:	and    ah,BYTE PTR [ecx+0x379cf76e]
  40b12c:	push   edx
  40b12d:	jno    0x40b166
  40b12f:	cdq    
  40b130:	pushw  0x1875
  40b134:	dec    esp
  40b135:	mov    edx,DWORD PTR [edx+edi*1]
  40b138:	cmp    ch,BYTE PTR [edx+0x6]
  40b13b:	dec    esp
  40b13c:	cmp    DWORD PTR [esi],0x48abc1a8
  40b142:	pop    edi
  40b143:	push   ds
  40b144:	xchg   esi,eax
  40b145:	mov    al,0xfe
  40b147:	je     0x40b0d9
  40b149:	lahf   
  40b14a:	or     al,0x8
  40b14c:	xor    eax,0xa7c76dc
  40b151:	(bad)  
  40b152:	jge    0x40b1b3
  40b154:	or     al,0x88
  40b156:	mov    edi,0xd4ae3068
  40b15b:	(bad)  
  40b15c:	js     0x40b157
  40b15e:	jmp    0x40b197
  40b160:	fmul   DWORD PTR ds:0x39f262e5
  40b166:	pop    ds
  40b167:	outs   dx,BYTE PTR ds:[esi]
  40b168:	xor    DWORD PTR [edi],0x6fe357ea
  40b16e:	sbb    bl,BYTE PTR [edx-0x58]
  40b171:	shr    BYTE PTR [eax+0x64bc9e80],1
  40b177:	imul   edx,esp,0x1b7a1d58
  40b17d:	aas    
  40b17e:	jnp    0x40b1b9
  40b180:	repz sahf 
  40b182:	jecxz  0x40b1ea
  40b184:	adc    DWORD PTR [ecx+ebx*1],edx
  40b187:	mov    esp,0xdd2dcc2d
  40b18c:	das    
  40b18d:	fdiv   DWORD PTR [edx]
  40b18f:	sahf   
  40b190:	test   BYTE PTR [ecx+0x525325ab],al
  40b196:	jns    0x40b1af
  40b198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b199:	test   BYTE PTR [ecx+0x3],0xf7
  40b19d:	xchg   esp,eax
  40b19e:	dec    eax
  40b19f:	out    0x36,al
  40b1a1:	stos   DWORD PTR es:[edi],eax
  40b1a2:	icebp  
  40b1a3:	and    esi,esi
  40b1a5:	xlat   BYTE PTR ds:[ebx]
  40b1a6:	cmp    al,0xad
  40b1a8:	pop    eax
  40b1a9:	cmp    DWORD PTR [ebp+0x6a],eax
  40b1ac:	xchg   ebp,eax
  40b1ad:	push   esi
  40b1ae:	(bad)  [edx-0x782dacf]
  40b1b4:	or     DWORD PTR [ebx],ebp
  40b1b6:	and    al,0xc3
  40b1b8:	jno    0x40b1ac
  40b1ba:	test   DWORD PTR [edi],ebx
  40b1bc:	add    eax,DWORD PTR [edx+0x624666ed]
  40b1c2:	xchg   ecx,eax
  40b1c3:	arpl   bx,cx
  40b1c5:	add    dl,bh
  40b1c7:	sub    eax,ebp
  40b1c9:	sbb    al,BYTE PTR [edi]
  40b1cb:	les    edi,FWORD PTR [edi]
  40b1cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ce:	lods   al,BYTE PTR ds:[esi]
  40b1cf:	push   ds
  40b1d0:	xchg   edx,eax
  40b1d1:	mov    ecx,0x436ae41c
  40b1d6:	pop    ebp
  40b1d7:	in     al,0xbe
  40b1d9:	adc    bl,BYTE PTR [edx+ebx*2]
  40b1dc:	stos   DWORD PTR es:[edi],eax
  40b1dd:	push   edi
  40b1de:	rol    BYTE PTR [esi],0x93
  40b1e1:	iret   
  40b1e2:	icebp  
  40b1e3:	setns  cl
  40b1e6:	lock push ss
  40b1e8:	leave  
  40b1e9:	xchg   ebx,eax
  40b1ea:	icebp  
  40b1eb:	sbb    edi,DWORD PTR [ebp-0x47]
  40b1ee:	add    ch,BYTE PTR [eax-0x3b]
  40b1f1:	mov    ch,0xc2
  40b1f3:	les    eax,FWORD PTR [ebx+eax*8]
  40b1f6:	leave  
  40b1f7:	fadd   DWORD PTR [ebx+0x6b0f936f]
  40b1fd:	sbb    eax,0x9cd76683
  40b202:	das    
  40b203:	push   edi
  40b204:	and    DWORD PTR ds:0x12a31922,esp
  40b20a:	or     DWORD PTR [edx+0x21],edi
  40b20d:	cwde   
  40b20e:	popa   
  40b20f:	lds    esp,FWORD PTR [ecx-0x48]
  40b212:	cli    
  40b213:	sbb    dh,bl
  40b215:	mov    ebp,gs
  40b217:	lds    edi,FWORD PTR [eax+ecx*4-0x11]
  40b21b:	mov    ebp,0x27a79f89
  40b220:	shr    DWORD PTR [eax],1
  40b222:	inc    ebx
  40b223:	ficomp DWORD PTR [eax-0x80]
  40b226:	std    
  40b227:	stos   BYTE PTR es:[edi],al
  40b228:	lea    esi,[edx]
  40b22a:	and    al,0xbe
  40b22c:	dec    eax
  40b22d:	je     0x40b26e
  40b22f:	push   ebp
  40b230:	dec    esp
  40b231:	push   ebp
  40b232:	cli    
  40b233:	aaa    
  40b234:	mov    eax,0xd6d1d4a8
  40b239:	xor    cl,dh
  40b23b:	(bad)
  40b23e:	push   0xfffffff6
  40b240:	cmp    al,0xd3
  40b242:	sbb    al,0xac
  40b244:	dec    BYTE PTR [edx]
  40b246:	inc    ebx
  40b247:	sbb    al,0x50
  40b249:	retf   0xfe53
  40b24c:	loop   0x40b1f2
  40b24e:	imul   esp,DWORD PTR [esi+0x356de73c],0x7e
  40b255:	xor    eax,0x62b3eec4
  40b25a:	pop    edi
  40b25b:	retf   
  40b25c:	mov    es,eax
  40b25e:	cmp    ah,BYTE PTR [esi-0x1ea80ec5]
  40b264:	jecxz  0x40b275
  40b266:	dec    ecx
  40b267:	inc    edx
  40b268:	xchg   esp,eax
  40b269:	ffree  st(6)
  40b26b:	xor    al,0xe2
  40b26d:	or     ecx,esi
  40b26f:	xchg   ebx,eax
  40b270:	push   ecx
  40b271:	out    0x14,al
  40b273:	push   ebx
  40b274:	loop   0x40b2f2
  40b276:	inc    esp
  40b277:	enter  0xda9,0x2b
  40b27b:	push   ebx
  40b27c:	sub    al,0x5e
  40b27e:	fmul   DWORD PTR [edi-0x71]
  40b281:	(bad)  
  40b282:	aad    0x32
  40b284:	and    edx,ebp
  40b286:	push   esi
  40b287:	sbb    DWORD PTR [ebp-0x50],eax
  40b28a:	jge    0x40b2c0
  40b28c:	xchg   DWORD PTR [edx+0x71],eax
  40b28f:	sbb    ch,BYTE PTR [edi]
  40b291:	mov    dl,0xa
  40b293:	fst    QWORD PTR [ebx-0x6b]
  40b296:	xor    al,0x90
  40b298:	popa   
  40b299:	lahf   
  40b29a:	sub    bh,al
  40b29c:	bound  eax,QWORD PTR [eax+0x7d52d42f]
  40b2a2:	cmp    edx,edx
  40b2a4:	call   0xc0f3:0x67d72def
  40b2ab:	lahf   
  40b2ac:	scas   eax,DWORD PTR es:[edi]
  40b2ad:	or     edi,ebp
  40b2af:	add    eax,0x69637643
  40b2b4:	mov    esi,0xe7317efc
  40b2b9:	and    BYTE PTR [esi-0x67],0x45
  40b2bd:	xchg   ecx,eax
  40b2be:	ins    BYTE PTR es:[edi],dx
  40b2bf:	div    ah
  40b2c1:	hlt    
  40b2c2:	sub    eax,0x9aeb0034
  40b2c7:	test   al,0x88
  40b2c9:	lahf   
  40b2ca:	arpl   di,bp
  40b2cc:	(bad)  
  40b2ce:	fsubr  DWORD PTR [esi-0x7822dd6b]
  40b2d4:	push   0xffffffcf
  40b2d6:	pop    esi
  40b2d7:	mov    eax,0x51422334
  40b2dc:	loopne 0x40b343
  40b2de:	push   0x50
  40b2e0:	mov    ?,WORD PTR [esi]
  40b2e2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e4:	ss dec ebp
  40b2e6:	jbe    0x40b33d
  40b2e8:	mov    cl,0x55
  40b2ea:	mov    edi,0xcef33f23
  40b2ef:	ret    
  40b2f0:	pop    edx
  40b2f1:	push   ss
  40b2f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2f3:	dec    esi
  40b2f4:	iret   
  40b2f5:	push   cs
  40b2f6:	mov    ecx,0xba83c3c8
  40b2fb:	push   edx
  40b2fc:	(bad)  
  40b2fe:	fistp  WORD PTR [eax]
  40b300:	adc    cl,BYTE PTR [edx]
  40b302:	jnp    0x40b28f
  40b304:	mov    DWORD PTR [edi],edi
  40b306:	jnp    0x40b2cb
  40b308:	or     al,0x63
  40b30a:	lahf   
  40b30b:	sahf   
  40b30c:	or     DWORD PTR [edx-0x781f0d84],esi
  40b312:	and    ch,dh
  40b314:	or     bl,BYTE PTR [edx]
  40b316:	jmp    0x5b79416a
  40b31b:	mov    ebx,esi
  40b31d:	jnp    0x40b31a
  40b31f:	stos   DWORD PTR es:[edi],eax
  40b320:	add    al,0x1a
  40b322:	sub    al,0x79
  40b324:	stos   DWORD PTR es:[edi],eax
  40b325:	or     ebx,DWORD PTR [edi+0x5e4dae45]
  40b32b:	ret    
  40b32c:	(bad)  
  40b32d:	bound  ecx,QWORD PTR [ebx-0x7875014d]
  40b333:	or     BYTE PTR [edx+edx*2],ah
  40b336:	cmp    ecx,DWORD PTR [esp+edx*4]
  40b339:	cmp    DWORD PTR ds:0xc7fe9e54,ebx
  40b33f:	add    al,dl
  40b341:	mov    esi,0xdc7179e1
  40b346:	mov    ebx,esi
  40b348:	dec    edx
  40b349:	out    0xed,eax
  40b34b:	or     ah,BYTE PTR [edx]
  40b34d:	ret    
  40b34e:	dec    esi
  40b34f:	clc    
  40b350:	in     eax,dx
  40b351:	data16 fstp DWORD PTR [esi]
  40b354:	add    al,0xff
  40b356:	call   0xf809:0xeee8ad53
  40b35d:	mov    al,ds:0x57265af2
  40b362:	mov    edi,0xa46f1864
  40b367:	jmp    0x40b3bb
  40b369:	dec    eax
  40b36a:	xchg   esi,eax
  40b36b:	sbb    al,0x81
  40b36d:	sbb    BYTE PTR [ebx+ecx*2-0x70],dh
  40b371:	aaa    
  40b372:	sahf   
  40b373:	outs   dx,BYTE PTR ds:[esi]
  40b374:	into   
  40b375:	mov    esp,0xac059061
  40b37a:	jp     0x40b397
  40b37c:	pop    eax
  40b37d:	je     0x40b35c
  40b37f:	leave  
  40b380:	sub    DWORD PTR [ebx-0x409498b1],0x33f18d6c
  40b38a:	xchg   esi,eax
  40b38b:	imul   esp,DWORD PTR [edi+0x6c],0x5afbfa80
  40b392:	stos   BYTE PTR es:[edi],al
  40b393:	pop    es
  40b394:	addr16 out 0xeb,al
  40b397:	xchg   DWORD PTR [eax+0x31985e2c],ebx
  40b39d:	jecxz  0x40b38d
  40b39f:	in     eax,0xdc
  40b3a1:	mov    ds:0x4a24bbf6,eax
  40b3a6:	out    0x5b,eax
  40b3a8:	sahf   
  40b3a9:	std    
  40b3aa:	jecxz  0x40b338
  40b3ac:	xor    esp,eax
  40b3ae:	add    eax,0xe6064d3d
  40b3b3:	xchg   ecx,eax
  40b3b4:	hlt    
  40b3b5:	jmp    0x4e54:0xd0ad945f
  40b3bc:	scas   al,BYTE PTR es:[edi]
  40b3bd:	cwde   
  40b3be:	and    ecx,DWORD PTR [ecx]
  40b3c0:	or     DWORD PTR [ecx+0x16],ecx
  40b3c3:	lock xchg esi,eax
  40b3c5:	xor    al,0x6b
  40b3c7:	repz and bh,BYTE PTR [edx+0x48]
  40b3cb:	loop   0x40b439
  40b3cd:	jecxz  0x40b41c
  40b3cf:	in     eax,dx
  40b3d0:	mov    dl,0x31
  40b3d2:	mov    bl,0xc1
  40b3d4:	mov    ebp,DWORD PTR [edi+0x5b192048]
  40b3da:	push   esi
  40b3db:	cmovns ecx,edx
  40b3de:	fisttp QWORD PTR [ecx+0x5]
  40b3e1:	sub    eax,0xf5ab6e56
  40b3e6:	mov    ebp,0xd2268962
  40b3eb:	pop    eax
  40b3ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ed:	mov    ch,0x5e
  40b3ef:	or     eax,ecx
  40b3f1:	push   eax
  40b3f3:	adc    bl,BYTE PTR [ebp-0x5cc95a54]
  40b3f9:	out    dx,eax
  40b3fa:	repnz loopne 0x40b41d
  40b3fd:	cmp    dl,BYTE PTR [edx-0x34fceccf]
  40b403:	sbb    DWORD PTR [eax-0x452e10bd],0x8
  40b40a:	cmp    eax,0x669c909d
  40b40f:	mov    eax,ds:0x2224c9c6
  40b414:	dec    edx
  40b415:	cmp    BYTE PTR [edx+0x435dd89d],0xad
  40b41c:	out    dx,al
  40b41d:	lahf   
  40b41e:	fisttp WORD PTR [edi+0x71d8bbb]
  40b424:	rcl    BYTE PTR [ebx],0x5
  40b427:	jg     0x40b3b3
  40b429:	cmp    DWORD PTR [esi-0x302043e3],ebp
  40b42f:	fcmovu st,st(6)
  40b431:	fld    DWORD PTR [esi-0x55d81f0b]
  40b437:	fs enter 0x9b61,0xf1
  40b43c:	sub    al,0x26
  40b43e:	sub    al,0x4c
  40b440:	lahf   
  40b441:	sahf   
  40b442:	popa   
  40b443:	cli    
  40b444:	outs   dx,DWORD PTR ds:[esi]
  40b445:	push   ss
  40b446:	in     al,0x3
  40b448:	mul    esp
  40b44a:	scas   al,BYTE PTR es:[edi]
  40b44b:	sbb    cl,BYTE PTR [edi-0x76]
  40b44e:	test   BYTE PTR [esi+0x59],0xd2
  40b452:	hlt    
  40b453:	push   0x92d70218
  40b458:	mov    eax,0x2c980955
  40b45d:	jo     0x40b461
  40b45f:	into   
  40b460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b461:	mov    al,ds:0xfc5b99b2
  40b466:	mov    bl,0xfb
  40b468:	in     al,dx
  40b469:	ins    DWORD PTR es:[edi],dx
  40b46a:	cli    
  40b46b:	stc    
  40b46c:	xchg   edi,eax
  40b46d:	hlt    
  40b46e:	sahf   
  40b46f:	inc    edi
  40b470:	pop    ecx
  40b471:	pop    ecx
  40b472:	dec    edi
  40b473:	inc    esi
  40b474:	jp     0x40b4c9
  40b476:	(bad)  
  40b477:	popa   
  40b478:	adc    dl,BYTE PTR [eax+ebp*1+0x77]
  40b47c:	xor    DWORD PTR [ecx-0x1d77841b],ecx
  40b482:	xchg   ebx,eax
  40b483:	mov    ah,0x4b
  40b485:	inc    eax
  40b486:	imul   esp,DWORD PTR [edi+0x4],0xffffffe4
  40b48a:	(bad)  
  40b48b:	mov    ecx,0x4555daef
  40b490:	repz inc ebp
  40b492:	jae    0x40b46a
  40b494:	hlt    
  40b495:	cmp    BYTE PTR [ebx+0x3dc9fdb],dh
  40b49b:	xchg   BYTE PTR [edx-0x5f6b0c07],ch
  40b4a1:	daa    
  40b4a2:	(bad)  
  40b4a4:	lahf   
  40b4a5:	pop    edx
  40b4a6:	loopne 0x40b4b5
  40b4a8:	les    esp,FWORD PTR [ecx+edx*2]
  40b4ab:	sub    ecx,edi
  40b4ad:	pop    ds
  40b4ae:	retf   
  40b4af:	pop    ds
  40b4b0:	add    edi,0x8236ac52
  40b4b6:	push   ss
  40b4b7:	push   ds
  40b4b8:	mov    esp,DWORD PTR [edi-0x765fd8a6]
  40b4be:	dec    ebx
  40b4bf:	retf   0x29b5
  40b4c2:	add    BYTE PTR [ebx-0x6a102a2f],bl
  40b4c8:	dec    eax
  40b4c9:	xchg   esi,eax
  40b4ca:	scas   al,BYTE PTR es:[edi]
  40b4cb:	push   ebp
  40b4cc:	pop    edi
  40b4cd:	lock stos BYTE PTR es:[edi],al
  40b4cf:	jbe    0x40b4cb
  40b4d1:	pop    eax
  40b4d2:	dec    esi
  40b4d3:	xchg   ebx,eax
  40b4d4:	pop    eax
  40b4d5:	mov    dl,0x4f
  40b4d7:	rcl    DWORD PTR [ebp-0x52],1
  40b4da:	jg     0x40b559
  40b4dc:	push   ds
  40b4dd:	cmp    eax,0xe2c40bfc
  40b4e2:	and    al,0x4e
  40b4e4:	xchg   ebx,eax
  40b4e5:	int    0x13
  40b4e7:	mov    esi,0x64b3cffe
  40b4ec:	shl    DWORD PTR [edx+eax*4],cl
  40b4ef:	scas   eax,DWORD PTR es:[edi]
  40b4f0:	aam    0x3b
  40b4f2:	mov    eax,DWORD PTR [esi+0xa]
  40b4f5:	jae    0x40b576
  40b4f7:	jnp    0x40b56d
  40b4f9:	mov    ds:0x73965a01,al
  40b4fe:	popa   
  40b4ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b501:	cwde   
  40b502:	xor    ebx,DWORD PTR [esi]
  40b504:	sub    esi,DWORD PTR [edx+0x63526423]
  40b50a:	stos   DWORD PTR es:[edi],eax
  40b50b:	fld    TBYTE PTR [edx+0x48]
  40b50e:	hlt    
  40b50f:	pop    edi
  40b510:	clc    
  40b511:	inc    edi
  40b512:	and    eax,0x9642a0e6
  40b517:	sbb    DWORD PTR [edi-0x42af7861],esp
  40b51d:	pop    edi
  40b51e:	in     eax,0xaf
  40b520:	popa   
  40b521:	add    eax,0x3a4f859
  40b526:	(bad)  
  40b527:	ss jg  0x40b4d5
  40b52a:	imul   esp,DWORD PTR [esi+0x35],0xd1caf2dd
  40b531:	(bad)
  40b534:	mov    esp,edi
  40b536:	sub    al,0xd5
  40b538:	test   BYTE PTR [edx+ecx*8-0x4ed4e0b5],cl
  40b53f:	call   0x1941ba2
  40b544:	sbb    eax,0x460a9bb6
  40b549:	aaa    
  40b54a:	or     al,bl
  40b54c:	pop    ss
  40b54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b54e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b54f:	sub    ah,BYTE PTR [ebp+0x2c79efc4]
  40b555:	ins    DWORD PTR es:[edi],dx
  40b556:	dec    edx
  40b557:	in     eax,dx
  40b558:	add    BYTE PTR [edx+0x42],bh
  40b55b:	loope  0x40b51b
  40b55d:	int    0x68
  40b55f:	pop    esi
  40b560:	outs   dx,BYTE PTR ds:[esi]
  40b561:	icebp  
  40b562:	mov    ebp,0xc109b229
  40b567:	dec    ecx
  40b568:	push   ebp
  40b569:	xchg   esp,eax
  40b56a:	je     0x40b525
  40b56c:	or     ebp,DWORD PTR [edi+edi*8+0x33]
  40b570:	fisttp WORD PTR [edi]
  40b572:	dec    ecx
  40b573:	imul   eax,DWORD PTR [esi+0x1940666c],0x21
  40b57a:	cs or  al,0x16
  40b57d:	xor    eax,0xb62e9979
  40b582:	sbb    eax,0xd0737507
  40b587:	scas   al,BYTE PTR es:[edi]
  40b588:	cmp    esp,DWORD PTR [esi]
  40b58a:	scas   eax,DWORD PTR es:[edi]
  40b58b:	popf   
  40b58c:	hlt    
  40b58d:	dec    edx
  40b58e:	jl     0x40b59f
  40b590:	(bad)  [ebx-0x3d5de201]
  40b596:	inc    ecx
  40b597:	fisttp QWORD PTR [ecx+ebp*2+0x7b9c7043]
  40b59e:	jb     0x40b557
  40b5a0:	pusha  
  40b5a1:	outs   dx,DWORD PTR ds:[esi]
  40b5a2:	and    ebp,eax
  40b5a4:	adc    dh,BYTE PTR [eax+0x27]
  40b5a7:	add    ah,dl
  40b5a9:	pusha  
  40b5aa:	pop    edi
  40b5ab:	mov    dl,BYTE PTR [edx+ebx*1]
  40b5ae:	mov    dh,0x57
  40b5b0:	ret    0xe3af
  40b5b3:	or     edi,DWORD PTR [edi]
  40b5b5:	cmc    
  40b5b6:	bound  ebx,QWORD PTR [eax-0x75]
  40b5b9:	out    dx,eax
  40b5ba:	jmp    0x63a6722f
  40b5bf:	jbe    0x40b563
  40b5c1:	fcom   DWORD PTR ds:0xcc52dcd6
  40b5c7:	pop    ss
  40b5c8:	pop    esi
  40b5c9:	mov    DWORD PTR [edx+0x5e],ebx
  40b5cc:	mov    ds:0xd44c158a,eax
  40b5d1:	stos   BYTE PTR es:[edi],al
  40b5d2:	mov    BYTE PTR [edx],ch
  40b5d4:	cmp    BYTE PTR [eax],cl
  40b5d6:	data16 fldcw WORD PTR [esi-0x3907366f]
  40b5dd:	and    ecx,DWORD PTR [ebp+0x5c5b03c9]
  40b5e3:	sub    DWORD PTR [eax-0x3f],ebx
  40b5e6:	jp     0x40b57d
  40b5e8:	je     0x40b5fb
  40b5ea:	stos   DWORD PTR es:[edi],eax
  40b5eb:	mov    bl,0xf3
  40b5ed:	mov    bh,BYTE PTR [ebx]
  40b5ef:	mov    BYTE PTR [edx-0x13],bl
  40b5f2:	jmp    0x1dbd:0x2eae434f
  40b5f9:	repz pop eax
  40b5fb:	xchg   edx,eax
  40b5fc:	jnp    0x40b65f
  40b5fe:	fcomi  st,st(5)
  40b600:	mov    eax,ds:0x4026231
  40b605:	mov    cl,0xc2
  40b607:	je     0x40b645
  40b609:	or     edx,DWORD PTR [ebx]
  40b60b:	sbb    al,0xd4
  40b60d:	push   edi
  40b60e:	jne    0x40b686
  40b610:	call   DWORD PTR [edi+0x7cac9b27]
  40b616:	sub    al,0x61
  40b618:	lods   eax,DWORD PTR ds:[esi]
  40b619:	sbb    esi,DWORD PTR [edx+0x56de6f80]
  40b61f:	sub    eax,ebx
  40b621:	xchg   esp,eax
  40b622:	mov    ebp,0x5f7defa5
  40b627:	scas   al,BYTE PTR es:[edi]
  40b628:	adc    DWORD PTR [esi-0x15feb03b],esp
  40b62e:	xor    dh,0xcf
  40b631:	and    bl,dh
  40b633:	sub    dh,BYTE PTR [eax]
  40b635:	or     ch,bl
  40b637:	inc    ecx
  40b638:	(bad)  
  40b639:	hlt    
  40b63a:	mov    BYTE PTR [edx],dh
  40b63c:	add    esi,DWORD PTR [eax+esi*1-0x12]
  40b640:	(bad)  
  40b641:	jecxz  0x40b670
  40b643:	add    al,0x9f
  40b645:	call   0x4d85bf0e
  40b64a:	push   edi
  40b64b:	in     al,0x48
  40b64d:	les    edi,FWORD PTR [edi]
  40b64f:	fistp  DWORD PTR fs:[ebp+0x5cc84f79]
  40b656:	fidivr DWORD PTR [esi+0x2425f7b9]
  40b65c:	stos   BYTE PTR es:[edi],al
  40b65d:	in     al,dx
  40b65e:	outs   dx,DWORD PTR ds:[esi]
  40b65f:	and    bl,BYTE PTR [ecx+0x50a3d0ab]
  40b665:	div    dl
  40b667:	add    DWORD PTR [esi+0x4ac792f6],ebx
  40b66d:	repz (bad) 
  40b66f:	jns    0x40b6ef
  40b671:	and    BYTE PTR [ecx+0x29],ah
  40b674:	dec    esp
  40b675:	sbb    DWORD PTR [ecx-0x42],ecx
  40b678:	loop   0x40b6aa
  40b67a:	mov    bl,0xca
  40b67c:	arpl   WORD PTR [ebx-0x3aabaf88],bp
  40b682:	shl    BYTE PTR ds:0x5bfb817a,1
  40b688:	mov    bl,0x97
  40b68a:	pop    eax
  40b68b:	lock jmp 0x25d82792
  40b691:	stc    
  40b692:	ds hlt 
  40b694:	lock push ebx
  40b696:	xlat   BYTE PTR ds:[ebx]
  40b697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b698:	xor    dl,BYTE PTR [esi-0x63]
  40b69b:	mov    dh,0x5c
  40b69d:	sar    DWORD PTR [ebp-0x8],1
  40b6a0:	ins    DWORD PTR es:[edi],dx
  40b6a1:	xor    ah,bh
  40b6a3:	mov    bl,0x4a
  40b6a5:	or     al,0xcb
  40b6a7:	push   edx
  40b6a8:	add    eax,0xea745041
  40b6ad:	push   edi
  40b6ae:	int3   
  40b6af:	mov    ss,WORD PTR [ebp-0x53]
  40b6b2:	imul   ecx,DWORD PTR [ebx],0xffffffe7
  40b6b5:	dec    ecx
  40b6b6:	aas    
  40b6b7:	mov    dh,0xdf
  40b6b9:	push   0xffffffa2
  40b6bb:	(bad)  
  40b6bc:	in     al,0xdc
  40b6be:	push   ebx
  40b6bf:	int3   
  40b6c0:	adc    BYTE PTR [esi],ah
  40b6c2:	clc    
  40b6c3:	xor    eax,DWORD PTR [eax+ecx*2-0x1cad2ef]
  40b6ca:	xor    eax,0x9dc20c21
  40b6cf:	loopne 0x40b69f
  40b6d1:	pop    ebp
  40b6d2:	es adc al,0x73
  40b6d5:	lds    esi,FWORD PTR [ebx-0x543b5932]
  40b6db:	mov    esp,0x4515d78c
  40b6e0:	retf   0x4205
  40b6e3:	cwde   
  40b6e4:	mov    ebx,0x62f7bfa7
  40b6e9:	pop    esi
  40b6ea:	mov    ch,0x68
  40b6ec:	ins    BYTE PTR es:[edi],dx
  40b6ed:	fnstcw WORD PTR [ebx+0x78]
  40b6f0:	fcom   QWORD PTR [ecx]
  40b6f2:	(bad)  
  40b6f3:	ficomp DWORD PTR [edx-0x1f4c823b]
  40b6f9:	fild   QWORD PTR [edx-0x73a38a8e]
  40b6ff:	lahf   
  40b700:	loopne 0x40b691
  40b702:	ret    0x8a5e
  40b705:	sbb    BYTE PTR [esi+0x22],ch
  40b708:	dec    edx
  40b709:	mov    ebp,0xc0c53461
  40b70e:	jno    0x40b6b4
  40b710:	xchg   esi,eax
  40b711:	popa   
  40b712:	inc    esi
  40b713:	shr    dl,1
  40b715:	ss in  al,dx
  40b717:	sbb    BYTE PTR [ebx+0x3812dd57],ah
  40b71d:	arpl   WORD PTR [esi+0x47561df],sp
  40b723:	jns    0x40b6fb
  40b725:	jge    0x40b756
  40b727:	sbb    al,ah
  40b729:	and    DWORD PTR [ecx+0xa],ebp
  40b72c:	les    edi,FWORD PTR [edx-0x33]
  40b72f:	test   DWORD PTR [esi-0x39e06c72],edi
  40b735:	fisubr WORD PTR [esi+0x44]
  40b738:	rcr    DWORD PTR [ecx],0x24
  40b73b:	sub    ah,al
  40b73d:	stc    
  40b73e:	and    BYTE PTR ds:0x1ad195d5,al
  40b744:	fbld   TBYTE PTR [ebx]
  40b746:	lods   al,BYTE PTR ds:[esi]
  40b747:	sbb    al,0x56
  40b749:	adc    eax,0x5e02f8ab
  40b74e:	xchg   esi,eax
  40b74f:	mov    gs,WORD PTR [edx]
  40b751:	inc    esp
  40b752:	sbb    eax,0xb8294de5
  40b757:	loope  0x40b76f
  40b759:	stos   BYTE PTR es:[edi],al
  40b75a:	leave  
  40b75b:	fdivr  DWORD PTR [edx-0x443ec830]
  40b761:	retf   
  40b762:	cmp    ah,bl
  40b764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b765:	mov    WORD PTR [edx-0x5a],ds
  40b768:	pop    esi
  40b769:	mov    dl,0xc9
  40b76b:	add    al,0xa1
  40b76d:	in     al,0xaa
  40b76f:	popf   
  40b770:	cmp    ch,BYTE PTR [ecx-0x1f94e328]
  40b776:	adc    dh,cl
  40b778:	in     al,0xf6
  40b77a:	mov    dh,0x3d
  40b77c:	mov    ah,0x9a
  40b77e:	pop    ecx
  40b77f:	fsqrt  
  40b781:	or     eax,0xd6225b5d
  40b786:	shl    WORD PTR [ecx],1
  40b789:	(bad)  
  40b78a:	aad    0x75
  40b78c:	mov    ah,0x1a
  40b78e:	pop    esp
  40b78f:	mov    bh,0x91
  40b791:	cli    
  40b792:	dec    ebx
  40b793:	mov    cl,0xca
  40b795:	rcl    BYTE PTR [edx],1
  40b797:	dec    esi
  40b798:	xor    al,BYTE PTR [ecx-0x3035bea6]
  40b79e:	in     eax,0x23
  40b7a0:	into   
  40b7a1:	pop    ds
  40b7a2:	add    esi,ecx
  40b7a4:	xchg   edi,eax
  40b7a5:	cli    
  40b7a6:	mov    edi,0x70b75393
  40b7ab:	fild   DWORD PTR [ebx-0x44]
  40b7ae:	shl    BYTE PTR [ebx],1
  40b7b0:	lods   eax,DWORD PTR ds:[esi]
  40b7b1:	enter  0xb06d,0xb2
  40b7b5:	xchg   esp,eax
  40b7b6:	dec    ecx
  40b7b7:	(bad)  
  40b7b8:	rcl    DWORD PTR [ecx],0x7f
  40b7bb:	push   edx
  40b7bc:	int3   
  40b7bd:	imul   BYTE PTR [edx+0x15]
  40b7c0:	xchg   esi,eax
  40b7c1:	in     eax,0xff
  40b7c3:	pop    edx
  40b7c4:	mov    al,ds:0xdc588c1
  40b7c9:	xor    BYTE PTR [ebx+0x7a],0xd6
  40b7cd:	inc    ebx
  40b7ce:	gs mov esi,0x86986908
  40b7d4:	out    0x8f,eax
  40b7d6:	ret    0x3181
  40b7d9:	and    bh,BYTE PTR [ebx+0xd47b04d]
  40b7df:	das    
  40b7e0:	adc    ecx,DWORD PTR ds:0x33e888cd
  40b7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e7:	jns    0x40b7fa
  40b7e9:	repz ss sbb eax,0xd51d7eb6
  40b7f0:	outs   dx,BYTE PTR ds:[esi]
  40b7f1:	icebp  
  40b7f2:	pop    ebx
  40b7f3:	pop    ecx
  40b7f4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f6:	dec    ebx
  40b7f7:	xchg   edx,eax
  40b7f8:	xchg   edx,eax
  40b7f9:	fnsave [ecx+0x5302ed36]
  40b7ff:	sbb    eax,0x2fcef5cc
  40b804:	stos   DWORD PTR es:[edi],eax
  40b805:	daa    
  40b806:	div    BYTE PTR [edi+0x7f11fc41]
  40b80c:	sbb    BYTE PTR ds:0xf9e85eed,ch
  40b812:	jecxz  0x40b80e
  40b814:	mov    ds:0x776c5175,eax
  40b819:	xor    edi,DWORD PTR [edx-0x653d1a8c]
  40b81f:	xor    DWORD PTR [edx],ebx
  40b821:	rcr    BYTE PTR [ebp-0x29],cl
  40b824:	div    edi
  40b826:	pop    eax
  40b827:	pop    edx
  40b828:	sbb    DWORD PTR [edx-0x5b4094b],0x419ab914
  40b832:	gs out dx,al
  40b834:	mov    ah,0x54
  40b836:	or     dl,BYTE PTR [edx]
  40b838:	sub    eax,0xfa46ddf7
  40b83d:	fdiv   QWORD PTR [esi+0x11]
  40b840:	shl    BYTE PTR [edi+eax*1],1
  40b843:	dec    esi
  40b844:	aaa    
  40b845:	jmp    0xd220:0x3d00dbe7
  40b84c:	aad    0xdb
  40b84e:	cmp    al,0xad
  40b850:	mov    eax,0x4c398f17
  40b855:	sbb    al,0x5d
  40b857:	mov    al,0x35
  40b859:	mov    al,0xdb
  40b85b:	bound  ebx,QWORD PTR [ecx]
  40b85d:	or     ebx,ebx
  40b85f:	out    0xbe,eax
  40b861:	pop    ebp
  40b862:	(bad)  
  40b863:	icebp  
  40b864:	and    edi,DWORD PTR [ebx-0x6573fc01]
  40b86a:	push   edi
  40b86b:	int3   
  40b86c:	test   DWORD PTR [edx+eax*1+0x72c790bc],ebp
  40b873:	imul   edi,DWORD PTR es:[edx],0xffffffd4
  40b877:	add    BYTE PTR cs:[edx],bl
  40b87a:	mov    ebp,0xa6421f1b
  40b87f:	(bad)  
  40b880:	pop    es
  40b881:	pusha  
  40b882:	arpl   bp,bp
  40b884:	js     0x40b827
  40b886:	in     al,dx
  40b887:	push   ds
  40b888:	fild   QWORD PTR [ebx+0x78]
  40b88b:	das    
  40b88c:	adc    ecx,DWORD PTR [edi-0x5af40a17]
  40b892:	fwait
  40b893:	mov    edx,DWORD PTR [eax]
  40b895:	out    0x75,al
  40b897:	pop    es
  40b898:	nop
  40b899:	jge    0x40b868
  40b89b:	xchg   ebp,eax
  40b89c:	inc    edx
  40b89d:	or     cl,BYTE PTR [esi-0x6402c40c]
  40b8a3:	retf   
  40b8a4:	sub    DWORD PTR ds:[eax-0x3b59a142],edx
  40b8ab:	xor    ecx,DWORD PTR [ebx-0x5a]
  40b8ae:	mov    ds:0xd14d33cf,al
  40b8b3:	fs xchg ecx,eax
  40b8b5:	pushf  
  40b8b6:	mov    al,ds:0x39e8d072
  40b8bb:	sub    BYTE PTR [ecx+0x55],dl
  40b8be:	test   cl,bh
  40b8c0:	xchg   DWORD PTR [esi],eax
  40b8c2:	sbb    bl,dh
  40b8c4:	aam    0x29
  40b8c6:	mov    edx,DWORD PTR [ecx+edi*2+0x56]
  40b8ca:	xchg   esi,eax
  40b8cb:	into   
  40b8cc:	push   ebx
  40b8cd:	mov    ebp,0xfea3fe36
  40b8d2:	xor    eax,0xabb29fa3
  40b8d7:	int    0xa
  40b8d9:	cmp    eax,0x1598a2f0
  40b8de:	test   BYTE PTR [ebp+0x7e],ch
  40b8e1:	dec    esp
  40b8e2:	inc    esi
  40b8e3:	jne    0x40b86a
  40b8e5:	mov    edi,0x2798e8
  40b8ea:	loope  0x40b876
  40b8ec:	push   eax
  40b8ed:	mov    ebx,0x4d4df94
  40b8f2:	ins    DWORD PTR es:[edi],dx
  40b8f3:	adc    DWORD PTR [ecx],ecx
  40b8f5:	xor    DWORD PTR [ecx-0x74],edx
  40b8f8:	or     esp,esi
  40b8fa:	popf   
  40b8fb:	stc    
  40b8fc:	xor    BYTE PTR [ecx-0x12],dl
  40b8ff:	cmp    bl,BYTE PTR [esi]
  40b901:	sbb    ch,BYTE PTR [eax+0x556de42e]
  40b907:	popa   
  40b908:	call   FWORD PTR [ebx+0x11]
  40b90b:	ror    BYTE PTR [ebx-0x317e3799],cl
  40b911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b912:	cdq    
  40b913:	inc    edi
  40b914:	rol    BYTE PTR [edi+0x5f],1
  40b917:	stc    
  40b918:	cmp    eax,0x6f61c66
  40b91d:	add    eax,0xf74bf0eb
  40b922:	adc    BYTE PTR [esi],cl
  40b924:	fwait
  40b925:	jge    0x40b92b
  40b927:	in     eax,0xed
  40b929:	inc    edx
  40b92a:	clc    
  40b92b:	inc    eax
  40b92c:	and    dl,BYTE PTR [eax+0x6f]
  40b92f:	mov    edi,0x24c8b2c9
  40b934:	out    dx,eax
  40b935:	pop    eax
  40b936:	xchg   edi,eax
  40b937:	fild   WORD PTR [eax+0x4b]
  40b93a:	xchg   edx,eax
  40b93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b93c:	js     0x40b926
  40b93e:	inc    ecx
  40b93f:	inc    ecx
  40b940:	mov    es,WORD PTR [esi]
  40b942:	lea    ecx,[eax]
  40b944:	fidiv  WORD PTR [eax-0x69]
  40b947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b948:	mov    esp,0x4439ba2a
  40b94d:	fistp  WORD PTR [esi+0x4c]
  40b950:	lahf   
  40b951:	out    dx,al
  40b952:	fs adc dl,al
  40b955:	scas   eax,DWORD PTR es:[edi]
  40b956:	adc    edx,DWORD PTR [edi]
  40b958:	aas    
  40b959:	jg     0x40b985
  40b95b:	loop   0x40b983
  40b95d:	xor    eax,0x7e7ad56a
  40b962:	pop    ebx
  40b963:	mov    DWORD PTR [edx],ecx
  40b965:	or     eax,0x96e8ec8e
  40b96a:	(bad)  
  40b96b:	out    dx,al
  40b96c:	out    dx,al
  40b96d:	push   0xffffffdc
  40b96f:	gs xchg ebx,eax
  40b971:	and    dl,ch
  40b973:	dec    edi
  40b974:	adc    edi,esp
  40b976:	mov    ch,0xd0
  40b978:	inc    esi
  40b979:	mov    ah,0xef
  40b97b:	adc    al,BYTE PTR [esi-0x2b]
  40b97e:	cmp    DWORD PTR [ecx-0x7e4c8ac6],eax
  40b984:	mov    ch,0x67
  40b986:	inc    esi
  40b987:	repz in al,0xaa
  40b98a:	out    0x94,al
  40b98c:	dec    ebx
  40b98d:	mov    bl,al
  40b98f:	arpl   WORD PTR [edi],bp
  40b991:	fisttp DWORD PTR [edi+edx*8-0x25b265e2]
  40b998:	adc    eax,0xd4cbafd5
  40b99d:	imul   eax,DWORD PTR [esi-0x1710e259],0xffffffdc
  40b9a4:	scas   eax,DWORD PTR es:[edi]
  40b9a5:	inc    ecx
  40b9a6:	iret   
  40b9a7:	pop    esi
  40b9a8:	mov    edx,0xacea8c5d
  40b9ad:	ret    
  40b9ae:	add    ch,0xf1
  40b9b1:	xchg   esi,eax
  40b9b2:	mov    esi,0xf5f4815f
  40b9b7:	jo     0x40b9ce
  40b9b9:	popf   
  40b9ba:	nop
  40b9bb:	adc    dh,dl
  40b9bd:	ds repnz push ds
  40b9c0:	pop    esp
  40b9c1:	sub    bl,BYTE PTR [ebp-0x7f3730d5]
  40b9c7:	jne    0x40b9d4
  40b9c9:	cmp    ecx,DWORD PTR [edx+eiz*1]
  40b9cc:	dec    ecx
  40b9cd:	pop    ebp
  40b9ce:	out    0xbf,al
  40b9d0:	jns    0x40ba07
  40b9d2:	adc    eax,0x7f4ade0b
  40b9d7:	push   edx
  40b9d8:	scas   eax,DWORD PTR es:[edi]
  40b9d9:	xchg   BYTE PTR [edx],ch
  40b9db:	cdq    
  40b9dc:	outs   dx,BYTE PTR ds:[esi]
  40b9dd:	push   es
  40b9de:	ja     0x40b971
  40b9e0:	jp     0x40ba13
  40b9e2:	mov    DWORD PTR ds:0x55e6b947,edx
  40b9e8:	adc    dh,BYTE PTR [eax+0x27]
  40b9eb:	cmp    BYTE PTR [ecx+0x70],cl
  40b9ee:	pop    ebp
  40b9ef:	mov    al,ds:0x748a08de
  40b9f4:	dec    ecx
  40b9f5:	pop    ebp
  40b9f6:	aaa    
  40b9f7:	ds mov ebx,eax
  40b9fa:	xor    dh,BYTE PTR [eax]
  40b9fc:	mov    ebp,0xce6f1f4e
  40ba01:	iret   
  40ba02:	sbb    eax,0x8c5d5a6b
  40ba07:	mov    ds:0x8f886323,eax
  40ba0c:	imul   DWORD PTR [eax-0x305ea26e]
  40ba12:	es out 0x78,al
  40ba15:	clc    
  40ba16:	in     eax,dx
  40ba17:	cmp    BYTE PTR [ebp+esi*4-0x34],al
  40ba1b:	push   cs
  40ba1c:	loope  0x40b9a4
  40ba1e:	push   es
  40ba1f:	jle    0x40ba38
  40ba21:	lahf   
  40ba22:	mov    cl,0x70
  40ba24:	outs   dx,DWORD PTR ds:[esi]
  40ba25:	pop    eax
  40ba26:	or     DWORD PTR [ecx+0x76],esi
  40ba29:	sbb    BYTE PTR [edi+esi*2+0x28],dh
  40ba2d:	jp     0x40ba19
  40ba2f:	int    0x3f
  40ba31:	fstp   QWORD PTR [eax+edi*8+0x42]
  40ba35:	das    
  40ba36:	add    ebx,ebx
  40ba38:	lods   eax,DWORD PTR ds:[esi]
  40ba39:	jecxz  0x40ba90
  40ba3b:	(bad)  
  40ba3c:	aas    
  40ba3d:	cmp    ecx,DWORD PTR [esi+edx*4-0x6d1966b4]
  40ba44:	iret   
  40ba45:	pop    esp
  40ba46:	fsub   DWORD PTR [ecx]
  40ba48:	sbb    al,0x2f
  40ba4a:	push   0xffffffe9
  40ba4c:	imul   esp,DWORD PTR [edi+0x54],0xffffffb1
  40ba50:	mov    ebp,0xa20a3798
  40ba55:	push   esp
  40ba56:	dec    eax
  40ba57:	cmp    al,0xa6
  40ba59:	iret   
  40ba5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba5b:	outs   dx,BYTE PTR ds:[esi]
  40ba5c:	fcomp  DWORD PTR [ecx+ebx*2+0x71]
  40ba60:	fsub   DWORD PTR [ecx-0x96a9beb]
  40ba66:	xchg   esp,eax
  40ba67:	push   edi
  40ba68:	retf   0xef01
  40ba6b:	dec    ecx
  40ba6c:	jle    0x40ba04
  40ba6e:	pop    edx
  40ba6f:	jae    0x40baa1
  40ba71:	jbe    0x40ba11
  40ba73:	jl     0x40bad7
  40ba75:	add    al,0x50
  40ba77:	ins    DWORD PTR es:[edi],dx
  40ba78:	push   0xffffffe0
  40ba7a:	dec    ebp
  40ba7b:	lea    esi,[esi+0x74]
  40ba7e:	push   0x10
  40ba80:	fst    QWORD PTR ds:0x7795349e
  40ba86:	fnstsw WORD PTR [ecx-0xe38d161]
  40ba8c:	jmp    0x62b7:0x5a3ea1e7
  40ba93:	xchg   edi,eax
  40ba94:	in     eax,dx
  40ba95:	stos   BYTE PTR es:[edi],al
  40ba96:	or     eax,DWORD PTR [ebx+0x57]
  40ba99:	jmp    0x22cd87bd
  40ba9e:	or     bl,0x8a
  40baa1:	sub    bl,BYTE PTR [ebp-0x20ab6c2c]
  40baa7:	mov    bl,0x7d
  40baa9:	inc    esi
  40baaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baab:	js     0x40babb
  40baad:	add    ebx,DWORD PTR [esi-0x536c9fe2]
  40bab3:	jl     0x40bafe
  40bab5:	inc    ecx
  40bab6:	or     eax,0xc8379c1e
  40babb:	jg     0x40ba80
  40babd:	mov    ebp,0xe2b32799
  40bac2:	jbe    0x40bb3b
  40bac4:	cmp    ebp,eax
  40bac6:	aas    
  40bac7:	mov    dl,0x7
  40bac9:	cmp    esi,edi
  40bacb:	sti    
  40bacc:	push   ss
  40bacd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bace:	push   0x6
  40bad0:	mov    eax,DWORD PTR [eax-0x68099f9c]
  40bad6:	and    al,0x56
  40bad8:	and    eax,0xf5c302c6
  40badd:	and    eax,0x9c50f277
  40bae2:	pop    edi
  40bae3:	push   eax
  40bae4:	and    DWORD PTR [ebp+esi*2+0x74],ebx
  40bae8:	sub    ebx,DWORD PTR [ebx-0x355a7b22]
  40baee:	mov    esp,0x6af7e4d6
  40baf3:	call   0x85faed41
  40baf8:	xchg   esi,eax
  40baf9:	stos   DWORD PTR es:[edi],eax
  40bafa:	popa   
  40bafb:	xchg   BYTE PTR [ebx+eax*8],ah
  40bafe:	rcl    DWORD PTR [ebp-0x63be8356],0xb7
  40bb05:	and    BYTE PTR [eax-0x5524255e],ah
  40bb0b:	ds aaa 
  40bb0d:	push   ds
  40bb0e:	xchg   DWORD PTR [edi-0x6d7253c],ecx
  40bb14:	dec    edi
  40bb15:	shl    edx,cl
  40bb17:	outs   dx,DWORD PTR ds:[esi]
  40bb18:	pop    es
  40bb19:	jmp    0x3daf136c
  40bb1e:	mov    bh,dl
  40bb20:	aam    0x53
  40bb22:	and    DWORD PTR [ebp-0x3d],eax
  40bb25:	push   0x9b5a8134
  40bb2a:	hlt    
  40bb2b:	xchg   edi,eax
  40bb2c:	xchg   BYTE PTR [edx],bh
  40bb2e:	outs   dx,DWORD PTR ds:[esi]
  40bb2f:	aas    
  40bb30:	jge    0x40bac5
  40bb32:	popa   
  40bb33:	and    al,0x69
  40bb35:	int3   
  40bb36:	retf   
  40bb37:	sub    al,0x3d
  40bb39:	jmp    0xe4cd:0xa0cfe713
  40bb40:	test   eax,0xdf5d5bc9
  40bb45:	sbb    BYTE PTR fs:[ecx],dl
  40bb48:	push   esp
  40bb49:	repz clc 
  40bb4b:	(bad)  
  40bb4d:	inc    ecx
  40bb4e:	mov    esp,0x5e654f4
  40bb53:	(bad)  
  40bb54:	xchg   ecx,eax
  40bb55:	mov    ah,0x9
  40bb57:	inc    ebx
  40bb58:	repnz das 
  40bb5a:	lahf   
  40bb5b:	cmp    al,0xe1
  40bb5d:	jbe    0x40bb8c
  40bb5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb60:	xor    DWORD PTR [ebp-0x2b],0x71
  40bb64:	dec    ebp
  40bb65:	and    al,0x5e
  40bb67:	data16 jge 0x40bb66
  40bb6a:	inc    esp
  40bb6b:	pop    ss
  40bb6c:	and    al,0x1a
  40bb6e:	push   edi
  40bb6f:	mov    al,fs:0x5f252160
  40bb75:	std    
  40bb76:	jmp    0xbd9c:0x57b1a576
  40bb7d:	sbb    bl,bl
  40bb7f:	bound  edi,QWORD PTR [esi]
  40bb81:	pop    esp
  40bb82:	dec    ecx
  40bb83:	mov    ebx,0x5f45805a
  40bb88:	in     al,dx
  40bb89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb8a:	popa   
  40bb8b:	sahf   
  40bb8c:	cmp    dh,BYTE PTR [edx*8+0x5e6b8bc5]
  40bb93:	mov    ch,0x15
  40bb95:	cmp    al,0x7f
  40bb97:	int3   
  40bb98:	mov    ah,BYTE PTR [ebx+0x63]
  40bb9b:	jns    0x40bbc1
  40bb9d:	sahf   
  40bb9e:	int3   
  40bb9f:	dec    eax
  40bba0:	mov    ds:0x2fd80e70,eax
  40bba5:	mov    edx,0xed2ab204
  40bbaa:	ror    DWORD PTR [edx+0x68ae4425],cl
  40bbb0:	repz adc al,0xf0
  40bbb3:	push   cs
  40bbb4:	push   ds
  40bbb5:	dec    esi
  40bbb6:	jae    0x40bb7b
  40bbb8:	push   ss
  40bbb9:	sbb    edx,eax
  40bbbb:	sub    al,0x4a
  40bbbd:	stos   DWORD PTR es:[edi],eax
  40bbbe:	sub    eax,0x1e0c7d45
  40bbc3:	push   ss
  40bbc4:	cmp    al,bl
  40bbc6:	nop
  40bbc7:	jnp    0x40bb72
  40bbc9:	ss aam 0x45
  40bbcc:	inc    esp
  40bbcd:	mov    ebp,0x818c3527
  40bbd2:	add    eax,0x828f9884
  40bbd7:	sbb    BYTE PTR [edi-0x31],0x3
  40bbdb:	add    al,0xb8
  40bbdd:	hlt    
  40bbde:	pop    eax
  40bbdf:	loope  0x40bc3d
  40bbe1:	jle    0x40bbb9
  40bbe3:	dec    esi
  40bbe4:	push   ebp
  40bbe5:	cli    
  40bbe6:	mov    bh,0x1a
  40bbe8:	inc    ecx
  40bbe9:	adc    dl,BYTE PTR [ebx]
  40bbeb:	mov    ds:0xdaf28cd5,al
  40bbf0:	add    BYTE PTR [esi],al
  40bbf2:	sub    esi,DWORD PTR [ebx+eiz*4-0x5c52e597]
  40bbf9:	xchg   edi,eax
  40bbfa:	in     al,0x92
  40bbfc:	pop    ss
  40bbfd:	aam    0xc8
  40bbff:	inc    eax
  40bc00:	(bad)  
  40bc01:	xchg   esp,eax
  40bc02:	mov    esi,0x6451cd65
  40bc07:	or     eax,0x937db9cb
  40bc0c:	loop   0x40bbfd
  40bc0e:	pop    esp
  40bc0f:	bound  ebx,QWORD PTR [edi+0x3b79b59e]
  40bc15:	cmp    eax,0x84b04dca
  40bc1a:	or     DWORD PTR [ecx],esp
  40bc1c:	mov    ebx,0x15f1152e
  40bc21:	iret   
  40bc22:	xchg   edx,eax
  40bc23:	fistp  QWORD PTR [edi-0x70403378]
  40bc29:	jle    0x40bc20
  40bc2b:	xchg   ebx,eax
  40bc2c:	ds pop esp
  40bc2e:	aad    0x8c
  40bc30:	mov    ch,0x8
  40bc32:	js     0x40bbf3
  40bc34:	push   ds
  40bc35:	sti    
  40bc36:	loop   0x40bbb8
  40bc38:	or     DWORD PTR [edx-0x2c908959],esp
  40bc3e:	fisttp DWORD PTR [esi-0x7d]
  40bc41:	outs   dx,BYTE PTR ds:[esi]
  40bc42:	cdq    
  40bc43:	sar    BYTE PTR [ecx],0xf4
  40bc46:	push   ss
  40bc47:	jno    0x40bc02
  40bc49:	mov    ecx,0xd7a7c98a
  40bc4e:	xlat   BYTE PTR cs:[ebx]
  40bc50:	cmp    DWORD PTR [ebx-0xe78e50d],eax
  40bc56:	(bad)  
  40bc57:	jp     0x40bc43
  40bc59:	or     DWORD PTR [ebx+0x56],esp
  40bc5c:	out    dx,eax
  40bc5d:	add    bl,BYTE PTR [esi-0x427f8b42]
  40bc63:	push   es
  40bc64:	ds push 0x2ce16d84
  40bc6a:	sbb    eax,0xfef29a40
  40bc6f:	inc    ebp
  40bc70:	shr    BYTE PTR [ebp+0x5a4aedb5],cl
  40bc76:	rcl    BYTE PTR [ebp-0x7b],1
  40bc79:	sahf   
  40bc7a:	test   DWORD PTR [ebx],eax
  40bc7c:	mov    dh,0x41
  40bc7e:	dec    ebp
  40bc7f:	cmp    al,0x83
  40bc81:	mov    dl,ah
  40bc83:	and    al,0xd7
  40bc85:	popf   
  40bc86:	in     al,0x52
  40bc88:	xchg   ebp,eax
  40bc89:	vdivps xmm4,xmm6,xmm1
  40bc8d:	or     al,0x6b
  40bc8f:	repz test eax,0x48dafbb8
  40bc95:	sub    cl,0xa
  40bc98:	fcmove st,st(4)
  40bc9a:	cmc    
  40bc9b:	inc    edx
  40bc9c:	push   edi
  40bc9d:	push   eax
  40bc9e:	push   ebx
  40bc9f:	inc    esi
  40bca0:	adc    BYTE PTR [eax],bl
  40bca2:	push   eax
  40bca3:	bound  esi,QWORD PTR [eax-0x69]
  40bca6:	and    eax,0x2df27673
  40bcab:	sub    esp,DWORD PTR [edx-0xe4aa37a]
  40bcb1:	fwait
  40bcb2:	mov    esi,0xd07316e1
  40bcb7:	fbld   TBYTE PTR [eax+ebx*4+0x7d]
  40bcbb:	sbb    esi,DWORD PTR fs:[esi]
  40bcbe:	jg     0x40bce8
  40bcc0:	pop    edi
  40bcc1:	cmp    ebx,0x6b
  40bcc4:	scas   eax,DWORD PTR es:[edi]
  40bcc5:	mov    BYTE PTR [esi-0x47],dl
  40bcc8:	aad    0x1f
  40bcca:	or     dl,BYTE PTR [eax-0x47f5418e]
  40bcd0:	add    BYTE PTR [edi+0x9fcb2bd],ch
  40bcd6:	aad    0xb9
  40bcd8:	mov    bh,0xb4
  40bcda:	dec    ebx
  40bcdb:	ret    0xfda1
  40bcde:	inc    ebp
  40bcdf:	popa   
  40bce0:	jno    0x40bc80
  40bce2:	lahf   
  40bce3:	adc    dl,BYTE PTR [ebp-0x2]
  40bce6:	push   edi
  40bce7:	bound  edx,QWORD PTR [esp+ebx*1+0x692ea8b2]
  40bcee:	test   eax,0x90807076
  40bcf3:	daa    
  40bcf4:	outs   dx,DWORD PTR ds:[si]
  40bcf6:	test   DWORD PTR [ecx+ebp*4+0x1f],0x6a73e3b0
  40bcfe:	pop    eax
  40bcff:	dec    ebp
  40bd00:	mov    bl,0xa5
  40bd02:	jmp    0x40bcb7
  40bd04:	in     al,0x76
  40bd06:	mov    ds:0x8f4cb666,eax
  40bd0b:	rcr    DWORD PTR [edx],0x9
  40bd0e:	jge    0x40bcd1
  40bd10:	mov    ebx,ebx
  40bd12:	sbb    al,BYTE PTR [edx+0x7d8416d]
  40bd18:	add    ebx,DWORD PTR [edx-0x6bdca542]
  40bd1e:	das    
  40bd1f:	mov    BYTE PTR [eax+0x34c9fa84],dl
  40bd25:	cmp    eax,0x8e1de301
  40bd2a:	push   ebp
  40bd2b:	and    DWORD PTR [ecx-0x7c],esp
  40bd2e:	mov    edi,0xf845f338
  40bd33:	cmp    ch,BYTE PTR [edi+0x42e076c3]
  40bd39:	mov    WORD PTR [edx],?
  40bd3b:	pop    ecx
  40bd3c:	scas   al,BYTE PTR es:[edi]
  40bd3d:	jmp    0x40bcc8
  40bd3f:	ret    0xc708
  40bd42:	adc    eax,0x9c56f4c6
  40bd47:	jns    0x40bcce
  40bd49:	jnp    0x40bdb6
  40bd4b:	call   0xf9627e85
  40bd50:	dec    edi
  40bd51:	gs mov ah,0xe
  40bd54:	cld    
  40bd55:	daa    
  40bd56:	hlt    
  40bd57:	push   edx
  40bd58:	fadd   DWORD PTR [edi+0x6d]
  40bd5b:	jmp    0x40bd11
  40bd5d:	sahf   
  40bd5e:	sar    dh,1
  40bd60:	mov    ebx,0xd6b11958
  40bd65:	jbe    0x40bd05
  40bd67:	outs   dx,BYTE PTR ds:[esi]
  40bd68:	dec    edi
  40bd69:	ss clc 
  40bd6b:	mov    BYTE PTR [ebx+0xc],bh
  40bd6e:	add    dl,BYTE PTR [ebx-0x5f0b82e2]
  40bd74:	(bad)  
  40bd75:	cwde   
  40bd76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd77:	xor    dh,BYTE PTR [esi-0x7ac1cdf7]
  40bd7d:	test   al,0x22
  40bd7f:	bound  esi,QWORD PTR [esi-0x35]
  40bd82:	push   ebx
  40bd83:	xchg   BYTE PTR [eax],ch
  40bd85:	jb     0x40bdda
  40bd87:	shr    BYTE PTR [eax-0x4c],0x13
  40bd8b:	gs hlt 
  40bd8d:	shl    DWORD PTR [ebx-0x7c],0x5b
  40bd91:	rcl    BYTE PTR [edx],0x3d
  40bd94:	dec    ebp
  40bd95:	sbb    BYTE PTR [ebp+0x5],bl
  40bd98:	fbstp  TBYTE PTR [esi+ecx*2+0x30e6b8c0]
  40bd9f:	out    dx,al
  40bda0:	cld    
  40bda1:	mov    eax,ds:0xf52c3144
  40bda6:	fcomp  QWORD PTR [eax-0xdb6618b]
  40bdac:	(bad)  
  40bdad:	or     al,0xe0
  40bdaf:	inc    edx
  40bdb0:	push   cs
  40bdb1:	pop    edi
  40bdb2:	add    eax,0x37377b17
  40bdb7:	icebp  
  40bdb8:	imul   edx,DWORD PTR [esp+eax*8-0x33],0x5a
  40bdbd:	sub    DWORD PTR [ebp-0x11007d83],ebx
  40bdc3:	(bad)  [edi-0x4423d901]
  40bdc9:	mov    al,ds:0xd6db2694
  40bdce:	push   eax
  40bdcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd0:	xor    BYTE PTR [edi+0x3d],cl
  40bdd3:	or     bl,ch
  40bdd5:	call   0xc441d788
  40bdda:	pop    esp
  40bddb:	xor    eax,0x77cb0918
  40bde0:	mov    cl,0x71
  40bde2:	iret   
  40bde3:	cmp    eax,DWORD PTR [ecx]
  40bde5:	cmp    BYTE PTR [ebp*8-0x297c28d5],ch
  40bdec:	(bad)  
  40bdee:	in     eax,0x11
  40bdf0:	es jge 0x40be1f
  40bdf3:	ror    BYTE PTR [eax],1
  40bdf5:	mov    bh,0x96
  40bdf7:	in     eax,0x9b
  40bdf9:	push   0xffffffcb
  40bdfb:	rcr    dl,cl
  40bdfd:	cs scas eax,DWORD PTR es:[edi]
  40bdff:	inc    ecx
  40be00:	xchg   edi,eax
  40be01:	xchg   esp,eax
  40be02:	pop    edx
  40be03:	xchg   ecx,eax
  40be04:	xor    eax,DWORD PTR [edi+0x4a]
  40be07:	push   ebp
  40be08:	in     eax,dx
  40be09:	outs   dx,BYTE PTR ds:[esi]
  40be0a:	into   
  40be0b:	or     bh,al
  40be0d:	and    ah,BYTE PTR [ebx]
  40be0f:	jmp    0x901c:0x716223c6
  40be16:	scas   al,BYTE PTR es:[edi]
  40be17:	sti    
  40be18:	aad    0xe
  40be1a:	xchg   ebp,eax
  40be1b:	xor    eax,0xfd68bb
  40be20:	mov    eax,ds:0xb7742b1d
  40be25:	pop    ecx
  40be26:	push   ecx
  40be27:	hlt    
  40be28:	shr    DWORD PTR [edx+0x4bc4e227],1
  40be2e:	jmp    0x750a:0x525d78a7
  40be35:	push   0xffffffab
  40be37:	ret    
  40be38:	test   DWORD PTR [esi-0x2e75e4c0],0x3061205
  40be42:	sbb    al,0xa5
  40be44:	xlat   BYTE PTR ds:[ebx]
  40be45:	loop   0x40bdcb
  40be47:	mov    ebp,0xfb7a739f
  40be4c:	ret    0xa3eb
  40be4f:	or     dl,BYTE PTR [edi]
  40be51:	xor    eax,0xc102d4df
  40be56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be57:	aam    0x59
  40be59:	arpl   WORD PTR [ebp-0x65],bx
  40be5c:	mov    ds:0x4b414ca2,al
  40be61:	adc    DWORD PTR fs:[eax-0x2fdff7bb],eax
  40be68:	sbb    al,0x22
  40be6a:	scas   al,BYTE PTR es:[edi]
  40be6b:	or     eax,0x207fc43a
  40be70:	sbb    ebp,DWORD PTR [edx-0x1c822c17]
  40be76:	pop    esp
  40be77:	adc    eax,0x6e66f78
  40be7c:	push   ecx
  40be7d:	clc    
  40be7e:	jb     0x40bec3
  40be80:	out    dx,eax
  40be81:	pop    edi
  40be82:	mov    cl,0xab
  40be84:	mov    cl,0xf2
  40be86:	xor    DWORD PTR [edx-0x3b],0xffffff82
  40be8a:	add    DWORD PTR fs:[eax+0x11],0xffffffa8
  40be8f:	cmc    
  40be90:	cmp    eax,0xf752776c
  40be95:	sbb    eax,0xa929d3ec
  40be9a:	loope  0x40bec8
  40be9c:	cmp    edx,DWORD PTR [edx+0x70]
  40be9f:	sub    ebx,DWORD PTR [edi+0x30]
  40bea2:	sbb    al,0x72
  40bea4:	in     eax,dx
  40bea5:	pop    ss
  40bea6:	xchg   BYTE PTR [esi+0x21],bl
  40bea9:	loope  0x40be49
  40beab:	imul   ebx,DWORD PTR [esi+0x34fa895b],0xc
  40beb2:	ret    0x967e
  40beb5:	cs in  al,0x6b
  40beb8:	xchg   ebx,eax
  40beb9:	mov    bl,BYTE PTR [ebx+ecx*2]
  40bebc:	pop    ds
  40bebd:	and    DWORD PTR [ebx+eiz*8-0x30],edi
  40bec1:	fidivr DWORD PTR [ecx+0x10a7f269]
  40bec7:	xchg   ecx,eax
  40bec8:	leave  
  40bec9:	not    eax
  40becb:	mov    dl,0xa1
  40becd:	jno    0x40bf45
  40becf:	cs mov bh,0x5b
  40bed2:	push   edi
  40bed3:	xor    DWORD PTR [edi-0x712e5381],0xffffffb2
  40beda:	fwait
  40bedb:	adc    eax,0x8efc01e2
  40bee0:	xchg   BYTE PTR [eax],bl
  40bee2:	pop    ds
  40bee3:	sub    dh,al
  40bee5:	mov    dl,0x29
  40bee7:	mov    eax,ds:0xa9a5bffc
  40beec:	xlat   BYTE PTR ds:[ebx]
  40beed:	test   BYTE PTR [eax-0x36],bh
  40bef0:	sbb    bl,BYTE PTR [eax]
  40bef2:	pusha  
  40bef3:	xchg   ecx,eax
  40bef4:	dec    esi
  40bef5:	fidivr WORD PTR [ebx+0x52]
  40bef8:	out    0xa7,eax
  40befa:	sar    BYTE PTR ds:0xb4b705ed,cl
  40bf00:	pusha  
  40bf01:	call   0x24e4:0x2f9fc436
  40bf08:	ret    0x6fce
  40bf0b:	cdq    
  40bf0c:	imul   DWORD PTR [edx+0x6a6acd84]
  40bf12:	sub    BYTE PTR [ecx+esi*8+0x159cbca2],al
  40bf19:	jne    0x40bf52
  40bf1b:	into   
  40bf1c:	pop    ds
  40bf1d:	dec    ebx
  40bf1e:	push   DWORD PTR [ecx]
  40bf20:	dec    edx
  40bf21:	sbb    ecx,DWORD PTR [edi]
  40bf23:	inc    eax
  40bf24:	out    dx,eax
  40bf25:	loop   0x40befb
  40bf27:	cmp    al,BYTE PTR [ebx]
  40bf29:	in     eax,dx
  40bf2a:	dec    ebp
  40bf2b:	rcr    bl,0x9d
  40bf2e:	sub    ch,bl
  40bf30:	out    dx,eax
  40bf31:	pop    ss
  40bf32:	jb     0x40bf70
  40bf34:	stos   DWORD PTR es:[edi],eax
  40bf35:	lods   al,BYTE PTR ds:[esi]
  40bf36:	jb     0x40beda
  40bf38:	aam    0x2f
  40bf3a:	cmp    DWORD PTR [eax+0x5dd932f4],esi
  40bf40:	imul   esp,DWORD PTR [esi+esi*8],0x6dfd871
  40bf47:	push   eax
  40bf48:	int    0x70
  40bf4a:	pop    esi
  40bf4b:	leave  
  40bf4c:	xor    ah,ah
  40bf4e:	lods   al,BYTE PTR ds:[esi]
  40bf4f:	jmp    0xe65e3a01
  40bf54:	push   es
  40bf55:	or     edi,DWORD PTR [ebx-0x38f0e94a]
  40bf5b:	inc    edx
  40bf5c:	inc    ecx
  40bf5d:	out    dx,al
  40bf5e:	sbb    ecx,ebx
  40bf60:	pop    ds
  40bf61:	cmp    bl,ah
  40bf63:	xchg   edi,eax
  40bf64:	push   ss
  40bf65:	push   cs
  40bf66:	rcl    dl,1
  40bf68:	data16 ja 0x40bfaf
  40bf6b:	out    dx,al
  40bf6c:	add    DWORD PTR [edi-0x13],esi
  40bf6f:	idiv   DWORD PTR [ebx-0x6f]
  40bf72:	adc    al,0x13
  40bf74:	pop    esi
  40bf75:	xlat   BYTE PTR ds:[ebx]
  40bf76:	mov    ebx,0xa7b1648
  40bf7b:	pop    eax
  40bf7c:	out    dx,al
  40bf7d:	jbe    0x40bffd
  40bf7f:	add    BYTE PTR [ecx+0x37],0x51
  40bf83:	push   cs
  40bf84:	mov    ds:0x56e63a6b,al
  40bf89:	pop    ecx
  40bf8a:	sub    al,0x27
  40bf8c:	ins    BYTE PTR es:[edi],dx
  40bf8d:	pop    ss
  40bf8e:	mov    DWORD PTR [esi+0x21bfab71],0xc8d715d5
  40bf98:	stos   BYTE PTR es:[edi],al
  40bf99:	in     eax,dx
  40bf9a:	(bad)  
  40bf9b:	gs addr16 je 0x40bf59
  40bf9f:	retf   0x636c
  40bfa2:	pop    esp
  40bfa3:	fdivr  DWORD PTR fs:[ebx+0x70]
  40bfa7:	cmp    al,0x10
  40bfa9:	or     DWORD PTR [ebp+0x46],ecx
  40bfac:	out    0xd1,eax
  40bfae:	and    edi,edx
  40bfb0:	jmp    DWORD PTR [edx-0x57]
  40bfb3:	(bad)  
  40bfb4:	fdiv   DWORD PTR [ecx+0x4110853c]
  40bfba:	cmp    DWORD PTR [edi],ebx
  40bfbc:	push   0xef895b3c
  40bfc1:	add    ecx,DWORD PTR [edi-0x666e939a]
  40bfc7:	and    DWORD PTR [esi+0x13],edx
  40bfca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfcb:	pusha  
  40bfcc:	or     al,0x6b
  40bfce:	test   BYTE PTR [ebp+eax*1+0x4aac626a],cl
  40bfd5:	in     eax,dx
  40bfd6:	cld    
  40bfd7:	ret    
  40bfd8:	dec    eax
  40bfd9:	gs jecxz 0x40bfd7
  40bfdc:	out    0x31,eax
  40bfde:	mov    cl,0x1a
  40bfe0:	xchg   ecx,eax
  40bfe1:	dec    edi
  40bfe2:	mov    ecx,0x3daf4643
  40bfe7:	and    ebx,DWORD PTR [esi]
  40bfe9:	jae    0x40bf6c
  40bfeb:	dec    esp
  40bfec:	xchg   DWORD PTR [ebx+0x50896a66],edx
  40bff2:	ret    0x7692
  40bff5:	loop   0x40bfd3
  40bff7:	lods   al,BYTE PTR ds:[esi]
  40bff8:	dec    edx
  40bff9:	dec    ecx
  40bffa:	pop    ebp
  40bffb:	sbb    BYTE PTR [ebp+0x56e3fd4a],dh
  40c001:	xchg   DWORD PTR [ecx+edi*1-0x62],eax
  40c005:	push   0xab205153
  40c00a:	mov    eax,ds:0xa973dcad
  40c00f:	mov    ds:0x9de0c8a7,al
  40c014:	push   ss
  40c015:	push   edi
  40c016:	jl     0x40c00e
  40c018:	add    dh,BYTE PTR [esi+0x6f]
  40c01b:	or     al,0x74
  40c01d:	sub    bl,BYTE PTR [ebx+ebx*2]
  40c020:	retf   0xf47b
  40c023:	fstp   st(6)
  40c025:	adc    al,BYTE PTR [edx]
  40c027:	xor    edx,DWORD PTR [eax+0x25]
  40c02a:	push   ebx
  40c02b:	aam    0xd1
  40c02d:	pusha  
  40c02e:	ins    DWORD PTR es:[edi],dx
  40c02f:	xchg   esp,eax
  40c030:	cwde   
  40c031:	inc    esp
  40c032:	fistp  WORD PTR [esi-0x437b2a50]
  40c038:	inc    edx
  40c039:	mov    ebx,0x8b268c50
  40c03e:	push   ebx
  40c03f:	jb     0x40c040
  40c041:	aaa    
  40c042:	push   0x2c00423
  40c047:	xchg   ebp,eax
  40c048:	mov    ebx,0x73dbd53a
  40c04d:	pop    edx
  40c04e:	pop    ecx
  40c04f:	xor    DWORD PTR [esi+0x5c2de4f],edx
  40c055:	mov    edx,0x893f1ccf
  40c05a:	not    BYTE PTR [edi-0x2b]
  40c05d:	call   0x49880684
  40c062:	dec    edi
  40c063:	ror    BYTE PTR ds:0x6af65d1d,1
  40c069:	push   ss
  40c06a:	pushf  
  40c06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c06c:	mov    ds:0x7d56328,al
  40c071:	inc    ebp
  40c072:	test   al,al
  40c074:	aam    0xa
  40c076:	retf   0xbe92
  40c079:	fmul   DWORD PTR [eax+0x6e]
  40c07c:	mov    cl,0xe
  40c07e:	push   es
  40c07f:	pusha  
  40c080:	dec    edx
  40c081:	push   edx
  40c082:	(bad)  
  40c083:	lods   eax,DWORD PTR ds:[esi]
  40c084:	cmp    BYTE PTR [ebx+ebx*4-0x46],al
  40c088:	retf   
  40c089:	xchg   esp,eax
  40c08a:	dec    esp
  40c08b:	jo     0x40c0f9
  40c08d:	nop
  40c08e:	ins    BYTE PTR es:[edi],dx
  40c08f:	mov    ds:0xa731ce1,eax
  40c094:	push   ebx
  40c095:	int    0xa9
  40c097:	adc    eax,0xa9a8bfe3
  40c09c:	jo     0x40c0a9
  40c09e:	jb     0x40c056
  40c0a0:	push   esi
  40c0a1:	int3   
  40c0a2:	sbb    esi,0x68bba99b
  40c0a8:	and    ebx,DWORD PTR [edi-0x80]
  40c0ab:	pop    edx
  40c0ac:	popf   
  40c0ad:	clc    
  40c0ae:	mov    ecx,0xf294c01b
  40c0b3:	jecxz  0x40c0d0
  40c0b5:	mov    esi,0x769b9a80
  40c0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0bb:	mov    DWORD PTR [ebx],ebx
  40c0bd:	scas   al,BYTE PTR es:[edi]
  40c0be:	jb     0x40c0a5
  40c0c0:	and    bl,BYTE PTR [ecx-0x49]
  40c0c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0c4:	out    0xc,eax
  40c0c6:	pop    edi
  40c0c7:	sub    al,0x9e
  40c0c9:	adc    ebx,esi
  40c0cb:	enter  0x97e2,0xe8
  40c0cf:	pop    es
  40c0d0:	out    0x36,eax
  40c0d2:	adc    DWORD PTR [esi-0x28],edi
  40c0d5:	fist   DWORD PTR [esi+0x76]
  40c0d8:	mov    eax,ds:0x315e99ef
  40c0dd:	sbb    eax,0x1b02084b
  40c0e2:	and    ecx,edi
  40c0e4:	stc    
  40c0e5:	cmp    ecx,esp
  40c0e7:	mov    dh,0x34
  40c0e9:	xor    al,BYTE PTR [ebx]
  40c0eb:	and    ebx,DWORD PTR ds:0x844932b9
  40c0f1:	or     al,0x57
  40c0f3:	mov    esi,0xcbef2344
  40c0f8:	or     BYTE PTR gs:[edx],ch
  40c0fb:	push   edx
  40c0fc:	adc    al,0xc
  40c0fe:	fisub  WORD PTR [edi]
  40c100:	in     al,dx
  40c101:	imul   esi,ebx,0x71
  40c104:	mov    ds:0xb3c2a214,al
  40c109:	sbb    DWORD PTR [esi+0x3f4825a9],esi
  40c10f:	xchg   edx,eax
  40c110:	mov    al,0x5
  40c112:	cs push cs
  40c114:	adc    eax,0xc4d6e614
  40c119:	imul   esp,DWORD PTR [ebp+ebx*1+0x2],0x40
  40c11e:	scas   al,BYTE PTR es:[edi]
  40c11f:	mov    ebx,DWORD PTR [ebx+0x58bddef7]
  40c125:	cmc    
  40c126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c127:	sbb    esi,DWORD PTR [ecx+esi*8-0x47]
  40c12b:	cmp    edx,DWORD PTR [ebp+0x65dcfc4a]
  40c131:	or     BYTE PTR [ecx+0x75],dh
  40c134:	ret    
  40c135:	push   cs
  40c136:	sub    eax,0x6d5a6c17
  40c13b:	sbb    al,BYTE PTR [esp+edx*2-0x2e]
  40c13f:	xor    al,0x32
  40c141:	xchg   edi,eax
  40c142:	js     0x40c1c3
  40c144:	test   eax,0xc7a634d0
  40c149:	xor    al,0x87
  40c14b:	cmp    DWORD PTR ds:0x65d15749,edi
  40c151:	dec    ecx
  40c152:	stos   DWORD PTR es:[edi],eax
  40c153:	adc    DWORD PTR [edx+0x63],ecx
  40c156:	sub    al,0xeb
  40c158:	sbb    edi,DWORD PTR [ebx]
  40c15a:	mov    eax,ds:0x59907402
  40c15f:	add    BYTE PTR [ebx+0x407cc648],al
  40c165:	jb     0x40c153
  40c167:	shr    BYTE PTR [ebp+0xd5b7cb4],cl
  40c16d:	scas   al,BYTE PTR es:[edi]
  40c16e:	imul   edx,DWORD PTR [ecx],0x830c3101
  40c174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c175:	sub    dl,BYTE PTR [eax+ebp*2-0x2ece8c16]
  40c17c:	dec    esp
  40c17d:	(bad)  
  40c17f:	mov    ecx,0xfde49046
  40c184:	out    0x4,al
  40c186:	mov    edx,0x4f168257
  40c18b:	ret    0x8d80
  40c18e:	add    al,0xe0
  40c190:	pop    es
  40c191:	jecxz  0x40c134
  40c193:	inc    edi
  40c194:	sbb    edi,DWORD PTR [edi+0x26]
  40c197:	cld    
  40c198:	in     al,dx
  40c199:	mov    ds:0xe10e0eb6,eax
  40c19e:	sahf   
  40c19f:	mov    ah,0xe7
  40c1a1:	fcomp  st(4)
  40c1a3:	out    dx,al
  40c1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1a5:	jle    0x40c1a6
  40c1a7:	les    esi,FWORD PTR [esi+0x728bf4e9]
  40c1ad:	je     0x40c1ab
  40c1af:	sbb    bl,al
  40c1b1:	or     dh,al
  40c1b3:	mov    ebx,0x634aa6ec
  40c1b8:	aad    0xec
  40c1ba:	test   BYTE PTR [edx-0x6ace19a4],ch
  40c1c0:	cld    
  40c1c1:	push   esi
  40c1c2:	jg     0x40c202
  40c1c4:	mov    esi,0xb6c1ef1f
  40c1c9:	aaa    
  40c1ca:	ja     0x40c1e8
  40c1cc:	sub    DWORD PTR [edi],esp
  40c1ce:	or     BYTE PTR [ebp-0x611a42ab],ch
  40c1d4:	mov    cl,0x97
  40c1d6:	pop    es
  40c1d7:	loope  0x40c232
  40c1d9:	push   0x6da3fae1
  40c1de:	dec    ebx
  40c1df:	nop
  40c1e0:	scas   eax,DWORD PTR es:[edi]
  40c1e1:	xchg   esp,eax
  40c1e2:	mov    bh,0x3a
  40c1e4:	jp     0x40c203
  40c1e6:	int3   
  40c1e7:	jno    0x40c16d
  40c1e9:	xchg   ebp,eax
  40c1ea:	and    ch,BYTE PTR [esi+0x27]
  40c1ed:	inc    ebp
  40c1ee:	pushf  
  40c1ef:	test   cl,0xde
  40c1f2:	mov    eax,ds:0xcfc3b1a6
  40c1f7:	cdq    
  40c1f8:	mov    esp,?
  40c1fa:	ret    
  40c1fb:	add    al,0xcb
  40c1fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1fe:	pop    es
  40c1ff:	jmp    0xfec7:0x7c05661b
  40c206:	lods   al,BYTE PTR ds:[esi]
  40c207:	inc    eax
  40c208:	cmp    eax,0x9a4e0fb4
  40c20d:	pop    es
  40c20e:	out    dx,al
  40c20f:	push   cs
  40c210:	stc    
  40c211:	jb     0x40c273
  40c213:	icebp  
  40c214:	jb     0x40c1c8
  40c216:	cli    
  40c217:	adc    al,BYTE PTR [ebx-0x3a]
  40c21a:	xor    eax,0x84d0423b
  40c21f:	mov    ds:0x41675011,al
  40c224:	outs   dx,BYTE PTR ds:[esi]
  40c225:	xchg   edi,eax
  40c226:	lds    ebx,FWORD PTR [ebx-0x73]
  40c229:	mov    gs,WORD PTR [ecx]
  40c22b:	mov    ebx,0x719d6cbe
  40c230:	sbb    DWORD PTR [ecx+eax*1+0x220232fb],edi
  40c237:	jo     0x40c203
  40c239:	xor    dh,al
  40c23b:	hlt    
  40c23c:	mov    ecx,0x70e75fe6
  40c241:	push   eax
  40c242:	sub    DWORD PTR [eax+eiz*4+0x2f],edx
  40c246:	dec    ebp
  40c247:	les    esi,FWORD PTR [esi+0x7b78e4c6]
  40c24d:	(bad)  
  40c24e:	push   ds
  40c24f:	stos   DWORD PTR es:[edi],eax
  40c250:	mov    ebx,esp
  40c252:	pop    ecx
  40c253:	fcomp  DWORD PTR [ebp-0x22]
  40c256:	jecxz  0x40c238
  40c258:	push   es
  40c259:	mov    ch,0xef
  40c25b:	inc    esi
  40c25c:	cmp    al,0x3
  40c25e:	sbb    eax,0xefae7bcc
  40c263:	test   ecx,0x51796f0d
  40c269:	cmp    eax,0xe27b8393
  40c26e:	and    BYTE PTR [esi+0x37686ef4],bh
  40c274:	push   edx
  40c275:	or     al,0x1b
  40c277:	(bad)  
  40c278:	and    ebx,DWORD PTR [eax-0x2faf1735]
  40c27e:	rol    DWORD PTR [ebx-0x5d],0xca
  40c282:	leave  
  40c283:	or     eax,0x8587b16f
  40c288:	mov    ch,0x6d
  40c28a:	xor    al,0xa5
  40c28c:	fs dec edx
  40c28e:	cwde   
  40c28f:	stos   DWORD PTR es:[edi],eax
  40c290:	neg    DWORD PTR [edx+0x18380071]
  40c296:	pop    edx
  40c297:	cs push es
  40c299:	mov    ah,0x7c
  40c29b:	retf   
  40c29c:	inc    ebp
  40c29d:	add    BYTE PTR [edx+edi*4-0x376bc2c2],0xd3
  40c2a5:	aam    0x2f
  40c2a7:	leave  
  40c2a8:	mov    bl,0xe6
  40c2aa:	(bad)  
  40c2ab:	xchg   esp,eax
  40c2ac:	mov    cs,WORD PTR [edi+0x64fe8a7b]
  40c2b2:	aam    0x36
  40c2b4:	je     0x40c291
  40c2b6:	or     al,0xc1
  40c2b8:	dec    ecx
  40c2b9:	pop    ds
  40c2ba:	jmp    DWORD PTR [edi-0xc]
  40c2bd:	jge    0x40c28e
  40c2bf:	adc    edi,DWORD PTR [esi]
  40c2c1:	and    BYTE PTR [ebp-0x5e],bl
  40c2c4:	aam    0x58
  40c2c6:	mov    ch,0x4f
  40c2c8:	ds mov dl,0x14
  40c2cb:	sub    dl,BYTE PTR [esi]
  40c2cd:	sbb    cl,BYTE PTR [edx]
  40c2cf:	xchg   esi,eax
  40c2d0:	pushf  
  40c2d1:	push   ss
  40c2d2:	sub    al,0xc4
  40c2d4:	jl     0x40c276
  40c2d6:	push   eax
  40c2d7:	mov    eax,0x79797547
  40c2dc:	gs iret 
  40c2de:	or     BYTE PTR [eax-0x648d10de],0x86
  40c2e5:	out    dx,eax
  40c2e6:	loope  0x40c2b8
  40c2e8:	push   es
  40c2e9:	aad    0xc5
  40c2eb:	mov    WORD PTR ds:0x85c47396,gs
  40c2f1:	mov    edx,esp
  40c2f3:	xchg   ebx,eax
  40c2f4:	push   ss
  40c2f5:	jecxz  0x40c367
  40c2f7:	sub    bh,dl
  40c2f9:	inc    cx
  40c2fb:	mov    ds,WORD PTR [ebx]
  40c2fd:	pusha  
  40c2fe:	mov    dl,0x9e
  40c300:	mov    edi,0xdc4a475c
  40c305:	in     eax,dx
  40c306:	fcom   QWORD PTR [edx-0x884a4d8]
  40c30c:	outs   dx,BYTE PTR ds:[esi]
  40c30d:	jns    0x40c32d
  40c30f:	fisubr DWORD PTR [edx+0x3b7a7cbb]
  40c315:	ret    0x862c
  40c318:	push   esp
  40c319:	daa    
  40c31a:	les    eax,FWORD PTR [ecx+0x6a]
  40c31d:	call   0x5a11:0xf13c7823
  40c324:	mov    ah,0xb8
  40c326:	fbstp  TBYTE PTR [edx+0x7e331c7e]
  40c32c:	inc    eax
  40c32d:	int    0xa2
  40c32f:	cmp    eax,0x87dfd602
  40c334:	sub    eax,0x3b9b32bc
  40c339:	and    esi,DWORD PTR [eax+0x16]
  40c33c:	dec    ebp
  40c33d:	mov    eax,ds:0xe525a0a9
  40c342:	sub    eax,0x13b8e845
  40c347:	adc    eax,0x4ff164e
  40c34c:	mov    ds:0x27c5d483,eax
  40c351:	lds    esi,FWORD PTR [edx+0x717e213d]
  40c357:	xchg   ebp,eax
  40c358:	imul   ecx,DWORD PTR [edx-0x6d4b9986],0x66
  40c35f:	aad    0x7d
  40c361:	ja     0x40c305
  40c363:	rcr    BYTE PTR [esi-0x14b9671d],1
  40c369:	add    BYTE PTR [ecx-0x6c592176],al
  40c36f:	jmp    FWORD PTR [esi+0x63]
  40c372:	inc    ebx
  40c373:	lds    eax,FWORD PTR [edi+0x1f]
  40c376:	shr    eax,1
  40c378:	call   0xc986:0x1e6c1577
  40c37f:	pop    esp
  40c380:	ror    DWORD PTR [ebx+edx*2-0x570305e1],0x33
  40c388:	std    
  40c389:	ret    0x1507
  40c38c:	jg     0x40c3f8
  40c38e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c38f:	hlt    
  40c390:	mov    ebx,0xba7d835b
  40c395:	push   eax
  40c396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c397:	aam    0x60
  40c399:	mov    DWORD PTR [edx-0x13bde662],ecx
  40c39f:	mov    edx,DWORD PTR [ecx-0x3163437]
  40c3a5:	dec    esp
  40c3a6:	iret   
  40c3a7:	dec    eax
  40c3a8:	cmp    dl,dh
  40c3aa:	sbb    eax,ecx
  40c3ac:	pop    edi
  40c3ad:	stos   BYTE PTR es:[edi],al
  40c3ae:	pop    esp
  40c3af:	daa    
  40c3b0:	xor    eax,0x9cc367d5
  40c3b5:	scas   eax,DWORD PTR es:[edi]
  40c3b6:	xor    al,0xdf
  40c3b8:	(bad)  
  40c3b9:	xchg   esi,eax
  40c3ba:	mov    dl,0x70
  40c3bc:	dec    eax
  40c3bd:	ins    DWORD PTR es:[edi],dx
  40c3be:	retf   0xcd40
  40c3c1:	loopne 0x40c414
  40c3c3:	cmp    ecx,eax
  40c3c5:	xor    DWORD PTR [edi],edx
  40c3c7:	loopne 0x40c366
  40c3c9:	add    eax,0x9bb97d71
  40c3ce:	sbb    eax,0x134205d3
  40c3d3:	ret    0x6887
  40c3d6:	in     eax,dx
  40c3d7:	int    0x6f
  40c3d9:	sbb    DWORD PTR [ecx],eax
  40c3db:	push   esi
  40c3dc:	mov    ecx,eax
  40c3de:	add    al,BYTE PTR [edx+ebp*4-0x1a86647f]
  40c3e5:	xor    DWORD PTR [ebx-0x13],ecx
  40c3e8:	jb     0x40c38e
  40c3ea:	gs dec edi
  40c3ec:	mov    eax,0x8d222f4c
  40c3f1:	pop    ebp
  40c3f2:	lods   eax,DWORD PTR ds:[esi]
  40c3f3:	les    ecx,FWORD PTR [eax-0x35]
  40c3f6:	pop    ebp
  40c3f7:	cs scas al,BYTE PTR es:[edi]
  40c3f9:	arpl   cx,dx
  40c3fb:	pop    es
  40c3fc:	and    dh,BYTE PTR [edi-0x10]
  40c3ff:	fmul   st(0),st
  40c401:	sar    DWORD PTR [esp+eiz*4+0x38],cl
  40c405:	shr    edx,cl
  40c407:	(bad)  
  40c408:	cmp    al,0x10
  40c40a:	adc    bl,BYTE PTR [esi]
  40c40c:	jo     0x40c3f3
  40c40e:	rol    DWORD PTR [ecx+0x11],cl
  40c411:	mov    ebp,0xdaeb6912
  40c416:	xchg   edx,eax
  40c417:	xchg   DWORD PTR [ebx],edx
  40c419:	mov    edx,DWORD PTR [ecx+eax*2]
  40c41c:	adc    DWORD PTR [ebx+0x58],eax
  40c41f:	mov    ebx,0xacf0d11e
  40c424:	jecxz  0x40c46f
  40c426:	out    dx,eax
  40c427:	outs   dx,BYTE PTR ds:[esi]
  40c428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c429:	sub    al,0xce
  40c42b:	sub    al,0x5d
  40c42d:	xor    esp,esi
  40c42f:	call   0x9e90d50
  40c434:	aam    0xae
  40c436:	inc    esp
  40c437:	xor    al,0x8d
  40c439:	pop    esi
  40c43a:	push   ecx
  40c43b:	call   DWORD PTR [edx+0x5ee64d6]
  40c441:	xchg   ebp,eax
  40c442:	cmp    al,0x9b
  40c444:	dec    edi
  40c445:	test   DWORD PTR [ebp+0x60],esp
  40c448:	add    DWORD PTR [ecx+0x5d9060a2],esi
  40c44e:	retf   0xb20f
  40c451:	es icebp 
  40c453:	aad    0xb8
  40c455:	pop    es
  40c456:	xchg   edx,eax
  40c457:	(bad)
  40c45a:	dec    eax
  40c45b:	pop    esi
  40c45c:	xchg   esp,eax
  40c45d:	jl     0x40c4dc
  40c45f:	or     eax,0x35ccac24
  40c464:	js     0x40c4c0
  40c466:	mov    ebx,0x592ccd31
  40c46b:	push   es
  40c46c:	outs   dx,DWORD PTR ds:[esi]
  40c46d:	pop    ecx
  40c46e:	retf   0xe083
  40c471:	xlat   BYTE PTR ds:[ebx]
  40c472:	mov    BYTE PTR [edx-0x4df2ad9c],ah
  40c478:	loopne 0x40c451
  40c47a:	(bad)  
  40c47b:	rdtsc  
  40c47d:	aam    0xa8
  40c47f:	inc    eax
  40c480:	adc    al,0xc4
  40c482:	fnstenv [esp+eiz*4+0x52f856a]
  40c489:	(bad)  
  40c48a:	sbb    ch,al
  40c48c:	sbb    cl,bl
  40c48e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c48f:	test   eax,0x16d8f9d2
  40c494:	sti    
  40c495:	push   ecx
  40c496:	cld    
  40c497:	xor    al,0xae
  40c499:	in     al,0xb0
  40c49b:	into   
  40c49c:	sti    
  40c49d:	es xchg ebx,ebp
  40c4a0:	rcr    esp,0x29
  40c4a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a4:	or     eax,0x8dc00b66
  40c4a9:	sbb    ah,BYTE PTR [bp+si+0x3720]
  40c4ae:	pop    ebp
  40c4af:	call   DWORD PTR [ebx+0x12cac03e]
  40c4b5:	adc    al,0x2d
  40c4b7:	or     eax,DWORD PTR [edx-0x56]
  40c4ba:	push   ds
  40c4bb:	jg     0x40c46b
  40c4bd:	pop    esi
  40c4be:	adc    BYTE PTR [ecx],dh
  40c4c0:	adc    eax,0xb21a052
  40c4c5:	sub    eax,DWORD PTR [eax+0x5f456bec]
  40c4cb:	cmp    BYTE PTR [ebp+ebp*4-0x63],ah
  40c4cf:	jo     0x40c47e
  40c4d1:	fisttp DWORD PTR [edx+eiz*4]
  40c4d4:	mov    edx,0x6e1c0e22
  40c4d9:	aaa    
  40c4da:	and    eax,0x68a50cf
  40c4df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e0:	xor    DWORD PTR [ecx],ebx
  40c4e2:	lods   eax,DWORD PTR ds:[esi]
  40c4e3:	jns    0x40c469
  40c4e5:	push   0x3656eac3
  40c4ea:	xchg   esp,eax
  40c4eb:	xlat   BYTE PTR ds:[ebx]
  40c4ec:	xchg   esp,eax
  40c4ed:	push   cs
  40c4ee:	dec    ebx
  40c4ef:	clc    
  40c4f0:	ret    0xd783
  40c4f3:	push   ebx
  40c4f4:	repz in eax,0x97
  40c4f7:	adc    eax,0x16c5a76b
  40c4fc:	bnd jo 0x40c4e8
  40c4ff:	paddusb mm5,QWORD PTR [esi+0x75]
  40c503:	loopne 0x40c4b1
  40c505:	(bad)  
  40c506:	xor    ah,BYTE PTR [esi-0x53]
  40c509:	pop    ss
  40c50a:	nop
  40c50b:	mov    ds:0x80151e66,eax
  40c510:	test   eax,0x76521b41
  40c515:	adc    BYTE PTR [ecx-0x77f868d4],dl
  40c51b:	int    0xf7
  40c51d:	mov    cl,cl
  40c51f:	jbe    0x40c4e9
  40c521:	out    0x96,al
  40c523:	ffreep st(1)
  40c525:	mov    ch,0xdd
  40c527:	mov    ebp,0x645691b
  40c52c:	shl    DWORD PTR [ebx+0x411312f2],1
  40c532:	jne    0x40c53e
  40c534:	in     al,dx
  40c535:	dec    edx
  40c536:	mov    ebp,edx
  40c538:	adc    BYTE PTR [edi],0xdb
  40c53b:	(bad)  
  40c53c:	lock fs stos BYTE PTR es:[edi],al
  40c53f:	fwait
  40c540:	add    DWORD PTR [edx-0x19d5bf79],0x66
  40c547:	into   
  40c548:	shl    BYTE PTR [ebp+edx*8-0x7b0bdef8],cl
  40c54f:	sub    eax,0xabbb213d
  40c554:	pop    ecx
  40c555:	mov    ecx,0x6b9b7b02
  40c55a:	ins    DWORD PTR es:[edi],dx
  40c55b:	daa    
  40c55c:	mov    al,BYTE PTR [edx]
  40c55e:	and    eax,0x300e220
  40c563:	jl     0x40c5b0
  40c565:	mov    ebp,0xb8ff72c0
  40c56a:	aaa    
  40c56b:	ja     0x40c598
  40c56d:	sbb    ebp,DWORD PTR [ebp+eax*4+0x2f]
  40c571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c572:	inc    edx
  40c573:	iret   
  40c574:	xor    ebp,edx
  40c576:	pop    edi
  40c577:	imul   edi,DWORD PTR [bp+di+0x4b],0x22
  40c57c:	imul   ebx,DWORD PTR [edi],0x1edd539c
  40c582:	xchg   edx,eax
  40c583:	fbstp  TBYTE PTR [edi+0x1d]
  40c586:	fld    DWORD PTR [esi-0x58cb7596]
  40c58c:	addr16 into 
  40c58e:	push   edx
  40c58f:	sub    BYTE PTR [eax-0x33aeb84e],bl
  40c595:	psllw  mm3,QWORD PTR [edx]
  40c598:	mov    cl,BYTE PTR [edi]
  40c59a:	mov    DWORD PTR [esi],ecx
  40c59c:	or     cl,BYTE PTR [ebx]
  40c59e:	jae    0x40c557
  40c5a0:	mov    DWORD PTR [eax],edx
  40c5a2:	or     eax,0xa8316907
  40c5a8:	mov    eax,0xa3b93cdc
  40c5ad:	mov    dl,BYTE PTR [eax+ecx*2+0x6ae78e3a]
  40c5b4:	push   ecx
  40c5b5:	es dec ebx
  40c5b7:	cmp    DWORD PTR [esi+ebp*1+0x3dfaadaf],ebp
  40c5be:	loop   0x40c5dd
  40c5c0:	jmp    0xdb0e340b
  40c5c5:	iret   
  40c5c6:	lahf   
  40c5c7:	rcl    DWORD PTR [edx+0xf],cl
  40c5ca:	pop    esp
  40c5cb:	pop    ebx
  40c5cc:	pop    eax
  40c5cd:	dec    esp
  40c5ce:	nop
  40c5cf:	jne    0x40c59c
  40c5d1:	inc    DWORD PTR [ebx+ebx*4-0x6697f800]
  40c5d8:	jmp    0x40c5fc
  40c5da:	mov    ds:0xc47d3c13,eax
  40c5df:	mov    ds:0x8f678006,eax
  40c5e4:	ss and dh,bl
  40c5e7:	icebp  
  40c5e8:	sti    
  40c5e9:	mov    ecx,0x3e0dd5ee
  40c5ee:	sub    dl,BYTE PTR [edx-0x5e54f1f]
  40c5f4:	and    BYTE PTR [ecx],ch
  40c5f6:	mov    cs:0x4acd8652,al
  40c5fc:	push   edx
  40c5fd:	aas    
  40c5fe:	sar    BYTE PTR ds:0x3a0f22d4,1
  40c604:	push   ecx
  40c605:	and    al,BYTE PTR [ecx-0x6e]
  40c608:	test   DWORD PTR [eax+0x3e],ecx
  40c60b:	loopne 0x40c604
  40c60d:	cmc    
  40c60e:	jmp    0x56ee4914
  40c613:	aam    0xc9
  40c615:	lea    esp,[ebp-0x73db5540]
  40c61b:	push   esp
  40c61c:	mov    al,ds:0x291e31d6
  40c621:	mov    esp,0x834ea5ec
  40c626:	ins    BYTE PTR es:[edi],dx
  40c627:	dec    ecx
  40c628:	dec    edi
  40c629:	in     eax,0x68
  40c62b:	fcom   QWORD PTR [eax+0x7455f0e9]
  40c631:	inc    edi
  40c632:	mov    ds:0x9424651f,al
  40c637:	call   0x82a6:0xa4364e28
  40c63e:	cld    
  40c63f:	pop    ebp
  40c640:	mov    bh,0x93
  40c642:	xor    bl,al
  40c644:	fprem1 
  40c646:	inc    edi
  40c647:	das    
  40c648:	shl    DWORD PTR [esp+eiz*2+0x19873abb],cl
  40c64f:	rcr    esi,cl
  40c651:	(bad)  
  40c652:	and    eax,0x479d0489
  40c657:	out    0xde,eax
  40c659:	xchg   edx,eax
  40c65a:	add    DWORD PTR [ecx+0x7b],0xafa85bde
  40c661:	mov    cl,0x7a
  40c663:	sub    dl,0x48
  40c666:	les    edi,FWORD PTR ds:0x86d6d08e
  40c66c:	and    ebx,DWORD PTR [ecx+eiz*1]
  40c66f:	imul   DWORD PTR [edx*4-0x7534c9fb]
  40c676:	in     al,0x91
  40c678:	pushf  
  40c679:	xor    ch,dl
  40c67b:	xchg   ebx,eax
  40c67c:	jb     0x40c673
  40c67e:	loopne 0x40c6fc
  40c680:	mov    al,0x38
  40c682:	popa   
  40c683:	or     al,0x38
  40c685:	sub    DWORD PTR [edx-0x4a22d872],ebx
  40c68b:	sub    DWORD PTR [ecx+0x22f7aac7],ebp
  40c691:	push   cs
  40c692:	call   0x928c:0xc5bf999d
  40c699:	jecxz  0x40c6f2
  40c69b:	ror    DWORD PTR [ebx-0x50],cl
  40c69e:	jno    0x40c623
  40c6a0:	data16 sbb al,0xcc
  40c6a3:	adc    esp,DWORD PTR [ecx-0x63eefa19]
  40c6a9:	push   edx
  40c6aa:	pop    eax
  40c6ab:	add    ebx,DWORD PTR [edx-0x32]
  40c6ae:	xchg   edx,eax
  40c6af:	mov    ch,0xfc
  40c6b1:	jmp    0x873f:0x33710dea
  40c6b8:	ins    BYTE PTR es:[edi],dx
  40c6b9:	and    al,0x6d
  40c6bb:	(bad)  
  40c6bd:	pushf  
  40c6be:	mov    WORD PTR [esi],ss
  40c6c0:	or     eax,0xad8b902d
  40c6c5:	pop    ss
  40c6c6:	cli    
  40c6c7:	xchg   BYTE PTR [esi+0x3c],ah
  40c6ca:	push   eax
  40c6cb:	mov    esi,0x5f69ed21
  40c6d0:	jbe    0x40c669
  40c6d2:	popf   
  40c6d3:	sbb    edx,DWORD PTR cs:[esi-0x4771d8d3]
  40c6da:	pop    edi
  40c6db:	inc    ecx
  40c6dc:	lds    ebp,FWORD PTR [edx-0x13ecc258]
  40c6e2:	dec    edx
  40c6e3:	ins    DWORD PTR es:[edi],dx
  40c6e4:	add    eax,0xb8a6b64e
  40c6e9:	(bad)  
  40c6ea:	sbb    al,0xf9
  40c6ec:	xchg   edx,ecx
  40c6ee:	clc    
  40c6ef:	daa    
  40c6f0:	inc    si
  40c6f2:	mov    dh,0xcb
  40c6f4:	xor    eax,0x8ef14c2f
  40c6f9:	jmp    0xb04a:0xd025ee8d
  40c700:	in     eax,dx
  40c701:	mov    ds:0x6bdacff8,al
  40c706:	or     al,0x4
  40c708:	adc    edi,DWORD PTR [edi-0x74596538]
  40c70e:	mov    bh,0x65
  40c710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c711:	(bad)  
  40c712:	jns    0x40c6f9
  40c714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c715:	sbb    dh,ah
  40c717:	les    ebx,FWORD PTR [ebp+0x26]
  40c71a:	mov    esp,edi
  40c71c:	dec    esp
  40c71d:	pop    esp
  40c71e:	push   esp
  40c71f:	mov    bh,0xce
  40c721:	pushf  
  40c722:	imul   ecx,DWORD PTR ds:0x1d080368,0xffffffb6
  40c729:	xor    ecx,DWORD PTR [ebp-0x2052c608]
  40c72f:	xchg   esp,eax
  40c730:	and    DWORD PTR [esi+eiz*4+0x60b63db1],esp
  40c737:	sub    eax,0x88797089
  40c73c:	add    dh,0x21
  40c73f:	push   eax
  40c740:	xchg   dh,dl
  40c742:	jle    0x40c754
  40c744:	cmp    BYTE PTR [ecx-0x3b1f4c5],bh
  40c74a:	or     eax,edi
  40c74c:	hlt    
  40c74d:	push   es
  40c74e:	sti    
  40c74f:	or     al,al
  40c751:	fcmovbe st,st(4)
  40c753:	push   ebx
  40c754:	adc    dh,dh
  40c756:	sbb    bl,BYTE PTR [eax+edx*8-0xf]
  40c75a:	and    bh,BYTE PTR [ebx-0x4efe465f]
  40c760:	dec    esi
  40c761:	pop    ss
  40c762:	push   eax
  40c763:	(bad)  
  40c764:	out    dx,eax
  40c765:	add    esp,ecx
  40c767:	ja     0x40c77a
  40c769:	inc    ebp
  40c76a:	xchg   esi,eax
  40c76b:	or     al,0x48
  40c76d:	js     0x40c792
  40c76f:	cmp    DWORD PTR [ecx],ebp
  40c771:	aas    
  40c772:	(bad)  
  40c773:	mov    esp,0x93ac973
  40c778:	jge    0x40c71e
  40c77a:	dec    edi
  40c77b:	dec    ebx
  40c77c:	jnp    0x40c732
  40c77e:	loopne 0x40c782
  40c780:	mov    dl,0x44
  40c782:	lahf   
  40c783:	xor    eax,0x82bb560a
  40c788:	mov    ecx,?
  40c78a:	std    
  40c78b:	iret   
  40c78c:	push   0x8fdb2e7f
  40c791:	dec    esi
  40c792:	jmp    0x40c7a6
  40c794:	mov    edx,0xad949ead
  40c799:	outs   dx,BYTE PTR ds:[esi]
  40c79a:	imul   edx,DWORD PTR [eax+0x59],0x86ee1c99
  40c7a1:	jecxz  0x40c747
  40c7a3:	outs   dx,BYTE PTR ds:[esi]
  40c7a4:	into   
  40c7a5:	(bad)  
  40c7a6:	sti    
  40c7a7:	or     ebx,DWORD PTR [eax+ebp*2-0x6c]
  40c7ab:	push   esi
  40c7ac:	mul    BYTE PTR [edi]
  40c7ae:	stc    
  40c7af:	loop   0x40c766
  40c7b1:	fbstp  TBYTE PTR [edi+eiz*2]
  40c7b4:	out    0xd1,al
  40c7b6:	scas   eax,DWORD PTR es:[edi]
  40c7b7:	int3   
  40c7b8:	mov    ah,0xc4
  40c7ba:	bound  ebp,QWORD PTR [ebp+0xcadaa63]
  40c7c0:	xor    al,0xe7
  40c7c2:	cmc    
  40c7c3:	xor    eax,0x264c6c44
  40c7c8:	xor    DWORD PTR [edi-0x7f],ecx
  40c7cb:	sti    
  40c7cc:	or     al,0x83
  40c7ce:	test   DWORD PTR [ebp+edx*8+0x6ccbd20c],ecx
  40c7d5:	fidiv  WORD PTR [esi]
  40c7d7:	adc    DWORD PTR [eax],0xfd9d1407
  40c7dd:	ds xchg esi,eax
  40c7df:	or     bl,bl
  40c7e1:	adc    ah,ah
  40c7e3:	xlat   BYTE PTR ds:[ebx]
  40c7e4:	xor    DWORD PTR ds:0xf1fe7726,ecx
  40c7ea:	pop    edi
  40c7eb:	mov    edi,0x1e721d63
  40c7f0:	jnp    0x40c836
  40c7f2:	dec    eax
  40c7f3:	ficomp WORD PTR [esi+0x3515a9ee]
  40c7f9:	in     eax,0xf6
  40c7fb:	xor    DWORD PTR [edi-0x72],ecx
  40c7fe:	adc    DWORD PTR [edi],edx
  40c800:	pop    eax
  40c801:	aam    0xbc
  40c803:	and    eax,0xbb1db70
  40c808:	pandn  mm4,QWORD PTR ds:0x38915258
  40c80f:	jo     0x40c799
  40c811:	loop   0x40c7dd
  40c813:	jno    0x40c7ae
  40c815:	add    esp,DWORD PTR [esi-0x7dc29f69]
  40c81b:	xlat   BYTE PTR ds:[ebx]
  40c81c:	lods   eax,DWORD PTR ds:[esi]
  40c81d:	cdq    
  40c81e:	mov    bl,0x9f
  40c820:	and    DWORD PTR [ebx-0x33],esi
  40c823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c824:	jmp    0xb23c9b88
  40c829:	xchg   ebx,eax
  40c82a:	popf   
  40c82b:	and    al,BYTE PTR [ebx]
  40c82d:	mov    cl,0x9e
  40c82f:	(bad)  [edx+0xf]
  40c832:	push   ecx
  40c833:	ret    0x83e6
  40c836:	sbb    al,0x24
  40c838:	ret    
  40c839:	jmp    0x40c86d
  40c83b:	inc    edx
  40c83c:	jns    0x40c83a
  40c83e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c83f:	jbe    0x40c80c
  40c841:	mov    cl,ah
  40c843:	add    esi,DWORD PTR [ebx+0x54d7428d]
  40c849:	retf   
  40c84a:	jbe    0x40c85c
  40c84c:	fiadd  DWORD PTR [esi-0x241e8608]
  40c852:	jae    0x40c88a
  40c854:	adc    eax,0xd0e3134a
  40c859:	neg    BYTE PTR [edx]
  40c85b:	aad    0x38
  40c85d:	jns    0x40c89d
  40c85f:	outs   dx,BYTE PTR cs:[esi]
  40c861:	sbb    esp,edx
  40c863:	pop    ebp
  40c864:	jmp    0x40c7ff
  40c866:	(bad)  
  40c867:	xchg   ecx,eax
  40c868:	pusha  
  40c869:	mov    bl,0xb7
  40c86b:	cmp    DWORD PTR [eax-0x1c073c16],ebx
  40c871:	jbe    0x40c8f0
  40c873:	ja     0x40c891
  40c875:	iret   
  40c876:	xor    BYTE PTR [edx+0x5b],dl
  40c879:	and    al,0xfd
  40c87b:	fadd   DWORD PTR [edx-0x62640b1]
  40c881:	rol    BYTE PTR [edx-0x77d43697],cl
  40c887:	sbb    DWORD PTR [eax],ebp
  40c889:	popf   
  40c88a:	or     DWORD PTR [eax-0x6fb81d94],esi
  40c890:	shl    ebp,1
  40c892:	mov    bl,0xd4
  40c894:	cmp    eax,0x3625ba1c
  40c899:	mul    ah
  40c89b:	pop    ebp
  40c89c:	xchg   DWORD PTR [esi],ebp
  40c89e:	sbb    ah,BYTE PTR [esi]
  40c8a0:	cmp    bh,BYTE PTR [eax-0x19]
  40c8a3:	cmp    dl,BYTE PTR [ecx]
  40c8a5:	scas   al,BYTE PTR es:[edi]
  40c8a6:	das    
  40c8a7:	js     0x40c837
  40c8a9:	sbb    DWORD PTR [edi+ecx*8+0x55],esp
  40c8ad:	popa   
  40c8ae:	aaa    
  40c8af:	sbb    ch,BYTE PTR [edi]
  40c8b1:	in     eax,0x66
  40c8b3:	pop    ecx
  40c8b4:	sub    DWORD PTR [ebp+0x10],esi
  40c8b7:	push   ds
  40c8b8:	jo     0x40c935
  40c8ba:	lahf   
  40c8bb:	(bad)  [edi+0x10]
  40c8be:	(bad)  
  40c8bf:	xchg   edx,eax
  40c8c0:	idiv   dh
  40c8c2:	js     0x40c8b5
  40c8c4:	cld    
  40c8c5:	mov    esi,0x3c966aec
  40c8ca:	lods   eax,DWORD PTR ss:[esi]
  40c8cc:	push   esp
  40c8cd:	jmp    0x8054459
  40c8d2:	into   
  40c8d3:	mov    esp,DWORD PTR [ebp+0x70]
  40c8d6:	push   ecx
  40c8d7:	cmp    eax,0x9a1afd2b
  40c8dc:	pop    ecx
  40c8dd:	lods   eax,DWORD PTR ds:[si]
  40c8df:	jbe    0x40c94d
  40c8e1:	out    0x4a,al
  40c8e3:	adc    BYTE PTR [ecx+eiz*4+0x1a],0x41
  40c8e8:	mov    dh,0x86
  40c8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8ec:	test   eax,0xe376da94
  40c8f1:	cmc    
  40c8f2:	add    bh,BYTE PTR [eax]
  40c8f4:	adc    bh,cl
  40c8f6:	dec    eax
  40c8f7:	mov    BYTE PTR [eax-0x1508ceb9],0x6d
  40c8fe:	pop    ebx
  40c8ff:	jecxz  0x40c8ce
  40c901:	icebp  
  40c902:	iret   
  40c903:	icebp  
  40c904:	xchg   ebp,ebp
  40c906:	shl    BYTE PTR [ebp-0xd],1
  40c909:	xchg   edi,eax
  40c90a:	(bad)  
  40c90c:	popa   
  40c90d:	jns    0x40c949
  40c90f:	dec    ecx
  40c910:	aas    
  40c911:	or     ah,BYTE PTR [edx+0x1da05980]
  40c917:	out    0xa2,al
  40c919:	jmp    0xc2acc8a6
  40c91e:	mov    DWORD PTR [ebx],esi
  40c920:	xchg   ebx,eax
  40c921:	mov    al,0xb5
  40c923:	ror    BYTE PTR [ecx+0x0],0x50
  40c927:	js     0x40c957
  40c929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c92a:	dec    edi
  40c92b:	xlat   BYTE PTR ds:[ebx]
  40c92c:	das    
  40c92d:	pop    ds
  40c92e:	inc    ebx
  40c92f:	addr16 push 0xcc23b79a
  40c935:	xlat   BYTE PTR ds:[ebx]
  40c936:	imul   esp,DWORD PTR [ebx+0x3b],0x1b
  40c93a:	stos   BYTE PTR es:[edi],al
  40c93b:	test   DWORD PTR [edx-0x5538f00b],0x3be41ee7
  40c945:	gs pop esi
  40c947:	cmp    cl,dl
  40c949:	shl    DWORD PTR [esi-0x67017b36],1
  40c94f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c950:	sub    al,0x7f
  40c952:	and    cl,BYTE PTR [edx]
  40c954:	mov    ebp,0x847ebc5e
  40c959:	or     bl,bl
  40c95b:	xchg   DWORD PTR [edi+0x2f089d42],ecx
  40c961:	pop    edi
  40c962:	repz adc al,ch
  40c965:	aad    0xf8
  40c967:	je     0x40c924
  40c969:	jno    0x40c91d
  40c96b:	test   eax,0x906e0876
  40c970:	jbe    0x40c996
  40c972:	retf   
  40c973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c974:	push   ecx
  40c975:	(bad)  
  40c976:	mov    al,0x95
  40c978:	fcmovnbe st,st(0)
  40c97a:	popa   
  40c97b:	(bad)  
  40c97c:	jae    0x40c98a
  40c97e:	pushf  
  40c97f:	pop    edx
  40c980:	jno    0x40c963
  40c982:	sub    eax,0x67eabf4d
  40c987:	out    dx,eax
  40c988:	mov    DWORD PTR [edx+0x71],edi
  40c98b:	in     al,0xee
  40c98d:	mov    gs,WORD PTR fs:[eax+0x21cce915]
  40c994:	mov    dl,0x3
  40c996:	into   
  40c997:	fdivr  QWORD PTR [ebp+0x4795c09a]
  40c99d:	out    dx,al
  40c99e:	xor    edx,edi
  40c9a0:	mov    ecx,0xd0392d5a
  40c9a5:	cli    
  40c9a6:	cmp    BYTE PTR ss:[eax+0x3b460041],cl
  40c9ad:	test   eax,0x958a949f
  40c9b2:	into   
  40c9b3:	mov    bl,0xbb
  40c9b5:	pop    esp
  40c9b6:	out    dx,al
  40c9b7:	xchg   edx,eax
  40c9b8:	jb     0x40c99b
  40c9ba:	jb     0x40c9ec
  40c9bc:	sub    esp,DWORD PTR [edi]
  40c9be:	mov    ds:0x764aca17,eax
  40c9c3:	pop    eax
  40c9c4:	and    al,0x58
  40c9c6:	es dec ecx
  40c9c8:	adc    esi,DWORD PTR [edi+0x46]
  40c9cb:	mov    esp,0x31f46fa5
  40c9d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9d1:	(bad)  [esi+0x44b9ab32]
  40c9d7:	cmp    BYTE PTR [esi],0xe5
  40c9da:	ja     0x40c960
  40c9dc:	cmp    esi,DWORD PTR [ebx+0x17ea53e3]
  40c9e2:	push   0xa6365b47
  40c9e7:	sbb    DWORD PTR [eax-0x40],ebp
  40c9ea:	int3   
  40c9eb:	xchg   ecx,eax
  40c9ec:	jns    0x40c9b5
  40c9ee:	jb     0x40ca19
  40c9f0:	mov    ebp,0xbb48d961
  40c9f5:	dec    ebp
  40c9f6:	adc    BYTE PTR [edx+0x124e31b2],cl
  40c9fc:	iret   
  40c9fd:	xor    al,0x57
  40c9ff:	inc    edx
  40ca00:	lds    edx,FWORD PTR [edi-0x63]
  40ca03:	lock push 0x5
  40ca06:	sub    al,0xc
  40ca08:	xor    ecx,eax
  40ca0a:	stos   BYTE PTR es:[edi],al
  40ca0b:	jg     0x40c9cd
  40ca0d:	popf   
  40ca0e:	push   esp
  40ca0f:	ja     0x40ca29
  40ca11:	cs aaa 
  40ca13:	mov    esp,0x7c75e57f
  40ca18:	ins    BYTE PTR es:[edi],dx
  40ca19:	sbb    DWORD PTR [ebx],0xffffffa4
  40ca1c:	push   ecx
  40ca1d:	dec    edi
  40ca1e:	or     al,0x5a
  40ca20:	in     eax,dx
  40ca21:	sbb    eax,0x74976c81
  40ca26:	add    bl,ch
  40ca28:	or     eax,0x407c5275
  40ca2d:	sub    DWORD PTR [edi],ebp
  40ca2f:	popa   
  40ca30:	inc    esp
  40ca31:	jg     0x40ca1b
  40ca33:	or     DWORD PTR [edx],esi
  40ca35:	inc    eax
  40ca36:	mov    esi,0x9dea92f5
  40ca3b:	outs   dx,BYTE PTR ds:[esi]
  40ca3c:	fmul   QWORD PTR [edx-0x59]
  40ca3f:	in     eax,dx
  40ca40:	pop    ss
  40ca41:	(bad)  
  40ca42:	pop    eax
  40ca43:	xchg   DWORD PTR [ecx],ecx
  40ca45:	aaa    
  40ca46:	xor    BYTE PTR [esi],ah
  40ca48:	out    dx,al
  40ca49:	leave  
  40ca4a:	lea    ebp,ds:0x42269daa
  40ca50:	mov    esp,DWORD PTR [esp+ecx*4+0x5d24801b]
  40ca57:	out    0x16,al
  40ca59:	add    esi,esi
  40ca5b:	push   ecx
  40ca5c:	or     al,0xe4
  40ca5e:	mov    BYTE PTR [ebx+0x2d],bl
  40ca61:	mov    ds:0xbbc916e8,eax
  40ca66:	push   ebp
  40ca67:	cmc    
  40ca68:	es aas 
  40ca6a:	lods   al,BYTE PTR ds:[esi]
  40ca6b:	add    BYTE PTR [esp+edi*8-0x7877a43e],dl
  40ca72:	sti    
  40ca73:	sub    edi,DWORD PTR ds:0x2f9b13bf
  40ca79:	inc    edi
  40ca7a:	xchg   BYTE PTR [edx+0x793ad046],dl
  40ca80:	outs   dx,DWORD PTR ds:[esi]
  40ca81:	mov    ecx,0xb24fa0fe
  40ca86:	sbb    DWORD PTR [edi+edi*2],edx
  40ca89:	add    BYTE PTR [edx+0x71f32d7e],bl
  40ca8f:	fisubr DWORD PTR [esi]
  40ca91:	push   ds
  40ca92:	test   BYTE PTR [edx-0x11],dh
  40ca95:	mov    ch,0x40
  40ca97:	pop    ecx
  40ca98:	outs   dx,DWORD PTR ds:[esi]
  40ca99:	adc    BYTE PTR [ebp*1-0x2fd71440],dh
  40caa0:	jae    0x40caef
  40caa2:	aam    0xb8
  40caa4:	mov    WORD PTR [edx+0x47],fs
  40caa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caa8:	(bad)  
  40caaa:	rcl    DWORD PTR [ebx-0x25],0x8f
  40caae:	bound  edx,QWORD PTR [ecx-0x48ab78fb]
  40cab4:	dec    esi
  40cab5:	add    esi,DWORD PTR ds:0x43d33f56
  40cabb:	push   ebp
  40cabc:	xchg   ebx,eax
  40cabd:	pand   mm6,QWORD PTR [esi]
  40cac0:	mov    BYTE PTR [esp+edx*1-0x2ff67e7],bh
  40cac7:	adc    al,0x74
  40cac9:	aad    0xdd
  40cacb:	or     eax,0x51c6c029
  40cad0:	xor    al,0x76
  40cad2:	(bad)  
  40cad4:	xchg   ebx,eax
  40cad5:	inc    esp
  40cad6:	fild   DWORD PTR [edx]
  40cad8:	or     edx,edi
  40cada:	daa    
  40cadb:	(bad)  
  40cadc:	stos   BYTE PTR es:[edi],al
  40cadd:	daa    
  40cade:	xor    bl,BYTE PTR [edi-0x1edefadc]
  40cae4:	lods   al,BYTE PTR ds:[esi]
  40cae5:	xor    DWORD PTR [ebx-0x24],ebx
  40cae8:	adc    esi,edx
  40caea:	fcmovne st,st(3)
  40caec:	xchg   BYTE PTR [esi],dl
  40caee:	adc    al,0x39
  40caf0:	or     BYTE PTR [eax+0x3f],ch
  40caf3:	test   eax,0xaeb39c51
  40caf8:	gs jmp 0xf28d93cc
  40cafe:	cmc    
  40caff:	sbb    ebp,esp
  40cb01:	sti    
  40cb02:	adc    eax,0x8c301652
  40cb07:	jae    0x40cb54
  40cb09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb0a:	mov    ds:0x96a00a1e,eax
  40cb0f:	aad    0xa8
  40cb11:	add    esp,DWORD PTR [ebx-0x13a99474]
  40cb17:	dec    ebx
  40cb18:	fiadd  WORD PTR [eax-0x60]
  40cb1b:	icebp  
  40cb1c:	cmp    BYTE PTR [ecx+0x4d],dh
  40cb1f:	and    BYTE PTR [edi-0x15f41d96],dl
  40cb25:	xchg   esi,eax
  40cb26:	mov    ecx,0xd4288af4
  40cb2b:	adc    BYTE PTR [ecx-0x77],0x89
  40cb2f:	outs   dx,BYTE PTR ds:[esi]
  40cb30:	dec    ecx
  40cb31:	div    BYTE PTR [ecx]
  40cb33:	(bad)  
  40cb35:	dec    esp
  40cb36:	bound  edi,QWORD PTR [ebx]
  40cb38:	inc    edx
  40cb39:	call   0x7e25:0x60d33067
  40cb40:	push   eax
  40cb41:	outs   dx,BYTE PTR ds:[esi]
  40cb42:	in     eax,0xce
  40cb44:	jb     0x40cad8
  40cb46:	or     eax,0x8cffbbbe
  40cb4b:	cmp    esp,eax
  40cb4d:	mov    BYTE PTR [edi],al
  40cb4f:	ffree  st(2)
  40cb51:	jmp    0xeebf:0x89eba5c9
  40cb58:	outs   dx,BYTE PTR ds:[esi]
  40cb59:	dec    ebp
  40cb5a:	call   0xcf1a48d5
  40cb5f:	imul   edi,DWORD PTR [edx-0x211b8df8],0xd89b00fa
  40cb69:	shr    DWORD PTR [ebx],1
  40cb6b:	push   eax
  40cb6c:	dec    esi
  40cb6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb6e:	fdiv   QWORD PTR [ecx]
  40cb70:	fsub   st,st(1)
  40cb72:	loop   0x40cbcc
  40cb74:	mov    edi,0x4be5be18
  40cb79:	push   esp
  40cb7a:	mov    ebx,0x9bad0b1
  40cb7f:	bnd jno 0x40cb05
  40cb82:	fisubr DWORD PTR [ebx]
  40cb84:	dec    edx
  40cb85:	ror    DWORD PTR [ebp+0x73],1
  40cb88:	or     DWORD PTR [ebx-0x73],edi
  40cb8b:	cmp    al,0xeb
  40cb8d:	xchg   edi,eax
  40cb8e:	pusha  
  40cb8f:	or     BYTE PTR [edi],bl
  40cb91:	push   es
  40cb92:	fdivr  st,st(3)
  40cb94:	arpl   bp,bx
  40cb96:	sti    
  40cb97:	sbb    al,0xb2
  40cb99:	mov    WORD PTR [ecx],gs
  40cb9b:	(bad)  ss:[edi+0x6]
  40cb9f:	cli    
  40cba0:	push   ds
  40cba1:	retf   0x8ed1
  40cba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cba5:	fs jge 0x40cbc4
  40cba8:	leave  
  40cba9:	lods   al,BYTE PTR ds:[esi]
  40cbaa:	shl    BYTE PTR [esi-0x6c7de0a6],cl
  40cbb0:	es inc esp
  40cbb2:	ret    
  40cbb3:	adc    al,bh
  40cbb5:	(bad)  
  40cbb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbb7:	test   eax,0x95c86440
  40cbbc:	repz or al,0xdc
  40cbbf:	push   ebp
  40cbc0:	mov    dh,0x95
  40cbc2:	jne    0x40cc2d
  40cbc4:	xor    dl,bh
  40cbc6:	into   
  40cbc7:	cmc    
  40cbc8:	fcom   st(6)
  40cbca:	fild   DWORD PTR fs:[edx-0x3]
  40cbce:	fs push cs
  40cbd0:	cmp    ecx,DWORD PTR ds:0x83a78b42
  40cbd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbd7:	in     al,0x47
  40cbd9:	in     al,0xce
  40cbdb:	stos   BYTE PTR es:[edi],al
  40cbdc:	sub    edx,DWORD PTR [eax+edx*4-0x203a150c]
  40cbe3:	pop    ebp
  40cbe4:	arpl   WORD PTR [ebx],cx
  40cbe6:	(bad)
  40cbe9:	mov    ah,BYTE PTR [ebp+0x4264db07]
  40cbef:	mov    ebx,0x1a969910
  40cbf4:	xlat   BYTE PTR ds:[ebx]
  40cbf5:	pop    si
  40cbf7:	mov    dh,0x7
  40cbf9:	add    eax,0x9ec71f7e
  40cbfe:	cmp    ebp,DWORD PTR [edi-0x3830ac9a]
  40cc04:	dec    esp
  40cc05:	and    al,0xf
  40cc07:	cmp    eax,0x7c128d9f
  40cc0c:	mov    DWORD PTR [edi],0xf88b3f94
  40cc12:	cld    
  40cc13:	icebp  
  40cc14:	sbb    ecx,eax
  40cc16:	mov    al,ds:0xc590d509
  40cc1b:	js     0x40cc85
  40cc1d:	xor    bl,BYTE PTR ds:0x87d3a54f
  40cc23:	or     al,0x1d
  40cc25:	lds    ebp,FWORD PTR [ebp-0x60d88e8f]
  40cc2b:	(bad)  [edi]
  40cc2d:	push   ebp
  40cc2e:	outs   dx,BYTE PTR ds:[esi]
  40cc2f:	pop    esp
  40cc30:	and    DWORD PTR [edi+0x7],esi
  40cc33:	push   es
  40cc34:	mov    esp,0xe85b516c
  40cc39:	sbb    BYTE PTR [esi+0x9],dl
  40cc3c:	cmp    ebp,DWORD PTR [eiz*2+0x1e8a9057]
  40cc43:	vmread DWORD PTR [ebx-0x1cfddac3],edx
  40cc4a:	adc    al,0xc1
  40cc4c:	pop    ss
  40cc4d:	ror    DWORD PTR [esi+0x37],0x1c
  40cc51:	sbb    cl,ah
  40cc53:	jmp    FWORD PTR [esp+edx*8]
  40cc56:	mov    dh,0x82
  40cc58:	push   esi
  40cc59:	adc    eax,esp
  40cc5b:	sub    al,BYTE PTR [edx+esi*8+0xf]
  40cc5f:	sbb    eax,0xad6a412e
  40cc64:	test   al,dl
  40cc66:	shl    DWORD PTR [esi],1
  40cc68:	jmp    0x40cc3c
  40cc6a:	inc    esp
  40cc6b:	push   ds
  40cc6c:	sahf   
  40cc6d:	add    ch,BYTE PTR [ebx+edx*4-0x4c]
  40cc71:	scas   eax,DWORD PTR es:[edi]
  40cc72:	cs mov dl,0xec
  40cc75:	or     edx,ebx
  40cc77:	add    al,0xfd
  40cc79:	inc    ebp
  40cc7a:	cmp    eax,0x2c0b6b99
  40cc7f:	inc    esp
  40cc80:	sti    
  40cc81:	xor    BYTE PTR [eax+ecx*4+0x1f],bh
  40cc85:	out    0xde,al
  40cc87:	shr    DWORD PTR [ecx+0xc],cl
  40cc8a:	loope  0x40cc2f
  40cc8c:	pop    ss
  40cc8d:	jge    0x40cc71
  40cc8f:	push   cs
  40cc90:	sbb    esi,DWORD PTR [edx+0x59]
  40cc93:	xor    BYTE PTR [ecx-0x5fdac6f0],0xbe
  40cc9a:	jg     0x40cc64
  40cc9c:	or     eax,0xb2a43601
  40cca1:	ins    DWORD PTR es:[edi],dx
  40cca2:	lock mov edi,0xb12de1a
  40cca8:	dec    esp
  40cca9:	outs   dx,DWORD PTR ds:[esi]
  40ccaa:	imul   eax,ecx,0x4a
  40ccad:	das    
  40ccae:	xor    al,BYTE PTR [ebx+eax*1-0x77]
  40ccb2:	jg     0x40cd17
  40ccb4:	inc    ebx
  40ccb5:	leave  
  40ccb6:	inc    ecx
  40ccb7:	xor    DWORD PTR [ebx],esp
  40ccb9:	pop    ecx
  40ccba:	pop    ds
  40ccbb:	mov    ?,ebx
  40ccbd:	stos   BYTE PTR es:[edi],al
  40ccbe:	xor    eax,0x88d0827d
  40ccc3:	xchg   ebx,eax
  40ccc4:	je     0x40cd05
  40ccc6:	dec    esp
  40ccc7:	hlt    
  40ccc8:	das    
  40ccc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccca:	pop    ecx
  40cccb:	jnp    0x40cce3
  40cccd:	adc    BYTE PTR [ecx],bh
  40cccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd0:	ror    ch,cl
  40ccd2:	out    dx,al
  40ccd3:	(bad)  
  40ccd4:	(bad)  
  40ccd5:	sti    
  40ccd6:	lock sbb edx,DWORD PTR [ebx-0x73]
  40ccda:	in     eax,0x34
  40ccdc:	into   
  40ccdd:	add    eax,DWORD PTR [edx+0x13c5af4e]
  40cce3:	sahf   
  40cce4:	dec    esi
  40cce5:	mov    esp,0x39314969
  40ccea:	jp     0x40cc6f
  40ccec:	push   es
  40cced:	fstp   DWORD PTR [edx+0x62]
  40ccf0:	push   esp
  40ccf1:	push   ss
  40ccf2:	je     0x40cd06
  40ccf4:	pop    ds
  40ccf5:	loope  0x40cd33
  40ccf7:	mov    dh,0x89
  40ccf9:	ins    BYTE PTR es:[edi],dx
  40ccfa:	out    dx,eax
  40ccfb:	into   
  40ccfc:	stos   DWORD PTR es:[edi],eax
  40ccfd:	jns    0x40cd16
  40ccff:	xchg   BYTE PTR [ebp-0x3ab7cb87],bl
  40cd05:	add    ebx,eax
  40cd07:	and    dh,BYTE PTR [esi-0x1a]
  40cd0a:	jno    0x40cd4d
  40cd0c:	xchg   DWORD PTR [eax+eax*4-0x7a],ebp
  40cd10:	sbb    edi,DWORD PTR ds:0x4d45a34f
  40cd16:	add    al,0x5d
  40cd18:	inc    DWORD PTR [edx+0x4c34e9f2]
  40cd1e:	dec    esi
  40cd1f:	gs jno 0x40cce3
  40cd22:	jg     0x40cd0d
  40cd24:	sub    eax,ecx
  40cd26:	pusha  
  40cd27:	rol    DWORD PTR [edx+0x597d3c0a],0x7e
  40cd2e:	fstp   DWORD PTR [eax+0x8]
  40cd31:	cli    
  40cd32:	jge    0x40cd2e
  40cd34:	test   DWORD PTR [ebx+0x5973b53b],edx
  40cd3a:	or     DWORD PTR [edi+eax*2-0x11],esp
  40cd3e:	mov    eax,ds:0x8f72acda
  40cd43:	inc    DWORD PTR [esp+ebp*2+0x493e40a1]
  40cd4a:	mov    ds:0xe3c73c25,eax
  40cd4f:	mov    ch,0x80
  40cd51:	sub    BYTE PTR [ebx+eax*1+0x4cefabee],bh
  40cd58:	mov    gs,WORD PTR [ecx]
  40cd5a:	call   0xde894fe4
  40cd5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd60:	aam    0xee
  40cd62:	loop   0x40cd6e
  40cd64:	cdq    
  40cd65:	sbb    cl,0xed
  40cd68:	xchg   edx,eax
  40cd69:	test   BYTE PTR [esi+0x15],0x83
  40cd6d:	sub    BYTE PTR [ebp+0x46],ah
  40cd70:	sbb    bl,BYTE PTR [edi]
  40cd72:	sbb    BYTE PTR [esi],ch
  40cd74:	add    ebx,DWORD PTR [esi+0x7eaeb676]
  40cd7a:	jl     0x40cd30
  40cd7c:	mov    ds:0x1ddc4004,al
  40cd81:	test   ah,ch
  40cd83:	or     al,0xd6
  40cd85:	add    bh,BYTE PTR [ecx-0x3e]
  40cd88:	jne    0x40cd36
  40cd8a:	pop    sp
  40cd8c:	pop    es
  40cd8d:	jnp    0x40cdc3
  40cd8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd90:	cld    
  40cd91:	cli    
  40cd92:	cli    
  40cd93:	lea    esi,[ebp+0xc]
  40cd96:	pop    esp
  40cd97:	dec    edx
  40cd98:	jecxz  0x40cd7a
  40cd9a:	xchg   ebx,eax
  40cd9b:	loope  0x40cd57
  40cd9d:	mov    al,0xd5
  40cd9f:	push   eax
  40cda0:	jge    0x40ce08
  40cda2:	mov    eax,ds:0xaaba4c0c
  40cda7:	ror    BYTE PTR [ebx-0x783bf42d],1
  40cdad:	pop    esi
  40cdae:	mov    ds:0xc3d6c9d4,eax
  40cdb3:	mov    al,0xfc
  40cdb5:	(bad)  
  40cdb6:	ficom  WORD PTR [esi-0x347d0d0b]
  40cdbc:	mov    edi,0xab140a7c
  40cdc1:	call   0xd900133b
  40cdc6:	mov    ch,0xf0
  40cdc8:	call   0x7f81:0x5d041cf2
  40cdcf:	cmp    ah,BYTE PTR [esi-0x7d]
  40cdd2:	aam    0xfa
  40cdd4:	outs   dx,BYTE PTR ds:[esi]
  40cdd5:	push   eax
  40cdd6:	mov    ecx,0xaca5817e
  40cddb:	inc    eax
  40cddc:	pop    ds
  40cddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdde:	sub    bh,BYTE PTR [eax]
  40cde0:	cli    
  40cde1:	ror    BYTE PTR [esi],1
  40cde3:	xor    DWORD PTR ds:0x60b7c496,eax
  40cde9:	xchg   DWORD PTR [edx+0x63],edx
  40cdec:	(bad)  
  40cded:	loop   0x40cdc9
  40cdef:	pop    esi
  40cdf0:	ret    
  40cdf1:	dec    esp
  40cdf2:	adc    BYTE PTR [edx],bh
  40cdf4:	add    dl,ah
  40cdf6:	push   es
  40cdf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdf8:	xchg   BYTE PTR [eax-0x69],al
  40cdfb:	iret   
  40cdfc:	mov    cl,0xa2
  40cdfe:	ret    
  40cdff:	test   eax,0xc73c8691
  40ce04:	mov    bl,0x89
  40ce06:	xlat   BYTE PTR ds:[bx]
  40ce08:	xchg   DWORD PTR [edi+0x7811eb42],edi
  40ce0e:	push   ecx
  40ce0f:	(bad)  
  40ce10:	fild   DWORD PTR [edx+0x64]
  40ce13:	xlat   BYTE PTR ds:[ebx]
  40ce14:	adc    BYTE PTR [ebp+0xae718c0],0xdd
  40ce1b:	mov    ecx,0x415902d9
  40ce20:	adc    ecx,esp
  40ce22:	xchg   edx,eax
  40ce23:	mov    BYTE PTR [eax-0x5f],ah
  40ce26:	(bad)
  40ce2a:	cmp    eax,DWORD PTR [edi]
  40ce2c:	xchg   esp,eax
  40ce2d:	imul   edi,ecx,0xfffffff2
  40ce30:	das    
  40ce31:	jg     0x40ce3f
  40ce33:	pop    es
  40ce34:	inc    eax
  40ce35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce36:	rcr    ecx,1
  40ce38:	scas   al,BYTE PTR es:[edi]
  40ce39:	(bad)  
  40ce3a:	outs   dx,DWORD PTR ds:[esi]
  40ce3b:	xor    DWORD PTR [eax+esi*4],edx
  40ce3e:	pop    ebx
  40ce3f:	push   0x239d5198
  40ce44:	mov    ebp,0xb5ab6b0b
  40ce49:	cmp    DWORD PTR [edx+ebx*8],esi
  40ce4c:	xor    ebp,eax
  40ce4e:	jg     0x40cec0
  40ce50:	xlat   BYTE PTR ds:[ebx]
  40ce51:	inc    ecx
  40ce52:	xchg   ebp,eax
  40ce53:	cmp    ah,BYTE PTR [ebx+edi*4]
  40ce56:	jbe    0x40ce61
  40ce58:	mov    eax,ds:0xac815889
  40ce5d:	addr16 mov ds:0xe36f,al
  40ce61:	push   esi
  40ce62:	push   ds
  40ce63:	jp     0x40ce35
  40ce65:	or     dh,BYTE PTR [edx-0x1e]
  40ce68:	lods   al,BYTE PTR ds:[esi]
  40ce69:	dec    edi
  40ce6a:	jae    0x40ce23
  40ce6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce6d:	cmp    cl,BYTE PTR [ebp+0x2]
  40ce70:	stos   BYTE PTR es:[edi],al
  40ce71:	and    eax,esi
  40ce73:	lods   eax,DWORD PTR ds:[esi]
  40ce74:	sbb    DWORD PTR [ecx+0xf1fb470],ecx
  40ce7a:	add    al,0x9d
  40ce7c:	lds    edx,FWORD PTR [ecx-0x703993cf]
  40ce82:	xor    al,0x3a
  40ce84:	sbb    DWORD PTR [ecx],edi
  40ce86:	xchg   edx,eax
  40ce87:	fucom  st(3)
  40ce89:	aad    0x25
  40ce8b:	xchg   esp,eax
  40ce8c:	ficomp WORD PTR [ebp-0x4b319dd]
  40ce92:	mov    esp,0x57bc9356
  40ce97:	mov    edx,0x821c436f
  40ce9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce9d:	jge    0x40ce2c
  40ce9f:	push   ecx
  40cea0:	mov    ah,BYTE PTR [ecx-0x267b732d]
  40cea6:	out    0xf5,eax
  40cea8:	mov    edi,0xeb423a6b
  40cead:	scas   eax,DWORD PTR es:[edi]
  40ceae:	loopne 0x40cf1d
  40ceb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb1:	pop    esp
  40ceb2:	loopne 0x40cea4
  40ceb4:	(bad)  
  40ceb5:	std    
  40ceb6:	fadd   QWORD PTR [edi+0x74ce8ff5]
  40cebc:	into   
  40cebd:	test   DWORD PTR [eax+0x508e0edd],ecx
  40cec3:	es dec esp
  40cec5:	aam    0xe
  40cec7:	fsub   DWORD PTR [edi+0x1a5e1193]
  40cecd:	xchg   ebx,eax
  40cece:	imul   ebp,DWORD PTR [ebx],0x2fdd9513
  40ced4:	adc    DWORD PTR [ebp-0x6c24a3e6],esi
  40ceda:	pop    esi
  40cedb:	mov    dh,0x95
  40cedd:	adc    bl,dh
  40cedf:	jg     0x40ceb8
  40cee1:	in     eax,0x75
  40cee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cee4:	retf   
  40cee5:	mov    ebp,0x9f64d1a2
  40ceea:	mov    DWORD PTR [edx],esp
  40ceec:	add    al,0x6e
  40ceee:	enter  0x9772,0xc4
  40cef2:	add    DWORD PTR [edi-0x3201a374],ebp
  40cef8:	xchg   esi,eax
  40cef9:	in     eax,0xdc
  40cefb:	and    BYTE PTR [edi-0x41],0xdf
  40ceff:	sub    al,0x25
  40cf01:	test   BYTE PTR [edi],cl
  40cf03:	push   cs
  40cf04:	ret    0x4705
  40cf07:	aam    0x86
  40cf09:	inc    edi
  40cf0a:	hlt    
  40cf0b:	and    BYTE PTR [edx-0x48fd4cda],bh
  40cf11:	sub    DWORD PTR [ebx-0x70],eax
  40cf14:	fcom   QWORD PTR [edi-0x6d412e3d]
  40cf1a:	cwde   
  40cf1b:	shr    ebp,1
  40cf1d:	clc    
  40cf1e:	mov    esp,0x23a6d350
  40cf23:	push   ss
  40cf24:	sub    DWORD PTR [ebx-0x75f6ea64],esi
  40cf2a:	dec    edi
  40cf2b:	add    DWORD PTR [ecx+0x7c54a4a6],0x27b8536d
  40cf35:	fnsave [ecx-0xd]
  40cf38:	das    
  40cf39:	ficom  DWORD PTR [edx+0x3363a8b0]
  40cf3f:	fwait
  40cf40:	or     al,BYTE PTR [ebp-0x7f]
  40cf43:	sbb    bh,BYTE PTR [edi+0xc]
  40cf46:	jns    0x40cf81
  40cf48:	inc    edx
  40cf49:	mov    esp,0x80ee2a1e
  40cf4e:	jmp    0x40cf5f
  40cf50:	pop    ebp
  40cf51:	adc    esp,0xffffffdc
  40cf54:	mov    ebx,0x3fd3da30
  40cf59:	pop    eax
  40cf5a:	not    BYTE PTR [ebx]
  40cf5c:	mov    bh,0xda
  40cf5e:	pop    edx
  40cf5f:	xor    BYTE PTR [eax],ah
  40cf61:	add    DWORD PTR [edi+edi*8],ecx
  40cf64:	out    dx,eax
  40cf65:	pop    edi
  40cf66:	or     cl,BYTE PTR [eax+0xf]
  40cf69:	adc    eax,0x4cde1c7
  40cf6e:	mov    esp,0x1cd654a8
  40cf73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf74:	addr16 inc edi
  40cf76:	push   0x42
  40cf78:	into   
  40cf79:	cmc    
  40cf7a:	xchg   ebp,eax
  40cf7b:	stos   DWORD PTR es:[edi],eax
  40cf7c:	inc    ecx
  40cf7d:	jmp    0x31f606b9
  40cf82:	ror    DWORD PTR [edi],0xdf
  40cf85:	mov    ch,0x35
  40cf87:	dec    eax
  40cf88:	call   0x533be8ae
  40cf8d:	(bad)
  40cf90:	(bad)  
  40cf91:	int    0xd5
  40cf93:	lods   al,BYTE PTR ds:[esi]
  40cf94:	jmp    0xafcd4fee
  40cf99:	push   ebx
  40cf9a:	ret    0xae43
  40cf9d:	adc    bh,BYTE PTR [ecx-0x2c3c2659]
  40cfa3:	adc    eax,0x40015833
  40cfa8:	call   0x194b:0xfabdbea1
  40cfaf:	rcl    ebp,cl
  40cfb1:	pop    edx
  40cfb2:	shl    BYTE PTR [edx+0x5c],0x1b
  40cfb6:	jo     0x40cf40
  40cfb8:	mov    ds:0x7a2d3562,al
  40cfbd:	test   al,0x96
  40cfbf:	push   eax
  40cfc0:	pop    esi
  40cfc1:	loopne 0x40cfba
  40cfc3:	add    eax,0xad0964db
  40cfc8:	mov    DWORD PTR [ebx+esi*2-0x5c942408],eax
  40cfcf:	pop    eax
  40cfd0:	mov    WORD PTR [eax+0x2e1d0b72],?
  40cfd6:	mov    dh,0xe9
  40cfd8:	adc    BYTE PTR [ebx+0x6bf1cf50],bh
  40cfde:	inc    ebx
  40cfdf:	out    0x42,al
  40cfe1:	push   esi
  40cfe2:	test   al,0xf
  40cfe4:	pop    ebp
  40cfe5:	jecxz  0x40d04d
  40cfe7:	dec    esi
  40cfe8:	xor    ah,BYTE PTR [ebx-0xbb743b2]
  40cfee:	mov    ebx,esp
  40cff0:	mov    ecx,0x505c6bfd
  40cff5:	ret    
  40cff6:	mov    esp,0x8c40d8d1
  40cffb:	ret    0x978b
  40cffe:	xchg   ecx,eax
  40cfff:	sbb    al,0x19
  40d001:	call   0xd91f:0xb85d51ec
  40d008:	adc    eax,0x77255ddf
  40d00d:	push   eax
  40d00e:	push   ss
  40d00f:	sbb    DWORD PTR [edi-0x73],ebx
  40d012:	jge    0x40d03c
  40d014:	sub    al,0xc6
  40d016:	lods   eax,DWORD PTR ds:[esi]
  40d017:	mov    al,ds:0x8474d9b7
  40d01c:	pop    edx
  40d01d:	fiadd  DWORD PTR [eax]
  40d01f:	mov    ebx,0x19e94b96
  40d024:	sub    DWORD PTR [edx+0x24],0xffffffe8
  40d028:	loop   0x40d013
  40d02a:	aas    
  40d02b:	sub    BYTE PTR [eax+0x16],al
  40d02e:	sub    eax,0xc9683b89
  40d033:	adc    eax,0x7031edbb
  40d038:	sbb    BYTE PTR [edi+0x1f],ch
  40d03b:	cmp    DWORD PTR [eax],0x5b24a105
  40d041:	mov    al,0x5a
  40d043:	and    DWORD PTR [ebx+0x454405d1],ebp
  40d049:	nop
  40d04a:	aad    0x11
  40d04c:	xchg   DWORD PTR [eax-0x64877688],ebx
  40d052:	fnstsw ax
  40d054:	outs   dx,BYTE PTR ds:[esi]
  40d055:	mov    bl,BYTE PTR [edi-0x4054327a]
  40d05b:	mov    al,ds:0xdff22e95
  40d060:	inc    ebp
  40d061:	adc    BYTE PTR ds:0x8f464677,ah
  40d067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d068:	sbb    al,0x37
  40d06a:	cmp    bl,BYTE PTR [ecx-0x348cc044]
  40d070:	and    eax,0x738f250a
  40d075:	or     eax,0x3aba97e9
  40d07a:	popf   
  40d07b:	jns    0x40d0b2
  40d07d:	movzx  ecx,BYTE PTR [edi-0x7b217d18]
  40d084:	out    0x31,eax
  40d086:	sbb    al,0xa1
  40d088:	xor    eax,DWORD PTR [ebx-0x41c97704]
  40d08e:	xor    eax,0x48959395
  40d093:	stc    
  40d094:	add    eax,0x5c4ecc95
  40d099:	shr    BYTE PTR [eax],1
  40d09b:	dec    ebp
  40d09c:	shr    DWORD PTR [eax+0x332ec8ad],cl
  40d0a2:	out    0x54,eax
  40d0a4:	sub    eax,0x678b4fe3
  40d0a9:	push   esp
  40d0aa:	nop
  40d0ab:	mov    cl,0x1e
  40d0ad:	es dec edi
  40d0af:	jnp    0x40d0ae
  40d0b1:	xlat   BYTE PTR ds:[ebx]
  40d0b2:	outs   dx,DWORD PTR ds:[esi]
  40d0b3:	hlt    
  40d0b4:	sub    eax,0x933a711e
  40d0b9:	in     al,dx
  40d0ba:	xor    bh,BYTE PTR [ebp+0x4c]
  40d0bd:	push   cs
  40d0be:	inc    BYTE PTR [edi-0x56]
  40d0c1:	push   cs
  40d0c2:	mov    eax,cs
  40d0c4:	mov    ch,0xbe
  40d0c6:	mov    ebp,0xee3e1025
  40d0cb:	adc    cl,BYTE PTR [si-0x4837]
  40d0d0:	xchg   BYTE PTR [esi],ch
  40d0d2:	sar    BYTE PTR ds:0x3cf53da1,1
  40d0d8:	(bad)  
  40d0d9:	xor    DWORD PTR [edx+0x7d],ebp
  40d0dc:	mov    DWORD PTR [eax+0x3b],esi
  40d0df:	inc    eax
  40d0e0:	mov    ds:0x388d91bc,eax
  40d0e5:	and    al,0xf0
  40d0e7:	aas    
  40d0e8:	pop    ecx
  40d0e9:	sbb    DWORD PTR [esi],esp
  40d0eb:	add    eax,0x44972517
  40d0f0:	jge    0x40d07e
  40d0f2:	jns    0x40d154
  40d0f4:	data16 daa 
  40d0f6:	mov    ecx,0x46516a1e
  40d0fb:	faddp  st(2),st
  40d0fd:	addr16 popa 
  40d0ff:	sbb    edi,esp
  40d101:	mov    ah,0x9b
  40d103:	or     ch,BYTE PTR [eax]
  40d105:	add    DWORD PTR [eax+0x6bac60b3],edi
  40d10b:	and    ah,BYTE PTR [edi+edx*1]
  40d10e:	jbe    0x40d0f2
  40d110:	xchg   esi,eax
  40d111:	call   0x5ae9c6e7
  40d116:	fwait
  40d117:	(bad)  
  40d118:	pop    esi
  40d119:	dec    edx
  40d11a:	jne    0x40d13c
  40d11c:	adc    al,dh
  40d11e:	xor    dh,cl
  40d120:	and    al,BYTE PTR [ecx]
  40d122:	and    al,0x62
  40d124:	and    ebp,ebp
  40d126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d127:	inc    ebp
  40d128:	sub    DWORD PTR [edx],esp
  40d12a:	lahf   
  40d12b:	lds    ecx,FWORD PTR [edi+ebx*4-0x56]
  40d12f:	fmul   DWORD PTR [ebx+eax*4+0xa]
  40d133:	adc    al,0xbd
  40d135:	dec    edx
  40d136:	xlat   BYTE PTR ds:[ebx]
  40d137:	pop    ss
  40d138:	push   ecx
  40d139:	dec    edi
  40d13a:	push   ds
  40d13b:	pop    ebp
  40d13c:	mov    ebp,0x6336f4ef
  40d141:	outs   dx,DWORD PTR ds:[esi]
  40d142:	jae    0x40d0e8
  40d144:	clc    
  40d145:	inc    eax
  40d146:	sub    BYTE PTR [edx-0x55],dh
  40d149:	lds    esp,FWORD PTR [ebx+0x2f]
  40d14c:	sbb    DWORD PTR [edi+0x4be0ee00],eax
  40d152:	mov    ds:0x8bef0343,eax
  40d157:	xchg   esi,eax
  40d158:	mov    al,BYTE PTR [eax]
  40d15a:	hlt    
  40d15b:	push   0xffffffb0
  40d15d:	out    0x73,al
  40d15f:	test   al,0xf5
  40d161:	pop    es
  40d162:	retf   
  40d163:	dec    edx
  40d164:	and    DWORD PTR [eax+0x3b10b040],edi
  40d16a:	mov    esp,0x523ec095
  40d16f:	mov    ch,0xb9
  40d171:	mov    BYTE PTR [edx+0x1a089715],ch
  40d177:	add    ebp,DWORD PTR [ebp+0x525a066f]
  40d17d:	sub    eax,0xa9ccaa48
  40d182:	xchg   esp,eax
  40d183:	fnstenv [eax+0x3]
  40d186:	fwait
  40d187:	mov    al,0xdb
  40d189:	push   ds
  40d18a:	test   BYTE PTR [edx-0x59b08caf],dh
  40d190:	test   al,0xed
  40d192:	cmp    ecx,ebp
  40d194:	(bad)  
  40d195:	pop    ecx
  40d196:	fadd   DWORD PTR [ebp+0x4b]
  40d199:	imul   ebp,DWORD PTR [esi],0x4f
  40d19c:	xor    DWORD PTR [edi-0xb5105bb],esp
  40d1a2:	mov    bh,0xda
  40d1a4:	sub    esp,DWORD PTR [ebx+0x6e]
  40d1a7:	mov    BYTE PTR [esp+esi*8+0x1af60899],bh
  40d1ae:	adc    al,BYTE PTR [edx]
  40d1b0:	pusha  
  40d1b1:	inc    ebx
  40d1b2:	test   DWORD PTR [eax+0x6b29f857],ebx
  40d1b8:	int3   
  40d1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ba:	dec    eax
  40d1bb:	cmp    DWORD PTR ds:0x51841ad4,ebp
  40d1c1:	js     0x40d155
  40d1c3:	push   ds
  40d1c4:	(bad)  
  40d1c5:	ficomp WORD PTR [eax]
  40d1c7:	daa    
  40d1c8:	push   edx
  40d1c9:	jp     0x40d15d
  40d1cb:	push   0xffffff85
  40d1cd:	xchg   ebp,eax
  40d1ce:	aaa    
  40d1cf:	test   BYTE PTR [esi],0x69
  40d1d2:	xchg   ebx,eax
  40d1d3:	xchg   esp,edx
  40d1d5:	daa    
  40d1d6:	mov    ah,ch
  40d1d8:	pop    es
  40d1d9:	cmp    ah,0xe3
  40d1dc:	lahf   
  40d1dd:	mov    eax,0xe2b17cf3
  40d1e2:	xchg   ebx,eax
  40d1e3:	leave  
  40d1e4:	retf   
  40d1e5:	inc    esi
  40d1e6:	xchg   BYTE PTR ds:0x3a27affd,bh
  40d1ec:	add    BYTE PTR [ecx],0x8f
  40d1ef:	jle    0x40d257
  40d1f1:	xchg   edi,eax
  40d1f2:	xchg   ebx,eax
  40d1f3:	int3   
  40d1f4:	xchg   bl,ah
  40d1f6:	retf   0xdfb
  40d1f9:	push   ebp
  40d1fa:	test   BYTE PTR ds:0x5852b767,0x98
  40d201:	and    DWORD PTR [edx],0xad5d1fd2
  40d207:	outs   dx,BYTE PTR ds:[esi]
  40d208:	fwait
  40d209:	pop    esi
  40d20a:	cmp    eax,0x61fca27a
  40d20f:	cs push 0x17074ea2
  40d215:	sub    ch,dl
  40d217:	(bad)  [ebx+0x6c]
  40d21a:	mov    al,0x18
  40d21c:	shr    BYTE PTR [esi+0x3],cl
  40d21f:	pop    es
  40d220:	sti    
  40d221:	pop    edi
  40d222:	jmp    0x40d1d8
  40d224:	sbb    DWORD PTR [esi-0x44121852],0x728ee195
  40d22e:	xor    al,0xa8
  40d230:	lea    esp,[edx]
  40d232:	xor    ah,bl
  40d234:	jmp    0xc4082b7c
  40d239:	fcomi  st,st(2)
  40d23b:	dec    eax
  40d23c:	mov    WORD PTR [edi-0x1fcb4b4d],?
  40d242:	stc    
  40d243:	dec    ebp
  40d244:	int3   
  40d245:	mov    eax,ds:0x3e5f5f1c
  40d24a:	into   
  40d24b:	push   ebx
  40d24c:	mov    al,0xe2
  40d24e:	sbb    al,0x9f
  40d250:	ds dec ecx
  40d252:	dec    ecx
  40d253:	rcl    DWORD PTR [edi],0x2a
  40d256:	and    ebp,DWORD PTR [esi-0x25d9868a]
  40d25c:	mov    bh,0x8
  40d25e:	retf   
  40d25f:	push   esp
  40d260:	adc    eax,0x98922b05
  40d265:	xchg   BYTE PTR [esi+0x5059da39],bl
  40d26b:	sub    BYTE PTR [ebx],al
  40d26d:	(bad)  
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	enter  0xac38,0x58
  40d300:	xchg   ebp,eax
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	add    ebp,0x4f
  40d30a:	xlat   BYTE PTR ds:[ebx]
  40d30b:	mov    WORD PTR [esi],ss
  40d30d:	cdq    
  40d30e:	(bad)  
  40d30f:	sbb    DWORD PTR ds:0x82b80469,esi
  40d315:	test   ecx,ebp
  40d317:	xchg   bl,cl
  40d319:	aaa    
  40d31a:	out    0x89,eax
  40d31c:	jo     0x40d2b7
  40d31e:	inc    edi
  40d31f:	loopne 0x40d2b9
  40d321:	out    0x24,al
  40d323:	fsubr  st(1),st
  40d325:	add    ecx,esi
  40d327:	lods   al,BYTE PTR ds:[esi]
  40d328:	scas   al,BYTE PTR es:[edi]
  40d329:	pop    ecx
  40d32a:	inc    ecx
  40d32b:	fnstsw WORD PTR [esi-0x2c0d44be]
  40d331:	sar    DWORD PTR [ebx],0xef
  40d334:	pop    ecx
  40d335:	fisttp WORD PTR [ecx+0x1a]
  40d338:	adc    DWORD PTR [edi+0xf1cb3bb],0x289694ab
  40d342:	inc    eax
  40d343:	or     al,BYTE PTR [ebp-0x27c3f2d1]
  40d349:	retf   0x3009
  40d34c:	mov    bh,0x14
  40d34e:	lea    ecx,[ecx+0x6e]
  40d351:	in     al,0x8e
  40d353:	in     al,0xaa
  40d355:	fnstcw WORD PTR [esi]
  40d357:	mov    ch,0xa7
  40d359:	mov    ds:0xe94dda76,eax
  40d35e:	imul   ebp,DWORD PTR [ebx+0xb],0x276217ff
  40d365:	test   al,0x7
  40d367:	popf   
  40d368:	push   ss
  40d369:	jg     0x40d39f
  40d36b:	sbb    DWORD PTR [ebx],esp
  40d36d:	or     edi,ecx
  40d36f:	sbb    BYTE PTR [ebp+ebx*4+0x60d01428],dl
  40d376:	mov    WORD PTR gs:[ecx],fs
  40d379:	mov    esi,0xacb3590f
  40d37e:	ss pop esp
  40d380:	ins    DWORD PTR es:[edi],dx
  40d381:	xchg   edi,eax
  40d382:	mov    ebx,0x81945f32
  40d387:	pop    ss
  40d388:	out    dx,eax
  40d389:	adc    bh,BYTE PTR [edi]
  40d38b:	jnp    0x40d3a3
  40d38d:	cmp    BYTE PTR [ecx+ebx*2+0x7b],0x55
  40d392:	daa    
  40d393:	mov    dl,0x90
  40d395:	push   edi
  40d396:	sub    ebp,DWORD PTR [edx]
  40d398:	inc    DWORD PTR [esi+0x21cc423b]
  40d39e:	jmp    0x40d3a4
  40d3a0:	mov    eax,0x2bd30be6
  40d3a5:	pushf  
  40d3a6:	imul   esp,DWORD PTR [edx+0x34441083],0xffffffff
  40d3ad:	pop    es
  40d3ae:	ret    0x25d4
  40d3b1:	xor    eax,0xf72cb05b
  40d3b6:	fisttp WORD PTR [esi+0x5c]
  40d3b9:	or     BYTE PTR [ebx-0x5f],dh
  40d3bc:	sub    al,0x7c
  40d3be:	repz shr DWORD PTR [ebp-0x7ac9e469],0xd3
  40d3c6:	pop    eax
  40d3c7:	dec    ebp
  40d3c8:	or     al,0x29
  40d3ca:	sub    eax,0xe0b1c882
  40d3cf:	or     ebx,eax
  40d3d1:	daa    
  40d3d2:	out    0x5d,eax
  40d3d4:	es or  al,0xeb
  40d3d7:	(bad)
  40d3db:	sub    al,0x20
  40d3dd:	lock mov esp,0xe6963c00
  40d3e3:	xor    bl,BYTE PTR [edx+0x5a]
  40d3e6:	adc    ebx,DWORD PTR [ebx+0x7c248934]
  40d3ec:	int3   
  40d3ed:	or     al,0x3b
  40d3ef:	dec    ebx
  40d3f0:	loop   0x40d3f3
  40d3f2:	or     eax,DWORD PTR [edi-0x5461f2db]
  40d3f8:	pusha  
  40d3f9:	retf   
  40d3fa:	mov    ebp,0xa69a2a95
  40d3ff:	jnp    0x40d40b
  40d401:	push   ds
  40d402:	jle    0x40d40b
  40d404:	mov    al,0xc2
  40d406:	rcl    DWORD PTR [esi+0x1b],cl
  40d409:	sbb    eax,0x72418d5
  40d40e:	out    0xb3,eax
  40d410:	xor    al,0x81
  40d412:	or     ecx,DWORD PTR [esi+0x70]
  40d415:	push   ds
  40d416:	sbb    BYTE PTR [ebp+0x1d],0x4f
  40d41a:	mov    dl,0xd4
  40d41c:	(bad)  [ecx+0x1a]
  40d41f:	push   ds
  40d420:	jmp    0xcb9a:0xf08174c8
  40d427:	fisttp WORD PTR [edi+0x5c78a2ca]
  40d42d:	or     al,0xd9
  40d42f:	mov    al,ds:0x7721e268
  40d434:	aam    0x6d
  40d436:	cmp    BYTE PTR [edi+0x3422ac29],ch
  40d43c:	push   ss
  40d43d:	shr    DWORD PTR [eax+0x66f2b30b],cl
  40d443:	lods   al,BYTE PTR ds:[esi]
  40d444:	sub    ebp,DWORD PTR [esi-0x68d2421d]
  40d44a:	sbb    eax,0x6b4ee49d
  40d44f:	psubq  mm0,QWORD PTR [ebx-0x296f5522]
  40d456:	icebp  
  40d457:	call   0x8377bb5c
  40d45c:	sub    al,0x72
  40d45e:	pop    eax
  40d45f:	inc    dl
  40d461:	fstp   TBYTE PTR [edi-0x351cc641]
  40d467:	inc    ebp
  40d468:	loop   0x40d45d
  40d46a:	ins    BYTE PTR es:[edi],dx
  40d46b:	pop    eax
  40d46c:	inc    ebp
  40d46d:	outs   dx,BYTE PTR ds:[esi]
  40d46e:	push   eax
  40d46f:	fchs   
  40d471:	dec    ebp
  40d472:	ja     0x40d44a
  40d474:	into   
  40d475:	icebp  
  40d476:	sbb    BYTE PTR [ebx+0x32cadca1],cl
  40d47c:	shl    esi,cl
  40d47e:	test   al,0xdb
  40d480:	in     eax,dx
  40d481:	clc    
  40d482:	sub    DWORD PTR gs:[ebp+edi*4-0x61ec2250],ebx
  40d48a:	fs sti 
  40d48c:	ror    BYTE PTR [edx+0x40c913e7],0x9
  40d493:	mov    WORD PTR [edi+0x7ae236f2],?
  40d499:	enter  0x728,0x2a
  40d49d:	pop    ss
  40d49e:	test   DWORD PTR [edx+0x41],ebx
  40d4a1:	cdq    
  40d4a2:	cli    
  40d4a3:	xchg   DWORD PTR [edi-0x14],ebp
  40d4a6:	popf   
  40d4a7:	iret   
  40d4a8:	xchg   edx,eax
  40d4a9:	pop    ebp
  40d4aa:	iret   
  40d4ab:	jmp    0xead111d1
  40d4b0:	data16 daa 
  40d4b2:	xlat   BYTE PTR ds:[ebx]
  40d4b3:	out    0x61,al
  40d4b5:	call   0xce6d278b
  40d4ba:	repnz and dl,ch
  40d4bd:	add    BYTE PTR [edi+0x3a5af121],ah
  40d4c3:	fsubr  DWORD PTR [ebx-0x75786aec]
  40d4c9:	imul   esi,edx,0x508c04aa
  40d4cf:	xor    ah,BYTE PTR [ebp-0x1c7c262b]
  40d4d5:	lds    ecx,FWORD PTR [eax+0x116e8383]
  40d4db:	test   al,0xf5
  40d4dd:	adc    ax,0x49a8
  40d4e1:	jg     0x40d49a
  40d4e3:	sbb    eax,0x833b1005
  40d4e8:	push   0xfffffff1
  40d4ea:	shl    edi,cl
  40d4ec:	xchg   BYTE PTR [ebp+0x75],ch
  40d4ef:	jg     0x40d526
  40d4f1:	out    dx,eax
  40d4f2:	cli    
  40d4f3:	cwde   
  40d4f4:	bound  esi,QWORD PTR [ebx]
  40d4f6:	jbe    0x40d4db
  40d4f8:	add    BYTE PTR [esi+0x7],dh
  40d4fb:	lfs    edx,FWORD PTR [eax-0x78326337]
  40d502:	adc    DWORD PTR [eax+0x31],esp
  40d505:	repnz add eax,0xdcd741d7
  40d50b:	cmc    
  40d50c:	mov    bl,0xca
  40d50e:	or     eax,0x15318ef2
  40d513:	(bad)  
  40d514:	rcr    DWORD PTR [esi+edi*8-0x4d],0xdb
  40d519:	cmp    eax,0xc095252c
  40d51e:	jo     0x40d544
  40d520:	ds ds pop edi
  40d523:	add    ebx,esp
  40d525:	sbb    esi,esp
  40d527:	in     al,0xe4
  40d529:	lahf   
  40d52a:	pop    cx
  40d52c:	cmc    
  40d52d:	(bad)  [ecx+0x1f]
  40d530:	lds    esp,FWORD PTR [edx-0x6d]
  40d533:	push   ds
  40d534:	aad    0x6d
  40d536:	into   
  40d537:	fst    QWORD PTR [edx]
  40d539:	or     eax,0x7f94ef64
  40d53e:	test   DWORD PTR [edx-0xcf679d0],eax
  40d544:	not    edi
  40d546:	xor    bh,bh
  40d548:	imul   ecx,DWORD PTR [esi],0xffffff8d
  40d54b:	shl    bl,cl
  40d54d:	adc    ebp,DWORD PTR [edi-0x55]
  40d550:	std    
  40d551:	xor    DWORD PTR [ecx+0x4d1c65e0],esi
  40d557:	sbb    eax,0x18afd8c8
  40d55c:	fcomip st,st(7)
  40d55e:	mov    eax,0x3d3528b0
  40d563:	call   0x5d9:0x1570aab6
  40d56a:	and    BYTE PTR [edx+0x5c9e1c2a],bl
  40d570:	in     eax,0x73
  40d572:	in     eax,0x33
  40d574:	ss int 0xbb
  40d577:	push   cs
  40d578:	andnps xmm3,XMMWORD PTR [ebp+0x1297e065]
  40d57f:	daa    
  40d580:	fbld   TBYTE PTR [ecx]
  40d582:	aaa    
  40d583:	xchg   ebx,eax
  40d584:	sub    edx,ebp
  40d586:	cmp    bh,BYTE PTR [edi]
  40d588:	mov    edx,0x4af7b75f
  40d58d:	pop    ebx
  40d58e:	cld    
  40d58f:	fwait
  40d590:	add    al,0x90
  40d592:	and    ecx,DWORD PTR [edx+0x2d23c8be]
  40d598:	fbstp  TBYTE PTR [ebp+0x5d8c5811]
  40d59e:	shl    BYTE PTR [esi+edx*1+0x53],1
  40d5a2:	push   ebx
  40d5a3:	jp     0x40d5a1
  40d5a5:	rcr    eax,1
  40d5a7:	enter  0x8360,0x66
  40d5ab:	dec    ebx
  40d5ac:	rol    BYTE PTR ds:0xf87b1bc4,cl
  40d5b2:	mov    ds,WORD PTR [eax+0x459711a0]
  40d5b8:	jecxz  0x40d589
  40d5ba:	mov    ebp,0xe9f0d76b
  40d5bf:	ins    BYTE PTR es:[edi],dx
  40d5c0:	pushf  
  40d5c1:	pop    es
  40d5c2:	aam    0x1c
  40d5c4:	call   0xe5049078
  40d5c9:	sahf   
  40d5ca:	test   eax,0xf75142f0
  40d5cf:	leave  
  40d5d0:	pop    es
  40d5d1:	jbe    0x40d5fe
  40d5d3:	add    BYTE PTR [esi+0x1f],dh
  40d5d6:	les    eax,FWORD PTR [esi+0x18882008]
  40d5dc:	mov    ecx,0xeed5c331
  40d5e1:	fmul   QWORD PTR [eax]
  40d5e3:	add    eax,0xee31f873
  40d5e8:	jecxz  0x40d582
  40d5ea:	stos   DWORD PTR es:[edi],eax
  40d5eb:	or     edi,ebx
  40d5ed:	xchg   ecx,eax
  40d5ee:	mov    esi,0x6d1bb0af
  40d5f3:	xchg   ecx,eax
  40d5f4:	jp     0x40d623
  40d5f6:	jge    0x40d64c
  40d5f8:	mov    al,ds:0x160521e3
  40d5fd:	sbb    dh,BYTE PTR [esi+0x76d7864d]
  40d603:	in     al,0xc7
  40d605:	pushf  
  40d606:	sbb    DWORD PTR [eax+0x40],0x96e84c59
  40d60d:	lds    edx,FWORD PTR [ecx]
  40d60f:	aaa    
  40d610:	popf   
  40d611:	rol    BYTE PTR [ebx+0x4af906c5],cl
  40d617:	lods   al,BYTE PTR ds:[esi]
  40d618:	jb     0x40d66e
  40d61a:	ins    BYTE PTR es:[edi],dx
  40d61b:	pop    ebx
  40d61c:	retf   0x1621
  40d61f:	aas    
  40d620:	adc    ch,BYTE PTR [ebx-0x58]
  40d623:	lods   al,BYTE PTR ds:[esi]
  40d624:	pop    esp
  40d625:	push   esi
  40d626:	mov    cl,0xdd
  40d628:	test   DWORD PTR [eax],ebx
  40d62a:	out    0xfd,al
  40d62c:	shl    ebp,1
  40d62e:	jbe    0x40d666
  40d630:	mov    ebp,cs
  40d632:	dec    ebp
  40d633:	xchg   ebp,eax
  40d634:	rcl    edi,0x50
  40d637:	add    dh,dl
  40d639:	js     0x40d664
  40d63b:	data16 (bad) 
  40d63d:	push   edx
  40d63e:	mov    bl,0xe2
  40d640:	xor    dh,0x29
  40d643:	scas   al,BYTE PTR es:[edi]
  40d644:	aas    
  40d645:	mov    edx,0x9f9a7119
  40d64a:	inc    ecx
  40d64b:	addr16 (bad) 
  40d64d:	dec    ecx
  40d64e:	push   eax
  40d64f:	push   edi
  40d650:	sbb    DWORD PTR [ebx+0x49e16110],edx
  40d656:	jns    0x40d600
  40d658:	adc    esp,DWORD PTR [ecx-0x61]
  40d65b:	dec    edx
  40d65c:	(bad)  
  40d65d:	(bad)  
  40d65e:	xlat   BYTE PTR ds:[ebx]
  40d65f:	and    ah,BYTE PTR [ebx+edx*8-0x7b546787]
  40d666:	int3   
  40d667:	mov    bh,BYTE PTR [edx]
  40d669:	repnz (bad) 
  40d66b:	dec    esi
  40d66c:	aaa    
  40d66d:	(bad)  
  40d66e:	cmp    dl,ch
  40d670:	push   es
  40d671:	mov    BYTE PTR [ecx],dh
  40d673:	xchg   esi,eax
  40d674:	leave  
  40d675:	add    cl,ah
  40d677:	loopne 0x40d650
  40d679:	jge    0x40d636
  40d67b:	jg     0x40d66d
  40d67d:	aaa    
  40d67e:	jecxz  0x40d611
  40d680:	outs   dx,BYTE PTR ds:[esi]
  40d681:	sbb    DWORD PTR ds:0x24e45ef7,esp
  40d687:	pop    ebx
  40d688:	std    
  40d689:	cwde   
  40d68a:	jns    0x1b870797
  40d690:	sub    dl,BYTE PTR [eax]
  40d692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d693:	dec    eax
  40d694:	xchg   esi,ebp
  40d696:	popa   
  40d697:	push   ecx
  40d698:	ficom  DWORD PTR [ecx]
  40d69a:	das    
  40d69b:	ss push esp
  40d69d:	add    al,0x55
  40d69f:	xor    BYTE PTR [eax+ecx*1-0xfd33f47],al
  40d6a6:	cs bnd jp 0x40d63f
  40d6aa:	repz mov esp,0x6ab4fed0
  40d6b0:	mov    dh,0x5e
  40d6b2:	xchg   edi,eax
  40d6b3:	mov    ch,0x20
  40d6b5:	push   ds
  40d6b6:	cdq    
  40d6b7:	cs leave 
  40d6b9:	(bad)  
  40d6ba:	cmp    edx,DWORD PTR [edi+0x7e]
  40d6bd:	cmp    ah,BYTE PTR [ebx+0x78dfa48f]
  40d6c3:	shr    BYTE PTR [esi-0x13f961bd],1
  40d6c9:	pop    edx
  40d6ca:	mov    ecx,0x50a7e706
  40d6cf:	leave  
  40d6d0:	(bad)  
  40d6d1:	jmp    0xfba1:0x81b6d7ba
  40d6d8:	add    al,0x96
  40d6da:	xchg   edi,eax
  40d6db:	mov    es:0xbeea4367,al
  40d6e1:	jl     0x40d665
  40d6e3:	je     0x40d6db
  40d6e5:	popa   
  40d6e6:	xor    cl,BYTE PTR [edx-0x6]
  40d6e9:	mov    eax,0x2b93a969
  40d6ee:	cs dec edx
  40d6f0:	mov    ss,WORD PTR [ebp-0x302593e8]
  40d6f6:	es jns 0x40d69c
  40d6f9:	(bad)  
  40d6fa:	xchg   ebx,eax
  40d6fb:	sbb    al,0xd6
  40d6fd:	ret    0x8218
  40d700:	mov    cx,0x2ded
  40d704:	push   ebp
  40d705:	in     al,dx
  40d706:	xor    al,0x7a
  40d708:	mov    edx,0x78f1eea5
  40d70d:	or     al,0x91
  40d70f:	and    dl,ah
  40d711:	retf   0x54f0
  40d714:	and    esp,DWORD PTR [eax-0x57]
  40d717:	shr    al,1
  40d719:	lahf   
  40d71a:	das    
  40d71b:	or     DWORD PTR [ebp-0x2c],esi
  40d71e:	push   cs
  40d71f:	(bad)  
  40d720:	mov    cl,0x7d
  40d722:	adc    eax,0x4c9f560f
  40d727:	jle    0x40d7a3
  40d729:	pop    edi
  40d72a:	push   ecx
  40d72b:	xor    eax,0x22c25b16
  40d730:	add    al,0x9d
  40d732:	loopne 0x40d6d4
  40d734:	dec    esp
  40d735:	push   ebx
  40d736:	out    0x4d,al
  40d738:	add    eax,0xf95ffea0
  40d73d:	jne    0x40d75d
  40d73f:	push   es
  40d740:	pushf  
  40d741:	inc    ecx
  40d742:	add    al,0x7e
  40d744:	xor    eax,0x39e2039c
  40d749:	dec    edi
  40d74a:	imul   ebx,DWORD PTR [edx+0x21d76bb4],0xc8f4ad45
  40d754:	(bad)  
  40d755:	nop
  40d756:	inc    esp
  40d757:	stc    
  40d758:	fucom  st(4)
  40d75a:	xlat   BYTE PTR ds:[ebx]
  40d75b:	jle    0x40d753
  40d75d:	jmp    0xf43d85dc
  40d762:	lds    edx,FWORD PTR [edx+0x72f85f98]
  40d768:	cmp    al,0x77
  40d76b:	mov    DWORD PTR [ebx],ebx
  40d76d:	lea    edi,[esi-0x17]
  40d770:	xchg   esi,eax
  40d771:	mov    esi,0xec038eb1
  40d776:	(bad)  
  40d777:	arpl   WORD PTR [ebp+0x4e32a07b],bx
  40d77d:	dec    esi
  40d77e:	gs aam 0xa2
  40d781:	clc    
  40d782:	push   edx
  40d783:	xchg   edi,eax
  40d784:	push   edx
  40d785:	(bad)  
  40d786:	pusha  
  40d787:	xchg   edx,eax
  40d788:	mov    esp,ebx
  40d78a:	mov    dl,BYTE PTR [ebx]
  40d78c:	neg    DWORD PTR [edi+0x6c989ce2]
  40d792:	retf   0xa840
  40d795:	mov    ds,WORD PTR [edi-0x5b]
  40d798:	ficom  DWORD PTR [ecx-0x3c]
  40d79b:	cmp    eax,0x61e757b3
  40d7a0:	jb     0x40d80a
  40d7a2:	loopne 0x40d819
  40d7a4:	or     ebp,DWORD PTR [edx]
  40d7a6:	repz xchg esi,eax
  40d7a8:	sub    eax,0x985a8570
  40d7ad:	das    
  40d7ae:	lahf   
  40d7af:	cmp    eax,0x90de1d4e
  40d7b4:	fxch   st(3)
  40d7b6:	jo     0x40d7ed
  40d7b8:	ror    bl,1
  40d7ba:	sub    eax,0xa62c4817
  40d7bf:	sbb    al,0x11
  40d7c1:	retf   0x9d4e
  40d7c4:	mov    ds:0x7e9d8449,eax
  40d7c9:	jecxz  0x40d805
  40d7cb:	jbe    0x40d7fa
  40d7cd:	bound  eax,QWORD PTR [ebp+edx*4+0x140106d4]
  40d7d4:	loop   0x40d7a6
  40d7d6:	and    BYTE PTR [bx+si],cl
  40d7d9:	ret    
  40d7da:	jae    0x40d854
  40d7dc:	dec    edx
  40d7dd:	adc    ebx,DWORD PTR [eax+0xb]
  40d7e0:	aas    
  40d7e1:	mov    bh,0x40
  40d7e3:	fisttp WORD PTR [ecx]
  40d7e5:	jmp    0x40d7cf
  40d7e7:	retf   
  40d7e8:	cwde   
  40d7e9:	sbb    al,0x9b
  40d7eb:	in     eax,dx
  40d7ec:	mov    DWORD PTR [eax-0x6c027d9f],ebp
  40d7f2:	or     BYTE PTR [ebx-0x5b],dh
  40d7f5:	adc    BYTE PTR ds:0xf75123a7,ah
  40d7fb:	scas   al,BYTE PTR es:[edi]
  40d7fc:	repz jnp 0x40d7ac
  40d7ff:	and    al,0xcb
  40d801:	push   ebx
  40d802:	arpl   WORD PTR ds:[edi],si
  40d805:	out    dx,al
  40d806:	xor    dh,dl
  40d808:	retf   
  40d809:	ja     0x40d809
  40d80b:	push   ebp
  40d80c:	ficomp WORD PTR [edi+ecx*1+0x7e1eea8a]
  40d813:	cmp    bh,bl
  40d815:	outs   dx,DWORD PTR ds:[esi]
  40d816:	and    cl,ch
  40d818:	inc    eax
  40d819:	jne    0x40d846
  40d81b:	lods   al,BYTE PTR ds:[esi]
  40d81c:	ror    BYTE PTR [esi],0xd0
  40d81f:	pop    eax
  40d820:	pop    ebx
  40d821:	je     0x40d888
  40d823:	pop    ss
  40d824:	ja     0x40d822
  40d826:	xor    eax,0x351140b4
  40d82b:	cwde   
  40d82c:	adc    eax,0x30b3c251
  40d831:	or     BYTE PTR [edi-0x76],al
  40d834:	jg     0x40d860
  40d836:	xchg   esp,eax
  40d837:	pop    edx
  40d838:	sbb    edx,DWORD PTR [ebx+0x2e5a23d5]
  40d83e:	pop    esp
  40d83f:	push   es
  40d840:	push   esp
  40d841:	pop    edi
  40d842:	sub    ch,BYTE PTR [eax-0x5f]
  40d845:	mov    eax,ds:0xb693472e
  40d84a:	jno    0x40d860
  40d84c:	xor    esi,DWORD PTR [ebp-0x31f8fb66]
  40d852:	clc    
  40d853:	or     edx,DWORD PTR [esi-0x503538d7]
  40d859:	out    0x65,eax
  40d85b:	mov    al,0x2d
  40d85d:	xor    eax,0x549ade21
  40d862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d863:	(bad)  
  40d864:	jne    0x40d8a2
  40d866:	push   es
  40d867:	data16 or al,0xc6
  40d86a:	jne    0x40d87e
  40d86c:	fnstcw WORD PTR [ecx-0x6e]
  40d86f:	inc    esp
  40d870:	jne    0x40d877
  40d872:	push   ebx
  40d874:	hlt    
  40d875:	mov    ds:0xfde00562,al
  40d87a:	in     eax,0x31
  40d87c:	add    DWORD PTR [edi-0x6e],eax
  40d87f:	inc    ebx
  40d880:	adc    DWORD PTR [eax],edx
  40d882:	cwde   
  40d883:	cmp    bl,BYTE PTR [edi]
  40d885:	mov    eax,ds:0xca948801
  40d88a:	aam    0x58
  40d88c:	cmp    al,0xda
  40d88e:	adc    eax,0xbf601446
  40d893:	cld    
  40d894:	mov    ebx,DWORD PTR ds:0xc267b92a
  40d89a:	mov    dh,0xdb
  40d89c:	inc    eax
  40d89d:	ret    
  40d89e:	imul   ecx,DWORD PTR [ecx],0x6c
  40d8a1:	in     al,0x8f
  40d8a3:	out    dx,al
  40d8a4:	sahf   
  40d8a5:	dec    ebx
  40d8a6:	shl    BYTE PTR [esi+0x567fd2b4],0x49
  40d8ad:	(bad)  [ebx+0x32]
  40d8b0:	mov    esp,0x8c3c37c3
  40d8b6:	js     0x40d876
  40d8b8:	add    al,0x9c
  40d8ba:	and    bl,dh
  40d8bc:	or     DWORD PTR [ebx+0x4da793c3],edi
  40d8c2:	mov    esp,0x36255e08
  40d8c7:	pop    eax
  40d8c8:	add    BYTE PTR [ebx+0x6],al
  40d8cb:	push   cs
  40d8cc:	push   esi
  40d8cd:	dec    eax
  40d8ce:	retf   
  40d8cf:	mov    al,0xbd
  40d8d1:	repnz retf 0xa4bc
  40d8d5:	mov    esi,0x34237672
  40d8da:	push   edi
  40d8db:	fmul   st,st(3)
  40d8dd:	jae    0x40d890
  40d8df:	sub    al,0xae
  40d8e1:	shl    DWORD PTR [ecx-0x7459bfb6],1
  40d8e7:	(bad)  
  40d8e8:	mov    ebx,0x46effbcc
  40d8ed:	aas    
  40d8ee:	mov    cl,0x19
  40d8f0:	xor    al,0xc5
  40d8f2:	pop    esp
  40d8f3:	adc    eax,esi
  40d8f5:	mov    BYTE PTR [ecx],bh
  40d8f7:	sbb    BYTE PTR [edx+esi*1],dh
  40d8fa:	jno    0x40d970
  40d8fc:	dec    edx
  40d8fd:	or     DWORD PTR [edi],eax
  40d8ff:	aas    
  40d900:	pusha  
  40d901:	or     al,0x75
  40d903:	enter  0xf2fc,0x21
  40d907:	mov    ds:0x614fced3,al
  40d90c:	xor    al,0x47
  40d90e:	pusha  
  40d90f:	ds das 
  40d911:	xchg   esp,eax
  40d912:	sub    DWORD PTR [edi],ecx
  40d914:	jmp    0xdb2fd358
  40d919:	inc    edi
  40d91a:	xor    ah,ch
  40d91c:	shr    DWORD PTR [eax+0x58b6c518],0x79
  40d923:	pop    edi
  40d924:	pop    esi
  40d925:	loopne 0x40d994
  40d927:	xchg   ebx,eax
  40d928:	xchg   ecx,eax
  40d929:	mov    ds:0xcc3eac21,eax
  40d92e:	ss sbb dh,ch
  40d931:	fidiv  DWORD PTR [eax]
  40d933:	int    0xcd
  40d935:	aam    0x6b
  40d937:	int3   
  40d938:	ja     0x40d926
  40d93a:	cmc    
  40d93b:	xor    eax,0xa02b051
  40d940:	into   
  40d941:	stos   DWORD PTR es:[edi],eax
  40d942:	(bad)  
  40d943:	in     al,dx
  40d944:	cli    
  40d945:	nop
  40d946:	in     al,0x6b
  40d948:	mov    eax,0xce3a4aab
  40d94d:	scas   eax,DWORD PTR es:[edi]
  40d94e:	mov    WORD PTR [ebp-0x5d61f121],gs
  40d954:	shr    dl,0x9d
  40d957:	in     al,0x37
  40d959:	mov    eax,0x2badcee4
  40d95e:	add    ch,bl
  40d960:	mov    ds:0x525aa9d9,eax
  40d965:	popf   
  40d966:	sub    al,0xb2
  40d968:	fist   WORD PTR [edi+0x4fd51d66]
  40d96e:	imul   eax,DWORD PTR [ebx-0xc0ae1d0],0xffffffe5
  40d975:	shl    ecx,1
  40d977:	xchg   edi,eax
  40d978:	jl     0x40d93e
  40d97a:	pushf  
  40d97b:	sub    al,0xf8
  40d97d:	out    0xaf,al
  40d97f:	ins    DWORD PTR es:[edi],dx
  40d980:	add    eax,DWORD PTR [edx-0x7c0aef80]
  40d986:	xchg   edx,eax
  40d987:	lds    esi,FWORD PTR [ebp+0x4c80946d]
  40d98d:	es ret 0x6308
  40d991:	adc    eax,DWORD PTR ds:0x891f58c3
  40d997:	popf   
  40d998:	cmp    esp,esp
  40d99a:	jo     0x40d94b
  40d99c:	and    dl,bl
  40d99e:	jmp    0xfbad:0x5cd4ea45
  40d9a5:	push   eax
  40d9a6:	mov    DWORD PTR [edx],ebx
  40d9a8:	sub    al,0xeb
  40d9aa:	inc    ebx
  40d9ab:	inc    esi
  40d9ac:	aam    0x70
  40d9ae:	jmp    0xb5f9122d
  40d9b3:	sub    DWORD PTR [ecx],ebp
  40d9b5:	adc    edx,ebx
  40d9b7:	sbb    al,0x9c
  40d9b9:	sub    BYTE PTR gs:[ecx],0x96
  40d9bd:	add    eax,ebp
  40d9bf:	sbb    DWORD PTR [ebx-0x18cfb53b],ecx
  40d9c5:	fcomi  st,st(0)
  40d9c7:	inc    esi
  40d9c8:	push   ebp
  40d9c9:	push   ds
  40d9ca:	bound  ecx,QWORD PTR [ebx]
  40d9cc:	mov    esp,0x395dd8ca
  40d9d1:	adc    BYTE PTR [ecx+0x524c57aa],al
  40d9d7:	mov    dh,0x1d
  40d9d9:	dec    ebx
  40d9da:	mov    ebx,0x4cb996a3
  40d9df:	inc    ebx
  40d9e0:	jmp    0x9a853ab2
  40d9e5:	aas    
  40d9e6:	jo     0x40d9c2
  40d9e8:	fucomp st(1)
  40d9ea:	aam    0xb2
  40d9ec:	mov    edx,0x7006fd45
  40d9f1:	sbb    al,0x92
  40d9f3:	fwait
  40d9f4:	push   es
  40d9f5:	daa    
  40d9f6:	pop    edi
  40d9f7:	iret   
  40d9f8:	mov    bh,0x96
  40d9fa:	rol    ecx,cl
  40d9fc:	pop    es
  40d9fd:	ins    DWORD PTR es:[edi],dx
  40d9fe:	mov    ebx,0xb7a74eb6
  40da03:	xor    al,0x67
  40da05:	das    
  40da06:	fnstcw WORD PTR [ebx+edx*1]
  40da09:	sub    al,0xe9
  40da0b:	(bad)  
  40da0c:	in     al,0x8b
  40da0e:	in     eax,dx
  40da0f:	and    al,0xe1
  40da11:	add    esi,DWORD PTR [ebx-0x16]
  40da14:	pop    ds
  40da15:	inc    edx
  40da16:	sub    DWORD PTR [edx],0x58
  40da19:	adc    al,0x51
  40da1b:	mov    esp,0xd9bbf085
  40da20:	xor    al,0x8b
  40da22:	sbb    esi,DWORD PTR [edi+0x3b]
  40da25:	xchg   DWORD PTR [edi+0x58],edx
  40da28:	pop    edx
  40da29:	dec    esp
  40da2a:	inc    esp
  40da2b:	push   ss
  40da2c:	push   cs
  40da2d:	pop    edi
  40da2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da2f:	addr16 adc al,0x3
  40da32:	or     ebp,DWORD PTR [eax]
  40da34:	imul   edx,edi,0xb89f44a1
  40da3a:	or     BYTE PTR [ebp+0x5a330a56],0x34
  40da41:	call   0xbb8a:0xe1b5b93b
  40da48:	push   0xc
  40da4a:	out    dx,al
  40da4b:	test   DWORD PTR ds:[esi+0x5073416b],eax
  40da52:	lds    eax,FWORD PTR [ebp+eax*8+0x34]
  40da56:	mov    esi,0x90e4a897
  40da5b:	mov    esi,0x9495b24
  40da60:	nop
  40da61:	lods   eax,DWORD PTR ds:[esi]
  40da62:	imul   ecx,DWORD PTR [esi+ebx*2-0x7f3337ef],0x3ac63164
  40da6d:	scas   eax,DWORD PTR es:[edi]
  40da6e:	mov    ch,0xbf
  40da70:	daa    
  40da71:	sti    
  40da72:	mov    cl,0x36
  40da74:	lock out 0xac,eax
  40da77:	call   0xd547:0x91a2d12c
  40da7e:	ret    
  40da7f:	retf   
  40da80:	cmp    al,0xf
  40da82:	jnp    0x40da82
  40da84:	out    0x34,eax
  40da86:	xchg   edx,eax
  40da87:	pop    esi
  40da88:	or     al,0x45
  40da8a:	mov    dl,BYTE PTR ds:0xb8c694d1
  40da90:	arpl   WORD PTR [ebx+edi*8-0x75],bx
  40da94:	add    dl,dl
  40da96:	dec    ebx
  40da97:	fistp  DWORD PTR [edi-0x4e1edc95]
  40da9d:	das    
  40da9e:	adc    cl,bh
  40daa0:	mov    ch,0xdc
  40daa2:	sub    edi,DWORD PTR [ecx]
  40daa4:	jo     0x40dab4
  40daa6:	push   esp
  40daa7:	sub    al,BYTE PTR [ebp-0x1e787acb]
  40daad:	aas    
  40daae:	ja     0x40daad
  40dab0:	mov    gs,WORD PTR [edx]
  40dab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dab3:	jmp    0x1ac7d6b3
  40dab8:	vunpcklps ymm4,ymm0,YMMWORD PTR [esi]
  40dabc:	mov    edx,0x1c02101
  40dac1:	dec    ecx
  40dac2:	pusha  
  40dac3:	mov    ch,0xe5
  40dac5:	mov    dh,0xfe
  40dac7:	jno    0x40daea
  40dac9:	aaa    
  40daca:	data16 icebp 
  40dacc:	jnp    0x40dae2
  40dace:	push   ss
  40dacf:	xchg   ebp,eax
  40dad0:	cli    
  40dad1:	pushf  
  40dad2:	(bad)  
  40dad3:	and    eax,0x1a7ff858
  40dad8:	pop    edi
  40dad9:	xchg   ebx,eax
  40dada:	xor    eax,0xe0d7a9bf
  40dadf:	femms  
  40dae1:	iret   
  40dae2:	cmp    esi,ecx
  40dae4:	push   0x51
  40dae6:	inc    edx
  40dae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dae8:	xchg   edi,eax
  40dae9:	shr    BYTE PTR [esp+eax*8],cl
  40daec:	inc    ebx
  40daed:	or     BYTE PTR [esi-0x28],bl
  40daf0:	cmp    eax,0x6bda47e7
  40daf5:	mov    esp,0x74103565
  40dafa:	mov    DWORD PTR [esi],esp
  40dafc:	(bad)  
  40dafd:	jmp    0xae9f0d24
  40db02:	mov    ah,0x22
  40db04:	mov    esi,0x4b4c5333
  40db09:	(bad)  
  40db0a:	pop    ecx
  40db0b:	fild   DWORD PTR [eax]
  40db0d:	clc    
  40db0e:	push   ebp
  40db0f:	out    0x3e,eax
  40db11:	xor    DWORD PTR [edi+0x72],0x64
  40db15:	fsubr  DWORD PTR [ebx]
  40db17:	and    ah,bh
  40db19:	inc    edi
  40db1a:	(bad)  
  40db1b:	loope  0x40db83
  40db1d:	adc    DWORD PTR [eax+esi*2],esi
  40db20:	adc    al,0xf9
  40db22:	sub    eax,0x5d29d7ff
  40db27:	jns    0x40daf9
  40db29:	imul   ecx,DWORD PTR [edi-0x20],0x585ab616
  40db30:	jmp    0x40db0d
  40db32:	repz push edx
  40db34:	cdq    
  40db35:	js     0x40dae5
  40db37:	dec    DWORD PTR [edx]
  40db39:	lds    ecx,FWORD PTR [esp+ebp*8]
  40db3c:	dec    esp
  40db3d:	out    0x8b,al
  40db3f:	sbb    BYTE PTR [eax],bh
  40db41:	pop    esi
  40db42:	push   ss
  40db43:	retf   0x2dc9
  40db46:	mov    DWORD PTR [edx],esi
  40db48:	adc    eax,edi
  40db4a:	and    eax,0x7efb9265
  40db4f:	dec    ecx
  40db50:	mov    esp,0xaebc4edd
  40db55:	dec    eax
  40db56:	xor    al,0xc3
  40db58:	cdq    
  40db59:	sbb    DWORD PTR [edx-0x70],edx
  40db5c:	je     0x40db92
  40db5e:	(bad)
  40db61:	mov    esi,0xe13266e
  40db66:	add    eax,DWORD PTR [ecx]
  40db68:	stos   BYTE PTR es:[edi],al
  40db69:	cmc    
  40db6a:	dec    edi
  40db6b:	pop    ds
  40db6c:	cmp    al,0x47
  40db6e:	std    
  40db6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db70:	cmp    al,0x55
  40db72:	mov    BYTE PTR [edi+0x13a95669],cl
  40db78:	rcr    ah,cl
  40db7a:	sub    BYTE PTR [edx],dl
  40db7c:	cld    
  40db7d:	leave  
  40db7e:	push   cs
  40db7f:	hlt    
  40db80:	fdivr  DWORD PTR [edi]
  40db82:	rcr    DWORD PTR [eax+0x70c5626b],cl
  40db88:	adc    ah,BYTE PTR ds:0x432e5952
  40db8e:	cli    
  40db8f:	xchg   ecx,eax
  40db90:	cmp    BYTE PTR [eax],dh
  40db92:	enter  0xa160,0x90
  40db96:	loope  0x40db6c
  40db98:	dec    edi
  40db99:	adc    eax,0x7a837723
  40db9e:	ins    DWORD PTR es:[edi],dx
  40db9f:	int    0xea
  40dba1:	mov    BYTE PTR [ecx],bl
  40dba3:	pop    esi
  40dba4:	fcomp  QWORD PTR [edx]
  40dba6:	add    ecx,DWORD PTR es:[esi-0x56]
  40dbaa:	out    0x1c,al
  40dbac:	xor    bl,BYTE PTR [ebx]
  40dbae:	xchg   bh,bl
  40dbb0:	push   esi
  40dbb1:	int3   
  40dbb2:	sub    al,0x4f
  40dbb4:	and    dl,BYTE PTR [ebx]
  40dbb6:	inc    edi
  40dbb7:	xchg   edx,eax
  40dbb8:	in     al,0x46
  40dbba:	or     eax,0x784b6d3e
  40dbbf:	fadd   QWORD PTR [edx]
  40dbc1:	jae    0x5e69d9dc
  40dbc7:	or     DWORD PTR [edx+0x466d8af7],ebp
  40dbcd:	pop    esp
  40dbce:	sub    BYTE PTR [ecx-0x5f],ch
  40dbd1:	das    
  40dbd2:	(bad)  
  40dbd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbd4:	call   0x28a63f5c
  40dbd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbda:	neg    esp
  40dbdc:	mov    bh,0x89
  40dbde:	lods   eax,DWORD PTR ds:[esi]
  40dbdf:	dec    ecx
  40dbe0:	imul   esp,DWORD PTR [ecx+0x193d37d0],0x1
  40dbe7:	into   
  40dbe8:	test   DWORD PTR [esi-0x25],eax
  40dbeb:	out    dx,eax
  40dbec:	cmp    al,BYTE PTR [ecx-0x41]
  40dbef:	lock (bad) 
  40dbf1:	adc    al,0x92
  40dbf3:	das    
  40dbf4:	xchg   edx,eax
  40dbf5:	xchg   esp,eax
  40dbf6:	dec    eax
  40dbf7:	jnp    0x40dc52
  40dbf9:	xor    al,0x6a
  40dbfb:	ret    
  40dbfc:	pop    ebp
  40dbfd:	and    cl,bl
  40dbff:	inc    eax
  40dc00:	push   di
  40dc02:	xor    BYTE PTR [ecx+edx*8+0x7e7520b],bl
  40dc09:	sti    
  40dc0a:	dec    ebp
  40dc0b:	mov    WORD PTR [ebx+0x410c372b],ss
  40dc11:	pop    ebp
  40dc12:	lods   eax,DWORD PTR ds:[esi]
  40dc13:	in     al,dx
  40dc14:	js     0x40dc2d
  40dc16:	imul   ebx,DWORD PTR [ebx],0xffffffaf
  40dc19:	pop    esp
  40dc1a:	push   edi
  40dc1b:	push   ss
  40dc1c:	in     eax,0xcf
  40dc1e:	(bad)  
  40dc1f:	jae    0x40dc80
  40dc21:	ins    DWORD PTR es:[edi],dx
  40dc22:	mov    esi,ecx
  40dc24:	push   0xffffffe5
  40dc26:	scas   eax,DWORD PTR es:[edi]
  40dc27:	mov    ebp,0x157a344c
  40dc2c:	xlat   BYTE PTR ds:[ebx]
  40dc2d:	scas   al,BYTE PTR es:[edi]
  40dc2e:	out    0x13,eax
  40dc30:	lods   al,BYTE PTR ds:[esi]
  40dc31:	(bad)  
  40dc32:	pop    esi
  40dc33:	shl    DWORD PTR cs:[edi+0x27cf9a67],0xf2
  40dc3b:	push   ecx
  40dc3c:	icebp  
  40dc3d:	pop    ss
  40dc3e:	push   ebp
  40dc3f:	mov    ch,0xfc
  40dc41:	mov    WORD PTR cs:[eax+0x45],ds
  40dc45:	enter  0x8c9f,0x81
  40dc49:	(bad)  
  40dc4a:	repz or eax,DWORD PTR [esi]
  40dc4d:	push   edx
  40dc4e:	ja     0x40dbde
  40dc50:	sub    eax,0xd716614f
  40dc55:	fiadd  WORD PTR [edx]
  40dc57:	jg     0x40dcbc
  40dc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc5a:	int3   
  40dc5b:	int    0xe4
  40dc5d:	repz into 
  40dc5f:	xlat   BYTE PTR ds:[ebx]
  40dc60:	fldenv [ecx+ebx*4-0x5a]
  40dc64:	dec    ecx
  40dc65:	scas   eax,DWORD PTR es:[edi]
  40dc66:	mov    cl,0x84
  40dc68:	popf   
  40dc69:	inc    edi
  40dc6a:	ds and ah,BYTE PTR fs:[ebx-0x7dec5443]
  40dc72:	and    eax,0x78c44cb2
  40dc77:	inc    eax
  40dc78:	pop    ebp
  40dc79:	push   ebx
  40dc7a:	mov    eax,0x2afeecbb
  40dc7f:	dec    edx
  40dc80:	jp     0x40dc87
  40dc82:	sub    DWORD PTR [ecx-0x6],0xec2dbaf4
  40dc89:	push   edi
  40dc8a:	aad    0x79
  40dc8c:	repnz int 0x62
  40dc8f:	cmc    
  40dc90:	shl    DWORD PTR [ebx],cl
  40dc92:	aas    
  40dc93:	jmp    0x7de9bdec
  40dc98:	pusha  
  40dc99:	xchg   ecx,eax
  40dc9a:	dec    ebp
  40dc9b:	scas   al,BYTE PTR es:[edi]
  40dc9c:	push   ebp
  40dc9d:	retf   0x2517
  40dca0:	mov    ebx,0xb985dff2
  40dca5:	inc    esi
  40dca6:	jbe    0x40dc82
  40dca8:	ret    
  40dca9:	push   esi
  40dcaa:	xor    ebp,edi
  40dcac:	lods   al,BYTE PTR ds:[esi]
  40dcad:	jle    0x40dc7b
  40dcaf:	push   ecx
  40dcb0:	mov    edx,0xe35ea3b5
  40dcb5:	or     al,dl
  40dcb7:	(bad)  
  40dcb8:	jp     0x40dc56
  40dcba:	outs   dx,BYTE PTR ds:[esi]
  40dcbb:	js     0x40dcce
  40dcbd:	xchg   ecx,eax
  40dcbe:	stc    
  40dcbf:	pop    ds
  40dcc0:	js     0x40dce8
  40dcc2:	les    ecx,FWORD PTR [ebx+0x2353b6cd]
  40dcc8:	cmp    bl,BYTE PTR ds:0xc4c88c49
  40dcce:	bound  edi,QWORD PTR [edi]
  40dcd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcd1:	jg     0x40dd16
  40dcd3:	sub    dh,bh
  40dcd5:	dec    ebp
  40dcd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd7:	hlt    
  40dcd8:	mov    ecx,DWORD PTR [ebx-0x22]
  40dcdb:	adc    BYTE PTR [ebx+ecx*2-0x4800f9db],bl
  40dce2:	cld    
  40dce3:	add    eax,0x40bb6dc3
  40dce8:	cmp    al,0xda
  40dcea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dceb:	cmp    DWORD PTR [ecx],0x78
  40dcee:	scas   eax,DWORD PTR es:[edi]
  40dcef:	pop    ds
  40dcf0:	fs clc 
  40dcf2:	js     0x40dd62
  40dcf4:	mov    WORD PTR [eax+0x7e],gs
  40dcf7:	cmp    ebx,DWORD PTR [edi]
  40dcf9:	or     BYTE PTR [esi],dl
  40dcfb:	fwait
  40dcfc:	dec    ecx
  40dcfd:	mov    cl,0x6f
  40dcff:	mov    ds:0x4040b2b3,eax
  40dd04:	aas    
  40dd05:	lock adc DWORD PTR [ecx+0x56],esp
  40dd09:	retf   
  40dd0a:	and    DWORD PTR [esi-0x433d9994],eax
  40dd10:	mov    ebp,0x8d1ff1b5
  40dd15:	loope  0x40dd72
  40dd17:	fmul   st,st(1)
  40dd19:	popa   
  40dd1a:	lds    edi,FWORD PTR [ebp*1-0x7e4c8ccb]
  40dd21:	aad    0xa2
  40dd23:	iret   
  40dd24:	mov    eax,ds:0x6a5dc818
  40dd29:	cmp    DWORD PTR [ecx],ebp
  40dd2b:	adc    ecx,esp
  40dd2d:	(bad)  
  40dd2e:	les    eax,FWORD PTR [ebx-0x1d]
  40dd31:	addr16 out dx,eax
  40dd33:	(bad)  
  40dd34:	mov    ch,cl
  40dd36:	and    ecx,DWORD PTR [ecx+0x5b135cf1]
  40dd3c:	cdq    
  40dd3d:	imul   ebp,edx,0xe643c4c
  40dd43:	lahf   
  40dd44:	fdiv   QWORD PTR [edx+eax*8]
  40dd47:	or     eax,0x2fa08cf0
  40dd4c:	aam    0x7c
  40dd4e:	sbb    al,BYTE PTR [ebx]
  40dd50:	inc    ebp
  40dd51:	pop    esi
  40dd52:	and    eax,0x736aefa9
  40dd57:	addr16 jae 0x40dd16
  40dd5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd5b:	ret    
  40dd5c:	out    dx,eax
  40dd5d:	aam    0x98
  40dd5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd60:	adc    ch,bh
  40dd62:	pop    ebx
  40dd63:	or     al,0xfe
  40dd65:	sbb    DWORD PTR [esi+0x47],eax
  40dd68:	icebp  
  40dd69:	cmp    al,0x10
  40dd6b:	cvtpi2ps xmm0,QWORD PTR [ecx+0x17]
  40dd6f:	pop    edx
  40dd70:	rcl    DWORD PTR [edi],cl
  40dd72:	retf   
  40dd73:	das    
  40dd74:	das    
  40dd75:	into   
  40dd76:	jne    0x40dd1c
  40dd78:	cld    
  40dd79:	pop    edi
  40dd7a:	jb     0x40dde8
  40dd7c:	pusha  
  40dd7d:	or     ah,BYTE PTR [ecx]
  40dd7f:	inc    ebx
  40dd80:	pushf  
  40dd81:	xchg   esp,eax
  40dd82:	mov    edx,0xa9fd7b4f
  40dd87:	mov    edx,0xda860a49
  40dd8c:	fsub   st,st(0)
  40dd8e:	dec    edx
  40dd8f:	sub    ah,bl
  40dd91:	inc    ecx
  40dd92:	adc    BYTE PTR [ebx+0x52a15e94],ah
  40dd98:	inc    esi
  40dd99:	ja     0x40ddf7
  40dd9b:	shl    DWORD PTR [ebp+edi*1+0xc],cl
  40dd9f:	cmp    al,ah
  40dda1:	sahf   
  40dda2:	push   edi
  40dda3:	and    ebx,edx
  40dda5:	aas    
  40dda6:	dec    eax
  40dda7:	dec    edi
  40dda8:	fnstsw WORD PTR ss:[edx]
  40ddab:	mov    ?,WORD PTR [edi]
  40ddad:	mov    dh,0x71
  40ddaf:	bound  ebp,QWORD PTR [esi-0x53]
  40ddb2:	sbb    DWORD PTR [ecx-0x5b],edi
  40ddb5:	loopne 0x40dd61
  40ddb7:	test   BYTE PTR [ebx+0x63],dh
  40ddba:	sub    bh,cl
  40ddbc:	jle    0x40dda7
  40ddbe:	mov    ecx,0xb7ffcdc2
  40ddc3:	push   edx
  40ddc4:	ret    
  40ddc5:	dec    ebp
  40ddc6:	cmp    eax,0x92906f8d
  40ddcb:	cmp    WORD PTR [ebx+0x45],bx
  40ddcf:	fprem  
  40ddd1:	stos   DWORD PTR es:[edi],eax
  40ddd2:	dec    esp
  40ddd3:	sbb    bl,bl
  40ddd5:	jmp    0x40de29
  40ddd7:	dec    esp
  40ddd8:	rcl    edi,0xfc
  40dddb:	mov    bh,0x1a
  40dddd:	dec    edi
  40ddde:	in     al,0xb5
  40dde0:	mov    DWORD PTR [edx+0x19965602],esp
  40dde6:	icebp  
  40dde7:	xchg   esi,eax
  40dde8:	out    dx,eax
  40dde9:	arpl   WORD PTR [ecx-0x74424ec0],dx
  40ddef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddf0:	mov    edi,0xc2f0c6b0
  40ddf5:	ss js  0x40ddf0
  40ddf8:	dec    edx
  40ddf9:	push   ss
  40ddfa:	or     DWORD PTR [edi],esp
  40ddfc:	adc    ah,bl
  40ddfe:	in     eax,dx
  40ddff:	jae    0x40de0b
  40de01:	push   0x69cc124a
  40de06:	loopne 0x40ddff
  40de08:	push   eax
  40de09:	in     al,dx
  40de0a:	xor    esp,edx
  40de0c:	cmp    BYTE PTR [ebp+0x1f],0x4f
  40de10:	jl     0x40de0d
  40de12:	lods   eax,DWORD PTR ds:[esi]
  40de13:	sub    BYTE PTR [ebp+0x10c8d32e],0x17
  40de1a:	sub    DWORD PTR [ecx],ebp
  40de1c:	add    ch,bh
  40de1e:	pusha  
  40de1f:	sbb    BYTE PTR [esp+ebp*1-0x5bb402e1],al
  40de26:	pop    eax
  40de27:	mov    ch,0x1d
  40de29:	mov    BYTE PTR [edx+0x38a239af],al
  40de2f:	fsubr  DWORD PTR [edi+edi*8]
  40de32:	mov    cl,ah
  40de34:	test   DWORD PTR [eax+0x5f480945],ebx
  40de3a:	retf   
  40de3b:	dec    esp
  40de3c:	adc    DWORD PTR [ebx],0xffffffdd
  40de3f:	nop
  40de40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de41:	xchg   ecx,eax
  40de42:	add    DWORD PTR [eax],edx
  40de44:	mov    dl,dl
  40de46:	sbb    BYTE PTR [eax],bl
  40de48:	xchg   BYTE PTR [ecx+esi*8+0x315feec6],cl
  40de4f:	iret   
  40de50:	xchg   ebp,eax
  40de51:	mov    ch,BYTE PTR [ebp-0x53]
  40de54:	jmp    0x72aa0509
  40de59:	cmp    eax,0x5451c83b
  40de5e:	dec    ebp
  40de5f:	imul   edx,DWORD PTR [edx],0x92b221e7
  40de65:	scas   al,BYTE PTR es:[edi]
  40de66:	(bad)  
  40de67:	cwde   
  40de68:	lds    esi,FWORD PTR [eax-0x3b]
  40de6b:	xchg   esi,eax
  40de6c:	rcl    DWORD PTR [edx-0x39],cl
  40de6f:	xchg   ebx,eax
  40de70:	pushf  
  40de71:	mov    esi,0xb8668c8e
  40de76:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de78:	repz mov ah,0x6f
  40de7b:	xlat   BYTE PTR ds:[ebx]
  40de7c:	mov    ebp,DWORD PTR [edx]
  40de7e:	stos   DWORD PTR es:[edi],eax
  40de7f:	jo     0x40de2b
  40de81:	sbb    al,ch
  40de83:	mov    edx,ebp
  40de85:	loope  0x40de4f
  40de87:	add    BYTE PTR [ebp+0x44],0xe2
  40de8b:	or     DWORD PTR [ecx+0x59],esi
  40de8e:	outs   dx,DWORD PTR ds:[esi]
  40de8f:	mov    esi,gs
  40de91:	pop    ebp
  40de92:	fs int3 
  40de94:	sbb    DWORD PTR [edi-0xc],esi
  40de97:	push   es
  40de98:	popa   
  40de99:	jb     0x40defc
  40de9b:	dec    ebx
  40de9c:	ins    DWORD PTR es:[edi],dx
  40de9d:	cwde   
  40de9e:	fisub  WORD PTR [esi-0x1e]
  40dea1:	jbe    0x40dec9
  40dea3:	jne    0x40deee
  40dea5:	sti    
  40dea6:	das    
  40dea7:	jns    0x40de77
  40dea9:	imul   ebx,DWORD PTR [edx-0xb],0x73085b53
  40deb0:	enter  0x3060,0x95
  40deb4:	loopne 0x40df04
  40deb6:	test   al,0x4e
  40deb8:	aam    0xc2
  40deba:	call   0xfda9:0xaa033768
  40dec1:	xor    ebp,DWORD PTR [esi+0x2]
  40dec4:	in     al,dx
  40dec5:	sub    esi,edx
  40dec7:	cmc    
  40dec8:	xchg   ecx,eax
  40dec9:	mov    eax,ds:0xc2832717
  40dece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40decf:	add    ebx,ecx
  40ded1:	iret   
  40ded2:	adc    al,0x6c
  40ded4:	sbb    DWORD PTR [edx],eax
  40ded6:	pop    ecx
  40ded7:	test   ch,ah
  40ded9:	cmp    eax,0x5767bb91
  40dede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dedf:	add    ecx,DWORD PTR ds:0x80a3842d
  40dee5:	or     ah,BYTE PTR [ebx]
  40dee7:	ss push es
  40dee9:	loope  0x40dea2
  40deeb:	inc    ebx
  40deec:	jns    0x40df3b
  40deee:	pop    edx
  40deef:	cmc    
  40def0:	xor    BYTE PTR [ecx+edi*8-0x44d40635],0x38
  40def8:	fimul  DWORD PTR [ecx]
  40defa:	adc    esi,DWORD PTR [esi+0x439d789d]
  40df00:	and    BYTE PTR [eax],bl
  40df02:	xor    ebx,DWORD PTR [ebx+0x7ba823bd]
  40df08:	xchg   ebp,eax
  40df09:	iret   
  40df0a:	rol    BYTE PTR [eax],cl
  40df0c:	sbb    al,BYTE PTR [ebx]
  40df0e:	xchg   esp,eax
  40df0f:	test   al,0x90
  40df11:	jno    0x40dea2
  40df13:	mov    esi,ss
  40df15:	push   es
  40df16:	dec    edi
  40df17:	sar    DWORD PTR [ebp+0x1e06b4b9],0x2c
  40df1e:	or     eax,0xeddc1f34
  40df23:	adc    BYTE PTR [edx-0x3d2433d4],bh
  40df29:	ret    0xd2a6
  40df2c:	shl    DWORD PTR [ecx+0x35aac9b3],1
  40df32:	push   eax
  40df33:	out    dx,eax
  40df34:	mov    eax,ds:0x918dc332
  40df39:	mov    ebx,0x80a03496
  40df3e:	mov    dl,0x4d
  40df40:	sbb    edi,DWORD PTR [edi-0x4e]
  40df43:	mov    ds:0x137f9074,ax
  40df49:	mov    al,ds:0x1e27d3f9
  40df4e:	rcl    bh,cl
  40df50:	add    al,0x62
  40df52:	sar    DWORD PTR [edi],0xc6
  40df55:	mov    ebp,0xa428d89b
  40df5a:	jmp    0x40dee8
  40df5c:	dec    edi
  40df5d:	sbb    bl,bh
  40df5f:	inc    ecx
  40df60:	inc    ecx
  40df61:	jmp    DWORD PTR [eax]
  40df63:	pushf  
  40df64:	jmp    FWORD PTR [ecx+0x527cf66d]
  40df6a:	jne    0x40dfad
  40df6c:	test   eax,0x4e8c1008
  40df71:	mov    al,BYTE PTR [eax-0x25eb6f07]
  40df77:	cmp    DWORD PTR [edi+0x2b9000a1],esp
  40df7d:	repnz lds edi,FWORD PTR [ecx]
  40df80:	sub    eax,0x35d4db2d
  40df85:	call   0x4d22:0xeb346739
  40df8c:	push   ecx
  40df8d:	je     0x40df85
  40df8f:	inc    edx
  40df90:	test   eax,0xec473f27
  40df95:	into   
  40df96:	(bad)  
  40df97:	add    al,0x3d
  40df9a:	push   cs
  40df9b:	sahf   
  40df9c:	lods   al,BYTE PTR ds:[esi]
  40df9d:	adc    dl,BYTE PTR fs:[edi+0x629fd3de]
  40dfa4:	jmp    0xfb3a5d9
  40dfa9:	ror    ch,0x0
  40dfac:	stos   DWORD PTR es:[edi],eax
  40dfad:	mov    edx,edi
  40dfaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb0:	loop   0x40dfd4
  40dfb2:	mov    edi,0x63b1e74e
  40dfb7:	sbb    dl,BYTE PTR [edi+edx*8]
  40dfba:	xchg   BYTE PTR [eax-0x67],bl
  40dfbd:	in     al,0xf
  40dfbf:	lock push edi
  40dfc1:	push   eax
  40dfc2:	enter  0x72,0x11
  40dfc6:	idiv   esi
  40dfc8:	inc    eax
  40dfc9:	jmp    0x16119e4b
  40dfce:	add    ch,ah
  40dfd0:	inc    eax
  40dfd1:	inc    ebp
  40dfd2:	push   ds
  40dfd3:	cmp    BYTE PTR [eax-0xa0c32a0],cl
  40dfd9:	xchg   ecx,eax
  40dfda:	and    BYTE PTR [edi+0x2b],0xe3
  40dfde:	inc    ebp
  40dfdf:	js     0x40df8e
  40dfe1:	pop    ecx
  40dfe2:	mov    edx,0xfd3c447
  40dfe7:	push   cx
  40dfea:	mov    al,ds:0x942bcf1b
  40dfef:	pop    edx
  40dff0:	xchg   al,bh
  40dff2:	inc    edx
  40dff3:	cld    
  40dff4:	and    eax,DWORD PTR [eax]
  40dff6:	ins    DWORD PTR es:[edi],dx
  40dff7:	outs   dx,DWORD PTR ds:[esi]
  40dff8:	add    esp,ebx
  40dffa:	mov    edx,eax
  40dffc:	adc    bl,BYTE PTR [eax]
  40dffe:	mov    ah,0x67
  40e000:	in     al,0x89
  40e002:	call   0x685d:0x979f8175
  40e009:	cs add edx,edi
  40e00c:	cmp    eax,0x5b66d604
  40e011:	(bad)  
  40e012:	lods   al,BYTE PTR ds:[esi]
  40e013:	call   0x1d6ff29d
  40e018:	sub    al,0xc0
  40e01a:	cmp    DWORD PTR [ebp-0x31],esi
  40e01d:	sbb    esi,DWORD PTR [esi+0x1127762]
  40e023:	inc    BYTE PTR [edi-0x50]
  40e026:	retf   
  40e027:	sbb    edx,edi
  40e029:	dec    edi
  40e02a:	sub    eax,0xe285f743
  40e02f:	or     bh,BYTE PTR [edi]
  40e031:	lahf   
  40e032:	out    0xa3,eax
  40e034:	mov    dh,0x14
  40e036:	jo     0x40e002
  40e038:	stos   BYTE PTR es:[edi],al
  40e039:	fdivr  st(6),st
  40e03b:	leave  
  40e03c:	fisttp DWORD PTR [esp+ebp*8]
  40e03f:	shl    esi,cl
  40e041:	mov    es,ebx
  40e043:	push   ebx
  40e044:	mul    BYTE PTR [ecx-0x24]
  40e047:	dec    esi
  40e048:	xchg   BYTE PTR [esi-0x38],cl
  40e04b:	mov    ebx,0xef6af49e
  40e050:	mov    ch,0x5e
  40e052:	add    dh,cl
  40e054:	push   ds
  40e055:	push   ss
  40e056:	test   al,0x48
  40e058:	sbb    eax,0xb43b7865
  40e05d:	jmp    0x98711947
  40e062:	repnz fimul WORD PTR [edi-0x7f]
  40e066:	jmp    0xd8460030
  40e06b:	or     al,0x36
  40e06d:	push   ss
  40e06e:	push   cs
  40e06f:	cmp    eax,0x2938852
  40e074:	mov    edx,0xcf0d93bd
  40e079:	and    bl,BYTE PTR [esi]
  40e07b:	jns    0x40e062
  40e07d:	outs   dx,BYTE PTR ds:[esi]
  40e07e:	test   al,0xee
  40e080:	cmp    al,dl
  40e082:	mov    ds,WORD PTR [ecx+0x70]
  40e085:	gs jno 0x40e0c3
  40e088:	dec    edi
  40e089:	mov    eax,0x8ced01aa
  40e08e:	pop    es
  40e08f:	ret    
  40e090:	dec    ecx
  40e091:	jl     0x40e0cc
  40e093:	dec    ebp
  40e094:	std    
  40e095:	aad    0x68
  40e097:	xor    ah,BYTE PTR [bp+di-0x4c8]
  40e09c:	sub    BYTE PTR [ebx+0x64],bl
  40e09f:	lahf   
  40e0a0:	cwde   
  40e0a1:	repnz inc edx
  40e0a3:	jg     0x40e055
  40e0a5:	dec    eax
  40e0a6:	daa    
  40e0a7:	stos   DWORD PTR es:[edi],eax
  40e0a8:	cmp    BYTE PTR [edi],bh
  40e0aa:	push   edx
  40e0ab:	(bad)  
  40e0ac:	rcl    DWORD PTR [ebx-0x2f1ff7d6],cl
  40e0b2:	dec    ebp
  40e0b3:	jb     0x40e08e
  40e0b5:	mov    eax,esi
  40e0b7:	or     BYTE PTR [ebp-0x295d72a7],bh
  40e0bd:	call   0xd620696
  40e0c2:	inc    edi
  40e0c3:	ret    
  40e0c4:	add    al,0xb8
  40e0c6:	out    dx,al
  40e0c7:	ror    DWORD PTR [ebp+0x794b9e91],1
  40e0cd:	mov    al,0x84
  40e0cf:	enter  0xc84f,0x68
  40e0d3:	mov    ds:0xe3c60da7,al
  40e0d8:	push   cs
  40e0d9:	mov    eax,ds:0x4728bc37
  40e0de:	xor    DWORD PTR [esi+0x10f4d44d],edi
  40e0e4:	push   esp
  40e0e5:	xchg   ecx,eax
  40e0e6:	out    0x47,al
  40e0e8:	out    dx,eax
  40e0e9:	jno    0x40e10d
  40e0eb:	mov    edx,0x6b4b513
  40e0f0:	loope  0x40e153
  40e0f2:	loop   0x40e168
  40e0f4:	sbb    al,0x78
  40e0f6:	call   0xa14d:0x4f23486f
  40e0fd:	(bad)  
  40e0fe:	sub    al,BYTE PTR [eax+0xe]
  40e101:	ss xchg ecx,eax
  40e103:	and    DWORD PTR [edx+0x5c2ad927],0x7279a03c
  40e10d:	pusha  
  40e10e:	iret   
  40e10f:	rcl    DWORD PTR [ecx+0x1c],cl
  40e112:	add    bh,BYTE PTR [eax+edx*4+0x49457a3]
  40e119:	in     eax,0x85
  40e11b:	or     esi,DWORD PTR [edx-0x5c79a7da]
  40e121:	ins    BYTE PTR es:[edi],dx
  40e122:	adc    BYTE PTR ds:0xa7b65d63,al
  40e128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e129:	jge    0x40e132
  40e12b:	jmp    0x40e122
  40e12d:	sahf   
  40e12e:	mov    fs,WORD PTR [ecx-0x511bb1b2]
  40e134:	push   es
  40e135:	dec    eax
  40e136:	mov    al,ds:0xda7ca0ba
  40e13b:	jmp    FWORD PTR [esi+0x1b70dd7e]
  40e141:	inc    esi
  40e142:	test   BYTE PTR [eax+edi*4],0x62
  40e146:	jno    0x40e0d1
  40e148:	mov    ds:0xe33a3a9c,al
  40e14d:	test   al,0x58
  40e14f:	(bad)  
  40e151:	cmp    eax,0x4fa2ad19
  40e156:	mov    es,WORD PTR [esi+0x5cac1028]
  40e15c:	pop    edx
  40e15d:	or     DWORD PTR [esi],eax
  40e15f:	popa   
  40e160:	xchg   esi,eax
  40e161:	mov    edi,0x1e2124ce
  40e166:	stc    
  40e167:	adc    al,0x14
  40e169:	repnz and al,0x94
  40e16c:	shl    DWORD PTR es:[esi+0x22b0a4bb],cl
  40e173:	or     DWORD PTR [esi+0x1b],edi
  40e176:	test   al,0xf
  40e178:	pop    edx
  40e179:	data16 and BYTE PTR [ecx],bh
  40e17c:	xor    BYTE PTR [ebx],0xb5
  40e17f:	cmc    
  40e180:	adc    ecx,DWORD PTR [eax+0x7f]
  40e183:	cmp    BYTE PTR [esi+0x2f35cfe0],al
  40e189:	jl     0x40e1dc
  40e18b:	repz sub DWORD PTR [esi+0x6277296b],esi
  40e192:	sub    al,0x4b
  40e194:	push   esi
  40e195:	inc    ebp
  40e196:	inc    esp
  40e197:	or     DWORD PTR [edi],edx
  40e199:	jg     0x40e1bf
  40e19b:	aas    
  40e19c:	mov    esi,0x8e524e29
  40e1a1:	xchg   edi,eax
  40e1a2:	xchg   esp,eax
  40e1a3:	sbb    ah,BYTE PTR [ebx+0x7fb87a9d]
  40e1a9:	pop    eax
  40e1aa:	add    cl,BYTE PTR [ebx+0x55d834f4]
  40e1b0:	jge    0x40e169
  40e1b2:	loopne 0x40e18b
  40e1b4:	xor    esi,ebp
  40e1b6:	in     al,dx
  40e1b7:	dec    ebx
  40e1b8:	ret    
  40e1b9:	xchg   ebx,eax
  40e1ba:	loop   0x40e1d7
  40e1bc:	cli    
  40e1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1be:	out    0x16,eax
  40e1c0:	jo     0x40e201
  40e1c2:	iret   
  40e1c3:	je     0x40e149
  40e1c5:	mov    ?,WORD PTR [esi+0xe]
  40e1c8:	sub    ecx,0x5e
  40e1cb:	out    0x2,eax
  40e1cd:	and    al,0xe5
  40e1cf:	sub    bh,BYTE PTR [esi+edx*1-0x20]
  40e1d3:	sbb    esp,DWORD PTR [ecx+0x69]
  40e1d6:	loopne 0x40e167
  40e1d8:	mov    esp,ecx
  40e1da:	out    dx,al
  40e1db:	cmp    al,0x38
  40e1dd:	pop    ebx
  40e1de:	loop   0x40e198
  40e1e0:	mov    ds:0x496e67a5,eax
  40e1e5:	inc    esi
  40e1e6:	jmp    FWORD PTR [esi+0x50]
  40e1e9:	mov    WORD PTR [esi],cs
  40e1eb:	xchg   ecx,eax
  40e1ec:	xor    al,0x75
  40e1ee:	pop    ecx
  40e1ef:	ja     0x40e1ff
  40e1f1:	repnz mov eax,eax
  40e1f4:	test   eax,0x7516b445
  40e1f9:	inc    ebp
  40e1fa:	xchg   DWORD PTR [eax+0x18cf43e9],esp
  40e200:	sub    ecx,ecx
  40e202:	aam    0x2c
  40e204:	and    esp,DWORD PTR [ecx-0x5d]
  40e207:	(bad)  
  40e208:	mov    edi,0xe6c8dfc1
  40e20d:	hlt    
  40e20e:	mov    ebx,0xac5ea824
  40e213:	sahf   
  40e214:	pop    es
  40e215:	lea    ebp,[eax-0x35]
  40e218:	mov    eax,0xd657a8c
  40e21d:	test   eax,0x9b61a687
  40e222:	xchg   edx,eax
  40e223:	mov    bl,ch
  40e225:	(bad)  [eax]
  40e227:	cmp    al,0x4c
  40e229:	jp     0x40e23a
  40e22b:	sti    
  40e22c:	inc    eax
  40e22d:	dec    eax
  40e22e:	mov    ebp,0x50552a07
  40e233:	or     eax,0xcaa3f26a
  40e238:	mov    dh,0xcd
  40e23a:	and    al,0x57
  40e23c:	ror    bl,1
  40e23e:	mov    ebp,DWORD PTR [edi]
  40e240:	jmp    0x40e25e
  40e242:	push   ds
  40e243:	xchg   ebp,eax
  40e244:	repnz fs or eax,0xcf3eafa
  40e24b:	and    al,0xb1
  40e24d:	popa   
  40e24e:	shr    DWORD PTR [ebx],1
  40e250:	inc    ecx
  40e251:	push   0xd4e2411d
  40e256:	addr16 nop
  40e258:	fstp   QWORD PTR [ebp+0x35]
  40e25b:	aaa    
  40e25c:	mov    ah,0x80
  40e25e:	mov    eax,ds:0x75e2635d
  40e263:	jmp    0x301ebbbc
  40e268:	(bad)  [esi-0xf]
  40e26b:	sbb    ebx,DWORD PTR [esi+0x7c25b294]
  40e271:	fild   WORD PTR [ebx+0x20fa7c68]
  40e277:	outs   dx,BYTE PTR ds:[esi]
  40e278:	(bad)  
  40e279:	jns    0x40e23b
  40e27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27c:	je     0x40e280
  40e27e:	sub    ebx,DWORD PTR [edx]
  40e280:	pop    ecx
  40e281:	ins    BYTE PTR es:[edi],dx
  40e282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e283:	rcl    BYTE PTR [ecx+esi*8],0x52
  40e287:	(bad)  
  40e288:	leave  
  40e289:	ficomp WORD PTR [esi+0x6db9172a]
  40e28f:	lahf   
  40e290:	repz or al,0x52
  40e293:	imul   ecx,eax,0xb1ec5c8a
  40e299:	xchg   BYTE PTR [esi+ebx*8-0x6b],cl
  40e29d:	sbb    ebx,DWORD PTR [edi-0x38]
  40e2a0:	mov    dl,0xe1
  40e2a2:	pop    ebx
  40e2a3:	stos   DWORD PTR es:[edi],eax
  40e2a4:	shl    ebp,1
  40e2a6:	cmp    dh,BYTE PTR [eax+0x46]
  40e2a9:	xlat   BYTE PTR ds:[ebx]
  40e2aa:	cmc    
  40e2ab:	fsubr  st(6),st
  40e2ad:	jno    0x40e2c3
  40e2af:	sbb    BYTE PTR [eax+esi*8+0x55],al
  40e2b3:	mov    esp,0xe40e82f0
  40e2b8:	jne    0x40e30e
  40e2ba:	into   
  40e2bb:	dec    edx
  40e2bc:	fadd   QWORD PTR [ebp-0x15ff2b99]
  40e2c2:	mov    dh,0x39
  40e2c4:	push   ebp
  40e2c5:	loope  0x40e322
  40e2c7:	(bad)  
  40e2c8:	jge    0x40e2b2
  40e2ca:	push   ebp
  40e2cb:	nop
  40e2cc:	xchg   edi,eax
  40e2cd:	mov    ds:0x3fdd9ee5,eax
  40e2d2:	(bad)  
  40e2d3:	dec    eax
  40e2d4:	mov    ebx,0x8f4c94a1
  40e2d9:	hlt    
  40e2da:	pop    esp
  40e2db:	cdq    
  40e2dc:	ins    BYTE PTR es:[edi],dx
  40e2dd:	cmp    DWORD PTR [ebx],edx
  40e2df:	and    al,0xd
  40e2e1:	adc    al,0xb3
  40e2e3:	pop    ds
  40e2e4:	and    bl,BYTE PTR ds:[ecx]
  40e2e7:	popf   
  40e2e8:	loopne 0x40e30e
  40e2ea:	inc    esi
  40e2eb:	(bad)  
  40e2ec:	mov    al,0x31
  40e2ee:	jmp    0x18b3:0xe0e7e3bf
  40e2f5:	cmc    
  40e2f6:	pushf  
  40e2f7:	jg     0x40e371
  40e2f9:	xchg   BYTE PTR [eax+0x74],ah
  40e2fc:	lock rcl BYTE PTR [ebp+0x6ea54515],0x8
  40e304:	out    0xab,al
  40e306:	shr    DWORD PTR [ebp-0xfa7c643],cl
  40e30c:	stos   BYTE PTR es:[edi],al
  40e30d:	cdq    
  40e30e:	stos   DWORD PTR es:[edi],eax
  40e30f:	mov    eax,DWORD PTR ds:[ebp-0x3b5c90e]
  40e316:	gs in  eax,0x6c
  40e319:	fwait
  40e31a:	test   al,0xb1
  40e31c:	pop    eax
  40e31d:	pop    ds
  40e31e:	(bad)  
  40e31f:	in     eax,0x5
  40e321:	enter  0x6906,0xd6
  40e325:	lea    ebp,[eax]
  40e327:	adc    al,0xa6
  40e329:	int3   
  40e32a:	loop   0x40e30e
  40e32c:	js     0x40e395
  40e32e:	dec    ebx
  40e32f:	pop    edx
  40e330:	es cmp esp,edx
  40e333:	sub    BYTE PTR [ebx-0x29f0e271],bl
  40e339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e33a:	loope  0x40e3a7
  40e33c:	or     eax,0x3a9198ed
  40e341:	mov    ss,WORD PTR [esi+0x59a35936]
  40e347:	inc    edx
  40e348:	inc    esi
  40e349:	dec    ebp
  40e34a:	int3   
  40e34b:	aam    0x8c
  40e34d:	arpl   WORD PTR [esp+eax*4-0x58],bp
  40e351:	stos   DWORD PTR es:[edi],eax
  40e352:	sub    DWORD PTR [eax+0xb7c638a],ecx
  40e358:	sbb    ebx,esp
  40e35a:	int    0x9e
  40e35c:	ds int 0x62
  40e35f:	aad    0x64
  40e361:	out    0x38,al
  40e363:	sahf   
  40e364:	out    0xfc,al
  40e366:	sbb    esp,DWORD PTR ds:0x79fb38c0
  40e36c:	mov    esi,0x13e3b572
  40e371:	gs and bl,al
  40e374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e375:	push   es
  40e376:	sbb    al,0xf3
  40e379:	mov    bh,0xa5
  40e37b:	adc    eax,0xbbe12d86
  40e380:	xchg   BYTE PTR [esp+ecx*4-0x47a7c0e6],bh
  40e387:	(bad)  
  40e388:	cmc    
  40e389:	cmp    dl,BYTE PTR [ecx]
  40e38b:	sbb    eax,0xfb96ec9e
  40e390:	scas   eax,DWORD PTR es:[edi]
  40e391:	cli    
  40e392:	in     al,0xb
  40e394:	mov    edx,0x51b77323
  40e399:	out    dx,al
  40e39a:	mov    DWORD PTR [ecx-0x5206e022],ebp
  40e3a0:	push   0xe
  40e3a2:	rol    DWORD PTR [edi],cl
  40e3a4:	push   0xffffff93
  40e3a6:	pop    eax
  40e3a7:	push   ecx
  40e3a8:	sub    ah,BYTE PTR [ecx]
  40e3aa:	and    al,0x5d
  40e3ac:	inc    ebp
  40e3ad:	mov    esi,0x514baa8c
  40e3b2:	pusha  
  40e3b3:	shl    DWORD PTR [edi-0x6d],cl
  40e3b6:	xchg   ebx,eax
  40e3b7:	add    ebx,0xffffffda
  40e3ba:	and    eax,0x3ab8fead
  40e3bf:	stc    
  40e3c0:	jg     0x40e416
  40e3c2:	ret    
  40e3c3:	pushf  
  40e3c4:	push   ebx
  40e3c5:	retf   0x3e30
  40e3c8:	daa    
  40e3c9:	(bad)  
  40e3ca:	lock mov ebp,0x43648539
  40e3d0:	inc    esp
  40e3d1:	inc    esp
  40e3d2:	dec    eax
  40e3d3:	ror    ebx,0xb4
  40e3d6:	fdivp  st(4),st
  40e3d8:	push   edx
  40e3d9:	fs pop edi
  40e3db:	jge    0x40e386
  40e3dd:	jb     0x40e453
  40e3df:	xor    al,0x6b
  40e3e1:	scas   eax,DWORD PTR es:[edi]
  40e3e2:	stos   BYTE PTR es:[edi],al
  40e3e3:	jno    0x40e44e
  40e3e5:	es in  al,dx
  40e3e7:	rcl    edi,1
  40e3e9:	pop    edi
  40e3ea:	add    BYTE PTR [ebx+0x5dda7b98],0xaa
  40e3f1:	xor    eax,0xd72e3aef
  40e3f6:	in     al,dx
  40e3f7:	xor    eax,0xb64102e
  40e3fc:	and    BYTE PTR [ebp-0x48],ah
  40e3ff:	shr    BYTE PTR [ecx],cl
  40e401:	sub    dl,BYTE PTR [edx]
  40e403:	and    BYTE PTR [edi],dl
  40e405:	aas    
  40e406:	fnstcw WORD PTR [edi-0x2c4bb6f]
  40e40c:	js     0x40e441
  40e40e:	mov    WORD PTR [ebx-0x6bc678ff],fs
  40e414:	hlt    
  40e415:	ror    DWORD PTR [edx+eiz*1-0x1d],0x4b
  40e41a:	adc    cl,0x6b
  40e41d:	jbe    0x40e42c
  40e41f:	ja     0x40e447
  40e421:	retf   
  40e422:	stos   DWORD PTR es:[edi],eax
  40e423:	sar    esi,cl
  40e425:	cmc    
  40e426:	mov    ah,0x93
  40e428:	add    eax,0x57908233
  40e42d:	test   eax,0x453645e5
  40e432:	sbb    al,0xbe
  40e434:	mov    ds:0x1f92536f,al
  40e439:	push   edi
  40e43a:	dec    esp
  40e43b:	sti    
  40e43c:	cld    
  40e43d:	imul   ebp,DWORD PTR [esi+ebp*1],0xfffffff5
  40e441:	loop   0x40e48e
  40e443:	pop    ecx
  40e444:	xor    al,0x4c
  40e446:	nop
  40e447:	dec    esp
  40e448:	xchg   ebx,eax
  40e449:	shl    BYTE PTR [ebp+0x10],cl
  40e44c:	retf   
  40e44d:	in     eax,0x73
  40e44f:	push   esi
  40e450:	jg     0x40e4b7
  40e452:	xchg   BYTE PTR [edi-0x5b],dl
  40e455:	jmp    0x40e45d
  40e457:	stos   BYTE PTR es:[edi],al
  40e458:	xchg   BYTE PTR [edx],cl
  40e45a:	pop    es
  40e45b:	jo     0x40e46a
  40e45d:	pop    ds
  40e45e:	and    BYTE PTR [edx-0x4f],ch
  40e461:	add    BYTE PTR [esi],cl
  40e463:	out    0x81,eax
  40e465:	cdq    
  40e466:	inc    eax
  40e467:	fwait
  40e468:	push   cs
  40e469:	adc    ch,BYTE PTR [edx+0x51]
  40e46c:	dec    eax
  40e46d:	sub    DWORD PTR [edx-0x30],eax
  40e470:	jbe    0x40e402
  40e472:	ins    DWORD PTR es:[edi],dx
  40e473:	xor    al,0x53
  40e475:	bound  ebp,QWORD PTR [edi+esi*2+0x7464e4e5]
  40e47c:	and    eax,edi
  40e47e:	loop   0x40e41e
  40e480:	imul   ecx,DWORD PTR [eax],0x3c668a07
  40e486:	inc    eax
  40e487:	or     al,0x87
  40e489:	cmp    DWORD PTR [edx-0x14],ecx
  40e48c:	(bad)  
  40e48d:	ja     0x40e457
  40e48f:	push   ss
  40e490:	mov    ch,0x33
  40e492:	mov    eax,0x7a5dad5c
  40e497:	mov    esp,0x7fbaf14f
  40e49c:	test   eax,0x7894727d
  40e4a1:	and    eax,0x6295e19e
  40e4a6:	push   es
  40e4a7:	sub    eax,DWORD PTR [ebp-0x212f9c71]
  40e4ad:	sub    dl,BYTE PTR [ecx]
  40e4af:	pop    esi
  40e4b0:	dec    ecx
  40e4b1:	stos   BYTE PTR es:[edi],al
  40e4b2:	push   edi
  40e4b3:	pop    ebx
  40e4b4:	sbb    al,0x8b
  40e4b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b7:	jmp    0x40e526
  40e4b9:	xor    edx,DWORD PTR [edx+eax*8]
  40e4bc:	xchg   edx,eax
  40e4bd:	jae    0x40e485
  40e4bf:	mov    ch,0xac
  40e4c1:	imul   esi,DWORD PTR [ebx],0xbc324d2c
  40e4c7:	or     eax,0xb42bc32
  40e4cc:	out    0xc7,al
  40e4ce:	mov    ch,0xcd
  40e4d0:	add    BYTE PTR [edx],0xa9
  40e4d3:	pop    eax
  40e4d4:	cmp    BYTE PTR [esi+esi*8],dl
  40e4d7:	dec    esi
  40e4d8:	fs sti 
  40e4da:	fwait
  40e4db:	cmp    edx,DWORD PTR [esi-0x6ba011ba]
  40e4e1:	inc    eax
  40e4e2:	ret    
  40e4e3:	data16 sbb al,BYTE PTR [edx-0x3c]
  40e4e7:	lock mul DWORD PTR [bx+si+0x2497]
  40e4ed:	jno    0x40e50c
  40e4ef:	push   ecx
  40e4f0:	lods   al,BYTE PTR ds:[esi]
  40e4f1:	mov    edx,0x1e9311dc
  40e4f6:	pop    ecx
  40e4f7:	mov    ebx,fs
  40e4f9:	icebp  
  40e4fa:	or     ebx,esp
  40e4fc:	popa   
  40e4fd:	sub    ecx,DWORD PTR [ecx]
  40e4ff:	in     eax,0xbb
  40e501:	jae    0x40e579
  40e503:	and    al,0x23
  40e505:	in     eax,0xf4
  40e507:	xchg   BYTE PTR [esi+0x1a],ah
  40e50a:	ret    
  40e50b:	mov    ebp,0x21562b82
  40e510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e511:	xchg   esi,eax
  40e512:	sub    eax,0xa4f50326
  40e517:	icebp  
  40e518:	rdpmc  
  40e51a:	and    BYTE PTR [esi],dl
  40e51c:	loopne 0x40e4ba
  40e51e:	push   ebp
  40e51f:	into   
  40e520:	ja     0x40e580
  40e522:	fld    TBYTE PTR [ebx]
  40e524:	clc    
  40e525:	lods   al,BYTE PTR ds:[esi]
  40e526:	jl     0x40e561
  40e528:	inc    ebp
  40e529:	xchg   edi,eax
  40e52a:	je     0x40e5a1
  40e52c:	adc    ecx,DWORD PTR [eax+0x617a9797]
  40e532:	xchg   ecx,eax
  40e533:	xor    DWORD PTR [edi-0x268f7a14],edi
  40e539:	push   esi
  40e53a:	and    BYTE PTR [ebp+0x7d],bh
  40e53d:	adc    edi,DWORD PTR [eax+0x798cf02b]
  40e543:	ret    
  40e544:	int    0x33
  40e546:	in     al,dx
  40e547:	xchg   ebp,eax
  40e548:	scas   eax,DWORD PTR es:[edi]
  40e549:	or     al,0xb0
  40e54b:	in     al,0x51
  40e54d:	stc    
  40e54e:	sbb    al,0xc3
  40e550:	or     BYTE PTR [esi-0x4d994879],dh
  40e556:	sub    al,0xfb
  40e558:	push   DWORD PTR [ebx-0x7c2c6f3d]
  40e55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e55f:	or     al,0x4
  40e561:	xor    al,dh
  40e563:	inc    esi
  40e564:	das    
  40e565:	inc    ebp
  40e566:	jl     0x40e575
  40e568:	jne    0x40e5e0
  40e56a:	and    dh,BYTE PTR [edx+0x9]
  40e56d:	fcomp  QWORD PTR [ebx-0x72aa1f9f]
  40e573:	sub    al,0x25
  40e575:	(bad)  
  40e576:	fs jmp 0x40e536
  40e579:	inc    edi
  40e57a:	mov    esp,0x76c1b95a
  40e57f:	inc    edx
  40e580:	mov    BYTE PTR [ebx+0x48],0x4a
  40e584:	or     DWORD PTR [edx-0x627b4bd],ebx
  40e58a:	mov    ebp,0xd8b71a8a
  40e58f:	das    
  40e590:	arpl   WORD PTR [eax],di
  40e592:	ror    BYTE PTR [ebx+0x2e330e9e],1
  40e598:	mov    WORD PTR [esi],?
  40e59a:	push   edi
  40e59b:	daa    
  40e59c:	(bad)  [ecx+0x77]
  40e59f:	stc    
  40e5a0:	gs inc esi
  40e5a2:	cmp    BYTE PTR [ebx],dh
  40e5a4:	lock xchg dx,ax
  40e5a7:	cmp    DWORD PTR [ebx-0x1e],esp
  40e5aa:	or     ecx,DWORD PTR ds:0x84139a13
  40e5b0:	cmc    
  40e5b1:	in     al,dx
  40e5b2:	mov    dl,BYTE PTR [eax]
  40e5b4:	dec    edx
  40e5b5:	adc    eax,0x5ad9a5ba
  40e5ba:	add    dh,bl
  40e5bc:	outs   dx,DWORD PTR ds:[esi]
  40e5bd:	inc    ebp
  40e5be:	int    0x35
  40e5c0:	pop    ebx
  40e5c1:	add    DWORD PTR [ebx-0x7d],0xf7665187
  40e5c8:	or     eax,DWORD PTR [ecx]
  40e5ca:	and    BYTE PTR [ebp-0x45],ch
  40e5cd:	imul   edx,DWORD PTR [ebp-0x7586a3bd],0xffffffa6
  40e5d4:	(bad)  
  40e5d5:	mov    ecx,0xdd35f55
  40e5da:	dec    esp
  40e5db:	xchg   DWORD PTR [ebp-0x7f],eax
  40e5de:	dec    eax
  40e5df:	fsub   QWORD PTR [edi+0x5d7d1953]
  40e5e5:	aad    0x3b
  40e5e7:	jnp    0x40e666
  40e5e9:	cmp    DWORD PTR [edx-0x35],ecx
  40e5ec:	push   ds
  40e5ed:	adc    ah,BYTE PTR [eax+0x736100a8]
  40e5f3:	cmp    BYTE PTR [edi+0x13ab7772],0x8f
  40e5fa:	imul   ebp,ecx,0xbb4e2c26
  40e600:	xor    al,0xfd
  40e602:	(bad)  
  40e603:	(bad)  
  40e604:	cld    
  40e605:	test   BYTE PTR [edi-0x73],ah
  40e608:	test   BYTE PTR [esi+eiz*1],0x77
  40e60c:	cwde   
  40e60d:	pop    ss
  40e60e:	pop    edi
  40e60f:	(bad)  
  40e610:	mov    ds:0x574b1146,ax
  40e616:	add    eax,0xaefc2ec6
  40e61b:	fsubr  DWORD PTR [ebp-0xbf180c9]
  40e621:	xor    al,0xe8
  40e623:	loop   0x40e5e5
  40e625:	popf   
  40e626:	dec    edi
  40e627:	ins    DWORD PTR es:[edi],dx
  40e628:	sub    dh,cl
  40e62a:	jne    0x40e65a
  40e62c:	adc    DWORD PTR [ebp-0x2c],edi
  40e62f:	adc    DWORD PTR [esi],edi
  40e631:	imul   ebx,DWORD PTR [ebx-0x3f06ec48],0xfffffff8
  40e638:	test   eax,0x8f46bee0
  40e63d:	cmp    eax,0x2f58af23
  40e642:	jmp    0x8ec8:0x9b3e16c0
  40e649:	cli    
  40e64a:	jle    0x40e68d
  40e64c:	sbb    DWORD PTR [ecx+0x20],edx
  40e64f:	test   eax,0x93c9b7f0
  40e654:	into   
  40e655:	test   DWORD PTR [ebx+0x27],ebx
  40e658:	inc    bl
  40e65a:	jmp    0x40e639
  40e65c:	mov    BYTE PTR [ecx+0x8],ah
  40e65f:	fsub   st(0),st
  40e661:	and    ebp,DWORD PTR [esi]
  40e663:	push   0x43
  40e665:	inc    eax
  40e666:	inc    ebp
  40e667:	repz leave 
  40e669:	std    
  40e66a:	xchg   esp,eax
  40e66b:	sbb    DWORD PTR [ecx*1+0x3b6851b3],ebx
  40e672:	xor    eax,0xdab8b288
  40e677:	ret    0x7611
  40e67a:	mov    dl,0x10
  40e67c:	adc    eax,0x55fc092f
  40e681:	mov    eax,0x4cc109cb
  40e686:	mov    al,ds:0x1348244e
  40e68b:	sub    eax,0xe86aa206
  40e690:	mov    al,ds:0x2aaad573
  40e695:	aad    0xc8
  40e697:	mov    esi,0x641a52ff
  40e69c:	lds    ecx,FWORD PTR [ebx+0x4243ed38]
  40e6a2:	into   
  40e6a3:	or     al,0x0
  40e6a5:	and    dh,cl
  40e6a7:	into   
  40e6a8:	jl     0x40e6c6
  40e6aa:	(bad)  
  40e6ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ac:	cmp    ebp,esp
  40e6ae:	fwait
  40e6af:	mov    esp,0xbb41b66c
  40e6b4:	scas   eax,DWORD PTR es:[edi]
  40e6b5:	test   al,0xe5
  40e6b7:	adc    eax,0x7d472a0b
  40e6bc:	push   eax
  40e6bd:	dec    ebx
  40e6be:	mov    al,BYTE PTR [edx]
  40e6c0:	or     DWORD PTR [edx-0x3746f084],edi
  40e6c6:	test   al,0xbb
  40e6c8:	mov    bl,BYTE PTR [ebp-0xf28abcb]
  40e6ce:	popa   
  40e6cf:	sbb    esp,ecx
  40e6d1:	xchg   ebp,eax
  40e6d2:	mov    cl,0xfa
  40e6d4:	hlt    
  40e6d5:	and    ah,ch
  40e6d7:	push   esi
  40e6d8:	daa    
  40e6d9:	lds    edx,FWORD PTR [edi+0x74]
  40e6dc:	aas    
  40e6dd:	jb     0x40e6f7
  40e6df:	fimul  WORD PTR [ebx]
  40e6e1:	mov    edi,0x1c92c396
  40e6e6:	icebp  
  40e6e7:	cli    
  40e6e8:	push   esi
  40e6e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ea:	out    dx,eax
  40e6eb:	pop    edi
  40e6ec:	xchg   edi,eax
  40e6ed:	mov    dl,bl
  40e6ef:	aad    0xde
  40e6f1:	les    eax,FWORD PTR [edx-0x56]
  40e6f4:	in     eax,0x96
  40e6f6:	jo     0x40e701
  40e6f8:	pop    ds
  40e6f9:	mov    dh,0xc8
  40e6fb:	test   eax,edx
  40e6fd:	das    
  40e6fe:	pop    eax
  40e6ff:	sbb    ah,BYTE PTR [esi]
  40e701:	sbb    ebp,eax
  40e703:	ret    0x4aef
  40e706:	bound  edx,QWORD PTR [eax]
  40e708:	cmp    esi,DWORD PTR [ebx+0x125e96b6]
  40e70e:	(bad)  
  40e70f:	int    0x9a
  40e711:	mov    edi,0x6373a809
  40e716:	or     esp,DWORD PTR [edx]
  40e718:	cmc    
  40e719:	dec    ebp
  40e71a:	jge    0x40e786
  40e71c:	adc    DWORD PTR [eax-0x2d8c2feb],0x90aed0ad
  40e726:	out    0xac,eax
  40e728:	xor    DWORD PTR [ebp-0x74],esp
  40e72b:	inc    edx
  40e72c:	or     eax,0x70056b2b
  40e731:	sub    eax,0x1a76f6d5
  40e736:	js     0x40e79a
  40e738:	add    dl,dh
  40e73a:	shl    BYTE PTR ds:0x1091244c,1
  40e740:	inc    ecx
  40e741:	mov    esi,0x79170006
  40e746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e747:	xor    dh,al
  40e749:	pushf  
  40e74a:	outs   dx,BYTE PTR ds:[esi]
  40e74b:	outs   dx,BYTE PTR ds:[esi]
  40e74c:	aas    
  40e74d:	test   edx,edx
  40e74f:	fiadd  WORD PTR [ecx-0x36]
  40e752:	mov    al,0x93
  40e754:	rol    ebx,1
  40e756:	cmp    BYTE PTR [edx-0x19],cl
  40e759:	sbb    ebx,DWORD PTR [edi+0x3cdde196]
  40e75f:	int3   
  40e760:	out    dx,eax
  40e761:	mov    ah,dh
  40e763:	jns    0x40e7bb
  40e765:	mov    ah,0x3e
  40e767:	inc    ecx
  40e768:	ret    0x1553
  40e76b:	sbb    eax,0x68e78ef1
  40e770:	or     eax,0x7ca713d2
  40e775:	(bad)  
  40e776:	fucomip st,st(0)
  40e778:	inc    edx
  40e779:	sub    ebp,DWORD PTR [edx+0x7]
  40e77c:	xchg   esp,eax
  40e77d:	aam    0x45
  40e77f:	jne    0x40e78d
  40e781:	into   
  40e782:	stos   DWORD PTR es:[edi],eax
  40e783:	ds push esp
  40e785:	mov    al,ds:0x9a156900
  40e78a:	xchg   esp,eax
  40e78b:	lahf   
  40e78c:	and    eax,0x54501d1e
  40e791:	loopne 0x40e714
  40e793:	pop    ecx
  40e794:	cmp    cl,bl
  40e796:	pop    edi
  40e797:	fidivr DWORD PTR [ebx+eiz*1+0x428dff9c]
  40e79e:	call   0x956b755a
  40e7a3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7a5:	cmp    al,0xcc
  40e7a7:	mov    ebp,0xf6780605
  40e7ac:	cwde   
  40e7ad:	cmp    al,0x8f
  40e7af:	push   esi
  40e7b0:	enter  0xef,0x9b
  40e7b4:	pop    edi
  40e7b5:	inc    esi
  40e7b6:	add    DWORD PTR [ebp-0x4bf92958],ebx
  40e7bc:	call   FWORD PTR [esi-0x22]
  40e7bf:	mov    ebp,0xd717f3d4
  40e7c4:	xchg   ebx,eax
  40e7c5:	adc    al,BYTE PTR ds:0xee708ddd
  40e7cb:	or     bh,BYTE PTR [edi+ebx*1]
  40e7ce:	retf   
  40e7cf:	mov    cl,0xad
  40e7d1:	mov    al,ds:0x72f76aed
  40e7d6:	and    dh,dl
  40e7d8:	fisub  DWORD PTR [eax-0x7cf84686]
  40e7de:	mov    DWORD PTR [edi+0x1f],edi
  40e7e1:	sahf   
  40e7e2:	cmc    
  40e7e3:	and    ebx,ebx
  40e7e5:	push   ecx
  40e7e6:	pop    ds
  40e7e7:	and    edi,DWORD PTR [esi+eiz*2]
  40e7ea:	aaa    
  40e7eb:	rcl    ebp,1
  40e7ed:	push   ecx
  40e7ee:	popa   
  40e7ef:	rol    DWORD PTR [eax],1
  40e7f1:	xchg   DWORD PTR [eax-0x64433caf],ebx
  40e7f7:	pop    edx
  40e7f8:	arpl   bp,bp
  40e7fa:	rcr    DWORD PTR [esi+0x4a262ecd],1
  40e800:	sti    
  40e801:	std    
  40e802:	jo     0x40e7ba
  40e804:	leave  
  40e805:	je     0x40e7f0
  40e807:	jo     0x40e86f
  40e809:	jns    0x40e81b
  40e80b:	and    eax,0x3981f6c4
  40e810:	in     eax,0x4d
  40e812:	scas   eax,DWORD PTR es:[edi]
  40e813:	inc    ebx
  40e814:	fmul   QWORD PTR [ebx-0x1bf65eb3]
  40e81a:	(bad)  
  40e81b:	ins    BYTE PTR es:[edi],dx
  40e81c:	int3   
  40e81d:	mov    ds:0xc46e2d48,al
  40e822:	pop    edx
  40e823:	das    
  40e824:	cmp    al,BYTE PTR [eax]
  40e826:	or     al,0x64
  40e828:	sbb    ch,BYTE PTR [edx+0x76]
  40e82b:	test   eax,0x3a46c83a
  40e830:	icebp  
  40e831:	lahf   
  40e832:	mov    eax,ds:0xb8c35501
  40e837:	inc    ebp
  40e838:	mov    esp,0xa5254cd
  40e83d:	(bad)  
  40e83e:	call   0x7210:0x56215c80
  40e845:	iret   
  40e846:	sub    eax,0x894e3223
  40e84b:	jbe    0x40e8a2
  40e84d:	jmp    0x51ec:0x85920729
  40e854:	inc    esi
  40e855:	pushf  
  40e856:	jne    0x40e87a
  40e858:	test   al,0xcf
  40e85a:	or     eax,0x4f9f8938
  40e85f:	(bad)  
  40e860:	loope  0x40e8a8
  40e862:	test   DWORD PTR [ebp-0x7e],edi
  40e865:	(bad)  
  40e866:	loopne 0x40e7ee
  40e868:	neg    DWORD PTR [esi+0x7f2c9a7a]
  40e86e:	(bad)  
  40e86f:	clc    
  40e870:	mov    eax,DWORD PTR [edx+edi*8]
  40e873:	push   edx
  40e874:	pop    ebp
  40e875:	sub    BYTE PTR [ebp-0x70],ch
  40e878:	cdq    
  40e879:	jns    0x40e8ec
  40e87b:	scas   eax,DWORD PTR es:[edi]
  40e87c:	jge    0x40e8ea
  40e87e:	shl    DWORD PTR [edx+edx*2+0x42221f8d],1
  40e885:	cmp    BYTE PTR [eax+0x255755e3],ah
  40e88b:	das    
  40e88c:	lods   eax,DWORD PTR ds:[esi]
  40e88d:	stc    
  40e88e:	pop    ebp
  40e88f:	into   
  40e890:	icebp  
  40e891:	xchg   DWORD PTR [ecx+0x61],ebp
  40e894:	test   DWORD PTR [esi],esi
  40e896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e897:	and    al,0x78
  40e899:	fdiv   DWORD PTR [ebx]
  40e89b:	out    dx,eax
  40e89c:	(bad)  
  40e89e:	xchg   esi,eax
  40e89f:	mov    esi,DWORD PTR ds:0x997cf5a0
  40e8a5:	xchg   DWORD PTR [ecx-0x410bf149],esp
  40e8ab:	mov    ebp,0x6d374252
  40e8b0:	mov    ds:0xc41e6301,al
  40e8b5:	xchg   BYTE PTR [ebp+0x71ec415a],cl
  40e8bb:	xchg   ebx,eax
  40e8bc:	sub    DWORD PTR [esi-0x3e],edx
  40e8bf:	das    
  40e8c0:	mov    ebx,0x24511787
  40e8c5:	enter  0x9f2e,0x6b
  40e8c9:	out    dx,al
  40e8ca:	mov    ebx,0x73c31041
  40e8cf:	or     ebp,ebx
  40e8d1:	int3   
  40e8d2:	xchg   DWORD PTR [edx],eax
  40e8d4:	push   ebp
  40e8d5:	stos   DWORD PTR es:[edi],eax
  40e8d6:	pop    esp
  40e8d7:	xchg   edi,eax
  40e8d8:	adc    eax,0x69414c7c
  40e8dd:	mov    bh,0x60
  40e8df:	cli    
  40e8e0:	test   eax,0xc79e68c2
  40e8e5:	imul   ecx,DWORD PTR [edi-0x7025ab01],0x2b
  40e8ec:	inc    ecx
  40e8ed:	mov    bl,0x70
  40e8ef:	or     dl,cl
  40e8f1:	and    BYTE PTR [eax],ah
  40e8f3:	mov    al,ds:0x737d7b9
  40e8f8:	in     al,0xb6
  40e8fa:	out    dx,al
  40e8fb:	cmp    dl,BYTE PTR [edi]
  40e8fd:	test   BYTE PTR ds:0xafb859c4,cl
  40e903:	in     al,0xe3
  40e905:	sbb    BYTE PTR [edx+eiz*8],bh
  40e908:	push   esp
  40e909:	inc    ebx
  40e90a:	push   edx
  40e90b:	inc    eax
  40e90c:	neg    BYTE PTR [ecx+0x8]
  40e90f:	sahf   
  40e910:	pop    ss
  40e911:	jge    0x40e97c
  40e913:	shr    DWORD PTR [ebx+0x27],0xb4
  40e917:	lahf   
  40e918:	das    
  40e919:	xor    DWORD PTR [esi-0x7a],edi
  40e91c:	jmp    0x3a65:0xdf288ed
  40e923:	sub    eax,0xd40ce113
  40e928:	inc    edx
  40e929:	add    BYTE PTR [edx-0x7b54ad07],dh
  40e92f:	dec    edi
  40e930:	nop
  40e931:	jmp    0x9148bc8a
  40e936:	dec    esp
  40e937:	push   ebx
  40e938:	jno    0x40e9a3
  40e93a:	addr16 sti 
  40e93c:	xchg   ebx,eax
  40e93d:	pop    esp
  40e93e:	xchg   edx,edi
  40e940:	cmp    bl,dl
  40e942:	int3   
  40e943:	addr16 dec edx
  40e946:	and    al,0x71
  40e948:	xlat   BYTE PTR ds:[ebx]
  40e949:	sub    DWORD PTR [eax],ecx
  40e94b:	adc    edi,ebp
  40e94d:	aaa    
  40e94e:	mov    ebp,0xbe1b0721
  40e953:	cmp    BYTE PTR ds:0x9997acbb,ch
  40e959:	test   al,0x65
  40e95b:	cwde   
  40e95c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e95d:	adc    DWORD PTR gs:[ecx-0x66],0xffffff88
  40e962:	push   cs
  40e963:	lds    eax,FWORD PTR [eax+0x349ff224]
  40e969:	inc    edx
  40e96a:	sbb    DWORD PTR [esi-0x61eb427a],ebp
  40e970:	or     bh,ch
  40e972:	sub    BYTE PTR [ebx-0x100e62d8],al
  40e978:	sahf   
  40e979:	fimul  WORD PTR [edx+0x2f266b70]
  40e97f:	add    bl,ch
  40e981:	pop    edi
  40e982:	inc    edx
  40e983:	cmp    al,0x26
  40e985:	stos   DWORD PTR es:[edi],eax
  40e986:	repnz loope 0x40e9bf
  40e989:	xchg   ebx,eax
  40e98a:	lds    esi,FWORD PTR [esi-0x1ef33e61]
  40e990:	and    ah,dl
  40e992:	mov    dh,BYTE PTR [edx]
  40e994:	pushf  
  40e995:	sub    al,al
  40e997:	lea    ebx,[eax]
  40e999:	scas   al,BYTE PTR es:[edi]
  40e99a:	mov    eax,0xf3f478d
  40e99f:	mov    ah,0x78
  40e9a1:	fsub   QWORD PTR [ecx-0x46cdc5e8]
  40e9a7:	dec    esp
  40e9a8:	fcomip st,st(4)
  40e9aa:	retf   0x9bd8
  40e9ad:	aaa    
  40e9ae:	xor    eax,0x1c2a9ae4
  40e9b3:	sbb    ecx,0xb9f9944e
  40e9b9:	in     eax,0xbb
  40e9bb:	mov    eax,0xe88b66eb
  40e9c0:	pop    edi
  40e9c1:	mov    ds:0x50aca210,eax
  40e9c6:	add    ch,BYTE PTR [eax-0x72]
  40e9c9:	xchg   esi,eax
  40e9ca:	mov    ds:0x47ddea5d,al
  40e9cf:	cmp    BYTE PTR [eax],bh
  40e9d1:	hlt    
  40e9d2:	or     eax,0x7ae352bb
  40e9d7:	cs jcxz 0x40e983
  40e9db:	inc    edi
  40e9dc:	cmp    eax,0xe9ba49bb
  40e9e1:	fwait
  40e9e2:	imul   esi,eax,0x23
  40e9e5:	enter  0x5f5c,0x20
  40e9e9:	jbe    0x40ea00
  40e9eb:	jmp    FWORD PTR [edi+0x7e]
  40e9ee:	gs inc ecx
  40e9f0:	daa    
  40e9f1:	shr    BYTE PTR [ebx],cl
  40e9f3:	xor    dl,BYTE PTR [eax-0x3f]
  40e9f6:	cld    
  40e9f7:	dec    bl
  40e9f9:	(bad)  
  40e9fa:	in     al,0x84
  40e9fc:	clc    
  40e9fd:	mov    ah,dl
  40e9ff:	xchg   esp,eax
  40ea00:	xlat   BYTE PTR ds:[ebx]
  40ea01:	out    dx,eax
  40ea02:	sti    
  40ea03:	das    
  40ea04:	dec    edx
  40ea05:	jmp    0x40e9a7
  40ea07:	int    0x3f
  40ea09:	pop    esi
  40ea0a:	adc    eax,0xe229d19
  40ea0f:	loopne 0x40ea28
  40ea11:	xchg   BYTE PTR ss:[edx+0x3ceb3b33],bh
  40ea18:	jmp    0x40ea76
  40ea1a:	add    DWORD PTR [ebp+0x9],0x84c2bd7c
  40ea21:	outs   dx,BYTE PTR ds:[esi]
  40ea22:	pop    eax
  40ea23:	inc    edx
  40ea24:	icebp  
  40ea25:	xor    BYTE PTR [ebx+ebx*8],cl
  40ea28:	pop    esp
  40ea29:	or     al,0xe0
  40ea2b:	aam    0xb3
  40ea2d:	push   ss
  40ea2e:	mov    ecx,0xbe6d1172
  40ea33:	rcl    DWORD PTR [ebp-0x14],1
  40ea36:	in     al,dx
  40ea37:	mov    WORD PTR [edi-0x3],cs
  40ea3a:	dec    esi
  40ea3b:	mov    bh,0x73
  40ea3d:	pop    esp
  40ea3e:	xchg   ecx,eax
  40ea3f:	xor    eax,0xe8f59f3b
  40ea44:	mov    DWORD PTR [edi-0x51],eax
  40ea47:	mov    ah,0x75
  40ea49:	repz sbb BYTE PTR [edi],0xc1
  40ea4d:	cmp    BYTE PTR [esp+edx*1+0x73],al
  40ea51:	xchg   ecx,eax
  40ea52:	outs   dx,BYTE PTR ds:[esi]
  40ea53:	adc    edx,DWORD PTR [ebp-0x36]
  40ea56:	mov    ds:0xf00dad99,al
  40ea5b:	jmp    0x40ea5d
  40ea5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea5e:	or     DWORD PTR [edi+0x3],0x48
  40ea62:	xchg   esi,eax
  40ea63:	mov    eax,ds:0x93bbde5b
  40ea68:	push   ebp
  40ea69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea6a:	jb     0x40eac9
  40ea6c:	dec    eax
  40ea6d:	scas   al,BYTE PTR es:[edi]
  40ea6e:	in     eax,dx
  40ea6f:	mov    edi,0xb3893112
  40ea74:	fmul   st,st(5)
  40ea76:	sub    eax,0x292ff435
  40ea7b:	(bad)  
  40ea7c:	sti    
  40ea7d:	dec    edx
  40ea7e:	jmp    0x5c64:0xfb3d2c13
  40ea85:	cs jge 0x40eadc
  40ea88:	sbb    al,0xcf
  40ea8a:	jmp    0x40ea58
  40ea8c:	push   0xffffffc1
  40ea8e:	and    BYTE PTR [eax-0x7f],dl
  40ea91:	(bad)  
  40ea92:	mov    eax,0x7842c760
  40ea97:	sbb    edx,DWORD PTR [eax-0x16]
  40ea9a:	add    DWORD PTR [eax-0x33c11bf3],0x6760dd05
  40eaa4:	ret    0xebe6
  40eaa7:	in     al,0x8f
  40eaa9:	push   eax
  40eaaa:	inc    ebx
  40eaab:	jle    0x40eac4
  40eaad:	add    al,0xe1
  40eaaf:	popf   
  40eab0:	mov    es,WORD PTR [ecx+edi*4]
  40eab3:	in     eax,dx
  40eab4:	cmp    al,0x78
  40eab6:	lods   eax,DWORD PTR ds:[esi]
  40eab7:	or     DWORD PTR [eax],ebx
  40eab9:	inc    ebp
  40eaba:	popa   
  40eabb:	pop    ss
  40eabc:	and    DWORD PTR [edi],edi
  40eabe:	mov    edi,0x191c5a24
  40eac3:	pushf  
  40eac4:	xchg   edx,eax
  40eac5:	nop
  40eac6:	mul    BYTE PTR [esi]
  40eac8:	cmp    DWORD PTR [ebx],esi
  40eaca:	pop    ecx
  40eacb:	sub    ebx,DWORD PTR [ebx-0x40]
  40eace:	gs in  eax,0x9
  40ead1:	lock fdiv st,st(6)
  40ead4:	xor    ecx,DWORD PTR [esi+0x5469a16d]
  40eada:	mov    ch,0x3f
  40eadc:	inc    esp
  40eadd:	sbb    al,bh
  40eadf:	mov    dh,0xb9
  40eae1:	or     DWORD PTR [ebp+0x2508df80],0x26
  40eae8:	sbb    ecx,DWORD PTR [ebp-0x47]
  40eaeb:	pop    esp
  40eaec:	imul   ebx,DWORD PTR [ecx],0x11
  40eaef:	sub    eax,0x25992964
  40eaf4:	mov    ds:0x3c9a984a,al
  40eaf9:	xchg   edi,eax
  40eafa:	jmp    0x4c62470
  40eaff:	sub    cl,BYTE PTR [edi-0x1f]
  40eb02:	pop    edx
  40eb03:	push   edx
  40eb04:	icebp  
  40eb05:	inc    esi
  40eb06:	sub    esi,DWORD PTR [eax+ebx*4+0x700d713b]
  40eb0d:	mov    ebx,0xd0240528
  40eb12:	in     al,dx
  40eb13:	mov    bh,0xb7
  40eb15:	xchg   BYTE PTR ds:0x37d2f02d,dl
  40eb1b:	hlt    
  40eb1c:	jo     0x40ead4
  40eb1e:	mov    dh,0x4f
  40eb20:	aad    0xde
  40eb22:	fistp  QWORD PTR [ebp-0x70c22fb1]
  40eb28:	jae    0x40eb96
  40eb2a:	push   0xffffffa9
  40eb2c:	bound  ebx,QWORD PTR [ebp-0x6d]
  40eb2f:	arpl   WORD PTR [ebp+eax*8-0x2b18e17b],si
  40eb36:	jnp    0x40eb3b
  40eb38:	or     ebp,DWORD PTR [ebx]
  40eb3a:	and    ch,BYTE PTR [edi-0x545c82f]
  40eb40:	pop    es
  40eb41:	test   al,0xcc
  40eb43:	mov    ecx,0xa91be4cd
  40eb48:	cmc    
  40eb49:	push   0x49
  40eb4b:	or     ah,al
  40eb4d:	mov    ?,WORD PTR [edx-0x1fe2be07]
  40eb53:	sub    bh,bh
  40eb55:	jb     0x40eb95
  40eb57:	mov    ebx,0x298baebb
  40eb5c:	cs pop esi
  40eb5e:	ret    
  40eb5f:	fistp  DWORD PTR [edi]
  40eb61:	xor    DWORD PTR [eax-0x4],esi
  40eb64:	xchg   ebx,eax
  40eb65:	pop    esp
  40eb66:	adc    dl,BYTE PTR [esi]
  40eb68:	das    
  40eb69:	bound  edx,QWORD PTR [eax+0x51d06530]
  40eb6f:	repz dec edi
  40eb71:	jno    0x40eb59
  40eb73:	xchg   esp,eax
  40eb74:	aaa    
  40eb75:	push   edi
  40eb76:	sub    bl,BYTE PTR [ecx]
  40eb78:	pop    ds
  40eb79:	adc    ebx,DWORD PTR [eax+eax*2+0x6d5c3132]
  40eb80:	bound  ebx,QWORD PTR [eax+0x3e]
  40eb83:	test   al,0x1c
  40eb85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb86:	and    BYTE PTR ds:0xe085757d,ah
  40eb8c:	test   eax,0xe10d01f5
  40eb91:	ds test esi,ebx
  40eb94:	sub    ch,BYTE PTR [esi]
  40eb96:	push   ebp
  40eb97:	add    DWORD PTR [edi],ebx
  40eb99:	mov    dl,0x9f
  40eb9b:	call   0x79cd4c10
  40eba0:	jmp    0x40eb4d
  40eba2:	xchg   BYTE PTR [ecx+0x7a],cl
  40eba5:	add    ecx,DWORD PTR [edi-0xd38896b]
  40ebab:	enter  0xb38d,0x47
  40ebaf:	lods   eax,DWORD PTR ds:[esi]
  40ebb0:	fidivr DWORD PTR [ebx]
  40ebb2:	jmp    0x8672:0x6dfd75d0
  40ebb9:	ror    edx,cl
  40ebbb:	cwde   
  40ebbc:	pop    edx
  40ebbd:	mov    ebx,0xb83217bc
  40ebc2:	inc    edi
  40ebc3:	fbld   TBYTE PTR [esp+ebp*8+0x1c]
  40ebc7:	xor    al,0xe2
  40ebc9:	popf   
  40ebca:	aam    0xf3
  40ebcc:	fwait
  40ebcd:	sub    DWORD PTR [ebp+0x7c828792],ebp
  40ebd3:	int3   
  40ebd4:	stos   BYTE PTR es:[edi],al
  40ebd5:	cwde   
  40ebd6:	jle    0x40eb5b
  40ebd8:	jb     0x40ec49
  40ebda:	das    
  40ebdb:	inc    esp
  40ebdc:	cmp    al,0x6c
  40ebde:	and    edx,DWORD PTR [edx+0x37]
  40ebe1:	mov    esi,0xd8b02e44
  40ebe6:	aad    0x23
  40ebe8:	jnp    0x40ebe6
  40ebea:	jmp    0x3166f360
  40ebef:	dec    eax
  40ebf0:	push   0xffffff9e
  40ebf2:	xlat   BYTE PTR ds:[ebx]
  40ebf3:	sbb    bh,BYTE PTR [ebp+eiz*4-0x7e1a8f8]
  40ebfa:	ins    DWORD PTR es:[edi],dx
  40ebfb:	(bad)  
  40ebfc:	sub    esp,DWORD PTR [ecx+0x65]
  40ebff:	pop    ebx
  40ec00:	jp     0x40ec34
  40ec02:	cmp    dh,ah
  40ec04:	inc    edx
  40ec05:	daa    
  40ec06:	ins    BYTE PTR es:[edi],dx
  40ec07:	inc    esi
  40ec08:	adc    ah,0x1c
  40ec0b:	jno    0x40ec73
  40ec0d:	into   
  40ec0e:	sub    edi,DWORD PTR [eax]
  40ec10:	call   0x499dbe09
  40ec15:	jge    0x40ec32
  40ec17:	xchg   ecx,eax
  40ec18:	adc    ebx,esi
  40ec1a:	dec    ebp
  40ec1b:	cld    
  40ec1c:	and    DWORD PTR [ecx],ebx
  40ec1e:	iret   
  40ec1f:	(bad)  
  40ec20:	push   0xffffffb4
  40ec22:	push   edx
  40ec23:	push   ebp
  40ec24:	mov    edi,0x763fc6db
  40ec29:	push   es
  40ec2a:	das    
  40ec2b:	push   ecx
  40ec2c:	sbb    DWORD PTR [ebx-0x669d2f59],ebx
  40ec32:	aam    0x2b
  40ec34:	pop    esi
  40ec35:	or     eax,0xc8a5d5cf
  40ec3a:	jecxz  0x40ec0c
  40ec3c:	test   bl,cl
  40ec3e:	xchg   DWORD PTR [ebx],edx
  40ec40:	mov    DWORD PTR [ecx-0x259ac37c],ecx
  40ec46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec47:	pop    esp
  40ec48:	mov    edx,0x73f888a5
  40ec4d:	xchg   esi,eax
  40ec4e:	pop    esi
  40ec4f:	enter  0x9841,0x5e
  40ec53:	jnp    0x40ec2b
  40ec55:	test   al,0xdc
  40ec57:	mov    cl,0x8d
  40ec59:	rcl    BYTE PTR [edi-0x62b63a99],1
  40ec5f:	sub    al,0x92
  40ec61:	add    dl,al
  40ec63:	loope  0x40ec10
  40ec65:	or     al,0x76
  40ec67:	add    eax,0x56dda2f7
  40ec6c:	xchg   BYTE PTR [ebp+edi*8-0x682846d1],cl
  40ec73:	push   0xffffffee
  40ec75:	popa   
  40ec76:	test   eax,0xef18f636
  40ec7b:	mov    ch,0x8a
  40ec7d:	cmp    ecx,DWORD PTR [edi-0x45]
  40ec80:	into   
  40ec81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec82:	pop    eax
  40ec83:	(bad)  
  40ec84:	push   esi
  40ec85:	pop    ss
  40ec86:	fisubr WORD PTR [edx+0x58bb999b]
  40ec8c:	cmp    ebx,eax
  40ec8e:	stc    
  40ec8f:	cld    
  40ec90:	or     edi,DWORD PTR [eax+ecx*1]
  40ec93:	inc    ecx
  40ec94:	clc    
  40ec95:	push   0x39
  40ec97:	ins    DWORD PTR es:[edi],dx
  40ec98:	xchg   ebx,eax
  40ec99:	ds pop edi
  40ec9b:	outs   dx,DWORD PTR ds:[esi]
  40ec9c:	je     0x40ec32
  40ec9e:	test   BYTE PTR [ecx],bl
  40eca0:	fisubr DWORD PTR [ebx+0x6b]
  40eca3:	ja     0x40ecc8
  40eca5:	add    dh,BYTE PTR [edx]
  40eca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eca8:	or     esi,DWORD PTR [edi+0x5ba232ab]
  40ecae:	jo     0x40ecb3
  40ecb0:	js     0x40ecc6
  40ecb2:	push   DWORD PTR [ebp-0x31]
  40ecb5:	add    eax,0x82528c6e
  40ecba:	lahf   
  40ecbb:	dec    esp
  40ecbc:	pop    edx
  40ecbd:	jg     0x40ec62
  40ecbf:	mov    edx,0x24cd251e
  40ecc4:	std    
  40ecc5:	pop    edi
  40ecc6:	in     al,dx
  40ecc7:	fwait
  40ecc8:	in     al,0x5f
  40ecca:	mov    ecx,0x4bd8a6e1
  40eccf:	mov    ebx,0x613b6761
  40ecd4:	test   DWORD PTR [edx+0x2ec289c6],edi
  40ecda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecdb:	mov    dl,0x9f
  40ecdd:	call   0x6aa4907a
  40ece2:	mov    bl,0x84
  40ece4:	cli    
  40ece5:	fdivr  QWORD PTR [esi]
  40ece7:	jo     0x40ec85
  40ece9:	sub    eax,0x336e115d
  40ecee:	adc    ah,ch
  40ecf0:	pop    es
  40ecf1:	lods   al,BYTE PTR ds:[esi]
  40ecf2:	mov    ah,0xd
  40ecf4:	mov    edx,0xe3e1573b
  40ecf9:	cdq    
  40ecfa:	adc    bl,bl
  40ecfc:	or     esp,edx
  40ecfe:	xor    eax,0x2cfc4c9d
  40ed03:	pop    es
  40ed04:	sar    DWORD PTR [edi-0x1],1
  40ed07:	dec    edi
  40ed08:	imul   ecx,DWORD PTR [ebx+0x52],0xffffff9e
  40ed0c:	ja     0x40ed40
  40ed0e:	push   ds
  40ed0f:	enter  0xd678,0xd0
  40ed13:	and    bh,BYTE PTR [edi+edx*2+0x7de22d22]
  40ed1a:	mov    edx,0xaf61c853
  40ed1f:	lds    esp,FWORD PTR [eiz*1-0x50c8b8ea]
  40ed26:	rcr    BYTE PTR ds:0xde376596,0xae
  40ed2d:	xor    BYTE PTR [esi-0x32ecc04e],0x35
  40ed34:	je     0x40ed14
  40ed36:	mov    edx,0xe1aa1548
  40ed3b:	pusha  
  40ed3c:	sbb    cl,al
  40ed3e:	push   edi
  40ed3f:	sub    eax,0x53cd6fc4
  40ed44:	cmp    BYTE PTR [ebx-0x63],0xb0
  40ed48:	leave  
  40ed49:	ds xchg esi,eax
  40ed4b:	jns    0x40ecd8
  40ed4d:	and    ebx,DWORD PTR [ebx+0xdcfa233]
  40ed53:	int3   
  40ed54:	loope  0x40ed85
  40ed56:	push   esi
  40ed57:	cmp    BYTE PTR [edi],al
  40ed59:	out    dx,al
  40ed5a:	inc    BYTE PTR [esi+edi*2+0x4761b81]
  40ed61:	out    dx,al
  40ed62:	and    dh,ah
  40ed64:	mov    ah,0x8f
  40ed66:	loop   0x40ed08
  40ed68:	mov    ?,WORD PTR [edi-0x2f94b29f]
  40ed6e:	push   ebx
  40ed6f:	sbb    DWORD PTR [ebx-0x4c774297],eax
  40ed75:	(bad)  
  40ed77:	clc    
  40ed78:	out    0x96,al
  40ed7a:	repz call 0x2897:0xf3ba4753
  40ed82:	add    eax,0xe967acbf
  40ed87:	(bad)  
  40ed89:	retf   0x6696
  40ed8c:	sub    al,0x95
  40ed8e:	iret   
  40ed8f:	push   0x1a
  40ed91:	aaa    
  40ed92:	(bad)  
  40ed93:	mov    esp,0xffedbee0
  40ed98:	jge    0x40ed5c
  40ed9a:	in     eax,dx
  40ed9b:	push   ecx
  40ed9c:	hlt    
  40ed9d:	je     0x40edce
  40ed9f:	fwait
  40eda0:	(bad)  
  40eda1:	in     al,dx
  40eda2:	add    al,0xa9
  40eda4:	sbb    ebp,DWORD PTR [eax+0x73637a77]
  40edaa:	inc    eax
  40edab:	or     eax,0x3519727a
  40edb0:	pop    esp
  40edb1:	xlat   BYTE PTR ds:[ebx]
  40edb2:	jbe    0x40ed5d
  40edb4:	and    ecx,esp
  40edb6:	mov    eax,ds:0xf935ffe
  40edbb:	mov    edx,0x6e4c32a6
  40edc0:	dec    ebp
  40edc1:	call   0x1cad:0xfeaf9ab0
  40edc8:	dec    edx
  40edc9:	jns    0x40eda0
  40edcb:	out    0x4a,al
  40edcd:	outs   dx,DWORD PTR ds:[esi]
  40edce:	dec    edx
  40edcf:	push   edx
  40edd0:	mov    ds:0xbadb86f7,eax
  40edd5:	jp     0x40ed78
  40edd7:	test   al,0x96
  40edd9:	mov    eax,0xd453f43c
  40eddf:	push   eax
  40ede0:	outs   dx,BYTE PTR ds:[esi]
  40ede1:	pusha  
  40ede2:	jmp    0x5b65:0xa1f02c06
  40ede9:	out    0x83,eax
  40edeb:	outs   dx,DWORD PTR ds:[esi]
  40edec:	(bad)  
  40eded:	aas    
  40edee:	ds jmp 0x40ee21
  40edf1:	(bad)  
  40edf2:	fidiv  DWORD PTR [edi+0x6da699c4]
  40edf8:	jg     0x40ee30
  40edfa:	stos   BYTE PTR es:[edi],al
  40edfb:	jge    0x40edf9
  40edfd:	daa    
  40edfe:	xchg   ecx,eax
  40edff:	scas   al,BYTE PTR es:[edi]
  40ee00:	dec    ebp
  40ee01:	loope  0x40ee82
  40ee03:	add    al,0x24
  40ee05:	in     al,dx
  40ee06:	ficomp DWORD PTR [edx-0x6c59ef11]
  40ee0c:	mov    dh,0xe3
  40ee0e:	jae    0x40edc0
  40ee10:	or     DWORD PTR [edx+0x5f],0xff2d59d5
  40ee17:	xor    al,0x55
  40ee19:	dec    edi
  40ee1a:	mov    edi,0x29df54b7
  40ee1f:	add    edi,DWORD PTR [edx]
  40ee21:	scas   eax,DWORD PTR es:[edi]
  40ee22:	and    DWORD PTR ds:0xe31ae871,edi
  40ee28:	pop    eax
  40ee29:	jp     0x40ee39
  40ee2b:	lds    esi,FWORD PTR [eax+0x5dd7072b]
  40ee31:	jb     0x40ee3e
  40ee33:	in     eax,0x4d
  40ee35:	fnstsw WORD PTR [esi+eax*2-0x10]
  40ee39:	iret   
  40ee3a:	sbb    al,0x48
  40ee3c:	mov    eax,ds:0x475ad11c
  40ee41:	cs std 
  40ee43:	mov    ch,0xb3
  40ee45:	mov    al,ds:0x46ebc1cf
  40ee4a:	pop    es
  40ee4b:	leave  
  40ee4c:	inc    edx
  40ee4d:	lea    ebx,[edi+0x7b]
  40ee50:	jle    0x40ee72
  40ee52:	clc    
  40ee53:	icebp  
  40ee54:	cmp    BYTE PTR [edi+0x30d0acb],dl
  40ee5a:	test   BYTE PTR [eax],0x5
  40ee5d:	pop    ds
  40ee5e:	fbstp  TBYTE PTR [edi+0x1e]
  40ee61:	dec    esp
  40ee62:	xor    edi,DWORD PTR [esi+0x77]
  40ee65:	mov    dl,0x5f
  40ee67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee68:	jb     0x40edfe
  40ee6a:	mov    ebx,0x13fa601d
  40ee6f:	push   ebp
  40ee70:	shl    ecx,1
  40ee72:	mov    DWORD PTR [ebp-0x7a62b852],edi
  40ee78:	mov    fs,WORD PTR [esi-0x694a69b]
  40ee7e:	loopne 0x40eea0
  40ee80:	push   edx
  40ee81:	popa   
  40ee82:	mov    cl,0x40
  40ee84:	adc    al,0xc5
  40ee86:	mov    al,0xc1
  40ee88:	data16 cli 
  40ee8a:	stos   DWORD PTR es:[edi],eax
  40ee8b:	push   ebx
  40ee8c:	fs and edi,edi
  40ee8f:	add    DWORD PTR [eax-0x48],0x4dc41b60
  40ee96:	dec    eax
  40ee97:	test   DWORD PTR cs:[edx+eax*8],edx
  40ee9b:	pop    ebx
  40ee9c:	out    dx,al
  40ee9d:	mov    edx,0x23669f95
  40eea2:	(bad)
  40eea5:	jp     0x40eebd
  40eea7:	inc    esp
  40eea8:	mov    esp,0x70b4e32e
  40eead:	mov    cl,0x20
  40eeaf:	leave  
  40eeb0:	retf   0x56f3
  40eeb3:	outs   dx,BYTE PTR ds:[esi]
  40eeb4:	mov    esp,0x269718e8
  40eeb9:	or     BYTE PTR [edi-0x6d3ab14b],al
  40eebf:	pop    ebx
  40eec0:	push   edx
  40eec1:	or     al,0xa2
  40eec3:	ss mov ah,0xd3
  40eec6:	adc    al,0x89
  40eec8:	shl    BYTE PTR [ecx-0x5d8cc5b7],cl
  40eece:	pop    edi
  40eecf:	fst    st(3)
  40eed1:	adc    bh,0x6e
  40eed4:	dec    ebp
  40eed5:	fimul  DWORD PTR [eax]
  40eed7:	pop    edx
  40eed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed9:	jae    0x40ef0f
  40eedb:	or     ebp,eax
  40eedd:	aas    
  40eede:	xor    eax,0x83a79a35
  40eee3:	jp     0x40eeaf
  40eee5:	sar    BYTE PTR [edi-0x38],1
  40eee8:	sbb    dl,BYTE PTR [eax+0x6f]
  40eeeb:	imul   edi,edi,0xffffffe3
  40eeee:	jbe    0x40ef37
  40eef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eef1:	push   edi
  40eef2:	xor    ecx,esi
  40eef4:	pop    esi
  40eef5:	rol    BYTE PTR [eax],1
  40eef7:	test   DWORD PTR [ecx],edx
  40eef9:	rcr    DWORD PTR [edi],0xd8
  40eefc:	mov    al,ds:0x65d4ca55
  40ef01:	cld    
  40ef02:	and    al,0x1a
  40ef04:	inc    eax
  40ef05:	xchg   ebp,eax
  40ef06:	push   edx
  40ef07:	pop    edx
  40ef08:	mov    dh,0x32
  40ef0a:	or     bh,cl
  40ef0c:	push   edi
  40ef0d:	push   0xf
  40ef0f:	and    DWORD PTR [ebx],edi
  40ef11:	test   al,0x6b
  40ef13:	inc    edx
  40ef14:	xor    eax,0x11cde871
  40ef19:	add    BYTE PTR [esi*4-0x2556f48c],ah
  40ef20:	pusha  
  40ef21:	inc    eax
  40ef22:	pushf  
  40ef23:	fsubr  DWORD PTR [eax-0x4c]
  40ef26:	mov    ch,0xed
  40ef28:	push   edx
  40ef29:	out    dx,eax
  40ef2a:	repz adc BYTE PTR [esi+0x2c],dh
  40ef2e:	xchg   edx,eax
  40ef2f:	and    eax,0x1481486a
  40ef34:	loopne 0x40ef32
  40ef36:	ins    DWORD PTR es:[edi],dx
  40ef37:	mov    esp,0x788c4ac7
  40ef3c:	dec    esi
  40ef3d:	std    
  40ef3e:	jns    0x40eec1
  40ef40:	mov    ecx,0x4fa85727
  40ef45:	xor    DWORD PTR [esi-0x503c0e0d],0xfc655af7
  40ef4f:	adc    al,bh
  40ef51:	inc    esp
  40ef52:	push   ebx
  40ef53:	jmp    0x64a17251
  40ef58:	enter  0xbdc8,0x21
  40ef5c:	dec    esi
  40ef5d:	or     al,0xd4
  40ef5f:	push   cs
  40ef60:	test   DWORD PTR [ecx],ebx
  40ef62:	mov    cl,0xf6
  40ef64:	pop    eax
  40ef65:	je     0x40eef3
  40ef67:	pop    edi
  40ef68:	scas   al,BYTE PTR es:[edi]
  40ef69:	mov    ch,0xd4
  40ef6b:	and    BYTE PTR [edi-0x799791d0],al
  40ef71:	stc    
  40ef72:	mov    ch,0x56
  40ef74:	add    al,0x77
  40ef76:	mul    BYTE PTR [edx*8-0x6e24f02d]
  40ef7d:	fsubr  st(4),st
  40ef7f:	add    bh,cl
  40ef81:	bound  esi,QWORD PTR [edi+0x757b52b5]
  40ef87:	jb     0x40ef16
  40ef89:	dec    ebp
  40ef8a:	retf   
  40ef8b:	into   
  40ef8c:	ror    BYTE PTR [ebp-0x1d7e499e],cl
  40ef92:	pop    ds
  40ef93:	xchg   DWORD PTR [esi+0x6f],ebx
  40ef96:	jbe    0x40efb1
  40ef98:	aaa    
  40ef99:	(bad)  
  40ef9b:	pop    ds
  40ef9c:	inc    esp
  40ef9d:	jns    0x40ef9c
  40ef9f:	sub    al,0xe
  40efa1:	mov    ah,0xf8
  40efa3:	sahf   
  40efa4:	ror    BYTE PTR [edx+0xf],0x33
  40efa8:	outs   dx,BYTE PTR ds:[esi]
  40efa9:	ret    
  40efaa:	pop    ss
  40efab:	std    
  40efac:	xchg   edi,eax
  40efad:	pop    es
  40efae:	jg     0x40ef92
  40efb0:	xor    al,ch
  40efb2:	jge    0x40ef55
  40efb4:	in     eax,dx
  40efb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb6:	mov    ecx,0x2d0c936d
  40efbb:	cld    
  40efbc:	(bad)  
  40efbd:	(bad)  
  40efbe:	jmp    0x40efad
  40efc0:	fwait
  40efc1:	sub    DWORD PTR [ecx-0x2b76109e],edx
  40efc7:	ss mov bh,0xf5
  40efca:	(bad)  [edx]
  40efcc:	repnz sub edx,edx
  40efcf:	shl    DWORD PTR [ecx],1
  40efd1:	mov    cl,0xdf
  40efd3:	outs   dx,DWORD PTR ds:[esi]
  40efd4:	aam    0x4e
  40efd6:	mov    eax,ds:0xdca42bd5
  40efdb:	bound  ecx,QWORD PTR [esi+eax*8]
  40efde:	popa   
  40efdf:	dec    ebp
  40efe0:	mov    WORD PTR [edx],?
  40efe2:	sbb    BYTE PTR [bx+si+0x5],dh
  40efe6:	add    al,0x7d
  40efe8:	xchg   edx,eax
  40efe9:	push   es
  40efea:	imul   esi,DWORD PTR [ebx+0x6702729b],0xb869c000
  40eff4:	test   BYTE PTR [edx-0x2d0301b8],dl
  40effa:	mov    edx,0xa01d192e
  40efff:	or     DWORD PTR [eax+0x312bc58b],ebx
  40f005:	pop    esi
  40f006:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40f008:	dec    edi
  40f009:	sar    eax,0xc7
  40f00c:	ret    
  40f00d:	aaa    
  40f00e:	in     al,dx
  40f00f:	push   esp
  40f010:	sti    
  40f011:	or     al,0x12
  40f013:	jg     0x40efcc
  40f015:	jecxz  0x40efe3
  40f017:	(bad)  
  40f018:	jnp    0x40f082
  40f01a:	iret   
  40f01b:	mov    dh,0x9a
  40f01d:	push   esi
  40f01e:	inc    ecx
  40f01f:	jb     0x40f086
  40f021:	xchg   esp,eax
  40f022:	in     al,dx
  40f023:	push   0x1e
  40f025:	and    eax,0xae450d51
  40f02a:	outs   dx,BYTE PTR ds:[esi]
  40f02b:	inc    ecx
  40f02c:	add    BYTE PTR [ecx],ch
  40f02e:	mov    dl,0x61
  40f030:	adc    bl,BYTE PTR [edx-0x76]
  40f033:	jmp    0x62ec996
  40f038:	int3   
  40f039:	cld    
  40f03a:	mov    bl,0x68
  40f03c:	inc    edx
  40f03d:	js     0x40f08c
  40f03f:	dec    eax
  40f040:	push   ecx
  40f041:	cld    
  40f042:	push   ss
  40f043:	or     al,0x12
  40f045:	aam    0xbd
  40f047:	sub    eax,0x99628c6f
  40f04c:	dec    ebp
  40f04d:	inc    esi
  40f04e:	jae    0x40f097
  40f050:	neg    BYTE PTR [esp+esi*2]
  40f053:	sbb    al,0x95
  40f055:	adc    DWORD PTR [esp+eax*4+0x4],ecx
  40f059:	add    ah,bh
  40f05b:	cmp    cl,BYTE PTR [esi]
  40f05d:	pop    es
  40f05e:	cli    
  40f05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f060:	xlat   BYTE PTR ds:[ebx]
  40f061:	test   BYTE PTR [edi+0x25f75ea],al
  40f067:	gs cmc 
  40f069:	or     esp,DWORD PTR [ecx+0x20f820bb]
  40f06f:	dec    ch
  40f071:	(bad)  
  40f073:	out    0x88,al
  40f075:	cmp    BYTE PTR [edx-0x2e],ch
  40f078:	fild   QWORD PTR [esi-0x4b]
  40f07b:	and    al,0xf5
  40f07d:	std    
  40f07e:	pop    esi
  40f07f:	das    
  40f080:	(bad)  
  40f082:	icebp  
  40f083:	mov    eax,0x81246a4b
  40f088:	mov    ds:0x4dbb495c,eax
  40f08d:	cmp    al,0xdd
  40f08f:	sti    
  40f090:	sbb    DWORD PTR [edi+0x1],ebp
  40f093:	inc    ecx
  40f094:	dec    esp
  40f095:	push   esp
  40f096:	pop    es
  40f097:	(bad)  
  40f099:	ins    BYTE PTR es:[edi],dx
  40f09a:	add    al,0xb3
  40f09c:	pop    esp
  40f09d:	inc    esi
  40f09e:	add    al,0x94
  40f0a0:	dec    edx
  40f0a1:	dec    esi
  40f0a2:	push   ebx
  40f0a3:	dec    esp
  40f0a4:	and    DWORD PTR [esi],ecx
  40f0a6:	sbb    DWORD PTR [edi],edi
  40f0a8:	enter  0xaddc,0xba
  40f0ac:	and    eax,0xd898d249
  40f0b1:	add    ah,0x17
  40f0b4:	push   edi
  40f0b5:	(bad)  
  40f0b6:	iret   
  40f0b7:	jne    0x40f0ed
  40f0b9:	jns    0x40f0c0
  40f0bb:	push   ecx
  40f0bc:	frstor [esi]
  40f0be:	xor    eax,0x3c651019
  40f0c3:	mov    eax,ds:0x7f823dfd
  40f0c8:	inc    edx
  40f0c9:	js     0x40f10e
  40f0cb:	inc    esi
  40f0cc:	scas   al,BYTE PTR es:[edi]
  40f0cd:	neg    DWORD PTR [ecx+0x19]
  40f0d0:	xchg   edx,eax
  40f0d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0d2:	push   cs
  40f0d3:	in     al,0x5c
  40f0d5:	das    
  40f0d6:	(bad)  
  40f0d7:	sub    ebx,DWORD PTR [eax-0x60]
  40f0da:	adc    eax,0x7cf35ee6
  40f0df:	push   esp
  40f0e0:	out    dx,eax
  40f0e1:	xlat   BYTE PTR ds:[ebx]
  40f0e2:	leave  
  40f0e3:	ds mov dh,0xb7
  40f0e6:	mov    edi,0x316f55a1
  40f0eb:	add    DWORD PTR [ebx],edi
  40f0ed:	adc    al,0xee
  40f0ef:	mov    ch,0x45
  40f0f1:	mov    ?,WORD PTR [edx-0x6b892f21]
  40f0f7:	or     eax,0x5caa0d1a
  40f0fc:	in     al,0xdc
  40f0fe:	mov    ds:0xe402d038,al
  40f103:	iret   
  40f104:	scas   eax,DWORD PTR es:[edi]
  40f105:	call   0x2900:0xdd7ad41f
  40f10c:	inc    edi
  40f10d:	pop    ebx
  40f10e:	jb     0x40f091
  40f110:	(bad)  
  40f111:	or     ebx,DWORD PTR [edx+edx*2]
  40f114:	in     eax,dx
  40f115:	adc    WORD PTR [eax-0x7abec4c1],di
  40f11c:	imul   esi,esi,0x41
  40f11f:	nop
  40f120:	add    BYTE PTR [ebx-0x3d],cl
  40f123:	aaa    
  40f124:	mov    ch,0xd7
  40f126:	clc    
  40f127:	rcl    BYTE PTR [ebx],1
  40f129:	jmp    0xe352:0xc2322fb4
  40f130:	mov    ah,0xda
  40f132:	or     al,0xba
  40f134:	pop    edi
  40f135:	repnz mov ch,0x1e
  40f138:	push   edi
  40f139:	jl     0x40f1ac
  40f13b:	imul   eax,DWORD PTR [edx+0x2f3d8fac],0xfffffff4
  40f142:	mov    ecx,ss
  40f144:	(bad)  
  40f145:	icebp  
  40f146:	out    dx,eax
  40f147:	and    DWORD PTR [ebx-0x56],0x14
  40f14b:	repz out dx,eax
  40f14d:	push   esp
  40f14e:	mov    edx,DWORD PTR [ebp-0x7]
  40f151:	bound  esp,QWORD PTR [edi]
  40f153:	fs mov bh,0xfd
  40f156:	loope  0x40f18e
  40f158:	mov    edx,DWORD PTR [edx+0x77]
  40f15b:	mov    ch,0x41
  40f15d:	xor    DWORD PTR [eax-0x51],edx
  40f160:	inc    ebp
  40f161:	mov    cl,0x7a
  40f163:	mov    esp,0xb58287a4
  40f168:	sbb    dl,BYTE PTR [eax-0x4b]
  40f16b:	aad    0x21
  40f16d:	dec    ebx
  40f16e:	mov    ebx,0x5ec0c022
  40f173:	and    DWORD PTR ds:0xef02712a,ecx
  40f179:	punpckhdq mm4,mm0
  40f17c:	cmp    al,0x51
  40f17e:	jecxz  0x40f1fd
  40f180:	cs pop esi
  40f182:	pushf  
  40f183:	dec    ebx
  40f184:	sbb    ebx,eax
  40f186:	push   esp
  40f187:	or     eax,0x8cf63598
  40f18c:	mov    eax,ds:0x9c5242cf
  40f191:	popa   
  40f192:	ds (bad) 
  40f194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f195:	aam    0x7e
  40f197:	jno    0x40f13c
  40f199:	rcl    ebp,cl
  40f19b:	in     eax,0xaf
  40f19d:	lods   al,BYTE PTR ds:[esi]
  40f19e:	loopne 0x40f1fc
  40f1a0:	mov    dl,0xc7
  40f1a2:	and    ecx,esp
  40f1a4:	addr16 pop esi
  40f1a6:	mov    WORD PTR [esp+eiz*4-0x69c6783c],ds
  40f1ad:	dec    esp
  40f1ae:	loop   0x40f135
  40f1b0:	push   ecx
  40f1b1:	adc    dl,0xda
  40f1b4:	loope  0x40f13d
  40f1b6:	mov    cl,0xc9
  40f1b8:	or     BYTE PTR [si-0x7f],0xaa
  40f1bd:	shl    BYTE PTR [edi-0x70],0xa5
  40f1c1:	gs push ebp
  40f1c3:	aad    0x68
  40f1c5:	inc    esp
  40f1c6:	iret   
  40f1c7:	iret   
  40f1c8:	enter  0x89c4,0xc7
  40f1cc:	aaa    
  40f1cd:	aaa    
  40f1ce:	fdiv   st,st(3)
  40f1d0:	cmp    BYTE PTR [edx+0x67ac744b],0x32
  40f1d7:	scas   eax,DWORD PTR es:[edi]
  40f1d8:	rcr    DWORD PTR [edx],1
  40f1da:	cmp    cl,BYTE PTR [edx+edx*1]
  40f1dd:	scas   al,BYTE PTR es:[edi]
  40f1de:	test   al,0x2f
  40f1e0:	cmp    BYTE PTR [ebp+0x7bdf5284],0xc7
  40f1e7:	(bad)  
  40f1e8:	scas   eax,DWORD PTR es:[edi]
  40f1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ea:	fisttp DWORD PTR [eax+0x6d]
  40f1ed:	cli    
  40f1ee:	enterw 0x46e5,0xdf
  40f1f3:	jne    0x40f1b9
  40f1f5:	jmp    0x9eba:0x8547e6e9
  40f1fc:	adc    BYTE PTR [ecx],dh
  40f1fe:	push   0x1
  40f200:	enter  0xa53b,0x35
  40f204:	inc    ebx
  40f205:	int    0xdd
  40f207:	inc    BYTE PTR [ecx+edi*4+0x345931d7]
  40f20e:	dec    ecx
  40f20f:	xor    al,0x46
  40f211:	retf   0xa447
  40f214:	jge    0x40f1b6
  40f216:	in     al,0x23
  40f218:	hlt    
  40f219:	sti    
  40f21a:	loopne 0x40f1fe
  40f21c:	mov    ss:0xed26463d,al
  40f222:	iret   
  40f223:	jae    0x40f289
  40f225:	lea    ecx,[eax+0x6fa23563]
  40f22b:	lea    esp,[edx+ebx*2]
  40f22e:	mov    ebp,0xdb7dd64f
  40f233:	retf   
  40f234:	repnz stc 
  40f236:	jmp    0x9e99255
  40f23b:	inc    edx
  40f23c:	add    BYTE PTR [ebx-0x375189a7],dl
  40f242:	popf   
  40f243:	stos   DWORD PTR es:[edi],eax
  40f244:	pop    ecx
  40f245:	arpl   WORD PTR [eax+0x1719ffc5],dx
  40f24b:	fwait
  40f24c:	sub    ch,bl
  40f24e:	iret   
  40f24f:	pop    edi
  40f250:	test   DWORD PTR [edi-0x41],0x95529d5e
  40f257:	mov    DWORD PTR [eax+0x56e8be51],edi
  40f25d:	push   cs
  40f25e:	out    dx,al
  40f25f:	jl     0x40f296
  40f261:	mov    al,ds:0xf5f3543e
  40f266:	and    al,BYTE PTR [ecx+0x7af0550d]
  40f26c:	jno    0x40f1f8
  40f26e:	xchg   edi,eax
  40f26f:	lods   eax,DWORD PTR ds:[esi]
  40f270:	pushf  
  40f271:	mov    DWORD PTR [edi+0x77047ee],ecx
  40f277:	rcr    BYTE PTR [ecx+eiz*4],1
  40f27a:	sub    esp,edi
  40f27c:	shl    ebp,cl
  40f27e:	fs pop esp
  40f280:	fs js  0x40f283
  40f283:	(bad)  
  40f285:	add    esp,ecx
  40f287:	es mov esp,0xf38a8071
  40f28d:	ja     0x40f297
  40f28f:	mov    ebx,0xbdfc1c6b
  40f294:	sbb    edi,DWORD PTR [edx+0xa]
  40f297:	and    al,0x44
  40f299:	push   es
  40f29a:	xchg   DWORD PTR [edi-0x6d],eax
  40f29d:	out    0x59,al
  40f29f:	adc    DWORD PTR [edx-0x189b56e2],0x48f053bc
  40f2a9:	(bad)  
  40f2aa:	add    ch,BYTE PTR [esi-0x1b]
  40f2ad:	pop    ds
  40f2ae:	xchg   ebp,eax
  40f2af:	rcr    DWORD PTR [esi],1
  40f2b1:	sbb    ch,BYTE PTR [ebx-0x55]
  40f2b4:	scas   eax,DWORD PTR es:[edi]
  40f2b5:	push   cs
  40f2b6:	test   al,0xea
  40f2b8:	outs   dx,DWORD PTR ds:[esi]
  40f2b9:	jns    0x40f304
  40f2bb:	mov    ds:0xa5e55179,al
  40f2c0:	arpl   WORD PTR [ecx],bp
  40f2c2:	aam    0x6c
  40f2c4:	idiv   DWORD PTR [edi+0x22]
  40f2c7:	rcl    edx,0x8
  40f2ca:	xor    dl,bh
  40f2cc:	cmp    edx,DWORD PTR [esi]
  40f2ce:	mov    edx,0xcab08ac
  40f2d3:	sbb    DWORD PTR ds:0xc9ab24b0,eax
  40f2d9:	sti    
  40f2da:	pop    ss
  40f2db:	and    eax,0xc9f9c37a
  40f2e0:	fldenv [ebp*8-0xa565120]
  40f2e7:	add    eax,esi
  40f2e9:	aaa    
  40f2ea:	retf   
  40f2eb:	fstp   QWORD PTR [eax]
  40f2ed:	retf   
  40f2ee:	in     al,0x42
  40f2f0:	lock ins BYTE PTR es:[edi],dx
  40f2f2:	add    eax,0x5d4eeae2
  40f2f7:	dec    esp
  40f2f8:	scas   eax,DWORD PTR es:[edi]
  40f2f9:	fistp  QWORD PTR [bp+di+0x3d]
  40f2fd:	popf   
  40f2fe:	nop
  40f2ff:	or     al,0xa8
  40f301:	jecxz  0x40f35e
  40f303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f304:	arpl   WORD PTR [eax-0x25],bp
  40f307:	sub    bl,BYTE PTR [edi]
  40f309:	pop    ds
  40f30a:	xchg   ecx,eax
  40f30b:	push   ebx
  40f30c:	pop    ebp
  40f30d:	into   
  40f30e:	faddp  st(3),st
  40f310:	enter  0x69ea,0x22
  40f314:	aaa    
  40f315:	xor    ebp,esi
  40f317:	out    dx,eax
  40f318:	jb     0x40f2f0
  40f31a:	outs   dx,DWORD PTR ds:[esi]
  40f31b:	cmp    al,al
  40f31d:	repz pushf 
  40f31f:	test   al,0x43
  40f321:	das    
  40f322:	ja     0x40f306
  40f324:	mov    esi,0x1b766a7d
  40f329:	dec    eax
  40f32a:	ss mov bh,0xec
  40f32d:	stos   BYTE PTR es:[edi],al
  40f32e:	xchg   esp,eax
  40f32f:	adc    DWORD PTR [edi],0x7b
  40f332:	jnp    0x40f2d6
  40f334:	(bad)  
  40f335:	(bad)  
  40f337:	pop    ds
  40f338:	bound  esp,QWORD PTR [ecx+0xc93fda6]
  40f33e:	dec    edi
  40f33f:	clc    
  40f340:	lods   eax,DWORD PTR ds:[esi]
  40f341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f342:	and    al,0xb6
  40f344:	xor    eax,DWORD PTR [ecx+0x1fd0bef0]
  40f34a:	cwde   
  40f34b:	std    
  40f34c:	sub    eax,0x27c54bd9
  40f351:	or     DWORD PTR [ecx+eiz*2-0x5],0x801b873
  40f359:	arpl   WORD PTR [edx-0x1f01ab98],ax
  40f35f:	aam    0x89
  40f361:	push   ds
  40f362:	xchg   esi,eax
  40f363:	add    al,0x18
  40f365:	mov    ebp,0xbecabcdf
  40f36a:	inc    esi
  40f36b:	jb     0x40f3c1
  40f36d:	loope  0x40f3bb
  40f36f:	dec    ebx
  40f370:	sbb    al,0xa6
  40f372:	ins    DWORD PTR es:[edi],dx
  40f373:	dec    eax
  40f374:	mov    dl,0x76
  40f376:	(bad)  
  40f378:	adc    al,0xe4
  40f37a:	test   al,0xe6
  40f37c:	ds xchg edx,eax
  40f37e:	add    BYTE PTR [ebx+edi*4],dl
  40f381:	fwait
  40f382:	pop    ds
  40f383:	outs   dx,DWORD PTR ds:[esi]
  40f384:	or     ebp,edx
  40f386:	std    
  40f387:	push   esp
  40f388:	mov    eax,ds:0x306a3c34
  40f38d:	ins    BYTE PTR es:[edi],dx
  40f38e:	ror    edx,1
  40f390:	nop
  40f391:	add    ebx,DWORD PTR [esi]
  40f393:	inc    DWORD PTR [esi+ecx*4-0x6e7b8593]
  40f39a:	push   cs
  40f39b:	jae    0x40f34d
  40f39d:	cmp    dh,0x84
  40f3a0:	xor    eax,0x5b3c897a
  40f3a5:	and    bl,BYTE PTR [esi+0x165cbaea]
  40f3ab:	ins    BYTE PTR es:[edi],dx
  40f3ac:	and    esi,eax
  40f3ae:	outs   dx,BYTE PTR ds:[esi]
  40f3af:	(bad)
  40f3b2:	call   0xb3c7:0xdbf9256e
  40f3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3ba:	and    al,0x77
  40f3bc:	jo     0x40f40c
  40f3be:	daa    
  40f3bf:	sbb    bl,BYTE PTR [edx-0x51]
  40f3c2:	adc    eax,DWORD PTR [edx]
  40f3c4:	test   BYTE PTR [ebx+0x9],cl
  40f3c7:	adc    al,0xe2
  40f3c9:	inc    ebx
  40f3ca:	popf   
  40f3cb:	(bad)  
  40f3cc:	pop    ebp
  40f3cd:	sahf   
  40f3ce:	out    0x45,al
  40f3d0:	dec    ecx
  40f3d1:	shl    BYTE PTR [ebp+eiz*1-0x67853fed],cl
  40f3d8:	mov    BYTE PTR [esi+0x5f],ch
  40f3db:	loop   0x40f3b8
  40f3dd:	jnp    0x40f3e3
  40f3df:	sub    ecx,DWORD PTR [edi+edx*8-0x416898d1]
  40f3e6:	dec    edx
  40f3e7:	jnp    0x40f3fc
  40f3e9:	adc    ecx,DWORD PTR [esi+0x4044741c]
  40f3ef:	sahf   
  40f3f0:	pop    ss
  40f3f1:	mov    BYTE PTR [ebx+edi*8-0x36d4a2cd],ch
  40f3f8:	jmp    0xdd92:0x712d8086
  40f3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f400:	in     al,dx
  40f401:	or     BYTE PTR [esi-0x3619296e],ah
  40f407:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f409:	xor    DWORD PTR [esi-0x3e],esi
  40f40c:	and    DWORD PTR [esp+edx*4+0x5439c277],0xe6cbf0d8
  40f417:	call   0x8f60:0xf0eace59
  40f41e:	imul   ebp,edi,0x7d6e5b37
  40f424:	shld   esi,esp,0x7e
  40f428:	cmp    DWORD PTR [esp+esi*2-0x6],edx
  40f42c:	imul   eax,DWORD PTR [eax],0xffffffb6
  40f42f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f431:	das    
  40f432:	stos   BYTE PTR es:[edi],al
  40f433:	mov    dl,0x48
  40f435:	sti    
  40f436:	cmp    dh,dh
  40f438:	or     dh,BYTE PTR ds:0x51ca129e
  40f43e:	push   0x61f7c63f
  40f443:	in     al,dx
  40f444:	stos   BYTE PTR es:[edi],al
  40f445:	push   esp
  40f446:	and    eax,0x7cfc8a66
  40f44b:	jno    0x40f4c2
  40f44d:	xor    ebp,esi
  40f44f:	xchg   esi,eax
  40f450:	cmp    DWORD PTR [edi-0x6828ccc3],esi
  40f456:	aam    0x1c
  40f458:	mov    edx,0x18e72043
  40f45d:	test   BYTE PTR [edi+0x1ce1c39d],0x4c
  40f464:	inc    ecx
  40f465:	repz dec esi
  40f467:	pop    ebp
  40f468:	or     DWORD PTR ss:[edi],0xffffffbf
  40f46c:	jno    0x40f45d
  40f46e:	inc    esp
  40f46f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f470:	sbb    DWORD PTR [edi+0x175a66ab],ecx
  40f476:	fwait
  40f477:	stos   BYTE PTR es:[edi],al
  40f478:	mov    eax,ds:0x87ca5399
  40f47d:	push   0xfe151a90
  40f482:	fst    QWORD PTR [ecx+0x47]
  40f485:	retf   
  40f486:	aam    0x52
  40f488:	or     edi,ebp
  40f48a:	fcomi  st,st(1)
  40f48c:	inc    ebp
  40f48d:	test   DWORD PTR [ebx],edi
  40f48f:	loope  0x40f4e9
  40f491:	mov    bl,bh
  40f493:	jb     0x40f4cf
  40f495:	pop    edx
  40f497:	push   eax
  40f498:	jne    0x40f4ef
  40f49a:	ret    0xcbd8
  40f49d:	jo     0x40f469
  40f49f:	stos   BYTE PTR es:[edi],al
  40f4a0:	inc    esi
  40f4a1:	stc    
  40f4a2:	push   esi
  40f4a3:	imul   eax
  40f4a5:	pop    esi
  40f4a6:	sbb    ecx,eax
  40f4a8:	add    BYTE PTR [edx+0x24],ah
  40f4ab:	jl     0x40f47d
  40f4ad:	retf   0xb1ad
  40f4b0:	call   0x7804:0x7bb680c1
  40f4b7:	rol    cl,0x20
  40f4ba:	xchg   esp,eax
  40f4bb:	inc    eax
  40f4bc:	or     ah,BYTE PTR [edi]
  40f4be:	aas    
  40f4bf:	jl     0x40f48e
  40f4c1:	cli    
  40f4c2:	add    al,0x9
  40f4c4:	scas   eax,DWORD PTR es:[di]
  40f4c6:	cmp    eax,0xbb1aa25f
  40f4cb:	ficomp WORD PTR [ebp+0x43eba2c1]
  40f4d1:	push   ebx
  40f4d2:	jp     0x40f4ee
  40f4d4:	pop    DWORD PTR [esi-0x436115fe]
  40f4da:	test   al,0x51
  40f4dc:	jbe    0x40f471
  40f4de:	jns    0x40f547
  40f4e0:	jb     0x40f545
  40f4e2:	out    0xfc,eax
  40f4e4:	iret   
  40f4e5:	cld    
  40f4e6:	call   0x414e7589
  40f4eb:	scas   al,BYTE PTR es:[edi]
  40f4ec:	sub    dl,BYTE PTR ds:0x5e716e2d
  40f4f2:	cmp    ah,BYTE PTR [esi-0x58ffb2e5]
  40f4f8:	mov    bl,0xe9
  40f4fa:	mov    edx,DWORD PTR [edi]
  40f4fc:	inc    dl
  40f4fe:	mov    edx,0xdf6c6a0f
  40f503:	inc    edx
  40f504:	test   eax,0x8c9e79d1
  40f509:	pop    ecx
  40f50a:	xchg   cl,dh
  40f50c:	and    ecx,DWORD PTR [eax]
  40f50e:	out    0x69,al
  40f510:	mov    eax,0xdffd3c8b
  40f515:	int3   
  40f516:	dec    ebx
  40f517:	mov    al,ds:0x5fdb0f05
  40f51c:	addr16 push eax
  40f51e:	sub    BYTE PTR [ecx+ecx*2],bl
  40f521:	mov    edi,0x24f7a70d
  40f526:	sub    eax,0x1320565e
  40f52b:	mov    cl,0x30
  40f52d:	data16 sbb BYTE PTR ss:[ecx-0x6b],ch
  40f532:	cmp    DWORD PTR [ebx+0x62ba8338],0x7a
  40f539:	dec    esp
  40f53a:	inc    esp
  40f53b:	push   eax
  40f53c:	sbb    cl,dh
  40f53e:	or     edi,DWORD PTR [esi+ebp*8-0x565f9e8]
  40f545:	pop    esp
  40f546:	popa   
  40f547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f548:	inc    ecx
  40f549:	xchg   edx,eax
  40f54a:	add    edi,DWORD PTR [edi]
  40f54c:	cmp    ebx,DWORD PTR [ecx]
  40f54e:	js     0x40f531
  40f550:	test   BYTE PTR [ebx+0xd650698],ah
  40f556:	xchg   edx,eax
  40f557:	leave  
  40f558:	adc    al,0xed
  40f55a:	(bad)  
  40f55b:	aas    
  40f55c:	outs   dx,DWORD PTR ds:[esi]
  40f55d:	xlat   BYTE PTR ds:[ebx]
  40f55e:	retf   
  40f55f:	cdq    
  40f560:	and    bl,bh
  40f562:	inc    esp
  40f563:	loopne 0x40f583
  40f565:	mov    esi,0xb3559357
  40f56a:	mov    esi,0x929ea54b
  40f56f:	inc    DWORD PTR [ecx-0x20f4173c]
  40f575:	mov    al,0x6e
  40f577:	mov    WORD PTR [esi+0x10],ss
  40f57a:	push   edi
  40f57b:	sti    
  40f57c:	jp     0x40f507
  40f57e:	iret   
  40f57f:	jo     0x40f50f
  40f581:	loop   0x40f5b2
  40f583:	push   0xffffffd8
  40f585:	aam    0xa0
  40f587:	mov    al,0xdb
  40f589:	mov    ds:0xb061ab62,al
  40f58e:	cwde   
  40f58f:	fstp   DWORD PTR [ebp-0x7d]
  40f592:	xor    DWORD PTR [ebp-0x28f66667],edi
  40f598:	ret    
  40f599:	xchg   edx,eax
  40f59a:	push   ecx
  40f59b:	mul    BYTE PTR [ebx-0x1d2e433e]
  40f5a1:	outs   dx,BYTE PTR ds:[esi]
  40f5a2:	das    
  40f5a3:	xchg   esp,eax
  40f5a4:	mov    bh,BYTE PTR es:[esi+ebx*2-0x1c0cc202]
  40f5ac:	mov    ds:0xa9f5bf5,eax
  40f5b1:	pop    ebp
  40f5b2:	aaa    
  40f5b3:	pop    ecx
  40f5b4:	ja     0x40f57e
  40f5b6:	dec    ebx
  40f5b7:	ins    BYTE PTR es:[edi],dx
  40f5b8:	jbe    0x40f563
  40f5ba:	test   al,0x9f
  40f5bc:	hlt    
  40f5bd:	mov    edi,DWORD PTR [edi-0x59]
  40f5c0:	fadd   DWORD PTR [ecx-0x8]
  40f5c3:	inc    ebp
  40f5c4:	cmp    al,0xf4
  40f5c6:	xchg   edx,eax
  40f5c7:	push   ebx
  40f5c8:	jge    0x40f607
  40f5ca:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40f5cc:	sti    
  40f5cd:	adc    bh,dl
  40f5cf:	repz xchg edx,eax
  40f5d1:	shr    DWORD PTR [ecx-0xa],1
  40f5d4:	cmc    
  40f5d5:	mov    ah,0x32
  40f5d7:	test   DWORD PTR [edi],eax
  40f5d9:	cld    
  40f5da:	dec    esi
  40f5db:	mov    cl,0x18
  40f5dd:	mov    eax,0x783606d9
  40f5e2:	imul   esp,DWORD PTR [edi],0xddb2daf5
  40f5e8:	ins    DWORD PTR es:[edi],dx
  40f5e9:	stos   BYTE PTR es:[edi],al
  40f5ea:	and    al,0x34
  40f5ec:	das    
  40f5ed:	cmp    BYTE PTR [ecx+ecx*8+0x3544acb0],ah
  40f5f4:	xchg   ebp,eax
  40f5f5:	mov    ch,BYTE PTR [ebx+0x5bcc41a8]
  40f5fb:	lock cli 
  40f5fd:	add    DWORD PTR [edi],edx
  40f5ff:	sub    eax,edx
  40f601:	addr16 pop edx
  40f603:	prefetch (bad)
  40f604:	or     eax,0x34a763ec
  40f609:	dec    ebx
  40f60a:	fwait
  40f60b:	inc    ebx
  40f60c:	call   0x5b9b:0xd2203039
  40f613:	add    al,0x40
  40f615:	push   ebp
  40f616:	test   edi,esi
  40f618:	test   al,0x76
  40f61a:	xor    esi,ebp
  40f61c:	cdq    
  40f61d:	and    ch,BYTE PTR [ebx+0x49c78111]
  40f623:	add    eax,0xfaeddd6e
  40f628:	bound  ecx,QWORD PTR [esi+0x64a5d479]
  40f62e:	loope  0x40f678
  40f630:	inc    ebp
  40f631:	xchg   ebp,eax
  40f632:	sbb    BYTE PTR [eax-0x3ed9b567],0x6
  40f639:	test   eax,0xc3a794bb
  40f63e:	dec    esp
  40f63f:	ret    0x9bc3
  40f642:	test   eax,0xb22d038f
  40f647:	std    
  40f648:	dec    esp
  40f649:	add    bh,0xc0
  40f64c:	call   0xfbb2957f
  40f651:	stos   DWORD PTR es:[edi],eax
  40f652:	xor    BYTE PTR [esi],al
  40f654:	mov    ecx,0x9f0a6fc7
  40f659:	or     BYTE PTR [edx+0x15bcccff],bl
  40f65f:	jl     0x40f645
  40f661:	adc    ch,0xef
  40f664:	pop    eax
  40f665:	mov    ch,BYTE PTR [eax+0x70]
  40f668:	lahf   
  40f669:	ret    0x1ec1
  40f66c:	call   0xa70a:0xe10bd6c
  40f673:	out    dx,eax
  40f674:	outs   dx,BYTE PTR ds:[esi]
  40f675:	cmc    
  40f676:	loopne 0x40f6ed
  40f678:	xchg   edi,eax
  40f679:	xchg   esp,eax
  40f67a:	ret    0x8b08
  40f67d:	mov    ds:0xac05aeb1,eax
  40f682:	jo     0x40f621
  40f684:	fnstcw WORD PTR [esi-0x49b0cb07]
  40f68a:	adc    al,0xc0
  40f68c:	mov    esi,0xe12928c4
  40f691:	cli    
  40f692:	ds aam 0xd6
  40f695:	adc    DWORD PTR [edx+edx*2],esp
  40f698:	xchg   ebp,eax
  40f699:	mov    edi,0x676bf74e
  40f69e:	xor    al,BYTE PTR [ebx]
  40f6a0:	(bad)  
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0xd04727f0
  40f71a:	mov    al,BYTE PTR [edx]
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffa3
  40f724:	stc    
  40f725:	jmp    0xa483:0x57311b66
  40f72c:	ret    0x2793
  40f72f:	sub    dl,BYTE PTR [esi-0x5f4aeb40]
  40f735:	cmp    DWORD PTR [eax],esi
  40f737:	sbb    BYTE PTR [esi-0x6cc6b867],bl
  40f73d:	imul   esi,DWORD PTR [ebx-0x79d4f892],0x41
  40f744:	addr16 xchg ebp,eax
  40f746:	inc    eax
  40f747:	inc    ecx
  40f748:	mov    ebp,0xdc21361b
  40f74d:	loope  0x40f71f
  40f74f:	dec    ecx
  40f750:	add    al,0x9a
  40f752:	mov    eax,DWORD PTR ds:[eax]
  40f755:	jb     0x40f769
  40f757:	test   bh,ch
  40f759:	sbb    edi,DWORD PTR fs:[ecx+0x48f3d1d0]
  40f760:	fstp   DWORD PTR [esi+0x5b]
  40f763:	dec    edx
  40f764:	or     BYTE PTR ds:0xfde6bbd3,0x8b
  40f76b:	sub    BYTE PTR [ebx],al
  40f76d:	test   eax,0x2427facf
  40f772:	push   ds
  40f773:	sub    ebx,DWORD PTR [esi-0x69]
  40f776:	jmp    0xd5cb123b
  40f77b:	or     DWORD PTR [edi],esi
  40f77d:	test   DWORD PTR [ebx],edx
  40f77f:	mov    esi,eax
  40f781:	cmp    esi,DWORD PTR [ebx]
  40f783:	das    
  40f784:	lahf   
  40f785:	jle    0x40f73d
  40f787:	push   edi
  40f788:	dec    esp
  40f789:	cmp    edx,DWORD PTR [eax-0x60d3b8f9]
  40f78f:	xor    BYTE PTR [edx-0x59],0xa1
  40f793:	xor    eax,0xe3d96a48
  40f798:	call   0x90f6:0xeb78a9a9
  40f79f:	mov    cx,WORD PTR [ecx]
  40f7a2:	cdq    
  40f7a3:	cld    
  40f7a4:	retf   0x7826
  40f7a7:	push   ds
  40f7a8:	push   eax
  40f7a9:	cwde   
  40f7aa:	push   ss
  40f7ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ad:	push   esi
  40f7ae:	loop   0x40f7fe
  40f7b0:	in     eax,dx
  40f7b1:	out    dx,eax
  40f7b2:	and    eax,0x19d8293e
  40f7b7:	mov    ch,BYTE PTR [ebx+0x3a]
  40f7ba:	dec    edx
  40f7bb:	mov    al,ds:0xe9ae5f3
  40f7c0:	ror    DWORD PTR [edi],1
  40f7c2:	nop
  40f7c3:	push   eax
  40f7c4:	xchg   ebx,eax
  40f7c5:	jns    0x40f749
  40f7c7:	fmul   DWORD PTR [edx+0x1fdfb23b]
  40f7cd:	fs ins DWORD PTR es:[edi],dx
  40f7cf:	icebp  
  40f7d0:	adc    al,0xa5
  40f7d2:	cmp    al,0x45
  40f7d4:	stc    
  40f7d5:	(bad)  
  40f7d6:	icebp  
  40f7d7:	in     eax,0xc2
  40f7d9:	pop    esp
  40f7da:	jmp    0xfdd6:0x63e640ef
  40f7e1:	add    ch,dl
  40f7e3:	add    DWORD PTR [esp+eiz*2],edx
  40f7e6:	repnz dec eax
  40f7e8:	out    dx,eax
  40f7e9:	outs   dx,BYTE PTR ds:[esi]
  40f7ea:	mov    edx,0x8ce51367
  40f7ef:	(bad)
  40f7f2:	dec    esi
  40f7f3:	fcomp  DWORD PTR [edi]
  40f7f5:	cld    
  40f7f6:	mov    esp,0xd2d9b329
  40f7fb:	jne    0x40f853
  40f7fd:	rcl    BYTE PTR [edx+0x61385b0b],cl
  40f803:	hlt    
  40f804:	inc    esp
  40f805:	test   BYTE PTR [edx+0x38],0x9e
  40f809:	adc    esp,edx
  40f80b:	cs push ebp
  40f80d:	mov    al,ds:0xb822bfa5
  40f812:	int3   
  40f813:	sbb    al,0x2f
  40f815:	fwait
  40f816:	xchg   DWORD PTR [ebp+ebp*8+0x1a],edx
  40f81a:	push   edi
  40f81b:	mov    es,WORD PTR [edx+0x1d194d46]
  40f821:	adc    al,0xfe
  40f823:	dec    ebp
  40f824:	or     DWORD PTR ss:[ecx],0xaafe2956
  40f82b:	pushf  
  40f82c:	xlat   BYTE PTR ds:[ebx]
  40f82d:	leave  
  40f82e:	adc    eax,0x2844c7e8
  40f833:	and    BYTE PTR [ecx],0xda
  40f836:	lds    ebp,FWORD PTR [edx]
  40f838:	call   0x7f74:0x92689cbc
  40f83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f840:	int    0x2a
  40f842:	repnz mov ecx,0x64d8e73c
  40f848:	test   al,0xfe
  40f84a:	popa   
  40f84b:	out    dx,eax
  40f84c:	mov    esp,0xa7de2a7d
  40f851:	xchg   DWORD PTR [ebp+0x15ffa70],ecx
  40f857:	call   0x9c28256
  40f85c:	lea    esp,fs:[edi]
  40f85f:	shl    BYTE PTR [ecx+ebp*2-0x51],0x4e
  40f864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f865:	jns    0x40f844
  40f867:	cmp    al,0x74
  40f869:	jg     0x40f7ed
  40f86b:	inc    esp
  40f86c:	add    ch,BYTE PTR [ebx-0x36bf8854]
  40f872:	jb     0x40f8dd
  40f874:	(bad)  
  40f875:	cmp    BYTE PTR [edi+0x57],ch
  40f878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f879:	fwait
  40f87a:	out    dx,eax
  40f87b:	out    dx,eax
  40f87c:	stos   DWORD PTR es:[edi],eax
  40f87d:	mov    bl,0x4
  40f87f:	sub    esp,DWORD PTR [esi]
  40f881:	fmul   st,st(2)
  40f883:	push   edi
  40f884:	push   ebx
  40f885:	jecxz  0x40f820
  40f887:	and    BYTE PTR [ecx+0x465229],dh
  40f88d:	cld    
  40f88e:	fisttp QWORD PTR [ebp+0x27d3b180]
  40f894:	mov    al,0x79
  40f896:	mov    ah,0x87
  40f898:	cld    
  40f899:	clc    
  40f89a:	dec    eax
  40f89b:	fwait
  40f89c:	ins    BYTE PTR es:[edi],dx
  40f89d:	inc    ecx
  40f89e:	fiadd  DWORD PTR [eax-0x54]
  40f8a1:	(bad)  
  40f8a2:	push   0x8f5605c8
  40f8a7:	push   eax
  40f8a8:	add    eax,eax
  40f8aa:	pop    ecx
  40f8ab:	out    0xd0,eax
  40f8ad:	sbb    esi,ebx
  40f8af:	sub    al,al
  40f8b1:	inc    ecx
  40f8b2:	(bad)  
  40f8b3:	(bad)  [ecx+ebp*8+0x36373bf8]
  40f8ba:	(bad)  
  40f8bb:	mov    ch,0x7c
  40f8bd:	es pop es
  40f8bf:	div    edi
  40f8c1:	add    ch,0xd8
  40f8c4:	mov    edi,es
  40f8c6:	pop    ebp
  40f8c7:	pop    edx
  40f8c8:	mov    WORD PTR [esi],gs
  40f8ca:	xchg   ebp,eax
  40f8cb:	push   eax
  40f8cc:	add    al,0x26
  40f8ce:	aad    0x2c
  40f8d0:	(bad)  
  40f8d1:	into   
  40f8d2:	js     0x40f87a
  40f8d4:	sbb    eax,0xd87d7e12
  40f8d9:	xor    BYTE PTR [esp+edx*2+0x66b5c0b3],dl
  40f8e0:	add    DWORD PTR [eax+edx*8+0x2d],edx
  40f8e4:	sbb    eax,0x621faa04
  40f8e9:	mov    esi,0x4c6c62c1
  40f8ee:	(bad)  
  40f8ef:	in     eax,dx
  40f8f0:	push   ds
  40f8f1:	(bad)
  40f8f4:	mov    bh,0xc9
  40f8f6:	lods   al,BYTE PTR ds:[esi]
  40f8f7:	enter  0xf25f,0x7d
  40f8fb:	sti    
  40f8fc:	stos   DWORD PTR es:[edi],eax
  40f8fd:	out    dx,eax
  40f8fe:	inc    esp
  40f8ff:	push   0x7a930ad3
  40f904:	xlat   BYTE PTR ds:[ebx]
  40f905:	repnz shl BYTE PTR ds:0x1a88cbc7,1
  40f90c:	arpl   WORD PTR [ebx],di
  40f90e:	sbb    eax,0x84f35673
  40f913:	push   esp
  40f914:	retf   
  40f915:	add    ecx,DWORD PTR [esi+0x64395789]
  40f91b:	jg     0x40f8b7
  40f91d:	mov    ds:0x41ae62a0,al
  40f922:	ja     0x40f902
  40f924:	push   edx
  40f925:	outs   dx,DWORD PTR ds:[esi]
  40f926:	call   0x7e7620c8
  40f92b:	push   ebx
  40f92c:	inc    eax
  40f92d:	(bad)  
  40f92e:	mov    dh,0x12
  40f930:	xchg   ecx,eax
  40f931:	inc    ebx
  40f932:	jl     0x40f8e6
  40f934:	xchg   DWORD PTR [ebp+0x4e614170],ebx
  40f93a:	in     eax,0xa
  40f93c:	scas   eax,DWORD PTR es:[edi]
  40f93d:	arpl   WORD PTR [edx],dx
  40f93f:	fiadd  WORD PTR [ebx]
  40f942:	fwait
  40f943:	cs sbb ch,ch
  40f946:	or     ebp,ebp
  40f948:	mov    dh,BYTE PTR [eax-0x29]
  40f94b:	arpl   WORD PTR [edi],bx
  40f94d:	sbb    al,0x49
  40f94f:	out    0x1c,eax
  40f951:	dec    ebx
  40f952:	leave  
  40f953:	not    BYTE PTR [ecx-0x52]
  40f956:	add    eax,0x79191c88
  40f95b:	in     eax,0x5f
  40f95d:	mov    eax,0xf8c21aa3
  40f962:	push   cs
  40f963:	mov    ch,0x36
  40f965:	inc    eax
  40f966:	ins    BYTE PTR es:[edi],dx
  40f967:	out    dx,al
  40f968:	scas   eax,DWORD PTR es:[edi]
  40f969:	push   0xffffffeb
  40f96b:	scas   eax,DWORD PTR es:[edi]
  40f96c:	nop
  40f96d:	adc    al,BYTE PTR [eax]
  40f96f:	sbb    eax,0xfdf1d424
  40f974:	arpl   WORD PTR [ebp+ebp*1+0x1d],si
  40f978:	xlat   BYTE PTR ds:[ebx]
  40f979:	mov    bl,0x77
  40f97b:	cmc    
  40f97c:	pop    es
  40f97d:	mov    ah,0x6f
  40f97f:	adc    DWORD PTR [edx],edi
  40f981:	out    dx,eax
  40f982:	std    
  40f983:	arpl   WORD PTR [ebx+0x74f30e41],cx
  40f989:	add    dh,ah
  40f98b:	ins    DWORD PTR es:[edi],dx
  40f98c:	add    BYTE PTR [eax-0x39d1dfd9],0x26
  40f993:	jmp    0xee494587
  40f998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f999:	daa    
  40f99a:	in     al,dx
  40f99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f99c:	and    BYTE PTR [edx-0x4],ch
  40f99f:	nop
  40f9a0:	retf   0xc84
  40f9a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9a4:	jne    0x40f9e8
  40f9a6:	(bad)  
  40f9a7:	mov    esp,0x296d9e1
  40f9ac:	xlat   BYTE PTR ds:[ebx]
  40f9ad:	(bad)  
  40f9ae:	in     eax,0x53
  40f9b0:	rcr    ebx,cl
  40f9b2:	push   esi
  40f9b3:	lock mov DWORD PTR [ebx-0x5f],esi
  40f9b7:	stc    
  40f9b8:	sbb    al,0x4d
  40f9ba:	push   cs
  40f9bb:	pop    ecx
  40f9bc:	add    DWORD PTR [eax],ebp
  40f9be:	push   edi
  40f9bf:	sbb    eax,0xcd6cf191
  40f9c4:	mov    al,BYTE PTR [edx+ecx*4+0x456e3fd0]
  40f9cb:	push   0x7067f327
  40f9d0:	dec    eax
  40f9d1:	mov    ecx,0x7b2912c9
  40f9d6:	es inc ebx
  40f9d8:	(bad)  [edx]
  40f9da:	mov    ebp,0xb92abb61
  40f9df:	lahf   
  40f9e0:	sbb    DWORD PTR [ecx-0x1163db12],eax
  40f9e6:	jb     0x40fa1c
  40f9e8:	mov    BYTE PTR [edi],al
  40f9ea:	jl     0x40f984
  40f9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ee:	dec    ecx
  40f9ef:	test   DWORD PTR [edi+0x75],ebx
  40f9f2:	cmp    DWORD PTR [ecx+esi*8-0x644f7d05],ebx
  40f9f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9fa:	push   ebp
  40f9fb:	ins    BYTE PTR es:[edi],dx
  40f9fc:	neg    dh
  40f9fe:	jo     0x40f9a1
  40fa00:	cwde   
  40fa01:	push   edx
  40fa02:	sar    al,cl
  40fa04:	imul   esp,DWORD PTR [eax+eiz*2-0x80],0xfffffff5
  40fa09:	(bad)  
  40fa0b:	mov    dl,0x5b
  40fa0d:	and    eax,0x2e600cdb
  40fa12:	in     al,0xdd
  40fa14:	pop    es
  40fa15:	in     al,0xba
  40fa17:	xchg   esp,eax
  40fa18:	push   ds
  40fa19:	xor    bl,BYTE PTR [esi+0x5413c17]
  40fa1f:	push   esi
  40fa20:	int    0xe0
  40fa22:	ret    0x703f
  40fa25:	imul   edx,DWORD PTR [esi],0x322df01a
  40fa2b:	xchg   edx,eax
  40fa2c:	loopne 0x40f9ed
  40fa2e:	mov    edx,ecx
  40fa30:	dec    eax
  40fa31:	cmc    
  40fa32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa34:	add    DWORD PTR [edi-0x387fa070],esi
  40fa3a:	jmp    0xb73e827b
  40fa3f:	add    al,0x3f
  40fa41:	dec    al
  40fa43:	fwait
  40fa44:	into   
  40fa45:	cmp    eax,0x3d23ffe5
  40fa4a:	fwait
  40fa4b:	cmc    
  40fa4c:	dec    ebx
  40fa4d:	dec    eax
  40fa4e:	int    0xbe
  40fa50:	and    bl,BYTE PTR [edi]
  40fa52:	cmp    eax,DWORD PTR [edx]
  40fa54:	dec    ebp
  40fa55:	outs   dx,DWORD PTR ds:[esi]
  40fa56:	test   ch,al
  40fa58:	int    0xbd
  40fa5a:	push   0xfffffff7
  40fa5c:	pop    ds
  40fa5d:	mov    al,ds:0x9dbc0ef2
  40fa62:	retf   
  40fa63:	sbb    edi,ebp
  40fa65:	add    esi,ecx
  40fa67:	jo     0x40fa8e
  40fa69:	mov    eax,ds:0xccf3b4b2
  40fa6e:	sbb    DWORD PTR [eax+0x10],edi
  40fa71:	xchg   esi,eax
  40fa72:	push   esp
  40fa73:	push   edi
  40fa74:	xlat   BYTE PTR ds:[ebx]
  40fa75:	xor    eax,0x7a8c4602
  40fa7a:	mov    WORD PTR [ebx+0x49],?
  40fa7d:	pop    ebp
  40fa7e:	mov    ah,0xd4
  40fa80:	lahf   
  40fa81:	es icebp 
  40fa83:	or     edi,DWORD PTR [esi+ecx*2]
  40fa86:	pop    ecx
  40fa87:	push   edx
  40fa88:	sub    al,0x2
  40fa8a:	jle    0x40faf5
  40fa8c:	adc    al,0xe3
  40fa8e:	in     al,0xf6
  40fa90:	and    DWORD PTR [edi],ecx
  40fa92:	pop    ss
  40fa93:	inc    eax
  40fa94:	lea    ebp,[edi+esi*8-0x1c]
  40fa98:	dec    ebx
  40fa99:	or     edx,DWORD PTR [edx-0xcd7eb65]
  40fa9f:	out    dx,eax
  40faa0:	pop    edx
  40faa2:	and    eax,eax
  40faa4:	lea    ecx,[ecx]
  40faa6:	mov    al,ds:0x4fd292b7
  40faab:	mov    eax,ds:0x2474c752
  40fab0:	ja     0x40fa7d
  40fab2:	rcr    DWORD PTR [edi-0x5d5b135b],0x1a
  40fab9:	pop    ecx
  40faba:	(bad)
  40fabd:	adc    eax,0x26b3665a
  40fac2:	lds    ebp,FWORD PTR [edi+0x3008cb05]
  40fac8:	in     eax,dx
  40fac9:	jns    0x40fb36
  40facb:	xchg   ebx,eax
  40facc:	and    al,0xf8
  40face:	scas   eax,DWORD PTR es:[edi]
  40facf:	imul   esi,edx,0xe9f49e11
  40fad5:	int    0x31
  40fad7:	stos   DWORD PTR es:[edi],eax
  40fad8:	inc    esi
  40fad9:	imul   ecx,DWORD PTR [esi-0x9],0x6d
  40fadd:	mov    esp,0x6a0837b4
  40fae2:	jl     0x40fb51
  40fae4:	fucomp st(1)
  40fae6:	pop    esi
  40fae7:	(bad)  
  40fae8:	gs pop ss
  40faea:	ins    DWORD PTR es:[edi],dx
  40faeb:	fisttp DWORD PTR [edx-0x1ada425]
  40faf1:	clc    
  40faf2:	in     eax,0x57
  40faf4:	push   ebp
  40faf5:	push   eax
  40faf6:	in     eax,dx
  40faf7:	pop    edx
  40faf8:	mov    dh,0xd4
  40fafa:	lahf   
  40fafb:	or     eax,0x75ed2782
  40fb00:	push   esi
  40fb01:	mov    ss,WORD PTR [ecx+eax*1-0x5a]
  40fb05:	inc    esi
  40fb06:	fwait
  40fb07:	sbb    al,ch
  40fb09:	jnp    0x40faa0
  40fb0b:	(bad)  
  40fb0c:	and    al,0x6b
  40fb0e:	and    al,0x34
  40fb10:	(bad)  
  40fb12:	add    DWORD PTR [esi-0x3f],0x5ef6c87a
  40fb19:	pop    ebp
  40fb1a:	in     al,0xe2
  40fb1c:	or     eax,0x71e9fa54
  40fb21:	jl     0x40fab1
  40fb23:	push   esi
  40fb24:	push   ss
  40fb25:	jne    0x40fab1
  40fb27:	push   cs
  40fb28:	gs (bad) 
  40fb2a:	sahf   
  40fb2b:	fistp  DWORD PTR [esi]
  40fb2d:	dec    ebx
  40fb2e:	call   0xdb6f:0x3f9436f1
  40fb35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb36:	(bad)  
  40fb37:	dec    ebp
  40fb38:	xor    DWORD PTR ds:0xe2af0cf7,ebp
  40fb3e:	lods   al,BYTE PTR ds:[esi]
  40fb3f:	sahf   
  40fb40:	jb     0x40fbc0
  40fb42:	xchg   edx,eax
  40fb43:	pop    ebx
  40fb44:	out    dx,eax
  40fb45:	cmp    DWORD PTR [eax-0x67],edx
  40fb48:	stc    
  40fb49:	xchg   esi,eax
  40fb4a:	mov    eax,esi
  40fb4c:	or     eax,0x98aba200
  40fb51:	pop    ebp
  40fb52:	(bad)  
  40fb53:	mov    bl,BYTE PTR [edi+ebp*8]
  40fb56:	and    BYTE PTR [ebp+ebp*8+0x31],ch
  40fb5a:	xor    eax,esp
  40fb5c:	retf   
  40fb5d:	jl     0x40fbc4
  40fb5f:	loope  0x40fb26
  40fb61:	or     eax,0x1d3a44c6
  40fb66:	jl     0x40faeb
  40fb68:	fsubr  DWORD PTR ds:[ebp-0x16aa3fcf]
  40fb6f:	stc    
  40fb70:	ds cmp ebp,edx
  40fb73:	dec    edi
  40fb74:	xor    eax,0x243b129d
  40fb79:	fs out dx,eax
  40fb7b:	retf   0x81c0
  40fb7e:	and    DWORD PTR [edi+0x43],esi
  40fb81:	ja     0x40fbc5
  40fb83:	xor    BYTE PTR es:[ecx],dh
  40fb86:	mov    ch,0x6e
  40fb88:	imul   ebx,DWORD PTR [eax+0x2c],0x430e073e
  40fb8f:	mov    esp,0x7bd7eb45
  40fb94:	mov    edx,0x5721e5b9
  40fb99:	cmp    bh,dh
  40fb9b:	and    BYTE PTR [edi+0x1e242bf9],al
  40fba1:	push   ebp
  40fba2:	xchg   ebp,eax
  40fba3:	stos   BYTE PTR es:[edi],al
  40fba4:	jmp    0xae483d79
  40fba9:	sbb    eax,0xc9bfeb8
  40fbae:	icebp  
  40fbaf:	push   esp
  40fbb0:	clc    
  40fbb1:	dec    edi
  40fbb2:	ins    BYTE PTR es:[edi],dx
  40fbb3:	sbb    esi,0x44bfca4b
  40fbb9:	pusha  
  40fbba:	int    0x64
  40fbbc:	jle    0x40fbbf
  40fbbe:	xchg   ebx,eax
  40fbbf:	rcr    cl,0xdd
  40fbc2:	or     BYTE PTR [ebx+0x3cf74081],0xac
  40fbc9:	int    0x15
  40fbcb:	and    DWORD PTR [ebp-0x2f],esp
  40fbce:	(bad)  
  40fbcf:	push   ebp
  40fbd0:	sub    BYTE PTR [edi-0x55],cl
  40fbd3:	(bad)  
  40fbd4:	sub    al,0xfa
  40fbd6:	js     0x40fbd6
  40fbd8:	cdq    
  40fbd9:	mov    dl,0x8c
  40fbdb:	pop    ds
  40fbdc:	adc    bl,BYTE PTR [edi]
  40fbde:	jae    0x40fbb7
  40fbe0:	or     edx,DWORD PTR [ebx-0xb0dedff]
  40fbe6:	stos   DWORD PTR es:[edi],eax
  40fbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe8:	rep outs dx,BYTE PTR ds:[esi]
  40fbea:	mov    ds:0x747aaed4,al
  40fbef:	jle    0x40fbdb
  40fbf1:	cli    
  40fbf2:	jns    0x40fc27
  40fbf4:	adc    BYTE PTR [ebp-0x67e4ec53],ah
  40fbfa:	int    0xf6
  40fbfc:	add    DWORD PTR [ecx-0x632eac9d],ecx
  40fc02:	inc    ebp
  40fc03:	dec    ebp
  40fc04:	jg     0x40fc25
  40fc06:	dec    ebp
  40fc07:	enter  0x5eb0,0xb1
  40fc0b:	and    BYTE PTR [ebx],dl
  40fc0d:	loope  0x40fc7f
  40fc0f:	test   al,0xc0
  40fc11:	adc    al,0xff
  40fc13:	adc    edx,DWORD PTR [edi+0x14838bd1]
  40fc19:	es jne 0x40fc26
  40fc1c:	fstp   QWORD PTR cs:[ebx]
  40fc1f:	or     BYTE PTR [ecx-0x41cf3814],ah
  40fc25:	repz pop ecx
  40fc27:	shl    DWORD PTR [edx+edi*4],0x42
  40fc2b:	ret    
  40fc2c:	out    0x7f,al
  40fc2e:	mov    esp,0xba1f69eb
  40fc33:	jbe    0x40fbca
  40fc35:	or     BYTE PTR [edi+0x61],ch
  40fc38:	add    ch,BYTE PTR [edx]
  40fc3a:	out    0x20,al
  40fc3c:	nop
  40fc3d:	sti    
  40fc3e:	jle    0x40fc67
  40fc40:	out    dx,al
  40fc41:	push   ds
  40fc42:	and    BYTE PTR [eax+ecx*4+0x76765b8c],0x7a
  40fc4a:	add    BYTE PTR [edi-0x6451a7ee],dh
  40fc50:	dec    edi
  40fc51:	jp     0x40fc4a
  40fc53:	lahf   
  40fc54:	pop    es
  40fc55:	sbb    al,0x1d
  40fc57:	ss push esp
  40fc59:	fcmovnu st,st(5)
  40fc5b:	(bad)  
  40fc5c:	or     al,0xb2
  40fc5e:	imul   ecx,DWORD PTR [edx],0x79
  40fc61:	add    ebx,DWORD PTR [edx]
  40fc63:	inc    edx
  40fc64:	lock jle 0x40fca1
  40fc67:	inc    esi
  40fc68:	pop    ecx
  40fc69:	inc    ebx
  40fc6a:	popa   
  40fc6b:	outs   dx,DWORD PTR gs:[esi]
  40fc6d:	cwde   
  40fc6e:	les    esi,FWORD PTR [esi+ebx*1]
  40fc71:	(bad)  
  40fc72:	ja     0x40fc61
  40fc74:	xor    eax,0xeb1beec5
  40fc79:	jbe    0x40fc2f
  40fc7b:	cmp    BYTE PTR [eax],ah
  40fc7d:	jecxz  0x40fc4d
  40fc7f:	adc    ah,BYTE PTR [esi-0x17]
  40fc82:	sbb    BYTE PTR [esi-0x70beb368],cl
  40fc88:	xchg   esi,eax
  40fc89:	aad    0xc3
  40fc8b:	(bad)  
  40fc8c:	mov    bh,0x6c
  40fc8e:	dec    esp
  40fc8f:	mov    ebx,0x3537f8ad
  40fc94:	lods   al,BYTE PTR ds:[esi]
  40fc95:	mov    al,ds:0x8f4d60c8
  40fc9a:	call   0x48325eac
  40fc9f:	cmp    BYTE PTR [esi],0xf4
  40fca2:	pop    edi
  40fca3:	loop   0x40fc6c
  40fca5:	sbb    al,0x2b
  40fca7:	in     eax,0xb7
  40fca9:	ja     0x40fced
  40fcab:	hlt    
  40fcac:	lods   eax,DWORD PTR ds:[esi]
  40fcad:	je     0x40fd22
  40fcaf:	adc    DWORD PTR [esi-0x828fa7c],ebx
  40fcb5:	and    BYTE PTR [esi-0x48],0x20
  40fcb9:	sbb    BYTE PTR [ebp+0x23],ch
  40fcbc:	out    dx,al
  40fcbd:	adc    eax,0x3d9e8439
  40fcc2:	push   esp
  40fcc3:	out    0x8,eax
  40fcc5:	stos   BYTE PTR es:[edi],al
  40fcc6:	push   0xfc571fad
  40fccb:	fs enter 0x2cac,0x9
  40fcd0:	loop   0x40fc8d
  40fcd2:	in     al,0x10
  40fcd4:	sahf   
  40fcd5:	add    ch,al
  40fcd7:	jb     0x40fc7b
  40fcd9:	xchg   esp,eax
  40fcda:	outs   dx,DWORD PTR ds:[esi]
  40fcdb:	(bad)
  40fcdf:	pop    esi
  40fce0:	or     ch,dh
  40fce2:	icebp  
  40fce3:	int    0x25
  40fce5:	xchg   ebp,eax
  40fce6:	(bad)
  40fcea:	ss call 0xe715:0x23690e4b
  40fcf2:	in     al,0xd2
  40fcf4:	fwait
  40fcf5:	add    dh,BYTE PTR [ebx-0x2ddada2d]
  40fcfb:	cmp    DWORD PTR [eax],ebp
  40fcfd:	push   ebx
  40fcfe:	loopne 0x40fce3
  40fd00:	pop    esi
  40fd01:	mov    edi,edi
  40fd03:	xchg   ecx,eax
  40fd04:	cmp    al,0xde
  40fd06:	rcl    al,1
  40fd08:	jmp    0xf969:0x34a6b93a
  40fd0f:	ss push 0x8b27adaf
  40fd15:	pop    ebx
  40fd16:	je     0x40fd16
  40fd18:	fisttp DWORD PTR [ebx-0x32]
  40fd1b:	jo     0x40fcaf
  40fd1d:	rol    al,0x3a
  40fd20:	call   0x591b:0xba4d3f42
  40fd27:	test   al,0xea
  40fd29:	mov    eax,ds:0xcfd22723
  40fd2e:	stos   DWORD PTR es:[edi],eax
  40fd2f:	sub    eax,0xd24ebb3c
  40fd34:	das    
  40fd35:	mov    dl,0x5c
  40fd37:	xor    al,bl
  40fd39:	add    al,0x2e
  40fd3b:	push   ebp
  40fd3c:	imul   esp,esi,0xd
  40fd3f:	mov    WORD PTR gs:[ecx-0x76],ss
  40fd43:	inc    eax
  40fd44:	rol    BYTE PTR [ebx+0xd],cl
  40fd47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd48:	popa   
  40fd49:	(bad)  
  40fd4a:	mov    ah,0xe7
  40fd4c:	shr    DWORD PTR [ebx],0xc5
  40fd4f:	add    al,0x3e
  40fd51:	in     eax,0x1e
  40fd53:	and    DWORD PTR [ebx+0x23e738cb],0xffffffcf
  40fd5a:	sbb    bh,BYTE PTR [eax]
  40fd5c:	int3   
  40fd5d:	ret    
  40fd5e:	sbb    al,0xac
  40fd60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd61:	bound  esi,QWORD PTR [ecx+0x1bca82e1]
  40fd67:	lods   al,BYTE PTR ds:[esi]
  40fd68:	jmp    DWORD PTR [esi+esi*1+0x13b5bb99]
  40fd6f:	dec    ebx
  40fd70:	lahf   
  40fd71:	mov    ch,0xe1
  40fd73:	xchg   edx,eax
  40fd74:	jb     0x40fd37
  40fd76:	(bad)  
  40fd77:	xchg   esi,eax
  40fd78:	loop   0x40fd8a
  40fd7a:	popf   
  40fd7b:	arpl   WORD PTR [ebx],di
  40fd7d:	mov    cl,0xbe
  40fd7f:	in     eax,0x45
  40fd81:	loope  0x40fd7e
  40fd83:	sub    DWORD PTR [esi+0x11],eax
  40fd86:	pushf  
  40fd87:	mov    eax,ds:0xc444296b
  40fd8c:	jne    0x40fd67
  40fd8e:	and    ah,BYTE PTR [ebp+0x18]
  40fd91:	dec    esp
  40fd92:	jg     0x40fd4e
  40fd94:	pop    esi
  40fd95:	dec    ebx
  40fd96:	jmp    0xe6f7:0xb38c4e68
  40fd9d:	out    dx,eax
  40fd9e:	pop    eax
  40fd9f:	leave  
  40fda0:	test   dh,ch
  40fda2:	cmp    al,0x26
  40fda4:	xlat   BYTE PTR ds:[ebx]
  40fda5:	in     al,dx
  40fda6:	jbe    0x40fd28
  40fda8:	(bad)  
  40fda9:	pop    ebp
  40fdaa:	sar    BYTE PTR [edi],1
  40fdac:	outs   dx,DWORD PTR ds:[esi]
  40fdad:	aam    0xf6
  40fdaf:	xchg   dl,dl
  40fdb1:	aas    
  40fdb2:	xchg   ebp,eax
  40fdb3:	push   edx
  40fdb4:	pop    edi
  40fdb5:	mov    ch,0x7d
  40fdb7:	push   0xa3f22196
  40fdbc:	mov    dh,BYTE PTR [ebx]
  40fdbe:	xchg   dh,ah
  40fdc0:	aad    0x30
  40fdc2:	adc    eax,DWORD PTR [esi+0x16]
  40fdc5:	outs   dx,BYTE PTR ds:[esi]
  40fdc6:	sbb    ebp,edi
  40fdc8:	test   DWORD PTR [esi+0x142046f6],edx
  40fdce:	ds jl  0x40fd80
  40fdd1:	push   ss
  40fdd2:	stc    
  40fdd3:	call   0xca26a68b
  40fdd8:	and    BYTE PTR [esi],cl
  40fdda:	or     dh,ah
  40fddc:	in     eax,0xab
  40fdde:	inc    eax
  40fddf:	xchg   ecx,eax
  40fde0:	push   esi
  40fde1:	pop    ebp
  40fde2:	out    dx,eax
  40fde3:	fcmovbe st,st(4)
  40fde5:	or     eax,DWORD PTR [eax]
  40fde7:	lds    esp,FWORD PTR [ecx+0x4b]
  40fdea:	mov    al,ds:0xd3a0b748
  40fdef:	mov    eax,0x2cd9a093
  40fdf4:	add    ebx,0x69
  40fdf7:	push   ds
  40fdf8:	cmp    al,0x18
  40fdfa:	xchg   edx,eax
  40fdfb:	fcom   st(0)
  40fdfd:	inc    esp
  40fdfe:	add    eax,0x829313cc
  40fe03:	xchg   ecx,eax
  40fe04:	pop    eax
  40fe05:	cmp    al,0xcb
  40fe07:	xlat   BYTE PTR ds:[ebx]
  40fe08:	inc    edx
  40fe09:	cmp    eax,0x7df6c27d
  40fe0e:	adc    al,0x42
  40fe10:	add    dh,BYTE PTR [ebp+0x38]
  40fe13:	paddsb mm2,mm6
  40fe16:	fcomp  QWORD PTR [ebp+0x39]
  40fe19:	ret    
  40fe1a:	nop
  40fe1b:	push   ecx
  40fe1c:	das    
  40fe1d:	inc    edi
  40fe1e:	ret    0x6028
  40fe21:	pop    ecx
  40fe22:	cmp    edi,DWORD PTR [edx-0x3a08ba83]
  40fe28:	popa   
  40fe29:	frstor [esi]
  40fe2b:	sub    al,0x33
  40fe2d:	sub    BYTE PTR [eax+0x44b76c48],cl
  40fe33:	loop   0x40fe51
  40fe35:	jg     0x40fe22
  40fe37:	inc    eax
  40fe38:	xchg   ebx,eax
  40fe39:	pop    ebx
  40fe3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe3b:	push   edx
  40fe3c:	fbstp  TBYTE PTR [edx+0x6bf504de]
  40fe42:	arpl   WORD PTR [ebx+ecx*2+0x2f],di
  40fe46:	cdq    
  40fe47:	mov    bh,0xe0
  40fe49:	inc    ecx
  40fe4a:	test   edx,ecx
  40fe4c:	daa    
  40fe4d:	pushf  
  40fe4e:	ficom  DWORD PTR [ebx+edx*2+0x515616a8]
  40fe56:	and    dl,BYTE PTR [ebx-0x10a461e2]
  40fe5c:	dec    eax
  40fe5d:	repnz dec edi
  40fe5f:	out    0x93,al
  40fe61:	jmp    0x40fe10
  40fe63:	cmp    ch,BYTE PTR [edi+0x39bfa096]
  40fe69:	xor    al,0xad
  40fe6b:	adc    ecx,DWORD PTR [ebx+0x1]
  40fe6e:	jae    0x40fe5a
  40fe70:	enter  0x811f,0x58
  40fe74:	sub    BYTE PTR [ebx],0x1b
  40fe77:	push   ebx
  40fe78:	ror    ebp,1
  40fe7a:	(bad)  
  40fe7c:	dec    esi
  40fe7d:	dec    ebx
  40fe7e:	jb     0x40fe4a
  40fe80:	leave  
  40fe81:	xor    BYTE PTR [edx+0x22],ch
  40fe84:	bound  ebx,QWORD PTR [ebx-0x55034b03]
  40fe8a:	cld    
  40fe8b:	push   ebx
  40fe8c:	mov    BYTE PTR [ecx],dl
  40fe8e:	cdq    
  40fe8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe90:	xchg   edi,eax
  40fe91:	adc    edx,DWORD PTR [eax-0x55722e01]
  40fe97:	leave  
  40fe98:	or     eax,0x6355af70
  40fe9d:	mov    dl,al
  40fe9f:	cmp    eax,0x7fc94491
  40fea4:	xchg   BYTE PTR ds:0xdcf58f4c,ah
  40feaa:	and    DWORD PTR [esi+eiz*1+0x78],ecx
  40feae:	mov    esi,es
  40feb0:	push   edx
  40feb1:	and    al,0xd
  40feb3:	adc    bh,BYTE PTR [eax]
  40feb5:	xchg   ebp,eax
  40feb6:	leave  
  40feb7:	dec    edx
  40feb8:	call   0x96be75e5
  40febd:	out    dx,eax
  40febe:	lods   al,BYTE PTR ds:[esi]
  40febf:	pop    ecx
  40fec0:	jmp    0xb782:0x718834ec
  40fec7:	lods   eax,DWORD PTR ds:[esi]
  40fec8:	test   BYTE PTR [eax+ebx*8],dh
  40fecb:	or     bh,BYTE PTR [eax]
  40fecd:	add    eax,0xaf8b903
  40fed2:	test   DWORD PTR [ebx+0x57],esp
  40fed5:	std    
  40fed6:	add    edi,DWORD PTR [eax+ecx*4-0x30]
  40feda:	jnp    0x40fe61
  40fedc:	and    eax,0xddcfa8d8
  40fee1:	adc    eax,0x2c342e4e
  40fee6:	shl    eax,cl
  40fee8:	xchg   ebx,eax
  40fee9:	mov    eax,DWORD PTR es:[ebp+0x62]
  40feed:	and    al,BYTE PTR [ebx]
  40feef:	add    eax,0xfc4dc436
  40fef4:	lds    esp,FWORD PTR [ecx+0x5d684d1f]
  40fefa:	das    
  40fefb:	dec    esp
  40fefc:	ss (bad) 
  40fefe:	scas   al,BYTE PTR es:[edi]
  40feff:	fstp   TBYTE PTR [esi+0x3c]
  40ff02:	push   0xffffffdf
  40ff04:	cmc    
  40ff05:	mov    al,0x29
  40ff07:	mov    ecx,0x8e5bc6c7
  40ff0c:	test   eax,0x19aab04f
  40ff11:	jmp    0x40feac
  40ff13:	pop    es
  40ff14:	sub    eax,0x1f2092a6
  40ff19:	or     bh,BYTE PTR [edi-0x156decc5]
  40ff1f:	pop    ds
  40ff20:	mov    bh,0xa5
  40ff22:	push   ds
  40ff23:	fcmovnu st,st(5)
  40ff25:	into   
  40ff26:	mov    dl,0xe3
  40ff28:	push   ds
  40ff29:	jb     0x40feb5
  40ff2b:	pop    ecx
  40ff2c:	mov    dh,0xdf
  40ff2e:	add    ecx,DWORD PTR ds:0x8167444a
  40ff34:	inc    edi
  40ff35:	loop   0x40ff6c
  40ff37:	jns    0x40ff26
  40ff39:	mov    dh,0x60
  40ff3b:	daa    
  40ff3c:	ds mov cl,0x21
  40ff3f:	push   esp
  40ff40:	push   edi
  40ff41:	and    cl,cl
  40ff43:	les    esi,FWORD PTR [edx+0x494f49c7]
  40ff49:	sub    al,0xc6
  40ff4b:	cmc    
  40ff4c:	sub    eax,0xebc001bf
  40ff51:	jo     0x40ff0a
  40ff53:	sub    esi,esi
  40ff55:	xchg   BYTE PTR [edx],ah
  40ff57:	fdivr  DWORD PTR [edi-0x7bb23dd4]
  40ff5d:	or     DWORD PTR [ecx-0xa],ebx
  40ff60:	pop    ecx
  40ff61:	ss out dx,al
  40ff63:	sbb    DWORD PTR [eax-0x64828ddb],esp
  40ff69:	pop    ds
  40ff6a:	lock bound ecx,QWORD PTR [edi+0x2a]
  40ff6e:	push   ebx
  40ff6f:	mov    ch,BYTE PTR [ebp-0x4c]
  40ff72:	call   0xa0ad:0x611b02b8
  40ff79:	outs   dx,BYTE PTR ds:[esi]
  40ff7a:	rol    cl,1
  40ff7c:	pop    ebx
  40ff7d:	out    0xaa,eax
  40ff7f:	ds mov dl,0x43
  40ff82:	fstp   DWORD PTR [eax+0x7b]
  40ff85:	mov    esi,0xdb0a3059
  40ff8a:	cld    
  40ff8b:	cwde   
  40ff8c:	pop    esp
  40ff8d:	daa    
  40ff8e:	cmp    eax,0x50aa6869
  40ff93:	sbb    al,0x54
  40ff95:	mov    eax,0x925bc30e
  40ff9a:	mov    bl,0x12
  40ff9c:	push   cs
  40ff9d:	add    DWORD PTR [ecx],edx
  40ff9f:	mov    ds:0xa315b18c,al
  40ffa4:	pop    ds
  40ffa5:	add    DWORD PTR cs:[esi+0x12970112],ebp
  40ffac:	push   esi
  40ffad:	mov    ah,0x6d
  40ffaf:	mov    dh,0x9
  40ffb1:	push   edi
  40ffb2:	mov    ds:0x119f9ef5,eax
  40ffb7:	and    eax,0xaf42e61
  40ffbc:	call   0x8cbc9f90
  40ffc1:	lods   eax,DWORD PTR ds:[esi]
  40ffc2:	jns    0x40ffc3
  40ffc4:	inc    ecx
  40ffc5:	fistp  DWORD PTR [eax+0x0]
  40ffc8:	retf   0x3c62
  40ffcb:	xchg   esp,eax
  40ffcc:	in     eax,dx
  40ffcd:	and    DWORD PTR [ecx+edx*8],0x7a
  40ffd1:	sahf   
  40ffd2:	lods   al,BYTE PTR ds:[esi]
  40ffd3:	jbe    0x40ffd7
  40ffd5:	or     eax,DWORD PTR [edx]
  40ffd7:	cld    
  40ffd8:	rol    BYTE PTR [eax+eiz*8-0x559a8648],cl
  40ffdf:	or     DWORD PTR [eax],edi
  40ffe1:	add    eax,0x96643557
  40ffe6:	and    ch,ah
  40ffe8:	mov    edi,0xb9f5578d
  40ffed:	ss lock jo 0x410028
  40fff1:	arpl   WORD PTR [eax+0x7c],dx
  40fff4:	fisubr WORD PTR [edi]
  40fff6:	std    
  40fff7:	mov    ah,0xf8
  40fff9:	push   esi
  40fffa:	aam    0xc1
  40fffc:	adc    edx,ecx
  40fffe:	(bad)  
  410000:	xlat   BYTE PTR ds:[ebx]
  410001:	pop    esp
  410002:	and    bl,BYTE PTR [edi-0x3e]
  410005:	push   ebp
  410006:	xlat   BYTE PTR ds:[ebx]
  410007:	sub    DWORD PTR [edx],eax
  410009:	jnp    0x40ffc0
  41000b:	in     al,0xea
  41000d:	fs pop ss
  41000f:	mov    ah,0xf2
  410011:	adc    ch,BYTE PTR [ebp-0x5e]
  410014:	retf   0xcddc
  410017:	(bad)  
  410019:	jo     0x410094
  41001b:	dec    esp
  41001c:	dec    esi
  41001d:	stos   BYTE PTR es:[edi],al
  41001e:	hlt    
  41001f:	dec    ebx
  410020:	out    0xcf,al
  410022:	inc    esp
  410023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410024:	iret   
  410025:	jp     0x410050
  410027:	cmp    ebp,ebp
  410029:	jae    0x410012
  41002b:	add    DWORD PTR [esi],edx
  41002d:	or     bl,ch
  41002f:	dec    edx
  410030:	cdq    
  410031:	cwde   
  410032:	mov    al,0xcd
  410034:	retf   0xf107
  410037:	cdq    
  410038:	mov    al,ds:0xef41363b
  41003d:	jmp    0xb7bca63c
  410042:	or     ebx,DWORD PTR [esi]
  410044:	mov    ah,0x62
  410046:	jne    0x41000f
  410048:	jle    0x4100a9
  41004a:	mov    al,ds:0xc0042108
  41004f:	xor    eax,0xef362a29
  410054:	cmp    DWORD PTR [ebx+ecx*2-0x59ef3a94],ebx
  41005b:	sti    
  41005c:	mov    esi,DWORD PTR [edx-0x4cf4fbe6]
  410062:	push   esp
  410063:	sub    ch,bl
  410065:	push   esi
  410066:	adc    eax,0x38df648f
  41006b:	jmp    0x41006c
  41006d:	sub    cl,cl
  41006f:	jb     0x41009b
  410071:	fimul  DWORD PTR ds:0x6af2878d
  410077:	enter  0xa071,0xae
  41007b:	mov    ebp,edi
  41007d:	addr16 lahf 
  41007f:	aaa    
  410080:	std    
  410081:	sub    edx,ecx
  410083:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410085:	push   ss
  410086:	repz pop ebp
  410088:	lods   al,BYTE PTR ds:[esi]
  410089:	frstor [esi+0x11]
  41008c:	lahf   
  41008d:	loopne 0x410023
  41008f:	shr    DWORD PTR [edi-0x64a5c4fa],cl
  410095:	mov    ?,WORD PTR [ebx-0x1a]
  410098:	push   ecx
  410099:	sbb    eax,0x375e169e
  41009e:	jmp    0x4502:0x7d2b9f69
  4100a5:	cmovne ebp,ebp
  4100a8:	addr16 mov dl,0x2a
  4100ab:	arpl   di,sp
  4100ad:	xchg   ebx,eax
  4100ae:	das    
  4100af:	lds    edi,FWORD PTR [ebp+0x67]
  4100b2:	rol    DWORD PTR [ecx],0x38
  4100b5:	push   ebx
  4100b6:	pop    ds
  4100b7:	or     BYTE PTR [ebx-0x77],ah
  4100ba:	add    dh,cl
  4100bc:	sbb    BYTE PTR [edi-0x5ff18db0],dh
  4100c2:	popa   
  4100c3:	ins    BYTE PTR es:[edi],dx
  4100c4:	lahf   
  4100c5:	mov    ah,0xe8
  4100c7:	ss rcl dl,1
  4100ca:	out    0x37,eax
  4100cc:	sub    DWORD PTR [ebx],ebp
  4100ce:	adc    eax,esp
  4100d0:	bound  edx,QWORD PTR [esi-0x13]
  4100d3:	call   0xa50ea4dc
  4100d8:	aas    
  4100d9:	dec    esi
  4100da:	cmp    al,BYTE PTR [esi]
  4100dc:	pop    edx
  4100dd:	popa   
  4100de:	push   ss
  4100df:	sahf   
  4100e0:	imul   ecx,edi,0xffffffc0
  4100e3:	sbb    al,BYTE PTR [ebp+0x25]
  4100e6:	xor    BYTE PTR [edx],dl
  4100e8:	push   ebp
  4100e9:	call   0xf27f46be
  4100ee:	and    al,0x1d
  4100f0:	adc    al,0x93
  4100f2:	lds    edx,FWORD PTR [ecx]
  4100f4:	pop    ebp
  4100f5:	stc    
  4100f6:	pop    esi
  4100f7:	xor    ebp,ebx
  4100f9:	xchg   edi,esi
  4100fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100fc:	mov    ds:0x9f7a307a,al
  410101:	cmc    
  410102:	lock sbb eax,0x90bc4d50
  410108:	cmp    bl,bl
  41010a:	xchg   esi,eax
  41010b:	mov    ch,0x73
  41010d:	int    0x4b
  41010f:	mov    al,ds:0xcab87768
  410114:	cmp    eax,0x1ca19ae8
  410119:	inc    esp
  41011a:	mov    dh,BYTE PTR [edx-0x9]
  41011d:	jecxz  0x410190
  41011f:	into   
  410120:	mov    DWORD PTR [ebx-0x18],eax
  410123:	retf   0x9aaa
  410126:	cmc    
  410127:	mov    ah,0xc6
  410129:	add    ecx,DWORD PTR [eax]
  41012b:	dec    esi
  41012c:	enter  0x1ad6,0xe2
  410130:	inc    ebp
  410131:	int    0x4b
  410133:	imul   bh
  410135:	pop    edx
  410136:	and    DWORD PTR [ebx+edi*1+0x18],0x9bf431ba
  41013e:	jb     0x410149
  410140:	pushf  
  410141:	push   edx
  410142:	mov    ah,0xe3
  410144:	jae    0x41017a
  410146:	or     al,0x8b
  410148:	push   esp
  410149:	and    eax,0x915d4867
  41014e:	mov    edx,0x5f4aca3c
  410153:	add    DWORD PTR [edx-0x55],eax
  410156:	ins    DWORD PTR es:[edi],dx
  410157:	fwait
  410158:	mov    BYTE PTR cs:[edx],bl
  41015b:	arpl   WORD PTR [ebx+0x6a],bp
  41015e:	or     esp,DWORD PTR [ebp+0x17]
  410161:	or     BYTE PTR [esi],0x91
  410164:	(bad)  
  410165:	ss fs int 0xfd
  410169:	inc    ecx
  41016a:	jae    0x4101dd
  41016c:	out    dx,eax
  41016d:	mov    esi,0x7b526e58
  410172:	stos   DWORD PTR es:[edi],eax
  410173:	xchg   ecx,eax
  410174:	and    ch,BYTE PTR [eax-0x6]
  410177:	mov    al,0x7d
  410179:	out    dx,eax
  41017a:	stos   BYTE PTR es:[edi],al
  41017b:	cmp    DWORD PTR ds:0x5781681d,ecx
  410181:	retf   
  410182:	mov    al,ds:0x7be1c0a3
  410187:	scas   eax,DWORD PTR es:[edi]
  410188:	ins    DWORD PTR es:[edi],dx
  410189:	mov    esi,0x9518617f
  41018e:	or     ecx,edx
  410190:	xor    DWORD PTR [ebp-0x7735320],edx
  410196:	js     0x4101ed
  410198:	shr    DWORD PTR [esp+eiz*4],0x92
  41019c:	mov    ebp,0x62b999ca
  4101a1:	retf   
  4101a2:	shl    DWORD PTR [ebp+esi*2-0x34b48db2],1
  4101a9:	add    eax,0x8ac6e1f2
  4101ae:	retf   
  4101af:	jo     0x4101ed
  4101b1:	add    eax,0x244f8328
  4101b6:	sub    DWORD PTR [ecx-0x2553b1ef],0x7c023bc8
  4101c0:	dec    ebx
  4101c1:	mov    bl,dh
  4101c3:	mov    eax,ds:0x39dea43e
  4101c8:	cdq    
  4101c9:	popf   
  4101ca:	adc    eax,0x23a55fbc
  4101cf:	(bad)  
  4101d0:	fild   WORD PTR [eax]
  4101d2:	mov    dl,0xec
  4101d4:	retf   
  4101d5:	out    dx,al
  4101d6:	jnp    0x410248
  4101d8:	fisttp QWORD PTR [ecx-0x57]
  4101db:	outs   dx,DWORD PTR ds:[esi]
  4101dc:	in     eax,dx
  4101dd:	mov    ebp,0xd3535d6a
  4101e2:	shl    BYTE PTR [edi+0x39a70960],cl
  4101e8:	ret    0xe8c7
  4101eb:	mov    ds:0x6324ce08,al
  4101f0:	sar    BYTE PTR [esi+ebx*2],1
  4101f3:	pushw  0xd0a8
  4101f7:	xchg   ecx,eax
  4101f8:	pop    esp
  4101f9:	jp     0x41018e
  4101fb:	inc    ecx
  4101fc:	les    ebp,FWORD PTR [edi+0x1d]
  4101ff:	dec    ebp
  410200:	fld    QWORD PTR [edx+0x5a]
  410203:	push   edi
  410204:	leave  
  410205:	ficomp WORD PTR [edi]
  410207:	sbb    al,0x13
  410209:	mov    bh,0x84
  41020b:	dec    esp
  41020c:	aas    
  41020d:	nop
  41020e:	push   ss
  41020f:	mov    edi,0x38b4779b
  410214:	mov    al,ds:0x8d513102
  410219:	test   ecx,ecx
  41021b:	and    bl,cl
  41021d:	outs   dx,BYTE PTR ds:[esi]
  41021e:	push   esp
  41021f:	push   ebp
  410220:	ror    BYTE PTR [edx],1
  410222:	xor    eax,0x1350748e
  410227:	mov    bh,0xf8
  410229:	ret    0xfd3f
  41022c:	addr16 daa 
  41022e:	(bad)  
  41022f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410231:	mov    al,ds:0x30b3546e
  410236:	(bad)  
  410237:	adc    al,0xa1
  410239:	dec    edx
  41023a:	and    BYTE PTR [edx],dh
  41023c:	jno    0x41027e
  41023e:	sub    DWORD PTR ds:0x43be544,0x677e113c
  410248:	pop    esi
  410249:	ins    BYTE PTR es:[edi],dx
  41024a:	sub    DWORD PTR [ebx+eiz*2+0x27],esp
  41024e:	mov    DWORD PTR ss:[edx],0x908f4196
  410255:	or     al,0x63
  410257:	mov    dh,dl
  410259:	sbb    ecx,DWORD PTR [ebp+0x11edf27]
  41025f:	lods   al,BYTE PTR ds:[esi]
  410260:	dec    esp
  410261:	test   al,0x68
  410263:	call   0xe7dc:0x6e120e7e
  41026a:	and    ecx,DWORD PTR [edx+0x59]
  41026d:	lods   eax,DWORD PTR ds:[esi]
  41026e:	sbb    ah,BYTE PTR [edi+0xd3aae2a]
  410274:	xchg   dl,bl
  410276:	jecxz  0x410212
  410278:	loope  0x4102c8
  41027a:	ds push edi
  41027c:	imul   esi,esp,0x11
  41027f:	lods   eax,DWORD PTR ds:[esi]
  410280:	mov    esp,ds
  410282:	jo     0x410207
  410284:	pop    ebp
  410285:	bound  ebx,QWORD PTR [ebp+0x58]
  410288:	push   0xb0d0a6e3
  41028d:	popa   
  41028e:	push   cs
  41028f:	push   esi
  410290:	cmp    cl,BYTE PTR [edx-0x23]
  410293:	or     dl,ch
  410295:	pop    esp
  410296:	loop   0x410309
  410298:	out    dx,eax
  410299:	mov    dl,0x80
  41029b:	fadd   DWORD PTR [ecx]
  41029d:	ja     0x410306
  41029f:	mov    ch,0x64
  4102a1:	pusha  
  4102a2:	(bad)  
  4102a3:	mov    ebx,0x8ab40bd
  4102a8:	mov    ebx,0x8724e01f
  4102ad:	je     0x410252
  4102af:	es jo  0x410256
  4102b2:	call   0xd9c0:0x69aae8db
  4102b9:	mov    dh,0x3
  4102bb:	pop    eax
  4102bc:	mov    esi,0xcfb45e7
  4102c1:	gs in  al,0x66
  4102c4:	add    ebp,DWORD PTR [esi+0x6922229f]
  4102ca:	std    
  4102cb:	rep lods al,BYTE PTR ds:[esi]
  4102cd:	or     al,BYTE PTR [eax+0x63edc3ce]
  4102d3:	pop    edi
  4102d4:	or     DWORD PTR [eax],0x80f2194d
  4102da:	jne    0x41035b
  4102dc:	not    DWORD PTR [esi]
  4102de:	int    0xad
  4102e0:	xchg   esp,eax
  4102e1:	mov    esp,0x755f1e91
  4102e6:	xor    dh,BYTE PTR [eax]
  4102e8:	or     cl,bh
  4102ea:	inc    esp
  4102eb:	in     al,0x37
  4102ed:	mov    ds:0x2794d82,al
  4102f2:	(bad)  
  4102f3:	push   eax
  4102f4:	inc    edx
  4102f5:	pusha  
  4102f6:	(bad)  
  4102f8:	dec    edx
  4102f9:	mov    al,ds:0x2d3ded
  4102fe:	retf   
  4102ff:	and    bh,BYTE PTR [ebp+0x17]
  410302:	add    esp,0xeeddfd3
  410308:	stc    
  410309:	icebp  
  41030a:	outs   dx,BYTE PTR ds:[esi]
  41030b:	test   DWORD PTR [ecx-0x31ec35ef],0xe8f51f13
  410315:	inc    esi
  410316:	loope  0x410373
  410318:	push   0x1c
  41031a:	mov    dh,0xd2
  41031c:	gs mov bh,0xa6
  41031f:	cmp    DWORD PTR [ebp+0x16d209c9],ebx
  410325:	in     eax,dx
  410326:	fldcw  WORD PTR [ebx]
  410328:	push   ecx
  410329:	add    eax,0xd03e9ab0
  41032e:	jp     0x4103ab
  410330:	cdq    
  410331:	loope  0x410319
  410333:	push   cs
  410334:	(bad)  
  410335:	cmp    BYTE PTR [eax+0x62a84e6],cl
  41033b:	mov    esp,0x25f46e85
  410340:	out    0xa3,eax
  410342:	or     ebp,DWORD PTR ds:0x975981ec
  410348:	loopne 0x410350
  41034a:	fcomip st,st(3)
  41034c:	test   BYTE PTR [ecx-0x7b],ch
  41034f:	lods   eax,DWORD PTR ds:[esi]
  410350:	retf   0x9d56
  410353:	xor    eax,0xb995f35
  410358:	adc    dl,BYTE PTR [edi]
  41035a:	ret    
  41035b:	test   eax,0x4df69a8c
  410360:	mov    edi,eax
  410362:	das    
  410363:	call   0x526d9d10
  410368:	pusha  
  410369:	sti    
  41036a:	dec    esi
  41036b:	sahf   
  41036c:	in     al,dx
  41036d:	dec    ebp
  41036e:	dec    edx
  41036f:	xchg   esi,eax
  410370:	dec    esi
  410371:	out    dx,al
  410372:	add    BYTE PTR [esi+0x53],ch
  410375:	ins    BYTE PTR es:[edi],dx
  410376:	mov    ebp,0x920d2f3
  41037b:	pop    ebp
  41037c:	pop    eax
  41037d:	in     al,dx
  41037e:	dec    ebp
  41037f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410380:	imul   esp,DWORD PTR [eax-0x13768f5],0x6a72ccbb
  41038a:	xor    ebp,DWORD PTR [eax]
  41038c:	call   0xd606:0x5eb6c512
  410393:	jne    0x410371
  410395:	jo     0x410348
  410397:	outs   dx,BYTE PTR ds:[esi]
  410398:	mov    ah,0xfb
  41039a:	sub    eax,DWORD PTR [edi+eiz*2+0x1ae915d6]
  4103a1:	mov    edi,0xdb1bfe0a
  4103a6:	xor    DWORD PTR [ebp+0x53],esp
  4103a9:	fisubr WORD PTR [edx-0x56]
  4103ac:	pop    ds
  4103ad:	pushf  
  4103ae:	mov    edi,0x19732daa
  4103b3:	mov    esi,DWORD PTR [ebp+esi*2+0x689a272d]
  4103ba:	cli    
  4103bb:	popf   
  4103bc:	jmp    0xa3d0887b
  4103c1:	mov    ebx,0x86f3fd3c
  4103c6:	(bad)  
  4103c7:	mov    esi,0x56e91435
  4103cc:	fbld   TBYTE PTR [ecx+0x3708d6af]
  4103d2:	fistp  WORD PTR [edx+0x5f6a49a7]
  4103d8:	mov    DWORD PTR [ebp+0x5d3829ee],edi
  4103de:	adc    cl,ah
  4103e0:	call   0xa3e0300f
  4103e5:	outs   dx,BYTE PTR ds:[esi]
  4103e6:	or     eax,0xeadf4503
  4103eb:	hlt    
  4103ec:	cmp    ch,BYTE PTR [ebx]
  4103ee:	fwait
  4103ef:	pushf  
  4103f0:	(bad)
  4103f3:	in     eax,dx
  4103f4:	out    dx,al
  4103f5:	imul   esi,DWORD PTR [ebx],0x596f88f8
  4103fb:	mov    ss,WORD PTR [ebx+eiz*2]
  4103fe:	xchg   edx,eax
  4103ff:	(bad)  
  410400:	(bad)  
  410402:	bnd js 0x4103f0
  410405:	pusha  
  410406:	(bad)  
  410407:	scas   eax,DWORD PTR es:[edi]
  410408:	mov    al,0xa6
  41040a:	add    BYTE PTR [edx],0xc0
  41040d:	leave  
  41040e:	xchg   esi,eax
  41040f:	or     ecx,esp
  410411:	pop    es
  410412:	in     eax,0xb3
  410414:	sub    BYTE PTR [ebx+0x68951bd6],0xd8
  41041b:	pushf  
  41041c:	mov    bh,0x22
  41041e:	ja     0x410414
  410420:	mov    ebp,0x56a72d33
  410425:	sub    ah,BYTE PTR [ecx+eiz*8]
  410428:	adc    ecx,ebp
  41042a:	and    ah,BYTE PTR [esi]
  41042c:	shr    DWORD PTR [edx-0x13],0xfb
  410430:	mov    edx,0x9eaccff9
  410435:	ret    
  410436:	(bad)  
  410437:	jae    0x4103da
  410439:	xchg   ebx,eax
  41043a:	and    ch,BYTE PTR [esp+eiz*2]
  41043d:	int    0xf7
  41043f:	jmp    0xa304:0x8d83e70f
  410446:	jne    0x410462
  410448:	xchg   esp,eax
  410449:	dec    ecx
  41044a:	nop
  41044b:	mov    ds:0x91cc4c8,eax
  410450:	sub    ebx,DWORD PTR [ecx]
  410452:	nop
  410453:	xchg   edi,eax
  410454:	sub    cl,bl
  410456:	arpl   cx,sp
  410458:	cmp    edx,DWORD PTR [edx+0x398d8baf]
  41045e:	test   BYTE PTR [ecx+0x387ce8f3],dl
  410464:	inc    eax
  410465:	popf   
  410466:	les    edx,FWORD PTR [ebx]
  410468:	lahf   
  410469:	push   edx
  41046a:	rcl    ebx,0x1b
  41046d:	addr16 sti 
  41046f:	jns    0x4104a1
  410471:	xchg   edi,eax
  410472:	mov    ah,0x3
  410474:	xor    eax,0x7f61ef46
  410479:	xchg   esi,eax
  41047a:	(bad)  
  41047b:	std    
  41047c:	mov    esi,0x3b0085dd
  410481:	add    cl,al
  410483:	jmp    0xb98700ce
  410488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410489:	aam    0x3b
  41048b:	sbb    DWORD PTR [ecx+eiz*8-0x66b0472f],ebx
  410492:	push   eax
  410493:	(bad)  
  410494:	push   esp
  410495:	push   esi
  410496:	cld    
  410497:	dec    ebp
  410498:	mov    WORD PTR [eax+0x806112d],cs
  41049e:	lods   al,BYTE PTR ds:[esi]
  41049f:	(bad)  
  4104a0:	and    ch,ah
  4104a2:	ja     0x4104c6
  4104a4:	jp     0x4104a1
  4104a6:	add    ebx,DWORD PTR [ebp+edi*2+0x74cd72ce]
  4104ad:	and    eax,0xc68c7719
  4104b2:	out    0x4c,al
  4104b4:	jmp    FWORD PTR [edi-0x68]
  4104b7:	rcl    BYTE PTR [eax+ebx*1-0x7cf7d187],1
  4104be:	pop    ebp
  4104bf:	mul    DWORD PTR [ecx-0x76]
  4104c2:	cmp    al,BYTE PTR [edx-0x57]
  4104c5:	(bad)  
  4104c6:	fnstenv [edx+0x47cea761]
  4104cc:	(bad)  
  4104cd:	out    0x53,eax
  4104cf:	xchg   ebp,eax
  4104d0:	or     DWORD PTR [ecx],0x2d2f2f5f
  4104d6:	mov    bl,0x63
  4104d8:	pop    edi
  4104d9:	rcl    edi,1
  4104db:	dec    esi
  4104dc:	adc    eax,DWORD PTR [ebp-0x41]
  4104df:	retf   
  4104e0:	mov    al,0xf4
  4104e2:	push   esi
  4104e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104e4:	mov    DWORD PTR ds:0xbe46aebf,edi
  4104ea:	inc    edi
  4104eb:	inc    esp
  4104ec:	int    0xbc
  4104ee:	cmp    eax,0x59155def
  4104f3:	ds jmp 0x987bd3ca
  4104f9:	ret    0x2907
  4104fc:	cmc    
  4104fd:	lods   eax,DWORD PTR ds:[esi]
  4104fe:	xchg   BYTE PTR [esi-0xf01c79e],ah
  410504:	sub    al,0x44
  410506:	pop    edx
  410507:	or     DWORD PTR [ecx-0x9c1c058],ebp
  41050d:	add    al,BYTE PTR [esi]
  41050f:	add    edx,DWORD PTR [edi+0x40822cae]
  410515:	inc    DWORD PTR [edx+eax*1+0x393d0921]
  41051c:	fmul   DWORD PTR [ebx+0x23]
  41051f:	push   ss
  410520:	outs   dx,BYTE PTR ds:[esi]
  410521:	and    BYTE PTR [edi+0x64e744c8],0x42
  410528:	scas   al,BYTE PTR es:[edi]
  410529:	sbb    DWORD PTR [esi-0x57],ebp
  41052c:	pop    ss
  41052d:	mov    al,0xb3
  41052f:	pop    esp
  410530:	sbb    al,0x7d
  410532:	ret    0xb32f
  410535:	bound  ebp,QWORD PTR [ebx+edi*1-0x2d63d34e]
  41053c:	dec    DWORD PTR [esi+ebp*2]
  41053f:	ins    BYTE PTR es:[edi],dx
  410540:	ss sbb eax,0xdd1cb7ed
  410546:	dec    eax
  410547:	and    DWORD PTR [ebp+edx*1-0x19],edi
  41054b:	jle    0x410517
  41054d:	(bad)  
  41054e:	ds lahf 
  410550:	sbb    DWORD PTR [ebx-0xe],0x80a5d919
  410557:	cmc    
  410558:	int    0xcf
  41055a:	repnz popa 
  41055c:	xor    DWORD PTR [ebx-0x8bc8a08],esp
  410562:	ins    DWORD PTR es:[edi],dx
  410563:	(bad)  
  410565:	imul   esp,DWORD PTR [edi-0x18dd89b3],0x48
  41056c:	jle    0x41055c
  41056e:	xor    eax,0x11b84d92
  410573:	dec    ecx
  410574:	pop    eax
  410575:	ja     0x41053d
  410577:	stos   DWORD PTR es:[edi],eax
  410578:	cmp    eax,0x55c2148e
  41057d:	push   edx
  41057e:	imul   DWORD PTR [esi-0x1ab5d74a]
  410584:	cmp    eax,DWORD PTR [esi]
  410586:	inc    esp
  410587:	arpl   WORD PTR [ecx],sp
  410589:	call   0x74:0x34eb482b
  410590:	push   esp
  410591:	xor    edi,DWORD PTR [esp+edx*8]
  410594:	mov    dh,0x4
  410596:	push   eax
  410597:	cmp    DWORD PTR [edx],eax
  410599:	and    edx,edx
  41059b:	sbb    esp,0x54
  41059e:	in     al,dx
  41059f:	test   al,0x5f
  4105a1:	fs std 
  4105a3:	cmc    
  4105a4:	(bad)  
  4105a5:	sti    
  4105a6:	rol    DWORD PTR [ecx+0xd02ca8d],1
  4105ac:	pop    edi
  4105ad:	bound  eax,QWORD PTR [eax]
  4105af:	dec    ecx
  4105b0:	paddusb mm1,QWORD PTR [ecx+ebp*2+0x2f]
  4105b5:	adc    al,BYTE PTR [eax]
  4105b7:	and    ebx,DWORD PTR es:[eax+0x1c]
  4105bb:	jb     0x4105c6
  4105bd:	out    0x7e,eax
  4105bf:	es out dx,al
  4105c1:	call   0x17366c4b
  4105c6:	inc    edi
  4105c7:	mov    al,0x3a
  4105c9:	push   ecx
  4105ca:	aaa    
  4105cb:	stos   BYTE PTR es:[edi],al
  4105cc:	pop    ds
  4105cd:	xor    esp,DWORD PTR [eax]
  4105cf:	jg     0x4105d3
  4105d1:	mov    al,0x95
  4105d3:	mov    ah,0x59
  4105d5:	jmp    0x7693aef5
  4105da:	xchg   ecx,eax
  4105db:	adc    ah,bh
  4105dd:	add    al,0x37
  4105df:	dec    ebx
  4105e0:	mov    edx,0x82dbdfc0
  4105e5:	addr16 mov ebp,0x4ecde5e5
  4105eb:	mov    dl,0xda
  4105ed:	pusha  
  4105ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105ef:	mov    cl,0xb1
  4105f1:	push   ebp
  4105f2:	aas    
  4105f3:	outs   dx,BYTE PTR ds:[esi]
  4105f4:	js     0x41064a
  4105f6:	jmp    0x4105f8
  4105f8:	test   BYTE PTR [ecx-0x6d8c7928],0x44
  4105ff:	call   0xc4bc5256
  410604:	mov    gs,ecx
  410606:	inc    ebp
  410607:	mov    dl,0x96
  410609:	pop    ebx
  41060a:	shr    DWORD PTR [eax],cl
  41060c:	xchg   ebp,eax
  41060d:	add    bh,BYTE PTR cs:0x751f5482
  410614:	retf   
  410615:	add    eax,0xa8496a83
  41061a:	in     al,0x77
  41061c:	jns    0x41067d
  41061e:	fisubr DWORD PTR [ebx+ecx*2-0x6a25a0cf]
  410625:	mov    dh,0x2b
  410627:	sub    al,0xd4
  410629:	jge    0x4105c8
  41062b:	sbb    esp,DWORD PTR [ebx-0x7dc5e90e]
  410631:	adc    al,0xbc
  410633:	sub    DWORD PTR [ecx],0xe97d4b87
  410639:	pop    ds
  41063a:	fdiv   st(5),st
  41063c:	jmp    0x587d:0xb4b389ed
  410643:	pop    ss
  410644:	mov    dh,0x2
  410646:	(bad)  
  410647:	fidiv  WORD PTR [ebp-0x8]
  41064a:	cmp    edx,esp
  41064c:	sbb    ch,BYTE PTR [esi-0x76]
  41064f:	enter  0x27dd,0x3c
  410653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410654:	inc    esp
  410655:	sub    ch,dl
  410657:	lahf   
  410658:	jmp    0x410619
  41065a:	add    eax,0x5f77e3c6
  41065f:	inc    ebp
  410660:	loop   0x41063b
  410662:	inc    eax
  410663:	aaa    
  410664:	jmp    0x4106d3
  410666:	je     0x410634
  410668:	cmp    al,0xc4
  41066a:	pop    ebx
  41066b:	cld    
  41066c:	push   ebp
  41066d:	stos   DWORD PTR es:[edi],eax
  41066e:	iret   
  41066f:	(bad)  
  410670:	pop    es
  410671:	or     dl,BYTE PTR [eax]
  410673:	dec    BYTE PTR [esi+ebx*4-0xe21ec9b]
  41067a:	mov    ecx,0xafce97fc
  41067f:	adc    BYTE PTR gs:[eax],dl
  410682:	adc    al,BYTE PTR [esi-0x7e3e6d07]
  410688:	outs   dx,DWORD PTR ds:[esi]
  410689:	sbb    DWORD PTR [edx],0xffffff9b
  41068c:	fist   WORD PTR [edx+0x6]
  41068f:	push   ds
  410690:	jae    0x410620
  410692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410693:	inc    ecx
  410694:	imul   ebx,DWORD PTR [edi+0x278f0900],0x4fdc62af
  41069e:	inc    edx
  41069f:	test   BYTE PTR [ecx+eax*4+0x0],dl
  4106a3:	cmp    al,0x54
  4106a5:	fisub  DWORD PTR [eax+0xb]
  4106a8:	mov    ah,0x76
  4106aa:	jl     0x4106f1
  4106ac:	cwde   
  4106ad:	icebp  
  4106ae:	jno    0x41072c
  4106b0:	or     esp,DWORD PTR [eax-0x15]
  4106b3:	sti    
  4106b4:	lea    esi,[esi+0x16]
  4106b7:	push   edx
  4106b8:	inc    eax
  4106b9:	sbb    eax,0x9baab689
  4106be:	sbb    esp,edx
  4106c0:	inc    ebp
  4106c1:	push   0x65
  4106c3:	icebp  
  4106c4:	cmc    
  4106c5:	sub    bh,BYTE PTR [edi-0x3c]
  4106c8:	mov    edx,0xb384594b
  4106cd:	sbb    al,0xe8
  4106cf:	pop    edi
  4106d0:	and    eax,edi
  4106d2:	mov    ds:0x1fe9b0d5,eax
  4106d7:	and    al,BYTE PTR [edx]
  4106d9:	or     esp,DWORD PTR [eax]
  4106db:	outs   dx,BYTE PTR ds:[esi]
  4106dc:	scas   al,BYTE PTR es:[edi]
  4106dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106de:	and    DWORD PTR [ebx+0x3a],0x5a
  4106e2:	jne    0x4106cf
  4106e4:	std    
  4106e5:	ins    BYTE PTR es:[edi],dx
  4106e6:	dec    ecx
  4106e7:	push   0xffffffc6
  4106e9:	mov    edi,0x2722553a
  4106ee:	or     esp,DWORD PTR [ebx+0x1cb0a63]
  4106f4:	test   eax,0x2eb33ba5
  4106f9:	inc    edx
  4106fa:	cs retf 0x5853
  4106fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ff:	mov    fs,WORD PTR [esp+edi*4+0x3a24bf3a]
  410706:	jecxz  0x410732
  410708:	inc    edi
  410709:	aaa    
  41070a:	xlat   BYTE PTR ds:[ebx]
  41070b:	lock inc edx
  41070d:	cld    
  41070e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41070f:	pop    ebx
  410710:	or     ch,bl
  410712:	out    0xda,al
  410714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410715:	pop    es
  410716:	adc    eax,0x30dc42ac
  41071b:	idiv   BYTE PTR [edi]
  41071d:	jg     0x410793
  41071f:	push   0xdf2002ad
  410724:	mov    esi,0x295405a7
  410729:	mov    edx,ebp
  41072b:	cli    
  41072c:	lea    esi,[ecx]
  41072e:	inc    edx
  41072f:	hlt    
  410730:	xchg   ebp,eax
  410731:	lods   eax,DWORD PTR ds:[esi]
  410732:	lds    esp,FWORD PTR ds:0xb8f32db1
  410738:	out    0x72,al
  41073a:	je     0x410720
  41073c:	or     eax,0x88a17c6c
  410741:	jg     0x4107aa
  410743:	jae    0x410770
  410745:	inc    ebx
  410746:	ins    BYTE PTR es:[edi],dx
  410747:	jnp    0x41078e
  410749:	sbb    ah,bl
  41074b:	out    dx,al
  41074c:	pop    edi
  41074d:	inc    esp
  41074e:	and    eax,0xcfa3668d
  410753:	mov    bl,0x6f
  410755:	mov    ebx,0x131a2c8d
  41075a:	sbb    bh,BYTE PTR [eax]
  41075c:	imul   esi,DWORD PTR [ecx+0x4fed27cc],0xbaef4f6d
  410766:	sub    DWORD PTR [ebp+0x3f],edi
  410769:	pop    edi
  41076a:	adc    BYTE PTR [ebx],ch
  41076c:	jae    0x4107ad
  41076e:	xchg   BYTE PTR [edx+0x60c0bda1],ah
  410774:	test   DWORD PTR [ebx+0x681d11a3],edx
  41077a:	outs   dx,DWORD PTR ds:[esi]
  41077b:	popf   
  41077c:	add    ecx,esp
  41077e:	adc    DWORD PTR [ebx+0x4442cb22],ebp
  410784:	fstp   DWORD PTR [ecx]
  410786:	cmp    ecx,ebp
  410788:	xchg   edx,eax
  410789:	in     al,0xc6
  41078b:	mov    ebx,0xc6f27cea
  410790:	mov    BYTE PTR [edi*2+0x1213948b],ah
  410797:	add    bh,BYTE PTR [eax+0x3c]
  41079a:	add    DWORD PTR [edx+0x4f15b0d7],eax
  4107a0:	(bad)  
  4107a1:	cli    
  4107a2:	test   BYTE PTR [ebp+eiz*8-0x3e],dh
  4107a6:	ficom  WORD PTR [edx]
  4107a8:	mov    esp,0x5ad12a2a
  4107ad:	pop    eax
  4107ae:	sbb    BYTE PTR [eax-0x216a399f],dl
  4107b4:	sti    
  4107b5:	jb     0x4107eb
  4107b7:	int    0x60
  4107b9:	retf   0x845e
  4107bc:	mov    edi,0x2247ac47
  4107c1:	call   0x561:0xc683ad7a
  4107c8:	test   BYTE PTR [ebx],bl
  4107ca:	fs mov ecx,0xe2ab7519
  4107d0:	sbb    eax,0x23a845fd
  4107d5:	div    DWORD PTR [edi]
  4107d7:	jmp    0x4107d1
  4107d9:	mov    ds:0xfa6b9b52,eax
  4107de:	mov    bl,BYTE PTR [edi+esi*4]
  4107e1:	in     al,0x12
  4107e3:	sahf   
  4107e4:	add    dl,bl
  4107e6:	pop    es
  4107e7:	imul   ebx,DWORD PTR [ebx+0x50],0x8
  4107eb:	fld    TBYTE PTR [edx-0x358d5ce2]
  4107f1:	addr16 loop 0x4107da
  4107f4:	mov    ss,WORD PTR [ecx]
  4107f6:	jb     0x4107c5
  4107f8:	pushf  
  4107f9:	inc    ebp
  4107fa:	fimul  WORD PTR ds:0xd6cb8f3d
  410800:	pop    ss
  410801:	pop    ebp
  410802:	jo     0x4107ef
  410804:	mov    WORD PTR [ebx+eax*1+0xb],ds
  410808:	std    
  410809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41080a:	fistp  DWORD PTR [eax+ebx*2]
  41080d:	mov    cl,0x88
  41080f:	std    
  410810:	pusha  
  410811:	fxch   st(7)
  410813:	and    BYTE PTR [ebp-0xe],ah
  410816:	(bad)  
  410817:	push   esi
  410818:	fld    DWORD PTR [esi+edx*2+0x23dd0c12]
  41081f:	push   dx
  410821:	daa    
  410822:	fidiv  WORD PTR ds:0xcf8fa869
  410828:	outs   dx,BYTE PTR ds:[esi]
  410829:	mov    ebp,0x322f55b5
  41082e:	mov    edi,0x8f96998c
  410833:	pop    esp
  410834:	popf   
  410835:	(bad)  
  410837:	mov    DWORD PTR [ecx+0x7ac767c4],edx
  41083d:	push   ds
  41083e:	loop   0x41080f
  410840:	add    ch,BYTE PTR ds:0x84a0bdf2
  410846:	aad    0xeb
  410848:	out    dx,eax
  410849:	push   0x9eb0e914
  41084e:	in     eax,dx
  41084f:	daa    
  410850:	out    dx,al
  410851:	aas    
  410852:	enter  0x3278,0x3f
  410856:	push   ecx
  410857:	lods   al,BYTE PTR ds:[esi]
  410858:	xlat   BYTE PTR ds:[ebx]
  410859:	mov    al,0xf9
  41085b:	sub    ch,ah
  41085d:	ins    DWORD PTR es:[edi],dx
  41085e:	mov    WORD PTR [esp+edx*2-0x18],?
  410862:	adc    DWORD PTR ss:[ecx+edx*2-0x5f],ebp
  410867:	(bad)  
  410868:	adc    DWORD PTR [esi-0x22],esi
  41086b:	rcl    DWORD PTR [edx-0x17],0x20
  41086f:	sub    al,0x46
  410871:	jmp    0xff836bf5
  410876:	pop    esp
  410877:	adc    DWORD PTR [esi+0x6f],ecx
  41087a:	lahf   
  41087b:	and    DWORD PTR [eax+0x1a],ebx
  41087e:	mov    esp,0x2827a011
  410883:	jl     0x4108fd
  410885:	mov    ebx,0xfe90ad4b
  41088a:	jge    0x4108ff
  41088c:	sbb    eax,0x2bbfcbe6
  410891:	xchg   DWORD PTR [edi],ebp
  410893:	test   DWORD PTR [edx-0x691e65ba],ebx
  410899:	sbb    ebx,eax
  41089b:	xor    DWORD PTR [esi-0x24],ebp
  41089e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089f:	iret   
  4108a0:	enter  0xaab5,0x34
  4108a4:	imul   edi,DWORD PTR [esi],0xefaace67
  4108aa:	ror    DWORD PTR [edi],0xbd
  4108ad:	cmc    
  4108ae:	xchg   esp,eax
  4108af:	xchg   ebx,eax
  4108b0:	(bad)  
  4108b2:	sahf   
  4108b3:	js     0x41083f
  4108b5:	into   
  4108b6:	mov    edi,0x3f81f9ce
  4108bb:	inc    ebx
  4108bc:	inc    ecx
  4108bd:	shl    edx,cl
  4108bf:	call   DWORD PTR ds:0xd485d7dd
  4108c5:	sahf   
  4108c6:	iret   
  4108c7:	leave  
  4108c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108c9:	bswap  edi
  4108cb:	mov    esi,0x4cfdd285
  4108d0:	or     eax,0xe129fc67
  4108d5:	and    BYTE PTR [edx+eax*8-0x34],dl
  4108d9:	xchg   ebp,eax
  4108da:	dec    edi
  4108db:	adc    eax,eax
  4108dd:	sub    ebp,DWORD PTR [ecx+eax*4]
  4108e0:	sub    ebx,ebx
  4108e2:	push   0x53185fee
  4108e7:	(bad)  
  4108e8:	retf   0xd082
  4108eb:	cdq    
  4108ec:	pop    ebx
  4108ed:	ds fcmovne st,st(1)
  4108f0:	pop    ebx
  4108f1:	mov    WORD PTR [edx-0x49d24b77],cs
  4108f7:	out    dx,al
  4108f8:	dec    ebp
  4108f9:	cs nop
  4108fb:	out    dx,eax
  4108fc:	inc    esi
  4108fd:	stos   BYTE PTR es:[edi],al
  4108fe:	cmp    DWORD PTR [eax],esp
  410900:	loope  0x4108d0
  410902:	mov    esi,0x91cef81a
  410907:	icebp  
  410908:	call   0x237983e3
  41090d:	xor    esp,DWORD PTR [eax+ebp*8]
  410910:	scas   eax,DWORD PTR es:[edi]
  410911:	out    dx,al
  410912:	or     BYTE PTR [edx],bh
  410914:	mov    ds:0xa2377748,eax
  410919:	fild   DWORD PTR [edi+0x17eb9c80]
  41091f:	jle    0x41099b
  410921:	or     DWORD PTR [esi+0x26],0x1c7883e3
  410928:	mov    esp,0x23a87bb4
  41092d:	jecxz  0x4108ce
  41092f:	(bad)  
  410930:	(bad)  
  410931:	or     eax,0x613de536
  410936:	sub    al,0x8f
  410938:	je     0x4109a5
  41093a:	mov    ds:0xf7de09a9,al
  41093f:	fcmovnbe st,st(7)
  410941:	xor    edx,DWORD PTR [edi-0x5d79fcaa]
  410947:	mov    bh,0xed
  410949:	repnz mov eax,ds:0x5cd2ac0c
  41094f:	xchg   esi,eax
  410950:	xchg   esi,eax
  410951:	dec    esp
  410952:	xlat   BYTE PTR ds:[ebx]
  410953:	xor    ah,bh
  410955:	and    al,0xeb
  410957:	mov    BYTE PTR [edi-0x29c98993],al
  41095d:	icebp  
  41095e:	test   al,0x70
  410960:	mov    ds:0x844bb812,al
  410965:	jmp    FWORD PTR [ecx-0x31]
  410968:	(bad)  
  41096a:	sbb    ah,ah
  41096c:	ror    BYTE PTR [ebx-0x7b1f7bca],1
  410972:	pop    ds
  410973:	inc    esp
  410974:	(bad)  
  410975:	jns    0x410900
  410977:	aas    
  410978:	push   ss
  410979:	outs   dx,BYTE PTR ds:[esi]
  41097a:	cmp    DWORD PTR [ebx],0xffffffe0
  41097d:	cli    
  41097e:	aad    0x84
  410980:	push   esp
  410981:	shl    BYTE PTR [ebp+0x43d2de35],cl
  410987:	cs adc dl,ah
  41098a:	cs inc ebp
  41098c:	inc    edi
  41098d:	mov    cl,0x92
  41098f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410990:	cs scas eax,DWORD PTR es:[edi]
  410992:	or     dl,BYTE PTR [edi+0x34]
  410995:	ret    
  410996:	and    BYTE PTR [ecx],bh
  410998:	out    dx,al
  410999:	(bad)  
  41099b:	outs   dx,BYTE PTR ds:[esi]
  41099c:	mov    ebp,0xb7d0f584
  4109a1:	pop    edx
  4109a2:	xor    al,0x36
  4109a4:	adc    al,0x4
  4109a6:	jb     0x410a15
  4109a8:	inc    edi
  4109a9:	sub    ecx,DWORD PTR [ecx]
  4109ab:	leave  
  4109ac:	lods   eax,DWORD PTR ds:[esi]
  4109ad:	mov    ebp,0x19db073a
  4109b2:	mov    ebx,0x655e6af8
  4109b7:	xor    eax,0xf0f69077
  4109bc:	jp     0x410979
  4109be:	mov    ds:0x930c70ec,al
  4109c3:	test   DWORD PTR [ecx],edx
  4109c5:	(bad)  
  4109c6:	xor    esi,DWORD PTR [ebp-0x716288c8]
  4109cc:	in     al,dx
  4109cd:	inc    ebp
  4109ce:	sub    eax,DWORD PTR [esi+0x1a]
  4109d1:	lock sbb edx,esi
  4109d4:	pushf  
  4109d5:	push   edx
  4109d6:	push   edi
  4109d7:	sbb    cl,BYTE PTR [esi]
  4109d9:	hlt    
  4109da:	pop    es
  4109db:	outs   dx,BYTE PTR ds:[esi]
  4109dc:	cli    
  4109dd:	inc    eax
  4109de:	cmc    
  4109df:	fdivr  st,st(3)
  4109e1:	and    BYTE PTR [edi-0x7401f437],ch
  4109e7:	jo     0x4109a9
  4109e9:	mov    ah,0xe7
  4109eb:	adc    DWORD PTR [edx],esi
  4109ed:	adc    al,0x84
  4109ef:	rol    DWORD PTR [edx-0x41],0x5c
  4109f3:	idiv   DWORD PTR [esi+0x5b8875f5]
  4109f9:	in     al,0x76
  4109fb:	retf   0xe1f9
  4109fe:	dec    edx
  4109ff:	push   es
  410a00:	repnz mov al,0xa4
  410a03:	push   0x72d764b6
  410a08:	ret    
  410a09:	xchg   edx,eax
  410a0a:	jb     0x410a68
  410a0c:	jecxz  0x410a56
  410a0e:	adc    al,BYTE PTR [edx]
  410a10:	sahf   
  410a11:	jge    0x4109e0
  410a13:	inc    ecx
  410a14:	add    ah,BYTE PTR [edi+0x62]
  410a17:	mov    cs,WORD PTR [eax]
  410a19:	(bad)  
  410a1a:	clc    
  410a1b:	jmp    0x4109bb
  410a1d:	cmpxchg DWORD PTR [esi+0x62],ebx
  410a21:	add    al,0x47
  410a23:	mov    esp,0xcb7f2272
  410a28:	push   0xffffff91
  410a2a:	mov    eax,DWORD PTR [esi+0x12e93128]
  410a30:	or     bh,BYTE PTR [ecx]
  410a32:	mov    al,0x9f
  410a34:	clc    
  410a35:	xchg   ebp,eax
  410a36:	out    0xa9,eax
  410a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a39:	mov    ecx,0x92d4b9ae
  410a3e:	adc    ebx,DWORD PTR [edx-0x76e08cb2]
  410a44:	cdq    
  410a45:	xchg   ebx,eax
  410a46:	leave  
  410a47:	cmp    eax,0x3a22ef04
  410a4c:	jnp    0x410a04
  410a4e:	and    edx,DWORD PTR [ebx-0x6b81a25d]
  410a54:	mov    ebx,DWORD PTR [ecx]
  410a56:	jl     0x410a9c
  410a58:	sbb    al,0x3a
  410a5a:	test   eax,0x8c681d9b
  410a5f:	xchg   ecx,eax
  410a60:	cmp    al,0xf
  410a62:	push   eax
  410a63:	out    dx,al
  410a64:	mov    dh,0x48
  410a66:	lock add BYTE PTR [ecx-0x22c8227f],0x18
  410a6e:	(bad)  
  410a6f:	dec    ebp
  410a70:	das    
  410a71:	and    DWORD PTR [esi+0x7b6d708c],0x5d
  410a78:	cs ret 
  410a7a:	sbb    DWORD PTR [edx],0x20
  410a7d:	in     al,dx
  410a7e:	xor    eax,0xd3175b3
  410a83:	fmul   QWORD PTR [ecx+0x13ab2b95]
  410a89:	and    eax,0xf78043ce
  410a8e:	and    al,0x4d
  410a90:	or     BYTE PTR [ebp-0x6b],dh
  410a93:	shl    esp,cl
  410a95:	sub    DWORD PTR [ebx-0x5e944151],0x62c187e5
  410a9f:	mov    al,ds:0x4551591c
  410aa4:	test   ecx,edi
  410aa6:	add    cl,cl
  410aa8:	pop    edx
  410aa9:	jmp    0xc801:0x563c058e
  410ab0:	push   edx
  410ab1:	or     dh,dh
  410ab3:	push   es
  410ab4:	xor    BYTE PTR [eax+ebp*4],bh
  410ab7:	jbe    0x410aad
  410ab9:	mov    edi,0xa8371164
  410abe:	xor    ch,BYTE PTR [edx+0x3f2b8e05]
  410ac4:	and    edx,esi
  410ac6:	repnz pushf 
  410ac8:	rol    BYTE PTR [esi],0xa2
  410acb:	arpl   WORD PTR [edi+0x66fb9e7],dx
  410ad1:	imul   DWORD PTR [eax]
  410ad3:	sbb    al,bl
  410ad5:	mov    esi,0x9c865087
  410ada:	stos   BYTE PTR es:[edi],al
  410adb:	sub    DWORD PTR [ebp-0x7344cd02],edi
  410ae1:	loope  0x410b09
  410ae3:	(bad)  
  410ae5:	fimul  WORD PTR [esi-0x2d9efa5d]
  410aeb:	sub    bh,ah
  410aed:	fwait
  410aee:	pop    esi
  410aef:	xlat   BYTE PTR ds:[ebx]
  410af0:	pop    eax
  410af1:	outs   dx,BYTE PTR ds:[esi]
  410af2:	aas    
  410af3:	fisubr DWORD PTR [edx+eax*4+0x4c]
  410af7:	mov    edx,DWORD PTR [esi+0x272dedaa]
  410afd:	xchg   ecx,eax
  410afe:	in     al,dx
  410aff:	es ret 
  410b01:	mov    edi,0x94fcbbab
  410b06:	(bad)  
  410b07:	xor    BYTE PTR [edi+0x74],al
  410b0a:	dec    esi
  410b0b:	jo     0x410b4a
  410b0d:	cmp    al,0x0
  410b0f:	cmp    eax,0xc8dc9cce
  410b14:	jbe    0x410a99
  410b16:	xchg   esp,eax
  410b17:	inc    esi
  410b18:	add    eax,0x4d951c3c
  410b1d:	sub    esp,edx
  410b1f:	aaa    
  410b20:	cmp    BYTE PTR [esi+0x7c],al
  410b23:	sbb    BYTE PTR [edi-0x3e3273b9],cl
  410b29:	cmp    bl,BYTE PTR [ecx+0x7905b92f]
  410b2f:	dec    ebx
  410b30:	mov    ch,0x4c
  410b32:	pop    ss
  410b33:	js     0x410b0d
  410b35:	hlt    
  410b36:	jbe    0x410b61
  410b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b39:	jp     0x410ae2
  410b3b:	add    al,0xe8
  410b3d:	cmp    eax,0xf6016b8c
  410b42:	repz jne 0x410b9c
  410b45:	sub    al,0xce
  410b47:	add    al,0x6a
  410b49:	sub    eax,0xed1a402b
  410b4e:	fdivr  DWORD PTR [edx]
  410b50:	or     ah,ah
  410b52:	push   0x19cde3b8
  410b57:	xchg   dl,ch
  410b59:	stos   BYTE PTR es:[edi],al
  410b5a:	in     al,dx
  410b5b:	or     eax,0xc010e7ea
  410b60:	cmp    al,0x7e
  410b62:	push   es
  410b63:	xchg   DWORD PTR [ecx+0x646c6312],eax
  410b69:	push   edi
  410b6a:	pop    edi
  410b6b:	js     0x410b09
  410b6d:	adc    DWORD PTR [eax-0x59054103],0x24748185
  410b77:	out    dx,al
  410b78:	imul   esi,DWORD PTR [edi-0x78],0xffffffb2
  410b7c:	jb     0x410b2f
  410b7e:	sbb    DWORD PTR [esi],ebp
  410b80:	call   0xa6e6c78d
  410b85:	xchg   cl,cl
  410b87:	and    al,0x9b
  410b89:	pop    ebp
  410b8a:	pop    esp
  410b8b:	push   ss
  410b8c:	leave  
  410b8d:	enter  0x153e,0x38
  410b91:	js     0x410bd6
  410b93:	sub    dl,0x1a
  410b96:	ja     0x410c13
  410b98:	fwait
  410b99:	dec    esi
  410b9a:	sbb    ch,BYTE PTR [esi]
  410b9c:	cdq    
  410b9d:	dec    edi
  410b9e:	(bad)
  410ba2:	mov    ebp,0x9fd53d6f
  410ba7:	test   eax,0xe50693f8
  410bac:	std    
  410bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bae:	xchg   edx,eax
  410baf:	jg     0x410b84
  410bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bb2:	div    ecx
  410bb4:	in     al,0xd9
  410bb6:	adc    edi,esp
  410bb8:	and    eax,ebx
  410bba:	loope  0x410bef
  410bbc:	lods   eax,DWORD PTR ds:[esi]
  410bbd:	in     eax,0xa1
  410bbf:	div    ecx
  410bc1:	iret   
  410bc2:	in     al,dx
  410bc3:	inc    edi
  410bc4:	into   
  410bc5:	sahf   
  410bc6:	icebp  
  410bc7:	sub    BYTE PTR cs:[ebp+0x50],dl
  410bcb:	nop
  410bcc:	sbb    DWORD PTR [ecx],eax
  410bce:	cmp    eax,0x5dd0d4b
  410bd3:	clts   
  410bd5:	(bad)  
  410bd6:	fcmovbe st,st(5)
  410bd8:	icebp  
  410bd9:	dec    esi
  410bda:	addr16 jmp 0x7a4e:0xa097ed75
  410be2:	add    al,0x95
  410be4:	dec    eax
  410be5:	mov    eax,0x8ee67651
  410bea:	rcl    BYTE PTR [ebp+0x7a42fb65],0x1
  410bf1:	setnp  BYTE PTR [eax+edx*1]
  410bf5:	call   0xe0676025
  410bfa:	push   cs
  410bfb:	ret    0xbdc3
  410bfe:	pop    esp
  410bff:	add    eax,0xd2f968ff
  410c04:	or     DWORD PTR [edx+edi*2-0x36],edi
  410c08:	mov    esp,0x33738ea4
  410c0d:	xchg   dl,al
  410c0f:	fs sub al,0x31
  410c12:	aaa    
  410c13:	jmp    0xdf62a314
  410c18:	push   ecx
  410c19:	int    0xe1
  410c1b:	ret    
  410c1c:	mov    ebx,0x651cb5f3
  410c21:	in     eax,dx
  410c22:	into   
  410c23:	sbb    eax,0xfa96f06d
  410c28:	add    BYTE PTR [ecx],bh
  410c2a:	in     al,dx
  410c2b:	lods   al,BYTE PTR ds:[esi]
  410c2c:	aas    
  410c2d:	test   eax,0x9bd46217
  410c32:	gs arpl di,si
  410c35:	inc    ecx
  410c36:	sbb    ecx,DWORD PTR [esi]
  410c38:	push   ebx
  410c39:	popf   
  410c3a:	(bad)  
  410c3b:	leave  
  410c3c:	sbb    BYTE PTR [edx-0x3],al
  410c3f:	neg    BYTE PTR [edx+0x562fd759]
  410c45:	hlt    
  410c46:	xor    ch,BYTE PTR [ebx]
  410c48:	cmp    edi,0xffffffeb
  410c4b:	enterw 0xbcf9,0xe5
  410c50:	add    DWORD PTR [esp+ebx*1],edi
  410c53:	in     eax,0xba
  410c55:	icebp  
  410c56:	sbb    BYTE PTR [ebx],bl
  410c58:	mov    ds:0x8f0ee35f,eax
  410c5d:	adc    al,0x10
  410c5f:	pop    ds
  410c60:	dec    esi
  410c61:	pushf  
  410c62:	add    dh,BYTE PTR [esi+0x23be7609]
  410c68:	popf   
  410c69:	jbe    0x410c7d
  410c6b:	ret    
  410c6c:	and    WORD PTR [esp+eiz*8+0x7e82f00b],di
  410c74:	jle    0x410ca7
  410c76:	call   0x2db9:0x4d9a10c1
  410c7d:	dec    edx
  410c7e:	(bad)  
  410c7f:	adc    al,0xf2
  410c81:	sub    BYTE PTR [eax+0x4c],ch
  410c84:	fcmovnb st,st(2)
  410c86:	add    bl,ch
  410c88:	inc    edi
  410c89:	dec    eax
  410c8a:	shl    BYTE PTR [ebx+edx*8-0x1b],1
  410c8e:	rol    ebp,0xcb
  410c91:	and    dh,0xb1
  410c94:	adc    DWORD PTR [ebp+0x72],ecx
  410c97:	mov    dh,0x36
  410c99:	xor    esi,DWORD PTR [esi+esi*8]
  410c9c:	mov    ah,BYTE PTR [ebp-0x1f2c140d]
  410ca2:	mov    si,di
  410ca5:	and    edx,eax
  410ca7:	and    eax,0xf300461
  410cac:	sbb    dl,dh
  410cae:	scas   al,BYTE PTR es:[edi]
  410caf:	stos   DWORD PTR es:[edi],eax
  410cb0:	mov    dl,0x43
  410cb2:	imul   ebx,DWORD PTR [esi-0x54],0xa4014f8a
  410cb9:	adc    al,0xce
  410cbb:	or     edi,DWORD PTR [eax+0x3b]
  410cbe:	inc    edx
  410cbf:	add    esp,DWORD PTR [eax]
  410cc1:	cdq    
  410cc2:	dec    edi
  410cc3:	xor    BYTE PTR [esi-0x5b],ah
  410cc6:	adc    eax,0xc0a9a973
  410ccb:	pop    eax
  410ccc:	addr16 int 0x65
  410ccf:	push   ebx
  410cd0:	push   ebp
  410cd1:	out    dx,eax
  410cd2:	pop    esp
  410cd3:	jecxz  0x410d42
  410cd5:	inc    edx
  410cd6:	daa    
  410cd7:	into   
  410cd8:	shl    ebp,0xf0
  410cdb:	arpl   WORD PTR [edx+0x78],bp
  410cde:	je     0x410cec
  410ce0:	ins    BYTE PTR es:[edi],dx
  410ce1:	mov    DWORD PTR [ebp+0x2087a266],0x7c3fd877
  410ceb:	mov    dh,bh
  410ced:	and    esi,DWORD PTR [ebp+0x2c]
  410cf0:	xchg   edi,eax
  410cf1:	fidiv  WORD PTR [ecx-0x2b]
  410cf4:	fsubr  st(0),st
  410cf6:	in     eax,dx
  410cf7:	js     0x410c86
  410cf9:	cmp    BYTE PTR [ecx+ebx*2],bl
  410cfc:	cld    
  410cfd:	ss push ds
  410cff:	gs inc esp
  410d01:	cli    
  410d02:	lods   al,BYTE PTR ds:[esi]
  410d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d04:	stos   DWORD PTR es:[edi],eax
  410d05:	jge    0x410d7c
  410d07:	inc    esi
  410d08:	sub    BYTE PTR [esi-0x7e5ee85c],ch
  410d0e:	inc    edx
  410d0f:	inc    esp
  410d10:	stos   BYTE PTR es:[edi],al
  410d11:	ds xchg esp,eax
  410d13:	int3   
  410d14:	mov    esp,0x3f104128
  410d19:	and    DWORD PTR [edx-0x42af137f],edx
  410d1f:	ja     0x410d17
  410d21:	adc    al,0x75
  410d23:	pop    ecx
  410d24:	dec    esp
  410d25:	jnp    0x410d11
  410d27:	pop    ds
  410d28:	cli    
  410d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d2a:	imul   ebx,DWORD PTR [ebx],0x84b219b7
  410d30:	xor    bl,dh
  410d32:	cmp    ebx,DWORD PTR [eax-0x7b]
  410d35:	sbb    al,0x90
  410d37:	mov    WORD PTR [edx-0x181da76b],gs
  410d3d:	fimul  DWORD PTR ds:0x303243ff
  410d43:	push   ecx
  410d44:	(bad)
  410d47:	jl     0x410d15
  410d49:	inc    ebx
  410d4a:	inc    eax
  410d4b:	rol    DWORD PTR [eax],cl
  410d4d:	fwait
  410d4e:	jmp    0x58ff:0x93d4c41e
  410d55:	xchg   DWORD PTR [esi+ebx*1-0x2152f2e],esi
  410d5c:	add    BYTE PTR [edx],0xa1
  410d5f:	ret    
  410d60:	cs push edx
  410d62:	and    al,0x1a
  410d64:	cmc    
  410d65:	inc    eax
  410d66:	in     al,dx
  410d67:	jmp    0x410d23
  410d69:	test   al,bl
  410d6b:	nop
  410d6c:	hlt    
  410d6d:	xor    al,0x77
  410d6f:	bound  esi,QWORD PTR [eax-0x33]
  410d72:	jb     0x410d53
  410d74:	xchg   esi,eax
  410d75:	jne    0x410dbd
  410d77:	dec    edi
  410d78:	jl     0x410d49
  410d7a:	adc    dh,BYTE PTR [edi-0x3d]
  410d7d:	popa   
  410d7e:	xchg   esi,eax
  410d7f:	pop    ss
  410d80:	data16 (bad) 
  410d82:	clc    
  410d83:	or     BYTE PTR [ecx+0x62],0x14
  410d87:	arpl   WORD PTR [eax-0x57e66fb1],sp
  410d8d:	pop    ebp
  410d8e:	stos   BYTE PTR es:[edi],al
  410d8f:	sar    BYTE PTR [ecx-0x24],cl
  410d92:	cmp    al,0x1e
  410d94:	or     ebx,ebx
  410d96:	stos   DWORD PTR es:[edi],eax
  410d97:	mov    ah,0xbe
  410d99:	mov    ah,0xb4
  410d9b:	fdiv   DWORD PTR [edi+0x72]
  410d9e:	mov    cl,0x69
  410da0:	jne    0x410d49
  410da2:	push   ds
  410da3:	call   0xf088:0x3a2b0eac
  410daa:	or     BYTE PTR [eax],cl
  410dac:	or     al,0xd9
  410dae:	xchg   edi,eax
  410daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db0:	stc    
  410db1:	dec    ebp
  410db2:	xchg   edi,eax
  410db3:	out    0xa1,eax
  410db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410db6:	ror    DWORD PTR ds:0x7f226065,0x6d
  410dbd:	stc    
  410dbe:	enter  0x218e,0x34
  410dc2:	jp     0x410df8
  410dc4:	cli    
  410dc5:	add    eax,0x6fe56879
  410dca:	xchg   ebp,eax
  410dcb:	es aad 0x22
  410dce:	and    eax,0x60f3cf8
  410dd3:	mov    ds:0xc87c54bb,eax
  410dd8:	add    ebx,DWORD PTR [ecx+eiz*8-0x45]
  410ddc:	add    ah,bl
  410dde:	xchg   edx,eax
  410ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410de0:	imul   ecx,DWORD PTR [ebx+0x7f0b2d1c],0x4e
  410de7:	icebp  
  410de8:	in     eax,dx
  410de9:	or     DWORD PTR [esi+eiz*1],eax
  410dec:	mov    bl,0x3
  410dee:	icebp  
  410def:	and    DWORD PTR [esi],edi
  410df1:	jmp    0xaa04:0xd73987a8
  410df8:	add    DWORD PTR [ebx+0x70],ecx
  410dfb:	and    eax,0x42bb8551
  410e00:	ds pop eax
  410e02:	mov    esi,0x2bd7477f
  410e07:	dec    ebx
  410e08:	je     0x410e55
  410e0a:	shl    DWORD PTR [esi],cl
  410e0c:	mov    cl,0xa9
  410e0e:	sbb    eax,0xd1648fb8
  410e13:	in     al,dx
  410e14:	mov    ah,0x27
  410e16:	xchg   ebx,eax
  410e17:	push   edx
  410e18:	inc    DWORD PTR [edx]
  410e1a:	mov    ebp,0xc3fc1a6f
  410e1f:	je     0x410e1d
  410e21:	mov    WORD PTR [eax+0xd],?
  410e24:	shl    BYTE PTR [eax-0x1f],1
  410e27:	aaa    
  410e28:	mov    ebx,0xfd9170eb
  410e2d:	lds    ebp,FWORD PTR ds:0xffe70983
  410e33:	repnz aad 0x69
  410e36:	mov    eax,ds:0x84acfd57
  410e3b:	and    ecx,esp
  410e3d:	lds    ebp,FWORD PTR [ecx+0x1c]
  410e40:	xor    BYTE PTR [ecx+esi*2-0xdf6cf30],cl
  410e47:	dec    ebp
  410e48:	push   ss
  410e49:	lahf   
  410e4a:	rol    eax,1
  410e4c:	and    DWORD PTR [eax+0x6f],eax
  410e4f:	(bad)  
  410e50:	popf   
  410e51:	sbb    DWORD PTR [ebp-0x5],edi
  410e54:	push   ss
  410e55:	out    0xfb,al
  410e57:	mov    bl,0x8
  410e59:	inc    eax
  410e5a:	and    al,0x87
  410e5c:	inc    edx
  410e5d:	push   es
  410e5e:	adc    ecx,esp
  410e60:	test   BYTE PTR [eax],al
  410e62:	lods   eax,DWORD PTR ds:[esi]
  410e63:	mov    bl,0xe7
  410e65:	(bad)  
  410e66:	ror    BYTE PTR [ecx],cl
  410e68:	scas   eax,DWORD PTR es:[edi]
  410e69:	idiv   al
  410e6b:	retf   0x8685
  410e6e:	in     eax,dx
  410e6f:	dec    esp
  410e70:	call   0x77823729
  410e75:	jno    0x410e1d
  410e77:	outs   dx,DWORD PTR ds:[esi]
  410e78:	inc    ecx
  410e79:	mov    ebx,0xd4897d5d
  410e7e:	mov    edx,0x247dea16
  410e83:	fnstcw WORD PTR [edx+eiz*2+0x4d9687a0]
  410e8a:	push   ds
  410e8b:	aad    0x43
  410e8d:	clc    
  410e8e:	add    cl,BYTE PTR [ebp-0x5ffdb1fe]
  410e94:	inc    edi
  410e95:	(bad)  
  410e96:	cdq    
  410e97:	push   0x94c735b9
  410e9c:	jg     0x410e78
  410e9e:	ficom  DWORD PTR [edx-0x5e]
  410ea1:	mov    ebp,0x80a0d04d
  410ea7:	inc    ebp
  410ea8:	push   edx
  410ea9:	stos   BYTE PTR es:[edi],al
  410eaa:	add    esi,DWORD PTR [esi]
  410eac:	fisubr WORD PTR [eax-0x596ed9c0]
  410eb2:	mov    edx,0x6df27008
  410eb7:	mov    bh,0x1
  410eb9:	mov    edx,0xfd264d5a
  410ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ebf:	xchg   edi,eax
  410ec0:	ja     0x410eab
  410ec2:	adc    esi,DWORD PTR [ecx]
  410ec4:	shl    BYTE PTR [ecx-0x6316f042],1
  410eca:	add    ebp,ecx
  410ecc:	ret    
  410ecd:	loope  0x410e8f
  410ecf:	jge    0x410efb
  410ed1:	and    eax,0x76d99b84
  410ed6:	push   edx
  410ed7:	add    dl,BYTE PTR [ebx]
  410ed9:	sub    edi,ebx
  410edb:	in     al,dx
  410edc:	mov    esp,0xcbff289f
  410ee1:	test   al,0x84
  410ee3:	rol    BYTE PTR [eax+0x5a],0x74
  410ee7:	scas   al,BYTE PTR es:[edi]
  410ee8:	pushf  
  410ee9:	iret   
  410eea:	repnz dec ebp
  410eec:	jbe    0x410f49
  410eee:	cmp    ah,BYTE PTR [edx-0x25]
  410ef1:	retf   0x617
  410ef4:	xchg   esi,eax
  410ef5:	jns    0x410e83
  410ef7:	sbb    BYTE PTR [edx+0x4],cl
  410efa:	jmp    0xf05c:0x5db7a621
  410f01:	dec    edx
  410f02:	fwait
  410f03:	(bad)  
  410f04:	or     DWORD PTR [edx-0x28611541],ebx
  410f0a:	push   ecx
  410f0b:	das    
  410f0c:	in     al,0x6
  410f0e:	ss jg  0x410ee9
  410f11:	dec    ecx
  410f12:	out    dx,eax
  410f13:	inc    eax
  410f14:	hlt    
  410f15:	sub    al,0x5d
  410f17:	inc    ebx
  410f18:	call   FWORD PTR [esi-0x612682ae]
  410f1e:	(bad)  
  410f1f:	push   esp
  410f20:	push   DWORD PTR ds:0x5e567f8a
  410f26:	int    0x71
  410f28:	ret    0xbcaa
  410f2b:	mov    bh,0xc9
  410f2d:	jp     0x410f40
  410f2f:	clc    
  410f30:	out    0x24,al
  410f32:	mov    al,ds:0x8c2298e1
  410f37:	mov    esp,0x42959f18
  410f3c:	into   
  410f3d:	push   cs
  410f3e:	xor    eax,0x9ed1163a
  410f43:	fild   WORD PTR [esi-0x3d]
  410f46:	cmp    ch,ch
  410f48:	test   BYTE PTR [edx+0x7664171e],0x87
  410f4f:	mov    ecx,0xcc9e4776
  410f54:	repz mov edx,0x15dab43e
  410f5a:	ror    BYTE PTR [edx-0x26417c31],cl
  410f60:	cmp    eax,0xa64f6758
  410f65:	mov    eax,ds:0x5f313fb3
  410f6a:	jmp    0x410fb8
  410f6c:	jno    0x410f38
  410f6e:	leave  
  410f6f:	fwait
  410f70:	mov    esi,esp
  410f72:	pop    ebp
  410f73:	dec    ecx
  410f74:	lods   eax,DWORD PTR ds:[esi]
  410f75:	push   0x50b658cd
  410f7a:	out    0xd0,al
  410f7c:	cs stc 
  410f7e:	stos   DWORD PTR es:[edi],eax
  410f7f:	cli    
  410f80:	push   esi
  410f81:	dec    ecx
  410f82:	dec    esi
  410f83:	xor    edi,0x6c46bb78
  410f89:	jb     0x410fd6
  410f8b:	fidiv  DWORD PTR [ebx+0x56]
  410f8e:	das    
  410f8f:	jo     0x410f20
  410f91:	sub    DWORD PTR [ebx+0x449e6c40],edx
  410f97:	inc    esi
  410f98:	inc    ebp
  410f99:	leave  
  410f9a:	sbb    eax,0x5daa8851
  410f9f:	xlat   BYTE PTR ds:[ebx]
  410fa0:	xor    ah,BYTE PTR [ebx+0x65913d45]
  410fa6:	sub    BYTE PTR [ebx-0x14719182],cl
  410fac:	xor    esp,DWORD PTR [esi+0x65030917]
  410fb2:	inc    ebp
  410fb3:	out    dx,eax
  410fb4:	sub    ebx,edx
  410fb6:	lods   eax,DWORD PTR ds:[esi]
  410fb7:	inc    ebp
  410fb8:	jnp    0x411039
  410fba:	(bad)  
  410fbb:	lahf   
  410fbc:	pop    eax
  410fbd:	or     eax,0xeade5ba8
  410fc2:	inc    edi
  410fc3:	mov    dl,0xed
  410fc5:	sub    ah,ch
  410fc7:	mov    edi,0x12b62f1a
  410fcc:	dec    ebx
  410fcd:	adc    al,0xd3
  410fcf:	jbe    0x410fb4
  410fd1:	jns    0x41103f
  410fd3:	repnz pop ebx
  410fd5:	in     al,0xb6
  410fd7:	mov    al,0x3a
  410fd9:	and    ch,BYTE PTR [edx-0x1]
  410fdc:	and    BYTE PTR [ebx-0x1919480],ch
  410fe2:	add    eax,0x3e31e3d9
  410fe7:	xchg   ebp,eax
  410fe8:	dec    esi
  410fe9:	ss push edi
  410feb:	fsubr  DWORD PTR [ecx+0x28637db1]
  410ff1:	fcmove st,st(2)
  410ff3:	sub    BYTE PTR [ebx-0x4b],bl
  410ff6:	jecxz  0x41103f
  410ff8:	inc    ebp
  410ff9:	mov    dh,dh
  410ffb:	test   al,0x5b
  410ffd:	(bad)  
  410ffe:	arpl   WORD PTR ds:[edx+0x7a],bx
  411002:	jmp    0x97e4d20a
  411007:	cmp    DWORD PTR [esi+0x6a],0x77
  41100b:	into   
  41100c:	jle    0x411026
  41100e:	iret   
  41100f:	dec    DWORD PTR [ebx-0x32]
  411012:	pushf  
  411013:	leave  
  411014:	xor    DWORD PTR [edi+0x7b08051c],0xedd25474
  41101e:	fstp   QWORD PTR [ebp+edx*8+0x3d8330d1]
  411025:	lock mov ds:0x91c673e8,al
  41102b:	fucomp st(4)
  41102d:	jae    0x411083
  41102f:	rcr    DWORD PTR [ebp+0x5],1
  411032:	xor    DWORD PTR [eax],edi
  411034:	mov    DWORD PTR [ecx+0x1e96906],ecx
  41103a:	push   eax
  41103b:	aas    
  41103c:	add    BYTE PTR [edx],al
  41103e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41103f:	call   0x205f:0xfd266e33
  411046:	rol    edi,1
  411048:	sahf   
  411049:	sbb    eax,ecx
  41104b:	das    
  41104c:	call   0x1edc:0x6f3ce4b
  411053:	lds    edi,FWORD PTR [eax]
  411055:	out    0x6a,eax
  411057:	jne    0x410ff1
  411059:	dec    esi
  41105a:	mov    BYTE PTR [edx-0x55802418],dh
  411060:	das    
  411061:	push   ecx
  411062:	sbb    esi,DWORD PTR [ebx+0x41]
  411065:	popa   
  411066:	out    dx,al
  411067:	xor    BYTE PTR [esi-0x25],al
  41106a:	push   0x177169cc
  41106f:	repz out 0x5c,al
  411072:	push   esi
  411073:	push   esi
  411074:	lahf   
  411075:	mov    cl,0x81
  411077:	and    dh,BYTE PTR [edx+0x6e]
  41107a:	fcmovb st,st(0)
  41107c:	loop   0x41101c
  41107e:	test   al,0x56
  411080:	fidiv  DWORD PTR [ecx+0x7f37b5ae]
  411086:	jp     0x411038
  411088:	pop    ebx
  411089:	cmp    al,BYTE PTR [edi-0x55779b94]
  41108f:	cdq    
  411090:	shr    DWORD PTR [edi],cl
  411092:	fadd   DWORD PTR [ebp-0x6b]
  411095:	in     eax,0x1b
  411097:	push   0xb521af6b
  41109c:	jo     0x411046
  41109e:	dec    esi
  41109f:	pop    edi
  4110a0:	jnp    0x41105c
  4110a2:	jmp    0x2afc3f94
  4110a7:	or     BYTE PTR [esi+eax*2],bl
  4110aa:	push   0x1e
  4110ac:	and    DWORD PTR [ebp-0x56],ecx
  4110af:	sbb    dh,BYTE PTR [ecx]
  4110b1:	cli    
  4110b2:	mov    ds:0x4ec4c462,eax
  4110b7:	(bad)  [edx+0x7b]
  4110ba:	test   al,0x39
  4110bc:	arpl   WORD PTR [ebp-0x61],si
  4110bf:	dec    edx
  4110c0:	push   ebp
  4110c1:	mov    cl,0xe6
  4110c3:	cs push ds
  4110c5:	push   edi
  4110c6:	jp     0x41106b
  4110c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110c9:	stos   BYTE PTR es:[edi],al
  4110ca:	jmp    0x5b4b656f
  4110cf:	outs   dx,DWORD PTR ds:[esi]
  4110d0:	icebp  
  4110d1:	out    dx,eax
  4110d2:	out    dx,eax
  4110d3:	cli    
  4110d4:	mov    ch,BYTE PTR [edx+0x2a5dfb76]
  4110da:	int    0xa8
  4110dc:	pop    ds
  4110dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110de:	cdq    
  4110df:	push   0x9a3e023c
  4110e4:	gs ret 
  4110e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110e7:	cwde   
  4110e8:	lods   al,BYTE PTR ds:[esi]
  4110e9:	xchg   esi,eax
  4110ea:	outs   dx,BYTE PTR ds:[esi]
  4110eb:	mov    ebx,0x18d3b257
  4110f0:	enter  0xa1b0,0xaa
  4110f4:	inc    ebx
  4110f5:	pop    ds
  4110f6:	or     DWORD PTR [esi+0x17f9c8a8],esp
  4110fc:	loop   0x411146
  4110fe:	and    esp,DWORD PTR [ebp-0x6]
  411101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411102:	and    eax,0x68ba1067
  411107:	push   esp
  411108:	out    dx,eax
  411109:	out    0x5e,eax
  41110b:	mov    cl,0x86
  41110d:	and    dh,ah
  41110f:	mov    dh,BYTE PTR [esi+0x22]
  411112:	xchg   ecx,eax
  411113:	inc    edx
  411114:	jp     0x411105
  411116:	jmp    0x411107
  411118:	and    al,0x8e
  41111a:	inc    esi
  41111b:	inc    ebp
  41111c:	cmp    esi,ebp
  41111e:	jle    0x411135
  411120:	(bad)  
  411121:	and    edx,ebp
  411123:	jo     0x41110e
  411125:	arpl   bp,ax
  411127:	push   ecx
  411128:	cmc    
  411129:	adc    al,0x52
  41112b:	frstor [ebp-0x2d]
  41112e:	mov    ah,0x5f
  411130:	cmc    
  411131:	mov    eax,ds:0x2c637fe2
  411136:	xchg   esi,eax
  411137:	imul   ecx,DWORD PTR [esi+eax*2+0x3512342d]
  41113f:	cld    
  411140:	push   ebp
  411141:	and    ch,ch
  411143:	dec    ebp
  411144:	xor    DWORD PTR [edx-0x7f1aa4f4],ecx
  41114a:	repz mov ax,ds:0xe6e66872
  411151:	fprem  
  411153:	xchg   ecx,eax
  411154:	jl     0x4111b0
  411156:	xor    dl,al
  411158:	pushf  
  411159:	ins    BYTE PTR es:[edi],dx
  41115a:	cs cdq 
  41115c:	push   esp
  41115d:	jmp    0x411138
  41115f:	stos   DWORD PTR es:[edi],eax
  411160:	fcom   DWORD PTR [edi]
  411163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411164:	sub    al,0xde
  411166:	mov    ds:0xaa600ec,eax
  41116b:	inc    ebp
  41116c:	retf   0x47f4
  41116f:	adc    DWORD PTR [edx],edx
  411171:	inc    ebp
  411172:	sbb    eax,0xcfb1f475
  411177:	jne    0x4111b0
  411179:	sbb    bl,bl
  41117b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117c:	and    esp,DWORD PTR [eax]
  41117e:	pop    esp
  41117f:	and    eax,0xe215b2ae
  411184:	pop    ds
  411185:	mov    edx,0x9034629b
  41118a:	repz pop ecx
  41118c:	daa    
  41118d:	adc    BYTE PTR [edi],al
  41118f:	adc    DWORD PTR [ebp-0x8],esp
  411192:	cdq    
  411193:	sub    ch,cl
  411195:	xchg   edi,eax
  411196:	das    
  411197:	xchg   esi,eax
  411198:	xchg   BYTE PTR [ebx+0x7a],ch
  41119b:	inc    edi
  41119c:	sub    cl,BYTE PTR [bp+0x20]
  4111a0:	ud2    
  4111a2:	push   ebp
  4111a3:	add    ebx,DWORD PTR [eax-0x19]
  4111a6:	xchg   esp,eax
  4111a7:	push   es
  4111a8:	pop    eax
  4111a9:	pop    edx
  4111aa:	je     0x411224
  4111ac:	sub    al,BYTE PTR [edx]
  4111ae:	jmp    0x1f0b:0x375582cd
  4111b5:	sbb    ebx,DWORD PTR gs:[ebp-0x2a]
  4111b9:	push   esp
  4111ba:	dec    ebx
  4111bb:	mov    BYTE PTR [edx-0x587682d0],ah
  4111c1:	daa    
  4111c2:	push   ds
  4111c3:	inc    ecx
  4111c4:	and    BYTE PTR [ebx+edx*1-0x77dd4553],ch
  4111cb:	sbb    BYTE PTR [edi+ebx*2+0x14a5cc15],cl
  4111d2:	mul    DWORD PTR [esi-0x71]
  4111d5:	xor    al,0x1d
  4111d7:	cmp    eax,0x80d013d9
  4111dc:	pop    ds
  4111dd:	lods   eax,DWORD PTR ds:[esi]
  4111de:	out    0x62,al
  4111e0:	out    0x29,eax
  4111e2:	adc    DWORD PTR [eax+0x5],edi
  4111e5:	das    
  4111e6:	xchg   BYTE PTR [ecx],bh
  4111e8:	xor    edi,DWORD PTR [edx-0x310e2023]
  4111ee:	sub    BYTE PTR [ebx+0x59],bh
  4111f1:	mov    ds:0xaf01726d,eax
  4111f6:	adc    al,0xdc
  4111f8:	push   ebp
  4111f9:	fstp   QWORD PTR [eax+ebx*4-0x6c]
  4111fd:	mov    al,0x7d
  4111ff:	lock xor BYTE PTR [ebx],al
  411202:	jo     0x411247
  411204:	out    0x58,eax
  411206:	mov    DWORD PTR [ebx+0x3408a166],edx
  41120c:	xchg   ebp,eax
  41120d:	stc    
  41120e:	push   ebx
  41120f:	sbb    bh,bl
  411211:	cmp    DWORD PTR [edx],edi
  411213:	dec    esp
  411214:	mov    cl,0xfc
  411216:	mov    bh,0xae
  411218:	sub    al,0xe1
  41121a:	ror    ebx,0x90
  41121d:	out    0x27,al
  41121f:	fild   DWORD PTR [edx+0x3b]
  411222:	xor    DWORD PTR [esi+ebx*4+0x9147ef0],ebx
  411229:	jmp    0x1293:0x2f9ab19a
  411230:	lods   eax,DWORD PTR ds:[esi]
  411231:	adc    ebp,ebx
  411233:	das    
  411234:	leave  
  411235:	mov    dh,0x27
  411237:	clc    
  411238:	call   0x4b640a14
  41123d:	xlat   BYTE PTR ds:[ebx]
  41123e:	cmp    eax,DWORD PTR [ebx-0x6c]
  411241:	pushf  
  411242:	enter  0xf016,0x24
  411246:	sub    cl,BYTE PTR [edx+0x95d19b2]
  41124c:	inc    ebp
  41124d:	mov    bl,0x47
  41124f:	or     DWORD PTR [edx],edx
  411251:	test   ebx,ebx
  411253:	mov    ebp,0x1bea670b
  411258:	mov    dl,BYTE PTR [edx-0x45]
  41125b:	dec    ecx
  41125c:	adc    cl,BYTE PTR [esi+0x41]
  41125f:	enter  0x23e5,0xf3
  411263:	jns    0x411201
  411265:	mov    DWORD PTR [edi],ecx
  411267:	mul    DWORD PTR ds:0xae978673
  41126d:	push   ds
  41126e:	clc    
  41126f:	out    dx,eax
  411270:	out    dx,al
  411271:	(bad)  
  411272:	mov    ds:0x79d572ab,eax
  411277:	cmp    ebx,edx
  411279:	gs mov cl,0x39
  41127c:	scas   eax,DWORD PTR es:[edi]
  41127d:	fbld   TBYTE PTR [ebp-0x19]
  411280:	ret    0x100a
  411283:	stos   BYTE PTR es:[edi],al
  411284:	int3   
  411285:	retf   
  411286:	shl    esi,cl
  411288:	and    al,0xb4
  41128a:	and    edi,edx
  41128c:	xor    BYTE PTR [ecx],bl
  41128e:	fstp   TBYTE PTR [ecx+0x48690061]
  411294:	mov    dl,0x3b
  411296:	pop    edi
  411297:	and    bh,ch
  411299:	mov    cl,0x8d
  41129b:	cmp    eax,DWORD PTR [esi+0x2846d524]
  4112a1:	push   edx
  4112a2:	(bad)  [ebx+ebx*2+0x7e13bb16]
  4112a9:	jmp    0x6f42:0xa511fc1e
  4112b0:	stc    
  4112b1:	ret    0xd07
  4112b4:	push   ebx
  4112b5:	test   DWORD PTR [ecx+0x7e6c57c7],ebx
  4112bb:	adc    esi,ebp
  4112bd:	data16 mov fs,WORD PTR [ebx]
  4112c0:	sub    BYTE PTR [eax-0x1af2ffb3],ch
  4112c6:	outs   dx,DWORD PTR ds:[esi]
  4112c7:	mov    bl,0x2
  4112c9:	push   0xbab218dc
  4112ce:	sar    BYTE PTR [esi+0x2f556c6a],1
  4112d4:	jl     0x411348
  4112d6:	outs   dx,BYTE PTR ds:[esi]
  4112d7:	stc    
  4112d8:	out    0x5,al
  4112da:	dec    edi
  4112db:	out    0x6,al
  4112dd:	hlt    
  4112de:	pop    edi
  4112df:	jo     0x41130b
  4112e1:	or     dh,BYTE PTR [eax]
  4112e3:	xlat   BYTE PTR ds:[ebx]
  4112e4:	push   ss
  4112e5:	inc    edx
  4112e6:	ins    BYTE PTR es:[edi],dx
  4112e7:	jmp    0xa4b0e348
  4112ec:	loopne 0x4112af
  4112ee:	xor    ebp,DWORD PTR ds:0x54bb0489
  4112f4:	cwde   
  4112f5:	test   al,0xe5
  4112f7:	cmp    dl,ah
  4112f9:	push   0x2e1f0dd0
  4112fe:	dec    edx
  4112ff:	(bad)  
  411301:	test   eax,0x3b3f336b
  411306:	mov    esp,0xb78ba611
  41130b:	mov    dh,0x69
  41130d:	test   BYTE PTR [esi-0x1a784743],dh
  411313:	and    esi,DWORD PTR [ebx]
  411315:	mov    ecx,0x1125d9d6
  41131a:	addr16 loope 0x411342
  41131d:	aas    
  41131e:	fdivr  DWORD PTR [edi]
  411320:	pop    eax
  411321:	pop    eax
  411322:	loopne 0x411377
  411324:	ins    BYTE PTR es:[edi],dx
  411325:	in     eax,0x38
  411327:	rol    DWORD PTR [eax-0x71dca3b0],1
  41132d:	bound  ebp,QWORD PTR [edx]
  41132f:	ss fldlg2 
  411332:	jp     0x411361
  411334:	xchg   BYTE PTR [ebp+0x18],dl
  411337:	stos   DWORD PTR es:[edi],eax
  411338:	xchg   BYTE PTR [ebx],dl
  41133a:	popf   
  41133b:	add    eax,0x3f5c36c5
  411340:	mov    dh,0x3
  411342:	push   cs
  411343:	jmp    0x411306
  411345:	xchg   DWORD PTR [esi],ecx
  411347:	xchg   esp,eax
  411348:	mov    edi,0x7ae5f57
  41134d:	call   0x672b9e45
  411352:	aam    0x78
  411354:	mov    ?,WORD PTR [ebx]
  411356:	adc    eax,0xeab48c84
  41135b:	or     eax,0xd48230b3
  411360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411361:	fwait
  411362:	dec    ebx
  411363:	sbb    bh,BYTE PTR [ebx*8+0x4fe505b4]
  41136a:	cmp    dl,BYTE PTR [esi-0xd]
  41136d:	pop    esp
  41136e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41136f:	les    ebx,FWORD PTR [ebp-0x47]
  411372:	xor    BYTE PTR [ebx+0x74b90160],dl
  411378:	mov    cl,0xc1
  41137a:	fdivrp st(4),st
  41137c:	sbb    eax,0x364b548e
  411381:	xor    DWORD PTR [ecx+0x21],edx
  411384:	cmp    BYTE PTR [edi],0x6b
  411387:	mov    ebp,DWORD PTR [eax]
  411389:	push   0x4f
  41138b:	push   edi
  41138c:	xchg   esi,eax
  41138d:	xchg   dh,bh
  41138f:	or     al,0x9c
  411391:	xlat   BYTE PTR ds:[ebx]
  411392:	adc    eax,0xbb9f276b
  411397:	xchg   ecx,eax
  411398:	pop    es
  411399:	and    al,0xd4
  41139c:	inc    esp
  41139d:	pop    edi
  41139e:	mov    ah,0xe1
  4113a0:	push   ds
  4113a1:	gs pop ebx
  4113a3:	xor    ebp,esi
  4113a5:	shr    BYTE PTR [eax-0x72fad0f1],0x5b
  4113ac:	inc    ebp
  4113ad:	inc    ecx
  4113ae:	imul   ax,WORD PTR [edi+0x46],0x293b
  4113b4:	(bad)  
  4113b5:	jns    0x4113e2
  4113b7:	sti    
  4113b8:	les    ebx,FWORD PTR [edi+0x58e55a2d]
  4113be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113bf:	sahf   
  4113c0:	jae    0x41135c
  4113c2:	dec    edi
  4113c3:	inc    ebp
  4113c4:	shr    DWORD PTR [edx],1
  4113c6:	test   DWORD PTR [ecx-0x4709ff72],esp
  4113cc:	iret   
  4113cd:	xchg   ecx,eax
  4113ce:	adc    BYTE PTR [eax],dh
  4113d0:	xor    ch,BYTE PTR [ebx-0x2ee75c7b]
  4113d6:	sbb    ebx,edx
  4113d8:	jp     0x411450
  4113da:	pop    ebx
  4113db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113dc:	data16 xchg al,ah
  4113df:	xchg   ecx,eax
  4113e0:	push   ebx
  4113e1:	mov    ebx,0x7371c1c0
  4113e6:	repz and ebp,DWORD PTR [esi]
  4113e9:	push   ebx
  4113ea:	popf   
  4113eb:	neg    esi
  4113ed:	mov    edx,0xa7f38d26
  4113f2:	sbb    BYTE PTR [esi],ch
  4113f4:	sahf   
  4113f5:	aad    0x49
  4113f7:	xor    esi,DWORD PTR [ecx-0x2c]
  4113fa:	jne    0x411457
  4113fc:	out    0xa9,eax
  4113fe:	ficom  DWORD PTR [eax]
  411400:	sti    
  411401:	call   0x683f222
  411406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411407:	pop    DWORD PTR [esi-0x4437f0f6]
  41140d:	ins    BYTE PTR es:[edi],dx
  41140e:	xchg   edi,eax
  41140f:	xchg   ecx,eax
  411410:	fild   DWORD PTR [ecx-0x38]
  411413:	retf   
  411414:	or     DWORD PTR [eax],esp
  411416:	frstor [edi-0x760af3de]
  41141c:	jecxz  0x411422
  41141e:	aaa    
  41141f:	jb     0x4113e9
  411421:	jae    0x4113d9
  411423:	mov    eax,0x46a3a734
  411428:	xchg   ebp,eax
  411429:	push   ecx
  41142a:	add    BYTE PTR [esi-0x4a7c0035],dl
  411430:	cmp    bl,BYTE PTR [ebx-0x71]
  411433:	cmp    eax,0x84b9f2ac
  411438:	mov    cs,WORD PTR [ecx-0x12]
  41143b:	dec    ebp
  41143c:	cmp    esi,0x73ab29f5
  411442:	gs push cs
  411444:	adc    eax,0xd92193ec
  411449:	shr    ch,cl
  41144b:	into   
  41144c:	mov    eax,ds:0x6fdeda1c
  411451:	test   DWORD PTR [ebp-0x72dd28d5],edi
  411457:	pop    ecx
  411458:	jmp    0x41142f
  41145a:	sub    eax,DWORD PTR [esi-0x14]
  41145d:	adc    esi,DWORD PTR [ebx-0x47eb5f00]
  411463:	out    0x60,eax
  411465:	xchg   ebx,eax
  411466:	pop    edi
  411467:	test   al,0x96
  411469:	pop    ebx
  41146a:	test   ebp,esi
  41146c:	loop   0x41148c
  41146e:	pop    ss
  41146f:	fs mov edx,0x3f96c410
  411475:	fdivr  st(1),st
  411477:	mov    ds:0x8519f637,eax
  41147c:	add    esi,ebp
  41147e:	adc    eax,0x888435b0
  411483:	loopne 0x41143f
  411485:	dec    ebx
  411486:	and    eax,0x4fc69d7e
  41148b:	adc    esp,ebp
  41148d:	stos   BYTE PTR es:[edi],al
  41148e:	mov    WORD PTR [edx+0x7d],gs
  411491:	cmp    eax,eax
  411493:	aas    
  411494:	mov    BYTE PTR [edx+0x42354e7],ch
  41149a:	and    eax,0x6ab80fdc
  41149f:	jb     0x4114ea
  4114a1:	mov    dl,0xd8
  4114a3:	push   esp
  4114a4:	or     eax,0x847978b
  4114a9:	sub    ch,bh
  4114ab:	inc    DWORD PTR [ebx]
  4114ad:	repz and eax,0xb8873660
  4114b3:	imul   esp,ecx,0x48
  4114b6:	dec    ebx
  4114b7:	xchg   ebx,eax
  4114b8:	popa   
  4114b9:	(bad)  
  4114ba:	cmc    
  4114bb:	sub    BYTE PTR [edx-0x76],bh
  4114be:	ss in  al,dx
  4114c0:	add    eax,DWORD PTR ds:0x11de37dc
  4114c6:	xlat   BYTE PTR ds:[ebx]
  4114c7:	mov    DWORD PTR [edi],edi
  4114c9:	xor    DWORD PTR [esi+eiz*1],eax
  4114cc:	lods   eax,DWORD PTR ds:[esi]
  4114cd:	xor    BYTE PTR [esi+edi*1+0x1b],bh
  4114d1:	xchg   BYTE PTR [ebp+0x3e],bl
  4114d4:	out    0x43,al
  4114d6:	pushf  
  4114d7:	jae    0x41149c
  4114d9:	or     DWORD PTR [esi+0x3c27b4b7],ebx
  4114df:	aaa    
  4114e0:	mov    edx,0x6567e0f
  4114e5:	call   0x6f0a:0x50d4ee3e
  4114ec:	sub    esp,esi
  4114ee:	inc    eax
  4114ef:	(bad)  
  4114f0:	scas   al,BYTE PTR es:[edi]
  4114f1:	cmp    eax,0xf5d57185
  4114f6:	inc    edx
  4114f7:	inc    ecx
  4114f8:	adc    DWORD PTR [esi],0xab358123
  4114fe:	and    eax,0x1320e1ce
  411503:	cli    
  411504:	stos   DWORD PTR es:[edi],eax
  411505:	push   eax
  411506:	mov    eax,ds:0x57d9ee21
  41150b:	aam    0xf6
  41150d:	pop    ebp
  41150e:	imul   ecx,DWORD PTR [edi],0x27
  411511:	loopne 0x4114cf
  411513:	ja     0x4114f0
  411515:	dec    esi
  411516:	cmp    BYTE PTR [esi],ah
  411518:	outs   dx,DWORD PTR ds:[esi]
  411519:	dec    ebp
  41151a:	jae    0x411501
  41151c:	xor    DWORD PTR [eax+0x6a],edi
  41151f:	leave  
  411520:	xor    edi,edi
  411522:	sbb    al,BYTE PTR [edi-0x1903f1b9]
  411528:	lds    eax,FWORD PTR [ebp+0x33]
  41152b:	test   al,0x67
  41152d:	mov    bl,0x9a
  41152f:	xchg   DWORD PTR [ebp+0x41],esp
  411532:	adc    BYTE PTR [ecx-0x7b],dh
  411535:	mov    ah,0x51
  411537:	inc    esi
  411538:	mov    eax,ss:0x7c522538
  41153e:	dec    esp
  41153f:	push   edi
  411540:	scas   eax,DWORD PTR es:[edi]
  411541:	and    eax,0x7c4db387
  411546:	out    dx,al
  411547:	sahf   
  411548:	iret   
  411549:	call   DWORD PTR [ebx+0x735dfe2]
  41154f:	test   DWORD PTR [esi+ebx*8],ebx
  411552:	sbb    eax,DWORD PTR [edi+0x11fb756d]
  411558:	dec    esp
  411559:	push   ebx
  41155a:	fcmovu st,st(5)
  41155c:	arpl   WORD PTR [ecx-0x730a701e],cx
  411562:	mov    eax,eax
  411564:	sbb    edi,edi
  411566:	mov    bh,0xd7
  411568:	fisub  WORD PTR [ebx+esi*2-0x7c]
  41156c:	hlt    
  41156d:	dec    DWORD PTR [ebx]
  41156f:	inc    edx
  411570:	push   0x53
  411572:	mov    ch,0x51
  411574:	out    dx,al
  411575:	mov    ebx,0x41e789d2
  41157b:	les    ebx,FWORD PTR gs:[eax-0x70067f81]
  411582:	mov    esp,0xae1538ac
  411587:	sub    dh,dh
  411589:	ret    
  41158a:	rol    BYTE PTR [edi],cl
  41158c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158d:	dec    eax
  41158e:	pop    es
  41158f:	addr16 and al,0xec
  411593:	dec    edi
  411594:	stc    
  411595:	mov    cl,0x6c
  411597:	cmp    ch,BYTE PTR [edx-0x4af754ad]
  41159d:	add    ebx,ebx
  41159f:	jmp    0xb4b51d20
  4115a4:	mov    ebp,0x87e3338f
  4115a9:	and    eax,0x629bbece
  4115ae:	shl    ebx,0xec
  4115b1:	pop    es
  4115b2:	add    DWORD PTR [ecx],esp
  4115b4:	outs   dx,DWORD PTR ds:[esi]
  4115b5:	inc    edi
  4115b6:	out    0x26,eax
  4115b8:	retf   
  4115b9:	enter  0xc505,0x20
  4115bd:	add    al,0x24
  4115bf:	mov    DWORD PTR [ebp+0x67],edi
  4115c2:	aam    0x98
  4115c4:	ror    BYTE PTR [ecx+0x50],1
  4115c7:	(bad)
  4115ca:	es dec ecx
  4115cc:	popa   
  4115cd:	mov    ecx,0x1f383ebf
  4115d2:	xchg   edx,eax
  4115d3:	call   0xde9227f5
  4115d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115d9:	inc    edi
  4115da:	fsub   DWORD PTR fs:[esi+0x77]
  4115de:	fwait
  4115df:	inc    ecx
  4115e0:	ja     0x411595
  4115e2:	imul   esp,DWORD PTR [ecx],0xe89aca00
  4115e8:	mov    eax,0xe83ca259
  4115ed:	daa    
  4115ee:	jb     0x4115c4
  4115f0:	jmp    0x3daa:0x8591ad32
  4115f7:	ret    
  4115f8:	or     ch,BYTE PTR [edi-0x5b79724f]
  4115fe:	repz ret 
  411600:	cmp    BYTE PTR [edx+0x18cd55e1],0x9d
  411607:	push   eax
  411608:	loop   0x411670
  41160a:	mov    ebp,0x301fb58f
  41160f:	xchg   ebp,eax
  411610:	lea    esi,[edx-0x6a735100]
  411616:	mov    ch,BYTE PTR ds:0x222e2086
  41161c:	jne    0x411613
  41161e:	adc    BYTE PTR [eax-0x20360b90],dh
  411624:	hlt    
  411625:	cmp    DWORD PTR [eax],ebp
  411627:	(bad)  
  411628:	and    BYTE PTR [ecx],al
  41162a:	std    
  41162b:	enter  0xea31,0xa3
  41162f:	cmp    bl,bh
  411631:	retf   
  411632:	stos   DWORD PTR es:[edi],eax
  411633:	mov    ds,WORD PTR [eax+0x493223d]
  411639:	jle    0x4115f4
  41163b:	xor    al,0x73
  41163d:	stos   BYTE PTR es:[edi],al
  41163e:	push   0x14
  411640:	repnz lods al,BYTE PTR ds:[esi]
  411642:	mov    al,BYTE PTR [edx]
  411644:	pop    es
  411645:	mov    eax,ds:0xe540d167
  41164a:	mov    edx,0xf122d328
  41164f:	adc    ah,BYTE PTR [edx-0x4d8a8e36]
  411655:	call   0xae7bb1e
  41165a:	jmp    0x3354c3e2
  41165f:	sub    edi,DWORD PTR [edx]
  411661:	into   
  411662:	int3   
  411663:	sub    BYTE PTR [ebp+0x48],ch
  411666:	stos   DWORD PTR es:[edi],eax
  411667:	aaa    
  411668:	ret    
  411669:	fs push cs
  41166b:	adc    BYTE PTR [esi-0xd37699c],ah
  411671:	sahf   
  411672:	jp     0x4116da
  411674:	sahf   
  411675:	aad    0x9e
  411677:	pop    eax
  411678:	int    0x14
  41167a:	xchg   esi,eax
  41167b:	data16 jae 0x4116e9
  41167e:	pop    edi
  41167f:	fnstcw WORD PTR [ebp-0x66]
  411682:	or     BYTE PTR [eax-0x1fd85acc],bh
  411688:	pop    esp
  411689:	sbb    al,0xee
  41168b:	(bad)  
  41168c:	mov    ah,0x46
  41168e:	das    
  41168f:	(bad)  
  411690:	pop    ecx
  411691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411692:	scas   al,BYTE PTR es:[edi]
  411693:	loop   0x411617
  411695:	mov    WORD PTR [edx+0x435fcb07],?
  41169b:	pop    ds
  41169c:	sub    eax,0x61c6b791
  4116a1:	mov    cl,0x92
  4116a3:	mov    eax,ds:0xb8a2edfa
  4116a8:	cmp    BYTE PTR [ebx+0x74],al
  4116ab:	add    eax,DWORD PTR [ebx-0x15a1e66b]
  4116b1:	pushf  
  4116b2:	pop    ecx
  4116b3:	pop    ebx
  4116b4:	stc    
  4116b5:	pushf  
  4116b6:	mov    al,0xf7
  4116b8:	les    esi,FWORD PTR [eax-0x2c]
  4116bb:	sbb    al,0x45
  4116bd:	cmp    ebp,DWORD PTR ds:[ebp-0x60b26b11]
  4116c4:	shl    DWORD PTR [ebx],0xed
  4116c7:	je     0x411667
  4116c9:	xor    DWORD PTR [ebx+0x645c732c],ecx
  4116cf:	lea    ebx,[ebx+eax*8+0x1e8e0f1e]
  4116d6:	outs   dx,DWORD PTR ds:[esi]
  4116d7:	stc    
  4116d8:	inc    edx
  4116d9:	jnp    0x41165c
  4116db:	push   ds
  4116dc:	das    
  4116dd:	(bad)  
  4116de:	sub    DWORD PTR [edi+0x49],edi
  4116e1:	jb     0x411731
  4116e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e4:	dec    esi
  4116e5:	push   edi
  4116e6:	push   edi
  4116e7:	(bad)  
  4116e8:	fisub  WORD PTR [ecx+0x27]
  4116eb:	pop    esi
  4116ec:	pusha  
  4116ed:	test   BYTE PTR [ebx+eiz*1-0xd],al
  4116f1:	nop
  4116f2:	xchg   ebx,eax
  4116f3:	or     bl,BYTE PTR [edx]
  4116f5:	cmp    edx,esi
  4116f7:	in     al,dx
  4116f8:	push   ds
  4116f9:	mov    ch,0x9e
  4116fb:	mov    dh,0x1c
  4116fd:	xchg   esp,eax
  4116fe:	jb     0x411689
  411700:	pop    eax
  411701:	sbb    edx,DWORD PTR [ebp+0x4b4615fe]
  411707:	clc    
  411708:	mov    eax,ds:0x6e2db675
  41170d:	pop    es
  41170e:	ins    BYTE PTR es:[edi],dx
  41170f:	inc    edi
  411710:	lods   eax,DWORD PTR ds:[esi]
  411711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411712:	jmp    0x3c09:0xbad8e43a
  411719:	xor    dh,ch
  41171b:	cs jno 0x411749
  41171e:	mov    bh,0x30
  411720:	call   0xcd360f53
  411725:	xchg   edi,eax
  411726:	dec    ecx
  411727:	push   ecx
  411728:	adc    edx,eax
  41172a:	push   esp
  41172b:	push   0xffffffe8
  41172d:	hlt    
  41172e:	arpl   WORD PTR [ecx],sp
  411730:	or     al,BYTE PTR [eax+0x32bb902d]
  411736:	scas   eax,DWORD PTR es:[edi]
  411737:	jecxz  0x41175a
  411739:	inc    esi
  41173a:	jecxz  0x4117a7
  41173c:	cmp    eax,0x741f9a17
  411741:	loop   0x4116f2
  411743:	push   eax
  411744:	in     eax,dx
  411745:	and    dh,BYTE PTR fs:[ebx]
  411748:	rcl    esi,0x91
  41174b:	dec    ebx
  41174c:	xchg   edx,eax
  41174d:	jecxz  0x411784
  41174f:	test   eax,0x95b9129b
  411754:	shl    ch,0xd2
  411757:	(bad)  
  411758:	cli    
  411759:	jo     0x41172b
  41175b:	cmp    ebx,esp
  41175d:	jge    0x411732
  41175f:	mov    ds:0x623fa44b,al
  411764:	inc    ebp
  411765:	dec    ebp
  411766:	push   ebx
  411767:	(bad)  
  411768:	shl    BYTE PTR [eax+0x3413a9b4],0x3c
  41176f:	mov    dh,0x6f
  411771:	mov    al,ds:0x66a315ba
  411776:	sbb    BYTE PTR [ecx-0x20],0xe6
  41177a:	in     eax,dx
  41177b:	dec    ebp
  41177c:	adc    BYTE PTR [edx],bl
  41177e:	sbb    eax,0xbe9c0fda
  411783:	jo     0x4117ce
  411785:	xchg   edi,eax
  411786:	mov    DWORD PTR [ebx],0x613cb8a
  41178c:	xor    al,0x2d
  41178e:	sub    eax,0x62d927ef
  411793:	jmp    0x41174a
  411795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411796:	loope  0x411728
  411798:	jmp    0x13ac8685
  41179d:	jge    0x4117b4
  41179f:	mov    eax,ds:0x25608cbd
  4117a4:	sub    bh,ah
  4117a6:	aam    0x7d
  4117a8:	cmp    BYTE PTR [edx+0xe],ah
  4117ab:	dec    edx
  4117ac:	push   0xffffffac
  4117ae:	mov    bl,0xf6
  4117b0:	push   0xcc1f43c4
  4117b5:	in     eax,dx
  4117b6:	mov    ds:0x9332b73,eax
  4117bb:	adc    eax,0xb76e5b63
  4117c0:	sbb    al,0x6e
  4117c2:	dec    edx
  4117c3:	add    BYTE PTR [edi+0x6b23cc4a],bl
  4117c9:	dec    esp
  4117ca:	dec    ecx
  4117cb:	mov    al,ds:0xb2be1833
  4117d0:	call   0x6626:0x80c8e2df
  4117d7:	or     BYTE PTR [ebx],ch
  4117d9:	shl    DWORD PTR [ecx-0x1c],0x73
  4117dd:	add    BYTE PTR [ebx+esi*8+0x7e],0x9b
  4117e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e3:	in     al,dx
  4117e4:	retf   
  4117e5:	sub    eax,DWORD PTR [eax+0x7b15c91f]
  4117eb:	cld    
  4117ec:	jne    0x4117a0
  4117ee:	sub    edi,ecx
  4117f0:	gs popf 
  4117f2:	inc    eax
  4117f3:	xchg   edx,eax
  4117f4:	sbb    al,dl
  4117f6:	jae    0x4117c9
  4117f8:	lods   eax,DWORD PTR ds:[esi]
  4117f9:	sub    eax,0x53e160ae
  4117fe:	pusha  
  4117ff:	sub    BYTE PTR [ebp*4+0x23445f82],bl
  411806:	dec    eax
  411807:	mov    bh,0x15
  411809:	imul   esp,ecx,0x47c96718
  41180f:	fimul  WORD PTR [esi+0x501f002c]
  411815:	and    edx,DWORD PTR [ebx+edx*2]
  411818:	in     al,0xf9
  41181a:	jo     0x411831
  41181c:	pop    es
  41181d:	and    edx,DWORD PTR [edx+0x57b9c9f5]
  411823:	(bad)  
  411824:	mov    dl,0x8e
  411826:	adc    eax,0x624fe78b
  41182b:	fild   DWORD PTR [esi]
  41182d:	push   es
  41182e:	inc    edi
  41182f:	lahf   
  411830:	aad    0x89
  411832:	(bad)  
  411833:	(bad)  
  411834:	push   edx
  411835:	xchg   ebp,eax
  411836:	div    BYTE PTR [ebx]
  411838:	xor    al,al
  41183a:	leave  
  41183b:	pop    ebp
  41183c:	js     0x4117eb
  41183e:	or     ebx,DWORD PTR [ebp-0x55129a83]
  411844:	push   esp
  411845:	lahf   
  411846:	loope  0x41181e
  411848:	or     eax,0x41c4261b
  41184d:	cmp    bh,0x9c
  411850:	adc    al,0x0
  411852:	out    dx,eax
  411853:	or     BYTE PTR [ecx],bl
  411855:	aad    0x44
  411857:	aas    
  411858:	and    eax,0x9861f783
  41185d:	pop    esi
  41185e:	and    BYTE PTR [esp+edx*8-0xb807e8b],0x76
  411866:	(bad)  
  411867:	jnp    0x4117ea
  411869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41186a:	pop    esp
  41186b:	stos   DWORD PTR es:[edi],eax
  41186c:	imul   edi,DWORD PTR [ebp+0xf],0xdf6a2a80
  411873:	push   esp
  411874:	jecxz  0x41181b
  411876:	sub    BYTE PTR [ebx],ah
  411878:	pop    ebp
  411879:	cmp    al,0xc8
  41187b:	pop    ebx
  41187c:	rcl    DWORD PTR [ecx-0x4f],1
  41187f:	cmp    ebx,ecx
  411881:	push   edx
  411882:	repnz xor al,0xfb
  411885:	jo     0x4118d1
  411887:	mov    eax,ds:0x57151501
  41188c:	fsubr  st,st(5)
  41188e:	fiadd  DWORD PTR [edi+0x18]
  411891:	gs jmp 0x7910ee46
  411897:	retf   
  411898:	hlt    
  411899:	loope  0x41181e
  41189b:	xor    dh,BYTE PTR [ecx]
  41189d:	inc    ebp
  41189e:	jbe    0x4118ec
  4118a0:	sar    DWORD PTR [ebp-0x774650b3],1
  4118a6:	in     al,dx
  4118a7:	lods   eax,DWORD PTR ds:[esi]
  4118a8:	inc    esi
  4118a9:	dec    ebx
  4118aa:	out    dx,al
  4118ab:	cs leave 
  4118ad:	loop   0x4118ce
  4118af:	mov    bl,0x3c
  4118b1:	mov    al,ds:0x35a00bed
  4118b6:	pushf  
  4118b7:	test   DWORD PTR [ebx],ebp
  4118b9:	daa    
  4118ba:	jle    0x411861
  4118bc:	shl    BYTE PTR [edx+0x2f],cl
  4118bf:	rcl    DWORD PTR [ecx+ebx*1],cl
  4118c2:	call   0x797e:0x46c72e81
  4118c9:	mov    ds:0xbce21ecd,al
  4118ce:	dec    esp
  4118cf:	mov    edx,0xbe40c65f
  4118d4:	ins    BYTE PTR es:[edi],dx
  4118d5:	adc    BYTE PTR [edx],bl
  4118d7:	out    0x3b,al
  4118d9:	mov    fs,ebx
  4118db:	(bad)  
  4118dc:	sti    
  4118dd:	pop    ss
  4118de:	xor    al,0xd9
  4118e0:	fsubr  DWORD PTR [ecx*8-0x3ff4415f]
  4118e7:	js     0x4118ab
  4118e9:	pop    ds
  4118ea:	push   esp
  4118eb:	sub    DWORD PTR [edi+0x33],ebp
  4118ee:	sbb    al,0xb2
  4118f0:	mov    dh,0x20
  4118f2:	jae    0x411884
  4118f4:	jmp    FWORD PTR [ecx+ebx*2-0x3e]
  4118f8:	test   al,0x49
  4118fa:	div    BYTE PTR [ecx-0x5098653e]
  411900:	pushf  
  411901:	ds sbb eax,0xcb90b89c
  411907:	inc    esp
  411908:	das    
  411909:	xchg   DWORD PTR [ebp-0x3048a3fb],ebp
  41190f:	inc    esp
  411910:	jecxz  0x411926
  411912:	mov    esi,0xfa6fd4e
  411917:	call   0x95b7:0xfe864ff9
  41191e:	repnz aaa 
  411920:	xchg   ebx,eax
  411921:	in     eax,0x7b
  411923:	adc    edx,DWORD PTR [esi]
  411925:	cmp    ah,bh
  411927:	xchg   esp,eax
  411928:	scas   al,BYTE PTR es:[edi]
  411929:	mov    fs,WORD PTR [esi-0x45e9a10e]
  41192f:	or     esp,DWORD PTR [edi+0x76]
  411932:	or     ah,BYTE PTR [esp+ebp*8+0x40]
  411936:	sbb    BYTE PTR [eax+0x54633beb],0x80
  41193d:	jmp    0x6aa:0x13fdf6f4
  411944:	fadd   DWORD PTR [edx]
  411946:	jmp    0x41199c
  411948:	dec    ecx
  411949:	fs mov edx,0xf5462369
  41194f:	jmp    0x41198d
  411951:	cmp    esp,eax
  411953:	rcr    BYTE PTR [edx],0xbe
  411956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411957:	push   ss
  411958:	sub    DWORD PTR [ecx+0x5b],ebx
  41195b:	mov    ebp,0xacc09f53
  411960:	rol    BYTE PTR ds:0xf57251cc,0x3f
  411967:	xchg   ebx,eax
  411968:	xchg   ebp,eax
  411969:	push   ss
  41196a:	jbe    0x4119a4
  41196c:	leave  
  41196d:	inc    esi
  41196e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411970:	mov    ah,0x8f
  411972:	jbe    0x41191d
  411974:	test   BYTE PTR [ecx],al
  411976:	aam    0xf4
  411978:	out    dx,eax
  411979:	and    al,0x1d
  41197b:	pushf  
  41197c:	nop
  41197d:	aas    
  41197e:	sub    BYTE PTR [ebx-0x61],bh
  411981:	in     eax,dx
  411982:	cld    
  411983:	or     edi,DWORD PTR [ebp+0x65]
  411986:	stos   BYTE PTR es:[edi],al
  411987:	add    BYTE PTR [edi+0x5],cl
  41198a:	inc    ecx
  41198b:	mov    ebx,0xbe79bc5a
  411990:	(bad)
  411993:	cmp    al,0xfa
  411995:	sbb    dl,BYTE PTR [ebp-0x4e4b9b6d]
  41199b:	xlat   BYTE PTR ds:[ebx]
  41199c:	mov    ecx,0x4165fb23
  4119a1:	fwait
  4119a2:	cli    
  4119a3:	push   edx
  4119a4:	shr    DWORD PTR [edi+0x2e],1
  4119a7:	mov    WORD PTR [ecx-0x42],ss
  4119aa:	add    dh,dl
  4119ac:	xchg   ebp,eax
  4119ad:	mov    eax,ds:0xac0a8002
  4119b2:	fmul   st(3),st
  4119b4:	lods   al,BYTE PTR ds:[esi]
  4119b5:	shl    BYTE PTR [ecx+0x57],cl
  4119b8:	(bad)  
  4119b9:	sub    ebx,DWORD PTR [ecx-0x35]
  4119bc:	pop    esi
  4119bd:	pushf  
  4119be:	sub    dl,BYTE PTR [esi]
  4119c0:	cmp    al,0x54
  4119c2:	adc    al,BYTE PTR [esi+ebx*8-0x44]
  4119c6:	fild   QWORD PTR [edx+ebp*4]
  4119c9:	mov    dl,0x20
  4119cb:	out    dx,al
  4119cc:	or     cl,BYTE PTR [edx+ebp*2+0x698927ea]
  4119d3:	inc    ecx
  4119d4:	addr16 dec esi
  4119d6:	stos   BYTE PTR es:[edi],al
  4119d7:	inc    edx
  4119d8:	and    bh,BYTE PTR [edi]
  4119da:	loope  0x41196d
  4119dc:	and    DWORD PTR [eax+0x17c67994],edx
  4119e2:	retf   0x9bca
  4119e5:	mov    ah,0x0
  4119e7:	ss imul edi,edi,0x14dfae09
  4119ee:	sti    
  4119ef:	retf   0x6e4a
  4119f2:	popa   
  4119f3:	inc    eax
  4119f4:	stos   BYTE PTR es:[edi],al
  4119f5:	add    edx,ebp
  4119f7:	cmp    bl,ah
  4119f9:	ds pop edi
  4119fb:	mov    edx,0xbbbdf925
  411a00:	popf   
  411a01:	push   DWORD PTR [ecx+0x32]
  411a04:	adc    edi,DWORD PTR [si-0x22]
  411a08:	jecxz  0x411a22
  411a0a:	mov    cl,0x39
  411a0c:	lods   al,BYTE PTR ds:[esi]
  411a0d:	leave  
  411a0e:	xor    dh,BYTE PTR [eax+0x38ef9daa]
  411a14:	inc    esp
  411a15:	mov    ecx,0xa80e9cc
  411a1a:	xchg   ebp,eax
  411a1b:	cld    
  411a1c:	sbb    eax,0x340d4a50
  411a21:	jl     0x4119a4
  411a23:	sbb    eax,0xeca37f3d
  411a28:	push   edx
  411a29:	inc    eax
  411a2a:	mov    esp,0x4b5bbf2e
  411a2f:	jnp    0x411aad
  411a31:	push   0x2d
  411a33:	and    eax,0x95eb4875
  411a38:	sub    al,0x43
  411a3a:	cwde   
  411a3b:	fs ins BYTE PTR es:[edi],dx
  411a3d:	push   esp
  411a3e:	pop    ds
  411a3f:	mov    esp,0x44edc720
  411a44:	test   DWORD PTR [ecx-0x40af24ab],edi
  411a4a:	pop    ss
  411a4b:	adc    BYTE PTR [ebp+ecx*1-0x6a2b6f24],bh
  411a52:	sbb    al,0x35
  411a54:	mov    ebp,0x7be45d87
  411a59:	cwde   
  411a5a:	call   0xe4e63358
  411a5f:	mov    bl,0x31
  411a61:	push   esi
  411a62:	cmp    al,0xeb
  411a64:	out    0x41,eax
  411a66:	pop    esp
  411a67:	repnz in eax,dx
  411a69:	leave  
  411a6a:	mov    dl,0xe1
  411a6c:	and    al,BYTE PTR [edi+0x1c7179d5]
  411a72:	inc    ecx
  411a73:	retf   0x3c12
  411a76:	dec    eax
  411a77:	retf   
  411a78:	mov    dl,0x8e
  411a7a:	addr16 mov dh,0x53
  411a7d:	(bad)  [esp+ecx*8+0x58c07479]
  411a84:	dec    ecx
  411a85:	rcl    al,0xc6
  411a88:	test   BYTE PTR [edi+0x7e],0x42
  411a8c:	cs cdq 
  411a8e:	repnz test edx,ebp
  411a91:	jo     0x411a27
  411a93:	jl     0x411a4d
  411a95:	dec    esi
  411a96:	lock data16 mov ch,0x35
  411a9a:	das    
  411a9b:	xor    cl,dl
  411a9d:	ins    BYTE PTR es:[edi],dx
  411a9e:	test   DWORD PTR [edx-0x3c],ebx
  411aa1:	inc    ebp
  411aa2:	dec    DWORD PTR [eax-0x6f7b76da]
  411aa8:	jno    0x411ada
  411aaa:	mov    ebx,0x67b6a687
  411aaf:	rcr    DWORD PTR [eax-0x7972c20c],1
  411ab5:	xor    DWORD PTR [ebp-0x4a],ecx
  411ab8:	mov    eax,ds:0x8dce339f
  411abd:	test   BYTE PTR [ecx],al
  411abf:	repz jb 0x411af4
  411ac2:	add    BYTE PTR [ebx+0x558b084d],cl
  411ac8:	loopne 0x411a53
  411aca:	add    al,0x8a
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a3f3
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a3f7
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a3ff
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a403
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a407
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a40b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a40f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a413
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a41b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a3e3
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a3eb
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a3ef
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a3f3
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a3f7
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [edx-0x45],ch
  412637:	lea    edx,[edx]
  412639:	imul   ecx,DWORD PTR [edx+0x5c178383],0xffffff83
  412640:	sbb    DWORD PTR [ecx],0xffffff9c
  412643:	out    dx,eax
  412644:	adc    eax,0x2588b5a7
  412649:	push   edi
  41264a:	push   ds
  41264b:	xchg   esi,eax
  41264c:	dec    edi
  41264d:	or     cl,cl
  41264f:	inc    ebx
  412650:	stos   BYTE PTR es:[edi],al
  412651:	mov    al,0xa5
  412653:	enter  0x621c,0x68
  412657:	mov    eax,DWORD PTR [eax+0x1f]
  41265a:	inc    ebp
  41265b:	mov    bl,0xa1
  41265d:	xchg   edx,eax
  41265e:	jge    0x412683
  412660:	xchg   edi,eax
  412661:	aad    0x4d
  412663:	out    dx,al
  412664:	sub    al,0xa0
  412666:	pop    edi
  412667:	out    0x98,eax
  412669:	dec    ebp
  41266a:	jns    0x412619
  41266c:	cli    
  41266d:	pop    eax
  41266e:	pop    edx
  41266f:	cdq    
  412670:	and    DWORD PTR [ebx+edx*2+0xde8c831],eax
  412677:	shl    BYTE PTR [edx*8+0x3cd1c252],1
  41267e:	inc    eax
  41267f:	sub    al,0x7a
  412681:	lock cmp eax,esi
  412684:	hlt    
  412685:	cmpps  xmm2,XMMWORD PTR [edi-0x29],0x1b
  41268a:	pop    edi
  41268b:	mov    bh,0xa7
  41268d:	imul   edx,DWORD PTR [edi],0x72
  412690:	outs   dx,BYTE PTR ds:[esi]
  412691:	test   BYTE PTR [eax-0xa],0xab
  412695:	pop    edx
  412696:	mov    al,ds:0xd1a989fb
  41269b:	push   es
  41269c:	mov    ecx,0x4bb9c40c
  4126a1:	push   esp
  4126a2:	xchg   edx,eax
  4126a3:	sbb    ecx,eax
  4126a5:	mov    ds:0xb0f2e0dc,al
  4126aa:	push   ss
  4126ab:	hlt    
  4126ac:	cmp    ecx,ebp
  4126ae:	push   esp
  4126af:	pusha  
  4126b0:	xor    esi,ebx
  4126b2:	pop    ebx
  4126b3:	rol    DWORD PTR [ebx-0x489da0ca],cl
  4126b9:	loopne 0x4126c5
  4126bb:	dec    eax
  4126bc:	fnsave [eax]
  4126be:	jl     0x41268a
  4126c0:	pop    edx
  4126c1:	in     eax,0xb3
  4126c3:	in     eax,0x6d
  4126c5:	mov    es,edx
  4126c7:	pushf  
  4126c8:	repnz fisttp WORD PTR [ebx]
  4126cb:	fild   DWORD PTR [ecx-0x32]
  4126ce:	sub    eax,0xa4524fc5
  4126d3:	jae    0x412711
  4126d5:	stos   DWORD PTR es:[edi],eax
  4126d6:	aaa    
  4126d7:	add    DWORD PTR [ebp+0x4edb118a],0x3b
  4126de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126df:	test   BYTE PTR [ebp-0x6e],al
  4126e2:	push   es
  4126e3:	lds    ecx,FWORD PTR [eax-0x3f]
  4126e6:	mov    al,BYTE PTR [eax+0x1e]
  4126e9:	imul   esp,DWORD PTR [esi],0x646d2a2c
  4126ef:	xor    al,0x4a
  4126f1:	lea    ecx,[edx+0x50e485c1]
  4126f7:	in     eax,0xda
  4126f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126fa:	lds    ebx,FWORD PTR [esi]
  4126fc:	cs ja  0x41272d
  4126ff:	jge    0x412749
  412701:	push   eax
  412702:	add    dh,BYTE PTR [ecx-0x8]
  412705:	sbb    al,0x65
  412707:	jno    0x412739
  412709:	aad    0xeb
  41270b:	push   ss
  41270c:	or     eax,esi
  41270e:	xor    eax,DWORD PTR [eax]
  412710:	xchg   ebp,eax
  412711:	in     al,dx
  412712:	test   DWORD PTR [edx+0x49],0x942e6e8f
  412719:	or     al,0x53
  41271b:	jp     0x4126ed
  41271d:	jp     0x412747
  41271f:	cmp    al,0x3c
  412721:	sahf   
  412722:	add    DWORD PTR [esi+0x1f],edx
  412725:	cdq    
  412726:	loop   0x4126d5
  412728:	(bad)  
  41272a:	dec    edi
  41272b:	dec    ecx
  41272c:	out    dx,eax
  41272d:	(bad)  
  41272f:	call   0xcb94:0x219d3b2d
  412736:	mov    esp,0x177791b4
  41273b:	into   
  41273c:	jp     0x412780
  41273e:	mov    dh,0xbd
  412740:	push   ds
  412741:	(bad)  
  412742:	imul   edi,DWORD PTR [esi+edx*4],0x1d
  412746:	stos   BYTE PTR es:[edi],al
  412747:	sub    al,0xc4
  412749:	push   esp
  41274a:	fsub   QWORD PTR [ebx]
  41274c:	or     DWORD PTR ds:0xb1eced0b,edi
  412752:	jbe    0x412760
  412754:	pop    esp
  412755:	mov    ebp,0xe1dbb080
  41275a:	pop    edx
  41275b:	jmp    0x4127c7
  41275d:	sbb    edi,edx
  41275f:	out    0xca,al
  412761:	mov    esi,0x413dc426
  412766:	add    eax,DWORD PTR [ebx+0x1e]
  412769:	cs xchg esi,eax
  41276b:	imul   esp,DWORD PTR [ecx-0x3902cdf],0xffffffa2
  412772:	sub    DWORD PTR [ecx],ebp
  412774:	adc    DWORD PTR [ebx+0x52935e86],edi
  41277a:	rcl    DWORD PTR [esi+0x5e],cl
  41277d:	sbb    ecx,edx
  41277f:	cdq    
  412780:	fmul   QWORD PTR [edi+ecx*1+0x792cad43]
  412787:	sbb    BYTE PTR [esi-0x14],bh
  41278a:	fwait
  41278b:	(bad)  
  41278c:	fdiv   QWORD PTR [edx+0x67]
  41278f:	inc    edi
  412790:	pop    esp
  412791:	scas   al,BYTE PTR es:[edi]
  412792:	jg     0x4127f6
  412794:	addr16 xchg ebx,eax
  412796:	pop    ecx
  412797:	not    DWORD PTR [ecx+ecx*4+0x3237a1cc]
  41279e:	push   0xffffffd4
  4127a0:	rcl    DWORD PTR [edi-0x684f58f],cl
  4127a6:	stos   DWORD PTR es:[edi],eax
  4127a7:	or     BYTE PTR [edi+0x4c],bl
  4127aa:	(bad)  
  4127ab:	mov    ebp,0x4b11adfe
  4127b0:	xor    bl,al
  4127b2:	fst    DWORD PTR [edi-0x70]
  4127b5:	pop    ss
  4127b6:	aas    
  4127b7:	lods   al,BYTE PTR ds:[esi]
  4127b8:	push   eax
  4127b9:	or     eax,0x2d23515f
  4127be:	enter  0x45cb,0x60
  4127c2:	sub    eax,0x17e8de92
  4127c7:	adc    BYTE PTR [ecx],bl
  4127c9:	clc    
  4127ca:	cmp    BYTE PTR ds:0xd7c33b30,ch
  4127d0:	push   0xadc10425
  4127d5:	dec    BYTE PTR [ebx]
  4127d7:	or     esp,DWORD PTR [edi+0x75]
  4127da:	mov    al,dh
  4127dc:	mov    dh,0xea
  4127de:	in     al,dx
  4127df:	rcr    BYTE PTR [eax+ebp*2-0x3db5fa2b],cl
  4127e6:	push   esi
  4127e7:	fdivr  QWORD PTR [edi]
  4127e9:	pop    ss
  4127ea:	lds    ebx,FWORD PTR [eax+0x4d]
  4127ed:	in     al,0x52
  4127ef:	lds    ebp,FWORD PTR [edx-0x5c4e6b4c]
  4127f5:	loope  0x4127ff
  4127f7:	(bad)  
  4127f8:	outs   dx,DWORD PTR ds:[esi]
  4127f9:	in     al,dx
  4127fa:	push   0x31
  4127fc:	sub    DWORD PTR [edx],esi
  4127fe:	jb     0x4127ab
  412800:	xor    al,0x11
  412802:	add    DWORD PTR [esi+0x79],ebp
  412805:	sbb    cl,BYTE PTR [eax+0x72f787bd]
  41280b:	mov    WORD PTR [eax+0x199c3441],?
  412811:	out    dx,al
  412812:	xor    DWORD PTR [ebx],ebx
  412814:	into   
  412815:	cmp    ch,BYTE PTR [esi-0x2ec2e00d]
  41281b:	(bad)  
  41281c:	ins    DWORD PTR es:[edi],dx
  41281d:	(bad)  
  41281e:	jg     0x4127e1
  412820:	xchg   esp,eax
  412821:	mov    ebx,0x481d3672
  412826:	aam    0x58
  412828:	or     edi,DWORD PTR [ebp-0x3b031bca]
  41282e:	test   BYTE PTR [esi],ch
  412830:	push   eax
  412831:	jp     0x41285b
  412833:	or     esp,DWORD PTR [ecx]
  412835:	jmp    0x2747:0xf35fa21e
  41283c:	add    al,BYTE PTR [edx-0x3a]
  41283f:	loope  0x412843
  412841:	xor    edi,ebx
  412843:	cmp    DWORD PTR [edi+0x56],eax
  412846:	pop    eax
  412847:	retf   
  412848:	mov    dh,0xd3
  41284a:	add    eax,0x328873e7
  41284f:	inc    edi
  412850:	out    dx,al
  412851:	pop    edi
  412852:	ret    0x19b9
  412855:	popa   
  412856:	lock inc edi
  412858:	jle    0x412806
  41285a:	sbb    ecx,eax
  41285c:	ficomp WORD PTR [edi+eiz*4-0x3f188559]
  412863:	aas    
  412864:	pushf  
  412865:	push   edx
  412866:	jno    0x4128b0
  412868:	add    ecx,DWORD PTR [edi+0x19]
  41286b:	and    DWORD PTR ds:0x5186bbf0,0xffffffb9
  412872:	je     0x412895
  412874:	in     al,0xb0
  412876:	push   DWORD PTR [esi+0x59]
  412879:	dec    esp
  41287a:	push   esp
  41287b:	and    DWORD PTR [esi+0x569e3bbe],ebx
  412881:	pop    es
  412882:	call   edi
  412884:	pop    eax
  412885:	out    dx,al
  412886:	mov    eax,ds:0x65ea0584
  41288b:	add    eax,0xf6a87e1e
  412890:	adc    edi,DWORD PTR [eax-0x2]
  412893:	add    bl,BYTE PTR [edx+0x1d]
  412896:	js     0x412898
  412898:	mov    eax,0xd3bbff35
  41289d:	jo     0x4128fa
  41289f:	popa   
  4128a0:	sbb    DWORD PTR [edi+0x2e],ecx
  4128a3:	and    ecx,edi
  4128a5:	mov    WORD PTR [esi+0xc2deb7e],?
  4128ab:	aad    0x37
  4128ad:	or     eax,0xb5cd0dea
  4128b2:	mov    eax,ds:0x503e9eaf
  4128b7:	push   es
  4128b8:	sbb    al,0x0
  4128ba:	mov    dh,0x18
  4128bc:	mov    al,0xb9
  4128be:	into   
  4128bf:	pop    ebp
  4128c0:	mov    edi,0xb018def5
  4128c5:	sbb    dl,ch
  4128c7:	cmp    BYTE PTR [edi-0x38a31477],bh
  4128cd:	pop    ebp
  4128ce:	push   ss
  4128cf:	ja     0x412900
  4128d1:	push   edx
  4128d2:	sub    cl,BYTE PTR [ecx]
  4128d4:	fld    QWORD PTR [edx-0x11]
  4128d7:	or     DWORD PTR [ebx+0xd],esi
  4128da:	xor    DWORD PTR [edi-0x278ed151],edi
  4128e0:	cmp    eax,0x460388da
  4128e5:	data16 mov dl,0xa2
  4128e8:	add    esi,ebx
  4128ea:	test   eax,0x26cbdd75
  4128ef:	mov    cs,WORD PTR [edx-0x7e6424a7]
  4128f5:	xchg   ecx,eax
  4128f6:	lahf   
  4128f7:	or     DWORD PTR [ebx+0x68],esp
  4128fa:	pop    edi
  4128fb:	scas   al,BYTE PTR es:[edi]
  4128fc:	shr    DWORD PTR [edi+0x5623f43],1
  412902:	adc    al,0xdb
  412904:	sub    cl,BYTE PTR [eax-0xe]
  412907:	(bad)  
  412909:	js     0x4128e1
  41290b:	dec    eax
  41290c:	icebp  
  41290d:	jmp    0x1299:0x38e5aa4
  412914:	push   edx
  412915:	xor    DWORD PTR [ecx+ecx*2+0x4dc85ee9],edx
  41291c:	add    cl,BYTE PTR [edi+eiz*8+0x5f]
  412920:	mov    edi,0xc259ea5b
  412925:	dec    ecx
  412926:	pusha  
  412927:	mov    ah,BYTE PTR cs:[ebx+eiz*4]
  41292b:	call   ecx
  41292d:	lods   eax,DWORD PTR ds:[esi]
  41292e:	hlt    
  41292f:	(bad)  
  412930:	outs   dx,BYTE PTR ds:[esi]
  412931:	test   BYTE PTR ds:0xecadba3c,cl
  412937:	jb     0x412972
  412939:	repnz lods al,BYTE PTR ds:[esi]
  41293b:	push   0x1c
  41293d:	jp     0x412983
  41293f:	dec    esp
  412940:	sti    
  412941:	jns    0x41294b
  412943:	adc    eax,0x67ac391c
  412948:	mov    dl,0x19
  41294a:	test   al,0x6d
  41294c:	ins    DWORD PTR es:[edi],dx
  41294d:	cwde   
  41294e:	mov    dl,0xf1
  412950:	call   0xcf0d:0x99e962c8
  412957:	mov    BYTE PTR [esi],cl
  412959:	add    BYTE PTR [edx+0x2505defc],ch
  41295f:	fiadd  DWORD PTR [ecx+0x6a8c0ca0]
  412965:	push   0x1d
  412967:	cmp    BYTE PTR [edx+0x5a],dl
  41296a:	add    BYTE PTR [ecx+ebx*4],ch
  41296d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41296e:	lock ret 0xe5b0
  412972:	mov    bh,0x97
  412974:	push   ss
  412975:	imul   eax,DWORD PTR [edi-0x36bd1ed5],0x41
  41297c:	push   ss
  41297d:	push   ecx
  41297e:	jno    0x4129a8
  412980:	jbe    0x41295c
  412982:	mov    dl,0xe4
  412984:	sub    bh,bh
  412986:	test   DWORD PTR [edi+0x74],edx
  412989:	lods   eax,DWORD PTR ds:[esi]
  41298a:	lods   eax,DWORD PTR ds:[esi]
  41298b:	lds    ebp,FWORD PTR [edx]
  41298d:	xchg   ecx,eax
  41298e:	stc    
  41298f:	icebp  
  412990:	test   al,0x5c
  412992:	aaa    
  412993:	mov    eax,0x944ed80d
  412998:	and    eax,DWORD PTR [edi-0x2d2a53e9]
  41299e:	(bad)  
  41299f:	(bad)  
  4129a0:	xor    eax,0x826ba41c
  4129a5:	dec    esp
  4129a6:	stos   DWORD PTR es:[edi],eax
  4129a7:	sub    al,0x10
  4129a9:	adc    DWORD PTR [esi+0x479ad1e],0xf23fff55
  4129b3:	mov    ebx,0x971d0352
  4129b8:	push   edi
  4129b9:	(bad)  
  4129ba:	jae    0x412963
  4129bc:	addr16 das 
  4129be:	jb     0x412987
  4129c0:	mov    esi,esi
  4129c2:	and    al,0xe0
  4129c4:	xor    esp,eax
  4129c6:	shr    DWORD PTR [esi-0x240b69c2],1
  4129cc:	sbb    edi,DWORD PTR [ebp-0x5b]
  4129cf:	call   0xc5cfe79c
  4129d4:	imul   esp,DWORD PTR [esi+0x10953d27],0x20
  4129db:	ins    BYTE PTR es:[edi],dx
  4129dc:	rcl    BYTE PTR [ebx],1
  4129de:	das    
  4129df:	xchg   esi,eax
  4129e0:	adc    al,0x8a
  4129e2:	imul   edx,DWORD PTR [edi-0x4af0d6a],0xffffff8f
  4129e9:	cmp    eax,0x9b05dc91
  4129ee:	inc    ebx
  4129ef:	fwait
  4129f0:	xchg   esi,eax
  4129f1:	inc    eax
  4129f2:	out    0x48,eax
  4129f4:	adc    DWORD PTR [eax+0x61],0x24
  4129f8:	xor    eax,0x99eea01d
  4129fd:	push   cs
  4129fe:	pop    ebx
  4129ff:	push   cs
  412a00:	js     0x412a5c
  412a02:	jmp    0x208b4ff5
  412a07:	bnd jne 0x412a20
  412a0a:	(bad)  
  412a0b:	lods   eax,DWORD PTR ds:[esi]
  412a0c:	retf   0x6218
  412a0f:	out    dx,al
  412a10:	cld    
  412a11:	add    ecx,DWORD PTR [ebx]
  412a13:	add    DWORD PTR [bx+di-0x2e67],esp
  412a18:	fdivr  DWORD PTR [eax-0x3e]
  412a1b:	int3   
  412a1c:	inc    esp
  412a1d:	push   ebp
  412a1e:	into   
  412a1f:	xchg   edx,eax
  412a20:	cwde   
  412a21:	pop    ebx
  412a22:	cmc    
  412a23:	sub    eax,0x333f3aad
  412a28:	jae    0x412a33
  412a2a:	icebp  
  412a2b:	sub    eax,ebp
  412a2d:	xor    BYTE PTR ss:[ebx+0x4896a3a0],dh
  412a34:	fs aam 0x1
  412a37:	popf   
  412a38:	push   ss
  412a39:	(bad)  
  412a3a:	std    
  412a3b:	sub    BYTE PTR [edi-0x2f699df3],0x54
  412a42:	sub    ebx,esi
  412a44:	pop    eax
  412a45:	sub    al,bl
  412a47:	stc    
  412a48:	vpunpcklwd ymm2,ymm0,YMMWORD PTR [esi+ebx*1]
  412a4d:	test   al,0x7c
  412a4f:	mov    DWORD PTR [edx+0x2dd9e7ac],esi
  412a55:	leave  
  412a56:	sbb    eax,0xc879faeb
  412a5b:	and    eax,0x65eaacfb
  412a60:	sbb    ecx,esi
  412a62:	(bad)  
  412a63:	and    eax,0x812c9806
  412a68:	or     BYTE PTR [ecx],dh
  412a6a:	sub    eax,0xa39cde2b
  412a6f:	inc    ecx
  412a70:	(bad)  
  412a71:	fidivr WORD PTR [eax]
  412a73:	push   ebx
  412a74:	aad    0x89
  412a76:	mov    eax,ds:0x900bcfac
  412a7b:	mov    dh,0xc5
  412a7d:	loopne 0x412a03
  412a7f:	jp     0x412a39
  412a81:	dec    esp
  412a82:	retf   0xe18a
  412a85:	sub    dh,dl
  412a87:	sbb    DWORD PTR [ebx+ebx*2],ebp
  412a8a:	in     al,dx
  412a8b:	sbb    eax,0x8b73fecd
  412a90:	out    0x8,eax
  412a92:	clc    
  412a93:	jle    0x412ab0
  412a95:	and    bl,BYTE PTR [ebp+0x33fd7e0a]
  412a9b:	xchg   ebx,eax
  412a9c:	pop    es
  412a9d:	idiv   dh
  412a9f:	inc    eax
  412aa0:	lods   eax,DWORD PTR ds:[esi]
  412aa1:	(bad)  
  412aa2:	mov    ds:0x674ed8e8,al
  412aa7:	cmp    eax,0x613304b5
  412aac:	out    dx,eax
  412aad:	xor    eax,ebx
  412aaf:	(bad)  
  412ab0:	mov    edx,0xacab31a9
  412ab5:	ins    BYTE PTR es:[edi],dx
  412ab6:	mov    ecx,0x2be746d6
  412abb:	jno    0x412ac7
  412abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412abe:	adc    BYTE PTR [ebx+0x7e09d20e],dh
  412ac4:	mov    dl,0xb7
  412ac6:	xor    eax,0xc4d12a2c
  412acb:	inc    ecx
  412acc:	stos   DWORD PTR es:[edi],eax
  412acd:	cmp    al,0x67
  412acf:	jo     0x412a64
  412ad1:	xlat   BYTE PTR ds:[ebx]
  412ad2:	mov    al,0x47
  412ad4:	repnz or bl,BYTE PTR [edx+0x17c8b299]
  412adb:	inc    esp
  412adc:	ins    BYTE PTR es:[edi],dx
  412add:	arpl   WORD PTR [eax],cx
  412adf:	jmp    0xf114ec51
  412ae4:	nop
  412ae5:	js     0x412ac8
  412ae7:	pop    ebp
  412ae8:	rcl    DWORD PTR fs:[ebp+0x2eb6b7c5],1
  412aef:	scas   eax,DWORD PTR es:[edi]
  412af0:	xor    al,0x49
  412af2:	mov    ax,0x376b
  412af6:	xchg   esi,eax
  412af7:	loope  0x412a84
  412af9:	mov    bl,BYTE PTR [edx-0x3a4c49e4]
  412aff:	pop    edi
  412b00:	xchg   esp,eax
  412b01:	sbb    eax,DWORD PTR [eiz*2-0x3e4f4922]
  412b08:	mov    ecx,0xbfa2c6dd
  412b0d:	mov    WORD PTR [eax+eiz*1-0x8b8ddde],fs
  412b14:	cld    
  412b15:	test   al,0xd1
  412b17:	mov    ds:0xd1891c51,eax
  412b1c:	mov    edi,0x7493ab1f
  412b21:	(bad)  
  412b22:	shl    dl,1
  412b24:	or     BYTE PTR [edi+0x7e],dl
  412b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b28:	sbb    al,0x5f
  412b2a:	nop
  412b2b:	mov    al,0xa5
  412b2d:	xor    BYTE PTR [ebp-0x7e],bl
  412b30:	hlt    
  412b31:	pop    ebx
  412b32:	jmp    0x412b42
  412b34:	xlat   BYTE PTR ds:[ebx]
  412b35:	mov    edi,0x777ae72a
  412b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b3b:	in     al,dx
  412b3c:	call   0xc5636a11
  412b41:	ins    BYTE PTR es:[edi],dx
  412b42:	xor    al,0xe2
  412b44:	sbb    DWORD PTR es:[edx-0x5e],esp
  412b48:	add    al,0x16
  412b4a:	pop    ebx
  412b4b:	sahf   
  412b4c:	xchg   edx,eax
  412b4d:	inc    ecx
  412b4e:	add    ch,BYTE PTR [edx-0x54ca0d1]
  412b54:	pop    esi
  412b55:	dec    esi
  412b56:	fadd   DWORD PTR [ebx-0x675a271f]
  412b5c:	jge    0x412b6c
  412b5e:	jno    0x412ae1
  412b60:	xchg   BYTE PTR [eax+0x630c8789],cl
  412b66:	clc    
  412b67:	or     BYTE PTR [ebx+0xc],0x27
  412b6b:	pop    esp
  412b6c:	add    eax,0xdd3cef6c
  412b71:	sar    DWORD PTR [ebx-0x75],cl
  412b74:	dec    ebx
  412b75:	cs ja  0x412bb2
  412b78:	pusha  
  412b79:	xor    eax,0x62cdab15
  412b7e:	bound  ecx,QWORD PTR [edx]
  412b80:	call   0x31409a2f
  412b85:	dec    esp
  412b86:	sti    
  412b87:	jmp    0x7957a751
  412b8c:	fxtract 
  412b8e:	sbb    eax,0x95c0360b
  412b93:	xor    eax,0x9ecfafe2
  412b98:	aad    0xc7
  412b9a:	sbb    eax,0x135fe025
  412b9f:	add    BYTE PTR [edx],al
  412ba1:	jmp    0x412bb0
  412ba3:	cs sbb dl,ah
  412ba6:	xor    al,BYTE PTR [ebp+0x1b]
  412ba9:	xchg   edx,eax
  412baa:	or     bl,BYTE PTR [eax+0x506db230]
  412bb0:	je     0x412b80
  412bb2:	add    ah,dh
  412bb4:	pop    ebx
  412bb5:	clc    
  412bb6:	fst    QWORD PTR [edi+0x1f2ccece]
  412bbc:	jae    0x412b92
  412bbe:	sbb    eax,0xa7e14831
  412bc3:	or     edi,eax
  412bc5:	aam    0x40
  412bc7:	add    BYTE PTR [esi+0x54],dh
  412bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bcb:	test   eax,0x35202978
  412bd0:	xor    BYTE PTR ds:0xbfd9062a,dh
  412bd6:	or     DWORD PTR [ebx-0x3b36d68c],edx
  412bdc:	jbe    0x412c19
  412bde:	push   0x7b
  412be0:	into   
  412be1:	fcom   QWORD PTR [esi]
  412be3:	dec    eax
  412be4:	dec    ecx
  412be5:	inc    BYTE PTR [eax+eax*8]
  412be8:	dec    edi
  412be9:	xlat   BYTE PTR ds:[ebx]
  412bea:	adc    eax,0x4c321f1c
  412bef:	jne    0x412b8e
  412bf1:	mov    ecx,0xb20a0653
  412bf6:	sub    bl,bh
  412bf8:	sub    DWORD PTR [edi+esi*8-0x7324b611],esi
  412bff:	mov    es,WORD PTR [ebx-0x22]
  412c02:	jle    0x412c1b
  412c04:	cdq    
  412c05:	adc    DWORD PTR [eax],ecx
  412c07:	adc    ch,BYTE PTR [edx-0x102094c6]
  412c0d:	in     al,dx
  412c0e:	inc    esp
  412c0f:	or     ebp,ebp
  412c11:	jb     0x412c43
  412c13:	pop    es
  412c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c15:	xchg   ecx,eax
  412c16:	popf   
  412c17:	xchg   edi,eax
  412c18:	jg     0x412c10
  412c1a:	sbb    al,BYTE PTR [edi-0x4bafb8fa]
  412c20:	sub    al,ah
  412c22:	loopne 0x412bc0
  412c24:	gs jno 0x412c42
  412c27:	add    dl,BYTE PTR [edx]
  412c29:	mov    esi,0x18169567
  412c2e:	cmc    
  412c2f:	into   
  412c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c31:	xchg   edx,eax
  412c32:	jbe    0x412bc8
  412c34:	jmp    0x412c41
  412c36:	(bad)  [eax+0x6f]
  412c39:	(bad)  
  412c3b:	ret    0x4913
  412c3e:	out    0x99,al
  412c40:	clc    
  412c41:	push   edi
  412c42:	sbb    al,0xb8
  412c44:	addr16 jne 0x412c82
  412c47:	and    BYTE PTR ds:0xfd62,0x49
  412c4e:	pop    edi
  412c4f:	je     0x412c21
  412c51:	aam    0xc7
  412c53:	or     ch,BYTE PTR [ebp+ebx*1+0x9]
  412c57:	mov    ebp,DWORD PTR [edi]
  412c59:	popf   
  412c5a:	mov    al,ds:0xdb75b40e
  412c5f:	jo     0x412cad
  412c61:	aas    
  412c62:	hlt    
  412c63:	pop    ebp
  412c64:	cli    
  412c65:	jo     0x412c15
  412c67:	or     al,0x3c
  412c69:	sar    BYTE PTR [ecx],1
  412c6b:	sar    dh,1
  412c6d:	mov    ds:0x42b112d,al
  412c72:	loopne 0x412cd4
  412c74:	sub    BYTE PTR [ebp-0x7ddcff9e],ah
  412c7a:	cdq    
  412c7b:	inc    edx
  412c7c:	mov    edx,0xc0c39270
  412c81:	nop
  412c82:	adc    ah,cl
  412c84:	jl     0x412cc9
  412c86:	cdq    
  412c87:	xchg   edx,eax
  412c88:	sbb    BYTE PTR [eax+0x8],0xea
  412c8c:	sub    eax,0x77fe78d3
  412c91:	in     al,0xd5
  412c93:	jge    0x412c73
  412c95:	xchg   DWORD PTR [ebp+0x455a6999],eax
  412c9b:	lahf   
  412c9c:	jg     0x412c99
  412c9e:	call   0xde1674c8
  412ca3:	sbb    dh,BYTE PTR [ebx-0x12]
  412ca6:	sub    ebp,ebp
  412ca8:	lea    ebx,[ecx]
  412caa:	popa   
  412cab:	pop    ebx
  412cac:	push   eax
  412cad:	adc    DWORD PTR [ecx],ecx
  412caf:	adc    DWORD PTR [ecx-0x5c],ebp
  412cb2:	lods   al,BYTE PTR ds:[esi]
  412cb3:	xor    al,0xbd
  412cb5:	xor    al,BYTE PTR [eax+0x8eb1585]
  412cbb:	cdq    
  412cbc:	ja     0x412c94
  412cbe:	arpl   WORD PTR [ebx],sp
  412cc0:	lods   eax,DWORD PTR ds:[esi]
  412cc1:	push   ds
  412cc2:	call   0xf8ab:0x299593b8
  412cc9:	int3   
  412cca:	in     al,dx
  412ccb:	xor    esp,DWORD PTR [edi+ebx*8+0x75b985de]
  412cd2:	outs   dx,BYTE PTR ds:[esi]
  412cd3:	cmc    
  412cd4:	mov    ds:0xb93b3953,eax
  412cd9:	sub    eax,0xecfb4527
  412cde:	xchg   ecx,eax
  412cdf:	cmp    DWORD PTR [ebp-0x33b86cc7],0x59138a2d
  412ce9:	jle    0x412d46
  412ceb:	ds cmp al,0x3e
  412cee:	cmp    al,0xfa
  412cf0:	sub    cl,BYTE PTR [ebp-0x3910e3be]
  412cf6:	das    
  412cf7:	int3   
  412cf8:	sub    ebp,DWORD PTR [eax+0x36]
  412cfb:	pop    esp
  412cfc:	jo     0x7bbbdd87
  412d02:	je     0x412d23
  412d04:	lods   al,BYTE PTR ds:[esi]
  412d05:	or     DWORD PTR [edi-0x8],edx
  412d08:	dec    ebp
  412d09:	jae    0x412c99
  412d0b:	push   ds
  412d0c:	cmp    esp,DWORD PTR [edi-0x43a7e51d]
  412d12:	mov    al,0x4d
  412d14:	mov    eax,0xa55bec17
  412d19:	and    BYTE PTR [edx-0x72e67d1c],ch
  412d1f:	lods   al,BYTE PTR ds:[esi]
  412d20:	fs push ds
  412d22:	mov    ?,WORD PTR [ecx+0x4dd6b2f2]
  412d28:	dec    edx
  412d29:	cs jp  0x412ce4
  412d2c:	mov    bl,0x60
  412d2e:	cmp    DWORD PTR [esi],eax
  412d30:	mov    WORD PTR [ebp-0x7f],?
  412d33:	into   
  412d34:	sub    ah,BYTE PTR [edi+0xb64cafe]
  412d3a:	popa   
  412d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d3c:	fcomp  QWORD PTR [ecx-0x6805ad05]
  412d42:	or     eax,0xd545f90a
  412d47:	mov    cl,0x1e
  412d49:	xchg   ebx,eax
  412d4a:	ret    
  412d4b:	mov    eax,ds:0xe99ecd43
  412d50:	and    al,0x46
  412d52:	mov    edi,0xfe3d81e
  412d57:	sahf   
  412d58:	into   
  412d59:	ds test al,dh
  412d5c:	sbb    ebp,eax
  412d5e:	mov    ss,WORD PTR [ebp+0x19]
  412d61:	(bad)  
  412d62:	mov    ch,0x3c
  412d64:	mov    DWORD PTR [ecx],0x1bda3c44
  412d6a:	fwait
  412d6b:	adc    DWORD PTR [ecx-0x375df93b],0xcaf628f6
  412d75:	jmp    0x412d6d
  412d77:	pop    esi
  412d78:	push   edi
  412d79:	xchg   ecx,eax
  412d7a:	sub    BYTE PTR [edi+0x64e51c16],dl
  412d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d81:	cmc    
  412d82:	(bad)  [edx+0x3598c3a5]
  412d88:	shl    BYTE PTR [esi-0x531294c6],1
  412d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d8f:	mov    ss,esi
  412d91:	inc    edx
  412d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d93:	cmp    esp,esi
  412d95:	leave  
  412d96:	mov    bl,0xea
  412d98:	and    bh,0x93
  412d9b:	jb     0x412d67
  412d9d:	mov    DWORD PTR [edi],esi
  412d9f:	xlat   BYTE PTR ds:[ebx]
  412da0:	adc    ah,BYTE PTR [edx]
  412da2:	ss ss push es
  412da5:	sbb    BYTE PTR [esi-0x2ec0516e],al
  412dab:	sbb    edi,ecx
  412dad:	in     eax,0xaa
  412daf:	cs jge 0x412d66
  412db2:	pop    ds
  412db3:	sbb    bh,BYTE PTR [ecx+0x77]
  412db6:	sub    eax,0x371d8686
  412dbb:	push   ds
  412dbc:	push   esp
  412dbd:	mov    ds:0xd0de23cf,eax
  412dc2:	test   al,0x7f
  412dc4:	xor    dl,BYTE PTR [edi]
  412dc6:	stos   BYTE PTR es:[edi],al
  412dc7:	mov    cl,0x4e
  412dc9:	xor    DWORD PTR [ebp+0x6d813f7f],ecx
  412dcf:	pushf  
  412dd0:	loopne 0x412dda
  412dd2:	out    0x54,eax
  412dd4:	xchg   ch,ch
  412dd6:	into   
  412dd7:	loope  0x412d68
  412dd9:	cwde   
  412dda:	ins    DWORD PTR es:[edi],dx
  412ddb:	out    0x6a,al
  412ddd:	mov    esi,0x6820ecf8
  412de2:	jne    0x412e0b
  412de4:	sbb    DWORD PTR [ecx],esi
  412de6:	xor    eax,0xb76dab09
  412deb:	dec    eax
  412dec:	push   cs
  412ded:	pop    ebx
  412dee:	pop    ss
  412def:	xor    esi,DWORD PTR [eax]
  412df1:	or     cl,BYTE PTR [eax-0x1dd8665a]
  412df7:	xchg   edx,eax
  412df8:	dec    esp
  412df9:	(bad)  
  412dfa:	cmp    DWORD PTR [ebx-0xab490ae],ebp
  412e00:	jle    0x412e35
  412e02:	jns    0x412d99
  412e04:	pop    eax
  412e05:	add    edx,DWORD PTR [esp+ebp*1]
  412e08:	pop    edi
  412e09:	xchg   esp,eax
  412e0a:	test   al,0x48
  412e0c:	fld    QWORD PTR [edx-0x35]
  412e0f:	in     eax,dx
  412e10:	ins    BYTE PTR es:[edi],dx
  412e11:	pop    ds
  412e12:	out    0xe6,eax
  412e14:	push   0x9ef549e8
  412e19:	rep outs dx,BYTE PTR ds:[esi]
  412e1b:	add    DWORD PTR [edi+0x6f],esp
  412e1e:	jmp    0x7e0a:0x56a83bdd
  412e25:	leave  
  412e26:	sub    DWORD PTR [ebx],ebp
  412e28:	mov    ds:0x481b05ff,eax
  412e2d:	xchg   BYTE PTR [ebp+0x2f],ah
  412e30:	rol    DWORD PTR [ebx-0x1d],1
  412e33:	sub    ebp,eax
  412e35:	(bad)  
  412e36:	bound  edi,QWORD PTR [esp+ebp*8]
  412e39:	sub    al,0x36
  412e3b:	pop    esp
  412e3c:	xor    BYTE PTR [ebx-0x75],bl
  412e3f:	(bad)  
  412e40:	test   eax,0xa817016
  412e45:	loopne 0x412df7
  412e47:	push   ss
  412e48:	mov    ds:0xf2c95bb1,eax
  412e4d:	or     bh,BYTE PTR [edi+ebx*2]
  412e50:	imul   DWORD PTR [esi-0x4473e033]
  412e56:	sahf   
  412e57:	lods   eax,DWORD PTR ds:[esi]
  412e58:	es inc sp
  412e5c:	loopne 0x412e1c
  412e5e:	es or  al,0x8a
  412e61:	add    al,0xea
  412e63:	stos   BYTE PTR es:[edi],al
  412e64:	and    al,0x5a
  412e66:	push   es
  412e67:	xor    al,0x29
  412e69:	cmc    
  412e6a:	dec    ecx
  412e6b:	loope  0x412e4f
  412e6d:	xor    dl,BYTE PTR [eax-0x7e]
  412e70:	inc    ebp
  412e71:	ins    DWORD PTR es:[edi],dx
  412e72:	sub    al,BYTE PTR [ecx-0x80]
  412e75:	sbb    BYTE PTR [eax-0x43],al
  412e78:	stos   DWORD PTR es:[edi],eax
  412e79:	add    eax,0x4b1ca297
  412e7e:	push   eax
  412e7f:	fld    QWORD PTR [edx+0x49730678]
  412e85:	mov    ebp,0x1f29ce1a
  412e8a:	pop    esp
  412e8b:	std    
  412e8c:	dec    ecx
  412e8d:	imul   edi,DWORD PTR [eax+0x1a0dcdbc],0x2e213b8
  412e97:	inc    ebx
  412e98:	int3   
  412e99:	inc    esi
  412e9a:	(bad)  
  412e9b:	stc    
  412e9c:	enter  0x47c7,0xe2
  412ea0:	adc    eax,0x4f9fbd6f
  412ea5:	retf   0xe7b1
  412ea8:	pop    ss
  412ea9:	cld    
  412eaa:	xor    eax,0xc58163e3
  412eaf:	inc    esi
  412eb0:	xchg   ebx,eax
  412eb1:	mov    edx,0xe036f87d
  412eb6:	in     eax,dx
  412eb7:	fistp  QWORD PTR [edi-0x66bcbb86]
  412ebd:	xchg   BYTE PTR [ecx],bh
  412ebf:	jp     0x412ebe
  412ec1:	pop    eax
  412ec2:	int    0x63
  412ec4:	inc    edx
  412ec5:	cmp    eax,DWORD PTR [esi]
  412ec7:	jmp    0x412eef
  412ec9:	and    DWORD PTR [esi],ecx
  412ecb:	cwde   
  412ecc:	test   al,0x35
  412ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ecf:	fimul  WORD PTR [ecx-0xa]
  412ed2:	fdiv   QWORD PTR [ecx+esi*2-0x741400f4]
  412ed9:	fmul   st,st(7)
  412edb:	(bad)  
  412edc:	mov    bl,0x96
  412ede:	inc    edi
  412edf:	lods   al,BYTE PTR ds:[esi]
  412ee0:	in     al,dx
  412ee1:	cmc    
  412ee2:	fsub   QWORD PTR [esi]
  412ee4:	and    eax,ebx
  412ee6:	sub    BYTE PTR [esi+ecx*4+0x7992edab],bh
  412eed:	test   DWORD PTR [ebx-0x22],0xf6aac730
  412ef4:	mov    esi,0xc0c17be6
  412ef9:	scas   al,BYTE PTR es:[di]
  412efb:	sbb    ecx,DWORD PTR [ebx+0x75]
  412efe:	cdq    
  412eff:	sub    BYTE PTR [edi+0x6f],dh
  412f02:	js     0x412f0e
  412f04:	pushf  
  412f05:	add    DWORD PTR [esi+0x31018958],ebp
  412f0b:	mov    ds,WORD PTR [edx]
  412f0d:	mov    eax,ds:0x8fb34049
  412f12:	dec    esi
  412f13:	fdivr  DWORD PTR [edi]
  412f15:	mov    ebx,DWORD PTR [edx]
  412f17:	push   edi
  412f18:	xchg   ebp,eax
  412f19:	cs cmp dh,ah
  412f1c:	(bad)  [ebx-0x79]
  412f1f:	inc    ebp
  412f20:	xchg   BYTE PTR [ebx],bh
  412f22:	sbb    eax,0xf3d2a8f1
  412f27:	xchg   edi,eax
  412f28:	mov    edx,0xae850ba0
  412f2d:	scas   eax,DWORD PTR es:[edi]
  412f2e:	fsubr  st(7),st
  412f30:	sbb    al,0x2d
  412f32:	int3   
  412f33:	dec    edi
  412f34:	call   0xa72d:0x1fadf01
  412f3b:	adc    ah,BYTE PTR [edi+0x3110694d]
  412f41:	test   DWORD PTR [esi-0x358b12c8],ecx
  412f47:	fs push ebx
  412f49:	fdivr  st,st(7)
  412f4b:	sbb    al,0xd0
  412f4d:	pop    ss
  412f4e:	into   
  412f4f:	pop    ecx
  412f50:	stos   DWORD PTR es:[edi],eax
  412f51:	ret    
  412f52:	call   0xe4d15611
  412f57:	aaa    
  412f58:	jbe    0x412f8a
  412f5a:	push   0x43875352
  412f5f:	bound  eax,QWORD PTR [esi]
  412f61:	mov    ebx,DWORD PTR [edi]
  412f63:	js     0x412ef5
  412f65:	ss lock es scas eax,DWORD PTR es:[edi]
  412f69:	sbb    eax,0xfbf7794d
  412f6e:	and    DWORD PTR [ecx+0x732fd198],edi
  412f74:	(bad)  
  412f75:	fadd   DWORD PTR ds:0xf513c3a8
  412f7b:	sub    bl,bl
  412f7d:	ret    
  412f7e:	sar    ecx,0x13
  412f81:	xchg   ebx,eax
  412f82:	(bad)  
  412f83:	and    BYTE PTR [ecx+esi*8+0x10],ah
  412f87:	jge    0x412fd7
  412f89:	adc    eax,0x40747096
  412f8e:	stos   DWORD PTR es:[edi],eax
  412f8f:	mov    ebx,0x882121b3
  412f94:	inc    eax
  412f95:	loope  0x412f1e
  412f97:	cdq    
  412f98:	pop    ecx
  412f99:	sti    
  412f9a:	sbb    DWORD PTR [ecx],edx
  412f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f9d:	cld    
  412f9e:	and    al,0x89
  412fa0:	mov    dl,0x34
  412fa2:	scas   eax,DWORD PTR es:[edi]
  412fa3:	(bad)  
  412fa4:	(bad)  
  412fa5:	mov    bl,0xba
  412fa7:	out    0x39,eax
  412fa9:	repnz push eax
  412fab:	jl     0x412f9e
  412fad:	lock sub bx,WORD PTR [ecx]
  412fb1:	js     0x412ff6
  412fb3:	std    
  412fb4:	sti    
  412fb5:	push   es
  412fb6:	cmp    cl,ah
  412fb8:	outs   dx,DWORD PTR ds:[esi]
  412fb9:	add    DWORD PTR [eax],0xffffffe6
  412fbc:	js     0x412fca
  412fbe:	shl    BYTE PTR [edx+eiz*4-0x2ef13e49],0xb6
  412fc6:	fldcw  WORD PTR [ebp+0x6a]
  412fc9:	das    
  412fca:	(bad)  
  412fcb:	mov    al,ds:0x6a5e1f3b
  412fd0:	nop
  412fd1:	mov    ds:0x538ffe1a,eax
  412fd6:	adc    al,0xc6
  412fd8:	adc    BYTE PTR [esi+0x1],0xff
  412fdc:	xor    al,0x1c
  412fde:	adc    al,ah
  412fe0:	mov    edi,0x8019f24c
  412fe5:	retf   
  412fe6:	in     al,0x83
  412fe8:	pop    DWORD PTR [esi]
  412fea:	mov    al,0xf0
  412fec:	loope  0x412f87
  412fee:	gs (bad) 
  412ff0:	loop   0x41303c
  412ff2:	sbb    al,0xc6
  412ff4:	mov    ds:0xe91c129b,eax
  412ff9:	sub    DWORD PTR [edi+edx*4],edi
  412ffc:	pop    esi
  412ffd:	pop    edx
  412ffe:	lock pop ebx
  413000:	ret    
  413001:	cmp    eax,0xcffc8209
  413006:	mov    bp,0xd991
  41300a:	shl    DWORD PTR [edi-0x2228fb42],cl
  413010:	mov    DWORD PTR [edi],0x380823d3
  413016:	or     al,0x55
  413018:	ss (bad) 
  41301a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41301c:	ins    DWORD PTR es:[edi],dx
  41301d:	mov    ebp,0x33264be1
  413022:	int    0x13
  413024:	(bad)  
  413025:	jb     0x413069
  413027:	xchg   edi,eax
  413028:	ins    DWORD PTR es:[edi],dx
  413029:	xchg   ecx,eax
  41302a:	lods   eax,DWORD PTR ds:[esi]
  41302b:	push   0x7265058
  413030:	inc    ebx
  413032:	cwde   
  413033:	xor    BYTE PTR [esi],0xc7
  413036:	mov    ebp,0x8c8efbe
  41303b:	sub    BYTE PTR [eax+0x3aa02304],dl
  413041:	js     0x412ffd
  413043:	lods   eax,DWORD PTR ds:[esi]
  413044:	mov    eax,0xf66420b7
  413049:	int    0x69
  41304b:	xchg   edi,eax
  41304c:	lods   al,BYTE PTR ds:[esi]
  41304d:	popf   
  41304e:	xor    dh,BYTE PTR [ebx+0x16]
  413051:	fwait
  413052:	add    esp,DWORD PTR [esi+0x7a]
  413055:	mov    ds:0xeabf361c,eax
  41305a:	jbe    0x413024
  41305c:	inc    esi
  41305d:	stos   DWORD PTR es:[edi],eax
  41305e:	sbb    esp,DWORD PTR [esi]
  413060:	mov    ch,0xae
  413062:	leave  
  413063:	cli    
  413064:	out    dx,eax
  413065:	inc    eax
  413066:	adc    DWORD PTR [eax],eax
  413068:	dec    ebp
  413069:	add    ah,BYTE PTR [esi+0x64]
  41306c:	arpl   WORD PTR [esi+ebp*2],bp
  41306f:	jbe    0x413075
  413071:	pop    edx
  413072:	cdq    
  413073:	pop    edi
  413074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413075:	ss data16 in al,dx
  413078:	rol    cl,0xa7
  41307b:	pusha  
  41307c:	dec    ebp
  41307d:	and    BYTE PTR [eax+ebp*1+0x4b4821e2],dl
  413084:	dec    BYTE PTR [ebx+ecx*4]
  413087:	mov    ebx,DWORD PTR [ebx]
  413089:	nop
  41308a:	lods   al,BYTE PTR ds:[esi]
  41308b:	(bad)  
  41308c:	jno    0x4130b5
  41308e:	scas   al,BYTE PTR es:[edi]
  41308f:	shl    DWORD PTR [ebx-0x20],cl
  413092:	mov    ds:0xa7809cc4,al
  413097:	and    dh,dh
  413099:	jae    0x4130f8
  41309b:	mov    esp,0xc6c4c2d9
  4130a0:	mov    bh,0x6b
  4130a2:	push   ecx
  4130a3:	sbb    eax,0xbebfad88
  4130a8:	dec    ebp
  4130a9:	out    0xb4,al
  4130ab:	iret   
  4130ac:	inc    eax
  4130ad:	push   es
  4130ae:	add    BYTE PTR [ecx+0xdadc893],ah
  4130b4:	(bad)  
  4130b5:	cdq    
  4130b6:	xchg   BYTE PTR [edi*4-0x617a8328],bl
  4130bd:	or     BYTE PTR [ebx-0x1f],ah
  4130c0:	pop    edx
  4130c1:	jecxz  0x4130eb
  4130c3:	sbb    eax,0x7bc7f202
  4130c8:	div    esi
  4130ca:	mul    DWORD PTR [esp+ebx*4]
  4130cd:	sbb    al,0x43
  4130cf:	push   0xffffffda
  4130d1:	mov    dh,0x4a
  4130d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d4:	fs aam 0x5a
  4130d7:	mov    eax,?
  4130d9:	cs es pop es
  4130dc:	fs pop eax
  4130de:	xchg   ecx,eax
  4130df:	sub    BYTE PTR [ebp-0x654de318],dh
  4130e5:	mov    ah,0xf7
  4130e7:	int3   
  4130e8:	pop    es
  4130e9:	adc    DWORD PTR [esi],0xfffffff7
  4130ec:	mov    BYTE PTR [ebx+eax*1],cl
  4130ef:	ror    DWORD PTR [ecx],0x7b
  4130f2:	ss and ecx,ebp
  4130f5:	sub    ebp,DWORD PTR [esp+edx*8]
  4130f8:	aaa    
  4130f9:	ja     0x413082
  4130fb:	push   ecx
  4130fc:	jl     0x4130b8
  4130fe:	mov    dl,0x52
  413100:	cmp    eax,0xe562e9db
  413105:	mov    ds:0xccf6b89a,al
  41310a:	stc    
  41310b:	cmp    ecx,ebp
  41310d:	sti    
  41310e:	inc    eax
  41310f:	mov    ebp,0x89c410af
  413114:	mov    DWORD PTR [esi],0x6773fc7b
  41311a:	cs push ecx
  41311c:	ins    BYTE PTR es:[edi],dx
  41311d:	push   edx
  41311e:	mov    esp,0x1312355b
  413123:	inc    esi
  413124:	mov    al,0x9b
  413126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413127:	jo     0x413171
  413129:	xchg   edx,eax
  41312a:	lods   al,BYTE PTR ds:[esi]
  41312b:	jno    0x4130f5
  41312d:	in     eax,dx
  41312e:	aam    0x7e
  413130:	sar    BYTE PTR [edi+0x16],1
  413133:	repnz shl DWORD PTR [ebx],cl
  413136:	xor    ecx,edi
  413138:	mov    ds:0xb101b1c5,eax
  41313d:	jge    0x4130c9
  41313f:	mov    ss,WORD PTR [ecx]
  413141:	imul   ecx,DWORD PTR [esi],0xfffffff9
  413144:	xchg   ecx,eax
  413145:	xor    al,0x48
  413147:	sbb    al,0xe3
  413149:	rep lods al,BYTE PTR ds:[esi]
  41314b:	mov    esi,0xaad8c24e
  413150:	pusha  
  413151:	loopne 0x413134
  413153:	mov    ecx,0xc257eccf
  413158:	daa    
  413159:	inc    BYTE PTR [edi+ecx*8+0x11]
  41315d:	inc    esp
  41315e:	imul   esp,esp,0x1722dcc6
  413164:	pop    edx
  413165:	arpl   WORD PTR [eax+0x1b],dx
  413168:	jbe    0x4130f4
  41316a:	cwde   
  41316b:	iret   
  41316c:	or     cl,BYTE PTR [eax+0x21]
  41316f:	inc    esi
  413170:	pop    ebp
  413171:	cdq    
  413172:	add    al,0xf5
  413174:	cs test eax,0xaef937c4
  41317a:	outs   dx,BYTE PTR ds:[esi]
  41317b:	ffreep st(4)
  41317d:	sar    DWORD PTR [eax+0x5afa4d57],1
  413183:	int    0x6c
  413185:	in     al,dx
  413186:	mov    ebx,0x9444cba2
  41318b:	hlt    
  41318c:	loope  0x413195
  41318e:	shr    BYTE PTR ds:[esi-0x9],0xf8
  413193:	xchg   edx,eax
  413194:	inc    esi
  413195:	push   esp
  413196:	xor    DWORD PTR [edi+0x1a],ebp
  413199:	or     edi,edi
  41319b:	out    dx,eax
  41319c:	mov    esp,0xf39a2373
  4131a1:	or     al,0xb5
  4131a3:	loop   0x413143
  4131a5:	ins    DWORD PTR es:[edi],dx
  4131a6:	push   eax
  4131a7:	jmp    0xb17895f2
  4131ac:	sub    eax,0xc1b7b194
  4131b1:	jbe    0x41320b
  4131b3:	cmp    BYTE PTR [edx],cl
  4131b5:	and    al,0xff
  4131b7:	test   BYTE PTR [edx],al
  4131b9:	push   0xa95e3711
  4131be:	(bad)  [ebx-0x524aa74c]
  4131c4:	sbb    edi,0xc1dba5ff
  4131ca:	mov    esi,0xf2ad53b7
  4131cf:	lods   al,BYTE PTR ds:[esi]
  4131d0:	fcmove st,st(6)
  4131d2:	pop    esp
  4131d3:	loop   0x41319e
  4131d5:	adc    bh,bh
  4131d7:	xor    al,0x32
  4131d9:	pop    edi
  4131da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131db:	push   ds
  4131dc:	test   eax,0xa794e199
  4131e1:	cmp    DWORD PTR [eax-0xc533f86],esi
  4131e7:	ror    DWORD PTR [ebp+ecx*1+0x54e2b3ef],cl
  4131ee:	inc    eax
  4131ef:	out    dx,eax
  4131f0:	cmp    BYTE PTR [edi],bl
  4131f2:	and    cl,BYTE PTR [edi-0x698d4813]
  4131f8:	repnz loop 0x41321d
  4131fb:	(bad)  
  4131fc:	lahf   
  4131fd:	and    DWORD PTR [edi],edx
  4131ff:	aad    0x8a
  413201:	adc    al,0x8a
  413203:	sub    cl,BYTE PTR [edi]
  413205:	adc    ah,BYTE PTR [edx]
  413207:	retf   0x221d
  41320a:	retf   
  41320b:	in     al,0x1f
  41320d:	scas   eax,DWORD PTR es:[edi]
  41320e:	add    dl,BYTE PTR [ebp+0x15a00b1e]
  413214:	mov    edx,0x290b2fe1
  413219:	mov    esi,0x8fe09d57
  41321e:	push   edi
  41321f:	mov    dh,0x89
  413221:	mov    eax,0x381f1ffc
  413226:	ins    BYTE PTR es:[edi],dx
  413227:	jae    0x4131fa
  413229:	test   eax,0xa61a2d68
  41322e:	sub    edx,DWORD PTR [eax]
  413230:	mov    eax,ds:0x5063b736
  413235:	sub    ebx,ebx
  413237:	test   eax,0x4fc27b85
  41323c:	push   0x62
  41323e:	pop    edx
  41323f:	das    
  413240:	test   DWORD PTR [ebp-0x6a],ebx
  413243:	clc    
  413244:	lea    ebp,[esi]
  413246:	push   0x4f
  413248:	int3   
  413249:	sub    eax,0x1d8d08c
  41324e:	or     ah,BYTE PTR [esi+0x5d]
  413251:	xlat   BYTE PTR ds:[ebx]
  413252:	jno    0x41327c
  413254:	bound  esi,QWORD PTR [edx+eiz*2-0x62e8ba85]
  41325b:	(bad)  
  41325d:	jae    0x413281
  41325f:	test   DWORD PTR ds:0xc64fdc60,edi
  413265:	pushf  
  413266:	ret    
  413267:	sbb    DWORD PTR [edi-0x4b],edx
  41326a:	xchg   ebx,eax
  41326b:	dec    edi
  41326c:	scas   eax,DWORD PTR es:[edi]
  41326d:	dec    ebp
  41326e:	leave  
  41326f:	inc    ebx
  413270:	sti    
  413271:	add    al,0x4a
  413273:	xor    cl,BYTE PTR [ebp+0x7094c0e3]
  413279:	call   0x93ed51d8
  41327e:	mov    ebx,0xc284cd2d
  413283:	and    al,0xe
  413285:	in     al,0xe1
  413287:	xor    al,0x3e
  413289:	xor    DWORD PTR cs:[ecx],ebp
  41328c:	xor    DWORD PTR [edi-0x76aa566],edx
  413292:	xor    ah,BYTE PTR [esi-0x9510852]
  413298:	aam    0xbb
  41329a:	and    BYTE PTR [edx+0x11b97b2e],0x2c
  4132a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132a2:	iret   
  4132a3:	fldcw  WORD PTR [ecx+ebx*2]
  4132a6:	sub    cl,al
  4132a8:	pop    esi
  4132a9:	pop    edi
  4132aa:	in     eax,dx
  4132ab:	push   edx
  4132ac:	and    DWORD PTR [esi+0x53d32d49],ebp
  4132b2:	ret    
  4132b3:	jge    0x413277
  4132b5:	jg     0x4132c2
  4132b7:	je     0x4132a8
  4132b9:	mov    fs,WORD PTR [ebp-0x52]
  4132bc:	mov    dl,0x3a
  4132be:	(bad)  [edi+0x58]
  4132c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132c2:	jne    0x413269
  4132c4:	mov    bh,0x79
  4132c6:	mov    cl,0x7a
  4132c8:	and    eax,0x9e5477f8
  4132cd:	or     eax,0x108dd48a
  4132d2:	dec    esi
  4132d3:	jb     0x41331c
  4132d5:	pop    eax
  4132d6:	jmp    0x2e2f4020
  4132db:	ret    
  4132dc:	add    eax,0xb6443e69
  4132e1:	or     BYTE PTR [esi],0x84
  4132e4:	fs hlt 
  4132e6:	ins    DWORD PTR es:[edi],dx
  4132e7:	(bad)  
  4132e9:	push   ebp
  4132ea:	mov    ch,0xea
  4132ec:	xchg   edx,eax
  4132ed:	outs   dx,BYTE PTR ds:[esi]
  4132ee:	leave  
  4132ef:	loopne 0x413353
  4132f1:	jmp    0x7de0:0x185d7e71
  4132f8:	test   DWORD PTR cs:[esi+0x5c],ebx
  4132fc:	retf   
  4132fd:	mov    ebx,?
  4132ff:	dec    esp
  413300:	xor    al,0xaa
  413302:	in     al,dx
  413303:	test   ecx,0x36af3b5c
  413309:	mov    WORD PTR [ecx+0x1d606834],cs
  41330f:	mov    cl,0xf9
  413311:	test   eax,0x21701b96
  413316:	test   eax,0x1e6c2fd4
  41331b:	or     BYTE PTR [ecx],bl
  41331d:	clc    
  41331e:	int    0x4a
  413320:	mov    ebp,0xc81f1d9f
  413325:	adc    ah,cl
  413327:	or     esp,ecx
  413329:	and    ebx,edx
  41332b:	nop
  41332c:	(bad)  
  41332d:	jp     0x41333d
  41332f:	pop    ecx
  413330:	aas    
  413331:	dec    ebx
  413332:	test   eax,0xf1322dd0
  413337:	in     eax,0x22
  413339:	cwde   
  41333a:	xlat   BYTE PTR ds:[ebx]
  41333b:	ins    BYTE PTR es:[edi],dx
  41333c:	pop    edi
  41333d:	inc    edx
  41333e:	pushf  
  41333f:	loopne 0x41330d
  413341:	in     eax,0x15
  413343:	dec    esi
  413344:	jns    0x413312
  413346:	ror    al,cl
  413348:	into   
  413349:	sbb    ecx,ebx
  41334b:	nop
  41334c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41334e:	xchg   ebx,eax
  41334f:	or     DWORD PTR [eax-0xd7b52],0xf29c11b4
  413359:	push   ebx
  41335a:	dec    eax
  41335b:	jmp    0x4133d4
  41335d:	mov    ds:0x2bfc2d4c,al
  413362:	jmp    0x4133a5
  413364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413365:	push   esi
  413366:	retf   
  413367:	lods   eax,DWORD PTR ds:[esi]
  413368:	test   esi,ecx
  41336a:	cs loop 0x413396
  41336d:	loop   0x4132fb
  41336f:	in     al,dx
  413370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413371:	jbe    0x413385
  413373:	mov    ds:0xca0b5ff7,eax
  413378:	out    0x5f,eax
  41337a:	jnp    0x41338a
  41337c:	call   0x24a4:0xdf41d1d0
  413383:	xor    eax,0x7c0c3606
  413388:	data16 clc 
  41338a:	ror    BYTE PTR [esi+0x4217ed61],cl
  413390:	popf   
  413391:	in     al,0x45
  413393:	jle    0x413376
  413395:	lahf   
  413396:	(bad)  
  413397:	cmp    ecx,DWORD PTR [eax]
  413399:	xchg   ecx,edi
  41339b:	daa    
  41339c:	xor    BYTE PTR [esi+0x6e217db4],bl
  4133a2:	or     DWORD PTR [ebp+0x721742bc],ebp
  4133a8:	mov    ds:0x78bcf850,al
  4133ad:	retf   0x5c56
  4133b0:	popa   
  4133b1:	sar    BYTE PTR [edx+ebx*8],1
  4133b4:	sti    
  4133b5:	cmp    ecx,edx
  4133b7:	stos   DWORD PTR es:[edi],eax
  4133b8:	cmp    BYTE PTR [edx-0x54],ch
  4133bb:	push   0xa
  4133bd:	sti    
  4133be:	mov    ds:0x8dba5f00,al
  4133c3:	enter  0x8877,0x95
  4133c7:	fld    TBYTE PTR ds:0xa115d40
  4133cd:	aaa    
  4133ce:	and    ebx,DWORD PTR [eax]
  4133d0:	inc    ebp
  4133d1:	rcr    DWORD PTR [ebx],cl
  4133d3:	or     DWORD PTR [edi+eax*2-0x45],eax
  4133d7:	or     dh,ch
  4133d9:	push   edx
  4133da:	test   al,0x8c
  4133dc:	fisttp DWORD PTR [edx-0x4dcbb831]
  4133e2:	mov    ebp,0xbe7a72a6
  4133e7:	sub    bh,BYTE PTR [esi+0x57170c22]
  4133ed:	test   eax,0xd5303a5a
  4133f2:	scas   eax,DWORD PTR es:[edi]
  4133f3:	ins    DWORD PTR es:[edi],dx
  4133f4:	in     al,dx
  4133f5:	aam    0x1d
  4133f7:	push   es
  4133f8:	xchg   esi,eax
  4133f9:	or     edx,ebx
  4133fb:	mov    edx,0x77800ad6
  413400:	stos   DWORD PTR es:[edi],eax
  413401:	and    cl,bh
  413403:	adc    DWORD PTR [eax+0x4c380c47],edx
  413409:	popf   
  41340a:	jecxz  0x4133f3
  41340c:	pop    ds
  41340d:	call   0xb90:0xe5908f2d
  413414:	mov    edi,DWORD PTR [ecx-0x4d]
  413417:	dec    ecx
  413418:	adc    al,0x9
  41341a:	jmp    0x4133d1
  41341c:	lock cmp bh,BYTE PTR [eax]
  41341f:	in     eax,0x15
  413421:	xor    al,0x47
  413423:	test   ecx,0xc5e5afb
  413429:	xor    ecx,DWORD PTR [esi]
  41342b:	cmp    BYTE PTR [edx+0xee00ce3],bh
  413431:	fwait
  413432:	inc    esp
  413433:	inc    eax
  413434:	and    al,0x50
  413436:	mov    dh,BYTE PTR [edi-0xb]
  413439:	icebp  
  41343a:	(bad)  
  41343b:	fnstcw WORD PTR [ecx]
  41343d:	add    BYTE PTR [ebp+0x7e],cl
  413440:	lahf   
  413441:	stos   DWORD PTR es:[edi],eax
  413442:	ror    BYTE PTR [esi+ecx*2-0x19],0x5
  413447:	jne    0x4134a4
  413449:	ins    BYTE PTR es:[edi],dx
  41344a:	addr16 in eax,0x11
  41344d:	repnz pop edx
  41344f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413450:	push   edx
  413451:	add    ebp,DWORD PTR [edx-0x6af357f8]
  413457:	push   0x46
  413459:	xchg   ebx,esi
  41345b:	sbb    edi,DWORD PTR [eax]
  41345d:	push   0xfab038ea
  413462:	jg     0x4134db
  413464:	nop
  413465:	lahf   
  413466:	loop   0x4133f0
  413468:	mov    edi,0xc3eebe2f
  41346d:	sbb    BYTE PTR [esi-0x28547e0d],dh
  413473:	into   
  413474:	es sahf 
  413476:	pop    esi
  413477:	jle    0x4134e8
  413479:	sub    ah,dl
  41347b:	scas   al,BYTE PTR es:[edi]
  41347c:	jbe    0x41349c
  41347e:	aam    0x45
  413480:	adc    esp,ebx
  413482:	call   0x4b369e7c
  413487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413488:	hlt    
  413489:	jmp    0x4134dc
  41348b:	sar    ah,cl
  41348d:	xor    BYTE PTR [ecx+0x26],cl
  413490:	pop    edx
  413491:	into   
  413492:	and    BYTE PTR [ebx],dh
  413494:	lea    edi,[esi+0x11]
  413497:	and    al,0x90
  413499:	mov    ds:0x19ba62f9,al
  41349e:	inc    edx
  41349f:	sbb    DWORD PTR ds:0x1cad0fba,edx
  4134a5:	xchg   ecx,eax
  4134a6:	mov    BYTE PTR [ecx+0x55],bl
  4134a9:	test   al,0xa8
  4134ab:	in     al,0x44
  4134ad:	add    BYTE PTR [eax],ah
  4134af:	lods   al,BYTE PTR ds:[esi]
  4134b0:	pusha  
  4134b1:	cmp    ebp,DWORD PTR [ecx]
  4134b3:	jno    0x413436
  4134b5:	arpl   si,si
  4134b7:	aaa    
  4134b8:	and    ebx,DWORD PTR [edx+0x5e6fd173]
  4134be:	mov    ch,0xae
  4134c0:	adc    DWORD PTR [edi],0xb40569b5
  4134c6:	sub    BYTE PTR [ecx-0x2d31da83],0xbd
  4134cd:	jns    0x41345e
  4134cf:	ja     0x4134a6
  4134d1:	jnp    0x41354a
  4134d3:	xor    BYTE PTR [edx+0x3df8a9d5],dl
  4134d9:	test   DWORD PTR [ecx-0x23],0xf5dec66e
  4134e0:	(bad)  
  4134e1:	fsubr  QWORD PTR [ecx]
  4134e3:	push   DWORD PTR [esi+0x539b6d4]
  4134e9:	dec    esp
  4134ea:	out    0x68,al
  4134ec:	(bad)  
  4134ed:	icebp  
  4134ee:	add    ch,ah
  4134f0:	aaa    
  4134f1:	jl     0x413565
  4134f3:	sub    dh,BYTE PTR [esi+ebx*1]
  4134f6:	mov    edx,0xa874398a
  4134fb:	or     ebx,0x5b871858
  413501:	loopne 0x413541
  413503:	push   eax
  413504:	mov    edi,0xa405b171
  413509:	or     cl,BYTE PTR [edx]
  41350b:	stc    
  41350c:	fs cwde 
  41350e:	js     0x41353a
  413510:	jmp    0x4134aa
  413512:	mov    eax,0xfa49c2c2
  413517:	cmp    BYTE PTR [eax+0x1b],dl
  41351a:	int3   
  41351b:	std    
  41351c:	jmp    0xd03d:0x3ba46eb8
  413523:	and    DWORD PTR [esi-0xa97e844],0x52ece044
  41352d:	(bad)  
  41352e:	mov    esp,0x2f6fa2f
  413533:	dec    edi
  413534:	xor    ebp,DWORD PTR [ebp+0x4b933631]
  41353a:	iret   
  41353b:	out    0x93,eax
  41353d:	ja     0x413533
  41353f:	mov    ecx,DWORD PTR [ebx+0x63bf11ba]
  413545:	into   
  413546:	mov    ?,WORD PTR [ebp+ecx*8+0x307ae340]
  41354d:	lock sbb edi,edi
  413550:	dec    esp
  413551:	loop   0x4135a9
  413553:	in     eax,0xef
  413555:	or     BYTE PTR [ebx+0x4bd94d71],dl
  41355b:	adc    BYTE PTR [ecx+esi*4-0x5],cl
  41355f:	xchg   BYTE PTR [edi],cl
  413561:	shr    DWORD PTR [eax],0x90
  413564:	sub    al,bh
  413566:	push   ss
  413567:	and    al,0xf5
  413569:	lea    eax,ds:0xba02c75e
  41356f:	mov    BYTE PTR [edi],dl
  413571:	xchg   esi,eax
  413572:	lahf   
  413573:	fisubr DWORD PTR [esi-0x1f]
  413576:	xchg   esi,eax
  413577:	pop    ecx
  413578:	call   0xe89b:0x6c8fb00a
  41357f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413580:	xlat   BYTE PTR ds:[ebx]
  413581:	pop    ebx
  413582:	pop    ecx
  413583:	or     eax,0x44e944f7
  413588:	jne    0x4135e7
  41358a:	scas   eax,DWORD PTR es:[edi]
  41358b:	adc    esi,DWORD PTR [eax-0x74684e3a]
  413591:	xor    edx,DWORD PTR [esi+0x7e82e1bc]
  413597:	or     ah,BYTE PTR [edx-0x3b]
  41359a:	dec    ebx
  41359b:	daa    
  41359c:	cdq    
  41359d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41359e:	jnp    0x413595
  4135a0:	mov    bl,BYTE PTR [edx+edi*8]
  4135a3:	test   al,0x74
  4135a5:	cmp    DWORD PTR [eax],ebp
  4135a7:	push   ds
  4135a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135a9:	cwde   
  4135aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ab:	gs loope 0x413584
  4135ae:	pop    ebx
  4135af:	(bad)  
  4135b0:	loopne 0x41358e
  4135b2:	xchg   ebx,eax
  4135b3:	inc    ebp
  4135b4:	imul   eax,ebx,0x6c292c5d
  4135ba:	pop    esi
  4135bb:	test   BYTE PTR [eax-0x3],ch
  4135be:	cs pop esi
  4135c0:	xchg   edx,eax
  4135c1:	out    dx,eax
  4135c2:	sub    al,0x1b
  4135c4:	stc    
  4135c5:	fdivr  QWORD PTR [edx-0x51]
  4135c8:	jmp    0x3f25:0x884531e6
  4135cf:	stc    
  4135d0:	dec    ecx
  4135d1:	out    0xa2,al
  4135d3:	or     DWORD PTR [ecx+0x74],esp
  4135d6:	sti    
  4135d7:	dec    ebx
  4135d8:	adc    dl,dh
  4135da:	js     0x4135dd
  4135dc:	adc    DWORD PTR [edi+edx*1-0x7988d377],0x21c10ed3
  4135e7:	(bad)  
  4135e9:	(bad)  
  4135ea:	mov    ecx,0x1d7456f9
  4135ef:	or     bl,BYTE PTR [ecx+0x607d37e3]
  4135f5:	scas   al,BYTE PTR es:[edi]
  4135f6:	adc    esi,DWORD PTR [ebp+0xa]
  4135f9:	in     al,0x64
  4135fb:	(bad)  [edi]
  4135fd:	ds inc edi
  4135ff:	add    BYTE PTR [ecx],bh
  413601:	mov    ecx,0x77cde321
  413606:	jb     0x4135ef
  413608:	cmp    ah,cl
  41360a:	rol    BYTE PTR [ecx-0x6],1
  41360d:	sti    
  41360e:	sub    esi,eax
  413610:	fwait
  413611:	sti    
  413612:	mov    al,ds:0x968766ad
  413617:	add    eax,0xb6351c99
  41361c:	call   0x420f:0x7faf420f
  413623:	xlat   BYTE PTR ds:[ebx]
  413624:	sub    DWORD PTR [esp+esi*4+0x4c],0x23a37db8
  41362c:	inc    edx
  41362d:	jg     0x4135b3
  41362f:	pop    edx
  413630:	pushf  
  413631:	or     BYTE PTR [eax+edx*1-0x73055c07],bh
  413638:	add    esp,DWORD PTR [ebx]
  41363a:	fs mov dl,0x94
  41363d:	jo     0x413696
  41363f:	inc    esp
  413640:	add    BYTE PTR [edi+0x46],0xe3
  413644:	out    0xc2,eax
  413646:	mov    ds:0x1cefe04c,eax
  41364b:	std    
  41364c:	push   es
  41364d:	test   BYTE PTR [esi+0x7e7fb600],cl
  413653:	rcr    BYTE PTR [ebx-0x5f],0x28
  413657:	pcmpeqd mm4,mm4
  41365a:	pop    ebx
  41365b:	inc    edi
  41365c:	out    0x92,al
  41365e:	mov    eax,0x66320f1
  413663:	dec    ebp
  413664:	jle    0x4136be
  413666:	sub    esi,DWORD PTR [edi-0x7]
  413669:	xchg   DWORD PTR [edi+0x600ab865],edx
  41366f:	ror    DWORD PTR [esi],0x7c
  413672:	(bad)  [esi]
  413674:	lea    edi,cs:[esi+0x36b5ae2e]
  41367b:	jle    0x4136c1
  41367d:	pop    eax
  41367e:	test   eax,0xc31582fb
  413683:	pop    ebp
  413684:	nop
  413685:	jmp    0x6ecc:0xc36deef6
  41368c:	imul   ecx,DWORD PTR [esi-0x164f1e0e],0xabbd2cdb
  413696:	lods   eax,DWORD PTR ds:[esi]
  413697:	mov    ecx,0x3ca1d466
  41369c:	loopne 0x413677
  41369e:	mov    esi,0xe2e871eb
  4136a3:	cmp    ebp,ebx
  4136a5:	sub    DWORD PTR [ebx+edi*1-0x70],ebx
  4136a9:	jle    0x4136b7
  4136ab:	(bad)  
  4136ad:	mov    ecx,0x5c0475ec
  4136b2:	idiv   DWORD PTR [edi-0x79]
  4136b5:	nop
  4136b6:	mov    cl,BYTE PTR [edx+edx*4]
  4136b9:	stos   DWORD PTR es:[edi],eax
  4136ba:	mov    BYTE PTR [edx+esi*8-0x59735488],bl
  4136c1:	xchg   edx,eax
  4136c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136c3:	dec    esp
  4136c4:	pop    ds
  4136c5:	ss popf 
  4136c7:	dec    esp
  4136c8:	daa    
  4136c9:	xchg   edi,eax
  4136ca:	fwait
  4136cb:	call   0x60c:0xe9f27314
  4136d2:	xor    eax,0x644fd40c
  4136d7:	cmp    cl,BYTE PTR [eax-0x7b]
  4136da:	jb     0x413665
  4136dc:	imul   edx,DWORD PTR [ebx],0x50
  4136df:	push   ebx
  4136e0:	mov    ecx,0x6fc9361c
  4136e5:	out    0xae,eax
  4136e7:	outs   dx,DWORD PTR ds:[esi]
  4136e8:	enter  0x2f7b,0xaf
  4136ec:	fcom   QWORD PTR [ecx+eax*4+0x577fff8f]
  4136f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f4:	jp     0x41372e
  4136f6:	inc    eax
  4136f7:	mov    eax,0x288de36c
  4136fc:	xor    ch,BYTE PTR [esi-0x665f46e1]
  413702:	outs   dx,DWORD PTR ds:[esi]
  413703:	jl     0x4136b2
  413705:	je     0x41370b
  413707:	fldcw  WORD PTR [edx+edi*2-0x3a]
  41370b:	sbb    ah,BYTE PTR [ebx]
  41370d:	mov    dh,0x1d
  41370f:	adc    ebp,DWORD PTR [esi+0x1c]
  413712:	fistp  WORD PTR [edx*1-0x77fe7d50]
  413719:	push   ebp
  41371a:	ret    0x54df
  41371d:	and    eax,0x4745b310
  413722:	and    ch,ah
  413724:	leave  
  413725:	test   BYTE PTR [esi-0x3c9da2b2],bh
  41372b:	cmp    eax,0xb870a973
  413730:	ret    
  413731:	cmp    BYTE PTR [esp+eiz*8-0x66],al
  413735:	mov    ebp,DWORD PTR [edi]
  413737:	push   ss
  413738:	sub    dh,BYTE PTR [edx+0x1a]
  41373b:	inc    esi
  41373c:	inc    esp
  41373d:	into   
  41373e:	push   ebx
  41373f:	(bad)  
  413740:	jo     0x413763
  413742:	or     bh,BYTE PTR [esp+ebp*4]
  413745:	call   0xb98c7a0d
  41374a:	outs   dx,DWORD PTR ds:[esi]
  41374b:	mov    al,0x3
  41374d:	ror    BYTE PTR [ecx-0x32518c79],cl
  413753:	jge    0x4137b3
  413755:	aad    0xc1
  413757:	xchg   BYTE PTR [ebx-0x6d69f436],dl
  41375d:	sbb    ebp,eax
  41375f:	shr    DWORD PTR [ebx-0x304e2d34],0xc5
  413766:	inc    edi
  413767:	mov    BYTE PTR [edi-0x3],bl
  41376a:	nop
  41376b:	and    DWORD PTR [edx],0xffffffe3
  41376e:	sti    
  41376f:	push   0x22
  413771:	out    dx,al
  413772:	mov    edx,0xb1afed4f
  413777:	push   ss
  413778:	je     0x41370d
  41377a:	aam    0xfa
  41377c:	sbb    DWORD PTR [ecx+esi*1],edi
  41377f:	addr16 ja 0x413768
  413782:	push   ss
  413783:	push   cs
  413784:	clc    
  413785:	dec    ebx
  413786:	sti    
  413787:	adc    ah,BYTE PTR [edi-0x70]
  41378a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41378b:	xchg   bl,bl
  41378d:	mov    ch,0x1a
  41378f:	js     0x413746
  413791:	and    edi,DWORD PTR [ebx+0x1b]
  413794:	sti    
  413795:	xchg   esp,eax
  413796:	adc    ecx,DWORD PTR [esi-0x53]
  413799:	adc    eax,0xb91b0461
  41379e:	sub    ecx,0xd074fd24
  4137a4:	sub    al,0x4d
  4137a6:	cmp    al,0x4a
  4137a8:	xor    cl,dh
  4137aa:	xchg   ecx,eax
  4137ab:	test   DWORD PTR [ecx],edi
  4137ad:	mov    ds,WORD PTR [ebp+ebp*8+0x50]
  4137b1:	adc    DWORD PTR [edi],esi
  4137b3:	das    
  4137b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b5:	enter  0xb8a5,0xd8
  4137b9:	cdq    
  4137ba:	and    esi,DWORD PTR [ebp+0x7ba44651]
  4137c0:	icebp  
  4137c1:	pop    ss
  4137c2:	sbb    BYTE PTR [esi+0x75],cl
  4137c5:	mov    eax,0xccf68e6c
  4137ca:	rcr    DWORD PTR [ecx-0x24],cl
  4137cd:	xor    BYTE PTR [edx+esi*2-0x49],dl
  4137d1:	ins    DWORD PTR es:[edi],dx
  4137d2:	pop    ds
  4137d3:	fdiv   DWORD PTR [edi-0x1c8e0132]
  4137d9:	repnz xor al,0x9c
  4137dc:	test   BYTE PTR [eax+0x15619124],0xe3
  4137e3:	push   esp
  4137e4:	icebp  
  4137e5:	call   0x82a2:0xd8d25355
  4137ec:	rol    DWORD PTR [esi-0x3f],1
  4137ef:	fwait
  4137f0:	out    0x4e,eax
  4137f2:	lds    ebx,FWORD PTR [ebx+0x5d71aad9]
  4137f8:	pop    ecx
  4137f9:	xor    BYTE PTR [edi],bh
  4137fb:	aaa    
  4137fc:	call   0x4f83:0xfe8d96b3
  413803:	pop    ecx
  413804:	(bad)  [edx*4+0x558461e2]
  41380b:	loop   0x4137f5
  41380d:	sti    
  41380e:	test   al,0x73
  413810:	test   BYTE PTR [ebx+0x1c],0x46
  413814:	mov    esp,0x8f3e085
  41381a:	stc    
  41381b:	clc    
  41381c:	jnp    0x41386c
  41381e:	or     eax,0xf3beb084
  413823:	inc    ebx
  413824:	fld    TBYTE PTR [edx]
  413826:	push   edx
  413827:	shl    BYTE PTR ds:0x128ad983,1
  41382d:	mov    esp,0xa148c99b
  413832:	ins    BYTE PTR es:[edi],dx
  413833:	mov    bl,0x8
  413835:	jge    0x41383a
  413837:	jnp    0x413889
  413839:	dec    esp
  41383a:	lods   eax,DWORD PTR ds:[esi]
  41383b:	dec    esp
  41383c:	mov    eax,0x8073e51a
  413841:	add    cl,BYTE PTR [edx]
  413843:	aas    
  413844:	add    dh,BYTE PTR [esi]
  413846:	lds    ebp,FWORD PTR es:[ecx-0x555af043]
  41384d:	mov    eax,edx
  41384f:	aam    0xdd
  413851:	fxch   st(1)
  413853:	sbb    BYTE PTR [ecx+0x55],cl
  413856:	in     al,dx
  413857:	cmp    ah,ch
  413859:	xor    al,0xd6
  41385b:	ret    
  41385c:	sar    DWORD PTR [esi],cl
  41385e:	aam    0x81
  413860:	mov    ah,0xab
  413862:	inc    ecx
  413863:	pop    ss
  413864:	dec    edx
  413865:	or     dh,BYTE PTR [esi+0x35]
  413868:	(bad)  
  413869:	ins    BYTE PTR es:[edi],dx
  41386a:	inc    esi
  41386b:	xor    BYTE PTR [ebx+0x4e888dfb],dh
  413871:	pop    edx
  413872:	push   es
  413873:	mov    ecx,0xa3ca9e58
  413878:	neg    BYTE PTR [ebx-0x2c]
  41387b:	push   es
  41387c:	push   edi
  41387d:	jecxz  0x4138ed
  41387f:	jno    0x413843
  413881:	mov    edi,0x725ea87
  413886:	and    BYTE PTR [edx+0x5c55223a],bh
  41388c:	sar    BYTE PTR ds:0xa0458e82,cl
  413892:	aaa    
  413893:	sub    ch,al
  413895:	imul   edi,DWORD PTR [esi],0xffffff80
  413898:	scas   al,BYTE PTR es:[edi]
  413899:	test   DWORD PTR [ebp+0x56],eax
  41389c:	pop    esi
  41389d:	nop
  41389e:	dec    edi
  41389f:	push   ebp
  4138a0:	test   eax,0xa70d63fd
  4138a5:	add    dl,BYTE PTR [esi-0x34]
  4138a8:	mov    ds:0x552dfe57,al
  4138ad:	xor    al,0xfe
  4138af:	jmp    0x413876
  4138b1:	xor    eax,ebx
  4138b3:	in     eax,0x1a
  4138b5:	push   edi
  4138b6:	int3   
  4138b7:	fisub  WORD PTR [esp+edi*2+0x6a]
  4138bb:	in     al,0x9e
  4138bd:	out    dx,al
  4138be:	ror    ebx,0xe7
  4138c1:	inc    ebx
  4138c2:	jmp    0x413870
  4138c4:	push   es
  4138c5:	add    eax,eax
  4138c7:	xor    edi,edi
  4138c9:	pop    ds
  4138ca:	ja     0x413851
  4138cc:	or     edx,DWORD PTR [esi-0x37]
  4138cf:	dec    eax
  4138d0:	ja     0x41392b
  4138d2:	imul   esp,DWORD PTR [ebx+0x3e4ac84a],0x32
  4138d9:	push   0xffffffaf
  4138db:	xchg   ebx,eax
  4138dc:	out    0x77,eax
  4138de:	jg     0x41388b
  4138e0:	xchg   ecx,eax
  4138e1:	cmp    DWORD PTR [edi-0x5e],edi
  4138e4:	(bad)  
  4138e5:	pop    ebx
  4138e6:	jecxz  0x4138a1
  4138e8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4138ea:	mov    ah,0xd1
  4138ec:	les    ebp,FWORD PTR [ebx]
  4138ee:	pop    ds
  4138ef:	cld    
  4138f0:	sub    al,0x9d
  4138f2:	mov    ebp,0x8db1a3ac
  4138f7:	imul   ecx
  4138f9:	inc    edi
  4138fa:	lods   eax,DWORD PTR ds:[esi]
  4138fb:	loopne 0x4138cd
  4138fd:	fcmovb st,st(0)
  4138ff:	xor    ebp,DWORD PTR [ebp+0x64]
  413902:	dec    esp
  413903:	jl     0x4138c0
  413905:	pop    es
  413906:	les    ebp,FWORD PTR [edx+0x2d]
  413909:	pop    ss
  41390a:	dec    edi
  41390b:	loopne 0x413890
  41390d:	in     al,dx
  41390e:	rcl    BYTE PTR [ebp-0x70],1
  413911:	idiv   DWORD PTR [ecx-0x2]
  413914:	push   0x18051cea
  413919:	jmp    0xfe97:0xd65202c3
  413920:	sar    BYTE PTR [eax-0x23],cl
  413923:	mov    dl,0xd5
  413925:	lahf   
  413926:	pop    ebx
  413927:	out    dx,al
  413928:	sub    edx,0xbe371965
  41392e:	daa    
  41392f:	or     al,BYTE PTR [ebp+0x2f]
  413932:	mov    al,0xe3
  413934:	inc    esp
  413935:	push   ds
  413936:	cld    
  413937:	and    dl,cl
  413939:	pop    edi
  41393a:	scas   al,BYTE PTR es:[edi]
  41393b:	fst    DWORD PTR [edi+ebx*2+0x7e]
  41393f:	ins    BYTE PTR es:[edi],dx
  413940:	leave  
  413941:	idiv   edi
  413943:	js     0x413956
  413945:	and    al,0xd
  413947:	jp     0x4139ae
  413949:	xchg   edx,eax
  41394a:	sub    bh,BYTE PTR [esp+esi*2+0x20]
  41394e:	inc    esi
  41394f:	les    ebx,FWORD PTR [edi+ebx*1]
  413952:	ret    0x3c3a
  413955:	jmp    0x269b49c7
  41395a:	add    eax,DWORD PTR [eax+0x44]
  41395d:	repnz adc al,BYTE PTR [esi+ebx*1]
  413961:	test   DWORD PTR [edx-0x68d15e20],ebx
  413967:	adc    esi,DWORD PTR [ebp+0x31e506f6]
  41396d:	nop
  41396e:	nop
  41396f:	icebp  
  413970:	les    ebp,FWORD PTR [eax]
  413972:	in     eax,0xae
  413974:	test   DWORD PTR [eax+0x23d5ece0],edx
  41397a:	xchg   esp,eax
  41397b:	stc    
  41397c:	pop    ss
  41397d:	push   esi
  41397e:	dec    edi
  41397f:	(bad)  
  413981:	aad    0xbc
  413983:	jge    0x4139ca
  413985:	repz pushf 
  413987:	out    0xf6,eax
  413989:	lahf   
  41398a:	lods   eax,DWORD PTR ds:[esi]
  41398b:	cwde   
  41398c:	jl     0x41398f
  41398e:	cmp    BYTE PTR [eax+0x2abe2901],bl
  413994:	test   al,0xd6
  413996:	pop    ebp
  413997:	adc    ah,BYTE PTR [ebp+0x4a]
  41399a:	mov    cl,0x99
  41399c:	push   ss
  41399d:	pop    edx
  41399e:	lds    esi,FWORD PTR [eax-0x4b1555ea]
  4139a4:	imul   esi,DWORD PTR [edx+0x46],0xf
  4139a8:	and    al,BYTE PTR [ebp+ebp*4+0x4f]
  4139ac:	sub    eax,0x19c47c91
  4139b1:	mov    eax,ds:0x66840020
  4139b6:	dec    edi
  4139b7:	sbb    eax,0x62123ed
  4139bc:	(bad)  
  4139bd:	or     BYTE PTR [ebp+0x1888b68c],bl
  4139c3:	pop    esp
  4139c4:	fdiv   st(2),st
  4139c6:	jb     0x413a26
  4139c8:	retf   0xb2a0
  4139cb:	sahf   
  4139cc:	xchg   DWORD PTR [edi+0x17022ce0],esp
  4139d2:	mov    dl,0x5e
  4139d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d5:	imul   esp,DWORD PTR [ecx-0x5f],0xe5a2793d
  4139dc:	retf   0xc2d9
  4139df:	inc    edx
  4139e0:	out    0x6a,al
  4139e2:	outs   dx,BYTE PTR ds:[esi]
  4139e3:	shl    esi,1
  4139e5:	div    edx
  4139e7:	sahf   
  4139e8:	push   edx
  4139e9:	push   DWORD PTR [edi-0x32]
  4139ec:	add    DWORD PTR [ebp+0x39],edx
  4139ef:	pop    ebx
  4139f0:	outs   dx,DWORD PTR ds:[esi]
  4139f1:	or     edi,ebx
  4139f3:	gs jp  0x4139fc
  4139f6:	adc    DWORD PTR [eax],0xffffffe1
  4139f9:	fistp  QWORD PTR [ebx+ebp*2+0x567e48fb]
  413a00:	xchg   esp,eax
  413a01:	retf   0xbe41
  413a04:	cmp    ecx,ecx
  413a06:	mov    ecx,0x5466f4f9
  413a0b:	mov    dl,0x8b
  413a0d:	(bad)
  413a10:	mov    ah,0xee
  413a12:	sar    BYTE PTR [ecx-0xe03e1f1],0x21
  413a19:	fisttp DWORD PTR [esi+0x4800ed4a]
  413a1f:	pop    eax
  413a20:	pop    gs
  413a22:	fist   WORD PTR [eax]
  413a24:	push   ecx
  413a25:	xchg   ecx,eax
  413a26:	aas    
  413a27:	inc    ebx
  413a28:	in     al,0xbe
  413a2a:	ins    BYTE PTR es:[edi],dx
  413a2b:	fld    TBYTE PTR [edi+esi*4+0x35]
  413a2f:	cld    
  413a30:	or     bh,cl
  413a32:	pop    eax
  413a33:	jl     0x413aa3
  413a35:	push   cs
  413a36:	loopne 0x4139e5
  413a38:	push   edi
  413a39:	aam    0x60
  413a3b:	sub    bl,BYTE PTR [ecx-0x72e9c6f]
  413a41:	imul   edx,edi,0xd43bc16
  413a47:	jbe    0x4139fb
  413a49:	mov    esi,0x535e2f56
  413a4e:	repz (bad) 
  413a50:	in     al,0x5c
  413a52:	adc    eax,0x467b8a33
  413a57:	stos   DWORD PTR es:[edi],eax
  413a58:	es mov esi,0xfabdc5c8
  413a5e:	xlat   BYTE PTR ds:[ebx]
  413a5f:	mov    ?,edx
  413a61:	out    dx,eax
  413a62:	lds    eax,FWORD PTR [ebx+0x61675987]
  413a68:	sub    DWORD PTR [eax],ebp
  413a6a:	inc    esi
  413a6b:	pop    ss
  413a6c:	clc    
  413a6d:	push   ss
  413a6e:	push   ecx
  413a6f:	pushf  
  413a70:	shl    DWORD PTR [edi-0xb],1
  413a73:	les    edx,FWORD PTR [edi]
  413a75:	xchg   BYTE PTR [eax+0x27],dl
  413a78:	add    al,0xaf
  413a7a:	ja     0x413a11
  413a7c:	cmp    BYTE PTR [ebx+ebx*1-0x5f],bl
  413a80:	ins    DWORD PTR es:[edi],dx
  413a81:	call   0xeab43d3a
  413a86:	mov    dl,0x3c
  413a88:	cdq    
  413a89:	adc    DWORD PTR [ecx-0x23b7f84f],eax
  413a8f:	iret   
  413a90:	lods   al,BYTE PTR ds:[esi]
  413a91:	sub    BYTE PTR es:[edi],al
  413a94:	fnsetpm(287 only) 
  413a96:	push   edi
  413a98:	loop   0x413a46
  413a9a:	sar    bl,1
  413a9c:	adc    DWORD PTR [edx+0x29b6c9e],edi
  413aa2:	out    dx,al
  413aa3:	lock cmp DWORD PTR [ecx],edi
  413aa6:	nop
  413aa7:	jmp    0x413b20
  413aa9:	sbb    al,0x19
  413aab:	clc    
  413aac:	and    esp,DWORD PTR [eax+0x27]
  413aaf:	fidiv  WORD PTR [edi+0x73]
  413ab2:	mov    al,ds:0xbe8de281
  413ab7:	xor    dl,cl
  413ab9:	clc    
  413aba:	sahf   
  413abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413abc:	clc    
  413abd:	or     DWORD PTR [ebx-0x59c8c4b1],eax
  413ac3:	or     ebx,ebx
  413ac5:	(bad)  
  413ac6:	je     0x413ac1
  413ac8:	dec    eax
  413ac9:	imul   esp,esi,0xc68818ce
  413acf:	pop    es
  413ad0:	push   cs
  413ad1:	pop    esi
  413ad2:	push   es
  413ad3:	inc    esi
  413ad4:	inc    edx
  413ad5:	sbb    edi,DWORD PTR [esi-0xe]
  413ad8:	jbe    0x413b2d
  413ada:	push   ecx
  413adb:	test   DWORD PTR [ebx+0x61],edi
  413ade:	out    dx,al
  413adf:	push   esi
  413ae0:	push   edi
  413ae1:	xor    BYTE PTR [eax+edx*2],ch
  413ae4:	pop    esp
  413ae5:	jno    0x413a89
  413ae7:	pushf  
  413ae8:	clc    
  413ae9:	lock jmp 0xbaebb011
  413aef:	jle    0x413a74
  413af1:	das    
  413af2:	inc    ebx
  413af3:	and    esp,DWORD PTR [edi]
  413af5:	shl    DWORD PTR [eax+0xba9cd6d],cl
  413afb:	cmp    ah,BYTE PTR [ebp+0x12ad1876]
  413b01:	stos   DWORD PTR es:[edi],eax
  413b02:	test   al,0x3c
  413b04:	sub    BYTE PTR ds:0xb37f3bf5,0x4b
  413b0b:	frstor [eax+ecx*2+0x72]
  413b0f:	in     eax,dx
  413b10:	adc    DWORD PTR [esi-0x1d],ebp
  413b13:	jns    0x413ade
  413b15:	dec    ebx
  413b16:	push   eax
  413b17:	jo     0x413b39
  413b19:	setnp  al
  413b1c:	jbe    0x413b6e
  413b1e:	jns    0x413aaa
  413b20:	xlat   BYTE PTR ds:[ebx]
  413b21:	outs   dx,BYTE PTR ds:[esi]
  413b22:	add    dl,BYTE PTR [ebp+0xc8ce2f0]
  413b28:	and    BYTE PTR [esi-0x52],dh
  413b2b:	mov    DWORD PTR [ebx],ebp
  413b2d:	push   eax
  413b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b2f:	xor    dl,BYTE PTR [edi-0x26]
  413b32:	loope  0x413b6e
  413b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b35:	adc    eax,0xf4ecf0fa
  413b3a:	in     eax,dx
  413b3b:	out    dx,eax
  413b3c:	jg     0x413b0b
  413b3e:	or     eax,0xaee5d826
  413b43:	or     eax,0xee6ac9cc
  413b48:	stc    
  413b49:	jno    0x413b7b
  413b4b:	test   DWORD PTR [ebx-0x44],ebp
  413b4e:	push   es
  413b4f:	xor    al,ch
  413b51:	mov    al,0x57
  413b53:	aas    
  413b54:	fidivr WORD PTR [ebx-0x301ec6b2]
  413b5a:	pop    ecx
  413b5b:	pushf  
  413b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b5d:	push   0xcbd9e50c
  413b62:	cs add eax,0x5e84823d
  413b68:	mov    WORD PTR [edi+0x6],gs
  413b6b:	jns    0x413b41
  413b6d:	js     0x413bea
  413b6f:	ret    
  413b70:	shl    BYTE PTR [edx+0x5d],1
  413b73:	xor    dl,BYTE PTR [edi-0x4d40dfe6]
  413b79:	cwde   
  413b7a:	pusha  
  413b7b:	dec    esi
  413b7c:	mov    edx,0xc9b811f
  413b81:	adc    bl,0xfc
  413b84:	out    0x75,eax
  413b86:	cmovno eax,DWORD PTR fs:[esi+0x1e1527a1]
  413b8e:	dec    ebp
  413b8f:	outs   dx,DWORD PTR ds:[esi]
  413b90:	pop    ss
  413b91:	mov    eax,ds:0x3331b027
  413b96:	push   eax
  413b97:	das    
  413b98:	das    
  413b99:	and    BYTE PTR [ebx+ecx*8],bl
  413b9c:	sar    BYTE PTR [eax-0x3255a52e],cl
  413ba2:	test   al,0xbf
  413ba4:	stos   DWORD PTR es:[edi],eax
  413ba5:	sbb    ecx,DWORD PTR [eax+eax*1]
  413ba8:	pusha  
  413ba9:	loop   0x413b7c
  413bab:	in     al,0xc7
  413bad:	xchg   esp,eax
  413bae:	iret   
  413baf:	(bad)  
  413bb0:	retf   0xd62f
  413bb3:	fistp  DWORD PTR [eax+0x2f]
  413bb6:	in     eax,0xb5
  413bb8:	and    esi,DWORD PTR [eax-0x2]
  413bbb:	sub    ecx,DWORD PTR [eax+0x56]
  413bbe:	xchg   ebp,eax
  413bbf:	xor    DWORD PTR [ebx-0x50],0xffffff9b
  413bc3:	xchg   esi,eax
  413bc4:	cmp    al,0xa8
  413bc6:	sbb    eax,ebx
  413bc8:	add    DWORD PTR [edi-0x65],esp
  413bcb:	cmp    al,0x89
  413bcd:	fistp  WORD PTR [esi]
  413bcf:	inc    edi
  413bd0:	aaa    
  413bd1:	in     al,dx
  413bd2:	daa    
  413bd3:	xor    eax,0x5393b7e4
  413bd8:	jae    0x413bf0
  413bda:	xor    al,0xa9
  413bdc:	int3   
  413bdd:	sti    
  413bde:	outs   dx,BYTE PTR ds:[esi]
  413bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be0:	jp     0x413bff
  413be2:	jb     0x413b9b
  413be4:	mov    ebx,0x71f992cd
  413be9:	sar    BYTE PTR [edx+0x7c],0x45
  413bed:	mov    eax,0x485dbbb3
  413bf2:	and    dl,ch
  413bf4:	sub    BYTE PTR [esi-0x23],bh
  413bf7:	mov    DWORD PTR ds:0x23146685,eax
  413bfd:	icebp  
  413bfe:	mov    edi,0x5119cc8d
  413c03:	loopne 0x413c2c
  413c05:	jp     0x413c17
  413c07:	imul   DWORD PTR ss:[edx-0x7e]
  413c0b:	mov    al,0x73
  413c0d:	xor    DWORD PTR [ebp+0x7bcb7753],esi
  413c13:	fimul  WORD PTR [bp+di]
  413c16:	jno    0x413bfb
  413c18:	mov    edi,0xf24895b2
  413c1d:	test   DWORD PTR [edx-0x61aafbca],eax
  413c23:	arpl   WORD PTR [eax-0x78],bp
  413c26:	jmp    0x413bc9
  413c28:	jl     0x413c69
  413c2a:	inc    eax
  413c2b:	out    0xb1,eax
  413c2d:	mov    DWORD PTR [esi+edi*4+0x38418c6f],edi
  413c34:	pop    ecx
  413c35:	fsubr  st(4),st
  413c37:	xchg   edx,eax
  413c38:	sbb    eax,DWORD PTR [esi-0xd14ad8f]
  413c3e:	dec    esp
  413c3f:	xor    bl,BYTE PTR [edx-0x3e]
  413c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c43:	mov    WORD PTR [ebp+ecx*1+0x2af4331c],fs
  413c4a:	retf   
  413c4b:	in     eax,dx
  413c4c:	outs   dx,BYTE PTR ds:[esi]
  413c4d:	xor    edi,DWORD PTR [edi]
  413c4f:	loope  0x413c4e
  413c51:	sbb    DWORD PTR [eax+ebp*8],edx
  413c54:	ja     0x413ccc
  413c56:	jp     0x413c07
  413c58:	mov    ds:0xfc7e6b18,eax
  413c5d:	and    esi,eax
  413c5f:	cs add bl,ah
  413c62:	outs   dx,BYTE PTR ds:[esi]
  413c63:	arpl   WORD PTR [ecx],bx
  413c65:	jo     0x413cc6
  413c67:	sahf   
  413c68:	and    dh,BYTE PTR [eax]
  413c6a:	repnz inc ebx
  413c6c:	ds js  0x413c2a
  413c6f:	rcl    al,0x5c
  413c72:	mov    ds:0x2c4d9875,eax
  413c77:	xor    BYTE PTR [eax-0x657675dd],dl
  413c7d:	pop    ecx
  413c7e:	jle    0x413c96
  413c80:	mov    al,ds:0x1711e251
  413c85:	cmp    eax,0xad4b5ade
  413c8a:	push   cs
  413c8b:	jmp    0xf84d:0xc75b802e
  413c92:	jl     0x413ce8
  413c94:	or     edx,DWORD PTR [eax-0x50]
  413c97:	cwde   
  413c98:	sbb    eax,0x905bcfe6
  413c9d:	(bad)  
  413c9e:	and    ah,bl
  413ca0:	mov    al,0xa0
  413ca2:	in     al,dx
  413ca3:	sbb    BYTE PTR [edi],dh
  413ca5:	xchg   ebp,eax
  413ca6:	xor    BYTE PTR [ebx],0xdb
  413ca9:	mov    al,0x30
  413cab:	inc    eax
  413cac:	stc    
  413cad:	push   ecx
  413cae:	inc    ebp
  413caf:	jae    0x413d2b
  413cb1:	or     eax,0x5f92f66a
  413cb6:	mov    BYTE PTR [ebp+0x12],cl
  413cb9:	fcomp  QWORD PTR [ebx]
  413cbb:	mov    dl,0x4f
  413cbd:	pop    edi
  413cbe:	add    BYTE PTR [eax-0x307da0d9],0xf9
  413cc5:	outs   dx,BYTE PTR ds:[esi]
  413cc6:	add    bh,dl
  413cc8:	or     al,BYTE PTR [esp+eiz*4]
  413ccb:	arpl   WORD PTR [eax-0x69],cx
  413cce:	sbb    ebx,ebx
  413cd0:	fild   WORD PTR [eax]
  413cd2:	mov    al,ds:0xefcebd77
  413cd7:	stc    
  413cd8:	aam    0xf
  413cda:	pop    es
  413cdb:	scas   eax,DWORD PTR es:[edi]
  413cdc:	scas   al,BYTE PTR es:[edi]
  413cdd:	mov    dl,0x8e
  413cdf:	xchg   esp,eax
  413ce0:	pop    esp
  413ce1:	(bad)  [edx+0x22f7bd7b]
  413ce7:	jg     0x413c7f
  413ce9:	adc    al,0xc9
  413ceb:	dec    ebx
  413cec:	fstp   TBYTE PTR [ebx+0x75]
  413cef:	out    dx,al
  413cf0:	sbb    esp,DWORD PTR [edi]
  413cf2:	retf   
  413cf3:	add    BYTE PTR [eax+0x7a],bh
  413cf6:	dec    ebp
  413cf7:	(bad)  [esi]
  413cf9:	pop    ds
  413cfa:	leave  
  413cfb:	cmp    eax,0x508e8668
  413d00:	xchg   ebp,eax
  413d01:	ss inc esp
  413d03:	jne    0x413d60
  413d05:	js     0x413d33
  413d07:	xchg   ecx,eax
  413d08:	or     al,0x52
  413d0a:	push   ds
  413d0b:	outs   dx,BYTE PTR ds:[esi]
  413d0c:	fild   WORD PTR [edi+ebx*1-0x37]
  413d10:	fld    TBYTE PTR [ecx-0xa261b]
  413d16:	das    
  413d17:	cwde   
  413d18:	pushf  
  413d19:	ins    DWORD PTR es:[edi],dx
  413d1a:	lea    ebx,[ebx+0x22aeb608]
  413d20:	push   ecx
  413d21:	xchg   esi,eax
  413d22:	data16 jns 0x413d00
  413d25:	mov    dl,0x7a
  413d27:	add    ah,BYTE PTR [ebx+0x521c8b8b]
  413d2d:	push   edx
  413d2e:	les    ebp,FWORD PTR [edi]
  413d30:	or     BYTE PTR [esi-0x6634a1b8],0x76
  413d37:	cmc    
  413d38:	mov    bl,BYTE PTR [ebp+0xe]
  413d3b:	sub    DWORD PTR [ebp-0x4a66cfa3],0x9c788181
  413d45:	push   ebp
  413d46:	shl    BYTE PTR [ebp+esi*2-0x3f],0x40
  413d4b:	mov    esp,0x4af6a4fd
  413d50:	cmp    BYTE PTR [ebx+eiz*4+0x6],ch
  413d54:	not    BYTE PTR [esi+0x317fbdb4]
  413d5a:	ins    BYTE PTR es:[edi],dx
  413d5b:	mov    ch,0xa7
  413d5d:	or     DWORD PTR [ecx],0xffffffdb
  413d60:	mov    eax,ds:0xb512c4cb
  413d65:	lea    edx,[ebp+0x31e2b948]
  413d6b:	inc    esp
  413d6c:	cmp    eax,0x40008ff0
  413d71:	test   al,0x40
  413d73:	sbb    al,0x82
  413d75:	aas    
  413d76:	shl    DWORD PTR [edi],1
  413d78:	or     DWORD PTR [ecx+0x3ff6f377],esi
  413d7e:	pop    edx
  413d7f:	std    
  413d80:	es addr16 push eax
  413d83:	bound  edi,QWORD PTR [eax+edx*4+0x12]
  413d87:	pop    edi
  413d88:	mov    al,ds:0xe5c9156a
  413d8d:	mov    fs,WORD PTR [ebp+0x3d]
  413d90:	jmp    0x7d188e78
  413d95:	mov    edi,0xa9cd1177
  413d9a:	cmp    al,0xa1
  413d9c:	push   cs
  413d9d:	call   0xc240:0x5a9efef1
  413da4:	shr    DWORD PTR [ecx-0x71],1
  413da7:	fstp   DWORD PTR [eax]
  413da9:	adc    BYTE PTR [ebx+esi*2-0x51],dl
  413dad:	imul   edx,DWORD PTR [esi-0x26],0x62
  413db1:	scas   al,BYTE PTR es:[edi]
  413db2:	test   eax,0x61e4b425
  413db7:	dec    ebx
  413db8:	xchg   edi,eax
  413db9:	pop    edx
  413dba:	pop    ecx
  413dbb:	into   
  413dbc:	push   es
  413dbd:	add    DWORD PTR [eax-0x4a],ecx
  413dc0:	sbb    dl,dl
  413dc2:	add    al,0x4a
  413dc4:	or     BYTE PTR [ebx],0x8d
  413dc7:	ror    BYTE PTR [eax+0x56d2859f],1
  413dcd:	pushf  
  413dce:	mov    eax,0xb0975c32
  413dd3:	mov    edi,0x5441a3da
  413dd8:	ja     0x413d8c
  413dda:	sub    BYTE PTR [ebx-0x77],ah
  413ddd:	out    dx,eax
  413dde:	pushf  
  413ddf:	pop    ebp
  413de0:	jmp    DWORD PTR fs:0x4d1e9c4d
  413de7:	int    0xbe
  413de9:	jp     0x413daf
  413deb:	daa    
  413dec:	push   ecx
  413ded:	(bad)  
  413dee:	js     0x413e35
  413df0:	stc    
  413df1:	add    esp,ebp
  413df3:	(bad)  [ebx]
  413df5:	xchg   esp,eax
  413df6:	mov    cl,BYTE PTR [esi]
  413df8:	sbb    BYTE PTR [edi+ebp*4],ch
  413dfb:	out    0x24,al
  413dfd:	test   eax,ebx
  413dff:	dec    edi
  413e00:	ds out 0x56,eax
  413e03:	lds    ebp,FWORD PTR [ebx+0x6126f5b8]
  413e09:	push   0x67
  413e0b:	mov    dh,0xc3
  413e0d:	or     esi,DWORD PTR ds:[eax-0x5554a900]
  413e14:	pop    es
  413e15:	xor    al,0x80
  413e17:	pshufw mm6,mm5,0x7d
  413e1b:	cmp    BYTE PTR [edx+0x49],0x11
  413e1f:	scas   eax,DWORD PTR es:[edi]
  413e20:	(bad)  
  413e21:	div    DWORD PTR [esi+0x2db4af8e]
  413e27:	mov    al,0x73
  413e29:	cli    
  413e2a:	adc    eax,0x6c4fb541
  413e2f:	dec    ebx
  413e30:	(bad)  
  413e31:	cs into 
  413e33:	dec    ebx
  413e34:	xor    al,0xf
  413e36:	ins    DWORD PTR es:[edi],dx
  413e37:	out    dx,al
  413e38:	push   ebp
  413e39:	mov    cl,0xc6
  413e3b:	ret    0xa5df
  413e3e:	mov    ecx,0x53dfec
  413e43:	sti    
  413e44:	fdivp  st(4),st
  413e46:	mov    ds:0xe659d939,al
  413e4b:	push   esi
  413e4c:	loop   0x413e30
  413e4e:	xchg   DWORD PTR [edi-0x6acaab4c],ebp
  413e54:	minps  xmm3,XMMWORD PTR [esi+0x25]
  413e58:	inc    esi
  413e59:	scas   al,BYTE PTR es:[edi]
  413e5a:	jp     0x413e27
  413e5c:	mov    al,ds:0xbfbebc0b
  413e61:	pop    es
  413e62:	cs xchg ecx,eax
  413e64:	lahf   
  413e65:	je     0x413e59
  413e67:	je     0x413dfe
  413e69:	mov    gs,WORD PTR [edi]
  413e6b:	cmp    ch,BYTE PTR [ecx+0x51afa708]
  413e71:	les    ecx,FWORD PTR [ecx+0x6d]
  413e74:	nop
  413e75:	cmp    bl,cl
  413e77:	xlat   BYTE PTR ds:[ebx]
  413e78:	pop    edx
  413e79:	loope  0x413e4d
  413e7b:	ss jae 0x413ea5
  413e7e:	pop    esi
  413e7f:	sub    eax,0x51d31b7c
  413e84:	mov    edx,0x10c733de
  413e89:	push   eax
  413e8a:	scas   eax,DWORD PTR es:[edi]
  413e8b:	js     0x413e1c
  413e8d:	ja     0x413ee9
  413e8f:	add    eax,0xb737bf7c
  413e94:	and    DWORD PTR [edi+esi*2-0x4c66199e],esi
  413e9b:	sbb    DWORD PTR [eax-0x66dda887],edx
  413ea1:	mov    bh,0x64
  413ea3:	addr16 push ecx
  413ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ea6:	adc    eax,0xaf777d1c
  413eab:	(bad)  
  413eac:	jecxz  0x413ea8
  413eae:	mov    ebp,0x620ca9d0
  413eb3:	sub    eax,DWORD PTR [ebp-0x4d6ba84a]
  413eb9:	daa    
  413eba:	(bad)  
  413ebc:	dec    BYTE PTR ds:0x72e29f06
  413ec2:	push   0x4be7e696
  413ec7:	pop    ecx
  413ec8:	push   ebx
  413ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eca:	sub    ecx,eax
  413ecc:	into   
  413ecd:	mov    WORD PTR [ebp-0x45e64b79],cs
  413ed3:	mov    dl,0xc5
  413ed5:	jge    0x413ea7
  413ed7:	lods   eax,DWORD PTR ds:[esi]
  413ed8:	outs   dx,DWORD PTR ds:[esi]
  413ed9:	jne    0x413ef9
  413edb:	ficom  DWORD PTR [esi+ebx*2-0x25]
  413edf:	sahf   
  413ee0:	or     DWORD PTR ds:0x981aeecc,ebp
  413ee6:	shl    dl,cl
  413ee8:	sbb    eax,DWORD PTR [eax+esi*4]
  413eeb:	jp     0x413ee5
  413eed:	int3   
  413eee:	mov    dl,0xeb
  413ef0:	loope  0x413f5a
  413ef2:	push   DWORD PTR [eax-0xc]
  413ef5:	in     eax,0xbb
  413ef7:	jp     0x413f61
  413ef9:	xchg   ebx,eax
  413efa:	inc    esp
  413efb:	sub    BYTE PTR [esi+0xd],dl
  413efe:	fiadd  DWORD PTR [edx+0x77fb28d2]
  413f04:	lahf   
  413f05:	add    esp,DWORD PTR [ebx-0x1973f7ed]
  413f0b:	adc    ch,dl
  413f0d:	pop    ds
  413f0e:	add    BYTE PTR [ecx],bl
  413f10:	xchg   DWORD PTR [eax],ebx
  413f12:	mov    eax,ds:0x2befe321
  413f17:	pop    es
  413f18:	sub    BYTE PTR [esi-0x29],0x81
  413f1c:	lods   eax,DWORD PTR ds:[esi]
  413f1d:	mov    edx,0x3aac8696
  413f22:	ins    BYTE PTR es:[edi],dx
  413f23:	(bad)  
  413f24:	pop    ds
  413f25:	je     0x413f00
  413f27:	adc    ecx,DWORD PTR [ebp+0x3ea1d7b7]
  413f2d:	ret    
  413f2e:	mov    eax,ds:0x138c4514
  413f33:	arpl   WORD PTR [esi],ax
  413f35:	push   ds
  413f36:	adc    eax,0xfc2a885f
  413f3b:	(bad)  
  413f3c:	stc    
  413f3d:	push   ss
  413f3e:	push   ebx
  413f3f:	(bad)  [ebx-0x56cfa1d3]
  413f45:	mov    al,0xb4
  413f47:	xor    ebp,ebp
  413f49:	ret    
  413f4a:	sub    al,0x94
  413f4c:	dec    DWORD PTR [edx-0x1d]
  413f4f:	adc    edx,DWORD PTR [ecx+0x28e046c4]
  413f55:	sahf   
  413f56:	mov    ecx,0x744576d5
  413f5b:	daa    
  413f5c:	int    0xe1
  413f5e:	sub    ebp,edx
  413f60:	les    ecx,FWORD PTR [edx+eiz*2+0x5d]
  413f64:	shl    BYTE PTR [edx-0x1d],0xd5
  413f68:	jmp    0x97b554f3
  413f6d:	in     eax,0xf2
  413f6f:	retf   0x18b3
  413f72:	push   ds
  413f73:	outs   dx,BYTE PTR ds:[esi]
  413f74:	or     cl,BYTE PTR [ebx+0x77]
  413f77:	(bad)  
  413f78:	xchg   ebx,eax
  413f79:	push   edx
  413f7a:	add    eax,0xcf48bbbe
  413f7f:	test   eax,0x888fb1a2
  413f84:	stos   BYTE PTR es:[edi],al
  413f85:	popa   
  413f86:	sar    BYTE PTR [eax+0x48],1
  413f89:	cmp    al,0xbc
  413f8b:	xchg   BYTE PTR [ecx-0x32],al
  413f8e:	add    ch,BYTE PTR [eax-0x43]
  413f91:	xlat   BYTE PTR ds:[ebx]
  413f92:	out    dx,al
  413f93:	add    al,0xeb
  413f95:	cmp    cl,dh
  413f97:	shr    BYTE PTR [edi-0x5d9d43d2],0x60
  413f9e:	pop    es
  413f9f:	and    BYTE PTR [ebx-0x7d],dh
  413fa2:	das    
  413fa3:	fidiv  WORD PTR [ebp+ebx*4-0x1d]
  413fa7:	xor    BYTE PTR [edx-0x48dc3a72],ch
  413fad:	pop    ecx
  413fae:	xchg   esp,eax
  413faf:	lock inc ecx
  413fb1:	les    ebx,FWORD PTR [ecx-0x5d]
  413fb4:	xor    bh,BYTE PTR [ebp-0x3b]
  413fb7:	ret    
  413fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb9:	sahf   
  413fba:	mov    ds:0xea6d4a90,al
  413fbf:	mov    dh,0xd1
  413fc1:	ins    BYTE PTR es:[edi],dx
  413fc2:	push   es
  413fc3:	test   BYTE PTR [ecx],al
  413fc5:	and    dl,al
  413fc7:	enter  0xdacf,0xf2
  413fcb:	aad    0x6c
  413fcd:	ja     0x413fe7
  413fcf:	pop    ebp
  413fd0:	fiadd  WORD PTR [ebp-0x75044958]
  413fd6:	mov    ah,0xc5
  413fd8:	outs   dx,BYTE PTR ds:[esi]
  413fd9:	add    DWORD PTR [ecx+ebp*1],esp
  413fdc:	leave  
  413fdd:	xchg   edx,eax
  413fde:	jae    0x413f8d
  413fe0:	pop    eax
  413fe1:	mov    ebx,0xaff8d23b
  413fe6:	and    dl,BYTE PTR [ebx]
  413fe8:	mov    DWORD PTR [eax],eax
  413fea:	rcl    DWORD PTR [edx],0xd0
  413fed:	iret   
  413fee:	out    0x18,eax
  413ff0:	xor    eax,0xb3606341
  413ff5:	adc    al,0xa5
  413ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ff8:	xor    al,ah
  413ffa:	ss inc ebp
  413ffc:	cmp    ch,BYTE PTR [edi-0xb38c6b4]
  414002:	mov    ds:0xc190d747,al
  414007:	aas    
  414008:	sub    DWORD PTR [ecx+0x14],0x58288ad1
  41400f:	fldl2t 
  414011:	mov    edx,0xa9d61934
  414016:	in     al,0xf5
  414018:	dec    edi
  414019:	into   
  41401a:	arpl   WORD PTR [edi+0x7c],bp
  41401d:	push   0x474eaab4
  414022:	std    
  414023:	xor    eax,0x444a8443
  414028:	out    dx,eax
  414029:	sub    DWORD PTR [ebx-0x6573b11c],ecx
  41402f:	jmp    0x721fd958
  414034:	stc    
  414035:	pop    edi
  414036:	sbb    eax,0x71837ea2
  41403b:	pop    ecx
  41403c:	add    al,0xa4
  41403e:	sub    DWORD PTR [edx+0x874557a],eax
  414044:	fld    TBYTE PTR [eax-0x4a]
  414047:	add    BYTE PTR [ebx+0x374dca99],0xde
  41404e:	sub    eax,DWORD PTR [esi+0x7b4ced56]
  414054:	jmp    0xb1ff:0x1b1197d
  41405b:	sbb    BYTE PTR [eax+0x55870c44],bh
  414061:	pop    es
  414062:	add    eax,0x8bf32f6a
  414067:	mov    ecx,DWORD PTR [ecx-0xbe027d4]
  41406d:	rep fs ins BYTE PTR es:[edi],dx
  414070:	xlat   BYTE PTR ds:[ebx]
  414071:	imul   DWORD PTR [ebx-0x2a425e5b]
  414077:	(bad)  
  414078:	xor    DWORD PTR [ecx],ebx
  41407a:	or     ch,ch
  41407c:	pause  
  41407e:	jge    0x414003
  414080:	call   0x555d:0xbf7d5e27
  414087:	add    al,0x35
  414089:	xchg   edx,eax
  41408a:	jge    0x4140cd
  41408c:	adc    BYTE PTR [edx+eax*8],0xe5
  414090:	bsf    edx,DWORD PTR [ecx]
  414093:	aaa    
  414094:	add    al,BYTE PTR [eax+0x13]
  414097:	add    dl,0x56
  41409a:	or     eax,0xe0d78820
  41409f:	(bad)  
  4140a0:	cmp    ebx,ebp
  4140a2:	mov    eax,ds:0xf69c7910
  4140a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a8:	dec    ecx
  4140a9:	adc    DWORD PTR [edi],ebp
  4140ab:	add    BYTE PTR [ebx-0xa],cl
  4140ae:	mov    dh,0x20
  4140b0:	xchg   ecx,eax
  4140b1:	cwde   
  4140b2:	push   edi
  4140b3:	fsubr  QWORD PTR [edx-0x1148a671]
  4140b9:	pop    es
  4140ba:	push   cs
  4140bb:	bound  ecx,QWORD PTR [eax+0x50f40d7]
  4140c1:	repz std 
  4140c3:	pushf  
  4140c4:	jl     0x41413d
  4140c6:	push   eax
  4140c7:	aas    
  4140c8:	xchg   DWORD PTR [ebx],esi
  4140ca:	adc    dh,0xdd
  4140cd:	xor    ch,BYTE PTR [esi*4-0x7ec52463]
  4140d4:	or     ebp,esi
  4140d6:	push   edx
  4140d7:	aas    
  4140d8:	ins    DWORD PTR es:[edi],dx
  4140d9:	inc    ebx
  4140da:	rcr    ah,0x33
  4140dd:	or     ch,BYTE PTR [edi+0x1]
  4140e0:	imul   esp,esp,0x2e
  4140e3:	fadd   DWORD PTR [esi+edi*8]
  4140e6:	pusha  
  4140e7:	in     eax,dx
  4140e8:	dec    esi
  4140e9:	mov    ah,ch
  4140eb:	sbb    DWORD PTR [edx],ecx
  4140ed:	add    DWORD PTR [edx-0x5f3014f7],0xffffffa7
  4140f4:	daa    
  4140f5:	and    eax,0x4dbbfa34
  4140fa:	xlat   BYTE PTR ds:[ebx]
  4140fb:	call   0x879b:0x60ab3e45
  414102:	fistp  QWORD PTR [esi-0x7f]
  414105:	hlt    
  414106:	mov    WORD PTR [edi+0x3e84c0b6],es
  41410c:	xchg   ecx,eax
  41410d:	ffree  st(3)
  41410f:	add    DWORD PTR [ebx+0x32137891],ecx
  414115:	dec    esp
  414116:	fistp  WORD PTR [ebp+0x1c]
  414119:	adc    DWORD PTR fs:[esi],0xffffffa3
  41411d:	dec    eax
  41411e:	mov    ah,0x3b
  414120:	jle    0x4140e9
  414122:	jge    0x414129
  414124:	jmp    0x34b53592
  414129:	jbe    0x414115
  41412b:	mov    eax,0x9a0cc27f
  414130:	push   ebx
  414131:	ins    BYTE PTR es:[edi],dx
  414132:	test   BYTE PTR [ebx+0x548684e7],0xd4
  414139:	ret    0x717
  41413c:	mul    DWORD PTR [ebp+eiz*8-0x64ce9186]
  414143:	pop    edx
  414144:	or     esi,DWORD PTR [edx-0x54]
  414147:	stos   BYTE PTR es:[edi],al
  414148:	push   0x36
  41414a:	cmp    ebx,DWORD PTR [eax+edi*2+0x7f38d70e]
  414151:	fmul   DWORD PTR [edi+0x41]
  414154:	icebp  
  414155:	ds out 0x6e,al
  414158:	std    
  414159:	rol    DWORD PTR [eax-0x6d],1
  41415c:	and    BYTE PTR [edi],dl
  41415e:	or     esi,DWORD PTR [edx+0x6a]
  414161:	or     al,0x8a
  414163:	inc    eax
  414164:	xor    BYTE PTR [eax],dh
  414166:	mov    bl,0xb9
  414168:	call   0x2d09d02b
  41416d:	aaa    
  41416e:	inc    esi
  41416f:	fld    QWORD PTR [edx+0x582dd9e8]
  414175:	loop   0x414147
  414177:	push   ds
  414178:	xchg   ecx,eax
  414179:	fs scas eax,DWORD PTR es:[edi]
  41417b:	dec    esp
  41417c:	test   eax,0x2d029d96
  414181:	(bad)  [ecx]
  414183:	aaa    
  414184:	xchg   edx,eax
  414185:	out    dx,al
  414186:	sar    DWORD PTR [ecx],1
  414188:	inc    esp
  414189:	mov    edi,0xc73084be
  41418e:	test   al,0x6f
  414190:	mov    al,ds:0x2307922a
  414195:	sbb    eax,0x875120c8
  41419a:	stc    
  41419b:	cmp    BYTE PTR [ecx+0x386ee831],0x34
  4141a2:	dec    esp
  4141a3:	pop    ss
  4141a4:	pop    es
  4141a5:	retf   
  4141a6:	popa   
  4141a7:	sar    DWORD PTR [edi],cl
  4141a9:	inc    ebx
  4141aa:	gs cli 
  4141ac:	sbb    esi,DWORD PTR [ebp-0x7e]
  4141af:	and    dh,BYTE PTR [ebx-0x20]
  4141b2:	jb     0x414204
  4141b4:	jmp    0x41419b
  4141b6:	push   esi
  4141b7:	mov    ds,WORD PTR [ecx+0x6b49e09e]
  4141bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141be:	and    eax,0xffffffad
  4141c1:	mov    esp,0x53433e18
  4141c6:	sbb    eax,0xb16b0c31
  4141cb:	jecxz  0x41424c
  4141cd:	jmp    0xec4b7839
  4141d2:	xor    esp,DWORD PTR [ebx]
  4141d4:	push   esi
  4141d5:	popf   
  4141d6:	lea    esi,[esi]
  4141d8:	inc    ecx
  4141d9:	mov    eax,ds:0xd5ccdb18
  4141de:	jo     0x414170
  4141e0:	bound  ebp,QWORD PTR [ecx+0x6a]
  4141e3:	xchg   edx,eax
  4141e4:	mov    BYTE PTR [ebx-0x76e79fda],ah
  4141ea:	out    0xb,eax
  4141ec:	dec    ebx
  4141ed:	and    dl,bl
  4141ef:	xchg   DWORD PTR [edi+ebp*2+0x25fe0113],esi
  4141f6:	ret    
  4141f7:	mov    al,ds:0x9237dbc
  4141fc:	jae    0x4141ac
  4141fe:	mov    al,0x14
  414200:	sbb    DWORD PTR [ebx],edi
  414202:	loopne 0x414214
  414204:	mov    dh,0xc2
  414206:	lods   al,BYTE PTR ds:[esi]
  414207:	jge    0x4141f6
  414209:	pop    ebp
  41420a:	pop    ecx
  41420b:	xchg   DWORD PTR [edx+0x3baa9444],esp
  414211:	mov    dh,0xb7
  414213:	mov    bl,0x17
  414215:	das    
  414216:	daa    
  414217:	outs   dx,BYTE PTR ds:[esi]
  414218:	shl    dl,cl
  41421a:	mov    edi,esp
  41421c:	div    BYTE PTR [esi+0x31]
  41421f:	adc    eax,0xeeb8aced
  414224:	and    DWORD PTR [edx+0x26],0xf584f984
  41422b:	repz xchg edx,eax
  41422d:	cmp    esi,DWORD PTR [ecx+0x5fbfaa97]
  414233:	es push ds
  414235:	mov    ah,0x98
  414237:	adc    DWORD PTR [ebx],ecx
  414239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41423a:	(bad)  
  41423b:	push   ds
  41423c:	data16 jp 0x4141ca
  41423f:	mov    cs,ecx
  414241:	jmp    0x41422b
  414243:	outs   dx,BYTE PTR ds:[esi]
  414244:	pop    ss
  414245:	push   edi
  414246:	stc    
  414247:	out    dx,al
  414248:	cmp    BYTE PTR [edx-0x57],dh
  41424b:	bound  esi,QWORD PTR [edx+0x76]
  41424e:	xchg   esi,eax
  41424f:	xor    DWORD PTR [ebp+0x76],ecx
  414252:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414254:	loop   0x414250
  414256:	sbb    eax,DWORD PTR [ecx]
  414258:	mov    ds,WORD PTR [edi-0x32]
  41425b:	retf   0x1992
  41425e:	je     0xb2f42427
  414264:	jbe    0x4141ff
  414266:	pop    edi
  414267:	sub    DWORD PTR [edi],ebx
  414269:	into   
  41426a:	pop    ss
  41426b:	or     edi,ebp
  41426d:	std    
  41426e:	sub    ch,BYTE PTR [edx-0x28883c9d]
  414274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414275:	jmp    0x164b02a6
  41427a:	repz jo 0x4142e6
  41427d:	jg     0x414238
  41427f:	add    al,0x50
  414281:	jmp    0x47f1:0x27ae8fee
  414288:	xchg   edx,eax
  414289:	adc    al,bl
  41428b:	adc    eax,0x3af12c18
  414290:	lock dec esp
  414292:	cmp    edx,DWORD PTR [eax*4+0x7fc5653d]
  414299:	mov    si,0xce34
  41429d:	jne    0x414272
  41429f:	in     eax,dx
  4142a0:	ins    DWORD PTR es:[edi],dx
  4142a1:	loopne 0x41430c
  4142a3:	mov    edi,0xa15ba6b8
  4142a8:	loop   0x4142df
  4142aa:	or     edi,eax
  4142ac:	icebp  
  4142ad:	lahf   
  4142ae:	mov    eax,0x67ab683a
  4142b3:	jne    0x4142f2
  4142b5:	pop    ebp
  4142b6:	add    bh,BYTE PTR [ebp+0x6e]
  4142b9:	mov    ebp,0x261a5e52
  4142be:	fimul  WORD PTR [eax+0x28]
  4142c1:	dec    ecx
  4142c2:	xor    DWORD PTR [edi+edi*1],ecx
  4142c5:	aad    0x5b
  4142c7:	xor    al,0xf2
  4142c9:	pushf  
  4142ca:	out    dx,al
  4142cb:	push   edx
  4142cc:	mov    eax,0xecedb975
  4142d1:	dec    ebx
  4142d2:	rol    DWORD PTR [esp+edi*8-0x4d],0xdf
  4142d7:	(bad)  
  4142d8:	imul   edi,DWORD PTR [esi-0x77],0xffffff8b
  4142dc:	jmp    0x2a0337e3
  4142e1:	out    dx,al
  4142e2:	or     ah,BYTE PTR [ebp+0x40]
  4142e5:	push   ss
  4142e6:	and    al,0x96
  4142e8:	fidivr DWORD PTR [esi+0x5df901f0]
  4142ee:	cmp    BYTE PTR [ebx],bh
  4142f0:	pop    es
  4142f1:	sub    esp,DWORD PTR [ebx+0x7d6f8a3d]
  4142f7:	sahf   
  4142f8:	aas    
  4142f9:	push   ss
  4142fa:	push   0x801ab6ff
  4142ff:	add    dl,BYTE PTR [edx]
  414301:	ja     0x414335
  414303:	ins    BYTE PTR es:[edi],dx
  414304:	pop    ss
  414305:	jecxz  0x4142ba
  414307:	mov    ecx,0x4819ea29
  41430c:	fwait
  41430d:	lahf   
  41430e:	lock xchg esi,eax
  414310:	das    
  414311:	fwait
  414312:	cmp    esp,ebp
  414314:	mov    eax,ds:0x534375cf
  414319:	arpl   WORD PTR [edx+0x4eb2d134],bp
  41431f:	pusha  
  414320:	in     al,dx
  414321:	dec    ebx
  414322:	mov    eax,0xf0534925
  414327:	in     al,0xf9
  414329:	push   ds
  41432a:	rcr    DWORD PTR [edx+0x21],cl
  41432d:	sub    esp,esi
  41432f:	out    dx,al
  414330:	xor    eax,0x4e097e5d
  414335:	ins    BYTE PTR es:[edi],dx
  414336:	out    0x48,eax
  414338:	add    DWORD PTR [eax-0x7c],ebp
  41433b:	ja     0x4143b7
  41433d:	mov    WORD PTR [ecx-0x4d761486],?
  414343:	daa    
  414344:	and    BYTE PTR [edi],bl
  414346:	mov    esi,0xe27558e5
  41434b:	clc    
  41434c:	sbb    ecx,eax
  41434e:	mov    ch,0x24
  414350:	or     dl,BYTE PTR [edi-0x6452129b]
  414356:	pop    esp
  414357:	pusha  
  414358:	shl    DWORD PTR [edi+0x68b76c69],1
  41435e:	sub    dh,al
  414360:	int    0x8c
  414362:	or     esi,DWORD PTR [edi+0x1029b801]
  414368:	cmp    ah,BYTE PTR ds:0x46c13837
  41436e:	sbb    dh,BYTE PTR [ecx+0x5a]
  414371:	shr    edx,1
  414373:	push   0x52
  414375:	pusha  
  414376:	dec    edi
  414377:	scas   al,BYTE PTR es:[edi]
  414378:	add    BYTE PTR [ebx],dl
  41437a:	push   cs
  41437b:	(bad)  
  41437c:	call   0xae61b698
  414381:	xchg   ebx,eax
  414382:	scas   al,BYTE PTR es:[edi]
  414383:	and    ecx,0xffffffe5
  414386:	add    al,0xe6
  414388:	cmc    
  414389:	pop    es
  41438a:	out    0x7a,eax
  41438c:	jnp    0x414399
  41438e:	clc    
  41438f:	and    edx,DWORD PTR [esi]
  414391:	or     ebx,edi
  414393:	mov    esp,DWORD PTR cs:[ebx+0x3c2ce91c]
  41439a:	cld    
  41439b:	je     0x41434a
  41439d:	or     ah,dh
  41439f:	mov    ecx,0xa54e0246
  4143a4:	dec    esi
  4143a5:	cmp    dl,BYTE PTR [edx]
  4143a7:	stc    
  4143a8:	ins    BYTE PTR es:[edi],dx
  4143a9:	add    BYTE PTR [esi-0x19],dl
  4143ac:	sbb    DWORD PTR [ebx+0x3c],edx
  4143af:	sbb    edi,DWORD PTR [edx+0x20]
  4143b2:	sbb    al,0x8b
  4143b4:	aaa    
  4143b5:	push   esp
  4143b6:	icebp  
  4143b7:	jg     0x4143f8
  4143b9:	call   0xf73b:0x3b404401
  4143c0:	dec    edi
  4143c1:	sar    BYTE PTR [ecx],0xd7
  4143c4:	sbb    edx,ebp
  4143c6:	sub    BYTE PTR [eax-0x18],bl
  4143c9:	xchg   esi,eax
  4143ca:	jp     0x41443c
  4143cc:	fmul   DWORD PTR [esi+0x332363ea]
  4143d2:	(bad)  
  4143d4:	punpcklbw mm5,DWORD PTR [esi+0x381328]
  4143db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143dc:	clc    
  4143dd:	push   0x7e300be3
  4143e2:	push   esp
  4143e3:	icebp  
  4143e4:	into   
  4143e5:	jle    0x414430
  4143e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143e8:	or     ebp,DWORD PTR [edx+edi*8-0x38]
  4143ec:	or     eax,0x42dfe4f
  4143f1:	xor    DWORD PTR [esi-0x63428e6],ecx
  4143f7:	dec    ecx
  4143f8:	pushf  
  4143f9:	pop    esi
  4143fa:	or     ecx,DWORD PTR [edi+0x7b]
  4143fd:	mov    ecx,gs
  4143ff:	jmp    0x414470
  414401:	aam    0x61
  414403:	lds    ecx,FWORD PTR [ecx-0x2a]
  414406:	push   0x30
  414408:	outs   dx,BYTE PTR ds:[esi]
  414409:	ror    BYTE PTR [edx+0x2b48bad3],1
  41440f:	scas   al,BYTE PTR es:[edi]
  414410:	xchg   edi,eax
  414411:	and    ch,bh
  414413:	(bad)  
  414414:	(bad)  
  414415:	out    dx,eax
  414416:	scas   al,BYTE PTR es:[edi]
  414417:	sub    eax,0x5fd3031f
  41441c:	adc    al,0x39
  41441e:	mov    al,ds:0xadde3cba
  414423:	inc    edi
  414424:	cmp    eax,0xdee8ee08
  414429:	mov    ebp,0x70d510e9
  41442e:	loop   0x4143ec
  414430:	out    0x9f,al
  414432:	pop    ss
  414433:	or     al,0xd6
  414435:	and    BYTE PTR [eax+0x5e28c088],ch
  41443b:	ret    
  41443c:	out    dx,eax
  41443d:	pop    edi
  41443e:	imul   ebp,DWORD PTR [ebx+0x68f32e38],0x224ccdf4
  414448:	in     al,0xb9
  41444a:	gs push 0xffffffa0
  41444d:	retf   
  41444e:	mov    WORD PTR [ecx],cs
  414450:	or     eax,0x5ff97b68
  414455:	dec    ecx
  414456:	bound  edx,QWORD PTR [ecx]
  414458:	iret   
  414459:	adc    eax,edx
  41445b:	sub    dl,BYTE PTR [ecx-0x60]
  41445e:	inc    esp
  41445f:	mov    bh,0x9d
  414461:	xchg   BYTE PTR [ebp+0x5db0d9bb],ch
  414467:	adc    DWORD PTR [edx+0x72753a02],eax
  41446d:	add    BYTE PTR [ebp+0x2e],ch
  414470:	ss icebp 
  414472:	dec    edx
  414473:	jnp    0x4144bd
  414475:	ror    BYTE PTR ds:0xeb1ebeb8,0xd8
  41447c:	lahf   
  41447d:	out    dx,eax
  41447e:	div    BYTE PTR [ecx]
  414480:	and    dl,bh
  414482:	and    DWORD PTR [eax],esp
  414484:	retf   0x455c
  414487:	lea    ebx,[ecx+0x22]
  41448a:	call   0x9dc5:0x2c34de92
  414491:	push   edi
  414492:	popf   
  414493:	dec    eax
  414494:	jmp    0x10934fd
  414499:	in     al,0xb0
  41449b:	imul   ecx,DWORD PTR [eax],0x89e0a528
  4144a1:	pop    esp
  4144a2:	sbb    BYTE PTR [edi-0x69],al
  4144a5:	sub    al,BYTE PTR [edi-0x22f2415b]
  4144ab:	dec    esp
  4144ac:	jno    0x41452b
  4144ae:	inc    ecx
  4144af:	add    ebx,ebp
  4144b1:	sub    DWORD PTR [ecx-0x7a3ae20a],esp
  4144b7:	mov    edi,0x642ee4e2
  4144bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144bd:	xor    al,0xd4
  4144bf:	sub    al,0x87
  4144c1:	adc    DWORD PTR [edx],esp
  4144c3:	in     eax,dx
  4144c4:	and    al,0x5c
  4144c6:	icebp  
  4144c7:	dec    esi
  4144c8:	ins    BYTE PTR es:[edi],dx
  4144c9:	mov    dl,0xf4
  4144cb:	and    al,BYTE PTR [esi]
  4144cd:	out    0x39,al
  4144cf:	pushw  es
  4144d1:	stos   BYTE PTR es:[edi],al
  4144d2:	dec    esp
  4144d3:	adc    ah,bl
  4144d5:	pop    ebx
  4144d6:	xchg   esi,eax
  4144d7:	in     eax,dx
  4144d8:	and    eax,0x9ae2e8b
  4144dd:	lahf   
  4144de:	out    dx,eax
  4144df:	ror    BYTE PTR [ecx-0x72],0x50
  4144e3:	fcos   
  4144e5:	jge    0x41455b
  4144e7:	hlt    
  4144e8:	xchg   BYTE PTR [esi-0x64c25121],dh
  4144ee:	pop    esp
  4144ef:	jmp    0x32b94b9c
  4144f4:	mov    eax,DWORD PTR [edi-0xa0fb786]
  4144fa:	in     al,0xfb
  4144fc:	pop    esp
  4144fd:	mov    bl,0xc0
  4144ff:	aas    
  414500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414501:	push   ebx
  414502:	xor    edi,DWORD PTR [ecx-0x3c]
  414505:	mov    eax,ebx
  414507:	inc    edi
  414508:	adc    DWORD PTR [edi+0x3],ecx
  41450b:	repnz cld 
  41450d:	iret   
  41450e:	stos   DWORD PTR es:[edi],eax
  41450f:	iret   
  414510:	in     al,dx
  414511:	repnz adc al,0x17
  414514:	xchg   ebx,eax
  414515:	pushf  
  414516:	retfw  
  414518:	sbb    eax,0xfc336189
  41451d:	add    al,0x46
  41451f:	stos   DWORD PTR es:[edi],eax
  414520:	jle    0x4144f6
  414522:	inc    esp
  414523:	ds jne 0x414515
  414526:	aas    
  414527:	jmp    0x4144f7
  414529:	jecxz  0x414531
  41452b:	fs dec esi
  41452d:	mov    ah,0xcf
  41452f:	int3   
  414530:	mov    ch,BYTE PTR ds:0x7595fb68
  414536:	and    DWORD PTR ds:0xc52ff15e,0xef5ffafd
  414540:	test   BYTE PTR [ebx],cl
  414542:	loope  0x4145ad
  414544:	adc    BYTE PTR [ebx+0x78ec31b5],al
  41454a:	mov    dl,0xde
  41454c:	out    dx,al
  41454d:	xchg   ecx,eax
  41454e:	add    eax,0xf764392a
  414553:	retf   0xd54a
  414556:	lds    edi,FWORD PTR [esi+ebx*2+0x58]
  41455a:	jmp    DWORD PTR [esi-0x64036059]
  414560:	jno    0x41450c
  414562:	sbb    DWORD PTR [esi+0x78],edi
  414565:	stos   BYTE PTR es:[edi],al
  414566:	out    dx,eax
  414567:	jbe    0x4145d8
  414569:	pop    ss
  41456a:	gs dec ebx
  41456c:	xor    dl,BYTE PTR [esi+0x749ae944]
  414572:	mov    bl,0x1c
  414574:	mov    edx,0xfef31924
  414579:	pop    es
  41457a:	pop    eax
  41457b:	jbe    0x414585
  41457d:	fdivr  DWORD PTR [edi-0x58]
  414580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414581:	les    eax,FWORD PTR [edi]
  414583:	sbb    DWORD PTR [ebp-0x3b4ac54],eax
  414589:	inc    ebp
  41458a:	in     eax,dx
  41458b:	icebp  
  41458c:	das    
  41458d:	xchg   ebx,eax
  41458e:	jne    0x41453e
  414590:	test   ecx,ecx
  414592:	lds    ebp,FWORD PTR ds:0x9fb5ea9c
  414598:	fld    QWORD PTR [edx]
  41459a:	jae    0x414537
  41459c:	adc    eax,0x197067f
  4145a1:	je     0x4145ac
  4145a3:	test   dl,cl
  4145a5:	push   ebx
  4145a6:	jae    0x41460a
  4145a8:	sbb    ecx,DWORD PTR [edx-0x3da48a44]
  4145ae:	inc    edi
  4145af:	das    
  4145b0:	inc    ebp
  4145b1:	fiadd  DWORD PTR [ecx+0x7b80ebc0]
  4145b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b8:	inc    esp
  4145b9:	and    DWORD PTR [edx],ebp
  4145bb:	sbb    eax,0xdf7979d2
  4145c0:	rcl    DWORD PTR [ecx-0x3b],0x8f
  4145c4:	fsubr  st,st(6)
  4145c6:	mov    eax,0x34ac87ef
  4145cb:	or     DWORD PTR [edx+0x40],eax
  4145ce:	fcomp  QWORD PTR [ecx+0x79f98b73]
  4145d4:	retf   
  4145d5:	test   al,0xdf
  4145d7:	enter  0xaa77,0x35
  4145db:	sbb    ch,bl
  4145dd:	fsub   QWORD PTR [esi+0x66fa4d8a]
  4145e3:	adc    dh,ch
  4145e5:	jb     0x414644
  4145e7:	out    0xdf,al
  4145e9:	mov    ch,0x41
  4145eb:	and    eax,0x1111312c
  4145f0:	adc    dh,al
  4145f2:	fstp   DWORD PTR [ebx]
  4145f4:	or     dh,BYTE PTR [esi+0x24e9b5d2]
  4145fa:	ficomp DWORD PTR [edi]
  4145fc:	iret   
  4145fd:	adc    bh,ah
  4145ff:	xor    al,BYTE PTR [edi+0x2c255354]
  414605:	xlat   BYTE PTR ds:[ebx]
  414606:	out    dx,al
  414607:	inc    esp
  414608:	fucomi st,st(0)
  41460a:	or     DWORD PTR [ebp-0x5c],edx
  41460d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41460e:	outs   dx,DWORD PTR ds:[esi]
  41460f:	xor    eax,0xc1840416
  414614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414615:	push   cs
  414616:	data16 jae 0x41468e
  414619:	into   
  41461a:	mov    bl,al
  41461c:	fwait
  41461d:	std    
  41461e:	pop    eax
  41461f:	cli    
  414620:	jo     0x4145bd
  414622:	fdivr  st,st(0)
  414624:	push   esp
  414625:	xor    BYTE PTR [edx-0x4],cl
  414628:	lea    esi,[eax+0x3d]
  41462b:	mov    DWORD PTR [ebp-0x1d61b65e],ebp
  414631:	aaa    
  414632:	dec    ebx
  414633:	pop    ecx
  414634:	mov    bh,0x45
  414636:	int3   
  414637:	lods   eax,DWORD PTR ds:[esi]
  414638:	dec    esp
  414639:	mov    bl,0x11
  41463b:	mov    edi,DWORD PTR [ecx]
  41463d:	arpl   bp,dx
  41463f:	pushf  
  414640:	push   0x1462913
  414645:	mov    eax,ds:0x4a8e230
  41464a:	mov    ch,0x5d
  41464c:	scas   al,BYTE PTR es:[edi]
  41464d:	lock iret 
  41464f:	imul   ebp,DWORD PTR [edi+0x6a],0x68
  414653:	xchg   ebx,eax
  414654:	xor    ebx,DWORD PTR [eax+ecx*8+0x7066bc2b]
  41465b:	fwait
  41465c:	xor    DWORD PTR [ecx],ebx
  41465e:	test   eax,0x65307dc9
  414663:	test   al,0xc
  414665:	push   ebx
  414666:	push   0x622219b3
  41466b:	es push 0x1176b448
  414671:	cs mov dh,0x1d
  414674:	push   eax
  414675:	jmp    0x2dca:0xf0986495
  41467c:	sub    DWORD PTR [esp+eax*4],0x12
  414680:	outs   dx,DWORD PTR ds:[esi]
  414681:	mov    ds,WORD PTR [eax+0x4f]
  414684:	jnp    0x41469d
  414686:	popf   
  414687:	adc    DWORD PTR [edi],eax
  414689:	mov    BYTE PTR [edx+edi*1-0x1270f2d9],bh
  414690:	pop    eax
  414691:	stos   BYTE PTR es:[edi],al
  414692:	rol    BYTE PTR [edx+0x1f],cl
  414695:	call   0x2a9baeb1
  41469a:	retf   0x7ab5
  41469d:	jbe    0x414684
  41469f:	xor    DWORD PTR [esi+ebx*8-0x413738a4],ecx
  4146a6:	pusha  
  4146a7:	inc    ecx
  4146a8:	mov    ebx,0x240252e9
  4146ad:	loop   0x4146ac
  4146af:	mov    ebx,0xf3c9b7a8
  4146b4:	cmp    al,0x37
  4146b6:	cwde   
  4146b7:	mov    al,ds:0x49bf2a91
  4146bc:	add    ah,0x2
  4146bf:	mov    ebp,0x107da2d2
  4146c4:	rcl    DWORD PTR [ecx+0x22],0xf1
  4146c8:	add    esi,DWORD PTR [esi]
  4146ca:	pop    ebx
  4146cb:	inc    edi
  4146cc:	push   ds
  4146cd:	sbb    bl,BYTE PTR [ebp+0x22]
  4146d0:	inc    edi
  4146d1:	(bad)  
  4146d3:	(bad)  
  4146d4:	sti    
  4146d5:	cmp    DWORD PTR [edx+0x3aec68e1],0xd78162b3
  4146df:	into   
  4146e0:	ds jl  0x41470d
  4146e3:	mov    cl,0x97
  4146e5:	pop    ds
  4146e6:	jo     0x41469d
  4146e8:	jle    0x414704
  4146ea:	in     al,dx
  4146eb:	neg    DWORD PTR [esi+ebx*1]
  4146ee:	push   eax
  4146ef:	call   0xd76d79b7
  4146f4:	xchg   edx,eax
  4146f5:	mov    bh,0xa0
  4146f7:	lds    ecx,FWORD PTR [esp+eax*2+0x1a5803b4]
  4146fe:	dec    ebp
  4146ff:	cmc    
  414700:	adc    bh,BYTE PTR [edi]
  414702:	xor    eax,0x6c4ab1d9
  414707:	fidivr DWORD PTR [edx+0x6b]
  41470a:	push   ebx
  41470b:	sbb    ah,BYTE PTR [edx]
  41470d:	pop    ds
  41470e:	sub    al,0xaf
  414710:	add    al,0x11
  414712:	cmp    ch,BYTE PTR [eax+ebp*1-0x4a]
  414716:	push   es
  414717:	clc    
  414718:	or     esp,DWORD PTR [esi+0x2dee7d4f]
  41471e:	inc    ecx
  41471f:	inc    ebx
  414720:	xlat   BYTE PTR ds:[ebx]
  414721:	fsubp  st(0),st
  414723:	jnp    0x414730
  414725:	or     DWORD PTR [ecx-0x48],ebp
  414728:	daa    
  414729:	pop    edi
  41472a:	adc    ch,BYTE PTR [ecx]
  41472c:	mov    dh,0x5c
  41472e:	mov    bh,0x70
  414730:	scas   al,BYTE PTR es:[edi]
  414731:	adc    al,0x94
  414733:	cs cmp edi,eax
  414736:	mov    BYTE PTR [edi],bh
  414738:	pop    edx
  414739:	test   al,0x6c
  41473c:	xor    DWORD PTR [edi+0x2539555d],edi
  414742:	sar    eax,1
  414744:	xchg   edx,eax
  414745:	mov    esi,0x10bf3b56
  41474a:	adc    cl,BYTE PTR [ecx]
  41474c:	ins    BYTE PTR es:[edi],dx
  41474d:	(bad)  
  41474f:	mov    eax,ds:0x1b100ba9
  414754:	sub    BYTE PTR [edi-0x60],ah
  414757:	sar    DWORD PTR [ebx],0xc3
  41475a:	jp     0x41475e
  41475c:	adc    esp,DWORD PTR [ebp+0xe1ee814]
  414762:	pop    ebx
  414763:	es pop ecx
  414765:	cli    
  414766:	and    bl,BYTE PTR [esi-0x42900099]
  41476c:	ret    
  41476d:	jmp    0xd2d4:0x47dd459
  414774:	pop    es
  414775:	aaa    
  414776:	into   
  414777:	rcr    BYTE PTR ds:0x6d7cdd54,1
  41477d:	pop    eax
  41477e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41477f:	stc    
  414780:	ror    BYTE PTR [eax-0x50],cl
  414783:	popa   
  414784:	rol    DWORD PTR [esi],0x85
  414787:	add    BYTE PTR [ebp+0x27426f5e],al
  41478d:	dec    eax
  41478e:	and    esi,DWORD PTR [ebp+0x34]
  414791:	mov    edx,0x16d1bc6a
  414796:	inc    ebx
  414797:	push   ds
  414798:	(bad)  [esi]
  41479a:	loop   0x4147cf
  41479c:	aad    0xe4
  41479e:	int3   
  41479f:	mov    dh,0x21
  4147a1:	jo     0x414810
  4147a3:	push   edx
  4147a4:	clc    
  4147a5:	iret   
  4147a6:	cwde   
  4147a7:	sbb    DWORD PTR [eax+0x1d],esi
  4147aa:	push   ebp
  4147ab:	hlt    
  4147ac:	cmp    BYTE PTR [esi-0xcfaa8c0],cl
  4147b2:	adc    al,0x31
  4147b4:	mov    WORD PTR [edx-0x204ee19c],?
  4147ba:	sahf   
  4147bb:	lods   al,BYTE PTR ds:[esi]
  4147bc:	enter  0xaa85,0xd3
  4147c0:	cmp    bl,BYTE PTR [ecx+0x740640c6]
  4147c6:	adc    DWORD PTR [eax+esi*8-0x48c0d52d],0x2c
  4147ce:	sbb    ebp,ecx
  4147d0:	cmp    eax,0x19a4d474
  4147d5:	ret    0xd37b
  4147d8:	mov    al,ds:0x99084f39
  4147dd:	sub    BYTE PTR [eax+0x35420463],cl
  4147e3:	pop    eax
  4147e4:	loope  0x41481c
  4147e6:	jg     0x414769
  4147e8:	adc    eax,0x2192a53e
  4147ed:	clc    
  4147ee:	jne    0x414816
  4147f0:	cdq    
  4147f1:	lea    ecx,[esi-0x19]
  4147f4:	std    
  4147f5:	push   edi
  4147f6:	mul    ebp
  4147f8:	jge    0x4147b1
  4147fa:	jb     0x4147e7
  4147fc:	mov    DWORD PTR [ecx+0x28fede62],eax
  414802:	pop    edx
  414803:	in     al,dx
  414804:	fcomp  st(5)
  414806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414807:	ins    BYTE PTR es:[edi],dx
  414808:	stos   DWORD PTR es:[edi],eax
  414809:	push   0x7
  41480b:	inc    esp
  41480c:	clc    
  41480d:	pop    edi
  41480e:	adc    bh,bh
  414810:	rol    BYTE PTR [ebx],1
  414812:	adc    ah,bl
  414814:	ror    DWORD PTR [ecx],1
  414816:	popa   
  414817:	or     DWORD PTR [esi-0x3d3c1578],edi
  41481d:	jle    0x41489c
  41481f:	mov    ds:0x83fe1b66,al
  414824:	popa   
  414825:	xlat   BYTE PTR ds:[ebx]
  414826:	or     eax,0x39a2433e
  41482b:	pop    es
  41482c:	je     0x4147ec
  41482e:	scas   eax,DWORD PTR es:[edi]
  41482f:	pop    es
  414830:	in     al,dx
  414831:	jbe    0x41483f
  414833:	mov    ebx,0x409caa82
  414838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414839:	icebp  
  41483a:	in     al,dx
  41483b:	push   cs
  41483c:	sbb    ebp,DWORD PTR [eax]
  41483e:	sub    esp,esp
  414840:	mov    BYTE PTR [ecx+0x54],dl
  414843:	push   esp
  414844:	ret    0x1a08
  414847:	and    bh,BYTE PTR [edi-0x36]
  41484a:	pop    esi
  41484b:	hlt    
  41484c:	adc    DWORD PTR [edx+0x31157a31],0xfd8f9ab5
  414856:	nop
  414857:	retf   
  414858:	jle    0x41488c
  41485a:	loopne 0x414891
  41485c:	jb     0x41484d
  41485e:	or     eax,0x9e61e56
  414863:	ins    BYTE PTR es:[edi],dx
  414864:	add    bl,al
  414866:	push   cs
  414867:	xor    DWORD PTR [edi-0x4b],0x6f112d46
  41486e:	ins    BYTE PTR es:[edi],dx
  41486f:	mov    edi,0xf7432b52
  414874:	xor    al,0xc3
  414876:	sub    al,0x92
  414878:	sub    DWORD PTR [ebx],0xffffffaa
  41487b:	mov    bh,0x7
  41487d:	(bad)  
  41487e:	mov    ebx,DWORD PTR [ebx]
  414880:	inc    esi
  414881:	mov    esp,0xcbec8b0f
  414886:	lods   eax,DWORD PTR ds:[esi]
  414887:	fdiv   DWORD PTR [edi+0x680911c4]
  41488d:	(bad)  
  41488e:	fcmovne st,st(6)
  414890:	(bad)  
  414891:	mov    al,0xa0
  414893:	push   ecx
  414894:	sub    ebp,DWORD PTR [ebp+0x76]
  414897:	test   ebp,0x6495da09
  41489d:	add    al,0x78
  41489f:	xchg   esi,eax
  4148a0:	cmp    al,0x60
  4148a2:	in     al,0x7e
  4148a4:	call   0xae57:0x712f7a67
  4148ab:	fcmovu st,st(5)
  4148ad:	and    dl,BYTE PTR [eax]
  4148af:	add    edx,esp
  4148b1:	xchg   ebx,eax
  4148b2:	push   0x27
  4148b4:	mov    ebx,0x29e0a118
  4148b9:	sbb    BYTE PTR [eax-0x59d3b6c0],0x57
  4148c0:	sbb    bl,ch
  4148c2:	push   edx
  4148c3:	lock movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4148c6:	shl    esi,cl
  4148c8:	xor    ebx,edx
  4148ca:	repz jmp 0x209c:0x706d1d97
  4148d2:	sti    
  4148d3:	push   0x7a
  4148d5:	aad    0xbe
  4148d7:	addr16 dec edx
  4148d9:	sub    eax,0x77fd6522
  4148de:	ins    BYTE PTR es:[edi],dx
  4148df:	(bad)  
  4148e1:	sub    eax,0xdab91675
  4148e6:	xor    edi,DWORD PTR [eax+0x6fb647e5]
  4148ec:	add    BYTE PTR [eax+0x11751073],bh
  4148f2:	mov    dl,0xeb
  4148f4:	retf   0x2a5c
  4148f7:	add    ebp,esi
  4148f9:	push   ebx
  4148fa:	leave  
  4148fb:	jae    0x41487e
  4148fd:	or     ebx,eax
  4148ff:	test   BYTE PTR [ecx+0x79],0x98
  414903:	ror    BYTE PTR [esi+0x5e1f3324],cl
  414909:	jle    0x414965
  41490b:	retf   0xd453
  41490e:	mov    ds:0x86dbbc6b,al
  414913:	aam    0x12
  414915:	int3   
  414916:	repz xchg esp,eax
  414918:	push   ecx
  414919:	iret   
  41491a:	stos   DWORD PTR es:[edi],eax
  41491b:	lea    ebp,[esi-0x5b53978b]
  414921:	cmc    
  414922:	push   cs
  414923:	inc    ecx
  414924:	(bad)  
  414925:	fist   WORD PTR [eax+0x72]
  414928:	cmp    cl,BYTE PTR [ebp+0x52d29430]
  41492e:	mov    dh,0xe3
  414930:	push   eax
  414931:	iret   
  414932:	mov    esp,0x98e99cf8
  414937:	inc    esp
  414938:	stc    
  414939:	jne    0x41491c
  41493b:	sbb    DWORD PTR [esi],ebp
  41493d:	or     DWORD PTR [ecx-0x3dd3476],ecx
  414943:	stc    
  414944:	test   dh,al
  414946:	test   BYTE PTR [edx+esi*2+0x2a39d45e],bl
  41494d:	pop    ebx
  41494e:	idiv   DWORD PTR [eax+0x6e]
  414951:	push   esp
  414952:	inc    edx
  414953:	jne    0x4149b4
  414955:	push   edx
  414956:	cwde   
  414957:	inc    esi
  414958:	rol    ecx,1
  41495a:	cs repnz stc 
  41495d:	je     0x4148ea
  41495f:	je     0x4149c3
  414961:	mov    BYTE PTR [edi],cl
  414963:	pop    esp
  414964:	test   eax,0xb487bda6
  414969:	or     ebp,0xf982e68f
  41496f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414970:	stc    
  414971:	stc    
  414972:	inc    edx
  414973:	dec    esp
  414974:	jle    0x85b6f363
  41497a:	pop    esp
  41497b:	push   ds
  41497c:	dec    esp
  41497d:	pop    edx
  41497e:	sub    DWORD PTR [edi+ecx*1-0x3],ecx
  414982:	sbb    ebx,DWORD PTR ss:[ebx]
  414985:	jge    0x414a01
  414987:	fdivr  QWORD PTR [esi+0x52]
  41498a:	(bad)  
  41498b:	mov    eax,ds:0xf77092a9
  414990:	sahf   
  414991:	cmp    DWORD PTR [ebp*8-0x9045455],ebp
  414998:	sbb    eax,0xe9c70ceb
  41499d:	ss call 0x7eac1bed
  4149a3:	push   ss
  4149a4:	jg     0x4149ec
  4149a6:	aad    0xe
  4149a8:	or     BYTE PTR [ebx+0x78],dh
  4149ab:	inc    edx
  4149ac:	jb     0x414937
  4149ae:	push   ebp
  4149af:	or     cl,ch
  4149b1:	jo     0x4149b3
  4149b3:	add    BYTE PTR [eax],al
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	aad    0x51
  414b8a:	les    edi,FWORD PTR [edi+edi*8+0x67]
  414b8e:	add    BYTE PTR [ebx-0x7c7ca3e9],0x57
  414b95:	jg     0x414c01
  414b97:	sti    
  414b98:	dec    ebx
  414b99:	mov    al,ds:0xb09b0639
  414b9e:	mov    ah,0x87
  414ba0:	pop    edx
  414ba1:	pop    esi
  414ba2:	daa    
  414ba3:	rcr    DWORD PTR ds:0xe517a069,cl
  414ba9:	mov    ebp,0x8e995b38
  414bae:	mov    dh,0x7c
  414bb0:	retf   0x48c5
  414bb3:	clc    
  414bb4:	mov    al,ds:0x83fade43
  414bb9:	mov    di,0x962f
  414bbd:	mov    ds:0x29ed5f0d,eax
  414bc2:	mov    dh,0x27
  414bc4:	icebp  
  414bc5:	sbb    ch,cl
  414bc7:	scas   al,BYTE PTR es:[edi]
  414bc8:	enter  0x5558,0xa8
  414bcc:	ret    0x57d1
  414bcf:	stos   BYTE PTR es:[edi],al
  414bd0:	xor    BYTE PTR [ebx-0x8271ba2],bh
  414bd6:	and    eax,0x8b6197f3
  414bdb:	rcr    BYTE PTR [ecx+0x6a],1
  414bde:	sbb    BYTE PTR [ebx-0x1e],0xcf
  414be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414be3:	cs mov ecx,0x21280c10
  414be9:	(bad)  
  414bea:	mov    al,0x5e
  414bec:	dec    edi
  414bed:	stos   DWORD PTR es:[edi],eax
  414bee:	enter  0x5cac,0x8d
  414bf2:	add    DWORD PTR [ebx],0x7b570c9c
  414bf8:	xchg   ebx,eax
  414bf9:	and    eax,0xc9c647c6
  414bfe:	fiadd  WORD PTR [esi+0x32a75158]
  414c04:	pop    eax
  414c05:	mov    DWORD PTR [ebx+0x3036c0c],ebx
  414c0b:	ss addr16 push ecx
  414c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c0f:	mov    esi,0x29d7e64d
  414c14:	add    DWORD PTR [ebx+0x794809ea],0xffffffe6
  414c1b:	mov    dh,0x6a
  414c1d:	or     al,0xa6
  414c1f:	jmp    0x48f3:0xb1b9053e
  414c26:	loope  0x414bda
  414c28:	out    dx,eax
  414c29:	mov    ecx,0xf41d1f1d
  414c2e:	aam    0xb0
  414c30:	adc    BYTE PTR [ecx],ah
  414c32:	xchg   ebx,eax
  414c33:	mov    cl,0xd8
  414c35:	add    BYTE PTR [esi],bl
  414c37:	cmp    edx,DWORD PTR [ecx-0x13]
  414c3a:	pop    edx
  414c3b:	jae    0x414c5d
  414c3d:	cmc    
  414c3e:	ss (bad) 
  414c40:	sbb    BYTE PTR gs:[ebx+0x63e17815],bl
  414c47:	ss pushw es
  414c4a:	and    DWORD PTR [ebp+0x7d],0xa2611c48
  414c51:	ret    
  414c52:	popa   
  414c53:	cmp    al,0x5d
  414c55:	and    al,0x39
  414c57:	dec    edx
  414c58:	cmp    al,0x8a
  414c5a:	fsub   st,st(6)
  414c5c:	stos   DWORD PTR es:[edi],eax
  414c5d:	xor    ecx,DWORD PTR [ecx+0x425def6]
  414c63:	dec    ebp
  414c64:	jo     0x414c0b
  414c66:	adc    ebx,eax
  414c68:	pop    ds
  414c69:	mov    esp,0x1e7a629e
  414c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c6f:	or     eax,0xe72eb0d7
  414c74:	or     eax,0xb7fd836f
  414c79:	fsubr  QWORD PTR [eax+0x3ef6ced9]
  414c7f:	mov    esp,0xa9e89021
  414c84:	add    BYTE PTR [esi-0x2644c273],dh
  414c8a:	(bad)  
  414c8b:	fwait
  414c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c8d:	lods   al,BYTE PTR cs:[esi]
  414c8f:	xor    eax,DWORD PTR [eax+0x73]
  414c92:	add    BYTE PTR [ecx],cl
  414c94:	pop    edx
  414c95:	push   ds
  414c96:	ins    BYTE PTR es:[edi],dx
  414c97:	clc    
  414c98:	add    BYTE PTR [edx+0x2035facd],al
  414c9e:	mov    bh,0xe0
  414ca0:	sbb    al,0x65
  414ca2:	mov    BYTE PTR ss:[ecx-0x2fa020e0],al
  414ca9:	jecxz  0x414c63
  414cab:	jno    0x414ca7
  414cad:	or     DWORD PTR [eax+0x407bce12],eax
  414cb3:	(bad)  
  414cb4:	dec    esi
  414cb5:	or     bl,BYTE PTR [eax]
  414cb7:	sub    al,0xe
  414cb9:	xor    cl,0x77
  414cbc:	sbb    esp,0xfffffff9
  414cbf:	sub    BYTE PTR [eax],dh
  414cc1:	mov    DWORD PTR [eax+0x54a0e39b],ebp
  414cc7:	bound  ebp,QWORD PTR [edi-0xa]
  414cca:	pop    edx
  414ccb:	into   
  414ccc:	hlt    
  414ccd:	int    0x92
  414ccf:	sbb    edx,DWORD PTR [ecx]
  414cd1:	leave  
  414cd2:	push   0x49ea07e4
  414cd7:	loopne 0x414c61
  414cd9:	or     eax,0xd4b4737c
  414cde:	xchg   BYTE PTR [ecx],ah
  414ce0:	sbb    esp,DWORD PTR ds:0xe3969c1b
  414ce6:	ret    0x73be
  414ce9:	pop    edx
  414cea:	ret    0xe1a7
  414ced:	hlt    
  414cee:	arpl   si,sp
  414cf0:	fs jecxz 0x414d14
  414cf3:	pop    esp
  414cf4:	shl    DWORD PTR [edx+0x173edfe4],cl
  414cfa:	pop    ds
  414cfb:	inc    ebx
  414cfc:	mov    DWORD PTR [ebp+edx*2+0xef85fe7],edi
  414d03:	and    BYTE PTR [esi+0x3b],cl
  414d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d07:	scas   al,BYTE PTR es:[edi]
  414d08:	mov    esp,0x42ccfe54
  414d0d:	icebp  
  414d0e:	push   esp
  414d0f:	mov    ds:0x378932b8,al
  414d14:	int    0x88
  414d16:	cmp    edi,DWORD PTR [eax+0x50]
  414d19:	xchg   ecx,eax
  414d1a:	push   ebx
  414d1b:	mov    esp,0xc77281ef
  414d20:	lock leave 
  414d22:	ret    
  414d23:	ror    DWORD PTR [edi-0x205ad637],cl
  414d29:	push   cs
  414d2a:	sahf   
  414d2b:	mov    esp,0x65490b30
  414d30:	aam    0xcd
  414d32:	sub    al,0x72
  414d34:	loope  0x414d4b
  414d36:	pop    ds
  414d37:	cmp    esi,DWORD PTR [ecx+edi*1-0x4da78030]
  414d3e:	call   0xc6c1:0x287d
  414d44:	(bad)  
  414d45:	fnstsw WORD PTR [ebx]
  414d47:	sbb    eax,DWORD PTR [edx]
  414d49:	rcl    DWORD PTR [esi+0x37d8680a],cl
  414d4f:	dec    edx
  414d50:	(bad)  
  414d51:	jmp    0x97f8a3d1
  414d56:	dec    esp
  414d57:	stos   DWORD PTR es:[di],eax
  414d59:	and    eax,0xf675b492
  414d5e:	sub    al,BYTE PTR [eax+esi*2+0xba9c946]
  414d65:	or     BYTE PTR [ebp+0x50],dh
  414d68:	das    
  414d69:	cli    
  414d6a:	stc    
  414d6b:	push   ebp
  414d6d:	inc    ecx
  414d6e:	js     0x414d34
  414d70:	lods   eax,DWORD PTR ds:[esi]
  414d71:	rcl    DWORD PTR [ebp+0x4cdc329a],cl
  414d77:	into   
  414d78:	fisub  WORD PTR [esi-0x5f5f399a]
  414d7e:	xor    DWORD PTR [edi+0x5bced433],ecx
  414d84:	sub    al,dl
  414d86:	gs jo  0x414da2
  414d89:	(bad)  
  414d8a:	cmp    al,0x89
  414d8c:	dec    ecx
  414d8d:	pop    ebp
  414d8e:	jl     0x414d9b
  414d90:	(bad)  [ebx-0x42]
  414d93:	cmp    eax,0x4c0a4240
  414d98:	xor    eax,0xb6bd65eb
  414d9d:	stos   BYTE PTR es:[edi],al
  414d9e:	mov    edi,DWORD PTR [ebx-0x1612bdd9]
  414da4:	jl     0x414d89
  414da6:	sbb    DWORD PTR [ecx+0x71a0061d],ecx
  414dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dad:	fisubr DWORD PTR [esi-0x6f16eaef]
  414db3:	push   esi
  414db4:	push   0xffffffcd
  414db6:	(bad)  
  414db7:	in     al,0xe0
  414db9:	push   eax
  414dba:	div    BYTE PTR [ebx+eiz*4-0x35f37085]
  414dc1:	cs call 0x4aed:0x381a2b27
  414dc9:	adc    ebp,0x6e
  414dcc:	or     eax,0xadf1d356
  414dd1:	xchg   esp,esi
  414dd3:	clc    
  414dd4:	jp     0x414d59
  414dd6:	fiadd  DWORD PTR [eax]
  414dd8:	xchg   esi,eax
  414dd9:	outs   dx,BYTE PTR ds:[esi]
  414dda:	(bad)  
  414ddc:	mov    bl,0xa1
  414dde:	jmp    edx
  414de0:	pop    ecx
  414de1:	mov    esi,0x5759fdb
  414de6:	push   edx
  414de7:	add    BYTE PTR [ecx+0x30],0x2a
  414deb:	push   eax
  414dec:	xchg   ebp,eax
  414ded:	cmp    eax,0xbeca0385
  414df2:	push   edx
  414df3:	mov    esp,0xb9fcfb5
  414df8:	sub    ebx,esp
  414dfa:	ret    0x3504
  414dfd:	inc    esp
  414dfe:	test   DWORD PTR [ecx-0x68],0xc83a1ec5
  414e05:	or     al,0xcc
  414e07:	xlat   BYTE PTR ds:[ebx]
  414e08:	mov    ebp,0x2e7aaf64
  414e0d:	sub    ah,BYTE PTR [esi-0x693ef7dc]
  414e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e14:	shl    BYTE PTR [esi+0x1f],cl
  414e17:	cmp    BYTE PTR [ecx],dh
  414e19:	and    ecx,ebp
  414e1b:	lea    ebp,[edi]
  414e1d:	xor    al,0x30
  414e1f:	mov    dh,0x3b
  414e21:	retf   0x7b23
  414e24:	sub    ebx,DWORD PTR [esi]
  414e26:	shl    edi,1
  414e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e29:	addr16 bnd je 0x414e5f
  414e2d:	sub    dl,BYTE PTR [eax-0x3c9fcd2d]
  414e33:	or     al,BYTE PTR [eax-0x11dbbc97]
  414e39:	sbb    al,0x78
  414e3b:	push   ss
  414e3c:	scas   al,BYTE PTR es:[edi]
  414e3d:	inc    ebx
  414e3e:	std    
  414e3f:	lods   al,BYTE PTR ds:[esi]
  414e40:	js     0x414e99
  414e42:	sbb    DWORD PTR [ebp-0xe177788],esi
  414e48:	test   BYTE PTR [ebx+0x0],al
  414e4b:	cs push 0xffffffd2
  414e4e:	jg     0x414e5d
  414e50:	scas   al,BYTE PTR es:[edi]
  414e51:	popa   
  414e52:	fsubr  DWORD PTR [eax]
  414e54:	mov    cl,0xd0
  414e56:	xor    BYTE PTR [ecx],bl
  414e58:	sti    
  414e59:	test   ax,0x39cf
  414e5d:	call   0xe460:0xecf5a6be
  414e64:	rcl    bl,1
  414e66:	xor    BYTE PTR es:[ebx+0x9],ah
  414e6a:	loopne 0x414ec2
  414e6c:	fidivr DWORD PTR [esi]
  414e6e:	into   
  414e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e70:	(bad)  
  414e71:	repz jp 0x414edf
  414e74:	cmc    
  414e75:	xchg   DWORD PTR [ebx+edi*2],edi
  414e78:	stos   DWORD PTR es:[edi],eax
  414e79:	xchg   edx,eax
  414e7a:	mov    WORD PTR [edi+0x7a],es
  414e7d:	adc    DWORD PTR [esi-0x19],eax
  414e80:	mov    esp,0xbb337b91
  414e85:	cld    
  414e86:	mov    DWORD PTR [edx+0x64ffbade],esp
  414e8c:	xchg   esi,eax
  414e8d:	push   esi
  414e8e:	js     0x414ea9
  414e90:	fstp   TBYTE PTR [edi]
  414e92:	add    bh,BYTE PTR [ecx+0xc8bedcb]
  414e98:	inc    edi
  414e99:	call   0xbb68:0xe4624154
  414ea0:	mov    esi,0x56a0a124
  414ea5:	call   0xb66d2012
  414eaa:	or     al,0xf
  414eac:	cli    
  414ead:	xchg   ebp,eax
  414eae:	jg     0x414e65
  414eb0:	rcr    dl,0xe8
  414eb3:	cwde   
  414eb4:	mov    ch,0xcc
  414eb6:	aas    
  414eb7:	imul   edi,DWORD PTR [ebx*8+0x4856bc91],0xffffffae
  414ebf:	(bad)
  414ec3:	pop    esi
  414ec4:	jg     0x414ed7
  414ec6:	xchg   DWORD PTR [eax],ebp
  414ec8:	out    0x34,eax
  414eca:	in     eax,dx
  414ecb:	push   ecx
  414ecc:	icebp  
  414ecd:	(bad)  
  414ece:	inc    ch
  414ed0:	shl    DWORD PTR [ecx+0xa2f076e],cl
  414ed6:	test   BYTE PTR [esi+eax*8-0x3f],0x69
  414edb:	mov    dh,0x88
  414edd:	inc    eax
  414ede:	jno    0x414e9a
  414ee0:	stos   DWORD PTR es:[edi],eax
  414ee1:	cmp    ebp,DWORD PTR [ebp+0x4b005ecd]
  414ee7:	lahf   
  414ee8:	mov    ebx,0xca23e207
  414eed:	rcl    DWORD PTR [edx],cl
  414eef:	ds ret 
  414ef1:	jno    0x414e9c
  414ef3:	aas    
  414ef4:	data16 adc ch,BYTE PTR [ebx+0x1f]
  414ef8:	mov    al,BYTE PTR [ebx]
  414efa:	xor    edx,esi
  414efc:	add    esi,DWORD PTR [edx-0x1f]
  414eff:	pop    ebx
  414f00:	push   0x1af75963
  414f05:	dec    ebx
  414f06:	daa    
  414f07:	adc    al,0xa3
  414f09:	mov    eax,ds:0x40e5e479
  414f0e:	pop    es
  414f0f:	call   0x291dc8a8
  414f14:	scas   al,BYTE PTR es:[edi]
  414f15:	or     ecx,DWORD PTR [eax+0x14]
  414f18:	mov    bl,bl
  414f1a:	fidivr DWORD PTR [eax]
  414f1c:	mov    esp,fs
  414f1e:	(bad)  
  414f1f:	shl    dh,cl
  414f21:	loope  0x414f3a
  414f23:	pushf  
  414f24:	ss adc al,0xe0
  414f27:	ins    BYTE PTR es:[edi],dx
  414f28:	jp     0x414f1b
  414f2a:	cmp    DWORD PTR [ecx],ebx
  414f2c:	les    esp,FWORD PTR [esi-0x5e]
  414f2f:	cli    
  414f30:	loopne 0x414f57
  414f32:	aad    0x40
  414f34:	mov    ecx,0xff85d39b
  414f39:	adc    BYTE PTR [ebp+edx*8+0x1f326a10],cl
  414f40:	add    BYTE PTR [ecx],0x8d
  414f43:	pop    ds
  414f44:	nop
  414f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f46:	push   edx
  414f47:	shl    BYTE PTR [edi+0x7cfae83c],0x28
  414f4e:	push   esi
  414f4f:	sub    al,0x7c
  414f51:	bnd jne 0x414f66
  414f54:	jno    0x414f1f
  414f56:	xlat   BYTE PTR ds:[ebx]
  414f57:	sub    bh,al
  414f59:	neg    BYTE PTR [eax]
  414f5b:	sbb    esi,DWORD PTR [ecx+eax*8]
  414f5e:	stos   DWORD PTR es:[edi],eax
  414f5f:	add    esp,ecx
  414f61:	mov    ds:0x1bb17f5c,al
  414f66:	sbb    BYTE PTR [ebx],ah
  414f68:	lods   al,BYTE PTR ds:[esi]
  414f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f6a:	jbe    0x414fbe
  414f6c:	in     al,0x6e
  414f6e:	sub    dl,BYTE PTR [ecx]
  414f70:	in     al,0x22
  414f72:	and    DWORD PTR [ecx-0x447dbd56],eax
  414f78:	cmp    BYTE PTR [ebp+ebx*2+0x2b],dl
  414f7c:	mov    esi,0x188f603d
  414f81:	popf   
  414f82:	bound  ebp,QWORD PTR [ebx+0x7b8ea10e]
  414f88:	aaa    
  414f89:	rcl    DWORD PTR [edx+0x28c6b80b],cl
  414f8f:	aam    0x8f
  414f91:	sub    BYTE PTR ds:0xdb510fb6,al
  414f97:	xchg   edx,eax
  414f98:	xor    DWORD PTR [ebx-0x69121173],esp
  414f9e:	into   
  414f9f:	and    BYTE PTR [edi+0x2d],0x14
  414fa3:	add    DWORD PTR [eax+0x2c],ebp
  414fa6:	ins    BYTE PTR es:[edi],dx
  414fa7:	xchg   dh,al
  414fa9:	clc    
  414faa:	mul    BYTE PTR [ecx+0x4d]
  414fad:	out    dx,eax
  414fae:	inc    edx
  414faf:	iret   
  414fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb1:	push   edi
  414fb2:	loop   0x414fa6
  414fb4:	jl     0x414f5c
  414fb6:	mov    ah,0x12
  414fb8:	in     al,dx
  414fb9:	sbb    al,0xd
  414fbb:	test   BYTE PTR [esi+eax*8-0x68e46963],dl
  414fc2:	(bad)  
  414fc3:	jbe    0x415018
  414fc5:	fisub  DWORD PTR [esi+ebp*2+0x4f70668e]
  414fcc:	add    eax,0xafbe140
  414fd1:	mov    eax,0x12b17fba
  414fd6:	and    al,0x94
  414fd8:	mov    dh,0x83
  414fda:	inc    esp
  414fdb:	xor    al,0xe
  414fdd:	call   0x840d:0x3362fdea
  414fe4:	xor    edi,edi
  414fe6:	sub    edi,DWORD PTR [eax+edx*8-0x7d]
  414fea:	or     ecx,DWORD PTR ds:0xf202ff6f
  414ff0:	addr16 mov ds,edx
  414ff3:	test   DWORD PTR [edi],0x9917d13a
  414ff9:	mov    eax,0x117f103f
  414ffe:	xchg   esi,eax
  414fff:	ins    BYTE PTR es:[edi],dx
  415000:	cmp    BYTE PTR [ebx+0x67],al
  415003:	lock rcl DWORD PTR [ebx+0x62488bdc],0x6e
  41500b:	xor    DWORD PTR [ebx],edx
  41500d:	adc    bh,cl
  41500f:	pop    ecx
  415010:	les    esp,FWORD PTR [ebp+0x679544ee]
  415016:	dec    ecx
  415017:	mov    cl,0xdf
  415019:	addr16 shr al,1
  41501c:	add    eax,0x97960ec3
  415021:	cmp    ecx,DWORD PTR ds:0x5742aa6c
  415027:	ror    DWORD PTR cs:[eax+0x2381b166],0xc9
  41502f:	fst    QWORD PTR [ebx+0x17]
  415032:	adc    eax,DWORD PTR [eax+edx*8+0x4ebadbe9]
  415039:	add    ebx,edi
  41503b:	jmp    0xc6ef1180
  415040:	adc    eax,0xad9f1bd6
  415045:	xchg   edi,eax
  415046:	or     al,0x93
  415048:	jb     0x414fed
  41504a:	jns    0x4150c3
  41504c:	and    cl,bl
  41504e:	gs lds esi,FWORD PTR fs:[esi+0x3435204a]
  415056:	add    al,0x4a
  415058:	ins    DWORD PTR es:[edi],dx
  415059:	dec    ebx
  41505a:	jmp    FWORD PTR [ebp+edx*2+0x382b312d]
  415061:	add    eax,0xe7cce292
  415066:	pop    ss
  415067:	stc    
  415068:	push   ebp
  415069:	in     eax,dx
  41506a:	jno    0x4150c1
  41506c:	enter  0x7497,0x34
  415070:	loop   0x415034
  415072:	fst    QWORD PTR [eax+0x677b43dc]
  415078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415079:	arpl   bx,sp
  41507b:	ja     0x4150bb
  41507d:	int3   
  41507e:	sbb    al,0x5d
  415080:	sbb    edi,edi
  415082:	mov    DWORD PTR [edi-0x49],0xe2402f65
  415089:	jp     0x4150e1
  41508b:	push   esp
  41508c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41508d:	sbb    dh,BYTE PTR [edx]
  41508f:	call   0x9a7e:0x93939448
  415096:	(bad)  
  415097:	mov    dh,0xaa
  415099:	sub    DWORD PTR [ebp+0x5b],ebp
  41509c:	xchg   esi,eax
  41509d:	cmp    dl,BYTE PTR ds:0x2c9e61d6
  4150a3:	dec    esi
  4150a4:	ret    
  4150a5:	mov    DWORD PTR [edi],esp
  4150a7:	je     0x4150e0
  4150a9:	inc    edi
  4150aa:	arpl   WORD PTR [edi-0x5b],di
  4150ad:	and    ah,BYTE PTR [edx]
  4150af:	and    al,0x50
  4150b1:	jecxz  0x4150a5
  4150b3:	scas   al,BYTE PTR es:[edi]
  4150b4:	les    esp,FWORD PTR [edx+ebx*4-0x62f3fa60]
  4150bb:	(bad)  
  4150bc:	imul   eax,ebp,0xffffffc9
  4150bf:	lock sar BYTE PTR [esi*1+0x221b43a5],0xc9
  4150c8:	loope  0x4150d6
  4150ca:	mov    cl,0x2
  4150cc:	jns    0x415128
  4150ce:	dec    ebx
  4150cf:	comiss xmm3,DWORD PTR [edx-0x18]
  4150d3:	mov    esp,0xdfbaa476
  4150d8:	js     0x4150fa
  4150da:	enter  0x8756,0x22
  4150de:	add    dh,BYTE PTR [ebp+0x40258f3b]
  4150e4:	ds jg  0x4150cb
  4150e7:	push   ecx
  4150e8:	mov    dh,0x10
  4150ea:	fiadd  DWORD PTR [eax+0x7086883f]
  4150f0:	scas   al,BYTE PTR es:[edi]
  4150f1:	xchg   ecx,eax
  4150f2:	jmp    0x41514b
  4150f4:	dec    esi
  4150f5:	xor    eax,0x578db112
  4150fa:	cmp    eax,ebp
  4150fc:	dec    eax
  4150fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150fe:	out    0xf1,al
  415100:	lahf   
  415101:	in     al,dx
  415102:	data16 lods al,BYTE PTR ds:[esi]
  415104:	pusha  
  415105:	hlt    
  415106:	jb     0x415159
  415108:	idiv   DWORD PTR [edi-0x24c14642]
  41510e:	mov    BYTE PTR [edx+0x3f3ebab5],dl
  415114:	sub    eax,0x58661e25
  415119:	and    al,0x9d
  41511b:	add    ch,BYTE PTR [ecx]
  41511d:	nop
  41511e:	jbe    0x4150b2
  415120:	aad    0x80
  415122:	mov    ebp,0xa34d9eeb
  415127:	outs   dx,DWORD PTR ds:[esi]
  415128:	mov    al,0xc
  41512a:	stc    
  41512b:	loop   0x415102
  41512d:	xchg   edx,eax
  41512e:	cld    
  41512f:	sbb    edi,DWORD PTR [eax+0x37]
  415132:	jno    0x4150b9
  415134:	(bad)  
  415135:	and    eax,0x9eaf90d7
  41513a:	das    
  41513b:	bound  ecx,QWORD PTR [ecx]
  41513d:	mov    BYTE PTR [esi-0x681beedf],dh
  415143:	dec    esi
  415144:	dec    esi
  415145:	(bad)  
  415146:	jmp    FWORD PTR [edx]
  415148:	adc    cl,BYTE PTR [ecx+0x545a4e0d]
  41514e:	inc    DWORD PTR [esi]
  415150:	or     dh,cl
  415152:	mov    eax,DWORD PTR [ecx-0x4f0241a1]
  415158:	add    eax,0xb888d40
  41515d:	sti    
  41515e:	adc    eax,0xf5506364
  415163:	mov    eax,ds:0x849cf299
  415168:	pop    esi
  415169:	adc    ch,BYTE PTR [edi-0x514cb7e2]
  41516f:	sbb    BYTE PTR [edx+0x38806d73],al
  415175:	inc    ebx
  415176:	jbe    0x415151
  415178:	jnp    0x4151bb
  41517a:	cmp    esp,DWORD PTR [eax+0x26]
  41517d:	mov    edi,0xc6ec033
  415182:	mov    ah,BYTE PTR [eax-0x5b]
  415185:	cmp    DWORD PTR [ebx-0x61a2d523],0x533b3359
  41518f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415190:	lock add eax,0x8a903d81
  415196:	sbb    esp,DWORD PTR [ebp-0x48]
  415199:	addr16 mov edi,0xe82fb275
  41519f:	imul   ebp,DWORD PTR [edx+0x2],0x76
  4151a3:	cwde   
  4151a4:	loope  0x415206
  4151a6:	std    
  4151a7:	xor    cl,BYTE PTR [edi+0x77ab56c5]
  4151ad:	mov    ebx,0xc6d14947
  4151b2:	pop    ebp
  4151b3:	loop   0x4151b8
  4151b5:	cmc    
  4151b6:	dec    BYTE PTR [esi]
  4151b8:	hlt    
  4151b9:	jne    0x4151cc
  4151bb:	or     eax,0xf253ddac
  4151c0:	mov    cl,0x85
  4151c2:	imul   ebp,DWORD PTR [ebx-0x610b0050],0xffffff9e
  4151c9:	ja     0x4151ae
  4151cb:	popf   
  4151cc:	xchg   ebp,eax
  4151cd:	icebp  
  4151ce:	pushf  
  4151cf:	and    eax,0xdd1c5501
  4151d4:	lods   eax,DWORD PTR ds:[esi]
  4151d5:	dec    ebp
  4151d6:	cmp    dh,BYTE PTR [ebx-0x4]
  4151d9:	push   esp
  4151da:	int    0x59
  4151dc:	stc    
  4151dd:	leave  
  4151de:	sti    
  4151df:	xchg   ecx,eax
  4151e0:	jno    0x41525e
  4151e2:	arpl   WORD PTR [ecx],di
  4151e4:	pushf  
  4151e5:	mov    ch,0xd0
  4151e7:	aas    
  4151e8:	cmp    DWORD PTR [ebx],ecx
  4151ea:	sub    ebx,DWORD PTR [ebx-0xf6d92cc]
  4151f0:	mov    eax,ds:0xd5577b55
  4151f5:	cdq    
  4151f6:	jne    0x4151ba
  4151f8:	push   0xb9297247
  4151fd:	fs pop esi
  4151ff:	adc    al,0xe9
  415201:	ror    BYTE PTR [edx+0x6],0x68
  415205:	xchg   edi,eax
  415206:	sub    eax,0xa9b23b1f
  41520b:	inc    ecx
  41520c:	mov    ch,0x42
  41520e:	sar    BYTE PTR [edi-0x5d],0x24
  415212:	(bad)  
  415213:	adc    ebp,DWORD PTR [ebx+0x36e1634]
  415219:	sbb    BYTE PTR [edx],ah
  41521b:	xchg   edi,eax
  41521c:	stc    
  41521d:	jmp    0x4151d2
  41521f:	js     0x415212
  415221:	inc    edi
  415222:	test   eax,0x70d0d342
  415227:	jno    0x4151af
  415229:	dec    ebp
  41522a:	dec    ebx
  41522b:	dec    eax
  41522c:	cld    
  41522d:	enter  0x8e1d,0x8d
  415231:	xchg   edx,eax
  415232:	daa    
  415233:	(bad)  
  415234:	fdiv   QWORD PTR [esi+ecx*8]
  415237:	xor    ebx,DWORD PTR [ecx+edx*1-0x8]
  41523b:	inc    ecx
  41523c:	mov    bh,0x90
  41523e:	lods   al,BYTE PTR ds:[esi]
  41523f:	into   
  415240:	mov    ebp,0xb958d824
  415245:	mov    ds:0x22504a02,eax
  41524a:	clc    
  41524b:	lahf   
  41524c:	cwde   
  41524d:	mov    WORD PTR fs:[edx-0x53],ds
  415251:	daa    
  415252:	(bad)  
  415253:	neg    DWORD PTR [eax-0x9]
  415256:	repz es push ds
  415259:	icebp  
  41525a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41525b:	inc    BYTE PTR [edx-0x67]
  41525e:	les    eax,FWORD PTR [ebp+0x5a]
  415261:	add    esp,edi
  415263:	mov    ebx,esi
  415265:	cmp    ecx,edi
  415267:	xchg   BYTE PTR [ebp-0x20606909],bl
  41526d:	cli    
  41526e:	imul   BYTE PTR [eax]
  415270:	stos   BYTE PTR es:[edi],al
  415271:	aam    0xfb
  415273:	ss adc al,0x59
  415276:	cmp    DWORD PTR [esi+eax*4],ebp
  415279:	push   edx
  41527a:	rol    BYTE PTR [edi],0x17
  41527d:	pop    ebp
  41527e:	mov    ebp,0xd11b12d6
  415283:	inc    edi
  415284:	dec    edi
  415285:	push   cs
  415286:	sub    eax,ebp
  415288:	push   ebp
  415289:	in     al,0xdb
  41528b:	jl     0x4152a3
  41528d:	in     eax,dx
  41528e:	aaa    
  41528f:	stc    
  415290:	or     ebp,DWORD PTR [ecx-0x1c3e3232]
  415296:	fmul   DWORD PTR [esi+0x2b]
  415299:	fadd   DWORD PTR [edx-0x50]
  41529c:	out    dx,eax
  41529d:	fsubr  st,st(5)
  41529f:	sti    
  4152a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152a1:	ret    0x9260
  4152a4:	and    bl,dh
  4152a6:	pop    ebx
  4152a7:	out    dx,al
  4152a8:	mov    dl,BYTE PTR [ebx+0x76309b2c]
  4152ae:	imul   esp,DWORD PTR [esi+0x1b5ee48a],0xffffffc6
  4152b5:	xor    al,0x16
  4152b7:	mov    edx,0x45f85764
  4152bc:	pop    ecx
  4152bd:	sbb    BYTE PTR [edx],0x42
  4152c0:	test   BYTE PTR [edx+ebx*2],0x8e
  4152c4:	jne    0x415323
  4152c6:	mov    ebp,DWORD PTR [ebx]
  4152c8:	and    al,0x6a
  4152ca:	outs   dx,BYTE PTR ds:[esi]
  4152cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152cc:	pop    eax
  4152cd:	mov    esi,0xc2b61346
  4152d2:	sbb    esi,DWORD PTR ds:0x6252b9b6
  4152d8:	int3   
  4152d9:	cmp    BYTE PTR [edi-0x15],0x12
  4152dd:	mov    eax,ds:0x863cba54
  4152e2:	ret    
  4152e3:	push   ds
  4152e4:	lods   al,BYTE PTR ds:[esi]
  4152e5:	rol    BYTE PTR [eax+eiz*8-0x29cd6f37],0x76
  4152ed:	push   ebp
  4152ee:	shl    DWORD PTR [edi+0x33],1
  4152f1:	xchg   ah,al
  4152f3:	dec    edx
  4152f4:	jl     0x41535b
  4152f6:	mov    dl,0x40
  4152f8:	inc    eax
  4152f9:	add    esp,DWORD PTR ds:0xcaa030cc
  4152ff:	loopne 0x4152df
  415301:	adc    cl,BYTE PTR [edi]
  415303:	iret   
  415304:	cs daa 
  415306:	cwde   
  415307:	xchg   esp,eax
  415308:	and    DWORD PTR [eax+edx*8+0x35],ebx
  41530c:	mov    DWORD PTR [ebp-0x20],ecx
  41530f:	ins    BYTE PTR es:[edi],dx
  415310:	ss lock in eax,dx
  415313:	(bad)  
  415314:	pop    esp
  415315:	das    
  415316:	lock xchg esi,eax
  415318:	jae    0x415348
  41531a:	adc    edi,edx
  41531c:	sub    DWORD PTR [edx+ecx*8],ebx
  41531f:	cdq    
  415320:	popa   
  415321:	jmp    0x564b:0x400e772c
  415328:	mov    edi,DWORD PTR [ecx]
  41532a:	je     0x4153a3
  41532c:	loop   0x4153a6
  41532e:	lods   eax,DWORD PTR ds:[esi]
  41532f:	jl     0x4152ed
  415331:	fistp  QWORD PTR [ecx+0x5dced875]
  415337:	loopne 0x4152df
  415339:	and    ebp,DWORD PTR [ecx+0x15ad62f7]
  41533f:	(bad)  
  415340:	mov    dl,0x33
  415342:	dec    esi
  415343:	xchg   DWORD PTR gs:[edi+0x6f9856e],ebp
  41534a:	jecxz  0x415386
  41534c:	pop    esp
  41534d:	xchg   DWORD PTR [ebp-0x5a],ebp
  415350:	mov    ah,0x16
  415352:	or     esp,DWORD PTR [ebx+0x41]
  415355:	stos   DWORD PTR es:[edi],eax
  415356:	xor    edi,DWORD PTR [edx-0x5c05eac5]
  41535c:	in     al,dx
  41535d:	xor    BYTE PTR [edx+0x3b5a67a5],dl
  415363:	call   0xbfed:0x43c22a79
  41536a:	xor    ah,BYTE PTR [esi]
  41536c:	cmp    al,0xfe
  41536e:	jmp    0x6eedb2ab
  415373:	inc    ecx
  415374:	xchg   esp,eax
  415375:	pop    ebx
  415376:	outs   dx,DWORD PTR ds:[esi]
  415377:	xchg   ecx,eax
  415378:	mov    WORD PTR [ecx-0x6a],ds
  41537b:	in     eax,dx
  41537c:	or     eax,0xe63160c0
  415381:	sar    BYTE PTR [edx-0x4d],0xe2
  415385:	jns    0x41533c
  415387:	adc    ebp,0xe1493e08
  41538d:	arpl   WORD PTR [ecx+esi*4-0x3b],bp
  415391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415392:	mov    ebp,0x95ac5bbb
  415397:	(bad)  
  415398:	call   0x86dabc7d
  41539d:	stos   BYTE PTR es:[edi],al
  41539e:	loop   0x41532d
  4153a0:	push   esi
  4153a1:	fcomp  DWORD PTR [ebx]
  4153a3:	cld    
  4153a4:	jge    0x4153e5
  4153a6:	mov    esi,0xdf25212b
  4153ab:	xchg   edi,eax
  4153ac:	lea    eax,[ebx]
  4153ae:	call   0x28e4:0x2b968f42
  4153b5:	add    ah,BYTE PTR [ecx+0xfb205]
  4153bb:	(bad)
  4153be:	aam    0x54
  4153c0:	gs pop ds
  4153c2:	test   BYTE PTR [edi+0x39a6d9ed],cl
  4153c8:	retf   0xb211
  4153cb:	cld    
  4153cc:	test   al,0x7e
  4153ce:	cmp    al,0x23
  4153d0:	push   ebx
  4153d1:	sub    DWORD PTR [ecx-0x6604d3b0],esp
  4153d7:	dec    esp
  4153d8:	imul   esi,DWORD PTR [ebx+0x28],0x65
  4153dc:	imul   edx,esp,0xffffffe9
  4153df:	push   ebx
  4153e0:	ins    BYTE PTR es:[edi],dx
  4153e1:	cmp    ecx,ebx
  4153e3:	sbb    DWORD PTR [esi],0x963678a0
  4153e9:	mov    ?,WORD PTR [eax+0x56]
  4153ec:	mov    ?,edx
  4153ee:	push   ds
  4153ef:	pop    edi
  4153f0:	dec    ecx
  4153f1:	mov    eax,0x1ba52543
  4153f6:	pop    ss
  4153f7:	inc    ebp
  4153f8:	mov    eax,ds:0x1a8b089e
  4153fd:	push   0xffffffca
  4153ff:	pop    ss
  415400:	and    BYTE PTR [esi+0x1d7f2b20],bh
  415406:	xchg   ebx,eax
  415407:	into   
  415408:	hlt    
  415409:	pop    ss
  41540a:	pop    edi
  41540b:	cmp    ebp,edx
  41540d:	pop    edx
  41540e:	and    eax,0x58a98aba
  415413:	pop    esp
  415414:	push   edi
  415415:	push   0xe2e113fe
  41541a:	jl     0x4153e7
  41541c:	test   al,0xa8
  41541e:	push   ebp
  41541f:	adc    esp,DWORD PTR [edx-0x37a82ced]
  415425:	aas    
  415426:	stc    
  415427:	and    dl,al
  415429:	xchg   edx,eax
  41542a:	not    DWORD PTR [ebp-0x20d07e2f]
  415430:	fst    QWORD PTR [ecx+0x69]
  415433:	cmp    DWORD PTR [edx-0x69bb9536],0x14d78b9b
  41543d:	push   eax
  41543e:	repz hlt 
  415440:	pop    ecx
  415441:	stos   DWORD PTR es:[edi],eax
  415442:	hlt    
  415443:	sbb    bh,BYTE PTR [ecx+0x2b]
  415446:	sub    dl,BYTE PTR [ebx-0x69]
  415449:	cli    
  41544a:	(bad)  
  41544c:	mov    edi,0x15fe33e
  415451:	mov    al,ds:0x8a8856d
  415456:	sbb    esp,DWORD PTR [esi-0x20d6011d]
  41545c:	xor    dl,BYTE PTR [edi]
  41545e:	push   esp
  41545f:	mov    eax,ds:0xa48bb879
  415464:	push   esi
  415465:	xor    eax,0x74b47273
  41546a:	(bad)  
  41546b:	rol    ebp,cl
  41546d:	(bad)  
  41546e:	cmp    edi,DWORD PTR [ebx+0x40]
  415471:	pop    ds
  415472:	adc    BYTE PTR [esp+ebp*1+0x35],bl
  415476:	push   eax
  415477:	dec    esp
  415478:	ins    DWORD PTR es:[edi],dx
  415479:	pop    es
  41547a:	pop    edx
  41547b:	jae    0x41546f
  41547d:	xchg   ebp,eax
  41547e:	ins    BYTE PTR es:[edi],dx
  41547f:	cmp    BYTE PTR [ebp-0xfce2bce],dl
  415485:	xchg   esi,eax
  415486:	jns    0x4154ac
  415488:	cdq    
  415489:	add    DWORD PTR [ebx],ebx
  41548b:	pusha  
  41548c:	and    bh,BYTE PTR [edi]
  41548e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41548f:	dec    ecx
  415490:	pop    esi
  415491:	xchg   ebp,eax
  415492:	pop    edi
  415493:	cmc    
  415494:	sub    esp,ebp
  415496:	inc    ebp
  415497:	hlt    
  415498:	dec    eax
  415499:	fsub   st(1),st
  41549b:	sbb    BYTE PTR [eax+0x59],ch
  41549e:	or     dl,ch
  4154a0:	popf   
  4154a1:	xor    cl,0x90
  4154a4:	pop    ebx
  4154a5:	jbe    0x415526
  4154a7:	and    cl,al
  4154a9:	sbb    DWORD PTR [ebp+0x61e1bab8],edx
  4154af:	cmp    eax,0x196b961a
  4154b4:	dec    eax
  4154b5:	adc    cl,BYTE PTR [ebx-0x80]
  4154b8:	or     bh,0x3e
  4154bb:	jge    0x41545d
  4154bd:	pop    edx
  4154be:	mov    ebp,0x15ab7725
  4154c3:	ss mov esp,0x6ed642b0
  4154c9:	repz ja 0x4154fa
  4154cc:	enter  0xd4f6,0xae
  4154d0:	in     eax,0xb9
  4154d2:	jle    0x41553e
  4154d4:	xchg   ebp,eax
  4154d5:	sub    BYTE PTR ds:0x98f0f4df,al
  4154db:	or     eax,0x74e81997
  4154e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154e1:	xchg   edx,eax
  4154e2:	cmp    DWORD PTR [ecx-0x5598de44],edx
  4154e8:	aam    0x6c
  4154ea:	(bad)  
  4154eb:	out    0x8d,eax
  4154ed:	mov    eax,0x8bcce3dd
  4154f2:	call   0xf4d6d804
  4154f7:	push   esp
  4154f8:	add    edi,DWORD PTR [edx+0x7a]
  4154fb:	test   al,0xab
  4154fd:	mov    al,ds:0x3f6f1c02
  415502:	addr16 and eax,0x485bb7e9
  415508:	imul   BYTE PTR [ebx+0x34]
  41550b:	daa    
  41550c:	push   esi
  41550d:	aas    
  41550e:	sub    al,0x85
  415510:	push   0x1806c856
  415515:	jmp    0x41558b
  415517:	dec    edx
  415518:	popa   
  415519:	xchg   edx,eax
  41551a:	mov    esp,0x81012dbb
  41551f:	mov    esp,0x4c2dc4a9
  415524:	push   ds
  415525:	arpl   WORD PTR [edx],cx
  415527:	pop    ecx
  415528:	lds    edx,FWORD PTR es:[eax-0x2f]
  41552c:	mov    WORD PTR [edi-0xe],ss
  41552f:	jne    0x415548
  415531:	aaa    
  415532:	enter  0xd3ec,0x3d
  415536:	cs cdq 
  415538:	cmp    cl,bl
  41553a:	out    dx,al
  41553b:	test   ch,dl
  41553d:	sub    DWORD PTR [edi-0x1],ebx
  415540:	or     DWORD PTR [edx+0x6b],0x52
  415544:	xor    DWORD PTR [ebx],esi
  415546:	into   
  415547:	jmp    0x4155c8
  415549:	inc    esp
  41554a:	sub    ch,al
  41554c:	mov    dl,0x72
  41554e:	cs sahf 
  415550:	mov    WORD PTR [esi-0x77],?
  415553:	or     BYTE PTR [ebp-0x79],ch
  415556:	pop    ss
  415557:	mov    ebx,0x8be32bd
  41555c:	mov    ch,0x4
  41555e:	adc    ah,BYTE PTR [ebp+0x52]
  415561:	out    dx,eax
  415562:	scas   al,BYTE PTR es:[edi]
  415563:	xchg   ebp,eax
  415564:	add    dl,ch
  415566:	mov    bl,0xa2
  415568:	std    
  415569:	mov    ah,0x7
  41556b:	mov    ds:0x26926933,eax
  415570:	(bad)  [eax+0x11]
  415573:	hlt    
  415574:	xchg   esp,eax
  415575:	adc    eax,0xd20bf149
  41557a:	sub    al,0x63
  41557c:	bound  esp,QWORD PTR [ebx-0x6dc3d7c5]
  415582:	loopne 0x4155e5
  415584:	fs push ds
  415586:	call   0xe7f1b4c6
  41558b:	outs   dx,DWORD PTR ds:[esi]
  41558c:	cmp    dh,bl
  41558e:	sti    
  41558f:	cwde   
  415590:	lods   eax,DWORD PTR ds:[esi]
  415591:	aaa    
  415592:	js     0x41559b
  415594:	jnp    0x41560d
  415596:	loope  0x4155d9
  415598:	dec    edi
  415599:	xchg   ebx,eax
  41559a:	jo     0x4155d4
  41559c:	in     al,0xa6
  41559e:	pop    eax
  41559f:	sub    DWORD PTR [ebx+esi*1],ebx
  4155a2:	inc    ebx
  4155a3:	(bad)  
  4155a4:	popa   
  4155a5:	sbb    edx,ebp
  4155a7:	icebp  
  4155a8:	jecxz  0x415563
  4155aa:	xchg   edx,eax
  4155ab:	call   0x47d58263
  4155b0:	xor    eax,DWORD PTR [esp+eiz*4-0x6fcc9da]
  4155b7:	sbb    ebp,DWORD PTR [ebx+0x5e]
  4155ba:	fdiv   st(4),st
  4155bc:	sbb    DWORD PTR [esi-0x12076553],0x9
  4155c3:	lahf   
  4155c4:	fstp   TBYTE PTR [ebx+0x6c]
  4155c7:	pop    ebp
  4155c8:	out    0x5a,al
  4155ca:	dec    ebp
  4155cb:	retf   
  4155cc:	sbb    ecx,0xffffffcd
  4155cf:	mov    bl,0xcf
  4155d1:	jmp    0x4155d8
  4155d3:	mov    DWORD PTR [ecx-0x1663544c],edi
  4155d9:	xor    edi,DWORD PTR [ecx-0x1d048343]
  4155df:	fld    DWORD PTR [edi]
  4155e1:	or     eax,0x324a42c
  4155e6:	into   
  4155e7:	rcl    BYTE PTR [esp+esi*4-0x7a0e181c],cl
  4155ee:	fld    DWORD PTR [ebp+0x7498a314]
  4155f4:	push   0xb60fbf4c
  4155f9:	mov    edi,0x6eb20c2f
  4155fe:	popf   
  4155ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415600:	les    ecx,FWORD PTR [eax-0x4b]
  415603:	ret    0xc12d
  415606:	call   0x73fb:0x2c33ce75
  41560d:	jo     0x415627
  41560f:	adc    edi,ebp
  415611:	and    BYTE PTR [edi-0x50af2974],0x9
  415618:	dec    ebp
  415619:	pop    es
  41561a:	loopne 0x4155bb
  41561c:	mov    esp,0xcccce40e
  415621:	lods   eax,DWORD PTR ds:[esi]
  415622:	xchg   ebp,eax
  415623:	xchg   edi,eax
  415624:	inc    ecx
  415625:	mov    esi,0x7325d94d
  41562a:	stc    
  41562b:	xchg   ebp,eax
  41562c:	sbb    DWORD PTR [eax-0x70],eax
  41562f:	pop    edx
  415630:	test   al,0xc0
  415632:	les    edx,FWORD PTR [ebx-0x3c65bf50]
  415638:	or     dl,BYTE PTR [ecx-0x54e11da2]
  41563e:	nop
  41563f:	inc    esp
  415640:	mov    ds:0x86974442,al
  415645:	xlat   BYTE PTR ds:[ebx]
  415646:	push   0x35070f58
  41564b:	add    DWORD PTR [ecx+eiz*8],ebx
  41564e:	mov    cl,0xd3
  415650:	adc    BYTE PTR [ecx+0x581681c2],ah
  415656:	out    dx,eax
  415657:	jo     0x4156cd
  415659:	mov    ebp,0x5318d86c
  41565e:	xchg   BYTE PTR ds:0x337452d7,ch
  415664:	aas    
  415665:	loop   0x415601
  415667:	xor    eax,0xd2afc779
  41566c:	pop    eax
  41566d:	popf   
  41566e:	xchg   esi,eax
  41566f:	push   edi
  415670:	outs   dx,BYTE PTR ds:[esi]
  415671:	mov    ebx,0xbdccda8d
  415676:	das    
  415677:	js     0x415681
  415679:	outs   dx,DWORD PTR ds:[esi]
  41567a:	inc    edx
  41567b:	jp     0x41560f
  41567d:	mov    bl,0xc1
  41567f:	mov    dh,0x65
  415681:	or     esi,ebp
  415683:	mov    ds:0x2b7471c8,eax
  415688:	fscale 
  41568a:	mov    esp,0x98d217c2
  41568f:	and    al,0x3b
  415691:	imul   esi,DWORD PTR gs:[ecx-0x7b1ef7e],0x7
  415699:	mov    edi,0x4c24f1bf
  41569e:	push   esp
  41569f:	scas   eax,DWORD PTR es:[edi]
  4156a0:	mov    al,ds:0xa86706be
  4156a5:	mov    DWORD PTR [edi+0x23],ecx
  4156a8:	push   edi
  4156a9:	ret    0x142f
  4156ac:	(bad)  
  4156ae:	push   ecx
  4156af:	cdq    
  4156b0:	popf   
  4156b1:	jo     0x4156e9
  4156b3:	push   ds
  4156b4:	pop    ss
  4156b5:	dec    esp
  4156b6:	out    dx,eax
  4156b7:	xor    BYTE PTR [esi],bh
  4156b9:	(bad)  
  4156ba:	adc    BYTE PTR [edi+0x9],ah
  4156bd:	sar    BYTE PTR [ebx+eiz*2],0x17
  4156c1:	mov    ebp,0xe39839b8
  4156c6:	xor    al,0x5a
  4156c8:	outs   dx,DWORD PTR fs:[esi]
  4156ca:	mov    ecx,0xb82154f
  4156cf:	xchg   edx,eax
  4156d0:	pop    esp
  4156d1:	push   ss
  4156d2:	and    eax,0x45117b5d
  4156d7:	fnstsw WORD PTR [ecx]
  4156d9:	mov    es,WORD PTR [edi]
  4156db:	(bad)  
  4156dc:	shl    BYTE PTR [eax-0x3e],0x57
  4156e0:	outs   dx,BYTE PTR ds:[esi]
  4156e1:	imul   esp,DWORD PTR [eax+0xb453d6d],0xffffffbf
  4156e8:	cmp    BYTE PTR [ecx],ch
  4156ea:	pop    esi
  4156eb:	shr    al,1
  4156ed:	(bad)  
  4156ee:	in     eax,0x9a
  4156f0:	clc    
  4156f1:	pop    esp
  4156f2:	adc    DWORD PTR gs:[edi+0x49],edi
  4156f6:	jns    0xaf866cc1
  4156fc:	xchg   edi,eax
  4156fd:	sbb    eax,0x98bdebf
  415702:	fisttp DWORD PTR [edx-0x61]
  415705:	mov    eax,0x3eedc41f
  41570a:	lods   eax,DWORD PTR ds:[esi]
  41570b:	xchg   ebx,eax
  41570c:	(bad)  
  41570d:	push   esp
  41570e:	popf   
  41570f:	xchg   ebp,eax
  415710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415711:	mov    ebx,0x9e21a379
  415716:	jns    0x4156fa
  415718:	inc    edi
  415719:	jg     0x415705
  41571b:	pop    esi
  41571c:	mov    esp,0x4eb7663a
  415721:	or     DWORD PTR [ecx+0x4a],ebp
  415724:	adc    BYTE PTR [edi+0x49],ah
  415727:	cmp    edi,DWORD PTR [eax]
  415729:	jmp    0x3748:0xafdcb271
  415730:	push   ebx
  415731:	mov    eax,ds:0x190b4894
  415736:	retf   
  415737:	mov    ebp,0xd0c4a81a
  41573c:	dec    ebp
  41573d:	outs   dx,BYTE PTR ds:[esi]
  41573e:	mov    edi,0x693ede5d
  415743:	xchg   DWORD PTR [edx-0x25],edx
  415746:	test   ah,ch
  415748:	outs   dx,BYTE PTR ds:[esi]
  415749:	int3   
  41574a:	sub    cl,ch
  41574c:	sahf   
  41574d:	std    
  41574e:	pop    es
  41574f:	add    DWORD PTR [ebx+0xd8b208d],ebp
  415755:	mov    ecx,0x2a39668c
  41575a:	fcmovnb st,st(4)
  41575c:	push   ecx
  41575d:	push   eax
  41575e:	in     al,dx
  41575f:	adc    BYTE PTR [edx+0x45],bl
  415762:	push   edx
  415763:	sbb    BYTE PTR [ebx+0x74],ch
  415766:	sbb    cl,ah
  415768:	jno    0x415753
  41576a:	jp     0x415785
  41576c:	dec    esi
  41576d:	inc    edx
  41576e:	into   
  41576f:	push   0x17b8a1ff
  415774:	inc    esp
  415775:	pop    esi
  415776:	outs   dx,BYTE PTR ds:[esi]
  415777:	fst    QWORD PTR [ebx-0x56]
  41577a:	mov    cl,0xa3
  41577c:	sahf   
  41577d:	rol    DWORD PTR [esi],1
  41577f:	ja     0x415739
  415781:	push   cs
  415782:	jle    0x4157a2
  415784:	and    al,0xd4
  415786:	cwde   
  415787:	test   BYTE PTR [eax],bl
  415789:	mov    eax,ds:0xcdd47242
  41578e:	adc    eax,0x483d5258
  415793:	jae    0x415794
  415795:	pop    ebx
  415796:	fs iret 
  415798:	jns    0x41580d
  41579a:	jb     0x415745
  41579c:	and    DWORD PTR [edx+0x19741454],0x40e79b69
  4157a6:	add    eax,0x9109020e
  4157ab:	or     bh,dh
  4157ad:	lock call 0x3af2cf7d
  4157b3:	pop    ecx
  4157b4:	rol    BYTE PTR [ecx+0x478186b1],1
  4157ba:	inc    esp
  4157bb:	mov    eax,0x25ce29f5
  4157c0:	jo     0x415803
  4157c2:	push   esp
  4157c3:	outs   dx,DWORD PTR ds:[esi]
  4157c4:	or     ecx,0x67
  4157c7:	retf   
  4157c8:	xor    eax,0x857f9400
  4157cd:	fnstsw WORD PTR [edi+0x1a92bf20]
  4157d3:	cmp    BYTE PTR [ebx],0xef
  4157d6:	loop   0x415779
  4157d8:	sbb    DWORD PTR [eax+0x38],ecx
  4157db:	mov    esp,0x369e8ba4
  4157e0:	repnz imul ebx,esi,0x2d2c3fe2
  4157e7:	and    DWORD PTR [edx],eax
  4157e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ea:	sbb    DWORD PTR [esp+ebp*8+0x5c],0xffffffe1
  4157ef:	inc    ebx
  4157f0:	pushf  
  4157f1:	aas    
  4157f2:	addr16 xor al,0x23
  4157f5:	dec    ebp
  4157f6:	inc    eax
  4157f7:	mov    ds:0x474cee8c,al
  4157fc:	(bad)  
  4157fd:	sbb    ebx,DWORD PTR [edi]
  4157ff:	pop    ds
  415800:	xor    DWORD PTR [ecx+eiz*2-0x65328537],0xffffff8c
  415808:	sbb    ecx,DWORD PTR ds:0x20383358
  41580e:	int    0xc6
  415810:	push   edx
  415811:	icebp  
  415812:	sbb    BYTE PTR [eax-0x5b],0xe2
  415816:	bound  edx,QWORD PTR [edi-0x42]
  415819:	jl     0x415852
  41581b:	push   ecx
  41581c:	xchg   ebx,eax
  41581d:	int3   
  41581e:	fstp   DWORD PTR [esi]
  415820:	(bad)  [eax+ecx*8+0x14]
  415824:	aad    0x15
  415826:	xchg   edx,eax
  415827:	xchg   DWORD PTR [esi+eax*2-0x418e803e],ebx
  41582e:	bound  edx,QWORD PTR [esi]
  415830:	pop    edx
  415831:	and    BYTE PTR [eiz*8+0x4f6c3f71],cl
  415838:	or     BYTE PTR [ecx-0x6a],dh
  41583b:	dec    eax
  41583c:	inc    esi
  41583d:	in     al,dx
  41583e:	imul   edx,DWORD PTR [esi],0x55
  415841:	jmp    0x35c9:0x592d5f99
  415848:	pop    esi
  415849:	inc    DWORD PTR [ecx]
  41584b:	and    al,0x5b
  41584d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41584e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41584f:	in     eax,dx
  415850:	push   ebx
  415851:	dec    ebx
  415852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415854:	jecxz  0x41587e
  415856:	mov    bl,0x68
  415858:	(bad)  
  415859:	sub    ah,bl
  41585b:	push   edi
  41585c:	pop    ebp
  41585d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41585e:	je     0x4157fd
  415860:	repnz scas al,BYTE PTR es:[edi]
  415862:	ret    0x613f
  415865:	sub    DWORD PTR [ecx],esi
  415867:	push   ss
  415868:	fwait
  415869:	cld    
  41586a:	into   
  41586b:	pushf  
  41586c:	mov    cl,0x0
  41586e:	jge    0x415801
  415870:	loopne 0x415838
  415872:	cld    
  415873:	cdq    
  415874:	pop    ds
  415875:	inc    eax
  415876:	xor    ecx,eax
  415878:	mov    esp,0xd8fd1ea0
  41587d:	mov    edx,DWORD PTR [edx+eiz*8]
  415880:	sti    
  415881:	xor    bl,BYTE PTR [ebx+edx*2]
  415884:	pop    edi
  415885:	fisttp WORD PTR [ebx-0x2d345ebc]
  41588b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41588c:	jno    0x415845
  41588e:	jle    0x4158fe
  415890:	out    0xa2,eax
  415892:	push   ds
  415893:	jnp    0x4158fa
  415895:	data16 jge 0x415888
  415898:	jge    0x415913
  41589a:	aam    0xde
  41589c:	loope  0x4158f9
  41589e:	(bad)  
  41589f:	mov    edi,0x6070365d
  4158a4:	test   al,0x4e
  4158a6:	hlt    
  4158a7:	mov    edx,0xc427b12f
  4158ac:	mov    cl,0xd7
  4158ae:	sub    ah,cl
  4158b0:	add    ch,BYTE PTR [edx-0x28b06ec5]
  4158b6:	xchg   ebx,eax
  4158b7:	test   BYTE PTR [esi+0x6],0x7e
  4158bb:	fwait
  4158bc:	xchg   esp,eax
  4158bd:	(bad)  
  4158bf:	push   ebp
  4158c0:	xor    al,ch
  4158c2:	push   ss
  4158c3:	call   0xa2a:0xa106e6b3
  4158ca:	dec    esp
  4158cb:	xchg   ecx,eax
  4158cc:	mov    dl,0x12
  4158ce:	loop   0x415922
  4158d0:	cmc    
  4158d1:	mov    eax,ds:0xc2cf6b45
  4158d6:	retf   
  4158d7:	repnz xor DWORD PTR ds:0x10d3ba52,eax
  4158de:	push   ss
  4158df:	dec    edx
  4158e0:	sbb    DWORD PTR [eax],0x4ee5526d
  4158e6:	mov    bl,0x29
  4158e8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4158ea:	ret    
  4158eb:	xor    eax,0xea53ea50
  4158f0:	jns    0x415897
  4158f2:	cs jae 0x4158ae
  4158f5:	adc    al,0x1e
  4158f7:	jle    0x4158e5
  4158f9:	fimul  WORD PTR ds:0xdb443ea1
  4158ff:	scas   al,BYTE PTR es:[edi]
  415900:	aas    
  415901:	xor    al,BYTE PTR [edi-0x2444de76]
  415907:	loopne 0x41592f
  415909:	cmp    edi,DWORD PTR [edi+0x3f193237]
  41590f:	adc    bh,bh
  415911:	jecxz  0x41596a
  415913:	mov    ebx,0x579cb9a0
  415918:	cmc    
  415919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41591a:	int3   
  41591b:	nop
  41591c:	cld    
  41591d:	push   0xa1b67231
  415922:	inc    ebx
  415923:	pop    ebx
  415924:	push   0xff4271d7
  415929:	push   0x4c
  41592b:	aam    0xb0
  41592d:	xchg   ebp,eax
  41592e:	inc    esi
  41592f:	fisttp DWORD PTR [edx-0x9]
  415932:	repz and eax,edx
  415935:	pop    esi
  415936:	jmp    0x41590d
  415938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415939:	iret   
  41593a:	jno    0x41592c
  41593c:	jl     0x4158c3
  41593e:	(bad)  
  41593f:	out    0xe5,al
  415941:	inc    eax
  415942:	cmp    bh,al
  415944:	je     0x4158fd
  415946:	adc    ah,BYTE PTR [edi]
  415948:	dec    ebx
  415949:	push   esi
  41594a:	(bad)  
  41594c:	cmp    eax,0x7a126fca
  415951:	mov    al,0xeb
  415953:	pop    ebp
  415954:	out    0xf6,al
  415956:	gs jne 0x4159bd
  415959:	sub    eax,0x58515b5c
  41595e:	xor    DWORD PTR [ebx-0x26],0xd6b4d098
  415965:	test   DWORD PTR [eax],edi
  415967:	mov    dh,0xbe
  415969:	pop    ds
  41596a:	cdq    
  41596b:	xor    ch,dl
  41596d:	cdq    
  41596e:	call   0xf88b140d
  415973:	xchg   dl,dh
  415975:	or     dh,BYTE PTR [eax-0x35]
  415978:	bound  ebp,QWORD PTR [esi+0x3edf0024]
  41597e:	mov    DWORD PTR [ebp-0x8],esi
  415981:	test   BYTE PTR [esi+0x15],dl
  415984:	arpl   WORD PTR [ebp+0x535d70a0],di
  41598a:	mov    ah,0x6a
  41598c:	mov    ebx,0xf6e0f098
  415991:	std    
  415992:	call   0xee770dcf
  415997:	push   cs
  415998:	mov    esi,0xf3aa9e71
  41599d:	aam    0x3
  41599f:	cli    
  4159a0:	jge    0x41592d
  4159a2:	fwait
  4159a3:	xchg   ebx,eax
  4159a4:	retf   
  4159a5:	les    ebx,FWORD PTR ds:0xfa98d0db
  4159ab:	out    dx,al
  4159ac:	fs xchg dh,bh
  4159af:	push   cs
  4159b0:	into   
  4159b1:	fidiv  DWORD PTR [esi]
  4159b3:	(bad)  
  4159b4:	jmp    0x4528:0xf1df955a
  4159bb:	add    eax,0xa881c9e4
  4159c0:	ss stos BYTE PTR es:[edi],al
  4159c2:	ds stos DWORD PTR es:[edi],eax
  4159c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159c5:	(bad)  
  4159c6:	jge    0x415a16
  4159c8:	cld    
  4159c9:	sbb    cl,BYTE PTR ds:0x902ec5e2
  4159cf:	shl    BYTE PTR [edi+0x4],0x38
  4159d3:	jge    0x415999
  4159d5:	ins    BYTE PTR es:[edi],dx
  4159d6:	mov    edi,0xabe321da
  4159db:	cmp    edi,DWORD PTR [edi+ebx*2+0x1840a9ef]
  4159e2:	inc    ebp
  4159e3:	imul   eax,DWORD PTR [ebp+0x5d],0x31
  4159e7:	cmp    al,0xe6
  4159e9:	ficomp WORD PTR ds:[edi]
  4159ec:	frstor [ebx+edi*8]
  4159ef:	mov    gs,ecx
  4159f1:	mov    DWORD PTR [eax-0x7],ebx
  4159f4:	fisub  DWORD PTR [esi+edi*1+0x39b5d8a1]
  4159fb:	and    eax,0x6b0c5823
  415a00:	shr    DWORD PTR ds:[ecx-0x23305ec2],0xb7
  415a08:	and    DWORD PTR [edx],eax
  415a0a:	stc    
  415a0b:	fdiv   QWORD PTR [esi+0x3b896fdf]
  415a11:	in     al,dx
  415a12:	inc    eax
  415a13:	imul   BYTE PTR [edx-0x2f]
  415a16:	dec    edx
  415a17:	mov    eax,ds:0xbb26f3d8
  415a1c:	cmp    ch,cl
  415a1e:	cmp    eax,0xf40fcc3f
  415a23:	pop    edi
  415a24:	iret   
  415a25:	imul   cl
  415a27:	xchg   edi,eax
  415a28:	sub    al,dh
  415a2a:	xchg   ecx,eax
  415a2b:	adc    al,0x30
  415a2d:	dec    ebx
  415a2e:	data16 jo 0x4159e0
  415a31:	(bad)
  415a34:	xor    eax,DWORD PTR [eax-0x13]
  415a37:	daa    
  415a38:	aas    
  415a39:	mov    cl,bl
  415a3b:	or     bl,BYTE PTR [ecx+0x71]
  415a3e:	pop    es
  415a3f:	jl     0x415a01
  415a41:	lds    ebx,FWORD PTR [ecx+ebx*8+0x4df258e4]
  415a48:	mov    dl,ch
  415a4a:	inc    ecx
  415a4b:	icebp  
  415a4c:	not    DWORD PTR ds:[ebx+0x58]
  415a50:	jo     0x4159d4
  415a52:	js     0x415a72
  415a54:	jns    0x415a19
  415a56:	mov    ebp,0x40afb417
  415a5b:	mov    ds:0x1cb8fd62,eax
  415a60:	pop    ds
  415a61:	pop    ss
  415a62:	jg     0x415a8d
  415a64:	jl     0x415ab0
  415a66:	add    al,0x30
  415a68:	das    
  415a69:	ins    DWORD PTR es:[edi],dx
  415a6a:	push   ebp
  415a6b:	push   edi
  415a6c:	jnp    0x415a36
  415a6e:	xor    al,0xce
  415a70:	sbb    edi,DWORD PTR [edx-0x3d]
  415a73:	ins    BYTE PTR es:[edi],dx
  415a74:	adc    DWORD PTR [edi-0x7],esp
  415a77:	mov    ebp,DWORD PTR [ecx]
  415a79:	das    
  415a7a:	jge    0x415a17
  415a7c:	stos   BYTE PTR es:[edi],al
  415a7d:	call   0x9820:0xe6b23c5
  415a84:	(bad)  
  415a85:	in     al,dx
  415a86:	jg     0x415ac2
  415a88:	jnp    0x415a61
  415a8a:	cmp    al,0x48
  415a8c:	push   edx
  415a8d:	idiv   DWORD PTR [ecx+0x4c372fc1]
  415a93:	xor    al,0x41
  415a95:	leave  
  415a96:	aam    0xcf
  415a98:	jo     0x415a54
  415a9a:	or     bl,BYTE PTR [ebx-0x2eeda6cf]
  415aa0:	and    BYTE PTR [edi+0x29],dh
  415aa3:	in     al,0xfa
  415aa5:	sub    edx,ebp
  415aa7:	or     edx,DWORD PTR [edx-0x46]
  415aaa:	sbb    bl,bh
  415aac:	push   ebx
  415aad:	hlt    
  415aae:	dec    edx
  415aaf:	jecxz  0x415b0b
  415ab1:	push   edx
  415ab2:	jns    0x415a4f
  415ab4:	jae    0x415a47
  415ab6:	inc    eax
  415ab7:	cmp    al,0xbc
  415ab9:	push   edx
  415aba:	bound  ebp,QWORD PTR [esp+ebx*2]
  415abd:	sbb    DWORD PTR [edx-0x715c095e],eax
  415ac3:	addr16 dec edx
  415ac5:	dec    ebx
  415ac6:	leave  
  415ac7:	adc    DWORD PTR [ebx-0x42ac869e],esi
  415acd:	adc    ecx,ebp
  415acf:	das    
  415ad0:	mov    al,ds:0x2f54e6a4
  415ad5:	and    edx,ebx
  415ad7:	les    edx,FWORD PTR [ebx-0x19600414]
  415add:	invd   
  415adf:	mov    ecx,ss
  415ae1:	and    BYTE PTR [esi],dh
  415ae3:	icebp  
  415ae4:	(bad)  
  415ae5:	mov    DWORD PTR [ebx-0x1e],ecx
  415ae8:	push   ecx
  415ae9:	pop    edi
  415aea:	jb     0x415b4d
  415aec:	clc    
  415aed:	cli    
  415aee:	add    eax,0xdde8f173
  415af3:	push   es
  415af4:	mov    ds:0x41d2011b,eax
  415af9:	adc    BYTE PTR [ebp-0x2a57339c],cl
  415aff:	mov    bl,0xdd
  415b01:	mov    dl,0xf0
  415b03:	push   eax
  415b04:	fiadd  DWORD PTR es:[ebp+0x61]
  415b08:	jmp    0x469d:0x1f266463
  415b0f:	ss dec esi
  415b11:	jne    0x415b58
  415b13:	cmc    
  415b14:	sbb    ebp,ebp
  415b16:	mov    dl,0x5e
  415b18:	xchg   ecx,eax
  415b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b1a:	push   0xf5f8b74c
  415b1f:	jae    0x415ab7
  415b21:	and    DWORD PTR [esi],esp
  415b23:	cmp    esp,edi
  415b25:	pop    ds
  415b26:	jmp    0x63982209
  415b2b:	test   al,0x94
  415b2d:	add    eax,DWORD PTR [esi+0x58424bca]
  415b33:	xor    BYTE PTR [ebx+edx*1],al
  415b36:	bound  eax,QWORD PTR [edx+0x22]
  415b39:	pop    ecx
  415b3a:	inc    edi
  415b3b:	jmp    0x415ad5
  415b3d:	jp     0x415b12
  415b3f:	mov    WORD PTR [esi-0x4],?
  415b42:	pop    ds
  415b43:	dec    ebp
  415b44:	ja     0x415ae1
  415b46:	aad    0x3b
  415b48:	mov    ch,BYTE PTR [esp+edx*2-0x673dcb66]
  415b4f:	xchg   edi,eax
  415b50:	das    
  415b51:	or     bl,BYTE PTR [ecx+0x76]
  415b54:	cmc    
  415b55:	(bad)  
  415b56:	lods   al,BYTE PTR ds:[esi]
  415b57:	jns    0x415bb5
  415b59:	cmp    eax,edx
  415b5b:	and    DWORD PTR [eax+0x4f],esp
  415b5e:	push   esi
  415b5f:	rcl    DWORD PTR [ecx-0x3fe0cf1d],cl
  415b65:	push   ds
  415b66:	ja     0x415b2c
  415b68:	das    
  415b69:	sti    
  415b6a:	sbb    esp,DWORD PTR [eax-0x7784526b]
  415b70:	addr16 data16 icebp 
  415b73:	outs   dx,BYTE PTR ds:[esi]
  415b74:	mov    eax,0x53cf0051
  415b79:	pop    ebp
  415b7a:	rcr    DWORD PTR [edi],0xec
  415b7d:	and    edi,ebx
  415b7f:	out    dx,al
  415b80:	add    eax,DWORD PTR [ebx]
  415b82:	retf   
  415b83:	mov    eax,0x6363b324
  415b88:	icebp  
  415b89:	push   ebp
  415b8a:	jno    0x415b27
  415b8c:	add    al,0x44
  415b8e:	lock call 0x396df6
  415b94:	add    BYTE PTR [ecx+0x4d],dh
  415b97:	xor    al,0x9e
  415b99:	jg     0x415bbf
  415b9b:	xchg   ebp,eax
  415b9c:	mov    ah,0x30
  415b9e:	xor    al,0xd8
  415ba0:	repz jmp 0x5cace864
  415ba6:	movnti DWORD PTR [esi],ebx
  415ba9:	cmc    
  415baa:	xchg   edx,eax
  415bab:	xchg   esp,eax
  415bac:	pop    ecx
  415bad:	xchg   BYTE PTR [edx-0x3e158dc7],ch
  415bb3:	xor    BYTE PTR [edx-0x306552e2],0x2b
  415bba:	fdiv   QWORD PTR [ebx]
  415bbc:	jno    0x415bae
  415bbe:	jmp    0xa5:0x1d2f72cf
  415bc5:	mov    BYTE PTR [ebx-0x2710d286],dl
  415bcb:	sub    BYTE PTR [edx],ah
  415bcd:	adc    DWORD PTR [ecx+0x4e],0xfffffffe
  415bd1:	sbb    ecx,DWORD PTR [ebp-0x1a5c9253]
  415bd7:	push   esi
  415bd8:	retf   
  415bd9:	cmp    BYTE PTR [eax],al
  415bdb:	repnz (bad) 
  415bdd:	outs   dx,DWORD PTR ds:[esi]
  415bde:	addr16 mov ah,0x8b
  415be1:	or     BYTE PTR [ecx],ah
  415be3:	aad    0x78
  415be5:	pop    eax
  415be6:	aad    0xb4
  415be8:	in     eax,dx
  415be9:	repz or DWORD PTR [esi],0xffffff9e
  415bed:	push   es
  415bee:	mov    ebp,0xf2dbd1ef
  415bf3:	push   0x3ebaffb2
  415bf8:	cmp    ebx,DWORD PTR [esp+ecx*4]
  415bfb:	xor    eax,0xb78a9a49
  415c00:	les    ebp,FWORD PTR [eax]
  415c02:	(bad)  
  415c03:	sbb    edx,DWORD PTR [ebp-0x1e]
  415c06:	ss adc dh,dh
  415c09:	ret    0xb3cc
  415c0c:	scas   eax,DWORD PTR es:[edi]
  415c0d:	and    al,0x9c
  415c0f:	shl    DWORD PTR [edi],1
  415c11:	aad    0x2e
  415c13:	or     dh,ah
  415c15:	popf   
  415c16:	adc    dh,dl
  415c18:	stos   DWORD PTR es:[edi],eax
  415c19:	add    dh,BYTE PTR [esi]
  415c1b:	lds    edx,FWORD PTR [esi*1-0x7dd3c2a]
  415c22:	jp     0x415ca3
  415c24:	jne    0x415c7f
  415c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c27:	das    
  415c28:	fst    QWORD PTR [edi-0x230ed751]
  415c2e:	mov    bl,0x76
  415c30:	iret   
  415c31:	int    0xbb
  415c33:	call   0x59d8f576
  415c38:	(bad)  
  415c39:	sahf   
  415c3a:	and    eax,0xc8605e35
  415c3f:	(bad)  
  415c40:	jmp    0x75355ed
  415c45:	ror    BYTE PTR [eax+0x2d],1
  415c48:	jnp    0x415cc1
  415c4a:	or     esp,DWORD PTR [edx-0x2222e636]
  415c50:	sahf   
  415c51:	fcom   QWORD PTR [ebp-0x30de7b77]
  415c57:	jno    0x415ca0
  415c59:	and    al,0x79
  415c5b:	or     ecx,DWORD PTR [edi]
  415c5d:	ja     0x415c04
  415c5f:	mov    al,0x7f
  415c61:	cmp    eax,0x55d3755b
  415c66:	cmc    
  415c67:	popf   
  415c68:	xor    DWORD PTR [ecx],edx
  415c6a:	leave  
  415c6b:	sub    al,0x40
  415c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c6e:	mov    ebx,ebx
  415c70:	aas    
  415c71:	into   
  415c72:	xchg   ecx,eax
  415c73:	push   esi
  415c74:	sti    
  415c75:	aas    
  415c76:	add    esi,DWORD PTR [edi+0x72]
  415c79:	enter  0xffa4,0xc0
  415c7d:	xlat   BYTE PTR ds:[ebx]
  415c7e:	mov    edi,0xef93d9c3
  415c83:	int3   
  415c84:	popa   
  415c85:	adc    DWORD PTR [ebx+0x32],ebx
  415c88:	inc    edi
  415c89:	out    0x12,al
  415c8b:	daa    
  415c8c:	pusha  
  415c8d:	jge    0x415c46
  415c8f:	fiadd  WORD PTR [ebx-0x7f]
  415c92:	xchg   ebx,eax
  415c93:	idiv   DWORD PTR [edi]
  415c95:	popf   
  415c96:	inc    ebp
  415c97:	test   DWORD PTR [ebp-0x7b],esi
  415c9a:	or     eax,0xcf61b0a
  415c9f:	out    0xda,al
  415ca1:	mov    dh,0x23
  415ca3:	xlat   BYTE PTR ds:[ebx]
  415ca4:	stos   DWORD PTR es:[edi],eax
  415ca5:	mov    esi,0xd675b0c3
  415caa:	mov    dh,0x89
  415cac:	frstpm(287 only) 
  415cae:	imul   ebp,DWORD PTR [ecx-0x58],0xb6fc6109
  415cb5:	fstp   TBYTE PTR [edi+0xe]
  415cb8:	je     0x415cda
  415cba:	lods   eax,DWORD PTR ds:[esi]
  415cbb:	or     dh,BYTE PTR [edi-0x7c7c7c48]
  415cc1:	fwait
  415cc2:	mov    ecx,0x83f2ef9c
  415cc7:	add    DWORD PTR [ecx+edx*8],edx
  415cca:	shr    BYTE PTR [edx+ecx*4],0x4a
  415cce:	pop    ds
  415ccf:	jg     0x415cf9
  415cd1:	and    ebp,ecx
  415cd3:	jbe    0x415d3a
  415cd5:	mov    edi,0xfdeef758
  415cda:	daa    
  415cdb:	inc    eax
  415cdc:	jb     0x415c60
  415cde:	mov    ds:0x53e73d51,al
  415ce3:	mov    eax,0xa53f76c1
  415ce8:	jle    0x415d57
  415cea:	jmp    0x783a:0xb5502f
  415cf1:	xlat   BYTE PTR ds:[ebx]
  415cf2:	aas    
  415cf3:	xchg   ebp,eax
  415cf4:	(bad)  
  415cf5:	pop    ebp
  415cf6:	xchg   edx,eax
  415cf7:	pop    esp
  415cf8:	ins    DWORD PTR es:[edi],dx
  415cf9:	mov    eax,0x5f88eaad
  415cfe:	pop    esp
  415cff:	cmp    al,0x42
  415d01:	jns    0x415d65
  415d03:	or     edx,DWORD PTR ds:0xb50183d6
  415d09:	lds    edx,FWORD PTR [edx+edx*8-0x6b79ab18]
  415d10:	js     0x415c9a
  415d12:	push   0xffffffb4
  415d14:	retf   
  415d15:	sar    BYTE PTR [esi],cl
  415d17:	sbb    eax,0xbc34d44c
  415d1c:	cwde   
  415d1d:	test   BYTE PTR [ecx+0x317982d1],dh
  415d23:	outs   dx,DWORD PTR ds:[esi]
  415d24:	test   BYTE PTR [ecx],dh
  415d26:	xlat   BYTE PTR ds:[ebx]
  415d27:	in     eax,0x8d
  415d29:	and    BYTE PTR [ebp-0x544ea498],ch
  415d2f:	leave  
  415d30:	mov    al,ds:0x8b1ba978
  415d35:	jo     0x415da5
  415d37:	mov    BYTE PTR [edi],dl
  415d39:	addr16 sbb eax,0xdfaf1222
  415d3f:	push   ebx
  415d40:	stos   BYTE PTR es:[edi],al
  415d41:	(bad)  
  415d42:	jg     0x415cdf
  415d44:	out    0xe1,eax
  415d46:	lods   eax,DWORD PTR ds:[esi]
  415d47:	ret    
  415d48:	and    al,0xd8
  415d4a:	retf   0xb782
  415d4d:	ins    DWORD PTR es:[edi],dx
  415d4e:	popf   
  415d4f:	cdq    
  415d50:	setno  BYTE PTR [ecx]
  415d53:	in     eax,0xd0
  415d55:	pop    ss
  415d56:	lea    esp,[ebx+0x4bbe087e]
  415d5c:	jnp    0x415cec
  415d5e:	xchg   DWORD PTR [edx],esi
  415d60:	lds    esp,FWORD PTR [edi-0x1b71ac7]
  415d66:	adc    DWORD PTR [edi-0x2deb66cf],esi
  415d6c:	and    DWORD PTR [edx+0x71],eax
  415d6f:	pop    esp
  415d70:	jno    0x415d10
  415d72:	cli    
  415d73:	and    BYTE PTR [eax],ah
  415d75:	lods   eax,DWORD PTR ds:[esi]
  415d76:	jle    0x415d27
  415d78:	ds addr16 daa 
  415d7b:	push   edx
  415d7c:	push   cs
  415d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d7e:	pop    ss
  415d7f:	jl     0x415d15
  415d81:	push   eax
  415d82:	push   0xe1ada5ed
  415d87:	repnz fcomp QWORD PTR [edi]
  415d8a:	mov    ebp,0x99d0ea42
  415d8f:	mov    cl,0x66
  415d91:	clc    
  415d92:	addr16 cmp al,0xf
  415d95:	inc    esi
  415d96:	and    al,0x2e
  415d98:	dec    ebx
  415d99:	dec    esp
  415d9a:	jne    0x415d40
  415d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d9d:	mov    edi,0x5fc57fe4
  415da2:	xor    al,0xed
  415da4:	outs   dx,DWORD PTR ds:[esi]
  415da5:	pop    es
  415da6:	cmp    edx,edi
  415da8:	fidivr WORD PTR [edx]
  415daa:	or     eax,edi
  415dac:	add    eax,0x9fa70269
  415db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db2:	repz ja 0x415e2a
  415db5:	lods   eax,DWORD PTR ds:[esi]
  415db6:	in     eax,0x2d
  415db8:	add    eax,0xd91d2ea
  415dbd:	aaa    
  415dbe:	sbb    esi,ebx
  415dc0:	(bad)  
  415dc1:	(bad)  
  415dc2:	mov    eax,0x509c4c05
  415dc7:	clc    
  415dc8:	fwait
  415dc9:	mov    edx,fs
  415dcb:	shr    DWORD PTR [ebx],0x3a
  415dce:	inc    ecx
  415dcf:	pop    esp
  415dd0:	cmp    BYTE PTR [edi],ah
  415dd2:	(bad)  
  415dd3:	in     eax,dx
  415dd4:	outs   dx,DWORD PTR ds:[esi]
  415dd5:	mov    edx,0x41339d29
  415dda:	fild   WORD PTR [ebp+0x7e]
  415ddd:	cmp    eax,0x2e8aab5e
  415de2:	push   ss
  415de3:	add    edi,ebp
  415de5:	inc    ecx
  415de6:	jne    0x415de8
  415de8:	or     DWORD PTR [ecx-0x78],ebx
  415deb:	outs   dx,DWORD PTR ds:[esi]
  415dec:	adc    DWORD PTR [eax-0x4fde9c9c],ebp
  415df2:	test   eax,0xd1b8d44f
  415df7:	xor    ebx,esi
  415df9:	jg     0x415dd9
  415dfb:	int    0xdf
  415dfd:	or     al,0x49
  415dff:	xor    eax,0xf10346f
  415e04:	sbb    bh,BYTE PTR [ecx-0x52]
  415e07:	not    DWORD PTR gs:[esi]
  415e0a:	mov    edx,0xfda89edc
  415e0f:	ficom  WORD PTR [eax-0x55]
  415e12:	push   ebp
  415e13:	dec    esp
  415e14:	arpl   WORD PTR [ebx-0x7e],di
  415e17:	enter  0x8cdd,0x77
  415e1b:	fst    QWORD PTR [edi+ebp*2]
  415e1e:	out    0x2b,eax
  415e20:	aas    
  415e21:	mov    ah,ah
  415e23:	xchg   ebp,eax
  415e24:	bound  esi,QWORD PTR [ebx+0x4a]
  415e27:	fiadd  WORD PTR [esi]
  415e29:	sub    ch,BYTE PTR [ecx+ebx*4+0x70]
  415e2d:	pop    esi
  415e2e:	dec    esi
  415e2f:	rol    DWORD PTR [edi+0x15],cl
  415e32:	and    BYTE PTR [edx],cl
  415e34:	arpl   bp,sp
  415e36:	mov    bl,0x48
  415e38:	adc    ah,BYTE PTR [ecx+eiz*1+0x566023de]
  415e3f:	addr16 pop esi
  415e41:	jl     0x415dec
  415e43:	push   es
  415e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e46:	push   ebp
  415e47:	adc    eax,0x4a7720e0
  415e4c:	clc    
  415e4d:	enter  0x2294,0xd
  415e51:	(bad)  
  415e53:	fidivr DWORD PTR [eax]
  415e55:	nop
  415e56:	sub    esi,ecx
  415e58:	ins    BYTE PTR es:[edi],dx
  415e59:	out    dx,eax
  415e5a:	out    0xc,eax
  415e5c:	(bad)  
  415e5d:	jmp    0xcf4acf4f
  415e62:	inc    ebp
  415e63:	and    dl,al
  415e65:	inc    ebx
  415e66:	xchg   ebx,eax
  415e67:	nop
  415e68:	mov    DWORD PTR [esi+0xe],ebx
  415e6b:	adc    eax,0xbeacdddb
  415e70:	xor    bl,BYTE PTR [edi]
  415e72:	loope  0x415e92
  415e74:	(bad)  
  415e75:	gs nop
  415e77:	ficom  WORD PTR [esi+0x415551b]
  415e7d:	bound  eax,QWORD PTR [esi-0x6213f459]
  415e83:	and    DWORD PTR [esp+esi*4],ebx
  415e86:	xchg   esi,eax
  415e87:	jne    0x415eb1
  415e89:	dec    ebp
  415e8a:	sti    
  415e8b:	push   esp
  415e8c:	bnd jnp 0x415e59
  415e8f:	sub    BYTE PTR [ecx+0x2a],al
  415e92:	ret    
  415e93:	ret    
  415e94:	cmp    al,BYTE PTR ds:0xf8755aca
  415e9a:	pop    es
  415e9b:	(bad)  
  415e9c:	or     DWORD PTR [ecx-0x17767e68],ebx
  415ea2:	dec    edx
  415ea3:	inc    edi
  415ea4:	scas   al,BYTE PTR es:[edi]
  415ea5:	pop    esp
  415ea6:	and    eax,0x2d128430
  415eab:	cmp    ah,BYTE PTR [eax]
  415ead:	sar    DWORD PTR [ecx+0x5a],1
  415eb0:	and    cl,BYTE PTR [edx+0x68dfedd]
  415eb6:	mov    edi,ecx
  415eb8:	inc    ebp
  415eb9:	xchg   DWORD PTR [ebp+0x2a1af800],ebp
  415ebf:	mov    ch,0xd7
  415ec1:	inc    edx
  415ec2:	icebp  
  415ec3:	(bad)  
  415ec4:	jl     0x415e71
  415ec6:	mov    esp,0x2f6bdbf8
  415ecb:	ins    DWORD PTR es:[edi],dx
  415ecc:	out    0x79,eax
  415ece:	dec    edx
  415ecf:	call   0x23dc:0x396909a8
  415ed6:	dec    esp
  415ed7:	std    
  415ed8:	add    eax,0x127b9f05
  415edd:	or     ebp,DWORD PTR [ecx+0x32]
  415ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee1:	dec    ebp
  415ee2:	sbb    eax,0x7c8d9d17
  415ee7:	nop
  415ee8:	jmp    0x2d9e:0x9f373fbc
  415eef:	jae    0x415f5f
  415ef1:	jecxz  0x415e74
  415ef3:	sbb    dh,bl
  415ef5:	pop    esp
  415ef6:	dec    ecx
  415ef7:	xor    eax,0x6ede4d7d
  415efc:	or     DWORD PTR [edi-0x3e603108],ecx
  415f02:	mov    al,0x80
  415f04:	mov    edx,0x77756acb
  415f09:	popa   
  415f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f0b:	sbb    bh,ah
  415f0d:	mov    edx,0xb1df59b1
  415f12:	neg    dl
  415f14:	rol    BYTE PTR [ebp-0xc],cl
  415f17:	add    cl,BYTE PTR [edi+0x3a98f37]
  415f1d:	bound  ebx,QWORD PTR [ebx]
  415f1f:	xor    al,0x9d
  415f21:	sbb    eax,0xe3f20b8
  415f26:	daa    
  415f27:	mov    al,ds:0x8b4c6452
  415f2c:	mov    ds:0x971c3865,al
  415f31:	xchg   ecx,eax
  415f32:	lods   al,BYTE PTR ds:[esi]
  415f33:	jnp    0x415f94
  415f35:	scas   al,BYTE PTR es:[edi]
  415f36:	add    bh,dl
  415f38:	leave  
  415f39:	test   eax,0x640a41df
  415f3e:	xor    al,cl
  415f40:	mov    DWORD PTR [edi+0x14ffa9d9],edx
  415f46:	and    DWORD PTR [ebx+0x224d166e],0x642ec4f0
  415f50:	mov    edi,0x707ff2bf
  415f55:	cli    
  415f56:	sbb    DWORD PTR [eax],ebx
  415f58:	add    edi,edx
  415f5a:	sub    bh,dh
  415f5c:	call   0x4efb9aee
  415f61:	mov    dl,0x2
  415f63:	push   edx
  415f64:	cmp    al,0xcf
  415f66:	sub    ebx,DWORD PTR [ecx-0x5d]
  415f69:	sahf   
  415f6a:	dec    edx
  415f6b:	xor    eax,0x81a58c52
  415f70:	mov    ecx,DWORD PTR [ebx]
  415f72:	mov    eax,ds:0x7eef2336
  415f77:	aam    0xbe
  415f79:	push   ebx
  415f7a:	mov    ecx,DWORD PTR [esi]
  415f7c:	push   0xffffffa3
  415f7e:	mov    cl,0xde
  415f80:	and    DWORD PTR [ebp+0x3c],ebp
  415f83:	jnp    0x415f18
  415f85:	jmp    0x416001
  415f87:	mov    ds:0xb67914b3,eax
  415f8c:	iret   
  415f8d:	mov    eax,ds:0xdd594d84
  415f92:	ret    0xc50b
  415f95:	pop    ebp
  415f96:	leave  
  415f97:	or     DWORD PTR [edi+0x77c16ad7],ebx
  415f9d:	lahf   
  415f9e:	and    DWORD PTR [edx+0x27],ecx
  415fa1:	call   0xc7be8278
  415fa6:	jo     0x416006
  415fa8:	mov    ds:0xbc8a47bd,al
  415fad:	jb     0x415f91
  415faf:	imul   edx,DWORD PTR [edi+edi*4-0x72467019],0xffffffc6
  415fb7:	enter  0x8a75,0xa3
  415fbb:	outs   dx,DWORD PTR ds:[esi]
  415fbc:	lahf   
  415fbd:	xchg   DWORD PTR [eax+0x5],esp
  415fc0:	inc    esp
  415fc1:	mov    gs,WORD PTR [ebx+0x12eddcd2]
  415fc7:	cmp    DWORD PTR [esi-0x37dbfbeb],ebp
  415fcd:	(bad)  [ebx]
  415fcf:	xor    DWORD PTR [ebx+0x4d],ecx
  415fd2:	push   ecx
  415fd3:	jo     0x415fdb
  415fd5:	xor    ebx,DWORD PTR [ebx]
  415fd7:	bound  ecx,QWORD PTR [ebp-0x1574bc9]
  415fdd:	jne    0x416016
  415fdf:	mov    al,ds:0xc9a8caf0
  415fe4:	mov    dl,0x1
  415fe6:	mov    dl,0x82
  415fe8:	fild   WORD PTR [edx-0x5b]
  415feb:	in     al,0xb6
  415fed:	and    ebp,edi
  415fef:	jno    0x415fbc
  415ff1:	sbb    al,0x4b
  415ff3:	std    
  415ff4:	iret   
  415ff5:	aad    0xfa
  415ff7:	loopne 0x415f98
  415ff9:	std    
  415ffa:	xor    eax,0x1389911
  415fff:	pop    eax
  416000:	sub    eax,DWORD PTR [ebx+esi*4]
  416003:	or     al,BYTE PTR [edx]
  416005:	inc    ebp
  416006:	shl    DWORD PTR [ebp-0x236729aa],cl
  41600c:	lea    ebp,[esi-0x2f]
  41600f:	adc    esp,DWORD PTR [ecx-0x43]
  416012:	sti    
  416013:	mov    esp,0x5b9d5af4
  416018:	or     esi,DWORD PTR [edi]
  41601a:	sbb    dl,ah
  41601c:	inc    esi
  41601d:	dec    edx
  41601e:	(bad)  
  416020:	bound  ecx,QWORD PTR [edi]
  416022:	push   0xf1ef5fc
  416027:	pop    ebp
  416028:	dec    ebx
  416029:	jle    0x416086
  41602b:	fst    st(2)
  41602d:	repnz pop ss
  41602f:	scas   al,BYTE PTR es:[edi]
  416030:	pushf  
  416031:	xor    eax,0x94f649d6
  416036:	loope  0x416033
  416038:	cmc    
  416039:	mov    ds:0x1ab85e7f,al
  41603e:	sub    ch,BYTE PTR [ebx-0x3cdbe4c0]
  416044:	pop    edx
  416045:	and    eax,0x370234a1
  41604a:	ss jmp 0x2615568d
  416050:	js     0x416073
  416052:	test   al,0xe5
  416054:	pop    ebx
  416055:	push   ds
  416056:	pushf  
  416057:	xor    al,0x93
  416059:	sbb    dl,BYTE PTR [ebx]
  41605b:	mov    bl,BYTE PTR [edx-0x67c3fd65]
  416061:	das    
  416062:	adc    eax,0x469e0f27
  416067:	adc    DWORD PTR [ecx],0x3d2901b1
  41606d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41606e:	loop   0x4160d9
  416070:	cmp    edx,DWORD PTR [ebx]
  416072:	cmp    eax,0xfe2e2522
  416077:	ja     0x416004
  416079:	and    ch,BYTE PTR [edi]
  41607b:	push   ecx
  41607c:	push   esp
  41607d:	out    0x75,eax
  41607f:	pop    edi
  416080:	out    0xd2,al
  416082:	std    
  416083:	mov    DWORD PTR [ebx],ecx
  416085:	pop    ecx
  416086:	inc    esp
  416087:	mov    eax,ds:0x4b4dfc99
  41608c:	sub    ebx,DWORD PTR ds:0x5c0d8c83
  416092:	mov    esi,0x69c3321e
  416097:	inc    esp
  416098:	add    eax,0xfc1e3d87
  41609d:	nop
  41609e:	jmp    0x3db7:0x1c3a3231
  4160a5:	daa    
  4160a6:	mov    ebx,0x7ceb8154
  4160ab:	in     al,0xd9
  4160ad:	out    dx,al
  4160ae:	out    0x9d,eax
  4160b0:	test   al,0xac
  4160b2:	dec    edi
  4160b3:	fcmovnu st,st(5)
  4160b5:	mov    ecx,0xb19c5b5f
  4160ba:	(bad)
  4160be:	pop    edi
  4160bf:	scas   eax,DWORD PTR es:[edi]
  4160c0:	mov    bh,0xcc
  4160c2:	push   es
  4160c3:	mov    dh,0xf3
  4160c5:	cmp    ebx,DWORD PTR [edx-0x47]
  4160c8:	pop    eax
  4160c9:	rcl    DWORD PTR [ebx],0x7f
  4160cc:	adc    al,0xb1
  4160ce:	lock xchg ebx,eax
  4160d1:	in     al,0xe3
  4160d3:	pop    edx
  4160d4:	fld    TBYTE PTR [ebx+0x3d]
  4160d7:	out    dx,eax
  4160d8:	inc    esi
  4160d9:	fst    QWORD PTR [ecx+eiz*4]
  4160dc:	test   esp,0x10a787d6
  4160e2:	(bad)  
  4160e3:	and    edi,ebx
  4160e5:	adc    eax,0x385b14c6
  4160ea:	push   0x73261553
  4160ef:	fbld   TBYTE PTR [eax]
  4160f1:	push   esp
  4160f2:	xor    eax,0xf963f93a
  4160f7:	lock cmp bl,BYTE PTR ss:[edx+ecx*8]
  4160fc:	xor    BYTE PTR [edx-0x39],0x6
  416100:	cld    
  416101:	lahf   
  416102:	mov    edx,0xea4d9b25
  416107:	stos   DWORD PTR es:[edi],eax
  416108:	cdq    
  416109:	in     eax,0xcd
  41610b:	push   ecx
  41610c:	xor    dh,BYTE PTR [esp+eax*4+0x7c2928a1]
  416113:	add    eax,0xbd9f9940
  416118:	push   ecx
  416119:	mov    ebp,0xe68523
  41611e:	sti    
  41611f:	neg    BYTE PTR [edx+0x3c]
  416122:	les    ebx,FWORD PTR [eax+0xe]
  416125:	xchg   esi,eax
  416126:	pop    esi
  416127:	cmp    cl,al
  416129:	mov    ebp,edi
  41612b:	(bad)  
  41612c:	pop    ds
  41612d:	cmp    eax,0x3c9e86f9
  416132:	or     bh,BYTE PTR [ecx]
  416134:	or     al,0xa4
  416136:	mov    DWORD PTR [ebx-0x373adb50],edi
  41613c:	fiadd  WORD PTR [edi]
  41613e:	jae    0x416185
  416140:	or     DWORD PTR [esi],ebx
  416142:	es pop esp
  416144:	fs call 0x8f70:0xe6502e12
  41614c:	std    
  41614d:	inc    edi
  41614f:	cmp    al,0x1
  416151:	inc    ecx
  416152:	push   cs
  416153:	loop   0x416159
  416155:	add    al,0x77
  416157:	mov    ds:0xdc4bbddc,eax
  41615c:	fnstenv [ebx+0x32]
  41615f:	dec    esp
  416160:	mov    dh,0xd8
  416162:	mov    ebx,0x101c617c
  416167:	add    eax,0xfe4e890a
  41616c:	into   
  41616d:	xchg   esi,eax
  41616e:	stos   BYTE PTR es:[edi],al
  41616f:	lea    edi,[eax-0x26]
  416172:	mov    edi,0x5396d333
  416177:	sbb    DWORD PTR [edx+0x74365382],esi
  41617d:	fincstp 
  41617f:	mov    esi,0xfc95616e
  416184:	js     0x4161fd
  416186:	int3   
  416187:	(bad)  [esi+esi*8-0x279f2784]
  41618e:	push   cs
  41618f:	loop   0x4161cf
  416191:	subps  xmm0,XMMWORD PTR [ebx]
  416194:	fimul  WORD PTR [eax+0x2d]
  416197:	mul    DWORD PTR [ebx+0x7925ab94]
  41619d:	jmp    0xd99acf80
  4161a2:	bound  ebp,QWORD PTR [eax+0x2c62a74f]
  4161a8:	in     eax,0x29
  4161aa:	lods   al,BYTE PTR ds:[esi]
  4161ab:	mov    bl,0x45
  4161ad:	xor    DWORD PTR [edi+0x139f7102],esp
  4161b3:	sbb    DWORD PTR [edi-0x58d51da],ebx
  4161b9:	mov    esi,0xd97b7ec2
  4161be:	push   eax
  4161bf:	fadd   st(3),st
  4161c1:	pop    ebx
  4161c2:	out    0xa8,eax
  4161c4:	sar    edx,0xb6
  4161c7:	push   edx
  4161c8:	retf   0xece8
  4161cb:	loope  0x41622a
  4161cd:	pop    ss
  4161ce:	inc    esi
  4161cf:	inc    edi
  4161d0:	in     eax,dx
  4161d1:	lds    ebx,FWORD PTR [ebp-0xa]
  4161d4:	sahf   
  4161d5:	mov    eax,ds:0x111f87c6
  4161da:	push   ebp
  4161db:	fdivr  DWORD PTR [edx-0x16]
  4161de:	jne    0x416246
  4161e0:	(bad)  [edi-0x5bd8adf7]
  4161e6:	mov    esi,0x185f622
  4161eb:	sbb    al,0xce
  4161ed:	adc    cl,bl
  4161ef:	mov    esp,DWORD PTR [edi]
  4161f1:	lds    esi,FWORD PTR [ebp+ecx*4+0x2915de48]
  4161f8:	sbb    eax,0xac2e619f
  4161fd:	sub    DWORD PTR [esi+0x47],esp
  416200:	enter  0x6ce2,0x13
  416204:	xor    esp,DWORD PTR [ebp+0x7d07cbea]
  41620a:	and    eax,0x1bb3886e
  41620f:	jae    0x416200
  416211:	fwait
  416212:	loopne 0x4161de
  416214:	call   0x4cdf:0x73f95184
  41621b:	fimul  WORD PTR [ebx]
  41621d:	adc    al,0x54
  41621f:	mov    WORD PTR [ebp-0xaef1f7c],fs
  416225:	(bad)  
  416226:	fild   WORD PTR [ebp-0x4b80bc54]
  41622c:	mov    ah,0xb7
  41622e:	adc    DWORD PTR [esi+esi*2],esp
  416231:	inc    DWORD PTR [edx+0x2d9046ab]
  416237:	sub    BYTE PTR [eax],0xa9
  41623a:	jns    0x4162b4
  41623c:	lock xchg esi,eax
  41623e:	xchg   esi,eax
  41623f:	(bad)  
  416240:	das    
  416241:	pop    DWORD PTR [edi]
  416243:	xchg   esi,eax
  416244:	jo     0x416278
  416246:	sbb    eax,0x1e07ff9d
  41624b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41624c:	mov    ch,0xa6
  41624e:	addr16 mov ch,0x40
  416251:	mov    ah,0xc5
  416253:	xor    eax,0x7da9b78c
  416258:	xchg   edx,eax
  416259:	setne  BYTE PTR [ecx+0x6a]
  41625d:	dec    eax
  41625e:	scas   al,BYTE PTR es:[edi]
  41625f:	sub    edi,edx
  416261:	pop    edi
  416262:	jo     0x4161eb
  416264:	pop    es
  416265:	xchg   ecx,eax
  416266:	mov    ch,0xd
  416268:	adc    eax,0x8e7971cd
  41626d:	(bad)  
  41626e:	in     al,0xf0
  416270:	(bad)  
  416272:	cmovbe ecx,DWORD PTR [edi-0x2adf9cbc]
  416279:	pop    esi
  41627a:	or     eax,0x90223143
  41627f:	xlat   BYTE PTR ds:[ebx]
  416280:	pushf  
  416281:	iret   
  416282:	ds jo  0x416301
  416285:	mov    ds,WORD PTR [edi+0x2a]
  416288:	or     edx,DWORD PTR [edx-0x13]
  41628b:	imul   esi,DWORD PTR [ebx+eiz*1],0x55
  41628f:	rol    edi,cl
  416291:	out    dx,eax
  416292:	xchg   BYTE PTR [edi+0x29],al
  416295:	stc    
  416296:	xor    BYTE PTR [edi-0x58],0x6e
  41629a:	in     al,0x7f
  41629c:	mov    dh,0x8b
  41629e:	xchg   edx,eax
  41629f:	sub    eax,esi
  4162a1:	dec    esp
  4162a2:	or     eax,DWORD PTR [eax-0x6439d40d]
  4162a8:	inc    edi
  4162a9:	dec    ebp
  4162aa:	pop    ecx
  4162ab:	int    0x39
  4162ad:	neg    cl
  4162af:	mov    esp,0xa2df385
  4162b4:	dec    edi
  4162b5:	dec    ebx
  4162b6:	iret   
  4162b7:	stos   BYTE PTR es:[edi],al
  4162b8:	add    edi,DWORD PTR [eax-0x3c]
  4162bb:	ja     0x416251
  4162bd:	sbb    edi,DWORD PTR [eax-0x3c]
  4162c0:	dec    esi
  4162c1:	push   ss
  4162c2:	mov    al,ds:0x747d37d3
  4162c7:	mov    eax,0x2b773a65
  4162cc:	rcl    BYTE PTR [esi],0x82
  4162cf:	or     ch,ch
  4162d1:	scas   eax,DWORD PTR es:[edi]
  4162d2:	jb     0x41629d
  4162d4:	cwde   
  4162d5:	icebp  
  4162d6:	fcmovnbe st,st(6)
  4162d8:	pop    ecx
  4162d9:	xor    ebx,DWORD PTR [edi]
  4162db:	sti    
  4162dc:	xor    al,0x29
  4162de:	xor    al,0x9d
  4162e0:	and    al,0x13
  4162e2:	(bad)  
  4162e3:	dec    ebx
  4162e4:	mov    eax,0x3a7fcbe4
  4162e9:	mov    BYTE PTR [eax-0x1abfdc24],dh
  4162ef:	sbb    bl,ah
  4162f1:	repz int3 
  4162f3:	or     eax,0x12876842
  4162f8:	add    al,BYTE PTR ss:[ebp+0x69]
  4162fc:	retf   0xa799
  4162ff:	mov    dl,0x0
  416301:	or     al,0x89
  416303:	pop    ds
  416304:	xchg   esp,eax
  416305:	pop    edi
  416306:	mov    bh,dl
  416308:	rcr    ch,cl
  41630a:	push   esp
  41630b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41630c:	in     eax,0xbe
  41630e:	or     eax,0xa65ebd2f
  416313:	(bad)  
  416314:	pushf  
  416315:	pop    esp
  416316:	adc    al,0x3e
  416318:	and    eax,0x98dad615
  41631d:	inc    ebp
  41631e:	pop    eax
  41631f:	(bad)  
  416320:	fmul   QWORD PTR [eax+eiz*4]
  416323:	inc    ecx
  416324:	and    DWORD PTR [edi],0x2758a6d9
  41632a:	es mov ah,0xc7
  41632d:	pop    edi
  41632e:	mov    ebp,0x470f3c57
  416333:	not    BYTE PTR [edi+0x6f8ce33a]
  416339:	aad    0x3d
  41633b:	repnz mov dl,0xd2
  41633e:	sub    DWORD PTR [bx-0x5f],esi
  416342:	push   eax
  416343:	cwde   
  416344:	lahf   
  416345:	inc    ebp
  416346:	sbb    BYTE PTR [ebx],0xac
  416349:	mov    ds:0x5cb0aaf8,eax
  41634e:	lods   al,BYTE PTR ds:[esi]
  41634f:	in     eax,0xa4
  416351:	shr    BYTE PTR [ecx-0x46],0xae
  416355:	std    
  416356:	rcl    al,0xce
  416359:	(bad)  
  41635a:	pop    esp
  41635b:	ror    BYTE PTR [eax-0x4d508811],0x43
  416362:	add    DWORD PTR [ebx],ecx
  416364:	push   ecx
  416365:	push   eax
  416366:	(bad)  
  416367:	cld    
  416368:	jmp    0x416373
  41636a:	popf   
  41636b:	bnd call 0xc87262c6
  416371:	fild   DWORD PTR [eax+0x71]
  416374:	cmc    
  416375:	mov    ds:0x8a4ca760,al
  41637a:	fs in  al,dx
  41637c:	xchg   edi,eax
  41637d:	and    al,0xb7
  41637f:	xchg   ebp,eax
  416380:	or     edi,DWORD PTR [edi+0x6dbd1866]
  416386:	add    BYTE PTR [edi+edx*2+0x1f5f432b],0x28
  41638e:	add    eax,0x92877932
  416393:	xor    ebx,DWORD PTR [edx+0x6f9bc7c8]
  416399:	jne    0x4163db
  41639b:	jae    0x416364
  41639d:	cwde   
  41639e:	lea    edx,[eax]
  4163a0:	or     ebx,ebp
  4163a2:	push   0x35
  4163a4:	xchg   esi,eax
  4163a5:	lock ret 
  4163a7:	cdq    
  4163a8:	data16 sub sp,0x52
  4163ad:	loop   0x4163f0
  4163af:	js     0x416382
  4163b1:	jmp    0x4163d7
  4163b3:	shl    BYTE PTR [eax-0x2b],cl
  4163b6:	outs   dx,DWORD PTR ds:[esi]
  4163b7:	mov    esi,DWORD PTR [ecx+0x2a82de0d]
  4163bd:	(bad)  
  4163be:	icebp  
  4163bf:	add    al,0xc5
  4163c1:	pop    ebp
  4163c2:	rcr    BYTE PTR [esi+0x2b],cl
  4163c5:	jg     0x416418
  4163c7:	dec    edi
  4163c8:	or     al,0x37
  4163ca:	push   ecx
  4163cb:	xchg   BYTE PTR [ecx+0x3f],ah
  4163ce:	(bad)  
  4163cf:	cmp    DWORD PTR [edx*1-0x36fa8ac0],eax
  4163d6:	ret    0x7b8f
  4163d9:	dec    esp
  4163da:	prefetch (bad)
  4163db:	or     eax,0xf06b04c2
  4163e0:	adc    ebx,DWORD PTR [edi]
  4163e2:	int    0xec
  4163e4:	cmp    al,0x4f
  4163e6:	dec    eax
  4163e7:	and    al,0x35
  4163e9:	dec    esi
  4163ea:	mov    BYTE PTR [eax],cl
  4163ec:	in     al,0x10
  4163ee:	xor    esi,DWORD PTR [edi-0x7b]
  4163f1:	push   edx
  4163f2:	jo     0x41638e
  4163f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163f5:	(bad)  
  4163f6:	fild   WORD PTR [edx+0x9]
  4163f9:	mov    ds:0x83dced7d,eax
  4163fe:	sub    BYTE PTR [ecx+ebx*8+0x2],bh
  416402:	fnstsw WORD PTR [ebp-0x25]
  416405:	mov    bl,0x8d
  416407:	mov    ecx,0xfdbb755e
  41640c:	ret    
  41640d:	jle    0x41644b
  41640f:	js     0x4163ce
  416411:	int3   
  416412:	into   
  416413:	adc    eax,0xf431c574
  416418:	loopne 0x4163cf
  41641a:	out    dx,al
  41641b:	cmp    ah,BYTE PTR [ebx]
  41641d:	dec    ebx
  41641e:	loope  0x41649a
  416420:	sub    ch,bl
  416422:	shl    BYTE PTR [eax+ebx*4-0x2],cl
  416426:	sbb    dl,BYTE PTR [edi]
  416428:	loope  0x4163b2
  41642a:	jo     0x416413
  41642c:	add    DWORD PTR [edx+0x7035a6ff],esp
  416432:	ds pop eax
  416434:	xchg   DWORD PTR [edx+0x5c],eax
  416437:	test   cl,ch
  416439:	outs   dx,DWORD PTR ds:[esi]
  41643a:	loope  0x41643d
  41643c:	push   edi
  41643d:	cdq    
  41643e:	xchg   ecx,eax
  41643f:	jne    0x4164b7
  416441:	fild   WORD PTR [ebx]
  416443:	fsqrt  
  416445:	stos   BYTE PTR es:[edi],al
  416446:	sbb    eax,0xc5798fb6
  41644b:	add    eax,0x7f29078c
  416450:	adc    BYTE PTR [esp+eax*4+0x6c13d402],ah
  416457:	or     eax,0xf517c7ab
  41645c:	ret    0x7e95
  41645f:	xchg   ebp,eax
  416460:	mov    ebx,0xbf5836d1
  416465:	das    
  416466:	les    esp,FWORD PTR [ebx]
  416468:	int3   
  416469:	stos   DWORD PTR es:[edi],eax
  41646a:	rol    BYTE PTR [ebx-0x55],0xc7
  41646e:	enter  0x2998,0xe6
  416472:	xlat   BYTE PTR ds:[ebx]
  416473:	push   ebx
  416474:	fist   WORD PTR [ebx]
  416476:	nop
  416477:	pop    eax
  416478:	lea    ebp,ds:0x706998ae
  41647e:	pushf  
  41647f:	ficom  DWORD PTR [eax+0x4d]
  416482:	aam    0x84
  416484:	fidivr WORD PTR [esi]
  416486:	dec    ebx
  416487:	and    dh,dl
  416489:	mov    DWORD PTR ds:0xd5d3103d,ebx
  41648f:	dec    edi
  416490:	or     edi,edi
  416492:	ret    0xad1f
  416495:	lods   eax,DWORD PTR ds:[esi]
  416496:	jl     0x4164bc
  416498:	mov    esp,0x86d76f3f
  41649d:	stc    
  41649e:	dec    edx
  41649f:	cmp    ecx,0xffffffe8
  4164a2:	adc    DWORD PTR [edx-0xb],esp
  4164a5:	push   ds
  4164a6:	mov    esp,0xb28c8a92
  4164ab:	jns    0x4164d6
  4164ad:	sahf   
  4164ae:	pop    esi
  4164af:	sbb    al,0xb3
  4164b1:	fmul   st(6),st
  4164b3:	in     eax,0xd3
  4164b5:	(bad)  
  4164b6:	fdiv   QWORD PTR [edx-0x752c5b1f]
  4164bc:	aad    0x4f
  4164be:	push   edi
  4164bf:	mov    ebx,0x2235c929
  4164c4:	xor    al,0x13
  4164c6:	aas    
  4164c7:	dec    ebx
  4164c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164c9:	push   es
  4164ca:	sbb    eax,0x5f2abe65
  4164cf:	add    BYTE PTR [eax],0x32
  4164d2:	cld    
  4164d3:	aaa    
  4164d4:	jne    0x416464
  4164d6:	popf   
  4164d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d8:	fcmovnb st,st(6)
  4164da:	and    eax,DWORD PTR [edx]
  4164dc:	call   0xd5de:0x53f7df4b
  4164e3:	xlat   BYTE PTR ds:[ebx]
  4164e4:	add    DWORD PTR ss:0x34ab25c6,ecx
  4164eb:	sub    eax,DWORD PTR [ecx+ebx*2-0x4308b632]
  4164f2:	jo     0x416517
  4164f4:	std    
  4164f5:	xor    ecx,DWORD PTR [edx]
  4164f7:	inc    edi
  4164f8:	inc    eax
  4164f9:	xchg   BYTE PTR [edi+esi*8],dl
  4164fc:	ds (bad) 
  4164fe:	scas   eax,DWORD PTR es:[edi]
  4164ff:	inc    edi
  416500:	ins    DWORD PTR es:[edi],dx
  416501:	into   
  416502:	cli    
  416503:	gs and al,0xff
  416506:	stc    
  416507:	scas   eax,DWORD PTR es:[edi]
  416508:	sub    ebx,ecx
  41650a:	add    al,0xb9
  41650c:	push   0xffffff84
  41650e:	adc    cl,BYTE PTR [edx]
  416510:	(bad)  
  416511:	repnz inc dl
  416514:	push   ds
  416515:	pop    ds
  416516:	rcl    al,1
  416518:	jl     0x41652e
  41651a:	mov    ch,0x28
  41651c:	fild   DWORD PTR [eax]
  41651e:	cli    
  41651f:	test   BYTE PTR [ebp+0x57],bh
  416522:	mov    dh,0xc8
  416524:	lods   eax,DWORD PTR ds:[esi]
  416525:	arpl   WORD PTR ds:0xa835b59f,cx
  41652b:	call   0x82d82f65
  416530:	pop    ebp
  416531:	push   0xffffffce
  416533:	pop    eax
  416534:	ds es gs aas 
  416538:	sub    eax,DWORD PTR [ecx]
  41653a:	clc    
  41653b:	test   DWORD PTR [edi-0xf75c2d3],edi
  416541:	mov    eax,0xcdeb2b2e
  416546:	add    ah,BYTE PTR [edx+0x5db082d5]
  41654c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41654d:	les    esp,FWORD PTR ds:0x68cae48b
  416553:	(bad)  
  416554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416555:	es push esi
  416557:	lea    esp,[ecx+edi*2+0x2d]
  41655b:	(bad)  
  41655c:	mov    edi,0x3c488273
  416561:	mov    ch,0x4c
  416563:	leave  
  416564:	inc    eax
  416565:	test   ah,0x35
  416568:	cli    
  416569:	adc    al,0x5d
  41656b:	xor    ebx,eax
  41656d:	push   0xffffffa9
  41656f:	cdq    
  416570:	cmp    ch,BYTE PTR [ecx-0x3b]
  416573:	add    bx,0xffdf
  416577:	in     eax,dx
  416578:	xchg   edi,eax
  416579:	leave  
  41657a:	call   0xc9ab307f
  41657f:	(bad)
  416582:	fcomp  QWORD PTR [edi-0x5e]
  416585:	mov    dh,0xea
  416587:	cmp    al,0x7f
  416589:	gs or  edi,edx
  41658c:	xchg   esi,eax
  41658d:	xchg   edi,eax
  41658e:	fidiv  WORD PTR [edx-0x80]
  416591:	hlt    
  416592:	or     DWORD PTR [ecx+0x6956376],ebp
  416598:	add    al,bh
  41659a:	mov    eax,ds:0x73a65c31
  41659f:	push   ebp
  4165a0:	clc    
  4165a1:	dec    ebp
  4165a2:	scas   eax,DWORD PTR es:[edi]
  4165a3:	sub    BYTE PTR [eax-0x6d],dh
  4165a6:	test   DWORD PTR [esi],0x3d63b7df
  4165ac:	jns    0x41654e
  4165ae:	push   0xdc3d5990
  4165b3:	dec    ecx
  4165b4:	xor    bh,BYTE PTR [eax]
  4165b6:	imul   esi,DWORD PTR [esi+0xe],0x6ab20056
  4165bd:	fisub  WORD PTR [ebx+0x32]
  4165c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165c1:	rcr    DWORD PTR [ebx-0x10075fe1],0x37
  4165c8:	sbb    BYTE PTR [ebp+edx*2+0x2a],al
  4165cc:	hlt    
  4165cd:	imul   ebp,DWORD PTR [esi+0x14],0xca1a9603
  4165d4:	loopne 0x416572
  4165d6:	sbb    ebx,DWORD PTR [eax-0x4d64156c]
  4165dc:	add    eax,0x47819af
  4165e1:	test   BYTE PTR [ebx+0x6d587af3],cl
  4165e7:	mov    bl,0xbf
  4165e9:	push   0xffffffec
  4165eb:	dec    eax
  4165ec:	loop   0x4165c3
  4165ee:	(bad)  
  4165ef:	pop    ebp
  4165f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165f1:	or     bh,bl
  4165f3:	add    dh,dl
  4165f5:	inc    ecx
  4165f6:	test   DWORD PTR [eax+0x30],edi
  4165f9:	rcr    esp,1
  4165fb:	xchg   ebp,eax
  4165fc:	cmp    al,0x3
  4165fe:	sbb    bh,bh
  416600:	cmc    
  416601:	push   ecx
  416602:	lods   al,BYTE PTR ds:[esi]
  416603:	lods   al,BYTE PTR ds:[esi]
  416604:	jbe    0x4165b0
  416606:	push   ds
  416607:	adc    eax,0xe4f1e64d
  41660c:	(bad)  
  41660d:	xor    esp,DWORD PTR [edi-0x53eef36]
  416613:	sbb    edi,DWORD PTR [ebp-0x19f4711e]
  416619:	mov    ah,0x77
  41661b:	push   ds
  41661c:	sub    eax,0x32d089c
  416621:	pop    ss
  416622:	fcmovb st,st(5)
  416624:	mov    bh,0x1d
  416626:	sbb    al,al
  416628:	mov    ecx,0x3578b443
  41662d:	test   eax,0x8ebfab98
  416632:	mov    ch,0x15
  416634:	sub    dh,bl
  416636:	xor    esi,DWORD PTR [esi+0x30]
  416639:	outs   dx,DWORD PTR ds:[esi]
  41663a:	add    eax,0x9cc79976
  41663f:	iret   
  416640:	ss mov ah,0xab
  416643:	mov    ch,0xf7
  416646:	xchg   edi,eax
  416647:	pusha  
  416648:	mov    dh,0x57
  41664a:	jmp    0xc334c24f
  41664f:	push   ecx
  416650:	cmp    DWORD PTR [ebp-0x53054db1],esi
  416656:	xchg   ecx,ebp
  416658:	push   ds
  416659:	inc    edi
  41665a:	test   BYTE PTR [eax+ecx*2],0xac
  41665e:	cmp    ebx,ecx
  416660:	fadd   DWORD PTR es:[ecx-0x78fb27b9]
  416667:	jne    0x4166e2
  416669:	and    esp,DWORD PTR [eax]
  41666b:	jbe    0x41661a
  41666d:	cmc    
  41666e:	rcl    BYTE PTR [ecx],0x80
  416671:	inc    ebx
  416672:	pop    esp
  416673:	inc    esi
  416674:	dec    esi
  416675:	sar    BYTE PTR [edx+edi*1],1
  416678:	jae    0x416668
  41667a:	mov    WORD PTR [ebp+0x59cee3e],es
  416680:	cs sbb eax,0xd4973902
  416686:	cmpps  xmm7,XMMWORD PTR [edx+0x7d10c500],0x84
  41668e:	loope  0x416632
  416690:	jp     0x416701
  416692:	test   DWORD PTR [edi],edx
  416694:	sbb    al,0xe7
  416696:	lods   eax,DWORD PTR ds:[esi]
  416697:	stos   DWORD PTR es:[edi],eax
  416698:	mov    esp,esp
  41669a:	sbb    esi,DWORD PTR [edx+0x20]
  41669d:	loopne 0x4166d4
  41669f:	inc    ecx
  4166a0:	push   0x61e9ea6e
  4166a5:	pop    esp
  4166a6:	cmc    
  4166a7:	mov    al,0x1f
  4166a9:	xor    BYTE PTR [eax+0x59],ah
  4166ac:	push   eax
  4166ad:	fidiv  DWORD PTR [esi+0x45]
  4166b0:	mov    ebp,0xd9dbd0b7
  4166b5:	jo     0x4166ab
  4166b7:	in     eax,dx
  4166b8:	ja     0x416702
  4166ba:	inc    esi
  4166bb:	into   
  4166bc:	sub    al,0x2f
  4166be:	leave  
  4166bf:	(bad)  
  4166c0:	fnstenv [esi+0x24]
  4166c3:	das    
  4166c4:	xchg   ecx,eax
  4166c5:	inc    esp
  4166c6:	jbe    0x41666c
  4166c8:	ss add eax,0xc41e193a
  4166ce:	adc    BYTE PTR [edx+edi*4],0xbd
  4166d2:	iret   
  4166d3:	scas   eax,DWORD PTR es:[edi]
  4166d4:	jp     0x4166a8
  4166d6:	push   esp
  4166d7:	outs   dx,BYTE PTR ds:[esi]
  4166d8:	ret    0x5e66
  4166db:	cmpxchg DWORD PTR [ebx-0x16],ebx
  4166df:	adc    ch,ch
  4166e1:	dec    ebp
  4166e2:	mov    ebx,0x45bb3af3
  4166e7:	adc    DWORD PTR [edx],eax
  4166e9:	ret    
  4166ea:	test   eax,0x3da93da7
  4166ef:	cmc    
  4166f0:	mov    ebx,eax
  4166f2:	mov    al,0xb9
  4166f4:	bound  edx,QWORD PTR [edi]
  4166f6:	int    0xf4
  4166f8:	jo     0x4166b2
  4166fa:	push   cs
  4166fb:	(bad)  [ebx+edi*2+0x12]
  4166ff:	leave  
  416700:	xchg   edi,eax
  416701:	jmp    0x233cde08
  416706:	stos   BYTE PTR es:[edi],al
  416707:	pop    ebp
  416708:	adc    al,0x6c
  41670a:	jns    0x4166c5
  41670c:	in     eax,0x7f
  41670e:	stos   DWORD PTR es:[edi],eax
  41670f:	(bad)  
  416710:	jb     0x4166d2
  416712:	push   ds
  416713:	adc    bh,BYTE PTR cs:[edx-0x1f]
  416717:	sub    ch,BYTE PTR [esi]
  416719:	push   esi
  41671a:	shr    BYTE PTR [edi],0x40
  41671d:	into   
  41671e:	aad    0x6d
  416720:	mov    ecx,0xdd55ebc5
  416725:	dec    edx
  416726:	pusha  
  416727:	pop    ss
  416728:	adc    BYTE PTR [ecx],bh
  41672a:	leave  
  41672b:	test   DWORD PTR [esi+0x63],ebx
  41672e:	xchg   ebp,eax
  41672f:	bnd ja 0x4167ae
  416732:	mov    al,0x21
  416734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416735:	pop    edi
  416736:	sub    BYTE PTR [ecx+0x3489610c],dh
  41673c:	mov    BYTE PTR [ecx+edx*4+0x7c],ah
  416740:	adc    edx,DWORD PTR [edx+0x247c0c77]
  416746:	mov    ch,0xa4
  416748:	aam    0x25
  41674a:	mov    eax,0x33bc36eb
  41674f:	or     cl,dl
  416751:	adc    BYTE PTR [eax],cl
  416753:	add    dl,BYTE PTR [ebx+0x38713eca]
  416759:	div    BYTE PTR [ebx+ebp*1-0x6269c012]
  416760:	and    BYTE PTR [edx+0x7],0x59
  416764:	push   ebp
  416765:	into   
  416766:	push   edi
  416767:	enter  0x8b1d,0x98
  41676b:	(bad)  
  41676c:	dec    eax
  41676d:	stos   DWORD PTR es:[edi],eax
  41676e:	stos   DWORD PTR es:[edi],eax
  41676f:	pop    ss
  416770:	addr16 mov ebp,0xe6889194
  416776:	lods   al,BYTE PTR ds:[esi]
  416777:	jl     0x4167c0
  416779:	cmp    eax,0xb82937d
  41677e:	add    BYTE PTR [edx-0x7106af02],bh
  416784:	imul   BYTE PTR [edx-0x19fb8bff]
  41678a:	xor    al,0x5d
  41678c:	mov    ds:0x4628d226,al
  416791:	leave  
  416792:	sub    al,0x70
  416794:	pusha  
  416795:	ficomp DWORD PTR ds:0x8b509f2d
  41679b:	imul   ebx,DWORD PTR [edx],0x47
  41679e:	fnstenv [bx+si]
  4167a1:	xchg   ebx,eax
  4167a2:	repz xor edx,DWORD PTR [edi+0x53]
  4167a6:	mov    edx,0xd6cbcea9
  4167ab:	out    0xde,al
  4167ad:	add    al,0x17
  4167af:	call   0x3c15:0x70b954ce
  4167b6:	ret    
  4167b7:	out    0x96,al
  4167b9:	ja     0x4167dc
  4167bb:	dec    ecx
  4167bc:	pushf  
  4167bd:	sub    BYTE PTR [ebp+ecx*8+0x57],bh
  4167c1:	shl    BYTE PTR [ecx+ebx*4+0x63],1
  4167c5:	lock out dx,al
  4167c7:	aas    
  4167c8:	push   edi
  4167c9:	popa   
  4167ca:	push   cs
  4167cb:	mov    ebx,0xd94bbc4f
  4167d0:	fidivr DWORD PTR [edx]
  4167d2:	scas   al,BYTE PTR es:[edi]
  4167d3:	cmp    cl,BYTE PTR [esi+esi*4-0x56]
  4167d7:	adc    eax,0x3c506b39
  4167dd:	(bad)  
  4167de:	fbld   TBYTE PTR [edi-0x682f75b5]
  4167e4:	aam    0xa5
  4167e6:	test   BYTE PTR [esi+0x43],bl
  4167e9:	dec    esp
  4167ea:	mov    eax,ds:0x20eedfc4
  4167ef:	aas    
  4167f0:	scas   eax,DWORD PTR es:[edi]
  4167f1:	mov    eax,0x6c07b68f
  4167f6:	push   0x86154539
  4167fb:	sub    BYTE PTR [ebp+0x79c5d240],cl
  416801:	nop
  416802:	cmp    BYTE PTR ds:0xb7c5fc3f,al
  416808:	(bad)  
  416809:	and    eax,0xff24d03d
  41680e:	xor    al,0xcc
  416810:	outs   dx,BYTE PTR ds:[esi]
  416811:	add    edx,ecx
  416813:	xchg   DWORD PTR [eax+0x33],esi
  416816:	es mov edi,0x47192f1b
  41681c:	not    BYTE PTR [ebp+0x22]
  41681f:	fucomp st(6)
  416821:	pop    edi
  416822:	cli    
  416823:	outs   dx,BYTE PTR ds:[esi]
  416824:	outs   dx,DWORD PTR ds:[esi]
  416825:	lahf   
  416826:	inc    ecx
  416827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416828:	lock std 
  41682a:	stos   BYTE PTR es:[edi],al
  41682b:	fcmovb st,st(2)
  41682d:	mov    BYTE PTR [ebx+0x2282c900],bh
  416833:	mov    ch,0x38
  416835:	jo     0x416819
  416837:	cmp    al,0xca
  416839:	sbb    bl,0x8e
  41683c:	add    BYTE PTR [ebx],cl
  41683e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41683f:	sub    DWORD PTR [ebx-0xb30c8e2],edx
  416845:	jl     0x41683a
  416847:	aaa    
  416848:	pop    esp
  416849:	in     al,dx
  41684a:	adc    dh,bh
  41684c:	std    
  41684d:	add    eax,0x7c0ee31f
  416852:	push   cs
  416853:	xor    BYTE PTR ds:0x900fbcea,bh
  416859:	cs jno 0x41682b
  41685c:	iret   
  41685d:	out    0x92,al
  41685f:	jne    0x41683d
  416861:	or     esi,edi
  416863:	xchg   ebp,eax
  416864:	and    al,0x66
  416866:	sub    ebp,DWORD PTR [ebx]
  416868:	or     eax,0x2899daa0
  41686d:	(bad)  
  41686e:	shl    BYTE PTR [esi],1
  416870:	retf   0x1723
  416873:	in     eax,0xca
  416875:	sbb    DWORD PTR [ecx],esi
  416877:	pushf  
  416878:	pop    es
  416879:	jmp    0x4168ec
  41687b:	shl    ebp,1
  41687d:	mov    cl,0xfc
  41687f:	add    BYTE PTR [ecx],ah
  416881:	cdq    
  416882:	sbb    ebp,0xffffffd3
  416885:	aas    
  416886:	mov    eax,0x701dd07e
  41688b:	sbb    esp,DWORD PTR [esi]
  41688d:	mov    al,0xf7
  41688f:	icebp  
  416890:	pop    es
  416891:	mov    ah,0x4d
  416893:	repz sahf 
  416895:	popa   
  416896:	imul   esi,DWORD PTR [ebx-0x7e],0xffffffca
  41689a:	push   esi
  41689b:	pop    edi
  41689c:	xchg   ecx,eax
  41689d:	pop    edi
  41689e:	addr16 xchg esi,eax
  4168a0:	cwde   
  4168a1:	jnp    0x416917
  4168a3:	mov    al,ds:0xc914dbf1
  4168a8:	jns    0x41687f
  4168aa:	je     0x416870
  4168ac:	sub    ch,dh
  4168ae:	or     al,0x77
  4168b0:	sbb    al,ah
  4168b2:	and    al,0x0
  4168b4:	and    eax,0xd6bcee8
  4168b9:	mov    ecx,0xb50152b
  4168be:	fwait
  4168bf:	adc    ecx,esp
  4168c1:	xchg   ebx,eax
  4168c2:	mov    ch,0x5c
  4168c4:	pop    ebx
  4168c5:	out    0xa0,eax
  4168c7:	mov    eax,0x85ba1d37
  4168cc:	pop    ebx
  4168cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ce:	push   ebx
  4168cf:	mov    al,ds:0xc66a0b88
  4168d4:	inc    eax
  4168d5:	retf   0x89f8
  4168d8:	addr16 jne 0x4168c4
  4168db:	pop    edx
  4168dc:	(bad)  
  4168dd:	jns    0x41685f
  4168df:	loop   0x4168d3
  4168e1:	mov    dh,0x84
  4168e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e4:	jb     0x41693c
  4168e6:	pop    ds
  4168e7:	jae    0x416968
  4168e9:	or     esp,DWORD PTR [ebx]
  4168eb:	das    
  4168ec:	test   bl,dl
  4168ee:	cld    
  4168ef:	je     0x41694e
  4168f1:	xor    eax,0xf6652c20
  4168f6:	dec    ebp
  4168f7:	mov    eax,ds:0x200ab9ce
  4168fc:	xor    cl,cl
  4168fe:	inc    ebx
  4168ff:	std    
  416900:	push   ebx
  416901:	(bad)  
  416902:	int    0x7f
  416904:	adc    DWORD PTR [ebp+0x2a],esp
  416907:	inc    ah
  416909:	xchg   ecx,eax
  41690a:	cmp    al,0x93
  41690c:	mov    bl,0x94
  41690e:	enter  0xbbaf,0x16
  416912:	fcom   DWORD PTR [ebp+0x198fab6e]
  416918:	jle    0x41693d
  41691a:	leave  
  41691b:	neg    edx
  41691d:	outs   dx,DWORD PTR ds:[esi]
  41691e:	lds    ebx,FWORD PTR [esi]
  416920:	pushf  
  416921:	add    eax,0x5669f528
  416926:	stos   BYTE PTR es:[edi],al
  416927:	or     BYTE PTR [eax+esi*1],dl
  41692a:	mov    cl,0xfc
  41692c:	loop   0x416994
  41692e:	adc    edi,ebp
  416930:	sbb    al,BYTE PTR [eax+0x7d]
  416933:	sub    ecx,DWORD PTR es:[esi+esi*4-0xc]
  416938:	pushf  
  416939:	fxch   st(7)
  41693b:	push   ebp
  41693c:	inc    ebx
  41693d:	outs   dx,DWORD PTR ds:[esi]
  41693e:	pop    ecx
  41693f:	test   al,0xce
  416941:	shl    BYTE PTR [ebx+0x7b],cl
  416944:	mov    eax,0xb8cd4d59
  416949:	mov    es,WORD PTR [ebx-0x47]
  41694c:	loope  0x416918
  41694e:	mov    ds:0x4b3bd3f2,al
  416953:	mov    ebp,0x4d9b5bd7
  416958:	fidiv  WORD PTR [edi+0x75]
  41695b:	jne    0x4168e7
  41695d:	dec    ecx
  41695e:	ins    BYTE PTR es:[edi],dx
  41695f:	mov    eax,0xf6a665b9
  416964:	into   
  416965:	inc    edx
  416966:	pop    esp
  416967:	inc    esp
  416968:	ret    0x3fdc
  41696b:	fwait
  41696c:	ret    
  41696d:	rol    BYTE PTR [ecx-0x69],0x3f
  416971:	cli    
  416972:	xor    bh,BYTE PTR [ecx-0x1086a37e]
  416978:	cld    
  416979:	retf   
  41697a:	mov    al,ds:0x191474a8
  41697f:	ret    
  416980:	outs   dx,DWORD PTR ds:[esi]
  416981:	jo     0x4169ad
  416983:	mov    ebp,0x2206c543
  416988:	popf   
  416989:	popa   
  41698a:	dec    ebx
  41698b:	ret    0x7b09
  41698e:	and    BYTE PTR [eax+0x7d],0x63
  416992:	mov    bh,0xd7
  416994:	imul   ecx,DWORD PTR [edi+esi*2-0x34a38a11],0xffffffb4
  41699c:	retf   0xa131
  41699f:	mov    cl,0x37
  4169a1:	and    BYTE PTR [esi+0x76f09bbf],0xc2
  4169a8:	jp     0x416a21
  4169aa:	icebp  
  4169ab:	sub    DWORD PTR [edx-0x7a422b2f],edx
  4169b1:	xchg   edx,eax
  4169b2:	push   ebp
  4169b3:	or     al,BYTE PTR [esi]
  4169b5:	add    BYTE PTR [esp+edi*4],0x46
  4169b9:	add    al,0x4d
  4169bb:	inc    esi
  4169bc:	dec    ebp
  4169bd:	outs   dx,BYTE PTR ds:[esi]
  4169be:	loopne 0x416945
  4169c0:	adc    DWORD PTR [eax+eax*8],esp
  4169c3:	push   cs
  4169c4:	pop    es
  4169c5:	jg     0x416981
  4169c7:	sub    DWORD PTR [esi-0x2d],edi
  4169ca:	(bad)  
  4169cb:	scas   eax,DWORD PTR es:[edi]
  4169cc:	adc    BYTE PTR ss:[ebp-0x59e2f7b5],0xd3
  4169d4:	inc    esi
  4169d5:	and    bh,BYTE PTR [edi]
  4169d7:	and    ebx,edx
  4169d9:	pop    ds
  4169da:	add    al,cl
  4169dc:	(bad)  [ebx+0x6b]
  4169df:	jl     0x416a58
  4169e1:	jmp    0x416a29
  4169e3:	mov    ebx,0x77d118be
  4169e8:	cli    
  4169e9:	jp     0x416a13
  4169eb:	lea    ebp,[edi+0x29]
  4169ee:	pop    ebx
  4169ef:	cmp    esp,DWORD PTR [ebp-0x73]
  4169f2:	sub    ebp,edi
  4169f4:	mov    BYTE PTR [edx-0x65acaaf1],cl
  4169fa:	sub    eax,0x4d425322
  4169ff:	in     eax,dx
  416a00:	jae    0x416a22
  416a02:	jns    0x4169a9
  416a04:	in     al,dx
  416a05:	jp     0x4169f0
  416a07:	sbb    ah,bh
  416a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a0a:	dec    ebx
  416a0b:	pop    edi
  416a0c:	movlps QWORD PTR [eax-0x1c],xmm6
  416a10:	stos   DWORD PTR es:[edi],eax
  416a11:	out    dx,al
  416a12:	shl    BYTE PTR [eax+0x73],0x38
  416a16:	imul   eax,DWORD PTR [edi-0x2743da27],0xab7143d1
  416a20:	or     DWORD PTR [ebx-0x2f],esp
  416a23:	push   0xee251b0
  416a28:	fld    QWORD PTR [edi]
  416a2a:	retf   
  416a2b:	int    0x9e
  416a2d:	hlt    
  416a2e:	retf   
  416a2f:	add    BYTE PTR [ebx-0x7b61fa7a],dl
  416a35:	jo     0x416a39
  416a37:	fild   QWORD PTR [edi-0x39]
  416a3a:	lods   al,BYTE PTR ds:[esi]
  416a3b:	stc    
  416a3c:	cld    
  416a3d:	jbe    0x416a4b
  416a3f:	mov    al,0x14
  416a41:	cli    
  416a42:	jno    0x416a81
  416a44:	inc    ebx
  416a45:	xor    eax,0x8d3c5a2f
  416a4a:	jge    0x416a18
  416a4c:	inc    edx
  416a4d:	enter  0xf486,0x77
  416a51:	call   0x9af3:0xeb7ca8c2
  416a58:	or     ebx,DWORD PTR [ecx-0x65378c50]
  416a5e:	imul   BYTE PTR [ecx]
  416a60:	shl    DWORD PTR es:[ecx-0x5d],0x98
  416a65:	call   0x58f8569f
  416a6a:	pop    edx
  416a6b:	ins    DWORD PTR es:[edi],dx
  416a6c:	(bad)  
  416a6d:	push   ebx
  416a6e:	mov    al,ds:0x13b8f09b
  416a73:	retf   0xc37d
  416a76:	jbe    0x416a80
  416a78:	gs sbb eax,0xbdf56d1a
  416a7e:	adc    ch,bl
  416a80:	push   cs
  416a81:	xchg   BYTE PTR [ebp-0x322c6ea0],bl
  416a87:	nop
  416a88:	ret    
  416a89:	pop    esi
  416a8a:	lahf   
  416a8b:	push   esp
  416a8c:	add    ch,BYTE PTR [ebx+0xba40fee]
  416a92:	cmp    BYTE PTR [ecx],dl
  416a94:	pop    ebx
  416a95:	push   ss
  416a96:	test   BYTE PTR cs:[edi+eax*1-0x24cbee46],dh
  416a9e:	cdq    
  416a9f:	and    DWORD PTR [edx-0x37],edi
  416aa2:	xchg   esi,eax
  416aa3:	inc    edx
  416aa4:	adc    BYTE PTR [esi+eax*4],dl
  416aa7:	jecxz  0x416a8d
  416aa9:	ss retf 0x7ec6
  416aad:	test   al,0xfe
  416aaf:	(bad)  
  416ab1:	int    0x3e
  416ab3:	fwait
  416ab4:	xor    DWORD PTR ss:[eax+0x86b973],ebx
  416abb:	and    al,0x90
  416abd:	enter  0x6dac,0x7a
  416ac1:	mov    esp,0xf9bf4dcd
  416ac6:	(bad)  
  416ac7:	pop    es
  416ac8:	mov    dl,0x1
  416aca:	inc    edi
  416acb:	adc    cl,BYTE PTR [ebx-0x4a27a511]
  416ad1:	sbb    eax,0x91434ce6
  416ad6:	xchg   ecx,eax
  416ad7:	dec    ebx
  416ad8:	mov    ds:0xd8e63568,al
  416add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ade:	pop    edx
  416adf:	(bad)  
  416ae0:	mov    esi,DWORD PTR [esi+0x43a0b9e7]
  416ae6:	adc    al,0x1
  416ae8:	inc    esp
  416ae9:	add    eax,0x843785f1
  416aee:	sbb    al,0x60
  416af0:	jno    0x416b51
  416af2:	add    dh,BYTE PTR [eax]
  416af4:	push   es
  416af5:	aam    0x29
  416af7:	bound  edi,QWORD PTR [ebx+0x3f]
  416afa:	es cwde 
  416afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416afd:	xor    bh,BYTE PTR [edi]
  416aff:	sti    
  416b00:	pop    ecx
  416b01:	adc    eax,0xf42f5145
  416b06:	inc    ebx
  416b07:	sahf   
  416b08:	push   ecx
  416b09:	jo     0x416ade
  416b0b:	jmp    0x63d6:0xcddcbb5a
  416b12:	dec    esp
  416b13:	(bad)  
  416b14:	es add al,0xb6
  416b17:	xchg   esi,eax
  416b18:	or     bh,BYTE PTR [ebx-0x71]
  416b1b:	add    esp,ebp
  416b1d:	mov    ebx,0xcd34d797
  416b22:	dec    eax
  416b23:	cmp    DWORD PTR [ebx-0x3c],ecx
  416b26:	xor    DWORD PTR [edi],ebx
  416b28:	fistp  QWORD PTR [edi-0x5a1c8412]
  416b2e:	inc    edi
  416b2f:	rol    BYTE PTR [eax],1
  416b31:	stos   DWORD PTR es:[edi],eax
  416b32:	pop    eax
  416b33:	inc    esi
  416b34:	(bad)  
  416b35:	in     eax,dx
  416b36:	push   ecx
  416b37:	fld    QWORD PTR [edx+0x6f0711b4]
  416b3d:	xchg   edx,eax
  416b3e:	std    
  416b3f:	add    bl,BYTE PTR [eax-0x1d]
  416b42:	fsub   DWORD PTR [ebx]
  416b44:	add    al,0xed
  416b46:	loopne 0x416b38
  416b48:	jne    0x416afe
  416b4a:	(bad)  
  416b4b:	cli    
  416b4c:	sub    edx,DWORD PTR [esi+0x5e852a61]
  416b52:	push   esp
  416b53:	into   
  416b54:	and    cl,BYTE PTR [ebx-0x5cb7ee39]
  416b5a:	jg     0x416b93
  416b5c:	enter  0xaaca,0xf4
  416b60:	dec    edx
  416b61:	lods   al,BYTE PTR ds:[esi]
  416b62:	mov    ah,0xcf
  416b64:	lahf   
  416b65:	mov    al,ds:0x4b32332e
  416b6a:	push   0x17
  416b6c:	loope  0x416afb
  416b6e:	jle    0x416b79
  416b70:	mov    ebx,0xde45b9c9
  416b75:	dec    ebp
  416b76:	mov    esi,0x2e0d4878
  416b7b:	xchg   edi,eax
  416b7c:	xor    DWORD PTR [ecx+0x6f],0xffffffd7
  416b80:	push   edi
  416b81:	retf   0xd8f
  416b84:	je     0x416bf4
  416b86:	fist   WORD PTR [ebx-0x34]
  416b89:	in     al,dx
  416b8a:	mov    WORD PTR [esi],ss
  416b8c:	lds    ebp,FWORD PTR [ebx+0x37]
  416b8f:	out    0xd2,eax
  416b91:	mov    edi,0x7f154b7a
  416b96:	imul   esi,DWORD PTR [ebp+0x7],0x5b278341
  416b9d:	lds    eax,FWORD PTR [eax-0x1ee7f3d6]
  416ba3:	jmp    0x416c1a
  416ba5:	push   es
  416ba6:	or     ecx,DWORD PTR [esi-0x67afb3b8]
  416bac:	mov    eax,0x78e0538c
  416bb1:	out    dx,al
  416bb2:	test   DWORD PTR [eax+0x63189399],ebp
  416bb8:	and    BYTE PTR [edi+eax*2+0x7916c0b9],bl
  416bbf:	rdmsr  
  416bc1:	(bad)
  416bc5:	cmp    bl,cl
  416bc7:	pop    esp
  416bc8:	mov    bh,0xba
  416bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bcb:	mov    cl,0x34
  416bcd:	shr    BYTE PTR [esp+ebp*1-0x229d64b9],0x5e
  416bd5:	fistp  QWORD PTR [eax+edi*8-0x7a]
  416bd9:	xor    eax,0x8b5d264b
  416bde:	int    0x99
  416be0:	enter  0xeec7,0x4e
  416be4:	ret    0xce33
  416be7:	call   0x9e3254f0
  416bec:	stc    
  416bed:	mov    ds:0x3c6587af,al
  416bf2:	dec    ebx
  416bf3:	mov    ds:0xe55bd7e9,al
  416bf8:	inc    eax
  416bf9:	and    eax,0xc471e16e
  416bfe:	inc    ecx
  416bff:	sub    eax,0x7936b3ea
  416c04:	pushf  
  416c05:	xor    BYTE PTR [esi+ebp*8+0x2b260e31],dl
  416c0c:	fnsave [eax-0x17]
  416c0f:	xchg   edi,eax
  416c10:	retf   
  416c11:	retf   0x7cdb
  416c14:	mov    cs,WORD PTR ss:[ebx-0xa253024]
  416c1b:	inc    eax
  416c1c:	jmp    0xdd9e76d3
  416c21:	clc    
  416c22:	retf   
  416c23:	mov    edx,edx
  416c25:	jmp    0xdc321908
  416c2a:	ins    BYTE PTR es:[edi],dx
  416c2b:	push   DWORD PTR [eax]
  416c2d:	pop    eax
  416c2e:	xchg   esp,eax
  416c2f:	jb     0x416c61
  416c31:	fld    QWORD PTR [ecx+0x61]
  416c34:	mov    ch,0x96
  416c36:	test   DWORD PTR [edx],esp
  416c38:	test   al,0x8a
  416c3a:	jp     0x416c53
  416c3c:	nop
  416c3d:	lods   al,BYTE PTR ds:[esi]
  416c3e:	inc    esp
  416c3f:	xchg   ebp,eax
  416c40:	in     al,0x2b
  416c42:	shr    eax,cl
  416c44:	jmp    0x1e5c53bc
  416c49:	cmp    cl,bh
  416c4b:	inc    edi
  416c4c:	ret    
  416c4d:	fwait
  416c4e:	test   eax,0x66ad0b4a
  416c53:	icebp  
  416c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c55:	loop   0x416c34
  416c57:	(bad)  
  416c58:	fwait
  416c59:	mov    ah,0x6c
  416c5b:	shl    DWORD PTR [ebp+0x1cbfd001],cl
  416c61:	push   ebx
  416c62:	cmp    al,0xb0
  416c64:	test   DWORD PTR [edx+0x6058bff7],0x501c5c7f
  416c6e:	pusha  
  416c6f:	mov    fs,WORD PTR [ebx+0x39]
  416c72:	jmp    0x416cce
  416c74:	mov    esi,0xdf70cd73
  416c79:	sahf   
  416c7a:	out    dx,al
  416c7b:	call   DWORD PTR [eax+esi*4]
  416c7e:	aas    
  416c7f:	sar    DWORD PTR [ecx-0x3],0xc2
  416c83:	fcom   DWORD PTR [ebp-0x5e]
  416c86:	dec    eax
  416c87:	xlat   BYTE PTR ds:[ebx]
  416c88:	dec    eax
  416c89:	mov    ds:0x4d58f44,eax
  416c8e:	cdq    
  416c8f:	mov    ebp,0x9168b89e
  416c94:	call   0x75956070
  416c99:	popf   
  416c9a:	fwait
  416c9b:	pop    eax
  416c9c:	jg     0x416c74
  416c9e:	fwait
  416c9f:	leave  
  416ca0:	addr16 cmp edx,edi
  416ca3:	pop    ecx
  416ca4:	or     ch,BYTE PTR [edx+edx*2]
  416ca7:	test   DWORD PTR [edx],esp
  416ca9:	mov    ecx,0x32e5fdc7
  416cae:	dec    edx
  416caf:	mov    cl,0x95
  416cb1:	aaa    
  416cb2:	out    0x6c,al
  416cb4:	mov    esi,0x48092ca7
  416cb9:	retf   0xdf6d
  416cbc:	in     eax,dx
  416cbd:	inc    esp
  416cbe:	icebp  
  416cbf:	adc    DWORD PTR [esi+0x23],esp
  416cc2:	gs ja  0x416c88
  416cc5:	push   cs
  416cc6:	cmp    dl,BYTE PTR [ebx]
  416cc8:	inc    ebx
  416cc9:	dec    BYTE PTR [ebx-0x2699546f]
  416ccf:	dec    edi
  416cd0:	xor    eax,0xfb8d1136
  416cd5:	sar    DWORD PTR [ebx],0xed
  416cd8:	sbb    DWORD PTR [ecx+eiz*8],edx
  416cdb:	fst    QWORD PTR [ecx+0x52]
  416cde:	loope  0x416d02
  416ce0:	sbb    eax,0x7cf3ab33
  416ce5:	sbb    ecx,DWORD PTR [edx+eax*2+0x1d00ac1b]
  416cec:	xchg   ebx,eax
  416ced:	into   
  416cee:	fcomp  QWORD PTR [esi]
  416cf0:	push   ss
  416cf1:	lods   al,BYTE PTR ds:[esi]
  416cf2:	sub    al,0x15
  416cf4:	pop    esi
  416cf5:	pop    esi
  416cf6:	inc    esp
  416cf7:	jbe    0x416d65
  416cf9:	xor    DWORD PTR [eax],0x1fa94d13
  416cff:	xor    esi,ebp
  416d01:	dec    edi
  416d02:	adc    DWORD PTR [esi-0x688c3537],esp
  416d08:	inc    ebp
  416d09:	mov    ds:0xa99f7bd2,eax
  416d0e:	sub    al,0x50
  416d10:	retf   0xb512
  416d13:	sub    DWORD PTR [edi+eiz*2+0x3f],0x4df86dd6
  416d1b:	test   BYTE PTR [ecx+0x7a],bh
  416d1e:	jmp    0xba99:0xf24e222d
  416d25:	imul   edi,DWORD PTR [esi-0x39c17fb1],0x5b
  416d2c:	pushf  
  416d2d:	pop    esi
  416d2e:	and    eax,0xfb5a86d9
  416d33:	and    esp,DWORD PTR [ebx-0x1e65d9e4]
  416d39:	ins    BYTE PTR es:[edi],dx
  416d3a:	es xchg edi,eax
  416d3d:	and    BYTE PTR [esi+0x3f],cl
  416d40:	inc    edx
  416d41:	ficom  WORD PTR cs:[esi+0x36]
  416d45:	and    al,BYTE PTR [edx-0x367420b7]
  416d4b:	push   esi
  416d4c:	mov    ebp,0xe1f5e80e
  416d51:	arpl   WORD PTR [edx],ax
  416d53:	xor    al,0x51
  416d55:	pop    ebp
  416d56:	ret    
  416d57:	pop    ss
  416d58:	mov    BYTE PTR [ebp+0x59cf6f25],0xbe
  416d5f:	xchg   edi,ebx
  416d61:	xor    DWORD PTR [ecx-0x5ff9f907],esp
  416d67:	scas   eax,DWORD PTR es:[edi]
  416d68:	xor    BYTE PTR [ebx+0x273da492],cl
  416d6e:	and    edi,esi
  416d70:	ins    BYTE PTR es:[edi],dx
  416d71:	jae    0x416d28
  416d73:	fidivr DWORD PTR [edx-0x33d0ccbc]
  416d79:	jg     0x416d51
  416d7b:	mov    cl,0x81
  416d7d:	fst    QWORD PTR [ebx+edx*1+0xb]
  416d81:	fsub   QWORD PTR [ecx]
  416d83:	outs   dx,BYTE PTR ds:[esi]
  416d84:	rcr    BYTE PTR [esi-0x50],0xe
  416d88:	das    
  416d89:	stos   BYTE PTR es:[edi],al
  416d8a:	sub    eax,DWORD PTR ds:0xf7d6feaa
  416d90:	cmp    al,0x12
  416d92:	repnz out dx,al
  416d94:	mov    esi,0x8602b95e
  416d99:	data16 mov ds,WORD PTR [edi-0x13b79e60]
  416da0:	mov    ds:0xb888109c,eax
  416da5:	ror    BYTE PTR [edx],0xdc
  416da8:	jecxz  0x416de1
  416daa:	into   
  416dab:	and    BYTE PTR [edi],cl
  416dad:	fsubrp st(6),st
  416daf:	mov    bl,dl
  416db1:	mov    ch,0x7
  416db3:	stos   BYTE PTR es:[edi],al
  416db4:	mov    esi,0x1b4cc119
  416db9:	std    
  416dba:	sbb    BYTE PTR [ebx-0x7d161863],ah
  416dc0:	int3   
  416dc1:	mov    bl,0xe3
  416dc3:	or     ebp,ebx
  416dc5:	pop    ecx
  416dc6:	xchg   edx,eax
  416dc7:	xor    al,BYTE PTR [ecx-0x50abf2a9]
  416dcd:	add    BYTE PTR [eax-0x27],bh
  416dd0:	(bad)  
  416dd1:	cwde   
  416dd2:	cwde   
  416dd3:	inc    edi
  416dd4:	mov    dl,0x6a
  416dd6:	loope  0x416d95
  416dd8:	ret    
  416dd9:	(bad)  
  416dda:	scas   al,BYTE PTR es:[edi]
  416ddb:	rcr    BYTE PTR [ebx+0x4e],cl
  416dde:	int    0x36
  416de0:	xor    ebx,ebx
  416de2:	iret   
  416de3:	imul   edx,ebx,0xf02b9b0e
  416de9:	cmc    
  416dea:	cmp    ah,BYTE PTR [esi+0x10]
  416ded:	push   0x14
  416def:	test   DWORD PTR [ebx+0x7f],edi
  416df2:	stos   DWORD PTR es:[edi],eax
  416df3:	stos   DWORD PTR es:[edi],eax
  416df4:	jbe    0x416e6c
  416df6:	and    ecx,ebx
  416df8:	(bad)  
  416dfa:	pop    esp
  416dfb:	cmp    al,0x90
  416dfd:	mov    ?,WORD PTR [eax+0x10]
  416e00:	adc    bh,cl
  416e02:	retf   
  416e03:	das    
  416e04:	or     eax,0xb5f2e869
  416e09:	shr    cl,cl
  416e0b:	sub    DWORD PTR gs:[edx-0x7481fa67],ebp
  416e12:	js     0x416e2e
  416e14:	mov    al,ds:0x785a2d4e
  416e19:	dec    ebp
  416e1a:	or     dh,dl
  416e1c:	aad    0x4d
  416e1e:	pop    esp
  416e1f:	mov    al,ds:0xa579666c
  416e24:	loop   0x416e69
  416e26:	xor    esi,DWORD PTR [edi+ecx*8+0x7087e57a]
  416e2d:	psadbw mm2,QWORD PTR [eax]
  416e30:	les    edi,FWORD PTR [eax-0x5e5bbffe]
  416e36:	and    bh,ah
  416e38:	lock and eax,0xa7f30708
  416e3e:	sub    bh,dh
  416e40:	inc    eax
  416e41:	dec    eax
  416e42:	push   edi
  416e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e44:	adc    DWORD PTR [edi+0x1f],esi
  416e47:	(bad)  
  416e48:	std    
  416e49:	test   eax,0x253b0adb
  416e4e:	iret   
  416e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e50:	adc    al,0xe9
  416e52:	cmp    DWORD PTR [esi-0x4eb45aaa],0x8e4b4502
  416e5c:	jp     0x416ed8
  416e5e:	dec    edx
  416e5f:	dec    ebx
  416e60:	imul   esp,DWORD PTR ds:0x8f9cebb6,0xcda6113d
  416e6a:	xor    BYTE PTR [ebx],dl
  416e6c:	jae    0x416eaa
  416e6e:	and    BYTE PTR [edi-0x19103a47],ch
  416e74:	mov    ch,0xba
  416e76:	add    al,0xb9
  416e78:	je     0x416e55
  416e7a:	sub    eax,0xfccaf073
  416e7f:	cmp    DWORD PTR [edx-0x19a28d42],0xffffffb3
  416e86:	inc    BYTE PTR [edx+eax*8]
  416e89:	pop    esp
  416e8a:	dec    ecx
  416e8b:	mov    ds:0xc8cbb9fa,eax
  416e90:	xor    DWORD PTR [ebx-0x2e15467d],ebx
  416e96:	xchg   ebp,eax
  416e97:	test   al,0x82
  416e99:	cmp    BYTE PTR [esp+edx*8],ch
  416e9c:	ins    DWORD PTR es:[edi],dx
  416e9d:	addr16 or ah,cl
  416ea0:	inc    esi
  416ea1:	push   cs
  416ea2:	pusha  
  416ea3:	cdq    
  416ea4:	jl     0x416f08
  416ea6:	test   al,0x90
  416ea8:	imul   ebp,DWORD PTR [esi+0x20],0x6e21af4b
  416eaf:	aad    0x5b
  416eb1:	sahf   
  416eb2:	shl    BYTE PTR [eax],cl
  416eb4:	ins    BYTE PTR es:[edi],dx
  416eb5:	mov    ebp,0x7c0225a2
  416eba:	add    BYTE PTR [ecx-0x62],al
  416ebd:	adc    al,0x2e
  416ebf:	mov    ebx,0x73836541
  416ec4:	xor    BYTE PTR [edi-0x578af0d1],bh
  416eca:	clc    
  416ecb:	push   0xf76f1ea6
  416ed0:	lds    edx,FWORD PTR [esp+edi*4+0x5e16f4f4]
  416ed7:	jmp    esp
  416ed9:	jmp    0x416eb3
  416edb:	in     eax,0x1f
  416edd:	ja     0x416f3a
  416edf:	and    BYTE PTR [ebp-0x5],bh
  416ee2:	xor    eax,0xab0217e1
  416ee7:	stc    
  416ee8:	fdiv   QWORD PTR [eax-0x62]
  416eeb:	add    edi,DWORD PTR [ecx]
  416eed:	push   0xffffffaa
  416eef:	dec    edx
  416ef0:	fimul  WORD PTR [eax-0x1a]
  416ef3:	out    dx,eax
  416ef4:	fld    DWORD PTR [edx*2-0x504c163d]
  416efb:	adc    eax,0x704ae022
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	or     ax,0x2542
  416f1b:	xchg   ebx,eax
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0x1a
  416f24:	push   edx
  416f25:	lds    ecx,FWORD PTR [esi+0x69]
  416f28:	and    dh,bh
  416f2a:	mov    DWORD PTR [eax-0x6c],ebx
  416f2d:	mov    esi,0x318ba41c
  416f32:	call   0x8f002d47
  416f37:	sbb    bl,BYTE PTR [edi+ebx*4]
  416f3a:	pop    ss
  416f3b:	shl    BYTE PTR [edi+0x62],0x12
  416f3f:	retf   0x3590
  416f42:	shl    BYTE PTR [ebp-0x1d252943],1
  416f48:	cmp    al,BYTE PTR [edx-0x5a35c705]
  416f4e:	mov    dh,0xb6
  416f50:	iret   
  416f51:	jecxz  0x416fd0
  416f53:	mov    ds:0x55cf812,eax
  416f58:	je     0x416f68
  416f5a:	xor    BYTE PTR [edx-0x3],dh
  416f5d:	mov    WORD PTR cs:[eax],?
  416f60:	adc    edx,esp
  416f62:	and    bl,ah
  416f64:	data16 fistp QWORD PTR [ecx-0x51c42704]
  416f6b:	je     0x416f63
  416f6d:	adc    DWORD PTR [ebx],0xffffff85
  416f70:	call   0xd737:0x8625e81a
  416f77:	jmp    0x416f5b
  416f79:	jb     0x416f79
  416f7b:	add    al,0x37
  416f7d:	or     DWORD PTR [ecx+0x7d18b882],ebx
  416f83:	xchg   ebp,eax
  416f84:	clc    
  416f85:	shl    BYTE PTR [edx],cl
  416f87:	push   ebx
  416f88:	and    esp,DWORD PTR [ecx+0x248a2f5]
  416f8e:	out    dx,eax
  416f8f:	sahf   
  416f90:	dec    ebp
  416f91:	dec    ecx
  416f92:	rcr    DWORD PTR [eax+0x287115d2],1
  416f98:	jno    0x416f44
  416f9a:	aam    0x4d
  416f9c:	imul   DWORD PTR [edx+0x1b]
  416f9f:	dec    BYTE PTR ds:0xffbb1114
  416fa5:	mov    ah,BYTE PTR [edi-0x61]
  416fa8:	es sub eax,0xfb3d0398
  416fae:	jns    0x416f81
  416fb0:	jmp    0x41700f
  416fb2:	es xor eax,0x9bd19285
  416fb8:	jmp    0x403003f4
  416fbd:	pop    esi
  416fbe:	push   ds
  416fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fc0:	stc    
  416fc1:	aaa    
  416fc2:	mov    cl,0x2b
  416fc4:	and    ch,bh
  416fc6:	outs   dx,DWORD PTR ds:[esi]
  416fc7:	adc    BYTE PTR [ebx],bh
  416fc9:	push   0xffffffb1
  416fcb:	rcl    al,1
  416fcd:	sub    eax,0x5a5f020d
  416fd2:	test   al,0x73
  416fd4:	in     eax,0xcd
  416fd6:	adc    DWORD PTR [edx],edx
  416fd8:	push   edx
  416fd9:	scas   al,BYTE PTR es:[edi]
  416fda:	sbb    eax,0xbd6d5c1d
  416fdf:	fnstcw WORD PTR [ebp-0x1ecc540f]
  416fe5:	fnsave [ecx]
  416fe7:	xchg   edx,eax
  416fe8:	call   0x3e09:0x63c8635d
  416fef:	pop    eax
  416ff0:	jmp    0x8058:0x74770cec
  416ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ff8:	and    ebx,DWORD PTR [ecx-0x1c]
  416ffb:	pop    ecx
  416ffc:	xor    BYTE PTR [esi],bh
  416ffe:	jle    0x416fed
  417000:	pop    eax
  417001:	xchg   ebp,eax
  417002:	jmp    0xfd938ace
  417007:	push   ecx
  417008:	sub    DWORD PTR [esp+edx*4-0x1f],ecx
  41700c:	bound  esp,QWORD PTR [ecx]
  41700e:	ret    0x34a5
  417011:	ret    
  417012:	int3   
  417013:	retf   0x142a
  417016:	(bad)  
  417018:	fmul   DWORD PTR [ebp+0x4d3f28be]
  41701e:	pop    esi
  41701f:	mov    edi,0x980ecb2c
  417024:	xlat   BYTE PTR ds:[ebx]
  417025:	push   ss
  417026:	push   edx
  417027:	ins    DWORD PTR es:[edi],dx
  417028:	push   ds
  417029:	mov    al,0xac
  41702b:	retf   
  41702c:	stos   BYTE PTR es:[edi],al
  41702d:	xor    al,0x4d
  41702f:	out    dx,al
  417030:	fldenv [esi]
  417032:	or     al,BYTE PTR [ebx-0x3f]
  417035:	sub    eax,0x83bff785
  41703a:	shr    BYTE PTR [ebx-0x594044db],0xd
  417041:	out    0xf4,al
  417043:	out    0xaf,al
  417045:	sbb    eax,0x6bec8eca
  41704a:	(bad)  
  41704b:	push   esi
  41704c:	sbb    eax,0x5bc945fb
  417051:	imul   ecx,DWORD PTR [ebx-0x30],0x9
  417055:	xchg   edi,eax
  417056:	inc    edx
  417057:	adc    ah,BYTE PTR [ebp-0x24]
  41705a:	and    BYTE PTR [esi+ebx*8+0x5e9fff9f],bh
  417061:	sbb    dl,BYTE PTR [edi]
  417063:	pushf  
  417064:	(bad)  
  417065:	outs   dx,BYTE PTR ds:[esi]
  417066:	dec    edi
  417067:	gs call 0x880a15cb
  41706d:	or     eax,0x6a9d3343
  417072:	test   DWORD PTR [edi+ecx*2+0x1a7140ae],edx
  417079:	cwde   
  41707a:	lods   eax,DWORD PTR ds:[esi]
  41707b:	fs in  eax,dx
  41707d:	pushw  cs
  41707f:	or     eax,0xdbfc421
  417084:	push   edi
  417085:	mov    edx,ebx
  417087:	in     eax,0xaf
  417089:	jmp    0x15aff5ac
  41708e:	mov    edx,0xbec7a6a9
  417093:	pop    edi
  417094:	(bad)  
  417095:	push   esp
  417096:	call   0xc6a17c92
  41709b:	or     ebp,DWORD PTR [edx-0x41]
  41709e:	bound  ebx,QWORD PTR [edx+0x2c]
  4170a1:	fs cmp bl,0xe6
  4170a5:	cmp    DWORD PTR [ebp+0x7606e733],ebp
  4170ab:	aam    0xdb
  4170ad:	xchg   esi,eax
  4170ae:	or     dh,BYTE PTR [ebx-0x319aa169]
  4170b4:	test   DWORD PTR [ebp+0x6e78ca41],esp
  4170ba:	and    DWORD PTR [eax],ecx
  4170bc:	lods   eax,DWORD PTR ds:[esi]
  4170bd:	inc    edx
  4170be:	xor    BYTE PTR [ebx-0x36042f1b],bl
  4170c4:	fsub   DWORD PTR [ecx]
  4170c6:	jb     0x4170e4
  4170c8:	xchg   edi,eax
  4170c9:	mov    bh,0xdf
  4170cb:	stos   DWORD PTR es:[edi],eax
  4170cc:	sti    
  4170cd:	adc    DWORD PTR [edi+0x14a89f6f],esi
  4170d3:	adc    dh,dh
  4170d5:	cmp    dh,BYTE PTR [eax+0x12678e85]
  4170db:	loopne 0x4170bb
  4170dd:	mov    esi,0x9e9f2043
  4170e2:	pop    ds
  4170e3:	jp     0x41709b
  4170e5:	aas    
  4170e6:	mov    ebp,0x8754cfea
  4170eb:	mov    bl,0x8
  4170ed:	enter  0xb8ce,0x73
  4170f1:	mov    bl,0xce
  4170f3:	adc    bh,BYTE PTR [edx-0x3c]
  4170f6:	call   0x34fcec16
  4170fb:	ins    DWORD PTR es:[edi],dx
  4170fc:	pop    ss
  4170fd:	sbb    DWORD PTR [ebx],eax
  4170ff:	mov    esi,0x82643500
  417104:	pop    DWORD PTR [ebp+0x5]
  417107:	push   cs
  417108:	mov    ch,0x29
  41710a:	mov    dh,0xa8
  41710c:	sar    edx,cl
  41710e:	aas    
  41710f:	popf   
  417110:	jmp    0x4e70:0x1f5dcbc5
  417117:	scas   al,BYTE PTR es:[edi]
  417118:	add    bh,0x9e
  41711b:	xchg   edi,eax
  41711c:	push   ds
  41711d:	add    DWORD PTR [ebp-0x33687749],ecx
  417123:	dec    ebx
  417124:	mov    ds:0x71b16f08,al
  417129:	out    0xb0,al
  41712b:	aas    
  41712c:	jecxz  0x417145
  41712e:	dec    edi
  41712f:	sub    BYTE PTR es:[edx+0x381de44e],cl
  417136:	sbb    al,0x7d
  417138:	nop
  417139:	icebp  
  41713a:	dec    ebp
  41713b:	push   cs
  41713c:	sub    bl,ch
  41713e:	data16 arpl WORD PTR [esi],ax
  417141:	adc    DWORD PTR [edx+0x1e],esi
  417144:	mov    eax,ds:0xebb96d69
  417149:	ret    
  41714a:	or     eax,0x5fca9090
  41714f:	aam    0xbd
  417151:	sbb    eax,edi
  417153:	ds mov dl,0xe7
  417156:	inc    edx
  417157:	mov    ss,WORD PTR [ebp+0x1d1b6a8f]
  41715d:	nop
  41715e:	mov    DWORD PTR [ecx-0x4eeef85b],ecx
  417164:	lods   al,BYTE PTR ds:[esi]
  417165:	in     eax,0x1b
  417167:	inc    ebx
  417168:	sbb    eax,0xa61100f1
  41716d:	inc    edx
  41716e:	shr    edx,0xc
  417171:	jo     0x417154
  417173:	dec    edi
  417174:	mov    bl,0xbf
  417176:	mov    dl,0x59
  417178:	xor    al,0x8a
  41717a:	test   BYTE PTR [esp+ebp*2+0x6b927d8d],0xba
  417182:	add    al,0x89
  417184:	aam    0xa2
  417186:	aam    0x6d
  417188:	and    al,BYTE PTR [ecx+0x1f]
  41718b:	fidivr DWORD PTR [esi+0x2ac7593e]
  417191:	cmp    eax,0xd655a8ce
  417196:	xor    edx,DWORD PTR [esi+0x6b]
  417199:	sbb    dl,ch
  41719b:	push   0xffffffe9
  41719d:	outs   dx,BYTE PTR ds:[esi]
  41719e:	dec    ebx
  41719f:	mov    bl,0x71
  4171a1:	push   ebp
  4171a2:	jle    0x4171fe
  4171a4:	inc    edx
  4171a5:	mov    dl,BYTE PTR ds:0x8ea76e7f
  4171ab:	sbb    eax,0x19d33b28
  4171b0:	outs   dx,DWORD PTR ds:[esi]
  4171b1:	repz rol DWORD PTR [ecx-0x20161ba5],1
  4171b8:	out    0xe7,al
  4171ba:	xchg   BYTE PTR [edx],al
  4171bc:	(bad)  
  4171bd:	push   ebx
  4171be:	call   0x503b:0x58f38388
  4171c5:	leave  
  4171c6:	inc    edx
  4171c7:	stc    
  4171c8:	mov    ch,0x95
  4171ca:	or     eax,DWORD PTR [ecx+0x4a]
  4171cd:	inc    ecx
  4171ce:	fimul  WORD PTR [ebp-0x42]
  4171d1:	cld    
  4171d2:	inc    ebp
  4171d3:	ficom  DWORD PTR [edx]
  4171d5:	cmp    eax,eax
  4171d7:	aad    0xe3
  4171d9:	test   eax,edi
  4171db:	imul   DWORD PTR [esi]
  4171dd:	cld    
  4171de:	or     BYTE PTR [ebx+0x7a],dl
  4171e1:	xor    BYTE PTR [edi-0x42f8c70c],0xd5
  4171e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e9:	retf   0x193f
  4171ec:	nop
  4171ed:	(bad)  
  4171ee:	into   
  4171ef:	push   cs
  4171f0:	pushf  
  4171f1:	jge    0x4171c8
  4171f3:	jne    0x41719e
  4171f5:	outs   dx,BYTE PTR ds:[esi]
  4171f6:	arpl   WORD PTR [ecx+0x45d30c27],cx
  4171fc:	push   ds
  4171fd:	mov    cl,0xf9
  4171ff:	mov    dl,0xc4
  417201:	clc    
  417202:	enter  0xa1b7,0x65
  417206:	or     eax,0x9e42b3af
  41720b:	or     al,BYTE PTR [esi]
  41720d:	sub    ebx,DWORD PTR [ecx-0x5b]
  417210:	sbb    esi,ebp
  417212:	rcl    BYTE PTR [ebx],cl
  417214:	inc    DWORD PTR [ecx]
  417216:	mov    dh,0xab
  417218:	sbb    DWORD PTR [ebx-0x53],ecx
  41721b:	pop    ss
  41721c:	outs   dx,BYTE PTR ds:[esi]
  41721d:	jp     0x4171c0
  41721f:	(bad)  
  417220:	jo     0x41721b
  417222:	sbb    DWORD PTR [eax+eiz*2],ebx
  417225:	loop   0x4171ab
  417227:	rcl    al,1
  417229:	ficom  WORD PTR [ebx+0x74]
  41722c:	jbe    0x4172a7
  41722e:	push   esi
  41722f:	in     al,dx
  417230:	(bad)  
  417231:	mov    al,ds:0x85a61a9d
  417236:	sub    al,0x58
  417238:	mov    esi,DWORD PTR [eax-0x109f805b]
  41723e:	mov    bh,0x4c
  417240:	shr    DWORD PTR [edi+0x72],cl
  417243:	push   eax
  417244:	fld    QWORD PTR [ebp+0x7b]
  417247:	dec    ecx
  417248:	and    bh,0xc5
  41724b:	call   FWORD PTR [ebp+0x5795af57]
  417251:	and    al,0xf8
  417253:	or     BYTE PTR [ebp+0x66],dh
  417256:	xor    edi,DWORD PTR [edx+edx*4+0x3eb31e68]
  41725d:	lock xchg ecx,eax
  41725f:	add    eax,0x1f2dcfdb
  417264:	or     BYTE PTR [eax],cl
  417266:	vmwrite ecx,DWORD PTR [edi]
  417269:	adc    DWORD PTR [edi-0x61],ebx
  41726c:	arpl   bp,cx
  41726e:	cwde   
  41726f:	sub    al,0x42
  417271:	xchg   DWORD PTR [esi-0x16],esi
  417274:	push   ebx
  417275:	ret    
  417276:	push   es
  417277:	add    ebx,DWORD PTR [edi+ecx*8-0x53]
  41727b:	and    BYTE PTR [eax+ecx*4+0x37],al
  41727f:	xor    ebp,DWORD PTR [ebx]
  417281:	pushf  
  417282:	push   0x95e1d034
  417287:	and    bh,bl
  417289:	sub    BYTE PTR [ebx-0x4a7111bf],ch
  41728f:	xor    eax,0xbb0f7ea3
  417294:	es mov ebx,cs
  417297:	(bad)  
  417298:	jns    0x4172f0
  41729a:	mov    dl,0x12
  41729c:	hlt    
  41729d:	mov    esi,0x4ca761f7
  4172a2:	bound  esp,QWORD PTR ss:[di-0x77]
  4172a7:	popf   
  4172a8:	popa   
  4172a9:	idiv   esi
  4172ab:	in     eax,0x2e
  4172ad:	mov    ecx,0xd4090ed8
  4172b2:	enter  0xc8d2,0xc9
  4172b6:	sub    DWORD PTR [ebx+0x4d4f2a25],ecx
  4172bc:	or     BYTE PTR [eax+ebx*4],ah
  4172bf:	and    DWORD PTR ds:0xc3dbf691,ebx
  4172c5:	sti    
  4172c6:	les    edi,FWORD PTR [edx-0x3b]
  4172c9:	int    0x90
  4172cb:	test   bh,al
  4172cd:	xchg   edx,eax
  4172ce:	xchg   edx,eax
  4172cf:	and    dl,BYTE PTR [edi-0x50]
  4172d2:	test   eax,0x6a951537
  4172d7:	mov    esi,0x6ac283
  4172dc:	lea    ecx,[ebx-0x23]
  4172df:	nop
  4172e0:	inc    esp
  4172e1:	mov    al,ds:0xda363882
  4172e6:	sub    dl,BYTE PTR [ebx]
  4172e8:	nop
  4172e9:	or     BYTE PTR [ecx-0x6b],ch
  4172ec:	shr    BYTE PTR [ecx-0x6cb6a20f],1
  4172f2:	mov    dl,dl
  4172f4:	mov    cl,0x72
  4172f6:	in     al,dx
  4172f7:	aaa    
  4172f8:	push   edi
  4172f9:	jp     0x417326
  4172fb:	mov    eax,0x5129b12c
  417300:	retf   
  417301:	xor    ecx,ebx
  417303:	push   ebx
  417304:	(bad)  
  417306:	mov    edi,0x459b892c
  41730b:	fist   WORD PTR [ebp+0x11257693]
  417311:	add    al,0xfc
  417313:	ins    BYTE PTR es:[edi],dx
  417314:	and    esi,esi
  417316:	sub    edi,esp
  417318:	xchg   esp,eax
  417319:	(bad)  
  41731a:	jnp    0x41735e
  41731c:	mov    dh,0x70
  41731e:	sub    BYTE PTR [edi+0x2b],al
  417321:	iret   
  417322:	dec    esp
  417323:	add    dh,BYTE PTR [edx-0x2f]
  417326:	call   0x9917:0xb885c964
  41732d:	fs jne 0x41734e
  417330:	or     al,0x4c
  417332:	std    
  417333:	jmp    0x4172c3
  417335:	aad    0xe7
  417337:	cmp    al,0xc4
  417339:	adc    al,BYTE PTR [edx]
  41733b:	mov    bl,0x7d
  41733d:	je     0x41735a
  41733f:	outs   dx,BYTE PTR ds:[esi]
  417340:	pop    edx
  417341:	cmc    
  417342:	jecxz  0x417352
  417344:	push   0x13
  417346:	pop    es
  417347:	pushf  
  417348:	loope  0x41739e
  41734a:	rcr    BYTE PTR [ebp+0x68],1
  41734d:	test   BYTE PTR [esi],bl
  41734f:	test   eax,0x4798fa32
  417354:	sti    
  417355:	leave  
  417356:	cmp    al,BYTE PTR [esi-0x52342b85]
  41735c:	sbb    ah,BYTE PTR [ebp+0x42]
  41735f:	enter  0xd43,0xad
  417363:	sbb    DWORD PTR [ecx],edx
  417365:	jb     0x41738a
  417367:	ins    BYTE PTR es:[edi],dx
  417368:	int3   
  417369:	adc    esi,0x55
  41736c:	mov    eax,ds:0x7979cfac
  417371:	xchg   esi,eax
  417372:	lods   eax,DWORD PTR ds:[esi]
  417373:	test   DWORD PTR [eax+0x29],0xda1c55f8
  41737a:	adc    dh,BYTE PTR [edx-0x4cab979f]
  417380:	sub    bh,bl
  417382:	clc    
  417383:	cwde   
  417384:	or     BYTE PTR [ebx-0x424f0098],dh
  41738a:	and    esp,DWORD PTR [ecx]
  41738c:	dec    ebx
  41738d:	out    dx,eax
  41738e:	bound  esp,QWORD PTR [edi+ebx*4-0x78d22383]
  417395:	hlt    
  417396:	call   0x3bcc24de
  41739b:	jb     0x417369
  41739d:	loopne 0x417359
  41739f:	push   esi
  4173a0:	or     eax,0x9cd624ff
  4173a5:	cmc    
  4173a6:	mov    cl,0xe4
  4173a8:	outs   dx,BYTE PTR ds:[esi]
  4173a9:	sahf   
  4173aa:	out    0x4a,eax
  4173ac:	cwde   
  4173ad:	mov    al,ds:0xa5bc93d0
  4173b2:	mov    al,0xc
  4173b4:	cli    
  4173b5:	data16 jbe 0x4173b7
  4173b8:	xlat   BYTE PTR ds:[ebx]
  4173b9:	pop    eax
  4173ba:	fld    QWORD PTR [ecx+ebx*2+0x7d]
  4173be:	scas   al,BYTE PTR es:[edi]
  4173bf:	mov    edx,0xa113b998
  4173c4:	pop    esp
  4173c5:	out    dx,al
  4173c6:	cmp    ecx,DWORD PTR [ecx]
  4173c8:	mov    ds:0xc74d859a,eax
  4173cd:	ror    BYTE PTR [ebp-0x3d],0x22
  4173d1:	push   es
  4173d2:	sar    ecx,0xd3
  4173d5:	out    0xdc,al
  4173d7:	xchg   BYTE PTR [eax+0x30bac93],dl
  4173dd:	mov    ecx,0xd326eb4b
  4173e2:	or     al,0x9c
  4173e4:	call   0xb6e0:0xf87c5ba9
  4173eb:	fdivr  QWORD PTR [ebx-0x386b0fbd]
  4173f1:	jo     0x4173a9
  4173f3:	fs clc 
  4173f5:	aaa    
  4173f6:	adc    BYTE PTR [esi+0x75ebec7e],bl
  4173fc:	movd   DWORD PTR [edx-0x50],mm0
  417400:	cwde   
  417401:	or     cl,BYTE PTR [eax]
  417403:	dec    esp
  417404:	mov    BYTE PTR [ecx],bh
  417406:	push   cs
  417407:	inc    ecx
  417408:	lods   eax,DWORD PTR ds:[esi]
  417409:	mov    ch,0xd2
  41740b:	xchg   esp,eax
  41740c:	gs push ecx
  41740e:	arpl   WORD PTR [edx+0x2a0fd22f],bp
  417414:	xor    ch,BYTE PTR [edi+0x2e]
  417417:	dec    esp
  417418:	mov    al,BYTE PTR [eax-0x5f635fbc]
  41741e:	jmp    0xc9686b9b
  417423:	retf   
  417424:	lock aad 0xbe
  417427:	daa    
  417428:	jmp    0xe153:0xebe6454e
  41742f:	aas    
  417430:	push   ebx
  417431:	pop    ebx
  417432:	adc    ebp,DWORD PTR [ebp-0x72]
  417435:	push   edx
  417436:	mov    eax,ds:0x4e7a23fd
  41743b:	aas    
  41743c:	jo     0x41745d
  41743e:	fisub  WORD PTR [edi+0x8]
  417441:	push   ecx
  417442:	mov    ecx,0xceb8313d
  417447:	(bad)  
  417448:	and    ebx,DWORD PTR [ebp+0x4a84443e]
  41744e:	aad    0xb
  417450:	cmp    al,0xd9
  417452:	icebp  
  417453:	sar    DWORD PTR [ecx],0xb9
  417456:	push   0x75effb9a
  41745b:	cmp    ecx,DWORD PTR [ecx-0x2186c8e6]
  417461:	mov    bl,0x80
  417463:	lods   al,BYTE PTR ds:[esi]
  417464:	mov    edi,0xc1911a5c
  417469:	jae    0x4173fe
  41746b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41746c:	jo     0x4174a5
  41746e:	mov    cl,0x2d
  417470:	es or  bl,bl
  417473:	ss ds ins DWORD PTR es:[edi],dx
  417476:	add    al,0x9c
  417478:	repnz push ebp
  41747a:	std    
  41747b:	jmp    0x2d0c:0x68ac486d
  417482:	arpl   si,sp
  417484:	dec    esp
  417485:	add    BYTE PTR [edx+0x76],al
  417488:	inc    bp
  41748a:	adc    al,0xff
  41748c:	daa    
  41748d:	dec    ebp
  41748e:	pop    ecx
  41748f:	mov    ah,0xd6
  417491:	shl    BYTE PTR [esi],cl
  417493:	adc    eax,0xc3cc194a
  417498:	lahf   
  417499:	jo     0x417455
  41749b:	sub    DWORD PTR [esi-0x21cda79c],ebp
  4174a1:	in     eax,dx
  4174a2:	cmc    
  4174a3:	push   cs
  4174a4:	pop    esp
  4174a5:	aaa    
  4174a6:	dec    ecx
  4174a7:	stos   DWORD PTR es:[edi],eax
  4174a8:	ins    DWORD PTR es:[edi],dx
  4174a9:	jmp    0x41745a
  4174ab:	popa   
  4174ac:	shl    BYTE PTR [eax+0x5d],1
  4174af:	jp     0x4174c2
  4174b1:	js     0x417460
  4174b3:	and    BYTE PTR [esi+eax*1+0x26d4fc8d],bl
  4174ba:	pop    esi
  4174bb:	lods   eax,DWORD PTR ds:[esi]
  4174bc:	push   esi
  4174bd:	push   0xfc100528
  4174c2:	mov    ebx,0x38b9c719
  4174c7:	xor    ebx,DWORD PTR [edi-0x4bd1860b]
  4174cd:	jb     0x417494
  4174cf:	(bad)  
  4174d0:	pop    edi
  4174d1:	xor    DWORD PTR [ecx],edi
  4174d3:	ja     0x417554
  4174d5:	ror    DWORD PTR [edx+0x7d],cl
  4174d8:	aam    0x7e
  4174da:	ss sbb ecx,esp
  4174dd:	test   BYTE PTR [edi-0x39],bh
  4174e0:	repnz (bad) 
  4174e2:	sub    cl,BYTE PTR [edx-0x27]
  4174e5:	and    DWORD PTR [ecx],0x70
  4174e8:	fcmovne st,st(0)
  4174ea:	and    BYTE PTR gs:[ebp-0x423f2b57],ch
  4174f1:	int    0x49
  4174f3:	(bad)  
  4174f4:	adc    cl,bh
  4174f6:	xor    BYTE PTR [edi+ebp*1-0x304b2ec4],bl
  4174fd:	jo     0x41755e
  4174ff:	enter  0x5bdf,0x2d
  417503:	test   al,0x67
  417505:	fistp  DWORD PTR [esi+eax*4]
  417508:	out    0xef,eax
  41750a:	(bad)  
  41750b:	int    0x43
  41750d:	pop    es
  41750e:	ds int 0x4
  417511:	mov    esi,0x4462df46
  417516:	add    cl,cl
  417518:	or     al,0xb4
  41751a:	dec    ebp
  41751b:	scas   al,BYTE PTR es:[edi]
  41751c:	(bad)  
  41751d:	jmp    0xddb9d292
  417522:	cmp    BYTE PTR [ebp+0x4b],0x69
  417526:	cld    
  417527:	pop    DWORD PTR [edi]
  417529:	por    mm0,QWORD PTR [esi-0x70]
  41752d:	push   ebx
  41752e:	hlt    
  41752f:	xor    BYTE PTR [edx+0x6c],al
  417532:	mov    edi,edx
  417534:	pop    esi
  417535:	bound  ecx,QWORD PTR [ebp-0x28d3936c]
  41753b:	repz or ecx,ebp
  41753e:	cmp    al,BYTE PTR [edi+0x43053a9]
  417544:	sub    eax,DWORD PTR [edx]
  417546:	or     esp,DWORD PTR [eax]
  417548:	jmp    0x4174fe
  41754a:	pop    ebx
  41754b:	idiv   ecx
  41754d:	jecxz  0x417589
  41754f:	arpl   bx,si
  417551:	adc    al,0x25
  417553:	jb     0x4174ec
  417555:	push   ss
  417556:	jp     0x41750a
  417558:	inc    esi
  417559:	sahf   
  41755a:	rcl    esi,1
  41755c:	jmp    0x26290c19
  417561:	cmp    cl,BYTE PTR [ebx]
  417563:	add    ecx,ebx
  417565:	imul   esi,ebp,0x1338cb70
  41756b:	xchg   si,ax
  41756d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41756e:	fcomip st,st(1)
  417570:	cmp    cl,BYTE PTR [esi]
  417572:	adc    DWORD PTR [eax],esp
  417574:	mov    eax,ebx
  417576:	inc    edi
  417577:	jg     0x4175db
  417579:	out    0x37,eax
  41757b:	xor    eax,0x3aa814f5
  417580:	fidiv  DWORD PTR [ebx+0x5b]
  417583:	push   edi
  417584:	sbb    ecx,DWORD PTR [esi]
  417586:	arpl   WORD PTR [ebx-0x56],dx
  417589:	sub    cl,BYTE PTR [ebp-0x4d19da90]
  41758f:	jbe    0x417571
  417591:	push   edi
  417592:	int    0x9
  417594:	pop    ecx
  417595:	add    ebp,DWORD PTR [edi-0x6960b4f9]
  41759b:	add    edx,0xffffffc7
  41759e:	add    DWORD PTR [edi+0x7305d9c0],0xffffffb6
  4175a5:	and    BYTE PTR gs:[ebx-0x43],dh
  4175a9:	ins    DWORD PTR es:[edi],dx
  4175aa:	in     eax,dx
  4175ab:	pop    esi
  4175ac:	sub    BYTE PTR [edi+0x50],ah
  4175af:	mov    eax,ebp
  4175b1:	mov    ds:0x3d97e398,eax
  4175b6:	out    dx,eax
  4175b7:	mov    ah,0xc7
  4175b9:	sahf   
  4175ba:	(bad)  
  4175bb:	rcl    BYTE PTR [edx],1
  4175bd:	ds shr DWORD PTR gs:[eax],cl
  4175c1:	jg     0x41762d
  4175c3:	jne    0x417626
  4175c5:	jl     0x4175ff
  4175c7:	cwde   
  4175c8:	shl    BYTE PTR fs:[ebp-0x4f294c0c],0xb9
  4175d0:	sub    BYTE PTR [edx-0x40884c8],dl
  4175d6:	ja     0x4175f8
  4175d8:	dec    ebp
  4175d9:	dec    ebp
  4175da:	scas   eax,DWORD PTR es:[edi]
  4175db:	adc    cl,bl
  4175dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175de:	pop    ebx
  4175df:	sbb    bl,BYTE PTR [edi-0x8]
  4175e2:	rcr    ebp,cl
  4175e4:	(bad)  
  4175e5:	push   ebp
  4175e6:	inc    eax
  4175e7:	gs inc ebx
  4175e9:	dec    esp
  4175ea:	pop    eax
  4175eb:	aam    0x74
  4175ed:	mov    gs:0xab299696,al
  4175f3:	fcmovnb st,st(1)
  4175f5:	mul    DWORD PTR ds:0x3fc58048
  4175fb:	icebp  
  4175fc:	xor    eax,0xa792d52b
  417601:	inc    ebx
  417602:	out    0x70,eax
  417604:	hlt    
  417605:	jns    0x417587
  417607:	cs cs out dx,eax
  41760a:	sub    al,0x18
  41760c:	imul   eax,esp,0x6d7f37eb
  417612:	aam    0x22
  417614:	jae    0x417654
  417616:	cmp    ch,BYTE PTR [ebx-0x45ce305e]
  41761c:	add    eax,0xae43a852
  417621:	or     al,BYTE PTR [ebx+0x571f07d6]
  417627:	sti    
  417628:	pop    ss
  417629:	stos   DWORD PTR es:[edi],eax
  41762a:	push   0xffffffb4
  41762c:	scas   eax,DWORD PTR es:[edi]
  41762d:	xchg   BYTE PTR [esi+0x74b5bdd6],ah
  417633:	sub    al,0xbf
  417635:	ret    
  417636:	jbe    0x41763c
  417638:	xchg   esp,eax
  417639:	inc    ecx
  41763a:	sub    DWORD PTR [ebp+0x221c38de],esp
  417640:	mov    ds:0xc2175fa1,al
  417645:	ret    0xa3d3
  417648:	js     0x4176b1
  41764a:	or     edx,DWORD PTR [edi+0x69]
  41764d:	inc    ebx
  41764e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41764f:	fs mov ebx,0xe9993aee
  417655:	dec    ebp
  417656:	out    0x93,eax
  417658:	inc    ecx
  417659:	jmp    0x4176d2
  41765b:	scas   al,BYTE PTR es:[edi]
  41765c:	stos   DWORD PTR es:[edi],eax
  41765d:	push   esp
  41765e:	popf   
  41765f:	add    DWORD PTR [ebx-0x16aac6ad],ebp
  417665:	pop    ds
  417666:	mov    ds:0x7d306fba,eax
  41766b:	stos   DWORD PTR es:[edi],eax
  41766c:	(bad)  
  41766d:	mov    esp,0x7d63eaa6
  417672:	mov    al,0x1c
  417674:	sub    eax,0xa7bb8de7
  417679:	dec    ebp
  41767a:	push   cs
  41767b:	lds    ebx,FWORD PTR [eax-0x61]
  41767e:	inc    eax
  41767f:	push   ds
  417680:	test   DWORD PTR [ebx],eax
  417682:	test   DWORD PTR gs:[edi],esp
  417685:	mov    bh,0x8
  417687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417688:	sti    
  417689:	cmp    cl,BYTE PTR [edx-0x3e4dfdc5]
  41768f:	test   DWORD PTR ds:0x62067290,edx
  417695:	loopne 0x4176de
  417697:	scas   al,BYTE PTR es:[edi]
  417698:	imul   ecx,ecx,0x1a
  41769b:	js     0x41762b
  41769d:	dec    ebx
  41769e:	popa   
  41769f:	cmp    DWORD PTR [ebp-0x22544131],ebp
  4176a5:	fiadd  DWORD PTR [ecx]
  4176a7:	adc    edx,DWORD PTR [edx]
  4176a9:	rcl    BYTE PTR [esp+edi*1-0x7e32eee4],1
  4176b0:	mov    ecx,ds
  4176b2:	mov    cl,BYTE PTR [edi-0x33d185c]
  4176b8:	fwait
  4176b9:	inc    ebp
  4176ba:	xor    al,0x1d
  4176bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176bd:	hlt    
  4176be:	mov    ecx,0xd437e698
  4176c3:	test   eax,0xf2d10ef6
  4176c8:	cmp    DWORD PTR ds:0xd8e75ce2,ebp
  4176ce:	jne    0x4176a7
  4176d0:	fstp   TBYTE PTR [ebp+0x2e]
  4176d3:	les    ebp,FWORD PTR [edx]
  4176d5:	leave  
  4176d6:	out    dx,eax
  4176d7:	mov    eax,ds:0x532ac2e6
  4176dc:	xchg   ebp,eax
  4176dd:	xor    BYTE PTR [ecx-0x3d9b55e2],dh
  4176e3:	push   ebp
  4176e4:	inc    esi
  4176e5:	or     bl,dh
  4176e7:	cmp    al,0x4b
  4176e9:	ror    BYTE PTR [edi+ecx*2-0x23],0xff
  4176ee:	leave  
  4176ef:	mov    WORD PTR [eax],ss
  4176f1:	pop    DWORD PTR [esi+0x6b]
  4176f4:	sar    dh,cl
  4176f6:	mov    al,ds:0x942078e
  4176fb:	lods   eax,DWORD PTR ds:[esi]
  4176fc:	mov    bl,0xf9
  4176fe:	push   ss
  4176ff:	cmp    ah,ah
  417701:	aam    0x20
  417703:	jmp    0xdf81d79d
  417708:	pop    esi
  417709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41770a:	jb     0x41776f
  41770c:	scas   al,BYTE PTR es:[edi]
  41770d:	(bad)  
  41770e:	imul   edi,DWORD PTR [edx+0x443a5648],0x4b
  417715:	add    dh,BYTE PTR [eax]
  417717:	lea    ecx,[esi+0x71]
  41771a:	gs enter 0x31c5,0xe5
  41771f:	int    0x27
  417721:	inc    esi
  417722:	sub    cl,BYTE PTR ds:0xba302b23
  417728:	adc    eax,0x89bd2e1
  41772d:	add    al,BYTE PTR [esi]
  41772f:	xor    eax,DWORD PTR [esi-0x5e9c8bda]
  417735:	push   ds
  417736:	nop
  417737:	out    0x24,al
  417739:	cld    
  41773a:	imul   edx,eax,0x7472298f
  417740:	adc    eax,0x50880d34
  417745:	int    0x63
  417747:	icebp  
  417748:	int    0x38
  41774a:	into   
  41774b:	in     eax,dx
  41774c:	jmp    0x31d5267
  417751:	mov    edi,0x8bd220d7
  417756:	addr16 mov ebp,0x3dcfd114
  41775c:	mov    cl,0x55
  41775e:	jnp    0x417771
  417760:	pop    ss
  417761:	ins    BYTE PTR es:[edi],dx
  417762:	mov    eax,0x1019b6ba
  417767:	sub    dl,cl
  417769:	and    edi,DWORD PTR [edi+eax*4+0x2]
  41776d:	mov    edx,ss
  41776f:	pop    edx
  417770:	pushf  
  417771:	inc    esp
  417772:	sub    DWORD PTR [eax-0x41af77e4],esi
  417778:	push   esi
  417779:	jo     0x41771c
  41777b:	ins    BYTE PTR es:[edi],dx
  41777c:	dec    ecx
  41777d:	or     eax,0x9fdd1678
  417782:	dec    ecx
  417783:	fild   WORD PTR [esi-0x6e]
  417786:	jle    0x41777c
  417788:	mov    eax,ds:0xd15d576a
  41778d:	push   esp
  41778e:	mov    cl,0x48
  417790:	out    0x1b,al
  417792:	sub    DWORD PTR [edx+0x5b],eax
  417795:	and    esp,DWORD PTR [edx]
  417797:	inc    ebp
  417798:	sbb    DWORD PTR [esi-0x48d95963],edx
  41779e:	aaa    
  41779f:	(bad)  
  4177a0:	out    dx,al
  4177a1:	jne    0x4177a7
  4177a3:	jp     0x41775a
  4177a5:	ja     0x4177b7
  4177a7:	add    edx,DWORD PTR [edx+0xb26423c]
  4177ad:	aaa    
  4177ae:	pop    eax
  4177af:	ret    
  4177b0:	xchg   ecx,eax
  4177b1:	ja     0x417799
  4177b3:	fld    QWORD PTR [edi+0x2d]
  4177b6:	std    
  4177b7:	addr16 xchg ecx,eax
  4177b9:	push   edx
  4177ba:	xchg   ebp,eax
  4177bb:	ret    
  4177bc:	stos   BYTE PTR es:[edi],al
  4177bd:	arpl   WORD PTR [eax-0x7c],sp
  4177c0:	inc    esi
  4177c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177c2:	ins    DWORD PTR es:[edi],dx
  4177c3:	dec    esi
  4177c4:	or     DWORD PTR [eax-0x55c7b2f2],ebp
  4177ca:	dec    eax
  4177cb:	cld    
  4177cc:	into   
  4177cd:	shr    BYTE PTR [ecx+0x62f11abf],1
  4177d3:	sahf   
  4177d4:	mov    al,ds:0x9b9cd360
  4177d9:	stc    
  4177da:	fld    DWORD PTR [ebx+0x3c422dc9]
  4177e0:	sbb    eax,0xe417feed
  4177e5:	sub    BYTE PTR [eax-0x67],ch
  4177e8:	or     eax,DWORD PTR [edi-0x7]
  4177eb:	fucomip st,st(4)
  4177ed:	add    eax,0x304b326
  4177f2:	or     BYTE PTR [edi-0x7c],0xe
  4177f6:	add    esp,DWORD PTR [eax]
  4177f8:	es outs dx,BYTE PTR ss:[esi]
  4177fb:	pop    eax
  4177fc:	out    dx,eax
  4177fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177fe:	imul   ecx,DWORD PTR [edx],0xaa1f9d37
  417804:	jb     0x4177fa
  417806:	pop    es
  417807:	aam    0x83
  417809:	jmp    0xdb17:0xdffc870f
  417810:	outs   dx,DWORD PTR ds:[esi]
  417811:	push   ecx
  417812:	(bad)  
  417813:	and    al,0xec
  417815:	cmp    ecx,DWORD PTR [ecx-0x79980c6e]
  41781b:	mov    DWORD PTR [edx+edi*8-0x4368616c],0x583325
  417826:	sbb    eax,0xad7c10a0
  41782b:	mov    eax,ds:0x3efc0297
  417830:	retf   
  417831:	mov    ds:0x5e4af0d6,al
  417836:	neg    BYTE PTR [esi+0x76]
  417839:	mov    edx,0xf76bf00d
  41783e:	mov    ebx,?
  417840:	shr    BYTE PTR [ebx],cl
  417842:	sahf   
  417843:	inc    esp
  417844:	xchg   edx,eax
  417845:	jnp    0x4177f8
  417847:	jg     0x4178c7
  417849:	jne    0x41786d
  41784b:	scas   al,BYTE PTR es:[edi]
  41784c:	add    DWORD PTR [esi-0x72],esp
  41784f:	adc    edx,0xfffffffc
  417852:	(bad)  
  417854:	lea    esp,[ebx+0x1a334b5]
  41785a:	inc    esp
  41785b:	jb     0x417842
  41785d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41785e:	and    eax,0xcf49c72b
  417863:	scas   al,BYTE PTR es:[edi]
  417864:	push   esp
  417865:	sbb    BYTE PTR [esp+edi*1],al
  417868:	mov    DWORD PTR [ebx],esp
  41786a:	or     BYTE PTR [ecx+ebx*1+0x7],ch
  41786e:	(bad)  
  41786f:	pop    ds
  417870:	rcl    BYTE PTR [ecx+esi*8],cl
  417873:	jae    0x417887
  417875:	sti    
  417876:	std    
  417877:	jb     0x4178c4
  417879:	imul   ebx,DWORD PTR [edi+0xf],0xd461c296
  417880:	call   0x27fd2f96
  417885:	mov    bh,bl
  417887:	inc    ebp
  417888:	sub    dh,al
  41788a:	and    al,0xa1
  41788c:	cmp    bl,BYTE PTR ds:0xbd4ab813
  417892:	push   cs
  417893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417894:	cmp    eax,0xff24cc34
  417899:	out    dx,al
  41789a:	dec    esi
  41789b:	les    eax,FWORD PTR [eax-0x7c3dbfe0]
  4178a1:	iret   
  4178a2:	and    eax,0x7a7732f6
  4178a7:	call   edx
  4178a9:	stc    
  4178aa:	xchg   edx,eax
  4178ab:	xor    BYTE PTR [esi-0x13],dl
  4178ae:	mov    edx,DWORD PTR [esi+edx*4]
  4178b1:	jecxz  0x4178fb
  4178b3:	xchg   ebx,eax
  4178b4:	stos   BYTE PTR es:[edi],al
  4178b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b6:	enter  0x5813,0x8c
  4178ba:	lahf   
  4178bb:	push   ecx
  4178bc:	fnstsw WORD PTR [ebp+0x79c49cb9]
  4178c2:	sar    BYTE PTR [ebx-0x3c],1
  4178c5:	and    eax,DWORD PTR [ecx-0x3f1ecf4e]
  4178cb:	sbb    BYTE PTR [esi+ebp*4-0x77],bl
  4178cf:	jo     0x417872
  4178d1:	lods   al,BYTE PTR ds:[esi]
  4178d2:	(bad)  
  4178d3:	jbe    0x4178dc
  4178d5:	xor    ch,dl
  4178d7:	and    ch,dl
  4178d9:	sub    al,0x5
  4178db:	jb     0x417872
  4178dd:	inc    ebx
  4178de:	pop    eax
  4178df:	mov    ?,ebx
  4178e1:	rol    DWORD PTR [esi],cl
  4178e3:	jecxz  0x4178e3
  4178e5:	jmp    0x417941
  4178e7:	cli    
  4178e8:	aas    
  4178e9:	cwde   
  4178ea:	bnd jne 0x417947
  4178ed:	cmp    al,0xcd
  4178ef:	popf   
  4178f0:	shl    DWORD PTR [edx+0x40],cl
  4178f3:	mov    ebp,0xa90a6d16
  4178f8:	mov    esp,esi
  4178fa:	xor    bl,ah
  4178fc:	ds in  eax,dx
  4178fe:	pop    esi
  4178ff:	pop    esp
  417900:	cmp    eax,0xa1e8ea54
  417905:	xor    cl,cl
  417907:	dec    ebp
  417908:	loope  0x4178d3
  41790a:	fs sbb ebp,esi
  41790d:	xor    bh,bl
  41790f:	mov    dl,0x76
  417911:	je     0x417961
  417913:	adc    al,0x7
  417915:	sti    
  417916:	rcr    DWORD PTR [esi+0x60],1
  417919:	jmp    0x8de3:0x265d6250
  417920:	adc    eax,0x9c1978cf
  417925:	mov    al,0x7c
  417927:	jo     0x417994
  417929:	pop    eax
  41792a:	mov    eax,ds:0x780b5ffc
  41792f:	or     esp,DWORD PTR [ebx+0x64]
  417932:	mov    ecx,0x379e209e
  417937:	call   0x65c5d707
  41793c:	and    DWORD PTR [eiz*2-0x38761a1a],esi
  417943:	dec    ebp
  417944:	or     al,0x19
  417946:	lds    edi,FWORD PTR ds:0x91cdb87d
  41794c:	fistp  DWORD PTR [ebx+0x3184417e]
  417952:	cmp    BYTE PTR [eax],bh
  417954:	push   ecx
  417955:	and    ch,BYTE PTR [ebx+edx*4-0x619bb2ba]
  41795c:	dec    esp
  41795d:	cmc    
  41795e:	aad    0x35
  417960:	and    eax,0x5af2c26b
  417965:	js     0x41793b
  417967:	jmp    0x639c3b90
  41796c:	std    
  41796d:	fstp   QWORD PTR [edi+0x66]
  417970:	pop    ebx
  417971:	popa   
  417972:	dec    esi
  417973:	or     edx,DWORD PTR [ecx*1+0x32ffc6e9]
  41797a:	mov    cs,WORD PTR [edi-0x38bbd2a2]
  417980:	pop    eax
  417981:	push   esi
  417982:	sahf   
  417983:	retf   
  417984:	test   eax,0xee8ddf15
  417989:	test   DWORD PTR [esi+0x5d1055d9],ecx
  41798f:	xchg   esp,eax
  417990:	daa    
  417991:	imul   esp,ebx,0x976c1a0
  417997:	adc    esp,ecx
  417999:	adc    esi,DWORD PTR ds:0x7cc04137
  41799f:	pop    esi
  4179a0:	and    al,0x7b
  4179a2:	in     eax,0xb6
  4179a4:	fistp  DWORD PTR [edi-0x5]
  4179a7:	(bad)  
  4179a8:	push   ebx
  4179a9:	jmp    0x3d5bc5a2
  4179ae:	pop    eax
  4179af:	dec    esi
  4179b0:	inc    esp
  4179b1:	xchg   esp,eax
  4179b2:	fmul   DWORD PTR [edx+edx*4+0x22]
  4179b6:	outs   dx,BYTE PTR ds:[esi]
  4179b7:	ds out 0xfc,al
  4179ba:	fs sahf 
  4179bc:	psrad  mm4,QWORD PTR [eax+0x4e]
  4179c0:	popa   
  4179c1:	fimul  WORD PTR [edx+edx*8]
  4179c4:	fs es out dx,al
  4179c7:	into   
  4179c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c9:	xor    edi,DWORD PTR [esi-0x726df1e9]
  4179cf:	cmp    eax,0x4a303aed
  4179d4:	lahf   
  4179d5:	call   0x85135fdc
  4179da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179db:	js     0x417a17
  4179dd:	(bad)  
  4179de:	hlt    
  4179df:	ret    0x7018
  4179e2:	das    
  4179e3:	and    al,0x3b
  4179e5:	ss repz jp 0x417a28
  4179e9:	push   cs
  4179ea:	cwde   
  4179eb:	fcom   QWORD PTR [ecx-0x51338711]
  4179f1:	popf   
  4179f2:	push   esi
  4179f3:	add    dl,BYTE PTR [ebx+0x2b]
  4179f6:	add    BYTE PTR [edx+0x5e],dl
  4179f9:	rcl    DWORD PTR [ebp-0x2a],0x93
  4179fd:	(bad)  
  4179fe:	sub    edx,DWORD PTR [eax]
  417a00:	cli    
  417a01:	push   0x6a65bd9b
  417a06:	ja     0x4179e8
  417a08:	cli    
  417a09:	pop    esp
  417a0a:	addr16 std 
  417a0c:	mov    edx,0x5f2a2e6a
  417a11:	mov    DWORD PTR [ebp-0x1c],esp
  417a14:	mov    esi,0x9578530f
  417a19:	dec    esi
  417a1a:	xchg   ebp,eax
  417a1b:	imul   ecx,DWORD PTR [ebp+0x15],0x4e8a28fd
  417a22:	cmc    
  417a23:	add    DWORD PTR [eax+0x47edb11],ebx
  417a29:	lahf   
  417a2a:	cld    
  417a2b:	pop    esi
  417a2c:	push   edx
  417a2d:	repz clc 
  417a2f:	jae    0x4179d4
  417a31:	inc    eax
  417a32:	icebp  
  417a33:	add    DWORD PTR [eax+0x1e5b9410],0xc2acf389
  417a3d:	jmp    0x417a9f
  417a3f:	xor    DWORD PTR [edx],ebp
  417a41:	fdivr  st(6),st
  417a43:	cmp    eax,0xdcad437
  417a48:	(bad)  
  417a4a:	mov    eax,ds:0x2d1b573b
  417a50:	mov    eax,0x6cd00cb6
  417a55:	aad    0x14
  417a57:	push   cs
  417a58:	jmp    0x5b2c901f
  417a5d:	adc    BYTE PTR ds:0x1faad867,0xd7
  417a64:	clc    
  417a65:	inc    ebp
  417a66:	ins    DWORD PTR es:[edi],dx
  417a67:	dec    ecx
  417a68:	outs   dx,BYTE PTR ds:[esi]
  417a69:	ds push edi
  417a6b:	jl     0x417a90
  417a6d:	sub    eax,0x62fcda02
  417a72:	mov    eax,0x6a367059
  417a77:	pop    es
  417a78:	data16 in al,0x21
  417a7b:	imul   ebp,DWORD PTR [edx+0x475b01da],0xa236653c
  417a85:	arpl   di,bp
  417a87:	dec    edx
  417a88:	fst    QWORD PTR [eax-0x195a2779]
  417a8e:	inc    ebp
  417a8f:	mov    al,0x98
  417a91:	mov    ch,0x3a
  417a93:	test   BYTE PTR [eax],dl
  417a95:	rol    esp,cl
  417a97:	sbb    DWORD PTR [eax],esi
  417a99:	jno    0x417af7
  417a9b:	or     ah,cl
  417a9d:	push   ecx
  417a9e:	dec    ecx
  417a9f:	or     dh,BYTE PTR [ecx+0x6d]
  417aa2:	xchg   esi,eax
  417aa3:	mov    BYTE PTR [ecx+0x40b61178],dl
  417aa9:	jb     0x417b06
  417aab:	ja     0x417a96
  417aad:	push   ebp
  417aae:	xchg   edx,eax
  417aaf:	push   edx
  417ab0:	mov    ah,0x93
  417ab2:	daa    
  417ab3:	and    BYTE PTR [edx],bh
  417ab5:	call   0xed7bf47d
  417aba:	mov    ds:0x6729dab4,al
  417abf:	int3   
  417ac0:	cmp    DWORD PTR [edi+0x3464a0bd],0xffffff9a
  417ac7:	push   ebx
  417ac8:	jbe    0x417b35
  417aca:	les    ebx,FWORD PTR [ebp+edx*1+0x3e]
  417ace:	fcmovbe st,st(0)
  417ad0:	ds jle 0x417a82
  417ad3:	push   0x2
  417ad5:	xchg   BYTE PTR ds:0x98abfcf0,ah
  417adb:	shl    BYTE PTR [ebx+ebx*1+0x7e],1
  417adf:	cwde   
  417ae0:	add    BYTE PTR [eax],cl
  417ae2:	sub    esi,DWORD PTR [ebx-0x37825aab]
  417ae8:	xchg   edi,eax
  417ae9:	cmp    DWORD PTR [edx],esi
  417aeb:	pop    esi
  417aec:	mov    ebx,0x5a6e4383
  417af1:	xor    eax,0xee8c4740
  417af6:	(bad)  
  417af8:	adc    eax,0x3c7cccd8
  417afd:	pop    eax
  417afe:	push   ebp
  417aff:	jno    0x417b6e
  417b01:	fmul   st(2),st
  417b03:	sub    DWORD PTR [edi-0x15],ebx
  417b06:	aaa    
  417b07:	in     al,0x9c
  417b09:	or     bl,cl
  417b0b:	sub    BYTE PTR [eax-0x3e7cfef0],cl
  417b11:	xchg   ebp,eax
  417b12:	dec    ebx
  417b13:	jno    0x417b45
  417b15:	add    al,0xba
  417b17:	test   DWORD PTR [esp+edx*4],edi
  417b1a:	jmp    0x10bc50a3
  417b1f:	mov    al,0xac
  417b21:	addr16 aas 
  417b23:	inc    ecx
  417b24:	and    eax,0xf10e9d0b
  417b29:	fiadd  DWORD PTR [esi+ebx*4]
  417b2c:	pop    ds
  417b2d:	es inc esi
  417b2f:	mov    edi,0x73674855
  417b34:	push   esp
  417b35:	mov    WORD PTR [ebp+0x71],cs
  417b38:	sahf   
  417b39:	ja     0x417b55
  417b3b:	pop    ecx
  417b3c:	mov    edx,0x53c7831b
  417b41:	xor    DWORD PTR [esi+0x125d0a7],0xffffff96
  417b48:	or     al,0xf3
  417b4a:	xor    eax,0xb1ec300e
  417b4f:	push   eax
  417b50:	mov    ds:0x3e80e92f,al
  417b55:	clc    
  417b56:	fsubr  st(1),st
  417b58:	aam    0x32
  417b5a:	std    
  417b5b:	loop   0x417b4a
  417b5d:	and    eax,esp
  417b5f:	and    eax,0x5a05f123
  417b64:	addr16 std 
  417b66:	adc    al,0xa6
  417b68:	or     al,BYTE PTR [edi]
  417b6a:	ror    bh,1
  417b6c:	aas    
  417b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b6e:	xchg   ecx,eax
  417b6f:	cmc    
  417b70:	add    al,0x8e
  417b72:	pop    ecx
  417b73:	neg    DWORD PTR [ecx]
  417b75:	mov    esp,0xec8df9fe
  417b7a:	aas    
  417b7b:	dec    ebx
  417b7c:	test   al,0x71
  417b7e:	iret   
  417b7f:	test   eax,0x4c4f2b08
  417b84:	cmp    DWORD PTR [ebx+ecx*2],0xb27c819a
  417b8b:	adc    ecx,DWORD PTR [ecx]
  417b8d:	scas   al,BYTE PTR es:[edi]
  417b8e:	jno    0x417b35
  417b90:	pop    edx
  417b91:	sub    DWORD PTR ds:0x6900d604,edi
  417b97:	or     edx,DWORD PTR [esp+edx*4-0x783943b3]
  417b9e:	pop    edi
  417b9f:	xchg   esp,eax
  417ba0:	or     BYTE PTR [edx+ecx*1-0x19cc351a],dl
  417ba7:	aam    0x69
  417ba9:	cmpxchg8b QWORD PTR [ecx+0x406c5b6a]
  417bb0:	std    
  417bb1:	pop    esi
  417bb2:	sub    ebx,DWORD PTR [edi+0x4b]
  417bb5:	adc    DWORD PTR [eax+0x6703717a],0xab58fbdb
  417bbf:	inc    ecx
  417bc0:	inc    ebp
  417bc1:	adc    al,0x6e
  417bc3:	cmp    al,0x7c
  417bc5:	ins    DWORD PTR es:[edi],dx
  417bc6:	push   esp
  417bc7:	fld    st(3)
  417bc9:	pusha  
  417bca:	shl    BYTE PTR [edx+ecx*4-0x76],0x5d
  417bcf:	or     esp,edi
  417bd1:	inc    DWORD PTR [ebp-0x35]
  417bd4:	clc    
  417bd5:	pop    eax
  417bd6:	xchg   edi,eax
  417bd7:	cmp    DWORD PTR [eax+0x417a02c8],esi
  417bdd:	cld    
  417bde:	fidivr DWORD PTR ds:0xd2a40245
  417be4:	dec    esp
  417be5:	test   eax,0x5782b549
  417bea:	dec    ebp
  417beb:	call   0x25027951
  417bf0:	xchg   DWORD PTR [esi-0x1a65c757],eax
  417bf6:	mov    edx,0x752336d3
  417bfb:	adc    esp,ebp
  417bfd:	mov    eax,0x76573867
  417c02:	jb     0x417c81
  417c04:	(bad)  
  417c06:	fisubr WORD PTR [eax-0x4f248613]
  417c0c:	and    esi,DWORD PTR [ebx+eax*1-0x3e]
  417c10:	rcl    DWORD PTR [ecx+0x6b],0x26
  417c14:	punpcklbw mm4,DWORD PTR [edx-0x3d]
  417c18:	pop    edi
  417c19:	fsubr  st(3),st
  417c1b:	pushf  
  417c1c:	loop   0x417bc8
  417c1e:	jmp    0x410e3dda
  417c23:	ds cs xchg esp,eax
  417c26:	dec    eax
  417c27:	fcmovb st,st(0)
  417c29:	mov    ebp,0x51330234
  417c2e:	mov    cl,0x14
  417c30:	push   ebx
  417c31:	jns    0x417c5b
  417c33:	ins    BYTE PTR es:[edi],dx
  417c34:	lea    edi,[edi+0x3a]
  417c37:	jg     0x417bd3
  417c39:	(bad)  
  417c3a:	call   0x7f56981c
  417c3f:	mov    cl,0x5c
  417c41:	lea    ecx,[ebp-0x5c]
  417c44:	mov    ebx,0x98427c8d
  417c49:	and    ebp,DWORD PTR [ebx]
  417c4b:	fwait
  417c4c:	mov    ebp,0x50381a1d
  417c51:	adc    BYTE PTR [eax-0x6101f046],0x83
  417c58:	cld    
  417c59:	popa   
  417c5a:	pop    esi
  417c5b:	dec    eax
  417c5c:	and    al,dl
  417c5e:	hlt    
  417c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c60:	jne    0x417c96
  417c62:	jmp    0xe93a:0x3460d33c
  417c69:	dec    esi
  417c6a:	ins    BYTE PTR es:[edi],dx
  417c6b:	cmc    
  417c6c:	daa    
  417c6d:	fnstenv [ecx+ecx*2]
  417c70:	mov    bl,cl
  417c72:	stc    
  417c73:	ret    
  417c74:	lea    esi,[esi-0x592ebb73]
  417c7a:	in     al,0xc8
  417c7c:	jno    0x417ce0
  417c7e:	jo     0x417c52
  417c80:	mov    eax,0xda71b665
  417c85:	jmp    0xdcaf6d86
  417c8a:	aas    
  417c8b:	imul   ecx,ecx,0xf209e878
  417c91:	das    
  417c92:	add    bh,BYTE PTR [ebp+0x1c]
  417c95:	xchg   esi,eax
  417c96:	mov    ah,BYTE PTR [eax+0x3e]
  417c99:	mov    eax,0x4a2337e5
  417c9e:	jne    0x417c82
  417ca0:	or     eax,0xda290bea
  417ca5:	out    dx,eax
  417ca6:	jcxz   0x417d27
  417ca9:	jl     0x417cf6
  417cab:	stos   DWORD PTR es:[edi],eax
  417cac:	aad    0xfc
  417cae:	(bad)  
  417cb0:	adc    ecx,edx
  417cb2:	repnz fbstp TBYTE PTR [eax-0x13f9541c]
  417cb9:	mov    ah,0xca
  417cbb:	hlt    
  417cbc:	clc    
  417cbd:	cmp    eax,0x282d9d7
  417cc2:	loopne 0x417c5b
  417cc4:	lock mov BYTE PTR [ecx+0x77],dl
  417cc8:	mov    ecx,0x651f3ef0
  417ccd:	jae    0x417c71
  417ccf:	dec    esp
  417cd0:	(bad)
  417cd4:	ret    0xd2b
  417cd7:	cs dec ebx
  417cd9:	outs   dx,BYTE PTR ds:[esi]
  417cda:	out    dx,eax
  417cdb:	push   es
  417cdc:	push   esp
  417cdd:	add    DWORD PTR [edi-0x2a8e86c9],esp
  417ce3:	aas    
  417ce4:	ror    DWORD PTR [eax-0x570c69f],cl
  417cea:	lea    edi,[edx+0x6434450d]
  417cf0:	mov    esi,0xefdbab24
  417cf5:	push   esi
  417cf6:	jb     0x417ce5
  417cf8:	push   esi
  417cf9:	and    ecx,DWORD PTR [ecx+0x59100687]
  417cff:	sahf   
  417d00:	dec    eax
  417d01:	fist   DWORD PTR [ebx+0x50]
  417d04:	test   DWORD PTR [edi+edx*1],eax
  417d07:	push   es
  417d08:	call   0x76e92682
  417d0d:	cmp    BYTE PTR [eax+edi*4],bh
  417d10:	mov    esi,0x967ddea1
  417d15:	imul   ebp,DWORD PTR [ecx+0x7c6028f4],0x43
  417d1c:	adc    eax,0x90634cea
  417d21:	sbb    DWORD PTR [edi+0x2858d666],edx
  417d27:	mov    ah,0x31
  417d29:	mov    dh,0x60
  417d2b:	cmc    
  417d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2d:	nop
  417d2e:	icebp  
  417d2f:	out    0x38,al
  417d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d32:	xchg   BYTE PTR [edx+0x6ce57f05],ah
  417d38:	xor    DWORD PTR [ebp+ebx*2+0x112c92c8],0xbc694a70
  417d43:	std    
  417d44:	stc    
  417d45:	out    0xcd,eax
  417d47:	out    0xd2,eax
  417d49:	jp     0x417d25
  417d4b:	icebp  
  417d4c:	dec    edx
  417d4d:	cmp    dh,BYTE PTR [ebp+0x4a45df4]
  417d53:	mov    edx,DWORD PTR [edx+0x61]
  417d56:	xlat   BYTE PTR ds:[ebx]
  417d57:	jl     0x417d10
  417d59:	inc    ecx
  417d5a:	adc    al,0x51
  417d5c:	test   eax,0xeaf3fe93
  417d61:	xchg   edx,eax
  417d62:	setb   BYTE PTR [eax]
  417d65:	fistp  QWORD PTR [eax]
  417d67:	adc    al,0x40
  417d69:	mov    DWORD PTR [edi],edx
  417d6b:	or     BYTE PTR [ecx],ah
  417d6d:	pop    eax
  417d6e:	lods   al,BYTE PTR ds:[esi]
  417d6f:	mov    bl,0x77
  417d71:	std    
  417d72:	leave  
  417d73:	push   ss
  417d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d75:	pop    es
  417d76:	ror    dl,cl
  417d78:	mov    al,ds:0xf649857b
  417d7d:	fs int3 
  417d7f:	pop    ds
  417d80:	imul   edx,DWORD PTR [edx+0x460cf8fc],0x1ab304af
  417d8a:	scas   eax,DWORD PTR es:[edi]
  417d8b:	push   ebx
  417d8c:	ja     0x417df4
  417d8e:	xor    BYTE PTR [esi+0x21e4b0eb],cl
  417d94:	mov    ebx,DWORD PTR [eax-0x6a]
  417d97:	sar    BYTE PTR [esi],0xc5
  417d9a:	adc    eax,0xfdb39235
  417d9f:	inc    esp
  417da0:	mov    esi,0x679c1048
  417da5:	dec    esp
  417da6:	xor    al,0x3
  417da8:	lock mov gs,WORD PTR [edi+0x7b]
  417dac:	xor    ebx,DWORD PTR [edx+0x20716a0a]
  417db2:	push   ss
  417db3:	ret    0xce0a
  417db6:	repz xlat BYTE PTR ds:[ebx]
  417db8:	xor    DWORD PTR [esi-0x53],ebp
  417dbb:	leave  
  417dbc:	or     al,0x97
  417dbe:	ss enter 0x9780,0x8c
  417dc3:	mov    cl,0x2
  417dc5:	enter  0xdec1,0x44
  417dc9:	jnp    0x417de8
  417dcb:	loop   0x417d82
  417dcd:	pop    ds
  417dce:	dec    esp
  417dcf:	mov    cl,0x6f
  417dd1:	loop   0x417e52
  417dd3:	add    DWORD PTR [eax-0x1e],ecx
  417dd6:	pop    ss
  417dd7:	fiadd  WORD PTR [esi+0x3e]
  417dda:	js     0x417e18
  417ddc:	std    
  417ddd:	jl     0x417d8c
  417ddf:	sub    eax,0x81fa069d
  417de4:	xor    ebp,DWORD PTR [ebx]
  417de6:	in     eax,dx
  417de7:	xchg   esi,eax
  417de8:	idiv   BYTE PTR [esi+0x52]
  417deb:	and    edx,ebx
  417ded:	cmp    dh,BYTE PTR [ecx]
  417def:	sub    BYTE PTR [edi+0x5c742d7e],ah
  417df5:	jne    0x417e5b
  417df7:	jbe    0x417e41
  417df9:	int    0xff
  417dfb:	mov    ss,WORD PTR [edi+0x55272da7]
  417e01:	xchg   ebx,eax
  417e02:	daa    
  417e03:	ins    DWORD PTR es:[edi],dx
  417e04:	scas   eax,DWORD PTR es:[edi]
  417e05:	sub    ch,0x6b
  417e08:	xor    eax,0xf02a1a26
  417e0d:	pop    es
  417e0e:	ins    BYTE PTR es:[edi],dx
  417e0f:	inc    ebp
  417e10:	pop    ss
  417e11:	cdq    
  417e12:	popf   
  417e13:	fwait
  417e14:	shl    eax,1
  417e16:	xor    al,0x7c
  417e18:	mov    ebp,0xd841afbe
  417e1d:	pop    ecx
  417e1e:	sub    bl,bl
  417e20:	mov    dl,0xbf
  417e22:	cwde   
  417e23:	dec    esi
  417e24:	fisttp WORD PTR [esi+edx*4]
  417e27:	jne    0x417e9f
  417e29:	jae    0x417dad
  417e2b:	out    dx,eax
  417e2c:	and    BYTE PTR [edi-0x9],al
  417e2f:	fisubr WORD PTR [eax-0x58]
  417e32:	(bad)  
  417e33:	mov    edx,0x303d079f
  417e38:	jb     0x417dd7
  417e3a:	rcr    BYTE PTR ds:0x4b78ccb4,0x3b
  417e41:	out    0xae,eax
  417e43:	fs in  al,0x41
  417e46:	mov    dl,0x5b
  417e48:	push   esi
  417e49:	sbb    edi,esp
  417e4b:	sbb    al,0x1f
  417e4d:	ror    DWORD PTR [esi+0x3a],0xe4
  417e51:	fistp  WORD PTR [esi]
  417e53:	jmp    0x13113ace
  417e58:	fild   WORD PTR [esi+0x2e]
  417e5b:	lods   eax,DWORD PTR ds:[esi]
  417e5c:	loop   0x417e52
  417e5e:	imul   ebx,DWORD PTR ds:0xb43323b9,0xb19267b4
  417e68:	push   ds
  417e69:	xchg   edx,eax
  417e6a:	popa   
  417e6b:	fisub  DWORD PTR [esp+ebx*4+0x3495a354]
  417e72:	test   eax,0x41d789dc
  417e77:	xlat   BYTE PTR ds:[ebx]
  417e78:	ins    DWORD PTR es:[edi],dx
  417e79:	push   ds
  417e7a:	les    esp,FWORD PTR [edi-0x37762ab8]
  417e80:	fisttp DWORD PTR [edi]
  417e82:	mov    dh,0x71
  417e84:	add    eax,0x6cc4fb3c
  417e89:	jg     0x417e68
  417e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e8c:	pop    eax
  417e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e8e:	dec    edi
  417e8f:	int    0x64
  417e91:	adc    al,0x12
  417e93:	jnp    0x417e51
  417e95:	cmp    cl,BYTE PTR [edx+0x25]
  417e98:	cld    
  417e99:	xlat   BYTE PTR ds:[ebx]
  417e9a:	jge    0x417e43
  417e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e9d:	sahf   
  417e9e:	stos   DWORD PTR es:[edi],eax
  417e9f:	imul   eax,DWORD PTR [edx+0x4f],0x67378581
  417ea6:	lock lahf 
  417ea8:	push   ebp
  417ea9:	in     al,0xb1
  417eab:	lods   al,BYTE PTR ds:[esi]
  417eac:	mov    BYTE PTR [eax-0x2b0c5818],al
  417eb2:	cwde   
  417eb3:	lods   al,BYTE PTR ds:[esi]
  417eb4:	adc    DWORD PTR [esi],esp
  417eb6:	lahf   
  417eb7:	pop    edi
  417eb8:	xchg   edi,edx
  417eba:	push   0x63
  417ebc:	xor    cl,bl
  417ebe:	push   0xffffffee
  417ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec1:	or     ecx,DWORD PTR [ecx+0x5f]
  417ec4:	sub    eax,0x5c48f7e
  417ec9:	fadd   st(7),st
  417ecb:	ins    DWORD PTR es:[edi],dx
  417ecc:	push   eax
  417ecd:	scas   al,BYTE PTR es:[edi]
  417ece:	mov    dh,BYTE PTR [ecx-0x308847ec]
  417ed4:	pop    es
  417ed5:	jae    0x417f3d
  417ed7:	sbb    dl,bh
  417ed9:	add    bl,cl
  417edb:	push   esi
  417edc:	in     eax,0xcf
  417ede:	pop    esi
  417edf:	inc    edi
  417ee0:	xchg   DWORD PTR [ebx],esp
  417ee2:	aad    0xbf
  417ee4:	push   esi
  417ee5:	mov    ds:0xd47a6d2e,eax
  417eea:	cmp    BYTE PTR [edi+esi*4],ch
  417eed:	mov    ds:0x554886ac,al
  417ef2:	dec    esp
  417ef3:	stc    
  417ef4:	loop   0x417f6f
  417ef6:	sbb    BYTE PTR ds:0xb6f9bd6,0xb8
  417efd:	xchg   esp,eax
  417efe:	adc    ebx,DWORD PTR [edi-0x7]
  417f01:	retf   
  417f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f03:	adc    ecx,DWORD PTR gs:[esi-0x12d6bf5]
  417f0a:	ds stos DWORD PTR es:[edi],eax
  417f0c:	lds    esi,FWORD PTR [eax+0x5abb38e9]
  417f12:	xor    cl,BYTE PTR ds:[esp+esi*2]
  417f16:	pmaxub mm2,QWORD PTR [edi-0x4e96826a]
  417f1d:	jnp    0x417ed6
  417f1f:	(bad)  
  417f20:	xor    eax,0x74587af1
  417f25:	adc    eax,0xa126fa1c
  417f2a:	fcmovu st,st(0)
  417f2c:	push   esi
  417f2d:	and    DWORD PTR [edi+0x7b860733],esi
  417f33:	mov    esp,gs
  417f35:	dec    ebx
  417f36:	cmp    eax,0x6c690192
  417f3b:	jmp    0x417f85
  417f3d:	inc    esp
  417f3e:	mov    ds:0x94da18a3,al
  417f43:	push   ds
  417f44:	or     ecx,DWORD PTR [ecx]
  417f46:	dec    ecx
  417f47:	push   ebp
  417f48:	xor    al,al
  417f4a:	or     al,0xee
  417f4c:	stc    
  417f4d:	mov    ah,0xdb
  417f4f:	add    ch,BYTE PTR [edi]
  417f51:	sub    BYTE PTR [ecx-0x7c6c36f9],dh
  417f57:	hlt    
  417f58:	loop   0x417fd5
  417f5a:	or     ecx,DWORD PTR [edi]
  417f5c:	mov    ebx,0x90a5d341
  417f61:	jbe    0x417f25
  417f63:	stos   BYTE PTR es:[edi],al
  417f64:	scas   eax,DWORD PTR es:[edi]
  417f65:	lods   al,BYTE PTR ds:[esi]
  417f66:	pop    edx
  417f67:	dec    esi
  417f68:	dec    esi
  417f69:	imul   ebp,DWORD PTR fs:[edx-0x3db11e82],0xffffffe2
  417f71:	dec    edx
  417f72:	ret    0x8848
  417f75:	adc    DWORD PTR [eax+0x3c],ebx
  417f78:	inc    ebp
  417f79:	cld    
  417f7a:	mov    dl,0x3a
  417f7c:	sbb    esi,DWORD PTR [esi-0x69]
  417f7f:	mov    edi,0x57d214ee
  417f84:	call   0x1431:0x75e38839
  417f8b:	out    dx,al
  417f8c:	sbb    eax,0x51422644
  417f91:	pop    ecx
  417f92:	mov    BYTE PTR [ebx+esi*2-0x2baeb479],ch
  417f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f9a:	adc    BYTE PTR ds:0xa911a0fb,0xd
  417fa1:	mov    cl,BYTE PTR [eax]
  417fa3:	(bad)  
  417fa4:	cmp    eax,edx
  417fa6:	rcl    DWORD PTR [ebx],1
  417fa8:	ror    ch,0xc7
  417fab:	fist   WORD PTR [ecx-0x2c]
  417fae:	jg     0x417f8e
  417fb0:	pusha  
  417fb1:	pop    esi
  417fb2:	mov    edx,0xf17b3ad8
  417fb7:	or     DWORD PTR [edi],ecx
  417fb9:	xor    esp,esp
  417fbb:	push   0x5ad1f449
  417fc0:	es mov dl,0xdc
  417fc3:	in     eax,dx
  417fc4:	mov    ebx,0xaf2bdd64
  417fc9:	push   esi
  417fca:	sbb    BYTE PTR [esi+0x65df83fa],cl
  417fd0:	lock xchg edi,eax
  417fd2:	jp     0x417fa9
  417fd4:	popa   
  417fd5:	xchg   ecx,eax
  417fd6:	mov    ah,0xd4
  417fd8:	aaa    
  417fd9:	lods   al,BYTE PTR ds:[esi]
  417fda:	(bad)  
  417fdb:	sub    DWORD PTR [ecx+0x33],edi
  417fde:	xchg   ebp,eax
  417fdf:	hlt    
  417fe0:	dec    ebx
  417fe1:	int    0x27
  417fe3:	push   es
  417fe4:	push   ecx
  417fe5:	lahf   
  417fe6:	ret    
  417fe7:	imul   ebp,DWORD PTR [ebx*8+0xf45028c],0x24dd61fd
  417ff2:	call   DWORD PTR [ebx]
  417ff4:	xor    al,0xda
  417ff6:	cmp    esp,DWORD PTR [eax+eiz*1+0xf]
  417ffa:	adc    eax,0x4de3f110
  417fff:	sub    ecx,eax
  418001:	mov    ds:0xc7d3d35f,eax
  418006:	dec    ebp
  418007:	mov    cl,0xaa
  418009:	je     0x417fb8
  41800b:	test   eax,0x4cac46fe
  418010:	sbb    esi,ebx
  418012:	or     BYTE PTR [ebx+eax*8+0x2baab480],ch
  418019:	cmp    DWORD PTR [esi],0x57b31f61
  41801f:	mov    eax,0x95595d65
  418024:	loopne 0x418027
  418026:	mov    ds:0xe063528c,al
  41802b:	mov    ah,0x2
  41802d:	pop    ds
  41802e:	sbb    eax,0x43c42a73
  418033:	mov    ah,0xf3
  418035:	js     0x41807e
  418037:	jmp    0x88c6dfb2
  41803c:	bsf    edx,ebx
  41803f:	pop    esp
  418040:	and    al,0x7e
  418042:	mov    eax,ds:0xfc50b5da
  418047:	sub    esi,ecx
  418049:	adc    eax,0x26e56fe8
  41804e:	xchg   ecx,eax
  41804f:	sti    
  418050:	lea    esp,[ebp+0x4f7d5bad]
  418056:	lock mov ch,0x62
  418059:	jo     0x417fe0
  41805b:	push   eax
  41805c:	adc    DWORD PTR [ebx-0x553a1723],ebx
  418062:	adc    BYTE PTR [ebx-0x62e6f82f],bl
  418068:	pop    esi
  418069:	jae    0x418068
  41806b:	test   al,0xe4
  41806d:	pop    ds
  41806e:	mov    cl,dh
  418070:	add    edi,esp
  418072:	test   eax,0xfe6cbd4c
  418077:	inc    edi
  418078:	mov    ecx,0xe2e49360
  41807d:	jbe    0x4180e5
  41807f:	ret    
  418080:	popa   
  418081:	cmp    ecx,DWORD PTR [ecx-0xf]
  418084:	mov    esp,0xad2ead45
  418089:	add    al,0x16
  41808b:	cmc    
  41808c:	sub    DWORD PTR [eax-0x48],edi
  41808f:	jmp    0x95a72407
  418094:	dec    ebp
  418095:	sub    eax,0x6245b60a
  41809a:	repz (bad) 
  41809c:	in     al,dx
  41809d:	and    esp,DWORD PTR cs:[eax]
  4180a0:	xchg   edi,eax
  4180a1:	sti    
  4180a2:	lea    edi,[esi]
  4180a4:	or     BYTE PTR [ecx-0x1f],dh
  4180a7:	xchg   ecx,eax
  4180a8:	outs   dx,BYTE PTR ds:[esi]
  4180a9:	jp     0x41811f
  4180ab:	rcr    ebp,0x37
  4180ae:	in     al,dx
  4180af:	aas    
  4180b0:	in     al,0x84
  4180b2:	cmp    al,0x6a
  4180b4:	and    ebp,DWORD PTR [edi]
  4180b6:	and    DWORD PTR [edx+0x2b326513],0xfffffffe
  4180bd:	mov    ch,0x16
  4180bf:	in     eax,0x13
  4180c1:	inc    ebx
  4180c2:	or     esp,DWORD PTR [edx-0x7]
  4180c5:	add    ah,BYTE PTR [esi]
  4180c7:	pop    esp
  4180c8:	shr    BYTE PTR [eax],cl
  4180ca:	jnp    0x4180e9
  4180cc:	adc    ah,BYTE PTR [ebp-0x2383a1bf]
  4180d2:	ret    0xaa8b
  4180d5:	test   esp,0xbc25fe75
  4180db:	sub    eax,0xf99f2595
  4180e0:	push   edi
  4180e1:	sub    al,0x11
  4180e3:	dec    esp
  4180e4:	les    esi,FWORD PTR [edi]
  4180e6:	div    dh
  4180e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e9:	jmp    0x418115
  4180eb:	montmul (bad)
  4180ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180ed:	sbb    BYTE PTR ds:0xb3e05d7a,0x37
  4180f4:	outs   dx,DWORD PTR ds:[esi]
  4180f5:	mov    esi,0xd62ab480
  4180fa:	jnp    0x4180c4
  4180fc:	int3   
  4180fd:	adc    al,0x41
  4180ff:	pop    esi
  418100:	dec    esi
  418101:	or     BYTE PTR [esp+eax*2],bl
  418104:	jo     0x4180be
  418106:	jmp    0x418131
  418108:	jle    0x418181
  41810a:	mul    al
  41810c:	mov    ah,0x32
  41810e:	stc    
  41810f:	std    
  418110:	call   FWORD PTR [eax-0x6e0d0df0]
  418116:	pop    ds
  418117:	out    dx,al
  418118:	jl     0x4180dd
  41811a:	int3   
  41811b:	in     eax,0x8b
  41811d:	es aad 0x27
  418120:	inc    ecx
  418121:	cmp    eax,DWORD PTR [edx-0x28]
  418124:	cmp    dl,BYTE PTR [ecx+0x3a]
  418127:	mov    edi,0xb39e9da8
  41812c:	test   eax,0xa0b8c9fd
  418131:	mov    ebx,0x3dd56e5b
  418136:	mov    esi,0xcc77210
  41813b:	sbb    al,0x86
  41813d:	pop    edi
  41813e:	retf   
  41813f:	mov    ecx,0x5edc0b68
  418144:	out    dx,al
  418145:	dec    edi
  418146:	add    BYTE PTR [esp+ecx*4+0x72368cc7],bh
  41814d:	sub    al,0xfc
  41814f:	hlt    
  418150:	je     0x4180da
  418152:	dec    esp
  418153:	outs   dx,DWORD PTR ds:[esi]
  418154:	pop    esi
  418155:	push   ebp
  418156:	fist   DWORD PTR [ebp+0x381c670e]
  41815c:	test   DWORD PTR [esi],ebx
  41815e:	lock cld 
  418160:	inc    ecx
  418161:	mov    dl,0x81
  418163:	aas    
  418164:	mov    ds:0xd677e7ef,eax
  418169:	ja     0x4181e7
  41816b:	clc    
  41816c:	test   eax,0x1e43b1c9
  418171:	and    BYTE PTR cs:[esi],cl
  418174:	add    DWORD PTR [ebx-0x7e8c5185],ebx
  41817a:	popa   
  41817b:	lods   eax,DWORD PTR ds:[esi]
  41817c:	popf   
  41817d:	jl     0x4181c3
  41817f:	push   ds
  418180:	test   BYTE PTR [eax-0x6231d8fe],0x61
  418187:	xchg   ecx,eax
  418188:	bound  ecx,QWORD PTR [ebp+0x6]
  41818b:	sbb    bh,BYTE PTR [ebx]
  41818d:	aad    0x9d
  41818f:	fcmovb st,st(7)
  418191:	xlat   BYTE PTR ds:[ebx]
  418192:	sub    ecx,DWORD PTR [ebp+0x5e]
  418195:	rol    DWORD PTR [di],cl
  418198:	xor    ch,dh
  41819a:	jge    0x4181c4
  41819c:	aad    0x71
  41819e:	retf   0xa432
  4181a1:	dec    edx
  4181a2:	push   esp
  4181a3:	or     al,0x35
  4181a5:	dec    eax
  4181a6:	test   al,0xc0
  4181a8:	retf   0x3ffd
  4181ab:	stc    
  4181ac:	jbe    0x418183
  4181ae:	arpl   WORD PTR [edi-0x1e],di
  4181b1:	add    dh,BYTE PTR [ebx+0x66]
  4181b4:	or     dh,ch
  4181b6:	xor    eax,0xcbc4ea0e
  4181bb:	adc    DWORD PTR [esi],edx
  4181bd:	jmp    0x41821e
  4181bf:	adc    eax,0x68317041
  4181c4:	push   eax
  4181c5:	enter  0x611c,0xdd
  4181c9:	in     al,0x9f
  4181cb:	jmp    0x41817d
  4181cd:	adc    bh,BYTE PTR [edx]
  4181cf:	popa   
  4181d0:	xor    WORD PTR [esi+0x1c87d6d1],sp
  4181d7:	or     DWORD PTR [edi-0x54afa3ae],0x5a2a8769
  4181e1:	cmp    ebp,DWORD PTR [ebp-0x1c]
  4181e4:	xor    eax,0xec49426f
  4181e9:	sub    ah,BYTE PTR [edi+0xa]
  4181ec:	mov    bh,0xa4
  4181ee:	icebp  
  4181ef:	push   ecx
  4181f0:	stc    
  4181f1:	mov    esp,?
  4181f3:	inc    esi
  4181f4:	push   cs
  4181f5:	rcl    DWORD PTR [edx],0xc2
  4181f8:	lea    ecx,[ecx]
  4181fa:	xchg   edi,eax
  4181fb:	mov    bh,0x9c
  4181fd:	aaa    
  4181fe:	jmp    0xbcea:0x1fceeb2b
  418205:	ror    DWORD PTR [ecx],0xd0
  418208:	ja     0x4181ff
  41820a:	jbe    0x4181cd
  41820c:	jns    0x41825a
  41820e:	cmp    esi,DWORD PTR ss:0x19468308
  418215:	mov    ds,esi
  418217:	cmp    DWORD PTR [edi],edi
  418219:	mov    bl,0x45
  41821b:	dec    eax
  41821c:	pop    esi
  41821d:	shl    BYTE PTR [esi-0xbeebb5d],1
  418223:	sub    DWORD PTR [eax-0x3627c28f],0xf530c062
  41822d:	lea    eax,[ebx-0x4a5738ec]
  418233:	xor    DWORD PTR [ebx],ecx
  418235:	jmp    0xc8e7f5fb
  41823a:	mov    WORD PTR [esi+0x76a5d5df],fs
  418240:	ds jg  0x4181c4
  418243:	in     eax,0xd6
  418245:	lea    esi,[esi-0x43]
  418248:	cmp    BYTE PTR [ecx],ch
  41824a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41824b:	test   al,0xe6
  41824d:	jns    0x4181e3
  41824f:	xor    al,0x49
  418251:	cli    
  418252:	add    eax,0xb5f558ae
  418257:	inc    edi
  418258:	sbb    eax,esi
  41825a:	(bad)  
  41825b:	sbb    al,0x87
  41825d:	std    
  41825e:	and    ah,BYTE PTR [eax+0x44a12a55]
  418264:	mov    ebp,0xd4194074
  418269:	inc    esp
  41826a:	ds jp  0x418212
  41826d:	dec    ecx
  41826e:	call   0x5775c387
  418273:	mov    ecx,0x48b266ce
  418278:	mov    cl,0xf3
  41827a:	sub    DWORD PTR ds:0x7eb5728c,edi
  418280:	call   0xdea4924d
  418285:	pop    ecx
  418286:	adc    BYTE PTR [ebp+0x788a529],cl
  41828c:	or     al,0xde
  41828e:	adc    eax,0x418a3d0c
  418293:	push   ebp
  418294:	add    al,0xa5
  418296:	aad    0x8d
  418298:	mov    cs,WORD PTR [ecx+esi*1+0x1d]
  41829c:	pop    es
  41829d:	pop    ebx
  41829e:	jmp    DWORD PTR [edi-0x3bed0b6d]
  4182a4:	aaa    
  4182a5:	mul    ch
  4182a7:	inc    edx
  4182a8:	lds    edi,FWORD PTR [edx-0x4e3f9891]
  4182ae:	adc    BYTE PTR [ebx+0x98a7d07],bl
  4182b4:	call   0x779236c0
  4182b9:	adc    BYTE PTR [esi-0x35c29e60],al
  4182bf:	(bad)  
  4182c1:	lods   al,BYTE PTR ds:[esi]
  4182c2:	mov    eax,0xb85a774
  4182c7:	dec    edi
  4182c8:	adc    BYTE PTR [edx],dl
  4182ca:	ret    
  4182cb:	pop    ds
  4182cc:	dec    BYTE PTR [eax-0x34c1e254]
  4182d2:	jns    0x41827c
  4182d4:	cmovo  esi,DWORD PTR [esi]
  4182d7:	fsub   DWORD PTR [bp+si]
  4182da:	js     0x41827c
  4182dc:	mov    cl,0xe4
  4182de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182df:	test   BYTE PTR [ebx+0x59],al
  4182e2:	in     al,dx
  4182e3:	adc    DWORD PTR ds:0x66fc4517,0xffffff8c
  4182ea:	neg    BYTE PTR [ebp-0x15]
  4182ed:	adc    eax,0xa97031d
  4182f2:	xchg   ebx,eax
  4182f3:	mov    ebp,0x4dff9f26
  4182f8:	into   
  4182f9:	pop    ecx
  4182fa:	enter  0xb22a,0xf8
  4182fe:	aas    
  4182ff:	inc    eax
  418300:	lea    ecx,[esi+edx*8-0xbe1d5e6]
  418307:	adc    bl,BYTE PTR [esi-0x47]
  41830a:	outs   dx,BYTE PTR ds:[esi]
  41830b:	cmc    
  41830c:	(bad)  
  41830d:	sar    dl,0x66
  418310:	int    0x4b
  418312:	std    
  418313:	mov    al,0xff
  418315:	cs jb  0x4182cb
  418318:	and    al,0x2c
  41831a:	leave  
  41831b:	icebp  
  41831c:	(bad)  
  41831d:	lods   eax,DWORD PTR ds:[esi]
  41831e:	stos   DWORD PTR es:[edi],eax
  41831f:	inc    edi
  418320:	into   
  418321:	mov    ch,0x9
  418323:	inc    ebx
  418324:	pop    ecx
  418325:	adc    ch,BYTE PTR [ebx+0x1e53d8a5]
  41832b:	adc    eax,0x434c6a79
  418330:	mov    al,ds:0x47eca3b1
  418335:	jnp    0x4183a7
  418337:	popf   
  418338:	push   0xffffffd3
  41833a:	mov    BYTE PTR [ebx],bl
  41833c:	dec    ebx
  41833d:	add    bh,BYTE PTR ds:0xa02c1ad
  418343:	call   0xc6ef12f4
  418348:	les    ecx,FWORD PTR [edx]
  41834a:	les    dx,DWORD PTR ds:0x500a8677
  418351:	jmp    0xd724:0x50a2182b
  418358:	frstor [eax-0x4b3dd8af]
  41835e:	and    ebx,ebp
  418360:	lea    edx,[ebp+0x29]
  418363:	shl    dl,cl
  418365:	xchg   ebp,eax
  418366:	mov    esp,0xdbf80fee
  41836b:	mov    edi,0x868f3859
  418370:	ret    0x8b56
  418373:	mov    ch,0xd7
  418375:	cwde   
  418376:	int    0x19
  418378:	stos   BYTE PTR es:[edi],al
  418379:	sub    al,0x74
  41837b:	sbb    bh,BYTE PTR [ebx]
  41837d:	lods   eax,DWORD PTR ds:[esi]
  41837e:	loop   0x41836b
  418380:	dec    ebp
  418381:	int3   
  418382:	loop   0x418389
  418384:	(bad)  
  418385:	fiadd  DWORD PTR [esi]
  418387:	cmp    dl,dl
  418389:	mov    ebx,0x5cdb021b
  41838e:	loope  0x4183de
  418390:	mov    al,ds:0x92e96389
  418395:	das    
  418396:	pop    ebp
  418397:	fstp   DWORD PTR [ecx+0x16]
  41839a:	mov    edi,DWORD PTR [edi-0x3a]
  41839d:	mov    ds:0xef8d2cf9,eax
  4183a2:	lock fld DWORD PTR [ecx]
  4183a5:	fld    DWORD PTR ds:0xef99b309
  4183ab:	bound  edx,QWORD PTR [eax+0x455e718e]
  4183b1:	loopne 0x41838a
  4183b3:	pop    esp
  4183b4:	nop
  4183b5:	xor    DWORD PTR [edi+ebx*8],0x8ba7be18
  4183bc:	iret   
  4183bd:	pop    edx
  4183be:	xor    al,0xe0
  4183c0:	jmp    0xadb261ca
  4183c5:	repnz xchg edx,eax
  4183c7:	fnclex 
  4183c9:	lods   eax,DWORD PTR ds:[esi]
  4183ca:	and    DWORD PTR [esi-0x4fe86870],edx
  4183d0:	outs   dx,BYTE PTR ds:[esi]
  4183d1:	xchg   BYTE PTR [ebx-0x7690a55d],bl
  4183d7:	enter  0xee39,0xc6
  4183db:	into   
  4183dc:	(bad)  
  4183dd:	mov    ds:0x724d8444,al
  4183e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183e3:	inc    eax
  4183e4:	stc    
  4183e5:	call   0xd931:0x7c554d74
  4183ec:	adc    DWORD PTR ds:0x48da3630,eax
  4183f2:	sub    ebx,esp
  4183f4:	xchg   ebp,eax
  4183f5:	imul   ebp,DWORD PTR [edi+0x77b1abe9],0xb793a825
  4183ff:	mov    edi,0x635b743c
  418404:	or     ecx,DWORD PTR [ebx-0x76fc334c]
  41840a:	into   
  41840b:	mov    ecx,0xb6284009
  418410:	mov    al,0xce
  418412:	sbb    DWORD PTR [ebx],ebx
  418414:	or     DWORD PTR [ecx-0x23620953],edx
  41841a:	sub    eax,0x286a6539
  41841f:	jmp    0x418422
  418421:	inc    edx
  418422:	and    esp,0x5d
  418425:	js     0x41846d
  418427:	adc    DWORD PTR gs:[ecx-0x2333af0a],edi
  41842e:	add    ecx,DWORD PTR [ebp+0x5]
  418431:	add    bl,BYTE PTR [ebx]
  418433:	push   esp
  418434:	mov    ah,0x34
  418436:	call   0xb90a:0x882e2ae5
  41843d:	pop    ebx
  41843e:	push   ss
  41843f:	loop   0x418424
  418441:	jp     0x418474
  418443:	nop
  418444:	jecxz  0x4184af
  418446:	sub    ah,BYTE PTR [edi+0x11]
  418449:	add    DWORD PTR [edx-0x77],eax
  41844c:	mov    ds:0x400c05d6,eax
  418451:	nop
  418452:	shl    DWORD PTR [edi-0x4dba0c86],0xc1
  418459:	imul   ecx,edi,0xf1f30a10
  41845f:	dec    ebx
  418460:	outs   dx,DWORD PTR ds:[esi]
  418461:	retf   
  418462:	loope  0x41846f
  418464:	sub    BYTE PTR [ebx+edi*4],cl
  418467:	jl     0x418435
  418469:	mov    esi,0x5b639a78
  41846e:	test   ecx,esi
  418470:	out    dx,al
  418471:	jns    0x418489
  418473:	inc    esp
  418474:	popf   
  418475:	lds    ebp,FWORD PTR [esp+esi*2+0x47]
  418479:	xchg   ebx,eax
  41847a:	push   eax
  41847b:	test   eax,0xa400e9ad
  418480:	pop    ds
  418481:	lock out dx,eax
  418483:	sub    BYTE PTR [ebx*2+0x40d20559],dh
  41848a:	jmp    0x418451
  41848c:	sub    ch,BYTE PTR [ebx+esi*4]
  41848f:	cmp    DWORD PTR [esi],edi
  418491:	push   ebp
  418492:	into   
  418493:	cwde   
  418494:	xchg   ecx,eax
  418495:	test   BYTE PTR ds:0xef5b855b,ah
  41849b:	bound  eax,QWORD PTR [bx+si+0x2d]
  41849f:	push   ebp
  4184a0:	in     eax,0x1a
  4184a2:	(bad)  
  4184a3:	ins    BYTE PTR es:[edi],dx
  4184a4:	jo     0x4184e1
  4184a6:	in     al,0x20
  4184a8:	rcr    DWORD PTR [ebx],cl
  4184aa:	popf   
  4184ab:	cmc    
  4184ac:	xor    BYTE PTR [edi-0x5b001129],0x1d
  4184b3:	mov    eax,ds:0x99338a6c
  4184b8:	(bad)
  4184bc:	(bad)  
  4184bd:	ja     0x418529
  4184bf:	jbe    0x41847a
  4184c1:	and    eax,0x2bf2e9b7
  4184c6:	push   esp
  4184c7:	das    
  4184c8:	push   cs
  4184c9:	jmp    0xfb8e9ae6
  4184ce:	dec    esi
  4184cf:	mov    ecx,ebp
  4184d1:	jge    0x418503
  4184d3:	in     al,0x7a
  4184d5:	cmp    DWORD PTR [ebx],edi
  4184d7:	test   eax,0xaae1d347
  4184dc:	fs pop esi
  4184de:	push   ecx
  4184df:	cdq    
  4184e0:	sbb    bl,BYTE PTR [ebp+0x769d3299]
  4184e6:	fsub   st(5),st
  4184e8:	mov    WORD PTR [ecx+0x78],ds
  4184eb:	adc    eax,0x52c4b742
  4184f0:	sub    ah,BYTE PTR [edi-0x78]
  4184f3:	adc    eax,0x325a2553
  4184f8:	out    dx,al
  4184f9:	or     eax,DWORD PTR [eax]
  4184fb:	in     al,dx
  4184fc:	outs   dx,DWORD PTR ds:[esi]
  4184fd:	es pop ebp
  4184ff:	cmp    al,0x26
  418501:	sbb    eax,0x44b5b871
  418506:	aam    0x69
  418508:	lods   eax,DWORD PTR ds:[esi]
  418509:	(bad)  
  41850a:	and    BYTE PTR [esi+ebp*8],dh
  41850d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41850f:	xchg   edi,eax
  418510:	cmp    BYTE PTR [edi-0x6f],dl
  418513:	in     al,0x31
  418515:	or     BYTE PTR [esi],0x1
  418518:	loope  0x4184d2
  41851a:	jecxz  0x418508
  41851c:	test   DWORD PTR [eax+0x1a84a9fb],esi
  418522:	int3   
  418523:	mov    ebp,0x5da55bbc
  418528:	ds pop eax
  41852a:	je     0x4184af
  41852c:	repz push edx
  41852e:	jb     0x418508
  418530:	and    al,0x7e
  418532:	jb     0x41855d
  418534:	call   0x1ac9a8bc
  418539:	dec    ecx
  41853a:	test   eax,0xc488ccdb
  41853f:	mov    edx,0x52641c9e
  418544:	(bad)  
  418545:	pop    edx
  418546:	in     eax,0x42
  418548:	adc    eax,DWORD PTR [edx+0x6]
  41854b:	loop   0x4185ad
  41854d:	pop    DWORD PTR [esi-0x2b7852e8]
  418553:	outs   dx,DWORD PTR ds:[esi]
  418554:	retf   0x3ea
  418557:	and    ebp,DWORD PTR [edi]
  418559:	sti    
  41855a:	sub    ah,BYTE PTR es:[edx+0x29]
  41855e:	lock adc DWORD PTR [eax+0x16b7cce0],eax
  418565:	push   ecx
  418566:	xor    ah,al
  418568:	and    edi,DWORD PTR [ecx-0x68]
  41856b:	fimul  WORD PTR [esi-0x7d]
  41856e:	out    dx,eax
  41856f:	jo     0x4184f8
  418571:	mov    ds:0x1ff3bf22,eax
  418576:	add    edi,ebp
  418578:	sub    eax,0x730a78f0
  41857d:	mov    ds:0x85f652d,eax
  418582:	lods   al,BYTE PTR ds:[esi]
  418583:	mov    DWORD PTR [ebp+0x3a],0xc7ee2c81
  41858a:	ficomp DWORD PTR [eax-0x585de920]
  418590:	jmp    0x40e290d0
  418595:	adc    dh,BYTE PTR [edx+eax*4+0x11]
  418599:	mov    ebx,0xfa3dd272
  41859e:	jmp    0x41853f
  4185a0:	pop    ebp
  4185a1:	jge    0x418608
  4185a3:	(bad)  
  4185a4:	push   0x8441c0f9
  4185a9:	sub    al,0x84
  4185ab:	jle    0x4185e8
  4185ad:	rol    eax,cl
  4185af:	out    dx,eax
  4185b0:	das    
  4185b1:	inc    edx
  4185b2:	lods   al,BYTE PTR ss:[esi]
  4185b4:	jae    0x418608
  4185b6:	mov    ch,0x8f
  4185b8:	fild   WORD PTR [edx+edx*4+0x24db5efc]
  4185bf:	test   eax,0xc10c6d8a
  4185c4:	pop    esi
  4185c5:	jno    0x418577
  4185c7:	jmp    0x7acd2748
  4185cc:	aad    0x2b
  4185ce:	or     ah,BYTE PTR [esi+0x3a80c9ef]
  4185d4:	ret    0x4885
  4185d7:	sbb    ebx,ebp
  4185d9:	jnp    0x418562
  4185db:	ja     0x418605
  4185dd:	inc    esi
  4185de:	sbb    al,0x26
  4185e0:	jmp    0xb083be74
  4185e5:	test   DWORD PTR [eax-0x26],ebp
  4185e8:	sub    ah,BYTE PTR ds:0x4c7a7699
  4185ee:	jnp    0x4185fa
  4185f0:	mov    edi,0xcd755fd3
  4185f5:	or     DWORD PTR [ebp+esi*4+0x27],esp
  4185f9:	mov    ds,ebp
  4185fb:	mov    ah,0x1f
  4185fd:	test   DWORD PTR [ebx+ebx*1+0x31],edi
  418601:	inc    ebx
  418602:	cwde   
  418603:	cmp    esp,DWORD PTR [eax]
  418605:	popa   
  418606:	sbb    dl,ah
  418608:	scas   eax,DWORD PTR es:[edi]
  418609:	jg     0x41863a
  41860b:	test   BYTE PTR [ebp+0x60],0x0
  41860f:	pop    ebx
  418610:	fdiv   QWORD PTR [ebx]
  418612:	mov    dh,0x12
  418614:	jo     0x4185e0
  418616:	xchg   ebp,esi
  418618:	add    BYTE PTR [edx-0x739fb632],al
  41861e:	jmp    0x41860d
  418620:	pop    ebx
  418621:	add    esi,DWORD PTR [ebx-0x1565a200]
  418627:	ins    BYTE PTR es:[edi],dx
  418628:	cmp    BYTE PTR es:[edx+eax*4-0xb820edd],cl
  418630:	stos   BYTE PTR es:[edi],al
  418631:	jecxz  0x41862f
  418633:	adc    al,0x68
  418635:	xor    al,0x77
  418637:	push   ebx
  418638:	ret    
  418639:	mov    al,ds:0xdc12a187
  41863e:	loope  0x41869b
  418640:	push   0xffffffd2
  418642:	push   eax
  418643:	pop    ds
  418644:	cmc    
  418645:	sbb    dl,BYTE PTR [ebx-0x623f6116]
  41864b:	jle    0x41869b
  41864d:	pushf  
  41864e:	push   ss
  41864f:	mov    bh,0x8f
  418651:	adc    al,0xdf
  418653:	out    dx,eax
  418654:	stos   DWORD PTR es:[edi],eax
  418655:	jne    0x418675
  418657:	xchg   ebx,eax
  418658:	sub    bh,BYTE PTR [esi-0x64]
  41865b:	and    DWORD PTR [esi],edi
  41865d:	or     DWORD PTR [edx+0x5a],edx
  418660:	mov    edx,0xf2aa553a
  418665:	pop    esi
  418666:	idiv   DWORD PTR [edx+0x22cb20ef]
  41866c:	push   edi
  41866d:	mov    DWORD PTR [eax+ebp*2+0x3a],edx
  418671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418672:	fld    QWORD PTR fs:[edx]
  418675:	jl     0x4186ef
  418677:	adc    DWORD PTR [ebx-0x3a],0x23a9722
  41867e:	add    DWORD PTR [esi],esi
  418680:	jb     0x4186e6
  418682:	inc    esp
  418683:	push   ds
  418684:	in     al,0x72
  418686:	js     0x418671
  418688:	(bad)  
  418689:	mov    al,ds:0x489ee4f9
  41868e:	jb     0x41862c
  418690:	jnp    0x4186bd
  418692:	shl    dh,cl
  418694:	jno    0x418651
  418696:	mov    cl,0xc2
  418698:	ds mov ch,0x1e
  41869b:	mov    dh,0x14
  41869d:	adc    DWORD PTR [ebp+0x520eb16f],ecx
  4186a3:	pop    es
  4186a4:	aas    
  4186a5:	jne    0x418687
  4186a7:	sti    
  4186a8:	retf   0xddea
  4186ab:	outs   dx,BYTE PTR ds:[esi]
  4186ac:	into   
  4186ad:	inc    esp
  4186ae:	int3   
  4186af:	cs scas eax,DWORD PTR es:[edi]
  4186b1:	adc    al,0x50
  4186b3:	dec    esp
  4186b4:	jnp    0x4186fa
  4186b6:	daa    
  4186b7:	repnz fisttp QWORD PTR [ecx-0x366220a9]
  4186be:	inc    esp
  4186bf:	lds    esp,FWORD PTR [edx-0x6c]
  4186c2:	mov    edx,eax
  4186c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186c5:	pop    esp
  4186c6:	dec    ebx
  4186c7:	dec    esp
  4186c8:	test   BYTE PTR [edi+0x7161db19],al
  4186ce:	mov    ds:0xdb71965d,eax
  4186d3:	repz imul ebp,DWORD PTR [edi],0x12
  4186d7:	enter  0x406d,0xbf
  4186db:	push   es
  4186dc:	inc    edi
  4186dd:	mov    dl,0xfa
  4186df:	pop    es
  4186e0:	pushf  
  4186e1:	lahf   
  4186e2:	dec    ecx
  4186e3:	add    bl,dl
  4186e5:	mov    al,0x40
  4186e7:	inc    esi
  4186e8:	int3   
  4186e9:	daa    
  4186ea:	xchg   edi,eax
  4186eb:	jns    0x4186f0
  4186ed:	cmp    dl,BYTE PTR [edi+0x219f0324]
  4186f3:	outs   dx,BYTE PTR ds:[esi]
  4186f4:	push   cs
  4186f5:	mov    DWORD PTR [esi],ebx
  4186f7:	xchg   al,dh
  4186f9:	stc    
  4186fa:	repz aaa 
  4186fc:	pop    ecx
  4186fd:	xchg   esp,eax
  4186fe:	aad    0xfd
  418700:	xlat   BYTE PTR ds:[ebx]
  418701:	outs   dx,DWORD PTR ds:[esi]
  418702:	mov    esp,0xd80d76ee
  418707:	jno    0x41875c
  418709:	ss lahf 
  41870b:	(bad)  
  41870c:	out    dx,al
  41870d:	dec    ebp
  41870e:	cli    
  41870f:	cmp    al,0xbb
  418711:	mov    edx,0xc8ff9c94
  418716:	out    0xca,eax
  418718:	xchg   BYTE PTR [ebx+0x4059e522],al
  41871e:	repz dec edi
  418720:	sbb    al,dl
  418722:	(bad)  
  418724:	jbe    0x418739
  418726:	adc    DWORD PTR [edi+0x76a987cc],esi
  41872c:	inc    esi
  41872d:	xor    BYTE PTR [edx+0x6e2d9f07],ch
  418733:	sub    dl,BYTE PTR [ebx-0x680ce7f6]
  418739:	and    DWORD PTR [ebx+0x17],edx
  41873c:	xlat   BYTE PTR ds:[ebx]
  41873d:	(bad)  
  41873e:	sub    eax,0x6743fa4c
  418743:	xchg   bx,ax
  418745:	pop    ss
  418746:	adc    dh,0x9e
  418749:	push   eax
  41874a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41874b:	stos   DWORD PTR es:[edi],eax
  41874c:	or     eax,0x435e399
  418751:	lahf   
  418752:	xor    BYTE PTR [ebx],bl
  418754:	out    0x77,al
  418756:	mov    ecx,0x44dc84e5
  41875b:	cmp    ebx,edx
  41875d:	mov    edx,0xd74e0397
  418762:	test   eax,0x1fbf720a
  418767:	test   eax,0x8865ee1f
  41876c:	loope  0x4186f0
  41876e:	loope  0x4187cc
  418770:	cmp    BYTE PTR [esi+0xe38323a],ah
  418776:	(bad)  [edi-0x511447ba]
  41877c:	and    BYTE PTR [ecx+0x514a1326],ch
  418782:	and    edi,DWORD PTR [eiz*4-0x4db0e325]
  418789:	lock dec BYTE PTR [ebx-0x48]
  41878d:	sbb    BYTE PTR [ecx+0x68],bh
  418790:	shr    DWORD PTR ds:0xf2d592e4,0xb
  418797:	fld    DWORD PTR [edx+0x50d10521]
  41879d:	pop    edi
  41879e:	sbb    esi,DWORD PTR [ecx+edx*2-0x3946af32]
  4187a5:	xchg   esi,eax
  4187a6:	and    DWORD PTR [eax],ecx
  4187a8:	dec    edx
  4187a9:	add    DWORD PTR [ebx+0x21c47f4b],ebp
  4187af:	adc    eax,edi
  4187b1:	pop    edi
  4187b2:	lods   al,BYTE PTR ds:[esi]
  4187b3:	ret    
  4187b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187b5:	or     DWORD PTR [edx+0x50],ecx
  4187b8:	dec    ecx
  4187b9:	mov    ebx,0x2cc9e087
  4187be:	dec    esi
  4187bf:	unpckhps xmm0,XMMWORD PTR [edi]
  4187c2:	(bad)  
  4187c4:	jnp    0x418792
  4187c6:	inc    eax
  4187c7:	xor    eax,0xfb628fbe
  4187cc:	add    BYTE PTR [esi],0xef
  4187cf:	and    BYTE PTR [edx-0x9fa137c],dl
  4187d5:	xchg   edi,eax
  4187d6:	(bad)
  4187d9:	dec    ebx
  4187da:	dec    esp
  4187db:	inc    ecx
  4187dc:	adc    eax,0xe281c190
  4187e1:	push   edx
  4187e2:	test   al,0xd9
  4187e4:	inc    esp
  4187e5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e7:	test   BYTE PTR [edi-0xc],0xe7
  4187eb:	dec    eax
  4187ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187ed:	dec    esi
  4187ee:	mov    esi,0x130d13f3
  4187f3:	cmp    BYTE PTR [eax],dl
  4187f5:	jmp    0xf070:0xa530b583
  4187fc:	lahf   
  4187fd:	pop    ebx
  4187fe:	mov    dl,0xe4
  418800:	jmp    0xf4a050a4
  418805:	outs   dx,DWORD PTR ds:[esi]
  418806:	inc    ebx
  418807:	imul   esp,DWORD PTR [ebp-0x7d85150d],0xa2b30216
  418811:	jno    0x4187b9
  418813:	xchg   edi,eax
  418814:	(bad)  
  418815:	sub    DWORD PTR [edx],edi
  418817:	mov    al,ds:0xd3a17277
  41881c:	stos   BYTE PTR es:[edi],al
  41881d:	jecxz  0x4187be
  41881f:	out    dx,eax
  418820:	pop    ecx
  418821:	add    eax,0x40b6ab84
  418826:	mov    ds:0x8b837e22,al
  41882b:	inc    edi
  41882c:	dec    eax
  41882d:	lock (bad) 
  41882f:	popf   
  418830:	mov    dh,0xab
  418832:	push   0x76
  418834:	dec    esp
  418835:	std    
  418836:	sbb    BYTE PTR [edx-0x303a9a15],bl
  41883c:	pushf  
  41883d:	fcom   QWORD PTR [esi-0x2127f5d4]
  418843:	jo     0x4188b8
  418845:	fcmovbe st,st(6)
  418847:	(bad)  
  418849:	xchg   esp,eax
  41884a:	xchg   DWORD PTR [esi-0x7f],edi
  41884d:	call   0x52cecc83
  418852:	neg    BYTE PTR [ebp+ebp*2+0x4c6d16]
  418859:	in     al,0x59
  41885b:	xor    eax,0xed0dce9d
  418860:	cmp    eax,0x32cd901d
  418865:	sti    
  418866:	xchg   DWORD PTR [ebx+0x37efe9],edx
  41886c:	mov    eax,ds:0x3f0d1f3f
  418871:	sahf   
  418872:	push   ebp
  418873:	add    edx,DWORD PTR [esi]
  418875:	push   eax
  418876:	fstp   TBYTE PTR [ecx-0x43]
  418879:	mov    ah,0x25
  41887b:	lahf   
  41887c:	ror    DWORD PTR [edi],cl
  41887e:	test   eax,0x43e7db68
  418883:	aaa    
  418884:	mov    al,ds:0xfbb3f8ee
  418889:	xor    BYTE PTR [eax+0x30],0x1d
  41888d:	aad    0x94
  41888f:	and    al,0xc1
  418891:	es and cl,dl
  418894:	or     bl,BYTE PTR [esi-0x29]
  418897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418898:	add    eax,0x5d94787
  41889d:	imul   edx,DWORD PTR [ebx-0x4d],0xcb9d4f58
  4188a4:	gs push eax
  4188a6:	jne    0x41890f
  4188a8:	loop   0x4188ff
  4188aa:	dec    ebx
  4188ab:	(bad)  
  4188ac:	out    dx,al
  4188ad:	jb     0x4188df
  4188af:	jb     0x418923
  4188b1:	and    BYTE PTR [esi],ch
  4188b3:	or     al,0xe
  4188b5:	aaa    
  4188b6:	ror    BYTE PTR [ecx],0x42
  4188b9:	push   DWORD PTR [esi-0x62]
  4188bc:	fnstcw WORD PTR [ebx+ebp*1]
  4188bf:	into   
  4188c0:	xor    ah,al
  4188c2:	xor    DWORD PTR [esi],eax
  4188c4:	cmp    al,0x29
  4188c6:	inc    esp
  4188c7:	stos   DWORD PTR es:[edi],eax
  4188c8:	or     dl,BYTE PTR [esi-0xc703477]
  4188ce:	pop    es
  4188cf:	xchg   esi,eax
  4188d0:	sub    DWORD PTR [eax],0x5a6c84a8
  4188d6:	or     BYTE PTR [ebx-0x219f715f],0x71
  4188dd:	and    bh,al
  4188df:	push   ecx
  4188e0:	mov    al,ds:0xbcca22e7
  4188e5:	out    0x48,al
  4188e7:	enter  0x4615,0xd6
  4188eb:	dec    edx
  4188ec:	mov    DWORD PTR [edx],edi
  4188ee:	xchg   ebp,eax
  4188ef:	sbb    edx,DWORD PTR [esi]
  4188f1:	mov    eax,ds:0xd3dc3b1e
  4188f6:	mov    edi,0xc2b27840
  4188fb:	mov    esp,0xf960b9c3
  418900:	in     eax,0x3a
  418902:	pop    ebx
  418903:	and    ah,BYTE PTR [eax+0x4abdf459]
  418909:	inc    ecx
  41890a:	push   0xffffff99
  41890c:	icebp  
  41890d:	ror    DWORD PTR [ebp+0x10b37b6d],cl
  418913:	scas   al,BYTE PTR es:[edi]
  418914:	cmp    esi,DWORD PTR [ebx-0x73]
  418917:	ret    0xf5a2
  41891a:	arpl   bx,bx
  41891c:	loopne 0x41894c
  41891e:	scas   eax,DWORD PTR es:[edi]
  41891f:	mov    esi,0x5078643e
  418924:	xchg   edx,eax
  418925:	je     0x418915
  418927:	xchg   ebx,eax
  418928:	test   ch,al
  41892a:	(bad)  
  41892c:	aas    
  41892d:	loop   0x41896e
  41892f:	fimul  DWORD PTR [ecx-0x4]
  418932:	or     DWORD PTR [esi+0x2e01074d],esi
  418938:	in     al,0xdb
  41893a:	test   dl,bl
  41893c:	div    BYTE PTR [esp+eiz*2-0x2532e763]
  418943:	or     BYTE PTR [ebx],al
  418945:	imul   edx,edi,0x1
  418948:	mov    al,ds:0xbda5c4e6
  41894d:	popa   
  41894e:	ror    BYTE PTR [ecx+0x1a037d90],cl
  418954:	cmc    
  418955:	ja     0x4188ff
  418957:	add    eax,0xcbcbfcdf
  41895c:	ds (bad) 
  41895e:	jb     0x4189ba
  418960:	pushf  
  418961:	xor    eax,0x4dca34bb
  418966:	dec    ecx
  418967:	dec    esp
  418968:	dec    ebx
  418969:	adc    al,0xe2
  41896b:	and    al,0xc4
  41896d:	inc    ebp
  41896e:	repnz adc esp,esi
  418971:	iret   
  418972:	outs   dx,BYTE PTR ds:[esi]
  418973:	(bad)  
  418974:	call   0xdf9ce1fe
  418979:	mov    edi,esi
  41897b:	pop    ebp
  41897c:	iret   
  41897d:	pop    edi
  41897e:	test   DWORD PTR [eax-0xb],edi
  418981:	and    cl,dl
  418983:	xchg   ecx,eax
  418984:	scas   al,BYTE PTR es:[edi]
  418985:	jge    0x418997
  418987:	(bad)  
  418988:	fdivrp st(6),st
  41898a:	daa    
  41898b:	test   BYTE PTR [ebp+0x60a6fdbd],0xe2
  418992:	daa    
  418993:	mov    edx,0x493d5fe7
  418998:	or     ch,dh
  41899a:	fst    DWORD PTR [edx+0x49c46f7f]
  4189a0:	mov    esi,DWORD PTR ds:0x4fc6048
  4189a6:	dec    ecx
  4189a7:	iret   
  4189a8:	xchg   ebp,eax
  4189a9:	dec    edi
  4189aa:	xlat   BYTE PTR ds:[ebx]
  4189ab:	or     ah,BYTE PTR [edi+0x1a134fc8]
  4189b1:	outs   dx,BYTE PTR ds:[esi]
  4189b2:	adc    al,bl
  4189b4:	loopne 0x4189e8
  4189b6:	xor    dh,BYTE PTR [ecx]
  4189b8:	mov    dh,0xef
  4189ba:	xor    DWORD PTR [esi-0xf],0x63f6bc7d
  4189c1:	cmp    al,BYTE PTR [edx]
  4189c3:	mov    bh,0x32
  4189c5:	mov    ds:0x94ea40ca,al
  4189ca:	call   0xfdfe:0x7f9120a3
  4189d1:	mov    eax,gs:0x4d6e4de0
  4189d7:	inc    edi
  4189d8:	lock mov ch,BYTE PTR [eax]
  4189db:	call   0x8ba2:0x3bee754b
  4189e2:	dec    edx
  4189e3:	pusha  
  4189e4:	fwait
  4189e5:	clc    
  4189e6:	std    
  4189e7:	mov    ds:0xfd2e06f9,al
  4189ec:	ja     0x41899e
  4189ee:	and    dl,bh
  4189f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189f1:	inc    ebp
  4189f2:	dec    eax
  4189f3:	(bad)  
  4189f4:	rcr    BYTE PTR [edi+0x29e18fa2],1
  4189fa:	cdq    
  4189fb:	mov    dl,BYTE PTR [eax-0x34d2e1d2]
  418a01:	push   ss
  418a02:	add    eax,0xade7f25c
  418a07:	bound  esi,QWORD PTR [edi+0x28]
  418a0a:	xor    bh,bh
  418a0c:	fisub  WORD PTR [esi-0x389ebada]
  418a12:	lock jmp FWORD PTR [eax+0x51a105d3]
  418a19:	mov    ds:0xe233451e,eax
  418a1e:	xor    al,0xd9
  418a20:	or     dl,BYTE PTR [eax-0x80]
  418a23:	jae    0x418a17
  418a25:	xor    BYTE PTR [ebp-0x5058ad3c],al
  418a2b:	xor    BYTE PTR [eax-0x41],ch
  418a2e:	lods   al,BYTE PTR ds:[esi]
  418a2f:	pop    ecx
  418a30:	pop    ds
  418a31:	cwde   
  418a32:	mov    bh,0x54
  418a34:	mov    edx,edi
  418a36:	iret   
  418a37:	cmc    
  418a38:	or     BYTE PTR [esi+esi*4],ah
  418a3b:	loopne 0x418a4e
  418a3d:	push   ebp
  418a3e:	pusha  
  418a3f:	sbb    eax,0xa796bb82
  418a44:	fidiv  DWORD PTR [edx]
  418a46:	fisubr WORD PTR [edx-0x43]
  418a49:	lea    eax,[edi]
  418a4b:	add    al,0x8f
  418a4d:	pop    esp
  418a4e:	mov    ebx,0x3386dc3c
  418a53:	adc    edx,esi
  418a55:	pop    eax
  418a56:	ror    DWORD PTR [eax+0x4b],0xbb
  418a5a:	ret    
  418a5b:	test   eax,0x2d22e3e0
  418a60:	scas   al,BYTE PTR es:[edi]
  418a61:	ror    DWORD PTR [edi-0x67],cl
  418a64:	out    0xd0,al
  418a66:	jnp    0x4189e8
  418a68:	loope  0x418a37
  418a6a:	or     eax,0xf978abb3
  418a6f:	sbb    al,0x11
  418a71:	sbb    DWORD PTR [ebp+0x1f],esp
  418a74:	sub    al,0x62
  418a76:	mov    dh,0xdd
  418a78:	int3   
  418a79:	xor    al,0xb5
  418a7b:	jnp    0x418aeb
  418a7d:	jp     0x418a0c
  418a7f:	add    al,0xdf
  418a81:	std    
  418a82:	mov    eax,ds:0x801def28
  418a87:	clc    
  418a88:	out    dx,al
  418a89:	mov    eax,0xa4ce6f15
  418a8e:	in     al,dx
  418a8f:	mov    gs,WORD PTR [ecx-0x4b]
  418a92:	jmp    0x418afa
  418a94:	adc    DWORD PTR [edx+0x5d799948],ecx
  418a9a:	in     eax,dx
  418a9b:	jle    0x418a74
  418a9d:	or     DWORD PTR es:[ebx+ebp*2],edi
  418aa1:	xchg   ebp,eax
  418aa2:	test   BYTE PTR [ecx+ebx*4-0x74a59e79],bh
  418aa9:	add    al,0xf6
  418aab:	jle    0x418a77
  418aad:	jl     0x418b29
  418aaf:	inc    esp
  418ab0:	mov    ecx,0x7ec143aa
  418ab5:	mov    ah,0x89
  418ab7:	sub    al,0x7b
  418ab9:	mov    ebp,0x966b3975
  418abe:	mov    BYTE PTR [edi],al
  418ac0:	fst    QWORD PTR [ebx]
  418ac2:	and    edi,ebx
  418ac4:	daa    
  418ac5:	sub    esp,DWORD PTR [ebp+ecx*8-0x68]
  418ac9:	pop    ebp
  418aca:	mov    ch,0xda
  418acc:	je     0x418b22
  418ace:	pusha  
  418acf:	clc    
  418ad0:	jo     0x418b11
  418ad2:	sub    DWORD PTR [eax-0x6f1fe62b],0x415e38fc
  418adc:	xchg   esp,eax
  418add:	adc    cl,ch
  418adf:	xor    ebx,DWORD PTR [ebx-0x657990cf]
  418ae5:	jno    0x418b02
  418ae7:	push   edi
  418ae8:	and    ah,BYTE PTR [edx-0x7a]
  418aeb:	jge    0x418aa5
  418aed:	xor    DWORD PTR [ebp+0x5097f20],ebx
  418af3:	stc    
  418af4:	or     eax,0x10fe6bfa
  418af9:	pop    esi
  418afa:	jmp    DWORD PTR [esi+0x3cc9b65f]
  418b00:	xor    eax,0x369c4169
  418b05:	not    DWORD PTR [eax+0x8fe87b6]
  418b0b:	hlt    
  418b0c:	in     eax,dx
  418b0d:	shr    BYTE PTR [ebp-0x3e],cl
  418b10:	(bad)  
  418b11:	mov    eax,0x48f75358
  418b16:	pop    edi
  418b17:	or     eax,0x7f5cfe97
  418b1c:	mov    cl,0x2a
  418b1e:	add    eax,0xb0bc9d0a
  418b23:	add    al,0x22
  418b25:	test   al,0xc1
  418b27:	lock fwait
  418b29:	sti    
  418b2a:	in     eax,0x74
  418b2c:	ja     0x418b7e
  418b2e:	dec    ebp
  418b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b31:	sub    edx,DWORD PTR ds:[ecx]
  418b34:	cmp    al,0xd6
  418b36:	and    DWORD PTR [edx+0x2a9b9021],ebx
  418b3c:	jno    0x418b4f
  418b3e:	mov    eax,ds:0xc3a999ac
  418b43:	stc    
  418b44:	shl    DWORD PTR [edi-0x6e],0x85
  418b48:	push   0x63
  418b4a:	(bad)  
  418b4c:	pop    ebp
  418b4d:	push   0x3b
  418b4f:	mov    ah,0x54
  418b51:	xchg   ebp,eax
  418b52:	lahf   
  418b53:	mov    al,ds:0xf448e8f5
  418b58:	das    
  418b59:	xor    DWORD PTR [ecx-0x11beb181],ebp
  418b5f:	sar    edi,1
  418b61:	stos   BYTE PTR es:[edi],al
  418b62:	(bad)  
  418b63:	fnstsw WORD PTR [edx+0x2dfd3e7f]
  418b69:	mov    eax,0xe8cbcf33
  418b6e:	clc    
  418b6f:	xchg   esp,eax
  418b70:	mov    BYTE PTR [edi],al
  418b72:	xchg   esi,eax
  418b73:	push   esi
  418b74:	and    al,0xaf
  418b76:	retf   
  418b77:	sbb    cl,BYTE PTR [ebx+0x3bd261dd]
  418b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b7e:	and    al,0x1e
  418b80:	push   ss
  418b81:	lods   al,BYTE PTR fs:[esi]
  418b83:	(bad)  
  418b84:	sbb    BYTE PTR [ebp+0x25],bl
  418b87:	xchg   DWORD PTR [esi+0x2d],edx
  418b8a:	push   edi
  418b8b:	inc    ebp
  418b8c:	push   ebx
  418b8d:	pop    ds
  418b8e:	mov    ah,0xa0
  418b90:	ret    0x751e
  418b93:	pop    eax
  418b94:	rcl    BYTE PTR [ecx+0x7a0e0cf6],0x3b
  418b9b:	(bad)  
  418b9c:	rcl    dh,0x73
  418b9f:	jne    0x418b81
  418ba1:	hlt    
  418ba2:	in     al,0x44
  418ba4:	aaa    
  418ba5:	je     0x418c1e
  418ba7:	mov    cl,0xf3
  418ba9:	adc    al,BYTE PTR [edx-0x61547e97]
  418baf:	adc    al,0x6c
  418bb1:	xor    eax,0x2e060a25
  418bb6:	dec    edi
  418bb7:	fnstsw WORD PTR [ebx-0x1a]
  418bba:	pusha  
  418bbb:	add    BYTE PTR [eax+0x39],ah
  418bbe:	inc    ebx
  418bbf:	inc    edi
  418bc0:	stos   DWORD PTR es:[edi],eax
  418bc1:	inc    esp
  418bc2:	mov    edx,0xbe2c6fde
  418bc7:	scas   al,BYTE PTR es:[edi]
  418bc8:	stos   BYTE PTR es:[edi],al
  418bc9:	xchg   BYTE PTR [ecx+0x22d1ee5a],al
  418bcf:	les    ebx,FWORD PTR [edi]
  418bd1:	or     eax,0xfb5751d4
  418bd7:	pop    esp
  418bd8:	xlat   BYTE PTR ss:[ebx]
  418bda:	adc    eax,0xe2822b78
  418bdf:	and    eax,0xf92409f6
  418be4:	out    dx,al
  418be5:	mov    bh,0x2e
  418be7:	xor    DWORD PTR [esi-0x26],esp
  418bea:	mov    esp,0x491cc0a9
  418bef:	enter  0x69e4,0xb0
  418bf3:	push   eax
  418bf4:	inc    ecx
  418bf5:	inc    ebx
  418bf6:	mov    ds:0x98864aec,al
  418bfb:	xchg   DWORD PTR [ebp+0x362e0288],edx
  418c01:	fwait
  418c02:	enter  0x56b9,0x55
  418c06:	add    eax,DWORD PTR [edi-0xe]
  418c09:	lahf   
  418c0a:	xor    dl,BYTE PTR [esi+0x591256cd]
  418c10:	pop    ebx
  418c11:	mov    ebx,0x770f5f4b
  418c16:	xor    al,0xbd
  418c18:	pop    ebp
  418c19:	mov    edi,0x51492678
  418c1e:	lods   al,BYTE PTR ds:[esi]
  418c1f:	fld    DWORD PTR [edi-0x6219adb4]
  418c25:	lahf   
  418c26:	mov    edi,0x356f6b64
  418c2b:	imul   ebx,DWORD PTR [edx],0x60
  418c2e:	xchg   edx,eax
  418c2f:	sahf   
  418c30:	popa   
  418c31:	lock inc esp
  418c33:	ret    
  418c34:	dec    edx
  418c35:	xchg   ebp,eax
  418c36:	or     ebx,DWORD PTR [ecx+edx*1-0x7a]
  418c3a:	shl    DWORD PTR [ebp+0x3e],1
  418c3d:	adc    eax,0x2c177a52
  418c42:	mov    bl,0x5b
  418c44:	fucompp 
  418c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c47:	(bad)  
  418c48:	push   ds
  418c49:	xor    bh,BYTE PTR [edx]
  418c4b:	or     ah,BYTE PTR [ecx]
  418c4d:	mov    al,0x42
  418c4f:	pop    edx
  418c50:	es adc ch,bl
  418c53:	(bad)  
  418c54:	xor    bl,BYTE PTR ds:0xe7b59b63
  418c5a:	cmp    BYTE PTR [edi],bh
  418c5c:	jbe    0x418be9
  418c5e:	call   0x9282b81d
  418c63:	push   0xffffff93
  418c65:	sahf   
  418c66:	dec    ebx
  418c67:	arpl   WORD PTR [edx-0x3ee96e11],ax
  418c6d:	mov    ebp,0xab7286a0
  418c72:	dec    ebx
  418c73:	jbe    0x418c65
  418c75:	mov    cs,WORD PTR [edi+ebx*4]
  418c78:	int3   
  418c79:	aaa    
  418c7a:	inc    ebx
  418c7b:	mov    edx,0x55ba0e36
  418c80:	jp     0x418c33
  418c82:	pusha  
  418c83:	add    DWORD PTR [ebx-0x336afe3c],edx
  418c89:	adc    BYTE PTR [ebp-0xaf44f68],0xe9
  418c90:	and    ah,BYTE PTR [ecx+eiz*4-0x42]
  418c94:	sar    DWORD PTR [edx-0x19],1
  418c97:	mov    ds:0x81ac90e7,al
  418c9c:	test   al,0x14
  418c9e:	je     0x418ced
  418ca0:	test   DWORD PTR [ecx+0xb853408],0x56b3b5d2
  418caa:	mov    cl,0xcb
  418cac:	fmul   DWORD PTR [ebp+edi*8-0x58]
  418cb0:	(bad)  
  418cb1:	xchg   esi,eax
  418cb2:	push   ecx
  418cb3:	cmp    eax,0x2fc0606e
  418cb8:	out    0x2f,al
  418cba:	adc    cl,al
  418cbc:	inc    esi
  418cbd:	dec    esp
  418cbe:	outs   dx,DWORD PTR ds:[esi]
  418cbf:	or     ch,ch
  418cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cc2:	mov    bh,0x74
  418cc4:	out    0xaf,al
  418cc6:	loop   0x418cec
  418cc8:	push   es
  418cc9:	test   eax,0xcc078cee
  418cce:	jnp    0x418cc5
  418cd0:	sbb    eax,0x566fe999
  418cd5:	es rcr cl,0x6d
  418cd9:	ss jl  0x418cb4
  418cdc:	out    0xa4,eax
  418cde:	pop    edx
  418cdf:	lods   eax,DWORD PTR ds:[esi]
  418ce0:	inc    ebx
  418ce1:	mov    dl,BYTE PTR [eax+0x15]
  418ce4:	stos   DWORD PTR es:[edi],eax
  418ce5:	out    dx,eax
  418ce6:	pop    esi
  418ce7:	popf   
  418ce8:	push   ds
  418ce9:	push   ebx
  418cea:	outs   dx,BYTE PTR ds:[esi]
  418ceb:	test   BYTE PTR [ebx-0x2e398cc9],ah
  418cf1:	jmp    0x68ce4a9c
  418cf6:	retf   0x1a63
  418cf9:	imul   esi,DWORD PTR ds:0xe95fbcc8,0xffffff9a
  418d00:	cmp    eax,0x14a066c1
  418d05:	inc    esp
  418d06:	repz mov al,0x28
  418d09:	sbb    DWORD PTR [esi+0x360972bb],edi
  418d0f:	punpckhbw mm6,mm2
  418d12:	push   ebp
  418d13:	mov    ecx,0xef9f858a
  418d18:	adc    eax,0x2b28d878
  418d1d:	sbb    BYTE PTR [ebx+0x22],ch
  418d20:	and    DWORD PTR [ebx+0x599aedc8],edx
  418d26:	in     al,0x7e
  418d28:	imul   edi,DWORD PTR [eax+0x9],0xffffffb9
  418d2c:	push   ecx
  418d2d:	add    ebp,DWORD PTR [esi]
  418d2f:	cli    
  418d30:	fcomp  QWORD PTR [esi]
  418d32:	inc    ecx
  418d33:	dec    edi
  418d34:	ss call 0xf1497303
  418d3a:	mov    ss,WORD PTR [ebx-0x7abaa8d5]
  418d40:	inc    eax
  418d41:	int3   
  418d42:	push   edx
  418d43:	adc    eax,0x90769202
  418d48:	mov    ds:0xc9a9d51d,al
  418d4d:	or     edx,edi
  418d4f:	sub    BYTE PTR [ebp+0x44],bl
  418d52:	inc    esp
  418d53:	mov    eax,0xa5596975
  418d58:	sbb    DWORD PTR [ecx+0x27],ebx
  418d5b:	stos   BYTE PTR es:[edi],al
  418d5c:	ja     0x418dae
  418d5e:	inc    edx
  418d5f:	fwait
  418d60:	addr16 das 
  418d62:	iret   
  418d63:	or     al,0x1d
  418d65:	cwde   
  418d66:	sbb    DWORD PTR [ebx-0x20324edb],esi
  418d6c:	ins    BYTE PTR es:[edi],dx
  418d6d:	test   DWORD PTR [ebx],ecx
  418d6f:	das    
  418d70:	inc    ecx
  418d71:	mov    bh,0x42
  418d73:	mov    ebp,0xa046b93e
  418d78:	mov    ds:0xd38e93f2,al
  418d7d:	je     0x418da7
  418d7f:	sub    BYTE PTR [eax+0x45],0x64
  418d83:	pop    edx
  418d84:	std    
  418d85:	mov    esi,0xcfa734ae
  418d8a:	mov    eax,0x60f7288b
  418d8f:	jle    0x418d4a
  418d91:	dec    ebx
  418d92:	arpl   WORD PTR [edi-0x3c61ddf6],di
  418d98:	add    eax,0xc7a8cd3d
  418d9d:	std    
  418d9e:	dec    ebp
  418d9f:	xchg   edi,eax
  418da0:	xchg   ecx,eax
  418da1:	sub    al,0xf
  418da3:	shl    DWORD PTR [edx-0x1c],1
  418da6:	or     BYTE PTR [ebp+eax*4+0x64f70f5a],al
  418dad:	pop    ecx
  418dae:	call   0x43684177
  418db3:	pop    esi
  418db4:	in     al,0x89
  418db6:	outs   dx,DWORD PTR ds:[esi]
  418db7:	cmc    
  418db8:	nop
  418db9:	pushf  
  418dba:	sbb    DWORD PTR [ecx+ebp*2-0x4c],0xffffff80
  418dbf:	mov    al,0x79
  418dc1:	shl    DWORD PTR [eiz*4+0x5cbe3b60],cl
  418dc8:	or     edx,esi
  418dca:	outs   dx,DWORD PTR ds:[esi]
  418dcb:	ins    DWORD PTR es:[edi],dx
  418dcc:	call   0x64c6f81f
  418dd1:	(bad)  
  418dd2:	xchg   ebx,eax
  418dd3:	pop    edi
  418dd4:	(bad)  
  418dd5:	retf   0x2f17
  418dd8:	cmp    al,0x7f
  418dda:	rcr    DWORD PTR [edi],0xaf
  418ddd:	pusha  
  418dde:	dec    ebx
  418ddf:	cwde   
  418de0:	xchg   edx,eax
  418de1:	loop   0x418d68
  418de3:	push   es
  418de4:	xchg   ebp,eax
  418de5:	test   eax,0x64890129
  418dea:	inc    ebp
  418deb:	and    ebx,ebx
  418ded:	and    eax,0x205adabb
  418df2:	fiadd  DWORD PTR [edi]
  418df4:	adc    eax,0x3265ab2e
  418df9:	test   BYTE PTR [eax],dl
  418dfb:	or     ah,ch
  418dfd:	(bad)  
  418dfe:	cmp    al,BYTE PTR [edi-0x3afd6cfc]
  418e04:	fadd   DWORD PTR [edi+0x27]
  418e07:	cdq    
  418e08:	jmp    0x98af:0x9dedbbf8
  418e0f:	inc    edx
  418e10:	xchg   DWORD PTR [eax+0x7cde633b],ebp
  418e16:	mov    BYTE PTR [ebx-0x7e9cf9a1],0xd
  418e1d:	pop    edi
  418e1e:	add    ch,BYTE PTR [eax-0x74]
  418e21:	inc    ebx
  418e22:	xor    eax,0x51c743e1
  418e27:	in     al,0xd0
  418e29:	push   ebp
  418e2a:	out    dx,al
  418e2b:	(bad)  
  418e2c:	cmp    dh,dh
  418e2e:	and    DWORD PTR [eax+eax*1+0x73],esp
  418e32:	jnp    0x418e17
  418e34:	sbb    al,0xcb
  418e36:	sbb    eax,0x4a3b4a01
  418e3b:	shl    DWORD PTR gs:[esi-0x48],1
  418e3f:	dec    eax
  418e40:	cdq    
  418e41:	push   es
  418e42:	mov    edi,eax
  418e44:	adc    al,0x1d
  418e46:	or     DWORD PTR [eax-0x47],0xffffff82
  418e4a:	xchg   esp,eax
  418e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e4c:	xlat   BYTE PTR ds:[ebx]
  418e4d:	jo     0x418ec0
  418e4f:	(bad)  
  418e50:	pop    ebx
  418e51:	sub    al,0x6c
  418e53:	fwait
  418e54:	ror    BYTE PTR [ebx-0xf],cl
  418e57:	inc    ebx
  418e58:	pop    esp
  418e59:	push   ds
  418e5a:	fwait
  418e5b:	cmp    DWORD PTR [edx-0x5d],0x640ae979
  418e62:	outs   dx,DWORD PTR ds:[esi]
  418e63:	ja     0x418e8e
  418e65:	add    DWORD PTR [eax],0x4920ea7c
  418e6b:	outs   dx,DWORD PTR ds:[esi]
  418e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e6d:	clc    
  418e6e:	out    0x65,eax
  418e70:	mov    ah,dh
  418e72:	add    eax,0xb8747148
  418e77:	(bad)  
  418e78:	xchg   edx,eax
  418e79:	imul   esi,DWORD PTR [esi+eax*4-0x6ffe43a],0x8
  418e81:	outs   dx,DWORD PTR ds:[esi]
  418e82:	or     cl,dh
  418e84:	jb     0x418eac
  418e86:	and    ebp,esp
  418e88:	imul   esi,ebx,0xffffff82
  418e8b:	pop    ds
  418e8c:	sub    eax,0x2cd7b5d8
  418e91:	aad    0x95
  418e93:	lahf   
  418e94:	sub    ebx,DWORD PTR [edx+0x7c73d503]
  418e9a:	jo     0x418edf
  418e9c:	ror    DWORD PTR cs:[ecx],1
  418e9f:	pop    edx
  418ea0:	test   al,0xb9
  418ea2:	inc    esi
  418ea3:	aam    0xe7
  418ea5:	mov    ds:0xea1a6ffb,eax
  418eaa:	xlat   BYTE PTR ds:[ebx]
  418eab:	dec    edi
  418eac:	jns    0x418eaa
  418eae:	pop    ds
  418eaf:	lsl    eax,di
  418eb2:	fdivr  QWORD PTR [ebp+0x4cb17360]
  418eb8:	mov    ebp,0x5c77e3fe
  418ebd:	sub    ecx,DWORD PTR [edx]
  418ebf:	adc    eax,0xa7a5a643
  418ec4:	pop    esp
  418ec5:	popf   
  418ec6:	or     edi,esp
  418ec8:	pop    ebx
  418ec9:	push   ebp
  418eca:	fsubr  QWORD PTR [ebx+0x1479f19]
  418ed0:	mov    ss,WORD PTR [ebp-0x78]
  418ed3:	aas    
  418ed4:	mov    ch,0xfe
  418ed6:	xor    DWORD PTR [esi+eiz*1+0x28],ebx
  418eda:	test   DWORD PTR [esi],eax
  418edc:	jge    0x418f21
  418ede:	gs inc ecx
  418ee0:	jmp    0x58e7:0xf0c622cd
  418ee7:	pop    esp
  418ee8:	xor    eax,0x1f529b81
  418eed:	cmp    BYTE PTR [edi+0x78],0x20
  418ef1:	adc    ebx,DWORD PTR ds:0xdc1c8d48
  418ef7:	or     eax,0xd2863e33
  418efc:	cwde   
  418efd:	retf   
  418efe:	jnp    0x418ec1
  418f00:	stc    
  418f01:	cmp    eax,0xea58f80d
  418f06:	xchg   ebp,eax
  418f07:	cld    
  418f08:	jecxz  0x418ef2
  418f0a:	mov    eax,0x21b0de56
  418f0f:	std    
  418f10:	imul   edi,DWORD PTR [edi-0x16],0x33c70b51
  418f17:	sub    BYTE PTR [ecx-0x67],al
  418f1a:	retf   0x7344
  418f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f1e:	mov    dl,cl
  418f20:	enter  0x86ba,0x23
  418f24:	or     DWORD PTR [esi],eax
  418f26:	inc    eax
  418f27:	add    BYTE PTR [ebp-0x7f],0xe8
  418f2b:	mov    eax,0x93749a10
  418f30:	xchg   edx,eax
  418f31:	jo     0x418f34
  418f33:	or     DWORD PTR [eax-0x7],ecx
  418f36:	fnop   
  418f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f39:	mov    dh,0xa9
  418f3b:	rcr    ch,0x17
  418f3e:	pop    ss
  418f3f:	sahf   
  418f40:	add    eax,edx
  418f42:	repz mov al,BYTE PTR es:0xe3495b7f
  418f4a:	pop    ecx
  418f4b:	fwait
  418f4c:	gs pop edx
  418f4e:	mov    ebp,0xe0d774cf
  418f53:	in     al,dx
  418f54:	(bad)  
  418f55:	leave  
  418f56:	dec    ebx
  418f57:	out    dx,al
  418f58:	aaa    
  418f59:	mov    ds:0x538dbc76,eax
  418f5e:	push   eax
  418f5f:	lahf   
  418f60:	xor    al,0xe4
  418f62:	js     0x418f8c
  418f64:	ins    BYTE PTR es:[edi],dx
  418f65:	xchg   ebx,eax
  418f66:	into   
  418f67:	jle    0x418fbf
  418f69:	(bad)  
  418f6a:	adc    ebp,DWORD PTR [ecx+0x182879fa]
  418f70:	std    
  418f71:	je     0x418f55
  418f73:	add    eax,0x68d5f669
  418f78:	out    dx,eax
  418f79:	mov    eax,0x6dcff59c
  418f7e:	fild   WORD PTR [si+0x7e]
  418f82:	xor    eax,ebx
  418f84:	inc    esp
  418f85:	(bad)  
  418f86:	xor    ah,BYTE PTR [esi+0x7d68f89f]
  418f8c:	int3   
  418f8d:	adc    eax,0x60fb0024
  418f92:	mov    al,ds:0xbe3661aa
  418f97:	ss int3 
  418f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f9a:	mov    WORD PTR [eax+0x6fd7cc95],?
  418fa0:	adc    eax,DWORD PTR [edi-0x6e]
  418fa3:	or     cl,dl
  418fa5:	mov    esp,DWORD PTR [ebx-0x62a6c49d]
  418fab:	xchg   ebp,eax
  418fac:	dec    esp
  418fad:	cmp    BYTE PTR [ebx+edi*4],dh
  418fb0:	cwde   
  418fb1:	and    ah,BYTE PTR [edi]
  418fb3:	into   
  418fb4:	mov    WORD PTR [ebp-0x59],?
  418fb7:	cwde   
  418fb8:	jle    0x418fe6
  418fba:	out    0x58,eax
  418fbc:	test   al,0xaa
  418fbe:	adc    bh,BYTE PTR [ebp+0x47]
  418fc1:	mov    ch,0x47
  418fc3:	cmp    al,0x9c
  418fc5:	mov    BYTE PTR [edi],bh
  418fc7:	inc    ebx
  418fc8:	loope  0x41902b
  418fca:	dec    sp
  418fcc:	leave  
  418fcd:	imul   esp,DWORD PTR [edx+eiz*2-0x2],0x50aff79f
  418fd5:	popw   ds
  418fd7:	retf   
  418fd8:	inc    esp
  418fd9:	call   0x2f76:0x79281b7c
  418fe0:	pop    ebp
  418fe1:	lods   al,BYTE PTR ds:[esi]
  418fe2:	sub    DWORD PTR [edi+0x5ac87e8e],edx
  418fe8:	in     eax,0xb7
  418fea:	or     DWORD PTR [edi+0x26],esi
  418fed:	cmp    BYTE PTR [eax-0x67],0x92
  418ff1:	sbb    ch,cl
  418ff3:	adc    edx,ecx
  418ff5:	push   edi
  418ff6:	add    dl,bl
  418ff8:	ins    DWORD PTR es:[edi],dx
  418ff9:	pop    edi
  418ffa:	popf   
  418ffb:	(bad)  
  418ffc:	iret   
  418ffd:	dec    ecx
  418ffe:	adc    bh,bh
  419000:	inc    ebx
  419001:	cli    
  419002:	(bad)  
  419003:	mov    esp,0x1f0ec0ab
  419008:	test   eax,0xc1703d48
  41900d:	xchg   ebp,eax
  41900e:	adc    BYTE PTR [bx+di-0x6222],bl
  419013:	add    bl,BYTE PTR [edx-0x6d9a1608]
  419019:	test   eax,0x3eff8dc8
  41901e:	(bad)  
  41901f:	das    
  419020:	repnz add edi,DWORD PTR [eax+esi*4]
  419024:	cmp    DWORD PTR [ebx],0xb84bf30
  41902a:	rdpmc  
  41902c:	repnz pop esi
  41902e:	iret   
  41902f:	sti    
  419030:	jno    0x419037
  419032:	sar    BYTE PTR [esi+0x61c0ca52],cl
  419038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419039:	jo     0x419046
  41903b:	(bad)  
  41903c:	into   
  41903d:	mov    ebp,0xf200b74b
  419042:	push   ds
  419043:	mov    edx,0x449c5cc4
  419048:	loope  0x419038
  41904a:	and    eax,edi
  41904c:	add    DWORD PTR [edi],edi
  41904e:	and    ch,BYTE PTR [esi-0x55]
  419051:	ror    ah,0xd7
  419054:	aad    0x39
  419056:	sti    
  419057:	into   
  419058:	add    dl,BYTE PTR [esi-0x68]
  41905b:	push   0xffffff91
  41905d:	mov    DWORD PTR [ebx+0x382ed84e],edi
  419063:	imul   edi,DWORD PTR [ebx+0x365eddd5],0x63dcf393
  41906d:	xor    eax,0xe3a29802
  419072:	cld    
  419073:	loope  0x41901d
  419075:	rcr    esp,0x25
  419078:	ja     0x4190ea
  41907a:	in     al,dx
  41907b:	dec    ebp
  41907c:	mov    al,ds:0x4464df6f
  419081:	push   cs
  419082:	out    dx,al
  419083:	arpl   WORD PTR [edx+0x6df01541],di
  419089:	call   0xa3929a7
  41908e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41908f:	adc    BYTE PTR [esi+0x7d],dl
  419092:	sub    al,0xe5
  419094:	push   edi
  419095:	dec    ebp
  419096:	or     al,0xab
  419098:	mov    edi,fs
  41909a:	and    DWORD PTR [ecx],ebp
  41909c:	std    
  41909d:	xchg   edx,eax
  41909e:	out    0xab,al
  4190a0:	xor    al,BYTE PTR [ecx+0x6b5c0754]
  4190a6:	dec    eax
  4190a7:	xchg   edi,eax
  4190a8:	out    0xe7,eax
  4190aa:	jne    0x4190fd
  4190ac:	xchg   ebp,eax
  4190ad:	test   DWORD PTR [eax],eax
  4190af:	xchg   bl,al
  4190b1:	or     eax,0xe2e65984
  4190b6:	ret    0xb252
  4190b9:	sbb    edi,esi
  4190bb:	iret   
  4190bc:	fisttp DWORD PTR [ebx-0x42]
  4190bf:	push   edi
  4190c0:	idiv   DWORD PTR [edx+0x5]
  4190c3:	dec    ebx
  4190c4:	fwait
  4190c5:	test   eax,0xb73326f5
  4190cb:	pop    esi
  4190cc:	fwait
  4190cd:	test   al,0x58
  4190cf:	cli    
  4190d0:	bound  esi,QWORD PTR [eax+0x4c]
  4190d3:	push   es
  4190d4:	mov    ah,0x67
  4190d6:	add    DWORD PTR [edx],edx
  4190d8:	out    dx,eax
  4190d9:	(bad)  
  4190da:	mov    edi,0x48b78d40
  4190df:	mov    ah,0x68
  4190e1:	push   ebx
  4190e2:	mov    eax,ds:0xd95e428a
  4190e7:	neg    BYTE PTR [eax+0x2321a045]
  4190ed:	sub    al,0xbb
  4190ef:	jmp    0x41913c
  4190f1:	dec    ecx
  4190f2:	push   esi
  4190f3:	xchg   esp,eax
  4190f4:	addps  xmm1,XMMWORD PTR [edi]
  4190f7:	xchg   ebx,eax
  4190f8:	jb     0x4190c1
  4190fa:	test   DWORD PTR [edi+0x4398b05],ebp
  419100:	out    dx,eax
  419101:	or     ecx,DWORD PTR [edi-0x59145ceb]
  419107:	xchg   ebx,eax
  419108:	mov    bl,dl
  41910a:	mov    dl,BYTE PTR [esi+0x1d4ba20b]
  419110:	es push edi
  419112:	xchg   esp,eax
  419113:	aad    0x96
  419115:	inc    esi
  419116:	popf   
  419117:	sti    
  419118:	adc    bl,al
  41911a:	in     eax,0xe2
  41911c:	and    DWORD PTR [eax-0x70],0xfffffff2
  419120:	mov    eax,0x7717c1bb
  419125:	xlat   BYTE PTR ds:[ebx]
  419126:	pop    ds
  419127:	cmp    ah,BYTE PTR [edi+0x2d5f9ab2]
  41912d:	leave  
  41912e:	mov    ebx,0xdd2652b8
  419133:	fcmovnb st,st(5)
  419135:	cdq    
  419136:	test   BYTE PTR [edi],bl
  419138:	xchg   ecx,eax
  419139:	in     eax,dx
  41913a:	jge    0x4190fc
  41913c:	(bad)  
  41913d:	out    0x9d,al
  41913f:	mov    eax,ds:0xee57f8e8
  419144:	repz test DWORD PTR [ecx],ecx
  419147:	sub    eax,0x8f5b2fb3
  41914c:	cmp    ah,BYTE PTR [eax-0x25595927]
  419152:	fstp   QWORD PTR [eax-0x73]
  419155:	mov    fs,WORD PTR [edi-0x4]
  419158:	xchg   ebx,eax
  419159:	dec    ebp
  41915a:	pusha  
  41915b:	leave  
  41915c:	cmp    eax,ecx
  41915e:	(bad)  
  41915f:	dec    edi
  419160:	adc    DWORD PTR ds:0x3f546357,esp
  419166:	mov    edx,0x37a26244
  41916b:	popa   
  41916c:	jbe    0x419112
  41916e:	fwait
  41916f:	sbb    ebx,eax
  419171:	or     al,0x3e
  419173:	sub    DWORD PTR [esi],0x8fa099f1
  419179:	jnp    0x419159
  41917b:	loop   0x419190
  41917d:	test   eax,0x6b03d384
  419182:	sti    
  419183:	ds in  eax,0x31
  419186:	mov    ds:0x4a1775c5,eax
  41918b:	mov    esi,0xa0655a9f
  419190:	inc    edi
  419191:	xchg   ebx,eax
  419192:	rol    ebp,cl
  419194:	or     eax,0x7d5b0273
  419199:	fidiv  WORD PTR gs:[ecx]
  41919c:	arpl   WORD PTR [ecx],dx
  41919e:	inc    edi
  41919f:	dec    ebp
  4191a0:	cli    
  4191a1:	and    ecx,DWORD PTR [esi+0x69dfd5d0]
  4191a7:	or     dl,BYTE PTR [edx+0x71]
  4191aa:	ins    BYTE PTR es:[edi],dx
  4191ab:	out    0x29,al
  4191ad:	push   0x50
  4191af:	bound  esp,QWORD PTR [ebp-0x5c6c5424]
  4191b5:	dec    ebx
  4191b6:	enter  0x9f91,0xa2
  4191ba:	fcom   QWORD PTR [ecx-0x2183934b]
  4191c0:	xchg   esi,eax
  4191c1:	(bad)  
  4191c2:	mov    al,0x34
  4191c4:	pop    ebx
  4191c5:	push   cs
  4191c6:	ja     0x4191c7
  4191c8:	jae    0x419169
  4191ca:	mov    ch,0x66
  4191cc:	sbb    al,0x21
  4191ce:	xor    BYTE PTR [ebx+esi*2+0x2b],cl
  4191d2:	fcomp  DWORD PTR [eax+0x54]
  4191d5:	popf   
  4191d6:	inc    ebp
  4191d7:	push   ebp
  4191d8:	pop    ebp
  4191d9:	and    al,bl
  4191db:	(bad)  
  4191dc:	pop    edx
  4191dd:	mov    edx,0xe1057a9e
  4191e3:	addr16 mov ebp,0x4c98fca
  4191e9:	rcr    BYTE PTR [ebx+0x6f8701eb],1
  4191ef:	addr16 inc edx
  4191f1:	pcmpgtw mm1,QWORD PTR [ecx+ebp*2+0x12]
  4191f6:	sub    cl,BYTE PTR [ecx]
  4191f8:	cs cdq 
  4191fa:	pop    esp
  4191fb:	xchg   BYTE PTR [eax],bl
  4191fd:	popa   
  4191fe:	mov    ds:0xaac48632,eax
  419203:	mov    ebp,edx
  419205:	mov    fs,WORD PTR [ecx+0x5efa5fdd]
  41920b:	mov    edi,0xf811ec48
  419210:	push   eax
  419211:	ret    0x477a
  419214:	mov    dh,0xf6
  419216:	mov    esi,0x33a2a2fe
  41921b:	push   0x88318779
  419220:	jb     0x4191cc
  419222:	ss cs push 0xffffffcc
  419226:	pop    esi
  419227:	pushf  
  419228:	loope  0x41924c
  41922a:	mov    ecx,0x16d756c4
  41922f:	mov    eax,0x77a15161
  419234:	(bad)  
  419235:	nop
  419236:	mov    ds:0xd6b1de52,al
  41923b:	xchg   BYTE PTR [edx-0xb],bl
  41923e:	fmul   st,st(7)
  419240:	ss inc edx
  419242:	jecxz  0x4192ac
  419244:	scas   al,BYTE PTR es:[edi]
  419245:	mov    DWORD PTR [esi-0x17874743],ecx
  41924b:	push   ecx
  41924c:	repz int3 
  41924e:	cdq    
  41924f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419250:	mov    ecx,0xf87d9ac3
  419255:	fcmovbe st,st(5)
  419257:	xchg   bl,ah
  419259:	gs push ebp
  41925b:	rcl    BYTE PTR [edx-0x5954285b],cl
  419261:	add    al,0x32
  419263:	add    DWORD PTR [ebx],edi
  419265:	int3   
  419266:	pop    esi
  419267:	loopne 0x419259
  419269:	sub    BYTE PTR [esi],0x6c
  41926c:	sbb    edi,DWORD PTR [esi-0x3ef522dc]
  419272:	fcmovnb st,st(4)
  419274:	pop    ecx
  419275:	jmp    0x8b77:0x34bcce10
  41927c:	bnd jg 0x4192e6
  41927f:	jne    0x419213
  419281:	mov    cl,0x48
  419283:	mov    esi,DWORD PTR [edx-0x25128b36]
  419289:	test   ah,cl
  41928b:	mov    esp,0x33944877
  419290:	enter  0x4d89,0x8
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0xbe
  4192cc:	sbb    ebx,eax
  4192ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192cf:	daa    
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx+0x69feea65],0xffffffa2
  4192dc:	ins    BYTE PTR es:[edi],dx
  4192dd:	or     DWORD PTR [edx],ecx
  4192df:	adc    al,0xda
  4192e1:	test   al,0xe8
  4192e3:	aas    
  4192e4:	test   BYTE PTR [eax-0x11],0xa1
  4192e8:	mov    ch,0x1b
  4192ea:	xchg   edx,eax
  4192eb:	xor    esp,DWORD PTR [ebx+0x109df9f]
  4192f1:	std    
  4192f2:	mov    bl,0xa
  4192f4:	repz repnz xchg edx,eax
  4192f7:	shl    DWORD PTR ss:[edi+0x2999a66b],1
  4192fe:	add    al,BYTE PTR [ebp-0x2f3b0d3]
  419304:	push   cs
  419305:	out    dx,al
  419306:	cmp    esi,esp
  419308:	push   eax
  419309:	mov    ebx,0x42fd258
  41930e:	jno    0x4192d2
  419310:	out    0x8d,eax
  419312:	pop    edi
  419313:	cmc    
  419314:	add    eax,0xdd1e021f
  419319:	inc    edx
  41931a:	jp     0x41929d
  41931c:	js     0x4192e2
  41931e:	mov    bl,0x62
  419320:	ins    DWORD PTR es:[edi],dx
  419321:	and    al,0xf7
  419323:	mov    eax,0x22388161
  419328:	xor    dl,ch
  41932a:	pop    esp
  41932b:	popf   
  41932c:	jnp    0x419339
  41932e:	sub    al,0x71
  419330:	mov    eax,0x21183e18
  419335:	mul    DWORD PTR [edx]
  419337:	test   eax,0x5b7968f2
  41933c:	(bad)  [ebx]
  41933e:	in     al,0x97
  419340:	push   ecx
  419341:	inc    ebp
  419342:	inc    ebx
  419343:	push   edx
  419344:	fs pop es
  419346:	ss out 0x47,eax
  419349:	and    al,0xcc
  41934b:	fs (bad) 
  41934e:	imul   esi,edx,0xffffffc4
  419351:	xchg   BYTE PTR [esi],bl
  419353:	lock xchg esi,eax
  419355:	ror    BYTE PTR [ecx],0xa6
  419358:	xchg   ecx,eax
  419359:	je     0x4192ea
  41935b:	rol    BYTE PTR [ebx],0x53
  41935e:	or     bh,BYTE PTR [bx+si]
  419361:	out    0x33,eax
  419363:	cmp    bh,BYTE PTR [ecx]
  419365:	push   ds
  419366:	icebp  
  419367:	or     edx,DWORD PTR [ecx+esi*1-0x6dfab8d2]
  41936e:	xor    BYTE PTR [ebx-0x78307645],cl
  419374:	lods   eax,DWORD PTR ds:[esi]
  419375:	cmp    dh,BYTE PTR [ebx+0x1cf6717f]
  41937b:	scas   al,BYTE PTR es:[edi]
  41937c:	jg     0x419336
  41937e:	cmc    
  41937f:	sbb    BYTE PTR [ecx-0x61d22ffd],ah
  419385:	out    dx,eax
  419386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419387:	pop    es
  419388:	fadd   st(4),st
  41938a:	ds ss and eax,0xff730553
  419391:	scas   al,BYTE PTR es:[edi]
  419392:	pop    ebp
  419393:	and    eax,0xf2b4117f
  419398:	iret   
  419399:	imul   edi,DWORD PTR [eax+0xbbfe5cf],0xffffff92
  4193a0:	out    dx,eax
  4193a1:	leave  
  4193a2:	leave  
  4193a3:	or     DWORD PTR [ebx+ebx*1-0xca56a34],edi
  4193aa:	jb     0x419393
  4193ac:	add    BYTE PTR [eax],ch
  4193ae:	or     cl,al
  4193b0:	fwait
  4193b1:	loopne 0x41937a
  4193b3:	ret    
  4193b4:	mov    al,0xa4
  4193b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b7:	sbb    DWORD PTR [esi+0x4e],0x11
  4193bb:	mov    ds:0xf525a94c,al
  4193c0:	in     al,0xd1
  4193c2:	fxch   st(5)
  4193c4:	je     0x4193fe
  4193c6:	jg     0x41937c
  4193c8:	mov    ah,0x51
  4193ca:	xchg   ebx,eax
  4193cb:	outs   dx,BYTE PTR ds:[esi]
  4193cc:	and    eax,0x49deba73
  4193d1:	fsub   DWORD PTR [esi]
  4193d3:	(bad)  [ebx-0x4759f555]
  4193d9:	jge    0x4193e3
  4193db:	cdq    
  4193dc:	xchg   edi,eax
  4193dd:	add    al,0x97
  4193df:	stc    
  4193e0:	add    esi,esp
  4193e2:	mov    ah,0xde
  4193e4:	xor    al,0xdd
  4193e6:	cmp    esi,DWORD PTR [edi+0x6d54b03d]
  4193ec:	leave  
  4193ed:	jbe    0x419389
  4193ef:	ins    BYTE PTR es:[edi],dx
  4193f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193f1:	push   ss
  4193f2:	jnp    0x41945d
  4193f4:	stc    
  4193f5:	push   eax
  4193f6:	dec    edx
  4193f7:	dec    edx
  4193f8:	imul   ecx,DWORD PTR [edi-0x4d],0xedb1fb5c
  4193ff:	pop    esp
  419400:	jecxz  0x419416
  419402:	sub    eax,0x15d1b319
  419407:	adc    edx,DWORD PTR [ebp-0x6ec77010]
  41940d:	int    0xc1
  41940f:	dec    ebp
  419410:	fwait
  419411:	mov    ds:0x9c31c3c3,eax
  419416:	xor    DWORD PTR [edx+eax*8],edi
  419419:	test   BYTE PTR [ebp-0x1a],dh
  41941c:	xlat   BYTE PTR ds:[ebx]
  41941d:	mov    al,ds:0x7fae8ee3
  419422:	add    DWORD PTR [eax+0x6dc891ee],0xffffffcc
  419429:	je     0x419412
  41942b:	xor    eax,0x4613809b
  419430:	sub    edx,DWORD PTR [ebx]
  419432:	jecxz  0x4193ed
  419434:	cmp    ebp,DWORD PTR [ecx+0x6f]
  419437:	and    eax,0xae36a642
  41943c:	das    
  41943d:	neg    BYTE PTR [ecx+ecx*1+0x26]
  419441:	(bad)  
  419442:	push   esp
  419443:	mov    ds:0xbcdb251,eax
  419448:	daa    
  419449:	shl    BYTE PTR [ecx+ebx*1],0x9a
  41944d:	add    esi,DWORD PTR [edx-0x7a31d578]
  419453:	add    ah,BYTE PTR [eax]
  419455:	or     DWORD PTR [ebx-0x69],esi
  419458:	jge    0x419460
  41945a:	pop    ebp
  41945b:	sbb    al,0x5e
  41945d:	loop   0x419449
  41945f:	adc    eax,0x8e1e6afc
  419464:	imul   ebp,esp,0x5810836d
  41946a:	jmp    0x41940b
  41946c:	mov    ebp,0xc3435a79
  419471:	cmp    BYTE PTR [edx-0xf],ch
  419474:	adc    BYTE PTR [edx-0x61c3e9cf],dl
  41947a:	in     eax,dx
  41947b:	and    DWORD PTR [edx+ecx*2+0x4572be44],ebx
  419482:	cmp    ebx,DWORD PTR [ecx-0x63f7c786]
  419488:	cld    
  419489:	nop
  41948a:	ins    BYTE PTR es:[edi],dx
  41948b:	mov    BYTE PTR [ebp+0x1f],ch
  41948e:	(bad)  
  41948f:	jmp    0x28b1:0x9a5f8344
  419496:	mov    ebp,0x7b134455
  41949b:	mov    dh,0xfd
  41949d:	enter  0x33de,0xbb
  4194a1:	sbb    DWORD PTR [ebx],eax
  4194a3:	lahf   
  4194a4:	jg     0x4194e8
  4194a6:	sti    
  4194a7:	data16 imul si,sp,0x3e37
  4194ad:	(bad)  
  4194ae:	jp     0x419442
  4194b0:	fstp   st(2)
  4194b2:	std    
  4194b3:	pusha  
  4194b4:	inc    edi
  4194b5:	aaa    
  4194b6:	test   eax,0x4ba944e0
  4194bb:	sti    
  4194bc:	push   cs
  4194bd:	inc    ebp
  4194be:	jbe    0x419536
  4194c0:	push   esp
  4194c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c2:	aaa    
  4194c3:	pop    ss
  4194c4:	fs stc 
  4194c6:	fld    DWORD PTR ds:0x5c3a1f4b
  4194cc:	lahf   
  4194cd:	call   0xb9c28c07
  4194d2:	bound  ebx,QWORD PTR [edi]
  4194d4:	cmp    ecx,ebp
  4194d6:	cdq    
  4194d7:	js     0x41948a
  4194d9:	push   cs
  4194da:	mov    eax,DWORD PTR [ebx]
  4194dc:	mov    ecx,0xcbf5e59c
  4194e1:	push   edx
  4194e2:	gs gs mov ebp,0x98ceb9ed
  4194e9:	mov    al,al
  4194eb:	cmp    al,0xff
  4194ed:	cmp    eax,0xa8b00d33
  4194f2:	inc    esi
  4194f3:	fs pop ebx
  4194f5:	mov    ebp,0xb2c7c6e0
  4194fa:	dec    ecx
  4194fb:	sar    DWORD PTR [esi+0x1943ba77],0x5
  419502:	js     0x4194e7
  419504:	adc    al,0xdf
  419506:	xor    DWORD PTR [ecx+ebp*4-0x9aa1026],ebx
  41950d:	sbb    al,0x7f
  41950f:	jle    0x419555
  419511:	pop    ds
  419512:	out    dx,eax
  419513:	add    eax,0x41f11805
  419518:	push   ecx
  419519:	js     0x419555
  41951b:	pusha  
  41951c:	jno    0x419534
  41951e:	mov    bh,cl
  419520:	mul    DWORD PTR [ebp-0x54464755]
  419526:	jbe    0x41958b
  419528:	into   
  419529:	jle    0x419568
  41952b:	(bad)  [eax]
  41952d:	sub    DWORD PTR [ebx+0x57085093],esi
  419533:	mov    ds:0x5c81d7a3,al
  419538:	into   
  419539:	mov    al,0xb9
  41953b:	les    edi,FWORD PTR [edi+edx*1]
  41953e:	das    
  41953f:	adc    eax,0xbff8db6d
  419544:	and    edx,ebp
  419546:	into   
  419547:	mov    ebx,0x16615725
  41954c:	es dec esp
  41954e:	mov    bl,0x87
  419550:	mov    dl,0xdb
  419552:	xor    DWORD PTR [esi],edx
  419554:	retf   0xf5d2
  419557:	xchg   DWORD PTR [ecx-0x57684d3c],eax
  41955d:	fimul  WORD PTR [edi+eiz*4]
  419560:	fsub   QWORD PTR [ecx]
  419562:	pop    ds
  419563:	ficomp DWORD PTR [edx-0x62]
  419566:	js     0x419598
  419568:	mov    ds:0xbef61b1b,eax
  41956d:	cli    
  41956e:	inc    ecx
  41956f:	ss mov ebp,0xa87c7cc5
  419575:	pushf  
  419576:	(bad)  
  419577:	mov    ebp,0xf81846d8
  41957c:	aas    
  41957d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41957e:	mov    esi,0x1408e4c2
  419583:	aas    
  419584:	jo     0x4195dc
  419586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419587:	shr    DWORD PTR [ecx-0x32],0xb
  41958b:	cmp    ecx,edx
  41958d:	and    bh,BYTE PTR [ebp+0x3392bbbc]
  419593:	fisub  WORD PTR [ecx+ebp*4]
  419596:	sub    DWORD PTR [ecx+0x62],edi
  419599:	lahf   
  41959a:	div    DWORD PTR [edx+eiz*8]
  41959d:	out    0x43,al
  41959f:	dec    ebp
  4195a0:	push   esp
  4195a1:	std    
  4195a2:	pop    esp
  4195a3:	ss clc 
  4195a5:	push   0x827aba72
  4195aa:	push   edi
  4195ab:	pop    ds
  4195ac:	call   DWORD PTR [edi-0x5a3071c9]
  4195b2:	cmp    eax,0xf841891b
  4195b7:	fwait
  4195b8:	jmp    0x4195b4
  4195ba:	stc    
  4195bb:	in     eax,dx
  4195bc:	cdq    
  4195bd:	or     DWORD PTR ds:0x896fe47d,0xfffffff3
  4195c4:	stos   DWORD PTR es:[edi],eax
  4195c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c6:	mov    al,0xf9
  4195c8:	inc    ebx
  4195c9:	jb     0x419581
  4195cb:	push   0xffffffbc
  4195cd:	inc    esi
  4195ce:	cwde   
  4195cf:	rol    cl,1
  4195d1:	push   eax
  4195d2:	test   BYTE PTR [ebx],ah
  4195d4:	stos   BYTE PTR es:[edi],al
  4195d5:	(bad)  
  4195d6:	cmp    BYTE PTR [edi],cl
  4195d8:	sub    DWORD PTR ss:[edi+0x67bb3014],ebp
  4195df:	add    al,0x3a
  4195e1:	test   al,0x7
  4195e3:	inc    edi
  4195e4:	jo     0x4195ea
  4195e6:	mov    edi,0xdb3c581b
  4195eb:	push   esp
  4195ec:	aaa    
  4195ed:	arpl   WORD PTR [edi+0x4ba49cc4],cx
  4195f3:	lods   eax,DWORD PTR ds:[esi]
  4195f4:	add    ebx,DWORD PTR [eax]
  4195f6:	sub    ah,BYTE PTR [ebx]
  4195f8:	mov    esi,0xb55294f5
  4195fd:	push   cs
  4195fe:	outs   dx,DWORD PTR ds:[esi]
  4195ff:	dec    ebp
  419600:	and    al,0xaa
  419602:	mov    ds:0x8c53f507,al
  419607:	mov    eax,ds:0x29d484c0
  41960c:	mov    ecx,0x130c4ba6
  419611:	pop    ds
  419612:	adc    edx,DWORD PTR [eax]
  419614:	call   0xe41:0x1313c4ed
  41961b:	(bad)  
  41961c:	dec    edx
  41961d:	pop    edi
  41961e:	lods   al,BYTE PTR ss:[esi]
  419620:	(bad)  
  419621:	sub    DWORD PTR [edx],ecx
  419623:	xlat   BYTE PTR ds:[ebx]
  419624:	sahf   
  419625:	sbb    DWORD PTR [esp+edi*4-0x124eb491],ebx
  41962c:	cmp    BYTE PTR [esi-0x51],ch
  41962f:	dec    ebp
  419630:	push   esi
  419631:	mov    DWORD PTR [eax-0x55],ecx
  419634:	scas   eax,DWORD PTR es:[edi]
  419635:	sbb    eax,0x78ba40a6
  41963a:	mov    esp,0xed5ddec
  41963f:	mov    esp,0x9d298c73
  419644:	or     DWORD PTR [esi],eax
  419646:	call   0x64c7:0x10d21f28
  41964d:	sahf   
  41964e:	ss pop esp
  419650:	jne    0x4196aa
  419652:	mov    BYTE PTR [ebx-0x1e],dh
  419655:	outs   dx,DWORD PTR ds:[esi]
  419656:	je     0x4196ae
  419658:	xchg   edi,eax
  419659:	mov    ds:0xa3c3e6c1,eax
  41965e:	lods   eax,DWORD PTR ds:[esi]
  41965f:	mov    edi,DWORD PTR [eax-0xc455acf]
  419665:	test   bl,0xfb
  419668:	call   DWORD PTR [eax]
  41966a:	mov    esp,0xcab019e4
  41966f:	cmp    ecx,ebx
  419671:	pusha  
  419672:	pop    eax
  419673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419674:	cmp    eax,0xacb85479
  419679:	push   cs
  41967a:	cwde   
  41967b:	call   0x6226:0x8ac08733
  419682:	mov    ebp,0xf56fd1d0
  419687:	in     eax,dx
  419688:	or     al,bh
  41968a:	mov    eax,0xfed2b625
  41968f:	mov    ds:0x70067c7e,al
  419694:	imul   bh
  419696:	sbb    eax,0xaa70e88c
  41969b:	inc    esi
  41969c:	xchg   edx,eax
  41969d:	add    BYTE PTR [edx-0x11a3eea6],bl
  4196a3:	fld    TBYTE PTR [eax]
  4196a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a6:	cmp    dh,BYTE PTR [eax-0x47]
  4196a9:	jbe    0x4196d0
  4196ab:	dec    eax
  4196ac:	or     DWORD PTR [esi-0x67],edx
  4196af:	dec    edx
  4196b0:	aaa    
  4196b1:	jecxz  0x41963e
  4196b3:	mov    edi,0x3f3f2817
  4196b8:	sub    ebx,esi
  4196ba:	fbld   TBYTE PTR [edx]
  4196bc:	xchg   ebp,eax
  4196bd:	xor    ebx,edi
  4196bf:	es cdq 
  4196c1:	xor    al,0x60
  4196c3:	dec    edi
  4196c4:	xlat   BYTE PTR ds:[ebx]
  4196c5:	xor    eax,0xafdf0419
  4196ca:	lahf   
  4196cb:	jg     0x4196dc
  4196cd:	mov    DWORD PTR [ebp+0x76],edi
  4196d0:	js     0x41970b
  4196d2:	pop    ss
  4196d3:	push   ecx
  4196d4:	neg    BYTE PTR [ebx-0x7dde7f1f]
  4196da:	pop    edi
  4196db:	pop    ebp
  4196dc:	das    
  4196dd:	push   esp
  4196de:	lahf   
  4196df:	push   esp
  4196e0:	and    al,0xda
  4196e2:	(bad)  
  4196e3:	xor    edx,DWORD PTR [ebx]
  4196e5:	and    eax,0xb46dabb0
  4196ea:	pop    edx
  4196eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ed:	inc    eax
  4196ee:	pop    ss
  4196ef:	sub    edi,DWORD PTR [eax+edi*1]
  4196f2:	push   edx
  4196f3:	and    al,0xbe
  4196f5:	(bad)  [ebx-0x30142274]
  4196fb:	cmp    eax,0x5326107c
  419700:	mov    ah,BYTE PTR [ebx]
  419702:	sub    ch,BYTE PTR [ebp-0x6a]
  419705:	adc    eax,edi
  419707:	adc    dl,BYTE PTR [esi+ebx*2+0x1fe37d37]
  41970e:	fsub   DWORD PTR [ebx-0x17]
  419711:	repz (bad) 
  419713:	pop    ss
  419714:	mov    eax,ds:0xa2c37bfd
  419719:	jmp    0x419703
  41971b:	call   0x8a76:0x4f842e7f
  419722:	add    al,0xba
  419724:	mov    dl,BYTE PTR [esi]
  419726:	dec    eax
  419727:	sub    edi,DWORD PTR [edi+0x68]
  41972a:	mov    esi,0xc6772209
  41972f:	pushf  
  419730:	xchg   ecx,eax
  419731:	clc    
  419732:	lods   al,BYTE PTR ds:[esi]
  419733:	cmp    BYTE PTR [edi],dl
  419735:	sub    eax,0xb5a96d7
  41973a:	fwait
  41973b:	jbe    0x41979a
  41973d:	stos   DWORD PTR es:[edi],eax
  41973e:	out    dx,al
  41973f:	js     0x4196d2
  419741:	xchg   esp,eax
  419742:	ds int3 
  419744:	pop    ebp
  419745:	pop    ebp
  419746:	cmp    eax,0x9d602571
  41974b:	enter  0x1eb8,0x17
  41974f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419750:	mov    al,ds:0xb49da433
  419755:	lahf   
  419756:	enter  0x4552,0x1c
  41975a:	dec    DWORD PTR [ebp+edi*1-0x63]
  41975e:	add    ecx,DWORD PTR [ebp-0x6b]
  419761:	test   eax,0x5367912c
  419766:	into   
  419767:	je     0x4197ad
  419769:	popf   
  41976a:	lods   al,BYTE PTR ds:[esi]
  41976b:	xor    eax,0xf122574c
  419770:	xchg   edi,eax
  419771:	iret   
  419772:	jg     0x4197c0
  419774:	fst    QWORD PTR [esi]
  419776:	mov    dl,0xa9
  419778:	fsubr  DWORD PTR [edx]
  41977a:	or     eax,0x691c4290
  41977f:	adc    BYTE PTR [ebp+edi*1-0x57],cl
  419783:	xchg   DWORD PTR [ebx],ecx
  419785:	test   eax,0x98f3a506
  41978a:	add    ch,BYTE PTR [eax]
  41978c:	pop    eax
  41978d:	dec    eax
  41978e:	push   cs
  41978f:	test   al,0x9f
  419791:	ins    DWORD PTR es:[edi],dx
  419792:	pop    ecx
  419793:	test   eax,0xc83b2f57
  419798:	aad    0x19
  41979a:	mov    edi,0x250a5ea9
  41979f:	retf   0xca3f
  4197a2:	xchg   esi,eax
  4197a3:	std    
  4197a4:	adc    BYTE PTR [eax+ebp*2],ah
  4197a7:	test   eax,0xb171a518
  4197ac:	dec    ebp
  4197ad:	sahf   
  4197ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197af:	into   
  4197b0:	aad    0x85
  4197b2:	cmp    eax,0x99dca8c3
  4197b7:	pop    ds
  4197b8:	mov    ebx,0x84366613
  4197bd:	mov    esp,0xb63e1b83
  4197c2:	push   edi
  4197c3:	int    0xc1
  4197c5:	adc    eax,0xdbf3b010
  4197ca:	mov    dh,BYTE PTR [ecx+0x7b57ade8]
  4197d0:	test   DWORD PTR [ebp+0x483edd04],edi
  4197d6:	outs   dx,DWORD PTR ds:[esi]
  4197d7:	add    BYTE PTR [ecx+0x4af103a3],bl
  4197dd:	xor    bh,ah
  4197df:	(bad)  
  4197e0:	ins    BYTE PTR es:[edi],dx
  4197e1:	gs xchg esi,eax
  4197e3:	ret    
  4197e4:	call   0xe443:0x7a10e4db
  4197eb:	shl    BYTE PTR [edi],1
  4197ed:	add    DWORD PTR [ebx+0x112c132],esi
  4197f3:	fstp   DWORD PTR [ecx]
  4197f5:	sub    BYTE PTR [ebx-0x69],bl
  4197f8:	int3   
  4197f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197fa:	into   
  4197fb:	xchg   esi,eax
  4197fc:	cmp    ebx,0xfffffff8
  4197ff:	pop    ss
  419800:	xchg   esp,eax
  419801:	add    al,0x10
  419803:	add    dh,BYTE PTR [edx+0x5c]
  419806:	xchg   eax,ebx
  419808:	or     dl,bl
  41980a:	cld    
  41980b:	push   ebp
  41980c:	cmp    BYTE PTR [edi],ah
  41980e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41980f:	fsubr  st(3),st
  419811:	test   BYTE PTR [edx+0x24f5747a],dh
  419817:	xor    al,0xc1
  419819:	fstp   QWORD PTR [ecx]
  41981b:	repz repnz push es
  41981e:	add    DWORD PTR ds:0x401cbf63,edi
  419824:	cmp    BYTE PTR [edx+0x4],dh
  419827:	or     edi,eax
  419829:	mov    cl,0x1c
  41982b:	xchg   edi,eax
  41982c:	xchg   edi,eax
  41982d:	push   eax
  41982e:	call   0x942df8c2
  419833:	cmp    dh,ch
  419835:	xchg   esi,eax
  419836:	stos   DWORD PTR es:[edi],eax
  419837:	fs test al,0x6d
  41983a:	xchg   ebx,eax
  41983b:	imul   edx,DWORD PTR [edi+edi*1+0x4e81924a],0xffffffc6
  419843:	aas    
  419844:	mov    esi,DWORD PTR [eax-0xf]
  419847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419848:	pop    esp
  419849:	jns    0x41983b
  41984b:	fimul  WORD PTR [eax+0x60]
  41984e:	add    edx,DWORD PTR [eax+0x21]
  419851:	or     esi,DWORD PTR [ecx]
  419853:	mov    esi,ecx
  419855:	popa   
  419856:	sbb    DWORD PTR [esi],ebx
  419858:	ds mov bh,0xe3
  41985b:	int3   
  41985c:	jb     0x419886
  41985e:	hlt    
  41985f:	fadd   DWORD PTR [ebx]
  419861:	es in  al,dx
  419863:	push   ecx
  419864:	int3   
  419865:	(bad)  [edx+0x8]
  419868:	xchg   ecx,edi
  41986a:	int    0xaa
  41986c:	retf   0x33d8
  41986f:	jo     0x4198af
  419871:	gs dec esi
  419873:	pop    edi
  419874:	mov    DWORD PTR [esi],edi
  419876:	mov    ds:0x193e2b19,eax
  41987b:	xor    ah,BYTE PTR [ebx]
  41987d:	mov    cl,0xdf
  41987f:	imul   DWORD PTR [ecx]
  419881:	jmp    0x567062b3
  419886:	lahf   
  419887:	shl    BYTE PTR [esi],cl
  419889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41988a:	add    bl,BYTE PTR [esp+eax*2]
  41988d:	leave  
  41988e:	test   DWORD PTR [ebp-0x4e],esp
  419891:	cmp    eax,0x7f7afbce
  419896:	mov    eax,0xa5179e8e
  41989b:	call   0x4bf2e3f1
  4198a0:	into   
  4198a1:	inc    ecx
  4198a2:	out    dx,al
  4198a3:	call   0x7c03:0xfd92b0d9
  4198aa:	clc    
  4198ab:	sub    eax,0x97a21ff8
  4198b0:	mov    al,ds:0x5e57a4a3
  4198b5:	loop   0x41988e
  4198b7:	push   eax
  4198b8:	or     DWORD PTR [ebx],edi
  4198ba:	std    
  4198bb:	mov    edx,0xa58d60c7
  4198c0:	sbb    DWORD PTR [eax],eax
  4198c2:	test   al,bh
  4198c4:	jmp    0x419912
  4198c6:	add    bl,cl
  4198c8:	ds dec edi
  4198ca:	std    
  4198cb:	sar    DWORD PTR [ecx-0x2],cl
  4198ce:	xchg   esi,eax
  4198cf:	mov    WORD PTR [edi-0x13],?
  4198d2:	mov    bh,bh
  4198d4:	sub    bh,BYTE PTR [ebp+0xf02414e]
  4198da:	mov    esi,0x50a96dc7
  4198df:	clc    
  4198e0:	pop    ds
  4198e1:	jae    0x4198e4
  4198e3:	iret   
  4198e4:	or     bl,BYTE PTR [ebp+0x36438ef3]
  4198ea:	mov    ch,0x80
  4198ec:	mov    eax,0x5c8113ef
  4198f1:	adc    DWORD PTR [edi-0x23],esi
  4198f4:	add    BYTE PTR [edi-0x7e],al
  4198f7:	(bad)  
  4198f8:	cmc    
  4198f9:	cmp    al,0x8f
  4198fb:	cwde   
  4198fc:	outs   dx,BYTE PTR ds:[esi]
  4198fd:	cmovbe edi,DWORD PTR [edi]
  419900:	xchg   ebx,eax
  419901:	ja     0x4198ac
  419903:	mov    ds:0xf2fe1763,al
  419908:	jnp    0x4198e4
  41990a:	mov    ds:0xcdb91476,eax
  41990f:	aas    
  419910:	popf   
  419911:	sbb    dl,bh
  419913:	jp     0x4198b0
  419915:	pop    esp
  419916:	xchg   DWORD PTR [ebp-0x1df2fec0],esp
  41991c:	test   DWORD PTR [eax+0x26],esp
  41991f:	push   esp
  419920:	clc    
  419921:	and    al,0x32
  419923:	bnd js 0x419998
  419926:	cdq    
  419927:	test   BYTE PTR [ebp-0x7],0x6e
  41992b:	bound  esp,QWORD PTR [ecx-0xe]
  41992e:	mov    ebp,0x399657db
  419933:	cmp    eax,0x45389aa2
  419938:	ds push di
  41993b:	mov    dl,0x5c
  41993d:	imul   ebp,DWORD PTR [edx],0xe88450c
  419943:	ficomp DWORD PTR [ecx-0x72]
  419946:	into   
  419947:	add    eax,0x2e6b92c3
  41994c:	out    dx,al
  41994d:	inc    ecx
  41994e:	ins    BYTE PTR es:[edi],dx
  41994f:	lock xchg ebp,eax
  419951:	sbb    dl,dh
  419953:	ret    0xd948
  419956:	loopne 0x41996a
  419958:	in     eax,0x51
  41995a:	add    ch,0xae
  41995d:	pop    esp
  41995e:	shl    BYTE PTR [edx+0x4f],cl
  419961:	int    0x8a
  419963:	or     al,BYTE PTR [ebx]
  419965:	out    0x77,eax
  419967:	jb     0x419940
  419969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41996a:	mov    dl,0xef
  41996c:	inc    eax
  41996d:	adc    edx,DWORD PTR [ebp+esi*2+0x5a]
  419971:	or     ebp,ecx
  419973:	and    edi,DWORD PTR [ecx+0x6a]
  419976:	fcmovnu st,st(6)
  419978:	in     eax,0x31
  41997a:	mov    esp,0xfdd627c5
  41997f:	xor    eax,0xe6125cc0
  419984:	hlt    
  419985:	cwde   
  419986:	push   cs
  419987:	inc    esi
  419988:	repnz inc edi
  41998a:	das    
  41998b:	in     al,0xea
  41998d:	inc    ebp
  41998e:	mov    bh,0xca
  419990:	adc    bl,BYTE PTR [ebp+0x2c72987e]
  419996:	mul    DWORD PTR [eax-0x4a9fdacc]
  41999c:	imul   ebp,DWORD PTR [edi],0xc6d0381
  4199a2:	mov    ah,0x18
  4199a4:	fmul   DWORD PTR [ecx-0x7d72109c]
  4199aa:	jl     0x4199db
  4199ac:	popa   
  4199ad:	ja     0x4199d9
  4199af:	push   0x2b78793c
  4199b4:	mov    ?,esp
  4199b6:	mov    ds:0x40dbbc48,al
  4199bb:	cmp    BYTE PTR [esi],0xb9
  4199be:	mov    cl,0x3d
  4199c0:	and    eax,0x5ef9ebb2
  4199c5:	in     al,0xe2
  4199c7:	fwait
  4199c8:	mov    eax,ds:0x478a20ee
  4199cd:	mov    al,ds:0x620b3c36
  4199d2:	out    dx,eax
  4199d3:	xchg   BYTE PTR [ecx+ecx*8+0x195a8f1e],cl
  4199da:	mov    ah,0x85
  4199dc:	out    dx,eax
  4199dd:	and    BYTE PTR [esi+ebx*1+0x2f1bd13f],bl
  4199e4:	jno    0x4199fd
  4199e6:	loopne 0x419984
  4199e8:	jo     0x419a22
  4199ea:	push   es
  4199eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ec:	into   
  4199ed:	lea    esi,[ebp-0x1c75e24d]
  4199f3:	push   cs
  4199f4:	jo     0x419a4e
  4199f6:	mov    bh,0xa4
  4199f8:	xchg   ecx,eax
  4199f9:	leave  
  4199fa:	push   edi
  4199fb:	add    bl,bl
  4199fd:	jns    0x4199f4
  4199ff:	pusha  
  419a00:	jmp    0x37b0:0xb0ca4f5f
  419a07:	mov    bl,0xce
  419a09:	fstp   TBYTE PTR [eax+0x1d61b482]
  419a0f:	xor    eax,0x244e1ded
  419a14:	in     al,0xc3
  419a16:	pop    ebx
  419a17:	fcomp  QWORD PTR [edi+0x2a]
  419a1a:	ins    DWORD PTR es:[edi],dx
  419a1b:	(bad)  
  419a1c:	out    dx,eax
  419a1d:	xchg   ebx,eax
  419a1e:	aad    0x82
  419a20:	ins    BYTE PTR es:[edi],dx
  419a21:	aas    
  419a22:	out    0x78,al
  419a24:	bound  esp,QWORD PTR [ebx-0x447309b1]
  419a2a:	mov    ah,BYTE PTR es:[ebx]
  419a2d:	aaa    
  419a2e:	inc    edx
  419a2f:	les    esi,FWORD PTR [esi]
  419a31:	ret    0x1a36
  419a34:	xor    DWORD PTR [ebp+0x37f87973],ebp
  419a3a:	cmp    edx,0x57661f47
  419a40:	(bad)  
  419a41:	stos   DWORD PTR es:[edi],eax
  419a42:	addr16 jae 0x419a48
  419a45:	or     esp,DWORD PTR [edx-0x34]
  419a48:	clc    
  419a49:	inc    esp
  419a4a:	add    eax,ecx
  419a4c:	aad    0x52
  419a4e:	(bad)  
  419a4f:	fadd   st,st(3)
  419a51:	sub    eax,0xdff5000
  419a56:	pop    es
  419a57:	mov    edx,0x37889ae7
  419a5c:	jo     0x419a53
  419a5e:	pop    esp
  419a5f:	cli    
  419a60:	jae    0x419a38
  419a62:	fsub   st,st(0)
  419a64:	popa   
  419a65:	stos   DWORD PTR es:[edi],eax
  419a66:	int    0x37
  419a68:	into   
  419a69:	inc    edi
  419a6a:	scas   eax,DWORD PTR es:[edi]
  419a6b:	pop    esi
  419a6c:	or     BYTE PTR [ebx+ebp*2],0xfc
  419a70:	sbb    BYTE PTR [edi+ebp*4-0x65],dh
  419a74:	fsubr  DWORD PTR [ebx]
  419a76:	xchg   ebx,eax
  419a77:	jecxz  0x419aa9
  419a79:	mov    esi,0x2b7a1cc1
  419a7e:	xor    al,0x14
  419a80:	xor    eax,DWORD PTR [edi+edi*1-0x45e77faf]
  419a87:	push   edi
  419a88:	jecxz  0x419ac2
  419a8a:	mov    ?,WORD PTR [esi+0x132ff70d]
  419a90:	js     0x419a46
  419a92:	and    eax,0x14191de7
  419a97:	mov    dh,0xea
  419a99:	jb     0x419aff
  419a9b:	mov    DWORD PTR [edx-0x239dce4c],ecx
  419aa1:	add    cl,BYTE PTR [edi+0x24]
  419aa4:	retf   
  419aa5:	push   ebx
  419aa6:	call   0x62f4eaee
  419aab:	pushf  
  419aac:	cmp    al,0x57
  419aae:	sahf   
  419aaf:	outs   dx,DWORD PTR ds:[esi]
  419ab0:	sub    BYTE PTR ds:[edi*2+0x6caaee5b],0x53
  419ab9:	add    DWORD PTR [esi],esi
  419abb:	(bad)  
  419abc:	addr16 and eax,0xac5d3230
  419ac2:	ins    DWORD PTR es:[edi],dx
  419ac3:	mov    al,ds:0xde4c2d05
  419ac8:	fs ins BYTE PTR es:[edi],dx
  419aca:	inc    ecx
  419acb:	mov    ebx,0x63cdd1d1
  419ad0:	sbb    dh,BYTE PTR ds:0x5607e36c
  419ad6:	bnd js 0x419a9c
  419ad9:	lock mov al,ds:0xbabae4a9
  419adf:	test   eax,0x366136c2
  419ae4:	sub    BYTE PTR [ecx],al
  419ae6:	jp     0x419b08
  419ae8:	sbb    ch,BYTE PTR [ebx-0x67191009]
  419aee:	call   edx
  419af0:	icebp  
  419af1:	call   0x3353718f
  419af6:	addr16 pop edi
  419af8:	adc    esi,DWORD PTR fs:0x7f7215e3
  419aff:	fst    DWORD PTR [edx+0x3e]
  419b02:	adc    al,0xd0
  419b04:	out    dx,al
  419b05:	out    0x4a,eax
  419b07:	dec    ebp
  419b08:	and    al,0x83
  419b0a:	(bad)  
  419b0b:	mov    ebp,0x8f03109f
  419b10:	arpl   WORD PTR [eax+0x78dbd709],bx
  419b16:	pusha  
  419b17:	(bad)  
  419b18:	jnp    0x419b75
  419b1a:	jne    0x419b7c
  419b1c:	pop    edx
  419b1d:	ja     0x419b72
  419b1f:	and    dh,BYTE PTR [ebx]
  419b21:	cmp    al,0xa
  419b23:	xor    eax,0xa6efa76e
  419b28:	rol    BYTE PTR [edx],cl
  419b2a:	and    dh,BYTE PTR [ebx+0x7cd76541]
  419b30:	xchg   DWORD PTR [esi-0x1b7272f4],edi
  419b36:	dec    edi
  419b37:	fdivr  QWORD PTR [ecx-0x1b]
  419b3a:	mov    ebp,ebx
  419b3c:	(bad)  [ecx-0x26]
  419b3f:	loop   0x419b28
  419b41:	cmc    
  419b42:	jle    0x419b3a
  419b44:	dec    edi
  419b45:	call   0xd645:0x9c5d7cec
  419b4c:	and    edi,ecx
  419b4e:	jo     0x419bcd
  419b50:	gs dec ebx
  419b52:	data16 js 0x419aec
  419b55:	push   ebx
  419b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b57:	and    ch,BYTE PTR [ebp-0x45c09cfd]
  419b5d:	pop    esp
  419b5e:	pop    ds
  419b5f:	std    
  419b60:	push   ebp
  419b61:	xchg   esp,eax
  419b62:	xchg   BYTE PTR [esi],cl
  419b64:	test   DWORD PTR [esi+0x44],edx
  419b67:	repz sbb BYTE PTR [ebp+edx*8-0x785d2b6f],dh
  419b6f:	add    ch,al
  419b71:	cmp    al,0x38
  419b73:	adc    eax,0x75cbf607
  419b78:	repnz sbb DWORD PTR [eax+eiz*8],eax
  419b7c:	mov    bl,0x65
  419b7e:	mov    al,ds:0x945f426f
  419b83:	mov    ds:0x7bd1cef2,eax
  419b88:	mov    al,0x4e
  419b8a:	push   es
  419b8b:	sub    al,0xca
  419b8d:	out    0x1e,eax
  419b8f:	mov    ebx,ecx
  419b91:	mov    bh,0xed
  419b93:	mov    BYTE PTR [ebx-0x44],cl
  419b96:	pop    ecx
  419b97:	push   ecx
  419b98:	mov    esp,0xcf6c0f9d
  419b9d:	aas    
  419b9e:	outs   dx,DWORD PTR ds:[esi]
  419b9f:	aam    0x96
  419ba1:	mov    ecx,0x1eb92ea0
  419ba6:	push   edx
  419ba7:	outs   dx,DWORD PTR ds:[esi]
  419ba8:	and    cl,al
  419baa:	and    eax,0x8619f637
  419baf:	inc    esp
  419bb0:	mov    cl,0x73
  419bb2:	loope  0x419ba7
  419bb4:	addr16 out dx,al
  419bb6:	xor    eax,0x5d76f937
  419bbb:	rol    DWORD PTR ds:0xc191dadd,cl
  419bc1:	(bad)  
  419bc2:	scas   eax,DWORD PTR es:[edi]
  419bc3:	mov    ch,0x9b
  419bc5:	mov    gs,WORD PTR gs:[ecx]
  419bc8:	out    0x2f,al
  419bca:	mov    edx,0x796db57b
  419bcf:	and    BYTE PTR [edx-0x4681a75e],ah
  419bd5:	mov    esi,0x387d03
  419bda:	outs   dx,DWORD PTR ds:[esi]
  419bdb:	es jecxz 0x419c38
  419bde:	mov    dh,BYTE PTR [edi-0x2d]
  419be1:	cbw    
  419be3:	inc    edx
  419be4:	push   ebp
  419be5:	fidivr DWORD PTR [eax+ecx*4-0x6c]
  419be9:	and    cl,cl
  419beb:	add    ch,BYTE PTR [ecx+ebp*8-0x13]
  419bef:	mov    ah,0x0
  419bf1:	mov    eax,?
  419bf3:	gs and al,0x77
  419bf6:	icebp  
  419bf7:	(bad)  
  419bf9:	lods   eax,DWORD PTR ds:[esi]
  419bfa:	in     eax,0xb6
  419bfc:	xchg   edi,eax
  419bfd:	rcl    al,1
  419bff:	in     eax,0xb8
  419c01:	lock dec esi
  419c03:	adc    al,0x83
  419c05:	loopne 0x419ba7
  419c07:	sub    al,0xca
  419c09:	adc    bh,0x17
  419c0c:	and    edx,DWORD PTR [eax+0x22bf6bf8]
  419c12:	lock call 0x3805:0x28f0a832
  419c1a:	sbb    dh,BYTE PTR [ebx-0x16]
  419c1d:	or     bl,dh
  419c1f:	ins    BYTE PTR es:[edi],dx
  419c20:	ja     0x419c74
  419c22:	sbb    esp,DWORD PTR [eax]
  419c24:	cmc    
  419c25:	mov    eax,0x624f57a3
  419c2a:	mov    al,ds:0xbbd87e94
  419c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c30:	(bad)  
  419c31:	fsub   DWORD PTR [eax-0x543160a]
  419c37:	shr    DWORD PTR [esi+0x7e],0xca
  419c3b:	xchg   BYTE PTR [ebp-0x127e047],al
  419c41:	cli    
  419c42:	mulps  xmm5,xmm0
  419c45:	xor    al,0x95
  419c47:	adc    ebp,0x64
  419c4a:	ins    DWORD PTR es:[edi],dx
  419c4b:	enter  0x2177,0xd8
  419c4f:	mov    ebx,0x87947835
  419c54:	gs jo  0x419be3
  419c57:	sbb    eax,0x8f7c9ba5
  419c5c:	ins    DWORD PTR es:[edi],dx
  419c5d:	or     BYTE PTR [esi+0x5c],0xd8
  419c61:	xor    esi,DWORD PTR [ebx]
  419c63:	xchg   DWORD PTR [ebx+0x6c],edx
  419c66:	fwait
  419c67:	ins    BYTE PTR es:[edi],dx
  419c68:	xor    BYTE PTR [edi+0x58],dl
  419c6b:	sub    esi,esp
  419c6d:	test   ecx,esi
  419c6f:	dec    edi
  419c70:	aad    0x22
  419c72:	dec    ebp
  419c73:	cmp    eax,0xfdeea5d8
  419c78:	mov    eax,0x6c2cfaff
  419c7d:	ror    BYTE PTR [ebx+0x19ef4a2c],0x94
  419c84:	jl     0x419c46
  419c86:	stos   BYTE PTR es:[edi],al
  419c87:	xor    edi,DWORD PTR [ebp+0x45]
  419c8a:	lds    edx,FWORD PTR [ecx+eiz*4+0x43]
  419c8e:	popf   
  419c8f:	or     esi,DWORD PTR [esp+ebx*8-0x64]
  419c93:	xor    al,BYTE PTR [esi+0x6608b805]
  419c99:	lds    ecx,FWORD PTR [ebx-0x160e60e4]
  419c9f:	xor    bh,BYTE PTR [eax-0x3c72b2d7]
  419ca5:	sahf   
  419ca6:	pop    esp
  419ca7:	test   edi,ebx
  419ca9:	(bad)  
  419caa:	test   DWORD PTR [ecx],0x1b86f335
  419cb0:	out    0x6d,eax
  419cb2:	mov    al,0xca
  419cb4:	sub    eax,0xbb068400
  419cb9:	sbb    edx,DWORD PTR [esi-0x1f8f20ad]
  419cbf:	fiadd  DWORD PTR [eax]
  419cc1:	push   edi
  419cc2:	cld    
  419cc3:	fcomp  DWORD PTR [ebx+0x73087e94]
  419cc9:	arpl   WORD PTR [ebp-0x671c30f3],di
  419ccf:	in     al,dx
  419cd0:	mov    BYTE PTR ds:0xa1d94c32,cl
  419cd6:	jmp    0x419c9a
  419cd8:	mov    edi,0x5c7f8ec3
  419cdd:	ins    DWORD PTR es:[edi],dx
  419cde:	xor    edi,DWORD PTR ds:0x8d30f8b1
  419ce4:	and    BYTE PTR [ebx],bl
  419ce6:	ficomp WORD PTR [esi]
  419ce8:	adc    dl,BYTE PTR [ebx-0x4a]
  419ceb:	imul   ebx,esp,0xf0f4b4bc
  419cf1:	push   cs
  419cf2:	jecxz  0x419c8e
  419cf4:	fs fwait
  419cf6:	addr16 jle 0x419d53
  419cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cfa:	ss loop 0x419cce
  419cfd:	fwait
  419cfe:	daa    
  419cff:	cmp    al,0x41
  419d01:	outs   dx,BYTE PTR ds:[esi]
  419d02:	xchg   esi,eax
  419d03:	pop    ecx
  419d04:	sub    BYTE PTR [esi],ah
  419d06:	add    al,BYTE PTR [esi+0x6d]
  419d09:	push   ss
  419d0a:	cmp    al,0x52
  419d0c:	js     0x419cbe
  419d0e:	jb     0x419d25
  419d10:	cld    
  419d11:	(bad)  
  419d12:	stc    
  419d13:	ins    BYTE PTR es:[edi],dx
  419d14:	mov    WORD PTR [edi],ds
  419d16:	int    0x62
  419d18:	or     al,0x92
  419d1a:	dec    ebp
  419d1b:	sub    BYTE PTR [esi],ch
  419d1d:	lds    eax,FWORD PTR [ebp-0x30c7fa20]
  419d23:	inc    edi
  419d24:	call   edi
  419d26:	ret    
  419d27:	adc    DWORD PTR [eax],ebp
  419d29:	adc    eax,0xe56f4f4e
  419d2e:	cmp    ecx,DWORD PTR [ebx+0x67723b5b]
  419d34:	add    BYTE PTR [ebp-0x33],0x9c
  419d38:	mov    al,ds:0x2135bdf5
  419d3d:	pop    edx
  419d3e:	xor    DWORD PTR [ebp+0x8e79df8],edx
  419d44:	sbb    al,0xe
  419d46:	mov    ah,0x56
  419d48:	and    al,0xc8
  419d4a:	push   esp
  419d4b:	and    al,0x83
  419d4d:	xor    dh,BYTE PTR [edx-0x57]
  419d50:	bound  ebp,QWORD PTR [esi]
  419d52:	and    ecx,DWORD PTR [ebx-0x57ba8f1e]
  419d58:	cs (bad) 
  419d5a:	pusha  
  419d5b:	test   eax,0xed670d8
  419d60:	je     0x419d9e
  419d62:	int3   
  419d63:	fmul   DWORD PTR [eax-0x1c]
  419d66:	jp     0x419d95
  419d68:	retf   0xaa0b
  419d6b:	mov    WORD PTR [edi],gs
  419d6d:	sub    al,0x5e
  419d6f:	and    BYTE PTR [edx+0x39404101],dl
  419d75:	nop
  419d76:	mov    bl,BYTE PTR ds:0xae532f9b
  419d7c:	inc    edi
  419d7d:	cld    
  419d7e:	in     al,dx
  419d7f:	cwde   
  419d80:	mov    al,0x77
  419d82:	and    BYTE PTR [ebx-0x117d110],dl
  419d88:	dec    edi
  419d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d8a:	jbe    0x419d28
  419d8c:	push   ecx
  419d8d:	xor    eax,0x73f8bd8b
  419d92:	loop   0x419d89
  419d94:	pop    ebp
  419d95:	icebp  
  419d96:	xor    DWORD PTR gs:[ebp+0x19],ebx
  419d9a:	and    ecx,DWORD PTR [edi-0x2]
  419d9d:	mov    dl,0xa4
  419d9f:	push   0xffffff8e
  419da1:	inc    esp
  419da2:	push   cs
  419da3:	ficom  DWORD PTR [esp+edi*1-0x60]
  419da7:	mov    esp,ebp
  419da9:	sub    DWORD PTR [ebp+0x3e61ccbd],0x7b
  419db0:	jmp    0x419d8e
  419db2:	nop
  419db3:	repz and DWORD PTR [edx],0xffffff9c
  419db7:	fst    QWORD PTR [esi+0x60e46bef]
  419dbd:	rdtsc  
  419dbf:	(bad)  
  419dc0:	call   0x18cdfa1c
  419dc5:	out    dx,al
  419dc6:	pop    edi
  419dc7:	in     eax,dx
  419dc8:	(bad)  
  419dc9:	addr16 mov dh,0x65
  419dcc:	mov    BYTE PTR [esi+0x19b453db],bh
  419dd2:	jle    0x419db0
  419dd4:	hlt    
  419dd5:	(bad)  
  419dd6:	into   
  419dd7:	fisub  WORD PTR [edi+0x38579998]
  419ddd:	adc    edi,DWORD PTR [esi-0x4a]
  419de0:	test   eax,0xe8c99305
  419de5:	nop
  419de6:	xchg   BYTE PTR [ebx],cl
  419de8:	xchg   esi,eax
  419de9:	outs   dx,BYTE PTR ds:[esi]
  419dea:	into   
  419deb:	inc    ebp
  419dec:	sbb    edi,DWORD PTR [esi]
  419dee:	mov    ebx,DWORD PTR [esi+0x900fe39]
  419df4:	das    
  419df5:	ds jne 0x419dfa
  419df8:	mov    dl,0x6b
  419dfa:	es pop ds
  419dfc:	mul    ch
  419dfe:	icebp  
  419dff:	mov    ecx,0x32ce9683
  419e04:	cdq    
  419e05:	cmp    DWORD PTR [eax+ebp*1],0x5d
  419e09:	xchg   BYTE PTR [edx+eiz*4],al
  419e0c:	or     al,ch
  419e0e:	inc    edi
  419e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e10:	mov    edi,0x45306405
  419e15:	sbb    ebp,0x52
  419e18:	and    BYTE PTR [edx],bh
  419e1a:	test   BYTE PTR [edx-0x24],dl
  419e1d:	fstp   TBYTE PTR [ebx+0x5d561838]
  419e23:	icebp  
  419e24:	(bad)  
  419e25:	stc    
  419e26:	sbb    BYTE PTR [eax+edx*1+0x7af1264d],al
  419e2d:	outs   dx,BYTE PTR ds:[esi]
  419e2e:	mov    dl,0x3d
  419e30:	out    0x2a,eax
  419e32:	mov    ch,0xd5
  419e34:	cmp    esp,DWORD PTR [edx+0x78]
  419e37:	out    dx,al
  419e38:	cld    
  419e39:	rcr    BYTE PTR [ebx+eax*2],1
  419e3c:	fs mov bl,0x1b
  419e3f:	add    dh,BYTE PTR [edi+edx*1+0x35]
  419e43:	adc    DWORD PTR [edi],ebx
  419e45:	and    eax,0x69d7e3c7
  419e4a:	fcomp  DWORD PTR [eax+0x47]
  419e4d:	xor    cl,al
  419e4f:	not    BYTE PTR [eax-0x3b69ceef]
  419e55:	std    
  419e56:	fdivr  DWORD PTR [edi+0x17b7de13]
  419e5c:	mov    ch,0x71
  419e5e:	(bad)  
  419e5f:	mov    ds:0x2b5ae576,al
  419e64:	or     dh,bl
  419e66:	daa    
  419e67:	jl     0x419e46
  419e69:	(bad)  
  419e6c:	jl     0x419e98
  419e6e:	test   eax,0x7e2decd6
  419e73:	mov    al,ds:0xe4000d2d
  419e78:	fadd   QWORD PTR [ebp+eiz*1+0x76645f9e]
  419e7f:	cmp    DWORD PTR [edi-0x46d24469],eax
  419e85:	das    
  419e86:	adc    dl,BYTE PTR [edx-0x7b]
  419e89:	push   ebp
  419e8a:	cmp    esp,DWORD PTR [ebx-0x4b83fdd8]
  419e90:	jbe    0x419e79
  419e92:	js     0x419e37
  419e94:	inc    esp
  419e95:	add    ebx,DWORD PTR [esi+0x53]
  419e98:	xlat   BYTE PTR ds:[ebx]
  419e99:	cld    
  419e9a:	inc    edx
  419e9b:	mov    al,0x68
  419e9d:	(bad)  
  419e9e:	xchg   ebp,eax
  419e9f:	xor    esi,ebx
  419ea1:	into   
  419ea2:	cmp    DWORD PTR [eax],esp
  419ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea5:	or     al,0x88
  419ea7:	xchg   esp,eax
  419ea8:	aaa    
  419ea9:	dec    ebp
  419eaa:	and    DWORD PTR [eax-0x16],edi
  419ead:	loop   0x419e99
  419eaf:	sub    ebp,DWORD PTR [ebp+0x1c]
  419eb2:	outs   dx,BYTE PTR ds:[esi]
  419eb3:	xchg   ecx,eax
  419eb4:	push   ebp
  419eb5:	iret   
  419eb6:	jl     0x419e71
  419eb8:	fiadd  WORD PTR [ecx-0x5235abab]
  419ebe:	inc    ebx
  419ebf:	xor    dl,al
  419ec1:	dec    eax
  419ec2:	jno    0x419ed4
  419ec4:	pop    ds
  419ec5:	push   edi
  419ec6:	scas   eax,DWORD PTR es:[edi]
  419ec7:	push   ebp
  419ec8:	retf   0xd832
  419ecb:	iret   
  419ecc:	out    dx,eax
  419ecd:	enter  0x764f,0xbd
  419ed1:	fcomi  st,st(4)
  419ed3:	pop    ebx
  419ed4:	pop    es
  419ed5:	popf   
  419ed6:	xchg   esi,eax
  419ed7:	adc    bl,BYTE PTR [eax+0x43]
  419eda:	ss xchg edi,eax
  419edc:	mov    esi,eax
  419ede:	les    edi,FWORD PTR [eax]
  419ee0:	arpl   WORD PTR [ebp+0x6e],cx
  419ee3:	jno    0x419e97
  419ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ee6:	cli    
  419ee7:	pop    ebp
  419ee8:	ss dec eax
  419eea:	mov    ds:0xdb407e26,eax
  419eef:	pop    eax
  419ef0:	xchg   esp,eax
  419ef1:	out    0x6e,al
  419ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef4:	stos   DWORD PTR es:[edi],eax
  419ef5:	stos   DWORD PTR es:[edi],eax
  419ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ef7:	fmul   DWORD PTR [ebx]
  419ef9:	jnp    0x419f5e
  419efb:	sub    al,0x5
  419efd:	inc    edx
  419efe:	enter  0x9ba1,0x38
  419f02:	mov    edx,0x849ae295
  419f07:	ins    BYTE PTR es:[edi],dx
  419f08:	or     esi,edi
  419f0a:	repz es call 0x9dbd215
  419f11:	push   edi
  419f12:	bound  edi,QWORD PTR [edx-0x1dea7cfc]
  419f18:	lahf   
  419f19:	jae    0x419f07
  419f1b:	xchg   esi,eax
  419f1c:	dec    esi
  419f1d:	idiv   BYTE PTR [ebx]
  419f1f:	pop    edi
  419f20:	or     cl,al
  419f22:	std    
  419f23:	add    eax,0xb587298d
  419f28:	ss jmp 0x419f07
  419f2b:	dec    esp
  419f2c:	jp     0x419f84
  419f2e:	add    ah,BYTE PTR [eax-0x4d834ee6]
  419f34:	test   dh,cl
  419f36:	repz cmp DWORD PTR [ecx-0x566f7e0d],ebx
  419f3d:	jmp    0x1d3af20
  419f42:	xor    DWORD PTR ds:0x23409ba3,ebp
  419f48:	test   al,0x4b
  419f4a:	gs or  eax,0x75a0aaf7
  419f50:	xor    ah,bl
  419f52:	pusha  
  419f53:	pushf  
  419f54:	mov    bl,0x8
  419f56:	dec    esi
  419f57:	or     BYTE PTR [ebx+0x758ffef],0x8
  419f5e:	and    cl,cl
  419f60:	pop    ds
  419f61:	and    al,0xc8
  419f63:	jmp    0x419f16
  419f65:	push   ss
  419f66:	rcl    bh,0x2c
  419f69:	in     eax,0x9c
  419f6b:	mov    cl,0x1
  419f6d:	sbb    ebx,esi
  419f6f:	popf   
  419f70:	lds    esi,FWORD PTR [ebx-0xdb83d99]
  419f76:	fldenv cs:[ebp+0x7c7aceef]
  419f7d:	mov    bl,0xc9
  419f7f:	in     al,0x4c
  419f81:	xor    DWORD PTR [ebx+0x1f],esi
  419f84:	bound  eax,QWORD PTR [edx-0x45332d71]
  419f8a:	out    dx,eax
  419f8b:	jl     0x419f40
  419f8d:	push   edi
  419f8e:	or     ch,BYTE PTR [eax+esi*4+0x1c]
  419f92:	jmp    0x38b4:0x5d2afba1
  419f99:	fs pop ecx
  419f9b:	jp     0x419f9c
  419f9d:	dec    edi
  419f9e:	pop    eax
  419f9f:	(bad)
  419fa2:	mov    bl,0x7f
  419fa4:	dec    ebx
  419fa5:	(bad)  [ebx]
  419fa7:	je     0x419fe6
  419fa9:	sub    bh,bl
  419fab:	xor    dh,dh
  419fad:	jbe    0x419f8a
  419faf:	or     esp,DWORD PTR [eax-0x3cd729c4]
  419fb5:	in     al,0x7f
  419fb7:	loop   0x419fe2
  419fb9:	push   0x174af565
  419fbe:	mov    ebp,0xdb1836ad
  419fc3:	rol    BYTE PTR [ecx],1
  419fc5:	fild   WORD PTR [esi+0x21]
  419fc8:	jns    0x41a02a
  419fca:	ficom  WORD PTR ds:0x3b1c3b24
  419fd0:	push   cs
  419fd1:	xchg   ebp,eax
  419fd2:	shl    ch,0x6d
  419fd5:	sti    
  419fd6:	mov    al,ds:0x4a077099
  419fdb:	leave  
  419fdc:	lods   al,BYTE PTR ds:[esi]
  419fdd:	inc    esp
  419fde:	xchg   edi,eax
  419fdf:	cmp    ebp,DWORD PTR fs:[ebx+0x1752fedf]
  419fe6:	mov    dl,0x9c
  419fe8:	sub    edx,esi
  419fea:	adc    al,0x68
  419fec:	pushf  
  419fed:	sar    DWORD PTR [ebp+ecx*4-0x78e601f8],1
  419ff4:	push   ds
  419ff5:	jmp    0x419fa3
  419ff7:	mov    ds:0xdbec3577,al
  419ffc:	repnz inc edi
  419ffe:	add    eax,0x5bf9ee65
  41a003:	inc    DWORD PTR [ebp-0x54]
  41a006:	push   ds
  41a007:	cmp    BYTE PTR [edi-0x6a],al
  41a00a:	les    ebx,FWORD PTR [ebx]
  41a00c:	mov    ?,WORD PTR [eax+0x3e]
  41a00f:	loope  0x41a046
  41a011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a012:	test   eax,0x91dfcf10
  41a017:	(bad)
  41a01b:	sub    esi,DWORD PTR [edx+0x5a21e7e1]
  41a021:	call   0xe692:0x3cbc6b4
  41a028:	or     al,BYTE PTR [eax+0x23]
  41a02b:	dec    esi
  41a02c:	jge    0x41a026
  41a02e:	sub    bl,BYTE PTR [ebx+0x51]
  41a031:	pop    edx
  41a032:	add    bh,BYTE PTR [edi]
  41a034:	sub    DWORD PTR [esi],ecx
  41a036:	xor    eax,0xad8ed433
  41a03b:	inc    esi
  41a03c:	ror    DWORD PTR [edi+0x7ab5cf8e],cl
  41a042:	(bad)  
  41a044:	push   ds
  41a045:	stc    
  41a046:	pop    es
  41a047:	cld    
  41a048:	cmp    BYTE PTR [ecx+0x7a],ch
  41a04b:	sub    DWORD PTR [edx+ecx*4],eax
  41a04e:	cmp    eax,0x9766e0b6
  41a053:	addr16 or al,0xcd
  41a056:	std    
  41a057:	push   esi
  41a058:	inc    edx
  41a059:	push   ss
  41a05a:	scas   al,BYTE PTR es:[edi]
  41a05b:	jp     0x41a0b5
  41a05d:	jnp    0x419ff8
  41a05f:	or     ah,dh
  41a061:	icebp  
  41a062:	call   0xc4a1:0x20616998
  41a069:	adc    BYTE PTR [ecx+0x6e128f3f],bh
  41a06f:	mov    ebx,0x246fb068
  41a074:	xchg   ebp,eax
  41a075:	ins    BYTE PTR es:[edi],dx
  41a076:	fisub  DWORD PTR [esp+ebp*2+0x2]
  41a07a:	xor    ebp,esp
  41a07c:	pop    edx
  41a07d:	add    ebx,DWORD PTR [esi]
  41a07f:	add    DWORD PTR [edi],esi
  41a081:	dec    edi
  41a082:	aas    
  41a083:	call   FWORD PTR [edx+0x604a9a91]
  41a089:	aad    0x7d
  41a08b:	push   ebp
  41a08c:	xor    DWORD PTR [ebp-0x4f],esi
  41a08f:	test   DWORD PTR [eax],ebx
  41a091:	js     0x41a0df
  41a093:	cs icebp 
  41a095:	mov    WORD PTR [eax],es
  41a097:	sbb    bh,al
  41a099:	test   BYTE PTR fs:[ebx],bl
  41a09c:	mov    BYTE PTR [ecx],bh
  41a09e:	jno    0x41a0af
  41a0a0:	jns    0x41a08f
  41a0a2:	imul   ebx,edi,0x19f0570a
  41a0a8:	sub    ch,al
  41a0aa:	inc    ebx
  41a0ab:	add    ah,BYTE PTR [esi-0x6e]
  41a0ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0af:	push   ecx
  41a0b0:	fsubr  QWORD PTR [ebp-0x4c]
  41a0b3:	xlat   BYTE PTR ds:[ebx]
  41a0b4:	mov    esp,0xcb56a42
  41a0b9:	sub    eax,DWORD PTR [ebx]
  41a0bb:	rcr    BYTE PTR gs:[eax],1
  41a0be:	enter  0xf9f7,0x20
  41a0c2:	fldcw  WORD PTR [edx-0x66a1838b]
  41a0c8:	mov    cl,0xa5
  41a0ca:	mov    ebx,0x696f8b2
  41a0cf:	loopne 0x41a120
  41a0d1:	test   DWORD PTR [edi+eiz*8],esi
  41a0d4:	add    al,0x64
  41a0d6:	pop    edx
  41a0d7:	and    ebx,DWORD PTR [ebx+0x27f7cf53]
  41a0dd:	inc    ebp
  41a0de:	or     edi,ecx
  41a0e0:	stc    
  41a0e1:	enter  0xbc4f,0xf4
  41a0e5:	xchg   ebp,eax
  41a0e6:	leave  
  41a0e7:	mov    al,0xce
  41a0e9:	in     al,0x5c
  41a0eb:	aas    
  41a0ec:	data16 jge 0x41a0d6
  41a0ef:	retf   
  41a0f0:	mov    dh,0x52
  41a0f2:	cmp    eax,0xb77404cd
  41a0f7:	test   BYTE PTR [edx+ebp*4+0x6c],cl
  41a0fb:	sbb    al,0xe6
  41a0fd:	dec    edx
  41a0fe:	inc    edx
  41a0ff:	xchg   edi,eax
  41a100:	leave  
  41a101:	(bad)  
  41a102:	mov    ss,edi
  41a104:	cmp    eax,0x8c13ce6e
  41a109:	dec    ebx
  41a10a:	sbb    BYTE PTR [eax-0x2063463e],bl
  41a110:	fs mov ebx,0xc16f9d29
  41a116:	pop    ds
  41a117:	adc    eax,0x5641e1f0
  41a11c:	popf   
  41a11d:	clc    
  41a11e:	in     eax,0xac
  41a120:	loope  0x41a0b9
  41a122:	pop    ss
  41a123:	mov    cl,0x67
  41a125:	fisubr WORD PTR [esi]
  41a127:	ficom  DWORD PTR [ebx]
  41a129:	pop    esi
  41a12a:	hlt    
  41a12b:	bound  edi,QWORD PTR [edx-0x53f30a16]
  41a131:	pop    edx
  41a132:	sar    ecx,cl
  41a134:	in     eax,0xbf
  41a136:	inc    edx
  41a137:	add    al,0x42
  41a139:	add    al,0x59
  41a13b:	pop    esi
  41a13c:	push   ecx
  41a13d:	test   eax,0x46ee9bcc
  41a142:	xor    DWORD PTR [edx],0x4a
  41a145:	push   ebp
  41a146:	mov    ds:0xb5796dbb,eax
  41a14b:	xor    eax,0xe0e61f17
  41a150:	ret    0x240e
  41a153:	fninit 
  41a155:	sti    
  41a156:	je     0x41a11b
  41a158:	sub    eax,0x65e7892e
  41a15d:	mov    esp,0x78c41b74
  41a163:	in     eax,0xfe
  41a165:	jnp    0x41a1ba
  41a167:	imul   esi,DWORD PTR [ecx],0x33
  41a16a:	push   esi
  41a16b:	inc    eax
  41a16c:	xor    BYTE PTR [ebx],cl
  41a16e:	fisubr DWORD PTR [edi-0x2af44c73]
  41a174:	add    DWORD PTR [eax-0x26],ebp
  41a177:	repz mov bh,0x3
  41a17a:	enter  0xb9a4,0xb3
  41a17e:	mov    ds:0xab727e24,eax
  41a183:	jecxz  0x41a107
  41a185:	bound  edi,QWORD PTR [ebx-0x43]
  41a188:	cmp    eax,DWORD PTR [edx]
  41a18a:	outs   dx,BYTE PTR ds:[esi]
  41a18b:	mov    al,0x5b
  41a18d:	jns    0x41a200
  41a18f:	or     ebp,0xffffffae
  41a192:	outs   dx,BYTE PTR ds:[esi]
  41a193:	ins    DWORD PTR es:[edi],dx
  41a194:	push   0x4ef78d9b
  41a199:	in     al,dx
  41a19a:	pop    es
  41a19b:	or     ecx,esp
  41a19d:	icebp  
  41a19e:	icebp  
  41a19f:	loope  0x41a21e
  41a1a1:	test   eax,edx
  41a1a3:	addr16 jb 0x41a172
  41a1a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1a7:	inc    esp
  41a1a8:	retf   0x8963
  41a1ab:	lods   al,BYTE PTR ds:[esi]
  41a1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ad:	jb     0x41a1ef
  41a1af:	outs   dx,BYTE PTR ds:[esi]
  41a1b0:	inc    edx
  41a1b1:	add    DWORD PTR [edx-0x69],edx
  41a1b4:	jmp    0xb700a2c4
  41a1b9:	je     0x41a1e2
  41a1bb:	clc    
  41a1bc:	and    eax,0x6a95475e
  41a1c1:	xchg   ebp,eax
  41a1c2:	cwde   
  41a1c3:	cld    
  41a1c4:	repz pop esp
  41a1c6:	pusha  
  41a1c7:	dec    ecx
  41a1c8:	adc    ah,BYTE PTR [ecx]
  41a1ca:	adc    DWORD PTR [eax-0x35],esi
  41a1cd:	push   0xffffffcf
  41a1cf:	inc    edx
  41a1d0:	dec    ebx
  41a1d1:	les    ebp,FWORD PTR [edx-0x6b46de8b]
  41a1d7:	ins    DWORD PTR es:[edi],dx
  41a1d8:	out    dx,eax
  41a1d9:	or     BYTE PTR [ebp+0x46b1ecb7],ch
  41a1df:	inc    esi
  41a1e0:	aaa    
  41a1e1:	and    ebx,DWORD PTR [edx]
  41a1e3:	rcl    DWORD PTR [edi+0xd0ab4a5],0x1b
  41a1ea:	pop    ss
  41a1eb:	sbb    bh,ch
  41a1ed:	jmp    0x8c66:0x7f09847b
  41a1f4:	jne    0x41a1fc
  41a1f6:	push   0xde13bc13
  41a1fb:	aad    0xc1
  41a1fd:	bnd jbe 0x41a197
  41a200:	into   
  41a201:	inc    edi
  41a202:	jb     0x41a189
  41a204:	fs jns 0x41a1b9
  41a207:	leave  
  41a208:	iret   
  41a209:	ins    BYTE PTR es:[edi],dx
  41a20a:	push   es
  41a20b:	int3   
  41a20c:	dec    edx
  41a20d:	mov    edi,0xb3326010
  41a212:	pop    ds
  41a213:	out    0x65,eax
  41a215:	dec    esi
  41a216:	add    DWORD PTR [ebx],edi
  41a218:	jmp    0xcd728546
  41a21d:	sti    
  41a21e:	jbe    0x41a247
  41a220:	mov    eax,ds:0xd43500ec
  41a225:	aas    
  41a226:	jle    0x41a284
  41a228:	sub    eax,0x66128d9a
  41a22d:	out    dx,al
  41a22e:	call   DWORD PTR [ecx]
  41a230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a231:	jns    0x41a2af
  41a233:	mov    ds:0x9f50c48,eax
  41a238:	cdq    
  41a239:	add    ebx,DWORD PTR [ebx+0x77]
  41a23c:	(bad)  
  41a23d:	push   0xffffffec
  41a23f:	stos   DWORD PTR es:[edi],eax
  41a240:	pop    edi
  41a241:	cmc    
  41a242:	mov    edi,0x602d38f2
  41a247:	leave  
  41a248:	cli    
  41a249:	add    al,0xa
  41a24b:	mov    eax,0x83a6d558
  41a250:	test   DWORD PTR [edx],ebp
  41a252:	push   eax
  41a253:	pushf  
  41a254:	int3   
  41a255:	out    0xb6,al
  41a257:	push   ebp
  41a258:	cmp    al,0xe0
  41a25a:	mov    ebx,0x2ee5ca5a
  41a25f:	pop    eax
  41a260:	sti    
  41a261:	mov    ecx,0x3a89f09d
  41a266:	leave  
  41a267:	dec    ebx
  41a268:	js     0x41a1f1
  41a26a:	arpl   WORD PTR [ecx-0x47],cx
  41a26d:	ret    
  41a26e:	jbe    0x41a209
  41a270:	or     BYTE PTR [eax+eax*4],bh
  41a273:	neg    bh
  41a275:	xor    al,0xd
  41a277:	inc    edx
  41a278:	loop   0x41a2a0
  41a27a:	push   0xee5cf2c3
  41a27f:	push   ebx
  41a280:	cmp    edi,edx
  41a282:	and    esp,DWORD PTR [ebx-0x22121284]
  41a288:	jmp    FWORD PTR [eax+ebx*8+0x2f534529]
  41a28f:	xchg   esi,eax
  41a290:	mov    ds:0x503ff06d,eax
  41a295:	test   BYTE PTR [esp+eax*2+0x2c],dl
  41a299:	sub    al,0xd9
  41a29b:	inc    esi
  41a29c:	or     BYTE PTR [eax],al
  41a29e:	mov    ebx,0x9ed8534d
  41a2a3:	dec    esi
  41a2a4:	inc    ebp
  41a2a5:	jnp    0x41a30c
  41a2a7:	clc    
  41a2a8:	mov    ds:0xbf31c16e,eax
  41a2ad:	xor    al,0xd5
  41a2af:	or     al,BYTE PTR ds:0xca55d848
  41a2b5:	fstp   DWORD PTR [ebx-0x4d]
  41a2b8:	dec    ebp
  41a2b9:	retf   
  41a2ba:	sub    DWORD PTR [esi+0x69cefb0e],edx
  41a2c0:	mov    esp,0xba19fd70
  41a2c5:	sbb    al,0xc7
  41a2c7:	jbe    0x41a332
  41a2c9:	pop    esi
  41a2ca:	cdq    
  41a2cb:	bound  ebp,QWORD PTR [edi+0x6e]
  41a2ce:	dec    edx
  41a2cf:	clc    
  41a2d0:	scas   eax,DWORD PTR es:[edi]
  41a2d1:	test   DWORD PTR [esi],edx
  41a2d3:	sub    BYTE PTR [edx],bh
  41a2d5:	cs jge 0x41a2f4
  41a2d8:	sub    BYTE PTR [ebx+0x37],0x9c
  41a2dc:	mov    dl,0x14
  41a2de:	mov    ah,0x5
  41a2e0:	sub    eax,0x99d41be7
  41a2e5:	push   ds
  41a2e6:	mov    ?,WORD PTR [ebp+0x735eef14]
  41a2ec:	and    BYTE PTR [esi],bl
  41a2ee:	jb     0x41a283
  41a2f0:	mov    ecx,0x13f11a18
  41a2f5:	sbb    al,0x21
  41a2f7:	sub    eax,0x36e929a1
  41a2fc:	pushf  
  41a2fd:	and    edi,DWORD PTR [ebp-0x5127d349]
  41a303:	pushf  
  41a304:	mov    edi,0x75fc324
  41a309:	jge    0x41a320
  41a30b:	aam    0xd1
  41a30d:	add    eax,0x34ee3794
  41a312:	adc    ch,al
  41a314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a315:	mov    ds:0xdb5a352c,eax
  41a31a:	or     dh,BYTE PTR [edx-0x5e18c219]
  41a320:	xchg   edx,eax
  41a321:	jo     0x41a389
  41a323:	push   0xf8dc7d86
  41a328:	imul   ecx,DWORD PTR [ecx-0xf],0xfffffff0
  41a32c:	out    dx,eax
  41a32d:	push   cs
  41a32e:	jb     0x41a313
  41a330:	in     eax,dx
  41a331:	xchg   DWORD PTR [esi+0x75744827],ebp
  41a337:	sub    al,0xf7
  41a339:	lds    edi,FWORD PTR [esi+edi*8-0x13a17d56]
  41a340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a341:	loop   0x41a300
  41a343:	and    al,0x9d
  41a345:	pop    edi
  41a346:	(bad)  
  41a347:	and    BYTE PTR [ebp+0x2c],dh
  41a34a:	pushf  
  41a34b:	mov    edi,0xca852d10
  41a350:	test   eax,0xbb2fb0b9
  41a355:	dec    edi
  41a356:	push   ss
  41a357:	repz retf 
  41a359:	or     dl,bl
  41a35b:	and    BYTE PTR [esp+ebp*1-0x4d98f51c],dh
  41a362:	ds stc 
  41a364:	or     al,0xd8
  41a366:	xor    eax,0x5d101704
  41a36b:	call   0x7bbc:0xfff52e44
  41a372:	jb     0x41a366
  41a374:	sbb    edx,0x50e2b601
  41a37a:	in     al,dx
  41a37b:	push   esi
  41a37c:	jbe    0x41a3d0
  41a37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a37f:	sahf   
  41a380:	jne    0x41a31c
  41a382:	mov    bl,0x59
  41a384:	data16 and BYTE PTR [ebx+0x4e],cl
  41a388:	or     esp,DWORD PTR [ecx-0x2ca430fc]
  41a38e:	sar    esi,cl
  41a390:	(bad)  
  41a392:	mov    al,0x94
  41a394:	xor    DWORD PTR [ecx-0x7f],0xa21b93bf
  41a39b:	out    0x9b,eax
  41a39d:	jmp    0x41a39e
  41a39f:	pop    ecx
  41a3a0:	aas    
  41a3a1:	in     eax,dx
  41a3a2:	inc    esp
  41a3a3:	dec    edx
  41a3a4:	mov    BYTE PTR [ebp-0x60d7417],ah
  41a3aa:	lock xor ch,BYTE PTR [eax]
  41a3ad:	push   es
  41a3ae:	adc    ch,dh
  41a3b0:	ins    DWORD PTR es:[edi],dx
  41a3b1:	popa   
  41a3b2:	popa   
  41a3b3:	xlat   BYTE PTR ds:[ebx]
  41a3b4:	stos   DWORD PTR es:[edi],eax
  41a3b5:	inc    ebx
  41a3b6:	mov    ds:0x7eb29e5f,eax
  41a3bb:	ss push es
  41a3bd:	mov    dh,0x8f
  41a3bf:	fld    DWORD PTR [ebx-0x1d8706b8]
  41a3c5:	sahf   
  41a3c6:	push   edi
  41a3c7:	push   esi
  41a3c8:	mov    ah,0x34
  41a3ca:	xor    BYTE PTR [ebx],bh
  41a3cc:	dec    ebp
  41a3cd:	mov    dl,0x9c
  41a3cf:	out    dx,al
  41a3d0:	adc    eax,0x2f07c17b
  41a3d5:	in     al,0x4b
  41a3d7:	inc    ebp
  41a3d8:	mov    ah,0xb
  41a3da:	or     DWORD PTR [ecx],0x88bd4484
  41a3e0:	aad    0x85
  41a3e2:	sbb    ebx,ebp
  41a3e4:	xor    bh,BYTE PTR [eax+0x28]
  41a3e7:	out    0x8c,eax
  41a3e9:	xchg   ecx,eax
  41a3ea:	and    eax,0x9a74ddeb
  41a3ef:	fcmovu st,st(6)
  41a3f1:	mov    ds:0x8df031e7,eax
  41a3f6:	pop    esi
  41a3f7:	push   ss
  41a3f8:	mov    ecx,0xcd70cd88
  41a3fd:	ret    
  41a3fe:	push   ebx
  41a3ff:	scas   al,BYTE PTR es:[edi]
  41a400:	jo     0x41a428
  41a402:	outs   dx,BYTE PTR ds:[esi]
  41a403:	cmp    edx,DWORD PTR [eax-0xf]
  41a406:	(bad)  
  41a407:	lahf   
  41a408:	ja     0x41a460
  41a40a:	hlt    
  41a40b:	pop    edx
  41a40c:	xchg   edi,eax
  41a40d:	fwait
  41a40e:	scas   eax,DWORD PTR es:[edi]
  41a40f:	(bad)  
  41a410:	mov    ebx,0x4f9b636b
  41a415:	pusha  
  41a416:	dec    edi
  41a417:	mov    esp,0xd8f9fe28
  41a41c:	dec    ebx
  41a41d:	dec    ebp
  41a41e:	fbld   TBYTE PTR [esi]
  41a420:	int    0x68
  41a422:	mov    BYTE PTR [edi+0x4821d4e],0x31
  41a429:	mov    edx,0xe58cad7e
  41a42e:	test   DWORD PTR [ebp+0x6cc4c109],esp
  41a434:	call   0xe4d49ae6
  41a439:	sbb    al,0xaf
  41a43b:	xor    ebp,DWORD PTR [edi-0x161673c7]
  41a441:	(bad)  
  41a442:	fst    DWORD PTR [ebx-0x43359e2b]
  41a448:	mov    BYTE PTR [ebx],dl
  41a44a:	cmp    DWORD PTR [eax+0x2e87531],ebx
  41a450:	cdq    
  41a451:	shl    ecx,1
  41a453:	cld    
  41a454:	pop    edi
  41a455:	jbe    0x41a4d0
  41a457:	jp     0x41a4c6
  41a459:	call   0x9110:0xc3d6764e
  41a460:	mov    edx,0xf04a2a26
  41a465:	rcl    bh,1
  41a467:	mov    dh,0xef
  41a469:	imul   edx,esp,0x41
  41a46c:	test   al,0xcf
  41a46e:	(bad)  
  41a46f:	push   ebx
  41a470:	pop    eax
  41a471:	sub    BYTE PTR [ecx-0x3e841fb5],bl
  41a477:	dec    ebx
  41a478:	xchg   BYTE PTR ds:0x3f6077ad,bl
  41a47e:	jne    0x41a4ed
  41a480:	jmp    FWORD PTR [esi-0x29]
  41a483:	jne    0x41a4bd
  41a485:	xor    cl,BYTE PTR [ebx+ecx*4-0x38b66d7a]
  41a48c:	(bad)
  41a48f:	jp     0x41a42a
  41a491:	cmp    eax,ecx
  41a493:	or     DWORD PTR [edx+0x4931c10d],esp
  41a499:	xor    dh,BYTE PTR [ecx*8-0x680af223]
  41a4a0:	xchg   BYTE PTR [ebx+0x50866b7],ch
  41a4a6:	mov    eax,ds:0xf07c5f25
  41a4ab:	and    al,0xd9
  41a4ad:	xchg   edi,eax
  41a4ae:	jb     0x41a4e6
  41a4b0:	jne    0x41a459
  41a4b2:	mov    ebp,0xa68763cf
  41a4b7:	neg    BYTE PTR [esi]
  41a4b9:	jecxz  0x41a510
  41a4bb:	mov    ebp,0x6630eff2
  41a4c0:	arpl   WORD PTR [edi],cx
  41a4c2:	xchg   esi,eax
  41a4c3:	jne    0x41a46c
  41a4c5:	in     eax,dx
  41a4c6:	push   0x5a
  41a4c8:	lea    edx,[ecx-0x2c]
  41a4cb:	jge    0x41a454
  41a4cd:	adc    al,0x2b
  41a4cf:	lds    edi,FWORD PTR [edi-0xf]
  41a4d2:	xor    ch,bh
  41a4d4:	repz fld DWORD PTR [edx-0x38]
  41a4d8:	data16 sti 
  41a4da:	mov    ebx,0xc50b633d
  41a4df:	push   eax
  41a4e0:	aad    0x5c
  41a4e2:	aaa    
  41a4e3:	dec    ebx
  41a4e4:	lea    eax,[eax+0x7fb32692]
  41a4ea:	jae    0x41a509
  41a4ec:	cwde   
  41a4ed:	or     bl,BYTE PTR [esi+0x4b]
  41a4f0:	mov    esi,0xb01a91a9
  41a4f5:	jbe    0x41a48f
  41a4f7:	lock add ah,BYTE PTR [edx]
  41a4fa:	xchg   esp,eax
  41a4fb:	push   ebx
  41a4fc:	lock sbb BYTE PTR [edi-0x6b],dh
  41a500:	mov    ds:0x2ca79ebf,eax
  41a505:	push   es
  41a506:	js     0x41a558
  41a508:	int    0x80
  41a50a:	aam    0x7b
  41a50c:	ins    BYTE PTR es:[edi],dx
  41a50d:	xchg   BYTE PTR [eax+0x57ffda0f],bl
  41a513:	cmp    al,0x32
  41a515:	ret    0xe83b
  41a518:	push   ds
  41a519:	fisttp DWORD PTR [edx]
  41a51b:	sub    ebx,DWORD PTR [ecx]
  41a51d:	daa    
  41a51e:	or     BYTE PTR [edx+0x38],ch
  41a521:	mov    ebp,0xb052328f
  41a526:	ins    BYTE PTR es:[edi],dx
  41a527:	jle    0x41a500
  41a529:	mov    DWORD PTR [esi-0x3a76b273],0x4a26e9c3
  41a533:	cmp    DWORD PTR [edi-0x673ab2c8],esp
  41a539:	adc    al,0x3f
  41a53b:	loop   0x41a559
  41a53d:	inc    ecx
  41a53e:	cli    
  41a53f:	rol    esp,cl
  41a541:	icebp  
  41a542:	int3   
  41a543:	addr16 in eax,0xb3
  41a546:	retf   
  41a547:	add    ah,BYTE PTR [eax]
  41a549:	cmp    bh,cl
  41a54b:	cwde   
  41a54c:	xchg   esp,eax
  41a54d:	dec    ebp
  41a54e:	inc    edx
  41a54f:	mov    cl,0xe6
  41a551:	lock push cs
  41a553:	aaa    
  41a554:	pop    ecx
  41a555:	mov    ch,0x46
  41a557:	jne    0x41a57f
  41a559:	loope  0x41a4e6
  41a55b:	push   ebp
  41a55c:	jnp    0x41a514
  41a55e:	scas   al,BYTE PTR es:[edi]
  41a55f:	and    edx,DWORD PTR [eax]
  41a561:	dec    esp
  41a562:	pop    eax
  41a563:	lahf   
  41a564:	int3   
  41a565:	lods   eax,DWORD PTR ds:[esi]
  41a566:	mov    bl,0x9c
  41a568:	call   0xb736:0x9745d928
  41a56f:	pop    ss
  41a570:	rcr    ch,cl
  41a572:	sahf   
  41a573:	fist   DWORD PTR [esi-0x1b]
  41a576:	sahf   
  41a577:	xchg   ebx,eax
  41a578:	test   ah,0x2d
  41a57b:	ins    BYTE PTR es:[edi],dx
  41a57c:	mov    ecx,0xe7265678
  41a581:	(bad)  
  41a582:	les    si,DWORD PTR [edx+0x2d280292]
  41a589:	inc    edi
  41a58a:	jbe    0x41a59a
  41a58c:	fcmovnbe st,st(7)
  41a58e:	outs   dx,DWORD PTR ds:[esi]
  41a58f:	(bad)  
  41a590:	(bad)  
  41a591:	pusha  
  41a592:	push   0xffffffa4
  41a594:	add    al,0x9a
  41a596:	adc    DWORD PTR [esi-0x53],ecx
  41a599:	xchg   ebx,eax
  41a59a:	icebp  
  41a59b:	shr    BYTE PTR [esi],cl
  41a59d:	cmp    DWORD PTR [edi+0x2240970b],0x58
  41a5a4:	rol    dh,cl
  41a5a6:	mov    dh,0x99
  41a5a8:	fcom   DWORD PTR [esi-0x6a]
  41a5ab:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ad:	jnp    0x41a62e
  41a5af:	add    ecx,DWORD PTR [edx]
  41a5b1:	mov    bh,0xce
  41a5b3:	push   ebp
  41a5b4:	cmp    DWORD PTR [esi+ebx*4],ebp
  41a5b7:	clc    
  41a5b8:	xchg   esi,eax
  41a5b9:	add    DWORD PTR ds:0x801b3802,edi
  41a5bf:	mov    bl,0x8e
  41a5c1:	mov    al,0x9e
  41a5c3:	push   ds
  41a5c4:	mov    DWORD PTR ds:0xd68ff892,edi
  41a5ca:	mov    al,ds:0xd2a77481
  41a5cf:	push   cs
  41a5d0:	test   DWORD PTR [ecx-0x1710c20b],0xf8f6470f
  41a5da:	push   ebx
  41a5db:	xor    BYTE PTR [eax+0x7b],ch
  41a5de:	push   eax
  41a5df:	cli    
  41a5e0:	or     eax,0x477e1965
  41a5e5:	aam    0x89
  41a5e7:	pop    ds
  41a5e8:	jge    0x41a619
  41a5ea:	adc    DWORD PTR [eax-0x4dd9830d],eax
  41a5f0:	cwde   
  41a5f1:	test   BYTE PTR gs:[edi-0xfa3bdef],0xe
  41a5f9:	or     eax,0x4972509
  41a5fe:	in     al,0x89
  41a600:	fstp   QWORD PTR [ebx-0x1ce76d16]
  41a606:	jp     0x41a603
  41a608:	int    0x7a
  41a60a:	xchg   DWORD PTR [ebx],ebx
  41a60c:	and    al,0x36
  41a60e:	(bad)  
  41a60f:	pop    DWORD PTR [edi-0x4e4ad8bf]
  41a615:	dec    ebp
  41a616:	push   ds
  41a617:	jge    0x41a665
  41a619:	les    eax,FWORD PTR [edx]
  41a61b:	or     dl,BYTE PTR [ebp+0x60]
  41a61e:	xor    ah,BYTE PTR [esi]
  41a620:	aaa    
  41a621:	jmp    0xf4fa0c0e
  41a626:	and    al,BYTE PTR [edx]
  41a628:	jge    0x41a5f1
  41a62a:	mov    al,0x74
  41a62c:	(bad)  
  41a62e:	adc    edx,ebp
  41a630:	dec    eax
  41a631:	loopne 0x41a5f2
  41a633:	and    DWORD PTR [edx+edx*1+0x2],0x11
  41a638:	inc    eax
  41a639:	xchg   esi,eax
  41a63a:	shl    BYTE PTR [esi-0x6724a04a],1
  41a640:	jecxz  0x41a62d
  41a642:	add    edx,DWORD PTR [ebp+edi*8+0x2fb15e92]
  41a649:	mov    edi,0x124ea852
  41a64e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a64f:	mov    ch,BYTE PTR [ecx-0x15]
  41a652:	retf   0x6af9
  41a655:	pusha  
  41a656:	push   eax
  41a657:	mov    BYTE PTR [ebx+0x76],dh
  41a65a:	sbb    bh,BYTE PTR ds:0xd29531f3
  41a660:	mov    ds,WORD PTR [eax-0x2ddb71e7]
  41a666:	xchg   ebx,eax
  41a667:	dec    ecx
  41a668:	push   es
  41a669:	mov    ebp,0x6bb3bd60
  41a66e:	shr    DWORD PTR [ecx+eax*4],cl
  41a671:	test   eax,0xe5f31e3b
  41a676:	jl     0x41a62e
  41a678:	inc    ebp
  41a679:	or     BYTE PTR [ebx+edx*4-0x3a8b3064],dl
  41a680:	shl    BYTE PTR [edi-0x2e5178f1],0x36
  41a687:	xchg   ebx,eax
  41a688:	sub    al,0xd4
  41a68a:	mov    edx,0x979c96b9
  41a68f:	xor    eax,0x75ae628a
  41a694:	cli    
  41a695:	iret   
  41a696:	mov    al,BYTE PTR [ecx+esi*1]
  41a699:	adc    al,0x88
  41a69b:	ret    0x3682
  41a69e:	das    
  41a69f:	loopne 0x41a6c2
  41a6a1:	jb     0x41a6a1
  41a6a3:	mov    esi,0x733b1531
  41a6a8:	and    al,0x6d
  41a6aa:	pop    ebp
  41a6ab:	(bad)  [ebp-0x5bd338f2]
  41a6b1:	nop
  41a6b2:	add    ebp,DWORD PTR [edx-0x2b8f6758]
  41a6b8:	mov    ebx,0xa1487859
  41a6bd:	in     eax,dx
  41a6be:	je     0x41a730
  41a6c0:	fs sahf 
  41a6c2:	add    esi,DWORD PTR [edx-0x671ebca3]
  41a6c8:	mov    eax,ds:0x6add468c
  41a6cd:	ret    
  41a6ce:	in     al,dx
  41a6cf:	cs aas 
  41a6d1:	les    esi,FWORD PTR [ecx+0x611cb4a6]
  41a6d7:	xchg   edx,eax
  41a6d8:	cdq    
  41a6d9:	fiadd  WORD PTR [ebx+0x60]
  41a6dc:	and    DWORD PTR [eax],esp
  41a6de:	adc    al,0x19
  41a6e0:	sbb    al,0x20
  41a6e2:	add    ah,dh
  41a6e4:	inc    esi
  41a6e5:	inc    esp
  41a6e6:	adc    al,0x3a
  41a6e8:	shl    BYTE PTR [ebx+0x154748a7],0x50
  41a6ef:	jle    0x41a753
  41a6f1:	xchg   esp,eax
  41a6f2:	cmc    
  41a6f3:	cmp    cl,BYTE PTR [edi-0x3c79ec16]
  41a6f9:	mov    eax,ds:0xed89d8e1
  41a6fe:	mov    eax,ds:0x84936f0b
  41a703:	xchg   BYTE PTR [esp+eax*8],cl
  41a706:	scas   al,BYTE PTR es:[edi]
  41a707:	add    edx,ebp
  41a709:	push   0x8c42bfe
  41a70e:	fisttp DWORD PTR [ecx]
  41a710:	aas    
  41a711:	fdivr  DWORD PTR [esi]
  41a713:	jae    0x41a768
  41a715:	dec    BYTE PTR [ebx-0x4dab2677]
  41a71b:	loopne 0x41a77a
  41a71d:	iret   
  41a71e:	fdivr  QWORD PTR [esi+0x4d987408]
  41a725:	dec    edx
  41a726:	shr    BYTE PTR [edx+0x53],1
  41a729:	xchg   DWORD PTR [eax-0x1a655dbb],esp
  41a72f:	inc    esi
  41a730:	push   edx
  41a731:	mov    ss,WORD PTR [eax-0x126811a8]
  41a737:	xor    al,0x21
  41a739:	rep ins DWORD PTR es:[edi],dx
  41a73b:	add    al,0x57
  41a73d:	mov    ah,0xca
  41a73f:	ds (bad) 
  41a741:	mov    dl,0x46
  41a743:	dec    esp
  41a744:	jp     0x41a718
  41a746:	mov    cl,cl
  41a748:	jae    0x41a745
  41a74a:	dec    ecx
  41a74b:	push   ebx
  41a74c:	mov    ds:0xb6833f70,al
  41a751:	pop    es
  41a752:	sub    eax,0x86bd94cd
  41a757:	sbb    BYTE PTR [edi],bl
  41a759:	sbb    BYTE PTR [edi+ebx*2+0x1bd69775],dh
  41a760:	jmp    0x9e51:0xc3eab8f
  41a767:	dec    ecx
  41a768:	mov    esp,0xcbaa41dc
  41a76d:	loope  0x41a712
  41a76f:	test   al,0x84
  41a771:	xlat   BYTE PTR ds:[ebx]
  41a772:	ret    0xd4c9
  41a775:	lods   al,BYTE PTR ds:[esi]
  41a776:	pop    edi
  41a777:	arpl   WORD PTR [esi-0x54],cx
  41a77a:	gs jl  0x41a7c0
  41a77d:	add    DWORD PTR [ebp-0x79d4ce5a],0x29
  41a784:	arpl   WORD PTR [edi-0x6d15843a],ax
  41a78a:	pop    ecx
  41a78b:	aam    0xc8
  41a78d:	mov    dl,0xe2
  41a78f:	and    esp,esi
  41a791:	pop    eax
  41a792:	cmp    al,0xbf
  41a794:	in     al,dx
  41a795:	iret   
  41a796:	jl     0x41a742
  41a798:	(bad)  
  41a799:	addr16 and bl,0xa2
  41a79d:	sbb    eax,0xb8e4d45e
  41a7a2:	mov    eax,ds:0x3ad105b2
  41a7a7:	outs   dx,BYTE PTR ds:[esi]
  41a7a8:	mov    ebp,0xa2a550e0
  41a7ad:	or     esp,DWORD PTR [esi-0x519cef50]
  41a7b3:	aad    0x0
  41a7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7b6:	loop   0x41a762
  41a7b8:	aas    
  41a7b9:	inc    edi
  41a7ba:	and    eax,0x9b29682
  41a7bf:	fwait
  41a7c0:	mov    al,ds:0x8dcd3391
  41a7c5:	ins    DWORD PTR es:[edi],dx
  41a7c6:	outs   dx,DWORD PTR ds:[esi]
  41a7c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c8:	sti    
  41a7c9:	and    al,0xfb
  41a7cb:	test   DWORD PTR [edi-0x3d],eax
  41a7ce:	push   ecx
  41a7cf:	scas   eax,DWORD PTR es:[edi]
  41a7d0:	sub    DWORD PTR [edx+0x67],edx
  41a7d3:	push   ebx
  41a7d4:	outs   dx,DWORD PTR ds:[esi]
  41a7d5:	add    al,0xcf
  41a7d7:	das    
  41a7d8:	and    BYTE PTR [ecx-0x12],bh
  41a7db:	mov    esp,0x85d74038
  41a7e0:	dec    ebx
  41a7e1:	and    al,0x7d
  41a7e3:	paddusb mm0,QWORD PTR ss:[edi+0x4b]
  41a7e8:	or     dh,BYTE PTR [edx]
  41a7ea:	cmp    DWORD PTR [edx+0x7ab15170],eax
  41a7f0:	addr16 pop edi
  41a7f2:	dec    edi
  41a7f3:	lds    esp,FWORD PTR [edi]
  41a7f5:	sub    bl,cl
  41a7f7:	lods   al,BYTE PTR ds:[esi]
  41a7f8:	xchg   DWORD PTR [ebp+0x5e14ecc6],esp
  41a7fe:	fiadd  WORD PTR [eax-0x70d9e012]
  41a804:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a806:	dec    edi
  41a807:	mov    ch,BYTE PTR [ebx]
  41a809:	jne    0x41a80e
  41a80b:	fs ret 0x5f4b
  41a80f:	push   ebx
  41a810:	jae    0x41a7a8
  41a812:	int3   
  41a813:	int3   
  41a814:	xchg   ebp,eax
  41a815:	xlat   BYTE PTR ds:[ebx]
  41a816:	sbb    DWORD PTR [edi],ebx
  41a818:	data16 hlt 
  41a81a:	push   ss
  41a81b:	xchg   DWORD PTR [eax],edi
  41a81d:	data16 lods al,BYTE PTR ds:[esi]
  41a81f:	iret   
  41a820:	dec    ebp
  41a821:	and    BYTE PTR [ebp-0x3f0b3b21],0xaf
  41a828:	xor    DWORD PTR [ebp-0x578f5230],ecx
  41a82e:	and    eax,0x61aff15b
  41a833:	call   0x9efd:0xc06f13d1
  41a83a:	cmp    BYTE PTR [ebx-0x57],bl
  41a83d:	pop    es
  41a83e:	ds (bad) 
  41a840:	out    dx,eax
  41a841:	mov    ecx,0x19213f72
  41a846:	xchg   edi,eax
  41a847:	mov    ds:0xf5638003,eax
  41a84c:	inc    esp
  41a84d:	and    DWORD PTR [ebx-0x79aa1464],edi
  41a853:	mov    dh,0xf
  41a855:	repz mov ah,0xb6
  41a858:	mov    ds:0xfce7a180,al
  41a85d:	scas   eax,DWORD PTR es:[edi]
  41a85e:	scas   eax,DWORD PTR es:[edi]
  41a85f:	sar    BYTE PTR [esi],0x5
  41a862:	xchg   ebp,eax
  41a863:	les    edi,FWORD PTR [eax+ebp*2+0x13]
  41a867:	adc    al,0x2
  41a869:	retf   0xf69c
  41a86c:	(bad)  
  41a86d:	or     edi,edx
  41a86f:	or     DWORD PTR [ebx+0x44],ecx
  41a872:	sahf   
  41a873:	xlat   BYTE PTR ds:[ebx]
  41a874:	and    eax,0x35cf1666
  41a879:	inc    ebp
  41a87a:	lahf   
  41a87b:	int    0x46
  41a87d:	cmp    dl,bh
  41a87f:	push   0xffffff85
  41a881:	sub    eax,0x57ba3bd7
  41a886:	xor    ch,dl
  41a888:	adc    eax,0xa4d5da57
  41a88d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a88e:	enter  0x6258,0x74
  41a892:	mov    esi,0x35e0d8e7
  41a897:	retf   0x75fb
  41a89a:	cmp    esi,ebp
  41a89c:	xor    esp,ecx
  41a89e:	mov    dh,0xb1
  41a8a0:	xchg   esp,eax
  41a8a1:	sti    
  41a8a2:	mov    eax,ds:0xbea8016b
  41a8a7:	lods   al,BYTE PTR ds:[esi]
  41a8a8:	imul   edx,DWORD PTR [ecx-0x13],0xa4dfb59f
  41a8af:	xchg   BYTE PTR [esi],dl
  41a8b1:	fild   QWORD PTR [edi-0x67]
  41a8b4:	mov    edi,0xd7c471f8
  41a8b9:	sub    esp,DWORD PTR [ebx-0x55]
  41a8bc:	stos   DWORD PTR es:[edi],eax
  41a8bd:	jge    0x41a924
  41a8bf:	push   ecx
  41a8c0:	sbb    BYTE PTR [edx],bl
  41a8c2:	jle    0x41a898
  41a8c4:	jmp    0x41a8b5
  41a8c6:	cmp    eax,DWORD PTR [edx+0x329c5c6e]
  41a8cc:	fcom   QWORD PTR [eax-0x11238368]
  41a8d2:	mov    esp,ds
  41a8d4:	dec    bl
  41a8d6:	add    eax,0xcf743146
  41a8db:	mov    ds:0x938a3e70,al
  41a8e0:	add    ah,ch
  41a8e2:	clc    
  41a8e3:	test   al,0x97
  41a8e5:	or     al,BYTE PTR [esi-0x6]
  41a8e8:	jns    0x41a88c
  41a8ea:	sub    ecx,edx
  41a8ec:	stos   BYTE PTR es:[edi],al
  41a8ed:	int3   
  41a8ee:	inc    edi
  41a8ef:	aaa    
  41a8f0:	jl     0x41a93b
  41a8f2:	sub    edi,esp
  41a8f4:	inc    ebp
  41a8f5:	mov    bh,0x96
  41a8f7:	adc    ecx,DWORD PTR [ebp-0x3b]
  41a8fa:	mov    dh,0xbf
  41a8fc:	fst    DWORD PTR [ecx-0x3d]
  41a8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a900:	call   0xbff8:0x8a149a3b
  41a907:	xlat   BYTE PTR ds:[ebx]
  41a908:	bound  ebp,QWORD PTR ds:0x258b8204
  41a90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a90f:	out    dx,al
  41a910:	imul   ebp,DWORD PTR [edi],0xe70b642e
  41a916:	in     eax,dx
  41a917:	or     DWORD PTR [edx-0x45],esp
  41a91a:	jnp    0x41a991
  41a91c:	stos   BYTE PTR es:[edi],al
  41a91d:	jge    0x41a95c
  41a91f:	test   al,0x1c
  41a921:	inc    edx
  41a922:	test   BYTE PTR [eax+0x6e],0x88
  41a926:	mov    edx,0x60858290
  41a92b:	div    ah
  41a92d:	ins    DWORD PTR es:[edi],dx
  41a92e:	add    eax,0xe34f6f34
  41a933:	sti    
  41a934:	loop   0x41a936
  41a936:	push   ebp
  41a937:	xor    ebp,DWORD PTR [edx]
  41a939:	cmp    dh,BYTE PTR [edi-0x73183b47]
  41a93f:	shl    DWORD PTR [edx+0x28b2f5ad],cl
  41a945:	or     bx,di
  41a948:	sub    cl,bh
  41a94a:	pop    esp
  41a94b:	inc    ecx
  41a94c:	ss mov edi,0xc5ea9bfa
  41a952:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41a954:	jg     0x41a929
  41a956:	add    eax,0x12851a4
  41a95b:	sub    edx,ebx
  41a95d:	xor    ebx,DWORD PTR [ecx+0x60]
  41a960:	cwde   
  41a961:	sub    eax,0xbdebcc4a
  41a966:	movlps QWORD PTR [esi],xmm7
  41a969:	xchg   edx,eax
  41a96a:	(bad)  
  41a96b:	jae    0x41a9ec
  41a96d:	pop    ecx
  41a96e:	xchg   al,bh
  41a970:	popf   
  41a971:	sub    eax,0xe6199641
  41a976:	pop    ebx
  41a977:	mov    bh,0xb2
  41a979:	into   
  41a97a:	cdq    
  41a97b:	sti    
  41a97c:	shl    esi,1
  41a97e:	dec    ebx
  41a97f:	and    eax,0xeeb86a87
  41a984:	push   0xffffff87
  41a986:	lods   eax,DWORD PTR ds:[esi]
  41a987:	ss push ss
  41a989:	mov    ds:0xf29a9001,al
  41a98e:	pop    ebp
  41a98f:	mov    ds:0x45abfd2a,eax
  41a994:	jmp    0x9ef1552f
  41a999:	(bad)  
  41a99a:	js     0x41a924
  41a99c:	sub    eax,0xc9bc5853
  41a9a1:	xchg   ebp,eax
  41a9a2:	clc    
  41a9a3:	cmp    DWORD PTR [edi],ecx
  41a9a5:	outs   dx,DWORD PTR ds:[esi]
  41a9a6:	sbb    ecx,ecx
  41a9a8:	(bad)  
  41a9a9:	mov    ds:0x1dce596c,al
  41a9ae:	jp     0x41a952
  41a9b0:	push   cs
  41a9b1:	arpl   WORD PTR [eax],bp
  41a9b3:	fwait
  41a9b4:	lock mov ds:0x5a28341b,al
  41a9ba:	push   ss
  41a9bb:	mov    ?,WORD PTR [ecx+eiz*2+0x49]
  41a9bf:	cs sub eax,0xd2930c63
  41a9c5:	xchg   DWORD PTR [ebp-0x12],ebx
  41a9c8:	xchg   DWORD PTR [ecx+0x36],eax
  41a9cb:	and    eax,eax
  41a9cd:	mov    ds:0x7ccea5fa,eax
  41a9d2:	xor    al,0x6a
  41a9d4:	push   ecx
  41a9d5:	mov    eax,0x6191ee6b
  41a9da:	xor    BYTE PTR [ebx-0x33],0xec
  41a9de:	cli    
  41a9df:	sbb    ebp,DWORD PTR [edi+0x1c44ecd4]
  41a9e5:	movaps XMMWORD PTR [eax-0x81ed5e1],xmm4
  41a9ec:	and    DWORD PTR [ecx],eax
  41a9ee:	cdq    
  41a9ef:	pop    es
  41a9f0:	rcl    DWORD PTR [ebp-0xe],cl
  41a9f3:	pop    es
  41a9f4:	fadd   DWORD PTR [ebx]
  41a9f6:	rol    BYTE PTR [ecx-0x6bd5a6b3],1
  41a9fc:	std    
  41a9fd:	or     eax,0x60093325
  41aa02:	add    al,BYTE PTR [eax-0x5f27338d]
  41aa08:	shr    DWORD PTR [edi],1
  41aa0a:	xchg   DWORD PTR [ecx],ebp
  41aa0c:	dec    esp
  41aa0d:	add    dh,BYTE PTR [ebx-0x56923072]
  41aa13:	(bad)
  41aa18:	pop    ebx
  41aa19:	cdq    
  41aa1a:	loope  0x41a9e9
  41aa1c:	out    0xd1,al
  41aa1e:	xchg   BYTE PTR [esi],dh
  41aa20:	xchg   ecx,eax
  41aa21:	clc    
  41aa22:	mov    fs,ecx
  41aa24:	daa    
  41aa25:	mov    cs,esi
  41aa27:	push   ebx
  41aa28:	or     DWORD PTR [ebp-0x4a],edx
  41aa2b:	mov    al,0x17
  41aa2d:	call   0xc5cd2012
  41aa32:	ins    DWORD PTR es:[edi],dx
  41aa33:	cmc    
  41aa34:	les    eax,FWORD PTR [ecx+0x35809a64]
  41aa3a:	push   cs
  41aa3b:	fwait
  41aa3c:	in     eax,0xe3
  41aa3e:	jge    0x41aa20
  41aa40:	outs   dx,BYTE PTR ds:[esi]
  41aa41:	xor    eax,0xd6e6f2ca
  41aa46:	mov    cl,cl
  41aa48:	xchg   ebx,eax
  41aa49:	sbb    eax,0x4a99b2d5
  41aa4e:	shl    BYTE PTR [ebx-0x23752441],cl
  41aa54:	data16 (bad) 
  41aa56:	popf   
  41aa57:	push   ebp
  41aa58:	xchg   esp,eax
  41aa59:	aad    0xed
  41aa5b:	mov    ah,0xf1
  41aa5d:	mov    al,BYTE PTR ds:0xdc475642
  41aa63:	not    BYTE PTR [eax+0x3d1bf7a2]
  41aa69:	mov    cl,0x13
  41aa6b:	cdq    
  41aa6c:	in     eax,dx
  41aa6d:	add    DWORD PTR [esi+0x5a],esi
  41aa70:	xchg   edx,eax
  41aa71:	mov    ds,WORD PTR [edi-0x1c]
  41aa74:	lock push ds
  41aa76:	test   eax,0xdf2253a1
  41aa7b:	dec    ebp
  41aa7c:	and    eax,0x3b60ee14
  41aa81:	cmp    BYTE PTR ds:0xbc5b4486,cl
  41aa87:	repnz das 
  41aa89:	dec    edx
  41aa8a:	pop    es
  41aa8b:	inc    esp
  41aa8c:	jno    0x41aaee
  41aa8e:	push   edx
  41aa8f:	ss sar cl,1
  41aa92:	sub    ebp,DWORD PTR [ecx+edx*1-0x5ce277a0]
  41aa99:	(bad)  
  41aa9a:	int    0x1e
  41aa9c:	push   es
  41aa9d:	inc    ebx
  41aa9e:	das    
  41aa9f:	mov    ds:0xad30cde,al
  41aaa4:	stos   DWORD PTR es:[edi],eax
  41aaa5:	cdq    
  41aaa6:	aas    
  41aaa7:	mov    bh,ah
  41aaa9:	(bad)  
  41aaab:	inc    esp
  41aaac:	ror    BYTE PTR [eax-0x4d5f277b],1
  41aab2:	or     bl,BYTE PTR [ebp-0x14]
  41aab5:	push   ecx
  41aab6:	rcl    DWORD PTR [ecx],0x16
  41aab9:	stos   DWORD PTR es:[edi],eax
  41aaba:	dec    ebx
  41aabb:	jg     0x41aa8f
  41aabd:	(bad)  [edx+ebp*1]
  41aac0:	jo     0x41aae1
  41aac2:	ficom  WORD PTR [eax+edi*4]
  41aac5:	sub    BYTE PTR [edx-0x19],bh
  41aac8:	xor    al,BYTE PTR [eax+edx*8-0x49c63ee4]
  41aacf:	pop    esp
  41aad0:	jno    0x41ab50
  41aad2:	int3   
  41aad3:	push   esp
  41aad4:	pop    eax
  41aad5:	fstp   st(2)
  41aad7:	repnz add ebx,edi
  41aada:	adc    ebp,DWORD PTR ds:0xb31aee6b
  41aae0:	pop    es
  41aae1:	daa    
  41aae2:	ds (bad) 
  41aae4:	enter  0xf981,0x59
  41aae8:	ss xchg edi,eax
  41aaea:	int3   
  41aaeb:	and    dh,BYTE PTR [edi-0x45]
  41aaee:	xor    DWORD PTR [edx-0x1c3bb2a2],0x3f0269bd
  41aaf8:	xor    BYTE PTR [ebp-0x2b],ch
  41aafb:	xor    al,0x9
  41aafd:	shl    BYTE PTR [eax],1
  41aaff:	rcl    bl,0xc2
  41ab02:	inc    esi
  41ab03:	fs out 0x35,al
  41ab06:	loop   0x41aae4
  41ab08:	pop    es
  41ab09:	push   ebp
  41ab0a:	loope  0x41ab1b
  41ab0c:	in     al,dx
  41ab0d:	adc    eax,0x4f4ba85d
  41ab12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab13:	imul   DWORD PTR [edi-0x1c8f67b1]
  41ab19:	push   es
  41ab1a:	xlat   BYTE PTR ds:[ebx]
  41ab1b:	cmp    ebx,esi
  41ab1d:	ror    ah,1
  41ab1f:	nop
  41ab20:	addr16 mov cl,0xb2
  41ab23:	imul   DWORD PTR [ebx]
  41ab25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab26:	fwait
  41ab27:	jb     0x41aad7
  41ab29:	das    
  41ab2a:	inc    eax
  41ab2b:	out    0x21,al
  41ab2d:	dec    esp
  41ab2e:	int    0x4
  41ab30:	jb     0x41aae3
  41ab32:	push   ebp
  41ab33:	mov    ds:0xe78dbf08,eax
  41ab38:	jecxz  0x41ab11
  41ab3a:	dec    edi
  41ab3b:	sbb    ecx,DWORD PTR [edx]
  41ab3d:	leave  
  41ab3e:	adc    DWORD PTR [edi-0x76e6c7cf],esi
  41ab44:	sbb    DWORD PTR [edx+0x49],0x1f
  41ab48:	push   ebx
  41ab49:	inc    ebp
  41ab4a:	xchg   edi,eax
  41ab4b:	out    0xbe,al
  41ab4d:	push   eax
  41ab4e:	jnp    0x41abca
  41ab50:	jle    0x41ab38
  41ab52:	test   esp,edi
  41ab54:	stos   BYTE PTR es:[edi],al
  41ab55:	call   0xdf9b80b5
  41ab5a:	aaa    
  41ab5b:	out    dx,eax
  41ab5c:	jmp    0x41aba7
  41ab5e:	shr    DWORD PTR [ecx+0x1dfe247b],1
  41ab64:	das    
  41ab65:	adc    al,0x69
  41ab67:	pop    ss
  41ab68:	les    esi,FWORD PTR [ebp-0x3a]
  41ab6b:	shr    dl,0xca
  41ab6e:	xchg   esp,eax
  41ab6f:	mov    esp,0x756347c5
  41ab74:	or     dl,al
  41ab76:	inc    ebx
  41ab77:	xor    al,0x4a
  41ab79:	into   
  41ab7a:	sahf   
  41ab7b:	sbb    al,0xde
  41ab7d:	imul   esi,DWORD PTR [eax],0x10
  41ab80:	push   cs
  41ab81:	loop   0x41abde
  41ab83:	retf   
  41ab84:	fimul  DWORD PTR [edi]
  41ab86:	jl     0x41ab21
  41ab88:	addr16 sub esp,ebp
  41ab8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab8c:	inc    ebx
  41ab8d:	retf   
  41ab8e:	mov    dl,0xc9
  41ab90:	jp     0x41ab99
  41ab92:	outs   dx,DWORD PTR ds:[esi]
  41ab93:	cmp    eax,0x5561146e
  41ab98:	rol    BYTE PTR [ebx-0x80],1
  41ab9b:	cli    
  41ab9c:	inc    edi
  41ab9d:	xchg   edi,eax
  41ab9e:	ss inc edi
  41aba0:	xchg   BYTE PTR [si],bh
  41aba3:	jg     0x41ab3d
  41aba5:	cmc    
  41aba6:	xor    dl,al
  41aba8:	js     0x41ab76
  41abaa:	mov    ah,bh
  41abac:	jnp    0x41abe7
  41abae:	push   ss
  41abaf:	ins    DWORD PTR es:[edi],dx
  41abb0:	sub    DWORD PTR [ecx],esi
  41abb2:	(bad)  
  41abb3:	pop    ds
  41abb4:	and    eax,esp
  41abb6:	scas   al,BYTE PTR es:[edi]
  41abb7:	cmp    bh,dl
  41abb9:	pop    ss
  41abba:	daa    
  41abbb:	ins    DWORD PTR es:[edi],dx
  41abbc:	jmp    0xdd864153
  41abc1:	nop
  41abc2:	sar    esp,1
  41abc4:	mov    edi,0xbcd4f95e
  41abc9:	dec    esi
  41abca:	sbb    ah,ch
  41abcc:	sub    eax,DWORD PTR [eax+0x58a06572]
  41abd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abd3:	sub    ah,BYTE PTR ds:0xade06273
  41abd9:	cmp    bl,BYTE PTR [ebx+0x26]
  41abdc:	sbb    ch,BYTE PTR [esi]
  41abde:	inc    edi
  41abdf:	dec    esi
  41abe0:	mov    edi,0x61d3125f
  41abe5:	inc    esp
  41abe6:	jg     0x41abdc
  41abe8:	aad    0x90
  41abea:	push   ecx
  41abeb:	xchg   BYTE PTR [eax+edx*4+0x79],dh
  41abef:	hlt    
  41abf0:	mov    ebx,DWORD PTR [ecx-0x7a]
  41abf3:	mov    ch,0x9b
  41abf5:	push   0x3e
  41abf7:	aas    
  41abf8:	not    ebp
  41abfa:	fdiv   QWORD PTR [eax-0x1b22a2af]
  41ac00:	inc    edi
  41ac01:	and    al,0xb5
  41ac03:	inc    edi
  41ac04:	sbb    al,0x63
  41ac06:	xchg   ebx,eax
  41ac07:	out    dx,al
  41ac08:	in     eax,dx
  41ac09:	add    ebx,esp
  41ac0b:	clc    
  41ac0c:	sbb    BYTE PTR [edi],cl
  41ac0e:	add    ch,BYTE PTR [ebp+0x4ca108e6]
  41ac14:	cmp    dl,BYTE PTR [ecx+0x19]
  41ac17:	xor    DWORD PTR [esi],0xea3f5bef
  41ac1d:	xor    edi,DWORD PTR [ecx+0x5517c7bb]
  41ac23:	inc    ebx
  41ac24:	data16 (bad) 
  41ac26:	and    esi,edi
  41ac28:	test   al,0x6
  41ac2a:	std    
  41ac2b:	add    BYTE PTR [ecx],al
  41ac2d:	or     al,0x6b
  41ac2f:	imul   edi,DWORD PTR [edi+0x0],0x6c
  41ac33:	shl    BYTE PTR [esi+0x44],1
  41ac36:	dec    ebx
  41ac37:	jp     0x41abf9
  41ac39:	arpl   WORD PTR [ecx+eiz*8+0x736899ff],ax
  41ac40:	into   
  41ac41:	xchg   DWORD PTR [ecx-0xc],edi
  41ac44:	sbb    DWORD PTR [ebx-0x6f0d4765],ebx
  41ac4a:	repz jno 0x41acb2
  41ac4d:	out    0xe8,eax
  41ac4f:	idiv   edi
  41ac51:	add    ebp,0xffffff89
  41ac54:	aas    
  41ac55:	call   0x75cb5cfe
  41ac5a:	xchg   ebp,eax
  41ac5b:	aaa    
  41ac5c:	mov    fs,ebp
  41ac5e:	fstp   TBYTE PTR [esp+edi*8]
  41ac61:	push   0x60
  41ac63:	sbb    ah,BYTE PTR [ecx+ebp*2-0x17]
  41ac67:	repz sbb ch,BYTE PTR ds:0x3c7e0417
  41ac6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac6f:	repz or edi,DWORD PTR [eax+0x13]
  41ac73:	add    al,0xb0
  41ac75:	das    
  41ac76:	mov    eax,0x9bbbf08e
  41ac7b:	pop    eax
  41ac7c:	jle    0x41ac4a
  41ac7e:	push   esi
  41ac7f:	fild   WORD PTR [ebp-0x49b70be0]
  41ac85:	push   ss
  41ac86:	fsub   DWORD PTR [esp+edi*1-0x64]
  41ac8a:	mov    fs,WORD PTR [ecx*1-0x655f10b9]
  41ac91:	xchg   al,al
  41ac93:	and    ch,0x5f
  41ac96:	xchg   ecx,eax
  41ac97:	ins    DWORD PTR es:[edi],dx
  41ac98:	imul   esi,eax,0x18101b3d
  41ac9e:	das    
  41ac9f:	adc    eax,0x2d6fb7
  41aca4:	jp     0x41acd4
  41aca6:	jge    0x41acb3
  41aca8:	inc    edi
  41aca9:	sub    BYTE PTR [esi],ah
  41acab:	(bad)  
  41acac:	aaa    
  41acad:	imul   ebx,DWORD PTR [ebp+ebp*4-0x35],0x7ea83444
  41acb5:	fnstcw WORD PTR [esp+edi*1]
  41acb8:	sub    edi,edi
  41acba:	fild   QWORD PTR [ecx+0x3f3790a6]
  41acc0:	xor    eax,0x1693dc74
  41acc5:	dec    ebx
  41acc6:	sbb    al,0xe5
  41acc8:	xlat   BYTE PTR ds:[ebx]
  41acc9:	js     0x41ad12
  41accb:	popa   
  41accc:	cmc    
  41accd:	shl    esi,0xaa
  41acd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acd1:	add    eax,0xf644dd5a
  41acd6:	add    al,0x1a
  41acd8:	mov    cl,0xf9
  41acda:	pop    ecx
  41acdb:	mov    BYTE PTR [ebx-0x1fcff8d],al
  41ace1:	xchg   ebp,eax
  41ace2:	mov    al,0xd8
  41ace5:	arpl   WORD PTR [ebp+0x35],ax
  41ace8:	pop    esi
  41ace9:	xchg   esi,eax
  41acea:	inc    ebx
  41aceb:	fsubr  DWORD PTR [ecx+edx*2+0x5a]
  41acef:	ret    0x385c
  41acf2:	fcom   QWORD PTR [ecx]
  41acf4:	retf   0x5433
  41acf7:	neg    BYTE PTR [eax-0x19d93a2b]
  41acfd:	mov    dl,0x80
  41acff:	mov    BYTE PTR [edi+0x45422131],dl
  41ad05:	push   ebx
  41ad06:	xor    DWORD PTR [ebx+0x73d62b32],0x4d514f4b
  41ad10:	xor    al,0x3e
  41ad12:	popfw  
  41ad14:	scas   eax,DWORD PTR es:[edi]
  41ad15:	in     eax,0x3e
  41ad17:	push   0xd7f70c3c
  41ad1c:	mov    ds:0xe3508e5b,eax
  41ad21:	and    ebp,esp
  41ad23:	sub    al,0xd2
  41ad25:	pop    esp
  41ad26:	scas   eax,DWORD PTR es:[edi]
  41ad27:	add    al,0x9a
  41ad29:	fcmove st,st(3)
  41ad2b:	xor    al,0x5
  41ad2d:	cmp    al,0x8f
  41ad2f:	iret   
  41ad30:	into   
  41ad31:	gs aam 0x54
  41ad34:	hlt    
  41ad35:	dec    ebx
  41ad36:	clc    
  41ad37:	repnz out 0xc9,al
  41ad3a:	jmp    0xe9651ce8
  41ad3f:	inc    ebx
  41ad40:	xor    esi,DWORD PTR [esi-0x56]
  41ad43:	mov    eax,ds:0x649054f9
  41ad48:	xchg   ebx,eax
  41ad49:	js     0x41ad9b
  41ad4b:	mov    bh,0xe2
  41ad4d:	ror    BYTE PTR [ecx-0x50],cl
  41ad50:	jge    0x41ad8c
  41ad52:	push   esi
  41ad53:	retf   0xabba
  41ad56:	loope  0x41ad95
  41ad58:	inc    edi
  41ad59:	xchg   BYTE PTR [edx+0x29fc44ee],dh
  41ad5f:	mov    edi,DWORD PTR [edi-0x1085f4ba]
  41ad65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad66:	sti    
  41ad67:	(bad)  
  41ad69:	inc    edx
  41ad6a:	mov    edx,0xfa00906d
  41ad6f:	cli    
  41ad70:	xor    al,0xfd
  41ad72:	push   edx
  41ad73:	and    DWORD PTR [ebx+esi*1],ebx
  41ad76:	fidivr DWORD PTR [edx-0x7408f62]
  41ad7c:	sub    eax,0x685b3826
  41ad81:	xchg   ebx,eax
  41ad82:	ss hlt 
  41ad84:	jmp    0x6ac1f74b
  41ad89:	adc    BYTE PTR [eax+ecx*2+0x72ad43b3],bh
  41ad90:	int    0x5f
  41ad92:	xor    BYTE PTR [ecx],ah
  41ad94:	js     0x41ad63
  41ad96:	xchg   edx,eax
  41ad97:	xor    eax,0xbf80b60b
  41ad9c:	pop    eax
  41ad9d:	clc    
  41ad9e:	sbb    eax,0x4d7f0471
  41ada3:	jns    0x41ad6d
  41ada5:	adc    BYTE PTR [esi],ah
  41ada7:	sahf   
  41ada8:	std    
  41ada9:	cmp    al,0xa
  41adab:	adc    edx,esp
  41adad:	retf   
  41adae:	xchg   esp,eax
  41adaf:	or     BYTE PTR [eax-0x46ed456a],bh
  41adb5:	pop    ebp
  41adb6:	sahf   
  41adb7:	dec    ecx
  41adb8:	jp     0x41ad5e
  41adba:	cli    
  41adbb:	fbstp  TBYTE PTR [edi+0x5f]
  41adbe:	iretw  
  41adc0:	ja     0x41adad
  41adc2:	test   eax,0x55da41c9
  41adc7:	cmp    DWORD PTR [ebx-0x5e13b0bf],ebp
  41adcd:	ins    DWORD PTR es:[edi],dx
  41adce:	cld    
  41adcf:	sbb    al,0xa5
  41add1:	pop    ebp
  41add2:	pop    edi
  41add3:	xchg   DWORD PTR [esp+ecx*2],edx
  41add6:	and    DWORD PTR [edi-0x1f],0x5e
  41adda:	xlat   BYTE PTR ds:[ebx]
  41addb:	jle    0x41ae05
  41addd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adde:	scas   eax,DWORD PTR es:[edi]
  41addf:	inc    edx
  41ade0:	(bad)  [eax+0x48]
  41ade3:	jno    0x41adb0
  41ade5:	push   cs
  41ade6:	adc    ebx,edi
  41ade8:	adc    eax,0xee2bb535
  41aded:	lahf   
  41adee:	popf   
  41adef:	dec    edx
  41adf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adf1:	mov    esi,0xb6c7a148
  41adf6:	jmp    0xe4f971b8
  41adfb:	xchg   esi,eax
  41adfc:	std    
  41adfd:	je     0x41ade1
  41adff:	jp     0x41ae21
  41ae01:	(bad)
  41ae04:	(bad)  
  41ae05:	lods   eax,DWORD PTR ds:[esi]
  41ae06:	loopne 0x41adf6
  41ae08:	stos   BYTE PTR es:[edi],al
  41ae09:	dec    edx
  41ae0a:	popa   
  41ae0b:	adc    cl,BYTE PTR [ebx+0x48]
  41ae0e:	or     cl,BYTE PTR [ebp+0x65]
  41ae11:	cs dec edx
  41ae13:	xchg   DWORD PTR [eax],ebp
  41ae15:	jmp    0x88d:0x5e41d02e
  41ae1c:	jno    0x41ada0
  41ae1e:	xchg   ecx,eax
  41ae1f:	dec    esi
  41ae20:	pop    ss
  41ae21:	mov    dh,0x52
  41ae23:	cmp    esp,DWORD PTR [ecx+ecx*4-0x4a]
  41ae27:	mov    dh,0xdf
  41ae29:	mov    bl,0x36
  41ae2b:	xchg   edx,eax
  41ae2c:	test   al,0x60
  41ae2e:	es dec esp
  41ae30:	test   DWORD PTR [ebp+0x5aa787b2],ebp
  41ae36:	test   eax,0xf3a71d67
  41ae3b:	mov    edi,0xa24d737c
  41ae40:	lods   eax,DWORD PTR ds:[esi]
  41ae41:	push   es
  41ae42:	adc    ah,BYTE PTR [ecx+ebp*4]
  41ae45:	retf   
  41ae46:	pop    ds
  41ae47:	mov    ch,0xac
  41ae49:	push   cs
  41ae4a:	inc    ebx
  41ae4b:	jecxz  0x41ae75
  41ae4d:	pop    ds
  41ae4e:	aas    
  41ae4f:	cmp    DWORD PTR [ebx+0x5302a3d6],0xb667f02f
  41ae59:	mov    bh,BYTE PTR [edi-0x58]
  41ae5c:	inc    esi
  41ae5d:	dec    edx
  41ae5e:	fdivr  DWORD PTR [esp+eax*8+0x1e7c054]
  41ae65:	jp     0x41aecf
  41ae67:	mov    bh,0xc0
  41ae69:	and    al,0x14
  41ae6b:	scas   al,BYTE PTR es:[edi]
  41ae6c:	(bad)
  41ae6f:	cmp    esi,DWORD PTR [edx-0x51]
  41ae72:	sub    BYTE PTR [eax-0x49],dl
  41ae75:	outs   dx,DWORD PTR ds:[esi]
  41ae76:	fs (bad) 
  41ae78:	push   edi
  41ae79:	inc    ebp
  41ae7a:	rep stos BYTE PTR es:[edi],al
  41ae7c:	out    dx,al
  41ae7d:	add    eax,0x73ffd8c1
  41ae82:	xchg   ebx,ebp
  41ae84:	sub    BYTE PTR [ebx],dh
  41ae86:	mov    eax,0xf9d748b0
  41ae8b:	pop    ebp
  41ae8c:	pushf  
  41ae8d:	test   BYTE PTR ds:0xb074fa68,bl
  41ae93:	test   eax,0xb3800935
  41ae98:	or     eax,0x2c23b34
  41ae9d:	(bad)  
  41ae9e:	div    BYTE PTR [ecx+0xb0c76a3]
  41aea4:	loope  0x41af17
  41aea6:	arpl   WORD PTR [edx-0x65917176],ax
  41aeac:	(bad)  
  41aead:	js     0x41af2c
  41aeaf:	cmp    al,0xc1
  41aeb1:	popa   
  41aeb2:	jge    0x41af2d
  41aeb4:	mov    ebx,0x185edcb8
  41aeb9:	inc    edx
  41aeba:	xor    eax,0x111a9a22
  41aebf:	adc    esi,DWORD PTR [esi]
  41aec1:	nop
  41aec2:	mov    bh,0x65
  41aec4:	fwait
  41aec5:	nop
  41aec6:	inc    ecx
  41aec7:	out    0x3f,al
  41aec9:	ror    BYTE PTR [ecx+0x11],1
  41aecc:	jmp    0x2467:0x47c5c0eb
  41aed3:	or     al,0x8c
  41aed5:	aad    0x32
  41aed7:	loopne 0x41aec7
  41aed9:	inc    esi
  41aeda:	mov    dl,0x3f
  41aedc:	in     al,dx
  41aedd:	gs fmul st,st(3)
  41aee0:	fprem1 
  41aee2:	loop   0x41af1b
  41aee4:	in     al,dx
  41aee5:	and    DWORD PTR [ebx],ebx
  41aee7:	or     BYTE PTR [eax],al
  41aee9:	fmul   DWORD PTR [ecx-0x72]
  41aeec:	(bad)  
  41aeed:	xlat   BYTE PTR ds:[ebx]
  41aeee:	cmp    al,0xe
  41aef0:	adc    al,0x1b
  41aef2:	test   BYTE PTR [edx+edx*8],dh
  41aef5:	mov    edi,0x6874a10e
  41aefa:	pop    ebx
  41aefb:	pop    esp
  41aefc:	aam    0x80
  41aefe:	mov    ch,BYTE PTR [edi-0x3d]
  41af01:	(bad)  
  41af02:	jo     0x41af51
  41af04:	push   edi
  41af05:	dec    esp
  41af06:	bswap  esp
  41af08:	xchg   BYTE PTR [eax-0x260b3159],bh
  41af0e:	out    0xcc,al
  41af10:	mov    BYTE PTR [edi],ah
  41af12:	pop    es
  41af13:	call   0x704a07ed
  41af18:	pushf  
  41af19:	sub    bl,BYTE PTR [edx-0x4797b26a]
  41af1f:	adc    al,0x34
  41af21:	hlt    
  41af22:	and    al,ah
  41af24:	jns    0x41af1e
  41af26:	mov    cl,BYTE PTR [edi]
  41af28:	sub    DWORD PTR [esi],edi
  41af2a:	jg     0x41af03
  41af2c:	mov    ah,0x44
  41af2e:	dec    esp
  41af2f:	mov    bh,0xff
  41af31:	cmp    edx,ebp
  41af33:	cmp    ebp,DWORD PTR ds:0x5555561f
  41af39:	call   0x2ad:0x46c4ee70
  41af40:	adc    bh,BYTE PTR [edi]
  41af42:	cmp    DWORD PTR [esi+0x3df26114],ebx
  41af48:	pop    edx
  41af49:	pminub mm0,QWORD PTR [eax]
  41af4c:	popf   
  41af4d:	ret    0xca89
  41af50:	jns    0x41af74
  41af52:	add    ebp,esp
  41af54:	xchg   ecx,eax
  41af55:	std    
  41af56:	(bad)  
  41af57:	rol    DWORD PTR [ecx+edx*2+0x5872884c],cl
  41af5e:	adc    DWORD PTR [ebp+0x524be5d8],eax
  41af64:	push   es
  41af65:	mov    al,ds:0x2a5ec29f
  41af6a:	lock xchg ebp,eax
  41af6c:	es push ds
  41af6e:	out    dx,al
  41af6f:	(bad)  
  41af71:	loopne 0x41af6b
  41af73:	fcomp  QWORD PTR [ebx]
  41af75:	mov    bh,0x16
  41af77:	mov    dh,0x9e
  41af79:	push   ecx
  41af7a:	push   edi
  41af7b:	xchg   dl,dl
  41af7d:	adc    bl,cl
  41af7f:	sub    esi,DWORD PTR [ecx-0x54129f32]
  41af85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af86:	out    dx,eax
  41af87:	rcl    ebp,cl
  41af89:	xchg   esi,eax
  41af8a:	test   eax,0xad6fc0f2
  41af8f:	adc    DWORD PTR [esi-0x46],0x423575b6
  41af96:	jne    0x41affa
  41af98:	icebp  
  41af99:	mov    edi,es
  41af9b:	inc    edx
  41af9c:	jne    0x41afc1
  41af9e:	popa   
  41af9f:	push   eax
  41afa0:	lods   al,BYTE PTR ds:[esi]
  41afa1:	test   eax,0xff37d480
  41afa6:	and    DWORD PTR ds:0xd86c1bf0,ebp
  41afac:	and    ebp,DWORD PTR [eax-0x5]
  41afaf:	ret    0x4124
  41afb2:	sub    BYTE PTR [edi-0x43],bl
  41afb5:	pusha  
  41afb6:	pop    es
  41afb7:	cld    
  41afb8:	cwde   
  41afb9:	add    BYTE PTR [edi],ch
  41afbb:	xor    DWORD PTR [edi-0x3c],0x5c
  41afbf:	jmp    0x84791852
  41afc4:	ret    
  41afc5:	mov    esi,0xd8afd1fe
  41afca:	mov    ?,edi
  41afcc:	out    0x59,al
  41afce:	cld    
  41afcf:	cmp    al,0x9f
  41afd1:	pop    ss
  41afd2:	mov    edx,0x93b6ae1f
  41afd7:	bound  ebx,QWORD PTR [ecx-0x43]
  41afda:	push   DWORD PTR [eax-0x50]
  41afdd:	jge    0x41af80
  41afdf:	cli    
  41afe0:	mov    ch,0xe7
  41afe2:	xor    al,0x56
  41afe4:	pop    ss
  41afe5:	lods   eax,DWORD PTR ds:[esi]
  41afe6:	bound  ebx,QWORD PTR [ebx+0x7e08fc3]
  41afec:	xchg   BYTE PTR [ebx+ebp*2],ch
  41afef:	mov    esp,0x49bdeb83
  41aff4:	adc    DWORD PTR [ebp+0x7e03df71],edx
  41affa:	fild   QWORD PTR [ebx+ebx*1-0x21]
  41affe:	cmp    al,0xa1
  41b000:	out    dx,eax
  41b001:	lss    ebx,FWORD PTR [ecx-0x50b72088]
  41b008:	(bad)  
  41b009:	(bad)  
  41b00a:	pop    esi
  41b00b:	jnp    0x41b07e
  41b00d:	loop   0x41aff8
  41b00f:	sub    cl,BYTE PTR [esi+0x7b]
  41b012:	dec    ebx
  41b013:	xor    eax,0xe61178df
  41b018:	sbb    DWORD PTR [eax],0x55
  41b01b:	adc    eax,0x65265de6
  41b020:	in     al,0x93
  41b022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b023:	js     0x722b03ef
  41b029:	aas    
  41b02a:	mov    bl,BYTE PTR ds:0x735cb2cd
  41b030:	stc    
  41b031:	popa   
  41b032:	push   ecx
  41b033:	push   0xffffff87
  41b035:	mov    bh,0x18
  41b037:	shl    BYTE PTR [edx],0xeb
  41b03a:	sbb    ch,al
  41b03c:	shl    DWORD PTR [edi],0x82
  41b03f:	sbb    BYTE PTR [edx-0x526f2cbf],ch
  41b045:	inc    edx
  41b046:	jnp    0x41b082
  41b048:	stos   DWORD PTR es:[edi],eax
  41b049:	gs jns 0x41b004
  41b04c:	mov    dh,0x62
  41b04e:	jno    0x41b036
  41b050:	jmp    0x1869dc7e
  41b055:	ja     0x41b085
  41b057:	xchg   edi,eax
  41b058:	mov    al,0x26
  41b05a:	fist   WORD PTR [esi+0x6d914b53]
  41b060:	stc    
  41b061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b062:	mov    ch,0xa6
  41b064:	js     0x41b091
  41b066:	jnp    0x41b078
  41b068:	mov    dh,BYTE PTR [ebp-0x1c]
  41b06b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b06d:	(bad)  
  41b06e:	cmc    
  41b06f:	pop    ebp
  41b070:	mov    bl,0xa3
  41b072:	les    ecx,FWORD PTR [ecx]
  41b074:	dec    esi
  41b075:	push   cs
  41b076:	out    0x8,al
  41b078:	or     esi,DWORD PTR [ebp+0x4990cdb4]
  41b07e:	or     al,0xa3
  41b080:	sbb    DWORD PTR [edi],0xb4d3483e
  41b086:	adc    eax,0x226fc777
  41b08b:	xchg   BYTE PTR [ebx+0x14],dl
  41b08e:	and    eax,0x5f0765d9
  41b093:	retf   
  41b094:	add    eax,edx
  41b096:	repnz or eax,DWORD PTR ds:0x5bb96e01
  41b09d:	stc    
  41b09e:	bound  edi,QWORD PTR [ecx]
  41b0a0:	arpl   WORD PTR [ebp+0x7c],cx
  41b0a3:	and    eax,0x541a3b89
  41b0a8:	pushf  
  41b0a9:	mov    ebp,0x73671f41
  41b0ae:	aaa    
  41b0af:	in     al,0x8c
  41b0b1:	sub    BYTE PTR [ebx+0x7e],ah
  41b0b4:	ds fwait
  41b0b6:	mov    DWORD PTR [edx-0x5d],0x7c0aac49
  41b0bd:	fstp   TBYTE PTR [ebx+0x65]
  41b0c0:	pop    esi
  41b0c1:	enter  0xe2ce,0xb
  41b0c5:	stos   BYTE PTR es:[edi],al
  41b0c6:	repz into 
  41b0c8:	fwait
  41b0c9:	xchg   esp,eax
  41b0ca:	mov    dh,0x57
  41b0cc:	shl    ch,1
  41b0ce:	es pop edi
  41b0d0:	popf   
  41b0d1:	ins    BYTE PTR es:[edi],dx
  41b0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0d3:	add    esp,edi
  41b0d5:	sub    al,0x72
  41b0d7:	sahf   
  41b0d8:	cmp    DWORD PTR [eax],eax
  41b0da:	hlt    
  41b0db:	cmp    al,0x62
  41b0dd:	jmp    0x41b0af
  41b0df:	aas    
  41b0e0:	jnp    0x41b14c
  41b0e2:	and    BYTE PTR [esi+0x659665f],ah
  41b0e8:	rol    DWORD PTR [edx],cl
  41b0ea:	dec    edi
  41b0eb:	daa    
  41b0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ed:	aas    
  41b0ee:	inc    esi
  41b0ef:	xor    al,0xcc
  41b0f1:	jns    0x41b145
  41b0f3:	or     bl,BYTE PTR [ebx+0x67]
  41b0f6:	or     al,0xce
  41b0f8:	add    edx,DWORD PTR [ecx+0x23746934]
  41b0fe:	stos   DWORD PTR es:[edi],eax
  41b0ff:	hlt    
  41b100:	fs into 
  41b102:	bnd ret 0x5181
  41b106:	pop    ecx
  41b107:	dec    ebx
  41b108:	push   ds
  41b109:	shl    DWORD PTR [ecx+0x62],1
  41b10c:	(bad)  
  41b10d:	iret   
  41b10e:	mov    WORD PTR [edx-0x38],cs
  41b111:	mov    ah,bh
  41b113:	mul    DWORD PTR [esi+0xa3b7305]
  41b119:	mov    ecx,DWORD PTR [ebp-0x18]
  41b11c:	test   esp,ebx
  41b11e:	push   edx
  41b11f:	es ja  0x41b156
  41b122:	cli    
  41b123:	pop    ds
  41b124:	sbb    eax,0xb9ab8a94
  41b129:	inc    ebp
  41b12a:	stc    
  41b12b:	retf   
  41b12c:	ficom  WORD PTR [edx-0x26]
  41b12f:	pop    esp
  41b130:	js     0x41b10b
  41b132:	mov    ds:0xf227c562,al
  41b137:	inc    ebp
  41b138:	imul   esp
  41b13a:	mov    ds:0x1e54d3ec,eax
  41b13f:	xchg   ecx,eax
  41b140:	push   edx
  41b141:	pop    esp
  41b142:	jno    0x41b0fc
  41b144:	loop   0x41b12f
  41b146:	scas   eax,DWORD PTR es:[edi]
  41b147:	rol    DWORD PTR [esp+eiz*8],cl
  41b14a:	add    eax,0x1dc31b5e
  41b150:	fwait
  41b151:	inc    eax
  41b152:	xor    DWORD PTR [ecx-0x16],esp
  41b155:	add    edi,0xfffffffb
  41b158:	imul   ebx,DWORD PTR [ebp+0x518bda48],0xd
  41b15f:	pop    esi
  41b160:	xchg   ebp,eax
  41b161:	popf   
  41b162:	sbb    BYTE PTR [ecx+0x2],cl
  41b165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b166:	aad    0xec
  41b168:	ins    DWORD PTR es:[edi],dx
  41b169:	add    eax,0x9a15602f
  41b16e:	(bad)  
  41b16f:	loope  0x41b1e6
  41b171:	fnsave cs:[eax+0x29]
  41b175:	retf   0x2f33
  41b178:	and    BYTE PTR [ecx+edi*8+0x189a9ab7],ah
  41b17f:	push   ss
  41b180:	imul   BYTE PTR [edi+ecx*2-0x522ad4ff]
  41b187:	outs   dx,BYTE PTR ds:[esi]
  41b188:	push   ss
  41b189:	mov    esp,0x73836b12
  41b18e:	xor    eax,DWORD PTR [edx+0x47]
  41b191:	cs fs pop ebp
  41b194:	dec    ebx
  41b195:	dec    esp
  41b196:	lods   al,BYTE PTR ds:[esi]
  41b197:	in     eax,dx
  41b198:	ror    DWORD PTR [edi+0xe],cl
  41b19b:	push   ebp
  41b19c:	adc    DWORD PTR [edi],0x5e
  41b19f:	mov    dl,0xe6
  41b1a1:	dec    edi
  41b1a2:	mov    bl,0xf7
  41b1a4:	cs scas eax,DWORD PTR es:[edi]
  41b1a6:	adc    BYTE PTR ds:0xa9c7577e,cl
  41b1ac:	aad    0x72
  41b1ae:	inc    esp
  41b1af:	push   0x106bce1
  41b1b4:	std    
  41b1b5:	out    0x5e,eax
  41b1b7:	loopne 0x41b17a
  41b1b9:	das    
  41b1ba:	retf   
  41b1bb:	out    0x1b,eax
  41b1bd:	stos   BYTE PTR es:[edi],al
  41b1be:	mov    ds:0xdbe480f1,eax
  41b1c3:	mov    esp,0xea853855
  41b1c8:	ficom  WORD PTR [esi+0x66eace3c]
  41b1ce:	leave  
  41b1cf:	push   edx
  41b1d0:	repnz lock cmc 
  41b1d3:	fwait
  41b1d4:	dec    edx
  41b1d5:	fld    QWORD PTR [ecx]
  41b1d7:	sub    ah,BYTE PTR [eax]
  41b1d9:	jp     0x41b194
  41b1db:	into   
  41b1dc:	push   esp
  41b1dd:	es xor al,0x6a
  41b1e0:	cmp    ah,BYTE PTR [esi+0x55eaf54c]
  41b1e6:	lods   eax,DWORD PTR ds:[esi]
  41b1e7:	mov    ch,0x23
  41b1e9:	rol    DWORD PTR [eax-0x58a18910],cl
  41b1ef:	xor    DWORD PTR [ebp+0x45d3fe05],ebp
  41b1f5:	dec    esp
  41b1f6:	push   edi
  41b1f7:	push   edi
  41b1f8:	pop    edi
  41b1f9:	ret    
  41b1fa:	(bad)  
  41b1fb:	jno    0x41b195
  41b1fd:	shr    BYTE PTR [esi-0x366767ac],0xf8
  41b204:	bound  edi,QWORD PTR [ebx]
  41b206:	xchg   ecx,eax
  41b207:	adc    al,0x48
  41b209:	and    al,0xa3
  41b20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b20c:	push   eax
  41b20d:	bound  esi,QWORD PTR [ecx+0x29d62d6b]
  41b213:	push   esp
  41b214:	retf   
  41b215:	leave  
  41b216:	pop    ds
  41b217:	mov    eax,ds:0x8399c98b
  41b21c:	inc    ebp
  41b21d:	enter  0xfab9,0xf4
  41b221:	ss ret 
  41b223:	pop    ds
  41b224:	pop    ebp
  41b225:	into   
  41b226:	ja     0x41b279
  41b228:	stc    
  41b229:	sbb    bh,BYTE PTR [edi-0x6892d870]
  41b22f:	fwait
  41b230:	jno    0x41b2a0
  41b232:	daa    
  41b233:	icebp  
  41b234:	es pusha 
  41b236:	mov    esp,0xb0ed66da
  41b23b:	inc    DWORD PTR [edx]
  41b23d:	mov    esp,0x2161151
  41b242:	nop
  41b243:	xchg   DWORD PTR [esi-0x3119baf5],esp
  41b249:	add    ecx,DWORD PTR [eax-0x56]
  41b24c:	jb     0x41b1e5
  41b24e:	push   edx
  41b24f:	es inc ebp
  41b251:	sub    bl,BYTE PTR [ebp-0x303dc9ce]
  41b257:	ror    DWORD PTR [edx*8+0x1a57671d],1
  41b25e:	add    al,0xc9
  41b260:	or     BYTE PTR [edi-0x6],dh
  41b263:	js     0x41b257
  41b265:	jle    0x41b2d3
  41b267:	shl    ebp,0x27
  41b26a:	mov    ebx,0xed4f1b4e
  41b26f:	out    dx,eax
  41b270:	sub    DWORD PTR ds:0x48a73062,0xffffff8a
  41b277:	int3   
  41b278:	sbb    edi,0x89c64192
  41b27e:	push   0x38
  41b280:	adc    dh,BYTE PTR [esi+0x616f3486]
  41b286:	add    al,0x28
  41b288:	and    al,0x7f
  41b28a:	jno    0x41b247
  41b28c:	test   eax,0x16791e77
  41b291:	lods   eax,DWORD PTR ds:[esi]
  41b292:	mov    edx,0x343d040f
  41b297:	jg     0x41b26e
  41b299:	jl     0x41b2eb
  41b29b:	jecxz  0x41b270
  41b29d:	jp     0x41b30a
  41b29f:	retf   
  41b2a0:	adc    edi,DWORD PTR ds:0x6f84a5e6
  41b2a6:	cmp    dl,BYTE PTR [esi+edi*4+0x15]
  41b2aa:	xchg   ebp,eax
  41b2ab:	les    esi,FWORD PTR [ebx+0x3e]
  41b2ae:	(bad)  
  41b2af:	jno    0x41b249
  41b2b1:	push   ss
  41b2b2:	sbb    al,0x1a
  41b2b4:	fnsave [edx]
  41b2b6:	sahf   
  41b2b7:	sbb    eax,0xdca87330
  41b2bc:	aas    
  41b2bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2be:	push   0xffffff99
  41b2c0:	inc    ebp
  41b2c1:	xchg   ebp,eax
  41b2c2:	jno    0x41b2d8
  41b2c4:	dec    ecx
  41b2c5:	call   0x1d72:0xcfb5fd50
  41b2cc:	jbe    0x41b2b8
  41b2ce:	lds    edx,FWORD PTR [edx+0x50c2541c]
  41b2d4:	push   eax
  41b2d5:	leave  
  41b2d6:	push   esi
  41b2d7:	stc    
  41b2d8:	pop    edx
  41b2d9:	popa   
  41b2da:	cmc    
  41b2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2dc:	mov    cl,0xb9
  41b2de:	jmp    0x41b2b8
  41b2e0:	dec    edx
  41b2e1:	sub    esi,ebp
  41b2e3:	cli    
  41b2e4:	retf   
  41b2e5:	jmp    0x523f22fa
  41b2ea:	dec    DWORD PTR [ecx-0x141eb42b]
  41b2f0:	adc    dh,al
  41b2f2:	push   ds
  41b2f3:	into   
  41b2f4:	(bad)  
  41b2f5:	in     eax,0x35
  41b2f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2f8:	mov    cl,0x2b
  41b2fa:	loopne 0x41b333
  41b2fc:	dec    esi
  41b2fd:	jmp    0xdd03:0x934bec04
  41b304:	sub    al,0xd2
  41b306:	jp     0x41b2b4
  41b308:	sbb    BYTE PTR [esp+edx*8-0x55356e50],ah
  41b30f:	push   esi
  41b310:	arpl   WORD PTR [edx+0x2055f0a9],sp
  41b316:	cmp    DWORD PTR [ebp+0x6318e50a],ebp
  41b31c:	dec    esp
  41b31d:	sti    
  41b31e:	mov    al,0xf4
  41b320:	push   es
  41b321:	fisttp WORD PTR [edi-0x561d17e2]
  41b327:	pop    edi
  41b328:	xchg   esi,eax
  41b329:	lea    ebp,[edi-0x5fa551fe]
  41b32f:	jno    0x41b365
  41b331:	ror    ebx,1
  41b333:	icebp  
  41b334:	aas    
  41b335:	pop    eax
  41b336:	dec    ebx
  41b337:	xchg   ebx,eax
  41b338:	jg     0x41b388
  41b33a:	sete   BYTE PTR [eax]
  41b33d:	sti    
  41b33e:	(bad)  [ecx]
  41b340:	(bad)  
  41b341:	scas   eax,DWORD PTR es:[di]
  41b343:	mov    eax,ds:0x754b6b8e
  41b348:	sub    cl,BYTE PTR [eax+0x37]
  41b34b:	rcr    ebx,0x33
  41b34e:	jnp    0x41b377
  41b350:	mov    al,ds:0x529ffa4a
  41b355:	adc    esp,ecx
  41b357:	sahf   
  41b358:	xchg   ebx,eax
  41b359:	sahf   
  41b35a:	mov    esi,0x5a2ca28a
  41b35f:	mov    ch,0xcb
  41b361:	mov    ss,WORD PTR [edi+0x27]
  41b364:	cmp    cl,BYTE PTR [edx+0x6d9cc985]
  41b36a:	dec    esi
  41b36b:	retf   0x9779
  41b36e:	dec    esi
  41b36f:	mov    DWORD PTR [ecx+edi*4+0x73aca26c],ebx
  41b376:	jno    0x41b3f6
  41b378:	jae    0x41b355
  41b37a:	inc    edi
  41b37b:	sub    edx,DWORD PTR [edx]
  41b37d:	es ins DWORD PTR es:[edi],dx
  41b37f:	fbstp  TBYTE PTR [esi+0x28]
  41b382:	add    DWORD PTR [ebx-0x43b52b0e],esi
  41b388:	cli    
  41b389:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41b38b:	stos   DWORD PTR es:[edi],eax
  41b38c:	push   ebp
  41b38d:	or     al,0x2c
  41b38f:	outs   dx,DWORD PTR ds:[esi]
  41b390:	add    DWORD PTR [edi-0x1797fd5e],0xffffff88
  41b397:	mov    edx,0xcf38198c
  41b39d:	push   eax
  41b39e:	jl     0x41b359
  41b3a0:	dec    edx
  41b3a1:	test   al,0xab
  41b3a3:	out    0xc9,al
  41b3a5:	test   ebx,ecx
  41b3a7:	sti    
  41b3a8:	push   0x52be10ec
  41b3ad:	test   ebp,0x29fb4099
  41b3b3:	in     eax,dx
  41b3b4:	aas    
  41b3b5:	loopne 0x41b429
  41b3b7:	loopne 0x41b405
  41b3b9:	jle    0x41b433
  41b3bb:	xor    DWORD PTR [ebp-0x2d9f50f4],ebp
  41b3c1:	dec    esp
  41b3c2:	mov    cl,0x7
  41b3c4:	ret    0x1117
  41b3c7:	bound  ecx,QWORD PTR [esi+ebp*2]
  41b3ca:	fimul  DWORD PTR [ecx-0x22]
  41b3cd:	jp     0x41b360
  41b3cf:	and    eax,0x7f9fbe9b
  41b3d4:	mov    WORD PTR [edi-0x76],gs
  41b3d7:	aam    0x1a
  41b3d9:	rol    BYTE PTR [ecx-0x37],0xa4
  41b3dd:	popf   
  41b3de:	les    ebp,FWORD PTR [eax+0x6811d106]
  41b3e4:	lock xor eax,0x8431303c
  41b3ea:	xlat   BYTE PTR ds:[ebx]
  41b3eb:	ins    DWORD PTR es:[edi],dx
  41b3ec:	mov    eax,ecx
  41b3ee:	cmp    eax,0x74a27cc7
  41b3f3:	push   ebp
  41b3f4:	add    eax,0xc5ee8f72
  41b3f9:	frstor [edx*4+0x6d6ea708]
  41b400:	ds (bad) 
  41b402:	dec    eax
  41b403:	dec    edi
  41b404:	daa    
  41b405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b406:	mov    ds:0x90e67a19,eax
  41b40b:	mov    edx,0xd18ff09e
  41b410:	cli    
  41b411:	pop    esp
  41b412:	aam    0x7b
  41b414:	pop    esp
  41b415:	or     ebp,DWORD PTR [eax-0x79d47498]
  41b41b:	sub    bl,cl
  41b41d:	xlat   BYTE PTR ds:[ebx]
  41b41e:	sub    eax,0xa9fe258b
  41b423:	sahf   
  41b424:	in     al,0x22
  41b426:	(bad)  
  41b427:	stc    
  41b428:	int3   
  41b429:	jecxz  0x41b426
  41b42b:	jno    0x41b3ff
  41b42d:	jb     0x41b456
  41b42f:	stc    
  41b430:	test   al,0x44
  41b432:	xor    BYTE PTR [ecx],0xb6
  41b435:	sti    
  41b436:	retf   
  41b437:	or     al,0xf4
  41b439:	enter  0xbcdb,0xe7
  41b43d:	add    BYTE PTR [ecx],al
  41b43f:	adc    esp,DWORD PTR [ebp+0x39a475ed]
  41b445:	pop    esp
  41b446:	std    
  41b447:	push   eax
  41b448:	jle    0x41b44f
  41b44a:	repnz add eax,0xaf7bd2e
  41b450:	data16 ins BYTE PTR es:[edi],dx
  41b452:	cmp    ecx,DWORD PTR [esi+0x24cbc74f]
  41b458:	aaa    
  41b459:	sub    DWORD PTR [esi-0x180203ec],edi
  41b45f:	(bad)  
  41b460:	xchg   ebx,eax
  41b461:	iret   
  41b462:	inc    esp
  41b463:	(bad)  
  41b464:	push   ecx
  41b465:	push   edi
  41b466:	or     cl,BYTE PTR [ecx-0x52]
  41b469:	ret    0x319c
  41b46c:	jge    0x41b491
  41b46e:	mov    edi,0x1cefa280
  41b473:	xchg   dl,cl
  41b475:	mov    esi,0x3a92db22
  41b47a:	test   DWORD PTR [ecx+0x6d],eax
  41b47d:	mov    BYTE PTR [ebp+eiz*4-0x30],ch
  41b481:	add    eax,0x8114bda0
  41b486:	fwait
  41b487:	shr    BYTE PTR [edi+0x627d877b],1
  41b48d:	lods   eax,DWORD PTR ds:[esi]
  41b48e:	pop    esp
  41b48f:	cmp    ebx,DWORD PTR [edx+esi*1-0x50e3df46]
  41b496:	mov    ch,BYTE PTR [esi]
  41b498:	out    dx,al
  41b499:	add    eax,0xc4420ea2
  41b49e:	xchg   ebp,eax
  41b49f:	ret    
  41b4a0:	pop    edx
  41b4a1:	pop    ecx
  41b4a2:	js     0x41b516
  41b4a4:	xchg   edi,eax
  41b4a5:	movaps xmm7,XMMWORD PTR [esp+edx*2-0x516e4dd0]
  41b4ad:	and    BYTE PTR [ebp-0x51],ah
  41b4b0:	jbe    0x41b4cc
  41b4b2:	mov    dl,0x0
  41b4b4:	(bad)  
  41b4b6:	cwde   
  41b4b7:	ss int3 
  41b4b9:	mov    cl,0xc4
  41b4bb:	std    
  41b4bc:	and    ch,BYTE PTR [ecx*1-0x889aa33]
  41b4c3:	adc    eax,0x3ae6a9d0
  41b4c8:	pop    ds
  41b4c9:	ret    
  41b4ca:	jb     0x41b4de
  41b4cc:	mov    al,ds:0x116ec652
  41b4d1:	sub    eax,0x30564a5a
  41b4d6:	je     0x41b4a1
  41b4d8:	scas   al,BYTE PTR es:[edi]
  41b4d9:	std    
  41b4da:	ss xchg ebx,eax
  41b4dc:	aaa    
  41b4dd:	add    DWORD PTR [esi-0x5ad594e1],ebp
  41b4e3:	int3   
  41b4e4:	out    0x2b,eax
  41b4e6:	mov    bh,0xbc
  41b4e8:	js     0x41b504
  41b4ea:	icebp  
  41b4eb:	cld    
  41b4ec:	pop    ds
  41b4ed:	mov    BYTE PTR [eax+0x222aaf1b],bh
  41b4f3:	mov    fs,WORD PTR [eax]
  41b4f5:	lahf   
  41b4f6:	stc    
  41b4f7:	push   cs
  41b4f8:	sbb    edi,eax
  41b4fa:	daa    
  41b4fb:	enter  0x6722,0x6a
  41b4ff:	lahf   
  41b500:	pop    ecx
  41b501:	scas   al,BYTE PTR es:[edi]
  41b502:	das    
  41b503:	stc    
  41b504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b505:	xchg   ecx,eax
  41b506:	push   edi
  41b507:	mov    bl,0x87
  41b509:	in     eax,0xb6
  41b50b:	mov    ds:0x5f95993b,eax
  41b510:	mov    eax,ds:0xe1f9fab8
  41b515:	xchg   esp,eax
  41b516:	icebp  
  41b517:	aas    
  41b518:	cmp    bh,BYTE PTR [edi+0x54a2351b]
  41b51e:	sar    DWORD PTR [edi],cl
  41b520:	cmp    DWORD PTR [ebx],ebp
  41b522:	or     DWORD PTR [edi-0x49],eax
  41b525:	out    0xef,eax
  41b527:	(bad)  
  41b528:	sbb    eax,0xe1ceea01
  41b52d:	add    al,0xb2
  41b52f:	ja     0x41b4f1
  41b531:	jge    0x41b560
  41b533:	inc    eax
  41b534:	push   es
  41b535:	or     eax,0x9a380691
  41b53a:	jbe    0x41b4ce
  41b53c:	scas   eax,DWORD PTR es:[edi]
  41b53d:	jmp    0x41b5b8
  41b53f:	push   cs
  41b540:	punpckhwd mm0,QWORD PTR [edi+esi*1+0x3b58b693]
  41b548:	aaa    
  41b549:	mov    ds:0x3bc518e5,al
  41b54e:	and    DWORD PTR [esi-0x40],ebp
  41b551:	call   0x4bdbd9f3
  41b556:	mov    ds:0xd1366bd6,al
  41b55b:	and    bl,BYTE PTR [ebp+esi*2+0x4f5cc69]
  41b562:	ret    
  41b563:	retf   0xef23
  41b566:	mov    fs,ebp
  41b568:	mov    ebp,0xbf83c47b
  41b56d:	push   ebx
  41b56e:	pop    eax
  41b56f:	mov    ah,0x92
  41b571:	clc    
  41b572:	jmp    0x2e1a43e1
  41b577:	push   edx
  41b578:	dec    esi
  41b579:	dec    ecx
  41b57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b57b:	scas   al,BYTE PTR es:[edi]
  41b57c:	jbe    0x41b5f5
  41b57e:	and    eax,0xd84981a
  41b583:	jns    0x41b53c
  41b585:	dec    esp
  41b586:	pop    ss
  41b587:	adc    ah,ah
  41b589:	sbb    BYTE PTR [ebp+0xd576ee4],0xeb
  41b590:	mov    eax,ds:0xb07b2725
  41b595:	out    dx,eax
  41b596:	jp     0x41b5ed
  41b598:	scas   eax,DWORD PTR es:[edi]
  41b599:	adc    eax,0xc3e287b0
  41b59e:	sbb    bh,BYTE PTR [ebx+0x8164c13]
  41b5a4:	inc    ebx
  41b5a5:	cwde   
  41b5a6:	les    ebp,FWORD PTR [edi]
  41b5a8:	cs push edi
  41b5aa:	or     al,0x3e
  41b5ac:	mov    dl,0x3b
  41b5ae:	nop
  41b5af:	cs sub cl,0x20
  41b5b3:	jecxz  0x41b61c
  41b5b5:	mov    cl,0x9c
  41b5b8:	ret    
  41b5b9:	xchg   esi,eax
  41b5ba:	mov    edi,esi
  41b5bc:	or     eax,0x4c382878
  41b5c1:	add    al,0x9b
  41b5c3:	mov    dh,0xee
  41b5c5:	daa    
  41b5c6:	xchg   ecx,eax
  41b5c7:	adc    al,BYTE PTR [eax-0x11]
  41b5ca:	xor    eax,0xb59973b9
  41b5cf:	mov    bl,0xa5
  41b5d1:	or     esi,0x6a
  41b5d4:	xchg   edi,eax
  41b5d5:	pop    eax
  41b5d6:	add    al,0x3
  41b5d8:	es in  eax,dx
  41b5da:	mov    bh,0x64
  41b5dc:	add    al,0x2c
  41b5de:	(bad)  
  41b5df:	xchg   ebp,eax
  41b5e0:	xchg   edx,eax
  41b5e1:	adc    eax,esp
  41b5e3:	push   ebp
  41b5e4:	mov    ds:0x9ce1f30a,al
  41b5e9:	fild   WORD PTR [edi+0x53]
  41b5ec:	cli    
  41b5ed:	mov    eax,0xb83caaa3
  41b5f2:	fstp   DWORD PTR [ebx]
  41b5f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5f5:	es mov al,0xaf
  41b5f8:	xchg   edi,eax
  41b5f9:	pop    ds
  41b5fa:	cld    
  41b5fb:	addr16 jno 0x41b5a6
  41b5fe:	out    dx,al
  41b5ff:	stos   DWORD PTR es:[di],eax
  41b601:	mov    WORD PTR [edi-0x47],cs
  41b604:	and    al,0x95
  41b606:	fcmovu st,st(6)
  41b608:	shr    DWORD PTR [ebp+0x46],1
  41b60b:	cmp    al,0xb8
  41b60d:	outs   dx,BYTE PTR ds:[esi]
  41b60e:	scas   eax,DWORD PTR es:[edi]
  41b60f:	int    0x64
  41b611:	or     eax,0xfe1297a5
  41b616:	jl     0x41b5fa
  41b618:	(bad)  
  41b619:	or     eax,0x5534ecb1
  41b61e:	xchg   DWORD PTR [esi+0x46c91a0c],edx
  41b624:	out    dx,eax
  41b625:	mov    ch,0xea
  41b627:	mov    dl,0x3a
  41b629:	out    0x1a,eax
  41b62b:	push   0xffffff82
  41b62d:	mov    DWORD PTR [ebp+0x2a],ebp
  41b630:	mov    edi,DWORD PTR [ebp+0x5b11fb71]
  41b636:	add    eax,0x3d406f1e
  41b63b:	pop    ecx
  41b63c:	pushf  
  41b63d:	mov    edx,0x16242507
  41b642:	out    0x8b,eax
  41b644:	push   ebp
  41b645:	mov    al,0x81
  41b647:	ror    ebp,0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a3ff
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a403
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a407
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a40b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a40f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a413
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42977b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a41b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a3e3
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429a9f
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a3eb
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a3ef
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a3f3
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a3f7
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	ror    DWORD PTR [ebx-0x4400a068],cl
  41bf7a:	stc    
  41bf7b:	add    BYTE PTR [ebx-0x7c7ca327],0xa7
  41bf82:	sbb    eax,0x29d185d0
  41bf87:	paddq  mm1,mm6
  41bf8a:	inc    edi
  41bf8b:	enter  0xac27,0xf9
  41bf8f:	call   0x3577:0x43fdfe1
  41bf96:	mov    bh,BYTE PTR [eax]
  41bf98:	in     al,0x48
  41bf9a:	mov    bl,0x56
  41bf9c:	int    0xd4
  41bf9e:	add    ch,BYTE PTR [ebx+edx*2-0x6a9689da]
  41bfa5:	mov    ebx,0xdcb5fbdf
  41bfaa:	inc    esp
  41bfab:	or     BYTE PTR [ebp+0x1b],ah
  41bfae:	add    DWORD PTR [ebx-0x61],ebx
  41bfb1:	push   0x70
  41bfb3:	cmp    esi,DWORD PTR [ebp+0x3803aa98]
  41bfb9:	xor    edi,DWORD PTR [eax+eax*2+0x19ef192]
  41bfc0:	mov    bl,ch
  41bfc2:	jno    0x41bfcb
  41bfc4:	cmp    ecx,DWORD PTR [esi+edi*8-0x7f2e6097]
  41bfcb:	popf   
  41bfcc:	adc    eax,0x97ab640
  41bfd1:	sub    bl,BYTE PTR [edi+0x52]
  41bfd4:	mov    ebx,0xb8289bf7
  41bfd9:	jae    0x41bfdc
  41bfdb:	js     0x41bf79
  41bfdd:	test   bl,dh
  41bfdf:	cmp    al,0x54
  41bfe1:	xor    eax,0xb08876d6
  41bfe6:	mov    DWORD PTR [edx-0x46f59b03],eax
  41bfec:	jb     0x41bfff
  41bfee:	loop   0x41bfa4
  41bff0:	xchg   ebp,eax
  41bff1:	sbb    al,0xdb
  41bff3:	pop    esi
  41bff4:	xor    al,0x80
  41bff6:	sbb    eax,0xc3d7e969
  41bffb:	or     ebp,esi
  41bffd:	adc    DWORD PTR [esi],ecx
  41bfff:	push   ds
  41c000:	adc    DWORD PTR [edi+eiz*2-0xd],0x24
  41c005:	add    BYTE PTR [esi],ah
  41c007:	sub    dl,cl
  41c009:	outs   dx,BYTE PTR ds:[esi]
  41c00a:	cmp    al,0xab
  41c00c:	test   bh,bh
  41c00e:	mul    dl
  41c010:	(bad)  
  41c011:	mov    dh,0xe9
  41c013:	ret    
  41c014:	ja     0x41c07c
  41c016:	add    eax,0x4fff6aff
  41c01b:	mov    eax,0xd28cef1b
  41c020:	xchg   edi,eax
  41c021:	fistp  QWORD PTR [si-0x6e8e]
  41c026:	xchg   edi,eax
  41c027:	sub    eax,DWORD PTR [esi]
  41c029:	sub    ch,BYTE PTR [eax-0x54b8983a]
  41c02f:	cmp    BYTE PTR [edx-0x20],ah
  41c032:	shl    BYTE PTR [edx-0x3cec3888],0x9b
  41c039:	or     DWORD PTR cs:[eax-0x5f8bdf83],edx
  41c040:	mov    edi,DWORD PTR [ebp-0x2be23aec]
  41c046:	inc    ebp
  41c047:	lods   eax,DWORD PTR ds:[esi]
  41c048:	xor    ebp,DWORD PTR [ecx]
  41c04a:	pop    ebx
  41c04b:	ret    0x5099
  41c04e:	dec    edx
  41c04f:	jnp    0x41c078
  41c051:	out    0x1d,eax
  41c053:	and    BYTE PTR [edx],al
  41c055:	dec    esp
  41c056:	mov    ch,0x63
  41c058:	pusha  
  41c059:	pop    edi
  41c05a:	adc    eax,0x55c5b4d5
  41c05f:	and    ebp,DWORD PTR ss:[esi+0x6b80ad16]
  41c066:	mov    edx,0x7d44b5b
  41c06b:	cmc    
  41c06c:	push   ebp
  41c06d:	jp     0x41bffb
  41c06f:	scas   eax,DWORD PTR es:[edi]
  41c070:	mov    ch,0x82
  41c072:	xor    eax,0x68ac0c1e
  41c077:	into   
  41c078:	aam    0x56
  41c07a:	mov    edx,0x9b0b5f15
  41c07f:	sub    DWORD PTR [bx+si-0x35],edi
  41c083:	push   esp
  41c084:	in     al,0x27
  41c086:	push   ecx
  41c087:	adc    eax,0xff45db1e
  41c08c:	xchg   edx,eax
  41c08d:	sub    al,0xfb
  41c08f:	mov    dh,BYTE PTR [ebp-0x66]
  41c092:	mov    ah,0xdb
  41c094:	in     al,dx
  41c095:	(bad)  
  41c096:	push   esi
  41c097:	add    al,0x2
  41c099:	mov    dh,BYTE PTR [edx]
  41c09b:	shl    DWORD PTR [edx+0x7774a7c6],cl
  41c0a1:	jmp    0x41c090
  41c0a3:	mov    dh,0x61
  41c0a5:	nop
  41c0a6:	lods   al,BYTE PTR ds:[esi]
  41c0a7:	je     0x41c0dd
  41c0a9:	push   cs
  41c0aa:	int3   
  41c0ab:	push   ds
  41c0ac:	or     al,0x34
  41c0ae:	imul   ebp,DWORD PTR [ecx],0x7c06e34b
  41c0b4:	or     eax,0x76e10d5a
  41c0b9:	xchg   esp,eax
  41c0ba:	push   0x25f22821
  41c0bf:	pop    eax
  41c0c0:	sti    
  41c0c1:	aas    
  41c0c2:	pushf  
  41c0c3:	in     eax,0xa3
  41c0c5:	and    dl,BYTE PTR [eax+0x7c]
  41c0c8:	add    al,0xcc
  41c0ca:	and    eax,0xfa9b3f82
  41c0cf:	push   esp
  41c0d0:	mov    eax,ds:0xd1684f5
  41c0d5:	push   0xe689add7
  41c0da:	push   0x5d
  41c0dc:	pop    es
  41c0dd:	popf   
  41c0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0df:	bound  eax,QWORD PTR [ecx+0x646ed6dc]
  41c0e5:	lea    ebx,[ecx-0x16]
  41c0e8:	je     0x41c0e7
  41c0ea:	ins    BYTE PTR es:[edi],dx
  41c0eb:	cmp    eax,0x35e44104
  41c0f0:	push   ds
  41c0f1:	stos   BYTE PTR es:[edi],al
  41c0f2:	ins    DWORD PTR es:[edi],dx
  41c0f3:	int3   
  41c0f4:	sub    al,ah
  41c0f6:	pop    ss
  41c0f7:	jnp    0x41c0f2
  41c0f9:	pop    ecx
  41c0fa:	fs pop ebx
  41c0fc:	(bad)  
  41c0fd:	fiadd  DWORD PTR [edi]
  41c0ff:	shl    BYTE PTR [ebx+ebp*8],0x60
  41c103:	fcom   DWORD PTR [edi-0x50d8d71]
  41c109:	or     BYTE PTR [edi+ebx*1-0x7],bh
  41c10d:	xchg   ecx,eax
  41c10e:	int3   
  41c10f:	add    al,0x8a
  41c111:	cmp    DWORD PTR [ebx-0x74],ebp
  41c114:	stos   BYTE PTR es:[edi],al
  41c115:	aam    0x2c
  41c117:	out    dx,al
  41c118:	add    al,BYTE PTR [edx+0x4c0473a6]
  41c11e:	mov    al,0xf6
  41c120:	fs xor al,0xe7
  41c123:	shr    DWORD PTR [edi-0x2d5116cf],cl
  41c129:	pop    edx
  41c12a:	clc    
  41c12b:	das    
  41c12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c12d:	sbb    eax,0x8eed5aaa
  41c132:	dec    esp
  41c133:	cmp    bl,BYTE PTR [edx-0x5a6ffea8]
  41c139:	retf   
  41c13a:	push   ecx
  41c13b:	mov    ecx,0x672176e4
  41c140:	test   eax,0xd6a50cef
  41c145:	ins    BYTE PTR es:[edi],dx
  41c146:	inc    esi
  41c147:	sar    BYTE PTR ds:0x88b01411,cl
  41c14d:	push   esi
  41c14e:	dec    edi
  41c14f:	popa   
  41c150:	jge    0x41c1b9
  41c152:	(bad)
  41c155:	and    esi,edx
  41c157:	loop   0x41c13b
  41c159:	(bad)  
  41c15a:	mov    ax,0xd2b8
  41c15e:	pop    ebx
  41c15f:	outs   dx,BYTE PTR ds:[esi]
  41c160:	cmp    edx,DWORD PTR [ebx]
  41c162:	adc    BYTE PTR [eax],cl
  41c164:	dec    ebx
  41c165:	jbe    0x41c17c
  41c167:	sbb    DWORD PTR [edx+edi*8+0x11],edi
  41c16b:	(bad)  
  41c16c:	call   0xe4a9b76c
  41c171:	cwde   
  41c172:	leave  
  41c173:	inc    ebp
  41c174:	clc    
  41c175:	push   ebp
  41c176:	es shr dl,cl
  41c179:	push   es
  41c17a:	enter  0x8614,0x64
  41c17e:	dec    edi
  41c17f:	jle    0x41c12b
  41c181:	and    BYTE PTR [esi+0x23],dl
  41c184:	aam    0x68
  41c186:	inc    edx
  41c187:	sti    
  41c188:	out    dx,eax
  41c189:	pop    es
  41c18a:	jge    0x41c182
  41c18c:	mov    dh,0x86
  41c18e:	popa   
  41c18f:	in     eax,dx
  41c190:	jge    0x41c13b
  41c192:	in     al,0x98
  41c194:	xor    bl,BYTE PTR [edi+0x39]
  41c197:	mov    DWORD PTR [eax+0x45b4b5de],edi
  41c19d:	mov    ds:0xff6d62b4,eax
  41c1a2:	jmp    0xb973db70
  41c1a7:	cmp    ah,BYTE PTR [esi+0x6c]
  41c1aa:	push   ebx
  41c1ab:	imul   edx,DWORD PTR [edi-0x5c],0xf2ccc48c
  41c1b2:	dec    ebx
  41c1b3:	sbb    DWORD PTR [ecx-0x7b],ecx
  41c1b6:	adc    BYTE PTR [eax],dh
  41c1b8:	sub    esp,DWORD PTR [esi-0x1b439ec5]
  41c1be:	adc    esp,esi
  41c1c0:	sbb    dl,BYTE PTR [ebx-0x49]
  41c1c3:	js     0x41c23b
  41c1c5:	xchg   ebp,eax
  41c1c6:	xchg   DWORD PTR [esp+esi*1+0x1278d1e5],eax
  41c1cd:	adc    edx,edx
  41c1cf:	retf   0xa1c8
  41c1d2:	(bad)  
  41c1d3:	fidiv  WORD PTR [esi]
  41c1d5:	inc    esp
  41c1d6:	out    dx,al
  41c1d7:	xchg   ecx,eax
  41c1d8:	mov    bh,0x14
  41c1da:	fs mov eax,0x85f9a805
  41c1e0:	mov    ch,BYTE PTR [ebp+0x60]
  41c1e3:	sbb    ah,BYTE PTR [eax-0x6fb5b87e]
  41c1e9:	push   ss
  41c1ea:	mov    ds:0x5ab82005,eax
  41c1ef:	sub    al,0x7a
  41c1f1:	xchg   edx,eax
  41c1f2:	stos   BYTE PTR es:[edi],al
  41c1f3:	stos   BYTE PTR es:[edi],al
  41c1f4:	mov    eax,DWORD PTR [edx]
  41c1f6:	fild   QWORD PTR [esi]
  41c1f8:	mov    al,ds:0x608d0b2f
  41c1fd:	add    eax,DWORD PTR [ebx]
  41c1ff:	xchg   DWORD PTR [esi+ebp*8],edx
  41c202:	aam    0x1c
  41c204:	mov    ebx,0x83d0e991
  41c209:	mov    BYTE PTR [ebx-0x31b0718a],al
  41c20f:	mov    WORD PTR [esp+ebp*2],gs
  41c212:	or     DWORD PTR [esi],ebx
  41c214:	lods   eax,DWORD PTR ds:[esi]
  41c215:	sub    ebx,edx
  41c217:	mov    esp,0x42246a60
  41c21c:	mov    bl,0xdd
  41c21e:	adc    DWORD PTR [esi+0x1347d3ef],0xffffff87
  41c225:	int3   
  41c226:	sbb    bl,BYTE PTR [edi]
  41c228:	(bad)
  41c22b:	ror    al,1
  41c22d:	adc    DWORD PTR [ebx],eax
  41c22f:	packsswb mm2,QWORD PTR [esi+0x2a]
  41c233:	add    ch,0xe5
  41c236:	xor    cl,BYTE PTR ds:0x2c6a5b72
  41c23c:	and    BYTE PTR ds:0xbaa5ee0f,ah
  41c242:	mov    ss,WORD PTR [edx-0x56]
  41c245:	mov    ch,0x85
  41c247:	ins    BYTE PTR es:[edi],dx
  41c248:	mov    dl,0x25
  41c24a:	cmp    al,0xd9
  41c24c:	loope  0x41c2c4
  41c24e:	fimul  DWORD PTR [edx]
  41c250:	xchg   ebx,eax
  41c251:	or     ch,BYTE PTR [ebp-0x105e03d0]
  41c257:	jae    0x41c2b4
  41c259:	int    0x12
  41c25b:	pushf  
  41c25c:	retf   0xa7c6
  41c25f:	fldenv [ebp+0x5bb0e1df]
  41c265:	mov    ch,ch
  41c267:	outs   dx,BYTE PTR ds:[esi]
  41c268:	mov    ds:0xd2cc9080,al
  41c26d:	in     eax,dx
  41c26e:	mov    al,0x96
  41c270:	cli    
  41c271:	and    eax,0x10396f2f
  41c276:	(bad)  
  41c277:	ins    BYTE PTR es:[edi],dx
  41c278:	jae    0x41c2cb
  41c27a:	lock dec edi
  41c27c:	push   DWORD PTR [edi+0x28ca578a]
  41c282:	push   edi
  41c283:	and    ch,BYTE PTR [edi+0x6f]
  41c286:	shl    BYTE PTR [edx+0x53c1b5a5],0x3f
  41c28d:	jne    0x41c2d5
  41c28f:	add    ah,al
  41c291:	cs aas 
  41c293:	sub    al,0x5f
  41c295:	add    DWORD PTR [esi-0x80],eax
  41c298:	jmp    0x41c30a
  41c29a:	dec    ecx
  41c29b:	adc    BYTE PTR [ebp-0x46],dl
  41c29e:	pop    esi
  41c29f:	xchg   esi,ecx
  41c2a1:	push   0xb901d2dc
  41c2a6:	mov    dh,dl
  41c2a8:	adc    DWORD PTR [esi],edi
  41c2aa:	test   al,0x8b
  41c2ac:	(bad)  
  41c2ae:	nop
  41c2af:	cmp    al,0x32
  41c2b1:	mov    dh,0xfa
  41c2b3:	addr16 stc 
  41c2b5:	or     al,BYTE PTR [ecx+0x1d5d383b]
  41c2bb:	push   ebp
  41c2bc:	xor    BYTE PTR [eax+0x79d6b435],cl
  41c2c2:	test   DWORD PTR [edx],ecx
  41c2c4:	aaa    
  41c2c5:	jle    0x41c288
  41c2c7:	dec    edi
  41c2c8:	fisttp WORD PTR [esi+0x668f5a10]
  41c2ce:	sbb    BYTE PTR gs:[edx],cl
  41c2d1:	jmp    FWORD PTR [edx-0xd]
  41c2d4:	js     0x41c2d9
  41c2d6:	in     al,0x67
  41c2d8:	push   esp
  41c2d9:	jmp    0x1a41b15a
  41c2de:	imul   edi,DWORD PTR [ecx+0x6e],0xffffff8f
  41c2e2:	xchg   BYTE PTR [ecx+esi*4],ah
  41c2e5:	xchg   edi,eax
  41c2e6:	mov    ds:0xd2f23623,eax
  41c2eb:	mov    ds,WORD PTR [eax+0x5e]
  41c2ee:	lods   al,BYTE PTR ds:[esi]
  41c2ef:	mov    al,ds:0x4bf7c423
  41c2f4:	adc    BYTE PTR [esi],0x8c
  41c2f7:	jge    0x41c2df
  41c2f9:	push   0xc4ab1b91
  41c2fe:	sub    al,0xd
  41c300:	jne    0x41c2b3
  41c302:	add    ah,BYTE PTR [ecx]
  41c304:	or     DWORD PTR [ecx*8-0x7dfbb0fe],ecx
  41c30b:	mov    ebp,0xc0832edc
  41c310:	cmp    al,0x93
  41c312:	ins    DWORD PTR es:[edi],dx
  41c313:	cmp    esi,DWORD PTR [ebp-0x3ef27890]
  41c319:	inc    ebx
  41c31a:	sbb    al,al
  41c31c:	sbb    al,al
  41c31e:	or     al,0x15
  41c320:	ds add eax,0x49964bd8
  41c326:	adc    DWORD PTR [eax],eax
  41c328:	ja     0x41c2b5
  41c32a:	fidiv  DWORD PTR [ebx+ecx*4]
  41c32d:	cmp    eax,0x18117dc0
  41c332:	rcr    DWORD PTR [edi-0x7b],1
  41c335:	push   DWORD PTR [esi-0x12]
  41c338:	int    0x4c
  41c33a:	mov    dl,0x1
  41c33c:	aad    0xe8
  41c33e:	adc    eax,0x68669010
  41c343:	dec    ebp
  41c344:	dec    ebp
  41c345:	pop    ecx
  41c346:	push   edi
  41c347:	sub    ch,cl
  41c349:	pop    esp
  41c34a:	dec    edi
  41c34b:	jnp    0x41c356
  41c34d:	xor    DWORD PTR [ecx+0x52],esp
  41c350:	jg     0x41c385
  41c352:	or     ebp,esp
  41c354:	dec    edi
  41c355:	data16 cli 
  41c357:	mov    ah,0x5
  41c359:	add    ebx,DWORD PTR cs:[ebx+0x186e9e69]
  41c360:	push   eax
  41c361:	mov    bh,0xf3
  41c363:	popa   
  41c364:	or     al,0x2d
  41c366:	cmp    ecx,DWORD PTR [edi-0x62514db]
  41c36c:	or     ebp,0x16bf6e8c
  41c372:	popf   
  41c373:	fistp  DWORD PTR [esi+esi*4-0x3eeaa8a9]
  41c37a:	push   ebx
  41c37b:	in     al,0x17
  41c37d:	fst    DWORD PTR [esi+0x7eccc98e]
  41c383:	mov    ah,0xf2
  41c385:	retf   
  41c386:	fbld   TBYTE PTR [edx-0x3576d389]
  41c38c:	je     0x41c39c
  41c38e:	jb     0x41c362
  41c390:	daa    
  41c391:	pop    edx
  41c392:	das    
  41c393:	pop    eax
  41c394:	dec    ebp
  41c395:	in     al,0x45
  41c397:	aad    0x8c
  41c399:	jge    0x41c37f
  41c39b:	push   ebx
  41c39c:	aaa    
  41c39d:	xor    ch,BYTE PTR [edi]
  41c39f:	inc    esi
  41c3a0:	js     0x41c3fc
  41c3a2:	dec    esp
  41c3a3:	pop    ss
  41c3a4:	xchg   DWORD PTR [edi],ebx
  41c3a6:	out    dx,al
  41c3a7:	test   BYTE PTR [esi+0x23],cl
  41c3aa:	bnd jg 0x41c3bf
  41c3ad:	shl    DWORD PTR [ecx+eax*1-0x2c],1
  41c3b1:	pop    ds
  41c3b2:	pop    edi
  41c3b3:	and    eax,0xa54044ca
  41c3b8:	push   ecx
  41c3b9:	mov    bh,0x26
  41c3bb:	mov    dl,0x87
  41c3bd:	test   eax,0x6fec70e0
  41c3c2:	cmp    eax,0xed95cff2
  41c3c7:	jmp    0x7d013c79
  41c3cc:	add    eax,0x69abc4d2
  41c3d1:	pop    ecx
  41c3d2:	jge    0x41c450
  41c3d4:	not    eax
  41c3d6:	cdq    
  41c3d7:	fsubr  st(7),st
  41c3d9:	pusha  
  41c3da:	fidivr DWORD PTR [ebx]
  41c3dc:	out    dx,eax
  41c3dd:	std    
  41c3de:	or     ecx,DWORD PTR ds:0xac6e14ef
  41c3e4:	mov    WORD PTR [eax+0x3627e4b9],cs
  41c3ea:	jae    0x41c408
  41c3ec:	jg     0x41c428
  41c3ee:	iret   
  41c3ef:	dec    ecx
  41c3f0:	aas    
  41c3f1:	fptan  
  41c3f3:	or     ah,BYTE PTR [ecx]
  41c3f5:	fbstp  TBYTE PTR [ecx]
  41c3f7:	outs   dx,BYTE PTR ds:[esi]
  41c3f8:	loop   0x41c3d4
  41c3fa:	or     al,0x76
  41c3fc:	mov    eax,ds:0xa752f4c7
  41c401:	mov    ebx,0x18f62b2b
  41c406:	sbb    BYTE PTR [esi-0x413cec7f],bl
  41c40c:	shr    BYTE PTR [ecx+edx*4-0x16ff3b8d],1
  41c413:	clc    
  41c414:	or     bh,al
  41c416:	nop
  41c417:	push   0xffffffcd
  41c419:	and    eax,0xfb1f4a4c
  41c41e:	stc    
  41c41f:	daa    
  41c420:	mov    ds:0xc8715517,al
  41c425:	repz adc al,0x52
  41c428:	mov    ah,0xb0
  41c42a:	mov    edx,0x1cf3e3e
  41c42f:	fld    TBYTE PTR [ecx]
  41c431:	sbb    eax,0x72253bd7
  41c436:	jb     0x41c4b6
  41c438:	frstor [esi-0x1db0903]
  41c43e:	imul   edi,DWORD PTR [ebx],0xffffff88
  41c441:	out    0x85,al
  41c443:	fdiv   QWORD PTR [ebp-0x3a12bcb]
  41c449:	pop    ebx
  41c44a:	call   0xae5e:0xf065e195
  41c451:	rol    DWORD PTR [edx+0x5d8ace85],cl
  41c457:	(bad)  
  41c458:	xchg   ebx,eax
  41c459:	jne    0x41c475
  41c45b:	xchg   esp,eax
  41c45c:	mov    bl,0xa6
  41c45e:	mov    ecx,0x4d81cb86
  41c463:	pop    ecx
  41c464:	xchg   esi,eax
  41c465:	xlat   BYTE PTR ds:[ebx]
  41c466:	in     eax,0xd6
  41c468:	ins    DWORD PTR es:[edi],dx
  41c469:	sar    BYTE PTR [eax+0x58da5635],1
  41c46f:	mov    WORD PTR [edi+0x14cb2f10],?
  41c475:	sahf   
  41c476:	or     eax,0xdd090476
  41c47b:	popa   
  41c47c:	shl    BYTE PTR [edi+0x76cb1b39],cl
  41c482:	int    0x7f
  41c484:	push   ebx
  41c485:	addr16 cmc 
  41c487:	mov    dl,0x71
  41c489:	cmp    eax,0xc4eb016f
  41c48e:	pop    ecx
  41c48f:	ffree  st(1)
  41c491:	cwde   
  41c492:	aas    
  41c493:	daa    
  41c494:	mov    edx,0xfa86ea7a
  41c499:	fprem  
  41c49b:	dec    eax
  41c49c:	lds    edx,FWORD PTR [esi]
  41c49e:	sbb    ch,BYTE PTR ds:0x4e3d9b70
  41c4a4:	push   cs
  41c4a5:	and    ebx,DWORD PTR [edx+0x79]
  41c4a8:	xor    edi,DWORD PTR [ecx-0x20fca6e0]
  41c4ae:	dec    ebx
  41c4af:	rol    edx,1
  41c4b1:	sbb    al,0xd9
  41c4b3:	imul   BYTE PTR [edi]
  41c4b5:	sbb    DWORD PTR [eax-0x5d823a6d],0x6a6b88aa
  41c4bf:	ds cmc 
  41c4c1:	std    
  41c4c2:	(bad)  
  41c4c3:	shr    BYTE PTR ds:0xcca2b5c4,cl
  41c4c9:	pop    esp
  41c4ca:	lahf   
  41c4cb:	retf   
  41c4cc:	les    ebx,FWORD PTR [edi-0x69161db1]
  41c4d2:	test   eax,0xb84f7d2b
  41c4d7:	imul   ebx,DWORD PTR [ebx],0x12
  41c4da:	or     ch,BYTE PTR [ebp-0x1b]
  41c4dd:	jmp    FWORD PTR [ebp+0x65bb02cd]
  41c4e3:	(bad)  
  41c4e5:	dec    ecx
  41c4e6:	retf   
  41c4e7:	sub    eax,0xa0d4ee7b
  41c4ec:	lods   al,BYTE PTR ds:[esi]
  41c4ed:	xchg   edi,eax
  41c4ee:	inc    ecx
  41c4ef:	adc    eax,0xc44bae17
  41c4f4:	jge    0x41c4e2
  41c4f6:	aam    0x8c
  41c4f8:	(bad)
  41c4fb:	xchg   ebp,eax
  41c4fc:	inc    edx
  41c4fd:	mov    ch,dl
  41c4ff:	push   ebp
  41c500:	push   ebx
  41c501:	mov    ebx,0xe5153d87
  41c506:	cmc    
  41c507:	xchg   ecx,eax
  41c508:	and    dl,BYTE PTR [eax+0x43c75ce8]
  41c50e:	fistp  WORD PTR [ebx-0x4c39d042]
  41c514:	daa    
  41c515:	or     edx,DWORD PTR ds:0x672c07ad
  41c51b:	inc    esi
  41c51c:	mov    dh,0x5
  41c51e:	push   ebx
  41c51f:	fmul   QWORD PTR [edx+eax*4-0x20]
  41c523:	adc    edi,DWORD PTR [edi+0x2c7582d6]
  41c529:	xchg   edi,eax
  41c52a:	mov    ch,0x40
  41c52c:	jne    0x41c591
  41c52e:	inc    ebx
  41c52f:	gs (bad) 
  41c531:	adc    ecx,ecx
  41c533:	aam    0x5
  41c535:	xor    ebx,edx
  41c537:	mov    cl,0x15
  41c539:	jb     0x41c548
  41c53b:	lods   al,BYTE PTR ds:[esi]
  41c53c:	push   edx
  41c53d:	hlt    
  41c53e:	into   
  41c53f:	inc    eax
  41c540:	or     eax,0xfd9171e3
  41c545:	scas   al,BYTE PTR es:[edi]
  41c546:	cs jg  0x41c4d2
  41c549:	out    0xc1,eax
  41c54b:	daa    
  41c54c:	add    ebp,DWORD PTR ds:0xb05d3a5
  41c552:	sti    
  41c553:	fidivr DWORD PTR [edx+0x3e]
  41c556:	push   ebx
  41c557:	sbb    al,0x84
  41c559:	mov    ch,0xf7
  41c55b:	loope  0x41c5bb
  41c55d:	jle    0x41c5db
  41c55f:	adc    DWORD PTR [edx-0x6a],eax
  41c562:	pop    eax
  41c563:	sub    bh,BYTE PTR fs:[eax-0x49]
  41c567:	inc    eax
  41c568:	and    DWORD PTR [esp+edi*2],edx
  41c56b:	mov    edi,0xe97ff55d
  41c570:	xor    al,0x14
  41c572:	ficomp DWORD PTR [ebp+0x25]
  41c575:	out    0x5a,al
  41c577:	cmp    DWORD PTR [ecx+0x19354e1],ecx
  41c57d:	shl    DWORD PTR [eax],cl
  41c57f:	pop    ds
  41c580:	sbb    ah,BYTE PTR [ebx+0x2c]
  41c583:	test   al,0x5
  41c585:	or     dh,bh
  41c587:	adc    BYTE PTR [edi-0x6fcb350b],0xa
  41c58e:	pop    edi
  41c58f:	stos   BYTE PTR es:[edi],al
  41c590:	jmp    0x41c586
  41c592:	fwait
  41c593:	jle    0x41c53a
  41c595:	xchg   edi,eax
  41c596:	ins    DWORD PTR es:[edi],dx
  41c597:	(bad)  
  41c598:	pop    ebp
  41c599:	jb     0x41c553
  41c59b:	jle    0x41c5e2
  41c59d:	xor    BYTE PTR [edi],0x2b
  41c5a0:	push   cs
  41c5a1:	ss das 
  41c5a3:	and    eax,0x513fa814
  41c5a8:	dec    ebp
  41c5a9:	imul   DWORD PTR [edx+0x1bf5e3ce]
  41c5af:	add    eax,0x3697d68e
  41c5b4:	xlat   BYTE PTR ds:[ebx]
  41c5b5:	xchg   ecx,eax
  41c5b6:	ja     0x41c622
  41c5b8:	popa   
  41c5b9:	xchg   bx,ax
  41c5bb:	retf   
  41c5bc:	adc    al,0x0
  41c5be:	cli    
  41c5bf:	jns    0x41c60a
  41c5c1:	inc    ecx
  41c5c2:	daa    
  41c5c3:	ins    BYTE PTR es:[edi],dx
  41c5c4:	add    al,0x18
  41c5c6:	lods   eax,DWORD PTR ds:[esi]
  41c5c7:	jle    0x41c627
  41c5c9:	shr    DWORD PTR [esi],cl
  41c5cb:	dec    eax
  41c5cc:	ins    BYTE PTR es:[edi],dx
  41c5cd:	adc    BYTE PTR [edx-0x2e],dh
  41c5d0:	jmp    0xf1dd:0xe792af8e
  41c5d7:	xor    DWORD PTR [ecx],eax
  41c5d9:	and    BYTE PTR [ebp+0x73],0x26
  41c5dd:	imul   bl
  41c5df:	add    esp,DWORD PTR [ebx-0x26]
  41c5e2:	ficom  DWORD PTR [ebp-0x78316b7f]
  41c5e8:	dec    esi
  41c5e9:	push   eax
  41c5ea:	ins    BYTE PTR es:[edi],dx
  41c5eb:	pop    ecx
  41c5ec:	inc    esi
  41c5ed:	push   ebp
  41c5ee:	(bad)  
  41c5ef:	pop    esi
  41c5f0:	inc    eax
  41c5f1:	hlt    
  41c5f2:	leavew 
  41c5f4:	adc    al,0x3c
  41c5f6:	mov    ebp,0xfd292481
  41c5fb:	bound  edi,QWORD PTR [ebp+0x2947e980]
  41c601:	hlt    
  41c602:	inc    esp
  41c603:	sub    BYTE PTR ds:0x589511b9,bl
  41c609:	fwait
  41c60a:	ins    BYTE PTR es:[edi],dx
  41c60b:	das    
  41c60c:	xchg   DWORD PTR [ecx-0x3240b096],edi
  41c612:	inc    esi
  41c613:	or     esp,DWORD PTR [ecx]
  41c615:	jmp    0xdaaad37c
  41c61a:	in     eax,0x2
  41c61c:	mov    ds:0xd4c06d4a,eax
  41c621:	and    DWORD PTR [edx-0x13],esi
  41c624:	cmp    al,0x53
  41c626:	inc    ebx
  41c627:	jbe    0x41c5cb
  41c629:	fistp  WORD PTR [ebx-0x5f]
  41c62c:	lea    ebx,[eax]
  41c62e:	popa   
  41c62f:	test   al,0x5b
  41c631:	fs retf 
  41c633:	sti    
  41c634:	enter  0xc18e,0x46
  41c638:	ret    0x71fe
  41c63b:	pop    ecx
  41c63c:	push   ebp
  41c63d:	test   BYTE PTR [eax],bh
  41c63f:	sbb    DWORD PTR [ebx],eax
  41c641:	aad    0x90
  41c643:	sbb    DWORD PTR [edi-0x55cbba0f],ecx
  41c649:	icebp  
  41c64a:	stos   DWORD PTR es:[edi],eax
  41c64b:	shl    DWORD PTR [ecx-0x7d],cl
  41c64e:	xchg   edi,eax
  41c64f:	gs dec esp
  41c651:	or     dl,BYTE PTR [ebx-0x296b56d2]
  41c657:	push   0x91ce4582
  41c65c:	mov    cl,0x24
  41c65e:	cmc    
  41c65f:	mov    ecx,0xba6ddcb7
  41c664:	ror    DWORD PTR [edi-0x3e4572d8],1
  41c66a:	out    0xae,al
  41c66c:	xor    ebx,DWORD PTR [esp+edx*1-0x46486ae]
  41c673:	test   eax,0xa9ac8779
  41c678:	aad    0xb3
  41c67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c67b:	cmp    BYTE PTR [esi+eiz*2],dh
  41c67e:	jmp    0x60ed:0x9af097d6
  41c685:	bnd jo 0x41c645
  41c688:	mov    ebp,0x6d1c3cba
  41c68d:	xchg   esi,eax
  41c68e:	and    dh,BYTE PTR [ecx-0x2d]
  41c691:	rol    ch,0x77
  41c694:	mov    ebp,DWORD PTR [ebx+0x2ea80797]
  41c69a:	xor    eax,0x369f2a75
  41c69f:	test   al,0xd0
  41c6a1:	or     DWORD PTR [ebx],ebx
  41c6a3:	lock jnp 0x41c6fe
  41c6a6:	addr16 xchg esp,eax
  41c6a8:	test   DWORD PTR [ebp+0x4e6271b9],esi
  41c6ae:	aam    0x76
  41c6b0:	inc    esp
  41c6b1:	loope  0x41c70b
  41c6b3:	adc    ebx,DWORD PTR [ecx+0x31a1e4b9]
  41c6b9:	fstp   QWORD PTR [ebx]
  41c6bb:	cmc    
  41c6bc:	int3   
  41c6bd:	pusha  
  41c6be:	jmp    0x41c66b
  41c6c0:	or     al,dl
  41c6c2:	push   eax
  41c6c3:	cmp    BYTE PTR [edx+0x85f4f55],ah
  41c6c9:	or     ebx,DWORD PTR [esi]
  41c6cb:	xor    DWORD PTR [eax-0x29],esi
  41c6ce:	jbe    0x41c6ca
  41c6d0:	in     eax,dx
  41c6d1:	(bad)  
  41c6d2:	les    ecx,FWORD PTR [esi-0x1ffd1f5c]
  41c6d8:	push   0xe3db6117
  41c6dd:	shl    eax,0xd2
  41c6e0:	adc    ecx,DWORD PTR [ebx+0xd]
  41c6e3:	paddsw mm2,QWORD PTR [esi-0x1778a5b4]
  41c6ea:	sub    DWORD PTR [edx-0x7f],0x79
  41c6ee:	rcl    BYTE PTR [eax+0x371d2a26],cl
  41c6f4:	mov    eax,ds:0x9b689b1e
  41c6f9:	pop    es
  41c6fa:	and    ebp,edi
  41c6fc:	xchg   ebx,eax
  41c6fd:	adc    edi,DWORD PTR [ecx]
  41c6ff:	lods   eax,DWORD PTR ds:[esi]
  41c700:	sbb    ebx,DWORD PTR [edx+0x6e]
  41c703:	jge    0x41c750
  41c705:	adc    eax,DWORD PTR [eax]
  41c707:	sahf   
  41c708:	rcr    BYTE PTR [esi+edx*4-0x32],1
  41c70c:	pop    esp
  41c70d:	and    ebp,DWORD PTR ds:0x487234bd
  41c713:	test   DWORD PTR [ecx+0x503d4f2d],0x437392a6
  41c71d:	das    
  41c71e:	xchg   ebx,eax
  41c71f:	dec    ecx
  41c720:	sub    DWORD PTR [edx+ebx*1],ecx
  41c723:	retf   
  41c724:	jbe    0x41c70a
  41c726:	das    
  41c727:	mov    ds:0x2915557c,eax
  41c72c:	ins    BYTE PTR es:[edi],dx
  41c72d:	sbb    al,0x28
  41c72f:	fdiv   QWORD PTR gs:0x85ece30
  41c736:	add    esi,eax
  41c738:	sub    BYTE PTR ds:0x4b84,ah
  41c73d:	xchg   ebx,eax
  41c73e:	cmp    eax,0x286b5a9f
  41c743:	sbb    DWORD PTR [ebp-0x7f27c01a],edi
  41c749:	outs   dx,BYTE PTR ds:[esi]
  41c74a:	dec    esp
  41c74b:	push   ebx
  41c74c:	test   DWORD PTR [edi],ecx
  41c74e:	inc    ecx
  41c74f:	jmp    0x88035d20
  41c754:	sbb    eax,0xcf64b5f6
  41c759:	sbb    eax,0x511e50b6
  41c75e:	scas   eax,DWORD PTR es:[edi]
  41c75f:	xor    al,0x22
  41c761:	stos   DWORD PTR es:[edi],eax
  41c762:	shl    DWORD PTR ds:0x4931e2aa,cl
  41c768:	inc    esp
  41c769:	and    esi,DWORD PTR [ebp-0x20]
  41c76c:	test   BYTE PTR [eax+esi*2],cl
  41c76f:	or     al,0x75
  41c771:	rcr    BYTE PTR [esi-0x25],1
  41c774:	fistp  DWORD PTR [esi+esi*1]
  41c777:	inc    esp
  41c778:	pop    ebx
  41c779:	mov    DWORD PTR ds:0x4ca6f59,ebp
  41c77f:	add    eax,0xce559e0b
  41c784:	int3   
  41c785:	je     0x41c7b5
  41c787:	sbb    ebx,ebx
  41c789:	cli    
  41c78a:	loope  0x41c759
  41c78c:	loop   0x41c79e
  41c78e:	push   eax
  41c78f:	popf   
  41c790:	stos   BYTE PTR es:[edi],al
  41c791:	xor    edi,DWORD PTR [ecx+ebx*2+0x668338f0]
  41c798:	pusha  
  41c799:	cmp    bl,al
  41c79b:	hlt    
  41c79c:	mov    ah,0x7e
  41c79e:	je     0x41c768
  41c7a0:	jl     0x41c792
  41c7a2:	add    BYTE PTR [eax],ah
  41c7a4:	es lahf 
  41c7a6:	retf   
  41c7a7:	push   edi
  41c7a8:	xor    eax,0xe3bf880a
  41c7ad:	xor    BYTE PTR [ebx],dh
  41c7af:	mov    edi,0xaf089611
  41c7b4:	mov    ah,0x7d
  41c7b6:	inc    edi
  41c7b7:	retf   0x54a4
  41c7ba:	sbb    ebp,DWORD PTR [ebx]
  41c7bc:	xchg   ecx,edx
  41c7be:	jg     0x41c7ae
  41c7c0:	repz fimul WORD PTR [edx-0x7e]
  41c7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7c5:	dec    esi
  41c7c6:	neg    DWORD PTR [edi]
  41c7c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7c9:	mov    eax,0x45c315fc
  41c7ce:	mov    dl,0x4f
  41c7d0:	loopne 0x41c7d1
  41c7d2:	xor    eax,0x6a4015ec
  41c7d7:	retf   
  41c7d8:	arpl   WORD PTR [eax-0x11],si
  41c7db:	xchg   ecx,eax
  41c7dc:	lahf   
  41c7dd:	out    dx,eax
  41c7de:	mov    esp,0xbaae1ead
  41c7e3:	push   ss
  41c7e4:	dec    ecx
  41c7e5:	and    eax,edx
  41c7e7:	imul   esp,DWORD PTR [edx+eiz*1],0xfffffffd
  41c7eb:	mov    ah,BYTE PTR ds:0xb1c34edd
  41c7f1:	enter  0xc3fc,0xe9
  41c7f5:	test   eax,0x2cbb6d49
  41c7fa:	jbe    0x41c810
  41c7fc:	outs   dx,DWORD PTR ds:[esi]
  41c7fd:	or     BYTE PTR [edi],al
  41c7ff:	loop   0x41c7d0
  41c801:	jae    0x41c81a
  41c803:	mov    ah,0x8b
  41c805:	cmp    DWORD PTR [ecx-0x7],ebx
  41c808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c809:	inc    ebp
  41c80a:	shld   DWORD PTR [eax],ebp,cl
  41c80d:	rol    DWORD PTR [ecx+edi*8],0x5c
  41c811:	scas   eax,DWORD PTR es:[edi]
  41c812:	sbb    eax,0xbf106a89
  41c817:	pop    ss
  41c818:	pop    ebx
  41c819:	pop    ebx
  41c81a:	sbb    BYTE PTR [eax],ah
  41c81c:	xor    ah,BYTE PTR [ebp-0x6e]
  41c81f:	inc    edi
  41c820:	scas   eax,DWORD PTR es:[edi]
  41c821:	push   0xffffffcc
  41c823:	ins    BYTE PTR es:[edi],dx
  41c824:	lahf   
  41c825:	mov    ds:0x4c03f20a,eax
  41c82a:	mov    dl,0x6a
  41c82c:	lods   eax,DWORD PTR ds:[si]
  41c82e:	add    bh,BYTE PTR [ebp-0x54]
  41c831:	dec    esp
  41c832:	imul   ecx
  41c834:	push   ds
  41c835:	sub    edx,ebp
  41c837:	out    dx,al
  41c838:	iret   
  41c839:	mov    dl,0xd5
  41c83b:	inc    edi
  41c83c:	fcomp  DWORD PTR [edi+eax*8+0x67]
  41c840:	rcl    cl,1
  41c842:	mov    cl,0xe0
  41c844:	or     cl,bl
  41c846:	loope  0x41c828
  41c848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c849:	xor    eax,0x7dcaa09d
  41c84e:	push   edx
  41c84f:	fnsave ds:0xcd70e5f
  41c855:	retf   0x12e0
  41c858:	rcr    BYTE PTR [ebp+0x4],cl
  41c85b:	jb     0x41c81f
  41c85d:	or     al,BYTE PTR [ebx]
  41c85f:	aaa    
  41c860:	xchg   edi,eax
  41c861:	push   0xb6fbf39a
  41c866:	inc    edx
  41c867:	push   edi
  41c868:	pop    es
  41c869:	bound  edx,QWORD PTR [eax+edi*1+0x12dc52a2]
  41c870:	push   cs
  41c871:	mov    dl,0xf6
  41c873:	sbb    BYTE PTR [eax],ch
  41c875:	jle    0x41c868
  41c877:	ret    
  41c878:	imul   esp,ebx,0x1a
  41c87b:	or     cl,BYTE PTR [esi-0x76]
  41c87e:	icebp  
  41c87f:	das    
  41c880:	rol    dh,1
  41c882:	rcl    BYTE PTR [ecx-0x3c8bb389],0x38
  41c889:	mov    ds:0x1a72d36a,al
  41c88e:	and    BYTE PTR [edx+0x6b],ch
  41c891:	dec    ecx
  41c892:	scas   al,BYTE PTR es:[edi]
  41c893:	fs inc edx
  41c895:	lahf   
  41c896:	sub    ebx,DWORD PTR [ecx]
  41c898:	and    bh,bh
  41c89a:	ret    0xeecc
  41c89d:	sbb    al,0xe9
  41c89f:	fsub   DWORD PTR ds:0x5acdd4c5
  41c8a5:	ss jg  0x41c869
  41c8a8:	mov    cl,0x25
  41c8aa:	sbb    al,0xc1
  41c8ac:	xor    BYTE PTR [ebx+0x25ecdf43],ah
  41c8b2:	test   BYTE PTR [edx+eax*1-0x4],bh
  41c8b6:	jo     0x41c906
  41c8b8:	in     al,0x47
  41c8ba:	repnz and ebp,ebx
  41c8bd:	xchg   esi,eax
  41c8be:	adc    BYTE PTR [ecx-0x51],al
  41c8c1:	mov    ah,0x7a
  41c8c3:	mov    al,ds:0xfc36bd47
  41c8c8:	mov    gs,WORD PTR [edx+eax*2]
  41c8cb:	ins    DWORD PTR es:[edi],dx
  41c8cc:	or     BYTE PTR [edx+esi*4+0x413e3abb],dl
  41c8d3:	out    dx,al
  41c8d4:	gs aam 0x81
  41c8d7:	mov    esi,0x1fb18664
  41c8dc:	xchg   edx,eax
  41c8dd:	loop   0x41c8c3
  41c8df:	dec    ebp
  41c8e0:	ins    DWORD PTR es:[edi],dx
  41c8e1:	ja     0x41c90c
  41c8e3:	inc    edi
  41c8e4:	ja     0x41c86f
  41c8e6:	jno    0x41c86d
  41c8e8:	dec    edx
  41c8e9:	or     bh,cl
  41c8eb:	jle    0x41c909
  41c8ed:	and    bh,ah
  41c8ef:	int    0xe2
  41c8f1:	ss dec ecx
  41c8f3:	cmc    
  41c8f4:	mov    ds:0xe36eec2a,al
  41c8f9:	push   0x31e60047
  41c8fe:	inc    ebx
  41c8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c900:	rcr    BYTE PTR [ebp-0x6c],0x50
  41c904:	adc    BYTE PTR fs:[ecx+0x119dcd8f],dh
  41c90b:	mov    ebx,0xfe331171
  41c910:	xlat   BYTE PTR ds:[ebx]
  41c911:	dec    eax
  41c912:	stc    
  41c913:	pop    ecx
  41c914:	sub    DWORD PTR [ecx],0xdd71adc9
  41c91a:	push   esi
  41c91b:	push   ebp
  41c91c:	push   ds
  41c91d:	imul   edi,DWORD PTR [ecx-0x2655b86b],0x68
  41c924:	mov    bh,0xea
  41c926:	sbb    BYTE PTR [esp+edi*8+0x602e360f],ah
  41c92d:	enter  0x4490,0x7b
  41c931:	xlat   BYTE PTR ds:[ebx]
  41c932:	mov    al,0xba
  41c934:	cmc    
  41c935:	sub    DWORD PTR [ebx],ebx
  41c937:	mov    edx,edi
  41c939:	bnd jae 0x41c976
  41c93c:	sti    
  41c93d:	(bad)
  41c941:	call   0xe1f2:0x2241b2f6
  41c948:	stos   DWORD PTR es:[edi],eax
  41c949:	(bad)  
  41c94a:	mov    dl,0xc5
  41c94c:	sub    bl,BYTE PTR [ebx-0x4c]
  41c94f:	push   edi
  41c950:	xlat   BYTE PTR ds:[ebx]
  41c951:	lea    ecx,[edx+0x24]
  41c954:	and    eax,0x42c96cc5
  41c959:	sbb    esi,DWORD PTR [ebp-0x1a]
  41c95c:	popf   
  41c95d:	or     dh,BYTE PTR [ebp-0x55]
  41c960:	xor    eax,0xd3dbafcc
  41c965:	add    BYTE PTR [edx+0x37f31acb],dh
  41c96b:	xor    esi,DWORD PTR [edi+0x15ae4e11]
  41c971:	cld    
  41c972:	retf   0x35d
  41c975:	cmp    al,0x7d
  41c977:	retf   0xbe25
  41c97a:	stos   DWORD PTR es:[edi],eax
  41c97b:	or     ecx,DWORD PTR [eax]
  41c97d:	dec    eax
  41c97e:	fsubr  DWORD PTR [edx+0x67]
  41c981:	out    0x22,eax
  41c983:	xchg   ebp,eax
  41c984:	sub    eax,0x2324503f
  41c989:	or     eax,0x60994129
  41c98e:	xor    DWORD PTR [ebp-0x20],0xffffffa5
  41c992:	iret   
  41c993:	call   0xe21d:0x23e5f945
  41c99a:	call   0x1c714fb9
  41c99f:	in     eax,dx
  41c9a0:	sub    BYTE PTR [ecx],ch
  41c9a2:	sar    BYTE PTR [ecx+0xf],cl
  41c9a5:	xchg   ebp,eax
  41c9a6:	sub    DWORD PTR [esi-0x5c],esp
  41c9a9:	dec    edi
  41c9aa:	fwait
  41c9ab:	popa   
  41c9ac:	add    cl,BYTE PTR [ecx]
  41c9ae:	cwde   
  41c9af:	ror    DWORD PTR [ecx],0xb6
  41c9b2:	push   ecx
  41c9b3:	mov    ds:0xc2e536f1,al
  41c9b8:	test   eax,0xaf6df
  41c9bd:	pusha  
  41c9be:	or     eax,0x6844171d
  41c9c3:	cmp    al,0x1e
  41c9c5:	and    al,dh
  41c9c7:	and    bl,BYTE PTR [ecx+0x6f]
  41c9ca:	dec    ebp
  41c9cb:	cmp    eax,edi
  41c9cd:	(bad)
  41c9d0:	jns    0x41c991
  41c9d2:	shl    BYTE PTR [ebp-0x75],1
  41c9d5:	js     0x41c95a
  41c9d7:	dec    esp
  41c9d8:	jo     0x41ca1e
  41c9da:	ret    
  41c9db:	xchg   edx,eax
  41c9dc:	fistp  WORD PTR [edx+0x70]
  41c9df:	mov    edi,0x614506a1
  41c9e4:	idiv   DWORD PTR [eax-0x6]
  41c9e7:	or     ecx,edx
  41c9e9:	fcmove st,st(3)
  41c9eb:	xor    al,0x35
  41c9ed:	cmp    al,ah
  41c9ef:	and    dl,cl
  41c9f1:	sbb    DWORD PTR [ebx+0x4ea65cc1],ebx
  41c9f7:	cmp    BYTE PTR [ecx],0x22
  41c9fa:	push   eax
  41c9fb:	xchg   ecx,eax
  41c9fc:	imul   esi,DWORD PTR [ebp+0x312ce76e],0x1daf9903
  41ca06:	fs out 0x46,eax
  41ca09:	adc    BYTE PTR [edx+0x6f820985],dh
  41ca0f:	push   edi
  41ca10:	mov    bl,0x99
  41ca12:	retf   0x481
  41ca15:	ficomp WORD PTR [ebp-0x3c159744]
  41ca1b:	xchg   BYTE PTR [ebp-0x2286a0e1],bh
  41ca21:	push   ebx
  41ca22:	repnz and ebx,ebp
  41ca25:	fsub   DWORD PTR [esi]
  41ca27:	pop    edi
  41ca28:	jnp    0x41ca2d
  41ca2a:	jle    0x41ca26
  41ca2c:	lods   al,BYTE PTR ds:[esi]
  41ca2d:	loope  0x41c9e9
  41ca2f:	push   ds
  41ca30:	cwde   
  41ca31:	push   ss
  41ca32:	jno    0x41cab0
  41ca34:	jmp    DWORD PTR [eax+0x6a23f87e]
  41ca3a:	jnp    0x41ca8a
  41ca3c:	dec    ebp
  41ca3d:	push   0x19
  41ca3f:	add    bh,dh
  41ca41:	or     ebx,esi
  41ca43:	(bad)  
  41ca44:	sub    eax,0x4b88508f
  41ca49:	fiadd  WORD PTR ds:0x7256688
  41ca4f:	in     eax,0xc5
  41ca51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca52:	outs   dx,DWORD PTR ds:[esi]
  41ca53:	repnz mov dh,0x0
  41ca56:	cmp    BYTE PTR [eax-0xe],dl
  41ca59:	fst    DWORD PTR [edi+0x35]
  41ca5c:	ins    BYTE PTR es:[edi],dx
  41ca5d:	rcl    BYTE PTR [ebp+ebx*8-0x2e5a0019],1
  41ca64:	test   BYTE PTR [esi-0x4ba5b69e],ah
  41ca6a:	arpl   WORD PTR [edx+0x6737e95d],di
  41ca70:	loopne 0x41ca72
  41ca72:	cmp    al,BYTE PTR [esi+esi*4]
  41ca75:	pushf  
  41ca76:	mov    eax,ds:0x7b96d485
  41ca7b:	add    BYTE PTR [edx-0x78462a66],bh
  41ca81:	xchg   ebx,eax
  41ca82:	ss ins BYTE PTR es:[edi],dx
  41ca84:	sub    al,0x6d
  41ca86:	not    DWORD PTR [ebx]
  41ca88:	and    DWORD PTR [ebp-0x7],ecx
  41ca8b:	pop    DWORD PTR [esi+0x2819c8c]
  41ca91:	mov    al,BYTE PTR [eax+ebx*2-0x51]
  41ca95:	jb     0x41cacd
  41ca97:	xor    esp,DWORD PTR [edi+0x6bce52b6]
  41ca9d:	out    0x1d,al
  41ca9f:	cmc    
  41caa0:	cmp    esp,ebx
  41caa2:	call   0x7b7d9e36
  41caa7:	xor    ch,BYTE PTR [edi+0x45]
  41caaa:	or     ecx,DWORD PTR [esi]
  41caac:	je     0x41ca95
  41caae:	adc    al,0x60
  41cab0:	pushf  
  41cab1:	shr    dl,1
  41cab3:	(bad)  
  41cab4:	xor    bh,BYTE PTR [ebp+0x1]
  41cab7:	int    0x1a
  41cab9:	jmp    0x41caea
  41cabb:	xchg   esi,eax
  41cabc:	fild   DWORD PTR [edx]
  41cabe:	jne    0x41cb08
  41cac0:	cmp    ebp,DWORD PTR [esi]
  41cac2:	pop    es
  41cac3:	mov    eax,0x71487721
  41cac8:	sbb    dl,BYTE PTR [esi+0x7230eacb]
  41cace:	dec    esp
  41cacf:	dec    ebp
  41cad0:	ret    0xf987
  41cad3:	or     ebx,eax
  41cad5:	jl     0x41cb14
  41cad7:	lahf   
  41cad8:	xor    al,0x67
  41cada:	shl    DWORD PTR [ecx+0x7],cl
  41cadd:	dec    eax
  41cade:	push   es
  41cadf:	jmp    0xf2927728
  41cae4:	add    al,0x94
  41cae6:	sti    
  41cae7:	in     al,dx
  41cae8:	xchg   BYTE PTR [edx+0x75d90878],ah
  41caee:	and    dl,BYTE PTR [edx+0x2b]
  41caf1:	dec    ebx
  41caf2:	add    cl,cl
  41caf4:	and    bl,bh
  41caf6:	call   0x4ae266eb
  41cafb:	adc    DWORD PTR [ebx-0x76015518],esp
  41cb01:	out    dx,eax
  41cb02:	mov    cl,dl
  41cb04:	dec    ecx
  41cb05:	test   al,0xf4
  41cb07:	lock xchg edi,eax
  41cb09:	nop
  41cb0a:	inc    ebp
  41cb0b:	mov    esi,0xbc438939
  41cb10:	cmp    eax,DWORD PTR [esi+0x48a6aca7]
  41cb16:	pushf  
  41cb17:	in     al,0x73
  41cb19:	lds    edi,FWORD PTR [ecx+0x3e75e496]
  41cb1f:	cwde   
  41cb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb21:	mov    esi,0xe559a2eb
  41cb26:	retf   
  41cb27:	scas   al,BYTE PTR es:[edi]
  41cb28:	dec    ebx
  41cb29:	adc    eax,0x74019bc4
  41cb2e:	rcr    ebx,1
  41cb30:	enter  0xc3f2,0x20
  41cb34:	out    0xfc,al
  41cb36:	retf   0x57f5
  41cb39:	and    al,0xba
  41cb3b:	xchg   esi,eax
  41cb3c:	pop    esi
  41cb3d:	(bad)  
  41cb3e:	cmp    edi,DWORD PTR [ebx]
  41cb40:	sbb    dh,dh
  41cb42:	test   al,0xeb
  41cb44:	loopne 0x41cb33
  41cb46:	cs fs mov dl,0x13
  41cb4a:	test   DWORD PTR [esi-0x4b],0x914a2d1f
  41cb51:	jbe    0x41cb03
  41cb53:	sti    
  41cb54:	cld    
  41cb55:	dec    esi
  41cb56:	mov    esi,0x846383f6
  41cb5b:	fwait
  41cb5c:	cmp    BYTE PTR [ebp+0x7270e566],ch
  41cb62:	push   eax
  41cb63:	adc    eax,0xa97831e0
  41cb68:	sbb    bh,BYTE PTR [bp+di-0x33]
  41cb6c:	and    esp,DWORD PTR [eax-0x38b45767]
  41cb72:	fcmovnb st,st(0)
  41cb74:	les    esi,FWORD PTR [eax-0x62f6bf93]
  41cb7a:	shr    BYTE PTR [edx+0x5c98838a],1
  41cb80:	mov    ds:0x20f5bfa9,eax
  41cb85:	data16 (bad) 
  41cb88:	das    
  41cb89:	xor    DWORD PTR [ebx+0x7b],edi
  41cb8c:	out    dx,eax
  41cb8d:	jns    0x41cb48
  41cb8f:	jns    0x41cb50
  41cb91:	retf   0x882b
  41cb94:	in     eax,dx
  41cb95:	jns    0x41cbb9
  41cb97:	and    esp,DWORD PTR [ecx]
  41cb99:	mov    ecx,0xc4be33f7
  41cb9e:	push   0xffffffbc
  41cba0:	pop    eax
  41cba1:	imul   edi,DWORD PTR [edx],0xc7253e9b
  41cba7:	jmp    0x41cbd1
  41cba9:	out    0xf1,eax
  41cbab:	sahf   
  41cbac:	mov    ds:0xe58105f,eax
  41cbb1:	push   esi
  41cbb2:	sti    
  41cbb3:	ror    BYTE PTR [esi+0xf0c0a1],cl
  41cbb9:	mov    bl,0x11
  41cbbb:	dec    ebx
  41cbbc:	add    al,0x8a
  41cbbe:	dec    ecx
  41cbbf:	in     eax,0xf3
  41cbc1:	das    
  41cbc2:	pop    edx
  41cbc3:	addr16 xchg ecx,eax
  41cbc5:	or     ch,0x9
  41cbc8:	pop    esi
  41cbc9:	pop    ecx
  41cbca:	inc    ebx
  41cbcb:	add    dh,BYTE PTR [esi]
  41cbcd:	mov    ch,0x8b
  41cbcf:	rcl    DWORD PTR [ecx-0x6921dfff],1
  41cbd5:	test   al,0xe8
  41cbd7:	jb     0x41cbc3
  41cbd9:	int    0xe1
  41cbdb:	mov    bh,0x9e
  41cbdd:	fnclex 
  41cbdf:	dec    esi
  41cbe0:	mov    BYTE PTR [edi-0x7f],0xcd
  41cbe4:	sbb    BYTE PTR [edx],0x91
  41cbe7:	(bad)  
  41cbe8:	shl    DWORD PTR ds:0x9eb3a26d,0xd0
  41cbef:	das    
  41cbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf1:	call   0xc7c3:0xed525aba
  41cbf8:	jno    0x41cc65
  41cbfa:	ins    DWORD PTR es:[edi],dx
  41cbfb:	pop    ebp
  41cbfc:	jg     0x41cba5
  41cbfe:	sub    BYTE PTR [ebx],bl
  41cc00:	mov    ebp,0xe2c90d86
  41cc05:	loop   0x41cbbe
  41cc07:	and    ecx,DWORD PTR [ebp+0x11]
  41cc0a:	inc    ebp
  41cc0b:	inc    esp
  41cc0c:	pop    eax
  41cc0d:	enter  0xa78d,0x90
  41cc11:	in     al,0x6c
  41cc13:	push   es
  41cc14:	aam    0x61
  41cc16:	xor    eax,0xa175b50e
  41cc1b:	das    
  41cc1c:	scas   eax,DWORD PTR es:[edi]
  41cc1d:	adc    edx,ebx
  41cc1f:	push   ebp
  41cc20:	jg     0x41cc39
  41cc22:	retf   
  41cc23:	cli    
  41cc24:	or     al,0xa
  41cc26:	call   0xd21b0835
  41cc2b:	xchg   ebp,eax
  41cc2c:	retf   0x9719
  41cc2f:	fimul  DWORD PTR [eax]
  41cc31:	push   0xffffffd5
  41cc33:	jne    0x41cc87
  41cc35:	jae    0x41cc0f
  41cc37:	int3   
  41cc38:	sbb    BYTE PTR [eax+0x24],0x31
  41cc3c:	sbb    cl,BYTE PTR [eax+0x44]
  41cc3f:	jb     0x41cc90
  41cc41:	inc    esi
  41cc42:	retf   
  41cc43:	shl    BYTE PTR ds:0x5e26274a,cl
  41cc49:	enter  0xb2b6,0xdd
  41cc4d:	inc    ecx
  41cc4e:	jp     0x41cc03
  41cc50:	mov    eax,ds:0x6888ddc7
  41cc55:	jg     0x41ccbb
  41cc57:	add    eax,0x905ebb3b
  41cc5c:	mov    ?,WORD PTR [ebp-0x33]
  41cc5f:	ins    DWORD PTR es:[edi],dx
  41cc60:	push   ecx
  41cc61:	mov    dh,0xe
  41cc63:	push   ecx
  41cc64:	lods   eax,DWORD PTR ds:[esi]
  41cc65:	call   0x1dcbdae1
  41cc6a:	jnp    0x41ccba
  41cc6c:	sub    al,0x14
  41cc6e:	sbb    eax,0xf09936b5
  41cc73:	retf   0x38cc
  41cc76:	mov    bl,0xab
  41cc78:	mov    ds:0x6d3e2389,eax
  41cc7d:	xchg   esp,eax
  41cc7e:	mov    ds:0xb1f58516,al
  41cc83:	mov    WORD PTR [eax-0x7b2c152a],fs
  41cc89:	shl    bh,1
  41cc8b:	push   esp
  41cc8c:	ret    0x2461
  41cc8f:	(bad)  [eax]
  41cc91:	inc    edi
  41cc92:	ins    BYTE PTR es:[edi],dx
  41cc93:	call   0xff6edd8f
  41cc98:	lea    edx,[edi-0x656dd40]
  41cc9e:	hlt    
  41cc9f:	pushf  
  41cca0:	mov    cl,0xf8
  41cca2:	sbb    dl,BYTE PTR [esi+edi*2-0x2c1aacb9]
  41cca9:	shr    DWORD PTR [ebx],1
  41ccab:	cli    
  41ccac:	aaa    
  41ccad:	mov    BYTE PTR [ebp-0x261abffe],ah
  41ccb3:	xchg   BYTE PTR [edx+0x2c50cbe3],ah
  41ccb9:	inc    ebx
  41ccba:	ret    
  41ccbb:	jo     0x41cd1c
  41ccbd:	and    esp,DWORD PTR [ebp+0x4441541e]
  41ccc3:	jmp    0x935163ba
  41ccc8:	gs ja  0x41ccbb
  41cccb:	cs ret 
  41cccd:	outs   dx,BYTE PTR ds:[esi]
  41ccce:	push   edi
  41cccf:	(bad)  
  41ccd0:	push   esp
  41ccd1:	push   ds
  41ccd2:	xor    BYTE PTR [ebx-0x79eb8ce5],ch
  41ccd8:	rol    dl,0xce
  41ccdb:	jae    0x41cd05
  41ccdd:	adc    dh,BYTE PTR [edi]
  41ccdf:	mov    ds:0x1abf18d8,al
  41cce4:	inc    ebx
  41cce5:	sub    dh,BYTE PTR [esi+0x62]
  41cce8:	jp     0x41cd00
  41ccea:	rcl    ebp,cl
  41ccec:	loop   0x41ccd8
  41ccee:	xchg   DWORD PTR ds:0x345bdbcd,eax
  41ccf4:	sbb    ecx,DWORD PTR [ecx+0x4b]
  41ccf7:	add    eax,0xa40a56b0
  41ccfc:	inc    ebx
  41ccfd:	mov    ds:0x655ffe80,eax
  41cd02:	xchg   ebx,eax
  41cd03:	xchg   edi,eax
  41cd04:	out    dx,al
  41cd05:	pop    edi
  41cd06:	cmp    BYTE PTR [ecx+0x6e0fa717],cl
  41cd0c:	push   edx
  41cd0d:	inc    ecx
  41cd0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd0f:	in     eax,dx
  41cd10:	or     edx,ebx
  41cd12:	(bad)  
  41cd13:	cld    
  41cd14:	lock repnz and ch,dh
  41cd18:	jo     0x41cd6a
  41cd1a:	rol    DWORD PTR [ebx],cl
  41cd1c:	pop    ss
  41cd1d:	mov    BYTE PTR [edx],ch
  41cd1f:	jmp    0x6c64ac1d
  41cd24:	rcl    bh,cl
  41cd26:	mov    edx,0xfbe01a6
  41cd2b:	sbb    eax,0xf491bc45
  41cd30:	or     ch,dl
  41cd32:	bound  ebx,QWORD PTR [edx+0x67850add]
  41cd38:	mov    edi,0x77245a65
  41cd3d:	pop    ebp
  41cd3e:	mov    al,0xc5
  41cd40:	xor    al,cl
  41cd42:	inc    esp
  41cd43:	push   0x7e
  41cd45:	push   ss
  41cd46:	arpl   dx,sp
  41cd48:	in     al,dx
  41cd49:	mov    dh,BYTE PTR [edi+0xea4b18f]
  41cd4f:	(bad)  
  41cd50:	sar    DWORD PTR [esi-0x436d8392],1
  41cd56:	mov    esp,0x5d4a39e6
  41cd5b:	mov    cl,0x70
  41cd5d:	mov    ah,0x65
  41cd5f:	ja     0x41cdae
  41cd61:	nop
  41cd62:	ret    0x9a2e
  41cd65:	jo     0x41cd23
  41cd67:	push   0xfffffffd
  41cd69:	push   ebp
  41cd6a:	mov    cl,0xa8
  41cd6c:	mov    bh,0x8e
  41cd6e:	pop    ss
  41cd6f:	and    eax,0x4558c749
  41cd74:	mov    bh,0xb5
  41cd76:	and    dl,BYTE PTR [eax]
  41cd78:	cmp    DWORD PTR [edx+0x48969ac2],0xffffffd8
  41cd7f:	loop   0x41cdbb
  41cd81:	dec    DWORD PTR [edx]
  41cd83:	push   ebx
  41cd84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd85:	xchg   esi,eax
  41cd86:	aaa    
  41cd87:	cli    
  41cd88:	loope  0x41cdb9
  41cd8a:	bound  ecx,QWORD PTR [edi+eiz*4]
  41cd8d:	dec    esp
  41cd8e:	jp     0x41cd44
  41cd90:	scas   al,BYTE PTR es:[edi]
  41cd91:	pop    esp
  41cd92:	mov    ?,WORD PTR [ebx]
  41cd94:	mov    edx,0x53bde7ff
  41cd99:	out    dx,al
  41cd9a:	push   ss
  41cd9b:	outs   dx,BYTE PTR ds:[esi]
  41cd9c:	mov    ebp,0xf147d8e3
  41cda1:	call   0xdab967c
  41cda6:	dec    edx
  41cda7:	adc    al,0x1e
  41cda9:	sub    dh,BYTE PTR [edx-0xf]
  41cdac:	xchg   esp,eax
  41cdad:	bound  edx,QWORD PTR [ecx+0x5712c52a]
  41cdb3:	cmp    DWORD PTR [ebx+0x8f121d1],ecx
  41cdb9:	inc    edx
  41cdba:	out    0x55,al
  41cdbc:	and    al,0x7a
  41cdbe:	in     al,dx
  41cdbf:	pop    eax
  41cdc0:	adc    BYTE PTR [ebp+0x767c2c14],ah
  41cdc6:	mov    esi,0x7ca262b
  41cdcb:	sbb    esi,DWORD PTR [esi-0x5f]
  41cdce:	je     0x41cd6e
  41cdd0:	shl    bh,cl
  41cdd2:	out    0xd1,eax
  41cdd4:	push   es
  41cdd5:	cwde   
  41cdd6:	mov    esp,DWORD PTR [ebp+0x7d3ead3]
  41cddc:	pop    esi
  41cddd:	mov    bh,0x7
  41cddf:	cmp    ah,0x7a
  41cde2:	jp     0x41ce32
  41cde4:	aam    0xae
  41cde6:	add    DWORD PTR [edi],ebx
  41cde8:	les    ecx,FWORD PTR [eax-0x11]
  41cdeb:	cld    
  41cdec:	out    0xce,eax
  41cdee:	in     eax,0x3d
  41cdf0:	(bad)  
  41cdf1:	pop    ds
  41cdf2:	xor    edx,edi
  41cdf4:	dec    ebx
  41cdf5:	adc    ebp,eax
  41cdf7:	mov    esp,0xe1310c3e
  41cdfc:	xchg   ecx,eax
  41cdfd:	rcl    BYTE PTR gs:[ebx+0x48e9ee2c],1
  41ce04:	jp     0x41ce13
  41ce06:	add    edi,DWORD PTR [edx+0x2c]
  41ce09:	getsec 
  41ce0b:	sbb    DWORD PTR [ecx],ebp
  41ce0d:	mov    edi,0xdf2f27a7
  41ce12:	pop    ds
  41ce13:	cwde   
  41ce14:	dec    eax
  41ce15:	mov    dh,0xb3
  41ce17:	pop    ebx
  41ce18:	out    0xf8,al
  41ce1a:	pop    ss
  41ce1b:	std    
  41ce1c:	add    esi,DWORD PTR [ebx]
  41ce1e:	push   cs
  41ce1f:	int3   
  41ce20:	out    dx,al
  41ce21:	cdq    
  41ce22:	add    DWORD PTR [eax+0x17948490],0x6da843cd
  41ce2c:	mov    ebp,0x36b18c98
  41ce31:	enter  0x3aa6,0x2c
  41ce35:	inc    esi
  41ce36:	mov    eax,0xf5950616
  41ce3b:	mov    ebx,0x30a1cca2
  41ce41:	and    cl,BYTE PTR [edi]
  41ce43:	push   ebx
  41ce44:	jmp    0x6da7e979
  41ce49:	fwait
  41ce4a:	popa   
  41ce4b:	pop    edx
  41ce4c:	mov    ch,0x91
  41ce4e:	into   
  41ce4f:	jge    0x41ce9a
  41ce51:	sub    bl,dh
  41ce53:	ficom  WORD PTR [edx-0x19a73188]
  41ce59:	mov    dh,0x19
  41ce5b:	clc    
  41ce5c:	in     al,0xaf
  41ce5e:	les    esp,FWORD PTR gs:[ebp+0x7b]
  41ce62:	sbb    BYTE PTR [eax],dh
  41ce64:	loop   0x41cea6
  41ce66:	inc    edx
  41ce67:	out    0x8f,al
  41ce69:	add    al,0x1d
  41ce6b:	xchg   ecx,eax
  41ce6c:	xchg   edi,eax
  41ce6d:	cmp    ch,BYTE PTR [edi+0xdf9adbc]
  41ce73:	xlat   BYTE PTR ds:[ebx]
  41ce74:	jg     0x41ce42
  41ce76:	stos   DWORD PTR es:[edi],eax
  41ce77:	pop    edx
  41ce78:	iret   
  41ce79:	stos   BYTE PTR es:[edi],al
  41ce7a:	rcl    DWORD PTR [esi-0x49],0x43
  41ce7e:	xor    eax,0xeb2b9fa
  41ce83:	aam    0xf4
  41ce85:	clc    
  41ce86:	test   al,0x7a
  41ce88:	(bad)  
  41ce89:	pop    ebp
  41ce8a:	arpl   WORD PTR [esi-0x2c5bd58c],ax
  41ce90:	mov    esp,0xfe57a449
  41ce95:	jl     0x41ce97
  41ce97:	push   esp
  41ce98:	cli    
  41ce99:	inc    edi
  41ce9a:	adc    bh,al
  41ce9c:	push   ecx
  41ce9d:	outs   dx,DWORD PTR ds:[esi]
  41ce9e:	push   0xffffffc3
  41cea0:	in     al,0xfe
  41cea2:	(bad)  
  41cea3:	je     0x41cf07
  41cea5:	sbb    ah,0xa2
  41cea8:	pop    edi
  41cea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceaa:	lahf   
  41ceab:	pop    ss
  41ceac:	dec    esp
  41cead:	push   esp
  41ceae:	adc    dl,bl
  41ceb0:	or     edx,esp
  41ceb2:	pushf  
  41ceb3:	inc    edi
  41ceb4:	es adc al,0x1a
  41ceb7:	mov    es,WORD PTR [eax+0xb44a7e]
  41cebd:	data16 ja 0x41cecf
  41cec0:	test   cl,dl
  41cec2:	jge    0x41cefa
  41cec4:	push   ebx
  41cec5:	ret    
  41cec6:	push   edx
  41cec7:	lock add BYTE PTR [ebx],bl
  41ceca:	adc    al,0x81
  41cecc:	lahf   
  41cecd:	stos   BYTE PTR es:[edi],al
  41cece:	fisttp QWORD PTR [ecx]
  41ced0:	int3   
  41ced1:	stos   DWORD PTR es:[edi],eax
  41ced2:	mov    bh,bh
  41ced4:	mov    ah,0xa8
  41ced6:	xor    DWORD PTR [ecx+0x32],eax
  41ced9:	stc    
  41ceda:	or     eax,0x19059315
  41cedf:	nop
  41cee0:	add    al,0x10
  41cee2:	jae    0x41cea8
  41cee4:	push   ebx
  41cee5:	adc    esi,DWORD PTR [eax]
  41cee7:	sti    
  41cee8:	mov    ds:0x10b086e3,al
  41ceed:	pop    es
  41ceee:	adc    eax,0x92dc3303
  41cef3:	jae    0x41ceba
  41cef5:	adc    al,BYTE PTR [esp+ebx*2]
  41cef8:	int3   
  41cef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cefa:	push   ecx
  41cefb:	mov    ebp,0x761afdbe
  41cf00:	add    BYTE PTR [ecx+esi*4],0x36
  41cf04:	aam    0xbc
  41cf06:	ret    0x76d0
  41cf09:	retf   0x4f92
  41cf0c:	addr16 retf 
  41cf0e:	std    
  41cf0f:	jno    0x41cedb
  41cf11:	mov    ebx,0x3eac82fd
  41cf16:	jae    0x41cf81
  41cf18:	push   es
  41cf19:	or     BYTE PTR [ecx+0xd2db382],cl
  41cf1f:	push   es
  41cf20:	pop    edi
  41cf21:	sbb    eax,0x23e66900
  41cf26:	inc    edx
  41cf27:	out    dx,eax
  41cf28:	and    BYTE PTR [eax],0x79
  41cf2b:	gs mov ah,0xa3
  41cf2e:	sahf   
  41cf2f:	test   eax,0xc44ce6
  41cf34:	push   cs
  41cf35:	adc    al,0xc
  41cf37:	imul   edi,esp,0x5e
  41cf3a:	aad    0xf8
  41cf3c:	test   eax,0x11a1d899
  41cf41:	xor    al,BYTE PTR [edi-0x32]
  41cf44:	in     al,dx
  41cf45:	sub    ecx,esi
  41cf47:	or     ch,BYTE PTR [edi-0x48]
  41cf4a:	fisttp DWORD PTR [esi]
  41cf4c:	fstp   TBYTE PTR [edi]
  41cf4e:	inc    edi
  41cf4f:	cmp    ch,BYTE PTR [edx-0x12c07169]
  41cf55:	into   
  41cf56:	cs das 
  41cf58:	mov    ah,0x1e
  41cf5a:	int    0x55
  41cf5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf5d:	dec    ebx
  41cf5e:	and    bl,BYTE PTR [ebp+ecx*1+0x4d]
  41cf62:	and    eax,0xcbd68b3b
  41cf67:	ss or  al,0xe0
  41cf6a:	sbb    eax,0x6f1c92b8
  41cf6f:	jmp    0xd9c6946e
  41cf74:	gs mov ebx,0x209dc832
  41cf7a:	ror    DWORD PTR [ecx],cl
  41cf7c:	mov    fs:0xec81ae5e,eax
  41cf82:	xor    esp,ebx
  41cf84:	mov    dl,0xa5
  41cf86:	add    edi,edx
  41cf88:	shr    BYTE PTR [ecx],1
  41cf8a:	(bad)  
  41cf8b:	imul   ebp,ebp,0x6
  41cf8e:	aaa    
  41cf8f:	addr16 call 0x6207a49
  41cf95:	rol    ebp,1
  41cf97:	loop   0x41cf96
  41cf99:	fistp  DWORD PTR [edx+0x54c1599b]
  41cf9f:	push   ebx
  41cfa0:	ror    BYTE PTR [ecx],cl
  41cfa2:	aad    0x5c
  41cfa4:	fstp   DWORD PTR [eax-0x14006504]
  41cfaa:	outs   dx,BYTE PTR ds:[esi]
  41cfab:	dec    ebx
  41cfac:	loope  0x41d00a
  41cfae:	mov    ds:0x4b6db3f0,eax
  41cfb3:	ins    BYTE PTR es:[edi],dx
  41cfb4:	pop    ebp
  41cfb5:	out    0xd5,eax
  41cfb7:	dec    edx
  41cfb8:	and    eax,0x5b773ae0
  41cfbd:	jg     0x41d019
  41cfbf:	sbb    BYTE PTR [ebx+0x28d6ff80],dl
  41cfc5:	push   esi
  41cfc6:	adc    DWORD PTR [ebx-0x38651bd],0x5c
  41cfcd:	mov    bh,0xc7
  41cfcf:	scas   eax,DWORD PTR es:[edi]
  41cfd0:	aaa    
  41cfd1:	sbb    DWORD PTR [edx+0x585d14d5],0x5190eb9f
  41cfdb:	mov    ds:0x8a45644f,al
  41cfe0:	xchg   ecx,eax
  41cfe1:	cmp    esp,eax
  41cfe3:	mov    edx,DWORD PTR [eax+ebx*4+0x4]
  41cfe7:	in     eax,dx
  41cfe8:	sbb    al,0x12
  41cfea:	cdq    
  41cfeb:	test   DWORD PTR gs:[ebp+0x61bcf260],0x87141ca4
  41cff6:	sbb    ebp,ebp
  41cff8:	or     al,0xbc
  41cffa:	test   al,0xbd
  41cffc:	sti    
  41cffd:	dec    ebp
  41cffe:	jecxz  0x41cfe4
  41d000:	sub    ch,BYTE PTR [edx+edx*2+0x486ebf34]
  41d007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d008:	jl     0x41cfc1
  41d00a:	les    esi,FWORD PTR [eax+0x7eb2a101]
  41d010:	mov    edi,0x87f6ac8c
  41d015:	mov    DWORD PTR [ebx+0x166af14b],0xd270ddc5
  41d01f:	push   esi
  41d020:	sahf   
  41d021:	adc    dl,BYTE PTR [esi+0x6e61d654]
  41d027:	fldenv [ebx]
  41d029:	mov    al,ds:0x36f6ef9e
  41d02e:	pop    edi
  41d02f:	mov    edi,0x68b5a1a
  41d034:	scas   al,BYTE PTR es:[edi]
  41d035:	mov    cl,0x2d
  41d037:	sbb    eax,0x59a3f065
  41d03c:	jecxz  0x41d041
  41d03e:	and    bl,0x75
  41d041:	je     0x41cfe4
  41d043:	test   al,0x86
  41d045:	xchg   DWORD PTR [edi+0x6bf59a3e],ebp
  41d04b:	push   ebx
  41d04c:	xchg   edx,eax
  41d04d:	push   ss
  41d04e:	inc    edi
  41d04f:	adc    BYTE PTR [eax-0x54e4e6d4],0x6f
  41d056:	sub    esi,ecx
  41d058:	data16 jp 0x41d0ae
  41d05b:	in     al,dx
  41d05c:	mov    bh,0x23
  41d05e:	sub    al,0x87
  41d060:	scas   al,BYTE PTR es:[edi]
  41d061:	aaa    
  41d062:	gs inc edx
  41d064:	scas   eax,DWORD PTR es:[edi]
  41d065:	and    BYTE PTR [edx],bh
  41d067:	out    dx,al
  41d068:	aas    
  41d069:	ins    DWORD PTR es:[edi],dx
  41d06a:	pop    ebp
  41d06b:	fcom   DWORD PTR [edx+0x4b]
  41d06e:	sub    BYTE PTR [edi-0x216d9ade],ch
  41d074:	in     eax,0x84
  41d076:	ins    BYTE PTR es:[edi],dx
  41d077:	leave  
  41d078:	dec    esp
  41d079:	lds    ebp,FWORD PTR [edx]
  41d07b:	call   0x608661
  41d080:	xchg   esp,eax
  41d081:	mov    ebx,0x7968a8c5
  41d086:	(bad)  
  41d087:	fcmovbe st,st(1)
  41d089:	sbb    edi,ebx
  41d08b:	jl     0x41d0cd
  41d08d:	int    0xa
  41d08f:	jg     0x41d09b
  41d091:	add    eax,0x1ca0da58
  41d096:	adc    DWORD PTR [ecx-0x5a371536],edx
  41d09c:	and    ch,ch
  41d09e:	push   ds
  41d09f:	xchg   ebx,eax
  41d0a0:	mov    eax,0x4e141c34
  41d0a5:	ds pop edi
  41d0a7:	push   ebp
  41d0a8:	sub    eax,0x878fe030
  41d0ad:	mov    eax,0xd1f30293
  41d0b2:	test   eax,0xeaa6599e
  41d0b7:	loopne 0x41d056
  41d0b9:	mov    cl,0x7
  41d0bb:	or     ch,BYTE PTR [edx+0x46]
  41d0be:	sbb    BYTE PTR [ebx],al
  41d0c0:	div    BYTE PTR [esi+0xc]
  41d0c3:	or     dl,dh
  41d0c5:	imul   DWORD PTR [ebx-0x33]
  41d0c8:	or     DWORD PTR [ebx+0x6acb47f0],esp
  41d0ce:	jb     0x41d0f2
  41d0d0:	dec    esp
  41d0d1:	fist   DWORD PTR [ecx+0x34035bd6]
  41d0d7:	repz push edi
  41d0d9:	outs   dx,DWORD PTR ds:[esi]
  41d0da:	lahf   
  41d0db:	adc    DWORD PTR [ecx+eax*2],eax
  41d0de:	loope  0x41d09b
  41d0e0:	lds    ecx,FWORD PTR [ebx+0x27a69570]
  41d0e6:	cdq    
  41d0e7:	sbb    BYTE PTR [ebx],0xe7
  41d0ea:	jne    0x41d0f1
  41d0ec:	add    eax,0x8f8adc82
  41d0f1:	jno    0x41d0d5
  41d0f3:	jge    0x41d0e5
  41d0f5:	push   cs
  41d0f6:	loope  0x41d105
  41d0f8:	js     0x41d08f
  41d0fa:	pop    ss
  41d0fb:	fwait
  41d0fc:	sub    DWORD PTR [ebx+0x6caa632c],ecx
  41d102:	sbb    edx,DWORD PTR [ebx]
  41d104:	jb     0x41d0db
  41d106:	sub    al,BYTE PTR [ebx]
  41d108:	add    ax,0xce9
  41d10c:	iret   
  41d10d:	imul   esp
  41d10f:	add    BYTE PTR [edi+0x47f5a7b],ch
  41d115:	neg    DWORD PTR [ecx]
  41d117:	or     eax,0xd802b47b
  41d11c:	xor    eax,edi
  41d11e:	test   BYTE PTR [edx+0x6bb1f511],ch
  41d124:	mov    al,0x76
  41d126:	jae    0x41d0bb
  41d128:	jecxz  0x41d0c9
  41d12a:	xchg   cl,dl
  41d12c:	(bad)  
  41d12d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d12f:	test   ebp,edi
  41d131:	push   ebp
  41d132:	ja     0x41d137
  41d134:	sahf   
  41d135:	cdq    
  41d136:	mov    eax,ss
  41d138:	outs   dx,BYTE PTR ds:[esi]
  41d139:	jg     0x41d121
  41d13b:	(bad)  [edx-0xac472fb]
  41d141:	or     edx,0x5e96e601
  41d147:	push   ebp
  41d148:	dec    eax
  41d149:	xor    al,0x4c
  41d14b:	inc    esp
  41d14c:	gs pusha 
  41d14e:	mov    ch,0x93
  41d150:	pop    ebp
  41d151:	cmp    edx,DWORD PTR ds:0xe64877bc
  41d157:	adc    bh,ah
  41d159:	rol    DWORD PTR [ebx+0x7e177b2e],cl
  41d15f:	stc    
  41d160:	call   FWORD PTR [eax+0x5cb0d413]
  41d166:	retf   0x50a4
  41d169:	outs   dx,BYTE PTR ds:[esi]
  41d16a:	call   0x7f02a894
  41d16f:	lock jl 0x41d1d7
  41d172:	and    esi,DWORD PTR [ecx-0x2d]
  41d175:	jne    0x41d145
  41d177:	cld    
  41d178:	mov    dh,0xc1
  41d17a:	in     al,dx
  41d17b:	cmp    al,0x4e
  41d17d:	adc    ch,BYTE PTR [esi-0x23f308e4]
  41d183:	push   cs
  41d184:	inc    esp
  41d185:	xor    ch,cl
  41d187:	add    eax,0x4fd7953a
  41d18c:	mov    ebx,DWORD PTR [edi]
  41d18e:	shl    al,0x5b
  41d191:	xor    al,0xd8
  41d193:	mul    esp
  41d195:	rdmsr  
  41d197:	mov    dh,BYTE PTR [edi]
  41d199:	push   edi
  41d19a:	pop    edi
  41d19b:	xchg   edi,eax
  41d19c:	push   0xffffffd1
  41d19e:	adc    esp,DWORD PTR [edx+0x59acfe14]
  41d1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1a5:	jle    0x41d1eb
  41d1a7:	mov    ch,0x5d
  41d1a9:	push   0xe
  41d1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1ac:	(bad)  
  41d1ad:	and    al,0x3b
  41d1af:	mov    al,ds:0x898d7131
  41d1b4:	fcmovbe st,st(2)
  41d1b6:	pop    ss
  41d1b7:	out    0x6d,al
  41d1b9:	fs push ds
  41d1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1bc:	add    edx,DWORD PTR [eax]
  41d1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1bf:	dec    ebx
  41d1c0:	inc    esi
  41d1c1:	test   al,0xe2
  41d1c3:	(bad)  
  41d1c4:	fwait
  41d1c5:	dec    esi
  41d1c6:	mov    cl,0xd
  41d1c8:	imul   ebx,ebp,0xffffffcf
  41d1cb:	add    bl,BYTE PTR [edi-0x17b8e7d3]
  41d1d1:	outs   dx,DWORD PTR ds:[esi]
  41d1d2:	aas    
  41d1d3:	jnp    0x41d184
  41d1d5:	lods   eax,DWORD PTR ds:[esi]
  41d1d6:	out    0x73,al
  41d1d8:	mov    edx,0xe75e6e
  41d1dd:	cmp    eax,0x9d8a3c56
  41d1e2:	cmp    BYTE PTR [ecx],0x17
  41d1e5:	mov    edx,0x74913689
  41d1ea:	xchg   esi,eax
  41d1eb:	loope  0x41d1c1
  41d1ed:	xchg   edx,eax
  41d1ee:	mov    eax,0x47fa51b2
  41d1f3:	cs adc eax,0xbfc5a61
  41d1f9:	push   0x67
  41d1fb:	xchg   esi,eax
  41d1fc:	test   eax,0x96cd0e06
  41d201:	sbb    edx,DWORD PTR [ebx-0x2]
  41d204:	outs   dx,BYTE PTR ds:[esi]
  41d205:	int    0xcd
  41d207:	push   0x291b42f0
  41d20c:	mov    dl,0xe
  41d20e:	std    
  41d20f:	test   BYTE PTR [ecx],ch
  41d211:	mov    al,ds:0xa5cc6bd3
  41d216:	test   BYTE PTR [edi+ecx*8],ah
  41d219:	mov    ?,WORD PTR [edx]
  41d21b:	(bad)  
  41d21c:	jno    0x41d22b
  41d21e:	in     eax,dx
  41d21f:	xor    ebp,DWORD PTR [edi+0x6f]
  41d222:	mov    esp,0x44329461
  41d227:	ret    0x5053
  41d22a:	xchg   esp,eax
  41d22b:	or     eax,0x23d69c76
  41d230:	or     dl,0x93
  41d233:	iret   
  41d234:	dec    ebp
  41d235:	dec    esi
  41d236:	sahf   
  41d237:	in     eax,dx
  41d238:	mov    edi,0xe44ffc0b
  41d23d:	add    eax,esi
  41d23f:	test   eax,0xb1845433
  41d244:	mov    eax,ds:0x69c54ab9
  41d249:	pushf  
  41d24a:	cmp    ch,al
  41d24c:	add    cl,0xc9
  41d24f:	pop    edi
  41d250:	outs   dx,DWORD PTR ds:[esi]
  41d251:	(bad)  
  41d252:	(bad)  
  41d253:	add    edx,ecx
  41d255:	sahf   
  41d256:	pop    ebp
  41d257:	jle    0x41d2a8
  41d259:	and    ah,BYTE PTR [esi+0x4a89d303]
  41d25f:	(bad)  
  41d260:	addr16 gs cli 
  41d263:	add    BYTE PTR [eax],0x36
  41d266:	test   ch,0x1b
  41d269:	int    0x1b
  41d26b:	sbb    al,0x45
  41d26d:	or     dh,BYTE PTR [edi+ebp*1+0x4a]
  41d271:	in     eax,0x4
  41d273:	cs out 0xdb,eax
  41d276:	and    al,0x75
  41d278:	pop    esp
  41d279:	leave  
  41d27a:	lods   al,BYTE PTR ds:[esi]
  41d27b:	(bad)  
  41d27d:	fucomp st(4)
  41d27f:	pop    ebp
  41d280:	mov    dh,bh
  41d282:	inc    esi
  41d283:	adc    dl,BYTE PTR ds:0x387523b9
  41d289:	xchg   edi,eax
  41d28a:	xchg   BYTE PTR [ebp-0x7a299f3a],al
  41d290:	popa   
  41d291:	ds int3 
  41d293:	mov    ah,BYTE PTR [ecx]
  41d295:	dec    esp
  41d296:	shr    DWORD PTR [ecx-0x24],cl
  41d299:	out    dx,al
  41d29a:	scas   eax,DWORD PTR es:[edi]
  41d29b:	adc    bl,BYTE PTR [ebp-0x3]
  41d29e:	add    eax,0x22aa20f2
  41d2a3:	lea    esi,[eax+0x5b]
  41d2a6:	mov    DWORD PTR [esp+ecx*4-0x69],edi
  41d2aa:	scas   eax,DWORD PTR es:[edi]
  41d2ab:	div    DWORD PTR [eax+edx*2]
  41d2ae:	ss sbb edi,edi
  41d2b1:	sbb    esp,DWORD PTR [esp+ebp*8+0x4666fd7]
  41d2b8:	or     eax,0x71c2524d
  41d2bd:	fcomp  DWORD PTR [esi-0x164ead7e]
  41d2c3:	adc    ch,BYTE PTR [ecx]
  41d2c5:	out    0xb0,eax
  41d2c7:	and    al,0x73
  41d2c9:	shl    BYTE PTR [eax],0x8f
  41d2cc:	jno    0x41d28c
  41d2ce:	in     al,0x96
  41d2d0:	repz sbb BYTE PTR [ecx+esi*4],0x97
  41d2d5:	xor    eax,0xd14075a5
  41d2da:	sub    eax,0x29a2a984
  41d2df:	arpl   WORD PTR [ebp+0x7e3892aa],si
  41d2e5:	in     al,0x96
  41d2e7:	pop    ss
  41d2e8:	lods   eax,DWORD PTR ds:[esi]
  41d2e9:	push   ss
  41d2ea:	int3   
  41d2eb:	mov    eax,0xdf48b777
  41d2f0:	rcr    dl,1
  41d2f2:	mov    ebx,ebx
  41d2f4:	bound  edx,QWORD PTR [ecx]
  41d2f6:	mov    esp,0xbd584a37
  41d2fb:	das    
  41d2fc:	mov    ch,0xc6
  41d2fe:	inc    ecx
  41d2ff:	inc    eax
  41d300:	imul   DWORD PTR ds:0x249eb455
  41d306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d307:	rcl    BYTE PTR [edi-0x39df56be],cl
  41d30d:	jl     0x41d299
  41d30f:	sub    BYTE PTR ds:0xc87690ed,ah
  41d315:	xchg   ecx,esp
  41d317:	repnz dec eax
  41d319:	clc    
  41d31a:	stc    
  41d31b:	leave  
  41d31c:	(bad)  
  41d31e:	cmp    BYTE PTR [esi+0x2b],ah
  41d321:	fistp  DWORD PTR [edi+0x15]
  41d324:	fld    QWORD PTR [esi]
  41d326:	pop    esp
  41d327:	test   edx,esp
  41d329:	pop    ebp
  41d32a:	add    dh,dh
  41d32c:	cs daa 
  41d32e:	pop    edi
  41d32f:	(bad)  
  41d330:	ins    DWORD PTR es:[edi],dx
  41d331:	mov    eax,0xa7805991
  41d336:	adc    DWORD PTR [eax+0x4a],0xffffffe3
  41d33a:	dec    esi
  41d33b:	and    al,BYTE PTR [ebp+0x3a]
  41d33e:	mov    ecx,?
  41d340:	shl    BYTE PTR [ecx],0x50
  41d343:	jb     0x41d31c
  41d345:	outs   dx,DWORD PTR ds:[esi]
  41d346:	xchg   esp,eax
  41d347:	es retf 
  41d349:	xchg   DWORD PTR [edi-0x54],ebp
  41d34c:	fnsave [esi-0x323a15e]
  41d352:	sbb    eax,0x21fc0cde
  41d357:	cdq    
  41d358:	jg     0x41d318
  41d35a:	cmp    BYTE PTR [eax+0x2675f31b],dh
  41d360:	inc    eax
  41d361:	push   es
  41d362:	xchg   edx,eax
  41d363:	pushf  
  41d364:	mov    WORD PTR [ecx-0x59],?
  41d367:	ja     0x41d394
  41d369:	inc    ecx
  41d36a:	arpl   WORD PTR [edi+0x10],di
  41d36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d36e:	xor    al,0xf9
  41d370:	sub    al,0x66
  41d372:	or     eax,0xb76fcfaa
  41d377:	inc    esi
  41d378:	je     0x41d3a8
  41d37a:	push   0xf59461e0
  41d37f:	popf   
  41d380:	cmp    dh,BYTE PTR [edx+0x3]
  41d383:	add    ch,BYTE PTR [ebp-0x13]
  41d386:	adc    BYTE PTR [edi],bl
  41d388:	sub    ebx,DWORD PTR [edx-0x560a3187]
  41d38e:	pop    edi
  41d38f:	jge    0x41d3e7
  41d391:	scas   al,BYTE PTR es:[edi]
  41d392:	xchg   edx,eax
  41d393:	sbb    bh,bl
  41d395:	xchg   edi,eax
  41d396:	xlat   BYTE PTR ds:[ebx]
  41d397:	push   ecx
  41d398:	mov    edi,0xedcf86f
  41d39d:	gs ins DWORD PTR es:[edi],dx
  41d39f:	in     eax,dx
  41d3a0:	aas    
  41d3a1:	mov    esp,0x9dbed5a
  41d3a6:	daa    
  41d3a7:	into   
  41d3a8:	mov    BYTE PTR [ebx-0xe],bl
  41d3ab:	loope  0x41d365
  41d3ad:	inc    edx
  41d3ae:	xchg   ebp,eax
  41d3af:	popf   
  41d3b0:	mov    ebx,0x9a070686
  41d3b5:	adc    BYTE PTR [edx+0x7ffa8661],dl
  41d3bb:	mov    dl,0x9c
  41d3bd:	lds    ebp,FWORD PTR [edx+0x45]
  41d3c0:	les    ebx,FWORD PTR [esi+0x60]
  41d3c3:	mov    cl,0x16
  41d3c5:	mov    bl,0xf1
  41d3c7:	or     BYTE PTR [edx+0x7296495b],0xad
  41d3ce:	xchg   ecx,eax
  41d3cf:	mul    BYTE PTR [ebp-0x3992b579]
  41d3d5:	test   eax,0x3d5e3791
  41d3da:	xor    ch,0x9b
  41d3dd:	test   DWORD PTR [ecx-0x273dcceb],ebx
  41d3e3:	divps  xmm2,XMMWORD PTR [ebp-0x1a]
  41d3e7:	in     eax,0x78
  41d3e9:	aam    0x3d
  41d3eb:	pop    esi
  41d3ec:	popa   
  41d3ed:	add    bl,BYTE PTR ds:0x1faa42af
  41d3f3:	mov    bl,0xe0
  41d3f5:	sar    BYTE PTR [esi+0x71bd7111],0xc2
  41d3fc:	sbb    ch,dl
  41d3fe:	mov    al,0x4f
  41d400:	int3   
  41d401:	loopne 0x41d44a
  41d403:	lds    esi,FWORD PTR [edx+0x23]
  41d406:	popf   
  41d407:	cmc    
  41d408:	mov    esp,0xe39543ee
  41d40d:	xchg   BYTE PTR [esi-0x1ee43dd8],bl
  41d413:	mov    bl,0xaa
  41d415:	and    al,0x1f
  41d417:	test   BYTE PTR [ebp+0x5005c40a],cl
  41d41d:	fst    DWORD PTR [ebx-0x657c1c7f]
  41d423:	inc    esp
  41d424:	add    al,0x7
  41d426:	sub    BYTE PTR [ebx+esi*4],bh
  41d429:	push   eax
  41d42a:	repnz pop edx
  41d42c:	xor    al,0xf6
  41d42e:	loopne 0x41d3e1
  41d430:	cmovl  eax,esi
  41d433:	loopne 0x41d472
  41d435:	sar    al,0xe5
  41d438:	pop    ebx
  41d439:	gs pop esi
  41d43b:	lahf   
  41d43c:	in     eax,dx
  41d43d:	cmc    
  41d43e:	sti    
  41d43f:	outs   dx,BYTE PTR ds:[esi]
  41d440:	(bad)
  41d443:	or     dl,al
  41d445:	pusha  
  41d446:	js     0x41d497
  41d448:	sahf   
  41d449:	mov    esp,0x6d1d466d
  41d44e:	addr16 int 0xf0
  41d451:	popf   
  41d452:	(bad)  
  41d454:	outs   dx,WORD PTR ds:[esi]
  41d456:	adc    ch,bh
  41d458:	add    eax,0x481400b0
  41d45d:	aad    0xeb
  41d45f:	mov    edx,cs
  41d461:	xchg   esi,eax
  41d462:	jae    0x41d436
  41d464:	cwde   
  41d465:	adc    al,0x90
  41d467:	mov    dl,0x89
  41d469:	mov    ebp,DWORD PTR [ecx-0x15055163]
  41d46f:	clc    
  41d470:	arpl   WORD PTR [ecx],si
  41d472:	jns    0x41d449
  41d474:	cmp    eax,0x66b8a9fe
  41d479:	mov    esp,DWORD PTR [edi+0x9]
  41d47c:	call   0x8337:0xe9bc1113
  41d483:	adc    BYTE PTR [esi],0x8
  41d486:	std    
  41d487:	or     al,0x9f
  41d489:	arpl   WORD PTR [edi+0x4d25c06],dx
  41d48f:	stc    
  41d490:	or     eax,0x8c8fc39d
  41d495:	xor    al,0xf1
  41d497:	push   ebp
  41d498:	xchg   BYTE PTR [edi-0xd42c50e],bh
  41d49e:	loopne 0x41d49b
  41d4a0:	in     eax,dx
  41d4a1:	arpl   WORD PTR [edi+0x78bb3a37],sp
  41d4a7:	std    
  41d4a8:	mov    eax,ds:0xa125a017
  41d4ad:	xchg   ebx,eax
  41d4ae:	ja     0x41d525
  41d4b0:	cmp    BYTE PTR ds:0xc3f3f0e3,dh
  41d4b6:	or     dl,BYTE PTR [edi-0x5ce588b4]
  41d4bc:	inc    eax
  41d4bd:	mov    edi,0xb4d1272
  41d4c2:	cli    
  41d4c3:	xchg   esi,eax
  41d4c4:	popa   
  41d4c5:	jbe    0x41d4d4
  41d4c7:	push   0xf800038c
  41d4cc:	out    dx,al
  41d4cd:	and    al,0x2e
  41d4cf:	xor    edi,DWORD PTR [ecx+0x50c2b528]
  41d4d5:	mov    edx,DWORD PTR [eax+0x20]
  41d4d8:	mov    dl,BYTE PTR [ebp-0xa]
  41d4db:	add    dh,ch
  41d4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4de:	add    BYTE PTR [ebx-0x72],dl
  41d4e1:	mov    ecx,0x29944543
  41d4e6:	cmp    eax,DWORD PTR [ebx+ebp*8-0x6f]
  41d4ea:	cli    
  41d4eb:	xor    al,al
  41d4ed:	test   eax,0x1c05a95b
  41d4f2:	pop    ss
  41d4f3:	dec    edx
  41d4f4:	les    eax,FWORD PTR [edx-0x7b]
  41d4f7:	pop    ebx
  41d4f8:	cwde   
  41d4f9:	xor    esp,eax
  41d4fb:	push   edx
  41d4fc:	xlat   BYTE PTR ds:[ebx]
  41d4fd:	fisubr DWORD PTR [edi-0x2f5511e2]
  41d503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d504:	mov    bh,0x4b
  41d506:	lds    esp,FWORD PTR [edx+ecx*2+0x20]
  41d50a:	cmp    DWORD PTR [esi],esi
  41d50c:	mov    edx,0x43a3f684
  41d511:	xor    bl,BYTE PTR fs:[eax]
  41d514:	aad    0x5c
  41d516:	(bad)  
  41d517:	stos   BYTE PTR es:[edi],al
  41d518:	add    BYTE PTR [ecx+0x56a0ca9e],cl
  41d51e:	dec    edx
  41d51f:	fwait
  41d520:	loopne 0x41d59f
  41d522:	aaa    
  41d523:	in     al,0xf0
  41d525:	jl     0x41d59f
  41d527:	fcomp  st(6)
  41d529:	cld    
  41d52a:	or     BYTE PTR [ecx+ebp*2+0x3159524b],bl
  41d531:	or     al,0x0
  41d533:	int    0xd1
  41d535:	pop    es
  41d536:	mov    edi,0xf9e6a7cf
  41d53b:	cmp    BYTE PTR [ecx],dh
  41d53d:	fadd   QWORD PTR [esi-0x7d]
  41d540:	xchg   ecx,eax
  41d541:	aaa    
  41d542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d543:	das    
  41d544:	pop    ebp
  41d545:	addr16 popf 
  41d547:	mov    cl,0x38
  41d549:	pop    edx
  41d54a:	shl    ch,cl
  41d54c:	ins    DWORD PTR es:[edi],dx
  41d54d:	cdq    
  41d54e:	in     eax,0x5
  41d550:	adc    bh,dl
  41d552:	retf   0xfc17
  41d555:	and    al,0xb0
  41d557:	jnp    0x41d510
  41d559:	cs mov esi,ebx
  41d55c:	inc    eax
  41d55d:	loopne 0x41d531
  41d55f:	aaa    
  41d560:	push   edi
  41d561:	xchg   edi,eax
  41d562:	push   0x4
  41d564:	or     eax,0xe8da62d8
  41d569:	mov    edx,0xb2a0f72a
  41d56e:	loope  0x41d5e2
  41d570:	lea    ebp,[edi-0x2a79f0e0]
  41d576:	fs add eax,0xcfb9ddf8
  41d57c:	or     eax,0x31dccba8
  41d581:	ret    0x4c5d
  41d584:	xchg   BYTE PTR [ebx-0x20d3911f],dh
  41d58a:	xor    eax,DWORD PTR [eax]
  41d58c:	popf   
  41d58d:	clc    
  41d58e:	pop    ecx
  41d58f:	mov    al,0x7b
  41d591:	pop    ecx
  41d592:	js     0x41d580
  41d594:	sub    BYTE PTR [ecx+0x4c0fae22],cl
  41d59a:	mov    ecx,edx
  41d59c:	cs sbb eax,0xce4b1669
  41d5a2:	mov    al,ds:0x5c6dede1
  41d5a7:	cs mov dl,0xee
  41d5aa:	mov    eax,0xd17af290
  41d5af:	adc    al,0x5f
  41d5b1:	adc    DWORD PTR [ecx+ecx*1],ecx
  41d5b4:	fadd   st(6),st
  41d5b6:	sar    ebx,0xda
  41d5b9:	das    
  41d5ba:	pop    ecx
  41d5bb:	mov    ds:0xa1a23a1b,al
  41d5c0:	fiadd  WORD PTR [esp+eiz*4-0x7d]
  41d5c4:	mov    ebp,esp
  41d5c6:	push   cs
  41d5c7:	fwait
  41d5c8:	sub    DWORD PTR [edx],0xffffffff
  41d5cb:	push   0x50
  41d5cd:	(bad)
  41d5d0:	xchg   ecx,eax
  41d5d1:	sti    
  41d5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d3:	push   esp
  41d5d4:	loope  0x41d5ef
  41d5d6:	xor    eax,0xa6cf0b54
  41d5db:	xchg   DWORD PTR [esi+0x3f],ebp
  41d5de:	inc    ebx
  41d5df:	repz and edi,edx
  41d5e2:	xor    eax,0xc5f3f472
  41d5e7:	push   edx
  41d5e8:	lds    esp,FWORD PTR [ecx-0x35b0fbcf]
  41d5ee:	mov    edi,0xbe2cb1a0
  41d5f3:	mov    edi,0x2ca5b6d7
  41d5f8:	push   eax
  41d5f9:	inc    ecx
  41d5fa:	push   es
  41d5fb:	xor    eax,DWORD PTR [eax-0x687efaac]
  41d601:	test   esi,0xb8188c86
  41d607:	out    dx,al
  41d608:	stc    
  41d609:	sbb    ah,al
  41d60b:	push   ss
  41d60c:	sub    eax,ecx
  41d60e:	int3   
  41d60f:	gs mov edx,0x8011ac47
  41d615:	test   eax,esp
  41d617:	mov    cl,0xff
  41d619:	cmp    eax,0x4e9f4237
  41d61e:	ins    DWORD PTR es:[edi],dx
  41d61f:	loopne 0x41d662
  41d621:	clc    
  41d622:	push   esi
  41d623:	jo     0x41d683
  41d625:	(bad)  
  41d626:	(bad)  
  41d627:	fcomp  QWORD PTR [edi]
  41d629:	mov    ds:0x1c7400ef,al
  41d62e:	and    eax,0xe9d8c242
  41d633:	(bad)  
  41d635:	mov    esi,0x87aa58a5
  41d63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d63b:	sbb    al,0xc0
  41d63d:	mov    ch,0x5c
  41d63f:	add    DWORD PTR [ecx-0x79],esi
  41d642:	jmp    0x41d657
  41d644:	lea    edi,[ecx-0x42]
  41d647:	ret    0x16f0
  41d64a:	fisub  DWORD PTR [edx]
  41d64c:	adc    ebx,DWORD PTR [ebp+0x6e]
  41d64f:	jge    0x41d603
  41d651:	cmp    bh,0x7f
  41d654:	lods   eax,DWORD PTR ds:[esi]
  41d655:	enter  0x5cf6,0xfc
  41d659:	push   esp
  41d65a:	sbb    al,0xca
  41d65c:	mov    cl,BYTE PTR [eax+0x3f923479]
  41d662:	pushf  
  41d663:	cmp    DWORD PTR [ebp-0x42f6876],0x63
  41d66a:	push   ebp
  41d66b:	out    0xe0,al
  41d66d:	add    BYTE PTR [ecx],cl
  41d66f:	adc    al,0x5
  41d671:	out    dx,eax
  41d672:	ins    DWORD PTR es:[edi],dx
  41d673:	ja     0x41d6d0
  41d675:	jge    0x41d640
  41d677:	jp     0x41d616
  41d679:	fisttp DWORD PTR ds:0x6df8cb7b
  41d67f:	sbb    bh,BYTE PTR [edx+eiz*1-0x29]
  41d683:	sbb    DWORD PTR [ebx+0x5a],ecx
  41d686:	mov    ch,0x6d
  41d688:	mov    eax,ds:0x856f0d81
  41d68d:	dec    edi
  41d68e:	xor    ah,bl
  41d690:	lahf   
  41d691:	push   eax
  41d692:	fst    QWORD PTR [edx]
  41d694:	outs   dx,DWORD PTR es:[esi]
  41d696:	mov    dl,0xe2
  41d698:	nop
  41d699:	ss push cs
  41d69b:	aad    0x5e
  41d69d:	rcl    eax,0x87
  41d6a0:	dec    esp
  41d6a1:	sub    al,0xf6
  41d6a3:	popa   
  41d6a4:	mov    DWORD PTR [edx-0x4c],ebx
  41d6a7:	xor    BYTE PTR [ebx],bh
  41d6a9:	pop    edi
  41d6aa:	mov    ah,0xeb
  41d6ac:	sub    ecx,DWORD PTR [ecx+0x548bb4ca]
  41d6b2:	jnp    0x41d688
  41d6b4:	sbb    DWORD PTR [esi+0x44],esi
  41d6b7:	popa   
  41d6b8:	jmp    0x41d6eb
  41d6ba:	js     0x41d651
  41d6bc:	or     eax,0xfc459af
  41d6c1:	add    esp,DWORD PTR [ebx]
  41d6c3:	mov    BYTE PTR [eax-0x4a0512c2],0x9d
  41d6ca:	xor    cl,BYTE PTR ds:0x50943333
  41d6d0:	xchg   ebp,eax
  41d6d1:	ins    BYTE PTR es:[edi],dx
  41d6d2:	lds    edi,FWORD PTR [ecx-0x4958a825]
  41d6d8:	imul   eax
  41d6da:	xlat   BYTE PTR ds:[ebx]
  41d6db:	dec    ecx
  41d6dc:	mov    edx,0x7787f6ec
  41d6e1:	imul   esp,DWORD PTR [eax-0x7f063943],0xd65bfaf4
  41d6eb:	mov    ebx,0x65845051
  41d6f0:	test   BYTE PTR [ebx],ch
  41d6f2:	sbb    DWORD PTR [ebx],ecx
  41d6f4:	hlt    
  41d6f5:	cmc    
  41d6f6:	pop    edx
  41d6f7:	enter  0xc0a6,0x13
  41d6fb:	mov    bh,0xd3
  41d6fd:	stos   DWORD PTR es:[edi],eax
  41d6fe:	push   edx
  41d6ff:	sbb    BYTE PTR [edi],bh
  41d701:	enter  0x104f,0xa8
  41d705:	sub    BYTE PTR [eax-0x204f842f],al
  41d70b:	mov    cl,0xd7
  41d70d:	mov    al,ds:0xa577f86d
  41d712:	cmp    ch,ah
  41d714:	stc    
  41d715:	(bad)  
  41d716:	push   edx
  41d717:	out    dx,al
  41d718:	ja     0x41d6cd
  41d71a:	jmp    0xf2b5:0x724a3c41
  41d721:	adc    esi,DWORD PTR es:[ecx+0x37]
  41d725:	jge    0x41d751
  41d727:	loope  0x41d768
  41d729:	(bad)  
  41d72a:	jae    0x41d6b0
  41d72c:	push   es
  41d72d:	jo     0x41d796
  41d72f:	mov    eax,0xf053edd2
  41d734:	sub    ebx,DWORD PTR [eax-0x623ef5ce]
  41d73a:	sub    ebx,DWORD PTR [edx]
  41d73c:	and    BYTE PTR [ebx],cl
  41d73e:	gs call 0x4985:0x823b8a89
  41d746:	les    edx,FWORD PTR [ecx-0x2c]
  41d749:	cmp    al,BYTE PTR [edi-0x3068af64]
  41d74f:	sub    BYTE PTR [ecx+ebx*2-0x6a56a9c],ch
  41d756:	mov    al,0xe0
  41d758:	jl     0x41d6eb
  41d75a:	pop    ebx
  41d75b:	dec    ebp
  41d75c:	(bad)  [ebx+0x30]
  41d75f:	fld    TBYTE PTR [ecx+0x33]
  41d762:	cmc    
  41d763:	jbe    0x41d7a9
  41d765:	retf   
  41d766:	out    0xa6,al
  41d768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d769:	push   0xffffffe9
  41d76b:	mov    ebx,0x275fdfc5
  41d770:	cmp    eax,0x4b5292d1
  41d775:	test   al,0x32
  41d777:	jne    0x41d730
  41d779:	mov    esp,0xf15d9038
  41d77e:	out    dx,al
  41d77f:	in     eax,0xb7
  41d781:	xchg   esi,eax
  41d782:	cmp    dl,0x96
  41d785:	adc    DWORD PTR [eax-0x6022556c],0xb9657654
  41d78f:	out    dx,eax
  41d790:	xor    eax,0x131d49a0
  41d795:	cld    
  41d796:	pmovmskb esi,mm5
  41d799:	mov    bl,0x2a
  41d79b:	in     al,dx
  41d79c:	mov    ebp,DWORD PTR [eax-0x191a3abd]
  41d7a2:	adc    eax,DWORD PTR [esi]
  41d7a4:	fcomip st,st(1)
  41d7a6:	out    0x69,al
  41d7a8:	icebp  
  41d7a9:	loopne 0x41d827
  41d7ab:	pop    es
  41d7ac:	push   ebx
  41d7ad:	or     DWORD PTR [esi-0x11],ebp
  41d7b0:	retf   0x93b
  41d7b3:	aam    0xcc
  41d7b5:	inc    eax
  41d7b6:	std    
  41d7b7:	jmp    0xad0f65d4
  41d7bc:	test   esi,esi
  41d7be:	or     eax,0xeac03824
  41d7c3:	sub    bh,BYTE PTR [ebx+0x21]
  41d7c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7c7:	dec    ecx
  41d7c8:	mov    bh,BYTE PTR [esi+0x58]
  41d7cb:	pusha  
  41d7cc:	jmp    0x7972:0x6215e5bc
  41d7d3:	inc    ecx
  41d7d4:	out    0xe0,eax
  41d7d6:	(bad)  
  41d7d7:	imul   edi,DWORD PTR ds:0x536f3cf2,0xfffffff4
  41d7de:	(bad)  
  41d7e0:	(bad)
  41d7e4:	ja     0x41d82a
  41d7e6:	add    BYTE PTR ds:0xcf774bbe,dl
  41d7ec:	fld    TBYTE PTR [ecx-0x35]
  41d7ef:	sahf   
  41d7f0:	mov    esp,0x67b6e949
  41d7f5:	cmp    bl,BYTE PTR ds:0xa3005214
  41d7fb:	imul   esi,DWORD PTR [eax+0x33182228],0x93fa5678
  41d805:	ret    
  41d806:	lock mov cl,0x2c
  41d809:	aam    0xbf
  41d80b:	pusha  
  41d80c:	lock push ss
  41d80e:	cld    
  41d80f:	int    0x6c
  41d811:	mov    eax,0xf686b86
  41d816:	div    DWORD PTR [ebp+0x6543a405]
  41d81c:	jbe    0x41d845
  41d81e:	mov    edi,0xade8efd3
  41d823:	aaa    
  41d824:	cs push edi
  41d826:	cmp    al,BYTE PTR [ebp-0x11]
  41d829:	(bad)  
  41d82a:	imul   BYTE PTR [ecx-0x6bc34d6b]
  41d830:	inc    esi
  41d831:	js     0x41d85f
  41d833:	ds aas 
  41d835:	adc    DWORD PTR [ebp-0x54],edi
  41d838:	or     edx,DWORD PTR [esi+eiz*1+0x77]
  41d83c:	mov    WORD PTR [esi],?
  41d83e:	imul   esp,edi,0xffffff87
  41d841:	mov    ecx,0x79818a20
  41d846:	push   eax
  41d847:	sbb    eax,0xf7613db2
  41d84c:	lahf   
  41d84d:	sbb    BYTE PTR [ecx+0x2f68fab7],dh
  41d853:	in     eax,dx
  41d854:	ds hlt 
  41d856:	xchg   edi,eax
  41d857:	add    al,0x15
  41d859:	cli    
  41d85a:	push   ebx
  41d85b:	mov    BYTE PTR [edi-0x7a],cl
  41d85e:	enter  0x238b,0x4c
  41d862:	std    
  41d863:	mov    ds:0x13d6fe44,al
  41d868:	clc    
  41d869:	mov    ebp,0xefa4128a
  41d86e:	es cld 
  41d870:	lods   al,BYTE PTR ds:[esi]
  41d871:	mov    esp,0x2acf6ed4
  41d876:	inc    ebx
  41d877:	cli    
  41d878:	test   DWORD PTR [ecx-0x75],esi
  41d87b:	inc    eax
  41d87c:	mov    eax,0x804ee5fd
  41d881:	mov    dh,0xb1
  41d883:	arpl   WORD PTR [esi+0x1be390ab],dx
  41d889:	dec    edi
  41d88a:	pop    esi
  41d88b:	xchg   ecx,eax
  41d88c:	out    0x2e,al
  41d88e:	sbb    al,0x43
  41d890:	arpl   WORD PTR [ecx],di
  41d892:	inc    eax
  41d893:	jg     0x41d83b
  41d895:	mov    ecx,0x61e1a350
  41d89a:	out    dx,al
  41d89b:	push   cs
  41d89c:	sbb    DWORD PTR [edx-0x5],ebp
  41d89f:	stos   DWORD PTR es:[edi],eax
  41d8a0:	and    al,0xe9
  41d8a2:	mov    ?,WORD PTR [edx-0x19e2ad9b]
  41d8a8:	inc    BYTE PTR [ebp+0x4b]
  41d8ab:	push   ss
  41d8ac:	sbb    DWORD PTR [bp+di+0x5a],esp
  41d8b0:	cs jmp 0xbce5:0xf5a97659
  41d8b8:	stos   BYTE PTR es:[edi],al
  41d8b9:	sbb    eax,0xe2345b97
  41d8be:	mov    ds:0xfd70974d,al
  41d8c3:	add    eax,0x8dc732f1
  41d8c8:	outs   dx,BYTE PTR ds:[esi]
  41d8c9:	stos   BYTE PTR es:[edi],al
  41d8ca:	ror    esp,1
  41d8cc:	push   edi
  41d8cd:	jmp    0xb36fe1ac
  41d8d2:	dec    DWORD PTR [esp+eiz*2+0x4d]
  41d8d6:	pop    edx
  41d8d7:	repnz lock int 0xfe
  41d8db:	in     al,dx
  41d8dc:	mov    ds:0x39e68a3,al
  41d8e1:	jecxz  0x41d8ac
  41d8e3:	and    eax,0x9cfabc1f
  41d8e8:	cmp    al,0x3
  41d8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8eb:	mov    dl,0xc9
  41d8ed:	add    dh,BYTE PTR [ebx]
  41d8ef:	mov    esi,0xb0fbb212
  41d8f4:	dec    esi
  41d8f5:	(bad)
  41d8f9:	jmp    0x41d8fc
  41d8fb:	lods   eax,DWORD PTR ds:[esi]
  41d8fc:	xchg   ecx,eax
  41d8fd:	inc    edx
  41d8fe:	in     eax,dx
  41d8ff:	or     edx,edx
  41d901:	mov    ecx,0xefad32da
  41d906:	ret    0x276f
  41d909:	inc    ebx
  41d90a:	cmp    dh,ah
  41d90c:	sub    ebp,DWORD PTR [ebx-0x32]
  41d90f:	and    BYTE PTR [eax+0x253ede08],0x5d
  41d916:	push   eax
  41d917:	scas   al,BYTE PTR es:[edi]
  41d918:	mov    ds:0x69deee3d,eax
  41d91d:	repnz mov ecx,0xd5498e6e
  41d923:	sbb    edi,DWORD PTR [edi]
  41d925:	xchg   ebp,eax
  41d926:	pop    esi
  41d927:	mov    dl,dh
  41d929:	jmp    0xea70:0x2dac43cb
  41d930:	popf   
  41d931:	jo     0x41d96c
  41d933:	push   ds
  41d934:	into   
  41d935:	add    ch,bl
  41d937:	test   ebx,0x5b194462
  41d93d:	xor    eax,0x3cf0789e
  41d942:	sub    al,0x4e
  41d944:	dec    esp
  41d945:	jmp    0x41d971
  41d947:	xchg   esp,eax
  41d948:	into   
  41d949:	fstp   TBYTE PTR [ebx+ecx*2]
  41d94c:	adc    esp,DWORD PTR [edx+0x60]
  41d94f:	bswap  edx
  41d951:	xor    BYTE PTR [edi-0x1a],0xce
  41d955:	ja     0x41d968
  41d957:	lea    edi,ds:0x796e8577
  41d95d:	mov    ebx,0x9fa5a64f
  41d962:	push   edx
  41d963:	adc    al,0xc1
  41d965:	sti    
  41d966:	add    al,0x31
  41d968:	inc    edi
  41d969:	loope  0x41d992
  41d96b:	mov    dh,0x56
  41d96d:	mov    ah,0x15
  41d96f:	fwait
  41d970:	pop    edi
  41d971:	jmp    0x294f0366
  41d976:	(bad)
  41d97b:	ret    0xf97d
  41d97e:	data16 lahf 
  41d980:	add    DWORD PTR [ebx+eiz*1+0x4811e35b],ecx
  41d987:	cdq    
  41d988:	jmp    0x113d4c8a
  41d98d:	xor    al,0xd6
  41d98f:	lds    ebx,FWORD PTR [ecx]
  41d991:	xchg   esi,eax
  41d992:	jl     0x41d94c
  41d994:	fwait
  41d995:	push   edi
  41d996:	cmp    DWORD PTR [ebx],edi
  41d998:	jns    0x41d9f6
  41d99a:	mov    dh,0xec
  41d99c:	and    cl,cl
  41d99e:	add    ch,dh
  41d9a0:	dec    esi
  41d9a1:	test   BYTE PTR [edx-0x5b],al
  41d9a4:	repnz sub al,0xbf
  41d9a7:	adc    ebp,ebx
  41d9a9:	scas   eax,DWORD PTR es:[edi]
  41d9aa:	jg     0x41da24
  41d9ac:	mov    ah,0xd4
  41d9ae:	and    dh,BYTE PTR [edx-0x41]
  41d9b1:	pop    ebp
  41d9b2:	inc    ebp
  41d9b3:	sbb    eax,0xc9868eaa
  41d9b8:	pop    esp
  41d9b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9ba:	jl     0x41d9eb
  41d9bc:	push   eax
  41d9bd:	shl    ecx,cl
  41d9bf:	stc    
  41d9c0:	std    
  41d9c1:	mov    edi,0xa43acf25
  41d9c6:	push   ebp
  41d9c7:	repz dec ebx
  41d9c9:	inc    edi
  41d9ca:	ror    DWORD PTR [edx-0x4279d414],cl
  41d9d0:	sub    eax,0xdc3a0f
  41d9d5:	jp     0x41d9d1
  41d9d7:	lahf   
  41d9d8:	mov    ds:0xf60fcab,al
  41d9dd:	xchg   edi,eax
  41d9de:	ret    
  41d9df:	dec    ebp
  41d9e0:	jge    0x41d9eb
  41d9e2:	retf   0xf394
  41d9e5:	mov    esp,0x3eebffc1
  41d9ea:	bound  edi,QWORD PTR fs:[ecx]
  41d9ed:	aad    0x10
  41d9ef:	or     cl,cl
  41d9f1:	push   esp
  41d9f2:	add    edx,DWORD PTR [ebp+0x26e41bf2]
  41d9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9f9:	arpl   WORD PTR [ecx+0x26107975],dx
  41d9ff:	pop    edx
  41da00:	sbb    al,0x86
  41da02:	in     eax,0x24
  41da04:	xor    ebx,DWORD PTR [ebx-0x634c97ca]
  41da0a:	das    
  41da0b:	mov    edi,0x8d47d80d
  41da10:	mov    eax,ds:0xf33c1712
  41da15:	cmp    al,0x70
  41da17:	shr    BYTE PTR [eax-0x55f012d2],0x3f
  41da1e:	jecxz  0x41da32
  41da20:	mov    al,ds:0x2d91663b
  41da25:	imul   BYTE PTR [ecx-0x5a0847fa]
  41da2b:	mov    eax,fs
  41da2d:	push   eax
  41da2e:	mov    cl,0xb6
  41da30:	in     al,0xa9
  41da32:	test   BYTE PTR [esi+ebp*4],dh
  41da35:	xor    al,0xc7
  41da37:	sub    esp,DWORD PTR [ecx]
  41da39:	pop    edx
  41da3a:	rcl    BYTE PTR [ecx+0x4184fdec],1
  41da40:	pop    ebx
  41da41:	pop    es
  41da42:	ja     0x41da60
  41da44:	ss aad 0xfc
  41da47:	mov    ebx,cs
  41da49:	inc    edx
  41da4a:	lods   al,BYTE PTR ds:[esi]
  41da4b:	clc    
  41da4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da4d:	arpl   WORD PTR [edx-0x3b0bb1b5],si
  41da53:	pop    ebp
  41da54:	mov    ds:0x5430e084,al
  41da59:	repz retf 
  41da5b:	mov    ch,0x35
  41da5d:	and    dh,bh
  41da5f:	ror    ecx,0xf
  41da62:	cmc    
  41da63:	test   eax,0x97691a3b
  41da68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da69:	mov    ebp,0x4040949a
  41da6e:	adc    eax,0x88e71cdd
  41da73:	arpl   bp,dx
  41da75:	inc    edi
  41da76:	mov    dl,0x38
  41da78:	dec    esp
  41da79:	dec    edx
  41da7a:	nop
  41da7b:	xchg   ecx,eax
  41da7c:	mov    dh,cl
  41da7e:	cmp    ebx,DWORD PTR [ecx+0x66b663a5]
  41da84:	push   0xffffff90
  41da86:	jge    0x41da3b
  41da88:	sahf   
  41da89:	mov    eax,0x66d6c9e8
  41da8e:	cs (bad) 
  41da90:	icebp  
  41da91:	out    dx,eax
  41da92:	mov    edi,0xa9bfdbce
  41da97:	jns    0x41dae0
  41da99:	pop    ebx
  41da9a:	xchg   BYTE PTR [ebx],ch
  41da9c:	(bad)  
  41da9d:	or     ecx,edi
  41da9f:	push   esi
  41daa0:	or     DWORD PTR [ebx],eax
  41daa2:	dec    edx
  41daa3:	(bad)  
  41daa4:	imul   edi,eax,0xffffff98
  41daa7:	inc    edi
  41daa8:	mov    dl,0x33
  41daaa:	adc    ah,BYTE PTR [edi]
  41daac:	mov    ecx,0x48f8b39a
  41dab1:	push   edi
  41dab2:	pop    es
  41dab3:	into   
  41dab4:	dec    esi
  41dab5:	int3   
  41dab6:	loope  0x41da46
  41dab8:	pop    es
  41dab9:	or     edx,DWORD PTR [edx]
  41dabb:	pop    es
  41dabc:	rcl    BYTE PTR [ecx],cl
  41dabe:	jae    0x41db05
  41dac0:	outs   dx,BYTE PTR ds:[esi]
  41dac1:	inc    BYTE PTR [edi]
  41dac3:	dec    edx
  41dac4:	adc    cl,ah
  41dac6:	inc    esi
  41dac7:	loopne 0x41da60
  41dac9:	ss cmp al,0x41
  41dacc:	xor    ah,BYTE PTR [edi]
  41dace:	mov    bh,BYTE PTR ds:0x985f8cf0
  41dad4:	in     al,dx
  41dad5:	call   0x2689b872
  41dada:	cwde   
  41dadb:	cs and eax,0x8410f3b1
  41dae1:	jg     0x41daa0
  41dae3:	test   eax,0x58de7afb
  41dae8:	dec    esi
  41dae9:	mov    ?,WORD PTR [ebx]
  41daeb:	sbb    eax,0xf854fdcd
  41daf0:	je     0x41db6c
  41daf2:	dec    ebp
  41daf3:	mov    ch,0x1b
  41daf5:	push   esi
  41daf6:	nop
  41daf7:	dec    edi
  41daf8:	pop    ss
  41daf9:	lahf   
  41dafa:	ret    0x843b
  41dafd:	xchg   ebx,ebx
  41daff:	js     0x41daf4
  41db01:	sub    eax,esp
  41db03:	imul   esp,ebp,0x915c872b
  41db09:	adc    cl,al
  41db0b:	aaa    
  41db0c:	mov    ah,BYTE PTR [ebx+0x5129e2ae]
  41db12:	ss (bad) 
  41db14:	rcl    DWORD PTR [ebx+ecx*8+0x2c],cl
  41db18:	fadd   st(0),st
  41db1a:	xlat   BYTE PTR ds:[ebx]
  41db1b:	(bad)  
  41db1c:	push   0x52
  41db1e:	inc    ebx
  41db1f:	jp     0x41db7f
  41db21:	sbb    DWORD PTR [ebp+0x47c289e],ebp
  41db27:	popa   
  41db28:	adc    DWORD PTR [ebx],0xb5b8f8b
  41db2e:	out    0xb2,al
  41db30:	nop
  41db31:	in     eax,dx
  41db32:	aam    0xb3
  41db34:	loopne 0x41dad8
  41db36:	xor    al,0x59
  41db38:	jmp    0x4ce9:0xdd45ba2b
  41db3f:	daa    
  41db40:	out    0x98,eax
  41db42:	jge    0x41db4f
  41db44:	add    DWORD PTR ds:0x41db1ded,ecx
  41db4a:	inc    ebx
  41db4b:	sbb    DWORD PTR [ebx+edi*8+0x3dde4148],edi
  41db52:	cli    
  41db53:	and    esi,DWORD PTR [ebx-0x68]
  41db56:	outs   dx,DWORD PTR ds:[esi]
  41db57:	fdivr  st(0),st
  41db59:	or     BYTE PTR [edx+edi*2-0x491bcb95],bl
  41db60:	sbb    eax,0x3cec3e23
  41db65:	dec    ecx
  41db66:	mov    bh,0xb3
  41db68:	jg     0x41db11
  41db6a:	mov    edx,0xdf1e6771
  41db6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db70:	ss out 0x5,al
  41db73:	pop    ebp
  41db74:	sub    DWORD PTR ds:0x99e2a401,esi
  41db7a:	mov    cl,dl
  41db7c:	call   0x940e6e24
  41db81:	js     0x41dbdd
  41db83:	out    dx,eax
  41db84:	and    ecx,edi
  41db86:	pop    edi
  41db87:	aaa    
  41db88:	sbb    BYTE PTR [eax+0x6d],ch
  41db8b:	sub    al,0xc8
  41db8d:	mov    ebx,0x95aab63c
  41db92:	bound  ecx,QWORD PTR [edx]
  41db94:	sbb    eax,0x911d7d25
  41db99:	rcpps  xmm6,xmm1
  41db9c:	xchg   DWORD PTR [ebx-0x4527b48f],edi
  41dba2:	jp     0x41dc0d
  41dba4:	test   cl,bh
  41dba6:	lods   al,BYTE PTR ds:[esi]
  41dba7:	mov    eax,ds:0x309ee434
  41dbac:	xchg   ecx,eax
  41dbad:	inc    esi
  41dbae:	bound  ecx,QWORD PTR [eax]
  41dbb0:	(bad)  
  41dbb1:	xor    DWORD PTR ss:[edi],edx
  41dbb4:	imul   ecx,edi,0x7dcde38c
  41dbba:	std    
  41dbbb:	or     eax,0xd4044033
  41dbc0:	cld    
  41dbc1:	stc    
  41dbc2:	xor    cl,dl
  41dbc4:	imul   BYTE PTR ds:0xd5cf9a3
  41dbca:	xchg   esp,eax
  41dbcb:	out    0x60,eax
  41dbcd:	dec    edi
  41dbce:	iret   
  41dbcf:	xchg   esi,eax
  41dbd0:	push   esp
  41dbd1:	mov    al,0x4c
  41dbd3:	ror    DWORD PTR [eax-0x66f6527e],0xe7
  41dbda:	mov    ecx,0x134a4fa3
  41dbdf:	lock cmp al,0x90
  41dbe2:	out    dx,eax
  41dbe3:	inc    esp
  41dbe4:	out    dx,al
  41dbe5:	pop    esp
  41dbe6:	(bad)  
  41dbe7:	push   edx
  41dbe8:	(bad)  
  41dbe9:	dec    esi
  41dbea:	dec    ebx
  41dbeb:	and    BYTE PTR [ebp+0x65],0x94
  41dbef:	data16 and al,BYTE PTR [edx]
  41dbf2:	add    DWORD PTR [eax],ebx
  41dbf4:	out    dx,al
  41dbf5:	mov    ds,ecx
  41dbf7:	fstp   DWORD PTR [esi+eax*2-0x2cec70b]
  41dbfe:	out    dx,al
  41dbff:	sub    dh,0x75
  41dc02:	pop    ebx
  41dc03:	add    BYTE PTR [ebp+esi*2-0x5509deef],0xe5
  41dc0b:	ja     0x41dc30
  41dc0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc0e:	shl    DWORD PTR [ebx-0x18],1
  41dc11:	jb     0x41dc40
  41dc13:	icebp  
  41dc14:	push   0x51
  41dc16:	fsubr  DWORD PTR [ecx+ecx*2]
  41dc19:	dec    esi
  41dc1a:	out    dx,eax
  41dc1b:	cmc    
  41dc1c:	neg    DWORD PTR [esi]
  41dc1e:	mov    dh,0x75
  41dc20:	ficomp DWORD PTR [esi+0x4dbd487e]
  41dc26:	or     ah,BYTE PTR gs:[eax*2-0x3e4da61b]
  41dc2e:	xor    esp,edx
  41dc30:	mov    ecx,0x30ae0258
  41dc35:	mov    ecx,0x34fdd4d9
  41dc3a:	inc    ebx
  41dc3b:	cmp    dh,al
  41dc3d:	pop    esi
  41dc3e:	xor    esi,DWORD PTR [ebp+0x162201cd]
  41dc44:	xchg   DWORD PTR [esp+eiz*2],edx
  41dc47:	mov    eax,ds:0x8be253fd
  41dc4c:	mov    esi,0xfb1e0237
  41dc51:	or     eax,0x91e6d4cb
  41dc56:	out    0x45,eax
  41dc58:	jns    0x41dc04
  41dc5a:	mov    bh,0x27
  41dc5c:	mov    ah,BYTE PTR [edi+0x60]
  41dc5f:	and    cl,BYTE PTR [ebx-0x56b0c19a]
  41dc65:	xchg   edi,eax
  41dc66:	push   0xf31ba32a
  41dc6b:	ins    BYTE PTR es:[edi],dx
  41dc6c:	gs (bad) 
  41dc6f:	mov    ebp,0x6fb2fd37
  41dc74:	mov    eax,ds:0xa001860c
  41dc79:	inc    edx
  41dc7a:	mov    eax,0xede0704
  41dc7f:	mov    ds:0x9c1c725b,eax
  41dc84:	push   ds
  41dc85:	push   ecx
  41dc86:	aad    0x99
  41dc88:	(bad)  
  41dc89:	adc    ch,al
  41dc8b:	cld    
  41dc8c:	and    dl,bh
  41dc8e:	ret    0x5cb5
  41dc91:	xlat   BYTE PTR ds:[ebx]
  41dc92:	dec    esp
  41dc93:	test   BYTE PTR [eax+edx*1],bh
  41dc96:	xlat   BYTE PTR ds:[ebx]
  41dc97:	xchg   BYTE PTR [edx],dh
  41dc99:	inc    esi
  41dc9a:	test   al,0xd6
  41dc9c:	cld    
  41dc9d:	xchg   edi,eax
  41dc9e:	mov    al,0x67
  41dca0:	retf   0x68e5
  41dca3:	in     eax,dx
  41dca4:	xchg   edx,eax
  41dca5:	stos   BYTE PTR es:[edi],al
  41dca6:	mov    ecx,0x1eef010e
  41dcab:	push   ecx
  41dcac:	or     DWORD PTR [eax+ebx*4-0x64cc1582],0xa18485e7
  41dcb7:	adc    al,0x12
  41dcb9:	or     eax,0xa0908242
  41dcbe:	mov    eax,0x65cecd79
  41dcc3:	loop   0x41dd15
  41dcc5:	cmp    DWORD PTR [edi-0x7b67cb98],esp
  41dccb:	cmp    esi,DWORD PTR [edi]
  41dccd:	outs   dx,DWORD PTR ds:[esi]
  41dcce:	jno    0x41dc91
  41dcd0:	cwde   
  41dcd1:	outs   dx,BYTE PTR ds:[esi]
  41dcd2:	push   ebp
  41dcd3:	std    
  41dcd4:	int3   
  41dcd5:	in     al,dx
  41dcd6:	mov    edi,ebx
  41dcd8:	mov    fs,WORD PTR [esi]
  41dcda:	imul   edx,DWORD PTR [ebp-0x5e],0x7e
  41dcde:	cmp    eax,0x65d089f7
  41dce3:	or     bl,dl
  41dce5:	mov    WORD PTR [edi+0x40],gs
  41dce8:	pop    edx
  41dce9:	in     eax,0xdc
  41dceb:	pop    ebp
  41dcec:	in     al,0xc9
  41dcee:	fst    QWORD PTR [ebx]
  41dcf0:	dec    ecx
  41dcf1:	rcl    ch,0xf7
  41dcf4:	rcr    DWORD PTR [esi+0x31],0x69
  41dcf8:	pop    esi
  41dcf9:	adc    eax,0x5e6cc6d1
  41dcfe:	das    
  41dcff:	sub    edx,DWORD PTR [ecx-0x1541add5]
  41dd05:	out    dx,eax
  41dd06:	mov    ds:0x85103a7a,eax
  41dd0b:	adc    esi,DWORD PTR [esi+0x68b0d273]
  41dd11:	sub    BYTE PTR [esi+eax*8],ah
  41dd14:	xor    BYTE PTR [ebp+0x50382d33],0x74
  41dd1b:	mov    ds:0xe2f072f7,eax
  41dd20:	rol    BYTE PTR [ebx+0x2a],1
  41dd23:	daa    
  41dd24:	pop    edx
  41dd25:	inc    BYTE PTR [ebp-0x17a8be78]
  41dd2b:	pushfw 
  41dd2d:	pop    ebp
  41dd2e:	push   esp
  41dd2f:	sub    esi,DWORD PTR [ebp+0x3a3f1329]
  41dd35:	add    BYTE PTR [ebp-0x68],al
  41dd38:	or     DWORD PTR [esi+0x17],ebx
  41dd3b:	inc    esp
  41dd3c:	push   ebx
  41dd3d:	lock and eax,esi
  41dd40:	pushf  
  41dd41:	adc    ah,BYTE PTR [esi+0x1dc5d39c]
  41dd47:	ins    BYTE PTR es:[edi],dx
  41dd48:	dec    eax
  41dd49:	out    0xcd,al
  41dd4b:	xor    eax,0x3f7d55ee
  41dd50:	fcmovnu st,st(7)
  41dd52:	jae    0x41dcfc
  41dd54:	clc    
  41dd55:	dec    esi
  41dd56:	in     eax,0xa6
  41dd58:	pop    ds
  41dd59:	push   esp
  41dd5a:	js     0x41dcde
  41dd5c:	mov    esp,0xed390662
  41dd61:	mov    eax,0x6898917c
  41dd66:	test   BYTE PTR [ecx+0x37],0xf3
  41dd6a:	add    eax,0x4094b440
  41dd6f:	mov    DWORD PTR [esi+0x4084c57f],edx
  41dd75:	dec    esi
  41dd76:	adc    BYTE PTR [ecx-0x51],0x84
  41dd7a:	xchg   BYTE PTR [edi-0x255b1596],bl
  41dd80:	pop    ebx
  41dd81:	dec    DWORD PTR [ebx-0x7d0225e3]
  41dd87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd88:	cmp    ch,BYTE PTR [edi+0x36b6b5c5]
  41dd8e:	int    0x41
  41dd90:	rcr    DWORD PTR [esi-0x41f2be8e],1
  41dd96:	inc    edi
  41dd97:	fsub   DWORD PTR [edi+0x43]
  41dd9a:	rol    DWORD PTR [edx-0x1e4afb71],cl
  41dda0:	push   esi
  41dda1:	xchg   BYTE PTR [esi+0x153fade2],al
  41dda7:	mov    esi,0x195b352b
  41ddac:	cld    
  41ddad:	xor    edx,DWORD PTR [edx+0x32]
  41ddb0:	(bad)  
  41ddb1:	nop
  41ddb2:	cmp    esi,DWORD PTR [edi]
  41ddb4:	jecxz  0x41dd38
  41ddb6:	ret    0x9072
  41ddb9:	sbb    DWORD PTR ss:[eax+0x184b768d],0xe2403ca4
  41ddc4:	or     BYTE PTR [ebp+0x62],al
  41ddc7:	cmp    DWORD PTR ds:0xba1469ad,eax
  41ddcd:	imul   esi,eax,0xffffff9e
  41ddd0:	test   BYTE PTR [edi-0x780d336b],bh
  41ddd6:	mov    al,ds:0xea60423f
  41dddb:	(bad)  
  41dddc:	xor    DWORD PTR [edx],esi
  41ddde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dddf:	popf   
  41dde0:	mov    ebx,0x2cc074e6
  41dde5:	leave  
  41dde6:	bound  eax,QWORD PTR [esi]
  41dde8:	inc    edi
  41dde9:	xor    eax,0x9395f0a3
  41ddee:	shl    DWORD PTR [ebp-0x64979062],1
  41ddf4:	gs mov cl,0x45
  41ddf7:	inc    eax
  41ddf8:	out    dx,al
  41ddf9:	popf   
  41ddfa:	sub    eax,0x71c82c61
  41ddff:	push   ecx
  41de00:	popa   
  41de01:	pop    ss
  41de02:	out    dx,eax
  41de03:	add    al,0x82
  41de05:	sti    
  41de06:	jo     0x41de36
  41de08:	cmp    DWORD PTR [esi+0x1b],0x43
  41de0c:	call   DWORD PTR [ebx+0x49013456]
  41de12:	test   eax,eax
  41de14:	rol    BYTE PTR [esi+0x7c],0x69
  41de18:	icebp  
  41de19:	stos   BYTE PTR es:[edi],al
  41de1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de1b:	imul   esi,DWORD PTR [ecx],0xe10ba958
  41de21:	(bad)  
  41de23:	inc    esi
  41de24:	in     eax,0x4b
  41de26:	imul   edi,DWORD PTR [ebx],0xffffffe1
  41de29:	test   eax,0x6d4d67e
  41de2e:	pop    ebp
  41de2f:	jb     0x41de31
  41de31:	gs (bad) 
  41de33:	jle    0x41de96
  41de35:	loopne 0x41ddf3
  41de37:	outs   dx,BYTE PTR ds:[esi]
  41de38:	pop    ecx
  41de39:	dec    ecx
  41de3a:	mov    WORD PTR [edx],?
  41de3c:	outs   dx,DWORD PTR ds:[esi]
  41de3d:	test   al,0x18
  41de3f:	jns    0x41de56
  41de41:	je     0x41de18
  41de43:	lds    esp,FWORD PTR [esi-0x7065aa82]
  41de49:	jp     0x41de6d
  41de4b:	sbb    al,0xdb
  41de4d:	xchg   esp,eax
  41de4e:	sbb    BYTE PTR [esi-0xb],bl
  41de51:	pop    ss
  41de52:	mov    ds:0x354eccd1,al
  41de57:	pop    esp
  41de58:	mov    ch,0xc
  41de5a:	push   esp
  41de5b:	lods   eax,DWORD PTR ds:[esi]
  41de5c:	cmp    BYTE PTR [eax-0x54],0x6e
  41de60:	mov    cl,dl
  41de62:	or     eax,0xf6e51be7
  41de67:	pop    edx
  41de68:	jno    0x41ded8
  41de6a:	inc    edx
  41de6b:	cmp    al,0x13
  41de6d:	out    dx,ax
  41de6f:	aaa    
  41de70:	or     al,0x79
  41de72:	inc    esp
  41de73:	mov    dh,0xb9
  41de75:	cmp    ebx,DWORD PTR [ebx]
  41de77:	mov    cl,0x3b
  41de79:	data16 fsub st(6),st
  41de7c:	imul   edx,DWORD PTR [eax+0x5c],0xffffffc8
  41de80:	loope  0x41de35
  41de82:	adc    BYTE PTR [edi+0x66004adc],al
  41de88:	mov    bh,0x13
  41de8a:	ins    DWORD PTR es:[edi],dx
  41de8b:	out    dx,eax
  41de8c:	dec    esp
  41de8d:	lock adc cx,bx
  41de91:	fld    st(2)
  41de93:	mov    eax,ds:0xe87a6dea
  41de98:	xchg   ebx,eax
  41de99:	inc    esp
  41de9a:	mov    ecx,0x8773d555
  41de9f:	test   BYTE PTR [edx-0x7ee0644a],bh
  41dea5:	jmp    0x814e5e47
  41deaa:	cwde   
  41deab:	(bad)  
  41deac:	(bad)  
  41dead:	std    
  41deae:	std    
  41deaf:	push   es
  41deb0:	xor    bl,BYTE PTR [edi+0x79dcc1a]
  41deb6:	shr    DWORD PTR [edx-0x516f2c94],cl
  41debc:	push   edi
  41debd:	lods   al,BYTE PTR ds:[esi]
  41debe:	dec    ebx
  41debf:	pop    es
  41dec0:	int    0xd6
  41dec2:	test   BYTE PTR [ecx+edx*8-0x3b2490c9],ch
  41dec9:	dec    esi
  41deca:	loope  0x41deff
  41decc:	aaa    
  41decd:	pop    esi
  41dece:	stc    
  41decf:	xchg   ecx,eax
  41ded0:	arpl   WORD PTR [ebx-0x69],bx
  41ded3:	call   0x877b:0xefc96527
  41deda:	loope  0x41de8a
  41dedc:	push   edx
  41dedd:	mov    WORD PTR [ebx+0x46],?
  41dee0:	(bad)  
  41dee1:	xchg   esi,edx
  41dee3:	rcr    ch,1
  41dee5:	dec    ebx
  41dee6:	sahf   
  41dee7:	into   
  41dee8:	data16 (bad) 
  41deea:	pop    ebx
  41deeb:	stos   DWORD PTR es:[edi],eax
  41deec:	or     BYTE PTR [edx+0x237b651a],dh
  41def2:	mov    esi,gs
  41def4:	cwde   
  41def5:	sbb    DWORD PTR [eax-0x4f230fa6],ecx
  41defb:	push   edx
  41defc:	bnd jle 0x41ded6
  41deff:	cli    
  41df00:	and    dl,dl
  41df02:	idiv   BYTE PTR [ecx+0x40]
  41df05:	inc    ebx
  41df06:	xor    ch,BYTE PTR [edi+edi*8-0x58ff83e5]
  41df0d:	dec    edi
  41df0e:	mov    edi,0x60821da
  41df13:	mov    BYTE PTR [eax+0x57],al
  41df16:	cmp    BYTE PTR [edi-0x67],ah
  41df19:	bnd jo 0x41deb9
  41df1c:	and    bh,bh
  41df1e:	dec    esi
  41df1f:	mov    al,0x2
  41df21:	push   es
  41df22:	aaa    
  41df23:	aam    0x4d
  41df25:	call   0xfd0d:0xa940a629
  41df2c:	retf   0x2700
  41df2f:	ret    
  41df30:	and    ah,BYTE PTR [ebp+edi*8-0x2a873b2c]
  41df37:	cmp    BYTE PTR [ebx+0x299bff60],ch
  41df3d:	pushf  
  41df3e:	mov    edx,0xa53722ca
  41df43:	lock scas al,BYTE PTR es:[edi]
  41df45:	test   eax,0xf18cdbc4
  41df4a:	out    0x73,eax
  41df4c:	push   esi
  41df4d:	loope  0x41df61
  41df4f:	clc    
  41df50:	inc    esi
  41df51:	add    DWORD PTR [ebp-0x30b2d56d],esp
  41df57:	dec    esp
  41df58:	or     BYTE PTR [eax-0x7bef459f],ah
  41df5e:	ret    
  41df5f:	or     eax,0x165ebf92
  41df64:	push   ss
  41df65:	inc    edi
  41df66:	ret    0x5ce
  41df69:	jg     0x41dfe4
  41df6b:	shl    DWORD PTR [edi],cl
  41df6d:	xchg   edx,eax
  41df6e:	das    
  41df6f:	cmp    DWORD PTR [ebx+0x60444d57],eax
  41df75:	mov    dh,0xe8
  41df77:	in     al,dx
  41df78:	pop    edi
  41df79:	jno    0x41df39
  41df7b:	fxch   st(4)
  41df7d:	inc    ecx
  41df7e:	cmp    ebx,DWORD PTR [ebx+0x3a1a1f0b]
  41df84:	out    0x2b,al
  41df86:	pop    esp
  41df87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df88:	repnz pop edi
  41df8a:	dec    ebx
  41df8b:	(bad)  [edi+eax*4]
  41df8e:	sti    
  41df8f:	xor    eax,0xb1e755ef
  41df94:	xlat   BYTE PTR ds:[ebx]
  41df95:	js     0x41df8b
  41df97:	std    
  41df98:	and    eax,0x5ba597df
  41df9d:	mov    edi,0xd4ee0de6
  41dfa2:	enter  0xa01f,0xec
  41dfa6:	add    eax,0x2d57304b
  41dfab:	lea    edx,[esp+eax*1+0x2fb1406a]
  41dfb2:	mov    esi,0x8aaf5afe
  41dfb7:	adc    DWORD PTR [ebx+edi*4-0x23ef21ec],esi
  41dfbe:	xor    esp,edx
  41dfc0:	mov    dl,ch
  41dfc2:	sbb    BYTE PTR [edi-0x6704836e],bl
  41dfc8:	sar    BYTE PTR [ebx+0x4acf360a],0x4a
  41dfcf:	pop    ss
  41dfd0:	inc    ebp
  41dfd1:	xchg   esp,eax
  41dfd2:	jae    0x41dfa6
  41dfd4:	sbb    BYTE PTR [ecx-0x36ff36d3],0xb7
  41dfdb:	jbe    0x41dff3
  41dfdd:	inc    ebx
  41dfde:	outs   dx,BYTE PTR ds:[esi]
  41dfdf:	fcom   QWORD PTR [ecx-0x6c40557]
  41dfe5:	and    al,0xc3
  41dfe7:	push   ecx
  41dfe8:	and    ebx,DWORD PTR [ebp-0x58]
  41dfeb:	scas   eax,DWORD PTR es:[edi]
  41dfec:	scas   al,BYTE PTR es:[edi]
  41dfed:	test   eax,0x6ba1863a
  41dff2:	xchg   esi,eax
  41dff3:	std    
  41dff4:	and    DWORD PTR [edx+eax*4+0x24],0x940e8bbe
  41dffc:	push   esi
  41dffd:	aaa    
  41dffe:	jg     0x41e03c
  41e000:	xchg   ebp,eax
  41e001:	outs   dx,BYTE PTR ds:[esi]
  41e002:	cli    
  41e003:	repz adc esi,DWORD PTR [ebp-0x43]
  41e007:	mov    ebx,0x4abdacf4
  41e00c:	bound  esi,QWORD PTR [eax-0x22]
  41e00f:	pop    ds
  41e010:	shl    DWORD PTR [ecx+0x3f753d4],0x15
  41e017:	jecxz  0x41e063
  41e019:	or     DWORD PTR [ecx+eax*4+0x13a469a0],esp
  41e020:	xchg   DWORD PTR [edi+0x51b79c66],esp
  41e026:	call   0x55cf:0x77cd4d72
  41e02d:	repnz pop eax
  41e02f:	rcl    BYTE PTR [ecx+edi*1+0x22bcb49d],1
  41e036:	inc    esi
  41e037:	adc    ch,BYTE PTR [ecx-0x8]
  41e03a:	cmp    ecx,DWORD PTR [esi]
  41e03c:	les    ebx,FWORD PTR [esi-0x181c3793]
  41e042:	and    ah,dl
  41e044:	adc    dl,BYTE PTR [eax+ebx*2-0x6c2116c]
  41e04b:	pop    edi
  41e04c:	mov    ah,0x25
  41e04e:	or     BYTE PTR [eax+eax*8+0x3787b58f],dh
  41e055:	fisubr DWORD PTR [ebp+0x61548ca7]
  41e05b:	adc    DWORD PTR [ecx],esi
  41e05d:	pop    ss
  41e05e:	sub    al,0x4e
  41e060:	sub    al,0xff
  41e062:	adc    al,0x72
  41e064:	lea    eax,[ecx]
  41e066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e067:	xor    esi,edx
  41e069:	ins    DWORD PTR es:[edi],dx
  41e06a:	add    al,0x81
  41e06c:	sub    eax,0xb8d0172a
  41e071:	aam    0xd4
  41e073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e074:	enter  0xe70f,0xff
  41e078:	push   ebx
  41e079:	fiadd  WORD PTR [edx+0x3f77ca8e]
  41e07f:	addr16 cmp eax,0x6c7f2149
  41e085:	mov    ecx,0x886acb10
  41e08a:	addr16 push ebp
  41e08c:	or     esp,edi
  41e08e:	add    DWORD PTR [ebp*2+0x4da0cd87],eax
  41e095:	sbb    ch,ch
  41e097:	(bad)
  41e09b:	frstor ds:0xe864458
  41e0a1:	into   
  41e0a2:	or     eax,0xa9dcfc34
  41e0a7:	push   ebp
  41e0a8:	and    BYTE PTR [eax+0x75993ee8],cl
  41e0ae:	xlat   BYTE PTR ds:[ebx]
  41e0af:	mov    ?,WORD PTR [esi+0x76c26666]
  41e0b5:	fcomip st,st(5)
  41e0b7:	inc    ecx
  41e0b8:	rol    dl,0x37
  41e0bb:	mov    esp,0xc0572292
  41e0c0:	ins    BYTE PTR es:[edi],dx
  41e0c1:	in     eax,0x56
  41e0c3:	fdivr  DWORD PTR ds:0xe75a1333
  41e0c9:	in     eax,0x9d
  41e0cb:	sbb    al,0x80
  41e0cd:	inc    eax
  41e0ce:	add    esp,DWORD PTR [ecx+0x781de8a8]
  41e0d4:	add    DWORD PTR [ebx+eiz*4-0x69],esp
  41e0d8:	jge    0x41e0bc
  41e0da:	cmc    
  41e0db:	gs jecxz 0x41e117
  41e0de:	mov    ebp,0xdc24c2fe
  41e0e3:	mov    ebp,0x304b20e
  41e0e8:	or     DWORD PTR [esi+0x6f36ef77],0x1a03f2bb
  41e0f2:	jnp    0x41e146
  41e0f4:	mov    al,ds:0x2bd9419b
  41e0f9:	sbb    DWORD PTR [ebp-0x24],edx
  41e0fc:	loopne 0x41e0e9
  41e0fe:	ret    
  41e0ff:	loop   0x41e151
  41e101:	scas   eax,DWORD PTR es:[edi]
  41e102:	push   cs
  41e103:	sub    eax,0xe97452ee
  41e108:	xchg   ebp,eax
  41e109:	pusha  
  41e10a:	dec    ecx
  41e10b:	es inc edx
  41e10d:	sub    al,0x32
  41e10f:	dec    esp
  41e110:	add    bh,0x97
  41e113:	test   BYTE PTR [edx+0x6b],bl
  41e116:	pop    edi
  41e117:	pop    edi
  41e118:	jo     0x41e11e
  41e11a:	push   esp
  41e11b:	mov    DWORD PTR [eax],eax
  41e11d:	fcomp  QWORD PTR [ebp+0x6da2e9f]
  41e123:	push   0x2861faaa
  41e128:	pop    ebx
  41e129:	pop    ebx
  41e12a:	push   0xffffffcb
  41e12c:	shl    BYTE PTR [esp+edx*8+0x28bbbc0],cl
  41e133:	cmp    BYTE PTR [ebp-0x56],dl
  41e136:	icebp  
  41e137:	shr    BYTE PTR [ebp-0x4a6faa59],cl
  41e13d:	test   eax,0xd98f7dd
  41e142:	in     al,0x57
  41e144:	cmc    
  41e145:	repnz cmp ah,BYTE PTR [edx]
  41e148:	cli    
  41e149:	mov    al,0xda
  41e14b:	retf   
  41e14c:	xchg   ecx,eax
  41e14d:	cmp    al,0xda
  41e14f:	aas    
  41e150:	or     al,0x2
  41e152:	adc    eax,0xab1c762c
  41e157:	cmp    bl,0x49
  41e15a:	push   0x455ad85d
  41e15f:	jmp    0x41e101
  41e161:	ret    0x7fe3
  41e164:	retf   
  41e165:	or     dh,dl
  41e167:	repz loop 0x41e126
  41e16a:	or     DWORD PTR [ecx+0x7e],0x4376600e
  41e171:	int    0x7d
  41e173:	repnz add ebp,esp
  41e176:	icebp  
  41e177:	xchg   ecx,eax
  41e178:	mov    BYTE PTR [ebp+0x11f7f02c],0xd3
  41e17f:	sbb    eax,DWORD PTR [ebp+0x19]
  41e182:	call   0x31107ab9
  41e187:	inc    edx
  41e188:	push   0x4baeb76c
  41e18d:	stc    
  41e18e:	out    dx,eax
  41e18f:	out    dx,al
  41e190:	jle    0x41e207
  41e192:	pop    ecx
  41e193:	jne    0x41e1a1
  41e195:	aaa    
  41e196:	adc    ebp,ecx
  41e198:	ins    BYTE PTR es:[edi],dx
  41e199:	sbb    al,0x53
  41e19b:	and    dh,BYTE PTR [edx-0x28]
  41e19e:	mov    dh,0x48
  41e1a0:	(bad)  
  41e1a1:	les    ebp,FWORD PTR [edi+edi*1-0x18]
  41e1a5:	mov    edi,gs
  41e1a7:	push   ecx
  41e1a8:	and    DWORD PTR [eax+0x2d],edx
  41e1ab:	jne    0x41e1f8
  41e1ad:	jno    0x41e20b
  41e1af:	ja     0x41e1a6
  41e1b1:	dec    edx
  41e1b2:	loope  0x41e1db
  41e1b4:	in     eax,dx
  41e1b5:	sbb    ax,0xe23a
  41e1b9:	(bad)
  41e1bd:	dec    esp
  41e1bf:	cmp    ah,ah
  41e1c1:	popf   
  41e1c2:	or     DWORD PTR [ecx],0xffffffdf
  41e1c5:	pop    eax
  41e1c6:	cmp    al,0x97
  41e1c8:	hlt    
  41e1c9:	push   ebx
  41e1ca:	ins    BYTE PTR es:[edi],dx
  41e1cb:	addr16 and eax,0x744d5c4a
  41e1d1:	lods   al,BYTE PTR ds:[esi]
  41e1d2:	adc    ecx,DWORD PTR [edi]
  41e1d4:	imul   eax,edi,0xa5ea2d29
  41e1da:	and    al,0x5e
  41e1dc:	sub    DWORD PTR [edx+eiz*1+0x5fe36262],edi
  41e1e3:	fistp  QWORD PTR [ebx-0x3f07ddc4]
  41e1e9:	jns    0x41e18d
  41e1eb:	push   es
  41e1ec:	xor    esp,edx
  41e1ee:	iret   
  41e1ef:	cmp    esi,DWORD PTR [ebp-0x39]
  41e1f2:	xchg   DWORD PTR [edi-0x1780286b],esp
  41e1f8:	push   eax
  41e1f9:	out    dx,eax
  41e1fa:	mov    ah,0x4a
  41e1fc:	loop   0x41e189
  41e1fe:	stc    
  41e1ff:	xor    eax,0x443a6649
  41e204:	fcomi  st,st(3)
  41e206:	jle    0x41e272
  41e208:	jb     0x41e252
  41e20a:	dec    edi
  41e20b:	sbb    eax,0xf1bb9608
  41e210:	add    al,0xd4
  41e212:	pop    ss
  41e213:	mov    bh,0xb9
  41e215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e216:	(bad)  
  41e218:	idiv   DWORD PTR [ebx+0x62aa37e0]
  41e21e:	stos   BYTE PTR es:[edi],al
  41e21f:	adc    dh,al
  41e221:	xor    ch,0xa9
  41e224:	add    BYTE PTR [ebp-0x12],dh
  41e227:	loopne 0x41e22f
  41e229:	xor    ecx,esi
  41e22b:	inc    ebx
  41e22c:	mov    BYTE PTR [edi-0x5f],0x5c
  41e230:	fistp  WORD PTR [ebx+0x50]
  41e233:	js     0x41e1ef
  41e235:	clc    
  41e236:	mov    DWORD PTR [ebx+ebp*4+0x72],edi
  41e23a:	fmul   st,st(4)
  41e23c:	push   esp
  41e23d:	loope  0x41e24b
  41e23f:	outs   dx,DWORD PTR ds:[esi]
  41e240:	pop    ebp
  41e241:	jle    0x41e2b0
  41e243:	scas   eax,DWORD PTR es:[edi]
  41e244:	jb     0x41e2b6
  41e246:	out    dx,eax
  41e247:	mov    esi,0x50dd54b7
  41e24c:	xchg   esp,eax
  41e24d:	(bad)  
  41e24e:	pop    edx
  41e24f:	out    dx,al
  41e250:	or     bh,BYTE PTR [eax+0x7b3a5e3d]
  41e256:	lahf   
  41e257:	push   ecx
  41e258:	jae    0x41e24d
  41e25a:	mov    DWORD PTR [ebx+esi*8+0x26c7999c],eax
  41e261:	sbb    DWORD PTR [ebx-0x7fabfd0a],0xffffffa7
  41e268:	xor    dl,BYTE PTR [ebx-0x75046b53]
  41e26e:	(bad)  
  41e26f:	ja     0x41e2bf
  41e271:	or     bh,BYTE PTR [ecx-0x6e13ef03]
  41e277:	lahf   
  41e278:	ja     0x41e223
  41e27a:	sbb    esp,edi
  41e27c:	outs   dx,BYTE PTR ds:[esi]
  41e27d:	fwait
  41e27e:	mov    edi,0xaa58530e
  41e283:	adc    eax,0x6824352d
  41e288:	int    0x56
  41e28a:	jmp    0x35f7:0xf0253f4d
  41e291:	dec    eax
  41e292:	pop    ebp
  41e293:	dec    DWORD PTR [edi+edx*4+0x6f]
  41e297:	ss into 
  41e299:	sar    bh,cl
  41e29b:	repnz sbb dh,cl
  41e29e:	push   es
  41e29f:	stc    
  41e2a0:	inc    edx
  41e2a1:	jle    0x41e24a
  41e2a3:	ds fnclex 
  41e2a6:	(bad)  [eax+0x678a15b0]
  41e2ac:	xor    al,0xe1
  41e2ae:	push   esi
  41e2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2b0:	xchg   edx,eax
  41e2b1:	stos   DWORD PTR es:[edi],eax
  41e2b2:	mov    ah,BYTE PTR ds:0x4ae2a30d
  41e2b8:	jns    0x41e324
  41e2ba:	pushf  
  41e2bb:	xchg   esp,eax
  41e2bc:	mov    BYTE PTR [esp+esi*4+0x75aac3a],bl
  41e2c3:	jno    0x41e248
  41e2c5:	jg     0x41e336
  41e2c7:	pusha  
  41e2c8:	iret   
  41e2c9:	(bad)  
  41e2cb:	inc    edi
  41e2cc:	sub    al,0xc4
  41e2ce:	push   ds
  41e2cf:	inc    edx
  41e2d0:	and    cl,BYTE PTR [eax]
  41e2d2:	out    0xcc,al
  41e2d4:	xor    DWORD PTR [ebx],eax
  41e2d6:	jbe    0x41e27c
  41e2d8:	es xchg edx,eax
  41e2da:	pusha  
  41e2db:	fnstsw WORD PTR [ecx+0x1af755b0]
  41e2e1:	(bad)  
  41e2e2:	lods   eax,DWORD PTR ds:[esi]
  41e2e3:	nop
  41e2e4:	pop    esp
  41e2e5:	ret    
  41e2e6:	mov    DWORD PTR [esp+eiz*4+0x6c],eax
  41e2ea:	ins    DWORD PTR es:[edi],dx
  41e2eb:	jo     0x41e2f0
  41e2ed:	or     eax,0xd3a918e4
  41e2f2:	mov    edi,0x98b8731e
  41e2f7:	stos   BYTE PTR es:[edi],al
  41e2f8:	adc    edi,DWORD PTR [ecx+0x39a6af59]
  41e2fe:	ret    
  41e2ff:	cmp    DWORD PTR [edi],esi
  41e301:	in     al,dx
  41e302:	push   cs
  41e303:	pop    ecx
  41e304:	jbe    0x41e2ee
  41e306:	(bad)
  41e309:	pop    ebp
  41e30a:	aad    0x64
  41e30c:	fdiv   DWORD PTR [eax-0x6a]
  41e30f:	cdq    
  41e310:	sbb    edx,eax
  41e312:	xor    eax,0x27dff8a4
  41e317:	pop    esp
  41e318:	mov    ds,WORD PTR [edx]
  41e31a:	(bad)  
  41e31b:	or     eax,0x69bc6bc
  41e320:	mov    edi,edx
  41e322:	dec    edi
  41e323:	ins    DWORD PTR es:[edi],dx
  41e324:	ins    DWORD PTR es:[edi],dx
  41e325:	adc    edi,esi
  41e327:	xor    eax,edi
  41e329:	xor    edx,0x0
  41e32c:	cmp    eax,0x70941e0f
  41e331:	jne    0x41e365
  41e337:	cmp    edx,0xffffffff
  41e33a:	jne    0x41e365
  41e340:	mov    eax,DWORD PTR [ebp-0x4]
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x3a
  41e3e0:	mov    esi,0xd51195ce
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0x27
  41e3ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3ed:	pop    es
  41e3ee:	and    edx,ecx
  41e3f0:	pushf  
  41e3f1:	cdq    
  41e3f2:	or     al,0xd4
  41e3f4:	cmp    al,BYTE PTR [eax]
  41e3f6:	lds    edx,FWORD PTR [esi+0x1c]
  41e3f9:	xchg   ebp,eax
  41e3fa:	or     BYTE PTR [edx*8+0x6366fa5a],bl
  41e401:	mov    edi,0x293d7ddb
  41e406:	add    BYTE PTR [edx+edi*4+0x68],0xd1
  41e40b:	sbb    BYTE PTR [esi],dh
  41e40d:	sahf   
  41e40e:	inc    ebp
  41e40f:	xchg   esp,eax
  41e410:	jecxz  0x41e489
  41e412:	call   0x955630bb
  41e417:	inc    ebp
  41e418:	fisttp DWORD PTR [edx+0x31]
  41e41b:	pop    ss
  41e41c:	dec    esi
  41e41d:	fild   DWORD PTR [ecx-0x10]
  41e420:	or     ebp,DWORD PTR [edi]
  41e422:	lahf   
  41e423:	jle    0x41e442
  41e425:	aaa    
  41e426:	adc    al,0x17
  41e429:	ret    0x8fa
  41e42c:	idiv   esi
  41e42e:	jno    0x41e426
  41e430:	inc    ebx
  41e431:	inc    ebp
  41e432:	call   0x7395791b
  41e437:	xor    al,0xe8
  41e439:	push   esp
  41e43a:	stc    
  41e43b:	dec    sp
  41e43d:	retf   0xa5be
  41e440:	jl     0x41e465
  41e442:	cli    
  41e443:	add    BYTE PTR [edx+ebx*1-0x33],bl
  41e447:	sub    eax,0x8c7e528f
  41e44c:	int    0x79
  41e44e:	cmc    
  41e44f:	ret    
  41e450:	retf   0x5c96
  41e453:	sti    
  41e454:	mov    ds:0xdb4786f9,al
  41e459:	fcomp  DWORD PTR [ecx-0x20]
  41e45c:	inc    edx
  41e45d:	jbe    0x41e412
  41e45f:	cmp    al,0xe0
  41e461:	ins    BYTE PTR es:[edi],dx
  41e462:	add    BYTE PTR [edi+0x14],0x92
  41e466:	fild   QWORD PTR [edi+eax*1-0x17]
  41e46a:	xchg   DWORD PTR [eax],ebp
  41e46c:	shl    DWORD PTR [edi],1
  41e46e:	into   
  41e46f:	mov    cl,0x81
  41e471:	scas   eax,DWORD PTR es:[edi]
  41e472:	adc    DWORD PTR [esi-0x3a12555b],0x7
  41e479:	retf   0xe017
  41e47c:	adc    eax,0xffffffc8
  41e47f:	test   eax,0x532acdc3
  41e484:	pushf  
  41e485:	shl    BYTE PTR [eax-0x3b9db401],cl
  41e48b:	sbb    DWORD PTR [eax-0x4e],0xffffffb9
  41e48f:	dec    ecx
  41e490:	in     al,0x5a
  41e492:	das    
  41e493:	dec    ebp
  41e494:	fldenv [esi]
  41e496:	into   
  41e497:	das    
  41e498:	mov    dl,0x53
  41e49a:	or     DWORD PTR [ebx-0x19],esi
  41e49d:	mov    dl,0xf1
  41e49f:	js     0x41e4d4
  41e4a1:	cli    
  41e4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4a3:	sbb    BYTE PTR [ebp+0x3],ah
  41e4a6:	test   al,0x5
  41e4a8:	hlt    
  41e4a9:	xor    eax,0xa3bde296
  41e4ae:	mov    edx,0x9274e266
  41e4b3:	lock add DWORD PTR [ebx+0x26],eax
  41e4b7:	and    dh,BYTE PTR [ebp+ebx*2-0x3]
  41e4bb:	or     ch,al
  41e4bd:	in     al,0x4c
  41e4bf:	jecxz  0x41e517
  41e4c1:	cmp    eax,0xc86bcc68
  41e4c6:	les    esi,FWORD PTR [edx]
  41e4c8:	dec    edi
  41e4c9:	add    eax,0xdb6b9a2e
  41e4ce:	pop    ss
  41e4cf:	retf   0x5ef5
  41e4d2:	ins    DWORD PTR es:[edi],dx
  41e4d3:	xor    DWORD PTR [edx-0x5d],eax
  41e4d6:	mov    al,0x96
  41e4d8:	lea    ecx,[eax+eiz*4]
  41e4db:	or     dh,ah
  41e4dd:	out    0xd8,al
  41e4df:	retf   0x8e77
  41e4e2:	enter  0xb671,0x96
  41e4e6:	rcpps  xmm3,XMMWORD PTR [edi]
  41e4e9:	ss mov ax,0x27a4
  41e4ee:	push   eax
  41e4ef:	addr16 jbe 0x41e4ca
  41e4f2:	sub    eax,0x9cafa94c
  41e4f7:	dec    edi
  41e4f8:	lods   eax,DWORD PTR ds:[esi]
  41e4f9:	or     DWORD PTR [ebp+0x52b50919],0x47
  41e500:	inc    ebx
  41e501:	jecxz  0x41e56e
  41e503:	adc    eax,0x2d4e4a78
  41e508:	pop    esp
  41e509:	pop    esp
  41e50a:	adc    al,0xe4
  41e50c:	mov    al,0x47
  41e50e:	std    
  41e50f:	or     eax,0xb404692d
  41e514:	xor    eax,0x8a7756d9
  41e519:	es jbe 0x41e56c
  41e51c:	fmul   QWORD PTR [edx+eiz*4+0x78250338]
  41e523:	sbb    cl,BYTE PTR [ecx-0x3a]
  41e526:	into   
  41e527:	jge    0x84a18466
  41e52d:	xor    eax,0xd924d776
  41e532:	jbe    0x41e535
  41e534:	xor    edi,DWORD PTR [edi-0x46]
  41e537:	mov    ds:0x1b88d6ec,eax
  41e53c:	test   eax,0xada48773
  41e541:	stc    
  41e542:	adc    edx,DWORD PTR [edx]
  41e544:	ret    
  41e545:	xchg   esi,eax
  41e546:	inc    ebp
  41e547:	fcmove st,st(0)
  41e549:	pop    es
  41e54a:	xchg   ebx,eax
  41e54b:	adc    bl,dl
  41e54d:	jg     0x41e545
  41e54f:	jecxz  0x41e512
  41e551:	jmp    0x41e503
  41e553:	mov    esp,0x95142d2e
  41e558:	outs   dx,BYTE PTR ds:[esi]
  41e559:	inc    eax
  41e55a:	mov    cl,0x85
  41e55c:	in     eax,0xa9
  41e55e:	xor    al,0x8e
  41e560:	ret    0x8830
  41e563:	pop    eax
  41e564:	data16 cmc 
  41e566:	pop    edi
  41e567:	std    
  41e568:	lock psrlw mm1,QWORD PTR [edx]
  41e56c:	push   eax
  41e56d:	loopne 0x41e52c
  41e56f:	or     eax,esi
  41e571:	fisttp WORD PTR [ebx+edx*1-0x15]
  41e575:	test   al,0x0
  41e577:	icebp  
  41e578:	mov    bl,0x65
  41e57a:	pop    eax
  41e57b:	dec    eax
  41e57c:	popf   
  41e57d:	or     ah,al
  41e57f:	add    al,0x97
  41e581:	jo     0x41e5a8
  41e583:	stc    
  41e584:	inc    ebp
  41e585:	or     DWORD PTR [ecx+0x50],ebp
  41e588:	ret    
  41e589:	mov    bh,0x3d
  41e58b:	lods   al,BYTE PTR ds:[esi]
  41e58c:	sbb    al,0x60
  41e58e:	rol    BYTE PTR [edx+0x47],cl
  41e591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e592:	rol    DWORD PTR [ebx],cl
  41e594:	cmc    
  41e595:	outs   dx,DWORD PTR ds:[esi]
  41e596:	lds    edx,FWORD PTR fs:[edx-0x2c]
  41e59a:	jns    0x41e558
  41e59c:	frstor [edi-0x294f6c55]
  41e5a2:	and    ebx,esp
  41e5a4:	es adc eax,ebp
  41e5a7:	add    al,0xf1
  41e5a9:	retf   0xbda7
  41e5ac:	fild   QWORD PTR [eax+eiz*8+0xf]
  41e5b0:	xchg   esp,edi
  41e5b2:	(bad)  
  41e5b3:	test   al,0xe6
  41e5b5:	mov    edx,0x5d16c348
  41e5ba:	out    0x91,al
  41e5bc:	call   0x8eb:0x7800cb0f
  41e5c3:	aad    0xf7
  41e5c5:	or     esi,edi
  41e5c7:	lods   eax,DWORD PTR ds:[esi]
  41e5c8:	and    al,0xab
  41e5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5cb:	add    DWORD PTR [eax+0x35784ac6],esp
  41e5d1:	jmp    0x41e5ef
  41e5d3:	fsubr  DWORD PTR [ebp-0x18]
  41e5d6:	pop    edi
  41e5d7:	mov    al,ds:0x1fbb7425
  41e5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5dd:	jnp    0x41e5a5
  41e5df:	push   esi
  41e5e0:	popa   
  41e5e1:	sbb    BYTE PTR [edx],bl
  41e5e3:	mov    edi,0x9b9a9955
  41e5e8:	jae    0x41e592
  41e5ea:	adc    al,0xc4
  41e5ec:	dec    ebp
  41e5ed:	xchg   edi,eax
  41e5ee:	mov    dh,0xfa
  41e5f0:	xor    BYTE PTR [edx-0x2f],0x4b
  41e5f4:	int3   
  41e5f5:	out    dx,al
  41e5f6:	mov    es:0x7dd986a6,al
  41e5fc:	add    DWORD PTR [edx+eax*1-0x2230bdc6],esp
  41e603:	mov    edx,0x7ac64a7b
  41e608:	mov    bl,0x50
  41e60a:	mov    bh,0xe2
  41e60c:	iret   
  41e60d:	out    0xb8,al
  41e60f:	inc    ebp
  41e610:	arpl   WORD PTR [eax-0x3d],dx
  41e613:	mov    al,ds:0x23c2f5f2
  41e618:	inc    ebp
  41e619:	shr    DWORD PTR [eax+0x5e],1
  41e61c:	ficom  DWORD PTR [edx]
  41e61e:	xchg   BYTE PTR [edi+0x19],dh
  41e621:	xor    DWORD PTR [ebx-0x59],esp
  41e624:	sub    ebx,ebx
  41e626:	xor    eax,0x9bb74eed
  41e62b:	inc    esp
  41e62c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e62d:	retf   0x6307
  41e630:	inc    ebx
  41e631:	scas   al,BYTE PTR es:[edi]
  41e632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e633:	pop    esp
  41e634:	repnz sbb BYTE PTR [esi],0x3c
  41e638:	and    BYTE PTR [eax+0x76],ch
  41e63b:	xchg   ebx,eax
  41e63c:	les    eax,FWORD PTR [edx+0x51824a2d]
  41e642:	xor    eax,0xda2e3da9
  41e647:	jge    0x41e654
  41e649:	mov    ds:0xe0e87095,al
  41e64e:	pop    ecx
  41e64f:	into   
  41e650:	std    
  41e651:	add    DWORD PTR [edx-0x6c],esp
  41e654:	jecxz  0x41e6d1
  41e656:	push   esp
  41e657:	push   ds
  41e658:	pop    edi
  41e659:	je     0x41e5fd
  41e65b:	pop    eax
  41e65c:	mov    cl,0xa
  41e65e:	inc    esi
  41e65f:	rol    BYTE PTR [esi+edx*2],cl
  41e662:	and    eax,0xb7cd9e70
  41e667:	stos   DWORD PTR es:[edi],eax
  41e668:	arpl   WORD PTR [edi-0x12],bx
  41e66b:	ins    BYTE PTR es:[edi],dx
  41e66c:	or     eax,0xeee3ae07
  41e671:	pop    edx
  41e672:	and    al,0x1f
  41e674:	test   eax,0x4396201a
  41e679:	inc    esp
  41e67a:	inc    esi
  41e67b:	xchg   ecx,eax
  41e67c:	mov    ds:0x42679cb,eax
  41e681:	(bad)  
  41e682:	xchg   ebx,eax
  41e683:	outs   dx,DWORD PTR ds:[esi]
  41e684:	std    
  41e685:	mov    ecx,0xc8be4b21
  41e68a:	and    al,0x83
  41e68c:	cmc    
  41e68d:	rcl    DWORD PTR [edx+0x6a],0x53
  41e691:	mov    dl,0xa8
  41e693:	and    BYTE PTR [ebx+0x4bc3cfab],ah
  41e699:	pop    ds
  41e69a:	pop    ebx
  41e69b:	ret    0x6083
  41e69e:	repnz and al,0x6c
  41e6a1:	sahf   
  41e6a2:	addr16 adc bh,cl
  41e6a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a6:	ins    BYTE PTR es:[edi],dx
  41e6a7:	push   esi
  41e6a8:	jl     0x41e6e6
  41e6aa:	sub    al,0x85
  41e6ac:	sbb    ecx,eax
  41e6ae:	sbb    bh,bh
  41e6b0:	fwait
  41e6b1:	pop    eax
  41e6b2:	aaa    
  41e6b3:	sub    BYTE PTR [esi+edi*8-0x2f],0x27
  41e6b8:	add    eax,0x1ed18dab
  41e6bd:	out    dx,eax
  41e6be:	std    
  41e6bf:	(bad)  
  41e6c0:	push   eax
  41e6c1:	jb     0x41e6cf
  41e6c3:	cli    
  41e6c4:	xchg   ebx,eax
  41e6c5:	pop    esp
  41e6c6:	in     al,dx
  41e6c7:	mov    ebx,0xd10c62fd
  41e6cc:	nop
  41e6cd:	cmp    dl,bh
  41e6cf:	push   ecx
  41e6d0:	inc    ebx
  41e6d1:	loopne 0x41e692
  41e6d3:	gs ss das 
  41e6d6:	add    BYTE PTR [edi],0x53
  41e6d9:	call   0xcfdd22c1
  41e6de:	add    eax,0xbe56f522
  41e6e3:	or     ebx,DWORD PTR [esi-0x1f3756f1]
  41e6e9:	mov    ds:0x54c4b2ec,al
  41e6ee:	add    eax,ebx
  41e6f0:	jmp    0xd13f534c
  41e6f5:	in     al,0xe4
  41e6f7:	push   ss
  41e6f8:	or     eax,edx
  41e6fa:	pop    esi
  41e6fb:	retf   0x71f3
  41e6fe:	fidiv  WORD PTR [edx+ecx*2]
  41e701:	push   edi
  41e702:	std    
  41e703:	adc    ebx,DWORD PTR [ecx+0x15]
  41e706:	mov    ss,WORD PTR [edi-0x300df847]
  41e70c:	xchg   edi,eax
  41e70d:	xchg   esi,eax
  41e70e:	dec    edx
  41e70f:	jmp    0x9e30:0xf47891c5
  41e716:	imul   ch
  41e718:	jbe    0x41e767
  41e71a:	test   DWORD PTR [ebx-0x9642792],ecx
  41e720:	sbb    BYTE PTR [eax-0x54cc547b],bh
  41e726:	jae    0x41e6e6
  41e728:	(bad)  
  41e729:	clc    
  41e72a:	int    0xe4
  41e72c:	inc    eax
  41e72d:	push   0xffffff8d
  41e72f:	mov    eax,0x3cf73a3a
  41e734:	mov    ebp,0x7eb24aab
  41e739:	or     DWORD PTR ds:0xf68ffd90,edi
  41e73f:	js     0x41e72b
  41e741:	sysenter 
  41e743:	pusha  
  41e744:	jae    0x41e6eb
  41e746:	mov    esp,0xc1b4d410
  41e74b:	or     edx,DWORD PTR [ecx-0x1bc8e2f3]
  41e751:	arpl   WORD PTR [ebx],dx
  41e753:	or     ch,ah
  41e755:	jp     0x41e73f
  41e757:	pop    es
  41e758:	bound  ebp,QWORD PTR [eax+0x8007753]
  41e75e:	jmp    0xe9a6:0xd168fe5e
  41e765:	test   eax,0x92b9bbe9
  41e76a:	into   
  41e76b:	mov    eax,0x1a72df95
  41e770:	hlt    
  41e771:	xor    al,0x68
  41e773:	mov    gs,edi
  41e775:	cmp    DWORD PTR [ebx-0x3b],ebx
  41e778:	sbb    eax,DWORD PTR [ecx+0x79]
  41e77b:	cwde   
  41e77c:	dec    ebp
  41e77d:	out    0xea,eax
  41e77f:	jp     0x41e730
  41e781:	shld   eax,edx,0xb0
  41e785:	into   
  41e786:	adc    ebx,DWORD PTR [ecx+eax*4-0x42]
  41e78a:	add    eax,0x93f4e104
  41e78f:	pop    ss
  41e790:	ss js  0x41e7b1
  41e793:	inc    esi
  41e794:	inc    eax
  41e795:	(bad)  
  41e796:	jo     0x41e7a0
  41e798:	sbb    al,0x13
  41e79a:	es jle 0x41e803
  41e79d:	pop    ebx
  41e79e:	imul   BYTE PTR [eax]
  41e7a0:	jmp    0x983b548
  41e7a5:	aam    0x62
  41e7a7:	mov    fs,esi
  41e7a9:	rcr    BYTE PTR [esi],cl
  41e7ab:	sbb    eax,0xa0415645
  41e7b0:	mov    ?,WORD PTR [edx]
  41e7b2:	in     al,0x58
  41e7b4:	fist   WORD PTR [esi+0x2f]
  41e7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7b8:	(bad)  
  41e7b9:	stc    
  41e7ba:	jo     0x41e812
  41e7bc:	fcomp  QWORD PTR [esi-0x59]
  41e7bf:	sbb    bh,BYTE PTR [edi-0xd]
  41e7c2:	aam    0xce
  41e7c4:	lock ja 0x41e7f7
  41e7c7:	or     al,0xe9
  41e7c9:	ficom  DWORD PTR ds:0xec81968f
  41e7cf:	xchg   BYTE PTR ds:0x7427db4a,ah
  41e7d5:	push   ss
  41e7d6:	pop    ebp
  41e7d7:	pop    ss
  41e7d8:	sub    al,BYTE PTR [eax]
  41e7da:	jmp    0x84ed0ed8
  41e7df:	test   al,0x6f
  41e7e1:	mov    esi,0x767e5b47
  41e7e6:	xchg   esi,eax
  41e7e7:	jbe    0x41e85e
  41e7e9:	imul   eax,DWORD PTR [eax],0xac9c5720
  41e7ef:	xchg   ebp,eax
  41e7f0:	jecxz  0x41e778
  41e7f2:	cs inc ebp
  41e7f4:	test   DWORD PTR es:[ecx+0x2],ebp
  41e7f8:	push   es
  41e7f9:	xchg   edx,eax
  41e7fa:	cdq    
  41e7fb:	adc    edx,DWORD PTR [ecx-0x18fd3fcb]
  41e801:	mov    esp,0xf255161e
  41e806:	xchg   esi,eax
  41e807:	sbb    eax,DWORD PTR [edx]
  41e809:	iret   
  41e80a:	dec    eax
  41e80b:	test   eax,0x157e74aa
  41e810:	mov    dl,0x26
  41e812:	lahf   
  41e813:	cmc    
  41e814:	and    DWORD PTR [edx],0xa5d4e921
  41e81a:	nop
  41e81b:	imul   esi,DWORD PTR [edx-0x29a4fb5c],0x23dbe27c
  41e825:	out    dx,eax
  41e826:	(bad)  
  41e828:	and    ch,dh
  41e82a:	(bad)  
  41e82b:	repz enter 0x628,0x13
  41e830:	dec    edi
  41e831:	or     ah,BYTE PTR [ecx]
  41e833:	pop    ds
  41e834:	push   ebp
  41e835:	sti    
  41e836:	ja     0x41e8a8
  41e838:	je     0x41e848
  41e83a:	outs   dx,BYTE PTR ds:[esi]
  41e83b:	imul   esp,DWORD PTR [ebx+0x41],0x5a1e38ed
  41e842:	mov    esp,ds
  41e844:	and    al,0xa0
  41e846:	or     al,0x54
  41e848:	push   esi
  41e849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e84a:	sar    BYTE PTR [esi-0x6a],1
  41e84d:	mov    dh,0x6
  41e84f:	inc    ebp
  41e850:	test   DWORD PTR [ebx-0x7fb8ecae],ebx
  41e856:	lock call 0x9f31:0xf665796c
  41e85e:	aam    0x4b
  41e860:	ds das 
  41e862:	mov    esi,DWORD PTR [edi+0x5fdd0e30]
  41e868:	mov    dl,0x8
  41e86a:	jl     0x41e8a7
  41e86c:	dec    edx
  41e86d:	jecxz  0x41e8a6
  41e86f:	outs   dx,DWORD PTR ds:[esi]
  41e870:	push   ds
  41e871:	mov    ecx,0xa2193e20
  41e876:	mov    ds:0x95b2c29b,al
  41e87b:	in     eax,0x80
  41e87d:	fbld   TBYTE PTR [edx-0x68f5a40c]
  41e883:	sbb    BYTE PTR [edx+0xc92c9f1],cl
  41e889:	(bad)  
  41e88a:	retf   0x238a
  41e88d:	push   eax
  41e88e:	fidiv  DWORD PTR [ebp-0x5c5882e9]
  41e894:	mov    bl,0x72
  41e896:	ds sbb eax,0x82bed29e
  41e89c:	pusha  
  41e89d:	inc    ecx
  41e89e:	call   0xd9ae:0x914a772
  41e8a5:	in     eax,0xad
  41e8a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8a8:	xchg   esi,eax
  41e8a9:	ficom  DWORD PTR [esi]
  41e8ab:	adc    DWORD PTR [eax-0x505575ed],esp
  41e8b1:	mov    esp,0xd73db886
  41e8b6:	mov    cl,0x90
  41e8b8:	dec    ecx
  41e8b9:	mov    ch,0xc6
  41e8bb:	mov    dh,0xba
  41e8bd:	jg     0x41e89c
  41e8bf:	out    dx,al
  41e8c0:	dec    ebp
  41e8c1:	scas   al,BYTE PTR es:[edi]
  41e8c2:	and    ah,BYTE PTR [ecx+eiz*4-0x54555572]
  41e8c9:	inc    esi
  41e8ca:	add    edx,eax
  41e8cc:	pop    edi
  41e8cd:	xor    BYTE PTR [ebx+0x7bf9b136],al
  41e8d3:	icebp  
  41e8d4:	and    ah,bl
  41e8d6:	inc    ebx
  41e8d7:	ins    BYTE PTR es:[edi],dx
  41e8d8:	sub    ah,BYTE PTR [ecx]
  41e8da:	pushf  
  41e8db:	cs mov esp,0x80ea57ab
  41e8e1:	rcr    ah,0xd2
  41e8e4:	arpl   WORD PTR [esi+0x42],dx
  41e8e7:	scas   eax,DWORD PTR es:[edi]
  41e8e8:	pop    ebx
  41e8e9:	mov    esp,0xc79c9057
  41e8ee:	mov    DWORD PTR [ecx],eax
  41e8f0:	push   ebx
  41e8f1:	mov    edx,DWORD PTR [edi-0x39f325a2]
  41e8f7:	aas    
  41e8f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f9:	rol    BYTE PTR [edx+0x5e9a81cc],0xf0
  41e900:	adc    edi,DWORD PTR [esp+ebx*1-0x7891da01]
  41e907:	jmp    0xbbcb:0x626b0e63
  41e90e:	sub    bh,cl
  41e910:	jl     0x41e8c2
  41e912:	mov    BYTE PTR [ecx],al
  41e914:	and    DWORD PTR [ebx+0x2cb2fb4],esi
  41e91a:	ds shl dl,1
  41e91d:	pop    eax
  41e91e:	dec    DWORD PTR [eax+0x51]
  41e921:	pop    edi
  41e922:	jbe    0x41e8bb
  41e924:	mov    edx,0xe48ec7f4
  41e929:	repnz or BYTE PTR [edi+ebx*1+0x5d01a934],0xf8
  41e932:	loope  0x41e9a4
  41e934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e935:	inc    eax
  41e936:	adc    BYTE PTR [ebp+0x6],0xce
  41e93a:	jecxz  0x41e8fe
  41e93c:	dec    esp
  41e93d:	sbb    al,0x2a
  41e93f:	inc    eax
  41e940:	shr    DWORD PTR [edi-0x63cbca92],1
  41e946:	mov    dh,0xb8
  41e948:	shl    DWORD PTR [eax-0x317ab97d],0x91
  41e94f:	icebp  
  41e950:	mov    edx,0xa07e2592
  41e955:	jnp    0x41e99e
  41e957:	loop   0x41e942
  41e959:	inc    ebp
  41e95a:	mov    ah,0xd
  41e95c:	fs pop ebp
  41e95e:	cs jns 0x41e922
  41e961:	inc    ecx
  41e962:	pop    ebx
  41e963:	pop    ebp
  41e964:	push   ebx
  41e965:	xchg   ebp,eax
  41e966:	cmc    
  41e967:	and    eax,0x8ceec6b3
  41e96c:	or     ch,BYTE PTR [eax+0x36]
  41e96f:	push   edi
  41e970:	repnz mov ah,BYTE PTR [ebp-0x6d315e23]
  41e977:	mov    esi,0x5a223a3e
  41e97c:	les    esp,FWORD PTR [eax+0x15]
  41e97f:	pusha  
  41e980:	mov    BYTE PTR [esp+ebp*2],al
  41e983:	jl     0x41e91c
  41e985:	add    edi,DWORD PTR [eax+edx*4-0x8053f67]
  41e98c:	mov    ch,0x26
  41e98e:	jae    0x41e99f
  41e990:	stos   BYTE PTR es:[edi],al
  41e991:	int    0x1c
  41e993:	mov    ebp,0xa4dacf6
  41e998:	dec    ebp
  41e999:	cli    
  41e99a:	sbb    dh,dl
  41e99c:	test   DWORD PTR [ebp-0x22],ecx
  41e99f:	repz xchg ebx,eax
  41e9a1:	xor    al,0x84
  41e9a3:	fwait
  41e9a4:	cdq    
  41e9a5:	adc    BYTE PTR [ebx-0x52],ch
  41e9a8:	sbb    al,0x3f
  41e9aa:	or     edx,DWORD PTR [bx+si]
  41e9ad:	test   al,0x9b
  41e9af:	cmp    ecx,DWORD PTR [esi+0x2]
  41e9b2:	stos   DWORD PTR es:[edi],eax
  41e9b3:	adc    DWORD PTR [eax+0x5a768143],ebx
  41e9b9:	clc    
  41e9ba:	mov    ebp,0xb89e0ae2
  41e9bf:	fcom   st(0)
  41e9c1:	fld    QWORD PTR [edx+0x5f550bd4]
  41e9c7:	or     edx,DWORD PTR [ecx-0x54410320]
  41e9cd:	lahf   
  41e9ce:	mov    bl,0x1b
  41e9d0:	rcr    BYTE PTR [esi-0x31256aa2],cl
  41e9d6:	(bad)  
  41e9d7:	jmp    0xe8a4:0x55466c3b
  41e9de:	loop   0x41ea51
  41e9e0:	cmc    
  41e9e1:	cs pop esp
  41e9e3:	mov    ?,esi
  41e9e5:	sub    eax,0xf8751d8a
  41e9ea:	aad    0x9d
  41e9ec:	dec    ebp
  41e9ed:	shl    ebx,1
  41e9ef:	nop
  41e9f0:	call   0x2315:0x4f298aad
  41e9f7:	adc    BYTE PTR [edx],ah
  41e9f9:	test   eax,0xb9640d82
  41e9fe:	call   0x3f27707f
  41ea03:	in     eax,dx
  41ea04:	neg    DWORD PTR [ebp+0x50]
  41ea07:	pop    ds
  41ea08:	fidivr WORD PTR [esi+eax*2-0x17c5e46c]
  41ea0f:	and    edx,DWORD PTR [edi-0xe023b7e]
  41ea15:	add    ch,bh
  41ea17:	push   ds
  41ea18:	push   ecx
  41ea19:	dec    esp
  41ea1a:	ficom  WORD PTR ds:0x20acbe2b
  41ea20:	mov    ds:0x840bf2d3,al
  41ea25:	xor    DWORD PTR [ebp+esi*2-0xe],esi
  41ea29:	sub    al,0x46
  41ea2b:	cmp    al,0xac
  41ea2d:	pop    ds
  41ea2e:	imul   ecx,DWORD PTR [ebx+0x54b221c8],0xfffffff2
  41ea35:	loopne 0x41e9ce
  41ea37:	test   DWORD PTR [ecx+esi*4+0x7edc79dc],ecx
  41ea3e:	xchg   ebx,eax
  41ea3f:	adc    ebx,ebp
  41ea41:	and    al,0xa8
  41ea43:	pop    ds
  41ea44:	mov    al,ds:0x39f12d0d
  41ea49:	cmp    eax,0x3d4df83d
  41ea4e:	hlt    
  41ea4f:	adc    DWORD PTR [ecx+esi*8+0x65462551],eax
  41ea56:	or     eax,0xa18b398e
  41ea5b:	push   es
  41ea5c:	and    DWORD PTR [ecx],edx
  41ea5e:	or     al,0x3c
  41ea60:	sbb    BYTE PTR [edi+0x70e7076a],0x86
  41ea67:	sub    ebx,DWORD PTR [eax+0x258a76d3]
  41ea6d:	pop    ds
  41ea6e:	add    eax,0x3aab4404
  41ea73:	xchg   edi,eax
  41ea74:	cmp    BYTE PTR [ebx-0x31],0xd7
  41ea78:	add    eax,0x95fae145
  41ea7d:	repnz lea ebp,[edx+0x615508e2]
  41ea84:	or     DWORD PTR [eax],0xffffffe4
  41ea87:	add    DWORD PTR [edx+edx*4],0xffffffbf
  41ea8b:	xchg   BYTE PTR [ebp-0x2f3fa5ea],dh
  41ea91:	nop
  41ea92:	icebp  
  41ea93:	stos   BYTE PTR es:[edi],al
  41ea94:	sub    ebp,ebx
  41ea96:	(bad)  
  41ea97:	xchg   eax,ebp
  41ea99:	jle    0x41eacd
  41ea9b:	inc    edi
  41ea9c:	mov    eax,ds:0x3c01caea
  41eaa1:	xor    BYTE PTR [ecx+0x25],0xc0
  41eaa5:	(bad)  
  41eaa6:	fmulp  st(3),st
  41eaa8:	jmp    0x4eac:0x79d01af7
  41eaaf:	mov    ecx,0xe262669f
  41eab4:	imul   esp,DWORD PTR [ebp+0x27],0xffffffec
  41eab8:	xlat   BYTE PTR ds:[ebx]
  41eab9:	or     eax,ebx
  41eabb:	outs   dx,BYTE PTR ds:[esi]
  41eabc:	sti    
  41eabd:	test   BYTE PTR [ebx-0x38d12892],0xe4
  41eac4:	in     al,0x18
  41eac6:	cmp    eax,0x87f441c4
  41eacb:	scas   al,BYTE PTR es:[edi]
  41eacc:	jmp    0x41eae9
  41eace:	stos   BYTE PTR es:[edi],al
  41eacf:	xchg   dh,dl
  41ead1:	retf   
  41ead2:	cmp    eax,0xd60fdbd3
  41ead7:	xor    cl,BYTE PTR [edx+0x51a9b02e]
  41eadd:	add    al,0xcf
  41eadf:	popa   
  41eae0:	mov    edx,0xd3147e9f
  41eae5:	inc    ecx
  41eae6:	mov    bl,0x4c
  41eae8:	ret    0x5c24
  41eaeb:	mov    al,0x2
  41eaed:	out    0x60,al
  41eaef:	cmp    edi,esi
  41eaf1:	ins    BYTE PTR es:[edi],dx
  41eaf2:	shl    DWORD PTR [edx+0x7],0xf6
  41eaf6:	lods   eax,DWORD PTR ds:[esi]
  41eaf7:	cmp    BYTE PTR [ecx-0x55],ch
  41eafa:	stc    
  41eafb:	dec    ebx
  41eafc:	shl    BYTE PTR [eax+0x2c38cff9],cl
  41eb02:	push   cs
  41eb03:	mov    cl,0x82
  41eb05:	jg     0x41eb6e
  41eb07:	mov    WORD PTR [eax],ss
  41eb09:	jbe    0x41eaf3
  41eb0b:	mov    edi,0x67ae6125
  41eb10:	imul   esi,DWORD PTR [edi+0x16],0xb
  41eb14:	loopne 0x41eb42
  41eb16:	data16 in al,dx
  41eb18:	ds aam 0x7d
  41eb1b:	mov    esp,0x168c044f
  41eb20:	mov    eax,ds:0xcc710354
  41eb25:	inc    esi
  41eb26:	(bad)  
  41eb27:	mov    edi,0xbe8fc0a6
  41eb2c:	jb     0x41eb11
  41eb2e:	loop   0x41eb26
  41eb30:	pop    edx
  41eb31:	or     DWORD PTR [ecx+edi*8+0x28],esp
  41eb35:	in     al,dx
  41eb36:	cmp    DWORD PTR [edx+0x25],edx
  41eb39:	mov    bl,0xdb
  41eb3b:	leave  
  41eb3c:	stos   DWORD PTR es:[edi],eax
  41eb3d:	jmp    0x41eabf
  41eb3f:	test   eax,0xe898881
  41eb44:	cs sahf 
  41eb46:	adc    al,0x80
  41eb48:	lea    edx,[ecx]
  41eb4a:	repz xor DWORD PTR [edx+ecx*1-0x63],eax
  41eb4f:	xor    DWORD PTR [edi-0x141782f3],ecx
  41eb55:	mov    bl,0xf5
  41eb57:	scas   eax,DWORD PTR es:[edi]
  41eb58:	pop    ss
  41eb59:	mov    ebp,0xa0becc91
  41eb5e:	mov    esi,0x99af904a
  41eb63:	sub    BYTE PTR ds:0x891f8570,cl
  41eb69:	jb     0x41ebc6
  41eb6b:	shl    BYTE PTR [ebx+0x10955484],cl
  41eb71:	pushf  
  41eb72:	dec    ebx
  41eb73:	nop
  41eb74:	pop    esi
  41eb75:	pop    esi
  41eb76:	ror    DWORD PTR [edi-0x75273462],0xe1
  41eb7d:	fadd   st(5),st
  41eb7f:	rcl    DWORD PTR [ecx-0x469ff9c1],1
  41eb85:	adc    al,BYTE PTR [ebx-0x2a]
  41eb88:	mov    eax,ds:0x84b2d831
  41eb8d:	or     BYTE PTR [ecx],ah
  41eb8f:	ins    DWORD PTR es:[edi],dx
  41eb90:	mov    ah,0x2b
  41eb92:	mov    ecx,0x96287ff8
  41eb97:	adc    al,0x48
  41eb99:	push   eax
  41eb9a:	fwait
  41eb9b:	add    eax,esp
  41eb9d:	ss dec esp
  41eb9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eba0:	data16 in al,dx
  41eba2:	sar    edx,1
  41eba4:	in     eax,dx
  41eba5:	sub    ecx,DWORD PTR cs:[eax-0x2df50502]
  41ebac:	push   edx
  41ebad:	rcl    BYTE PTR [edx],1
  41ebaf:	pop    ss
  41ebb0:	outs   dx,DWORD PTR ds:[esi]
  41ebb1:	xchg   ebx,eax
  41ebb2:	cmc    
  41ebb3:	push   esp
  41ebb4:	pop    edi
  41ebb5:	push   ss
  41ebb6:	push   ecx
  41ebb7:	add    eax,0xb9654fd7
  41ebbc:	mul    DWORD PTR [esi+edx*1]
  41ebbf:	cmp    BYTE PTR [edx],bl
  41ebc1:	mov    ecx,0x78b1c96c
  41ebc6:	xor    DWORD PTR [ebx+ebp*1-0x1d8ae74e],esi
  41ebcd:	iret   
  41ebce:	adc    BYTE PTR [eax],0xf0
  41ebd1:	dec    esp
  41ebd2:	push   0xffffffe8
  41ebd4:	inc    edi
  41ebd5:	ss inc esp
  41ebd7:	(bad)  
  41ebd8:	loope  0x41ec2e
  41ebda:	pusha  
  41ebdb:	sbb    cl,BYTE PTR [edi-0x3c]
  41ebde:	enter  0x5fda,0xa6
  41ebe2:	mov    ch,0x3f
  41ebe4:	push   eax
  41ebe5:	pop    edx
  41ebe6:	(bad)  
  41ebe7:	xchg   esi,eax
  41ebe8:	data16 adc al,0xe3
  41ebeb:	add    eax,0x95c37ba3
  41ebf0:	dec    esi
  41ebf1:	xchg   edi,eax
  41ebf2:	addr16 (bad) 
  41ebf4:	push   ds
  41ebf5:	mov    ds:0x4357b109,al
  41ebfa:	popa   
  41ebfb:	jecxz  0x41ebbb
  41ebfd:	or     ah,BYTE PTR [ebp-0x16]
  41ec00:	sbb    DWORD PTR [edi+0x2b],eax
  41ec03:	cmp    ch,dh
  41ec05:	xlat   BYTE PTR ds:[ebx]
  41ec06:	shr    DWORD PTR [ebx+0x9],1
  41ec09:	and    eax,0x57a97ad7
  41ec0e:	jmp    0x41ec2b
  41ec10:	sub    dh,BYTE PTR [edi-0x17]
  41ec13:	adc    eax,0xcac75712
  41ec18:	mov    esi,0x5c05b2fe
  41ec1d:	cs dec ecx
  41ec1f:	stos   BYTE PTR es:[edi],al
  41ec20:	mov    bl,0x4c
  41ec22:	or     BYTE PTR [edx],dh
  41ec24:	inc    esi
  41ec25:	addr16 in eax,dx
  41ec27:	cli    
  41ec28:	mov    ebx,0x8747faf2
  41ec2d:	mov    ch,0xc8
  41ec2f:	scas   al,BYTE PTR es:[edi]
  41ec30:	in     eax,dx
  41ec31:	jo     0x41ebeb
  41ec33:	push   ss
  41ec34:	sti    
  41ec35:	push   ebp
  41ec36:	mov    cl,0x73
  41ec38:	jl     0x41ebe1
  41ec3a:	pop    edi
  41ec3b:	dec    eax
  41ec3c:	(bad)  
  41ec3d:	mov    esi,0xc6bd5363
  41ec42:	lods   eax,DWORD PTR ds:[esi]
  41ec43:	fwait
  41ec44:	push   es
  41ec45:	push   esp
  41ec46:	pop    ds
  41ec47:	aaa    
  41ec48:	cdq    
  41ec49:	push   esi
  41ec4a:	sbb    esi,DWORD PTR [eax]
  41ec4c:	jae    0x41ecc7
  41ec4e:	(bad)  
  41ec4f:	or     dl,BYTE PTR [edi]
  41ec51:	pop    ds
  41ec52:	not    BYTE PTR [ebp+0x7d]
  41ec55:	dec    eax
  41ec56:	pop    es
  41ec57:	inc    edx
  41ec58:	jmp    0x212c:0x1d7f6c67
  41ec5f:	fsubr  st,st(2)
  41ec61:	jno    0x41ec61
  41ec63:	adc    DWORD PTR [ebp+0x2d6b7739],edx
  41ec69:	outs   dx,DWORD PTR ds:[esi]
  41ec6a:	lahf   
  41ec6b:	mov    ch,0x69
  41ec6d:	inc    edi
  41ec6e:	cmc    
  41ec6f:	lock xor eax,0x76cba75f
  41ec75:	fmul   QWORD PTR [edx+ebp*1-0x5c8a9140]
  41ec7c:	popa   
  41ec7d:	cs int3 
  41ec7f:	xchg   ecx,eax
  41ec80:	jg     0x41ec18
  41ec82:	(bad)  
  41ec83:	sub    al,0xe1
  41ec85:	loop   0x41ecaf
  41ec87:	jnp    0x41ec4b
  41ec89:	mov    al,0x5e
  41ec8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec8c:	stc    
  41ec8d:	jmp    0x41ecb9
  41ec8f:	mov    ch,0xd0
  41ec91:	mov    edi,0xb27d8a61
  41ec96:	test   BYTE PTR [edi],0x25
  41ec99:	jo     0x41ec85
  41ec9b:	ja     0x41ecd8
  41ec9d:	outs   dx,DWORD PTR ds:[esi]
  41ec9e:	imul   edx,DWORD PTR [ebx],0xffffffef
  41eca1:	stc    
  41eca2:	push   es
  41eca3:	adc    eax,0x69e7d478
  41eca8:	add    ebx,ecx
  41ecaa:	pop    esp
  41ecab:	scas   eax,DWORD PTR es:[edi]
  41ecac:	test   al,0xa0
  41ecae:	mov    edi,0xeb084cab
  41ecb3:	mov    WORD PTR [edx+0x69],gs
  41ecb6:	add    al,BYTE PTR [eax-0x20321686]
  41ecbc:	stos   DWORD PTR es:[edi],eax
  41ecbd:	leave  
  41ecbe:	or     eax,0x53710643
  41ecc3:	pushf  
  41ecc4:	icebp  
  41ecc5:	loop   0x41ec50
  41ecc7:	pop    es
  41ecc8:	inc    ecx
  41ecc9:	cmp    bl,BYTE PTR [ebx-0xd9528e9]
  41eccf:	int3   
  41ecd0:	jmp    0x41ed11
  41ecd2:	sub    ebp,DWORD PTR [edi]
  41ecd4:	int3   
  41ecd5:	mov    eax,0x4d692919
  41ecda:	call   0x7838:0x17e81202
  41ece1:	gs jne 0x41ed34
  41ece4:	test   DWORD PTR [ebx+eiz*4+0x71],edx
  41ece8:	hlt    
  41ece9:	inc    ebx
  41ecea:	dec    edi
  41eceb:	sbb    ebp,DWORD PTR ds:0xfb63b1c3
  41ecf1:	ja     0x41eca1
  41ecf3:	or     cl,BYTE PTR [esp+ebp*8+0x25]
  41ecf7:	xchg   edx,eax
  41ecf8:	test   DWORD PTR [ebx],edx
  41ecfa:	or     DWORD PTR [edx-0x25],ecx
  41ecfd:	loopne 0x41ed5d
  41ecff:	dec    eax
  41ed00:	push   esp
  41ed01:	outs   dx,BYTE PTR ds:[esi]
  41ed02:	inc    ebx
  41ed03:	out    0x9d,al
  41ed05:	loopne 0x41ec9b
  41ed07:	mov    eax,ds:0x672ec429
  41ed0c:	arpl   cx,sp
  41ed0e:	push   edi
  41ed0f:	in     eax,0x1b
  41ed11:	rol    BYTE PTR [ebp+ebp*8+0x2d45125c],1
  41ed18:	in     al,dx
  41ed19:	inc    esp
  41ed1a:	and    ebp,DWORD PTR ds:0xb5f62c4f
  41ed20:	and    ecx,ebp
  41ed22:	cmc    
  41ed23:	mov    ds,WORD PTR [esi+0x3e4e53e5]
  41ed29:	lea    esp,[ecx]
  41ed2b:	jge    0x41ecfa
  41ed2d:	xor    edi,ebx
  41ed2f:	jne    0x41ecd0
  41ed31:	sub    al,0x14
  41ed33:	mov    fs,edx
  41ed35:	adc    bh,BYTE PTR [edi+esi*2+0x5ae2f6c6]
  41ed3c:	xchg   eax,ecx
  41ed3e:	jnp    0x41ed79
  41ed40:	pop    esi
  41ed41:	ss out dx,al
  41ed43:	enter  0x107e,0x8
  41ed47:	shl    BYTE PTR [ecx+0x14],1
  41ed4a:	add    BYTE PTR [esi],cl
  41ed4c:	cmp    esi,DWORD PTR [edx+0x54a2012f]
  41ed52:	add    ebx,DWORD PTR [esp+ecx*8-0x77]
  41ed56:	jp     0x41ed28
  41ed58:	icebp  
  41ed59:	adc    BYTE PTR [esp+eax*8+0x4a48a47a],ch
  41ed60:	mov    dh,0x2e
  41ed62:	sahf   
  41ed63:	xor    ah,bl
  41ed65:	adc    dh,BYTE PTR [esi+0x3dbe1047]
  41ed6b:	mov    al,ds:0x771a0b9b
  41ed70:	icebp  
  41ed71:	inc    edi
  41ed72:	push   es
  41ed73:	aas    
  41ed74:	loop   0x41ed48
  41ed76:	xor    ecx,eax
  41ed78:	mov    ch,0x42
  41ed7a:	push   ds
  41ed7b:	js     0x41ed1b
  41ed7d:	jecxz  0x41ed6c
  41ed7f:	or     al,0x56
  41ed81:	push   0xa7440617
  41ed86:	push   esi
  41ed87:	je     0x41eda7
  41ed89:	imul   eax,DWORD PTR [ebp+eiz*4+0x4beb55c0],0x4f
  41ed91:	sbb    al,0x70
  41ed93:	(bad)  
  41ed94:	mov    esp,0x44813702
  41ed99:	mov    ebx,0x21698c17
  41ed9e:	daa    
  41ed9f:	pop    eax
  41eda0:	fdivr  st,st(1)
  41eda2:	inc    ebp
  41eda3:	or     DWORD PTR [edi+edx*8],ecx
  41eda6:	mov    cl,0xcb
  41eda8:	dec    esp
  41eda9:	rcr    BYTE PTR [esi],0x7a
  41edac:	inc    esi
  41edad:	add    al,0x48
  41edaf:	push   esp
  41edb0:	inc    ebp
  41edb1:	fucomp st(0)
  41edb3:	fwait
  41edb4:	sub    eax,0xae1ee435
  41edb9:	leave  
  41edba:	das    
  41edbb:	fisttp QWORD PTR [esi+0x66]
  41edbe:	mov    dl,ah
  41edc0:	scas   al,BYTE PTR es:[edi]
  41edc1:	lods   al,BYTE PTR ds:[esi]
  41edc2:	test   al,0x9d
  41edc4:	sub    al,0x1d
  41edc6:	sbb    eax,0x7b8a9b9e
  41edcb:	mov    BYTE PTR [eax+ebx*8],dh
  41edce:	dec    edx
  41edcf:	iret   
  41edd0:	xor    ch,ch
  41edd2:	mov    DWORD PTR [edx+0xf],eax
  41edd5:	cli    
  41edd6:	lods   al,BYTE PTR ds:[esi]
  41edd7:	retf   
  41edd8:	fdiv   DWORD PTR [ebp+0xb]
  41eddb:	repnz xchg ebx,eax
  41eddd:	rol    BYTE PTR [eax],0xe
  41ede0:	sub    al,0x60
  41ede2:	pop    esi
  41ede3:	sbb    al,BYTE PTR [esi-0x6382523e]
  41ede9:	mov    ss,eax
  41edeb:	mov    eax,0xbf150401
  41edf0:	lock xor dl,BYTE PTR [ecx+edi*4]
  41edf4:	xor    al,0xb8
  41edf6:	(bad)  
  41edf8:	ins    DWORD PTR es:[edi],dx
  41edf9:	sbb    al,0x26
  41edfb:	inc    esp
  41edfc:	ins    DWORD PTR es:[edi],dx
  41edfd:	out    0x79,eax
  41edff:	rcr    DWORD PTR [ecx-0x617abead],0xe4
  41ee06:	aaa    
  41ee07:	jg     0x41edc0
  41ee09:	popf   
  41ee0a:	stc    
  41ee0b:	mov    edx,0x5b124ea
  41ee10:	mov    bl,0xe5
  41ee12:	hlt    
  41ee13:	xchg   esp,eax
  41ee14:	pop    es
  41ee15:	cld    
  41ee16:	cmc    
  41ee17:	cmp    al,0x23
  41ee19:	push   eax
  41ee1a:	not    DWORD PTR [edi]
  41ee1c:	std    
  41ee1d:	iret   
  41ee1e:	mov    ch,ah
  41ee20:	or     BYTE PTR [edi+0x6f],cl
  41ee23:	mov    dl,0x74
  41ee25:	hlt    
  41ee26:	xor    BYTE PTR [ecx+0x5198b8cc],cl
  41ee2c:	aam    0xaa
  41ee2e:	cdq    
  41ee2f:	mov    ch,0x2f
  41ee31:	jnp    0x41ee53
  41ee33:	fnsave ds:0xa89b05ac
  41ee39:	sahf   
  41ee3a:	imul   esp,DWORD PTR [edi],0x4f69337
  41ee40:	adc    ebp,DWORD PTR ds:0x356fd5ee
  41ee46:	imul   BYTE PTR [eax]
  41ee48:	imul   ebp,DWORD PTR [eax],0xffffffeb
  41ee4b:	mov    al,ds:0x103d6bc
  41ee50:	test   BYTE PTR [eiz*4+0x69f5f827],bh
  41ee57:	ret    
  41ee58:	(bad)  
  41ee5a:	fsub   DWORD PTR [ebx-0x3]
  41ee5d:	dec    edx
  41ee5e:	ds imul eax,ebx,0x56f1e4a4
  41ee65:	pop    ecx
  41ee66:	mov    esi,0x938f5c12
  41ee6b:	data16 (bad) 
  41ee6d:	sbb    al,0xcf
  41ee6f:	push   0x7480d236
  41ee74:	out    dx,eax
  41ee75:	jge    0x41ee0f
  41ee77:	ficom  WORD PTR [ebp-0x56]
  41ee7a:	test   BYTE PTR [ebx-0x3923b8e5],0x2e
  41ee81:	adc    bl,ch
  41ee83:	out    dx,eax
  41ee84:	nop
  41ee85:	and    al,BYTE PTR [ecx+ebp*8-0x5a]
  41ee89:	stos   BYTE PTR es:[edi],al
  41ee8a:	pop    edx
  41ee8b:	xchg   esi,eax
  41ee8c:	sbb    BYTE PTR [eax],bl
  41ee8e:	stos   BYTE PTR es:[edi],al
  41ee8f:	jle    0x41ee38
  41ee91:	mov    bh,0x7c
  41ee93:	xor    DWORD PTR [di-0x7c23],edx
  41ee98:	popa   
  41ee99:	xchg   esp,eax
  41ee9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee9b:	xor    bl,BYTE PTR [ebp-0x69]
  41ee9e:	mov    ds:0x4af047b8,eax
  41eea3:	pushf  
  41eea4:	(bad)  
  41eea5:	push   edx
  41eea6:	sbb    DWORD PTR [eax*1-0x25d85775],eax
  41eead:	jmp    0x20edd846
  41eeb2:	inc    edx
  41eeb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeb4:	push   cs
  41eeb5:	sub    DWORD PTR [eax+0x21ae8a17],0xffffffde
  41eebc:	adc    eax,0x55ed42d4
  41eec1:	dec    edi
  41eec2:	loop   0x41eefe
  41eec4:	push   0xfadc0ad4
  41eec9:	sub    eax,0xf6ef181e
  41eece:	xor    BYTE PTR [esi+edx*4-0x6bb94316],0xd8
  41eed6:	popf   
  41eed7:	add    al,0x9b
  41eed9:	sub    BYTE PTR [edi],dh
  41eedb:	stos   DWORD PTR es:[edi],eax
  41eedc:	mov    es,WORD PTR [edx+0x255b951a]
  41eee2:	adc    al,0xce
  41eee4:	jmp    0xab0b75cb
  41eee9:	pop    ecx
  41eeea:	adc    ebx,DWORD PTR [edi]
  41eeec:	jge    0x41eeb5
  41eeee:	push   ebx
  41eeef:	jecxz  0x41ef61
  41eef1:	or     DWORD PTR [eax-0x7599ef3c],eax
  41eef7:	xchg   edx,eax
  41eef8:	lds    ebx,FWORD PTR [ebx-0xe]
  41eefb:	or     dh,BYTE PTR [esp+esi*4-0x33964711]
  41ef02:	mov    esp,0x3c66c8be
  41ef07:	div    DWORD PTR [esi-0x1e0e18e5]
  41ef0d:	repz push ebx
  41ef0f:	daa    
  41ef10:	bound  ebp,QWORD PTR [esi]
  41ef12:	jmp    0x8dfee007
  41ef17:	pop    ds
  41ef18:	add    DWORD PTR [edx+0x587e828f],0x49bb237e
  41ef22:	out    0x3e,eax
  41ef24:	pslld  mm3,mm6
  41ef27:	imul   ecx,DWORD PTR [edi-0x3e],0x99d20ab6
  41ef2e:	fsubp  st(0),st
  41ef30:	pushf  
  41ef31:	aad    0x84
  41ef33:	cmp    DWORD PTR [ebx+0xe292774],edx
  41ef39:	loop   0x41eee5
  41ef3b:	dec    edx
  41ef3c:	push   ebp
  41ef3d:	into   
  41ef3e:	fdivrp st(0),st
  41ef40:	scas   al,BYTE PTR es:[edi]
  41ef41:	fucomip st,st(2)
  41ef43:	loope  0x41efa3
  41ef45:	pop    es
  41ef46:	mov    bl,0x5
  41ef48:	sbb    ah,BYTE PTR [ecx]
  41ef4a:	mov    ebp,0x1fee5929
  41ef4f:	adc    ebx,ecx
  41ef51:	(bad)  
  41ef52:	pop    esi
  41ef53:	push   0xffffff85
  41ef55:	sbb    bh,BYTE PTR [esi]
  41ef57:	fwait
  41ef58:	repz dec di
  41ef5b:	jp     0x41eef7
  41ef5d:	into   
  41ef5e:	adc    edi,ecx
  41ef60:	xchg   esi,eax
  41ef61:	retfw  
  41ef63:	jmp    0x5a7b:0x465415ec
  41ef6a:	add    al,BYTE PTR [eax+0x1e]
  41ef6d:	jle    0x41efe7
  41ef6f:	dec    edi
  41ef70:	ja     0x41ef9e
  41ef72:	ret    0x48b
  41ef75:	xchg   ebp,eax
  41ef76:	fdivp  st(7),st
  41ef78:	ss push edi
  41ef7a:	int    0x45
  41ef7c:	inc    edi
  41ef7d:	add    ah,BYTE PTR [ecx]
  41ef7f:	sub    BYTE PTR [eax+0x76],cl
  41ef82:	jl     0x41ef7c
  41ef84:	fwait
  41ef85:	and    edi,DWORD PTR [edi+0x1213d39e]
  41ef8b:	mov    bh,0xee
  41ef8d:	icebp  
  41ef8e:	sub    cl,BYTE PTR [ebp+0x5b]
  41ef91:	shl    BYTE PTR [esi-0x5d],0x1e
  41ef95:	push   0x4
  41ef97:	(bad)  
  41ef98:	jbe    0x41f009
  41ef9a:	pop    eax
  41ef9b:	inc    eax
  41ef9c:	lods   eax,DWORD PTR ds:[esi]
  41ef9d:	dec    ebp
  41ef9e:	jge    0x41efd6
  41efa0:	push   ebp
  41efa1:	jmp    0x889a:0xbfac2df2
  41efa8:	mov    dl,0x4d
  41efaa:	xor    eax,0x66e43dc5
  41efaf:	push   edx
  41efb0:	and    eax,0x8f58eee0
  41efb5:	hlt    
  41efb6:	xor    dl,BYTE PTR [eax]
  41efb8:	jmp    0x6596e900
  41efbd:	lock cmp BYTE PTR [esi+0x7],cl
  41efc1:	or     edi,DWORD PTR [bp+0x6a]
  41efc5:	loopne 0x41ef6c
  41efc7:	fcomp  QWORD PTR [edx-0xeee39a7]
  41efcd:	ins    DWORD PTR es:[edi],dx
  41efce:	or     edi,DWORD PTR [ebx]
  41efd0:	loope  0x41f015
  41efd2:	and    DWORD PTR [ecx+ecx*4-0x34f39592],edi
  41efd9:	pop    es
  41efda:	add    edi,DWORD PTR [ebx-0x87a22a0]
  41efe0:	xor    eax,0xb2b227fa
  41efe5:	ret    
  41efe6:	mov    ds:0xdda7cd07,eax
  41efeb:	dec    ecx
  41efec:	outs   dx,DWORD PTR ds:[esi]
  41efed:	loop   0x41f068
  41efef:	pusha  
  41eff0:	dec    edi
  41eff1:	and    ebp,DWORD PTR [ecx+0x54]
  41eff4:	mov    BYTE PTR [edx],bh
  41eff6:	cwde   
  41eff7:	fidivr DWORD PTR gs:[eax]
  41effa:	mov    esi,0xcfafbbe6
  41efff:	ds retf 0x4178
  41f003:	enter  0x694b,0x34
  41f007:	xchg   ecx,eax
  41f008:	jne    0x41f008
  41f00a:	dec    esp
  41f00b:	sub    al,0xf6
  41f00d:	mov    bl,0x51
  41f00f:	jmp    0x1a54b4d4
  41f014:	(bad)  
  41f015:	fadd   QWORD PTR [edx+0x67]
  41f018:	inc    ebp
  41f019:	nop
  41f01a:	popa   
  41f01b:	xlat   BYTE PTR ds:[ebx]
  41f01c:	mov    dl,0x87
  41f01e:	call   0x84272051
  41f023:	nop
  41f024:	call   0x133694d4
  41f029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f02a:	xchg   ecx,eax
  41f02b:	pop    es
  41f02c:	push   ebp
  41f02d:	into   
  41f02e:	jp     0x41f015
  41f030:	fstp   DWORD PTR [ebx+0x17f113eb]
  41f036:	mov    ds:0x5a3b8f5,al
  41f03b:	icebp  
  41f03c:	push   ecx
  41f03d:	or     DWORD PTR [eax],esi
  41f03f:	les    ecx,FWORD PTR [edx+0x7db8f7be]
  41f045:	inc    edx
  41f046:	dec    edx
  41f047:	adc    ebx,DWORD PTR [eax]
  41f049:	fadd   QWORD PTR [ebp+ebp*4+0x27]
  41f04d:	lock pop edi
  41f04f:	pop    ecx
  41f050:	mov    bl,bh
  41f052:	add    eax,0x141ed8d6
  41f057:	jp     0x41f06d
  41f059:	mov    cs,WORD PTR [ebx+0x76]
  41f05c:	pop    ecx
  41f05d:	outs   dx,BYTE PTR ds:[esi]
  41f05e:	pusha  
  41f05f:	jp     0x41effd
  41f061:	jmp    0xff9a442f
  41f066:	imul   edx,DWORD PTR [edi+0x79],0x6f
  41f06a:	addr16 inc ecx
  41f06c:	mov    esp,0xcd9caa7f
  41f071:	push   ebx
  41f072:	adc    eax,0x41cb2a0e
  41f077:	jno    0x41f0f8
  41f079:	outs   dx,BYTE PTR ds:[esi]
  41f07a:	jne    0x41f059
  41f07c:	or     bl,BYTE PTR [ecx-0x4d573e2d]
  41f082:	in     eax,0xaf
  41f084:	push   edx
  41f085:	pop    edx
  41f086:	inc    esi
  41f087:	xor    DWORD PTR ds:0x5fa69060,edi
  41f08d:	cmp    edx,DWORD PTR [esi+0x79]
  41f090:	jmp    0x823f0741
  41f095:	mov    bh,cl
  41f097:	ins    DWORD PTR es:[edi],dx
  41f098:	inc    esp
  41f099:	xchg   ecx,eax
  41f09a:	stc    
  41f09b:	and    DWORD PTR [edx+0xd],0x1c51f5b1
  41f0a2:	mov    esi,0x366ba238
  41f0a7:	jo     0x41f08a
  41f0a9:	(bad)
  41f0ac:	push   esi
  41f0ad:	in     eax,dx
  41f0ae:	fcmove st,st(5)
  41f0b0:	fcmovnbe st,st(4)
  41f0b2:	cs cs or eax,0xaba000cd
  41f0b9:	push   ecx
  41f0ba:	mov    ds,edi
  41f0bc:	jns    0x41f0e9
  41f0be:	jne    0x41f0ba
  41f0c0:	clc    
  41f0c1:	add    BYTE PTR [ebx],0x32
  41f0c4:	inc    ecx
  41f0c5:	or     eax,0xfe7119e7
  41f0ca:	imul   BYTE PTR [ebx-0x381f30bb]
  41f0d0:	push   eax
  41f0d1:	bt     DWORD PTR [edx+0x7e],ecx
  41f0d5:	jmp    0xee0f39b4
  41f0da:	(bad)  
  41f0db:	ror    BYTE PTR [esi+0x334c3797],1
  41f0e1:	pushf  
  41f0e2:	and    ecx,0xffffffc1
  41f0e5:	mov    dh,0x76
  41f0e7:	mov    ds:0x54cce16c,al
  41f0ec:	fmul   DWORD PTR [edx+0x5b]
  41f0ef:	push   esp
  41f0f0:	ret    
  41f0f1:	ds nop
  41f0f3:	imul   ebp,eax,0x64037d90
  41f0f9:	(bad)  
  41f0fa:	(bad)  
  41f0fb:	xchg   ecx,eax
  41f0fc:	mov    esp,0x71dc5e31
  41f101:	ins    DWORD PTR es:[edi],dx
  41f102:	icebp  
  41f103:	or     DWORD PTR [ecx],ecx
  41f105:	add    eax,0x594553fa
  41f10a:	xchg   esp,eax
  41f10b:	cmp    ecx,edi
  41f10d:	es inc ecx
  41f10f:	push   0xffffff90
  41f111:	dec    edx
  41f112:	xchg   ebx,eax
  41f113:	mov    ah,0xaa
  41f115:	add    eax,0x9e27e33a
  41f11a:	xor    al,0x85
  41f11c:	pop    ss
  41f11d:	mov    dl,0x4f
  41f11f:	pop    ebp
  41f120:	or     DWORD PTR [edi+0x2a],0x5ebbd044
  41f127:	aas    
  41f128:	push   esi
  41f129:	mov    WORD PTR [ebx-0x6c],?
  41f12c:	fnsave [eax-0x4d]
  41f12f:	lea    edi,[eax-0x28301507]
  41f135:	and    ch,dl
  41f137:	out    dx,al
  41f138:	hlt    
  41f139:	jle    0x41f0d8
  41f13b:	xor    dh,dl
  41f13d:	rcr    DWORD PTR [ebp+eax*4+0x73],0x25
  41f142:	or     bh,dh
  41f144:	push   ecx
  41f145:	xchg   ebx,eax
  41f146:	call   0x500a:0x24c178d6
  41f14d:	cs mov ch,0xde
  41f150:	arpl   WORD PTR [edi],cx
  41f152:	pop    ds
  41f153:	cmp    BYTE PTR [ecx+0x3d],bl
  41f156:	jg     0x41f0e3
  41f158:	arpl   WORD PTR [ecx+0x2f],ax
  41f15b:	sar    DWORD PTR [ecx],cl
  41f15d:	fs or  eax,0x84c23f0e
  41f163:	cmc    
  41f164:	jnp    0x41f12f
  41f166:	in     eax,0x12
  41f168:	retf   
  41f169:	repnz not DWORD PTR [ecx-0x12d6dbbf]
  41f170:	stc    
  41f171:	out    dx,al
  41f172:	sbb    ch,cl
  41f174:	shl    DWORD PTR ss:[edx+0x64eb78d6],cl
  41f17b:	mov    al,0xe3
  41f17d:	xchg   ecx,eax
  41f17e:	into   
  41f17f:	pop    edi
  41f180:	xchg   esi,eax
  41f181:	and    edx,DWORD PTR [esi+0x708f988b]
  41f187:	lahf   
  41f188:	repnz push es
  41f18a:	retf   
  41f18b:	mov    ch,0xed
  41f18d:	jae    0x41f120
  41f18f:	add    BYTE PTR [eax+ebp*4],bh
  41f192:	or     al,0xc4
  41f194:	loopne 0x41f182
  41f196:	xchg   ebx,eax
  41f197:	jl     0x41f14c
  41f199:	or     DWORD PTR [edx],esp
  41f19b:	adc    cl,BYTE PTR [edi-0x2f23f4bb]
  41f1a1:	aas    
  41f1a2:	xor    DWORD PTR [ecx-0x22],0xffffffed
  41f1a6:	inc    edx
  41f1a7:	cvtps2pd xmm3,QWORD PTR [ebp+0x39]
  41f1ab:	sbb    BYTE PTR [edi-0x32],bl
  41f1ae:	aad    0xf4
  41f1b0:	mov    bh,0xae
  41f1b2:	pusha  
  41f1b3:	jae    0x41f1ab
  41f1b5:	in     al,dx
  41f1b6:	fs mov dh,0xb2
  41f1b9:	int    0x79
  41f1bb:	ss repz aad 0x5e
  41f1bf:	xor    eax,0xda927e13
  41f1c4:	pop    ebp
  41f1c5:	pop    esp
  41f1c6:	inc    ebx
  41f1c7:	push   eax
  41f1c8:	or     eax,0xe85fd4bf
  41f1cd:	and    bh,0x5f
  41f1d0:	fmul   DWORD PTR [esi]
  41f1d2:	les    edx,FWORD PTR [eax]
  41f1d4:	in     al,0x71
  41f1d6:	adc    DWORD PTR [edi-0x190b1375],ebp
  41f1dc:	in     eax,0xf6
  41f1de:	mov    edx,DWORD PTR [esi+0xc]
  41f1e1:	xor    al,0xa9
  41f1e3:	mov    eax,0xdf09ac25
  41f1e8:	sbb    BYTE PTR [edi+0x3cf6fb7f],al
  41f1ee:	mov    ds,WORD PTR [ebx+edi*1-0x701c2e16]
  41f1f5:	fbld   TBYTE PTR [eax+eiz*2+0x3c]
  41f1f9:	pop    edx
  41f1fa:	inc    eax
  41f1fb:	mov    edi,edi
  41f1fd:	ror    BYTE PTR cs:[edx-0x6e],0x4b
  41f202:	cmp    eax,0x81ae7e55
  41f207:	(bad)  
  41f208:	sub    ebp,edx
  41f20a:	cmp    ah,ch
  41f20c:	xor    ecx,DWORD PTR [edx+ecx*8-0x320165ab]
  41f213:	fsub   st(3),st
  41f215:	aaa    
  41f216:	mov    eax,ds:0x4c499c52
  41f21b:	xor    eax,esp
  41f21d:	mov    ch,0xca
  41f21f:	in     eax,0xc1
  41f221:	sbb    esp,DWORD PTR [eax-0x8]
  41f224:	cs inc ebx
  41f226:	(bad)  
  41f227:	gs fs push 0x11d0ba23
  41f22e:	scas   al,BYTE PTR es:[edi]
  41f22f:	outs   dx,BYTE PTR ds:[esi]
  41f230:	test   BYTE PTR [ecx+0x65],dh
  41f233:	cli    
  41f234:	not    BYTE PTR [eax-0x15]
  41f237:	jmp    0xcbb2:0xfe140ec4
  41f23e:	ret    
  41f23f:	jnp    0x41f23d
  41f241:	jmp    0x6f52:0x2651021f
  41f248:	pop    ebx
  41f249:	in     eax,0x32
  41f24b:	enter  0xbe10,0xa5
  41f24f:	push   cs
  41f250:	pop    ebp
  41f251:	xor    BYTE PTR [ebx],dh
  41f253:	sete   BYTE PTR [eax+0x7e]
  41f257:	mov    ch,BYTE PTR [ebp+0x1b]
  41f25a:	stos   DWORD PTR es:[edi],eax
  41f25b:	xor    al,0x60
  41f25d:	pop    esi
  41f25e:	mov    WORD PTR [ebp+0x52],cs
  41f261:	dec    ecx
  41f262:	mov    cl,0xcc
  41f264:	xchg   BYTE PTR [ecx+edx*2-0x1a],al
  41f268:	dec    ecx
  41f269:	pop    esp
  41f26a:	cmp    eax,0x3f78a1e5
  41f26f:	push   ecx
  41f270:	cli    
  41f271:	push   ds
  41f272:	push   edi
  41f273:	cmp    BYTE PTR [ebp+0x3705a440],bh
  41f279:	cwde   
  41f27a:	sub    eax,0xe2c73bb5
  41f27f:	lods   eax,DWORD PTR ds:[esi]
  41f280:	call   0x914066d3
  41f285:	mov    BYTE PTR [eax+ecx*1-0x27198739],dh
  41f28c:	mov    ds:0x71d8d47b,al
  41f291:	lds    edi,FWORD PTR [ecx+ecx*1]
  41f294:	(bad)  
  41f295:	jbe    0x41f2a7
  41f297:	cs int 0xfb
  41f29a:	jnp    0x41f28b
  41f29c:	mov    eax,ds:0xa41ed590
  41f2a1:	icebp  
  41f2a2:	push   0x22
  41f2a4:	test   BYTE PTR [ebx],ch
  41f2a6:	sbb    al,0x7d
  41f2a8:	or     edi,DWORD PTR [edi]
  41f2aa:	in     al,0x7c
  41f2ac:	popf   
  41f2ad:	cwde   
  41f2ae:	push   ecx
  41f2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2b0:	or     eax,0x66b2b6d5
  41f2b5:	test   dl,0x41
  41f2b8:	mov    eax,ds:0x4197963a
  41f2bd:	mov    BYTE PTR ds:0x3e8ca41d,0xc
  41f2c4:	sub    DWORD PTR [esi+edi*1+0x199ea92],0x2c
  41f2cc:	mov    ch,0x2e
  41f2ce:	dec    edi
  41f2cf:	cmp    bl,dl
  41f2d1:	jmp    0x33695bcb
  41f2d6:	pop    es
  41f2d7:	mov    bh,0x2c
  41f2d9:	in     al,0x77
  41f2db:	jmp    0x2a48462c
  41f2e0:	sar    BYTE PTR [ecx],cl
  41f2e2:	fsubrp st(3),st
  41f2e4:	push   0xffffffc1
  41f2e6:	xchg   esi,eax
  41f2e7:	jmp    0x41f361
  41f2e9:	lds    ebp,FWORD PTR [edx+ebp*1]
  41f2ec:	mov    dh,0x9e
  41f2ee:	mov    esi,0xdd5de6b2
  41f2f3:	dec    ebp
  41f2f4:	xor    edi,ecx
  41f2f6:	xor    ebp,DWORD PTR [edi]
  41f2f8:	dec    eax
  41f2f9:	aaa    
  41f2fa:	mov    dh,0x29
  41f2fc:	sar    cl,cl
  41f2fe:	adc    BYTE PTR [edx],bl
  41f300:	ja     0x41f354
  41f302:	scas   eax,DWORD PTR es:[edi]
  41f303:	popa   
  41f304:	or     esp,ebp
  41f306:	xor    eax,0x80479d19
  41f30b:	out    dx,eax
  41f30c:	jg     0x41f317
  41f30e:	xchg   ebp,eax
  41f30f:	mov    edi,0x589ba5cd
  41f314:	mov    dh,0x9b
  41f316:	pop    ebx
  41f317:	call   0x8bfc:0x6006c962
  41f31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f31f:	xor    DWORD PTR [edx-0x1a],eax
  41f322:	inc    edi
  41f323:	leave  
  41f324:	sbb    al,0xa2
  41f326:	(bad)  
  41f327:	and    DWORD PTR fs:[ebx],edi
  41f32a:	adc    esp,esi
  41f32c:	(bad)
  41f32f:	dec    esp
  41f330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f331:	jo     0x41f373
  41f333:	fwait
  41f334:	jp     0x41f2cc
  41f336:	jp     0x41f39f
  41f338:	jne    0x41f2ea
  41f33a:	jmp    0xf49b:0x43845cb6
  41f341:	mov    dh,0x4f
  41f343:	inc    ebx
  41f344:	ins    BYTE PTR es:[edi],dx
  41f345:	fmul   st,st(7)
  41f347:	enter  0xf668,0xb3
  41f34b:	aaa    
  41f34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f34d:	pop    eax
  41f34e:	test   BYTE PTR [ecx+0x2b],bl
  41f351:	jo     0x289a26c5
  41f357:	xchg   edi,eax
  41f358:	inc    edx
  41f359:	pusha  
  41f35a:	adc    DWORD PTR [edx-0x46],edx
  41f35d:	adc    eax,0x32a715e3
  41f362:	sbb    edx,DWORD PTR [edx+0x4674036e]
  41f368:	sub    ax,di
  41f36b:	lods   eax,DWORD PTR ds:[esi]
  41f36c:	push   0xd3ec63f8
  41f371:	daa    
  41f372:	jno    0x41f372
  41f374:	fidivr WORD PTR [esi+ebx*1-0x62dedbeb]
  41f37b:	pusha  
  41f37c:	mov    ch,0x39
  41f37e:	add    BYTE PTR [edi],dl
  41f380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f381:	test   BYTE PTR [edx],cl
  41f383:	dec    edi
  41f384:	xchg   ebx,eax
  41f385:	int    0x5b
  41f387:	ror    dh,1
  41f389:	or     BYTE PTR [edx],bh
  41f38b:	dec    edx
  41f38c:	fstp   QWORD PTR [edx]
  41f38e:	xchg   edx,eax
  41f38f:	cmp    eax,0xc86d8464
  41f394:	mov    ch,0x89
  41f396:	dec    edx
  41f397:	xchg   esi,eax
  41f398:	data16 jp 0x41f3d0
  41f39b:	and    bh,BYTE PTR [eax+ecx*4]
  41f39e:	push   cs
  41f39f:	mov    ebx,0x7dd9a98b
  41f3a4:	and    eax,0xd476a699
  41f3a9:	(bad)  
  41f3aa:	(bad)  
  41f3ac:	or     al,0x99
  41f3ae:	icebp  
  41f3af:	pop    esp
  41f3b0:	xchg   ecx,eax
  41f3b1:	(bad)  
  41f3b2:	jle    0x41f3fc
  41f3b4:	add    DWORD PTR [ebp-0x2d],0xf8d7fa0b
  41f3bb:	outs   dx,DWORD PTR ds:[esi]
  41f3bc:	mov    BYTE PTR [ebp-0x44],bh
  41f3bf:	push   DWORD PTR [ebp+0x7aea373d]
  41f3c5:	cmp    DWORD PTR [edi+esi*1-0x755c5e10],esi
  41f3cc:	pop    ds
  41f3cd:	mov    dl,0xed
  41f3cf:	xor    bl,dh
  41f3d1:	mov    dl,0x0
  41f3d3:	mov    ebx,0xdedae79d
  41f3d8:	jmp    0xf2b1:0xe6a9dd9b
  41f3df:	fs mov edi,0xe6f60ab2
  41f3e5:	clc    
  41f3e6:	add    ecx,DWORD PTR [ebx]
  41f3e8:	out    0xa1,eax
  41f3ea:	cwde   
  41f3eb:	sbb    edx,edx
  41f3ed:	cmp    eax,edx
  41f3ef:	or     eax,edx
  41f3f1:	push   0x3f64e1dc
  41f3f6:	gs mov ebp,0x2b9860fe
  41f3fc:	ds cwde 
  41f3fe:	jecxz  0x41f470
  41f400:	adc    ebx,eax
  41f402:	call   0x141a:0x2f86db9
  41f409:	adc    BYTE PTR [edi+0x29],cl
  41f40c:	loopne 0x41f3c5
  41f40e:	(bad)  
  41f40f:	inc    ebp
  41f410:	enter  0xce7c,0xd0
  41f414:	xchg   edi,eax
  41f415:	shr    BYTE PTR [edi-0x487afccc],cl
  41f41b:	fs push ecx
  41f41d:	dec    edi
  41f41e:	jbe    0x41f3b4
  41f420:	inc    ecx
  41f421:	mov    ah,0xb1
  41f423:	xchg   ebx,eax
  41f424:	inc    ebx
  41f425:	push   edi
  41f426:	ins    BYTE PTR es:[edi],dx
  41f427:	(bad)  
  41f428:	mov    ecx,0x9436ee2c
  41f42d:	ja     0x41f3c2
  41f42f:	mov    bl,0x19
  41f431:	push   ebp
  41f432:	fdivp  st(7),st
  41f434:	push   esp
  41f435:	sub    al,0x23
  41f437:	xor    eax,0x7d612dd0
  41f43c:	push   ss
  41f43d:	cmp    ch,BYTE PTR [ebx-0x19]
  41f440:	mov    ds:0xb52418c,eax
  41f445:	inc    ebp
  41f446:	fcomp  QWORD PTR [esp+edi*2-0x5e113123]
  41f44d:	pop    edi
  41f44e:	fcomp  DWORD PTR [ebp+0x305fb7c3]
  41f454:	call   0xf2e2:0xc57eaace
  41f45b:	test   al,0x13
  41f45d:	xchg   edi,eax
  41f45e:	push   ds
  41f45f:	add    al,0x14
  41f461:	repz xor ebp,ebp
  41f464:	pop    ecx
  41f465:	lods   al,BYTE PTR ds:[esi]
  41f466:	fwait
  41f467:	rol    DWORD PTR [esi-0x102068db],1
  41f46d:	mov    ebx,ebp
  41f46f:	ret    
  41f470:	test   al,0xd7
  41f472:	dec    esi
  41f473:	call   0xd750978f
  41f478:	pop    ebx
  41f479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f47a:	mov    dh,0x4c
  41f47c:	sub    DWORD PTR [ecx-0x43f2f9d1],esp
  41f482:	pushf  
  41f483:	out    dx,eax
  41f484:	outs   dx,DWORD PTR ds:[esi]
  41f485:	mov    eax,0x3a4d11e6
  41f48a:	sbb    BYTE PTR [edx+0x58],dh
  41f48d:	pop    ecx
  41f48e:	cmp    al,0x59
  41f490:	fiadd  WORD PTR [ebp-0x7c]
  41f493:	mov    esp,0x32ed01d1
  41f498:	loop   0x41f43d
  41f49a:	nop
  41f49b:	inc    edx
  41f49c:	pop    ebx
  41f49d:	pop    edx
  41f49e:	fwait
  41f49f:	cwde   
  41f4a0:	xchg   ebx,eax
  41f4a1:	je     0x41f49a
  41f4a3:	inc    edx
  41f4a4:	pop    ds
  41f4a5:	pop    ecx
  41f4a6:	popf   
  41f4a7:	jg     0x41f51b
  41f4a9:	and    al,0xb7
  41f4ab:	sub    ebx,DWORD PTR [ebx+0x6b163a5b]
  41f4b1:	(bad)  
  41f4b2:	into   
  41f4b3:	aaa    
  41f4b4:	and    al,0x13
  41f4b6:	outs   dx,DWORD PTR ds:[esi]
  41f4b7:	cmp    eax,0xa72c0e12
  41f4bc:	sub    esi,DWORD PTR [ecx]
  41f4be:	sbb    al,0xb7
  41f4c0:	mov    ebx,0x6f375a23
  41f4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4c6:	enter  0x75a8,0xaa
  41f4ca:	je     0x41f4e7
  41f4cc:	int    0x9d
  41f4ce:	fistp  WORD PTR [edi+0x30]
  41f4d1:	mov    DWORD PTR [edi],esi
  41f4d3:	add    edi,DWORD PTR [eax-0x39]
  41f4d6:	int    0x39
  41f4d8:	retf   0x5f85
  41f4db:	jp     0x41f527
  41f4dd:	(bad)  
  41f4de:	adc    esp,ebp
  41f4e0:	sub    bh,BYTE PTR [edx-0x34]
  41f4e3:	stos   BYTE PTR es:[edi],al
  41f4e4:	lods   al,BYTE PTR ds:[esi]
  41f4e5:	iret   
  41f4e6:	out    0x7b,eax
  41f4e8:	scas   eax,DWORD PTR es:[edi]
  41f4e9:	sub    DWORD PTR [ecx+0x9],ebp
  41f4ec:	adc    BYTE PTR es:[edi-0xe],bl
  41f4f0:	xor    edx,DWORD PTR [eax+edx*2+0x43]
  41f4f4:	fcomi  st,st(7)
  41f4f6:	test   al,0x5f
  41f4f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f9:	fadd   QWORD PTR [edi]
  41f4fb:	push   ecx
  41f4fc:	push   es
  41f4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4fe:	push   ss
  41f4ff:	cmp    eax,0x8604e91a
  41f504:	push   es
  41f505:	add    al,BYTE PTR [edx+0x5b]
  41f508:	clc    
  41f509:	(bad)  
  41f50a:	int3   
  41f50b:	inc    edx
  41f50c:	iret   
  41f50d:	add    al,0x5f
  41f50f:	call   0x7724a57
  41f514:	nop
  41f515:	push   0x21
  41f517:	stc    
  41f518:	loopne 0x41f524
  41f51a:	jg     0x41f509
  41f51c:	and    BYTE PTR [edx-0x23775889],ch
  41f522:	pop    es
  41f523:	xlat   BYTE PTR ds:[ebx]
  41f524:	cmp    BYTE PTR [esi],bl
  41f526:	xor    bl,BYTE PTR [ebx+eax*1+0x146b453f]
  41f52d:	xor    DWORD PTR [esi],esp
  41f52f:	push   ecx
  41f530:	ins    DWORD PTR es:[edi],dx
  41f531:	es clc 
  41f533:	dec    eax
  41f534:	fcom   QWORD PTR es:[ecx+0x57cd7d15]
  41f53b:	out    0x50,eax
  41f53d:	xor    ch,BYTE PTR [eax-0x30ca2f8a]
  41f543:	xchg   esp,eax
  41f544:	dec    eax
  41f545:	push   cs
  41f546:	(bad)
  41f54a:	sub    ebx,DWORD PTR [ecx+esi*8+0x7f]
  41f54e:	and    BYTE PTR [eax],ah
  41f550:	add    ebx,DWORD PTR [eax+0x2640df59]
  41f556:	fwait
  41f557:	mov    cl,0xa1
  41f559:	dec    dl
  41f55b:	adc    eax,0x8c857e30
  41f560:	enter  0xdc4c,0xa1
  41f564:	iret   
  41f565:	enter  0x7ca5,0x23
  41f569:	mov    bh,0xee
  41f56b:	jb     0x41f4f4
  41f56d:	test   BYTE PTR [ecx+ebx*1+0x50],0xf2
  41f572:	(bad)  
  41f573:	xchg   esp,eax
  41f574:	xchg   ebp,eax
  41f575:	(bad)  
  41f576:	cld    
  41f577:	(bad)  
  41f578:	mov    edi,0xc44fffbe
  41f57d:	je     0x41f5f1
  41f57f:	sbb    al,0xa9
  41f581:	or     ah,dh
  41f583:	jecxz  0x41f5ec
  41f585:	and    bh,BYTE PTR [ebp+0xf35ee19]
  41f58b:	(bad)
  41f58f:	dec    ebp
  41f590:	imul   ecx,ebx,0x19
  41f593:	adc    edi,0xfffffffb
  41f596:	pop    ebp
  41f597:	cmc    
  41f598:	jo     0x41f572
  41f59a:	xchg   ebp,eax
  41f59b:	sub    al,0xd5
  41f59d:	adc    eax,0x257e4f43
  41f5a2:	xchg   edx,eax
  41f5a3:	adc    ebx,DWORD PTR [ebx+ebp*2+0x46]
  41f5a7:	test   BYTE PTR [ecx+0x1f],0x88
  41f5ab:	rcl    BYTE PTR [ebx-0x4a],cl
  41f5ae:	push   eax
  41f5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b0:	jmp    0xfaeb:0x98f23319
  41f5b7:	adc    al,0x4f
  41f5b9:	into   
  41f5ba:	mov    dl,0xee
  41f5bc:	mov    esi,0xecf94616
  41f5c1:	dec    esp
  41f5c2:	mov    edi,DWORD PTR [edx-0x170e0015]
  41f5c8:	aad    0xf3
  41f5ca:	jmp    0xca4de94a
  41f5cf:	inc    ebx
  41f5d0:	mov    cl,bl
  41f5d2:	jne    0x41f5ac
  41f5d4:	add    ebx,edi
  41f5d6:	mov    esi,ecx
  41f5d8:	fidiv  WORD PTR [ecx-0x6f]
  41f5db:	dec    ebx
  41f5dc:	cmp    ebx,0xafb8c7b4
  41f5e2:	stos   BYTE PTR es:[edi],al
  41f5e3:	sbb    eax,0x72686e54
  41f5e8:	arpl   bp,si
  41f5ea:	lea    edx,[ebp-0x643fd98c]
  41f5f0:	mov    ch,0x57
  41f5f2:	jbe    0x41f661
  41f5f4:	sahf   
  41f5f5:	add    edi,0x6e
  41f5f8:	push   0x39
  41f5fa:	pop    ecx
  41f5fb:	loopne 0x41f5e1
  41f5fd:	and    DWORD PTR [edi+0x6f8f12ad],0x1d1f54b9
  41f607:	add    ebp,DWORD PTR [eax]
  41f609:	fwait
  41f60a:	xchg   esp,eax
  41f60b:	xor    BYTE PTR [eax],ah
  41f60d:	es jns 0x41f686
  41f610:	scas   eax,DWORD PTR es:[edi]
  41f611:	xor    DWORD PTR [esi],ebp
  41f613:	dec    esi
  41f614:	shl    BYTE PTR [esi-0x71],1
  41f617:	loopne 0x41f608
  41f619:	dec    edi
  41f61a:	jmp    0x41f684
  41f61c:	add    esp,DWORD PTR [edi]
  41f61e:	(bad)  
  41f620:	cmp    eax,0xea5795ba
  41f625:	mov    edx,0xb76f45e8
  41f62a:	sti    
  41f62b:	loop   0x41f681
  41f62d:	aam    0x3c
  41f62f:	dec    esi
  41f630:	dec    esp
  41f631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f632:	jnp    0x41f5ec
  41f634:	es in  eax,0x70
  41f637:	retf   0x3b8b
  41f63a:	in     eax,0x3a
  41f63c:	or     BYTE PTR [ebp*1-0x4cfcff66],al
  41f643:	daa    
  41f644:	lods   eax,DWORD PTR ds:[esi]
  41f645:	pop    es
  41f646:	int3   
  41f647:	jno    0x41f624
  41f649:	in     eax,0x73
  41f64b:	dec    esp
  41f64c:	or     ah,dh
  41f64e:	aas    
  41f64f:	(bad)  
  41f650:	retf   
  41f651:	call   0x59e0:0x66039dab
  41f658:	add    DWORD PTR [edx],ebp
  41f65a:	repnz dec eax
  41f65c:	mov    ch,0x73
  41f65e:	pop    edi
  41f65f:	cmp    al,dl
  41f661:	adc    edi,DWORD PTR [esi+0x64fcaa06]
  41f667:	jb     0x41f6b3
  41f669:	lods   eax,DWORD PTR ds:[esi]
  41f66a:	call   0x1513:0x5936e431
  41f671:	fbstp  TBYTE PTR [edx-0x73ee43b0]
  41f677:	jnp    0x41f64d
  41f679:	sti    
  41f67a:	and    eax,0x2a2c4dfd
  41f67f:	lahf   
  41f680:	lahf   
  41f681:	aaa    
  41f682:	int    0xf9
  41f684:	imul   esi,DWORD PTR [edi],0x36e9c252
  41f68a:	aam    0xec
  41f68c:	xchg   edx,eax
  41f68d:	loope  0x41f6a2
  41f68f:	inc    esp
  41f690:	xor    ebp,DWORD PTR [edi+0x29]
  41f693:	dec    edi
  41f694:	and    BYTE PTR [edx],ch
  41f696:	outs   dx,DWORD PTR ds:[esi]
  41f697:	retf   0xe9c8
  41f69a:	jecxz  0x41f6d8
  41f69c:	jg     0x41f6b2
  41f69e:	leave  
  41f69f:	inc    ebx
  41f6a0:	test   BYTE PTR [edi+0xd],0x98
  41f6a4:	cdq    
  41f6a5:	push   0x71
  41f6a7:	or     eax,DWORD PTR [edx-0x5d]
  41f6aa:	push   0xa8875f00
  41f6af:	xor    eax,0x212b1dff
  41f6b4:	xor    al,0x5a
  41f6b6:	sub    edi,ecx
  41f6b8:	cmp    esi,DWORD PTR [edx+edi*1]
  41f6bb:	xchg   ebx,eax
  41f6bc:	xchg   edi,eax
  41f6bd:	cdq    
  41f6be:	inc    ecx
  41f6bf:	dec    ebp
  41f6c0:	ins    DWORD PTR es:[edi],dx
  41f6c1:	call   0x6d56:0x1c0f59a1
  41f6c8:	pop    esp
  41f6c9:	dec    edi
  41f6ca:	adc    BYTE PTR [ebx],ah
  41f6cc:	repz adc BYTE PTR [edx+0x6a],0xd
  41f6d1:	ja     0x41f742
  41f6d3:	xchg   BYTE PTR [ecx],dh
  41f6d5:	call   0x2f2eda85
  41f6da:	repnz pop ds
  41f6dc:	pop    ecx
  41f6dd:	sbb    esp,DWORD PTR ds:0xdf9b6a8d
  41f6e3:	jg     0x41f666
  41f6e5:	sbb    ecx,DWORD PTR [ecx-0x5c]
  41f6e8:	jmp    0x3c9eae6a
  41f6ed:	cmp    bh,BYTE PTR [edx+ecx*1-0x155b64c7]
  41f6f4:	ja     0x41f758
  41f6f6:	lds    esi,FWORD PTR [edi]
  41f6f8:	dec    ebx
  41f6f9:	adc    DWORD PTR [ebx],eax
  41f6fb:	sbb    eax,0x473bd207
  41f700:	xchg   ebp,eax
  41f701:	mov    ds:0xb1f94d84,al
  41f706:	fadd   QWORD PTR [ebx-0x43]
  41f709:	shr    DWORD PTR [ebx+0x61],cl
  41f70c:	je     0x41f71d
  41f70e:	jbe    0x41f6c1
  41f710:	cmp    eax,ebx
  41f712:	(bad)
  41f716:	jmp    0xbedb:0xb21a0824
  41f71d:	test   al,0xdc
  41f71f:	push   ebx
  41f720:	jmp    0x7600:0x56137e3e
  41f727:	popa   
  41f728:	mov    ds:0x76c24d08,al
  41f72d:	cmc    
  41f72e:	scas   al,BYTE PTR es:[edi]
  41f72f:	pop    eax
  41f730:	shl    DWORD PTR [edx-0x60],1
  41f733:	test   DWORD PTR ds:0xc9c5927d,esi
  41f739:	jmp    0xaf64:0x14847d48
  41f740:	jg     0x41f7b0
  41f742:	adc    al,0xc7
  41f744:	jb     0x41f6e7
  41f746:	jb     0x41f705
  41f748:	cmp    ecx,DWORD PTR [edx+0x4f]
  41f74b:	xor    BYTE PTR [esi+0x39],0x1a
  41f74f:	xchg   edx,eax
  41f750:	ins    BYTE PTR es:[edi],dx
  41f751:	dec    esi
  41f752:	shl    BYTE PTR [ebp-0x79e68d20],cl
  41f758:	clc    
  41f759:	cmc    
  41f75a:	loope  0x41f702
  41f75c:	repz lds eax,FWORD PTR [edx-0x7588ed9]
  41f763:	mov    edx,0x8a200d7b
  41f768:	jg     0x41f6ee
  41f76a:	xchg   BYTE PTR ss:[edi],bl
  41f76d:	pop    esi
  41f76e:	sub    ch,bh
  41f770:	mov    ebp,0xdfa15d3f
  41f775:	push   ds
  41f776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f777:	shr    edx,0x7f
  41f77a:	clc    
  41f77b:	mov    DWORD PTR [ecx-0x586818f],esp
  41f781:	lds    ebp,FWORD PTR [eax]
  41f783:	in     eax,dx
  41f784:	xchg   ebx,eax
  41f785:	mov    edi,DWORD PTR ds:[ebp+0x65e16ce4]
  41f78c:	outs   dx,BYTE PTR ds:[esi]
  41f78d:	rcl    ch,cl
  41f78f:	mov    al,0xf1
  41f791:	push   cs
  41f792:	ja     0x41f723
  41f794:	add    al,0x72
  41f796:	arpl   WORD PTR [ecx-0x496328c6],cx
  41f79c:	jl     0x41f79f
  41f79e:	fs ins BYTE PTR es:[edi],dx
  41f7a0:	cmp    DWORD PTR [ebx],esi
  41f7a2:	fstp   TBYTE PTR [edx-0x51]
  41f7a5:	nop
  41f7a6:	mov    DWORD PTR [eax-0x2a2e20a8],eax
  41f7ac:	cmp    dh,ah
  41f7ae:	outs   dx,DWORD PTR ds:[esi]
  41f7af:	je     0x41f830
  41f7b1:	aas    
  41f7b2:	loope  0x41f79a
  41f7b4:	scas   eax,DWORD PTR es:[edi]
  41f7b5:	mov    bl,BYTE PTR [esi+eax*4-0x1a]
  41f7b9:	ror    BYTE PTR [edx-0x9],cl
  41f7bc:	cdq    
  41f7bd:	aad    0x6d
  41f7bf:	sub    eax,DWORD PTR [eax+0x54]
  41f7c2:	ins    BYTE PTR es:[edi],dx
  41f7c3:	je     0x41f7d5
  41f7c5:	je     0x41f791
  41f7c7:	arpl   WORD PTR [eax],sp
  41f7c9:	pop    esi
  41f7ca:	jne    0x41f7b0
  41f7cc:	push   0x5e
  41f7ce:	(bad)  
  41f7d0:	adc    DWORD PTR [ecx],eax
  41f7d2:	cmp    al,0x33
  41f7d4:	loope  0x41f7a7
  41f7d6:	ficomp WORD PTR [ebx+eiz*1]
  41f7d9:	sbb    edx,DWORD PTR [ecx+0x6d]
  41f7dc:	fstp   TBYTE PTR [ecx+ebp*2+0x7eb7c8b0]
  41f7e3:	mov    eax,ds:0xe5695e6d
  41f7e8:	in     al,0x64
  41f7ea:	sar    DWORD PTR [ebx-0x7350ce6a],cl
  41f7f0:	mov    al,0x43
  41f7f2:	shl    BYTE PTR [ebx-0x4a],1
  41f7f5:	call   DWORD PTR [edx+0x42]
  41f7f8:	add    edx,esp
  41f7fa:	cmp    BYTE PTR ds:0x14061909,ah
  41f800:	out    0x62,al
  41f802:	adc    al,0xcb
  41f804:	(bad)  
  41f806:	and    eax,0x5e576193
  41f80b:	repnz pusha 
  41f80d:	test   DWORD PTR [esi],ecx
  41f80f:	xor    eax,0xe19b4f03
  41f814:	jecxz  0x41f80d
  41f816:	call   0x1496:0xe435a56f
  41f81d:	push   cs
  41f81e:	int    0x78
  41f820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f821:	popa   
  41f822:	outs   dx,DWORD PTR ds:[esi]
  41f823:	xor    esp,0xffffffbb
  41f826:	fnstsw WORD PTR [edx-0xd]
  41f829:	xor    al,0x3c
  41f82b:	je     0x41f7ec
  41f82d:	mov    bh,0x32
  41f82f:	pop    ebx
  41f830:	sub    ecx,DWORD PTR [eax]
  41f832:	or     al,0xb3
  41f834:	je     0x41f822
  41f836:	inc    ebx
  41f837:	push   cs
  41f838:	leave  
  41f839:	outs   dx,DWORD PTR ds:[esi]
  41f83a:	add    eax,DWORD PTR es:[esi-0x26f86d6c]
  41f841:	inc    ecx
  41f842:	mov    BYTE PTR [bx+di],bh
  41f845:	outs   dx,DWORD PTR ds:[esi]
  41f846:	dec    esi
  41f847:	not    ch
  41f849:	adc    al,0xde
  41f84b:	push   cs
  41f84c:	test   BYTE PTR [ebp-0x78],0x16
  41f850:	sub    cl,al
  41f852:	cmp    al,0xe3
  41f854:	xchg   esp,eax
  41f855:	les    eax,FWORD PTR [edi]
  41f857:	sub    al,0x93
  41f859:	mov    dh,0x5c
  41f85b:	sub    eax,0xd1174547
  41f860:	inc    ecx
  41f861:	xchg   esi,eax
  41f862:	test   DWORD PTR [edx+ebp*8],ecx
  41f865:	aam    0xb7
  41f867:	mov    WORD PTR [eax],fs
  41f869:	jmp    0x210c:0x8c43d332
  41f870:	arpl   bp,dx
  41f872:	mov    ch,0x70
  41f874:	and    DWORD PTR [ebp-0x4f],esi
  41f877:	inc    ebx
  41f878:	or     cl,0x40
  41f87b:	mov    eax,0x44ec1306
  41f880:	std    
  41f881:	stos   DWORD PTR es:[edi],eax
  41f882:	or     edi,edi
  41f884:	repnz mov DWORD PTR [ecx],edi
  41f887:	cmp    bh,BYTE PTR [ebx-0x13]
  41f88a:	cdq    
  41f88b:	mov    ecx,0x54df7309
  41f890:	jmp    0x41f8f3
  41f892:	inc    esp
  41f893:	jle    0x41f8a4
  41f895:	int    0x79
  41f897:	into   
  41f898:	push   edi
  41f899:	in     al,0xa8
  41f89b:	inc    ecx
  41f89c:	push   ebp
  41f89d:	std    
  41f89e:	retf   
  41f89f:	imul   esi,DWORD PTR [ecx],0x3ec4a9b5
  41f8a5:	retf   0xe7df
  41f8a8:	xchg   esp,eax
  41f8a9:	push   esi
  41f8aa:	lock add al,0x16
  41f8ad:	cld    
  41f8ae:	scas   eax,DWORD PTR es:[edi]
  41f8af:	push   es
  41f8b0:	test   DWORD PTR [ebp+ecx*2+0x25],edi
  41f8b4:	and    ecx,DWORD PTR [ecx-0x731db9]
  41f8ba:	in     eax,0x31
  41f8bc:	push   es
  41f8bd:	mov    WORD PTR [ebp-0x8090da1],es
  41f8c3:	push   es
  41f8c4:	cmp    eax,0x8ab5e794
  41f8c9:	xor    edx,DWORD PTR [eax-0x9]
  41f8cc:	loope  0x41f947
  41f8ce:	scas   al,BYTE PTR es:[edi]
  41f8cf:	cld    
  41f8d0:	es repz mov ebp,0x5ebe30e0
  41f8d7:	out    0xca,al
  41f8d9:	popa   
  41f8da:	lods   eax,DWORD PTR ds:[esi]
  41f8db:	jb     0x41f952
  41f8dd:	and    al,0x56
  41f8df:	cmp    DWORD PTR [ebp+edi*1+0x2fd804d0],edx
  41f8e6:	add    dh,BYTE PTR [ebx+0x6a]
  41f8e9:	xchg   BYTE PTR ds:0x80f5fd38,ah
  41f8ef:	adc    ah,dl
  41f8f1:	mov    bh,0xf
  41f8f3:	dec    eax
  41f8f4:	test   DWORD PTR [ebx-0x78],0xb8c9d7ec
  41f8fb:	pushf  
  41f8fc:	(bad)  
  41f8fd:	scas   al,BYTE PTR es:[edi]
  41f8fe:	jno    0x41f93e
  41f900:	xlat   BYTE PTR ds:[ebx]
  41f901:	lds    ecx,FWORD PTR [edx]
  41f903:	fcom   QWORD PTR [ebx-0x16]
  41f906:	(bad)  
  41f907:	cwde   
  41f908:	sar    BYTE PTR [ebp-0x39],0x23
  41f90c:	inc    eax
  41f90d:	gs (bad) 
  41f90f:	mov    al,ds:0x980ea455
  41f914:	sub    edi,DWORD PTR [edi]
  41f916:	push   ebp
  41f917:	push   esp
  41f918:	xor    DWORD PTR [eax],edx
  41f91a:	in     eax,0xef
  41f91c:	pop    ds
  41f91d:	xor    ebx,ebp
  41f91f:	daa    
  41f920:	lahf   
  41f921:	mov    ch,0x38
  41f923:	sar    BYTE PTR [esi+0x38],1
  41f926:	adc    bh,BYTE PTR [eax]
  41f928:	stos   BYTE PTR es:[edi],al
  41f929:	outs   dx,BYTE PTR ds:[esi]
  41f92a:	call   0x20f2:0x1d598c05
  41f931:	rol    BYTE PTR [edx+0xb6af1e4],1
  41f937:	repz push 0x2e
  41f93a:	shl    BYTE PTR [eax+0x4dfa2376],0xb2
  41f941:	pop    ecx
  41f942:	pop    edi
  41f943:	xchg   ebx,eax
  41f944:	cmp    ch,BYTE PTR [ebx+0x2d]
  41f947:	imul   esi,edx,0xffffffa2
  41f94a:	jl     0x41f999
  41f94c:	leave  
  41f94d:	or     DWORD PTR [ebx+0x6dd2dd48],0x769f0dc8
  41f957:	xchg   DWORD PTR [edi+0x53],eax
  41f95a:	add    BYTE PTR [ecx],bh
  41f95c:	(bad)  
  41f95d:	or     ax,0xb1eb
  41f961:	push   0x7f
  41f963:	xor    eax,0x8f6b9786
  41f968:	inc    esi
  41f969:	dec    ebx
  41f96a:	out    dx,al
  41f96b:	mov    cl,BYTE PTR [eax]
  41f96d:	shl    BYTE PTR [esp+ebx*8-0x18025842],1
  41f974:	xor    BYTE PTR [edi+0x5e],al
  41f977:	push   es
  41f978:	jmp    0xba10:0x1bf4b860
  41f97f:	sub    al,0x78
  41f981:	jno    0x41f98f
  41f983:	jns    0x41f95c
  41f985:	jno    0x41f978
  41f987:	jnp    0x41f9df
  41f989:	call   0x6deb85c4
  41f98e:	pop    edi
  41f98f:	push   cs
  41f990:	push   edx
  41f991:	call   0xc15a:0x7d489db1
  41f998:	out    dx,al
  41f999:	sar    esp,cl
  41f99b:	(bad)  
  41f99c:	inc    ecx
  41f99d:	mov    dh,BYTE PTR [esi]
  41f99f:	push   edi
  41f9a0:	ret    0xc772
  41f9a3:	mov    cl,0xad
  41f9a5:	jp     0x41f92a
  41f9a7:	push   esi
  41f9a8:	mov    BYTE PTR [ecx+ebp*8],bh
  41f9ab:	aaa    
  41f9ac:	out    0x4b,al
  41f9ae:	add    eax,0x15d5eb3e
  41f9b3:	xchg   DWORD PTR [ebp+0x1471f18f],eax
  41f9b9:	mov    ds:0x5b41292b,al
  41f9be:	loopne 0x41f976
  41f9c0:	shl    BYTE PTR [ecx],1
  41f9c2:	out    dx,eax
  41f9c3:	test   al,0xb0
  41f9c5:	sub    BYTE PTR [edx],al
  41f9c7:	dec    eax
  41f9c8:	xor    ecx,edx
  41f9ca:	cmp    DWORD PTR [eax],ebp
  41f9cc:	mov    BYTE PTR [ecx+0x1da473f8],dh
  41f9d2:	bound  ecx,QWORD PTR [edx]
  41f9d4:	sets   BYTE PTR [eax]
  41f9d7:	out    0x75,al
  41f9d9:	cmp    al,0x4a
  41f9db:	mov    esp,0x34d0295c
  41f9e0:	mov    dl,0x6d
  41f9e2:	push   cs
  41f9e3:	enter  0xe54c,0x76
  41f9e7:	pop    ecx
  41f9e8:	icebp  
  41f9e9:	nop
  41f9ea:	stos   BYTE PTR es:[edi],al
  41f9eb:	xchg   DWORD PTR [edx],ebx
  41f9ed:	and    al,0x1f
  41f9ef:	lahf   
  41f9f0:	fdivr  QWORD PTR [eax]
  41f9f2:	cli    
  41f9f3:	and    eax,0x4468488f
  41f9f8:	inc    esp
  41f9f9:	scas   eax,DWORD PTR es:[edi]
  41f9fa:	xor    al,0xef
  41f9fc:	pop    esi
  41f9fd:	lock retf 
  41f9ff:	or     DWORD PTR [ebp+ebp*8+0x75f1c85e],ecx
  41fa06:	and    eax,DWORD PTR [edi+0x3b]
  41fa09:	push   esp
  41fa0a:	aas    
  41fa0b:	jmp    0xf49a:0xf145fd44
  41fa12:	sar    DWORD PTR [ebp+0x43],cl
  41fa15:	inc    esi
  41fa16:	add    BYTE PTR [edx],0x71
  41fa19:	outs   dx,DWORD PTR ds:[esi]
  41fa1a:	push   0xffffff8b
  41fa1c:	cmc    
  41fa1d:	mov    ecx,0xa90c12b8
  41fa22:	jp     0x41fa0e
  41fa24:	dec    ebx
  41fa25:	clc    
  41fa26:	sbb    esp,edi
  41fa28:	cmp    DWORD PTR [esi],ecx
  41fa2a:	sbb    dl,BYTE PTR [ebx-0x15]
  41fa2d:	test   al,0x98
  41fa2f:	icebp  
  41fa30:	jae    0x41fa79
  41fa32:	stos   BYTE PTR es:[edi],al
  41fa33:	add    DWORD PTR [ebp+ebx*4-0x7e],ebx
  41fa37:	mov    ah,0x87
  41fa39:	loopne 0x41fa80
  41fa3b:	fwait
  41fa3c:	in     eax,dx
  41fa3d:	mov    al,ds:0xa68405d6
  41fa42:	arpl   WORD PTR [edx+0x4d],cx
  41fa45:	stc    
  41fa46:	cld    
  41fa47:	mov    bl,BYTE PTR [edi-0x5eabc02e]
  41fa4d:	add    ebx,DWORD PTR [eax]
  41fa4f:	sbb    eax,0x313c05c2
  41fa54:	iret   
  41fa55:	ss ja  0x41f9f8
  41fa58:	rcr    bl,0x6
  41fa5b:	(bad)  
  41fa5c:	in     al,dx
  41fa5d:	fldcw  WORD PTR [edi+ebx*8-0x376981af]
  41fa64:	out    0xed,al
  41fa66:	push   edx
  41fa67:	sbb    cl,al
  41fa69:	mov    ebx,0xc4fa5ab
  41fa6e:	ret    
  41fa6f:	cdq    
  41fa70:	mov    DWORD PTR [esi-0x4b],esp
  41fa73:	dec    ebx
  41fa74:	aad    0xd2
  41fa76:	ss fs push ss
  41fa79:	sub    DWORD PTR [ebp-0x69509d8],0x6c6566a1
  41fa83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa84:	jno    0x41fa5c
  41fa86:	div    BYTE PTR [esi+eax*8-0x29]
  41fa8a:	push   eax
  41fa8b:	dec    edx
  41fa8c:	dec    eax
  41fa8d:	icebp  
  41fa8e:	repnz sbb DWORD PTR [esi+0x3b],edx
  41fa92:	jle    0x41fae3
  41fa94:	mov    esp,0x59e96b7c
  41fa99:	xchg   edi,eax
  41fa9a:	pop    es
  41fa9b:	add    esp,edx
  41fa9d:	sub    cl,BYTE PTR [ebx+0x52261ca]
  41faa3:	mov    al,0x92
  41faa5:	pop    ss
  41faa6:	out    0xbb,al
  41faa8:	add    sp,WORD PTR fs:[ecx]
  41faac:	adc    esi,DWORD PTR [edi-0x34]
  41faaf:	push   es
  41fab0:	push   es
  41fab1:	or     eax,0xa1834e0b
  41fab6:	je     0x41faa8
  41fab8:	mov    ds:0xdd735ce0,eax
  41fabd:	lods   al,BYTE PTR ds:[esi]
  41fabe:	cmc    
  41fabf:	stos   DWORD PTR es:[edi],eax
  41fac0:	jge    0x41fb0a
  41fac2:	jle    0x41fb2a
  41fac4:	nop
  41fac5:	or     al,0x9e
  41fac7:	inc    dx
  41fac9:	test   eax,0x7ad55522
  41face:	rcr    DWORD PTR [edx+edx*8-0x62],0x44
  41fad3:	fist   DWORD PTR [edx+0x68]
  41fad6:	jno    0x41fafe
  41fad8:	adc    edx,ecx
  41fada:	lods   al,BYTE PTR ds:[esi]
  41fadb:	sbb    eax,0xaaf860a1
  41fae0:	inc    ebp
  41fae1:	repz or eax,DWORD PTR [edi+0x4227805]
  41fae8:	add    esi,DWORD PTR [edx]
  41faea:	cdq    
  41faeb:	mov    cl,BYTE PTR [ebp+0x3851e159]
  41faf1:	mov    bl,BYTE PTR [esi+edi*2-0x38]
  41faf5:	les    edi,FWORD PTR [ebx+edx*1]
  41faf8:	xor    BYTE PTR [ebx+0x2],ch
  41fafb:	test   eax,0x5df8c584
  41fb00:	pop    edx
  41fb01:	jno    0x41fb0b
  41fb03:	fisub  WORD PTR [eax-0x6e]
  41fb06:	ja     0x41fb62
  41fb08:	xor    bl,dl
  41fb0a:	repz push ebp
  41fb0c:	dec    edx
  41fb0d:	jb     0x41faa8
  41fb0f:	leave  
  41fb10:	xchg   DWORD PTR [esi+0x33],esp
  41fb13:	test   bl,dl
  41fb15:	outs   dx,BYTE PTR ds:[esi]
  41fb16:	push   ebx
  41fb17:	sub    eax,0xbe97f4fb
  41fb1c:	push   cs
  41fb1d:	(bad)  
  41fb1e:	pop    ds
  41fb1f:	sub    al,0x26
  41fb21:	sub    esp,DWORD PTR [ecx]
  41fb23:	pop    ebx
  41fb24:	call   0x18d652ac
  41fb29:	inc    ebp
  41fb2a:	test   BYTE PTR [ebp+0xca14eda],al
  41fb30:	lea    eax,[edx+edi*4-0x129e5bc7]
  41fb37:	(bad)  
  41fb39:	in     eax,0x5f
  41fb3b:	ror    esi,0x84
  41fb3e:	popf   
  41fb3f:	fisubr WORD PTR [edi]
  41fb41:	inc    eax
  41fb42:	jns    0x41fba0
  41fb44:	addr16 cmp al,0xd4
  41fb47:	dec    edi
  41fb48:	ja     0x41fb87
  41fb4a:	pusha  
  41fb4b:	adc    DWORD PTR [ebx-0x73],eax
  41fb4e:	out    dx,eax
  41fb4f:	jle    0x41fb31
  41fb51:	xor    al,0xd0
  41fb53:	pushf  
  41fb54:	mov    cl,0x93
  41fb56:	and    dh,BYTE PTR [ecx+ebx*8-0x3d]
  41fb5a:	rol    DWORD PTR [esi-0x1],0x6a
  41fb5e:	ins    DWORD PTR es:[edi],dx
  41fb5f:	push   0x29
  41fb61:	leave  
  41fb62:	sti    
  41fb63:	push   esp
  41fb64:	pop    es
  41fb65:	sbb    eax,0x6965610b
  41fb6a:	js     0x41fb78
  41fb6c:	mov    bh,0x7b
  41fb6e:	inc    ecx
  41fb6f:	xchg   edi,eax
  41fb70:	xchg   di,ax
  41fb72:	mov    eax,0x7b4b205a
  41fb77:	sbb    cl,BYTE PTR [ebp+0x69]
  41fb7a:	push   ebp
  41fb7b:	out    0x35,al
  41fb7d:	jle    0x41fb3c
  41fb7f:	xchg   ebp,eax
  41fb80:	ffreep st(5)
  41fb82:	and    ecx,DWORD PTR [edx]
  41fb84:	or     eax,0xbfda1028
  41fb89:	ror    DWORD PTR [edx-0x4d1ab77e],0x64
  41fb90:	mov    bh,0xdd
  41fb92:	cmp    dl,ch
  41fb94:	fidiv  WORD PTR [edi]
  41fb96:	sub    esp,DWORD PTR ds:0x395913eb
  41fb9c:	outs   dx,DWORD PTR ds:[esi]
  41fb9d:	push   ss
  41fb9e:	xchg   edi,eax
  41fb9f:	jns    0x41fb3a
  41fba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fba2:	adc    ebp,DWORD PTR [eax+0x3a]
  41fba5:	push   gs
  41fba7:	dec    ebp
  41fba8:	inc    ebp
  41fba9:	je     0x41fc07
  41fbab:	imul   ecx,DWORD PTR [edi],0x13
  41fbae:	(bad)  
  41fbb0:	inc    ebp
  41fbb1:	and    esp,ecx
  41fbb3:	mov    esi,0x5be9a2f6
  41fbb8:	fs mov dl,0x9c
  41fbbb:	dec    BYTE PTR [ebx+ebx*8+0x330fc692]
  41fbc2:	inc    eax
  41fbc3:	(bad)  
  41fbc4:	cmp    ebx,ecx
  41fbc6:	mov    edx,0xb82f86fc
  41fbcb:	aas    
  41fbcc:	xchg   edi,eax
  41fbcd:	jo     0x41fb7b
  41fbcf:	lods   al,BYTE PTR ds:[esi]
  41fbd0:	std    
  41fbd1:	adc    al,0xb0
  41fbd4:	or     DWORD PTR [eax],0xfffffffd
  41fbd7:	fdiv   DWORD PTR [eax]
  41fbd9:	lea    ebx,[ebp-0x4f51dcd4]
  41fbdf:	adc    al,0x14
  41fbe1:	xchg   ecx,eax
  41fbe2:	jmp    0xfdba:0xfe29a0ef
  41fbe9:	mov    ds:0x95391194,eax
  41fbee:	and    cl,BYTE PTR [ebx]
  41fbf0:	mul    BYTE PTR [esi+0x75]
  41fbf3:	daa    
  41fbf4:	adc    esp,esp
  41fbf6:	(bad)  
  41fbf7:	loope  0x41fc10
  41fbf9:	aam    0x4a
  41fbfb:	ins    DWORD PTR es:[edi],dx
  41fbfc:	pop    esp
  41fbfd:	rol    bh,0xcd
  41fc00:	xchg   edx,eax
  41fc01:	out    0x17,al
  41fc03:	mov    BYTE PTR [esi+0x57],bl
  41fc06:	inc    edx
  41fc07:	ss call 0x6d939c99
  41fc0d:	mov    cl,0x78
  41fc0f:	addr16 or al,0x60
  41fc12:	sub    BYTE PTR [edi],cl
  41fc14:	mov    dh,0x5
  41fc16:	xchg   ebp,eax
  41fc17:	aas    
  41fc18:	loopne 0x41fc45
  41fc1a:	aam    0xf5
  41fc1c:	aas    
  41fc1d:	or     al,BYTE PTR [ebx-0x66]
  41fc20:	and    ebx,edi
  41fc22:	js     0x41fc69
  41fc24:	outs   dx,BYTE PTR ds:[esi]
  41fc25:	add    edx,0x1d
  41fc28:	sahf   
  41fc29:	push   edx
  41fc2a:	mov    ds:0x60f46618,al
  41fc2f:	xor    al,0x53
  41fc31:	jo     0x41fc85
  41fc33:	xchg   ebx,edi
  41fc35:	addr16 std 
  41fc37:	mov    ebx,0x548f19c7
  41fc3c:	dec    ebp
  41fc3d:	push   ds
  41fc3e:	xchg   edi,eax
  41fc3f:	fidiv  DWORD PTR [eax-0x2de35456]
  41fc45:	xchg   DWORD PTR [ebx],esp
  41fc47:	or     eax,0xda930756
  41fc4c:	nop
  41fc4d:	shl    BYTE PTR [ecx+ebx*2-0x38],1
  41fc51:	ret    0x26c9
  41fc54:	(bad)  [edx+edi*8+0x69]
  41fc58:	aas    
  41fc59:	xchg   DWORD PTR [ecx-0x9],edx
  41fc5c:	jo     0x41fc21
  41fc5e:	or     ebx,DWORD PTR [ebx+eiz*1-0x4cfb9f6b]
  41fc65:	pushf  
  41fc66:	inc    edx
  41fc67:	pop    es
  41fc68:	cwde   
  41fc69:	pop    ebp
  41fc6a:	test   al,0x99
  41fc6c:	outs   dx,BYTE PTR ds:[esi]
  41fc6d:	xor    eax,0x7de6d51f
  41fc72:	jb     0x41fce6
  41fc74:	cmp    ebp,esp
  41fc76:	std    
  41fc77:	fst    DWORD PTR [edx+0x27]
  41fc7a:	bound  edi,QWORD PTR [edi-0x31]
  41fc7d:	sub    BYTE PTR [eax-0x55bacd51],dh
  41fc83:	lahf   
  41fc84:	or     edx,DWORD PTR [edx-0x6c5283da]
  41fc8a:	inc    esp
  41fc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc8c:	mov    bl,BYTE PTR [ebp-0x51]
  41fc8f:	sub    eax,ebx
  41fc91:	aas    
  41fc92:	xchg   esp,eax
  41fc93:	aaa    
  41fc94:	icebp  
  41fc95:	adc    bh,BYTE PTR ds:0xb981fb1e
  41fc9b:	sub    al,dh
  41fc9d:	les    edi,FWORD PTR [ebp-0x57218a97]
  41fca3:	jno    0x41fc7b
  41fca5:	out    dx,eax
  41fca6:	(bad)  
  41fca7:	pop    eax
  41fca8:	xchg   ebx,eax
  41fca9:	pushf  
  41fcaa:	dec    eax
  41fcab:	xchg   esi,eax
  41fcac:	sub    BYTE PTR ds:0xeb9a4bc4,ch
  41fcb2:	sar    BYTE PTR [ecx+0x18],1
  41fcb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcb6:	sub    DWORD PTR [edi-0x3f],0xffffff95
  41fcba:	push   0xfffffff2
  41fcbc:	xor    eax,0x38d3acc1
  41fcc1:	cmp    BYTE PTR [esi-0x6f],ch
  41fcc4:	fcmove st,st(4)
  41fcc6:	imul   edx,DWORD PTR [esi+ebp*8],0xb16a96d3
  41fccd:	push   ebx
  41fcce:	push   ebp
  41fccf:	lods   al,BYTE PTR ds:[esi]
  41fcd0:	jnp    0x41fc70
  41fcd2:	sbb    bh,al
  41fcd4:	sub    ecx,DWORD PTR ds:0x5137604
  41fcda:	push   es
  41fcdb:	mov    esi,0x65ffdf5c
  41fce0:	cmp    ebx,edi
  41fce2:	and    bh,BYTE PTR [ebp-0x2a]
  41fce5:	into   
  41fce6:	jmp    0x41fcd8
  41fce8:	cmp    al,0xec
  41fcea:	cwde   
  41fceb:	fld    st(6)
  41fced:	imul   BYTE PTR [ebp+0x177cd91a]
  41fcf3:	(bad)  [edi+0x3c]
  41fcf6:	fmul   DWORD PTR [ebp+0x762fbf36]
  41fcfc:	sbb    eax,0x10e2edd5
  41fd01:	push   0xf87cea98
  41fd06:	(bad)  
  41fd07:	jp     0x41fcc2
  41fd09:	cld    
  41fd0a:	sub    DWORD PTR [ebx+0x39],ebx
  41fd0d:	jmp    0xb002:0x178eee29
  41fd14:	(bad)  
  41fd15:	sub    dh,BYTE PTR [eax+0xc0de451]
  41fd1b:	xor    BYTE PTR [ecx+edx*8-0x1945a486],0xfe
  41fd23:	das    
  41fd24:	cmp    eax,DWORD PTR [edi+0x50c462ab]
  41fd2a:	cli    
  41fd2b:	repnz cmp al,0xc
  41fd2e:	shl    BYTE PTR [edx],0x1f
  41fd31:	mov    dh,0x33
  41fd33:	or     DWORD PTR [ebx+esi*2],edx
  41fd36:	je     0x41fd80
  41fd38:	enter  0xe07d,0x95
  41fd3c:	icebp  
  41fd3d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41fd3f:	inc    esi
  41fd40:	outs   dx,DWORD PTR ds:[esi]
  41fd41:	xchg   ecx,eax
  41fd42:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41fd44:	jge    0x41fcff
  41fd46:	mov    ecx,0xfe59905c
  41fd4b:	out    0x13,eax
  41fd4d:	pop    edx
  41fd4e:	xor    dl,BYTE PTR [ecx+0x53]
  41fd51:	dec    esi
  41fd52:	push   ss
  41fd53:	sub    eax,0xeaf32a4c
  41fd58:	arpl   WORD PTR [edi-0x79],dx
  41fd5b:	mov    al,0x81
  41fd5d:	addr16 dec esp
  41fd5f:	or     edi,ebx
  41fd61:	jl     0x41fd92
  41fd63:	mov    ds:0x410be535,eax
  41fd68:	dec    esp
  41fd69:	cmp    edx,esp
  41fd6b:	fisub  WORD PTR [edx+0x579182a0]
  41fd71:	je     0x41fd27
  41fd73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd74:	pop    edi
  41fd75:	xchg   esi,eax
  41fd76:	pop    eax
  41fd77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd78:	push   0xb0b0d912
  41fd7d:	and    al,0xb6
  41fd7f:	xor    BYTE PTR [esi-0x3ea5e19c],cl
  41fd85:	pop    ds
  41fd86:	popf   
  41fd87:	ds push ss
  41fd89:	inc    esi
  41fd8a:	adc    DWORD PTR [eax+edx*1+0x7e],edi
  41fd8e:	mov    ecx,0x697c8836
  41fd93:	mov    dl,0xe5
  41fd95:	mov    al,BYTE PTR [edx-0xb4e9149]
  41fd9b:	add    ch,0xd
  41fd9e:	sbb    eax,0xd9a52495
  41fda3:	nop
  41fda4:	xor    bl,BYTE PTR [ebp+0x4c]
  41fda7:	test   ebx,ecx
  41fda9:	rcr    eax,1
  41fdab:	mov    al,ds:0xc8d173c3
  41fdb0:	inc    ebp
  41fdb1:	mov    ch,0x28
  41fdb3:	add    esp,DWORD PTR [ecx+0x33656b49]
  41fdb9:	push   ss
  41fdba:	iret   
  41fdbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdbc:	mov    BYTE PTR [eax-0x73ab3713],bh
  41fdc2:	fwait
  41fdc3:	jb     0x41fdd1
  41fdc5:	pop    ds
  41fdc6:	sbb    eax,0xaa4f3130
  41fdcb:	pop    ebp
  41fdcc:	lahf   
  41fdcd:	bound  ebp,QWORD PTR [edi]
  41fdcf:	fadd   DWORD PTR [ebx]
  41fdd1:	adc    esp,DWORD PTR [edx-0x13]
  41fdd4:	dec    edi
  41fdd5:	sbb    BYTE PTR [edx],0xd7
  41fdd8:	enter  0xe78b,0x1b
  41fddc:	ins    DWORD PTR es:[edi],dx
  41fddd:	pop    ss
  41fdde:	and    ah,ah
  41fde0:	in     al,0x95
  41fde2:	dec    ebx
  41fde3:	xlat   BYTE PTR ds:[ebx]
  41fde4:	adc    eax,0x4fff513c
  41fde9:	fsubr  QWORD PTR [eax+0x7c50527f]
  41fdef:	adc    al,bl
  41fdf1:	cld    
  41fdf2:	sbb    esi,DWORD PTR [ebx-0x47]
  41fdf5:	int    0xcb
  41fdf7:	push   ds
  41fdf8:	fbstp  TBYTE PTR [edi]
  41fdfa:	inc    eax
  41fdfb:	pusha  
  41fdfc:	aaa    
  41fdfd:	mov    edi,0x486a7d4a
  41fe02:	fmul   QWORD PTR [ebx]
  41fe04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe05:	call   DWORD PTR [esi-0x2b]
  41fe08:	sbb    bl,BYTE PTR [ecx]
  41fe0a:	mov    esp,edx
  41fe0c:	je     0x41fe2f
  41fe0e:	xlat   BYTE PTR ds:[ebx]
  41fe0f:	mov    edx,DWORD PTR [esi]
  41fe11:	shl    BYTE PTR [ebx-0x68],0xce
  41fe15:	jae    0x41fe5d
  41fe17:	inc    edi
  41fe18:	stc    
  41fe19:	ins    BYTE PTR es:[edi],dx
  41fe1a:	jb     0x41fdf0
  41fe1c:	outs   dx,DWORD PTR ds:[esi]
  41fe1d:	aam    0x67
  41fe1f:	mov    bl,0x19
  41fe21:	arpl   WORD PTR [edi+0x73c085aa],bp
  41fe27:	jmp    0x41fe61
  41fe29:	adc    bl,cl
  41fe2b:	push   0xffffffc8
  41fe2d:	adc    ecx,eax
  41fe2f:	mov    esi,0xf12f0121
  41fe34:	mov    edi,0x628cb1e9
  41fe39:	sub    al,bl
  41fe3b:	mov    dh,BYTE PTR [ecx-0x6dee891d]
  41fe41:	push   edx
  41fe42:	ins    DWORD PTR es:[edi],dx
  41fe43:	cli    
  41fe44:	xlat   BYTE PTR ds:[ebx]
  41fe45:	push   0x51
  41fe47:	add    al,0x1b
  41fe49:	cwde   
  41fe4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe4b:	and    al,0x59
  41fe4d:	add    BYTE PTR ds:[edi+ebx*8-0x77],bh
  41fe52:	call   0x6b1430bc
  41fe57:	mov    esi,DWORD PTR [ecx-0x75c0b8b5]
  41fe5d:	cwde   
  41fe5e:	stc    
  41fe5f:	jmp    0x834540b2
  41fe64:	mov    ds:0xaae7c537,eax
  41fe69:	inc    ebx
  41fe6a:	jecxz  0x41fdfe
  41fe6c:	in     eax,0x76
  41fe6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe6f:	icebp  
  41fe70:	addr16 nop
  41fe72:	push   cs
  41fe73:	popf   
  41fe74:	adc    edi,ecx
  41fe76:	pop    edi
  41fe77:	dec    eax
  41fe78:	shld   esp,edi,0xcb
  41fe7c:	pop    es
  41fe7d:	(bad)  
  41fe7e:	(bad)  
  41fe7f:	lahf   
  41fe80:	xchg   edi,eax
  41fe81:	lds    edi,FWORD PTR [esi-0x17]
  41fe84:	icebp  
  41fe85:	fldenv [ebp-0x31349df9]
  41fe8b:	in     eax,0x73
  41fe8d:	dec    edx
  41fe8e:	lods   eax,DWORD PTR ds:[esi]
  41fe8f:	scas   al,BYTE PTR es:[edi]
  41fe90:	cmp    ch,BYTE PTR [ebx-0x1c079681]
  41fe96:	cld    
  41fe97:	popa   
  41fe98:	push   esp
  41fe99:	add    ebx,DWORD PTR [edi+edx*8-0x49796987]
  41fea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fea1:	push   0x185284d6
  41fea6:	adc    bl,BYTE PTR [edi+0x3b0084e1]
  41feac:	clc    
  41fead:	cld    
  41feae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feaf:	pushf  
  41feb0:	fist   WORD PTR [esp+edx*2]
  41feb3:	(bad)  
  41feb4:	xchg   edi,eax
  41feb5:	and    edx,DWORD PTR [esp+ecx*8]
  41feb8:	shr    BYTE PTR [edi+eax*2],cl
  41febb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41febc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41febd:	and    cl,dl
  41febf:	xor    DWORD PTR [edx-0x2bbd1acf],ecx
  41fec5:	fwait
  41fec6:	or     BYTE PTR [esi+0x17],0x2c
  41feca:	pop    edx
  41fecb:	inc    esi
  41fecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fecd:	jecxz  0x41feec
  41fecf:	inc    esp
  41fed0:	(bad)  
  41fed1:	mov    eax,ds:0xfe3ef420
  41fed6:	inc    esi
  41fed7:	(bad)  
  41fed8:	dec    esp
  41fed9:	fistp  WORD PTR [edi+0x7d]
  41fedc:	mov    ecx,cs
  41fede:	js     0x41fefd
  41fee0:	pop    ebp
  41fee1:	inc    edx
  41fee2:	add    al,0xec
  41fee4:	mov    ah,BYTE PTR [eax-0x74]
  41fee7:	jle    0x41ff03
  41fee9:	in     al,dx
  41feea:	mov    dl,0x7a
  41feec:	push   ebp
  41feed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feee:	es mov edi,0xaea18928
  41fef4:	jmp    0x68e63c4f
  41fef9:	nop
  41fefa:	dec    esp
  41fefb:	mov    bl,0xc0
  41fefd:	mov    al,0x46
  41feff:	adc    edi,esi
  41ff01:	and    dl,BYTE PTR [edi+0x709f9005]
  41ff07:	lahf   
  41ff08:	into   
  41ff09:	pcmpeqd mm4,QWORD PTR [ecx+ecx*4+0x55ef1537]
  41ff11:	aaa    
  41ff12:	icebp  
  41ff13:	push   0xf400e9eb
  41ff18:	mov    DWORD PTR [esi-0x51ec3191],edx
  41ff1e:	mov    bh,BYTE PTR [ecx-0x5]
  41ff21:	dec    eax
  41ff22:	dec    eax
  41ff23:	cmc    
  41ff24:	push   ss
  41ff25:	xchg   ebp,eax
  41ff26:	aad    0xfa
  41ff28:	or     eax,0x3486f7a
  41ff2d:	mov    al,ds:0x6108488f
  41ff32:	imul   edi,DWORD PTR [ebx+0x2290d08e],0x65
  41ff39:	aad    0xbc
  41ff3b:	ins    DWORD PTR es:[edi],dx
  41ff3c:	or     ecx,eax
  41ff3e:	jnp    0x41ff7c
  41ff40:	(bad)  
  41ff41:	fucom  st(5)
  41ff43:	(bad)  
  41ff44:	aam    0xf1
  41ff46:	jbe    0x41ff44
  41ff48:	mov    edx,0x8dcd92dc
  41ff4d:	lahf   
  41ff4e:	jne    0x41fed9
  41ff50:	add    BYTE PTR [ecx-0xc],bl
  41ff53:	inc    ecx
  41ff54:	sub    eax,0x2e90d31e
  41ff59:	mov    bh,0xbb
  41ff5b:	dec    edx
  41ff5c:	xor    dl,BYTE PTR [ebp+0x25]
  41ff5f:	repnz and eax,0x68dbe1e6
  41ff65:	mov    gs,WORD PTR [edx+edi*8+0x40]
  41ff69:	push   ebp
  41ff6a:	daa    
  41ff6b:	jl     0x41ff31
  41ff6d:	ja     0x41ff44
  41ff6f:	aam    0xc4
  41ff71:	xchg   DWORD PTR [edi+edx*1+0x6c],ecx
  41ff75:	inc    ecx
  41ff76:	mov    bl,0xc5
  41ff78:	mov    al,0xdd
  41ff7a:	push   eax
  41ff7b:	ficomp WORD PTR [ecx-0x2f199bf0]
  41ff81:	out    dx,al
  41ff82:	ret    0x6c23
  41ff85:	icebp  
  41ff86:	sub    al,0x1
  41ff88:	adc    al,0x36
  41ff8a:	inc    esp
  41ff8b:	shl    DWORD PTR [edi+0x67],0x6d
  41ff8f:	jmp    FWORD PTR [edx+ecx*2+0x58]
  41ff93:	sbb    DWORD PTR cs:[esp+ecx*1],ebp
  41ff97:	pusha  
  41ff98:	and    DWORD PTR [edi-0x29],eax
  41ff9b:	cmp    edx,edi
  41ff9d:	dec    ecx
  41ff9e:	test   eax,0x9eb5a019
  41ffa3:	xchg   DWORD PTR ds:0xa00ad82b,edi
  41ffa9:	daa    
  41ffaa:	imul   edx,DWORD PTR [ecx+0x80914b],0x94da4080
  41ffb4:	dec    edi
  41ffb5:	mov    al,0xbf
  41ffb7:	jmp    0x41ff7a
  41ffb9:	pusha  
  41ffba:	rol    ecx,0xd7
  41ffbd:	shl    BYTE PTR [eax-0x6d54b13f],0x1e
  41ffc4:	inc    eax
  41ffc5:	test   ch,cl
  41ffc7:	lock push ds
  41ffc9:	out    0x76,eax
  41ffcb:	ds mov es:0x3ce69f5c,eax
  41ffd2:	push   ss
  41ffd3:	ja     0x41ffd3
  41ffd5:	pop    esp
  41ffd6:	icebp  
  41ffd7:	mov    esi,0x92eadbee
  41ffdc:	xchg   BYTE PTR [ebp+0x18],ch
  41ffdf:	push   esi
  41ffe0:	rcl    cl,0x2b
  41ffe3:	pop    ecx
  41ffe4:	xchg   edx,eax
  41ffe5:	sbb    al,0x46
  41ffe7:	mov    ds:0xdc91f14c,eax
  41ffec:	adc    eax,0xa3115e7c
  41fff1:	sbb    BYTE PTR [ebp-0x62ef1092],0x57
  41fff8:	sub    DWORD PTR [ecx+eiz*2+0x1a9139d],edi
  41ffff:	jecxz  0x420013
  420001:	or     esp,ebx
  420003:	je     0x41ff93
  420005:	xchg   DWORD PTR [eax+0x1b06f605],eax
  42000b:	(bad)  
  42000d:	test   BYTE PTR [ebx],0xfa
  420010:	push   es
  420011:	mov    ch,0x2b
  420013:	adc    DWORD PTR [eax+0x10],ecx
  420016:	scas   eax,DWORD PTR es:[edi]
  420017:	push   cs
  420018:	in     al,0x8f
  42001a:	add    DWORD PTR [ebp-0x1d0892da],ebp
  420020:	mov    ecx,0x526bc5a8
  420025:	imul   esi,esi,0xffffff99
  420028:	mov    dl,0xa7
  42002a:	xchg   edx,eax
  42002b:	psllq  mm3,QWORD PTR [edx]
  42002e:	cmp    dl,BYTE PTR [ebx+edi*1]
  420031:	in     al,dx
  420032:	pop    ds
  420033:	jno    0x420079
  420035:	rcr    BYTE PTR [edi+edi*8+0x6b94fd5f],cl
  42003c:	(bad)  
  42003d:	dec    edx
  42003e:	out    dx,al
  42003f:	shl    BYTE PTR [ebp+0x5a46de08],1
  420045:	mov    ds:0xbde76324,eax
  42004a:	sbb    eax,0xf96dd254
  42004f:	dec    esp
  420050:	rol    BYTE PTR [edi+0x11011c2b],1
  420056:	nop    DWORD PTR [ebx]
  420059:	push   ss
  42005a:	push   esp
  42005b:	stos   BYTE PTR es:[edi],al
  42005c:	mov    ebp,esp
  42005e:	inc    edx
  42005f:	ins    BYTE PTR es:[edi],dx
  420060:	(bad)  
  420061:	dec    edi
  420062:	aaa    
  420063:	shl    DWORD PTR [eax-0x21219b4a],cl
  420069:	pop    eax
  42006a:	adc    ch,dh
  42006c:	call   0xad90ecc8
  420071:	(bad)  
  420072:	or     al,0x1b
  420074:	aad    0x5b
  420076:	pop    ss
  420077:	out    0x7a,eax
  420079:	push   ss
  42007a:	test   eax,0x7b8b6e9a
  42007f:	inc    esp
  420080:	sbb    eax,ebx
  420082:	test   DWORD PTR [edx],ebp
  420084:	dec    eax
  420085:	das    
  420086:	mov    esp,0xe8addb10
  42008b:	test   al,0xa8
  42008e:	jg     0x4200ec
  420090:	or     eax,0xa6824729
  420095:	imul   ebx,DWORD PTR [edx],0x2edbf8b5
  42009b:	or     BYTE PTR [ebp+0x42673da3],0xa
  4200a2:	out    dx,eax
  4200a3:	add    al,0x1d
  4200a5:	call   0x2121c89b
  4200aa:	mov    edx,0x5fa6d635
  4200af:	stc    
  4200b0:	dec    ebx
  4200b1:	mov    ecx,0x79e94513
  4200b6:	mov    esi,0x69c1a393
  4200bb:	jae    0x4200ad
  4200bd:	jecxz  0x42008c
  4200bf:	dec    ecx
  4200c0:	repnz test eax,0xbd5d5957
  4200c6:	fld    QWORD PTR ds:0xb538a635
  4200cc:	xchg   edi,eax
  4200cd:	pop    ebp
  4200ce:	xlat   BYTE PTR ds:[ebx]
  4200cf:	popf   
  4200d0:	push   0x5670fd8c
  4200d5:	je     0x4200c7
  4200d7:	and    dh,BYTE PTR [eax+0x6c7330c0]
  4200dd:	pop    ecx
  4200de:	in     al,0xc3
  4200e0:	stc    
  4200e1:	cld    
  4200e2:	dec    eax
  4200e3:	inc    edx
  4200e4:	loop   0x42006e
  4200e6:	(bad)  
  4200e8:	add    al,BYTE PTR [eax+ebp*2+0x4]
  4200ec:	jo     0x4200b7
  4200ee:	push   cs
  4200ef:	mov    eax,DWORD PTR ds:0x3fb8f5ef
  4200f5:	xchg   eax,ebp
  4200f7:	push   edx
  4200f8:	hlt    
  4200f9:	ret    
  4200fa:	jg     0x420081
  4200fc:	xchg   esi,eax
  4200fd:	aas    
  4200fe:	ss int3 
  420100:	cmp    DWORD PTR [eax],esp
  420102:	mov    edi,0x36973c88
  420107:	repnz fisttp DWORD PTR [edx-0x6a8ab8f9]
  42010e:	mov    ebx,0x233853b9
  420113:	ret    
  420114:	inc    edi
  420115:	push   ds
  420116:	sbb    esp,edx
  420118:	cld    
  420119:	adc    eax,0xd1d3623
  42011e:	and    al,0x63
  420120:	lea    eax,[esi-0x5]
  420123:	xchg   edi,eax
  420124:	retf   0x67d0
  420127:	(bad)  
  420129:	es retf 
  42012b:	das    
  42012c:	xchg   edx,eax
  42012d:	icebp  
  42012e:	mov    edi,0x70b86201
  420133:	jg     0x42011a
  420135:	cmp    BYTE PTR [ecx],ch
  420137:	das    
  420138:	sub    esi,DWORD PTR ds:0xb3b519e5
  42013e:	lahf   
  42013f:	in     eax,0x9e
  420141:	mov    esp,0xd823a1cd
  420146:	into   
  420147:	dec    ebx
  420148:	(bad)  
  420149:	pop    ecx
  42014a:	mov    al,ds:0x32821ff1
  42014f:	sti    
  420150:	es mov esi,0xec784c5a
  420156:	fisttp WORD PTR [eax-0x16]
  420159:	adc    dl,ah
  42015b:	stos   BYTE PTR es:[edi],al
  42015c:	or     cl,BYTE PTR [edx]
  42015e:	lds    esp,FWORD PTR [eax+0x2]
  420161:	mov    bh,0x9e
  420163:	cmp    eax,0xedeed6ca
  420168:	pop    ds
  420169:	jno    0x4201d1
  42016b:	or     al,0xbd
  42016d:	(bad)  
  42016e:	js     0x420154
  420170:	cmp    esi,DWORD PTR [edx-0x72f011e5]
  420176:	adc    al,0xbc
  420178:	jno    0x420134
  42017a:	sbb    ch,bh
  42017c:	sti    
  42017d:	pop    ecx
  42017e:	and    esi,eax
  420180:	ins    BYTE PTR es:[edi],dx
  420181:	mov    eax,0xdc18a367
  420186:	add    al,0x54
  420188:	mov    BYTE PTR [ebx-0x5c93ac03],bh
  42018e:	cmp    ecx,0xe
  420191:	xor    al,0x84
  420193:	es (bad) 
  420195:	js     0x4201fb
  420197:	imul   ebx,DWORD PTR [esi-0x50],0xe4e0e1e8
  42019e:	xchg   edi,eax
  42019f:	(bad)  
  4201a0:	stc    
  4201a1:	jecxz  0x4201fa
  4201a3:	repnz pusha 
  4201a5:	xchg   esi,eax
  4201a6:	sub    DWORD PTR [ecx+0x65a4904d],edx
  4201ac:	nop
  4201ad:	xor    eax,0x5591fe74
  4201b2:	out    dx,al
  4201b3:	add    eax,0xd42a0c3b
  4201b8:	shr    dl,1
  4201ba:	mov    edi,0xa806124b
  4201bf:	cmp    DWORD PTR [ecx-0x65],eax
  4201c2:	inc    ebx
  4201c3:	imul   ebp,esp,0x44823334
  4201c9:	jns    0x42021f
  4201cb:	sti    
  4201cc:	iret   
  4201cd:	out    0x4f,al
  4201cf:	xchg   ecx,eax
  4201d0:	pop    ebp
  4201d1:	imul   esi,DWORD PTR [ecx],0x4a8c8fe1
  4201d7:	mov    bh,BYTE PTR [ecx]
  4201d9:	and    BYTE PTR [ebx-0x5f],al
  4201dc:	fadd   QWORD PTR [ecx]
  4201de:	mov    edi,DWORD PTR [esi]
  4201e0:	cli    
  4201e1:	rcl    DWORD PTR [ecx-0x53968351],cl
  4201e7:	xor    dl,dh
  4201e9:	mov    dh,0x33
  4201eb:	mov    esp,0xfee60a01
  4201f0:	pop    esi
  4201f1:	mov    al,ds:0x95ce2948
  4201f6:	inc    esi
  4201f7:	scas   al,BYTE PTR es:[edi]
  4201f8:	and    eax,0xfdd4a71
  4201fd:	sbb    al,0xae
  4201ff:	popf   
  420200:	jns    0x4201ac
  420202:	mov    esp,0x83a6416
  420207:	stc    
  420208:	inc    ecx
  420209:	and    eax,0xdaa0e566
  42020e:	xor    DWORD PTR [ebx+0x25],edx
  420211:	sub    dh,ah
  420213:	fdivr  st,st(1)
  420215:	repz jg 0x4201d1
  420218:	sub    bh,BYTE PTR [eax-0x5b0f148b]
  42021e:	mov    WORD PTR [ecx+0x6f],fs
  420221:	cdq    
  420222:	xchg   edx,eax
  420223:	out    dx,al
  420224:	mov    eax,0xa782df87
  420229:	cmp    al,0x97
  42022b:	push   es
  42022c:	inc    ebp
  42022d:	sub    cl,BYTE PTR [esi]
  42022f:	jbe    0x42024a
  420231:	dec    edi
  420232:	icebp  
  420233:	in     eax,dx
  420234:	jno    0x420229
  420236:	inc    ecx
  420237:	nop
  420238:	fucomi st,st(0)
  42023a:	xchg   DWORD PTR [ecx+ebp*2+0x76d5ebc9],ebp
  420241:	lea    ecx,[ecx]
  420243:	leave  
  420244:	sbb    BYTE PTR [edi],bl
  420246:	cmc    
  420247:	lods   eax,DWORD PTR ds:[esi]
  420248:	fwait
  420249:	dec    edx
  42024a:	pop    edx
  42024b:	loop   0x42020e
  42024d:	xchg   BYTE PTR [ecx+0x57c1bf3f],dh
  420253:	adc    eax,0x7598bb51
  420258:	fild   DWORD PTR [eax]
  42025a:	jmp    0x17b4:0xef80d0ff
  420261:	jae    0x420298
  420263:	test   BYTE PTR [ebx-0x3a52070],al
  420269:	sub    al,0xb8
  42026b:	call   0x4566:0x82547ea6
  420272:	stos   BYTE PTR es:[edi],al
  420273:	cs retf 0x67cd
  420277:	xor    eax,0x530a5117
  42027c:	fidivr WORD PTR [ecx+0x5659bd01]
  420282:	or     BYTE PTR [esi+0x40a110b7],dh
  420288:	push   0xcc0eb65
  42028d:	cmp    al,0x54
  42028f:	dec    edx
  420290:	and    BYTE PTR [edi-0x2088b224],bh
  420296:	and    dl,ch
  420298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420299:	or     eax,0x1365452
  42029e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42029f:	cli    
  4202a0:	dec    eax
  4202a1:	push   ds
  4202a2:	jno    0x42029b
  4202a4:	div    dl
  4202a6:	mov    esi,0x12e98822
  4202ab:	jl     0x420306
  4202ad:	xchg   edi,eax
  4202ae:	outs   dx,BYTE PTR ds:[esi]
  4202af:	xchg   ebp,eax
  4202b0:	test   al,0xe7
  4202b2:	push   ebx
  4202b3:	lods   al,BYTE PTR ds:[esi]
  4202b4:	cmp    esi,eax
  4202b6:	(bad)  
  4202b7:	retf   
  4202b8:	and    BYTE PTR [ebp+0x4a],al
  4202bb:	retf   
  4202bc:	mov    dh,0x44
  4202be:	cli    
  4202bf:	adc    DWORD PTR [edi],eax
  4202c1:	imul   esp,ecx,0x40
  4202c4:	je     0x42032e
  4202c6:	ins    DWORD PTR es:[edi],dx
  4202c7:	nop
  4202c8:	ins    BYTE PTR es:[edi],dx
  4202c9:	in     al,dx
  4202ca:	push   ebx
  4202cb:	or     BYTE PTR [esi+0xc0a944e],ch
  4202d1:	jns    0x420290
  4202d3:	scas   al,BYTE PTR es:[edi]
  4202d4:	repz pop ss
  4202d6:	(bad)  
  4202d7:	pop    edi
  4202d8:	fucomp st(6)
  4202da:	jnp    0x4202dd
  4202dc:	scas   eax,DWORD PTR es:[edi]
  4202dd:	jns    0x420309
  4202df:	jp     0x420331
  4202e1:	mov    bh,0xc3
  4202e3:	sahf   
  4202e4:	into   
  4202e5:	fstp   TBYTE PTR [edi]
  4202e7:	sub    DWORD PTR [edx-0x41],ebp
  4202ea:	jl     0x420326
  4202ec:	sub    ebp,ebx
  4202ee:	and    esp,edi
  4202f0:	pop    es
  4202f1:	aad    0x5b
  4202f3:	add    DWORD PTR [eax],0xffffffef
  4202f6:	xor    al,0x61
  4202f8:	addr16 leave 
  4202fa:	repnz mov al,0x91
  4202fd:	cmc    
  4202fe:	mov    al,BYTE PTR [esi]
  420300:	cmp    eax,0xf10bc8f4
  420305:	ret    0xb718
  420308:	xchg   cl,dh
  42030a:	sub    al,0x38
  42030c:	lock sub esp,DWORD PTR [bx-0x35]
  420311:	pop    edi
  420312:	test   DWORD PTR [edi+0x68],ecx
  420315:	pop    edx
  420316:	ret    0x5cdc
  420319:	inc    esi
  42031a:	adc    eax,0xef6f4bab
  42031f:	adc    BYTE PTR [ebp-0x37bdaec9],0x57
  420326:	call   0xbb9b9bd8
  42032b:	sbb    esi,DWORD PTR [ecx+0x1bd1d3a]
  420331:	(bad)  
  420332:	clc    
  420333:	loop   0x42038e
  420335:	jbe    0x4202c0
  420337:	retf   
  420338:	(bad)  
  420339:	cmp    DWORD PTR [ebx-0x64],ecx
  42033c:	fs mov dh,0xf5
  42033f:	mov    ecx,0x8c85d43c
  420344:	data16 rol BYTE PTR [ebx+eiz*1-0x3a],1
  420349:	or     al,0xff
  42034b:	push   cs
  42034c:	inc    ebp
  42034d:	push   esp
  42034e:	cmp    BYTE PTR [edi-0x1f],dh
  420351:	fadd   DWORD PTR [edi]
  420353:	xor    ax,0x83c3
  420357:	and    BYTE PTR [edi-0x68],ch
  42035a:	retf   0x9006
  42035d:	(bad)  
  42035e:	out    dx,eax
  42035f:	int3   
  420360:	retf   
  420361:	cmp    BYTE PTR [ebx-0x36],dh
  420364:	pop    ebp
  420365:	int3   
  420366:	pop    esp
  420367:	pop    edx
  420368:	add    BYTE PTR [edi-0x1b],ah
  42036b:	or     esi,DWORD PTR [esi]
  42036d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42036e:	jnp    0x42035a
  420370:	push   DWORD PTR [esi-0x4f]
  420373:	push   0xf0d4c9bd
  420378:	jg     0x4203c2
  42037a:	sub    eax,0x1bb01c36
  42037f:	loopne 0x420371
  420381:	fidiv  DWORD PTR [esi+edi*4]
  420384:	repz sbb BYTE PTR [esi+ebp*2-0x57f1e39],0xc5
  42038d:	es sti 
  42038f:	cmp    edx,ecx
  420391:	mov    bh,0xdb
  420393:	cmp    DWORD PTR [ebp-0x73658ac0],0xd00f3b64
  42039d:	test   eax,0x9da9c2b9
  4203a2:	std    
  4203a3:	add    dh,0x75
  4203a6:	cmp    esp,DWORD PTR [ecx+0x15]
  4203a9:	icebp  
  4203aa:	cs lahf 
  4203ac:	xchg   esi,eax
  4203ad:	pop    ebx
  4203ae:	or     ebx,ebx
  4203b0:	jl     0x420358
  4203b2:	add    ecx,eax
  4203b4:	sbb    ecx,DWORD PTR [eax-0x13a0d80b]
  4203ba:	bound  ebp,QWORD PTR [eax-0x428888ba]
  4203c0:	mov    eax,0x5215cd81
  4203c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203c6:	push   cs
  4203c7:	jg     0x4203dc
  4203c9:	or     eax,esi
  4203cb:	mov    ch,0x32
  4203cd:	ret    
  4203ce:	mov    ds:0x8db5a690,al
  4203d3:	or     DWORD PTR ds:[edi+0x39],edx
  4203d7:	inc    esp
  4203d8:	and    BYTE PTR [ebx],bh
  4203da:	test   al,0x17
  4203dc:	popf   
  4203dd:	bound  edi,QWORD PTR [ebp-0xa9b2e78]
  4203e3:	test   al,0x93
  4203e5:	or     DWORD PTR [ecx+esi*2],0x1f
  4203e9:	inc    esp
  4203ea:	sahf   
  4203eb:	jg     0x420412
  4203ed:	mov    WORD PTR [edi+0x5f50877c],cs
  4203f3:	sbb    al,0x75
  4203f5:	adc    eax,0x60ad2cad
  4203fa:	sti    
  4203fb:	cdq    
  4203fc:	loopne 0x4203c7
  4203fe:	mov    edx,ss
  420400:	mov    ecx,0x4e446419
  420405:	push   esi
  420406:	ret    
  420407:	cdq    
  420408:	pop    esp
  420409:	pusha  
  42040a:	push   ebx
  42040b:	gs fs mov ecx,0x7a5b0b8e
  420412:	sub    DWORD PTR [ecx+0x5e],ebx
  420415:	jmp    0x9be2:0x327ec4b4
  42041c:	mov    ebp,0xee5a757d
  420421:	icebp  
  420422:	xchg   edx,eax
  420423:	xor    al,0xd2
  420425:	push   ebx
  420426:	mov    esi,0x3bfb2afd
  42042b:	pop    esi
  42042c:	repz in al,dx
  42042e:	sub    ch,0x94
  420431:	out    dx,eax
  420432:	fisub  DWORD PTR [ebp-0x4b]
  420435:	stc    
  420436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420437:	imul   DWORD PTR [esi]
  420439:	cmp    edx,DWORD PTR [ebx+0x3f]
  42043c:	sub    al,0x8a
  42043e:	xchg   edi,eax
  42043f:	leave  
  420440:	pop    ds
  420441:	bound  edx,QWORD PTR [esi-0x7d]
  420444:	cmp    BYTE PTR [edi+0x34cf6890],bh
  42044a:	sbb    al,0xbe
  42044c:	mov    edx,0x5f542e6
  420451:	pop    ds
  420452:	dec    esp
  420453:	in     al,dx
  420454:	cld    
  420455:	pushf  
  420456:	push   esp
  420457:	lds    ebp,FWORD PTR [esi-0x37eecc3d]
  42045d:	loope  0x42044c
  42045f:	xchg   esp,eax
  420460:	dec    esp
  420461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420462:	lahf   
  420463:	dec    ebp
  420464:	cmp    edx,DWORD PTR [ebx+eax*2-0x781a547a]
  42046b:	fldcw  WORD PTR [esi-0x5c2b2cc3]
  420471:	jae    0x4204e7
  420473:	(bad)  
  420474:	lods   eax,DWORD PTR ds:[esi]
  420475:	lock scas eax,DWORD PTR es:[edi]
  420477:	push   ds
  420478:	xor    dl,BYTE PTR [ecx-0x4e920aa5]
  42047e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42047f:	and    BYTE PTR [esp+ecx*4],cl
  420482:	outs   dx,BYTE PTR ds:[esi]
  420483:	mov    cs,eax
  420485:	pop    edi
  420486:	xor    al,0x70
  420488:	jno    0x420492
  42048a:	or     eax,0xee9e94e8
  42048f:	mov    dh,0xba
  420491:	jbe    0x4204f2
  420493:	lea    esp,[ebp+0x60424d4b]
  420499:	pushf  
  42049a:	div    BYTE PTR [eax+0x621e8e68]
  4204a0:	call   0x345b292e
  4204a5:	iret   
  4204a6:	(bad)  
  4204a8:	sub    eax,0x6affccee
  4204ad:	cdq    
  4204ae:	jne    0x42049a
  4204b0:	pop    ecx
  4204b1:	add    al,0x74
  4204b3:	lods   al,BYTE PTR ds:[esi]
  4204b4:	jl     0x420521
  4204b6:	(bad)  
  4204b8:	repz push ebp
  4204ba:	xor    al,0x82
  4204bc:	xor    ah,BYTE PTR [edi-0x4b443019]
  4204c2:	pusha  
  4204c3:	int3   
  4204c4:	inc    ebp
  4204c5:	in     al,dx
  4204c6:	ret    0x9e6c
  4204c9:	mov    WORD PTR [esi],fs
  4204cb:	push   eax
  4204cc:	int    0x88
  4204ce:	in     eax,dx
  4204cf:	or     DWORD PTR [eax-0x25],ebx
  4204d2:	pusha  
  4204d3:	push   esp
  4204d4:	mov    al,ds:0x5eaaff1c
  4204d9:	jmp    0xf5e8:0x89a74809
  4204e0:	(bad)  
  4204e1:	popa   
  4204e2:	cmc    
  4204e3:	add    al,0x6e
  4204e5:	xchg   edx,eax
  4204e6:	adc    eax,0xec4c9809
  4204eb:	adc    ch,BYTE PTR [edx]
  4204ed:	and    BYTE PTR [ebp-0x79e277a],0x9a
  4204f4:	shl    BYTE PTR [ebp+0x60e68f0f],cl
  4204fa:	xor    ebp,DWORD PTR [ebx]
  4204fc:	fnstcw WORD PTR [ebx+0x6429562e]
  420502:	enter  0x6a62,0x4b
  420506:	loopne 0x420551
  420508:	mov    al,ds:0x456fa99c
  42050d:	push   ecx
  42050e:	inc    edx
  42050f:	cmp    dl,bh
  420511:	jge    0x42049a
  420513:	out    0xa5,al
  420515:	sbb    al,0xe5
  420517:	mov    bl,BYTE PTR [esi+0x425b6518]
  42051d:	pop    ss
  42051e:	xor    BYTE PTR [edi-0x4bcbd2bb],0x8c
  420525:	add    bh,dl
  420527:	icebp  
  420528:	sbb    DWORD PTR [ebp-0x32],0xec92a9ff
  42052f:	outs   dx,BYTE PTR ds:[esi]
  420530:	mov    cl,0x9a
  420532:	iret   
  420533:	popf   
  420534:	pusha  
  420535:	fdivr  QWORD PTR [eax-0x59b48610]
  42053b:	mov    ch,0x11
  42053d:	pop    es
  42053e:	mov    al,ds:0xa49a71e0
  420543:	(bad)  
  420544:	or     eax,0x960bb93f
  420549:	cmp    cl,BYTE PTR [edx-0x17]
  42054c:	repnz sbb ah,cl
  42054f:	dec    ebp
  420550:	add    BYTE PTR [ebp+0xe10e079],bh
  420556:	(bad)  
  420558:	popf   
  420559:	mov    eax,ds:0x2758cbd4
  42055e:	outs   dx,BYTE PTR ds:[esi]
  42055f:	mov    ebx,0x16eeee52
  420564:	adc    eax,0xc36cc203
  420569:	sub    ecx,edi
  42056b:	shl    DWORD PTR [edx+esi*1-0x4],1
  42056f:	daa    
  420570:	popa   
  420571:	add    BYTE PTR [edi],al
  420573:	ret    
  420574:	lods   al,BYTE PTR ds:[esi]
  420575:	mov    eax,ds:0x27b9c1
  42057a:	mov    ah,0x34
  42057c:	dec    esi
  42057d:	iret   
  42057e:	lods   eax,DWORD PTR ds:[esi]
  42057f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420580:	or     dh,al
  420582:	xchg   esp,eax
  420583:	jae    0x420511
  420585:	mov    dl,0xdb
  420587:	fsub   DWORD PTR [ebp+0x59]
  42058a:	jbe    0x4205c3
  42058c:	sub    DWORD PTR [edx],edx
  42058e:	or     ecx,DWORD PTR [ebp-0x6c5e15de]
  420594:	aad    0xa7
  420596:	(bad)  
  420597:	fcmovne st,st(2)
  420599:	lods   al,BYTE PTR ds:[esi]
  42059a:	mov    BYTE PTR [ebx-0x139293cf],ah
  4205a0:	and    al,0x87
  4205a2:	loope  0x4205e0
  4205a4:	fild   WORD PTR [ebx-0x5d11cecc]
  4205aa:	mov    edx,ecx
  4205ac:	jmp    0xffeedaf
  4205b1:	addr16 jbe 0x42059d
  4205b4:	ins    DWORD PTR es:[edi],dx
  4205b5:	outs   dx,BYTE PTR ds:[esi]
  4205b6:	fstp   TBYTE PTR [ecx]
  4205b8:	inc    ebp
  4205b9:	test   BYTE PTR ss:[edi+0x3101da6],cl
  4205c0:	inc    ebx
  4205c1:	xchg   edx,eax
  4205c2:	dec    esi
  4205c3:	dec    eax
  4205c4:	or     DWORD PTR [edx],esp
  4205c6:	in     eax,dx
  4205c7:	lods   eax,DWORD PTR ds:[esi]
  4205c8:	push   ebx
  4205c9:	out    0x4,al
  4205cb:	and    BYTE PTR ds:0x7f0fe34d,0x64
  4205d2:	inc    ebp
  4205d3:	jecxz  0x420650
  4205d5:	xchg   DWORD PTR [edx-0x2b],esp
  4205d8:	cli    
  4205d9:	add    dl,BYTE PTR [ebp-0x4d]
  4205dc:	ret    0xda2a
  4205df:	popf   
  4205e0:	add    al,0x6d
  4205e2:	out    0x8b,eax
  4205e4:	inc    esi
  4205e5:	adc    eax,0xaa2e46a5
  4205ea:	push   0xffffffe3
  4205ec:	lahf   
  4205ed:	push   ebp
  4205ee:	jns    0x4205cc
  4205f0:	dec    eax
  4205f1:	scas   eax,DWORD PTR es:[edi]
  4205f2:	mov    ebp,0x1b4d7507
  4205f7:	sub    al,0x11
  4205f9:	and    BYTE PTR [ebp-0x4],0x15
  4205fd:	leave  
  4205fe:	inc    esp
  4205ff:	div    DWORD PTR [ecx+eiz*8+0x77]
  420603:	push   si
  420605:	sub    ebp,edx
  420607:	test   eax,0xc9f2885
  42060c:	daa    
  42060d:	loopne 0x4205f2
  42060f:	(bad)  
  420610:	(bad)  
  420611:	xor    al,0x7e
  420613:	sar    ebx,0x9c
  420616:	leave  
  420617:	popa   
  420618:	xor    eax,0xf398fcf9
  42061d:	fisttp QWORD PTR [edi+esi*4-0x5c79f95f]
  420624:	sub    eax,0x2685d535
  420629:	sbb    eax,0x8df88b77
  42062e:	pop    eax
  42062f:	push   esp
  420630:	stos   BYTE PTR es:[edi],al
  420631:	popf   
  420632:	inc    edx
  420633:	or     eax,0x2e59563e
  420638:	dec    edx
  420639:	dec    edx
  42063a:	pusha  
  42063b:	jns    0x420625
  42063d:	bound  ebx,QWORD PTR [edx-0x6e]
  420640:	xor    eax,DWORD PTR [ebp+ecx*1-0x47]
  420644:	lods   al,BYTE PTR ds:[esi]
  420645:	mov    DWORD PTR [esi-0x4d],ebx
  420648:	xlat   BYTE PTR ds:[ebx]
  420649:	or     al,0x92
  42064b:	adc    eax,edx
  42064d:	and    BYTE PTR [esi],cl
  42064f:	clc    
  420650:	mov    ecx,0xa1305881
  420655:	adc    eax,0x6283c9f
  42065a:	jecxz  0x4206a1
  42065c:	dec    ebx
  42065d:	xchg   ebx,eax
  42065e:	pop    esi
  42065f:	hlt    
  420660:	das    
  420661:	out    dx,al
  420662:	jmp    0x42063e
  420664:	jecxz  0x4206e4
  420666:	leave  
  420667:	scas   eax,DWORD PTR es:[edi]
  420668:	push   ebx
  420669:	rcr    BYTE PTR [ebx-0x75c38183],1
  42066f:	(bad)
  420672:	shr    DWORD PTR [edx],1
  420674:	jnp    0x420667
  420676:	sub    al,0xd5
  420678:	and    dh,BYTE PTR ds:0x165037e8
  42067e:	enter  0x95bf,0x8b
  420682:	and    al,0xa0
  420684:	adc    ch,cl
  420686:	pop    esp
  420687:	cmp    eax,0x49dd5fe1
  42068c:	enter  0xc486,0x4f
  420690:	in     eax,0xe8
  420692:	mov    DWORD PTR [edi-0x3cb4a679],eax
  420698:	lock xor bh,BYTE PTR [edi+0x48015a22]
  42069f:	or     al,bl
  4206a1:	scas   eax,DWORD PTR es:[edi]
  4206a2:	xchg   esi,eax
  4206a3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206a5:	sti    
  4206a6:	mov    dl,0x4f
  4206a8:	push   ds
  4206a9:	mov    eax,0x2c2d297e
  4206ae:	mov    al,ds:0x3782f7bd
  4206b3:	cli    
  4206b4:	dec    ebx
  4206b5:	jns    0x420666
  4206b7:	pushf  
  4206b8:	jle    0x420734
  4206ba:	out    0x72,eax
  4206bc:	jmp    0x42066b
  4206be:	mov    cs,WORD PTR [esi-0x44]
  4206c1:	sbb    dh,ah
  4206c3:	fs xor al,0xa
  4206c6:	int    0xe0
  4206c8:	mov    BYTE PTR [edx-0x34],bl
  4206cb:	shl    DWORD PTR [ebx-0x6e93aa95],1
  4206d1:	pop    es
  4206d2:	xchg   BYTE PTR [ecx+0x7c],ah
  4206d5:	inc    ebp
  4206d6:	or     dh,BYTE PTR [ecx+ecx*2+0x6c]
  4206da:	(bad)  
  4206db:	addr16 push edx
  4206dd:	push   ebp
  4206de:	adc    eax,0x12b38ec5
  4206e3:	adc    eax,eax
  4206e5:	stos   BYTE PTR es:[edi],al
  4206e6:	xchg   esi,eax
  4206e7:	and    eax,ecx
  4206e9:	push   0x57
  4206eb:	mov    ebp,0xdad99b17
  4206f0:	pop    ebx
  4206f1:	dec    eax
  4206f2:	ja     0x4206b0
  4206f4:	outs   dx,DWORD PTR ds:[esi]
  4206f5:	xlat   BYTE PTR ds:[ebx]
  4206f6:	outs   dx,BYTE PTR ds:[esi]
  4206f7:	jno    0x42075e
  4206f9:	popf   
  4206fa:	xchg   esi,eax
  4206fb:	sbb    al,0xca
  4206fd:	fs (bad) 
  4206ff:	repz jne 0x42072d
  420702:	imul   ecx,DWORD PTR ds:0xe42668a9,0x1c
  420709:	in     al,dx
  42070a:	jge    0x4206b2
  42070c:	aaa    
  42070d:	xchg   esi,eax
  42070e:	xchg   DWORD PTR [ebx],eax
  420710:	push   es
  420711:	or     al,0xaf
  420713:	gs and al,0xb1
  420716:	pop    ebp
  420717:	jmp    0x1d6b4171
  42071c:	xor    al,0x5b
  42071e:	pop    edi
  42071f:	jne    0x420741
  420721:	sub    al,0x8b
  420723:	es scas eax,DWORD PTR es:[edi]
  420725:	(bad)  
  420726:	mov    ebp,0x7beaf87c
  42072b:	sbb    BYTE PTR [eax+0x6d46c59e],0xfd
  420732:	jae    0x4207a6
  420734:	std    
  420735:	mov    esi,fs
  420737:	jo     0xfe5321f6
  42073d:	add    eax,0xb5576d0
  420742:	enter  0x9138,0x64
  420746:	mov    dl,0x4a
  420748:	pop    eax
  420749:	xor    eax,0x8b985420
  42074e:	loope  0x420740
  420750:	push   0x5d
  420752:	jb     0x4206e8
  420754:	mov    dl,0xab
  420756:	scas   al,BYTE PTR es:[edi]
  420757:	cwde   
  420758:	adc    ebx,DWORD PTR [ebx-0xe]
  42075b:	(bad)  [ecx-0x76]
  42075e:	push   ebx
  42075f:	in     al,dx
  420760:	test   edi,edx
  420762:	inc    ecx
  420763:	in     eax,0xbc
  420765:	pop    DWORD PTR [edx-0x2f]
  420768:	bound  edx,QWORD PTR [eax+ebx*8-0x455cf4ad]
  42076f:	jg     0x420753
  420771:	or     al,0x5a
  420773:	shl    DWORD PTR [esi],0x0
  420776:	call   0x357e:0x1a4483f4
  42077d:	aaa    
  42077e:	in     ax,0xa7
  420781:	aas    
  420782:	add    BYTE PTR [esp+ebp*8],ch
  420785:	in     al,0xbe
  420787:	xchg   ebx,eax
  420788:	scas   al,BYTE PTR es:[edi]
  420789:	mov    ebx,0xe0b0c47
  42078e:	leave  
  42078f:	sbb    eax,0x89c1035a
  420794:	inc    ebp
  420795:	in     al,dx
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a3db
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a3fb
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a417
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a3e7
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a3ff
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a403
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a407
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a40b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a40f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a3fb
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a3e7
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a413
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a41b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a3e3
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a3fb
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a3e7
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a3fb
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a3e7
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a3fb
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a3e7
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a3fb
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a3e7
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a3fb
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a3e7
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a3fb
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a3e7
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a3fb
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a3e7
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a3fb
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a3e7
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a3fb
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a3e7
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a3fb
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a3e7
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a3fb
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a3e7
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a3fb
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a3e7
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a3fb
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a3e7
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a3fb
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a417
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a3e7
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a3eb
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a3ef
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a3f3
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	daa    
  421dbb:	cli    
  421dbc:	mov    ebp,0x82b16f76
  421dc1:	add    DWORD PTR [eax],0x5c
  421dc4:	add    DWORD PTR [ebx-0x6975a41d],0x1a
  421dcb:	push   0xffffffee
  421dcd:	jne    0x421ddc
  421dcf:	xchg   edi,eax
  421dd0:	pop    ecx
  421dd1:	(bad)  
  421dd2:	sbb    BYTE PTR [edi+0x7e4c2ca1],ah
  421dd8:	inc    edi
  421dd9:	mul    DWORD PTR [ebp+0x12]
  421ddc:	ficomp DWORD PTR [eax]
  421dde:	lock pop esi
  421de0:	aaa    
  421de1:	fsub   DWORD PTR [eax-0x1]
  421de4:	aaa    
  421de5:	leave  
  421de6:	or     BYTE PTR [ecx],dl
  421de8:	call   0x9de77cc7
  421ded:	fwait
  421dee:	pop    ecx
  421def:	aaa    
  421df0:	lods   al,BYTE PTR ds:[esi]
  421df1:	mov    edx,DWORD PTR [eax]
  421df3:	pop    ds
  421df4:	push   0x4b
  421df6:	repnz arpl WORD PTR [eax-0x23],si
  421dfa:	imul   edx,DWORD PTR ds:0x7d5d40a9,0xa4f24235
  421e04:	or     al,0x58
  421e06:	pop    eax
  421e07:	(bad)  
  421e09:	leave  
  421e0a:	mov    eax,ds:0x3aa65e7
  421e0f:	dec    esp
  421e10:	out    0x83,eax
  421e12:	xor    dl,BYTE PTR [esi]
  421e14:	in     eax,dx
  421e15:	mov    ebp,0x44d44a03
  421e1a:	sahf   
  421e1b:	shl    edi,1
  421e1d:	shl    DWORD PTR [eax],1
  421e1f:	imul   ebx,eax,0xffffffe8
  421e22:	adc    esp,DWORD PTR [edi+edx*8-0x68975a3]
  421e29:	cmp    DWORD PTR ds:0x392d866a,ebx
  421e2f:	(bad)  
  421e30:	mov    esp,0x383cf9c8
  421e35:	sahf   
  421e36:	pop    ecx
  421e37:	mov    dh,0x46
  421e39:	popf   
  421e3a:	adc    al,0xfd
  421e3c:	(bad)  
  421e3d:	cmp    BYTE PTR [edx+eiz*8-0x2bf0dd63],dl
  421e44:	fs scas al,BYTE PTR es:[edi]
  421e46:	jns    0x421dda
  421e48:	mov    DWORD PTR [ecx-0x9],esi
  421e4b:	xlat   BYTE PTR ds:[ebx]
  421e4c:	aaa    
  421e4d:	leave  
  421e4e:	pop    ebx
  421e4f:	mov    esp,0x263ff3ab
  421e54:	ins    BYTE PTR es:[edi],dx
  421e55:	adc    BYTE PTR [ebx+0x6d8a65a5],0xfd
  421e5c:	mov    WORD PTR [esi],cs
  421e5e:	pop    eax
  421e5f:	shr    BYTE PTR [esi],1
  421e61:	daa    
  421e62:	pushf  
  421e63:	sahf   
  421e64:	mov    cs,WORD PTR ds:0x75f4e2c8
  421e6a:	or     BYTE PTR [ebp-0x35],bl
  421e6d:	rcl    esp,0x65
  421e70:	pop    ds
  421e71:	je     0x421edc
  421e73:	sahf   
  421e74:	and    bl,BYTE PTR [ebx-0x4c429c5]
  421e7a:	sahf   
  421e7b:	int    0x2f
  421e7d:	mov    dl,0x7b
  421e7f:	push   ds
  421e80:	pop    edi
  421e81:	fs cmp al,bl
  421e84:	add    cl,cl
  421e86:	nop
  421e87:	mov    ch,0x33
  421e89:	mov    ds:0xc899a7b8,eax
  421e8e:	inc    ebx
  421e8f:	push   ebp
  421e90:	push   ebp
  421e91:	jg     0x421e22
  421e93:	adc    al,0xb7
  421e95:	dec    edx
  421e96:	fnstsw WORD PTR ds:0x2a54509f
  421e9c:	jb     0x421eb9
  421e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e9f:	in     al,0x1e
  421ea1:	out    dx,al
  421ea2:	repnz mov ?,WORD PTR [esi]
  421ea5:	ja     0x421ed9
  421ea7:	or     al,0x2e
  421ea9:	xchg   edi,eax
  421eaa:	dec    esi
  421eab:	pusha  
  421eac:	fimul  DWORD PTR es:[edx+0x48c0e5e4]
  421eb3:	out    dx,al
  421eb4:	pop    ebx
  421eb5:	dec    edx
  421eb6:	adc    ah,BYTE PTR [esi+ebp*2-0x79]
  421eba:	pushf  
  421ebb:	int    0xee
  421ebd:	popf   
  421ebe:	bound  ecx,QWORD PTR [eax-0x60]
  421ec1:	inc    esi
  421ec2:	jmp    0x421f18
  421ec4:	sahf   
  421ec5:	icebp  
  421ec6:	ret    
  421ec7:	or     DWORD PTR [eax],0x2c805fac
  421ecd:	shl    DWORD PTR [eax-0x6c],0x89
  421ed1:	sub    ebx,esp
  421ed3:	sbb    eax,0x5a0d67a8
  421ed8:	imul   edx,DWORD PTR [ebp-0x27],0xffffffe7
  421edc:	lods   eax,DWORD PTR ds:[si]
  421ede:	xchg   ecx,eax
  421edf:	xchg   ebp,eax
  421ee0:	jae    0x421e9a
  421ee2:	mov    ecx,ss
  421ee4:	xchg   ebp,eax
  421ee5:	fisub  DWORD PTR [ecx+0x20846a53]
  421eeb:	mov    dh,0x1b
  421eed:	lods   al,BYTE PTR ds:[esi]
  421eee:	call   0xf95bba00
  421ef3:	and    al,0x6a
  421ef5:	cmp    eax,0x341a66b4
  421efa:	std    
  421efb:	pushf  
  421efc:	out    dx,eax
  421efd:	adc    BYTE PTR [eax],bh
  421eff:	mov    ecx,0xda198055
  421f04:	mov    cl,0x91
  421f06:	mov    eax,ds:0x8ea8da1
  421f0b:	pop    ss
  421f0c:	jae    0x421f10
  421f0e:	shrd   DWORD PTR [ebx-0x50],edi,cl
  421f12:	retf   
  421f13:	pop    edx
  421f14:	scas   eax,DWORD PTR es:[edi]
  421f15:	lods   eax,DWORD PTR ds:[esi]
  421f16:	push   ecx
  421f17:	aaa    
  421f18:	sbb    cl,bh
  421f1a:	adc    BYTE PTR [esi],0xbe
  421f1d:	nop
  421f1e:	jnp    0x421f97
  421f20:	pop    ebp
  421f21:	fild   DWORD PTR [ebx+0x327e8aa2]
  421f27:	cmp    DWORD PTR [edx+0x5d],ecx
  421f2a:	xor    BYTE PTR [esi],0x7e
  421f2d:	push   edx
  421f2e:	jmp    0x2227:0x3daa8366
  421f35:	pop    eax
  421f36:	sub    edi,DWORD PTR [esi+ebx*4+0x61]
  421f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f3b:	inc    edi
  421f3c:	push   esi
  421f3d:	jmp    0x421f83
  421f3f:	test   DWORD PTR [esi+0x9da423a],edi
  421f45:	pop    edi
  421f46:	jno    0x421ef8
  421f48:	pop    esp
  421f49:	inc    esi
  421f4a:	mov    edx,DWORD PTR [esi]
  421f4c:	retf   0xfc00
  421f4f:	jns    0x421f10
  421f51:	out    0x54,al
  421f53:	scas   eax,DWORD PTR es:[edi]
  421f54:	(bad)  
  421f55:	xchg   esi,eax
  421f56:	xchg   ebx,eax
  421f57:	popa   
  421f58:	outs   dx,BYTE PTR ds:[esi]
  421f59:	stos   DWORD PTR es:[edi],eax
  421f5a:	jnp    0x421fa6
  421f5c:	mov    eax,ds:0x5995cae9
  421f61:	cmp    eax,ebp
  421f63:	outs   dx,DWORD PTR ds:[esi]
  421f64:	and    edx,DWORD PTR [esi]
  421f66:	jmp    0x421f8d
  421f68:	jecxz  0x421ef5
  421f6a:	pop    es
  421f6b:	mov    edi,0x856664fb
  421f70:	adc    eax,0xa16503cd
  421f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f76:	push   ebp
  421f77:	rcr    BYTE PTR [ecx+eiz*1-0x5b],1
  421f7b:	ficomp WORD PTR gs:[esi]
  421f7e:	push   edi
  421f7f:	adc    eax,DWORD PTR [edx-0x3e6282dd]
  421f85:	xor    eax,DWORD PTR [edi-0x39]
  421f88:	retf   0x3be6
  421f8b:	mov    esp,0x8c5b03c7
  421f90:	icebp  
  421f91:	outs   dx,DWORD PTR ds:[esi]
  421f92:	ss add eax,0x843775f7
  421f98:	adc    al,0x20
  421f9a:	push   ss
  421f9b:	add    eax,0x24af73be
  421fa0:	mov    bl,0xbf
  421fa2:	js     0x422016
  421fa4:	ss push ss
  421fa6:	pop    eax
  421fa7:	fwait
  421fa8:	mov    cl,0x67
  421faa:	pushf  
  421fab:	push   edi
  421fac:	scas   eax,DWORD PTR es:[edi]
  421fad:	(bad)  
  421fae:	in     al,0x84
  421fb0:	dec    esi
  421fb1:	xchg   edi,eax
  421fb2:	dec    edi
  421fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fb4:	maskmovq mm3,(bad)
  421fb5:	neg    DWORD PTR [eax]
  421fb7:	imul   eax,DWORD PTR [edx-0x53],0x5a
  421fbb:	jns    0x421f9a
  421fbd:	in     eax,0x5f
  421fbf:	add    bh,BYTE PTR [eax]
  421fc1:	sbb    al,0x3
  421fc3:	repz xor ch,BYTE PTR [ebp+0x79ea5d45]
  421fca:	mov    ebp,0x8bba14b9
  421fcf:	iret   
  421fd0:	pop    edx
  421fd1:	mov    esi,0x101b7e7b
  421fd6:	pop    ebx
  421fd7:	es (bad) 
  421fd9:	cwde   
  421fda:	repnz cmp eax,0xc5eb9bf0
  421fe0:	push   edi
  421fe2:	jns    0x421f64
  421fe4:	push   eax
  421fe5:	(bad)  
  421fe6:	test   BYTE PTR [ecx-0x7],al
  421fe9:	xor    eax,0x5158869a
  421fee:	popa   
  421fef:	test   eax,edx
  421ff1:	mov    cl,0xf9
  421ff3:	mov    ds:0x7fd9a025,al
  421ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ff9:	leave  
  421ffa:	jne    0x422076
  421ffc:	das    
  421ffd:	sub    al,0x30
  421fff:	ret    
  422000:	sbb    cl,BYTE PTR [ecx]
  422002:	cmp    eax,0xced756dd
  422007:	inc    edx
  422008:	xchg   esi,eax
  422009:	pop    edx
  42200a:	and    edx,esi
  42200c:	mov    WORD PTR [ebp+0x35a75bcf],es
  422012:	lahf   
  422013:	mov    edx,0x711850bc
  422018:	inc    ebx
  422019:	add    BYTE PTR [ecx],bl
  42201b:	sub    DWORD PTR [edx],esi
  42201d:	xchg   edi,eax
  42201e:	sahf   
  42201f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422020:	and    al,0x54
  422022:	test   eax,0x8eb027d0
  422027:	pop    edx
  422028:	out    dx,eax
  422029:	mov    BYTE PTR [ecx],0x4b
  42202c:	daa    
  42202d:	pop    ebp
  42202e:	xor    eax,0x8063c6e
  422033:	sbb    eax,0xc74b1568
  422038:	add    ebp,DWORD PTR ds:[edi+0x7d594aea]
  42203f:	and    al,0x18
  422041:	lea    esi,[ecx-0x5d]
  422044:	test   BYTE PTR [edi-0x45],al
  422047:	adc    DWORD PTR [ebp+0x7],ebx
  42204a:	(bad)  
  42204c:	das    
  42204d:	out    dx,eax
  42204e:	imul   esi,DWORD PTR [eax+0x319a76b1],0xffffffd5
  422055:	test   ecx,0x8cf5ede2
  42205b:	ins    DWORD PTR es:[edi],dx
  42205c:	pop    eax
  42205d:	add    cl,cl
  42205f:	mov    ds:0x3d7c46c0,al
  422064:	sub    eax,0xe992ecd2
  422069:	dec    eax
  42206a:	mov    eax,0xee0bf641
  42206f:	(bad)  
  422070:	adc    eax,0x65390d52
  422075:	mov    ch,0xd5
  422077:	repz jmp 0x42200b
  42207a:	icebp  
  42207b:	jo     0x422005
  42207d:	adc    al,0xf2
  42207f:	cmpps  xmm3,XMMWORD PTR [edx+0x74],0x44
  422084:	pop    esi
  422085:	push   edx
  422086:	cmp    dh,BYTE PTR [esi+0x7d]
  422089:	and    al,0x31
  42208b:	cmp    DWORD PTR [ebx],0xc4783275
  422091:	icebp  
  422092:	repnz inc edi
  422094:	mov    edi,0xd407a95b
  422099:	int3   
  42209a:	popf   
  42209b:	(bad)  
  42209c:	scas   al,BYTE PTR es:[edi]
  42209d:	out    0x52,al
  42209f:	jmp    0x4220d8
  4220a1:	mov    ds:0xc104a19c,al
  4220a6:	(bad)  
  4220a7:	mov    bh,0x66
  4220a9:	pop    ebx
  4220aa:	mov    BYTE PTR [esi+edi*1+0x34],dh
  4220ae:	pop    ebx
  4220af:	repz adc al,0x3f
  4220b2:	xor    al,0xe4
  4220b4:	loope  0x422101
  4220b6:	pop    DWORD PTR [ebx+0x139cb0ef]
  4220bc:	dec    edx
  4220bd:	push   0x7b7df303
  4220c2:	xlat   BYTE PTR ds:[ebx]
  4220c3:	jnp    0x4220b0
  4220c5:	jge    0x4220d3
  4220c7:	out    dx,eax
  4220c8:	stos   BYTE PTR es:[edi],al
  4220c9:	push   ecx
  4220ca:	xor    DWORD PTR [edx],ebx
  4220cc:	in     al,dx
  4220cd:	(bad)  
  4220ce:	icebp  
  4220cf:	sbb    al,0x2
  4220d1:	in     eax,0x27
  4220d3:	mov    eax,0x45abccc3
  4220d8:	mov    edi,0x80cd9106
  4220dd:	or     ax,0x9d52
  4220e1:	sub    ch,BYTE PTR [ebx-0x7b3b13e5]
  4220e7:	inc    eax
  4220e8:	jne    0x4220ec
  4220ea:	inc    edi
  4220eb:	push   esp
  4220ec:	sbb    eax,0x93389728
  4220f1:	jb     0x422073
  4220f3:	mov    DWORD PTR [ecx+0x54441b43],edx
  4220f9:	or     BYTE PTR [esi-0x76ef4ba4],bl
  4220ff:	sub    BYTE PTR [ecx-0x7d],ah
  422102:	into   
  422103:	in     eax,dx
  422104:	dec    eax
  422105:	mov    esp,0x4669d854
  42210a:	push   ds
  42210b:	sbb    ebx,DWORD PTR [esp+ebp*4-0x13]
  42210f:	mov    eax,ds:0xe1cc4e5b
  422114:	fistp  WORD PTR [esi-0x53037cfd]
  42211a:	and    eax,0x1a9c57bb
  42211f:	out    dx,al
  422120:	repz and al,0xb4
  422123:	adc    bh,BYTE PTR [edx]
  422125:	ret    
  422126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422127:	in     al,dx
  422128:	push   ebx
  422129:	xor    ah,BYTE PTR [esi+ebp*1+0x2a]
  42212d:	rol    DWORD PTR [eax-0x19],1
  422130:	push   ebp
  422131:	push   ebx
  422132:	xchg   edi,eax
  422133:	outs   dx,DWORD PTR ds:[esi]
  422134:	call   0xe303ac71
  422139:	xor    BYTE PTR [esi+esi*8+0x5f2ade1],dh
  422140:	or     al,0x6
  422142:	test   DWORD PTR [ebx+ebx*1-0x3a],esi
  422146:	aad    0x68
  422148:	push   ebp
  422149:	gs in  eax,0x42
  42214c:	jne    0x422194
  42214e:	inc    edx
  42214f:	sar    ch,0xc6
  422152:	inc    ebp
  422153:	jge    0x422115
  422155:	cwde   
  422156:	or     eax,0x25ac48b
  42215b:	test   BYTE PTR [ecx+0x4f],0x16
  42215f:	push   ebx
  422160:	sbb    al,0xe4
  422162:	iret   
  422163:	jecxz  0x4221d9
  422165:	addr16 jbe 0x422138
  422168:	dec    ebx
  422169:	xor    eax,0x9c4c6bb3
  42216e:	dec    ebx
  42216f:	mov    esp,0xd22316f3
  422174:	fistp  WORD PTR [esp+eax*4+0x79]
  422178:	(bad)  
  422179:	mov    bl,0x60
  42217b:	sbb    DWORD PTR [edi+0x7792edab],eax
  422181:	out    dx,eax
  422182:	sahf   
  422183:	das    
  422184:	and    al,0xfd
  422186:	fstp   TBYTE PTR [esi]
  422188:	in     eax,dx
  422189:	xor    dl,dl
  42218b:	sub    BYTE PTR [esi+esi*8],dl
  42218e:	sahf   
  42218f:	cmp    al,0xe1
  422191:	scas   al,BYTE PTR es:[edi]
  422192:	stos   BYTE PTR es:[edi],al
  422193:	sub    BYTE PTR gs:[edx],0xa9
  422197:	mov    bh,0xa1
  422199:	push   ds
  42219a:	ins    BYTE PTR es:[edi],dx
  42219b:	mov    DWORD PTR [ebp-0xf1e48e9],esp
  4221a1:	jecxz  0x422170
  4221a3:	mov    dl,0xde
  4221a5:	ja     0x42212a
  4221a7:	je     0x4221ff
  4221a9:	and    DWORD PTR [eax+0x77],esi
  4221ac:	retf   
  4221ad:	lods   eax,DWORD PTR ds:[esi]
  4221ae:	push   esi
  4221af:	scas   al,BYTE PTR es:[edi]
  4221b0:	xor    DWORD PTR [eax-0x68],ebp
  4221b3:	jle    0x4221b7
  4221b5:	mov    cs,WORD PTR ds:0xe8fc2fbf
  4221bb:	mov    ah,0x31
  4221bd:	push   esp
  4221be:	aad    0xa
  4221c0:	jbe    0x42218e
  4221c2:	dec    edi
  4221c3:	rcr    DWORD PTR [edi],0x74
  4221c6:	mov    ?,esi
  4221c8:	adc    BYTE PTR [ecx-0x2d3241d7],0xf5
  4221cf:	xor    BYTE PTR [ebx],bl
  4221d1:	jmp    0x422220
  4221d3:	or     BYTE PTR [edx+0x62],ch
  4221d6:	jl     0x422255
  4221d8:	stos   BYTE PTR es:[edi],al
  4221d9:	imul   esi,DWORD PTR [edx],0x38649ceb
  4221df:	aaa    
  4221e0:	fs pop edx
  4221e2:	ins    DWORD PTR es:[edi],dx
  4221e3:	jle    0x422257
  4221e5:	popf   
  4221e6:	fld    DWORD PTR [ecx-0x33]
  4221e9:	mov    ds:0x52e877bc,al
  4221ee:	jecxz  0x42225c
  4221f0:	dec    ecx
  4221f1:	gs (bad) 
  4221f3:	(bad)  
  4221f4:	bound  edx,QWORD PTR [esi-0x6b7f6320]
  4221fa:	push   esi
  4221fb:	push   ds
  4221fc:	les    esi,FWORD PTR [edi+0x9]
  4221ff:	ds dec edx
  422201:	and    DWORD PTR [edi-0x3a151839],0x33
  422208:	bound  eax,QWORD PTR [eax+0x3b3c1041]
  42220e:	dec    ebp
  42220f:	je     0x42224c
  422211:	or     al,0xa2
  422213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422214:	and    DWORD PTR [edi+0x2c653bf3],ecx
  42221a:	mov    ebp,0xbd38f685
  42221f:	enter  0xc90,0x8d
  422223:	push   ds
  422224:	fsub   QWORD PTR [eax+0x8]
  422227:	lods   eax,DWORD PTR ds:[esi]
  422228:	mov    bh,0x71
  42222a:	shr    DWORD PTR [ebp+0x1919a1c6],0xfd
  422231:	and    BYTE PTR [ebp+ebx*4+0x34],0xb1
  422236:	inc    eax
  422237:	fdivr  st(6),st
  422239:	in     al,dx
  42223a:	mov    BYTE PTR [edi-0x2a],0x53
  42223e:	jbe    0x42225b
  422240:	and    BYTE PTR [edi],bh
  422242:	ret    
  422243:	pop    ebp
  422244:	mov    esi,DWORD PTR [edx]
  422246:	stc    
  422247:	and    edi,esp
  422249:	pop    edi
  42224a:	fs call 0x2ecb:0x28e8501a
  422252:	jl     0x42223c
  422254:	in     eax,dx
  422255:	xchg   edi,eax
  422256:	mov    ebx,0x523d96de
  42225b:	dec    edi
  42225c:	jno    0x422274
  42225e:	push   0xfffffff7
  422260:	pop    eax
  422261:	(bad)  
  422262:	retf   
  422263:	and    al,0x3d
  422265:	das    
  422266:	pop    ss
  422267:	fmulp  st(7),st
  422269:	xor    al,0x3d
  42226b:	mov    al,0x5f
  42226d:	add    ah,dl
  42226f:	sbb    BYTE PTR [eax],bh
  422271:	mov    edx,0x5d13fc2f
  422276:	mov    edi,0x981fefda
  42227b:	jmp    0x6bd3cc55
  422280:	dec    esp
  422281:	cli    
  422282:	iret   
  422283:	test   eax,0x80550e17
  422288:	jns    0x4222a9
  42228a:	(bad)  [ebx-0x10]
  42228d:	out    dx,eax
  42228e:	popf   
  42228f:	fistp  QWORD PTR [esi+edx*4]
  422292:	ret    
  422293:	xchg   edx,eax
  422294:	mov    al,0x7
  422296:	dec    ebx
  422297:	xchg   DWORD PTR [edi-0x7b],esp
  42229a:	imul   DWORD PTR [ebx+0x2831eeb5]
  4222a0:	sub    BYTE PTR [esi-0x70],dl
  4222a3:	push   esp
  4222a4:	inc    esi
  4222a5:	xchg   ecx,eax
  4222a6:	outs   dx,DWORD PTR ds:[esi]
  4222a7:	jmp    0xd355125
  4222ac:	pop    edx
  4222ad:	bound  ebx,QWORD PTR [edi-0x7f2be606]
  4222b3:	sbb    dh,BYTE PTR [edi+0x61]
  4222b6:	(bad)  
  4222b8:	push   esp
  4222b9:	mov    esi,0x3ac48c4c
  4222be:	mov    ds:0x52b39efe,eax
  4222c3:	jne    0x4222c1
  4222c5:	ret    0x8850
  4222c8:	jb     0x42230d
  4222ca:	dec    edx
  4222cb:	icebp  
  4222cc:	xchg   esp,eax
  4222cd:	inc    eax
  4222ce:	jns    0x422347
  4222d0:	aad    0x6e
  4222d2:	inc    ebp
  4222d3:	mov    esp,0x119b4493
  4222d8:	pop    edx
  4222d9:	iret   
  4222da:	mov    eax,ds:0x8c1b41b5
  4222df:	mov    ecx,0xc5d17ead
  4222e4:	cmp    esi,edx
  4222e6:	inc    esp
  4222e7:	fcomp  st(7)
  4222e9:	jecxz  0x4222f1
  4222eb:	add    DWORD PTR [esi+0x63],edi
  4222ee:	cmp    BYTE PTR cs:0xec9a974b,0xdc
  4222f6:	jno    0x422348
  4222f8:	sbb    al,0xd
  4222fa:	sahf   
  4222fb:	out    dx,al
  4222fc:	add    BYTE PTR [eax-0x9b7c00b],dh
  422302:	pop    ecx
  422303:	xchg   ecx,eax
  422304:	es sub al,0x99
  422307:	cmp    esp,edx
  422309:	pop    es
  42230a:	jae    0x42233b
  42230c:	mov    DWORD PTR ds:0xfdaf597,ebx
  422312:	fldl2e 
  422314:	(bad)  
  422315:	aad    0xba
  422317:	(bad)  
  422318:	mov    ch,0xd4
  42231a:	dec    ebx
  42231b:	stc    
  42231c:	mov    esp,0x647f517c
  422321:	(bad)  
  422322:	cli    
  422323:	popf   
  422324:	push   ebx
  422325:	and    al,0x3
  422327:	loope  0x422338
  422329:	test   al,dh
  42232b:	(bad)  
  42232c:	int    0xc7
  42232e:	scas   eax,DWORD PTR es:[edi]
  42232f:	inc    esp
  422330:	xlat   BYTE PTR ds:[ebx]
  422331:	jecxz  0x422303
  422333:	mov    al,0x85
  422335:	mov    eax,DWORD PTR [eax]
  422337:	into   
  422338:	cdq    
  422339:	call   0xa1b7:0xfd127407
  422340:	jnp    0x422382
  422342:	sbb    BYTE PTR [ebx+0x49],ah
  422345:	ror    ebx,0xad
  422348:	in     eax,0xac
  42234a:	in     eax,dx
  42234b:	xor    ah,BYTE PTR [edi+edx*8+0x7939f75e]
  422352:	lds    esi,FWORD PTR [ebx]
  422354:	jbe    0x422380
  422356:	jg     0x4223cf
  422358:	inc    eax
  422359:	popf   
  42235a:	mov    bh,0x15
  42235c:	or     al,0x13
  42235e:	xchg   ecx,eax
  42235f:	push   ebx
  422360:	add    BYTE PTR [ecx+0x4d39bfa8],bh
  422366:	mov    ds:0x5412ac9d,eax
  42236b:	xchg   edi,eax
  42236c:	out    0x9,eax
  42236e:	mov    bh,0xc8
  422370:	push   0xd28d2c14
  422375:	stos   DWORD PTR es:[edi],eax
  422376:	jmp    0xa102:0xbfad9006
  42237d:	neg    DWORD PTR ds:0x632f9416
  422383:	dec    ebx
  422384:	xchg   edx,eax
  422385:	xor    eax,DWORD PTR [ebp+0x1a884ab6]
  42238b:	sbb    al,0x94
  42238d:	jp     0x4223b6
  42238f:	jns    0x422341
  422391:	cmp    dh,ch
  422393:	push   ebp
  422394:	test   dl,0xc1
  422397:	push   ds
  422398:	rcr    BYTE PTR [eax-0x3802b030],0x1f
  42239f:	mov    bh,0x27
  4223a1:	(bad)  
  4223a2:	adc    ebp,edi
  4223a4:	push   edi
  4223a5:	cmp    al,0x21
  4223a7:	mov    WORD PTR [ebp-0x1d7d8199],cs
  4223ad:	lock std 
  4223af:	dec    eax
  4223b0:	ret    
  4223b1:	xchg   edx,eax
  4223b2:	mov    eax,ds:0x310c099b
  4223b7:	shr    BYTE PTR [ecx],1
  4223b9:	or     DWORD PTR [ebp-0x12],eax
  4223bc:	hlt    
  4223bd:	adc    ebp,ebx
  4223bf:	mov    esp,0x1007f509
  4223c4:	sub    edi,DWORD PTR [edi+0x2c]
  4223c7:	jae    0x422446
  4223c9:	mov    al,ds:0xbe19884b
  4223ce:	xor    DWORD PTR [edi+ebp*1+0x56169bf2],ecx
  4223d5:	mov    edx,0x99fe5341
  4223da:	popf   
  4223db:	aad    0x79
  4223dd:	(bad)  
  4223de:	push   ds
  4223df:	outs   dx,DWORD PTR ds:[esi]
  4223e0:	fld    TBYTE PTR [esp+edi*8]
  4223e3:	inc    eax
  4223e4:	sahf   
  4223e5:	sahf   
  4223e6:	test   al,0x17
  4223e8:	xor    al,BYTE PTR [edi+ebx*1]
  4223eb:	dec    ebx
  4223ec:	aad    0xf4
  4223ee:	div    BYTE PTR [ecx+0x36b1b6e1]
  4223f4:	stos   DWORD PTR es:[edi],eax
  4223f5:	xchg   ecx,eax
  4223f6:	jnp    0x422381
  4223f8:	fcom   DWORD PTR [ecx]
  4223fa:	jbe    0x4223e8
  4223fc:	lods   al,BYTE PTR ds:[esi]
  4223fd:	mov    al,ds:0x6119ef15
  422402:	ficomp WORD PTR [eax+0x5b4a36f1]
  422408:	mov    al,ds:0x5f087917
  42240d:	mov    edi,0x3311f12b
  422412:	shl    ebp,0x89
  422415:	cmp    DWORD PTR [ebp+0x7d],ebx
  422418:	xlat   BYTE PTR ds:[ebx]
  422419:	fdiv   QWORD PTR [edi+0x291e339f]
  42241f:	mov    al,BYTE PTR [ecx-0x35]
  422422:	jb     0x422412
  422424:	inc    ebx
  422425:	sbb    bh,0x49
  422428:	shr    BYTE PTR [ebp+0x5af4f09b],cl
  42242e:	mov    BYTE PTR [ebx+0x70],bl
  422431:	loop   0x4223f3
  422433:	mov    al,ds:0x1478ab58
  422438:	fwait
  422439:	ins    DWORD PTR es:[edi],dx
  42243a:	push   0x9d6e3c2a
  42243f:	ficomp DWORD PTR es:[ebx-0x47]
  422443:	mov    bh,0x88
  422445:	add    DWORD PTR [ebx],ecx
  422447:	into   
  422448:	stos   BYTE PTR es:[edi],al
  422449:	adc    al,0xd5
  42244b:	xchg   ebx,eax
  42244c:	sbb    esp,DWORD PTR [ebp-0x2e]
  42244f:	mov    ebp,0x4dbbeac1
  422454:	cmp    DWORD PTR ds:0xde91a56b,ebx
  42245a:	rcr    DWORD PTR [esp+edx*2-0x25],cl
  42245e:	lahf   
  42245f:	mov    bh,0x78
  422461:	lods   al,BYTE PTR ds:[esi]
  422462:	shl    DWORD PTR [ecx+0x3d],0xfd
  422466:	pop    ebx
  422467:	daa    
  422468:	lods   eax,DWORD PTR ds:[esi]
  422469:	and    BYTE PTR ds:0xa7e60362,dh
  42246f:	jb     0x422460
  422471:	cmp    ebx,ebx
  422473:	jne    0x422417
  422475:	mov    dl,0x37
  422477:	mov    ds:0x78733f78,eax
  42247c:	popf   
  42247d:	cdq    
  42247e:	int3   
  42247f:	lea    eax,[eax+0x1f]
  422482:	pop    esi
  422483:	stos   DWORD PTR es:[edi],eax
  422484:	push   0x36389c7b
  422489:	adc    esi,esi
  42248b:	stc    
  42248c:	fisttp DWORD PTR [eax]
  42248e:	mov    bl,0xad
  422490:	inc    edi
  422491:	dec    edi
  422492:	ficom  WORD PTR [ebp-0x7b]
  422495:	imul   edx,esp,0x55933eb7
  42249b:	retf   
  42249c:	xchg   edx,eax
  42249d:	jmp    0x4412:0x7507d552
  4224a4:	call   0x8161:0xcc50d2bd
  4224ab:	push   ds
  4224ac:	popa   
  4224ad:	xchg   ecx,eax
  4224ae:	cmp    eax,0x10850e6d
  4224b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224b4:	push   esp
  4224b5:	jge    0x4224b6
  4224b7:	leave  
  4224b8:	lods   al,BYTE PTR ds:[esi]
  4224b9:	cmp    ebp,ebp
  4224bb:	sub    bh,BYTE PTR [ebx-0x15]
  4224be:	in     al,0x18
  4224c0:	pop    edi
  4224c1:	jnp    0x4224f2
  4224c3:	mov    ch,bl
  4224c5:	dec    esp
  4224c6:	fldenv [ecx+ebx*8]
  4224c9:	mov    ch,0xef
  4224cb:	bound  eax,QWORD PTR [edi+0x5bc596ed]
  4224d1:	sbb    ch,BYTE PTR [ebx]
  4224d3:	push   0x16
  4224d5:	add    ebp,DWORD PTR [edx]
  4224d7:	les    eax,FWORD PTR [edi+0x53b6c274]
  4224dd:	sub    eax,0xb278cc30
  4224e2:	push   eax
  4224e3:	or     BYTE PTR [ecx+0x24],ch
  4224e6:	mov    ecx,0xc773e7e0
  4224eb:	sbb    BYTE PTR [eax+0x7c],ch
  4224ee:	ins    DWORD PTR es:[edi],dx
  4224ef:	and    DWORD PTR [ecx+0x2f90e78f],ebp
  4224f5:	inc    ebx
  4224f6:	xchg   ebp,eax
  4224f7:	in     eax,0xe
  4224f9:	adc    eax,0x4fb7f930
  4224fe:	cmp    esp,eax
  422500:	pop    ecx
  422501:	sub    eax,0xef19dc66
  422506:	popf   
  422507:	mov    cl,BYTE PTR [edi]
  422509:	pop    edx
  42250a:	mov    ch,0x9b
  42250c:	in     eax,dx
  42250d:	ja     0x422551
  42250f:	pop    esp
  422510:	or     dl,BYTE PTR [esi+0x9]
  422513:	dec    ecx
  422514:	pop    ebp
  422515:	push   ss
  422516:	icebp  
  422517:	out    0xb2,al
  422519:	retf   0xb549
  42251c:	push   esi
  42251d:	sub    al,BYTE PTR [edi]
  42251f:	icebp  
  422520:	dec    ebx
  422521:	mov    al,ds:0x5f14b476
  422526:	push   ss
  422527:	inc    ebx
  422528:	(bad)  
  422529:	in     al,dx
  42252a:	addr16 jl 0x422576
  42252d:	out    dx,al
  42252e:	scas   eax,DWORD PTR es:[edi]
  42252f:	push   ebx
  422530:	(bad)  
  422531:	cmp    eax,esi
  422533:	stos   DWORD PTR es:[edi],eax
  422534:	pop    esi
  422535:	imul   esp,DWORD PTR [edi+0x5c],0xe7bc0130
  42253c:	repz out 0xef,eax
  42253f:	and    BYTE PTR ds:0x4d9d3a0a,ch
  422545:	mov    DWORD PTR [ecx-0x86bc649],edi
  42254b:	xchg   edx,eax
  42254c:	add    ebp,0x2e6b32d1
  422552:	mov    ds:0xe16c3a39,eax
  422557:	mov    esi,0x31abd95d
  42255c:	js     0x42251c
  42255e:	add    dh,0x28
  422561:	jae    0x4225ce
  422563:	lods   eax,DWORD PTR ds:[esi]
  422564:	test   al,0x87
  422566:	dec    ecx
  422567:	jp     0x4225cb
  422569:	scas   eax,DWORD PTR es:[edi]
  42256a:	popa   
  42256b:	mov    cl,dl
  42256d:	(bad)  
  42256e:	stc    
  42256f:	jns    0x422581
  422571:	mov    esp,0xbd3b999a
  422576:	in     eax,dx
  422577:	mov    WORD PTR [esi+esi*8],ds
  42257a:	shl    BYTE PTR [edx],cl
  42257c:	xchg   BYTE PTR [eax],ah
  42257e:	jno    0x42253e
  422580:	or     al,BYTE PTR [edi]
  422582:	sub    ebp,edx
  422584:	push   esp
  422585:	add    eax,0x5c7af1ce
  42258a:	std    
  42258b:	xor    cl,bl
  42258d:	(bad)  
  42258e:	pop    esp
  42258f:	fld    TBYTE PTR [ecx]
  422591:	ins    BYTE PTR es:[edi],dx
  422592:	adc    al,0x61
  422594:	or     dl,BYTE PTR [edx]
  422596:	sub    DWORD PTR [esi-0x3b],edx
  422599:	mov    edi,DWORD PTR [edx]
  42259b:	jnp    0x42257c
  42259d:	pop    edi
  42259e:	adc    eax,0xd76a2fe3
  4225a3:	mov    BYTE PTR [ebx],dh
  4225a5:	mov    ebp,0x8710ca3f
  4225aa:	dec    eax
  4225ab:	fs mov cl,0x26
  4225ae:	jmp    0x8edbdc81
  4225b3:	popf   
  4225b4:	mov    ebx,0x87c5eb1c
  4225b9:	mov    esi,0x9b3e5ea0
  4225be:	iret   
  4225bf:	addr16 sub eax,0x7f441a6a
  4225c5:	scas   al,BYTE PTR es:[edi]
  4225c6:	xor    al,0x41
  4225c8:	jnp    0x42263b
  4225ca:	fadd   QWORD PTR [eax+0x35]
  4225cd:	push   ds
  4225ce:	cmp    BYTE PTR [ebp-0x47553c1c],ch
  4225d4:	pop    esi
  4225d5:	xchg   esi,eax
  4225d6:	mov    ds,WORD PTR [edi+0x68]
  4225d9:	push   ss
  4225da:	(bad)  
  4225db:	fdivr  QWORD PTR [esi+0x0]
  4225de:	std    
  4225df:	in     al,dx
  4225e0:	ins    DWORD PTR es:[edi],dx
  4225e1:	test   al,ah
  4225e3:	stos   BYTE PTR es:[edi],al
  4225e4:	int    0x2d
  4225e6:	lock test eax,0x88a0e1fb
  4225ec:	(bad)  
  4225ed:	cwde   
  4225ee:	mov    edx,0xbbf1e2e8
  4225f3:	nop
  4225f4:	pop    edi
  4225f5:	jbe    0x4225cf
  4225f7:	fnstcw WORD PTR [edx+0xe]
  4225fa:	pushf  
  4225fb:	cmc    
  4225fc:	das    
  4225fd:	xchg   ebp,eax
  4225fe:	push   0xffffff80
  422600:	cmp    eax,0x68f2dc9e
  422605:	and    ecx,eax
  422607:	sahf   
  422608:	pop    es
  422609:	pop    esi
  42260a:	add    cl,BYTE PTR [esi]
  42260c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42260e:	repnz pusha 
  422610:	inc    ebp
  422611:	aad    0x3e
  422613:	add    dh,BYTE PTR [edx+0x27]
  422616:	xlat   BYTE PTR ds:[ebx]
  422617:	(bad)  
  422618:	push   ss
  422619:	add    al,0xb8
  42261b:	mov    ds:0x34e446af,eax
  422620:	test   al,0x2a
  422622:	jg     0x4225d7
  422624:	out    0x39,al
  422626:	ds push cs
  422628:	in     eax,dx
  422629:	icebp  
  42262a:	retf   0x9a87
  42262d:	cmp    ch,ch
  42262f:	popf   
  422630:	enter  0x429e,0x8
  422634:	int    0x19
  422636:	iret   
  422637:	mov    ds:0x3324c7c7,al
  42263c:	sbb    BYTE PTR [ebx+0x67],dl
  42263f:	lds    edx,FWORD PTR [edx+eax*4+0x78]
  422643:	das    
  422644:	push   ss
  422645:	mov    ds:0x91a6ce71,eax
  42264a:	das    
  42264b:	ret    
  42264c:	and    DWORD PTR [ebp-0x37],ebx
  42264f:	retf   0x67ef
  422652:	jo     0x422677
  422654:	xchg   ecx,eax
  422655:	test   al,0x9
  422657:	hlt    
  422658:	sub    dh,BYTE PTR [edx+0x11]
  42265b:	leave  
  42265c:	dec    ebp
  42265d:	inc    esp
  42265e:	aas    
  42265f:	mov    edx,0x8ae8405b
  422664:	(bad)  
  422665:	aas    
  422666:	xchg   esi,eax
  422667:	jo     0x42268f
  422669:	add    ebp,DWORD PTR [edi+0x19]
  42266c:	scas   al,BYTE PTR es:[edi]
  42266d:	or     al,0xd8
  42266f:	out    0x4e,al
  422671:	cld    
  422672:	fsubr  st,st(0)
  422674:	push   edx
  422675:	mul    DWORD PTR [ebx]
  422677:	push   0xf
  422679:	scas   al,BYTE PTR es:[edi]
  42267a:	pusha  
  42267b:	inc    edi
  42267c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267d:	or     BYTE PTR [ecx-0x2f],dl
  422680:	dec    ebx
  422681:	cs inc ebx
  422683:	repnz xor edi,edi
  422686:	sub    BYTE PTR [eax-0x77],bh
  422689:	je     0x422685
  42268b:	xor    dl,bl
  42268d:	(bad)  
  42268e:	jbe    0x4226c5
  422690:	jmp    0x422683
  422692:	and    al,0xca
  422694:	adc    ebx,DWORD PTR [edx+0x5b]
  422697:	add    eax,0xbcd5358b
  42269c:	xchg   ebx,eax
  42269d:	or     bh,BYTE PTR [edi-0x1d058bf]
  4226a3:	sbb    DWORD PTR [edx+0x5a],ebx
  4226a6:	xor    bl,BYTE PTR [edx-0x74]
  4226a9:	std    
  4226aa:	ins    BYTE PTR es:[edi],dx
  4226ab:	stos   BYTE PTR es:[edi],al
  4226ac:	cmp    DWORD PTR [edi],eax
  4226ae:	mov    al,0x6
  4226b0:	dec    ebx
  4226b1:	cmp    BYTE PTR [ebp-0x7ff9d349],dl
  4226b7:	mov    ebp,DWORD PTR [ecx-0x2a11562a]
  4226bd:	mov    ds:0xff771871,eax
  4226c2:	gs and eax,esp
  4226c5:	pop    ecx
  4226c6:	retf   0x45ab
  4226c9:	adc    ebx,edx
  4226cb:	jmp    0x94de937a
  4226d0:	mov    ch,0x29
  4226d2:	push   0x4f1dd3a4
  4226d7:	push   0xffffffab
  4226d9:	push   esp
  4226da:	add    eax,DWORD PTR [ebp-0x5f]
  4226dd:	mov    dl,0x3f
  4226df:	jp     0x422706
  4226e1:	cdq    
  4226e2:	loope  0x42266a
  4226e4:	inc    ebx
  4226e5:	mov    al,0x7
  4226e7:	sub    al,BYTE PTR [ecx]
  4226e9:	adc    BYTE PTR [eax+0x16],0x43
  4226ed:	jl     0x4226cf
  4226ef:	retf   0x3215
  4226f2:	mov    bl,0x43
  4226f4:	ffree  st(5)
  4226f6:	rcl    edi,0xed
  4226f9:	ror    BYTE PTR [esi+0x4d7f539],1
  4226ff:	cmc    
  422700:	(bad)  
  422701:	push   ebp
  422702:	and    esi,DWORD PTR [edi]
  422704:	adc    esp,esp
  422706:	shl    BYTE PTR ds:0x8725a61a,cl
  42270c:	dec    edx
  42270d:	xlat   BYTE PTR ds:[ebx]
  42270e:	mov    ebp,0x3d713088
  422713:	mov    bl,bh
  422715:	xor    ecx,DWORD PTR ds:0xa8307285
  42271b:	loop   0x4226d8
  42271d:	inc    ebx
  42271f:	pop    ebp
  422720:	add    BYTE PTR [ecx-0x36],0x9d
  422724:	popf   
  422725:	xchg   BYTE PTR [eax+esi*4-0x66f35527],ah
  42272c:	jl     0x42278c
  42272e:	stc    
  42272f:	or     BYTE PTR [edi-0x6d],al
  422732:	mov    al,0xfd
  422734:	fbstp  TBYTE PTR [ecx-0x4a]
  422737:	stc    
  422738:	xchg   DWORD PTR [eax],ecx
  42273a:	es mov dl,0x1
  42273d:	xor    eax,ebp
  42273f:	loopne 0x422788
  422741:	popa   
  422742:	jne    0x42276c
  422744:	aas    
  422745:	sbb    al,0xe9
  422747:	mov    al,0x42
  422749:	cmp    cl,BYTE PTR [ebp-0x64af6cc5]
  42274f:	add    dh,bl
  422751:	imul   ebx,DWORD PTR ds:0xe907f37d,0x2123a5d5
  42275b:	aam    0xae
  42275d:	jbe    0x4227bd
  42275f:	push   ecx
  422760:	aas    
  422761:	mov    WORD PTR [ebp-0x3b022cfd],fs
  422767:	sub    ch,BYTE PTR [ebp+0x55]
  42276a:	mov    BYTE PTR [ebx+0x2bbf2d2e],al
  422770:	jno    0x42272f
  422772:	(bad)  
  422774:	bound  eax,QWORD PTR [esi+edi*2+0x6f4608b7]
  42277b:	inc    esp
  42277c:	inc    ecx
  42277d:	and    ebx,DWORD PTR [edi]
  42277f:	add    eax,0xa7889671
  422784:	cmp    BYTE PTR [esi-0x1e305f47],bl
  42278a:	jae    0x422761
  42278c:	push   0x8e5244f
  422791:	mov    al,0x55
  422793:	sbb    ecx,DWORD PTR [eax+0x32]
  422796:	cmp    DWORD PTR [edx+0x7a],0x9
  42279a:	pop    ebp
  42279b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42279c:	imul   esi,DWORD PTR [ebp-0x1bee56d8],0xffffffcb
  4227a3:	aam    0x18
  4227a5:	int3   
  4227a6:	call   0x6f51:0x6b16fd6a
  4227ad:	and    dh,ch
  4227af:	mov    eax,0xdc9a34dc
  4227b4:	mov    ebx,0xdbf66f02
  4227b9:	(bad)  
  4227ba:	sbb    eax,0x7ee1e35d
  4227bf:	leave  
  4227c0:	test   al,0x3d
  4227c2:	or     ebx,edx
  4227c4:	inc    ebp
  4227c5:	pusha  
  4227c6:	shl    BYTE PTR [ebx],0x21
  4227c9:	fwait
  4227ca:	sahf   
  4227cb:	dec    ecx
  4227cc:	jmp    0xd3e5fc76
  4227d1:	loopne 0x422765
  4227d3:	push   ebp
  4227d4:	gs mov bl,0xac
  4227d7:	ficom  WORD PTR [ecx+0x37]
  4227da:	ds dec esp
  4227dc:	cmp    ah,cl
  4227de:	nop
  4227df:	sub    DWORD PTR [esi+0x12],ecx
  4227e2:	push   0x29
  4227e4:	jg     0x422848
  4227e6:	nop
  4227e7:	or     al,0x37
  4227e9:	add    cl,0xe2
  4227ec:	mov    dh,0x54
  4227ee:	jecxz  0x422801
  4227f0:	(bad)  
  4227f1:	fstp   QWORD PTR [ebp+0x51]
  4227f4:	outs   dx,DWORD PTR ds:[esi]
  4227f5:	(bad)  
  4227f6:	mov    edx,0xf21fb1f
  4227fb:	inc    ecx
  4227fc:	xchg   edx,eax
  4227fd:	pop    ecx
  4227fe:	repz out dx,eax
  422800:	repnz mov esi,0x57cb64f7
  422806:	sbb    BYTE PTR [edi+ebp*4-0x2a],bl
  42280a:	pop    ss
  42280b:	in     al,0x9
  42280d:	mov    edi,0xe3db96dd
  422812:	cmp    ah,BYTE PTR [esp+eax*2]
  422815:	add    al,0xbf
  422817:	scas   al,BYTE PTR es:[edi]
  422818:	or     eax,0xc13a5934
  42281d:	arpl   WORD PTR [ebx-0x16a818ee],bx
  422823:	mov    al,ds:0x8321944b
  422828:	dec    edi
  422829:	push   esi
  42282a:	fwait
  42282b:	mov    esp,ds
  42282d:	in     eax,dx
  42282e:	outs   dx,DWORD PTR ds:[esi]
  42282f:	pop    es
  422830:	rsm    
  422832:	fldenv [eax-0x26]
  422835:	(bad)  
  422836:	mov    edx,0xf35ab27e
  42283b:	call   0xa532:0x4c30193b
  422842:	ja     0x422891
  422844:	mov    al,ds:0xec67f942
  422849:	mov    al,ds:0x7145062e
  42284e:	push   0x2eed81cd
  422853:	outs   dx,BYTE PTR ds:[esi]
  422854:	daa    
  422855:	shr    dl,cl
  422857:	mov    edi,0x11d4d987
  42285c:	mov    eax,0x780d308b
  422861:	in     al,dx
  422862:	push   0xac6136e6
  422867:	jnp    0x4228bc
  422869:	or     ch,bh
  42286b:	and    eax,0x5fe64271
  422870:	shl    BYTE PTR [esi],1
  422872:	xor    dh,bh
  422874:	rol    DWORD PTR [edi+0x6e],1
  422877:	pusha  
  422878:	loope  0x4228e6
  42287a:	push   0x58e2494e
  42287f:	mov    esi,0x29c21675
  422884:	es inc esp
  422886:	je     0x42288a
  422888:	int3   
  422889:	xchg   ebx,eax
  42288a:	sub    DWORD PTR [ecx+ecx*2+0x71],0xffffffa5
  42288f:	test   al,0xfc
  422891:	gs jb  0x422866
  422894:	push   ss
  422895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422896:	mov    edi,0x87465cb5
  42289b:	call   DWORD PTR [esi-0x43ef1c00]
  4228a1:	jp     0x4228a0
  4228a3:	div    ch
  4228a5:	jg     0x4228e6
  4228a7:	mov    esp,ecx
  4228a9:	js     0x422907
  4228ab:	and    edi,eax
  4228ad:	push   0xf4a2c196
  4228b2:	inc    ebp
  4228b3:	sti    
  4228b4:	cmp    eax,0xbb7ac01a
  4228b9:	lds    eax,FWORD PTR [ebx+0x2b]
  4228bc:	in     eax,0xa9
  4228be:	sti    
  4228bf:	out    0x9f,eax
  4228c1:	mov    ebp,0x855c2b39
  4228c6:	sti    
  4228c7:	push   0x14
  4228c9:	push   esi
  4228ca:	adc    eax,0x20812624
  4228cf:	add    bl,BYTE PTR ds:[ecx]
  4228d2:	push   edi
  4228d3:	pop    esp
  4228d4:	gs enter 0x3c7b,0xad
  4228d9:	dec    esi
  4228da:	sbb    al,0x91
  4228dc:	cmp    ebp,ecx
  4228de:	ss hlt 
  4228e0:	loope  0x422961
  4228e2:	sbb    edx,DWORD PTR [edi-0x35f1e9a2]
  4228e8:	data16 ficomp DWORD PTR [eax]
  4228eb:	pop    ss
  4228ec:	sub    BYTE PTR ds:0x5d696b60,ch
  4228f2:	xchg   ebx,eax
  4228f3:	mov    ch,0x96
  4228f5:	repnz xchg esp,eax
  4228f7:	push   ebx
  4228f8:	out    dx,eax
  4228f9:	rcl    DWORD PTR [eax+0x6de0f388],0xee
  422900:	loope  0x4228d6
  422902:	les    edi,FWORD PTR [esi+0x18]
  422905:	adc    eax,0x7c7eba7c
  42290a:	cmp    eax,DWORD PTR [esi+0x62]
  42290d:	ret    0x9854
  422910:	daa    
  422911:	rcr    BYTE PTR [ecx-0x2a],0x92
  422915:	stos   DWORD PTR es:[edi],eax
  422916:	or     DWORD PTR [edi-0x11],eax
  422919:	cmp    eax,0x1a40f62d
  42291e:	pop    esi
  42291f:	lds    ebp,FWORD PTR [edi]
  422921:	js     0x422935
  422923:	pop    ds
  422924:	in     al,dx
  422925:	jge    0x422957
  422927:	nop
  422928:	xchg   esi,eax
  422929:	mov    dh,0x3f
  42292b:	(bad)  
  42292c:	sbb    DWORD PTR [ebx],0x56679c58
  422932:	inc    ebp
  422933:	mov    ch,0x27
  422935:	rcl    DWORD PTR [eax+0x3c73433d],0xb6
  42293c:	pop    ecx
  42293d:	aam    0x86
  42293f:	std    
  422940:	jg     0x42292e
  422942:	mov    ebx,0xab432ccf
  422947:	icebp  
  422948:	jle    0x422946
  42294a:	addr16 xchg edx,eax
  42294c:	rcl    DWORD PTR [ebx+0x3a],0xf5
  422950:	les    ecx,FWORD PTR [eax-0x44]
  422953:	aas    
  422954:	mov    bh,0x94
  422956:	dec    edi
  422957:	mov    ah,0x68
  422959:	jmp    0xfc23:0xb684037e
  422960:	fwait
  422961:	addr16 retf 
  422963:	outs   dx,DWORD PTR ds:[esi]
  422964:	pop    eax
  422965:	fistp  DWORD PTR [ecx]
  422967:	(bad)  
  422968:	dec    ebx
  422969:	imul   edi,ebx,0xba26b57d
  42296f:	retf   0xb401
  422972:	add    ebx,edx
  422974:	push   es
  422975:	inc    edi
  422976:	inc    edx
  422977:	stos   DWORD PTR es:[edi],eax
  422978:	sub    al,0x47
  42297a:	push   ebx
  42297b:	push   ebx
  42297c:	push   ebp
  42297d:	mov    al,ds:0x7468f3f8
  422982:	mov    BYTE PTR [ebp-0x7c],bh
  422985:	sbb    eax,0xf548c853
  42298a:	or     DWORD PTR [esi],0x6e7d59b0
  422990:	ins    BYTE PTR es:[edi],dx
  422991:	cld    
  422992:	sub    BYTE PTR [edi-0x7d481640],cl
  422998:	mov    dh,0x55
  42299a:	stos   DWORD PTR es:[edi],eax
  42299b:	mov    cl,0xc2
  42299d:	jge    0x4229cd
  42299f:	mov    dl,0xa2
  4229a1:	sahf   
  4229a2:	loop   0x4229a1
  4229a4:	mov    ah,0x34
  4229a6:	pop    esi
  4229a7:	sbb    BYTE PTR [eax+0x5a3f6500],ch
  4229ad:	mov    al,0x4b
  4229af:	jmp    0x5dbd:0xf2bb569f
  4229b6:	icebp  
  4229b7:	les    esi,FWORD PTR [ebx+eiz*4+0x67a808d9]
  4229be:	xchg   DWORD PTR [ebp+0x3d392d1b],esi
  4229c4:	sbb    eax,0x8a7050b4
  4229c9:	pop    edx
  4229ca:	push   0x7d
  4229cc:	push   esi
  4229cd:	or     eax,0xb47596bd
  4229d2:	lea    esi,[ebx]
  4229d4:	imul   edx,DWORD PTR [eax+edx*4+0x4e],0xffffffd8
  4229d9:	push   cs
  4229da:	popf   
  4229db:	out    0xdf,al
  4229dd:	sub    edx,DWORD PTR [ebx-0x645128dd]
  4229e3:	aam    0x66
  4229e5:	xchg   edx,eax
  4229e6:	mov    ah,0x4d
  4229e8:	lea    edx,[edi]
  4229ea:	push   0x52fe94a4
  4229ef:	push   ss
  4229f0:	adc    al,0xb8
  4229f2:	in     eax,0xf5
  4229f4:	adc    eax,ecx
  4229f6:	mov    bh,0x88
  4229f8:	adc    dh,BYTE PTR [edi+0x3937a94a]
  4229fe:	add    al,0x7a
  422a00:	mov    edx,0xea8082c2
  422a05:	jns    0x422a69
  422a07:	cld    
  422a08:	pop    ds
  422a09:	(bad)  
  422a0a:	jl     0x422a5b
  422a0c:	jecxz  0x422a19
  422a0e:	out    dx,eax
  422a0f:	retf   
  422a10:	cmp    al,BYTE PTR [edi]
  422a12:	repnz mov ds:0xd8887a6e,al
  422a18:	mov    esp,0x43d9d62d
  422a1d:	cmp    al,0x8
  422a1f:	add    al,0x4c
  422a21:	dec    edi
  422a22:	fstp   QWORD PTR ds:0xdf2942b4
  422a28:	and    al,bl
  422a2a:	cmp    eax,edx
  422a2c:	xchg   ebx,eax
  422a2d:	sub    DWORD PTR [edx],ecx
  422a2f:	push   ecx
  422a30:	push   esi
  422a31:	sbb    DWORD PTR [ecx-0x192c6674],ebp
  422a37:	aad    0x71
  422a39:	sub    eax,DWORD PTR [eax-0x56]
  422a3c:	call   0xa7af6048
  422a41:	ss icebp 
  422a43:	int3   
  422a44:	shl    DWORD PTR [ecx+edi*1],cl
  422a47:	out    dx,eax
  422a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a49:	mov    esi,0xd04c6f4f
  422a4e:	fsubr  QWORD PTR [edx+0x20427320]
  422a54:	sub    ah,dh
  422a56:	pop    ds
  422a57:	inc    esi
  422a58:	and    DWORD PTR [esi+ebp*1],edx
  422a5b:	mov    DWORD PTR [ebx],eax
  422a5d:	icebp  
  422a5e:	cmp    bl,BYTE PTR [esi+ebx*2-0x6235aca4]
  422a65:	ret    0xdcc7
  422a68:	fiadd  WORD PTR [ebx]
  422a6a:	outs   dx,BYTE PTR ds:[esi]
  422a6b:	jb     0x422ab3
  422a6d:	cmp    BYTE PTR [edx+0x4ed88d5a],ch
  422a73:	inc    edi
  422a74:	fmul   st(6),st
  422a76:	lds    eax,FWORD PTR gs:[edx]
  422a79:	push   esi
  422a7a:	inc    ebp
  422a7b:	ror    DWORD PTR [ebx+0x57711eab],0xf5
  422a82:	fld    st(5)
  422a84:	aas    
  422a85:	jo     0x422a35
  422a87:	rcr    DWORD PTR [edi-0x6c],0xe3
  422a8b:	mov    BYTE PTR [edx-0x7ef85018],ah
  422a91:	inc    edi
  422a92:	add    DWORD PTR [ebp+0x64fd3d84],edx
  422a98:	sub    eax,0x83f05b6d
  422a9d:	pop    edi
  422a9e:	add    DWORD PTR [edx+eiz*4],esi
  422aa1:	std    
  422aa2:	push   ds
  422aa3:	jne    0x422a53
  422aa5:	aad    0xad
  422aa7:	pop    eax
  422aa8:	jo     0x422a59
  422aaa:	leave  
  422aab:	sub    ebx,DWORD PTR [ebx+ecx*1+0x776e24d5]
  422ab2:	fnstcw WORD PTR [eax-0x71]
  422ab5:	dec    ebp
  422ab6:	mov    edx,DWORD PTR [ebx+0xad5033e]
  422abc:	mov    ebp,0xbb8b9cf0
  422ac1:	rcl    BYTE PTR [ebx-0x1ef3c22a],1
  422ac7:	xchg   edi,eax
  422ac8:	in     al,dx
  422ac9:	clc    
  422aca:	lds    edx,FWORD PTR [esi+eax*2]
  422acd:	jmp    0xb29b2121
  422ad2:	dec    esi
  422ad3:	call   0xc2bba4ff
  422ad8:	lock cwde 
  422ada:	and    DWORD PTR [ecx+eiz*8+0x200ec06f],ebp
  422ae1:	jne    0x422b01
  422ae3:	enter  0xe714,0x6c
  422ae7:	dec    eax
  422ae8:	hlt    
  422ae9:	jmp    0x422abe
  422aeb:	xchg   edx,eax
  422aec:	cmp    eax,0xc9b985d9
  422af1:	jmp    DWORD PTR [ecx+0x3719caa3]
  422af7:	sub    al,0x63
  422af9:	dec    edi
  422afa:	jp     0x422b14
  422afc:	jne    0x422b34
  422afe:	add    esp,edx
  422b00:	pop    esi
  422b01:	jb     0x422b7f
  422b03:	mov    es,WORD PTR [edx+0x37]
  422b06:	(bad)  
  422b07:	cmp    ecx,DWORD PTR [ecx+0x54195e7e]
  422b0d:	or     DWORD PTR [eax+edi*1-0x18],ebp
  422b11:	fiadd  WORD PTR [edi+edx*4]
  422b14:	sbb    al,0xf0
  422b16:	fsubr  QWORD PTR [esi]
  422b18:	dec    edx
  422b19:	std    
  422b1a:	xchg   ebp,eax
  422b1b:	std    
  422b1c:	inc    edi
  422b1d:	mov    dl,BYTE PTR [edx-0x48]
  422b20:	ficom  WORD PTR ds:0x55f0e0c0
  422b26:	mov    eax,ds:0xc177a587
  422b2b:	fs mov al,0xd
  422b2e:	out    0x7f,eax
  422b30:	jb     0x422b3e
  422b32:	cdq    
  422b33:	mov    eax,ds:0xa7306224
  422b38:	ja     0x422b5b
  422b3a:	lods   al,BYTE PTR ds:[esi]
  422b3b:	mov    ch,0x7e
  422b3d:	cmp    bh,BYTE PTR [edx-0x68]
  422b40:	int    0xb5
  422b42:	(bad)  
  422b43:	pop    edi
  422b44:	cmp    cl,bl
  422b46:	js     0x422afb
  422b48:	sbb    eax,0xce1c818d
  422b4d:	inc    ebp
  422b4e:	mov    ebp,0xfc571b2e
  422b53:	dec    edx
  422b54:	xchg   esi,eax
  422b55:	pop    ebp
  422b56:	and    eax,0x798cc495
  422b5b:	aaa    
  422b5c:	dec    ebx
  422b5d:	dec    edi
  422b5e:	xor    BYTE PTR [edx+0x3f],0xb
  422b62:	call   0x21db33f9
  422b67:	xlat   BYTE PTR ds:[ebx]
  422b68:	fs mov edi,0x621d5d5c
  422b6e:	inc    ecx
  422b6f:	out    dx,eax
  422b70:	ds dec eax
  422b72:	sbb    eax,0x70f56c05
  422b77:	lock dec ecx
  422b79:	mov    eax,0xdb196c8e
  422b7e:	dec    esi
  422b7f:	pop    edi
  422b80:	and    esp,edi
  422b82:	cmp    dl,al
  422b84:	push   ss
  422b85:	xchg   ebp,eax
  422b86:	jbe    0x422b15
  422b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b89:	fldcw  WORD PTR [ecx-0x79]
  422b8c:	cwde   
  422b8d:	cli    
  422b8e:	fnstsw WORD PTR [ebx-0x7d]
  422b91:	das    
  422b92:	leave  
  422b93:	mov    BYTE PTR [edx+0x66],dh
  422b96:	mov    esi,0x1451c21f
  422b9b:	fwait
  422b9c:	jl     0x422b9e
  422b9e:	sub    eax,0x50728df1
  422ba3:	push   ss
  422ba4:	mov    di,0x55e5
  422ba8:	ins    BYTE PTR es:[edi],dx
  422ba9:	jmp    0xa6c:0x6fbb9948
  422bb0:	xor    DWORD PTR [ebx+eax*2+0xeed23d],edi
  422bb7:	jae    0x422b76
  422bb9:	rol    BYTE PTR [ecx*8+0x2a78f8d7],0x15
  422bc1:	mov    edi,0x437b3f4d
  422bc6:	jge    0x422be7
  422bc8:	arpl   cx,dx
  422bca:	addr16 jp 0x422bce
  422bcd:	pusha  
  422bce:	pop    ecx
  422bcf:	or     ecx,ecx
  422bd1:	jno    0x422bf7
  422bd3:	inc    ecx
  422bd4:	inc    esi
  422bd5:	pop    edx
  422bd7:	xchg   ebx,eax
  422bd8:	or     al,0x5a
  422bda:	sub    BYTE PTR cs:[esi+0x7d29c3e4],bh
  422be1:	inc    ebp
  422be2:	mov    ds:0x6d5ffe94,al
  422be7:	jg     0x422c0c
  422be9:	cmp    ecx,DWORD PTR [ecx-0x3c]
  422bec:	jb     0x422b7a
  422bee:	sub    DWORD PTR [eax+0x11],ecx
  422bf1:	ins    BYTE PTR es:[edi],dx
  422bf2:	mov    ah,0x51
  422bf4:	(bad)  
  422bf5:	aam    0xf1
  422bf7:	jp     0x422baf
  422bf9:	jmp    0x3d0a:0x80e4a077
  422c00:	and    eax,0x1982cb90
  422c05:	sub    al,0x89
  422c07:	add    al,0xb8
  422c09:	(bad)  
  422c0a:	fldenv [esi-0x5a234868]
  422c10:	dec    ebx
  422c11:	es cwde 
  422c13:	fdivr  DWORD PTR ss:[ecx-0x66f94037]
  422c1a:	mov    eax,ds:0xeac1fe0e
  422c1f:	fmul   QWORD PTR [edi]
  422c21:	cmp    ebp,DWORD PTR [ecx-0x1e]
  422c24:	je     0x422c00
  422c26:	test   bl,bl
  422c28:	inc    ebp
  422c29:	ins    BYTE PTR es:[edi],dx
  422c2a:	out    dx,eax
  422c2b:	test   BYTE PTR [eax],cl
  422c2d:	clc    
  422c2e:	sahf   
  422c2f:	add    DWORD PTR [ecx-0x764e58e6],ebx
  422c35:	repz pop ss
  422c37:	mov    eax,0x200e64dc
  422c3c:	out    dx,eax
  422c3d:	arpl   WORD PTR [ecx],cx
  422c3f:	and    BYTE PTR [ebp-0x79b99586],bh
  422c45:	inc    edx
  422c46:	jae    0x422c28
  422c48:	or     BYTE PTR [edi+0x65],dl
  422c4b:	or     BYTE PTR [eax+0x18],bh
  422c4e:	mov    dl,0x62
  422c50:	inc    ebp
  422c51:	cmp    eax,0x9ba777f7
  422c56:	mov    bl,0x6c
  422c58:	mov    ebp,DWORD PTR [esi]
  422c5a:	inc    edi
  422c5b:	imul   ecx,DWORD PTR [edx+edi*8-0x6e1e807e],0xad79b8f8
  422c66:	ss dec edx
  422c68:	cmp    DWORD PTR ds:0xdd801b0b,eax
  422c6e:	lahf   
  422c6f:	fdivp  st(5),st
  422c71:	sbb    DWORD PTR [edi+ebx*1],ebx
  422c74:	pop    edi
  422c75:	in     al,0x6c
  422c77:	mov    WORD PTR [ebx-0x19bf94e1],cs
  422c7d:	lahf   
  422c7e:	adc    al,0x96
  422c80:	mov    ah,0x99
  422c82:	push   edi
  422c83:	cs jle 0x422ccc
  422c86:	pop    esp
  422c87:	fidiv  WORD PTR [edx-0x38]
  422c8a:	jo     0x422cfa
  422c8c:	std    
  422c8d:	into   
  422c8e:	mov    ah,0xcc
  422c90:	test   al,0xff
  422c92:	fnstcw WORD PTR [edi+ebp*2+0x5eedbcc1]
  422c99:	lock retf 
  422c9b:	je     0x422c58
  422c9d:	scas   al,BYTE PTR es:[edi]
  422c9e:	je     0x422cf0
  422ca0:	inc    ebx
  422ca1:	mov    fs,WORD PTR [eax+0x1e73451]
  422ca7:	inc    ebp
  422ca8:	rcl    BYTE PTR [ecx+0x67],1
  422cab:	test   eax,0x6c9cf3d8
  422cb0:	scas   al,BYTE PTR es:[edi]
  422cb1:	mov    eax,0xcadd15ac
  422cb6:	cmp    al,0x38
  422cb8:	pop    DWORD PTR [ecx-0x7abbf223]
  422cbe:	or     al,0x9d
  422cc0:	retf   
  422cc1:	lds    eax,FWORD PTR [eax-0x785a8a94]
  422cc7:	pop    ss
  422cc8:	push   esp
  422cc9:	jl     0x422c63
  422ccb:	fdiv   DWORD PTR [edx-0x44]
  422cce:	int    0x83
  422cd0:	push   esp
  422cd1:	lds    ebx,FWORD PTR [ecx+0x1c]
  422cd4:	pop    edi
  422cd5:	popf   
  422cd6:	push   ss
  422cd7:	inc    esi
  422cd8:	cmp    ebx,DWORD PTR [edx+0x19578794]
  422cde:	push   eax
  422cdf:	mov    dh,0x11
  422ce1:	adc    al,0x4d
  422ce3:	or     eax,0x578e19e8
  422ce8:	mov    bh,0xf8
  422cea:	cwde   
  422ceb:	ds push eax
  422ced:	das    
  422cee:	mov    dl,0x41
  422cf0:	xchg   edx,eax
  422cf1:	hlt    
  422cf2:	or     ch,BYTE PTR [ebx]
  422cf4:	xchg   edx,eax
  422cf5:	lds    esi,FWORD PTR ds:0x64e3a39b
  422cfb:	and    BYTE PTR [edx],0xd
  422cfe:	inc    eax
  422cff:	ror    cl,cl
  422d01:	aaa    
  422d02:	add    al,0xd0
  422d04:	xlat   BYTE PTR ds:[ebx]
  422d05:	addr16 xor eax,0xec09e14d
  422d0b:	pop    edi
  422d0c:	fld    DWORD PTR [ecx]
  422d0e:	push   ds
  422d0f:	pop    edi
  422d10:	cwde   
  422d11:	xchg   esp,eax
  422d12:	out    0x62,eax
  422d14:	dec    esp
  422d15:	dec    ebx
  422d16:	test   esi,esi
  422d18:	sbb    dh,BYTE PTR ss:[ebx-0x3b25dbe]
  422d1f:	mov    DWORD PTR [eax+eax*1+0xbbadf72],edx
  422d26:	ret    
  422d27:	fdiv   DWORD PTR [edi]
  422d29:	inc    edx
  422d2a:	inc    ebp
  422d2b:	stos   BYTE PTR es:[edi],al
  422d2c:	add    eax,0x46ddc0e6
  422d31:	aad    0x7d
  422d33:	dec    ebp
  422d34:	mov    ebx,DWORD PTR [esi-0x2c337d0f]
  422d3a:	dec    edx
  422d3b:	sbb    eax,0x7e487339
  422d40:	test   eax,0xbc15d96f
  422d45:	int    0xf0
  422d47:	push   edx
  422d48:	int    0x4a
  422d4a:	imul   edx,DWORD PTR [ecx-0x35230b65],0xffffffc2
  422d51:	xor    dx,bp
  422d54:	mov    ebp,ebp
  422d56:	push   esi
  422d57:	popa   
  422d58:	mov    eax,0xeccda779
  422d5d:	pop    edi
  422d5e:	test   BYTE PTR [ebx-0x4e12b19d],0xe1
  422d65:	sbb    BYTE PTR [edx+0x937ef2f],cl
  422d6b:	ret    0x65
  422d6e:	add    al,0xae
  422d70:	shr    BYTE PTR [edx],1
  422d72:	push   ebx
  422d73:	xor    al,0x42
  422d75:	mov    eax,ds:0x234fae07
  422d7a:	xchg   dh,ch
  422d7c:	fidivr DWORD PTR [ecx]
  422d7e:	sub    DWORD PTR [edi-0x39],esi
  422d81:	pop    esp
  422d82:	add    ebx,edi
  422d84:	mov    ch,0xe2
  422d86:	sub    DWORD PTR ds:0x2da895af,ebp
  422d8c:	pop    ss
  422d8d:	sbb    al,0x5d
  422d8f:	xor    DWORD PTR [eax],0x604c2a89
  422d95:	inc    edi
  422d96:	mov    dh,0xdc
  422d98:	mov    al,0xe5
  422d9a:	lods   al,BYTE PTR ds:[esi]
  422d9b:	pusha  
  422d9c:	(bad)  
  422d9d:	mov    ebp,0x3dd1c29b
  422da2:	push   ecx
  422da3:	daa    
  422da4:	mov    ds:0xaa37e617,eax
  422da9:	repz cli 
  422dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dac:	out    0x70,al
  422dae:	cmp    eax,0x5ab5c3e0
  422db3:	xchg   ecx,eax
  422db4:	push   edx
  422db5:	pop    edx
  422db6:	cmp    eax,0x99627621
  422dbb:	xchg   edx,eax
  422dbc:	shl    BYTE PTR [edi],cl
  422dbe:	inc    edx
  422dbf:	push   edi
  422dc0:	outs   dx,BYTE PTR ds:[esi]
  422dc1:	cdq    
  422dc2:	sub    esp,esi
  422dc4:	xchg   esp,eax
  422dc5:	xchg   esp,eax
  422dc6:	imul   edi,DWORD PTR [eax+ecx*8+0x11],0x5048b1db
  422dce:	cmp    eax,0x99f539e3
  422dd3:	xchg   ebp,eax
  422dd4:	or     al,0x5a
  422dd6:	pop    eax
  422dd7:	adc    BYTE PTR ds:0x9b58b84a,al
  422ddd:	jmp    0x422e24
  422ddf:	dec    edi
  422de0:	daa    
  422de1:	clc    
  422de2:	inc    esi
  422de3:	inc    ebx
  422de4:	mov    WORD PTR [edx+0x7a316261],?
  422dea:	sub    DWORD PTR [esi],eax
  422dec:	test   al,0x7b
  422dee:	cmp    ch,ah
  422df0:	or     eax,DWORD PTR [ebx-0xc]
  422df3:	sbb    DWORD PTR [ecx-0x7b73ef74],ebx
  422df9:	(bad)  
  422dfb:	jg     0x422e38
  422dfd:	test   al,0xa9
  422dff:	and    al,0x3e
  422e01:	mov    cl,BYTE PTR [ecx]
  422e03:	pop    ebx
  422e04:	or     edi,edx
  422e06:	in     eax,dx
  422e07:	iret   
  422e08:	push   ebp
  422e09:	sbb    al,0x4
  422e0b:	jmp    0x72d7c36d
  422e10:	mov    ds:0x4489f041,al
  422e15:	pop    ds
  422e16:	leave  
  422e17:	adc    ebp,DWORD PTR [eax]
  422e19:	int3   
  422e1a:	push   esi
  422e1b:	fcom   st(7)
  422e1d:	and    DWORD PTR [edi],ebx
  422e1f:	aam    0xf1
  422e21:	push   0x423c086d
  422e26:	xor    al,0xea
  422e28:	cdq    
  422e29:	enter  0x2fe4,0x5a
  422e2d:	(bad)  
  422e2f:	or     BYTE PTR [esi+0x52],bl
  422e32:	sbb    al,0x2c
  422e34:	pop    ss
  422e35:	loope  0x422e77
  422e37:	es aaa 
  422e39:	(bad)  
  422e3a:	out    dx,al
  422e3b:	jbe    0x422e4a
  422e3d:	(bad)  [edi]
  422e3f:	retf   
  422e40:	pop    ebp
  422e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e42:	iret   
  422e43:	xor    DWORD PTR [edi],ecx
  422e45:	lods   al,BYTE PTR ds:[esi]
  422e46:	je     0x422dfb
  422e48:	cmp    BYTE PTR [ebp+ebp*1+0x2f30e249],bl
  422e4f:	pop    ebp
  422e50:	out    0xf3,al
  422e52:	jl     0x422ea6
  422e54:	jp     0x422e03
  422e56:	aas    
  422e57:	add    ebp,DWORD PTR [ebp+0x67]
  422e5a:	jo     0x422e7e
  422e5c:	inc    esp
  422e5d:	add    DWORD PTR [esi+0x2e949be],ecx
  422e63:	xchg   ebp,eax
  422e64:	jnp    0x422e66
  422e66:	cwde   
  422e67:	mov    bh,0x60
  422e69:	ja     0x422e33
  422e6b:	jne    0x422e6e
  422e6d:	xchg   DWORD PTR [esi+0x796d8d93],ecx
  422e73:	test   DWORD PTR [ebx+0x32c5823a],ebx
  422e79:	and    DWORD PTR [esi],0x323291f2
  422e7f:	jnp    0x422ed5
  422e81:	dec    edx
  422e82:	scas   eax,DWORD PTR es:[edi]
  422e83:	pop    esp
  422e84:	mov    eax,ds:0x46403182
  422e89:	push   eax
  422e8a:	fnstsw WORD PTR [eax-0x340d3087]
  422e90:	jp     0x422f0d
  422e92:	jae    0x422eda
  422e94:	mov    esp,0xbe910b36
  422e99:	pop    es
  422e9a:	ins    BYTE PTR es:[edi],dx
  422e9b:	pop    eax
  422e9c:	push   eax
  422e9d:	pop    ebp
  422e9e:	add    ah,ch
  422ea0:	ror    DWORD PTR [edi+0x16],0x3b
  422ea4:	call   0xe6ce1b57
  422ea9:	lods   al,BYTE PTR ds:[esi]
  422eaa:	mov    esi,0xcc154d6
  422eaf:	(bad)  
  422eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eb1:	jno    0x422f02
  422eb3:	icebp  
  422eb4:	cld    
  422eb5:	gs mov esp,0x6b320777
  422ebb:	gs pop eax
  422ebd:	jmp    0x61976a92
  422ec2:	cmp    BYTE PTR [ebx+0x15],al
  422ec5:	pop    ds
  422ec6:	xchg   ebx,eax
  422ec7:	or     DWORD PTR [ebp-0x30],ecx
  422eca:	sbb    eax,0x1a218344
  422ecf:	or     al,0x97
  422ed2:	fs aam 0xe0
  422ed5:	jmp    0x422e77
  422ed7:	xchg   esp,eax
  422ed8:	ds outs dx,DWORD PTR cs:[esi]
  422edb:	stos   BYTE PTR es:[edi],al
  422edc:	push   esi
  422edd:	mov    WORD PTR [ebx+eiz*1+0x2b],?
  422ee1:	loop   0x422ef2
  422ee3:	push   ds
  422ee4:	daa    
  422ee5:	dec    esi
  422ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ee7:	cmp    eax,0xc91cb31
  422eec:	push   esp
  422eed:	fsubr  QWORD PTR [ebx+0x3e]
  422ef0:	pop    eax
  422ef1:	(bad)  
  422ef2:	pushf  
  422ef3:	dec    ecx
  422ef4:	push   ebp
  422ef5:	sbb    al,0x3b
  422ef7:	scas   eax,DWORD PTR es:[edi]
  422ef8:	mov    eax,ds:0xb7dce11d
  422efd:	jne    0x422ee7
  422eff:	adc    esp,DWORD PTR ds:0xb220c68
  422f05:	xor    eax,0xc909e1e6
  422f0a:	sbb    eax,0x51d6ada7
  422f0f:	push   0xffffffab
  422f11:	pop    ecx
  422f12:	addr16 leave 
  422f14:	cmp    al,0x7c
  422f16:	stos   BYTE PTR es:[edi],al
  422f17:	sti    
  422f18:	adc    DWORD PTR [edi],0x4fd82ee5
  422f1e:	cmc    
  422f1f:	pop    ecx
  422f20:	jmp    0xda4199ad
  422f25:	and    bh,0xed
  422f28:	push   edx
  422f2a:	xchg   ecx,eax
  422f2b:	inc    DWORD PTR [ebx+0xd]
  422f2e:	stos   DWORD PTR es:[edi],eax
  422f2f:	loopne 0x422efc
  422f31:	pop    ds
  422f32:	cs call 0xe83bfb80
  422f38:	xor    DWORD PTR [eax+0xe41225],edx
  422f3e:	dec    eax
  422f3f:	ffreep st(7)
  422f41:	mov    al,ah
  422f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f44:	into   
  422f45:	or     eax,0x1748338a
  422f4a:	dec    ecx
  422f4b:	mov    DWORD PTR [edx+0x4b700696],edx
  422f51:	or     esp,DWORD PTR [esi+0x11e03079]
  422f57:	enter  0x7207,0xec
  422f5b:	jp     0x422f99
  422f5d:	into   
  422f5e:	sbb    BYTE PTR [edx+0x77da521],0x59
  422f65:	push   ss
  422f66:	jo     0x422f81
  422f68:	push   DWORD PTR [ebx-0x2dc21f2b]
  422f6e:	adc    DWORD PTR [edi+0x5dc7bc8c],esi
  422f74:	adc    ch,BYTE PTR [ecx-0x360eb9]
  422f7a:	call   0x23523897
  422f7f:	lods   al,BYTE PTR ds:[esi]
  422f80:	cmp    edi,esp
  422f82:	pop    ecx
  422f83:	pop    ebp
  422f84:	pop    es
  422f85:	test   BYTE PTR [esi+eiz*2+0x738528a4],dl
  422f8c:	outs   dx,BYTE PTR ds:[esi]
  422f8d:	cs push ebp
  422f8f:	mov    eax,0xc4885936
  422f94:	lds    ebp,FWORD PTR [ecx-0x1746b759]
  422f9a:	push   ebp
  422f9b:	iret   
  422f9c:	mov    dl,0x72
  422f9e:	loop   0x422fcb
  422fa0:	arpl   WORD PTR [edx-0x22],bp
  422fa3:	inc    ebp
  422fa4:	int    0x12
  422fa6:	(bad)  
  422fa7:	mov    ebx,cs
  422fa9:	outs   dx,BYTE PTR ds:[esi]
  422faa:	lock sbb dh,BYTE PTR [ebp-0x5]
  422fae:	sbb    ebx,DWORD PTR [ebx]
  422fb0:	mov    esp,eax
  422fb2:	mov    ?,WORD PTR [ebx+ebx*8+0x7df1613e]
  422fb9:	push   0x7eddee37
  422fbe:	jmp    0xc3f2:0xb405530b
  422fc5:	push   esi
  422fc6:	jnp    0x422fb6
  422fc8:	pop    ebx
  422fc9:	mov    edx,0x5ca68b1b
  422fce:	sbb    eax,0x5ad9a531
  422fd3:	les    edi,FWORD PTR [eax-0x460ff884]
  422fd9:	not    BYTE PTR [ebp-0x5868e954]
  422fdf:	xchg   esi,eax
  422fe0:	cdq    
  422fe1:	leave  
  422fe2:	jp     0x422f64
  422fe4:	jnp    0x422f6d
  422fe6:	jecxz  0x422f8e
  422fe8:	pop    edx
  422fe9:	adc    al,0x16
  422feb:	xchg   esp,eax
  422fec:	sbb    bl,ah
  422fee:	and    edx,DWORD PTR [eax-0x8514558]
  422ff4:	das    
  422ff5:	clc    
  422ff6:	push   0xb7f11c7f
  422ffb:	mov    edx,0xd310d5b5
  423000:	dec    ebx
  423001:	jae    0x423077
  423003:	xchg   ecx,eax
  423004:	sbb    al,0xd6
  423006:	mov    al,0xac
  423008:	mov    ebp,0xad250963
  42300d:	mov    ds:0xe1133c69,al
  423012:	pop    ecx
  423013:	(bad)  
  423014:	adc    ebp,DWORD PTR [ebp+ebx*8+0x791f9c0a]
  42301b:	inc    edi
  42301c:	repnz jecxz 0x423083
  42301f:	adc    ebx,edx
  423021:	push   cs
  423022:	dec    ecx
  423023:	push   ebp
  423024:	mov    al,ds:0x1ced06c3
  423029:	cmp    ah,BYTE PTR [ebp+ecx*1+0x10dcdc67]
  423030:	sbb    al,0xc9
  423032:	popa   
  423033:	test   BYTE PTR [eax+0x5],al
  423036:	jp     0x4230b2
  423038:	ret    
  423039:	mov    al,0x59
  42303b:	jp     0x423059
  42303d:	sbb    DWORD PTR [edx+0x7f],ebp
  423040:	iret   
  423041:	cmp    al,0xab
  423043:	adc    eax,0xbde50144
  423048:	xchg   edx,eax
  423049:	mov    esi,0xa4f8befb
  42304e:	xor    cl,ah
  423050:	cmp    bl,BYTE PTR [eax]
  423052:	cmp    BYTE PTR [edx+ebp*4-0x222abd39],ah
  423059:	mov    ds:0xa69b7823,eax
  42305e:	or     eax,0x8002a4a8
  423063:	ins    BYTE PTR es:[edi],dx
  423064:	ss (bad) 
  423066:	lods   al,BYTE PTR ds:[esi]
  423067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423068:	leave  
  423069:	dec    edx
  42306a:	mov    dl,0xc8
  42306c:	jge    0x423046
  42306e:	pop    edi
  42306f:	adc    al,0x5a
  423071:	aam    0x1c
  423073:	je     0x423070
  423075:	scas   al,BYTE PTR es:[edi]
  423076:	(bad)
  42307a:	jmp    0xdaf5575b
  42307f:	sti    
  423080:	jle    0x423010
  423082:	dec    esi
  423083:	xor    al,0x32
  423085:	xchg   edx,eax
  423086:	(bad)  
  423087:	jg     0x423080
  423089:	mov    ebp,0x4c17eb3b
  42308e:	(bad)  
  42308f:	int3   
  423090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423091:	stc    
  423092:	dec    esi
  423093:	out    dx,eax
  423094:	in     eax,0x88
  423096:	pop    es
  423097:	cmp    eax,0xe5ab73a9
  42309c:	into   
  42309d:	jmp    0xbba9:0xd9cf6ce8
  4230a4:	stos   DWORD PTR es:[edi],eax
  4230a5:	and    dh,al
  4230a7:	jg     0x4230e4
  4230a9:	push   ebp
  4230aa:	sti    
  4230ab:	pushf  
  4230ac:	lock jmp 0x8dc46036
  4230b2:	dec    ecx
  4230b3:	cmp    BYTE PTR [esp+ebp*8+0x79],ah
  4230b7:	push   es
  4230b8:	sbb    BYTE PTR [esp+eiz*4-0x25],bl
  4230bc:	xchg   edi,eax
  4230bd:	inc    esp
  4230be:	int    0x32
  4230c0:	cmpxchg eax,edx
  4230c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230c4:	lahf   
  4230c5:	pop    edi
  4230c6:	das    
  4230c7:	mov    DWORD PTR [ecx],ecx
  4230c9:	adc    eax,ebx
  4230cb:	add    eax,0xf2b0eb71
  4230d0:	loopne 0x4230cf
  4230d2:	push   ebx
  4230d3:	loopne 0x423094
  4230d5:	nop
  4230d6:	dec    BYTE PTR [ebp-0xd0a75bc]
  4230dc:	dec    eax
  4230dd:	cwde   
  4230de:	cmc    
  4230df:	hlt    
  4230e0:	inc    esp
  4230e1:	mov    al,0x28
  4230e3:	popa   
  4230e4:	mov    dl,0xb1
  4230e6:	mov    ebp,0x2d4ba7d8
  4230eb:	mov    WORD PTR [eax+0x47],?
  4230ee:	jb     0x423130
  4230f0:	cli    
  4230f1:	inc    ebx
  4230f2:	or     bl,bl
  4230f4:	xchg   ecx,eax
  4230f5:	pop    ds
  4230f6:	test   ecx,esp
  4230f8:	int    0x5d
  4230fa:	sub    al,0x87
  4230fc:	inc    esp
  4230fd:	sbb    ch,BYTE PTR [eax]
  4230ff:	xchg   DWORD PTR [ebp-0x2],ebp
  423102:	or     BYTE PTR [esi+0x56b18167],dl
  423108:	pop    ecx
  423109:	leave  
  42310a:	jl     0x423155
  42310c:	mov    esp,0x21025976
  423111:	or     al,0x90
  423113:	adc    dh,BYTE PTR [ebx-0x22ed924c]
  423119:	and    al,0xea
  42311b:	mov    ds:0xce80bd7d,eax
  423121:	les    edi,FWORD PTR es:[edi]
  423124:	lods   al,BYTE PTR ds:[esi]
  423125:	in     al,dx
  423126:	or     eax,0x839132c3
  42312b:	in     al,0x93
  42312d:	outs   dx,BYTE PTR ds:[esi]
  42312e:	jae    0x423157
  423130:	gs jmp 0x20e263fd
  423136:	leave  
  423137:	push   esi
  423138:	mov    esp,0xb97ec260
  42313d:	inc    ecx
  42313e:	push   es
  42313f:	pop    edi
  423140:	or     eax,0x6647db72
  423145:	fisubr DWORD PTR [ebx+eax*2+0xb50dd76]
  42314c:	or     dl,ah
  42314e:	xor    esi,DWORD PTR [esi]
  423150:	(bad)  
  423151:	je     0x423124
  423153:	cmp    eax,0xe0401384
  423158:	xor    DWORD PTR [edi+0x28e0f926],esi
  42315e:	xchg   esp,eax
  42315f:	lods   eax,DWORD PTR ds:[esi]
  423160:	jne    0x42318b
  423162:	mov    BYTE PTR [ebp-0x52e2f3e3],0x4a
  423169:	and    eax,0xbe914e2
  42316e:	fistp  WORD PTR [esi+0x51d4cfa1]
  423174:	push   ss
  423175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423176:	pop    eax
  423177:	inc    ebp
  423178:	cwde   
  423179:	mov    dh,0xde
  42317b:	or     esi,DWORD PTR [ebx+0x5aa83e11]
  423181:	push   0x5c
  423183:	sub    BYTE PTR [ecx-0x78b547e9],dl
  423189:	rol    BYTE PTR [ebx],cl
  42318b:	in     al,0x58
  42318d:	mov    edi,0x207131d
  423192:	cli    
  423193:	fild   QWORD PTR [ecx]
  423195:	or     eax,0xa29ad0e8
  42319b:	add    dl,BYTE PTR [ebx-0x16ea83a3]
  4231a1:	repnz pushf 
  4231a3:	mov    ebx,0xade1a2bd
  4231a8:	add    eax,0xf53e761f
  4231ad:	sub    ebx,esi
  4231af:	cmc    
  4231b0:	inc    BYTE PTR [edi-0x56a3799a]
  4231b6:	dec    ebx
  4231b7:	lds    ebp,FWORD PTR [ecx-0x10a2bf11]
  4231bd:	out    dx,al
  4231be:	ror    DWORD PTR [ebx+edi*1-0x2f],0x2b
  4231c3:	push   ss
  4231c4:	push   cs
  4231c5:	cld    
  4231c6:	loope  0x423204
  4231c8:	push   edx
  4231c9:	test   eax,0xa44ffd90
  4231ce:	test   al,0x6c
  4231d0:	repz mov dh,0x30
  4231d3:	ss dec edi
  4231d5:	sub    al,0x10
  4231d7:	inc    ebp
  4231d8:	scas   eax,DWORD PTR es:[edi]
  4231d9:	mov    ebx,0x208f8d60
  4231de:	add    DWORD PTR [ecx-0x55966bee],esp
  4231e4:	xor    eax,0x9e317b9
  4231e9:	hlt    
  4231ea:	and    dl,BYTE PTR ds:0xc222dc4b
  4231f1:	scas   eax,DWORD PTR es:[edi]
  4231f2:	cld    
  4231f3:	mov    cl,0xf9
  4231f5:	repz sbb esp,esi
  4231f8:	sbb    ch,bl
  4231fa:	fisubr WORD PTR [edx-0x6c]
  4231fd:	fnstenv [edx-0x15cf66e8]
  423203:	loop   0x42324f
  423205:	push   ss
  423206:	sub    al,0xda
  423208:	shr    BYTE PTR [eax+0x78],0x86
  42320c:	dec    edi
  42320d:	dec    ebx
  42320e:	cmc    
  42320f:	test   BYTE PTR [eax+0x72],ch
  423212:	test   al,0x42
  423214:	sub    eax,0x4d75137d
  423219:	mov    edi,0xaf1e5f8e
  42321e:	and    DWORD PTR [eax],ebp
  423220:	and    edi,DWORD PTR [ebx]
  423222:	cld    
  423223:	lds    eax,FWORD PTR [ebp-0x65c89dd7]
  423229:	(bad)  
  42322a:	leave  
  42322b:	cwde   
  42322c:	and    DWORD PTR [edx-0x56],0x55dd9cdd
  423233:	imul   DWORD PTR [eax+0x17]
  423236:	and    ebp,eax
  423238:	mov    bh,0x49
  42323a:	inc    eax
  42323b:	sub    edi,DWORD PTR [ecx+0x6b]
  42323e:	jne    0x4232bb
  423240:	aad    0x2
  423242:	inc    ecx
  423243:	mov    eax,?
  423245:	leave  
  423246:	add    DWORD PTR [eax+0x10],ebx
  423249:	push   ss
  42324a:	ja     0x42320a
  42324c:	cmp    BYTE PTR [eax-0x28],0xfe
  423250:	mov    dh,0x7e
  423252:	adc    dl,0x1e
  423255:	mov    ebp,0xc4055b52
  42325a:	icebp  
  42325b:	and    DWORD PTR [esi-0x21b658d2],esp
  423261:	inc    eax
  423262:	loop   0x423241
  423264:	in     al,dx
  423265:	xchg   esi,eax
  423266:	fldcw  WORD PTR [esi+0x6b]
  423269:	clc    
  42326a:	(bad)  
  42326b:	call   0x7adb:0x8236bdc3
  423272:	xor    dl,0x3c
  423275:	xor    eax,0x273936c9
  42327a:	or     al,0xfd
  42327c:	xchg   edx,eax
  42327d:	data16 addr16 lahf 
  423280:	adc    eax,0xe872a09c
  423285:	shl    cl,cl
  423287:	shr    DWORD PTR [ecx-0x565e6d0a],1
  42328d:	xchg   edx,eax
  42328e:	hlt    
  42328f:	mov    edx,0xd01a9119
  423294:	arpl   WORD PTR [ebp-0x621ad957],dx
  42329a:	lock fld st(1)
  42329d:	cmc    
  42329e:	mov    cl,0xe7
  4232a0:	adc    BYTE PTR [eax+0x5c82d12e],bh
  4232a6:	dec    edi
  4232a7:	sbb    al,0xba
  4232a9:	jae    0x423275
  4232ab:	dec    esp
  4232ac:	lahf   
  4232ad:	dec    eax
  4232ae:	xchg   edx,eax
  4232af:	cmp    eax,0x71675773
  4232b4:	ret    
  4232b5:	mov    al,ds:0x4b06705c
  4232ba:	fiadd  WORD PTR [ecx-0x4]
  4232bd:	mov    esp,0x9f87ce30
  4232c2:	dec    ebp
  4232c3:	cmp    ebx,DWORD PTR [ebp-0x331438c6]
  4232c9:	mov    edx,0x41be1390
  4232ce:	mov    WORD PTR [edx],?
  4232d0:	leave  
  4232d1:	(bad)  
  4232d2:	fist   DWORD PTR [edi-0x79e6cfb8]
  4232d8:	scas   eax,DWORD PTR es:[edi]
  4232d9:	xchg   edx,eax
  4232da:	mov    dl,0x4d
  4232dc:	push   ss
  4232dd:	jp     0x423272
  4232df:	adc    BYTE PTR [edi],ch
  4232e1:	daa    
  4232e2:	xor    DWORD PTR [ebx-0x7fe2da57],edx
  4232e8:	in     eax,dx
  4232e9:	push   edx
  4232ea:	fisttp QWORD PTR [ebx+0x6a]
  4232ed:	loop   0x4232dc
  4232ef:	test   dl,ah
  4232f1:	fsubr  DWORD PTR [ebp+0x64]
  4232f4:	xchg   ebx,eax
  4232f5:	(bad)  
  4232f6:	retf   
  4232f7:	int3   
  4232f8:	gs rol ah,cl
  4232fb:	xchg   ebp,eax
  4232fc:	mov    BYTE PTR [ebp+0xf],ah
  4232ff:	es mov esp,0x8db0372d
  423305:	pop    esi
  423306:	mov    edi,0xcfdfccac
  42330b:	or     cl,bl
  42330d:	(bad)  
  42330e:	es push edi
  423310:	mov    ecx,0x36ca7646
  423315:	push   ebx
  423316:	das    
  423317:	or     ebp,DWORD PTR ds:0x5520e029
  42331d:	jmp    0x150af5aa
  423322:	fistp  QWORD PTR [ebp+eax*1-0x3ce607e5]
  423329:	into   
  42332a:	xchg   ebx,eax
  42332b:	les    esi,FWORD PTR [edi]
  42332d:	cmp    edx,DWORD PTR [edi]
  42332f:	mov    ebx,0xa4efa499
  423334:	(bad)  
  423335:	mov    edx,0xa82eb70b
  42333a:	std    
  42333b:	and    ecx,DWORD PTR [edi]
  42333d:	push   esi
  42333e:	mov    cl,0xd3
  423340:	jmp    0x6f4e:0xfd58d6f3
  423347:	sysexit 
  423349:	jl     0x42331b
  42334b:	cwde   
  42334c:	xor    BYTE PTR [esi+0x61],bh
  42334f:	stos   BYTE PTR es:[edi],al
  423350:	push   ebx
  423351:	test   edi,0x953bdd9d
  423357:	mov    cl,BYTE PTR [ecx]
  423359:	mov    dl,0x3f
  42335b:	bound  edx,QWORD PTR [ecx+ecx*2]
  42335e:	popa   
  42335f:	or     BYTE PTR [ebx+0x280aba8c],dh
  423365:	push   ds
  423366:	jb     0x42334f
  423368:	cmp    al,0x6f
  42336a:	mov    ch,0x8b
  42336c:	mov    edi,0xaab57f1f
  423371:	mov    al,0xe3
  423373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423374:	sub    DWORD PTR [ecx+0x49],ecx
  423377:	jmp    0xc511:0x13f487c
  42337e:	jmp    0x8632:0xd10b151b
  423385:	and    dh,BYTE PTR [eax-0x49c2f4bd]
  42338b:	imul   edx,edx,0x4a4e82d6
  423391:	xchg   DWORD PTR [edi+0x39],eax
  423394:	sub    eax,0x4e4263a5
  423399:	mov    ?,WORD PTR [edi]
  42339b:	mov    ?,eax
  42339d:	addr16 mov eax,0xa6464292
  4233a3:	(bad)  
  4233a4:	adc    BYTE PTR [edi-0x493ec0fd],bl
  4233aa:	or     BYTE PTR [edx],bh
  4233ac:	fsubrp st(5),st
  4233ae:	loop   0x42342a
  4233b0:	jge    0x4233ff
  4233b2:	mov    eax,ds:0xba71d8f4
  4233b7:	mov    bh,0x39
  4233b9:	fucom  st(2)
  4233bb:	in     eax,0x2c
  4233bd:	and    al,0xb5
  4233bf:	cmp    ecx,DWORD PTR [edi]
  4233c1:	lea    ebx,[eax]
  4233c3:	pop    ebx
  4233c4:	push   edi
  4233c5:	ret    0x4d5
  4233c8:	fild   DWORD PTR [ebx]
  4233ca:	call   0x851cbc0c
  4233cf:	and    ebx,DWORD PTR [eax]
  4233d1:	xor    BYTE PTR [ecx-0x42672557],ch
  4233d7:	test   al,0x2c
  4233d9:	cmc    
  4233da:	rcl    DWORD PTR [ecx+0x77ee6f0f],cl
  4233e0:	xchg   ebx,eax
  4233e1:	or     DWORD PTR [edi],ecx
  4233e3:	xor    ebx,ecx
  4233e5:	icebp  
  4233e6:	push   0x7da68191
  4233eb:	mov    dh,0x59
  4233ed:	mov    ecx,0x4534620
  4233f2:	pop    eax
  4233f3:	test   al,0x70
  4233f5:	ror    BYTE PTR [eax],cl
  4233f7:	les    esp,FWORD PTR [edi-0x5f]
  4233fa:	ffree  st(7)
  4233fc:	js     0x42346d
  4233fe:	mov    ecx,0xbd5eac52
  423403:	out    0xf9,al
  423405:	cmp    DWORD PTR [esp+esi*1+0x59e5241],ebx
  42340c:	mov    WORD PTR [eax],gs
  42340e:	sub    ebp,ebx
  423410:	int    0xc6
  423412:	push   edi
  423413:	imul   ebp,DWORD PTR [ecx],0x938e1540
  423419:	les    ebx,FWORD PTR [eax-0x281631aa]
  42341f:	push   cs
  423420:	dec    edx
  423421:	mov    esp,0x2c03e5fb
  423426:	cmp    DWORD PTR [esi-0x1f],ecx
  423429:	mov    DWORD PTR [edx+0x16],ebp
  42342c:	jne    0x42341c
  42342e:	jmp    0x9f6a:0x6bc2041e
  423435:	jmp    0x423476
  423437:	push   eax
  423438:	lahf   
  423439:	imul   DWORD PTR [eax]
  42343b:	or     BYTE PTR [ebx+0x6815021],ch
  423441:	pop    ecx
  423442:	wbinvd 
  423444:	addr16 mov ds:0x3431,eax
  423448:	mov    ds:0x635c0deb,eax
  42344d:	test   al,0xda
  42344f:	mov    ch,0x8b
  423451:	jl     0x423400
  423453:	repz in eax,0x61
  423456:	test   BYTE PTR [ecx],0x76
  423459:	sub    al,0x5c
  42345b:	or     BYTE PTR [edi-0x19693c70],0x94
  423462:	fmul   QWORD PTR [ebx+edx*2-0x50483542]
  423469:	sbb    edx,DWORD PTR [ebx+0x4d]
  42346c:	mov    esp,0x37a27450
  423471:	jns    0x423469
  423473:	inc    esi
  423474:	inc    esi
  423475:	(bad)  
  423476:	mov    ds:0xd7fd4be2,eax
  42347b:	test   DWORD PTR ds:0x618781a1,ebp
  423481:	mov    edx,0x6c9e4ba6
  423486:	scas   al,BYTE PTR es:[edi]
  423487:	dec    ecx
  423488:	or     edx,DWORD PTR [eax+eax*8]
  42348b:	leave  
  42348c:	call   0x9830:0xdd5755b0
  423493:	mov    bh,bh
  423495:	cmp    DWORD PTR [ecx],0x7f0411bf
  42349b:	repnz fdivr DWORD PTR [edx-0x3a]
  42349f:	icebp  
  4234a0:	into   
  4234a1:	arpl   WORD PTR [esp+ebx*2-0xe],bp
  4234a5:	push   0xfffffffa
  4234a7:	test   al,0xad
  4234a9:	sar    BYTE PTR [edi],cl
  4234ab:	lods   eax,DWORD PTR ds:[esi]
  4234ac:	mov    eax,0x9e10a21c
  4234b1:	jnp    0x4234e1
  4234b3:	rcl    BYTE PTR [edx],cl
  4234b5:	data16 out 0xda,al
  4234b8:	aas    
  4234b9:	mov    ds:0xd2e7c868,al
  4234be:	ss cwde 
  4234c0:	(bad)  [ebx+0x5c65826a]
  4234c6:	add    ecx,DWORD PTR [edi-0x3]
  4234c9:	fimul  DWORD PTR [ecx-0x21]
  4234cc:	lods   eax,DWORD PTR ds:[esi]
  4234cd:	sub    eax,0x58da790f
  4234d2:	mov    ss,WORD PTR [edi-0x1a]
  4234d5:	inc    esi
  4234d6:	retf   
  4234d7:	test   DWORD PTR [esp+eiz*8+0x5a757006],edx
  4234de:	rcr    BYTE PTR [ebp+0x6c],0x2b
  4234e2:	jbe    0x423495
  4234e4:	pop    ebx
  4234e5:	clc    
  4234e6:	push   cs
  4234e7:	push   esp
  4234e8:	or     al,0x8c
  4234ea:	enter  0x31d5,0x82
  4234ee:	push   ds
  4234ef:	push   ss
  4234f0:	sub    BYTE PTR [eax-0x2b],al
  4234f3:	add    al,0xb9
  4234f5:	faddp  st(0),st
  4234f7:	int    0x12
  4234f9:	xlat   BYTE PTR ds:[ebx]
  4234fa:	jg     0x423555
  4234fc:	mov    cl,0x72
  4234fe:	(bad)  
  4234ff:	fcom   DWORD PTR [ebx]
  423501:	adc    ah,ah
  423503:	mov    esp,0x91412156
  423508:	in     eax,dx
  423509:	inc    ebx
  42350a:	ins    BYTE PTR es:[edi],dx
  42350b:	mov    bl,0xcf
  42350d:	xlat   BYTE PTR ds:[ebx]
  42350e:	fwait
  42350f:	push   edi
  423510:	push   edx
  423511:	sub    DWORD PTR [eax+ecx*2+0x6fbef01a],esi
  423518:	dec    ebp
  423519:	inc    ebp
  42351a:	cmp    bh,BYTE PTR [ebp-0x4c]
  42351d:	ss cmp al,0x6b
  423520:	adc    ebp,DWORD PTR [edx+0x50]
  423523:	jns    0x4234d1
  423525:	out    0xb1,eax
  423527:	or     BYTE PTR [edx+0x6e],0x1e
  42352b:	and    DWORD PTR [edx+0x10],eax
  42352e:	pop    edi
  42352f:	jl     0x4235a8
  423531:	mov    DWORD PTR [ebx+0xf4dea91],eax
  423537:	(bad)  
  423538:	scas   eax,DWORD PTR es:[edi]
  423539:	jne    0x42353d
  42353b:	leave  
  42353c:	add    al,0xc5
  42353e:	xor    al,0xf8
  423540:	cld    
  423541:	lahf   
  423542:	sub    al,BYTE PTR [ebx-0x1a98c49e]
  423548:	jnp    0x4234e0
  42354a:	stos   DWORD PTR es:[edi],eax
  42354b:	loopne 0x4234f3
  42354d:	out    0x58,eax
  42354f:	push   edx
  423550:	mov    bh,0xd2
  423552:	inc    edi
  423553:	in     eax,dx
  423554:	out    dx,al
  423555:	lahf   
  423556:	sbb    ecx,0x5
  423559:	lahf   
  42355a:	stos   BYTE PTR es:[edi],al
  42355b:	pop    ss
  42355c:	lock mov ah,0x69
  42355f:	idiv   BYTE PTR [eax]
  423561:	scas   al,BYTE PTR es:[edi]
  423562:	inc    edi
  423563:	nop
  423564:	sbb    esp,DWORD PTR [ecx-0x4f]
  423567:	scas   eax,DWORD PTR es:[edi]
  423568:	mov    cl,0x93
  42356a:	hlt    
  42356b:	in     eax,dx
  42356c:	mov    bl,0x33
  42356e:	scas   eax,DWORD PTR es:[edi]
  42356f:	shl    DWORD PTR [edi-0x5c],0xb2
  423573:	ja     0x4235c6
  423575:	(bad)  
  423576:	jmp    0x6569:0x9b967cc6
  42357d:	inc    edx
  42357e:	xchg   ebp,eax
  42357f:	call   0x14e4:0xa075ec02
  423586:	pop    ebp
  423587:	sti    
  423588:	inc    ecx
  423589:	dec    esp
  42358a:	jmp    0x66a5:0x1755abf
  423591:	fld    DWORD PTR [edx-0x46]
  423594:	xor    edi,DWORD PTR [edx-0x11]
  423597:	push   cs
  423598:	aam    0xf3
  42359a:	mov    cl,0x6c
  42359c:	or     DWORD PTR [eax+0x2adf784b],edi
  4235a2:	imul   edi,DWORD PTR [ebp+0x5216b0e8],0x7d
  4235a9:	icebp  
  4235aa:	popf   
  4235ab:	or     ch,BYTE PTR [edx+eax*4]
  4235ae:	or     eax,0x595154ec
  4235b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235b4:	cmp    esp,DWORD PTR [eax+ebx*1]
  4235b7:	int    0xd2
  4235b9:	cs jp  0x4235f8
  4235bc:	inc    esi
  4235bd:	nop
  4235be:	sbb    esi,ebx
  4235c0:	add    ah,BYTE PTR [edx]
  4235c2:	mov    edx,0x9c2d340c
  4235c7:	pop    eax
  4235c8:	out    0x13,eax
  4235ca:	add    al,0xca
  4235cc:	mov    cl,0x4
  4235ce:	push   esi
  4235cf:	add    BYTE PTR [ecx-0x591bfc47],ch
  4235d5:	inc    ecx
  4235d6:	sahf   
  4235d7:	mov    DWORD PTR [ebx+0x1a],ebp
  4235da:	pop    edx
  4235db:	lods   eax,DWORD PTR ds:[esi]
  4235dc:	or     BYTE PTR [esi+0x54],ah
  4235df:	mov    dl,0x51
  4235e1:	jl     0x42363a
  4235e3:	sub    DWORD PTR [ebx],ebp
  4235e5:	(bad)  
  4235e6:	cmc    
  4235e7:	mov    al,ds:0x5a698747
  4235ec:	and    al,0xe3
  4235ee:	stos   DWORD PTR es:[edi],eax
  4235ef:	xor    DWORD PTR ds:0x16584315,esi
  4235f5:	xchg   edx,eax
  4235f6:	mov    bh,0x16
  4235f8:	sub    DWORD PTR [eax+0x32],ebx
  4235fb:	push   esp
  4235fc:	pop    edx
  4235fd:	fisttp QWORD PTR [ebx]
  4235ff:	jp     0x423675
  423601:	shr    BYTE PTR [eax-0x67],0x2a
  423605:	inc    ecx
  423606:	jne    0x4235df
  423608:	xor    edx,0x86994b48
  42360e:	xchg   esi,eax
  42360f:	out    dx,eax
  423610:	sub    BYTE PTR [ecx+0x1],0x10
  423614:	test   edi,esi
  423616:	test   eax,ecx
  423618:	rol    DWORD PTR ds:0xb4553099,cl
  42361e:	pusha  
  42361f:	mov    ecx,0x5682a97a
  423624:	pop    eax
  423625:	cdq    
  423626:	in     al,dx
  423627:	and    al,0xf6
  423629:	sub    ebx,DWORD PTR [ebx+ebx*8]
  42362c:	shr    DWORD PTR [eax],0x45
  42362f:	sbb    bh,ah
  423631:	or     ebx,ebp
  423633:	jmp    0x423693
  423635:	dec    edi
  423636:	outs   dx,BYTE PTR ds:[esi]
  423637:	mov    ds:0x3165253,eax
  42363c:	call   0xca636953
  423641:	retf   0x9b7b
  423644:	or     al,0xed
  423646:	push   es
  423647:	fldenv [ebx+ebx*8-0x1341af87]
  42364e:	aaa    
  42364f:	xchg   DWORD PTR [ecx+edi*8],edi
  423652:	mov    esi,0x54c105c
  423657:	xchg   ebp,eax
  423658:	pop    eax
  423659:	lea    esp,[esi+0x2a]
  42365c:	cs mov eax,0x4c20d744
  423662:	xchg   esp,eax
  423663:	in     al,0x91
  423665:	in     eax,0x8f
  423667:	mov    ds:0xbe047d30,eax
  42366c:	adc    DWORD PTR [ebx+0xe],ebx
  42366f:	push   ebp
  423670:	mov    bl,0x10
  423672:	push   ss
  423673:	mov    cl,0x66
  423675:	pop    ebp
  423676:	stos   BYTE PTR es:[edi],al
  423677:	or     dh,BYTE PTR [eax]
  423679:	mov    ds:0xb5c25de0,al
  42367e:	mov    ebx,DWORD PTR [edi-0x32fa9e50]
  423684:	bound  ecx,QWORD PTR [ecx-0x193efe1a]
  42368a:	cs inc esi
  42368c:	rol    DWORD PTR ds:0xa11b5dda,0x98
  423693:	nop
  423694:	or     DWORD PTR [ebp-0x3887432],0x804330dc
  42369e:	jae    0x423631
  4236a0:	mov    edx,0xfb931b98
  4236a5:	jne    0x42371f
  4236a7:	(bad)  
  4236a8:	jge    0x423637
  4236aa:	loop   0x4236e3
  4236ac:	js     0x42363b
  4236ae:	push   ds
  4236af:	or     al,0x49
  4236b1:	xchg   edx,eax
  4236b2:	ja     0x4236ef
  4236b4:	sbb    esi,edx
  4236b6:	push   edi
  4236b7:	xor    ah,al
  4236b9:	inc    esi
  4236ba:	xor    edx,DWORD PTR [ebp-0x7f33b6e6]
  4236c0:	xchg   ecx,eax
  4236c1:	ins    BYTE PTR es:[edi],dx
  4236c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236c3:	outs   dx,DWORD PTR ds:[esi]
  4236c4:	add    al,0x8c
  4236c6:	retf   0x1c5e
  4236c9:	jae    0x423692
  4236cb:	in     al,0x9e
  4236cd:	mov    dl,0x1d
  4236cf:	mov    DWORD PTR [ecx],esp
  4236d1:	aam    0x42
  4236d3:	not    edi
  4236d5:	sbb    BYTE PTR [edi-0x36],bh
  4236d8:	cmp    eax,0xa2033dd2
  4236dd:	xor    DWORD PTR [edi],edx
  4236df:	push   ebx
  4236e0:	mov    ds,ebx
  4236e2:	arpl   WORD PTR [ebp+0x20c77aa3],bx
  4236e8:	xchg   esi,eax
  4236e9:	int    0xb9
  4236eb:	jle    0x4236d3
  4236ed:	xchg   esi,eax
  4236ee:	xchg   edi,eax
  4236ef:	mov    eax,ds:0xdf3369c7
  4236f4:	push   es
  4236f5:	(bad)  
  4236f6:	ds sub al,ah
  4236f9:	shl    BYTE PTR [edx],cl
  4236fb:	or     esi,DWORD PTR [ebp+0x3a]
  4236fe:	aad    0x10
  423700:	mov    edi,0x515630a0
  423705:	jle    0x423755
  423707:	(bad)  
  423708:	pop    edi
  423709:	(bad)  
  42370a:	mov    al,ds:0x472d6181
  42370f:	arpl   WORD PTR [ebp+0x50],bp
  423712:	xchg   edi,eax
  423714:	fsub   QWORD PTR [esp+eiz*2]
  423717:	adc    al,dh
  423719:	cmp    eax,0x2f447a1e
  42371e:	and    eax,esp
  423720:	cmp    ebx,DWORD PTR [edx-0x37680fba]
  423726:	xchg   edi,eax
  423727:	imul   esi,DWORD PTR [ebp-0x26],0x5a
  42372b:	push   0x37
  42372d:	adc    al,0xa7
  42372f:	lds    ebp,FWORD PTR [edi-0x2b938f6]
  423735:	loope  0x423751
  423737:	mov    ds:0xc9fab837,al
  42373c:	(bad)  
  42373d:	int3   
  42373e:	xor    BYTE PTR [edx-0x3f08018e],bh
  423744:	mov    esp,0xcd5c9830
  423749:	cmp    al,0xe9
  42374b:	fs push ebx
  42374d:	jo     0x4237c6
  42374f:	sbb    bl,BYTE PTR [esi]
  423751:	xor    BYTE PTR [edi],dl
  423753:	sbb    DWORD PTR [edx+0x26],edi
  423756:	outs   dx,BYTE PTR ds:[esi]
  423757:	cmp    BYTE PTR [ecx],dl
  423759:	inc    edi
  42375a:	stos   DWORD PTR es:[edi],eax
  42375b:	cdq    
  42375c:	mov    dh,0x42
  42375e:	into   
  42375f:	nop
  423760:	fld    st(3)
  423762:	inc    ebx
  423763:	push   ss
  423764:	fld    DWORD PTR [edi-0x75]
  423767:	in     eax,0x8e
  423769:	mov    WORD PTR [edi],cs
  42376b:	mov    esp,0xf9dcad20
  423770:	loopne 0x423720
  423772:	pop    ds
  423773:	cdq    
  423774:	add    eax,0xf038fa89
  423779:	cmp    BYTE PTR [edx+0x13882213],al
  42377f:	std    
  423780:	mov    eax,ds:0x2eaed223
  423785:	retf   
  423786:	loop   0x4237c8
  423788:	mov    ebx,0x9209ebc3
  42378d:	ror    eax,cl
  42378f:	stc    
  423790:	test   BYTE PTR [ebx+0x1b522ea1],0xee
  423797:	jmp    0x423805
  423799:	enter  0x6b02,0x85
  42379d:	jl     0x42374d
  42379f:	mov    ah,0x46
  4237a1:	xor    edx,ebx
  4237a3:	stc    
  4237a4:	aaa    
  4237a5:	xchg   DWORD PTR [ebx+eax*2-0x52f6fda6],edx
  4237ac:	mov    bl,0x8c
  4237ae:	lods   al,BYTE PTR ds:[esi]
  4237af:	outs   dx,DWORD PTR ds:[esi]
  4237b0:	adc    edi,esi
  4237b2:	imul   ebp,DWORD PTR [edx],0xffffffc9
  4237b5:	add    al,0xb1
  4237b7:	and    eax,DWORD PTR [esi+0x7abd23fc]
  4237bd:	test   al,0x6e
  4237bf:	(bad)  
  4237c0:	ja     0x4237fc
  4237c2:	push   esi
  4237c3:	push   0xffffffb8
  4237c5:	inc    eax
  4237c6:	adc    al,BYTE PTR [ebx-0x55bfae30]
  4237cc:	mov    ebp,0x146f00b2
  4237d1:	xchg   edx,eax
  4237d2:	fsubp  st(4),st
  4237d4:	and    al,0x8f
  4237d6:	inc    ecx
  4237d7:	jmp    0x423833
  4237d9:	icebp  
  4237da:	push   cs
  4237db:	jae    0x423825
  4237dd:	xor    DWORD PTR [ecx+0x5fcc506e],esp
  4237e3:	sub    dl,al
  4237e5:	xchg   ecx,eax
  4237e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237e7:	popf   
  4237e8:	jno    0x423821
  4237ea:	cmp    al,0xf7
  4237ec:	repz xor cl,ch
  4237ef:	out    dx,al
  4237f0:	scas   al,BYTE PTR es:[edi]
  4237f1:	jne    0x4237e5
  4237f3:	push   esp
  4237f4:	fsub   QWORD PTR [edi-0x3d1c511b]
  4237fa:	xchg   BYTE PTR [ecx+0x1b341a57],bh
  423800:	jmp    0x4237fd
  423802:	popf   
  423803:	lahf   
  423804:	adc    al,0x4a
  423806:	add    DWORD PTR [edi-0x9],ebx
  423809:	into   
  42380a:	(bad)  
  42380b:	(bad)  
  42380d:	jl     0x4237bd
  42380f:	adc    eax,0x82c75659
  423814:	mov    cl,BYTE PTR [ecx]
  423816:	xor    esp,DWORD PTR [eax+0x4c]
  423819:	adc    al,bl
  42381b:	sahf   
  42381c:	stos   BYTE PTR es:[edi],al
  42381d:	jnp    0x42387d
  42381f:	enter  0x72a2,0x93
  423823:	ins    DWORD PTR es:[edi],dx
  423824:	(bad)  
  423826:	pushf  
  423827:	inc    ebx
  423828:	jb     0x4237c8
  42382a:	mul    BYTE PTR [ecx+ebx*1-0x6c86378b]
  423831:	sub    al,0x37
  423833:	or     al,BYTE PTR [esp+esi*4-0x42dd60ec]
  42383a:	sbb    al,0xcf
  42383c:	xchg   edi,eax
  42383d:	jns    0x423897
  42383f:	(bad)  
  423840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423841:	pusha  
  423842:	jmp    0x101f:0x21d39a44
  423849:	ficomp DWORD PTR [ebp-0x25]
  42384c:	mov    esp,DWORD PTR [esi+ebp*8]
  42384f:	scas   eax,DWORD PTR es:[edi]
  423850:	out    dx,al
  423851:	xchg   ebx,eax
  423852:	jnp    0x42388c
  423854:	fisttp WORD PTR [edx]
  423856:	aad    0x21
  423858:	dec    eax
  423859:	push   esp
  42385a:	dec    edi
  42385b:	lods   eax,DWORD PTR ds:[esi]
  42385c:	repz mov ch,0x38
  42385f:	inc    ebx
  423860:	(bad)  
  423861:	lods   eax,DWORD PTR ds:[esi]
  423862:	cmp    DWORD PTR [ecx+0x6b90c949],0x5698715f
  42386c:	shl    BYTE PTR [edx+0x2e936dbf],1
  423872:	sub    BYTE PTR [ebp+0x161998ae],0xa3
  423879:	jne    0x42383f
  42387b:	enter  0xdf99,0xd5
  42387f:	clc    
  423880:	sub    DWORD PTR [eax+0x1218ef81],0xb
  423887:	pop    esp
  423888:	cmp    al,0x6c
  42388a:	lods   eax,DWORD PTR ds:[esi]
  42388b:	lods   eax,DWORD PTR ds:[esi]
  42388c:	or     eax,0xedf31d0f
  423891:	dec    eax
  423892:	aad    0xdf
  423894:	push   edx
  423895:	call   0x4e8d:0x3a769ec7
  42389c:	xchg   ebp,eax
  42389d:	or     dl,BYTE PTR [ebx-0x16]
  4238a0:	(bad)  
  4238a1:	(bad)  
  4238a2:	sub    DWORD PTR [edi+0x3c8b3123],edx
  4238a8:	jecxz  0x423891
  4238aa:	xor    al,bh
  4238ac:	cmp    al,0x72
  4238ae:	xor    BYTE PTR ds:[eax],0xe2
  4238b2:	pmaxub mm6,mm5
  4238b5:	test   al,dl
  4238b7:	cmp    ebx,DWORD PTR [edi-0x32]
  4238ba:	mov    dl,0x51
  4238bc:	jge    0x42386f
  4238be:	arpl   WORD PTR [edx],di
  4238c0:	mov    cl,0x33
  4238c2:	jmp    0x4238fe
  4238c4:	adc    ecx,DWORD PTR es:[ebx]
  4238c7:	adc    DWORD PTR [ecx-0x4727fd24],esi
  4238cd:	and    al,0x93
  4238cf:	(bad)  [eax+ecx*4]
  4238d2:	rcl    DWORD PTR [ecx-0x22272d2f],cl
  4238d8:	jno    0x4238aa
  4238da:	ins    BYTE PTR es:[edi],dx
  4238db:	cmp    ebp,eax
  4238dd:	sbb    bl,0x1d
  4238e0:	pop    ds
  4238e1:	sub    eax,0x4539b7d7
  4238e6:	dec    edi
  4238e7:	jno    0x423965
  4238e9:	inc    ebp
  4238ea:	in     al,dx
  4238eb:	sbb    DWORD PTR [eax+0x6639e5e4],ebx
  4238f1:	mov    edx,0xba332362
  4238f6:	sti    
  4238f7:	jp     0x42395c
  4238f9:	xchg   ebx,eax
  4238fa:	inc    ebx
  4238fb:	push   0xffffffdd
  4238fd:	xchg   ebp,eax
  4238fe:	add    dl,al
  423900:	jl     0x423948
  423902:	dec    ebx
  423903:	jmp    0x4238a5
  423905:	and    al,0x38
  423907:	sub    ebx,DWORD PTR [ecx+0x7f54eac6]
  42390d:	icebp  
  42390e:	push   ebx
  42390f:	das    
  423910:	jecxz  0x4238e4
  423912:	gs dec edi
  423914:	jo     0x4238f7
  423916:	sub    eax,0x5afc0368
  42391b:	repz adc DWORD PTR [ebx],eax
  42391e:	fs retf 
  423920:	lods   al,BYTE PTR ds:[esi]
  423921:	xchg   esi,eax
  423922:	out    dx,al
  423923:	test   BYTE PTR [ebp+ecx*1-0x40dee0aa],bl
  42392a:	or     BYTE PTR [ecx-0x3b],cl
  42392d:	mov    DWORD PTR [ebx+0x259bf79f],ebx
  423933:	cmp    DWORD PTR [edx],eax
  423935:	stc    
  423936:	sbb    edi,ecx
  423938:	pop    ebp
  423939:	fcomp  DWORD PTR [ecx+0x2067e69b]
  42393f:	loopne 0x42390c
  423941:	mov    esp,0x8c6d85b5
  423946:	cmp    DWORD PTR [edi+eiz*8-0x3e],eax
  42394a:	pop    edx
  42394b:	mov    eax,0x67977a2a
  423950:	cld    
  423951:	mov    ds:0x22562200,al
  423956:	cmc    
  423957:	mov    ebx,0xd52c17d
  42395c:	test   BYTE PTR [ebx],cl
  42395e:	mov    al,0x2f
  423960:	popa   
  423961:	xor    al,0xe8
  423963:	push   esi
  423964:	cli    
  423965:	sbb    esp,esp
  423967:	sahf   
  423968:	test   BYTE PTR [ebx+0x3273d19],ah
  42396e:	bound  esp,QWORD PTR [edi]
  423970:	sbb    BYTE PTR [ebx-0x78],0x68
  423974:	jp     0x423926
  423976:	jns    0x423985
  423978:	mov    bl,0x48
  42397a:	fldcw  WORD PTR [esp+eax*4+0x5]
  42397e:	xlat   BYTE PTR ds:[ebx]
  42397f:	mov    eax,DWORD PTR [esp+esi*4-0x7d]
  423983:	dec    ebp
  423984:	div    ah
  423986:	in     eax,dx
  423987:	dec    ebp
  423988:	fimul  WORD PTR [ebp+0x1b]
  42398b:	jnp    0x423967
  42398d:	iret   
  42398e:	sub    eax,0xb1292164
  423993:	mov    eax,DWORD PTR [ebp-0x4d0858b0]
  423999:	outs   dx,DWORD PTR ds:[esi]
  42399a:	mov    ds:0xe5c97b67,eax
  42399f:	pop    ds
  4239a0:	shr    BYTE PTR [ebx],1
  4239a2:	bound  ecx,QWORD PTR [esi+edi*8+0x741e5345]
  4239a9:	add    bh,BYTE PTR [ebp+ebp*2-0x24db28b7]
  4239b0:	mov    esi,0x6804cd94
  4239b5:	in     al,dx
  4239b6:	je     0x4239e3
  4239b8:	jno    0x423959
  4239ba:	mov    al,ah
  4239bc:	lahf   
  4239bd:	data16 mov ds:0xc134f04c,al
  4239c3:	push   eax
  4239c4:	clc    
  4239c5:	jnp    0x4239b3
  4239c7:	mov    BYTE PTR [ecx-0x420096ff],cl
  4239cd:	jno    0x4239c5
  4239cf:	loope  0x4239fc
  4239d1:	cli    
  4239d2:	sbb    ch,bh
  4239d4:	mov    gs,WORD PTR [edx-0x7dd8f62a]
  4239da:	mov    bl,0x47
  4239dc:	mov    esi,0x5d9f156
  4239e1:	dec    eax
  4239e2:	dec    ecx
  4239e3:	pop    esi
  4239e4:	push   0xfffffff9
  4239e6:	in     al,0x98
  4239e8:	jg     0x423a25
  4239ea:	cld    
  4239eb:	frstor [esi-0x71c547bf]
  4239f1:	(bad)
  4239f6:	jnp    0x4239bd
  4239f8:	mov    ebx,0xaa88e670
  4239fd:	pop    ebx
  4239fe:	test   al,0x23
  423a00:	les    ebx,FWORD PTR [ebp-0x6f19c965]
  423a06:	adc    esp,ebx
  423a08:	dec    edi
  423a09:	std    
  423a0a:	jmp    0x5de50cf8
  423a0f:	popf   
  423a10:	cli    
  423a11:	lods   eax,DWORD PTR ds:[esi]
  423a12:	(bad)  
  423a13:	mov    WORD PTR [ebp-0x71],cs
  423a16:	or     edi,DWORD PTR [eax+0x5c11b5e7]
  423a1c:	adc    al,0x4e
  423a1e:	fild   QWORD PTR [edx+0x70ecc8c6]
  423a24:	hlt    
  423a25:	fwait
  423a26:	retf   
  423a27:	inc    edi
  423a28:	mov    esi,edx
  423a2a:	(bad)  
  423a2b:	adc    ecx,ecx
  423a2d:	pop    esi
  423a2e:	pop    eax
  423a2f:	pop    edi
  423a30:	scas   al,BYTE PTR es:[edi]
  423a31:	lock fs clc 
  423a34:	fidiv  WORD PTR [esi]
  423a36:	mov    BYTE PTR [eax+0x3f2e924a],ah
  423a3c:	cmp    bl,BYTE PTR [ebx-0x4a1f42be]
  423a42:	push   esp
  423a43:	fs cmc 
  423a45:	and    al,0x3b
  423a47:	cli    
  423a48:	ds pop esi
  423a4a:	shl    BYTE PTR [ecx-0x1c4f59cc],1
  423a50:	mov    dl,0xcd
  423a52:	ret    0x7fcc
  423a55:	xchg   ebp,eax
  423a56:	das    
  423a57:	icebp  
  423a58:	sub    eax,0xa7fad905
  423a5d:	sbb    esi,DWORD PTR [edx+ebx*2+0x20]
  423a61:	add    al,0x3e
  423a63:	cmp    bh,BYTE PTR [esi+0x13e167d8]
  423a69:	fdiv   st(2),st
  423a6b:	adc    al,BYTE PTR [eax-0xc408df4]
  423a71:	jbe    0x423a5a
  423a73:	call   0xb8fc:0xc7f63d80
  423a7a:	nop
  423a7b:	sub    DWORD PTR [edi+0x7d],eax
  423a7e:	in     eax,dx
  423a7f:	adc    eax,0xd85882a9
  423a84:	loopne 0x423acd
  423a86:	jo     0x423ad4
  423a88:	or     edx,edx
  423a8a:	in     eax,0xd8
  423a8c:	sub    DWORD PTR [ecx+0x77a9ab35],ebx
  423a92:	pop    ebp
  423a93:	pop    ecx
  423a94:	xchg   ecx,eax
  423a95:	mov    DWORD PTR [edi-0x27],0x7b0fc617
  423a9c:	push   0x4bc16ec
  423aa1:	push   ss
  423aa2:	mov    WORD PTR [esi],es
  423aa4:	out    0xb9,al
  423aa6:	jle    0x423a54
  423aa8:	adc    DWORD PTR [esp+ebx*4],edi
  423aab:	or     DWORD PTR cs:[ebp+0x30],ecx
  423aaf:	ja     0x423ab8
  423ab1:	stc    
  423ab2:	into   
  423ab3:	inc    esi
  423ab4:	rol    BYTE PTR [ecx+0xb],cl
  423ab7:	inc    ebp
  423ab8:	xchg   ebp,eax
  423ab9:	jmp    0x423aa2
  423abb:	inc    edi
  423abc:	lea    ecx,ds:0x6335ff39
  423ac2:	fwait
  423ac3:	push   cs
  423ac4:	pop    ecx
  423ac5:	sub    BYTE PTR [ecx-0x41],cl
  423ac8:	dec    esi
  423ac9:	mov    eax,0x166579fe
  423ace:	adc    eax,0xd6c15674
  423ad3:	push   cs
  423ad4:	adc    BYTE PTR [ebx+ebp*8+0x7c],dl
  423ad8:	xor    ch,ch
  423ada:	mov    BYTE PTR [esi-0x26],dh
  423add:	fsub   DWORD PTR [eax-0x74]
  423ae0:	dec    edi
  423ae1:	pop    esp
  423ae2:	pop    ds
  423ae3:	mov    ah,0x73
  423ae5:	hlt    
  423ae6:	pop    sp
  423ae8:	call   0xae66e4b5
  423aed:	(bad)  
  423aee:	shr    edi,0xe2
  423af1:	inc    edx
  423af2:	cmp    BYTE PTR [esi-0x6c],dh
  423af5:	repz enter 0x4d68,0x11
  423afa:	lahf   
  423afb:	rcr    DWORD PTR [esp+ecx*1-0x31fff428],1
  423b02:	jecxz  0x423b79
  423b04:	test   DWORD PTR [ecx+0x1a99444d],edi
  423b0a:	dec    edi
  423b0b:	dec    ebp
  423b0c:	mov    ecx,0x9acbdb77
  423b11:	cdq    
  423b12:	mov    al,ds:0x719eb76c
  423b17:	xor    eax,0x6fd7b060
  423b1c:	arpl   WORD PTR [edx+0x3ee5a1ef],cx
  423b22:	adc    eax,0x8f1d0e40
  423b27:	adc    bl,BYTE PTR [ecx]
  423b29:	adc    DWORD PTR [esi],esp
  423b2b:	push   ecx
  423b2c:	jno    0x423bad
  423b2e:	sub    esp,DWORD PTR [edx]
  423b30:	(bad)  
  423b31:	aaa    
  423b32:	ror    DWORD PTR [eax-0xaa5de82],cl
  423b38:	(bad)  
  423b39:	mov    fs,WORD PTR [esi-0x24]
  423b3c:	inc    ebx
  423b3d:	add    al,0x2b
  423b3f:	and    DWORD PTR [eax-0x723b74b1],ebx
  423b45:	lods   al,BYTE PTR ds:[esi]
  423b46:	or     dh,BYTE PTR [ecx]
  423b48:	add    bl,BYTE PTR [ecx]
  423b4a:	pop    edx
  423b4b:	aaa    
  423b4c:	cs push ecx
  423b4e:	mov    WORD PTR [ebx],?
  423b50:	push   cs
  423b51:	sbb    al,ah
  423b53:	mov    WORD PTR [edx+0x41],?
  423b56:	rcl    BYTE PTR [edi-0x7a0296cc],1
  423b5c:	fnstcw WORD PTR [edx]
  423b5e:	xor    DWORD PTR [esi-0x30],0xffffffb7
  423b62:	test   DWORD PTR [eax+0x7e],0xdb5e3b68
  423b69:	frstor ds:0xc05e0851
  423b6f:	jbe    0x423afc
  423b71:	push   DWORD PTR [eax+0x4d]
  423b74:	fs cdq 
  423b76:	lahf   
  423b77:	adc    ch,dh
  423b79:	xchg   DWORD PTR [esi+0x1e],edx
  423b7c:	xchg   BYTE PTR ds:0x3608bd81,ch
  423b82:	and    ah,BYTE PTR [eax+edx*4]
  423b85:	dec    edx
  423b86:	clc    
  423b87:	xchg   ebx,eax
  423b88:	in     eax,dx
  423b89:	rcl    DWORD PTR [ebp-0x6d],cl
  423b8c:	jnp    0x423beb
  423b8e:	or     eax,0x57988b13
  423b93:	bound  esi,QWORD PTR [ebx-0x69f1332e]
  423b99:	mov    eax,0x69af6e13
  423b9e:	loop   0x423b6c
  423ba0:	sbb    al,0x1b
  423ba2:	inc    edi
  423ba3:	lods   eax,DWORD PTR ds:[esi]
  423ba4:	out    dx,eax
  423ba5:	sbb    DWORD PTR [esi+0x59cc9d39],edx
  423bab:	xchg   BYTE PTR [ebx-0x14],bl
  423bae:	fist   WORD PTR [ebx+eax*2-0x10]
  423bb2:	pop    esi
  423bb3:	mov    bl,0x1b
  423bb5:	and    edi,DWORD PTR [edi]
  423bb7:	xor    bh,cl
  423bb9:	shl    DWORD PTR [ecx+edx*4+0x5e],1
  423bbd:	mov    bl,0x9b
  423bbf:	icebp  
  423bc0:	jmp    0x79f7:0x88e547f5
  423bc7:	push   eax
  423bc8:	mov    eax,0xaacacfb8
  423bcd:	jmp    0x7bc7eb5d
  423bd2:	pop    ss
  423bd3:	retf   
  423bd4:	sub    ch,ch
  423bd6:	pop    ecx
  423bd7:	rcl    BYTE PTR [edx],0x20
  423bda:	sub    bh,bh
  423bdc:	mov    ah,0x1c
  423bde:	test   BYTE PTR [edx],al
  423be0:	ret    
  423be1:	mov    esp,?
  423be3:	aam    0xd
  423be5:	pop    ebx
  423be6:	xor    al,0x9b
  423be8:	imul   ecx,DWORD PTR [ebx-0x3625fb82],0x69
  423bef:	sti    
  423bf0:	pop    esi
  423bf1:	loop   0x423bdf
  423bf3:	cmp    DWORD PTR [ecx],ebp
  423bf5:	sbb    eax,0x9b31fdbd
  423bfa:	inc    ebx
  423bfb:	(bad)  
  423bfc:	pop    eax
  423bfd:	add    BYTE PTR [edx+eax*4],cl
  423c00:	(bad)  
  423c01:	cld    
  423c02:	cmp    ch,BYTE PTR [ecx+0xcf68d2]
  423c08:	jns    0x423c55
  423c0a:	inc    edx
  423c0b:	add    bh,bh
  423c0d:	push   ss
  423c0e:	pop    es
  423c0f:	mov    WORD PTR [esi-0x7e6c29de],?
  423c15:	xor    bp,di
  423c18:	jg     0x423c16
  423c1a:	xchg   BYTE PTR [ebx],bl
  423c1c:	fidiv  WORD PTR [ecx-0x56]
  423c1f:	adc    bl,BYTE PTR [ecx]
  423c21:	iret   
  423c22:	xchg   ebx,eax
  423c23:	mov    ah,0x8a
  423c25:	aam    0xae
  423c27:	lea    edx,[esi]
  423c29:	stos   BYTE PTR es:[edi],al
  423c2a:	jne    0x423c0e
  423c2c:	xor    ecx,DWORD PTR [esi-0x3908b22a]
  423c32:	sub    ch,0x7e
  423c35:	int    0x86
  423c37:	fistp  WORD PTR [eax]
  423c39:	(bad)  
  423c3a:	push   eax
  423c3b:	dec    edi
  423c3c:	stc    
  423c3d:	push   esp
  423c3e:	xchg   ebx,eax
  423c3f:	std    
  423c40:	cmp    al,0x57
  423c42:	jbe    0x423c39
  423c44:	ins    BYTE PTR es:[edi],dx
  423c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c46:	cmp    DWORD PTR [ebx+0x7],esp
  423c49:	and    esi,DWORD PTR [edi+0x39a57a55]
  423c4f:	sbb    eax,0x27fcfe9f
  423c54:	dec    esp
  423c55:	mov    ds:0x68552861,al
  423c5a:	test   DWORD PTR [edi-0x72003c03],0xfd4ccafe
  423c64:	imul   ebp,DWORD PTR [edx],0x2d94eaa3
  423c6a:	pop    eax
  423c6b:	jmp    0xfa94:0x2fc5358b
  423c72:	ss dec ebx
  423c74:	xor    al,0xeb
  423c76:	out    dx,al
  423c77:	shr    DWORD PTR [eax-0x68],0xe1
  423c7b:	push   cs
  423c7c:	jb     0x423c46
  423c7e:	test   eax,0x65057cb8
  423c83:	xchg   edi,eax
  423c84:	call   0xe5100d14
  423c89:	xor    BYTE PTR [edi],0x33
  423c8c:	lods   al,BYTE PTR ds:[esi]
  423c8d:	cld    
  423c8e:	dec    ebx
  423c8f:	dec    edx
  423c90:	jbe    0x423ca0
  423c92:	lods   al,BYTE PTR ds:[esi]
  423c93:	retf   
  423c94:	fidiv  DWORD PTR [esi-0x1b]
  423c97:	sub    al,0x99
  423c99:	xor    BYTE PTR [esi],bl
  423c9b:	mov    ebx,0x7fe1475c
  423ca0:	fstp   TBYTE PTR [edi-0xb869df6]
  423ca6:	sahf   
  423ca7:	(bad)  
  423ca8:	and    BYTE PTR [edi-0x35],dl
  423cab:	(bad)  
  423cac:	(bad)  
  423cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cae:	aad    0x15
  423cb0:	adc    al,0xf3
  423cb2:	enter  0x1974,0xbf
  423cb6:	fild   QWORD PTR ds:0x1d779c1f
  423cbc:	inc    ecx
  423cbd:	adc    al,0xf3
  423cbf:	gs in  al,0xc9
  423cc2:	fild   QWORD PTR [esi-0x2e24dcc6]
  423cc8:	nop
  423cc9:	cmp    al,0xf4
  423ccb:	sti    
  423ccc:	mov    dl,0x96
  423cce:	adc    al,0xe8
  423cd0:	lock xchg edx,eax
  423cd2:	les    esi,FWORD PTR [ecx-0x5c14a596]
  423cd8:	inc    edx
  423cd9:	icebp  
  423cda:	cmp    al,0xa4
  423cdc:	or     ah,BYTE PTR [ecx+0x12834ed8]
  423ce2:	adc    al,0x2c
  423ce4:	mov    al,0x45
  423ce6:	jmp    0xa562:0xc9350442
  423ced:	stc    
  423cee:	jle    0x423c9e
  423cf0:	push   ebp
  423cf1:	jg     0x423d2f
  423cf3:	dec    esi
  423cf4:	shl    BYTE PTR [ebp+0x65],cl
  423cf7:	mov    al,ds:0xcedf7f91
  423cfc:	addr16 inc eax
  423cfe:	cmp    DWORD PTR [edx],ebx
  423d00:	call   0x760cf2fa
  423d05:	mov    ecx,0x12fd5499
  423d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d0b:	lds    esi,FWORD PTR [esp+ebx*4]
  423d0e:	jmp    0x3a10:0x3c2ffe29
  423d15:	mul    DWORD PTR [ebp+0x39c658dc]
  423d1b:	lds    ebx,FWORD PTR [edi+0x509315a6]
  423d21:	jmp    0x3691:0xbb2f3957
  423d28:	mov    DWORD PTR [ecx-0x199e0148],0x733a5fe
  423d32:	daa    
  423d33:	mov    bh,BYTE PTR [ecx]
  423d35:	int    0x1c
  423d37:	mov    edi,0xdfb02fde
  423d3c:	loopne 0x423d03
  423d3e:	shl    edx,0x78
  423d41:	dec    edx
  423d42:	pop    ss
  423d43:	shr    BYTE PTR [ebp-0x29],1
  423d46:	or     eax,0xa1d9b78d
  423d4b:	mov    ss:0x167de3ac,eax
  423d51:	ins    BYTE PTR es:[edi],dx
  423d52:	scas   eax,DWORD PTR es:[edi]
  423d53:	stc    
  423d54:	mov    ebp,0x74d2832d
  423d59:	adc    DWORD PTR [esi-0xa],0xffffffa3
  423d5d:	fst    DWORD PTR [edi+0x2ef56d2d]
  423d63:	loopne 0x423d2c
  423d65:	pushf  
  423d66:	aam    0xe4
  423d68:	and    eax,0xfc92b681
  423d6d:	inc    eax
  423d6e:	pop    edi
  423d6f:	pop    ebp
  423d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d71:	not    BYTE PTR ds:0xb12b3985
  423d77:	(bad)  
  423d79:	mov    WORD PTR [ecx+edi*1],ss
  423d7c:	lea    ecx,[edx]
  423d7e:	cwde   
  423d7f:	inc    ebx
  423d80:	sbb    ebp,ecx
  423d82:	mov    bl,0x74
  423d84:	and    BYTE PTR [esi+edi*8],cl
  423d87:	push   esi
  423d88:	jp     0x423dd9
  423d8a:	sbb    ch,BYTE PTR [edi-0x2b]
  423d8d:	adc    DWORD PTR [ebx],edi
  423d8f:	retf   
  423d90:	cmp    DWORD PTR [edi+ebx*1],esp
  423d93:	pop    esp
  423d94:	int3   
  423d95:	or     dh,0x8d
  423d98:	mov    al,0xd2
  423d9a:	int    0x73
  423d9c:	push   ds
  423d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d9e:	cmc    
  423d9f:	inc    ebx
  423da0:	(bad)  
  423da1:	xor    esi,DWORD PTR ds:0xde4a28d8
  423da7:	ss lahf 
  423da9:	push   0x8d98b728
  423dae:	dec    ecx
  423daf:	fistp  QWORD PTR [ebp+0x26]
  423db2:	(bad)
  423db5:	fidivr WORD PTR [ebp+0x21]
  423db8:	xor    ebp,DWORD PTR [ebx+ebx*2]
  423dbb:	addr16 into 
  423dbd:	dec    ebx
  423dbe:	sub    dl,bl
  423dc0:	test   DWORD PTR [edx-0x34],ecx
  423dc3:	push   ebx
  423dc4:	lahf   
  423dc5:	ins    DWORD PTR es:[edi],dx
  423dc6:	outs   dx,BYTE PTR ds:[esi]
  423dc7:	test   ch,cl
  423dc9:	xlat   BYTE PTR ds:[ebx]
  423dca:	leave  
  423dcb:	test   al,0x66
  423dcd:	hlt    
  423dce:	test   al,0x9e
  423dd0:	fidiv  DWORD PTR [edi+eax*8+0x57]
  423dd4:	leave  
  423dd5:	adc    al,0x7d
  423dd7:	fchs   
  423dd9:	adc    eax,0x8ec2b7b
  423dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ddf:	ins    BYTE PTR es:[edi],dx
  423de0:	in     al,0x2c
  423de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423de3:	retf   0x7c78
  423de6:	cmp    ah,0xff
  423de9:	shr    BYTE PTR cs:[edi],0xd5
  423ded:	stos   BYTE PTR es:[edi],al
  423dee:	or     eax,0xb915ecf3
  423df3:	and    ebx,DWORD PTR [eax]
  423df5:	daa    
  423df6:	xchg   ebx,eax
  423df7:	scas   eax,DWORD PTR es:[edi]
  423df8:	mov    esi,0xeccbe385
  423dfd:	pop    esi
  423dfe:	cdq    
  423dff:	mov    edi,0xc1891f55
  423e04:	mov    esi,0x3b6c5e12
  423e09:	inc    eax
  423e0a:	cmp    DWORD PTR [edi-0x3191bc1b],edi
  423e10:	cmp    DWORD PTR [esi+0xad1f065],ecx
  423e16:	daa    
  423e17:	mov    ?,WORD PTR [ebp+ebx*1-0x10]
  423e1b:	les    ebx,FWORD PTR [edi+0x210cd41e]
  423e21:	inc    ebp
  423e22:	dec    esi
  423e23:	test   eax,0xce72e339
  423e28:	sar    BYTE PTR [ecx],1
  423e2a:	lahf   
  423e2b:	xchg   edi,eax
  423e2c:	xlat   BYTE PTR ds:[ebx]
  423e2d:	jmp    0x9238:0x68b4e0ec
  423e34:	xchg   esp,eax
  423e35:	dec    eax
  423e36:	cld    
  423e37:	add    DWORD PTR [edx],0xeda2378a
  423e3d:	or     ch,ah
  423e3f:	push   ss
  423e40:	mov    ebp,0xb2e7a468
  423e45:	sbb    ch,BYTE PTR [edi-0x58231e8f]
  423e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e4c:	mov    dh,0x7
  423e4e:	xchg   ebx,eax
  423e4f:	jl     0x423e8d
  423e51:	in     eax,0xef
  423e53:	pop    ebp
  423e54:	push   esi
  423e55:	push   ds
  423e56:	jmp    0x90ce:0xfe31f6d5
  423e5d:	scas   eax,DWORD PTR es:[edi]
  423e5e:	(bad)  
  423e5f:	fsubr  QWORD PTR gs:[ebx+edx*8-0x6b]
  423e64:	xor    BYTE PTR [esi],bh
  423e66:	out    0xb5,eax
  423e68:	ror    BYTE PTR [edi+0x11],cl
  423e6b:	inc    esi
  423e6c:	pop    ebp
  423e6d:	mov    ds:0xd7ec2452,al
  423e72:	adc    DWORD PTR [edi+edi*8-0x505c170d],ecx
  423e79:	mov    al,cl
  423e7b:	sbb    al,0x53
  423e7d:	in     al,dx
  423e7e:	mov    esp,0xbb137a88
  423e83:	add    al,0x97
  423e85:	aad    0xd3
  423e87:	mov    edi,DWORD PTR [edx+edi*2]
  423e8a:	js     0x423e13
  423e8c:	pop    es
  423e8d:	sub    ch,BYTE PTR [edx]
  423e8f:	mov    eax,0x27c7fb71
  423e94:	adc    DWORD PTR [edx-0x10d96544],ebx
  423e9a:	mov    ebx,DWORD PTR [ebx+0x247a48d8]
  423ea0:	inc    ecx
  423ea1:	aaa    
  423ea2:	inc    ecx
  423ea3:	cdq    
  423ea4:	mov    cl,0x80
  423ea6:	sub    al,0x17
  423ea8:	leave  
  423ea9:	fcomi  st,st(6)
  423eab:	loop   0x423f03
  423ead:	or     DWORD PTR ds:0xfa46534f,ecx
  423eb3:	or     BYTE PTR [edi],dh
  423eb5:	cmp    BYTE PTR [esi-0x27],0xc1
  423eb9:	pop    ecx
  423eba:	fist   DWORD PTR [eax]
  423ebc:	xor    al,0xd
  423ebe:	iret   
  423ebf:	xor    al,0x93
  423ec1:	fsub   QWORD PTR ds:0x6128ad1b
  423ec7:	addr16 jmp 0x178eac08
  423ecd:	hlt    
  423ece:	sub    DWORD PTR [ebx-0x6d823bc9],ebp
  423ed4:	add    DWORD PTR [edx+0x5c],ebx
  423ed7:	push   ebp
  423ed8:	xor    eax,0xc8d4054a
  423edd:	xchg   edi,eax
  423ede:	add    bh,BYTE PTR [edi+eax*4+0x55]
  423ee2:	call   0x9a8d:0x33019b4f
  423ee9:	leave  
  423eea:	out    dx,eax
  423eeb:	jp     0x423f37
  423eed:	nop
  423eee:	mov    BYTE PTR [eax+0x1a2609d0],ah
  423ef4:	xor    ch,BYTE PTR [esi+0x38]
  423ef7:	std    
  423ef8:	mov    esi,DWORD PTR [ebp-0x31]
  423efb:	loope  0x423ec2
  423efd:	lods   eax,DWORD PTR ds:[esi]
  423efe:	or     al,0xc0
  423f00:	mov    ecx,DWORD PTR ds:0x888d905d
  423f06:	adc    bh,0x70
  423f09:	adc    DWORD PTR [edi],0xffffff90
  423f0c:	mov    bl,0x10
  423f0e:	test   al,0x8e
  423f10:	sete   BYTE PTR [esi+0x13d0d32a]
  423f17:	pop    ebp
  423f18:	(bad)  
  423f19:	jnp    0x423f56
  423f1b:	leave  
  423f1c:	pop    esi
  423f1d:	ins    BYTE PTR es:[edi],dx
  423f1e:	into   
  423f1f:	cmp    eax,0x55cf86e4
  423f24:	and    DWORD PTR [eax+0x4339abe5],edi
  423f2a:	xor    bl,BYTE PTR [esi+eax*2]
  423f2d:	lock int 0x7f
  423f30:	gs jg  0x423f65
  423f33:	push   es
  423f34:	sbb    bl,ah
  423f36:	ds or  eax,0x9c03e9f7
  423f3c:	das    
  423f3d:	adc    BYTE PTR [ebp+0x27564fe0],0x9e
  423f44:	cmc    
  423f45:	jns    0x423efc
  423f47:	mov    ah,0x5f
  423f49:	push   ss
  423f4a:	adc    eax,0x62cc6672
  423f4f:	ds jmp 0x423ee6
  423f52:	test   eax,0x17079ceb
  423f57:	push   0x43fd957c
  423f5c:	jae    0x423fad
  423f5e:	or     ch,BYTE PTR [ebx]
  423f60:	or     ecx,DWORD PTR [esi]
  423f62:	inc    edi
  423f63:	pop    ebx
  423f64:	popf   
  423f65:	(bad)  
  423f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f67:	cmp    ch,BYTE PTR [ecx]
  423f69:	mov    ebx,0x4d32439e
  423f6e:	mov    cl,0xa9
  423f70:	jbe    0x423f55
  423f72:	push   0x319dab75
  423f77:	ret    
  423f78:	dec    ebp
  423f79:	stos   DWORD PTR es:[edi],eax
  423f7a:	leave  
  423f7b:	mov    eax,0x9a626be4
  423f80:	div    ch
  423f82:	int3   
  423f83:	xchg   ebp,eax
  423f84:	inc    esp
  423f85:	mov    dl,0x5
  423f87:	jae    0x423f57
  423f89:	sub    eax,0x2dae7c2d
  423f8e:	sub    eax,DWORD PTR [edx-0x2e]
  423f91:	add    ebx,esp
  423f93:	cli    
  423f94:	pop    ebp
  423f95:	nop
  423f96:	sub    al,0xc4
  423f98:	push   ebx
  423f99:	in     al,dx
  423f9a:	mov    esp,0x844627b7
  423f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fa0:	fmulp  st(5),st
  423fa2:	sub    bl,0xd0
  423fa5:	neg    DWORD PTR [eax+0x31]
  423fa8:	mov    di,0x6ed1
  423fac:	adc    DWORD PTR [ecx+0x334da750],edx
  423fb2:	retf   0x980a
  423fb5:	push   cs
  423fb6:	jbe    0x423fab
  423fb8:	and    esp,DWORD PTR [ecx-0x570142ac]
  423fbe:	into   
  423fbf:	popa   
  423fc0:	cmp    BYTE PTR [ebx],bl
  423fc2:	dec    edi
  423fc3:	xchg   ecx,eax
  423fc4:	dec    esp
  423fc5:	hlt    
  423fc6:	sbb    DWORD PTR [ecx-0x52],eax
  423fc9:	or     al,0x83
  423fcb:	mov    ds:0xee2c3466,eax
  423fd0:	jbe    0x423fac
  423fd2:	and    bl,al
  423fd4:	push   ss
  423fd5:	xor    DWORD PTR [edx],ebx
  423fd7:	mov    ?,WORD PTR [edi-0x551b16c0]
  423fdd:	xchg   esi,eax
  423fde:	xor    ch,BYTE PTR [esi]
  423fe0:	stos   BYTE PTR es:[edi],al
  423fe1:	cmp    al,0xb6
  423fe3:	pminsw mm3,QWORD PTR ds:0x832fe515
  423fea:	sub    eax,0xffffffa4
  423fed:	mov    ch,0x30
  423fef:	mov    dh,0x7e
  423ff1:	dec    esi
  423ff2:	ins    BYTE PTR es:[edi],dx
  423ff3:	js     0x423ff8
  423ff5:	push   ss
  423ff6:	aaa    
  423ff7:	xor    al,0x5c
  423ff9:	fxch   st(2)
  423ffb:	repz dec edi
  423ffd:	mul    ebx
  423fff:	ss stos BYTE PTR es:[edi],al
  424001:	test   DWORD PTR [edi+0x54322ad4],edx
  424007:	pop    ss
  424008:	iret   
  424009:	clc    
  42400a:	mov    al,ds:0x24ff4bf4
  42400f:	jmp    0x423f96
  424011:	idiv   BYTE PTR [edx-0x5354d87d]
  424017:	adc    BYTE PTR [eax],bh
  424019:	sti    
  42401a:	pop    esp
  42401b:	in     al,0x7e
  42401d:	add    BYTE PTR [ebx-0x4f],dh
  424020:	dec    ebp
  424021:	jb     0x423fd0
  424023:	test   cl,bh
  424025:	mov    esp,0xf3e5055c
  42402a:	mov    dl,dh
  42402c:	call   0x7ab4f0ea
  424031:	mov    edx,ds
  424033:	jbe    0x424072
  424035:	data16 mov dl,0x2c
  424038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424039:	int    0x66
  42403b:	or     DWORD PTR [ebp-0x226719dd],esi
  424041:	mov    edi,DWORD PTR [edx-0x19812718]
  424047:	or     DWORD PTR [edi+0x7537f93f],0xffffff8b
  42404e:	and    BYTE PTR [edx+0x17],al
  424051:	sub    al,BYTE PTR [esi]
  424053:	mov    ecx,0x1f83a4f9
  424058:	cmp    eax,0x936c7160
  42405d:	leave  
  42405e:	add    al,0x83
  424060:	shl    al,1
  424062:	ret    
  424063:	repz data16 addr16 gs mov dl,0xc1
  424069:	stc    
  42406a:	outs   dx,BYTE PTR ds:[esi]
  42406b:	retf   
  42406c:	jno    0x424093
  42406e:	call   0x82b9:0x977195a6
  424075:	scas   al,BYTE PTR es:[edi]
  424076:	in     eax,0xef
  424078:	mov    ebp,0x456e3cf0
  42407d:	enter  0x1f25,0x10
  424081:	cwde   
  424082:	loop   0x424027
  424084:	and    DWORD PTR [edx+0x35f8e961],edx
  42408a:	push   0xffffffd0
  42408c:	pop    edi
  42408d:	mov    esp,0x8f20e578
  424092:	inc    edi
  424093:	add    BYTE PTR [edi+0x6],ah
  424096:	icebp  
  424097:	shl    edx,cl
  424099:	inc    ecx
  42409a:	pop    ds
  42409b:	and    al,0xa5
  42409d:	ret    0x27d9
  4240a0:	test   ch,bh
  4240a2:	in     eax,0x24
  4240a4:	sub    dh,BYTE PTR [eax]
  4240a6:	rcr    BYTE PTR [esi],cl
  4240a8:	adc    eax,0x4d0c5156
  4240ad:	mov    ebx,0xf2c5561b
  4240b2:	push   eax
  4240b3:	jle    0x4240dd
  4240b5:	sub    al,BYTE PTR [ebx+edx*8]
  4240b8:	idiv   ch
  4240ba:	jb     0x424118
  4240bc:	xlat   BYTE PTR ds:[ebx]
  4240bd:	lahf   
  4240be:	dec    esi
  4240bf:	push   edx
  4240c0:	dec    ebp
  4240c1:	pop    esp
  4240c2:	fst    DWORD PTR ds:[ecx]
  4240c5:	es and eax,0x290d0b46
  4240cb:	imul   BYTE PTR [ecx-0xa354927]
  4240d1:	or     cl,bl
  4240d3:	loope  0x4240a6
  4240d5:	ins    BYTE PTR es:[edi],dx
  4240d6:	scas   al,BYTE PTR es:[edi]
  4240d7:	(bad)  
  4240d9:	adc    DWORD PTR [edx-0x2e],edx
  4240dc:	imul   DWORD PTR [edx-0xa]
  4240df:	cmp    al,0xc
  4240e1:	cmp    DWORD PTR [eax+0x775db922],ecx
  4240e7:	pop    ss
  4240e8:	loopne 0x424156
  4240ea:	mov    cl,0x10
  4240ec:	ss mov bl,0x8f
  4240ef:	repz sbb al,dl
  4240f2:	dec    edx
  4240f3:	pushf  
  4240f4:	fstp   TBYTE PTR ds:0xd0c2d2ee
  4240fa:	iret   
  4240fb:	in     eax,0x6e
  4240fd:	fwait
  4240fe:	jne    0x424154
  424100:	or     eax,0xc884bc83
  424105:	and    edx,esi
  424107:	add    al,0x65
  424109:	cs add eax,0x26adb3a2
  42410f:	xchg   ecx,eax
  424110:	shl    DWORD PTR [esp+0x1f05d23],1
  424117:	loopne 0x424111
  424119:	mov    dl,0x4b
  42411b:	test   al,0x83
  42411d:	retf   
  42411e:	push   edi
  42411f:	cmp    BYTE PTR [eax],ch
  424121:	jmp    0x42419c
  424123:	mov    bl,0x6e
  424125:	pop    es
  424126:	je     0x4240c1
  424128:	push   0xffffffc7
  42412a:	adc    DWORD PTR [ecx-0x10c7c704],edx
  424130:	jne    0x424165
  424132:	aas    
  424133:	inc    esp
  424134:	xlat   BYTE PTR ds:[ebx]
  424135:	and    eax,0x25590a5a
  42413a:	sbb    eax,0xad50303d
  42413f:	sbb    dl,BYTE PTR [edx+0x49]
  424142:	jb     0x4241ae
  424144:	adc    al,0xb8
  424146:	mov    ds:0x5bf89c85,al
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a3f7
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a3ff
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a403
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429dcf
  4242e2:	mov    ecx,DWORD PTR ds:0x429dd7
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a407
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429dbb
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	(bad)  
  424455:	js     0x42444b
  424457:	in     al,0x23
  424459:	mov    edx,0xc9bb41ad
  42445e:	cmp    esi,DWORD PTR [ebx]
  424460:	dec    ebp
  424461:	pcmpgtd mm5,mm6
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
